sbb
add
mov
pushf
mov
add
loopne
adc
daa
sbb
mov
orl
out
or
push
mov
outsl
xchg
sti
lahf
aam
popa
scas
sub
or
outsl
mov
jmp
in
mov
fld
pop
inc
js
cltd
add
rcrb
fidivl
mov
mov
add
push
outsb
mov
addr16
or
cmc
rorb
mov
mov
rorb
adc
jno
jae
inc
aad
les
int3
pop
ret
pop
cmp
in
sub
lcall
push
add
sbb
mov
sub
cmp
stos
xchg
jne
lahf
cmp
push
add
sub
test
xlat
roll
inc
pop
sub
sti
mov
loop
push
xchg
scas
test
inc
cmp
pop
arpl
leave
stos
pushf
lock
xchg
pop
aam
jge
jl
repz
and
pop
mov
cmp
cmpsb
sbb
aas
repnz
pusha
lahf
push
loop
xorl
shlb
push
xchg
cmc
push
jnp
test
mov
jecxz
test
mov
inc
cmp
pushf
loope
push
mov
inc
dec
andl
jecxz
cmp
ret
data16
shll
cmp
test
mov
pop
popf
fstpl
cmpsl
mov
clc
mov
add
add
xor
push
mov
loopne
movsb
pop
push
sbb
into
mov
scas
lret
mov
imul
aas
rol
lcall
pop
stos
loopne
fadds
jg
test
add
fidivrs
mov
add
push
div
insb
push
outsb
stos
insb
pushf
pop
out
shll
push
fisubrs
cmp
sub
shrb
mov
stos
sbb
test
xor
jge
mov
xlat
jo
clc
mov
cmp
out
pop
roll
insb
push
js
rclb
add
ljmp
xchg
dec
stc
aad
cmc
xchg
push
fldcw
mov
push
pop
push
bound
movsb
repnz
movsl
call
dec
clc
xor
icebp
clc
mov
std
lahf
pop
imul
shrd
frstor
pop
mov
inc
cmp
xor
iret
data16
cltd
inc
fcmovb
mov
insl
notb
out
mov
shlb
testb
inc
arpl
mov
sbb
popw
mov
mov
push
movsl
cmp
ljmp
push
lret
nop
in
jns
lods
pushf
movsb
ds
add
mov
jne
cwtl
pop
adc
jle
xchg
adc
mov
les
cmc
inc
or
sub
jae
cli
adc
fistpll
hlt
mov
fnstenv
xchg
loopne
mov
or
cmp
jb
movsb
lret
pop
test
arpl
insb
pop
loop
jg
sbb
dec
je
jl
js
stos
icebp
mov
je
mov
push
fs
inc
pop
int
mov
push
addb
addr16
cmc
pop
adc
xor
fs
xor
gs
mov
inc
add
ret
jae
call
in
add
pop
mov
cmp
mov
pop
mov
xor
fnsave
imul
push
xchg
jne
enter
sub
out
pop
and
jmp
mov
nop
add
xor
mov
andb
push
jae
out
gs
pop
jmp
mov
int
decl
jp
mov
pushw
push
stos
fiadds
fadds
xorb
repnz
fsubr
mov
mov
add
pop
mov
jge
xor
lahf
mov
bound
jle
in
aaa
xchg
repnz
leave
push
xchg
and
pusha
add
into
adc
adc
das
in
add
inc
outsl
dec
mov
xchg
nop
outsl
ret
mov
aad
mov
sub
repnz
push
pop
lods
sbb
int
sbb
pop
fdivp
push
lcall
scas
or
gs
cli
mov
push
push
ror
push
shll
and
loope
aam
mov
inc
xchg
cmp
nop
fcom
add
hlt
add
int3
mov
psllw
adc
cwtl
or
test
aad
daa
out
aam
inc
es
push
orl
and
mov
fs
fnsetpm(287
das
aaa
jns
inc
stos
dec
in
sub
push
mov
cmp
mov
out
jecxz
adc
test
mov
repnz
lods
push
jne
push
aas
daa
sub
sub
in
stc
insb
out
xor
pop
sbb
ficomps
clc
sbb
paddsb
movsb
push
mov
xchg
lret
mov
and
sbbb
xor
dec
in
pop
push
push
xchg
and
and
cli
jo
aaa
stos
push
ljmp
dec
rclb
lret
loope
scas
stos
xor
aam
or
jno
push
test
out
mov
rcrb
adc
cs
push
lock
inc
xchg
enter
fdivrp
mov
jmp
mov
call
and
mov
loopne
jp
push
add
outsb
rclb
inc
jmp
dec
cmp
bound
in
rclb
ret
mov
push
loopne
adc
add
out
psubw
sbb
sbb
jno
rcrb
sahf
imul
nop
insb
inc
rol
insl
ds
push
xchg
in
out
cs
cli
add
adc
cmp
sub
out
mov
cmp
dec
cltd
mov
lret
adc
dec
xor
pushf
cwtl
xor
mov
stos
test
adc
test
xor
inc
nop
cmp
mov
push
clc
aaa
rol
sahf
mov
or
adc
xlat
lods
jno
jg
add
push
sub
inc
inc
inc
lcall
sahf
pop
adc
out
in
inc
mov
inc
push
jle
dec
mull
stos
push
mov
scas
out
mov
addr16
arpl
das
insl
sbb
mov
fsubs
int3
mov
push
jecxz
mov
push
adc
fnstcw
enter
mov
ret
and
and
push
ret
or
scas
sub
or
repnz
mov
mov
xchg
sbb
xchg
jb
ficompl
outsb
jbe
lret
cwtl
mov
push
gs
cmp
adc
lods
daa
or
sbb
movsl
push
adc
sbb
clc
je
cmpb
jge
or
push
push
sti
jge
ret
lods
enter
les
test
scas
sbb
inc
dec
das
stc
jne
dec
mov
xor
inc
fldpi
stc
sbb
inc
imull
add
xor
inc
inc
and
mov
lahf
cmpsl
or
mov
enter
pop
stos
movsl
mov
outsl
adc
test
mov
cmp
or
dec
shlb
fldcw
sbb
test
rorb
repnz
pop
inc
or
fisttps
cmp
cli
cmp
adc
or
add
push
imul
jnp
mov
divl
and
and
arpl
fs
sub
jecxz
pop
movsl
sbb
nop
pop
fadds
scas
out
cwtl
int
or
loop
mov
mov
test
sub
rcll
mov
lret
push
aas
shll
xor
inc
jmp
dec
pop
aas
out
mov
xchg
dec
or
xor
das
scas
nop
sbb
add
cmp
fdivrl
pop
or
inc
pop
leave
repz
jmp
jns
out
int
icebp
and
inc
mov
lret
test
jl
cli
mov
or
sar
stc
shlb
push
jae
mov
mov
mov
mov
aas
lds
dec
adcb
cmp
int3
jbe
push
outsb
dec
pop
mov
stos
fdivrl
ret
xor
or
cwtl
cmp
dec
mov
imul
popf
and
adc
ffree
fisttps
ljmp
sub
loop
in
loopne
sbb
fbstp
orl
shll
je
pop
cli
mov
dec
mov
push
lret
in
sub
xchg
push
jbe
fistpl
mov
add
in
and
add
jae
popa
ljmp
fmull
cmp
outsb
fcomps
in
mov
push
loop
and
push
jbe
out
jns
sbb
fidivl
sahf
or
in
out
add
or
mov
mov
xor
add
sub
sub
xor
out
push
inc
iret
cmp
loopne
push
sub
loope
xchg
rcrb
jae
xchg
and
inc
ljmp
inc
inc
cmp
push
daa
xchg
mov
jl
sbb
cmpsl
je
jg
sbb
ret
jmp
sbb
js
sbb
sbb
dec
movsl
aad
icebp
adc
pop
mov
mov
or
mov
aad
sub
jbe
stos
mov
rorb
pop
cwtl
add
push
int
push
or
add
add
mov
fmul
sbbl
mov
jl
jg,pt
filds
adc
sub
jmp
enter
jmp
xchg
adc
xchg
leave
out
cld
call
popf
out
shll
ret
into
jo
sub
pop
cmp
pop
aad
adc
sub
mov
fmull
sub
mov
out
call
fildll
add
mov
jbe
xor
fsubrl
mov
mov
inc
pop
xor
lods
mov
xchg
imul
addr16
icebp
bound
test
mov
lods
inc
pop
jno
sub
xchg
mov
fs
jae
sub
mov
pop
fs
add
mov
sbb
adc
push
ja
je
xchg
lret
imul
inc
adc
negl
dec
jle
adc
mov
push
cmpsb
fdivrp
cs
push
mov
dec
jns
std
and
popl
inc
adcb
cmpsb
sbb
inc
xor
cmpsb
add
and
jne
lret
xor
ds
and
lret
fs
mov
push
scas
icebp
repnz
mov
ljmp
fnsave
push
dec
mov
mov
fsubrs
and
xchg
idivl
jns
ss
jae
or
sbb
insl
pop
js,pn
push
pop
xlat
push
subb
mov
or
fidivrl
and
aas
out
pop
push
out
adc
scas
scas
sbb
jne
xchg
dec
adc
ljmp
xchg
push
in
mov
jo
popf
addl
lds
pop
sub
ret
push
inc
pusha
lret
xchg
mov
imul
loopne
mov
jp
xor
push
dec
andl
ret
lcall
fists
ret
mov
or
sbb
movntps
sub
out
and
dec
stos
movsb
xor
jge
jb
pop
and
insl
add
and
inc
xor
mov
xor
test
or
aam
call
cwtl
mov
sub
test
outsl
sub
and
pop
or
in
cmp
lahf
jb
inc
jb
out
push
pop
ret
adc
hlt
ret
out
dec
xlat
inc
cld
jnp
mov
rcrl
jl
mov
orb
mov
jo
xor
cmp
mov
lock
dec
xor
add
xorl
or
lods
gs
dec
xchg
add
cs
je
jp
rclb
mov
mov
sub
arpl
mov
adc
icebp
jecxz
mov
cmpsl
dec
add
test
outsb
or
sub
outsb
mov
imull
inc
out
add
testb
movsl
fdivr
out
jo
or
sub
jne
sahf
gs
sbb
and
push
mov
rclb
ficoms
pop
sahf
xor
pop
xchg
ret
test
jmp
in
call
pop
adc
dec
rdtsc
inc
push
dec
lods
cli
sahf
popf
test
push
mov
loope
or
jle
leave
and
stos
mov
decl
dec
mov
adc
lds
mov
dec
add
mov
repnz
bnd
inc
mov
out
rcl
cmp
imull
imul
hlt
push
push
cmp
mov
mov
and
jle
mov
dec
ret
mov
inc
jle
push
push
mov
scas
mov
ljmp
fnstenv
jmp
add
jbe
add
repnz
pushf
sbb
or
xor
inc
je
or
movsl
bound
sub
andb
into
jo
dec
or
in
clc
adc
sbb
jno
scas
ja
cmp
lret
call
mov
leave
sarb
mov
pop
cmc
jb
xchg
idivl
imul
lods
sahf
lahf
enter
ljmp
popa
add
int
icebp
inc
sbb
gs
imull
add
pushf
dec
cwtl
flds
cmp
push
sub
testb
cmpsl
fistpll
dec
xchg
shrb
pusha
dec
jecxz
push
sbb
scas
xlat
mov
mov
push
lcall
jl
fmull
adcl
cmp
xor
dec
xchg
pushf
dec
shrl
add
jne
xor
xchg
mov
lret
push
mov
pop
pop
push
inc
or
inc
push
popa
sub
cmpsl
xchg
and
out
popa
fs
xor
xor
sbb
ret
shlb
inc
ja
sti
frstor
pop
aam
cld
jo
aam
repnz
xchg
push
aam
sub
in
sbb
mov
lcall
lret
jmp
xor
xchg
dec
pop
ja
hlt
xchg
xor
mov
mov
xchg
pop
add
scas
jp
pop
enter
outsb
arpl
mov
adc
cmpsl
push
mov
xchg
test
fdivs
sarb
ja
push
gs
xor
and
adc
lds
cmpsb
dec
bound
pop
mov
push
lret
jne
mov
and
inc
jp
push
out
ret
je
xchg
loop
clc
fldt
sbb
dec
or
pop
jno
xor
mov
sub
adc
mov
mov
aaa
cld
mov
mov
cmp
aam
inc
pop
adcb
jb
in
jo
jno
sar
enter
sub
pop
sub
das
lea
cmp
mov
pop
inc
xor
sti
dec
out
lods
hlt
cld
repz
xchg
ja
mov
je
jecxz
add
shrl
icebp
push
std
push
js
loopne
pop
jbe
or
inc
and
xchg
ds
jle
rolb
sahf
push
add
mov
test
rcl
cwtl
sbb
in
push
dec
outsb
ret
jle
addb
movups
mov
shrb
inc
and
les
cmpsb
push
aaa
mov
sub
testb
inc
dec
sti
and
or
shl
add
in
in
mov
out
aam
call
int3
rcrb
add
mov
jns
push
sub
fsincos
subb
aad
jle
sbb
xlat
hlt
pop
mov
cmp
divl
mov
mov
lods
dec
data16
popa
mov
fmuls
xor
jmp
cmpsb
arpl
rolb
inc
cmp
cmp
or
adc
imul
leave
repnz
hlt
cmpsb
fcmovu
scas
xchg
sidtl
adc
pop
lods
sub
cmp
adc
inc
jb
int
enter
clc
lahf
mov
push
cmp
cmp
cltd
dec
or
dec
ds
icebp
out
xchg
cmp
xchg
das
call
xorl
mov
leave
inc
ficompl
adc
das
pushf
add
mov
and
cltd
and
xchg
bound
adc
jg
scas
enter
in
lds
inc
inc
arpl
int
xor
and
mov
mov
mov
jbe
xor
mov
jp
out
insb
fwait
or
imul
pusha
sub
ret
vcvttss2si
or
sub
insb
sbb
in
and
in
xor
add
fidivl
sbb
lock
push
pop
add
les
pop
scas
in
cmp
mov
pushf
fstps
jmp
inc
cmp
inc
sbb
lods
test
js
inc
sbb
mov
gs
mov
incb
shrb
add
out
arpl
xorb
add
lock
jb
push
sbb
out
gs
aaa
fs
out
dec
sbb
push
sbbb
pop
mov
push
lret
loope
adc
enter
shr
fisubrs
jmp
mov
sub
or
pusha
add
or
jle
outsl
add
cmp
mov
js
popf
mov
cmpsl
out
stos
xchg
cmp
xchg
pop
mov
xor
xchg
jecxz
sti
test
mov
imul
notb
addr16
imul
call
and
dec
leave
push
inc
ss
add
push
shll
and
pushf
scas
inc
cltd
movsl
xchg
gs
stos
fisubrs
jp
movl
xor
shlb
mov
fcmovnb
push
sbb
xchg
cmpsb
sti
jmpw
xchg
jmp
pop
std
movl
cmpsl
or
dec
cmp
ret
jb
fidivs
das
cmp
repnz
pop
gs
cmpb
cmpsl
pop
cmpsl
out
jb
fld1
mov
test
mov
jmp
push
lret
ja
pushf
test
dec
and
ret
loop
pop
xlat
arpl
mov
lret
es
out
into
inc
xor
cli
test
mov
xchg
adc
sbb
stc
mov
loop
push
iret
mov
push
inc
mov
sbb
or
clc
outsb
mov
push
cmp
push
sbb
lods
sub
lds
enter
out
mov
or
cmp
mov
mov
in
mov
nop
into
jno
cmpsb
insl
cmc
lods
xchg
out
adc
imul
adc
lds
xlat
inc
adc
in
outsl
mov
mov
aam
popa
add
mov
or
pop
bnd
dec
xchg
dec
push
test
xchg
pop
sbb
sbb
and
aam
and
and
pushf
int
add
std
adc
stos
jno
or
push
das
mov
push
cmpsb
movsl
push
bound
das
mov
mov
adc
add
xchg
pop
iret
pushf
push
das
dec
pop
cld
pop
push
push
dec
out
xor
clc
lea
sub
ljmp
aad
mov
mov
and
int
pushf
xchg
stos
cmpsb
and
inc
call
or
mov
jae
aaa
add
pop
nop
dec
and
xchg
lcall
add
daa
repnz
mov
mov
aad
mov
ja
mov
stos
mov
data16
out
je
cmpsb
mov
test
ja
and
jno
jo
add
test
inc
movsl
sub
leave
and
cmc
ljmp
add
adc
sbb
and
in
jg
push
push
movhps
gs
cmpsb
je
add
aam
mov
fdivrl
cmp
cmp
jne
or
nop
cmp
fbld
int
inc
sbb
jmp
cmp
push
daa
push
cwtl
sub
pop
mov
sahf
mov
add
sub
fisubl
hlt
push
sahf
add
out
cs
and
movsb
sti
shll
cld
mov
mov
pop
sub
daa
cmp
dec
adc
imul
lret
test
jo
lret
or
ret
add
jb
lds
and
jmp
mov
dec
sub
ret
in
cmpsl
out
ror
int3
mull
cmc
test
cs
cmp
sub
pushf
jns
fs
imul
testb
xchg
mov
arpl
imul
cmp
xor
loope
push
fdivl
std
push
push
out
mov
jmp
int3
inc
mov
push
mov
adc
ds
push
mov
push
cltd
out
imul
jg
push
scas
adc
and
lds
and
mov
dec
add
stc
xchg
cmp
int3
pushf
xchg
push
loope
cmp
pusha
sbb
or
jge
std
xchg
outsb
bnd
int
push
cmp
push
push
and
add
add
xor
mov
adc
sub
lea
mov
lods
idivl
test
push
insl
bound
dec
jne
in
out
cmp
in
pop
fwait
push
sti
mov
xchg
int
mov
hlt
into
lock
cmpsl
mov
jnp
mov
sahf
dec
push
jp
or
in
jb
ret
inc
push
hlt
decl
xlat
dec
clc
adc
in
jae
pusha
fcompl
jbe
lret
inc
push
xor
orl
jns
imul
push
dec
mov
xchg
dec
out
pop
ja
lock
pop
mov
pop
ret
pop
sub
sbb
hlt
jg
mov
adc
mov
push
adcb
hlt
push
cld
xchg
xor
add
aad
ret
sahf
or
popa
cli
loope
dec
vcvtpd2dqy
out
rorb
pop
cmp
call
inc
sahf
icebp
push
jb
pop
dec
and
shll
decb
test
stos
jge
fldt
lods
lahf
icebp
dec
shrl
push
xor
out
sbb
jnp
idiv
imul
and
xor
mov
inc
xchg
adc
jle
mov
iret
adc
mov
xor
jb
add
daa
push
int3
sbb
aam
sahf
cs
mov
xchg
push
ss
jae
sarl
test
mov
and
xor
mov
or
popa
in
test
sbb
jns
cmc
jl
fistpll
inc
mov
push
stc
imul
bnd
mov
mov
in
ljmp
rorb
dec
clc
mov
aam
xor
ficompl
shl
stc
inc
cmp
mov
pop
aaa
cmpsb
shlb
or
cmp
scas
xor
push
imul
mov
cld
jecxz
jl
out
push
and
cmpsl
pop
adcb
mov
in
repnz
lret
lods
and
push
sub
xchg
popf
jle
mov
adcl
ds
cmp
enter
xchg
xchg
movsl
call
out
andl
stos
push
inc
in
in
xor
js
insb
adc
dec
rcrl
add
push
jge
lods
loopne
je
arpl
das
iret
mov
add
sub
mov
push
jo
add
pop
fnstsw
shll
pop
push
mov
xchg
fbld
pushf
push
push
rorl
inc
andl
pop
inc
or
cmp
aam
gs
aad
or
mov
into
and
in
mov
mov
popa
dec
and
in
adc
and
cmp
aam
nop
mov
sbb
and
sub
add
sbb
aad
adcb
cld
pop
jns
paddsw
sub
insb
push
cli
and
or
mov
lcall
mov
jns
in
or
add
cli
movsl
mov
stos
mov
xlat
pop
inc
shlb
stos
mov
mov
testl
cltd
push
jo
pop
push
loope
adc
xor
mov
mov
bswap
mull
mov
fisttpll
fwait
aas
jg
gs
or
hlt
out
push
add
push
or
fisttps
maxps
lods
rorl
cmp
leave
cmp
movsb
lock
test
test
push
mov
ds
sub
jecxz
aaa
inc
repnz
push
out
stos
push
clc
pushfw
xor
repz
jle
mov
sahf
ja
cmp
ret
xchg
push
adc
adc
je
pushf
jae
add
test
adc
inc
sbb
outsb
adc
test
or
insb
int
xchg
mov
inc
sub
sbb
sbb
jo
or
mov
xor
jae
adc
push
iret
sarl
in
fwait
movsb
mov
jmp
pop
sub
pop
dec
jge
inc
or
dec
flds
adc
add
mov
jecxz
push
dec
mov
orb
jecxz
push
in
pop
lcall
clc
insl
lds
mov
jnp
orl
xchg
mov
lods
lahf
stc
pop
mov
sub
xor
xchg
inc
movsb
mov
lds
mov
xor
test
fcmovbe
sbb
call
jne
mov
sbb
or
cmp
cmp
in
fcmovne
inc
lds
sub
adc
lahf
mov
fldcw
mov
dec
xchg
ds
nop
aad
mov
mov
int3
mov
xchg
lret
mov
int
dec
stc
and
mov
cmp
es
clc
jo
cmp
adc
mov
sub
mov
jno
loope
aas
ficomps
imul
inc
xor
stc
ljmp
icebp
lahf
imul
ds
or
jno
jmp
jecxz
mov
cmp
imul
cmp
test
cmp
or
cli
mov
ficomps
xchg
adc
add
js
and
and
xchg
out
mov
jmp
daa
adcb
jle
int
imul
xor
add
dec
sub
mov
notl
fsubs
popa
add
xor
lds
mov
mov
inc
adc
inc
sub
pop
pop
inc
add
jnp
xor
xchg
dec
xlat
xor
aaa
leave
jmp
mov
mov
jge
mov
adcb
add
stos
sub
aaa
enter
mov
mov
push
outsb
add
es
sbb
dec
ljmp
fldl
dec
inc
xchg
inc
jle
inc
rorb
push
mov
mov
hlt
lret
cmpb
out
mov
aas
cmp
sbb
jb
adc
test
scas
inc
push
scas
fldcw
mov
cmpsb
call
dec
loop
xchg
hlt
mov
inc
sbb
scas
jge
mov
push
leave
cmp
add
cmp
call
jno
insb
or
bound
jp
mov
adc
mov
adc
fsubrs
fistps
push
scas
push
jmp
out
sub
mov
stos
or
xchg
xorl
bound
roll
movsl
xchg
movsl
dec
insb
subl
jno
mov
add
cltd
decb
hlt
sub
sti
shlb
adc
cmp
imul
lahf
sub
pop
pop
in
sub
inc
dec
sub
aad
sbb
xor
xor
xchg
imul
and
sub
add
insl
arpl
mov
pop
movsb
or
in
inc
ret
scas
push
roll
mov
mov
test
push
mov
inc
adc
inc
and
imul
push
xor
and
sub
data16
cltd
mov
and
fcompl
xchg
bound
mov
sahf
cmp
aas
or
pop
jge
imul
out
dec
ss
test
lahf
push
gs
xor
shl
sti
pushf
inc
mov
pop
mov
loop
add
fisubrl
mov
leave
out
xchg
das
mov
pop
sub
loope
mov
sbb
inc
push
call
pop
repnz
add
dec
xor
shlb
in
jl
outsl
insl
hlt
cli
mov
adc
in
xlat
cmp
pop
cmp
sub
mov
fstl
sbb
add
call
sub
jns
dec
dec
cltd
cli
subb
ds
aam
pop
add
xor
push
xorb
insl
iret
rol
cmc
out
movsb
mov
loopne
sti
jmp
push
lret
daa
outsl
xchg
add
sub
mov
pushf
aam
jle
cmp
in
cmpsb
adcl
out
daa
xchg
cs
sti
mov
lods
test
adc
fisttpl
rdtsc
es
adcb
dec
mov
mov
jns
ret
sbb
dec
fisttpl
inc
cwtl
jae
fnstcw
loope
dec
add
pop
mov
mov
lea
sbb
call
cltd
or
mov
sub
push
xchg
and
add
and
lds
out
into
or
andb
push
dec
add
sub
pop
push
adc
jns
lea
sbb
loop
stc
in
insl
cmp
out
test
out
cmp
lret
out
sti
xchg
ret
inc
daa
scas
aaa
lds
push
and
push
in
pusha
mov
addr16
orb
xchg
push
jno
daa
cmp
mov
mov
adc
rclb
imul
lcall
daa
leave
popa
sti
aad
js
mov
inc
mov
hlt
scas
lds
ja
dec
std
mov
inc
fnstsw
movsl
sub
cmp
mov
pop
push
into
jns
xchg
pop
int3
mov
xor
lcall
test
fcomps
outsl
mov
cltd
mov
inc
outsl
cmpsl
js
sahf
xchg
cltd
mov
xchg
inc
xchg
leave
lods
sub
push
adc
mov
cli
lods
pushf
outsl
gs
xor
jp
aam
mov
inc
or
data16
cmp
es
rclb
shr
and
scas
adc
mov
fwait
push
sub
cmpb
jecxz
pop
push
int3
adc
jnp
leave
adc
scas
inc
nop
mov
das
pop
mov
ret
ret
inc
cmp
ficoms
mov
push
pop
ss
jecxz
repnz
xor
xchg
stos
aaa
dec
cmpsb
gs
neg
push
cld
arpl
and
cmpsb
ljmp
and
cmp
gs
in
iret
or
into
mov
mov
xchg
mov
mov
lock
push
mov
sbb
popf
addb
adc
js
pop
jns
lcall
popf
mov
pop
and
or
xorl
les
sti
adc
push
and
shll
iret
xchg
pop
in
mov
mov
aam
mov
mov
movsb
xor
and
sbb
dec
bound
mov
stos
pop
js
push
and
pop
push
fdivr
inc
mov
rolb
xchg
pusha
cmc
and
sahf
and
add
add
cmp
lret
pop
sub
aas
mov
or
lods
sbb
pop
mov
mov
inc
or
add
andb
into
or
or
pop
lahf
mov
add
jo
mov
insl
ljmp
stos
sub
pop
pusha
cmp
mov
aas
or
sbb
and
ds
fxch
dec
pushl
push
shlb
loope
dec
mov
or
or
xchg
cmp
adc
jb
mov
add
ljmp
adc
loope
sti
mov
es
push
loopne
sbb
jecxz
mov
sti
xor
sbb
mov
mov
aaa
fmulp
testb
xlat
xchg
inc
scas
xchg
pop
push
inc
mov
cs
or
call
cmc
ficoml
pop
cltd
out
mov
testl
mov
or
jmp
mov
xchg
int3
cmp
sbb
arpl
xchg
mov
rclb
xchg
insb
mov
pop
mov
push
incl
dec
rcr
movsl
into
mov
test
mov
dec
cmp
inc
sahf
cwtl
or
outsb
inc
adc
dec
sub
mov
lret
xchg
enter
sbb
cmp
jmp
lds
pop
mov
in
lcall
jl
adc
and
mov
dec
pop
aad
icebp
or
loope
in
xor
mov
ret
std
pop
mov
jge
fdivs
scas
aas
add
xchg
js
repz
xchg
push
xlat
push
lock
push
std
jl
cltd
sub
sbbl
imul
inc
xchg
jnp
js
cmp
dec
xlat
add
mov
stc
xchg
mov
inc
shrl
call
add
sbb
or
cltd
out
inc
sahf
and
roll
lock
scas
jnp
bswap
sub
cld
add
xchg
cli
or
roll
shlb
cmp
jp
pusha
mov
jle
test
aad
add
insl
outsb
fbstp
sub
pushf
into
xchg
dec
xchg
or
pusha
jns
dec
jle
sahf
xchg
sbb
adc
adc
and
or
dec
mov
mov
inc
xchg
push
inc
stos
outsl
mov
jle
shll
fwait
dec
or
push
push
xchg
inc
filds
cmp
push
jmp
lods
add
cmp
adc
cmp
jp
pushf
xlat
lds
lds
test
lret
xchg
pop
cmpsb
js
pop
jmp
out
mov
pop
mov
push
cmp
add
ja
fnstcw
ljmp
mov
xor
popa
mov
jno
pop
push
xchg
dec
out
push
cmp
or
xchg
cld
push
sti
jge
lock
repz
jp
jle
daa
not
pop
sbb
rorb
popa
mov
mov
and
insl
mov
adc
and
adc
or
sbb
sub
lea
xchg
or
mov
mov
push
nop
bnd
gs
lods
ja
pusha
scas
movsl
inc
mov
dec
lahf
cli
xor
mov
out
out
bound
cs
cli
sti
imul
mov
and
lahf
jmp
xchg
out
or
jg
mov
ret
movsl
sbb
mov
sub
test
test
adc
mov
push
arpl
or
popf
fildl
mov
movsb
stos
sub
dec
fs
pop
nop
sub
sbb
push
pusha
cli
imul
das
orb
fisubrs
sahf
inc
xor
xchg
inc
cmp
sbb
cmp
or
pop
out
push
pop
pop
sub
jae
jne
in
cli
cs
das
or
inc
xor
mov
sbb
xchg
mov
icebp
jbe
lock
jecxz
push
loopne
mov
in
dec
lods
or
jg
sahf
out
daa
xor
push
xchg
dec
cs
cmpsb
lods
ja
test
fwait
imulb
fs
lret
jne
and
cmp
lret
mov
xor
dec
push
sub
xchg
mov
add
or
stos
cmpsb
int
add
dec
dec
xor
mov
loopne
xchg
jecxz
xchg
xchg
call
aam
dec
jg
mov
push
pop
jle
ficoms
push
lahf
pop
ret
adc
xchg
adc
adc
loopne
test
pusha
int
mov
mov
xchg
xlat
in
dec
jne
push
loopne
stos
sub
cmp
inc
clc
mov
xchg
ret
dec
jbe
sbb
jb
pop
clc
adc
out
mov
in
jbe
shl
jle
and
cmc
test
push
push
int
adc
loope
cs
sbb
mov
fisttps
ljmp
sub
cmpl
ds
dec
rclb
sub
jbe
cli
adc
adc
sbb
adc
jg
pop
cmp
or
inc
sbb
adc
cli
pop
mov
jecxz
imul
shl
in
ss
aaa
sub
enter
aam
push
cwtl
xchg
pop
icebp
nop
ds
out
push
popa
jbe
push
and
fnsave
repnz
gs
movsl
fstp
cmpsl
and
into
bound
int
jbe
adc
iret
mov
mov
sbb
dec
pop
jg
lcall
ret
stc
mov
push
push
cmc
lcall
adc
aas
adc
inc
add
sub
fcmovnbe
pop
jl
cmp
stos
ds
push
xchg
pop
push
sub
rcll
lock
test
jbe
sbb
jl
jle
mov
cmp
jne
xor
lret
jg
mov
leave
out
lea
pop
add
xor
daa
mov
or
in
ret
add
mov
push
mov
mov
pushaw
xor
jecxz
lock
mov
jbe
mov
sub
jg
sbb
jns
in
fcomps
mov
nop
stos
in
push
sets
das
push
daa
jle
cmp
subl
jmp
es
and
loopne
sahf
pop
stc
test
mov
pushf
push
cmp
clc
mov
shl
enter
dec
mov
add
movsl
pop
std
inc
jo
mov
insl
rcl
jl
out
pop
pop
dec
jnp
lret
inc
sbb
adc
inc
ret
imul
ret
cmp
mov
lret
adc
add
lret
fcoml
loopne
mov
out
sbb
jne
inc
out
or
cmp
add
lret
daa
out
adc
imul
int
scas
je
xchg
iret
ret
mov
jno
loop
mov
push
movsb
sbb
inc
inc
mov
inc
push
inc
mov
in
pop
loopne
push
pop
pop
mov
les
neg
mov
nop
xchg
sti
ss
or
clc
inc
adc
dec
filds
xchg
loopne
sub
or
xchg
into
popf
cs
adc
mov
in
sti
sbb
inc
mov
jne
dec
sub
xor
xor
push
adc
xchg
loopne
iret
push
push
jae
mov
and
add
push
insb
or
into
in
cmpsl
xor
sbb
mov
mov
aaa
mov
mov
shrb
mov
pop
sahf
jl
xor
or
shrb
into
or
jno
sub
mov
and
movsb
jnp
int3
mov
sti
hlt
sub
stc
sub
loope
and
loope
cld
call
pop
in
or
cmp
mov
loope
adc
ljmp
js
lcall
pop
std
push
out
mov
aam
add
out
add
push
in
ret
loope
sbb
add
and
jns
push
cmpsl
pusha
sub
ljmp
cmp
es
arpl
dec
jns
in
jae
pop
out
mov
add
xchg
fcoml
in
ret
stos
movsl
neg
mov
out
dec
cmp
movsl
cmp
mov
push
pop
sub
dec
xchg
sub
inc
stos
inc
or
cltd
xor
or
xor
cmp
aaa
test
mov
pop
fadds
jmp
arpl
daa
andb
outsb
inc
sub
mov
or
sub
and
enter
mov
pop
mov
pop
shll
stos
leave
mov
adc
insb
mov
dec
mov
xchg
mov
js
add
lret
sahf
xchg
sub
ljmp
mov
pop
xor
rorl
fwait
jbe
pusha
mov
pop
push
push
cmp
add
xchg
sbb
cwtl
mov
jnp
xchg
xchg
xor
lcall
into
cmp
jae
mov
mov
xchg
sbb
fisubrs
mov
push
popa
sti
movb
dec
insl
rcll
mov
aas
jp
lret
je
ficomps
xor
scas
sbb
ss
mov
rep
fistl
fwait
mov
sti
pop
xor
and
cltd
mov
pop
mov
push
inc
mov
pop
es
divb
inc
pop
add
enter
inc
xor
dec
cmp
push
lds
mov
cs
push
dec
js
cmp
jo
scas
and
push
xchg
cld
ds
aam
sub
ds
nop
push
gs
test
addr16
mov
pop
out
ss
sbb
inc
xchg
pusha
rcrb
or
jne
enter
outsl
sub
jae
push
push
test
imul
loop
les
int
loop
sub
cmp
pop
mov
mov
jno
sarb
push
mov
cmp
and
addr16
push
pop
inc
push
sub
jp
push
clc
out
dec
in
cmp
sbb
nop
pusha
adcl
jns
sub
inc
add
int3
aas
cmpsl
xchg
aaa
es
pop
add
mov
add
sub
mov
jne
or
sti
dec
xchg
arpl
pop
cmp
out
fldenv
xchg
outsl
test
mov
xchg
je
sub
xchg
jl
test
xor
xchg
rclb
lret
out
push
or
negb
jns
cmpsl
wrmsr
cs
cmp
push
push
cmp
add
data16
adc
push
push
push
cmp
les
jno
cmp
out
lret
fbld
fmuls
sbb
imul
mov
repz
mov
and
gs
sbb
jecxz
mov
add
mov
stos
mov
insb
ret
outsl
rcr
cmp
cld
loop
jle
push
push
sub
lods
loopne
popf
dec
jno
gs
jmp
adc
mov
lcall
push
aad
xchg
mov
stc
test
jbe
xlat
lods
push
xchg
out
inc
adc
xor
out
push
daa
sti
mov
xchg
jne
sub
leave
fcoml
sbb
andl
in
lret
xor
adc
push
les
shll
add
sbb
mov
outsb
mov
xlat
pop
xchg
sub
cmpsb
xor
cmp
jmp
cmp
aad
jl
adc
test
and
fisttpll
fsincos
jmp
cmp
out
vpmaskmovq
dec
rolb
mov
dec
inc
in
cmp
pop
clc
cmpsl
jo
jle
out
aaa
stc
loopne
js
daa
popf
cltd
sbb
ret
cld
mov
push
popf
lods
stos
push
repnz
lret
xor
js
push
cli
cmc
rol
sbb
jb
add
clc
insl
ljmp
push
mov
test
pop
cmp
pop
inc
mov
in
xchg
stos
cmp
outsl
out
cmc
mov
shlb
shll
popa
jns
aaa
imul
test
mov
aas
mov
int3
loopne
jecxz
mov
xchg
dec
test
scas
cmpl
add
cmp
mov
ss
outsl
sbb
add
inc
push
repnz
cli
sbb
adc
pop
out
popf
fcmovu
rcr
ret
dec
inc
popa
inc
sbb
add
in
mov
xor
xchg
mov
mov
addb
push
fwait
mov
xchg
mov
sar
loope
je
dec
dec
or
jno
adcl
jnp
jp
scas
fiaddl
arpl
adc
shlb
adc
mov
sub
test
outsb
scas
dec
das
sub
pop
sbb
mov
fucomp
xchg
add
stos
outsl
test
cmpsb
add
push
mov
stos
repnz
movsl
add
pop
loopne
add
test
hlt
xchg
fldl
and
imul
outsb
sub
mov
movsb
out
iret
out
sub
addb
repnz
cli
and
test
adc
mov
js
fmull
loope
sbb
cmp
pop
iret
pop
scas
repnz
pop
xchg
dec
imul
inc
dec
cmp
xchg
push
cmc
leave
xchg
sbb
sarl
sbb
jb
je
sub
gs
lret
sub
push
sbb
jo
fimull
pop
cmp
xor
dec
jae
mov
icebp
inc
mov
push
xchg
jno
or
mov
add
shrl
cmc
lret
sahf
pop
push
sar
shll
xor
inc
imul
adc
fimull
out
dec
cmc
mov
xchg
xchg
mov
inc
or
out
fisttps
mov
xor
dec
rolb
enter
adc
pop
mov
loopne
imul
cmp
andb
fwait
pop
imull
push
subl
mov
and
aam
orl
mov
sbb
xlat
out
add
adc
rclb
push
or
jae
pop
pop
sbb
jmp
mov
sti
int
and
pop
fwait
xchg
fadd
inc
in
daa
add
and
fistpll
addr16
sbb
xchg
mov
loopne
inc
mov
mov
push
aaa
pop
or
add
fisttpll
sub
in
push
icebp
lods
cld
inc
mov
sbb
insl
xchg
cs
fcmovu
imul
clc
inc
es
popf
test
mov
dec
sbb
sar
aam
push
pop
adc
pop
sub
movsl
dec
xchg
pop
lods
gs
mov
jo
cmp
sub
mov
or
test
dec
mov
sub
jb
jns
popa
cmp
xchg
dec
jle
insb
jb
out
or
cld
mov
aas
in
subb
loope
add
jecxz
push
inc
mov
push
sub
and
push
pop
ficoml
sahf
mov
pop
lods
add
cltd
pop
push
xchg
and
jne
es
sub
or
jno
mov
pop
sub
add
mov
les
clc
out
pushw
xchg
xlat
sbb
xchg
adc
loop
cmp
faddl
inc
sbb
dec
push
push
std
iret
mov
mov
decb
repz
mov
xor
or
mov
daa
cmc
int3
sub
ss
push
mov
popa
mov
inc
aas
dec
and
arpl
cmp
dec
pop
add
je
jle
fbld
push
cltd
dec
lods
and
je
jecxz
ds
stos
add
scas
icebp
aam
repnz
inc
arpl
enter
pop
mov
rorb
in
xor
popf
mov
es
or
push
mov
lcall
push
push
mov
test
ds
mov
xchg
lods
and
leave
cmp
and
stc
cmpsb
pop
pop
jle
sbb
lds
loopne
pop
in
loop
pop
push
jne
adc
insb
fisubs
inc
loop
and
dec
mov
add
fcoms
lea
sub
pop
xor
push
jge
mov
lods
mov
inc
mov
push
test
or
push
dec
or
fistpll
dec
adc
sbb
xlat
and
hlt
stos
lods
pushf
mov
inc
or
cmpsb
jecxz
in
mov
mov
add
out
cmp
adc
jg
mov
xchg
jg
push
push
testb
lahf
outsb
in
orl
addr16
xchg
rcrb
pop
cld
add
sbb
xorb
imul
and
aam
push
and
inc
stos
repz
xchg
dec
adc
pushf
xor
adc
out
imul
xchg
cmp
adc
and
mov
out
dec
stos
fwait
xchg
jne
xchg
dec
xchg
pop
mov
push
stos
in
xchg
adc
pop
lret
mov
in
in
mov
enter
mov
cmp
mov
adc
mov
or
test
cmp
adc
lret
mov
dec
jge
sub
push
and
cld
sarb
mov
push
jmp
dec
mov
ja
add
das
das
movsl
in
mov
in
sub
dec
pop
loopne
add
cmp
mov
mov
xor
sub
clc
lret
incl
dec
inc
shll
mov
ud0
and
sub
insb
outsb
xchg
cmp
bound
push
in
dec
aad
adc
std
loop
jg,pt
pop
rol
xor
fisttps
xor
mov
dec
repz
call
into
sbb
cltd
test
fsts
aam
or
xor
daa
sbb
js
fwait
push
sbb
cmpsl
cld
cli
bound
cld
orl
rorb
fidivrl
push
pop
jne
cmpsb
sub
adc
movsb
pop
jmp
cmp
shrb
fucomip
inc
daa
and
and
push
xchg
push
fisubl
dec
mov
sub
push
dec
lret
iret
lret
out
xor
add
xor
fsubrs
mov
sbb
pusha
mov
push
bnd
jmp
add
pop
mov
dec
xor
rep
adc
fidivrl
insb
fwait
ret
call
lret
cmp
aas
mov
int
repnz
cli
out
dec
xor
jg
pop
cmpsb
and
sub
cmpsb
mov
mov
push
stos
cmpsb
mov
jno
pop
iret
ja
lock
lods
jne
xchg
push
add
movsb
push
pop
out
sub
repz
decb
xor
subb
lret
out
fisubrs
or
int
pop
mov
lods
adc
clc
lock
mov
aad
dec
pop
shlb
into
in
and
decb
xor
lahf
into
dec
sub
clc
mov
mov
sub
or
or
cmpsl
ljmp
sub
push
imul
mov
mov
dec
cmp
mov
cltd
pop
int3
sbb
mov
adc
fbstp
cmpsb
inc
dec
mov
pop
mov
ficoml
mov
mov
movsb
loope
out
sbb
push
loopne
es
call
cmp
ja
adc
popf
shl
pushf
jp
mov
jno
ljmp
mov
adc
iret
scas
outsl
or
lods
add
insb
mov
jb
cmp
mov
push
jo
enter
push
jge,pt
dec
jno
xchg
xchg
fwait
out
pop
jmp
xchg
and
orl
ljmp
clc
aas
and
inc
nop
cmp
cli
divb
es
dec
loopne
add
mov
jnp
sarl
clc
je
or
dec
hlt
sub
xchg
and
ds
pop
outsl
xor
mov
or
mov
push
xlat
into
jbe
sbb
mov
or
xor
sbb
es
out
sahf
inc
sub
je
xlat
or
fldt
sahf
dec
testl
xchg
add
jmp
fildl
loopne
push
dec
push
imul
out
xchg
adc
mov
sub
andb
adc
out
mov
xlat
inc
dec
fwait
or
add
or
dec
and
hlt
loope
or
aaa
or
les
cltd
sbb
roll
stos
in
mov
cmpsl
and
mov
xchg
shll
insl
lret
inc
jns
sarb
cmpsb
mov
cltd
push
push
mov
jb
aas
pop
icebp
fwait
les
dec
jp
jmp
sbb
stc
std
adc
push
cmc
inc
std
sbb
cmp
push
and
adc
fldl
enter
adc
cmpsb
mov
aam
push
test
popa
arpl
mov
push
int
inc
inc
push
movsb
cmp
jne
inc
xor
movsb
test
sub
ret
push
mov
mov
xchg
adc
lods
mov
scas
dec
cmp
push
or
jle
push
mov
cld
pop
push
pop
dec
out
and
sahf
jecxz
add
ja
xlat
xchg
jae
push
mov
mov
dec
jg
jmp
shlb
je
stos
cwtl
push
std
imul
test
scas
push
sbb
cmp
bound
add
mov
pop
or
fs
adc
and
xor
popa
dec
insb
mov
popf
xchg
out
lret
pop
or
sub
sti
add
fistpll
add
scas
movsl
and
push
orb
cmp
jecxz
stos
and
jg
scas
push
int3
orl
pop
sub
in
jmp
sahf
int3
movsl
mov
jb
sti
and
sub
dec
nop
shlb
stc
and
jg
mov
mov
dec
and
loopne
and
xchg
arpl
pop
push
cmp
cmp
ret
ret
jge
mov
pop
outsb
dec
and
aaa
push
bound
xchg
cmc
xchg
outsl
iret
sbb
test
sbb
mov
lds
in
mov
and
sub
cmp
imul
mov
jp
push
cwtl
rclb
aas
cmp
adc
hlt
sub
pop
insb
add
push
push
mull
imul
ja
les
xor
sbb
lea
xor
imul
int3
xchg
roll
outsl
lock
mov
repnz
test
xchg
cmp
ret
pushfw
mov
fcoms
icebp
imul
mov
shlb
es
cltd
jle
and
neg
dec
movsl
lahf
fsts
in
fdivrs
loope
out
add
push
add
daa
and
or
out
in
mov
cmp
jno
stos
filds
aas
rolb
subb
xchg
sbb
or
inc
ficompl
and
sbb
adc
pushf
inc
insb
arpl
gs
scas
or
leave
cmp
xchg
xor
adc
push
cltd
jge
pop
sbb
adc
pushf
adc
xchg
das
lock
dec
fistps
sub
fwait
push
add
rorb
lcall
cli
mov
not
mov
repz
call
xor
jns
jecxz
fiaddl
jne
dec
jle
insl
pop
mov
test
ret
pop
jns
pop
xchg
mov
outsb
xchg
lods
xor
fistpl
push
cmp
daa
mov
adc
cmpsl
int
adcl
and
insb
cmp
mov
add
xchg
and
popl
lods
pop
in
xor
or
in
out
je
ror
inc
cmp
in
cmp
inc
shlb
dec
shll
adc
icebp
rol
inc
dec
jmp
push
scas
mov
ja
imul
mov
inc
xchg
push
add
add
or
xchg
daa
lea
movsb
lds
pop
mov
xor
adc
shr
jecxz,pn
pushf
inc
aaa
dec
dec
and
add
pusha
shrb
nop
jns
inc
into
jl
loop
jns
cld
cmp
lods
mov
inc
push
mov
in
jno
sub
mov
lock
ret
jmp
rcll
mov
dec
loope
out
out
mov
stos
daa
dec
jbe
lcall
and
and
idivb
pushf
fidivs
push
loop
mov
inc
mov
push
ds
inc
sub
aas
jo
aad
loop,pn
jnp
outsl
sahf
mov
pop
insb
leave
loop
sbbb
popa
mov
cs
out
xor
sub
xlat
and
dec
xchg
testb
pusha
shrl
ja
sahf
and
jge
push
mov
xchg
mov
loop
pop
xchg
sub
lods
loope
out
rolb
jb
ret
mov
outsl
addb
inc
cmp
add
add
xlat
jg
adc
hlt
popa
and
xchg
sub
dec
fwait
rcrb
add
pop
cld
or
pop
and
mov
cmc
xor
dec
fbld
jecxz
jne
rcl
fwait
xchg
sbb
add
jmp
sti
push
mov
sub
adc
mov
push
xchg
jmp
mov
jl
pop
rolb
inc
out
pop
imul
add
les
mov
mov
pop
cwtl
andw
push
daa
cmp
mov
add
push
or
aad
xlat
mov
hlt
divl
shrl
and
sarl
dec
pop
imul
cld
loopne
popf
ja
push
icebp
dec
pop
mov
imul
xchg
fstpl
dec
repnz
mov
push
or
iret
mov
popa
pusha
ret
push
imul
fcoml
jg
leave
scas
pop
mov
sahf
mov
xchg
push
dec
sub
out
dec
popf
jp
xlat
mov
call
pop
call
push
pusha
movb
sub
mov
iret
arpl
js
push
dec
mov
sbb
bound
jle
pop
jge
repnz
cmp
pop
xchg
in
int3
adc
cmp
gs
sub
push
call
mov
xor
in
out
and
pop
jg
xchg
jle
and
mov
and
inc
repnz
into
mov
jnp
fwait
sbb
test
movsl
int
mov
sbb
pushf
scas
push
std
test
xchg
arpl
cmpsb
xor
outsb
cmp
push
and
js
fcmovb
xor
ficomps
sbb
jnp
ret
setno
loop
lret
mov
or
mov
xchg
pop
cmc
xchg
sbb
popf
test
jge
movsb
inc
insb
pop
rcll
xor
or
pop
jp
sahf
clc
mov
and
stc
cmp
roll
ret
das
inc
push
sub
hlt
incl
fiadds
mov
xchg
xchg
sub
lods
xchg
jo
mov
or
daa
hlt
pop
shr
or
mov
xor
popa
fmuls
test
stos
aaa
adc
adc
es
push
incb
or
addr16
ja
mov
sbb
add
xor
or
cwtl
cmpb
loop
fsubrp
jno
add
es
stos
ret
and
mov
addb
cld
jmp
cs
cmp
or
push
pop
negl
dec
iret
sbb
jae
push
xchg
fistps
es
sbb
adc
inc
out
jmp
sbb
jp
sbb
hlt
vsubsd
ljmp
mov
push
call
movsl
enter
xchg
adc
add
test
dec
sub
daa
xchg
jg
or
pushf
je
and
jl
bound
les
mov
adc
or
and
add
cwtl
or
idivb
inc
adc
dec
push
inc
inc
scas
pop
or
xor
mov
jl
and
or
fs
or
or
inc
pop
cmp
fcompl
iret
mov
inc
into
mov
popa
pop
inc
inc
jb
insb
cld
mov
rcr
insl
cmpsl
call
and
pop
rcll
pop
xlat
cmc
jge
jbe
add
imul
insb
sub
lcall
or
lret
pop
imul
xor
ja
add
fisubs
xchg
fstp
add
jno
cmpl
ds
sbb
data16
shlb
fimuls
sub
xchg
sarb
cmp
mov
add
jae
push
int
mov
adc
dec
cs
jne
push
out
imul
jne
fucom
sbb
cs
mov
adc
xchg
shll
outsw
inc
pop
lods
cmp
imul
mov
fucom
aaa
jmp
fs
stos
mov
or
test
push
mov
mov
into
adc
mov
add
ret
add
dec
push
inc
enter
mov
in
fsts
lds
test
sub
adc
aas
fdivrp
jae
mov
dec
push
jmp
in
fdivrl
push
mov
insb
xchg
imul
lds
mov
aad
out
idivl
mov
add
inc
push
mov
cmp
mov
shlb
in
fs
rcll
inc
ss
jne
sahf
inc
cmp
and
cld
sbb
cwtl
or
les
cmp
cmpsb
lahf
hlt
or
dec
cmp
in
jle
testl
pusha
push
jmp
loope
push
gs
mov
test
pop
push
out
mov
mov
stc
add
pop
vmaxss
inc
fldenv
ffreep
adc
rcll
or
popl
mov
push
imull
out
mov
testl
push
and
out
loop
cmp
inc
push
jns
sbb
iret
add
mov
leave
ficomps
and
mov
add
filds
sbb
mov
into
enter
cmp
ret
pop
shlb
lds
lods
icebp
stc
mov
pop
es
mov
cmpsl
imul
push
stos
pop
push
lret
or
repnz
test
les
xorl
push
xor
notl
mov
das
aas
fiaddl
add
movsb
in
sub
cmpsb
sub
sbb
das
loop
sahf
xchg
pop
lock
jle
adc
mov
dec
movsb
movsl
jmp
fldcw
out
sar
xor
loop
and
push
and
insb
mov
mov
mov
scas
mov
jns
mov
aaa
cmp
mov
lock
int3
jg
push
movb
sub
dec
add
jmp
fisubrs
in
adc
and
in
or
test
les
icebp
pushf
sahf
inc
mov
pop
jmp
and
inc
mov
lcall
dec
aas
push
or
imul
or
mov
mov
adc
cli
sub
mov
outsb
cmp
fiadds
pop
aam
xor
nop
cmpb
testl
cmp
xor
pop
sbb
jbe
push
jle
std
cmp
xor
cmp
addr16
inc
cld
mov
or
or
push
and
int3
movsl
and
cmp
mov
mov
arpl
insb
dec
jle
mov
inc
add
icebp
and
adc
ret
sti
or
xchg
adc
ficoms
loope
and
cs
mov
mov
or
addr16
sbb
jecxz
inc
imul
sub
inc
iret
and
mov
mov
movsb
sbb
clc
mov
daa
mov
out
stos
aad
sbb
mov
sub
leave
inc
div
shll
cmc
cwtl
ds
sahf
sti
mov
or
jecxz
dec
jmp
xchg
leave
iret
or
cmp
insb
repnz
push
call
ja
std
xor
push
add
jno
out
ffree
inc
push
cmp
pop
test
aad
int
clc
pop
int3
or
aam
scas
fildl
enter
sarl
mov
inc
or
rol
insl
inc
stos
ret
push
jge
lcall
xor
pop
lcall
push
pop
inc
leave
lock
shr
jno
f2xm1
dec
negb
stos
loope
or
mov
mov
xchg
sarb
xor
pop
mov
mov
je
loopne
out
and
cmpsb
cli
mov
or
push
addr16
int
dec
jmp
pop
mov
push
out
add
add
sub
add
dec
int3
adc
inc
lea
loopne
shll
addr16
push
movsl
jne
push
xor
pop
testb
jecxz
enter
scas
outsb
jns
in
cmp
dec
mov
call
arpl
xor
fnstenv
out
or
sbb
dec
fcomps
shll
mov
ja
aas
nop
dec
or
int
incb
add
je
xchg
cmpsl
js
sbb
jp
mov
jae
mov
aad
ja
cmp
sahf
mov
sti
push
inc
popf
xchg
mov
jb
jl
jge
mov
sbb
xchg
adc
sbb
push
lahf
xchg
pop
scas
jmp
xor
xchg
dec
in
mov
dec
inc
pop
leave
xor
lods
inc
add
push
jo
xchg
sub
loop
shrl
leave
jno,pt
into
addr16
add
dec
enter
and
jbe
add
icebp
insl
movsb
adc
xchg
push
xchg
pop
stos
cmpsl
loope
shl
sub
dec
push
sbb
xchg
sti
hlt
push
xchg
xchg
stos
daa
lods
mov
mov
std
add
sbb
in
cltd
or
loope
jecxz
cmp
or
insl
addl
mov
mov
xchg
adc
pop
stos
mov
popa
int
mov
mov
mov
mov
out
mov
dec
add
cwtl
mov
iret
pop
imul
mov
loope
mov
test
jbe
sbb
rcrl
test
insb
scas
scas
mov
xchg
js
xchg
lds
bound
pop
shrl
dec
aad
mov
xchg
dec
movsb
sub
lret
int3
mov
inc
insl
std
xlat
jp
xor
std
jno
pop
xor
add
xlat
std
nop
or
lret
aam
cmp
xchg
pop
xlat
or
subb
cmp
jmp
loopne
fsts
jle
lcall
push
lcall
dec
data16
jno
xchg
scas
or
lahf
std
sbb
xchg
jg
add
test
add
or
icebp
shl
es
pop
outsb
int3
mov
sbb
insb
inc
add
mov
push
jle
and
gs
lret
cmp
lret
add
and
out
hlt
sarl
jae
repz
sub
adc
pop
sbb
outsl
jbe
xchg
fcomps
xor
sub
cmpl
test
les
lcall
out
lods
xchg
cmc
inc
insb
test
adc
adc
test
stos
iret
aaa
or
or
or
dec
xchg
call
je
filds
dec
daa
xor
jl
in
lret
or
fiadds
push
cld
movsl
popf
jge
push
xchg
shrb
push
das
push
psubw
pop
stos
lea
pop
xor
sub
mov
mov
mov
out
ja
rcr
cmc
and
jne
ja
les
enter
dec
aas
xor
stc
or
pop
scas
mulb
add
rcrl
or
dec
mov
push
leave
lods
enter
xchg
or
pop
mov
sbb
jns
xchg
jns
or
xchg
test
inc
shll
mov
cli
nop
gs
jp
mov
and
sub
fs
lcall
push
mov
pop
pop
fstps
sub
sbb
call
mov
data16
inc
add
or
fiaddl
mov
jno
adc
push
mov
sub
mov
dec
xchg
add
inc
and
sahf
push
fisttps
or
call
pop
jl
pop
popf
cmp
notb
in
roll
xchg
xchg
sub
inc
shll
fildll
push
pop
cmp
sub
or
and
lahf
push
add
cltd
mov
inc
or
fdivrs
cwtl
adc
cmp
pop
mov
lcall
push
ret
std
xlat
testl
fldcw
inc
out
int3
jne
lock
mov
loopne
mov
cld
jo
add
sbb
sti
iret
scas
jge
movsl
mov
pop
lods
inc
mov
ljmp
lret
sub
or
data16
xchg
pop
pop
cwtl
inc
pop
cltd
loope
push
cmc
in
jo
fs
dec
test
fwait
jb
push
inc
sub
xchg
jp
pop
enter
adc
jno
adc
sbb
sub
and
cmp
or
int3
fmul
sub
addr16
ljmp
xor
fisubl
cmpsl
mov
iret
and
bound
je
ret
or
jl,pt
roll
lea
jmp
mov
mov
add
inc
clc
outsl
int
mov
movsb
mov
mov
es
lret
sti
xchg
jecxz
xchg
into
bound
test
addl
fs
adc
push
lahf
je
cmp
push
pop
fadds
cmp
jno
mov
pop
pop
cmp
add
or
mov
sub
notb
test
xor
addr16
mov
or
outsl
sub
std
xchg
fmull
outsl
xchg
and
mov
out
jae
mov
scas
mov
mov
xor
cli
jle
jb
rcrl
fistps
in
ss
fldcw
ret
aam
sub
mov
stos
lcall
pop
xor
push
pop
daa
xor
daa
and
popf
loope
adc
jp
enter
repnz
jmp
xchg
not
sub
push
std
xchg
aaa
sbb
sub
call
test
icebp
mov
push
mov
push
test
das
shll
loop
jo
sub
mov
sub
cwtl
cmp
cmpsb
lods
xor
test
pop
xchg
and
xchg
or
pop
sar
pop
cltd
jne
mov
lahf
fisubl
add
cmp
xchg
and
inc
mov
adc
enter
loope
mov
out
subb
and
push
in
cmc
adc
adc
jmp
mov
out
cwtl
sti
xorb
ret
mov
push
sub
popa
leave
popf
push
mov
xchg
push
jb
inc
inc
insb
mov
daa
inc
mov
imul
mov
mov
ss
ret
xor
ret
mov
cmc
test
pushl
sbb
es
nop
mov
or
cmp
inc
sub
int
mov
xchg
fcoms
fldenv
xchg
fnstcw
jno
divl
jnp
icebp
clc
mov
mov
inc
jl
jns
mov
push
inc
outsl
cmpsl
or
jg
jg
cmp
xchg
pop
add
fistps
popa
dec
scas
adc
mov
in
outsb
and
or
and
aaa
inc
inc
into
mov
dec
push
cmp
sub
bound
or
push
fistps
scas
lcall
mov
jmp
mov
jmp
mov
jl
aam
mov
or
or
lea
push
ljmp
pop
daa
jne
pop
adc
mov
mov
stos
xor
ljmp
sub
and
jns
mov
pop
push
pop
add
fwait
mov
out
addl
in
in
push
out
iret
add
fidivrs
adc
cmp
or
jp
push
out
pop
mov
xchg
mov
fidivs
stos
lcall
aad
cmp
or
in
mov
repz
adc
pushf
mov
sub
or
inc
or
mov
mov
sub
pop
mov
rolb
adc
cmpsl
jecxz
lcall
push
mov
test
cmp
jl
sbbl
or
adc
call
fld
mov
add
adc
mov
pop
xchg
push
enter
lret
cmp
fwait
outsb
xor
shll
sub
mov
cli
sbb
loope
jecxz
stc
iret
shl
dec
hlt
sub
jmp
aad
pop
pop
dec
sbb
enter
das
inc
insl
cli
and
into
int
int3
dec
xchg
mov
cld
lock
ja
cmp
xlat
hlt
jne
fisubrs
orl
jle
push
xor
add
out
popf
mov
test
rcr
mov
adc
fisubl
enter
loop
inc
sahf
mov
or
movsb
mov
arpl
shll
jae
ja
jbe
notl
fsubrs
mov
mov
jle,pt
mov
inc
pop
jl
frstor
cmp
and
sub
sarb
stc
cwtl
jg
mov
or
les
mov
push
xchg
inc
xor
fs
mov
pop
cmp
pop
ja
aaa
repnz
fldl
das
add
sbbl
jp
cli
lret
insl
les
shrb
or
lea
push
repz
test
clc
fstl
pop
nop
pop
push
adc
push
mov
add
mov
xor
and
hlt
pushf
push
inc
inc
xchg
sbb
loopne
gs
mov
dec
loopne
jg
pop
dec
ljmp
pop
cmpsl
out
sarb
fadd
out
jnp
jecxz
je
repz
das
icebp
pop
add
shrb
sbb
enter
jecxz
decl
repz
push
or
cmp
or
fdivrs
inc
scas
int
rorl
cmp
or
outsl
arpl
call
lock
mov
push
bound
inc
and
or
push
and
push
push
popf
xchg
leave
mov
push
jl
sbb
fnstenv
dec
sbb
cmc
movsb
sub
jle
icebp
neg
jmp
into
pushf
loopne
jo
pop
sub
adc
mov
fbstp
push
xor
or
cmp
mov
xor
jae
testl
enter
xor
daa
aaa
jbe
push
xchg
sub
push
jmp
call
ret
rcrl
stos
xlat
jg
mov
out
jo
call
test
ret
movsb
xor
lret
mov
adc
cld
cwtl
mov
inc
dec
loop
inc
int3
fistpl
imul
outsb
imul
dec
or
dec
pop
jmp
and
mov
or
mov
fdivrl
cmc
rolb
push
fdivp
bound
jo
push
mov
and
add
icebp
mov
stos
push
es
test
cmp
xchg
in
xchg
fucomi
gs
in
das
loopne
shlb
std
aam
mov
xlat
mov
adc
cmp
adc
push
fnstenv
jge
xchg
and
push
adc
mov
roll
into
or
je
or
imul
cli
sbbb
dec
movsl
jb
and
lahf
out
insl
call
xor
daa
lods
cwtl
sbb
and
fstps
cmpsl
cli
pop
cmp
cltd
mov
xchg
mov
and
and
mov
dec
cwtl
push
jl
jmp
cmp
dec
mull
ret
sbb
xchg
mov
mov
popa
or
js
push
aad
push
push
sub
inc
xchg
mov
fidivs
ja
rep
dec
lock
inc
mov
loope
cld
pop
inc
xor
dec
gs
jecxz
test
add
mov
and
mov
push
js
fwait
std
enter
fsts
mov
add
add
sub
pop
sbb
cmp
insb
cmp
outsl
fcoms
push
ljmp
mov
xor
mov
rcll
dec
or
xchg
divl
outsb
mov
mov
jle
or
dec
inc
mov
xchg
enter
xchg
repnz
imul
fstl
daa
dec
xchg
pop
outsb
pop
jl
push
dec
fcom
dec
lds
dec
clc
into
popa
cld
daa
int
out
jnp
cmp
mov
adc
pop
jg
pop
mov
mov
cwtl
out
imul
inc
and
cld
jecxz
leave
push
mov
inc
loope
mov
int
int3
cmpb
scas
mov
push
out
test
ficoms
cwtl
das
scas
ja
jle
rcrl
mov
gs
ss
rcll
sbb
cmp
cmp
mov
addr16
dec
mov
push
dec
xchg
mov
fidivs
jecxz
push
fidivrs
int
jecxz
mov
or
mov
jge
lods
mov
gs
inc
push
popl
add
fsubs
aad
hlt
mov
iret
cwtl
js
fstpl
aam
insl
dec
cmp
dec
fcoml
insl
std
cmc
out
aam
lock
or
mov
cld
cmp
sbb
addl
xchg
mov
aaa
sbb
xor
loop
mov
jg
push
dec
movsb
push
or
mov
xor
mov
mov
fmull
arpl
movsb
ret
out
pop
dec
jo
out
jae
push
sbb
rolb
adc
pop
out
je
jl
call
jg
jnp
jg
cmp
into
push
mov
or
push
xchg
jae
inc
add
movsb
mov
ljmp
xchg
out
jg
ja
mov
mov
icebp
dec
rcl
dec
pop
pop
mov
aad
stos
addr16
movzbl
xor
ret
pop
pop
push
xor
or
test
jecxz
sub
jecxz
loope
into
rclb
test
cmc
loope
repnz
out
hlt
data16
clc
icebp
shlb
movsb
dec
xchg
mov
sbb
sub
jle
dec
sbb
inc
push
xchg
out
imul
mov
inc
xchg
out
adc
sub
scas
sbb
sbb
shll
sarb
inc
gs
push
push
mov
dec
mov
mov
push
je
lahf
stos
daa
shll
stos
out
fiaddl
jecxz
xor
and
jae
icebp
xchg
xchg
dec
push
js
faddl
or
or
int3
cld
and
das
mov
in
test
xchg
cmpsl
adc
mov
inc
pusha
into
shrb
or
insb
xchg
roll
leave
mov
jo
shlb
push
paddb
adc
ficoml
mov
movb
pop
push
push
push
and
imul
mov
andnps
rep
sbb
mov
xor
mov
mov
mov
xchg
rolb
out
add
pop
fsts
jae
mov
adc
xorl
cmpsb
ret
or
cltd
in
sub
cmp
stos
mov
int3
enter
bound
sysexit
dec
outsb
cwtl
jns
loop
mov
fcmove
fisubrs
fisubs
cmp
pusha
jns
dec
jno
je
scas
add
shll
stos
aaa
xlat
fs
ja
dec
icebp
mov
popa
rcrb
cld
ffree
xchg
xorl
add
jne
push
cwtl
mov
dec
jmp
push
mov
mov
lock
enter
in
test
inc
cli
frstor
loop
xchg
out
mov
nop
mov
in
mov
pop
neg
movsl
and
daa
ja
cmp
dec
mov
cmp
add
inc
std
xchg
xchg
mov
sti
dec
jno
ror
std
rcl
sub
out
int3
fidivl
sti
out
scas
push
test
aam
outsb
mov
ds
or
and
add
ret
aas
hlt
xchg
filds
xor
push
jnp
push
pop
iret
and
add
dec
into
lds
loope
inc
sub
mov
or
jg
insl
adc
testb
fbld
ret
add
add
ljmp
xchg
jle
adc
rcr
dec
xor
sub
mov
out
xor
or
push
fistl
imul
ljmp
or
das
sahf
push
or
test
and
cltd
iret
and
add
out
jae
jne
nop
jae
je
mov
ret
jo
push
jno
sub
xor
jp
push
pop
mov
stc
mov
test
das
lcall
lret
lods
rolb
daa
jae
aas
xor
sbb
rorl
repz
push
sub
addr16
pusha
xchg
cmp
popl
popa
inc
and
mov
sarb
das
mov
inc
imul
mov
lea
jg
clc
repz
pop
imul
jg
daa
push
icebp
call
add
imul
xchg
mov
xor
push
in
out
int3
jg
mov
faddl
sub
pop
movsl
and
outsb
pushf
push
flds
fbld
adc
mov
mov
sbb
pop
cmp
rclb
xor
scas
and
fcompl
sub
push
xchg
sub
data16
pop
push
loop
jl
neg
push
scas
subb
aad
push
pop
and
in
xchg
mov
sub
mov
je
call
movsl
adc
add
movsl
push
cmp
jl
je
icebp
push
xchg
mov
xorb
cmp
adc
pop
jecxz
iret
or
pop
push
adc
mov
ss
mov
std
popa
adc
dec
pushf
sti
sbb
dec
add
add
int
clc
push
out
cmp
xor
jne
and
xor
sbb
aam
and
xor
das
pushf
and
jecxz
mov
adc
xlat
movsl
jno
sahf
andb
mov
ljmp
mov
xlat
dec
inc
or
pop
aaa
das
jecxz
leave
cmp
cmp
fwait
mov
inc
cs
pop
cmp
shlb
cwtl
fwait
xor
or
jne
ljmp
push
dec
and
sub
cs
ss
mov
sub
jecxz
repnz
test
lods
lds
cmpsl
cmpsb
repz
fdivrs
lret
fsubl
into
cwtl
scas
fs
jmp
pop
and
cli
pop
iret
pop
sbb
mov
pop
imul
cmp
and
jg
imul
les
mov
pop
lock
jl
fcoml
ficomps
jae
daa
push
jl
inc
idivb
lret
lds
inc
gs
cltd
mov
pop
aad
daa
pop
cmp
or
data16
mov
ss
out
gs
es
cwtl
lcall
jg
xchg
mov
mov
ja
aam
mov
in
lret
xlat
mov
xchg
mov
mov
cmpsl
and
or
inc
inc
fstpl
in
push
pop
out
push
push
jmp
or
shl
addr16
call
mov
jno
sahf
loope
mov
pop
ljmp
insl
mov
testb
daa
add
mov
xor
cmc
mov
hlt
in
ret
mov
stos
lret
int
enter
test
scas
mov
adc
jle
xor
push
cmpsb
ja
mov
and
push
pushf
addb
aad
add
aas
or
inc
pop
clc
mov
dec
test
inc
jns
sbb
negb
adc
xchg
scas
pop
aas
mov
arpl
nop
mov
adc
iret
insb
push
cmp
iret
xchg
fwait
jmp
incb
push
sbb
add
repnz
vpsllw
orl
call
mov
aas
mov
xchg
adc
xor
pop
inc
pop
imul
jl
dec
add
movsl
push
divb
add
add
dec
out
inc
ljmp
test
xor
sub
stos
lock
icebp
fldt
cli
rorb
lods
scas
pand
cmpsl
inc
add
add
sahf
dec
shll
mov
lcall
sti
xchg
loope
ja
xchg
dec
cmp
inc
rclb
stc
dec
icebp
and
sub
imul
in
jb
and
xchg
jge
pushf
xor
pop
sbb
je
mov
and
jl
pop
ljmp
dec
add
mov
icebp
adc
add
xchg
sbb
scas
lcall
inc
xchg
mov
mov
testb
inc
xor
loopne
cmp
and
fsubr
fidivrs
mov
imul
mov
mov
xorl
xor
push
out
fisubrs
jo
sub
add
and
addr16
cmc
adc
out
and
sub
hlt
imul
or
jnp
xor
pop
dec
lods
test
lahf
jp
mov
push
in
out
mov
iret
ljmp
adc
push
inc
sub
bound
sbb
aad
sub
xchg
les
jo
cld
xchg
cmp
cmpl
mov
mov
int
call
jmp
pop
outsb
jp
mov
dec
fdivrl
mov
push
cmp
ljmp
in
xor
and
add
add
aam
into
xchg
adc
inc
aam
orb
fcompl
inc
mov
pop
xchg
out
ss
gs
jns
loop
out
inc
pushf
jbe
arpl
xchg
cmpsl
xchg
stos
xchg
imulb
sub
fucom
xchg
and
jp
icebp
roll
cmpsb
ret
cmp
cmp
inc
xchg
push
sub
inc
testb
mov
test
jo
xor
xchg
int3
jbe
pop
add
insb
rclb
cmp
xchg
and
sub
pop
push
mov
mov
pop
cmp
arpl
cmp
mov
and
int3
jle
das
dec
and
jmp
roll
and
cmpl
mov
fdivrs
jns
fcompl
ljmp
fdivrl
inc
int
cmp
test
fcmovne
xchg
dec
xor
shll
mov
cltd
lcall
fcmove
sahf
decl
sbb
xor
mov
adc
lret
mov
sbb
fisubrl
stos
dec
xor
rcll
push
jno
cli
icebp
sub
and
jg
clc
testl
aaa
mov
mov
js
mov
rcll
mov
nop
mov
aad
mov
lock
out
rcr
and
xlat
sub
mov
adc
ror
sub
xchg
sub
adc
and
inc
xlat
dec
pop
je
dec
outsl
cmp
pop
mov
lods
aad
adc
in
test
pop
push
scas
test
lahf
cmp
scas
fs
mov
sahf
jo
push
test
in
std
sbb
fimuls
repz
lock
leave
ss
lcall
add
lock
mov
test
pushf
cmpsl
dec
add
adc
mov
das
sub
jae
xor
jno
outsb
jmp
fs
pop
inc
xor
push
repnz
adc
daa
mov
push
loope
cmp
pop
push
outsb
cwtl
sbb
lret
cmp
ret
inc
lcall
lahf
and
push
aas
mov
js
aam
andb
dec
les
sbb
mov
cmpsl
in
aaa
fisttpl
pop
cmpsb
cltd
mov
push
and
jns
loope
bound
xor
into
xchg
ja
lods
lret
jge
jae
jg
sbb
inc
jmp
add
outsb
cmp
imul
jge
aaa
sbb
xor
sub
push
jecxz
call
insb
mov
stos
push
jnp
sub
xchg
or
aas
pcmpeqb
xchg
outsl
outsl
jbe
rcrb
push
lods
pop
fimuls
jecxz
mov
lea
sbb
adc
xchg
jl
mov
mov
sub
mov
loope
dec
mov
jns
xchg
mov
push
sbb
fistl
xchg
xchg
adc
movsl
sub
ljmp
inc
ret
faddp
and
xor
rorb
push
stc
pop
in
jbe
or
stos
mov
sub
mov
and
inc
xor
mov
mov
rolb
roll
fistpll
fisttpl
ret
sub
push
mov
mov
or
sbb
push
jge
add
xchg
mov
lock
xor
and
inc
out
jge
mov
popf
inc
cmpsl
inc
add
dec
push
mov
pop
lcall
add
pop
mov
in
mov
ret
mov
add
pop
mov
lret
xor
dec
dec
xor
mov
not
into
pop
or
test
dec
xchg
or
rcr
jae
pop
cmc
push
mov
jmp
movsl
inc
sbb
in
fdiv
jno
nop
sbb
and
adc
lock
int
mov
inc
add
jg
adc
jno
sti
shrl
loop
xchg
xchg
jnp
stc
add
jo
add
cltd
hlt
fldenv
outsb
mov
and
jo
mov
mov
xor
adc
mov
outsl
mov
push
inc
aas
faddl
mov
sub
ds
dec
call
sub
cmp
sub
scas
dec
sub
or
das
jp
cmp
stos
pop
pop
mov
lret
push
repnz
orb
sbb
leave
ficompl
push
mov
pushf
xor
out
addr16
fldl2t
add
ror
pop
mov
aam
mov
inc
jns
push
ret
jns
cmp
sub
insl
cwtl
repnz
adc
xchg
rol
xor
mov
sbb
test
adc
fdiv
inc
aad
lcall
mov
negl
mov
cmp
xor
jle
out
sbb
dec
gs
push
je
lods
outsb
and
cmp
test
xor
sbb
cwtl
imul
jno
xor
cmp
or
fnstcw
mov
fwait
mov
sbb
mov
fimuls
cmp
sub
adc
in
pop
jl
aaa
mov
lods
push
fisttps
fsts
pop
mov
sub
mov
dec
movsb
mov
mov
into
sbb
out
aaa
insb
in
mov
ss
lret
repz
mov
mov
pushf
ja
mov
testb
or
and
in
test
adc
cmpsl
pop
mov
inc
hlt
mov
outsb
mov
movsl
test
outsb
sti
dec
sti
ss
movsl
gs
ds
mov
jo
adc
hlt
xor
ss
or
stos
rcl
fsts
dec
call
int
xor
xor
shll
arpl
adc
ud2
fdiv
mov
inc
or
xchg
shrb
and
dec
test
clc
mov
scas
jmp
xor
out
push
sub
notb
aam
jae
sbb
fistl
xchg
sbb
push
scas
in
cmp
out
into
iret
dec
sub
hlt
dec
inc
ja
in
fists
hlt
xor
push
jno
pusha
sbb
xchg
and
pop
push
fcompl
adc
das
lahf
xor
fcomp
inc
out
xchg
add
push
dec
and
pop
pop
mov
dec
jns
pop
movsb
jmp
ss
jl
test
into
add
sbb
out
add
es
arpl
xlat
add
or
inc
dec
and
pop
outsl
sbb
jl
hlt
dec
fstps
push
and
aas
rorl
iret
pop
or
push
xchg
in
mov
dec
daa
jle
mov
loope
cwtl
leave
jb
out
push
sbb
pusha
je
lds
jo
cmp
pop
push
adc
mov
jecxz
fwait
loop
fisubl
gs
xchg
daa
xor
or
ljmp
push
ljmp
int3
pop
std
mov
scas
aaa
xor
and
sarb
mov
pop
and
sahf
jl
cmp
push
adc
std
jns
out
mov
outsl
popf
pop
call
fnstenv
mov
jg
ljmp
decb
cmp
xchg
imul
add
and
sbb
test
or
loop
or
inc
int
dec
repnz
insb
dec
idivb
bound
in
sbb
shll
stos
rcr
pop
fcomps
int
sub
cmp
cmc
pushf
xchg
push
loopne
rcrl
shl
or
daa
xor
aas
divb
lock
mov
cmp
jo
sbb
jle
fcmovnbe
mov
stc
and
pop
int
pop
xor
xchg
xchg
imul
or
pop
ret
data16
jge
leave
arpl
mov
lret
dec
test
mov
nop
push
inc
iret
int
nop
jne
scas
pop
outsb
fwait
jns
pop
push
dec
inc
jmp
out
mov
ja
mov
pop
cmpl
ja
cs
push
shl
jecxz
xlat
in
rolb
or
sbb
addl
call
mov
test
adc
push
push
repz
filds
fcompl
cmpsl
dec
lea
repnz
push
dec
pop
das
mov
push
push
pop
inc
shll
cld
push
mov
imul
sub
dec
xchg
fsubr
jne
pop
cmp
sbb
fsubrl
xchg
shl
adc
mov
cltd
and
sub
repz
cmp
xchg
push
and
jl
jae
repz
out
push
adc
std
inc
cmc
mov
mov
fwait
leave
clc
push
add
cmp
xor
shlb
negl
stos
sbbl
je
das
inc
repnz
and
and
push
mov
shlb
aam
ret
xlat
pusha
adc
clc
adc
xchg
testl
mull
fadds
or
fbstp
jo
jge
test
pushf
xor
js
cmpsl
rcll
mov
sbb
aas
sub
bswap
int
adc
pop
mov
fimuls
lods
jb
or
push
cmpsl
outsl
daa
jp
out
fmull
stos
mov
xor
adc
jae
in
push
add
adc
lods
out
or
inc
cmpl
push
jge
test
popf
mov
sub
fcompl
popa
add
in
and
mov
lret
data16
inc
fiaddl
test
mov
xlat
and
cli
xor
xchg
mov
push
in
cltd
pop
push
mov
int
add
sti
jnp
insl
xchg
pusha
push
inc
adc
decl
adc
pop
mov
flds
addr16
aas
mov
sbb
xchg
test
lods
cs
test
rcrb
pushf
movsl
lods
sarb
jle
dec
xchg
out
adc
lea
adc
or
cmpsl
mov
bound
push
sub
out
lret
dec
lret
adc
xor
sti
jp
shlb
sub
pop
cmp
adc
xchg
notl
push
movsb
shlb
shrb
aam
push
sub
pop
popf
orb
mov
add
sub
ds
jne
cmp
mov
shrb
and
test
push
push
pop
fdivl
mov
lods
inc
dec
lock
clc
adc
push
cmp
add
inc
icebp
and
stos
test
ds
fs
loope
mov
mov
daa
push
mov
fcoml
stc
push
pop
cmp
ret
pop
dec
xchg
dec
push
popa
inc
loopne
push
mov
adc
push
fidivs
cs
or
and
lods
int3
push
int3
sbb
pop
shll
jl
mov
add
aas
in
nop
cs
imul
xor
pushf
rclb
mov
das
mov
xor
inc
insb
ss
fdivl
or
imul
jb
cwtl
dec
or
rolb
aas
popa
jl
or
pop
int3
rcrb
gs
mov
jo
popa
add
dec
in
jne
sub
rorl
sahf
and
mov
scas
lea
xor
int3
cmpsl
jle
es
lahf
jb
stos
aaa
push
call
jge
mov
and
std
mov
in
loopne
add
and
cmpsl
mov
sub
test
gs
pop
pop
adc
pop
and
jae
scas
cs
sub
shll
out
push
bound
in
jl
jmp
sub
inc
push
cwtl
xchg
cmc
ds
adc
out
ljmp
pop
jnp
addr16
bound
popf
sub
xor
std
in
inc
xchg
lods
shrb
andb
mov
int3
add
mov
jne
repz
imul
jp
mov
cmc
leave
xchg
jae
popl
testb
daa
imul
mov
les
out
dec
and
cmp
int3
and
inc
daa
sub
filds
cmpsb
jno
add
mov
out
jl
add
cmp
dec
add
pop
ss
dec
push
rcrb
xchg
sub
and
outsl
mov
push
std
nop
pop
shll
insb
or
lahf
mov
call
mov
fbld
data16
sti
jecxz
int
mov
and
jbe
fcompl
mov
push
mov
dec
fisubrl
sub
xchg
sbb
ret
mov
aas
and
mov
call
push
cld
or
or
or
loop
adcl
iret
popa
pusha
daa
pop
sbb
mov
and
mull
lcall
mov
sub
pop
jne
imul
in
fldcw
and
mov
popa
adc
inc
movsb
push
mov
out
jmp
mov
test
inc
xor
repnz
mov
jp
out
div
pushf
adc
int
sub
jl
xor
shrl
lret
sbb
xor
cmp
inc
push
jns
push
push
lret
fwait
xchg
push
sti
es
mov
bound
push
lret
add
ljmp
ret
pushf
jo
pop
pop
mov
outsl
enter
test
xchg
lods
aaa
dec
inc
mov
loopne
mov
pop
repz
pop
mov
jb
cli
add
cmp
dec
leave
fs
or
mov
dec
lea
enter
fstl
repnz
sahf
mov
iret
cmp
ja
aas
out
jne
dec
push
aam
out
outsl
stos
jge
test
out
aas
sbb
addb
cmpsl
dec
movsl
or
sbb
and
ds
dec
sbb
hlt
ds
jmp
das
xor
mov
xchg
imul
icebp
lds
rorb
sbb
jg
cmp
or
dec
or
fisubrl
mov
lret
mov
mov
jne
sub
dec
fildl
mov
pop
and
imul
pop
sbb
lods
or
aaa
push
daa
pop
xor
add
sub
nop
mov
inc
cmp
shrl
cmpsl
rcrl
adc
jmp
leave
rcrb
sbb
test
test
sbb
and
push
das
stos
ss
negl
or
mov
das
pop
pop
xchg
jmp
add
ds
or
fcomps
daa
xor
jbe
cmc
mov
jne
adc
jae
sbb
or
fiaddl
adc
arpl
add
inc
xchg
or
or
rcrb
sbb
jnp
xchg
inc
dec
mov
add
xchg
push
loop
push
dec
sbb
shrl
pop
jmp
xchg
xchg
mov
shl
ficompl
scas
ds
add
jne
push
pop
sbb
leave
lret
dec
push
adc
aaa
xor
pop
icebp
jge
pop
scas
in
fs
fcmove
loope
cmpsb
ds
dec
and
outsb
sub
sbb
adc
mov
xchg
sub
cmp
add
icebp
aaa
es
mov
dec
sub
jmp
dec
loop
loop
xchg
in
add
fadds
inc
jge
push
outsl
negl
add
imul
xchg
popf
pop
pop
xchg
xor
pop
jns
dec
pop
jae
mov
mov
push
jo
popa
lods
stos
jle
mov
pop
call
lods
and
pop
push
dec
test
clc
cltd
dec
das
xchg
push
mov
bound
adc
fwait
cmpsl
push
test
data16
dec
push
and
in
mov
jmp
sahf
xor
js
insl
dec
cmpl
mov
xor
cmp
nop
push
sub
faddl
fwait
push
mov
rorl
add
mov
fmull
dec
jle
adc
or
xchg
jp
ror
popf
scas
mov
pop
call
loop
mov
mov
lock
add
mov
stc
jp
pusha
pop
dec
ljmp
cmp
adc
adc
fcomps
hlt
cmpsl
inc
mov
xchg
insb
mov
inc
jns
jns
ss
aam
aaa
push
fnstsw
stos
rolb
es
loop
neg
call
out
pop
mov
mov
lods
fcoml
push
jl
into
mov
pushf
xchg
fdivl
inc
pop
daa
fiaddl
sub
sarb
xor
stos
or
xchg
fistpll
lahf
cli
loop
xor
jns
sub
aas
das
stos
lock
es
andb
hlt
sarl
movsl
into
adc
lds
scas
mov
jnp
daa
pop
loopne
cmp
xchg
xor
sahf
jecxz
jae
loope
mov
out
mov
outsl
int
lret
push
adc
js
pusha
js
xchg
addr16
int
mov
lahf
je
add
mov
aaa
cmc
int3
add
leave
push
mov
mov
mov
loop
or
iret
in
dec
cmp
xchg
movsl
inc
mov
cmp
xor
mov
cld
mov
jg
mov
subb
mov
sub
adc
stos
push
inc
cmp
push
shr
leave
rolb
xchg
in
xor
test
notl
mov
inc
mov
push
add
sahf
das
mov
movsl
adc
imul
xchg
inc
inc
xchg
fiaddl
xor
or
sbb
adc
dec
adc
pop
rclb
push
sbbb
shll
mov
inc
and
sub
ret
sub
jle
call
cltd
out
xchg
mov
push
addr16
cltd
mov
test
pop
je
push
jno
push
call
je
imul
movsl
scas
ja
jns
pop
pop
mov
jno
and
sahf
fidivs
xlat
jg
xchg
push
loop
lret
jnp
inc
fs
cmc
push
cs
adc
fidivrl
xorps
mov
fcoms
pop
jae
sub
jmp
sahf
shr
fistl
and
add
mov
stos
cmpl
sahf
jnp
jle
sti
std
mov
insb
add
pushf
cmp
divb
mov
mov
subl
loope
addr16
cwtl
fwait
cmp
pop
add
fsubrp
xchg
ljmp
pop
sbb
push
in
sub
cld
in
pop
out
mov
mov
lock
cmp
ret
mov
push
jp
push
shll
enter
rclb
test
inc
sbb
or
push
and
imul
iret
sahf
test
cltd
jecxz
out
fisttpl
mov
outsl
pop
lods
lea
xor
cmp
push
lret
fnstcw
push
call
int
push
fnstenv
jle,pt
fstps
clc
mov
add
pop
ds
cltd
push
jno
jbe
pusha
ret
jnp
mov
popf
inc
xchg
clc
jae
ljmp
lock
cmp
ret
pop
pop
lcall
push
ss
cmpsb
lea
push
ret
inc
jne
sbb
pusha
push
pop
je
sbb
push
dec
push
mov
dec
cli
rcrb
dec
icebp
inc
pop
bound
addb
out
add
in
pusha
adc
pop
iret
sar
inc
das
mov
outsl
xchg
cmc
mov
testl
outsb
fidivs
out
popf
or
jo
out
inc
ljmp
jne
xor
jns
mov
lods
test
dec
testb
loope
and
mov
jge
cmp
pushf
xor
push
jge
sub
add
arpl
inc
pop
pop
xchg
shrb
push
push
pusha
fstp
push
cmc
pop
xor
lea
xchg
lds
push
sti
out
mov
cmp
imull
push
rorl
jmp
dec
in
add
jae
mov
into
loop
in
test
icebp
cmpsl
push
adc
dec
adc
inc
ljmp
cmpl
jbe
mov
test
into
sub
std
aam
lret
xor
icebp
or
and
mov
daa
sub
jno
outsb
negb
cwtl
and
shrb
cmp
xchg
aas
arpl
push
xchg
js
dec
loopne
mov
and
cltd
es
sub
push
push
inc
xchg
jp
cmpsl
imul
push
push
lock
sub
es
mov
cmp
cmpb
dec
lahf
jg
add
push
mov
int3
jle
lods
pop
pop
sbb
mov
dec
cmp
fadd
lcall
out
imul
sbb
adc
and
cs
xor
jno
mov
mov
cwtl
cmp
sub
scas
in
lea
adc
lret
jmp
out
or
xchg
clc
push
ret
aam
test
shlb
ret
into
scas
bound
out
cmpl
inc
pop
in
dec
xchg
sub
popa
xor
cwtl
add
int3
mov
mov
icebp
sbb
aam
stos
std
mov
into
xchg
or
lcall
or
pop
test
stos
lret
addl
lds
mov
mov
stc
sbbl
adc
xlat
dec
xlat
inc
cmpsw
cld
cmp
pop
int
sbb
pop
adc
jp
daa
xor
add
loop
or
jo
pop
cmp
mov
xlat
arpl
out
pop
sbb
push
cmp
or
popf
std
xchg
imul
sbb
mov
in
jg
xchg
data16
call
add
xor
sub
scas
es
jnp
cmpb
mov
jnp
xor
iret
scas
add
mov
bound
jmp
fsubs
push
pop
xor
dec
dec
pop
call
mov
push
xchg
inc
cmp
and
mov
jbe
jo
fdivs
jnp
add
jp
sbb
dec
push
mov
ret
adcb
add
jg
jmp
xor
add
cld
cli
aad
shr
mov
std
cs
adc
mulb
sub
sub
inc
adc
stos
or
mov
push
mov
call
loope
mov
js
and
cmp
sub
or
push
shl
in
ret
aam
or
mov
mov
jb
int
in
add
xor
sub
jecxz
lcall
aaa
popf
jmp
sub
pop
xchg
roll
fs
sti
in
push
jbe
jbe
movsl
movb
rol
xchg
aad
sub
test
dec
sti
adc
and
loop
icebp
mov
lcall
lcall
std
daa
push
dec
lret
lock
xor
adc
xchg
mov
insb
dec
mov
mov
fwait
fwait
xchg
imul
xchg
add
dec
xchg
imul
insb
fisubrl
out
repnz
dec
stc
arpl
mov
pop
mov
add
pop
mov
adc
ret
insb
sub
and
sbb
add
dec
mov
jl
hlt
sbb
fldl
clc
or
fcomps
int3
imul
xor
or
mov
mov
mov
jbe
int3
call
and
xchg
movsb
pop
les
mov
roll
in
out
dec
fstps
outsb
push
mov
sub
int
pushf
jnp
sti
shr
push
aam
cs
cmpsl
stos
mov
inc
or
or
pop
in
cmp
sti
xchg
mov
in
ror
es
xchg
insb
mov
sub
loopne
lcall
fists
xor
rcr
fisubl
les
push
pop
mov
fistpll
or
jbe
loop
mov
jne
or
ljmp
or
jb
stc
jo
jl
into
cmp
in
mull
jg
popf
shlb
sub
leave
sbb
mov
test
mov
and
and
sbb
ficoms
inc
mov
push
out
sbbl
ror
xor
sbb
lock
aas
rclb
repz
dec
xchg
loopne
or
cltd
lret
xchg
movsl
inc
xchg
push
sti
xchg
cmc
sbb
xchg
scas
jo
loope
cmc
cmc
test
sbb
cmpsb
jge
daa
test
insb
xor
cmp
sbb
sub
mov
push
stos
cmp
dec
mov
arpl
xchg
leave
pushf
xchg
scas
push
push
push
ficompl
cmp
shll
inc
lcall
xchg
pushf
adc
ret
in
xchg
jge
xchg
loope
decb
or
xchg
push
ja
ja
push
and
or
inc
nop
add
and
pop
aas
das
nop
dec
mov
mull
mov
or
test
push
inc
xchg
test
mov
push
out
dec
push
sbb
sarb
and
inc
aaa
jns
mov
jae
mov
adc
or
loopne
push
cmc
test
pop
mov
mov
dec
dec
aaa
xorl
loopne
inc
insl
adc
aad
cli
jb
sbb
mov
lcall
add
iret
in
push
sbb
enter
push
jo
mov
sbb
pop
xor
lahf
adc
jo
or
idivb
lahf
mov
push
cmp
jmp
arpl
push
jmp
jmp
out
pop
ds
sub
xchg
mov
push
push
mov
cmp
dec
sub
mov
ljmp
push
and
ds
mull
andb
jno
xorb
mov
cmc
push
and
aad
add
lea
jl
mov
sub
mov
adc
stc
cltd
inc
fisttpll
and
bound
jnp
mov
test
testb
mov
mov
sbb
aad
cmc
xor
push
jno
mov
jno
mov
sub
dec
movsb
int3
xchg
inc
mov
lods
arpl
loope
enter
xchg
sub
push
arpl
xrelease
push
sub
jle
cld
pop
insl
mov
pop
cmp
sub
call
mov
pop
popl
subb
popa
bound
and
mov
pop
jg
pop
xchg
inc
push
mov
or
ret
inc
xchg
mov
mov
xchg
frstor
fildll
icebp
test
pop
and
add
mov
jns
cmp
hlt
stos
out
xor
sbbl
xor
pop
mov
push
push
mov
mov
daa
nop
lret
xchg
out
sbb
or
mov
or
mov
lock
cmpsb
xchg
pop
sub
cmp
add
flds
xor
jbe
insl
out
les
or
fbstp
arpl
icebp
push
test
std
mull
and
mov
test
cmp
inc
sbb
rep
fisttpll
push
cmp
in
ss
insb
sbb
stos
test
mov
fwait
xchg
xchg
lods
sbb
call
fstpl
repz
ljmp
clc
sub
in
cmp
mov
sub
push
das
jns
or
pop
in
pop
ss
xchg
mov
sahf
cmp
xor
iret
xor
fdiv
mov
and
lds
push
adcl
das
dec
cmp
ja
ror
andb
test
push
mov
sbb
xor
mov
call
add
jns,pt
or
inc
in
jle
enter
shlb
and
add
pop
testb
cmp
dec
sbb
mov
movl
xor
cltd
pop
or
and
shrl
inc
cmc
dec
sub
rolb
mov
dec
mov
pop
cmp
adc
push
xchg
hlt
mov
dec
addl
sti
cmpl
jbe
shl
pop
and
cmp
or
lcall
cmpsl
mov
outsb
and
mov
cwtl
orps
stos
aaa
clc
or
add
in
sub
sub
xor
leave
test
jns
jne
push
inc
cmpsl
out
out
jg
mov
dec
das
and
mov
sub
sarb
test
inc
lods
imul
fdivl
loop
addr16
pop
mov
test
inc
ljmp
push
add
fcomps
cli
sbb
stc
stc
sbb
cmp
scas
mov
scas
jnp
mov
sub
adc
ret
add
cld
pushf
sti
xor
cmp
add
bound
cltd
lahf
or
cld
sahf
shl
inc
sti
add
bound
int3
inc
mov
mov
popf
pop
dec
jle
mov
inc
mov
and
iret
jmp
std
dec
cmpsl
sbb
sti
movsb
out
int
fs
xchg
xchg
int
adc
mov
lock
pop
data16
or
ficompl
adc
cmpb
pop
jbe
ss
scas
cmp
js
mov
push
jae
xor
pop
pushf
pop
cmp
cltd
xchg
dec
sbb
jnp
mov
add
int
inc
fwait
in
jle
repz
and
or
pop
push
rcl
jns
test
push
xor
shlb
push
sahf
aas
stos
cmovge
sub
dec
mov
loopne
push
mov
lret
out
dec
adc
loop
call
es
jecxz
repnz
mov
mov
dec
sarb
pusha
icebp
push
sbb
push
push
cmp
loopne
xchg
enter
mov
inc
sbb
mov
negb
pop
in
xor
jbe
push
popa
int3
and
push
test
inc
test
pop
cld
out
fwait
pushf
popf
pop
aad
mov
jmp
or
xor
out
dec
fisttps
pop
je
mov
in
ud1
pop
ljmp
pop
out
test
sub
aam
loope
jle
push
and
sti
in
out
mov
pop
inc
mov
lahf
insb
adcl
xor
add
sbb
pop
out
test
js
sar
pusha
data16
ja
xor
sbb
mov
cmp
sub
mov
das
or
or
lcall
xchg
push
out
jecxz
xchg
push
loop
mov
push
fstps
adc
pop
sbb
lods
pop
sub
inc
push
stc
cwtl
xchg
in
jae
pop
gs
lcall
pop
out
mov
es
sub
jge
add
cmp
addr16
jo
sub
scas
adc
movsb
xor
push
in
int
in
arpl
xchg
and
and
jp
mov
mov
sbb
and
xchg
lods
shll
xor
sbb
fnsave
pop
mov
iret
mov
cmpsl
cmpsl
int3
pop
clc
pop
xor
out
push
mov
cmp
imul
add
and
pop
stc
addr16
mov
jg
adc
ret
adc
pushf
adc
daa
les
les
xlat
jg
repz
and
das
cltd
test
movsb
or
fsubr
aas
sbb
imul
movb
andb
pusha
inc
stc
xchg
insl
mov
pop
xor
xlat
adc
rep
adc
xchg
inc
inc
scas
sbb
mov
les
loop
outsl
stos
push
and
mov
and
and
mov
mov
popf
xlat
adcl
pop
sbb
outsl
jmp
dec
mov
xchg
roll
hlt
jge
xchg
sti
shr
testl
or
sbb
xchg
sahf
xor
dec
push
mov
sub
add
cmp
sub
loope
mov
push
add
rcrl
js
inc
leave
out
dec
pop
je
xor
push
xchg
adc
fstl
fwait
or
sbb
mov
dec
sub
addr16
jmp
mov
mov
adc
popf
xor
enter
dec
mov
sbb
aam
popa
in
out
in
sub
pop
push
call
mov
push
mov
add
mov
inc
scas
mov
fwait
sub
jmp
and
test
jbe,pt
mov
lods
iret
mov
mov
xchg
jmp
sub
movl
out
sub
fs
lods
cmpsb
pop
imul
pop
fcomi
nop
or
add
ret
int
cmpsl
sti
fisubl
mov
imul
and
clc
add
repnz
jb
clc
out
out
push
shl
sti
jnp
xchg
ja
iret
fs
icebp
cmp
iret
jg
xchg
ficoml
aam
mov
rcr
icebp
pop
mov
add
sub
rorl
add
repnz
xchg
sbb
outsb
ds
push
out
adc
bnd
jb
add
fnstcw
xchg
fists
mov
xchg
cmp
je
add
xchg
xor
xchg
outsl
out
in
or
or
pop
mov
mov
mov
jg
enter
repz
or
dec
cmpsl
mov
or
nop
mov
aaa
sub
gs
adc
and
movsb
xchg
mov
sub
or
movsb
or
cmc
aam
clc
ds
or
cmp
push
lret
movsl
mov
xor
cmp
push
lret
imul
pushf
sbb
repz
bound
arpl
xor
into
popa
cmpl
adc
add
rcrb
ljmp
jne
aad
adc
mov
lret
stos
movsb
dec
test
sbb
mov
pop
out
pop
inc
lret
mov
imul
add
dec
fwait
pop
lea
inc
iret
dec
lret
pushf
cmp
pop
xlat
add
pop
adc
stos
popf
adc
test
test
fwait
cmpsb
ljmp
mov
or
std
aas
xchg
insb
mov
cmp
mov
pop
std
mov
ljmp
xor
lcall
rcrl
dec
xchg
xor
loop
faddp
push
pop
pop
lahf
xchg
mov
or
call
mov
or
pop
pop
out
mov
ss
sbb
jb
out
mov
jns
cmp
lret
cmp
iret
jg
sub
cs
lret
test
push
cli
rorb
and
xor
push
mov
add
pop
or
stos
movsb
dec
pop
mov
jp
sbb
mov
lcall
into
std
mov
push
cmp
xor
mov
jecxz
add
sti
xchg
sbb
pop
or
iret
and
leave
pop
loopne
aam
insl
cmpsb
xor
out
lahf
add
mov
push
dec
je
xor
xor
jl
mov
push
mov
pop
add
cmpsb
movsb
add
mov
data16
mov
std
imul
out
dec
sub
push
adc
sub
jns
mov
jg
jnp
out
dec
neg
jle
into
pop
ror
jne
or
or
pop
fsubr
jmp
clc
add
cmp
mov
add
aaa
lcall
dec
movsb
leave
ficompl
dec
sahf
test
jns
adc
mov
mov
fbld
pushf
dec
cmp
inc
sbb
es
push
adc
and
out
inc
lock
incl
mov
sbb
add
iret
mov
aas
push
test
insb
sub
ds
pop
inc
call
adc
xchg
mov
sub
push
les
popa
aas
testb
aad
mov
xchg
push
cld
sarb
cltd
sbb
dec
xor
or
scas
mov
div
mov
idivb
aam
nop
subb
inc
xor
push
in
faddl
popf
out
sub
push
push
rorl
jge
jno
sbb
ficoml
sbb
mov
adc
das
clc
xor
arpl
inc
fwait
jecxz
cmp
clc
mov
mov
push
fcoml
les
cmp
jle
mov
addb
testl
push
or
je
mov
mov
cmp
movsb
sahf
mov
out
iret
mov
or
test
mov
lahf
xchg
cmp
or
shrl
in
insb
mov
or
and
daa
or
cmp
in
jge
pop
or
out
fists
lods
lret
arpl
pop
int3
mov
dec
rcll
in
ja
loop
add
xor
cmp
insl
std
cs
clc
test
inc
es
or
jbe
shrb
mov
je
dec
inc
jl
adc
js
mov
lock
sti
repz
dec
testb
in
dec
jb
xchg
adc
sahf
inc
adc
jl
inc
cltd
lds
nop
inc
testl
ds
push
hlt
ja
pop
xlat
inc
loope,pn
jl
int
xlat
pop
stos
out
ss
jge
fwait
cwtl
int3
mov
jg
fcomi
lahf
andb
arpl
scas
cmpsl
mov
jmp
jmp
xlat
in
or
out
fcmovne
sub
jno
frstor
add
mov
aam
adc
or
outsb
dec
lods
jp
mov
sahf
xchg
in
jo
cmpsl
ja
xchg
clc
aaa
xchg
shll
aas
insl
arpl
mov
xchg
xor
imull
sahf
js
push
subl
out
xchg
cmp
je
inc
adc
mov
push
mov
enter
sbb
sub
xor
push
call
xchg
inc
bound
pop
xor
lea
adc
nop
inc
xor
xchg
aaa
or
clc
cld
dec
hlt
xchg
imul
test
sbb
push
stos
sbb
scas
mov
xchg
xchg
sub
imul
fcoms
mov
sbb
xor
xchg
or
mov
out
rcl
adc
fs
cltd
mov
mov
in
popa
sub
cmp
adc
dec
sub
jae
add
cmc
add
jecxz
cmp
out
in
push
inc
mov
mov
lcall
sub
push
pop
mov
jp
bound
fldt
push
push
outsl
mov
bound
xorl
icebp
xchg
out
xchg
call
or
jg
mov
xor
out
in
and
xchg
mov
bound
or
or
aas
jns
int
jmp
pop
push
adc
add
pop
jl
into
lret
scas
mov
inc
sbb
lods
cli
sbb
rcll
out
jbe
fists
mov
lret
pop
add
inc
dec
mov
int3
inc
sub
cmp
dec
push
mov
in
sbb
clc
mov
add
push
sarl
idiv
push
in
dec
aad
pop
bound
rcr
xchg
jecxz
xor
in
jb
push
dec
scas
sub
int3
dec
movsb
rclb
cmc
pop
mov
cmpsl
pop
pop
hlt
leave
and
adcb
xchg
addr16
xor
push
sbb
fiaddl
inc
hlt
xor
icebp
lock
dec
jl
adc
imul
icebp
mov
mov
xchg
or
fwait
push
or
xorl
adc
ret
or
ss
cmp
popa
cmp
adc
fwait
pop
lods
sahf
pop
xor
scas
xor
mov
and
lret
incb
lret
pop
stos
aas
popa
adc
int
adc
loop
push
rcl
outsb
ja
loopne
aas
mov
es
jge
clc
jmp
mov
or
out
sti
add
popf
aas
mov
jmp
add
push
add
clc
dec
stos
sub
push
mov
fistl
ja
pop
movsb
push
push
cmpsl
jns
push
mov
push
ret
in
jl
pop
enter
fists
fstps
and
jb
das
mov
cmp
call
negl
sbb
fsts
push
aam
xchg
pop
in
aas
roll
push
inc
add
pop
testb
mov
adc
ljmp
dec
sbb
dec
jg
lcall
mov
jl
xchg
int
ds
mov
imul
jb
fists
sbb
lock
lods
pop
jmp
shrb
jbe
lock
sti
pusha
pop
sub
rorb
cmp
push
pop
nop
dec
daa
or
mov
push
jp
jne
dec
sbb
inc
lcall
divl
push
mov
shlb
cmpsb
xchg
add
lahf
pop
dec
enter
out
fisubs
push
mov
insb
xchg
lds
inc
arpl
std
cwtl
jl
and
lret
rorb
dec
mov
jno
lea
or
orb
push
repz
pop
imul
push
push
fbstp
mov
daa
clc
cmp
into
xchg
inc
mov
mov
gs
mov
scas
inc
repz
ja
cmp
iret
dec
pusha
adc
push
loope
mov
lret
mov
xor
pop
push
sub
xor
push
xor
loope
jle
jp
cs
mov
adc
mov
add
sbb
inc
imul
or
dec
shrl
sub
cmc
xor
jge
cmp
and
push
mov
sbb
out
push
insl
dec
and
imul
and
imul
push
and
xchg
les
stc
mov
and
pop
mov
ja
sbb
push
call
sbbl
out
das
mov
jae
cmp
movsb
dec
ljmp
pusha
out
in
movsl
imul
imul
push
ljmp
jno
jb
into
and
push
push
clc
popf
fcmovnu
and
pusha
pop
stos
push
pop
shll
xchg
sbb
fdivr
dec
clc
jae
fwait
push
cmc
sub
push
mov
rorl
xchg
xchg
in
sbb
idivb
mov
or
push
mov
xchg
xor
push
xor
adc
daa
imul
inc
and
xchg
cmc
popf
les
push
imul
das
add
imul
inc
cwtl
movsb
adc
fs
adc
xchg
fs
adc
xchg
push
push
sbb
lods
push
xor
jmp
fwait
mov
movb
mov
into
mov
inc
adc
scas
lret
in
dec
rol
pop
push
jbe
jns
xchg
daa
mov
dec
inc
sbb
iret
mov
fdivs
lods
fadds
imul
pop
sub
lcall
xlat
mov
jno
xchg
es
je
push
outsl
jne
mov
leave
jns
idivb
scas
movl
hlt
lret
jl
popf
stos
push
cmpb
jge
dec
push
in
cmp
ror
aam
push
adc
or
lcall
cmp
test
pop
push
and
pop
inc
jge
mov
lcall
sub
xchg
in
movsb
cwtl
test
pop
mov
cmp
ljmp
ja
pop
dec
test
cld
xor
fbstp
dec
sbb
sub
mov
xchg
lds
jl
mov
xor
and
dec
in
push
loop
fisttps
fildl
push
push
les
loopne
iret
jp
add
loope
mov
orb
add
adc
xor
push
push
test
in
sbb
push
add
add
lret
push
xchg
test
bound
or
add
lea
std
jmp
ret
lea
mov
iret
push
sub
sub
cmp
into
inc
sbb
lock
movd
fdivrl
inc
mov
inc
inc
clc
ret
dec
sbb
sub
rolb
or
jl
int3
pusha
xor
or
push
mov
stc
cmp
in
icebp
aad
or
int
mov
rcll
jmp
aaa
and
xor
fwait
imul
iret
pop
mov
mov
pop
cwtl
test
xchg
nop
cmpsl
sbb
in
imul
pop
jle
sti
nop
push
sbb
mov
adc
mov
dec
rorb
xor
pop
ret
xchg
jnp
js
mov
cmpb
out
ja
pop
and
mov
bnd
jp
je
jae
aad
xchg
addb
enter
or
leave
mov
fsubrs
jl
pop
test
jnp
lret
push
xor
push
fwait
andb
insl
inc
aaa
or
mov
fwait
sarb
int
stos
xchg
push
push
jbe
lea
sub
in
push
or
iret
dec
jns
aaa
pop
addr16
movsl
shrl
repz
mov
fcmovnu
mov
dec
mov
mov
sarl
test
int3
out
ss
cmp
movsl
mov
push
cmp
and
movsl
fnstsw
or
jb
adc
xchg
xchg
jae
call
xchg
or
inc
test
repnz
ds
fstpl
add
cmpsl
xchg
mov
insb
adc
xlat
mov
les
dec
popf
aaa
scas
popw
mov
adc
sahf
div
addr16
xchg
jl
mov
mov
repz
outsl
add
clc
push
outsb
rcrl
lret
mov
cmp
cmc
imul
push
mov
mov
xor
ss
dec
pop
dec
out
rol
in
in
fdivl
sub
push
pop
mov
pusha
fldenv
pop
adc
pop
in
pop
in
lret
movsl
xlat
test
mov
les
add
cli
cmpl
cld
lahf
movsl
xor
lds
and
stos
subl
sbb
push
cmp
dec
ljmp
mov
and
inc
and
and
mov
adc
adc
scas
lret
arpl
jo
mov
jl
add
xchg
iret
xchg
aad
push
jle
add
dec
je
inc
push
lret
aam
stos
cmp
into
jo
jl
inc
push
gs
lahf
xchg
bound
movsl
cmpsb
fistpl
test
aam
mov
cli
and
or
dec
jecxz
pop
push
and
in
jb
sti
fidivs
cli
stc
inc
and
cld
cltd
das
inc
outsb
lods
sbb
out
popf
pop
jecxz
lret
enter
imul
mov
push
mov
inc
inc
pop
inc
xlat
mov
les
inc
mov
sarb
and
jb
or
icebp
ljmp
popa
aam
push
pop
loopne
ficompl
sub
xlat
mov
test
filds
jl
insl
fsubrl
mov
adc
mov
aaa
push
shrl
xor
test
fsub
push
pop
aad
test
push
sbb
mov
bound
clc
clc
lds
push
xchg
xchg
aam
jae
add
mov
sbb
xchg
pop
in
xchg
add
int
jns
adc
sahf
clc
or
pop
roll
add
fsts
dec
negl
popa
das
das
out
aas
repnz
insb
nop
and
shll
fdivrl
lods
imul
pop
mov
jno
and
addr16
sbb
push
sbb
aaa
sub
adc
lahf
dec
das
sbb
data16
enter
xchg
call
lahf
xchg
xchg
pop
mov
repz
test
popa
bound
outsl
sbb
mov
jbe
andl
mov
fnstcw
and
dec
mov
arpl
xchg
in
nop
xor
test
or
jge
ret
mov
pop
mov
inc
scas
fdiv
stc
mov
call
call
popa
mov
adc
mov
test
mov
add
push
insl
sbb
inc
ss
and
jnp
jge
aam
pop
and
pushf
mov
movsb
iret
lcall
sbb
inc
lret
icebp
jge
jg
mov
pop
dec
pop
insb
xchg
lea
mov
sbb
in
test
or
inc
push
add
rcrl
inc
and
ret
shll
flds
ss
out
arpl
das
ret
jae
cmp
xchg
ss
inc
push
mov
xor
dec
and
inc
shlb
xchg
add
inc
pop
es
jmp
push
loope
jae
insb
jge
enter
sbb
add
push
push
adc
and
sbbl
sub
les
mov
stos
ss
or
mov
into
inc
lods
inc
or
leave
jmp
xchg
cmp
out
dec
and
push
lods
adc
pop
ss
rcr
mov
insb
imul
gs
gs
cmp
aaa
fs
xlat
inc
fsubrl
mov
jae
mov
pop
jge,pn
mov
lods
cld
mov
push
jno
enter
mov
addr16
push
adc
pushf
inc
arpl
dec
dec
xchg
jmp
pusha
pop
xchg
push
fsubrl
aad
mov
gs
dec
mov
out
add
adc
fmull
nop
add
sbb
inc
and
fsts
cmp
dec
and
pop
mov
das
mov
lahf
out
or
lcall
stos
xchg
and
scas
jecxz
xchg
or
scas
mov
in
mov
fidivs
clc
sub
rcrl
dec
pop
je
pop
in
out
xchg
test
arpl
xor
adc
fsubrl
jecxz
movzbl
sti
cmc
fstpl
mov
lcall
sub
mov
andb
shlb
or
adc
mov
mov
mov
push
loope
sub
sub
add
in
popa
sub
rorb
xchg
and
mov
cmp
jp
cmp
mov
cli
jecxz
jle
and
push
cmp
adc
mov
mov
mov
lods
sbb
ss
push
movsb
dec
movsl
mov
cmp
pusha
push
xchg
unpcklps
call
pop
mov
ds
insb
push
dec
fbstp
push
pop
scas
push
sbb
mov
enter
out
mov
lcall
ds
mov
add
in
adc
cld
lds
sarl
sbb
rcll
nop
jno
mov
jg
xchg
pop
jns
repnz
aaa
icebp
jo
hlt
rcll
rclb
imulb
jbe
loope
push
aaa
lret
xchg
fwait
sub
outsl
imul
xor
dec
lds
sbb
aam
movups
in
sbb
push
add
in
jne
cmpsb
adc
mov
sub
dec
imulb
xor
orb
push
imul
mov
xor
jecxz
imul
add
dec
push
lock
sub
adc
push
cli
fldenv
xchg
stc
xchg
and
push
cmp
insl
out
sub
cmpsb
subb
insb
push
mov
aaa
leave
sahf
es
xchg
add
jmp
hlt
fcoml
incb
pushf
inc
lea
xchg
ja
movsl
mov
out
je
clc
in
jmp
inc
mov
jp
arpl
and
sbbb
adc
add
mov
cmp
inc
jbe,pt
sub
jle
shlb
mov
dec
mov
divl
test
adc
mov
hlt
int
mov
pop
xchg
dec
mov
ret
jno
in
pop
sahf
stos
xchg
icebp
icebp
mov
subl
nop
sbb
and
push
orl
push
std
xor
imul
sbb
adc
push
inc
fsubr
push
mov
mov
movb
push
scas
jne
xchg
pop
rorb
lods
lcall
inc
push
pop
mov
pop
popf
adc
aam
leave
inc
xorb
mov
stc
xor
mov
aas
dec
adc
jnp
push
mov
or
cli
adc
and
test
or
dec
cmp
or
aad
mov
xchg
ret
push
xor
inc
push
test
cwtl
inc
fs
pusha
jp
sub
pop
and
clc
fmul
sbb
ficomps
cltd
mov
sub
xor
mov
fildl
cmc
cmc
sub
rolb
loop
popa
mov
repnz
xlat
pop
sahf
gs
vdivss
sbb
push
int
inc
shr
push
fcomp
pop
outsl
mov
add
cli
xor
add
pop
cmp
add
mov
add
and
sbb
push
add
jecxz
sahf
jnp
in
sti
repnz
push
sub
popf
sub
in
mov
pop
jo
pop
std
std
mov
test
cmp
fnstsw
gs
cmp
lea
js
inc
xor
add
ret
xlat
dec
insl
sub
add
mov
cmp
cltd
push
fsubrs
mov
lahf
je
and
mov
dec
pop
dec
push
jne
sub
fs
mov
push
xchg
sub
ret
ljmp
xor
pop
cmc
xor
add
inc
push
jne
adc
adcb
xchg
in
mov
xchg
dec
sbb
or
mov
inc
insl
sarb
push
fwait
loop
stos
aaa
jg
aam
jl
ds
xor
test
hlt
xchg
es
ret
orb
call
dec
dec
fisubl
fcoms
cltd
int
push
subb
jp
mov
test
mov
mov
gs
sahf
mov
arpl
shrl
adc
inc
ja
pop
sbb
das
jge
or
adc
notb
cmp
out
clc
lods
inc
je
dec
cmp
mov
outsb
pushf
test
jle
mov
mov
jle
loop
add
arpl
fcompl
jo
pop
stc
in
add
test
aas
pop
imul
or
cmp
adc
call
lea
inc
mov
loopne
pop
mov
and
pop
push
je
les
xor
daa
pusha
adc
lock
or
fsubrl
sti
cwtl
loopne
out
pop
sub
lods
les
inc
fs
aaa
and
fsts
mov
adc
xchg
outsl
fistps
test
stos
nop
jle
and
mov
add
hlt
xlat
shrb
mov
mov
int
iret
lock
cmp
adc
mov
pusha
gs
pop
jae
fwait
in
pop
jnp
lods
pop
inc
dec
imul
push
xchg
jmp
inc
push
sbb
mulb
inc
inc
rcr
sarb
pusha
xchg
sti
mov
inc
adc
and
stc
xchg
cmpsl
aaa
sub
inc
jae
xchg
gs
dec
aad
lea
add
int
shl
outsl
popa
addr16
ljmp
aad
push
and
jnp
mov
ja
mov
push
jle
mov
outsl
pop
outsl
sbbl
subl
inc
test
fcom
add
xchg
jecxz
inc
xchg
arpl
loopne
jnp
out
xchg
lahf
jg
aam
sub
inc
push
arpl
jecxz
push
adc
lret
aam
jnp
push
popf
xor
fisubl
jno
jl
jl
pop
test
mov
ss
imul
cs
push
cmp
imul
pop
ss
and
push
sahf
ds
cmpsb
insb
out
or
arpl
xchg
jp
shr
fwait
aas
jnp
pop
dec
xor
arpl
gs
push
mov
mov
inc
stos
into
xchg
mov
fsub
stos
enter
enter
cmp
fsubp
lret
mov
test
into
int
pop
aam
xlat
adc
not
xorb
mov
fiaddl
idiv
addb
pop
out
je
fdiv
add
pop
or
aaa
xor
in
pop
jl
in
pop
inc
imul
sbb
jge
lahf
out
aas
mov
xor
and
sahf
mov
mov
gs
dec
cmp
pop
or
fcoms
sub
pop
mov
cmpb
lods
mov
adc
jle
sti
mov
xlat
sub
or
dec
in
aam
mov
cmc
xchg
cli
jecxz
or
jno
add
mov
mov
add
mov
adc
or
or
xchg
push
sub
dec
mov
daa
pop
push
pop
and
pop
icebp
mov
dec
outsl
xor
sub
lods
lret
adc
push
jns
mov
sbb
ret
lcall
dec
cmp
in
imul
subl
insl
lods
dec
jp
sbbb
ljmp
sti
mov
push
mov
push
mov
loope
sbb
sahf
cmp
sbb
jne
mov
lret
pushf
mov
inc
aam
insb
mov
xor
lret
nop
mov
fstpt
ret
stc
xchg
cmp
dec
cwtl
aaa
sub
mov
mov
mov
xchg
lcall
jge
or
pushf
push
add
mov
xchg
daa
mov
sbb
xchg
lea
das
xchg
dec
ret
mov
scas
fimuls
movsb
mov
inc
or
dec
andb
xor
sbb
aas
and
mov
ror
shrb
jno
add
les
push
scas
mov
inc
mov
sub
jp
sbb
scas
adc
mov
or
pop
jnp
test
add
adc
jge
out
jno
fwait
rorl
call
leave
in
imul
jge
or
jle
pop
mov
ret
sub
dec
out
cwtl
fucomi
add
cli
test
mov
pop
inc
js
cmpsl
and
and
mov
and
out
or
jnp
rcrb
std
mov
xchg
loopne
push
inc
inc
sahf
dec
xor
dec
sbb
scas
sbb
mov
jbe
mov
xchg
pop
stos
imul
popf
fcoml
mov
ficoms
es
movsl
popf
inc
xor
in
push
push
popl
adc
push
mov
and
out
clc
fldl
imul
xchg
push
ja
lock
test
stos
sub
jno
inc
mov
ret
movl
push
sti
pop
sti
iret
testb
fiaddl
mov
rorl
jge
mov
xchg
sub
xor
sbb
out
test
mov
dec
fsubrl
push
daa
in
xchg
pop
je
lret
mov
xor
repz
push
sbb
xchg
fiadds
jge
jmp
xor
push
mov
or
lret
add
push
push
push
mov
mov
mov
cmpsb
and
in
adc
mov
test
or
outsl
out
pop
divl
cmp
or
jge
pushf
push
cmpsb
je
gs
jns
in
jp
subb
jp
sub
ljmp
dec
lock
scas
fisubrs
stos
int
cmp
jo
out
sbb
xlat
aaa
enter
mov
jl
int
add
cmp
das
lock
jb
push
je
dec
push
lret
shl
into
jge
mov
bound
dec
jmp
jbe
sbb
push
inc
pop
fnstenv
aad
pop
add
push
xor
cmp
xchg
dec
adc
addr16
jl
add
out
push
and
push
fcomi
xchg
into
in
jb
mov
cmp
sbb
jg
push
lret
fdivrl
and
popf
fnstsw
dec
add
scas
mov
cmp
out
adc
data16
movsl
dec
test
push
stos
in
sbb
popa
cmp
shlb
hlt
push
test
test
xchg
lods
cmp
test
mov
sarb
fdivrl
jno
mov
dec
or
mov
mov
int3
push
lret
xchg
jmp
int3
inc
xchg
ss
inc
xchg
push
jne
jae
aaa
sub
lods
xor
jne
sbb
mov
inc
inc
ret
test
mov
add
cmp
shll
add
cs
shlb
and
sbb
sti
clc
or
push
ja
fsubr
int
cmpsb
cs
lock
xchg
jmp
add
mov
and
out
sbb
pop
lahf
movb
pop
pushf
mov
mov
loopne
es
add
lock
adc
cltd
popf
pop
push
sbb
pop
pop
and
add
sub
inc
hlt
xchg
clc
addb
sbb
cs
sbb
lcall
mov
inc
scas
or
clc
inc
cmc
cmc
cmpsl
into
lods
push
fldenv
cmp
int3
push
ret
mov
mov
lret
and
jae
push
or
in
repz
mov
dec
adc
jne
xlat
out
mov
mov
stos
lock
push
dec
mov
and
xor
jg
fimull
repnz
iret
sbb
bnd
cmc
sub
stos
jo
nop
rcll
add
das
dec
push
js
pusha
jg
adc
dec
shll
pusha
js
pop
aas
js
xchg
add
enter
mov
das
cmp
imul
sbb
roll
jge
jp
fldl
or
add
cmpsl
and
das
dec
out
cmp
dec
pop
cli
sbb
ret
int3
fnstcw
jo
loopne
mov
addb
add
test
pop
add
adc
js
aas
cmpsb
add
aam
jge
shrb
mov
jnp
clc
xchg
iret
cmp
stc
fwait
jbe
xor
sub
jo
jne
mov
pop
pop
es
adc
push
frstor
ret
pop
out
pop
lock
mov
adc
call
ficoml
lret
mov
daa
xor
push
aad
lcall
mov
pop
and
push
xchg
add
movl
xchg
pop
push
inc
lods
icebp
mov
in
stos
mov
mov
pop
pcmpgtd
xchg
scas
mov
add
and
adc
pop
mov
outsl
fisttps
jecxz
jmp
mov
push
jp
mov
ret
cmp
cwtl
stc
add
xchg
rcr
push
sahf
outsb
repnz
push
and
xchg
xor
jg
into
dec
adc
aad
out
or
pop
movsb
movsl
sub
clc
jmp
sbbb
out
out
int
or
addr16
bound
call
add
dec
test
out
shr
lds
adc
std
mov
dec
push
aad
lret
les
rcll
lcall
iret
inc
dec
push
in
adcb
aad
pop
xchg
sub
xorb
mov
mov
loopne
pop
xor
hlt
iret
repz
mov
insl
and
jle
mov
outsl
jecxz
insb
ss
leave
sarb
arpl
pushf
lahf
rclb
mov
inc
or
adc
std
in
lret
popl
jo
notl
jp
dec
sbb
test
cmpsb
in
ds
jno
out
test
or
popa
sbb
test
xchg
push
int3
imul
std
jp
jb
decb
mov
lret
out
mov
add
mov
test
cmp
movsl
clc
lret
sbb
pop
cmpb
dec
mov
jae
aad
into
add
movsl
jae
fwait
icebp
push
jmp
cmp
int
jo
stos
test
loope
ret
mov
mov
scas
dec
fbld
dec
fstpt
cmp
arpl
sub
push
xor
lret
pop
mov
add
adc
je
and
popa
iret
xchg
lds
pop
ja
lret
sbb
xor
push
jp
cmp
mov
xor
out
add
insl
idivb
pop
in
inc
xchg
push
stos
cmp
push
push
int
movb
inc
push
pop
cmp
xchg
pop
mov
out
or
sub
inc
jo
lods
pusha
test
xchg
dec
adc
xor
xchg
test
cmc
scas
lds
mov
iret
mov
lods
jb
pop
ficomps
rcrb
bound
fidivl
ljmp
push
mov
cmc
sub
mov
sbb
xor
gs
dec
mov
call
mov
jne
and
mov
lret
jle
inc
push
adc
push
in
notb
aaa
pop
xchg
std
out
mov
sahf
xchg
push
imul
mov
push
pusha
arpl
cmp
mov
jo
aas
sub
repnz
data16
sbb
mov
dec
xchg
lret
add
add
jnp
mov
hlt
and
jge
adc
ret
jecxz
mov
mov
cmp
pushf
addb
cmp
movsl
push
mov
sbb
test
jge
jmp
mov
lds
pmulhw
fwait
inc
jbe
jl
ja
pusha
pop
mov
movsb
pop
cmp
test
push
sbb
xlat
aas
mov
subl
xor
lret
jecxz
cmp
rcll
jb
mov
xchg
shl
cmpsl
shlb
jo
gs
sbb
in
mov
sbb
bound
scas
inc
sub
mov
scas
lock
addr16
jbe
inc
call
add
xor
cmp
push
testl
mov
pop
adc
dec
sbb
stos
jae
imul
dec
mov
iret
add
add
sti
pop
push
out
fld
jl
mov
movsl
mov
lcall
lret
mov
mov
push
push
movsl
cwtl
enter
pop
xor
lahf
adc
pop
and
jo
xor
dec
les
aad
xor
into
es
add
push
xchg
inc
sbb
sarb
out
rcll
dec
jge
aas
sbb
xorb
xchg
rolb
mov
loopne
fldcw
mov
pop
xor
push
scas
fcompl
xor
lcall
mov
lcall
push
daa
es
cld
in
test
subl
lods
pop
push
aam
aad
mov
int
rcll
sub
int
sbb
inc
pop
loop
sub
jnp
in
inc
loopne
std
mov
push
je
sbb
call
push
jb
lret
xchg
mov
adc
cwtl
int3
sbb
push
jecxz
sub
insb
mov
lret
push
dec
push
push
add
test
int
xchg
leave
aam
inc
sub
and
lock
cmpl
or
andl
inc
out
stc
adc
sbb
pop
mov
push
es
outsb
sub
ficoml
xchg
jae
sbb
sub
in
mov
jne
and
sar
sub
stc
insb
pop
ss
push
cmc
cli
jl
test
mov
pop
notl
int3
jbe
sbb
jp
xchg
sbb
mov
ds
sbb
and
sub
pop
loopne
mov
test
mov
mov
inc
test
stos
and
fldcw
cmpsl
aam
faddp
into
xor
xor
sahf
iret
das
rorb
pushf
shl
out
push
mov
xor
push
in
out
mov
dec
dec
push
cmp
push
lods
ss
ljmp
ror
cld
mov
adc
pop
and
xchg
sbb
fs
add
adc
mov
mov
xchg
insb
cs
ds
cli
add
rcr
mov
mov
xor
insl
ss
in
jp
or
add
insb
mov
sbb
nop
lock
cmpsb
insb
add
and
sar
cmp
pop
pop
ret
es
lds
jle
test
stos
xchg
aas
das
xor
movsb
jle
add
rcll
sbb
pop
and
lods
inc
inc
clc
inc
int3
mov
mov
or
in
adc
ficompl
loopne
lods
cmpsl
adc
mov
mov
mov
lods
inc
and
adc
xor
xorl
sub
fstpt
pop
mov
stos
iret
jnp
mov
dec
adc
pop
std
ss
andl
sahf
aaa
sbb
push
pop
push
insb
fimull
movsb
and
sub
scas
inc
jne
loopne
inc
dec
pmuludq
inc
and
add
in
mov
xchg
movsl
inc
cli
rcl
shlb
popf
jnp
nop
sbb
lods
int3
test
adc
scas
cmpxchg
ds
std
lds
nop
fcomp
outsl
repnz
inc
fimull
cld
inc
dec
pushf
pop
push
leave
movsl
imul
jae
push
sbb
loop
dec
arpl
hlt
ficompl
dec
sbb
mov
mov
loopne
cld
int
ds
cmc
fadds
inc
cmp
outsb
test
cli
cmc
pop
icebp
and
stos
cwtl
jecxz
ret
jo
push
stc
and
and
adc
psubq
notl
fnstsw
dec
xor
movsb
mov
push
pusha
js
xchg
cmp
jne
test
clc
sub
and
aam
or
cltd
das
add
add
sbb
arpl
push
jne
aaa
les
and
add
push
in
call
and
or
cmpsb
xchg
enter
aam
ret
pusha
sbb
jge
imul
lods
pop
push
inc
sub
aam
jg
out
sbb
int
clc
dec
pop
jo
xchg
addl
mov
xor
jne
inc
or
out
lret
inc
aad
xchg
lea
insl
jns
scas
fcoms
mov
mov
loopne
fisttps
mov
je
cld
stc
jns
leave
mov
movsb
push
cmp
xchg
les
adc
xor
push
pop
mov
mov
daa
ret
push
xchg
fistpl
mov
ret
out
push
add
or
cmp
adc
or
mov
inc
xor
push
cmpsl
arpl
or
pop
sub
pop
ret
je
aaa
insb
or
fbstp
xchg
mov
push
cwtl
pop
xlat
pop
out
lock
push
std
sub
jno
mov
movsb
pop
xor
cmpsl
rcrl
leave
xor
pusha
add
cmpsb
movsl
mov
jno
sub
add
jmp
jo
sbbl
adc
test
clc
xor
pop
lcall
sbb
test
mov
ljmp
insl
into
in
aas
pop
sbb
cmp
mov
out
add
ds
ret
jl
int
lods
mov
push
push
pop
jg
mov
and
xor
aad
mov
or
inc
jg
push
mov
and
movsb
lcall
mov
mov
xor
mov
adc
mov
lock
ds
or
cmp
mov
sub
into
push
dec
dec
imul
xor
iret
outsb
push
incb
inc
dec
arpl
pop
ds
fs
pop
xchg
cmc
gs
push
and
ss
push
xor
ret
xor
dec
add
fldt
cmpsl
unpckhps
js
xor
into
add
movsl
test
sbb
test
cs
mov
pop
xchg
and
push
ret
js
enter
aas
jmp
xor
or
and
clc
dec
outsl
mov
add
shrl
adc
xchg
sbb
aaa
push
clc
roll
fwait
cmp
dec
es
fmuls
push
or
mov
js
in
int
mov
mov
getsec
xor
xchg
aam
dec
call
adc
inc
cmc
jge
sub
mov
ds
shrl
push
xchg
jbe
mov
pusha
ja
xor
xor
fsubs
xchg
lods
mov
scas
cmp
xor
fidivrl
das
lock
stos
pop
sub
lods
push
and
rcll
rcr
jns
pop
mov
test
mov
jl
in
outsb
mov
mov
je
lea
mov
shr
fs
sti
pop
out
pop
mov
cmc
mov
test
pop
mov
add
fwait
pop
out
out
test
sbb
test
insl
or
dec
mov
jnp
out
lds
pop
idivb
jle
fsubrs
mov
sbb
rcrl
dec
mov
mov
fadds
adc
adc
jns
adc
sub
dec
sbb
enter
imul
fnstsw
call
jge,pn
cmp
dec
jecxz
test
pop
jge
push
xlat
adc
lods
mov
dec
and
sub
pop
inc
cmp
fisubs
xchg
cli
push
mov
jge
stos
sti
sbb
adc
fcomps
gs
insl
dec
pop
in
jne
xor
fadd
add
adc
sbb
insb
xchg
jne
sahf
test
jp
pop
cmc
jbe
out
cmp
jne
repnz
pop
into
push
adc
int3
mov
call
faddl
dec
xchg
rcrb
mov
rclb
sub
int3
sbb
inc
lea
and
rcrb
xchg
fdivr
adc
mov
jecxz
add
int
or
gs
add
sbb
xor
sbb
fcoml
dec
or
and
popf
hlt
and
fs
cmpsb
fisubrs
dec
movsb
imul
cmp
cld
leave
and
dec
mov
test
pop
clc
mov
ds
xchg
stc
mov
and
mov
jmp
shlb
in
fwait
lahf
push
shll
inc
and
clc
sub
cltd
popf
movsb
push
mov
stos
into
or
test
jge
mov
inc
dec
pushf
lcall
imulb
xorl
dec
sahf
int
xor
cli
cmp
insb
clc
int
rolb
shl
fsqrt
lea
pusha
mov
in
or
add
sub
adc
stc
jle
xor
aad
add
outsb
es
int3
adc
cmp
cmp
pop
push
aam
pop
xor
sbb
xor
xor
push
lahf
fadds
inc
stos
jnp
cld
and
inc
nop
repnz
cmpb
inc
adc
cmp
dec
adc
hlt
sbb
cld
cltd
clc
enter
xlat
mov
push
stos
xchg
mov
xor
jg
dec
and
mov
cmp
fsubl
pop
aaa
pusha
movsb
pop
std
in
mov
lahf
jns
jg
or
mov
add
or
repnz
call
std
loope
arpl
cmpsb
jb
lret
jae
aam
loop
push
and
int
fstpl
xorl
jmp
add
in
xor
sub
adcl
mov
divl
sbb
adc
dec
shlb
insl
pop
in
fs
call
in
imul
adc
sbb
xor
ljmp
into
mov
mov
icebp
mov
cmp
sub
jl
subb
add
aaa
pushf
lcall
aam
loope
shrl
mov
jo
repnz
rolb
jo
out
xor
cmp
mov
cmp
pusha
loop
pop
sub
sbb
cmpsl
mov
pop
stos
jmp
inc
and
inc
mov
lods
sahf
jo
push
mov
or
clc
shlb
outsb
cmpb
jmp
inc
jecxz
repz
sub
or
loop
jp
shll
fs
lods
jp
jb
dec
loopne
mov
lock
dec
out
xor
add
xor
fcomps
rcll
push
inc
mov
in
xchg
aam
cmpsb
or
pop
xchg
sbb
jno
es
add
es
imul
fsts
mov
inc
xchg
mov
lret
jno
jnp
test
stc
and
adc
push
inc
out
mov
adc
rcrb
and
jg
mov
jno
fst
mov
mov
lds
in
mov
loop
add
pushf
xchg
std
jmp
sarb
xchg
or
add
cwtl
push
add
or
xchg
sbb
std
cs
cs
cmp
sub
movsl
out
adc
jb
mov
inc
pop
leave
jae
adc
mov
icebp
mov
sub
jmp
das
pop
clc
ja
cmpsb
test
jecxz
arpl
inc
outsb
cld
repnz
push
pop
cs
pop
xor
inc
ret
div
mov
test
imul
xchg
adc
push
in
fs
adc
stc
adc
cmc
pop
loopne
int3
or
add
dec
adc
and
pop
in
inc
dec
inc
mov
sub
lods
stos
js
push
jmp
sbb
jp
sbb
push
insb
add
push
xchg
cmp
mov
mov
insb
das
sbb
rcrl
mov
lcall
and
and
test
xchg
sarb
js
icebp
lea
mov
stc
lea
shl
js
ret
dec
cli
mov
xchg
cmc
add
outsl
mov
jl
insl
sub
insb
lret
push
pop
cmc
or
jl
in
push
lahf
sbb
mov
je
call
push
inc
pop
sbb
xor
test
out
test
xchg
repz
jecxz
arpl
shll
push
mov
test
test
aas
sahf
repz
imul
jmp
jle
xchg
ds
xor
or
mul
in
mov
and
or
scas
mov
add
cmc
flds
jb
inc
adc
dec
push
dec
in
mov
out
jmp
out
xlat
push
dec
adc
push
jg
cmp
pop
jno
setae
int3
lock
sbb
mov
mov
scas
bound
stos
inc
mov
jmp
add
mov
xchg
out
out
push
dec
pop
sbb
fwait
mov
adc
jle
testb
out
inc
push
fistl
mov
dec
mov
xchg
xchg
out
jne
cs
mov
sub
xlat
jl
pushf
std
or
push
movsb
sbb
je
add
xchg
inc
les
mov
das
lods
jbe
dec
sar
idivb
inc
mov
xor
mov
out
or
xchg
or
xor
push
sbbl
int
movsb
xlat
data16
cmp
ret
mov
jp
ret
pop
outsl
fcoml
xlat
in
push
mov
xchg
cmp
adc
pop
lods
xor
push
mov
es
cld
pop
fcmovbe
sbb
into
stos
dec
inc
lods
xchg
es
xchg
mov
lods
loop
or
add
pop
mov
iret
ds
add
popa
sbb
repz
push
pop
dec
cwtl
xchg
push
enter
popa
imul
cmp
pop
push
iret
or
push
jmp
insl
out
add
xor
mov
out
rorl
xor
add
repz
dec
in
jp
sbb
mov
inc
jae
out
setp
lahf
out
inc
nop
nop
dec
pop
test
xchg
std
inc
stos
in
out
and
push
jge
mov
cwtl
cld
dec
mov
xchg
xchg
jns
jb
add
and
mov
insb
mov
stos
pop
cmp
adc
lret
mov
ljmp
insb
sbb
jl
inc
outsb
int
mov
sub
cmp
movsl
out
inc
jno
adc
pushf
fsubrs
aas
in
xchg
pop
xor
out
and
mov
and
dec
and
or
ljmp
pusha
mov
mov
pop
dec
jge
cld
jg
pop
mov
cmp
xor
pop
bound
or
sbb
data16
xchg
jl
ret
xor
enter
mov
mov
mov
and
or
bound
and
test
cli
rolb
je
mov
decl
mov
arpl
and
fistpll
aas
mov
cmp
push
push
inc
cltd
push
cmc
loope
or
pop
in
fildll
ds
sub
ljmp
add
mov
js
hlt
or
jno
adc
mov
mov
ficoms
shrl
dec
pop
mov
cmp
loop
mov
stos
sbb
xchg
inc
je
cmp
std
insl
sub
outsb
stos
sbb
repz
pop
xor
inc
adc
mov
cltd
lcall
mov
inc
enter
xchg
rcll
test
jae
es
push
movsb
adc
shr
int
sbb
lcall
rolb
cmp
or
test
pop
rorl
ret
fisubs
rcrl
xchg
or
out
pop
xlat
sbb
icebp
add
andb
inc
hlt
mov
and
mov
or
and
inc
mov
xlat
jb
cmpsb
arpl
int
leave
mov
js
lcall
push
test
jle
jbe,pn
mov
scas
leave
jle
je
ret
test
cmc
jo
sahf
lock
xlat
xchg
daa
pop
fadds
outsl
sarl
icebp
lods
inc
cmp
or
fdiv
stc
mov
out
adc
xchg
cmp
xor
imul
mov
mov
or
out
lcall
out
adc
xchg
mov
movsb
notb
popf
aam
call
push
push
mov
fucomi
sbb
mov
mov
jb
or
sub
sub
cmc
pop
fwait
std
bound
pop
pushf
das
push
cwtl
and
aas
lret
mov
ja
cmp
xor
or
and
cmp
js
vhsubpd
or
and
ret
jbe
into
add
push
dec
test
mov
cmc
pop
fdiv
mov
jge
lods
xchg
mov
out
add
mov
mov
hlt
cwtl
mov
xlat
rol
imul
rcr
jbe
push
pop
jne
jne
mov
es
outsb
dec
pushf
lds
xchg
xor
test
push
inc
stos
inc
std
cmc
jmp
cmp
dec
jmp
daa
pop
int3
jns
mov
mov
adc
xchg
cwtl
jns
aad
repnz
ljmp
cmp
push
call
and
push
ss
mov
shlb
or
test
sub
jp
data16
cltd
stos
rclb
popf
inc
movb
outsb
lock
or
pop
inc
mov
xor
sbb
push
pop
lock
pop
xor
int
and
jne
icebp
pushf
adc
and
cmp
mov
ljmp
and
push
fisttpl
jg
cli
mov
test
cmpsl
pusha
loope
arpl
pusha
call
adc
jp
out
xchg
pushf
cmp
jno
xchg
imul
test
int3
stc
int3
push
in
cmp
push
adc
out
pushw
das
sbb
insb
std
insb
dec
out
ficompl
in
mov
inc
sbb
xor
outsb
gs
mov
imul
cs
aad
andb
repz
pop
mov
mov
les
sahf
js
lret
jg
out
fildll
inc
pop
push
adc
movq
daa
movsb
flds
mov
mov
stos
mov
ret
or
adc
adc
jae
dec
pop
sbb
nop
cltd
and
insb
repz
movsb
mov
es
jbe
stos
pop
in
in
lret
pushf
pop
in
adcb
mov
mov
add
jns
fimull
or
dec
cmp
das
imul
lock
cli
test
js
jge
adc
pusha
fs
add
stc
orb
iret
lock
mov
inc
je
out
push
and
test
negb
xor
popf
dec
imul
add
mov
lock
std
test
cmp
call
adc
dec
ss
or
xchg
jbe
push
jmp
cmpsl
sti
pop
ret
xlat
das
jno
stos
sub
push
lods
fldt
cmpsl
fnsave
cld
inc
cmp
into
xchg
cmp
pop
and
inc
pop
ljmp
inc
sarl
mov
popa
sub
lock
dec
mov
jmp
push
and
pushl
idiv
mov
mov
push
xor
fidivl
cmp
pop
xchg
push
cmpsb
xchg
movsb
dec
jecxz
scas
jbe
xchg
mov
fsts
or
jmp
dec
loopne
xor
mov
mov
mov
xlat
fiaddl
fwait
and
js
adc
lock
insl
or
mov
xchg
adc
cmp
cmp
in
add
xlat
cmp
mov
rolb
adc
fidivrl
in
lods
xchg
data16
scas
sbb
jne
mov
scas
dec
mov
icebp
mov
fwait
jmp
popa
fisttpl
and
mov
in
mov
fcoms
cmp
pushf
fsub
cli
xchg
mov
mov
or
adc
inc
mov
fildl
cmp
mov
and
shl
cmp
adc
mov
and
call
or
test
scas
movsb
inc
int3
jns
mov
inc
cmp
ffree
sub
cld
push
dec
fdivrl
pop
mov
inc
push
aaa
out
lcall
repnz
in
fisubrs
add
shrb
popf
cmp
iret
fimull
sub
out
fcoms
inc
aam
pop
xchg
jo
mov
loope
movsl
cmc
sub
jp
jb
push
push
jns
dec
in
outsb
xchg
xor
inc
lea
test
or
aad
movsl
pop
mov
outsb
mov
mov
add
or
out
fisubl
stos
adc
repnz
cld
sub
jmp
scas
jnp
sbb
sub
mov
es
xor
subb
ljmp
js
push
loope
sbb
jl
xchg
mov
xchg
sub
rorb
xlat
cltd
out
enter
scas
xor
xor
and
ds
mov
not
sbb
ret
mov
sbb
lods
dec
inc
imul
jmp
fcomps
cltd
das
jge
inc
or
dec
repnz
mov
sbbb
dec
lahf
out
sub
xchg
inc
inc
mov
jecxz
test
loope
mov
dec
xchg
lretw
pop
enter
icebp
ljmp
aam
adc
jns
cmp
mov
test
fs
pop
test
push
push
bound
stos
cmp
inc
xor
mov
xor
cld
mov
push
dec
push
sub
loope
lret
fldcw
jg
jg
inc
lret
mov
pop
sti
imul
dec
cltd
mov
xchg
test
out
das
scas
int
ss
rcrb
pop
inc
xor
ljmp
arpl
and
outsb
mov
adc
arpl
add
sbb
lret
sub
jb
dec
dec
mov
mov
shlb
fdivrl
xchg
notl
mov
cmc
out
js
push
les
and
imul
xlat
addr16
add
mov
push
xor
push
inc
iret
ret
mov
xor
push
jmp
ficompl
cwtl
mov
jns
subl
test
jne
jo
inc
jns
cmpsl
rcrb
insb
jl
inc
rol
pop
xlat
shll
dec
stc
cmp
mov
push
test
xchg
test
lods
pop
bound
pop
dec
out
loopne
fsubrs
xor
jns
fcom
ss
inc
add
xor
das
loope
loope
lds
in
add
sub
jbe
sarl
dec
into
imul
ret
hlt
out
jae
aad
xor
negb
enter
add
sub
dec
cmp
mov
sub
jo
inc
or
mov
cmpsl
sub
mov
nop
cmp
or
lods
inc
insl
arpl
xchg
insl
out
push
inc
in
sarl
or
in
jge
jno
pusha
dec
out
push
imul
pusha
loope
xchg
aaa
pop
add
inc
mov
add
jno
dec
xchg
cmp
jecxz
lret
orb
jno
out
dec
mov
test
loop
mov
pop
add
xchg
dec
lret
arpl
xchg
dec
int3
fwait
stos
into
sbb
dec
movaps
nop
shll
test
scas
mov
call
lds
dec
inc
xchg
cmp
push
into
xor
push
out
daa
jno
add
jmp
fisubs
ret
adc
inc
stos
ja
xlat
fnsave
pop
pop
ror
jg
mov
sub
pop
scas
sti
and
cltd
iret
dec
jne
jo
sbb
pusha
add
repz
xchg
lods
push
cmp
cmc
int3
das
mov
xchg
shll
out
loop
dec
imul
pop
imul
rolb
xchg
lods
add
je
test
mov
test
in
sub
or
sbb
jae
jecxz
sarb
lahf
and
shr
push
push
inc
cmpsb
call
cwtl
xchg
mov
lock
rorl
fcomps
cmpsb
loopne
xchg
sub
and
jg
aaa
jbe
push
jno
xchg
xlat
mov
pop
push
shlb
adc
popa
cmc
jbe
es
jno
out
clts
rcll
jge
aad
push
pusha
pusha
add
les
lahf
mov
mov
repz
sbb
mov
sub
es
inc
shll
jno
cld
add
push
dec
pusha
int
cmc
test
arpl
and
shll
mov
or
arpl
lahf
addb
jno
inc
cmp
mov
jae
push
test
ss
inc
mov
sub
xchg
sub
pop
js
jle
data16
dec
inc
xchg
mov
popf
repnz
jg
xchg
mov
or
rorb
call
mov
inc
nop
je
inc
rclb
or
add
xor
loope
or
les
and
daa
sub
adc
push
stos
inc
rcrb
sub
push
cs
mov
or
dec
sbb
xchg
inc
cmpsb
lahf
icebp
add
pop
cmp
sub
mov
mov
cmp
repnz
repz
mov
and
or
lea
add
mov
repz
negb
fwait
inc
pop
lret
into
rcrl
mov
mov
iret
pop
jmp
lret
inc
jecxz
inc
call
imul
jbe
les
cmp
test
or
jae
adc
mov
stos
stc
adc
dec
xlat
ss
scas
push
dec
fwait
push
sub
je
dec
push
jmp
push
and
ss
outsb
inc
mov
hlt
mov
or
daa
push
fnstenv
adc
out
stc
fucomi
sbb
into
push
add
and
or
lret
aaa
xchg
adc
cwtl
mov
and
stos
cmp
cmpsl
fidivrl
fstpt
inc
sbb
mov
adc
int3
sti
inc
mov
call
rcll
lret
xchg
jge
rcrl
or
sbb
jg
adc
pop
cmc
sub
pop
out
fcmovu
jg
cli
jge
dec
aas
dec
add
fsubrs
repnz
and
mov
sbb
jp
wbinvd
add
sub
mov
mov
fdivrs
jo
leave
sbb
and
outsb
or
and
mov
fsub
push
ss
jl
scas
cmovs
int
cwtl
xchg
test
pop
dec
stos
mov
aad
or
lods
xor
mov
jg
inc
fstl
dec
xchg
lods
test
inc
dec
push
imul
push
fdivrp
xchg
mov
data16
mov
inc
or
pop
arpl
imul
push
cmp
test
jle
dec
aaa
dec
or
mov
fildll
popf
mov
xor
jno
mov
mov
mov
mov
mov
in
imul
xor
jmp
cmp
push
cmp
pop
int
stos
inc
jmp
cs
xor
add
in
jae
xchg
or
xchg
pushf
dec
test
jge
int
lahf
adc
cltd
rorb
insl
sbb
std
mov
adc
push
jecxz
fidivrl
aas
and
adc
cmp
sti
sub
dec
hlt
imul
sti
mov
addb
movsb
clc
and
cmp
stc
pop
sti
mov
cltd
xchg
dec
out
pop
adc
xchg
mov
stos
jae
dec
cmpsb
mov
dec
rcll
icebp
xchg
mov
adc
movsl
js
xchg
ret
jecxz
imul
test
dec
jae
xor
adc
xchg
sbb
jns
aam
cmpsl
int
add
stos
sbb
xchg
je
cli
xlat
cs
add
push
aam
inc
leave
aad
inc
adc
pop
leave
data16
das
jnp
test
out
jge
lcall
jmp
mov
test
cmp
or
push
andb
clc
mov
inc
ja
and
fwait
popa
stc
fwait
lds
add
nop
loop
xor
add
pop
lret
popa
push
mov
push
push
jns
jge
push
in
xchg
xchg
mov
xor
adc
movsb
mov
idivb
cmp
fs
dec
pop
mov
shrl
gs
mov
pushf
pop
mov
xor
icebp
scas
pop
mov
shrl
xlat
int3
ficoml
lret
fsubr
mov
sub
pop
pusha
ret
lret
sti
push
or
imul
aas
add
jo
aaa
pop
fwait
outsb
cmc
repnz
add
sbb
aad
cltd
mov
insb
cli
clc
cltd
lret
jmp
sbbb
shlb
pop
adc
dec
xchg
adc
push
pushf
dec
cmc
fiadds
loopne
cmpsb
sbb
out
jecxz
mov
xchg
rorb
iret
daa
jnp
gs
scas
jae
mov
xchg
mov
or
cltd
jno
loop
inc
xlat
xor
cmpl
pop
push
std
inc
std
pop
add
dec
mov
jmp
es
push
testl
inc
sub
cmp
mov
sub
fstpt
js
xor
sub
pop
test
mov
push
and
mov
fs
lcall
xchg
pop
outsb
sub
movsb
dec
push
in
push
inc
pop
push
dec
out
mov
push
andb
in
cmp
lcall
icebp
int
ljmp
and
arpl
loop
je
cmpsl
jp
and
xchg
lods
pop
loopne
inc
xchg
iret
in
sbb
xchg
pop
repnz
push
mov
sbb
and
jo
jle
pop
loope
dec
or
mov
and
add
add
mov
dec
and
mov
sbb
add
fldenv
pop
fsin
aas
insb
sbb
xchg
push
jmp
pop
scas
insb
adc
xor
shll
arpl
fcoml
jecxz
cmp
lods
test
scas
adc
aad
jle
push
pop
sbb
mov
xchg
orl
jg
cmpb
push
fstpl
mov
cmp
jo
add
insl
push
adc
sbb
jns
mov
xor
xchg
pop
inc
jecxz
mov
sbb
into
roll
aaa
adc
xor
sub
aad
cmp
add
ret
les
mov
dec
sti
push
lret
sbb
loop
movsb
and
cli
xor
gs
cmp
or
push
cmpsl
mov
push
ficomps
clc
and
cmpb
sub
cld
pusha
ret
jnp
addr16
add
mov
icebp
add
sub
fnsave
and
mov
scas
int
stos
lret
out
xchg
or
sub
enter
xchg
rcr
adc
push
mov
out
jnp
gs
xchg
cli
loope
movsl
push
mov
jle
mov
jne
mov
test
mov
mov
or
mov
in
das
fsub
pop
dec
push
sbb
pop
out
lods
cmc
pop
ss
mov
sbbl
or
xchg
jae
mov
out
adc
add
fdivl
push
push
push
inc
cmp
xchg
jg
aad
lcall
xchg
shll
dec
test
call
sub
int3
frstor
mov
scas
xchg
movsb
int
dec
xor
sbb
add
xor
jg
sahf
lahf
jo
out
cwtl
inc
stc
mov
or
cs
aaa
dec
mov
and
movsw
mov
cmpl
push
imul
xchg
test
cmp
lea
cmp
into
cld
cld
dec
jg
addr16
icebp
mov
in
not
push
notb
mov
xchg
pop
push
bound
adc
inc
xor
lds
add
inc
dec
insl
xor
cmpsl
popf
mov
cs
and
mov
cmc
add
aad
test
xor
arpl
scas
mov
mov
mov
clc
sarl
addb
dec
push
or
or
and
fistpl
or
movsl
pop
fwait
hlt
add
push
movsb
jbe
loope
stos
outsb
push
in
inc
test
rcrl
jo
jmp
fsubs
dec
add
add
adc
fcmovne
jno
js
orb
mov
pop
std
scas
ja
jnp
push
outsl
push
mov
add
out
daa
fadd
popf
jp
and
cmp
sbb
sahf
shrl
sbb
dec
jne
leave
jecxz
push
add
xor
push
imul
xor
sbb
mov
fistl
hlt
mov
popa
or
pusha
insl
lock
fs
push
fdivrs
aad
nop
sarl
decb
push
dec
sub
sbb
adc
stc
and
push
push
rcl
cmp
dec
ss
inc
adc
incb
insl
or
and
lods
jle
fstpl
jo
mov
je
imul
sub
loopne
test
in
cmc
rcrl
ret
jecxz
popa
pop
or
jle
dec
out
sti
mov
imul
sbb
xor
ds
leave
int3
and
inc
testb
mov
out
std
and
sbb
add
dec
sbb
jmp
mov
cld
dec
adc
jbe
xchg
xorb
dec
je
mov
push
add
cmp
out
xchg
icebp
sbb
andb
jp
repz
int3
int3
pop
cli
int
loope
jmp
js
test
popf
dec
inc
xor
jmp
insl
dec
pop
xor
xor
sarb
jno
mov
jp
sub
out
test
scas
fdivrl
aas
mov
les
iret
inc
mov
icebp
push
inc
mov
dec
mov
sbbb
pop
ficoms
sub
sub
ja
imul
or
and
add
inc
aaa
mov
sbb
pop
add
jmp
xchg
mov
pop
xor
xlat
adc
sahf
cmp
adc
js
jp
inc
jmp
ret
aas
xchg
cs
cltd
enter
pop
std
fidivrl
lods
fs
inc
int3
jecxz
aad
inc
mov
sub
lods
cmp
add
je
adc
outsl
xor
xchg
fsubs
mov
pop
xchg
fwait
push
insb
cmpsl
outsl
jge
mov
int3
pushf
cmp
mov
insb
repz
mov
sub
or
int3
out
jo
es
jmp
add
sti
jno
insb
popa
into
and
lock
lret
push
test
mov
scas
fsubs
fwait
mov
xchg
xor
repz
in
xchg
negb
sub
xlat
std
pop
xor
jne
pop
dec
dec
pop
insl
mov
sarl
and
mov
xchg
sbb
ja
jnp
xor
faddp
xchg
cmp
or
int
pop
xchg
jno
xchg
mov
jmp
jb
shrb
cwtl
adc
xchg
aaa
ja
lahf
stos
pop
xchg
subb
push
inc
dec
xchg
mov
testl
mov
aam
insb
pop
adc
inc
push
xchg
ret
cmp
sub
cmp
inc
sub
in
fidivl
ljmp
or
stc
add
pop
cld
mov
pushf
mov
setge
fcoms
sbb
idivl
xor
fsubrp
adc
mov
fisubrs
push
fisttps
pop
sub
xchg
and
es
xchg
icebp
sub
pop
push
and
sub
and
imul
aad
sbb
out
push
popa
dec
imul
cwtl
sar
mov
lock
push
mov
lock
mov
test
cmp
lods
in
neg
add
and
xchg
lcall
adc
test
fsubl
inc
loopne
movsb
cmc
fldcw
dec
push
ret
fcompl
loop
gs
pop
jmp
jge
cmpsb
jo
adc
add
test
pushf
jmp
mov
push
out
fld
mov
mov
jns
dec
add
adc
mov
ficomps
jg
mov
sahf
push
fisttpl
adc
stc
test
jmp
cmp
mov
mov
push
mov
mov
cmpsl
mov
loopne
inc
icebp
sbb
mov
enter
push
push
jae
cli
cmpsl
cmp
enter
cmpsb
out
sub
fsubl
and
jne
jnp
pop
sub
mov
pop
arpl
dec
mov
cmp
mov
pop
jle
cmp
mov
inc
pop
and
pusha
cmpsb
bound
pop
pushf
mov
sub
lods
popa
mov
outsb
popa
stos
nop
cmp
out
mov
or
mov
mov
cmp
enter
dec
aas
jmp
pop
shlb
stos
xchg
in
xchg
shlb
jl
es
dec
cli
js
inc
cmpsb
push
leave
push
iret
sub
mov
gs
clc
jo
jmp
push
mov
cmp
scas
std
mov
pop
fmulp
fldcw
pop
mov
cmp
testb
mov
cmc
inc
cltd
or
or
pop
adc
push
aaa
mov
scas
nop
xor
das
sbb
fnsave
cmp
dec
jae
adc
ret
loopne
pushf
fwait
and
sbb
jno
shlb
test
sub
ljmp
pop
pop
call
dec
xor
sbb
jns
sahf
add
loopne
rcll
fisubl
mov
shl
pop
xorb
push
xchg
push
sub
mov
push
or
push
push
loope
movsb
push
push
and
mov
jle
xchg
push
inc
xchg
dec
test
push
outsb
fsubrl
pushf
xor
scas
xchg
xor
aad
mov
mov
std
rcll
pop
mov
scas
repnz
cmpsl
out
les
push
push
jne
push
mov
pop
push
xchg
dec
xchg
pop
lods
frstor
jp
jne
in
xor
pop
xchg
cld
lea
cmp
inc
and
pop
xchg
mov
ret
add
jecxz
mov
and
insb
imul
mov
mov
pop
mov
ror
jae
dec
add
inc
stos
in
pop
es
stos
xchg
out
mov
push
sar
scas
pop
test
inc
pushf
insb
loopne
clc
movl
out
sub
xchg
cmp
xchg
in
adc
ret
sbb
dec
jmp
mov
sub
pop
mull
sub
hlt
push
cmpsl
mov
mov
mov
ja
or
lock
fs
scas
xorb
xchg
xchg
push
sbb
mov
mulb
or
inc
mov
popa
mov
jmp
add
or
adc
lret
and
xchg
cwtl
jg
cmp
pusha
jmp
and
arpl
inc
xor
and
cwtl
xor
pop
xor
adc
in
pop
sub
mov
lea
test
mov
jge
adc
das
aas
fsub
lods
push
mov
and
or
push
iret
mov
mov
lcall
cltd
or
push
jns
fdivrl
fs
add
repz
xor
pop
pop
cmp
push
xchg
std
sub
out
stos
mov
rorb
pushl
cli
xchg
rorl
data16
pop
outsb
and
nop
rorb
cmp
push
sahf
inc
ret
pop
stos
xchg
fsubrs
mov
and
data16
mov
add
stc
lods
lea
xchg
mov
ror
adcb
nop
hlt
aas
std
or
adc
sarb
gs
inc
inc
sbb
mov
push
sub
lahf
aad
out
divb
fldl
popa
mov
cwtl
sub
push
cli
ljmp
mov
imul
pop
jo
cmp
sub
in
jle
scas
ror
cmpsl
add
dec
ja
js
cld
mov
ret
adcl
or
and
cld
mov
out
xchg
cwtl
cmpsl
jns
add
push
fcmovbe
inc
hlt
repz
push
or
das
ja
mov
mov
nop
jmp
inc
int3
dec
inc
enter
push
add
sbb
xor
xchg
or
fdivrs
push
outsb
nop
shll
dec
push
lods
sub
pushf
cmpsl
mov
mov
stc
pop
cmpsl
ss
aad
fs
int3
sub
sub
xor
ds
je
or
mov
mov
mov
pushf
aas
sbb
pusha
pop
push
cwtl
and
ja
cld
or
ds
xchg
inc
sti
dec
test
sarb
xor
int3
test
lea
xor
lods
sbb
xchg
mov
cmpsl
inc
jbe
add
mov
mov
mov
cmpl
lahf
dec
test
adc
adc
outsb
mov
clc
sbb
iret
jno
adc
stos
rolb
sbb
pop
jecxz
jnp
fwait
mov
push
mov
in
ret
jnp
incl
xor
cld
fnstcw
pop
sbb
loope
out
repz
dec
cli
rolb
mov
out
lea
inc
loopne
iret
or
in
or
test
into
or
xor
popa
xor
outsb
lret
xor
in
paddusb
lahf
and
lcall
mov
stos
sbb
imul
scas
add
jbe
jle
sbb
push
and
ljmp
in
test
jbe
js
dec
clc
stos
mov
add
std
pop
dec
ljmp
insb
push
jmp
sbb
inc
fsubs
pop
ljmp
das
push
dec
mov
repz
xor
mov
pop
out
imul
iret
js
cmp
xor
push
aas
sarl
test
loop
add
sub
push
mov
jb
lcall
out
pushf
insb
loopne
rorl
ror
repz
add
push
and
pop
xchg
fcmovne
in
iret
and
or
fidivs
adc
sti
mov
lahf
and
loop
dec
pushw
decb
add
mov
inc
mov
add
lcall
or
lock
mov
pop
cmp
sbb
insb
sub
outsb
sbb
add
mov
stos
mov
in
pop
mov
fists
sbb
xor
xchg
cmp
jle
cltd
xchg
dec
int
mov
nop
pop
outsl
fldcw
repz
scas
subl
add
mov
arpl
or
inc
nop
jns
scas
clc
rcrb
jb
and
js
and
popf
inc
or
notb
sub
xchg
test
mov
pusha
jne
fnstenv
roll
int3
test
sti
fildl
push
inc
jmp
push
push
dec
adc
xchg
mov
add
pushf
out
inc
sub
sub
loope
in
in
add
push
fwait
push
mov
imul
inc
ja
test
shlb
pop
add
adc
stos
sub
es
ret
dec
dec
mov
dec
inc
add
loopne
mov
or
xor
fildll
dec
or
lcall
mov
mov
in
inc
std
add
nop
mov
clc
cmp
sti
pop
pushf
pop
shl
mov
and
mov
iret
dec
add
lcall
lcall
push
dec
or
movsb
add
jmp
xchg
dec
sbb
roll
push
pop
inc
cmc
arpl
and
sbb
scas
int
push
xchg
or
pop
mov
mov
stos
fwait
inc
aaa
lods
mov
cmpsb
pusha
call
mov
sub
je
fidivs
dec
fwait
jmp
xor
adcb
in
aam
rcrl
dec
or
cmp
jb
xchg
jmp
mov
insb
int
cmp
gs
dec
sub
xor
test
lcall
xor
mov
xchg
clc
mov
insl
lea
lahf
mov
pop
lds
jo
pop
xchg
fiadds
inc
scas
mov
lret
loopne
and
lods
sbb
orl
sarl
jge
cmp
ds
testb
outsl
add
xchg
add
cmp
lret
push
mov
movsb
fistpll
mulb
xor
loope
push
push
and
dec
icebp
into
adc
push
xchg
in
inc
aad
jb
pop
xor
mov
xchg
hlt
xchg
lret
fwait
sbb
enter
cli
lret
add
sarl
dec
test
lods
sbb
mov
pop
out
enter
cmp
mov
push
stos
sub
adc
push
pop
lret
leave
sahf
repz
nop
inc
mov
and
fidivl
dec
shlb
jge
push
shll
sub
xchg
test
int3
insl
in
repz
and
dec
lcall
sahf
dec
es
adc
dec
out
out
sbbl
pop
notb
pop
push
imul
xchg
test
pop
loopne
movsw
out
std
push
in
lea
cmpsb
xchg
pop
or
mov
sub
js
outsb
jle
loop
scas
push
scas
sub
jg
fadd
in
test
cld
inc
cld
fsubrl
rcll
aam
fcomi
lcall
push
into
jno
push
insb
and
cmp
ss
adc
fs
les
test
arpl
iret
shl
lret
mov
cld
push
scas
cmp
add
push
sbbl
pop
scas
xchg
iret
mov
fstpt
in
mov
imul
push
or
jo
js
clc
outsb
add
mov
push
sbb
and
xchg
add
push
pop
dec
and
std
push
cmpsb
es
std
test
popf
arpl
hlt
push
fcom
sbb
test
xor
nop
mov
in
mov
jo
mov
mov
dec
xchg
in
outsl
xchg
stc
fdivrl
push
adc
pop
pop
sti
sub
jecxz
xor
push
and
push
xchg
filds
lahf
cmp
mov
bound
push
jle
fdiv
lock
xchg
pop
inc
inc
shrl
addr16
rcrl
pop
dec
cmpsl
bound
fisttps
pop
sti
cld
push
or
jae
mov
addr16
cmp
movsl
mov
jo
sahf
jb
dec
pop
sub
in
adc
movsl
xchg
ficomps
shr
push
adc
popa
test
pop
pop
dec
movsb
pushf
ss
aas
xor
fisubs
lock
lds
push
test
mov
cwtl
add
pop
imul
cmp
mov
das
std
rclb
popa
cmpsb
lock
cli
aaa
bound
lcall
stos
idivl
jo
shlb
push
fnstsw
or
push
enter
scas
neg
xchg
ret
mov
lahf
lcall
cmpb
addr16
pushf
jmp
add
push
lock
jg
push
shufps
mov
loope
lods
xchg
mov
adc
testb
cmc
int
xor
cmp
ret
fwait
int
clc
bound
sahf
cmp
or
jbe
jg
ffreep
iret
dec
add
iret
hlt
lea
jno
jge
mov
cwtl
add
xchg
add
addr16
imul
std
inc
imul
pop
aas
test
es
call
xorl
cmp
jbe
pxor
cmp
xor
mov
loope
mov
loop,pn
and
fmull
push
pop
jns
insl
out
das
or
dec
testb
mov
pop
stc
in
sbb
adc
aam
jle
jecxz
xor
xchg
aaa
cmp
and
cmpl
aas
pop
mov
jbe
push
mov
loopne
in
xor
and
inc
sbb
dec
xorl
dec
inc
dec
mov
adc
shll
inc
inc
test
xor
jg
into
sbb
addr16
or
jmp
dec
jl
or
std
aas
jno
movsb
lahf
adc
adc
scas
push
dec
sub
and
adc
jge
pop
addr16
popa
jmp
push
dec
pop
and
lcall
scas
ja
cmc
addr16
fcoml
xor
jnp
xor
sub
call
outsl
dec
sarl
push
pop
cld
or
push
xchg
push
mov
mov
adc
cmp
mov
cmp
xor
lods
mov
fimull
jecxz
or
test
jne
lds
adc
nop
adc
dec
lds
inc
mov
push
mov
scas
xor
scas
fmul
jnp
push
outsb
pusha
and
lret
or
pop
and
hlt
inc
stos
adc
xchg
fisubl
movl
add
cld
xchg
flds
inc
std
insb
bound
sbb
cs
sub
jg
dec
ljmp
cltd
mull
mov
cmc
loop
rolb
mov
jle
outsb
scas
jb
js
mov
test
test
and
cmc
sbb
inc
in
jge
mov
fwait
and
jne
mov
test
xor
mov
dec
jnp
push
cltd
add
push
cld
cld
inc
mov
dec
inc
loopne
inc
out
in
inc
ret
enter
outsb
push
adc
jge
jbe
clc
outsl
jb
movsl
mov
push
and
xor
add
imul
push
repnz
repnz
xor
mov
addb
sub
out
jmp
mov
test
jl
or
gs
fcmovnbe
jl
pop
mov
mov
lods
icebp
insb
aaa
out
dec
pop
jb
xchg
adc
and
and
add
ja
out
jecxz
and
pop
int3
sub
test
scas
adc
cmp
sbb
and
cmp
ss
xor
jns
jmp
push
lahf
pop
addb
jnp
aas
dec
adc
sub
test
repz
push
dec
adc
cmp
dec
add
jl
add
or
test
aam
and
mov
hlt
sar
sub
dec
fildll
push
dec
inc
addr16
sbb
fstps
test
xchg
cmpsb
xor
sub
icebp
jmp
les
add
mov
mov
lret
pop
fcoms
push
in
xchg
push
cmpsl
mov
ret
xchg
adc
push
clc
jae
into
into
inc
dec
loop
adc
mov
cwtl
adc
out
pop
dec
jg
sub
mov
or
cmp
sub
inc
xchg
into
test
loope
cmp
xor
lcall
mov
pop
pop
mov
jmp
ds
aad
rcll
in
jnp
cmp
mov
dec
fnsave
add
mov
sti
repz
push
decl
push
dec
adc
ljmp
clc
mov
and
push
rclb
data16
hlt
ljmp
jl
pushf
fwait
add
jecxz
add
jg
xor
into
imul
mov
adcl
sub
clc
jns
mov
xchg
xchg
or
inc
ljmp
dec
inc
sbb
inc
out
push
lahf
mov
test
enter
push
in
mov
daa
call
mov
pop
stc
jb
push
and
int3
test
pop
jp
push
add
push
mov
nop
aam
in
sub
xlat
jns
cltd
jne
dec
insb
and
xor
push
pusha
sbb
add
mov
cwtl
or
or
mov
mov
add
ret
insl
lods
fldenv
push
jno
and
cld
dec
popa
pop
ret
cmc
int
cwtl
test
jl
andb
dec
pop
push
cmp
lds
cmpsl
fdivs
xchg
pushf
cltd
test
mov
mov
sub
lods
xlat
imul
xor
sub
testb
cli
btr
jge
fwait
inc
jg
pop
xchg
fistpll
imul
sbb
lcall
add
test
arpl
jae
loopne
cmp
xchg
mov
cwtl
fildl
and
jo
adcb
out
out
add
je
xchg
add
rcrl
faddl
popa
mov
int3
cltd
dec
dec
test
arpl
pop
inc
sbb
jb
icebp
xor
lea
jl
jns
cmpsl
or
in
ret
rcll
and
xor
cmpsl
jbe
mov
xor
mov
mov
or
sub
mov
sub
inc
or
ljmp
xor
sbb
jle
out
inc
adc
mov
imul
rorb
sub
push
jns
ficomps
enter
add
int3
add
aas
inc
sub
push
cmpsl
and
gs
xchg
in
movl
lahf
loop
xchg
pop
push
stos
stc
lret
xor
pop
daa
ret
cmpsl
sub
pop
push
jg
mov
add
frstor
lahf
jp
idivl
inc
jge
sbb
mov
stos
jns
lods
mov
dec
pop
xor
sub
out
mov
lret
mul
mov
mov
fs
fisubrl
push
sbb
out
cmp
cmp
int3
adc
cli
mov
dec
dec
add
add
or
clc
test
addr16
das
imul
mov
into
pop
mov
lods
or
ds
cld
sbb
nop
mov
jg
mov
loopne
pop
fnsetpm(287
sbb
punpcklbw
dec
int3
scas
or
fsubl
adc
inc
sbb
movsl
mov
lods
mov
inc
ret
loope
cmp
mov
mov
arpl
dec
sub
fldenv
mov
add
cmp
ljmp
loope
mov
sub
icebp
mov
lret
repnz
ret
out
lods
add
in
ljmp
mov
add
icebp
push
xchg
dec
mov
dec
add
add
cmpb
cs
out
inc
mov
scas
pop
or
pop
and
sbb
xchg
jns
out
xor
adc
cli
xchg
ljmp
fcoml
clc
dec
adc
cltd
and
out
jg
mov
pop
hlt
pop
in
and
cmp
repnz
jl
pop
jle
mov
xchg
add
cmp
xchg
pop
adc
test
pushf
rorl
test
data16
jmp
dec
lea
cltd
adcb
jecxz
pop
push
test
dec
dec
or
movl
xorl
lods
cmp
cmc
jns
push
clc
push
sbbb
push
mov
adc
cmc
jo
rorb
movsl
cwtl
pop
and
je
repnz
movsl
push
adc
jg
movsb
enter
fstpl
leave
adc
icebp
add
fidivrs
aad
fwait
dec
mov
cmpsb
jle
mov
xlat
and
test
sbb
lods
sahf
inc
mov
add
push
jne
adc
mov
mov
mov
push
push
icebp
movq
loope
ret
cli
xlat
xor
test
cmp
imul
jns
frstor
loop
aam
in
out
mov
cmpsl
in
inc
movsl
ljmp
dec
mov
adc
or
lds
fistpll
fst
and
lret
jo
loope
cs
negl
jmp
mov
sahf
pop
and
jb
lods
and
xor
fisttpl
es
rcll
pop
dec
cmp
pop
adc
xchg
cmp
lods
push
sbb
cwtl
pop
add
pop
push
push
sbb
pop
pop
add
or
cmp
int3
inc
xchg
push
pop
cmp
xlat
cli
push
pop
test
ljmp
add
fs
mov
and
rolb
adc
mov
stc
rep
dec
js
scas
jo
in
add
icebp
inc
shlb
and
jmp
push
sub
mov
data16
subb
ljmp
add
sub
jbe
add
out
jae
popa
or
test
sbb
cmp
iret
xchg
pushf
repnz
push
xlat
fwait
add
cmp
cmp
leave
push
add
pop
xor
test
andl
fnstenvs
sbb
jle
jbe
sub
xor
pop
and
cltd
xor
pop
xchg
jb
cld
cmp
inc
pop
cmp
mov
hlt
add
fistpl
ljmp
dec
jo
mov
gs
add
fs
addr16
pop
adc
cltd
jg
movsb
mov
in
dec
andb
add
in
mov
fadds
and
add
push
or
and
xor
inc
lahf
or
fsubs
jbe
leave
sbb
sbbl
or
dec
jb
fisubl
pop
cmp
or
imul
gs
test
fldenv
add
lcall
inc
push
xchg
xchg
jl
pop
mov
xor
xor
mov
mov
push
push
adc
xor
dec
or
pop
inc
testl
fsubrl
pop
bound
lock
lods
sub
out
in
push
in
dec
aad
into
mov
cmp
cmp
cmpsl
ja
inc
mov
xor
stos
inc
repz
mov
mov
je
test
mov
sahf
ret
xchg
push
ss
shlb
dec
mov
jl
cli
jae
ret
rorl
out
cmp
add
pop
mov
xchg
test
mov
and
add
lock
rclb
xor
mov
jb
jo
ja,pn
sbb
inc
mov
imul
dec
fisubrs
repz
mov
jl
sub
cmp
xchg
cmp
xchg
sti
sub
int3
cmp
stos
mov
sub
sbb
movsb
out
stos
lcall
inc
repnz
and
lret
in
cmp
mov
imul
mov
pop
jl
repz
movsb
popf
sub
add
les
iret
cli
popa
lcall
push
mov
pop
push
into
and
in
je
popa
jno
test
lcall
push
dec
in
or
out
add
mov
pand
mov
std
adc
inc
pushf
push
fisubl
push
je
mov
stos
sbb
or
add
inc
stos
imul
incl
iret
pop
test
clc
adc
and
and
adc
into
xchg
dec
enter
lds
fwait
cmc
call
rcll
and
mov
xchg
mov
imul
and
inc
mov
mov
pop
lret
divl
mov
lea
adc
cld
addb
push
xor
add
ret
push
fsubl
or
mov
test
loop
sbb
inc
in
push
adc
in
fwait
inc
sbb
push
pop
rcll
into
ss
ljmp
ja
rorl
outsb
es
add
add
mov
mov
push
cmpb
jp
jae
xor
bound
xor
cmp
pop
pusha
psrld
shlb
daa
cmpsl
mov
jne
packuswb
xchg
push
inc
mov
and
lea
popl
fnstcw
add
xchg
jnp
cmp
mov
add
add
loopne
lahf
push
into
xchg
or
mov
or
mov
fdivrl
pop
pushf
mov
or
cmp
les
mull
rcl
or
addr16
xlat
int3
bound
cmc
imul
dec
jno
push
cmp
jg
mov
dec
push
subl
leave
pop
inc
das
les
fwait
in
adc
jns
stos
mov
push
xchg
enter
fadds
iret
sub
or
idiv
daa
push
jne
mov
aaa
dec
lret
mov
xor
mov
lods
push
pop
or
ficoml
or
les
fstpl
dec
mov
xor
popf
pop
mov
stos
sbb
leave
push
inc
nop
pop
and
and
es
add
mov
cmpsb
popf
loopne
inc
mov
mov
gs
cwtl
addr16
xchg
sarl
ljmp
adc
int
dec
sbb
lock
imul
mov
out
decl
hlt
and
test
mov
fstl
outsb
push
loopne
push
fsubrl
jecxz
mov
sbbb
movsb
inc
mov
ljmp
dec
sbb
repz
arpl
invd
mov
or
jecxz
xorb
cmp
out
mov
sahf
in
fimull
mov
mov
repz
mov
pop
xchg
out
lret
dec
mov
jg
out
and
mov
mov
adc
ret
xor
adc
jg
gs
in
xor
sbb
aaa
cmp
loopne
pop
jl
fidivs
sahf
xchg
jle
movsl
dec
fldl
jge
cltd
js
xor
pop
cltd
jmp
sbb
jmp
rorl
insb
test
mov
xchg
mov
jbe
or
mov
lods
lret
cmp
mov
cli
in
outsl
js
mov
xorb
aad
sub
push
push
mov
mov
shrb
lret
add
adc
mov
pop
pop
mov
pop
jo
dec
sub
in
aaa
mov
inc
hlt
pop
push
push
je
shl
pop
add
dec
push
stos
insb
dec
adc
add
fistps
js
test
push
imul
gs
mov
clc
lods
mov
dec
fnsetpm(287
inc
mov
sarb
in
stc
dec
mov
mov
test
jbe
pop
jmp
and
test
pusha
mov
out
xor
test
movsl
lret
mov
add
push
cwtl
dec
movsb
sub
fsubl
cwtl
push
adc
push
mov
push
dec
sub
mov
push
in
mov
and
jne
roll
pop
jo
das
icebp
push
pop
jno
jp
pop
or
and
or
mov
leave
add
or
dec
fimull
sub
or
jmp
xlat
fcomps
adc
jmp
pop
test
push
fldcw
test
mov
imulb
dec
adc
and
ficompl
mov
filds
cmp
js
jno
mov
les
test
mov
jg
int3
inc
lods
add
ja
push
add
mov
xor
movsl
adc
jg
into
mov
loopne
mov
ret
scas
sbb
sbb
loope
mov
dec
jns
icebp
cmpsl
push
dec
hlt
push
jge
inc
test
xchg
outsb
inc
js
ret
nop
orb
xor
push
nop
and
jl
jno
call
adc
mov
sbb
mov
jmp
popf
pop
movsl
xlat
sub
pop
mov
add
jp
cs
nop
push
or
inc
lcall
sbb
push
repnz
test
xchg
cld
xlat
sbb
pop
sar
xor
movsl
dec
jg
shll
sbb
je
leave
sti
in
adc
and
mov
icebp
sub
cmp
and
inc
lea
popa
popf
jge
or
into
sbb
jmp
cvtpi2ps
dec
adc
pop
add
loope
lret
movsl
cmp
xor
in
xchg
xor
stos
cs
mov
mov
bound
sub
mov
dec
mov
cwtl
jl
scas
mov
cmp
push
andb
sar
xchg
xchg
fcoml
sbb
cmp
mov
sti
dec
cwtl
sub
rcrb
sub
fistps
sbb
into
pop
les
adc
adc
push
bound
lret
push
test
dec
add
mov
clc
hlt
call
into
cmpsb
cwtl
inc
stos
fbld
xor
in
add
fsts
cmp
and
out
sbbl
push
imul
aas
jmp
xchg
dec
fadd
jb
xlat
jge
int
shlb
je
or
xlat
cmpsb
ljmp
adc
mov
ds
shl
repz
pop
dec
dec
pop
sbb
push
add
ljmp
call
add
sub
scas
add
jmp
out
push
or
sub
xor
das
cmpsb
jns
popa
jmp
out
and
int3
mov
jno
sbbb
sub
into
adc
in
mov
mov
mov
adc
sub
inc
jp
xchg
cmc
mov
sbb
xchg
cmpl
or
cmp
jbe
call
mov
ret
call
push
lret
bound
es
aas
shlb
mov
xor
test
and
bound
mov
addr16
sbb
mov
mov
scas
mov
or
shl
inc
or
cmp
push
mov
lcall
sti
pop
in
sub
adc
shrl
pop
or
push
call
xor
out
xchg
dec
loop
ljmp
daa
mov
mov
insl
mov
push
shrd
sbbb
stc
xchg
xor
xchg
jbe
jns
imul
shrl
adc
rcr
popa
inc
int3
aas
pushf
cmpsb
or
faddl
arpl
mov
pop
and
sub
pusha
repz
dec
daa
xchg
loop
xchg
outsl
xor
cmp
dec
daa
lahf
out
nop
popa
cld
mov
push
lock
in
ljmp
roll
mov
jbe
arpl
push
pop
sub
push
pusha
cs
lock
dec
mov
pop
rorl
jl
daa
inc
push
adc
mov
lcall
and
adc
in
push
cmp
mov
cmp
mov
seta
xchg
test
xchg
mov
xchg
push
in
push
jb
mov
and
xor
fimuls
sbb
cmp
fistl
aaa
push
out
or
pop
neg
clc
scas
and
cmc
and
fwait
daa
stos
popa
mov
and
xchg
movsl
in
pop
push
gs
sbb
xchg
sub
leave
clc
mov
xchg
clc
push
xchg
sbb
dec
push
ret
aad
xor
push
ud0
ja
sbb
ss
jecxz
call
inc
xor
xchg
std
pushf
mov
dec
and
jge
in
mov
test
jb
loopne
push
fadd
inc
dec
inc
out
jle
and
jg
or
jb
add
xchg
cli
rol
cmpb
push
mov
lahf
mov
inc
fiadds
mov
cmc
push
cld
jno
push
into
or
adcb
enter
cs
jo
adcb
jne
dec
movsl
lods
std
sbb
decb
std
hlt
cmp
mov
mov
data16
pusha
mov
mov
js
mov
bound
dec
xor
push
xchg
sbb
dec
data16
sbb
pop
inc
dec
dec
inc
lea
xchg
lcall
sahf
dec
or
jecxz
xor
mov
cmc
cmp
jo
sbb
test
add
test
jbe
xor
and
mov
andb
and
sbb
rcrl
lahf
loop
lds
jmp
or
cmpsw
jg
jbe
lods
gs
cli
jecxz
sbb
lods
lea
add
clc
sbb
fnstenv
std
test
sub
add
push
sbb
out
sti
pop
push
stc
in
mov
loop
shlb
testb
sub
adc
cmp
jns
fimull
and
popf
adc
lock
cmp
pop
pusha
fcmove
insb
lds
in
mov
sub
popf
push
inc
repz
mov
arpl
sub
xchg
nop
sbb
lock
inc
repnz
mov
int
jle
pop
push
push
push
and
lcall
arpl
ret
cs
shlb
cmp
iret
data16
sahf
frstor
js
push
test
call
in
jmp
fiadds
push
sub
popf
sahf
pop
sbb
pop
dec
add
jb
sbb
cmpsb
push
jmp
mov
addl
fisubs
add
not
jmp
and
ja
cmp
aad
out
stos
xchg
and
xor
aam
xor
ret
cwtl
xchg
outsl
push
inc
mov
jg
dec
cs
dec
push
and
les
mov
push
fwait
mov
clc
ljmp
push
add
push
and
push
jecxz
insl
jmp
ss
lret
leave
jo
bound
and
outsb
nop
adc
mov
jbe
mov
adc
lret
int3
mov
add
mov
sbb
iret
jae
out
sbb
xchg
cmpsl
dec
inc
es
testb
scas
outsl
sbb
inc
jno
pop
ret
push
push
iret
sbb
cmp
mov
enter
dec
stos
pop
fs
shrl
test
aas
aas
dec
sub
adc
push
jmp
pop
shrl
je
mov
in
mull
dec
xor
mov
xchg
movlps
mov
daa
mov
ljmp
sbb
iret
daa
push
sub
sub
or
sub
xor
inc
into
mov
mov
mov
push
fsts
jo
es
sub
iret
or
cltd
mov
psubw
lret
cmp
add
leave
int
and
mov
andb
es
sbb
mov
dec
push
addr16
or
jle
jecxz
fmuls
or
xor
xor
imul
nop
pop
fldl
aas
clc
mov
and
cmp
jle
movsb
push
negb
enter
sbb
xchg
int
and
sbb
mov
psrlw
cmpsl
stc
in
jle
cmc
iret
xor
rorl
cmpb
adc
jl
movsl
repz
jle
test
sub
mov
inc
jae
inc
sub
jae
imul
sbb
mov
jmp
mov
fcompl
and
arpl
xchg
fildl
pop
out
into
stc
movsl
dec
pop
das
dec
dec
mov
xor
mov
inc
and
mov
cmp
cmp
call
cmp
ret
pop
stos
mov
and
fadd
out
push
scas
or
pop
xchg
sbb
lret
mov
mov
pop
jp
mov
mov
mov
cltd
dec
xor
lcall
in
incb
sub
arpl
xor
shrb
jg
cmpb
popf
adc
into
mov
mov
jp
xor
lock
and
arpl
imul
movsl
leave
jnp
jmp
adc
cmp
pop
scas
mov
popf
lret
xchg
xor
aas
inc
jg,pt
sbb
outsl
out
xor
dec
jno
sbb
inc
out
mov
shlb
ds
lds
outsl
adc
push
divb
adc
insl
inc
pop
mov
push
mov
jl
cmp
in
aaa
push
pop
xor
mov
push
sbb
imul
xchg
or
jecxz
addr16
jne
out
pushf
or
push
add
xor
xor
sub
or
leave
sub
push
movsb
and
cld
aaa
mov
je
sub
xchg
sahf
lea
push
js
repz
push
lock
jg
shrb
mov
outsb
pop
add
popa
add
scas
inc
pop
sti
adc
pop
hlt
in
mov
ljmp
mov
cmp
out
and
ret
orl
or
data16
fs
movsb
shll
sbb
xor
dec
mov
das
pop
arpl
inc
mov
je
push
sub
lods
ret
push
outsb
fstl
and
cmc
sbb
fcomi
addb
or
push
adc
adc
xchg
aas
push
mov
pop
cmp
mov
arpl
aad
xchg
mov
mov
jns
shrl
xchg
sbb
mov
pop
arpl
popa
mov
rcrb
xor
loop
xchg
jnp
out
push
and
mov
cmpsl
xchg
nop
mov
adc
pop
pop
sub
popf
dec
sbb
mov
dec
scas
push
jnp
lea
hlt
fwait
stos
cmp
sub
mov
repnz
stos
fsubrp
lods
pusha
cmp
push
ret
pop
mov
aam
stos
lahf
cld
dec
shll
out
and
aam
mov
pop
iret
mov
fldl
push
bound
push
je
dec
pop
add
aad
mov
ja
cmp
fldt
sbb
fld
lret
jns
iret
popa
xchg
inc
subb
leave
push
in
aam
fwait
in
mov
mov
mov
mov
mov
push
dec
and
push
repz
imul
jne
mov
jns
xchg
pop
es
outsl
jbe
push
cltd
pop
cmp
std
aam
mov
cmp
inc
out
push
mov
fucomi
bnd
out
xor
cmp
xchg
fcoms
stc
jp
incb
jg
adc
jns
sub
inc
cmc
or
test
test
shl
jo
xor
xchg
mov
jnp
andb
and
mov
mov
loope
or
jb
bound
push
dec
in
gs
jnp
decb
les
mov
xor
into
call
aas
lret
dec
cmc
mov
jne
dec
iret
cld
or
xchg
adc
aad
or
jmp
dec
cwtl
hlt
cwtl
stc
inc
inc
mov
and
dec
xlat
data16
dec
lds
ljmp
dec
xchg
mov
add
aad
jmp
xlat
ret
addr16
sbb
cmpsl
push
in
cmpsl
xor
dec
push
adcb
lods
xchg
push
dec
hlt
sub
push
xchg
ljmp
sub
mov
icebp
insl
xor
cmpsb
jl
adc
jnp
dec
fcmovbe
in
mov
fiaddl
jl
fisubrl
xchg
jl
inc
test
rcll
push
push
int3
movsb
pushf
sub
movl
addl
jo
xor
adc
popa
imull
jbe
and
fnstsw
adc
pop
cmpsb
push
lret
cmp
or
push
push
mov
enter
mov
sbb
xor
popf
stc
addr16
dec
fucomi
cmovae
xchg
mov
adc
xor
and
cmp
test
push
inc
test
push
push
outsl
mov
outsb
sub
shl
or
push
outsb
das
rcl
pop
mov
and
pop
sbb
dec
and
lock
pop
adc
inc
sbb
push
xor
fldt
lret
cmp
jb
das
cmp
jle
add
imul
out
jns
shrb
cmc
mov
cld
int3
or
inc
lods
adc
jp
call
cmp
xchg
daa
push
xchg
dec
addr16
lcall
dec
xchg
imul
cmp
push
lds
int3
int3
mov
lock
mov
xchg
push
std
int
push
pop
mov
imul
dec
add
adc
dec
dec
insl
lods
pop
into
fistpll
clts
lret
push
fstps
dec
jp
mov
pushf
roll
ljmp
loopne
cmp
jmp
dec
mov
out
jecxz
xchg
mov
bound
cmpsb
in
sub
jnp
stos
out
lcall
pop
ficoml
popf
dec
sub
fldcw
pop
dec
out
in
les
test
adc
pop
test
mov
mov
insl
dec
mov
cmpsl
pop
push
stos
xchg
repnz
or
loop
cs
push
int3
cmp
dec
cmp
movsl
je
xchg
cmpsl
sub
add
shlb
hlt
and
pop
adc
xchg
fstpl
mov
sub
out
and
xchg
scas
aad
pop
leave
jl
pushf
ljmp
push
jns
push
jae
rolb
stos
jns
add
in
xchg
out
mov
mov
mov
data16
shlb
pop
sti
and
push
pop
fsub
sub
leave
xor
xchg
ret
lds
mov
enter
push
xchg
jg
mov
jl
xchg
inc
lahf
add
cmpl
and
pop
addl
decl
sahf
mov
inc
mov
jne
inc
pop
cltd
clc
loope
aam
insl
mov
inc
les
cli
out
jmp
hlt
and
or
imul
fnop
stos
repz
or
nop
aam
sbb
dec
inc
shll
mov
clc
enter
cmp
ja
add
into
dec
test
or
scas
int3
out
or
enter
jge
dec
mov
daa
hlt
dec
and
test
mov
jmp
lahf
repz
inc
cmp
jmp
cmc
mov
adc
and
add
mov
xor
xor
stos
sahf
xchg
leave
xchg
cmp
dec
pop
lret
fcom
xchg
sarl
std
outsb
js
jge
dec
mov
rcrl
scas
jnp
dec
mov
les
cmpsl
inc
dec
fldenv
outsb
add
hlt
cltd
adc
and
inc
and
daa
shrb
mov
mov
inc
rorb
scas
sbb
mov
adc
mov
dec
leave
adc
popf
gs
or
push
scas
adc
icebp
mov
adcl
push
jecxz
inc
fstpt
cmp
lret
xchg
push
pop
mov
lahf
and
sub
fildl
bound
cwtl
mov
les
xchg
imul
or
mov
push
sbb
aaa
aaa
test
ds
lcall
sub
decl
or
dec
test
lods
aaa
movsb
mov
mov
insl
sbb
stos
fdivrs
mov
xor
lret
out
jge
scas
repnz
xor
inc
pop
jo
push
sub
mov
cmp
adc
xchg
ja
cs
mov
xor
cmpsb
adc
push
mov
mov
xchg
in
popa
insl
mov
ror
in
jle
jns
aam
inc
lods
xor
or
out
xor
cli
int
scas
mov
xor
test
clc
adc
imulb
pop
lds
test
cltd
in
cmp
inc
negb
mov
mov
test
test
in
daa
int
lds
push
data16
dec
les
rorb
imul
inc
in
sti
fistpl
mov
inc
adc
cmpsl
jo
dec
stc
mov
mov
adc
sahf
dec
imul
sbb
lea
fwait
cmp
cld
xchg
negl
stos
ja
lahf
mov
arpl
jge
adc
das
scas
add
mov
insb
les
js,pn
mov
fs
lret
out
jl
push
cmp
ja
push
ja
in
psubsb
xchg
xchg
mov
jbe
sub
rolb
mov
lret
lea
and
loopne
test
xchg
icebp
and
lret
cli
adc
push
fsubrs
rorb
mov
sub
in
ljmp
pop
push
fcmovbe
test
in
mull
sub
shrl
movsl
adc
sub
loop
out
imul
inc
test
mov
cmc
or
and
jp
cld
mov
sbb
pop
loop
popf
imul
push
pop
repz
bound
mov
aas
dec
add
mov
ret
sbb
outsb
cltd
mov
shll
mov
push
push
and
mov
jp
mov
data16
cld
dec
mov
dec
rolb
and
sbb
or
sub
mov
or
mov
jg
imull
ss
test
call
movsb
and
lods
mov
push
rep
cmp
inc
int3
in
inc
idivl
mov
cmp
test
adc
jae
mov
sbb
or
mov
ret
or
cmp
push
mov
popf
sub
arpl
lock
adc
xor
in
jmp
lds
push
mov
cld
cmpsb
test
in
push
sub
negl
js
mov
inc
ds
adc
add
adc
cmp
leave
and
xchg
dec
mov
push
hlt
stc
xchg
pop
mov
lret
add
imul
test
imul
sti
roll
and
icebp
xchg
add
sbb
je
mov
lea
iret
daa
repz
push
popa
mov
mov
sbb
inc
test
mov
scas
sub
jae
mov
cltd
lret
sahf
pop
add
xchg
in
sub
icebp
and
into
mov
and
movsl
test
repnz
lret
pop
or
je
mov
push
xlat
inc
mov
cmp
sbb
orl
fs
or
addr16
mov
mov
xchg
sbb
subl
mov
sbb
stos
pop
shlb
push
shl
and
js
inc
repz
jle
fists
stos
aad
in
mov
mov
fstpl
xchg
or
push
sarb
fldenv
inc
in
bound
pop
nop
xchg
rol
outsl
aam
ret
pop
sahf
xor
in
pop
pushf
mov
aas
fistpll
dec
fmul
frstor
addr16
cli
mov
hlt
fnstsw
ds
popf
dec
cmpsb
inc
fmull
inc
sbb
and
mov
inc
out
push
sbb
ljmp
out
dec
inc
mov
or
jbe
je
or
shl
out
stos
or
fdivl
rorb
in
sub
sbb
fincstp
cli
fwait
push
dec
xor
loop
pop
and
inc
xchg
ret
inc
rcr
xor
add
xlat
sbbl
outsl
loope
imul
sbb
adc
inc
and
test
les
negb
fistl
stc
mov
cld
sbb
flds
repnz
arpl
dec
jle
cld
sub
sbb
inc
jb
js
std
cmp
pop
adc
jecxz
mov
lea
jmp
in
jae
and
sbb
insl
cli
mov
lea
or
xchg
int3
inc
adc
mov
jl
hlt
lods
inc
aas
jmp
xchg
mov
loop
ljmp
shl
jmp
shl
push
int
lahf
in
inc
sub
pop
lods
data16
lea
mov
cmp
fstpt
and
mov
out
sti
sbb
call
xorb
xlat
pusha
mov
inc
fwait
ljmp
pop
sub
push
out
jnp
xlat
pushl
dec
xchg
out
mov
icebp
sbb
sub
cs
cmp
xchg
push
lahf
idivl
lahf
test
shlb
dec
aas
mov
imul
jo
je
repnz
pushf
xor
stos
add
inc
test
bound
imul
loope
ds
push
cmpsb
rorb
mov
in
mov
adc
pushf
clc
lret
mov
nop
sbb
movsl
push
inc
sub
sbbb
xchg
mov
sbb
and
lret
rcll
daa
int
xchg
je
or
sub
adc
fcoms
pop
sti
cmp
and
jbe
dec
leave
xor
push
dec
fnstcw
jae
ljmp
pusha
fistpl
mov
or
xor
sbb
lret
insl
in
rcl
push
fisubrl
mov
mov
hlt
push
dec
pop
pusha
pop
sbb
repnz
add
push
dec
fistl
cmp
clc
int3
out
fisttps
push
inc
mov
inc
push
rorb
inc
xor
and
sbb
jg
int
sub
cmp
into
in
insb
mov
sbb
lret
jae
ret
pop
mov
pop
jnp
pop
insb
nop
add
ret
lret
dec
dec
das
sti
push
sub
add
sbb
ror
mov
sub
cmp
jne
leave
push
div
arpl
rcrb
iret
and
out
into
cmp
cmp
jmp
loope
or
push
jmp
xchg
lods
jne
mov
dec
add
enter
andb
repz
jp
cmc
push
leave
dec
push
sub
mov
js
push
push
imul
sub
rclb
int3
inc
pop
and
mov
cmpsb
sub
push
adc
mov
shrb
daa
out
es
ja
xchg
in
xchg
sarb
sub
nop
aad
aad
jmp
dec
mov
or
loope
dec
jmp
inc
ficoms
test
add
daa
imul
orl
std
gs
sbb
movsl
jp
lret
mov
pop
mov
mov
sub
xor
fildl
adc
cmpb
lods
cltd
add
inc
sub
pop
mov
into
scas
pop
cli
mov
dec
jg
insl
lods
jg
daa
and
je
call
pop
xorl
mov
test
movsl
inc
inc
xor
scas
sar
cmpsl
dec
xchg
push
mov
mov
outsb
jp
xchg
sbbb
in
popa
or
stos
outsl
cmp
mov
lock
or
inc
aad
inc
ret
cs
lcall
fs
insl
ds
cmc
lahf
fs
mov
scas
sbb
or
push
std
mov
pushf
sbb
ret
int
pop
test
jbe
mov
stos
push
mov
mov
add
pop
push
scas
sbb
pop
cmp
test
xor
daa
aad
pop
in
inc
stos
jp
inc
sahf
icebp
pop
loope
loop
out
mov
loop
stos
fsubl
mov
xor
cmpsb
shrl
mov
insl
es
ret
xor
outsb
push
jne
call
sbb
sbb
add
call
out
jle
rorb
and
xorl
mov
xchg
cmp
loope
test
xor
pop
mov
ret
cmpsb
mov
dec
jo
jnp
or
ud0
pop
push
das
cld
aam
ret
mov
mov
lret
sbb
ret
sub
fnstenv
cmc
cmp
jl
adc
push
fiadds
data16
cmp
jge
shll
inc
push
and
aaa
pop
es
inc
fs
enter
inc
and
mov
das
xor
shl
add
push
mov
sub
adc
mov
push
mov
xchg
inc
sub
xor
dec
inc
rcll
sbb
cmp
jl
xor
push
shll
pop
add
add
punpckhwd
js
mov
jl
test
adc
pop
and
ds
jo
cmp
jg
fidivs
adc
dec
scas
inc
loopne
test
shr
and
repz
and
mov
xor
bound
dec
aad
adc
jo
add
mov
sbb
mov
imul
xchg
xchg
lods
mov
jmp
test
and
and
jmp
sub
pop
lcall
lods
xchg
jle
push
push
lcall
push
in
xorl
and
outsl
out
dec
es
cltd
das
daa
xchg
jle
and
dec
leave
lock
cmp
inc
pop
adc
iret
push
insb
test
mov
push
jo
repz
in
out
xchg
dec
push
aas
test
pop
jo
pop
lahf
test
pop
cli
out
mov
and
enter
xlat
cmp
dec
hlt
inc
lret
jp
fimuls
mov
cmp
pop
mov
insl
push
jg
or
cmp
inc
in
les
cmc
jp
lods
cli
out
xor
jb
int
fwait
stc
push
cmpb
cli
pop
adc
aam
inc
andw
jge
popa
out
mov
push
push
xchg
adc
jmp
lds
gs
int
or
or
sbb
fildll
pop
pusha
and
iret
mov
imulb
mov
sahf
xchg
fwait
mov
xchg
jne
sbb
xlat
jno
test
pop
sub
push
push
test
mov
hlt
inc
and
jmp
and
cli
repnz
loope
imul
jge
xchg
xlat
repnz
push
lds
test
push
movsl
cmp
ss
adc
in
mov
adc
jns
outsl
lds
inc
pop
push
stos
or
out
add
nop
aam
lahf
arpl
dec
xor
in
hlt
and
mov
add
pusha
popf
mov
inc
mov
popa
ret
sbb
xchg
xor
mov
popa
dec
pusha
mov
int
add
xchg
pop
lods
lret
and
popf
pop
and
sbb
addr16
iret
and
ss
sbb
mov
mov
pop
dec
pop
mov
jne
add
xchg
push
cs
mov
js
push
xchg
mov
repz
or
les
cwtl
rcr
popa
push
inc
xchg
outsl
fisttps
arpl
aaa
jnp
scas
or
sub
mov
mov
pop
cwtl
sar
lahf
into
je
bound
mov
sbb
adc
mov
and
xchg
cli
add
mov
loopne
enter
mov
push
sti
out
jle
out
xchg
push
popf
loopne
test
mov
inc
push
popf
mov
adc
push
leave
mov
in
jae
jmp
push
in
popf
mov
insb
je
pop
push
sub
and
lods
sbb
adc
xor
ficoml
in
fstl
pop
mov
imul
es
lods
push
jl
shl
ljmp
jl
addr16
fcomip
push
mov
leave
adc
xchg
out
add
addr16
popa
rcll
push
jg
dec
fidivrs
mov
stos
inc
lds
mov
ret
hlt
test
int
test
mov
lcall
aad
stos
sbb
and
lds
pop
cmpsb
or
lea
insl
pop
test
stos
mov
dec
daa
outsb
pop
add
sub
std
inc
in
jmp
lret
icebp
das
mov
dec
adc
sbb
cwtl
or
sahf
ljmp
repnz
fld
cli
js
xor
insb
clc
js
test
push
out
xchg
insb
dec
mov
aaa
fs
push
std
sub
push
pop
xor
mov
jne
inc
popf
mov
daa
pop
hlt
loop
in
hlt
jnp
or
test
push
push
lea
sub
insb
xlat
push
sarb
int3
loope
fcmove
xchg
testl
xchg
sti
mov
ret
movsl
fucomi
dec
outsb
pop
sub
das
push
jmp
lods
andl
aaa
sbb
push
push
rcrb
stos
sub
in
clc
movsl
adc
sbbl
jp
ret
in
push
cmp
mov
movsl
ret
ret
outsl
adc
mov
cmp
xchg
fs
xor
mov
xor
sub
sub
test
inc
dec
loope
mov
call
add
sub
fimull
push
push
jle
and
push
nop
add
and
test
fwait
test
fdivl
mov
out
ret
sbb
popa
popf
lods
add
cmp
fs
inc
sub
lods
fwait
ss
test
rol
fmuls
push
mov
call
inc
addb
stc
mov
sbb
adcl
push
sbb
pop
das
sub
mov
pop
ljmp
dec
js
add
stos
stc
or
lea
inc
pop
jne
adc
mov
add
xor
mov
sub
xchg
enter
loopne
loopne
stos
push
shlb
push
sbb
jo
outsl
int3
subb
jne
out
lods
test
es
inc
lods
ret
or
je
xchg
sub
mov
jl
test
dec
loopne
pop
inc
test
out
add
jl
mov
fwait
push
loope
add
mov
outsb
push
stos
mov
mov
fwait
mov
and
repz
faddp
cmp
les
jno
sbb
fwait
sbb
adc
mov
jae
iret
fs
std
int
jno
sbb
xor
push
std
dec
adc
jno
rol
or
arpl
ror
loop
faddp
ja,pn
lret
cld
data16
sub
in
fldt
movsl
hlt
mov
cltd
push
lea
add
mov
xlat
or
inc
push
or
cmp
dec
scas
pop
cltd
ror
inc
jns
add
call
mov
xchg
ljmp
clc
test
loopne
sub
cmp
mov
rclb
mov
xor
jns
cltd
pop
lock
std
xchg
movsl
sbb
push
ljmp
in
and
gs
aad
lods
clc
imul
rcr
fcmovu
mov
rcl
or
lds
cmp
inc
out
jae
outsb
fsub
loop
das
dec
outsb
jns
fcompl
arpl
ret
test
push
jmp
ljmp
lcall
xor
stos
cmp
bound
cmpsb
test
inc
dec
addr16
xlat
push
mov
cmpsl
sub
dec
or
and
xchg
mov
outsb
adc
dec
push
adc
pop
addl
cmp
add
mov
movsl
xchg
pop
int
ret
cmp
sti
jo
sub
icebp
ss
in
mov
xor
push
adcl
mov
cmp
xor
xchg
mov
lods
dec
mov
loopne
nop
shll
mov
stc
fs
sbb
mov
sbb
push
nop
loope
sub
in
mov
push
test
into
loope
xor
std
insl
mov
je
pop
repz
push
and
cwtl
jmp
insl
sbb
jb
int
and
stc
sbb
mov
jg
ljmp
pop
cs
push
mov
inc
inc
pop
mov
and
movsl
das
jg
mov
fadds
mov
jno
gs
sbb
fcoml
cld
lea
int
in
xchg
adc
daa
sbb
fimuls
lock
push
push
clc
pop
xor
in
js
in
fsubr
enter
add
sub
dec
mov
sub
leave
pop
mov
xchg
xchg
add
mov
and
insb
sbbl
xchg
aad
in
lcall
xor
daa
iret
mov
sub
push
dec
push
xchg
cld
jne
sub
stos
xchg
pop
arpl
jmp
fistpl
pop
sti
and
dec
inc
lods
in
pop
pop
add
stos
and
scas
inc
mov
mov
pop
pop
sub
pop
addl
adc
xor
stc
or
mov
mov
clc
imull
push
int
mov
loopne
cmp
sbb
sbb
lea
xor
in
jns
lret
xchg
xchg
inc
cmp
fwait
mov
int
push
scas
dec
adc
arpl
cs
mov
push
push
jmp
adc
in
out
adc
mov
out
or
mov
repnz
mov
insl
aad
rorb
or
in
sub
mov
lds
fidivrs
jne
sub
dec
stos
xchg
addr16
pusha
xchg
xchg
pop
mov
mov
mov
idiv
je
xor
movsl
int3
dec
sahf
vmovapd
lahf
sub
outsb
out
mov
xor
ret
sbb
mov
cwtl
scas
stc
movsb
inc
ret
rorb
push
lea
mov
push
loop
mov
lock
lea
in
add
push
rcrl
std
push
std
jl
cs
mov
ss
mov
mov
in
shl
sub
xor
adc
pop
xor
sahf
enter
cmp
sbb
sub
jp
stos
mov
push
lock
fldcw
lods
and
icebp
pop
mov
lret
cmpsb
push
out
outsl
dec
lcall
sub
pop
dec
iret
push
adc
test
icebp
inc
and
stos
mov
iret
in
idiv
js
hlt
or
test
jg
test
jo
and
gs
push
sysenter
scas
adc
iret
mov
dec
lret
imull
cmpsb
stc
inc
cs
pop
cmp
int
jge
sbb
arpl
outsl
ja
lret
push
popa
xor
pop
incb
mov
xchg
dec
push
out
inc
lods
imul
cmpsb
mov
and
jmp
jmp
jno
sub
aas
inc
sub
mov
pop
mov
mov
adc
aas
cmpb
pop
sbb
adc
sub
repnz
push
jl
xor
fbstp
das
stos
notl
push
scas
push
sbb
sbb
sbb
xchg
ja
adc
movsb
lretw
cmp
push
imul
push
fbstp
cmc
jge
ficomps
repnz
je
push
cmp
add
or
push
adc
dec
ror
jle
leave
sub
adc
fsubrl
cwtl
nop
jae
or
add
lods
nop
pop
loope
outsl
jb
mov
cmpsb
xor
jge
and
pop
fwait
xorb
gs
xchg
sub
sub
xchg
iret
ss
adc
or
orb
cmp
stos
pop
sbb
nop
mov
push
push
pop
sbb
std
mov
pop
push
mov
and
mov
mov
lcall
sub
dec
ret
xor
dec
iret
jmp
leave
popf
ret
inc
xor
int
loop
jl
cmpsb
jae
jo
pop
push
inc
lds
sbb
mov
sahf
mov
xchg
int3
cmp
rcrl
lds
dec
inc
inc
mov
cmpsl
mov
xchg
or
adc
lret
or
cmp
or
sbb
ja
test
je
push
fs
sbb
iret
adc
sub
loope
test
imul
lock
adc
or
jb
imul
aam
cmp
stc
dec
cmove
dec
mov
ja
xor
dec
pop
gs
repz
enter
xchg
rorl
es
repz
nop
mov
loope,pn
je
out
cmp
out
cld
dec
test
mov
jge
push
rol
jb
cld
in
imul
popa
data16
mov
sub
sub
cwtl
sarb
es
stos
xchg
notl
insl
mov
cmp
test
je
xchg
int3
out
adc
xchg
push
jg
outsb
rcrl
hlt
mov
movsl
add
dec
cmp
jo
in
lret
neg
inc
push
pop
push
decb
in
into
iret
movsb
popf
ds
inc
int
enter
popf
faddl
ja
sub
mov
and
das
sbb
inc
pop
sahf
aad
mov
dec
movsb
mov
inc
not
mov
outsl
ss
js
insb
mov
sub
mov
dec
xor
test
fnsave
inc
sub
addr16
jo
xlat
fldcw
sub
add
or
cmpsb
push
xor
les
inc
sub
sub
popf
ficompl
jmp
icebp
fmull
sub
push
cmc
xor
jb
xchg
mov
loopne
imul
jbe
add
mov
stos
jle
push
pop
jne
shlb
shll
cmpb
push
aas
xchg
xor
lahf
add
jb
xchg
insl
out
ss
adc
sbb
lock
push
xchg
sbb
xchg
sahf
xchg
sbbb
inc
into
test
pushaw
jo
pushf
in
sub
imul
outsl
sbb
and
mov
jb
movsb
jne
cli
cmpsb
cmp
cld
adc
add
jp
arpl
shll
pop
pop
push
add
neg
mov
push
xchg
jp
inc
pop
xlat
sub
out
incb
sbb
stc
pop
leave
xchg
fs
aad
push
mov
ret
and
std
add
dec
sahf
lds
loope
mov
lea
ljmp
mov
add
gs
adc
rol
pop
in
mov
test
fldcw
xor
pop
add
xchg
and
sbb
push
mov
xchg
das
fisttps
data16
out
in
adc
xor
inc
xor
mov
sub
sub
sbb
icebp
and
push
outsb
add
roll
mov
cwtl
lock
pop
mov
jl
jo
sub
push
in
push
sarl
test
mov
add
hlt
mov
push
or
fisubl
inc
inc
mov
sahf
mov
mov
loope
pop
jns
jb
pop
test
iret
out
cmp
popf
movsb
push
dec
mov
clc
mov
adc
stc
mov
xlat
fsts
inc
lret
ljmp
pop
pop
loopne
clc
jle
pop
loope
cmpsb
push
pop
pop
ret
cmpsb
out
xor
scas
das
and
out
ljmp
adc
std
fldl
fisubs
xlat
pop
testl
out
push
and
shrb
pushf
cmpl
in
test
imul
mov
in
mov
pushf
mov
sbb
jo
fisubs
js
fildl
lret
mov
jo
shlb
mov
roll
add
jnp
mov
sbb
out
cli
sbb
push
loope
rol
sub
int3
push
popf
xor
sub
push
movsb
fdivs
or
mov
pop
cli
push
jae
loope
mov
lods
mov
fwait
xchg
das
lds
aad
leave
fistpl
sub
out
sarb
les
cld
sub
or
jnp
mov
and
xchg
aam
fs
int
sub
idivb
push
movsl
pop
xor
out
loop
out
stc
test
popf
popf
mov
fsubrl
pop
insl
jp
jo
xchg
lret
xchg
push
push
cli
pop
sbb
pop
pop
cmp
sti
lret
dec
push
lea
test
and
lret
and
addr16
xor
sti
sar
xchg
jns
mov
or
enter
jl
mov
sbb
icebp
xchg
popf
sbb
mov
push
aas
xchg
imull
sub
mov
aad
jno
sub
cmc
leave
sbb
mov
cmp
mov
and
cli
inc
iret
jb
jo
dec
sub
mov
push
cmp
and
or
orl
stos
inc
pop
mov
aaa
jle
inc
xor
pop
jl
xor
stos
dec
sti
pop
or
pop
cli
inc
rolb
pop
or
out
add
ljmp
stc
xor
test
aas
arpl
add
and
sbb
movsl
mov
push
mov
clc
add
mov
cs
je
stos
les
adc
hlt
rcrb
or
push
mov
mov
call
add
sub
mov
adc
jne
and
xchg
and
jno
add
mov
lret
ret
jmp
dec
enter
outsl
les
out
mov
or
sbb
mov
outsb
sbb
lret
mov
int
test
pop
clc
mov
rcr
mov
shl
sbb
hlt
sbbb
sub
lret
pop
or
fwait
add
fistps
es
or
idiv
push
cwtl
pop
dec
mov
stc
dec
jbe
bound
scas
std
lods
xor
jmp
mov
push
pop
movsb
decl
xchg
pop
flds
and
or
push
call
pushf
inc
mov
stos
imul
shrb
in
arpl
push
jbe
popa
mov
inc
mov
mov
xor
mov
call
ffree
inc
or
mov
mov
testb
add
jae
xor
sbb
repnz
xchg
in
inc
in
mov
xchg
ja
and
pop
mov
scas
sti
xchg
xor
mov
xchg
insl
cmp
add
xlat
sbb
or
sbb
divb
xor
adc
push
imul
mov
adc
sbb
fisttpl
pop
call
icebp
inc
and
cmpsl
std
lahf
cmp
in
xchg
pop
insl
cmp
xor
mov
frstor
bound
and
inc
je
leave
add
adc
cwtl
repnz
jl
dec
jp
mov
add
outsb
das
bnd
enter
xchg
inc
mov
das
jno
fldt
mov
cmp
mov
sarb
test
sti
pop
cmpsl
dec
js
mov
jp
and
lods
cmp
mov
pop
push
cld
lods
fldl
imul
sarl
or
mov
lret
mov
jmp
call
xchg
xchg
out
inc
aas
and
test
mov
std
lret
in
jl
imul
test
loop
loopne
out
scas
fldenv
shrb
push
push
ret
mov
xchg
sub
pop
mov
xchg
and
scas
testb
lahf
das
sbb
dec
stos
fwait
in
lahf
add
and
xchg
inc
cmp
push
push
loope
push
sub
mov
inc
jg
dec
lcall
pop
int
pop
mov
inc
stos
mov
int
sbb
shrb
andb
pop
and
jl
mov
cmpb
lods
cmpsb
jg
lahf
jmp
pop
cs
out
fnstcw
add
wbinvd
push
ret
ss
mov
dec
dec
mov
jmp
lock
nop
fisubrl
hlt
fidivrl
jns
cs
insb
push
and
cmpl
xchg
adc
mov
jmp
fldcw
mov
xchg
repz
xchg
sbbl
xor
mov
lahf
fwait
push
dec
filds
sbb
pop
push
clc
sub
popf
test
mov
mov
test
dec
rcl
mov
inc
jge
mov
inc
ret
xchg
push
cmp
int
adc
add
mov
js
mov
mov
jp
sub
mov
pop
es
or
imul
xor
stos
sbbl
aam
and
adcl
test
jbe
mov
ficompl
dec
add
dec
mov
jbe
ja
add
push
adc
adc
mov
sbb
stc
lret
fimull
push
aaa
adc
divl
in
jne
movb
sbb
pop
pop
inc
ret
push
stos
inc
inc
xlat
or
pop
inc
aas
data16
mov
cmc
mov
sbb
sbb
push
into
in
push
stos
push
sub
dec
xchg
adcl
push
loope
call
mov
sbb
and
cld
cmp
mov
add
xor
scas
inc
mov
cmp
sahf
or
pop
xor
leave
cmc
pop
stos
push
cmp
daa
je
xchg
push
or
mov
push
xchg
arpl
sarb
in
out
lcall
mov
mov
xchg
in
sub
mull
iret
in
pop
pop
sub
push
pop
xchg
mov
pop
icebp
push
scas
dec
in
inc
inc
push
cmp
enter
cmp
insb
loop
mov
lds
popf
dec
mov
stc
in
out
gs
fcmovb
sub
or
std
cwtl
pop
cmpsb
es
int
mov
popa
cmp
int
jo
mov
mov
sti
push
sbb
cmp
mov
and
fidivs
jne
add
cmp
adc
and
add
cmp
sub
fnstcw
xor
cmp
je
push
daa
jne
std
sub
inc
inc
jae
dec
mov
jmp
mov
adc
aas
fmull
fdivs
cmp
jo
push
ret
js
mov
add
fwait
jns
shll
cmpl
rcrl
xorb
mov
out
in
fsubl
push
ficompl
shrl
inc
int
and
popf
jmp
and
cmp
leave
mov
and
and
jno
dec
stc
pop
lock
fs
xor
bound
cs
enter
loope
jno
pusha
dec
insl
in
mov
jns
iret
outsl
mov
add
iret
pop
out
lret
repnz
xor
es
sbb
sbb
arpl
xchg
lods
and
pop
nop
fdivrs
jle
mov
es
pop
mov
pop
lods
test
in
inc
push
mov
dec
orb
ds
std
nop
lahf
shlb
mov
loopne
addr16
sbb
pop
test
sub
cld
out
aad
popf
nop
jb
sub
ss
and
shl
hlt
data16
mov
add
dec
sub
in
in
inc
movsl
cmp
mov
ss
leave
loopne
mov
in
push
shrb
arpl
jl
adc
into
ja
adc
scas
mov
pop
mov
dec
xor
sub
jne
lods
sub
sbb
out
pop
ja
mov
enter
idiv
jbe
dec
cmc
ljmp
lret
and
daa
rol
xchg
jae
xchg
xor
icebp
clc
sub
jl
rep
dec
mulb
cmpsl
pop
xchg
out
add
clc
frstor
pop
call
adc
fwait
test
cld
or
rcl
das
std
lahf
or
cwtl
and
les
test
push
inc
insb
lret
cmp
cmp
and
push
stc
inc
pop
pop
outsb
sub
fmull
scas
lods
push
pop
add
or
jne
call
stos
add
mov
sub
mov
decl
jbe
pusha
mov
mov
fisubrs
mov
jne
cmpb
sahf
xchg
mov
sub
data16
test
pop
outsb
dec
pushf
stc
outsl
int3
popf
ret
jbe
jno
jns
inc
arpl
fwait
mov
lock
pop
dec
and
inc
push
xchg
dec
lahf
iret
jne
jne
xchg
scas
mov
pop
jmp
test
scas
insl
je
sbb
lahf
cs
mov
dec
leave
add
push
test
ljmp
push
push
add
inc
adc
pop
sbb
and
repnz
adc
xor
mov
sbb
jecxz
stos
in
ljmp
lret
cmp
dec
out
movsb
inc
mov
mov
rcr
cmpsl
sahf
sub
lods
lock
add
nop
dec
cmp
mov
dec
cmpsb
leave
sub
imul
idivb
in
inc
cmc
cmpsb
incb
inc
popf
fisttpll
inc
jmp
adcb
clc
out
clc
aam
lea
out
push
push
sarl
adc
aas
add
jae
sub
fldlg2
xchg
lds
pop
jnp
cmp
sbb
push
into
inc
repnz
mov
or
scas
and
pop
jo
or
aaa
rclb
cmpsb
jg
fs
xchg
push
hlt
sbb
push
mov
adc
cmpsl
push
jmp
mov
loopne
es
stc
jle
fistl
mov
sbb
sbb
lds
popf
or
mov
inc
mov
je
push
cmp
sub
outsb
in
rol
js
and
mov
scas
pop
in
cmpsb
xchg
adc
jle
pusha
pop
ljmp
sahf
into
xchg
sti
int
test
nop
andb
dec
push
repnz
and
test
lret
mov
add
xchg
cld
sbb
add
rcl
test
and
imul
jge
mov
adc
pushl
mov
and
sub
mov
sub
sub
das
nop
add
pushf
inc
out
mov
pop
loope
filds
add
mov
cmp
rcr
repnz
daa
stos
push
cmp
pushf
and
test
cmp
test
push
mov
cmp
mov
loope
cmp
inc
dec
sbb
lret
jo
mov
xor
cltd
add
stos
xor
mov
inc
sbb
adc
xor
xchg
sbb
sti
inc
lods
mov
int3
fiaddl
xchg
add
fidivs
add
in
sbb
rolb
push
scas
push
mov
ljmp
test
pop
push
pop
in
insb
and
in
sub
jecxz
jnp
cmp
stc
lods
mov
jecxz
or
fsubp
mov
in
int3
aad
and
jmp
sbb
or
adc
fxam
les
sub
in
test
xor
ljmp
xor
je
pop
popa
fidivrl
mov
nop
dec
jnp
and
sbb
test
sub
add
scas
rclb
or
and
cwtl
push
jmp
sub
mov
mov
stos
lds
or
das
mov
xchg
xchg
xchg
pop
addr16
clc
sbb
out
or
mov
dec
cmp
daa
lcall
mov
jmp
cmpsl
dec
fcom
mov
push
loopne
push
divl
nop
popa
stos
sub
int
loopne
mov
adc
xchg
jecxz
sbbb
stc
inc
decb
cwtl
mov
add
xchg
xchg
in
hlt
lods
adc
mov
cmp
sbb
clc
leave
pop
xor
mov
sbbl
xor
pop
lcall
sub
mov
fs
cli
lods
xor
dec
test
setbe
ja
lahf
repnz
jnp
movsb
sbb
xor
and
xchg
imul
dec
ss
sub
sub
lock
and
icebp
sbb
xorl
ljmp
sar
jns
ffreep
xchg
negb
shlb
in
dec
sbb
pusha
pop
pop
pop
push
aad
sub
fs
lea
lea
icebp
xchg
inc
jmp
hlt
scas
ds
stc
adc
xchg
jle
lds
xlat
adc
sbb
xchg
cmp
mov
in
aam
leave
out
adc
sahf
idivb
out
xchg
sarb
aam
pop
rdtsc
das
movsl
andb
in
lods
imul
imul
loopne
lods
stos
and
xor
hlt
shl
addr16
pop
shlb
inc
cmpb
adc
loop
xlat
imul
mov
xchg
cltd
test
dec
ret
mov
push
inc
cli
popa
mov
lods
and
sub
fs
pop
fwait
out
popa
pop
lea
fsubl
push
pop
enter
xchg
lods
push
outsl
mov
dec
cld
loop
push
push
jb
mov
fsubl
jnp
fwait
push
jbe
sahf
cld
or
shll
pop
jbe
scas
inc
lods
pop
pop
ficompl
add
mov
pop
dec
jo
inc
xchg
es
dec
xor
sti
arpl
adc
jg
call
aam
out
xchg
lret
add
dec
mov
push
dec
mov
jne
mov
jge
sub
and
mov
imul
mov
out
jno
clc
jge
nop
dec
cld
xchg
push
int3
mov
jne
sub
dec
xchg
push
lock
pop
jae
mov
mov
in
gs
mov
stos
cwtl
dec
mov
push
es
inc
and
inc
sub
cwtl
dec
xchg
jg
inc
and
cmp
cmp
jecxz
pop
or
jns
dec
fs
xorb
jno
test
jle
cmp
mov
xchg
jmp
cmpsl
cmovnp
jl
pop
pop
in
cmpsl
pusha
cmp
ds
rclb
jbe
out
stos
loopne
fimuls
ficoml
sbb
in
test
lahf
and
cmc
shll
sub
xor
lock
lcall
mov
out
sub
dec
xchg
ret
imulb
jno
cmpsb
sbb
imul
mov
mov
dec
sub
mov
mov
fwait
insb
or
cmp
xchg
cmp
lahf
xor
das
push
pop
or
mov
push
and
jecxz
js
pop
xor
xor
add
pop
xchg
xchg
mov
repnz
jge
pop
sahf
pop
mov
aam
mov
adc
fidivl
cmp
mov
in
rcrb
jae
movsl
dec
and
jne
das
stos
inc
jl
jnp
lea
xor
jns
sub
das
loopne
arpl
call
xchg
dec
mov
mov
fbstp
aam
popf
ja
clc
pushf
movlps
popf
nop
int3
jle
xchg
or
repnz
add
ret
sub
mov
icebp
int
insb
pushf
push
push
push
sub
xor
pushf
xor
stos
mov
cmpb
jnp
or
ret
jnp
popf
fisttpl
jb
stc
xchg
sub
jne
or
dec
dec
out
dec
xchg
cmpsl
mov
push
add
or
or
adc
cmp
jl
mov
or
pop
pop
add
icebp
pop
cmpsl
mov
rcr
nop
dec
repnz
mov
lcall
mov
dec
mov
pop
das
and
aam
or
xor
loop
lcall
enter
mov
fildll
pushf
popf
mov
mov
mov
shll
pop
js
mov
insb
sub
mov
addr16
stos
cltd
aaa
or
fsubs
cmp
int3
cmp
mov
cs
mov
imul
hlt
in
lret
pop
cs
jne
out
jbe
mov
cmp
repz
or
lret
xor
xor
inc
mov
xchg
lods
xor
and
int3
scas
pop
addl
stc
and
lcall
jns
ss
sbb
pop
inc
in
xchg
jbe
pop
inc
mov
jae
inc
in
xlat
dec
cli
xchg
and
cmpsb
and
lret
jge
frstpm(287
sub
xor
push
lea
add
movsb
cmp
mov
movb
dec
dec
mov
movsb
pop
push
scas
incl
in
mov
lods
lock
cwtl
addl
add
or
jmp
jno
push
dec
mov
inc
mov
jecxz
cmp
jae
mov
jb
movsl
adc
in
stos
fists
mov
flds
mov
scas
test
adc
loopne
cmove
es
or
shrl
std
mov
fwait
jbe
movsl
push
leave
nop
scas
mov
xchg
outsl
cmp
inc
stos
jmp
xchg
xchg
in
push
pop
xchg
stc
in
or
add
cli
loopne
aaa
add
xchg
xchg
ljmp
push
mov
mov
jmp
push
addb
cmp
in
mov
xchg
jbe
sbb
sub
sbb
subl
sbb
dec
idivl
rcll
icebp
cmp
xor
andl
xchg
scas
ret
mov
adc
inc
idiv
rcl
xor
pop
push
fsubrs
mov
sbbl
ss
out
imul
out
idivb
in
test
sbb
out
popf
xor
les
setae
inc
fs
cmp
jno
lea
push
insl
lds
insl
push
jnp
pushf
sahf
stos
dec
cmp
loopne
popl
push
adc
push
jg
int
ds
bound
xchg
xchg
sbb
hlt
push
popa
mov
mov
rolb
jecxz
in
pop
mov
and
sbb
inc
pop
or
imul
sub
jl
pop
dec
push
xor
or
jb
or
lods
mov
pushf
idivl
adc
lcall
mov
xor
or
sub
pop
cmpsl
data16
jne
mov
cmp
stc
jne
mov
xor
shr
sbb
fistps
pop
lods
pusha
add
xor
sarl
pop
xor
in
sub
repz
call
in
mov
nop
xor
ficomps
orb
imul
in
xor
fisttps
pop
addr16
pop
cmp
outsl
stos
imul
orl
in
cltd
jecxz
mov
stc
insb
fsts
lahf
addl
mov
sub
rcl
test
inc
enter
movsl
jnp
mov
icebp
sub
test
mov
and
in
repnz
fyl2xp1
or
test
mov
fsts
in
popa
jb
pop
repnz
ss
sbb
popf
cmp
and
mov
pop
cmp
push
dec
fildll
mov
mov
cmp
icebp
lcall
and
lock
and
push
xchg
scas
dec
mov
sti
adc
add
or
jle
jmp
loopne
repz
aas
inc
mov
cmp
aad
mov
xchg
test
mov
out
jns
push
dec
jns
leave
adc
add
in
mov
mov
adc
xor
es
inc
in
enter
rclb
cs
leave
jne
xchg
xchg
aaa
adc
test
cmpsb
and
leave
cmpsl
adc
xchg
pop
jg
addr16
pop
iret
and
clc
jno
js
pop
cmp
xlat
sbb
push
mov
pop
out
sub
push
aad
xchg
fs
cmp
push
jl
mov
enter
mov
addr16
xor
pop
mov
dec
xchg
cmp
dec
lods
out
sbb
push
xchg
jns
mov
xor
cmc
call
pop
test
rdtsc
lea
enter
jae
ljmp
xchg
scas
and
rcrb
or
lock
cmp
aad
lret
sti
jae
shlb
in
add
push
mov
jle
andl
cmp
xchg
push
pushf
jp
mov
jp
or
setns
xor
and
imul
add
cltd
xor
xor
in
fs
pop
dec
xlat
xchg
sar
xchg
pushl
in
jno
and
mov
mov
out
adc
cmc
aam
ret
mov
and
mov
stos
and
imull
push
jg
pop
dec
outsb
rorb
mov
sti
dec
or
push
dec
je
shl
fcoml
inc
unpcklps
sahf
jno
cmpb
adc
dec
insb
sarl
pushw
sarb
pop
mov
arpl
shll
and
or
push
push
jmp
jnp
scas
daa
fadds
dec
pop
divb
jo
push
mov
inc
test
push
jecxz
xchg
inc
or
out
push
popf
push
jg
add
aaa
jne
scas
xchg
lock
das
icebp
stos
xlat
xchg
pop
sbb
jns
push
ja
and
mov
mov
adc
xor
mov
jg
leave
pop
lock
out
ljmp
call
jns
sub
ja
call
add
cli
hlt
lods
and
lea
dec
xor
dec
mov
xchg
mov
inc
jbe
iret
int
and
cs
rcll
iret
pushf
out
es
inc
aam
out
aam
dec
ficoml
leave
xchg
lea
jns
pop
mov
sbb
pushl
xchg
leave
jo
jbe
in
adc
mov
daa
int
sahf
pop
mov
or
add
jnp
inc
pop
addr16
clc
dec
push
lea
aad
mov
mov
hlt
das
add
in
xchg
clc
push
jle
int3
loope
lret
and
adc
in
push
xchg
das
out
call
mov
cwtl
ljmp
in
inc
jo
push
dec
in
xchg
xchg
fucomi
or
in
xor
jne
push
fistpll
aam
out
popf
inc
clc
push
add
int3
adc
pop
dec
lods
ljmp
outsl
lret
xchg
mov
inc
dec
jae
or
add
sbb
jl
cmpsl
je
loope
loop
xchg
pop
jbe
scas
xchg
push
xor
mov
stos
sbb
ss
ret
sub
ficomps
enter
push
jg
inc
fbld
imul
lea
popf
pop
mov
arpl
loope
dec
push
rorb
loop
sbb
mov
mov
test
adc
rcrl
out
and
pop
dec
cmp
mov
sub
mov
dec
mov
arpl
fbstp
and
std
test
push
clc
mov
inc
mov
call
jne
jbe
out
pushf
fcompl
cmc
sub
sub
mov
adc
jae
fisubrl
xor
lds
dec
mov
sub
cmp
pop
add
mov
mov
sbb
add
stc
jl
lret
xchg
sbb
mov
xor
repnz
test
nop
neg
gs
adc
fldl
adc
movsb
mov
jmp
das
cmpsl
push
mov
xchg
fwait
pop
pop
jecxz
inc
lea
dec
cmc
sub
icebp
das
pop
clc
pop
jae
xchg
push
fwait
fs
cld
xorps
das
sub
cs
imul
imul
enter
out
xor
jne
sahf
pop
insl
cmp
mov
xchg
xchg
call
sub
xchg
popa
mov
add
xor
inc
ljmp
out
or
cmp
sbb
shlb
mov
popa
leave
outsl
xor
push
adc
mov
scas
aad
or
jne
or
pop
push
stos
stos
loopne
xor
pop
dec
in
hlt
and
or
enter
jbe
and
leave
test
push
stos
mov
sbb
fcmove
clc
test
jl
jg
sbb
and
add
cmp
in
es
fiaddl
sub
subl
stos
mov
jmp
repnz
jo
lret
or
inc
iret
jecxz
loop
test
lea
repz
dec
and
cwtl
pop
es
pop
addr16
pop
aas
jne
adc
rcrl
push
vmread
movsb
mov
jg
xchg
js
jne
lods
fucom
xchg
andl
add
jge
add
std
ss
jge
ljmp
scas
mov
iret
jl
popa
pushf
gs
lret
mov
movsb
inc
test
gs
pop
iret
inc
or
inc
mov
int
int
addb
popf
pushf
dec
jnp
jecxz
and
enter
clc
sub
les
sub
sub
cmp
stos
adc
mov
push
pop
adc
mov
inc
ljmp
add
xchg
mov
mov
jp
out
jl
or
std
loop
adc
fdivrl
push
test
movsb
js
mov
pop
xchg
gs
dec
lods
outsl
test
test
inc
or
dec
xchg
jmp
jmp
and
push
dec
std
cli
cmp
mov
mov
mov
in
mov
ss
sbb
shlb
xor
ret
cmp
mov
pop
andb
inc
lods
cmc
scas
jae
loopne
jg
inc
jo
push
les
sbb
leave
lret
jle
and
loope
jb
jecxz
jl
fdivrs
or
ficomps
arpl
add
adc
loopne
xor
lret
or
xor
imul
cmp
jge
js
mov
pop
lcall
push
sti
jp
repnz
and
loopne
out
int3
ret
out
divb
out
xchg
lcall
into
outsb
lods
fsubrs
andl
push
mov
sbb
mov
dec
mov
push
out
fdivl
inc
aas
rorl
fwait
sbb
dec
adc
clc
pop
shlb
loopne
stos
mov
int3
or
fwait
outsl
imul
dec
sbb
sub
sbb
fidivrs
rep
insl
sub
mov
clc
sti
lds
mov
jno
xor
insb
into
add
test
lock
mov
es
sbb
icebp
out
es
jle
dec
mov
aad
sub
adc
ret
cmp
enter
cmp
stos
jne
mov
aad
dec
dec
cmp
rorb
test
add
fiadds
rolb
fbstp
cltd
pop
rcll
mov
js
mov
xlat
dec
inc
in
push
mov
sbb
push
int
cmp
and
jne
fisttpll
adc
pop
loope
adcl
jns
cmp
nop
into
mov
push
or
or
lret
iret
jl
push
adc
dec
xor
jle
call
push
xor
mov
ffreep
or
ljmp
outsl
lret
iret
js
movsb
mov
ret
pop
mov
insb
dec
xor
and
push
push
test
jmp
in
lcall
mov
pop
out
inc
jle
mov
inc
outsb
mov
pop
lahf
inc
ja
push
add
adc
mov
inc
insb
lds
out
jbe
popa
mov
mov
test
dec
adc
jecxz,pt
mov
cmpl
inc
mov
idivl
mov
rcrb
cmp
insl
mov
fs
imul
sti
jl
aaa
or
push
ds
imul
mov
lret
sbb
xchg
mov
sub
jb
pop
shl
mov
popa
mov
into
jp
pop
out
jo
dec
cmp
test
add
push
cli
jl
push
inc
push
xchg
mov
mov
lret
push
add
fwait
pop
pushf
inc
in
stos
dec
fucom
fsubrp
jle
js
pop
push
lds
push
push
jbe
or
adc
insl
push
subl
cli
repz
mov
int
pop
sbb
push
mov
or
scas
xchg
xchg
adc
jle
cmp
rorl
ds
mov
mov
sub
test
or
lds
mov
mov
enter
repz
adcl
fdivs
ret
pop
mov
push
xor
lahf
or
lds
lahf
pop
fisttpl
mov
lahf
xorl
fstps
icebp
adc
jo
mov
mov
pop
mov
out
mov
hlt
cld
mov
in
push
lods
and
xor
xor
jb
ja
fisttpll
jb
dec
mov
inc
mov
mov
and
cmp
adc
in
xor
mov
loop
cmpsl
loop
sub
mov
jmp
mov
dec
movsb
inc
aas
mov
pusha
lret
lret
or
mov
data16
xor
shrl
test
jle
adc
xchg
push
in
rcl
dec
pop
jl
sub
fimuls
insl
pop
push
push
jnp
sbb
test
xchg
sti
adcb
xchg
push
out
xchg
lcall
repnz
cmpsb
jmp
and
sub
dec
cld
cwtl
mov
cmc
xor
and
xor
mul
inc
xchg
add
scas
jecxz
push
sub
sti
sbb
test
mov
sub
in
dec
adc
les
cld
dec
outsb
in
imul
cli
mov
iret
xor
lock
xor
sub
mov
fldenv
inc
cmc
mov
adc
cli
pop
daa
pop
js
pusha
and
xchg
decb
mov
iret
dec
insl
rorb
mov
leave
cs
jne
out
ret
je
sub
arpl
inc
in
int3
jecxz
stos
rolb
sahf
test
fadds
outsb
push
and
aas
jo
jg
xchg
jle
hlt
cmp
shlb
mov
sbb
and
push
mov
jl
outsl
loop
add
mov
insb
ss
push
jmp
xor
iret
xor
mov
ret
cwtl
fwait
xor
add
arpl
rclb
cmp
stos
jl
jb
sbb
ret
or
jecxz
mov
ljmp
inc
repz
or
fmuls
pop
jbe
aaa
rep
pusha
lods
xor
jl
pop
and
jno
shrl
es
aam
pop
in
idiv
fwait
or
dec
cmpl
shll
mov
clc
imul
ljmp
in
pop
jb
int3
in
push
jns
jnp
pop
inc
hlt
fwait
imul
pop
test
inc
xchg
cmpsb
cmp
add
dec
pop
lcall
fs
dec
pushf
les
inc
dec
xor
sbb
dec
push
pop
push
fmul
inc
fbstp
addr16
fsubl
cmp
sbb
cli
fidivs
gs
cltd
dec
movsl
mov
hlt
push
pop
sti
lods
popa
leave
push
sub
loop
pop
stc
cmc
ss
push
rolb
mov
fwait
loop
pop
sahf
popf
test
dec
push
and
fcomps
and
cmp
test
adc
int
dec
enter
mov
fwait
mov
in
and
inc
xor
mov
xor
or
push
sti
or
xchg
xchg
scas
or
cmp
cmpsl
dec
pushf
inc
aaa
shl
pop
jb
push
cld
cli
or
sub
out
movsl
pop
sub
pop
jns
das
outsl
xor
les
decl
cmp
das
mov
jmp
test
fnsave
jg
test
dec
mov
pop
fnsave
or
or
xor
jno
shll
lahf
and
ja
imul
test
hlt
dec
jecxz
push
lods
jne
pop
mov
pop
fisubl
push
and
sbb
sbb
out
jbe
add
jns
sahf
push
lahf
adc
clc
scas
or
push
mov
test
xor
dec
mov
scas
movsl
adc
dec
push
jae
inc
pop
xor
mov
fdiv
lret
jecxz
call
mov
mov
or
push
cltd
jnp
stos
addr16
adc
jae
aad
fmull
pop
dec
xchg
mov
push
adc
xchg
mov
add
outsl
sbb
ret
jae
in
adc
mov
popa
xchg
sub
xchg
lods
pop
ja
inc
les
test
xlat
cmpsl
dec
jbe
mov
fwait
cmp
mov
mov
addl
movsb
dec
xchg
cmp
add
ja
mov
push
mov
mov
adc
mov
fistps
ret
cmp
xchg
pushf
ds
adc
call
jne
in
sbb
rolb
cmp
hlt
pop
mov
add
sti
shl
icebp
lahf
imul
mov
jmp
insb
sub
sbbl
imulw
or
and
inc
or
xor
inc
gs
push
cmc
push
cmp
add
addb
sbb
popa
mov
cli
lods
push
pop
and
scas
fdivrs
and
fcomip
or
pusha
repnz
aad
xchg
aaa
cmpsl
adcb
push
js
in
xchg
aad
pop
pop
xor
repnz
orl
int3
mov
jle
std
push
mov
xor
pop
movsl
push
cmp
sbb
arpl
and
test
stc
add
pop
mov
lods
ja
xchg
test
clc
aad
dec
mov
jecxz
cmp
xchg
ja
mov
mov
int3
fyl2xp1
push
int3
adc
aas
mov
sarl
mov
loopne
das
cmp
incl
cmpb
mov
outsl
loop
push
sar
sub
call
push
sti
lahf
int3
xchg
test
pusha
stos
dec
das
test
mov
faddp
and
pop
xor
mov
dec
adc
mov
dec
push
or
jg
cltd
loop
bound
pop
or
xor
lods
test
in
or
add
and
inc
jbe
mov
pop
pop
mov
push
inc
pop
gs
xchg
test
or
hlt
cltd
aaa
add
lea
addr16
dec
test
mov
cli
lods
lret
andb
aam
js
xor
test
sub
adc
pop
push
mov
sbb
sahf
cmp
das
lods
pop
mov
popa
imul
into
ds
stos
dec
scas
stos
das
adc
mov
add
lock
jbe
mov
inc
int
mov
jmp
mulb
scas
xlat
movsl
pandn
adc
sbb
pushf
mov
pop
mov
sbb
push
pop
sub
xchg
or
loopne
fldcw
into
push
xchg
sbbb
jnp
out
cs
sbb
adc
cmp
push
aam
outsb
add
rorl
dec
shl
xchg
in
data16
mov
mov
mov
stos
xor
shlb
mov
sub
pusha
xor
cmp
push
out
jmp
pop
inc
sarb
mov
rcr
pop
adc
sbb
das
out
or
xchg
test
pop
test
or
std
notb
adc
lcall
inc
push
inc
aas
negb
faddl
xchg
xor
dec
scas
adc
pushf
cmpsb
pop
fwait
hlt
xor
in
cmp
inc
inc
sub
pushf
insl
filds
mov
xor
outsl
and
adc
hlt
iret
inc
cwtl
push
mov
sbb
mov
lcall
pusha
jb
inc
adc
and
xchg
mov
loopne
sti
fldenv
push
fwait
xchg
cmp
push
adcb
jno
popf
add
jae
pop
sub
cs
out
imul
add
and
xor
or
jmp
cmp
iret
xchg
lock
cmp
adc
sub
push
xchg
orl
iret
enter
mov
push
sarl
push
or
adc
ja
inc
mov
add
js
and
repnz
int
in
sbb
jbe
cmc
hlt
addr16
add
aam
jle
stos
pop
push
and
cmp
fisubrs
lds
in
mov
les
sub
xchg
cltd
xchg
sub
clc
cltd
std
dec
in
aaa
popa
in
mov
lea
add
push
and
inc
sbb
ret
push
mov
inc
dec
xor
pop
jg
cmc
mov
js
inc
mov
push
repz
xor
into
ljmp
push
popa
push
je
sbb
out
data16
mov
adc
jne
and
push
repz
push
cs
mov
fimull
xchg
movsl
sarb
jmp
sub
movsl
add
add
out
scas
leave
or
shll
popf
das
fnstsw
cmpsb
sub
mov
mov
fstps
enter
arpl
rorb
cwtl
nop
and
pop
arpl
push
nop
lcall
js
xor
in
sub
add
mov
adc
rcll
jne
pusha
mov
imul
stc
lret
jmp
push
test
stc
mov
cs
jge
mov
xlat
inc
dec
call
lcall
xlat
pop
mov
rorl
stos
aaa
pop
xchg
add
and
push
add
push
enter
and
daa
popf
ja
stos
loopne
jae
les
cmp
ret
push
stc
mov
adc
mov
mov
push
hlt
mov
pop
or
add
es
jg
in
add
cmp
rcll
jg
fldpi
stc
cmp
pusha
testl
lahf
ljmp
xchg
sti
fcomps
sarb
imul
inc
mov
sbb
nop
dec
inc
xchg
pop
dec
pop
push
ret
into
mov
mov
movsl
clc
fists
gs
push
test
xchg
mov
into
insb
adc
cmp
push
xlat
inc
data16
push
repnz
dec
jmp
mov
lock
or
test
scas
sbb
in
in
in
mov
lahf
mov
mov
fwait
pop
mov
push
adc
mov
pop
addl
lea
dec
pop
mov
mov
jno
mov
mov
repz
aad
mov
xchg
fsubrl
fbstp
jge
inc
pushf
add
out
and
lahf
cld
lods
and
sti
xchg
jg
adc
loop
rep
test
push
mov
cmp
push
sbb
inc
pop
xchg
insl
mov
mov
jno
insl
loop
sbb
orb
repz
dec
les
or
xorb
xlat
mov
lea
pop
mov
xchg
outsl
int
fmull
fidivl
or
mov
test
je
mov
lahf
sbb
lock
inc
inc
and
pop
adc
rolb
cwtl
inc
add
jle
adcl
xlat
mov
cmc
pop
jne
jle
pop
out
cmp
push
bound
push
pop
enter
xchg
sub
mov
add
ljmp
push
stc
aad
sub
cmc
sbb
out
shrb
dec
jmp
stos
stos
ret
in
sbb
push
sahf
xchg
icebp
faddl
mov
addl
ret
pop
push
push
mov
das
pop
push
mov
pushf
call
in
mov
dec
sbb
das
mov
jo
jle
push
cmp
pushf
add
fcompl
pop
pushf
ret
push
nop
imul
jecxz
out
scas
pop
icebp
sbb
out
out
iret
cs
das
test
xchg
sbbb
jae
icebp
leave
pop
or
inc
push
push
scas
shl
mov
fiaddl
sub
pop
repz
lret
out
jae
aad
mov
ds
push
orb
adc
cmc
add
test
mov
pop
loope
test
sbb
sub
fisubrs
pop
fwait
jbe
mov
or
jbe
xor
aaa
sbb
push
cmc
jecxz
mov
pop
es
insl
jl
or
int3
pop
lret
iret
mov
mov
rcll
xor
inc
test
or
mov
and
adc
and
and
xchg
das
ds
lcall
dec
add
sbb
loope
sub
xchg
and
sarb
cwtl
iret
add
ljmp
les
rclb
pop
lods
mov
stos
icebp
outsl
outsl
mov
subb
imull
or
xchg
loope
mov
xor
jne
sarl
push
push
lods
jns
xchg
dec
enter
add
cmp
cltd
xor
stos
lea
and
mul
sbb
jle
into
dec
or
rorb
outsb
xor
movsl
inc
jge
adc
sub
jge
and
pop
mov
popa
in
and
shll
pop
popa
fwait
out
call
push
mov
mov
xchg
icebp
fidivs
mov
sarl
loopne
sub
mov
jns
jno
sbb
adcb
inc
xchg
outsl
cmpsb
std
push
and
mov
adc
or
mov
adc
xchg
add
testb
lock
mov
mov
pop
jne
lods
push
clts
xchg
xor
out
and
popf
ljmp
mov
pushf
mov
mov
in
jecxz
cs
jp
sub
add
out
push
jl
pop
cmp
bound
or
fistpl
push
int3
and
std
mov
jae
mov
cmp
pop
aad
jle
cltd
sahf
aaa
mov
rorb
cmp
cld
xor
xchg
jno
ljmp
rclb
fstps
popf
scas
cmp
imul
lret
fidivrl
pop
stos
inc
jbe
cmpsl
sub
add
hlt
pop
pop
xor
pop
inc
shrb
pop
cld
scas
bound
mov
cmpsb
test
out
mov
cli
mov
out
lret
xlat
lahf
xchg
jp
cmp
jno
mov
jl
scas
mov
in
ret
dec
pop
sahf
mov
dec
out
jb
sbb
std
ficompl
dec
xchg
addb
imul
aam
mov
dec
mov
sub
xor
xchg
js
fstps
call
add
fdivr
mov
inc
ljmp
cli
div
es
dec
inc
xchg
xor
arpl
mov
mov
cmp
ret
cs
ja
add
outsb
cmpsl
out
xchg
scas
test
xchg
psubb
aaa
test
mov
shl
mov
add
roll
dec
mov
into
sti
int
push
sub
xchg
aaa
movsb
push
push
dec
fldcw
cli
mov
insb
jg
test
pop
sub
cmp
lcall
mov
in
push
fwait
dec
jecxz,pt
dec
jmp
and
dec
xchg
test
mov
and
jo
xor
sarl
adc
fnstsw
pop
adc
stos
inc
mov
jo
cmp
pusha
inc
xchg
aad
cmp
neg
sbb
popa
icebp
lcall
aam
or
push
cmp
pop
sbb
cs
dec
imull
gs
sti
rcl
sub
lcall
into
cmp
clc
test
int3
jle
jo
mov
sbbb
movlps
cmpsb
mov
xor
push
mov
jp
mov
cld
arpl
adc
shll
jmp
int3
inc
mov
cmp
fwait
aas
sub
adc
addr16
pop
roll
ja
xor
sahf
ja
push
mov
cmp
scas
mov
add
std
pop
addl
frstor
shll
jg
xchg
cmp
imul
faddp
outsb
inc
lea
stos
xchg
mov
es
add
add
mov
dec
inc
mov
push
adc
aas
push
rcl
mov
mov
jae
mov
mov
or
mov
fildll
inc
les
inc
pop
sbb
fistpll
mov
push
jo
add
sub
dec
fcmovnb
push
fdivrs
jb
popa
adc
clc
mov
and
cmp
sbb
sarl
jnp
push
cmpsb
pop
mov
mov
leave
pop
sbb
lcall
ljmp
mov
cmp
or
cmp
push
in
mov
into
decb
xchg
xlat
xor
and
sub
hlt
mov
jecxz
out
cmp
clc
inc
lret
cmp
inc
or
and
scas
ljmp
aad
fsubrl
mov
push
mov
or
push
adc
fldcw
lock
ja
test
into
test
stc
jmp
mov
mov
dec
in
xchg
andb
in
sbb
test
lea
jle
pop
sub
pop
or
dec
or
test
and
jge
popf
fnstenv
mov
pop
lahf
lret
or
and
aam
cmp
push
fwait
call
cmp
movsl
and
dec
lods
sub
out
sahf
xchg
jo
aam
push
inc
xor
sbb
inc
xor
stos
popl
sbb
cmc
rolb
sub
jno
adcl
sub
leave
mov
xor
addr16
xchg
adc
mov
jbe
mov
add
popa
or
push
sub
fstpl
cli
std
jne
decb
add
ds
repz
ds
mov
xor
stc
xor
jns
pop
test
xchg
sahf
in
fs
jl
dec
cld
jle
cmp
in
add
or
popa
or
or
fwait
enter
test
lods
rorb
jecxz
pop
dec
xor
stc
std
or
sub
fwait
jge
inc
adc
dec
xchg
mov
xchg
out
cli
daa
iret
xlat
ja
inc
out
stos
mov
and
jo
fwait
mov
fstps
lcall
add
sub
mov
dec
and
or
fisttpll
fs
xchg
add
cltd
stos
inc
push
fldt
orb
or
jle
push
clc
daa
in
push
push
cmp
or
inc
pusha
cli
movsl
push
pop
es
lcall
fs
push
dec
xchg
je
push
mov
lods
push
bound
addb
ror
bswap
cld
shrb
xlat
pop
lgs
hlt
sub
jle
jnp
scas
pop
sbb
shl
sub
in
add
jo
imul
jle
ss
cmpsb
and
and
xor
shlb
jmp
rol
mov
lret
or
mov
dec
fimuls
dec
int3
shll
addl
mov
jmp
pop
aaa
or
pop
push
adc
jp
push
mov
lret
incl
mov
push
stos
pop
mov
jnp
sub
sbb
cmc
cmc
insl
inc
out
xchg
in
test
sbbl
pop
cmp
sub
lds
mov
xchg
mov
mov
add
into
jecxz
insb
cmp
pop
loopne
sub
inc
mov
ljmp
sub
push
add
sbb
test
and
mov
notl
and
loopne
pavgw
pop
jl
mov
add
stc
inc
or
xor
and
jnp
mov
sub
or
lcall
sbb
cwtl
sbb
add
lahf
hlt
shrb
inc
and
imul
movl
jne
mov
mov
test
notl
loope
testb
lds
mov
insl
pop
push
inc
icebp
addl
pop
add
and
mov
dec
mov
iret
or
xchg
addr16
out
scas
sub
and
push
call
iret
dec
pop
loopne
push
pop
dec
jae
rorl
out
popa
fists
adc
aaa
data16
xor
jbe
loopne
scas
sarb
pop
cmp
xor
xchg
loopne
mov
jecxz
pop
sti
xchg
mov
rorb
jb
mov
test
sub
jae
xchg
fs
mov
xor
pop
aad
xor
mov
xchg
adc
lods
mov
fisubrs
arpl
jne
pop
ljmp
jne
lret
and
fstpt
dec
lahf
xchg
cmp
popa
scas
cmp
mov
subb
stos
fnstcw
cld
add
loope
adc
adc
icebp
mov
xchg
sub
imul
jne
das
aam
in
lret
push
sub
aas
adc
aas
loope
mov
jbe
and
hlt
test
xchg
negl
or
mov
arpl
jo
loopne
jnp
stos
and
inc
bound
les
mov
in
push
jbe
shrb
pop
and
inc
jle
mov
cmp
sbb
sub
imul
dec
xchg
fistpl
and
dec
sahf
movsl
pop
xchg
inc
push
mov
sub
enter
push
mov
push
movsl
ret
or
fdivl
jnp
jne
and
dec
push
push
or
add
dec
cwtl
lret
mov
pop
std
or
lcall
imul
xchg
inc
jg
frstor
in
psubb
andb
mov
std
xchg
stc
jl
pusha
dec
xchg
stos
rcll
adc
sub
dec
adc
pop
popf
sbb
repnz
sub
push
fwait
aaa
jge
and
push
mov
and
movsb
int
push
loopne
xor
inc
mov
sub
out
cwtl
enter
repz
in
mov
lods
xor
xor
push
jecxz
dec
mov
outsl
adc
or
cmpsl
mov
and
mov
jge
mov
ret
xchg
pushf
shlb
popf
cmpl
andb
mov
sub
ret
cmpsb
jbe
pop
add
bnd
lock
dec
cmp
add
xchg
ret
js
iret
in
jno,pt
outsb
and
in
pop
xor
mov
mov
sahf
mov
mov
jecxz
aam
loop
inc
cmp
dec
in
mov
adc
lret
cmp
cli
push
sarb
lds
fistl
xlat
inc
cmpsl
les
in
imul
mov
lods
mov
sub
cwtl
divl
and
push
cmp
push
test
idivb
fldenv
xchg
enter
pop
push
and
out
or
push
cs
push
sbb
sbb
mov
jg
adc
leave
cmp
dec
xchg
int
test
daa
out
cmc
add
cwtl
xor
lods
or
add
imul
jbe
loopne
scas
xchg
push
bound
pop
mov
lods
jl
sub
sub
push
inc
lret
fmull
addl
inc
jno
lcall
adc
pusha
pop
and
add
loopne
int
push
dec
inc
mov
pop
jge
cmp
lods
ds
cmc
jmp
or
lret
xor
sub
sar
lock
push
inc
notl
popf
xor
aas
repnz
or
dec
cltd
mov
stc
sarl
push
push
outsl
xchg
mov
cltd
mov
adc
or
fisubrl
add
lcall
subb
inc
pop
sbb
in
adc
xchg
pushf
stos
xchg
roll
fnstcw
xor
xchg
lret
outsb
cmpsb
mov
es
cmp
mov
and
lcall
inc
fidivs
mov
mulb
lea
sub
sub
ja
jecxz
in
fbstp
dec
fbld
daa
xor
insl
ss
inc
push
inc
dec
sti
inc
scas
and
cli
push
adc
gs
imul
xlat
roll
xor
lahf
mov
sbb
sbb
adc
js
xchg
cmp
xchg
popf
xchg
mov
mov
outsl
arpl
cmpsb
push
lods
mov
imul
clc
popf
lea
or
push
adc
shl
jno
mov
int
gs
cmpsl
ljmp
lret
call
stos
or
and
jecxz
fisttpl
sbb
test
cmp
pop
in
cmpb
sub
add
sub
pop
ljmp
sahf
aaa
loope
adc
push
jne
inc
jns
out
sti
loopne
mov
in
sbb
scas
add
add
push
out
xor
jo
neg
cmpsl
shll
lock
into
aaa
pop
xchg
jl
pop
lods
fcmovb
cmpsl
or
pop
lahf
cmp
hlt
sub
adc
pop
mov
clc
mov
shlb
ss
mov
cmp
sbb
push
test
pop
sti
cmp
fsts
mov
scas
push
lcall
out
data16
add
inc
fisttpl
xchg
push
and
push
jne
mov
rcrl
add
es
jbe
sbb
xor
repnz
pop
dec
call
daa
popf
scas
xor
or
aaa
mov
dec
imul
adc
in
mov
xchg
xor
add
mov
je
mov
and
dec
and
or
pop
ja
cmpsl
pop
leave
addr16
adc
sbb
fwait
aam
into
inc
insb
xor
mov
xchg
pop
and
cmp
je
inc
aas
jmp
data16
fcompl
xor
lock
addr16
ja
pop
sbb
or
cmp
and
cmpsl
lret
subb
mov
lahf
sbb
mov
cmpsl
sbb
or
dec
fisttpll
jl
clc
jo
js
sti
cmp
lea
sbb
push
jmp
fwait
lds
inc
cmp
pushf
xchg
ljmp
jl
adc
dec
xchg
ljmp
dec
imul
and
and
jecxz
mov
testl
or
mov
jmp
loopne
ja
repnz
rorl
sbb
sahf
pop
and
pop
xchg
mov
push
inc
stos
push
pop
jo
mov
sbb
mov
test
icebp
ds
loop
cmp
add
mov
nop
hlt
fcmove
and
ret
faddl
push
adc
xchg
push
jb
sbb
lret
fistpl
jg
adc
mov
cld
inc
jns
push
adc
inc
add
icebp
bound
jo
js
jb
scas
adc
or
nop
test
mull
sub
xor
jle
aaa
hlt
cmp
fs
mov
ja
fcmovbe
sbb
jge
xlat
pop
mov
stos
imull
sbb
arpl
mov
add
adc
aad
mov
dec
and
or
mov
jns
fsubrp
into
mov
test
popa
imul
push
ja
adc
and
inc
aam
inc
cmpsl
mov
xchg
or
and
int3
test
xor
inc
outsb
xor
dec
imulb
in
testb
pushf
lret
popf
mov
or
sahf
shlb
mov
filds
call
push
lcall
repz
xor
cmp
int
daa
mov
add
sub
sbb
insl
push
xchg
mov
pop
add
cli
and
push
int3
cmove
jne
push
pop
int3
pusha
and
xchg
iret
popf
fadd
es
out
in
push
inc
cmp
hlt
out
out
call
mov
rorb
xor
lock
nop
jmp
adc
cmp
dec
in
mov
shlb
mov
dec
xlat
int3
cmp
out
inc
or
sar
push
mov
jp
dec
jb
adc
mov
inc
dec
imul
push
cli
lods
xor
fisubrs
mov
push
or
and
out
fistpl
ss
mov
movsb
repnz
in
std
push
cltd
push
mov
fs
or
or
movsl
notl
ret
and
fnstsw
fnstcw
pop
cmc
push
sub
loope
mov
pop
test
push
mul
fbstp
cli
and
lcall
jl
ret
xchg
or
out
add
adc
mov
mov
ret
pop
xor
lret
mov
dec
imul
add
ret
cmp
pop
pop
adc
pop
pusha
and
push
sarb
es
loope
test
jp
jns
pop
mov
std
scas
scas
arpl
cmpsb
rorb
cmp
fisttpll
jb
lret
lahf
fisttpll
repnz
mov
dec
popf
jae
ja
jb
inc
jbe
dec
bound
outsl
pop
mov
outsb
sub
xchg
pop
pop
push
out
jns
jnp
rcr
jae
inc
mov
enter
repz
sbb
jbe
push
sbb
and
xchg
scas
jle
into
inc
aad
aad
xchg
sbb
cli
mov
xor
ficoml
sbb
adc
or
hlt
adc
jp
insl
xchg
cmp
dec
or
lret
out
pop
orb
xor
xchg
rcrl
loopne
leave
in
fwait
dec
sub
sbb
mov
shr
pop
push
cmpsl
sahf
mov
lds
cmpb
fwait
aad
add
pusha
lahf
outsb
ffree
adc
popf
mov
dec
xchg
shr
inc
or
fwait
sbb
push
scas
icebp
mov
int
push
pop
push
fstl
cs
or
das
popf
repz
xchg
mov
add
data16
adc
enter
movsl
mov
ljmp
sub
scas
add
pop
push
cld
xchg
sub
push
addr16
pop
into
insb
sub
pop
pop
jns
popa
push
orl
mov
insb
push
jp
jns
mov
add
and
push
lret
ss
cmpsl
jae
xor
test
jnp
sahf
xor
push
fs
cmp
add
cmp
inc
xor
adc
push
lcall
int3
lods
frstor
sbb
adc
xor
xor
jecxz
pop
fisttpll
mov
dec
cmp
inc
sub
sti
add
out
sub
sub
jp
inc
jbe
or
cmpsl
jns
and
inc
test
lcall
xor
push
adc
push
pop
pop
lea
sub
frstor
sub
int
notb
nop
int
out
jno
cmp
or
jmp
lret
mov
mov
jg
in
pop
loopne
inc
int3
frstor
in
gs
xchg
gs
stos
inc
and
jge
sar
repnz
lcall
dec
in
dec
pop
or
jmp
and
mov
add
push
jo
sbb
out
stos
jns
sbb
xlat
xchg
cmpsb
adc
stc
inc
out
xchg
adc
inc
add
stos
movb
sbb
je
pop
jg
mov
pop
cmp
addl
daa
rorb
jb
out
cli
push
daa
and
mov
or
mov
mov
addr16
or
and
add
pushf
fimuls
rcrb
int3
stc
xor
rcr
arpl
sbb
xor
lahf
pop
mov
mov
or
push
and
ljmp
aas
adc
outsb
add
inc
in
mov
add
sbb
adc
sbb
insl
jle
gs
dec
addr16
sahf
push
mov
add
mov
aas
xor
push
adc
pop
xor
xchg
jmp
clc
sub
xor
jnp
mov
imul
out
cmc
std
sub
bnd
gs
jnp
push
call
stos
and
scas
jge
mov
pop
jl
inc
pop
xor
push
lea
ljmp
pushf
sbb
jo
pop
cmpsb
stos
test
mov
xchg
dec
push
repnz
aas
jo
or
jecxz
cmp
push
ret
das
cli
leave
pop
aad
pushf
cs
popf
push
dec
jp
loope
add
popf
cmc
and
jbe
pop
cmp
jne
rolb
sbb
cwtl
cwtl
mov
fidivs
mov
jge
adc
lret
movsl
mov
lahf
fdivr
shrl
mov
push
stos
lret
std
jae
or
fmul
bound
mov
js
out
lret
add
cmp
jp
mov
mov
in
xchg
inc
sub
and
out
jmp
adcb
aam
add
aas
and
ja
pusha
push
std
sti
xor
insb
das
rol
xor
fnstcw
jle
clc
ret
jo
clc
mov
pop
out
lret
dec
mov
rclb
test
mov
enter
push
sub
jle
stos
mov
adc
add
inc
dec
aaa
cmpl
mov
and
testb
dec
push
mov
pushf
mov
mov
cmp
in
mov
push
je
int
mov
push
push
test
dec
bound
mov
out
nop
sbb
cmp
jecxz
adc
loope
inc
sub
pop
nop
test
sti
cmp
sbb
lods
rorl
jns
pop
ljmp
lret
popa
add
dec
clc
lods
cmp
stos
xchg
sbb
inc
in
pop
insl
fwait
cmp
jge
movsb
cs
mov
or
lret
jae
pop
xor
xchg
nop
aam
fwait
adc
sbb
pop
roll
cmp
in
jl
jp
xor
sub
jecxz
scas
es
mov
leave
fistps
out
mov
xlat
and
sub
cs
testb
push
rcll
mov
mov
push
int3
jg
call
js
inc
cli
mov
pop
sub
stos
and
push
leave
mov
shlb
ss
xor
popa
sub
mov
push
daa
cli
inc
cmp
lcall
sti
in
inc
push
xchg
icebp
pop
ja
sub
and
jne
dec
nop
inc
xor
out
dec
enter
sahf
inc
jge
jmp
lods
jae
dec
imul
insl
mov
insb
jne,pn
mov
sub
or
fsts
xor
jmp
inc
sbb
mov
jb
dec
sbb
mov
icebp
and
rorb
into
sarl
sbb
movl
jne
pop
sub
out
adc
or
gs
ret
cltd
adc
xor
xor
adc
dec
call
movsb
sti
pushf
int3
mov
and
mov
pop
ds
pop
xchg
in
fists
ret
dec
pop
mov
mov
push
or
sbb
mov
test
push
call
ss
mov
in
cmpl
lcall
dec
addr16
outsb
push
insb
in
mov
adc
rcll
push
pop
lds
in
sbb
inc
je
sub
test
jne
mov
add
jne
jmp
iret
inc
sub
cltd
lods
inc
mov
and
dec
push
pop
movsl
test
testl
push
xor
hlt
test
into
add
mov
lods
mov
jp
imul
jmp
mov
mov
dec
xchg
xor
sbb
leave
mov
aam
mov
cltd
insb
mov
aam
add
pop
mov
xchg
inc
sbb
cmpsl
cli
in
aas
mov
leave
sbb
mov
jb
cmpsb
inc
cmp
mov
pop
ja
mov
mov
sahf
es
sbb
xor
idivl
mov
lret
ja
mov
into
mov
in
into
cmp
jbe
fistpll
or
ss
mov
test
adc
stos
mov
jecxz
xchg
loope
fscale
jne
sub
mov
fsub
out
lods
push
sub
dec
add
mov
jmp
or
inc
repz
incl
lock
sub
mov
or
lret
xorb
cmp
push
mov
and
out
mov
in
mov
jle
dec
ficompl
int
adc
adc
lock
repnz
sub
dec
mov
adc
xor
cmpsb
push
ljmp
cmpsb
ret
dec
mov
pop
fs
loope
sti
cld
addr16
adc
insb
push
imul
lcall
pop
lcall
pop
orl
pop
sub
pop
mov
mul
stos
insl
test
out
jb
mov
push
outsl
int
jl
pop
or
pop
push
mov
imul
add
movsl
push
mov
lds
addr16
out
inc
jno
pop
shll
inc
sahf
add
sarl
cli
mov
push
xlat
or
lock
push
dec
stos
in
mov
add
jb
or
lret
or
push
push
pop
xchg
mov
addr16
push
dec
mov
dec
mov
push
push
jle
roll
mov
out
out
test
pushf
vpcmpeqd
mov
nop
push
push
pop
shll
pop
std
add
jl
movsl
imul
mov
pop
sbb
jle
sbb
loopne
mov
shl
dec
xchg
mov
xor
jg
dec
xor
sub
and
in
gs
pop
dec
adc
push
mov
push
das
jecxz
cwtl
mov
dec
fmuls
or
je
mov
aad
sub
shl
add
outsb
cmpsb
mov
mov
adc
and
cli
je
and
add
fcmove
xor
imul
nop
jg
adc
inc
mov
mov
and
lret
adc
div
imul
out
aas
xchg
aas
cld
xor
sti
mov
or
or
sahf
adc
mov
iret
pushf
repnz
jl
xchg
or
sub
imul
push
jg
mov
stos
rorl
test
pop
inc
pop
ljmp
stos
push
bound
jne
cmc
cmc
mov
adc
sahf
popa
xchg
in
mov
popf
dec
insl
dec
xchg
out
and
addl
pop
daa
sbbb
mov
lock
icebp
testb
xchg
pusha
cmp
out
aad
dec
mov
xlat
addr16
shrb
mov
addr16
mov
add
rcrl
fwait
or
stos
ss
mov
cmp
imul
in
dec
shlb
cmp
insl
dec
test
out
mov
lret
push
test
loope
pop
lds
orl
cmpsb
insl
test
nop
mov
push
nop
fdivl
fidivs
out
xchg
mov
xorb
add
push
dec
and
fmul
cmp
mov
sbb
adc
repnz
sub
leave
mov
sub
mov
push
fstl
fld
outsl
push
sub
sub
xor
lahf
and
cmpsl
and
aas
ljmp
push
cmp
pop
cwtl
sbb
sbb
jmp
jnp
pop
xchg
hlt
shrl
int
xor
jbe
cltd
scas
push
or
add
xorl
push
or
xor
mov
jb
xor
push
cmp
xchg
adc
push
call
outsl
lcall
inc
je
pusha
sbb
out
add
xchg
mov
sti
and
in
movsb
dec
popa
sbb
daa
inc
ret
push
jne
or
xchg
sarb
pop
iret
adc
jbe
bound
in
andb
mov
push
notl
stos
pop
enter
fidivrl
rcr
shrb
ficoms
cli
subb
mov
push
clc
and
sbb
mov
lock
xchg
lret
inc
pop
mov
jne
inc
inc
push
das
fldcw
lahf
jle
xchg
cmc
cmp
rolb
pop
icebp
sbb
add
jmp
lret
movsb
dec
ja
jmp
dec
xor
scas
mov
jmp
sbb
icebp
xor
cmp
pop
pop
add
fidivl
lret
jg
mov
cwtl
frstor
jns
xchg
add
mov
dec
lds
nop
pop
or
and
sub
dec
clc
mov
mov
ljmp
bound
inc
jecxz
xchg
jo
xlat
ss
sbb
add
add
imul
cltd
xchg
cmpsl
cmp
and
lret
jae
out
fcmove
mov
dec
adc
cli
out
test
sub
lret
xlat
ficoms
lret
xchg
aaa
lods
stc
mov
mov
test
imul
cmp
rcl
outsl
rorb
test
xchg
push
movsb
rolb
ror
mov
pop
jle
jle
in
adc
xchg
add
inc
lea
mov
insb
stos
pop
out
shrd
ss
fs
sbb
in
dec
xchg
es
and
jmp
jmp
add
push
push
scas
dec
test
dec
sub
xchg
js
mov
mov
lea
in
pushf
insb
test
xchg
out
sub
gs
hlt
pop
es
xchg
dec
decb
enter
cmpsb
ret
movsl
aas
daa
jl
lock
test
cmp
test
inc
mov
stc
jge
sarl
scas
dec
movsl
sbbb
filds
imul
aad
cwtl
lret
xor
push
outsl
mov
rcrl
xchg
nop
in
pop
dec
push
add
push
mov
adc
sub
cltd
cmc
lock
call
and
imul
mov
or
inc
shrl
push
sub
imul
ror
sbb
movsl
inc
pusha
xchg
and
or
dec
das
mov
mov
imul
cwtl
es
pop
ror
sbb
inc
mov
in
rol
mov
add
inc
fisttpll
sbb
insl
sar
and
and
outsl
idivb
aaa
pop
pop
mov
sub
jecxz
cmc
push
mov
mov
push
daa
mov
or
lds
pop
xor
pmullw
adc
push
jg
add
jo
xchg
shr
jno
inc
sbb
std
xchg
fildl
pop
mov
test
sub
shll
mov
mov
mov
and
pop
adc
sbb
mov
sahf
jle
cltd
inc
shrb
ss
dec
cwtl
imul
add
inc
mov
stos
or
out
bnd
loop
lods
inc
or
shrl
out
int3
int3
add
mov
aam
push
imul
outsl
xor
lcall
sbb
ret
push
mov
add
test
fsub
gs
push
bound
mov
sahf
and
xor
mov
jge
out
pop
jp
dec
sti
jae
jle
cmp
dec
lods
cwtl
xor
loopne
aas
pusha
jnp
sub
inc
movsl
inc
int3
pop
inc
and
out
mov
adc
and
sub
add
or
mov
shrl
mov
xchg
sbb
mov
pop
sbb
popf
xchg
adc
sub
cli
add
sbb
loopne
push
or
mov
xchg
push
repz
fmul
ret
adc
or
ret
bound
aad
jl
fldl
sti
xorl
mov
sub
ljmp
cli
loopne
in
aad
and
mov
cld
inc
sbb
cmpsl
jb
testl
sbb
mov
lret
outsl
or
inc
adc
or
lods
test
iret
scas
push
jmp
gs
stc
mov
mov
in
dec
mov
cltd
and
mov
fs
dec
adcl
pop
and
repnz
enter
insb
je
jns
enter
sbb
and
xor
adc
pop
divb
mov
addr16
mov
lds
ror
ja
xor
mov
xchg
and
popf
insl
mov
push
sub
scas
adc
test
xor
ljmp
repnz
mov
xchg
movsl
fdivrl
insl
adc
cmp
js
push
xor
push
je
lea
or
int3
push
mov
xor
pop
mov
push
mov
mov
jmp
call
and
sbb
repnz
inc
ss
rclb
pop
jp
es
into
stos
jl
mov
xor
gs
dec
dec
nop
xchg
in
inc
orb
das
shll
sub
fcoms
xor
push
xor
fisubs
arpl
mov
cmp
dec
je
pop
dec
jnp
dec
mov
arpl
sub
lods
pop
icebp
out
jecxz
mov
jns
xor
fwait
mov
xchg
or
mov
cmp
shlb
mov
enter
pushf
movsb
in
loope
stc
iret
les
rolb
or
neg
call
mov
inc
fdivrs
dec
sbb
add
test
jmp
sub
sub
dec
lcall
pop
cld
sub
pop
orl
mov
jno
cmovnp
or
sti
and
nop
pop
imul
pop
aad
mov
fwait
push
inc
jae
xor
sub
ja
imul
fs
jmp
aaa
cs
mov
int
scas
in
shll
lock
call
push
sub
adc
push
mov
outsl
jle
out
aad
mov
dec
in
das
gs
dec
sub
push
dec
sbb
mov
jne
insl
jae
nop
and
xor
add
inc
lahf
adc
js
into
mov
out
ds
cwtl
les
dec
add
sbbb
mov
cmp
or
dec
shlb
mov
repz
aam
je
xchg
ret
adc
xorb
out
pop
inc
pop
sub
cmp
mov
dec
outsl
or
jbe
mov
daa
or
jns
popa
mov
lretw
aad
pushf
mov
inc
push
stos
nop
inc
mov
mov
jge
lds
push
out
mov
daa
xchg
mov
lods
loopne
or
jnp
pop
sbb
push
or
dec
xchg
int
das
push
shlb
push
push
in
pop
jle
xchg
mov
adc
xor
mov
in
jae
mul
dec
test
mov
bound
daa
xchg
jl
std
fsubs
pop
and
insl
mov
test
arpl
push
ljmp
xchg
xchg
int
lods
insb
push
dec
frstor
daa
adc
push
cmc
pop
or
test
rorb
test
int3
and
aad
push
movb
xorl
adc
jecxz
push
jmp
js
xor
mov
cmpsl
loopne
popa
outsl
pop
mov
push
mov
stos
js
sbb
xor
push
adc
mov
lea
jo
lahf
dec
pop
mov
adc
mov
cmpsb
out
adc
cmp
aas
xor
adc
push
add
dec
ret
xchg
movsb
inc
xchg
cmc
xchg
or
in
sub
xchg
test
cmp
mov
sahf
push
flds
add
roll
jb
into
inc
cmp
inc
jo
xor
lahf
push
addl
inc
cmp
inc
in
fisubs
movsb
inc
aam
jbe
jnp
mov
into
imul
dec
cmp
clc
mov
xchg
xchg
pop
adc
mov
push
inc
cmp
jae
jb
adc
sahf
mov
mov
mov
mov
or
push
xchg
ss
pop
mov
aad
out
rol
dec
add
popf
mov
mov
dec
adc
push
cli
inc
sbb
xchg
push
sbb
into
push
adc
fnstenv
lcall
imul
push
jmp
push
ss
xchg
add
mov
or
jbe,pt
jno
pop
int
sti
jbe
push
jmp
mov
lret
cmp
int
sub
sub
stos
fnstsw
dec
jnp
ja
jae
test
xchg
sub
imul
ds
idivl
add
mov
fs
insb
cmovns
pop
cmp
xchg
xor
test
mov
inc
mov
out
or
lds
push
cmp
lods
jnp
cld
pusha
sahf
push
and
mov
aas
stos
fbld
xor
repz
or
mov
jbe
and
cmc
rorb
leave
repnz
popa
adc
inc
mov
push
mov
pop
repnz
loope
mov
int
cwtl
lods
imul
lea
pushl
fstp
dec
das
adc
ss
imul
bound
insb
data16
cmp
stc
sbb
daa
adcl
lods
sbb
pop
jne
fadds
movsb
nop
push
mov
vpaddb
pushf
pushf
lret
repnz
out
xlat
outsb
pop
jp
call
or
pop
cmp
xchg
adc
out
inc
stc
insb
es
jg
movsl
jnp
push
and
fsubs
mov
les
jbe
stc
mov
sbb
jmp
popf
and
xchg
loope
testb
out
mov
add
sub
fwait
sbb
fadd
in
out
sub
jnp
mov
xchg
jns
fidivl
xacquire
mov
and
js
jne
pop
jns
std
dec
cmp
or
into
or
mov
xchg
mov
out
cmpsb
cmpsl
sahf
aas
cld
ljmp
xlat
push
pop
xor
lds
test
xor
out
sahf
imul
rcr
xchg
xor
int3
div
xchg
out
push
xchg
add
aad
hlt
xor
in
mov
mov
jge
jae
inc
lods
push
mov
mov
mov
sarl
aaa
rcr
xor
pop
sbb
mov
jp
sbb
adc
stos
lahf
jp
xchg
out
jne
sub
pmullw
push
mov
int3
loope
xchg
insb
sbbl
insl
scas
popf
je
hlt
inc
cmpl
aam
xor
pushf
das
idivb
pop
push
scas
cs
mov
rcrb
dec
pop
add
dec
repz
jno
xor
mov
mov
hlt
cli
sbb
test
sub
hlt
jb
and
sbb
insb
je
sti
in
scas
icebp
iret
test
add
jb
cs
jmp
sub
fistpll
cs
mov
mov
jno
sub
mov
pop
pop
jns
aad
xchg
nop
inc
ja
cmpsb
aaa
mov
pop
mov
or
add
adc
push
add
and
ret
sbb
scas
out
xchg
ss
inc
nop
xchg
movb
add
jmp
dec
mov
xchg
into
jnp
sarl
ljmp
pop
cmp
mov
sub
and
xor
xor
lea
xchg
stos
test
shrb
shrb
and
add
mov
sub
or
ffreep
es
xor
call
incl
mov
aaa
shrl
popf
cmp
inc
xchg
addr16
mov
mov
popf
loope
shll
inc
push
test
push
pusha
clc
jns
fisttps
in
adc
popl
jno
aam
arpl
leave
push
stos
xchg
xor
xor
roll
and
xchg
dec
or
xor
aaa
ja
push
and
sbb
movsb
rcr
push
add
or
inc
mov
adc
out
data16
gs
pop
pop
add
inc
sbb
je
xor
xor
push
xor
xchg
pop
cmp
mov
mov
lods
test
es
jne
movsl
xchg
lret
test
xchg
lods
push
xchg
iret
ror
in
sarb
mov
or
lcall
movsb
mov
lcall
pop
mov
ljmp
movsb
fwait
xlat
mov
adc
fdivr
adc
push
and
dec
xor
mov
jno
mov
popf
leave
or
test
ljmp
and
sub
stc
mov
int
out
pop
imul
repnz
xchg
mov
inc
and
jbe
xchg
popa
mov
cli
les
xchg
add
cmp
mov
dec
sar
mov
js
sbb
pop
dec
jle
dec
sub
sti
jmp
ja
and
inc
rorb
daa
popf
push
js
jno
dec
sub
popa
sub
xor
das
ret
cmp
add
aaa
mov
jge
push
sbb
mov
movsb
dec
mov
cltd
cmp
clc
fsts
mov
repz
xor
jle
std
inc
call
sarl
loop
mov
les
int3
xor
xor
xchg
ror
into
shll
inc
ror
jle
mov
jmp
lcall
ja
or
iret
mov
test
out
ja
push
add
lret
aam
les
push
pop
push
jge
imul
rclb
jmp
andl
ds
shll
mov
mov
pop
jg
test
fwait
shrb
ret
cmc
mov
xchg
lret
fiadds
insl
sub
jmp
nop
adc
xor
cmp
pop
rcrb
mov
and
push
daa
or
fists
pop
adc
and
iret
into
ja
test
xchg
lret
jnp
mov
mov
bnd
aaa
fs
mov
insl
cmpsl
mov
in
mov
mov
movsl
dec
lret
pop
int
insb
mov
bound
movsb
clc
and
push
sbb
cmc
add
add
subl
mov
or
dec
push
fcoml
test
fs
ljmp
pop
hlt
fwait
xchg
movsl
jno
and
loopne
adc
subl
lret
in
addb
and
sarb
pop
adc
addr16
scas
cmp
add
adcb
xor
jnp
add
dec
and
repnz
ror
push
pushf
out
out
inc
es
lret
ja
xrelease
filds
mov
inc
or
xor
ja
sbb
cmp
xor
pop
pop
add
rorb
out
enter
jo
or
jp
jmp
orl
movsb
cltd
xchg
jae
inc
das
gs
sub
mov
cmc
and
add
add
jbe
sahf
fldl
loope
int
inc
out
bound
js
cli
sub
repnz
aaa
push
push
int
xor
xchg
adc
dec
data16
jnp
adc
hlt
cmp
loop
dec
bndldx
xor
cmpsb
jge
in
pop
test
sbb
pop
jns
inc
in
lods
fnsave
pop
neg
push
cwtl
in
loope
add
out
repnz
inc
in
hlt
xor
insb
jmp
cmc
or
xchg
aad
inc
dec
dec
or
mov
push
idivb
jne
fildl
cmc
mov
fmull
rcrb
pop
jmp
data16
shr
fiaddl
shr
adc
rcll
add
shrl
or
push
mov
mov
xchg
jno
les
inc
xchg
xor
fs
ja
cld
mov
xor
cmpl
insl
add
lahf
test
jmp
lret
xchg
jecxz
clc
jns
add
daa
inc
sub
sbb
fcoms
sbb
xor
ds
dec
inc
insl
faddl
jmp
sub
mov
push
aas
dec
and
xor
mov
out
pop
push
test
or
pop
cmp
sahf
xchg
js
into
cmp
stos
pop
fldl
int3
mov
jno
shrb
or
mov
dec
std
mov
imul
add
inc
dec
mov
pop
cmp
adc
xlat
mov
sub
out
adc
ja
mov
jp
dec
aad
in
cmc
into
leave
add
xchg
fcomi
fndisi(8087
test
das
in
push
ret
jnp
mov
push
sub
lods
pop
dec
or
and
fiadds
dec
popf
push
lea
xchg
loop
pop
lock
cmc
and
cmp
sbb
xchg
aaa
mov
aam
out
out
mull
pop
cwtl
shrl
push
sbb
xor
bound
adc
inc
sarb
fistpll
cli
inc
lahf
andl
ds
mov
sub
mov
gs
mov
test
and
andl
xlat
out
push
inc
jp
daa
popa
push
pop
sbb
inc
jecxz
iret
cld
xchg
hlt
js
cmpb
shll
clc
add
andb
aad
mov
adcl
scas
xchg
and
push
lea
dec
push
repnz
dec
mov
dec
jl
or
repnz
fs
stos
stos
add
mov
mov
push
cmp
shll
outsb
popa
into
clc
sbbl
add
sub
mov
hlt
inc
loope
lods
cld
bswap
pop
cwtl
sti
fdivl
push
or
aaa
push
or
jns
jne
xchg
ffree
jp
sub
push
popa
jge
cwtl
sub
cmovle
add
jo
mov
leave
xor
xchg
ss
or
push
cmc
cs
xlat
lock
jns
daa
movsb
xor
adc
fimull
inc
rcr
sub
jl
add
jae
jo
sbb
enter
mov
jle
adc
sbbb
test
mov
popa
lret
cli
aam
xor
dec
mov
sahf
push
push
call
mov
pusha
adc
mov
xlat
cs
test
scas
scas
push
mov
adcb
sbb
push
in
jne
mov
xorl
xchg
sub
test
mov
cs
loopne
rcl
sti
push
push
xor
aas
sub
pop
cmp
test
nop
aad
and
inc
mov
cmp
repnz
repnz
inc
ret
mov
mov
inc
xchg
pusha
mov
out
mov
enter
add
int3
sub
aad
fcompl
fildl
xor
repz
lahf
out
loope
pop
lea
sahf
jno
addl
mov
dec
imul
decb
aam
popf
pop
leave
mov
dec
push
xlat
xchg
test
xlat
lret
xchg
and
cmc
push
loopne
or
mov
stc
and
xor
lods
jle
ss
xchg
ss
into
js
test
aaa
xlat
aam
mov
dec
daa
sbb
out
lea
lcall
pop
out
enter
pop
lahf
fcoml
in
or
push
mov
adc
cld
daa
cmpsb
fs
pop
inc
inc
xchg
pop
call
push
std
pop
inc
rcl
jns
mov
cmc
rol
ror
xadd
ret
frstor
cmpl
ljmp
cld
push
xor
int3
xchg
insl
cli
push
loope
enter
push
cmp
int
mov
cwtl
mov
adc
xchg
clc
es
mov
pop
or
xchg
clc
mov
adc
pop
into
fimull
or
dec
leave
fnstsw
sub
sbb
jge
push
inc
or
outsb
clc
enter
stc
mov
imul
mov
les
jp
inc
and
cli
ss
jle
jae
sqrtps
iret
add
in
push
test
add
sub
rclb
fcomps
jbe
call
xor
inc
int
lods
xor
mov
sbb
jl
stc
lahf
pop
pop
jp
popl
mov
pop
ret
ret
mov
dec
xchg
enter
js
mov
xor
fcompl
dec
rclb
inc
lds
mov
xor
cmpl
lea
xor
dec
flds
cwtl
sub
in
jp
mov
pop
repz
jb
sahf
inc
lods
shrb
test
scas
pop
mov
jns
xchg
fidivs
mov
xchg
xchg
dec
cwtl
push
lods
repnz
mov
lahf
rcll
xor
sbb
jg
pop
mov
stos
dec
lret
adc
outsl
jle
adc
fistl
xor
pop
ja
std
jl
int
ret
sbb
xchg
shl
inc
rcrl
inc
popf
xor
loope
mov
in
call
sub
ret
pop
push
pop
jecxz
cmp
cmp
adc
notl
sub
lods
lahf
xor
fstps
test
fildll
jge
mov
lds
out
sub
push
sahf
pop
ja
xchg
outsl
xchg
xlat
rolb
xor
sbb
movsl
add
outsl
movsl
cmp
incb
fmull
lods
fistpl
dec
xchg
pop
sbbl
stc
mov
int3
dec
ficoml
pop
inc
daa
adc
int
jl
pop
inc
dec
dec
sub
xchg
test
lock
push
xchg
popa
jnp
repz
ja
lods
push
cmp
mov
jl
imul
sub
xchg
push
lods
pop
into
xor
xor
out
xlat
mov
and
adc
cmp
cmc
push
std
lcall
test
jle
sub
mov
lret
sbb
shll
insb
inc
inc
lret
pop
or
adc
push
pop
adc
in
sub
cmpsb
xchg
daa
jge
jbe
fxch
or
adc
aaa
cmpsl
inc
inc
outsl
adc
sub
scas
subl
push
lret
mov
ret
in
xchg
popa
xchg
jne
jb
inc
cld
and
outsl
jb
idiv
jmp
dec
cmp
sub
inc
call
cmpsb
popf
adc
loopne
lahf
mov
aaa
xchg
push
mov
scas
push
mov
add
iret
and
mov
cmc
xor
sbb
fsubr
jns
dec
jne
xchg
aas
test
sahf
pop
jb
int
test
cmp
ds
mov
js
iret
jg
hlt
cmp
outsl
aad
orl
lock
loopne
in
or
das
das
aam
fnstenv
dec
or
in
cmp
mov
push
pop
dec
xchg
insl
popw
mov
aam
sbb
adcl
pusha
jge
imul
xor
aas
aas
xchg
add
pop
sub
jle
pop
sub
aam
fcmovnu
fstp
cwtl
insb
pop
cmp
ljmp
pop
cli
mov
adc
sub
or
pushf
aam
sub
adc
xor
aas
push
xchg
inc
ljmp
bnd
data16
pop
cwtl
push
je
je
pop
lahf
pusha
mov
lods
test
add
dec
outsb
cmp
cmp
mov
cmc
scas
js
jno
jo
mov
push
cwtl
add
in
sahf
clc
xchg
sub
jnp
leave
push
xorb
fucom
pop
sbb
jbe
pop
cmp
xor
cmc
cld
popf
sahf
dec
test
popa
inc
bnd
cld
fldcw
lods
sub
cmp
or
mov
inc
dec
pushf
jb
or
mov
jge
or
xlat
jns
jl
ja
cli
out
or
fisubl
out
das
cmpw
dec
mov
push
inc
mov
and
out
inc
adc
mov
push
bound
in
xor
idiv
imul
aaa
mov
pop
aam
and
jg
push
adc
movsl
xor
lea
popa
xor
mov
jmp
int3
loopne
mov
fstl
xchg
in
adc
cs
cwtl
mov
mov
adc
mov
mov
shrl
inc
sub
cmp
addb
lods
xor
and
sarl
cltd
fnstenv
push
push
jg
push
fcomps
mov
xor
push
push
sbb
or
dec
lcall
pop
mov
or
and
push
out
enter
fmull
sub
call
lret
cmp
jle
fisubrs
fwait
subl
cmp
gs
sbb
xchg
repz
fcoml
cltd
add
and
rolb
test
mov
cmp
fldcw
mov
and
cmp
inc
add
popf
sbb
xchg
int3
dec
inc
negl
pusha
rcl
cmp
jecxz
jb
inc
jb
jge
lret
sub
and
pop
xchg
movsl
rcrl
jp
push
or
mov
scas
das
mov
push
cld
sbb
sub
cmp
fcoms
scas
sarl
sbb
insb
mov
xchg
sub
xor
push
xchg
pop
roll
gs
or
mov
cmp
adc
sbb
mov
push
jle
adc
pop
and
pop
mov
add
sbb
aaa
cmp
shrb
adc
push
inc
mov
and
mov
ret
inc
shrl
inc
xor
xor
test
sbb
cmp
repz
jg
xchg
push
in
mov
add
fwait
cltd
jns
jnp
mov
mov
adc
add
push
aas
test
xor
add
xchg
shrd
push
cmc
xchg
nop
add
repnz
pop
mov
ljmp
jg
xor
std
cmp
sub
or
mov
jne
inc
clc
xor
sbb
into
js
inc
and
rcl
repnz
or
xor
ss
jns
fimull
pop
insl
pop
repnz
mov
out
sbb
dec
jnp
mov
push
push
jle
es
out
sub
aad
in
jo
and
sub
mov
jmp
std
ret
rcr
xlat
sbb
jne
dec
and
mov
ljmp
shlb
aas
shll
jecxz
dec
add
clc
cmp
test
div
jo
mov
nop
cmpsl
xlat
cmc
mov
cld
sub
bound
popa
jno
or
inc
push
push
sub
sub
xchg
sbb
sbbb
lea
lret
lds
fs
jne
ror
jmp
and
icebp
fwait
outsb
xor
pop
nop
pop
xor
sub
ret
or
ss
arpl
cmp
cmc
repnz
call
das
inc
jbe
and
fimuls
xor
dec
inc
repz
scas
mov
insb
dec
js
int3
push
or
push
push
push
sti
jno
sub
outsl
xchg
test
cmp
cmp
pop
push
sub
cmp
insl
jno
xchg
mov
sbb
and
cmp
pop
xchg
lods
out
push
cli
push
in
shlb
push
adcl
test
sub
clc
xor
je
rcll
adc
xchg
pop
cld
pop
xchg
cmp
xchg
xor
iret
enter
incl
insl
jae
push
mov
or
inc
aas
lcall
ja
push
push
insb
iret
sub
adc
cwtl
popf
xrelease
notl
or
in
pop
dec
jecxz
push
cmpsl
vphsubbw
mov
pop
imul
ss
out
mov
or
testl
dec
popf
xor
xchg
push
jns
jbe
icebp
popa
cmp
pushf
loopne
movsb
js
repz
cwtl
popa
mov
jle
aad
sub
xchg
cmp
cmpb
outsb
inc
add
jb
pop
jae
adc
dec
fcmovb
mov
mov
mov
faddl
mov
xor
fs
xchg
and
ja
push
movlps
xor
xchg
into
fs
and
cmp
cs
fisubl
ljmp
mov
and
mov
bnd
movl
or
inc
sub
pop
mov
pop
cld
outsl
test
inc
aam
sbb
pop
mov
scas
lea
es
shrl
cmp
push
sub
cli
push
test
fmuls
mov
inc
push
movsl
pop
lds
loope
xchg
cld
stos
jge
pusha
jo
push
mov
or
inc
mov
jmp
das
jns
sbb
mov
jne
lret
jp
repnz
out
outsb
and
and
mov
mov
test
loop
mov
daa
cmp
xchg
cwtl
xor
cmp
xor
cld
adc
ss
jbe
shrb
mov
inc
jns
add
lahf
nop
call
lret
leave
jnp
add
out
fimull
loope
notb
std
pop
ds
ds
mov
push
movsb
movsb
lods
scas
lods
pop
inc
sti
filds
lahf
hlt
pop
xchg
fdiv
movsl
clc
mov
in
cltd
rorb
aad
sub
mov
push
xor
ficoms
mov
mov
rcl
dec
pop
pop
cmp
xchg
incb
ja
outsb
push
stos
adc
push
sbb
jmp
popf
maxps
mov
adc
pop
cmp
mov
test
jg
cltd
cli
andb
rcr
adcb
out
loope
xor
out
fnstcw
mov
push
push
lock
xor
jne
xor
sbb
aad
imul
xchg
cmpsb
insl
loop
sbb
pop
inc
push
jno
fucomi
dec
push
lahf
mov
bound
repz
dec
dec
xor
ja
divl
sub
stos
insb
gs
mov
sbb
cmp
lcall
cltd
adc
inc
jmp
out
inc
add
jle
sbb
dec
test
inc
mov
inc
mov
push
adc
jb
cmpsb
sub
jg
xchg
gs
int3
dec
jmp
xchg
push
fists
cmp
xchg
push
or
push
sbb
jns
push
and
daa
sub
mov
mov
inc
stos
adc
or
ret
in
mov
daa
aam
loop
xor
jge
jle
mov
jecxz
add
xor
add
xor
mov
decl
and
xchg
mov
and
repnz
fisttpll
mov
lcall
mov
aad
lods
fidivrl
and
xchg
inc
xor
cmpb
cs
jecxz
mov
fildll
stos
sbb
adc
jge
and
lods
cmp
ss
dec
enter
stc
push
stos
push
iret
xchg
or
inc
adc
clc
js
test
or
mov
inc
fiaddl
and
cltd
xor
ret
mov
test
xchg
inc
mov
sub
mov
or
cmc
adc
divl
repnz
fs
fwait
jmp
adc
mov
cmp
and
add
scas
and
push
pop
data16
cmpsb
dec
leavew
add
cmc
fnstenv
ss
andl
loopne
dec
xchg
mov
lds
add
cli
fdivrl
out
aaa
js
mov
lret
cmp
stos
ds
aam
ljmp
mov
aas
outsb
ficoms
fs
jge
aaa
or
les
fstl
cmp
xchg
mov
scas
mov
inc
jle
mov
push
sbb
stos
sub
addr16
stos
adc
pop
nop
dec
ret
adc
mov
stos
dec
nop
inc
jne
out
push
xor
in
cmpsl
aad
and
push
leave
inc
fsubr
cli
jae
push
mov
and
sbb
gs
ljmp
nop
xor
xorps
pop
xorb
or
push
jno
js
sub
inc
scas
jne
xchg
or
mov
pop
push
cltd
into
popa
rolb
or
xlat
adc
jge
mov
pushf
pop
pop
and
and
cmp
jne
imul
mov
jle
sbb
sbb
clc
lret
loop
adc
loopne
cmovno
cmp
inc
mov
dec
xor
and
aam
sub
add
outsl
fs
mov
inc
and
test
lds
add
jns
dec
fwait
popa
in
xchg
and
rol
push
ljmp
push
inc
es
lods
mul
in
dec
mov
sti
lea
repz
mov
pop
cmp
mov
dec
dec
inc
and
add
pop
mov
push
cmp
dec
movsl
std
inc
mov
les
jmp
pop
pop
xor
mov
int3
into
mov
imull
insb
jecxz
pop
sbb
push
sahf
stc
aam
les
lods
cltd
jmp
mov
jmp
pop
lret
mov
ret
fisubrs
xchg
in
mov
sbbl
push
mov
xor
mov
mov
movzbl
movsl
repnz
lock
cmpsb
inc
dec
imul
push
sub
push
push
out
shrb
arpl
jg
outsl
loop
hlt
mov
lcall
xor
sar
dec
mov
adc
inc
in
fwait
mov
ud1
cs
repz
repnz
loope
fucomi
mov
cs
repz
repnz
mov
call
lds
mov
fists
push
push
jl
aas
movsb
addr16
jge
dec
mov
mov
cmp
add
movsl
sub
aam
lcall
cmpsb
cmpsl
mov
cmp
jl
push
inc
dec
dec
test
or
dec
cwtl
or
insb
cmpl
std
ret
xchg
mov
inc
mov
fbld
shlb
sbb
push
pop
lea
imul
imul
and
addr16
pop
fdivrl
rcrl
mov
into
or
inc
fnstsw
cli
je
jmp
into
xchg
sbb
jb
aam
daa
stos
aad
sahf
jle
decl
mov
push
mov
imul
ss
cmpsl
aaa
jno
lea
or
pop
in
add
in
ss
bound
out
dec
cld
mov
cltd
push
out
mov
sbb
cwtl
dec
and
in
cmpl
sub
cmpl
sbb
xor
lcall
sbb
ds
pop
dec
xor
pop
mov
out
mov
movsb
pop
adc
xor
mov
rclb
or
sbb
sbb
loop
push
adc
adc
sub
add
fidivrs
pop
sahf
aam
push
add
dec
aad
sub
loop
repnz
gs
inc
dec
pop
jb
mov
sti
nop
sub
pusha
and
movsb
add
popf
shlb
lahf
int3
dec
lds
ljmp
cs
out
dec
lret
sbb
out
and
xchg
pusha
rol
push
jae
cmp
inc
jge
int3
int3
cltd
jae
loope
mov
ficoml
push
xlat
in
sbb
dec
or
iret
enter
repz
mov
cmp
enter
pop
cmpsl
sbb
mov
lret
sbb
push
inc
cli
dec
cmp
mov
push
lea
mov
dec
mov
insl
mov
sbb
mov
pop
cmc
ja
xor
bound
sub
and
sbb
inc
dec
pop
fists
sub
or
test
mov
mov
sti
push
stc
add
in
mov
xchg
cmp
out
rorl
int
hlt
inc
es
mov
inc
pop
cld
sub
test
cmp
pop
leave
jg
in
push
out
push
sub
pop
mov
test
jmp
bound
push
jbe
jb
out
and
int3
fwait
adc
clc
lods
mov
push
add
dec
or
push
mov
test
mov
addb
xchg
or
inc
mov
mov
adc
lods
rolb
push
test
xchg
stos
imul
or
ret
push
sbb
inc
idivl
fwait
add
stos
and
fldt
inc
cmc
cmpsl
stos
mov
jo
pop
fwait
sbb
clc
cs
sub
pusha
xchg
mov
shl
hlt
mov
lcall
into
jo
hlt
jns
dec
sub
call
inc
mov
scas
lds
in
inc
outsl
jae
imul
fnsave
or
in
and
icebp
out
dec
push
inc
repz
push
nop
sub
clc
insl
dec
and
test
xor
cld
arpl
ja
mov
test
jo
mov
jb
xor
cld
cmc
cmp
or
pop
popa
mov
add
das
jne
mov
xorb
ja
sahf
add
and
xchg
subl
inc
ljmp
popf
sbb
loopne
mov
adc
jns
aas
insb
jecxz
xchg
cs
std
cmpsl
inc
xchg
pop
pop
xchg
or
jb
jbe
cmp
xchg
in
movsb
dec
gs
or
cwtl
adc
push
out
push
push
ljmp
or
fildl
ret
pop
cs
aam
dec
mov
ljmp
jmp
popf
inc
sbb
pop
pop
rcr
mov
xor
and
test
or
lock
cmp
pop
inc
outsb
push
mov
jl
fwait
pop
inc
inc
hlt
nop
fmul
icebp
ss
repz
pop
cmp
scas
push
cltd
jb
rclb
movsb
sarb
push
fldenv
jge
clc
mov
out
shrb
cmpsb
leave
and
movsl
rcrb
outsl
cmp
sub
jns
pop
sbb
gs
adcb
dec
sarl
or
ret
push
push
dec
ficoml
test
xlat
cmp
push
pop
or
add
add
push
cltd
jle
dec
scas
scas
jge
inc
mov
xchg
cmp
push
jge
mov
push
imul
mov
adc
add
scas
lcall
sub
mov
int
mov
add
push
xor
and
iret
push
dec
pop
xchg
cwtl
mov
xchg
or
jno
xor
push
cmp
fdiv
test
push
push
js
cmp
sbb
fiadds
repnz
cmp
adcl
xchg
xchg
ja
leave
sbb
sbb
out
andl
data16
mov
aam
jno
pop
jns
mov
out
outsb
xchg
xchg
fs
cmp
push
gs
adc
pop
mov
fs
addr16
pop
int
aam
cltd
mov
jg
daa
jno
fcmovbe
jp
sub
movsb
inc
or
mov
ss
repz
les
mov
xor
xor
or
or
mov
jae
std
lcall
push
enter
jnp
push
repnz
pop
rcrl
push
daa
pop
lahf
xor
mov
dec
arpl
orl
xchg
or
test
out
dec
push
scas
mov
cmp
push
mov
cmp
adc
xchg
call
xor
push
adc
fistl
arpl
mov
sub
sbb
fsubrl
inc
xchg
inc
pop
lahf
ss
adc
test
ds
fwait
lret
add
xor
dec
mov
add
dec
loop
lahf
ret
jbe
mov
testb
cmp
xchg
sub
pop
sets
fmuls
jle
dec
or
int
jb
pusha
mov
in
cld
xchg
cltd
ds
sub
jp
insb
sbb
imul
mov
ljmp
rol
mov
jns
cmp
pop
cs
mov
mov
xor
xchg
pop
mov
insb
sub
push
imul
lret
pusha
cmp
sbb
and
push
mov
and
lods
std
fcompl
scas
push
clc
and
fstpl
scas
cmp
loopne
sub
jnp
cmp
dec
and
insl
jecxz
inc
sub
pop
inc
sbb
push
lods
pop
enter
icebp
jbe
push
sub
pusha
mov
hlt
or
push
xchg
adc
mov
mov
inc
insb
out
out
inc
sub
inc
sub
or
xor
mov
sub
into
inc
aas
adc
repz
pop
in
pusha
mov
cltd
fistl
fwait
inc
in
out
mov
push
cli
subl
and
in
loopne
imul
js
cwtl
add
xor
and
mov
mov
in
adc
out
fdivs
sub
mov
and
and
cld
dec
popa
add
pushf
cmp
icebp
cmp
shrl
adc
fs
sbb
jmp
scas
imul
fmul
mov
pushl
mov
repnz
jo
add
popf
sub
push
scas
pop
or
movsb
pop
or
fdivrl
pop
outsl
imul
xor
int3
loop
sub
add
or
fsts
out
adc
jnp
jg
pop
adc
push
pop
mov
stos
arpl
sbbl
and
nop
add
fmuls
aas
xchg
inc
mov
jbe
fimuls
adc
lea
and
repnz
test
out
cmp
mov
pushf
rcrb
inc
adc
pop
or
test
aas
cld
movsl
pop
and
bound
push
es
add
inc
clc
and
orl
out
or
imul
mov
popf
inc
xor
dec
movsl
outsb
imul
inc
cmp
xchg
shll
xchg
ja
lods
jge
jae
fiadds
or
out
lds
imul
jb
sub
es
movsb
es
push
cli
daa
or
nop
mov
mov
rclb
pop
mov
stos
imul
and
outsb
leave
out
pop
xlat
mov
mov
pop
xchg
shll
test
jl
enter
testl
adcb
enter
mov
outsb
dec
stc
cmp
xor
into
roll
xchg
loopne
mov
add
fcmovne
xor
mov
aas
sti
mov
jp
inc
dec
lock
sbb
jbe
daa
hlt
ss
leave
lahf
inc
push
xorl
jbe
fldl
sar
pop
adcl
pop
jno
xchg
ss
dec
filds
pop
aas
pop
jb
push
pop
out
push
sub
push
jmp
xchg
push
dec
ss
aad
adc
and
jge
repz
in
pop
add
mov
or
subb
imul
xor
cs
sub
cmpsl
mov
cli
dec
dec
lods
js
push
call
jo
and
out
cmpsb
cltd
cltd
cmp
notb
imul
fstpl
dec
or
subb
mov
mov
xor
mov
mov
imul
jno
data16
cmp
icebp
inc
jne
jb
jp
adc
sub
lea
push
out
out
ljmp
ds
sub
xor
mov
stc
in
add
loopne
aam
nop
cltd
mov
scas
outsb
push
ret
loope
adc
cltd
sbb
stos
jo
fisttps
sub
fidivs
lock
out
scas
mov
in
pop
xor
sbb
movsb
cs
mov
subl
js
mov
push
mov
add
dec
std
dec
daa
mov
xchg
cmpsl
int3
dec
xchg
clc
cld
aam
cmpsl
xchg
stos
lods
popa
test
incl
xor
jecxz
das
pop
adc
jno
in
inc
and
xchg
adcb
pop
and
cmp
or
je
int
ds
xchg
out
mov
inc
mov
sub
adc
call
push
roll
mov
jecxz
out
mov
je
loop
cmpsl
pop
ss
sub
xchg
out
and
test
jecxz
jl
shr
test
nop
testb
dec
jno
cmp
add
mov
in
dec
lods
leave
insb
pop
int
notb
jbe
mov
mov
mov
or
mov
addr16
add
mov
in
xchg
fisttps
cmc
ljmp
in
and
iret
stos
jge
adc
add
imul
ds
orl
in
mov
movsb
mov
sbb
adcb
mov
movsl
fs
mov
sete
xor
xor
sub
test
aaa
jb
add
fcomp
cmp
cmpsb
sub
outsb
stos
mov
jb
dec
push
xchg
cltd
rolb
lcall
push
or
xlat
jns
cmc
das
js
cld
add
jp
push
and
xchg
loope
cmc
aad
test
aaa
push
in
mov
fsubrp
sahf
je
dec
cmpsl
rorb
xchg
sub
pop
imul
mov
repz
push
jns
pushf
xor
ss
xchg
mov
fsubrl
xchg
sbb
mull
in
fsubr
dec
inc
loop
out
adc
xor
lods
mov
push
inc
jbe
rol
inc
lods
push
xchg
and
adc
cltd
movsb
xor
mov
sbb
repz
and
xlat
jp
test
dec
rcrl
sahf
mov
testl
mov
aam
push
daa
addr16
sub
add
and
xor
outsb
mov
je
mov
add
add
push
ja
adc
or
jbe
dec
je
nop
enter
jae
cmpsl
movsb
dec
sbb
sub
sar
rcr
cmpsl
or
aam
adc
mov
shlb
push
mov
xchg
cmp
outsb
push
lods
mov
xor
icebp
js
pop
xchg
mov
ret
daa
popa
push
and
lret
mov
cltd
sbb
xchg
pop
jae
addb
loopne
aas
sub
out
loopne
icebp
jne
fwait
out
add
push
pop
cli
push
push
pop
mov
mov
add
dec
mov
push
push
mov
mov
dec
xchg
fsubp
imul
jb
pop
iret
mov
and
pop
and
mov
std
xchg
or
loope
ja
addr16
mov
inc
cmp
pop
sbb
push
pop
fdivrl
add
repz
sub
ja
js
jl
xorl
sub
cmc
pop
xlat
repnz
cs
shrb
je
shlb
fs
cmp
pushf
mov
sbb
cmp
and
dec
stos
sub
mov
sahf
ja
add
xchg
pop
aam
lods
pop
xorl
into
in
dec
jnp
movsb
jno
fidivs
jne
scas
lds
mov
jg
mov
loop
adc
and
loope
fisubs
or
into
push
sbb
out
and
cmp
mov
aam
jg
xor
inc
and
lahf
inc
jns
test
xchg
dec
movaps
gs
cmp
in
xchg
and
sbb
fcoml
int3
jne
icebp
in
aam
cmp
das
popa
cmp
push
test
sbb
das
adc
xchg
cwtl
ljmp
int
add
push
shl
dec
scas
inc
cmc
mov
popa
mov
or
fs
vpsubq
push
mov
in
mulb
sub
dec
pushf
js
jb
fs
push
xor
data16
cs
and
mov
mov
loope
sbb
ret
add
ds
mov
jecxz
jg
mov
xchg
xor
cmpsb
and
je
test
push
sub
xor
xchg
pop
lret
mov
ror
stos
es
mov
pusha
scas
bound
dec
add
fwait
xor
push
or
bound
push
inc
imull
lods
mov
pop
sti
jne
sbb
jmp
imul
shlb
repz
lahf
arpl
jmp
adc
mov
enter
or
push
mov
ret
rcrl
stc
js
cs
jno
mov
pop
pop
mov
stos
fsubrs
fcompl
insl
mov
xor
daa
sbb
cmp
fbld
xchg
sub
fwait
das
std
movsl
mov
and
daa
js
xchg
cmp
cli
or
nop
out
dec
roll
or
adc
pop
adc
dec
test
les
or
xor
dec
imul
aaa
jns
sub
into
es
test
push
movsb
mov
dec
loopne
add
mov
fiadds
out
enter
dec
popf
sub
outsl
cmp
sbb
fmuls
fcomi
int3
jecxz
enter
inc
jp
inc
add
stos
cmp
dec
adc
add
mov
push
dec
jg
bound
call
inc
pop
sub
pop
clc
pop
sub
rcrb
inc
bound
shlb
mov
push
ljmp
cld
xor
jmp
imul
clc
icebp
jns
loopne
jp
add
call
inc
idivb
adcl
mov
cltd
dec
pop
test
ret
in
cltd
test
xor
setb
in
or
leave
jl
es
cli
pop
icebp
adc
cli
mov
shrb
es
sub
or
pop
sub
inc
adc
dec
add
mov
xor
and
mov
pop
lods
loop
cwtl
mov
bsr
or
test
std
out
lods
dec
jne
mov
test
lcall
jg
push
mov
test
jo
imul
cmpsb
das
fmuls
les
push
mov
adc
lret
inc
dec
and
pusha
mov
pop
xor
nop
aas
adcl
sub
pop
mov
mov
mov
push
adc
enter
addl
insl
iret
dec
je
and
cmp
push
pushf
mov
adc
push
sets
ds
ljmp
popf
cmpsb
xor
and
fcmovne
hlt
jg
pop
xor
sub
rclb
jg
dec
into
or
shrl
inc
jb
push
mov
aaa
ja
loope
dec
xchg
or
arpl
int3
int
adc
and
fnstsw
shlb
pop
in
loope
lea
rol
fldt
movsb
jmp
shll
ds
xchg
aad
stc
scas
inc
aad
and
mov
jmp
mov
test
shr
mov
mov
mov
push
add
mov
sub
push
xor
arpl
xchg
mov
sbb
pop
js
aam
xchg
frstpm(287
mov
into
pop
cs
pop
imul
mov
mov
fdivl
or
shll
sbb
mov
mov
popa
shlb
mov
in
faddl
xchg
push
stos
mov
or
fldenv
or
nop
lret
pop
aam
push
inc
and
inc
mov
adc
mov
mov
or
or
arpl
xor
sub
roll
shlb
and
scas
aam
mov
adcl
push
add
sub
inc
out
sbb
lcall
sbb
lods
aas
mov
mov
loopne
out
inc
xlat
mov
push
push
aad
add
or
in
data16
movsl
icebp
xchg
mov
and
adc
cmp
inc
ret
pop
and
mov
adc
aad
mov
mov
mov
lahf
int3
inc
lret
fstpl
mov
testl
fcmove
pushf
cmp
rcr
adc
add
xor
negl
movsl
cmp
fwait
mov
mov
or
fnstsw
xchg
xorb
scas
sbb
push
mov
jmp
sub
ret
mov
imul
cs
push
pop
in
test
popf
sbb
lods
testb
cmp
in
scas
jge
dec
das
mov
jbe
xor
stc
das
xor
push
fimuls
icebp
xchg
stc
sbb
xor
pop
fidivrs
hlt
sbb
in
mov
lret
mov
mov
mov
ret
adc
out
jl
add
xor
test
pop
push
and
gs
push
mov
test
mov
pusha
push
sub
push
out
shrl
std
adc
ja
lods
push
dec
out
icebp
or
and
aas
loop
icebp
lods
sbb
push
sbb
or
mov
call
orl
mov
add
test
repz
hlt
repnz
push
mov
xchg
mov
jns
test
or
out
fmul
jb
jno
pop
sbb
outsb
and
int3
repz
movsl
icebp
in
adc
fidivrs
lock
lret
xchg
test
dec
dec
sti
lea
pop
add
ret
and
mov
inc
mov
sbb
loop
xchg
das
cmp
out
dec
push
dec
cmpsb
daa
fsub
lds
sar
gs
pop
int
adc
cmp
add
fdivs
inc
roll
mov
dec
out
adc
daa
sub
pop
fmul
addr16
stc
shll
xchg
mov
inc
fmulp
cmp
dec
xor
ljmp
dec
pop
stc
ret
or
mov
iret
les
mov
aaa
push
xchg
lock
clc
loopne
cs
mov
dec
push
xor
aam
scas
out
jg
sti
daa
scas
in
call
lds
fists
pop
pusha
inc
jmp
imull
inc
hlt
mov
push
arpl
dec
mov
std
dec
cmp
mov
xchg
dec
popa
jbe
das
ja
adc
and
pop
lahf
push
ds
lods
add
repz
or
rcll
push
fimull
popa
dec
mov
dec
jb
and
out
leave
cmc
adc
repz
imul
pop
mov
rcrb
jne
dec
xor
push
push
inc
mov
mov
out
and
jo
scas
pop
sbb
cmp
jmp
mov
mov
push
pop
enter
mov
into
add
movsl
hlt
mov
aas
adc
jb
mov
stos
adc
scas
push
fcomps
in
mov
out
xchg
mov
xchg
push
mov
dec
dec
inc
sahf
mov
scas
and
push
xor
addl
cli
cmp
add
gs
jo
push
cmpsl
popf
out
sbb
dec
dec
mov
or
add
push
cwtl
dec
and
ja
stos
fidivrs
cmpsl
mov
shrb
pop
push
repnz
push
decb
xchg
sub
adc
es
mov
push
or
mov
jmp
fsubs
imul
cmp
mov
movsl
pushf
pop
push
inc
shl
mov
push
pop
in
stos
jae
out
push
adc
dec
repz
inc
xor
jnp
add
js
xchg
in
sub
aam
stos
popa
push
xor
lods
ss
mov
es
dec
inc
mov
in
cmp
int3
call
adc
sub
repnz
aam
adc
jecxz
jge
dec
add
aas
xchg
inc
jb
or
or
mov
mov
push
outsl
jecxz
mov
and
scas
xchg
das
add
xchg
jp
scas
nop
cli
in
pop
lcall
sub
pop
push
push
aad
mov
pop
inc
xor
std
fld
lret
fistpll
jg
stos
pop
push
fimull
and
stc
dec
xrelease
adc
push
push
movsb
dec
shrl
or
pop
sub
les
and
jno
lret
cmp
jns
mov
pusha
movsb
scas
push
xchg
adc
pusha
cld
mov
repz
or
add
fiadds
push
mov
cltd
test
sub
xor
and
loopne
movups
push
push
fstps
push
stos
or
xor
pop
add
pusha
cmp
in
popl
or
cs
push
pop
outsb
test
loopne
mov
call
leave
mov
fdivl
or
popa
mov
pop
and
mov
mov
lcall
mov
fsubrp
or
lahf
test
repz
aas
and
sbb
js
pusha
lret
ljmp
mov
stos
pushf
cmp
daa
push
stc
or
pop
xchg
jo
push
sbb
div
add
outsl
or
push
decl
leave
clc
out
repnz
dec
ds
insl
aas
pop
jge
mov
lds
out
stc
mov
push
inc
and
cli
in
cmc
xor
cli
lret
dec
ficoml
push
push
adc
mov
into
popf
fwait
push
cmp
mov
ljmp
cltd
iret
add
jl
sbb
push
iret
mov
push
imul
dec
cmpsb
imul
xlat
cmp
mov
adc
in
outsb
loope
test
cmpsb
fs
lret
adc
mov
jecxz
ss
into
insl
aad
add
ss
movsb
xor
xor
inc
in
mov
loope
mov
sbb
cmp
dec
jg
scas
dec
hlt
push
xchg
mov
aaa
cwtl
cmp
cli
out
dec
ret
pop
jmp
or
mov
push
mov
leave
mov
jns
mov
cmp
lock
inc
mov
add
addb
push
dec
lods
add
jns
pop
imul
and
test
push
inc
rolb
add
mov
push
fwait
test
xorl
notb
popa
not
enter
xor
inc
jmp
push
mov
push
sbb
ss
xor
lds
mov
cmp
repz
dec
and
in
arpl
fidivl
inc
std
inc
mov
inc
into
repz
scas
lret
xchg
mov
ror
ret
push
xor
dec
les
mov
cmpl
sbb
gs
hlt
cmpsl
mov
inc
fs
std
cld
mov
mov
jno
dec
les
into
andl
inc
mov
popl
pop
cmp
stc
in
mov
add
out
cli
cmp
sbb
mov
fcomip
pop
inc
cmp
fwait
scas
fdivl
xor
stos
ret
lcall
dec
cmp
clc
xor
clc
mov
jne
push
xchg
test
cmp
mov
inc
rcll
rol
inc
ljmp
scas
aad
cwtl
andb
jp
jmp
faddp
sbb
das
sbb
add
rorb
sbb
lock
je,pn
andl
clc
cli
adc
jo
add
dec
or
ret
js
jmp
call
cld
aam
pop
mov
int
sbb
jg
fcomip
loop
sub
in
push
adc
push
cmp
mov
add
fs
xor
cld
mov
adc
insb
lahf
or
mov
push
pop
mov
ljmp
cld
inc
push
jne
push
xor
pusha
ljmp
and
cli
in
in
mov
sti
mov
push
fldcw
mov
mov
rolb
dec
clc
popa
inc
mov
lods
lret
inc
lods
cmpsl
insl
mov
les
xor
rcpps
ss
pusha
add
clc
faddl
add
mov
mov
test
cmp
loope
pop
out
and
pop
push
jo
sub
inc
fcompp
inc
lea
out
insl
test
leave
sub
ss
movsl
jecxz
shrl
and
outsb
fmul
inc
dec
push
and
adc
mov
and
fwait
sbb
or
stc
test
sub
gs
adc
jb
jns
out
test
fidivrl
je
push
mov
inc
cmpsb
xor
mov
les
hlt
stc
and
sarl
nop
xchg
jecxz
pop
xchg
mov
cmp
adc
or
jmp
dec
or
cmp
cmp
pusha
lods
call
aaa
cmpsl
lods
inc
dec
es
mov
testb
jb
ret
inc
or
sub
add
or
adc
push
jb
int3
ds
enter
addl
ss
fiaddl
sbb
les
pop
aas
pop
dec
push
lret
fs
out
stos
dec
movsl
in
hlt
mov
lods
xchg
mov
adc
imul
push
outsl
push
out
jno
jge
cmp
and
je
lea
dec
addb
mov
scas
out
jmp
cltd
mov
bswap
insl
int3
outsl
or
push
aaa
xchg
lea
lods
cmp
mov
nopl
out
xor
pop
inc
mov
pop
push
adc
xchg
adc
and
das
bound
inc
ret
mov
int
cmp
in
xchg
addb
dec
mov
aas
dec
mov
add
cmp
pop
jne
mov
add
sahf
and
dec
pushf
lods
std
jo
jecxz
jge
fists
cltd
dec
or
movsl
out
cwtl
push
sbbl
repz
je
nop
add
out
adc
cmc
xchg
pop
sbb
outsb
add
mov
popf
aad
fisttps
es
int
mov
movsb
add
push
inc
mov
adc
jnp
lds
call
out
mov
push
and
jo
xchg
cmp
popl
add
out
data16
arpl
jl
xchg
test
loopne
or
push
jmp
sub
rorb
ret
sub
mov
cwtl
sti
scas
popl
xchg
mov
push
cmp
cwtl
adc
aas
jmp
sarb
les
bnd
mov
push
clc
dec
es
cmp
mov
daa
pusha
mov
inc
lret
popa
call
roll
cmp
xchg
cmpsl
jne
and
pslld
sar
or
sub
adcb
adc
lcall
add
into
lock
ljmp
dec
clc
addl
xchg
movsl
les
rcrb
push
jge
add
cltd
xchg
push
or
mov
mull
push
jo
jp
push
loopne
mov
lret
sub
mov
lahf
mov
dec
cmc
xchg
xlat
cwtl
test
push
pop
mov
jnp
cltd
mov
mov
pushl
inc
nop
push
mov
push
mov
mov
mov
jae
or
repnz
mov
sbb
lods
push
addr16
push
nop
dec
jg
push
pusha
inc
adc
jp
pop
fidivrs
in
cmc
js
jg
sbb
mov
add
sbb
fs
push
loopne
and
sbb
fwait
movsl
and
add
inc
fs
pop
pop
int3
outsb
stc
fildl
lahf
sbb
add
rcrl
dec
lret
cmp
outsl
mov
push
fsts
push
jle
or
iret
jb
add
stos
lcall
ficompl
insb
adc
sbb
mov
data16
out
int
mov
jb
xchg
jae
or
das
jp
or
scas
cmp
enter
push
in
movsb
stos
inc
jl
xor
clc
push
mov
mov
xor
pop
xchg
cld
sbb
mov
std
adc
aam
insl
jne
inc
subb
push
mov
outsl
cmpsb
jmp
jle
jg
sahf
lea
xchg
add
mov
sub
cmpsl
adc
popa
mov
mov
and
adc
xchg
fcomp
inc
and
dec
sbb
imul
loopne
and
gs
gs
jo
xor
cmp
loop
add
cwtl
mov
pusha
lods
pop
or
shl
outsb
and
xor
paddd
xchg
lds
testb
mov
sbb
sub
jns
pop
lret
fisubs
pop
ds
ffreep
xorb
jns
and
xor
pop
sbb
outsb
sub
add
pop
inc
xchg
and
gs
loopne
ret
out
stc
sbb
xchg
in
sbb
fsts
fimull
jmp
pop
mov
push
loopne
push
mov
jns
pop
xchg
in
cmpsl
lods
or
or
add
pop
adc
xchg
mov
stc
jecxz
cs
pop
xor
dec
push
call
xchg
mov
test
adc
jo
or
clc
stos
jecxz
fcoml
call
int
jp
push
daa
bound
lods
arpl
mov
push
in
lds
mov
mov
movsb
push
and
lret
fwait
mov
mov
test
insb
insb
stos
mov
mov
xchg
icebp
cmc
fldl
in
push
test
cmp
adc
rorl
outsl
xor
jg
insw
ret
adc
movsb
add
fwait
pop
add
jl
pop
or
mov
ja
into
push
mov
add
sti
sbb
scas
mov
mov
push
jp
mov
mov
ss
mov
roll
enter
aam
std
adc
cmpb
jns
cli
push
add
mov
adc
sbb
and
sti
fldl
jecxz
pop
das
mov
sahf
enter
xchg
xchg
xchg
roll
adc
push
and
jne
popf
xor
mov
nop
dec
jbe
ss
add
jb
xor
inc
dec
mov
push
mov
xor
loop
jns
ljmp
iret
int3
sbb
cs
add
adc
pushf
inc
repnz
subb
jp
lret
mov
popa
adc
test
jne
push
arpl
and
mov
lock
jl
faddl
push
xor
pop
pop
inc
mov
jne
lods
jns
imul
sub
mov
hlt
dec
fisttps
sbb
rcrb
sahf
jmp
aam
jne
and
rclb
lret
mov
js
and
push
icebp
jbe
push
ret
mov
fbstp
cmc
fucomip
mov
arpl
sbb
adc
subl
add
fcmovb
dec
enter
and
ss
add
in
xor
ljmp
stc
cli
mov
cs
mov
adc
fadds
call
sahf
jb
sub
out
fisttpl
sub
mov
add
jbe
daa
jg
loope
stc
test
xchg
jle
mov
cli
out
test
or
insb
jb
mov
sarl
inc
fwait
push
in
loopne
push
mov
inc
in
dec
hlt
jb
pushw
cld
lret
jp
xchg
loope
dec
cmpsb
testb
and
cmp
cmc
leave
mov
inc
int
icebp
fnstenv
ja
mov
mov
sub
negb
inc
fistl
das
inc
xchg
fcoms
andb
test
push
movsl
mov
or
bnd
adc
sub
iret
sub
inc
repnz
daa
test
cld
sbb
sub
push
scas
xchg
jmp
stos
hlt
mov
fsubrs
pop
loope
roll
mov
push
mov
mov
aaa
fsubs
cmpb
ds
fucomip
lock
sbb
testb
inc
xchg
fdivl
inc
out
sbb
dec
mov
push
push
out
mov
outsb
loopne
sbb
jmp
test
jne
jne
xchg
xor
xor
enter
and
sahf
or
xor
adc
pop
sti
dec
test
lods
add
inc
rcr
cltd
cwtl
sub
mov
mov
dec
mov
popa
out
or
adcl
fs
dec
mov
cmc
pop
dec
adc
loope
pop
sub
add
loop
jnp
mov
mov
inc
test
arpl
pop
lret
icebp
pushf
dec
or
ficomps
xor
sbb
cmp
and
and
int3
or
jp
mov
shl
push
imul
mov
dec
push
fld
test
xor
leave
mov
jb
and
sub
insl
sbb
adc
insl
inc
sbb
fistpll
lret
jmp
loope
lds
cmp
aaa
jbe
cmp
into
jne
je
xchg
insl
sbb
divl
pop
pop
inc
mov
xchg
subb
pop
jne
push
or
sub
nop
add
mov
mov
mov
sbb
dec
sbb
movsb
mov
lahf
js
andb
stc
or
sub
enter
push
jp
mov
and
dec
and
xor
icebp
push
or
jbe
aas
push
fwait
push
inc
adc
lods
mov
mov
aam
sub
sub
adc
xchg
jns
and
add
jne
dec
and
fs
mov
outsl
es
in
mov
dec
incb
cmp
in
ljmp
les
mov
cld
mov
test
sti
or
inc
cmp
inc
mov
cld
dec
inc
sub
cmpsl
fisubs
jae
sbb
outsl
movsb
imul
xchg
push
inc
movsb
outsb
cmp
ljmp
push
je
mov
fistl
sub
add
cmpsl
xchg
inc
jnp
cmpsl
xchg
dec
xor
ret
jmp
inc
pusha
adc
in
mov
mov
addr16
loopne
sbb
shrl
mov
mov
das
mov
mov
adc
xchg
xchg
add
pop
aas
rorb
adc
jno
inc
das
js
fndisi(8087
sub
fstpl
jl
mov
mov
scas
insl
mov
xchg
mov
add
lods
int
xor
pop
pop
ss
rclb
negb
and
adc
dec
xor
inc
fsubrl
dec
sub
inc
pop
aad
test
xor
pop
pop
movsb
push
cmp
sbb
or
hlt
repz
iret
hlt
lods
inc
hlt
fisttpl
loopne
dec
inc
sbb
or
push
cs
pop
lods
xchg
xchg
adc
cmp
shrb
imul
je
inc
push
or
xor
cmpb
sbb
or
sahf
in
and
fnstenv
je
add
inc
inc
enter
stos
pusha
test
pop
pop
in
pop
sbb
ja
ret
xchg
arpl
enter
test
pop
mov
mov
loope
adc
adc
jo
cmp
mov
cwtl
jmp
shlb
xor
lods
lahf
scas
cmp
push
xchg
pop
xchg
pop
bound
and
lahf
push
ljmp
cmpb
and
in
roll
cwtl
stc
in
xchg
add
jae
fwait
cmp
pop
in
lock
and
inc
jno
je
and
out
or
in
pop
nop
or
pop
xchg
inc
xlat
mov
push
mov
cli
pop
fsts
loope
pop
clc
lods
dec
mov
daa
mov
xchg
jl
sub
mov
xchg
cmc
bound
cmp
fs
pop
pop
lock
mov
lock
cmpsb
clc
or
loopne
mov
add
mov
daa
jb
rorb
mov
mov
aam
fadd
std
ss
mov
shl
aad
xor
hlt
call
sbb
xor
or
inc
popa
sub
push
sub
jge
push
mov
rcrl
pop
xor
pop
call
sahf
cltd
mov
cmpsb
add
xor
pop
jbe
xchg
repnz
enter
in
sub
fisttpl
pop
mov
sub
jle
mov
out
lret
inc
ja
les
mov
sti
cwtl
addl
or
xor
add
jno
mov
sub
jl
cmp
cwtl
in
aam
lea
inc
sbb
sti
inc
rcrb
sbbl
loopne
push
ja
xor
mov
sbb
and
jp
fsub
xor
jb
in
adc
jo
push
fnsave
push
lcall
aas
pop
fucomp
inc
cs
fsts
xor
sbb
jne
mov
decb
lahf
dec
lea
psubusw
push
fcmovu
das
rorb
test
cmpsb
jp
sub
test
jle
dec
cmp
dec
fstpl
sbb
adc
popa
inc
mov
dec
scas
insb
xor
stos
insb
add
pop
adc
push
js
xor
jge
push
inc
xor
rcrl
sbb
fcoms
hlt
jg
push
data16
and
xor
fldl
and
pop
cmp
aad
push
inc
mov
xchg
ds
and
mov
aad
or
rcll
mov
iret
xor
add
hlt
call
and
jno
mov
xchg
pop
in
and
jl,pt
mov
push
popa
aas
and
pop
xor
repnz
je
ljmp
push
mov
and
mov
inc
xchg
add
mov
mov
pop
jbe
incl
out
xor
mov
or
hlt
cmpsl
jbe
je
sub
xor
push
std
test
jae
jecxz
cmp
in
fxtract
add
cld
mov
std
add
imul
and
pop
push
testl
loope
ret
xchg
lods
sub
movsl
cmpsl
push
or
jns
jg
cmc
test
test
inc
push
stos
cmp
cmp
adc
addr16
cmp
sub
shrl
jg
or
push
shlb
mov
pusha
mov
adcb
in
add
push
addl
pop
jne
lret
lods
sub
sti
or
jo
dec
or
mov
push
in
enter
jne
or
dec
rcll
jns
insl
add
xlat
dec
sbb
enter
pushf
jecxz
stc
jbe
cs
and
mov
testb
jns
or
ret
fists
jns
adc
add
sarl
add
sub
js
into
inc
stos
fidivrl
sub
mov
dec
mov
cmpsl
xor
loope
adc
adc
std
mov
add
cld
add
push
stc
andl
cltd
jns
test
cmp
insl
insb
xor
ss
fs
push
outsl
inc
mov
jl
icebp
lock
jb
shrb
cwtl
dec
push
xchg
das
fwait
div
xor
outsb
xchg
inc
les
push
sti
movsl
push
sbb
jbe
les
xchg
sbb
jmp
cmc
repz
mov
stos
popf
adc
fnstenv
lret
js
adc
mov
outsl
jmp
pushf
adc
mov
adc
clc
mov
mov
xor
aad
cmpl
push
xchg
dec
adc
in
test
mov
fstpt
fstpl
pop
xchg
jns
jb
xchg
and
mov
or
sub
hlt
popa
sbb
mov
outsb
loope
repnz
inc
jne
fnstcw
add
push
pop
xchg
mov
sar
cld
mov
cmp
les
jno
push
std
adc
mov
sub
punpcklwd
push
adc
jecxz
aaa
cwtl
mov
fs
xchg
fs
push
mov
mov
jne
addr16
mov
pop
xchg
and
fsubrs
lret
pop
sub
cmp
cmp
or
dec
bnd
dec
add
pop
or
sbb
add
push
loop
mov
dec
mov
out
sarl
outsl
pop
sbb
shr
ret
mov
stos
fnstenv
mov
push
push
int
sbb
xor
stc
and
jp
xchg
jp
mov
leave
aaa
pop
mov
or
dec
inc
inc
pop
dec
shrb
clc
pusha
mov
lods
in
cwtl
out
push
bound
icebp
sub
scas
xor
call
out
pop
pop
or
stos
ficompl
jno
jae
adc
lret
shll
test
popf
test
aam
mov
sbb
jne
sarl
sub
mov
cmc
pop
fiaddl
jae
imul
scas
jp
jg
jno
lret
pop
mov
xor
jnp
in
fcom
pop
mov
mov
pop
add
pop
outsb
mov
or
jge
test
sbb
arpl
rcrb
rcrl
cmpsl
lods
xor
fwait
push
lahf
xchg
movsb
push
iret
mov
dec
cli
iret
pop
out
sbb
inc
cmp
push
xorl
into
push
test
cmp
push
or
xchg
repz
xchg
lods
adc
bound
aas
inc
mov
loop
dec
addr16
dec
push
insl
fistpll
lcall
fists
lcall
dec
pusha
jbe
push
orb
fisubl
mov
cli
lcall
xchg
jb
pop
loopne
cmp
sbb
sub
mov
xor
pop
cmp
mov
les
lret
repnz
out
add
fstpl
dec
xor
cmc
leave
inc
out
jl
or
mov
subl
js
shr
sub
arpl
and
test
add
xchg
jns
iret
das
mov
jns
movsl
stc
outsl
jns
int
lods
clc
iret
popa
sarl
dec
xchg
shr
int
je
add
aas
pop
cmc
sbb
test
subb
cmp
jmp
in
pusha
rorl
jge
stc
pop
rol
and
lret
leave
mov
push
jne
shl
push
add
adc
lods
es
jle
iret
stos
lcall
inc
jmp
inc
mov
loop
pop
shl
sub
aaa
jae
iret
out
jne
pop
inc
clc
or
test
rcll
xor
xchg
in
dec
sahf
xchg
sahf
add
out
loope
adc
dec
rcrl
cs
add
push
sub
ret
or
mov
mov
out
pop
dec
scas
lret
stc
cld
enter
pop
addl
jl
fcmovnu
out
mov
mov
fists
cmp
lahf
repnz
mov
vmread
pushl
lds
loope
scas
xor
aas
loop
pop
pop
add
in
andb
daa
repnz
jns
or
mov
enter
push
ljmp
in
mov
mov
lds
mov
js
inc
inc
outsb
push
sbb
or
lret
fsubr
cmp
idivb
sub
xchg
cli
fsubl
ljmp
mov
movsb
jmp
xor
rorl
cmp
sbb
jo
outsb
daa
ret
es
mov
mov
imul
cmp
fwait
mov
aad
fmul
movsb
aas
push
push
in
cmpsl
cld
pop
lret
into
ss
pop
shr
ljmp
cmp
cmc
out
das
les
xor
sbb
fisttps
test
and
mov
cmp
push
in
push
inc
pop
ljmp
sub
ljmp
loop
xchg
jge
mov
es
jmp
pusha
sub
lret
nop
sbb
addr16
jo
loop
imul
jp
es
int3
cmp
int
js
fdivr
scas
dec
scas
test
xlat
lods
push
repz
jge
sarl
in
mov
mov
insl
inc
mov
mov
mov
je
sub
stos
sbb
cmpsb
jmp
js
arpl
cmp
cmpsb
push
xlat
jge
dec
pop
mul
or
test
cmp
out
jno
into
rorl
inc
mov
dec
sub
lods
cmp
push
inc
gs
mov
bound
stos
ror
xchg
fiaddl
inc
lods
push
inc
fdivl
ss
call
je
clc
pop
xor
ret
push
jae
pop
push
out
add
sub
fs
sbb
mov
inc
adc
inc
adc
mov
outsl
popa
inc
sbb
outsb
shlb
sbb
sbb
lock
rolb
fcmovu
sbb
loope
addl
mov
push
jmp
int3
inc
shl
cmp
sub
sarb
in
lods
repnz
lock
pop
das
cld
xchg
inc
pop
pop
push
scas
dec
popa
sub
cmp
dec
cmp
cli
cmpl
imul
and
xchg
pusha
insl
bound
xchg
push
mov
xchg
mov
pop
xor
jg
negb
push
mull
inc
cli
cwtl
inc
mov
js
dec
fucomi
mov
sub
jmp
pop
push
mov
popa
push
ret
push
mov
arpl
sahf
adc
cmp
xchg
pop
push
stos
lea
or
shlb
data16
mov
xchg
iret
out
cld
sub
shll
pushl
push
cmp
je
icebp
iret
dec
mov
int
adc
pop
xchg
jle
xor
arpl
ss
and
popa
test
and
add
adc
sub
mov
test
icebp
xchg
cmp
jl
ljmp
dec
pop
fildll
mov
or
je
rcr
sbb
jbe
add
pop
and
lock
iret
sub
xor
dec
cmpsl
sbb
and
inc
lahf
imul
jmp
sub
aam
stos
out
pop
push
and
dec
inc
lds
pop
cli
fisubs
add
push
fs
jbe
pop
mov
dec
lahf
adc
or
je
rcl
mov
adc
pop
pop
jg
lods
or
mov
andb
jne
jb
add
movsl
mov
ja
fcmovbe
inc
shlb
insb
add
scas
mov
icebp
rcrl
xchg
test
into
push
jo
xor
ss
jge
lock
test
xor
sbb
cmc
repnz
dec
xchg
sbb
lds
dec
inc
pop
sbb
or
neg
jle
jb
adc
icebp
mulb
out
pop
movsl
pop
movsb
adc
mov
imul
jno
subl
call
mov
jnp
jp
aad
dec
std
dec
data16
lock
addr16
adc
lods
ret
sub
jns
addr16
jl
fldt
push
movsl
jmp
and
outsl
jle
jns
mov
bound
mov
or
sar
ret
cmp
push
inc
ja
lds
xor
repnz
mov
call
ficoml
push
insb
fs
mov
popf
sti
das
fld1
outsl
in
xor
out
outsb
fists
into
out
movsb
push
mov
arpl
cmp
call
jno
fucomip
pop
jo
aas
fxsave
stos
or
inc
xchg
ficoms
xlat
mov
imull
iret
rcrb
in
es
inc
cmp
pop
ja
mov
enter
and
lock
sbb
push
ds
mov
test
fistps
xchg
popf
pop
dec
push
sub
aad
cmp
push
pop
xor
cmpsl
or
lcall
je
xchg
add
dec
fisubl
adcb
mov
jne
inc
shrb
pusha
daa
sbb
mov
fistl
outsb
xchg
popf
push
sub
loop
shll
es
add
sbb
adc
fdivl
or
jge
scas
rorl
cli
mov
xor
test
movsl
fs
push
sbb
or
xor
test
jb
cmp
pop
inc
loope
mov
sbbb
sahf
pop
add
daa
popf
bound
pop
enter
lea
shlb
mov
pusha
fbld
gs
andl
lcall
jmp
cmpsl
fwait
subb
je
inc
fwait
aam
ret
cmp
xlat
js
nop
fistps
mov
xchg
and
jge
push
movsb
pusha
jns
nop
outsb
shrb
int
adc
or
cmp
loope
outsb
call
jbe
leave
mov
sub
sub
into
js
or
rcll
xor
in
arpl
add
cmpsb
push
clc
les
and
lret
call
xor
faddl
jo
insl
int
jmp
mov
pushl
xchg
sub
push
sbb
inc
insb
ds
jnp
mov
push
jnp
jno
mov
sub
decb
mov
mov
pop
inc
sbb
es
push
int3
dec
add
inc
int3
stc
arpl
pop
neg
sarb
push
sahf
dec
fdivrs
pop
mov
inc
les
or
hlt
mov
dec
fldenv
cld
loope
scas
test
inc
mov
test
lock
lea
rcr
daa
push
adc
or
hlt
cmpsb
fcom
scas
scas
test
ret
push
and
add
cwtl
mov
or
sub
cmpb
lcall
imul
outsl
fistps
mov
aaa
xchg
cmp
sarl
xor
push
sbbl
push
popl
push
loop
subb
and
fs
pop
jnp
jbe
mov
leave
iret
leave
repnz
and
cli
aam
pushf
and
push
sahf
dec
xor
lcall
stos
push
lea
and
fmul
sub
cmp
aad
out
rclb
imul
test
mov
roll
outsb
mov
mov
cltd
cmp
dec
testl
in
jecxz
loope
out
sbb
lea
stos
xchg
mov
sub
jl
outsl
aam
adc
ret
and
jns
mov
aas
movsl
int3
popa
test
dec
out
lods
push
push
mov
lret
repz
cmp
daa
inc
inc
outsb
jae
jmp
xor
push
hlt
xchg
pop
lds
or
femms
and
cmpsb
lods
sub
pop
xor
test
mov
jnp
aad
xchg
add
aas
sti
sbbb
dec
bound
mov
and
lret
popa
sbb
xor
outsl
ja
xchg
xchg
add
jmp
mov
pushf
jp
lret
mov
mov
xchg
jmp
add
sbb
shll
push
jae
cmp
pop
add
lea
adc
add
xor
inc
ret
test
add
lret
mov
or
add
dec
fiadds
mov
adc
push
sbb
and
inc
ss
mov
ret
fnstenv
xchg
mov
nop
sahf
je
outsb
mov
std
pop
mov
lock
jo
imul
nop
fsubp
outsl
adc
sarl
dec
inc
push
mov
sub
mov
lret
mov
push
mov
int3
pop
movsl
cmp
je
sbb
sub
push
jle
pop
push
mov
div
cs
push
rcll
jle
jl
or
bound
in
sbb
push
addl
dec
xor
add
fmul
add
mov
mov
lahf
out
in
sub
mov
repz
xchg
fdivl
jnp
jg
jns
fistps
popa
icebp
or
xchg
cmpl
js
jmp
or
fucomip
ret
jmp
cltd
loopne
push
js
sub
inc
repz
jno
jmp
inc
push
adc
inc
and
and
sbb
xchg
cli
xchg
mov
sbb
mov
ret
xor
orl
mov
popf
cmpsl
repnz
sub
xor
lret
daa
add
aaa
icebp
out
ja
clc
inc
push
in
mov
adc
outsb
jbe
orl
into
pop
cli
loope
mov
or
mov
cltd
jmp
out
lret
lock
sbb
xchg
aaa
push
push
mov
fisttpl
stos
out
xchg
mov
scas
fdivs
sub
xchg
or
int
jl
sub
mov
loopne
aaa
sbb
scas
ficoml
and
int
xchg
pop
xor
adc
xlat
testb
sbb
ret
sbb
icebp
xor
daa
lods
sbb
sub
orl
push
inc
sbb
xchg
push
in
add
sbb
and
cwtl
jl
ret
aad
sbb
lret
sti
scas
xchg
shlb
and
cmp
test
push
pop
jns
inc
mov
inc
out
out
test
xchg
into
fisubs
or
test
or
sub
adc
enter
mov
rorb
lret
sub
out
in
les
in
push
cld
jp
pop
ljmp
pop
sub
fistpll
add
mov
lock
inc
imul
je
outsb
mov
cmp
icebp
mov
in
mov
add
movsl
rcrl
xor
stos
push
mov
ss
dec
jo
mov
push
sub
int3
xchg
lds
dec
jo
cmc
and
testb
xchg
jb
rorb
xchg
sbb
cli
mov
jno
jb
sub
and
add
and
dec
decl
mov
xor
inc
fwait
xchg
lret
fldcw
data16
push
mov
push
and
xchg
fcomps
fisubs
test
inc
cmp
jge
and
jp
push
loope
sub
in
into
fidivl
aaa
test
stos
stos
test
mov
adc
jp
inc
xor
pop
arpl
xchg
or
mov
push
rorb
lretw
and
inc
adc
adc
cwtl
adcb
imul
rcrl
addl
cmp
bound
and
inc
pop
xor
add
ret
ror
pop
pop
xchg
lea
ss
insb
jno
push
mov
mov
push
mov
xor
ds
cmpsl
and
pop
movsl
sbb
jb
out
mov
add
ret
cmpsl
sub
dec
mov
adc
gs
xchg
inc
jle
jbe
cmp
cmp
adc
aam
ret
les
mov
fnstenv
xchg
sbb
jle
jle
sbb
xchg
in
adc
pop
push
clc
out
and
add
xor
fistpl
inc
xchg
push
sbb
or
cmp
cmp
sub
stos
ds
xchg
js
xchg
rorb
xchg
xchg
xchg
add
das
sub
fs
push
out
lods
into
ret
push
in
sbb
stc
in
aas
sbb
aam
mov
insl
outsl
ss
notb
sti
in
dec
mov
mov
xor
outsl
test
sbb
popa
aam
sub
fadds
ret
nop
push
mov
cmc
das
pop
lret
pop
lcall
mov
sbb
popa
inc
jge
push
fsubs
mov
pushf
js
push
jl
stos
enter
jge
movl
shlb
sbb
pushf
adc
cwtl
sub
sub
fdivrs
scas
jmp
adc
mov
mov
outsb
lock
add
addl
sub
push
rolb
dec
cs
jge
iret
test
repnz
insl
mov
ljmp
cld
clc
mov
mov
pop
movsb
cmpsl
rolb
mov
and
test
ja
sub
das
sub
sub
mov
push
icebp
mov
lods
outsb
dec
inc
rolb
aas
pop
adc
or
xor
int
and
sbb
cmpsl
ficoml
sbb
mov
fwait
xor
xor
pop
mov
mov
ror
jecxz
add
or
ds
imulb
xor
pop
xchg
addr16
push
push
xchg
popf
das
adc
shr
das
pushf
sbb
imul
and
repnz
adc
or
cltd
stos
dec
jmp
out
ret
jbe
aad
cmp
jo
lds
mov
fisubrs
jns
cwtl
dec
add
shll
mov
negl
cltd
loop
int3
out
nop
les
imul
xlat
cmp
call
cmp
cwtl
jg
sbb
inc
xchg
xchg
pop
into
pop
stc
mov
jmp
out
push
mull
add
adc
std
fildl
mov
jns
inc
and
lea
addr16
cmp
sbb
fisttps
cld
and
mov
inc
aam
cmp
shl
or
add
inc
mov
es
sub
stos
jecxz
fists
mov
shll
xchg
mov
pop
nop
push
jnp
adc
pop
or
ret
aad
fcomi
pop
ljmp
xor
jge
inc
jmp
imul
xor
jns
rcrb
mov
sbb
jmp
sub
push
daa
mov
sub
cmp
inc
test
loopne
and
sti
cmpsb
or
in
fistpl
adc
hlt
out
mov
mov
js
fld
xchg
xchg
jmp
lcall
xorb
cmp
cmpsl
jae
repz
mov
push
outsb
pusha
pop
sub
cmp
stos
mov
shrb
mov
add
ja
mov
filds
xchg
test
in
gs
add
lock
push
add
negl
inc
jno
sbb
lahf
add
jnp
mov
ljmp
jmp
iret
add
jno
in
dec
outsb
or
xchg
sub
xchg
aam
ret
mov
pop
lahf
cmp
int
mov
push
daa
ret
add
pop
adc
lods
push
cli
inc
cmp
push
cmc
mov
sub
or
jp
lods
inc
mov
sbb
imul
push
sub
out
jne
push
cmp
sub
xor
sbb
cmpsb
pop
sbb
es
sub
aam
mov
shlb
push
andl
cmp
rcrl
mov
mov
push
sbb
roll
cmpsl
mov
dec
dec
sub
loopne
ss
fsubl
lcall
sub
movsl
jle
iret
stos
adc
ds
push
movsl
cmp
outsl
sub
push
sbb
test
pop
rolb
mov
pop
cwtl
push
out
data16
xor
ss
pop
cmp
out
pop
mov
mov
push
pop
clc
pop
sub
and
dec
dec
mov
add
mov
sub
gs
or
out
xchg
sbb
arpl
pop
pop
inc
and
xlat
inc
mov
jne
inc
call
lds
inc
mov
daa
add
stc
push
in
push
ss
aas
dec
iret
pop
std
jns
dec
mov
cmpsl
push
mov
insb
mov
mov
mov
sbb
fs
xor
jp
push
mov
xchg
addl
icebp
and
pop
std
cmpsb
xor
lods
push
pop
pcmpgtd
and
jnp
inc
jns
popf
mov
sub
sub
dec
sub
pop
adc
mov
jp
jl
test
adc
pop
imul
mov
jno
cwtl
pop
xchg
into
test
stos
jb
xor
push
xor
push
nop
inc
mov
push
stos
scas
mov
pushf
xchg
mov
loopne
push
scas
aas
fwait
nop
stc
mov
xor
dec
xchg
stos
test
and
clts
push
repz
adc
aas
stc
repnz
sbb
dec
push
pop
and
push
stos
sbb
fstps
add
ret
and
rorb
cmp
dec
inc
cld
mov
filds
jno
int
stc
in
jbe
addr16
mov
or
scas
jo
pop
xchg
sub
es
jne
xchg
movsb
es
xor
jnp
in
mov
mov
inc
xlat
icebp
xchg
stos
cmp
mov
in
test
popf
adc
aaa
cmp
jns
sarb
outsb
xchg
or
frstor
inc
sub
iret
enter
cmp
and
movsb
cld
dec
mov
push
and
dec
xor
mov
cmpsb
sub
mov
xchg
sub
cwtl
lret
adc
mov
cmp
fidivs
push
mov
mov
sub
and
inc
add
das
and
cmp
das
mov
jns
xchg
xchg
int
mov
int3
xor
lea
sub
pop
pusha
popa
push
cmpb
in
lret
iret
jl
xchg
mov
inc
flds
scas
pop
lods
movsb
dec
mov
sub
insb
pop
and
xchg
test
and
and
movsb
cmp
fisubl
add
cmp
sub
into
push
mov
pop
enter
pop
jno
into
out
or
in
add
sbb
jl
add
lahf
push
pop
pushf
ljmp
sbb
xchg
nop
syscall
jl
int3
or
mov
dec
adc
test
or
pop
adc
jmp
jae
pusha
cmp
dec
jns
imul
mov
enter
aad
out
dec
in
dec
sar
mov
ret
mov
pop
leave
mov
rcll
xor
imul
fstps
mov
add
push
push
repz
loop
sbb
stos
scas
fwait
aam
clc
mov
mov
sub
dec
ja
jl
jmp
jmp
xor
cbtw
xor
mov
inc
or
clc
lret
mov
imulb
outsl
dec
int
out
leave
sbb
stc
shlb
incb
outsb
fistpll
cmp
push
movsl
mov
mov
mov
daa
std
ret
popa
xchg
jbe
les
mov
mov
sti
cld
idivl
insl
sub
or
call
cmp
lea
mov
push
test
add
enter
mov
sub
aad
mov
pop
mov
fstpt
lods
mov
nop
aas
add
fisubrl
adc
jne
pusha
jb
xor
push
mov
lock
les
pusha
jmp
out
fwait
push
fs
les
sbb
out
je
div
fcompl
in
hlt
pop
cmpsl
push
bound
leave
mov
adc
insb
push
imul
inc
ss
mov
bound
cmp
outsl
sarl
mov
leave
xchg
mov
scas
mov
adc
xchg
push
add
fwait
or
pop
add
sub
xlat
in
and
jb
clc
mov
cmp
push
fisubrl
pop
jp
divb
imul
repnz
add
lods
dec
sub
enter
dec
lds
in
fbstp
mov
fwait
jnp
inc
ja
shrb
dec
stc
xchg
and
mov
cwtl
out
mov
push
push
push
insb
outsb
xchg
ds
add
fcoms
loope
and
push
cmp
dec
xor
push
cmp
adc
and
js
aam
xor
aad
es
in
lcall
inc
mov
data16
jmp
lea
out
out
mov
jmp
jo
and
pop
andb
mov
xlat
cs
mov
out
in
pop
test
popa
pop
and
std
data16
loop
add
add
sbb
xorb
iret
scas
sub
es
push
and
and
mov
mov
cmp
in
inc
sub
aas
push
lret
pusha
xor
into
mov
aas
or
adc
jnp
addr16
pushf
faddl
mov
xchg
fiaddl
mov
dec
repnz
ret
data16
dec
sti
fcomi
call
mov
adc
push
fdivrp
hlt
jb
adc
negb
inc
in
pop
and
pop
pop
mov
add
and
sub
int3
ljmp
aad
dec
inc
mov
shll
cmp
or
js
xor
outsl
sub
add
jg
out
push
or
in
sbb
push
fstpl
jno
inc
test
mov
jp
xor
xchg
jge
sub
cld
mov
dec
inc
fldlg2
or
push
pop
sub
and
mov
sub
jmp
push
mov
in
test
add
jno
fsub
sub
mov
xor
mov
xchg
sbb
popf
pop
js
or
xor
inc
or
leave
sbb
shlb
mov
stc
stos
arpl
mov
mov
aad
inc
add
push
fnstenv
fnstcw
xor
push
jmp
push
cmpb
dec
cwtl
pusha
inc
and
divb
dec
lock
xor
fsubr
sbb
je
jb
das
adc
fs
cmpsb
sub
out
aas
dec
lods
add
loopne
adc
hlt
test
shrb
aaa
insl
int
sahf
push
clc
and
add
or
andb
and
xchg
add
sbb
insb
imul
jg
movsl
ret
push
mov
mov
xor
mov
add
xlat
movsb
les
aad
not
fisubl
push
pop
lret
ljmp
pop
pop
dec
push
sub
lea
shll
xchg
cltd
movsb
sub
lds
jb
les
adcb
ret
sbb
xchg
inc
repnz
sbb
adc
sub
jb
call
dec
outsl
out
dec
push
ret
cmp
push
xlat
cmp
xchg
dec
in
scas
mov
shl
outsl
outsb
or
mov
xchg
push
loope
xchg
or
mov
xchg
pop
push
test
sub
cmp
pcmpeqd
les
inc
mov
xchg
pop
out
inc
adcb
sbb
pusha
and
icebp
cmp
push
xor
add
pop
fs
sbb
mov
lock
push
fcoml
adc
cltd
dec
sarl
pushf
leave
int3
xlat
frstor
or
adc
ds
dec
push
cltd
mov
in
sbb
pop
aas
cmp
adc
pop
adc
mov
adc
jl
outsb
hlt
add
or
mov
stos
in
adc
add
add
mov
into
adc
sbb
add
jno
and
sbb
jbe
mov
stos
or
lods
and
lahf
push
jo
scas
stos
aaa
call
adc
sahf
adc
addr16
sbb
mov
dec
push
dec
add
call
xorb
jecxz
mov
fisttps
rolb
aam
xchg
test
pop
mov
les
ljmp
push
push
inc
sbb
or
cmp
test
or
xchg
push
push
dec
lods
dec
inc
cmpsb
shll
or
fstpt
inc
xchg
mov
insl
push
mov
xor
sbb
sbb
aaa
rclb
repnz
addr16
cmp
js
jecxz
imul
rcrb
jp
test
fwait
sub
inc
xor
es
inc
repnz
add
std
movsb
pop
fsts
xchg
fildll
xchg
cmpsl
outsl
mov
insb
mull
xchg
inc
cwtl
fdivrs
ja
out
cmp
jecxz
cmp
in
sbb
xchg
adc
sub
das
shlb
mov
mov
push
addr16
sub
cmp
jns
pop
mov
cmc
and
in
shll
in
adc
ds
and
xchg
aad
jno
mov
lcall
add
ja
test
xlat
dec
jne
lcall
jnp
adc
inc
mov
fnsave
mov
mov
jge
shlb
pop
sub
cmp
ja
or
push
push
push
pop
fwait
cmc
movl
es
xor
cmp
sub
pop
outsl
fists
aad
cmpsb
int3
popf
lods
push
mov
mov
es
xor
ja
xchg
mov
in
jge
je
xchg
dec
stos
subl
sub
push
xchg
push
rolb
sub
stos
pop
enter
daa
sbb
stc
roll
lahf
sahf
inc
add
enter
rorb
addr16
or
shll
mov
shl
cltd
sbb
and
jbe
mov
es
jnp
sub
bound
in
push
je
xlat
into
xchg
cli
or
xchg
repz
in
push
fldt
cmpsl
cmp
cmp
scas
jae
sub
sub
test
cltd
data16
mov
fistpl
and
sbb
sub
rcrb
inc
cmpsl
inc
data16
mov
lcall
lods
mov
repz
loope
adc
movsl
and
out
int
jns
mov
jns
jb
mov
pop
inc
pop
popf
test
pop
dec
dec
lcall
cmp
aaa
add
jl
imul
loope
in
int
inc
inc
dec
xchg
mov
test
push
enter
bound
es
sub
lods
andb
jl
inc
inc
iret
loop
cmc
lock
mov
in
or
push
xor
jno
dec
ja
decl
stos
sub
int
incl
js
add
cmpsl
sbb
sti
xor
inc
aas
stc
pop
xchg
mul
pop
and
sti
faddl
adc
dec
or
lds
adc
xor
push
stc
test
loopne
cmp
xor
sub
add
clc
mov
xchg
pop
sub
jge
mov
roll
cmp
test
cld
daa
pusha
mov
testb
lret
loope
xor
dec
in
lcall
pop
mov
roll
pop
out
in
push
hlt
sub
and
and
sbb
je
mov
in
lock
cmpsb
inc
mov
mov
out
in
or
jle
lds
push
push
aam
jmp
scas
lods
mov
mov
lods
sbb
mov
mov
cwtl
xchg
mov
iret
add
pop
shl
enter
clc
addr16
xchg
dec
inc
jge
push
pop
fnstsw
and
inc
mov
xchg
jp
icebp
bound
mov
push
xchg
mov
push
cmp
dec
jbe
fistps
aas
cld
dec
inc
test
and
xor
inc
jb
push
jns
fnstsw
cmp
or
fstpl
add
int3
movsl
aaa
fldenv
lret
shll
xchg
adc
mov
xor
jmp
mov
jo
jecxz
pop
xor
aad
out
ret
icebp
lods
inc
pop
adc
repnz
dec
fwait
mov
push
daa
mov
popf
fwait
ljmp
mov
xorl
popf
cmp
sbb
repnz
mov
cmpsb
jno
or
aaa
xor
jle
out
jmp
xchg
mov
pop
mov
daa
repnz
inc
aas
sahf
push
push
shrl
inc
inc
imul
sbb
pop
push
cmp
loope
sarl
xchg
jl
fsubrs
jle
inc
add
xor
and
sub
pop
add
pusha
pop
enter
mov
jmp
out
mov
fsubrs
xor
xor
xor
call
mov
sti
divb
stos
push
inc
add
aam
push
or
cld
inc
ss
in
sti
adc
pop
inc
mov
repnz
in
gs
push
push
and
dec
aaa
mov
mov
out
cmp
jg
sub
cwtl
and
pop
sti
push
outsl
xor
pop
inc
cmp
or
pop
inc
lcall
sahf
lret
cltd
into
insb
aas
dec
inc
packssdw
cmpb
imul
mov
lods
stos
insb
adc
cmpsb
xlat
int3
adc
inc
add
test
adc
or
movsl
lret
xorb
jp
cmpsb
aam
dec
in
in
add
pop
cmp
add
or
jae
push
mov
sbb
fstl
outsl
pusha
mov
subb
in
imul
nop
ficompl
xchg
xchg
push
mov
mov
sub
jb
mov
rol
imul
xlat
jbe
outsl
lods
ds
je
push
leave
xchg
jno
mov
xchg
ret
mov
rorl
xchg
movsb
adc
push
or
or
xchg
sbb
lea
xlat
pop
add
push
mov
mov
lret
nop
daa
mov
jo,pn
mov
jp
shr
or
aad
test
push
test
gs
push
lcall
lods
adc
xchg
cmpb
or
iret
outsb
in
data16
shll
outsl
mov
bt
push
stos
sbbl
movsb
adcl
out
cli
xchg
je
pop
jp
xchg
pop
lahf
sub
mov
jle
sti
test
std
lahf
mov
adc
ret
mov
incl
mov
and
xchg
bound
scas
int3
xor
cmp
jnp
loopne
nop
jne
jno
movsb
ja
cmp
push
enter
push
das
add
cs
jbe
inc
push
mov
adc
bnd
adc
lret
push
std
mov
adc
ret
pushf
gs
dec
je
jle
or
bound
arpl
jge
or
inc
mov
insl
mov
dec
push
out
aaa
shlb
je
jg
pop
stos
pop
push
scas
jae
ja
ljmp
aam
jmp
in
pop
int
jo
repnz
mov
cmpsl
frstor
dec
std
cltd
add
les
or
in
mov
lock
shll
gs
roll
sarl
xlat
xor
mov
fs
jecxz
je
addl
xchg
test
out
gs
loopne
les
in
and
movsl
push
cld
jne
scas
repz
jnp
sarb
test
jge
imul
cmp
mov
test
sahf
call
fprem
jge
mov
lea
std
and
mov
inc
add
movsb
xchg
cmp
xchg
popf
jo
jno
mov
divb
pop
sbb
cmpsb
repnz
cs
jp
dec
fistpll
inc
mov
lods
mov
rcrl
lea
inc
testb
fwait
push
enter
dec
sbb
or
mov
sbb
insl
pop
adc
pop
cmc
int3
sbb
ret
sub
cmp
loopne
push
lcall
pop
cltd
dec
sub
clc
sar
into
push
jbe
arpl
lods
cld
sbb
ja
ja
xchg
inc
jnp
lret
fsts
imul
push
adcb
repz
xchg
into
xor
daa
fsubrl
and
jo
xor
pop
sub
jle
inc
shl
push
mov
fs
push
xchg
loopne
jne
out
in
push
and
or
jl
jp
pop
lock
scas
xchg
fwait
mov
ficomps
jns
mov
mov
aam
sbb
fcomip
mov
and
pop
push
pop
mov
mov
loope
mov
pusha
sub
jmp
mov
and
jo
js
loop
or
dec
cmp
xor
popf
js
mov
cmp
out
das
aad
xchg
and
andl
mov
mov
sub
mov
aam
addl
push
mov
fimull
lods
push
es
test
dec
loopne
sub
push
int3
addr16
sub
mov
adc
clc
xor
in
xchg
mov
xor
or
sbb
mov
insl
push
loopne
xchg
fs
pop
mov
addr16
adc
rcl
xlat
pusha
mov
lea
nopl
loopne
mov
mov
sbb
in
jle
sub
push
mov
mov
lea
loopne
xadd
in
stos
negl
outsb
leave
dec
iret
lret
push
mov
popa
fucomip
ret
imul
cli
pop
daa
out
stos
imul
add
xor
pop
dec
into
mov
mov
and
xchg
ds
cltd
addl
int
aaa
adc
push
pop
adc
imul
dec
or
add
push
mov
cmpsl
shlb
fcmovnb
addr16
outsb
or
mov
pop
pushf
mov
mov
xor
mov
int
cmpsb
cmp
mov
fisubrl
dec
dec
sti
and
insl
pop
or
sub
aam
ficompl
inc
lea
shll
int3
hlt
dec
push
ret
push
cwtl
cmpsb
mov
pop
dec
fidivrs
jbe
out
test
scas
pop
iret
inc
sub
inc
mov
xor
sbb
lret
int
shl
jae
sti
roll
lahf
sbb
leave
xlat
lods
in
cmp
xchg
popf
movsl
push
out
xchg
mov
outsb
sub
in
or
imul
push
cmp
or
add
div
jae
es
sahf
mov
mov
add
push
push
or
xchg
lds
mov
int3
test
jne
dec
mov
dec
sub
mov
add
pop
or
das
or
or
mov
nop
cmpsb
lcall
dec
inc
js
cwtl
out
cmp
and
test
loopne
add
ret
and
and
jmp
xor
ja
pop
call
and
or
iret
xchg
test
out
popf
xchg
in
ljmp
popa
cmp
sarl
mov
gs
mov
xor
jae
out
push
imul
sbb
push
or
test
jmp
gs
test
sbb
in
and
cmp
test
in
and
lods
xchg
in
sbb
lcall
fistpl
cmc
xchg
adc
scas
cmp
mov
nop
pop
or
sbb
outsb
mov
loop
dec
imul
pop
rorb
mov
jmp
lds
fwait
pop
fsubrp
pop
sbb
dec
test
ja
push
mov
mov
dec
add
lds
cwtl
orl
jg
inc
ffree
fldenv
inc
sub
xor
cs
mov
loope
adc
mov
jne
aam
jae
fs
cld
sub
cli
jp
xchg
cmp
movl
push
dec
mov
sub
mov
sub
push
test
stos
xor
push
cmpsb
sub
pusha
lock
xor
cmp
stos
sub
aas
fisubs
in
clc
out
dec
sub
inc
or
inc
add
loop
xchg
imul
test
out
int3
adc
in
or
jecxz
mov
jbe
pusha
out
mov
fwait
add
dec
lds
inc
mov
adc
cmpsb
shrb
in
fistpl
into
inc
lahf
push
out
and
lds
out
hlt
js
cmp
mov
jmp
pusha
jbe
cli
fsubs
or
in
hlt
sahf
jbe
aad
call
mov
lea
stos
jg
insb
imul
mov
jl
and
enter
fdivs
cwtl
push
mov
mov
inc
cmp
pop
pop
xchg
loope
dec
aas
and
fs
aad
and
in
loopne
xchg
adc
mov
or
sbb
test
rcrb
adc
inc
loop
push
repnz
push
gs
mov
ret
and
and
inc
rcll
xchg
jb
xchg
nop
out
mov
mov
mov
xor
dec
adc
xchg
xchg
push
cmp
xchg
push
ja
shrb
xchg
add
lods
jnp
lret
and
push
out
fs
lahf
cmp
sti
inc
movsl
sbb
hlt
filds
sbb
pcmpeqb
mov
out
sub
js
pop
push
mov
jecxz
add
inc
in
mov
xchg
inc
push
cmc
sahf
cmp
sbb
into
fidivs
pop
enter
pusha
std
notl
loop
xor
ss
jg
xchg
scas
test
stc
or
leave
dec
ljmp
lcall
mov
jae
fiaddl
fwait
cs
daa
fsubr
stos
sub
lods
adc
aad
stos
fbld
jne
xchg
imul
lahf
out
bnd
nop
or
sahf
ds
xchg
cmp
fistpll
int3
fcomip
dec
xchg
mov
fnstcw
jl
loop
orl
mov
or
pop
xchg
xor
pop
sbb
lods
repnz
cmpsl
lock
cmp
cltd
cmpsl
lret
mov
or
sub
pushf
and
fistpll
test
das
pop
dec
mov
jecxz
pusha
dec
gs
jne
push
push
or
into
dec
aad
push
scas
add
jo
pop
ror
mov
pop
aam
divl
mov
aad
lret
cli
scas
lea
sub
enter
loop
inc
push
out
ret
inc
adc
pop
lds
lds
insb
negl
mov
imul
ja
cmc
cmp
xchg
cmpsl
icebp
je
clc
stc
mov
rol
loopne
mov
mov
jp
cmp
fnstsw
lret
sahf
cmp
inc
aam
sub
adc
jno
pop
sbb
test
mov
and
adc
divb
add
push
cwtl
in
push
sub
out
push
bnd
add
xchg
test
fmuls
sbb
cmp
jp
jbe
mov
mov
jns
in
push
or
mov
jns
cmp
mov
shrb
mov
mov
cmp
movsb
call
lcall
jge
outsb
xchg
mov
jno
sbb
jecxz
mov
xor
jmp
fdivrs
dec
sbb
out
and
dec
out
inc
cwtl
dec
lret
repnz
decb
sub
dec
add
jns
mov
mov
sbb
add
rclb
orb
rcrb
xchg
dec
arpl
dec
and
jl
cltd
or
sub
loope
jns
xor
adc
in
lds
xor
scas
fildl
js
push
sbb
loopne
fdiv
push
jbe
pop
fnsave
inc
call
jl
xlat
movsb
push
loopne
push
mov
and
sbb
sub
mov
fisttps
das
nop
pusha
mov
mov
lret
adc
je
inc
ljmp
mov
int3
movsl
pop
mov
shrl
add
out
sub
jnp
pop
inc
mov
cltd
ljmp
lock
jb
sub
in
hlt
adc
dec
and
xchg
mov
out
sbb
push
adc
into
scas
xchg
or
jle
lret
bound
mov
ret
inc
imull
sbb
jno
dec
xchg
and
dec
add
pop
add
xor
loope
push
imul
mov
bound
adc
mov
out
xchg
imul
sbb
mov
mov
mov
pop
and
jl
cld
mull
nop
add
pop
test
outsb
inc
cmp
mov
movsb
daa
js
lods
out
lahf
push
imul
and
ret
mov
test
test
or
xor
dec
sbb
jns
xor
and
mov
adc
xor
outsb
aad
insb
lret
das
fnstcw
mov
or
xor
xchg
sbb
shlb
lret
sti
rolb
inc
aaa
enter
dec
and
dec
mov
pop
test
out
out
mov
sbb
cltd
fwait
cmpsl
fwait
mov
dec
mov
mov
cmpsl
icebp
roll
test
lahf
imul
and
in
sub
add
or
js
ds
test
xchg
mov
inc
lahf
adc
enter
out
daa
mov
xor
nop
call
pop
js
xor
fnstsw
lret
pusha
xchg
scas
popa
orb
mov
lcall
inc
adc
mov
ljmp
mov
xchg
mov
pop
js
fst
jo
adc
decl
ds
push
mov
nop
imul
orb
mov
loopne
in
jb
roll
inc
adc
mov
enter
lahf
inc
and
loopne
nop
jne
iret
es
add
adc
sbb
xlat
and
or
mov
push
push
cmp
scas
ds
test
adc
out
jle
or
fimuls
and
vpunpckhwd
shlb
pop
or
imul
mov
inc
scas
xchg
jge
sub
aaa
cmp
and
daa
sbb
jae
mov
mov
or
dec
sbb
icebp
cld
aad
adc
cwtl
xchg
test
inc
in
inc
mov
and
cli
pop
jge
pop
scas
jle
cltd
mov
and
shll
sub
test
and
and
enter
into
mov
mov
xchg
jb
fsub
out
dec
loopne
ljmp
and
out
mov
loop
outsl
jno
ficoms
and
lods
out
cmpsl
adc
cmp
push
xor
or
sub
and
mov
or
iret
ret
es
mov
sbb
lret
xchg
adc
loope
rcrl
or
sub
fidivrl
xor
test
pop
cmpsl
ret
adc
dec
das
pop
sarl
orb
jl
adc
push
iret
pop
lcall
add
into
clc
outsb
inc
in
int
mov
jns
or
add
sbb
jb
in
das
nop
or
cmp
imul
inc
jle
mov
sub
and
jno
xchg
jecxz
cltd
rorl
push
in
lods
rcr
inc
mov
adc
jge
scas
inc
pop
fsub
aam
ja
mov
cld
push
or
cmp
icebp
sbb
repz
inc
pop
leave
das
ja
pop
mov
insb
loope
xor
add
loopne
pushf
ret
mov
movsl
test
xor
arpl
lods
adc
xchg
lret
ficompl
xor
and
pop
xor
scas
cmp
out
sub
mov
lds
mov
push
push
out
mov
stos
and
and
jp
es
cmp
pop
jnp
ret
insl
add
sub
mov
jp
lods
pop
ja
pop
or
hlt
bound
fwait
or
arpl
xchg
inc
insl
jo
fdivrl
lret
push
pop
rclb
push
lds
jmp
fsubrl
pop
aas
adc
dec
mov
clc
shlb
sti
lods
dec
subb
adc
mov
dec
je
sahf
je
rclb
dec
pop
push
and
pop
stos
fstl
mov
mov
rorb
rcl
fistpl
or
repz
inc
test
inc
jp
adc
jge
pusha
mov
adc
lods
dec
and
mov
xor
sbb
inc
int
aas
pop
js
rcl
push
push
jno
sarb
or
push
int
dec
mov
jb
cmpsl
orl
frstor
ja
mov
scas
test
add
xlat
aas
pop
pop
sbb
popf
inc
vpunpcklwd
sar
loope
aad
mov
rcrb
jp
std
outsb
xchg
cltd
adc
popf
cwtl
pusha
ret
adc
mov
push
clc
fcoml
xor
cltd
sub
jbe
mov
cmpsl
daa
xchg
mov
dec
icebp
popa
xchg
xor
cmp
pop
hlt
pop
xchg
pop
xchg
add
bound
jmp
fnsave
inc
xrelease
daa
cmpsl
cmp
test
push
div
adc
stos
adc
loopne
pushf
xchg
call
add
int
mov
addr16
mov
xchg
jecxz
data16
fwait
push
arpl
xor
test
in
adc
fcomp
ljmp
and
out
loop
lahf
lock
andb
out
jl
adc
or
cwtl
push
psllq
sub
xor
xor
mov
lods
jns
push
dec
lea
in
adc
sbb
lock
sbb
mov
mov
sbbl
imul
pop
xor
stos
shll
cld
ljmp
repnz
popa
xor
out
or
xchg
push
mov
cmpsb
rolb
aaa
mov
js
outsb
jle
insb
push
push
pop
mov
fwait
sub
pop
test
daa
adc
mov
jae
mov
ja
xchg
lret
sub
mov
dec
sahf
or
jp
inc
push
int3
jbe
scas
sarb
inc
pop
clc
mov
popa
das
xorb
dec
pop
mov
push
cmp
lret
fmulp
mov
cmp
imul
fisubrl
sbb
and
sub
push
push
data16
xchg
jecxz
inc
rorl
call
or
inc
inc
mov
clc
lret
or
rcl
out
lock
rcll
into
dec
fbstp
divl
lret
lds
sub
sub
cld
lods
dec
lds
and
add
xor
cmp
imul
clc
xorl
dec
xchg
xchg
add
inc
in
xchg
push
adc
pop
mov
loopne
hlt
mov
sub
setbe
int3
adc
xor
aam
popf
movsl
pop
adc
rol
arpl
mov
fldcw
push
jo
push
ljmp
jg
xor
stc
or
add
jg
jne
sub
lds
dec
sbb
jbe
stc
repnz
xorl
sub
aas
jmp
filds
push
cmp
mov
adc
jecxz
out
data16
popf
adc
pushf
and
call
pop
in
nop
aas
mov
testl
push
sub
cmp
xor
xchg
cmpsb
daa
adcl
gs
repnz
repnz
cmp
add
std
push
mov
push
pop
push
inc
and
es
add
sbb
jbe
mov
inc
jb
add
add
jecxz
adc
adc
xor
mov
push
scas
scas
test
push
mov
iret
or
sbb
cld
scas
mov
in
call
fsubs
adc
inc
fndisi(8087
roll
pop
push
cmpsb
shll
pop
xor
pop
add
in
ffreep
fs
or
jno
cmpsl
jmp
iret
ret
xchg
push
stos
sbb
mov
xor
lret
mov
roll
inc
cltd
jns
pop
inc
sbb
stos
add
jg
mov
add
ror
push
cmp
testl
cwtl
in
mov
imull
sub
sub
sub
sarl
jns
in
data16
jb
jle
pop
jge
adc
mov
bound
add
std
fcmovu
mov
lcall
xor
movsl
sbb
pusha
je
aam
insb
inc
dec
and
outsb
fldcw
mov
imul
xchg
sti
xor
mov
xor
cmp
loop
jno
pop
jnp
imul
icebp
inc
dec
pop
je
add
cs
inc
xchg
cwtl
stos
mov
and
dec
call
or
lret
seto
pop
fwait
nop
fdivrs
das
sub
adc
aaa
imul
in
and
call
mov
mov
popa
mov
enter
cmp
sbb
jns
mov
movsl
pop
inc
lcall
push
vpcmpeqw
pop
push
dec
bound
sub
shlb
insl
sub
xchg
inc
sbb
hlt
sarl
pop
push
inc
lock
adc
out
cld
stos
lret
aaa
lock
pop
out
test
push
mov
dec
or
or
push
fisubrl
dec
icebp
pop
cli
xor
out
mov
adc
push
and
cmpsl
inc
push
in
cmp
daa
je
dec
into
dec
mov
jmp
jns
test
int3
lcall
movsb
pushl
or
pop
test
mov
rorb
jne
pop
push
dec
loope
inc
jmp
test
xchg
and
ss
fwait
imul
shl
dec
xchg
sbb
inc
mov
cmpsb
pop
mov
lret
cmp
xor
push
into
out
imul
jno
mov
sbb
repnz
sub
out
out
jnp
jecxz
outsl
cmp
mov
sbb
sbb
stos
pop
fsubp
jle
dec
or
jecxz
or
add
xor
or
outsl
and
add
cmpsb
inc
in
dec
pop
push
andl
cmpsl
jg
nop
popa
mov
stos
mov
orps
xorb
movsb
roll
or
std
outsb
sti
cmp
imul
cli
test
icebp
dec
out
pop
insb
clc
movsb
adc
xor
adc
fistpll
push
xor
xor
sbb
sub
lock
sbb
in
es
cwtl
jns
arpl
cli
mov
aad
mov
shll
pop
insl
cmpsb
dec
or
fsubrs
sbb
scas
in
cmpsb
xor
test
xor
cmpsb
fdivs
xor
mov
mov
hlt
add
or
cmp
mov
mov
pop
adc
test
jge
jmp
stos
push
pop
mov
mov
cmp
xlat
mov
int
add
mov
in
sbb
mov
jbe
fidivrl
sarl
fildll
xchg
icebp
push
arpl
pop
popa
adc
dec
lcall
xor
pop
scas
adc
push
mov
test
out
add
inc
dec
out
cmp
jge
popf
or
mov
adc
xchg
mov
and
inc
sub
inc
movb
mov
mov
int
cmp
xchg
inc
xor
add
inc
mov
mov
sub
or
fistpll
jg
loopne
negl
pushf
std
fsubr
cli
out
cmp
push
pusha
les
lret
pusha
lods
dec
fldl
push
ret
movsl
ret
xor
je
xor
and
sub
in
ja
jns
stos
mov
push
rorl
lahf
push
sub
jo
rolb
bound
cmp
push
mov
sbb
add
and
call
fs
lcall
sub
in
dec
adc
pop
sub
call
lret
push
ret
lds
pop
ljmp
leave
iret
loope
push
add
std
pop
xchg
add
testb
ja
or
inc
outsb
stos
and
and
push
cmpsl
jbe
mov
xchg
fiaddl
mov
cwtl
jp
jae
dec
and
aaa
mov
inc
ret
push
xor
je
ds
je
jge
mov
adc
pop
inc
pop
or
and
out
jle
sbb
fwait
rol
shr
sub
sbb
orl
aam
jle
loope
pushf
pop
iret
pop
mov
hlt
repnz
js
mov
cmc
outsb
or
fadds
pop
fnstsw
in
stos
inc
jne
pop
ss
in
and
mov
or
jae
and
mov
jno
jge
fwait
pop
and
jne
jns
lret
lods
mov
push
popf
push
jae
insb
lods
fisubl
sbb
jl
cmp
inc
xchg
hlt
mov
and
fwait
or
inc
and
testb
xchg
pop
ret
rcrb
mov
aad
push
repnz
pushf
or
adc
ficoml
jg
std
xchg
lret
or
mov
jmp
ret
sbb
mulb
leave
jmp
sub
ds
jne
sbb
mov
das
mov
jae
push
enter
jno
mov
mov
and
dec
mov
sub
jecxz
push
sbb
aas
mov
adc
movsl
add
fisubrs
dec
movsb
mov
mov
shrl
push
inc
aaa
xor
decl
sti
movsb
xchg
or
lcall
sbb
dec
movsl
pop
xchg
jmp
jno
arpl
aas
jmp
icebp
rorl
fistpll
test
mov
mul
nop
cmp
out
add
xchg
aaa
aas
jp
dec
cmc
adc
sbb
and
in
repz
andb
adcb
push
jmp
mov
xchg
adcl
xor
mov
and
dec
jg
loop
mov
and
lods
mov
mov
fadds
popa
mov
aaa
cmpsl
push
xor
call
aad
cmp
out
add
mov
pop
icebp
xchg
or
mov
lret
movsb
jp
xor
fidivrl
inc
out
movnti
stos
and
ficompl
rorl
ror
xchg
xor
add
js
icebp
jns
sub
movsb
cwtl
test
pop
incb
xchg
mov
in
push
jmp
ds
pop
pop
jecxz
inc
ja
xor
std
enter
jp
sbb
sub
iret
ret
jnp
or
lods
arpl
push
adc
test
push
inc
jno
pusha
lock
mov
mov
push
shl
add
inc
into
push
sbb
stos
sub
or
aam
sub
not
aaa
push
mov
cltd
bound
out
lret
shll
and
jne
push
mov
hlt
sub
aad
jle
fs
dec
push
movsb
cmc
mov
jge
ljmp
lahf
mov
movsb
enter
and
sti
and
xchg
xchg
test
adc
fwait
jge
ja
arpl
sub
ja
xchg
andb
push
out
or
sarl
lret
cmpsb
bound
divl
dec
sbb
mov
xlat
push
es
mov
dec
mov
sub
movsb
ficomps
mov
pop
adc
pop
mov
movsl
or
and
push
push
adc
movsb
imul
mov
mov
fsubs
mov
or
xor
ljmp
call
mov
das
js
sbb
ds
mov
mov
aam
imul
test
inc
mov
xchg
dec
pop
int3
cltd
cmp
das
pop
pop
es
in
rorl
in
aam
leave
addl
jecxz
arpl
leave
je
dec
or
subl
cmp
sbb
push
dec
jl
sub
cmp
popa
popf
cld
add
mov
inc
rorl
cmpsl
out
inc
jecxz
inc
dec
adc
xor
dec
and
test
xlat
es
xor
aas
mov
gs
fmull
js
mov
test
pusha
or
xchg
aad
adc
add
mov
mov
out
and
and
or
mov
push
xchg
rolb
adc
inc
outsl
inc
fwait
insb
push
pop
push
mov
fisubs
out
outsb
mov
push
mov
sarb
cmp
cld
dec
xor
mov
mov
add
gs
lret
sbb
cmpsl
cmp
into
push
jo
xchg
cmp
insb
add
dec
andl
add
dec
clc
cmc
jl
mov
inc
adc
or
jmp
movsb
mov
pop
enter
leave
sub
adc
shr
push
mov
xchg
dec
mov
imul
cwtl
es
les
xchg
push
imul
inc
mov
mov
hlt
cli
mov
push
sub
and
mov
lods
xchg
xchg
mov
arpl
mov
dec
or
mov
lahf
dec
les
dec
ret
insb
mov
neg
pop
pop
les
nopl
push
lods
gs
sbb
jecxz
test
shll
inc
lahf
daa
out
push
jo
adc
je
mov
cmp
fwait
cltd
sahf
andb
ret
scas
js
mov
mov
jecxz
pop
add
push
mov
sbb
nop
imul
data16
mov
into
stc
sub
call
dec
xorb
mov
cmp
mov
or
iret
pushf
fcoms
fsubl
add
scas
adc
test
sub
inc
pop
popf
push
adc
jecxz
or
sub
sub
jne
dec
add
add
adc
in
lahf
outsb
xchg
mov
adc
fdivr
cltd
jb
shrl
pop
jmp
test
adc
stc
mov
inc
bound
adc
sbb
outsl
repnz
sbb
fdivl
leave
jge
mov
pop
test
fcmovnu
imul
lcall
ss
sbb
out
es
push
push
test
sbb
jns
int
pop
lods
loope
enter
add
xor
xor
xchg
imul
xchg
xchg
lea
adc
add
test
jl
and
ret
test
fwait
ja
roll
movsb
and
push
cmp
inc
push
lahf
iret
outsl
lcall
fwait
jnp
in
xor
repnz
pushf
insl
lcall
stos
in
out
add
insl
mov
clc
inc
imul
sbb
sbb
out
hlt
sbbb
and
in
sub
mov
jne
push
sbb
int3
repz
or
ret
add
fwait
xchg
push
cvtpi2ps
mov
sbb
jge
int3
mov
dec
dec
fldl
cwtl
pop
pop
mov
cmpsb
rclb
cmp
lock
cs
lret
dec
in
xchg
sub
mov
mov
out
xor
test
mov
in
xchg
pop
push
loopne
movsb
cli
sbb
pop
dec
enter
notl
dec
inc
subl
scas
or
test
ficompl
mov
and
mov
aad
inc
addr16
dec
outsb
ret
mov
or
leave
test
jb
jne
inc
pop
addr16
push
arpl
push
and
cwtl
movsl
jmp
loopne
cmp
aam
lret
fsts
in
lcall
movsl
sbb
add
mov
andnps
adc
cmp
fwait
xchg
push
dec
movsb
xlat
movsl
test
call
jmp
mov
mov
std
cmp
cmp
jmp
cmp
lahf
test
outsb
xor
inc
adc
inc
mov
fstl
jmp
testb
loopne
int3
add
mov
ds
mulb
bound
int3
pusha
sahf
sub
jns
push
cmp
push
pop
lea
mov
call
or
dec
out
or
outsb
lock
push
inc
cmp
pop
inc
stos
movsl
aas
pop
mov
test
pushf
cmp
jo
xor
mov
mov
dec
test
mov
data16
std
jo
mov
iret
push
pusha
jle
jle
ss
xor
or
repz
int
jnp
pop
cwtl
lods
inc
mov
test
out
mov
out
push
push
inc
lcall
fwait
jge
mov
dec
sahf
sbb
rol
xchg
popa
jo
mov
fiaddl
lahf
xchg
cld
or
mov
sbb
lret
lahf
dec
sbb
sub
mov
mov
cs
cmp
ja
cmc
jae
cmpsb
push
loope
das
es
cmpsb
push
arpl
dec
inc
ss
dec
andl
xchg
sub
cli
cld
mov
in
ror
addr16
mov
out
shufps
push
push
cmc
negb
push
mov
mov
add
cmp
shll
lcall
gs
movsb
dec
repz
mov
dec
adc
mov
xchg
inc
jbe
cmp
mov
subb
cli
sub
imul
shl
lock
fldcw
mov
mov
jb
mov
sbb
push
mov
out
push
rol
inc
into
xor
aad
dec
imul
mov
jns
mov
lea
or
jns
mov
xor
lea
pop
and
icebp
lcall
call
inc
add
clc
push
popa
addr16
sub
or
mov
add
jecxz
adc
aam
push
mov
out
out
xor
adcb
ds
mov
inc
notb
fstpt
test
jae
fisttpll
lcall
inc
arpl
cwtl
and
cld
cld
push
sti
nop
cmp
call
fidivrl
int
xor
or
jmp
cmp
std
in
add
mov
mov
pusha
adc
pop
jno
lret
cmp
clc
inc
pop
jg
call
stc
wrmsr
push
orl
jbe
into
rol
cmp
fnstenv
jns
adcl
mov
mov
pop
insl
inc
and
in
fsqrt
or
jmp
jne
in
xchg
imul
and
fsubl
jg
push
arpl
out
jmp
sub
stos
xor
mov
adc
inc
xchg
mov
jg
cld
adc
xchg
cmpsl
cwtl
ss
sahf
mov
fxtract
in
sub
mov
adc
push
xor
xchg
cwtl
adc
xchg
dec
cmp
sub
shll
in
cltd
pusha
mov
adc
insb
mov
xchg
mov
or
movsl
test
hlt
aaa
xor
popl
test
popf
pop
bound
aam
pop
sarl
sub
mov
jecxz
adc
stos
aad
addr16
xchg
xchg
push
repz
and
sub
xor
mov
popf
mov
or
add
inc
cld
jb
lods
or
mov
in
inc
mov
cmc
aad
sub
loopne
inc
cmp
shrb
in
cwtl
stc
inc
in
pop
cmpsb
scas
addr16
stc
stos
into
and
push
dec
adc
outsl
loop
sub
cld
pop
sub
and
or
push
ror
in
std
data16
jnp
fnsave
test
cmp
xchg
xchg
stos
and
cld
jnp
movsb
dec
or
sub
pop
outsl
jbe
test
pop
addl
mov
cli
xchg
fwait
inc
clc
sbb
popf
fcoml
cmp
mov
jb
add
adc
dec
mov
out
or
dec
mov
mov
mov
bound
push
mov
shll
mulb
cmpl
sub
xchg
int3
xchg
bound
inc
mov
and
xor
dec
sub
jge
mov
pusha
mov
insb
sbb
outsb
pop
int
mov
in
and
jmp
fmull
xchg
xchg
sbb
std
outsl
jmp
orb
sub
into
dec
rcrl
and
clc
jns
subl
test
jbe
or
leave
xorl
dec
pop
cmp
leave
bound
dec
sub
adc
loope
inc
out
jnp
pop
push
add
xchg
in
je
rorl
push
xchg
mov
test
push
push
test
sarb
lds
mov
add
mulps
sub
loopne
and
pusha
mov
fbstp
mov
lea
mov
outsb
popf
stos
in
cli
mov
add
out
in
pop
jg
jp
stc
xchg
pushf
sbb
aam
popf
fs
or
adc
lock
int
jne
and
pusha
fmulp
cld
in
mov
xchg
les
into
or
out
out
sbb
xchg
stos
adc
fdivrp
icebp
insl
pop
inc
push
inc
repz
fidivl
mov
popa
add
dec
sub
daa
aam
push
int
mov
ret
adc
cmp
stos
sbb
mov
mov
sbb
mov
rcl
cmp
icebp
cs
cmpsb
lcall
test
scas
cmp
repz
cwtl
pop
mov
xchg
xor
cmpsb
in
nop
lods
call
fildl
dec
cmp
xor
ficomps
mov
in
fs
xchg
out
in
mov
ljmp
pop
mov
fs
push
push
fcmovu
sub
inc
inc
add
enter
inc
adc
js
pop
scas
daa
scas
ret
aaa
or
test
cmp
mov
nop
jnp
jle
and
dec
jnp
loop
movsb
aam
mov
mov
in
sub
mov
lahf
sub
imull
xchg
stc
xchg
pop
or
xchg
add
dec
cli
fisttpl
in
stos
sub
les
outsl
fwait
lea
inc
fwait
sub
mov
push
xchg
jne
rol
xchg
lret
repz
data16
cli
mov
cld
scas
sub
das
bound
add
cmpsl
data16
xchg
mov
das
in
rcll
cmp
test
imul
cmpsl
ss
adc
imul
jae
les
lret
test
movsb
adc
fstpl
pusha
mov
cmp
sub
sarb
fisttpl
rolb
mov
fwait
inc
jmp
pusha
xchg
dec
mov
loopne
add
das
scas
fdivl
pushf
sub
adc
shlb
dec
jno,pt
jns,pn
fidivrl
cmpsl
imul
leave
lea
pushf
dec
repz
push
iret
adc
jns
mov
jae
push
test
lret
or
cmp
jb
stos
mov
jne
ja
sahf
jle
pop
mov
pop
or
and
paddq
out
cmc
imul
cld
add
mov
aas
shrl
xchg
insl
sub
pop
data16
cmpsb
push
push
mov
pop
outsl
and
push
ret
sbb
sbb
push
insl
negb
fcomps
imul
or
or
ret
fsubp
repnz
sbb
aad
pop
add
push
adc
adc
push
cmp
je
daa
dec
test
adc
xchg
push
ja
out
test
cmc
push
mov
mov
pop
add
mov
xchg
lcall
adc
lea
mov
arpl
xchg
ror
sub
sbb
gs
dec
xchg
imul
aam
repnz
cwtl
outsl
hlt
jle
ret
push
aas
pushf
jae
imull
sahf
jnp
dec
xchg
mov
mov
inc
test
lds
jg
orl
pop
adc
mov
xor
add
in
add
filds
sahf
in
sub
pop
cs
pop
xchg
cmp
pop
repnz
pop
popf
push
push
push
mov
mov
push
sarb
push
xor
push
jecxz
jb
incb
fs
push
push
and
sub
sbb
lret
pop
inc
fistl
jno
pop
dec
xchg
sbb
mov
sub
dec
sbb
jbe
nop
dec
cli
fiadds
and
add
sub
push
inc
icebp
inc
xchg
mov
adc
adc
mov
loope
in
aaa
arpl
or
push
cmovno
pop
dec
xor
push
jp
jbe
ds
xchg
dec
inc
jns
cmp
dec
mov
shr
push
into
inc
and
jbe
mov
fisttps
into
push
ret
ds
mov
mov
push
loope
or
pop
cs
imul
sub
xchg
mov
mov
jnp
cmpsl
jno
add
adc
pusha
inc
mov
test
test
movsb
mov
sti
xchg
and
xor
and
pop
mov
out
je
icebp
sahf
in
jecxz
sbb
push
mov
call
push
mov
jno
fdivrp
sub
mov
sub
jg
mov
cmp
jo
push
jecxz
gs
pop
les
add
ljmp
int3
movsb
divb
lds
aad
sub
pop
cli
sbb
outsl
add
je
scas
or
pushf
scas
dec
pushl
jmp
es
adc
pop
add
pusha
xchg
bound
stc
jecxz
mov
std
stos
jp
ficoml
add
scas
leave
inc
mov
mov
jae
sub
mov
mov
call
xor
push
stos
xor
enter
mov
enter
push
xchg
inc
pop
cmpsb
xchg
add
adc
repnz
xchg
enter
test
push
aad
push
fiaddl
xchg
lahf
or
push
mov
lods
ret
push
dec
fcoms
cmp
dec
inc
pop
or
aaa
addb
or
sbb
inc
sti
insl
push
add
ljmp
xor
scas
mov
outsb
sbb
fstl
fsubr
sbb
jns
jmp
lahf
xchg
cwtl
arpl
in
cmp
test
std
dec
sti
call
dec
ds
cltd
xchg
je
outsb
or
jmp
or
sbbl
cs
lods
ret
sbb
cmpl
or
xor
sbb
sti
mov
push
adc
addr16
cmp
sub
pop
dec
dec
push
mov
push
mov
cmc
adc
inc
pop
jl
je
enter
movsl
push
jl
inc
addl
cmp
test
iret
insl
scas
mov
inc
dec
sbb
nop
cmp
add
mov
cmpsb
popf
scas
shr
lods
adc
push
sub
stos
adc
int3
cltd
ret
jno
push
dec
mov
ret
fdivrl
ret
stos
or
andb
jno
mov
aam
cltd
pop
push
cmp
mov
outsb
add
rcll
add
ljmp
jl
test
cmp
inc
out
mov
lahf
push
add
xor
int
jb
repz
mov
in
lahf
xchg
stos
rcl
or
inc
std
xchg
ret
lsl
jno
cmp
fisubs
pop
notb
cmpl
jle
dec
lcall
enter
xchg
fsubs
roll
out
inc
ret
mov
inc
int3
pusha
pop
stos
int
outsl
inc
jg
adc
aaa
jl
inc
mov
add
in
lock
sbb
insl
std
adc
dec
stos
mov
std
push
sbb
mov
inc
popa
jae
ret
jb
add
adc
enter
jle
xchg
xchg
mov
push
add
repnz
lds
sub
cmc
inc
ja
ljmp
bnd
mov
jge
cli
xor
adc
rcrl
addr16
pop
imul
xor
adc
clc
loopne
lahf
jecxz
push
lahf
negb
roll
fidivl
inc
sbb
or
jecxz
mov
or
xchg
sbb
cmpsl
pop
stc
cmp
pushl
jmp
adc
xchg
out
adc
sub
lahf
pop
addr16
rol
jmp
mov
daa
adc
ss
loope
flds
xchg
mov
mov
movsb
jmp
xor
adc
test
cs
ljmp
fcomps
test
dec
out
addr16
inc
dec
or
mov
adc
daa
sbb
pop
orl
pop
nop
xlat
je
pusha
dec
daa
cmp
or
or
sbb
iret
inc
mov
mov
mov
cmp
pop
notb
aaa
inc
pop
push
xor
ret
add
test
je
orb
outsl
out
repz
les
xor
les
add
dec
ret
jno
in
shll
nop
icebp
outsl
xchg
fadd
pop
push
stos
fdivs
inc
cs
push
daa
xchg
addr16
inc
cmpsl
jne
dec
mov
adc
in
mov
pop
out
lods
lret
test
xchg
test
imul
cmpsl
sub
addr16
mov
and
ljmp
cmp
sbbl
lahf
cs
xchg
jecxz
pusha
mov
adc
adc
sub
dec
cmpsl
mov
push
inc
repz
dec
fidivrs
mov
mov
jge
or
adc
sbb
out
xchg
cli
jnp
data16
inc
jno
push
jg
mov
test
pop
rcrb
add
jb
xchg
mov
push
pop
arpl
jns
ljmp
aad
pop
andl
xor
or
mov
inc
cmp
add
loopne
sbb
js
or
add
in
mov
inc
xchg
and
je
cs
mov
pushf
addr16
push
pop
daa
adc
in
mov
sti
xchg
mov
sahf
sub
mov
daa
sub
and
cmpsb
add
add
out
add
xor
or
inc
push
pop
pusha
adc
jnp
lds
scas
dec
hlt
pushl
lret
pop
lret
xlat
fwait
xor
pushf
sub
shll
xchg
mov
xlat
cmpxchg
loope
in
psllq
ljmp
jp
add
sbb
pop
push
push
xor
icebp
xlat
sub
add
inc
repnz
sbb
or
dec
push
push
xor
inc
lea
outsl
mov
cmpsl
sub
outsl
dec
and
jo
push
mov
nop
gs
push
es
mov
mov
sbb
mov
icebp
sti
gs
jbe
xchg
popa
pop
int
and
or
push
pushf
jp
cmp
cli
outsb
pop
add
mov
push
pusha
sbb
in
push
cmp
push
aas
sbb
cs
mov
sti
shll
rcrl
and
imul
push
int
into
inc
sub
pop
pop
pop
mov
aas
rorb
or
adc
mov
movsb
push
and
fiadds
int3
pop
push
mov
xor
mov
sti
mov
std
push
xchg
mov
stos
sbb
or
cli
test
aam
xchg
jecxz
daa
or
adc
push
nop
push
addr16
loope
lods
dec
push
inc
push
cmp
cmc
movsl
xchg
call
out
cmp
lods
ja
loope
mov
nop
push
sbb
add
jecxz
and
lea
mov
adc
add
push
adc
ret
shll
cmpl
xchg
mov
mov
add
inc
sub
push
dec
lcall
push
jno
or
aaa
leave
mov
jne
pop
push
shll
sbbl
jle
lea
pop
sub
aam
dec
mov
ret
sbb
mov
scas
and
daa
xchg
inc
xchg
push
lods
cld
xchg
mov
sub
jbe
mov
in
test
in
mov
shll
sahf
add
daa
jbe
and
lods
lock
mov
xor
dec
scas
and
jge
add
frstor
cmp
rcr
in
movsb
pusha
jle
test
xchg
push
mov
data16
push
arpl
mov
fnstcw
mov
je
or
in
std
mov
fmul
fstpl
out
sar
ret
xor
dec
enter
std
andb
ja
into
mov
rcrb
jbe
popf
jne
cmp
orb
push
xchg
and
jecxz
cmc
sarb
inc
mov
xchg
push
adc
pushf
aaa
je
sbb
and
lret
cmp
inc
test
sub
idiv
mov
enter
pop
inc
push
dec
xchg
or
adc
pusha
push
gs
or
pop
xchg
mov
out
aas
loope
cmp
sub
out
xchg
dec
mov
push
loopne
ret
mov
pop
mov
pop
je
push
and
add
fadds
and
xchg
adc
jae
inc
rclb
mov
xchg
sbb
mov
mov
loop
push
xor
aas
fidivl
insb
lods
cmp
std
cmp
mov
cmpsb
pop
pushw
daa
icebp
mov
jo
add
cmc
xchg
xchg
rep
fsubrp
mov
cs
inc
je
push
scas
in
mov
shll
fcoml
in
add
sub
and
sbb
mov
mov
inc
adc
pop
lock
test
xchg
dec
loope
loopne
dec
ret
cmp
outsb
and
and
sub
aam
pusha
pop
or
pop
xor
adc
push
enter
outsl
sahf
pop
inc
pop
push
pop
or
pop
and
sub
or
fsubs
add
sub
gs
test
jp
int
std
lret
sbbl
fwait
test
lret
scas
shrb
pop
pop
cmpsl
clc
push
dec
mov
lcall
xor
add
xchg
sahf
leave
push
sbb
pop
fistpll
xchg
jnp
lea
orl
fmul
ret
decl
mov
ja
sub
jmp
adc
xchg
push
cli
sahf
insb
jge
inc
pop
cmp
push
rcrb
es
test
insl
cmp
lods
dec
jns
ret
test
cmp
mov
test
cmp
xchg
dec
cmp
les
cmp
jo
cli
mov
mov
add
and
push
jnp
sbb
and
fidivrl
jbe
in
int3
pop
js
mov
dec
mov
dec
scas
out
out
aam
sbb
mov
scas
pop
nop
fs
jle
fstpt
ss
arpl
ja
sbb
sbb
je
xchg
mov
sbb
outsl
lods
ret
cli
adc
scas
push
xor
pusha
jne
aam
or
sbb
cmp
aad
push
jne
fld
sbb
add
or
xchg
and
push
or
xor
mov
daa
and
in
ret
and
leave
adc
push
inc
mov
jns
cli
shrl
push
fisubrl
addr16
fisubl
add
adc
push
jp
mov
mov
xchg
xchg
stc
sbb
repnz
dec
loop
arpl
insl
cli
fs
aad
jns
and
jmp
xchg
stc
cmpsb
lds
loope
jnp
pslld
jle
mov
sub
icebp
dec
jmp
iret
cli
fmull
outsb
das
mov
fidivrl
jmp
shrb
bound
in
loope
sub
iret
sbb
ljmp
iret
or
das
jecxz
icebp
add
xor
pop
out
insl
sbbb
shll
out
or
pop
pushf
rcrl
push
test
shlb
popa
mov
idivb
mov
fbstp
stos
in
mov
xchg
movsl
movb
pusha
dec
in
cld
xchg
fs
lods
sbb
mov
push
jae
in
ret
jno
sub
divl
dec
sub
ja
pop
icebp
jp
in
pop
push
xor
mov
push
xorl
mov
test
setne
cltd
mov
cmpsb
int3
cmp
call
inc
fisubrs
call
xlat
inc
fdiv
in
mov
je
jb
imul
leave
xchg
xor
mov
push
xor
movsl
in
mov
cs
stos
push
xor
adc
sar
aaa
hlt
push
rorb
or
mov
sub
inc
jl
cmp
dec
pop
adc
call
adc
mulb
xchg
cld
xchg
jl
mov
out
clc
sub
cmpl
int3
dec
fldt
mov
xchg
in
cs
call
jae
mov
movsb
xchg
jge
mov
xchg
popf
cmp
or
or
test
movsb
out
and
push
pop
cmpsb
fcomi
xor
mov
and
aaa
fdiv
sub
push
jge
cmpsl
add
cmp
cs
and
sbb
dec
cwtl
jmp
std
xchg
pop
push
and
xchg
cmpsb
add
cmpl
idivl
andb
mov
ss
push
pushf
das
mov
pop
stc
mov
daa
enter
aad
movsl
mov
jmp
cs
pop
int
and
loop
call
mov
int
adc
sbb
adc
arpl
jns
std
cmpsl
lds
int3
arpl
inc
pop
or
rolb
inc
sbb
or
adc
cmpl
add
in
dec
inc
xlat
lret
push
push
push
lret
jmp
orl
in
scas
mov
jbe
imulb
xor
pop
lock
test
scas
mov
push
pop
mov
mov
dec
mov
aam
xchg
xor
adc
inc
push
mov
cmpsl
scas
jp
pop
int
in
push
xor
popa
aaa
cmp
and
mov
and
xlat
mov
je
xor
push
leave
jle
lods
and
pop
adc
mov
fstpt
aad
shll
add
or
je
cmpsl
out
push
mov
into
mov
cmp
out
scas
add
add
rclb
inc
movsb
add
mov
daa
xor
jns,pt
dec
mov
sub
das
push
xchg
mov
fmuls
adc
mov
sub
adc
inc
inc
lds
cmp
mov
lods
sbb
jmp
or
jb
adc
mov
xor
adc
aam
adc
pop
pop
xor
out
xor
fsubs
je
xchg
push
ds
dec
mov
cmp
stos
jg
pop
add
std
int3
pop
bound
ss
rolb
sub
xchg
lss
inc
push
fnsave
cli
cwtl
jg
push
inc
jecxz
nop
add
cmp
jecxz
jmp
dec
mov
repz
push
fwait
inc
adc
notl
ljmp
lcall
int
les
pop
mov
inc
lahf
out
test
jae
mov
outsl
imul
xor
push
in
mov
jbe
test
lret
adc
xor
pop
mov
adc
jae
ljmp
test
sub
js
test
mov
push
mov
push
psubw
push
xchg
inc
push
cmp
push
dec
popa
xchg
lret
out
movsl
data16
mov
not
mov
pushl
aaa
mov
xor
xor
cmp
add
cmp
cmpsb
add
pop
loop
roll
jae
out
xchg
mov
push
scas
jmp
add
lret
sbb
in
jb
push
nop
cmp
stos
cmc
mov
adc
sahf
loopne
push
sbb
test
loop
sub
add
add
dec
popf
and
or
pushf
loop
sbb
orl
sub
js
repz
sbb
aas
xchg
rcrl
mov
pop
int
inc
sahf
xor
sbb
push
push
fistps
cmc
sbb
in
xor
xor
jecxz
jmp
xor
cmpl
fs
sbb
enter
cmp
aaa
inc
add
fisubrs
fisubrl
insb
xlat
pop
fwait
fs
push
and
in
cld
lret
orl
divl
loope
mov
popf
xchg
gs
add
xchg
lret
sub
add
loope
jo
pop
movsl
xchg
inc
ljmp
lds
outsl
mov
loopne
push
cmp
fldt
xchg
shrb
aam
jge
call
mov
sti
mov
sbb
xchg
or
and
dec
dec
sbb
cmpsl
pop
adc
dec
cli
mov
sub
mov
mov
push
mov
insl
mov
mov
out
cmpsb
in
pop
mull
jo
sub
inc
cltd
jecxz
pop
test
mov
push
mov
jae
cltd
lods
mov
lahf
push
add
mov
or
and
push
in
daa
jl
in
inc
mov
test
xchg
xchg
push
out
cmp
cmc
loope
inc
ret
sbb
push
push
add
sbbb
sub
xor
fwait
pop
adc
or
loop
xchg
xchg
mov
adc
bound
mov
hlt
mov
adc
xlat
dec
xorl
pusha
in
repz
dec
cli
sbb
lods
mov
sbb
test
int
fwait
dec
out
fwait
sub
and
xchg
jle
sub
test
popf
mov
cmpsb
mov
fisubrs
movlps
xlat
out
sbb
rsqrtps
sub
loop
mov
mov
test
jns
imul
stos
and
pop
jo
inc
cmp
jg
lds
sub
sbb
mov
inc
dec
pop
xor
int
lcall
dec
movsb
adc
inc
jbe
jae
dec
insl
xor
mov
lcall
pop
jbe
test
xor
arpl
dec
mov
push
lock
lds
xor
scas
mov
xlat
into
in
es
movsl
lock
mov
aas
mov
xchg
shrl
insb
cld
dec
popa
sub
adc
lret
push
fisubl
dec
ficomps
cwtl
jbe
aad
push
rcrl
aaa
lret
insl
mov
pushf
mov
mov
js
sbb
xchg
pop
pop
or
mov
pop
es
pop
lods
push
xchg
or
xchg
andnps
push
hlt
das
lea
add
arpl
xchg
cmp
ds
dec
pop
rorl
jno
fdivl
xchg
icebp
or
je
xchg
ret
repz
cli
xchg
movsl
aam
jge
cs
cmp
mov
xchg
iret
cmp
enter
out
jo
mov
fnstcw
sbb
xor
fwait
push
lds
and
lahf
bswap
xchg
jo
movsl
cltd
push
mov
sbb
sahf
dec
addr16
jecxz
cmp
clc
push
dec
adc
lds
aam
es
sub
sub
das
jmp
and
int
lods
inc
loope
adc
sbb
mov
push
lcall
movsl
icebp
dec
add
ficomps
cmp
pop
push
xchg
into
jp
lds
repz
mov
ljmp
imul
mov
pop
sub
mov
cmp
aad
inc
mov
scas
fldcw
xchg
das
pushf
cmp
xchg
pop
sahf
out
xor
push
mov
mov
mov
repnz
or
mov
dec
loope
aaa
push
test
and
cmp
add
xor
dec
insl
repz
add
fidivs
add
or
inc
in
out
fld
push
popl
stc
aam
push
pop
or
mov
not
out
mov
inc
and
data16
iret
and
and
enter
mov
dec
sbb
pop
cwtl
mov
lods
aaa
push
xlat
or
cmpsb
leave
sub
lret
arpl
daa
sbb
stos
adc
mov
insl
xchg
dec
cmpsl
dec
fisttpl
ljmp
push
out
xchg
jnp
stc
inc
dec
xchg
gs
leave
mov
xlat
mov
sti
pop
sub
sbb
mov
dec
subb
sbb
cmp
in
or
loopne
cmpsl
aas
jbe
and
push
aaa
dec
pop
pop
pop
imul
jo
cmp
dec
lahf
in
shr
xor
and
fs
ds
stos
jns
andl
test
mov
iret
ja
sub
fsubrl
addb
test
popa
in
sbb
stc
out
insb
arpl
fs
jp
std
fistpll
daa
loope
cltd
cmp
jne
lcall
xchg
jnp
jno
xor
pop
ss
adc
cmc
je
mov
in
pop
repnz
sub
mov
mov
sbb
loop
imul
or
add
pushf
inc
pop
mov
push
add
sbb
add
cmpsb
xor
repz
imul
add
movsbl
ret
pop
mov
pop
stc
adcl
push
lds
icebp
jecxz
cmp
push
xchg
xchg
mov
add
cmp
stos
ror
mov
dec
imul
test
cmp
xchg
mov
xchg
pcmpgtb
dec
rorl
xchg
lds
and
xchg
clc
xor
outsb
adc
dec
or
scas
sahf
push
xchg
xchg
jle
std
enter
and
je
jnp
fldcw
cmpsb
into
inc
es
cltd
lds
mov
pop
jle
mov
subl
lret
in
push
pop
inc
cltd
fidivrl
jo
pop
clc
fidivl
inc
sbb
daa
inc
cs
dec
sbb
mov
cli
mov
dec
sbb
aad
xchg
cmp
es
xchg
daa
jnp
jmp
cmp
sbb
dec
xchg
stos
stos
xchg
stos
addr16
dec
push
inc
int
add
test
jge
pop
mov
sub
and
leave
inc
push
cmp
or
stos
pop
add
cmovl
cmp
es
lock
std
mov
shrb
push
or
ret
dec
cmp
lcall
xchg
xchg
ds
jbe
test
or
and
enter
xchg
test
in
mov
or
imul
jge
jmp
int
mov
gs
push
ret
sub
jge
inc
adc
scas
pushf
fsubr
sub
pop
dec
rcrl
mov
mov
fucomp
mov
sbb
push
dec
cmp
cmp
outsb
jnp
aaa
sti
daa
dec
shlb
ficoml
xchg
or
pop
xor
pusha
mov
and
cwtl
xor
stc
dec
adc
sbb
es
push
es
or
jecxz
push
jo
add
mov
fcmove
das
jae
or
fbld
and
sbbl
mov
lret
icebp
aad
mov
fcoms
jb
mov
shll
sbb
or
jecxz
xchg
xchg
jnp
gs
jb
xor
mov
scas
mov
stos
ficomps
mov
rcr
xor
jns
push
and
mov
inc
xchg
pop
pop
adc
fildll
popa
jo
cmp
negb
xchg
popf
hlt
push
xchg
pop
or
popa
cld
gs
or
jae
inc
insb
jae
mov
mov
adc
cmpsb
cmp
mov
adc
int
pop
imul
mov
jg
mov
ficomps
int
xor
or
into
aas
imul
sub
mov
les
popa
inc
sbb
xchg
xchg
sbb
push
xor
out
das
js
mov
xor
loop
pusha
jg
dec
ss
cwtl
jbe
add
sub
xor
mov
inc
dec
aam
dec
loop
push
iret
adc
cmpsl
dec
lcall
adc
cmpsb
or
inc
shlb
pop
xchg
call
add
jbe
inc
cmpsb
out
cmp
repnz
sbb
repz
mov
jo
adc
mov
aad
or
mov
add
cmp
jg
in
xchg
cmpl
gs
mov
jecxz
mov
addr16
sti
fisttps
jl
xor
clc
mov
shlb
cmc
fisttpll
mov
mov
cs
xchg
jecxz
xor
mul
sub
pop
jns
inc
nop
dec
shrb
out
ljmp
ja
cld
outsl
icebp
add
outsb
divl
mov
scas
test
push
jns
sbb
sbb
nop
outsb
fcomps
sbb
jecxz
mov
jge
xchg
inc
aam
fnstenv
icebp
xorl
cmpb
jg
dec
mov
sub
pop
push
mov
jle
mov
cmp
and
not
out
jge
in
xor
push
rol
gs
sarb
enter
ja
bnd
fwait
dec
mov
js
int
jecxz
pop
jbe
pop
inc
out
negl
ds
mov
lea
pop
test
gs
sbb
js
add
dec
adc
sub
mov
seto
stc
stc
iret
mov
push
lods
pop
loop
aas
rolb
or
mov
sub
mov
dec
jbe
lahf
push
pop
lea
test
dec
adc
push
mov
int
jno
cltd
mov
sbb
int3
and
mov
sub
shrd
cmp
fucom
cmp
jecxz
sbb
mov
popf
movsb
push
sbb
xor
in
cmp
cli
sar
mov
icebp
adc
clc
mov
dec
stos
ret
xor
or
xchg
mov
push
jmp
out
dec
mov
mov
addr16
or
nop
mov
fistps
mov
scas
idiv
push
xchg
jecxz
out
jmp
jns
sub
arpl
in
dec
dec
and
cmp
jge
add
push
adc
jno
add
andb
fnsave
jge
push
jb
inc
clc
xlat
aad
out
jg
add
mov
lds
test
pop
fsubrs
outsl
shrl
cmpl
cltd
scas
and
jecxz
mov
cmp
push
ficomps
mov
jns
movsl
lahf
out
test
sbb
lret
loopne
xchg
test
xchg
cmp
jg
aad
mov
adc
pop
fst
add
mov
mov
fstps
cmpsl
inc
cmc
mov
aad
sbb
or
cs
lods
lret
mov
mov
pushf
popf
and
jne
sub
lods
ror
xchg
xor
cmpb
mov
in
shll
hlt
jno
lahf
loopne
push
lods
mov
push
iret
mov
adc
push
xchg
out
loop
movsb
arpl
push
out
jnp
jge
xchg
add
movsl
or
andw
xor
lret
sbb
in
mov
xchg
push
and
cmp
dec
cmpsl
mov
xor
ja
adc
or
push
dec
je
or
sbb
ret
push
sahf
ret
loopne
arpl
mov
es
xchg
movb
cmp
mov
inc
sarb
and
fs
ss
and
pop
mov
xchg
and
fcmovbe
lahf
imul
inc
fldl
adc
dec
out
imul
push
add
fsubl
movsb
xchg
and
adc
into
test
mov
mov
mov
pop
cltd
out
cltd
sub
and
mov
or
iret
lds
xor
loop
fadd
rcrl
or
ss
outsl
loop
test
mov
adc
loopne
enter
mov
xor
dec
mov
loopne
and
mov
mov
sub
stos
sub
pop
sti
xor
jnp
add
out
fsts
xor
jmp
push
push
lahf
loopne
lea
jmp
fidivl
cmpsl
mov
andb
enter
ret
add
adc
mov
push
xor
jmp
jmp
push
lds
popf
rorl
push
xor
mov
mov
pop
or
jno
sub
pop
xchg
int
clc
dec
jmp
stos
loopne
shl
push
sub
push
xchg
lock
iret
push
add
pop
xchg
aas
imul
sub
test
inc
push
jno
mov
test
push
and
mov
cld
add
inc
rclb
cmp
inc
add
fistps
mov
testb
mov
push
lock
xchg
dec
icebp
and
adc
or
push
mov
xchg
repz
add
push
sarb
fwait
and
je
movsl
clc
push
mov
inc
pop
cltd
int3
sub
das
movsb
mov
dec
xor
inc
filds
mov
sub
mov
in
cmp
pop
pusha
cwtl
out
xor
pop
imul
imul
jns
xor
stos
fsubl
mov
jge
daa
cld
rep
mov
lahf
jae
pop
aas
shl
jne
sbb
insl
pop
aam
pop
sbb
xchg
cltd
inc
jl
or
ficoml
jl
adc
imul
aad
mov
add
sub
ret
movsl
mov
mov
les
or
mov
fstl
iret
dec
jecxz
jae
push
scas
lea
dec
push
mov
or
scas
push
sub
push
mov
mov
push
mov
loopew
push
stos
loopne
jnp
mov
test
sti
ljmp
sbb
mov
pop
sbb
sbb
gs
dec
and
jae
push
sbb
adc
or
ret
dec
fldenv
cld
or
insl
cmp
mov
into
and
rcr
insb
fcomi
xlat
dec
subl
mov
adc
and
dec
addr16
jg
enter
lods
adc
pop
xor
pop
mov
or
xor
loop
or
into
loope
push
stos
ja
aaa
subl
test
and
mov
sti
outsb
imul
push
std
cmp
pop
out
mov
cmp
dec
out
pop
je
or
insl
and
ret
pop
test
jb
sbb
imul
lods
add
cmpsb
inc
cwtl
icebp
ret
rorl
push
enter
push
out
rorl
subb
mov
jl
ljmp
and
sbb
lret
cmp
pop
adc
sbb
test
arpl
adc
pop
test
les
mov
add
inc
repz
xchg
out
xchg
sub
fimuls
fisubs
movsb
int3
adcb
je
enter
jbe
mov
js
xor
inc
lahf
jb
fs
clc
jno
xchg
push
clc
shlb
xor
mov
xlat
add
shll
push
cltd
lcall
mov
xchg
imul
mov
ljmp
icebp
xchg
gs
repz
in
mov
nop
outsl
mov
sahf
xchg
orb
lahf
out
fs
mov
mov
jnp
mov
int3
test
test
or
cmp
out
or
das
cmpsl
aam
adc
add
lcall
fnstsw
lods
xchg
cli
ret
stos
cltd
push
stos
sarb
or
sub
adc
ja
adc
and
bound
std
pop
or
dec
jg
cmp
push
jecxz
ljmp
xor
std
mov
inc
enter
addb
xor
and
test
stos
leave
out
lret
cmp
cwtl
inc
jnp
ja
lods
jno
in
aad
dec
xchg
fcmove
stc
jbe
push
daa
xlat
popa
js
cmp
stc
dec
xor
lods
rclb
int3
jo
fimull
adc
repnz
xchg
adc
adcl
sub
scas
xor
adc
mov
add
sub
dec
imul
lcall
pushf
sbb
jp
lahf
xor
hlt
sub
aad
pop
inc
dec
add
arpl
jecxz
pushf
das
int3
btsl
jge
inc
mov
sbb
imul
cs
stc
inc
jle
push
mov
fisttpl
shr
movsl
pop
jbe
pop
jecxz
adc
cwtl
mov
push
jnp
cmpsb
jns
mov
add
enter
pop
popl
xchg
push
cmp
cmpsb
aas
lds
add
add
call
fisubs
xor
ja
xor
jge
outsl
int3
ret
or
jne
jl
push
mov
test
push
pop
xor
sti
mov
add
xlat
mov
fs
loope
xchg
sarl
js
cmc
cs
dec
mov
pop
dec
popf
mov
jns
xchg
or
cmpb
push
or
jne
nop
mov
nop
add
ret
sbb
xor
xchg
scas
jl
mov
bound
ds
and
push
pop
mov
sub
cmp
pop
cmp
push
sbb
inc
pop
mov
mov
cmpb
pop
in
mov
pop
jge
mov
in
cmc
cwtl
mov
dec
inc
popf
test
push
sbb
sub
notl
mov
and
mov
imul
sbb
push
data16
test
add
jb
jl
cld
xchg
fstpt
push
cmp
and
dec
mov
mov
loop
and
cmp
pop
cmpb
xchg
cmc
test
xor
leave
stc
dec
je
xchg
sti
or
mov
out
cmp
pop
jne
imulb
jne
jl
mov
or
ret
int
sub
fimuls
dec
es
jno
cmp
andb
add
repnz
sarl
jae
pop
inc
push
xlat
pop
xchg
movd
and
dec
add
lds
mov
imul
adc
mov
call
pop
sbb
sbb
and
push
icebp
scas
mov
fisttpl
test
iret
lods
call
cmp
movsb
xlat
test
mov
push
cld
sbb
pop
jo
insb
mov
adc
int
lds
cs
push
pop
ljmp
loop
in
cs
pop
inc
adc
loop
xchg
jle
fwait
add
inc
pop
nop
mov
pushf
and
pop
stos
in
add
in
inc
push
pop
lock
xchg
ljmp
or
xor
cmp
adc
in
cmp
in
or
clc
repnz
dec
and
mov
cmpsb
es
call
hlt
clc
xor
cmp
imul
stos
mov
adc
dec
sbb
jmp
cmp
test
mov
and
sbb
xor
loopne
add
jno
and
pop
mov
sbb
insb
pop
inc
add
add
mov
or
push
arpl
loop
cmp
dec
cmp
orl
adc
loopne
les
imul
jae
push
out
mov
adc
adc
pop
ss
add
mov
shl
stc
or
adc
fucom
mov
subl
add
mov
sbb
jl
inc
mov
jo
in
sub
repnz
stos
mov
mov
fwait
mov
mov
out
or
lds
pop
jge
xor
pop
addl
dec
or
out
inc
outsb
mov
inc
gs
xorl
cld
testl
pop
outsl
lock
sbb
sbb
movsb
jmp
push
jb
xchg
hlt
jae
sub
ljmp
in
add
repnz
cmpsl
sbb
pop
je
dec
or
pop
jp
xor
mov
insl
sahf
lcall
iret
cmc
mov
lock
mov
xlat
xor
adc
mov
shl
out
sbb
cli
pop
mov
and
pop
inc
push
cwtl
inc
jmp
leave
or
scas
mov
sbb
mov
sub
test
lea
adc
ljmp
cmp
mov
mov
add
pop
or
xchg
outsb
scas
push
bound
xchg
sti
lods
and
les
ljmp
in
add
mov
mov
and
inc
inc
jne
std
or
arpl
dec
sahf
xchg
fcoms
mul
aas
mov
imul
inc
xchg
leave
movsb
mov
sub
dec
xchg
insb
cltd
pop
gs
aad
sbb
aas
icebp
mov
pusha
xchg
cld
mov
sar
jge
test
push
jg
pop
mov
sbb
cld
popf
test
fcmovnu
jl
in
mov
xchg
pop
push
rcrl
jle
pop
ds
xlat
dec
ds
cmp
jae
sahf
rcrl
clc
mov
mov
incb
ja
lret
push
leave
in
pop
xorl
iret
xchg
arpl
mov
lea
mov
mov
in
pop
xor
in
fcompl
inc
movsb
cmpsl
sbb
ljmp
std
mov
push
dec
xchg
adc
rcrb
aam
hlt
cltd
jb
jle
mov
sbb
leave
jae
dec
sub
outsb
out
in
dec
jo
aas
nop
fcmovne
xchg
inc
cli
test
inc
into
dec
adc
push
std
add
insb
mov
aaa
data16
jmp
testb
jns
pop
ds
ss
jns
clc
js
or
and
lret
imul
and
outsb
dec
imul
push
mov
adc
pop
shlb
lret
xchg
sbb
fnclex
cmp
add
jge
in
xchg
jg
outsl
mov
dec
mov
mov
test
fimull
cmp
imul
js
sub
push
ret
adcb
std
std
int
push
jle
dec
mov
mov
imul
lods
out
inc
fsubr
adc
xor
leave
sbb
popa
push
stc
inc
ss
mov
jo
in
cli
into
and
xchg
xchg
ret
cmp
jnp
test
push
test
ds
adc
jnp
mov
and
pop
mov
jne
push
test
mov
je
inc
mov
jo
push
push
mov
xchg
fwait
add
dec
adc
pop
lods
xchg
ljmp
outsl
mov
add
or
push
icebp
jmp
leave
cli
lds
adc
and
adc
jp
pusha
leave
lock
data16
fptan
jns
outsb
sti
out
mov
cwtl
dec
repz
xor
sbb
scas
les
push
mov
mov
sub
jmp
xor
xlat
out
push
and
mov
shl
sub
or
push
xorl
lods
dec
out
gs
rep
sub
pop
movsb
xor
jle
dec
js
sarl
or
mov
enter
stos
add
gs
mov
xor
lds
mov
dec
outsl
aad
aas
and
arpl
mov
in
aaa
jecxz
or
dec
call
daa
dec
popf
int3
sbb
fcmovne
in
pop
jp
mov
mov
fisubs
cmp
jne
push
repnz
jge
fs
into
add
fucom
xor
adc
mov
sahf
iret
push
sti
xchg
adc
xchg
sbb
sbb
ja
jmp
fmuls
jns
out
pop
mov
mov
roll
mov
dec
cmp
loope
dec
mov
gs
jge
jg
cld
push
pop
ficoml
in
pushl
sub
ret
mov
leave
prefetchwt1
in
sar
pop
pop
cld
xchg
filds
push
dec
adc
lods
push
fstpl
test
push
sub
add
adc
pop
ret
shlb
fwait
mov
cmpsb
test
or
lods
aad
jae
jp
pop
fwait
add
jp
xor
xor
sub
arpl
or
xor
sbb
xor
pop
xchg
jle
inc
je
imul
push
push
mov
cwtl
dec
addb
sbbb
cmp
adc
std
dec
fs
or
xchg
aad
mov
push
in
dec
fwait
mov
pop
jbe
sub
add
mov
or
push
cwtl
mov
test
aas
mov
cld
mov
cs
add
mov
push
push
ret
shll
loope
daa
mov
rcrl
pusha
fldl
lods
jns
mov
ficomps
jae
loop
sbb
mov
push
imul
popf
mov
mov
fistpll
loope
cs
mov
outsl
inc
mov
mov
jne
ret
xorl
rcrb
push
mov
mov
fdivrp
ret
inc
ss
sbb
int3
imul
outsl
pop
dec
jl
and
push
outsb
adc
push
cmp
ljmp
sbb
mov
sub
in
pop
daa
mulb
aas
pusha
js
push
lods
enter
xlat
sbb
int
fcmovne
or
mov
cmp
jp
xor
push
jnp
int3
sub
stos
inc
je
cltd
mov
jne
popf
xor
dec
mov
add
es
pop
mov
cmpsb
decl
jg
or
in
hlt
fidivrl
sub
imul
ljmp
jae
mov
mov
mov
insb
pop
ret
or
fisubrs
arpl
cmp
dec
inc
inc
xchg
mov
adc
jle
pop
pop
lahf
je
pop
imul
cmpsl
loopne
enter
fs
lret
testb
fildl
movsl
stc
pop
push
popa
pop
or
iret
ret
test
cli
mov
add
sbb
fmull
sub
lea
popf
push
ret
or
inc
sub
xchg
test
lock
inc
pop
xchg
push
loop
rcrl
xchg
xor
dec
jmp
mov
and
add
subb
push
xor
mov
inc
jno
jg
into
mov
mov
test
push
adc
mov
and
sub
xorl
lahf
mov
imul
mov
pusha
inc
nop
testb
push
dec
inc
aad
sub
div
int3
jnp
and
sub
ja
mov
icebp
repnz
fcoms
rolb
popf
test
cltd
adc
add
pop
insb
and
int3
xchg
into
dec
int
mov
imul
mov
adc
mov
int3
repz
cmp
fmuls
leave
ja
js
out
lea
out
push
mov
and
sahf
pop
fisubrl
orb
scas
mov
pop
adc
mov
insb
stc
mov
and
sub
xchg
scas
dec
pop
xchg
in
inc
lods
sbb
xor
dec
lret
sub
icebp
imulb
inc
cmp
mov
ljmp
inc
sti
or
mov
jno
arpl
sti
adc
popf
inc
adc
aaa
in
sbb
lret
stc
jae
dec
loope
fwait
shrb
cli
push
bound
in
mov
movsl
shl
je
add
std
test
dec
iret
hlt
mov
dec
mov
inc
outsl
testb
mov
mov
mov
lods
hlt
lcall
lock
dec
mov
mov
jae
lock
push
or
ret
inc
pop
sbb
xor
or
jmp
int
insl
ss
push
jo
cmp
and
out
and
mov
mov
lcall
loope
jl
sub
push
lods
loop
mov
adc
mov
pop
daa
pop
jb
add
sti
stos
cli
pushf
repz
cmp
sub
js
mov
cltd
scas
sub
les
push
cmp
rcr
fisubrl
in
jmp
xchg
cld
lods
shll
adc
sub
insb
or
repnz
stos
pusha
mov
jo
insl
mov
dec
add
ret
sub
ret
jecxz
pushf
shlb
or
push
fmull
popa
int
xorl
sub
mov
sbbl
cwtl
dec
or
mov
add
sub
rcll
xor
mov
ss
lods
or
jecxz
jge
jnp
dec
loop
mov
mov
shr
scas
pop
xor
jg
pop
dec
xchg
pop
loopne
ljmp
inc
mov
sbb
sbb
push
push
mov
add
mov
mov
daa
hlt
call
or
adc
outsl
lahf
subl
and
inc
outsb
int
ds
imul
jns
jle
into
mov
ljmp
xor
xchg
sahf
and
arpl
mov
mov
repz
iret
xchg
inc
push
inc
mov
dec
jnp
repz
cwtl
mov
jne
push
adc
push
test
mov
ja
stc
es
mov
or
or
sub
hlt
ret
or
fidivl
xor
dec
push
mov
jns
dec
xchg
aaa
int3
adc
xor
mov
bound
data16
mov
cmp
das
jmp
xor
adc
adc
xchg
jae
sub
pop
or
std
inc
lahf
movd
inc
jge
dec
sarl
jae
mov
lods
add
xor
cmpsb
cwtl
mov
shr
aad
add
fs
push
call
mov
xor
adc
jb
cmp
in
cs
flds
cmp
stos
out
bnd
cmp
pushf
je
fbld
sub
insb
stos
clc
gs
adcl
in
push
psrlw
lea
and
out
push
sbb
cld
shl
jg
add
loope
jns
jmp
adc
or
ret
sbb
cmp
add
add
mov
push
in
pusha
andb
imul
stos
icebp
xor
adc
cmp
mov
mov
mov
add
jge
nop
in
jno
inc
cmp
aad
mov
xchg
xor
out
lods
daa
sbb
cmc
add
std
cmp
jae
rclb
jg
daa
mov
and
movl
pop
push
push
sbb
xor
sbbb
stos
dec
pop
in
inc
dec
arpl
mov
jnp
xorb
inc
cmpsb
mov
push
push
pushf
out
mov
cs
inc
aam
fisubrs
sub
popf
mov
imul
push
insl
ret
aas
cmp
xchg
inc
xor
mov
lret
xor
notb
hlt
sbb
test
in
pusha
movsb
sub
ficompl
call
rorb
and
mov
rcrl
mov
mov
jecxz
inc
mov
gs
xchg
and
int3
and
cmpb
inc
add
aaa
lods
out
xlat
dec
ss
mov
mov
lods
sbb
cli
cmp
sub
sub
mov
hlt
jg
pop
loop
scas
push
lret
jl
ss
mov
ljmp
ror
cwtl
xor
adc
bound
xchg
push
push
mov
insl
cwtl
fidivl
mov
in
loopne
xchg
pop
xchg
lahf
adc
sbb
mov
fisttpll
iret
xchg
imul
popa
bnd
roll
arpl
xchg
rorl
sbb
mull
mov
jl
dec
push
xchg
and
dec
cmpsb
ret
pop
push
lcall
sbb
das
adc
pop
les
mov
and
or
xor
test
lds
lret
add
cmpsl
leave
hlt
adc
je
mov
enter
sub
jns
or
test
sahf
movsb
pop
sbb
fbld
pop
test
mov
rcll
jns
mov
mov
lret
lcall
dec
int
push
incl
out
filds
pop
jae
sbbl
andb
sbb
sub
aad
fnstsw
push
popa
and
hlt
dec
push
inc
aaa
in
lret
shr
pushf
neg
fs
adc
sbb
icebp
aaa
jno
sahf
mov
stos
les
inc
xchg
push
lea
mov
pop
mov
jae
scas
daa
aaa
scas
mov
fwait
jns
movsb
sub
dec
cmc
popf
jb
add
imul
loop
ja
add
vpcmpgtd
ret
mov
std
mov
mov
cmpb
sahf
cmp
je
js
fs
ljmp
test
xchg
adc
ds
push
jle
xor
xor
das
mov
pop
stc
aam
pushf
dec
adc
xor
stos
popf
xchg
xchg
jle
adc
xchg
popf
jo
dec
adc
jns
sahf
movsb
xor
shlb
pop
push
inc
push
pushw
pop
mov
mov
and
or
inc
sbb
mov
inc
xchg
inc
and
ficoms
jp
jg
popa
mov
cmpsl
int3
mov
and
adc
and
in
cli
adc
jmp
mov
jb
sahf
adc
movsl
je
sbb
popa
sub
repz
inc
xchg
lea
adc
jecxz
outsl
pop
les
out
and
mov
jmp
adc
add
push
push
xchg
mov
sub
cmp
jle
push
sub
mov
and
or
shrl
scas
cmp
in
fisubrl
sbb
dec
ds
sbb
or
popa
test
dec
mov
sbb
cmp
xchg
mov
jle
jecxz
mov
mov
mov
dec
loop
pop
insl
dec
pop
and
and
and
jmp
push
cmp
in
or
rcrb
es
jne
sub
or
cmp
add
mov
pop
dec
nop
sub
mov
lahf
fdivrl
or
ficomps
les
cltd
push
inc
repnz
cmpsb
jl
xchg
jmp
push
mov
pop
xchg
out
mov
mov
cwtl
dec
scas
and
rcrl
xchg
mov
bound
popa
cmp
mov
cltd
icebp
es
cltd
inc
orb
aam
int
test
xchg
hlt
xor
aas
cmpsb
loope
xchg
mov
scas
sub
jle
pushf
popf
add
push
mov
sub
hlt
jb
mov
and
push
int3
jge
add
daa
mov
movsl
lret
fisttpl
js
in
imul
or
xor
mov
xor
dec
mov
and
in
test
gs
push
fs
pushf
xchg
fsubl
mov
jae
ret
hlt
and
adc
out
orl
mov
nop
push
roll
popf
lds
cli
xchg
push
mov
jnp
push
mov
fnstenv
or
add
xchg
movsb
jbe
adc
out
rcl
pop
sbb
fbstp
sti
cmp
hlt
loop
out
pusha
xor
pop
jmp
push
add
sbb
push
insl
adc
int
out
push
mov
sti
pushf
xor
pushf
jbe
or
leavew
dec
mov
idivb
stos
mov
or
orl
pop
fisubs
sbb
and
pusha
mov
ss
or
xchg
jb
inc
repz
out
call
pop
test
add
mov
leave
popa
out
fidivl
or
repnz
cmp
cmp
dec
push
jecxz
shl
dec
addb
daa
sbb
shll
ds
jle
sarb
xorb
aaa
mov
xchg
xchg
or
iret
xchg
cmp
jmp
bnd
fdivp
loop
xchg
shlb
add
jns
push
insl
jp
mov
cmpsb
lea
addl
ret
pop
sub
jbe
add
sarb
dec
xchg
outsl
add
ds
int3
movsb
add
dec
cmp
lock
adc
testl
push
push
lods
repz
xchg
mov
into
scas
xor
fwait
mov
xchg
xor
cmp
sar
sar
test
das
iret
jmp
ret
dec
imul
push
jne
aad
and
sti
and
push
or
es
pop
jg
and
popa
call
dec
fildll
int
jo
jmp
mov
fcmovnbe
out
je
or
jl
shll
fisubl
out
and
scas
inc
in
xlat
je
imulb
xchg
cmpl
cmc
push
or
addl
cld
mov
sub
push
cld
scas
bound
add
and
testl
xlat
icebp
cmpl
punpcklwd
hlt
mov
adc
xor
mov
push
xor
mov
adc
fistl
std
inc
jle
cmp
ja
xor
sub
outsl
or
lods
and
sub
push
lcall
aad
out
pop
add
mov
mov
adc
cli
lods
pusha
scas
inc
int
lods
push
pop
jae
mov
subl
mov
loopne
das
xorps
lods
push
dec
pop
xor
push
daa
jge
dec
mov
mov
sbb
rcrb
ja
xor
push
push
movsl
xchg
aad
and
imul
sar
pop
push
inc
mov
je
je
or
xor
push
das
shrb
or
or
out
fcoms
xchg
gs
and
xchg
and
pusha
xor
or
xor
das
xadd
mov
les
jno
inc
imul
push
orl
and
or
push
mov
cmpl
inc
jmp
mov
jo
and
aaa
daa
jle
inc
mov
xor
mov
in
xchg
lret
push
cli
scas
inc
js
rcll
jge
outsl
cs
subl
in
add
fldenv
aas
push
fisttpll
dec
pusha
pop
xor
cmp
or
push
cli
xchg
test
loopne
loop
in
or
add
in
stc
cmc
cmp
clc
or
dec
inc
ljmp
data16
lret
add
stos
fmul
adc
sub
imul
mov
mov
sbb
clc
gs
movsb
aam
jl
mov
negl
jle
sbb
and
mov
daa
pop
cmp
cwtl
cmp
jecxz
cmp
enter
scas
or
fisubl
sub
cltd
adc
pushf
ljmp
jo
dec
dec
mov
cwtl
mov
adc
and
stc
add
xchg
pop
cmp
dec
jmp
xchg
xor
js
in
jb
rcl
push
daa
testb
nop
xchg
xlat
xlat
fildl
ss
and
roll
adc
dec
jno
ljmp
jecxz
mov
mov
addb
mov
push
or
or
int
xor
in
cmp
xor
sbb
and
lds
jae
adc
jns
and
aas
cmc
mov
push
ja
iret
rclb
pusha
jns
lods
jecxz
cmpsb
add
daa
hlt
mov
pop
xchg
push
stos
pop
add
and
mov
push
into
mov
lods
lret
jae
lods
shrb
jg
adc
fsubrs
mov
and
push
mov
lock
xchg
and
cmp
scas
sbb
mov
test
xchg
jmp
dec
mov
mov
fstpl
shl
pop
push
shlb
push
mov
sbb
test
scas
repz
aas
int
xor
popf
dec
into
mov
fsubr
in
nop
cltd
xchg
xchg
popa
loopne
shlb
scas
dec
fldcw
push
dec
xchg
inc
mov
jae
int3
lahf
sahf
std
loope
add
mov
and
loopne
cmc
jmp
loope
mov
sbb
lods
inc
sarb
sbb
push
jnp
imul
pop
imul
imul
mov
sub
imul
sahf
test
cmp
jo
jbe
xor
xor
shr
push
and
movsl
cmp
fstpl
jnp
push
add
mov
js
mov
lea
or
out
xchg
xor
sbb
sub
and
mov
cmp
nop
jmp
sbb
jg
mov
adc
in
push
jnp
lcall
fwait
adc
mov
cmp
lahf
in
xchg
ja
cmpsl
loopne
sbb
out
or
lods
nop
pop
gs
and
adc
push
adc
mov
dec
loop
xchg
or
inc
movsl
insb
sbb
push
mov
aam
scas
shl
pop
mov
mov
lret
adc
pop
mov
fidivrl
pop
pop
cld
ss
out
outsb
test
cmp
mov
mov
xchg
xorb
mov
push
mov
aaa
jmp
add
scas
jae
mov
test
xor
test
scas
call
jne
sbb
xor
out
lret
mov
cmp
out
mov
scas
out
adc
stos
int3
addb
sub
in
roll
jno
mov
sbb
mov
add
addr16
xchg
cmp
fdivr
pop
cmp
scas
jge
dec
aam
rcr
sbb
sbb
neg
mov
sub
out
adc
xor
lods
sbb
jp
mov
jnp
or
cmp
sub
nop
imul
mov
daa
sbb
and
insb
mov
loopne
push
out
mov
inc
aaa
lcall
insb
mov
addr16
push
sub
xor
fbstp
jg
test
ret
in
ds
lock
push
rcr
add
cmpsb
push
dec
and
icebp
repnz
inc
sarb
out
jne
fdivrs
xor
or
imul
cwtl
in
and
ficoml
aas
aad
push
mov
mov
ss
insl
mov
or
loope
xor
adc
pop
cmp
xchg
xlat
mov
adc
mov
inc
push
je
sahf
sub
push
fstl
jne
fldl
mov
call
in
int
add
aad
xor
dec
inc
adc
test
stos
push
sbb
mov
mov
xor
pop
cmp
test
sub
add
lock
mov
lret
bound
sbb
jns
test
add
in
pop
stos
add
inc
arpl
jg
push
jmp
and
or
mov
push
mov
bt
icebp
adc
push
dec
movsb
and
and
shlb
arpl
ret
xor
mov
aas
fiadds
cmp
pushf
cmpb
and
jns
shrb
shrb
xchg
ret
xchg
in
hlt
incb
jnp
cmpsl
push
sbb
fs
mov
test
test
pop
ret
pusha
xor
ljmp
push
lret
out
orl
and
dec
jge
cmp
jo
xchg
bound
jle
jecxz
cwtl
daa
xorl
fistpl
sbb
pop
ss
rorl
insl
pop
aad
pop
aam
movsl
cmp
cmp
mov
pop
icebp
mov
adc
hlt
push
xchg
mov
push
jno
mov
jo
popa
mov
aas
out
imul
arpl
mov
xchg
sub
iret
inc
mov
and
cmc
or
pop
sbb
shr
test
mov
int
lahf
imul
pusha
push
mov
ljmp
sbbl
pop
push
mov
int3
cmp
insl
cmc
mov
pop
fidivs
xor
sbb
fcmovbe
xchg
std
mov
xor
out
pop
sbb
std
xor
movsb
imul
cmp
fwait
jmp
adc
mov
xor
into
cmp
mov
out
mov
and
mov
insb
clc
lods
sub
fcoms
xchg
xchg
aas
mov
add
jno
mov
push
mov
int
mov
jne
scas
lods
aad
pop
dec
xor
or
ret
xor
xor
cmp
sub
cltd
arpl
adcl
test
scas
pop
out
jg
clc
sarb
fsubl
aam
inc
and
scas
ds
jno
jmp
push
push
dec
dec
arpl
push
iret
push
lret
popf
mov
xor
test
push
pop
jbe
dec
shl
cmp
pop
and
cmpsl
std
add
pop
mov
arpl
int
fiadds
ss
shr
cmp
setae
dec
adc
pop
xchg
xor
call
lret
les
sub
call
imul
mov
repz
je
movsl
loope
sub
lods
mov
xor
push
bound
sahf
jnp
lods
int3
dec
lret
imul
movsb
mov
pop
shrl
cld
testb
xchg
cltd
mov
dec
loopne
add
mov
mov
clc
jnp
data16
inc
xlat
orb
out
mov
add
ffree
imul
mov
test
sbb
in
int3
popa
sub
mov
adc
rolb
or
push
data16
jge
dec
sbb
jno
leave
std
mov
sbb
mov
xchg
pushl
rcl
mov
dec
inc
mov
mov
sbb
rorl
push
outsl
pop
mov
mov
cmc
inc
mov
adc
test
mov
lcall
add
xor
jno
fwait
add
repz
cld
fwait
push
loopne
xchg
bound
subl
lods
repnz
pushf
xchg
xchg
in
mov
adc
xchg
in
test
fwait
pop
lret
sub
popa
pop
cmp
rcll
inc
and
ja
dec
out
push
inc
push
or
lock
out
or
aaa
ds
push
repz
je
pop
sub
sub
negl
cmp
cmc
push
fs
loopne
je
mov
or
shrb
outsb
mov
shrl
roll
jae
inc
add
push
mov
pop
add
inc
push
fwait
std
lahf
andl
addr16
cli
xchg
fstps
fldcw
adc
enter
add
mov
jno
cs
nop
mov
dec
jl
adc
repnz
std
cmpsb
repnz
inc
jg
xlat
lock
call
pusha
das
pop
sti
enter
xchg
xchg
add
mov
scas
pushf
pop
int3
mulb
sub
addr16
insb
das
mov
jbe
and
lahf
push
xchg
mov
enter
dec
xchg
std
call
jg
mov
lock
mov
imul
js
push
mov
xor
xchg
cmpsl
xchg
inc
shl
loope
test
hlt
in
jb
push
push
out
sub
xchg
lret
jbe
cltd
lcall
mov
sbb
pop
sahf
gs
xor
andb
cltd
or
jp
and
jl
adc
mov
inc
inc
jl
pusha
sbb
xchg
je
les
fidivs
push
orb
nop
mov
inc
loop
andb
loop
and
add
and
in
mov
mov
xor
mov
mov
std
cmp
pop
dec
movsl
fstl
cmp
jl
icebp
add
jecxz,pt
test
lret
xchg
mov
cmc
scas
or
jae
sbb
gs
mov
xchg
ds
shll
xor
call
xchg
stc
sbb
jns
adc
push
mov
add
sbb
arpl
divl
bound
push
push
arpl
push
inc
aaa
ljmp
xchg
loope
fwait
push
dec
arpl
out
loopne
jmp
icebp
in
inc
sub
lcall
dec
repz
lds
push
jge
cmp
mov
add
xchg
mov
mov
enter
mov
jo
jno
pop
scas
mov
cmp
jle
pop
dec
lret
mov
add
lds
cmp
sbb
test
aam
gs
inc
jmp
lret
xchg
pusha
dec
repz
and
xchg
xchg
arpl
pop
mov
inc
js
and
mov
jl
xchg
xor
fnstenv
roll
dec
daa
xchg
jbe
out
fdivs
mov
jg
mov
mov
lea
jp
jl
sbb
pusha
movsl
mov
shll
cwtl
mov
sarb
lea
lcall
lcall
repnz
mov
stc
loopne
jb
or
in
add
in
push
inc
in
mov
mov
sub
les
cmpsl
sub
fcmove
xchg
imul
mov
fadds
call
aas
cltd
cld
jle
enter
add
gs
jnp
xor
xor
jl
mov
add
jg
xchg
mov
out
jp
mov
mov
popf
test
xchg
imul
leave
daa
in
out
jo
movsb
sub
add
add
aam
jl
subb
jnp
cmpsb
loop
xchg
push
cld
shrl
pusha
cmp
cmp
jno
jp
clc
sti
iret
fwait
insl
insb
mov
in
xlat
mov
cmp
push
ficoms
ror
les
outsb
inc
flds
push
outsb
idiv
or
lea
pop
std
cli
int
test
andl
mov
cmc
mov
cmp
fcoms
jge
fimull
xorl
xchg
mov
rorl
xchg
out
add
dec
fisubl
jl
or
inc
cld
or
lahf
fidivrs
repnz
imul
jne
ds
adc
xchg
dec
inc
mov
arpl
and
insl
das
xor
sub
pop
hlt
add
or
mov
cmp
dec
lea
call
push
aas
jno
ljmp
cmp
mov
cmp
mov
inc
pop
xor
pop
movsb
or
jae
mov
repz
jl
mov
push
cld
leave
mov
mov
pop
iret
cmp
cmp
fs
or
in
shll
adc
lret
lahf
lahf
xchg
outsl
clc
movsl
arpl
outsl
in
cli
push
ret
adc
inc
xor
lds
mov
cmpsl
fwait
pop
pop
and
mov
dec
adc
aas
or
dec
bound
jo
cmp
and
enter
js
subl
mov
out
mov
sbb
jo
mov
je
push
xchg
cmp
fs
into
jg
sbb
xchg
mov
fnstcw
dec
mov
mov
xchg
sbb
cmp
fidivs
jno
pop
mov
pop
mov
inc
cmp
mov
imul
fwait
out
pextrw
mov
int
push
sub
push
and
sub
mov
inc
pop
aaa
dec
fidivl
cmp
jge
or
or
shrb
stc
lods
orl
pop
mov
or
sbb
jg
test
cmp
test
mov
mov
hlt
cmp
or
js
test
mov
jno
and
sbb
sti
cli
xchg
inc
sub
cmpsl
xchg
mov
jg
mov
cltd
imul
fiadds
cmp
cs
fwait
stos
out
push
inc
mov
or
loopne
xchg
std
iret
pop
andl
stos
mov
int3
out
clc
fildl
fbld
push
movsl
dec
jge
inc
xor
adc
xchg
pop
in
sbb
push
push
repnz
or
jecxz
pop
sub
xchg
stos
cli
mov
test
xchg
hlt
mov
mov
jle
pop
mov
sahf
xor
fs
mov
fldz
std
out
push
cmovp
sub
dec
lds
mov
xor
and
in
ds
jecxz
repz
lods
jge
inc
popa
or
mov
ret
lods
pusha
mov
push
dec
fisubrs
fsubp
ds
ret
mov
xchg
pusha
cmp
xchg
mov
in
mov
repnz
and
sbb
int3
fistps
test
and
mov
stos
popa
push
inc
in
push
xchg
dec
ljmp
emms
jnp
xor
add
adc
mov
outsl
psubb
add
xchg
call
xor
mov
daa
gs
push
xchg
xchg
fstl
in
dec
dec
add
inc
lret
movsb
cmp
mov
inc
cmpb
jns
jnp
xor
sbb
into
pusha
push
inc
push
cmp
jl
cmp
push
dec
leave
in
and
insb
sarb
cmp
repz
cmp
jno
out
call
sarb
sbb
push
cmp
int
aas
fcomip
shll
mov
in
outsl
f2xm1
aaa
lahf
sub
pop
fs
movsl
aam
push
psllw
mov
mov
pop
mov
pop
sbbl
pop
stos
aam
xlat
cltd
jo
adc
mov
fdivp
in
addr16
xchg
aam
call
sub
or
repnz
je
es
add
xchg
mov
shlb
idivb
sub
xchg
push
fmuls
pop
jne
flds
scas
dec
int3
repz
cmp
ficomps
movsb
push
dec
lcall
lahf
test
mov
mov
adc
push
sahf
mov
sub
mov
fidivrl
mov
dec
in
fsubs
add
pop
scas
inc
jmp
jl
movsb
int
sbb
leave
mov
jbe
rclb
int
cmp
js
mov
push
push
jp
pop
ret
dec
sbb
fidivrs
ljmp
sub
icebp
orl
mov
xchg
sub
mov
loop
mov
mov
scas
in
test
les
movsb
hlt
ljmp
mov
sbb
sbbb
pop
ficompl
adc
cwtl
cmp
dec
aaa
sbb
bound
jle
hlt
aad
add
adc
fs
shrl
movsb
mov
pop
bound
testb
and
pop
mov
int3
ds
lcall
dec
sub
mov
mov
ret
jl
xchg
das
sbb
adc
xchg
inc
std
sbb
int
and
fucomi
mov
jb
jno
leave
add
push
sub
iret
loope
pop
pusha
sbb
sub
outsb
sub
jo
jg
dec
pop
sbb
in
dec
mov
push
dec
dec
jns
stos
popa
loop
imul
movsb
mov
cld
xchg
mov
sub
pop
outsl
cwtl
mov
stos
je
xor
sub
clc
aas
mov
stos
push
sbb
push
imul
orb
sti
cmp
rclb
sub
push
aaa
mov
add
ret
lods
dec
xchg
adc
fwait
jge
push
push
fsubl
mov
fcmovne
rorb
into
xor
adc
cwtl
sub
push
xchg
mov
add
jle
js
jmp
jae
mov
xor
loop
mov
pop
insb
les
nop
jns
pop
arpl
negb
or
loopnew
mov
xor
in
inc
xchg
push
iret
adc
pop
mov
and
jle
pop
lahf
or
xchg
fcmovnb
push
add
mov
adc
jnp
in
mov
scas
call
jle
mov
mov
push
xchg
lds
mov
mov
hlt
lret
adc
repz
shrl
out
repz
mov
jp
mov
sub
adc
adc
dec
cmp
js
sub
mov
clc
lock
repnz
mov
aam
or
push
aas
push
adc
out
jl
enter
pop
xchg
in
mov
push
aam
aas
pop
mov
enter
cmp
jle
xor
push
mov
leave
mov
push
add
lcall
mov
push
xor
mov
sub
js
mov
pusha
pop
lds
sbb
fs
push
mov
and
sbb
mov
out
rcl
pop
ja
xlat
and
fisubs
arpl
push
fldcw
mov
push
ljmp
mov
outsb
sbb
jns
test
cmp
ffree
sbb
pop
addr16
cmp
jp
sbb
shrb
push
mov
xchg
addr16
movsb
add
inc
sbb
shrl
mov
je
fbld
jae
xchg
dec
loopne
andl
push
jne
outsl
fs
xchg
enter
hlt
dec
sub
jmp
xchg
aam
sbb
mov
rorl
cli
mov
add
das
push
rolb
adc
push
dec
inc
jns
fstl
es
lds
mov
out
adc
ja
pop
call
adc
dec
mov
movsl
loopne
cmc
inc
in
xor
repz
mov
fwait
nop
xchg
push
movsl
mov
push
add
push
repnz
xlat
or
outsb
pop
lahf
inc
mov
xchg
dec
cmp
iret
rcrb
jmp
xor
adc
pushf
out
cmp
push
arpl
inc
lret
les
sub
das
add
iret
xor
or
das
cltd
sbb
jns
cmp
ss
pop
dec
add
sbb
iret
inc
fcmovnu
inc
sbb
fbstp
ret
dec
ds
push
push
pop
or
test
sbb
pushf
cmpsl
push
lcall
jo
popa
adc
arpl
imul
outsl
pop
dec
xchg
mov
adc
out
pop
nop
fmuls
dec
push
jg
ret
and
imul
or
lcall
xchg
inc
stos
mov
in
add
inc
adc
xchg
fsts
add
test
hlt
jl
dec
jp
cltd
mov
cmpsl
aaa
out
js
pop
pop
sub
call
pop
sbb
xchg
xchg
pop
sbb
inc
mov
jge
pop
scas
out
pop
lea
push
mull
outsb
mov
cmp
xchg
fmuls
enter
sub
in
les
inc
dec
mov
cwtl
cli
dec
push
jle
jle
pop
shlb
pop
jne
and
mov
mov
mov
inc
sbb
leave
outsb
in
notl
dec
adc
outsb
loop
mov
xchg
pop
jmp
lods
xchg
lods
jl
cli
popf
out
mov
lock
xor
inc
adc
mov
inc
ljmp
int
adc
mov
sub
mov
inc
xchg
push
pop
push
sbb
jns
pop
or
cwtl
jae
mov
mov
adc
dec
jo
jnp
test
inc
jbe
pop
repz
test
ret
pop
and
jg
insb
jg
outsl
cmp
jecxz
xchg
and
movsl
sub
repnz
cmp
cli
mov
sarb
xchg
mov
push
xchg
insl
pop
pusha
enter
push
scas
adc
ficoml
mov
and
xor
mov
aaa
inc
or
dec
push
cmp
mov
or
sub
mov
insb
and
adc
mov
add
pop
mov
pop
arpl
and
rcrb
mov
pop
adc
jbe
mov
cmp
xchg
mov
mov
sbb
scas
je
lcall
push
inc
int
incb
cmp
ss
cltd
inc
sub
das
push
inc
mov
dec
in
shr
data16
notl
jge
leave
xchg
or
xchg
push
and
adc
lods
jne
test
clc
js
cmp
sub
hlt
jbe
xor
xor
shrl
cwtl
lock
push
lds
adc
xor
addr16
hlt
fstps
pop
jnp
and
xchg
lret
std
mov
pop
dec
jl
popa
fldl
ds
mov
adc
sbb
jae
popa
sbb
outsb
repnz
mov
add
mov
repz
sub
notb
imul
pushf
sti
pushf
mov
outsl
add
push
adc
pop
mov
test
add
dec
pop
dec
fidivs
out
cmpsl
out
lret
adcl
pop
mov
and
xchg
icebp
adc
stc
or
in
sbb
mov
ficompl
push
jecxz
in
jg
mov
in
xor
andl
mov
aad
jbe
push
insb
add
stos
repz
jge
fs
gs
and
inc
xchg
mov
pop
push
sub
xchg
imul
call
cwtl
mov
sub
mov
dec
insl
pop
imul
loopne
scas
mov
push
sub
nop
and
ss
dec
xor
enter
sbb
mov
mov
xchg
xor
pusha
pop
or
jo
jns
adc
pop
add
adc
add
loopne
fwait
mov
insb
cmc
repz
ret
movsl
jae
sub
ja
push
mov
sbb
xor
fsts
int
add
cmp
sahf
jl
xor
js
nop
test
rorb
out
sbb
fs
mov
push
mov
pop
cltd
pusha
lcall
dec
mov
subb
and
adc
mov
dec
and
mov
mov
mov
leave
mov
or
lret
aas
je
cmp
lea
outsb
roll
xor
outsl
push
addr16
mov
dec
xor
xchg
inc
testl
call
adc
stos
sti
vpinsrw
pop
enter
aaa
sti
jle
pop
out
or
repz
sub
aas
orb
xchg
lret
movsb
xor
dec
test
imul
cmp
dec
xchg
jae
cmp
shrl
icebp
jb
or
cmp
testb
sub
mov
out
sbb
inc
xor
shrb
xchg
je
insl
pop
xchg
lahf
inc
jnp
pop
mov
cwtl
pop
sti
mov
imul
in
mov
shl
push
scas
dec
xchg
out
sbb
xor
outsl
outsl
das
xorb
leave
inc
popf
adc
mov
add
aaa
nopl
rorb
jno
cmp
fcompl
add
in
pushf
add
repnz
pushf
push
pop
xchg
sbb
cli
gs
or
sbb
jg
cmc
loopne,pt
dec
mov
xchg
and
or
push
push
aam
jmp
aad
inc
pop
shl
xchg
addl
shl
mov
out
mov
cmp
mov
or
add
and
popa
in
dec
and
lds
pop
jbe
push
xor
in
dec
lret
add
pop
das
adc
ret
call
data16
adc
imul
add
pop
sbb
fmull
notb
insl
insb
icebp
xor
fldcw
popf
adc
sub
pop
out
clc
mov
sub
mov
ljmp
mov
ljmp
ja
xor
add
dec
xor
cmp
cs
hlt
push
mov
in
dec
xor
add
fldl
rolb
cs
loopne
inc
out
mov
test
outsb
lods
xchg
pop
or
xchg
das
xchg
iret
aas
mov
sub
and
lret
xor
mov
fwait
push
cmp
fs
dec
cli
xor
xchg
mov
imul
or
mov
pop
je
push
mov
lods
cmpsb
pop
jmp
cmp
fwait
test
jecxz
incl
ljmp
into
jmp
iret
jg
cmpsb
fldenv
ret
fistl
js
inc
fucomp
xorb
xor
out
xor
sahf
aas
xchg
inc
xchg
dec
mov
aaa
cwtl
adcb
scas
xchg
ljmp
xchg
testl
push
inc
std
rclb
icebp
loop
pop
sahf
cmc
lcall
cmp
dec
sbb
daa
mov
mov
pop
dec
add
pop
xchg
fldenv
sarl
mov
int3
cmp
icebp
push
add
insb
jbe
insl
xchg
mov
sub
mov
mov
sub
xchg
outsl
cmp
dec
lcall
inc
xor
sbb
xchg
in
inc
ds
mov
iret
jo
addr16
in
jl
ja
test
inc
mov
addb
test
rolb
fisttpll
fistpll
jp
add
cmp
movsb
push
sarb
jb
pop
iret
lods
mov
sub
jecxz
push
push
pop
ja
xchg
push
dec
pop
popf
mov
loope
int3
insl
pop
bound
pop
adcl
xor
scas
addr16
stc
xor
cmp
or
ljmp
filds
push
stos
add
ja
jle
inc
out
into
or
xchg
mov
adc
je
jb
inc
lods
adc
jns
rep
shr
imul
sub
pop
push
iret
fisttpl
dec
or
push
jns
int
xchg
iret
jecxz
jle
pop
cld
sbb
xlat
imul
push
imul
cmpsb
xchg
fsubl
dec
aad
xchg
pop
ret
stos
fmul
das
xor
adc
push
lret
inc
inc
pop
div
add
adc
neg
jb
lahf
dec
jo
lret
pop
xchg
mov
fnstenv
push
les
xchg
fmull
jb
iret
sub
mov
sub
adc
sub
in
or
mov
cmp
pop
mov
and
sbb
add
inc
imul
js
stos
mov
adc
imul
cmp
lods
ja
and
lahf
stc
pushf
sub
repz
mov
pop
pushf
jg
scas
imul
inc
insb
scas
cmpsb
pop
lods
jmp
test
add
hlt
inc
and
sahf
cltd
pop
rorb
sub
out
fsubrs
sbb
test
jns
jb
push
ror
push
mov
lret
sbb
iret
mov
cmp
pop
xor
xchg
test
pop
fdivrp
aaa
pop
xchg
xor
ja
push
mov
scas
pop
std
and
dec
inc
cmp
lock
movsl
subb
mov
cltd
lea
cwtl
sbb
fidivrs
cmp
cli
sub
sub
push
data16
mov
or
ret
out
and
popa
popa
test
pop
ja
testb
adc
cmp
leave
lods
repz
jb
int3
nop
psllq
rcr
push
jnp
lock
icebp
fs
push
ret
stos
ret
dec
inc
fstpl
std
fistl
outsl
fcomps
xor
xchg
fiadds
sub
push
xor
sarl
pop
push
or
jmp
in
scas
out
add
enter
cmp
dec
jns
lcall
imul
jp
pop
mov
mov
dec
ja
addr16
aas
mov
cmp
in
loop
mov
push
hlt
mov
test
push
mov
adc
outsl
and
sti
clc
jbe
inc
mov
test
xchg
fistpll
xor
shlb
aad
sub
fistps
sti
call
add
sub
cmp
in
pop
std
push
lods
add
stc
jnp
jmp
aam
pop
pop
lret
or
les
dec
push
xor
push
pusha
testl
or
push
xor
cmpsl
sti
xchg
mov
ret
cmp
ficompl
dec
pop
lret
test
pop
sub
addb
xchg
filds
sbb
mov
mov
dec
cli
xor
pop
dec
xor
dec
jecxz
es
inc
lahf
fucomi
cwtl
in
mov
xor
in
push
int
push
call
arpl
daa
dec
sti
lahf
imul
stos
rcr
imul
push
int3
xor
dec
xchg
addr16
loope
xor
mov
lahf
add
nop
daa
dec
jl
fcoml
pop
push
cmp
outsl
dec
les
insb
xor
ret
pop
push
repz
cmc
lcall
adc
push
push
addr16
int3
adc
icebp
popa
sub
mov
lea
xchg
pop
jb
test
adc
movsl
push
dec
push
mov
push
rclb
nop
jb
jns
ror
fcos
or
xor
push
cmpsb
push
cli
mov
xchg
cltd
mov
aas
xor
add
int3
xchg
sub
loope
adc
xor
pop
mov
sbb
cmp
jb
sub
jecxz
mov
fadd
mov
jge
mov
add
mov
mov
pop
pusha
jmp
xlat
xor
add
cwtl
inc
lret
stos
addb
lock
sub
inc
shrl
sbb
repz
jl
out
fstpt
les
inc
dec
into
pop
mov
outsl
sbb
mov
cmp
adc
fucompp
popf
mov
mov
lahf
xchg
pop
flds
int
xchg
insb
sub
pop
lods
dec
scas
daa
fsubl
mov
cltd
fcomp
das
cltd
rcrl
pushf
ss
inc
sub
cmpb
lcall
jnp
out
addr16
pop
lods
out
jno
in
inc
scas
and
sub
push
into
adc
xor
adc
xchg
inc
fimuls
and
addb
push
test
cld
inc
pop
ret
aam
or
sbb
jmp
icebp
ret
hlt
mov
aas
imul
or
xlat
xlat
mov
aam
jp
subl
and
mov
adcl
out
dec
in
lock
push
das
arpl
mov
dec
shr
sbb
push
jne
or
cmp
popf
js
out
and
addr16
jae
cld
pop
lea
je
imul
arpl
sub
adc
mov
popf
aaa
cmp
mov
mov
movsl
int3
mov
mov
or
cmp
pop
lahf
or
lock
adc
lahf
cs
jo
push
sbb
xlat
into
loopne
jecxz
and
cmp
lahf
clc
scas
in
movsl
out
aad
jge
fisttps
dec
iret
je
mov
xchg
add
fdivrl
mov
add
cmpb
mov
add
xlat
outsb
lret
aam
pop
pop
divl
mov
outsb
pop
ljmp
and
shld
dec
pmovmskb
ss
jbe
loopne
ljmp
inc
mov
lds
lds
sub
mov
cmp
imul
mov
xorl
vdivsd
mov
mov
push
out
aas
inc
push
pop
and
lret
loope
enter
mov
out
loop
adc
lcall
dec
js
lock
ljmp
mov
push
adc
cmp
jno
mov
testb
xor
mov
xor
xchg
mov
ret
lods
movsl
push
je
pop
xchg
pop
fwait
mov
arpl
addr16
mov
sbb
inc
mov
pop
add
jge
scas
xchg
enter
imul
aad
pop
pop
test
jbe
push
shrb
mov
add
add
loope
popl
int
and
xchg
fcoml
or
int
xor
rorb
jp
imul
out
dec
ljmp
lret
push
fcomps
lcall
sub
lret
sahf
aad
fwait
icebp
mov
icebp
pusha
repz
daa
ror
add
jl
inc
push
mov
ss
sub
les
adc
inc
mov
xor
in
fnstsw
es
jmp
add
dec
mov
lds
enter
gs
or
mov
sbb
add
mov
int3
data16
jmp
jecxz
mov
das
cltd
icebp
stc
sbb
cli
lock
inc
ja
hlt
pop
inc
mov
lods
mov
jle
add
push
xlat
mov
call
dec
out
xlat
arpl
cwtl
iret
bound
dec
nop
jle
loopne
jmp
in
dec
xor
and
rolb
fstl
adc
xor
xor
lods
out
or
push
cmp
dec
shlb
lods
int3
addl
xchg
movsl
pusha
xchg
dec
les
inc
scas
fwait
cmp
pop
pop
ficoms
push
rolb
lcall
or
addb
pop
or
push
mov
and
jl
mov
iret
sub
mov
in
xor
sub
fsubr
xchg
xor
sub
hlt
in
mov
ljmp
sub
or
outsb
mov
push
movsb
out
inc
and
out
mov
arpl
push
push
sbb
vandnps
or
pop
jmp
cmp
cli
fnsave
xorl
and
gs
pop
and
js
inc
je
mov
inc
test
negb
arpl
icebp
hlt
bound
or
and
hlt
dec
je
lds
jae
fcoml
mov
push
jecxz
outsl
mov
in
mov
pop
push
adc
push
jbe
xor
push
jno
pusha
into
sub
and
add
xchg
or
xchg
insl
pop
mov
aam
decb
lahf
cmp
dec
push
ljmp
xchg
in
add
int3
pop
add
mulb
mov
pop
lods
push
sbb
movsl
movsl
movsb
wbinvd
push
inc
out
fldcw
mov
xor
es
sub
int
mov
popf
cmpsl
xor
call
inc
adcb
jne
and
jnp
cmp
mov
push
jg
push
dec
or
pusha
mov
mov
cs
or
xorl
sub
inc
inc
subb
inc
int3
test
push
jno
test
mov
inc
push
js
xlat
sbb
xor
push
shrl
sub
lea
pop
fs
dec
stc
jne
cmpsb
add
mov
das
push
push
lret
das
dec
inc
lea
add
sub
addb
jl
clc
or
sub
mov
clc
xor
pop
sub
mov
mov
push
popf
sub
push
imulb
xchg
and
push
inc
push
push
imul
enter
loop
pop
rolb
stos
pop
push
les
or
sub
mov
sbb
lret
push
imul
inc
jecxz
jno
pop
iret
mov
add
iret
cmp
add
and
out
rol
xor
ss
adcl
adc
mov
push
add
push
sbb
nop
mov
stos
lock
sahf
ss
or
cld
imull
jecxz
aas
out
fisttpl
loopne
sahf
popa
jns
adc
cmp
jmp
inc
imul
je
add
inc
insb
in
adc
loopne
shl
push
add
jg
xchg
lods
sbb
daa
inc
inc
insl
jp
jno
jo
mov
or
andl
dec
inc
ljmp
mov
mov
mov
mov
sub
cltd
or
out
fs
push
push
sbb
fldenv
mov
in
adc
push
sti
int3
lret
mov
cld
push
jbe
and
dec
inc
gs
imul
pop
test
lock
cmp
ret
in
cmp
sub
movsl
cltd
mov
and
pop
mov
sahf
jnp
cmp
int3
or
pop
pop
jp
mov
cmp
cs
or
incl
cs
adc
fs
xchg
in
jbe
push
jg
sbb
js
xlat
pop
xchg
dec
lahf
insl
addl
jg
sbb
les
fs
mov
lods
imul
xchg
cld
pusha
or
adc
xchg
mov
jnp
pop
ror
lods
cs
sti
ljmp
mov
lahf
or
mov
aam
add
xor
mov
pusha
shr
push
stc
pop
pop
test
shlb
sar
dec
data16
xor
jns
dec
imul
sbb
fcoms
inc
xor
push
dec
pop
sbb
push
mov
ljmp
ljmp
dec
mov
imul
aam
iret
fxch
sbb
or
add
lret
inc
dec
shll
mov
dec
fisubrl
xchg
jno
inc
fsubrl
fisubrl
lds
pop
shll
inc
mov
push
in
loopne
addl
xor
pop
add
mov
adc
dec
push
addr16
xlat
int3
stos
orl
lock
stos
push
adc
lea
movsb
rcrb
movsl
jo
adc
add
std
add
sub
ret
adc
jmp
mov
call
das
sti
cmp
lods
inc
popl
adc
test
dec
fdivl
nop
mov
mov
pop
mov
mov
xchg
imul
and
stos
outsb
jl
or
or
mov
mov
roll
jbe
sub
xor
jmp
sub
adc
aaa
inc
dec
mov
jge
shrl
mov
cli
push
ja
std
sbb
inc
stos
popa
mov
int
cld
push
cs
ss
push
adc
inc
cltd
test
dec
pop
and
xchg
pop
push
inc
fstl
cwtl
push
mov
push
pop
clc
mov
xchg
popa
jmp
lods
cmpsl
int3
mov
cs
jmp
fs
lock
jp
add
int3
and
add
cmp
dec
lods
mov
jecxz
fimull
in
adcb
into
loopne
push
dec
out
xchg
pusha
mov
loopne
ret
adcl
test
fsqrt
out
jae
xlat
xor
xchg
hlt
mov
stos
sbb
sub
pushf
cmp
mov
fs
xorl
mov
lret
jae
pop
dec
movsl
push
sbb
test
in
dec
ror
jno
insl
popa
jmp
int3
fimull
fsts
pop
daa
push
push
sahf
les
lret
into
add
fists
adc
pop
inc
jne
fldt
jmp
aaa
cmp
out
lret
in
adc
insb
rcr
arpl
push
clc
adc
add
hlt
jbe
jbe
test
pop
fsubr
mov
scas
adc
fldl
repz
or
jecxz
inc
pop
cmp
pop
pop
jecxz
push
or
adc
jmp
mov
mov
pop
xchg
outsl
push
mov
xor
ja
mov
enter
fsubs
cmp
mov
rcrb
xchg
or
ljmp
aam
nop
dec
stc
cmp
cli
adc
lahf
sub
out
inc
fcmovnb
clc
sbb
jmp
xchg
cli
rcr
repz
mov
fidivrl
pusha
cwtl
inc
mov
call
jmp
rclb
push
imul
mov
das
jnp
hlt
lret
sti
push
lcall
cmp
cmpsb
xchg
addb
or
fcmovbe
enter
psrld
mov
ds
xchg
mov
into
psrlq
repz
add
popa
push
stc
xchg
add
xlat
jne
push
mov
sbb
mov
or
inc
and
sub
and
sahf
out
mov
testb
aas
frstor
xchg
cli
mov
adc
mov
into
ud2
stc
out
sub
mov
dec
das
and
jge
call
lds
sbb
add
sti
sub
aaa
mov
ret
iret
mov
repnz
ljmp
ds
or
dec
sti
sub
loope
xchg
jns
xchg
out
pop
mov
push
fmuls
push
and
xchg
dec
aas
imul
pop
jmp
movsbl
js
and
sahf
xchg
mov
push
movsb
xchg
movsl
mov
cmpsl
mov
repnz
push
and
ljmp
les
addr16
in
push
in
imul
cwtl
divb
stos
push
rcrb
stos
pop
enter
mov
jmp
mov
aas
jno
inc
aas
sbb
xchg
rorl
pop
inc
test
push
es
push
int3
data16
loope
fnstsw
std
mov
mov
mov
jo
xorl
jle
xrstors
bound
scas
jl
jecxz
and
push
lods
jecxz
shl
push
pop
pusha
clc
push
push
mov
rorb
fcomps
jmp
lods
aas
cld
roll
popa
mov
leave
xor
and
mov
aam
and
outsb
add
roll
jns
ret
dec
cmpsb
and
lea
fsubrs
dec
xchg
add
sbb
add
out
adc
pop
push
push
mov
fstpt
ret
and
daa
stc
sti
icebp
enter
shl
fnsave
pop
xchg
push
ss
in
pop
mov
arpl
stos
js
xchg
loop
sub
mov
sub
pop
insl
push
lea
fwait
and
or
cld
pusha
nop
mov
lods
popa
mov
repz
arpl
adc
int
cmp
dec
xchg
or
stos
or
cs
adc
or
test
jno
dec
pushf
dec
arpl
les
xchg
xchg
jecxz
xor
inc
dec
loop
cmp
arpl
xorl
dec
pop
xchg
push
push
icebp
xchg
data16
movsl
xchg
fnsave
scas
xchg
xchg
repz
mov
je
arpl
loopne
mov
sbb
incb
dec
mov
or
hlt
das
mov
xchg
data16
xor
push
movsb
ds
xchg
sub
sbb
add
cmp
add
int3
cltd
aad
mov
cmp
cli
inc
test
pop
clc
mov
fildl
or
and
push
xchg
sub
push
fwait
fs
pop
add
shlb
rcll
fsubrp
out
lock
jnp
jb
stos
sbbl
data16
lret
dec
pop
xchg
or
sbb
scas
imul
xchg
loope
mov
xor
lds
subb
cmp
ucomiss
fs
and
pop
les
add
popf
movsl
cli
sub
jecxz
scas
jno
mov
cs
pop
out
bound
lcall
sbb
ret
pusha
sbb
int
je
and
sbb
dec
push
std
test
mov
mov
cwtl
lock
xor
push
fnstcw
ljmp
mov
pop
jle
sbb
lahf
insb
dec
popf
inc
xchg
push
push
imul
mov
mov
lahf
or
hlt
stos
jl
jae
inc
dec
out
add
decb
mov
test
fstl
push
scas
jp
jnp,pt
sti
inc
fdiv
pop
cmp
xor
pop
dec
sbb
outsb
cld
add
leave
or
test
call
mov
and
xor
mov
sbb
movsb
iret
lods
int3
dec
cmp
lret
cmc
pop
pop
xchg
pop
pop
adc
clc
es
jge
adc
lds
shll
xor
sub
mov
adcl
das
mov
sub
adc
or
cltd
push
push
mov
lret
cmc
ret
vmwrite
test
ret
mov
push
pop
push
gs
cmc
out
cld
leave
push
cli
adc
push
fimuls
bound
jb
jo
jno
pop
ror
xor
clc
ret
xor
outsl
fisubrs
or
and
jl
jl
lret
ljmp
mov
mov
pop
ja
cltd
cld
sbb
jge
or
adc
ss
jb
ja
ss
insb
ret
sbb
outsb
pop
and
pop
loope
push
xchg
jbe
sub
aam
leave
lret
imul
arpl
xchg
or
pop
xlat
xor
xor
push
push
push
dec
lret
insb
mov
dec
pop
arpl
in
lret
stos
mov
imul
loop
mov
jo
mov
inc
cs
dec
adc
filds
jb
mov
add
cwtl
xor
mov
ret
push
insb
lds
add
push
lret
xor
mov
mov
dec
dec
xlat
sub
test
mov
ffree
sub
gs
nop
mov
push
cs
mov
mov
movsl
mov
adc
push
inc
jbe
xor
rcll
aam
cmpsl
fptan
pop
cmpsb
rcrb
lahf
or
adc
mov
clc
mov
call
int3
jnp
push
loop,pn
xor
js
xchg
fstps
shrb
push
mov
int
push
and
sbb
or
and
or
mov
dec
push
mov
xor
lods
cwtl
pop
int3
mov
mov
ljmp
pop
js
cmp
mov
or
jns
les
xor
mov
lahf
xchg
into
fldl
aaa
xorl
push
pusha
jmp
andb
aaa
jl
push
adc
cli
mov
cld
das
insb
fmuls
mov
mov
stos
lods
inc
dec
jbe
sbb
pop
or
jl
imul
jl
pop
jne
mov
sahf
mov
pop
mov
daa
inc
jmp
inc
mov
test
mov
inc
ljmp
hlt
jbe
xchg
test
aas
cltd
sbb
sarl
mov
ja
mov
or
repz
or
mul
xchg
add
je
popa
add
enter
std
adc
pusha
sub
push
je
adc
or
adc
and
adc
fimull
xchg
xor
push
fbstp
mov
sub
subl
xchg
push
add
movsl
int
sub
stos
push
jmp
movsb
and
or
mov
xorl
imul
adc
test
mov
jge
gs
add
pusha
cltd
repz
adc
sti
clc
pop
and
scas
fwait
adc
icebp
xor
rcrl
mov
and
push
mov
jle
popa
or
pop
mov
test
pop
xchg
pop
hlt
push
lret
mov
lcall
sbb
inc
fwait
mov
test
mov
cmpsb
rorb
jle
shrb
cmp
repz
cltd
sub
popa
mov
lods
in
mov
xor
ja
fiaddl
inc
inc
push
mov
shl
data16
cmp
pop
pop
stc
jbe
mov
mov
idivl
shlb
lcall
das
hlt
loop
fdivl
mov
stos
xor
inc
cmp
xchg
xlat
dec
push
out
xor
mov
jle
cltd
leave
jmp
sbb
lea
mov
hlt
subl
fdivrs
fdivs
clc
push
xchg
pop
pushf
or
sbb
push
fists
subl
pop
stc
pop
movsl
jbe
fnstsw
and
mov
insl
out
bound
lret
pusha
scas
xorl
rcr
xchg
repz
loop
and
add
push
add
les
ds
cmc
js
nop
mov
adc
dec
imul
push
loopne
iret
fwait
add
dec
jbe
add
inc
cs
xor
sub
pusha
or
enter
xchg
mov
test
xlat
sbb
shrb
out
jae
outsl
fisubrs
pop
add
out
mov
sbb
stos
stc
ret
push
test
pop
add
stc
js
cld
mov
mov
movsb
mov
pop
shll
movsl
dec
jmp
dec
dec
dec
out
push
pop
lock
lods
xchg
inc
bound
mov
leavew
jbe
pop
and
test
xchg
iret
rol
cmp
cmp
mov
stos
and
cmp
mov
loop
shl
push
sbb
je
aad
test
xor
dec
in
or
and
sti
std
cmp
jg
adc
fldt
jl
xchg
loop
cmp
out
call
cmc
aam
push
adc
adc
sbb
xor
mov
xchg
pop
imul
dec
jno
inc
cwtl
mov
dec
ret
cmc
or
loope
call
fs
fldenv
int
mov
pop
inc
jl
pop
mov
in
and
rorl
cli
leave
cwtl
jo
popa
pop
mov
lret
mov
xchg
movsl
lret
out
pop
xchg
fidivrl
outsl
lods
shll
shl
std
dec
into
dec
stos
pop
push
adc
fistpll
xor
adc
sub
int3
dec
das
das
fisttpl
mov
lods
fmuls
push
jmp
in
mov
aam
jns
sub
scas
scas
popf
mov
pop
push
inc
mov
out
mov
shl
or
lret
leave
or
cmpsl
sti
pop
aaa
lea
push
add
out
hlt
jl
add
jl
scas
cmp
es
out
lods
addr16
cs
inc
pushl
cmpb
pusha
scas
sub
or
xor
pushf
pop
pop
adc
pop
pop
int3
sti
shll
nop
add
mov
movsl
dec
mov
fsubl
out
fptan
stc
pop
ficomps
scas
mov
pop
into
sub
out
scas
jne
pop
popf
inc
ljmp
fdivl
sbb
inc
movsl
push
add
xor
pop
pop
pop
popf
js
sbb
repz
test
adc
mov
and
scas
scas
push
insl
xchg
stos
test
sti
lret
outsb
adc
rcr
mov
dec
jbe
jne
jge
fstp
stos
adc
and
and
xorb
push
cmp
mov
aad
mov
and
insl
lahf
or
loop
mov
inc
inc
loopne
insb
cmp
outsl
aad
gs
daa
es
daa
sbb
insl
xor
stc
mov
jmp
mov
cld
jp
and
mov
imul
and
xor
loope
push
rclb
fcmovnu
addb
adc
mov
repnz
mov
lods
subl
aas
negl
mov
popa
pop
stos
sahf
jle
in
pop
jmp
cmp
pop
xor
lock
push
mov
stos
inc
push
fdivl
pop
rol
push
sarl
cmp
mov
ret
jle
dec
mov
push
in
out
lods
in
ljmp
decb
mov
inc
jmp
out
mov
sti
cwtl
push
aam
notl
loop
dec
loopne
shlb
mov
jo
mov
push
xor
cmp
add
incl
gs
repz
sti
out
sub
scas
xchg
mov
sub
push
adc
jae
mov
mov
negl
repnz
in
pop
pusha
mov
push
adc
insb
cmp
sbb
mulb
into
loope
push
icebp
popf
xchg
inc
in
dec
lret
add
lods
xor
sub
fcmovnu
mov
jg
test
or
and
std
jne
pop
inc
insb
adc
mov
aaa
rclb
cmpsl
js
pop
pop
jb
dec
movsl
popa
push
inc
push
inc
cmp
pusha
sbb
xchg
iret
andl
imul
leave
jb
pop
or
iret
fwait
adc
and
mov
adc
lea
dec
sub
xor
aad
int
xor
cmpsb
xlat
inc
scas
scas
xchg
div
or
arpl
xchg
rorl
cld
adc
push
sbb
fistpl
rcrl
int
pop
sbb
js
out
or
repz
dec
and
mov
mov
and
or
add
add
cld
insl
int3
mov
jp
sti
call
push
outsl
testb
jg
jae
mov
jo
mov
aam
cmp
push
inc
rcl
fiadds
popa
add
mov
adc
lret
ja
ljmp
jle
cltd
mov
add
lcall
sub
push
lret
jno
push
sbb
push
jge
repnz
int
mov
mov
adc
decl
add
jle
push
dec
jo
outsb
nop
push
cmp
popf
bound
aaa
mov
adc
cmpsb
push
jbe
jb
cmp
jnp
mov
jne
inc
sub
std
shll
inc
mov
xchg
cmp
pop
sub
std
adc
dec
mov
or
cmc
imul
mov
enter
pusha
icebp
enter
jge
lods
in
nop
in
and
into
push
xor
in
dec
hlt
rolb
cwtl
adc
cmp
push
cmp
les
mov
test
add
jmp
lcall
lock
lahf
mov
hlt
pop
mov
lds
mov
jns
and
jl
pop
dec
mov
stos
dec
fstl
dec
add
mov
add
xchg
cmpl
push
or
inc
dec
push
xchg
test
cmp
fadd
and
cmp
push
js
xor
fwait
dec
xchg
adc
popa
dec
mov
push
fildl
sub
push
mov
cmc
sbbb
pop
fdivp
pusha
clc
xchg
call
or
inc
xchg
cmp
das
push
loop
insl
out
test
lret
bnd
adc
sti
lock
and
pop
movsl
imul
push
out
addl
xor
mov
xchg
es
jp
jg
mov
cs
xorb
push
jecxz
cmc
shlb
cmp
dec
mov
xchg
daa
ficomps
sub
dec
cmp
mov
cmp
mov
mov
lret
je
cmp
push
add
mov
inc
and
lcall
push
sarb
ja
inc
sub
or
add
pop
out
xchg
jge
xchg
sbb
adc
movsb
andl
mov
rorl
jne
mov
inc
push
mov
add
xchg
sbb
cmpsl
ja
ret
iret
dec
mov
pushf
enter
int
mov
fstps
popf
xchg
js
sbb
cmp
cmp
sbb
push
mov
inc
js
sbbb
subb
call
sub
outsb
fwait
movsl
xor
push
fwait
pop
pop
outsb
out
pop
xchg
insl
stc
xor
cmp
aam
scas
call
mov
mov
push
jge
cli
jbe
movsl
nop
gs
arpl
pop
pop
insl
aaa
nop
lock
js
sbb
xchg
imul
into
ljmp
nop
fidivrs
mov
mov
lcall
mov
xor
mov
fidivrs
push
inc
adc
outsb
xchg
cmp
fcompl
pop
arpl
mov
popa
mov
aad
sub
inc
pop
stos
push
out
pop
call
xchg
adc
xchg
mov
xchg
cmpb
mov
pop
pushf
mov
out
nop
sbb
pop
dec
xlat
jnp
mov
insb
dec
xchg
mov
sbb
mov
cmpsl
lods
pop
adcl
lret
outsl
imul
cmpsl
add
inc
dec
jle
cwtl
popa
jns
adc
mov
aam
mov
decb
push
xchg
pushf
imulb
sbb
jae
loopne
mov
adc
scas
cwtl
push
sbb
idivl
xor
aas
add
sbb
insl
pop
dec
loope
jecxz
push
out
add
cmp
sub
in
and
test
fptan
das
push
pop
push
test
imul
adc
popf
jo
cld
dec
out
dec
popf
scas
adc
pop
fstpl
push
jmp
iret
or
jno
icebp
mov
or
std
fiadds
cmpb
fstpt
jae
dec
push
lods
cmp
sti
int3
test
fsubrl
sub
push
popa
pshufw
push
inc
mov
dec
lret
push
mov
push
aas
inc
in
and
inc
sahf
cwtl
orb
mov
xchg
mov
mov
xchg
sub
xchg
les
cmpsl
bndldx
push
mov
cli
das
pop
nop
popa
fs
scas
xor
test
inc
add
fldlg2
ss
les
sti
stos
mov
imul
sbb
mov
or
icebp
and
and
cli
jle
data16
test
in
jmp
cmpsl
push
xchg
xchg
ja
add
test
sbb
and
mov
in
inc
lods
ret
into
out
hlt
cmpsb
or
ja
sbb
arpl
in
lea
jns
sub
sub
xchg
sahf
bnd
and
clc
aam
fisubl
push
nop
sbb
or
inc
xor
rorb
or
xor
inc
ret
jb
push
movsl
icebp
into
or
es
dec
jnp
push
sbb
iret
stos
pop
jecxz
xor
pop
sbb
fnop
lret
pop
fnstenv
mov
data16
xchg
test
xor
sbb
jo
pop
roll
and
daa
jge
fimuls
jecxz
or
insb
xor
notl
loop
adc
mov
dec
adcb
and
ja
mov
mov
mov
mov
xor
popa
push
push
stos
inc
popa
sahf
loop
fwait
mov
incl
int3
cmp
movsl
dec
mov
push
idivb
mov
xor
xor
push
dec
adc
pop
das
dec
arpl
push
clc
dec
lds
daa
and
jle
push
mov
xorl
mov
mov
mov
push
xor
in
sarb
adcb
das
popf
mov
xchg
test
stc
sarl
outsl
mov
jo
int
mov
stos
jbe
sqrtps
inc
cmpb
inc
jbe
cmpsl
cs
pop
stos
cld
in
add
movsl
xor
push
cmp
jp
iret
mov
mov
mov
pop
mov
les
xor
aas
jmp
in
or
mov
jge
loopne
fisttps
push
in
xchg
stc
outsb
jge
sub
cltd
pop
pop
sub
or
mov
jnp
ret
data16
fwait
das
sbb
cmp
push
data16
adc
push
cwtl
clc
movsb
in
dec
mov
imul
and
js
mov
subb
hlt
inc
lods
mov
mov
fnstcw
sbb
insl
and
mov
dec
pop
aas
mov
cmp
adc
call
sbb
inc
xchg
ds
loopne
ljmp
jge
add
fisttps
les
clc
lgs
xchg
mov
arpl
imul
jecxz
ljmp
push
addb
xchg
inc
jg
push
and
xor
inc
jge
and
jmp
adc
mov
xor
test
mov
cmpsl
and
fstpl
test
lret
sbb
and
nop
pop
push
outsl
movsl
jmp
adc
push
xor
adc
push
jge
mov
sahf
leave
sub
push
sub
adc
std
decl
jnp
mov
in
cmp
ljmp
insb
popf
jne
cli
shlb
push
inc
mov
arpl
xchg
cmp
inc
or
inc
mov
mov
ror
aas
fsts
lahf
sub
dec
fnstcw
add
in
je
outsl
clc
jnp
mov
adc
cmp
orb
push
out
jae
dec
lahf
add
ficompl
test
scas
lods
enter
and
lret
add
xchg
mov
mov
daa
fistl
xlat
test
pop
aad
arpl
bnd
sbb
dec
mov
rcl
mov
test
jnp
pop
arpl
jg
std
out
sub
sub
js
daa
leave
mov
or
sub
shrb
cmpsb
test
nop
shlb
add
in
xor
sbb
mov
cmp
out
cs
ja
dec
lds
mov
loope
imul
xchg
pop
adc
fcmovnbe
test
jb
cmp
mov
inc
push
dec
adc
call
cmpsb
std
jl
mov
enter
sub
scas
dec
std
mov
cmp
out
out
add
incb
loope
pop
mov
call
xchg
lods
sub
or
insb
sub
or
cmpsl
xor
cwtl
imul
into
push
adc
out
repz
mov
sbb
pop
les
enter
inc
sbb
adc
dec
out
jge
mov
inc
daa
push
push
sbb
add
insl
divl
jns
scas
adc
mov
nop
test
sar
arpl
cmc
dec
pusha
mov
lea
mov
pop
lcall
stos
xor
or
or
mov
sbb
and
mov
jl
xor
fildll
test
in
push
xchg
sbb
lds
pusha
dec
rcll
sbb
aam
mov
shlb
cmp
jmp
add
cmp
mov
pop
int3
and
mov
stc
dec
mov
jns
dec
fcmovu
push
xor
or
rorb
or
cmp
loop
or
shlb
mov
sbb
mov
or
and
lcall
mov
mov
js
and
orb
jnp
in
sub
xchg
addl
jbe
xor
cmp
int
add
jno
xchg
mov
push
fcomps
inc
xchg
lcall
adc
mov
sbb
sbb
cli
ljmp
addr16
adc
mov
adc
mov
lock
lds
lods
test
xor
cmpsl
out
cmp
mov
cmpsl
or
sub
pop
out
jmp
in
mov
mov
ljmp
jle
aad
int3
out
push
xlat
push
mov
movsl
add
inc
push
pop
jbe
inc
dec
dec
mov
xor
lea
inc
cli
jbe
cmp
adc
addl
jno
mov
ret
insl
and
jecxz
sbb
fs
inc
dec
push
xor
adc
ret
xchg
sub
or
daa
or
mov
push
repnz
cmpb
cmp
add
mov
xor
jmp
sub
push
jp
push
cmp
jo
xchg
sub
jmp
aam
bound
jecxz
pop
adcb
enter
mov
ret
mov
xor
js
jge
pop
xor
or
jns
cmc
icebp
lds
sets
cltd
jl
mov
add
cld
mov
adc
ss
sub
cmp
inc
adc
das
or
cmp
and
loopne
cmp
sahf
pop
sub
inc
push
mov
mov
mov
dec
add
lds
imul
add
or
iret
pusha
xor
sbb
lahf
test
flds
pop
xchg
les
or
jmp
add
dec
xchg
jp
push
mov
and
lds
and
push
jmp
or
stc
testb
or
jno
fildll
shlb
mov
mov
inc
stos
xor
testl
cwtl
fsubrl
dec
decl
es
pop
cli
sti
in
adc
in
dec
ficoms
es
scas
adc
addl
outsb
jge
jecxz
pop
and
mov
insb
mov
mov
mov
aaa
inc
ret
lcall
dec
inc
bound
or
jg
ds
leave
and
dec
adc
mov
xor
sti
jae
sti
mov
mov
add
dec
add
inc
sub
adc
mov
subl
in
jne
fiaddl
ja
sahf
test
dec
lret
test
dec
das
shrl
fistl
rclb
mov
inc
or
into
ds
mov
cli
loopne
jne
rorl
inc
mov
mov
sbb
mov
or
inc
xor
mov
imul
ja
sarl
in
mov
cmpsl
jae
subb
inc
idivb
adc
sbb
adc
inc
pop
loop
push
test
adcl
inc
sti
leave
jo
and
lds
cmp
lret
sub
cltd
inc
int3
jns
cmp
je
imul
lods
push
repnz
push
jae
sar
xor
xor
jle
xchg
mov
sub
push
sti
dec
shll
loope
out
sub
push
jecxz
xchg
inc
jb
dec
aas
xor
movsb
jl
shrl
mov
xor
xchg
sar
lea
cmp
push
add
iret
fscale
cmp
jbe
cmp
int
mov
or
adc
testl
mov
mov
push
and
jnp
cmp
add
clc
leave
imul
add
jge
insl
das
in
inc
cmpsl
cmp
daa
sbb
inc
add
arpl
test
add
stos
sbb
out
xor
sbb
ret
jnp
test
mov
insb
in
mov
addr16
out
adc
jne
inc
mov
push
ret
pop
shll
dec
pusha
inc
adc
call
aam
clc
movsb
jbe
scas
mov
lea
addps
lds
frstor
nop
dec
jmp
cltd
scas
xor
jecxz
xchg
push
add
mov
mov
mov
test
mov
push
jp,pt
addr16
jne
or
je
or
fsubs
cmp
out
mov
mov
lock
test
mov
push
shrl
adc
in
into
dec
jbe
in
xchg
mov
add
inc
add
pop
pop
pop
mov
xor
pop
xchg
sub
mov
dec
cwtl
sub
js
mov
mov
add
mov
pop
insb
pusha
adcl
push
sub
loopne
fs
push
push
push
ret
ror
jns
lock
pop
lock
adc
jno
dec
pop
mov
adc
lock
movsl
mov
popa
pushf
or
mov
enter
in
daa
mov
dec
sbb
adc
jnp
or
dec
loopne
sbb
adc
aaa
loope
add
imul
pop
jp
aaa
lcall
pop
sahf
adc
out
cmpsl
and
test
inc
cmp
in
js
popf
mov
pop
push
cli
dec
mov
cli
xlat
or
lret
in
lock
daa
roll
loope
push
jo
pop
loopne
addr16
je
xorb
test
fsubrs
sbb
out
and
xor
stos
inc
je
add
and
dec
loope
mov
fwait
or
pop
adc
repz
dec
into
or
mov
xchg
add
sbb
les
dec
push
sbb
inc
ds
stos
inc
add
and
sub
mov
clc
sub
add
mov
jge
lods
sbb
sarb
jl
lret
icebp
and
mov
test
lds
xor
mov
cmp
xchg
mov
leave
jp
inc
ja
sub
bound
shl
add
std
negb
jo
cld
mov
rcl
dec
xor
xor
xchg
or
jne
mov
pop
inc
test
xchg
push
hlt
push
push
les
sbb
int3
iret
sti
push
xlat
add
mov
add
jne
cld
push
les
mov
push
adc
sub
inc
add
pop
sub
int3
std
cld
inc
insb
aaa
enter
mov
loope
mov
mov
out
xor
loop
sub
push
push
inc
test
imul
into
jns
and
inc
fldl
test
aam
lock
mov
sub
icebp
int
cli
mov
mov
lret
arpl
jo
repz
ficoml
adc
pop
in
mov
ljmp
sub
ret
push
fs
or
adc
aas
shr
sub
add
or
dec
pushf
lea
shlb
cli
xchg
mov
adc
loopne
adc
jbe
sub
lock
int3
out
mov
dec
push
out
cltd
scas
xchg
inc
in
jno
push
icebp
sbb
icebp
lahf
mov
fsubr
in
dec
inc
sahf
addl
push
sbb
mov
lahf
or
ret
pop
jg
adcl
icebp
and
adc
or
inc
aam
dec
int
pushl
xor
add
cwtl
divl
test
lcall
lock
mov
ljmp
jne
lcall
cwtl
scas
popa
enter
push
inc
and
sbb
jne
in
mov
mov
and
pusha
sub
es
scas
sbb
mov
out
notl
push
inc
adc
mov
in
repz
dec
sub
or
in
scas
aad
popa
xchg
add
out
mov
push
outsb
add
xor
xor
ret
add
or
cs
add
cmp
cmp
popa
es
add
sbb
cmpsl
mov
inc
add
mov
adc
andl
cmp
mov
xor
jae
std
mov
sub
and
mov
shlb
test
and
ljmp
es
leave
fcmovnb
cmp
pushf
pop
push
jo
enter
insl
es
mov
repnz
and
ljmp
int
inc
lock
adc
ret
inc
jp
aad
jg
dec
rorl
push
xor
lods
sbb
sbb
push
loopne
mov
inc
jno
das
jbe
add
out
lret
push
or
das
sub
mov
xor
dec
mov
xchg
shrb
daa
in
add
cmp
outsb
inc
jne
repnz
sbbl
xor
loope
cmpsl
jno
scas
jg
scas
sbb
xchg
dec
jnp
dec
or
sahf
cmp
in
repz
scas
pop
shrl
cmp
sbb
xor
jecxz
js
div
pop
insb
xor
xor
push
mov
cmp
popf
dec
cmp
dec
push
into
iret
mov
sub
dec
lock
mov
arpl
aad
sbb
push
dec
dec
cmp
push
jp
rorb
or
fnstcw
sub
test
bound
lcall
dec
sub
xchg
and
dec
cmpsb
in
daa
push
invd
add
aad
mov
outsl
mov
jae
ja
sti
push
out
pop
cli
popf
mov
fwait
and
nop
xor
jp
mov
pop
adc
xchg
and
mov
enter
mov
loop
out
dec
inc
rol
xchg
pop
inc
int3
movsl
pop
mov
mov
negb
push
mov
loopne
leave
and
shlb
mov
pop
loope
repnz
lret
push
insl
rcr
into
or
and
add
jg
and
repz
pop
pop
jg
sub
lock
xchg
in
ds
mov
jp
sbbl
inc
pop
out
div
lcall
push
popf
adc
sub
aad
push
pop
push
push
pusha
nop
lods
dec
repz
dec
xchg
jmp
xchg
dec
rorl
dec
std
scas
adc
mov
das
mov
push
gs
sbb
or
sbb
jns
lcall
ja
adc
push
push
or
sub
stos
sti
dec
testb
dec
js
es
sub
arpl
pop
cs
dec
inc
mov
fiaddl
inc
xchg
mov
fistl
ficompl
dec
xchg
push
pop
pop
nop
lcall
testb
call
ss
add
test
loope
dec
mov
aas
mov
out
push
pusha
fsubs
insl
das
aas
repz
insl
add
imul
jne
loope
lods
scas
iret
mov
aas
ss
arpl
pop
mov
mov
sbb
dec
dec
mov
repz
addb
shrl
pushf
loop
xlat
ds
repz
lret
mov
mov
xchg
pop
std
jge
xchg
cwtl
je
jg
mov
mov
add
jbe
add
fbld
in
mov
push
dec
pop
mov
ljmp
repz
mov
mov
sub
neg
sahf
fldenv
dec
mov
sbb
xorb
pop
mov
dec
lods
fsubrl
cmpsl
mov
pop
xchg
push
dec
gs
fstps
xchg
mov
xchg
loop
mul
bts
dec
roll
push
in
jno
or
lcall
mov
push
mov
mov
push
das
lret
cmp
int
loop
pusha
inc
and
mov
les
lock
hlt
sbb
aad
add
cmpsl
scas
and
iret
sub
mov
test
mov
push
testl
je
scas
out
push
xchg
dec
leave
hlt
popf
icebp
pushf
mov
fisubs
inc
jne
cwtl
test
arpl
mov
xor
mov
mov
adc
lret
xor
and
fwait
cmpsb
inc
mov
dec
push
mov
jno
enter
fcoms
test
or
jp
jb
jecxz
das
lods
insl
int
shll
fisttps
aas
inc
test
pop
mov
jle
mov
and
mov
add
xchg
clc
pop
and
xor
out
push
add
jge
movsb
js
gs
lods
test
std
ds
mov
addr16
mov
jg
or
xchg
sub
mov
jge
inc
mov
mov
repz
inc
lods
mov
sbb
mov
or
cmp
mov
xor
and
pop
movsl
mov
xchg
orl
jae
add
xor
in
add
push
test
inc
pop
mov
ss
leave
ds
addr16
nop
mov
movb
add
sub
jo
fsubs
rcrb
pop
data16
xchg
dec
cli
and
in
mov
mull
jg
adc
out
dec
pop
repnz
shll
cmpb
inc
jg
pop
andb
sub
xor
pop
ret
mov
mov
jbe
xchg
sti
movsb
sbb
cmp
pop
in
bound
xor
mov
dec
pusha
call
arpl
xchg
out
movsb
cmc
aas
mov
or
lret
cmp
xchg
scas
add
mov
inc
or
jle
mov
xchg
mov
sbb
stos
jnp
outsb
sarb
xlat
nop
mov
and
enter
push
aad
adc
pop
pop
or
mov
push
das
mov
dec
cli
movb
push
sbb
inc
pop
test
stc
xchg
or
outsb
fwait
ret
test
or
fadd
lret
and
dec
add
nop
xlat
and
or
inc
xor
push
xor
adcl
mov
scas
sbb
aad
inc
stos
cwtl
and
in
push
cld
mov
cltd
jmp
je
xchg
jge
mov
xor
mov
rorb
or
scas
mov
or
rolb
hlt
jnp,pt
cld
or
xor
mov
cmp
lock
cmp
test
stos
scas
out
insl
arpl
outsl
mov
cmpsl
sbb
daa
test
mov
mov
lods
and
jne
imul
push
pop
hlt
jmp
add
test
inc
arpl
adc
mov
adc
loopne
dec
ja
push
jmp
push
insb
pop
addl
stos
fwait
xor
jbe
push
jle
xchg
or
lcall
jno
mov
adc
addr16
add
jge
mov
dec
xchg
faddl
imul
loope
fisubrl
movsl
pushf
mov
inc
xlat
jle
lock
pop
sub
push
or
testl
insl
pop
cld
js
in
not
js
in
mov
cld
push
or
mov
outsb
mov
xchg
inc
push
frstor
ret
mov
es
mov
add
loopne
lock
dec
sti
xchg
mov
add
fwait
mov
xchg
hlt
jg
addl
inc
jl
test
pop
outsl
cwtl
loop
enter
test
sub
aaa
mov
xor
aam
test
clc
pop
cs
frstor
test
xor
stc
adc
stos
leave
sbb
sbb
or
dec
arpl
push
or
dec
and
cmpsb
pop
inc
mov
pop
jmp
cmp
sbb
mov
lahf
mov
pusha
in
xchg
rorl
sbb
mov
rorl
mov
push
and
fs
mov
jnp
inc
leave
or
push
test
out
or
or
sub
push
pop
fiaddl
sub
sub
rol
sti
xchg
sub
add
fisttps
mov
jg
add
mov
pusha
iret
movsb
in
push
adc
or
cmp
and
xchg
negl
inc
roll
cmpl
mov
jp
push
outsl
sbb
stos
jge
scas
aad
xchg
std
test
ret
mov
mov
xor
stos
or
add
or
rorb
sbb
pop
scas
hlt
sbb
stos
and
mov
jbe
pushf
adc
fstpl
add
mov
dec
lea
fprem1
inc
cmpsb
pop
in
je
rcrb
lods
push
jg
bound
mov
push
jo
pop
lods
and
mov
mov
cltd
sub
test
les
pusha
pushf
sti
in
jne
push
xchg
es
jg
jmp
mov
cmp
ja
test
fnstenv
lds
call
dec
sbb
cltd
jno,pn
sbb
mov
repnz
add
hlt
fstpl
sbb
pop
pop
add
adcb
loope
enter
sbb
bound
test
subl
ret
jb
push
mov
pusha
je
push
ljmp
cmp
add
fiadds
push
xchg
pushf
stc
lods
shr
dec
inc
and
daa
notb
inc
jge
ret
sub
les
and
push
add
fldt
shl
xchg
mov
in
int3
xchg
repz
mov
jecxz
dec
ret
enter
push
lods
pop
pop
push
out
pop
adc
inc
test
test
ds
je
mov
mov
fistpll
jecxz
insl
ds
int
cmp
adc
lret
add
xor
add
je
add
mov
push
fsubr
sub
pop
ljmp
es
push
and
jcxz
shrb
jbe
mov
out
mov
in
movsl
negb
jns
cmpb
or
sub
stc
mov
jmp
mov
out
adc
test
rolb
lahf
pop
adcl
mov
ret
mov
loop
lods
ss
lahf
sbb
push
jne
ret
push
jne
mov
and
xor
jmp
imul
xor
jg
je
mov
lds
mov
xchg
push
jmp
loop
push
pop
mov
andb
in
in
das
bound
movsb
mov
mov
divl
push
neg
fnstsw
in
xor
mov
dec
lods
push
fs
test
sarb
dec
loop
clc
mov
xchg
mov
dec
stc
in
xor
xchg
leave
and
je
cmp
sub
jae
ja
insb
shll
mov
fcomps
daa
test
ljmp
cmp
frstor
clc
inc
sbb
lea
xchg
int
sub
fdivrl
jecxz
fcom
inc
cmp
outsl
ss
mov
sub
or
in
adc
scas
jnp
mov
fdivl
cmovnp
jnp
or
lret
cmp
test
andb
subb
shl
jne
add
nop
push
clc
push
pop
iret
sub
mov
test
test
insl
mov
ljmp
cwtl
loop
cmpsb
enter
dec
cmpsb
cwtl
mov
jle
cmp
pop
or
shrb
sub
fadd
adc
out
cmp
sub
add
push
mov
jge
jnp
sti
lods
fldcw
cmp
mov
xchg
in
lods
fiaddl
xor
and
adc
mov
xchg
pop
mov
xor
mov
sub
mov
jp
fisubl
and
jae
xor
adc
mov
je
in
stos
adc
in
test
xchg
aam
xorb
pop
dec
bound
cld
xchg
sbb
jl
cld
dec
and
sub
mov
test
std
xchg
lret
call
test
push
stc
popf
hlt
into
scas
or
pop
fwait
stos
xchg
sbb
stc
pop
sub
mov
cwtl
movsb
decb
pop
add
insb
jge
mov
push
and
xorl
inc
movsb
adc
pop
push
push
loop
push
xor
outsb
lahf
mov
push
stos
leave
in
scas
sti
add
xor
mov
dec
dec
sub
cmc
stos
nopl
mov
adc
pusha
or
movsb
hlt
loop
xchg
insb
sahf
fwait
lock
dec
pop
pop
js
subl
pop
out
cmp
aad
test
jg
repz
test
insb
pop
mov
fs
aam
xor
cmp
enter
jl
in
xchg
cmpsb
pop
aam
addr16
dec
push
ss
rclb
testl
sti
ja
xor
dec
fsts
shll
out
mov
lea
jbe
stos
rolb
mov
xlat
pop
lcall
loope
out
popa
xchg
xor
test
mov
push
xor
cmpb
mov
dec
idiv
imul
aas
int
movsb
mov
loopne
sub
adc
aad
jae
notl
loopne
out
cmp
and
xor
dec
mov
inc
xor
lret
push
jo
pop
mov
lea
jmp
outsb
adc
jmp
fwait
adc
xchg
fildl
cltd
mov
jmp
std
pop
mov
push
xchg
imul
xchg
jne
aas
pop
mov
insl
mov
add
mov
inc
jl
in
iret
adc
adc
fdivrs
mov
xchg
or
shll
sub
cmpb
add
lcall
test
aam
adc
imul
pop
inc
call
imul
mov
pop
movsl
cmp
push
mov
stos
cmp
fnstcw
lods
push
mov
loope
lahf
idivl
std
sub
mov
xor
and
xor
and
test
jo
movsb
push
xlat
dec
mov
fidivrs
sbb
subb
mov
enter
pop
or
arpl
movsl
iret
push
add
sub
ss
xchg
xor
mov
xor
fcmove
ja
repz
xchg
push
push
icebp
cmc
cmp
push
lahf
push
icebp
rcll
xlat
mov
mov
dec
pop
andl
cmp
pop
xor
cmpsb
loope
cmpsb
enter
inc
mov
mov
loope
loopne
and
mov
cli
push
pop
mov
mov
jl
stc
shrl
pop
mov
mov
push
mov
scas
popa
test
in
add
pop
inc
fnop
lret
jbe
jl
ss
mov
push
or
dec
lea
addr16
jbe
adc
outsl
inc
mov
xchg
fimull
lods
in
jge
int
or
in
add
cmp
xchg
stos
inc
mov
lahf
dec
adc
mov
icebp
lahf
pop
pop
mov
pop
dec
scas
cmp
push
xchg
dec
adc
add
movsb
fistpl
les
jbe
jle
repz
lret
jbe
adc
ds
pop
das
mov
xchg
and
pop
sbb
mov
fnstenv
fcomps
sbb
decb
inc
cmc
xor
xor
xor
add
jns
xor
aaa
adc
mov
pop
inc
imul
mov
add
sbb
sbb
xchg
push
std
pop
ret
dec
mov
push
fstps
jo
dec
adc
je
add
dec
decl
ds
ds
pop
cmp
mov
bound
repnz
jecxz
mov
xlat
or
pop
xchg
test
or
stos
push
in
imul
xor
mov
cld
repz
nop
les
les
jp
sahf
int
push
mov
inc
aad
jmp
lret
test
in
and
adc
dec
das
adc
sbb
out
mov
or
imul
inc
gs
ret
pusha
fdivr
inc
shrl
outsb
pop
mov
andb
les
or
mov
mov
mov
fwait
add
and
sbb
mov
push
les
lock
or
lcall
add
xor
jmp
in
ret
pusha
mov
les
lret
mov
jno
inc
scas
mov
adc
mov
sahf
pop
fistpl
nop
push
push
xchg
jno
pop
sub
stos
fidivrs
ds
jb
pop
xor
ljmp
movb
jo
push
shll
and
push
cmpsb
mov
iret
push
add
jge
mov
in
pop
or
stos
and
jae
add
push
jo
cmp
fbld
shr
jnp
mov
imul
mov
dec
lea
push
aad
sbb
test
sbb
and
inc
nop
mov
xchg
fcoms
add
sub
fadds
xchg
aaa
out
ror
js
mov
mov
scas
pop
leave
lods
add
cmp
inc
addb
jge
icebp
fidivl
cwtl
push
pop
sbb
xchg
pop
pop
fldt
push
enter
mov
xchg
xchg
hlt
cmc
fs
daa
mov
fstp
shlb
lea
fwait
divl
adc
imul
push
jb
cs
xchg
jae
sahf
jns
shrb
pop
dec
jbe
outsb
mov
inc
jnp
and
jno
imul
idivb
jge
xchg
jne
xchg
mov
lds
adc
cltd
into
out
sbb
jmp
into
std
aam
vandnps
std
and
fistps
js
aad
fsubrs
sbb
cmp
dec
int3
lods
in
xchg
in
lods
repnz
iret
push
sub
js
add
adc
pop
push
add
movsl
insl
shlb
sbb
movsb
imul
and
dec
jecxz
xchg
inc
clc
inc
fidivrs
in
fcoml
xchg
xor
push
or
add
adc
inc
push
mov
rorl
mov
mov
pxor
nop
fcomps
xor
inc
inc
cmp
xchg
imul
enter
out
int3
mov
xchg
pop
loop
imul
sahf
xchg
or
add
in
sbb
shlb
aam
mov
lcall
daa
jns
sub
pop
imul
addl
xor
xchg
outsb
out
xor
adc
xor
fwait
lods
mov
hlt
jns
fwait
out
lahf
insb
jp
push
or
fidivs
push
mov
inc
mov
mov
mov
sti
push
inc
lret
nop
cmp
out
fcmovbe
mov
xlat
add
sbb
mov
sub
cmpsl
xor
sbb
dec
jno
push
jmp
cli
adc
xor
mov
popa
inc
ljmp
xchg
stos
jge
out
nop
and
lock
mov
xchg
dec
xor
adc
mov
data16
sub
push
mov
pushf
lea
inc
add
sub
fs
dec
scas
jmp
inc
push
adc
fists
call
cmc
test
sbb
int
add
xor
mov
and
ja
xor
mov
mov
pop
orl
xchg
dec
dec
xor
jb
xchg
pushf
test
dec
ret
cli
outsb
sahf
jp
pushf
inc
xor
mov
pusha
dec
les
test
sub
xchg
cmpsb
insl
xlat
fnstcw
push
call
mov
mov
clc
gs
fwait
inc
stos
sub
jno
jg
inc
inc
mov
repz
ror
adc
addb
in
fwait
inc
lds
les
test
add
es
ja
mov
test
push
mov
add
lods
mov
icebp
mov
popf
addr16
outsl
andb
push
dec
sub
adc
ror
pop
mov
adc
and
push
xor
mov
repz
clc
add
aaa
push
dec
jb
std
adc
dec
imul
fnop
std
les
stos
cli
dec
sub
lret
fwait
jnp
stc
repnz
xor
pop
xor
mov
fmul
pop
fsubrl
pop
fnsave
fwait
push
push
dec
xchg
mov
xchg
sbbl
push
add
cltd
in
ret
enter
pop
fdivrl
test
cmp
mov
inc
cwtl
pop
xor
test
push
out
movl
movsb
lods
pop
ficoms
imul
fwait
outsl
inc
insl
stos
or
adc
in
mov
out
cmpsb
mov
fistpl
adc
enter
mov
test
push
xor
cli
enter
xlat
and
sbb
cltd
sub
pop
push
mov
push
pop
jle
pop
mov
lock
in
aad
outsl
mov
xor
int3
sbb
movsl
ss
outsl
js
outsb
sub
jns,pt
cmp
mov
xor
in
lock
into
push
dec
sbb
fmull
popf
scas
and
and
addps
push
jnp
inc
cltd
cmp
push
loopne
inc
mov
push
lahf
sbb
inc
lock
test
sbb
add
mov
sti
cld
cmp
in
stos
sub
jbe
jmp
and
pop
das
or
sbb
arpl
jns
test
cmp
adc
pusha
sbb
das
or
xchg
adc
lock
lcall
pop
lock
lea
ss
jle
xchg
mov
cmc
rcll
mov
sub
je
bound
fnsave
loope
rol
jg
inc
push
test
xchg
leave
xchg
jae
loope
pop
lods
movsb
sbb
pop
lods
jb
pinsrw
mov
andb
push
cs
cmpsl
xchg
mov
lret
ret
pop
jge
mov
sub
cmpsb
jmp
sbb
sarb
leave
push
sub
xchg
add
aas
pop
mov
rorl
fisubl
mov
pop
aad
mov
repz
jb
addr16
push
mov
sub
pop
insl
fcmovb
pop
push
ja,pn
push
dec
push
adc
ljmp
cmpsb
sbb
out
dec
jno
cmp
mov
cltd
movsb
mov
push
shr
and
sti
out
lods
cli
adc
mov
sub
dec
stos
popl
out
mov
iret
fwait
or
repnz
push
add
call
inc
mov
repnz
inc
sub
mov
push
adcl
adc
insb
push
add
adc
push
std
adc
pusha
mov
mov
lcall
loopne
mov
bound
rep
andl
lret
test
clc
fidivs
jo
out
insl
lret
inc
mov
iret
ret
xlat
jbe
push
xchg
sbb
addr16
mov
mov
push
jo
ret
or
add
add
sarl
pop
repz
aaa
adc
subb
mov
mov
dec
cmp
mov
adc
dec
out
and
pushf
push
push
out
int3
mov
add
sbb
outsl
sbb
dec
mov
stos
or
cmp
pop
aad
insb
idivl
movl
loop
cwtl
packssdw
outsb
clc
repz
or
fisttpl
xor
or
inc
mov
das
xor
adc
sub
testb
dec
jno
mov
pop
sbb
xor
push
cmc
cwtl
pop
push
in
test
sub
jg
sbb
testl
inc
mov
out
inc
cmp
aaa
dec
out
dec
mov
dec
xor
test
ds
jns
mov
push
lds
pop
sub
lea
sub
fisubrl
stc
hlt
movsl
or
xorl
jmp
and
aad
les
push
or
cltd
lods
mov
pop
push
mov
mov
jne
dec
pusha
adc
mov
cmp
xchg
or
pop
adc
shr
fadds
repz
xchg
pushf
imul
aam
imul
imul
out
loopne
sbb
push
pop
and
sub
push
shrl
xor
sbb
movsb
stos
das
arpl
inc
int
cmpsl
fwait
mov
lret
idiv
dec
repz
out
or
loop,pt
flds
fadds
movsb
lods
test
fsubrp
std
or
mov
cwtl
adc
cmp
push
mov
pop
scas
xor
outsl
push
dec
repz
lahf
dec
cmp
inc
dec
mov
jb
out
outsl
or
cmc
std
xor
mov
and
repz
sahf
daa
dec
xor
popf
jl
mov
jnp
adcl
in
pop
sbb
daa
js
iret
inc
shlb
fmuls
add
mov
push
dec
daa
push
or
test
xchg
ja
test
xchg
cli
push
push
test
imul
cmpsl
inc
cmp
mov
mov
bound
and
hlt
pop
xchg
mov
lret
lds
dec
data16
cld
hlt
xlat
inc
mov
int
mov
jmp
dec
cs
jo
pop
xchg
cwtl
add
mov
js
lcall
fcompl
cmpsl
gs
adc
into
mov
or
inc
fnstenv
cmp
mov
pushf
inc
cmp
push
sahf
xchg
stos
out
loop
cltd
and
pop
jbe
dec
aad
clc
inc
test
jnp
adc
mov
aam
jbe
or
test
dec
ret
sbbl
loope
and
in
mov
mov
iret
lods
add
pop
mov
lea
sbb
xor
adcb
xchg
data16
inc
outsb
stos
hlt
pop
rcll
inc
xchg
stos
inc
or
lret
mov
int
in
add
stos
inc
dec
xchg
fildll
cmc
call
popa
pusha
adcl
outsb
push
mov
pop
ljmp
and
pop
repz
jge
test
rorl
mov
inc
pop
adc
push
fsubl
sbb
add
push
push
rcrl
inc
fsubl
cld
mov
push
cmp
and
push
pop
xchg
cmp
mov
out
xlat
mov
leave
push
and
mov
aaa
push
popa
int
aam
mov
addl
mov
mov
icebp
cmc
xchg
mov
rcrl
pop
jae
xor
and
out
mov
sub
notb
jbe
pushf
out
adc
or
cmp
xchg
test
fs
or
mov
sbb
mov
dec
xor
fs
jecxz
push
dec
jb
xor
ja
mov
adc
into
fiaddl
pop
mov
daa
or
outsb
push
mov
mov
pusha
dec
outsl
xchg
scas
dec
xchg
ret
sti
pusha
and
cwtl
xchg
or
xchg
adc
push
mov
cmp
lret
sbb
add
hlt
mov
inc
daa
test
dec
aad
xor
fdiv
xchg
mov
lds
xchg
sahf
xor
leave
xor
idivb
push
mov
out
icebp
call
scas
shl
in
sbb
movsl
pop
rolb
pop
xchg
outsl
pop
push
pop
xchg
pop
test
in
xor
popa
dec
jge
cmp
push
xlat
mov
pop
divb
xorl
pushf
inc
sbb
out
call
cmp
sbb
dec
sub
dec
data16
mov
addl
cli
pop
addr16
loopne
lock
testl
pop
xchg
lcall
pop
inc
je
adc
pop
add
cwtl
in
adc
and
cmp
mov
mov
cld
mov
push
dec
fcom
in
enter
lods
and
jo
imul
sbb
add
imul
sbb
pop
imul
xlat
pushf
mov
arpl
push
daa
cmpsb
pushf
sbb
sub
ficoms
sbbb
clc
pop
shlb
leave
lahf
mov
or
add
sti
popf
mov
andb
vcvttpd2dqy
sub
mov
adc
pop
sub
or
icebp
mov
lods
notb
cld
and
es
mov
mov
mov
dec
jmp
dec
pop
inc
and
sub
das
insl
push
dec
fmull
cmp
jno
daa
dec
fbstp
and
sti
pop
addr16
xor
jne
iret
pop
icebp
enter
cmp
call
adc
mov
jge
sbb
pop
pop
adc
jmp
and
sub
faddp
fadds
cmp
mov
xor
inc
jbe
sub
nop
cmp
sbb
xchg
xchg
mov
pop
fnstcw
stc
adc
jmp
pop
sahf
sbb
lds
xor
dec
frstor
ds
adc
push
sbb
aaa
fiaddl
out
sbb
out
mov
js
lea
movsb
xor
gs
mov
mov
pop
push
or
jge
lods
cmc
push
mov
xor
cli
cld
outsb
pusha
pop
ljmp
push
lret
mov
and
adc
push
mov
cmp
pop
scas
mov
insb
loopne
iret
mov
inc
test
adc
inc
inc
outsl
sbb
outsl
pop
cltd
push
and
loop
push
fcmovne
mov
out
outsl
dec
push
push
sub
inc
clc
stos
xchg
mov
call
dec
push
cmpsb
lcall
inc
dec
cmp
cmc
or
int3
lods
stos
paddw
call
push
and
dec
sbb
sub
sbb
push
or
int3
sahf
pand
xchg
lret
in
out
ret
cs
cmpsl
add
pop
sbb
jecxz
mov
add
das
cmpsl
lahf
test
mov
insl
repnz
cli
push
lcall
ja
cmpsl
xor
fdivs
jno
cltd
inc
test
adc
push
pop
mov
imul
cmp
mov
xchg
jae,pn
pop
cmp
inc
push
inc
push
fsubrs
fs
shlb
sahf
out
or
pop
dec
dec
icebp
mov
pop
aam
jmp
xchg
jle
pop
mov
je
movsl
jecxz
push
shlb
inc
addb
add
cmpsl
push
sub
jo
clc
aad
shrb
xor
mov
sub
add
lret
sbb
xchg
iret
pop
sub
sbb
inc
stos
jmp
cli
movb
loop
add
aas
and
jno
fcoml
mov
inc
mov
xor
mov
fmuls
dec
sbb
and
or
mull
cmp
fisubs
push
mov
push
sub
jle
stos
dec
dec
jno
sbb
pop
call
loope
cmpsl
and
idivb
adc
addb
push
imul
sbb
pop
and
sti
int3
int3
test
xlat
pop
mov
movsb
sub
int3
sbb
and
inc
out
xchg
ja
lods
adc
fstpl
inc
cmp
jb
mov
mov
sbbb
inc
sbb
inc
lods
push
ljmp
divl
mov
orb
int3
xor
xchg
jne
rcrl
push
xchg
gs
sti
cmp
xchg
dec
mov
xchg
fwait
cmp
pop
outsb
xchg
test
scas
and
mov
ljmp
push
movhps
lret
xchg
sub
rcl
adc
pop
pop
imul
adc
aad
int
dec
xchg
push
jns
dec
cmpsb
adc
cld
divl
sub
mov
pusha
repnz
xchg
jmp
mov
ret
out
imul
cmp
mov
mull
test
addr16
scas
daa
inc
int3
mov
jo
out
dec
mov
fstpl
sbb
jns
mov
dec
mov
ss
loopne
push
cmc
rcr
lahf
fisttpll
xor
jno
jmp
andl
dec
mov
and
aad
push
fcoml
pop
add
push
push
dec
cmpl
imul
xor
lds
ret
ds
pop
sbb
cltd
call
stos
cmp
mov
test
mov
aad
jp
jmp
cwtl
jg
ss
shr
aam
fdivrs
insl
mov
shlb
and
dec
add
mull
rcl
dec
sbb
pop
dec
dec
lods
es
call
mov
cmp
cld
push
or
in
arpl
test
pop
sti
and
sub
out
lods
fadds
out
sbb
dec
jo
mov
push
jge
sub
stc
push
in
out
mov
sahf
or
add
and
into
rcr
dec
addl
cld
lods
fidivl
push
mov
push
aam
std
lods
insb
enter
loopne
push
mov
mov
sti
sub
push
pop
lods
mov
sahf
mov
std
mov
xchg
xlat
pop
sub
xchg
xlat
sahf
inc
test
xor
push
jae
incl
addr16
dec
daa
in
ret
fldt
rclb
lock
fs
dec
xchg
outsb
xor
mov
stc
jno
movl
jecxz
je
cmp
dec
imull
std
dec
mov
ljmp
call
hlt
mov
cmp
cli
out
out
insl
movsl
ja
pop
mov
lea
cmp
xchg
out
push
icebp
mov
sbb
sub
mov
lock
and
mov
outsb
hlt
idiv
cmp
fwait
in
mov
jp
test
inc
jnp
push
pop
lds
xchg
movsb
xorl
xor
or
movsb
jns
mov
push
enter
dec
cmp
scas
cs
mov
add
adc
add
lahf
pushf
add
sub
xchg
fistl
cmpb
xor
mov
push
sbb
or
pop
fildl
mov
xchg
inc
movsl
sahf
xchg
pop
sarl
nop
add
cltd
fistps
movaps
xchg
stos
mov
mov
add
jo
minps
push
mov
sbb
xchg
mov
fstpt
pop
jp
push
daa
dec
pop
dec
sub
fwait
lahf
stc
mov
gs
inc
imul
addr16
dec
js
mov
cmp
pop
pop
pop
daa
out
xchg
push
xor
push
sub
mov
sbb
stos
scas
push
xchg
into
repnz
mov
popf
pop
pushf
pop
sub
dec
cmpsb
adc
xlat
push
jne
mov
mov
pop
mov
add
xchg
push
mov
push
push
push
xchg
js
cmpsl
lods
jno
or
mov
cmpsb
xchg
cmpsl
loopne
and
and
pop
enter
gs
pop
mov
pop
adc
mov
and
ret
lods
cmp
adc
or
xchg
std
xlat
outsl
push
jae
sbb
icebp
dec
sbb
jmp
and
mov
roll
hlt
mov
jo
cs
add
icebp
jl
idiv
sbb
rcll
dec
inc
sarb
out
popa
push
cmpsb
inc
shrb
jno
aas
cmp
mov
lock
fadds
out
or
fcomi
mov
je
jecxz
data16
push
and
pop
ja
cmc
pushf
cmp
xor
push
add
loope
arpl
sub
mov
add
mov
mov
das
mov
insb
mov
clc
shrl
imul
sti
jmp
push
mov
or
iret
mov
or
fcomps
mov
out
jg
jae
add
cltd
inc
test
xor
frstor
ljmp
pop
test
or
mov
imul
outsl
nop
cmpsl
lahf
push
outsb
das
push
lds
push
dec
inc
fiaddl
pop
dec
dec
fimuls
pop
mov
ljmp
xchg
cmpsl
pop
mov
lock
outsl
xor
jb
das
nop
jl
push
jae
mov
and
adcl
fdivrl
ja
stc
xchg
jp
hlt
out
hlt
pop
sub
sbb
adc
repnz
lods
push
les
lret
sub
pop
adc
mov
insl
test
data16
sbb
iret
inc
jl
mov
icebp
pop
pushf
icebp
mov
out
pop
clc
push
dec
jne
fisubl
fcoms
into
xchg
sbb
mov
mov
mov
mov
add
push
jbe,pn
jbe
loope
xchg
xor
jecxz
sbb
pop
mov
idivl
add
pop
call
and
cmpsb
test
fs
ja
nop
cli
aas
mov
inc
outsl
mov
pusha
mov
sbb
jge
std
pop
mov
cltd
ja
shlb
or
je
inc
xchg
cmc
xchg
push
stc
mov
jo
int3
mov
sub
dec
fcomps
inc
dec
js
stc
fcoml
add
xchg
mov
cmp
cld
rcr
adc
pop
inc
jb
imull
pop
outsl
xchg
ljmp
insl
data16
cmp
push
je
push
aaa
jnp
inc
les
mov
stos
data16
movsl
pop
jmp
nop
xchg
jno
js
cmpsl
es
jne
mov
push
lods
ficoms
or
mov
jnp
jae
loope
fwait
mov
ret
idivl
aam
xchg
lea
pushf
clc
or
and
jmp
adc
inc
clc
jae
jecxz
and
mov
in
stos
ret
orb
ja
ds
fldcw
xlat
xorl
pop
dec
ds
cs
out
mov
sbb
mov
scas
mov
sahf
dec
leave
movsb
lea
ss
mov
push
xchg
ljmp
stos
jne
mov
or
xor
mov
xor
dec
lods
pop
outsb
xor
inc
push
push
mov
add
adc
insl
pop
fmuls
push
dec
pusha
rcr
pop
add
std
push
popf
mov
es
jge
leave
xor
jmp
jecxz
int3
in
insb
sbb
push
lods
repnz
mov
jo
cmpsb
sbb
insb
repz
mov
scas
repnz
orb
mov
cmp
inc
dec
pop
xchg
mov
and
inc
mov
gs
jp
fidivl
das
call
push
decl
insb
lahf
sub
mov
push
cwtl
add
lret
jg
push
fistps
ds
aas
orb
dec
push
push
out
dec
xchg
cmc
jg
add
rolb
arpl
arpl
mov
inc
fnstsw
shlb
leave
je
decb
fsubl
xchg
xor
mov
mov
aaa
in
add
pop
sbb
mov
pop
ss
or
add
push
dec
lcall
push
add
add
fs
jae
decl
inc
fucomi
ljmp
dec
lret
in
push
sub
mov
xchg
xor
inc
mov
xchg
push
std
sbb
sub
je
xor
add
js
mov
repnz
test
int
mov
or
inc
cmc
mov
jns
aaa
icebp
sbb
ss
fwait
lods
pop
pop
mov
mov
mov
lahf
pushf
mov
jbe
mov
fst
imul
fprem1
mov
loop
add
push
adc
fiaddl
xchg
stc
inc
popa
jle
pop
jl
push
aaa
mov
cli
inc
dec
mov
push
mov
ja
lret
scas
mov
insl
cmp
mov
pop
data16
lods
jns
dec
insl
arpl
mov
mov
dec
xor
add
xlat
sub
inc
cmp
push
call
pop
movsb
into
daa
outsb
outsb
jns
mov
shl
sub
rorb
adc
dec
out
pop
call
rorb
xchg
inc
cs
mov
ss
push
aas
idivb
int
in
into
xor
test
movsl
orb
pop
aaa
push
in
insb
xchg
xchg
addl
push
add
clc
test
sbb
inc
push
shll
aam
xchg
sbb
cmp
jge
ljmp
sub
push
aaa
in
fnsave
push
fisttpll
mov
sbb
je
mov
dec
sub
dec
pop
lea
mov
or
mov
sbb
aas
int3
pop
scas
dec
in
and
in
xor
mov
jg
adc
mov
in
paddsb
mov
aaa
xor
push
add
mov
push
je
sub
outsl
jne
clc
mov
lret
sbb
cmp
mov
push
xchg
push
inc
loopne
or
leave
pop
popa
inc
cmp
rorb
jo
pusha
cli
rcrb
leave
dec
push
js
neg
mov
jnp
dec
loop
test
xchg
pushf
pusha
pusha
fildl
push
fprem
push
repz
out
inc
mov
adc
xchg
daa
dec
ds
push
xor
out
sti
jo
mov
or
dec
push
aaa
mov
lock
inc
push
ja
push
or
ret
cmpsb
mov
jl
dec
xchg
sub
fcomip
xchg
adc
rclb
mov
push
sbb
mov
xchg
push
xlat
xor
mov
mov
scas
enter
shl
shll
jmp
daa
loope
mov
dec
sub
adc
mov
sbb
dec
filds
sub
lret
xor
fs
and
xlat
mov
repz
jecxz
add
cli
ret
movl
cmc
push
jge
es
into
lcall
mov
xchg
xor
sbb
mov
jo
lahf
jp
inc
mov
mov
push
test
add
or
in
inc
and
fsubrl
push
fadds
dec
cmp
mov
aas
and
adc
test
add
mov
pushl
data16
nop
cmp
jge
mov
add
add
nop
or
push
out
outsl
pop
cwtl
mov
mov
pop
repz
lahf
out
pop
aad
out
aam
stos
or
out
fisubrs
mov
xchg
lcall
ds
lds
jno
cmc
ret
pushf
sahf
aad
adc
pop
xor
or
inc
xor
cli
mov
jo
pop
dec
out
or
mov
rorb
sbb
pop
mov
adc
or
mov
std
aaa
cmpb
jne
push
out
fnsave
lret
push
into
ljmp
cs
in
out
push
stos
cmp
loope
aas
sbb
mov
xor
and
adc
pop
sbb
mov
ret
adcb
test
jnp
std
xlat
les
cmp
mov
push
ret
repz
mov
call
outsb
movsl
ret
add
push
repnz
test
mov
jnp
pop
scas
fcoml
or
xchg
pop
outsb
push
cmc
mov
xchg
push
adc
adc
testb
dec
mov
les
or
pop
outsl
mov
xlat
aam
divl
stos
mov
ss
arpl
imulb
test
mov
das
test
int3
adc
dec
adc
out
lods
or
ret
mov
cmpsl
add
pop
enter
mov
int
sahf
mov
mov
and
mov
inc
ljmp
gs
sbb
mov
lods
adc
mov
stos
inc
lds
dec
push
mov
insb
sbb
xchg
es
sahf
pop
jg
add
fcomps
pop
dec
jmp
mov
cld
out
and
scas
aad
into
sub
rcrb
mov
xlat
movsb
idivb
xchg
or
mov
pop
lea
xchg
xchg
jle
jne
jecxz
les
sahf
incl
ret
mov
call
push
shl
aaa
ss
and
lods
add
mov
outsl
insb
or
sub
dec
jo
hlt
aaa
xchg
inc
mov
sbb
jge
inc
fsubs
mov
push
stos
sbb
daa
test
mov
loopne
lods
aaa
mov
pusha
mov
cld
cmp
pop
test
add
xchg
dec
inc
xchg
xchg
push
add
sbb
mov
mov
sbbl
nop
ds
das
rcr
sbb
stos
and
add
mov
pop
out
xchg
negb
jl
sti
test
xchg
std
ds
xchg
imul
popf
push
xchg
out
xchg
rorl
add
jle
in
aam
sub
in
sarl
pop
xlat
dec
push
js
and
mov
pmullw
xor
mov
aad
outsb
hlt
add
xchg
mov
push
mov
and
lret
push
sbb
es
mov
je
mov
fcompl
push
jmp
jne
aaa
or
jmp
mov
loope
push
add
loope
icebp
imul
dec
jle
lcall
inc
pop
push
fdiv
pop
ja
add
adc
push
in
or
je
aaa
mov
inc
frstor
int
ds
lods
sub
out
xor
dec
test
shrb
outsb
insl
lcall
dec
and
pop
in
loopne
repz
in
pusha
dec
adc
call
push
fs
daa
popf
inc
xor
addr16
pop
sub
jno
fisttpll
dec
sub
mul
sub
sub
repnz
jg
inc
leave
mov
inc
mov
adc
jle
iret
pop
adc
call
mov
lods
xlat
outsl
bound
inc
es
or
arpl
arpl
imul
jae
sub
insl
add
push
dec
cmpsl
inc
push
push
mov
imul
and
mov
test
push
add
jne
pslld
push
add
in
mov
loopne
dec
in
or
sub
mov
pop
xchg
or
das
movsl
js
dec
or
adc
popf
test
ja
mov
cmp
push
jl,pn
dec
jmp
xor
lahf
icebp
loopne
xor
test
push
jb
mov
lods
jo
stos
test
out
cli
movsb
xchg
mov
adc
or
sub
shlb
xorb
addr16
movsl
jmp
xchg
sahf
mov
loopne
or
inc
cld
xor
cmpl
jb
ret
jbe
pop
repz
adc
arpl
cmp
jl
mov
sub
pop
es
mov
mov
adc
sub
je
shl
dec
dec
sbb
cs
xchg
mov
data16
ljmp
pusha
and
hlt
das
out
xor
or
cmp
jno
or
jno,pn
ss
xchg
or
mov
subl
dec
xor
cmp
outsb
xor
mov
popa
mov
mov
adc
sub
cmp
xor
pusha
dec
xchg
in
outsw
mov
adc
arpl
sbb
mov
iret
pop
adcl
push
inc
xchg
mov
aam
stc
mov
adcl
cltd
lcall
push
sbb
test
xor
scas
js
aam
push
adc
xchg
in
daa
sbb
jecxz
jge
or
adc
pushf
shrb
ror
cltd
cwtl
push
add
add
outsb
ss
shlb
dec
and
je,pt
lock
js
data16
xchg
mov
shll
lea
gs
pop
shld
and
dec
aad
fnstenv
or
xor
cmp
fcmovu
addr16
sub
push
into
or
xchg
ret
int
and
sbb
cmp
out
push
inc
pop
loop
xor
ret
clc
fidivl
hlt
dec
jmp
in
add
pop
mov
mov
and
out
push
test
push
inc
in
cltd
xchg
mov
adc
sbb
aaa
fs
mov
scas
push
fcoml
push
aad
cs
push
fprem1
arpl
mov
inc
hlt
imul
out
fldenv
and
xor
mov
push
orb
repnz
idiv
mov
sbb
mov
xchg
out
push
cmp
out
push
or
dec
scas
xor
dec
sub
mov
mov
sbb
ja
clc
scas
outsl
je
mov
incb
arpl
popa
add
jge
sub
scas
int3
jno
add
mov
xor
xchg
ljmp
jg
leave
push
lds
dec
cld
rclb
std
in
jae
inc
fs
scas
add
out
stc
test
xchg
jecxz
dec
sub
cmpsl
movsl
adc
mov
je
cmp
insl
or
fdivl
aaa
add
mov
push
je
mov
cwtl
in
push
mov
iret
pop
and
xlat
jmp
pop
and
lret
cmp
pop
mov
rcrl
mov
scas
sbb
push
mov
dec
ret
popa
sub
xor
jo
shlb
icebp
outsl
je
in
add
inc
enter
xchg
mov
pusha
pushf
cmp
dec
push
cmc
inc
shrl
sbb
in
dec
and
xchg
inc
loop
or
sbb
fidivrs
push
dec
mov
and
and
enter
ret
adc
jnp
lcall
dec
in
mov
adc
mov
popf
cld
outsb
mov
xchg
ljmp
mov
test
stos
sbb
jno
dec
addr16
adc
mull
jle
icebp
leave
repz
fisubrs
sbb
cmpsb
fcoml
xchg
scas
jae
mov
andl
push
push
test
or
push
icebp
or
jae
call
test
stos
pop
or
pop
out
ds
mov
xchg
mov
das
jle
stos
push
int
sbb
mov
cmp
out
push
fwait
mov
lahf
inc
and
and
mov
pushl
pop
sbb
add
test
mov
and
cmp
insl
sub
sti
mov
pop
adc
loopne
ret
mov
add
fldenv
icebp
out
mov
nop
daa
ret
mov
pop
adc
imul
imul
adc
cmp
scas
sbb
and
cli
inc
movsl
pop
arpl
add
mov
pop
scas
jl
mov
ret
dec
mov
jmp
aaa
sbb
push
out
adc
adc
push
out
pusha
xorl
inc
hlt
and
sub
xlat
xor
xlat
fadds
push
sub
inc
lret
stos
nop
insb
add
daa
jecxz
fildll
mov
in
dec
sub
push
jecxz
ret
mov
andb
lahf
out
lock
arpl
fidivrl
cmp
mov
or
bnd
pop
fucompp
or
cmpb
adc
test
popf
repnz
sahf
sbb
mov
lcall
lcall
or
pop
xor
cmp
push
jno
stos
jnp
idivl
decb
cmp
jne
es
lcall
add
or
adc
sub
dec
xchg
xor
lea
sar
xor
xlat
or
out
cmpsb
pop
daa
pop
stos
dec
fs
fdivrs
xchg
mov
fmuls
mov
cwtl
in
lea
push
test
pop
repnz
dec
push
int3
xchg
int
fs
cli
pop
rcr
inc
jg
mov
pop
or
outsl
ret
inc
das
mov
cmp
div
dec
fwait
in
xor
fdivr
js
sti
adcb
or
loope
xchg
in
lds
pop
in
pop
cmpsb
sub
xchg
ret
jmp
mov
divl
cmp
dec
dec
mov
ss
arpl
cmp
fiaddl
loopne
scas
cmp
fwait
imul
xor
test
std
dec
pop
enter
cmp
sbb
xchg
aad
fadds
sub
fdivs
jnp
fcmove
stos
mov
mov
jle
lea
push
into
pop
rcrb
ljmp
mov
jl
adc
mov
or
bound
fsubrs
loop
fdivrs
std
adc
lods
das
gs
repnz
jae
or
jg
sbbl
push
test
add
mov
lods
popa
fcomps
ds
int3
mov
js
loopne
sub
xor
cmp
xchg
shrb
and
pushf
leave
or
dec
ja
jecxz
mov
push
test
fisubrl
mov
das
cs
int3
inc
insl
je
cmp
mov
mov
xor
rclb
aaa
lcall
mov
pusha
cmp
dec
dec
sub
or
dec
lds
dec
leave
cmp
outsl
les
push
aad
lds
xchg
insb
cmp
pop
jl
sbb
inc
xor
test
push
lret
ficomps
mov
cs
jmp
imull
add
add
mov
pusha
dec
daa
sbb
imul
mov
stos
data16
mov
sahf
cmp
mov
bound
roll
scas
cmp
imul
mov
mov
mov
fldt
jmp
cmc
insl
dec
lea
rclb
and
push
aaa
out
and
xchg
stos
mov
lret
jecxz
xor
lock
pop
xchg
int3
and
mov
sbb
xchg
cmpsl
sbb
addl
pop
cmp
jbe
xlat
inc
xchg
xor
andl
inc
sub
and
negb
jge
test
add
jne
fst
les
movsl
sti
push
xor
gs
and
ja
test
and
daa
ret
xchg
cmp
cmp
fsubrp
jo
stos
push
movsbl
shlb
cmc
jae
mov
or
daa
call
loop
bound
mov
out
call
mov
pop
and
bnd
ret
jge
sbb
adc
mov
pop
dec
test
ret
out
sbb
cld
xlat
xor
fisubrl
dec
xor
or
pusha
push
adc
xor
mov
mov
fmull
mov
cmc
icebp
push
test
bound
lret
jns
inc
bound
mov
mov
out
inc
add
fmuls
xor
loopne
popf
cmpsl
fstpt
and
push
arpl
xlat
cmp
or
icebp
cs
jecxz
adc
dec
je
icebp
pop
cmp
xor
notl
mov
push
out
add
lods
jne
mov
adc
adc
push
paddd
popa
push
adc
data16
adc
leave
movb
push
lcall
add
in
xor
rolb
cli
enter
fimull
jecxz
mov
add
mov
add
cmp
dec
xchg
lock
pop
sub
lcall
ficompl
push
inc
outsl
sub
xor
out
out
cli
call
imul
sub
mov
cld
or
sti
push
roll
lret
icebp
jns
xlat
xor
test
push
inc
cmp
push
dec
scas
popa
xchg
push
inc
pop
insb
test
lcall
in
repz
jp
xor
aad
mov
mov
mov
and
ret
jp
ljmp
nop
cmp
ror
pop
adc
shrb
mov
ljmp
pushf
outsl
pop
push
xlat
jne
sub
leave
test
mov
inc
cmp
xchg
fcoml
popa
xor
into
sbb
cli
lret
mov
aas
xchg
lock
pop
mov
sub
jno
jns
cmpl
jb
push
movsl
jmp
sbb
imul
sar
inc
out
std
xlat
mov
pop
js
leave
das
bound
movsl
dec
jnp
lods
cs
inc
loop
fwait
jge
in
jb
xchg
loope
mov
push
or
dec
test
dec
push
ljmp
mov
push
lods
es
mov
jge
push
or
inc
in
mov
mov
lret
hlt
mov
sub
lcall
jp
xor
pop
push
cs
pavgb
mov
dec
lahf
mov
ljmp
test
cmpsb
in
mov
outsl
sub
inc
popf
in
mov
push
mov
push
push
jo
aam
rcll
dec
out
mov
adcl
sub
inc
adc
mov
adc
mov
ljmp
out
cmpsl
dec
xor
push
loop
outsb
movsl
shll
mov
clc
lea
jle
mov
inc
and
jb
pop
mov
jns
mov
pop
cs
mov
lahf
sbb
sarl
rcll
bnd
mov
loope
and
lea
rol
test
pop
or
decl
inc
repz
push
das
repz
rclb
movsl
out
sub
fdivr
fstps
cmp
sub
pop
movsb
ss
in
cli
test
add
roll
cs
cli
clc
mov
adc
jne
mov
enter
lcall
adc
imul
loope
mov
dec
mov
push
pop
sub
in
pop
xlat
cltd
je
aam
fimuls
mov
sub
mov
sbb
clc
and
and
mov
arpl
nop
pop
das
test
lret
add
and
jo
sahf
aas
mov
aam
es
and
mov
inc
sahf
movsb
sti
xchg
push
push
jp
lahf
gs
and
dec
push
test
dec
or
mov
or
pop
push
ljmp
leave
jbe
scas
mov
mov
xor
xlat
xchg
inc
pop
mov
repnz
popa
inc
in
inc
push
ficomps
sahf
sahf
rcr
mov
mov
cmpsl
jecxz
xchg
movsl
ss
fs
jecxz
cli
jnp
add
mov
pop
jae
pop
in
loopne
es
or
out
jge
lods
jns
add
push
dec
cmp
movsb
stos
movsb
pop
fsubrl
sbb
sbb
xor
sub
data16
xor
cltd
add
mov
jnp
pop
dec
jne
xor
cwtl
cmp
sbb
mov
adc
xchg
inc
pop
mov
shll
std
mov
rolb
sti
jb
repz
push
mov
dec
jmp
and
call
push
mov
push
mov
pusha
xor
insl
push
scas
insl
orb
lret
fimuls
cmp
jne
sub
lock
mov
jmp
cmp
pop
adc
inc
filds
scas
pop
iret
jb
and
fstps
adc
inc
and
pop
jge
out
popa
mov
das
xlat
push
pusha
decl
xor
test
aad
test
jnp
mov
cmp
mov
push
xchg
call
cs
fnstcw
movsl
pop
out
cmc
jae
inc
push
mov
jg
adc
add
sbb
xlat
mov
mov
add
sbb
sub
dec
or
jno
inc
nop
inc
jno
cmpsb
or
sub
fcmovb
adcb
or
iret
jae
les
jge
data16
jns
es
xchg
repz
mov
xchg
stc
push
add
mov
popf
adc
mov
sbb
sub
mov
add
pop
and
mov
movsb
cmpb
js
mov
imul
out
mov
xchg
sub
pop
sub
cmp
jle
loop
out
adc
rcll
jp
mov
stos
lods
rclb
sub
fldcw
push
insl
das
int3
sbb
loope
or
repnz
add
push
adc
pop
das
dec
push
pop
jns
aam
xor
insl
into
ja
in
pop
clc
lods
sub
mov
mov
add
cmp
dec
pop
push
mov
js
jae
lock
dec
pushf
jl
mov
mov
call
push
and
fidivs
and
pop
pop
fmuls
decb
sub
xchg
lret
in
push
out
inc
mov
jg
fwait
imul
rcll
movsl
adc
fildl
aas
add
xchg
xor
loopne
jne
pop
sti
mov
repnz
adc
fs
or
jne
xchg
and
add
bound
sbb
and
lea
std
cmp
cmp
std
addr16
xor
xchg
and
lods
jg
and
push
daa
movsb
scas
inc
repz
jnp
mov
cmp
shlb
cmpsb
dec
cmp
data16
cmp
cmp
std
and
out
sbb
jnp
inc
lret
addr16
mov
pop
push
aam
inc
push
xchg
pop
loop
pop
xor
push
mov
sti
sbb
xchg
popf
ss
into
je
dec
lret
insl
sbb
test
mov
mov
inc
mov
xor
or
mov
jne
push
leave
jno
xchg
loopne
cmp
test
cmpsl
es
std
mov
or
xorb
adc
inc
mov
adc
insb
xor
jle
sbb
push
and
les
sbb
dec
xchg
and
nop
and
mov
shlb
inc
fnstcw
dec
mov
pusha
ret
lcall
stc
xor
mov
jle
push
pop
stos
mov
repz
mov
sub
jo
sti
xor
rcl
cwtl
dec
xchg
pop
pop
ret
das
inc
xchg
inc
or
jnp
scas
ja
adc
das
dec
jl
pop
dec
psubsw
loope
call
sbb
ja
xchg
jecxz
inc
fisubrs
mov
xchg
xorb
stc
or
push
xor
mov
mov
push
dec
int3
pop
cmp
xchg
inc
push
shll
xchg
adc
decl
push
mov
fsqrt
hlt
gs
inc
mov
push
out
shr
pop
xlat
xchg
lods
or
xchg
mov
jmp
and
mov
ret
sbb
sub
mov
mov
jecxz
out
mov
das
cwtl
sub
inc
movsb
jb
xchg
pop
dec
adc
jge
dec
test
cld
cltd
shlb
lea
cmc
fst
stc
jge
rol
mov
add
pushl
pop
dec
out
pop
int3
lods
sub
lea
test
xor
hlt
daa
insb
sbb
lock
movsb
outsl
out
mov
outsl
ret
gs
sbb
notl
dec
sbb
js
imul
add
out
cmc
js
jge
rolb
sbb
fwait
out
sub
add
arpl
outsl
add
arpl
xchg
rcr
push
sub
jns
int
pop
mov
shll
or
cmp
jae
xchg
rorb
fs
lods
test
dec
jge
rcrl
popf
jns
out
lods
aas
add
icebp
add
jne
scas
stc
sahf
mov
adc
cmc
cs
adc
decl
pop
fcmovb
inc
cltd
push
mov
int3
cmp
clc
rcl
call
aas
movsl
out
cmp
xchg
out
pusha
xchg
insl
imul
gs
sub
xchg
imul
cmp
mov
mov
pop
movsb
int
addr16
nop
and
xlat
daa
fwait
sbb
js
mov
cmpsl
jg
call
cmp
aad
jne
scas
inc
cmpsb
out
dec
push
inc
lock
cmp
jp
cmpsb
dec
dec
adc
cmp
rcrb
mov
paddw
aam
sub
test
arpl
ds
adc
push
mov
sub
setns
sub
movd
ffreep
cwtl
push
mov
lret
or
cld
xor
jns
mov
jge
mov
and
sub
jle
fdivrs
mov
xchg
aas
push
aaa
pop
add
test
test
mov
xor
sbb
add
sub
xchg
popa
js
inc
add
xorb
lret
and
pop
mov
xor
int
int3
test
pop
adc
fs
mov
cmp
adc
lret
pop
movsl
stc
xor
mov
in
gs
jmp
in
mov
xor
ficoml
dec
mov
lods
hlt
jp
sbb
out
lds
nop
jns
test
cmp
push
pop
sbb
ja
sahf
pop
cltd
arpl
aaa
mov
in
jbe
in
pusha
inc
pushf
xchg
outsb
je
mov
or
jno
mov
jge
mov
test
xchg
test
dec
or
and
mov
popf
adc
icebp
dec
inc
dec
and
dec
lcall
out
cmp
and
jae
mov
aaa
dec
mov
test
ficompl
sbb
insl
pusha
jne
aam
test
sbb
dec
pop
and
and
mov
xor
cs
icebp
push
adc
ud2
mov
or
lds
mov
ret
lods
pop
gs
sbb
aad
je
or
cmp
sub
std
fnstsw
jne
add
test
or
cmpl
sbb
test
daa
lods
or
gs
aam
pushf
add
sub
clc
jmp
imul
add
pushf
sub
pop
stos
cmp
push
fcompl
cmpsb
add
adc
sub
cmp
xchg
sub
jnp
mov
add
sbb
cmp
out
testl
xchg
push
fiadds
mov
push
andb
cmp
inc
sbb
xchg
xchg
stos
jno
xchg
shr
mov
jbe
out
orl
dec
movsb
sub
insl
movsb
sbb
add
addb
cmp
jns
loop
dec
mov
mov
xchg
mov
div
pop
jp
in
cld
popa
mov
cwtl
mov
sub
sarb
dec
inc
add
dec
ds
imul
sbb
stc
loopne
mov
inc
in
scas
hlt
sbb
stos
das
test
bnd
std
xor
out
cld
aad
test
xchg
stc
dec
jnp
adc
std
mov
sub
pop
popa
pop
aas
scas
int3
pop
lahf
dec
mov
add
and
cli
movsl
in
mov
ss
lcall
pop
sbb
mov
mov
jmp
pop
adcl
push
mov
dec
push
and
scas
loop
xchg
in
cli
jmp
stos
mov
outsl
lea
or
xchg
scas
push
leave
popa
ja
dec
fadd
cmc
ss
in
lret
push
mul
add
jnp
hlt
lahf
cwtl
fidivrs
jecxz
push
scas
adc
cld
or
xchg
dec
push
nop
imul
or
dec
test
sbb
mov
add
cmp
mov
fsubrs
mov
loope
arpl
popf
sbb
xchg
mov
loop
fstl
mov
stc
sahf
imul
mov
bsf
lea
jp
or
fadds
sub
and
in
add
mov
inc
arpl
into
cmp
cmp
mov
loopne
cld
push
and
mov
iret
dec
repnz
jae
ljmp
mov
movsb
mov
inc
mov
cmpsl
xchg
sub
jge
add
dec
clc
xchg
xchg
xrelease
xchg
lahf
je
cmpsl
outsl
inc
mov
sbb
mov
adc
insl
push
or
cmp
pop
add
dec
sub
xchg
fcomps
sbb
lds
dec
icebp
or
mov
out
into
int3
mov
orl
aam
subb
mov
rcll
sti
scas
cld
push
shrb
jecxz
pop
loope
push
test
lds
cmp
out
sbb
cmpsl
ljmp
mov
adc
pop
mov
push
int
jae
pop
inc
lods
cwtl
fdivs
jl
pusha
lret
xchg
dec
jp
repnz
mov
dec
cmpsb
cli
mov
dec
and
insb
adc
in
aad
daa
add
sub
sahf
sarl
insb
and
js
cltd
add
cmp
lods
data16
adc
xor
cli
lret
cli
and
mov
lods
push
and
xchg
pushl
adc
popl
mov
lahf
ja
clc
aaa
pusha
loopne
pop
mov
mov
out
idivb
inc
jnp
xor
sub
or
xchg
dec
mov
stos
call
push
cmp
insl
pop
pop
adc
push
adc
add
add
sub
ret
pop
ficomps
cwtl
ffreep
mov
sahf
mov
movsl
es
pop
mov
jne
int3
fmull
or
rolb
lret
ret
push
in
dec
sub
mov
sub
lods
test
subb
idiv
mov
mov
aam
lods
mov
ljmp
xchg
adc
jne
les
or
sahf
adc
lret
add
cmp
dec
mov
sbb
stos
out
or
xchg
sbb
push
ljmp
push
pop
mov
sarl
mov
js
xor
jmp
dec
adc
aaa
repnz
mov
cmp
fistps
mov
jb
push
ss
lret
xchg
in
mov
pop
and
lock
and
movsl
icebp
dec
dec
ljmp
mov
push
xchg
mov
push
jle
mov
scas
xor
mov
out
mov
sahf
pop
repnz
lods
aad
leave
sar
dec
xor
out
mov
inc
bsr
data16
clc
cmp
rorl
loop
sub
test
ss
xchg
or
pop
sub
pop
or
mov
fsubrs
sbb
jmp
daa
push
aam
inc
sbb
test
shrb
mov
cmp
adc
mov
push
ret
nop
push
sub
imul
icebp
inc
test
pusha
fisubs
in
es
std
andb
or
and
jbe
adc
xchg
dec
test
pop
push
rep
mov
aas
test
jbe
adc
pop
clc
loope
fldl
xor
cmc
mov
sub
loopne
push
mov
ljmp
and
xor
mov
inc
inc
imul
shrl
in
xchg
inc
mov
repnz
adc
inc
jecxz
sarl
cmp
leave
xlat
jl
pop
je
js
dec
cmp
xchg
mov
push
pop
mov
repz
test
add
push
jae
repnz
sbb
aad
sbb
test
adc
xor
fmuls
sub
mov
pop
jl
outsl
cmpl
stos
daa
loopne
dec
sub
outsb
cmpsl
adc
cwtl
push
mov
cmp
mov
das
xchg
xchg
shlb
mov
movsb
inc
scas
movsl
xor
std
sub
je
push
lahf
fdivrs
cmp
mov
xor
xchg
cli
orl
scas
lahf
cmpsb
sub
jp
notb
sbbl
es
repnz
lods
push
insl
pop
int
test
inc
inc
clc
addr16
movsb
cwtl
sub
add
repnz
repz
xchg
cmc
add
mov
movb
adc
std
enter
mov
dec
mov
ss
push
cs
popf
leave
movsb
mov
fnstcw
imul
push
pop
icebp
or
imul
mov
insl
daa
sub
xlat
adc
fcompl
int3
jae
arpl
pop
cmpsb
or
lret
pop
das
cmp
aam
add
jl
scas
jnp
sti
jne
mov
out
in
mov
xor
sbb
test
push
push
daa
or
xchg
test
push
lds
popa
or
jge
mov
mov
insb
int
dec
mov
cmp
pop
subl
out
pop
push
fisubrs
xchg
dec
jns
add
ljmp
leave
push
dec
mov
mov
mov
nop
jo
pop
lods
leave
out
mov
addb
jns
jecxz
insb
mov
dec
add
or
cwtl
mov
lods
pusha
fnstcw
push
jo
mov
and
xlat
int3
xor
dec
pop
aas
sbb
inc
jge
arpl
push
lock
loop
sbb
iret
sbb
push
adc
test
pop
pop
imul
mov
mov
clc
pop
sub
xlat
sbb
outsb
out
in
cmp
pop
cmp
sbb
push
dec
icebp
nop
sub
ret
mov
xor
fsubr
and
call
fs
das
sti
xor
pop
push
mov
mov
mov
ljmp
nop
scas
incl
pop
jp
or
inc
and
mov
ret
bound
decb
push
xchg
adc
je
inc
fs
lds
scas
inc
fdivl
inc
clc
or
aas
adc
fdivs
lret
outsl
out
add
push
sub
pop
les
push
mov
das
lods
popf
cmpsb
and
aaa
dec
push
jg
push
lahf
int3
add
test
jp
les
mov
aaa
hlt
xchg
push
sub
aad
mov
cmp
lahf
cltd
iret
out
subb
cld
fmull
lds
movsb
sbb
rorl
loop
jl
fisubrl
and
xchg
mov
test
inc
das
mov
mov
inc
and
mov
scas
dec
lahf
xor
in
je
dec
je
call
xchg
pop
add
enter
push
sbb
add
mov
aas
int3
repz
or
pop
inc
and
xchg
dec
jp
lea
add
mov
pop
xor
das
and
imul
movsb
mov
push
jnp
data16
push
mov
cwtl
push
push
cmp
int
adc
sbb
mov
cmp
std
movl
or
ret
jno
mov
and
test
test
loope
sub
jg
outsl
adc
adcb
mov
icebp
in
je
xchg
scas
cmp
data16
sub
lret
scas
in
xchg
icebp
aam
adc
add
dec
ds
cmp
mov
cmp
push
push
jmp
ljmp
cmp
mov
sub
jno
push
lret
mov
rcrl
mov
insb
sahf
push
lods
sti
iret
scas
add
test
pop
in
aas
pop
adc
jmp
in
and
cmp
and
inc
or
adc
pushf
scas
scas
jns
add
stos
outsl
mov
insl
push
inc
xchg
xchg
rol
adc
leave
mov
add
cmp
popa
fstl
test
fninit
push
mov
push
push
std
cwtl
cmpsb
pop
inc
jnp
int
nop
mov
xchg
jnp
lcall
and
setge
sbb
mov
aaa
int3
add
movb
mov
pop
mov
pop
mov
dec
jmp
cmc
xor
xor
cld
sbb
push
aas
and
ja
dec
sub
mov
repz
push
push
in
imul
add
inc
push
in
lea
add
mov
ficompl
or
inc
aam
mov
shlb
lods
xor
std
fisubl
aam
pop
mov
inc
mov
xchg
fwait
lret
ficoms
mov
or
jno
dec
movsl
gs
push
or
fs
pop
jge
dec
jp
dec
ficompl
adc
sub
jnp
in
jno
xlat
insb
xor
push
pop
aad
pop
inc
dec
jnp
jmp
testl
cmpl
pusha
dec
pushf
inc
lcall
and
leave
fstps
icebp
jbe
jl
and
mov
lcall
popa
cmp
mov
idivl
mov
int3
aam
mov
xor
test
mov
cmp
add
out
iret
ffree
push
inc
sbbb
xlat
in
lock
dec
int3
mov
pushf
popa
xchg
mov
sbbl
dec
mov
sub
cld
add
adc
ret
pop
jmp
test
fsqrt
inc
bound
lret
jge
pop
or
rcrb
ror
pop
dec
sub
scas
iret
pop
sbb
xor
dec
push
ja
or
lods
sahf
loopne
mov
das
cmc
leave
inc
ja
or
jne
iret
mov
add
or
inc
xor
xchg
lret
xor
cmp
add
mov
add
lods
xlat
push
fs
call
sbb
mov
inc
xchg
mov
bnd
jbe
push
adc
in
xchg
dec
das
or
stos
xchg
sbb
arpl
lahf
js
mov
test
int3
cmpsl
sub
mov
je
shr
xor
mov
mov
pop
xchg
sbb
lahf
inc
test
decb
cmp
insl
push
pop
adc
xor
sbb
xchg
jns
stos
imul
cmc
test
mov
mov
pop
repz
xchg
mov
in
out
mov
nop
jmp
jmp
xchg
xor
cli
scas
sub
out
xchg
enter
and
into
fwait
push
xor
stos
cld
and
hlt
outsb
mov
dec
js
or
cmpsl
jnp
or
dec
mov
dec
cmc
cs
sar
dec
in
rcll
mov
in
int
xchg
test
fcomps
push
pop
ret
sub
push
fmuls
rclb
cmp
lahf
add
or
mov
jnp
mulb
xor
mov
inc
and
rorb
int3
leave
pop
xchg
xchg
adc
inc
inc
enter
cmp
clc
movsl
jne
aad
into
push
cmp
decb
stos
leave
out
inc
stos
mov
cmp
mov
pop
cmp
mov
dec
inc
leave
dec
in
imul
in
adc
es
xor
xor
add
add
or
dec
lcall
or
push
xchg
test
cmp
bound
int3
test
inc
mov
xchg
aas
test
js
test
popa
dec
xor
push
xchg
out
mov
sub
pusha
test
xor
mov
scas
popf
mov
cmp
pop
test
and
std
rcl
and
and
stc
jp
xchg
xor
mov
or
mov
in
repnz
sub
scas
lea
mov
jb
movsb
lds
sub
ja
jb
jnp
mull
jb
orb
dec
faddl
in
das
pop
lret
cmpb
fdiv
inc
mov
mov
xor
test
push
lret
jmp
aas
cmp
test
mov
roll
lret
add
or
repz
shrb
shr
or
jle
out
mov
add
pop
lret
fdiv
iret
inc
cmc
add
mov
enter
and
loop
and
jo
dec
cmp
mov
pop
mulb
ret
adc
mov
sub
ljmp
dec
int3
pop
add
pop
jnp
mov
push
add
xchg
into
mov
mov
xor
jle
pop
pop
adc
sbb
push
xor
mov
in
clc
scas
jg
pusha
in
add
pop
sbbb
mov
stos
inc
sub
or
cmp
jl
imul
mov
mov
cmpsl
push
cmpsl
cmp
and
imul
inc
stos
adc
mov
mov
add
adc
lahf
xor
js
shll
dec
sub
test
xor
sub
add
lods
ss
outsb
sbb
ss
xor
jnp
movsl
hlt
fsub
ja
or
xchg
das
push
push
iret
movsb
loopne
jno
mov
hlt
stos
orb
ret
in
cwtl
xlat
adc
clc
hlt
aad
sti
int3
data16
add
pop
jg
shlb
sub
lea
adcl
mov
in
das
inc
mov
adc
cmpsl
rclb
por
adc
mov
xchg
mov
shrl
ja
clc
adcb
call
or
jg
inc
testb
sti
daa
push
dec
lods
loop
scas
sbb
pop
inc
ja
jle
das
mov
ds
dec
je
lahf
call
das
rclb
xchg
punpcklwd
repz
test
xchg
idivl
icebp
insb
incb
leave
mov
cmp
les
lahf
mov
push
lret
xor
push
cltd
pop
push
jns
push
cmpl
jmp
insb
inc
cmpsb
push
cmp
or
shl
xchg
ja
int3
cmc
int
dec
ficoml
xchg
adc
cmp
inc
mov
outsl
pushf
xchg
pop
mov
or
ds
mov
roll
add
jno
dec
les
scas
sti
in
mulb
jg
add
cli
jo,pt
jne
loope
psignd
cld
loop
push
jle
push
out
fmuls
imul
push
out
or
das
dec
push
int
repz
shr
cmp
jo
cmp
dec
jg
out
sub
jmp
push
xor
xor
push
int3
mov
pop
lods
into
jnp
addw
adc
ds
xor
fdiv
jmp
test
jae
int
shr
push
shr
sbb
fidivs
jmp
into
in
cmp
sbb
push
es
push
jnp
cwtl
xor
repz
mov
adc
test
xlat
stos
inc
test
hlt
aam
stos
push
mov
adc
mov
pop
cmp
subl
jb
cld
loope
mov
mov
rorb
mov
jbe
sarb
icebp
enter
rorb
dec
xbegin
sbb
mov
sbb
add
fldenv
cli
insl
dec
cld
ja
or
inc
loopne
xorl
pop
and
add
fidivl
xor
dec
stc
and
adc
cmp
jns
sub
fldt
push
mov
daa
push
outsl
cmpsb
in
mov
sub
push
test
mov
ss
dec
inc
repnz
jno
fwait
jo
mov
loope
mov
pop
dec
cwtl
adc
pop
ss
fwait
mov
and
adc
notb
gs
add
cltd
push
dec
lret
xlat
int
xchg
push
add
test
dec
aaa
aaa
adc
movl
mov
scas
push
or
outsl
lds
and
or
add
inc
xlat
xchg
mov
outsb
stc
addr16
or
repz
and
xor
push
and
ret
xor
mov
lahf
xchg
push
jle
push
jnp
insl
jb
scas
sbbl
pop
pop
cwtl
push
pop
inc
sbb
in
dec
cmpl
fcoml
sarb
push
jg
add
fdivs
or
bound
jo
xor
icebp
rcrl
stos
into
mov
inc
fstps
cmpsb
cli
push
pop
xor
subb
adc
cmp
sub
xchg
addr16
jno
jb
jecxz
ret
shrb
pop
push
jge
mov
cltd
or
add
std
fwait
push
mov
dec
inc
cltd
test
mov
push
or
xchg
roll
inc
insl
jecxz
xchg
adc
ss
add
add
dec
add
or
loopne
dec
sarl
mov
ret
scas
shrb
jo
xor
xor
rclb
adc
adcl
ljmp
psrad
mov
in
stc
and
cmc
aam
mov
mov
jo
sarl
cltd
push
push
aam
mov
into
leave
xchg
inc
xchg
mov
jns
fildl
loope
repnz
add
push
sbb
xlat
push
imul
les
fstpl
sub
cmp
fldt
mov
or
pop
inc
jae
xor
loopne
push
pop
sbb
ljmp
fdivr
int3
sbb
in
int
test
sbb
cmc
leave
sub
lahf
out
outsl
sbb
cmpsb
imul
xor
xchg
not
pop
jmp
leave
pop
inc
mov
pop
popf
cmpl
xchg
push
jecxz
rcr
xchg
inc
or
pshufw
enter
stos
test
ret
xor
sahf
popf
jp
pop
in
and
hlt
xlat
cli
pushl
test
bound
test
push
leave
les
dec
jge
cltd
pop
mov
add
scas
xchg
outsl
and
shrl
cwtl
imul
add
popa
lock
lcall
xlat
pop
mov
idiv
data16
push
push
ficoml
lds
jnp
mov
mov
mov
aad
inc
rolb
xchg
cmp
lods
repz
aas
mov
mov
mov
adc
sbb
mov
popa
pop
mov
shll
inc
lds
inc
mov
cmp
sub
fsubp
mov
xchg
xor
push
aas
add
aad
popf
sub
and
mov
or
and
pop
subl
sbb
adc
les
mov
mov
push
addr16
and
fwait
adc
cmp
and
sbb
ret
jp
xlat
dec
push
loope
sub
addr16
jns
or
lcall
mov
rcll
ficoml
outsl
sbb
icebp
xor
jno
jl
and
mov
lods
pop
jmp
outsl
ja
lret
repz
push
lahf
inc
pop
mov
or
frstor
xorb
int3
xchg
xchg
sbb
mov
loope
xchg
or
rcr
cwtl
adc
fisubl
dec
mov
fsubrs
jle
adc
mov
mov
jo
add
stos
out
stos
adc
xchg
in
mov
sub
lods
mov
or
dec
lods
add
xor
push
sbb
imul
rcr
fidivl
ffreep
inc
out
dec
lods
es
movsl
idivb
jmp
dec
ficompl
jnp
cmp
jl
bound
jmp
sbb
adc
bnd
xchg
repz
jle
push
jmp
mov
mov
xor
inc
adc
pusha
std
inc
or
pusha
push
js
cmp
pop
int
push
sbb
sub
lods
push
popa
sub
imul
add
push
hlt
fwait
xor
jno
fdivl
test
mov
and
lret
and
aas
lcall
cwtl
push
dec
and
xchg
add
mov
outsl
jbe
mov
sub
lcall
cld
lods
gs
inc
pop
bound
scas
inc
dec
out
xchg
xchg
xchg
out
mov
repnz
aad
je
roll
pop
mov
cmp
xlat
fwait
mov
mov
and
and
and
pop
cmp
sub
jg
inc
cltd
inc
cltd
mul
xor
into
leave
aas
in
xchg
outsb
stos
test
xor
rcll
jmp
pop
lcall
inc
popa
stos
ss
sarb
lds
int
loop
stos
fdivrs
notl
lods
loop
sbb
and
mov
leave
xor
nop
in
push
jnp
out
rcll
fimull
dec
cvtps2pd
adcb
outsb
xchg
add
out
repz
jno
decb
in
sub
cld
repnz
xor
sbb
sar
sub
or
pop
and
pop
xchg
popa
inc
clc
mov
add
into
jo
ret
fwait
add
loopne
mov
xchg
adc
test
lods
gs
fistl
daa
push
es
sub
in
cs
adc
dec
roll
xchg
dec
and
xchg
sti
xor
scas
enter
and
pop
push
arpl
pop
fstps
call
cli
rclb
int
mov
adc
add
cwtl
popf
push
adc
adc
inc
shrl
call
xor
xor
nop
jb
lret
xchg
addr16
xchg
push
lcall
xchg
pop
test
push
mov
xor
jo
jb
jb
inc
popf
pushf
cmpsl
addr16
jmp
dec
mov
inc
hlt
jecxz
jno
xchg
add
jo
movsb
repnz
jne
sbb
adc
inc
frstor
cmpl
jo
pop
push
jns
shrl
xchg
push
xor
daa
or
dec
lret
in
pushf
xchg
push
pushf
repz
push
shlb
js
je
push
scas
arpl
xor
push
mov
jmp
push
popf
sbb
xchg
add
ds
daa
mov
outsb
fbld
xchg
cmp
or
add
dec
mov
add
or
rolb
test
lcall
dec
mov
add
jle
sbb
test
cmc
mul
stos
lahf
int
hlt
jae
sbb
dec
sahf
inc
jno
add
xchg
mov
inc
into
hlt
lock
xlat
shl
pop
movsb
mov
adc
ds
shrd
mov
testl
std
dec
jae
mov
cmp
fwait
repz
aad
pop
arpl
or
loope
adc
stos
pop
or
sbb
ret
push
stc
lcall
jg
lds
mov
adc
sbb
pop
lds
jo
bnd
lea
notb
dec
ss
xor
push
fucomip
add
sbb
enter
rorl
push
sub
cld
adc
or
mov
je
sub
loop
jno
jno
repnz
in
mov
inc
popf
data16
movsb
add
jo
fidivs
js
sbb
sbb
int3
and
adc
ja
popa
pop
or
jb
pop
jl
sub
pop
push
push
jle
imul
or
adc
lcall
cmpsl
int3
ret
shlb
pushf
cmp
cmp
ret
push
mov
scas
jbe
insb
and
pop
dec
jbe
jge
dec
or
push
push
cmp
into
mov
fwait
in
int
sahf
push
shll
pop
imul
cs
loope
xor
mov
cwtl
cmp
sti
xor
dec
or
xchg
jnp
fdivrs
cmp
push
ret
loopne
flds
es
out
testl
pop
xchg
scas
push
jl
sub
shll
mov
sub
inc
int
ret
add
divb
mov
pop
dec
push
dec
push
xchg
mov
push
push
fcomps
mov
cmp
shll
adc
dec
sbb
shrb
mov
inc
xchg
insb
or
test
shlb
cmp
in
add
fcomp
mov
setl
and
lahf
cmp
pop
add
xor
adc
pop
cmpsl
mov
dec
mov
or
repz
sub
lods
jne
jne
xchg
jmp
xchg
out
xlat
fsubl
adc
cmp
sbb
xchg
xchg
adc
pop
cmp
mov
xchg
and
push
pop
lret
pop
cmp
iret
orl
mov
mov
pop
lock
jns
add
dec
lods
push
in
insl
ret
mov
jle
jnp
dec
lods
gs
or
js
and
cwtl
xorb
cli
cmc
filds
cmpsl
test
xlat
loope
dec
xchg
cmp
fld
push
sbb
rcr
jecxz
push
loopne
pop
ret
cmp
cmp
fists
sbb
adc
mov
xchg
call
subb
enter
or
xor
test
cli
jno
add
aam
dec
mov
addr16
mov
aad
jbe
xor
or
sbb
outsb
lock
or
mov
data16
ret
cli
stos
stc
call
mov
outsb
int
pop
mov
jns
nop
mov
cmpsb
pop
sub
xor
mov
clc
in
pop
mov
test
xchg
xor
push
ret
inc
cmpsl
jg
add
jecxz
test
out
dec
dec
mov
aad
scas
cmp
jle
mov
popl
pusha
push
lock
inc
lods
rorl
enter
xchg
xchg
inc
ja
lds
cmp
fcomi
clc
push
push
push
mov
mov
insl
movsl
xchg
je
push
jmp
les
sahf
mov
sbb
push
fnstcw
js
pop
cld
mov
xchg
loopne
add
mov
or
gs
xor
adc
push
xchg
repnz
popa
pop
add
ljmp
data16
jp
repz
aas
mov
fildll
xchg
movsl
cmp
mov
cli
add
xor
sbbb
sbb
push
int
adc
lret
push
loopne
adc
pop
cltd
dec
pop
sbb
cmp
and
pop
ljmp
stos
in
out
nop
fcomp
pop
subb
sbb
out
test
ftst
cltd
fmulp
mov
ljmp
rorb
das
adc
pop
andb
cmpsb
sub
jo
rcrb
dec
shlb
xchg
xchg
fldt
dec
jl
pop
mov
aas
ds
mov
dec
fdivrl
out
mov
in
mov
cmpsb
inc
xor
stc
push
xchg
lea
addr16
jno
mov
sbb
ret
stos
jns
jns
xor
in
and
mov
sti
jno
std
test
inc
les
pop
inc
cmp
in
mov
cli
add
inc
mov
xchg
adc
fs
cmp
pop
dec
xchg
adc
or
in
loopne
jns
or
loope
inc
les
add
xor
or
and
hlt
ficoms
bswap
sbb
out
inc
test
mov
nop
adc
mov
inc
push
jle
or
mov
rorb
push
int
repz
cs
dec
in
fbstp
push
mov
mov
inc
aas
fldt
sti
pop
jge
fs
inc
je,pn
lea
inc
outsb
mov
neg
iret
adc
stos
jg
pusha
fstpt
ja
stos
or
pop
push
add
repz
testl
jbe
sbb
sub
jb
test
push
adc
aas
addl
in
mov
jl
and
arpl
xchg
pop
xor
pop
adc
xor
dec
loop
cmp
mov
les
sub
inc
push
mov
movl
fmul
cmp
sub
sti
dec
jae
add
lret
cmc
les
je
repnz
xor
popa
xchg
pop
dec
testb
sbb
xor
aam
imul
jns
call
jnp
lea
ror
sbb
aaa
sbb
gs
out
push
push
or
adc
loope
incb
imul
mov
cwtl
out
xor
jbe
add
sbbb
dec
pop
adc
pop
mov
xchg
and
pop
xchg
jmp
gs
jns
or
dec
inc
inc
repnz
add
decb
call
xlat
adc
outsl
xchg
aas
fs
push
test
mov
lea
cmp
add
cld
pusha
inc
pop
xchg
add
pop
enter
pop
test
mov
xor
cmp
or
sub
sub
mov
loope
clc
sub
adc
mov
add
pop
aad
jns
add
iret
xlat
in
jge
repnz
xchg
push
push
ret
fcmove
fcoms
jmp
jp
cli
xchg
mov
pop
push
jmp
sub
xchg
jns
add
mov
push
sbb
adc
test
pop
aad
mov
lret
nop
pop
pop
cwtl
add
and
jg
sub
xchg
mov
mov
inc
popa
sbb
sbb
ja
xchg
pop
jae
sub
test
insb
in
inc
mov
mov
decb
fcomi
mov
cmpsl
or
sti
and
and
mov
and
add
and
loope
call
adc
pop
imul
xchg
sub
adc
or
clc
mov
loopne
mov
fs
mov
lock
pop
cli
mov
das
test
les
and
rcrb
negb
repz
xchg
xchg
bound
stos
mov
sub
pusha
and
cltd
push
mov
inc
pop
imul
mov
je
pop
rolb
dec
jmp
cld
ret
xchg
dec
dec
dec
les
mov
fwait
jns
cmc
push
test
sbb
nop
xchg
inc
lds
jb
mov
pushf
roll
inc
cmc
push
sub
mov
les
jnp
lods
cmp
arpl
daa
aas
mov
dec
mov
lock
push
sahf
stos
mov
add
fucomip
jecxz
add
xor
cmc
sahf
push
lods
mov
lea
sbb
fwait
sbb
or
test
cli
les
jne
stos
push
cmp
aam
jno
xor
cmp
xor
sbb
and
std
pushw
xchg
push
push
mov
pop
mov
ja
mov
lods
in
inc
mov
je
clc
cld
mov
lds
sbb
jno
int3
movsl
sbb
push
leave
dec
rolb
and
xor
mov
aad
hlt
push
lahf
adc
push
adc
sti
adc
daa
fstl
insl
out
xchg
and
pop
cmp
push
and
sbb
xchg
arpl
xorb
xchg
xor
mov
lods
outsb
pop
mulb
mov
jns
sbb
xlat
add
lock
cld
clc
pushf
cwtl
scas
jne
out
xchg
and
test
std
scas
lea
jecxz
xabort
xor
and
xchg
dec
dec
jae
aaa
int3
ss
mov
xor
push
sub
jl
xchg
xchg
adcb
test
adc
and
adc
jo
pop
adc
pushf
scas
into
in
jno
js
pushf
or
inc
int3
cmc
test
cmpsl
lcall
dec
mov
cmp
in
int
sarl
sarl
data16
sti
mov
cmp
mov
cld
xor
cmp
ds
xchg
mov
xchg
inc
rorb
imul
imul
sbb
daa
cmpsl
push
fiadds
std
lods
jp
push
imul
cmpb
jne
pop
pop
dec
imul
xchg
ds
mov
shrl
push
xor
jle
xor
aam
lea
adc
cltd
outsl
and
icebp
stc
movsb
xor
notl
cs
test
mov
jle
mov
mov
add
cmc
flds
jge
popa
mov
mov
mov
icebp
or
out
or
movsb
sub
out
jae
mov
lret
sbb
push
pop
icebp
mov
xor
mov
pushf
andb
movsl
fdivrp
add
stos
pop
into
add
cmp
in
lods
sub
adc
ret
mov
fadd
sub
or
aaa
enter
or
cwtl
rcll
mov
or
rcl
dec
cmp
jecxz
test
xor
push
hlt
xchg
imul
dec
stos
fidivrl
cmp
or
pop
fisubl
inc
mov
add
push
dec
scas
sbb
aad
in
jp
and
mov
andb
pop
push
jno
aam
sub
aas
ljmp
jmp
loope
push
mov
add
sbb
xchg
adc
xchg
add
adc
and
rorb
add
iret
or
add
mov
enter
or
lret
pushf
andl
sbb
and
addb
arpl
adc
jmp
call
shll
pop
xor
fsub
xor
divb
cmpsl
cltd
adc
jmp
fisttpl
mov
add
jmp
out
insb
push
dec
in
das
fcomip
je
notl
cmp
mov
mov
inc
jecxz
xor
imul
outsl
clc
inc
scas
push
cli
xchg
nop
add
hlt
mov
inc
js
lret
and
inc
and
mov
dec
fiaddl
cli
mov
cmp
aam
std
dec
mov
lds
lds
clc
xchg
nop
mov
jge
add
addr16
mov
mov
adc
ja
pop
push
xchg
xor
xchg
out
xrelease
cli
and
pop
mov
cwtl
cwtl
movsb
out
loopne
pushl
fldenv
add
movb
cmp
xor
cmp
dec
aaa
cli
test
jnp
add
arpl
lcall
sbbl
pop
pop
jp
loop
push
add
cmpsb
jne
mov
vpunpcklbw
mov
cmpl
aam
sbb
cli
mov
ljmp
lahf
ljmp
das
hlt
cmp
and
or
pop
xchg
movb
pop
xchg
jmp
cmp
jnp
dec
push
and
mov
mov
pop
das
push
in
rorl
sub
dec
sub
je
cmpl
shll
jae
cmpsb
xlat
inc
mov
mov
loopne
lret
or
add
lret
mov
sbb
jns
push
cld
cmp
mov
pop
inc
scas
dec
iret
decl
icebp
xchg
push
lcall
fisubrs
sub
loope
or
imull
lock
out
dec
std
insl
push
xchg
mov
cmp
stc
pop
rorb
fidivl
sub
imul
cwtl
ss
and
inc
in
fwait
ds
sbb
leave
add
and
in
or
fstpt
icebp
sarl
push
pop
xor
mov
std
push
outsl
rcrl
pop
add
push
aad
lret
mov
add
push
cmp
das
in
out
jle
mov
mov
sub
xor
movsl
jmp
ss
jae
out
fdiv
bnd
ret
rol
fwait
iret
loop
jge
cmp
fldcw
push
xor
sbb
cs
and
adc
add
stos
lock
mov
dec
mov
clc
test
lahf
imul
popa
fcomp
test
mulb
cwtl
dec
inc
int
dec
sahf
inc
add
inc
ret
sahf
lcall
and
ds
pop
icebp
jo
pop
mov
in
shll
inc
dec
inc
mov
repz
add
test
loope
xchg
pop
in
adc
test
imul
roll
dec
popa
js
shll
and
sahf
mov
mov
pop
lods
cmp
adc
movsl
lahf
aaa
inc
inc
mov
sbb
xchg
daa
xor
in
mov
movb
call
mov
jae
and
stos
lret
xchg
xor
xchg
or
add
cltd
popl
pop
adc
movl
lods
cmp
push
outsb
add
jecxz
in
push
mov
outsb
dec
mov
icebp
mov
daa
out
jmp
sbb
cli
shll
xchg
in
xchg
push
add
mov
and
scas
dec
popf
test
jbe
popf
popf
sub
lock
xchg
sub
jmp
shll
shlb
push
push
clc
mov
xchg
jno
jo
and
std
scas
daa
lret
inc
mov
xor
lock
idivl
xlat
mov
test
lahf
jo
mov
mov
cmc
stos
loopne
andb
shll
jl
in
jno
pop
push
in
jecxz
sub
fists
sti
dec
jl,pn
aaa
dec
mov
cmc
push
call
movsb
inc
cmpsl
mov
push
imul
sti
mov
int
mov
inc
lods
data16
mov
push
cmpl
push
mov
xchg
push
and
aam
std
stos
ret
mov
jmp
fsubl
int
ss
shr
cli
inc
pop
xchg
or
jno
push
out
fwait
mov
jno
ret
imul
push
imul
lcall
xchg
and
stos
sbb
in
in
test
sbb
xlat
dec
andb
nop
jmp
or
mov
or
imul
iret
dec
dec
mov
movl
xlat
call
jecxz
mov
or
subb
cmp
mov
aam
adc
int
test
mov
stos
or
xor
xchg
push
sub
pop
add
inc
fisubrs
xor
aas
or
arpl
leave
cwtl
mov
stos
jg
cld
ds
and
rorb
fcoml
mov
adc
cwtl
mov
sahf
test
mov
xchg
call
pop
std
cmp
sarb
mov
arpl
or
lods
xchg
lds
mov
les
push
cli
je,pn
aad
push
and
call
push
mov
inc
xor
popa
pusha
outsl
mov
stos
jae
out
jmp
and
or
pop
enter
pop
aam
fmuls
dec
mov
pop
es
les
loop
pushf
je
arpl
pusha
lahf
popa
scas
push
loopne
cwtl
xor
jl
or
push
sahf
test
xchg
xchg
fstl
testb
jo
jbe
ja
adc
inc
movsl
ja
cltd
inc
pop
popa
sub
lods
adc
push
lret
jmp
in
or
loopne
and
addb
mov
std
and
xor
sbb
fs
pop
jb
sub
push
sbb
sub
addr16
into
xchg
cltd
out
mov
mov
xchg
sbb
cmp
inc
out
inc
pop
rclb
and
aas
nop
xor
scas
push
cs
push
dec
jle
aaa
push
leave
push
outsl
arpl
pop
jnp
lcall
xchg
jl
aaa
add
movsb
pop
pop
xlat
dec
jl
sahf
outsb
outsl
push
and
sbb
push
and
mov
aam
nop
rcll
xlat
iret
ret
cmp
dec
mov
popl
fldl
dec
stc
sub
orl
add
push
in
mov
scas
mov
cmc
fildll
jb
sbb
sarb
loopne
shlb
leave
xchg
insl
fsub
inc
loopne
mov
xor
outsb
jno
test
sub
mov
fwait
mov
sbb
add
cltd
leave
enter
imul
insb
andl
stos
pop
jne
push
outsb
and
pusha
mov
inc
add
xor
inc
add
aaa
and
pmullw
out
and
xchg
shll
adc
cmpsb
xchg
xor
jge
fisubrs
notb
pop
leave
sub
js
mov
xchg
cwtl
adc
xchg
push
pop
loopne
fnsave
mov
stos
stos
xchg
adc
dec
adc
lcall
jmp
aas
out
sub
dec
rcl
mov
fnstsw
outsb
movsb
icebp
lods
repnz
sbb
jbe
inc
push
shll
jns
xchg
test
push
push
mov
cld
mov
int
push
pop
adc
repnz
mov
sti
stc
or
call
scas
rorb
ss
stos
or
scas
stos
inc
gs
loopne
mov
dec
xchg
sbb
stos
dec
jmp
inc
ret
dec
aaa
mov
mov
jnp
das
pop
jg
pop
push
jg
stc
scas
push
enter
sbb
fidivrl
adc
leave
add
jo
aad
adc
scas
xchg
stc
push
into
sub
pop
insb
notl
ficoml
push
rol
rcrb
ret
paddsw
dec
push
jo
int
lods
xchg
or
xor
inc
and
cld
mov
jo
jge
fsubl
pop
ret
ds
mov
or
rclb
adc
test
sub
inc
mov
enter
jbe
xor
jmp
or
outsl
and
mov
add
jmp
adc
daa
mov
mov
mov
aam
shlb
mov
xor
or
push
jbe
testl
mov
inc
sbb
ds
sarl
add
mov
or
fisttps
pop
push
add
pop
dec
xor
mov
jb
push
or
mov
fsubrl
cmp
push
pop
popa
orb
push
push
scas
push
aaa
int3
out
inc
sub
incb
lret
xchg
rcl
incl
les
mov
or
pop
and
lock
add
or
inc
aam
pop
popf
xchg
add
jnp
loop
jnp
stos
sahf
daa
clc
mov
lcall
cli
mov
ds
cmpsb
inc
dec
cmp
and
stos
movsl
mov
imul
cltd
mov
xchg
lcall
cld
push
xchg
push
cmp
dec
inc
and
and
gs
jge
xchg
sub
pop
pop
xor
or
cmp
out
loop
arpl
jg
mov
pop
mov
decb
pop
insl
sub
out
pop
pop
inc
out
fstl
adc
out
ret
popf
inc
or
mulb
out
pop
inc
jp
test
dec
pop
scas
popf
mov
push
cmpsb
int3
fistpl
pop
nop
sub
dec
mov
fcomps
mov
push
and
add
push
sahf
shr
sub
xchg
sti
push
pop
cmpsl
sub
test
mov
jge
mov
popa
ss
dec
das
mov
or
sub
push
xor
xor
repz
jl
shlb
adc
aas
icebp
mov
dec
jge
addb
xchg
pop
cmp
add
js
out
cmpsb
cwtl
mov
xorl
call
dec
je
lds
mov
iret
sub
movsb
pop
cld
xor
mov
push
iret
xlat
xor
dec
test
pop
mov
aas
adc
enter
rclb
or
out
or
xor
lret
pusha
inc
cli
sti
daa
mov
lods
cwtl
test
or
rclb
imul
add
nop
sbb
out
aaa
xlat
out
ljmp
xchg
sub
fcoml
mov
and
dec
pop
add
das
pop
popf
sbb
pusha
fildll
ss
shl
sub
push
frstor
dec
outsl
mov
or
stos
and
arpl
jp
sarb
fsubrs
or
sub
das
sub
outsl
adc
in
push
mov
push
dec
ss
mov
push
fst
or
imul
dec
xchg
popa
mov
ss
stos
fstps
push
xchg
je
scas
push
lcall
mov
mov
mov
xchg
popf
xor
mov
sti
inc
jo
insb
pop
push
lea
mulb
mov
sub
wrmsr
pop
xchg
out
fcomps
and
movsl
lret
aad
aas
mov
fdivrl
push
xchg
imul
jne
xchg
and
into
pop
push
shll
lahf
aaa
sub
repz
into
inc
sub
lahf
repz
mov
mov
movsl
jo
in
leave
js
movsb
xor
cmp
and
stos
mov
push
pop
mull
inc
enter
std
cmp
jmp
xchg
hlt
dec
aaa
dec
xor
divb
pop
lea
mov
mov
inc
ja
mov
outsb
cwtl
jo
mov
sbb
pop
jns
es
loope
inc
jno
mov
inc
sub
cmp
andb
jno
dec
repnz
mov
iret
jo
lret
shll
rcr
xchg
cmp
in
inc
push
sahf
add
lcall
push
lock
in
sub
gs
and
jmp
xor
mov
lcall
test
or
test
sahf
movsl
out
push
or
lods
imul
adcl
inc
in
ds
gs
cmp
mov
push
test
into
cli
dec
lds
imul
ret
idivl
in
cmc
daa
cld
fsubl
test
lahf
mov
lea
xor
repnz
jl
inc
inc
daa
mov
jb
hlt
jbe
bound
xorl
cmp
inc
mov
sub
jbe
or
mov
jle
ss
sub
inc
mov
mov
jne
sti
adc
test
iret
jle
ret
sbb
nop
xchg
xchg
dec
push
xchg
addr16
pop
xchg
out
movsl
popf
in
jno
ud2
out
jge
fsubp
add
int3
into
push
in
hlt
lds
cmc
fcompl
rcll
xor
and
pop
push
not
fs
push
fwait
xor
ja
popf
hlt
jno
adc
jb
cmc
jo
sub
inc
add
cwtl
jo
pusha
sbb
nop
add
ds
mov
mov
push
rcl
xchg
push
mov
pop
mov
sub
and
test
test
out
sti
and
js
cmp
sbb
lret
ss
js
add
imul
jmp
xchg
adc
mov
mov
mov
and
sbb
push
inc
xor
std
adc
test
jecxz
shll
pop
push
aam
dec
js
int3
test
xor
out
sahf
outsb
jbe
popf
test
xchg
ljmp
cmpb
dec
lcall
mov
cmp
sbb
rcrb
loope
xor
xchg
sarb
and
fisttps
stos
jne
cmp
aaa
stc
mov
sbb
arpl
adc
fisttpl
push
inc
xor
push
xchg
js
outsl
mov
das
and
enter
adc
push
mov
insl
shlb
pop
jp
add
pop
out
bound
jecxz
repz
andl
mov
xchg
inc
pop
ljmp
push
imul
xchg
dec
int3
push
dec
mov
call
out
je
xchg
inc
divb
pop
pop
repnz
loopne
lret
es
in
stos
sub
rcrl
cmp
jp
mov
cltd
mov
cmp
sub
fsubl
push
and
iret
push
cmc
mov
leave
pop
or
pushf
add
sti
test
sti
lea
stos
xlat
dec
or
js
in
dec
andl
xchg
dec
fs
fisttpll
cld
push
lods
lcall
ret
jbe
test
insl
mov
inc
adc
ss
mov
dec
lds
out
out
sbb
js
push
add
cmp
dec
mov
inc
mov
popf
sahf
in
das
xor
shlb
jge
and
test
xchg
push
lret
mov
and
in
mov
jle
sub
pushf
xlat
dec
push
pop
xchg
sub
fstps
xchg
sub
push
rorl
in
mov
pushw
pop
xor
jmp
xchg
adc
roll
cli
outsl
or
mov
mov
jl
adc
mov
cmpsl
adc
sbb
push
movsb
xor
insb
int3
and
aam
dec
xchg
das
gs
mov
sahf
imul
xor
fdivp
imul
not
imul
and
mov
adc
jnp
xchg
lods
mov
jb
in
jbe
lea
aaa
test
sub
inc
js
fcoml
fmuls
dec
xchg
jle
dec
arpl
xchg
sti
sbb
stos
out
arpl
pushf
jae
pop
adc
mov
cltd
test
xchg
and
xor
jo
cmp
lock
es
fmuls
cmp
or
lods
cltd
adc
repnz
or
sbb
jp
jno
in
jb
push
or
add
sbb
pushf
repz
push
test
inc
or
push
cmp
out
push
jnp
dec
test
adc
push
or
test
dec
and
pushf
mov
js
popa
iret
fwait
insl
xorl
out
and
stc
xchg
popa
fcomps
sub
xchg
addr16
jo
pop
jl
clc
jo
pop
xchg
mov
push
sbb
mov
or
or
ds
push
xor
cmp
lea
sub
scas
adc
add
cli
lret
xchg
and
sub
leave
fs
arpl
jno
stc
xchg
pop
sub
sub
cli
imul
push
and
dec
daa
mov
dec
aas
lahf
lods
movsl
call
clc
ret
adc
test
test
lahf
loop
shr
jo
xchg
sbbb
dec
sub
mov
jge
test
gs
push
enter
cmp
pop
rcll
pop
cmc
and
mov
outsl
dec
popa
jecxz
push
pop
dec
arpl
inc
cmp
imul
shll
popf
pusha
hlt
mov
mov
push
xchg
cltd
sub
sub
sbb
aad
inc
test
sbb
insb
adc
mov
inc
push
pop
adc
xchg
sbbb
adc
dec
scas
adc
sbb
outsw
push
std
pop
mov
cmp
inc
outsl
decb
jg
adc
push
les
pushf
ss
push
mov
jne
popa
je
ficoms
out
icebp
inc
icebp
jp
inc
jl
inc
xchg
ret
adc
add
movsl
push
and
out
out
mov
pop
pop
mov
jecxz
into
jmp
jl
jno
xor
pop
pcmpeqd
mov
jg
jg
xchg
jmp
das
fimuls
adc
pushf
ret
call
enter
dec
leave
jp
add
push
out
xchg
das
dec
or
jle
je
add
movsl
stos
or
mov
sub
mov
sub
sbb
aad
int3
aad
cmpsl
push
ss
out
movb
shlb
into
inc
imul
xor
and
dec
cli
fs
lods
sbb
inc
add
js
xchg
mov
ss
xchg
inc
cmpsl
and
mov
jns
push
cmc
add
pop
fcoms
movsl
push
scas
mov
xchg
iret
lret
jmp
add
rcrl
pop
mov
and
or
push
cwtl
sub
fidivrl
sbb
iret
fistpl
add
xchg
test
xchg
sbb
addr16
out
xor
cmpsl
inc
or
pop
in
movsl
shll
sub
or
bound
repz
hlt
fistps
aas
push
inc
pop
in
and
mov
mov
sbb
bnd
popa
sbb
iret
sub
fs
movsb
adc
imul
inc
mov
cmc
mov
xor
or
imul
xlat
in
iret
popf
dec
es
jo
add
mov
cwtl
outsb
dec
add
aas
mov
inc
bound
push
pop
push
cmp
jle
cmpsl
ds
push
sbb
and
or
inc
mov
ret
cmp
mov
mov
cmpsb
xchg
mov
ja
cld
stos
lods
push
mov
push
sbb
push
sub
iret
rorb
in
inc
adc
stos
mov
movsl
adc
test
dec
mov
sub
mov
aas
loope
enter
iret
mov
mov
out
mov
mov
adc
add
and
sub
jle
out
repnz
das
aam
gs
xchg
or
xchg
in
inc
and
shlb
addl
cwtl
sti
jae
cs
ja
mov
jp
dec
inc
in
jns
std
loopne
sti
mov
xor
out
jmp
sub
enter
sub
sbb
cmp
xor
mov
subl
std
mov
jle
mov
js
push
mov
mov
jle
add
cmp
push
mov
mov
sub
sub
pop
insb
inc
orl
fs
stc
mov
sbb
cs
dec
in
int3
cmp
imul
rorb
scas
push
cmc
mov
dec
out
lods
mov
or
pop
scas
sbb
imul
mulw
pop
and
addb
ret
mov
xchg
je
fldenv
jp
sbb
mov
test
adc
loope
sbb
in
jb
mov
push
iret
dec
xchg
out
mov
cmpsb
mov
stos
icebp
jae
jge
mov
imul
add
and
dec
cs
xor
icebp
add
test
bound
clc
fdivr
ljmp
sarl
std
push
pop
inc
retw
push
jmp
cmp
and
mov
jae
sub
test
push
pusha
dec
add
imul
xorl
ja
lds
mov
mov
stc
xchg
mov
mov
out
inc
jbe
adc
mov
lods
xchg
bnd
mov
add
dec
fisubs
jne
xor
fs
push
popa
xchg
hlt
dec
fs
jns
fucom
repz
sbb
movsl
xlat
adc
cltd
arpl
inc
xor
adc
das
add
cltd
ret
sbb
xchg
frstor
lods
in
or
pusha
add
jl
jmp
sbb
push
loop
xchg
pushl
dec
mov
xchg
lods
stc
test
mov
shr
bnd
push
pop
shlb
sbbl
adc
sub
lret
mov
mov
mov
out
je
or
dec
call
rol
in
pop
imul
adc
divb
sbbb
push
mov
out
jae
jb
negb
mov
orl
sub
fnstsw
inc
test
outsl
add
inc
stos
les
pop
movsl
out
pop
xor
lahf
ror
hlt
sarl
pusha
mov
test
push
sbb
es
outsl
mov
mov
or
fidivs
cmp
pop
jno
mov
popaw
and
jle
push
dec
negl
mov
mov
mov
jl
fs
ficomps
cmpsb
xor
shlb
mov
sbb
xchg
fmul
push
xlat
xor
lret
gs
xor
inc
jmp
pop
xlat
lods
cmp
arpl
int3
xchg
ss
cmpl
iret
ss
cli
test
incb
ret
inc
mov
repz
dec
cld
mov
or
divl
cmp
in
and
fildl
xor
pop
or
or
push
dec
cmp
or
subl
mov
lds
ja
test
dec
sub
jl
imul
sbb
mov
pop
scas
lahf
adc
enter
out
test
enter
jp
out
in
jb
addr16
movsl
cmc
cmc
mov
and
insb
mov
jae
cmp
outsb
stos
int
and
aad
pop
xor
ds
pop
dec
out
xchg
pop
push
pop
test
ss
in
cmpsl
pushf
pop
data16
orl
test
int
and
rorb
outsb
seta
adc
ficoml
popa
leave
hlt
push
test
loope
dec
fdivl
mov
stos
cmpb
pop
add
adc
cmp
jae
arpl
enter
pop
cmp
or
test
sbb
and
adc
push
add
xor
in
fimull
jnp
xor
xlat
push
fwait
dec
and
cltd
adc
out
dec
inc
add
fidivrl
xor
pop
and
aad
insl
push
push
sbb
dec
in
jnp
push
dec
mov
xor
ljmp
or
outsb
leave
movsb
add
adc
loopne
mov
mov
pop
mov
andb
jmp
in
mov
nop
and
fwait
es
lcall
out
jmp
dec
jmp
mov
imul
in
mov
movsb
mov
inc
xchg
or
jae
gs
mov
push
jbe
sub
and
and
sbb
movsl
sbb
xor
jno
mov
ds
mov
std
lds
push
idivb
mov
repz
mov
pop
sub
sarb
dec
stos
popa
fdivrl
fisubrs
cli
push
adc
orb
lahf
dec
xor
mulb
stos
xor
repz
ljmp
mov
or
lds
push
inc
dec
lea
and
fisubrl
add
ret
sbb
mov
scas
push
icebp
shlb
push
out
adc
call
out
sub
sbb
icebp
sbb
push
xor
imul
data16
movsl
out
and
push
mov
test
mov
jp
pop
mov
outsb
add
mov
cmp
jns
aas
inc
dec
jle
je
testb
xchg
jb
pop
rcll
lods
in
adc
scas
push
xor
adc
aam
test
and
nop
jmp
jbe
into
je
jp
jmp
shrb
jne
add
pop
shlb
push
aaa
adc
mov
ret
fidivrl
push
xchg
add
inc
ret
pop
dec
bound
pop
sbbb
iret
ja
xor
mov
inc
lahf
hlt
mov
cmpsb
push
adc
mov
je
js
daa
je
or
lret
sub
xor
and
lret
into
gs
push
stos
cs
pop
mov
xor
hlt
add
lret
dec
xchg
dec
in
repnz
scas
add
lahf
cmpsl
xchg
mov
push
and
fidivrl
lea
hlt
shl
negb
mov
lods
mov
arpl
ljmp
or
iret
jae
mov
scas
add
insb
movsl
out
xchg
dec
cltd
pop
lahf
mov
fnstsw
in
mov
stc
cmp
mov
ja
fwait
inc
pop
mov
adc
cs
fnstenv
mov
xchg
fildll
aad
sbb
lahf
js
ror
notl
pop
adc
test
xlat
aaa
subb
shrb
jl
sub
subl
sbb
fadd
ret
in
imul
jbe
fiadds
push
scas
cld
in
sarb
and
ljmp
dec
in
int
and
mov
xchg
jo
pop
xchg
aad
inc
pop
out
out
lods
dec
imul
dec
jp
dec
pop
cltd
roll
hlt
mov
add
iret
xchg
sbb
aad
mov
sbb
add
andb
pop
inc
ss
adc
inc
mov
cmp
cld
push
sbbb
mov
sbb
imul
jecxz
loope
jg
pop
and
mull
cld
rclb
mov
mov
hlt
inc
jbe,pn
add
mov
pop
xor
dec
nop
ret
fldl
xor
fs
dec
icebp
mov
int3
test
xorb
ds
xor
mov
test
mov
pop
in
add
mov
add
mov
pusha
popa
fwait
adc
or
scas
mov
adc
add
imul
or
rcrb
sbb
sbb
test
popa
push
loopne
mov
mov
in
fimuls
mov
push
mov
bound
cmpsb
jo
or
lods
cli
test
lds
addl
dec
and
arpl
and
movsl
out
mov
inc
gs
pop
out
movsl
mov
xor
inc
addl
mov
cmp
insl
inc
jp
shr
xchg
adc
rcr
jne
arpl
ss
in
mov
xchg
push
sbb
out
dec
sub
cmp
imul
mov
mov
mov
push
inc
push
clc
je
jle
pop
xor
aam
pushf
jno
mull
add
sbb
jecxz
clc
adc
push
inc
popa
loop
push
or
mov
je
xchg
pop
sahf
filds
xor
insb
shrl
mov
bound
loope
mov
or
pop
fdivl
in
push
xor
test
inc
mov
cs
push
sub
push
add
inc
int
in
pop
mov
outsl
imul
cld
in
push
int3
rorb
cmp
jmp
add
lods
jmp
xor
push
add
mov
hlt
sub
inc
xor
mov
pop
lea
adcl
and
mov
xchg
out
inc
pop
dec
pop
xor
aam
sti
test
xchg
adc
ljmp
lods
dec
sti
xchg
push
mov
int3
mov
scas
cmp
scas
cmp
rolb
arpl
ret
scas
les
stos
mov
xchg
sbb
pop
jecxz
sub
jbe
sbb
movsb
sahf
mov
cmp
push
and
sub
cli
push
jae
xlat
mov
js
mov
into
xlat
pop
push
mov
mov
lahf
insb
adc
fcomip
xor
dec
fmull
lret
jl
lods
cmp
sar
inc
xchg
iret
sbb
aaa
xor
ljmp
jne
and
push
xchg
ror
insl
into
jmp
adc
pop
mov
movsl
inc
pop
xlat
jne
adc
pop
xchg
mov
inc
push
add
aas
lret
out
mov
dec
fnstsw
inc
xor
lahf
stos
mov
push
xor
ret
aaa
popa
sbb
popa
fists
outsb
cli
jb
jnp
aas
sub
pushf
push
sub
xchg
fidivl
fwait
jb
pmulhw
and
popf
daa
push
xchg
popf
fldl
outsl
rol
lods
out
in
xor
outsl
in
in
push
xchg
hlt
lcall
sub
insb
or
add
insl
sarl
push
add
xlat
movsb
dec
xor
and
add
imul
mov
jge
adc
jg
dec
or
sub
cmp
pop
jecxz
fsubl
jns
mov
fists
sbb
fimuls
pushf
pop
fimull
dec
add
adc
inc
add
jle
xchg
in
das
loope
sub
das
push
cmc
js
jg
adc
imul
add
inc
sarl
pop
in
pushf
sti
lcall
jns
fsub
or
xor
sahf
mov
aam
inc
lret
mov
scas
popa
mov
aaa
push
mov
int
push
mov
mov
xlat
mov
add
inc
test
ss
shll
mov
insl
in
or
dec
inc
cli
push
not
popf
or
and
test
sub
int3
jg
sbb
arpl
aad
cltd
sbb
add
inc
and
pop
mov
imull
xchg
and
fcoms
test
mov
mov
pop
repnz
test
imul
out
cmp
sub
or
repz
push
mov
mov
push
xlat
xlat
iret
and
ret
imul
sarl
mov
test
push
leave
push
pop
popa
mov
pop
jecxz
dec
mov
lock
lret
sbb
jno
test
lods
mov
aas
iret
xchg
sub
enter
les
inc
mov
out
cmp
push
jbe
adc
and
aam
testl
out
jns
adc
inc
or
ja
push
mov
lret
lret
loopne
mov
mov
test
movsb
imul
test
mov
or
mov
loope
rcrl
jnp
stos
push
int
mov
cs
testl
jg
xorb
mov
push
dec
xchg
inc
dec
cmc
push
cli
push
dec
xchg
cmp
enter
aas
inc
outsb
add
sahf
add
xor
lds
lds
add
mov
imul
popa
and
push
add
cmp
cmp
fistpl
jb
call
lret
push
fmull
in
jne
ret
test
or
fists
adc
pop
lcall
mov
pop
cmp
arpl
xchg
lret
pushf
cmp
sbb
inc
xchg
out
cmpsb
and
or
js
test
or
ss
fwait
cwtl
int
inc
cs
pop
xlat
or
dec
sub
and
xchg
jp
mov
sub
out
andb
mov
add
mov
cltd
mov
ljmp
or
rcll
sub
add
pusha
xlat
fsubp
push
xchg
pop
imul
popa
dec
inc
bound
sub
pop
lahf
inc
rcll
cltd
adc
out
jnp
ret
dec
andl
sub
fs
inc
mov
mov
pop
pop
clc
or
jg
jmp
adc
inc
rcll
bound
es
sub
adc
xorl
das
jecxz
lret
mov
test
or
add
sub
jg
lret
dec
mov
jg,pn
subl
popa
xor
scas
jb
sti
cld
test
loope
std
adc
cli
mov
loop
pop
dec
jns
in
imul
mov
and
dec
inc
lock
cmp
les
ljmp
ss
mov
hlt
lods
mov
inc
in
xor
insb
shl
aas
stos
xchg
imul
fs
imul
mov
xor
stos
and
dec
push
jo
in
add
sbb
pop
nop
les
xor
clc
fidivrl
and
cltd
jno
jp
mov
mov
push
or
daa
movsb
rcrb
lock
push
mov
loop
add
fcoml
and
insl
aaa
jns
pusha
mov
jmp
scas
test
mov
and
cmp
mov
xor
cld
notl
jnp
push
in
roll
push
and
cwtl
popa
cltd
jo
mov
jns
scas
mov
ss
pusha
add
js
mov
das
cmp
xchg
fbld
xor
sub
sbb
mov
cli
push
mov
sub
xor
pop
fisttpl
sbb
andl
fsubs
add
rolb
xchg
adc
inc
dec
out
int
mov
add
in
sarl
cmp
cmpl
xor
gs
xchg
in
adc
mov
dec
fdivl
jmp
or
push
jmp
add
cmp
push
notb
cs
andb
stos
ja
sbb
jmp
int3
mov
scas
adc
out
clc
inc
test
lods
jg
or
dec
cmc
push
xchg
aaa
jl
int3
cmp
push
inc
ret
lock
jecxz
sti
daa
xchg
and
gs
sbb
xor
pusha
push
sbb
jno
mov
les
mov
mov
shl
xor
mov
aas
in
push
mov
push
fs
jns
sub
mov
xlat
push
repnz
outsl
or
fisubs
dec
das
out
js
test
out
and
rcrl
repz
jecxz
add
sub
das
cmp
lods
cli
std
cmpsl
xorb
sahf
mov
and
divl
sub
or
inc
ljmp
dec
ljmp
fdivrs
in
sub
jo
out
movsl
adc
dec
lret
ret
jecxz
jmp
in
and
add
pop
jmp
cmp
shlb
sbb
aas
enter
lahf
test
pop
pop
sahf
xchg
repz
lds
leave
mov
leave
xchg
adc
scas
mov
sub
xor
nop
gs
push
mov
bound
flds
xchg
jg
cmp
or
and
movsl
pop
ljmp
or
cmp
test
jl
mov
icebp
jge
push
inc
push
push
sbbb
mov
jg
lds
popf
pop
mov
xchg
inc
lret
add
mov
sub
push
fiadds
dec
mov
cmp
fdivrp
push
jmp
cmpsb
dec
nop
jae
sub
jge
jb
or
dec
jg
imul
adc
test
sti
pop
aas
xchg
js
iret
inc
mov
jne
loopne
les
mov
add
mov
out
scas
push
pop
or
lret
inc
inc
testb
jl
enter
test
sbb
ret
xchg
imul
orl
and
int
and
jne
aad
cmpsl
push
enter
or
push
sti
mov
shlb
call
jg
je
rol
loop
mov
lret
sub
or
dec
xchg
das
dec
lret
mov
aam
xor
xor
test
pop
in
cmp
sbb
dec
and
jne
mov
lea
fcmovnbe
inc
call
sub
jg
roll
push
or
push
xor
test
mov
pushf
icebp
lcall
aam
in
jl
test
test
inc
cmp
jp
pusha
ja
pop
leave
pop
int3
mov
imulb
je
in
sbb
pusha
loopne
lock
push
fcmovnbe
dec
in
aad
dec
jmp
dec
inc
test
push
push
xor
and
cli
lods
cli
dec
lret
out
sub
add
int3
ds
xor
dec
mov
sahf
mov
movl
arpl
xchg
jbe
jge
mov
jle
jecxz
fsubs
sub
addr16
hlt
push
pop
outsb
rorl
mov
cmc
jecxz
aam
shrb
adc
mov
mov
jg
pop
cmp
in
fnstenv
mov
shrl
jp
bound
mov
xchg
dec
cltd
movsb
arpl
clc
data16
mov
adc
outsb
aaa
arpl
jmp
pop
pop
dec
shl
xor
pop
sarb
dec
bound
xor
repnz
sti
mov
lahf
xor
jmp
inc
mov
fs
jp
inc
dec
dec
cmpsb
xor
and
jmp
lock
sbb
mov
mov
bnd
fs
std
pop
and
sub
sub
xchg
sbb
dec
cmpsb
repnz
inc
sahf
push
or
sub
cmpsl
sub
jno
pop
push
pop
xor
mov
adc
cmp
ficompl
leave
sbbl
jbe
push
mov
mov
sub
jnp
cmp
inc
pop
insb
fildl
and
cmp
dec
daa
lea
ja
adc
mov
mov
pusha
mov
jbe
insb
iret
decb
inc
or
dec
mov
ds
cltd
inc
mov
lahf
pushf
mov
inc
cmp
adc
subb
xchg
mov
iret
inc
dec
mov
pop
lods
push
xchg
pop
mov
add
xor
sub
lds
mov
iret
repnz
jns
mov
lock
and
icebp
fmulp
push
fmuls
cmpsb
sar
mov
cmpsb
aam
pop
jnp
and
xchg
out
test
mov
adc
push
adc
aaa
xchg
inc
mov
cmp
dec
push
aam
ja
cld
xchg
out
ja
pop
inc
int3
add
dec
shr
inc
push
fld
push
daa
xchg
sub
fists
push
repnz
imulb
test
xchg
push
sub
sub
cmp
mov
adc
lret
adcb
sbb
mov
inc
dec
adc
push
jmp
jp
xchg
imul
ret
clc
dec
in
jle
into
loope
std
mov
adc
in
jecxz
rcll
stos
divb
lods
xor
xor
jno
sbb
xchg
frstor
test
mov
sbb
loope
push
out
cli
or
rorb
fsubrs
pop
ret
into
out
add
dec
fs
push
cmp
call
sbb
outsl
jb
cmp
imull
int3
cli
adc
push
xor
xchg
xor
sbb
xor
cwtl
add
cmp
subb
pop
jae
ret
mov
aad
lods
je
xchg
pop
cmpsb
push
pop
xor
in
sub
lds
bound
mov
fucomi
sbb
pop
cmp
push
adc
mov
sahf
jb
xchg
cmp
sbb
lods
in
leave
cmp
in
stos
sbb
fadd
loopne
int3
clc
inc
jmp
cmc
jnp
cmpsb
negl
add
js
jno
sub
int
xor
pop
adc
stc
scas
bound
test
jae
xchg
movsb
add
or
xchg
push
sub
or
nop
jecxz
repnz
inc
sbb
fs
les
movsb
jo
repnz
aas
in
test
inc
ficompl
pop
int
add
inc
cmp
inc
sbb
aaa
pop
fidivrl
and
mov
aam
fsubl
icebp
push
xor
cmp
jns
pop
pop
xor
fistps
clc
inc
mov
aad
iret
cmp
shll
push
jecxz
fidivrl
in
aaa
test
mov
jnp
sub
iret
or
adc
int3
loop
lods
insl
popf
cld
xor
aaa
jmp
inc
mov
int3
loope
pusha
in
mov
add
mov
sbb
mov
test
outsb
ret
adc
loop
jne
icebp
mov
mov
pop
test
push
inc
fcoms
xor
outsb
sub
enter
fmull
outsb
cmpsb
inc
fstpt
pop
inc
lahf
adc
or
mov
stos
jbe
lret
lahf
sbb
outsl
sbb
cmc
stc
or
lcall
movsb
insl
loope
aad
jnp
fmul
out
aaa
xchg
inc
cmpsl
imul
sub
mov
es
pop
sbb
jmp
adc
ds
cmp
lea
shlb
pop
adc
jnp,pn
ror
lods
loope
es
imul
fldl
out
scas
test
pop
mov
shll
jbe
adc
add
or
fcmovnu
push
inc
out
frstor
sub
xor
cmpsl
xchg
xchg
dec
imul
sarb
in
mov
imul
out
push
pop
dec
sahf
push
xor
adc
jo
jo
aas
dec
sbb
xchg
mov
lcall
mov
movsb
jnp
pop
xchg
add
outsb
pop
out
mov
mov
stc
stos
jl
popf
stc
add
outsb
and
mov
mov
adc
fxch
gs
sbb
imul
mov
out
test
xchg
adc
pop
pop
pop
pop
sbb
push
push
sbbb
in
xchg
mov
insb
loop
mov
imul
scas
sbb
dec
dec
or
fwait
in
cmp
lcall
mov
xor
mov
cmpsl
fadds
inc
lret
out
inc
pop
cmp
cmp
inc
mov
scas
and
inc
mov
sub
hlt
pushf
mov
lock
repnz
aam
inc
mov
mov
daa
aaa
das
xchg
int
test
or
pop
sbb
mov
sbbl
push
sub
jmp
repnz
call
pop
inc
and
sbb
dec
mov
mov
out
and
sub
or
movhlps
rorl
add
aam
fisubs
mov
fucomi
addr16
lds
jnp
xchg
scas
and
mov
push
mov
out
inc
inc
leave
into
mov
sub
push
mov
jbe
xor
jae
adc
ret
jge
or
xor
ret
mov
add
cmp
test
jecxz
or
pop
mov
ljmp
mov
xor
add
daa
fidivrs
hlt
dec
cmp
jo
and
ret
into
pop
aad
mov
or
lahf
scas
cwtl
dec
inc
pop
xchg
jle
iret
push
xchg
sub
and
inc
movsb
cmp
sub
repz
push
inc
sub
mov
or
xrelease
jmp
push
aam
imul
and
sbb
or
mov
adc
push
add
lcall
outsl
cwtl
in
stc
mov
shlb
xchg
pop
ds
push
pop
mov
in
push
rorl
cmp
jge
cmc
repnz
daa
xchg
or
aam
addr16
sbb
in
fucomip
pop
sahf
xchg
sbb
jp
mov
xchg
fimull
adcl
cmp
cmp
pop
sbb
mov
sub
mov
add
repz
sahf
pushf
cmp
sub
jl
or
cs
std
shlb
cld
cltd
int
add
adc
mov
insl
jb,pn
insb
shlb
inc
negl
in
andl
das
push
xchg
fidivl
pusha
jg
inc
push
sub
mov
rclb
xlat
lea
push
icebp
iret
mov
and
cltd
dec
outsb
int
cmc
mov
popf
in
adc
je
xchg
and
xchg
dec
ljmp
stos
fwait
xchg
mov
rolb
rorb
mov
jo
lods
aas
bound
cmp
push
sahf
or
push
shrl
lds
mov
fistpl
or
push
pop
out
mov
cli
fldl2t
movq
or
pop
mov
loop
push
mov
inc
sub
fbld
cmc
jg
fdivp
popa
int
dec
pop
test
xor
fyl2xp1
xor
cmp
sarb
loope
lea
cmp
das
jb
inc
jg
or
sbbb
or
xchg
testb
lds
pop
ror
movsb
mov
sbb
loopne
adc
andl
btc
add
ja
jecxz
sarb
mov
sbb
xor
movsb
mov
sub
test
notb
movsl
cmpsb
jmp
mov
push
imul
xor
lea
into
scas
pop
sub
pop
in
push
hlt
push
push
lock
cmpsb
pop
iret
scas
clc
subl
aad
push
arpl
jo
xchg
in
xchg
jecxz
mov
xchg
inc
loop
cli
push
in
xchg
ret
bound
jge
inc
leave
push
xchg
pop
cmp
sub
mov
ret
dec
pop
push
push
icebp
dec
out
jbe
pop
cs
cli
pusha
hlt
push
pushf
xchg
push
sbb
loop
loope
mov
inc
push
pop
inc
push
pop
mov
pushf
add
cmp
adc
jo
mov
sbb
pop
out
mov
mulb
jae
jg
jge
pop
xchg
fistpll
aas
xchg
rolb
jnp
js
dec
hlt
mov
pop
or
jo
sub
inc
jge
sub
adc
sbb
testb
xor
xchg
xchg
add
cmovl
sub
add
push
fs
dec
lds
jl
fmuls
mov
dec
fdivr
pushf
aam
pushf
arpl
pop
sub
inc
cmp
rcr
mov
adc
dec
mov
xchg
inc
add
xchg
xchg
cmp
test
adc
rorl
ljmp
repz
sarb
shr
jge
and
pop
xor
sbb
inc
cli
push
xchg
sub
mov
aas
out
mulb
mov
lods
fcoml
orl
jle
inc
mov
xchg
mov
dec
fstps
mov
cmc
sub
push
cmp
xchg
gs
stos
outsb
sub
leave
pop
inc
cwtl
lret
daa
cmpsl
fldl
arpl
dec
jle
or
dec
xor
fldenv
pop
lcall
gs
fimull
xchg
mov
xchg
pop
into
notl
ret
aaa
hlt
mov
incl
shrb
push
xchg
fldcw
adc
scas
push
out
mov
negb
mov
mov
jns
mov
movsl
xchg
xchg
mov
push
jecxz
je
push
inc
sbb
out
imul
punpckhbw
push
lods
push
enter
mov
jge
xor
xor
enter
jns
aad
cmp
std
in
dec
inc
out
loop
push
inc
rorl
pop
lahf
xchg
or
inc
icebp
pop
mov
xor
insb
add
xor
pop
inc
fcomp
gs
inc
sbb
test
dec
inc
outsl
dec
in
cmp
add
adc
jg
scas
xchg
pop
mov
fmull
mov
inc
cltd
inc
outsb
les
pushf
pusha
add
pop
adc
lcall
push
daa
push
adc
cld
icebp
int
adc
mov
cmp
in
jns
jbe
adc
add
movsb
icebp
hlt
rorl
xor
leave
inc
or
stc
notl
arpl
add
cmp
lret
dec
or
dec
sub
xchg
lods
out
xor
outsl
sbb
insl
aad
push
cmpsl
cltd
dec
cwtl
mov
pop
push
iret
lea
mov
sahf
outsb
jl
push
cmp
popa
stc
jl
xor
cmp
ds
mov
sbb
sub
inc
adcb
mov
add
push
in
lret
lret
mov
jle
in
push
jae
icebp
fisttps
sti
xor
orl
mov
jbe
imul
fcoms
push
cmc
aam
fistpll
or
mov
sbb
sbb
dec
fdivr
sub
outsl
scas
insl
jns
ret
fcomps
pop
xor
xchg
loop
rorl
push
jno
pmuludq
cmpsl
cmp
ss
cmpsl
jp,pn
pop
cmpsb
mov
stos
mov
sub
in
stc
adc
je
mov
std
xchg
push
mov
pop
jo
fldenv
js
repz
xchg
stos
cmpsl
jae
jmp
clc
ret
js
into
mov
xchg
push
add
sete
mov
imul
xor
fidivl
popf
stos
inc
jbe
cwtl
mov
fwait
jge
iret
out
sti
xorl
into
add
dec
loop
icebp
add
xor
dec
loop
call
ror
xor
les
shrl
aam
cmp
movsl
and
xchg
jo
rcl
scas
cmpsl
nop
loopne
imul
imul
icebp
cmpsl
out
movsl
stos
jg
leave
imul
mov
lahf
mov
xor
adc
and
add
into
call
fbstp
jmp
push
dec
clc
sbb
les
incl
in
pop
cmpb
xor
shrb
rcrl
stos
xchg
lret
mov
push
dec
mov
xor
stc
addr16
xchg
inc
cs
imul
fisttpl
or
popa
inc
daa
outsb
and
outsb
mov
pop
lret
lret
out
cmpb
fwait
mov
xchg
imul
test
add
push
jl
add
ror
mov
push
in
stos
dec
std
and
loopne
jo
icebp
mov
adc
inc
mov
popa
add
xor
ficomps
cld
aam
and
pop
gs
sub
xlat
push
mov
sub
push
out
and
pop
mov
outsl
nop
in
pop
xorl
jg
xorb
gs
sbb
rcrb
adc
arpl
std
mov
stc
xlat
data16
pop
in
std
js
in
fnsave
ljmp
xchg
out
push
and
lea
dec
cltd
subb
jb
dec
mov
jne
fists
xchg
movl
in
push
idivl
mov
fisubl
jmp
pop
jge
fisubrl
fld
outsb
xchg
push
scas
push
cmpsb
mov
pop
xchg
aam
push
xor
aas
aaa
push
mov
lods
lcall
pop
adc
push
pop
out
out
jl
pop
sbbb
loop
rcll
imul
mov
lock
or
fdivrl
lcall
or
cld
shll
inc
xor
out
lock
int
push
mov
xchg
insl
jle
mov
nop
xchg
push
jg
fldcw
dec
xor
pop
or
and
movsl
dec
sbb
repz
jno
imul
loopne
jo
xchg
lock
pop
fadds
jge
ret
add
fmulp
jns
cmpsl
inc
test
mov
cmpsl
ret
shll
daa
sti
sbb
ds
test
sahf
out
xor
dec
neg
push
pop
divl
inc
push
prefetchw
jecxz
arpl
fbld
jmp
repz
ljmp
mov
lods
decb
mov
or
push
repnz
sub
adc
sbb
push
jge
add
in
cli
xor
mov
dec
cmp
movb
cld
addr16
sbb
pop
inc
in
and
pop
add
xor
push
pop
std
and
pusha
pop
pop
clc
inc
pushf
xchg
enter
sub
xor
cmp
xorb
push
xor
pushf
or
xchg
aas
mov
sub
cmpsb
movsl
or
insb
push
inc
ljmp
loop
push
daa
loop
stos
fistpl
les
or
ss
xor
idivb
mov
pop
fs
hlt
fsubs
jo
das
mov
test
inc
dec
pop
cmp
inc
jmp
mov
jmp
pop
push
push
sbb
movsb
jns
leave
stc
fimuls
add
mov
repnz
xchg
jp
and
or
cs
and
jnp
jnp
jg
frstor
out
add
shlb
sbbl
jns
leave
outsb
xchg
add
lods
jg
jae
cmc
lods
addr16
repz
inc
jle
bound
mov
fwait
xchg
das
cmpsb
or
xchg
xchg
add
xor
pop
jo
sbb
mov
push
mov
call
imul
in
dec
ror
shll
mov
adcl
push
movsb
xchg
jbe
mov
and
dec
out
xchg
mov
xlat
jne
in
lret
jns
and
ret
lret
je
cmp
cmp
movsb
xchg
or
add
xchg
sbb
std
leave
lds
jmp
cwtl
inc
lods
es
xchg
int3
sbb
push
cwtl
out
mov
sub
inc
out
push
dec
scas
jnp
xchg
inc
fmuls
jne
add
ret
pop
mov
or
outsb
ja
jle
pop
cld
jle
insb
adc
dec
lret
inc
xor
mov
mov
xchg
add
inc
lret
pop
xor
inc
scas
popf
fdiv
jl
cmp
or
mov
aaa
push
mov
in
inc
mov
lret
leave
or
js
loope
cmc
sub
adcl
popf
decl
fstpl
jno
daa
stos
cld
push
adc
aam
or
mov
rcr
push
sbb
adc
sar
pop
mov
test
aaa
push
dec
cld
nop
lock
jmp
das
inc
and
push
xchg
inc
add
jmp
pop
clc
push
sub
xor
and
jmp
cmp
inc
test
lret
sub
lock
cltd
dec
xchg
jmp
test
push
flds
shrl
push
pop
out
push
cmpsb
pop
cli
adc
mov
or
mov
cmp
dec
mov
push
test
inc
icebp
ja
sub
das
rcll
mov
insb
std
mov
pop
inc
sarl
repz
rclb
or
and
lods
adc
push
iret
mov
ror
pusha
xchg
and
into
sahf
sbb
mov
jecxz
lds
jb
and
mov
jo
add
cld
out
inc
xor
ja
cmpsb
je
xor
lods
cmp
jmp
not
push
dec
inc
xlat
sub
testb
sbb
push
add
push
push
fcoms
imul
aas
push
or
pushf
cmpsb
data16
icebp
aam
pushf
inc
sub
iret
jno
mov
adc
dec
lods
push
mov
pop
cmp
add
outsl
fnclex
das
add
push
sub
sahf
hlt
dec
inc
int
jmp
cmp
sahf
mov
xchg
cwtl
std
mov
js
pop
sbb
jnp
ljmp
repnz
arpl
push
or
enter
dec
cli
sub
inc
mov
lcall
movl
mov
mov
sub
sti
inc
shlb
push
sub
arpl
sbb
insl
fadd
sub
imulb
jne
or
pop
insl
add
and
popa
test
inc
inc
or
push
mov
nop
arpl
xchg
stos
les
clc
cmp
shl
sarb
ljmp
sti
cli
and
into
push
das
mov
pop
inc
dec
clc
in
push
ds
divb
iret
push
inc
scas
adc
push
or
push
mov
pop
popa
push
orl
lock
fisubrl
scas
cmp
xchg
jge
push
fists
dec
jecxz
lds
jae
call
in
push
xchg
in
or
xorl
sahf
jp
add
xchg
cmp
daa
push
cs
out
jmp
mov
test
movsb
jae
jbe
xchg
xchg
sbb
xchg
mov
fs
shlb
out
in
mov
aaa
aaa
loope
lcall
mov
pavgb
add
and
clc
and
inc
std
and
mov
das
aaa
sub
sbb
sbb
jmp
fiadds
cs
ljmp
aad
dec
xchg
push
outsl
test
cmp
fists
push
xchg
imul
sbb
or
pop
sti
xor
or
dec
rcrb
adc
mov
pop
or
loopne
mov
mov
jmp
jl
movsb
dec
sbb
xorb
push
pushf
cmpsb
sbb
adc
test
insl
lds
jb
loope
pop
movsl
dec
out
and
mov
ret
sub
les
cmpsb
lods
xchg
pop
push
divl
mov
xchg
lcall
adc
repz
leave
cmp
adc
dec
scas
jo
fidivs
popl
xor
shll
lods
push
jg
pop
mov
xor
xchg
mov
jp
movsb
push
dec
sarb
sub
push
and
or
stc
nop
xor
pop
test
lcall
jg
fs
adc
dec
inc
lret
jle
cld
cmp
pop
pop
in
popl
cmp
movsl
push
mov
pusha
dec
and
adc
xchg
sbb
mov
cltd
lea
sub
inc
incl
jns
push
iret
testb
repz
dec
das
mov
mov
cmp
mov
mov
rcrb
mov
mov
loop
and
outsl
sarl
mov
jno
enter
repnz
mov
lds
scas
test
arpl
adc
neg
inc
in
cmp
mov
cmp
sti
daa
mov
out
cmc
pop
fldl
fcompl
mov
sbb
mov
je
jmp
scas
push
adc
scas
adc
out
pop
loope
sti
fadds
jae
decl
jg
pop
xchg
jle
cmp
sbb
rcl
iret
lret
jnp
aad
sti
outsl
push
lods
jnp
mov
movsb
sbb
jns
mov
dec
xchg
and
pop
gs
in
dec
push
mov
mov
jbe
dec
inc
mull
add
mov
js
jne
std
mov
fcoml
out
mov
lds
adc
sbb
fdivl
mov
inc
ret
in
lcall
cmp
insl
fdivr
push
mov
adc
mov
or
sbb
cmp
out
adc
and
das
sub
jp
mov
fidivs
push
loope
lock
sub
mov
add
neg
sbb
lods
inc
pop
fstpt
push
mov
adc
lock
loope
sbb
or
dec
push
and
cmp
in
mov
mov
bsf
mov
jmp
idiv
and
pop
cmp
pop
xor
mov
loope
xchg
mov
mov
test
hlt
jb
xorb
inc
aas
call
pop
in
sbbl
cmp
adc
repnz
loopne
xor
adc
push
fldt
adc
xchg
or
sub
hlt
dec
js
push
or
pusha
xchg
mov
mov
clc
pop
cmp
into
jmp
lods
clc
xchg
daa
xchg
or
fisubs
cmp
jg
pop
push
mov
in
movsl
js
inc
imul
out
push
mov
scas
pop
sahf
enter
test
mov
inc
nop
pop
jb
call
inc
dec
xor
aad
mov
xchg
lret
or
outsl
scas
adc
enter
icebp
int
cltd
inc
cltd
fs
and
add
repnz
dec
sbb
rorl
sbb
cwtl
subb
pop
xor
or
cwtl
push
or
dec
inc
mov
gs
fbstp
shlb
jl
imul
lret
and
pushf
push
movsb
xor
sarb
add
nop
scas
nop
lds
push
mov
gs
aad
jne
clc
mov
lahf
xor
pop
in
jns
dec
in
in
xchg
pop
sub
xchg
ss
sub
in
stc
pop
das
jne
in
ss
insb
fldt
sub
mov
aas
xor
mov
mov
rcl
iret
faddl
stos
add
mov
negl
imul
push
xor
icebp
lret
xor
mov
dec
xor
or
das
jne
sbb
movsb
divl
sub
out
jno
int3
adc
add
pop
dec
orl
divl
les
adc
push
and
mov
jecxz
jecxz
push
cmp
fs
rcr
out
or
jge
xchg
pop
mov
sbb
xchg
sti
jo
cmc
push
fstpl
adc
pop
ret
hlt
inc
adc
sbb
jp
cmp
mov
cmp
xchg
mov
adc
leave
xchg
sbb
fcomps
sbb
or
or
pusha
adc
fnsave
adc
psrld
pop
jg
ja
dec
out
xchg
pop
adc
inc
or
sub
push
push
outsb
addb
push
ret
jle
add
adc
cmpsb
fimull
inc
push
cmpsb
ja
sbb
cli
scas
push
in
jnp
stos
xchg
xchg
popf
pop
mov
mov
js
lods
test
xchg
inc
subb
lock
add
add
sub
cmp
push
jne
out
mov
out
fwait
push
movd
scas
pop
ret
mov
adc
ds
aaa
cltd
daa
pop
xor
jne
repz
mov
add
cmp
xor
sub
dec
fimuls
dec
lods
stos
rcl
fwait
gs
js
sub
inc
int3
out
cmp
es
rol
pop
sub
dec
sub
cmp
popa
in
faddl
imul
das
mov
lock
ljmp
lret
fsubr
out
cld
stos
push
lahf
je
lret
shr
es
sub
xchg
loope
pop
xchg
dec
fmull
testb
inc
lahf
in
jle
mov
aad
lret
fwait
ss
xor
jge
pop
es
cmp
pop
adc
mov
ljmp
ret
cmp
gs
jae
daa
fdivrs
lock
outsl
inc
lds
pushf
dec
mov
je
je
jbe
fistps
pop
mov
inc
and
div
in
sub
jbe
jg
ret
mov
jno
rclb
xchg
insl
xchg
mov
mov
cmc
pop
jmp
adc
fwait
subl
or
fnsave
xor
dec
ret
mov
test
cmp
or
nop
lds
subb
iret
push
ljmp
into
dec
shlb
cmp
mov
sub
push
xor
loope
cmpsl
mov
scas
cmp
jne
in
xchg
sub
scas
adc
aas
inc
jg
pop
adc
enter
cmp
test
mov
push
and
dec
xor
pop
popl
sbb
mov
fistpl
sbb
add
les
gs
popa
cs
xchg
mov
jo
push
push
stc
sub
or
lret
xor
xor
xchg
pop
mov
xor
add
mov
sti
sbb
aad
leave
leave
sub
and
push
adc
mov
fadds
adc
xchg
icebp
mov
dec
lahf
repz
cmp
mov
stc
push
push
push
jg
std
dec
pop
pushf
and
ret
std
jbe
sbb
aam
jge
mov
imul
push
shlb
mov
dec
push
xor
movsb
sub
xor
mov
mov
mov
pop
bound
out
cli
push
in
stos
incb
xchg
mov
addr16
jge
xor
scas
push
mov
popf
xchg
daa
rorb
jae
stos
adc
or
orl
mov
mov
mov
or
inc
clc
aad
das
push
rolb
cwtl
hlt
lods
sbb
clc
mov
mov
fisubrl
jae
loope
mov
fisubrs
test
sub
into
mov
sbb
xchg
inc
outsl
jg
xchg
aas
notb
mov
out
jl
scas
pushf
sbb
iret
jg
dec
mov
xorb
cmpsb
jle
out
mov
aad
jbe
cmp
adc
jmp
push
imul
sar
aas
dec
mov
and
pop
arpl
mov
shlb
adc
pop
enter
subl
pop
jbe
mov
clc
pop
divl
mov
lock
leave
add
cmpsb
pusha
cmp
cmc
lahf
cmp
pop
push
mov
xor
pop
arpl
hlt
out
sbb
ret
cmp
mov
sub
push
aam
rcll
add
sub
dec
cmpb
mov
js
fsubrs
jno
lods
jp
pushf
rcl
add
sahf
mov
movsb
pop
and
leave
mov
mov
push
pop
adc
mov
mov
loope
mov
les
cmpsl
adc
inc
dec
or
mov
push
mov
add
scas
xchg
fistl
xchg
push
push
shrl
jp
fimuls
movsl
lods
mov
ja
mov
loope
daa
imul
lahf
imul
out
inc
aam
dec
out
les
push
push
mov
push
repnz
loop
lret
lds
decl
mov
shll
mov
cmp
stc
sub
nop
fstpt
js
dec
cmp
lret
das
jne
movsb
mov
jno
pop
jno
dec
std
iret
push
lods
mov
and
ja
adc
push
sti
scas
mov
clc
movsl
push
pop
loope
adcl
lea
ror
xor
movsb
negb
mov
push
mov
leave
stos
mov
loopne
int3
aam
mov
leave
adc
sub
xchg
pmuludq
in
movsb
outsl
cmp
and
xchg
sub
cltd
push
add
mov
cmpsl
cmp
dec
cmp
and
adc
xchg
sarl
cwtl
in
xor
mov
das
add
js
rcrl
sbb
roll
sub
lcall
inc
lds
push
mov
loopne
fwait
sti
and
cmpsb
sbb
dec
xchg
insl
insl
cmpsl
push
xor
adc
mov
sub
adc
stc
in
pop
mov
sub
mov
push
loope
repz
push
unpcklps
and
xor
fcompl
jo
mov
pop
in
and
mov
daa
jle
sub
add
or
dec
gs
cmpsl
insl
mov
cmpsl
popl
out
push
xchg
icebp
add
scas
adc
loope
lock
icebp
and
cmp
nop
pop
loopne
test
leave
sub
and
or
cli
push
jg
adc
es
xchg
mov
cmc
jnp
adc
or
int3
sbb
dec
xchg
xor
cs
jns
jb
popa
mov
repz
add
sbb
dec
iret
mov
jns
pop
sbb
cli
sbb
addr16
jae
inc
ret
mov
psrad
xor
mov
popa
push
jg
lea
mov
or
mov
data16
adcl
iret
add
ret
inc
fistpl
pop
sub
jo
cmc
jne
lahf
outsb
inc
push
pop
cmp
adc
pop
mov
repnz
add
test
dec
lcall
pop
dec
insl
or
mov
pushf
mov
jle
out
dec
or
push
ss
daa
push
aad
jno
mov
mov
dec
je
out
and
js
test
int3
mov
mov
inc
das
pop
sub
hlt
or
mov
out
lret
and
pop
pop
int3
les
inc
and
fldenv
enter
or
cs
jae
mov
or
jb
lahf
testl
in
add
pop
sbb
or
inc
pop
scas
sub
and
or
xor
lea
mov
aam
mov
leave
mov
jb
rcll
insb
xchg
ret
test
outsl
pop
arpl
test
adc
mov
cmc
push
push
lea
dec
ds
mov
sub
pop
cmp
xchg
pop
push
and
xorb
into
add
aam
push
aad
clc
push
daa
and
sbbb
xor
test
pop
testb
sbb
cwtl
sbb
mov
sahf
fistpll
push
mov
stc
xchg
sbb
sbb
int
imul
jo
bswap
xchg
outsl
mov
xor
add
and
data16
xor
xchg
or
add
push
data16
inc
dec
mov
pop
pusha
aas
addr16
mov
int3
mov
push
sub
test
mov
xor
jne
loopne
push
jns
jbe
add
sbb
xchg
in
dec
addr16
insl
mov
lea
imul
popf
xor
cmp
idiv
je
mov
stc
sbb
pop
inc
repnz
aaa
mov
lcall
in
sbb
xchg
xchg
je
cltd
adcl
bound
jg
insb
cmp
pop
in
mov
inc
sbb
mov
ret
aaa
in
or
dec
test
pop
faddp
jbe
dec
jo
lds
add
xor
loop
lret
and
xchg
mov
cs
int3
les
pop
jno
sbb
mov
mov
in
outsb
lds
mov
pop
cmp
sbb
mov
in
xchg
loope
adc
xorl
cmp
ret
and
sub
shrb
sub
xchg
movsb
jb
inc
subl
mov
cmpsb
out
push
out
and
sbb
push
push
iret
aaa
rclb
sbb
pop
adc
xchg
inc
xor
mov
test
cmpsb
int3
jp
mov
mov
repz
cli
mov
iret
into
leave
gs
sbb
cld
mov
test
sub
lock
add
bound
or
ljmp
push
fdivr
fidivrs
add
test
rcll
jmp
sub
adc
mov
loop
imul
xchg
pop
cmpsb
xchg
pop
fbld
add
call
cwtl
decb
aaa
jnp
mov
bound
ret
std
mov
shl
sti
lods
cmp
sbb
push
jne
push
sub
jecxz
imul
bound
cwtl
mov
mov
jmp
mov
mov
stc
movl
xor
jge
test
pop
sub
lret
decb
xchg
and
jnp
imul
dec
stos
sarb
imul
and
repnz
push
std
inc
ds
jg
and
push
icebp
sbbl
mov
add
sub
test
jecxz
cmp
sub
divb
inc
and
or
lods
mov
sbb
xor
push
mov
mov
xor
lods
sbb
or
popa
sub
mov
mov
add
jbe
icebp
mov
repnz
les
jnp
dec
push
stos
and
movb
arpl
xlat
xor
mov
lock
mov
in
dec
add
dec
lods
test
loop
adc
jne
hlt
push
popa
int
enter
pushf
cmpsb
mov
sti
outsb
pop
aad
stc
cmp
mov
inc
ja
or
mulb
pop
rcr
in
sbb
ja
pop
xchg
xchg
and
enter
filds
pushf
dec
lea
repnz
xchg
sarl
sub
fwait
push
mov
jle
pop
cmp
flds
test
sub
inc
push
lock
pop
sarl
cwtl
xchg
adc
mov
fcompl
mov
jle
and
mov
mov
fsts
jno
into
mov
fsubs
inc
push
aaa
fistl
xchg
mov
adc
and
pop
mov
out
rcr
outsl
testl
neg
sbb
inc
incb
inc
sub
incb
sub
lea
ret
stc
sbb
mov
inc
lods
xor
mov
cmp
push
out
je
push
sbb
or
add
mov
out
int3
mov
sbb
mov
push
lods
jecxz
ret
mov
out
pop
ret
arpl
test
repnz
inc
lahf
sarl
ss
out
pop
repz
das
decl
shlb
xchg
movsl
lret
imul
clc
aas
imul
out
pop
sahf
jmp
loope
out
and
lods
push
mov
shrb
cmpsb
int
aad
arpl
mov
in
test
mov
jns
pop
pop
xor
insb
out
and
adc
mov
cmp
bound
sbb
cmp
sub
push
rcrl
mov
outsl
pushl
addr16
sbb
pop
adc
call
mov
add
call
sbb
in
lods
xor
outsb
inc
inc
aaa
test
repz
sub
es
inc
loopne
fstl
inc
push
inc
mov
pop
push
pop
or
sub
jae
jg
testl
adc
pop
mov
ret
xchg
or
inc
jae
cli
std
xchg
cmp
jb
shr
push
loopne
lds
xchg
filds
cld
push
inc
aad
xchg
push
test
xchg
cli
mov
roll
dec
pushf
in
mov
fisubl
mov
stc
sub
in
lret
shll
mov
push
arpl
fstps
lods
push
sbb
sbb
pusha
shlb
lret
xchg
clc
dec
mov
add
or
push
pop
outsb
nop
add
lahf
clc
fmull
test
gs
push
push
mov
mov
ret
lds
pop
pop
int
loopne
push
and
push
std
fcoms
jnp
pusha
mov
push
or
iret
mov
xchg
xor
divl
and
mov
idivb
jo
outsb
inc
xchg
stos
xchg
mov
mov
adc
insl
mov
dec
lret
mov
shrl
pop
inc
inc
xchg
popf
xor
in
into
pushf
lods
mov
push
pop
dec
fiadds
lahf
inc
stc
jns
add
adc
mov
pop
xor
stos
push
jne
in
push
fstps
sahf
dec
out
insb
sti
test
push
pop
subb
mov
hlt
addb
jne
aad
xchg
jnp
or
cs
shlb
sahf
lret
cmp
fwait
mov
dec
pushf
insb
mov
adc
jl
inc
and
inc
leave
cs
sub
adc
dec
andl
cmpl
das
int
adc
mov
xor
ljmp
jmp
repz
push
or
lahf
jnp
stc
mov
fs
addr16
push
test
cwtl
aas
mov
ja
jne
mov
cs
pop
xchg
inc
xchg
aad
repz
scas
dec
adc
cltd
cwtl
jne
xor
add
adc
xor
ss
mov
cld
add
lret
movlps
into
inc
in
enter
cmpb
mov
shlb
xchg
and
and
mov
mov
mov
test
mov
es
adc
push
dec
inc
pop
sub
mov
pushf
imul
lcall
fistpll
pop
addb
xchg
push
mov
fisubs
xor
addr16
clc
or
lcall
fstps
sbb
dec
test
mov
aaa
dec
and
pop
adc
pushf
std
lods
sbb
sti
or
add
mov
dec
mov
js
fwait
and
or
movsl
xlat
add
push
mov
adc
and
out
dec
xchg
or
aaa
and
adc
and
out
dec
bound
leave
adc
sbb
sti
mov
inc
jae
sbb
popf
cmp
cmc
loopne
inc
lock
lods
mov
rcr
add
dec
xchg
sbb
sub
or
cmp
or
mov
mov
cwtl
mov
and
jp
jno
aas
add
pop
xchg
inc
mov
repz
jl
mov
and
xchg
jl
outsl
aaa
sub
jo
or
filds
lcall
fwait
dec
pusha
cwtl
pusha
lds
cwtl
jmp
pop
movsb
adc
out
cmp
jnp
cs
sbb
jnp
pop
test
push
push
mov
adc
jl
pop
addr16
cmp
pop
out
test
sub
jne
push
mov
enter
mov
popf
and
mov
add
sub
mov
push
or
arpl
and
cmp
jmp
hlt
jmp
icebp
stc
pushf
and
pop
iret
mov
fcoml
hlt
scas
mov
xchg
in
fucom
xor
out
cmp
pushf
fmuls
mov
test
add
out
insb
cwtl
sbb
and
xor
push
lods
rcll
push
clc
sahf
movsl
test
adc
mov
insl
adc
and
cmc
in
test
nop
pusha
dec
leave
sarl
pop
test
lods
aas
loop
enter
dec
aad
mov
jecxz
enter
or
pop
mov
and
pushf
mov
adc
clc
xchg
pop
jno
mov
popf
in
es
outsl
xchg
sbb
mov
jae
jge
pop
ficompl
in
aam
mov
gs
aas
mov
xchg
les
ror
pop
fdivrl
clc
ror
adc
jmp
lds
and
mov
popf
out
movsl
stc
jecxz
cmp
push
iret
stos
cmpsb
rcrl
jno
jbe
mov
in
cmp
fsubl
sub
xchg
add
cmp
imul
movsl
sub
repz
inc
push
test
cmpl
icebp
movsb
rcrl
in
push
add
xchg
test
outsl
shr
call
mov
jecxz
cmp
cmp
mov
aaa
mov
cmp
movsl
push
pusha
in
fildl
ss
nop
lret
iret
jl
shlb
pop
jle
stc
cltd
cltd
gs
decb
test
push
xabort
test
hlt
daa
js
cld
into
cli
add
enter
dec
loopne
mov
enter
xchg
push
mov
int
xchg
mov
pop
loope
sub
jge
das
mov
dec
int
inc
imul
jl
adc
bnd
test
add
sub
or
or
sub
and
gs
sub
insl
ja
dec
mov
flds
icebp
inc
testl
or
pop
inc
lahf
movsb
js
cmp
ret
in
xchg
sbb
or
add
decb
dec
lret
in
add
pushf
pop
lret
jb
sbb
sub
jns
push
xor
shlb
adc
adc
jmp
push
in
mov
out
in
out
add
or
hlt
mov
andb
adc
and
sub
mov
test
mov
insb
adc
clc
or
mov
sub
lahf
test
mov
mov
fwait
out
sub
subl
jnp
inc
jl
cmc
push
aas
sub
dec
rol
test
sub
inc
inc
aas
js
pop
sub
mov
es
mov
scas
adc
xor
pusha
mov
icebp
xchg
dec
aas
add
lret
imul
sub
movsl
inc
ss
sbb
xor
sarb
test
ljmp
testb
out
pop
sbb
ds
sarb
iret
cmp
pushf
dec
test
enter
shll
cmp
and
or
insl
rcr
xor
movsl
mov
mul
int
inc
and
pop
in
leave
fnsave
xchg
pop
add
mov
xor
dec
pop
mov
ret
xchg
mov
cmpsl
mull
jp
mov
sbb
lcall
jb
pop
sahf
jbe
test
cmp
dec
shlb
loopne
add
add
into
pop
mov
aam
out
xchg
xorb
shlb
pop
mov
int
jmp
xor
mov
cmp
es
cld
ljmp
push
insl
test
push
popf
insb
ds
cli
loop
aaa
mov
mov
mov
ss
sbb
sbb
fwait
sbb
sbb
push
movsb
xchg
out
jge
xor
fcoms
cmpsl
test
hlt
int3
sub
pusha
lods
in
add
fcomip
ret
inc
xchg
xlat
cwtl
mov
or
pop
ds
mov
sbb
sbb
cwtl
push
jae
out
mov
cwtl
jae
sub
xchg
jecxz
mov
xchg
push
cli
cmp
and
inc
xchg
push
lods
and
bound
subl
out
out
cmp
xchg
repnz
inc
cwtl
or
lcall
fidivrs
push
jnp
pop
push
mov
cs
push
pop
aad
fnstcw
dec
sub
inc
cmc
lret
testb
push
insl
add
repnz
inc
xor
in
mov
cmp
cltd
mov
ficomps
pop
sbb
add
mov
or
lret
movsl
xchg
add
sbb
ds
and
jne
test
mov
push
movl
pusha
push
xor
inc
add
shlb
jb
js
inc
jl
and
dec
push
jmp
mov
push
jbe
mov
adc
xchg
jnp
and
xchg
dec
hlt
mov
add
push
dec
cmpsl
push
mov
rcrl
das
stos
in
scas
and
hlt
ret
stos
xor
sbb
lcall
pop
cmp
jnp
push
inc
xor
movsl
sahf
sub
mov
pop
paddd
push
aas
push
fsubrs
inc
fnsave
jnp
sub
sahf
das
into
mov
pop
dec
ljmp
mov
inc
addb
in
lret
push
adc
andb
push
mov
jno
cmp
mov
xor
mov
add
mov
nop
pop
jb
add
mov
sbb
sub
pop
pop
mov
test
inc
inc
pop
js
dec
fldenv
push
or
or
pusha
jmp
aam
jbe
xchg
inc
and
mov
sar
adc
inc
pusha
adc
sbb
pop
push
push
popl
mov
and
mov
mov
popa
clc
loopne
mov
in
push
adc
push
jno
aad
lock
lret
movsb
or
inc
mov
ret
mov
imul
cwtl
xor
and
lahf
imul
jle
inc
es
aad
cmp
in
mov
test
sti
inc
stos
imul
sar
stos
cs
jns
out
call
mov
fnstsw
inc
sbb
push
push
xor
adc
fcmovb
mov
sub
pop
mov
aas
nop
jne
sti
jo
jae
sbb
push
in
lods
ljmp
mov
jge
sbb
lea
stos
mov
out
and
mov
cmovo
gs
xor
add
mov
jns
push
or
mov
out
xor
out
int3
js
adc
iret
cmp
testb
add
jb
jmp
not
fsubl
adc
fisttps
xchg
jo
mov
sahf
dec
mov
xor
dec
mov
outsb
das
scas
pop
or
inc
and
pop
in
cltd
mulb
inc
mov
mov
js
cli
ljmp
pop
cmp
adc
cltd
ret
or
and
cmp
jnp
mov
insb
inc
sbb
or
xchg
mov
loope
and
sbb
iret
outsb
jl
pop
push
shrb
mov
cwtl
jb
push
inc
js
flds
icebp
mov
mov
popf
xchg
push
std
and
sbb
into
fdivl
or
or
enter
gs
shrb
hlt
push
ret
std
xchg
pusha
push
add
and
push
cmp
xor
and
dec
int
add
mov
cmp
xchg
fbstp
repz
jnp
and
dec
pop
rclb
mov
imul
dec
mov
in
ror
jnp
mov
scas
push
test
sbb
test
loopne
jl
lods
jle
shll
and
js
cmpsl
out
outsl
pop
popa
pusha
out
mov
xor
test
or
test
xorb
mov
ljmp
sub
and
or
outsl
push
lcall
mov
inc
push
das
and
sahf
shll
xchg
mov
push
mov
test
shr
xchg
add
bound
and
and
addr16
mov
xchg
or
mov
lock
xchg
push
fadds
xchg
mov
adc
mov
lods
movsb
pop
fistps
orl
aaa
xor
out
ret
sub
je
cli
xchg
scas
jl
and
adc
xchg
and
dec
movl
cmc
outsb
sbb
cbtw
pop
movsb
cmp
sbbb
mov
aam
xchg
dec
push
jecxz
insb
bound
push
add
ret
pop
mov
out
popa
sbb
out
jo
fwait
ret
xchg
imul
js
fnsave
mov
mov
rcrb
mov
dec
and
shl
mov
mov
loopne,pt
mov
pop
gs
jb
das
sub
icebp
and
mov
xchg
out
rcl
js
xchg
fiaddl
push
divl
test
ficoml
jp
rclb
ss
sbb
aas
xchg
cwtl
mov
out
insl
and
cli
shrl
aam
fs
popf
sbb
insb
dec
lods
movsl
mov
adc
sbb
jb
pusha
dec
dec
out
and
push
sub
std
fnstcw
sahf
inc
xor
sbb
ja
pop
sbb
test
test
aaa
sub
push
mov
sub
sbb
cli
call
dec
sub
push
jno
dec
jle
inc
movsb
jmp
sub
dec
stc
ja
xchg
imul
sbb
mov
fiadds
insb
and
ja
ljmp
pop
adc
in
rcr
add
mov
stos
push
test
jno
or
pop
sub
lods
int
mov
fistps
add
jnp
xor
add
shrb
mov
or
imul
and
jmp
dec
xorl
push
clc
cltd
mov
sbbb
mov
pusha
add
lret
in
lods
in
jmp
hlt
imul
dec
test
cmc
add
mov
or
loopne
lahf
mov
jbe
insb
leave
cmp
std
mov
xor
in
cld
sub
and
in
inc
fs
int3
cltd
enter
into
sbb
rclb
fnstcw
test
jno
jno
or
mov
mov
jg
into
jg
mov
mov
es
push
push
xor
mov
pop
cwtl
sarb
mov
daa
dec
leave
in
or
or
or
or
sbb
dec
cmpsb
xor
sti
cli
mov
and
cwtl
mov
jbe
fisttps
mov
mov
adc
sarl
ror
xchg
stos
adc
sbb
js
add
gs
shrb
adc
stc
popa
les
jg
lret
and
les
dec
scas
call
loopne
mov
dec
xchg
push
ret
jbe,pt
inc
loope
or
sti
fsts
xor
push
jg
loop
idiv
pushf
inc
jg
inc
cmp
inc
cmp
mov
pusha
or
inc
jmp
adc
adc
in
jnp
sbb
pavgb
out
sub
sbb
stos
orl
les
push
xor
mov
sbb
lret
jne
in
mov
adcb
sbb
push
imul
pop
sarl
data16
mov
dec
or
outsl
outsl
sbb
cs
sub
test
mov
or
out
js
sti
test
aas
xlat
sbb
aaa
in
enter
roll
add
add
addb
mov
xlat
sub
xor
subl
sub
shll
out
shll
sub
add
push
aaa
mov
mov
popf
cmc
loopne
and
rcr
add
mov
jecxz
nop
mov
mov
sub
adc
leave
xchg
sub
push
sahf
adc
test
arpl
sub
movsl
inc
push
sub
shll
pusha
ja
lock
nop
jns
fstps
inc
popl
out
enter
lret
dec
cmp
sbb
shrl
in
gs
cmp
shlb
adc
xor
clc
pop
dec
imul
jno
xchg
popf
dec
sbbb
inc
mov
jmp
xchg
mov
jmp
mov
js
or
les
or
fnsave
mov
or
clc
fldpi
mov
lcall
rcl
inc
in
pop
jbe
jl
or
movsl
cmp
cmp
add
testb
pop
movsl
xor
shlb
out
push
out
push
adc
fsubrs
add
adc
addl
out
out
sarl
cli
jno
fnstcw
add
pop
mov
movsb
push
test
lds
mov
gs
jno
pop
outsb
push
sub
addr16
in
sbb
adc
sub
ljmp
scas
arpl
fdivrl
push
mov
movsl
and
sbb
loopne
rcrl
adc
out
imul
cwtl
jp
out
lret
stos
pop
scas
xorb
jmp
adc
inc
cmp
jge
arpl
lods
mov
add
fidivl
add
pshufw
movsl
mov
adc
ljmp
or
xchg
aam
push
aam
mov
xchg
lods
fldenv
xor
pushf
sub
stc
pop
sub
and
pusha
xorl
jo
or
outsb
lods
cmp
sub
cmp
add
inc
das
movsb
sbb
jno
add
dec
push
xor
lock
jecxz
and
insb
jmp
jns
std
lock
pop
sub
sbb
mov
vmovntpd
cltd
jge
jg
cmp
mov
jge
sub
cmp
test
mov
and
ror
lahf
addb
add
sub
ficompl
imul
mov
sbb
fnstcw
adc
xchg
bound
pop
pop
xchg
rol
cmpsl
mov
lea
cmp
inc
jmp
pop
push
push
js
sub
mov
jno
mov
pop
fmull
push
std
xor
call
pop
jno
hlt
mov
fcmovu
or
mov
fidivl
mov
js
xchg
test
xchg
fistpl
add
movsl
xor
push
pop
inc
ss
pop
movsb
jno
sti
subl
pop
or
cmp
push
sbbb
mov
xchg
xor
jno
push
pop
pop
hlt
addr16
jno
jl
ffreep
pushf
mov
jecxz
andl
rcrl
pop
add
popa
data16
out
sbb
adc
xor
mov
xchg
fcoms
xchg
push
mov
into
or
or
loop
ficoms
dec
enter
adc
loop
inc
and
loop
cmp
xchg
inc
imul
mov
sbb
cmpsb
out
mov
std
cmp
popa
jns
cmc
pushf
js
lock
ret
inc
sub
loope
push
std
xor
sub
test
dec
lretw
fdivrl
jns
xchg
sub
nop
mov
cmp
push
into
sub
or
pop
jle
dec
mov
sub
test
scas
sti
dec
xchg
out
out
ss
outsb
jp
push
push
adc
or
push
popl
mov
aas
xlat
aas
add
ja
xor
mov
popf
or
pop
mov
sbb
cmp
popf
jp
xor
test
pushf
mov
cwtl
cmc
fucom
insl
into
dec
and
shll
sbb
fnstsw
test
mov
mov
xor
push
popa
mov
jmp
and
jnp
rcll
es
cmpsl
outsl
negb
jo
adc
sub
nop
jecxz
xchg
mov
sbb
and
popf
ret
stos
lds
push
mov
movsl
sbb
inc
iret
sub
jg
dec
xchg
push
pop
scas
ds
divl
inc
mov
and
or
cmpsl
imull
pop
xchg
push
mov
pushf
gs
ds
xor
in
xor
xor
and
outsb
sub
mov
aaa
lods
pop
notl
cmpsb
xor
sub
or
add
test
jp
jno
jecxz
in
popa
mov
mov
xor
mov
add
xor
pop
fsubp
sbb
in
loope
notb
mov
add
jo
jne
mov
sbb
pop
mov
pop
pushf
xchg
xchg
dec
jmp
ud0
xchg
sti
gs
add
cmc
mov
in
ja
jmp
dec
mov
add
pop
xchg
out
call
arpl
dec
cmpsb
movsb
out
ljmp
std
bound
pushf
in
stos
cmpsb
gs
loopne
cmp
call
in
push
orb
loope
xchg
movsl
sbb
mov
pop
dec
inc
sbb
insb
rcrl
push
rcrl
sbb
adc
lret
pop
xchg
mov
hlt
imul
push
nop
sbb
inc
add
movsl
fs
out
cld
mov
daa
sub
jb
out
or
xchg
enter
push
das
dec
add
lea
les
and
bound
sbb
aam
inc
pop
pop
flds
xchg
sbb
adc
shlb
cmc
mov
imul
cmp
ss
hlt
pop
inc
in
pop
xchg
xor
inc
mov
cmp
clc
dec
jbe
out
repz
pop
int3
hlt
test
cli
es
mov
mov
or
and
out
push
mov
inc
es
adc
xchg
jl
cmpsb
ret
push
or
or
mov
inc
fistps
not
iret
dec
lds
push
nop
mov
icebp
insl
add
mov
cmpsb
repnz
xor
adcb
mov
ss
arpl
sti
lahf
cmc
fisubrl
movsb
mov
lods
lds
cltd
sub
test
push
mov
insb
and
add
mov
mov
sub
inc
xchg
sub
or
iret
jo
adc
outsb
mov
add
sahf
mov
mov
xchg
sbb
or
xchg
adc
cmpsl
nop
movb
lret
dec
rcll
subl
mov
push
jmp
dec
loopne
imul
jno
xchg
imul
cmp
out
xchg
stos
push
cmp
jae
scas
xor
xchg
push
add
addl
popf
and
mov
test
fcoml
xor
cmpsl
mov
cmc
scas
jg
xchg
jmp
clc
gs
pop
adc
inc
neg
into
dec
mov
pop
mov
and
and
mov
int3
add
and
lods
stc
pop
and
lock
stc
pusha
cmc
aaa
pop
jne
cmp
push
pop
jl
aas
adc
outsl
pop
xchg
sub
dec
mov
mov
mov
mov
dec
ja
inc
push
lcall
add
sub
movsl
subl
clc
out
pop
sbb
insb
arpl
nop
mov
pop
scas
jbe
dec
cmp
xlat
sub
sets
sahf
xor
sbb
mov
and
lods
cs
dec
faddl
js
mov
mov
in
push
mov
push
les
xchg
cmp
mov
insl
loope
xchg
mov
pop
popa
iret
xor
xor
cli
loope
lcall
loope
lcall
test
lahf
add
sbb
jecxz
dec
fistpll
jg
push
movsb
inc
cmp
jns
outsb
out
lods
pop
push
jae
rcll
or
mov
lret
mov
mov
std
shrb
sub
inc
or
fnstcw
out
stos
mov
inc
xor
sahf
jne
cmovo
sbb
push
or
iret
mov
cmp
test
cmpsl
mov
push
inc
adc
lock
aad
dec
mov
cmp
shl
push
sub
das
shlb
pop
cmc
dec
mov
adc
sahf
jle
inc
or
fprem
int3
and
in
shlb
sub
inc
and
mov
out
xor
mov
add
pusha
inc
jl
add
out
sbb
iret
enter
inc
addr16
xchg
fldcw
pushf
out
mov
call
and
cs
jo
jecxz
xor
cmc
xchg
stos
cmp
or
stc
xchg
push
loopne
in
cs
dec
add
pop
and
dec
sbb
xor
dec
pop
cmc
fcomi
xchg
arpl
in
das
divb
fiaddl
push
adc
cld
push
ja
pop
shll
jne
xchg
insl
pop
fdiv
push
mov
gs
jb
data16
push
in
pop
subb
xchg
xor
push
shld
xchg
out
outsl
and
arpl
adc
inc
enter
aam
loopne
jecxz
cwtl
inc
lea
pop
insb
and
inc
or
icebp
mov
cmpsb
pop
repz
in
lods
cmp
sub
or
cmp
jb
in
insl
out
in
sti
pop
push
xlat
movsb
jge
mov
jne
sbb
loopne
xchg
mov
movsl
sub
into
call
pushf
idivl
add
loop
add
fisubrs
mov
mov
pop
and
cmpsb
jo
mov
cmc
push
out
clc
or
pop
jnp
lods
outsl
mov
in
add
xchg
notl
mov
push
pop
xor
inc
dec
fdivrl
adc
mov
adc
xor
lds
add
mov
aad
mov
pop
cmp
adc
cmp
nop
and
loop
pop
lds
out
mov
push
orb
leave
pop
sbb
sub
sbb
cmp
cmpl
stc
setae
dec
add
jbe
aas
sti
push
xlat
sbb
call
call
rolb
mov
pop
enter
xchg
loope
xchg
dec
push
jae
out
jl
xor
lods
bound
sti
hlt
jecxz
inc
xor
jmp
or
or
les
std
je
mov
in
ret
fsub
push
lahf
pushf
clc
dec
mov
lods
jns
inc
cmpsl
stos
pop
aad
add
mov
sub
and
lea
push
inc
xchg
mov
lahf
xor
pop
shr
or
cmp
inc
stc
lret
and
mov
cmp
push
popf
add
mov
arpl
or
mov
or
in
or
loop
mov
fwait
and
and
outsl
in
jecxz
sub
pop
mov
cmp
inc
jle
ljmp
xchg
xchg
jo
xor
push
ljmp
push
adc
fdivrl
mov
enter
repz
mov
mov
lds
pop
aas
inc
mov
pop
jo
dec
and
xchg
ficoms
lahf
movsb
pop
jg
cltd
loope
lcall
inc
dec
pop
sub
in
repnz
jnp
gs
pusha
xor
out
insb
dec
adc
ret
pop
jbe
mov
in
lahf
hlt
fsubr
loope
insl
shl
loop
pop
mov
rclb
lret
dec
fcoms
jb
mov
fdivrs
shrb
or
out
sub
and
out
std
pop
insb
mov
xchg
and
jge
out
push
loopne
dec
repnz
push
mov
adc
mov
push
shl
shll
cmp
and
test
pop
xchg
jno
xor
rol
mov
mov
or
mov
jg
stc
add
fistpll
add
add
cmp
stos
add
sbb
movsl
pop
xor
std
push
clc
add
andb
cmp
xor
sbb
lret
and
xchg
mov
mov
incb
out
sub
pushf
push
cltd
cmp
gs
fsts
push
out
out
mov
add
addl
pop
aas
movsl
and
or
lret
dec
in
outsl
and
sub
imul
pop
mov
inc
mov
lds
lods
pop
sbb
nop
cmpsl
mov
arpl
sub
and
lods
enter
ret
mov
orl
jle
imul
pop
out
inc
repnz
jmp
push
fldt
fisubrs
push
insb
lret
sub
les
sbb
mov
iret
shl
adc
cltd
mov
adc
or
mov
xchg
loope
test
push
es
mov
js
sub
data16
dec
fiadds
dec
fwait
push
pop
pop
shlb
jmp
pusha
daa
push
and
scas
aad
mov
mov
fld
push
popa
cmp
shrb
sub
push
sub
cmp
divl
ficomps
test
fs
sub
jno
sahf
lock
loop
jae
push
pusha
cmpsl
xchg
pop
ja
pop
xchg
jnp
out
addr16
jb,pt
dec
scas
mov
push
push
or
jl
pusha
je
mov
stos
pop
jecxz
and
mov
fisttpll
shlb
dec
test
dec
ret
fists
pop
pop
cmp
pop
xchg
push
js
mov
xor
mov
mov
inc
or
cmp
jge
test
push
aaa
dec
cmpsl
rcrb
pop
insb
loope
push
movsl
push
mov
push
jns
cmp
pop
or
xchg
jg
repz
xchg
and
lds
scas
xchg
cmp
lahf
pop
push
sub
push
sbb
xlat
xchg
lea
cli
xchg
repnz
scas
inc
inc
mov
dec
jbe
dec
pop
push
lock
arpl
cmp
add
insl
leave
jne
cltd
bound
neg
pop
or
fcoms
pop
sub
sbb
cmpsl
insb
add
pop
lahf
out
int
enter
push
inc
out
and
inc
mov
inc
fdivp
inc
sbb
sti
mov
push
push
add
orl
mov
test
pusha
ss
and
cmc
jg
adc
or
lahf
pop
jmp
call
icebp
pop
shll
inc
jns
lahf
cmp
and
xchg
sbb
mov
imul
xchg
popf
popf
ficoml
lret
je
jns
js
and
xchg
push
ret
lcall
popa
iret
fisttps
mov
test
xlat
xchg
loop
xchg
cmp
cmp
cmp
inc
ja
cmp
or
dec
das
pushf
mov
dec
aam
lret
sbb
xchg
fsubrs
imul
cmp
xchg
sahf
insl
cmp
mov
test
test
mov
rorl
xchg
int3
addr16
or
out
test
add
movsl
add
ljmp
aam
insb
push
adc
call
inc
pop
das
push
jl
cs
int
mov
sbb
sbb
sub
pusha
inc
loope
notb
pusha
lods
nop
jle
jle
xor
add
add
imul
ret
adc
mov
fisttpll
lods
pop
sbbl
mov
repnz
loop
or
punpcklwd
mov
into
sbb
add
fidivrl
dec
pop
outsl
cmp
mov
stos
mull
xchg
mov
inc
scas
add
movsl
divl
xor
std
ret
xor
pop
sbb
sub
jae
and
sahf
test
insb
cmpsl
popf
xor
adc
mov
outsb
mov
adc
fists
fnstsw
mov
pop
scas
adc
cmp
or
int
aad
imul
ljmp
push
call
in
pop
cmp
jae
mov
es
pop
popf
fadds
lret
dec
xchg
push
mov
jbe
pop
sbb
xor
in
push
lods
cmpsb
xchg
incl
mov
cmp
fldcw
or
fadds
aas
jge
sub
in
jge
sbb
cmpsb
xchg
cmp
mov
jmp
mov
arpl
push
and
stc
ficoml
mov
insb
not
inc
xchg
ja
movsb
sbb
mov
xor
les
sbb
lock
icebp
decl
out
sub
xchg
mov
add
and
sub
push
cwtl
push
in
and
push
pop
aam
push
push
jae
sbb
cwtl
or
out
push
and
les
in
mov
sbb
das
aaa
jmp
cmp
adc
mov
scas
lods
pusha
mov
shll
in
mov
ljmp
imul
das
sub
push
jl
lds
dec
push
mov
push
jb
jne
adc
cmp
xor
gs
xor
cwtl
sub
in
pop
xchg
hlt
test
xchg
adc
jecxz
push
arpl
jne
and
xchg
pop
jecxz
mov
xor
shlb
jge
or
movsl
je
jmp
or
addr16
outsb
mov
std
call
lock
cld
xor
mov
mov
das
mov
loope
adc
mov
cmc
pop
lea
je
dec
inc
inc
mulb
sub
jo
dec
mov
sbb
xchg
mov
cli
stc
sti
adc
rcrl
scas
push
inc
mov
sub
xchg
mov
sbb
ret
jge
in
adc
push
inc
pop
dec
inc
test
jo
mov
mov
out
dec
out
mov
xlat
arpl
push
lcall
inc
aam
out
inc
inc
jns
add
insb
sub
inc
mov
aas
in
out
gs
or
loopne
out
xchg
in
ljmp
stos
sub
xor
lret
fwait
xor
clc
movb
fnstcw
dec
out
jmp
and
inc
test
pop
ja
sbb
out
xchg
pop
scas
add
rcrb
ficomps
xchg
in
lds
dec
je
sbb
jno
int3
jg
movsl
test
inc
and
mov
jbe
hlt
and
leave
aam
adc
int3
lock
lret
add
dec
sbb
add
les
sbb
fildll
xchg
ja
iret
inc
mov
sbb
mov
sbb
mov
in
xchg
dec
fists
mov
data16
mov
fs
arpl
xor
out
nop
call
sahf
into
in
rclb
xor
stos
shlb
fldcw
and
lcall
in
daa
fildll
pop
inc
pop
add
jb
arpl
adc
iret
push
pusha
adc
testb
rorl
ds
sbb
xor
and
repnz
sub
xor
mov
flds
scas
daa
int
xor
jae
jne
rol
dec
imul
mov
aaa
lods
mov
xchg
rolb
or
xchg
mov
ds
inc
push
jge
setae
out
cmp
jmp
mov
pop
rorl
cli
aad
aas
or
stos
or
rorl
test
lahf
fimuls
scas
mov
and
mov
or
xchg
mov
xor
mov
repz
fwait
cld
mov
or
push
outsb
rorl
or
or
dec
fdivr
add
mov
out
mov
lock
dec
cli
imul
imul
addr16
je
ret
push
ss
cltd
push
jmp
outsl
test
sub
sbb
dec
lods
push
jmp
rol
jb
add
lret
ja
fadd
dec
mov
dec
adc
into
xchg
mov
add
dec
and
xlat
inc
daa
enter
push
out
xchg
or
or
dec
pop
pop
shl
mov
int
cmp
js
orb
mov
daa
mov
push
dec
pop
or
imul
or
jbe
mov
js
push
push
pusha
fdivrl
inc
mov
mov
outsl
aad
es
not
mov
fcoml
jl
insl
add
fcmovb
aad
js
lock
int3
lock
mov
adc
jne
int
inc
cmp
xchg
gs
jge
cmpsl
cli
cmpsb
leave
lcall
repnz
jne
adc
clc
mov
pop
scas
push
je
or
add
and
sub
test
mov
push
popa
push
mov
inc
jl
jno
jae
mov
jecxz
dec
push
scas
mov
repz
jge
adc
fnstenv
cmpsl
test
popf
pusha
pop
xchg
fildl
xor
cmc
push
xchg
aas
aam
adc
inc
mov
dec
add
xor
add
pop
pop
test
cld
daa
push
and
adc
mov
or
xchg
add
mov
xchg
push
push
lea
jb
lods
outsl
xor
mov
mov
outsl
and
jmp
scas
into
popf
push
mov
xor
aad
mov
out
shrb
push
sbb
sbb
cmpsb
ret
sbb
lods
xor
add
inc
daa
dec
xchg
dec
nop
mov
dec
and
outsl
pop
inc
scas
ja
jnp
pop
sahf
loop
inc
xchg
cli
cs
xor
sub
mov
sub
iret
pop
les
pushf
popf
std
sbb
jg
testb
in
fdivl
or
push
in
mov
popf
push
jbe
cmpb
push
fadds
push
aaa
mov
mov
xchg
adc
leave
add
add
dec
fs
test
mov
sarl
negl
sbb
sbb
shrl
add
mull
int
jnp
je
ficompl
push
dec
jne
adc
pop
movsl
or
insl
movsl
imul
rcrl
pop
push
sbb
fwait
das
push
inc
push
mov
cwtl
sbbl
cmpsl
out
xor
ds
pop
testl
mov
jle
test
mov
ja
inc
jns
cwtl
mov
jne
adc
cmp
cmp
dec
in
inc
out
test
outsb
cmp
fstpt
or
push
es
xlat
and
cmpsl
repnz
pop
gs
adc
mov
mov
sub
out
xor
sbb
cmpsb
repnz
cmpsl
mov
push
int
mov
scas
test
mov
orl
pop
cmp
test
loope
insb
jbe
shlb
fs
inc
add
push
in
dec
mov
jbe
std
xor
pop
xor
stos
insl
push
out
mov
adc
mov
insl
pusha
out
sub
xor
or
into
fildll
cli
stos
push
mov
xchg
jbe
notb
adc
addb
or
dec
push
dec
hlt
xlat
bound
inc
gs
cmc
rcrl
pusha
into
in
sub
pop
and
insb
inc
in
pop
dec
cmovl
mov
out
xchg
xchg
movsl
jo
or
add
cwtl
push
cwtl
and
xor
je
sbbl
or
lret
add
mov
mov
pop
lods
inc
jne
je
pop
fildll
or
jl
cmp
push
dec
and
mov
sahf
jecxz
xchg
push
mov
ret
cmp
pop
sub
mov
daa
insl
jne
loopne
jno
out
xor
pop
outsb
test
add
popf
push
xor
inc
cmp
mov
cs
or
xor
and
push
fwait
std
pop
sub
pop
dec
shl
out
xlat
mov
enter
add
and
mov
sti
das
xorl
dec
sbb
stos
test
push
mov
cmp
gs
test
hlt
mov
addb
pop
xchg
push
mov
fwait
push
sahf
inc
jae
cmpl
jo
punpcklbw
cmpsl
out
testl
pop
jp
pop
pop
rolb
push
jecxz
fwait
xor
pusha
jecxz
sbb
lods
xchg
sub
inc
fs
out
push
and
aad
push
inc
hlt
mov
aad
jb
ds
or
lods
scas
jbe
inc
push
sub
jle
push
enter
xchg
and
inc
ds
lea
xor
int3
fildll
ss
mov
or
xchg
pop
mov
cmp
ja
jb
xor
mov
jo
into
loope
sub
or
rcrb
sbb
aas
and
aam
xor
push
insl
sbb
cmpsl
inc
rcrb
fcmovbe
adc
adc
test
dec
into
mov
es
fidivl
movsl
je
movsb
xor
stos
pop
xchg
inc
or
ja
cmp
cmp
shrl
pop
sub
out
xor
fsubrs
mov
mov
sub
ds
dec
int3
lods
sub
mov
xchg
je
jae
aaa
inc
pop
lock
outsb
inc
das
pop
test
arpl
je
xor
sub
ja
adcb
mov
ljmp
sub
cltd
stos
xchg
std
cmp
cmp
fwait
cmpb
js
das
scas
imul
dec
jg
hlt
int3
xchg
jmp
scas
or
les
and
cmp
sti
xorb
inc
cmc
out
adc
mov
adc
pop
jmp
pop
mov
push
out
leave
cmpl
and
adc
jge
or
dec
loope
fstpt
sub
ret
fidivrs
data16
mov
scas
in
push
mov
push
mov
pop
orl
rcrb
or
add
out
mov
jle
pushf
adc
mov
jecxz
jl
movsl
pop
pop
aaa
and
scas
lock
jmp
jbe
sub
test
adc
je
aad
jbe
or
dec
in
mov
inc
push
mov
mov
mov
cmp
fcomps
cwtl
cmp
loop
inc
cmpsb
dec
add
mov
push
mov
dec
addl
js
cmpb
sub
xchg
add
pop
push
dec
jecxz
sub
add
les
xchg
sbb
pop
leave
std
cmp
jge
fcmovnb
popl
mov
adc
notl
mov
add
lods
add
add
rcr
add
out
decl
fstps
or
faddp
push
inc
in
fidivs
daa
enter
sbb
mov
jbe
jnp
pop
imul
cmpl
pop
add
inc
cmp
sbb
fisttps
dec
jns
outsl
scas
jmp
fst
leave
cmp
call
mov
cmp
push
and
or
mov
sub
les
xor
mov
mov
push
stc
aam
sbb
inc
add
test
adc
adc
add
das
mov
dec
xchg
into
in
or
xorb
mov
movsb
xchg
cmp
lcall
fimuls
stc
sbb
xchg
sbb
dec
xchg
rorb
mov
jg
inc
push
popa
add
popf
mov
loope
aad
jl
cmpsb
and
lods
mov
iret
jne
jae
jnp
cmp
and
mov
enter
mov
xlat
call
mov
push
ss
loop
cmp
pop
and
mov
stos
adc
push
test
mov
pop
mov
lcall
sar
and
or
xor
mov
mov
sbb
aaa
cltd
add
in
cmp
std
loop
xchg
adc
scas
lret
xor
and
add
jge
repz
iret
mov
stc
mulb
cmp
jne
and
jle
push
adc
mov
cmp
or
mov
jp
jo
jnp
mov
test
mov
push
daa
xor
aas
aaa
xchg
mov
xchg
pop
jno
lods
leave
and
jbe
bound
or
test
sbb
test
stos
mov
mov
add
jl
jnp
mov
lcall
fists
jb
jle
jle
js
in
addl
stc
mov
sub
xlat
jb
leave
int3
jg
in
aam
insl
jno
mov
and
aas
sti
fnsave
std
push
rcll
adc
pop
iret
mov
js
lret
jg
pop
pop
add
mov
and
mov
inc
pushf
adc
outsl
clc
mov
sti
pop
stos
jmp
cmp
jbe
push
popa
adc
sbbb
sarl
adc
mov
jne
repnz
jmp
adc
scas
std
cmp
xchg
xor
arpl
dec
xor
push
and
lahf
pop
dec
or
cmp
push
lock
xlat
sub
jmp
ss
sub
sbb
push
cmp
push
outsb
inc
cmp
in
add
incb
sub
ret
sti
jae
and
mov
sbb
mov
fcmovnb
pop
xlat
mov
mulb
mov
mov
mov
pop
add
stos
pushf
cmpsl
jae
cmp
xor
xchg
xchg
dec
cmpsb
and
repz
mov
cmpsl
iret
pop
xor
push
ljmp
std
and
sahf
xor
popf
jmp
dec
incb
pop
jp
mov
ret
sti
pushf
lret
int3
push
testl
popf
aad
lds
or
cltd
aaa
loopne
mov
inc
dec
jle
jbe
adc
sbb
push
fisttps
iret
cwtl
pop
sahf
cmp
adcb
mov
test
jo
outsl
into
pop
out
pop
xor
push
mov
xchg
loope
jp
jne
outsb
jle
call
shll
shll
pop
push
aam
stc
insb
dec
xchg
add
test
mov
inc
mov
sahf
mov
mov
and
xchg
mov
mov
sbb
and
xor
imul
sbb
push
sub
push
xchg
scas
sub
push
in
push
push
enter
add
cmpl
push
push
aas
sbb
mov
and
xor
in
ret
pop
jb
jp
shll
sub
adc
in
js
lcall
jno
mull
cmp
lea
pop
orl
or
lods
mov
sub
sahf
bound
bound
dec
jge
mov
clc
inc
daa
popa
les
std
fldt
and
and
add
inc
and
mov
xor
push
aas
push
fmul
dec
adc
ja
sub
sbb
in
jecxz
movsb
insb
scas
shll
inc
faddp
mov
pop
arpl
hlt
shrl
je
xchg
inc
je
and
stos
je
rcll
xor
mov
test
jmp
popa
pop
cmpsb
sbb
test
mov
xor
dec
xchg
mov
popf
out
push
or
pop
mov
sbb
addl
cmp
mov
pop
lds
add
insl
xchg
int
mov
divb
push
icebp
iret
into
rorl
and
jecxz
in
gs
fdiv
dec
xchg
arpl
cld
in
outsl
in
pop
mov
mov
loope
sahf
adc
cmpl
and
or
ss
dec
push
or
adc
dec
mov
and
mov
nop
cmp
cmp
fs
push
stos
mov
out
dec
mov
dec
fists
lds
dec
dec
xchg
andb
add
jge
add
mov
nop
daa
rcrl
adc
dec
fimull
push
fcomps
or
std
cmp
push
aas
push
mov
pop
dec
sub
sub
push
std
lret
mov
add
imul
or
adc
and
enter
iret
cmp
ljmp
and
or
in
cmpsb
mov
pop
xor
insb
push
inc
push
int
mov
or
shl
mov
ljmp
js
mov
inc
pop
lea
sub
sub
sbb
sub
pop
movsl
inc
aaa
mov
adc
cwtl
test
hlt
aad
iret
bound
fildl
fptan
or
adc
ffree
xchg
cmc
js
jne
pop
sarl
in
lahf
daa
lds
cltd
mov
outsl
test
addr16
adc
jae
pop
mov
enter
insb
test
leave
pop
pop
into
daa
jl
sbb
hlt
rcll
out
mov
test
fidivl
dec
outsb
or
xor
jl
das
mov
pusha
imul
mov
sar
ret
pop
jo
and
wbinvd
and
aas
push
mov
aas
adc
clc
addl
and
loopne
shrb
es
sahf
daa
sub
mov
icebp
push
mov
push
xchg
xchg
js
dec
or
cmp
idivb
mov
sbb
insl
cmp
frstor
sbb
push
mov
icebp
jmp
add
jp
out
sub
mov
fcompl
add
mov
dec
ret
jl
and
pop
inc
pop
test
jnp
xor
sub
xchg
dec
arpl
lret
clc
shrb
sub
xchg
lods
aas
cmc
sub
pop
inc
inc
aad
fs
add
and
add
pop
push
mov
sti
xor
jno
cld
fwait
int
push
xchg
fstpt
pop
lods
jnp
pop
into
fsubrs
mov
flds
mov
into
cmpsl
or
jb
rolb
sbb
and
push
in
xorb
mov
fcomps
xlat
jmp
or
mov
xchg
iret
sub
cwtl
dec
repz
add
cmp
pop
shll
fnsave
cmp
adc
pop
hlt
sub
sbb
or
cmp
in
std
loope
mov
insl
aaa
dec
cld
insl
dec
scas
outsl
push
xlat
mov
mov
sbb
jbe
sarl
fistpl
dec
inc
xchg
dec
jl
fistpl
rolb
addl
pcmpgtd
mov
sub
cmp
xchg
fdivp
pop
negl
fidivrs
dec
and
jmp
call
sahf
add
or
pushf
xor
mov
fnstenv
in
sub
rolb
call
push
in
pop
std
sbb
pop
cmp
jno
lretw
push
aas
cmp
mov
sbb
ss
mov
scas
push
nop
xchg
xchg
lods
push
mov
lcall
bound
add
lcall
jb
filds
mov
inc
idivb
ret
adc
push
lock
imul
sbb
in
sbbb
bnd
aad
sbb
std
jae
push
push
xchg
mov
stc
fdivs
add
notb
sbb
jge
leave
xchg
push
repnz
ljmp
pop
sub
ljmp
lahf
adc
inc
out
push
filds
outsl
outsl
enter
or
mov
or
dec
sar
pop
ss
sbb
mov
jbe
popf
dec
fwait
xor
fmuls
push
les
add
adc
and
sub
or
ret
push
es
mov
jmp
and
jge
and
clc
sahf
outsb
jp
les
ds
jnp
add
stos
aad
add
jmp
pcmpgtd
insb
jbe
and
pop
ljmp
adc
fndisi(8087
mov
xor
mov
jg
xor
sbb
and
jne
jmp
push
and
cmp
aad
scas
mov
sub
xchg
push
cld
dec
cld
jb
sbb
add
add
cmpsb
dec
sarb
or
outsb
stc
adcl
call
xchg
and
imul
std
jge
ss
cmp
cmc
push
pop
leave
mov
mov
cs
inc
or
enter
jmp
jge
or
adc
cmp
xor
sub
daa
push
ljmp
and
add
cwtl
loop
lret
mov
icebp
adc
mov
in
inc
repz
mov
cmp
ucomiss
stc
add
dec
test
add
mov
push
pop
addr16
mov
dec
push
lcall
inc
or
mov
pop
inc
adc
sbb
leave
jno
mov
dec
mov
lahf
mov
pop
jns
mov
push
lds
shll
or
mov
mov
push
add
movsb
lahf
cltd
push
pushf
lea
push
pushf
xchg
xlat
js
mov
jno
int3
cmpl
andl
mov
inc
sub
jb
es
jb
ret
or
jecxz
jmp
pop
sbbb
jbe
dec
xor
fbld
mov
call
sbb
jnp
jg
and
push
inc
jnp
loope
lea
mov
and
mov
lock
push
mov
mov
mov
pop
xchg
bound
mov
hlt
stc
les
xchg
fsubrs
mov
fldt
inc
outsl
arpl
lds
rcl
mov
xor
adc
dec
pop
or
jg
mov
and
loop
and
out
jle
popa
push
fs
pop
push
add
loop
ds
ret
pusha
scas
std
jmp
fisttpll
or
mov
and
jecxz
mov
dec
mov
addr16
addr16
dec
mov
sahf
mov
mov
int
cmp
mov
push
push
test
push
jnp
push
jns
inc
jmp
pop
inc
mov
or
pop
mov
push
cmc
aad
movsb
jl
je
test
jmp
jmp
inc
fistps
sti
lahf
js
pop
pop
inc
lret
test
faddl
add
mov
pop
and
sbb
or
push
or
jecxz
out
outsb
loope
push
push
repnz
repz
test
aaa
hlt
mov
xorl
test
or
pop
push
push
lea
sub
push
lahf
mov
sti
insb
cmovns
sbb
push
push
cmp
loop
inc
push
jecxz
mov
repnz
dec
or
in
fnsave
push
insb
test
ret
pop
xor
cmp
xchg
sbb
jns
jecxz
jo
cmp
xchg
loope
xlat
scas
jnp
loopne
lret
adc
dec
dec
jecxz
enter
jmp
pop
popa
adc
in
arpl
stos
aaa
rcrl
mov
add
fcomps
dec
mov
adc
cmp
jo
cmpb
jbe
cmp
icebp
fs
data16
xchg
movsl
test
inc
movl
rcr
into
pop
pop
je
mov
mov
fbld
inc
sub
mov
pop
pusha
mov
icebp
movsl
mov
sahf
sub
xchg
cmp
mov
push
cltd
jno
enter
sbb
bound
jnp
out
ljmp
dec
sti
test
xchg
nopl
pop
xor
mov
mov
jp
mov
loop
mov
arpl
add
fcomps
push
push
movsl
xlat
pop
push
xchg
xchg
push
or
jp
jg
pushf
outsb
loop
aaa
mov
mov
fistl
xor
test
cli
rolb
push
push
jmp
cmc
lods
jbe
jecxz
push
pop
jp
xchg
fsubs
xor
rcl
in
lock
fstp
je
xchg
or
mov
push
iret
inc
mov
sub
lds
cmp
aas
mov
jbe
iret
dec
scas
pop
call
cmpsb
imul
fsubrs
xchg
inc
xor
mov
insl
cmp
push
mov
jp
mov
out
decb
loope
fadds
ja
adc
insb
xchg
negb
sar
add
loope
sti
adc
push
push
clc
hlt
ss
int
sbb
aam
jnp
cmp
aam
mov
adc
lcall
imul
nop
outsl
inc
in
sub
xchg
dec
sub
mov
pop
pop
pop
lret
add
sub
subb
mov
ret
int3
pop
lret
mov
xor
movsl
nop
mov
rol
cwtl
in
dec
setbe
je
push
cmp
xor
jg
jg
push
push
pop
or
add
sbb
push
test
sub
cmovnp
inc
enter
sub
iret
cmp
adc
sbb
shlb
pop
cmp
movsb
cwtl
in
ljmp
ljmp
gs
xlat
divl
xor
pusha
adc
sahf
repnz
mov
push
fwait
mov
jle
lock
jb
inc
mov
cmp
int3
dec
mov
mov
or
rol
mov
push
test
sub
or
jae
sbb
and
ds
cmpsb
add
fdivs
xor
sbb
movsl
push
int
fistps
int3
push
add
pop
xlat
pop
xor
ss
or
inc
sbb
iret
add
push
jne
sbb
push
int3
and
mov
lret
dec
out
insb
dec
fldl
fstpl
sbb
sub
out
loopne,pt
lea
jo
inc
mov
pop
ds
addr16
jl
inc
test
xor
adc
in
mov
jae
icebp
lods
insl
in
in
ja
movsl
mov
fadd
sub
aam
rolb
jg
pop
mov
call
inc
pop
pop
test
cmp
push
jecxz
test
sbb
mov
imul
pop
dec
popf
out
ret
pop
inc
pop
nop
fldt
fisttpll
inc
dec
pop
test
adc
fsts
mov
jne
into
mov
and
pop
hlt
popa
sub
jne
add
scas
fisubs
fcoms
out
rolb
ret
fs
xchg
dec
sub
in
hlt
test
in
inc
cmp
mov
sbb
cmpsl
mov
imul
arpl
stc
mov
in
fistps
popf
lods
jne
inc
jmp
mov
xlat
sub
out
sbbb
mov
sbb
ficompl
icebp
cmpsb
xchg
sbb
repnz
cmpsl
pusha
adc
mov
sub
mov
push
fucom
inc
prefetch
je
mov
mov
cltd
sub
adc
adc
inc
stos
xlat
jle
jno
jl
int
push
mov
cs
mov
sarl
out
out
jbe
jmp
int3
das
jae
inc
repz
movd
sbb
insb
add
add
mov
arpl
xchg
mov
dec
jle
pop
call
dec
push
mov
je
dec
addr16
and
aad
sub
or
sbb
jne
mov
xchg
jge
push
cli
pop
fidivrs
inc
sbb
push
mov
xchg
popa
push
mov
cmp
fdivrs
icebp
mov
je
push
sub
out
sbb
daa
inc
icebp
add
push
jg
mov
jne
xor
jno
cs
pusha
insb
push
popf
cmc
mov
xor
cld
das
xchg
lds
adc
inc
inc
scas
xorb
aas
fwait
mov
rcll
push
mov
rclb
pop
and
lret
inc
push
arpl
enter
repz
pop
scas
add
push
pop
outsl
cmp
int
xor
pop
sti
mov
call
push
adc
add
cld
and
and
jmp
xchg
nop
cld
add
pop
imul
xchg
dec
mov
xor
xchg
cltd
pop
sub
movsl
es
jne
outsb
sub
add
outsl
and
pop
inc
mov
xor
add
mov
stos
push
pusha
and
mov
int
lods
xchg
inc
enter
pop
mov
ljmp
xorb
in
lret
movsl
inc
test
dec
pop
shlb
and
mov
xchg
cmp
sbbb
neg
popf
push
fldenv
inc
fmull
pop
and
and
das
das
fiadds
daa
or
imul
in
lods
mov
mov
test
fiadds
push
cmc
mov
sahf
adc
inc
andl
sub
jns
xchg
enter
cli
mov
ljmp
fnstsw
lock
stc
bound
adcb
xor
in
adc
sbb
jp
adc
sub
xchg
lock
fildll
pop
xor
push
loope
xchg
decl
dec
and
cld
movsb
mov
stos
jecxz
mov
push
push
jae
add
mov
cmp
nop
pop
out
daa
adc
mov
cmp
adc
and
xchg
in
lea
dec
imul
ret
sbb
and
aaa
cmp
xchg
cld
imul
inc
mov
insl
mov
daa
mov
jo
push
adc
mov
loope
adc
lock
es
sub
fsubl
xchg
inc
test
add
cmp
sbb
mov
aad
aaa
fs
pop
lcall
aam
js
sub
sbb
mov
out
sahf
mov
xor
ja
push
lret
jno
loopne
fisubrs
das
movsb
and
test
das
pop
sbb
aas
pop
xchg
icebp
jg
addl
xorl
movl
or
mov
sbb
scas
jmp
xor
ret
movsl
inc
ja
cs
jecxz
dec
jae
xor
imul
inc
ffree
daa
loopne
dec
loope
jns,pn
pop
out
fimuls
adc
or
jg
push
lock
mov
rorb
add
addr16
sbb
xchg
sub
mov
dec
sbb
sbb
std
mov
adc
lock
arpl
adc
pop
mov
mov
lret
push
jge
cs
or
and
enter
ror
std
jg
mov
or
jae
mov
jo
sbb
or
mov
stos
push
or
mov
push
inc
imul
adc
mov
inc
or
mov
ja
sbb
andb
sbb
cwtl
and
adc
scas
jmp
imul
cli
mov
dec
insb
call
add
test
sbb
shlb
xchg
aas
outsb
xchg
mov
lds
push
xchg
fiaddl
test
push
das
inc
or
push
negb
pop
pop
leave
cmc
gs
mov
xchg
mov
sbbb
fadds
mov
xchg
xor
shlb
jb
insl
scas
test
mov
sub
mov
cmp
dec
test
adc
mov
mov
pop
jp
clc
ror
cs
bound
outsb
nop
and
dec
int
xor
es
ret
fwait
cmp
jecxz
adc
xor
sbb
sbb
mov
adc
and
cmp
mov
cmp
mov
xor
push
adc
push
mov
scas
fildll
mov
sub
leave
jns
es
aad
cld
in
insl
andl
gs
push
mov
fimuls
cli
arpl
mov
lds
xchg
add
in
ret
pop
mov
add
mov
cli
cli
cmp
roll
ret
in
orb
pop
pusha
dec
adc
xchg
gs
mov
rdtsc
mov
faddl
adc
fs
dec
hlt
pusha
inc
notb
stc
int
sbb
mov
iret
inc
fcomp
pop
cmp
sbb
dec
push
and
sub
jnp
sub
adc
jge
cmp
jns
test
mov
adc
sbb
cmp
mov
adc
inc
inc
loopne
push
jp
cmp
fs
data16
sub
orb
cld
fimull
setno
xchg
imul
imul
loope
and
in
jae
imul
insl
mov
and
push
fs
pop
enter
mov
andb
mov
mov
dec
dec
stc
adc
mov
jle
je
adc
insb
jb
nop
cmp
jp
xor
sub
cmpsb
mov
cmpsb
add
mov
outsl
dec
sub
push
mov
int
cmc
filds
dec
inc
mov
rcrb
lock
push
std
push
jp
jge
repnz
xor
and
push
stos
out
xor
js
out
fisttps
data16
jnp
mov
add
int
jnp
mov
lret
push
insb
add
mov
out
xlat
inc
ret
cmp
or
pusha
out
jmp
idiv
pop
jp
push
lcall
jg
shrb
std
and
pop
push
and
mov
mov
push
imul
dec
arpl
rorl
mov
and
mov
js
or
arpl
jnp
pusha
sbb
sub
out
notb
in
ficoml
icebp
sbb
test
movsb
xor
add
sbb
fidivrs
lds
mov
fcompl
pop
jo
xor
popf
mov
outsb
fwait
push
push
les
loope
mov
xchg
dec
loope
mov
pop
iret
popa
pop
popa
sbb
mov
and
push
addb
dec
push
rol
clc
dec
pusha
sbb
insl
inc
push
mov
sbb
dec
and
jnp
or
push
push
test
or
mov
push
out
cmpl
inc
push
sbb
das
push
fildl
push
add
xchg
fdiv
in
lcall
std
fstl
cmp
mov
pushf
push
cmp
in
inc
adc
pop
xor
lcall
pop
push
mov
xor
js
pop
adc
paddq
or
xchg
scas
xchg
ss
adc
xor
jle
xor
nop
dec
int
push
data16
xchg
fcmovnb
stc
and
out
pusha
fsubl
sbb
mov
outsb
ret
cmp
lock
mov
shll
inc
xchg
int
mov
or
cld
sbb
mov
xchg
test
data16
lret
mov
js
push
adc
aad
adc
in
ja
and
mov
loop
adc
adc
sbb
sub
into
ja
stos
into
xor
inc
or
xchg
sti
push
rolb
xor
xchg
addb
test
push
ret
jmp
cld
xchg
dec
adc
cs
and
mov
adc
repnz
jmp
scas
adcl
mov
lock
mov
mov
mov
xchg
xor
ret
push
pop
es
scas
or
mov
idivl
add
movsb
sub
lods
int
pop
xor
or
xchg
pop
cli
mov
imul
jle
lods
push
ljmp
sub
pop
fistpl
adc
cmp
jmp
pop
lret
mov
stos
cmp
dec
cltd
addl
adc
pop
mov
mov
jle
and
data16
xchg
inc
mov
and
mov
push
popf
mov
adc
sub
icebp
adc
decl
fistpll
and
add
mov
fmuls
in
cmp
sbb
add
mov
iret
stc
add
iret
gs
and
sbb
movsb
sahf
add
fstl
shlb
cli
movb
fst
roll
js
sub
pop
int
jge
sbb
scas
dec
mov
xchg
pop
clc
add
jo
cmp
int
xchg
xchg
mov
jp
cwtl
add
jnp
cmp
dec
cmpsl
and
data16
lahf
xchg
dec
xlat
aaa
in
dec
cmp
aaa
lods
sub
fnstcw
std
mov
fbstp
dec
enter
push
hlt
stc
mov
push
filds
je
shll
sub
pop
push
mov
fistps
xorb
push
and
xchg
jg
shr
cmpsb
outsl
pop
femms
gs
je
aas
xor
aas
fnstcw
push
cmp
mov
push
jg
push
js
ds
mov
sbb
sbb
addl
xchg
add
or
mov
pop
addr16
or
jmp
test
jecxz
or
test
std
cmpsb
dec
stos
lods
scas
or
mov
imul
lahf
mov
sub
sub
cmc
sub
sub
mov
xor
jne
fisttpl
mov
stos
mov
dec
xor
jbe
adc
shrb
pushf
inc
pop
fstpl
fsubrs
and
push
dec
push
insl
pushf
sahf
enter
in
dec
dec
mov
gs
pop
jmp
in
stos
xchg
rcl
xchg
and
scas
add
jns
mov
je
nop
dec
add
or
out
popa
loope
test
xchg
loop
shl
mov
mov
xor
push
aaa
sub
jmp
jg
popf
imul
loop
jg
jg
ficompl
or
sub
cmovne
or
pop
mov
mov
xor
cs
movsb
xchg
mov
sub
loope
out
jg
or
push
ljmp
pusha
insb
cmpsb
xor
stos
jg
nop
lock
in
inc
fdivrl
fcmovnu
jl
arpl
and
daa
data16
adcl
and
jno
vunpcklps
mov
frstor
lods
fxch
in
ret
inc
mov
fwait
mov
jge
ss
push
into
movb
es
pop
and
sub
nop
lods
pusha
sbb
out
adc
sbb
pop
sbb
lcall
imul
ret
dec
xorb
push
dec
adc
addr16
mov
bound
bound
or
mov
inc
das
sbb
dec
mov
iret
divb
jns
shl
mov
aam
push
dec
mov
ljmp
push
sbb
fistpll
fbstp
dec
sbb
add
cltd
sbb
mov
lret
test
mov
lret
lcall
ffreep
lods
inc
daa
mov
pushw
or
int
xchg
adc
shll
sbb
cmpsb
mov
mov
add
lods
out
shll
add
jp
out
push
jns
popf
imul
adc
and
call
test
inc
adc
shl
out
push
xchg
cmpsb
iret
imul
pop
sub
push
in
out
sbb
je
std
mov
cmp
add
and
in
push
stc
xor
adc
test
iret
inc
cmp
or
sub
mulb
fdivl
xlat
cli
xor
sub
aas
dec
mov
ficompl
test
inc
inc
mov
addr16
jmp
sti
dec
stos
jg
inc
pop
mov
dec
daa
sub
imul
aas
or
stos
outsl
out
nop
mov
clc
aad
lcall
jp
xor
gs
mov
sub
shr
mov
ds
clc
pop
lcall
inc
pushf
pop
ret
daa
fcoms
fwait
jp
mov
das
adc
inc
adc
dec
push
out
cld
add
pop
jb
jae
and
aaa
xchg
and
and
pusha
test
int
orb
fcmovu
xchg
not
enter
adcl
cmp
cltd
cmp
jmp
scas
lcall
imul
fcmovnb
out
mov
push
in
movb
xor
imul
scas
sahf
xor
jbe
xchg
mov
pop
push
jg
add
es
jmp
repnz
subb
movsb
rorl
or
xor
sbb
in
dec
mov
cmp
inc
and
inc
out
xchg
stos
jmp
pop
lcall
push
aad
or
rolb
mov
cmp
lock
and
stos
in
dec
adc
loopne
sub
xor
adc
pop
movsl
idivb
sbb
enter
fmul
sbb
cmp
pop
or
inc
nop
loop
insb
aas
push
stos
loope
cmpsl
pop
xchg
repz
sti
xchg
packssdw
push
sbb
cltd
cwtl
pop
jl
aaa
adc
incb
jp
mov
mov
test
lock
adc
or
loop
adc
test
ret
ds
fwait
repz
cs
inc
sti
mov
fs
dec
fwait
add
out
ror
fldenv
sarl
mov
popf
sub
aaa
add
xor
in
jns
fstpt
rorl
push
mulb
cltd
subb
or
adcl
out
stc
lret
je
fisttps
rcll
mov
mov
cmp
outsl
andl
ljmp
loop
jg
mov
mov
lods
adc
nop
out
pop
lock
xchg
shlb
sub
push
fidivrs
sbb
jg
ss
adc
ljmp
iret
negb
sub
adc
sbb
jne
loope
jnp
inc
add
inc
cli
jns
xchg
add
mov
pusha
in
lea
fs
test
pushl
xchg
add
in
xchg
fucomi
hlt
sub
popf
sub
repnz
jbe
xor
popf
call
inc
movups
jb
jle
popf
out
jge
test
inc
jne
mov
sbb
pop
mov
xchg
lock
aam
pop
insl
push
es
sbb
dec
pop
aam
aaa
add
imulb
xor
lds
cmp
xor
cltd
aam
jb
xchg
fldcw
sbb
fimull
in
xor
lods
ret
fnstsw
insl
repz
stos
sub
pop
pusha
dec
aam
fildll
mov
enter
pusha
xlat
ret
cli
xchg
sub
mov
ja
adc
mov
push
mov
insb
outsb
enter
fisubrl
mov
imul
cmc
mov
jg
xchg
jns
or
jle
fidivrs
loop
pop
push
or
sahf
iret
and
dec
cmp
lods
and
jae
scas
stos
adc
fstps
lods
cmpsb
xchg
popa
inc
cli
movsb
mov
xchg
repnz
iret
or
ja
adc
jbe
int
inc
lret
lds
add
dec
and
mov
and
stos
mov
scas
jo
out
lret
add
xchg
cmpsb
fisttps
fdivs
push
lods
pop
and
lea
in
dec
cmp
cmpsl
push
adc
mov
sbb
or
cmp
insb
pop
das
icebp
movsb
in
aam
xor
xchg
adc
pop
push
jo
jmp
xchg
nop
sahf
in
std
popf
bound
sbb
std
add
out
add
add
test
sub
push
dec
mov
mov
xchg
add
lock
push
rol
and
ret
mov
or
mov
jl
rcrb
lahf
mov
lret
out
int
mov
mov
push
jp,pn
cwtl
nop
lret
adc
sub
adc
into
and
xorb
inc
mov
lods
push
adc
gs
sbb
pop
sarb
and
push
jno
repz
ja
das
xor
sub
jecxz
push
enter
adc
daa
in
ret
mov
pop
push
adc
sti
icebp
int3
repnz
mov
addr16
into
inc
test
call
mov
testl
xchg
lahf
aaa
inc
outsl
jecxz
js
out
push
xchg
adc
popa
jbe
mov
adc
inc
in
dec
pop
out
xchg
inc
std
insl
rorb
and
in
sub
cmp
jmp
shr
sub
aas
insb
mov
std
jmp
mov
loop
in
in
add
test
stc
sub
outsb
mov
pusha
push
out
fldcw
cs
inc
inc
js
or
jb
mov
adc
mov
in
testb
push
and
inc
push
and
inc
dec
cmp
loope
shl
daa
mov
adc
out
clc
add
stos
push
dec
push
or
cmp
test
adc
mov
test
push
lret
daa
pusha
sqrtps
push
dec
add
xchg
cld
loop
mov
fsub
fsubrl
bsr
adc
mov
sub
aad
xchg
std
xchg
cmpsl
aas
pop
rcrl
insl
mov
imul
mov
push
lcall
fcmovnbe
add
lret
imulb
or
or
out
and
dec
adc
loopne
je
loope
inc
stos
ret
cli
adc
push
xor
mov
hlt
xchg
cmp
int
scas
inc
dec
dec
inc
pop
pop
dec
pop
sbb
arpl
cmp
ljmp
outsl
add
out
xor
mov
and
xlat
mov
nop
arpl
fcomps
addr16
fsubr
in
int3
inc
inc
inc
div
jnp
insb
cmpsb
aam
lock
fdivrl
stc
jp
int
movsl
pop
bound
mov
jg
jne
mov
push
lds
aad
inc
cli
addb
lcall
icebp
imul
inc
scas
ret
push
fidivs
mov
sahf
in
jge
ret
xchg
adc
lret
push
dec
sbb
fsts
cmp
dec
arpl
loope
mov
jmp
arpl
adc
or
pop
jbe
push
sbb
inc
jno
add
addr16
jbe
stos
jae
mov
rcrb
pop
xchg
pop
inc
daa
jae
sbb
xorl
fistl
or
lcall
flds
flds
sub
ret
arpl
filds
pop
test
sub
ljmp
mov
aam
cmp
daa
mov
xor
orl
dec
cmpsl
mov
or
cltd
cmpsb
ljmp
pop
mov
mov
mov
mov
mov
jnp
dec
xchg
mov
sub
jne
jb
rorb
insb
push
pushf
and
int3
shll
in
add
mov
sti
xorb
in
pop
push
sbb
in
mov
test
push
cs
push
lock
fwait
sbb
frstor
clc
shlb
pop
test
pop
lods
addb
pop
dec
inc
mov
adc
out
icebp
push
pop
in
inc
mov
cli
xchg
mov
loopne
adc
rolb
or
inc
addb
sbb
sbb
out
sar
or
push
ds
dec
fs
dec
mov
and
mov
into
aaa
add
enter
das
pand
inc
mov
cld
or
and
data16
andl
stos
sbb
xchg
shr
mov
insb
loop
test
shl
imul
xlat
aam
out
lock
cmpsl
mov
cmp
push
das
mov
fcmovu
loop
mov
inc
sub
mov
stos
jb
and
ljmp
cmp
add
mov
pop
fs
mov
lret
out
daa
mov
loopne
and
sub
inc
shrb
mov
xchg
mov
mov
aad
push
ljmp
jb
xchg
into
out
insb
sahf
adc
lahf
scas
mov
push
test
loop
xor
int
jg
into
or
xchg
mov
loope
sub
adc
sub
cs
sbb
ficomps
fcmovne
and
or
sti
adc
xchg
popf
mov
and
sub
imul
adc
gs
outsb
pop
mov
rorb
lods
pop
mov
arpl
sbb
push
out
or
ds
inc
mov
loope
int3
sbb
add
and
dec
cmp
aam
cmp
stos
cmp
jbe
pusha
lcall
mov
rorb
into
js
jle
movsb
or
push
ljmp
cltd
mov
add
sub
loopew
add
jle
fs
enter
dec
cwtl
push
or
out
push
lods
add
dec
repnz
out
add
sahf
add
xor
adc
outsl
insl
cmp
aas
ljmp
pop
xor
pop
mov
fisubl
aas
jo
xchg
psrad
cld
mov
xchg
or
sub
in
adcb
pop
jb
inc
pop
pop
xor
fdiv
arpl
lret
test
stc
dec
or
xchg
jp
sbb
sbb
call
push
sbb
jmp
push
js
xchg
xchg
jae
fstl
lret
and
mov
push
fcomps
sbbb
adc
fisttpl
lahf
ret
into
cmc
add
jae
xorl
sub
mov
test
mov
jl
add
push
sbb
or
cld
out
dec
call
sbb
divl
int3
pusha
adc
mov
xchg
out
les
push
in
stc
jne
pop
leave
or
xchg
xchg
or
xchg
imul
add
add
testl
lret
and
rcll
inc
and
jle
and
mov
xorl
pop
fldl
xchg
out
inc
imul
dec
mov
iret
lahf
pop
dec
jge
sahf
mov
sahf
cmp
adc
std
push
addr16
iret
mov
jnp
outsb
std
std
dec
and
movsb
sub
and
or
ret
aad
adc
adc
aaa
ljmp
sub
lods
jns
mov
jo
sbb
pop
popa
pop
and
ds
fsubp
push
jo
mov
xchg
xor
xchg
push
fdivs
sub
or
stc
and
lret
jmp
lret
inc
jno
fwait
push
sub
int
push
push
incb
je
push
in
movsb
loopne
popf
shrl
out
dec
stos
mov
push
mov
ret
pop
lds
mov
jns
push
ds
test
in
aam
mov
add
aam
pop
push
cmp
daa
fimull
adc
stos
xchg
add
shl
shll
and
stc
aam
fwait
lds
cmp
add
push
test
push
addl
dec
xchg
fldl
cmp
or
add
hlt
scas
aad
mov
ljmp
cmpb
dec
insl
adc
es
add
jg
movsb
jo
adc
sbb
pusha
pop
lea
inc
gs
outsb
pop
aaa
sar
sub
mov
mov
pop
mov
in
cwtl
out
jae
movsl
lea
sbb
add
ret
jecxz
pusha
and
jmp
mov
mov
adc
sub
cs
mov
add
or
loopew
push
rol
add
add
xchg
xor
adc
std
arpl
repnz
pop
inc
leave
cmp
adc
fimull
addr16
mov
mov
dec
orl
cmp
sahf
pop
push
cmpsl
sbb
mov
push
pop
sub
and
in
push
mov
cld
into
pop
adc
and
lret
sahf
orl
subl
outsl
shll
loopne
testb
sub
jmp
out
push
scas
fisubrl
mov
notl
and
mov
hlt
loop
insl
call
pop
jb
dec
out
mov
out
mov
and
jecxz
pop
lret
aam
mov
xchg
xchg
mov
jg
inc
cmp
popa
push
jge
testb
push
mov
std
subb
push
mov
outsl
push
arpl
pop
addr16
into
push
in
test
mov
xor
xchg
insl
stos
pop
mov
push
jmp
addb
ret
stc
lcall
cmc
cwtl
and
data16
push
adc
pushf
movsb
sub
roll
idivb
sub
sub
inc
cld
and
outsl
mov
cli
out
mov
in
imul
inc
mov
repnz
sub
inc
ret
push
cs
pop
xchg
mov
mov
insb
lret
rorl
mov
add
sub
aas
push
incb
fstpl
sub
push
sbb
shlb
or
jno
push
pusha
scas
sub
lahf
data16
xchg
push
enter
sub
add
std
xchg
sbb
nop
test
int
mov
and
lret
mov
mov
push
int3
xchg
mov
xchg
xor
mov
pop
repnz
sbbb
cltd
cmp
sub
cmp
push
fsubrl
jmp
jmp
ret
dec
cmp
cmovle
cmp
push
test
inc
pusha
leave
mov
pop
pop
test
push
cmp
mov
nop
mov
lret
mov
sub
cmp
adc
icebp
cmc
or
or
inc
out
data16
loop
xlat
lods
mov
adcb
and
mov
pusha
and
add
pop
rclb
aad
repnz
outsl
js
das
sub
orl
push
inc
stos
push
hlt
mov
xor
pop
cmp
ret
mov
cmpb
aad
mov
jg
mov
or
test
cmp
dec
and
lods
pop
mov
aaa
cltd
adc
iret
movntq
add
add
enter
outsl
and
mov
push
in
mov
xchg
jle
pop
mov
lret
xchg
dec
xchg
lret
mov
or
lret
addr16
call
adc
mov
mov
or
int3
cmp
in
out
sub
aad
cmpsl
push
gs
insb
lret
xor
mull
add
std
jmp
push
cmpsb
xchg
xchg
lret
sbbl
out
and
mov
sbb
sub
or
dec
stos
adc
dec
xor
pushf
lods
loop,pt
push
fcmovbe
add
shr
call
pushf
js
std
mov
xor
dec
fs
sbb
dec
push
loope
add
jmp
mov
aad
mov
aad
fdivl
shr
das
mov
hlt
push
enter
and
sub
outsb
pop
divl
adc
js
pop
outsb
cmp
das
pop
inc
adc
dec
dec
fisubrl
adc
stc
lock
sub
sub
and
iret
adc
hlt
sbb
cmp
jl
popf
jmp
cmp
shr
stc
jl
loopne
adc
push
pop
mov
jbe
mov
xor
or
push
jp
das
icebp
in
mov
or
cld
or
fbld
into
mov
stos
mov
push
and
fimuls
insb
testl
push
fldcw
mov
or
adc
mov
pop
outsb
jbe
sub
dec
push
sub
xchg
mov
pop
xchg
or
cwtl
push
ss
mov
jg
mov
mov
sbb
std
pop
aas
cmpsb
jno
ljmp
hlt
fcompl
or
call
mov
lds
cld
repnz
shlb
fwait
pop
push
mov
push
add
pop
leave
xorl
mov
test
fdivr
stc
xor
ja
xor
mov
dec
mov
mov
or
andl
and
push
push
movsb
popa
cmp
aam
loope
and
js
jno
and
pop
xor
dec
out
adc
loop
daa
xor
add
fidivrl
sub
adc
mov
push
aad
sti
cmp
and
and
aam
test
sbbb
pop
inc
jecxz
pop
jp
dec
push
test
inc
mov
aam
dec
lret
mov
add
xchg
mov
cmpsb
jecxz
ljmp
es
fsts
inc
dec
pop
jns
lock
lcall
xor
lahf
out
sub
pop
dec
fnsave
testb
xlat
stos
mov
orl
lcall
and
xchg
ret
and
aam
cld
xlat
jb
shlb
fisubl
daa
movsb
aaa
dec
inc
sub
lea
cmpsl
ret
cwtl
sti
cwtl
pushf
lret
jns
cltd
sub
mov
cwtl
mov
sti
sub
rolb
xor
cwtl
loop
lods
sub
into
cmc
and
int3
decb
inc
xor
mov
mov
data16
cmp
jle
xchg
mov
sbb
scas
push
adc
imul
les
imul
repnz
pusha
inc
or
jmp
cld
or
mov
sub
xor
mov
shl
or
cmp
pop
pop
pop
popa
stos
mov
jbe
and
ss
push
ss
fwait
ljmp
imul
sub
jl
push
sahf
mov
popf
and
xor
pop
stos
sarl
cmp
out
inc
sbb
nop
jp
rcrb
in
or
std
xor
jnp
int
popa
mov
mov
jle
mov
sub
aam
in
jae
xchg
das
sbb
mov
and
pop
inc
fsubrl
popl
inc
ss
mov
hlt
dec
addr16
incb
mov
out
stos
out
mov
pop
push
sahf
mov
or
sub
xchg
sbb
mov
pop
pusha
push
int
int3
lret
cs
pop
xchg
test
out
aad
aas
cmc
mov
iret
test
push
xor
inc
jp
jb
fnstsw
in
loop
ljmp
jo
pop
ja
add
inc
jnp
push
sbb
cmpsb
xchg
mov
xchg
js
movsl
inc
sub
cmp
jecxz
out
mov
push
mov
pop
sti
es
or
orl
stos
push
sbb
mov
aas
in
cld
mov
push
das
xchg
pop
movb
add
lret
sbb
pop
cmpsb
mov
push
inc
jno,pt
stos
inc
inc
push
or
xchg
icebp
insl
push
lock
sub
or
in
cli
mov
push
or
and
arpl
and
stos
jo
dec
loope
pop
lds
lret
shlb
in
fs
pusha
fldl
or
jno
mov
movsb
cwtl
and
mov
inc
pop
pop
loop
push
xor
outsl
sub
jge
xor
rcrl
test
bound
dec
insb
inc
in
xchg
cmc
cli
outsl
cld
add
dec
in
mov
adc
pop
lds
mov
mov
call
nop
mov
scas
fs
jmp
bound
rol
scas
pop
pop
pop
cmpsl
mov
rorl
shl
mov
sub
fcmovnu
daa
add
movsb
test
mov
into
xchg
push
mov
sar
mov
mov
or
out
jecxz
leave
fmuls
das
pop
mov
add
scas
cmpsb
lcall
pushf
pop
test
inc
xchg
pop
jle
push
loop
and
push
pushf
loopne
xchg
xor
push
jp
sub
lcall
xchg
testb
sbb
push
mov
lods
and
imul
pop
and
mov
pop
push
add
orps
test
cmp
jbe
mov
cmp
mov
push
cmp
jmp
xor
jnp
sbb
cwtl
pop
outsl
sbb
neg
inc
aam
jle
add
cmc
lock
xchg
push
les
fildl
or
sub
mov
out
hlt
inc
xchg
in
js
sub
mov
inc
jb
push
pop
jmp
inc
pop
cs
lds
lret
inc
pop
sbb
xor
stc
jns
mov
pushf
inc
mov
add
sahf
cmpsw
leave
outsb
and
nop
dec
xor
daa
xchg
data16
lahf
int
lcall
shl
jbe
jmp
sahf
aad
sti
sub
rol
xchg
pushf
std
sub
push
mov
xchg
mov
jl
push
cmp
mov
rol
xchg
negb
dec
push
ljmp
fwait
jbe
jo
dec
cmp
sbb
ja
lret
cli
cmp
in
sub
or
lock
xchg
mulb
lret
xorl
mov
ss
or
cmpsb
adc
lock
test
gs
jl
dec
pop
lea
dec
aaa
xor
mov
inc
iret
or
ds
pop
lock
dec
and
xchg
or
addl
xchg
addr16
fisubs
ljmp
adc
mov
pop
jns
fdivr
jo
stos
mov
dec
pop
jmp
shlb
cmp
cltd
adc
lods
sub
test
addr16
lcall
sub
xchg
outsb
rolb
mov
stos
ja
fmull
outsb
pop
jne
jecxz
pushf
push
data16
push
mov
popa
aaa
adc
mov
std
sbb
ret
je
iret
in
popa
jb
decb
and
and
imul
adc
add
int3
std
adc
pop
xchg
add
aas
pop
push
dec
lods
test
mov
addr16
xor
fs
adc
test
ss
push
outsb
sarl
insb
xlat
ja
xchg
prefetch
or
bound
xor
imulb
pop
push
jne
hlt
mov
or
push
daa
stos
sbb
in
add
jmp
jp
std
daa
lcall
mov
orl
adc
mov
inc
je
fists
xchg
inc
into
sub
popf
pop
icebp
jno
inc
fldenv
lock
jnp
bound
adc
and
test
call
mov
jmp
cmp
inc
stos
pop
sub
push
and
loop
jg
enter
jmp
xchg
aad
repz
call
and
mov
mov
or
imul
jmp
and
jp
test
repnz
sti
jae
xchg
pusha
les
inc
imul
aaa
pop
jle
int3
test
xor
xor
push
enter
push
lret
mov
fildl
mov
ljmp
ds
lahf
mov
mov
mov
repnz
jno
push
inc
inc
dec
testb
out
mov
mov
mov
out
cli
sub
pop
adc
push
cmpsb
inc
xorb
enter
mov
push
lock
mov
xor
mov
pop
sbb
pop
inc
imulb
adc
test
add
push
pop
fisubs
push
sub
out
jns
sbb
fcmovnbe
push
lret
push
jp
xchg
mov
out
and
pop
and
and
sbb
dec
popf
sub
cmp
push
or
pushf
mov
cmp
push
inc
inc
mov
push
xor
mov
outsb
cmp
das
dec
fsubrp
adc
testl
test
rcl
mov
xor
mov
sub
loope
into
cltd
pop
je
cld
xchg
loopne
sti
lahf
sarl
ja
int
jecxz
std
mov
rcll
sti
mov
rorb
insl
mov
das
pop
xchg
mov
and
ret
inc
into
shll
mov
adc
mov
cld
pop
cmp
sbb
or
push
outsl
or
push
xchg
sbb
std
push
clc
pop
pop
std
push
ret
testb
mov
aaa
out
fisttps
out
js
insl
rcrl
inc
jecxz
add
je
dec
mov
adc
imul
bound
cmp
and
sbb
mov
test
test
test
sub
ficomps
stos
mov
pop
out
stos
call
in
jle
xor
adc
call
in
inc
out
xchg
adc
daa
mov
pop
jae
fdiv
inc
mov
jg
outsb
popf
nop
xchg
out
mov
jbe
jl
gs
fs
fwait
movsb
sbb
rcrl
push
xor
mov
xchg
jecxz
test
fcoml
mov
sbb
add
push
dec
mov
mov
scas
scas
divb
lret
dec
jecxz
repz
pop
push
inc
xchg
sahf
mov
ja
xor
pop
stc
mov
mov
or
lock
cwtl
dec
stos
xor
scas
aaa
inc
pcmpgtw
mov
int3
roll
icebp
sub
sbb
fwait
sub
inc
mov
cmp
sub
lock
push
sub
cmpb
jge
cltd
mov
xor
or
fisubs
sub
mov
xor
inc
push
iret
aas
jmp
xchg
mov
repnz
adc
and
jmp
outsl
sbb
sahf
add
dec
cwtl
sub
rclb
dec
ds
mov
and
jnp
in
jp
into
pop
mov
inc
fwait
cld
push
std
mov
stos
mov
test
aam
fwait
arpl
cmc
int
push
mov
pushf
mov
in
mov
mov
mov
mov
repz
ds
sbb
add
daa
movsb
outsb
push
data16
or
sbb
jno
ja
sub
shlb
pop
inc
inc
fs
xrelease
dec
pop
adc
fsts
lcall
jge
sbb
loopne
sbb
scas
adc
fcoml
loop
cmp
jl
pop
std
dec
pop
ret
mov
test
xor
adc
or
mov
xorl
loope
stos
call
pop
stos
roll
sbb
mov
or
addr16
pop
mov
jnp
and
dec
push
and
enter
idivl
pop
mov
cmpsl
mov
mov
stos
fs
pop
in
lods
jl
add
cmpsl
mov
loope
in
pop
inc
dec
stc
rorb
mov
mov
push
fmull
and
call
daa
addr16
fstpt
xlat
sub
sub
xchg
cmp
stos
pop
fidivrl
ja
jbe
aaa
fnstenv
or
xlat
out
xor
popa
ret
cmpl
lret
inc
inc
add
orb
paddusb
xor
call
sub
xor
push
pop
xlat
jb
fisubl
mov
push
jo
adc
aaa
add
mov
xor
fmuls
movsl
les
fwait
jl
ss
inc
xor
lods
ret
je
jl
out
xor
cwtl
hlt
or
fs
and
cld
test
rcll
jg
loop
push
xchg
push
pop
sub
sbb
int
js
sbb
rcrb
push
outsl
iret
sti
mov
dec
mov
fimuls
mov
jnp
es
sub
test
inc
and
in
jmp
shlb
xlat
jmp
lods
adc
mov
push
push
sahf
and
xor
dec
sbb
outsl
lea
push
xchg
sbb
sbb
in
mov
inc
arpl
call
iret
jmp
mov
jg
rcrl
std
das
pop
cmp
cmc
adc
pop
lahf
or
ret
mov
and
loop
mov
or
fdivl
sbbb
xor
cmp
loope
fwait
and
jbe
out
adc
mov
sti
or
insb
ja
pop
pushf
add
add
or
aad
pop
rol
push
and
ds
std
test
sbb
in
popa
and
jne
roll
scas
out
out
add
push
sbb
scas
mov
fisttps
in
jecxz
out
xor
sti
aam
push
insb
rolb
jg
shl
test
pop
inc
shlb
mov
lock
pop
xchg
jmp
jmp
xor
inc
jle
test
les
and
repz
lods
stos
jno
mov
icebp
pop
push
or
cld
fsub
ljmp
pushf
mov
ljmp
xor
lret
push
das
lock
loop
add
aaa
shll
sub
push
xchg
in
shr
arpl
xchg
loope
push
mov
mov
or
xlat
inc
arpl
jbe
ret
mov
ficoms
inc
in
mov
fstps
jle
mov
arpl
mov
jnp
or
jge
mov
arpl
mov
int
orb
rclb
dec
ret
repnz
push
shll
jge
lret
dec
fcomps
xchg
cmp
push
jmp
ret
rcrb
mov
cmp
neg
mov
imul
adc
and
jns
pop
andb
mov
mulb
mov
lds
out
stc
mov
sbb
jg
repnz
enter
sub
push
popf
scas
out
push
daa
cmpsl
jnp
orl
add
xor
aaa
jo
lret
fnstsw
out
jne
xor
stc
movsl
sbbb
out
popa
loop
mov
fldt
pop
stos
mov
push
xor
enter
int3
sbb
adc
xchg
push
int3
idivl
push
adc
sub
data16
xchg
std
pop
fcompl
aas
fistpl
xchg
or
mov
loopne
test
push
mov
roll
fdivrs
frstor
mov
incb
cmp
mov
mov
add
inc
add
inc
push
pop
cwtl
rol
lods
and
lods
inc
cmp
pop
outsb
cmp
in
cmpsl
inc
pop
enter
push
sbb
ja
mov
clc
jg
inc
fisttpll
mov
sbb
inc
sub
js
push
ret
push
rolb
pop
lock
arpl
lret
sarb
mov
rclb
cmpsl
ds
mov
xchg
subl
add
cs
ja
ss
xor
aas
sub
rorl
clc
shlb
cmp
lock
int
in
out
je
rorb
mov
push
cltd
inc
getsec
xor
lcall
adc
test
out
bound
xor
add
lock
mov
sbb
je
sbb
lret
xchg
sub
cmpsb
mov
xchg
mov
repz
xchg
mov
fistps
sub
cld
pusha
out
push
sahf
cmp
out
bound
xorb
inc
loop
repz
cmp
imul
xlat
sbb
add
neg
les
jp
gs
xchg
gs
inc
scas
pop
ss
shll
lcall
jg
in
xchg
inc
clc
inc
jns
sbb
sub
sbb
mov
xchg
fcompl
gs
add
push
adc
pop
sbb
out
icebp
fidivrs
mov
aaa
repnz
sub
jp
mull
jmp
mov
pop
sbb
and
fnstcw
jno
loop
ljmpw
cmpl
sbb
mov
cmc
nop
sbbb
xchg
int
adc
test
add
popa
dec
call
sub
cmp
addl
mov
jmp
stos
sub
jae
cmpsb
aam
inc
push
iret
cmp
dec
add
mov
cs
loopne
and
lds
pop
sub
int
fisubl
pop
sub
mov
rcll
sub
ds
mov
ror
cld
push
inc
jmp
push
lods
xor
out
jne
loop
pop
jp
aas
or
xchg
cwtl
dec
aas
out
push
add
jns
sub
jne
mov
sbb
in
cmpsb
aad
ret
dec
es
cmp
adc
and
fnsave
andl
sub
aas
hlt
stos
mov
rorl
push
push
inc
movsl
sbb
daa
les
dec
mov
mov
mov
imul
scas
inc
mov
and
lods
mov
inc
leave
adc
mov
in
mov
mov
and
xor
sbb
mov
je
lock
jl
jo
loopne
stc
pop
cwtl
jae
adc
subb
aam
loope
cmp
sbb
sarb
lea
adc
xor
push
mov
pusha
push
jg
repz
fs
mov
dec
arpl
mov
jge,pn
sub
jns
mov
pop
xchg
dec
roll
out
pusha
mov
xchg
jg
inc
imul
imul
xor
fmulp
xor
pop
mov
out
enter
cwtl
sub
loopne
mov
sahf
mov
lahf
and
and
fistps
adc
inc
daa
dec
xor
pop
push
or
popa
xchg
sbb
adc
lcallw
scas
repz
std
adc
jg
pop
add
mov
sub
aam
scas
adc
dec
and
js
mov
xor
test
out
sbbl
jge
repz
sbb
les
and
xchg
arpl
pop
icebp
cmp
imul
outsl
test
out
cld
call
push
cli
stos
mov
andb
pushf
inc
fwait
daa
mov
lret
ret
jne
jb
sub
pop
popa
inc
mov
mov
aad
cmpsb
xchg
ret
xchg
push
out
pushf
sbb
push
cld
push
adc
and
mov
mov
aas
cwtl
ljmp
xchg
jo
std
add
adc
shrb
lods
or
fistpl
sbb
mov
ljmp
xchg
out
jnp
mov
fsubs
lcall
add
inc
pop
or
cmpsb
insl
jo,pt
shlb
mov
mov
mov
dec
fcoml
aam
adc
dec
dec
dec
mov
inc
lea
mov
inc
pop
scas
sbb
mov
popa
sbb
loopne
in
loopne
mov
fsts
jnp
xor
sub
je
mov
sub
cs
xor
enter
inc
sub
cmp
nop
dec
jno
cmpsb
push
mov
and
mov
out
mov
push
hlt
xchg
jmp
cmp
in
rcl
lret
test
xor
ret
jmp
pop
sub
loope
jp
xlat
push
add
pop
xlat
repz
arpl
idivb
jecxz
in
jo
icebp
add
loopne
rolb
cmp
hlt
push
lahf
xchg
xlat
pop
aam
rorl
movsb
int
mov
or
mov
cwtl
pop
mov
lret
or
aaa
mov
lds
test
push
xor
aad
dec
xlat
cmp
mov
test
xchg
or
hlt
jo
je
js
xor
addr16
das
nop
or
cmp
outsb
addr16
out
pop
orl
inc
mov
mov
or
jb
mov
je
in
xchg
mov
add
push
sub
fiadds
push
cmp
scas
mov
les
xchg
pop
imulb
xor
or
xlat
cmp
filds
jecxz,pt
in
mov
dec
hlt
enter
pop
repnz
mov
das
cmpsb
sbb
or
fldt
stos
jnp
rcrl
and
sar
push
lahf
sti
out
xchg
stc
rcrb
orl
and
mov
fs
andl
add
mov
iret
pop
es
jp
and
in
cli
cs
dec
xchg
ret
xchg
movsb
xchg
add
mov
xchg
add
jae
sub
fadd
or
mov
lret
aaa
cmpsl
sbb
adc
pushf
scas
push
dec
pop
imul
cltd
stos
jl
orb
rcrb
popf
and
aaa
pushf
sahf
aad
mov
push
and
sbb
out
add
rorl
out
dec
sbb
mov
ljmp
add
dec
icebp
addb
addb
xchg
lahf
pop
pop
sbb
cs
jne
scas
call
ljmp
call
cmp
lret
dec
sub
mov
pushf
scas
or
xchg
pusha
mov
sbb
mov
push
sbbl
jns
ds
xor
es
sbbb
andb
sbb
inc
in
ljmp
std
test
test
dec
out
stc
dec
in
in
out
mov
and
lret
in
fdivl
es
xchg
cs
aas
inc
pop
jp
pop
mov
cwtl
fidivs
mov
sub
inc
push
mov
jge
sub
pop
lret
sbb
xor
cmp
mov
loopne
loope
and
xor
dec
rorl
xchg
dec
pop
shll
fstps
pushf
ficompl
dec
int3
jns
call
mov
daa
insl
addr16
mov
pop
test
rclb
adc
ds
mov
xchg
fucomi
sti
aaa
mov
xchg
xor
gs
shlb
out
stos
jmp
xor
xor
dec
lea
or
jno
in
and
sub
jecxz
mov
mov
cmp
push
sbb
dec
stc
sbb
rolb
aaa
mov
mov
push
out
add
std
div
add
clc
mov
mov
inc
dec
testb
mov
xchg
test
movsl
andl
dec
leave
pusha
in
xor
test
incb
jle
pop
cmp
cmpsl
pushf
jb
jmp
xchg
roll
mov
jle
fdivr
insb
pop
and
and
aam
movsb
aam
mov
fs
ja
nop
inc
jl
mov
repnz
pop
pusha
lds
icebp
or
jp
shrl
pop
sbb
mov
fbstp
inc
xchg
and
mov
push
and
ja
add
jns
cmp
out
sbb
in
repnz
dec
dec
test
dec
mov
pop
test
loop
out
add
push
nop
imul
push
mov
inc
int
push
out
dec
inc
cld
iret
jg
jne
cmp
int
das
xor
pop
pop
adc
mov
lcall
stos
add
mov
push
call
push
dec
xlat
jns
or
cmp
adc
gs
lret
xchg
sbb
cld
cmp
in
dec
arpl
outsl
aas
js
pmuludq
fidivrl
insl
mov
mov
mov
pop
pop
xor
sbb
sub
sub
je
cmp
in
movsb
jo
outsl
push
mov
dec
mov
pop
cs
sub
and
pop
inc
xor
jb
scas
out
inc
test
sub
mov
cli
mov
sbb
mov
jns
in
dec
test
mov
pop
es
and
test
mov
xlat
test
mov
sbb
aad
dec
dec
jmp
in
pop
xchg
dec
outsl
lret
insl
shlb
stos
sarb
xor
lock
testb
xchg
aam
mov
sbb
mov
sub
shr
sti
pop
cld
lcall
mov
mov
addr16
test
xchg
ret
mov
or
movsb
jae
test
sbb
xor
sub
lahf
jp
adc
jmp
and
adc
and
je
jns
popf
gs
test
sbb
xor
sub
mov
cld
pop
push
lahf
xchg
addr16
test
imul
stos
or
lods
adc
movsl
mov
leave
pop
shll
adc
xchg
hlt
sahf
js
popf
mov
pop
push
xchg
hlt
push
adc
push
mov
jmp
push
fstpl
sbb
mov
jge
rcll
fdivr
xor
mov
push
cmp
or
add
xor
sbb
mov
sub
adc
sbb
fldl
popw
scas
pop
pusha
xchg
mov
jbe
mov
or
orb
and
std
pop
inc
mov
fwait
adc
scas
mov
mov
mov
jb
cmp
std
lea
pop
xchg
inc
or
pop
icebp
jmp
aam
nop
stos
xchg
xchg
or
add
insb
push
xor
mov
jp
stos
sarb
out
leave
scas
mov
cmp
sbb
push
jg
mov
mov
insl
repnz
push
test
inc
enter
pop
imul
pop
std
jno
sbb
jmp
aas
sbb
aad
mov
push
mov
fs
adc
divb
dec
dec
mov
jno
jnp
fadds
pop
sbb
gs
inc
pop
mov
lret
or
imul
xchg
fbld
or
dec
imul
test
std
addr16
jae
mov
mov
cli
enter
dec
out
sub
pushf
je
leave
aaa
inc
lock
xchg
mov
sahf
loopne
lcall
scas
sub
out
jbe
sub
sub
out
push
test
stos
dec
cli
mov
lea
cli
test
add
ljmp
lcall
je
mov
cmc
out
pop
jg
mov
faddl
sub
dec
call
dec
insl
iret
aas
push
sti
mov
mov
fistps
out
mov
cmp
mov
mov
or
inc
fcomi
cmc
mov
cmpsb
mov
jp
sbb
mov
dec
mov
mov
and
jne
jo
push
stc
lret
rcll
xor
mov
sbb
xchg
xchg
sbb
cli
out
push
or
mov
mov
sbb
jns
inc
and
mov
fsubrs
shll
data16
jle
cwtl
dec
fucomi
pop
push
call
jo
test
and
xor
xchg
testb
push
imul
push
dec
hlt
cmp
jne
cmp
cwtl
dec
in
icebp
or
add
and
xor
inc
fcoml
or
push
int3
mov
lret
mov
mov
add
enter
js
lret
sbbb
pop
fisttpll
enter
sbb
push
cli
pushf
shrb
hlt
dec
xlat
dec
lods
mov
lcall
or
sbb
mov
mov
addr16
fs
and
jbe
ds
push
filds
repnz
addr16
mov
adc
lret
jbe
popf
push
sub
aam
pop
push
mov
daa
ds
dec
mov
stc
popa
int3
dec
jbe
push
jne
cmpl
jge
lods
sub
jno
cld
sbbl
lret
fs
cwtl
or
and
ja,pn
push
rorb
push
rcrl
ret
xor
pop
aaa
push
cmp
imul
pop
fwait
push
push
popf
dec
movsl
dec
sub
xor
jl
inc
push
lret
pop
loop
sub
mov
mov
jmp
cmp
push
int
mov
cmp
jo
xchg
mov
idivl
fbld
imul
mov
add
pop
pop
xor
dec
fmuls
mov
mov
loop
or
sarl
cwtl
cli
addr16
sbb
xor
xor
cld
mov
mov
mov
jns
mov
mov
push
loopne
xchg
sub
add
jo
push
mov
sub
adc
cs
inc
pusha
imulb
xchg
popa
adc
cmp
jbe
xchg
stos
adc
or
movsb
mov
cmp
ss
repnz
das
iret
out
lock
xchg
push
lods
loop
scas
sbb
arpl
cmp
enter
sub
in
repz
adc
mov
int3
imul
sbb
fdivrs
jne
pop
cld
data16
dec
imul
push
fstpl
jae
jb
fdivl
add
js
and
stos
fwait
adc
or
adc
mov
fistpll
or
dec
push
jg
or
jmp
inc
repnz
mov
scas
xor
sbb
mov
sub
scas
nop
vpsrad
cmp
outsb
pop
jae
push
dec
cmc
and
clc
push
mov
adc
add
ljmp
inc
mull
mov
notl
aad
xchg
and
mov
imul
add
sbb
adc
fmull
xchg
mov
mov
or
mov
popf
ljmp
mov
sub
mov
in
pop
mov
cmp
push
fistpll
pop
mov
inc
hlt
vfrczsd
inc
inc
add
ror
add
push
movb
out
pop
or
push
sub
ficoml
push
push
lcall
je
daa
mov
xchg
cmp
lret
push
sbb
insb
adc
fs
push
mov
fcomps
out
mov
aaa
push
xlat
ret
movsl
fisttpll
lret
jno
inc
fsts
jmp
rcrb
mov
sahf
out
mov
inc
sub
push
dec
and
xchg
fdivrp
dec
or
sub
adc
inc
xor
dec
pop
ss
xor
ret
stos
stos
lock
add
push
push
pop
imul
fdivl
shll
rol
cmp
pop
outsl
ret
mov
mov
test
jno
cltd
popa
pop
mov
jle
xchg
aaa
xchg
movsb
push
repnz
pop
add
out
pop
adc
mov
add
xchg
mov
jge
push
mov
mov
mov
mov
jns
push
jecxz
jne
add
or
dec
xchg
in
jmp
mov
xchg
jne
lock
ljmp
popa
dec
sub
xchg
fwait
mov
xor
push
sub
and
jbe
imul
and
jns
jne
test
add
je
inc
jbe
mov
push
push
add
inc
lea
scas
shrl
sub
add
fcoms
dec
cmpsl
xchg
xor
fucomp
dec
outsb
or
subb
sub
push
out
movsb
cmp
sbb
test
aam
sbb
loopne
adc
xor
lret
lock
insb
cmp
lcall
cmp
arpl
mov
stc
pop
jg
testl
inc
movsb
push
jnp
daa
cwtl
push
jg
sahf
inc
test
out
call
lahf
xor
xor
iret
arpl
fimull
or
test
or
sbb
cld
mov
or
dec
fwait
ds
arpl
xchg
mov
ja,pt
xchg
mov
sbb
sbb
ret
scas
lret
sarb
jle
cmp
int3
jo
push
insl
push
adc
or
jns
jno
mov
or
fwait
add
xlat
xor
or
mov
pop
ret
repz
push
adc
jo
pop
imul
mov
adc
leave
sub
adc
mov
push
mov
push
adc
xlat
ja
xchg
les
pop
cld
pop
sbb
jge
cmp
inc
adc
adc
xchg
inc
mov
in
lcall
jge
mov
mov
aad
loope
pop
arpl
sbb
out
sets
xchg
mov
push
xchg
decb
loop
in
nop
dec
jb
jmp
mov
ret
cmp
shlb
adc
loopne
inc
std
xchg
push
addr16
mov
mov
and
jo
jp
loope
inc
sbb
add
popa
out
adc
inc
fs
ds
test
mov
ror
lods
xor
std
mov
xor
adc
xor
push
adc
xchg
imul
inc
and
iret
into
in
test
or
push
repz
leave
fnstenv
and
in
push
pop
xor
rcrb
jns
push
scas
je
cmc
mov
fisubl
sbb
in
mov
sub
sub
fstps
aad
or
jne
out
or
jnp
or
jecxz
neg
repz
push
in
jl
sub
mov
jo
sub
xchg
inc
mov
xchg
xacquire
mov
pop
xor
jl
test
out
push
mov
push
fsubr
arpl
pushf
sarb
insl
movsb
dec
rcl
and
nop
in
add
repz
out
rcrl
test
cmp
in
jnp
stc
sub
sbb
push
fistl
subl
xor
fadds
lcall
mov
mov
imul
push
lret
stos
les
dec
int3
sub
add
stos
lock
mov
jo
sbb
or
xchg
popa
loope
xchg
add
mov
jg
and
xor
sub
xchg
dec
fnsave
or
dec
adc
in
mov
mov
outsl
mov
fldcw
jle
pop
dec
imul
pop
fs
mov
notb
cld
pop
adc
popa
xchg
orb
mov
xor
jp
sub
push
xchg
cmp
inc
dec
fmull
lret
js
fildl
sbb
aad
sub
mov
sub
push
dec
and
jbe
test
and
adc
insb
call
adc
imul
cmpsb
repnz
mov
cltd
popa
mov
dec
popf
adc
jle
movsl
adc
mov
aad
out
mov
mov
push
fildll
sub
ret
mov
std
sahf
movsl
push
arpl
test
jae
mov
xchg
xchg
ljmp
call
daa
ret
bnd
mov
and
inc
cs
gs
movsb
cmp
xor
mov
ja
cmpsb
mov
push
jb
pop
ret
jne
mov
adc
jne
mov
sbb
xor
lahf
cmp
dec
data16
iret
sub
pop
dec
cmp
iret
mov
mov
dec
lcall
add
jge
fdivr
ja
lea
clc
clc
pushf
and
cmp
dec
push
sub
leave
jbe
jmp
test
lea
jge
mov
jmp
roll
or
xchg
push
js
mov
fnstenv
add
jmp
xor
outsb
mov
inc
mov
inc
and
fwait
in
and
add
pop
jle
xchg
fstpt
mov
fsubrl
xor
mov
mov
aaa
xor
test
daa
fstps
xchg
es
lret
mov
jmp
pop
mov
loop
add
jp
lret
sar
mov
inc
or
shlb
cli
push
in
inc
xor
mov
mov
loop
lret
xchg
mov
imul
cmp
sub
jg
lea
int
sub
neg
inc
inc
pop
out
sbb
add
in
mov
mov
test
inc
push
sub
dec
mov
js
cmp
loop
mov
mov
xchg
mov
insl
sarb
scas
or
fldcw
movsl
sbb
or
stos
mov
jne
aas
shlb
das
and
lods
pop
stc
insl
outsb
pop
adc
iret
or
mov
inc
nopl
pushf
cli
fsubs
sbb
lcall
sbb
jbe
mov
fistps
scas
xchg
fldl
cli
xchg
in
mov
adc
sub
sbb
sarb
cmp
jmp
sub
and
mov
lcall
addr16
idivb
jns
jno
mov
es
sbb
mov
inc
cmc
dec
inc
jmp
cltd
xchg
xchg
push
les
test
push
mov
cs
test
add
push
clc
cwtl
cmp
dec
loop
repz
inc
les
stos
mov
jne
ficompl
int3
sbb
lods
jmp
and
imul
lods
or
dec
push
scas
and
jge
mov
negb
bound
dec
inc
bound
into
nop
push
popa
fldenv
sub
dec
cld
xor
jg
jne
mov
iret
arpl
and
inc
mov
rcrb
ljmp
cltd
or
mov
jne
adc
inc
insb
pop
xor
ficoml
or
in
fsubs
push
out
and
mov
test
mov
xchg
aas
mov
call
add
mov
jecxz
adc
fsubl
movsb
lret
rorb
lds
push
addr16
or
fidivrl
lahf
mov
test
pop
loop
outsb
ret
or
xchg
les
repnz
sahf
and
test
mov
adc
ret
inc
cmove
pop
or
jecxz
fisubs
adc
or
leave
xchg
imul
or
hlt
inc
mov
out
test
add
cmpl
and
arpl
test
in
inc
sti
test
add
out
sub
add
gs
xchg
jecxz
mov
sbb
incl
jno
push
mov
xchg
out
int
les
dec
xchg
stc
and
and
jbe
mov
clc
push
mov
sub
fldt
lock
lock
icebp
xchg
loopne
cltd
sub
jns
sbb
mov
inc
imul
xor
xor
pop
or
pop
sti
cltd
out
enter
push
jl
out
pop
cwtl
ret
loope
int3
xor
test
mov
xchg
outsl
outsb
into
pusha
cltd
adc
pusha
jecxz
push
hlt
pop
inc
int
enter
mov
and
scas
sub
ja
dec
sbb
ret
xadd
imul
mov
mov
icebp
scas
push
lods
rorl
call
push
inc
jl
add
ljmp
pusha
ja
cmp
mov
mov
and
ret
mov
pushf
dec
lret
jbe
cmpsl
hlt
int3
xor
or
sbb
adc
add
xchg
sbb
mov
mov
movsl
icebp
cwtl
int
popf
jb
leave
lds
jne
bswap
inc
mov
push
lea
mov
fisubl
mov
cmp
fwait
xchg
ret
xchg
enter
mov
inc
daa
pop
add
testb
mov
jmp
jle
je
jle
push
inc
clc
daa
xchg
shrl
or
inc
es
inc
fidivrl
fdivrs
sbb
lahf
mov
xor
dec
rclb
lret
mov
clc
jb
out
jne
mov
xor
icebp
fwait
jecxz
push
dec
inc
out
dec
jmp
adc
dec
sbb
push
sbbl
shrb
imul
xchg
cmp
das
xchg
repnz
sub
ret
sbb
popa
mov
cmpsl
fstl
pop
inc
xchg
sarb
and
icebp
xchg
clc
pop
pop
cltd
out
imul
movsb
in
ljmp
pop
adc
mov
cmpb
ljmp
sbb
dec
push
loopne
add
push
or
sub
out
pop
sub
test
mov
outsl
pop
ljmp
mov
and
pushf
hlt
mov
cmp
rcl
mov
rcrb
xor
mov
ss
inc
adcl
adc
jg
push
xchg
js
pop
lods
test
pop
addr16
mov
and
lahf
outsb
or
stos
pop
dec
pop
in
push
roll
sbb
mov
hlt
imul
xchg
pop
push
test
negb
mov
cmpsl
ss
pop
mov
jne
jne
in
fs
repnz
sub
movsb
stos
movb
stos
pop
xchg
inc
ss
scas
xchg
lock
cli
pushf
lds
or
inc
dec
and
out
xchg
and
adc
call
aad
stos
mov
imul
lods
sub
imul
sub
adc
std
mov
sbb
pop
jle
mov
and
test
fimull
test
js
in
rol
repnz
jecxz
mov
test
jle
xchg
aas
scas
inc
dec
sbb
fucomip
js
and
sbb
imul
aas
sbb
add
or
imul
jge
jo
push
push
add
fdivrl
movsl
imul
dec
xor
adc
pushl
mov
fdiv
cmc
jmp
orl
mov
or
subl
in
jo
aam
stc
imul
imul
add
enter
sarb
outsl
inc
pop
mov
add
pop
and
icebp
fsubp
out
or
sbb
es
push
or
mov
out
lock
xor
stos
xchg
push
xor
and
push
cmp
dec
push
dec
push
mov
sub
jae
loopne
mov
sti
add
scas
sbb
xchg
cmp
je
int
loop
fiadds
cmp
clc
pusha
test
test
bound
jns
mov
and
pop
xor
rol
jbe
aaa
xchg
nop
aaa
mov
add
lods
pop
in
imul
xchg
fnstenv
add
bound
call
sub
mov
aam
or
ss
xchg
js
pop
clc
lods
outsb
daa
mov
outsl
xchg
xchg
loopne
sar
or
sbb
decb
fnsave
jae
ret
xchg
test
and
mov
sbb
adc
mov
mov
pop
cmp
inc
push
or
inc
push
shr
sbb
pop
inc
je
add
cwtl
imul
ret
aad
lock
mov
test
xchg
mov
mov
das
add
inc
xlat
xchg
lds
out
inc
pop
iret
shrl
xor
mov
mov
sbb
adc
andl
add
arpl
in
pop
test
arpl
xchg
dec
aas
ret
shll
adcl
xchg
adc
mov
add
ja
mov
out
cwtl
xor
cmp
js
out
sti
fisubl
xchg
pop
sub
mov
pop
ja
mov
add
push
xchg
push
dec
add
sarb
stos
mov
mov
es
push
push
imul
fdivs
mov
imul
decb
or
add
fstps
out
jge
adc
push
clc
faddl
jle
inc
dec
sbb
cld
loop
cmp
int3
mov
xor
pop
xchg
mov
into
out
push
scas
sbb
push
inc
mov
xchg
movsl
sti
rcrl
test
int3
or
adc
mov
push
pop
xor
stos
jle
gs
lret
cs
push
outsb
adc
movzbl
add
pop
shlb
roll
outsb
xchg
xchg
and
xchg
insb
hlt
addr16
and
cwtl
jge
stc
fstps
dec
addr16
dec
cmp
inc
cmpsb
bound
sub
test
mov
xchg
push
and
daa
loopne
adc
mov
jnp
rclb
stc
mov
jle
adc
lret
leave
jb
icebp
xlat
icebp
faddl
sbb
xor
aaa
les
insb
mov
push
xor
sarl
push
jnp
dec
cmpsl
adc
and
xor
mov
test
fistpll
pop
inc
das
or
cmp
jne
popf
mov
mov
je
aaa
sub
and
and
xchg
push
pop
xchg
lds
or
mov
dec
jle
rcll
adc
lret
mov
cmp
sbb
mov
stos
mov
pop
sti
or
dec
sub
jae
repz
imul
push
pop
lahf
xor
cld
dec
scas
add
je
xorb
adc
cmp
pusha
lret
jecxz
fisttpl
mov
cmp
jl
xchg
rorl
push
ret
jbe
imul
push
in
mov
inc
or
pop
aas
sahf
roll
mov
dec
xchg
cltd
lcall
mov
fnstenv
mov
call
adc
sub
pop
insl
and
mov
cli
sub
sbb
cmp
or
xor
pusha
or
cmp
js
outsl
cmp
jne
jmp
add
mov
or
pop
sbb
outsl
mov
push
adc
loop
jae
das
jmp
lods
adc
sbb
fnstenv
adc
sarb
cmp
pop
test
mov
aad
and
dec
fstl
pop
mov
mov
sbb
jb
daa
sub
das
out
cmp
sbb
cltd
sti
ret
cmp
cmp
sti
movsb
lods
lock
rcl
mov
pushf
mov
adc
add
jno
loop
aas
add
fsubrs
push
test
es
cltd
daa
mov
cld
xchg
sti
xchg
or
sbb
icebp
das
movsl
imul
std
mov
mov
dec
mov
mov
stos
or
adc
add
in
dec
sub
xor
push
cs
in
sub
pop
ds
pop
push
jge
push
stos
stc
icebp
and
xor
fiaddl
push
outsb
dec
je
sti
nop
and
lds
movsl
dec
sub
arpl
nop
pop
notl
or
daa
movsl
sub
clc
dec
xchg
les
divb
sar
dec
fs
lds
xorb
outsb
rorl
sar
ljmp
pop
aas
sbb
dec
mov
loopne
jne
jno
daa
sbb
or
inc
mov
jae
test
decb
pop
cmp
fcmovb
mov
dec
xchg
test
ficoml
lcall
xchg
adc
aaa
adc
clc
mov
cs
jl
into
mov
inc
mov
mov
out
pop
inc
pusha
shll
test
into
cmpsl
push
pushl
movsl
call
gs
mov
lea
mov
xor
pushf
mov
push
sbb
sarb
xor
adc
in
jns
jmp
fisubs
lret
jle
outsl
adc
ss
mov
hlt
or
fcoms
pop
cwtl
scas
pop
aaa
mov
push
sub
movsl
cpuid
out
and
cmp
out
mov
xor
icebp
xchg
jge
mov
sbb
sti
das
xor
sub
add
and
jo
jne
pop
inc
std
ljmp
sbb
dec
sub
notl
enter
mov
dec
and
ret
fcomps
cmp
idivb
incl
in
jb
pop
jno
cmp
daa
ja
lock
jle
aad
add
pop
dec
and
jp
nop
push
mov
sbb
sub
jne
es
shrl
and
lods
loope
repnz
push
aaa
add
sbb
cmc
unpckhps
imul
and
daa
xchg
ds
dec
cli
xor
push
ret
je
pop
pop
jns
imul
aaa
imul
repnz
out
add
pop
add
dec
ret
mov
enter
xchg
fisubrl
jle
shrl
loop
mov
outsb
jno
daa
adc
cmp
ds
bound
arpl
pop
daa
sub
jl
in
xlat
mov
mov
mov
inc
add
mull
push
mov
js
cmp
adc
mov
xor
dec
mov
mov
sti
inc
sbb
in
mov
add
int3
xchg
mov
pop
sub
fsub
xchg
add
cli
push
or
mov
sbb
mov
rcl
cmpsl
pop
add
mov
jb
frstor
push
mov
mov
loopne
or
pop
dec
push
jne
xor
sbb
inc
sti
cmp
iret
out
jo
cld
mov
in
lds
mov
loopne
int3
lock
ret
scas
out
dec
lcall
or
push
aad
out
ss
jo
test
inc
cmp
leave
mov
cmp
jmp
iret
hlt
mov
lds
sub
xchg
push
rorb
popf
stos
add
and
mov
sbb
adc
jbe
xor
popl
outsb
inc
jg
inc
ret
cmp
jo
insl
push
int3
decb
jge
mov
mov
lods
push
mov
leave
stos
popa
jle
std
push
pop
mov
mov
mov
sarl
xchg
lds
and
jg
mov
pop
inc
inc
adc
jno
imulb
shrl
cmpsl
lret
daa
lds
mov
aas
ja
in
stos
cmpsl
add
xchg
sbb
mov
lret
add
sub
movsl
mov
jae
fildl
xchg
sbb
and
btr
xchg
outsl
jl
mov
dec
push
sbb
imul
aad
xlat
dec
push
and
leave
mov
pushf
pop
out
xchg
or
jmp
scas
mov
sub
imul
sbb
notb
jae
inc
mov
dec
dec
sbb
sti
jmp
and
loop
nop
ret
jno
sti
sub
dec
lcall
cmc
das
sbb
insl
ret
xor
or
rclb
mov
pop
mov
cmp
lret
sub
stc
adcb
fistl
sbb
rcr
dec
daa
das
mov
mov
mov
push
int
fildl
mov
dec
addb
hlt
push
push
or
stos
mov
pop
dec
mov
ljmp
rol
filds
xor
bound
repz
lea
mov
sbb
cmpsl
dec
out
cmp
push
iret
jl
ljmp
jns
cmp
sbb
sub
pop
mov
xchg
hlt
aas
xor
add
lock
gs
mov
stos
sbb
imul
imul
sub
inc
fsubrs
and
jne
scas
movsl
and
jns
lods
sub
cltd
stc
ret
mov
ret
mul
mov
adc
shr
mov
cmc
mov
mov
stos
or
stos
mov
cmp
dec
lahf
ja
jns
dec
mov
push
and
jbe
pop
and
movsb
pop
popa
sub
scas
inc
leave
inc
adc
out
fdivrl
pusha
inc
stos
or
outsl
mov
stc
pop
int3
aas
push
pop
cmp
xchg
cld
pop
mov
outsb
lea
xchg
and
mov
mov
jo
push
mov
jge
out
jns
fnop
repnz
mov
sbb
fldenv
test
jae
hlt
filds
adc
xchg
out
mov
int
inc
jb
jp
sub
fcoms
add
call
jmp
mov
ds
mov
and
out
jae
mov
jbe
popa
pop
mov
inc
mov
inc
fdivp
sbb
sub
xor
aam
notb
mov
mov
inc
xor
in
mov
dec
aas
jns
out
imul
mov
fs
pop
mov
mov
data16
pop
mov
or
mov
pop
cmp
xchg
mov
lcall
or
xchg
add
push
push
icebp
enter
or
cmp
mov
mov
xor
xor
pop
arpl
mov
iret
or
fs
add
push
inc
cmp
jle
xor
test
xor
iret
cltd
cmpb
jg
cmp
mov
jge
or
sti
push
xor
xchg
fcoml
mov
inc
xchg
scas
pop
jg
popa
push
add
aad
xlat
lcall
mov
fwait
pop
mov
shll
mov
ret
xchg
dec
imul
aad
or
std
mov
stc
arpl
push
les
into
mov
insl
and
xchg
jmp
loop
push
test
adc
aaa
jae
cmp
cmp
mov
jecxz
dec
inc
dec
xchg
aam
jno
rol
scas
shll
aas
xor
push
jmp
call
ja
fiadds
jp
imul
xchg
push
mov
pushf
jmp
adc
stos
dec
and
pop
lcall
jnp
dec
xchg
loopne
and
leave
sbb
imull
aam
add
je
sbb
mov
or
lahf
dec
lea
inc
xor
inc
stos
cmpsb
mov
lret
mov
add
dec
call
or
dec
repnz
aad
cmpsl
add
icebp
pop
or
xor
repz
nopl
movsl
pop
out
lcall
add
fistpll
stos
movl
xor
jns,pt
push
out
mov
mov
lcall
mov
les
ret
decl
pusha
or
lret
push
dec
sub
adcl
jo
loope
xor
push
loop
jge
scas
shlb
sub
out
dec
xor
adc
imul
mov
cmc
popf
mov
imul
daa
cmpsb
push
push
js
pop
mov
out
pusha
push
cmp
outsb
or
leave
int
jns
mov
stos
and
mov
xchg
add
in
gs
jb
xor
movsb
jno
push
fistpll
cli
lret
ffree
xor
push
xchg
mov
inc
dec
mov
mov
jns
dec
jno
push
add
inc
jge
in
lods
into
les
mov
or
jle
lods
and
insb
or
xor
in
sub
xchg
mov
lahf
jo
negl
dec
ds
dec
imul
insb
popa
dec
xor
add
mov
mov
rorb
scas
dec
fwait
enter
pop
fs
mov
ljmp
mov
in
jl
push
das
xor
addb
sbb
aas
ljmp
jecxz
aas
scas
mov
mov
out
cwtl
cmpsl
adc
push
adc
lahf
pop
out
jne
call
in
pop
out
movsb
mov
cmp
push
and
cmp
fsub
dec
sbb
mov
push
adc
xchg
out
add
cmp
jle
mov
cmp
push
sub
dec
or
fdivs
mov
pushf
out
ficomps
adc
daa
and
rcll
mov
and
fiaddl
decl
mov
cmp
enter
or
inc
stos
jecxz
lret
pop
out
aas
lret
int
enter
pop
mov
mov
mov
imul
mov
mov
or
sub
lods
fcomps
outsl
sub
outsb
fisubl
dec
adc
cmpsb
push
cltd
out
mov
push
ficompl
repz
mov
jb
sub
dec
adc
js
cmp
sbb
sahf
movsb
scas
and
sbb
sub
push
dec
enter
push
and
lea
jno
mov
loopne
push
sub
dec
jmp
jne
pop
fildl
pop
fdivrs
lods
imul
add
jg
sub
int
push
lcall
dec
mov
dec
cmpsb
sarl
loopne
sarb
mov
adc
dec
call
rcll
xchg
cmpsl
shrb
lret
jg
sub
shrb
jmp
cmc
pop
mov
sub
dec
sub
sbb
sbb
sub
outsl
setge
xchg
jno
xor
xor
jle
sbb
sbb
pop
push
test
push
xchg
lods
or
pop
cmpsl
int3
dec
pop
sub
ds
test
sub
mov
stos
and
mov
xor
pop
inc
les
push
subl
outsl
pop
inc
dec
repnz
xchg
int
test
jmp
and
out
dec
pop
repnz
pop
mov
data16
addb
testl
stos
pop
push
inc
int3
jo
stos
push
or
call
sahf
jmp
test
test
mov
outsl
test
icebp
mov
cld
hlt
inc
xlat
daa
out
in
data16
imul
mov
push
adc
mov
lds
dec
iret
cwtl
jbe
jo
cmp
fmull
or
sbb
sub
or
pop
gs
push
sbb
add
push
mov
mov
push
cmp
push
fidivrl
pop
mov
cmp
xor
call
mov
jno
les
or
push
pop
js
fcompl
jne
adc
push
jmp
dec
xchg
or
dec
arpl
mov
scas
mov
adc
sub
int3
jbe
push
cmp
cmp
jecxz
mov
dec
sbb
sub
and
or
jmp
fstp
cwtl
sub
ljmp
mov
movsl
xchg
sbb
sbb
das
inc
arpl
cmpsb
dec
loop
mov
inc
out
mov
pop
and
mov
jb
sbb
pushf
pop
xchg
adc
scas
cs
divb
rcrb
sub
inc
pop
cmpsb
dec
stos
xchg
hlt
inc
icebp
sahf
adc
lahf
mov
push
or
scas
inc
jnp
das
jp
pop
dec
inc
fwait
add
mov
pop
in
pusha
nop
out
into
fsubrl
and
rcr
ficompl
mov
fistpll
movsl
xchg
mov
xlat
setge
lcall
addr16
pop
out
or
add
mov
and
in
outsb
sarl
adc
mov
out
mov
iret
sbb
cmpsb
arpl
outsl
sbb
stos
or
imul
je
and
jns
or
cli
loop
cmpsb
scas
sub
pextrw
mov
sarb
cli
sbb
setnp
call
into
rcrb
enter
add
jo
aad
mov
in
outsb
test
push
lahf
fbld
and
xchg
or
cmc
add
sti
mov
push
stos
mov
icebp
jo
push
adc
adc
icebp
daa
test
add
cmc
clc
in
sbb
sahf
insb
xor
mov
out
mov
pop
mov
ljmp
aas
pop
xchg
xchg
jnp
adc
cmp
xchg
and
outsl
add
jge
cld
push
mov
pop
xor
and
mov
imul
cmp
jb
inc
insb
or
xchg
lods
rolb
clc
sar
dec
out
mov
pusha
shlb
jmp
dec
or
std
and
cs
or
inc
push
jle
aam
dec
pop
mov
cmp
sysret
repnz
jae
aas
movl
lock
inc
sahf
scas
jbe
lahf
fnstsw
test
add
adc
xlat
or
dec
mov
or
jg
fmull
and
jmp
movsb
lret
or
decb
stos
mov
xchg
lods
xor
sbb
xchg
out
outsb
sbb
mov
jmp
stos
cmp
loopne
inc
fcmovnb
cwtl
inc
cmp
add
dec
adc
xor
lock
sbb
sbb
rcll
int3
and
sbb
xchg
insb
mov
daa
in
lret
pop
ret
sub
or
cmp
pop
fmulp
enter
testl
call
push
mov
pop
jo
xchg
adc
cmc
lret
mov
dec
pop
cwtl
or
push
cmp
popa
in
jb
jo
mov
xlat
dec
icebp
adc
cmp
aaa
sti
imul
adc
dec
add
mov
mov
xchg
test
std
ret
sub
lcall
out
adcl
add
push
sbb
in
movsb
test
shlb
iret
fadd
rcrb
test
shrb
bound
push
mov
add
dec
push
push
mov
cltd
mov
cmp
adc
inc
mov
in
push
mov
fistpl
mov
xchg
or
es
ja
negl
pop
bound
push
dec
lds
cmp
sub
pop
sub
out
sbbl
and
popa
cmp
cmpsl
inc
enter
push
cwtl
xor
cmp
nop
push
lret
pop
xor
in
sbb
lret
cmp
xor
fcomps
xchg
mov
inc
adc
sbb
dec
pop
lcall
inc
notl
cli
int
sti
mov
push
cmp
push
pop
outsl
mov
add
arpl
imul
and
pop
jns
mov
imul
or
jecxz
adc
cmc
and
xchg
adc
enter
pop
sti
out
rcrb
xchg
pop
push
push
mov
adc
xlat
xor
pushf
inc
add
sarb
cmp
fs
lea
call
lock
test
ljmp
test
dec
rcr
xchg
bound
pop
mov
nop
test
arpl
xchg
or
cmc
adc
dec
fldenv
xlat
inc
ds
pop
and
mov
xchg
test
scas
jne
sub
in
pushf
add
test
imul
mov
adc
sbb
push
stos
jg
mov
inc
jg
nop
out
inc
cwtl
mov
dec
popa
cld
call
scas
adc
in
clc
shr
mov
mov
ss
cli
inc
add
push
fwait
dec
jcxz
fdivr
loop
and
mov
outsl
nop
adc
ljmp
and
dec
aas
sub
dec
lahf
arpl
mov
rcrl
and
das
xor
xchg
repz
xchg
xor
push
sbb
or
stc
mov
mov
scas
cmp
js
aaa
je
ret
imul
sub
not
jnp
xor
nop
jecxz
xchg
and
sbb
mov
mov
test
cld
jp
mov
and
outsl
popf
test
mov
inc
leave
cwtl
mov
jmp
loop
xor
pop
jl
xchg
lcall
imul
cmc
mov
cld
stc
cmp
div
sti
inc
gs
stos
pop
inc
jo
sbb
movsb
test
adc
fimull
xchg
or
pop
and
jg
mov
jno
ret
xchg
ss
ret
std
push
sbb
sbb
fildll
cmpsl
cmp
sbb
or
push
mov
inc
push
sarl
pop
jmp
jb,pn
inc
xchg
fs
mov
and
sub
call
aam
sub
pop
arpl
fisttpll
mov
fwait
pusha
mov
aam
adc
inc
aas
push
hlt
pop
inc
push
mov
push
mov
xchg
cmp
scas
pop
out
cmpsl
cmp
xorl
xor
mov
mov
insl
add
xchg
fwait
rcl
add
outsb
add
pop
loop
cs
ljmp
imul
lods
pop
sub
mov
stc
mov
adc
cs
mov
mov
das
test
stc
popa
aaa
push
stos
ss
cmp
stos
ret
sbb
in
sbb
andl
adc
test
mov
dec
pop
mov
ret
sbb
add
sbb
fcom
gs
loopne
jae
push
pop
push
pop
pusha
jg
out
push
and
cmpsl
imul
adc
add
cmc
jge
and
je
cmpsl
adc
inc
dec
cmp
pop
out
inc
jns
add
pop
test
loope
fwait
jmp
mov
out
in
xorl
xchg
andl
fdivrs
mov
divb
push
lahf
push
enter
sub
add
rolb
dec
sbb
mov
jb
inc
adc
or
add
push
xchg
roll
pop
sbbb
les
dec
clc
pop
mov
aam
sbb
int
int3
insb
sbb
lea
xchg
cs
jbe
in
leave
shlb
lds
xchg
push
mov
pop
jge
inc
enter
incb
popa
dec
scas
fstps
movsb
push
mov
ret
lods
push
cmc
lahf
jo
sbb
and
jno
mov
lds
bound
sbb
repnz
jne
test
pop
cli
mov
ret
shl
cmp
fistl
push
mov
or
mov
das
or
scas
icebp
fwait
mov
les
sbb
and
test
shll
pushf
inc
ss
cmp
jne
je
sub
inc
dec
xchg
mov
jge
es
imul
rcll
scas
in
cmc
mov
pop
ret
sub
sub
push
ja
xchg
iret
inc
jo
xchg
adc
adc
ficoml
icebp
out
xchg
mov
sub
and
add
nop
testl
xchg
adc
or
xchg
or
cmpsb
jp
stos
addr16
xchg
or
popa
dec
or
mov
jae
cmp
xor
jb
aad
clc
scas
dec
sub
sti
fldenv
test
pop
mov
in
test
aam
clc
stos
push
int
sub
mov
and
jecxz
outsb
adc
cli
cmp
outsb
lds
ss
add
loopne
mov
in
mov
mov
mov
std
movsb
push
add
push
sub
adc
or
fistpll
mov
pusha
mov
mov
and
lcall
inc
outsb
sti
ret
inc
lahf
scas
sbb
ret
sub
or
test
pop
imul
repz
fidivs
movsb
int3
and
adc
pop
sbb
pop
ljmp
xor
ss
in
ss
popa
inc
mov
or
xchg
xchg
xor
pop
mov
mov
dec
fmuls
jge
pop
notl
pop
rolb
cmp
incl
mov
add
inc
sarb
insb
mov
mov
hlt
js
pop
out
xchg
jmp
sbb
pop
dec
push
mov
enter
add
pushf
dec
imul
dec
bound
lahf
inc
ret
sub
mov
mov
jnp
cwtl
lods
fildl
mov
js
sbb
iret
cmp
jp
mov
imul
pop
or
aam
ljmp
jp
cmpsb
add
ret
dec
xor
pop
int
jno
mov
sbb
pop
pop
cltd
xchg
imul
into
cmp
mov
push
cmpl
sub
lock
jno
test
xchg
dec
stc
xchg
jp
out
xor
jge
aaa
cmovne
hlt
cld
orl
and
or
out
adc
insb
pusha
out
and
cltd
int
sub
jge
test
imul
rcrb
xchg
inc
stos
js
add
add
mov
push
sub
mov
cmp
and
dec
aaa
movsl
lahf
dec
adc
sub
push
mov
xchg
pop
pop
jno
push
in
sub
or
test
or
int3
mov
push
lahf
or
inc
repz
stos
mov
pop
push
out
loopne
daa
shlb
outsb
repz
jbe,pt
incl
sbb
mov
imul
adc
dec
pop
fistl
test
and
inc
outsl
mov
repnz
jl
in
mov
mov
or
adc
ret
xor
dec
xor
and
sbb
shrl
mov
fs
aas
add
out
sub
sahf
fcomps
inc
pop
insb
xchg
call
mov
mov
mov
or
movsb
xor
int
pushl
in
jle
sub
sar
push
and
mov
or
rcrl
loop
int3
mov
mov
adc
insl
hlt
test
push
aam
inc
add
sbb
mov
push
outsb
xor
xchg
xchg
xor
mov
cmp
outsl
popa
jae
sub
jg
push
dec
and
testb
into
push
enter
mov
int
sti
popa
mov
iret
cli
push
or
or
sbb
hlt
das
adc
mov
xchg
out
push
lret
loop
or
test
imul
pushf
lock
popf
dec
in
cmp
jecxz
mov
repz
xchg
jbe
sbb
fildll
mov
lds
lret
jmp
shrb
lods
mov
add
fstpl
cmp
lods
jle
iret
add
testl
cmp
xor
bound
adc
dec
popa
adcb
ljmp
outsl
lods
push
arpl
scas
insb
push
dec
pop
in
lds
adc
push
cmpsl
or
lahf
pop
in
imul
xchg
xchg
or
sbb
imul
pop
ficompl
jle
sbb
daa
inc
sub
cltd
pop
mov
repnz
stos
xchg
in
in
aam
lods
in
adcb
cld
and
lret
fnsave
loop
ret
fwait
mov
cltd
mov
push
addr16
faddp
aad
bswap
lret
int3
dec
js
ds
in
jge
sarb
rcll
icebp
xchg
dec
mov
loopne
jnp
pusha
in
xor
rcrl
stc
dec
xchg
jb
inc
adc
dec
pop
xor
inc
outsb
mov
stos
pop
or
cmp
mov
jbe
mov
add
or
mov
adc
ret
movsb
je
xchg
lds
in
and
ljmp
das
pop
add
adc
add
bound
data16
and
cmp
cmp
adc
jbe
imul
dec
and
add
mov
fdivr
jg
test
cmp
je
sub
lret
jecxz
ss
aad
inc
inc
pop
sbb
aas
cmp
arpl
cmc
iret
imul
or
imul
les
mov
pop
out
cli
xor
pusha
aaa
xchg
dec
add
jno
xor
xor
fmul
dec
jb
or
in
scas
fstps
adc
test
or
arpl
push
cmpl
call
rcr
mov
aaa
xor
inc
xchg
sbb
pop
mov
xchg
fcmovu
cmpsb
push
nop
dec
dec
out
movsl
fnstsw
push
fisubs
outsb
stos
push
fdivrl
sarl
xor
imul
test
sub
jne
js
push
jo
adc
inc
mov
xor
test
mov
bound
ror
mov
leave
stc
inc
add
adc
adc
sub
dec
jg
or
xchg
inc
jl
jns
push
push
adc
inc
shll
nop
jo
push
int3
insb
jle
sub
fdivp
cmc
jo
push
pop
leave
adc
inc
loope
adc
in
xchg
ret
lret
dec
test
ds
push
test
adc
inc
cld
popa
into
xor
fwait
add
jns
dec
ja
fwait
and
xlat
cli
or
scas
imul
lret
inc
add
xor
insl
imull
cltd
leave
leave
xchg
out
cli
fdivrs
mov
out
xchg
jns
add
fisttpll
inc
xchg
mov
lods
sub
lods
test
movsl
mov
icebp
lret
sub
add
pop
xor
inc
test
and
cmp
dec
add
repz
push
jecxz
loopne
call
and
inc
or
mov
push
sahf
clc
mov
test
xchg
fs
mov
dec
lods
lock
mov
cmp
ja
add
js
mov
pop
movb
pop
xor
xor
enter
mov
mov
sub
cli
das
lds
ja
mov
mov
pop
or
pop
sbb
lea
andb
addr16
mov
stc
in
outsb
or
mov
jg
mov
imul
das
adc
sarl
inc
punpckhbw
xlat
fisubrl
jl
xchg
sub
notb
push
cmpsb
add
iret
into
aad
shrl
pusha
mov
out
cwtl
mov
add
stos
inc
aaa
shld
push
and
and
mov
sub
fisubrs
dec
pop
mov
dec
fistl
lods
clc
dec
in
xchg
fdivrs
fisubl
mov
pop
cltd
pop
fcoml
mov
adcl
inc
stos
or
jnp
pop
gs
popa
xchg
movl
add
or
xchg
pop
adc
mov
pop
sbb
pop
pop
xchg
stos
sti
popa
sbb
jl
rcll
mov
dec
push
dec
mov
cmpsb
push
push
mov
es
jbe
jne
cmpb
cmp
icebp
adc
xor
xchg
sbb
ss
jo
pop
sti
fcomp
inc
js
mov
leave
subb
mov
les
lea
fucomp
clc
mov
cmp
pop
add
dec
mov
fisttps
int3
mov
sarl
das
cmp
jg
fxch
add
dec
mov
xor
lahf
add
sbbb
xchg
pop
lahf
add
js
sub
push
sbb
add
fldl
xchg
cli
nop
pushf
movsb
into
xor
test
int3
fisubs
lret
fisttps
int3
test
fisubl
aad
outsl
xchg
and
je
stos
out
jbe
sbb
xchg
mov
lods
mov
outsl
ret
jge
cmp
xchg
and
jle
sub
ds
add
loope
pop
pop
hlt
dec
cwtl
insl
fs
stos
push
jne
data16
outsb
cwtl
cmp
inc
call
add
mov
jmp
push
call
push
call
and
rcrb
xor
pop
cmp
xchg
fmul
popf
sbb
mov
imul
inc
jae
xchg
shlb
mov
popa
pop
je
jecxz
jb
cmp
inc
cli
mov
push
aam
stc
xchg
pusha
and
xchg
jo
and
in
ficoml
or
lods
cld
cmpsl
cmpl
jecxz
ss
lds
xchg
mov
add
shrb
arpl
movsl
movsb
push
in
jmp
add
add
add
push
test
inc
and
imul
shr
cs
icebp
xor
xor
jle
lods
hlt
mov
out
int
cmp
add
stos
adc
incl
cmp
in
pop
cmp
stos
fptan
or
cmp
adc
andb
jb
aad
je
addl
and
sbb
es
dec
add
xchg
fbstp
sbb
data16
dec
sbb
mov
ret
movsl
in
das
test
dec
imul
fnsave
xor
and
dec
mov
push
inc
loop
stos
pop
xlat
pop
mov
loop
imul
and
repnz
jl
outsl
mov
cmpsb
repz
mov
xchg
cmp
add
xchg
daa
jmp
loope
fistpl
aaa
insl
and
dec
mov
stos
push
inc
cmp
jg
and
les
mov
cmp
xchg
cmp
xor
es
xchg
nop
mov
push
pop
push
jg
out
adc
fidivl
xchg
ss
sbb
outsl
test
scas
ret
mov
mov
out
or
xor
xchg
sub
add
lea
xor
adc
adc
js
movsl
mov
roll
mov
or
pcmpgtb
dec
sbb
test
jg
inc
fisttpl
sub
jno
cmpsb
or
cmp
int
lret
push
inc
in
ss
cmpsl
inc
mov
arpl
cmp
or
out
or
test
call
call
mov
add
xchg
or
sar
or
push
les
lea
xchg
fbstp
out
out
lods
add
sub
xor
les
hlt
movsl
leave
cld
daa
inc
sbb
add
inc
mov
inc
mov
mov
es
jp
push
lock
mov
lods
xchg
sbb
xor
pop
xchg
mov
sti
jle
xor
cmpsw
pop
div
sub
rcll
mov
ficompl
data16
fnstcw
aas
or
lret
fxch
push
dec
sahf
gs
cmp
sub
loope
xchg
pop
mov
cmc
xchg
xor
sub
movsb
es
enter
cli
dec
xchg
pop
loope
or
mov
push
fnstsw
pop
jmp
inc
rclb
jo
lcall
rcrl
test
fs
mov
scas
mov
hlt
ret
bound
mov
inc
test
ljmp
idivl
insl
pop
iret
pop
xor
cmc
adc
mov
inc
hlt
out
notl
sub
sbb
imul
xchg
mov
popa
in
push
and
lock
mov
orl
push
pop
bound
mov
mov
ljmp
dec
and
in
lds
loope
xor
inc
xor
mov
cmc
xor
leave
es
xchg
mov
jmp
push
cltd
add
aam
adc
add
out
mov
jl
fcoml
stos
add
in
cmc
jnp
fcmovb
cmp
xor
cmpb
add
test
cmp
insb
inc
dec
rorb
test
daa
inc
and
lds
add
push
lahf
repz
call
inc
loopne
dec
mov
mov
mov
test
mov
dec
and
es
hlt
mov
ljmp
sub
dec
sbb
aam
adc
cmp
or
pusha
cli
jge
out
mov
iret
in
ja
repnz
cmp
jns
pop
xchg
inc
nop
cmpsl
scas
dec
mov
cmp
fwait
in
xor
push
mov
or
sub
xor
movsb
out
push
lds
push
adc
jle
jmp
mov
xor
insb
cmp
std
xor
into
loopne
push
adc
or
mov
mov
xor
xchg
add
mov
mov
xchg
out
scas
pop
lea
add
push
sahf
setbe
ljmp
js
xlat
nop
outsb
mov
cs
imul
xor
mov
pop
jae
rorb
sub
out
jp
mov
dec
lock
stc
aas
sub
inc
adc
mov
xor
cli
out
andl
pminsw
xchg
inc
rclb
mov
cmpsl
adc
rclb
pop
leave
in
cld
cmp
pop
out
movsl
sub
in
mov
xor
xor
xor
pop
mov
aas
cltd
inc
jo,pt
and
sub
ljmp
mov
dec
ja
daa
das
add
xchg
insb
lock
xor
js
stos
pop
jp
pop
shlb
inc
jns
call
pop
dec
in
out
jns,pt
dec
outsl
xor
sub
test
push
mov
jmp
cmovns
pusha
out
cmp
mov
cltd
stos
inc
mulb
xchg
add
incb
xchg
mov
inc
daa
data16
dec
sti
stc
test
testb
inc
into
subb
pop
cmp
inc
pop
pop
cli
enter
inc
jmp
mov
sbb
mov
icebp
std
push
popa
ja
push
imulb
adc
jnp
lcall
push
ljmp
or
ret
in
shrb
insl
or
js
nop
testl
ret
ret
movsl
jo
imul
dec
push
clc
fiaddl
adc
inc
mov
xchg
dec
stc
into
jne
addb
mov
lea
jns
push
add
mov
out
loope
mov
inc
pop
inc
push
enter
rcrl
orb
andl
cmp
xor
push
cmpsb
cmc
test
mov
hlt
mov
adc
sub
or
rorl
dec
cmc
cmp
cmp
fs
xchg
push
push
xchg
inc
gs
cwtl
fnstsw
dec
mov
ret
mov
nop
leave
arpl
jo
rcll
subl
in
inc
lods
xchg
inc
xor
xor
or
inc
inc
xlat
in
inc
dec
jo
jae
daa
out
rorb
xor
push
andl
dec
lcall
xchg
xchg
xchg
mov
cwtl
stc
adc
test
xchg
ror
icebp
mov
and
xor
push
add
pop
aam
xchg
int3
aas
push
jge
push
gs
mov
dec
popa
fnstenv
loop
in
xor
push
adc
mov
or
add
je
inc
bound
jecxz
mov
cmp
mov
call
fldcw
push
addl
in
test
sti
jb
bound
xor
insl
xchg
repnz
adc
in
lret
dec
repz
nop
jecxz
mov
inc
adc
sbb
push
xchg
not
sub
shrl
out
cmp
das
push
mov
or
stos
test
movsl
adc
adc
sub
insb
ret
sub
sbb
pop
std
jg
adc
jae
xor
inc
add
push
cmc
shl
sbbl
and
cli
ljmp
mov
inc
movsl
fistpll
arpl
mov
in
movsb
arpl
push
fbstp
inc
sbb
or
jae
dec
inc
sub
or
jb
nop
dec
push
or
xchg
cli
test
xchg
inc
cltd
push
rcrb
loop
sub
mov
cmp
dec
pop
lea
mov
insb
mov
xchg
dec
pop
xor
int3
pop
pop
xor
sbb
mov
ja
iret
xchg
cmc
icebp
adc
mov
and
push
call
mov
sub
jnp
jle
iret
pop
lock
pop
jnp
out
js
jne
push
loope
ret
call
mov
shlb
lret
and
jb
ffreep
test
mov
nop
lods
adc
into
jae
xchg
sub
mov
cmpsb
xchg
lea
xlat
lret
add
dec
xchg
enter
jo
fisttpll
or
push
jg
mov
or
adc
cli
ret
push
shlb
cvtdq2ps
in
into
inc
xor
cmp
sub
lret
ljmp
xchg
lods
out
ret
sbb
inc
mov
mov
scas
roll
push
cmc
lods
mov
mov
aas
addr16
xchg
int
int
dec
aam
mov
push
stos
dec
pop
popa
test
bound
in
out
sub
xlat
jecxz
hlt
or
or
cmpsl
jmp
xchg
mov
mov
lods
mov
or
inc
dec
sbb
cmp
cmp
flds
ljmp
xor
and
ror
ficompl
pop
repnz
lret
adc
mov
xchg
test
sti
incb
jnp
dec
cmp
add
clc
add
andl
jge
mov
pop
adc
sub
test
bound
and
mov
insl
adc
add
outsl
xor
test
mov
mov
scas
popa
jae
jmp
inc
jle
mov
or
mov
jns
pop
or
inc
and
lods
js
cmpsl
dec
cmp
adc
adc
pop
and
or
cld
stos
repnz
clc
jns
mov
jno
dec
pop
fwait
add
and
sub
and
inc
lea
sbb
xorb
or
int
pusha
pushf
out
cmpsb
or
dec
push
inc
xor
add
fdivs
cs
pop
jae
and
xor
mov
mov
fidivrs
arpl
and
sub
push
pusha
xor
mov
cwtl
jp
push
loope
add
nop
xchg
das
call
dec
xchg
cmp
sbb
loopne
int
dec
jecxz
and
arpl
cwtl
lock
insb
aas
sbb
jne
or
cmpsl
test
and
cwtl
pop
daa
xor
les
pop
es
pop
dec
push
xlat
pop
aaa
mov
dec
insb
dec
lods
roll
jno
sub
loope
pop
sub
fcomps
add
in
test
stos
arpl
fmuls
fsubrl
mov
xchg
dec
jle
mov
lretw
mov
bound
fisubrl
xor
push
adc
or
xchg
popf
xor
icebp
sbb
loope
aam
mov
or
inc
mov
pop
loope
xor
je
out
ljmp
mov
ljmp
es
mov
sub
shl
ljmp
push
or
pushf
test
int3
push
pop
lea
push
push
gs
pushf
add
mov
sub
andb
icebp
das
sbb
sarb
mov
repnz
add
addr16
push
sub
and
cmp
mov
sbb
fucomip
nop
jne
js
mov
testb
dec
inc
ds
aad
push
repz
jns
out
and
adc
stos
cmp
cmp
sbb
jg
pop
cmp
xchg
xor
cmp
jmp
or
cld
sub
mov
sahf
push
cmp
push
cs
es
mov
cmp
pop
mov
jmp
fisttpl
push
int3
dec
imul
stc
sahf
inc
fisubrl
jle
shr
sbb
sbb
jnp
mov
mov
sbb
sahf
cmp
inc
fbld
addb
sub
mov
push
dec
push
fdivrl
mov
mov
aam
popf
xchg
jp
addr16
aaa
out
shll
loopne
fdivl
push
mov
movsb
mov
push
sahf
dec
scas
ja
or
lcall
push
push
fucomip
lods
adc
fldcw
movsl
mov
xchg
inc
mov
and
sub
ret
sub
aaa
mov
stc
or
stos
cmpsb
pop
pop
or
push
adc
rcrb
aad
rcl
leave
or
lahf
jb
xchg
addr16
std
mov
mov
xor
nop
mov
jbe
push
pop
push
mull
filds
imul
xor
and
pop
push
inc
xor
mov
out
movsb
or
xor
mov
loop
gs
push
mov
jbe
sub
xor
xor
mov
scas
enter
lcall
in
fwait
fs
lret
loope
lods
cwtl
jecxz
mov
jne
cmp
rorb
push
jmp
mov
push
xor
leave
push
or
stc
lahf
rolb
sub
data16
mov
sahf
ss
roll
adc
cmpb
dec
sbb
and
mov
stos
cmpsl
repz
cmp
mov
cwtl
xor
cmpsl
das
mov
sbb
sti
or
push
gs
or
lods
mov
mov
shrl
mov
movsb
pop
std
pop
xor
pop
dec
stos
dec
dec
and
lahf
cmp
inc
mov
dec
jmp
mov
xchg
adcl
je
lret
cmp
push
jge
mov
neg
pop
test
inc
andl
icebp
and
into
cwtl
or
sub
jg
test
pop
outsl
fwait
cmp
daa
xchg
sbb
mov
xchg
pop
adc
inc
dec
out
inc
lods
daa
mov
push
jle
cwtl
sbb
mov
sub
mov
ret
jmp
test
mov
lock
dec
pop
cmpsl
push
out
das
iret
mov
roll
jmp
mov
xchg
loop
mov
mov
add
add
inc
mov
clc
cmp
aaa
popf
inc
cmp
cld
imul
cmp
add
cmp
sbbb
jno
mov
pop
xchg
or
ja
jno
imul
iret
lahf
popf
stc
sti
push
mov
lock
mov
jecxz
rcrb
adc
jb
je
arpl
adc
push
lds
mov
push
xor
jae
gs
mov
xchg
lcall
inc
add
pop
gs
xor
cmpsl
add
pop
daa
sub
push
cmp
repnz
dec
mov
imul
lcall
mov
or
lret
int3
inc
mov
xor
mov
cmc
jg
pop
cli
dec
and
daa
and
mov
sarl
rorl
inc
out
out
fbstp
insl
mov
pop
pop
and
test
shll
mov
pop
je
jecxz
int
inc
lock
lock
in
inc
xor
push
xchg
rcrb
sahf
sub
jae
or
in
push
jns
xchg
imul
xchg
stos
stos
in
adcb
adc
lock
data16
out
push
pop
cmp
sub
and
stos
sbb
leave
xchg
push
popf
xchg
fimuls
inc
ja
js
pop
lret
push
push
stos
and
inc
push
imul
rolb
test
xor
inc
pop
jle
xor
int3
mul
cmp
sub
in
xchg
inc
sub
pushf
pop
jo
mov
add
popa
mov
mov
bound
jne
fiadds
xchg
or
mov
jb
into
bound
mov
pop
sti
push
xor
jecxz
dec
pop
pop
xchg
xchg
and
call
mov
cmpsl
out
jae
lcall
mov
out
test
pusha
jns
xchg
dec
cld
mov
lods
sub
xchg
sbb
out
paddusb
cli
jle
and
loop
loope
fmuls
inc
lea
jp
mov
xor
repz
and
test
clc
mov
mov
pop
movsl
sbb
scas
and
mov
inc
fdivrs
into
sbb
in
dec
jae
or
fs
je
pop
sub
xchg
cli
add
int3
les
repnz
pop
cmp
movsb
xor
or
mov
addr16
movsb
sti
push
xchg
loop
mov
mov
lods
push
jp
mov
mov
mov
push
lcall
inc
jnp
lcall
push
rcl
sub
add
sub
push
pop
or
xchg
out
pop
popf
push
mov
add
popf
loop
ljmp
mov
popf
in
cs
xor
and
mov
xchg
mov
scas
call
or
pop
repnz
outsb
jmp
out
lods
fwait
and
sbb
inc
sbb
int3
and
push
lret
cmc
ret
dec
lcall
jno
sub
inc
and
jnp
push
data16
imul
add
lods
mov
push
in
adc
adc
cld
adc
int3
jo
daa
ljmp
mov
dec
cwtl
mov
add
and
lods
cmp
nop
cmp
mov
fildl
sub
lods
pusha
fildl
mov
or
ja
insb
inc
and
subl
mov
cltd
push
fwait
sbb
mov
pop
sbb
movsb
jb
and
pusha
out
and
movsb
clc
test
leave
or
push
lret
loope
pushl
or
out
pop
js
push
pop
stos
push
bound
adc
jno
cld
jle
mov
repz
repnz
mov
inc
sub
mul
inc
addr16
lods
rolb
jp
pop
pushf
pop
fwait
nop
out
add
testl
ffreep
fisubrs
jge
mov
push
adc
dec
push
cmp
mov
imul
inc
sub
add
inc
ffreep
nop
fsts
fdivl
test
shl
leave
jbe
cmpsb
cmp
push
cmp
js
insb
pushf
adc
lea
lret
dec
adc
cmp
lods
outsb
test
aad
add
adc
orb
sbb
push
into
movsb
mov
mov
ficoms
sahf
scas
lcall
jne
cmpb
xor
cmpsb
fbstp
sbb
imul
pop
mov
insl
mov
mov
std
xor
sub
cwtl
movsb
popf
sub
ja
mov
push
sbb
imul
inc
push
sub
push
data16
adc
popa
aam
lock
push
ja
bound
fidivrs
xlat
dec
outsl
inc
loope
ds
loope
into
sub
lret
in
adc
pop
jmp
mov
xchg
js
pop
dec
pushl
je
or
sub
mov
cmp
lret
mov
test
pop
adc
shl
fcoms
jne
cs
into
ret
and
add
icebp
fbld
jmp
push
movsb
insb
push
xchg
pop
sub
jle
jmp
bound
mov
cmc
stos
xchg
negl
xchg
xchg
leave
mov
mov
aad
sbb
lret
sbb
inc
insl
das
adc
xchg
sti
lahf
mov
pop
pop
and
xchg
punpckhdq
adc
jno
arpl
mov
adc
mov
jp
add
jp
add
inc
add
cmp
repnz
and
je
xchg
sbb
xchg
ret
xor
movsb
pop
add
arpl
lahf
push
subb
arpl
cmp
sub
dec
les
push
cmpsb
int3
lods
push
ljmp
xchg
mov
cmpsl
loopne
mov
xor
cmpsb
cld
je
xlat
sbbl
xchg
in
fcoms
push
andb
jns
and
repnz
das
rcrb
cmp
sbb
pop
mov
sbb
stos
popa
mov
push
fisubs
out
push
dec
pop
jns
xchg
rcrb
push
arpl
enter
jl
out
aaa
aam
scas
clc
jno
or
aad
pushf
fstl
loopne
out
and
in
jbe
shll
xchg
lea
sub
push
hlt
or
mov
in
inc
cmp
and
jp
lahf
mov
hlt
sti
or
int3
pop
push
mov
aas
rclb
or
jp
nop
push
leave
fdivrl
jbe
jns
fdivl
dec
push
fmull
cmp
mov
or
aaa
or
and
mov
jo
dec
ret
inc
xchg
xchg
inc
and
mov
sub
ds
mov
cmovnp
pop
sahf
or
inc
lahf
fisubrs
std
into
imul
call
inc
sub
fistl
mov
cltd
inc
movd
fidivs
jno
pop
sbb
flds
test
fsubr
jmp
inc
add
xor
mov
pop
sahf
int3
arpl
repz
xor
mulb
mov
bound
add
ret
stos
pop
cwtl
jns
jg
push
jno
xchg
addb
les
dec
cmp
mov
pop
out
test
loopne
dec
aas
jae
xor
mov
fistpll
or
jecxz
cmp
adc
repz
pop
jb
or
add
nop
andl
test
sub
fimuls
lods
test
fstps
xchg
pop
mov
cmp
ss
into
leave
inc
fiaddl
jnp
ret
add
test
cltd
hlt
dec
jnp
popa
jbe
cmp
rorb
adc
shrl
mov
push
ljmp
adc
pop
push
rclb
mov
test
cltd
and
jmp
inc
push
out
inc
imul
jmp
insl
enter
dec
adc
lods
xor
jbe
sbb
xor
dec
test
adc
aaa
lock
imul
add
jmp
in
fucomp
add
inc
rcll
test
sub
fisttps
data16
mov
loop
popa
jmp
jp
jae
xor
loopne
adc
js
imul
outsb
ljmp
nop
mov
fidivrs
stos
mov
roll
and
loopne
dec
pop
les
xchg
iret
dec
setno
push
mov
cs
jbe
mov
push
in
inc
cmp
pop
dec
imulb
pop
cltd
scas
jb
pop
das
mov
jnp
or
aaa
pop
jns
lea
outsb
add
lods
mov
roll
out
xchg
cmp
dec
fsubs
int3
and
gs
inc
push
xchg
add
orl
scas
das
or
sub
pusha
lahf
inc
jmp
mov
repz
mov
jbe
movsb
mov
xor
xchg
lods
or
stos
push
lea
jl
push
das
and
push
dec
loopne
or
adcb
pop
fmull
ljmp
xor
daa
push
lods
mov
cmp
roll
leave
add
lret
popa
fsts
xchg
and
stos
addr16
ljmp
xor
adcl
push
outsl
movsl
in
int3
adc
xchg
je
and
call
xchg
lea
jg
in
adc
inc
xor
clc
cli
stc
jecxz
jp
lret
stc
adc
dec
fsubrl
pop
sub
fnstenv
jo
sub
cmp
sbb
repz
mov
inc
mov
mov
or
add
xlat
mov
addr16
ss
lods
sbb
inc
fists
pop
out
scas
je
dec
mov
fs
adc
mov
mov
mov
test
dec
cwtd
pop
dec
imul
repnz
jge
or
nop
addb
scas
mov
movsb
jnp
jne
xor
push
int3
mov
idivb
dec
xchg
test
fs
in
lods
pop
push
je
xchg
popa
fsts
push
das
mov
mov
cmpsl
jae
call
in
in
inc
mov
mov
mov
pop
sbb
call
push
std
pop
rorb
pop
inc
orb
mov
mov
add
sbb
push
js
cltd
pop
gs
mov
mov
icebp
add
test
push
jo
pushf
xor
ja
xchg
xchg
jmp
aad
rorl
adc
lahf
xchg
adc
imul
jmp
iret
jae
mov
lods
lock
push
sti
loop
xor
dec
stc
adc
ja
aam
sbb
push
mov
scas
in
ds
popf
shll
jno
fs
add
mov
and
inc
mov
jo
push
jle
cli
pop
xchg
leave
mov
push
js
ds
xor
sub
cld
mov
jge
mov
adc
mov
mov
adc
inc
and
or
test
sbb
shll
insb
mov
js
insl
jp
xchg
and
mov
mov
icebp
xor
flds
mov
inc
movsl
daa
jo
aas
pop
lret
iret
nop
adc
jl
xchg
into
stos
add
mov
jle
cmp
add
loop
movsl
fldt
cmpl
xor
xor
jmp
das
mov
fwait
dec
dec
sub
adcl
jecxz
shrb
inc
cmc
stos
pop
gs
inc
xchg
pop
movsl
pop
add
push
push
icebp
push
ror
aam
cmp
push
cmp
cmp
fisubrs
push
dec
leave
pop
mov
sub
cmpsl
sub
push
lcall
shl
inc
mov
imul
mov
sub
adc
ds
mov
js
ja
orl
xchg
push
sbb
mov
dec
shr
jmp
mov
in
aaa
adc
xor
push
cltd
popa
pop
and
sbb
xlat
pop
lahf
out
cmp
jmp
ficomps
stc
xor
mov
cmc
imul
mov
into
js
into
mov
or
mov
sahf
ja
dec
cmp
loopne
ss
insl
xchg
pop
sub
pop
ja
adc
jge
stos
leave
stos
pop
sub
lea
jp
sahf
shll
test
and
popa
sub
leave
stos
aad
adc
testl
add
add
out
imul
xor
push
inc
std
xor
and
cld
cmp
rorl
inc
pop
jle
jb
inc
sbb
xchg
pushf
ret
aad
pushf
sub
pop
inc
lahf
test
pop
xor
sti
fiadds
das
xchg
lea
mov
cmpsl
mov
inc
mov
inc
jns
sbb
in
shll
dec
cmp
pop
cltd
xor
into
icebp
pop
mov
and
and
pop
push
loop
jmp
in
rcl
std
mov
pop
aas
clc
out
outsb
inc
loope
cmp
inc
xchg
shlb
xlat
out
daa
push
shl
pop
xchg
sub
push
aaa
into
int3
lahf
adc
clc
mov
sub
mov
in
test
add
scas
stos
mov
or
dec
push
add
lods
xor
sbb
pop
aaa
adc
inc
jmp
shll
fdivrp
cmpsl
adc
inc
repz
push
lods
pop
ljmp
cltd
add
add
jb
loope
out
out
cmp
dec
xchg
lea
mov
sahf
nop
shrb
fbstp
sbb
mov
pop
inc
mov
enter
lahf
mov
filds
pop
mov
sub
aad
scas
mov
inc
nop
inc
lea
xor
mov
jb
int
fcmovu
lock
je
icebp
sbb
dec
sub
imul
or
or
jle
jb
rclb
xchg
sar
push
fisubrl
mov
insl
js
sbb
jle
test
fsubs
mov
icebp
les
jl
imul
out
cltd
xor
andb
lret
into
test
enter
outsb
pop
rcrb
test
sbb
xchg
sbbb
xchg
fsts
lods
fdivs
cmpsb
inc
adc
mov
fidivs
cmpsl
inc
aas
or
push
nop
stc
or
and
or
jmp
mull
jmp
xchg
add
cmpl
dec
inc
and
xchg
into
dec
sbb
push
mov
cbtw
pop
fadds
cltd
insl
jle
and
lods
fdivl
inc
test
nop
pop
and
adc
shlb
xlat
mov
xchg
push
shr
jns
sbbl
out
out
push
or
dec
xchg
notl
jbe
jle
dec
int3
dec
stos
loope
adc
cwtl
ss
cld
fs
out
aad
add
and
divl
stos
mov
adc
int
xchg
push
pop
cli
dec
in
pop
sahf
jne
lods
push
jbe
ds
loop
mov
ret
stos
dec
sbb
and
je
rcll
aaa
xchg
pop
mov
mov
pop
push
clc
mov
push
inc
xor
das
decb
jbe
pop
adc
xchg
lcall
xor
jge
sub
jg
mov
and
stos
xchg
iret
and
call
orb
and
insl
bound
imul
jl
jl
jg
sub
adc
mov
movsb
push
xchg
or
xor
dec
enter
loop
stos
aas
xchg
push
lods
push
out
enter
cmp
mov
jg
mov
aaa
mov
cmpsl
movb
test
insl
jns
nop
jmp
cwtl
push
mov
mov
xor
ret
jns
das
mov
and
scas
or
inc
inc
mov
js
mov
adc
mov
aas
inc
mov
cmp
stos
xchg
enter
jmp
mov
out
pop
out
jge
cli
cmp
in
ret
mov
and
repnz
add
xchg
fmuls
push
movsb
inc
mov
mov
das
mov
or
test
jae
ss
mov
push
das
sti
nop
or
lahf
xor
popa
push
jle
arpl
adc
addr16
lods
and
loop
or
and
xor
mov
push
xchg
ds
sbb
ja
xchg
ret
dec
movsb
out
or
out
loopne
dec
out
cli
insl
inc
test
cli
jae
aad
push
sub
cmpsl
add
sbb
and
xchg
adc
negl
jg
jg
icebp
hlt
cmpb
sub
lods
adc
dec
sbb
clc
in
sub
sbb
hlt
xlat
outsl
xor
test
mov
dec
dec
sub
mov
in
call
cld
jl
or
jge
mov
sbb
dec
xor
push
sub
adc
mov
stc
inc
and
movsb
fnstsw
cltd
lcall
adc
sub
inc
adc
xor
mov
sbb
xchg
adc
sti
adc
aad
sbb
das
pop
pop
push
inc
xor
testl
ss
sub
add
adc
and
repnz
inc
fptan
stc
iret
out
push
inc
jg
scas
pop
xchg
lret
movsl
pop
or
inc
mov
aam
enter
push
adc
inc
in
xchg
fdivrs
mov
data16
outsb
adc
inc
sbb
sub
xor
xchg
push
test
out
mov
and
into
push
cmp
out
imul
outsb
cwtl
sub
stos
pop
cwtl
mov
fiaddl
in
adc
push
inc
scas
pusha
push
xor
aam
gs
cmp
mov
in
cltd
cmpsb
cmp
mov
repnz
jl
stc
fistpll
xor
iret
imul
mov
cmc
pop
mov
fisubrl
add
sbb
push
div
inc
inc
jp
push
div
nop
mov
movsb
fsubr
daa
xchg
popa
das
mov
jae
jmp
jp
outsl
sub
sub
rol
les
in
pop
xchg
mov
push
ret
mov
mov
mov
fidivl
cmpsl
mov
stc
dec
sbb
stos
add
ss
pop
in
mov
negl
sbb
cmp
enter
pop
jo
hlt
loope
add
push
je
ret
adc
in
or
and
and
sub
out
dec
lea
xchg
aas
andl
out
xchg
popa
test
sarl
jo
mov
loope
ja
ficoms
dec
shl
cmp
push
dec
lret
std
cmc
rcr
in
sbb
clc
loop
dec
jmp
es
jae
sub
lds
ffreep
fsubr
mov
and
mov
jp
out
mov
inc
cld
jl
hlt
insb
vpmadcswd
fldcw
add
call
adc
xchg
popf
mov
int3
pop
cld
xchg
mov
insb
push
sbb
or
pop
add
ret
test
ror
add
sahf
sub
sbb
cwtl
enter
in
jo
aam
orb
test
jg,pt
lods
aad
dec
cmp
stos
js
sarb
pop
add
adc
sbbb
les
and
xchg
nop
lcall
xchg
push
push
mov
fcmovb
mov
sarb
loop
dec
out
ret
push
push
xchg
incl
xchg
adc
pop
jecxz
xor
push
sbb
sbbb
adc
adc
xchg
stos
bound
shll
aas
push
mov
ret
fidivrl
repnz
add
xchg
and
mov
push
fists
stc
ljmp
or
push
psllq
test
pushf
inc
pop
es
subb
lods
cmp
aas
pop
add
pop
cmp
sub
and
push
push
add
mov
mov
out
out
ds
jo
pop
mov
xor
outsb
or
add
aaa
repnz
sub
mov
xor
dec
adc
lock
js
int3
push
push
jge
lods
pop
cmp
movsl
mov
das
xchg
or
in
enter
mov
cmp
xchg
outsl
mov
xchg
adc
mov
jecxz
sub
incb
push
mov
scas
out
jecxz
add
in
arpl
mov
dec
loopne
and
out
adc
sbb
xchg
jg
pop
fstps
xchg
jl
iret
jbe
sub
push
dec
in
sub
add
cmp
outsb
stos
add
mov
nop
push
ret
add
incb
jl
std
cld
jo
xorl
dec
leave
pop
pop
gs
and
imul
jmp
xchg
push
xchg
pusha
stos
add
fwait
aaa
shl
cmp
pusha
lea
insl
add
cmpl
push
shrb
loope
cmp
sbb
loope
mov
shlb
rep
fists
cwtl
mov
dec
sub
pop
fsubrl
setno
incb
adc
rol
ljmp
fwait
mov
xor
gs
test
cltd
jb
push
aas
jmp
xchg
fs
loop
xor
and
stc
testb
xorb
sarb
inc
inc
xchg
das
std
jns
inc
mov
or
push
mov
adc
jecxz
xchg
mov
lds
jbe
mov
sub
dec
dec
mov
pop
add
dec
push
jbe
idivb
jno
pop
pushf
sbb
ss
sbb
jge
xor
mov
mov
std
pusha
or
jp
out
dec
ret
xchg
testb
xor
mov
dec
sbb
out
sbb
push
loope
fs
inc
xchg
insb
jecxz
cld
push
push
or
push
push
loopne
cmp
mov
stos
cmp
lods
rol
push
inc
inc
xchg
mov
push
adc
push
xor
pop
lret
xchg
in
ja
mov
jnp
xchg
cmpsb
adc
ror
pop
out
push
inc
and
inc
dec
mov
je
inc
inc
pop
mov
pop
push
jo
rorb
arpl
pop
outsb
mov
rclb
adc
sbb
adc
dec
arpl
add
mov
sbb
iret
push
jmp
pusha
call
bound
mov
rcl
jmp
je
int
out
shrb
and
test
jno
in
gs
aad
mov
loopne
lret
inc
mov
mov
arpl
mov
popf
scas
into
movsb
mov
jb
sub
orl
mov
sbb
push
mov
popa
ja
stc
fwait
pusha
xorl
push
mov
mov
xchg
lret
fwait
insb
std
cmp
add
notb
xor
repz
pop
sbb
mov
xor
lock
sbb
cmpb
sbb
lods
mov
pop
inc
push
aaa
mul
pop
ja
push
insl
loop
lahf
jg
ja
cmc
lds
add
push
xchg
mov
mov
inc
cmp
mov
dec
sbb
cmp
or
push
jmp
clc
cli
test
arpl
mov
fnstenv
push
cmpsl
sbb
pop
int3
pop
xor
mov
scas
je
outsl
test
dec
and
sbb
cmp
les
push
mov
pop
mov
testb
xchg
adc
jp
cli
imul
xchg
jmp
pop
and
enter
adc
sbb
mov
add
xor
mov
and
pop
int3
bound
mov
lcall
xchg
mov
std
shlb
push
mov
int
lods
dec
push
pop
aas
push
dec
xchg
popf
lret
scas
push
add
sub
in
mov
xchg
aam
dec
and
inc
mov
pop
jge
push
std
orb
jl
mov
push
mov
sbb
in
leave
dec
adc
cmc
add
lret
cld
pop
mov
into
sbb
imul
fdivp
mov
xchg
lahf
icebp
outsb
mov
sahf
jg
in
push
and
mov
scas
xchg
aas
ja
arpl
mov
stc
jg
cmpsb
fiadds
stos
sub
xchg
das
push
pop
pop
push
xor
jge
roll
mov
sahf
pop
dec
mov
ficoms
bswap
inc
aam
stc
in
rclb
mov
xchg
cmp
out
add
sub
sti
xchg
sahf
lcall
testb
rcrl
xor
push
push
jnp
aam
mov
mov
mov
mov
les
mov
stos
jge
in
rol
shlb
mov
push
outsb
mov
in
hlt
stc
ljmp
ror
pop
jg
add
std
jb
cmpsb
xor
sbb
ret
push
cmp
bound
xchg
fwait
outsb
jbe
shrb
mov
adc
xor
es
in
lock
mov
pop
xor
cmc
das
adc
push
out
out
pop
scas
in
sbb
mov
dec
nop
pusha
add
mov
ret
or
add
jae
or
adc
je
lods
xchg
or
inc
sub
adc
xchg
push
mov
int
inc
lods
xchg
nop
xor
inc
xchg
cmp
add
fstl
lcall
push
stos
push
inc
fisubrl
nop
and
ret
dec
mov
sbb
adc
call
test
clc
aas
stc
test
aam
mov
inc
and
divb
dec
into
push
das
or
sbb
adc
jbe
cmp
mov
xchg
pop
cltd
fildll
es
pushf
dec
lahf
mov
stos
inc
into
out
sahf
sbbl
add
jae
fisttpl
arpl
jb
popf
orl
aam
push
lret
xchg
sub
xchg
mov
xchg
ljmp
in
pusha
outsb
xor
adc
sub
pushf
pop
fucomip
enter
and
xchg
pop
js
mov
push
push
sub
sbb
mov
mov
repz
cmp
ss
xor
push
jg
nop
jne
lcall
rcrb
cmp
mov
outsl
mov
shll
mov
cmpsb
popa
sbb
hlt
popf
jge
push
push
loope
mov
inc
rcrb
push
rcll
addl
push
mov
xlat
adc
cmp
dec
fs
orl
mov
ds
call
push
insb
fldt
or
cmp
xchg
xchg
bound
cmp
lret
test
jo
jle
cmpsb
inc
add
jl
or
dec
sub
mov
adc
gs
dec
sub
test
aas
ret
shll
test
icebp
nop
jge
adc
xchg
cmpsb
xchg
inc
add
xor
jmp
dec
and
cmpsb
jno
rcrl
jecxz
inc
gs
bound
ret
mov
mov
mov
lock
mov
mov
jmp
test
pop
in
cmpsb
mov
pop
imul
jp
dec
fisubrl
setbe
imul
pop
cmpsl
fcmovb
aam
and
scas
movsl
js
jb
in
shlb
bound
cmp
jp
test
into
add
mov
push
jnp
lods
push
test
xor
ret
inc
jle
push
sub
vandps
jp
lret
or
sub
xor
xchg
pop
mov
into
lods
adc
stos
xor
sub
movsb
hlt
inc
dec
xchg
inc
negb
sub
xchg
jnp
xchg
push
popf
shrb
shll
fists
mov
pop
pop
push
lock
mov
fld
cmpsl
mov
cwtl
outsl
or
in
insb
ret
icebp
xchg
inc
cmp
inc
loope
sub
adc
test
mov
push
pop
xchg
out
aad
and
xor
shll
mov
aam
push
enter
fists
ffree
push
or
adc
fcomps
cld
shlb
mov
out
hlt
jno
in
js
xchg
scas
mov
adc
jae
mov
mov
lock
inc
in
movsl
loopne
or
rorl
in
xchg
mov
rcll
dec
ds
inc
int3
adc
add
and
jl
call
mov
push
fnstcw
jae
ds
movsb
inc
cmp
das
or
mov
int
insl
call
enter
mov
ror
cmpl
xor
daa
jecxz
fdivrl
mov
mov
daa
fnstsw
push
mov
pop
jo
and
adc
xor
push
pushf
dec
xchg
adc
loopne
push
in
fstps
popf
adc
int
lahf
mov
mov
adc
in
dec
mov
jle
jp
fdivs
adc
orb
ficoms
rclb
xor
xor
lea
sub
in
adc
xlat
inc
mov
aam
call
xlat
insl
mov
mov
jmp
lret
mov
divb
mov
pop
imul
mov
rcr
xor
test
repnz
lods
inc
adc
mov
jge
jp
int
in
mov
sub
lret
ds
push
leave
pop
mov
jmp
add
jecxz
mov
mov
fadds
mov
sti
pop
cltd
ljmp
or
ficoms
mov
movsl
pop
or
cmpl
aad
movsl
inc
popa
xchg
sub
cltd
loop
add
dec
scas
popa
outsl
fstl
jns
jnp
es
push
rcrl
wrmsr
pop
jne
cmp
jb
mov
adc
jb
push
dec
xor
dec
les
pop
fucomip
adc
rclb
inc
test
mov
mov
push
out
mov
loopne
pop
shll
movsb
int3
mov
in
cli
cltd
and
fsubp
xor
push
add
lods
jl
test
lea
mov
fists
or
pop
fbld
mov
dec
test
dec
shll
imul
xor
mov
jmp
fsubrs
xor
inc
les
lds
mov
sahf
lcall
sbb
mov
scas
movsb
pusha
pop
in
pop
hlt
jo
jg
call
gs
bound
sbbl
repz
cmp
sbb
jg
cs
pusha
jle
add
stos
jg
mov
pushfw
jmp
ret
jl
sbb
mov
clc
in
or
sub
cld
imul
xor
mov
mov
jl
pop
mov
pop
imul
movsl
mov
jne
test
test
jbe
mov
es
or
inc
push
imul
stc
sbb
vandnpd
or
roll
lahf
push
repnz
shr
pop
in
mov
pop
push
nop
repnz
pop
dec
and
in
mov
dec
dec
pushf
or
loope
mov
gs
jp
or
pop
push
test
aas
pop
aas
push
fistpl
xlat
sub
mov
imulb
stos
in
xchg
mov
iret
jae
popf
add
xadd
mov
xchg
mov
call
cmp
jge
push
jb
aaa
into
push
lods
lcall
dec
mov
cli
push
mov
xor
xor
inc
lret
into
leave
or
pop
adc
mov
inc
dec
es
inc
rol
ljmp
js
decb
arpl
int3
fidivs
stc
cmp
jo
aam
in
hlt
mov
daa
push
mov
jne
rclb
insl
insl
cwtl
repnz
adc
call
add
dec
mov
or
ret
notb
mov
stos
mov
sar
adc
dec
cwtl
imul
cmpsb
dec
out
fists
sbb
hlt
or
push
mov
or
xlat
mov
push
jb
test
and
add
scas
cmp
inc
das
mov
in
sub
cmpsl
popa
inc
aad
sbb
test
sbb
lcall
pop
lods
orb
push
fs
push
lock
dec
add
pop
sbbb
orb
lret
imul
push
mov
cmp
in
sbb
xchg
mov
add
cld
arpl
pop
sbbb
xchg
add
fistl
mov
push
lret
mov
pop
fcoml
out
cmp
test
iret
cltd
sar
push
pop
mov
in
lods
add
lret
sti
js
cmp
pop
repz
cld
test
outsl
data16
add
ret
pushl
into
mov
mov
inc
cmpb
popa
or
mov
push
insb
imul
xchg
mov
and
inc
call
pop
jmp
js
push
scas
std
in
adc
push
and
rorb
dec
xchg
lret
fsubr
mov
aas
in
loope
mov
fsubrl
into
cmp
mov
aad
cmp
and
arpl
inc
fs
cmp
sbb
cmp
add
mov
mov
jnp
ds
adc
test
call
les
andb
push
jns
int3
cmp
je
xlat
jp
rcrb
shrl
or
or
xor
xchg
mov
xchg
push
xor
dec
pop
xchg
outsl
or
cs
cmp
pop
sbb
cli
add
xor
loop
adc
in
jnp
push
or
negl
aam
sarb
mov
fistl
lock
fs
es
push
lret
mov
dec
cltd
cwtl
sahf
push
sbb
stos
arpl
mov
cmp
int3
scas
push
mov
sbb
jnp
fiadds
subl
adc
pusha
jmp
xchg
push
stos
out
adc
rcll
cmp
jcxz
jns
pusha
push
sbb
adc
fmull
aaa
xchg
xor
dec
repz
std
fwait
push
popf
sub
xchg
rcrl
test
dec
stc
mov
test
cltd
adc
push
stos
jl
xchg
clc
arpl
movsl
inc
incl
xor
adc
mov
adc
pusha
dec
jle
cli
lods
and
jbe
inc
adc
xlat
sub
lret
mov
fistpl
gs
rcll
inc
les
idivl
mov
mov
sbb
jecxz
sbb
ret
mov
jge
or
arpl
ds
pop
nop
sub
out
sbb
clc
jno
lahf
add
int3
adcb
or
outsb
leave
pop
test
jp
mov
pop
fsubr
rcrl
and
or
mov
inc
jb
mov
mulb
dec
jne
mov
adc
shl
ja
fadd
fimull
add
jno
jns
inc
jns
jne
cmpb
loop
add
sub
out
out
int
pop
sub
jle
ss
mov
xchg
popf
cmp
movsl
sbb
sub
addb
sub
orl
inc
mov
lods
jno
sbb
cmp
mov
enter
movsb
imul
insb
ret
rcrb
xchg
cld
jecxz
lds
stos
and
cmp
mov
fistpl
leave
and
rol
aaa
xor
push
push
jae
enter
pop
roll
lock
je
and
cmpsb
mov
out
xchg
repz
and
imul
xor
adc
loopne
and
jmp
std
and
mov
es
mov
mov
ss
lahf
mov
jbe
cmp
psraw
in
and
movsb
dec
mov
mov
dec
adc
pop
xchg
xlat
push
xor
aas
aad
jg
mov
insl
xchg
jle
hlt
mov
js
xchg
dec
adc
mov
adc
iret
mov
pop
cli
sub
jo
jmp
and
jle
jg
pop
ja
arpl
adc
jno
lds
mov
adc
cmpl
mov
cli
orb
mov
and
sub
push
fmull
xchg
xchg
lret
and
lret
push
pop
jl
push
loope
movsb
mov
fwait
jbe
jns
sub
xorb
mov
xchg
lods
mov
mov
sub
sarb
or
sub
dec
es
xor
cld
pop
fs
lahf
imul
sbb
jmp
jp
xor
sub
add
or
pop
push
fs
mov
ja
je
push
sbb
daa
into
jmp
mov
ds
popf
sahf
xor
cltd
xchg
mov
ret
bnd
jb
fisubrs
aam
pop
jnp
rcrl
push
test
dec
push
push
or
ret
fmull
add
push
pop
fistpll
or
aaa
mov
test
fs
pop
pop
jns
add
mul
loopne
add
xchg
push
mov
shrl
mov
fcomip
iret
xlat
fucom
cmp
jne
inc
pop
subl
lret
out
stos
repz
dec
cltd
addr16
lcall
adc
loope
mov
in
xlat
lret
lcall
push
mov
mov
dec
push
cmc
iret
push
cmp
icebp
mov
std
cmpsb
mov
add
ljmp
out
enter
inc
pop
in
mov
pop
fcomp
jmp
aas
mov
ret
fstpl
xchg
mov
rep
idivl
test
out
push
pusha
rcl
test
add
dec
in
int3
or
cmc
icebp
sub
lds
sub
pop
or
into
ficomps
xchg
cli
pop
insb
inc
int3
and
and
pop
hlt
fisttpll
and
jbe
rcrb
test
incl
stc
ja
inc
popf
cmp
or
shrb
add
xchg
ljmp
cmp
jnp
xchg
xchg
repz
in
mov
push
cmpsb
nop
push
stos
lock
sub
or
mov
adc
xchg
aam
cmp
fadds
leave
cltd
shlb
sti
xor
mov
inc
xchg
nop
xchg
jb
inc
jl,pt
ret
xchg
cmp
or
sbb
js
int3
scas
ja
xor
je
mov
outsl
dec
jns
vpunpckhbw
inc
stc
nop
cs
inc
imul
ret
sub
add
dec
or
out
adc
xchg
mov
xchg
add
push
mov
ljmp
in
cltd
pop
loopne
pop
cmc
push
jmp
ret
cmp
sarb
outsb
pop
xlat
loope
gs
fsubl
inc
xchg
out
push
cmpsb
xchg
gs
popf
push
adc
jae
adc
cs
inc
push
xor
mov
cmp
cmp
incl
cmp
sub
test
aas
ret
mov
dec
or
mov
outsl
enter
movl
vcvtss2sd
dec
sahf
leave
ja
aaa
mov
push
shrl
sysexit
repz
xor
decl
addr16
lcall
mov
incb
xchg
push
outsl
and
jne
cmp
adc
dec
dec
xchg
adc
or
mov
pop
pop
aad
fildll
outsb
mov
out
xchg
mov
mov
in
mov
sbb
in
jb
jg
pop
and
sub
mov
push
cmp
and
push
ljmp
aam
jecxz
popa
mov
into
push
add
subb
enter
jle
xchg
into
lock
mov
pop
icebp
daa
sbb
cmpsl
jge
in
insb
mov
inc
out
fldl
adc
or
xor
ljmp
je
sub
mov
sub
lods
imul
inc
mov
and
lea
add
cli
or
lods
add
sar
data16
divl
outsl
shll
sbb
adc
sub
lods
ja
out
adc
push
sub
fwait
jp
pop
test
pop
push
data16
dec
cmp
popf
dec
jbe
or
xorb
lret
pop
not
xor
idivl
arpl
push
jbe
ljmp
out
fs
psubq
push
call
in
aas
int3
pusha
mov
int3
or
in
mov
or
mov
add
pop
adc
jns
push
mov
shl
insb
pop
xchg
in
cmp
test
notb
fdivr
push
mov
lock
mov
out
mov
mov
mov
test
mov
jae
cmp
xor
push
and
ror
in
imul
lods
pop
fdivr
cs
push
mov
add
shlb
aaa
inc
fisubrs
push
inc
lret
xor
sbb
sbb
ret
cwtl
mov
ret
movb
pusha
mov
mov
and
sti
out
push
cmp
add
pop
loop
jmp
or
insb
jecxz
jmp
dec
xchg
mov
fnstcw
pop
mov
sub
push
inc
inc
decl
jle
sub
and
or
mov
sarb
shrl
pop
outsl
mov
adc
xor
adc
leave
xchg
mov
pand
push
lds
xor
push
pop
popa
in
pop
xlat
dec
movsl
sbb
mov
cmp
aad
mov
jmp
iret
sbb
add
divb
adc
jg
jns
add
dec
xchg
sbb
ss
popa
sbb
mov
add
xor
cmc
pop
out
int3
sbb
repnz
out
jecxz
push
xor
mov
pop
dec
mov
push
add
or
sbb
push
cwtl
lods
arpl
mov
or
push
push
leave
adc
sbb
in
mov
js
push
iret
psubb
sub
lcall
imulb
xorb
push
sti
adc
xor
mov
jbe
lcall
adcl
ljmp
pusha
dec
fs
sti
scas
pop
fimuls
in
and
mov
pop
cmp
push
jmp
mov
mov
cs
or
mov
scas
xor
stos
cli
nop
mov
mov
lahf
loope
jnp
inc
jns
mov
test
fwait
sub
cltd
ret
fsubs
xchg
dec
pop
fsubr
lcall
negl
enter
addr16
xchg
cwtl
and
scas
cmp
jecxz
pushf
cmp
mull
iret
stos
sbb
out
mov
stos
mov
popa
fiaddl
out
movb
lds
mov
sbb
xchg
lcall
sbb
push
jp
sub
pop
xor
jmp
pop
addr16
cmp
lcall
sti
jne
sbb
out
aad
ljmp
loop
and
int3
and
add
mov
loopne
xor
shr
push
push
add
call
ja
jnp
roll
cli
mov
dec
adc
inc
pop
and
orl
xlat
fnstenv
pop
test
xor
scas
repnz
mov
push
xchg
cmc
pmulhuw
inc
mov
dec
inc
cltd
adc
sbb
in
and
ja
divb
jnp
xchg
fcompl
xchg
gs
out
cmp
adc
xor
mov
sub
push
mov
adc
mov
shl
je
fwait
dec
and
dec
dec
xchg
lret
in
jnp
popa
test
jno
in
mov
mov
in
fdivrl
das
xchg
push
out
dec
mov
shlb
inc
inc
mov
gs
les
dec
push
sbb
push
int
xor
xor
pop
dec
xchg
bound
xchg
lcall
rolb
cmp
imul
jl
mulb
lods
pop
test
clc
inc
les
sarl
loop
rclb
test
jmp
enter
jne
nop
xor
aad
pop
leave
jne
push
inc
aaa
xchg
enter
jp
jno
inc
fwait
pop
addl
add
popl
aad
pushf
pop
dec
aaa
xlat
mov
dec
pusha
push
inc
pusha
stc
xchg
cmp
and
xorl
pop
mov
add
outsb
div
and
jns
stc
lcall
into
dec
sahf
nop
mov
sahf
adc
jge
mov
or
jle
xchg
ror
xor
dec
les
cmp
inc
and
scas
sub
out
dec
xchg
cmp
xorb
inc
jo
idivb
scas
clc
ja
enter
jecxz
popf
iret
cmc
jge
xchg
into
jge
sti
dec
pushf
jb
fstp
add
aaa
xor
dec
incb
adc
out
cmp
mov
and
insb
pop
xchg
jbe
push
xchg
jge
cltd
lea
push
mov
or
lret
push
scas
adc
push
inc
imul
inc
xor
mov
mov
xor
lds
mov
dec
dec
sbb
insl
inc
lea
and
xlat
jmp
lock
out
mov
in
je
icebp
jo
insl
or
jmp
arpl
iret
shl
ljmp
test
or
jecxz
cmp
cmp
adc
cltd
mov
cli
lret
jo
lahf
mov
xor
lahf
rcr
mov
daa
incb
jp
rorl
add
pop
adc
cmc
push
cmp
inc
mov
test
cmp
mov
lret
mov
fstpl
enter
push
cmp
mov
clc
ret
xor
cmp
xor
inc
shl
add
rcrl
sarb
adc
andps
push
push
jmp
sar
mov
jl
es
rcr
cltd
lods
mov
icebp
fwait
imul
push
or
aad
jg
dec
pop
dec
mov
xor
dec
add
push
ret
inc
stos
aad
mov
mov
mov
scas
loope
push
out
aad
lcall
xor
data16
and
pop
sub
ret
scas
or
cltd
mov
mov
mov
mov
mov
ds
insb
add
outsb
pushf
shl
mov
icebp
or
jns
cmpsl
pop
rcrl
cmp
pop
add
lret
lcall
inc
xchg
in
idivb
and
cmpsb
xchg
cwtl
adc
stos
cltd
dec
test
mov
data16
not
xor
mov
jno
out
out
inc
cltd
mov
xlat
dec
ja
subb
ds
dec
jmp
aas
lret
stos
cli
sub
dec
adc
rep
aam
rcr
push
aad
ret
cmpsl
jmp
push
cmp
cmp
in
bound
cmp
or
add
out
push
lret
xchg
jg
lods
cmp
outsl
lahf
mov
test
xchg
lea
jge
out
pop
mov
es
insl
daa
xor
addr16
mov
and
mov
dec
test
loopne
lret
data16
jb
mov
ja
rcr
xchg
sub
add
jecxz
mov
push
int3
sbb
pop
leave
dec
test
lods
lret
jb
add
stos
xor
cmp
ret
ret
fbstp
jno
jmp
lret
push
dec
sahf
xor
mov
pop
outsl
popa
std
sbb
add
xchg
jl
std
ljmp
rcrb
popf
repz
sub
cmp
cmpl
adcb
mov
jle
push
jl
inc
sar
ficompl
mov
add
push
mov
das
aam
or
outsl
aam
and
enter
lods
sbb
es
cmp
dec
mov
xchg
lahf
sbb
sub
imul
xlat
loop
in
mov
movsl
xchg
mov
xor
outsl
in
les
cltd
test
loope
mov
jge
aaa
repz
test
or
sarl
mov
push
sub
cmpsb
adc
aad
mov
cli
mov
test
mov
push
fidivrl
dec
xor
movl
sub
int
adcl
lahf
cmp
je
add
push
push
outsb
daa
dec
pop
jne
aaa
test
and
loopne
and
jne
cli
fsubl
and
pop
mov
jp
mov
addr16
adc
sbb
imul
out
je
push
cs
or
mov
mov
dec
lods
sbb
stc
shr
sbb
aaa
shr
mov
inc
sub
mov
push
fldcw
xor
or
pop
inc
cmpsl
lods
idivb
je
data16
data16
mov
mulb
sahf
xchg
les
cmp
or
xor
in
ljmp
cli
std
and
imulb
movsl
inc
inc
fwait
mov
leave
lcall
xor
push
lds
and
adc
push
jne
loopne
pop
sbb
add
xchg
mov
aaa
test
int3
adc
mov
loopne
mov
push
cmp
clc
push
sub
sbb
fcompl
sub
imul
rcrl
jp
mov
in
ljmp
cmpsb
adc
rolb
repnz
and
pop
in
cmpb
and
add
iret
and
jp
out
in
leave
push
and
and
add
fwait
out
lods
jl
aaa
lahf
sub
jp
ds
sbb
jb
test
dec
sbb
inc
jmp
sti
fisubl
loope
divl
pop
ja
cmpsb
sti
jg
in
mov
leave
inc
or
outsb
mov
std
aad
dec
inc
sub
scas
or
inc
push
cld
fsub
movsb
fiaddl
std
addr16
or
fwait
arpl
add
je
int
or
aas
mov
mov
in
push
push
cmp
sti
pop
addr16
or
jno
jbe
xor
dec
sahf
imul
stos
sub
add
out
push
sahf
movsl
jmp
sbb
ret
loope
std
orl
gs
mov
dec
or
test
xor
mov
daa
popf
pop
std
push
rcrb
dec
ret
test
sti
fistps
push
ret
inc
cs
inc
shl
mov
dec
insl
mov
mov
movsb
cmpsb
lret
xlat
dec
inc
mov
andl
cs
cli
xor
push
cmpsl
lcall
dec
mov
call
pop
popl
imul
std
and
jnp
jp
les
fdivr
mulb
cmp
inc
or
mov
cmp
mov
xor
adc
adc
imul
pop
and
inc
push
lea
adc
dec
mov
inc
jnp
repz
out
cmp
sahf
leave
push
icebp
outsl
movb
psubsb
and
jnp
mov
pusha
test
rolb
data16
push
inc
sbb
adc
mov
xchg
out
pop
adc
or
lahf
push
cmpb
cmp
inc
sbb
or
mov
stc
pop
or
xchg
xchg
movsb
testb
frstor
lcall
lock
and
mov
rol
cmp
mov
test
mov
andl
repnz
cmp
lods
pop
jne
test
out
stc
jle
sub
mov
mov
cmc
pop
jno
enter
clc
sbb
lds
loope
pop
push
inc
int3
mov
or
aad
add
adc
daa
fsubrs
test
jnp
pop
daa
jns
sbb
test
daa
test
push
test
lods
addr16
sbb
and
je
je
push
je
outsb
xor
fincstp
jae
repz
fsubl
xchg
add
rolb
mov
dec
imul
jl
xor
test
lea
fnstenv
lds
push
lret
repnz
inc
or
mov
cmc
aad
sub
add
dec
mov
in
xlat
pop
and
aaa
arpl
jmp
lods
xor
repnz
sbb
lcall
and
pop
cld
xchg
or
inc
mov
or
add
stos
in
orl
psrad
jmp
mov
out
insb
daa
mov
push
jne
add
fst
jo
out
test
lea
add
scas
jecxz
mov
lret
nop
lock
pop
in
adc
inc
or
mov
iret
sub
cmp
and
push
imul
inc
cwtl
movsb
or
in
clc
jl
fmul
xor
loopne
jnp
cmp
lods
lret
mov
lods
jns
movb
insl
lcall
mov
cli
testl
push
insl
jle
addl
int
xor
pushf
jb
sahf
sub
pushf
jl
dec
popa
adc
sbb
in
cmp
jne
arpl
push
push
roll
lret
pusha
lods
mov
xchg
fwait
cltd
ficomps
push
dec
cmp
xchg
or
xchg
inc
scas
pop
insl
xchg
pop
lock
adc
and
cwtl
cmpl
push
inc
leave
cmpsl
add
cs
mov
mov
insb
mov
lcall
dec
jae
sbb
out
xchg
test
push
dec
adcw
cwtl
fists
inc
xor
aaa
daa
push
out
dec
sbb
lcall
shll
stos
leave
ret
roll
ficoms
or
pop
lock
lods
rclb
loope
inc
and
cwtl
cli
lcall
in
mov
xor
cmpsb
shrl
leave
into
mov
sbb
data16
dec
push
call
xchg
out
adc
sub
mov
push
and
xor
jmp
dec
jp
pop
loope
xor
push
inc
test
movb
jae
sbb
push
jb
subb
xor
ror
mov
pop
cmp
aad
pop
xchg
mov
mov
dec
cmp
loope
or
adc
sub
mov
pop
stc
sbb
ja
in
push
mov
mov
scas
fdiv
je
add
mov
das
jb
jl
mov
push
fs
movsl
adc
outsb
and
jecxz
cmc
or
test
sbb
add
cmpsl
inc
add
inc
mov
sahf
or
bnd
mov
mov
cli
push
sub
addb
mov
aam
push
sub
movsl
shll
push
ret
inc
sub
mov
es
iret
frstor
ficompl
push
jecxz
jl
mov
cmpsl
movsl
jp
or
sbbl
out
adc
adc
fidivrs
xor
fistl
xor
xlat
shll
push
sub
and
out
scas
lahf
nop
mov
pop
jle
les
lds
mov
jns
jne
je
fnstenv
add
jp
jge
dec
adc
out
mov
fnstsw
add
inc
lret
fistpl
lcall
jge
roll
jmp
aad
sbb
jecxz
push
or
xchg
rorb
int
fstl
cmp
outsl
les
shl
outsl
imul
rclb
jns
push
adc
sub
mov
shlb
insl
fiaddl
sub
movsl
inc
jno
les
xorl
jbe
add
sbb
cmpl
je
ficoml
sub
push
xchg
jmp
sub
shrl
push
sub
sbb
outsb
push
bound
adc
and
dec
mov
fimuls
adc
arpl
xchg
fld
iret
les
repz
and
ljmp
out
sbb
dec
testl
outsb
sahf
outsb
sbb
loopne
mov
sarl
lods
jle
or
fwait
out
push
cs
cmp
cwtl
inc
and
orl
lret
push
mov
push
pop
lcall
shl
pop
pusha
imulb
test
pop
pushf
repz
push
push
aas
fcoms
repz
add
mov
pop
dec
das
mov
mov
sbbl
adc
test
mov
daa
pusha
fwait
sti
sbb
xor
lcall
dec
inc
in
testl
add
adc
test
loopne
loopne
xor
in
arpl
inc
ja
iret
cmp
outsl
xor
stos
fbstp
dec
loop
mov
xor
scas
jle
sbb
outsb
rcpps
cmp
mov
shrl
push
int3
mov
dec
pusha
lea
andb
js
and
xchg
jo
dec
insb
adc
jae
jl
or
pusha
lret
add
sub
mov
push
pop
xchg
sub
xchg
adc
mov
xor
mov
ja
loopne
popa
jp
cmp
xor
scas
xor
lea
andl
xorb
jle
xchg
xlat
sbb
cs
or
icebp
sbb
cmc
mov
in
cmp
dec
inc
and
xlat
leave
or
pop
imul
sub
rol
in
in
stc
scas
jno
xor
or
fcmovnbe
lods
cmpsl
divb
xchg
push
mov
or
orl
fbstp
mov
mov
sbb
int3
insb
or
ss
movsl
mov
xor
imul
push
jg
inc
orl
clc
jl
inc
out
push
jb
xchg
mov
pop
xchg
sbb
aas
loop
imul
xchg
daa
mov
jo
cld
inc
loopne
sbb
sub
pop
mul
lahf
aam
cmp
pop
insb
push
jl
dec
stc
into
lods
pop
cmp
out
pop
mov
test
bound
fwait
mov
sarl
add
push
pop
das
icebp
or
outsl
xchg
push
dec
out
or
test
inc
or
push
adc
dec
adc
jmp
push
mov
xchg
sarb
sbb
je
rcrl
pop
sti
mov
sahf
insb
das
test
popa
inc
mov
nop
fcoml
add
mov
pushf
andl
and
ds
sti
add
pop
lock
lret
add
mov
adc
dec
cmovge
jbe
xchg
inc
dec
and
sarl
fstpl
mov
and
add
js
cmp
shrb
outsb
sub
mov
imul
xor
fdivrs
or
push
into
pop
cld
push
clc
rcrb
jge
outsl
jbe
mov
sbb
adc
lcall
jmp
js
lcall
rcrb
into
or
push
and
incb
and
or
jmp
xor
xchg
pushf
mov
loopne
jecxz
pushf
and
nop
rcll
xor
cld
sbb
leave
out
aaa
xchg
sbb
mov
xor
mov
xlat
mov
xchg
mov
xchg
push
pop
cmpsb
sub
arpl
and
fucomp
fwait
sub
testb
jp
pop
loop
lea
lahf
fwait
xchg
stos
imul
pop
mov
out
es
rclb
jle
nop
ljmp
clc
loop
jns
aad
mov
iret
lret
outsb
enter
and
dec
jl
std
jl
lret
pop
ret
mov
dec
repz
dec
les
shr
xchg
pushf
dec
inc
mov
pop
arpl
add
xor
sub
cmpsb
cltd
pushf
mov
dec
sarl
cwtl
in
scas
lds
les
in
cmp
jle
adc
rcrl
fdivrs
or
and
and
push
push
cs
gs
adc
pop
mov
lods
movsl
hlt
pusha
push
inc
cmp
loopne
cmp
mov
mov
xchg
in
stc
mov
int3
sbb
pop
mov
jne
stos
jl
pop
pop
iret
insl
mov
mov
sarb
rol
dec
rcll
outsb
push
lret
sub
jne
aam
jbe
aad
push
mov
mov
jb
fstpt
ret
and
loope
in
mov
push
int
and
in
jb
fwait
repz
jle
jge
sar
mov
adcl
out
xchg
out
shlb
xor
lods
pop
fcoml
or
imul
dec
xchg
xchg
add
xor
adc
orb
adc
aas
lahf
dec
jp
lea
lods
cmp
push
sbb
adc
std
mov
jno
push
jp
inc
es
pop
mov
inc
adc
in
enter
pop
mov
stc
jne
inc
fs
pop
pop
dec
adc
aad
and
jns
or
push
sub
test
xor
jle
dec
dec
out
pop
xchg
adc
sub
cmp
push
in
in
lods
iret
ret
test
xor
or
inc
and
cmpsb
sti
fcmovnb
mov
lea
mov
lcall
xor
idivb
push
sub
add
stc
push
insl
inc
mov
pop
shlb
aaa
mov
clc
lock
aaa
lahf
inc
and
sub
insl
mov
or
dec
mov
in
mov
pop
lea
pop
fcmovnbe
clc
fcos
and
push
xor
xlat
mov
xchg
mov
mov
lea
pop
pusha
jbe
xchg
xchg
jmp
mov
inc
scas
je
int3
or
pop
test
int3
sub
cmp
pop
xchg
adcb
ret
arpl
movsl
outsb
cmp
aad
shll
xor
loope
sbb
cli
mov
rcll
push
cmp
add
lret
push
bound
adc
mov
arpl
int3
int
loop
in
mov
and
mov
inc
cld
std
outsl
nop
stos
add
pop
andl
clc
push
mov
xor
aam
inc
add
fldt
mov
push
dec
mov
xchg
and
jb
mov
jo
mov
inc
out
mov
cwtl
cli
inc
pop
and
mov
and
adc
in
das
addr16
and
lea
cli
mov
pop
push
and
pop
jbe
pop
lods
in
fdivrs
scas
cld
jg
inc
fisubrs
dec
insb
cwtl
scas
inc
cmpsb
out
adc
pop
cli
inc
pop
lea
shrl
jmp
pop
jo
xchg
pushl
cwtl
test
mov
xchg
mov
push
stc
pop
lds
mov
movsl
int
pcmpeqw
xor
push
sbb
inc
xchg
inc
fwait
adc
push
lcall
sub
mov
add
popa
shll
cmp
fisttps
jnp
inc
mov
addl
or
fwait
out
std
mov
ljmp
push
xchg
inc
push
insb
imul
dec
in
dec
dec
mov
jne
xor
inc
mov
inc
cwtl
lahf
xor
inc
add
lods
outsb
sar
les
cmp
and
adc
lods
sbb
outsb
lcall
mov
add
test
dec
pop
push
call
mov
imul
lea
imul
sbb
sahf
sahf
sbbl
and
test
lret
inc
imul
xchg
outsl
outsb
ds
cmp
fiadds
jecxz
xchg
test
mov
popf
push
add
xor
dec
mov
inc
or
cwtl
inc
dec
fcmovne
adc
mov
and
outsb
arpl
fldl2t
pop
xor
je
dec
inc
push
ja
mov
lock
pushf
ret
dec
cltd
movsb
fisttps
pop
sahf
dec
outsb
movsl
hlt
loop
cs
cmp
xor
dec
test
mov
adc
dec
arpl
scas
xor
fmull
sbb
push
push
xor
je
insb
pushf
mov
sub
stos
hlt
out
jmp
xchg
call
ja
lods
or
and
in
xchg
push
js
jb
mov
jo
add
scas
push
dec
xor
je
ret
out
pop
push
jne
mov
notb
in
xchg
push
cmp
scas
in
scas
in
daa
xchg
cmp
dec
int
stos
sub
or
sub
js
or
adc
aas
cld
xor
cld
inc
popf
hlt
fdivr
mov
adcb
dec
add
aaa
imul
sbb
inc
push
mov
cmp
gs
mov
mov
mov
mov
pop
je
leave
movsl
push
jmp
rolb
mov
loope
out
xchg
xor
inc
scas
cmp
or
cmp
dec
movsl
movsb
xchg
mov
jb
cmpsb
ret
jo
dec
loopne
dec
pop
xor
sub
adc
aad
int
outsb
add
mov
clc
fisubrl
jle
mov
cmp
jne
outsb
loop
daa
in
test
addl
sbb
inc
adc
xor
fistps
lcall
push
add
xchg
movsl
adc
and
push
repz
fmuls
and
or
lcall
fcomi
aas
push
decl
int3
ror
sysret
sarb
imul
mov
loope
insb
invd
loopne
int3
sub
and
shlb
mov
adc
inc
push
mov
dec
aaa
pop
cmp
pusha
push
cld
add
add
xor
xchg
dec
cmp
addl
dec
es
lret
callw
and
inc
fwait
or
push
pop
mov
lock
xlat
testl
ret
pop
lcall
or
lret
das
jge
pop
add
in
loop
sub
cmpsb
stc
adc
inc
test
add
sbb
cli
adc
es
into
jae
ret
out
call
andl
adc
sarb
xor
out
shrb
les
sub
pop
pop
sub
mov
repz
jbe
out
cmp
mov
push
sub
sahf
rolb
and
pop
insb
scas
push
repz
call
dec
push
inc
jle
leave
mov
dec
jno
cmc
xchg
add
inc
aam
push
pop
fisttps
js
testl
outsb
pop
sub
sti
insl
stos
scas
enter
sbb
jne
mov
xchg
add
cld
lahf
or
aam
sub
adc
pop
out
scas
cmpsb
mov
push
xchg
jp
mov
mov
inc
loopne
fwait
lods
cmpsb
call
xor
push
lcall
and
mov
add
push
gs
add
dec
popf
loopne
or
or
stc
mov
lret
inc
adc
and
hlt
push
icebp
pop
mov
push
pop
sub
test
nop
push
jae
insb
jmp
insw
and
mov
xchg
jno
repnz
andl
xlat
out
mov
lret
sbb
shl
jo
aad
movsl
jae
test
xlat
nop
jle
push
inc
int
dec
nop
in
push
fdivp
mov
lret
hlt
bound
mov
push
icebp
in
sub
clc
pop
cmp
add
nop
lock
and
aad
outsl
sbb
inc
fstps
mov
jno
sub
lock
jecxz
rcrl
jp
punpckhwd
cmp
in
and
lahf
enter
in
dec
outsl
scas
sub
repz
jnp
test
dec
jno
loopne
pusha
add
outsb
test
in
xor
jp
stos
enter
cld
nop
inc
icebp
je
pop
ljmp
enter
mov
into
pushf
xchg
push
xor
clc
sbb
cmp
outsb
movsb
and
cmpsb
or
sub
leave
pop
fists
je
xor
pop
adc
inc
in
mov
lock
jmp
adc
cmp
std
pop
out
aad
jle
popa
sbb
out
or
aas
fcmovnb
dec
ja
dec
mov
pop
lea
bound
leave
push
mov
xchg
inc
nop
dec
into
jnp
inc
dec
xchg
mov
sbb
and
jo
out
pop
aaa
fdiv
lret
dec
push
or
movsl
sahf
sbb
or
pusha
clc
movb
js
xor
mov
xor
xlat
adc
adc
mov
lock
test
push
push
test
mov
rcr
push
in
and
gs
push
pop
scas
mov
mov
lods
jecxz
insl
pushf
sbb
and
test
sub
shrl
imul
mov
jl
sbb
mov
notb
loopne
and
push
jbe
mov
rorl
lahf
aaa
pop
ret
imul
std
out
mull
pop
push
pop
les
adc
mov
popl
jge
push
outsb
inc
gs
cmpsl
inc
lea
arpl
cmpsb
mov
xor
stos
call
enter
fsubrs
mov
dec
subb
clc
adc
clc
ss
addb
push
pop
std
and
cmpsb
push
clc
cmpsl
add
pop
aas
sub
cmp
lret
xchg
jbe
and
xorb
clc
push
inc
in
jns
in
sub
sub
and
outsl
or
sahf
sahf
out
mov
dec
jmp
cmpsl
aad
push
cwtl
loopne
cmp
stc
sbb
fldt
ficoms
mov
add
lock
test
push
lods
icebp
ljmp
cmpsl
lret
dec
lds
lock
xlat
sar
pushf
mov
xorb
out
out
mov
subl
push
sub
lcall
jl
jo
nop
push
xlat
stos
cwtl
mov
imul
push
out
jl
pop
cmc
mov
xchg
cs
aam
xor
out
lahf
ja
adc
icebp
fs
dec
jns
push
add
mov
insl
dec
jne
push
xchg
daa
stc
inc
arpl
or
loope
pusha
loop
xor
and
lcall
testb
dec
dec
mov
xchg
mov
cmp
hlt
sbb
lahf
mov
clc
mul
icebp
call
inc
lahf
inc
jbe
test
stos
leave
xchg
sbb
pop
dec
pusha
jno
dec
rcl
call
cmp
arpl
je
leave
or
outsl
mov
xchg
aad
adc
dec
xor
mov
or
rcrb
jno
mov
sti
aad
pop
arpl
jns
pusha
mulb
push
flds
pop
out
mov
add
iret
add
fistps
adcl
push
mov
dec
in
fcompl
ljmp
jae
cmp
fnstenv
jb
daa
and
test
filds
mov
addr16
out
cmp
stc
loope
jle
outsl
push
rcll
das
add
or
rorl
into
loop
push
jae
cld
out
imul
jmp
mov
mov
stos
push
rcll
fcmovne
movsl
and
mov
out
out
int
movsl
ret
lock
stos
ja
adc
add
out
arpl
shl
pop
xchg
popa
hlt
orb
and
lock
jecxz
mov
cmpsl
rorb
aad
sub
cmp
adc
and
in
filds
mov
sub
inc
lret
lods
cmpsb
cmp
xlat
jne
sub
add
xor
xchg
cmpsb
push
mov
xchg
xchg
daa
and
insl
sbb
sbb
mov
inc
xor
gs
fnsave
int
test
insb
xor
xchg
fldcw
push
pop
jo
dec
pusha
fcompl
aaa
rol
int3
xchg
sbbb
sar
push
dec
bound
out
jl
sar
mov
mov
xor
inc
xor
or
dec
loope
push
dec
fistpl
mov
add
push
push
int
xor
xchg
pop
imul
sbb
out
repz
fidivrs
pop
outsb
or
mov
xchg
movsl
lods
add
fidivs
jns
cs
mov
cmp
mov
mov
out
push
dec
pop
pop
pop
mov
add
and
sbb
das
push
es
mov
ja
xchg
or
outsl
sub
sub
ret
xchg
mov
cmp
dec
mov
lret
dec
dec
adc
dec
scas
sti
mov
shr
mov
and
sub
mov
lcall
and
scas
xor
sub
fs
push
inc
add
jno
mov
push
je
add
leave
jb
lcall
mov
les
inc
fsubrp
jmp
xchg
cmp
xlat
xor
push
xchg
movsl
push
jo
push
out
xchg
scas
mov
addr16
pop
outsl
cld
ret
insb
xchg
inc
jecxz
ja
ja
push
push
test
into
mov
out
vmovd
jle
aas
lahf
mov
stos
jbe
push
inc
sbb
stos
dec
sahf
pop
repz
push
inc
fdivrp
cs
inc
cld
mov
or
lods
sbb
pop
jne
es
mov
mov
dec
out
sub
inc
scas
xor
je
outsb
outsl
orl
pop
sub
jo
dec
push
sub
jno
inc
push
sub
sbb
dec
pop
dec
mov
lcall
cmp
addb
dec
test
movsl
stos
mov
push
mov
fsts
cs
into
sti
push
cmp
mov
sub
int
into
jbe
into
xor
js
add
loope
xchg
test
xchg
xor
cmp
push
inc
hlt
jo
pop
lea
add
aam
sbb
cmp
or
repz
add
cmp
ret
push
shl
movsb
in
push
and
jge
push
jp
jg
mov
mov
insl
xchg
sbb
imul
mov
insl
jae
mov
cltd
aaa
sub
cmpl
in
ret
adc
lds
mov
data16
fidivs
mov
repnz
lods
outsl
xlat
jle
outsb
movsb
or
test
mov
scas
insl
icebp
dec
dec
shlb
and
mov
in
lahf
fs
xchg
jns
jecxz
mov
sub
xchg
add
dec
fdivrl
jmp
jl
out
stc
mov
cli
cld
dec
xor
and
aam
jae
ret
xor
in
jns
add
add
in
xchg
jecxz
mov
adc
pop
outsb
and
fldt
or
mov
add
jge
dec
repz
sub
cs
jo
pop
or
shlb
pop
into
in
fimuls
xchg
aaa
jg
mov
lret
and
adc
fimull
adc
in
test
in
add
fcoms
mov
test
dec
push
aad
popa
cmp
push
xor
add
addr16
mov
dec
lcall
arpl
jecxz
xor
sbb
and
adc
mov
adc
mov
inc
xor
lods
pop
rclb
inc
dec
shr
pop
xor
xor
mov
xchg
out
stos
add
sahf
enter
sti
xorb
mov
sahf
mov
sbb
xlat
mov
mov
jne
test
jge
mov
in
mov
and
jle
test
pop
lcall
arpl
xchg
sbb
notb
cmp
push
aaa
fdivr
xor
dec
inc
push
sarb
xchg
or
sub
in
aas
push
add
and
lea
mov
jp
mov
std
and
jns
fsubrp
inc
or
fs
jmp
xchg
mov
cmpl
paddq
push
dec
add
out
dec
adc
imul
les
aam
add
adcl
ds
ja
pop
int
xchg
dec
mov
out
mov
stc
lods
loopne
dec
test
inc
loopne
dec
push
ss
jp
scas
mov
dec
dec
cwtl
push
stos
jecxz
rcrb
xor
enter
repz
hlt
mov
sub
or
je
push
mov
sarb
adc
testl
and
cmp
or
cmp
in
pop
dec
push
jmp
push
mov
jle
add
jge
sbb
stos
add
add
pop
fnstenv
arpl
fs
sahf
jb
rorb
push
xorl
sub
cmpsl
or
add
rcrl
lock
test
mov
testl
xchg
ret
dec
jl
lret
out
sbb
and
sbb
fcom
fmuls
fwait
xchg
sti
add
mov
out
icebp
mov
shl
fildl
arpl
mov
xchg
xchg
addl
dec
cli
dec
push
orl
icebp
xchg
pop
idiv
xchg
mov
push
jb
loopne
inc
test
out
inc
push
pop
mov
mov
adc
push
jge
dec
mov
mov
cmc
lods
sbb
pop
dec
movsb
xchg
stos
call
xchg
and
jp
push
and
push
movsl
test
iret
xor
sbb
and
pop
or
push
mov
fisubs
push
pop
lds
xor
daa
punpckhdq
or
and
leave
les
or
and
jecxz
std
add
and
lret
and
bound
mov
dec
pop
shll
or
xor
insb
out
leave
insb
cmc
inc
cmpsl
push
sub
pusha
dec
push
iret
push
add
loopne
in
scas
ficoml
or
and
pop
mov
es
outsl
mov
sarl
xor
test
pop
mov
sarl
mov
push
cmp
imul
js
sbb
ja
mov
pop
sub
pop
dec
cmp
repnz
cmp
movsl
cltd
pop
pop
jmp
inc
inc
sub
inc
or
push
mov
pop
sbb
imul
test
addr16
js
aaa
or
xchg
push
xor
hlt
sbb
xor
in
sti
jl
negl
xchg
add
add
aaa
movsb
js
out
jg
outsl
xlat
mov
ficomps
and
sub
loope
mov
sbb
mov
movsl
ss
jmp
jge
in
or
sub
mov
or
mov
cmpsl
stc
in
fs
jl
mov
pop
mov
jle
cld
lcall
mov
xor
cmpl
xchg
dec
pop
out
dec
xchg
jne
popa
cmp
enter
cmp
or
lret
in
lcall
cld
mov
adc
jae
stos
xchg
aaa
jae
pop
xchg
push
loop
mov
jecxz
das
lock
jecxz,pt
sub
push
mov
out
lahf
cli
push
out
jge
and
sub
ret
mov
push
aaa
daa
dec
sub
daa
mov
cmp
out
mov
mov
lret
out
mov
or
xchg
mov
sbb
pop
dec
add
inc
fstpl
out
dec
jbe
cs
cmp
imul
pop
jno
jae
aad
pop
test
lcall
enter
add
sub
mov
push
mov
mov
pop
xchg
cmpsl
lods
or
jmp
and
ficompl
jnp
imul
mov
movsl
inc
or
fsts
pop
xchg
pop
adc
nop
mov
mov
into
andl
xor
pop
adc
mov
aad
and
inc
lods
mov
outsb
test
cwtl
xor
sub
movsl
sbb
push
out
cli
cmpsb
jmp
addr16
xlat
jecxz
push
add
mov
insb
mov
push
into
test
addr16
popa
xchg
mov
add
xchg
xchg
cld
repnz
sub
pop
aam
jle
xor
sub
mov
push
loop
inc
adc
popa
pop
arpl
mov
test
push
mov
xchg
addr16
mov
mov
inc
xlat
pop
out
js
sub
mov
push
xor
daa
test
dec
jbe
sbb
mov
aam
and
or
push
add
and
xchg
jecxz
inc
sbb
mov
ret
cmpsl
das
cli
jae
adc
cltd
loope
xor
dec
push
jle
imul
mov
mov
imul
mov
imul
mov
jecxz
mov
xor
mov
fdivs
lea
jae
sub
add
jae
movl
xchg
push
push
mov
fadds
pop
test
out
cmpsl
and
aaa
inc
push
xchg
loope
divb
in
xchg
push
inc
mov
mov
jp
add
into
sub
mov
bound
pop
bound
and
pop
ljmp
jb
mov
inc
fadd
and
and
div
inc
xor
ja
scas
fildl
pop
mov
push
dec
mov
pop
xor
pop
jnp
cmp
mov
into
rcr
nop
addr16
adc
test
ja
add
mov
xor
adc
sub
and
adc
inc
ret
lock
dec
or
add
inc
or
add
pop
lcall
dec
jb
pop
aaa
jg
insl
sbb
push
push
dec
addl
loope
int
int
hlt
in
cmp
fwait
test
mov
mov
mov
mov
in
mov
inc
xor
daa
sti
xlat
test
inc
mov
inc
xchg
mov
stos
pop
scas
repz
jg
xorl
pop
mov
movsl
mov
push
sub
test
and
jnp
imul
sub
cld
repz
sub
cwtl
daa
adc
or
cmc
mov
test
popa
ret
aas
push
mov
lahf
arpl
mov
mov
dec
mov
jno
pushf
out
subl
movsl
xor
inc
inc
add
ret
cs
shrl
xor
dec
mov
movsb
inc
mov
dec
cltd
mov
fdivr
or
mov
loope
and
dec
jecxz
adc
inc
xchg
jne
add
adc
cmpsl
jge
fstpt
adc
ror
test
sub
out
xchg
movsb
cmpsb
and
cmp
loopne
leave
push
sub
mov
shrb
pop
or
nop
sub
sub
xchg
xchg
lahf
repnz
dec
adc
add
adc
sbb
xor
inc
cmpsb
jmp
imul
lahf
dec
dec
pop
sar
push
aaa
or
leave
inc
and
adc
bound
xorl
movsbl
fdivl
pop
jbe
inc
xchg
mov
jmp
xlat
jp
jbe
cli
and
out
clc
loop
mov
inc
add
js
addr16
pop
jae
or
scas
mov
pop
fwait
in
mov
xor
push
or
jecxz
pop
or
push
call
insl
mov
insl
xchg
mov
outsb
inc
orb
cli
jo
hlt
fmul
sub
add
jle
pushf
lock
mov
mov
jne
inc
jne
int
and
in
cmp
loope
into
inc
jo
pushf
clc
sub
es
mov
pop
and
sti
or
jo
jmp
movsl
push
and
adc
lods
mov
je
xchg
test
push
dec
aam
int3
jne
jnp
adc
rcl
jae
pop
rolb
lea
mov
dec
gs
iret
imul
dec
sbb
hlt
jp
jnp
ljmp
ds
sub
jle
repz
addr16
test
icebp
push
test
out
gs
aad
push
push
imulb
pop
loope
mov
xchg
inc
cmp
mov
in
hlt
addl
mov
inc
inc
cwtl
mov
xchg
lret
shrb
push
xor
rorl
fwait
jo
xchg
enter
sub
sbb
xor
popf
into
add
adc
sub
lock
jl
sbb
insb
push
mov
jp
rep
addr16
pusha
lret
pop
push
sbb
adcl
jnp
push
cli
idivb
xor
test
icebp
sbb
xlat
pop
fwait
repz
dec
mov
scas
mov
or
mov
adc
mov
and
outsl
movsb
jnp
pop
movsb
or
mov
in
adc
jbe
sahf
jmp
les
push
gs
jecxz
test
popf
int
jl
out
lds
insl
mov
pop
inc
inc
cmpsb
sbb
fs
or
sbb
call
test
mov
sbb
or
fcoms
mov
dec
add
orb
and
in
stos
cmpsl
pushf
xchg
sub
pop
and
and
test
push
loop
scas
jmp
decb
ja
cmp
sub
rclb
xchg
sub
je
push
aaa
mov
in
inc
or
ficoms
and
loope
add
sahf
push
sub
aas
inc
pop
enter
inc
pop
hlt
enter
test
mov
inc
push
xor
mov
adc
icebp
repz
into
xor
sub
lods
and
inc
imull
jmp
jbe
jle
arpl
xchg
jge
std
pushf
push
jg
imul
sub
inc
inc
jle
sub
add
sbbb
outsb
ret
or
xchg
sub
gs
lods
ljmp
insb
pusha
test
mov
pop
adc
movsl
in
gs
sbb
xchg
into
mov
jne
cld
sub
cltd
mov
mov
and
xor
outsb
mov
inc
pushf
xor
pop
mov
or
imul
popf
and
mov
pop
aam
jle
cltd
xor
sbb
mov
int
out
add
mov
jbe
dec
xchg
testb
xchg
rcl
mov
sbb
jne
sub
push
imul
jbe
scas
inc
rep
imul
into
push
mov
out
jge
mov
addr16
mov
loope
pop
mov
insb
faddl
into
in
cld
faddp
scas
shrl
adc
clc
and
icebp
lcall
std
pop
ss
sahf
popa
imul
fmulp
ss
or
lock
iret
mov
test
or
jno
sub
xor
jge
iret
clc
push
or
pop
dec
jmp
xor
lea
out
inc
das
enter
out
int
ret
add
push
cmc
data16
mov
imul
fildll
ret
mov
mov
adc
imul
inc
ja
push
push
or
out
sub
ret
or
xchg
xchg
mov
loopne
bound
sbb
mov
popf
sub
jne
sub
cli
push
inc
fadd
rorb
add
jmp
jle
das
inc
mov
mov
jl
adcb
push
dec
addb
loopne
adcb
cmpb
lret
in
inc
in
int
sbb
adc
out
inc
filds
mov
sub
adc
aaa
or
xorb
push
mov
xor
inc
or
pop
jl
stos
sbb
dec
push
dec
testb
fnsetpm(287
test
ljmp
push
dec
test
mov
add
mov
icebp
stos
cmc
and
sti
notb
aad
push
testl
mov
dec
add
das
rcrb
stos
cwtl
shlb
inc
push
cli
cmp
pop
cmpsb
xchg
popf
jle
cmpsl
mov
fwait
mov
loopne
mov
int
call
fcmovu
pop
pushf
xorb
cwtl
mov
cld
lahf
sub
xchg
xchg
das
dec
pop
mov
pop
fsub
cmp
call
add
jmp
shlb
push
pusha
int
ror
mov
pop
xor
in
pushl
pop
je
repnz
sbb
lock
add
xchg
lea
fcoms
or
sub
out
test
jne
push
xchg
cli
sahf
push
test
in
pop
shlb
fiadds
mov
aam
inc
mov
fs
out
inc
cmc
ja
mov
jnp
loope
push
fdivl
mov
test
roll
jno
mov
cmp
adc
nop
inc
mov
xor
push
in
insb
int3
shr
or
push
fidivl
lret
cmpsb
mov
pop
cmp
dec
dec
inc
lcall
push
loop
icebp
xorb
int
pusha
xchg
xchg
adc
mov
mov
sbb
scas
sub
lds
or
cmc
push
insl
dec
inc
sbb
and
mov
scas
rolb
lret
fisubl
mov
mov
int
adcl
das
outsl
dec
xchg
outsl
icebp
sbb
adc
outsl
xchg
mov
mov
outsl
xor
mov
jnp
jbe
mov
cwtl
sbb
pusha
mov
divl
std
cmp
pop
call
scas
arpl
pushf
pop
aam
adc
inc
cmp
push
mov
jb
es
xor
inc
adc
push
cli
in
sub
and
mov
mov
push
clc
shrl
hlt
adc
mov
xchg
inc
mov
dec
mov
mov
in
sbb
in
icebp
push
inc
cmp
movsb
and
mov
test
out
adc
fwait
call
xchg
daa
insl
jne
mov
or
shlb
mov
insb
pop
xchg
pusha
xlat
mov
adc
pop
jno
into
stc
aad
sahf
mov
sub
pop
cs
pop
mov
mov
out
push
cli
mov
lret
push
repz
mov
add
cmp
mov
push
xor
push
orb
add
jge
or
ja
pop
jl
jle
cld
mov
sub
mov
data16
fiadds
xor
lea
lods
daa
nop
push
out
enter
sti
and
pop
xor
xchg
mov
pop
ljmp
ja
sbb
mov
or
cmp
pop
aaa
aaa
orb
push
jge
xor
push
and
jge
flds
lods
clc
imul
std
pop
fmul
inc
ret
std
mov
rcrb
ljmp
xchg
xchg
mov
or
ljmp
lock
sbb
mov
jle
jg
mov
sub
orb
jae
movsl
mov
mov
in
aad
aad
pop
jle
xchg
xor
cmc
xchg
pop
dec
xchg
xchg
mov
push
shl
mov
push
fdivs
mov
xchg
jg
es
sub
pop
sub
into
or
lret
pop
imul
movsb
adc
jl
aas
add
jbe
xchg
aas
aam
into
jnp
les
xlat
and
mov
fisttpll
fidivs
cld
add
add
xor
ret
jmp
sub
cwtl
into
mov
das
xor
sub
loope
sub
and
outsl
imull
decl
push
pop
mov
out
pop
lods
inc
sarb
mov
mov
push
cmc
mov
int
sbb
sub
xchg
popl
ret
imul
into
pop
and
pop
test
ss
dec
loopne
inc
adc
push
fs
xor
lret
mov
jns
test
mov
scas
sbb
pop
cmp
and
xor
adc
das
subb
les
jno
dec
sub
xchg
jb
fisubrl
addr16
pop
adc
out
xchg
into
cmc
aam
filds
mov
mov
xlat
inc
push
add
stos
es
leave
push
xlat
pushf
loope
imul
cmp
testb
jle
daa
jmp
mull
xor
xchg
sbb
mov
cmp
cli
or
icebp
pop
aam
sbb
pop
xchg
pop
dec
bound
mov
xrelease
cmpsb
out
les
int
pop
xchg
loop
mov
imul
bnd
gs
and
daa
lods
imul
push
or
lret
cmp
mov
dec
push
sbb
adc
pop
adc
sub
aas
mov
rcrb
or
repnz
mov
or
inc
sbb
cmp
xchg
cmp
in
nop
mov
lock
sti
lea
movsl
insb
lcall
es
push
jne
sub
push
sbb
adc
fadd
mov
stos
stos
inc
ss
les
dec
mov
rolb
ret
jae
stc
data16
ds
test
add
mov
test
enter
mov
ror
loop
mov
push
mov
inc
jecxz
imul
xchg
inc
sbb
fcmove
stc
lea
xlat
cmpsb
jno
pop
pop
lds
sbb
and
jp
adc
jmp
dec
xchg
sub
bound
cmc
mov
stos
dec
mov
fdivrs
cmp
dec
test
adc
adc
or
cmpsb
ret
ror
add
shl
out
and
jo
into
add
mov
repz
mov
loopne
mov
cmp
addr16
cltd
outsb
jecxz
xchg
mov
lahf
sbb
cmpsl
in
sahf
stc
jl
pop
jb
push
pop
in
xchg
lea
out
mov
mov
shlb
pusha
repnz
jge
cmp
sbb
or
lods
mov
int
pop
addr16
leave
ret
dec
mov
push
mov
sahf
jnp
push
pop
icebp
sahf
mov
sub
fs
adc
pop
jg
push
into
movsb
dec
cmp
les
lods
and
fistps
in
lods
add
loope
inc
hlt
cltd
push
mov
adc
mov
mov
inc
nop
push
out
and
int3
int3
inc
sub
aam
or
arpl
and
xchg
rcll
fwait
mov
popa
mov
inc
ja
jnp
sub
stc
mov
mov
pushf
lret
adc
jl
ljmp
inc
cmpsl
out
int3
hlt
pop
adc
mov
push
insl
in
call
or
mov
mov
add
cmp
mov
lcall
add
pop
inc
pop
cmc
cli
push
inc
outsb
push
xchg
cmp
xor
int3
mov
clc
sub
in
in
sub
jl
test
ja
mov
int3
addr16
sbb
mov
inc
gs
mov
adc
pop
and
adc
loop
out
xor
jae
dec
test
ja
xor
cmc
lods
dec
add
mov
xor
xor
jp
mov
dec
out
add
test
mov
out
insl
xor
jp,pt
out
ficompl
pop
outsl
mov
mov
ret
cwtl
lret
pop
jbe
adc
out
xor
push
push
cltd
es
int3
mov
inc
push
int
pop
xorb
inc
push
mov
lret
es
fldl
push
lret
daa
dec
lret
fsubl
pop
xchg
daa
icebp
pop
sub
push
inc
aas
sub
adc
lea
mov
pusha
mov
ret
cmpsl
or
lcall
call
jnp
dec
xor
and
fcmovb
mov
fwait
jo
xchg
add
sub
sub
aas
arpl
or
jne
sub
das
cmpsb
mov
jmp
movsb
pop
arpl
jle
pop
adc
jg
dec
arpl
mov
dec
and
push
test
xchg
push
pop
sbb
jecxz
cmp
clc
imul
sbb
insl
movsl
adc
mov
fimuls
bound
incl
sbb
mov
sti
adc
sbb
cmp
std
movsb
mov
mov
push
add
test
es
adc
icebp
enter
mov
mov
leave
cmc
jmp
aad
loopne
sub
daa
test
mov
sub
add
sarl
jbe
jo
and
pop
push
push
pop
xor
push
icebp
pop
sub
shll
inc
mulb
xchg
xlat
sub
add
xor
cmp
inc
dec
sbb
cmp
xor
repnz
push
adc
fcmovbe
repz
sbb
push
xchg
rcl
fsts
lahf
shl
popf
and
in
pop
std
xlat
jno
sti
xlat
xchg
or
icebp
and
sbb
mov
mov
inc
daa
xor
mov
mov
mov
es
xlat
cmp
and
lods
scas
and
aad
data16
icebp
enter
rcrb
mov
dec
stc
mov
jo
lea
cmp
cli
lret
mov
push
imul
fnstenv
or
aaa
fdivs
pop
test
das
test
fisttpl
xchg
fldenv
scas
sub
dec
fcmovu
or
lock
fcomps
xchg
xor
mov
and
and
stc
out
sarb
cmp
loope
pop
aam
insb
decb
rolb
push
push
or
jge
stos
icebp
xchg
or
ret
shll
rolb
adc
sahf
lret
push
in
xchg
mov
es
das
xor
js
inc
or
test
push
mov
mov
pop
push
xchg
test
ret
negb
out
dec
mov
pusha
cmp
cmp
in
ds
sbb
cmp
jno
inc
cmp
mov
mov
fcom
sub
dec
cltd
fdivs
insl
or
push
lock
lock
push
xchg
test
loop
and
shlb
inc
add
inc
jle
jnp
arpl
stos
int
call
js
hlt
fcoml
pop
sbb
add
jl,pn
mov
ja
lea
jle
xchg
cmp
jecxz
dec
jne,pn
jg
jp
cmp
int3
cmp
or
sub
mov
jecxz
xor
pushw
fldenv
mov
aam
xor
rcll
call
push
loope
fimull
xchg
repnz
push
je
jo
clc
pop
or
xchg
scas
inc
mov
dec
push
fwait
gs
xchg
and
pushf
jp
fsubrs
cmp
adc
fmul
sub
dec
lcall
mov
add
mov
int
sbb
outsl
xorl
jnp
movl
dec
popa
add
mov
in
cs
mov
add
xlat
pop
or
mov
adc
lret
sbb
pushf
lods
leave
ljmp
lods
ljmp
lahf
add
bound
movsb
outsl
adc
dec
xchg
pop
mov
fnstcw
shlb
jle
xlat
es
or
push
add
mov
xchg
cmp
jns
int
ret
call
shl
mov
data16
out
out
rep
stos
push
dec
loopne
pop
jl
xchg
fcoms
jnp
loopne
sub
sub
push
xchg
aad
inc
adc
jb
mov
adc
sarb
xchg
les
add
lds
sbb
push
push
sar
mov
daa
dec
cmp
xor
pop
or
or
mull
jae
and
rcll
fwait
inc
daa
into
push
inc
flds
loop
and
jecxz
out
add
xchg
or
rorl
ss
out
out
sbb
dec
loopne
add
push
out
cmp
xchg
pop
arpl
inc
inc
sub
mov
hlt
mov
or
dec
test
mov
pop
cli
cmp
ret
ja
mov
daa
mov
icebp
adc
mov
xchg
jge
xor
into
add
lock
mov
mov
aas
stos
dec
subl
jecxz
movsl
rcrl
and
fwait
ret
and
je
repnz
sbb
pop
loop
jb
mov
cmc
or
loope
testb
push
fwait
ret
jo
shlb
add
cs
out
mov
cmp
and
ss
lret
cltd
push
and
sbb
dec
add
out
pushf
test
insb
jle
add
stos
cmp
or
in
and
mov
leave
pop
sti
fs
movsb
mov
mov
sbb
sbb
xchg
lock
aam
nop
movsb
jle
xchg
imul
dec
dec
rcr
sbb
jmp
pop
xchg
or
xor
dec
ja
js
xchg
xor
inc
pop
mov
xchg
and
lahf
pop
cmpsb
or
xorl
mov
mov
mov
fimuls
and
mov
fmul
outsb
xchg
jle
mov
data16
cmp
ljmp
inc
push
adc
cmp
jl
lods
adc
add
cs
or
js
mov
cld
pop
lock
push
cs
pop
aam
sub
mov
sbb
pop
mov
and
mov
cli
data16
dec
rolw
add
scas
cmp
mov
ss
aaa
pop
dec
and
sub
test
aas
jnp
testl
pop
enter
mov
jns
aam
mov
lahf
and
lret
mov
jo
sbb
sub
int3
aaa
xor
jnp
scas
xor
shlb
stos
mov
cmpsb
push
add
lods
leave
lods
pop
nop
jge
mov
inc
pop
movzwl
xchg
sbb
in
test
data16
scas
pop
add
xlat
push
xor
ret
xchg
dec
inc
add
pop
cmp
js
or
rorw
bound
dec
data16
sub
gs
mov
mov
dec
movsb
mov
lds
outsl
push
mov
jb
test
jg
adc
lds
sbb
or
pop
lock
fs
pop
mov
lds
inc
loope
mov
scas
sbb
adcb
into
mov
adc
shrl
imul
xchg
rolb
pop
mov
cmp
xor
jnp
add
sub
leave
adcb
and
lock
pusha
xchg
lret
push
jns
mov
add
enter
loop
sub
in
push
jo
xor
mov
mov
cmp
outsb
stos
jmp
int3
cmp
mov
js
das
sbb
mov
scas
mov
xor
xchg
pop
sub
mov
imul
pop
jno
mov
ret
fcompl
cmp
insl
dec
stos
mov
xchg
xor
sbb
mov
push
adc
mov
icebp
fdivr
jb
stos
fstpl
enter
xlat
pop
insb
in
jnp
test
and
leave
mov
add
jo
dec
ljmp
cmp
add
out
icebp
int3
pusha
std
or
add
enter
lea
mov
movsl
adc
mov
jae
int3
dec
add
pop
mov
push
insl
mov
cli
push
daa
mov
push
popf
outsb
mov
adc
rcrb
mov
xchg
ret
inc
bnd
aad
or
scas
bound
sub
inc
xor
in
jg
xor
fmull
aam
fcmovu
push
jb
jmp
cmp
pop
jbe
data16
gs
outsb
jbe
add
das
aas
dec
mov
dec
sahf
mov
cld
jp
dec
movsb
and
sbb
or
ret
popf
insl
dec
or
movsb
mov
data16
lret
push
cltd
popa
insb
sub
out
ss
adc
or
mov
test
divl
test
xor
addr16
sbb
jle
jle
inc
push
adc
push
in
les
xchg
mov
ret
jge
pop
stc
ret
test
pop
inc
cld
mov
jle
cmp
dec
scas
int
stc
mov
lcall
push
mov
dec
jg
aaa
pushf
les
dec
test
insb
scas
cld
movsb
and
lret
mov
fadds
jo
loopne
test
js
xor
adc
shl
sti
mov
and
jnp
out
cmp
xchg
lcall
ret
stos
arpl
dec
pop
mov
mov
ljmp
xor
enter
fadds
cmp
adc
sbb
mov
and
jmp
test
push
lods
mov
enter
sub
loopne
stc
mov
pop
add
aad
sub
arpl
in
ds
sub
xor
adc
xor
and
jl
sbbl
inc
jae
mov
call
cld
int
ret
in
push
jno
les
fistpll
rcrb
and
mov
in
dec
cmp
mov
popa
push
jp
sahf
mov
cmp
out
mov
ljmp
sbb
jl
cmc
mov
dec
aaa
cmp
addr16
fs
stc
nop
sbb
mov
cld
sbb
adc
shll
outsb
into
sbb
or
lods
lret
scas
adc
addr16
xchg
int
cmpsl
push
dec
call
cmc
mov
and
fndisi(8087
pop
push
pop
test
sbb
hlt
mov
inc
out
insl
iret
xchg
pop
leave
sbb
cmp
movsl
add
jno
inc
push
loop
push
pop
or
jl
flds
pop
repz
cmc
mov
mov
lret
push
mov
cmp
mov
and
lods
mov
lret
cmp
mov
cmp
cmp
ljmp
out
inc
ret
cmp
or
pop
lahf
loope
mov
xchg
mov
ja
push
ret
cmp
out
in
insb
jbe
inc
mov
push
cs
push
or
cmpsl
or
pop
push
imul
test
adc
and
sub
push
mov
rorl
movsb
pop
or
xchg
adcb
scas
inc
loopne
jecxz
daa
mov
pop
jg
mov
cmpsl
nop
push
mov
rorb
and
dec
and
cmp
cmpb
movsb
push
sub
rorl
scas
push
jo
or
jno
and
xchg
lcall
mov
xchg
shll
dec
sbb
cmp
adc
ret
fsts
sub
lcall
cmpsl
mov
xor
jecxz
mov
push
insl
mov
out
aad
mov
repz
loopne
repz
jae
stc
in
push
lods
out
andl
pop
pop
test
imul
shll
lds
repz
and
push
mov
xchg
mov
clc
hlt
rcr
divl
inc
push
xchg
jbe
adc
mov
test
loop
adc
push
add
imul
pop
pop
or
jae
ret
outsb
icebp
out
imul
or
lahf
pop
mov
hlt
lret
push
xchg
jg
stos
cmpsb
lock
fcompl
pop
das
int3
jnp
shlb
lret
mov
imul
or
xchg
decb
pop
std
push
fs
je
aad
in
int3
mov
or
jne
ficoml
or
popf
sbb
lods
roll
and
or
jae
adc
clc
jnp
int
shrb
gs
mov
outsl
popa
push
lret
movsb
ss
loop
pop
mov
and
aaa
inc
inc
inc
mov
push
pop
dec
scas
inc
push
sbb
or
lds
sbb
sbb
cltd
pop
push
add
adc
jmp
push
mov
inc
dec
sub
rcr
adc
xlat
jae
sbb
jns
aas
xchg
inc
hlt
nop
dec
mov
sbb
mov
xchg
sti
mov
xchg
imul
sub
mov
mov
push
pop
ss
mov
push
dec
sub
dec
data16
sub
adc
rorl
sahf
subl
xchg
push
imulb
icebp
and
mov
shlb
cwtl
shl
fcmovu
jge
mov
enter
cs
imul
ljmp
lods
xchg
xchg
shr
icebp
cmp
pop
pop
stos
jge
xor
hlt
lahf
push
lds
inc
rclb
push
jb
lret
scas
popf
enter
and
pop
cmp
dec
adc
cmp
jmp
push
sti
jne
stos
in
push
inc
andl
dec
lret
lret
and
or
sahf
imul
rcll
out
ret
mov
mull
xlat
xchg
jecxz
sahf
xor
add
and
mov
pop
mov
enter
adcl
lret
xor
cmp
js
jno
call
mov
cmp
pop
or
icebp
sbbb
mov
push
cmp
mov
lds
mov
or
dec
pusha
insl
and
add
add
mov
adc
jo
cmp
nop
or
mov
repnz
repz
jle
dec
rolb
xchg
ds
lds
cli
gs
or
add
lcall
xor
pop
bound
pop
cmp
xor
inc
pop
inc
push
pushf
out
push
imul
jbe
xor
js
inc
das
je
iret
sarb
pop
aam
jle
cmp
dec
fstl
out
mov
fwait
lcall
mov
xchg
scas
daa
mov
adc
push
cmp
aas
ret
insb
je
icebp
clc
pop
in
dec
lods
cmp
sbb
ja
ret
lock
sbb
cmp
sbb
pushf
pop
lret
push
inc
clc
in
jecxz
mov
ret
sbb
sub
sub
and
xor
nop
cmp
ficomps
stc
add
fisttps
jnp
pop
push
popa
push
and
imul
and
icebp
cmpsl
sbb
clc
lcall
xchg
arpl
sub
adc
sbb
lods
mov
daa
mov
std
or
xchg
int3
loop
fdivs
xchg
cmp
fldenv
or
xor
ss
cmp
and
pushf
jmp
lahf
movsl
les
push
or
aas
mov
dec
adc
rol
daa
lahf
push
jb
andl
jl
mov
jle
pop
lock
pop
mov
or
mov
pop
xor
xor
xor
cmp
fwait
rorl
in
or
clc
jns
push
mov
repz
insb
loopne
mov
pop
pushf
adc
cmp
xor
mov
push
push
sub
sarb
daa
movsl
outsb
insb
ret
adc
mov
mov
aad
andb
xchg
repz
jle
mov
mov
cmc
cmp
sub
out
movsl
sbb
xor
test
xor
in
mov
sbbb
out
testl
add
sub
cs
add
xchg
xor
push
add
cmpsl
pop
int
pop
bound
lret
adc
daa
fisttpl
dec
dec
lret
dec
sysexit
dec
push
out
mov
inc
repnz
cs
pop
cmpsb
pop
sbb
add
cwtl
and
bound
pop
cltd
fdivl
mov
movsb
or
lds
imul
pop
or
or
jmp
sub
pop
rcrl
rcrl
adc
xorl
ret
add
mov
jge
outsl
pop
fdivrs
out
and
pusha
out
and
dec
repnz
mov
pop
mov
mov
pop
ss
stos
pop
inc
mov
sti
jno
ja
xor
repz
adc
sub
repnz
mov
daa
dec
xchg
rclb
sbb
in
lds
sbb
loop
mov
bound
xchg
sbb
and
cmpsb
cmc
xchg
dec
popa
xor
lea
push
fsubs
scas
daa
call
aam
adc
dec
push
add
jb
push
mov
xchg
test
push
outsb
cmp
aaa
jo
andb
repz
sbb
and
or
push
dec
sub
pop
mov
mov
nop
imul
and
or
mov
subl
loope
cmpsl
shll
sahf
out
or
ja
push
sub
mov
cwtl
imul
lods
mov
sbb
push
xlat
sbb
insl
cmp
notl
xor
lea
lea
pop
adc
jl
mov
out
and
adc
adc
push
subb
push
xchg
clc
mov
in
xor
mov
fisubrl
jnp
in
sub
cmp
sbb
repnz
loop
aaa
scas
mov
rorb
jne
pop
jbe
lahf
adc
and
xor
ljmp
andl
dec
adc
pop
mov
xchg
lfs
push
xchg
jp
fadds
cld
xor
mov
aam
rcrb
outsl
lock
daa
mov
aam
jae
push
mov
xchg
jle
lret
in
in
xor
adc
cwtl
loopne
jns
push
inc
cmp
and
shlb
xchg
movsb
xor
adc
ret
dec
outsl
push
xor
sub
es
scas
leave
test
xchg
add
push
cltd
faddp
pop
cmpsl
nop
mov
aaa
pop
mov
adc
jno
add
cmc
adc
popf
les
push
mov
jmp
dec
pop
push
bnd
out
push
xor
stos
xor
leave
add
ds
mov
scas
cltd
ret
jb
inc
loopne
jo
out
adc
and
iret
inc
or
punpcklbw
pop
adc
or
xchg
mov
hlt
push
push
adc
rclb
ret
dec
sarb
dec
cmpsb
ror
lock
in
roll
popf
xchg
gs
cli
mov
cmp
popa
call
pop
push
test
out
jge
lret
sti
fdivrs
shll
mov
fisubrs
jnp
cwtl
cmp
in
adcb
mov
dec
jbe
dec
ss
mov
inc
popa
dec
jge
mov
stos
jmp
mov
lahf
repz
out
mov
repz
and
sub
mov
inc
test
pop
mov
iret
adc
cwtl
fcoms
in
jb
inc
adc
or
stos
sti
fwait
andb
lods
and
scas
clc
iret
icebp
sub
std
lock
div
jmp
push
sahf
inc
add
xchg
xor
cmp
enter
icebp
add
loope
gs
stc
clc
scas
into
and
loop
add
incl
movb
scas
hlt
mov
adc
fsubr
cmp
insb
sbb
cmpsb
mov
jbe
lods
icebp
xchg
or
movsb
mov
es
sbb
lcall
sub
xorb
aam
rcl
xor
xchg
out
mov
sub
mov
cmpsl
push
push
jg
mov
and
fstpl
movsb
cmpb
roll
ret
pop
aas
cmpsb
sbb
imul
insb
adc
leavew
add
lcall
xchg
decb
leave
and
xchg
add
inc
mov
push
outsb
and
mov
dec
call
and
adc
xor
lods
pop
das
and
and
out
ja
mov
mov
or
and
push
out
sbb
fst
insl
cmpsb
movl
sahf
and
mov
bnd
or
jmp
ror
test
mov
cmp
inc
gs
std
pushf
pushf
inc
push
xchg
pushf
push
mov
xchg
adc
iret
or
add
pop
push
jne
dec
enter
repz
mov
jle
add
imul
stc
cmpsl
movsb
ds
imul
int
js
dec
ficoml
mov
ja
lcall
in
mov
adc
pop
pavgb
mov
xchg
jecxz
dec
xor
mov
add
cmp
lret
mov
jbe
je
ret
in
sbb
push
and
imul
cs
mov
add
adc
popa
pop
movsl
cmp
frstor
mov
mov
mov
sti
cli
imul
sbb
in
push
mov
jo
mov
adc
cmpsb
push
pop
in
movsl
rol
cwtl
out
dec
sahf
add
movsb
cld
mov
or
clc
jo
les
lahf
iret
sub
cmp
jmp
pop
fs
or
or
pop
adc
clc
das
mov
in
lods
xchg
jbe
stos
xor
adc
ret
fbstp
dec
push
adc
push
inc
insb
fsubrl
push
ljmp
xlat
cmp
sbb
adc
es
es
or
fwait
xchg
ljmp
shl
scas
insl
loope
adc
mov
pop
lahf
orl
mov
mov
das
add
repz
mov
nopl
in
adc
xchg
test
mov
scas
jge
jo
dec
cmpsb
mov
dec
sbb
cmp
lret
ficoml
flds
cmp
jne
scas
inc
lcall
shll
cmp
mov
loope
adc
jbe
pop
add
and
cmp
into
sub
push
setbe
sbb
outsl
xchg
jae
sti
lret
movsl
inc
or
sub
mov
movsl
stos
fiadds
adc
xor
sbb
pop
pop
mov
adc
jnp
sub
adc
xor
mov
mov
or
lods
sub
jno
testl
add
jge
fnstenv
sbb
mov
ret
add
xchg
mov
stos
aas
inc
ss
cmc
mov
xor
fcoml
adc
push
pop
inc
insb
cld
xor
dec
je
stc
pop
repnz
pop
pop
movsl
inc
ja
test
sub
xchg
inc
lcall
or
push
jns
mov
mov
in
jnp
cli
sbb
mov
cmp
add
pop
mov
inc
loopne
addb
push
sub
pop
inc
push
stc
in
jae
or
inc
pop
neg
cmp
aad
out
lock
setge
xor
push
xchg
int
mov
pop
std
jmp
out
or
pop
aas
cwtl
sub
xchg
xor
stc
cmp
sbb
das
dec
fwait
aas
inc
adc
dec
test
lods
or
sbb
mov
xchg
push
jne
bound
sbb
popl
test
mov
push
lahf
cmc
or
xchg
mov
int3
pop
repz
pop
fisubrs
addr16
fildll
or
dec
rolb
mov
sbb
jmp
add
mov
adc
xor
xor
sbb
pusha
int3
popa
bound
push
outsl
daa
cmp
xor
movsb
push
mov
dec
arpl
sub
in
jp
in
adc
sarl
insb
daa
mov
cli
cmp
fidivrl
hlt
pusha
mov
into
push
jae
inc
fs
xchg
push
shl
mov
test
inc
lret
xchg
mov
out
fdivl
xor
movsb
pusha
push
fdivl
imul
mov
icebp
das
xchg
cmp
gs
loop
push
add
sahf
scas
mov
hlt
xchg
incl
cmc
loop
test
jbe
fstl
inc
pop
addr16
dec
test
push
ret
repnz
or
repnz
repz
rcl
add
sbb
mov
cmp
fstps
xchg
sbb
pop
inc
int
loope
pop
sarb
mov
inc
and
decl
sahf
stos
xorb
jmp
subb
out
sar
int
lods
add
mov
fldl
xchg
test
mov
lea
xlat
jmp
dec
pop
push
and
js
or
mov
orl
js
cmpsl
fnstenv
je
js
das
out
rolb
pusha
iret
and
je
pop
cmp
adc
sub
out
pop
jns
sahf
inc
fisubrs
fnstsw
adc
sbb
loop
adc
add
stos
sbb
insl
xor
jae
popf
inc
mov
rol
enter
jecxz
scas
pop
inc
xchg
lds
mov
fimuls
lret
lret
data16
in
jne
nop
aaa
xchg
les
dec
out
xor
mov
inc
dec
jne
push
mov
repz
cmp
repnz
pop
or
in
cltd
lea
mov
push
xchg
pop
mov
mov
push
bound
sub
mov
test
pop
nop
lea
mov
in
pushf
iret
mov
add
sbb
and
xor
into
shll
pusha
mov
in
decb
outsb
and
push
test
pushf
jb
mov
mov
ja
ret
add
inc
push
testb
push
fucom
push
push
sub
adc
lock
out
aaa
fcompl
in
pop
arpl
outsl
fs
inc
addr16
push
aam
lock
insb
pop
fcmovnu
add
cmp
push
mov
push
and
mov
rcl
outsb
mov
push
add
sub
inc
add
lret
cmp
pop
test
test
test
cwtl
into
mov
pop
push
int3
out
cmp
and
loope
xadd
add
and
and
sub
insl
add
xor
push
xor
out
sbb
sbb
pop
scas
fidivs
nop
pop
fwait
xchg
push
adc
push
cli
int3
rolb
jg
xor
and
mov
pop
fadd
jg
leave
jno
hlt
mov
mov
cmpsl
inc
das
insl
xor
mov
inc
sti
sub
adc
push
or
jae
cli
push
lods
sbb
jge
loop
push
lcall
lds
lock
clc
pop
or
jle
sbbb
pop
push
shrl
ret
pop
sub
lret
int3
sbb
mov
nop
loope
test
test
lea
mov
lds
and
dec
xchg
and
sub
mov
icebp
xchg
jns
int
out
mov
insb
sti
pushf
gs
jmp
push
pushw
mov
mov
sub
and
cmp
aaa
inc
mov
jo
jecxz
adc
out
rcrb
data16
and
sahf
jecxz
jle
test
ljmp
sti
sub
imul
js
mov
jno
lret
push
in
xor
loopne
sub
xchg
rclb
sub
test
pop
enter
inc
mov
js
mov
sub
cld
add
push
call
sub
in
adc
outsl
mov
push
adc
shr
mov
cmpsb
ja
jg
or
sbb
sbb
sub
fimuls
stc
gs
xor
into
dec
ror
dec
aas
xchg
repz
insl
cmp
inc
stos
push
pop
enter
inc
stos
aaa
cmp
push
xor
or
push
pop
mov
scas
imul
and
and
cld
into
xchg
outsl
repnz
bts
in
xchg
jmp
jo
shrl
lea
xor
sbb
mov
add
das
pop
cmp
add
movsb
rcrl
inc
pop
push
xchg
pop
push
sbb
rorb
sub
inc
mov
test
pop
mov
adc
jmp
stos
fcompl
sbb
mov
ret
test
stos
mov
push
fs
lds
test
rcll
add
cmp
and
sbb
out
out
test
test
or
insb
pop
inc
add
xchg
das
and
mov
add
fsubl
mov
lods
jne
insl
dec
sbb
sbb
movsl
xor
sub
out
mov
scas
pop
cmpl
sub
mov
or
aam
data16
scas
fs
jae
or
imul
sbb
sub
shlb
fldenv
dec
sub
or
shll
xchg
inc
lods
mov
roll
sti
inc
aas
mov
lsl
adc
push
push
test
mov
push
js
hlt
or
fdivrl
cmp
xchg
fisubl
mov
mov
add
xor
les
loop
mull
cmp
pushf
cmp
mov
cmp
mov
jno
pop
push
ficoms
mov
sub
xchg
adc
int3
daa
inc
xchg
movsb
xor
je
aaa
or
add
jo
and
and
ja
cmp
rcll
movsl
into
test
dec
and
or
jb
outsl
decl
gs
ds
insl
pop
and
clc
mov
add
pop
enter
out
ja
pop
into
mov
icebp
add
fimull
xchg
xchg
fldl
repz
sti
test
jne
inc
and
fistpll
sbbb
lock
jmp
movsl
shr
test
mov
int3
das
xor
xchg
movsb
cmpsl
adc
jg
mov
sarl
je
pop
popf
shl
xchg
das
adc
push
pop
sbb
mov
adc
sub
mov
test
std
push
bound
jmpw
push
mov
ret
jns
sbb
insl
inc
ja
lret
repz
mov
mov
fldl
adc
fs
js
push
insb
mov
dec
mov
xor
ds
pop
xchg
sub
sti
pop
inc
push
shr
inc
cltd
and
lods
inc
pop
out
fs
cmpsb
mulb
mov
pop
jmp
push
cmp
or
dec
jmp
les
fnstenv
loope
and
negb
mov
jne
arpl
enter
and
enter
imul
in
mov
adc
add
out
arpl
pop
jecxz
mov
jnp
je
sub
orb
fdivrs
lea
inc
xchg
roll
daa
fistpll
cmp
test
cs
icebp
sarl
push
push
out
sbb
mov
jg
jb
sahf
lret
int3
sbb
das
aad
out
aad
repnz
cmpb
inc
and
jecxz
mov
jp
push
or
filds
push
xor
les
inc
inc
inc
popa
mov
mov
mov
arpl
or
mov
movsb
mov
incl
pmulhuw
jno
jne
pop
mov
fwait
or
mov
lret
xchg
outsb
imul
arpl
adc
cmp
push
mov
jge
jbe
imul
jle
addl
test
or
push
out
sbb
leave
aas
cmp
and
sbb
aas
or
mov
mov
scas
sbb
pusha
xchg
dec
loope
sbb
cltd
test
add
es
enter
mov
dec
dec
in
lods
adc
mov
loope
push
sbb
or
stos
out
test
ss
mov
inc
movsl
call
and
pop
mov
mov
cmpsb
movsl
add
cmpsb
and
adc
nop
pop
stc
test
mov
xlat
pop
jl
ljmp
in
mov
call
jns
adc
inc
lods
cld
test
jmp
repnz
jg
add
outsl
lret
dec
shll
cmp
test
pop
shr
lods
fstl
out
xorl
popa
loope
out
push
pop
xor
push
push
cld
push
loopne
pushf
loopne
sub
rcrl
mov
xchg
xor
mov
insb
sub
sahf
lcall
mov
test
pop
push
mov
cmp
lcall
loope
and
std
faddl
push
mov
jg
fsubr
push
je
sbb
adc
mov
sarl
inc
out
push
pmaxub
pop
xor
outsl
jne
rcr
adc
xor
cmpl
adc
cmpsl
mov
jns
sbb
pushf
stc
aaa
push
mov
std
lcall
jns
xlat
sub
add
cld
fldcw
mov
test
and
in
xchg
pop
xchg
lods
stc
inc
pop
and
leave
cld
push
repz
pop
fwait
repz
imul
fcmovne
mov
dec
pop
or
sub
das
lgs
ss
aaa
rolb
aam
or
add
sbb
les
lods
jnp
outsb
jo
xor
rcrl
loopne
adc
nop
gs
xchg
add
dec
pop
mov
aam
mov
jae
jne
and
sahf
fdivrl
mov
outsb
pop
mov
popf
mov
push
ret
push
push
enter
xor
sbb
daa
mov
pop
inc
push
mov
and
push
sahf
inc
sahf
and
loope
rolb
cmp
mov
insl
ret
xorb
pop
ss
mov
add
jmp
push
push
enter
push
mov
mov
mov
dec
or
aas
lcall
add
sahf
je
mov
xchg
outsl
and
cli
in
inc
dec
jmp
adc
mov
fmull
or
cmp
daa
stos
sbbb
cmp
mov
pop
mov
jnp
cmp
pop
cmpsb
pop
repnz
cmc
repz
stc
xchg
cmp
sub
and
pcmpgtd
push
jb
and
cmp
or
and
hlt
jmp
stc
mov
jg
je
push
push
push
outsl
mulb
jecxz
mov
and
xchg
aam
xchg
push
lret
pop
inc
pop
add
cwtl
jns
loope,pn
gs
stos
push
sbb
cmp
xor
or
scas
inc
aam
dec
adcb
rcrb
mov
cmp
inc
mov
fxch
call
out
and
je
dec
xor
stc
pushf
cmpsb
clc
pop
data16
lock
daa
movsb
dec
pop
push
addr16
dec
sahf
adc
cmp
pop
cmp
fsts
xor
pop
repnz
ficomps
and
jno
jle
cmpl
sti
jb
mov
mov
pop
nop
adc
pop
xor
pusha
int
xchg
fs
mov
std
lcall
out
push
add
inc
jo
pop
fs
push
lret
sbb
xor
cld
jae
fnsave
push
dec
or
lds
es
out
fwait
loopne
mov
mov
xorl
inc
fdivl
push
clc
dec
inc
cmp
cmp
movsb
mov
lods
nop
popf
mov
ret
aaa
or
jne
minps
mov
jmp
stc
or
out
fidivrl
test
ljmp
xchg
sub
sbb
inc
in
sub
shrd
test
pop
pop
pop
adc
cmpsb
pusha
sub
js
fildll
xlat
bound
arpl
test
push
jp
cmp
adc
repnz
ret
pop
push
push
inc
pop
scas
pop
sbb
mov
imul
lret
loopne
fs
sub
lret
ds
and
inc
sub
imul
andl
lds
cmp
arpl
fisttpll
add
push
shl
inc
mov
sbb
enter
dec
in
inc
push
jle
clc
movsl
lret
js
mov
cmp
scas
and
hlt
jle
fsts
xchg
sarl
jge
cwtl
imul
xor
push
push
sahf
movsl
pop
sbb
daa
sbb
cmpsb
fisttps
out
sub
inc
inc
push
mov
jl
fstpl
mov
jp
hlt
xor
out
icebp
cmpsb
hlt
adc
sbb
test
lahf
and
add
stos
cwtl
adc
clc
decl
fnsave
xchg
pushl
add
push
xlat
xchg
mov
mov
mov
pop
mov
pop
cmovbe
pop
inc
mov
push
mov
adc
ret
mov
jns
xor
mov
aam
xor
jnp
gs
push
mov
fnstenv
fcomps
pop
sbb
ficompl
stc
divl
and
xor
dec
mov
sub
mov
inc
movsb
sub
in
movsl
jmp
icebp
xchg
pop
or
sub
sbb
inc
mov
inc
insb
cwtl
ret
in
pop
sub
adc
scas
fsubrl
repnz
cwtl
cmc
in
fcmovnbe
push
shll
movsb
cli
push
clc
sti
hlt
aam
das
push
sbb
dec
je
jnp
scas
cmp
btsl
dec
testl
jae
lret
lea
jg
loopne
sbb
roll
les
xchg
jno
push
stc
imul
mov
lcall
mov
mov
fcompl
aas
sub
js
data16
shr
inc
es
sbb
xchg
jp
mov
arpl
pop
lret
call
aaa
mov
cs
sbb
mov
sub
enter
insb
or
test
ja
dec
les
jp
jnp
sub
cmp
and
push
in
cmp
mulb
mov
imull
int3
add
fdivr
mov
aas
xchg
jno
les
inc
sti
jge
xchg
lret
test
pop
xor
jecxz
adc
jae
cli
aam
jmp
imul
in
test
mov
fistps
sub
ds
in
int3
dec
sbb
sarl
mov
xchg
lods
cmp
jmp
addl
ja
ljmp
push
leave
test
aaa
pop
jecxz
jb
cli
jmp
dec
popf
push
jnp
int3
mov
adc
pop
add
test
pop
push
xchg
les
cmp
outsb
test
sbb
leave
rcrl
aas
sub
mov
push
xchg
inc
ret
xor
ljmp
and
in
xchg
rep
lds
fdivrp
jb
mov
push
test
lcall
and
xor
lods
addr16
fidivs
iret
pop
cltd
adc
or
mov
in
dec
jmp
pop
pop
js
stc
fwait
pop
ret
cmp
mov
mov
mov
popf
sub
cmp
loopne
lret
xchg
pop
je
cmpsl
shr
hlt
add
inc
mov
dec
and
rcrl
fstp
jne
testl
dec
add
or
pushf
loope
out
and
add
inc
nop
or
dec
adc
add
jb
add
push
subb
xlat
mov
xor
std
mov
ret
add
adc
mov
xchg
fcmovne
insl
rorb
scas
push
icebp
mov
into
and
test
bound
sub
xchg
jmp
and
push
aaa
in
ljmp
clc
dec
sub
das
sbb
daa
inc
jne
lcall
xchg
dec
pop
mov
repnz
data16
test
xor
cltd
push
xchg
outsl
cmp
ja
add
jne
int3
daa
clc
ds
aam
adc
jno
push
nop
addr16
inc
or
and
loope
fucomi
sub
aam
sbb
cmpl
xchg
imul
push
and
jb
nop
incl
js
movsl
mov
or
shlb
mov
sarl
jbe
cmp
pop
pusha
les
push
adc
push
dec
sbb
mov
mov
mov
and
mov
imul
in
mov
ds
xor
lock
leave
cmp
mov
mov
lret
repz
or
lcall
add
setnp
add
call
es
iret
inc
test
inc
sbb
push
jne
rcr
add
cmp
repnz
and
lret
mov
pop
outsb
je
adc
mov
push
mov
xchg
aas
inc
int
pop
rcl
addr16
xchg
or
jecxz
mov
fbld
mov
or
sar
sub
xchg
js
add
stos
rclb
jecxz
je
add
ficoms
fidivrs
mov
mov
inc
or
add
cmp
test
jne
jnp
fcmove
jl
adcl
xchg
pop
push
mov
nop
dec
es
loopne
or
daa
scas
aaa
pop
int
in
sub
in
out
sub
adc
xchg
shrb
popa
xor
lahf
inc
into
sar
dec
aam
outsl
lods
dec
cmp
push
out
jp
or
ret
loopne
inc
jmp
sub
or
inc
push
iret
hlt
add
test
in
clc
mulb
insl
in
aad
jp
xor
js
imul
or
icebp
adc
push
imul
mov
mov
in
dec
lods
iret
hlt
cmp
pop
popf
push
cmp
and
and
aas
fists
jae
or
or
ret
dec
sbb
and
xchg
gs
in
out
std
insb
into
out
ficoml
push
in
and
out
scas
sub
cltd
mov
lret
pop
mov
adcl
sub
aaa
jno
dec
dec
negb
fldt
mov
pop
nop
mov
and
jo
mov
je
std
dec
sahf
cmpsl
sub
inc
or
mov
xor
cmp
push
inc
jle
sti
mov
push
fmul
mov
call
subb
sub
shll
mov
mov
stos
inc
adc
aam
inc
pop
and
mov
stos
or
push
fimull
cmovs
iret
insl
subl
shl
and
push
mov
les
stc
repz
arpl
lods
rclb
dec
push
mov
cli
xor
les
push
cld
xchg
pop
xlat
shl
sbb
sbb
push
aaa
push
fstps
subb
test
int
cmp
out
movsl
xchg
and
mov
lods
mov
scas
cmp
sbb
cmp
fistl
shlb
addr16
cmp
sub
scas
gs
lds
pop
push
enter
mov
jl
push
shl
mov
adc
repz
stos
shll
inc
cmpsb
mov
outsl
inc
inc
add
xchg
xchg
and
loop
pop
push
lahf
jo
sbb
and
push
jecxz
push
push
cmp
mov
int3
jne
xchg
cld
jbe
push
addr16
cmp
mov
or
aad
jmp
inc
add
cmp
push
mov
enter
sbb
notb
sbb
loope
aad
dec
sbb
dec
or
jp
pop
add
cmp
repz
daa
adc
out
sub
cmp
cmc
jle
cmpsl
in
adc
mov
xchg
test
in
ljmp
int3
ljmp
add
aaa
stos
xchg
cli
ret
sub
ljmp
fpatan
aam
fnstsw
stos
sub
gs
call
and
decl
cwtl
mov
out
and
pop
xlat
inc
dec
out
test
ljmp
push
stos
imul
mov
inc
inc
mov
movsb
mov
mov
mov
aas
push
add
cmp
add
icebp
push
icebp
out
insl
cmp
pusha
les
mov
stc
xor
shl
fildll
in
jle
xchg
enter
fcoml
jo
scas
dec
or
sbb
sbb
test
dec
pushf
sub
mov
test
data16
in
ja
mov
pop
and
jg
sub
test
xchg
pop
repz
xlat
ds
mov
push
faddl
sub
mov
add
mov
mov
jae
imul
popf
add
xchg
mov
mulb
stos
iret
or
sbb
push
insl
mov
out
adc
loop
pop
or
pop
bound
mov
ja
sbb
imul
xchg
push
pop
add
sbb
jnp
inc
cltd
stc
dec
filds
fisubl
mov
movsb
es
mov
and
test
pop
in
repz
leave
xchg
push
adc
test
push
loop
cmp
xlat
xchg
mov
lea
orl
lods
fists
ja
sbb
xchg
inc
mov
stc
sti
adc
push
nop
mov
mov
ss
mov
pop
xchg
jns
adc
adc
jbe
push
xchg
ds
mov
adc
sbb
imul
shl
mov
xor
out
push
and
push
ss
push
into
lcall
push
int
push
mov
mov
addr16
fwait
add
push
call
xor
outsb
ret
or
pop
jae
dec
loope
push
inc
lcall
jge
les
testb
mov
jmp
dec
sub
loopne
mov
push
inc
aaa
jo
jno
inc
sbb
cltd
and
dec
sbb
in
and
iret
subl
dec
add
outsl
dec
jg
sahf
ss
in
enter
fistpl
sbb
cmp
rcl
mov
pop
pop
movsl
cwtl
sbb
int
and
lahf
jnp
enter
les
push
xchg
call
ja
les
dec
lea
pop
ret
sbb
leave
dec
jb
out
pop
mov
imul
push
pushf
roll
mov
and
mov
sub
push
jae
push
jmp
pop
cli
cli
inc
psllq
fldenv
lods
cmpsl
in
mov
or
mov
mov
xchg
jne
push
in
jecxz
insl
mov
insl
int3
push
in
pop
cmc
orb
mov
ret
lea
outsb
fcom
divb
out
push
jo
mov
mov
cmc
aad
push
jne
cmpsb
inc
lret
cmp
adcb
aaa
iret
jno
mov
push
rorb
ret
shrb
push
add
lds
ss
data16
pop
popa
cmp
scas
mov
gs
pop
dec
jg
lahf
cltd
xchg
nop
iret
gs
mov
cmpsl
mov
repnz
inc
cwtl
jle
push
lret
jbe
push
xlat
daa
mov
mov
ret
fidivrl
xchg
jns
mov
ficomps
sbb
test
mov
mov
sbb
dec
sub
fdiv
inc
filds
jnp
mov
mov
add
mov
jnp
add
xor
rcll
cltd
outsl
loop
mov
mov
sarl
dec
stos
and
rcr
pusha
dec
mov
fsubrs
mov
sbb
push
push
sbb
leave
lcall
rcrl
loopne,pt
pop
popfw
negl
xchg
fldl
mov
cld
lcall
xor
imul
or
push
lds
push
mov
dec
cmp
ds
inc
cmp
call
aas
dec
inc
cwtl
lds
in
aaa
aad
imul
stos
pop
xor
mov
jbe
mov
insb
fnstenv
rorb
and
out
mov
lret
ja
push
xchg
cmp
xor
das
jge
ficompl
xchg
lods
sbb
dec
xor
into
cmpb
xlat
idivb
dec
push
fdivrl
sub
dec
push
add
dec
lods
inc
sub
insl
mov
mov
adc
push
lods
nopl
xchg
cmpsl
pop
mov
mov
pushf
pop
mov
pop
mov
adcb
or
pushf
sub
and
icebp
adc
jne
movsb
ja
jg
movsl
stc
scas
jp
and
push
mov
in
dec
and
mov
sti
aaa
hlt
int
push
lcall
pushf
sbb
and
ret
movsb
leave
jae
pop
sbb
stc
test
mov
pop
bound
mov
loop
xchg
push
xor
stos
cmp
push
addr16
jmp
lock
hlt
and
jnp
cmp
lock
inc
xor
incb
xor
push
pusha
fidivl
sbbl
fbld
mov
xchg
lea
jmp
xor
jmp
out
data16
add
std
pop
pop
xchg
jne
out
das
adc
cmpsb
cmpl
or
jne
push
jle
adcl
dec
mov
push
cmp
mov
and
ja
jle
sub
mov
loopne
cltd
repz
hlt
aaa
orb
mov
insb
and
outsb
dec
jecxz
stos
mov
push
movsl
data16
scas
and
cli
data16
testl
mov
sysexit
test
mov
xor
jo
push
cmp
das
stos
nop
adcl
push
or
insl
bound
push
cld
dec
sahf
xchg
mov
mov
xor
test
jp
inc
in
lahf
adc
and
inc
inc
dec
jae
pop
jne
cmp
push
or
cmpsb
cli
pushf
push
shll
pushl
lret
jg
mov
xchg
lret
push
sbb
lea
or
push
xor
xor
incl
push
inc
mov
icebp
cmpsl
mov
imul
or
fdivl
mov
jns
mov
icebp
cmp
xchg
pop
inc
pop
in
push
movsl
mov
cmc
out
and
xor
sbbl
scas
in
push
cmp
and
jge
add
arpl
jmp
fstpl
lahf
pop
dec
cmpsl
and
inc
cltd
mov
rcr
es
adc
mov
fwait
pop
or
fcomps
pop
cmp
je
xor
call
adc
std
test
xchg
xor
mov
repz
pop
clc
xchg
or
add
mov
push
faddl
xor
and
popf
jno
insb
cmp
enter
dec
pop
mov
sti
sub
jb
cmp
inc
ret
pop
pop
scas
or
repnz
and
mov
popl
sbb
ljmp
mov
adc
ja
pushf
mov
push
xlat
dec
pop
gs
shll
mov
xor
into
adc
sti
sub
pop
push
inc
jne
lock
rol
lods
mov
or
xchg
push
jnp
in
sbb
cs
ja
fwait
jns
ds
bound
inc
cli
xlat
pop
xchg
mov
test
arpl
popf
shrb
mov
aas
add
mov
or
xchg
inc
mov
outsl
xor
pop
xchg
pop
sbb
ljmp
sahf
lret
mov
test
cli
jb
stos
imul
add
push
mov
in
outsb
jns
inc
and
adc
lock
push
inc
outsb
sbb
mov
pop
sbb
dec
cmp
movsl
aam
pop
or
lcall
jl
push
jns
mul
fdivrl
jne
xchg
enter
push
in
xor
dec
pusha
popa
mov
jecxz
sub
adc
adc
add
adc
cmp
repz
and
out
jle
mov
rcrb
inc
movsl
je
push
pop
dec
ret
ret
and
cmp
pop
xchg
xor
and
push
out
aaa
jecxz
adc
cmp
rcrb
bound
push
mov
pushf
out
xchg
loope
inc
cmpb
test
pop
push
outsl
jge
shll
or
shll
mov
ljmp
inc
jbe
add
jg
sub
dec
ds
push
repnz
std
aas
das
jae
bound
insl
add
out
mov
outsb
jno
ss
scas
insb
iret
popf
hlt
xchg
sub
cmp
push
out
add
sub
aas
add
nop
mov
mov
push
or
movb
mov
inc
cmp
insl
ljmp
shrl
sub
inc
inc
or
xchg
adc
xchg
add
or
out
and
in
ret
ret
and
out
dec
mov
aas
rcll
pop
adc
pop
iret
icebp
sbb
add
push
xor
outsl
jl
mov
add
or
cmp
es
mov
pop
cmpsl
xor
push
sub
xchg
jno
inc
test
lods
repnz
and
inc
jle
leave
pop
push
mov
inc
push
jge
ljmp
adc
mov
sbb
cmpsb
xchg
mov
std
dec
cmpsl
pcmpeqb
push
out
stos
add
adc
bound
jno
cmpsb
jl
push
hlt
jns
sub
inc
jl
xor
sub
int3
adc
insl
int
jb
sub
inc
popf
ja
es
lods
adc
cmp
icebp
adc
ds
add
cmp
push
dec
test
insb
pop
pop
ss
sahf
shll
xorl
push
push
xlat
xchg
repz
fwait
repz
jns
insl
in
pop
push
xchg
leave
xchg
outsb
and
mov
sub
test
jle
leave
lahf
push
nop
or
stc
xor
jno
stos
cmp
mov
cmp
shr
sub
xchg
sub
jmp
lock
sub
cmp
pop
and
fwait
and
pop
mov
cmp
movl
ret
or
and
jle
inc
xor
pop
jmp
sub
push
sbb
fisttpl
jle
xor
and
pop
rolb
push
cmp
aad
dec
adc
pop
push
add
jae
mov
mov
jbe
xchg
jae
mov
jl
aas
jns
shll
xor
xchg
leave
ret
sbb
mov
sub
repnz
cmp
sarl
insb
fcomps
fcmovu
mov
sbb
pop
jmp
jge
and
shrl
mov
clc
mov
sbb
popa
push
mov
cmp
call
dec
sub
rorl
push
pop
imul
jb
xchg
push
inc
cbtw
xorb
mov
pop
mov
inc
and
stos
push
mov
arpl
add
loope
xchg
push
ljmp
inc
sbb
mov
pop
mov
test
mov
mov
cs
inc
test
sbb
sbb
and
jmp
pop
jnp
popf
inc
pop
stc
mov
int
adc
push
jmp
leave
push
jge
push
fdivrl
mov
dec
dec
push
out
mov
mov
adc
aad
adc
daa
out
fwait
sub
jmp
icebp
mov
lods
mov
mov
test
sahf
or
addr16
ja
jae
fsub
mov
stos
push
je
mov
mov
sbb
lds
push
pushf
jbe
adc
sbb
cmpsl
jge
dec
btr
mov
sbb
push
xorl
cmpsl
sbb
push
das
xchg
mov
push
rorb
jge
sbb
mov
imul
or
add
mov
shll
test
cmpsb
push
adc
stos
push
dec
data16
lahf
inc
loopne
pop
sar
push
inc
lcall
inc
jno
test
rclb
out
mov
pop
shrb
and
gs
dec
sbb
repnz
icebp
scas
inc
or
addb
fnsave
daa
jae
lret
add
lods
push
repnz
int
outsb
out
bound
lcall
setb
outsl
sbb
mov
imul
mov
ljmp
icebp
rclb
out
scas
cmp
fistpl
cmc
int3
stc
inc
lahf
push
js
mov
in
push
and
push
mov
fmull
in
gs
sbb
or
test
rclb
into
hlt
pop
or
adc
mov
loope
pop
inc
pop
fcomps
sub
imul
jmp
cmp
divb
fnstsw
mov
movsl
push
add
ljmp
pop
loop
lret
inc
sarb
adc
insb
mov
repz
jmp
cltd
scas
arpl
sbb
lock
out
bound
sbb
aam
sbb
cmp
jae
xlat
lods
xor
aaa
out
push
mov
inc
insb
loop
rcll
lret
cmc
nop
test
xchg
jb
das
in
loopne
into
insb
out
lock
int
notl
and
mov
inc
lahf
cli
mov
xor
jle
in
sbb
stos
xor
add
xorl
push
inc
sbb
fistl
or
shll
mov
lret
jp
cmp
popf
inc
xlat
add
loop
push
test
testl
test
jecxz
add
or
pop
jns
popa
es
sbb
cli
add
pop
fidivrl
jae
leave
xchg
jp
sahf
sbb
insl
clc
push
dec
sbb
jl
adc
xchg
mov
pop
push
out
andl
test
int
sbb
mov
lea
inc
xor
frstor
mov
fcompl
xchg
pop
sbb
stc
addr16
cmp
cwtl
sbb
xor
lahf
jne
dec
popf
xchg
push
data16
repnz
ror
mov
lret
movsb
enter
stc
sarl
mov
adc
sti
push
or
jl
fistpll
fs
add
out
adcb
inc
push
out
dec
ss
xchg
jecxz
mov
rcrb
ja
mov
je
fnstcw
sahf
push
stc
out
xor
inc
les
repz
and
movsl
push
ret
adc
outsb
in
xor
cli
cmp
popa
push
adc
leave
faddl
add
movsl
iret
or
inc
das
popl
mov
roll
addr16
push
pop
fcomps
mov
sbb
dec
sub
jbe
jae
addr16
inc
and
push
xchg
mov
pop
int3
mov
pop
stos
data16
ljmp
loop
mov
push
aas
jb
or
adc
aas
in
ret
push
xchg
fisttpll
xor
out
ret
imul
das
in
das
shrl
test
pop
push
jecxz
jp
in
insl
insb
cmc
stos
addr16
out
inc
inc
jae
and
es
lret
pop
jb
addb
cmc
subl
sbb
data16
call
test
dec
stos
push
aas
mov
pop
jmp
gs
or
xor
pop
pop
push
jecxz
jno
xlat
aam
das
sbb
pop
pushf
jg
scas
call
lds
mov
int3
add
mov
cmpsb
lret
adc
pop
imul
and
fwait
rorl
sbb
pop
out
mov
cs
xchg
mov
adc
pop
ljmp
dec
int
xchg
mov
pop
mov
inc
roll
ja
mov
popf
mov
inc
aas
mov
test
pop
inc
add
into
xchg
sbb
add
loope
sub
or
daa
aad
or
addr16
aaa
lret
sti
test
ret
adc
xchg
xchg
leave
es
push
outsl
and
push
dec
cli
popl
cmp
jbe
mov
jle
and
pop
ret
mov
jne
sti
sti
sub
ret
enter
mov
and
iret
xchg
inc
pop
orl
int
cmp
fcoms
movl
sub
out
or
ljmp
inc
scas
in
sti
movsl
cli
test
iret
jg
sub
xor
jg
dec
lahf
sbb
inc
mov
jmp
mov
daa
in
and
cmp
or
fidivrl
sub
cmp
or
sbb
mov
inc
shlb
jae
inc
ja
call
lret
test
push
xchg
fnstenv
mov
cmc
jle
out
mov
sti
cmp
xlat
in
test
pop
dec
cmpsb
negb
or
and
pop
jbe
loope
and
imul
fdivrs
jae
je
ss
sbb
repz
movsl
dec
sbb
int3
test
pop
dec
arpl
sbb
insb
stc
push
mov
popa
xchg
pushf
cmp
std
repnz
sub
xchg
push
jae
imul
and
in
ljmp
push
mov
lock
scas
stos
ret
xchg
not
jns
loopne
les
addr16
shll
in
mov
inc
pop
pop
pop
stc
push
popa
rcll
repz
mov
cs
xlat
bound
mov
sub
loopne
daa
adc
data16
mov
ret
pop
mov
push
xchg
scas
xchg
cs
cmp
int
daa
loope
inc
sbb
into
scas
add
rcr
stos
shl
ret
enter
push
jecxz
repz
jp
jp
incb
cmp
push
ljmp
addr16
fdivrl
sbb
sub
mov
push
aad
xchg
mov
mov
jo
sub
jmp
jns
jp
jecxz
mov
xchg
filds
addb
xchg
xor
mov
mov
jmp
or
adc
mov
mov
xchg
mov
shlb
shll
mov
vmovntps
cmp
xor
repz
xchg
inc
adc
mov
loop
mov
dec
dec
notb
dec
xor
rorb
into
push
incb
aas
int3
pop
roll
or
pop
pop
xchg
cld
lret
or
fstp
loopne
jg
jnp
mov
mov
mov
out
adc
pop
fbstp
add
jnp
dec
mov
pop
xchg
add
stos
or
cmp
movsl
loopne
shlb
pushf
xor
push
in
and
pop
jg
ja
xchg
fcmovu
inc
lea
fstp
int
push
pop
xchg
cmp
fidivs
sbb
cwtl
mov
call
lods
out
cmp
inc
in
pop
xorl
xor
in
lods
test
int
mov
aas
pop
pop
jo
outsl
icebp
jns
xchg
mov
in
jo
or
fwait
shll
xchg
and
mov
lds
sub
jl
mov
jne
pop
aad
cmc
mov
enter
pop
cmpl
ret
dec
pusha
or
test
in
adc
jl
data16
das
push
push
into
mov
pop
inc
push
push
ret
adc
jecxz
ds
jle
push
push
adc
nop
test
repz
and
or
shll
lea
jns
leave
fs
cmp
and
aad
cli
add
into
enter
pusha
sbbl
or
stos
cmp
add
idivb
aam
lock
mov
inc
sbb
ja
dec
or
push
fbld
and
pop
shlb
and
cmp
dec
icebp
mov
mov
arpl
pop
pop
mov
outsl
adc
or
sub
jp
add
test
in
mov
aas
jno
cmp
adc
sbb
or
inc
push
fisubrl
sbb
mov
stos
std
and
div
imul
or
pop
dec
and
xchg
in
jp
xchg
jno
aam
ret
cmp
out
and
or
add
cmp
and
cmp
xchg
aaa
jmp
mov
jbe
add
add
xchg
aad
pop
stos
movsl
addr16
inc
cmp
repz
aaa
xchg
int3
add
xchg
addr16
fimull
push
pop
or
push
lahf
mov
push
lret
insb
arpl
mov
sub
rclb
decl
xor
dec
mov
mov
dec
out
aaa
fs
push
push
sub
cld
dec
fstps
pop
in
sti
xchg
movsb
mov
lcall
scas
adc
push
dec
pushf
jae
icebp
lahf
sub
aam
imul
add
xchg
or
cmpsb
jecxz
cmp
mov
lds
pushf
mov
rcl
sbb
into
ficompl
pop
mov
out
dec
lahf
push
and
jecxz
inc
push
add
out
sbb
and
out
adc
and
or
xchg
fistps
mov
shl
aaa
insb
lods
nop
xchg
xchg
and
dec
dec
clc
lret
and
pushf
sbb
dec
stos
or
into
jmp
loop
sub
cmp
dec
adc
orb
push
sbb
insb
icebp
lahf
jns
lahf
dec
jl
xchg
lds
mov
sub
inc
roll
mov
or
xchg
int
faddp
idivb
mov
test
or
popf
lahf
das
cmp
xlat
jns
lds
fldenv
push
push
divl
icebp
stos
jge
pop
mov
cmp
mov
dec
pusha
adc
insl
out
repz
test
gs
imul
pop
or
les
mov
sub
mov
test
iret
popf
aad
lahf
fistpll
cmp
ljmp
mov
leave
jle
aas
js
call
pop
cmp
out
les
xor
add
out
cltd
les
lock
je
movsb
or
dec
test
pop
call
cmpsl
in
or
sbb
push
ja
pop
sbb
dec
jae
ror
and
mov
mov
inc
add
mov
and
dec
scas
loope
stos
dec
xor
cli
jnp
sub
adc
popl
call
mov
push
sbb
loop
and
js
mov
popf
sbb
xchg
add
xchg
xchg
ror
and
dec
jp
xor
fs
adc
sahf
mov
push
sub
iret
and
add
mov
xchg
into
into
dec
addb
inc
cmp
sbb
mov
xchg
add
push
insl
jle
push
es
mov
mov
fs
nop
mov
dec
scas
add
mov
inc
movsb
lea
push
nop
sbb
outsl
mov
bound
sar
ljmp
pop
fmul
movsb
test
jnp
push
add
jmp
loope
cli
mov
inc
mov
fsubs
add
aam
fsubrs
xchg
push
jbe
add
fs
loopne
bound
xlat
sub
mov
sub
or
and
adcb
and
mov
dec
cmpsl
pop
out
xlat
scas
stc
imul
inc
sbb
lock
xchg
scas
and
xor
jmp
lock
xchg
push
fucomip
cmp
test
sti
mov
mov
push
imul
stc
lock
inc
pop
and
dec
mov
pop
jnp
sbb
jb
mov
test
inc
shrb
lods
mov
xor
dec
loop
je
ss
icebp
das
push
jge
mov
push
out
sbb
xchg
push
fnsetpm(287
and
in
push
jo
xchg
fdivs
inc
daa
and
mov
fildl
pop
mov
pop
mov
push
cmp
mov
add
mov
call
push
gs
test
mov
push
jno
subl
inc
add
das
lods
je
in
aaa
movsb
outsb
push
mov
ja
sbb
sti
hlt
inc
sbb
mov
mov
xor
popf
mov
in
push
sub
push
into
test
push
outsl
cmp
das
jno
inc
pusha
daa
fdivrl
stos
xchg
popa
out
scas
aad
and
lret
aad
fs
sbb
inc
stc
inc
or
sbb
sti
shlb
ficomps
push
and
ret
xor
test
hlt
inc
rorb
xchg
xorl
mov
fucomip
and
jae
dec
dec
bound
sarl
movsl
cmpsb
repz
mov
jecxz
and
mov
ljmp
out
mov
cwtl
or
sbb
add
je
ror
clc
pusha
xor
pop
lds
dec
xchg
mov
icebp
pushf
and
lods
in
daa
fcmovnbe
sbb
jle
call
cli
vminsd
popf
popa
hlt
out
add
push
dec
cmp
mov
dec
ja
outsb
dec
sbb
rcrl
inc
pop
pop
sub
mov
hlt
ja
push
mov
xchg
int
insl
cmp
sbb
xor
ret
shl
imulb
and
jge
mov
adc
mov
outsb
mov
jae
movsl
lods
lret
test
mov
jne
inc
inc
mov
cmpsl
or
mov
enter
cmp
rolb
inc
es
cmc
jmp
sbb
inc
jo
add
loopne
jae
repnz
fstp
repz
pop
pushf
loope
movsb
clc
fistps
mov
ret
mov
mov
lahf
jle
flds
mov
sti
sub
insb
or
fs
pop
mov
cmc
outsb
adc
push
cli
sbb
fisubl
push
sbb
cwtl
dec
test
or
ja
push
pop
sbb
jp
pop
cmpb
fadd
sub
dec
pop
push
mov
xor
roll
add
clc
imul
in
dec
adc
jmp
leave
mov
bound
andb
stos
in
in
jnp
lahf
jle
push
fbstp
dec
pop
or
fsub
dec
xchg
mov
xchg
adc
sub
mov
mov
xchg
out
jp
pop
jno
loopne,pt
xlat
add
sub
mov
cmpsl
inc
jle
outsb
jle
repz
popa
jae
mov
mov
add
push
testl
lret
andl
cmpsb
fcmovu
stos
enter
daa
pcmpgtw
dec
in
pop
xchg
aam
pop
add
pop
jno
xchg
xlat
mov
cmp
insl
adc
repnz
xchg
mov
jne
outsl
mov
and
or
pop
and
jns
das
movsb
in
mov
and
call
outsb
push
jo
xchg
jbe
xchg
jle
ds
test
pop
test
mov
stos
test
pop
bound
jl
ds
clc
pop
out
xor
cmpb
movsl
ss
and
push
xchg
pop
dec
ret
cld
sbb
shll
inc
rorb
inc
jmp
cmpsl
mov
cmp
mov
add
cmpl
sub
dec
xchg
xorl
jb
jl
mov
fadds
cmp
js
cmp
mov
add
loop
xor
pop
and
inc
clc
ja
inc
xor
lret
lret
movsl
sub
lds
dec
movb
sub
cwtl
or
shll
adc
je
inc
xchg
or
insb
leave
sub
popa
fadd
daa
mov
mov
jb
rclb
jae
fidivrs
icebp
cmp
pop
lahf
insl
mov
das
mov
ds
aad
sub
sbb
imul
movsl
clc
call
and
push
pop
push
cld
sub
incb
sub
cmp
xor
pop
aad
nop
inc
xchg
dec
std
imul
aas
jns
adc
mov
add
or
popa
int3
sub
mov
fdivrs
sbb
mov
ret
fcomps
cmp
cmpsb
lods
xchg
js,pn
mov
fsubrs
push
mov
dec
push
jns
xchg
push
and
icebp
test
stos
jb
mov
ss
rcrl
dec
lcall
jle
push
pop
stos
inc
sbb
in
sub
mov
data16
mov
inc
out
jle
incb
mov
ljmp
aad
cli
lea
push
add
lods
mov
jmp
into
and
pop
popa
lcall
add
or
sbb
fimuls
popa
push
fwait
mov
test
and
push
mov
xchg
mov
jne
lock
add
insl
fisubs
sbb
xchg
cmp
inc
sbb
das
ret
rcll
cmc
pop
cmp
sbb
fimuls
xabort
les
mov
repz
rcl
sbb
cwtl
mov
dec
mov
insl
imul
cmpsl
sub
or
or
nop
sbb
or
adc
and
inc
fcmovnb
inc
jnp
sub
insb
cmp
jae
pop
dec
or
xchg
mov
mov
pop
or
add
pop
mov
jbe
pop
xchg
mov
sbb
std
fwait
sbb
scas
notl
shlb
pop
and
mov
fldt
cmp
pop
push
cmpsb
out
add
add
pop
in
inc
lcall
mov
mov
je
sbb
jg
test
in
mov
and
rcll
iret
lods
call
out
pop
push
fnclex
push
fists
outsl
ret
iret
cli
add
je
push
insl
fildll
sbb
aam
rclb
inc
adc
push
push
dec
dec
jl
movsl
sub
sti
pop
cmp
lock
inc
add
dec
and
stos
rolb
mov
adc
push
inc
cmp
sbb
mov
jle
in
loopne
sbbl
or
adc
cmc
sub
arpl
xlat
add
addr16
in
pop
aam
rclb
rol
and
test
push
adc
jecxz
sbb
jecxz
pop
in
xor
sbb
out
adc
ret
idivb
mov
mov
sub
push
call
test
fsub
pop
jle,pn
cltd
mov
sarb
push
mov
mov
imul
sub
test
nop
daa
pushl
cwtl
aas
xlat
sub
inc
xchg
int
lahf
jp
sahf
std
pop
mov
jl
pop
dec
mov
test
fnstcw
mov
and
adc
xchg
push
cmpsb
repz
adc
jecxz
dec
cli
jmp
mov
ja
jge
mov
add
stc
jge
fimuls
rcrb
sti
xchg
pusha
adc
inc
mov
ret
mov
out
dec
add
negl
adcl
inc
int3
push
and
lret
jmp
mov
hlt
xchg
cmp
sbb
fwait
cmpsb
xchg
call
in
mov
mov
cwtl
movsl
push
hlt
addr16
push
and
pop
pop
push
imul
inc
outsb
pop
stos
nop
mov
inc
mov
loop
pop
in
cld
jg
mov
sahf
sahf
fmuls
imul
scas
cli
push
idiv
test
cld
sti
adc
mov
pushl
ret
arpl
add
cmp
daa
mov
insl
sub
mov
repz
gs
sbb
in
sbb
je
dec
mov
stc
mov
push
pushf
addb
daa
lds
std
mov
xor
mov
shrb
arpl
mov
pop
cmp
mov
fisubs
out
cmpsl
rcll
and
jmp
out
daa
lret
outsl
ljmp
mov
fidivrs
jae
sti
and
lds
psrlq
mov
push
or
mov
mov
cmp
mov
testb
jle
sbbl
adc
shlb
int3
dec
inc
sbb
jle
test
in
cmp
addr16
loop
lods
add
cmp
adc
pop
loopne
jne
xchg
mov
mov
cmpsb
shr
and
push
xchg
ds
xchg
xor
imull
fs
insb
mov
faddp
push
jo
dec
rcrl
push
push
fwait
pop
inc
cld
out
gs
cmp
and
xlat
xlat
arpl
ss
shrb
and
popf
mov
loope
adc
sti
into
jge
mov
pushf
jns
fdivs
mov
testb
mov
add
leave
mov
js
imul
or
pop
and
les
sub
fisubl
mov
xchg
pop
push
rcr
test
add
jbe
fdiv
enter
push
iret
and
xchg
jnp
dec
ret
int
lods
pop
jns
and
mov
xlat
push
adc
int3
arpl
adc
gs
jbe
clc
les
lret
es
or
push
aaa
into
popl
pop
mov
xchg
test
mov
push
repz
lcall
cmp
xchg
xlat
adc
sbb
insl
mov
or
push
cmp
lcall
push
mov
and
inc
gs
cmpsb
pop
cmp
test
shl
adc
or
adc
and
sub
mov
popa
and
dec
sbb
mov
pop
mov
imul
push
jle
lods
cmpsl
decb
sub
fisttps
cmpsb
in
rcrb
imul
jo
sahf
sbb
mov
dec
adc
mov
mov
jae
shll
repz
push
xor
andl
push
or
sbb
pop
sbb
pop
fcomi
inc
mov
fisttps
cmp
aas
dec
scas
imul
mov
popf
rcrl
dec
je
jne
jmp
mov
jle
adc
mov
pop
testl
popf
dec
cmp
mov
idivb
push
xchg
mov
cmp
xor
xor
out
jno
mov
push
xchg
adc
cmp
push
lret
loope
loopne
mov
sub
outsl
movsl
pusha
push
inc
test
pop
lahf
add
call
xchg
cld
popf
call
add
aaa
push
popa
mov
adc
loop
mov
cmp
aad
dec
sbb
mov
rclb
push
push
shll
dec
iret
stos
dec
fwait
das
xor
in
aam
jnp
jb
mov
shll
jb
add
inc
adcb
jb
mov
dec
xchg
dec
dec
data16
adc
pop
punpckhwd
ja
jp
and
popa
movsb
push
push
mov
aam
inc
int3
add
xor
mov
lds
arpl
push
lret
imul
shl
jo
push
mov
dec
jnp
orl
xchg
pop
pop
dec
mov
andl
int
pop
jns
push
mov
ds
insl
shll
arpl
outsl
inc
xchg
rcr
divl
mov
pushf
fwait
ds
jnp
push
test
push
adc
movsl
add
test
stos
lds
push
js
or
add
xchg
mov
sbb
lea
enter
out
and
sbb
add
in
aaa
int
add
fs
lods
mov
shrb
mov
out
iret
xlat
sbb
bound
sbb
push
dec
dec
cmp
into
push
fldenv
fs
add
popa
fistpl
rorb
aam
mov
shlb
sbb
sbb
lods
mov
fld
xchg
or
inc
xchg
lea
loopne
xchg
push
adc
cmp
fwait
mov
lods
xorb
subb
sarb
mov
decl
xchg
and
mov
lods
jne
jge
out
fsubr
or
dec
jnp
sub
fadd
dec
adc
mov
fwait
outsl
stc
loopne
test
mov
and
jo
cld
inc
in
jge
inc
cmc
stos
bound
out
fs
in
repnz
inc
xor
pusha
scas
xchg
mov
dec
out
fcomip
js,pt
and
push
into
push
and
jecxz
and
mov
out
inc
xor
mov
ds
push
sub
jp
add
nop
jl
aam
repz
and
inc
xor
xchg
gs
movsb
test
sbb
rolb
aaa
ss
jl
je
cmp
jns
scas
inc
cmpsb
dec
add
dec
addl
mov
mov
popf
add
push
mov
rcll
jb
movsl
imul
fsubrl
push
mov
pop
loopne
aad
sbb
cmp
mov
adc
cmp
or
add
call
mov
or
lahf
inc
cmc
jmp
addr16
lahf
ljmp
push
daa
mov
lods
mov
or
cmp
cmp
jb
or
mov
lret
lcallw
daa
rcll
mov
nop
stos
mov
ds
xchg
int3
and
ret
or
inc
mov
xchg
xchg
dec
pop
imul
scas
push
int3
ss
inc
lret
insl
negb
sbb
out
out
fstp
or
xchg
jle
pusha
adc
push
mov
xchg
insl
add
jmp
fldl
lds
adc
js
pusha
mov
into
lods
ljmp
jns
inc
nop
fists
dec
lea
jl
sarl
pop
scas
inc
lcall
mov
pop
push
mov
not
jp
lods
dec
cmpsb
cmp
inc
mov
inc
insl
pop
xchg
mov
lret
mov
mov
mov
ret
lods
cs
test
mov
push
out
fsubrp
rclb
rclb
pop
push
lahf
jno
cli
push
stos
inc
xchg
jmp
fldt
cmp
add
jle
dec
sub
and
dec
enter
sbb
jle
loopne
xor
stos
orl
cltd
cli
gs
pop
lret
mov
mov
push
sub
mov
inc
or
lcall
aaa
enter
cld
mov
loope
jp
or
out
in
fld
jnp
pusha
cld
adc
lds
mov
xchg
xor
mov
push
lock
cmp
mov
jl
mov
mov
popf
std
cld
scas
hlt
and
cmpsb
sbb
sahf
mov
sarl
ret
mov
mov
mov
push
test
ss
hlt
jae
xchg
mov
shll
jmp
jg
push
in
popa
mov
stos
mov
loop
lahf
out
xor
xchg
test
enter
xor
jns
fwait
adc
add
fbstp
ficomps
stc
scas
in
mulb
sub
mov
mov
jecxz
outsl
jae
scas
push
or
mov
ss
jle
mov
mov
icebp
jnp
xor
jb
push
test
push
sbb
clc
mov
out
mov
in
icebp
xlat
js
pop
sbb
adcl
lcall
push
stc
lret
je
ja
add
data16
xlat
cltd
nop
gs
jae
in
mulb
sbb
dec
mov
xchg
lcall
pop
scas
pop
in
push
sbb
add
push
ret
jp
and
inc
rcll
insl
mov
jp
or
sub
push
ret
push
or
lcall
stos
add
fwait
orb
dec
movsl
pop
mov
mov
loope
into
fdivrp
lock
xorb
lods
int
xchg
imul
jae
pop
out
repnz
mov
js
ss
inc
je
jbe
add
cld
subb
arpl
inc
mov
add
test
enter
out
fmuls
sti
or
sbb
inc
mov
div
jns
add
adc
iret
aaa
out
outsl
sbb
sub
ja
xor
mov
ficoml
in
mov
adc
sub
xchg
push
jle
and
jns
lgs
dec
pop
sub
push
out
mov
mov
mov
in
aaa
mov
mov
jne
sbbb
mov
add
sbb
add
adc
movsb
dec
fcmovb
push
sbb
jbe
lods
out
int3
jg
cld
cwtl
repz
inc
cmp
mov
mov
xchg
jo
shlb
test
sub
sbb
jbe
enter
imul
dec
mov
cmp
add
cmp
mov
cld
xchg
lods
cwtl
sbb
push
popf
push
lcall
adc
mov
stos
and
pop
cmpsb
inc
push
inc
rcrl
sti
inc
cmp
scas
call
dec
sbb
js
aaa
sub
sub
mov
mov
xchg
mov
mov
pop
in
ret
sbb
cmc
lods
push
icebp
cs
lods
shl
stc
mov
lret
clc
shrb
and
push
popa
loopne
dec
push
shlb
mov
daa
jnp
int
fs
icebp
rolb
sbb
out
push
cli
push
inc
mov
jnp
inc
lcall
inc
shll
mov
dec
orb
adc
shl
xchg
dec
jl
xor
stc
popa
cwtl
clc
in
lret
dec
or
loop
out
imul
arpl
loopne
add
and
out
and
ja
push
movsl
push
pop
sub
add
daa
fisttpl
xor
adc
pop
or
or
addb
mov
or
mov
jmp
stos
mov
add
mul
das
dec
std
cmp
insl
hlt
out
cmpsb
inc
mov
lcall
xchg
loop
jmp
stos
scas
fwait
les
fs
sti
adc
lea
mov
fs
mov
sub
dec
sub
jb
jns
pop
out
bound
mov
fldl
rol
sub
add
add
mov
int
sbb
movsl
inc
mov
mov
xor
add
fs
cmp
xchg
cltd
sti
jecxz
nop
adc
iret
inc
jb
adc
mov
arpl
repz
shr
pop
push
sbb
mov
shlb
xor
cld
ss
orl
push
push
add
xor
cmp
sti
push
insl
cmp
mov
pop
iret
mov
push
xor
jg
sbb
sbb
jae
push
fmull
mov
or
sar
pop
pxor
aad
test
cltd
and
rclb
cmp
imul
das
es
and
daa
push
je
mov
inc
dec
ret
js
jmp
xchg
cmp
push
loope
jge
clc
sub
movsl
mov
icebp
cli
loop
adc
or
daa
loopne
pop
push
mov
cmp
daa
inc
andl
in
lahf
sbb
sub
int
addr16
mov
test
dec
xlat
push
sub
mov
inc
test
inc
or
addr16
sbb
fisubl
shlb
cwtl
add
dec
inc
mov
js
jp
cmp
aad
fnstsw
arpl
push
adc
ret
int3
mov
or
clc
push
push
mov
scas
or
lret
lcall
mov
mov
jb
mov
test
repz
not
pop
stos
fldenv
cltd
and
sahf
fstp
jne
xchg
or
sbb
mov
and
add
std
mov
push
bound
pop
inc
adc
jbe
inc
clc
jb
mov
fs
add
cmp
dec
sbb
std
xchg
jae
sub
xchg
jnp
sub
cmp
and
sub
push
out
orb
push
fstl
and
test
test
sbb
imul
inc
enter
ffreep
shlb
xchg
jmp
sub
outsl
outsl
lds
stos
push
lods
mov
push
test
ss
sbb
insl
pushf
jno
inc
jae
fs
add
mov
jns
fdivr
das
pop
xor
xor
sub
lds
xchg
xor
std
les
mov
cwtl
loopne
sti
xor
int3
std
pop
jno
fisubrs
insl
jp
push
pop
pusha
hlt
out
push
sbb
sub
stc
inc
xchg
and
aad
imul
sbb
test
scas
mov
aas
jo
cmp
push
icebp
cmp
jge
mov
and
cmpsl
push
pop
out
adc
and
clc
sub
fildl
mov
pop
mov
jg
insb
jmp
and
push
cli
sti
lds
call
push
jmp
lods
push
test
in
mov
aad
inc
push
jno
fimull
or
ret
sbb
in
mov
xor
in
and
sub
in
aam
int
add
or
nop
mov
sarl
jb
sub
addl
inc
aas
mov
pop
cmp
adc
xor
dec
in
int3
js
repnz
dec
inc
ds
and
shl
test
frstor
pop
sbb
sarl
cmp
ficompl
cmp
sub
push
movsl
imul
fsubs
sbb
mov
cmc
shrl
movsl
imul
and
pop
out
or
ret
push
jb
pop
xchg
scas
cld
loope
repz
dec
mov
in
jl
pop
aad
and
mov
popa
push
xchg
adc
inc
js
popf
push
mov
push
sub
and
jb
add
pop
mov
dec
neg
sahf
jb
mov
cmp
cmp
lods
mov
jge
mov
roll
fisubrs
push
cmp
pop
aaa
insl
and
mov
inc
stc
jnp
fimuls
fimuls
push
cmp
mov
das
sbb
pop
daa
xor
jl
cmc
test
imul
stos
lods
jge
fucomi
out
call
out
and
insl
fxch
mov
dec
in
movsb
mov
lea
pop
mov
into
pop
mov
pop
dec
scas
xchg
jg
lret
cmp
cmp
rolb
jp
mov
enter
nop
test
test
out
loope
inc
fcoms
loop
loope
xchg
in
subb
pslld
or
out
mov
push
xor
pop
push
lret
and
out
inc
xorl
int3
and
fdivrs
sbbl
out
push
sbb
pop
xchg
das
lret
outsl
push
or
mov
je
push
sbb
adc
movsl
imul
and
xchg
mov
pop
xorb
add
int
bound
fldl
mov
or
xchg
dec
push
test
and
push
mov
lret
sahf
xorl
xor
cli
insl
xchg
roll
mov
mov
cwtl
int3
adc
push
leave
mov
dec
rcll
pop
jle
cld
xchg
stc
enter
adc
inc
push
jle
mov
add
hlt
xchg
mov
mov
inc
icebp
jmp
repnz
adc
subb
and
hlt
pop
insb
or
push
cmc
outsb
rcr
fisubrs
dec
xor
fisttpl
pop
divb
dec
jne
adc
cli
subb
ljmp
cmpsb
aas
iret
dec
mov
jbe
aaa
pushf
push
or
and
xchg
icebp
fisubs
iret
inc
dec
xchg
jns
loop
aam
ds
mov
mov
rclb
cld
lds
js
stc
xor
pop
lret
mov
daa
enter
fbstp
mov
je
xchg
push
cmp
pop
pop
imul
xchg
lea
mov
jne
cltd
or
addr16
jl
popa
pop
dec
in
inc
lcall
js
push
jp
in
lods
pushf
lods
lcall
sbb
dec
movswl
push
push
cmp
sahf
lods
stc
adc
jae
jp
lcall
nop
mov
std
inc
jns
les
scas
or
rcll
mov
rorb
sbb
repz
push
fstp
xlat
push
jbe
popfw
push
push
imul
or
sbb
std
ret
popf
xor
lods
rcrb
xorb
jmp
dec
pop
pop
xchg
adc
push
sub
push
mov
js
and
cs
pop
pushf
xor
scas
int3
lahf
shlb
inc
fstl
xchg
dec
sub
xchg
lret
fistl
insl
mov
ja
dec
lock
or
inc
inc
or
fldenv
inc
sub
and
pop
xchg
daa
in
dec
in
aam
sti
jbe
insb
mov
adc
sub
pop
loopne
test
fdivrp
xchg
pop
xor
push
and
dec
outsb
aad
xchg
dec
addl
notl
xchg
mov
cmp
xchg
pushf
mov
fnsave
add
filds
orb
lods
pop
jns
cmpsl
add
mov
cwtl
cwtl
pop
test
out
adc
sbb
pusha
push
sti
loop
add
push
nop
push
fdiv
pop
jge
jge
sahf
repnz
mov
pushf
mov
nop
es
pop
inc
push
xor
jo,pt
scas
pop
pop
out
push
jg
pop
lret
add
mov
adc
dec
cmp
popa
mov
test
mov
jecxz
jp
cld
insl
imulb
je
adc
fimull
sbb
xchg
leave
dec
pop
les
sbb
lcall
mov
dec
test
xor
push
imul
or
pushf
sub
imul
pusha
test
ffreep
out
xchg
mov
scas
adc
or
stos
fsubrs
xchg
jae
rolb
jae
std
dec
push
movsl
sbb
addr16
rorb
mov
sub
rcll
push
xor
push
sub
das
ds
mov
dec
jge
mov
aad
aam
out
mov
lock
je
and
cmp
and
mov
pusha
jl
ja
les
test
data16
aad
aaa
mov
out
inc
push
lahf
add
std
movsl
aam
mov
test
sbb
dec
jae
jp
inc
sub
and
and
aad
dec
cld
loope
and
daa
adc
fnsave
add
xor
adc
or
push
fsubrl
ret
and
aad
call
jmp
call
xor
out
pop
shlb
add
insb
movsl
fcoms
cmp
cmp
fdivrs
sti
mov
jns
mov
cmpsl
aas
nop
xor
in
test
in
xor
mov
ljmp
sub
pop
xchg
push
jge
arpl
add
scas
js
arpl
nop
testl
or
enter
rcr
sub
ja
mov
adc
in
clc
xchg
jne
fidivs
call
xor
pop
out
stc
stc
add
xor
push
xchg
outsb
xor
scas
scas
popa
movsl
fs
dec
movb
es
jg
out
rorb
dec
jbe
pop
test
add
cli
pop
sbb
mov
mov
push
xor
adc
pop
push
mov
repz
pop
jp
and
push
mov
or
xchg
jecxz
and
ficomps
inc
jp
enter
xor
add
mov
and
lock
mov
subb
xor
mov
push
mov
cmpl
sbbb
xchg
add
mov
add
jnp
mov
popa
xchg
stos
xchg
xor
aad
xchg
clc
and
loope
sub
or
xchg
or
mov
add
mov
loope
jle
test
cmp
pop
nop
fnstsw
fs
mov
dec
bound
push
mov
mov
jno
adc
arpl
js
fldt
iret
stos
mov
jne
xor
lret
dec
pop
in
jg
pop
xchg
and
pop
data16
clc
shr
mov
add
dec
push
xchg
lret
cltd
sbb
sub
repz
sbb
iret
gs
leave
sti
xor
mov
test
imulb
nop
jg
aad
dec
rcr
fsub
cmp
insl
xchg
jns
and
iret
mov
add
xlat
pop
and
sbb
lcall
mov
xchg
mov
jecxz
std
inc
xchg
in
pop
sti
cwtl
sub
push
jge
adc
std
sbb
int3
sahf
and
adc
xchg
adc
daa
sbb
jae
mov
cmpsl
cmp
pop
or
ss
dec
or
gs
push
loopne
mov
clc
add
mov
cs
dec
mov
push
into
into
push
and
js
jge
loop
inc
or
test
xlat
lods
jb
push
orl
das
sub
stc
and
fistl
add
iret
ds
mov
inc
push
sbb
xchg
popa
arpl
popa
js
pop
lret
pop
sar
mov
sub
fidivs
pop
adc
nop
xchg
pop
scas
cmp
test
shrb
aaa
or
jecxz
pop
stc
je
test
scas
inc
adc
or
sub
mov
fldenv
cld
lcall
xchg
out
inc
inc
andl
sub
adc
imul
xchg
push
loopne
sarb
adc
and
lock
jne
mov
lds
push
mov
out
sarl
hlt
ficoms
xor
inc
cld
xor
jecxz
push
mov
mov
dec
xor
push
and
int3
loop
int
adc
cmpl
xchg
orl
push
sbb
pop
mov
jno
fistps
add
test
lret
lahf
fdivrs
ja
in
xor
in
dec
jo
int
and
jge
sub
nop
cs
xor
inc
inc
or
rolb
sbb
gs
cmpsl
add
dec
cltd
shrb
push
popl
push
mov
je
iret
sbb
popf
into
push
ss
sbb
out
pusha
lcall
int3
data16
inc
nop
nop
push
inc
or
mov
inc
movsl
insl
insl
push
push
addr16
leave
imul
and
fists
sbb
dec
mov
xchg
push
aam
push
xchg
lret
xchg
clc
sbb
inc
mov
hlt
xchg
fldenv
repz
iret
stos
add
popa
lods
sahf
or
popa
cli
sbb
testl
cmp
pusha
test
insb
cltd
push
dec
jp
and
inc
hlt
out
pop
lret
sub
mov
nop
test
pushf
push
out
jnp
pop
jb
sarb
mov
xchg
dec
stos
hlt
xchg
ret
das
loopne
xchg
add
stos
fmuls
mov
ret
fbld
repz
adcl
sbb
pop
mov
sbb
push
mov
out
push
jmp
mov
jge
roll
out
sub
push
fimuls
mov
loope
xchg
mov
aas
xor
and
testb
lcall
adc
inc
f2xm1
js
push
adc
xor
mov
push
push
or
jl
xor
rol
pop
inc
in
adcb
jg
mov
jb
fstl
mov
sub
push
mov
mulb
leave
add
arpl
stos
xchg
fcoml
pop
ljmp
cmp
cmp
jo
arpl
pop
xor
jge
inc
mov
aam
outsl
gs
xchg
rclb
sbb
adc
arpl
sarb
dec
int
xchg
xchg
mov
lds
sbb
xchg
dec
adc
xchg
push
xchg
cmp
sbbb
fildll
xor
push
cmp
cmc
mov
xchg
jp
out
rcr
pop
adc
int3
or
mov
cmp
leave
push
push
data16
hlt
push
sub
sub
fcmovbe
cmp
push
movsb
fisubl
pop
mov
insl
jb
mov
lcall
pop
repnz
cmp
or
push
jbe
nop
and
bound
movsl
das
sub
lock
stos
popa
je
stos
xor
pop
les
xchg
push
or
shll
mov
dec
add
mov
scas
fsub
movsl
xor
inc
stos
xchg
aam
fs
fcoml
out
inc
mov
fs
sub
jle
pop
pop
cmpsl
lcallw
daa
jo
rorb
mov
inc
xor
outsl
xchg
inc
pop
test
push
jecxz
and
sarb
push
insb
push
fwait
movsb
sbbb
or
mov
push
ja
jns
add
popf
jno
je
cld
ror
sbb
mov
repnz
add
addr16
sbb
cli
add
pop
int
sahf
hlt
sbb
ds
cmp
cld
push
or
out
in
imul
mov
mov
ret
fs
jl
add
iret
ljmp
jbe
mov
pop
int
jae
dec
or
pop
cli
fcomps
add
add
inc
lea
rorb
inc
pop
sbb
cmpsb
je
scas
lods
cmc
repnz
in
and
xor
rcrb
sub
push
xchg
xor
push
mov
insl
stc
or
inc
ja
fcoml
add
inc
pop
pop
or
imul
adc
pop
jmp
or
sarl
ret
fstpt
imul
mov
cmp
loopne
das
test
bnd
jae
mov
xlat
pop
jne
jge
xchg
fcmovnb
int3
adc
xchg
fs
jp
ror
scas
mov
mov
and
lret
pop
stc
sbb
sbb
loop
gs
negl
dec
cmp
and
faddl
push
les
fwait
sub
out
mov
xchg
xor
adc
int3
jmp
pop
lahf
into
fwait
outsl
cs
and
adc
lock
or
fistps
in
lock
in
nop
xchg
pop
int
xchg
data16
clc
jb
rol
xor
or
aad
push
arpl
push
push
jno
clc
or
sub
stos
adc
pop
out
push
sbb
std
mov
jns
out
leave
negb
dec
in
ljmp
inc
mov
mov
fucomip
cmp
movsb
daa
mov
adc
push
xor
inc
sbb
pop
xlat
nop
dec
sub
cmp
fwait
mov
inc
jae
sbb
sbb
dec
mov
arpl
out
mov
mov
lods
sahf
lahf
inc
jns
outsb
cli
cmp
mov
mov
sub
das
addr16
shlb
jmp
sub
or
sarb
icebp
dec
js
lods
jecxz
add
and
repnz
sbb
and
push
ret
mov
mov
addr16
shrl
push
je
add
mov
mov
and
jmp
dec
inc
pop
fisttpll
in
pop
fwait
ljmp
sub
add
ret
and
add
negb
xor
adc
cmp
sub
or
mov
mov
in
mov
xchg
dec
inc
xchg
sbb
bnd
mov
lea
jo
stc
adc
inc
mov
mov
mov
push
loop
mov
loopne
jg
push
je
jns
adc
push
mov
movsl
int3
mov
test
mov
cmp
mov
gs
sub
inc
sbb
pop
mov
outsl
ret
loopne
dec
jg
movsl
mov
loopne
mov
dec
or
mov
push
push
mov
ret
push
mov
mov
xor
mov
adc
or
pop
outsb
push
add
jl,pt
sti
jecxz
push
ficoml
mov
inc
in
push
rcr
cmpsb
mov
out
sub
xor
push
inc
hlt
mov
fcompl
pop
adc
xchg
test
dec
fstp
jns
or
or
jo
and
ret
addr16
mov
xchg
jge
pushf
loope
les
stos
push
xchg
std
adc
in
pop
jnp
test
jo
loopne,pt
or
mov
push
out
leave
rcr
rcr
inc
jo
cmp
pusha
sahf
clc
out
lea
or
into
xor
notb
lock
inc
aam
incl
or
jne
jecxz
jp
hlt
call
mov
repnz
xor
inc
dec
mov
pop
mov
data16
ljmp
mov
mov
xchg
jle
lods
test
dec
cmp
insl
ja
pop
xor
data16
mov
adc
xor
inc
jbe
adc
sarl
pop
negl
push
cmpsb
into
jl
add
faddp
xorl
outsl
sbb
mov
orl
jbe
aam
pop
xchg
vsqrtpd
inc
lahf
bound
rorb
dec
hlt
lods
scas
or
xor
test
iret
xchg
pop
scas
jb
pop
stos
out
cmpsl
add
mov
push
test
xor
es
mov
cs
jp
stc
mov
mov
mov
in
js
lock
test
stos
repnz
mov
xchg
xchg
jo
mov
fldl
sub
mov
jmp
mov
sbb
pop
or
adc
in
push
daa
xor
adc
enter
scas
loopne
jge
les
xchg
push
test
or
out
inc
dec
mov
lds
sbb
mov
or
ret
rcrb
fs
aas
stos
lods
sbb
dec
and
dec
push
xor
dec
inc
mov
xchg
push
ret
push
int
jns
je
push
sub
sub
jns
push
gs
jae
add
sub
ja
sub
sbb
stos
push
cmp
add
inc
call
xor
bsf
or
rcrl
jb
pop
popa
sub
rol
lret
pop
push
ret
push
adc
sub
jae
xor
add
and
es
and
cmpsl
and
lcall
inc
imul
push
dec
mov
mov
sahf
or
mov
and
outsb
ret
jns
add
out
jbe
fdiv
mov
xor
aas
out
xor
inc
int
in
in
mov
sbb
shlb
mov
addr16
sub
shll
out
loope
and
cmp
shlb
lret
xchg
jae
cmc
dec
lds
mov
rcrl
cmp
lahf
push
add
push
xchg
mov
dec
inc
std
les
and
inc
rorl
cmp
add
push
jl
aad
mov
sbb
mov
mov
add
icebp
int3
daa
shl
adc
test
sbb
outsl
addr16
ja
add
leave
xorl
pop
mov
es
sbbl
add
mov
lds
bound
pop
int3
insb
push
xor
dec
pop
lcall
add
fdivl
cmp
loope
add
inc
add
xor
std
daa
lock
cld
push
pop
mov
jecxz
int
sbb
adc
ds
popf
std
adc
xlat
mov
adc
xchg
cmp
mov
ljmp
repz
xchg
mov
int
and
push
add
pop
cmp
fstps
push
addb
adc
xchg
sbb
out
cmpb
jecxz
inc
lcall
push
mov
ja
sbb
mov
add
xchg
popf
dec
mov
adc
inc
mov
cmp
mov
pop
mov
rcl
xor
in
leave
cmp
push
pop
add
sahf
inc
jae
push
insl
cmp
push
dec
xchg
sbb
mov
imul
push
imul
mov
or
in
sub
add
in
and
lds
and
lods
jne
ss
fcmovnu
pop
addr16
add
icebp
add
in
out
xor
lds
mov
fcmovbe
xchg
mov
xchg
jne
jle
pop
mov
jb
mov
movsl
push
nop
dec
or
cld
xchg
test
lock
jmp
inc
int
mov
lea
into
mov
nop
push
outsl
push
mov
leave
int3
shrb
movsb
rcl
scas
mov
movsl
lock
push
mov
cmp
pop
je
inc
push
aad
inc
cwtl
subl
out
lcall
cli
pop
addr16
add
sub
sbb
mov
hlt
push
stos
or
sub
popa
push
xor
test
pop
jmp
cmpsb
add
mov
push
jb
xlat
xor
das
movsb
movsb
clc
cs
cmp
outsb
sub
cmp
jl
or
xor
pushf
mov
inc
into
or
ret
dec
sbb
and
sub
scas
cmp
out
sub
lock
dec
scas
cmp
add
jl
mov
cmp
add
push
fs
popf
lret
mov
bound
stos
es
pusha
pop
cmp
jae
dec
and
or
xor
push
fwait
loopne
dec
lock
push
sbb
sub
inc
es
cmpsb
cltd
fsubp
pop
es
mov
into
fiadds
lret
mov
out
xchg
and
je
stos
dec
xchg
or
cmp
push
call
jmp
out
dec
int3
fcmovnbe
xchg
jp
scas
stos
mov
rcr
or
leave
cmc
adc
cmp
mov
push
push
pusha
scas
mov
add
jbe
mov
inc
push
stc
inc
push
pop
imul
imul
add
adc
js
jmp
in
loopne
lret
cmp
fcoms
jg
and
mov
xchg
iret
fistpll
dec
inc
cmp
mov
push
mov
stos
mov
out
xor
mov
fbld
cmp
and
mov
sbb
jno
sub
imul
bound
pop
jb
mov
aas
sbb
push
arpl
jns
ds
movsb
nop
push
call
enter
mov
loop
repz
ret
mov
out
add
xor
and
mov
sub
js
leave
jbe
sub
lea
lcall
xchg
imul
lret
stc
mov
jo
jno
jl
in
or
jmp
test
cwtl
xor
or
mov
lcall
repnz
nop
xorb
lock
dec
or
sbb
mov
push
mov
cmp
push
jne
push
or
jne
imul
jb
lret
cmp
dec
xchg
idivl
jmp
jmp
fistpl
push
clc
add
dec
xorl
setp
in
mov
xchg
hlt
sbb
outsb
cltd
fs
enter
or
lret
iret
pop
cmp
sbb
dec
jl
xor
fistl
inc
movsl
xchg
outsb
imul
dec
mov
aas
jmp
shl
scas
icebp
cmp
sbb
and
xorb
movsl
lcall
sbb
fistps
fldl
push
jne
sti
xor
sbb
data16
xchg
inc
xchg
loopne
xchg
push
lret
mov
mov
jbe
xchg
imul
call
icebp
and
aas
sbb
ret
inc
jp
out
dec
cmp
lret
jo
fcoms
push
xorl
or
xlat
sbb
mov
inc
aam
shlb
cmp
xor
out
dec
ja
push
cmc
rcll
dec
nop
leave
mov
rcrb
adc
adc
mov
add
jo
dec
mov
les
in
dec
test
jp
insb
subb
pushf
xchg
and
xchg
mov
lock
cli
xchg
imul
das
xor
roll
cmp
and
push
aam
sub
dec
adc
test
lds
outsb
cs
cmp
js
stos
mov
sub
mov
gs
icebp
cmp
shrb
pop
cmp
adc
jg
mov
out
arpl
or
lods
push
dec
outsb
orl
pop
and
test
idivb
cli
adc
inc
xor
jg
mov
dec
push
jl
daa
imul
fstl
je
test
mov
xor
jl
insb
fsubs
pop
dec
test
loopne
push
adc
aad
pusha
inc
aad
shlb
rcr
lock
sbb
xorl
mov
sub
in
xchg
psubusb
loopne
xchg
icebp
push
pop
lret
fdivrs
icebp
sub
sub
mov
and
repnz
test
test
cmp
jg
testb
sbb
or
loopne
outsb
in
push
inc
push
mov
popa
jle
ds
mov
leave
shl
das
mov
fdivrl
sub
mov
add
icebp
xchg
rcl
and
and
ret
sub
loop
or
jno
fistpl
cld
data16
je
cld
mov
daa
xor
ds
out
mov
inc
jge
mov
sub
clc
add
lret
std
adc
les
adc
ret
sbb
jnp
xor
mov
xlat
in
jge
testb
dec
jne
cmp
in
cmp
ret
iret
fxch
inc
movsb
insb
mov
push
enter
imull
jle
int
cld
or
mov
movsl
mov
pop
fldl
cs
or
inc
jl
fisubl
add
xchg
cmp
mov
mov
out
imul
mov
xchg
inc
data16
test
insl
sbb
stc
repz
adc
sti
push
jbe
loop
loop
adc
mov
inc
insb
sub
fstpl
mov
pop
pop
mov
push
cli
fidivl
jmp
mov
loope
xchg
pusha
or
add
mov
aas
sbb
mov
shrd
xor
iret
inc
cs
mov
or
fiadds
fistl
push
mov
ret
rcll
inc
cmp
loope
inc
sbb
pop
leave
imul
adc
pop
add
jbe
push
add
fnstenv
aam
jae
and
test
gs
lods
cmp
ja
mull
and
aas
jo
push
imul
sahf
hlt
adc
fwait
xlat
pop
inc
cmp
aaa
pop
imul
out
les
std
sbb
stc
jl
out
pop
mov
mov
mulb
lock
xchg
fdivrl
pop
popa
xor
cmp
mov
mov
aas
xchg
iret
nop
aam
mov
lahf
inc
cmc
dec
sti
aaa
mov
fimuls
ljmp
dec
xchg
leave
lea
les
push
js
push
mov
jg
repz
lods
pop
cmpsl
cmpsl
pop
andl
call
sub
cmp
xor
mov
pop
xchg
jle
lcall
lds
dec
push
loope
in
loop
je
daa
push
add
stos
pop
fmuls
fwait
sbb
in
insb
iret
repz
icebp
lea
sbb
mov
nop
movsb
iret
push
dec
mov
mov
cmp
cmc
push
popf
and
les
jne
out
cmpsb
xchg
lds
inc
nop
outsl
inc
hlt
ss
je
mov
sbb
mov
lret
xor
hlt
mov
sub
mov
pop
xor
push
nop
pop
sub
idivl
jle
or
loopne
std
scas
je
push
pop
push
inc
mov
cli
cld
xlat
pop
inc
cmp
dec
pop
sbb
idiv
stos
lock
add
cs
add
mov
jl
out
pop
xchg
push
mov
push
rorl
cmpl
pop
lcall
jae
sbb
loop
int
and
or
int3
jae
pop
nop
xchg
push
xchg
sahf
adc
popf
mov
shll
sarl
rcrb
bound
jp
fists
sahf
cs
xor
fsubrs
nop
xor
daa
inc
cmpsl
push
test
flds
imul
int
icebp
popa
adc
iret
stos
fs
fbstp
xchg
push
daa
xor
cltd
and
jg
mov
xchg
repnz
push
stc
lcall
movsb
jnp
cli
and
xchg
fisubrl
pop
xchg
in
xchg
sbb
loope
in
pop
test
push
fst
outsb
std
mov
mov
or
call
lret
int3
loope
jb
repz
sbbb
andb
testl
in
push
pop
call
fiaddl
jns
pop
add
sub
lret
or
adc
out
dec
push
sbb
ret
or
mov
and
lods
push
ficoms
lret
mov
mov
bound
test
pop
repz
jo
ss
and
repnz
pop
lret
and
push
dec
jnp
les
xor
or
test
jb
in
cmp
mov
fmull
sub
adc
adc
mov
setns
pop
mov
jl
lea
out
xor
cltd
or
pop
lahf
dec
cmp
pop
stos
icebp
xchg
and
push
aaa
push
cwtl
cmp
ficoms
mov
push
lods
mov
mov
orl
mov
mov
movsl
mov
sbb
mov
xor
push
insl
or
and
cmp
pop
inc
xor
adc
mov
inc
jl
fdiv
pop
movsb
sub
pop
int
inc
call
cmp
push
lcall
aaa
ds
repz
add
sbb
in
popf
push
repnz
js
pushf
ss
dec
or
cmc
lahf
in
sbb
cmp
or
pand
insl
subl
mov
sub
push
addb
add
arpl
xlat
xchg
sete
ret
xchg
pop
in
pop
jns,pn
ljmp
clc
sub
aaa
addr16
rdmsr
jecxz
mov
lret
cmc
fcomps
sbb
dec
adc
aad
int3
rcrl
scas
sbb
addr16
jecxz
rorl
adc
push
mov
aaa
jge
popa
or
xchg
imul
or
pusha
or
xor
rcrb
push
cmpsb
add
jno
test
xor
adc
addl
cmp
mov
or
iret
xchg
popf
sub
aad
or
and
pushl
xchg
ffreep
ljmp
outsb
cmpsl
xchg
test
and
jg
into
arpl
and
test
dec
cmp
lret
and
lock
sbb
mov
lods
pop
imul
rorb
mov
leave
sbb
gs
stos
pop
mov
cmpb
xor
lret
cld
or
mov
jbe
fmull
repz
hlt
mov
test
dec
test
inc
inc
scas
vpmadcsswd
cmpsb
int
pop
mov
adc
mov
mov
outsl
jbe
jl
shrl
scas
jp
adc
lods
mov
push
mov
cmpsl
cmpl
and
pop
cmp
jnp
cmp
inc
cmp
or
pop
in
pop
fdivrl
leave
xchg
fdivl
dec
xor
xlat
push
lcall
jns
push
pusha
insl
aaa
repnz
xor
nop
sti
cmp
gs
pop
popa
insl
add
fistl
daa
xchg
ja
mov
aaa
mov
lods
test
mov
and
sti
mov
addb
imul
ljmp
negb
jbe
pop
insl
jnp
and
jp
sub
push
cmpsl
cli
mov
iret
dec
notb
push
fildl
scas
add
cld
flds
out
das
lock
stc
sub
lods
iret
popa
fs
cltd
or
fmull
out
bound
hlt
shlb
mov
or
adc
shrl
aad
scas
icebp
shlb
jne
shlb
mov
test
push
sahf
and
std
jmp
pop
push
popf
loop
adcb
jmp
jnp
out
adc
std
jne
arpl
aad
pop
dec
subl
clc
or
add
xor
loopne
ficoms
lea
pop
dec
dec
roll
sbb
lods
cmp
xchg
and
test
pop
push
jge
and
iret
js
cmp
mov
sbb
mov
mov
movsl
sub
cmpsl
fbld
lahf
push
ret
out
cltd
imul
or
adc
sbb
in
sub
push
dec
inc
loope
cwtl
ja
jmp
hlt
jbe
shrl
and
sub
mov
inc
out
push
push
fsubr
xchg
fildl
into
out
repnz
xchg
dec
dec
inc
pushf
jno
cwtl
lds
mov
bsf
outsb
in
push
cltd
daa
cli
and
sbb
cmp
add
repz
push
cmc
xchg
cmc
inc
les
or
mov
mov
fiaddl
jle
in
jge
adc
mov
add
add
notb
sbb
jnp
mov
sbb
or
lods
outsl
addb
xor
divb
ret
cwtl
aam
cmpsl
adc
xchg
dec
inc
loop
add
dec
popf
push
push
dec
push
cmp
in
iret
in
loopne
aaa
adc
ja
cmp
ljmp
adc
loopne
adc
inc
aaa
icebp
rolb
jle
pop
lods
sbb
mov
mov
push
xchg
sahf
push
adc
or
xor
xchg
lahf
cmpsb
sub
scas
leave
cwtl
cld
mov
mov
xchg
outsl
pop
lret
out
call
push
scas
fisttps
jb
cltd
inc
push
add
shlb
jl
jmp
xchg
jp
inc
dec
sub
jo
dec
cltd
std
push
ss
nop
mov
adc
or
adc
mov
incl
lock
aaa
testl
lcall
lcall
dec
daa
loopne
push
push
dec
shlb
mov
xchg
loope
push
xchg
pushf
pop
mov
imul
push
xchg
dec
test
lods
mov
lea
or
xor
sti
cmp
lock
sub
test
nop
sbb
mov
xor
movsl
je
addr16
inc
loop
xlat
ret
adc
pop
movsb
test
or
xor
and
aam
pop
into
xor
ss
lods
mov
popa
subb
inc
das
add
pop
in
push
cmp
icebp
mov
pop
inc
push
dec
jp
addr16
dec
mov
adc
or
or
xchg
sbb
jno
push
mov
mov
mov
out
mov
jg
jge
push
stos
mov
mov
mov
or
int
mov
mov
nop
test
out
inc
leave
mov
xchg
std
movsl
pop
adc
hlt
add
test
mov
inc
pop
int3
add
lret
lahf
insl
outsb
mov
test
sti
fwait
nop
addr16
jge
fidivrl
mov
je
jnp
push
dec
lcall
jns
fisubs
movsl
popf
xchg
and
les
push
mov
jmp
dec
push
cmpsl
inc
xor
xchg
out
test
jp
jmp
pushf
jbe
or
lock
inc
mov
cmp
dec
ja
mov
daa
pop
es
push
bnd
mov
setl
addb
jns
frstor
mov
sahf
pop
mov
aas
jecxz
aaa
jge
aam
out
mov
nop
push
cmovl
dec
sub
xor
jno
in
cmp
leave
fnstcw
call
dec
push
mov
and
push
test
subb
insb
mov
or
inc
push
xor
iret
sub
push
cmp
sub
std
sub
or
cmp
xor
jp
inc
pop
mov
int3
push
and
mov
aam
mov
jo
jl
push
lea
cmpsb
out
or
jl
ret
add
fstps
mov
xchg
or
mov
pop
inc
sub
test
mov
loop
ret
mov
into
or
or
sbb
bound
cmp
push
xor
in
mov
or
nop
in
pop
stc
push
mov
out
sub
jp
sbb
mov
mov
into
jl
xor
sbb
int3
pop
out
push
test
nop
and
movsb
xor
sub
leave
sbb
or
in
pop
fnstcw
mov
mov
sub
push
mov
pop
jge
aas
aaa
iret
enter
pop
cmp
xchg
jl
push
sarl
in
mov
xchg
scas
cmp
ss
arpl
inc
movsb
and
cwtl
ss
jns
lahf
adc
push
test
and
ficomps
fcmovu
cmp
mov
scas
sbb
rcrl
jmp
sub
enter
lods
lret
sub
and
xor
push
movsl
xor
mov
outsl
inc
adc
pop
xchg
and
gs
int
lds
jae
push
add
jmp
addl
mov
xor
pop
es
add
pop
lea
pop
negl
repz
jp
into
gs
fsubrl
push
add
sbb
pop
adc
pop
pop
pop
rolb
adc
orb
add
hlt
loope
movsl
sbb
pop
adc
bound
ljmp
addl
stos
push
push
mov
shrb
into
retw
ror
jae
xchg
and
jecxz
lret
outsb
sub
push
cmp
add
pusha
inc
out
ja
outsl
or
inc
test
lret
loopne
gs
dec
dec
rcl
jb
loope
clc
xchg
mov
sub
add
rorl
push
mov
xor
ret
or
sub
out
ret
movsl
xlat
add
xor
dec
test
imul
or
dec
jmp
push
call
push
ret
out
pop
inc
cli
xchg
push
sysret
xor
sahf
sbb
out
mov
or
mov
mov
xor
jp
gs
mov
push
mov
mov
lahf
mov
jp
popl
jg
xor
xor
jb
cmp
mov
ret
test
fiadds
push
jge
jae
xchg
and
lcall
push
inc
inc
rol
data16
pop
push
ret
test
mov
stc
int
push
lret
ret
mov
mov
int
pop
sbb
xchg
mov
dec
pop
repz
daa
stos
or
pushf
movsl
mov
inc
and
or
aaa
loop
std
or
adc
jmp
push
rolb
sbb
mov
shrb
xor
and
jnp
fidivs
mov
addr16
call
ljmp
scas
and
jbe
xchg
enter
daa
sbb
fwait
jae
xlat
pop
lock
add
jae
addr16
sbb
std
or
rorb
imul
nop
push
jns
and
arpl
mov
stos
push
cs
cmp
adc
xor
lret
sarl
int3
arpl
stc
mov
mov
out
cli
adc
mov
ret
push
sub
fstl
dec
out
lahf
sub
stos
jae
aad
cs
pop
push
int
imul
imul
xchg
das
movsl
mov
mov
sahf
xor
mov
mov
aaa
push
jmp
lcall
ss
aas
ss
pop
add
push
push
cmpsb
sbb
mov
push
aam
dec
dec
in
test
aaa
cmc
inc
sarb
movsb
or
xchg
je
dec
fbld
mov
cmp
xchg
inc
dec
imul
or
nop
es
pop
rcrl
jg
xor
pop
out
lret
mov
sbb
pop
and
cmc
sbb
dec
mov
pushf
mov
sbb
icebp
shll
in
mov
shlb
test
out
lret
ret
mov
jecxz
sbb
inc
or
dec
cmpsl
mov
mov
cmp
ja
in
push
push
popf
adc
sub
shll
ret
jle
xchg
pushf
nop
dec
xor
inc
push
fnstenv
aas
jbe
in
insb
jge
icebp
add
jns
addr16
inc
sub
push
ficomps
fidivrs
fsubr
loop
dec
fildll
imul
test
mov
test
or
das
arpl
adc
mov
adc
outsb
push
xor
sub
mov
loopne
das
loop
inc
mov
sti
shlb
push
dec
mov
sbb
out
fs
inc
lods
popa
cmpb
push
lea
add
stos
lcall
xchg
jmp
js
add
lods
jo
icebp
inc
mov
ficoml
mov
mov
adc
pusha
push
cmp
push
in
add
lock
pop
cmp
or
fwait
dec
pushf
inc
and
std
addr16
push
iret
inc
push
test
sub
dec
pop
jecxz
cmp
push
mov
bound
xor
loopne
add
inc
stos
xchg
mov
clc
mov
hlt
pop
jae
scas
es
call
fidivrl
cmpb
cmp
out
add
mov
dec
stos
mov
addl
push
mov
hlt
sbb
mov
out
sub
lods
cmp
cmp
std
cmp
movsb
std
mov
inc
mov
pop
cmpsb
xchg
insb
orb
lret
add
adc
xchg
inc
mov
jge
jp
mov
ret
pop
push
lcall
notl
ja
testl
jle
and
mov
fstp
popa
into
jno
pop
lret
jbe
sub
add
jp
jmp
mov
inc
and
cmpsl
or
fs
mov
rolb
movsb
adc
lret
fdivr
xchg
movsb
les
imul
orl
cmc
fucomp
xchg
or
out
cmc
pop
inc
leave
jo
push
push
leave
add
cmp
fsubrl
shl
fisttpl
adc
fwait
lock
or
sub
ja
fimull
fs
sub
hlt
cltd
addr16
add
ljmp
mov
imul
cmpl
push
pop
xor
lods
or
adc
ficoml
in
out
pop
jns
pop
or
int
xchg
fstp
sub
int
stos
dec
pop
pop
psubq
dec
cmp
mov
add
add
lcall
test
add
shll
gs
xchg
adc
aam
pop
mov
cli
jecxz
sbb
sarb
push
mov
jl
lret
mov
dec
dec
out
xor
stc
stos
leave
push
in
rolb
jecxz
dec
jp
fstpt
and
daa
nop
add
xchg
dec
dec
sti
stos
fwait
cmpsl
xlat
test
dec
mov
inc
sbb
mov
or
or
mov
xchg
dec
into
mov
jb
lock
stos
or
jp
push
mov
nop
add
mov
mov
jb
mov
aas
pop
aad
dec
add
faddp
inc
mov
or
ljmp
fildl
sbb
push
js
jg
stos
popa
test
sub
xor
cs
inc
xchg
mov
jg
loop
mov
incl
decb
mov
adc
pushf
out
jp
inc
push
loope
mov
fmull
add
dec
testl
out
or
mov
jmp
add
dec
scas
lcall
fimuls
shrb
mov
xchg
ret
jne
shlb
mov
not
in
add
jne
lahf
sub
pop
aas
jp
push
arpl
dec
cmp
ss
push
in
mov
dec
sahf
or
rol
mov
je
mov
aad
push
cli
mov
call
mov
mov
adc
dec
mov
dec
push
inc
cwtl
sub
jp
mov
fwait
jge
adc
mov
pop
sbbl
dec
inc
xchg
mov
xchg
int
daa
xor
sbb
mov
fldenv
dec
das
rorl
imul
test
push
sti
xor
push
jne
sub
imul
sub
fistpll
dec
xor
xchg
sub
call
jmp
clc
loopne
sti
push
lret
aaa
sbb
lea
push
dec
sbb
pushf
lods
or
insb
in
cmp
iret
ss
mov
dec
clc
test
ret
cmpsb
adc
pop
decb
cld
cmp
sbb
pusha
pop
sbbb
xchg
and
fdivr
inc
leave
cwtl
out
push
subb
ss
pusha
int
xchg
fstpt
loopne
mov
popf
daa
pusha
dec
pop
cwtl
fsubs
stos
inc
es
lahf
fs
loopne
scas
stos
jne
jne
pop
jecxz
inc
jmp
add
in
xchg
mov
cmp
pop
sar
outsb
mov
insl
repz
mov
aam
xor
aaa
lahf
in
mov
mov
rolb
in
in
mov
leave
pop
mov
xchg
xchg
cmc
test
cltd
push
push
ljmp
dec
jg
jns
or
pop
xchg
add
mov
cwtl
int
adc
aaa
cs
xor
mov
xchg
adc
jl
in
and
push
pop
mov
ret
int3
sarb
rorl
jg
orb
adc
lds
lahf
mov
cmp
and
out
cmp
xlat
cmp
push
shlb
xchg
repnz
mov
repz
sub
mov
out
pop
ja
adc
sbbb
mov
pusha
push
xchg
dec
jg
gs
inc
add
jno
cs
jbe
push
scas
mov
int
cwtl
add
jbe
sub
aas
cmp
test
fcomip
cs
ret
fcomip
push
push
cltd
imul
inc
insl
lods
inc
rclb
adc
add
arpl
es
add
xlat
pusha
sub
psubsw
aad
push
ljmp
fstps
cmpsl
xchg
push
jmp
jne
fs
dec
add
mov
ret
sub
clc
popa
adc
inc
add
fcmovbe
push
std
fildll
test
sub
cmp
sbb
sub
fcmovnbe
movsb
add
or
js
jge
cmp
gs
sbb
outsl
lock
stos
out
mov
and
in
push
xchg
jge
lds
xor
jle
xchg
xor
jae
push
aas
cmpl
in
jge
ja
repz
mov
pop
lods
xchg
movsb
clc
jbe
into
stc
in
gs
mov
push
pop
rcr
pop
cmp
mov
cld
mov
inc
lret
aaa
mov
sub
sahf
dec
adc
cs
idivb
mov
inc
or
mov
adc
sti
mov
push
pop
movsl
addr16
scas
mov
aaa
xchg
out
mov
sub
or
aad
std
out
cmp
rcll
idivl
je
push
cmp
inc
pop
adc
in
xchg
adc
mov
out
in
xor
stos
ret
sbb
or
adc
out
sub
fistpl
pop
xchg
sub
push
scas
push
loop
out
and
insb
add
cltd
fnsave
jae
jmp
mov
rolb
bound
pop
lods
andl
and
inc
loop
shrb
sbb
cs
inc
mov
jmp
pop
outsb
daa
sub
push
scas
xchg
jo
movsb
andps
fstpt
xor
ss
and
mov
dec
push
in
dec
or
adc
sbb
pop
adc
mov
gs
je
loope
sub
leave
push
jbe
sbb
xor
in
xchg
nop
jne
sbb
repnz
mov
or
in
ds
mov
and
std
dec
xchg
mov
sbb
gs
cmpl
adc
addl
ret
cmp
mov
adc
dec
jp
aaa
jnp
test
test
lahf
or
les
pop
fxch
push
scas
loop
adc
pop
js
inc
push
js
add
xlat
mov
mov
int
jp
and
mov
in
dec
ljmp
enter
inc
jecxz
adc
stos
sbb
in
dec
jp
xorb
mov
jb
testb
xchg
pushl
xchg
pop
idivl
push
xchg
sub
in
inc
fildl
aas
xor
adc
outsb
push
outsb
out
outsl
in
lcall
std
mov
loop
sub
mov
or
hlt
fsubl
sub
in
fistl
lcall
lds
sub
add
inc
mov
add
or
dec
push
jae
jnp
imul
push
rolb
xchg
and
mov
push
ds
xor
inc
aad
push
xchg
shlb
call
sbbb
mov
xchg
mov
adc
ret
stos
dec
repz
sbbl
and
jmp
ljmp
cmp
add
dec
pushf
inc
xchg
jne
add
mov
pop
dec
xor
rcrb
inc
jle
mov
iret
lea
mov
jl
leave
les
int3
in
call
imul
and
push
cmp
rcr
add
inc
inc
das
ror
nop
lahf
cmp
clc
xchg
out
xchg
out
lret
adc
pop
mov
inc
push
dec
ret
loopne
jbe
xchg
pop
pop
data16
int3
push
mov
cmp
nop
fs
clc
inc
mov
lahf
shlb
iret
sub
jb
add
mov
xchg
arpl
test
jae
ljmp
pop
imul
jle
xor
adc
adc
testb
cmpsb
bound
and
and
and
sarb
mov
lcall
xchg
cmp
xchg
ffree
pop
test
lret
rol
jmp
jl
inc
lret
lret
pop
into
dec
inc
xchg
lock
orb
mov
dec
add
jecxz
jnp
pop
inc
sbb
dec
outsl
out
ret
and
out
and
dec
mov
mov
jno
push
pop
inc
xor
bound
mov
cs
fwait
pop
fabs
or
js
es
popa
nop
inc
fdivl
or
or
xchg
pop
dec
fsubrp
mov
jmp
jp
mov
dec
icebp
jp
pop
aam
ds
jl
adc
dec
bound
sbb
and
sbb
aad
mov
scas
popa
pop
mov
outsb
add
lock
jl
in
les
leave
mov
mov
mov
mov
je
mov
dec
inc
das
aaa
jle
cmp
jle
pop
xchg
sahf
push
mov
mov
push
dec
sub
sbb
pop
test
sbb
fsubl
sub
mov
xor
jmp
aad
or
testl
pop
pop
mov
and
add
jbe
mov
and
out
dec
ljmp
aad
add
lahf
popf
inc
pop
pop
mov
call
jp
daa
mov
mov
addr16
sub
mov
jge
mov
xchg
test
inc
and
leave
mov
or
out
cwtl
pop
adc
shrb
or
inc
cltd
fstpl
sub
icebp
insl
inc
sub
xchg
lods
test
sbb
in
in
incb
enter
add
stos
xor
fwait
push
add
mov
fbld
mov
movsb
ror
push
push
push
pop
sub
sub
cmp
push
test
rcll
push
jl
xchg
in
xchg
pop
ret
movsl
std
leave
es
mov
push
out
xlat
inc
sub
fnstsw
xchg
aas
mov
mov
and
pop
pop
pop
mov
sarl
cmpb
or
and
sti
ss
inc
in
scas
sbb
clc
xchg
dec
cltd
push
sti
bnd
flds
mov
iret
push
fnsave
push
ret
lcall
sub
add
mov
mov
xor
in
fldenv
cltd
in
xchg
insl
xor
cmp
push
or
loope
xchg
inc
insl
insb
mov
das
std
scas
jne
test
scas
mov
pop
idiv
mov
jbe
mov
sbb
mov
aaa
xchg
push
in
subl
lahf
push
lcall
mov
mov
push
stc
pop
dec
out
adc
sbb
call
xchg
mov
scas
push
jle
sar
fs
pusha
lds
jne
xor
mov
or
xor
andl
xchg
pop
pop
adc
sub
inc
in
enter
sbb
dec
inc
test
cmc
mov
sub
mov
push
pushf
push
cld
pop
pop
xor
or
lods
testb
dec
xchg
jmp
jne
test
pop
push
or
adc
or
or
mov
push
and
push
xchg
push
push
jae
inc
add
jge
cmp
and
jl
sbb
lock
dec
and
repnz
shlb
mov
push
es
mov
scas
mov
bound
in
jmp
repz
sarl
mov
xchg
pop
negl
xlat
pop
push
sbb
rorl
cmp
cmp
dec
call
lods
push
movsb
mov
mov
test
jo
mov
sub
sub
repz
mov
inc
jns
xchg
mov
dec
scas
pop
xor
cmp
fsubrs
pop
outsl
push
std
xchg
adc
pop
fnstenv
and
push
cld
cmp
jbe
pop
cmpsl
push
jp
aas
mov
xor
sbbl
decl
sti
xchg
mov
lahf
xor
add
movsl
sbb
subl
sub
jns
or
jb
imul
inc
mov
mov
std
test
xor
insb
dec
push
dec
cltd
ss
jno
aad
jbe
es
ret
mov
or
jp
mov
loope
mov
data16
cmp
pop
insb
lret
mov
inc
adc
ffree
adc
or
dec
mov
lcall
inc
addr16
mov
fwait
subl
cld
pop
rcrb
mov
popf
insl
into
mov
fcomps
leave
jg
cmp
pop
ror
addr16
dec
subl
mov
push
sbb
ret
mov
mov
xchg
jp
mov
push
adcb
sbb
jecxz
xorb
dec
mov
cld
mov
inc
dec
pusha
inc
sbb
movsl
mov
or
rorb
jle
mov
mov
pop
add
faddl
sub
mov
negb
dec
sub
dec
mov
cli
mov
xchg
sbbb
int
pop
adc
iret
push
aam
pop
xor
push
jg
pop
lret
mov
sub
mov
jp
sbb
cmc
jnp
loop
cmp
cmpsl
cmp
les
or
mov
movb
andl
gs
inc
inc
sbb
das
inc
sub
pop
pop
adc
cltd
push
mov
out
jne
ss
ss
mov
mov
shlb
loopne
pop
mov
adc
inc
shr
xchg
fcoml
cs
push
cwtl
cmp
loop
jbe
inc
popf
mov
jnp
faddl
lcall
sarb
dec
testb
pop
inc
out
mulb
xchg
push
movsb
dec
mov
pop
jp
sbb
push
add
xchg
ret
push
jno
hlt
mov
dec
call
fidivl
fwait
pop
je
mov
ja,pn
enter
jge
les
or
mov
hlt
inc
sarl
pop
daa
ljmp
add
nop
ljmp
mov
sbb
mov
dec
test
imul
test
insb
sbb
xchg
add
bound
fmuls
and
bound
icebp
push
cmpsb
ja
jbe
jbe
lea
xchg
ljmp
mov
data16
sbb
and
push
iret
cltd
gs
or
and
mov
dec
push
out
pop
addl
ret
fnstenv
out
gs
dec
movzbl
ret
mov
notl
sbb
loope
pop
scas
mov
mov
jp
jl
rep
mov
pushf
mov
ss
and
test
push
outsl
pop
scas
add
rorl
adc
movsb
sbb
fildl
cmp
cmp
ss
xchg
adc
fisubrl
sbb
adc
dec
fisttpl
pop
sti
addr16
lock
mov
and
fisubrl
inc
mov
inc
sub
add
sub
push
mov
mov
mov
in
and
loop
lds
fcoml
add
xchg
jns
mov
lahf
xchg
fstps
adc
xchg
stos
and
imul
gs
jge
mov
inc
jl
mov
popf
sub
add
xchg
push
xchg
jnp
sub
enter
dec
sub
and
sti
mov
jne
mov
inc
in
sub
jecxz
icebp
cmp
roll
mov
ret
pop
jae
dec
sbb
pop
xlat
inc
xlat
mov
add
arpl
es
jmp
push
lea
jbe
std
mov
pop
pop
enter
testl
into
test
test
inc
decb
jmp
lcall
andb
and
xor
sbb
hlt
cmc
sti
popa
stos
out
pop
lock
mov
enter
lods
lods
pop
gs
scas
cmp
add
lcall
mov
aad
mov
mov
mov
mov
test
mov
or
paddusw
pop
aas
xchg
addr16
mov
lret
jle
or
inc
jae
pop
int
out
xchg
sbb
nop
fs
fnstenv
sbb
xor
lea
xchg
in
xorl
push
loop
sahf
sbb
fldenv
fnstsw
into
xchg
push
cmpsb
out
or
fcmovnbe
add
add
mov
fs
xchg
inc
push
pop
in
ljmp
pop
mov
insl
sbb
or
xchg
rclb
imul
xchg
ficompl
xlat
jp
fcmovnbe
pop
adc
jp
jmp
testl
shrl
add
gs
mov
cmpsb
xor
sub
add
mov
popa
rorb
inc
mov
mov
mov
scas
xor
repz
mov
mov
mov
out
daa
push
sbb
inc
gs
test
sbb
or
loope
push
iret
sub
cmp
mov
xchg
cmp
pop
and
mov
push
mov
push
pop
mov
stc
in
aad
out
mov
cmp
clc
hlt
or
jp
xchg
and
cmp
out
lcallw
inc
pop
add
out
dec
cmpsb
sar
mov
mov
add
add
nop
aas
xor
leave
cmp
rolb
shrl
mov
xor
mov
inc
cmp
iret
negb
negb
mov
js
insl
push
stos
inc
xchg
or
test
dec
arpl
stos
jmp
dec
jnp
mov
bound
lcall
push
cmp
mov
fcmovne
mov
sub
inc
lret
mov
data16
shlb
cmp
or
adc
and
das
loopne
repz
cmp
mov
or
mov
pop
cmp
sub
pop
mov
out
in
push
cli
out
add
loopne
js
xchg
lds
shll
jge
and
and
fstl
inc
xor
rcr
int3
movsl
add
xlat
fs
scas
daa
mov
jo
push
cltd
or
ja
and
loope
mov
mov
test
nop
daa
inc
add
push
cmp
out
lret
rorl
data16
addb
jns
jp
and
pop
mov
in
std
fdivrl
lahf
jecxz
mov
repz
adc
out
std
in
sub
cmp
push
and
xor
arpl
mov
stos
cld
xchg
adc
test
stos
fmull
jge
push
jle
mov
out
pop
inc
jne
out
cmc
xchg
pop
lret
mov
scas
stos
fisttpll
data16
scas
sahf
mov
xchg
in
jb
test
dec
pop
data16
loopne
les
bound
in
repz
es
int3
lret
pop
arpl
lahf
mov
movsb
imull
and
or
jae
sbb
push
push
es
xlat
insl
xchg
fidivs
push
mov
imul
sar
xchg
cmpsl
mov
mov
cwtl
jl
iret
xchg
pusha
cmp
add
pop
daa
test
js
rol
lahf
mov
mov
xchg
jbe
xchg
movsb
lods
xor
imul
lods
movsl
push
ja
push
pop
test
js
pop
fimull
in
in
dec
push
sarl
inc
mov
repz
and
fcmove
push
push
test
ljmp
mov
jecxz
fistpll
cmp
inc
stc
rcll
leave
fisttpll
in
enter
sub
test
xor
adc
pop
sub
aaa
cwtl
jnp
mov
adc
or
pusha
push
fwait
scas
inc
cmpsl
stos
rol
addr16
enter
jle
enter
xchg
cmp
push
sbb
testb
jp
gs
add
jmp
test
mov
aam
xchg
shl
cmp
jecxz
icebp
fdivrs
mov
dec
clc
or
pop
mov
lahf
jb
jp
pop
jo
jle
jg
sbb
lds
dec
shl
fwait
mov
push
add
mov
jg
jle
adc
mov
fiaddl
loope
enter
std
inc
mov
mov
push
inc
jle
sbb
cld
jg
jns
ret
fsts
test
gs
pushf
add
push
jge
and
cltd
mov
lcall
clc
inc
mov
xchg
mov
notl
add
jecxz
flds
fdivl
das
lds
cmp
sbb
pop
push
test
js
push
incl
sbb
addb
push
cmpsl
cmc
insl
inc
xchg
loopne
into
push
cmp
jns
lret
xchg
mov
out
inc
inc
test
xlat
inc
cmp
aaa
movb
daa
sti
subl
dec
lds
scas
push
sbb
test
sub
stos
sub
cmpsl
inc
xchg
xchg
shll
jb
push
jnp
mov
je
xor
add
inc
insl
sub
out
xchg
mov
sub
rcrb
xlat
mov
int3
fsin
popl
imul
dec
cwtl
out
ja
cmp
mov
iret
dec
pop
fistpl
xchg
xchg
mov
int
sbb
aas
sub
enter
lods
fildl
sub
insl
sub
stos
or
addb
xor
or
stos
jnp
and
jle
roll
dec
pop
divb
je
in
mov
notb
fwait
inc
adc
out
pop
cmp
cmp
pop
mov
ret
insb
xlat
add
mov
xchg
cmp
lods
filds
divb
dec
gs
mov
mov
add
cwtl
popf
mov
insb
out
ret
test
lods
mov
mov
fistpl
fs
in
ss
dec
xchg
aad
sarb
adc
xor
aas
sbb
stc
jns
subl
jle
jl
out
jecxz
push
pushf
xor
xchg
jl
leave
setno
push
and
pop
inc
inc
mov
lods
mov
shr
imul
xchg
xchg
mov
mov
jbe
dec
add
jg
cmp
jne
xchg
jmp
xor
hlt
mov
sub
mov
jne
xchg
fucomp
ljmp
mov
jp
out
add
xadd
fsubl
mov
push
repnz
sub
rorb
mov
loope
outsl
aaa
notl
es
in
push
out
imul
cmp
xor
scas
sub
aaa
out
ss
pop
cmpsl
sbb
aaa
out
lods
insl
pop
add
je
in
sub
rolb
adc
mov
xchg
inc
ljmp
or
jle
or
and
fsub
cltd
sbb
loopne
mov
fistpl
sti
mov
cmp
mov
sbb
add
not
dec
leave
ret
mov
push
mov
mov
sbb
jle
sub
adc
and
dec
mov
repz
and
out
cli
xchg
push
mov
imul
shrl
call
jg
dec
lret
ja
gs
sub
jb
xchg
in
inc
add
daa
ss
inc
cmp
mov
xchg
push
or
adc
cmp
je
insl
or
cmp
and
repnz
dec
cmp
clc
jo
xchg
add
add
nop
add
dec
lock
mov
xor
cmp
pop
jle
inc
loop
lods
dec
cmp
aad
inc
mov
jne
imul
shr
dec
jle
mov
fildl
sub
mov
sahf
add
adc
mov
rep
jle
icebp
test
out
sarl
push
push
lret
pop
mov
jo
mov
cli
sub
sbb
xor
loope
enter
fdivs
pop
xchg
push
mov
mov
cmp
xchg
lahf
push
jb
fistps
push
cmp
popf
fmuls
scas
adc
roll
lea
mov
inc
sbb
or
pop
or
outsl
mov
xchg
fchs
fs
cld
imul
mov
or
add
test
ljmp
cmovno
and
mov
mov
nop
mov
icebp
out
jne
mul
sbb
imul
addr16
mov
dec
enter
mov
pop
xchg
cmpsl
or
cmpsl
push
jl
push
dec
xlat
clc
sbb
mov
jne
add
leave
test
inc
enter
sbb
sti
out
pop
push
data16
dec
mov
jp
sbb
push
jg
adc
mov
xor
push
insb
nop
xchg
iret
sarb
nop
mov
pop
test
daa
insb
imul
aas
jmp
fs
inc
add
xor
mov
push
aad
sbb
fldenv
out
cmc
dec
call
ljmp
mov
clc
ret
data16
js
xor
push
ja
sti
pop
gs
xchg
cmp
movsb
frstor
jo
pusha
xchg
cmp
cmp
adc
mov
cmp
inc
push
push
loop
decb
jbe
loop
or
negl
mov
lcall
or
xchg
dec
mov
stc
add
cmp
cltd
scas
dec
pop
pop
ss
icebp
das
mov
int
loopne
pop
pusha
fcoms
mov
rcrb
rclb
cmp
data16
sahf
mov
cmp
in
es
mov
mov
lret
out
repz
scas
gs
or
mov
sahf
push
repz
fbld
stos
mov
jbe
jp
lret
stc
push
inc
adc
sahf
loope
jo
inc
aas
sahf
repnz
or
cmovle
xor
jle
xor
pushl
insb
jge
or
loopne
fdiv
shlb
mov
pop
cmp
pop
cmp
jnp
jmp
push
icebp
add
adc
dec
cmp
das
out
fwait
sbbb
sti
jne
sbb
flds
in
jmp
mov
xor
lods
pop
mov
cltd
jae
pop
inc
mov
sbb
out
outsb
xorb
lahf
or
push
mov
pop
jns
fwait
popf
ficoms
clc
jge
sahf
ret
bound
loope
jmp
mov
mov
lcall
inc
mov
std
divb
sbb
or
jle
cmpsl
sti
imul
or
in
mov
xor
mov
mov
shlb
xchg
ret
arpl
lods
xchg
rcrl
aas
leave
pop
cli
mov
dec
imul
pop
adc
xor
sbb
push
fwait
sub
push
inc
cltd
jno
mov
lods
adc
pop
imul
popa
mov
sbb
decb
adc
sarl
xor
cli
and
xchg
mov
inc
les
fiaddl
jno
in
sub
dec
fldenv
cltd
mov
dec
jmp
xlat
and
add
lds
imul
xchg
test
fstpt
pop
das
adc
aaa
int3
retw
jl
leave
cmp
jnp
push
in
insl
cwtl
lds
call
mov
xor
fldl
iret
fistps
or
sbb
pop
movsb
es
sbbl
stc
pop
xchg
das
pop
adc
push
sub
pop
stos
dec
add
fucomp
push
aam
stc
cs
cs
jl
mov
mov
mov
setb
add
movsl
test
sbb
or
scas
out
mov
xor
lret
out
xor
dec
or
in
sub
stos
sub
stc
orl
xor
hlt
jle
mov
push
xchg
dec
xor
jnp
jg
pushw
push
mov
andl
cld
push
popa
shll
lock
enter
mov
push
pushw
or
icebp
or
pop
test
int3
insb
push
sbb
xor
add
movsb
shll
xlat
sahf
inc
insb
pop
test
je
mov
shlb
or
adc
pop
in
xchg
dec
jge
loop
fsubrs
je
push
xor
sub
dec
leave
adc
in
call
sub
add
stos
sbbl
sarl
xchg
or
sub
shrb
loopne
mov
and
dec
add
repnz
sbb
mov
push
lds
sub
xor
fbld
out
inc
movsb
les
mov
jno
pop
mov
and
mov
mov
and
repz
mov
leave
xchg
add
jmp
mov
sub
imul
addr16
push
and
mov
cs
xor
cmpsb
and
jbe
cmp
stos
xchg
pop
and
aaa
fbstp
ljmp
xchg
in
inc
enter
repnz
jno
and
je
cmpb
sub
lea
xor
xchg
outsb
imul
pusha
cltd
dec
sbb
aam
jge
xchg
rcrb
test
nop
inc
and
shrb
ds
ljmp
cli
push
or
mov
or
adc
repz
adc
mov
fildll
sbb
xor
movsb
scas
not
mov
fisttpl
ljmp
lea
or
jp
sbb
cmp
dec
add
fwait
push
and
xlat
pop
and
in
pushf
pop
inc
int
pop
pusha
cld
dec
adc
outsl
pop
movsb
jg
cmc
add
ret
dec
stc
je
jmp
lret
cltd
pop
rorl
or
loop
arpl
cld
clc
cld
inc
mov
int
push
rolb
mov
ss
xor
mov
pop
sbbb
scas
fdivrl
imul
push
sbb
call
addr16
cwtl
pushf
jl
ss
inc
cmp
ja
imul
imul
clc
mov
inc
test
sub
mov
aas
sub
std
cwtl
cmc
scas
mov
shrb
push
es
cwtl
cmp
in
xchg
out
sub
popa
fwait
lahf
fadd
out
shrb
loope
stos
lock
and
adc
lods
inc
mov
xor
and
ja
test
push
mov
cwtl
movsl
mov
lods
in
cltd
lret
mov
addr16
sub
ljmp
dec
inc
pop
call
imul
push
dec
test
pop
jmp
mov
lods
mov
rcr
dec
popl
je,pt
jno
jp
nop
bound
dec
std
jnp
cmpsb
xchg
into
cmp
hlt
insl
inc
les
jge
ret
fsubs
stos
mov
fistl
xchg
jle
arpl
sub
out
mov
arpl
dec
xchg
shrl
les
sub
lods
xchg
sub
xchg
je
das
ret
in
push
jle
mov
sbb
add
lea
sahf
cwtl
mov
sbb
ret
or
cmp
fsubrl
inc
jno
dec
fs
ret
fdivrs
or
mov
ljmp
and
jle
mov
imul
daa
and
aas
mov
mov
push
outsb
jae
inc
or
out
out
nop/reserved
pop
push
addb
ss
fldt
mov
cmp
inc
movsl
aam
adc
dec
pop
mov
or
mov
push
xor
pop
sub
push
ja
mov
pop
inc
mov
aaa
test
scas
imul
data16
cld
das
scas
push
cmp
mov
cmp
aaa
jg
xlat
out
insb
pusha
es
xor
imull
xchg
dec
push
sbb
sti
push
xchg
je
lret
icebp
lods
push
mov
mov
stc
das
mov
push
jno
or
stos
mov
mov
repz
or
sub
xchg
imul
sub
pop
adc
mov
incb
aas
mov
outsb
jg
ret
jns
das
outsl
push
cmc
movntps
mov
outsb
and
push
insl
repnz
jnp
jp
xchg
push
inc
sbb
ds
mov
cmc
repnz
gs
jecxz
add
cmp
mov
sub
pop
js
in
add
aam
or
dec
sbb
xchg
push
sub
inc
je
xchg
inc
ret
sub
fcomip
pop
bound
or
xor
mov
mov
mov
ret
pop
iret
inc
push
das
mov
fwait
jg
into
mov
pop
add
dec
jns
ljmp
push
imul
cltd
loope
pop
dec
sub
adc
jae
adc
shr
test
mov
xchg
arpl
data16
pop
add
cmp
mov
sub
jne
popfw
dec
inc
jno
popa
inc
xor
sub
xor
aad
or
and
stos
dec
sbb
fs
popa
arpl
cltd
loope
pop
jno
inc
insb
hlt
loope
sub
xor
pop
mov
jle
iret
int3
mov
clc
xchg
imulb
lock
cwtl
add
lods
ja
jbe
lret
or
enter
mov
sarb
xchg
dec
rcll
and
in
xchg
das
fwait
repnz
mov
movsl
push
dec
push
cli
push
xor
outsb
xchg
and
jo
mov
cmp
push
fdivrl
enter
cs
sbb
pop
fsubrs
dec
insb
sbb
test
pop
sub
adc
imul
out
sahf
fldt
pop
dec
sbb
mov
fisttpl
arpl
jne
mov
std
insb
inc
pop
xor
ret
xchg
ds
mov
push
lods
or
mov
adc
rorb
scas
mov
insl
push
jns
xor
scas
jg
repz
imul
rorb
es
enter
jle
mov
shr
les
cmpsl
mov
cmp
jne
push
jl
jb
xchg
fadds
cmp
ljmp
cmp
jns
pushw
movsl
sbb
sub
jne
into
mov
in
in
lods
sub
call
dec
fisttpl
ret
pop
setg
jge
cltd
pushf
lret
cld
mov
push
push
mov
mov
mov
push
or
sarb
dec
xor
call
clc
test
gs
je
xor
sti
fs
rorb
je
jbe
jecxz
push
lods
repnz
rcrl
lods
mov
sbb
es
jmp
test
inc
cld
push
aas
jg
sub
dec
fdivs
nop
addb
pushf
hlt
roll
movsl
dec
insb
sbb
ja
jno
push
je
adc
jae
arpl
cli
hlt
jae
fsubl
aaa
cmp
subb
fdivr
fisubs
mov
fstps
addl
add
in
push
mull
jmp
sub
ja
jle
xor
jp
xchg
mov
sbb
ss
mov
cmpsl
iret
enter
xchg
cld
test
mov
mov
shll
jmp
fiaddl
add
cmp
cmpsl
aad
loopne
cmpsb
push
cmpl
daa
mov
adc
mov
aas
xchg
xor
pop
dec
pop
pop
jecxz
adc
jno
pusha
loop
out
or
rcrl
pop
movsl
daa
pop
inc
mov
outsl
ret
aam
cmpsl
outsl
gs
jmp
ds
pop
in
adc
insb
mov
mov
add
pop
push
ds
pop
outsb
addr16
jo
cli
test
xchg
sub
xchg
mov
mov
not
mov
mov
cwtl
jg
xchg
pop
clc
das
push
or
cld
fbstp
dec
and
cmpl
jo
lcall
mov
daa
jb
pushw
arpl
outsb
bound
jbe
xorl
inc
mov
cmp
adc
or
or
xchg
adc
jmp
pop
pop
lahf
dec
push
cs
push
loop
repz
xchg
imul
mov
add
rcll
sbb
nop
rorb
pop
clc
push
lock
neg
lret
cmp
clc
mov
sbbl
in
sarb
gs
je
jo
cs
sahf
jge
cmp
aad
in
mov
push
test
mov
push
mov
cwtl
xlat
out
push
jo
pushf
imul
pushl
paddsw
mov
mov
xchg
int
into
das
mov
popf
and
ret
insb
in
cld
or
mov
jno
insl
movsl
icebp
sub
jne
or
sbb
aas
inc
cmp
out
fstl
mov
mov
stc
or
xchg
sti
mov
mov
pop
aas
cmp
mov
insb
je
xor
xor
mov
jne
andb
mov
bound
xchg
inc
in
sub
and
test
pushf
xchg
and
subl
shlb
js
push
movsb
mov
outsl
test
andb
fstl
test
add
mov
jle
or
jecxz
ret
outsb
sbb
out
addr16
jecxz
fildll
sub
aad
insl
hlt
jno
jbe
into
add
xor
mov
mov
mov
jg
xor
fmul
addl
lds
ret
cmp
cmp
lods
mov
aaa
fldt
test
mov
mov
add
cmp
lahf
mov
std
arpl
ds
dec
xchg
lcall
mov
xchg
push
roll
dec
notl
std
xchg
fimull
test
dec
xchg
push
dec
jmp
xor
add
push
fwait
lret
cmp
push
and
add
or
push
jg
push
xchg
xchg
or
in
dec
push
inc
jecxz
push
pop
gs
xorb
sbb
adc
call
jo
pop
insl
test
dec
xor
loopne
jmp
xor
int3
fsubrs
aad
inc
lahf
aam
testl
scas
fsubrs
sbb
cli
adc
sahf
cmpb
add
jbe
adc
out
pop
xchg
negl
cmp
rclb
out
sbb
nop
xchg
imul
andl
cltd
push
dec
cmp
test
lock
and
jbe
push
in
push
and
xchg
es
fnsave
add
aad
xchg
xchg
pop
mov
jb
mov
popl
daa
in
add
pop
sbb
jbe
and
push
inc
pop
lret
add
push
xor
add
push
adc
jge
sub
addr16
in
cmp
mov
mov
test
mov
dec
push
push
adc
pop
push
mov
xor
scas
xor
xlat
fmuls
or
loope
pop
repnz
js
call
xchg
xlat
mov
inc
mov
je
in
or
mov
aaa
int3
out
pop
cli
xchg
pusha
cmp
mov
test
xor
mov
sub
fimuls
cmovp
dec
dec
adc
add
mov
mov
mov
sub
in
ret
gs
cli
stos
jle
mov
shrl
mov
call
cmp
lods
sti
movsl
xchg
insl
aaa
test
xor
cli
sub
outsl
insb
push
lret
cmpb
mov
adc
cmp
fs
test
aad
mov
sub
cltd
sub
pop
arpl
add
lret
mov
adc
push
sub
sub
and
xor
sub
xchg
pop
add
fs
rclb
cld
adcl
jbe
sub
mov
jmp
jl
push
ss
sbb
insb
lock
jge
fcmovnu
xchg
dec
jle
fucomi
repz
sbb
pop
or
call
lds
popf
and
cmp
movsb
add
test
xchg
xor
aas
inc
sub
repnz
scas
fxch
loope
in
lahf
adc
sub
mov
int
jne
scas
ljmp
inc
jnp
mov
jmp
pop
inc
push
dec
push
adc
xor
mov
push
mov
aad
dec
aas
rorb
pop
lods
inc
test
cmp
mov
mov
adc
xchg
mov
jne
loopne
call
fs
fwait
inc
out
sub
test
mov
mov
mov
std
addb
adc
cmpb
mov
stos
scas
push
orl
cmpsb
mov
or
loopne
in
ret
or
sbb
cli
push
notb
jmp
aam
fwait
pop
repnz
cwtl
sub
cmc
and
pop
cmp
divl
sub
push
popf
mov
iret
xor
scas
jbe
clc
insl
sbb
ljmp
aad
in
sbbb
or
add
sub
std
loop
sbb
push
int
mov
sbb
inc
jne
jae
lea
mov
dec
add
push
or
cmpsl
sub
and
adc
fdivrs
sahf
xchg
mov
mov
fistl
push
scas
mov
add
xchg
std
rcr
and
mov
ja
mov
bswap
jnp
cmp
cmp
add
nop
push
jecxz
adc
scas
pop
movsb
xchg
pop
stc
push
sar
adc
in
xor
ss
xor
movsb
jmp
stc
pop
enter
or
inc
cmp
shr
jno
xor
div
mov
repz
popa
test
das
jae
dec
jbe
xor
jne
cmp
leave
dec
movsl
sbb
jp
cs
rorb
fcmovu
rorb
pop
or
pop
pop
aaa
sbb
adc
fs
adc
dec
fwait
push
and
fcomps
sub
shrl
inc
movsb
push
jae
sbb
and
scas
repz
enter
push
ret
or
adc
insb
ret
push
xlat
bound
mov
jle
mov
loopne
decb
xchg
clc
mov
out
sbb
add
mov
out
mov
icebp
sahf
mov
mov
xchg
fildl
inc
das
sbb
sbb
je
aaa
jbe
ds
fst
push
test
hlt
sbb
stos
xor
pusha
das
out
sub
xchg
cwtl
stos
sub
mov
imul
jns
cmp
push
mov
hlt
out
in
mov
hlt
sahf
inc
in
fs
mov
mov
lahf
nop
jmp
movsb
std
xchg
movsl
mov
push
popf
lahf
arpl
test
icebp
loopne
in
call
test
mov
xchg
addr16
jo
pop
mov
out
jmp
sub
icebp
pop
lcall
lahf
int
cmpsl
out
mov
gs
jbe
jg
lcall
sbb
andps
push
aam
loop
push
fcompl
cmp
cmp
sbb
out
sub
subl
mov
outsb
cmp
jb
ficomps
inc
cmp
sbb
mov
mov
and
push
sub
fdiv
test
mov
mov
into
lret
mov
lock
xchg
fwait
out
loop
lret
pusha
sbbl
imul
icebp
nop
push
repnz
jo
gs
add
fistpll
pop
push
fs
push
inc
pop
adc
jl
ja
sbb
cmpsb
dec
sub
mov
xchg
cmp
iret
imul
dec
push
push
sti
push
andl
int
inc
inc
mov
jg
aam
jo
call
fcompl
rcll
push
and
xchg
clc
sub
add
pop
jno
push
inc
imul
bound
pop
push
mov
fmulp
mov
pushf
sub
cmp
jecxz
jl
push
aad
ja
mov
ret
fucom
dec
fists
out
xchg
ja
mov
or
ja
push
and
mov
adc
jecxz
cmp
pop
in
pop
add
xchg
xor
or
cmp
and
jne
jle
addl
xor
popl
cld
mov
out
lcall
pop
out
rcr
inc
cmp
push
fs
sbb
out
test
js
scas
sub
aaa
xor
movsb
loop
out
ljmp
jne
push
out
cmpsb
mov
mov
mov
inc
mov
rolb
xor
pop
and
iret
sub
es
lea
jae
xchg
add
mov
xlat
xor
pusha
pop
jae
in
mov
les
cmpsl
mov
imul
push
jbe
aad
fnop
adc
and
pop
xchg
add
pusha
pop
xor
inc
and
scas
orb
pop
arpl
fdiv
inc
xchg
xlat
mov
jne
sub
dec
inc
sbb
sub
mov
or
fildl
or
dec
sbb
push
jp
movsb
pop
jo
movsl
push
mov
int3
js
xor
and
mov
rolb
repnz
ficompl
int
cmp
mov
add
enter
mov
ljmp
sub
xchg
mov
ficoml
lcall
test
pop
push
adc
sti
inc
aam
icebp
sahf
cmp
adc
and
jae
xor
sub
dec
cmp
and
test
fstpt
aam
jno
jmp
aad
lods
jno
test
gs
jge
mull
iret
fsubrs
addl
jle
loop
dec
dec
dec
mov
addps
mov
xor
cmp
dec
int3
aaa
bound
mov
dec
fcmovnbe
pop
push
mov
pop
stos
jne
test
add
adc
stos
lods
insb
jne
and
or
dec
push
push
lea
icebp
xchg
loopne
repz
aaa
enter
sub
sub
mov
cld
pop
arpl
mov
rcrl
ficompl
xor
mov
test
sub
xchg
mov
mov
mov
call
rolb
in
inc
xchg
cs
adc
push
sbb
push
out
jp
sub
cmpsb
loope
mov
dec
aaa
addl
filds
fwait
fwait
push
aam
cmpsb
pop
xchg
stos
in
cmp
adc
divps
clc
insl
out
inc
inc
dec
test
lret
lret
lcall
fdivp
fldt
mov
shrl
mov
dec
imul
xchg
pop
inc
cmc
mov
add
jns
gs
cmc
popa
adcl
pop
mov
shrb
push
mov
sbbl
jnp
push
loope
mov
mov
push
js
cltd
sbb
pushf
in
test
fldenv
mov
mov
xchg
ds
push
inc
cmpsl
dec
in
int
pop
jle
push
imul
fwait
inc
and
je
dec
or
mov
push
sbb
fs
dec
cmp
in
cmp
inc
ret
fsubrs
data16
ja
mulb
cmp
repz
jecxz
aaa
shlb
ret
jl
out
call
fidivl
movsb
jmp
popa
in
xchg
xchg
mov
push
clc
lret
and
push
push
pop
mov
imul
push
xor
fwait
jb
lds
cmc
dec
in
sub
xchg
ljmp
es
sti
xrelease
sub
jle
pop
and
mov
lret
sub
inc
std
test
fsubl
mov
push
ret
aam
mov
pop
mov
pop
sti
mov
lar
and
ljmp
jl
sbb
gs
cmp
repnz
in
cs
mov
mov
mov
pop
and
aad
cmpsb
dec
in
insl
mov
je
inc
xchg
loopne
push
hlt
ret
out
cmp
pop
int
cmp
dec
aam
ja
rol
movsl
cltd
outsb
push
aad
or
scas
outsb
lods
ret
ds
xor
testb
enter
cli
xchg
enter
or
pop
inc
cltd
sbb
sbb
xor
outsb
jbe
inc
xchg
rorl
cwtl
movsl
imul
das
imul
jge
fcmovnb
sbb
loope
stos
call
inc
cmp
cmp
jmp
xchg
push
hlt
inc
aaa
push
xchg
inc
pop
shr
insb
fbld
sub
xchg
das
cmc
ret
and
cld
lock
xlat
sub
mov
sub
sub
sti
inc
inc
mov
push
ficomps
addr16
out
fists
pop
adc
mov
xchg
cmc
imulb
jge
inc
in
xor
sbb
imul
in
adc
or
sbb
add
adcl
int
push
int
sbb
pop
test
out
test
iret
cmp
fwait
imul
mov
or
ds
add
stos
jl
lock
bound
stc
ja
vpshad
xchg
mov
sbb
pop
cwtl
outsb
cmp
mov
loope
jecxz
xchg
jp
add
and
test
loopne
mov
and
into
adc
and
into
clc
scas
out
ret
and
or
mov
iret
pop
ss
cmp
sbb
pop
pop
dec
xor
pop
mov
push
xor
adc
test
ret
jae
lahf
sub
aad
push
pusha
gs
test
jmp
xlat
lock
push
mov
dec
xor
std
sbb
mov
clc
jmp
add
or
xor
mov
dec
jbe
sbb
loope
mov
and
inc
leave
outsb
daa
ret
sbb
imul
pop
clc
mov
or
mov
rcrb
push
sub
insl
in
xchg
push
das
xor
cmp
cmp
mov
aad
rorl
fadd
in
leave
cmp
shll
mov
out
mov
loop
sarl
jg
imul
clc
mov
int
adc
jbe
sti
ss
outsb
ds
cltd
fldenv
fcomps
inc
mov
inc
cmp
inc
mov
sub
inc
mov
pop
lock
into
test
and
mov
pop
mov
mov
inc
add
mov
pop
aam
js
adc
push
stc
push
test
mov
dec
lds
mov
jl
jl
xchg
and
sbb
lods
repnz
out
inc
lret
push
imul
jo
mov
mov
inc
lock
mov
pop
add
outsl
bound
test
xchg
test
mov
pop
push
mov
je
jne
popl
sbb
cmp
fwait
int
and
push
ss
or
movsl
sub
jnp
ss
xor
push
lods
push
or
aam
insb
sub
sbb
std
test
mov
mov
fs
push
inc
movl
js
repz
stos
loope
xor
sbb
pop
pop
push
cmpsb
addr16
fcmovb
jne
dec
xor
nop
adc
jl
mov
push
mov
jmp
add
dec
sahf
icebp
pop
incl
ret
adc
repz
mov
popf
std
push
xorb
outsl
je
insb
sarl
in
outsb
and
aas
lods
cmp
sbb
mov
mov
gs
je,pt
test
xchg
sbb
pop
int3
popa
pop
mov
out
xchg
xchg
mov
bsf
aaa
adc
push
and
roll
adc
xor
mov
push
add
gs
les
fmulp
ret
xchg
rcll
aaa
mov
fisttpll
lock
or
arpl
insb
mov
addr16
iret
sub
movsb
je
es
insl
dec
and
add
fidivrl
in
out
dec
xor
ja
js
and
xor
loope
adc
das
mov
xchg
and
mov
gs
loop
push
mov
jp
andb
pop
arpl
ficompl
mov
jno
scas
lds
sub
add
pop
ror
lea
popf
sub
call
insl
and
pop
outsb
test
insb
mov
fwait
clc
xor
dec
mov
lods
jae
sub
mov
shrl
scas
xor
daa
movsl
lret
lods
jp
inc
test
mov
std
cmc
ficomps
cmp
ja
loopne
imul
jne
cli
mov
lods
or
stc
mov
mov
add
enter
ja
mov
push
mov
cmp
pop
add
mov
xor
sub
call
inc
mov
xchg
daa
cs
sbb
push
fdivrl
insl
shl
mov
aad
cmp
pusha
aas
mov
addr16
daa
or
jle
inc
adc
xlat
adc
inc
testl
lea
es
imul
or
ficompl
xchg
pop
sub
out
in
push
cmp
xchg
jl
pop
shlb
or
xor
mov
into
ss
popa
ds
dec
push
sti
inc
rorb
pop
cmpl
mov
popa
sub
js
sti
mov
xlat
xchg
inc
out
aam
fnstcw
dec
in
and
jecxz
xchg
mov
sub
xlat
sahf
sbb
in
sar
adc
jecxz
test
cmp
dec
fst
shrl
in
out
xor
inc
arpl
push
int3
xor
lret
fisttpl
les
mov
cmpsl
mov
xchg
or
out
addb
cmp
dec
test
sub
jo
push
test
scas
cmc
and
and
sub
xor
std
mov
sbb
testl
out
out
repz
mov
out
shrl
add
jbe
sbb
icebp
dec
js
push
decb
add
stos
fs
mov
mov
add
cmpsb
stos
sub
dec
or
xor
mov
mov
inc
sbb
imul
mov
mov
jmp
xor
jl
mov
cmp
out
push
dec
faddp
dec
mov
stos
lahf
ja
hlt
js
jl
fwait
mulb
jg
xchg
aas
sub
cmp
popa
xchg
negl
daa
movups
pop
fcomi
mov
push
sub
push
lock
cltd
push
subb
pop
mov
repz
sti
inc
push
or
lret
repnz
xorl
cmp
xor
insl
std
push
into
lds
nop
xchg
dec
shll
in
jg
xor
pusha
insb
lret
aaa
inc
lea
add
pop
shr
add
and
sub
lret
pop
cmpsl
lods
addr16
outsl
or
xchg
aaa
nop
lret
push
call
push
xchg
xchg
cli
adc
cmpb
xchg
pop
std
dec
xchg
cmp
arpl
call
int
loop
je
push
mov
mov
add
add
imul
mov
daa
testl
scas
and
mov
lds
subl
aad
mov
and
adc
les
pop
jae
out
cmp
outsb
jne
add
pop
mov
dec
sbb
mov
filds
lods
sbb
dec
loope
inc
inc
push
sbb
mov
aaa
lock
inc
bound
push
es
mov
mov
cmc
movsl
fdivrl
decb
cld
shll
out
mov
movsb
scas
sbb
cmp
pop
test
je
fildl
cltd
adc
rcrb
ljmp
in
push
xor
jo
jnp
pop
std
test
les
in
movsb
je
movl
sar
sbb
dec
sub
out
cmp
push
sbb
add
mov
or
adc
in
mov
scas
cld
pop
aaa
sbb
mov
test
xlat
jno
stos
mov
lea
mov
js
fadds
and
and
dec
fldenv
inc
lods
cs
testb
xchg
adc
out
ficompl
lcall
sub
mov
rol
ret
push
mov
ret
lods
sbb
xchg
cmpsb
pop
out
sbb
les
add
scas
xchg
ljmp
movsb
xor
fistl
xchg
jae
lods
jecxz
push
andl
cmc
mov
sub
dec
in
inc
movsl
hlt
lcall
out
jge
push
scas
xor
or
out
hlt
scas
xchg
xchg
mov
cmp
xchg
xchg
cmc
cmp
sbb
mov
sub
add
gs
hlt
gs
dec
stc
aas
xchg
ja
jle
cmp
decb
cmp
cltd
inc
xchg
mov
mov
pop
push
sub
adc
roll
sbb
mov
out
xchg
rol
sahf
std
loope
jne
enter
sbb
movsl
movsl
insb
jp
push
faddl
test
scas
neg
mov
and
addb
jg
xchg
xchg
sarl
idivl
inc
int
sbbb
aaa
xchg
out
sub
fnsetpm(287
jns
xchg
pop
mov
xchg
sub
add
mov
sbb
je
mov
add
dec
adc
loop
push
dec
sub
das
fwait
cmp
enter
inc
xchg
lret
pop
lock
mov
lea
divb
ret
arpl
lock
and
iret
add
mov
mov
adc
ja
sti
ds
jo
pop
testb
sbb
lret
test
and
dec
dec
dec
push
es
fsts
leave
xchg
xor
xchg
mov
repz
xor
stos
fadd
dec
pop
enter
dec
mov
lahf
cmpsl
shl
push
cli
mov
fistps
hlt
iret
dec
bound
lods
sub
mov
pop
dec
stc
or
dec
xchg
jg
pop
push
arpl
sti
jae
mov
pusha
pop
hlt
sahf
xchg
jmp
pop
fwait
sbb
ret
sub
mov
mov
dec
bound
inc
loopne
sbb
jle
xchg
mov
divl
jnp
xor
mov
popl
push
gs
push
pop
jl
lds
popf
push
ret
test
push
fs
iret
cmp
jmp
out
xchg
mov
cmpsl
add
pop
sub
negl
dec
in
stc
or
ss
repnz
leave
inc
mov
inc
inc
xor
dec
inc
fisttps
movsl
in
xor
fistpl
aad
pop
inc
push
scas
pand
cmp
out
insl
subb
sbb
cmp
pop
call
aas
adc
jo
pop
push
loopne
js
xchg
xchg
test
notb
loop
jnp
out
lret
jp
and
and
int
adc
out
add
in
xchg
idiv
incb
dec
cmp
fcmovb
pop
xchg
or
repz
pushf
sti
or
popf
jg
adc
popa
iret
mov
scas
add
xorl
fisttps
out
adc
fs
xlat
xor
sti
not
orl
repz
jmp
sbb
enter
sbb
jp
sti
adc
cs
add
mov
mov
clc
sarb
in
adc
out
aad
mov
repz
fnstenv
rorb
jge
cmpsl
add
push
push
in
pop
jbe
jbe
jp
jg
mov
scas
cwtl
dec
inc
iret
add
dec
inc
xor
mov
lock
pop
nop
cmc
mov
sub
add
and
dec
jg
lahf
popf
mov
push
les
jecxz
in
mov
dec
ja
sub
dec
jle
stc
push
jecxz
inc
test
xchg
xor
dec
ljmp
rclb
or
adc
and
xchg
cmpsl
lods
jp
out
add
pop
shrb
sub
lods
jg
fildll
shr
cld
inc
out
sbb
stos
loopne
mov
xor
shrd
es
into
insb
mov
subb
mov
adc
stos
loop
lahf
movsb
add
dec
dec
ror
mov
rorb
xchg
adc
push
ja
push
scas
mov
mov
cmp
pop
dec
adc
inc
cmp
or
dec
data16
pop
xor
fldpi
mov
xor
clc
cmp
add
xor
cwtl
xchg
mov
addr16
xor
outsb
mov
sbb
xchg
test
push
das
mov
lea
inc
out
out
cwtl
mov
mov
jbe
sbb
bound
cmc
cmc
mov
and
mov
cmc
push
clc
andb
std
sbb
pusha
out
jl
mov
add
nop
push
mov
push
sub
sub
mov
jo
push
rcrl
jecxz
xchg
jl
into
leave
pushf
mov
adc
in
sti
leave
pop
ret
adc
ja
fcompl
push
aas
adc
adc
xchg
gs
push
xrelease
pop
pop
pop
and
aad
cmpl
cmpsb
cmpsl
pop
bound
xchg
adc
imul
mov
sub
les
scas
lcall
rcr
in
lahf
into
fidivrl
in
cmp
mov
push
scas
jne
cs
lahf
outsb
mov
cmp
push
add
lcall
imul
push
dec
test
clc
sub
xchg
sahf
enter
pop
outsl
xor
pop
cmp
push
mov
push
hlt
or
out
mov
fdivs
stc
xchg
bound
fistpll
push
adc
inc
jl
test
je
pop
rolb
cwtl
sub
mov
dec
sar
iret
test
jp
insb
subl
cltd
fadds
jle,pn
jns
pop
je,pn
dec
fistl
jecxz
mov
mov
xchg
bound
and
xchg
jmp
inc
jle
push
fidivs
pop
pop
ret
in
inc
sbb
sub
addr16
cs
or
mov
jge
aad
insb
fucomi
mov
ret
jbe
dec
adc
adc
or
into
and
shl
lock
sbb
sbb
and
jo
add
sub
mov
jecxz
fcmovu
jg
in
push
dec
shufps
andl
lret
fmull
inc
sbbb
sub
cmp
jne
add
mov
int3
das
lock
mov
shll
adc
fs
shll
bound
aad
fimuls
push
pop
push
sbbb
lret
and
xchg
ljmp
popf
mov
mov
repz
insb
push
push
cmp
or
in
sbbl
mov
adc
ror
add
fiaddl
js
fidivs
mov
fs
pop
mov
sahf
enter
mov
xchg
arpl
cli
ljmp
mov
mov
cmp
inc
jo
inc
cwtl
and
popf
out
inc
jne
mov
inc
adc
xchg
xchg
iret
imul
and
sub
aas
icebp
sub
es
shll
test
dec
std
sbb
repnz
hlt
jns
push
add
out
sub
inc
xorb
adc
adcl
seta
pop
xchg
adc
push
mov
stos
aad
jp
loop
loop
push
lds
iret
in
cmpsb
aas
fstp
inc
mov
mov
cmp
or
mov
inc
sub
pop
ficomps
inc
ret
dec
mov
in
int3
sub
cmc
xchg
gs
cwtl
or
imul
xchg
jmp
movsb
xchg
pop
xchg
adc
inc
mull
or
out
bnd
pusha
dec
jp
fcomps
lahf
and
adc
cmpsl
mov
or
cmp
adc
sti
mov
fimull
fst
xchg
cmp
lods
mov
scas
fst
adc
xor
popf
jns
and
inc
repnz
jmp
dec
popa
adc
inc
mov
push
dec
push
das
popa
loopne
xchg
aas
aaa
or
cld
push
icebp
mov
out
cmp
cli
mov
mov
pop
mov
lock
les
cltd
wbinvd
inc
and
jmp
jnp
loop
pop
inc
mov
ljmp
rorb
dec
mov
imul
cmp
mov
ror
mov
pop
jge
test
je
mov
pop
int
faddl
or
sub
test
jns
mov
sub
xor
popf
xor
fldl
cld
ret
xchg
inc
pushf
dec
lods
stos
adc
mov
add
adc
stc
sbb
mov
lea
ljmp
test
mov
es
push
xchg
xchg
mov
stc
mov
push
mov
sarl
mov
call
push
adc
and
mov
adc
cmpsb
and
leave
and
mov
addr16
and
push
cmpsl
and
cwtl
lods
sub
xchg
scas
pop
add
pop
push
jp
push
lret
and
sub
into
lods
ja
stos
lods
popa
lods
sbbl
test
into
and
sub
adc
mov
push
mov
mov
xor
xor
fdivrl
xlat
xor
scas
clc
xchg
movsb
adc
fimuls
ret
push
outsb
and
lods
mov
addb
mov
push
testl
dec
aad
int
xor
inc
jae
out
pushf
xor
mov
daa
sbb
das
mov
test
push
aad
mov
mov
mov
sbb
fwait
cli
rcr
cmp
jp
push
mov
roll
popa
arpl
shlb
out
and
cmc
lock
loopne
lcall
inc
xchg
push
in
mov
mov
lods
roll
iret
xor
movsb
in
jne
int3
loope
jl
sahf
mov
inc
imul
or
out
iret
add
aad
testb
and
or
pop
jb
mov
ret
cmp
inc
lds
xchg
aad
sub
dec
pop
cmp
pusha
mov
arpl
push
cmp
rolb
daa
pushf
ret
mov
push
and
fnstsw
pop
inc
insl
incl
pop
push
and
int3
ds
in
out
jnp
aad
lods
test
push
in
fbstp
aas
jbe
sbb
dec
inc
out
xchg
jecxz
pop
mov
add
push
aas
ds
cld
into
pop
push
add
mov
xor
loop
xchg
push
sbbl
xor
sub
mov
daa
sbb
cli
aas
add
es
xchg
sarl
cmc
xlat
add
out
jmp
or
mov
sub
out
mov
jl
nop
jo
mov
mov
push
mov
cld
mov
jns
xor
psrld
ss
addr16
mov
cmp
in
fs
jae
mov
mov
add
xchg
fcomps
dec
adc
lods
mov
cli
cli
jmp
sub
jno
aad
lods
daa
sub
push
mov
pop
outsl
minps
cwtl
mov
popa
sahf
adc
xchg
dec
push
popa
jns
push
rolb
sub
xchg
inc
mov
mov
xchg
xchg
roll
jmp
jle
push
nop
stc
or
sbb
pop
mov
aaa
jle
push
sti
sbb
lods
mov
push
mov
dec
pop
lea
enter
xchg
pop
ljmp
daa
aad
addr16
clc
push
or
mov
jge
out
adc
fstpl
add
or
sub
mov
xchg
gs
sub
mov
add
dec
push
jmp
adc
call
jmp
cmp
push
dec
test
rcrl
push
fists
push
test
mov
dec
pop
jb
mov
add
outsb
andb
pusha
test
mov
mov
inc
adc
shlb
ss
sbb
and
loope
in
push
dec
and
aam
rcl
jno
mov
in
addr16
decl
mov
pop
sub
dec
sub
mov
movsb
jb
iret
jmp
adc
pop
sub
gs
rolb
into
xchg
aam
fwait
adc
mov
sub
stos
cmc
adc
movsb
movsl
mov
aam
fwait
xchg
mov
dec
outsl
cmp
sbb
lret
inc
add
pop
add
xchg
jno
pop
or
jp
mov
jp
jecxz
int
jg
cli
out
idiv
push
inc
out
ror
pop
rcl
pushf
in
je
hlt
mov
xor
xchg
mov
js
sub
les
iret
mov
xchg
xor
sub
mov
imul
stc
icebp
lea
fisubs
sbb
into
adc
das
mov
mov
loope
test
adc
lahf
dec
lods
fstl
inc
popa
push
lea
pop
ja
add
test
adc
lock
mov
or
sub
inc
mov
in
jbe
jle
mov
fisttpl
cmp
lods
sbb
sub
out
fwait
sbb
test
sub
push
es
jecxz
pusha
mov
mov
jle
ljmp
leave
sbb
movsb
cmp
daa
cs
and
loopne
cmp
push
sub
sbb
out
ret
cmp
mov
adc
outsl
add
lret
pop
aaa
aad
jbe
shrb
xor
ficomps
inc
in
aas
hlt
cmp
inc
mov
test
lfs
xlat
sub
mov
xchg
cltd
xlat
out
mov
push
xchg
cmc
mov
enter
aaa
test
ljmp
sub
or
cmp
mov
inc
pushf
stc
xchg
xor
aas
lods
jbe
test
in
inc
mov
inc
inc
negb
mov
imul
xchg
in
je
mov
fmuls
mov
dec
inc
and
stc
inc
dec
add
lsl
push
test
divb
cmp
je
sub
fiadds
xlat
imul
pop
pop
xchg
xchg
imul
xchg
int
mov
push
icebp
hlt
div
adc
movsl
arpl
cmp
inc
ss
into
cmp
sbb
pop
cltd
loop
out
cltd
push
cwtl
cmpsl
arpl
fadds
sub
mov
dec
xor
xchg
push
mov
xchg
fstl
mov
push
movsl
notl
cltd
movsl
jl
dec
and
ret
xchg
scas
inc
lds
jg
or
ja
mov
in
lret
mov
jb
mov
and
xor
mov
jmp
emms
nop
push
jecxz
mov
xchg
ret
dec
xchg
adc
sub
adc
shll
shrb
sub
cmp
js
inc
push
lds
sahf
test
mov
cmc
popa
rolb
dec
sub
icebp
add
aam
inc
dec
and
add
jl
xchg
cwtl
int
or
bswap
outsb
sbb
xchg
scas
das
push
imul
call
push
push
cmp
jbe
rorl
scas
lods
xor
sahf
mov
xchg
xorl
mov
add
outsl
xchg
outsb
jae
jae
add
sbb
jb
sbb
es
arpl
pop
mov
mov
aaa
mov
add
scas
xchg
aad
cmc
sub
cmp
cwtl
xor
cmpsl
and
inc
ljmp
sbb
popa
pop
sub
repnz
cli
ret
sub
ja
popa
add
nop
jg
mov
bound
scas
inc
sbb
lret
rsm
out
jmp
mov
sti
dec
ds
and
mov
stc
fisubl
or
xchg
dec
add
push
fdivrs
mov
and
sub
aam
lea
mov
fdiv
fnstenv
add
mov
dec
jecxz
vminss
fistpl
and
push
enter
adc
loopne
aad
mov
data16
into
cmc
dec
clc
ss
stc
cmpsl
repz
leave
leave
or
adc
sub
sbb
mov
inc
jae
sbb
mov
call
and
sbb
push
and
iret
xchg
inc
sbb
or
loope
sbb
clc
insb
clc
mov
jne
int
xor
dec
sub
aad
jp
aaa
mov
or
pop
pop
decb
xchg
movsl
sbb
mov
int
clc
stos
jnp
push
jg
dec
imul
into
mov
sahf
xchg
rol
sub
imul
stos
cmp
imul
aas
push
out
out
fdivs
testb
push
add
pop
push
mov
iret
pop
or
cmp
sub
ret
push
mov
clc
imul
das
ss
sub
mov
int
rorl
aas
bound
and
outsl
dec
addr16
mov
das
mov
jae
stc
popa
push
push
mov
aas
dec
pushf
push
leave
popf
mov
dec
add
ret
mov
out
dec
es
jle
out
dec
daa
sarl
in
testb
cbtw
add
sub
push
iret
loope
insb
pop
inc
adc
cmpsl
mov
sub
mov
and
mov
into
sti
push
test
mov
stos
jg
jbe
popa
aam
jae
jns
add
pop
psrlq
icebp
add
xchg
xchg
adc
mov
call
mov
mov
nop
fisubrl
pop
xchg
lahf
in
push
punpckldq
fwait
popa
cmpsb
jp
jo
dec
push
and
sub
je
mov
inc
negl
icebp
imul
or
push
scas
adc
cmp
xor
jl
ss
jge
and
add
data16
cli
xor
or
pop
cli
cmpsl
or
jl
lea
push
loop
pop
lcall
cmc
hlt
mov
frstor
add
stos
in
sub
sbb
pop
and
jno
adc
addb
inc
pop
adc
push
push
dec
cwtl
dec
out
in
shll
lcall
js
push
ret
jle
dec
mov
pop
mov
shl
cmpl
sub
push
jae
dec
or
ret
or
or
stos
add
clc
popa
cmp
push
mov
xchg
int3
inc
insl
sub
repz
es
adc
jne
lcall
adc
mov
leave
cli
jmp
adcb
fildl
inc
cmp
imul
enter
add
sub
mov
add
shll
flds
mov
aaa
mov
pop
repz
iret
mov
outsb
xorl
sahf
and
push
and
cmp
and
enter
stos
push
xorb
pop
arpl
subb
in
add
leave
fsubrl
jbe
rorl
and
sbb
dec
pop
mov
mov
and
mov
je
movsl
int3
daa
popf
jns
pusha
arpl
outsl
push
or
xchg
imul
push
stos
mov
call
leave
and
popa
or
jns
shll
jmp
cmp
repz
adc
lret
fldenv
or
mov
inc
nop
addl
push
pop
insb
mov
clc
aam
test
jg
sbb
add
ret
sbb
mov
je
add
clc
pushf
ja
ret
test
add
push
xor
adc
mov
sahf
into
outsb
scas
jno
cmp
jle
into
rcr
xchg
cmpsb
push
cmpsl
inc
sarl
sbb
add
and
sub
and
dec
and
fs
sub
outsl
fsub
dec
jl
xor
pop
loopne
nop
ficomps
jmp
pop
ja
das
xlat
fisubs
adc
lock
dec
jp
movsb
push
scas
cwtl
mov
xchg
fdivl
cli
mov
in
and
hlt
enter
push
pop
xchg
push
mov
sub
push
pop
imul
pop
mov
movsb
aaa
int
or
and
mov
jo
sbb
jnp
into
mov
fisubs
push
pop
xchg
sub
or
mov
sub
imull
pop
add
jno
sarl
dec
std
sbb
push
dec
push
and
leave
aam
sub
in
sub
stos
adc
mov
add
fimull
jmp
mov
mov
repz
cmc
pop
fbstp
adc
addr16
push
pop
xor
push
outsl
ret
daa
insl
sbb
stos
lods
into
nop
push
movsb
and
xchg
std
xlat
in
imul
aas
and
adc
icebp
sahf
mov
das
xchg
cmp
mov
and
mov
dec
cmp
dec
pop
ret
jp
and
pusha
mov
cmp
and
pusha
out
repz
movsb
rcrb
pop
push
xchg
repz
arpl
dec
or
call
sub
fcompl
xor
inc
loope
cltd
dec
dec
mov
and
and
push
xor
outsl
in
cli
popa
xchg
fistps
mov
xchg
call
xlat
inc
lea
loope
ljmp
inc
sub
sbb
sbb
test
inc
jns
decb
test
enter
mov
or
mov
push
or
enter
inc
sahf
lods
pop
lea
lods
mov
addl
sub
fadd
test
mov
into
mov
push
adc
fidivrl
push
adc
xlat
push
mov
mov
xchg
sbb
in
cld
les
sbb
stc
and
in
push
pop
sti
fwait
movsb
dec
fdivs
fiadds
gs
pop
vsubps
mov
mov
sub
cmc
pusha
sahf
lods
test
mulb
in
push
jno
shlb
xor
fcomip
call
cmp
test
fbstp
and
popf
aaa
mov
test
mov
negl
stos
and
insl
add
fmuls
mov
pop
sbbl
dec
loopne
adc
or
es
jecxz
pusha
cli
sub
mov
add
mov
xor
add
jnp
mulb
fisubrl
lods
negb
enter
cmp
arpl
rcrl
sub
or
std
pop
mov
sub
dec
adc
fidivrl
movb
xor
jnp
daa
mov
push
mov
test
in
fs
or
pop
push
in
push
push
sub
aas
in
subb
xlat
iret
push
xchg
jns
lock
mov
push
pop
stc
dec
jb
and
sbb
adc
mov
jmp
mov
clc
inc
aas
or
icebp
fsubs
jne
std
ja
pop
in
ja
sub
jb
test
push
sub
mov
cltd
sarl
in
in
inc
push
repnz
jmp
in
popa
dec
std
xchg
icebp
int
inc
mov
test
shll
insl
mov
jnp
data16
mov
jo
cmovle
push
or
enter
dec
push
stc
adc
cmpsb
es
sub
add
xor
cmp
in
pop
addl
and
std
cmp
loopne
mov
jb
pop
pop
sbb
xchg
fldl
daa
pop
daa
imul
movsl
ja
or
lret
sub
arpl
xchg
jle
jb
jecxz
jne
cmpsb
pop
jno
xor
and
add
int
mov
mov
mov
ljmp
mov
cs
sbb
add
push
xor
mov
pop
dec
in
pusha
out
aas
cmovae
inc
loope
shlb
mov
pushf
aas
push
pusha
or
rol
push
xor
sub
int3
cbtw
addl
bound
insl
inc
jb
repnz
adc
out
aas
lods
jb
dec
sti
pop
sbb
adcb
daa
test
shll
das
aam
and
cmp
daa
cs
xor
xor
insl
sub
sbbb
cld
mov
das
xor
pop
rolb
mulb
jno
sbb
repz
fistpl
jno
jmp
aam
sub
xor
fstl
xor
and
sub
add
pop
jae
dec
lods
jge
clc
rcll
inc
or
or
fwait
cmp
int3
mov
enter
cmp
into
ljmp
jbe
adc
pop
xchg
js
jg
packssdw
sti
and
dec
and
mov
push
int3
mov
add
pop
mov
adc
xor
scas
or
sub
jmp
call
nop
xchg
popf
cltd
leave
cld
test
jnp
mov
lret
movsl
mov
test
dec
int
pop
je
orb
or
cmp
gs
ss
pop
fistpl
lods
push
xor
pop
dec
imull
out
pop
push
flds
adc
dec
pop
cmp
loop
jmp
mov
mov
push
leave
pop
dec
sbb
shl
jl
mov
jo
shr
outsb
aam
mov
fwait
jb
or
stc
add
out
mov
or
mov
imulb
add
mov
stos
decl
nop
xchg
inc
ljmp
incl
iret
repnz
adc
mov
jecxz
inc
adc
fdivs
pop
fwait
scas
sbbb
pop
loopne
push
in
sbb
jle
xchg
and
xor
mov
pop
cltd
scas
dec
inc
lea
loop
push
loop
dec
jns
lock
xchg
pusha
ss
adc
lods
lods
popa
cmp
mov
ja
shlb
jmp
mov
pop
pop
mov
int3
or
fwait
mov
in
add
jmp
repnz
call
and
int3
or
gs
cld
push
call
push
pop
xchg
hlt
lcall
bound
je
sub
push
test
ja
mov
push
pop
stc
jb
mov
cmp
loope
or
sbb
pop
xchg
addl
fstps
rolb
popf
pop
mov
pop
das
shrl
daa
adc
daa
push
lret
mov
sub
bound
out
repnz
pusha
test
repz
lods
add
negb
mov
sbb
or
sub
test
dec
pop
pop
nop
dec
fsts
repz
fs
ljmp
popf
lods
xchg
mov
pop
and
xchg
or
imul
push
sarl
aaa
fidivl
mov
or
pop
pop
jmp
fs
sub
jl
jo
repnz
shl
gs
or
pop
mov
in
mov
inc
fcoms
or
jecxz
mov
jge
gs
jecxz
push
pop
inc
xchg
pop
pop
mov
sbb
dec
in
push
mov
and
push
ja
mov
dec
jle
aas
lock
test
les
dec
mov
sub
xchg
jns
ss
dec
fnstcw
out
jp
cmp
xchg
std
jae
mov
pop
in
jns
or
gs
cld
sbb
iret
rcl
addr16
fdivrl
or
fdivrs
xchg
or
dec
clc
insl
imul
cmpsb
mov
mov
mov
adc
es
cmc
scas
call
sub
jnp
stc
int
jg
cld
je
std
test
test
sbb
cmp
mov
int3
fisubl
cmpsb
test
aaa
xorl
adc
fisttpll
imul
jbe
popa
popf
inc
popa
pop
cmp
ds
or
mov
popa
js
cmp
inc
fistps
jae
adc
and
mov
arpl
inc
les
jns
ss
cltd
push
outsl
cmp
xchg
mov
sub
add
lcall
decb
stos
push
sub
jg
fdivrs
push
loopne
fnstcw
movsb
cmp
scas
dec
xchg
adc
mov
movsb
fsubs
fisubl
add
or
es
cmp
je
jmp
and
adc
dec
xchg
sbb
lods
jbe
leave
bound
fdivl
dec
frstor
lcall
addl
jnp
adc
mov
scas
scas
xor
in
shll
popw
gs
pop
sbb
mov
jmp
mov
out
xchg
rorb
lea
leave
and
shll
lret
rorb
xorb
ss
and
ror
mov
cmp
push
es
or
sub
mov
mov
les
fildl
xchg
adc
rorb
pop
mov
movsl
jge
roll
fdivs
js
inc
push
rorl
jp
push
or
mov
stos
push
sahf
dec
sbb
inc
xchg
xchg
hlt
mov
ret
fcomps
out
sti
jns
lods
rcrb
jle
fistpll
cmp
stc
fsubl
leave
cmp
icebp
sbb
gs
arpl
lret
in
push
dec
icebp
and
and
pop
adc
filds
pop
int3
sbb
test
pop
clc
jnp
testb
int3
push
xlat
fcompl
xor
repnz
aas
cmp
test
jecxz
dec
add
and
adc
fildll
test
push
bound
mov
sub
rclb
jne
lock
popa
sub
clc
add
test
rorl
leave
mov
pop
xor
jmp
push
std
push
jmp
sbb
js
iret
xchg
repnz
out
ja
fmuls
cwtl
iret
inc
mov
pop
test
mov
dec
inc
push
cld
popf
push
stos
fwait
mov
cld
ja
ds
sub
push
jo
or
outsl
jb
in
sub
pop
nop
out
pusha
cld
xchg
aas
push
pop
pop
and
mov
jp,pn
sub
cs
bnd
fbstp
or
inc
mov
sbb
sti
adc
mov
shl
xchg
or
aaa
test
dec
pop
and
inc
and
stos
lahf
roll
inc
int
imul
sub
or
jb
shll
arpl
int
icebp
inc
and
jg
cmp
mov
cld
push
inc
stos
inc
push
cld
mov
and
mov
sahf
cmp
out
or
pop
fimuls
out
lret
aad
inc
pop
call
sub
in
mov
out
imul
ret
push
enter
mov
aad
cli
mov
mov
jp
inc
icebp
jmp
inc
pop
dec
sub
pop
pop
insb
or
and
in
add
jbe
daa
adc
mov
push
scas
dec
jo
sbb
jb
orb
mov
es
enter
cwtl
adc
in
arpl
je
mov
add
jns
dec
cltd
std
outsb
lcall
popf
push
int
test
adc
pop
adc
test
rcrb
enter
rcrl
enter
stos
and
stos
lods
sub
dec
lds
outsb
pop
xor
popf
clc
gs
xchg
negb
adc
pop
push
lods
sbb
pusha
and
loopne
push
inc
icebp
mov
push
and
scas
add
negb
jl
jno
jmp
mov
mov
and
cld
sbb
rcrl
out
inc
mov
cmp
mov
fidivrl
scas
jbe
xor
lods
test
insb
dec
out
adc
outsl
and
out
lahf
cwtl
push
lret
mov
test
insl
fidivs
data16
sbb
lods
int
mov
fsts
lret
out
xlat
fisttpl
mov
dec
pop
or
xor
dec
add
fidivrl
mov
sub
sbb
jge
cmp
dec
sbb
cli
js
lds
pop
dec
sbb
daa
sbb
xor
xorb
cmp
ret
icebp
dec
aam
or
ret
aam
add
pop
cli
das
icebp
ret
pop
xor
repnz
push
pop
push
dec
mov
repz
pop
shl
mov
test
ds
loop
pop
test
cli
mov
hlt
dec
xchg
sub
mov
sub
inc
mov
loop
cmp
fistpl
cmp
sarb
sub
enter
hlt
jmp
adc
aaa
adc
outsl
adc
pop
je
push
pushf
push
and
inc
out
hlt
pop
push
pop
mov
mov
dec
sub
subb
push
pop
adc
scas
aam
loopne
sub
popf
inc
aam
movsb
lods
jl
fs
test
pushl
rcll
push
jg
xor
mov
sub
and
dec
mov
out
imul
jb
and
inc
js
in
jge
rorl
sub
mov
mov
cltd
or
lret
orl
movsl
scas
cmp
cmp
sub
mov
push
test
add
push
sbb
pop
xchg
pushf
dec
mov
sbb
xchg
sbb
repz
add
repz
hlt
inc
push
outsb
enter
sbb
xlat
mov
decb
jb
push
pop
dec
xor
je
imull
push
and
iret
arpl
nop
and
je
mov
lods
ja
mov
jbe
sbb
cvtpi2ps
rcrb
dec
inc
add
mov
repnz
cli
inc
sbb
cmp
add
dec
dec
mov
cmp
inc
push
mov
es
stc
push
and
jbe
pop
outsl
add
xor
daa
add
sub
xor
lods
adc
xchg
and
jl
in
sbb
movsb
loopne
and
imul
cli
mov
idivb
inc
imul
jge
bound
test
test
mov
cmp
xorb
jne
sbb
sbb
bound
sahf
jae
rol
mov
ret
sbb
mov
dec
mov
adc
inc
sbb
and
lret
fsubrl
adc
fstps
push
mov
fwait
or
out
sbb
rolb
mov
int3
jns
cmp
xchg
imul
push
popa
das
and
xlat
push
sbb
fs
sub
or
push
out
in
or
addr16
insb
xor
jmp
sbb
sbb
mov
jmp
pop
and
lock
push
xchg
movsl
mov
fnsave
fsub
inc
pop
das
leave
test
insl
inc
pop
xchg
sbb
repz
mov
lock
imul
data16
mov
shll
ds
pop
inc
subb
adc
mov
adc
or
dec
jnp
cmpsb
rep
or
ljmp
xchg
jns
lea
push
sub
xor
adc
jl
daa
xor
outsl
das
insl
dec
fsubs
jge
xchg
sbb
fs
xchg
mov
testl
cmpsb
sub
inc
movsl
aas
sbbb
inc
push
int3
fcmovne
in
jle
cmpsl
add
dec
int3
test
call
jmp
aam
out
sub
std
outsl
stc
push
mov
popf
popf
push
cwtd
or
lret
inc
sub
xchg
mov
jle
or
outsl
aam
arpl
mov
rcrl
jle
pushf
jns
pop
xchg
shll
arpl
and
cwtl
into
shrb
sub
xlat
pop
pusha
idivb
lret
mov
fwait
test
ljmp
jmp
mov
xchg
repz
jnp
cmp
ffreep
repz
sub
xchg
aas
push
xchg
jae
lods
sbb
xor
xor
push
addr16
ja
pop
pop
lods
rclb
fidivl
test
ret
data16
jl
push
xchg
inc
mov
fisttps
add
xchg
and
mov
mov
jne
xchg
inc
iret
add
mov
roll
jno
inc
faddl
rcrl
ds
lods
icebp
fnstenv
cmp
adc
adc
or
mov
int
loope
enter
dec
push
adc
loop
pop
sbb
inc
or
scas
out
add
xchg
sbb
aad
dec
inc
push
shl
dec
jns
push
repnz
scas
out
xchg
jno
xor
fcmovbe
cltd
jl
adc
psllq
cmp
mov
dec
jp
fildll
pop
push
imul
mov
out
or
fldcw
sbb
xchg
cmc
fistpl
dec
shlb
xor
call
lods
shlb
lea
xor
and
jl
xchg
popf
xlat
sbb
in
xchg
sub
lahf
mov
xchg
loopne
fwait
sub
fxch
add
add
xor
aaa
sbb
mov
mov
lcall
xchg
addr16
cmp
bound
movsb
imul
cmp
aas
push
sti
into
in
xor
sub
adc
xor
ja
adc
inc
jge
pop
pop
inc
dec
mov
mov
fld
inc
pop
dec
sarl
sarb
stc
std
lahf
stos
repz
cmc
push
dec
sbb
and
je
or
lcall
and
mov
sub
les
leave
inc
inc
in
push
xlat
adc
adc
sbb
sub
mov
xor
jne
in
mov
sub
cmp
dec
ret
addb
jl
stc
test
iret
jle
test
ds
sbbb
pop
adc
dec
sbb
fnstcw
mov
mov
inc
rolb
sub
inc
mov
sub
fucom
inc
mov
adc
ss
lret
loopne
sti
push
cmp
pushl
inc
cmpsb
push
inc
and
mov
mov
dec
cmp
sbb
insl
jle
jae
repz
nop
mov
adc
mov
jmp
mov
add
in
add
test
nop
mov
push
in
lahf
inc
pxor
mov
rolb
flds
mov
mov
popa
cltd
or
dec
scas
mov
leave
sbb
repnz
jg
mov
mov
push
in
xchg
xor
cli
dec
jl
cmp
jo
icebp
xor
xor
fs
push
dec
clts
mov
in
das
xor
cld
fmul
in
add
mov
lret
sub
pusha
movsl
cmpsl
fistl
insb
leave
sahf
dec
mov
mov
fmull
push
std
jns
xchg
mov
ret
cmc
push
test
les
mov
sbb
jo
fdivrs
imul
sbb
or
in
mov
add
int
fidivl
pusha
xor
ja
inc
xor
pusha
adc
test
subl
fnstcw
dec
sbb
jle
mov
inc
cmc
out
sbb
jecxz
lret
dec
mov
inc
or
sbb
mov
sti
xor
add
pop
pop
imul
pop
pop
sbb
mov
sbb
cmp
or
sti
xor
in
aas
icebp
andb
push
daa
test
mov
or
mov
mov
hlt
jmp
mov
dec
pushf
and
mov
jmp
fwait
lods
inc
jne
xchg
ret
cmc
lock
push
mov
adc
insl
insl
xchg
cmp
pop
adc
aam
jle
dec
inc
adc
pop
mov
jmp
lret
je
xchg
push
repz
lret
push
push
mov
lea
cwtl
dec
adc
sti
gs
xchg
mov
sub
dec
loop
cmpsl
test
add
insb
mov
add
jmp
cltd
int3
inc
mov
pushf
pop
sbb
hlt
sub
fdivl
repnz
inc
adc
gs
out
mov
ret
or
push
mov
repnz
loop
jne
test
xchg
cli
repnz
cmp
adc
or
mov
pop
scas
or
mov
int3
mov
and
xchg
xchg
roll
arpl
stc
lret
push
pop
or
test
outsb
dec
js
cltd
rorb
shl
dec
xor
pop
mov
fcoml
and
clc
les
loopne
shr
adc
notb
lods
fs
insb
movb
mov
clc
clc
les
sub
inc
nop
mov
mov
ret
jae
call
fsubr
push
inc
andl
out
sbb
sub
mov
ret
dec
dec
or
negb
mov
bound
clc
je
stos
loopne
insl
out
push
mov
mov
mov
js
mov
es
sbb
data16
inc
add
xchg
negl
mov
lcall
inc
das
dec
int3
jbe
repz
daa
aas
pushf
jge
adc
andb
mov
xor
jb
out
cmp
out
and
aaa
sub
sbb
inc
mov
out
dec
scas
stc
lret
jo
or
push
xor
dec
addr16
sbb
add
shlb
xor
pop
jg
jne
cmpsl
push
and
sti
in
test
mov
push
mov
mov
mov
arpl
sti
inc
dec
out
mov
or
mov
arpl
mov
cmp
gs
pusha
cs
popf
push
jle
orl
jmp
and
push
jl
repz
cmp
insl
leave
fwait
sti
outsl
clc
fstp
jno
add
loopne
test
cwtl
mov
pop
hlt
fistpll
sbb
lcall
imul
cmpb
xor
sub
sub
je
scas
dec
ret
out
cmp
xor
repz
fnstcw
adc
sbb
aas
sub
insl
sar
aad
lret
scas
imul
xchg
ljmp
push
push
mov
mov
dec
rcll
sbb
scas
imull
repz
jp
lea
jae
sub
pop
mov
vshufps
push
hlt
mov
xor
and
mov
xor
mov
pop
push
jmp
cs
jl
cmp
bound
sbb
sti
ja
jmp
fs
mov
scas
push
adc
cltd
adcl
mov
mov
arpl
movsl
loope
add
lock
mov
mov
inc
cwtl
mov
xchg
fucomp
pushf
stc
jns
inc
ret
adc
test
ljmp
jle
decl
int
add
rorb
ss
iret
fistps
fldenv
mov
cmp
rol
out
pop
aad
cmpb
inc
pop
inc
inc
out
in
insb
mov
cli
or
imul
mov
mov
xchg
mov
out
xchg
mov
es
xchg
lods
or
pop
leave
test
repz
add
into
add
adc
dec
or
outsb
sti
pop
das
clc
add
xchg
mov
js
pop
dec
push
xchg
lcall
lret
xchg
xchg
mov
pop
dec
orb
inc
sarb
xchg
cli
nop
push
mov
inc
xor
mov
push
dec
shr
push
fsubs
iret
mov
mov
cmp
loop
xor
mov
dec
lods
jae
mov
lock
ss
inc
inc
iret
mov
sbb
fmuls
fmull
outsb
push
xor
mov
dec
aad
cmp
pop
xchg
xor
hlt
push
xchg
out
pop
pusha
adc
cld
jo
loop
xor
jo
mov
push
jne
test
cmp
sbb
fsubp
xor
cmpsb
xor
outsb
xchg
pop
dec
sub
and
sub
enter
add
jge
lods
jp
dec
cmp
movb
loopne
pop
fs
sbb
add
mov
enter
jne
push
or
scas
and
adc
jno
clc
icebp
arpl
cmpsl
push
sbb
and
sbb
add
xchg
mov
xchg
incl
inc
mov
cmc
ss
jmp
out
repz
jle
scas
ljmpw
lahf
lahf
js
adc
pop
movsl
hlt
sbb
gs
lea
xlat
add
arpl
push
imulb
or
pop
jcxz
out
adc
fisubl
cmpsl
fsqrt
mov
jne
pop
push
rcrl
push
dec
cli
mov
lret
fisubl
mov
mov
scas
cltd
sahf
jne
movsl
stos
rcr
test
push
push
sbb
pop
lock
jp
js
push
out
push
mov
addr16
fisubs
and
push
aam
aaa
ljmp
test
cmp
es
xchg
adc
enter
aas
xchg
leave
push
sub
aas
fsubr
jmp
out
pusha
pop
sbb
or
mov
mov
dec
sbb
inc
inc
adc
adc
pop
arpl
lds
jo
mov
lret
push
mov
and
jns
es
stc
and
lea
pop
mov
push
lret
aad
mov
in
dec
fnstenv
sti
lcall
dec
xor
sbb
aas
stos
sub
shlb
inc
out
or
mov
in
out
arpl
sbb
mov
call
and
sbb
notb
adc
addb
mov
xchg
inc
cmpsl
stos
das
lds
fs
bound
mov
mov
fcomi
imul
or
jo
pop
clc
sti
outsb
popaw
xchg
pop
push
inc
mov
mov
sahf
loop
stos
jo
fldl
push
fcmovb
or
iret
pop
adc
sub
push
add
leave
pop
lods
xor
and
movsl
xor
sbb
jge
inc
xorl
or
das
cwtl
mov
stos
and
pop
adc
rorl
pop
cmpsb
mov
test
test
push
stos
test
push
out
jg
paddsb
add
sbb
pop
aaa
cmp
xor
inc
jge
jno
sbb
lret
jbe
stos
sub
xchg
jne
sahf
push
sbb
js
in
sub
push
es
and
shl
out
lods
ss
mov
xchg
pusha
dec
mov
cmp
hlt
out
add
fistpl
sbb
mov
sub
cli
inc
sub
aas
jg
out
wbinvd
das
mov
sub
sub
andb
popa
cmp
fistl
xchg
fldcw
bnd
in
fsubrs
les
aas
xor
xchg
mov
movsb
and
push
das
rclb
call
mov
or
mov
dec
cltd
cmp
loop
iret
pop
mov
mov
mov
popa
jns
repz
jb
clc
cli
xorb
pop
subb
xchg
inc
pusha
cwtl
mov
int
out
cmp
adc
cmpsb
add
fcoms
mov
or
andl
rol
int3
mov
push
cmp
movhps
sbb
sub
mov
lcall
xchg
cld
mov
roll
gs
bound
sub
std
sub
cmp
loope
cmp
mov
sbb
push
js
ficoml
div
rolb
sub
adc
enter
pop
cmp
mov
fs
mov
dec
insl
xchg
push
jecxz
sbb
test
dec
adc
pop
push
stos
and
mov
inc
shll
ficoml
minps
fistl
ds
sbb
jbe
ret
jmp
jo
es
jmp
sub
imul
test
scas
mov
xor
rcll
dec
pop
xchg
dec
cmc
mov
dec
xchg
dec
orb
pop
lock
stos
addr16
sub
test
or
rclb
or
xor
mov
in
loop
fsts
inc
in
imul
xchg
mov
arpl
fdivrs
testl
lea
arpl
and
xchg
cmp
cmpsb
rolb
insl
or
xchg
and
mov
sti
jae
pop
cmpb
loop
in
or
jle
sahf
inc
loop
xchg
ret
or
sti
in
push
in
sti
mov
pop
pusha
mov
push
outsl
sbb
sub
cltd
jb
into
add
repnz
fimull
sbb
adc
xchg
xor
mov
aad
or
inc
inc
jmp
sbb
dec
fs
inc
cwtl
xor
xor
dec
push
fwait
out
imul
ret
dec
loope
add
mov
adc
add
inc
insb
cmp
xchg
cmpsb
mov
pop
shll
push
cmpsb
das
jbe
mov
dec
shlb
or
outsb
leave
cmpsb
push
dec
stos
repnz
cmpsl
add
lcall
cmp
sbbb
jmp
cmpsl
idivl
stc
subl
cltd
sbb
lea
mov
std
xlat
cmp
cs
je
sub
rcr
pop
pop
sub
sbb
test
pop
fisubrl
dec
icebp
popa
or
lods
jmp
sbb
call
mov
sbb
adc
cmp
push
cmpsl
dec
dec
inc
mov
push
sar
mov
out
jno
and
fistpl
jg
loop
popa
sub
sbb
pop
sub
jp
aad
lret
mov
call
push
jp
pushf
in
mov
fisubs
rorb
test
pop
add
lea
sub
jge
add
test
mov
lods
inc
mov
orb
pop
jno
fldcw
push
xor
outsl
stc
push
push
lea
inc
mov
push
incl
xor
pushf
add
push
andb
stc
mov
adc
cmp
and
pop
fisubs
jno
dec
xchg
add
jo
cmp
adc
mov
int
jo
lret
popa
mov
xchg
sub
inc
loope
out
test
leave
jp
outsl
add
addb
mov
xchg
ret
ss
clc
pop
pop
xor
mov
xlat
mov
icebp
jne
xchg
jle
mov
rcl
cs
xor
jb
sub
outsb
loopne
or
pop
sub
mov
test
lea
mov
cmp
into
popl
xchg
popa
loopne
jbe
xlat
jo
mov
lods
adc
rolb
ds
sub
xor
add
add
js
lcall
nop
insl
and
filds
xchg
mov
mov
fwait
ret
add
push
inc
or
popf
stc
pop
ficompl
int
sti
in
add
dec
cs
sbb
scas
jno
lret
inc
fisubl
and
xor
xchg
ss
bound
inc
jl
push
or
fwait
sarl
and
adc
js
pop
js
pop
dec
iret
in
lods
iret
inc
arpl
mov
jnp
mov
mov
ret
shll
sub
in
inc
push
je
popf
leave
mov
test
loope
inc
adc
subb
mov
adc
and
mov
jmp
push
cmp
aad
push
lcall
dec
jno
ja
rcr
inc
lods
mov
cmpsb
fidivl
inc
dec
loope
std
rcll
aad
vmovhps
mov
rcr
mov
fsubrs
dec
xchg
pop
mov
fisubl
clc
mov
pop
fwait
jl
test
mov
insl
mov
dec
add
imul
cmc
scas
fistpll
dec
lahf
dec
adc
in
mov
pop
iret
sbb
mov
inc
pop
mov
jmp
cmc
adc
jnp
mov
or
stos
enter
sbb
lods
loop
into
adc
or
jge
jns
orb
and
cli
xchg
mov
sub
pop
xchg
xchg
inc
lahf
dec
xchg
sub
mov
push
cmpsb
xchg
xor
fldenv
cmpsl
int
cmpb
or
push
test
adc
mov
dec
sbb
lcall
mov
test
gs
cli
pushf
xor
dec
fistps
inc
pusha
enter
adc
inc
popl
fwait
mov
jp
and
mov
push
adc
xchg
test
add
stos
cmp
fidivrl
mov
inc
test
ror
pop
jmp
mov
hlt
mov
dec
aam
roll
in
push
iret
cmpsb
shlb
fcoms
fs
in
stos
mov
mov
jmp
mov
dec
addr16
scas
repz
push
sub
stos
sub
xor
out
push
adc
jl
or
fwait
sub
push
int
mov
xchg
cmp
xchg
inc
sub
dec
shrb
and
repz
fwait
in
call
or
lods
in
or
xchg
stos
mov
jl
sarb
out
fdivl
push
outsl
or
std
loope
push
sbb
in
ds
sahf
idivb
mov
pop
pop
movsl
je
insb
cmp
jecxz
sahf
test
cli
xchg
ficoml
push
insb
or
scas
dec
jo
daa
out
iret
fnstcw
pop
dec
enter
push
aaa
data16
movsb
fucompp
into
bound
lahf
popl
stos
imul
jmp
xor
xchg
clc
icebp
dec
movsl
cltd
shll
or
push
or
fistpll
sbb
es
xchg
imul
jb
sbb
inc
mov
movsl
mov
movsb
or
mov
out
jp
sub
enter
into
inc
lds
cmpsl
jg
dec
sbb
int3
jl
mov
test
push
cmpsl
arpl
scas
pop
pop
jno
cmp
cmp
rcll
mov
inc
xor
jb
mov
sub
and
jnp
inc
das
or
sbb
popf
xchg
inc
ficoml
xchg
orb
sbb
sbb
adc
jp
pop
outsb
lahf
cmp
add
outsb
stc
mov
xchg
arpl
cmpsb
div
and
mov
mov
push
scas
scas
cltd
add
imulb
mov
jl
mov
lea
out
jmp
addr16
adc
jno
jg
shlb
jmp
adc
and
push
loope
lret
pop
daa
mov
and
sbb
add
fbld
and
in
xchg
push
test
push
xchg
nop
push
sbb
test
mov
dec
ret
inc
imul
or
les
cli
mov
insb
cmpb
sti
call
enter
insl
pop
jnp
or
bound
lret
mov
ja
pop
mov
sub
movsb
faddl
or
cltd
push
sbb
add
pop
out
into
lock
pop
jecxz
or
jnp
pop
pop
lret
lret
movsl
fcoml
push
push
lcall
call
xchg
xchg
dec
mov
movsb
not
mov
pop
jne
imul
or
lcall
icebp
in
hlt
aad
dec
sti
sub
dec
inc
fistps
ja
ljmp
pop
mov
pop
les
sbb
movsb
xchg
push
imul
frstor
pop
mov
sarl
movsb
push
mov
mov
jb
lods
nop
sbb
stos
nop
sar
lock
stos
xchg
fildll
das
sub
or
stos
push
jecxz
sbb
pusha
inc
rorl
test
std
orl
sbb
mov
jno
shll
test
inc
mov
bound
cld
xchg
xlat
xchg
aam
dec
in
in
pop
test
push
push
lock
loope
cmc
dec
and
inc
sub
stos
stc
xor
dec
icebp
push
leave
out
movsl
out
leave
mov
push
dec
or
cmp
sahf
iret
popa
popf
push
lahf
enter
xchg
add
mov
mov
pop
repz
xchg
out
inc
pusha
decl
insl
mov
jmp
rcll
xchg
and
ret
lcall
push
add
mov
add
and
enter
jns
cwtl
xlat
inc
mov
or
mov
out
sbb
cld
movsb
jns
out
dec
pop
in
mov
popa
pushf
hlt
inc
xorb
imul
das
cld
sbb
push
test
popl
das
push
sub
lret
inc
stos
shlb
lds
mov
leave
pushf
ljmp
cmp
rcll
and
pop
ret
shl
and
mov
jbe
add
outsb
pop
sahf
sub
xor
or
xor
test
testl
dec
cltd
mov
clc
popa
fnstenv
or
add
mov
clc
jne,pt
and
mov
fdivrl
pusha
cmp
xabort
xchg
jae
mov
jno
les
inc
pop
sbb
adc
es
xchg
push
aas
mov
cmp
int3
shrb
and
or
outsl
add
hlt
loopne
push
add
dec
pop
ss
pop
sbb
cmpsw
add
cli
inc
sarb
jmp
fsts
dec
dec
nop
sbb
pop
mov
xchg
mov
popf
shrl
mov
or
push
mov
lret
jmp
clc
aam
sub
dec
push
ret
xchg
jne
sub
pop
imul
xor
movsl
cmc
mov
sub
insl
pop
cmc
testl
mov
orl
sti
mov
sbb
xchg
je
or
sub
xchg
movsl
sbb
aad
lret
daa
lock
bound
rcl
in
das
orb
icebp
test
or
xchg
std
sahf
jmp
fwait
mov
xor
lcall
sub
sbb
push
push
cwtl
jmp
and
push
pop
adc
fcompl
jb
sbb
inc
sub
andl
adc
inc
movsb
sbb
jmp
pop
push
aas
in
cs
mov
lcall
cwtl
out
dec
aam
frstor
lcall
xchg
in
maskmovq
divl
pop
in
dec
mov
mov
out
loopne
dec
mov
adc
in
add
shl
adc
cmp
jl
int
pop
outsl
push
jbe
mov
mov
inc
ljmp
push
and
cmp
sbbl
gs
push
cmp
sbb
mov
jb
nop
xorl
shrl
xor
test
dec
popa
shlb
dec
insl
mov
loop
popa
xorb
cltd
out
mov
xorl
cmc
jae
pop
dec
add
inc
mov
out
pop
aas
cmpb
mov
xor
out
test
xor
mov
shll
mov
dec
int
mov
outsb
cmp
in
scas
inc
adc
push
sbb
outsb
push
mov
or
cltd
bound
pop
pop
daa
lret
xchg
xor
adc
jg
inc
pop
add
xor
stos
cmp
mov
aam
push
fbld
pop
mov
lods
arpl
jae
mov
popf
mov
lret
push
clc
pop
or
stos
lret
add
adc
xchg
imul
sbb
dec
aas
rcll
jo
mov
cmpsl
add
add
enter
out
fstp
and
mov
add
dec
or
dec
mov
sub
daa
popa
sbb
or
or
and
adc
scas
xchg
xchg
inc
js
fistps
movsb
cltd
loopne,pt
inc
mov
test
fstpl
pop
imul
inc
sub
lcall
jo
sahf
lcallw
jns
xchg
sarb
add
inc
or
icebp
xchg
mov
inc
les
xchg
sub
sbb
sti
sahf
pusha
push
jmp
js,pt
inc
out
mov
roll
mov
push
rep
mov
cmp
xchg
cmp
dec
jmp
sub
and
mov
mov
daa
cmp
mov
frstor
mulb
loop
inc
jg
sarl
bound
dec
mov
ficompl
fsubrl
push
icebp
dec
lret
push
int3
sbb
lods
push
mov
add
cli
test
enter
xor
js
dec
mov
data16
int3
inc
outsl
cwtl
rol
mov
adcb
inc
pusha
cs
ret
in
pop
jne
xchg
cmp
mov
imul
xchg
int3
xchg
dec
repnz
pop
mov
shll
out
inc
cmp
insl
mov
outsb
movsb
inc
xor
adc
je
outsl
mov
rolb
incl
lret
in
icebp
sbb
hlt
daa
fcompl
push
push
nop
dec
push
or
mov
adc
mov
mov
and
cmp
or
and
dec
cmpsl
sti
outsb
dec
push
rcrb
xor
pop
jecxz
lret
leave
je
pop
mov
sub
sub
add
inc
mov
jmp
dec
fsts
xor
dec
incl
inc
popa
pop
sbb
std
xlat
call
or
mov
push
pop
movsl
or
jno
cld
imul
xchg
andl
push
test
popw
and
add
out
mov
bound
in
call
pop
aaa
pop
xchg
sbb
add
js
cltd
clc
push
add
loopne
push
sub
dec
and
sbb
notb
loope
mov
loope
push
aaa
lock
xchg
loope
adc
in
std
test
hlt
jp
stos
adc
aam
mov
repnz
aad
jle
call
fcmovu
push
fldenv
dec
sti
shlb
gs
xorb
jbe
jo
js
mov
icebp
leave
adc
fstl
dec
insl
orb
lahf
xchg
imul
mov
int3
adc
mov
pop
nop
lock
push
mov
mov
scas
push
les
lahf
mov
js
add
sub
ret
movsb
std
xlat
or
push
cs
enter
jp
and
sub
mov
ret
jmp
insb
xchg
sbb
add
push
cmp
loope
lret
lods
push
adc
and
movsb
aam
sub
fsubrp
mov
xchg
ja
cwtl
cli
cmp
adc
ror
jnp
and
mov
faddl
addr16
fucomip
mov
data16
mov
mov
ds
xchg
movsl
mov
dec
mov
inc
push
mov
rol
fdivrl
xchg
es
stos
mulb
inc
imul
push
pop
into
cmp
sbb
pop
inc
mov
mov
pop
dec
mov
add
and
ljmp
pop
sbb
decb
dec
jecxz
xor
movsl
arpl
pop
mov
es
push
stos
jmp
jmp
cmp
call
sbb
cmp
addr16
push
mov
es
scas
js
mov
mov
sbb
jns
test
cmp
cmp
and
cmp
rcl
lds
mov
inc
adc
les
xchg
mov
loopne
add
pop
pop
out
in
and
xchg
mov
sub
adc
outsl
cmp
frstor
mov
je
jns
ss
out
mov
mov
mov
icebp
shrl
lods
es
js
lret
inc
dec
lahf
cwtl
icebp
mov
rorl
jb
je
aaa
cld
pop
jnp
add
pop
pushf
xchg
and
ljmp
addr16
aas
cmpb
add
cwtl
mov
std
push
outsl
ja,pt
xchg
inc
scas
jns
and
cli
pop
xchg
popf
push
sti
outsl
mov
lds
arpl
jmp
call
out
movsb
and
cmp
cmpsl
cmp
rorl
subb
cltd
sbb
push
add
int3
xchg
aam
bound
adc
and
enter
push
cmpsl
push
cmpsb
jge
imul
pusha
loopne
in
and
mov
sbb
cwtl
cwtl
cmp
mov
dec
dec
sbb
mov
fdivp
pop
ret
jp
cmc
mov
pusha
pop
push
add
sub
ret
jnp
pop
cmp
pop
add
outsb
shrl
xchg
call
jmp
or
fbld
je
inc
scas
dec
int3
xor
sbb
inc
xor
addr16
dec
adc
jnp
lock
xlat
fisttpl
sub
hlt
hlt
enter
sub
stos
imul
add
add
add
xorl
lock
inc
fsts
xchg
xchg
push
movsb
mov
es
loope
stos
inc
jge
in
fisttps
mov
ss
jnp
or
dec
outsl
xlat
mov
rcrl
mov
adc
jo
dec
jge
push
rcrl
test
icebp
ja
aam
pusha
out
lret
jae
and
mov
fwait
test
or
adc
mov
in
sahf
rcrl
dec
sbb
aaa
repnz
cmp
xchg
mov
sbb
push
ljmp
mov
mov
dec
jp
jl
sarb
adc
dec
lret
pop
mov
loope
icebp
and
xor
push
inc
aad
sahf
leave
xor
fldenv
mov
adc
push
fwait
mov
sbb
popa
loop
or
popf
mov
jg
xorb
pushf
or
push
rcll
loopne
lods
dec
mov
aas
dec
and
cmpsl
cmp
ret
popf
lea
nop
cmp
cmp
into
mov
bound
in
xchg
jmp
dec
outsb
lods
loopne
sub
push
pop
xchg
test
das
insl
cmp
mov
sbb
mov
test
and
out
cmc
outsl
in
push
cli
sbb
imul
int3
gs
xchg
dec
je
sub
popl
neg
ss
in
and
sbb
pop
cmp
aas
test
in
cld
stos
sub
xor
pop
xchg
pop
insb
aam
mov
cmpsb
sti
in
cmp
or
enter
nop
cs
int
mov
cmpsl
adc
push
sub
mov
jmp
sub
jns
fistpll
test
inc
pop
mov
je
jge
pop
std
push
mov
mov
jecxz
xor
outsl
xchg
push
or
je
sbb
mov
aad
sahf
mov
movb
std
inc
mov
push
xlat
adc
js
xlat
call
pushf
repz
rcrl
enterw
cmc
mov
inc
cmp
fnstsw
push
aaa
sub
or
xorb
fwait
lods
lock
nop
mov
clc
mov
xchg
push
in
movd
xchg
mov
mov
jg
cld
jae
or
jmp
in
dec
inc
ret
fildll
fs
std
insl
jecxz
repz
mov
lods
push
jmp
repz
movsb
adc
jmp
and
mov
add
mov
and
push
xchg
mov
xchg
inc
hlt
lret
bound
andl
sub
pop
sbbb
pop
sbb
scas
mov
and
call
jnp
dec
subl
fadd
les
insb
jns
movsl
push
inc
iret
jb
sbb
xor
clc
pushf
clc
movsb
push
repnz
fidivrl
scas
in
mov
stos
xor
enter
dec
and
out
xchg
pop
pusha
movsb
in
mov
lods
pop
in
rcll
xor
sbb
aam
jns
ficoms
pop
push
or
cmp
jmp
push
cmp
sub
popl
test
xor
jae
ja
das
push
dec
stos
mov
jl
inc
mov
dec
in
sub
stos
push
cli
or
lea
lods
xchg
loopne,pn
or
jb
xor
iret
mov
cmp
ljmp
inc
addr16
jo
stos
movsl
jge
xor
sub
lods
fcoml
and
and
mov
decb
add
cmpsb
push
jno
inc
mov
shll
pushf
pop
cs
add
pushf
and
xor
push
jmp
leave
sbb
sbb
lret
inc
dec
sub
mov
xchg
dec
adc
shl
mov
leave
adc
and
out
das
rcrb
negb
mov
xchg
fsts
in
ficomps
push
fwait
shlb
roll
push
das
test
js
iret
dec
xchg
test
sub
sarb
xchg
dec
cmp
test
or
lds
pop
or
jg
out
xchg
dec
inc
xorl
jno
xchg
push
jbe
inc
sar
sbb
cmp
frstor
mov
mov
enter
mov
mov
test
sub
test
ds
push
and
cmp
lock
std
jp
inc
mov
adc
fldenv
jge
shrl
dec
dec
fdivrs
sarb
sbb
rcrl
shll
mov
je
test
ljmp
adc
cmp
jae
daa
fsubs
hlt
jmp
xchg
rorb
sti
sbb
std
je
pop
fcompl
call
dec
movsb
add
adc
frstor
mov
adc
sub
pushf
xlat
and
iret
pop
shrl
mov
push
xchg
and
iret
leave
in
fistpll
int
in
mov
stc
loopne
push
mov
lock
iret
in
mov
int3
sahf
call
dec
out
in
outsb
scas
das
das
and
daa
hlt
sbb
mov
mov
or
lret
dec
enter
sbb
dec
out
mov
aaa
inc
jmp
orb
stos
dec
or
sbb
loopne
cli
fildll
inc
lods
test
inc
mov
fcoml
mov
ljmp
jb
leave
xor
add
aaa
nop
xchg
adc
popf
xlat
xchg
mov
sbb
inc
fisttpl
call
add
pop
sub
loop
add
xor
mov
push
ret
xchg
jmp
cmp
add
and
jecxz
sti
jge
add
stos
inc
xchg
repz
fcomp
add
stos
enter
dec
xor
and
xor
fldcw
inc
pop
add
or
xor
jge
mov
rorl
faddl
ss
decl
cltd
hlt
ret
scas
pop
add
in
mov
ljmp
push
add
scas
cmp
xor
adc
mov
and
out
sahf
mov
popa
jg
scas
insb
or
push
cmp
push
fadd
negb
out
iret
cmp
ja
mov
sbb
mov
pop
ret
mov
rorl
push
enter
subl
mov
lahf
ljmp
int3
add
and
shr
fs
shlb
pop
lret
mov
xor
out
je
push
mov
sbb
sub
or
call
fdivr
push
insb
movsb
adc
daa
jae
out
push
aaa
cmpsl
aam
xchg
mov
imul
imul
and
cmc
push
xchg
shrb
push
push
cmp
inc
les
xchg
inc
aas
repnz
jne
adc
leave
repnz
pop
out
mov
es
fsubrl
cmp
xchg
les
fs
push
popf
pop
mov
mov
sbb
rcll
imul
subb
mov
xchg
test
in
cmp
jae
cmp
mov
sbb
and
divl
inc
push
cwtl
and
mov
hlt
mul
jle
mov
jbe
jno
or
xor
cwtl
mov
xchg
push
and
dec
or
cwtl
jl
mov
mov
mov
dec
mov
mov
cmp
push
xchg
mov
shll
lock
and
inc
insl
shrl
sbb
cmp
lea
inc
icebp
sbb
subl
add
cmp
std
inc
shrl
sub
mov
add
fidivl
lods
or
insb
and
inc
movsb
dec
test
lea
dec
test
jg
or
fstl
adcl
jge
jb
insl
decb
adc
rcrl
inc
cmp
adc
cmpsb
sbb
pusha
out
adc
push
jne
push
imul
and
popa
int3
test
jecxz
popa
adc
rorl
mov
pop
mov
scas
in
js
imul
sub
roll
std
out
jno
xorb
repnz
adc
ljmp
cmpb
jae
mov
arpl
aad
xor
dec
cmp
test
add
pop
mov
dec
loopne
pop
addr16
loope
arpl
push
lods
mov
hlt
mov
pusha
add
lea
js
pop
out
mov
stos
and
inc
jmp
dec
mov
push
loop
mov
jno
shr
and
xor
cmpsl
mov
xor
fstpl
int3
test
jae
in
pop
jne
xor
int3
mov
inc
das
scas
dec
sub
adc
adc
sbb
out
lret
pmullw
xchg
lock
mov
loope,pn
push
sbb
inc
fsts
test
pop
ds
mov
dec
cmp
leave
xchg
aam
inc
fs
fmul
jno
jb
fisttpl
cmp
sbb
in
xchg
push
add
add
imul
sahf
std
cld
pop
xchg
jno
jo
cmpsl
mov
test
sar
inc
sti
aaa
cmp
dec
loop
adc
or
pop
xor
jp
fiaddl
popa
out
push
lcall
fstp
enter
loopne
repnz
pop
mov
cltd
xchg
mov
or
int3
test
dec
dec
and
in
jbe
and
cld
mov
sbb
je
or
pop
lea
insb
inc
out
cld
mov
adc
jl
xchg
push
hlt
or
pop
or
jmp
push
test
xor
test
xor
in
adc
mov
mov
xor
ror
orl
js
mov
mov
dec
push
adc
jbe
adc
mov
in
cwtl
mov
cmp
inc
jge
daa
rcrb
push
sarb
jnp
pop
cltd
vmovaps
lods
jae
mov
call
dec
mov
xorb
dec
testl
cld
mov
vmwrite
xlat
mov
inc
cmp
push
cmp
scas
iret
or
repnz
clc
ss
cmp
mov
cmpl
add
pop
and
enter
lahf
cmp
popf
and
jg
push
and
push
mov
push
adcb
mov
leave
mov
scas
fdivl
xchg
ficomps
jg
pop
rolb
dec
push
dec
cli
cmpsl
lcall
fldenv
mov
aaa
decl
mov
in
gs
adc
into
ja
mov
lds
insl
shlb
inc
and
or
jbe
sbbb
sub
push
cmp
paddsw
rclb
outsb
fmul
pop
dec
mov
lret
add
and
and
dec
add
pop
out
insl
gs
add
mov
test
jnp
jnp
and
cli
cmpsb
mov
mov
ljmp
mov
or
sub
sub
pop
loop
lsl
cld
adc
push
cmpb
push
cmp
cwtl
sub
int
mov
dec
aad
popa
cmp
pop
stc
mov
mov
or
ljmp
cmp
out
shll
jb
es
cwtl
jmp
cmpsl
ret
inc
pop
jbe
xchg
mov
inc
test
cmpsl
adc
push
pop
sub
and
insb
sbb
xor
imul
insb
mov
testl
loop
scas
and
scas
test
or
lcall
dec
xchg
mov
pop
mov
filds
out
rorl
jbe
mov
sarl
out
mov
lret
imul
ljmp
scas
shll
mov
inc
lcall
sbb
xchg
mov
and
stc
cmp
and
xor
fnstsw
pop
dec
ret
xchg
lret
and
xor
add
leave
movsl
add
lahf
jmp
outsl
loope
cmpsl
movsl
cli
mov
mov
sar
clc
lret
aam
sbb
out
arpl
movsl
jae
adcl
pop
push
jo
push
shll
or
push
push
xchg
scas
outsl
sub
outsb
fs
jle
dec
repnz
js
lods
in
or
pop
cmp
mov
aas
sti
ds
repz
xor
mov
and
pop
dec
sbb
dec
insl
xchg
mov
jle
mov
xchg
ret
sbb
lret
dec
mov
lahf
bound
in
mov
insb
imul
gs
or
lret
add
mov
mov
aad
loopne
add
fcmovnbe
bound
imul
shl
mov
inc
pop
mov
mov
push
lret
es
out
push
mov
cs
cltd
xchg
cmpsb
sub
nop
nop
jns
xlat
mov
inc
mov
xlat
andl
std
mov
cwtl
mov
pop
jne
xchg
push
movsb
mov
adc
cmpps
xchg
rorb
cmp
rorb
sbb
dec
inc
test
andb
push
fcoml
dec
addl
cli
push
adc
loope
in
das
or
frstor
test
cmp
inc
aad
leave
fisubl
and
lods
in
and
leave
orl
mov
loope
lds
pop
mov
call
add
xchg
aad
movsl
pop
jne
jp
jecxz
push
insb
xchg
add
stos
mov
pop
sbb
data16
adc
push
mov
das
cmpsl
pushf
sarl
test
aas
sub
add
sbb
jne
pop
ja
pop
lcall
call
cmp
jle
adc
adc
add
add
clc
fmull
js
inc
lret
out
add
push
insl
jae
mov
sub
enter
or
add
mov
insb
mov
pusha
lcall
pusha
mov
push
fst
mov
jo
stc
jbe
jl
sti
pop
or
inc
out
inc
dec
mov
jae
orb
mov
jns
push
sub
rcll
mov
aaa
fnstenv
insl
mov
pop
inc
xchg
clc
pop
pop
dec
lock
jno
cmp
pop
notb
xchg
or
lock
loop
jno
inc
orl
pop
jl
sbb
ret
push
bound
sub
addr16
xchg
test
lcall
sbb
cmc
aad
dec
daa
and
loopne
jae
pop
push
pop
movsl
movsb
ljmp
add
bswap
push
inc
mov
xchg
sti
xor
inc
add
inc
mov
pop
aad
mov
imul
insb
or
xchg
test
mov
outsl
sub
jae
subb
rclb
inc
pop
or
out
mull
and
xchg
mov
das
dec
into
fisttps
push
jle
mov
push
and
fcomi
mov
pop
xor
cmp
rep
xor
xor
cltd
pop
and
jno
inc
cli
jle
mov
imul
cmpsl
ss
mov
sbb
sbb
inc
int
shrl
inc
adc
mov
aaa
into
in
stc
lods
out
lods
in
fstpl
inc
inc
adcl
or
push
ds
xlat
ret
sbb
jmp
xor
repz
std
jmp
vdivpd
aaa
jbe
pop
or
push
push
pop
sub
dec
call
jns
leave
or
imul
fidivrl
mov
fisttpll
ret
aas
cld
inc
das
or
xchg
sbb
out
pop
push
lret
repnz
and
cmp
adc
test
sub
xor
std
xor
in
addl
jae
or
shll
insl
or
push
inc
sub
fldcw
xor
data16
pop
sbb
pop
loopne
sub
cmp
dec
push
call
cmp
jge
and
pop
dec
das
aad
es
jb
xchg
add
out
cld
cld
popf
pop
int3
xor
xchg
sub
jl
pop
lds
sub
add
lret
lret
push
jae
inc
out
divb
imul
loop
adc
pop
and
das
and
xchg
jns
sbb
cltd
lods
into
stos
imul
out
mov
xchg
in
jl
cmc
jle
pushf
or
nop
xchg
adc
inc
adc
nop
insl
shrb
mov
cmc
add
call
and
xor
xlat
push
xchg
adc
sub
pop
cmpb
pop
out
fildll
pop
mov
pop
aad
lods
add
or
int3
hlt
cltd
mov
ja
add
cwtl
movsb
pop
push
adc
add
push
adc
jo
ljmp
cli
bound
adc
and
cmp
stos
cmp
test
int3
xor
shl
outsb
pop
push
sub
and
out
lcall
in
mov
or
and
ret
repnz
add
mov
mov
popa
jmp
into
sub
pslld
lret
dec
dec
mov
icebp
inc
cwtl
test
pop
cmp
cmp
gs
outsl
in
lods
clc
imul
out
insb
cltd
pause
or
xor
imul
shrb
stos
test
pop
inc
outsl
cmp
jg
dec
addl
ljmp
imul
jmp
mov
aad
addr16
int3
xor
mov
mov
int
xor
ret
movl
test
sarl
in
jo
cmp
dec
cltd
xchg
xor
in
mov
icebp
cmp
mov
mov
dec
xor
int
bndstx
dec
lods
pop
mov
add
insl
loop
xor
mov
stos
scas
cmp
mov
cmc
sbb
ror
inc
test
sbb
inc
in
and
fistpll
sub
popl
fists
mov
lods
mov
inc
mov
add
mov
push
hlt
mov
fwait
aam
jecxz
sub
dec
fmulp
bound
out
mov
jg
jmp
mov
jae
dec
aam
mov
mov
sti
loop
add
ja
aam
ret
pop
xor
loopne
and
mov
mov
ret
stos
arpl
jmp
je
and
sub
daa
fadds
mov
xchg
sub
inc
fidivl
out
mov
rclb
pop
cmpsl
cmc
lea
pop
jb
dec
xchg
xor
or
ja
inc
and
cli
out
xor
lret
in
into
jns
test
es
pop
inc
xor
mov
jecxz
rcrb
icebp
mov
rclb
xor
lods
gs
mov
and
xchg
jg
fnstsw
jbe
xor
shll
scas
mov
fisubl
fs
xchg
sbb
into
fimull
sti
jg
sbb
std
loop
xchg
mov
adc
in
xor
sub
xchg
mov
jp
call
dec
adc
mov
arpl
push
testl
mov
mov
cmp
mov
cmc
fcomps
xchg
push
cmp
jge
ficompl
ret
xor
test
mov
sti
mov
es
adc
cmp
scas
test
test
pop
mov
sahf
jno
mov
pop
inc
out
roll
fisubrs
cmp
jbe
inc
sbb
or
es
scas
or
cltd
mov
mov
sahf
mov
inc
test
pop
out
loop
cmc
fisubs
out
fiadds
fnstsw
sub
inc
int3
sahf
xor
stos
sub
push
jecxz
mov
jl
rorb
xor
jns
sub
cmpsb
rorl
pop
cmc
and
mov
sub
ss
test
out
in
and
divb
xchg
test
push
push
add
call
push
sub
sbb
mov
cmp
mov
fadd
push
insb
loope
sub
dec
mov
into
adc
out
mov
xor
rcrl
mov
loop
mov
loopne
xchg
mov
dec
adc
inc
add
loope
loopne
push
adc
aas
push
adc
sub
mov
aad
out
or
scas
sbb
ret
pushf
cld
je
and
lods
mov
repnz
cltd
bnd
dec
pop
popa
xchg
inc
cltd
push
cmp
sub
pushf
icebp
inc
push
push
pop
push
pop
scas
sbb
add
sub
or
aas
je
lock
shlb
insb
cmp
into
loope
inc
popf
idivb
int3
in
pop
mov
lods
out
adc
into
add
mov
xchg
or
xlat
jmp
push
mov
aaa
adcb
sub
lock
xchg
mov
je
out
inc
bound
pop
pop
dec
or
cmp
mov
andb
fs
xor
mov
jae
iret
or
mov
pop
xor
sub
cmpsb
cli
or
xchg
lcall
inc
enter
sub
sub
xor
xchg
mov
stc
cmp
jnp
fldcw
clc
jmp
into
dec
pop
dec
cwtl
sbb
dec
mov
sbb
pop
pop
xor
xlat
jle
or
add
mov
inc
out
jge
loope
sti
ja
lock
cld
rorb
adc
mov
test
outsb
dec
adc
inc
out
mov
outsl
xadd
or
inc
andl
add
jg
mov
xor
mov
popa
sbb
push
es
test
mov
ljmp
push
std
lcall
and
pusha
in
icebp
or
aaa
inc
test
fsts
push
arpl
jg
and
dec
test
dec
int3
fs
sub
aaa
test
mov
sbb
test
push
outsl
xorl
leave
sbb
popa
jmp
push
dec
xchg
sti
fistl
fs
adc
cli
pop
mov
pop
xlat
lea
repnz
dec
imul
test
add
cmp
mov
mov
add
leave
fidivl
push
fwait
add
jecxz
iret
jno
in
gs
cltd
sub
push
mov
popf
mov
test
nop
aaa
fidivrl
fidivrl
jge
push
into
outsb
popa
arpl
aad
pop
dec
push
cmc
cmp
loopne
xor
xchg
js
into
and
fwait
push
mov
jg
pop
dec
sub
popa
sub
jge
cmp
lock
dec
sbb
mov
cmp
js
push
pop
jne
push
mov
xor
test
mov
mov
mov
fistpl
push
jbe
pop
and
adc
cwtl
int
push
daa
xlat
jae
outsl
adc
xchg
inc
leave
sbb
fcompl
push
or
lods
bound
jae
sub
scas
outsb
in
jbe
inc
call
inc
stos
inc
ds
les
popf
sbb
xchg
jb
push
lods
add
add
sub
es
es
jle
test
std
in
mov
and
ja
stos
or
dec
mov
adc
add
inc
inc
add
ljmp
popf
push
or
cld
dec
stos
dec
push
test
sbb
inc
aad
jbe
or
in
fisubrl
add
pop
mov
push
sti
jle,pn
pop
mov
gs
ljmp
lods
scas
inc
fisubs
fadd
jnp
int3
ret
dec
scas
adc
and
xor
push
fdivp
mov
int
mov
pop
xchg
jne
dec
test
out
inc
aaa
dec
imul
rcrb
jne
jle
push
mov
stos
or
cmp
fwait
outsb
lret
in
movsl
fcmovu
push
out
jle
bound
inc
lods
mov
rcrl
cmp
enter
mov
popa
or
add
sub
push
xchg
js
daa
loopne
add
dec
ds
lahf
jnp
add
inc
xchg
mov
push
test
js
add
mov
stos
jno
outsl
dec
mov
in
jb
xchg
xchg
xchg
mov
cli
ja
cmp
out
rcrb
pushw
andb
hlt
jmp
notl
js
jmp
pop
ljmp
cmp
adc
cltd
pushf
xchg
sti
or
enter
mov
sahf
push
pop
sahf
test
push
inc
and
jb
sbb
jns
push
adc
testb
mov
ja
bound
lret
scas
xchg
add
and
clc
pop
xchg
or
repz
lcall
outsl
or
adc
data16
cmp
int3
inc
xchg
fbld
mov
nop
jb
aad
int3
out
jecxz
lret
movsb
and
lret
aas
adc
rcrb
xchg
sub
and
fisubs
ja
lds
adc
insl
out
xchg
pop
xor
pop
popf
dec
dec
mov
das
add
test
cwtl
lahf
movsl
add
stc
sbb
push
out
mov
ret
sahf
pop
pop
push
pop
shlb
adc
mov
das
mov
addr16
pop
cmp
adc
lea
test
leave
xchg
mov
test
inc
adc
sbb
fdecstp
sbbw
push
pop
push
add
cmpsl
popf
push
cmc
clc
mov
aas
mov
fldenv
pop
leave
hlt
lods
inc
popa
ds
jo,pn
bound
outsl
pop
cmp
lcall
int
mov
enter
lcall
pusha
mov
and
movsl
enter
sbb
cmpsl
test
sub
push
inc
test
push
push
out
sbb
cs
push
arpl
in
add
mov
jge
dec
cmp
adc
iret
cs
out
jnp
push
scas
orl
mov
enter
sub
or
aam
or
sbbb
lock
daa
loop
cld
jp
lret
pop
loope
xchg
aas
jb
clc
dec
xor
notl
dec
bswap
jo
mov
int
cmpb
mov
hlt
push
ljmp
ljmp
inc
xchg
xchg
push
addb
daa
adc
leave
lock
dec
and
pushf
dec
outsb
sbb
and
sub
in
or
ret
ret
arpl
sbb
pop
cmp
xchg
xchg
adc
and
cmp
pavgw
cltd
nop
daa
xchg
js
push
es
out
sarl
gs
and
ret
xchg
push
xchg
inc
sbb
int3
ja
cld
xchg
das
and
ljmp
ret
cmp
xchg
fwait
jp
sub
jecxz
xor
addr16
dec
cmp
push
ss
xchg
xchg
icebp
add
jo
inc
mov
add
push
aaa
mov
inc
cmp
inc
add
test
bound
pop
adc
pop
aad
stos
sbb
dec
pusha
and
daa
sbb
xchg
sbb
ljmp
inc
fs
inc
add
inc
int
mov
adc
loope
cmp
jp
mov
jno
or
icebp
mov
mov
add
subl
mov
test
push
lds
imull
mov
movsl
mov
aam
sahf
es
stc
cmp
fadd
pop
sub
ret
aad
dec
rcll
sub
add
inc
sbbl
sub
sub
sub
mov
test
add
inc
push
jp
ljmp
pop
mov
fnstenv
cmc
jmp
jne
cs
jnp
add
pop
addr16
arpl
cmpsl
pop
push
nop
jns
mov
repz
ss
inc
ret
push
popa
roll
sub
inc
add
sbb
jns
movsl
and
sahf
addr16
lock
sbb
lea
adc
inc
imul
push
add
mov
lcall
inc
xchg
mov
movsl
es
mov
fistpl
jle
dec
rorb
ret
cmp
and
mov
pop
imul
xorb
sbb
fiaddl
ljmp
mov
pop
testl
cli
dec
je
ja
loop
xor
mov
iret
repz
dec
les
enter
or
inc
dec
lods
fcoml
stc
adc
lfs
xor
xchg
jg
insb
jecxz
adc
mov
mov
and
fists
mov
xor
lret
pushw
xchg
ss
addr16
and
bound
xchg
int
hlt
xchg
cmp
mov
lock
loope
int
loope
mov
sub
mov
stc
mov
adc
adc
dec
xchg
push
test
mov
dec
adc
push
push
lcall
pop
jle
dec
fst
jp
pop
and
inc
cmp
add
not
stos
int
loope
cli
inc
dec
cwtl
sub
jmp
push
sub
xor
sbb
mov
sbb
and
aam
jge
lret
mov
in
test
xor
jnp
adc
nop
dec
ds
popa
or
or
cmp
cmp
pusha
xchg
jl
shlb
or
mov
push
pop
scas
sub
pushl
stos
cmpsl
movsb
or
aam
jo
aad
jp
or
jge
adc
pop
rcl
mov
pop
arpl
push
andl
inc
pop
sub
xchg
int
cmpsl
loope
imul
shlb
sub
lret
cmp
jae
mov
nop
call
popa
dec
inc
ds
sahf
js
push
cmp
loope
sub
pop
into
or
shrl
bound
out
push
mull
cmp
inc
xor
pop
iret
inc
xchg
daa
sbb
cmp
and
jo
rol
lcall
sub
sti
pop
sbb
or
lahf
fwait
jo
lea
shl
jg
mov
lds
lcall
add
outsl
xchg
sbb
cmp
jg
loopne
mov
mov
shlb
adc
push
out
pop
dec
jg
lcall
dec
or
mov
rcrb
jmp
daa
mov
xchg
testl
out
push
cmp
pop
int3
xor
gs
xchg
imul
push
xor
fmull
lcall
stc
xor
xor
repnz
cmpl
cmp
cmc
dec
pop
aam
ret
or
xor
cmpsl
jns
dec
imul
fadds
outsb
bound
mov
dec
adc
outsl
cmp
imulb
mov
notb
ss
loope
jp
or
xchg
test
push
insl
int
popf
pop
add
stos
into
test
jae
test
insl
pop
inc
repz
jbe
mov
scas
cmp
and
cltd
dec
xor
jg
and
loope
and
std
mov
inc
push
jge
sti
push
add
dec
mov
lret
aas
loopne
push
pop
mov
add
imul
mov
xor
inc
lret
add
sar
mov
aam
orb
out
or
loope
xlat
cmp
xchg
or
pop
inc
mov
sbb
aam
sbb
leave
sub
adc
mov
into
xor
arpl
xchg
mov
mov
fs
mov
xchg
dec
repz
cwtl
mov
outsl
nop
ja
pop
cmpl
aad
add
in
mov
stos
xor
rcll
xchg
mov
xor
add
or
rclb
cmpsl
sbb
lret
pop
inc
cmpsb
xchg
ret
mov
rcl
jo
cmp
jo
shrl
dec
sarl
neg
aad
or
loopne
ljmp
test
lret
pop
movb
ljmp
mov
andb
or
ss
stos
add
hlt
js
fdiv
mov
ret
mov
repnz
cmpsl
jecxz
push
rclb
push
jae
lcall
fs
insl
imul
jl
out
test
gs
xchg
sti
adc
shll
mov
mov
sbb
mov
pop
adc
das
out
add
cmp
push
lock
dec
dec
ljmp
in
bound
lret
sub
in
call
stos
add
push
outsb
cmc
scas
rcrb
rclb
and
push
sbb
nop
stos
stos
push
cltd
jle
cwtl
inc
popa
cltd
notl
addl
repz
mov
mov
addb
xchg
xchg
cwtl
insb
data16
mov
insb
sbb
mov
fldl2t
cmp
inc
lea
lcall
aam
cmpsl
dec
or
jno
jge
or
jns
dec
xchg
sahf
cmc
loopne
or
push
cmp
fwait
mov
stc
shll
add
ret
filds
and
dec
mov
test
loopw
or
cmc
or
sbb
lret
inc
mov
dec
lods
call
nop
imul
dec
loope
adc
jmp
mov
aaa
pop
outsl
insb
cmp
inc
lret
ljmp
mov
in
adc
subl
insb
iret
sbb
sbb
sahf
adc
xchg
incb
jno
push
stos
push
adc
std
loopne
push
daa
movsbl
adc
fnstcw
pop
shlb
int
icebp
mov
pop
les
orl
movsb
jns
add
bsr
pop
jne
cli
xor
pop
cmp
add
and
ret
daa
ja
insb
cld
pop
add
nop
jp
jg
pop
mov
mov
mov
sbb
pop
mov
sbb
mov
gs
push
mov
mov
popf
add
outsl
mov
test
mov
mov
cmp
add
adc
into
inc
xchg
aaa
mov
decl
push
lret
jb
or
sbb
and
mov
jmp
or
ret
jno
jae
dec
add
lods
pop
sbb
or
xor
pusha
mov
pop
xor
outsl
and
xor
lods
mov
push
add
out
out
and
push
xchg
mov
sbb
dec
out
insl
in
lds
dec
data16
lret
lods
out
mulb
mov
stc
sub
out
xor
outsb
adc
pop
subl
popa
call
cmp
adc
fisubrs
or
mov
push
jno
sahf
orb
mov
ret
cmp
inc
or
lods
lea
xor
mov
xchg
into
bound
je
adc
stos
sub
mov
sub
mov
lods
add
adcl
ret
mov
jmp
leave
lret
fistps
xchg
pop
add
jb
push
push
into
aas
cld
inc
xchg
ret
xor
in
pop
testl
sbb
sbb
mov
fistpl
cmp
out
mov
mov
mov
cltd
inc
add
jne
in
loop
mov
adc
lcall
pop
add
add
jmp
orps
cmp
push
inc
aaa
cmpb
dec
stos
out
icebp
fmull
decl
jecxz
stos
xor
jbe
fisubrs
cmp
xor
popf
xchg
test
pop
cwtl
pop
push
xchg
cmpsb
inc
pop
mov
lea
adc
xlat
mov
mov
leave
sbb
add
sbb
pop
int
jb
lea
divl
mov
xlat
fstps
test
mov
popf
or
inc
mov
inc
repnz
mov
out
xchg
add
clc
out
cld
xor
jp
push
imul
lods
mov
leave
cs
divb
clc
call
mov
xor
popf
push
jg
lods
pusha
ljmp
pop
mov
xchg
jo
jo
hlt
call
cmp
mov
or
pop
or
ret
gs
push
xchg
filds
cs
sub
mov
add
and
out
int
jge
gs
adc
mov
jecxz
xchg
inc
pop
dec
jecxz
les
aad
dec
and
hlt
daa
push
xchg
fcompl
cmp
jp
xchg
shl
xchg
or
mov
pop
push
jbe
sahf
cmp
ficoml
sub
jbe
loopne
aas
imul
and
xchg
mov
je
pushf
xor
cmpsl
bound
inc
xchg
and
cmp
lods
cmpsl
mov
jne,pt
bndstx
in
cmpsl
push
mov
sbb
in
out
in
mov
xor
or
movsb
push
push
rcr
aam
push
sbb
or
xor
jmp
aam
and
add
push
ss
mov
add
outsb
stos
gs
lock
xchg
pop
xchg
xchg
insl
ja
movsl
adc
jno
cwtl
jl
pop
add
aam
xor
lret
or
lret
aas
add
add
cld
xchg
jnp
xor
jecxz
mov
mov
imul
cmp
leave
loop
lea
stos
and
ss
cmovne
in
adc
cwtl
push
mov
add
sub
mov
cmpsb
js
xchg
jecxz
fists
inc
data16
sub
nop
repnz
mov
aaa
out
imul
add
lahf
mov
xchg
test
ja
lret
push
popf
pop
inc
inc
pop
sbb
cli
push
dec
pop
movsl
jg
jle
lods
mov
icebp
or
fs
mov
outsl
cmp
pop
fcomps
fldcw
cmp
pop
jae
mov
push
stc
clc
es
ja
dec
call
push
outsl
jp
mov
fidivs
lods
push
dec
mov
sub
pop
fwait
xor
xor
xor
or
lahf
int
in
jbe
cltd
cli
repnz
es
and
mov
test
xor
mov
mov
shl
push
cltd
rol
xorb
mov
fisubrl
pop
je
loop
push
pop
insl
adc
xchg
stos
dec
pusha
fmull
add
xchg
outsl
iret
out
fnstsw
xor
ss
jo
jg
sbb
cmp
and
adc
neg
lock
js
jae
addr16
pusha
cmpsl
push
push
adc
insl
and
jmp
add
int3
in
enter
jb
adc
jo
jle
or
add
sbb
cs
mov
test
imul
xchg
sub
mov
movsl
pusha
xchg
movb
adc
shl
push
into
outsb
push
ds
or
mov
push
or
and
aam
lea
loopne
push
jl
aas
inc
push
sbb
clc
cs
inc
daa
iret
xchg
dec
jnp
inc
incb
fwait
jmp
lds
jb
pop
inc
pop
xchg
mov
cmp
mov
repnz
push
inc
or
xchg
sbb
mov
sti
xor
or
daa
dec
mov
mov
mov
jp
pop
call
jg
and
sahf
mov
rcrb
push
sahf
push
inc
adc
aad
push
mov
pop
adc
adc
into
je
jno
jge
dec
inc
repnz
cmpsb
sub
mov
popl
pop
xor
movsb
shll
not
pop
cmp
lds
ss
jb
aaa
fidivrl
adc
pop
cmpl
push
mov
test
or
cmp
mov
push
sbb
fildll
dec
or
in
js
push
sub
call
mov
fnsave
mov
clc
adc
inc
push
adc
ljmp
enter
pop
into
bound
es
jbe
dec
gs
xchg
xchg
pop
mov
scas
pop
hlt
test
xchg
sub
ret
xorl
pcmpeqd
iret
pop
xor
mov
and
leave
bound
jb
arpl
adc
fwait
mov
and
fstpl
mov
mulps
shlb
pop
out
pop
sbbl
xor
mov
insb
inc
push
lea
jl
inc
push
push
lahf
mov
mov
or
lcall
mov
mov
xchg
movsb
add
rcrb
sbb
push
xor
push
fsts
adc
xchg
rcr
mov
dec
loopne
andb
or
pop
fwait
nop
rorb
cwtl
hlt
ds
mov
dec
pop
inc
sbb
scas
jno
push
add
jae
and
jp
mov
push
jp
mov
mov
aaa
mov
and
dec
mov
test
and
mov
cmp
movsb
or
out
mov
dec
into
mulb
cmp
add
or
fisubrl
pop
push
int
aam
sub
or
adc
lods
jecxz
loop
jbe
jmp
pop
ljmp
dec
sub
xchg
xor
pushf
movsl
lea
dec
mov
insb
dec
pop
inc
call
jl
push
mov
outsl
lret
mov
gs
int3
out
mov
pop
daa
jb
jge
jno
jmp
or
idivb
aas
rcr
push
and
incl
insb
mov
add
stos
adc
or
dec
push
call
jp
test
scas
xor
sbb
orb
mov
xor
sub
push
and
lret
mov
cli
inc
fldt
dec
adc
and
inc
mov
jb
mov
shl
mov
out
stos
repnz
push
orl
mov
push
idivb
out
push
xor
mov
push
lods
mov
adc
repz
adc
pushf
and
lods
scas
push
cmpsl
cmp
jno
mov
cs
dec
jno
mov
cmp
jns
out
jg
xchg
jne
dec
aaa
adc
dec
ljmp
lret
xor
cmpsb
aas
push
dec
pop
test
xchg
decb
dec
imul
mov
insl
inc
js
mov
dec
nop
xchg
inc
cmc
lahf
inc
pop
out
adc
out
sbb
sbb
arpl
nop
cmpsb
adc
outsl
and
les
xchg
in
sarb
stos
scas
cmc
mov
inc
in
xor
add
dec
jl
movb
shll
lods
sar
dec
cmp
lock
or
lods
jo
jne
jno
add
or
fldl
addb
or
daa
addr16
rorl
xchg
std
stos
shrb
push
cmp
rcll
cmp
addr16
pop
loope
sbb
cwtl
pop
jp
adc
fwait
dec
iret
mov
push
adc
in
dec
inc
lret
mov
vmaxss
clc
ret
sub
not
sub
mov
inc
hlt
loope
pop
stos
lcall
hlt
jmp
stc
testl
into
pop
adc
loopne
rclb
loope
lds
popf
ret
ret
pop
xor
in
mov
insl
xlat
inc
dec
mov
fnsave
es
cmpsb
sub
aad
insb
mov
push
cmp
fs
out
push
jne
lea
repnz
fs
mov
cmpsl
sbb
int3
cli
aaa
leave
filds
push
out
fs
mov
stc
iret
insb
rcll
jle
or
rorb
sahf
les
aaa
inc
shll
dec
pop
jne
sbb
outsl
incb
cli
xchg
andb
lock
xor
fsubrp
fs
and
cmp
xchg
in
call
mov
pop
bnd
dec
fs
lcall
out
mov
in
dec
cmp
dec
sbb
dec
fucom
mov
das
sbb
mov
xchg
cwtl
imul
mov
ja
inc
js
das
dec
xchg
dec
xlat
mov
xchg
lcall
lods
xlat
mov
cs
pop
mov
aas
std
cltd
cli
stos
sub
gs
popf
mov
out
fcmovu
lock
popa
xlat
arpl
sub
adc
int3
fadds
sbb
and
jmp
daa
insl
xchg
repnz
dec
xor
lods
fwait
jg
sbb
push
test
loop
mov
mov
sbb
lock
cmp
cmc
ja
jecxz
bound
cmp
int3
xor
or
sarb
xchg
rcl
popf
ror
scas
jns
mov
jl
mov
dec
or
push
sbb
fsubp
fs
mov
xor
out
fwait
jo
sti
daa
popf
sub
push
fisttpl
add
out
js
hlt
outsb
pushl
fstpl
loopne
shl
dec
in
mov
jecxz
xchg
movsb
call
lods
data16
test
jb
pop
movsb
and
ret
fs
mov
and
xchg
jo
lahf
push
int3
adc
lods
cmp
dec
xor
cs
push
in
sbb
cld
std
xchg
cmp
imul
push
cmc
add
dec
cmp
mov
les
add
inc
mov
cwtl
enter
loope
mov
add
push
or
in
push
inc
out
pop
mov
xchg
dec
mov
sub
push
add
nop
leave
ljmp
push
imul
xor
scas
cs
adc
push
lods
das
cmp
cmpb
scas
and
or
imul
std
mov
inc
cmpsl
mov
jp
cmp
cmpl
shlb
sub
popa
fs
imul
shll
jp
cmp
cmovp
rcrb
add
sbb
jae
insb
xchg
xchg
mov
xchg
scas
in
mov
insb
push
fsts
and
xchg
aad
mov
in
pop
shlb
adc
sti
fptan
jmp
dec
lcall
enter
rol
imul
in
pop
inc
lods
or
xor
scas
std
sbb
push
sub
jno
clc
pop
mov
lods
into
insl
aas
and
or
push
or
sbb
jne
mov
cs
add
cmp
push
insb
mov
sbb
fidivrs
fs
imul
repz
push
popf
cltd
xchg
cmp
inc
jg
scas
push
and
addr16
std
jg
and
pop
add
sub
mov
xorl
cwtl
xchg
fdecstp
out
inc
insb
add
jae,pn
cs
fstl
xor
xchg
enter
dec
sub
dec
loopne
cmpsl
scas
or
test
push
xchg
movl
std
jl
into
les
cmpsl
out
lds
add
rorl
mov
aad
dec
inc
dec
frstor
xchg
cmpsb
xchg
jge
test
inc
lods
jnp
jns
fs
jge
iret
or
loope
sub
push
pop
inc
jmp
jne
xchg
sbb
or
hlt
scas
cmp
outsl
xchg
cmp
movsl
lret
mov
into
andb
xor
mov
and
mov
sub
loopne
pop
pushf
dec
outsl
les
data16
loopne
jae
adc
mov
push
nop
mov
mov
lcall
ja
in
push
lcall
add
stos
insl
cmp
adc
pushf
jl
cmp
jp
pop
pop
adcb
das
or
pushf
gs
add
mov
adc
cmp
push
mov
ds
sub
xor
iret
outsl
cwtl
test
orl
std
sbb
mov
adc
mov
fucomp
xchg
outsb
jno
nop
rcrl
add
xorb
sbb
test
cld
jl
xchg
add
shrl
pop
fs
lcall
and
fsubl
popf
or
scas
movsl
adc
mov
clc
pushl
cmp
lcall
cltd
mov
loop
pushf
xor
dec
cmc
fs
cmp
sbb
mov
cmpsb
fisubrs
jbe
inc
insl
mov
push
fisubrl
mov
aad
and
fnstenv
test
or
pop
iret
mov
data16
pop
shr
fisubrs
inc
jmp
out
in
pushf
sub
adc
jl
cmpsl
movsb
int
int3
xor
push
pusha
fadds
inc
and
inc
sub
or
or
lods
mov
lods
mov
roll
insl
in
mov
xchg
iret
mov
xorl
mov
mov
aad
xlat
jmp
sarl
mov
xlat
dec
pusha
popf
out
jmp
cltd
jae
cli
mov
jmpw
inc
in
add
dec
outsb
and
mov
pop
or
fwait
lret
mov
cmp
lea
aas
and
jecxz
xchg
adc
js
enter
and
cmp
or
xchg
jge
orl
cli
push
or
dec
xor
movsb
inc
test
jne
ss
xchg
ret
es
push
and
mov
xor
inc
in
in
in
mov
movsl
dec
mov
lcall
sbb
popf
inc
add
loopne
or
sbb
faddp
xchg
out
sub
rcrb
jl
xchg
scas
xor
fld
data16
shlb
mov
imul
cs
popa
rorl
sbb
fidivrs
scas
xchg
icebp
jo
idivl
loopne
nop
lahf
popa
in
repnz
mov
decb
mov
mov
bound
or
cli
cld
mov
movsl
rcrb
js
cmp
push
sbb
lods
add
mov
dec
fwait
xor
inc
test
cli
popf
and
aaa
xor
xchg
lahf
pop
mov
pop
sbb
out
ja
mov
loopne
inc
mov
inc
repz
pop
cs
pop
lcall
lcall
xor
xlat
int3
pop
add
sbb
js
adc
add
shlb
and
popw
or
fsub
xlat
mov
sbb
shrb
and
adc
nop
sub
and
jno
jns
out
or
incl
mov
sti
fucom
push
imul
pushf
dec
mov
adc
adc
inc
inc
fmuls
push
aaa
fcomip
pop
or
cli
xchg
sbb
pop
adc
icebp
lods
xor
dec
inc
lret
sbb
or
adc
aam
outsb
rcl
cmp
stos
jmp
cmc
std
bound
adc
inc
insl
lods
mov
out
pop
push
pop
in
sub
test
push
pmaxsw
push
or
cmpsl
pop
cltd
loop
sbb
insl
jecxz
inc
scas
xlat
and
jb
hlt
ja
paddsw
mov
addr16
sti
std
sbb
in
lock
fisttpl
dec
clc
dec
fstps
loope
mull
adc
dec
fs
jge
sbb
mov
mov
pop
gs
jb
pop
arpl
xor
out
jbe
in
inc
mov
xchg
shr
sbb
sahf
add
push
iret
or
je
pop
and
es
sbb
jp
fbld
xor
sbb
sbb
out
pshufw
jb
mov
enter
lahf
add
into
sti
ljmp
scas
popa
mov
out
add
pop
and
mov
adc
jno
sub
fucom
lods
fidivl
xchg
xor
imul
loope
int
popa
or
stos
dec
mov
and
sub
cmp
divb
jp
cwtl
jb
sbb
stos
cmpsl
sahf
xchg
jbe
sbb
mov
test
roll
insl
fs
movsl
ljmp
push
out
outsb
inc
not
xor
popa
out
dec
mov
mov
sahf
or
cld
dec
jns
pushf
dec
roll
sub
mov
pop
xchg
mulb
int
jno
jmp
loope
jmp
lock
inc
mov
das
push
adc
push
push
push
dec
push
xchg
mov
push
xchg
jp
imul
nop
dec
jno
push
rolb
push
sub
iret
andb
sti
push
and
je
ret
xor
pop
mov
or
jecxz
xor
insl
cmpsl
jle
push
mov
or
xor
jae
out
xchg
test
outsb
ret
pop
xchg
test
add
and
pop
and
pop
enter
stc
mov
or
push
push
stc
cmpsl
xchg
mov
jmp
inc
and
into
lret
jns
rcrl
pop
mov
outsb
fwait
ret
fsubrs
ret
mov
out
stos
mov
push
and
jo
sub
dec
int
jbe
int
mov
xchg
sti
push
adc
dec
mov
scas
shlb
or
js
mov
xchg
fmull
nop
cli
sub
cmp
leave
outsb
insb
or
xor
or
imul
dec
xchg
cmpsl
mov
ret
cs
subb
divb
outsb
cld
cli
push
pop
sub
lret
lret
or
outsb
jmp
mov
test
in
andb
jecxz
not
imul
mov
lret
pop
mov
pop
xor
inc
ja
sarb
sub
cmp
test
pushf
cmpsb
fstpt
pop
dec
mov
shll
lods
mov
push
std
dec
mov
dec
cld
fmul
out
xchg
insb
aaa
lret
xchg
mov
insl
xchg
inc
sub
or
sub
shll
pop
sub
jp
jb
icebp
xchg
pop
mov
adc
jg,pn
pop
idivb
outsb
aad
imul
dec
cmp
int3
adc
xor
leave
jmp
add
repnz
addr16
fistpl
inc
sti
pushf
jle
insb
out
push
dec
add
xor
add
arpl
in
ret
adc
pop
repz
mov
rcll
leave
pop
lret
and
sbb
outsl
cmp
mov
lea
pop
pop
in
fistl
leave
cmp
dec
mov
pushf
cmp
mov
lret
pop
push
dec
xchg
ret
dec
je
testb
jp
imul
mov
cmc
movsl
in
ja
insl
stc
pop
or
fldt
lods
enter
sbb
dec
pop
mov
jno
pop
pop
push
pop
push
pop
adc
mov
or
aaa
in
data16
inc
jns
popf
jge
jnp
inc
mov
divb
mov
sbb
fisttpll
dec
or
inc
push
inc
inc
and
dec
push
mov
pop
bnd
repz
out
mov
or
cmp
cmpsb
rorb
iret
cmc
inc
das
push
es
jmp
xchg
mov
sub
inc
call
or
and
adc
inc
aam
pop
push
stos
hlt
jnp
mov
cmp
jbe
ret
mov
inc
pop
jmp
sti
cmpb
stc
adc
sub
loope
add
in
lock
icebp
out
aaa
xchg
push
sbb
sbb
xchg
aas
cli
stc
sub
cmc
out
rcrb
pop
pop
addr16
pop
lcall
inc
mov
aam
mov
xchg
inc
leave
inc
rcll
xor
xchg
sub
jg
or
fidivs
scas
loop
mov
test
xchg
bnd
mov
mov
jb
jbe
divb
cli
dec
loop
dec
or
sti
outsb
pop
outsl
pop
cs
lret
ror
sub
mov
inc
lret
out
mov
cmp
faddl
lock
jmp
and
cmpsb
sub
xchg
out
and
test
paddd
add
jp
sub
movsb
jle
jg
xchg
fildll
or
adc
int
pop
xor
push
pusha
mov
test
iret
cwtl
scas
push
addr16
fnstenv
ret
idivl
mov
call
shrl
mov
xchg
aas
jmp
iret
dec
popf
inc
test
push
shlb
jne
mov
cmp
dec
test
pop
xchg
int3
add
ret
mov
mov
push
cmp
inc
pushf
sub
inc
test
inc
in
cmp
dec
xor
lea
push
daa
pusha
jno
push
imul
sub
cmp
loopne
jge
loopne
or
sub
pop
mov
cmpsb
mov
sub
pop
out
outsb
or
push
faddl
and
push
iret
adcb
fsubrl
cld
add
push
sbb
mov
mov
pop
pop
fimuls
pop
cmp
std
arpl
xor
and
xor
push
cmp
and
jg
out
sti
or
mov
and
cmp
fcomps
loopne
into
insl
imul
inc
sahf
outsl
cmpsb
shrl
pushf
lds
jnp
sti
cmp
mov
insb
xor
int
mov
movsb
or
sbb
sti
push
cmp
movsl
ja
icebp
cltd
or
jge
push
sahf
inc
dec
jmp
idivb
cmc
jae
mov
push
mov
movsb
movsl
pop
and
lret
in
xchg
sahf
shrl
fsub
dec
or
jb
pop
mov
mov
xlat
pop
test
and
mov
in
xchg
mov
xorl
insl
pop
mov
pop
pop
aam
in
pusha
enter
cmp
aad
je
ja
out
fisubs
adc
pushl
xchg
out
push
mov
sbb
sbb
mov
ficompl
dec
addl
test
icebp
sahf
jb
mov
stos
mov
adc
jl
or
or
push
movsl
cmpsb
mov
adc
imul
pop
jmp
mov
jne
jo
lods
in
pop
scas
icebp
xchg
mov
sub
pop
mov
ret
test
sbb
dec
rclb
pop
and
les
stc
cmpsb
iret
rcll
jnp
cltd
jbe
adc
ja
adc
mov
adcb
rcrb
sarl
shlb
repz
js
fsts
cmc
neg
add
dec
aaa
xlat
shll
out
inc
rcr
and
mov
sbb
pop
push
mov
aam
cmp
jb
jp
mov
add
xor
call
sbb
xchg
mov
and
sub
dec
sbb
loopne
fcompl
jo
std
xor
mov
xchg
lds
inc
xor
mov
dec
add
popa
ljmp
push
xor
int3
cld
push
pop
or
adc
arpl
push
lock
jno
out
bound
adc
or
sbb
das
cs
in
test
fisubrs
and
mov
xchg
xchg
push
pop
cmp
mov
shlb
and
in
repz
and
cs
pop
incb
imul
and
mov
stos
jnp
sahf
cmpl
icebp
call
sub
pop
cs
xor
scas
in
mov
dec
cmp
or
addr16
sbb
sub
lret
sbb
jne
and
hlt
aad
add
jne
jns
rcrl
jno
jp
enter
push
lock
sti
pusha
xorb
enter
nop
in
repz
and
push
xchg
fnstsw
scas
mov
iret
mov
mov
jmp
bound
pusha
inc
les
loope
pop
pop
pop
clc
mov
and
add
stc
outsl
lock
test
sub
shlb
arpl
popa
dec
bnd
rorl
inc
loope
cmp
pop
mov
adcl
or
cmc
pushf
xchg
outsl
das
imul
cmp
shlb
push
les
test
xchg
mov
jl
jo
arpl
iret
cwtl
xchg
jecxz
call
dec
pop
js
mov
push
mov
dec
add
or
movsl
jge
cmp
sub
in
adc
xor
out
or
fnstenv
orl
fdiv
pop
adc
mov
imul
mov
jmp
lds
lahf
mov
mov
adc
and
nop
fldcw
jae
cmpsb
sti
pop
sub
mov
adc
loope
jo
bound
scas
imul
sbb
xchg
mov
xor
pop
lea
or
outsb
cwtl
mov
icebp
arpl
cmp
adcl
xchg
cmp
pop
das
popf
rclb
loopne
adc
es
and
add
inc
dec
inc
add
xor
out
or
xor
daa
adc
pop
stos
xor
xor
or
out
inc
adc
xor
mov
lea
or
aad
sbb
inc
xchg
cmp
stos
inc
je
cmp
and
cmpsb
or
push
jno
and
xlat
push
aas
xchg
lahf
enter
xorl
ja
loope
roll
add
adc
jae
in
pop
popl
in
cmpsb
push
in
and
sub
sbb
mov
iret
mov
mov
imul
arpl
dec
sti
iret
push
inc
data16
push
or
sbb
push
loop
xchg
jle
jnp
fisttpl
in
jo
outsl
inc
nop
popf
clc
int3
xchg
adc
cmpsb
xchg
xchg
push
arpl
jp
xchg
fldt
dec
in
mov
dec
and
cmp
xchg
fadd
sbb
rclb
sbb
or
sbbb
cmp
and
std
or
lods
mov
inc
aad
sti
dec
insb
xchg
js
js
cmp
mov
xchg
push
inc
xchg
xchg
adc
or
mov
sbb
scas
rorl
cmp
cs
lret
test
mov
dec
mov
mov
repnz
xchg
xchg
cmpsb
jnp
cmpl
sub
insl
sbb
sti
enter
shl
ret
lret
mov
jns
ret
xchg
mov
rcrl
jmp
jmp
jno
cwtl
mov
lods
mov
inc
mov
inc
xchg
add
adc
incb
fisubl
inc
outsb
adcb
fisubrs
call
pop
push
sub
push
inc
dec
mov
adc
dec
hlt
pop
incb
and
in
div
push
scas
ret
mov
fcomps
popa
mov
pop
xchg
aam
mov
aad
dec
out
shlb
mov
loopne
xchg
inc
dec
xor
push
adc
arpl
std
push
jbe
leave
mov
mov
push
mov
jae
cs
jmp
and
shl
rcrb
dec
orb
jnp
and
add
mov
add
hlt
lds
mov
or
mov
dec
into
sub
aas
sbb
mov
outsl
sub
mov
inc
mov
pop
pop
jmp
arpl
nop
sub
ja
pop
or
and
pusha
test
jno
pusha
bound
ja
lahf
mov
cmp
mov
sub
cmp
stc
jmp
push
clc
dec
add
xor
mov
repz
add
lahf
dec
or
adc
push
xchg
sub
insl
and
aas
lret
pushf
arpl
or
fnstcw
popa
imul
les
add
jns
sbb
shrb
mov
ret
out
and
imul
dec
in
sahf
xchg
das
out
sub
xchg
mov
incl
or
gs
frstor
jb
cmp
das
inc
and
fnsave
lret
and
loopne
fsubl
inc
aaa
xor
movsb
rclb
add
stos
dec
fadd
outsl
push
gs
xor
pop
bnd
xchg
iret
or
mov
cld
cmp
cmp
add
jge
adc
rsqrtps
xlat
adc
mov
mov
add
cmp
outsl
rolb
jns
push
fbld
popf
dec
mov
inc
pop
lcall
jle
stos
cmpsb
lods
adc
mov
add
pop
sub
mov
divb
push
iret
mov
cmpsl
mov
push
les
mov
pop
add
jmp
xchg
stos
pop
or
or
in
pop
xor
mov
or
call
lods
inc
iret
cli
mov
xor
sbb
daa
inc
or
popw
in
rcll
push
sbb
movsb
dec
push
inc
dec
mov
sbb
cmc
add
inc
xor
aad
push
xchg
mov
jno
std
pusha
lds
mov
and
jmp
jecxz
push
dec
push
mov
jle
bound
pushf
into
adc
cmp
xor
cmp
mov
add
inc
imul
mov
and
inc
xor
mov
test
mov
lods
addl
mov
into
scas
add
aad
push
dec
nop
mov
in
jl
ret
sub
push
jae
mov
xchg
iret
sbb
add
in
fcoml
loope
popl
rcrb
or
loop
out
clc
outsl
mov
xorb
jecxz
pushf
fisttpll
out
das
inc
cmp
in
mov
sbb
out
pushf
ss
mov
ljmp
pushf
push
pop
add
lret
lret
lcall
mov
leave
jbe
gs
dec
dec
hlt
test
push
jne
fnstenv
pop
shlb
stos
inc
mov
repnz
rol
shlb
sahf
inc
add
hlt
mov
xor
rol
mov
mov
xchg
imul
ret
repz
sbb
cmp
inc
inc
hlt
push
sarl
in
jb
orl
mov
cmp
subps
xor
mov
jne
jg
enter
fcmovnbe
pop
and
or
fstpl
sbb
cmp
movsl
das
or
and
orl
shlb
and
xchg
rorb
mov
mov
sub
daa
xchg
xchg
add
mov
and
hlt
mov
stos
jns
loopne
inc
mov
jns
gs
xchg
add
fnsave
out
jge
xchg
fldcw
fbstp
jb
movsl
dec
repnz
inc
and
sbb
imul
mov
pop
push
cs
incb
lret
cmp
cwtl
adc
mov
popa
stos
mov
fdivs
sub
dec
hlt
test
fsts
pop
in
xchg
frstor
rcrl
mov
xchg
or
in
fs
int
cmp
into
push
dec
cmpsb
dec
clc
leave
jg
push
jns
mov
mov
mov
xor
cwtl
push
mov
add
push
cmpsl
pop
jg
pop
push
inc
or
outsb
insb
jl
in
sub
mov
sti
mov
dec
insl
in
in
enter
xchg
push
push
mov
les
mov
fld
xlat
lret
fistps
dec
js
xchg
push
fcmovnbe
or
lret
lds
jl
scas
sar
sub
cli
sbb
rorl
popf
push
mov
cmp
inc
imul
pop
bound
mov
es
ja
cwtl
lcall
es
lret
sbb
test
cmp
cmp
add
fs
mov
push
xchg
inc
fdivrs
dec
sahf
jmp
sbb
pushf
cmpl
cmp
xor
pop
add
aad
cmpsb
adc
stc
enter
jge
adc
push
mov
mov
xchg
repz
ret
in
outsl
outsb
ds
jg
xor
in
add
sbb
sar
repnz
pop
sbb
sub
jae
mov
movl
dec
scas
pop
ss
arpl
sbbl
jno
push
popf
dec
roll
ret
jecxz
push
push
xchg
jne
fdivrs
mov
mov
lret
jle
dec
int3
dec
in
or
or
sub
mov
ss
sti
and
jge
or
jp
pop
aad
jnp
rcl
movsl
fwait
cli
enter
loop
inc
shlb
subb
shrb
int
inc
mov
int
ja
notb
adc
fscale
and
push
aaa
inc
incl
mov
jno
sub
sub
or
sbbb
ret
pop
xchg
das
lods
or
outsl
cmc
fbstp
sub
das
mov
aad
loope
outsl
mov
sub
pop
or
xchg
sbb
xchg
icebp
add
push
movsb
rorl
test
loop
in
xorb
ljmp
xchg
inc
lahf
sub
push
push
and
pop
cmpsb
sbb
std
pop
icebp
sub
push
adc
clc
lods
add
xchg
push
push
adc
jb
jl
jle
xchg
mov
insb
cs
pop
addb
xchg
cmp
movl
pop
mov
int
fimuls
xchg
xchg
lods
sub
fisubrl
lods
sub
push
lret
xchg
mov
jl
jno
mov
cmp
mov
xchg
leave
mov
jne
or
jbe
push
jle
push
ret
inc
push
lock
mov
jl
adc
cmp
les
lock
xor
push
pop
mov
inc
or
sbb
push
or
sbb
popa
push
add
xchg
ja
call
and
orb
mov
imul
mov
xor
fidivrl
out
pop
sub
add
push
out
lock
fildll
push
les
pop
lret
mov
cmp
cmc
pop
rclb
adc
mov
aaa
ret
inc
push
aad
gs
and
lea
arpl
xchg
lea
adc
jecxz
aaa
cmp
enter
testb
push
inc
iret
out
sbb
inc
outsl
inc
addr16
xor
sbb
sarl
ret
das
pop
cld
mov
dec
pop
jno
xor
rep
mov
mov
sahf
pop
les
aaa
nop
jecxz
repnz
js
je
movsl
sbb
mov
shr
dec
fs
imull
mov
ret
add
dec
cmp
sbb
cs
fwait
mov
fidivrs
rcrb
adc
adc
sub
ret
out
add
in
jg
mov
xchg
or
jb
stos
mov
adc
jnp
mov
sbb
mov
rcll
ret
dec
and
nop
sub
in
rcrb
mov
stos
mov
mov
int
fistl
mov
in
lds
push
ret
pusha
sub
mov
outsl
sub
pop
cld
rcl
add
scas
or
mov
push
adc
xchg
pop
dec
dec
pop
mov
ljmp
lea
jle
push
mov
and
imul
push
jb
and
sbb
sbb
int3
aad
sbbl
inc
inc
sub
sbb
data16
iret
mov
repz
test
jnp
and
cmc
int3
insb
cmp
and
xor
jmp
mov
and
aad
bound
adc
push
push
mov
adc
jns
mov
dec
in
int
rcrl
or
fwait
push
mov
push
and
xchg
std
adc
mov
dec
or
jecxz
mov
lret
jge
mov
dec
lods
xchg
xor
xor
out
loope
aaa
call
loope
mov
jmp
inc
sbb
loop
inc
jle
add
jbe
mov
arpl
mov
scas
lds
dec
aaa
xchg
scas
fcmovbe
jno
mov
shl
aas
in
mov
add
iret
popa
xor
and
dec
cwtl
out
jle
loopne
ret
arpl
sub
cmpb
mov
cmc
dec
scas
popf
idivb
into
mov
movsl
sub
mov
jnp
stc
jmp
and
pop
es
pushf
xchg
stos
out
cli
push
loope
inc
pop
mov
inc
push
xchg
dec
push
xor
stos
push
iret
pop
ja
repnz
inc
movsl
aaa
inc
pop
adc
stc
adc
jp
cli
out
fldl
jno
ss
imul
pop
shrb
sbb
or
imul
pusha
call
leave
pop
rcrl
mov
xlat
jno
jg
loop
call
movsb
and
test
sub
jg
xor
xchg
mov
test
lds
xchg
mov
mov
pop
sub
lea
frstor
xor
xor
ljmp
je
cmp
cmp
lock
repnz
pop
add
aaa
xlat
ret
push
ljmp
or
movsl
shll
cmp
mov
mov
insb
sub
outsb
add
andl
push
xchg
addr16
push
in
sbb
ds
jne
xor
test
mov
sbbb
mov
inc
dec
pushl
or
jne
jp
push
xor
jge
add
xchg
pop
pusha
ss
cmp
test
jecxz
int
sbb
xor
xor
insb
lret
inc
int
or
popf
sub
in
pop
add
mov
or
call
inc
bound
adc
nop
sahf
nop
jecxz
fimuls
xor
leave
stos
repz
adc
add
adc
pop
and
jmp
sarb
xchg
hlt
sbb
pop
xor
xchg
inc
mov
ror
enter
mov
ror
gs
cmp
dec
xchg
rolb
mov
movsb
loopne
insl
push
or
sbb
in
cmpsb
pop
stc
roll
or
popf
fisttpll
sub
add
jmp
and
mov
mov
test
es
les
icebp
mov
mov
inc
adc
jl
push
mov
icebp
popa
xchg
jmp
scas
lock
pop
jge
mov
mov
sti
mov
sbb
outsl
sub
testl
dec
cld
shl
inc
push
bound
lret
loop
fs
and
insb
mov
loopne
and
pop
jecxz
cmp
xlat
cmpsl
int3
out
adc
jecxz
mov
fcom
push
loopne
push
decb
sub
es
mov
push
mov
pop
pushf
sbbl
mov
out
push
mov
xor
stc
mov
fidivrl
ljmp
mov
mov
sbb
ret
pop
xchg
dec
pushf
into
inc
pop
and
cmp
repz
sub
fs
cmc
aam
and
ja
movsl
fdivr
jge
popa
fcmovnbe
mov
mov
sub
andb
push
adc
divb
pop
test
icebp
mov
addr16
int
cmc
test
jno
fs
adc
jo
push
sub
imul
repnz
push
aaa
cmp
ret
mov
jg
movsb
fwait
jnp
cmp
inc
pop
out
imull
je
aam
popf
fdivs
xor
es
outsb
jg
das
mov
cmp
pop
pop
push
mov
int3
and
icebp
pop
or
stos
in
inc
mov
xchg
dec
pop
sbb
orb
pop
xchg
aam
out
shrl
cmpb
enter
pop
jnp
mov
js
jo
xchg
in
repz
mov
repnz
mov
int
xchg
sbbl
lock
mov
nop
arpl
jae
pop
and
mov
call
divb
jnp
or
push
push
rcll
jg
push
mov
pop
insb
cld
lods
in
stos
push
or
cmp
sub
std
mov
lret
das
jb
test
lahf
mov
outsb
xor
xchg
push
imul
cltd
inc
rclb
and
adc
loop
in
inc
xchg
mov
stc
dec
push
push
daa
xchg
in
dec
and
mov
aaa
fcmovbe
dec
mov
cmpl
in
xchg
in
add
call
xlat
adc
mov
mov
lcall
hlt
mov
mov
pop
imul
jae
adc
jp
loopne
inc
int3
inc
in
es
ret
les
sbb
in
xchg
or
and
lods
mov
fwait
pop
data16
dec
xor
adc
sbb
push
sub
movsb
push
out
mov
aad
scas
xchg
push
lret
or
xchg
jae
fidivs
lds
stc
idivl
add
mov
push
imul
inc
test
je
adc
call
xchg
jecxz
in
into
adc
cltd
cli
lahf
fwait
cmpsl
add
push
xlat
fwait
aam
xlat
jmp
rclb
xchg
xchg
jne
or
pop
dec
add
scas
cmp
in
inc
cmpsl
mov
push
xchg
sub
mov
je
jl
xchg
fidivs
inc
out
in
mov
mov
mov
sub
outsb
pop
sbb
cmpsl
scas
xor
imul
fs
pusha
fs
rorb
movsl
mov
scas
testb
imul
inc
pushf
push
dec
dec
or
fsubs
xor
push
test
inc
arpl
mov
jne
mov
dec
movsb
pop
popa
mov
xchg
xchg
dec
jl
or
mov
dec
or
sahf
sahf
jne
sbb
dec
bound
int3
mov
sahf
test
mov
cltd
and
sbb
fdiv
fsubrp
inc
imul
mov
frstor
or
mov
mov
mov
jns
or
sbb
xchg
mov
roll
xchg
arpl
cwtl
movsl
mov
mov
lods
in
inc
addr16
xor
lret
add
adc
es
dec
cmp
inc
roll
cwtl
cmpsl
push
mov
mov
and
dec
in
ss
mov
adc
cmp
lret
mov
jge
pusha
div
cld
sbb
xchg
sbb
sbb
std
sub
jb
daa
mov
pop
jmp
iret
jb
mov
dec
mov
lcall
sub
daa
cmp
popa
cmpsl
lock
leave
dec
inc
sbb
cmp
icebp
cmp
xchg
imul
movsl
or
fistps
mov
jo
cld
data16
aas
sbb
movsb
cmp
xor
add
imul
aaa
push
xor
sti
je
mov
sbb
lods
lcall
rcrb
mov
in
jmp
sbb
xchg
mov
cmp
add
cmpl
punpckhdq
arpl
cwtl
dec
cwtl
or
jb
fbstp
dec
jmp
xchg
jae
fisttps
jge
mov
cli
dec
push
xchg
aam
mov
cwtl
test
xor
movsl
cmp
cmp
popf
test
out
cmp
mov
and
call
add
mov
bound
sbb
adc
jge
pusha
negl
add
loope
outsl
aam
adc
sbb
jge
ljmp
adc
pop
xchg
mov
or
insb
pop
sti
cli
lahf
mov
aad
sbb
jle
je
mov
inc
pop
hlt
mov
fucomip
jno
xchg
pop
push
idiv
inc
cli
cmp
aam
pop
outsl
sarl
mov
addl
adc
int3
push
test
mov
loop
js,pn
cmp
pushf
pop
dec
enter
pop
das
jmp
push
repnz
cmpsb
sbb
js
mov
cltd
les
mov
mov
std
jp
adc
mov
jge
js
add
push
cmpsl
sub
sar
mov
inc
fistl
dec
mov
cmp
add
push
divl
icebp
add
add
or
in
jl
imul
imull
cmp
lret
jo
or
je
cmpsl
cltd
jge
inc
leave
add
jb
mov
or
mov
lock
mov
or
mov
repnz
js
jecxz
or
cli
jmp
sbb
sbb
push
jmp
sub
jp
mov
dec
je
and
clc
mov
or
movsb
jo
lds
pop
jne
das
lock
lods
pusha
inc
out
stos
out
adc
jmp
jb
shll
mov
sub
scas
inc
into
loopne
sbb
jnp
mov
ret
lock
mov
stos
mov
mov
pop
sub
das
pop
mov
adc
jecxz
fcoms
inc
popf
lock
mov
dec
push
scas
movsl
fidivrl
loopne
arpl
ljmp
in
xchg
fistl
xchg
in
fmulp
adc
aad
inc
fildll
clc
pop
nop
adc
sahf
out
aad
push
test
adc
inc
adc
inc
xchg
adc
lods
fwait
in
xor
xchg
test
pop
es
insl
insl
mov
lret
inc
pop
es
popa
xchg
sub
xchg
adc
mov
outsl
cmpsl
cmp
xorl
push
std
out
data16
dec
jl
xor
xchg
gs
mov
dec
pop
mov
lods
push
mov
jo
mov
xchg
mov
shll
mov
dec
movsb
cmc
ljmp
addr16
pop
loopne
loopne
movsl
mov
add
mov
rcrl
mov
xor
push
add
in
push
sub
dec
fisubrl
movl
rcrb
movsl
gs
dec
mov
test
loop
mov
es
sub
sbb
enter
mov
fcmovnbe
xor
clc
xor
mov
cmpl
aad
add
cmp
enter
int3
sahf
add
sti
xchg
icebp
xor
dec
popa
popf
cmp
rcrl
sbb
add
shlb
xor
cmp
rclb
outsl
and
xlat
push
call
testb
xchg
jbe
call
imul
adc
cmp
lods
in
pop
fisttps
ss
xor
sbbl
jp
div
pop
push
ss
cld
out
sub
mov
pusha
cwtl
sub
xchg
add
repz
in
lods
das
stos
dec
mov
loopne
lods
icebp
xor
das
sub
nop
jg
mov
inc
sbb
dec
mov
cmp
sbb
push
testl
dec
dec
sbbl
lret
pop
pop
into
mov
push
adc
int
in
xchg
aaa
aad
cmpsb
lods
shlb
sub
push
je
ljmp
movsb
int
and
mulb
js
cwtl
repnz
push
minps
rcrl
fsubrp
mov
xor
out
out
rcll
inc
pushl
cltd
inc
insb
dec
cmc
xchg
test
stc
mov
cmp
sti
pop
das
fs
pop
popa
hlt
mov
les
inc
std
pop
add
jecxz
add
imul
stos
insb
jns
lret
ss
lea
imul
mov
sub
adc
hlt
pusha
leave
jl
push
das
loopne
jno
fdivl
xor
pop
jp
dec
dec
cmp
push
ljmp
jno
add
dec
jge
dec
mov
ret
popf
push
leave
aas
mov
mov
pushf
xchg
jae
inc
jo
loopne
lods
mov
scas
or
out
cmp
lds
push
push
mov
pop
jae
mov
sub
movsl
std
dec
mov
mov
imull
movl
je
jbe
mov
out
lock
cmp
rclb
cltd
sub
pusha
jg
mov
adc
andb
push
pop
arpl
cltd
aam
hlt
in
mov
out
cs
ret
test
call
jmp
xor
push
mov
mov
repz
jmp
mov
and
and
adc
pop
jmp
mov
pop
cmpsb
lds
sub
sub
shlb
ret
jp
sbb
mov
test
add
mov
das
adc
fildl
inc
repnz
stos
add
mov
and
jno
push
lcall
enter
mov
xor
insl
ss
nop
les
cld
pop
push
cwtl
in
je
xor
mov
push
adc
stos
mov
jns
pop
jecxz
mov
xor
insl
sbb
std
jl
movsl
fnstsw
loop
mov
pop
mov
movsl
mov
daa
enter
dec
dec
adc
sbb
ficomps
lret
push
out
lock
mov
int
clc
loopne
cltd
cltd
add
int
cld
inc
mov
inc
jnp
fstpt
rcrb
cmp
enter
ret
jb
jo
orl
pop
test
add
jge
cmpsl
ret
lahf
inc
sti
int3
sbb
cmp
fcoms
mov
lea
xor
call
cmc
cltd
adc
push
xchg
sti
dec
add
dec
pusha
jp
stos
pop
loope
and
or
adc
lret
mov
jnp
xchg
jmp
std
fstpl
push
cs
dec
mov
rolb
and
dec
pop
or
dec
jmp
arpl
sahf
sahf
inc
int
inc
pop
pushf
lcall
dec
jae
sbb
mov
push
loope
push
fwait
les
loopne
lds
pop
int3
je
out
cli
dec
mov
call
xchg
aam
mov
add
pop
lods
ret
sarl
int
xchg
push
dec
xchg
mov
pop
pusha
jmp
jle
push
bound
popa
insb
mov
aad
jno
bound
xchg
sub
push
jmp
mov
fstl
jecxz
mov
and
pop
ror
mov
inc
rorl
mov
fcoml
stos
lods
cwtl
mov
into
in
sbbb
jnp
or
icebp
js
adc
mov
mov
mov
cmp
cmpb
outsb
notl
in
out
iret
outsb
mov
out
xor
sbb
hlt
dec
xchg
dec
leave
out
xlat
fidivrs
adc
mov
xchg
and
pop
ds
and
push
shlb
xchg
icebp
push
and
stos
sti
mov
ds
movsl
dec
out
dec
xor
clc
pop
push
adc
lea
aam
sbb
aaa
mov
pop
mov
stos
cmovg
and
inc
and
push
push
pushf
repnz
cmp
adc
adc
or
bnd
mov
insb
mov
test
call
mov
sbb
jbe
xchg
mov
aaa
movsl
sti
or
std
inc
dec
pop
ret
mov
push
dec
xchg
in
inc
jmp
fs
and
sub
push
mov
inc
out
cmp
das
pop
sub
and
insl
xor
xchg
pop
inc
or
pop
shr
xorl
sbb
mov
lret
jnp
push
push
insb
loope
inc
fisttpl
sub
inc
or
ja
sub
mov
xchg
inc
das
std
mov
enter
or
fisubrs
in
push
dec
lds
push
out
pop
sbb
dec
and
imul
sahf
das
push
andb
sbb
pop
es
mov
jo
sbb
or
cltd
jg
mov
fs
pop
add
cmpsb
mov
repz
mov
lods
mov
fisubrl
mov
scas
mov
rcr
movl
mov
mov
lea
fisubl
test
dec
enter
push
mov
sbb
ds
xor
mov
pop
pop
jno
std
sub
add
xchg
mov
inc
dec
push
push
push
jne
fs
icebp
cli
aad
mov
pop
push
call
lds
mov
mov
fmulp
xlat
mov
movsb
lods
enter
popf
fsubl
stos
cmpsl
xorl
pop
movups
jae
xchg
jnp
ja
mov
xchg
std
out
mov
call
jmp
jmp
stos
or
push
setg
mov
mov
lds
push
pop
notb
or
leave
sbb
xchg
into
outsl
mov
add
in
mov
add
jbe
push
inc
fistps
adc
mov
inc
test
xchg
mov
lods
or
mov
lret
or
repz
push
mov
ja
fildll
sub
and
cmpsb
mov
mov
sbb
fstps
mov
ret
aaa
iret
stc
adc
daa
fwait
xchg
insl
xchg
scas
sbb
sbbl
sti
adc
ljmp
adc
ds
mov
movsl
xor
cmp
into
lock
cld
cmpsl
insl
cmp
movsl
nop
fcos
dec
and
jbe
mov
jne
jo
js
mov
and
insl
bound
pop
out
popf
inc
sub
pop
int3
xchg
sahf
imul
push
pop
inc
lods
leave
gs
mov
jae
xlat
fdivrs
or
data16
dec
fisubs
lea
sub
ljmp
jnp
jmp
test
in
sti
and
in
lods
int
push
mov
shll
xchg
cmp
out
iret
cmc
push
mov
or
pop
sbb
sub
jae
sub
xchg
rcll
std
int3
jae
mov
or
dec
int3
mov
xchg
popa
dec
cwtl
xchg
sub
test
and
lods
pop
fistpl
dec
fildll
adc
sbb
imul
and
jg
push
push
push
xchg
xchg
sbb
jmp
out
mov
xor
jl
jge
and
adc
fnstsw
das
outsb
negl
jle
and
jl
insl
pop
fstpl
cmp
pop
fisubl
add
ljmp
and
jbe
fwait
push
and
hlt
push
scas
shlb
orl
lcall
jmp
cli
add
jo
loope
mov
inc
daa
imul
or
shr
mov
outsl
mov
stc
push
rol
sahf
shlb
out
std
scas
orl
test
ljmp
out
mov
fsubrs
stos
sub
int3
jns
out
std
push
xchg
xor
iret
in
shlb
lock
test
push
in
jg
pop
xchg
inc
or
bnd
in
clc
xchg
sub
push
push
fstl
inc
or
jp
pop
sub
dec
push
scas
xchg
jp
cmpb
dec
or
xor
in
mov
aas
imul
loope
and
xchg
pop
ficoms
add
inc
in
mov
sti
insb
stc
into
into
mov
lods
cmp
push
xchg
add
fs
testl
scas
outsb
dec
fnstsw
jnp
out
mov
add
push
cwtl
fwait
xchg
bound
mov
pop
test
outsb
test
call
cmpsb
fwait
mov
pusha
pop
ret
incb
pop
xchg
test
lret
outsb
dec
ret
popa
xor
jne
pop
push
mov
xchg
inc
push
or
fs
call
std
shrl
fldl
clc
dec
inc
dec
sahf
loopne
bound
cwtl
ret
out
push
frstor
stos
xor
or
mov
sbbl
mov
sbb
mov
daa
int
add
int3
pop
pop
push
ret
cmp
xor
add
hlt
mov
dec
cwtl
xlat
adc
mov
sbb
or
sahf
add
sub
mov
ret
je
xchg
js
push
nop
sbb
jns
pop
aad
lds
sub
jle
xchg
pop
xlat
xchg
out
fsubrl
repz
xor
add
xorb
sbb
imul
das
ficomps
fmull
pop
insl
xor
pop
cmp
xchg
mov
rorl
cmp
stos
add
add
and
insb
add
mov
loope
pop
dec
push
fmul
jb
xchg
pop
int
ret
adc
dec
ds
jb
rol
imul
stos
imul
xchg
in
cmpsb
jno
jne
xor
and
ret
jnp
push
adc
scas
xlat
add
leave
dec
ja
mov
out
mov
xchg
pop
push
dec
cli
mov
mov
popf
sub
inc
int3
in
lods
mov
xchg
mov
add
mov
out
sbb
add
pop
dec
lcall
and
cld
fisttpll
lods
xchg
lods
mov
in
out
das
sbb
sub
mov
sbb
lods
dec
mov
mov
mov
push
fdivs
mov
xchg
cmp
push
shr
xor
rclb
das
negl
fdivrs
xchg
scas
cld
das
je
jae
sbb
xchg
lahf
lahf
add
cmpl
ja
inc
lahf
adc
lods
jno
cmp
sbb
rcrl
jle
sbb
aas
ret
push
hlt
lods
repz
stc
push
xchg
pop
mov
scas
fmull
push
je
cmc
stos
imul
dec
and
cmp
les
loop
notb
mov
xor
rcll
addr16
lods
loopne
out
imul
js
popa
add
rcl
in
fwait
das
sti
sbb
sub
add
sub
mov
popf
mov
outsb
aam
cmpsl
ds
push
inc
lcall
xlat
cltd
flds
push
loop
jmp
std
popf
cmp
mov
cmc
xchg
bound
dec
xor
ret
dec
in
mov
jnp
jp
or
test
daa
fwait
cli
dec
fcoml
fbstp
inc
lods
mov
js
iret
in
mov
push
add
and
xor
jmp
das
mov
shll
mov
loopne
dec
dec
mov
les
pop
mov
lea
push
add
mov
sub
stos
mov
push
mov
lods
dec
test
xchg
sti
pop
sti
test
subb
adc
nop
mov
mov
mov
adc
in
adc
push
pop
or
jle
mov
lahf
push
mull
daa
or
mov
andb
mov
mov
dec
inc
aam
inc
ss
lret
push
iret
in
aam
inc
mov
xchg
mov
addr16
jns
add
in
xchg
enter
jno
in
lret
inc
repz
xchg
stc
jmp
ss
jmp
sub
mov
into
push
cwtl
mov
xchg
ret
push
jo
loope
xor
gs
popf
jmp
cmp
imul
jns
stos
nop
movsb
iret
mov
and
stos
push
in
inc
sbb
mov
orb
pushf
stc
inc
arpl
jecxz
ss
sbb
inc
adc
fnstsw
mov
xchg
clc
fidivrl
mov
push
xchg
adc
xor
push
pushf
dec
mov
movsb
je
aaa
jl
imul
add
cwtl
adc
push
mov
push
rcr
push
push
out
pop
dec
push
loop
sub
bound
test
decb
mov
push
xchg
sub
sbb
outsb
test
inc
lds
or
push
inc
test
inc
je
add
imul
push
pop
add
mov
or
in
jecxz
push
repnz
lds
jo
hlt
adc
hlt
sbb
leave
inc
cli
sub
mov
pop
add
repnz
fcompl
push
test
jns
dec
adc
std
push
lcall
sti
jp
das
mov
sub
lret
add
mov
pusha
fldenv
out
mov
sbb
mov
ret
xchg
cli
or
fsubrs
cwtl
xor
je
imul
xchg
inc
jl
stc
jmp
xchg
xchg
fxch
pusha
pop
hlt
sbb
jecxz
jmp
cmc
das
andb
fdiv
add
jmp
mov
push
out
mov
lea
js
data16
cmp
adc
jl
xchg
mov
mov
dec
add
sbb
stos
xlat
inc
mov
push
lahf
loopne
push
pop
imul
aad
movsl
ja
cmp
in
jmp
stc
mov
or
fimuls
push
cmc
mov
scas
stc
push
test
push
jns
xor
shlb
lret
repnz
xor
test
fnstcw
icebp
movsl
stos
xor
adc
mov
and
jge
idiv
sbb
jne
xchg
cmp
ja
xor
aaa
cltd
push
sbb
in
popa
sub
or
pop
xchg
mov
fs
lods
mov
repz
and
out
in
int
and
and
mov
pop
push
mov
sub
ficoml
xor
js
test
cmp
fstpt
leave
das
std
test
mov
push
xchg
xchg
inc
cmp
movsl
imul
das
jmp
inc
stos
xorb
sti
cmp
jnp
mov
cmpb
movsb
aam
mov
jo
add
loop
fstpt
mov
adc
or
mov
adc
push
cmp
imul
sti
jmpw
pushf
xchg
lret
pop
or
insl
fs
jo
fbld
and
testl
xchg
arpl
add
scas
add
sarb
jge
pop
xlat
add
jne
test
ja
push
or
mov
mov
inc
mov
testl
testb
rcrb
nop
add
sarl
mov
fisttpl
inc
decb
push
lods
rolb
test
xrelease
ja
or
fcompl
mov
jno
xchg
scas
cmp
cmp
jae
jnp
call
sub
inc
push
mov
push
iret
jae
pop
adc
je
adc
leave
in
xor
jno
add
push
shll
outsb
dec
out
out
jbe
stos
fadd
push
push
icebp
int3
sbb
fcmovb
pop
jmp
push
push
jno
adc
pop
mov
jbe
mov
sub
adcl
popf
mov
fwait
out
jb
mov
or
cld
mov
repz
and
push
ds
push
mov
stos
mov
rolb
loope
imul
out
jecxz
dec
push
hlt
xlat
inc
jg
scas
lret
sub
das
iret
pop
jnp
jle
std
js
push
cld
xor
lret
fsubrp
in
pop
xchg
paddsw
lods
in
outsb
int
push
fmull
sub
test
sbb
inc
lods
in
xchg
insb
jo
fdivl
mov
and
push
adc
jg
cmp
or
popa
push
mov
stos
push
add
pop
shll
lret
jbe
dec
push
scas
cli
add
mov
jne
mov
daa
and
popa
test
stc
xchg
pop
aaa
fsubrs
out
jle
xchg
out
push
js
xchg
mov
inc
mov
cmpsl
scas
jo
insl
sub
and
cld
push
aad
shl
xchg
pusha
shlb
sbb
ret
jae
xor
sarb
push
icebp
mov
and
dec
mov
fcomps
call
sub
cmc
dec
xchg
sbb
push
push
out
inc
pop
fistps
pop
pop
pop
or
fisubrl
pop
jno
xchg
xor
pop
inc
addr16
inc
std
cli
ret
cs
dec
cmp
or
aaa
jnp
rclb
dec
icebp
or
scas
aad
scas
psubb
pop
fldcw
mov
cltd
insl
test
mov
rcrb
jnp
add
dec
or
and
int3
lods
pop
outsl
xchg
xchg
push
push
enter
or
in
stos
mov
mov
nop
lods
cltd
ret
mov
out
rcll
pop
push
in
idivb
cmc
mov
cmpsb
add
push
inc
adc
gs
push
data16
in
cmpsb
jg
dec
mov
jo
filds
mov
in
or
mov
es
pop
addr16
fsubp
push
ljmp
stc
or
sti
cld
lret
mov
push
jno
xor
dec
jg
or
jle
pusha
lea
mov
mov
mov
out
mov
dec
mov
imul
lds
push
popa
rcl
pop
leave
and
out
std
sbb
stos
xchg
or
enter
inc
loop
in
aad
push
pusha
aam
fistpl
xor
lahf
inc
movsb
xlat
idiv
sbb
test
push
xor
test
cwtl
iret
icebp
mov
and
psraw
mov
jp
xlat
pop
roll
push
mov
jns
mov
roll
dec
mov
mov
xor
adc
ss
mov
sbb
mov
xchg
test
cmc
adc
jbe
icebp
jne
rclb
jne
add
jne
xchg
push
popl
adc
mov
lahf
jl
or
adc
dec
cmp
push
or
sbb
pop
mov
jp
or
sahf
pop
dec
shll
into
test
aam
dec
pushf
xlat
adc
fs
or
jp
jno
cs
lea
orb
insl
xchg
out
cwtl
fstps
mov
sbb
xor
enter
in
das
push
pop
jl
popf
in
adc
xchg
mov
jecxz
inc
push
inc
cmovle
idivl
icebp
jle
mov
test
into
inc
mov
sbb
adc
mov
and
icebp
in
jne
popa
lock
and
push
pushf
and
push
jge
subl
in
push
dec
jae
jbe
mov
sub
mov
mov
sub
inc
cltd
or
push
arpl
mov
jl
arpl
push
push
in
adc
jecxz
jb
aas
xor
add
fdiv
push
add
bound
cmpsb
adc
lcall
scas
inc
jno
jno
test
ret
insl
push
scas
ret
ret
mov
in
divb
mov
subb
lret
shlb
into
ljmp
mov
jecxz
stos
in
ss
imul
push
aam
mov
outsl
xlat
outsb
adc
push
mov
push
and
mov
cmp
test
sub
fnstcw
dec
and
or
or
pop
push
cmp
rcll
pop
cmp
lcall
and
dec
jns
xlat
pop
daa
sbb
sti
clc
sub
xchg
int3
jbe
in
cwtl
iret
aas
in
jbe
mov
or
pop
fldt
in
js
popf
xchg
pop
stos
push
jp
into
lock
mov
or
sbb
jbe
cld
pop
iret
aas
aas
mov
cmp
mov
arpl
fisttpl
call
xchg
rcrl
outsl
test
adcl
push
mov
stos
lret
mov
xor
dec
sbb
pop
mov
dec
jl
sub
inc
push
pop
fcoml
lea
popf
add
nop
addr16
sbbl
and
das
push
aam
pop
mov
or
imul
xchg
jl
mov
sbb
pusha
loop
pop
dec
enter
data16
fwait
push
out
imul
mov
inc
mov
mov
xchg
push
dec
jle
iret
lock
mov
and
or
clc
cltd
xchg
pop
sti
rol
es
shll
mov
and
orl
xlat
imul
bound
xchg
rep
fyl2x
fwait
mov
xor
cmp
sub
loop
mov
pop
scas
sbb
sbb
mov
movsl
dec
cmp
jae
sub
cld
pop
mov
nop
pop
fwait
sub
shrl
movsb
into
sbb
mov
idivb
stc
cmc
pop
pusha
add
lds
out
ja
xlat
aas
xlat
cmpsl
sub
push
push
push
insl
mov
mov
bnd
cmp
jbe
mov
mov
outsb
cmp
js
nop
push
jnp
or
push
repnz
push
hlt
pop
mov
leave
pop
jns
mov
sbb
fdiv
rcrb
lods
mov
inc
cmpsb
pop
dec
repz
xor
cmpl
aam
or
repz
test
mov
pop
cli
dec
or
cmc
stos
int
mov
cld
sub
sbb
jle
xor
sti
jle
cmp
mov
movsb
ficompl
idivb
jo
lret
pop
test
and
movsb
push
add
xlat
jne
outsb
mov
mov
fisttpll
test
sbb
cmpsl
subb
cmp
or
inc
mov
fisttpll
adc
pusha
sbb
ds
cltd
and
popa
pushf
jae
hlt
mov
repz
lret
mov
clc
xchg
sbb
or
ret
daa
mov
jo
mov
mov
jmp
push
leave
jne
leave
add
adc
leave
dec
mov
mov
rcll
ss
cmpsl
mov
and
es
iret
mov
imulb
pop
add
inc
leave
rorb
popa
xchg
cltd
sbb
xor
adc
jl
nop
stos
stos
pop
scas
pop
push
mov
or
daa
sbb
mov
inc
movsl
outsl
popa
jle
leave
cs
or
aaa
lds
add
les
sub
aaa
aam
xor
xchg
pusha
scas
test
hlt
pop
nop
jp
sub
out
stos
mov
lcall
nop
jne
loopnew
cmpsb
jp
insl
xchg
lds
sbb
pop
negb
les
pop
push
out
pop
jl
xor
jb
push
xor
shlb
or
pop
xchg
enter
out
out
cmp
add
cmpb
fstl
sub
mov
adc
das
lds
inc
lds
dec
sbb
or
fstl
xor
test
int3
xchg
in
inc
mov
insl
scas
push
or
sbb
jge
sbb
add
nop
pop
pop
data16
cmpsl
imulb
dec
inc
insl
inc
addr16
sub
ss
sbb
cmc
into
inc
in
mov
nop
data16
jmp
ljmp
adc
adc
nop
sub
cmp
xor
testl
clc
inc
cmpsl
pushf
adc
pop
sbb
dec
inc
in
movsl
iret
mov
loopne
cmp
pusha
fcoml
loopne
ficompl
and
jl
mov
sbb
js
enter
insl
pop
add
pop
sbb
out
dec
mov
xchg
das
loope
jnp
push
sti
push
mov
scas
outsl
sub
movlhps
out
inc
pop
dec
sbb
jp
lea
or
aad
movsl
sub
mov
es
inc
lock
jo
jo
fwait
loop
mov
frstor
loopne
sub
jnp
mov
sub
orb
lret
stos
cmpsb
mov
push
nop
rorl
js
into
cmp
dec
mov
mov
pop
xchg
testl
dec
sbbb
or
adc
orb
mov
pop
ret
and
data16
mov
loopne
pop
lret
push
shll
mov
rcrb
int
stos
in
push
enter
jns
jmp
cmc
lock
lahf
mull
sub
jo
dec
and
cmp
mov
sti
lahf
xchg
lcall
ds
push
in
mov
sub
rcl
out
pop
jge
pusha
ss
test
cmp
call
mov
int
rclb
cmp
mov
adc
fadd
xor
mov
lods
pop
xor
movsl
stc
nop
insl
push
int
xlat
inc
sbb
push
adc
add
imul
mov
xlat
movsl
pop
cmpsl
pop
fisubrl
gs
cs
dec
mov
mov
xchg
mov
ja
fsubrl
movsb
call
icebp
call
mov
or
cmp
ja
mov
xlat
mov
repz
and
out
pusha
pop
dec
mov
or
sbb
mov
inc
cmp
popf
fisubrs
or
imulb
fildl
inc
and
scas
dec
xlat
mov
inc
sub
add
sub
insb
in
addr16
xor
jnp
aam
cmpsb
cmp
sahf
jno
shlb
ljmp
out
jge
inc
dec
push
pusha
insb
or
xor
push
jmp
cmp
negb
mov
xchg
lcall
je
sub
es
add
push
popa
jns
in
in
mov
lea
jecxz
test
mov
sbb
pop
push
dec
inc
or
mov
mov
dec
dec
cmp
mov
int3
pusha
dec
dec
insb
sub
sub
or
cmpsl
test
cmp
sub
loope
push
mov
ret
dec
xchg
sbb
ret
mov
mov
mull
and
aam
sbb
iret
push
xor
mov
xchg
test
dec
lock
aaa
int3
xlat
push
sbb
or
mov
pop
test
dec
cmp
icebp
hlt
test
mov
dec
push
cmpl
aas
icebp
jb
jmp
cmp
loopne
sbb
pusha
bound
pop
into
imul
sub
jge
dec
loope
jae,pn
xor
sbb
les
in
ficoml
or
pmaxub
jp
mov
fldt
push
xor
sbb
scas
adc
dec
stos
adc
ljmp
mov
jne
cmp
lock
dec
cli
mov
mov
lret
test
xor
mov
lds
fadd
mov
mov
mov
je
push
insb
cmp
test
xchg
add
jnp
pusha
xchg
push
shl
iret
aad
jo
repz
test
repnz
push
push
mov
dec
push
xchg
aam
push
or
popa
push
enter
pop
mov
ljmp
cwtl
test
cmp
sub
push
inc
paddw
int
imul
sti
jecxz
push
adc
sub
and
sub
fcmove
xor
mov
push
inc
int
js
aam
outsl
inc
xor
xor
fidivrs
adc
xchg
bound
inc
xor
jbe
push
movsl
sub
mov
inc
cmp
pop
jmp
pusha
adc
sbb
or
cmp
xchg
inc
xchg
shrl
jns
pop
add
sarl
outsl
xchg
sbb
les
xchg
inc
mov
pop
lock
nop
stc
in
in
add
push
push
pop
aam
hlt
ljmp
test
dec
loopne
int
dec
int
or
push
inc
pop
cmpps
add
and
mov
cmp
nop
cli
fwait
add
dec
push
outsb
mov
lods
or
pop
mov
pop
rcl
je
add
or
int
jno
cmpsb
sbb
jl
in
or
aad
push
leave
testb
pusha
lods
cmc
ret
adc
or
stos
or
sbb
rorl
add
inc
inc
jb
sub
mov
sti
test
and
mov
push
ror
jmp
mov
data16
fwait
xlat
in
xchg
sub
int
cmp
out
cltd
test
inc
shl
inc
adc
jbe
aad
sbb
push
adc
or
test
in
adc
sti
or
aas
cmp
cmpsb
int
icebp
test
mov
push
xor
out
mov
cmp
sub
stc
xchg
lds
cmpsb
ss
fstpl
ja
insb
in
in
push
insb
lods
xchg
ljmp
mov
sub
out
aas
push
aam
sub
cmp
popa
mov
mov
mov
pop
js
out
dec
or
push
lods
sbb
ja
sahf
les
pop
ss
enter
xchg
or
jae
jns
sbb
dec
push
mov
daa
xchg
inc
push
sbb
std
sub
mov
jmp
jnp
cmp
aaa
sbbl
bound
jge
sbb
jmp
mov
das
xlat
jns
push
xor
dec
jle
pcmpeqd
mov
lock
jns
pop
inc
mov
fs
push
sbb
call
stc
push
out
fwait
repnz
aad
inc
rolb
hlt
lods
orl
mov
sub
lcall
test
mov
xchg
insb
iret
push
xlat
sahf
dec
cltd
add
adc
add
push
xchg
outsb
dec
loop
pmuludq
cli
mov
int3
lods
and
sarb
mov
mov
add
lock
leave
aas
cwtl
pop
arpl
or
mov
daa
sti
jmp
sbb
int3
xchg
add
or
leave
sub
stos
arpl
adc
and
jae
aam
dec
cld
cld
adc
sub
sub
jno
in
push
bound
insl
test
mov
subb
dec
push
loop
mov
adc
sbb
mov
ss
cmpsb
adc
repnz
xchg
jns
mov
sti
cmp
loopne
dec
fildl
shrl
add
push
pop
jne
jp
pop
jbe
sub
fiadds
test
fistpll
inc
cld
lods
popa
inc
pop
stos
xchg
fsubr
xlat
clc
imulb
aaa
movsb
andb
dec
ficoms
rcrb
lods
adc
xchg
ds
aaa
mov
jecxz
call
adc
shll
pop
inc
mov
push
lods
sbb
jl
sub
gs
loop
les
ljmp
xchg
jo
sub
loope
jp
or
adc
push
sub
les
mov
fistpll
mov
jmp
mov
cld
testl
outsb
sarl
fwait
xchg
pop
aam
je
dec
je
add
sbb
sbb
or
jmp
movsl
pop
inc
fadd
sub
lock
sub
es
aad
adc
imul
fwait
add
pop
std
adc
dec
mov
cmp
add
inc
jmp
pop
clc
mov
xchg
pusha
mov
pop
mov
in
xchg
stc
fstl
cmp
pop
sbb
test
adc
fcomp
inc
shll
jb
or
lock
sbb
dec
sti
test
jno
bnd
xchg
sbb
cmp
xchg
jae
in
or
xor
mov
pushf
mov
popf
sti
lods
push
sbb
int
dec
and
and
pop
add
sub
dec
or
gs
lahf
icebp
jns
add
std
add
jo
jno
xchg
mov
cmc
lret
xchg
out
cmp
fnstcw
test
into
lcall
jae
jns
inc
imul
in
jge
cmp
jne
or
jge
notl
insb
add
test
addr16
test
addr16
ljmp
dec
mov
bound
ret
mov
adc
stos
mull
add
mov
nop
lods
nop
or
add
insl
adc
lcall
stos
mov
dec
fidivrs
add
sbb
repnz
lcall
lods
in
fcoms
add
pop
pop
mov
iret
daa
daa
insl
and
es
in
cmp
mov
pop
rolb
add
loopne
ds
adc
and
rcrl
sbb
rcrl
loopne
push
add
adc
push
xchg
pusha
jo
xor
mov
mov
imul
cmc
out
mov
call
jb
les
xchg
call
mov
outsl
outsl
add
out
xor
shll
sub
lods
enter
arpl
sbb
pop
gs
jo
pop
inc
mov
js
pop
mov
in
call
cltd
out
bound
icebp
insl
push
push
or
mov
insb
mov
mov
stos
out
adc
addl
dec
mov
pop
xchg
movb
push
ds
repz
subb
repz
lock
lds
xchg
gs
and
js
push
adc
dec
xor
fidivrl
add
in
xchg
leave
inc
dec
daa
sbbb
add
push
dec
dec
lods
sbb
ja
or
js
push
sub
inc
adc
mov
and
repz
mov
xor
stc
lret
shlb
mov
add
nop
or
orl
and
out
jge
push
loop
adc
and
icebp
loop
imul
fcoml
xchg
imul
cli
adc
sti
iret
mov
je
mov
adc
stos
insl
mov
or
and
push
push
clc
pop
rcll
scas
jp,pt
pop
ss
mov
mov
in
mov
adc
fnsave
pushf
inc
lds
ret
insb
jle
sub
mov
aas
push
xor
cmp
or
inc
lret
pop
mov
inc
adc
jmp
int3
jp
les
mov
sub
dec
out
jnp
dec
adc
inc
shrl
hlt
leave
insb
push
cwtl
sub
js
imul
mov
in
das
pop
mov
mov
nop
cmpsl
psubw
mov
jg
negb
repz
dec
sub
cmc
out
adc
add
data16
lahf
scas
inc
jae
shl
jns
fistpll
and
in
pop
jnp
mov
inc
or
pop
sbb
mov
xchg
push
mov
xor
push
push
sub
add
sbb
inc
cltd
arpl
add
mov
mov
lock
aad
dec
and
stc
dec
aam
push
lret
sarb
jne
sbb
jg
mov
outsb
mov
in
sub
sbb
cmpsl
dec
add
xor
repz
leave
adc
lods
enter
jo
sbb
cs
movsl
pop
ja
pusha
jecxz
mov
adc
aas
daa
jle
push
lock
jns
out
adc
sub
inc
and
sbb
or
addr16
repnz
outsl
push
xchg
mov
xor
in
test
sub
mov
push
push
sti
ja
lahf
xor
xor
std
fbstp
icebp
stc
or
divb
mov
cmp
data16
loop
divb
out
pusha
pop
sub
fadds
out
sub
out
inc
test
ljmp
mov
icebp
loope
test
adc
std
rorb
mov
add
scas
lock
mov
es
cmp
loopne
mov
rolb
pusha
testl
jb
add
std
push
cmc
xor
jo
push
xlat
mov
fdivs
cmc
shrb
dec
pop
data16
int
mov
sub
push
adc
ss
inc
push
xor
jl,pn
cmp
and
sahf
add
inc
mov
mov
lock
mov
es
push
aam
mov
cmp
xor
xchg
sbb
push
imul
mov
data16
cwtl
mov
and
pop
lods
and
jmp
dec
mov
mov
call
les
dec
ljmp
jge
add
dec
insb
aam
lret
test
out
int
cmp
imul
mov
jno
popa
or
push
sbb
ja
pop
sub
push
xchg
adc
pop
sub
mov
mov
pop
cmp
lret
pop
sbb
sub
mov
mov
sub
adc
pop
lods
mov
loop
mov
sub
lcall
popf
cmp
pop
mov
dec
mov
mov
pop
or
loope
adc
xor
aad
in
cmp
jecxz
sbb
faddl
fnsave
test
adc
sahf
shrb
lock
jmp
cmpsl
mov
sub
out
ficomps
add
sub
inc
inc
jg
leave
sub
je
mov
rcl
dec
mov
dec
jl
repz
push
jb
xor
pop
and
push
xchg
xor
shll
xor
xor
sbb
push
imul
push
fistpll
test
scas
loopne
int
sub
int
dec
repnz
push
xor
sub
sub
mov
insl
jmp
jle
pop
iret
loope
adc
dec
fisubl
bnd
cmp
xchg
mov
out
repnz
jecxz
dec
pop
mov
idiv
cwtl
add
call
jecxz
add
and
pop
mov
and
adc
les
cld
loope
loop
movsb
cmpsl
push
sub
xchg
int3
mov
stc
mov
out
std
pop
mov
leave
cmpsb
mov
test
jbe
push
sahf
mov
mov
inc
out
mov
pusha
inc
in
imul
sbbb
dec
push
lock
aad
sub
push
xor
stos
adc
shll
bound
sub
test
push
insb
fwait
or
mov
mov
pop
adc
xor
pop
mov
mov
lcall
inc
into
mov
mov
adcl
popa
mov
jae
call
or
sbb
loopne
mov
jp
cmp
fmulp
cmpsl
cmp
aad
xor
mov
test
inc
xor
inc
lds
outsb
cmp
idivb
dec
leave
popf
gs
psrlw
dec
jp
add
pusha
mov
imul
leave
sbb
popa
xchg
inc
orl
mov
pop
arpl
push
loop,pt
fwait
sbb
jmp
cmp
pop
pop
or
xchg
jp
jbe
js
sub
add
dec
sarb
jbe
inc
stc
mov
xor
or
dec
xchg
sbb
data16
jl
movsl
dec
and
insl
mov
sbb
loopne
fimuls
jle
stos
jb
imul
cmp
es
popa
clc
mov
fsubl
sbb
ja
rolb
cmp
fsubl
fwait
xchg
xchg
jle
or
cmpl
xchg
out
sub
mov
and
in
or
xchg
xor
mov
push
popf
fisttps
xchg
outsl
push
mov
sbb
faddl
sub
fwait
aaa
shrl
ljmp
hlt
fisttpl
repnz
test
jge
ljmp
mov
pop
or
sub
jns
jle
mov
mov
sub
jo
into
push
sub
sbb
adc
insl
ss
fnstenv
out
hlt
jl
mov
adc
jp
xchg
clc
or
pop
daa
jle
addl
pop
in
insl
lds
mov
jp
xchg
cmc
gs
dec
ja
out
mov
adc
mov
fwait
test
push
btl
jo
jp
loop
push
clc
mov
sti
xor
ljmp
pushf
pop
inc
push
clc
std
andb
push
cmp
mov
divb
and
mov
and
imul
xchg
jnp
sub
nop
xchg
loopne
fistps
push
ss
cmp
stos
add
frstor
idiv
pop
sub
test
adc
pop
scas
mov
sub
pop
fdivrl
jo
and
mov
dec
xchg
dec
nop
in
iret
adc
orl
test
int3
dec
mov
dec
or
jae
pop
push
or
pop
adc
push
push
xor
jg
jp
mov
add
and
mov
stc
cmpsl
fsubr
add
cld
sti
shl
add
jno
mov
xor
jecxz
push
outsl
xchg
or
ret
and
jnp
shrl
fisttpl
pop
mov
cmp
xchg
cld
inc
push
push
sbb
mov
mov
cwtl
insb
sub
push
dec
cmp
mov
jecxz
jae
and
insb
xor
jns
and
add
add
in
sub
xchg
cmpsb
stc
push
ret
and
dec
stos
lock
mov
pusha
add
stos
add
pop
xchg
xchg
xlat
fstpl
mov
adc
pop
test
or
pop
test
imul
addl
outsb
adc
lcall
mov
cmpsb
enter
test
inc
xlat
xor
mov
and
les
inc
loop
neg
loop
in
xor
push
loop
mov
ds
jmp
xorl
cmpsb
roll
aaa
and
icebp
or
out
out
inc
cmp
loope
lahf
jo
ljmp
lcall
jle
pusha
stos
mov
sub
jg
mov
and
fstps
cli
cmp
adc
ja
jae
cmp
xchg
xchg
scas
gs
push
fimull
addr16
sbb
rol
mov
ds
sbb
stc
or
mov
frstor
lret
xor
popa
ret
xchg
dec
pop
cmc
incl
int3
mov
arpl
or
fsubrl
shll
arpl
aad
jmp
sti
loopne
mov
xchg
and
push
cmpl
mov
icebp
daa
pop
rcl
stos
xor
and
mov
lret
iret
adc
jne
imul
addr16
adc
sub
and
ljmp
movsb
sbb
mov
adc
stos
enter
test
dec
ljmp
test
jle
fisubs
fwait
or
adc
push
sbb
int
in
or
and
call
fprem1
fldl
mov
and
lcall
movsl
mov
js
lahf
mov
lods
jmp
pop
pop
jl
mov
mov
cmc
jno
fwait
jo
xor
ret
fndisi(8087
push
xor
xchg
xor
aad
and
add
dec
in
inc
gs
inc
scas
cmp
mov
cld
add
cmp
and
mov
in
add
das
push
idivl
cwtl
in
ss
das
xor
cmpsb
lcall
sub
sbb
mov
orl
sub
addr16
add
mov
fs
xlat
into
jnp
insl
out
shll
and
push
lcall
addr16
mul
fwait
push
pop
cs
loopne
dec
jbe
call
fidivrs
dec
in
jecxz
jo
mov
stc
pop
rcll
adc
xor
in
mov
out
fnsave
pop
out
scas
mov
nop
stos
and
das
pop
stos
mov
rol
push
inc
gs
and
mov
mov
sbb
adc
push
mov
mov
and
insl
jmp
jp
fcoml
ds
pop
andl
add
push
xchg
jge
mov
xor
xor
inc
rcl
in
sub
mov
add
push
insl
fnstenv
dec
addr16
scas
mov
cmpsl
fdivrl
std
les
fnstsw
cs
lret
call
add
out
popa
out
pop
pop
loop
jns
fsubs
push
push
jb
jns
call
mov
mov
dec
das
mov
mov
out
xor
inc
sub
sbb
add
xchg
or
push
cmpsl
inc
and
fnstsw
adc
cmp
hlt
jp
repz
pop
inc
shlb
call
mov
fstl
dec
xor
mov
sub
stos
push
fdivs
hlt
addb
outsl
lods
ja
call
mov
mov
jle
out
cmpsb
push
fisubl
stos
pop
jo
dec
push
es
scas
insl
mov
shlb
push
sahf
ja
orl
sarl
ljmp
ljmp
scas
sub
aas
es
pop
stos
loope
in
fneni(8087
sub
ss
bound
push
inc
mov
fst
lods
mov
lds
sbb
pop
lret
cmp
jl
sub
jno
lea
cltd
dec
outsb
sbb
cmpsb
ret
repnz
and
lods
sub
test
sub
push
call
movsb
sub
push
add
fdiv
pusha
xlat
out
cmp
repz
pop
and
std
and
lds
sbb
adc
inc
pop
in
movlps
outsl
loopne
xor
sbb
sbb
insb
or
jecxz
xor
pop
lcall
mov
push
test
sbb
ja
or
cltd
outsl
jp
pop
jne
adc
adc
xorl
inc
in
in
jo
xchg
sub
jne
jecxz
dec
xorl
mov
push
cld
test
fistl
mov
out
rorl
cmp
adc
pushf
stc
pop
out
jno
push
mov
mov
rclb
ljmp
add
addr16
lret
fs
push
shlb
and
fisttpl
call
pushf
jmp
pop
imul
sbb
dec
stos
or
push
out
pushf
adc
pop
push
test
add
shl
push
ljmp
loopne
sbbl
stos
lret
xor
pop
mov
push
pop
xchg
adc
mov
add
mov
call
jo
push
idivl
mov
testb
out
test
pop
mov
jle
sub
mov
ja
nop
into
or
arpl
push
sbb
sbb
leave
sahf
cmpsb
mov
sti
dec
or
push
dec
inc
pop
js
jge
and
filds
js
out
xlat
mov
aas
arpl
inc
mov
call
int3
call
test
mov
neg
jnp
cmpsb
mov
aam
mov
sbb
iret
repnz
stc
mov
test
int
mov
cmpb
sub
pusha
adc
jl
add
or
xchg
add
jecxz
and
mov
dec
sbb
pop
outsb
imul
ret
fisubrs
fildll
xchg
clc
xchg
imul
test
roll
nop
mov
push
or
push
add
shlb
pop
add
gs
add
movsb
push
push
sub
xchg
mov
push
xchg
sbb
xor
inc
repz
adc
push
scas
or
push
push
jns
aad
je
shr
cmpl
pop
xorl
and
ss
adc
adc
iret
add
inc
mov
test
enter
xchg
push
les
xor
push
fisttps
inc
repnz
call
and
out
fs
push
or
shlb
jecxz
push
sbb
push
repnz
loope
sub
shlb
cmpl
ret
iret
mov
jo
mov
dec
shll
fidivs
xchg
jns
sbb
ja
adc
aam
lahf
add
xchg
add
cmc
mov
stos
push
xchg
mov
int
pushf
sub
repz
rclb
out
jae
pop
cmp
mov
xchg
out
xchg
das
adc
mov
mov
into
fisubrl
orl
xorb
out
pop
jb
cmp
pop
fildl
or
add
and
outsb
js
repz
mov
push
cli
adc
fdiv
mov
inc
jae
pop
lods
gs
pushf
mov
dec
lret
xor
inc
mov
xlat
mov
arpl
enter
xchg
pop
fbstp
test
jge
in
cltd
cmp
stc
adc
fsubs
or
jl
jle
cmp
ja
add
mov
cmp
xchg
pop
ficompl
mov
pop
jbe
xlat
subb
cmp
shlb
repz
jno
into
push
jno
test
mov
in
xor
or
je
and
clc
shr
push
mov
pop
push
mov
add
insb
test
pop
jne
xor
out
adc
jp
pop
adc
dec
ret
dec
andb
mov
repnz
dec
or
pop
mov
scas
or
adc
sarb
pop
lret
mov
test
imul
xchg
hlt
test
sbb
xor
mov
outsb
sbbl
pop
in
add
leave
jg
cmp
mov
mov
jmp
pop
pushf
stc
jae
push
push
lahf
sub
xor
int3
dec
fwait
xchg
repz
cwtl
pop
xlat
cmp
cmp
aam
fstps
mov
shr
push
movsb
and
fwait
xchg
dec
test
pop
mov
and
adc
ja
cmc
daa
lods
sub
pushf
test
cmpsl
adc
sti
sbb
and
xor
pusha
mov
dec
popa
rolb
movsl
data16
test
sbb
frstor
add
xor
xor
in
loope
fldenv
xchg
sbb
loop
data16
push
mov
mov
pop
out
les
and
fsts
lods
int
jb
add
gs
inc
mov
xchg
push
xchg
mov
loop
mov
xor
inc
clc
sbb
lods
insl
and
inc
sarl
repnz
je
pop
pusha
jno
jg
xchg
sahf
xchg
pop
mov
lahf
push
clc
fildll
and
dec
jns
arpl
push
scas
pop
jne
rcrb
sbb
or
imul
and
stos
test
in
push
ficoml
ds
movsl
xor
mov
rolb
and
je
dec
jne
mov
pusha
dec
sbb
push
xor
jmp
jp
pop
int
popa
xchg
mov
push
dec
cmp
lods
sbb
mov
jae
mov
out
imul
insb
add
les
loop
add
out
dec
pop
mov
rcl
ret
push
outsb
add
sarb
movsl
add
dec
sti
test
nop
adc
test
rol
ljmp
xor
dec
cwtl
stos
xchg
test
mov
out
es
push
and
pop
mov
lcall
daa
xchg
xchg
mov
mov
dec
mov
fwait
outsb
dec
jbe
inc
stos
add
lods
ss
pop
mov
cwtl
xchg
jo
fcompl
jnp
xor
or
push
mov
jb
std
insb
std
jo
rcr
mov
sbb
sbb
pop
and
jp
jp
mov
jbe
fiadds
inc
gs
aaa
std
jo
push
in
xlat
xchg
ja
pop
filds
push
pop
mulb
push
mov
mov
sub
or
mov
xor
outsb
test
iret
mov
jns
sahf
mov
sbb
aam
iret
sub
dec
ljmp
push
xchg
gs
lret
ret
add
cmc
and
mov
push
fcoms
jns
leave
pop
pop
add
xor
xor
pop
jp
dec
dec
loopne
les
inc
sub
lret
pop
dec
stc
sub
insb
and
adc
scas
push
cmpsb
inc
lds
pop
push
adc
fcmovu
sti
sub
scas
adc
int3
aaa
pop
cmpps
stc
loope
mov
push
sub
test
sub
into
inc
sbb
shll
andl
test
cmp
dec
shll
push
dec
fsubp
fisttps
push
dec
pop
scas
xchg
pop
sbb
push
push
and
imul
cmp
loopne
mov
mov
je
sbb
aaa
sub
xchg
and
jl
fmul
clc
inc
jle
enter
pop
cltd
pop
mov
int3
mov
ret
popa
imul
dec
scas
imull
xor
sub
lcall
das
jl
jg
pushf
sbb
adc
add
outsb
iret
and
or
cwtl
dec
inc
xchg
roll
pop
push
push
adc
lods
sub
loope
jge
pop
pop
push
sub
push
sbb
dec
sub
lea
jnp
int3
xorl
xlat
ds
insl
adc
pop
add
lcall
sbb
pop
pop
jnp
jmp
sub
mov
push
mov
xchg
mov
movsb
fcmove
fmulp
sahf
leave
es
jb
cltd
je
out
loopne
in
cmp
cs
pop
es
int
mov
and
mov
xlat
add
adc
dec
leave
xor
movsb
inc
pushw
push
subb
je
or
sub
incl
mov
icebp
lds
fmuls
sub
ja
jnp
xor
xorb
aam
or
ficoml
xor
inc
add
adc
sti
lret
sbb
pusha
push
inc
movups
scas
push
sbbl
dec
xor
pop
mov
inc
ficoml
add
loop
mov
mov
shl
imul
in
stos
in
lods
icebp
add
bound
cmp
sub
in
or
sub
fnstcw
sub
xchg
sbb
cmpsb
shr
cwtl
popa
pop
cmpsb
jns
mov
add
cmp
xchg
sub
inc
adc
enter
mov
mov
in
sub
xchg
out
mov
mov
insl
jns
mov
popf
insb
cmc
xchg
jmp
jns
lret
push
add
xor
mov
call
push
imul
scas
in
or
lret
cmpl
mov
sahf
or
and
add
mov
jb
push
shll
sub
sahf
out
lea
pop
loopne
push
mov
andb
inc
dec
jno
sbb
int3
hlt
sbb
ffree
inc
xlat
lods
mov
xchg
mov
cmp
leave
pop
mov
cmpb
inc
ds
fdivr
mov
leave
clc
xor
mov
jle
rcr
jns
mov
push
xor
pop
sbb
shlb
mov
inc
add
xchg
imul
xchg
mov
mov
xchg
dec
icebp
aam
cmp
jecxz
mov
and
aaa
or
std
mov
cmp
jbe
jo
es
rcr
xorb
dec
sbb
mov
or
pop
andb
mov
cmp
loopne
hlt
aaa
outsl
sub
mov
mov
loopne
shll
add
dec
mov
stos
mov
push
mov
push
jbe
pop
cmpsl
out
sub
pop
fcomps
lcall
and
data16
sbb
inc
mov
sub
ficoms
divb
cmp
or
jmp
xchg
cmp
or
add
cmp
jno
xchg
fidivl
sub
dec
dec
jnp
shl
pop
add
add
sti
test
fwait
cmc
in
push
mov
add
pushf
rol
daa
stos
or
loopne
popa
dec
xor
sti
jns
add
mov
lret
jno
sti
mov
jmp
fmuls
sbb
dec
mov
incl
insl
test
xchg
mov
imul
xchg
lods
je
cli
dec
das
outsl
loopne
popa
loop
jae
ss
xchg
cld
std
mov
mov
cwtl
xchg
sbb
sub
icebp
inc
mov
repnz
push
nop
rcll
call
mov
out
fs
push
pop
inc
insl
stos
xor
pop
inc
rclb
arpl
add
imul
mov
xor
jb
ret
popa
rorb
adc
lcall
int
mov
into
fnstsw
or
stos
pop
incb
int3
pop
rclb
xor
jo
mov
ret
mov
shll
jl
mov
dec
pop
xchg
icebp
insl
movsb
mov
inc
fdivl
mov
xor
push
mov
mov
adc
loope
leave
ja
push
fsts
mov
push
pushf
in
jg
popf
insl
call
add
pop
jle
pop
push
lahf
push
in
mov
sti
ret
fists
jge
mov
jne
ljmp
add
movups
mov
nop
adc
rorl
hlt
fs
push
add
xchg
jp
mov
dec
scas
outsl
sub
dec
push
mov
inc
test
xchg
or
cli
cmpsb
xchg
fstps
or
dec
dec
jno
in
add
fstl
in
popf
xor
out
push
jns
and
cmp
jae
xor
mov
sbb
sub
loop
jbe
int3
xchg
repz
xlat
push
or
int3
sbb
sbb
pusha
xchg
push
xor
inc
and
shll
jo
and
and
or
mov
mov
fs
shrb
adc
mov
jle
dec
mov
jl
or
mov
pusha
and
and
cmp
push
daa
mov
jbe
push
adc
lds
mov
xor
pop
xchg
pop
mov
adcl
subl
fs
cmp
shlb
sub
gs
fsubr
mov
test
incl
jae
dec
gs
pop
pop
test
out
sub
pop
out
out
dec
mov
add
lods
mov
xchg
pop
lcall
sub
jne
mov
cmpsb
dec
int3
xchg
outsl
mov
xchg
mov
cmp
jg
inc
mov
int
lock
jp
jne
arpl
dec
out
cli
sub
mov
jns
push
int3
cmp
xor
fists
frstor
scas
arpl
sbb
jb
mov
inc
fs
cmp
cwtl
mov
jns
std
xor
aad
sbb
cmc
push
cmp
sub
xor
push
cmpsl
xchg
push
out
pop
xor
decl
int
sahf
pusha
clc
aam
cwtl
leave
test
sbbb
jae
mov
test
inc
aad
ja
stc
mov
or
jge
scas
xor
mov
lea
mov
js
or
dec
push
arpl
cmp
cld
adc
lods
lock
mov
cs
pusha
mov
mov
mov
pop
sti
or
incl
mov
in
jbe
push
adc
ds
mov
mov
insb
mov
push
daa
aaa
xchg
sub
dec
add
aaa
hlt
cmpsb
sbb
call
inc
pop
loopne
out
ja
dec
xchg
pusha
or
push
outsl
bound
push
dec
in
dec
sub
and
mov
xor
enter
sbb
xchg
mov
inc
fwait
repz
add
mov
push
mov
scas
jno
sbb
mov
xchg
and
adc
or
and
xchg
pop
mov
xor
jae
and
jne
xchg
je
mov
xor
shl
notb
cmp
stos
xlat
lds
cmp
adc
cmpsl
rol
sub
lds
out
mov
jge
inc
addr16
and
aaa
pop
ret
insl
aaa
out
cs
outsb
pop
mov
xor
jecxz
jmp
ret
aaa
xchg
sbb
xchg
xchg
jecxz
jbe
mov
shlb
movsl
les
jo
and
adc
add
repnz
xor
pop
jbe
lahf
xchg
inc
lret
loopne
cmp
test
aaa
and
sahf
push
pop
sahf
jle
std
jns
rolb
repz
jge
pop
xor
xor
mov
pop
outsb
pop
lock
mov
aaa
or
cmpsb
jmp
lds
cli
dec
in
mov
pop
cmp
pop
cli
iret
dec
ror
inc
call
lea
cmp
cmp
xchg
push
lods
xor
leave
addr16
xor
sbb
lret
jg
add
aaa
dec
jge
shlb
jnp
or
add
push
hlt
push
mov
sbb
outsl
push
ja
int3
popa
jmp
jge
frstor
adc
add
mov
movsb
sub
aaa
jb
dec
in
push
std
push
xchg
push
mov
pop
cmp
stos
fwait
sbb
jns
das
mov
fildl
inc
lret
mov
hlt
mov
jb
mov
rorb
filds
add
jne
in
mov
mov
js
cmp
mov
xor
and
insb
call
setge
aas
fistpl
stc
les
mov
andl
dec
mov
icebp
pop
fnsave
push
sbb
sbb
jne
cvtdq2ps
movsl
mov
cmp
cli
dec
mov
aam
mov
repz
pop
and
pop
pop
enter
lcall
cmp
xchg
test
outsl
or
rorb
cmpsl
pop
add
cmp
test
iret
cmpsb
add
test
pop
int3
mov
mov
mov
inc
int
outsb
xor
pop
leave
jb
or
mov
aad
jnp
jle
inc
fstps
push
repnz
jbe
aaa
lahf
jecxz
unpckhps
enter
and
xchg
mov
in
cmp
cltd
mov
popa
imulb
add
iret
stos
repz
cmp
sub
dec
movsb
mov
outsb
cmpsl
inc
lahf
loop
pop
test
dec
cli
scas
and
cmp
in
aas
ss
mov
idivl
adc
and
arpl
into
shrl
es
jle
adc
fs
mov
ds
pop
mov
cmp
psubsw
inc
and
pop
imul
insb
imul
dec
filds
test
jnp
adc
pop
cmp
arpl
pop
cmp
in
pop
mov
cmp
mov
lock
cmp
int3
in
pop
adc
test
aad
adc
je
gs
mov
ret
cmp
movsb
fistpl
sub
cld
pop
dec
push
test
xchg
negb
lahf
insl
and
push
test
call
repz
iret
jns
repnz
stos
xor
adc
sub
dec
out
pop
jg
rolb
mov
mov
arpl
pusha
mov
or
mov
mov
or
push
and
aad
mov
mov
aaa
cmp
xchg
cmpsb
insl
add
fistl
push
call
and
push
mov
mov
les
clc
sarl
inc
popa
mov
fmuls
mov
test
out
inc
clc
enter
in
out
stos
aam
aam
nop
push
pop
mov
cmp
incb
push
or
dec
jecxz
in
or
popf
cwtd
imulb
cmp
data16
mov
ss
imul
cltd
push
pop
and
dec
and
cmc
sub
adc
add
jo
call
sahf
outsb
cwtl
adc
adc
sub
xchg
push
push
mov
cmp
xchg
cmp
pop
and
adc
out
fisttps
sbb
cmp
fsubp
sbb
adc
sub
sahf
inc
jle
and
sbbb
in
fcmovne
lock
lahf
jb
orb
scas
test
or
pop
mov
loopne
sbb
clc
outsb
xchg
mov
enter
jecxz
push
into
jp
lods
and
scas
icebp
cmpb
std
lods
sti
mov
popf
inc
cltd
popf
ret
fisttpl
dec
and
ret
inc
clc
sbb
iret
daa
fs
mov
cli
push
lock
popa
or
jp
mov
xlat
dec
ret
out
cmp
push
mov
xchg
sbb
test
ficoml
sub
dec
add
mov
ss
mov
fwait
sbb
movsl
shl
xlat
in
jl
loope
movsl
xchg
jbe
pop
mov
lds
sbb
stos
lods
pop
cs
push
jb
mov
iret
shll
fldcw
xchg
push
mov
pop
pop
sub
push
mov
xor
cld
pop
movsl
dec
aas
pop
cmp
cmp
movsb
push
push
addb
lds
cmp
loope
cwtl
add
out
cmp
jo
gs
adc
mov
mov
jge
mov
sub
mov
xchg
lea
pop
mov
mov
lea
inc
cmp
aad
cld
push
sbb
ret
jmp
sbb
int3
rcrb
loop
or
lcall
xor
pop
gs
or
lahf
dec
inc
into
add
sar
push
in
xor
popa
xchg
pop
mov
fnstsw
clc
adc
push
sbb
fldcw
sub
lods
les
popa
jns
sbb
movsl
xchg
inc
jbe
stos
mov
inc
cmp
add
outsb
and
or
xchg
adc
movsl
pop
out
loope
mov
push
mov
loope
cmp
nop
cli
add
mov
and
jmp
mov
mov
sbb
mov
fcoms
xor
pop
push
dec
js
loope
outsl
push
dec
ljmp
fistl
cmpsb
or
je
sbb
mov
adc
sub
shrb
stos
icebp
ror
adc
repnz
dec
mull
in
xor
cmp
cmp
cli
sbb
mov
xlat
add
inc
aaa
inc
mov
sbb
add
movsl
xchg
and
repnz
test
loopne
mov
mov
aas
mov
dec
mov
loopne
and
iret
xchg
lcall
outsb
inc
out
and
inc
mov
es
sub
mov
mov
sub
insl
pushf
mov
out
cs
pop
lock
xor
sbb
loopne
bound
data16
je
xchg
push
imul
jne
cmp
mov
pop
inc
leave
mov
in
cltd
jno
lods
mov
jne
sub
in
dec
cmp
lret
or
movsl
and
jg
dec
push
aad
sbb
push
addr16
lds
les
add
in
pop
popf
test
jmp
cli
xchg
lods
mov
and
in
ret
sbb
sbb
xor
mov
push
mov
mov
shl
add
xor
lods
daa
in
sbb
movsl
bound
mov
shr
and
pusha
jno
add
bound
movsb
sbbb
nopl
pop
jnp
cwtl
movsb
jo
xor
sub
mov
xchg
test
insb
pop
push
dec
stos
jg
adc
in
int
rcrb
jb
fiaddl
xchg
pop
pop
push
fwait
or
inc
mov
nop
adc
pop
insb
loope
maxps
dec
push
cmpl
xchg
cmp
je
fnstcw
mov
xor
pop
mov
insb
or
ljmp
test
flds
mov
cmp
outsl
pop
insl
or
xchg
jns
hlt
popf
imulb
xchg
sarl
outsb
jmp
test
fisttps
pop
mov
sbb
dec
orl
sahf
fwait
call
mov
in
mov
jle
lret
pushf
xor
jne
lcall
cli
aaa
push
andl
xchg
mov
frstor
xor
mov
cmp
lods
lea
sbb
ret
lea
xor
enter
sub
imulb
imul
mov
lock
je
inc
loop
popa
and
lock
sahf
stc
lock
gs
pop
adc
fdivp
mov
call
cli
sbb
sti
movntq
popf
arpl
xor
insl
pusha
sub
jae
cld
clc
inc
mov
dec
and
dec
das
inc
les
lods
in
movsb
inc
pusha
mov
lret
mov
dec
lds
repnz
loope
test
sub
ljmp
aaa
pop
imul
push
and
push
adc
out
std
sub
sbb
dec
or
or
movsl
mov
jmp
scas
or
mov
pop
add
popl
mov
stos
or
popf
jg
push
pop
lahf
xor
xor
mov
push
push
sub
jae
jnp
bound
dec
sbb
or
pop
pushf
adcb
xchg
push
jge
pop
jno
jmp
push
lods
jmp
je
test
mov
mov
or
pop
adc
mov
fwait
mov
mov
arpl
jmp
mov
dec
in
lods
inc
fwait
in
inc
lret
mov
es
stos
pop
sti
fidivs
xchg
vmwrite
cmpb
push
fwait
int
xlat
push
push
adc
adc
push
addl
xchg
cmp
sar
and
xchg
loop
aas
pop
sbb
pop
xchg
bound
jae
push
push
xchg
ret
and
fistl
xchg
das
cmc
popf
push
fimuls
push
ficompl
ret
mov
lret
repz
stos
jne
ss
mov
pop
xchg
call
or
xchg
push
mov
push
cmpsl
jmp
bnd
arpl
mov
nop
stc
loopne
dec
adc
cmp
xchg
loopne
pop
in
push
hlt
lock
jecxz
inc
sti
jo
cs
je
js
mov
mov
push
mov
jmp
or
fstpt
mov
movsb
jnp
mov
call
mov
or
mov
xor
push
xor
test
pusha
xchg
xchg
ss
cmp
inc
and
pop
mov
jb
mov
scas
cmpsb
nop
enter
fs
imul
popa
imul
stos
leave
jns
loope
test
push
jge
xorl
mov
or
and
adc
or
mov
outsl
jp
loopne
push
mov
inc
rcrl
jbe
sbb
popa
pop
dec
jl
mov
or
dec
or
adc
or
add
repz
pop
and
iret
aad
scas
xchg
mov
movsl
fiaddl
xchg
xor
dec
pop
notb
lds
or
mov
mov
stos
sbb
pop
xchg
dec
nop
push
cld
mov
movsb
gs
pop
loope
data16
dec
cmp
aas
mov
mov
add
outsl
adc
call
sbbl
cmp
add
sbb
rol
add
test
push
jg
enter
sub
std
stos
push
setno
cwtl
repnz
in
cmp
mov
repz
mov
test
popf
dec
popa
pop
pop
jmp
mov
dec
dec
push
jecxz
sub
jmp
push
push
sbb
xchg
jb
into
aad
inc
sarl
mov
imul
imul
fstp
lret
nop
lock
scas
inc
mov
xor
xchg
add
ds
adc
ss
sub
aad
add
cmp
pop
rol
mov
stos
out
dec
sub
jge
das
pop
lahf
stos
mov
or
lret
pusha
cmpl
xchg
or
insb
push
flds
sbb
enter
add
pop
clc
mov
das
sub
popa
jb
mov
rcrb
or
adc
pop
sub
sbb
js
mov
cmc
cmp
cld
inc
mov
lcall
imull
adc
xor
push
sub
clc
popl
popa
xchg
dec
dec
fsubs
insl
mov
cmp
mov
dec
rorb
sahf
lea
out
mov
mov
sub
mov
sub
fcoms
movsl
add
jns
sbb
rclb
sbb
push
pop
xor
in
nop
push
push
sti
xchg
addb
loop
add
xor
cld
insl
roll
out
inc
in
lret
inc
insb
loop
pop
sarl
or
jae
pop
iret
push
or
inc
xchg
dec
lret
push
pusha
jno
fnsave
sub
sub
adc
push
xchg
xor
adc
xchg
xor
and
xor
and
sub
mov
rcrb
add
lcall
fucomip
adcb
push
aas
xor
add
mov
lret
inc
sub
bnd
mov
sbb
mull
mov
test
andb
sti
dec
scas
mov
fsts
push
es
sub
xchg
insb
imul
nop
bound
sbb
jo
cli
cwtl
rorb
mov
push
outsl
or
adc
mov
out
pop
mov
add
mov
add
pushf
mov
fidivrl
ljmp
mov
test
dec
cmp
push
inc
movsl
test
xor
inc
sbb
stc
pop
mov
jmp
stos
icebp
lea
fcomi
shrl
mov
push
sub
lret
in
mov
cs
insl
lcall
add
aam
shl
aam
adc
push
add
jae
mov
sti
testl
jne
cmpsl
or
test
sahf
cmp
or
xchg
scas
pusha
ficoml
push
jno
cmpsl
push
sbb
sarb
into
xchg
int3
adcb
xor
cmp
cmp
int3
xchg
popf
or
fimull
or
rorb
and
aam
xchg
xchg
lcall
ljmp
inc
std
fmuls
jo
outsl
mov
add
pop
xorb
dec
inc
dec
ja
iret
jp
shl
jecxz
lock
jg
or
outsb
das
ljmp
stos
repz
int
xor
dec
push
jb
mov
nop
cmp
insb
fcomi
cmp
stc
mov
adc
jo
or
int
nop
cld
or
mov
enter
or
call
rorb
mov
aas
push
and
ss
mov
pop
test
xor
dec
mov
pop
push
roll
mov
and
xchg
cmc
dec
sbb
cltd
imulb
mov
cmp
sub
inc
enter
mov
ss
xchg
loope
std
and
pop
dec
inc
popf
add
adc
into
push
or
sbb
lock
repnz
cmpsl
mov
dec
repz
inc
les
inc
add
push
sub
int3
cs
add
test
sbb
cmp
ja
jp
cs
int
mov
add
cli
add
cmp
inc
adcl
jmp
test
pop
sbb
push
and
push
mov
aad
or
lods
leave
lret
inc
xor
leave
orl
xchg
push
cmp
push
sub
int
push
fchs
and
xor
inc
rorl
cmp
fists
arpl
int3
xchg
scas
add
sub
pop
movsl
cmp
shll
bound
jo
mov
xchg
hlt
pop
lea
outsl
jmp
and
ret
pop
out
and
fldpi
imul
pusha
or
loop
les
stos
cmp
xor
mov
jnp
loop
add
shrl
daa
fldcw
sub
mov
mov
adc
and
testb
iret
insb
push
lahf
or
lds
faddl
and
and
movsb
jge
fucomip
das
stos
inc
out
lcall
push
lods
pop
xchg
stos
and
add
ja
mov
test
pop
sbb
xchg
movsl
or
clc
rol
cmp
xlat
adc
pushf
push
loope
xor
pop
gs
pop
jmp
pop
push
jns
sahf
adc
loopne
xchg
cltd
gs
mov
pop
fwait
or
icebp
and
popf
mov
mov
jmp
sbb
jae
loopne
jbe
mov
das
arpl
pop
mov
lods
inc
xchg
insl
repz
aad
ja
out
dec
in
out
stos
jno
pop
lahf
sub
mov
fst
in
mov
dec
imul
add
fildll
ret
and
xorl
es
fwait
loop
xor
int3
inc
les
xchg
push
in
in
clc
mov
orl
jmp
xchg
mov
and
ret
movsl
inc
mov
imul
jmp
in
sbb
in
out
arpl
int
and
sub
add
inc
xchg
jmp
and
adc
mov
ret
push
mov
dec
or
push
and
ljmp
inc
adc
inc
pop
sub
mov
data16
mov
add
push
std
out
insl
add
nop
das
int
mov
sub
pop
and
in
sbb
dec
mov
and
jmp
insl
std
cmp
leave
jle
add
jp
ljmp
movsb
stos
inc
mov
jge
sub
rcr
adc
iret
sbb
push
cmpb
xchg
icebp
mov
test
push
xchg
fcom
sub
in
push
mov
scas
mov
adcb
push
dec
das
cmp
aad
int3
push
subl
ss
add
mov
int3
leave
testb
jmp
cs
or
ret
sub
and
inc
or
daa
mov
dec
loopne
push
dec
and
mov
sbb
xchg
scas
call
inc
push
add
jle
in
stos
gs
enter
enter
das
or
lea
js
lahf
rcrb
jecxz
adc
hlt
sbb
mov
pusha
dec
sub
and
jge
andb
inc
jmp
insb
mov
ljmp
mov
jnp
rcrb
mov
jns
push
jnp
xor
das
sub
xor
sahf
dec
sti
inc
xchg
pop
cmp
test
dec
push
mov
test
adc
sbb
out
test
fdivl
push
scas
fadd
or
and
jge
andl
test
mov
mov
fcoml
jno
test
lods
int3
adc
jns
mov
fld
adc
push
rclb
push
mov
push
mov
or
bound
and
test
and
dec
daa
lahf
push
or
push
loop
sbb
shll
aas
scas
sub
xchg
push
xor
xchg
aaa
cmp
pop
out
pop
xor
adc
mov
fsubrl
push
divl
jle
and
mov
sarb
mov
sahf
push
stos
and
pxor
dec
jecxz
lret
or
popf
add
pop
xor
rcll
mov
adc
or
in
push
shlb
mov
push
add
rclb
adc
ljmp
dec
or
fnstsw
lds
inc
repnz
into
fdivrs
add
cmp
mov
sub
cmp
mov
push
push
in
mov
push
int
or
jmp
mov
push
fwait
repz
fs
push
popl
sbbl
or
inc
jge
xor
outsl
pop
fcomi
nop
lcall
xchg
pop
and
push
pushf
in
push
sub
repz
xchg
and
push
inc
or
push
push
imul
stc
lahf
pop
mov
sub
cmp
std
pop
ljmp
mov
sbb
xor
fs
test
dec
cmp
int
mov
pusha
sbb
or
popa
xchg
test
addr16
fstl
outsb
orb
mov
mov
pop
jg
dec
movsb
sbb
inc
stos
lea
orl
mov
add
sub
in
jb
push
mov
jns
sub
fiadds
mov
pop
inc
jb
xchg
push
repz
shlb
aaa
mov
push
adc
cmp
inc
add
or
cmpsl
das
xchg
mov
imul
cwtl
popa
dec
sub
mov
lahf
stc
outsb
inc
jp
arpl
imul
cmp
bound
call
xchg
cmpsb
aaa
dec
jge
xchg
and
mov
dec
xor
mov
idivl
stos
cmp
pusha
enter
sahf
xchg
jnp
das
mov
add
in
jnp
push
xor
test
popf
or
jl
adc
leave
xorb
push
or
or
andb
or
mov
xor
pusha
test
dec
adc
leave
sbb
scas
jle
int3
stos
xorl
lea
std
movsl
leave
mov
inc
ja
xor
movsl
jae
mov
cmp
test
out
cmp
pop
daa
int3
pop
pusha
lret
jae
dec
pop
lock
sbb
test
push
jnp
pusha
clc
orb
repz
pop
in
inc
mov
scas
pusha
fadds
js
cmp
loope
icebp
pop
pop
adc
add
sbb
sbb
outsb
and
movsb
stos
push
test
movsb
dec
aas
push
mov
rcrb
push
pushf
js
scas
mov
xchg
dec
jno
addb
icebp
jne
xor
xchg
arpl
fcmovne
xor
and
dec
pop
out
fsubl
cmp
xor
cld
clc
ss
push
mov
mov
xchg
dec
sub
lds
push
stc
outsb
mov
mov
jae
add
loopne
sbb
xlat
cmp
fcmovnu
xchg
arpl
lea
inc
movsb
insb
push
jo
mov
out
call
addb
stc
xchg
sbb
out
inc
sbb
fwait
and
mov
mov
xor
inc
inc
cmp
and
fisubl
rcll
enter
inc
in
mov
jp
cld
xor
jno
leave
std
mov
mov
repnz
dec
sbb
fmul
mov
push
pop
hlt
or
les
jl
xchg
mov
mov
inc
into
iret
loope
cmpl
ja
in
iret
or
enter
fistl
pop
push
je
dec
or
adc
adc
or
mov
lds
scas
ficoms
sarl
dec
imul
in
dec
xchg
dec
push
jecxz
pop
jp
pop
and
int3
popf
repnz
outsl
mov
mov
mov
inc
sub
xchg
xchg
lea
jl
lret
lcall
inc
enter
mov
adcl
or
sub
and
fisubrs
jo
sbb
pop
movsb
test
mov
sbb
fisttpl
and
dec
inc
cmc
dec
movl
hlt
js
and
leave
mov
mov
lret
mov
mov
xor
xor
hlt
lods
loopne
loope
arpl
adc
jnp
adc
sbb
loop
fdivs
xchg
add
add
cmp
into
push
cmpsl
loopne
pop
adc
outsl
mov
jo
popa
cmpb
pop
jno
fnstsw
int
mov
cmp
cmpsl
pop
add
xor
dec
mov
and
stc
test
pop
xor
je
fistpl
std
mov
stos
movsl
out
or
outsb
push
lret
inc
subl
ljmp
bound
lds
scas
popa
pop
aas
pop
arpl
cwtl
mov
mov
jne
ret
inc
pop
aas
dec
in
nop
insb
addr16
fstpt
lea
clc
pushf
ret
mov
pushf
inc
mov
and
mov
jnp
imul
cwtl
mov
int3
out
insb
test
or
out
push
cmp
test
add
adc
dec
push
js
gs
int3
pop
insb
imul
jae
cmp
sub
xchg
xor
push
ficompl
mov
into
xor
xor
sbb
add
pusha
mov
fisubs
or
mov
add
push
gs
push
inc
and
es
xchg
loop
pop
sub
xlat
fwait
jg
ret
or
rcr
xchg
jnp
sahf
pop
lahf
push
fidivl
push
mov
scas
faddl
mov
add
js
sub
lcall
push
popa
dec
sub
add
mov
leave
aad
cs
sahf
lock
and
pop
scas
inc
add
jb
jnp
stos
lods
mov
enter
mov
mov
xchg
pop
rcrl
dec
xor
push
rclb
push
cmp
movl
adc
and
mov
cmp
adc
mov
cld
adc
jns
inc
lahf
jb
xlat
mov
pop
inc
adc
cmp
fsubs
or
sbb
cmp
mov
xchg
sub
xor
es
push
jmp
sarl
dec
sub
pop
sbb
cmpsl
in
addb
cmp
add
dec
push
mov
mov
mov
pop
clc
xchg
xchg
xor
sub
push
adc
in
and
mov
mov
ret
mov
inc
pop
scas
fnstsw
xchg
outsl
pop
lods
adc
push
fidivl
rorl
and
or
mov
pop
xor
add
rclb
jae
cmp
jns
loope
inc
aam
fstps
jecxz
cmp
lea
xor
sbb
xchg
fcompl
in
repnz
sub
sub
nop
hlt
sbbl
fsubrs
push
and
shr
repnz
jecxz
mov
add
sbb
sbb
pushf
cs
mov
or
jp
dec
pop
scas
dec
adc
cs
mov
pop
iret
test
fwait
int3
imul
dec
xchg
mov
hlt
outsl
out
xlat
pushf
cmp
pop
jecxz
xchg
dec
adc
mov
cmpsb
sarl
jmp
cmp
jns
push
scas
sub
push
dec
ja
aam
and
dec
sbb
das
inc
rorb
lock
lret
fadd
dec
divl
scas
pusha
lret
inc
mov
adc
aad
adc
fnstsw
push
xor
fsts
aad
outsb
mov
out
push
dec
xor
and
in
outsb
in
fisubrl
daa
pop
mov
test
daa
mov
sbb
call
mov
pop
cmp
cld
das
mov
sbb
sbb
in
fidivs
cs
stc
bound
fsts
cli
test
pop
sub
movsb
jbe
mov
dec
xchg
pop
adc
sbb
jnp
setb
xchg
push
jl
pop
out
push
sub
std
test
cli
insl
pop
pushf
mov
int3
aaa
aam
cmpsl
fisubs
cmc
cmpsb
jmp
fucomi
lods
aam
je
sub
xchg
test
into
xchg
in
and
sub
scas
inc
add
int3
lods
push
xchg
std
scas
mov
loope
dec
call
xchg
add
xlat
mov
andb
xor
movsl
mov
popf
mov
adc
sub
jecxz
sbb
ret
add
adc
cmpsb
xlat
subb
and
sub
and
xor
mov
pop
ret
fbstp
push
lcall
inc
add
lock
and
setnp
xchg
arpl
push
xchg
jecxz
inc
iret
or
mov
pop
jp
inc
push
loop
mov
jnp
shl
sub
mov
jle
out
ret
rcrb
sahf
addr16
mov
sahf
jns
inc
or
xchg
mov
es
icebp
ljmp
xor
or
xor
pop
cmpsl
nop
in
ficompl
xorb
or
outsl
jnp
mov
sti
icebp
push
repnz
mov
mov
adc
jae
faddp
push
subb
mov
pop
pop
push
push
jmp
stos
loope
stos
xchg
sahf
mov
ficoms
mov
outsb
inc
and
mov
popf
cmc
ds
aas
fistps
in
push
fsubl
insl
mov
es
fs
lds
iret
incb
roll
xor
scas
xor
sub
mov
dec
xlat
jb
dec
lahf
mov
out
dec
cmp
push
cmpsl
imul
das
sub
lahf
fnstenv
out
or
aaa
push
int3
or
push
push
push
es
jmp
xchg
xor
push
js
outsl
mov
mov
inc
fimull
push
xchg
lahf
sbb
push
int3
xchg
mov
stos
ss
lea
mov
aas
mov
push
jb
mov
sbb
jg
cmovne
sub
mov
popa
dec
or
divl
jne
or
data16
cmp
jnp
jns
inc
dec
dec
gs
rorl
in
mov
mov
add
mov
push
addl
ret
in
sbb
cltd
cwtl
mov
int3
pop
mov
test
aam
mov
scas
stc
add
mov
je
push
sarb
pop
push
xor
add
mov
sub
xchg
push
shlb
out
push
lock
out
adc
mov
cmpsl
xor
cli
fiaddl
push
lret
je
jno
sub
sub
addr16
stc
inc
push
mov
leave
fwait
pop
outsl
mov
imul
mov
push
and
mov
xchg
aad
sbbb
leave
lods
sahf
ss
ficompl
mov
clc
sbbb
loope
sbb
xchg
adc
jb
cltd
mov
mov
fcomp
pop
mov
mov
scas
fstpl
push
inc
mov
pop
jnp
add
push
push
sub
scas
lock
jno
scas
cltd
lods
les
movsb
mov
cld
call
xor
inc
push
roll
sbb
shr
pop
imul
xchg
sub
sarl
lock
mov
dec
jns
stos
out
xchg
mov
jge
mov
cmpsb
dec
inc
iret
jb
es
or
ftst
ret
es
push
add
sar
mov
dec
lret
scas
aam
fdivrs
fs
add
lcall
mov
push
daa
xor
insb
fwait
sbb
sbb
fwait
add
stos
add
arpl
mov
xchg
adc
jecxz
pop
push
fcmove
or
cltd
fdiv
sbb
imull
fnstcw
loopne
inc
fisubl
mov
test
push
cltd
cmp
jge
inc
icebp
adc
push
pop
adc
loopne
push
mov
inc
loope
mov
xchg
repz
lret
sbb
push
ss
pop
and
push
rcl
andl
arpl
out
jmp
int3
pop
iret
inc
adc
mov
int
jmp
arpl
mov
cli
pop
rclb
enter
das
inc
into
mov
fldl2t
xor
rol
pop
out
das
pmuludq
pop
sub
add
pop
dec
movsl
mov
stos
mov
adc
push
enter
rclb
and
pop
and
repz
aaa
fmull
scas
push
xchg
cmp
sub
scas
dec
call
sbb
xchg
xchg
leave
inc
add
xchg
add
popa
push
pusha
or
jl
in
jne
aam
jg
push
insb
call
int
jg
adc
nop
leave
mov
add
xchg
dec
xlat
inc
jg
aaa
lods
insl
test
in
or
stos
push
cmc
and
add
xchg
fprem
jmp
movsb
push
sbb
mov
push
push
fs
jbe
add
adc
gs
push
mov
inc
jb
lahf
adc
rorl
daa
out
jae
mov
stos
jnp
sbb
push
fildl
or
pop
shlb
gs
fs
loopne
lea
mov
dec
pushf
dec
test
pop
adc
push
cmp
arpl
push
nop
add
pop
mov
data16
mov
mov
adc
cltd
popf
pop
into
insb
sbbb
test
pop
iret
fdivrs
dec
hlt
push
lret
test
cmp
fiaddl
mov
adc
cmp
lret
jne
movb
jle
sub
pop
and
pop
iret
jl
inc
jmp
cwtl
test
push
dec
cmpsb
out
lock
cs
and
scas
jae
xchg
nop
cli
xor
xchg
mov
test
mov
scas
push
mov
push
ret
xchg
mov
sub
xchg
fsub
into
mov
bound
inc
daa
lret
pop
subl
push
test
mov
out
mov
mov
pop
dec
mov
mov
stos
call
in
addr16
test
mov
mov
cmp
rorl
popf
into
iret
ja
dec
sub
pop
sbb
mov
mov
cmc
mov
out
cmp
cmp
and
push
loopne
mov
cmp
jne
mov
loopne
dec
sbb
jo
mov
les
sub
js
pop
das
stos
rolb
incl
adc
pop
cmpsb
pushf
jae
decl
xchg
sti
pop
lock
xchg
int3
add
pop
xchg
jne
sbb
out
test
mov
jl
cmp
ror
pop
pop
and
orb
fmuls
dec
scas
cmc
dec
loop
jo
dec
mov
sbb
sbb
or
mov
cmp
xor
dec
out
xor
pop
cld
mov
mov
xchg
dec
icebp
cmc
outsl
idivl
inc
xchg
in
cmp
sub
sarb
adc
js
gs
xchg
and
jne
jne
mov
push
sub
loopne
sbb
sub
jmp
mov
test
mov
cmp
lock
sti
mov
xchg
sbb
jb
mov
or
loop
xor
imul
or
cmp
push
iret
jg
or
lahf
and
lea
stos
pop
sahf
fidivl
and
inc
in
not
dec
jle
push
pushf
in
fisttpll
mov
mov
stos
pushf
and
jns
pop
pop
dec
mov
scas
test
sti
pusha
loope
mov
cmp
dec
out
in
adcb
fst
or
dec
lods
mov
rorb
push
adc
push
vprotb
add
aad
jo
xchg
jle
ja
jg
inc
mov
cltd
mov
or
jle
mov
and
dec
push
sub
roll
and
or
add
fidivrl
roll
dec
xchg
xchg
dec
scas
jp
xor
lahf
sarl
sbb
sub
add
ljmp
fdivrl
lock
xor
fwait
test
sahf
repnz
xchg
xor
rcl
scas
aas
xchg
jnp
push
add
or
dec
push
mov
sub
xor
add
and
in
lods
adc
out
xchg
mov
lods
inc
test
and
pusha
pop
pop
mov
mov
sbb
in
bnd
jbe
lea
mov
fcmovu
test
mov
dec
jmp
movsl
loope
lods
into
mov
sub
movsb
pop
aaa
sbb
mov
fistl
lahf
orb
mov
dec
cmp
insb
cmp
loope
mov
clc
and
pop
ja
jae
cmpsl
inc
int
dec
push
ljmp
outsl
or
xorl
loope
mov
leave
fmulp
xacquire
sub
loop
mov
stc
bound
pop
xchg
or
stos
push
dec
pop
int3
or
imul
mov
mov
cmpb
mov
xchg
or
cld
lds
push
lods
mov
jg
mov
sub
or
dec
les
insb
adc
das
mov
ds
cmp
rclb
movsl
push
mov
adc
jge
ja
iret
ds
sub
inc
jo
stos
xor
lods
xchg
aaa
lret
xor
xor
in
add
ljmp
push
push
cmp
das
insl
in
cmc
fists
mov
gs
adc
fistl
cs
dec
cmp
dec
fcmove
mov
jo
jge
sbb
pop
sub
mov
jae
push
cwtl
sbb
in
aam
fmuls
andb
lret
scas
adc
es
sbb
sbb
inc
jge
push
lods
test
subb
inc
scas
push
jl
mov
jecxz
imul
repz
add
and
call
and
shl
ds
cwtl
lock
xchg
xor
adcb
pop
fwait
and
cmp
sub
in
mov
loopne
int3
js
sbb
adcl
stos
daa
shr
dec
cmp
fidivl
inc
jle
mov
or
mov
push
js
inc
sbb
dec
mov
dec
add
adc
loop
adcl
mov
out
mov
addr16
scas
lcall
mov
aam
in
lret
test
daa
push
iret
pusha
xchg
sub
jae
mov
mov
inc
jae
pop
std
es
fsubrs
repz
clc
cmp
movsl
sbb
mov
scas
arpl
adcb
roll
iret
loop
mov
adc
push
into
adc
fmul
fisttpll
repz
sbb
fxch
adc
lret
xchg
dec
rcpps
xchg
or
push
scas
mov
pop
stos
scas
sbbb
sub
je
sahf
movsl
mul
imul
cli
aam
jecxz
sub
dec
push
mov
mov
or
ds
sbb
mov
pop
mov
pop
popa
push
and
popf
lret
shr
pop
mov
add
cmp
insl
lods
dec
data16
sbb
adc
fsub
movd
and
aaa
xor
mov
jg
add
dec
pop
shrb
jmp
jp
xchg
inc
dec
stos
push
xor
cli
cmc
fst
out
call
pop
inc
orb
popa
pop
test
xlat
inc
outsb
ds
les
pop
and
mov
sbb
mov
sub
in
push
scas
out
dec
push
adc
push
jg
cmp
and
je
cmp
dec
adc
add
testb
xchg
test
xchg
fadds
sbb
pop
movsb
jecxz
or
es
sarb
cs
das
jg
push
mov
jl
repnz
test
call
push
dec
in
pop
jns
fcoml
push
pop
jne
add
sbb
daa
lock
fcomi
es
outsl
or
jo
movsb
xor
loop
inc
out
pop
fidivrs
shlb
ds
sbb
movsb
test
das
rol
cmpsb
jae
insl
add
mov
clc
sbb
jl
mov
mov
ds
into
rolb
xlat
test
testb
jae
test
test
push
add
dec
int
mov
mov
push
dec
fdivs
adc
mov
outsb
aad
mov
xor
movsl
les
sub
std
out
adcb
inc
rcll
sti
lods
outsb
sub
std
sub
js
dec
sub
into
jo
fnstenv
mov
and
push
cmc
push
lea
inc
outsl
jmp
fs
out
sbb
shrb
fucomp
fdivp
sbb
and
jl
or
adc
or
add
test
jp
pop
push
aaa
daa
decb
mov
push
out
fisttps
int3
dec
xchg
add
sbb
fcompl
call
ret
ds
sahf
push
sub
ret
arpl
sbbb
in
jmp
orl
fdivl
pop
jbe
sub
rcrb
jecxz
rcrb
popl
add
push
scas
loope
movsb
xchg
xchg
pushf
inc
pop
push
ficompl
and
repz
mov
arpl
outsb
mov
sbb
sub
inc
cmpsb
xchg
sahf
nop
inc
pop
loopne
add
loop
add
push
sbb
cli
adc
sub
cmp
insl
int
dec
sbb
fbld
adc
rorb
stos
and
ret
mov
repz
pusha
loope
call
add
cmp
mov
rcr
test
mov
sub
cmpsb
cmpsl
repz
and
mov
mov
aad
mov
pop
call
fcom
jl
mov
jo
je
inc
outsb
sub
popf
fstpl
ljmp
ret
cld
xchg
push
sub
cmpsb
outsl
es
lret
sub
popa
add
les
insl
lcall
mov
cwtl
xchg
sub
in
mov
cmp
jge
fldcw
arpl
aad
shrl
les
in
xor
pop
mov
jb
rorb
in
mov
leave
mov
inc
stc
sbb
dec
sahf
scas
push
xor
fsubrs
push
fistpl
es
push
in
xchg
stos
movsb
push
daa
fidivrl
lods
xchg
arpl
add
hlt
jne
dec
inc
inc
dec
imul
lock
fwait
mov
jge
ljmp
pop
popa
jg
inc
cmp
xchg
xor
jl
jp
outsl
shlb
insl
pop
push
add
xchg
push
mov
inc
mov
repnz
shrb
arpl
or
enter
clc
jmp
in
adc
sbb
lcall
orb
inc
les
adc
adcl
jl
iret
cmp
pop
pop
push
ror
popa
lds
lahf
daa
outsl
xor
inc
pop
sub
adc
popa
daa
jmp
lret
fldl
repz
stos
xchg
clc
cmp
addr16
jmp
jmp
testb
sbb
test
ds
inc
xor
int3
test
lods
popa
aam
push
lahf
mov
cmp
sub
addr16
rcrb
mov
std
mov
add
xchg
repz
sbb
mov
fsin
xor
and
dec
pop
cmp
lcall
xor
rorl
cmp
fldt
popf
lahf
push
cld
dec
mov
loope
js
in
xor
pop
fs
dec
mov
sbb
jne
jns
xor
sahf
lcall
movsb
call
int
ja
lret
adc
add
in
sbb
cmp
jp
dec
jo
sub
mov
ror
and
mov
fadd
dec
negb
je
mov
insb
xchg
xor
popa
dec
leave
lret
dec
dec
sbb
insb
aad
testl
daa
mov
xor
xor
sbb
pop
movsb
roll
enter
xor
adc
out
xor
dec
inc
xor
out
pop
mov
xchg
insb
clc
sbb
pop
lret
mov
fbld
push
xor
scas
xor
mov
adc
sbb
xor
test
jbe
inc
pop
add
ds
cmpl
xor
scas
inc
inc
lcall
xorl
dec
jecxz
or
popl
fdiv
add
lods
push
pop
scas
dec
mov
outsb
and
mov
je
cmpl
jo
lds
inc
add
xor
lahf
mov
inc
jmp
pop
subl
dec
jle
adc
dec
shlb
mov
and
xor
pop
scas
push
inc
mov
mov
adc
mov
jbe
sbb
outsb
ljmp
and
inc
sub
out
mov
mov
sbb
bound
imul
jnp
test
pop
out
inc
dec
adc
sbb
arpl
push
movsl
and
cmpsl
jns
cmp
div
sarb
in
loope
clc
lahf
jns
cmpsb
mov
jl
fwait
je
xor
insl
fisubs
lods
icebp
pop
pop
jnp
xchg
push
pusha
in
bound
sub
push
xor
cld
sti
add
pop
cmpsb
out
xchg
lds
push
test
dec
xchg
ret
call
mov
jb
jnp
outsb
aad
adcb
int3
inc
out
jge
jp
mov
dec
cmp
imul
sbb
fcmovnb
mull
in
mov
shrb
xor
iret
pop
aam
mov
sub
xor
sti
push
or
add
inc
repnz
ljmp
cmp
inc
inc
xor
inc
aam
dec
lds
push
mov
ljmp
xchg
pop
pop
bnd
inc
xchg
jmp
lds
sbb
inc
inc
pmaddwd
fldenv
mov
ficoms
dec
leave
lea
aas
lock
repnz
leave
iret
data16
xchg
and
jge
cmp
lret
ss
adc
or
mov
dec
dec
dec
mov
dec
jae
test
aad
clc
movsb
je
mov
xchg
out
sub
out
push
mov
cmpsl
cmp
loopne
sub
xor
fmull
out
daa
aad
push
xor
sbb
int3
sbb
jo
fmuls
inc
add
xlat
addr16
inc
int
mov
es
seto
jo
jmp
cmpsl
push
les
or
sbb
xchg
test
sub
pop
adc
jo
pop
dec
jmp
mov
add
andb
add
mov
fcoms
mov
mov
cmovl
sub
xor
mov
out
imul
mov
pop
xadd
add
and
sbb
dec
pop
imul
mov
adc
jp
lds
cmp
or
mov
mov
add
jg
cltd
sar
popf
stc
enter
loopne
mov
stos
xchg
xlat
dec
or
sbb
mov
pminsw
ja
xchg
pop
dec
insl
ss
pop
or
into
mov
testb
pop
xchg
test
adc
dec
add
subb
xchg
std
les
sbb
andl
cli
mov
jmp
push
xchg
push
sbb
bound
mov
adc
xor
fwait
cs
ljmp
sub
pop
roll
cmpsb
push
int3
cmp
icebp
pushf
addr16
pushf
into
out
jo
jle
popl
dec
je
pop
push
and
ror
push
pop
pop
out
add
inc
inc
ret
mov
push
pop
ljmp
inc
xor
jbe
and
adc
cmpsb
adc
cmpsb
sbb
in
sbb
stos
mov
aaa
jnp
xorl
jnp
negl
add
add
jbe
push
push
pop
inc
fwait
xchg
test
push
lea
leave
cmpsb
pop
sub
repz
mov
xor
pop
and
sub
lock
and
cli
xor
mov
add
rcrb
mov
mov
push
icebp
lret
stos
sbb
xlat
adc
sub
out
das
cmp
mov
cmp
dec
aam
and
fiadds
and
int
insb
xor
fcompl
cli
loop
lds
sbb
cli
clc
xchg
ds
push
or
or
les
andb
fld1
add
data16
push
cltd
mov
push
push
movsb
cmp
mov
mov
fistps
lods
push
pusha
jno
push
inc
cmp
cli
jne
add
push
std
clc
mov
xchg
pop
mov
or
push
cmpsl
mov
adc
xchg
fwait
aam
shrl
add
dec
or
mov
mov
adc
lock
fiaddl
lods
jnp
notb
dec
hlt
sbb
cmc
push
inc
pop
pop
inc
dec
inc
add
test
pop
jns
cmp
repnz
ja
push
or
xchg
mov
jmp
or
xchg
dec
rcl
imul
mov
inc
aas
dec
loop
hlt
mov
ret
shlb
movsl
mov
rcrl
sbb
jae
ljmp
repz
xchg
jmp
mov
jmp
sti
ret
aaa
mov
xchg
mov
cmp
pop
jle
adc
add
aad
sub
scas
dec
hlt
and
int3
movsb
leave
jns
stc
push
dec
adc
pop
mov
mov
and
push
or
push
pop
test
xor
stos
adc
mov
out
jp
adc
aam
addl
scas
push
cmp
hlt
idivl
or
insl
mov
stos
push
pop
jno
sahf
test
in
sbb
mov
dec
xor
pmulhuw
mov
pop
out
dec
fistpll
xor
popf
jle
inc
add
dec
mov
popa
jle
xchg
jne
and
inc
repnz
mov
negb
cli
add
subb
sarb
jo
cmc
xchg
and
cmpsl
cwtl
scas
push
jmp
cmp
xorb
fidivrs
dec
push
or
jmp
mov
jmp
loope
imul
addb
cmpsb
inc
pop
mov
fdivl
add
inc
jp
int
fwait
mov
or
pushw
xchg
daa
xor
push
cli
mov
xchg
fdivl
in
add
or
enter
int3
enter
mov
cmp
lret
push
mov
es
in
sub
pop
js
or
add
sbb
hlt
pop
sbb
ret
adc
icebp
push
rol
add
inc
xchg
ss
movsl
mov
gs
out
ret
cwtl
lret
inc
jb
sysexit
or
test
rolb
dec
mov
dec
inc
inc
pop
outsb
mov
call
mov
inc
outsl
je
add
in
sub
sbb
push
gs
xchg
repz
lea
jg,pt
mov
insl
jnp
aaa
and
dec
dec
shrl
xchg
mull
xchg
lret
and
ret
dec
mov
inc
dec
xchg
outsl
push
push
pop
cmp
enter
sub
add
mov
cli
enter
sbb
inc
pop
dec
pusha
daa
cmc
aas
jmp
jno
imul
arpl
cltd
out
jnp,pt
pop
scas
mov
jp
push
cmp
ficompl
in
push
push
push
testb
pop
fsubl
imul
cwtl
shlb
loop
or
int
pop
pushw
sarb
ret
dec
jbe
loopne
addr16
insl
lock
mov
xchg
mov
sahf
ret
dec
inc
nop
mov
sbb
sbb
cmp
jae
pop
outsl
inc
lock
jnp
aas
jmp
cwtl
jae
and
outsb
int
xor
fldcw
inc
shlb
cmp
dec
cmp
out
jmp
jl
pusha
xor
dec
push
iret
jmp
mov
mov
cmp
dec
lds
ss
repz
cmc
aas
fidivs
ds
sub
push
jb
lock
ret
setae
fiaddl
push
jl
cmp
mov
enter
in
mov
mov
lret
push
xchg
mov
or
push
mov
daa
dec
dec
xchg
xor
mov
repnz
out
cmpsl
push
icebp
shlb
push
or
mov
mov
outsl
in
push
adc
dec
mov
pop
ss
xor
call
mov
enter
xchg
nop
fildll
or
ds
popf
test
push
clc
rorb
mov
push
rcll
sub
lea
push
jmp
sbb
inc
pop
jb
mov
mov
imul
push
arpl
vpsubd
fmull
stos
outsl
repz
aaa
inc
in
add
push
fidivrl
sbb
sarl
xchg
xchg
adc
pop
ds
ljmp
jmp
shlb
dec
dec
scas
push
dec
lret
arpl
cmp
mov
cmp
aas
or
push
call
sbb
xor
ds
dec
fidivl
inc
inc
in
pmulhuw
push
cmp
push
mov
adc
aas
scas
xchg
xchg
fadds
ret
pop
fists
clc
xor
xchg
dec
ljmp
xor
xor
xchg
divb
insb
mov
xchg
sub
inc
mov
out
push
aas
xor
fistpll
adc
push
mov
scas
test
and
push
fmull
add
pop
fcompl
mov
push
das
inc
lods
sbb
push
andl
cltd
test
mov
adc
add
mov
mov
mov
hlt
movsl
mov
xorl
mov
imul
cmp
shll
ljmp
test
adc
fbld
pop
into
jo
addr16
fwait
pop
cmc
aaa
mov
xor
out
loop
mulb
das
or
int
add
mov
cmc
ret
adc
loope
jmp
mov
pop
icebp
sbb
mov
lcall
in
fcmovb
mov
out
addl
pop
dec
loope
mov
mov
lret
mov
add
call
das
aas
mov
enter
and
outsl
ja
dec
inc
stos
mov
loop
scas
ljmp
int
aad
or
inc
mov
pusha
add
or
jae
jo
jg
mov
adc
pop
pop
lret
cmc
sahf
mov
mov
aaa
xorb
add
mov
push
dec
mov
sub
data16
xchg
xchg
fsubrl
das
clc
stc
jg
adc
push
lahf
mov
cmp
push
dec
jo
aaa
adc
ss
pop
fs
fcoms
cmp
cwtl
sub
movsb
mov
pop
ds
and
xor
adc
push
xchg
int3
into
in
fstpl
mov
movsb
or
movsl
xchg
jb
sbb
push
sti
xor
dec
into
sbb
push
aam
mov
jne
fnstsw
inc
jl
je
fisubrl
mov
adc
scas
mov
sbb
xchg
or
int
shlb
adc
and
xlat
xchg
sbb
out
jp
and
xor
cmp
insl
bound
sbb
sub
and
xchg
ja
ljmp
sbb
ja
xchg
ret
cmp
mov
cli
mov
shll
pushf
hlt
inc
sub
or
xchg
jns
push
ljmp
neg
clc
push
xchg
sub
enter
scas
call
dec
mov
mov
add
or
xor
add
jno
lock
shl
fsubrs
iret
lret
cwtl
ja
jle
add
test
jecxz
jmp
mov
pop
lcall
mov
mov
jne
add
and
add
ret
leave
or
pop
jnp
pop
lahf
addb
add
push
push
jge
flds
out
test
push
adc
adc
lcall
mov
daa
lods
cwtl
pushf
or
dec
adc
aaa
lret
fsubrs
or
fidivl
jno
in
stos
push
and
subb
mov
pop
jnp
add
std
sub
sub
stos
iret
out
ja
adc
mov
ss
jge
jmp
dec
lret
sbb
push
dec
popa
push
push
xchg
cmp
xor
pop
sti
pop
and
fs
pop
loopne
sub
test
movb
test
cmp
add
jp
sbbl
lea
add
int
inc
out
mov
and
in
sbb
dec
pusha
lock
lcall
jmp
mov
adc
pop
push
mov
ja
hlt
aaa
std
sahf
xchg
jecxz
ret
mov
cmp
stos
shlb
rcrb
outsb
rol
leave
notl
stos
cmpsb
inc
xor
ss
mov
mov
xor
hlt
fs
and
or
add
push
ds
add
loope
adc
insl
push
ljmp
adc
mov
arpl
adc
bound
stos
xchg
popa
ret
lods
mov
push
shll
lods
jb
insb
mov
push
ret
push
int
out
dec
mov
pop
iret
stc
xlat
pop
scas
ret
ret
lock
mov
sub
popa
les
cmp
aam
lods
aad
lods
std
inc
sbb
cmp
mov
scas
call
cmpsb
and
mov
shlb
mov
in
cmp
inc
sbb
push
insb
scas
hlt
in
xchg
notl
in
lcall
dec
mov
fs
subl
aam
xchg
jbe
or
lods
push
pop
cli
dec
cmp
out
gs
xchg
pusha
fs
mov
in
loop
int
mov
cmc
push
ja
jge
es
ret
lahf
push
sarb
sahf
mov
adc
adc
dec
fimull
inc
lods
or
mov
pop
mov
int3
and
or
andl
fcmovnu
dec
fcompl
xor
leave
pop
shlb
or
inc
jg
mov
test
mov
addr16
adc
inc
js
adc
je
pusha
in
outsb
dec
fcoml
mov
icebp
dec
sarl
imul
jnp
jno
shlb
les
sub
cmpsl
mov
inc
mov
test
push
adcl
scas
sbb
xor
aam
or
or
dec
out
enter
ficoml
inc
aad
int
push
lea
addb
stos
xor
lahf
jle
jg
dec
in
cmc
sub
test
pop
inc
jge
test
imul
clc
rcr
inc
pop
lods
es
inc
xchg
xchg
popa
and
mov
xchg
cld
arpl
nop
fdivp
add
pop
fisttps
jbe
jb
cli
adc
leave
fs
ja
lods
mov
sub
outsl
pop
mov
and
pop
ret
mov
mov
into
cmp
loop
lret
pop
mov
mov
pop
jecxz
mov
push
loopne
nop
ret
and
orl
dec
lcall
dec
cmp
adc
cli
and
jl
mov
js
xchg
dec
push
les
add
pop
in
or
test
aas
dec
jmp
shll
repnz
aaa
loopne
dec
jne
mov
mov
inc
sahf
push
loop
stos
inc
sahf
ret
lret
push
cmp
cld
sbb
mov
adc
mov
xchg
pop
lahf
aam
in
lret
jl
aaa
pop
pushf
sbb
sbb
cli
jo
mov
sub
xchg
in
and
mov
bound
push
sub
fs
nop
cltd
and
stc
nop
popf
mov
mov
cld
jb
mov
and
js
mov
add
pushf
paddd
mov
xchg
xor
dec
jge
arpl
sub
les
jae
clc
push
inc
mov
int
and
sub
stos
dec
lea
cmp
je
mov
dec
xor
popf
mov
mov
xchg
int3
shr
and
add
jmp
in
cmp
jge
das
std
mov
sbb
mov
repz
aaa
ficoml
imul
imul
pop
xor
mov
sbb
adc
sub
insl
xchg
movsl
add
xor
mov
in
push
loope
xor
jno
sbb
lret
add
into
adc
loope
and
mov
ret
dec
stos
cltd
push
xchg
pop
out
subl
cs
xchg
repz
or
add
cmpsl
mov
mov
mov
out
clc
push
add
bound
mov
xchg
out
das
jnp
cmp
test
xor
fdiv
mov
gs
int
mov
jno
mov
push
leave
les
pop
push
jnp
inc
cld
imul
mov
dec
lret
inc
fists
jne
cmpb
jae
xor
leave
pop
fldcw
cmp
xchg
dec
mov
mov
movsb
pushf
xor
jne
mov
mov
pop
filds
ret
pop
dec
adc
mov
fldl
out
lahf
in
add
adc
cmp
inc
sub
fldl
xchg
jp
ret
adc
lcall
push
ror
pusha
outsb
add
dec
push
add
cli
dec
xchg
cmp
sbb
mov
enter
sti
rorb
movsl
sarl
jnp
mov
push
xor
sbb
dec
cmp
push
jmp
daa
xor
dec
sub
dec
cmpsl
mov
xchg
mov
roll
insl
test
outsb
dec
cs
mov
mov
cmp
pop
mov
xchg
mov
imul
xchg
jp
mov
add
jl
fnsave
cs
sub
in
dec
mov
addr16
scas
cmpsb
pop
push
aam
xchg
test
xchg
jae
inc
add
dec
repz
push
sub
test
stc
pop
int
pop
test
push
mov
add
mov
jns
outsb
pop
loopne
rcrl
das
or
cmp
dec
outsb
adc
xorl
add
shlb
fcmovnb
adc
pop
outsl
xor
fldl
dec
ds
adc
xorl
clc
jnp
imul
jns
pop
and
andl
sbb
and
popa
mov
adc
loopne
add
cmp
sbb
ret
lods
sub
sub
dec
daa
fwait
sub
out
sub
nop
dec
sub
repnz
mov
xor
pmuludq
push
pop
jbe
mov
jmp
stc
mov
jg
dec
shlb
cmp
pusha
into
pop
imul
jg
jge
outsb
push
fidivrl
aas
fisttpll
movsb
in
das
or
sub
in
fstpl
sbb
push
test
out
fnstenv
mov
loope
xlat
mov
movsl
mov
nop
rcll
xor
orb
cmc
push
sbb
mov
addr16
lea
pop
dec
icebp
gs
xor
repz
jge
popa
mov
adc
rcrl
call
mov
in
push
push
icebp
je
mov
push
nop
arpl
and
jecxz
xor
outsb
xor
int
lea
loopne
rclb
jecxz
mov
jle
mov
ffree
sub
xor
in
mov
push
das
aaa
sub
int3
inc
icebp
and
ja
jns
inc
cmp
fsubrp
adc
in
cmp
nop
sahf
xchg
or
dec
xchg
and
cmp
push
outsb
sbb
mov
adc
movsb
shll
cli
aaa
lret
or
mov
pop
cld
outsl
lret
sub
adc
sub
xchg
cmpxchg
pshufw
push
cmpsl
pop
mov
sbb
loopne
mov
mov
pop
mov
add
jne
cmp
ljmp
xchg
cmp
loope
cltd
mov
into
sbb
pusha
push
hlt
inc
gs
dec
shrl
add
loop
enter
sahf
repz
pop
jge
xchg
sahf
sub
and
jb
ja
sub
jnp
jecxz
jno
mov
adc
aaa
or
jae
shll
jp
pop
aam
jge
push
pop
out
pop
loopne
shrl
push
xchg
jns
sarb
mov
pop
loopne
and
leave
add
sub
inc
mov
mov
testl
pop
mov
imul
cmp
jno
icebp
popa
pop
imul
into
in
mov
sbb
ss
dec
lret
cltd
cmp
pop
bound
mov
fnstcw
ljmp
lds
pop
inc
cmc
pop
out
fcmovbe
pop
add
inc
mov
pop
lcall
cmp
out
push
aaa
out
push
jnp
xor
out
notl
test
pop
mov
imul
mov
adc
rclb
unpckhps
dec
call
shlb
bound
jno
xchg
lea
jno
test
push
jge
cli
in
mov
lods
inc
push
mov
movsl
dec
dec
pop
pop
sub
ds
add
xlat
dec
pop
imul
repz
ljmp
leave
fisttps
pop
jae
xchg
shll
lods
xchg
jne
pop
insb
and
adcb
int3
add
incb
xchg
pop
test
cmp
psubsw
cmpsb
fs
inc
cltd
and
cmpsl
xor
cltd
test
hlt
int
pop
fldcw
loope
pusha
mov
mov
and
outsl
push
insl
pop
jg
fidivrl
bound
ror
inc
sub
adc
enter
movsl
dec
jb
and
mov
imul
add
pop
lret
fdivr
cmpsb
adc
sub
sub
inc
test
jns
push
and
rep
add
cmp
add
cs
outsb
or
xchg
std
inc
fldl
pusha
mov
inc
std
lret
xor
pop
addb
sbb
adc
lret
mov
jb
sbb
repz
sar
loope
repz
push
ljmp
ljmp
pop
xlat
pusha
loopne
push
mov
and
jns
sahf
stos
xor
fstpl
test
scas
xor
cmp
mov
icebp
push
xor
jecxz
test
xchg
mov
pop
add
popa
insb
add
lcall
fistps
mov
fistps
adc
add
mov
lock
pop
icebp
mov
shll
inc
add
int3
adc
cltd
ficoms
rep
cmpsl
jecxz
xlat
clc
insl
cltd
and
mov
insl
aas
xchg
test
push
pop
inc
aad
dec
testl
dec
outsb
test
das
inc
xor
rorl
lret
sbb
aaa
or
cmpb
lods
xchg
jb
ficompl
sbb
jne
sti
jecxz
adc
fdiv
sub
in
int3
addl
pop
hlt
clc
cltd
jae
aad
jae
pop
cmp
mov
or
jbe
outsl
mov
daa
dec
sub
hlt
dec
fidivrl
push
xor
jns
sub
popa
mov
or
std
pop
cmp
test
xor
jmp
mov
mov
rorl
push
aad
gs
fwait
aad
mov
std
and
or
mov
mov
clc
pop
std
cmp
xchg
adc
in
out
adcl
cmpsb
push
sbb
mov
mov
mov
or
inc
push
and
fnstenv
and
mov
inc
jns
lahf
mov
cmc
stos
out
jle
pushf
xchg
jb
mov
mov
pop
push
mov
mov
mov
jne
jg
repz
in
lcall
aad
mov
fisubrl
mov
jo
rol
mov
call
mov
cmp
clc
xchg
inc
or
xor
xorb
mov
out
push
jl
dec
mov
cmc
pushf
sub
sub
clc
xchg
add
push
push
pop
sbb
jne
add
push
sbb
sbb
ret
shll
mov
xor
leave
push
aaa
xor
testb
fcmovnu
scas
cwtl
movsl
fstpt
out
test
scas
sti
nop
lods
das
outsl
xchg
sbb
cmp
fiaddl
stc
arpl
pop
mov
fidivs
mov
xchg
dec
jp
dec
push
filds
add
push
rcl
jge
mov
add
rcl
jg
jl
scas
jg
outsb
call
jns
std
dec
sbb
rcll
sbb
insb
arpl
cltd
ret
pop
pop
stos
fwait
jle
scas
les
das
test
jns
add
mov
push
mov
insb
cmc
fidivs
push
and
lcall
push
jl
mov
pop
add
movsb
fnstsw
dec
xchg
inc
movsb
ret
cmpsl
sub
jp
cld
add
mov
mov
inc
stos
cwtl
popa
imul
mov
mov
sti
push
nop
jo
mov
push
int
xor
dec
xchg
mov
add
mov
mov
movsb
in
leave
fs
enter
rorl
dec
pusha
sub
mov
xor
dec
pop
les
mov
pushf
in
inc
hlt
mov
xor
ret
or
clc
scas
jl
mov
jmp
gs
jg
mov
inc
repz
push
repnz
mov
aas
xor
mov
mov
cli
or
sub
or
cmp
xchg
cs
mov
push
sbb
pop
inc
sahf
sub
hlt
and
aaa
hlt
shll
xchg
xchg
cmpsl
sub
scas
pusha
cmpsb
sti
pushf
jb
popf
cwtl
inc
cltd
push
nop
add
xchg
mov
in
pop
fcmovnb
inc
inc
and
rol
lcall
das
pop
rclb
xchg
and
out
loop
jne
aas
mov
int3
jne
leave
dec
out
and
cs
cs
push
pinsrw
enterw
xlat
fwait
mov
and
xchg
je
push
xchg
sbb
dec
add
shl
arpl
sbb
jl
repz
push
loope
mov
xor
adc
ror
add
pop
sbb
dec
or
fs
xlat
sub
fistpl
mov
mov
stos
cmp
mov
popa
dec
push
cs
mov
mov
fimuls
out
mov
faddp
sbb
xor
insl
sbb
xchg
aam
notl
bound
das
mov
insl
or
adc
cltd
clc
jg
lret
test
lret
pop
sbbb
fdivs
or
push
divl
loopne
fs
cmpsb
xorl
push
test
imul
fdivp
cmp
inc
xor
xchg
shrl
jno
jge
jge
mov
xchg
stc
imulb
orb
call
mov
sbb
cmc
test
mov
adc
movsb
mov
sahf
fisubs
push
mov
push
jnp
xor
sti
push
insb
movsb
popa
nop
push
stos
movsb
test
out
adc
add
or
lea
push
pop
adc
dec
cmp
xor
and
and
clts
icebp
hlt
sub
or
push
repnz
idivl
call
jo
pop
cmp
jmp
mov
call
adc
or
xor
mov
divb
add
loopne
add
sbb
shrl
sub
outsl
lcall
add
fcomps
dec
and
xchg
cmp
sub
aas
push
push
mov
or
jge
add
inc
scas
je
insb
cmp
mov
out
lds
pop
jle
mov
stos
lea
mov
shll
in
adc
push
mov
mov
push
lret
add
adc
fwait
or
add
movsl
test
aas
mov
jne
das
mov
and
hlt
or
jno
dec
test
lret
ds
js
jno
add
jno
test
pop
add
in
pop
fidivrl
xlat
outsl
dec
out
push
fisubs
adc
lods
sub
lcall
or
nop
cwtl
neg
inc
push
sbb
clc
aad
jae
aaa
and
xor
addr16
cmp
jae
pop
aad
push
push
cmp
jecxz
popa
test
sub
ret
fstl
repz
ja
push
cmp
or
adc
xor
aad
push
ss
lods
jmp
lret
mov
sbb
in
add
or
jecxz
adc
adc
jo
imulb
call
shl
mov
dec
mov
pop
cs
stos
adc
fisttpl
div
data16
loope
mov
ret
sbb
xor
fdivs
and
in
js
pop
add
push
test
das
adc
je
fstl
test
jle
push
shrl
xchg
je
in
push
fisttps
fdivl
push
mov
add
cmpl
mov
and
mov
cmc
and
insb
ss
in
out
push
cs
fsubs
cmpl
int3
mov
push
fistpl
imul
xchg
jbe
in
out
adc
push
or
pushf
jb
pop
jbe
push
and
mov
gs
ss
inc
das
mov
test
loop
arpl
into
fs
out
filds
or
xor
mov
ljmp
mov
pop
mov
sbb
add
mov
sbb
xchg
lock
cs
fld1
pop
mov
jp
add
sti
push
jl
jno
movb
clc
loopne
push
mov
push
pusha
cmpsb
negb
popl
stos
or
icebp
sub
push
loope
fsts
loopne
adc
cli
push
jmp
fcmovnb
aam
push
add
stos
es
aad
cmpl
mov
fcom
cmp
xchg
adc
ret
jl
jno
xchg
mov
pop
sub
jg
sbb
sub
dec
call
pop
stc
add
xchg
cld
jmp
test
jle
mov
xor
stc
outsl
in
pusha
pop
mov
ljmp
xchg
push
lret
mov
pop
outsl
sahf
mov
cwtl
in
stc
mov
push
dec
or
mov
out
sbb
test
rclb
insl
pop
outsb
adc
push
daa
xchg
sbb
ds
sahf
sahf
xor
das
or
arpl
mov
dec
jbe
jg
iret
push
insb
fisubs
adc
popa
call
ss
aam
inc
pop
ss
fisttpll
push
into
xchg
movsb
mov
sti
repz
xlat
push
sub
dec
pop
xorl
ss
inc
mov
xchg
adc
shrb
loop
pop
mov
add
or
inc
aad
outsb
lahf
sbb
push
lea
mov
insb
xchg
fcomi
or
add
cltd
mov
xor
sarb
mov
popw
arpl
pop
into
add
rorb
xchg
repz
and
in
shrl
or
adc
cltd
adc
test
mov
pmulhw
loopne
scas
sbb
xor
and
jnp
insb
loopne
jle
std
xchg
inc
lds
leave
faddl
cmp
push
and
jb
mov
lods
push
mov
mov
lods
pusha
clc
add
mov
push
sbb
out
xchg
and
scas
cwtl
shlb
or
xchg
dec
lret
xor
xor
push
scas
shll
jl
xlat
leave
mov
pop
js
mov
dec
movntq
clc
push
mov
mov
sub
dec
or
xchg
jp
cli
cmpsl
pop
sbb
in
xchg
mov
inc
cs
aad
pop
lds
hlt
aaa
aam
add
lcall
loop
nop
and
scas
mov
and
and
xor
fisubrs
daa
test
dec
repz
nop
xchg
dec
scas
inc
push
xchg
iret
enter
sti
sub
or
movsb
xchg
adc
not
adc
mov
xchg
or
stos
add
mov
or
lods
data16
sbb
cwtl
and
outsl
aam
icebp
inc
and
xor
push
and
gs
and
add
lea
fsubrs
daa
mov
int3
cmp
or
and
and
push
fadd
sbb
jecxz
pop
loope
cmp
sti
push
les
std
jbe
mov
scas
cmp
add
push
jae
in
ret
outsb
bound
out
dec
leave
pusha
addb
sarl
or
iret
cmpsb
mov
fcomi
bound
and
repz
mov
cli
xor
scas
je
je
dec
add
cmp
sub
and
ret
imul
adc
sub
xor
mov
dec
sti
ret
sub
sahf
fstpl
in
mull
dec
mov
push
out
cmc
movsl
sub
cmc
push
imul
push
in
and
cmp
sbbl
aas
mov
test
jae
inc
test
lods
mov
cltd
sahf
xlat
fldl
pop
cmp
orl
sub
fistl
sbb
mov
add
insl
popf
outsl
loop
stos
mov
push
stc
stc
xchg
pop
push
aaa
andl
shll
sub
js
test
or
stos
mov
jb
icebp
dec
jb
mov
sahf
sub
jg
bound
sbb
sbb
or
outsl
data16
add
cmp
cmpsl
mov
push
insb
inc
jecxz
mov
sub
enter
and
leave
mov
adc
pop
jne
lcall
lret
xchg
add
icebp
mov
pop
out
out
mov
or
jmp
pop
das
mov
inc
shll
pop
push
insl
push
jnp
adcl
mov
mov
mov
idivb
lds
test
mov
dec
arpl
xchg
cmp
stos
inc
pop
cmpsl
test
popa
pop
stc
popf
xor
insb
ljmp
cmp
fldl
mov
xchg
fsts
mov
dec
jae
inc
out
sbb
lea
cltd
adc
xchg
xor
out
push
cmc
icebp
sbb
pop
add
jo
adc
mov
or
mov
push
add
enter
cmpsb
pop
stos
cli
xor
popa
jb
outsl
js
xor
jge
push
adc
hlt
shlb
push
inc
sbb
fcomi
push
sar
fdiv
xchg
jae
int3
data16
sbb
fstl
test
xchg
jae
push
cs
and
inc
lock
lcall
xor
shrl
fsubrs
out
mov
adc
sbb
ds
mov
sbb
xor
and
xchg
cmp
es
lret
jno
push
cmc
shll
out
mov
pop
rorl
ror
push
lods
jae
les
fstl
les
stos
fcomps
adc
lahf
dec
push
dec
xchg
pop
fdivrl
inc
pop
mov
pop
mov
test
aaa
fiadds
or
pop
int
je
mov
inc
xchg
js
mov
inc
into
pop
mull
fistps
loope
adc
mov
mov
repnz
xchg
icebp
and
jg
mov
jbe
dec
aas
sub
sbbl
fwait
daa
aad
bnd
xlat
decb
and
xor
dec
repnz
std
pop
test
jmp
repnz
jg
push
push
imul
sub
fwait
mov
leave
mov
jmp
adc
je
cmp
push
mov
scas
jl
sub
push
mov
and
add
fdivrs
adcl
mov
pop
jge
and
sub
or
mov
push
popa
aad
sbb
adc
pop
pop
js
jmp
cmp
adc
out
aad
movsb
shl
call
mov
fstpt
out
aam
cmp
imull
mov
std
jb
mov
cltd
rcr
lea
rolb
xor
in
sbb
shll
and
adc
or
dec
dec
rol
mov
ja
xchg
cmp
push
inc
jbe
sbb
loope
cwtl
cmpsl
clc
mov
adc
add
cmpsl
cs
mov
iret
enter
push
out
data16
mov
ret
fucom
movsl
lret
sub
jp
jbe
push
or
jb
sbb
pusha
xor
subb
cli
pop
addr16
loope
test
pusha
add
sbb
inc
clc
adc
int3
mov
dec
lds
mov
inc
daa
push
jecxz
add
dec
jmp
add
mov
cmovno
pop
ds
fcomip
cld
lea
push
pop
test
or
add
andb
jmp
cmpsl
sub
stos
daa
stos
repnz
and
in
pop
dec
add
in
jp
mov
add
fdiv
jo
lods
add
scas
adc
xlat
mov
add
inc
mov
mov
fcomps
or
mov
push
dec
inc
movsb
pop
lods
push
sub
addr16
mov
or
mov
fwait
xchg
les
lahf
add
dec
popf
hlt
in
jbe
sub
xor
sub
push
sub
and
add
lods
outsb
daa
inc
test
push
add
std
inc
inc
or
xchg
add
cmp
div
sub
into
and
test
fistps
xor
rcr
lahf
pop
cmp
cmp
hlt
pop
cmp
aaa
mov
das
jo
loop
mov
stos
push
sahf
enter
jno
inc
ficomps
pop
or
xchg
add
int3
js
cmpsl
insl
inc
adc
mov
inc
fisttpl
mov
adc
popa
dec
push
jbe
add
sbb
push
push
test
insl
es
push
jo
add
rol
or
movsb
xchg
insb
jge
mov
inc
sbb
mov
add
jb
cwtl
jbe
pop
xor
cltd
pushf
add
imul
push
push
xchg
aad
pop
ret
ss
mov
sub
inc
rorl
xor
pop
aaa
push
lds
lock
pop
je
pop
sub
push
stc
sbb
mov
and
jp
sbb
cmc
cmp
cmp
movsb
add
outsl
ror
incl
mov
push
mov
lds
xchg
cld
mov
scas
sbb
mov
sub
cmpsw
push
cmp
arpl
jo
daa
xor
add
xchg
xchg
lock
ror
int3
in
mov
lret
imul
movsl
xor
ljmp
push
fnstsw
push
and
pop
das
push
dec
pop
imul
outsl
sub
in
inc
clc
outsl
movsl
sub
mov
jmp
inc
pop
xor
jo
sub
aaa
rol
or
push
repz
xor
mov
loop
mov
inc
mov
mov
sbb
rorl
push
mov
or
hlt
fsubl
out
cmc
dec
js
dec
xchg
sbb
mov
sub
sbb
mov
xchg
sbb
outsl
daa
lds
lods
js
pop
mov
jno
inc
xor
and
jns
rorb
stc
dec
xchg
cmp
push
sub
xchg
mov
mov
inc
data16
push
add
jbe
pop
mov
int3
enter
daa
inc
aas
fistpl
lods
and
addr16
imul
call
dec
pop
adc
dec
push
hlt
or
mov
sub
sbb
cmp
push
dec
mov
dec
xchg
or
pop
js
jno
mov
sub
mov
mov
loopne
mov
jle
pop
jl
jns
jbe
in
cmpsl
push
adc
jns
jae
notb
or
pop
incl
mov
and
xor
test
add
repz
pop
or
xor
lea
es
loop
dec
into
fistpl
push
add
stos
jnp
popf
gs
mov
clc
push
mov
and
jo
lahf
test
shl
pop
add
lds
inc
out
mov
mov
int3
mov
fs
cmpsb
mov
push
and
divb
add
mov
aas
xchg
incb
mov
lock
xlat
das
ss
dec
push
mov
jp
xor
xchg
push
int
lock
dec
iret
and
mov
cmovb
push
mov
imul
lret
sbb
popw
mov
mov
fstpt
adc
clc
inc
fs
push
inc
xor
adc
and
std
dec
cmp
and
cmp
test
stc
or
mov
leave
jg
pop
arpl
aaa
sub
and
shlb
fs
nop
es
and
leave
loop
jg
lods
inc
inc
inc
out
stos
mov
leave
and
clc
test
bound
aad
mov
bnd
jae
popa
cmp
add
add
dec
scas
xor
rcll
nop
cmp
adc
aaa
push
outsb
dec
or
adc
cmp
dec
inc
dec
std
adc
sahf
sbb
cmpsl
insl
inc
out
int3
pop
mov
sbb
add
and
popa
dec
int3
add
dec
mov
int
imul
push
rcl
pop
jae
mov
pop
pop
pop
movsb
mov
adc
add
stc
dec
lret
shlb
jg
hlt
das
fwait
mov
test
add
xchg
gs
sbb
jns
sbb
lret
nop
push
ds
insl
pop
cmc
dec
lret
stos
xlat
mov
xor
xchg
fcoml
orl
add
pop
je
xchg
js
aaa
mov
dec
je
xchg
push
mov
cmp
add
fildl
out
xchg
xchg
rolb
and
dec
xchg
add
xchg
and
sbb
scas
cltd
mov
and
sarb
push
dec
lock
inc
notl
mov
mov
push
lods
push
nop
mov
inc
lea
mov
push
test
sub
dec
dec
xor
scas
xchg
aam
fldpi
mov
in
mov
adc
in
xchg
jmp
ljmp
and
scas
andb
jns
outsb
out
cmc
outsb
jmp
lret
movntps
ficoms
out
leave
ret
dec
push
mov
pop
lret
pusha
and
repnz
cli
xlat
mov
cmp
adc
jge
add
insb
fwait
iret
inc
pop
xor
insl
dec
jne
sub
mov
and
icebp
jne
in
sbb
mov
pop
inc
push
pop
pop
mov
movsb
ds
lea
fidivs
lods
adc
adc
ret
adc
les
in
mov
xchg
rclb
mov
cld
rcrb
add
xor
in
push
push
xchg
cmp
fwait
pop
pop
mov
mov
mov
dec
xor
hlt
fsubl
inc
mull
clc
pusha
popa
out
test
add
or
fildl
aad
in
loope
xchg
jmp
sub
insb
dec
xchg
sti
test
les
les
sub
nop
ret
mov
hlt
loop
xchg
test
stos
xor
call
ret
mov
sbb
pusha
js
mov
push
fwait
cmp
or
lcall
pop
je
ja
mov
push
test
xor
cs
push
jo
adc
mov
adc
aad
jecxz
mov
data16
mov
push
xchg
and
lds
std
jge
push
pop
inc
cmpb
nop
and
xor
iret
push
movsb
ds
sub
jo
push
pop
push
imul
imul
fstps
call
js
xlat
sub
hlt
jmp
lods
push
loope
cmp
fildll
lcall
cld
inc
xor
xor
xchg
cmp
idivb
inc
xchg
or
cld
ret
xorb
add
fsubrl
dec
push
lods
icebp
xchg
aam
inc
push
lea
movsb
test
mov
jmp
movsl
popf
mov
mov
push
les
filds
sub
push
add
jle
jl
mov
ret
cmpsl
jns
jbe
jecxz
xchg
add
xchg
add
cli
mov
inc
js
add
fsubr
jmp
cmp
cli
cmp
mov
pop
lcall
fs
pushl
xor
lods
inc
cmp
sahf
pop
cmp
fmuls
xorb
mov
push
aaa
cli
and
je
dec
fdivr
jg
jge
adc
or
into
sbb
loope
les
jecxz
jl
sti
lcall
jmp
xchg
or
inc
outsl
js
movsl
cmp
mov
jg
add
stc
add
sbb
cmp
sbb
cwtl
or
sbb
scas
xchg
push
popa
jnp
xchg
xchg
push
push
dec
adc
mov
pusha
les
cmp
inc
test
fildll
push
fldl
adc
mov
sti
pop
fstl
cmpsl
lods
movsl
andb
jp
push
and
in
je
stos
sub
push
jo
xchg
popa
or
call
outsl
lahf
mov
in
add
cmp
push
notl
std
call
inc
call
or
xchg
push
stc
in
xor
sub
add
xchg
xor
rclb
lock
add
ljmp
add
inc
dec
daa
loop
lret
bound
mov
test
cli
dec
inc
add
fldcw
inc
and
iret
mov
cmp
pop
adc
cmpps
test
popf
and
out
lea
lahf
xchg
push
push
mov
popf
jle
mov
repnz
xchg
add
mov
cltd
repz
lea
jb
clc
loope
adc
iret
cmpsl
pop
jmp
pop
aaa
inc
mov
fildll
xor
shrb
sbb
mov
xor
popf
cmp
sub
nop
in
sub
xor
int
cmp
or
sub
pop
imul
push
pop
lods
jle
jnp
fcompl
loopne
sub
inc
xchg
and
mov
adc
or
sbb
sbb
cmp
push
fidivl
or
in
orl
out
push
jp
mov
mov
orb
jns
stos
add
mov
cmp
and
dec
dec
push
gs
fldcw
push
mov
sub
cltd
leave
dec
out
out
pop
inc
test
cli
jl
popa
mov
out
mov
enter
dec
cmc
mov
hlt
sub
dec
mov
das
cmp
mov
push
fsubl
stc
cld
jecxz
stos
xlat
jg
xchg
outsl
sub
push
adc
iret
and
lea
ss
pop
jb
xlat
fwait
mul
jbe
mov
push
cmp
pop
cltd
add
jmp
adc
rclb
xchg
xor
out
rorb
int
and
dec
fmull
cmp
sbb
pop
hlt
addb
mov
xor
push
shll
ret
jp
sub
mov
imul
xlat
pop
inc
test
mov
and
mov
pushf
add
dec
jl
outsb
scas
or
ret
js
fldcw
push
sbb
ja
cwtl
mov
out
xor
ljmp
mov
test
mov
jne
dec
aas
testb
lret
mov
xchg
fadds
mov
push
xchg
mov
stos
sbb
pop
pop
out
push
cmc
pop
frstor
add
push
or
pop
pop
jecxz
xchg
cltd
iret
clc
sub
jge
mov
add
imul
aad
ja
push
loope
or
mov
mov
loope
pop
xchg
sub
xchg
push
ljmp
nop
pop
add
or
jl
add
fs
pop
ja
sahf
stos
icebp
dec
sahf
scas
and
mov
push
xor
out
cmp
loopne
adc
inc
imul
cld
rcrb
jo
push
rclb
sub
shrl
sub
adcl
push
jo
cmp
dec
and
not
mov
ss
mov
clc
andb
jg
jnp
ret
lods
test
add
inc
stos
mov
ds
adc
add
push
jo
mov
mov
adc
or
adc
or
lret
cmp
nop
mov
fidivrs
inc
jo
add
mov
pop
sbb
pop
inc
dec
jbe
insb
inc
pop
xor
lahf
pop
mov
fsts
aas
jo
ja
addr16
sub
or
cmpsl
xchg
inc
rcll
mov
and
insl
and
and
fs
xchg
push
or
movsl
das
lds
lds
imul
dec
xchg
inc
jmp
mov
iret
or
xor
push
loop
movsb
pop
dec
loope
test
adc
jl
dec
outsb
mov
jb
iret
imul
mov
fldl
ret
stos
inc
dec
neg
inc
aas
rcrl
in
adc
cmp
ds
jnp
push
mov
inc
jbe
cmc
dec
enter
lock
repnz
push
sub
lods
pop
mov
pop
jp
jecxz
leave
sub
sbb
mov
sub
push
into
or
xor
push
push
out
sub
pop
je
testl
addr16
stos
mov
sbb
or
scas
movsl
data16
pop
adc
add
jb
sbb
push
mov
xchg
or
in
int3
ds
movsb
outsl
imul
jne
clc
mov
inc
arpl
int3
cmp
icebp
stos
mov
cmpsb
imul
mov
icebp
lods
mov
xchg
bound
loope
adc
popa
daa
jmp
lret
gs
mov
pop
sub
test
mov
pop
push
pop
mov
in
lret
xor
add
stos
fmull
popl
adc
inc
mov
ds
aaa
es
int
out
push
mov
test
rcrb
dec
adcl
mov
int3
and
rorb
or
mov
in
push
mov
dec
call
pusha
xchg
movsb
push
or
jl
test
outsl
push
repnz
addr16
faddl
fwait
scas
roll
push
jl
cmpsb
imul
mul
mov
lods
mov
mov
mov
sarl
sahf
mov
pop
or
jnp
int
loop
sub
jns
push
in
mov
pop
adc
pop
call
lock
pop
stc
pop
xor
mov
loopne
inc
add
dec
fs
push
mov
mov
fistps
std
lcall
dec
mov
pusha
repz
fwait
or
dec
cmp
or
leave
mov
sub
xchg
gs
push
lret
leave
xchg
int
sub
inc
jg
sub
or
bnd
cmc
mov
cmc
jle
loope
loopne
das
sbb
aas
out
sub
xchg
out
es
pop
jae
or
pop
sbb
mov
dec
data16
sub
adc
rolb
arpl
popl
inc
sub
fdivs
lcall
rcl
push
es
call
xchg
fists
psubq
pop
pop
cli
test
mov
pop
es
dec
or
push
cld
gs
push
push
adc
mov
clc
imul
mov
xchg
aas
into
ret
scas
lahf
lahf
mov
mov
cmp
pop
sub
pop
fldt
adc
mov
pop
xchg
fbstp
mov
les
repz
rcr
sbb
inc
mov
sub
out
sub
fwait
jns
add
xchg
pop
rclb
in
add
mov
or
insb
pop
sarb
inc
je
rol
adc
cmp
push
lahf
cli
push
or
rol
aam
pop
xor
jl
insl
sarb
jb
inc
mov
jne
sti
in
pusha
mov
and
pop
or
sbb
fstl
lahf
or
sbb
mov
mull
movsb
imul
cmp
in
xchg
fs
out
adc
inc
rorb
loop
mov
in
ds
call
fs
cwtl
mov
out
mov
inc
test
or
loopne
xchg
je
fcmovbe
sub
enter
add
cmpsl
add
mov
cwtl
xor
fimull
mov
aam
jmp
jmp
sbb
out
push
inc
test
pop
add
add
mov
mov
pop
and
ficoml
dec
mov
popf
sbb
movsl
mov
aas
cmp
and
mov
pusha
stos
dec
int3
sarl
xor
je
lret
imul
sbb
jp
popf
lds
scas
cmpsb
inc
out
test
aas
ja
xorps
or
test
orl
mov
push
and
sbbl
xchg
inc
adcl
aaa
sarl
cld
ficoml
push
shrb
xor
dec
mov
or
mov
mov
ja
movsb
pusha
je
adcl
mov
fisttpl
xchg
int3
push
pop
ror
shlb
inc
shrb
stos
xor
dec
push
std
popa
mov
mov
enter
push
dec
test
andl
cltd
pop
pop
mov
add
stc
jmp
movl
in
aas
and
or
cmpl
int3
repnz
out
mov
push
cltd
jb
imul
push
stos
add
mov
xchg
mov
push
dec
shll
mov
shrb
ficoms
mov
lret
fwait
cmp
out
ljmp
and
dec
add
dec
clc
mov
add
inc
cltd
mov
add
jmp
mov
and
jo
push
ljmp
int3
cmpsl
dec
mov
pusha
loopne
add
repz
ror
pop
sub
add
pop
data16
mov
hlt
int3
std
cmp
fstps
xor
xchg
and
jge
dec
and
mov
fistl
ret
cmc
dec
push
lock
and
test
and
cmc
mov
cmp
xor
sub
loopne
xchg
mov
xchg
lret
or
loopne
pop
cmpsb
add
mov
add
push
push
orb
scas
jle
inc
test
movsb
or
or
test
mov
jns
mov
mov
ja
xchg
jae
hlt
fsubl
xchg
xor
int3
shlb
cld
hlt
lods
adc
adc
in
add
pop
ret
mov
fistl
mov
sbb
daa
gs
xorl
dec
adc
pop
test
cltd
xchg
and
rolb
add
test
cmp
test
nop
push
cmp
lahf
cmc
xchg
push
xor
add
std
mov
mov
or
movsl
rcll
movsb
stos
iret
xchg
loop,pt
xchg
mov
mov
loopne
adc
cmp
shlb
xchg
arpl
pop
stos
into
ret
nop
mov
mov
dec
mov
orb
gs
xlat
push
loopne
mov
and
xchg
out
sbb
addr16
xchg
pop
in
enter
ret
icebp
push
mov
pop
aas
ds
test
ds
sbb
dec
push
cmpsb
das
addr16
or
out
xor
lret
test
sub
cltd
jp
mov
scas
pop
lods
lods
push
or
mov
shlb
dec
movsl
mov
cmpsb
rcrl
pop
js
arpl
loope
sarl
loope
clc
idivl
inc
ret
pop
xchg
ja
test
lret
xchg
pop
mov
sbb
push
ret
push
call
das
sbb
mov
fs
into
lcall
jl
inc
clc
mov
or
mov
das
mov
push
add
lods
xchg
aad
movsb
lods
add
mov
arpl
push
pop
adc
fsub
pop
ljmp
out
adc
jg
and
inc
rcrb
sbb
dec
mov
mov
test
outsb
aam
imul
and
or
push
je
into
push
fnstsw
aaa
xchg
jo
stos
call
pop
mov
movsb
mov
or
xchg
nop
mov
cmpsb
pop
sbb
ret
and
inc
popf
xor
and
adc
pinsrw
inc
outsl
xor
push
mov
mov
cmpb
pop
cmp
leave
cltd
push
or
mov
push
and
popf
or
push
cmp
pop
dec
into
repnz
rolb
and
fwait
mov
jne
inc
adc
jns
lahf
sarb
dec
lret
shlb
or
insl
dec
adc
scas
adc
dec
or
movsl
cmpsl
add
fwait
pop
jo
dec
and
push
setbe
add
mov
xor
imul
push
lret
dec
nop
into
loopne
imul
cmp
mov
xchg
mov
add
sbb
push
adc
lock
movl
in
mov
outsb
cmp
xchg
push
arpl
mov
cltd
sub
fadds
pop
mov
push
leave
stos
jnp
loope
add
rcll
in
add
enter
xor
inc
pop
mov
mov
mov
mov
in
fisttps
mul
pand
mov
aas
lahf
daa
cmpsb
inc
jnp
das
cmp
imul
shll
rolb
loop
mov
xor
lds
pop
or
scas
aam
data16
adc
xor
mov
mov
popa
das
test
hlt
pop
or
add
mov
cmp
cmpsl
fistpl
sbb
sbb
mov
fisubl
xchg
inc
js
mull
fldcw
bound
adc
sub
pop
jg
jbe
sbb
andb
jmp
push
imul
arpl
test
sub
cmp
push
push
rcrl
pop
imul
mov
inc
test
pop
out
xchg
iret
fbstp
jp
std
push
jnp
adc
and
pop
mov
push
cwtl
roll
and
stc
incl
fdivl
shll
push
dec
or
xchg
je
pop
cltd
je
dec
scas
push
mov
inc
mov
out
outsl
mov
addb
stos
imul
pop
sbb
dec
lock
popa
cmpsb
in
stos
js
fnsave
fs
jbe
adc
mov
loop
mov
push
mov
jge
pop
sti
jne
and
pusha
xchg
int
push
pusha
sbb
inc
test
mov
sub
sub
sub
pop
sub
adc
scas
scas
mulb
cmp
pop
outsb
mov
and
ljmp
ret
out
div
lahf
mov
repnz
lea
sub
loopne
outsb
pop
outsb
cmp
xor
mov
scas
sbb
mov
xchg
sub
int3
sbb
mov
daa
or
outsl
pop
cmpsl
xor
leave
test
pop
rcrb
ljmp
dec
ficoms
es
inc
jge
scas
and
jb
xorb
mov
stos
cmp
cld
test
adc
je
jae
ss
or
push
leave
popf
sub
or
push
or
add
lods
out
movsb
xrelease
addb
xlat
push
inc
mov
pop
mov
frstor
imul
mov
fadds
jmp
inc
dec
jle
leave
push
dec
rcl
jmp
xor
gs
or
dec
out
das
das
sub
loope
jns
ja
adc
out
sub
pop
or
pop
iret
adc
add
sub
scas
cld
hlt
fucom
fldenv
dec
mov
ffreep
and
scas
repz
lods
add
inc
mov
adcl
ss
push
into
idiv
test
mov
stos
aad
and
mov
jge
ljmp
dec
ret
adc
dec
sbb
movsl
mov
jmp
or
inc
mov
in
sub
insl
cmp
mov
stos
dec
pop
jg
aas
mov
cltd
push
jge
mov
adc
and
add
push
orb
test
push
mov
adc
mov
jp
inc
cmpsl
es
je
imul
mov
dec
inc
or
std
xchg
lea
fdivl
int3
sbb
jecxz
icebp
xor
ret
push
cli
jb
fistpll
xchg
test
push
sahf
mov
push
mov
iret
cmp
mov
xor
xchg
sbb
loopne
adc
fbstp
sbb
lods
cmpsb
push
xor
sub
call
mov
lcall
sbb
shl
push
xlat
sub
gs
mov
sahf
sbb
mov
fildll
repnz
xchg
in
out
or
sub
jb
repz
xchg
gs
lods
rcrl
inc
xchg
cmp
gs
sub
arpl
lds
fnstsw
fsubrl
outsl
cmpsb
sbb
fnstsw
inc
outsb
decb
adc
or
dec
mov
sub
daa
fstps
or
fildl
mov
mov
cld
xchg
stos
loope
daa
ljmp
dec
stos
or
sbb
roll
jno
je
and
bound
in
aad
fidivrs
xlat
lcall
fidivrs
out
daa
dec
cs
imul
mov
int
and
mov
cld
out
imul
jne
inc
sar
push
sub
mov
add
aaa
stc
jo
shlb
sub
lahf
test
xchg
push
out
mov
push
mov
pop
popa
dec
sbb
gs
mov
xor
xlat
xor
cmp
mov
sbb
adc
jle
cmpsb
add
add
hlt
movsl
hlt
mov
das
sbb
sub
cltd
hlt
negb
sub
stc
adc
scas
and
mov
call
mov
pop
inc
adc
sub
inc
sti
inc
leave
ljmp
jbe
xor
fdivs
and
jns
in
mov
fcomi
or
pop
cmc
loop
push
push
cmp
cmc
push
sbb
mov
cmp
jmp
or
enter
test
sub
pop
pop
or
mov
test
mov
fwait
in
hlt
int
pusha
push
addb
inc
in
rclb
or
mov
bnd
repz
add
inc
xchg
sub
enter
std
add
mov
iret
scas
push
xchg
jno
jne
mov
sbb
ds
adc
adc
arpl
nop
cmpsb
shlb
aam
popa
ficoml
test
addl
icebp
jle
adcb
movsb
dec
in
inc
xorb
lock
jecxz
aaa
into
mul
icebp
sub
push
adc
jb
mov
mov
mov
fiadds
into
popf
add
fwait
inc
mov
mov
cld
imull
stos
push
mov
cmp
cmpb
xor
repz
push
mov
sbb
or
cmpsb
push
add
push
or
or
mov
adc
stos
push
stos
or
lods
mov
test
clc
sbb
inc
imul
cmpsb
sub
pop
pop
jl
stos
std
mov
jae
push
je
cli
lods
pop
lcall
mov
dec
clc
lahf
lods
mov
cs
fistpl
mov
aam
fcmove
sarb
cmp
push
push
push
loopne
and
jecxz
dec
in
inc
adc
bound
and
pop
fisubs
test
push
lcall
jae
push
mov
int
loopne
mov
ret
adc
int
repz
fcoml
ror
dec
leave
and
cmp
dec
jmp
push
mov
jl
movswl
cs
jb
popf
mov
sub
arpl
cwtl
bnd
scas
stos
in
sbb
std
ret
push
dec
push
mov
pop
fwait
stc
inc
mov
dec
mov
xlat
stos
jae
jo
sbb
fsubrp
pop
imul
inc
jo
into
or
outsb
xor
lea
mov
sub
jmp
xchg
jl
jp
aad
dec
dec
int
cmp
dec
cs
bound
lods
xchg
test
inc
sub
xchg
xor
add
inc
lods
pop
push
add
mov
ss
out
lcall
and
ljmp
popa
hlt
sub
push
popa
mov
push
in
mov
xchg
and
repnz
cli
jle
movsl
hlt
repnz
std
lret
in
cwtl
and
xchg
lcall
inc
enter
fwait
arpl
fists
push
out
data16
jg
stos
sahf
add
sub
loope
outsb
fsts
inc
shr
xchg
out
jg
pop
push
xor
pop
rcrl
scas
mov
loopne
adc
in
push
rcll
jmp
stos
das
add
int
cwtl
loop
lock
mov
mov
imul
mov
cmp
call
test
lea
xchg
cmp
es
js
xchg
cmc
nop
cltd
rcr
out
pushf
ja
push
xchg
ret
out
repz
lret
test
sub
pop
add
cmp
push
and
mov
inc
enter
mov
pop
pop
push
clc
adc
jl
mov
sbb
arpl
arpl
xlat
jl
dec
lods
mov
xchg
jg
pop
mov
lret
inc
pop
packssdw
movsl
imul
in
jp
imul
sar
andl
xor
dec
stos
xor
les
insb
data16
pop
rol
mov
loopne
std
outsb
sub
pusha
ja
rcrl
xchg
fwait
les
sti
pop
xchg
decl
lds
mov
mov
inc
xor
mov
pop
inc
jg
fstpt
add
mov
jmp
fildll
mov
ds
fisubs
ljmp
mov
lock
and
lret
inc
ss
sti
mov
and
std
sti
push
xchg
shl
aad
in
insl
mov
loope
cvtps2pi
hlt
test
mov
cld
adc
stc
jnp
rcll
rcl
scas
orl
bound
adc
in
in
sbb
sbb
push
pushf
add
lods
aas
mov
jo
stos
testl
test
cli
or
stos
and
aas
adc
sahf
sub
shlb
push
adc
mov
add
dec
pop
imull
and
inc
mov
mov
subl
inc
test
scas
pop
push
mov
push
ret
jbe
leave
dec
bound
leave
lret
nop
jb
test
cmc
ss
data16
out
mov
mov
fcmovbe
in
add
adc
jo
jno
ror
in
inc
pop
jns
xchg
jbe
xor
sti
push
pop
xchg
sbb
pop
js
bnd
in
pop
ret
inc
adc
mov
sbb
add
add
andl
ljmp
call
imul
je
scas
lcall
xor
cmc
jg
je
out
ret
fistpll
ffreep
divl
add
jge
pop
xchg
enter
xorb
xchg
pop
shrl
mov
es
ljmp
pop
loopne
mov
ss
push
cltd
dec
jmp
aas
and
xchg
rclb
jg
iret
and
push
mov
xor
in
lods
cmp
push
daa
arpl
push
pusha
mov
ss
xchg
ret
lret
or
jo
decl
adc
ljmp
push
push
adc
sub
push
or
dec
cmp
xchg
test
and
push
xor
push
add
jae
cmp
shr
mov
stos
je
mov
push
sti
pop
divb
mov
inc
dec
inc
pop
mov
sbb
in
jecxz
insb
cs
mov
ret
cmp
nop
pop
dec
lods
pop
dec
mov
lods
cli
pop
aam
dec
add
xchg
mov
push
mov
xchg
or
aas
push
adc
mov
push
call
mov
nop
mov
pop
rcr
push
add
lods
xchg
fs
adc
jbe
mov
mov
xchg
jo
xor
pop
dec
push
xchg
mov
pop
cltd
in
xor
movl
sub
pushw
ja
sbb
pop
mov
inc
cmp
mov
test
pop
and
mov
les
cmpb
dec
push
mov
aaa
sbb
sahf
jbe
movsb
or
mov
je
or
call
andnps
and
int3
test
arpl
and
ljmp
imul
jns
xor
adc
aam
dec
xchg
mov
push
push
xor
mov
or
push
incl
mov
in
scas
call
test
cltd
mov
push
loop
xor
mov
ficompl
push
cmp
or
pusha
lcall
jmp
imul
int3
fildll
push
idivb
sti
testl
jnp
xor
aaa
and
xchg
mov
jne
out
xor
shrb
mov
stos
mov
and
in
mov
popa
xchg
fbld
pop
add
addb
mov
jb
lret
out
aaa
or
jns
xor
bound
rcrl
shr
mov
dec
xor
xchg
push
sahf
sbb
jne
roll
lahf
add
pusha
imul
cmp
lds
dec
jno
dec
xchg
jmp
dec
notb
and
sbb
xor
addr16
mov
pop
pop
cmp
rcrl
repz
xchg
mov
daa
cmpsl
data16
lcall
or
jp
fbstp
inc
outsl
dec
or
pop
pop
mov
nop
xchg
mov
faddl
add
sar
mov
pop
ljmp
movsl
or
ds
inc
inc
pop
sub
jno
ret
push
fists
mov
sub
mov
insb
outsb
mov
daa
les
dec
lret
push
ss
mov
xor
cmp
mov
xlat
mov
in
test
hlt
aaa
pop
ror
mov
jo
or
dec
and
shld
jp
xchg
push
enter
mov
push
rorl
dec
adc
fs
arpl
aaa
adc
mov
call
pop
sahf
mov
mov
ljmp
cmpsb
or
mov
mov
or
mov
jecxz
push
adc
and
ss
iret
shr
movsb
ret
mov
mov
mov
add
xor
mov
popf
xor
shrb
mov
mov
je
jo
adcl
cmc
jp
add
cmp
mov
leave
cmp
test
decl
xor
shlb
sarb
or
dec
decb
jno
push
inc
sub
sbb
shll
sbbl
adc
test
arpl
scas
xlat
scas
fs
je
add
inc
inc
pop
mov
jmp
jbe
das
icebp
add
ficoml
das
ror
roll
mov
pop
out
mov
mov
ja
int3
lcall
fbstp
mov
scas
add
cmp
cmpsb
jmp
fs
ret
mov
dec
mov
push
cltd
cmp
inc
xchg
cmpb
mov
mov
sahf
cmp
or
inc
scas
imul
sbb
xchg
cmpsb
push
subl
je
arpl
cmp
pop
xchg
xchg
sbb
dec
fldt
push
mov
ljmp
xchg
xchg
push
hlt
push
addr16
fs
in
fstl
insb
mov
aas
sbb
lret
cmp
push
dec
les
lods
into
mov
les
and
sbb
aam
fwait
sbb
int
xchg
xlat
inc
jle
jb
xor
cltd
das
shll
lock
cmpsl
jmp
sbb
pop
cwtl
in
scas
std
inc
fwait
mov
pop
sub
lods
lock
jecxz
ret
pop
jg
fisttpl
in
nop
mov
clc
cld
dec
fnstenv
fisubl
xorb
push
cwtl
xor
test
jg
sbb
in
or
xchg
pop
xor
sti
push
cmp
imul
pop
mov
inc
inc
in
clc
inc
cmp
aas
aas
cmp
adc
add
rdpmc
cmp
push
cmp
popa
mov
lods
xchg
add
pop
outsb
jg
adc
mov
ret
push
mov
ret
pop
sbb
xor
out
ret
out
and
arpl
rcll
cmp
jae
andl
cs
xchg
push
mov
lret
jbe
popa
add
mov
mov
add
callw
adc
test
pop
dec
sub
ljmp
push
ret
idivl
mov
mov
insl
pushf
mov
in
les
jb
mov
ja
clc
stos
inc
pop
cwtl
hlt
adc
aam
test
scas
movsb
lret
insl
sbb
pop
fstl
push
sbb
cli
sbb
jno
cmp
das
mov
sti
xchg
xchg
jne
aas
out
xchg
pop
lods
adc
lret
cmp
pop
rolb
in
push
lods
jp
fbld
jae
ror
and
adc
sbbl
les
js
lock
xchg
in
and
jmp
or
sbbl
jl
popf
mov
aaa
aad
cmp
loop
pop
push
das
ja
fs
inc
dec
add
lock
jae
out
iret
pop
jnp
lods
sbb
jmp
push
mov
push
sub
mov
mov
jmp
nop
jle
cmp
xor
adc
fisubrl
jne
xchg
ss
pop
inc
sub
dec
and
daa
inc
insl
data16
movsb
mov
arpl
mov
lcall
movsb
sub
push
mov
hlt
push
and
mov
pop
scas
lea
sbb
inc
rcrb
in
pop
ja
push
mov
ret
imul
data16
mov
sahf
jae
fisttpll
mov
iret
xor
add
mov
mov
xchg
mov
pop
cmpsl
mov
imul
ss
mov
ficompl
test
xchg
xchg
cli
inc
mov
fs
sbb
aam
mov
out
ret
ss
xor
push
push
pop
mov
scas
shll
cmp
mov
test
decb
imul
pop
in
loop
inc
xchg
lods
xor
fwait
pop
adc
and
cmpsl
or
ljmp
dec
cmpsb
mov
das
inc
jg
pause
sar
cld
pop
cmp
jo
dec
shll
cmp
push
sbb
pop
add
mov
lods
shll
jnp
repz
cmp
dec
ret
out
xor
int3
inc
leave
lods
insl
repz
push
and
or
fdivs
cmp
popf
jecxz
inc
mov
mov
push
pop
lret
std
stos
mov
cli
xchg
lds
orb
cmpsl
add
adc
jo
aam
mov
iret
cmpl
rorb
ds
mov
and
mov
sbb
xchg
cmpsl
and
adc
xchg
and
push
cs
sbb
cwtl
cmpb
inc
mov
cmpsb
jbe
sbb
movb
inc
lahf
xchg
mov
adc
adc
cmpsb
fisttpl
ds
mov
loope
imul
mov
jmp
add
pushf
dec
popa
leave
addb
sub
sbb
into
out
mov
xchg
dec
repz
cld
divb
sbb
scas
fists
mov
andl
pop
jge
into
leave
pop
lds
sbb
and
pop
mov
jge
ja
mov
inc
pop
mov
idivb
shrl
push
push
pop
addr16
and
std
es
jb
add
in
xchg
or
jp
and
mov
out
aad
out
inc
pusha
mov
xor
arpl
rcrl
lds
sahf
push
aam
jp
mov
sbb
fmull
xchg
or
xchg
icebp
adc
push
pushf
rorl
sub
dec
addr16
jg
movd
mov
pop
mov
mov
fnstenv
bound
pop
pop
int3
nop
and
xchg
test
sub
mov
aad
fcompl
xor
inc
mov
and
ret
or
fidivs
lods
int3
mov
cmp
lcall
pop
pop
sub
dec
pop
or
push
xchg
sahf
stos
rolb
dec
push
xchg
enter
xchg
scas
add
push
fcoml
adc
gs
sbb
sub
dec
pop
cli
cmp
jnp
sti
out
call
leave
clc
adc
dec
aas
sarb
adc
scas
fwait
scas
sbb
xchg
dec
sar
gs
mov
lret
push
cmp
leave
or
les
call
jns
in
movsl
sahf
popa
loopne
sti
sbb
hlt
stos
push
stc
or
sbb
sub
ss
adc
sbb
popa
test
sbb
jg
rcrl
ja
pop
lods
add
sahf
and
xlat
pop
out
ficomps
jg
sbb
dec
jno
jbe
mov
sbb
or
push
popa
cwtl
pop
dec
lods
or
loope
push
adc
or
stos
pop
fistl
cwtl
xor
push
adc
ficoml
shll
jb
std
pop
cwtl
stos
std
xorb
pop
mov
stos
add
call
xchg
inc
es
pushf
mov
push
fcomps
dec
jnp
push
push
daa
rclb
mov
adc
jb
scas
lret
test
pop
dec
jae
loope
sub
and
pusha
test
rcr
fstpl
lret
mov
cmp
fdivp
out
repz
mov
add
mov
dec
mov
push
sub
add
xchg
daa
xchg
in
stos
lea
inc
fisttpll
sti
mov
mov
mov
mov
stc
push
ja
dec
idivb
sahf
xchg
sbb
into
or
mov
mov
mov
mov
add
outsb
leave
inc
mov
adc
popa
andl
cld
push
cli
rcrb
add
jo
hlt
stos
les
cmpb
jnp
or
pop
popf
cli
mov
and
add
mov
mov
fcompl
es
lock
mov
or
jne
mov
stc
adc
lret
cmc
enter
push
lea
dec
push
movsl
adc
rolb
dec
aam
jmp
jp
out
mov
jne
or
or
xlat
pop
stc
pop
pop
xchg
gs
push
mov
and
mov
inc
shr
adc
test
out
lahf
or
pusha
push
loopne
dec
addr16
stos
xchg
mov
adc
mov
cmp
icebp
inc
lds
mov
sbbl
insl
test
jns
jmp
xchg
or
sub
movzbl
mov
cmp
mov
imul
imul
pop
xchg
popf
mov
daa
insl
ljmp
sbb
out
insl
mov
push
push
push
and
push
mov
lret
add
lds
arpl
mov
pop
or
lock
movsb
sub
add
test
fisubrs
pusha
lds
pop
xchg
sub
aas
outsb
dec
mov
ja
jb
jne
imul
sub
mov
mov
incl
xchg
notl
ds
mov
xlat
jne
dec
mov
adc
sub
push
push
push
rolb
inc
cmpsl
in
sbb
iret
int3
inc
adc
inc
add
movsl
jns
out
test
pop
sti
xorb
and
gs
xor
inc
cmpsl
daa
mov
fcomps
ja
sub
imul
xor
sub
mov
mov
inc
ds
xor
aaa
inc
fldt
and
inc
lock
les
cmpsl
add
insl
and
mov
les
cmp
sub
loope
mov
adc
filds
out
mov
imul
insl
das
subl
cmp
loopne
add
mov
fwait
add
pop
mov
ja
mov
add
mov
popa
cmp
cmp
add
mov
push
add
loop
loopne
sahf
je,pn
mov
push
js
lret
dec
sbb
adc
lahf
fcmovb
in
mov
or
icebp
pop
jns
lods
add
clc
sbb
aaa
and
std
sub
nop
popf
cmp
mov
test
test
mulb
xchg
loopne
dec
shrb
cmp
clc
push
sub
mov
xchg
mov
lret
test
out
xchg
pop
cmp
faddp
cwtl
aad
lods
shr
stos
dec
je
fxrstor
mov
cli
lcall
pop
jle
data16
js
pop
lea
and
jnp
cltd
dec
mov
push
iret
ja
test
and
imul
cmp
outsb
jae
lods
test
push
imul
mov
dec
pop
insl
aad
push
or
jno
jns
xor
dec
ret
sahf
inc
xor
bound
mov
rcll
in
loopne
adc
ja
sbb
cs
ljmp
daa
rep
dec
jecxz
arpl
jbe
push
testb
and
rorb
push
out
daa
lea
mov
xchg
insb
sbb
sbb
cld
fwait
mov
test
das
xlat
scas
loope
fstps
jo
inc
sbb
sbb
test
int3
stos
cmp
shll
ffree
cld
xchg
mov
inc
jle
mov
jo
divl
mov
and
or
out
andb
adc
adc
fdivrs
repnz
fst
xlat
cmpl
mov
mov
sahf
repz
leave
movsl
jge
fimuls
and
sbb
cmp
pop
xor
iret
xor
je
int3
imul
rclb
ret
or
xor
sub
mov
inc
push
in
int3
rcll
cmp
mov
cmpsl
or
leave
ret
mov
pop
lret
movl
add
mov
rolb
ficomps
lea
int3
adc
rorl
sahf
jnp
test
lret
push
rorl
repz
xlat
popa
mov
cli
mov
mov
aas
test
push
clc
cli
jb
sub
or
cli
mov
fs
cmpsb
adc
into
jle
inc
or
rcrl
xchg
push
or
or
dec
lods
jle
mov
add
lods
pushf
arpl
and
sbb
pop
push
repz
sub
aas
ss
jmp
push
sbb
adc
dec
xlat
call
jp
mov
lock
out
mov
subb
imull
and
add
ds
insl
push
xchg
cs
jge
or
xchg
je
xchg
and
call
stos
out
push
or
lcall
inc
js
push
fwait
icebp
dec
icebp
push
arpl
push
call
sbb
mov
jecxz
sub
xchg
cs
add
add
inc
xchg
jl
fsubr
clc
xchg
xchg
fcmovnu
cs
jmp
dec
mov
mov
xor
mov
push
jns
and
or
outsl
or
clc
shrb
cmp
lahf
xchg
pause
lret
iret
add
test
jo
test
push
sub
aad
aaa
mov
push
mov
hlt
stos
push
cmp
push
stos
cmpb
leave
les
jae
cmp
mov
test
jo
addr16
lods
xor
pop
loop
push
xchg
in
mov
stc
pushf
aad
iret
push
ss
imul
ficoml
pop
and
sarl
int3
jo
icebp
xor
js
and
mov
into
popa
sbb
insb
pop
xchg
mov
in
lea
or
add
je
and
fisubrs
cld
into
cmp
inc
xchg
fsub
jmp
stos
movsl
cmp
and
ret
mov
adcl
cmp
mov
test
loop
sti
cmp
xchg
mov
call
jb
lret
and
popf
into
cltd
mov
sub
pop
push
in
in
sub
or
push
cld
bound
push
xchg
xchg
lods
rorl
loope
scas
jbe
cwtl
lods
js
fcomps
and
cltd
pop
test
cmp
jmp
add
adc
mov
pop
cmp
call
jge
and
inc
mov
cmp
mov
mov
jno
jne
fldl
or
les
pop
jl
adc
clc
push
andb
imul
int3
jb
sbb
jl
or
repz
jmp
mov
cmp
dec
sarl
pop
mov
xorl
xchg
push
and
imul
jb
xchg
sub
mov
sbb
dec
or
fistps
push
jnp
dec
xchg
adc
sti
and
divl
push
jno
adc
lcall
jae
orb
rolb
push
imul
sub
das
and
jecxz
xchg
dec
cmp
mov
sahf
mov
test
out
jge
dec
imul
push
dec
das
adc
imul
sbb
jb
in
mov
cli
xchg
adc
call
inc
cmovno
nop
fistps
shll
add
push
push
mov
push
pop
and
es
jmp
jl
pop
lret
addr16
pop
xlat
mov
mov
sub
cltd
cmp
pop
push
xor
mov
lock
adc
mov
sub
sub
test
xlat
fxch
cs
sub
mov
sub
mov
inc
fadds
jge
imul
sbb
dec
iret
stos
cmc
xchg
idivl
add
nop
sti
pop
fsubrp
sbb
inc
xchg
test
cli
mov
sub
cmp
repz
mov
repz
jle
adc
xchg
int
xchg
jmp
lcall
arpl
pusha
pop
xor
pop
je
test
nop
push
pop
repnz
cvtdq2ps
in
and
xor
sub
and
push
nop
xchg
pop
pop
fcompl
xchg
inc
cmp
jl
jo
imulb
fsub
stos
bound
pop
and
imull
cmpsb
push
sub
mov
and
test
xor
dec
mov
jb
inc
and
dec
enter
xor
jp
into
leave
out
dec
mov
or
fwait
hlt
xlat
mov
aaa
ljmp
ret
cli
scas
fistpl
sar
push
cmp
ss
mov
cmpsl
fldenv
cmp
int3
arpl
add
pop
cld
filds
daa
add
mov
icebp
inc
xchg
inc
repnz
imul
repz
jg
cwtl
mov
add
ret
fwait
pop
pushf
inc
pop
test
movsb
mov
insb
sub
sub
rorb
mov
cmp
je
fildl
repnz
bound
mov
pop
mov
out
in
pusha
in
and
or
xchg
xor
xor
inc
loope
test
sub
popl
or
and
mov
lea
push
xlat
mov
sub
sbb
and
push
xchg
test
sub
pop
jmp
push
and
adc
mull
pop
adc
lds
push
jbe
sbb
out
imul
and
jmp
sub
roll
mov
xor
inc
daa
pushf
imul
mov
test
cli
push
pop
aad
stos
pop
push
stos
popa
dec
add
iret
fs
fmull
xchg
xchg
cs
ret
addl
push
mov
fwait
jecxz
decl
es
adc
call
in
outsb
aam
rolb
imulb
inc
js
fsubr
adc
adc
jp
xchg
outsb
int
cli
fdivrs
dec
dec
mov
daa
xchg
lock
pop
cmc
add
fsubrs
sub
fxam
xchg
mov
add
push
into
mov
sub
xor
fistl
mov
imul
dec
popf
jmp
leave
jp
xor
paddd
lods
dec
cmp
std
sbb
jmp
test
add
aas
xchg
ja
ljmp
push
jnp
or
ljmp
or
shrb
enter
xor
int
ljmp
pop
leave
stos
lahf
push
or
sub
mov
mov
push
sub
pushf
testl
not
lahf
popa
jle
mov
movsl
testl
sbb
mov
dec
inc
hlt
and
mov
fcmovu
ja
dec
xchg
mov
cmpsl
or
cmp
add
fnsave
repz
or
xor
das
movsl
into
insl
sbb
insl
bound
mov
jp
lock
pop
shlb
mov
std
xchg
push
and
icebp
out
cli
dec
iret
repnz
mov
xor
push
xchg
jge
movsl
lahf
sbb
inc
and
aam
mov
mulb
mov
mov
shrb
adc
adc
pusha
jge
mov
std
mov
lret
adc
mov
add
lods
shll
mov
mov
arpl
ret
ret
stc
or
aas
cltd
push
popa
mov
mov
jae
dec
mov
sti
je
and
pop
mov
push
js
dec
add
lret
adcb
test
xchg
outsl
inc
inc
cwtl
jecxz
mov
mov
mov
cmovs
scas
lea
xor
sub
sbb
jl
jmp
add
add
test
dec
mov
push
xchg
shl
cmp
inc
sub
lret
mov
stc
inc
scas
or
out
jg
fldenv
fdivrs
mov
pop
add
pusha
mov
pop
lea
and
andb
aam
xor
sub
fidivrs
push
out
jo
aam
mov
leave
in
xchg
inc
push
pop
add
push
fisubs
inc
add
shll
dec
sbb
mov
lods
sub
push
stc
test
pop
sub
inc
sti
pushf
xor
fs
lahf
pop
das
aam
xchg
mov
std
addr16
cmp
pop
or
sub
out
inc
rcll
pushf
pushf
mov
insb
dec
stos
andb
test
and
push
ficoms
mov
jg
push
mov
scas
and
xchg
mov
jmp
outsl
sti
jno
push
sahf
fs
daa
mov
push
jae
mov
push
xor
sub
xor
jecxz
mov
cmp
add
xchg
mov
imul
jecxz
cmp
or
dec
mov
jb
test
mov
mov
fnsave
out
jo
in
push
jbe
sub
cmp
mov
xor
leave
enter
adc
sahf
imul
pop
pop
lcall
adc
test
pop
pop
loop
mov
sbb
movsb
leave
xorl
push
lcall
inc
and
push
cmp
xchg
add
popa
dec
ljmp
movsb
mov
or
lret
cmpsl
stos
or
stos
mov
sti
jns
lea
xchg
inc
add
iret
add
jnp
ror
push
xchg
out
in
add
or
mov
subb
adcl
out
adc
or
loope
or
mov
xlat
ds
jb
xor
out
sbbl
jl
jmp
and
adc
mov
dec
popf
cld
sub
cmp
icebp
std
adc
mov
adc
lahf
roll
cld
add
sbb
jp
cmpsb
sub
cli
lea
out
and
or
dec
mov
mov
mov
xchg
sub
btc
xchg
mov
ret
sbb
nop
lahf
mov
mov
xchg
adc
scas
je
pop
cmp
cmp
enter
and
fidivrl
push
jnp
add
lods
jl
cli
adc
ds
popf
aam
sbb
sti
imul
test
push
sub
ds
addr16
xor
mov
lret
lret
add
mov
sub
rclb
fsts
fwait
sbb
mov
mov
dec
sbb
enter
adc
add
stos
pop
rolb
xor
imul
nop
inc
loope
rcll
mov
mov
adc
cs
mov
push
incl
dec
cmc
wbinvd
loop
sbb
mov
fwait
cmp
test
adc
movsb
push
inc
xor
cmp
mov
mov
daa
sarl
cmp
aas
adc
sub
cmp
int3
jg
cmpsb
insl
leave
leave
push
in
jg
jl
add
fmull
test
test
repz
imul
ss
dec
xor
stos
outsl
cmpsl
jl
jbe
xor
ljmp
inc
test
mov
out
sub
push
mov
mov
pop
ret
pop
or
dec
mov
enter
out
mov
out
sub
cmc
rclb
mov
popf
insl
lds
in
jecxz
and
jge
xorb
push
dec
outsl
ficoml
out
adc
sub
add
enter
cmpsb
cmp
adc
push
dec
cmc
jno
ficoms
and
aaa
mov
out
pop
mov
pop
adc
outsb
iret
jg
fcoml
ss
push
sbb
cmp
scas
push
push
mov
repz
jp
cmp
dec
cwtl
and
pop
push
mov
fildll
lods
inc
jecxz
dec
mov
sbb
scas
jecxz
inc
jo
dec
push
push
xor
inc
fsubr
adc
cld
cltd
or
cwtl
adc
mov
pop
sbb
sbb
aas
xchg
mov
test
pop
pop
ret
inc
push
add
fsubr
cli
shlb
gs
gs
cmp
mov
xchg
inc
out
rorb
mov
inc
aaa
lret
cmpsb
loopne
dec
testl
bnd
mov
lods
push
insb
cmc
repz
add
pop
push
out
xor
sbb
test
cmp
sbb
fdivl
push
aas
orb
sbb
hlt
in
inc
test
jmp
loop
mov
mov
cltd
and
push
rorl
mov
xlat
shrb
rcll
cmp
jne
loop
in
int3
lea
fstpt
jge
mull
sub
imul
fwait
mov
mov
mov
test
add
dec
jne
cwtl
mov
push
mov
pusha
inc
mov
iret
fs
push
inc
iret
xor
outsl
mov
xlat
ret
jg
xchg
gs
sub
pop
and
orl
sub
fadds
cmp
xor
mov
and
lock
add
jg
clc
call
dec
adc
dec
mov
loop
jns
dec
pop
xor
gs
sub
cmp
cmpsb
outsl
add
fisttpl
sub
adc
sbb
xchg
aad
mov
or
jne
in
xor
jae
sub
jo
mov
push
insb
push
je
mov
jnp
repnz
vaddsubpd
stos
hlt
int
frstor
push
cmp
pop
pop
gs
mov
bt
scas
mov
xchg
or
pusha
mov
add
inc
cmp
sub
outsb
or
mov
ror
or
into
leave
lret
out
icebp
clc
scas
xor
icebp
pop
inc
cmpsb
lahf
adc
or
xchg
stos
in
mov
test
inc
sbb
cmpsb
mov
xor
in
stos
in
or
ffreep
pop
add
push
push
fsubrl
cmpsl
in
stos
es
roll
jmp
call
sub
jae
push
ds
icebp
mov
fcomps
jne
sbb
jo
jg
jl
out
xor
ja
xchg
jg
andl
ja
mov
inc
jg
repnz
sbb
mov
out
xchg
add
xlat
lahf
or
mov
roll
movsl
int3
outsl
aas
sub
inc
shlb
ret
dec
mov
xchg
inc
out
dec
aaa
xor
dec
popf
xor
xchg
or
jns
es
mov
cld
pusha
add
les
xor
fs
mov
mov
push
les
and
mov
loop
mov
mov
lock
add
lock
xchg
addl
xchg
fldcw
imull
rcl
adc
icebp
loopne
les
pusha
orb
sub
fimull
movsl
ja
sbb
pop
push
scas
mov
sub
mov
pop
je
notl
fcoms
adc
adc
or
sbb
dec
outsl
pushf
and
imul
sbb
addr16
pop
push
insl
imul
inc
imul
fs
and
mov
dec
nop
pop
push
test
xchg
sub
cwtl
pop
mov
mov
ret
and
cmp
fs
test
cmc
stc
mov
pop
lret
mov
arpl
push
or
mov
push
push
test
hlt
fcmovnu
ret
pop
fnstenv
test
fidivl
lret
dec
aam
mov
add
fisubl
pop
xor
test
insl
jno
xchg
xlat
pushf
dec
stos
sub
sti
stc
stc
xor
push
cmpsb
popf
insb
jne
jle
sarb
jno
insb
mov
jmp
ret
test
inc
ror
ljmp
dec
jle
mov
or
xchg
stc
inc
add
xchg
iret
or
mov
or
inc
sbb
rcl
inc
test
stos
fcomps
adc
bound
sbbb
and
shlb
outsb
fld
test
jmp
ljmp
and
icebp
xchg
inc
lcall
push
clc
rorb
gs
dec
jns
sarb
pop
push
and
fld
inc
loopne
pop
and
call
lcall
xchg
dec
push
jbe
loope
inc
test
ror
out
scas
daa
loopne
aam
pop
jge
insb
add
jae
mov
jle
cltd
inc
out
xchg
fimull
inc
flds
ret
add
dec
ret
push
sbb
or
and
or
sti
cwtl
jb
and
mov
adcb
outsb
int3
xlat
scas
add
jae
cmp
push
cmp
adc
cltd
shrb
push
rolb
loopne
push
enter
nop
insb
jo
xchg
mov
pop
inc
fucomi
push
mov
loopne
shlb
insl
lea
sub
aad
movsl
shr
sbb
mov
push
lret
push
lret
mov
repz
xlat
mov
ja
and
pusha
or
ret
cmc
jbe
in
ficomps
and
test
pop
enter
mov
iret
adc
pop
inc
cmp
push
enter
mov
push
in
push
ret
and
arpl
and
push
test
or
call
lret
lds
dec
adcb
imul
lret
mov
sbb
iret
push
aad
int
mov
mov
push
popf
movsb
mov
mov
sti
test
adc
shlb
setl
dec
xchg
cltd
iret
sbb
cmp
setno
clc
mov
out
fcmove
test
std
sbb
and
call
repnz
inc
in
cmp
repnz
ss
imul
jmp
flds
mov
ret
notb
std
je
mov
aaa
sbb
fidivrl
inc
inc
cmp
ja
out
or
inc
fiaddl
rcll
xchg
xor
dec
fs
adc
push
popa
mov
pop
test
pop
and
dec
sbb
add
sub
sbb
leave
jnp
adc
inc
mov
and
xchg
clc
pushf
lds
sti
std
hlt
cs
jne
mov
xchg
sub
or
pop
push
mov
push
out
and
lahf
mov
mov
mov
sahf
push
lahf
pop
fidivrs
sub
rorl
mov
icebp
outsl
cs
jl
fdivs
ljmp
mov
shl
int
out
push
notl
ret
dec
or
or
push
pop
js
or
daa
xlat
inc
jge
fwait
ljmp
adc
push
inc
xchg
sub
xchg
pop
cmpsb
mov
inc
popa
leave
iret
push
dec
cwtl
inc
xchg
sbb
and
add
insb
dec
shll
push
fucomi
ds
jns
inc
xor
gs
dec
jmp
add
and
or
pop
mov
mov
out
dec
sub
cmpsl
pop
cmpsb
js
fmul
mov
jo
jno
lock
je
lahf
mov
pop
and
inc
or
sub
lods
push
enter
negl
aaa
fs
lahf
imull
mov
jo
out
or
xchg
xor
add
in
mov
and
lahf
ja
xchg
mov
sub
and
cmp
lret
dec
testb
int3
add
sub
int
xor
and
inc
outsb
lret
sbb
adc
xchg
adc
enter
fldcw
jge
test
xchg
cld
cmpsl
cmpsl
ja
xchg
sbb
sbb
sbb
xchg
in
cmp
aas
bound
ds
sub
xor
inc
push
adc
shrl
and
mov
test
ss
sub
push
push
mov
mov
ljmp
mov
cmp
dec
or
add
jns
push
sub
jp
or
lods
fmuls
repnz
lea
daa
push
repnz
out
inc
orl
repz
and
aas
add
les
ljmp
inc
xor
cltd
pop
push
mov
negb
xchg
clc
sbb
push
dec
mov
mov
rcrl
repnz
cwtl
int3
int3
cmpsb
mov
cli
andl
push
jge
jg
cmpsl
jg
mov
dec
fsub
mov
test
and
adc
lcall
mov
jno
sti
xlat
ljmp
sbb
push
jp
and
adc
push
icebp
xchg
xchg
push
iret
ja
push
mov
je
add
xlat
mov
mov
out
mov
pop
pusha
push
pushf
and
and
insb
lret
mov
pop
cwtl
pop
lock
aad
inc
jg
adc
sbb
add
pop
mov
test
cmp
stc
rol
or
push
leave
adc
jp
inc
ffreep
sub
mov
push
or
xchg
ljmp
xchg
stc
loopne
xchg
enter
sbb
pop
rcrl
insb
gs
rclb
jbe
clc
mov
fstpl
jl
push
icebp
je
lods
xchg
bnd
xor
stc
in
mov
push
movsb
mov
cmp
sbb
lods
push
push
fsubrs
jle
xor
mov
xchg
sbb
xchg
mov
mov
std
std
xor
pushf
arpl
mov
sarb
mov
scas
mov
push
int3
mov
jbe
xor
inc
jbe
sub
repz
rolb
pop
aam
imul
sub
sbb
ja
xor
lret
mov
sarb
insl
inc
inc
xchg
lods
mov
das
push
mov
stos
dec
cli
pop
xchg
sub
add
push
into
in
shlb
lret
pop
push
mov
imul
jle
das
mov
add
fcompl
push
add
lea
enter
xor
push
jp
je
xor
push
jbe,pt
jg
std
lods
sub
shll
je
push
jae
pop
sbb
dec
ret
cmp
inc
jl
fld
pop
inc
dec
addr16
fs
push
sub
push
icebp
gs
jl
fildl
in
push
loope
add
push
fwait
loop
push
scas
xchg
xchg
popl
std
and
adc
push
inc
into
stos
dec
lcall
test
xchg
aam
out
dec
roll
or
jmp
sub
adc
test
add
ja
into
clc
mov
out
lods
or
mov
rcll
or
push
add
test
jmp
pop
add
clc
jne
ja
sub
xchg
rorb
daa
daa
inc
test
lock
cmpsb
js
mov
xor
jmp
sub
mov
jmp
sub
ss
mov
cwtl
dec
clc
mov
sub
std
icebp
aad
in
sar
shll
lcall
jmp
aaa
or
adc
test
in
inc
add
pop
mull
or
pop
sbb
push
push
pop
daa
cmp
popa
cmpsl
inc
mov
sbb
js
mov
xchg
bound
lcall
fildll
adc
es
daa
ljmp
cwtl
popf
outsl
push
sub
mov
push
add
sbb
or
repz
fdivrl
xor
pop
or
cmp
push
and
imul
pop
mov
fnstenv
loope
sti
imul
iret
push
xor
jns
test
pop
sub
ret
jp
data16
jno,pn
ret
jae
add
out
xchg
adc
outsb
xchg
xchg
mov
cmp
jg,pn
pop
cmpl
push
addr16
and
fiaddl
inc
push
hlt
cltd
dec
sub
mov
rep
xchg
stos
insb
mov
out
mov
jns
or
fwait
clc
xor
mov
inc
lea
push
sbb
repnz
jl
scas
sbb
bnd
pop
lahf
sbb
inc
adc
aam
jle
arpl
sahf
sti
es
fbld
fs
lods
sbb
imul
lcall
rorl
or
xchg
sbb
fidivs
xchg
jmp
in
mov
lds
mov
in
fs
pop
nop
gs
sub
push
dec
test
sti
pop
push
adc
push
xor
frndint
cmp
push
or
jb
jbe
test
bound
push
adc
lock
incb
mov
adc
outsl
popa
xlat
ds
cld
repnz
mov
popf
sti
dec
enter
ret
pop
and
out
orb
inc
push
adc
or
mov
mov
jae
xlat
jbe
pop
imul
sbb
popa
and
hlt
mov
mov
and
movl
sub
ljmp
lods
jno
decb
xor
lcall
mov
inc
pop
lahf
or
xor
jl
push
xor
jle
dec
mov
pop
pop
sarw
rorb
pushf
inc
pop
lret
lods
pop
and
xlat
andb
test
fnstenv
test
add
pop
adc
xor
insl
mov
sbb
inc
push
scas
popf
sbb
out
cmp
adc
jo
push
in
sub
xchg
cld
mov
sbb
inc
add
push
fnstsw
add
insl
bound
in
aad
add
repz
dec
push
shl
add
jle
pop
nop
or
stos
das
je
mov
enter
sub
out
dec
mov
sbb
xor
push
testb
je
sbbl
imul
adc
sub
add
jle
xor
cmp
xchg
repz
sbb
stos
fiaddl
push
pop
pop
jge
or
cmc
jmp
idivl
jae
add
xor
pushf
in
mov
add
cld
add
jge
add
xor
push
xchg
jmp
and
das
gs
add
mov
push
sub
gs
xor
jno
outsl
pop
test
popf
insb
addl
xchg
aam
je
push
dec
fs
js
jmp
xchg
pushf
sub
mov
jmp
inc
mov
pop
addr16
in
add
sti
sbb
mov
push
mov
sbb
pop
pop
pop
push
adc
clc
icebp
sbb
dec
mov
scas
pop
test
fdivrl
and
ss
and
push
mov
inc
xlat
sbb
pop
imul
mov
push
inc
in
jge
adc
shlb
push
adc
ret
adc
mov
clc
add
mov
in
call
pop
loopne
outsb
cld
stos
shr
frstor
adc
xchg
cs
sarl
mov
inc
push
pop
out
dec
pushf
mov
add
mov
mov
popfw
pmulhw
and
dec
inc
inc
call
int3
imul
sbb
icebp
inc
mov
loop
mov
xchg
or
fimull
xor
mov
movsb
ljmp
fcmovu
mov
pop
iret
fistpl
mov
jg
cmpsl
mov
inc
sti
insl
and
sbb
scas
lret
jae
fldl
stos
inc
stos
xchg
inc
add
mov
loop
and
jne
sub
jae
mov
adc
clc
mov
add
xchg
or
fists
and
jg
fchs
pop
mov
insl
rorb
fs
mov
jecxz
and
jbe
pop
add
cmpb
mov
jno
sbb
in
insl
rcrl
sub
sbb
jecxz
stos
xor
xchg
popl
ljmp
dec
jne
int
xor
mov
inc
add
ja
scas
sahf
mov
leave
call
stos
or
xchg
loope
and
out
mov
jg
test
xchg
dec
das
mov
mov
lea
out
lock
mov
std
mov
and
movsl
stos
push
pop
pop
add
shrl
ret
xchg
mov
mov
jmp
pop
cmc
push
lods
nop
sub
xor
push
test
lahf
cmp
fstps
and
repz
mov
shll
and
fmuls
fcomps
pop
lods
or
fwait
leave
call
dec
test
sbb
jbe
rcll
fistpll
sarl
stc
mov
lds
and
inc
repnz
or
enter
aas
cwtl
jno
adc
mov
jnp
push
add
in
jnp
repz
or
dec
xchg
fidivs
inc
fldt
push
push
pop
pop
cs
std
lds
lret
fdivl
mov
xor
mov
sti
cmp
int
lods
jns
jle
push
int3
lea
inc
iret
inc
sub
and
dec
push
jmp
cmp
lahf
mov
cmp
jp
fisttpl
mov
pusha
lods
je
xchg
pop
inc
sub
mov
imul
es
inc
scas
fisubrl
lds
inc
int
cli
xchg
in
dec
sbb
pop
sarl
add
sbb
fdivp
jl
push
je
mov
lods
insb
and
arpl
insb
incl
fs
out
pop
pop
pop
xchg
add
cltd
aas
pop
inc
in
add
rorl
push
mov
nop
add
rolb
mov
shrl
cmp
or
cmp
out
jecxz
lahf
and
sbb
dec
ret
pop
jo
xor
xchg
incb
fs
mov
jmp
imul
and
sbb
xchg
movsb
out
jl
in
shlb
sbb
push
es
fwait
mov
movsb
cmp
xchg
pop
push
test
mov
out
mov
ret
mov
pushw
stos
arpl
shlb
lods
inc
xor
scas
adc
xchg
cmpsb
sahf
inc
dec
into
push
mov
stc
xor
dec
rolb
push
dec
clc
arpl
out
mov
sbb
in
movsl
push
cmpsb
sub
dec
pop
notb
push
ret
mov
iret
stc
mov
inc
jl
repz
mov
je
cmpsb
xchg
ds
nop
popa
add
sbb
fisubrs
mov
or
cmp
xchg
jo
push
sbb
dec
int
lds
sbb
and
lock
mov
ds
sub
clc
imul
enter
add
push
test
sbb
pop
ljmp
adc
jmp
sarb
pop
mov
xchg
sub
ljmp
push
dec
push
mov
addr16
leave
mov
cld
xor
sub
push
arpl
fsubrl
pop
lret
repz
add
mov
loop
inc
clc
addb
dec
clc
in
sbb
iret
or
jg
jnp
jl
incb
xchg
dec
cld
hlt
push
idiv
push
mov
add
mov
lret
addr16
adc
cltd
cld
dec
daa
mov
les
and
xlat
and
pop
bnd
jmp
dec
std
scas
jo
ljmp
int
fcom
test
fsubrl
out
push
jb
shlb
mov
inc
mov
rorl
cmc
jge
pop
cltd
inc
dec
add
adc
pop
push
pop
scas
dec
andb
push
mov
mov
ja
pushf
jnp
mov
loopne
cmpsl
and
andb
addr16
aad
or
pop
jle
daa
addr16
es
arpl
gs
lods
lret
push
mov
mov
inc
xchg
inc
sbb
sbbl
loopne
push
push
sub
ds
cmp
andl
xor
xor
xchg
sahf
xchg
push
pop
jbe
mov
sbb
bnd
hlt
xor
pop
scas
inc
lea
fnstenv
into
jge
mov
pop
jl
popf
inc
addr16
cmc
cli
into
sub
dec
xor
cmpsl
cmp
cmovbe
out
out
test
cmc
scas
dec
cli
mov
jg
adc
mov
lea
sub
fists
stos
add
rclb
insl
pop
popa
push
cmpsl
lock
pop
inc
and
jge
xchg
mov
test
xchg
addr16
mov
inc
xchg
pop
aaa
loope
sbb
inc
dec
sbb
bound
out
xor
mov
sub
andl
xor
xchg
enter
or
push
mov
dec
push
xchg
or
rorl
rcrl
mov
fucomp
pop
gs
subb
jns
mov
cld
push
push
mov
les
test
inc
movsb
add
pop
pop
clc
dec
or
dec
jmp
dec
adc
sar
jge
sub
outsl
pop
in
rcl
inc
push
sbb
test
mov
xchg
jne
or
add
mov
adc
mov
test
jbe
inc
jnp
push
fiadds
push
scas
addr16
fldcw
lahf
sub
inc
sub
imulb
insb
inc
adc
shrl
dec
cmp
int3
ljmp
cmp
or
push
nop
xlat
ret
sub
into
xor
pop
pop
fdecstp
testl
leave
ds
jecxz
cmp
mov
sti
aaa
jo
push
sbb
ret
hlt
iret
push
clc
loope
jmp
and
popa
out
jne
push
rorl
or
int
or
daa
mov
xchg
and
scas
and
dec
add
xlat
inc
pushf
mov
jae
adc
mov
xor
sbb
fisubrs
fadds
jno
imul
mov
and
inc
mov
test
test
test
sbb
fistpll
ret
test
sbb
mov
icebp
inc
leave
or
adc
ljmp
pop
aam
mov
jge,pt
push
push
dec
mov
add
xchg
popf
push
add
jae
into
dec
mov
sub
sbb
pop
repnz
ret
mov
inc
dec
arpl
mov
jo
pop
jle
pop
or
fwait
insb
call
or
jo
jl
out
mul
jmp
pop
insb
inc
fdivrp
jl
outsb
out
in
jmp
testl
insb
xchg
testl
pop
imul
aaa
cmpsl
dec
aam
push
add
test
pop
dec
pop
add
mov
data16
and
mov
lea
sbb
andb
mov
icebp
pop
push
int
and
xchg
sarb
lods
ja
xchg
out
mov
call
jg
xchg
dec
pusha
sti
add
arpl
loopne
ret
push
pop
in
adc
add
dec
sbb
gs
outsb
popa
aad
jns
adc
repz
das
shrl
jl
pop
scas
push
lret
or
xchg
test
push
shlb
fisttpl
into
push
xor
pop
mov
enter
inc
adc
lret
imul
fnstenv
mov
or
movsb
sbb
inc
cs
mov
xchg
adc
push
xchg
ret
and
movsb
jl
pop
jbe
frstor
adc
sti
rcl
ljmp
xchg
sti
inc
mov
loop
mov
mul
faddp
enter
gs
push
fsubrl
pop
arpl
lcall
fadd
insl
rolb
and
xor
cwtl
mov
adc
das
xchg
aam
call
or
inc
sub
inc
ret
fsub
push
push
sbbb
cmpsb
and
dec
nop
cmp
xor
orl
mov
xor
popf
shlb
in
xchg
or
push
and
pushf
in
cmp
pusha
add
mov
push
jae
jb
jmp
jb
push
stos
rcrb
jmp
inc
icebp
lcall
push
pop
icebp
inc
out
lahf
push
xchg
pop
scas
sti
decb
and
fildll
jmp
lret
insl
leave
mov
push
or
rcll
shll
xchg
mov
sbb
test
test
stos
jp
rcrb
or
mov
icebp
pop
subl
dec
cmp
mov
mov
out
shlb
pop
fxch
jne
mov
mov
add
imul
xchg
clc
sti
rcrl
jle
loopne
and
xchg
cmp
pop
pop
cmpsb
jp
push
mov
in
push
ret
pop
insb
incb
inc
es
add
jae
jle
testl
cmc
faddl
int
nop
mov
ret
mov
fnstenv
xchg
pop
pusha
popf
nop
and
push
adc
sbb
dec
cmpsb
scas
rep
lods
jne
dec
mov
and
call
dec
inc
out
and
cwtl
push
mov
sbb
dec
pop
push
nop
js
ss
inc
fs
mov
push
cs
mov
lahf
push
into
push
inc
in
inc
inc
out
loope
or
in
lret
stos
pop
push
pop
sarb
add
daa
xchg
cmp
pop
pushf
aad
imul
and
inc
xor
movsb
adc
test
daa
imul
stc
add
xlat
xchg
xor
clc
and
adc
repz
mov
out
mov
pop
gs
lret
xor
sub
dec
repz
nopl
in
add
xchg
mov
idivl
iret
xor
fiadds
rep
add
jmp
jge
mov
pushw
mov
xchg
sub
add
popa
xor
mov
icebp
xlat
xchg
xchg
mov
sarl
aam
pushf
ss
divl
in
lock
inc
negb
jge
pop
leave
adc
dec
dec
sub
movsb
xchg
test
test
cltd
stos
pop
jb
es
mov
sti
or
mov
scas
ja
sub
fdivr
mov
mov
lods
dec
mov
decb
push
xchg
stos
cmp
cmpsl
xor
ds
push
jbe
mov
out
xor
push
pop
outsl
xchg
subl
jl
xlat
pop
pop
rcr
xor
push
outsl
cmp
rcrb
ret
jg
inc
imul
lock
stos
lcall
roll
pop
adc
imul
loop
aam
je
sahf
aad
fisubrs
or
add
sbb
pop
lods
adc
jb
mov
mov
mov
aas
sub
mov
lock
push
cltd
ss
push
call
subl
xchg
pop
mov
rorb
or
loop
call
repz
dec
testb
push
popa
mov
xchg
cmpsb
jnp
push
fwait
repz
cmp
adc
outsl
mov
xchg
aas
jno
stos
push
and
xchg
arpl
arpl
shrb
xchg
jbe
rcl
popa
addr16
sub
and
hlt
pop
aaa
loope
push
pop
xor
outsl
ret
sub
loop
or
xor
ret
cmpsb
int3
subl
push
mov
xor
pop
aad
jecxz
jecxz
fldcw
call
hlt
sbb
gs
popf
sbb
out
push
call
dec
xchg
lods
loopne
push
andb
adcb
je
dec
subl
shrl
cmp
mov
loopne
pop
je
dec
sub
leave
adc
mov
in
shl
xor
cmpsb
mov
xor
aad
int3
adc
insl
push
fdivrl
movsl
sub
mov
mov
adc
dec
orl
mov
add
and
pandn
cmp
jne
push
mov
into
pop
push
dec
inc
fiaddl
ret
cmpsl
fcmovne
or
pop
ret
roll
xchg
dec
das
outsl
add
or
fs
insb
ret
cmpsl
test
or
test
adc
je
cmp
clc
mov
pusha
dec
inc
xor
vpavgw
xchg
add
mov
mov
jmp
push
cld
sarl
std
xor
xchg
mov
jo
outsb
sbb
dec
popa
sahf
addl
outsb
mov
test
sbb
lcall
fs
pusha
push
pop
fucomi
jmp
testl
gs
mov
cld
push
loope
test
mov
xchg
add
and
cmp
jmp
sub
push
sub
adc
scas
xlat
mov
loopne
cld
push
sahf
or
push
iret
ret
xchg
out
out
jbe
sbb
sbb
ret
sub
cmpsl
sbb
std
gs
out
cli
leave
cmpsl
lret
lret
pop
out
add
push
jmp
xchg
pop
cmp
je
std
xor
inc
xor
xor
sub
out
fbld
movsb
daa
xlat
mov
hlt
mov
aad
movsb
pop
leave
jge
xor
fucom
lods
adc
cmpsb
stos
adc
or
fisubl
insl
push
and
push
cmp
or
add
sub
in
cmp
pop
rorl
in
fisubl
mov
stc
pop
cld
stc
xchg
aam
or
sub
aad
xchg
and
sub
iret
lret
mov
and
xchg
mov
icebp
negb
push
push
je
out
adc
add
adc
pop
push
pop
cmp
sub
das
rcrl
push
sbb
mov
adc
pop
mov
jecxz
fisubs
jbe
inc
sbb
mov
pop
lcall
out
pop
sub
cld
add
inc
lahf
ret
sarl
pop
xorb
xor
cmp
cwtl
test
dec
cmpsb
imul
cld
xchg
pop
test
add
mov
mov
lcall
mov
je
cli
pop
adc
pop
pop
enter
rcrl
loopne
jbe
test
rcll
cmp
push
sbb
loop
daa
test
pop
rclb
icebp
pop
mov
mov
add
std
adc
lods
mov
outsb
sub
or
adc
jb
mov
mov
ret
jns
jmp
mov
jmp
bound
insl
out
inc
adc
lods
cmp
pop
sub
jmp
push
in
add
sub
push
push
shll
mov
in
pop
popa
mov
repnz
cwtl
jle
dec
test
js
hlt
hlt
enter
popl
ljmp
test
xor
ja
leave
jno
popf
xor
test
sbb
push
jge
pop
xor
mov
mov
fs
sub
pop
sub
xor
xor
test
mov
add
push
inc
push
loopne
jmp
loope
arpl
in
dec
lods
sbb
or
pcmpgtw
cmpsb
test
jle
xor
add
cwtl
sbb
mov
gs
adc
inc
insb
mov
repnz
insb
int3
lods
sub
ljmp
inc
lods
lock
cmpsl
xor
xor
cmp
dec
cmpsb
shll
ret
std
shll
arpl
inc
data16
dec
out
jne
dec
adc
lods
enter
inc
sbb
sbb
addb
enter
out
mov
repz
cld
sub
inc
out
leave
cld
std
or
out
popf
fldenv
cmp
mov
in
scas
pop
xor
stos
cmp
mov
xchg
mov
ret
flds
or
xor
inc
gs
xchg
pop
sbb
ja
rorl
cmp
out
sub
fmull
cmp
ret
add
int
fs
pop
xlat
test
stc
stos
push
inc
jp
or
dec
sub
cmpb
adc
fcomp
sbb
cmpsl
add
mov
adc
jb
xchg
inc
mov
imul
lahf
gs
cmpsb
jnp
les
movsl
mov
adc
adc
cmp
push
pop
inc
xor
popf
stc
pushf
push
aaa
mov
and
push
scas
cmp
fisubrl
repnz
cmp
mov
mov
scas
mov
jl
adc
divb
add
mov
jmp
add
pop
mov
and
add
cs
hlt
rclb
fstp
inc
into
lods
cmp
dec
fwait
in
icebp
aam
and
inc
mov
jnp
leave
fsubrl
andl
leave
jnp
in
mov
fsts
or
pop
or
dec
jnp
nop
push
pop
daa
jb
or
cmpsb
add
rcll
clc
pop
or
lock
mov
shl
cld
xchg
inc
sahf
stc
sub
jnp
addb
xchg
fs
push
out
xchg
add
sbb
data16
movsl
mov
fcom
xor
int3
jo
nop
mov
pop
je
xchg
mov
mov
push
inc
scas
out
jae
enter
out
aad
fidivl
int
loop
sbb
test
cld
mov
xchg
in
xlat
stos
fdivs
xorb
loopne
or
xchg
test
aad
ror
jns
loop
loop
sbb
inc
dec
je
rcll
push
stos
ds
mov
mov
jnp
or
xchg
rcrb
mov
and
js
test
loope
inc
mov
push
daa
fdivs
fcmovnu
pshufw
dec
pop
repnz
movsl
cmpb
das
or
scas
clc
pop
testl
iret
mov
loope
les
setne
cli
sub
daa
jno
imul
repnz
pop
adc
js
jbe
cmp
jg
adc
ljmp
sahf
or
push
out
cmp
pop
mov
jne
pop
xchg
push
adcl
and
cmpsb
stc
shlb
popl
lods
icebp
jge
cld
std
mov
lret
scas
xchg
cwtl
lock
jne
aam
pushf
fbstp
mov
imul
pop
stc
addr16
inc
stos
arpl
imul
mov
xchg
cmpsb
cld
cmp
arpl
dec
mov
inc
pop
sub
ljmp
jle
fnstsw
insl
fidivrl
jno
push
jp
out
jbe
gs
out
decb
and
xor
daa
add
sub
inc
out
lock
clc
rcll
dec
push
push
mov
enter
fidivs
or
repnz
push
pop
test
add
adc
mov
sub
mov
add
cmp
fbstp
adcb
loop
cmp
bswap
jo
lcall
scas
mov
inc
pop
pop
inc
les
mov
mov
mov
insb
int
fadd
mov
cvtpi2ps
and
pop
lahf
push
inc
test
in
iret
cltd
repnz
call
pop
mov
lods
iret
test
jl
mov
sub
and
test
repnz
rol
mov
pop
mov
out
xor
insl
roll
leave
mov
gs
sti
ljmp
mov
push
scas
inc
cli
inc
cmpsl
xchg
mov
add
fwait
out
pusha
cmp
insb
lret
jno
insl
and
pop
mov
jb
or
add
cltd
push
xchg
jmp
cmp
leave
fnstcw
inc
add
sbbl
stos
fucompp
daa
cmp
adc
ja
mov
test
mov
int
xchg
fldt
xchg
mov
rorl
out
or
fists
sbbl
subb
aad
or
nop
movsb
mov
dec
pop
jle
xchg
pop
les
xor
int
push
arpl
xlat
jno
rolb
xchg
pop
in
mov
xchg
or
cmc
and
ss
hlt
adc
jno
push
mov
mov
das
ret
add
mov
vpmaxsw
adc
or
js,pn
inc
test
xlat
sbb
lock
stos
negl
mov
xor
dec
xor
mov
inc
xlat
mov
ljmp
jmp
les
mov
out
out
sub
xchg
cmp
cld
sub
insl
jno
or
xor
add
stc
lods
test
cltd
push
pop
pusha
dec
repz
shrb
or
sub
jge
ja
dec
mov
inc
cmp
push
stc
mov
movsb
adc
jp
bound
ret
sbb
or
insb
mov
decb
and
test
ror
inc
ja
fmuls
jl
aad
jb
sub
push
jae
xor
pop
pusha
andb
push
cli
cltd
sti
push
sub
adc
popa
adc
xchg
pop
cld
xlat
lods
lret
cld
xchg
dec
sbb
insb
push
dec
das
push
sbb
aad
sbb
mov
dec
cmp
mov
sbb
daa
test
mov
loopne
push
mov
sub
out
addr16
adc
aas
sarl
jle
rcrl
cli
repz
sbb
xchg
pop
push
push
jmp
mov
mov
inc
ja
cmp
imul
stos
sub
mov
pop
loop
imul
inc
sbb
test
insl
popf
out
ficoms
testl
mov
andl
insb
push
push
lret
loop
mov
int
mov
jg
mov
fcmovne
push
fistps
arpl
daa
push
jp
mov
sbb
xor
inc
scas
or
xchg
sbbl
push
cld
cmp
inc
std
in
ss
xor
mov
push
cmp
xchg
add
mov
in
test
or
adc
inc
and
jp
dec
xchg
sub
int
cltd
das
xchg
jp
icebp
lods
test
push
fsts
mov
test
push
sbb
dec
jns
xor
in
into
pop
imull
mov
push
pop
bound
mov
ret
mov
jge,pn
test
cltd
cs
and
fs
cmp
sbbl
in
fdivr
lret
push
sub
inc
dec
jle
inc
and
xchg
out
cmp
cld
pop
orl
sub
inc
in
das
in
lock
aad
or
xchg
test
cmp
cmpb
or
sub
sub
sub
pop
out
xor
and
pop
icebp
cmpsl
insb
jl
popf
sbb
popa
icebp
sbb
lcall
lret
hlt
je
lods
mov
or
pop
xchg
cmp
push
sub
ja
jbe
adc
push
cmp
xlat
inc
adc
push
out
mov
push
gs
dec
cld
loope
dec
dec
shll
lret
adc
lret
fbstp
out
mov
xchg
aam
movsb
shl
cmp
jns
mov
mov
push
cwtl
cmp
mov
inc
and
inc
jb
insb
movb
in
mov
adc
cld
call
pop
cmp
mov
cmc
xor
lds
mov
mov
or
leave
pop
xlat
into
push
pop
cmpsb
mov
push
xchg
or
scas
inc
dec
adc
push
pop
dec
imul
inc
arpl
lea
mov
xchg
pusha
push
cmpsb
arpl
aaa
je
jnp
out
repnz
test
mov
aaa
xor
push
jne
push
cmpsl
pop
nop
in
inc
jp
jg
fs
repnz
lea
xchg
pop
cltd
test
add
cmpsb
pop
shll
aad
push
stos
mov
inc
add
cmp
cs
push
xor
jb
loop
jns
fidivl
mov
mov
sahf
xchg
ss
daa
mov
popf
xchg
hlt
popf
xor
xor
gs
fildll
int
insl
pop
or
cltd
mov
adcl
outsl
subl
daa
add
je
mov
shll
nop
xor
mov
test
pop
sti
pop
cltd
adc
imul
mov
jnp
stc
test
addl
fcmovnu
mov
js
rcrl
or
pop
and
xor
sub
loopne
xor
cmp
jg
pop
or
or
sub
and
and
inc
arpl
pop
mov
ret
cmpb
sbb
in
dec
sbb
mov
pop
jns
and
cwtl
cmp
xchg
push
decl
add
xor
cmp
daa
mov
jnp
push
pop
data16
in
test
outsb
outsb
jecxz
xor
and
cs
fld
mov
pop
mov
stos
lods
mov
sub
pop
push
lret
popl
mov
in
fld
cmp
push
sti
cs
aaa
cmp
orl
sbb
and
jb
inc
cmp
pop
mov
movsl
xor
enter
bound
shll
lds
xchg
insb
and
xlat
cmp
std
fimull
loop
xchg
mov
imul
jnp
pop
mov
fiadds
daa
xchg
out
das
dec
aad
repnz
push
rcll
lret
pop
je
dec
ds
or
daa
or
mull
cld
test
out
out
add
arpl
push
aaa
inc
fimull
in
sbb
sahf
icebp
add
xchg
mov
ja
pop
outsl
sbb
pop
sbb
fimull
xchg
inc
pop
or
loope
mov
es
mov
das
mov
mov
addr16
inc
push
jo
cli
push
jb
daa
stc
fsubs
adc
inc
pop
push
and
pusha
and
rorb
cs
adc
push
pop
aad
imul
sub
mov
cwtl
outsl
xchg
test
mov
cwtl
jno
push
inc
xchg
push
push
sbb
dec
add
iret
icebp
loopne
mov
nop
pop
sbb
out
sti
repz
add
shrl
or
adc
call
js
rcrb
fs
cld
int
cmp
bound
xlat
push
clc
mov
or
pop
pop
fidivl
jb
lahf
or
pop
in
mov
jb
push
mov
fistps
lods
hlt
imul
into
loop
jge
mov
inc
xchg
or
fcmovne
xchg
arpl
fildll
lods
sub
test
add
daa
imul
in
xor
subb
sub
dec
aas
out
jnp
xor
fsubs
aam
lds
ss
outsb
mov
lahf
outsl
pop
clc
xor
mov
aas
scas
jle
push
mov
fwait
shrl
sub
jbe
or
add
das
mov
push
mov
mov
pop
mov
arpl
sbb
insl
out
sub
ret
sbb
mov
bound
out
pop
fdiv
out
cmpsl
push
decb
sub
push
adc
sbb
inc
call
test
aam
cmp
add
in
jbe
div
jle
pushf
or
or
mov
xchg
bound
pop
pop
jbe
mov
in
sti
shrb
xchg
fcom
sub
cmp
stc
push
cmpsb
je
jbe
loopne
xor
out
roll
xor
cltd
push
xor
pop
popf
outsb
stos
arpl
jns
cmp
imul
subl
dec
pop
stos
or
mov
push
es
push
enter
push
xchg
push
sarb
mov
fadds
mov
loope,pn
test
xchg
fiaddl
adc
adc
aam
leave
xlat
jle
add
adc
mov
decb
lahf
push
pop
leave
jo
outsl
and
aas
clc
inc
add
fcomps
arpl
pop
out
sub
movsb
hlt
cmp
lods
inc
cltd
addb
mov
shl
adc
rorl
fisttpll
cli
push
mov
in
push
fsubrs
scas
cmp
mov
out
xchg
jge
mov
pushf
cltd
jmp
sbb
lods
rcl
or
aas
arpl
lea
subl
xor
lahf
sarb
repnz
addl
mov
adc
das
outsl
sub
cwtl
in
fcomps
push
ljmp
loop
jg
mov
adc
loopne
adcb
add
and
mov
enter
out
enter
popf
mov
cwtl
in
ss
inc
in
test
cmc
jmp
mov
xorb
jge
arpl
jmp
imul
cs
pusha
push
jns
xchg
pop
dec
repnz
push
add
inc
pop
loopne
mov
sub
leave
jae
je
rcll
insl
js
mov
mov
xor
cmp
mov
or
mov
lea
fwait
imul
lcall
pop
cs
push
out
ljmp
xchg
push
negl
jmp
inc
incl
inc
mov
mov
addr16
push
sbb
inc
outsb
hlt
pop
dec
adc
jl
push
or
sbb
jp
jecxz
and
rorb
cmpsb
push
xor
xlat
mov
shlb
mov
cmp
xor
xor
std
pop
sbbb
repnz
mov
pandn
push
aam
scas
movsl
fimull
fidivs
je
ljmp
dec
lret
mov
add
pop
in
fiaddl
jmp
outsl
xlat
and
adc
bound
adc
jmp
cmp
hlt
mov
add
je
mov
push
into
fdivrs
sbb
xor
pop
xchg
imul
inc
aas
adcl
or
cmp
xchg
pop
ret
jno
cmp
sub
ret
bound
sbb
jb
mov
push
adc
pop
jae
xorb
aaa
daa
push
mov
mov
dec
jp
or
das
mov
imul
push
outsb
test
push
mov
and
lods
ret
loopne,pn
jno
lret
jnp
mov
scas
push
mov
xor
aas
test
or
stos
jno
cmp
shrb
adc
gs
mov
xchg
inc
sahf
jb
cmp
rcrl
mov
lods
jno
or
out
push
les
sub
loopne
cld
clc
sbb
cmp
and
call
push
xchg
mov
aad
dec
test
mov
cmp
movb
mov
fidivs
pop
test
adc
cmc
addr16
popa
and
fsubl
into
stos
fistpll
ljmp
out
inc
stos
or
mov
xchg
push
mov
movsb
mov
insb
add
or
jecxz
je
jg
pop
jno
jg
pop
fwait
cld
sub
jg
adc
scas
dec
or
add
ljmp
sbb
es
call
mov
and
imul
jp
jnp
into
sub
in
sbb
jnp
lea
dec
pop
jecxz
andb
fidivl
push
and
mov
mov
jle
leave
scas
jge
ja
movsl
stc
push
cli
imul
repnz
inc
add
loope
scas
fnsave
mov
test
test
jmp
outsl
mov
push
fidivrl
insb
lahf
or
xor
cmpsb
lock
sub
lcall
adcl
shll
mov
sub
out
xchg
pop
push
int
mov
repnz
cmp
inc
adc
daa
push
popf
fwait
or
pop
ljmp
adc
or
popa
in
mov
clc
push
xchg
lret
scas
flds
add
mov
jge
imull
outsb
lea
cmpsb
call
clc
or
scas
frstor
xchg
loop
popf
js
js
jge
cltd
stos
andl
je
pop
push
pop
xor
ss
jecxz
pop
adc
push
mov
repnz
dec
inc
jmp
int
arpl
lds
enter
movsl
mov
data16
dec
daa
dec
add
movsb
push
sahf
cmp
sti
lods
mov
jnp
jo
pop
fwait
dec
and
inc
gs
mov
xchg
rorl
int
js
inc
jb
dec
xor
fnsave
mov
adc
inc
mov
movsb
jle
outsl
xor
fists
xchg
dec
and
scas
push
push
mov
arpl
inc
mov
sub
mov
jle
add
es
js
mov
mov
sbb
xlat
xor
sub
dec
sbb
adc
mov
jns
fidivl
mov
mov
or
insl
inc
les
cmpsl
pop
repz
out
out
or
daa
adc
sub
call
shll
in
push
fs
xorb
and
cmp
add
and
mov
mov
lahf
xor
in
enter
ljmp
adc
icebp
xlat
jle
jae
mov
cli
sbb
lea
pop
movsl
sahf
lret
pop
addr16
cmp
jns
in
inc
test
dec
cmc
call
adc
out
popf
push
xor
inc
adc
dec
insb
imul
lods
push
and
ret
lds
mov
in
les
outsb
sbb
add
xorl
mov
pop
movsl
inc
sbb
inc
mov
sahf
xor
mov
mov
and
xchg
out
int
and
sub
int3
push
and
movsl
int
loop
jbe
pop
jnp
das
push
ret
les
xchg
sbb
icebp
stos
sub
jmp
call
xor
filds
mov
sbb
scas
int3
xchg
sub
inc
cmpsb
rcll
jbe
sbb
fstl
pop
mov
pop
mov
xor
call
fmul
andb
mov
mov
cmpsb
cmp
fcomps
lcall
and
dec
xchg
jbe
mov
mov
int3
sbb
out
jbe
xchg
imul
cs
push
bt
push
adc
adc
xchg
push
or
fmulp
push
mov
jnp
cmp
sbb
mov
bound
cs
mov
inc
sahf
push
lret
cmp
inc
xlat
or
mov
push
xor
aaa
adc
xor
mov
xor
push
cmp
add
lret
nop
and
hlt
fwait
inc
negl
lret
fistps
pusha
lcall
mov
sub
jno
jge
jmp
jns
scas
inc
data16
jle
sbb
ret
flds
ret
in
mov
ret
adc
jns
push
fs
jnp
lcall
inc
push
sarb
xor
jbe
xor
inc
scas
or
jmp
and
xchg
inc
andb
fidivl
jmp
mov
lods
fstps
ljmp
sbb
mov
test
test
mov
and
push
in
hlt
push
in
icebp
inc
mov
rcrl
or
enter
sti
test
cmp
loop
or
mov
rclb
xor
and
and
add
pop
shl
in
fs
adc
push
fcmovbe
aaa
xchg
scas
xchg
insb
or
clc
std
and
sarb
adc
push
into
pop
jnp
xor
mov
rcrb
insb
sbb
xor
dec
cmp
xchg
mov
dec
enter
xchg
int
bound
mov
out
insl
jge
xor
ret
mov
xchg
mov
movsl
jmp
mov
push
xor
push
pushf
cwtl
es
mov
xor
pop
mov
sub
adc
mov
dec
loope
or
sbb
jge
pushf
xlat
push
cwtl
dec
in
pop
xor
lcall
test
pop
xchg
movsl
mov
movsb
adc
cltd
xor
inc
mov
jl
in
pop
test
xor
mov
in
roll
imul
scas
int3
jp
mov
xor
scas
dec
mov
inc
mov
pop
jecxz
movsb
adc
lcall
mov
dec
mov
cmp
addr16
and
scas
addl
iret
sbb
mov
pop
push
pushf
pop
push
push
xchg
sub
adc
push
fs
je
sahf
mov
xorb
pushf
lahf
xor
rcr
lret
dec
loope
jns
ret
add
sbb
insl
mov
shrl
lahf
add
push
push
dec
ret
or
bnd
roll
inc
out
mov
push
out
nop
loope
cld
aaa
sbb
sbb
sti
in
cmp
stos
ficomps
and
cmpsb
into
cltd
hlt
cwtl
call
xchg
mov
scas
stos
std
ret
add
notl
adc
add
and
insl
repnz
out
cs
pop
cmp
cltd
and
cmpsb
shr
adc
add
sarl
scas
cmp
mov
pop
les
scas
sbb
cltd
test
or
stos
in
or
fnstcw
scas
shl
add
sbb
insb
xchg
and
cmp
jmp
sub
pop
cmp
dec
adc
aas
fnstcw
jecxz
push
adc
sbbl
mov
pop
ret
mov
stos
dec
ret
in
movb
sbb
mov
rorb
cli
xchg
mov
arpl
xchg
loop
jg
mov
es
and
or
lret
imul
adc
bound
gs
jg
je
jmp
or
jge
ror
jge
dec
inc
sbb
add
adc
scas
pushf
fs
scas
fs
outsl
fadds
push
imull
sbb
aam
adc
push
or
idivb
sbb
movsl
sub
pusha
sub
ja
je
mov
mov
pop
insb
adc
mov
dec
and
xchg
mov
sbb
push
jge
jb
pop
in
imul
stc
imul
pop
mov
or
mov
stos
shll
sub
pop
idivl
out
out
fsubrs
lcall
mov
mov
ret
int3
inc
pop
mov
push
jae
xchg
or
idivb
or
sbb
sbb
mov
xor
popf
jg
cmp
cmc
ss
roll
dec
mov
mov
cmpsl
cmpsb
cmp
call
es
jl
jno
lret
mov
and
repnz
cmp
adc
call
imul
or
push
mov
outsl
mov
gs
mov
fsubs
test
sbb
dec
and
repnz
into
fwait
mov
push
ljmp
testl
or
and
insl
push
out
xchg
push
loopne
sub
cmp
scas
add
fadds
push
in
repz
sub
xchg
pop
cmpb
cmp
sub
cmpsb
sbb
shrl
cmp
xor
adcl
pop
add
test
insb
and
add
les
js
in
loope
mov
inc
mov
sub
aaa
ficomps
scas
mov
stos
inc
testl
mov
sub
pop
add
test
rclb
mov
fwait
sahf
das
xchg
xchg
lahf
ret
jp
cmp
mov
mov
in
fiadds
and
js
mov
fwait
push
mov
sub
adc
add
aas
into
xchg
add
xor
out
add
sub
lea
movsl
out
sbb
or
enter
test
mov
in
pop
lret
in
in
pushf
iret
fiadds
add
xchg
ret
roll
add
jae
pop
xchg
mov
and
sar
dec
jge
notl
loope
scas
mov
call
test
lock
mov
xor
push
and
imul
cmp
mov
mov
or
loop
or
push
cmp
fs
pop
fsubl
ret
sub
in
xchg
mov
xlat
data16
add
fwait
out
test
in
push
jl
clc
push
testb
ljmp
orps
mov
mov
mov
dec
movsl
cs
rol
mov
pop
pop
xchg
xor
push
and
negl
mov
add
in
popa
xchg
push
dec
xchg
pop
cmpsl
xchg
lahf
js
mov
outsl
sub
ja
jg
rcl
or
adc
add
stos
sub
mov
cmp
xor
jno
mov
cmpsl
cmpsl
rorl
pop
test
sbb
pop
add
pop
in
or
xchg
pop
repnz
sbb
andl
cmp
scas
push
ljmp
inc
sti
sub
and
loop
aaa
ficompl
pop
out
out
pop
xchg
fs
outsl
cmp
add
int3
sarb
scas
mov
adc
cld
mov
fidivl
aam
stos
dec
xor
cmpsl
mov
xchg
dec
pop
sbb
push
sub
mov
shlb
test
cltd
cmp
fcoml
rorl
iret
xchg
or
outsl
and
jp
jae
mov
je
sub
xlat
push
or
fsubr
jo
out
into
out
inc
cs
mov
and
push
and
aaa
or
dec
cmc
dec
mov
sub
out
roll
test
fwait
cmp
lahf
shlb
cmp
notl
adcl
jae
loop
ret
ja
mov
xchg
mov
stos
inc
stos
rcr
insb
in
xchg
int
outsl
mov
or
add
arpl
sbb
and
xor
inc
mov
ret
cmp
push
xadd
ljmp
add
pusha
dec
iret
repz
js
aas
and
add
adcl
lret
push
mov
cmc
rcll
or
mov
jmp
push
mov
inc
rclb
inc
leave
lcall
push
mov
jg
mov
movsb
jge
outsl
dec
je
repnz
inc
in
xor
mov
repnz
enter
imul
loopne
push
pop
stos
cmc
stos
icebp
lret
jl
xchg
or
dec
mov
push
stos
mov
push
aaa
fnstcw
popf
sbb
inc
jne
into
fsubs
inc
inc
stc
sbb
int3
repz
mov
mov
je
sub
les
js
inc
pushf
sbb
push
mov
pop
xchg
mov
test
dec
in
jge
fmulp
loop
cmc
mov
xor
sub
test
mov
pop
push
xchg
fcom
aad
push
add
test
js
ret
bound
xlat
fsubs
shrl
xor
inc
dec
push
inc
mov
pusha
scas
jge
andl
add
cmp
lds
push
data16
adc
pushf
xor
or
test
push
mov
dec
xor
dec
movsl
movsl
cs
imul
mov
ret
cmpb
out
xor
lds
mov
jmp
test
cmpsl
push
ljmp
lea
push
stos
ret
data16
push
or
bound
pop
sbb
mov
stos
cli
lods
sub
push
out
out
stos
mov
pushf
repnz
xchg
lock
pop
xor
jno
jmp
pop
add
mov
sbb
cmp
in
mov
movsb
xor
loopne
push
jge
sbb
sbb
pop
dec
lret
add
repnz
jns
pusha
or
lcall
push
dec
out
mov
mov
fbstp
mov
xchg
xchg
scas
mov
out
sarb
cmp
mov
sbb
decb
test
xor
cmpsl
or
loope
sub
adcl
push
mov
hlt
clc
add
shlb
mov
aas
dec
dec
xchg
mov
xor
xchg
bound
lods
dec
adc
cmc
fidivrl
jmp
out
jge
stos
jae
jmp
dec
and
movsl
andb
inc
pop
adc
std
in
sbb
or
inc
mov
mov
lods
xor
xchg
scas
leave
jg
cmp
adc
dec
mov
outsl
hlt
push
imul
inc
mov
pop
pop
cmp
std
xchg
lods
inc
jge
pusha
sbb
mov
les
hlt
jmp
in
mov
xchg
rolb
dec
cmp
nop
or
sub
not
mov
sbb
daa
repz
lds
int3
sub
add
dec
add
adc
sub
sbb
sub
jno
shll
lock
push
adcl
popf
movsl
sub
jae
mov
add
orb
and
lret
and
xor
insl
shl
xchg
out
mov
vpunpckhbw
iret
sub
std
jmp
mulb
xor
iret
into
loopne
xchg
pusha
and
ret
or
mov
mov
movsl
mov
hlt
scas
loope
dec
test
in
ds
pop
inc
xchg
mov
cmc
jle
inc
xchg
mov
pop
les
gs
mov
mov
or
popa
xchg
fs
push
jb
push
or
mov
inc
scas
push
sub
gs
cmpl
cwtl
mov
gs
ljmp
pop
pop
pop
push
pop
outsb
outsl
add
mov
data16
dec
fisubrl
test
cmp
adc
loop
das
iret
or
push
cmp
iret
cmp
clc
ljmp
push
jle
cmc
inc
mov
sbb
xchg
inc
and
nop
shrl
mov
fcomps
fsubrl
scas
jle
leave
into
lcall
inc
dec
mov
nop
mov
push
out
pusha
push
mov
dec
aas
sbb
jns
in
call
and
cmpsl
jg
fstpt
push
mov
out
aam
imul
sbb
push
lcall
fwait
int
jo
push
loope
stos
xchg
out
shl
push
idiv
ficomps
jmp
jbe
lret
xor
out
ja
ss
int3
add
pop
lea
popa
nop
shl
inc
stos
inc
dec
sub
lds
push
cmp
leave
cmpsl
pop
or
push
aaa
xlat
pop
push
and
pop
sub
arpl
sub
mov
xchg
dec
adcb
shr
int3
gs
jmp
stc
pop
repz
in
xchg
xchg
fs
jo
pushf
pushf
fcmovu
fwait
int
xchg
aas
jne
adc
pop
fstpl
test
out
xchg
bound
cltd
adc
xor
movsl
pusha
movsb
loopne
xor
xor
cmp
inc
dec
xchg
cmp
dec
test
pop
js
push
sti
sbb
push
in
mov
aam
jge
rolb
mov
sub
test
cmp
xlat
dec
add
and
inc
shl
sub
mov
mov
xchg
clc
inc
inc
ja
into
mov
cmp
cmp
add
or
test
les
push
pop
faddl
sub
or
cmp
xchg
xlat
hlt
pop
or
sbb
stos
mov
das
inc
jmp
arpl
push
jle
or
pop
pushf
insl
pop
inc
mov
ja
lret
jns
add
xor
lock
cmp
cltd
sub
xor
dec
push
add
and
xchg
jno
cltd
xchg
or
push
rorb
push
mov
fbstp
scas
xchg
pop
int3
lcall
sub
pusha
mov
add
sub
jnp
scas
in
pop
scas
and
inc
mov
push
push
mov
jmp
and
pop
test
jmp
pop
push
mov
dec
mov
mov
xor
push
repnz
arpl
xchg
xchg
jne
mov
dec
daa
sti
cmp
push
xor
enter
pop
add
test
aaa
icebp
mov
iret
xor
or
fbld
mov
cmp
ret
ljmp
adc
imul
or
fstps
lret
test
inc
sbb
aam
push
cmp
stos
add
sub
clc
add
sbb
sbb
notl
jmp
dec
xchg
mov
mov
outsl
lret
mov
lds
lret
and
fwait
cmp
xor
push
add
add
jge
sub
dec
sub
stc
adc
fmuls
jp
mov
push
sahf
stc
clc
divb
incb
addb
gs
add
sub
add
aam
pop
push
xlat
cmc
ljmp
sub
cmpsb
lods
scas
push
add
jp
sbb
push
xor
pop
iret
pop
mov
inc
fistpl
mov
pop
jp
fs
stos
pop
or
xor
or
cmp
mov
xchg
leave
pop
push
add
test
jg
out
lret
xor
rol
cmp
and
xchg
idivb
mov
idivb
lahf
aas
xor
movb
xchg
jecxz
cmpsl
outsb
push
fldpi
negl
les
mov
dec
push
pop
movsl
sub
mov
push
in
push
push
int
mov
sub
mov
sbb
addr16
push
inc
mov
inc
clc
add
pop
push
sub
sub
and
inc
fwait
mov
sti
jbe
outsb
cmp
lock
shr
icebp
pushf
pop
sti
adcl
popf
jp
test
mov
outsb
jns
subl
cmp
and
mov
rcll
fildll
xchg
pushf
jbe
imull
nop
mov
sub
arpl
jmp
sbb
push
cmpsb
nop
pop
sbb
jne
jns
das
outsl
fs
out
pop
inc
rorl
aam
mov
loop
arpl
xchg
pop
cli
xlat
das
mov
pusha
jb
int
mov
mov
jp
fldenv
sub
or
jne
xchg
jge
lock
and
dec
rcrl
popa
push
mov
push
push
out
pop
mov
pop
aam
outsl
dec
aam
mov
adc
mov
sub
imul
mov
mov
fdivl
sbb
pop
xchg
dec
mov
loopne
popa
pushf
popf
hlt
imul
or
aas
in
and
inc
leave
xor
test
cmc
testl
or
outsl
fmul
ret
loopne
insl
sahf
stc
ret
clc
and
pop
or
fdivl
sub
loope
movsb
inc
jecxz
pop
adc
pop
arpl
xor
lret
std
jl
adc
lock
cmp
loope
cltd
into
clc
jp
xchg
out
jg
cltd
stos
mov
mov
pop
inc
shll
inc
clc
addb
repz
xor
pop
mov
ror
or
push
aam
xor
dec
lds
sarb
lret
push
jns
rcrl
movsl
jle
jmp
push
loopne
or
frstor
lret
adc
aas
pop
jmp
mov
imul
ja
inc
sub
outsb
pop
jne
stc
in
sub
pop
bnd
or
jo
pop
fdivrs
arpl
cmc
pop
dec
je
xchg
or
inc
xor
inc
das
sahf
out
cmp
jmp
clc
insl
mov
inc
mov
push
inc
imul
sbb
dec
lcall
ds
das
fcompl
rcrb
pop
mov
cld
xchg
mov
out
stos
inc
mov
inc
xlat
mov
xor
xor
fs
lret
arpl
out
loop
test
and
mov
and
lods
sub
jle
add
shl
insl
das
push
in
imul
test
pop
and
push
push
dec
inc
push
pop
mov
int3
mov
or
lods
out
cmp
add
cmc
dec
mov
jge
xchg
mov
dec
cltd
fisttpl
push
pop
dec
js
std
shl
inc
adc
les
dec
jnp
jge
movsl
and
add
mov
adc
cmp
add
inc
mov
xchg
shll
cli
sbb
out
sbb
push
stos
cwtl
jp
mov
push
insl
mov
mov
add
incb
fstl
mov
sub
fwait
push
shlb
sbb
enter
adc
rorb
dec
iret
andl
mov
push
sub
sbb
out
xchg
jnp,pt
inc
mov
dec
jge
lahf
stos
std
dec
cmpsl
icebp
in
mov
dec
notl
sbb
mov
pop
xchg
sbb
or
jno
scas
inc
xchg
mov
mov
xchg
inc
sub
nop
popa
mov
jb
mov
push
hlt
ja
inc
push
dec
cmpsl
out
out
fnsave
adc
xor
pop
stos
int
mov
out
xor
and
xor
lret
cli
pop
xchg
lea
into
js
aaa
shrl
out
test
mov
jae
pop
jmp
int3
jb
inc
jns
movsl
jb
cld
xchg
pop
loopne
inc
xchg
mulb
push
push
daa
shll
cltd
pop
call
sahf
in
insb
and
jmp
icebp
aas
rorb
sahf
cmpsb
movsl
jo
fildll
popa
add
xlat
pop
dec
lock
or
packuswb
xchg
adc
pop
movsl
in
dec
cmp
xor
push
mov
mov
sub
mov
lds
std
test
jge
stos
jl
or
or
jb
cmpsl
mov
and
push
and
push
test
inc
mov
in
in
imul
push
lahf
ljmp
movsl
jbe
sbb
cmp
sbb
push
sub
jle
dec
xchg
in
cltd
loop
mov
loope
xchg
jl
addr16
and
push
stos
sub
or
mov
lods
cmc
add
shlb
aaa
into
add
push
out
pushf
dec
adc
inc
mov
jmp
testl
pop
out
dec
out
ljmp
outsl
stos
sub
sub
int
and
mov
push
and
sub
fwait
leave
add
jne
push
sub
cmp
xchg
sbb
les
nop
push
adc
jmp
add
and
inc
insl
ret
lcall
jne
mov
sbb
sbb
stos
add
push
push
lcall
dec
lahf
pop
xchg
pop
xchg
dec
or
lds
adc
xchg
fchs
ljmp
test
mov
leave
or
cld
push
clc
dec
mov
cli
js
sub
lods
xchg
xor
jne
jmp
pop
shll
divb
mov
push
fstpl
orb
fildl
enter
mov
sub
cltd
cmp
adc
fs
push
int
into
inc
xlat
inc
into
and
in
adc
popl
sub
ss
div
cmp
rep
int3
nop
or
mov
cmp
and
xor
adc
jle,pn
dec
pop
inc
and
dec
pop
repnz
jne
xchg
xor
cmp
ds
mov
out
inc
mov
arpl
add
ss
cmp
movsl
push
cmp
lock
fadds
aad
mov
pop
xlat
mov
and
cli
xor
ficomps
push
dec
pop
mov
adc
icebp
or
mov
pop
mov
lds
gs
pop
aam
ja
jg
stos
dec
lods
fdiv
sahf
psrld
or
inc
cs
xchg
das
fucomp
xor
ror
ficomps
movsl
and
jnp
jbe
inc
mov
scas
imul
and
xchg
mov
in
sbb
popl
sbb
sbb
add
push
repnz
jb
in
inc
nop
mov
add
xchg
ret
sub
call
test
test
cmp
int
lds
jmp
jbe
in
push
lret
gs
call
dec
jns
mov
xor
jle
js
negb
out
lock
mov
js
mov
pusha
mov
jns
cmpsl
sub
push
fisttps
jbe
pusha
addr16
pop
loope
lret
pushl
js
and
adc
shr
in
mov
popa
mov
pop
sub
dec
inc
in
add
sbb
fstpt
cmpsb
rolb
ds
xor
subb
push
cmpsl
push
fwait
mov
imulb
jle
push
dec
xchg
nop
mov
push
lods
outsl
int3
loop
lods
into
rolb
fcoms
popf
pop
xchg
in
cmp
mov
fsubrs
ljmp
mov
in
movb
mov
or
inc
mov
lret
mov
sub
daa
sub
das
fdiv
mov
insl
mov
outsb
xchg
in
sbb
mov
xchg
mov
adc
lcall
inc
sub
ss
and
rorb
push
sub
add
or
mov
cmc
ja
xorps
cmpsl
insb
dec
nop
icebp
mov
cmpsl
adc
mov
jg
jg
test
cwtl
mov
enter
xchg
xchg
test
sbb
or
push
dec
int3
jg
push
jbe
sub
imul
testl
mov
arpl
jae
xchg
push
stos
fidivs
stc
pushf
inc
imul
push
call
fistps
or
popa
adc
dec
or
sub
jmp
push
aad
xor
lds
addr16
imul
mov
imul
jg
ss
pop
lea
pop
shll
adc
mov
cmp
lods
repnz
dec
cmp
decl
lret
out
out
or
repz
cli
cmp
push
dec
in
mov
mov
fidivl
lods
ss
jl
sub
outsb
ss
mov
mov
mov
outsl
pushl
das
cwtl
sbb
stos
fsubs
aad
lret
jo
push
cltd
xchg
cmp
loop
test
mov
je
mov
add
lret
lock
xor
cs
mov
lret
jl
ljmp
mov
mov
out
cmp
cltd
adc
movsl
dec
xchg
lock
lea
js
add
cwtl
adc
pop
aad
pop
lock
jge
mov
jae
mov
sub
cltd
pop
push
shr
nop
xor
aad
in
cmp
outsb
mov
pop
push
sbb
mov
js
sbb
mov
mov
add
or
repz
mov
cmc
lods
imul
popa
lcall
into
leave
mov
rorl
add
xchg
repnz
mov
ret
add
lock
movsl
cmp
jl
jb
stos
pop
push
xlat
repz
movhps
xor
pop
xchg
adc
imul
mov
sub
or
daa
xchg
dec
xchg
sar
comiss
cmp
xchg
gs
mov
sbb
mov
shrl
mov
test
and
mov
fcompl
xor
dec
ds
or
movsb
dec
test
sbb
fs
cmp
imul
dec
jbe
aam
fstpl
sti
xchg
call
ret
ficomps
rorl
std
adc
push
mov
sub
mov
push
add
mov
jl
mov
jle
push
imul
fucom
fwait
or
das
test
dec
pusha
add
scas
sub
push
jge
cmp
fs
inc
in
je
outsl
push
jae
repz
mov
or
in
flds
sahf
cmpsb
xchg
jle
lret
xor
subl
push
jae
lret
flds
in
and
pop
mov
mov
adc
inc
xor
pop
jg
jae
dec
sub
pusha
mov
cs
ret
movsb
filds
lods
push
arpl
mov
mov
sbb
aaa
cli
jp
xchg
mov
fiaddl
inc
and
jnp
scas
adc
mov
cmp
sub
mov
inc
inc
pop
jp
les
xchg
inc
mov
add
das
nop
fildll
xor
pop
pop
ret
cli
loopne
sahf
enter
xor
or
xor
decl
dec
push
mov
outsb
ds
imul
jno
stos
fnclex
pop
sub
int
xor
adc
pop
mov
xor
and
fstl
stos
push
mov
mov
add
ja
loopne
lret
stos
inc
cltd
ljmp
xor
adc
mov
rcr
sbb
clc
inc
add
jno
jecxz
or
cmp
pop
cmpsl
adc
or
popf
adc
pop
icebp
adc
jmp
fstps
inc
inc
mov
fcomps
cli
scas
pusha
enter
fs
cmp
sub
dec
push
push
repz
mov
arpl
jbe
mov
mov
or
fcoml
rcr
sti
ds
bound
xchg
stos
mov
dec
out
add
mov
jbe
adc
mov
xor
pop
mov
mov
jae
cmpsl
scas
roll
movsl
push
negl
cld
pop
jmp
mov
inc
and
jo
add
xor
jnp
jg
jecxz
add
aaa
jp
test
fimuls
stos
into
orb
mov
loop
inc
in
cli
aas
movsb
inc
adc
fimuls
sbb
and
sahf
jg
xlat
jbe
xchg
sub
test
add
jbe
repnz
sar
and
cmp
insb
leave
sbb
add
and
jno
dec
fstl
add
dec
sbb
jl
push
push
adc
pop
sahf
or
stc
or
pop
test
mov
inc
xor
pop
mov
lea
jns
ljmp
inc
mov
stc
mov
clc
pop
mov
and
lret
or
std
mov
scas
mov
jp
dec
xor
jge
lret
mov
popa
jne
repnz
les
test
jbe
push
call
addr16
mov
xor
or
lret
dec
pop
or
cmovg
movsb
push
stos
sub
outsl
out
cmp
jp
js
clc
sbb
out
xor
outsl
std
mov
sti
out
inc
mov
xchg
fs
int3
mov
push
out
pushf
sub
cmp
cmp
les
xchg
rcl
jecxz
shrb
or
adcl
dec
adc
and
inc
jecxz
pushf
sbb
or
or
pop
mov
push
or
cmp
lods
xchg
repz
mov
jmp
jg
pop
movsb
imul
stc
jecxz
lret
mov
adc
and
jnp
jge
shlb
xlat
add
fs
cmp
adc
les
jl
push
cmpsl
adc
mov
gs
inc
xchg
ret
adc
int
inc
push
repnz
test
lods
sub
out
push
aas
mov
je
sub
les
pop
sub
cmp
cmc
or
pop
jno
arpl
ja
fidivrl
xchg
decl
sti
fwait
lea
sbbl
jmp
pop
xchg
icebp
sub
imul
sbb
test
fdivs
in
mov
mov
sbb
push
adc
aas
mov
fsub
cmp
int3
mul
incb
out
lret
in
sbb
daa
inc
lds
dec
xor
fs
mov
cmpsb
mov
es
int
lds
dec
dec
xchg
stos
push
xor
dec
mov
rep
lret
orb
push
xorl
pop
adc
jns
mov
out
cmp
dec
cwtl
mov
jo
cld
les
or
out
and
cmp
cmp
jae
outsl
or
gs
adc
or
push
loop
dec
jo
cltd
push
cld
jecxz
test
imul
gs
scas
nop
pop
xlat
push
push
mov
out
aad
out
and
adcl
int
pop
rcrb
into
lds
jle
fisubrs
adc
mov
mov
xchg
mov
mov
out
sti
jmp
push
cmp
pop
sbb
inc
mov
inc
aam
dec
in
jp
enter
imul
insb
aad
clc
push
fs
pop
pop
or
clc
mov
testl
dec
popa
xchg
push
mov
inc
stc
test
in
fistpll
sbb
fimull
js
sbb
mov
push
std
jb
aas
fadds
xor
xchg
aad
testl
stos
fbld
les
xorb
cmp
jg
xchg
imul
lods
out
push
ret
nop
xlat
pop
mov
mov
push
adc
cmp
addr16
lods
mov
mov
xchg
fldln2
pop
add
testl
or
rcrb
or
lods
dec
and
dec
cmp
stos
cli
jmp
outsb
inc
lods
movsl
shrb
enter
gs
fcmovnu
pop
ret
xchg
in
pop
jle
mov
insl
dec
pop
and
lds
fisubrs
shll
mov
mov
lods
cmc
test
or
scas
cwtl
mov
leave
inc
shll
enter
push
adc
int3
enter
xor
dec
stc
jle
push
sahf
adc
push
pusha
rcr
xor
jge
daa
push
aas
xor
push
mov
fstpl
mov
outsl
push
out
lahf
adc
xchg
out
and
xor
fs
xor
icebp
addr16
test
rcrl
movsb
ljmp
popa
add
mov
leave
out
outsb
cmp
add
sbb
sub
in
inc
sbb
sub
inc
call
cmp
je
pop
enter
or
xchg
mov
cmp
and
cmp
stos
jge
inc
add
adc
cld
jp
clc
mov
wbinvd
loop
and
add
roll
mov
and
push
jp
sub
xchg
adc
loopne
lret
out
addr16
leave
mov
mov
inc
xor
mov
jns
inc
test
mov
movsl
shrl
aaa
add
ja
ljmp
xlat
add
or
cs
hlt
dec
popf
lds
and
ficoml
inc
ja
push
andb
mov
je
mov
push
sbb
shrl
dec
jne
ret
fadd
shlb
sbb
out
sub
in
insb
push
mov
add
sarb
push
push
out
pop
xchg
les
jle
bound
pushf
jecxz
add
scas
or
std
or
push
or
or
xchg
lea
mov
cmp
adc
inc
scas
adc
addl
pusha
in
mov
out
mov
loop
fildl
add
jbe
push
jns
addr16
pop
mov
or
lock
sub
inc
cmp
ss
fldcw
adc
jb
inc
loop
mov
pop
cltd
cmc
daa
mov
and
push
push
jle
xchg
xchg
jp
mov
dec
sub
pop
lcall
inc
cld
mov
pop
cmp
mov
sub
jae
and
sub
or
jle
sub
gs
fdivs
shrb
rorb
add
mov
cwtl
sbb
addr16
dec
or
stos
cld
jne
sbb
mov
xchg
dec
shll
or
push
mov
repz
sbb
sub
int3
divb
std
repz
pusha
xchg
and
push
das
lock
mov
jb
mov
into
addr16
mov
inc
out
fnstcw
sbb
fstp
inc
test
cmp
adc
stc
mov
into
pop
xor
cmp
loop
leave
popf
add
ds
jmp
imul
xlat
sbb
sbb
add
adc
mov
cmp
cmp
sub
dec
insb
push
iret
push
mov
fsts
sahf
pop
xor
dec
fwait
lods
mov
push
push
mov
xchg
dec
je
pop
shlb
xchg
pop
out
add
pop
mov
arpl
mov
inc
cli
idiv
mov
pop
push
fcomip
inc
mov
inc
add
out
mov
pop
pop
adc
xorb
sub
mov
dec
xchg
mov
fs
popf
xlat
leave
cmp
arpl
jecxz
adc
lods
das
mov
xchg
ror
loopne
dec
inc
movsb
add
idiv
xor
out
jmp
js
cli
idivb
hlt
lods
and
mov
out
lret
cwtl
daa
xchg
or
cmpl
mov
lds
je
jo
xor
adc
pop
cmpsb
xchg
push
ret
mov
mov
jl
mov
inc
dec
fdivl
jge
xor
sub
mov
push
push
jmp
sbb
jmp
mov
stc
and
ds
cmp
and
xor
mov
pop
jp
cwtl
addr16
nop
push
sub
sub
loope
popa
mov
mov
or
inc
adc
pop
xor
loope
dec
lea
insl
sahf
mov
int3
lcall
je
or
insb
xchg
sbb
ds
sbb
and
mov
nop
sbb
adc
or
mov
daa
fisttps
out
or
repnz
movsb
mov
inc
pop
add
and
cmp
loopne
sub
jb
dec
push
cltd
mov
jns
cli
or
fsubrl
jae
call
outsl
xor
xchg
ss
jo
push
std
mov
mov
pop
cwtl
loop
xchg
dec
data16
shll
std
aas
test
sbb
adcb
dec
or
testl
testl
mov
xor
dec
sti
sub
fs
adc
sbb
out
loop
cs
jmp
sub
fistpll
dec
push
dec
push
sub
je
or
mov
arpl
push
mov
adc
mov
mov
out
push
jp
loop
rcll
das
cwtl
les
push
sub
fidivs
or
gs
fildl
jmp
cmp
call
out
dec
inc
or
mov
into
test
pusha
hlt
jle
outsb
and
lods
test
insb
add
ja
or
xchg
shlb
out
or
add
in
sbb
or
flds
fcompl
fcomps
mov
sti
imul
cmp
jmp
dec
lock
xchg
jno
pop
sti
sahf
je
cmpl
dec
xorb
in
pop
push
std
sub
cmp
pusha
jl
cmp
sbb
in
sbb
inc
loope
mov
movsb
fildl
or
add
rorl
sbb
pop
mov
xchg
dec
pop
dec
mov
and
movsb
mov
mov
inc
movsl
push
popa
aas
sahf
call
outsl
aaa
jecxz
jo
sub
movl
xor
lods
pop
push
xchg
aas
fdivs
push
scas
outsb
pop
adc
mov
mov
inc
push
lock
mov
mov
pop
push
cld
mov
out
and
sub
sarb
fldt
into
ficoms
sti
pop
and
lds
sub
mov
int3
scas
push
cwtl
mov
mov
dec
int
out
cli
sbb
leave
divl
inc
bound
cltd
addb
push
mov
sub
jb
lock
and
ret
pushf
mov
ja
std
es
dec
stc
pop
test
adc
mov
mov
mov
push
out
mov
rcr
ljmp
jbe
push
popf
dec
cmp
insl
test
cmpsb
movsl
xchg
into
cli
and
mov
push
lods
adc
movsl
lods
cmp
and
mov
or
cmp
sub
push
push
fdivl
shlb
and
andb
aas
cmp
inc
fs
mov
lahf
into
or
adc
push
or
shrb
pushf
mov
cmp
orl
psubusb
jle
inc
mov
cmp
call
pop
mov
pop
jecxz
mov
ret
cmp
adc
push
ds
mov
outsl
loop
jecxz
int
pop
lods
lods
mov
jmp
js
je
insb
or
nop
jp
xor
out
push
rcrb
adc
or
std
ror
jecxz
xadd
pop
outsl
pop
dec
push
mov
rol
aad
into
ficoms
push
xor
in
or
adc
xchg
sub
jnp
faddl
daa
xor
stos
sub
xchg
jg
xor
inc
sbb
mov
and
mov
gs
das
sub
mov
inc
pop
or
int3
lret
xlat
fsubrs
sub
test
cmc
push
pop
sub
dec
jb
fcompl
orb
and
pop
inc
repz
sbb
inc
test
sub
rorl
xchg
lock
jns
mov
xchg
roll
inc
gs
icebp
mov
pop
lds
xchg
xchg
mov
sbb
sbb
lret
fnstenv
dec
into
jnp
inc
out
xor
pop
incl
mov
fcomps
inc
jmp
dec
mov
push
mov
pop
inc
fldl
ja
mov
orl
daa
sub
mov
lods
mov
push
mov
call
mov
pop
repz
fdivr
in
push
in
cmp
lods
pop
and
xchg
push
jl
mov
imul
jb
mov
adc
insl
add
outsl
sub
xchg
imul
insl
pop
mov
mov
xchg
mov
or
loop
jecxz
std
or
jb
popf
es
sub
imul
sarl
daa
xor
call
int3
mov
push
mov
sbb
sub
pusha
popf
icebp
rclb
insb
xor
bound
ret
push
jle
or
ljmp
das
sbb
jns
or
and
movsb
roll
movsl
mov
hlt
mov
jne
mov
scas
gs
dec
mov
stc
cmc
insb
notb
jno
ja
push
adc
cmpsl
sbb
mov
xor
xor
mov
and
pop
cmc
xlat
add
adc
sarl
jmp
mov
push
pop
dec
pcmpeqb
repnz
push
jnp
inc
aaa
xor
lret
jb
lcall
jnp
xchg
fwait
lcall
imul
les
pushl
shll
adc
mov
es
mov
loope
dec
push
jbe
sahf
fdivs
insl
xchg
push
dec
sbb
cld
mov
mov
cltd
pop
ljmp
arpl
cmp
xor
dec
cmp
ret
jg
mov
movsb
aaa
stos
push
fistl
jne
imul
stos
shll
dec
fstp
or
pop
loope
addr16
out
inc
dec
daa
movsl
sub
xor
add
movsl
dec
sbb
pop
ss
fstp
sub
cmpsb
sub
adcl
mov
lea
pop
icebp
enter
dec
or
je
xchg
jmp
ficoms
out
cmp
popa
adc
and
nop
lds
outsl
inc
sub
pop
xchg
jno
pop
push
idivl
testb
inc
aaa
xor
push
mov
arpl
testl
push
fisttpll
fs
fdivrl
fs
push
pusha
mov
sarb
sti
mov
xchg
movsb
push
push
push
popa
dec
mov
and
mov
and
push
addl
sbb
push
scas
push
nop
lods
mov
idivb
jmp
ljmp
ss
add
test
ss
fmulp
xor
pop
add
repz
dec
jle
adc
ljmp
cld
aas
scas
pushf
add
clc
xor
xlat
add
testl
sub
xchg
xchg
sbb
mov
addr16
ds
clc
lea
enter
test
cmc
inc
gs
cmp
cmp
mov
dec
in
adc
dec
adc
and
cmpsb
lock
sarl
sub
fnstsw
mov
xor
or
xchg
mov
lahf
shl
and
test
sub
pop
jns
or
fsubl
test
nop
xlat
imul
inc
pushf
leave
push
or
insb
pop
out
or
xchg
xchg
xor
es
jle
cltd
mov
or
in
ds
cmp
jns
inc
cmpsb
or
add
lcall
es
sub
loop
xchg
xor
jmp
add
mov
daa
mov
xchg
int
int3
push
insb
mov
in
mov
or
mov
stos
jmp
xchg
nop
jp
in
lret
fwait
mov
push
shr
sti
add
mov
cltd
mov
in
push
mov
mov
outsb
dec
mov
aaa
rcll
fcoms
inc
jmp
dec
dec
sub
pop
jg
xchg
int3
aad
fsubl
scas
sbb
fistpl
cmc
popa
loopne
xor
mov
sbb
or
loopne
xor
inc
lret
roll
cmp
ret
cmp
fdivs
pop
add
test
inc
jecxz
jecxz
cld
push
cmp
negb
push
dec
cli
fidivrl
mov
bound
fwait
pop
push
icebp
inc
xchg
push
div
insl
mov
repnz
mov
inc
xchg
outsl
cmp
imul
mov
ret
dec
pop
outsl
or
jmp
sbb
sub
mov
pop
xchg
out
mov
mov
loope
mov
fbld
mov
rcrl
movsb
fsubrl
test
je
and
push
icebp
sbb
inc
push
dec
jmp
sbb
xchg
pop
fisttpll
pop
rep
dec
push
mov
cmpsl
dec
xchg
xor
test
je
dec
data16
xchg
cmpsl
sub
cmpb
insl
fs
fstpt
jnp
dec
mov
cmp
and
lret
inc
scas
addr16
push
adc
and
dec
inc
xor
jne
lea
or
mull
pop
push
pop
test
jno
cmp
bound
fdivl
xor
test
and
scas
nop
mov
aam
cmp
subb
int
andb
fwait
mov
sub
mov
in
stos
cmp
inc
jg
scas
xchg
in
cwtl
xchg
leave
out
lret
and
fiadds
push
scas
and
mov
ja
repz
repz
mov
movsb
or
cmp
pop
subb
add
fcomps
insb
cmpsb
shll
in
arpl
mov
sub
or
icebp
dec
push
mov
insl
mov
lcall
xor
inc
sbb
cli
leave
lods
std
inc
cmc
cmp
mov
mov
pop
das
js
loope
cli
add
hlt
push
adc
sbb
mov
jecxz
sbb
movhps
jo
push
fnstsw
in
lahf
sbb
mov
cmp
orl
and
in
push
push
ljmp
inc
add
bound
xchg
xor
call
and
push
mov
and
int
mov
mov
xchg
mov
mov
mov
jmp
inc
sti
pop
hlt
sbb
cmp
dec
leave
je
mov
cmp
out
xor
sbb
sub
or
outsl
stc
jns
push
ds
or
mov
fiadds
inc
popa
mov
xor
imul
scas
cmpsb
fdivrp
in
sbbl
aaa
sbb
xor
mov
jmp
adc
loope
lds
out
cld
in
fwait
gs
sub
sbb
pop
and
push
dec
fildl
test
add
sahf
or
mov
scas
lds
cltd
mov
imul
xchg
sarb
sahf
pop
out
or
mov
and
dec
xchg
int3
inc
sub
aad
int
js
sbb
mov
dec
sub
dec
mov
inc
cmc
inc
icebp
stos
xchg
aaa
xor
imul
sbb
push
dec
and
loopne
sub
mov
mov
jge
js
shlb
push
inc
sub
sar
sarl
leave
arpl
pop
xchg
xor
xor
and
in
inc
pushf
rclb
dec
sub
adcl
ret
xor
mov
shr
loop
push
fs
leave
icebp
adc
les
and
and
mov
inc
xchg
mov
jo
push
sub
sbb
push
adc
pop
out
outsb
pop
cmp
out
loope
inc
icebp
cwtl
fbstp
push
pop
adc
repz
aad
pop
imul
into
stos
xchg
push
jns
rclb
pop
jmp
sahf
test
jno
push
adc
in
test
ficoml
incb
inc
xor
jl
in
sahf
jno
jle
inc
pop
test
lods
push
ret
sub
loopne
jno
iret
sbb
das
jg
mov
ret
enter
in
or
xchg
and
fs
loop
or
cwtl
jmp
mov
pop
and
cmpsl
sub
adc
xchg
pusha
fstpt
sti
and
std
in
cmp
adc
aaa
aaa
mov
dec
dec
xor
xchg
pop
push
lock
sub
lret
pop
dec
insl
pop
add
inc
cmpsl
insb
int3
ljmp
out
dec
in
cmpsb
aas
cmp
sub
jbe
je
call
call
fmull
jns
mov
dec
adc
jg
pop
cmp
jo
and
jae
or
adc
push
pop
test
mov
xchg
add
xchg
ud2
movsl
aam
lock
pushf
insl
pop
cmp
mov
inc
mulb
or
pop
mov
xlat
cmpsl
lock
or
cmp
pop
cmpsb
scas
xchg
push
lret
jl
aad
lret
xchg
pop
cmp
int
pop
adc
call
jecxz
fs
xor
enter
jno
xchg
loopne
lret
lcall
aaa
mov
or
loop
mov
or
scas
je
fidivl
dec
push
out
dec
sub
loop
mov
sbb
inc
adc
test
jl
iret
add
jb
loopne
add
add
notb
ret
stc
mov
dec
lret
pop
out
popa
mov
dec
xor
and
stos
jecxz
inc
jecxz
mov
sub
in
movsb
repnz
xor
jle
sbb
pop
pop
jns
or
mov
gs
ljmp
test
push
inc
lds
fcmovnu
mov
fisubl
cmpb
je
adc
mov
scas
hlt
ss
mov
jnp
int3
cmp
mov
test
imul
xchg
rcll
iret
jne
lock
sub
ja
sahf
in
jecxz
addr16
push
or
movsb
icebp
decl
inc
jae
push
add
jle
cmp
mov
adc
aam
out
ror
rol
and
cmp
xchg
movl
inc
scas
cli
xchg
inc
and
mov
lahf
imul
test
sbb
xchg
sbb
inc
xchg
popa
pushf
pop
adc
cmp
sbb
test
inc
out
ds
adc
cmpb
hlt
cmc
dec
inc
pusha
sub
out
repnz
push
add
dec
mov
xor
mov
mov
rol
cltd
inc
int
lock
mov
mov
mov
in
lea
into
outsb
aas
das
cmp
adc
push
dec
xorl
fdivrl
xchg
gs
xchg
sarl
pushf
xor
push
sub
outsb
adcb
pop
fistpll
xchg
jbe
lds
xor
mov
dec
std
sbb
push
xchg
and
jge
cwtl
jle
in
stos
int3
hlt
call
mov
and
pushf
popf
negb
popa
in
xchg
fcoms
mov
stc
dec
pop
and
jo
scas
mov
and
fidivs
sub
dec
and
incb
mov
testl
aam
jecxz
int3
lret
jne
aaa
clc
mov
sbb
dec
mov
fcoml
sbb
repnz
dec
sti
jne
inc
and
stc
adc
ror
adc
repz
mov
in
and
jae
addr16
xchg
ficoms
loopne
test
cmp
inc
sbbl
call
xor
sub
push
sub
sahf
test
fstpt
lret
icebp
imul
fwait
lock
aam
inc
dec
or
testb
jecxz
nop
scas
pop
stos
shlb
imul
jp
adcl
cmc
or
into
les
call
mov
mov
stos
xchg
fs
repz
in
nop
mov
sti
sbb
aas
and
dec
push
mov
into
dec
adc
movsl
mov
aaa
pusha
xchg
or
adc
jbe
aaa
adc
jo
and
popf
enter
sbb
jne
insb
push
add
inc
jbe
xchg
mov
push
dec
push
movsb
push
adc
das
fildl
xor
fidivrs
and
in
mov
sbb
sahf
ja
fwait
jle
sbbb
cmpb
jns
in
mov
js
cmp
fistpll
aam
test
sub
clc
lahf
add
jge
les
ds
adc
or
repz
in
mov
dec
sbb
cmp
jmp
cmovb
aas
jb
push
fnstsw
and
adc
outsb
fwait
lahf
adc
adc
mov
mov
lret
ficomps
adc
negl
mov
popa
push
xchg
subl
dec
jo
scas
jae
test
mov
push
pop
out
out
push
add
insl
mov
bswap
lret
and
dec
sbb
insl
dec
stc
lds
gs
xchg
outsb
les
out
xor
push
rcrl
in
jl
mov
cld
popa
in
sub
mov
std
sti
sarb
mov
mov
movsb
shll
fsubrs
add
outsl
je
imul
sub
add
loopne
insl
and
mov
xchg
rorl
fcom
dec
inc
cs
das
xor
loope
xchg
in
xchg
jecxz
mov
andl
xor
mov
out
jl
pop
cmpb
std
fcoml
fisttpl
xor
push
faddp
add
pop
or
mov
push
push
push
sarl
dec
inc
dec
fdivrl
popa
mov
sbb
and
sub
fcoml
in
mov
add
aad
gs
cld
mov
sbb
lcall
loop
jge
sbb
repz
jns
adcb
pop
push
stc
mov
xlat
xchg
push
xchg
push
mov
mov
repnz
jno
idivb
rorl
das
lods
fldcw
pop
ss
xor
movsl
pop
repz
loope
push
mov
test
lods
leave
xorl
and
addr16
jecxz
push
push
lahf
aaa
stos
mov
sub
cmp
ljmp
enter
sti
xor
lret
mov
pusha
in
ret
mov
push
pop
lcall
jnp
fnstenv
pop
lods
lock
xchg
add
out
push
or
leave
pop
pushf
pop
sbb
pop
rcrb
notb
orb
clc
push
push
gs
sub
iret
aas
out
data16
mov
add
adc
icebp
dec
mov
cmp
xor
and
stc
add
adc
push
fidivrs
divb
nop
scas
push
mov
bound
inc
jne
pop
mov
dec
inc
clc
cmp
je
and
sbb
or
out
push
mov
pop
cmpsl
xor
lods
filds
ds
xchg
push
pop
shlb
das
je
repz
inc
cwtl
loope
fisubs
push
jns
rcll
mov
adc
mov
int3
pushf
incl
fcmovu
and
aad
sub
xchg
aas
mov
repnz
mov
repnz
and
sbb
arpl
and
repz
aaa
push
mov
daa
inc
inc
jmp
pop
gs
push
arpl
cmp
iret
push
in
dec
xchg
test
les
mov
jno
out
cs
sub
stc
and
sbb
mov
sbb
dec
les
xor
xchg
dec
iret
bound
imul
xchg
push
jnp
addr16
cwtl
out
popa
adc
cmpsl
or
fwait
xorl
inc
std
sub
int
aad
mov
std
pop
lods
lret
loopne
stos
int3
and
lret
pop
xlat
sbb
popa
and
dec
adc
push
mov
das
in
mov
ret
lea
xlat
sub
mov
pop
insb
pusha
into
sahf
loop
push
lods
cld
jle
pop
sbb
fnstsw
jne
icebp
mov
fnstsw
adc
pop
mov
test
xor
add
mov
jne
mov
mov
fs
ja
sar
and
xor
and
xchg
cmp
hlt
xchg
lods
sub
xchg
dec
pop
lods
inc
mov
movsl
pop
and
xor
jb
or
lods
fwait
mov
adc
or
mov
in
dec
cmp
std
rcr
adc
xchg
and
xor
out
rorl
mov
insb
test
test
data16
adc
dec
add
xchg
cmp
stos
fstps
sub
pop
jno
push
mov
aas
in
ret
repnz
cmp
and
nop
xor
cmp
fistps
and
sahf
out
cld
mov
xor
xchg
scas
out
out
sbb
mov
mov
inc
loopne
enter
push
adc
xchg
jle
mov
fidivl
shrl
adc
add
jle
lods
mov
inc
negl
mov
mov
or
jnp
adc
jo
bsr
ficoml
pop
lea
jo
int3
xchg
push
mov
fildll
cmc
ret
mov
sbb
scas
out
fcoml
fiadds
rclb
jg
shll
dec
jmp
call
mov
out
mov
lretw
add
lcall
out
fwait
and
mov
push
inc
ret
or
mov
leave
rcrb
jle
pop
int3
push
cmp
and
xchg
lods
ret
add
xor
pop
adc
lahf
shll
mov
pop
xor
xor
cmp
test
rorl
inc
lods
jle
pop
mov
out
inc
xor
or
dec
lahf
in
into
adcl
movsl
lea
adc
xor
mov
pop
pop
inc
fcom
jo
push
lret
aad
push
jae
iret
or
inc
inc
negb
mov
mov
dec
fdivs
mov
add
or
mov
int
jg
pop
mov
adc
test
add
lret
jmp
repz
jp
push
jg
out
fwait
xlat
sbb
in
in
cmp
insl
push
rolb
loope
cmp
jmp
adc
insl
out
sub
or
stos
mov
dec
shlb
mov
cmp
jmp
jmp
push
call
mov
fimuls
jmp
push
add
and
cmp
push
or
insb
imul
pop
mov
mov
int
xor
pop
push
mov
mov
jg
jle
add
xor
jno
ret
sbb
testb
mov
jl
xor
and
cltd
mov
hlt
orb
cmp
test
stos
xchg
insb
jae
ret
xor
lock
js
and
push
rorb
xor
and
inc
lock
cmp
sti
adc
jne
adc
mov
lret
nop
cld
ljmp
jo
jle
cltd
xchg
out
and
sub
insl
lods
lods
loop
lret
ror
cmpsl
imull
loop
sbb
xor
mov
mov
pop
pop
mov
adc
mov
lret
gs
cmp
je
mov
into
movsl
mov
test
xor
inc
dec
jg
cmpsb
out
sbb
jbe
pop
roll
sbb
jp
push
mov
mov
mov
jbe
loop
or
cmp
xchg
mov
bound
pusha
mov
push
call
push
jmp
jns
adc
ljmp
sub
inc
sbb
cbtw
call
push
popf
mov
inc
lret
adc
sub
les
and
aas
dec
mov
mov
and
xchg
aas
shrb
sub
mov
js
push
pop
repz
imul
xor
adcb
adc
xchg
inc
pop
inc
dec
and
mov
daa
dec
mov
adc
inc
inc
or
sbb
mov
ds
addr16
push
sbb
adc
stc
xor
sarb
add
mov
in
push
rclb
out
dec
fstpt
dec
popa
dec
fdivs
jbe
jnp
lods
les
data16
inc
jle
rol
in
jp
call
std
jl
clc
popf
lods
and
icebp
fnstenv
push
jnp
shrl
push
aaa
push
sbb
cli
adc
add
mov
js
push
push
movsb
cld
jo
jb
clc
sub
inc
jns
cmpsl
adc
pop
ds
insb
pop
fidivl
inc
sbb
leave
dec
std
in
loope
pop
pop
cld
mov
icebp
movl
jmp
fildll
mov
imul
into
mov
cmpsb
adc
dec
out
or
psubd
mov
and
add
sub
adc
inc
sbb
mov
iret
mov
xchg
das
dec
rcrb
lds
shlb
lar
gs
xor
sti
mov
xchg
ljmp
mov
mov
sub
xor
sar
lods
fbstp
movsb
les
pushf
inc
outsb
clc
jle
cmpb
sbb
cmp
hlt
lahf
jl
jo
fsubrl
aad
je
movl
lods
outsb
cmp
xor
xor
push
dec
push
sub
add
enter
dec
movsl
fmull
push
dec
pusha
push
stos
xchg
mov
cmp
add
pop
inc
push
into
test
dec
scas
mov
xchg
popa
add
mov
std
xor
mov
inc
xlat
mulb
nop
inc
add
push
pop
push
out
aaa
sub
dec
cmpsl
lret
xor
mov
jne
push
lahf
out
pop
xor
sbb
in
cmc
or
sbb
xchg
in
xchg
and
pop
xchg
pushf
xor
je
mov
jmp
and
xchg
mov
or
inc
adc
xchg
je
inc
xchg
fisttps
push
mov
jne
rcll
push
pop
rcl
inc
rorl
test
push
outsb
bound
inc
lcall
loopne
and
mov
xchg
mov
sahf
out
sbb
jp
movq
xchg
inc
push
adc
aam
popa
dec
fnsave
or
ret
jnp
adc
cmovns
inc
cmc
mov
and
fldl
pop
je
imul
aaa
push
and
repnz
jo,pt
decb
hlt
je
lcall
mov
std
push
or
cld
add
cld
leave
cli
je
lods
jecxz
push
mov
cwtl
dec
cmp
mov
jecxz
sbb
repnz
and
rclb
call
inc
push
push
daa
xchg
in
test
push
fnstsw
hlt
js
popa
inc
sbb
cmp
push
enter
pop
mov
adc
adc
fstp
into
push
jno
mov
pop
inc
adc
pushw
mov
mov
imul
je
loopne
inc
cmp
andl
mov
pop
in
or
mov
fcomi
xor
xchg
add
in
push
insl
leave
sahf
adc
or
testb
mov
cmpsb
cld
add
lods
xchg
testb
cmp
test
mov
in
jo
pop
jbe
fldcw
mov
add
into
adc
pushf
xor
mov
andl
scas
cmp
addr16
rolb
inc
xchg
stos
push
mov
stos
adc
sub
lock
dec
outsl
lret
addl
mov
movsb
jg
je
push
test
lock
adc
inc
xor
repz
movsl
push
sub
cltd
xlat
sbb
pop
fisubrl
inc
or
push
ds
jecxz
mov
fnstsw
rol
jbe
push
mov
xchg
sahf
jmp
in
jp
aaa
xchg
ljmp
cmpsb
push
mov
xchg
leave
jno
sbb
nop
mov
adc
outsb
pop
push
jl
mov
xor
dec
mov
push
js
lods
jo
add
mov
outsb
imul
lret
movsl
popa
decl
push
sub
xchg
mov
lcall
fsubs
sti
jne
xlat
movsl
jle
outsl
cmp
loop
testl
shrl
mov
movsl
out
adc
roll
pop
in
mov
sar
adc
stos
xchg
jle
bound
jecxz
negb
jnp
xor
out
fdivl
inc
into
inc
adc
inc
dec
xchg
in
and
idivb
xchg
push
cld
out
pushf
fimuls
or
lods
mov
or
cwtl
sub
pop
jb
mov
pop
cmp
rorb
scas
lret
outsl
fs
hlt
clc
xor
dec
test
ret
mov
or
add
dec
sub
inc
in
jmp
xchg
lea
and
dec
out
lock
loopne
cmp
xchg
mov
roll
fbstp
add
pop
pop
xor
dec
and
dec
out
out
fwait
inc
xor
jae
ret
shrl
mov
sbb
pusha
xchg
test
dec
fbstp
push
fstps
jo
daa
mov
fistps
arpl
fidivrl
jbe
xor
popf
jo
mov
jno
or
inc
js
gs
xor
pop
mov
sbb
adc
fists
sbb
sbb
outsl
in
jne
jge
ja
mov
push
in
and
adc
lret
xchg
subl
sbb
fadd
mov
loop
sbb
sarb
subb
test
sahf
jmp
sahf
adc
jmp
addb
cld
fstl
mov
data16
out
jb
dec
sbb
add
mov
mov
mov
lds
fsubs
mov
jne
leave
jmp
mov
jl
jne
inc
and
out
mov
jns
daa
lods
sub
in
pop
push
jno
mov
jae
das
icebp
out
fisttpl
inc
xchg
push
dec
ficoml
inc
enter
jl
jb
mov
adc
cmc
fcmovnb
push
shrl
dec
xorb
aam
bound
pop
fwait
orl
jbe
dec
out
jg
add
lock
in
stc
inc
mov
imul
push
mov
push
aam
mov
sbb
movsb
aas
push
jo
sub
lock
into
lds
push
out
sbb
call
sub
ss
jl
stos
fsubs
int3
adc
pop
or
bound
data16
inc
xchg
stos
sbb
xchg
cld
cmc
jg
cmp
sbb
sub
and
lahf
lret
lds
filds
jnp
clc
lahf
out
test
cltd
subb
filds
pop
pop
insl
lods
adc
sahf
aas
inc
subl
scas
fwait
push
or
popf
mov
lret
enter
loop
inc
sbb
push
int
mov
test
adc
dec
adc
mov
les
xchg
xchg
idivl
adc
cmpsb
mov
imul
fldt
inc
mov
cltd
pushf
pusha
and
dec
dec
mov
and
jge
jl
rcrl
in
lret
les
aas
pop
dec
xchg
ret
mov
sbb
out
lds
mov
ja
mov
mov
xor
mov
xchg
push
sti
inc
pop
cltd
lret
xchg
mov
xchg
or
jge
insb
outsl
aaa
mov
sahf
xchg
inc
mov
cmpsl
in
xor
outsl
lcall
outsl
popf
cmpsl
das
cld
sub
call
addr16
repz
aam
xchg
pushf
cmp
clc
xor
fidivl
ljmp
sahf
jg
pop
adc
outsl
aas
or
sub
jge
add
cmpsl
xchg
popa
and
fisttpll
test
or
push
shlb
and
push
jbe
fildll
push
in
addb
lods
pop
cli
inc
mov
dec
ror
inc
js
cmpl
popf
sti
sbb
fnstenv
dec
xchg
cmp
fcom
cmc
leave
pop
mov
or
add
sbb
inc
rolb
dec
les
mov
and
and
int
mov
les
mov
xchg
pop
inc
mov
repz
add
stos
and
sbb
mov
arpl
lds
inc
jmp
pop
shrl
outsb
lock
ss
jge
dec
fimull
mov
pop
fnsave
push
mov
rcr
pop
cltd
add
movsb
inc
push
repnz
lods
not
icebp
ret
pop
ret
icebp
popa
and
lods
movsb
inc
jns
cmp
fists
xchg
pop
xor
sub
xchg
addl
cltd
mov
dec
xchg
add
clc
aam
xor
sub
cmp
add
into
and
cld
cmpsl
adc
pop
and
rol
jmp
stos
adc
adc
ret
inc
sub
jns
mov
lret
imul
push
cmp
jg
adc
test
pop
lret
sub
sub
mov
into
and
cmpsb
adc
sbb
ja
scas
pop
in
inc
cs
je
push
pop
stc
add
shll
cmc
jns
push
insb
pop
jns
or
divl
adc
into
pop
adc
dec
test
mov
cmp
dec
dec
cs
lea
xor
decb
lea
dec
arpl
subl
xchg
xor
and
je
jae
mov
pop
sub
push
ljmp
insl
inc
das
movsl
stc
mov
sbb
xor
jb
mov
ret
es
or
jbe
cltd
dec
daa
mov
inc
sbb
mov
in
mov
xchg
add
adc
ja
mov
push
sbb
imul
mov
cmpsl
cmp
cmp
or
push
mov
sbb
or
xor
push
jb
cmp
cli
out
sahf
jmp
in
in
sbb
ljmp
lcall
push
loope
mov
xchg
jbe
cmpsb
or
test
cmp
pop
sbb
insl
mov
arpl
fstl
out
inc
inc
sub
clc
cli
dec
divb
xlat
movsb
mov
pop
mov
in
sub
outsl
pop
into
out
inc
test
xchg
push
loopne
addr16
dec
inc
pop
sub
sub
sub
in
cmp
sbb
pop
dec
int
clc
dec
in
inc
inc
add
in
lcall
jb
mov
mov
insb
jbe
push
aad
shll
enter
mov
and
outsl
pop
loop
mov
les
imul
jnp
loop
xor
push
jbe
cmp
mov
xchg
lock
jecxz
out
ficoms
gs
cld
dec
imul
push
pop
mov
rcl
in
enter
mov
imul
daa
jecxz
cltd
or
mov
jno
ret
sbb
push
shlb
xchg
pop
adc
push
jecxz
mov
jp
mov
sbb
jae
xchg
push
sbb
mov
dec
stos
stc
iret
lret
sub
out
mov
stc
xor
and
cmp
mov
lahf
xchg
jne
mov
lahf
mov
push
add
fwait
mov
push
fiadds
push
cmp
mov
inc
sbb
fs
cmpsb
and
loope
or
pop
push
data16
and
cmpsb
lods
into
pop
fdivp
ficomps
sbb
jns
dec
or
xor
jge
push
les
insb
shrb
ss
mov
push
mov
sub
inc
pushl
mov
imul
mov
adcb
jns
xchg
jnp
or
push
das
fnstcw
dec
mov
cmpb
jecxz
xor
roll
loopne
shll
gs
dec
sbb
or
cmpb
lods
xorl
popf
test
inc
mov
cmc
fistps
fldenv
mov
outsb
xchg
jge
sbb
pop
mov
fbstp
jle
movsl
int
cmc
lcall
outsl
daa
stos
adc
mov
ds
adc
psubw
adc
xchg
inc
inc
mov
xchg
push
sbb
add
pop
stos
stos
repnz
mov
push
sbb
gs
pop
stos
in
mov
xor
mov
icebp
in
mov
cmp
lcall
sbbl
lret
xlat
add
mov
bound
rclb
xchg
add
dec
ss
jno
push
out
sbb
insb
xor
mov
lahf
pop
test
lret
lret
mov
jp
sub
das
testl
mov
jbe
inc
add
jbe
mov
dec
scas
sub
cmp
loope
jae
ljmp
in
popf
jno
add
dec
fldcw
mov
cmp
sahf
cmp
fadds
add
pushf
in
and
xchg
popa
icebp
mov
xchg
fdivrs
inc
xchg
nop
and
sbb
or
pop
divb
push
add
sbb
arpl
dec
cmp
or
orl
sbb
jle
dec
repz
lods
mov
pop
xor
push
inc
stos
aas
add
pop
mov
push
jns
mov
sub
push
xor
es
add
dec
sub
addr16
into
sbb
adc
push
pop
rclb
jp
pop
fwait
push
fwait
add
lret
pop
loopne
dec
in
fwait
outsl
cmpl
repz
xchg
mov
sub
mov
addr16
lds
cli
and
push
and
jne
scas
jb
inc
and
cltd
mov
or
and
ds
movsb
mov
or
xor
es
pop
pop
adc
ja
scas
pop
mov
loope
xchg
les
stos
adc
pop
cli
and
cld
jbe
orl
fmull
scas
mov
inc
adc
test
pop
std
push
aas
jl
stos
sbb
cmpsb
std
adc
pop
mov
cmp
popf
test
xchg
popa
inc
ret
jge
cmpsb
enter
lds
test
cld
dec
jns
fiadds
sub
int3
daa
loop
adc
out
mov
loopne
xor
pushf
je
inc
mov
in
repz
cmp
pop
rolb
addr16
setg
test
inc
fs
inc
jmp
outsb
shrl
cmpsb
xchg
insb
cmpsl
add
xor
dec
or
mov
xchg
mov
loopne
sbb
inc
add
aas
in
lret
sbb
dec
fcompl
fstps
push
or
in
into
daa
cli
xchg
fidivl
mov
ret
add
adc
pop
stos
arpl
cld
ds
mov
aad
ja
mov
xchg
xchg
and
mov
or
lods
fptan
mov
loope
outsl
sub
les
push
jno
xchg
sub
push
scas
imul
test
out
ret
add
pop
loope
subl
push
jmp
mov
popa
mov
repz
jge
push
in
jo
jmp
or
and
mov
add
pop
xchg
cmp
sbb
into
mov
pop
fcoml
repz
lret
xor
in
sub
adc
push
or
out
xor
lods
or
notl
push
out
pop
inc
movsl
insl
lods
sti
mov
jno
loopne
push
pusha
mull
stc
xor
jp
cmpsb
inc
cld
gs
lods
xchg
inc
in
or
pusha
or
ret
movhlps
outsl
sarb
xchg
mov
cmc
cmpsb
int
cmp
lahf
insl
lcall
dec
cmp
pushf
stc
das
lock
add
andl
movsl
sbb
int3
xor
sahf
xchg
xlat
xchg
out
mov
pop
mov
jne
mov
fidivs
sub
add
icebp
out
bound
inc
fstl
testb
fisttps
cmp
mov
sahf
dec
pop
cs
mov
imul
insb
fistl
pop
jecxz
jnp
ret
adc
out
push
and
add
mov
mov
fsts
cmp
push
movsb
mov
cmp
push
cmp
xchg
outsl
adc
push
imul
mov
rol
in
sti
cltd
pop
cmp
rcl
pop
push
xlat
jo
sub
mov
add
addr16
js
jl
pop
rcl
fs
outsb
inc
fldt
pop
lahf
push
xchg
mov
sub
out
ret
in
std
inc
add
jp
xlat
js
add
mov
out
imul
sahf
xchg
mov
decb
xor
mov
js
xorl
pop
loop
fnstenv
inc
jns
ds
adc
mov
movsl
data16
mov
loop
in
mov
sbbl
clc
jb
ja
cmp
les
iret
subb
or
mov
int3
pop
jno
sbb
or
popa
mov
push
mov
inc
andb
bound
pop
cmp
adc
in
into
stos
xor
cmc
xor
push
sahf
popa
jl
dec
xchg
jne
dec
pop
inc
repnz
add
mov
into
shrb
in
jecxz
hlt
or
mov
aas
inc
lock
ljmp
xor
sub
inc
pop
pop
fcomps
orb
imul
fwait
insb
pop
push
push
xchg
arpl
mov
jno
mov
mov
stos
lcall
jp
mov
lea
xchg
jge
lahf
rol
pop
iret
cltd
dec
mov
jo
mov
mov
sbb
mov
lcall
loopne
pushf
lds
xchg
lods
outsb
mov
push
inc
jns
test
xor
xor
enter
cmpsb
ret
ficompl
ds
stos
fbld
mov
mov
mov
mov
mov
dec
pop
aaa
neg
sbb
add
fwait
add
fs
iret
insl
out
stos
mov
jne
orl
xchg
mov
cmpl
and
mov
pop
loop
cmp
jle
push
jp
or
adc
rolb
pop
pop
xchg
adc
lock
mov
js
sub
jge
lcall
stc
lahf
ss
test
out
enter
mov
cmp
fcomps
insb
mov
mov
pop
add
cmp
dec
mov
call
mov
sub
push
mov
sti
jmp
sub
cmp
std
xchg
xchg
fiadds
push
incl
fdivs
movsl
adc
mov
fidivrl
rorl
push
enter
inc
ret
or
out
mov
jecxz
movsb
sub
into
xchg
ss
sbb
cmp
rol
adc
jbe
iret
ss
arpl
lods
repnz
aam
leave
pusha
lock
push
xchg
and
mov
cltd
mov
push
data16
xchg
nop
in
enter
lock
mov
cli
sub
pop
sahf
cltd
mov
push
xor
jle
mov
mov
xchg
sbb
mov
jmp
out
and
xor
std
xor
jae
js
jne
mov
cmp
mov
mov
mov
mov
jge
or
jnp
xor
xchg
push
cld
fwait
jmp
cld
ds
inc
mov
or
and
jmp
and
int3
jo
rcrl
loop
in
mov
lods
mov
xchg
ds
jns
xor
sbb
aam
rorb
cli
ret
jbe
js
insb
fldenv
dec
mov
repz
shlb
jg
mov
ret
push
or
push
ud2
test
jno
jl,pn
out
test
fnstcw
scas
pop
lock
jmp
mov
ja
inc
lods
cmp
sub
adc
lcall
popa
das
in
unpcklps
in
dec
or
int3
or
pop
inc
xchg
or
loope
mov
mov
lods
push
in
shl
bound
push
into
pop
cwtl
scas
int
inc
jl
adc
fnstenv
or
inc
lds
xchg
rcr
jb
push
fsub
fistpll
xchg
movsb
stos
xorb
mov
or
mov
faddl
sub
fcoms
cmp
adc
mov
and
cmpsl
cmp
int
xchg
scas
or
out
ret
in
sarl
jmp
bound
adc
jne
rolb
mov
clc
insl
stc
icebp
xchg
pop
sub
out
dec
outsb
cmpsb
gs
xor
or
sub
divl
in
sbb
lcall
push
imul
mov
mov
into
cmp
mov
mov
push
lock
jg
repnz
pop
sti
addr16
cmp
dec
dec
and
lock
test
les
shrl
mov
test
loope
movsl
flds
mov
adc
cmp
cli
pop
ret
xchg
ret
xor
mov
lea
out
les
jle
mov
scas
pop
adc
sub
fcompl
mov
lods
inc
out
jne
aas
clc
cmp
sti
mov
cwtl
dec
mov
out
mov
aaa
in
hlt
call
pusha
mov
int
cmpsl
mov
ss
in
mov
leave
or
jle
cltd
sti
fstp
or
push
rcrb
xor
inc
cmpsb
inc
bound
pop
dec
js
sub
xlat
inc
xlat
test
out
mov
popa
stc
or
adc
cli
or
les
out
push
jns
aaa
pop
cltd
stos
jg
test
sbb
and
fisubs
testb
scas
jns
xchg
fsubp
sub
std
hlt
sub
and
cmpl
int
pushf
push
mov
roll
rcrl
jp
xchg
iret
sub
js
js
in
aad
leave
mov
or
adc
push
stos
xor
dec
jno
pop
lods
pop
mov
insb
mov
and
in
mov
xor
aam
call
xlat
jno
into
fwait
iret
push
pop
xor
jg
out
cwtl
lods
adc
mov
sub
int3
out
and
ja
loopne
sbb
in
sub
loope
jle
sub
mov
sbb
dec
fwait
dec
lcall
xchg
push
fmulp
jb
mov
sbbl
call
loop
nop
adc
in
loope
mov
xchg
pop
mov
in
test
lret
and
addb
jb
jne
mov
stc
cmpsb
xchg
outsb
lret
inc
cmp
mov
mov
xor
mov
ret
add
mov
data16
mull
jg
mov
cmp
xchg
jnp
cmp
iret
lock
mov
pop
adc
dec
adc
sbb
imul
dec
jge
sbb
add
outsb
jb
lods
sar
lods
dec
adc
adc
fidivrs
xchg
orb
cmp
les
pop
xor
ret
loope
add
in
xor
xchg
push
mov
mov
orl
imul
inc
outsl
test
call
jb
es
les
inc
pop
xchg
ds
mov
jns
stos
sub
xor
in
add
or
roll
sub
xchg
adc
xlat
mov
and
addr16
jmp
popa
iret
xor
insb
xor
dec
aad
mov
adc
adc
pop
mov
int3
mov
call
and
or
lret
pop
outsl
add
sbb
push
notl
lea
addr16
lret
imul
mov
xor
mov
mov
mov
xor
add
fldcw
pop
imul
inc
sub
sti
xchg
and
mov
dec
dec
lods
dec
out
loop
mov
ror
pop
sub
sbb
test
lret
shrl
xchg
out
adc
xchg
mov
sub
cmpsb
jns
lcall
sub
aam
sbb
aas
into
inc
sub
call
cmp
pminub
push
mov
stos
sahf
lods
or
gs
ret
lret
mov
aaa
xor
inc
sub
mov
xlat
push
aam
cmp
jns
mov
outsb
mov
fsts
outsl
dec
lahf
pusha
pushf
les
ds
out
popa
xchg
jae
push
lods
arpl
or
cmp
pop
hlt
push
jae
inc
cs
fcom
out
inc
mov
adc
pop
adc
ret
inc
aas
sub
out
mov
jbe
sub
jno
xor
mov
lock
cmp
icebp
or
dec
xchg
ret
mov
sub
ret
adc
mov
push
jno
dec
movsb
mov
sbb
std
xchg
cmp
aas
or
outsl
pop
subb
mov
shr
mulb
mov
jg
fs
pushf
cmp
mov
dec
bound
mov
xorl
jb
popa
inc
arpl
or
ret
lods
outsb
negl
shll
jbe
cld
loop
test
std
jecxz
out
push
inc
pop
loope
jmp
pop
loopne
dec
sbb
ret
jae
mov
add
dec
sarl
shlb
add
mov
pop
inc
pop
xor
enter
icebp
insb
popa
cmp
xor
inc
clc
popf
lds
popa
sub
popf
inc
inc
repz
cmp
jne
jno
mov
gs
mov
aam
sbb
cmpsb
aas
mov
mov
jecxz
outsl
jmp
test
jns
adc
dec
pop
testl
scas
and
push
cmpsl
psubusw
rcrl
jae
and
repz
and
mov
mov
or
pop
mov
inc
xchg
fdivrs
xchg
fadd
outsb
add
test
cmp
ret
andl
pop
ja
fimuls
dec
sbb
cmp
mov
add
movsl
add
std
es
push
xor
dec
fwait
mov
fs
and
jecxz
rcrb
out
adc
gs
inc
xor
imul
jl
xor
push
mov
addl
gs
imul
outsl
jge
in
add
xchg
cmc
imul
xchg
hlt
mov
push
in
adc
lods
clc
pop
adc
cltd
push
lcall
mov
pop
dec
clc
decl
cwtl
pop
mov
and
loopne
fwait
mov
mov
sub
jae
push
or
mov
and
mov
and
sub
cmpl
xor
dec
dec
mov
or
fwait
pop
mov
fwait
pop
in
mov
mov
jp
fiadds
rorl
pushw
popa
aad
rep
sbb
out
jge
fstps
push
sub
push
push
push
mov
add
add
add
cwtl
dec
and
mov
call
les
and
test
push
adc
hlt
std
test
sti
dec
cmpsb
cmp
and
imul
inc
adc
jle
adcl
aad
sbb
int
mov
xchg
lret
mov
test
jns
mov
and
jmp
notl
fwait
rcll
fcompl
and
mov
in
pop
ljmp
jge
cli
std
pop
rorl
xor
pop
mov
push
xor
ljmp
add
test
sub
inc
lods
stos
xchg
push
mov
cmp
sub
stos
int
mov
mov
scas
cmp
or
out
cmp
mov
and
nop
xchg
inc
adc
mov
outsb
xorb
in
inc
jnp
mov
fcmovu
adc
fildl
aad
xchg
fs
cli
add
hlt
and
int3
sti
mov
sub
inc
clc
and
xchg
sbb
add
int3
inc
in
dec
xlat
cmpsl
sbb
dec
js
pop
shll
and
rcll
cmp
int
lds
xchg
mov
xchg
insl
bound
out
xor
inc
incl
ja
and
xor
adcl
pop
cltd
jnp
jo
mov
popf
dec
dec
jg
insl
push
cld
loope
bnd
pop
or
push
cmp
add
ret
mov
insl
jge
imul
pushf
sbbb
cmpsb
sbb
or
dec
mov
xchg
dec
sbb
call
bound
jbe
cmc
ja
mov
mov
jecxz
loope
xchg
lods
fdecstp
stc
cmp
loope
cltd
xor
cmc
pop
bound
leave
in
sarl
inc
stos
xor
inc
and
or
sarb
and
xchg
aam
xlat
push
js
and
ret
or
cltd
adc
incb
pop
add
int3
mov
and
orl
scas
imul
aaa
es
dec
pop
ljmp
jl
imul
std
adc
call
pop
rorb
leave
lret
mov
adc
dec
xor
pop
inc
gs
addr16
loopne
loop
data16
xor
cmc
insb
std
xchg
jecxz
or
sbb
mov
cmc
cli
or
ljmp
dec
inc
cltd
jnp
ds
sub
dec
dec
or
xchg
xor
insb
out
shlb
dec
xchg
jecxz
xchg
xor
fs
sti
cmp
lods
popa
pop
mov
repnz
lcall
call
js
imul
mov
push
xchg
dec
fpatan
cmp
faddl
fisubs
xlat
xor
popa
sub
aam
rolb
sbb
call
cmpsl
mov
add
inc
jns
fildll
sbb
cmp
push
fsubrs
pop
or
pop
out
jmp
jg
jae
adc
add
rcr
or
out
aas
add
fnstsw
adc
sbbl
xchg
inc
ja
jge
lret
xor
outsl
stos
in
lock
movsl
iret
add
mov
adc
jmp
nop
mov
fldl
pop
add
mov
pop
cmp
xor
rolb
nop
cmp
jno
push
push
xor
xchg
ljmp
hlt
cwtl
sub
jge
push
fs
test
xor
imul
sub
cmpsl
xor
fdivl
mov
int3
cmp
cld
clc
sbb
pop
sbb
inc
je
and
in
mov
std
push
das
mov
adc
mov
sbb
lcall
outsl
jmp
lret
into
ret
sbb
sahf
mov
out
push
out
push
push
xchg
mov
lods
insb
shl
mov
mov
cmp
push
scas
mov
and
ss
andb
das
push
pop
test
or
rolb
xchg
roll
cmpsb
lock
push
push
xchg
and
inc
mov
adc
mov
and
lds
repz
sub
daa
lock
jl
lods
push
pop
push
push
scas
sbb
nop
and
loop
ja
mov
mov
stc
sarl
es
pushf
jge
mov
mov
repnz
or
mov
adc
fnstcw
jbe
lret
shl
out
xchg
sub
aad
bnd
das
insb
mov
stc
dec
cmp
inc
mov
jle
cwtl
push
mov
ja
stos
das
inc
lret
mov
adc
mov
movsb
test
push
xor
movsl
movsl
aas
out
int
dec
cmpsl
mov
bound
dec
push
mov
rol
iret
add
ljmp
test
sub
test
or
fnstsw
ret
jne
int3
push
mov
mov
jne
sub
iret
mov
popa
rorb
and
movsl
aaa
repnz
sbb
mov
adc
fdivr
negl
mov
rorl
and
call
sbb
xchg
es
aam
sbb
adc
or
lret
out
cmp
xchg
test
shlb
or
fildl
pop
jg
jle
add
mov
rorb
imul
xchg
aas
scas
xchg
sbb
ljmp
sbb
and
fbld
adc
neg
mov
mov
loop
cltd
dec
push
add
mov
jge
ja
mov
sub
dec
es
clc
add
leave
lods
xor
out
mov
xor
dec
shll
pusha
imul
and
add
sub
adc
or
jecxz
roll
fstps
mov
into
daa
jae
xor
pop
xchg
inc
repnz
pop
xlat
jge
cmp
out
jge
mull
cmc
or
mov
rcr
inc
ret
inc
lret
or
cmp
mov
xor
mov
sub
sub
jb
enter
push
ljmp
push
aas
dec
popa
cwtl
jno
pop
notb
push
add
out
mov
add
add
and
nop
fistps
cmp
push
and
mov
jns
in
add
add
xor
mov
mov
enter
jecxz
jns
test
cmp
xchg
sbb
pop
lret
or
xchg
or
cmp
lds
push
mov
jae
test
ficomps
outsb
cmp
cmp
ja,pt
xor
mov
call
push
pop
sbb
jp
cmc
push
scas
les
rcr
bound
aaa
push
fnstsw
lret
add
test
pop
les
lahf
mov
leave
lcall
ret
fcomi
scas
popl
test
and
call
aam
mov
into
cmpsb
mov
and
pop
adc
pushl
add
test
andb
mov
pop
adcb
pop
sub
or
xor
sbb
sahf
gs
test
sbb
fbld
inc
pop
cmpsl
pop
xor
push
mov
jo
aam
in
xchg
pop
cmp
jg
lds
push
clc
cltd
lahf
inc
sub
loop
push
lcall
testb
bound
fs
jg
clc
aas
pop
push
fiaddl
sub
ret
push
dec
jp
daa
clc
jp
jmp
es
in
xor
xchg
inc
in
imul
sub
fs
in
lahf
cmpsb
fdivrp
inc
push
movsl
jle
lods
andb
rorl
jg
xor
jl
mov
inc
imul
lock
push
int3
adc
lcall
adc
xchg
insl
cmp
dec
sbb
inc
push
adc
sbb
push
out
lret
into
or
and
fwait
scas
sub
fwait
push
fucom
adc
shr
jo
adc
push
xor
sbb
cmp
imul
andb
sti
lea
out
adc
rcrl
enter
movsb
inc
xor
adc
data16
xor
or
sbb
xchg
mov
bound
xchg
xchg
jns
add
dec
and
adc
orl
adc
jbe
fsubr
dec
popf
sbb
idivl
push
or
jns
outsb
pop
iret
jo
movsl
icebp
in
cmpsb
pop
mov
xchg
dec
mov
loope
pop
push
ss
push
push
orl
xchg
mov
add
mov
sbb
push
or
loopne
call
rcrb
xchg
adc
sbb
pop
inc
loop
fs
icebp
mov
pop
xor
addr16
lahf
mov
mov
sbb
adc
cs
dec
cmp
sub
push
lds
sub
add
rorl
stos
lret
icebp
aas
shrl
add
mov
lea
fisttps
movsb
pop
jp,pn
pop
stos
mov
inc
or
lcall
mov
inc
cmpsl
call
imul
addr16
jl
daa
shld
out
ret
lods
and
jmp
icebp
xchg
mov
cmpsl
pop
or
add
adc
in
inc
test
pop
pop
cmp
lods
rcrb
pop
jge
and
sub
sub
jae
fistpll
mov
dec
cmp
stc
mov
or
aaa
shlb
movsb
push
push
mov
dec
adc
sbb
dec
and
nop
mov
loope
inc
icebp
jmp
jmp
imul
xor
into
mul
ror
mov
das
add
pop
test
add
add
mov
sbb
cmc
scas
lcall
out
nop
xchg
cmpsl
pop
mov
push
xchg
xchg
mov
cmc
mov
aam
orb
lahf
xchg
jge
xor
aad
adc
and
xchg
pop
inc
jp
lret
ficoml
arpl
lock
cmp
xor
mov
inc
jmp
mov
aaa
jl
test
dec
cld
adc
jbe
and
mov
push
dec
push
into
jge
xchg
mov
pop
mov
fimull
dec
in
rolb
sub
sbb
dec
pop
je
outsb
jno
lcall
pop
jmp
push
pop
sbb
psubw
ljmp
inc
dec
aaa
les
addr16
jne
shlb
movl
and
inc
push
call
leave
mov
fistl
xlat
pop
gs
test
sub
out
mov
hlt
sub
repz
cmpsl
pop
mov
repz
xchg
cmpsb
cmc
arpl
xchg
pushf
inc
cs
repnz
mov
sbb
sub
in
mov
pop
jne
lea
loope
xor
sti
mov
imul
and
fisttpll
shrl
xor
es
adc
out
cltd
push
jo
and
imul
xor
push
test
dec
mov
and
mov
mov
fwait
addr16
icebp
ret
sahf
loop
cs
mov
gs
or
nop
loopne
xchg
cltd
mov
push
movb
arpl
cmpb
mov
out
xchg
fs
xchg
dec
imulb
fcompl
mov
hlt
jbe
push
int
sbb
sub
sarb
sub
in
hlt
xchg
jecxz
popf
pusha
xchg
imulb
sbb
jg
sub
push
lods
ja
pop
pushf
sub
aad
pop
add
and
xor
cmp
int
sbb
test
cmpsb
int
lret
out
jge
add
fiadds
out
cmp
mov
es
repz
mov
mov
adc
mov
cmp
loopne
xor
mov
xor
ficomps
filds
and
mov
cmp
sub
mov
sub
xor
mov
sub
mov
ljmp
cmp
jmp
push
xor
pop
and
mov
int3
imul
data16
stos
inc
mov
ljmp
and
push
outsb
or
ret
pop
iret
jp
pop
mov
sbb
cwtl
fimuls
icebp
adc
aas
out
jb
push
scas
lret
mov
jnp
rcrb
rorl
mov
je
xlat
mov
and
rorl
or
mov
ja
sub
repnz
aam
lahf
lock
cld
dec
ret
rorl
ror
sub
xchg
adc
movsb
movsb
pop
mov
push
push
cmp
inc
sar
jp
push
jmp
sub
push
sub
lcall
dec
push
xlat
adcl
jae
icebp
sbb
int3
in
inc
pusha
xor
push
ror
inc
les
in
inc
and
cmpsl
sub
adc
fnstsw
cmpsb
dec
xor
mov
xor
and
jno
inc
not
xor
mov
sub
sti
mov
mov
sub
sbb
push
and
out
fcoms
xchg
push
inc
mov
icebp
cwtl
data16
shlb
mov
add
fisubrl
faddl
xchg
mov
std
jmp
mov
dec
mov
mov
out
outsl
xchg
stos
add
sub
lods
stos
pushf
test
imul
jo
xorl
popf
incb
jne
xchg
pop
test
test
and
test
mov
sub
scas
or
sbb
out
adc
xor
mov
and
pop
cltd
inc
test
push
aad
aad
jns
nop
mov
fildl
pop
or
pop
fnsave
cmp
inc
ds
sti
leave
xchg
pop
ss
rol
in
or
scas
rclb
mov
mov
cmpsb
xchg
out
scas
sbb
in
sub
dec
push
movsb
inc
jno
shlb
sbb
sbb
dec
mov
mov
xor
cld
jae
mov
push
mov
jle
cmpsl
sub
cmp
cmp
sub
cmpsb
push
fistpll
fstl
fstl
fs
cmp
sbb
add
dec
dec
lahf
mov
fsubs
inc
aad
cld
adcb
in
dec
mov
or
cmp
mov
jle
out
mov
mov
pop
notl
aad
inc
and
cmp
scas
push
fstpl
dec
sub
jae
cwtl
sbb
xor
punpckhbw
test
clc
movhps
ss
cs
push
jne
call
sbb
pop
xor
pop
daa
sarl
or
xchg
pop
pop
mov
insl
mov
or
adc
pop
aaa
fnsave
sbb
push
les
shll
das
imul
sahf
lea
aaa
xor
mov
jle
mov
mov
dec
dec
enter
and
aad
fnsave
mov
repz
addb
jno
popa
pop
or
jbe
mov
sub
sbb
fstpt
pop
ljmp
dec
adc
ss
and
in
push
shrb
pop
cmp
loop
push
sbb
sub
popa
imul
dec
fcomip
sub
in
or
rorl
into
mov
sub
jns
in
mov
dec
push
lock
jmp
shll
pop
jle
and
adc
dec
jge
or
sub
popf
cmp
adc
dec
aaa
bound
jge
xor
jb
mov
fists
sbb
mov
adc
add
loop
sub
push
inc
jno
xchg
mov
pop
push
or
lea
call
mov
scas
clc
xor
ror
pop
mov
push
dec
and
bound
filds
das
mov
xchg
add
mov
lods
sub
dec
aam
test
clc
loope
jo
adc
ret
ret
inc
add
paddsw
test
mov
lcall
movsb
jne
mov
cmpsl
daa
sub
shlb
neg
lods
dec
scas
pop
xor
xlat
pop
jae
loopne
scas
mov
inc
imul
das
cmp
in
cli
out
push
fnstsw
daa
sub
adc
cs
dec
cwtl
push
enter
jnp
lret
mov
xor
mov
xchg
nop
pop
xchg
mov
insb
cwtl
icebp
fisubl
and
xchg
ds
int3
call
call
jl
popf
and
shlb
push
cmp
fbld
out
dec
pushf
ficoml
inc
sbb
imulb
lret
cmp
cmpl
movsb
push
mov
dec
push
aas
outsb
adc
lods
stos
lahf
pop
xchg
mov
dec
out
std
mov
jbe
aad
jo
dec
rcrb
xchg
outsl
adc
mov
sbb
jns
add
xor
stos
and
loope
int
enter
xlat
push
mov
push
fists
mov
jle
and
dec
sub
les
into
test
cmp
dec
imul
in
xor
stc
aad
sbb
sbb
out
imulb
jmp
out
lods
scas
mov
test
aad
ds
aad
dec
mov
ffree
mov
test
pusha
fstpl
sbb
pop
inc
sbb
xchg
negb
cltd
push
xchg
int3
and
cli
gs
push
sarb
pop
popa
scas
jns
jl
enter
mov
pop
movsb
sub
jecxz
pop
and
cmc
das
mov
or
xchg
dec
add
add
cmp
lods
add
pop
insl
pop
adc
ficomps
cmp
insl
jae
sub
in
fldcw
jno
rolb
dec
clc
adc
jg
xchg
mov
out
je
fwait
dec
daa
cmp
out
fildl
in
add
jg
aam
nop
stos
adc
cmpsb
mov
push
mov
mov
scas
jl
sub
jne
xorl
push
mov
jne
pushf
jae
stos
in
cmp
cmp
std
call
xchg
inc
dec
scas
mov
xchg
mov
daa
mov
jecxz
sub
mov
inc
lods
daa
data16
and
bnd
mov
xchg
or
loop
mov
mov
fcomps
pop
sbb
jle
iret
fwait
cmpsl
mov
push
ja
add
jo
mov
sbb
cli
iret
xchg
adc
dec
bound
sbb
add
pop
call
cld
sbb
leave
and
dec
rorb
jae
int3
or
xchg
hlt
mov
aaa
rorl
rclb
add
adc
pop
pop
das
int3
pop
or
dec
loope
icebp
imul
sbb
pushf
sar
aas
js
xchg
ret
out
loop
int
mov
inc
mov
jle
push
pop
loop
gs
jns
scas
xchg
dec
mov
shrl
pushf
pop
leave
stos
mov
or
loop
pop
icebp
nop
in
mov
cmp
icebp
xchg
fs
cmove
fmuls
insb
sub
xor
clc
mov
cmp
int3
daa
dec
aas
int
push
cmp
xor
push
imulb
cmp
lcall
or
mov
popf
xchg
not
add
push
subps
rol
jmp
ret
mov
mov
ja
or
or
sub
ss
mov
or
scas
ds
xchg
or
fstpt
cmp
mov
push
xor
push
mov
sbb
cs
xchg
inc
rorl
mov
inc
jne
xor
push
fisubrs
vfrczpd
and
ja
and
test
adc
or
jnp
leave
dec
mov
sbb
cwtl
cmp
rcl
dec
stc
fistl
jbe
xchg
inc
inc
add
push
sbb
dec
ret
fiaddl
out
insl
jae
cli
mov
movsb
mov
and
xor
les
cmp
shl
out
test
pop
sub
ja
pop
in
push
xor
pop
cmp
fildll
cmc
pop
pop
pop
es
mov
movups
cld
pushf
movsb
jno
mov
pop
test
xchg
aad
mov
inc
push
mov
push
data16
sbb
call
iret
add
mov
cmpsl
mov
pop
repnz
mov
mov
in
bound
cld
pop
int
jl
push
sti
or
cmp
imul
fdivr
pop
mov
cmp
into
and
mov
je
sbb
stc
enter
xchg
sub
adc
xchg
aad
mov
adc
sub
out
pop
adc
mov
and
jb
ljmp
jl
inc
loop
in
fwait
push
mov
subl
arpl
and
sub
jbe
cmp
sti
push
jecxz
shll
rorl
test
cmp
stos
and
int
pop
imul
arpl
jbe
or
or
dec
xchg
ja
gs
sbb
mov
jnp
sahf
shll
pop
jns
out
int3
mov
mov
scas
mov
cmp
nop
xor
lea
sbb
sub
pop
jae
dec
stos
xlat
xor
dec
jle
in
sub
adc
sub
in
fstps
push
dec
cmp
sbb
mov
daa
jbe
loope
lds
mov
sbb
out
inc
out
mov
mov
jnp
or
sbb
push
addr16
cmpsl
or
mov
addr16
fstpt
xor
mov
ficompl
outsl
aad
jnp
fnstsw
orb
xchg
mov
cs
in
xor
sub
lods
add
jnp
popa
mov
fldcw
rclb
outsl
or
mov
sub
push
xor
fnstenv
in
stc
and
jge
cmpsb
adc
push
jno
dec
mov
sti
lods
add
sti
fildl
dec
sbb
sbb
inc
cmp
mov
lcall
lret
jmp
or
sbb
call
je
cli
std
xchg
nop
cmp
outsl
lret
aam
mov
or
out
sub
movsl
aaa
adc
sahf
shll
pop
jbe
fwait
jle
in
shlb
cs
ja
ret
fiaddl
jb
iret
das
push
jg
pop
shll
bound
pop
mov
mov
ds
out
adc
mov
adc
fucomi
test
cmp
push
loope
or
and
jb
adc
or
fs
aad
cmpsl
shll
pop
add
and
inc
cwtl
adcb
xchg
into
xchg
or
xchg
mov
jbe
or
push
cwtl
add
rep
mov
addr16
out
cmpsl
or
movsl
enter
rcrb
out
in
pop
and
dec
or
lods
pop
mulb
out
jnp
cmp
fmuls
mov
in
fsubl
xor
mov
fldt
test
mov
mov
frstor
xchg
ja
int3
xchg
in
cmpsl
lret
jae
mov
icebp
add
mov
test
loop
jbe
jmp
jp
adc
pop
xor
push
adc
pusha
mov
cmpsl
str
adc
and
mov
sbb
adc
adc
test
push
int
xchg
mull
lcall
idivl
shrb
sbb
je
push
cmpsl
or
pop
loop
fistl
sbb
inc
lods
sub
call
insl
mov
loop
in
cmp
scas
lock
shrl
gs
fnstsw
mov
les
pusha
div
or
dec
movl
imull
cmp
or
sub
lret
ror
cmp
lcall
aad
loopne
jae
push
lret
out
lock
int
jge
scas
pop
add
clc
movsl
mov
pop
adc
ja
inc
nop
or
push
mov
mov
stc
or
adc
std
cmp
pop
bnd
mov
jo
mov
dec
pusha
adc
sahf
mov
xor
fstpt
repnz
das
jge
iret
or
lahf
sub
jecxz
xchg
cmp
pop
jb
add
repnz
pop
push
call
and
scas
inc
add
decl
loop
out
in
gs
ja
xchg
adc
mov
addr16
mov
or
push
fwait
lods
add
cs
mov
sub
or
rorb
test
lds
stc
shll
repz
lret
shr
and
xchg
stc
dec
pop
inc
popa
jns
inc
rcrl
cmp
and
insl
and
lds
adc
xor
xor
sahf
in
dec
aam
in
cmc
stos
and
xor
pop
adc
jae
sbb
fimuls
push
push
scas
jno
mov
pop
jae
mov
sub
cltd
fwait
add
dec
int
mov
push
jle
repnz
adc
cmp
sbb
scas
aam
inc
std
dec
jno
addr16
sbb
aam
cmpsl
and
xchg
push
sbb
and
pushf
imul
push
mov
test
faddl
sahf
push
jl
mov
xchg
gs
pop
outsl
push
stos
out
jnp
fwait
sarb
sbb
dec
push
xor
fdivrl
scas
sub
sbb
aas
mov
sub
aad
test
ljmp
pop
push
std
fadd
nop
dec
dec
test
lret
cltd
fwait
push
stos
sub
add
inc
xchg
push
sbb
test
push
mov
jmp
xchg
push
mov
cmp
mov
fnstcw
dec
mov
nop
loope
lahf
addr16
xchg
lret
or
out
push
sbb
call
sub
std
push
sub
imul
lock
jge
inc
lcall
aam
xor
out
mov
jnp
push
sub
xor
push
rep
cmp
push
int
sub
lea
mov
fcomps
push
cmpxchg
xor
or
fwait
iret
into
pop
push
adc
sbb
out
xchg
sub
push
add
frstor
shrb
mov
stos
ss
mov
adc
cmp
fbld
cltd
pop
enter
js
testb
push
mov
call
cltd
pushf
cmpsl
dec
and
shlb
mov
out
fwait
sub
push
data16
out
lret
mov
popa
mov
xor
xor
mul
out
lcall
pushf
popf
jns
std
popa
mov
clc
out
jo
out
cwtl
cmp
inc
add
xor
ja
mov
bound
jmp
inc
dec
sbb
out
pop
jnp
and
rcrb
pop
aas
incl
xchg
out
fcomps
outsb
jno
inc
ds
adcl
cld
pop
xchg
mov
repnz
ds
add
cmp
mov
jnp
cmc
jbe
outsb
icebp
dec
mov
sub
jecxz
or
cmpsb
xchg
xchg
cwtl
add
shll
loopne
xchg
mov
sbb
aaa
xchg
mov
and
dec
mov
cmp
repz
mov
idivb
cmp
cli
push
popa
mov
mov
and
pop
adc
sub
jle
cmp
add
xchg
push
jp
cmp
lret
out
sbb
inc
out
rep
add
or
sub
xor
jecxz
sub
sub
mov
pop
cmpsl
popf
jbe
stc
sbb
iret
mov
mov
push
sub
jmpw
fdivs
adc
xchg
mov
xlat
int3
cmp
out
mov
filds
in
out
push
mov
andl
inc
ljmp
inc
lret
sbb
sti
lret
fdivr
jecxz
add
mov
inc
mov
iret
call
pushf
add
movsl
sub
in
and
fxch
mov
aad
loopne
pop
xor
ffree
in
jg
ja
in
sub
pushf
xorl
push
jbe
mov
mov
dec
arpl
lcall
and
or
mov
or
lcall
rclb
jmp
pop
adc
mov
fwait
mulb
mov
dec
jg
jb
insb
out
fisubrs
in
sub
cs
pop
jae
out
and
mov
lret
adc
aas
cmp
xor
dec
xchg
pop
sub
jne
rcrl
cmp
sahf
popa
mov
stos
push
repz
fs
loope
pop
icebp
jae
fs
add
cmp
jno
stos
out
pop
cmc
mov
cmpsb
test
dec
out
scas
pop
in
and
push
sbb
pop
mov
stos
lret
repnz
imul
dec
add
push
dec
jle
les
adc
xchg
jo
ret
push
in
xlat
test
mov
clc
pop
mov
rorl
imul
lahf
and
lds
sub
lahf
inc
xchg
lea
jmp
repnz
sbb
cmp
out
mov
push
cmp
loopne
fisttpll
cmpsl
cld
std
xor
cmpsb
push
xchg
das
fadds
lods
push
xor
repnz
push
cld
cmc
imul
adc
dec
js
shrl
popa
and
cld
ja
inc
jle
inc
xlat
setge
push
xchg
ja
xchg
sbb
pop
mov
adc
sbb
ljmp
fldenv
inc
insl
xchg
xor
inc
sbbb
in
fdiv
in
jns
push
sbb
test
push
dec
stc
sahf
pushf
mov
into
popa
jl
js
and
dec
add
sub
pushf
mov
je
popa
in
in
cmp
shll
cwtl
inc
ja
push
dec
mov
pop
cmp
movsb
push
sbb
pop
push
xchg
mov
and
mov
dec
jnp
subl
stos
das
sub
mov
test
cmp
std
addl
es
push
ret
push
jecxz
xchg
jmp
call
inc
sbb
and
mov
jae
mov
pop
data16
sbb
jns
inc
jno
mov
aad
ja
jns
enter
shll
or
xorb
in
out
xchg
jle
xchg
shrb
out
mov
jecxz
dec
enter
js
imul
cltd
daa
lcall
mov
dec
mov
roll
sub
pop
jg
dec
mov
xor
adc
mov
dec
inc
inc
aas
cmp
lods
in
stos
lret
sti
dec
pop
adc
pop
jmp
dec
rolb
xor
jne
cmpb
in
inc
cmp
stos
mov
out
shlb
ret
mov
outsb
loop
and
loope
das
int
mov
sahf
stc
adc
ret
pop
cld
mov
iret
push
aaa
and
call
int3
into
sbb
loopne
mov
mov
int3
inc
cld
push
add
lahf
insl
mov
pop
sbb
fucom
push
xor
mov
mov
negl
fs
xor
or
stos
lea
sahf
xchg
add
sub
popa
dec
scas
xchg
add
xor
stc
jb
or
jmp
pop
aam
js
push
lods
mov
mov
mov
inc
mov
push
inc
cs
iret
sub
pop
mov
push
pop
xorb
fs
stos
fsub
adc
push
push
jmp
push
fimuls
in
pop
jae
stc
inc
insb
js
inc
jo
inc
cmp
lods
inc
test
fnstenv
jno
mov
cmp
js
lods
or
mov
sub
xor
sbb
in
mov
xchg
gs
push
mov
js
mov
mov
adc
xchg
cmp
sub
mov
mov
cltd
push
adc
pop
mov
mov
lods
cmpl
adc
dec
xor
loopne
fistps
fisubrl
lcall
ret
popa
outsb
dec
jg
jl
repz
inc
fmuls
adc
mov
jne
push
out
cld
xor
fs
xor
in
mov
sahf
dec
scas
nop
daa
mov
aaa
mov
cli
repz
lcall
and
movsl
sub
cmc
push
pop
cmp
es
mov
into
push
xchg
cmp
pop
and
stos
cmp
fwait
jmp
jl
xor
vdivsd
rolb
mov
dec
sbb
push
cmp
rcl
out
inc
outsb
pop
aam
test
mov
lea
xchg
ret
adc
and
cwtl
repz
push
int3
jo
cmp
jg
sbb
jecxz
xchg
jb
add
rcll
stos
lock
repz
push
pop
stos
repz
fmull
imul
xlat
arpl
sub
out
or
clc
cltd
jle
pop
dec
mov
cmp
ja
mov
mov
test
gs
jmp
int3
cmpsl
jnp
jp
add
and
xchg
jno
insl
cmp
jb
dec
ret
ja
aam
out
ljmp
mov
or
lea
fldcw
pop
push
jb
in
fld
cltd
cmc
mov
jo
dec
mov
sub
rorb
rcl
or
xor
jl
adc
fbstp
pop
push
shrl
adc
adc
in
push
cmp
dec
insl
sbb
out
sbb
sub
xchg
cli
cmp
jno
mov
pop
and
push
add
imull
jno
stos
cli
mov
add
shrl
inc
cmp
pop
inc
xchg
shll
jle
xchg
enter
push
or
mov
stos
movsl
sti
stc
sub
xchg
out
mov
in
xchg
xlat
mov
mov
dec
arpl
push
mov
addr16
pop
mov
into
lret
fs
and
fsubrl
push
xor
mov
push
jo
xchg
jns
fwait
push
stc
test
gs
adc
jbe
jno
fisubrs
mov
add
ret
cmpsb
push
jnp
jb
outsl
iret
shll
pop
mov
sti
xor
insb
mov
aad
jb
mov
add
fdivrs
fidivs
repz
mov
leave
lea
insl
pop
cmpsl
fcomps
iret
inc
mov
aad
cmpsl
out
lcall
mov
cmp
xchg
mov
pop
or
or
cmp
movsb
insl
insl
xchg
loopne
jp
scas
scas
inc
and
jnp
inc
xchg
stc
ret
rorl
enter
adc
pop
jbe
pop
mov
loopne
adc
subl
test
inc
aas
push
dec
shll
dec
mov
xchg
pop
je
add
aam
xchg
test
fdivl
das
and
sub
adc
into
ds
fdivrs
mov
out
add
push
inc
ret
push
pop
push
sbb
pop
imul
outsb
cs
dec
dec
cmc
test
jmp
mov
jecxz
cwtl
lahf
std
dec
xor
mov
loopne
xchg
cmc
cs
mov
lret
pusha
xchg
or
mov
pop
ds
adc
test
xor
cli
mov
je
aam
dec
add
pop
ret
enter
ljmp
imul
push
mov
xor
ret
jmp
ds
push
push
dec
pop
pushf
pop
push
and
inc
and
jp
jne
jmp
dec
idivb
add
lds
cwtl
js
push
cmp
pusha
push
mov
add
aad
jo
repnz
js
xchg
test
aas
add
push
sbb
dec
sbb
adc
mov
sarl
push
xor
movsb
mov
js
jg
outsb
mov
mov
nop
mov
cmp
inc
xor
ret
xor
das
fldl2e
js
test
arpl
repnz
popa
inc
cmc
inc
mov
mull
je
sarb
movsb
ja
stos
xor
mov
test
dec
sub
aas
int3
mov
icebp
xchg
inc
ficomps
imul
xorb
mov
imul
bound
pop
cmp
sahf
jmp
pop
cmp
fistpl
orl
add
imul
mov
jae
cmp
flds
lcall
daa
rolb
leave
nop
decl
lcall
pop
dec
mov
sub
pop
imulb
sbb
js
ds
call
gs
sbb
dec
jne
enter
fcmovnb
pop
jp
icebp
scas
mulb
inc
js
jp
mov
aam
popf
mov
loop
adc
orl
sub
xchg
or
lods
push
push
fcomi
pop
fsubrs
fdivrl
int
lds
insl
cltd
jmp
imul
jmp
stos
or
or
sub
stos
add
test
push
decl
sbbb
cmc
cmp
aam
sub
add
add
int
mov
mov
mov
add
or
das
sub
jae
push
dec
jecxz
rol
in
dec
data16
sbb
je
mov
fdivrl
push
fld
mov
xchg
and
xlat
fildll
sub
adc
btr
adc
outsl
ljmp
push
pushf
lret
ja
aaa
and
loope
pop
in
mov
or
pop
sbb
jno
mov
cmp
cmpsl
jmp
push
scas
or
or
je
pop
in
cld
cmp
ds
fcmovne
adc
pop
or
mov
and
ret
mov
xchg
push
pop
shrl
xchg
mov
and
add
shrl
lods
inc
dec
loop
fisttps
xlat
icebp
lcall
xchg
js
inc
into
orb
mov
sub
mov
and
divl
inc
pop
jmp
notl
mov
mov
jo
cmpsl
inc
jp
xor
ret
pop
in
jo
xor
adc
push
rcrl
or
roll
test
add
push
or
and
mov
aaa
into
dec
add
sbb
loop,pn
inc
in
cmp
pop
mov
aam
or
or
sub
xchg
adc
mov
lcall
stc
xor
push
sbb
call
xor
dec
gs
and
inc
bound
cmc
addr16
cmc
cmp
imul
lods
ret
adc
lods
popl
xor
push
mov
jg
lea
cmp
sbbl
jo
or
mov
imul
jge
pop
push
movsl
and
popa
dec
std
cmp
xchg
dec
inc
add
cmp
das
loop
movsl
sbb
ja
or
sub
mov
push
pop
cltd
fdivl
popf
paddd
cmp
lcall
xorl
lret
insb
mov
outsl
jns
in
lahf
outsb
shll
fstps
gs
add
stc
mov
into
notl
push
adc
jae
xchg
outsl
sbb
push
adc
push
mov
stos
rclb
fs
ffree
mov
inc
clc
xor
ret
xchg
xor
movsb
cmpsb
int3
scas
stos
rcr
add
lds
jbe
or
outsl
add
out
in
adc
arpl
lds
lret
jmp
lret
jle
insl
sti
adc
xlat
into
pop
sub
inc
lods
xor
pop
pusha
adc
loop
inc
jl
je
popf
loop
popf
enter
jmp
fsubl
mov
adc
sbb
int
decl
clc
out
lds
jge
adc
mov
adc
addr16
mov
or
cmp
fdivl
not
testl
jl
incb
push
push
add
jg
jge
addr16
nop
mov
es
pop
aaa
adc
push
ficoms
ss
rol
mov
iret
add
outsb
inc
add
mov
enter
or
mov
clc
rol
xchg
sub
dec
or
faddl
sbb
mov
pusha
cmpsb
push
cld
fldt
movsl
lock
or
add
xor
enter
pop
inc
sbb
imul
inc
cmp
adc
mov
shl
fwait
bnd
aad
mov
in
mov
and
clc
or
mov
lret
push
fdivrl
loope
mov
and
popa
aad
jbe
sbb
add
dec
ss
xchg
ljmp
push
push
jns
and
fwait
stos
xor
stos
or
mov
xor
stos
popf
push
icebp
adc
push
pusha
cmp
emms
das
mov
push
movsb
fldl
aam
jmp
dec
jo
pop
mov
adc
jmp
lea
std
lret
fwait
mov
mov
cltd
in
aaa
arpl
cmpl
and
scas
add
xchg
in
mov
sbb
mov
imul
shr
lahf
add
sub
stos
ret
sub
stos
push
lods
inc
xchg
inc
dec
adc
test
mov
ljmp
outsl
mov
addr16
cmc
xor
enter
dec
lods
aas
pop
cmp
lds
scas
mov
mov
jb
pop
push
icebp
mov
mov
pop
jl
mov
cwtl
imul
fstl
rolb
inc
add
jnp
xchg
mov
jb
arpl
lods
popa
or
inc
int
mov
fs
or
dec
scas
std
cmp
movsl
insb
push
roll
mov
bound
or
popa
and
pushf
dec
cmpsb
into
scas
adc
inc
xchg
popf
out
out
mov
push
cltd
fidivrs
fsub
mov
or
rorb
xchg
dec
icebp
aad
out
jo
add
not
fidivs
scas
xor
addr16
push
and
lahf
push
xchg
pushf
mov
loope
fdivs
test
adc
lcall
shlb
add
adc
hlt
xchg
loop
inc
push
push
cs
cmpsb
scas
jae
push
enter
mov
movsl
out
mov
popa
mulb
insl
enter
ss
clc
cltd
xor
punpckhbw
mov
adc
mov
lret
mov
fs
push
lock
scas
out
sahf
test
and
mov
pop
push
mov
push
repz
xlat
fwait
fwait
cs
mov
pop
cli
xlat
xchg
mov
pop
push
xor
aas
sbb
je
pop
rolb
sub
mov
loope
out
xchg
leave
mov
mov
cld
pop
lret
push
ds
movsb
movsb
in
shll
jge
dec
mov
and
stc
fwait
outsl
push
fiadds
mov
mov
pop
jecxz
sbb
ficoml
xlat
lock
xchg
loopne
jnp
or
jecxz
outsb
into
jb
push
fwait
ret
int
push
or
or
mov
ja
xlat
jmp
pop
push
cli
scas
ss
mov
dec
inc
std
imul
cs
cld
push
lds
mulb
outsl
xlat
or
mov
dec
or
dec
add
lahf
jnp
repz
xchg
mov
mov
push
xor
mov
mov
xchg
pop
sbb
pop
out
clc
fsubrs
nop
into
insl
gs
leave
popa
inc
cltd
push
test
aad
cmp
cltd
dec
imull
dec
test
cmp
imul
mov
mov
repz
xchg
push
movsl
mov
aaa
pop
rclb
int
mov
in
test
js
pop
xor
push
xchg
add
push
test
xor
shrl
adc
mov
pop
jle
sbb
adc
push
inc
repnz
shlb
sets
lea
cld
enter
xor
dec
jl
pop
nop
mov
mov
sti
dec
push
nop
pop
mov
mov
sar
sahf
sub
testb
mov
cmpsb
adc
scas
lcall
aaa
xchg
pusha
addl
stos
mov
notb
cli
push
loop
lret
aaa
cmp
fs
adc
xchg
movl
stos
mov
sub
loop
les
divl
jp
cmp
lahf
test
or
imul
fbstp
gs
shlb
rcl
adc
adc
aas
aas
jno
mov
jmp
ror
ja
cld
xchg
mov
imulb
addb
gs
jl
sub
sub
mov
dec
dec
push
jge
push
out
jg
pop
jmp
test
dec
jb
pmulhuw
stos
in
inc
or
and
call
fidivs
or
jmp
ljmp
ret
or
adc
sbb
lret
dec
sti
sub
xchg
mov
ret
xchg
jne
pushf
test
inc
dec
inc
add
xchg
je
ficomps
cli
fidivrs
mov
sahf
cmp
jmp
push
leave
imul
or
cltd
insl
fidivl
andb
sub
popa
movsl
mov
mov
add
nop
in
mov
nop
ja
ja
int3
push
dec
pop
pop
fsubs
hlt
pop
add
enter
insb
scas
xchg
subb
addr16
iret
xchg
mov
add
and
lods
inc
mov
pop
mov
cli
and
adc
inc
or
and
subps
mov
aaa
repnz
aas
push
into
pusha
loop
ret
pop
adc
out
mov
add
push
std
adcb
xchg
test
enter
loope
sub
jmp
mov
adc
rolb
adcl
popa
xor
arpl
xor
ds
sahf
loop
std
popa
dec
xchg
rcrb
push
insb
and
xchg
ds
fwait
pop
push
add
cmpsb
mov
mov
dec
sub
test
xor
imul
out
push
cld
cli
or
dec
jb
shlb
mov
cmp
cld
cltd
shll
fwait
mov
xchg
pop
insb
pop
mov
push
test
fimull
nop
jno
and
mov
mov
push
rcrl
lds
rclb
pop
pop
push
cmp
xchg
ja
jbe
out
add
mov
insb
sarb
cmpsb
sub
adc
xor
pop
test
dec
push
pop
lods
bnd
pop
out
pop
outsb
dec
jle
addr16
faddl
lods
dec
xlat
pop
sbb
pop
jg
dec
xor
lods
pop
gs
cmovl
scas
xchg
icebp
lea
adc
movsl
adcl
cmp
sub
add
stos
and
cmp
shlb
outsl
jge
jp
add
inc
jne
lock
push
xchg
mov
sub
test
popf
lds
scas
xor
push
mov
push
js
in
xchg
mov
cld
jg
popf
int
add
pop
pusha
mov
push
xor
orb
pop
lds
mov
push
jbe
pop
jl
mov
sar
xchg
xchg
push
push
cmp
test
jle
sbb
pushf
pop
loopne
mov
fld
daa
pop
mov
lds
jge
in
mov
aaa
add
xor
addb
iret
xlat
jecxz
cmp
stos
mov
bound
xchg
jmp
ss
subl
dec
xor
lret
push
lods
jb
lret
adc
mov
push
gs
loopne
pop
mov
xorb
xor
iret
dec
sub
gs
cwtl
cmp
sub
pop
and
lea
std
sub
out
fidivrl
xor
jl
mov
iret
cmc
mov
add
loop
jg
push
in
aad
loopne
mov
xchg
jbe
shr
or
push
loop
mov
loopne
add
add
mov
hlt
shr
lods
jge
sbb
scas
scas
loope
mov
xlat
adc
adc
mov
aam
sti
xchg
out
bound
pop
cltd
xchg
stc
jb
popa
sub
xor
xor
push
inc
dec
xchg
mov
push
sub
and
inc
adcl
jne
inc
orb
js
lds
adc
movl
sub
pop
pop
mov
pop
add
adc
lods
ret
xor
dec
fisubrs
push
and
mov
in
jne
dec
pop
fwait
push
and
sub
mov
test
outsl
aas
testl
mov
cmp
imul
jl
out
mov
dec
je
add
or
cld
mov
sbb
mov
sub
push
dec
leave
sbb
std
add
mov
out
mov
mov
rcrl
push
push
les
cmp
jne
std
cvttps2pi
imul
cmp
adc
or
push
mov
push
xor
ret
push
xchg
inc
or
push
push
out
lret
leave
xchg
in
adc
or
dec
int
das
or
sub
scas
push
in
int3
xor
clc
sub
mov
sub
or
jno
arpl
or
rcr
jo
cmp
adcb
dec
loope
out
scas
out
xor
xchg
dec
and
inc
adc
incb
sti
enter
dec
mov
aas
bound
mov
flds
sbb
imul
pop
xchg
neg
ds
xchg
fmuls
mov
lock
push
pop
sub
stc
mov
ret
mov
cld
icebp
sbb
mov
mov
test
xchg
adc
xor
dec
pop
ja
cltd
cmpsl
mov
push
lds
dec
icebp
jmp
or
xchg
enter
mov
cmp
idivb
sbb
mov
stos
xchg
mov
out
inc
icebp
cmpsb
jmp
popa
aad
cmp
pop
ja
inc
addr16
adc
xor
popa
out
pusha
adc
sbb
adc
sub
repz
jle
xchg
mull
mov
test
ja
push
xor
and
aaa
pop
mov
xchg
jns
xchg
mov
push
mov
or
sub
pop
aaa
call
mov
mov
xor
outsb
sbb
lods
cmp
xchg
lods
mov
lock
sbb
imul
incl
sub
in
adc
lcall
lahf
lock
pop
adc
xchg
popa
adc
inc
mov
and
mov
jbe
xchg
add
push
dec
inc
lds
pop
push
jmp
test
sbb
mov
add
push
mov
mov
insl
xchg
xor
cli
xor
rcr
sti
rolb
and
ljmp
cmp
or
inc
dec
xlat
fsub
addr16
call
cmp
cld
jp
pop
es
lds
out
ror
ja
cmp
fidivs
push
jp
mov
mov
mov
xchg
jle
inc
lcall
pop
pop
js
fdivrl
rcrl
mov
popl
xor
add
popa
ficompl
and
mov
dec
cmc
fmuls
or
hlt
clc
sbb
or
inc
mov
fnstsw
insb
enter
push
dec
jns
push
add
jle
data16
lret
fidivrl
pop
push
jp
in
inc
loope
jge
adc
xchg
cmc
mov
int3
and
mov
pop
pop
out
aad
arpl
xchg
lret
pop
lock
mov
xor
xchg
ret
jno
mov
xchg
insb
iret
cmp
jmp
popf
je
pop
out
lcall
ret
sub
or
fs
sub
pop
add
push
aam
mov
repnz
jnp
arpl
pusha
xchg
cmp
mov
xchg
int3
mov
jno
sub
daa
jo
adc
xchg
pop
add
fimull
call
xlat
popa
sub
inc
mov
jecxz
jge
jmp
loopne
clc
and
sbb
mov
fwait
stos
pushf
jg
mov
mov
pop
inc
cltd
pop
popf
pop
adc
mov
jp
inc
sub
fmulp
or
je
and
insb
mov
fwait
adc
adc
xchg
mov
add
push
and
adc
stc
lahf
push
sub
je
inc
dec
je
push
bnd
dec
sub
sub
ljmp
xchg
shll
push
jae
add
jbe
pop
gs
jb
jo
cmc
dec
leave
adcl
sub
bound
push
adc
sub
pop
dec
jg
outsl
push
imul
in
ret
cmc
dec
lcall
sbb
dec
out
aaa
test
cmp
xor
and
imul
mov
jl
jmp
arpl
jae
mov
frstpm(287
cmpsl
pop
test
out
dec
popf
sti
sbb
bound
ja
pop
lret
add
cmp
jecxz
bound
in
popf
pop
jl
inc
sahf
xor
in
xchg
lret
mov
and
adc
sbb
xchg
push
out
popf
mov
sahf
movsb
dec
jg
and
rcl
lods
push
insl
lods
mov
rclb
push
xchg
mov
and
xor
push
nop
xlat
stos
cmpsl
out
call
rcr
xor
fisubs
mov
pop
dec
lret
loop
mov
orl
sahf
push
imul
hlt
xor
repz
lcall
dec
lcall
inc
add
cli
add
icebp
stos
mov
fisttps
cmpsl
mov
lret
mov
add
or
xchg
aas
scas
dec
insl
out
stc
xchg
add
add
repnz
push
fnstcw
fiadds
cmp
push
add
in
repnz
mov
adc
add
dec
adc
add
pusha
sbb
jp
pop
adc
stos
in
jae
sub
cmp
ds
dec
mov
inc
add
jo
stos
faddl
popa
mov
rcrl
mov
xor
mov
mov
jecxz
dec
les
fcomps
cmp
les
sahf
insl
int3
jnp
cmpsl
jge
or
test
jmp
repnz
nop
arpl
mov
cmc
mov
fldt
dec
rcr
xor
shlb
faddl
cmpsb
inc
jno
xor
xchg
add
ljmp
cmp
mov
pop
into
sarl
dec
mov
jmp
sarl
push
mov
rclb
leave
pop
inc
int
push
idivl
mov
mov
push
push
xchg
push
pop
out
inc
mov
mov
std
dec
jne
hlt
push
xchg
xchg
nop
or
lea
pop
shl
pop
mov
xor
lods
fs
hlt
lea
pop
xchg
jmp
sbb
lret
sbb
mov
repnz
xchg
mov
jo
push
imul
aas
jmp
fsts
sti
sub
test
bound
les
or
pop
adcl
mov
es
in
outsl
jno
push
cwtl
jecxz
fidivs
es
cwtl
cmpxchg
std
insl
cmpsl
not
pop
mov
lds
flds
int
popa
call
jb
dec
jno
xor
xchg
lcall
mov
scas
jge
lods
insb
stos
pusha
ss
and
test
loopne
xchg
mov
data16
or
ret
out
add
mov
sbb
xor
jp
add
ficomps
and
imul
mov
mov
fnstsw
lods
or
int3
in
sbb
shlb
mov
repnz
dec
shl
add
jp
push
and
popa
call
nop
sbb
mov
repnz
fstpl
std
xchg
outsb
lock
pop
jg
int
cmpsl
mov
cmp
aad
ret
sti
out
xchg
xchg
bound
mov
mov
push
inc
dec
lods
cwtl
fdivrl
dec
cmp
insb
incl
pusha
push
pusha
stos
and
maskmovq
notl
lods
test
sub
push
xchg
and
fs
pop
sbb
popf
jecxz
outsl
aas
jmp
xchg
popl
pop
int3
mov
lahf
sbb
rcrl
xor
adc
mov
jbe
ror
and
push
sub
adc
mov
ss
inc
loop
sbb
mov
mov
out
leave
add
aaa
mov
imul
sbb
es
nop
stos
loop
inc
mov
push
mov
or
dec
fwait
mov
ds
dec
stc
sahf
nop
mul
cltd
popf
aaa
fisttpl
sahf
inc
mov
mov
ret
fs
dec
adc
pmuludq
or
xor
arpl
mov
or
dec
lret
nop
jo
orl
lock
jae
fwait
scas
iret
sub
loop
cmpb
and
inc
adc
cwtl
pop
dec
dec
cmp
in
adc
imul
pop
push
cwtl
aas
in
pusha
loop
sub
and
outsl
sub
loop
ss
loope
mov
scas
shll
loope
or
pop
lahf
sub
into
bound
pop
jl
fcmovb
xor
lods
test
scas
dec
dec
push
jnp
adc
call
jb
lock
jo
lret
xchg
add
sti
js
adc
or
popf
pop
push
cmpsl
int3
push
xor
inc
popf
jmp
rcrb
icebp
in
jge
jle
mov
das
incb
shrl
test
push
mov
mov
sub
cmp
hlt
inc
stc
jl
push
ljmp
call
sbb
xchg
and
jb
es
push
or
dec
arpl
dec
sbb
mov
int
ja
xlat
icebp
jmp
ret
add
xor
enter
mov
in
aad
test
mov
cmc
stc
adc
int3
sbb
push
or
mov
mov
insl
pop
loope
mov
js
xor
xchg
fcmovnb
cmpsb
and
loop
cwtl
pop
mov
and
sbb
mov
cmp
mov
enter
mov
flds
push
movsb
ffree
loope
ret
jge
sub
pop
jne
sub
int
sbbl
push
sub
roll
data16
push
add
lret
insb
icebp
lods
std
mov
and
scas
cli
push
add
cmp
lds
hlt
fdivl
add
imul
insb
inc
std
pop
mov
jb
aam
dec
mov
pop
fisttpl
dec
xchg
add
mov
rclb
mov
mov
pop
push
enter
pop
aam
and
aaa
jno
or
insl
out
mov
mov
mov
sub
pop
das
adc
cmpsl
in
imul
out
pop
imul
mov
stc
jo
pop
repz
int3
andb
or
dec
lea
shlb
push
xchg
push
int
cmp
lds
xor
test
aaa
xor
dec
andl
push
bound
push
xchg
inc
and
icebp
inc
mov
mov
inc
and
cmpsl
lret
psrld
jbe
mov
or
repnz
clc
push
pop
pop
sbb
jl
loopne
les
imul
loop
aas
out
leave
xchg
repnz
mov
xchg
push
pop
lret
pop
popf
xchg
testb
insb
cmpsl
add
adc
xchg
jecxz
imul
or
enter
fnstsw
lcall
push
clc
addl
jle
fs
movsb
es
mov
and
negl
inc
pop
or
push
pop
mov
das
iret
xlat
mov
divb
es
sub
push
aam
mov
xor
icebp
cmpsb
xchg
lret
arpl
xchg
mov
shll
lahf
je
test
test
jnp
call
xor
inc
jbe
add
or
add
push
movsb
add
stos
inc
test
adc
je
xchg
aaa
mov
sti
hlt
xchg
xchg
popa
jb
and
xchg
add
movb
mov
mov
les
es
push
inc
dec
add
or
sbb
xchg
mov
adc
push
cmp
adc
mov
add
data16
ret
addb
lock
test
call
imul
mov
xor
mov
lcall
loop
push
push
cld
mov
jno
pop
mov
jnp
loope
lock
arpl
data16
push
movsb
test
cmpsl
dec
movsl
movsb
xor
inc
add
aas
push
xchg
mov
xchg
inc
cmp
push
sub
cmc
sarb
sarl
xor
or
loope
inc
dec
mov
mov
pop
aas
aam
add
mov
and
cmp
pop
mov
popf
movsb
pushl
outsl
aaa
nop
lcall
cmpsb
outsb
inc
pop
int
fwait
pop
popa
aas
jne
xchg
sti
sbb
lret
sahf
lds
sbb
mov
loop
test
dec
xchg
push
scas
in
scas
cmc
lret
fists
lds
data16
inc
mov
gs
cmp
clc
int
mov
and
leave
fcmovnb
sbb
dec
cmp
mov
add
fistpll
cmpsb
imul
iret
pop
ljmp
aaa
ljmp
inc
dec
dec
into
pop
in
aaa
negb
lock
pushf
frstor
jnp
scas
insb
mov
cmp
mov
aaa
sti
addr16
xchg
ficomps
outsb
divl
jae
lods
sbb
push
rcr
mov
es
mov
jmp
xchg
and
lods
insb
cmp
push
insb
int3
sbb
loopne
jge
outsb
xor
pop
test
inc
cmp
jns
and
push
mov
das
scas
pop
lea
mov
mov
sub
popa
add
sti
mov
push
idivb
aaa
jmp
xchg
jge
xchg
jbe
or
add
jnp
or
inc
out
mov
mov
mov
inc
cmp
xchg
idivb
incl
fwait
aam
pop
xor
push
mov
loop
int
cmp
loope
aad
inc
orl
and
mov
or
mull
jmp
fistl
mov
in
movsb
inc
xchg
ja
dec
sbb
pop
nop
in
jecxz
jbe
and
jg
roll
sub
test
popa
mov
ljmp
ljmp
scas
xor
cld
cmpl
or
dec
sahf
ret
mov
lods
jb
and
jo
mov
or
nop
inc
insb
jl
mov
in
repnz
jmp
dec
lea
inc
and
jno
xor
sub
mov
lock
leave
sbbl
adc
les
sbb
subb
jno
push
push
jno
jae
jne
pop
or
jne
cmc
js
lret
and
dec
fmul
jp
es
cmpsb
mov
out
mov
pop
hlt
int3
loopne
test
sbb
cmpsl
bnd
insl
out
cmpsb
or
pop
lock
pop
rcr
rorb
dec
sub
ss
ficompl
pop
pusha
pop
ret
mov
push
push
add
sbb
inc
bound
fs
in
ss
sbb
pop
ja
cmp
gs
xchg
repz
dec
jne
lcall
sar
fwait
je
aad
mov
pop
xchg
fs
xor
or
inc
mov
outsl
lret
fwait
mov
adc
js
or
scas
out
not
jp
popa
push
popl
push
pusha
mov
clc
cwtl
movsb
sub
and
push
adc
jno
jle
lret
push
dec
rolb
lods
jge
mov
and
bound
inc
mov
lcall
ljmp
les
sub
sahf
bound
imul
sarl
or
mov
jno
push
push
jns
out
lods
inc
nop
aas
outsb
fnstcw
ljmp
mov
push
sbb
insb
inc
mov
das
dec
bound
xor
or
rol
cmp
mov
sbb
and
add
xlat
and
cltd
inc
jo
push
mov
jnp
cmp
dec
lret
mov
adc
lcall
outsb
les
or
imul
mov
cmp
jecxz
add
add
movsb
mov
jae
outsl
push
pop
arpl
jp
or
cmc
dec
into
outsb
ljmp
cmp
or
push
in
mov
outsb
pop
das
ja
stc
call
add
into
or
mov
data16
decl
fdivs
push
aad
push
and
push
bound
jle
mov
and
cmp
adc
pusha
jb
fxch
push
adc
fdivr
mov
sub
add
rorl
movsl
test
or
cmc
icebp
xchg
hlt
mov
xor
negl
into
andb
ss
jbe
andl
stos
aad
inc
mov
jns
frstor
pop
into
sbb
add
sub
pop
rcrb
adc
lret
inc
dec
lcall
xchg
xlat
call
test
lret
jns
pop
test
loope
fstl
and
aad
push
xchg
or
push
cwtl
insb
shl
dec
ja
jnp
fadd
sahf
daa
dec
or
jns
aad
movsl
mov
cs
inc
notl
jbe
xor
xchg
mov
cmpsb
adc
aas
xor
cmp
pop
jle
xor
inc
insl
adcl
outsl
rcll
hlt
dec
ljmp
fstp
jno
add
xor
mov
popa
adc
sub
loope
push
cmp
or
cmp
dec
adc
mov
pushf
xor
arpl
jae
js
cmpsl
mov
or
inc
pop
aam
or
imul
xchg
sub
push
addl
dec
fdivrp
jb
adc
inc
cmp
push
lods
dec
lret
dec
int3
andb
dec
or
cmpsb
cmc
sub
sub
sbb
int
lea
push
mov
iret
inc
es
mov
mov
jno
xchg
pop
cwtl
mov
xchg
mov
fs
push
ret
dec
fsts
fninit
jns
sub
inc
push
dec
sub
sahf
test
mov
mov
in
cmp
push
xchg
arpl
sbb
roll
mov
lods
and
inc
dec
push
test
inc
adc
adc
stos
lods
push
cmp
mov
loopne
pop
insb
jbe
or
xchg
push
or
popf
scas
dec
pop
adc
sub
mov
les
imul
mov
inc
jg
repz
xchg
lret
cwtl
popa
adc
mov
stc
jg
stc
jl
jp
mov
and
jecxz
ljmp
xor
ss
call
push
int3
repz
inc
les
pop
add
jg
cmp
push
lods
sub
adc
sbb
rorb
insb
outsb
insb
outsl
ror
cmpsl
cmpsb
xchg
push
cmp
push
lock
mov
les
nop
enter
sub
rolb
cwtl
xor
leave
stos
sti
inc
push
push
stos
push
cmp
push
cmpsl
rcl
mov
and
mov
sub
scas
pop
popl
sub
popa
popa
xchg
pop
mov
lds
xchg
xchg
cmp
ja
mov
into
mov
inc
xor
xor
jp
addr16
out
popa
inc
ja
add
or
or
cmp
std
sarl
inc
lea
js
aad
jg
jg
inc
pop
fsubrp
les
and
jecxz
sahf
outsb
arpl
iret
cltd
ret
out
iret
shrb
mov
imul
push
testb
das
mov
inc
mov
push
adc
int
call
mov
scas
add
lds
or
inc
add
and
and
jp
loop
in
xchg
lods
imul
in
lods
cs
mov
mov
xchg
mov
pop
cmpb
rcrb
jae
cld
outsb
and
adc
mov
nop
add
xor
pop
in
push
clc
out
das
lret
adc
test
out
test
faddp
jbe
jo
in
pop
adc
xor
adcb
adc
xor
add
adc
dec
mov
cmc
dec
cmp
pop
jg
movsl
adc
jg
inc
aad
repz
outsl
mov
add
inc
and
jbe
xchg
adc
ljmp
cltd
mov
hlt
sub
lcall
xchg
jecxz
pop
cli
xor
in
fildll
or
add
add
daa
and
adc
frstor
push
lea
pop
pop
pop
adc
dec
cli
sahf
xlat
out
or
pop
and
pop
mov
mov
jmp
jb
popf
lret
js
and
loop
jae
jns
mov
aas
loope
sbb
cmp
test
test
divb
add
cli
dec
mov
ljmp
push
cltd
lds
mov
loopne
and
jg
sti
pusha
push
in
movsb
inc
out
test
and
sub
lea
sbb
mov
dec
mov
inc
adc
leave
fiadds
mov
and
popf
imul
lcall
push
popf
inc
sarl
shlb
adc
popa
stos
and
pusha
les
mov
test
mov
testb
dec
xchg
pop
sarb
adc
ret
decl
dec
in
add
mov
sarb
insl
imul
pop
mov
stos
push
or
std
pushf
incb
mov
mov
orl
ret
lahf
mov
dec
and
sti
pop
ja
sub
lock
lret
inc
dec
push
add
dec
xchg
xor
or
enter
in
lock
cli
add
leave
nop
mov
xchg
scas
out
mov
pushf
lods
cmp
cmp
repnz
lds
addl
mov
cmpb
out
loop
xchg
in
and
repz
in
out
dec
cwtl
jle
push
mov
pop
mov
iret
icebp
js
push
jl
pushf
adc
jge
mov
stc
xor
lret
dec
cmpsl
add
lret
loopne
sarb
jae
dec
testl
jecxz
out
and
cmp
xchg
mov
mov
pop
jge
sbb
inc
inc
jae
sahf
loope
stc
sub
rcrb
addr16
lret
pop
xchg
adc
mov
xchg
or
sub
jmp
out
inc
cltd
mov
movsl
xchg
loop
fldl
loop
fsubrs
add
and
loopne
cmc
cmp
cmp
pop
loope
gs
insl
out
scas
mov
imul
pop
jnp
data16
test
in
xor
mov
int3
sbb
mov
push
imul
mov
cmc
enter
arpl
ret
dec
or
fmull
fnsave
mov
shll
jle
mov
ja
fildll
mov
mov
sbb
push
out
adc
test
mov
jmp
call
mov
mov
out
push
jmp
mov
sbb
adc
and
hlt
mull
push
mov
lods
clc
xchg
sbb
xorb
push
pop
lods
pushf
repz
ja
gs
stos
shrl
lds
and
mov
push
fwait
mov
out
inc
push
sti
lock
inc
lahf
and
pop
mov
jns
mov
fcmovnu
fisubl
xchg
xor
inc
push
push
or
outsb
mov
jge
loop
xchg
xorb
jl
lret
mov
xchg
jo
int3
sarb
in
mov
xorl
sbb
inc
push
es
iret
sbb
sub
fdivs
dec
jg
cli
cli
into
pop
xor
jge
outsb
jno
fimull
in
pop
rdmsr
ja
cld
jne
aad
jne
xacquire
mov
cmc
push
and
add
sarb
jmp
mov
and
adc
xchg
pop
push
mov
jbe
sub
icebp
jae
je
and
cmc
adcb
cmp
lret
popa
dec
std
push
and
aaa
jns
mov
cmp
int
pop
cmpsl
pop
mov
mov
xchg
int3
aaa
leave
xchg
xchg
inc
fdivrs
addr16
aaa
in
sahf
dec
jnp
repnz
pop
mov
cltd
push
pop
cmpsl
cmc
add
mov
aam
sbb
insb
in
dec
sub
mov
movnti
dec
mov
jg
fldcw
mov
mov
pop
paddsb
fdivrs
jb
jb
pop
mov
mov
sbbb
call
dec
dec
dec
cmp
les
mov
jg
pop
icebp
aad
les
insb
and
mov
fnstcw
nop
loop
nop
out
xor
rcr
dec
ja
gs
jne
pop
mov
test
cmp
subb
xlat
testl
out
movsl
jecxz
mov
jb
xor
je
add
mov
out
sbb
das
ror
shlb
pop
jl
sub
sub
dec
adc
jg
mov
cmpsl
mov
push
or
inc
mov
pusha
push
mov
loop
push
loop
cmp
loopne
movb
lret
cld
hlt
ret
push
xor
add
test
cli
mov
mov
je
jns
in
cmp
push
gs
lcall
in
fstpl
jg
jb
push
xor
stos
mov
rolb
mov
enter
mov
ja
loop
lret
add
dec
sub
shrl
movl
mov
mov
pop
enter
addr16
shlb
test
add
ja
arpl
xor
xor
pop
andb
out
xor
jne
pusha
subb
jo
sub
rclb
cmp
out
adc
repnz
dec
or
loopne
cld
jno
insl
jl
sahf
sar
dec
outsb
dec
aas
dec
xchg
sbb
jge
sar
out
sub
fwait
inc
xchg
dec
loopne
xor
mov
sbb
sti
repz
loop
xor
xor
sar
adc
xor
mov
xor
cwtl
test
leave
jns
int3
mov
jne
push
ss
pop
pop
mov
inc
ja
jecxz
adc
sti
mov
out
aad
xchg
sbb
sbb
clc
lock
aad
adc
mov
shrl
fisttpll
sub
pop
pop
fwait
push
test
mov
jp
mov
or
and
pop
sbb
xchg
or
fidivrs
sub
sbb
aad
mov
test
inc
xor
adc
mov
dec
sub
out
test
leave
sti
test
and
sub
mov
mov
inc
or
mov
mov
int
sti
ja
add
xor
add
gs
xor
sub
xchg
fwait
xor
popa
inc
mov
repnz
and
push
inc
jl
inc
lret
and
add
jl
leave
lds
cmpl
jb
cmp
mov
jmp
mov
or
sti
sub
jne
stos
or
jnp
add
rcrl
syscall
cmc
xor
ret
fwait
push
dec
xchg
jmp
mov
lds
mov
jecxz
fcompl
scas
loop
push
fldt
cmp
mov
fisttps
out
and
push
or
test
movsl
cwtl
mov
and
out
shrb
rcrb
dec
movsb
rol
inc
jae
adc
jp
es
cmpsl
mov
jns
and
dec
fisttps
scas
shll
mov
inc
ss
push
xor
bound
mov
aas
xor
cmp
inc
xor
and
xor
stc
cld
adc
arpl
ficomps
ss
jns
les
gs
mov
xchg
loopne
sub
or
mov
inc
adc
insl
mov
mov
cmp
fldenv
jle
xchg
xor
rol
popf
jae
andl
lea
xor
andb
daa
cmp
test
dec
dec
leave
js
cmpb
iret
cmc
fisubs
stc
mov
into
arpl
and
hlt
add
and
jno
mov
or
loope
jb
gs
mov
shll
ret
mov
daa
pop
fsubl
loop
dec
push
iret
sbb
xor
inc
or
mov
xor
data16
gs
mov
cmp
dec
test
xor
cmp
pop
int3
std
jmp
lea
jno
add
mov
jl
sbb
adc
push
push
fadd
icebp
lods
loopne
shlb
test
enter
pop
sbb
negl
sbb
je
add
fucomip
mov
stos
aam
lods
dec
sub
nop
mov
dec
enter
or
repnz
imul
xorb
jne
mov
movsl
ljmp
sbb
and
push
push
sbb
or
fiadds
imul
stc
cltd
les
pop
jo
xorb
inc
js
jecxz
push
out
mov
or
inc
sti
pop
movsl
lock
aam
data16
jne
sbb
icebp
ror
jecxz
xor
hlt
shl
adc
loope
fstl
fs
xchg
xor
popa
not
pusha
out
and
or
loopne
ss
pop
cmc
and
mov
jb
nop
mov
inc
imul
popa
and
sub
into
xchg
push
repz
out
add
dec
pushf
mov
jle
sub
mov
es
roll
inc
or
sub
jae
pop
pop
push
rol
ds
push
aad
outsl
fimull
aam
sub
and
push
xor
mov
push
inc
sub
xor
daa
push
out
imul
test
movsl
aad
inc
repnz
stos
xor
shlb
lea
cmpsl
pop
mov
in
jbe
movsl
adc
or
or
pop
jnp
fistl
clc
pop
dec
push
push
add
pop
sbb
idivb
inc
cs
jnp
imul
xor
sahf
testb
mov
cmpl
inc
xor
js
movsl
es
stos
sbb
clc
dec
repnz
jae
sub
in
fisubrl
cmp
or
jae
test
out
out
sbb
pushf
add
mov
xchg
in
mov
movsl
jbe
lcall
test
ljmp
outsl
pusha
shrb
call
imul
movsb
popf
pop
test
aas
lods
jle
test
jg
pop
lds
rclb
in
pop
jo
rclb
or
in
call
inc
inc
fcompl
in
lret
push
mov
or
leave
jmp
sbb
icebp
shlb
outsb
xor
insb
outsb
int3
in
fisubrl
push
bound
xchg
add
outsl
fs
xor
fistpll
out
xor
cmp
rcr
je
pop
dec
xchg
loope
dec
xchg
daa
mov
pop
outsb
std
mov
ret
jno
out
dec
xchg
lret
and
xor
aas
in
sbb
xchg
call
jbe
xchg
mov
xor
iret
xchg
pop
out
sub
imul
cmp
subl
or
or
nop
stos
mov
xor
lcall
lret
push
push
cmpsl
out
push
dec
sbb
dec
ljmp
test
add
jmp
inc
add
jg
cld
fsubrl
cltd
fwait
jae
xchg
sbb
loopne
fwait
add
test
int3
dec
fwait
mov
cld
xchg
lret
jns
and
jb
push
test
sbb
xchg
pushf
sub
cmpsl
jb
pop
sbb
push
push
jbe
sti
sahf
punpckhbw
mov
inc
fists
mov
mov
popl
mov
cld
inc
lods
pushw
lret
sub
je
pushf
xchg
push
movsb
in
sub
fstps
aad
pop
ds
aad
jl
push
addr16
and
cld
stc
fwait
xor
lret
lock
cmp
arpl
stc
lret
in
jl
push
cmp
iret
in
sbb
out
pusha
scas
mov
xor
arpl
sarl
xchg
in
lret
sarl
jae
hlt
int3
out
int3
push
into
insb
jmp
sbb
dec
add
jae
movsl
lret
imul
fstp
push
rorb
jmp
scas
jno
mov
test
movsl
repz
imul
inc
inc
xor
pop
insb
inc
loop
mov
inc
decl
test
push
lret
loop
enter
mov
mov
or
lret
dec
jge
outsl
repnz
sbb
cmp
jne
xlat
test
sub
lret
jge
sbb
lds
std
ja
sbb
jns
sahf
lods
lahf
mov
mov
js
clc
inc
rclb
inc
mov
out
pop
into
fildll
sub
sbb
inc
sbb
sbb
xchg
cli
xchg
and
pushf
movsl
cmp
das
adc
ss
ss
aaa
mov
out
add
inc
inc
cld
cmp
cld
gs
stc
cmc
jbe
rolb
mov
ja
dec
fwait
cld
in
repnz
pop
rcr
xlat
mov
push
push
call
push
ret
cld
xorl
pop
or
fistpl
rcrl
pop
cs
push
lahf
and
je
testl
lret
xor
ljmp
and
dec
dec
xchg
and
loope
sahf
call
mov
jbe
mov
sub
push
test
sbb
push
lret
into
cs
std
loopne
mov
cmpl
cmpsl
aas
mov
es
xor
lcall
xor
push
add
cmp
mov
pop
mov
imul
pop
and
lock
mov
dec
mov
mov
or
insb
cwtl
mov
mov
insb
lret
xlat
addr16
push
mov
addr16
test
push
jle
aad
sti
stos
mov
clc
pop
mov
lds
xor
mov
mov
fildl
aam
flds
mov
adc
jg
shll
cmp
mov
fdivs
aam
adc
jbe
push
xchg
mov
mov
imul
aas
in
sub
mov
push
push
xor
push
and
call
mov
sahf
xchg
jbe
jecxz
pushf
sarb
dec
lcall
xchg
stos
mov
adc
imull
sti
jle
inc
push
mov
sbb
inc
addr16
pop
ror
mov
push
adc
iret
in
dec
jns
sti
rcrl
dec
rolb
sti
jo
cmc
xor
pop
fsub
add
jmp
cmc
decb
arpl
data16
into
mov
adc
pop
jnp
lahf
addr16
popa
mov
mov
add
lcall
mov
negl
popf
enter
push
clc
inc
pop
xor
cmp
pop
rcrb
data16
mov
jle
or
add
jmp
in
scas
outsl
ret
fwait
and
cmp
lea
inc
out
addb
adc
cwtl
stc
sub
fidivrs
add
ljmp
jbe
cmp
inc
adc
add
xchg
daa
mov
push
jmp
test
out
lcall
jmp
scas
mov
adc
add
cmpb
jbe
add
int
pusha
inc
stos
inc
cwtl
inc
pop
pop
pop
ds
pusha
stos
push
in
out
cmp
xor
pushf
add
adc
out
adc
leave
jnp
roll
in
mov
test
neg
loop
xchg
into
dec
loopne
cmp
icebp
popa
js
lods
imul
jns
xchg
outsb
or
in
js
lods
lret
xchg
insb
pop
cmp
popa
pop
cmp
xchg
xor
xor
sub
jb
arpl
xor
pop
sarl
les
jge
mov
stos
les
inc
adc
ret
aaa
call
inc
insl
push
cmpsl
mov
sbb
in
inc
lret
xchg
xchg
sub
int
xchg
mov
push
xchg
lahf
jns
push
and
push
push
push
xchg
jg
lock
arpl
cmp
cmpsb
lods
cmc
inc
xor
add
push
clc
mov
je
pop
push
inc
cmp
sbbb
jp
addl
addb
jge
out
mov
sti
popf
jge
std
mov
dec
mov
data16
pushf
sbb
mov
xchg
aaa
insb
inc
pop
mov
dec
and
jns
cmpsb
sbb
mov
ret
decl
xchg
mov
inc
mov
xor
lods
pop
idiv
out
in
and
sub
faddl
in
fistpl
rorb
push
mov
xchg
in
fidivl
adc
call
test
ds
pop
out
das
sbb
or
pop
xchg
pushf
and
jae
pushf
lock
lds
cmp
clc
in
fnstsw
scas
or
fdivrs
stc
loop
push
pop
out
mov
ds
mull
push
rol
int3
sub
adc
sar
inc
jle
movsl
jnp
xor
xchg
push
inc
mov
mov
int
sar
mov
sbb
fldt
adc
call
mov
sahf
into
in
sbb
mov
js
adc
jge
cmp
mov
fs
test
and
ja
in
sar
cmp
xchg
and
negb
bnd
inc
add
cmp
pusha
cwtl
cmp
sub
popf
add
call
jg
adc
cld
loope
pop
rcrb
lods
mov
lea
roll
or
cmovb
mov
lcall
in
pushf
icebp
and
sarb
popa
cmp
pop
jne
out
orb
mov
and
jne
jp
cmp
insl
les
sahf
lods
out
xor
mov
mov
jmp
mov
fs
push
jecxz
bound
jg
iret
cwtl
cmp
ror
shr
in
movhps
mov
sbb
imul
jp
fistl
in
dec
sbb
les
cmp
lret
and
and
das
test
cltd
mov
out
imul
push
stc
aad
xchg
mov
cmp
ljmp
cltd
int
xchg
dec
loope
cmp
in
insb
das
sbb
sbb
rorl
add
or
mov
push
xchg
inc
incl
movsl
pop
cwtl
mov
pop
inc
leave
or
mov
mov
loop
mov
mov
mov
test
mov
add
pop
and
addb
xchg
test
pop
addb
in
ret
ret
ret
daa
push
jnp
push
add
popf
sbb
mov
gs
lods
fstl
mov
out
pop
dec
dec
repz
or
push
insb
aam
test
push
int3
gs
loopne
cmp
xor
add
xchg
pop
push
hlt
ja
stos
mov
mov
mov
std
in
daa
mov
xor
xor
jns
xchg
inc
xor
out
push
add
repnz
sub
fbstp
popa
push
fcompp
mov
int
jno
xor
push
pop
fldcw
repz
adc
shll
aad
and
dec
cmp
adc
stos
xor
sbb
or
jne
hlt
insb
cmp
mov
arpl
or
imul
or
ljmp
dec
jno
lret
sub
push
mov
ja
inc
rorl
fldcw
xchg
add
dec
dec
jecxz
lds
stc
flds
or
notb
gs
fisttps
jo
cmc
inc
leave
adc
leave
inc
xor
out
inc
iret
mov
or
aas
dec
and
js
pop
ret
scas
clc
loop
sub
adc
push
loope
add
and
jp
cwtl
adc
gs
mov
jl
and
mov
pushf
test
lds
mov
mov
fistl
shll
fs
shrl
out
pop
add
es
mov
popa
or
mov
ficoml
mov
inc
push
push
push
test
mov
mov
xchg
roll
aam
or
add
out
dec
push
lods
fcmovnu
xor
mov
cltd
jae
and
add
dec
add
jmp
xor
in
fisubrl
iret
lods
jno
pop
or
repnz
sub
xor
imul
repnz
sarl
jg
test
mov
adc
sub
or
mov
inc
sar
insl
lea
ret
andb
andl
outsl
fldt
jbe
jmp
mov
repnz
or
jns
jae
sbb
inc
push
add
mov
pusha
adc
into
js
mov
adc
lock
pop
fstp
jecxz
imul
mov
arpl
lods
xchg
pop
lods
lahf
cmp
repnz
xorb
mov
push
xor
dec
pushf
bound
pusha
outsb
stos
xor
mov
pop
or
inc
cli
adc
or
sub
cltd
daa
or
mov
inc
xor
popa
popf
inc
jmp
jmp
jecxz
mov
ja
adc
loop
mov
fildl
inc
faddl
jbe
mov
adc
mov
je
hlt
call
add
mov
lods
mov
ret
out
fcompl
inc
jb
mov
mov
mov
sub
and
push
xor
mov
mov
mov
xor
xor
cs
cmp
sub
movsl
or
sub
mov
inc
rcrb
xchg
dec
cwtl
mov
and
add
xchg
lea
pop
pop
mov
je
sub
icebp
add
mov
lahf
fs
push
pop
movsb
mov
rorl
mov
insb
push
fistpll
sahf
ret
gs
and
cmpb
dec
mov
cs
insl
dec
mov
outsl
inc
sbb
adc
xlat
pop
iret
jmp
cmp
out
fwait
sbb
xchg
ljmp
mov
or
je
cmp
jae
enter
cmp
push
orl
rorb
cmpsb
or
ja
adc
pop
mov
sbb
lea
pop
xchg
pop
add
pop
cld
sub
sbb
add
mov
je
lds
and
aad
jb
lcall
in
jns
push
inc
pushf
test
jp
mov
and
jns
stos
stos
jle
inc
jle
dec
lahf
fbstp
int
xor
adc
sub
pop
out
sub
add
out
test
dec
mov
test
int3
push
adc
fisttpll
xchg
and
jns
aaa
stc
mov
xlat
pusha
fwait
push
add
or
fiadds
adc
jns
adc
sub
pop
mov
ljmp
jne
les
xchg
js
rolb
lock
sbb
sahf
or
pop
add
mov
ret
xchg
and
dec
adc
call
inc
shll
sbb
mov
cmp
rcl
fldcw
jp
pop
lea
mov
sub
and
push
scas
adc
push
ljmp
inc
into
faddl
dec
adc
into
push
fldt
sub
sbb
jge
pop
ret
test
and
mov
addr16
sti
mov
cli
scas
rorb
call
test
sub
jecxz
cltd
xor
xchg
push
xlat
mov
iret
jp
mov
cmpsl
xchg
jl
push
lret
push
sbb
loope
int3
ljmp
adc
ljmp
adc
or
xor
cmp
mov
inc
mov
out
lock
mov
inc
cmpsb
mov
add
test
lret
add
jo
and
fldcw
mov
ret
imul
mov
inc
dec
popa
sbb
divl
add
jnp
inc
push
aaa
mov
dec
fadds
decl
enter
test
inc
rolb
xor
out
out
js
dec
add
xor
stc
jae
xor
call
clc
jo
sbb
mov
cmc
shll
test
sbbb
rcr
rorb
lahf
add
incl
and
loopne
ret
pop
gs
int3
sbb
mov
pop
jns
push
xchg
cld
loopne
data16
lock
pushf
imul
test
mov
out
adc
fs
inc
jg
loope
pop
sbb
stos
outsb
push
inc
rorb
push
scas
test
push
lock
js
pop
popa
jl
das
pop
or
jl
rcrl
loope
nop
inc
or
cmpsb
xor
mov
sti
jne
xchg
hlt
lods
test
test
int3
das
mov
lcall
xchg
cmpsb
cmpsb
rcrb
add
cmc
lods
movsb
mov
mov
and
add
ljmp
ljmp
int
mov
add
lahf
sbb
mov
test
mov
bound
ret
pop
inc
xchg
or
dec
hlt
add
imul
push
inc
call
inc
sbb
mov
cld
sbb
pop
cmpsl
pusha
fidivrs
dec
xchg
pop
loop
repz
outsl
pushaw
iret
jmp
mov
dec
scas
or
ret
loop
lcall
fwait
insl
in
popl
aad
lods
data16
mov
inc
das
adc
lret
pop
push
and
loopne
rorb
jmp
dec
xchg
in
int3
stos
mov
pop
xchg
mov
jnp
add
out
pop
mov
push
ret
arpl
insb
std
mov
sti
lret
inc
and
inc
imul
add
mov
cmp
mov
add
std
lea
out
ror
adc
das
scas
pop
outsb
loopne
setne
sub
cmp
imul
scas
xor
insl
add
xchg
push
test
stc
cld
dec
pushl
push
push
popa
shl
mov
or
cmp
loopne
cmp
pop
mov
mov
adc
add
cld
subl
icebp
jb
sbb
test
xchg
in
aad
out
daa
mov
aaa
sbb
adc
lcall
int3
je
inc
push
scas
and
pop
addr16
in
fsts
or
leave
outsb
cmp
mov
lods
imul
mov
aas
orb
cmp
and
mov
clc
mov
fisubrl
jmp
dec
mov
into
aam
aad
aaa
sbb
aas
lret
inc
fldenv
mov
xor
ss
jne
enter
test
pop
sbb
dec
cltd
jle
sub
cmp
mov
mov
mul
mov
jae
stos
lahf
pop
mov
mov
repnz
outsl
dec
pushf
mov
out
fs
outsl
mov
and
fdivrp
xchg
es
loop
dec
and
dec
outsl
and
rolb
ret
dec
insl
lcall
lock
addl
cmpsb
jnp
dec
shrb
imul
jle
or
nop
jb
fistpl
sbb
enter
jnp
daa
push
or
adc
mov
pop
jb
stc
fimuls
call
bound
ss
add
mov
add
push
jecxz
pop
fidivs
rolb
add
movsl
loopw
pusha
stos
push
mov
xor
aaa
pop
imulb
pop
pop
and
lds
popa
fildll
jae
jp
imulb
js
mov
xchg
test
mov
loope
int3
cmc
int3
sti
stos
stos
inc
rsqrtps
dec
jg
daa
mov
fisttps
sbb
fcomps
mov
push
out
lock
push
adc
xchg
fs
imul
pop
rclb
data16
cmp
movsl
repnz
insl
pop
mov
sbb
scas
rcl
sub
sbb
andl
jmp
mov
xor
jge
xchg
jno
clc
mov
cmp
fisttps
push
insb
insl
xor
enter
pop
push
sbb
sarb
lds
mov
push
cmpsl
imul
dec
out
cmp
nop
sbb
mov
push
int3
flds
xor
pusha
or
int3
mov
pop
mov
adc
mov
cmp
out
lds
icebp
add
xor
add
inc
movsb
or
push
subb
js
aad
cmp
mov
sahf
int3
mov
in
rolb
xor
insl
mov
jmp
cmp
jnp
lret
add
or
jecxz
push
push
imul
aad
divb
inc
insb
and
cwtl
cmp
shl
jbe
inc
lods
sahf
xchg
fiadds
and
fdivr
push
push
test
lret
sbb
mov
in
pushf
leave
push
repz
mov
jbe
aam
sbb
fnstenv
mov
xchg
out
cmp
jl
lods
jae
aad
sahf
stos
dec
add
sub
cmp
xor
jecxz
cld
rol
mov
inc
pop
negb
sub
or
daa
fsubl
adc
js
pop
gs
xor
outsl
in
ss
jge
or
cmp
mov
add
push
test
repnz
decb
fs
sbb
cmp
mov
xchg
or
lods
mov
jae
ljmp
in
sarb
xlat
mov
stos
add
adc
and
mov
pop
pop
lods
js
repnz
loopne
jnp
shlb
adc
xchg
dec
movl
and
push
mov
test
pop
and
fidivs
dec
inc
or
mov
push
xchg
sub
pop
cltd
dec
pop
loop
out
cltd
aaa
sbb
mov
scas
lcall
dec
mov
insb
subb
lret
test
sbb
mov
popa
mov
cmc
inc
dec
cltd
out
sbb
and
call
lcall
pop
inc
imul
sbb
nop
inc
jo
fwait
mov
fwait
push
cmc
mov
pop
and
push
popl
insb
popa
sub
mov
mov
push
movsb
and
fwait
sbb
movsb
jnp
or
outsl
adc
ret
sub
pop
dec
lcall
xchg
das
pop
xchg
cmp
dec
cmp
sbb
fcoms
daa
push
adc
in
jge
adcb
adc
xor
adc
adc
jnp
xchg
ja
dec
insb
inc
mov
push
dec
loop
xchg
iret
sahf
xchg
push
pop
add
push
mov
adc
jmp
jnp
cmp
dec
or
imul
add
xchg
addw
popa
daa
mov
clc
adc
call
jecxz
pop
mov
sub
test
ds
dec
jns
in
xchg
mov
int
mov
cmp
jecxz
pop
sahf
sahf
jge
mov
push
xchg
push
or
out
or
movsb
insb
jmp
shll
xor
movb
dec
fstps
cmpsb
add
pop
sub
mov
pop
or
andb
or
fidivl
mov
hlt
or
mov
call
push
loope
mov
je
dec
jecxz
daa
xor
and
push
inc
mul
fisttpl
rorb
inc
jmp
shl
jg
mov
pop
shll
outsl
test
bnd
add
lds
push
inc
mov
lret
xchg
inc
testb
fcoms
pop
cmc
mov
jg
aaa
bound
push
aas
push
push
dec
add
repnz
pop
daa
insb
int
mov
dec
sbb
mov
sbb
or
fcmovnu
cmp
inc
dec
frstpm(287
mov
lret
jp
lock
imul
dec
movsb
push
mov
push
push
loope
scas
push
add
jle
inc
dec
outsl
mov
in
cld
jl
ss
jbe
pop
shrl
add
fdivrs
stos
jle
jecxz
incb
cltd
push
sbb
out
mov
or
xorl
into
xchg
adc
mov
enter
pop
mov
dec
jno
jns
fxch
push
cmp
ds
dec
mov
ja
jg
mov
out
aas
orl
mov
inc
outsl
pop
aad
xchg
lods
dec
stc
shlb
jle
xchg
push
stos
daa
fwait
stos
push
stos
incl
leave
insb
out
lods
push
cmpsb
xor
or
xchg
add
adc
aas
push
mov
imul
xchg
iret
jp
inc
addr16
jp
sub
sub
xor
cmp
dec
jle
add
xchg
xor
mov
jb
pop
xor
pop
or
jg
push
mov
and
jo
jmp
call
sub
xchg
das
mov
stos
je
js
insb
dec
push
xor
inc
into
ret
into
js
mov
add
mov
iret
pop
push
daa
inc
cmp
push
clc
fwait
sub
sbb
lahf
jns
notl
push
sbb
xchg
sbb
xchg
mov
call
fdivl
cmp
mov
mov
push
in
imul
int3
and
mov
xor
sarl
dec
jae
lret
js
mov
xchg
gs
and
push
and
push
lret
push
xorl
scas
pop
loopne
or
ljmp
xor
mov
push
stos
fwait
and
inc
sub
ljmp
loopne
dec
cli
outsl
insw
outsb
inc
and
cmp
sti
cmpl
jbe
mov
and
lock
inc
sbb
dec
lea
push
jo
mov
mov
sbb
xchg
stc
mov
and
movsb
rol
insl
inc
shrl
mov
aaa
mov
push
in
dec
dec
dec
dec
and
inc
pop
int3
mov
rcl
mov
xor
repnz
inc
push
enter
sub
int3
js
punpcklbw
cmp
sbb
lods
cmpsl
je
cltd
or
insl
jo,pn
inc
xor
mov
int
scas
out
xchg
sbb
push
dec
mov
dec
mov
adc
hlt
sbb
or
std
into
sub
xchg
add
popw
outsl
push
fistps
push
jnp
lods
sub
addr16
lcall
in
push
aad
mov
ret
rcr
ja
dec
mov
aas
in
fdiv
cs
sub
popf
out
or
aad
mov
cmp
gs
hlt
fcom
int3
dec
mov
imul
out
mov
push
cli
stos
outsl
lods
mov
sbb
repz
mov
fdivrs
pop
sti
cmpsb
xor
push
andb
out
or
add
dec
pop
add
stos
mov
add
popa
add
push
gs
cmp
adc
push
fwait
into
inc
mov
mov
int3
sub
or
add
sub
or
add
jle
adc
insb
out
jnp
sub
orb
sbb
fsubl
repz
imul
dec
mov
jnp
sbb
sbb
xor
in
pop
and
cmp
dec
int3
lret
or
enter
push
lds
sti
lcall
adc
jno
mov
in
insb
dec
imul
lock
test
ficoml
adc
pusha
icebp
into
sub
divb
rcll
jmp
test
das
stc
adc
xor
jmp
mov
push
pop
or
xor
es
push
rorl
scas
xor
jmp
mov
adc
pop
or
fcmovnu
push
or
lea
push
repz
add
sti
mov
mov
lret
in
xchg
out
imul
cltd
xorb
xor
inc
push
mov
es
outsb
xor
sti
dec
xor
out
push
jp
pop
add
sbb
stos
dec
jno
test
xchg
out
xor
adc
je
or
jg
sbb
dec
push
or
clc
push
mov
sahf
mov
add
fdivrl
inc
fsubr
cmp
sub
sub
xchg
cs
push
test
xchg
data16
fwait
sti
pop
jnp
xor
and
lods
shl
jo
lahf
adc
mov
cltd
lds
lahf
stc
push
adc
cmp
ret
dec
pop
lahf
insl
scas
push
or
cmpsb
xor
clc
fisubrl
stc
std
or
cli
pushf
aas
pop
mov
xchg
ss
sti
loop
mov
popa
cltd
out
xor
insl
mov
inc
add
imul
sbb
xor
jle
cmp
push
pop
and
or
push
stc
dec
push
nop
mov
xorl
xchg
fcoms
or
jmp
aad
add
sbb
test
add
lahf
mov
xchg
mov
repz
pop
clc
bound
jmp
dec
pop
insb
sub
data16
ffreep
ret
xchg
add
roll
gs
fwait
jae
lret
shlb
xchg
xchg
call
add
fisubl
ljmp
mov
in
lock
adc
xchg
push
cmpsb
stos
dec
test
jecxz
loop
mov
lcall
jnp
adc
int
xchg
mov
std
mov
xchg
or
pop
xchg
sti
add
cmp
ja
mov
lcall
or
arpl
jo
jg
fcomps
in
cmp
cmp
call
mov
or
or
addr16
pop
mov
fistpll
stos
cwtl
negb
xchg
pop
sbb
xchg
lret
jns
jnp
lahf
scas
adc
aam
imul
pop
shll
sbb
add
inc
vunpcklps
rcll
and
cmpsl
lcall
dec
aad
mov
push
leave
jns
adc
mov
insb
in
popa
mov
mov
mov
pop
sub
dec
push
lods
int3
fistps
fs
mov
fistpll
popa
push
pop
or
mov
cld
cmc
out
sbbl
pop
mov
push
or
inc
adc
jbe
inc
lds
lret
out
push
stc
lock
test
mov
stc
lds
jg
or
cmc
rorb
dec
mov
bound
scas
push
cmp
fcompl
push
push
ss
in
push
pop
sbb
in
jp
jnp
and
pusha
add
pop
jnp
into
jo
xchg
push
cmp
test
mov
dec
push
ret
addr16
dec
or
pop
sti
sub
sbb
int3
mov
pushf
ljmp
jae
adc
sbb
xchg
leave
test
shl
imul
mov
fdivrs
das
dec
fdiv
sub
mov
jle
sbb
call
add
pop
aas
stos
cld
cmp
xor
jo
stos
adc
imul
push
rol
push
jo
mov
arpl
dec
xchg
add
push
sbb
loop
testl
or
rcrl
dec
xor
jbe
adc
enter
fs
lret
adc
pop
jae
pop
adc
rorb
lock
jae
out
mov
pop
mov
test
in
repz
jne
aad
pop
push
dec
xchg
mov
cld
mov
cmp
mov
lahf
enter
jo
cmp
fadds
lcall
jo
repnz
jl
ljmp
test
popf
sub
int
push
push
in
dec
sub
test
jbe
and
mov
test
adc
in
dec
repnz
mov
sti
outsb
fldt
mov
mov
pop
inc
xor
enter
arpl
out
in
aam
xchg
and
pop
mov
and
pop
out
imul
sub
in
cmpsl
ret
sbb
rorl
pop
fdivrl
dec
add
mov
and
xlat
push
inc
out
sarb
lcall
mov
fsubl
icebp
mull
sbb
and
inc
popa
sub
add
lahf
inc
mov
or
fwait
enter
js
fldl
jmp
push
in
aam
rorl
clc
cmp
dec
push
shr
adc
dec
mov
or
out
fildll
cltd
repz
jp
jmp
pop
mov
push
sub
push
in
inc
rcll
xchg
jl
ret
sbb
mov
xor
pusha
loope
dec
sub
inc
xor
xlat
in
jmp
lock
push
adc
test
aam
adc
movsl
cmp
sahf
inc
movsb
das
jl
jmp
adc
or
ja
push
mov
scas
cmp
outsl
test
out
shrb
fstpl
inc
push
xchg
repz
pop
dec
xor
push
inc
mov
jecxz
scas
scas
add
sub
iret
mov
adc
aam
cwtl
dec
aaa
lret
or
mov
rclb
mov
pop
xchg
aaa
xlat
fiadds
pop
jne
andb
inc
clc
fcompl
ds
xor
cmp
arpl
lahf
cld
bound
mov
ds
subl
add
jns
add
mov
add
inc
jbe
pop
cmp
nop
xor
dec
fnstsw
pop
mov
mov
leave
lock
jle
scas
or
jle
mov
cli
mov
sub
ss
mov
ds
jnp
mov
mov
inc
test
out
jl
jmp
lods
pop
sbb
mov
sbb
jge
push
daa
shrb
mov
loop
lea
or
jb
int3
adc
pop
mov
add
inc
je
decl
fucomp
push
xchg
mov
icebp
inc
loopne
outsl
or
push
pop
scas
xchg
fiaddl
shrl
aas
aas
popf
pop
xor
jmp
push
xor
inc
rolb
mov
mov
mov
mov
fld
pop
loop
mov
jle
stos
pop
iret
lahf
pop
loope
int
jl
inc
add
cwtl
bound
pop
mov
imul
mov
mov
jns
popf
js
adc
sbb
dec
into
inc
mov
push
iret
mov
rcr
in
ss
add
stos
dec
push
aaa
adc
push
daa
loopne
mov
lods
or
fst
lods
sub
xchg
push
cmpsb
xchg
popa
frstor
icebp
loop
lods
aaa
adc
inc
cmpsl
shrb
in
pop
mov
sub
mov
clc
lret
test
mov
dec
xchg
push
sub
inc
sub
mov
aaa
mov
es
out
cmp
xchg
mov
add
movsl
cmp
insl
int
jg
add
test
mov
je
push
fidivrl
out
sahf
push
cmp
adc
je
mov
or
sbb
ds
xor
nop
mov
jl
fcoms
dec
movsb
jge
dec
jecxz
mov
xor
and
xor
dec
dec
fiaddl
je
dec
loopne
lcall
cs
jle
inc
inc
subl
mov
andb
std
push
mov
jno
mov
sbb
cli
mov
ja
jno
subl
stc
xor
ret
repz
fisttpl
mov
popf
pop
mov
roll
push
rdmsr
push
jb
sti
jl
rcl
inc
dec
xor
jnp
pop
mov
xor
mov
mov
add
xor
sbb
xor
movsb
cltd
jnp
sbb
icebp
insb
mov
outsb
jae
lcall
lods
das
test
xchg
push
add
pop
cmp
add
int3
dec
mov
sar
je
and
and
test
rcrl
dec
fs
pop
mov
mov
jle
or
ja
in
add
dec
adc
test
add
int
shl
iret
stos
sbb
add
cmp
push
xor
add
inc
push
testl
in
xor
push
clc
mov
sub
push
mov
mov
bound
push
cltd
repnz
sub
add
fstps
pop
xor
cmp
out
xchg
dec
movsb
lret
sbb
jne
inc
or
sub
jne
xor
lock
mov
and
dec
mov
cltd
out
xor
pop
xor
and
fadd
xchg
mov
fdivr
inc
stos
and
push
lds
xor
fldenv
push
inc
mov
outsb
call
cmp
adc
sbb
int3
out
movsl
sub
add
cld
sub
push
int3
sbb
std
sbb
test
rcll
loopne
sahf
shl
fadd
push
sti
lahf
test
dec
xor
xor
adc
mull
pop
cmc
or
adc
popa
jge
or
push
pop
xlat
lock
hlt
mov
clc
adc
add
mov
push
cmp
daa
rorb
test
movsb
push
ficompl
or
pushf
iret
xor
pop
ja
icebp
jle
lea
ss
jl
dec
mov
adc
lcall
cmpsl
aas
push
mov
mov
aaa
jl
xchg
push
insl
cmp
sbb
cmpsl
aad
add
jmp
out
ret
pop
cwtl
adc
rcll
insb
and
jnp
stos
les
cmp
cmp
push
jmp
add
cmpsl
bound
jnp
ficoml
sbb
stos
dec
daa
mov
stc
in
int3
fisubrl
cs
iret
leave
mov
ja
sti
mov
sti
cmp
fcmovnb
push
push
cmp
movsl
movsb
pop
popf
shlb
shrb
mov
xor
mov
or
jl
fs
pusha
push
out
xchg
xor
xor
fidivrs
dec
cpuid
sbb
dec
out
sub
adcb
inc
mov
sbb
cli
push
adcb
mov
inc
ret
shrl
and
icebp
inc
mov
mov
cmp
adc
sti
imul
fcmovnb
cmp
push
ljmp
imul
mov
adc
adc
movsl
push
sub
aas
call
jecxz
cmc
add
jp
xchg
lock
ss
ret
out
xchg
mov
jmp
and
stc
jmp
pop
xlat
daa
sub
int3
jp
aas
lds
inc
arpl
stos
jnp
xor
cli
adc
outsl
add
fistps
stos
arpl
daa
pop
loopne
in
lahf
loopne
bound
ret
sub
lret
sub
jae
arpl
or
adc
push
repz
jg
ds
xchg
imul
cld
push
cld
pop
pushf
aam
pushl
mov
testl
jns
adc
push
push
loopne
mov
pushf
mov
pop
outsb
push
clc
pop
cli
xor
mov
mov
dec
sahf
mov
ficompl
mov
lods
cltd
push
inc
lret
fcmovnbe
sub
test
xchg
xchg
cmp
jmp
xchg
or
addl
mov
add
pop
fs
jo
iret
dec
adc
enter
lds
add
jecxz
mov
sub
dec
mov
add
test
mov
les
fisubrl
clc
jae
xor
and
lret
lock
xchg
pop
push
in
out
sub
dec
sub
int3
aaa
adc
push
test
pop
aam
sbb
xchg
jl
fcoml
cmpsl
popa
xor
jmp
aas
xor
or
es
outsb
adc
iret
cli
push
adc
or
outsb
and
mov
js
jp
aaa
dec
aas
push
adc
cmp
lcall
push
divb
jmp
or
pop
dec
int3
inc
jo
pop
mov
ja
incl
adc
dec
push
jne
cmpsl
sub
repz
mov
cmpsl
cltd
clc
inc
iret
sti
insl
stos
push
dec
jne
lcall
frstor
mov
inc
cmp
sub
test
jae
repz
js
jns
and
adc
or
stc
push
shlb
ror
xchg
cmc
test
imul
add
adc
fbld
stc
ficoml
in
shrl
dec
mov
and
roll
pop
mov
mov
out
out
pop
inc
dec
je
and
jge
add
ret
xchg
xor
in
hlt
sti
xchg
jg
add
cmpsl
and
icebp
inc
test
notb
adc
cmpsl
rcll
jnp
sub
push
inc
add
xchg
out
mov
adc
test
call
pop
adc
outsl
lds
fadd
loopne
mov
adc
fadd
push
scas
sbb
test
int3
xchg
push
jle
pop
data16
push
xchg
aaa
leave
xchg
imul
and
jne
jge
mov
cmc
dec
push
xchg
je
jmp
cmpsl
pop
int3
out
xor
jle
rclw
jae
xchg
ds
mov
andl
aaa
mov
shl
mov
sbb
xchg
nop
sbb
cmpsl
jno
arpl
jle
push
lret
mov
into
xchg
or
test
xchg
push
jmp
mov
mul
push
pop
add
sarl
cli
adcl
addr16
pop
out
push
lahf
pushf
jb
add
push
cld
hlt
jne
out
aas
out
pop
adc
jl
daa
je
cli
jg
out
cmpsl
fisubs
pop
cmp
inc
xchg
and
jg
mov
adc
or
shlb
iret
sbb
mov
js
repz
add
lret
pop
js
je
cmp
jg
out
mov
dec
mov
enter
in
mov
cmp
mov
pop
add
or
icebp
pop
xchg
cmp
lret
xchg
mov
adc
loop
shll
iret
adc
adc
cmp
incl
sti
enter
or
mov
divl
add
rolb
nop
inc
std
leave
test
jle
in
mov
adc
inc
jae
and
arpl
dec
sbb
inc
jg
imul
scas
aad
in
hlt
and
mov
das
mov
xchg
adc
xlat
pop
push
mov
in
inc
aas
mov
push
test
mov
das
push
push
or
or
xchg
sub
jmp
test
pop
add
sub
xchg
cli
mov
out
fsubs
clc
mov
mov
xchg
mov
mov
popf
dec
mov
adc
sbb
sarl
jbe
in
mov
mov
cmp
arpl
dec
repnz
pop
ja
inc
cld
dec
popf
movsb
sub
outsl
out
stos
mov
imul
jg
sub
ds
cwtl
inc
cmpsb
jecxz
or
inc
out
das
push
fimuls
sub
push
mov
out
dec
push
jo
mov
sbb
insb
push
pop
pop
push
add
push
subl
xor
pop
pop
and
rcr
nop
mov
adc
pmulhuw
aam
mov
jnp
push
pop
dec
pop
fidivl
pop
mov
es
xor
in
push
jmp
mov
xchg
xchg
loope
lock
pop
mov
stos
and
cmp
jmp
mov
or
mov
sarb
or
cltd
pop
imul
out
and
add
xchg
sub
rcll
cmc
repnz
js
sub
and
inc
lock
mov
insb
iret
scas
mov
popa
inc
dec
mov
push
inc
lods
daa
ds
fsubr
std
or
mov
ret
adc
lahf
sbb
ret
bswap
xchg
in
in
or
jo
mov
xchg
and
or
mov
arpl
dec
or
jb
pop
mov
jle
test
icebp
inc
cld
fwait
and
xor
jns
xchg
lea
enter
lock
lahf
cmp
imul
xor
fs
gs
sahf
sbb
inc
ffree
xchg
sbb
loop
push
dec
popf
cmp
mov
inc
repz
jo
clc
cmc
jle
pushf
push
pusha
jl
mov
inc
xchg
inc
pusha
sub
xor
jne
pop
xchg
bound
or
cmpsb
mov
scas
push
jo
scas
xor
push
lret
sbb
push
in
lock
pop
fs
out
out
orl
or
mov
fisubrs
lcall
fs
pop
cwtl
sub
scas
loopne
aaa
push
xor
cmp
and
loope
mov
push
mov
rorl
xchg
push
xlat
mov
fildll
pop
push
lods
jle
and
fsubrl
hlt
test
cmp
fimuls
adcb
fcmovne
adc
movsb
rolb
nop
or
out
mov
outsb
adcl
xchg
jae
jae
in
xor
imul
inc
pusha
cli
dec
pop
inc
xor
push
mov
sti
outsl
jnp
cld
sub
rolb
fisttpll
jne
sub
or
ljmp
cmpsl
sbb
clc
or
adc
cld
stos
sahf
in
test
loop,pt
bswap
loope
push
pop
xor
pop
gs
cmp
pop
sbb
insl
mov
mov
sub
adc
fadd
out
push
enter
ret
push
es
cs
inc
loopne
and
add
fs
push
or
dec
xchg
sub
xchg
mov
in
cmpsl
pop
in
or
clc
inc
or
jg
and
loop
daa
push
sbb
fs
sub
flds
adc
jb
sub
mov
pusha
mov
mull
pop
inc
rcll
pop
sbb
pop
cmp
je
mov
mov
cmpsb
daa
les
icebp
lock
in
push
int
into
sbb
rcrb
cmc
lret
in
int3
cmp
add
pop
dec
stos
ds
xor
pop
out
jno
and
stos
imul
je
or
mov
imul
outsl
iret
sbb
pushl
push
out
jb
mov
ds
push
outsb
add
out
mov
adc
sbb
ds
out
popf
mov
mov
add
push
dec
cmp
xchg
call
dec
shll
xchg
outsl
pop
insb
sub
insl
jecxz
in
pop
pop
mov
and
add
jp
push
shrl
xor
cltd
test
xchg
or
inc
and
ffree
adc
mov
out
test
daa
shlb
mov
mov
sub
cmp
cli
mov
add
push
imul
push
or
mov
dec
out
xor
incl
loopne
cmp
inc
xchg
cmp
scas
or
pop
jb
sub
or
pop
cs
imul
dec
int3
in
push
mov
mov
out
dec
adc
ljmp
fwait
pop
mov
test
xor
cmp
loope
gs
cmpsl
in
xor
sub
enter
dec
andb
jae
ljmp
jno
ficompl
cld
mov
mov
sbb
out
push
push
jne
lods
xor
jp
loopne
loop
add
leave
adcb
or
test
movsl
repz
ja
mov
loope
sbb
incb
loope
jmp
add
pop
rolb
pop
aam
stc
cmpsl
push
iret
arpl
nop
shll
cwtl
push
jnp
mov
xchg
aad
lret
dec
xor
bound
cmpsb
dec
jno
fisubs
add
mov
fiadds
das
sub
scas
in
mov
xchg
push
add
jnp
mov
insl
push
xchg
test
mov
jbe
int3
cltd
xor
lahf
not
pop
jmp
pop
inc
sbb
xor
ret
xor
sbb
test
cmpsl
int3
icebp
sub
push
arpl
mov
int3
pop
sub
xor
and
hlt
data16
xchg
nop
leave
or
into
pop
stc
cmp
dec
push
fimull
and
xchg
xor
stc
cmc
sbb
inc
and
int3
ljmp
dec
inc
mov
notl
mov
cmp
pusha
push
pop
mov
mov
dec
icebp
fs
lcall
movsl
jmp
stc
sbb
pop
rcrb
or
xchg
cmp
push
sbb
jp
int3
jg
and
push
adcb
rolb
shll
pop
jle
out
inc
cmp
xchg
fisttpl
lods
sub
leave
push
ljmp
xor
dec
std
cmp
push
fisttpl
aam
dec
outsb
iret
pop
inc
in
and
or
dec
mov
aad
mov
dec
mov
dec
lret
pop
xchg
mov
pop
mov
cmpsl
dec
sbb
sbb
cmpsb
or
repz
and
and
inc
popa
mov
in
cmpsl
out
nop
cmp
inc
fmull
mov
or
sbb
icebp
pushf
mov
cld
dec
push
mov
jmp
shlb
push
ljmp
fldenv
inc
push
out
xchg
pop
pop
ret
jg
out
push
sub
add
mov
xlat
sbb
xor
mov
cwtl
adc
mov
stos
push
daa
or
push
movsb
adc
xor
mov
scas
addr16
iret
xchg
popa
leave
or
pop
addb
jns
ss
jle
arpl
fs
mov
lds
xchg
int3
mov
push
xchg
adc
jecxz
sub
pop
pop
hlt
xor
push
cltd
rclb
xchg
add
out
mov
add
fnstenv
and
sbb
shrl
in
test
xacquire
pusha
in
jo
mov
mov
test
enter
fisubl
inc
int
pop
dec
adc
cmp
not
in
adc
loop
xchg
cmp
int3
loope
fmul
xor
movsl
xchg
xor
repz
adc
and
or
dec
or
sbbl
mov
mov
in
fdivrl
and
sub
je,pt
jae
mov
mov
sbb
test
mov
data16
dec
cmpsl
clc
std
fstpl
mov
movsb
mov
jl
repz
js
jnp
ja,pt
mov
cli
sub
mov
dec
incl
andl
dec
in
xchg
rorl
inc
mov
xchg
insb
pop
cwtl
cmp
xchg
cwtl
cmpsl
cmp
cli
jb
out
push
int3
dec
cld
ret
sbb
jle
inc
push
mov
inc
mov
ret
stos
cmp
dec
push
jnp
test
loope
insb
push
pop
and
mov
sbb
inc
dec
jae
in
dec
mov
push
sbb
push
inc
imul
cmc
inc
ret
sbb
mov
mov
je
insl
and
stc
xchg
test
in
cwtl
je
dec
xchg
mov
sub
sbb
je
pushf
lock
mov
data16
data16
fisubl
fldcw
inc
ja
roll
ss
pop
pop
jge
mov
push
and
mov
addr16
push
inc
mov
cltd
nop
adc
sub
push
addr16
dec
clc
cmpb
aas
mov
jo
mov
leave
push
sbb
add
mov
outsb
test
mov
cmpsb
nop
int
mov
nop
das
jle
cltd
in
cmp
in
sbbb
icebp
and
jge
mov
xor
cs
cmc
cmp
cmp
loop
fldl
push
icebp
das
mov
clc
inc
jg
and
pop
gs
stc
xor
pop
xlat
scas
clc
xor
jae
testl
lahf
fcomps
sahf
fcomp
push
outsl
lahf
adc
pushf
mov
mov
mov
lock
push
mov
pop
lods
lcall
in
cmp
jne
push
scas
data16
imul
in
pushf
inc
inc
std
adc
adc
nop
rorb
mov
dec
mov
lret
outsb
mov
xchg
in
movsl
sub
cmp
dec
into
adc
xchg
pop
adc
int
mov
push
repnz
inc
mov
sbb
sub
push
rclb
push
nop
or
loope
hlt
push
repz
sub
or
or
movb
mov
push
and
dec
div
imul
inc
popa
push
xchg
pop
inc
inc
sarb
leave
or
and
adc
pop
fmull
push
xor
test
enter
outsb
sti
jecxz
push
cmpb
adc
and
add
dec
xor
push
push
ror
cmp
enter
or
aad
xchg
sub
xchg
mov
mov
mov
mov
sub
jno
jbe
dec
push
jnp
pop
cmc
jno
mov
lcall
scas
xor
pop
popl
push
repz
xchg
lahf
pop
je
call
outsb
arpl
stos
repnz
pushf
jmp
loop
out
add
jl
popa
push
add
fisttpl
sbb
push
cmp
pop
js
mov
negb
popa
fimuls
pop
adc
das
push
subb
lods
aam
scas
std
push
out
wrmsr
push
xchg
les
aad
mov
imul
clc
sub
dec
movsb
imul
aas
sbb
and
mov
jp
jns
repz
movsb
dec
jae
sbb
sub
mov
cmp
xchg
mov
stos
inc
inc
les
sbbb
or
adc
cwtl
insb
sbb
mov
cmpsb
aad
adc
aaa
xor
loopne
dec
mov
jno
mov
inc
stc
inc
addr16
mov
cmp
pop
pop
arpl
cmpsb
xor
xor
jnp
push
adc
adc
popf
loopne
sbb
aam
addr16
movsl
mov
and
mov
stos
repz
mov
testb
or
pop
and
sub
xor
das
imulb
dec
in
inc
imul
pop
push
xor
inc
inc
repnz
ja
or
mov
aam
outsb
xchg
movb
mov
sub
daa
push
inc
sbb
pop
mov
adc
mov
jecxz
inc
popf
push
mov
inc
inc
jb
lds
repz
mov
shlb
test
mov
cmp
pop
inc
and
ja
jno
insl
clc
sbb
std
push
js
xchg
ret
or
cmp
mov
lds
jp
cmp
push
mov
mov
addb
cmpsb
add
aam
mov
push
xchg
sbb
in
xchg
sbbb
add
rcrb
or
sbb
ret
cmp
fsubrl
dec
xor
xchg
mov
mov
mov
imul
mov
leave
in
mov
movsb
jae
push
neg
jb
aaa
and
lret
es
shll
sub
push
bound
inc
mov
ret
scas
and
enter
les
or
testb
mov
stos
shr
pop
lcall
xor
and
in
sub
repnz
arpl
xlat
xor
adc
stos
mov
int3
stos
call
or
xchg
pushf
mov
cmpsb
mov
adc
rcll
scas
jne
mov
fucomp
mov
imul
mov
fcompl
add
pusha
les
out
dec
mov
pushf
cld
imul
pop
and
adcb
test
or
bound
jno
lods
jbe
pavgb
mov
clc
pop
cmp
bound
rolb
push
insb
adc
out
pop
lret
pushf
mov
sti
in
xor
sti
lcall
jmp
and
lahf
iret
cmp
orb
pushl
inc
inc
notb
sti
mov
rorb
push
lock
jmp
xor
inc
repnz
mov
jg
scas
xchg
push
push
cmp
in
out
add
fwait
jb
pop
jg
pop
js
test
js
push
jmp
jecxz
gs
repz
cld
sub
fidivs
scas
mov
mov
test
jp
aaa
xchg
test
pop
jns
mov
movsl
into
movsl
sub
cmp
mov
and
add
sbbb
lret
push
clc
jae
push
push
sub
mov
aad
hlt
mov
stos
fcompl
mov
add
dec
lods
and
jg
inc
jnp
loope
decb
jo
ljmp
push
add
cmp
shll
push
ret
sub
int3
ret
push
movl
adc
cmp
popa
jnp
arpl
sbb
daa
sbbl
or
clc
cmpsl
sub
test
testl
fildll
adc
lock
add
stc
xor
gs
out
stos
dec
push
xchg
mov
mov
inc
andb
and
ljmp
jae
mov
jb
push
imul
das
mov
fs
mov
test
clc
push
cwtl
xchg
push
push
mov
jmp
push
sbb
loopne
lret
xor
leave
sub
adc
jmp
inc
sub
jecxz
mov
mov
scas
inc
push
sbb
pop
adcl
cmp
sbb
add
mov
cmp
xor
and
and
out
jp
loopne
adc
xchg
sbb
or
inc
mov
jbe
mov
push
leave
mov
jecxz
lcall
xorl
std
pop
mov
adc
adc
sbb
scas
cmp
fwait
add
test
mov
sti
les
cmpsl
nop
push
cld
lret
mov
cltd
scas
inc
test
rcrb
cltd
jbe
mov
dec
mov
pop
pop
pop
sub
mov
cltd
xchg
dec
inc
lcall
xor
add
lea
jnp
inc
les
bound
cmp
ja
cmc
sub
gs
inc
mov
test
jae
test
imul
fwait
in
mov
mov
movsb
shrb
add
daa
imul
xor
gs
xchg
das
fildll
sub
ret
push
xchg
iret
bound
cmpsl
aas
cld
loop
mov
scas
adc
mov
cmpl
idivb
inc
lahf
roll
pop
enter
call
adc
adc
ss
xchg
push
dec
std
push
add
mov
mov
shrb
shr
sub
mov
inc
jmp
icebp
in
es
in
xchg
ret
jns
fcomps
scas
xchg
mov
dec
or
cmp
insl
shl
add
sbb
fcom
icebp
out
inc
test
or
mul
fsubrp
push
call
inc
rcr
mov
push
aad
dec
fwait
adc
jno
mov
out
dec
mov
fstps
xor
add
ljmp
pop
xor
and
test
add
adc
lods
pop
or
fsubr
mov
and
clc
sub
arpl
ja
xchg
adc
pop
cmp
insl
mov
ljmp
scas
mov
mov
inc
sbb
cwtl
inc
lock
adc
add
inc
pop
repz
mov
xor
ret
test
imull
xchg
out
inc
fistpl
nop
or
leave
cmp
out
jb
adc
out
mov
sbb
les
fwait
push
adc
ficoml
adcl
enter
int
adcb
loope
stos
xchg
daa
sarb
add
push
lock
popa
in
cmp
mov
lret
mov
aas
popf
mov
jl
pop
mov
cmpsb
in
push
loope
mov
ljmp
xchg
lods
fisubs
call
mulb
dec
int3
mov
pop
out
or
movsb
pmullw
int
outsl
adc
sub
pop
sub
fnsave
sbb
xor
cmpsl
fsts
in
pop
int
xchg
sbb
aad
rorl
sub
dec
push
imul
mov
jae
es
mov
jns
push
inc
push
sub
shrl
xchg
das
subl
lahf
jl
inc
cmpsb
inc
sbb
clc
mov
pop
or
outsb
dec
mov
jo
push
repnz
stos
xor
mov
dec
nop
adc
or
and
lods
lahf
nop
mov
push
repz
xchg
dec
lret
mov
mov
adc
fidivl
mov
mov
imul
and
sbb
inc
out
sub
xchg
inc
fmul
sub
test
pop
pop
and
inc
out
mov
jae
sti
dec
pop
ss
dec
psrlq
popf
add
pop
enter
clc
repnz
clc
sti
daa
aad
jle
lahf
xor
mov
inc
mov
lea
inc
fiadds
cmp
add
xor
fyl2x
testl
xor
sbb
cltd
std
mov
test
pop
or
cmp
out
and
lcall
and
jmp
adc
push
arpl
push
je
das
cmp
mov
jge
adc
push
ret
pusha
pop
sub
mov
cmpsb
push
dec
mov
cwtl
rep
icebp
stos
add
push
sub
sbb
jmp
inc
dec
and
movsl
shl
out
sbb
call
ret
dec
stc
cmc
loop
idivl
mov
mov
push
xor
mov
es
faddl
ljmp
fsts
or
arpl
fcmovu
and
adc
adc
xor
lret
push
bound
and
mov
xchg
out
mov
fs
mov
int
xchg
jecxz
mov
aad
bound
jl
lods
mov
or
mov
out
mov
xor
fwait
andl
and
outsl
or
lds
push
stos
sub
dec
cmc
or
insl
xor
cld
test
cmpsb
insb
xchg
dec
xchg
lock
xor
icebp
ret
cmp
inc
push
cmp
pop
jbe
rol
mov
dec
shr
outsb
stos
in
pop
xor
mov
mov
push
daa
iret
lea
jne
xchg
orl
scas
push
test
add
scas
test
sub
int
faddl
dec
xchg
sahf
imul
push
adc
add
sbb
cmp
std
inc
or
sub
mov
inc
in
aas
enter
and
add
mov
mov
xchg
dec
push
mov
sbb
outsl
int3
adc
inc
in
pop
cwtl
or
sub
dec
mov
mov
sub
aad
mov
in
add
pusha
iret
testl
xchg
mov
lods
and
and
or
dec
push
es
jl
sbb
stos
push
push
and
jecxz
lcall
add
in
movsl
inc
test
fs
pop
decl
push
inc
add
sub
mov
fimull
push
fwait
adc
cmpsl
mov
notb
loop
add
xchg
fadds
push
stos
adc
inc
shll
shl
aaa
sbb
sbb
insl
shr
mov
pop
je
shrb
mov
xor
push
mov
leave
enter
pushf
mov
cli
mov
inc
inc
xor
xor
sub
or
loopne
dec
loope
xchg
js
arpl
mov
push
jecxz
pop
jns
pop
sbb
insl
xchg
xor
arpl
xlat
js
push
out
loopne
je
jne
pushf
cmp
sub
stos
sub
sbb
jge
jns
sub
mov
scas
test
aas
push
mov
mov
xchg
xor
movsl
test
jle
les
rcll
gs
mov
addr16
and
push
mov
dec
cmp
mov
pop
and
test
and
inc
mov
mov
mov
clc
push
sarl
add
je
and
cmc
jecxz
push
aaa
xlat
mov
xor
or
es
movb
ret
push
jno
mov
mov
cmp
jno
or
or
mov
sti
ficoml
out
insb
fcmovu
je
cs
xchg
sti
and
jno
jp
arpl
mov
outsb
fmuls
cli
or
fmul
mov
rcrb
sbb
xchg
fwait
add
iret
mov
sub
or
cmp
cmpb
and
mov
sbb
jl
into
out
outsb
hlt
fistpl
xchg
adc
cmp
cmpsb
mov
mov
xor
xchg
jno
rcrb
jbe
and
jno
bound
icebp
arpl
push
pop
sbb
in
jns
jns
mov
inc
sub
mov
xchg
add
pop
es
cwtl
and
xor
cmpsb
ret
mov
or
sbb
dec
loope
adc
xchg
stc
inc
cmpxchg
enter
int
push
pop
and
ficompl
lahf
stc
out
arpl
push
lret
xchg
or
dec
mov
shl
fnsave
dec
cld
sub
fnstcw
lds
lea
scas
cmp
mov
sub
push
in
or
or
sti
cmp
add
mov
cmp
xchg
scas
fwait
mov
fidivrl
shl
movsl
and
gs
imul
cmp
out
scas
imul
sbb
jp
mov
lret
test
xchg
jae
pop
and
sub
pop
js
aam
icebp
adc
rol
mov
inc
repnz
mov
lock
fidivl
insb
stos
daa
add
call
xchg
or
mov
lcall
fisttpll
sbb
adc
call
inc
pushf
and
pop
push
pop
or
mov
xchg
aaa
mov
aam
in
cwtl
cmp
ret
jb
sub
push
push
adcl
add
nop
jbe
dec
pop
ffree
aam
sahf
push
mov
sbb
add
pop
subl
fadds
dec
filds
xchg
movb
jl
out
push
and
gs
sarl
mov
rcr
jae
inc
scas
aad
loope
inc
jbe
push
sbb
ja
pcmpeqb
xchg
movsb
aaa
out
xchg
sbb
scas
and
cmpsb
push
je
dec
es
into
cli
pop
dec
or
sub
push
mov
stc
into
cmp
mov
push
push
sar
ja
push
and
sbb
in
dec
mov
insb
sti
sub
mov
adc
pop
sbb
imul
stos
jbe
scas
inc
out
int3
mov
jbe
jmp
dec
xor
imul
lret
xlat
mov
std
dec
jne
mov
push
fisttpl
sub
sbb
and
test
outsb
and
push
pop
sub
sub
adc
stos
push
mov
xchg
orl
fcompl
mov
mov
out
ljmp
nop
xor
mov
mov
daa
in
dec
dec
insl
pop
frstor
add
jp
mov
dec
dec
flds
cmp
imul
mov
cmp
das
je
cmp
xor
jecxz
push
imul
test
rorb
adc
mov
mov
test
or
gs
xor
jmp
jb
xchg
arpl
mov
jle
sbb
movsl
inc
cli
and
dec
fstl
in
sti
lahf
into
sub
inc
cmp
lcall
fnstcw
xchg
repnz
mov
inc
cmpsb
cltd
inc
out
xor
jo
jecxz
popa
hlt
lcall
or
outsb
addr16
jmp
xor
mov
inc
push
push
imul
lret
fstpt
push
andl
adc
lds
jg
outsb
jp
icebp
xor
or
fcomps
sub
fwait
push
mov
push
jo
stc
lea
bound
ja
lds
pop
lds
jge
mov
xchg
push
jp
insl
outsb
icebp
mov
adc
push
sbb
mov
add
push
aam
stos
ret
fs
fldl2e
insl
cwtl
ret
jmp
in
int3
jae
or
xor
loop
insb
std
fs
or
pusha
jnp
aam
out
lock
inc
or
dec
jle
cs
inc
call
xchg
sbb
insl
stos
idivl
xor
and
imul
out
push
add
lock
sub
push
nop
inc
xchg
les
or
aaa
sub
xchg
sarb
jge
into
out
sub
daa
hlt
xchg
rcrl
in
cmp
xchg
insb
xchg
xor
inc
dec
aaa
js
inc
lret
cmp
jmp
enter
test
out
aas
and
inc
insb
sti
sub
and
paddw
push
mov
out
jg
fyl2xp1
xchg
fisttpll
in
and
out
test
js
sbb
rorb
cmpsb
cmp
mov
mov
addb
cmp
stc
call
pop
push
outsb
mov
xor
xor
cmp
loop
testl
pop
test
sub
shr
mov
mov
iret
cwtl
movsl
movsl
loop
lcall
jp
es
and
ret
fiadds
dec
test
adc
push
xor
pusha
mov
clc
mov
push
dec
mov
add
test
outsl
xor
xor
andb
ds
daa
std
in
add
and
pop
sbb
pop
inc
rcrl
imul
stos
fistpl
popa
push
cwtl
popa
addr16
ret
jle
pop
pop
daa
and
sahf
gs
pop
scas
fcmovne
xorl
xchg
adc
mov
push
xor
mov
xlat
test
xor
cmp
add
xchg
xchg
ja
lds
sbb
mov
jg
pop
mov
fsub
jbe
shll
repnz
into
lods
das
sbb
push
sbb
maxps
sub
mov
mov
mov
sbb
dec
js
push
lds
push
and
leave
fistpll
repnz
gs
addb
shll
adc
stc
test
and
mov
idivb
sub
mov
push
in
fistl
jno
imul
das
out
mov
lods
cmpsl
dec
imul
push
xchg
sbb
mov
aas
mov
jl
mov
aaa
fistps
test
mov
push
or
js
push
cmpsb
fcompl
inc
fwait
jne
push
dec
mov
aas
push
test
leave
movsl
mov
loope
mov
push
mov
int3
adc
inc
push
insb
je
aas
and
test
add
and
out
mov
ficompl
iret
pop
xchg
arpl
roll
mov
cmp
data16
jo
shll
or
push
mov
jge
jno
cld
mov
mov
pop
add
aas
mov
in
mov
ds
jl
push
addl
push
sbb
lret
fstps
xchg
cs
in
xlat
jecxz
mov
pop
dec
push
jmp
jmp
fwait
int3
xor
mov
call
xchg
popl
mov
into
sub
cld
push
mov
mov
dec
loopne
mov
in
push
pop
inc
push
dec
push
cmc
push
jmp
gs
push
push
mov
adc
bound
lret
out
mov
lret
fidivrs
movsb
adc
pop
divb
xchg
std
sbb
jmp
jmp
xchg
arpl
cmp
push
sahf
cmpsl
cli
sbb
xchg
jmp
cld
and
mov
mov
push
dec
pusha
push
adc
daa
cwtl
mov
stc
xor
lahf
cwtl
scas
mov
push
loope
or
sbb
fdivs
rclb
jo
adc
or
outsl
mov
or
cmp
or
sub
cmc
pop
jge
and
pop
push
push
xor
adc
fisubrs
add
filds
test
inc
sub
movsb
xchg
jb
cmc
iret
test
bound
mov
loopne
cmpsb
push
cmc
mov
fnstsw
sbb
add
pop
adc
into
pop
aad
mov
mov
inc
inc
inc
xor
jno
mov
xlat
rcr
fldl
enter
fdivrs
add
pusha
add
into
cmp
sbb
push
jecxz
nop
sbb
popf
adc
loop
les
push
or
jecxz
jg
call
or
sbb
sbb
pop
fwait
scas
out
xchg
mov
sahf
mov
and
push
xchg
fmul
scas
das
mov
push
pop
fadds
enter
jb
cmc
cmpsb
mov
xchg
sbb
and
cli
xorb
lods
cmp
popf
pop
and
hlt
mov
add
push
mov
and
aad
loopne
lock
pop
in
loope
fs
test
lods
cmp
aas
fwait
xchg
jne
mov
dec
cld
add
mov
push
dec
mov
mov
ljmp
sahf
pop
cmp
hlt
stos
mov
xchg
cltd
jmp
loope
insl
and
sub
mov
test
ucomiss
sbb
clc
fisubrl
push
sar
sbb
bound
popf
mov
mov
pop
adc
xchg
jbe
xor
sub
add
xchg
cmpb
subl
dec
test
cmp
fdivrs
stos
ds
mov
popf
adc
xor
fstps
dec
idivl
dec
sti
aam
jp
or
jne
lret
popa
xor
mov
pop
mov
fwait
push
lret
mov
ficoml
aad
xor
add
cmp
xchg
jbe
and
inc
cmp
int
out
xchg
jmp
pop
jmp
sub
sbb
shlb
pop
cs
jp
inc
dec
xor
pop
mov
rcrb
in
and
mov
outsb
or
push
scas
cmp
mov
jmp
fsubr
cli
push
inc
fwait
adc
inc
inc
jl
aaa
jle
fcomps
sub
sub
adcl
jmp
fnsave
mov
fldenv
xor
nop
test
data16
aad
insl
mov
addr16
lds
jmp
sbb
jp
mov
sbb
mov
scas
notb
outsb
into
sub
inc
push
in
sbbl
pop
jae
les
addl
mov
pushf
inc
pop
inc
and
add
adc
fsubrl
lcall
or
fsts
adc
pushf
pop
sbb
mov
and
cmp
dec
xor
xor
push
pop
movsl
pop
xchg
push
je
neg
sbb
sub
test
add
jbe
subl
cld
sahf
sbb
dec
add
mov
mulb
cmp
xor
in
pop
orl
gs
mov
xlat
sahf
cmc
dec
mov
lds
insb
jno
js
iret
jg
sub
cltd
or
xlat
dec
fsts
jecxz
xor
mov
mov
push
mov
or
imul
add
cli
js
fnstcw
arpl
cmpb
lds
dec
push
pop
inc
test
or
std
mov
loope
add
sbb
pop
xor
sarb
fisubrs
add
sbb
ss
test
push
mov
xlat
shr
mov
aaa
sti
add
jge
add
mov
mov
sub
test
in
pop
pushf
jp
aam
mov
fcompl
repnz
adc
inc
cmp
jnp
and
shll
ja
adc
loopne
ficomps
repz
std
xchg
pop
std
mov
sbb
add
rorl
enter
iret
lret
pop
popl
dec
mov
jnp
mov
and
jae
xor
das
pop
stos
loope
mov
fistpll
rcrl
negl
xchg
xor
pop
in
mov
pop
jb
or
lock
inc
sub
lcall
xlat
rorb
stos
mov
push
lret
data16
jbe
xor
pop
fstps
sbb
mov
out
add
aam
xor
int
mov
repnz
imul
pop
push
jmp
pop
cli
mov
je
lods
cmpsb
flds
or
mov
insb
fcom
shll
pusha
aam
sub
lret
in
add
pushf
pushf
ror
fs
cmc
out
xchg
adc
xor
movsb
cmp
addb
mov
ss
pop
daa
lahf
mov
das
inc
iret
int
pop
inc
pop
xchg
pusha
cmp
cltd
js
mov
ret
rol
test
hlt
dec
addr16
inc
aaa
jecxz
outsl
imul
stos
sub
jmp
add
xor
loop
shlb
xlat
xchg
pop
loope
addb
movsl
xor
sbbl
mov
shll
jmp
test
xchg
fs
xchg
popf
inc
cmc
push
adc
je
mov
pop
out
jb
popf
push
pop
rcll
in
ret
mov
adc
mov
dec
xchg
push
aam
jecxz
out
fs
mov
rcrl
insl
mov
jne
jno
xor
outsl
push
mov
sub
cmp
leave
jmp
jle
gs
dec
mov
jb
pop
shrl
test
xchg
aas
mov
adcl
mov
add
jp
imul
push
sbb
or
mov
cmpsl
popf
fucom
dec
cmp
in
out
or
dec
lds
cltd
lcall
mov
mov
ret
or
daa
arpl
aas
mov
mov
fmul
pop
mov
sub
jge
sub
mov
cmpl
jb
push
shll
hlt
aas
shl
add
xlat
pop
call
insl
iret
jmp
mov
jg
je
leave
cmp
bound
sub
int3
gs
adc
sub
or
adc
daa
pop
fmul
pop
lret
jmp
scas
dec
or
or
push
js
xchg
cmp
js
mov
inc
stos
cltd
pop
rcr
and
arpl
fcomi
fisttps
add
mov
in
push
cltd
cmpsl
push
sbb
add
das
mov
roll
xchg
xchg
jo,pn
cmpsb
cmovae
cwtl
aad
jns
push
jnp
in
push
fwait
push
sub
js
inc
mov
mov
fadds
and
lret
cmpsl
daa
push
pushf
cmp
push
sub
add
xchg
lock
es
sub
xchg
test
xor
popl
sarb
cmp
dec
cs
xlat
adc
imul
scas
orb
push
insb
mov
cltd
xchg
mov
adc
stos
inc
mov
rcrb
loopne
arpl
stc
dec
test
mov
inc
push
dec
popa
fsubl
inc
cs
mov
or
std
mov
imulb
fwait
shlb
clc
fsubrs
insl
aam
jecxz
sbb
jno
in
cmp
and
pushf
dec
je
call
cmpsl
push
inc
pop
xor
or
push
push
mov
outsb
pusha
mov
add
in
inc
icebp
out
push
insl
push
lret
out
or
lcall
ret
push
aam
mov
push
pop
stos
mov
jge
and
sub
pop
or
fildl
sbb
test
neg
dec
pop
sbb
mov
div
aad
int3
push
cli
enter
bound
mov
jne
std
and
dec
fsubrp
dec
jbe
scas
xor
popf
mov
std
inc
icebp
ds
fwait
mov
test
pop
repz
aam
push
loopne
xchg
insl
and
jmp
xor
sub
mov
outsb
mov
adc
push
imul
jno
sahf
and
sahf
ret
jecxz
mov
jae
jns
in
test
and
pop
jp
adc
mov
sbb
mov
popf
add
push
cld
shll
mov
xchg
loop
shr
mov
push
insb
rcrl
mov
jg
dec
in
sbb
call
shll
lret
mov
das
into
rcl
cmp
jg
xchg
scas
push
dec
jg
stc
jno
cmc
in
fdiv
outsl
sub
hlt
mov
xchg
cwtl
sbb
adc
loope
cltd
stos
xchg
lret
fnstcw
dec
xchg
or
pushf
sarl
js
in
xchg
pop
ret
andb
xchg
fadds
mov
lahf
lods
mov
insb
inc
add
mov
or
cmp
adc
dec
jb
mov
sub
stc
roll
jecxz
xchg
cmp
push
ljmp
fsubr
leave
dec
mov
lahf
or
jb
pop
insl
pop
dec
sub
xor
pop
pop
inc
fistl
add
fs
sbb
pusha
add
xor
cmp
push
ss
pusha
mov
cmp
test
sbb
jns
xchg
pop
incl
mov
ret
bound
rorb
sarb
je
mov
adc
out
fistl
push
sub
test
jne
addl
cwtl
imul
sti
ss
mov
jle
std
add
sbb
aam
adc
and
dec
dec
andl
mov
and
inc
cmpsl
dec
jmp
jp
into
xchg
jle
pop
and
xor
jns
add
dec
cltd
xor
add
sbb
cmpsb
cwtl
loop
mov
jmp
mov
xor
jae
mov
adc
cs
mov
pop
cmp
mov
push
cs
in
and
or
pop
nop
or
xchg
aam
out
jle
or
add
movsb
sbb
add
ljmp
push
cli
inc
out
leave
icebp
pop
or
mov
mov
xor
mov
xchg
sub
push
and
sbb
mov
outsb
cld
out
lods
jp
push
sbb
out
les
iret
sti
clc
sub
dec
mov
stos
jp
mov
lea
out
jo
inc
cmp
insl
dec
sub
lock
daa
sbb
es
pusha
mov
fnstsw
or
inc
inc
mov
cmpsb
and
jae
sub
inc
in
jo
or
lahf
std
mov
lahf
in
and
or
jl
into
adc
and
insl
xor
sbb
cmp
push
lret
test
dec
cmp
int
insb
jnp
jle
lret
pop
cmp
in
adc
in
out
sub
add
stc
and
push
adc
arpl
xchg
xchg
cmp
movb
clc
jecxz
adc
mov
pusha
xchg
scas
or
push
sbbl
inc
push
cmc
mov
lret
sbb
mov
cwtl
outsb
mov
mov
int
fidivrl
aam
sub
dec
daa
in
sbb
inc
and
mov
push
jne
inc
dec
hlt
cmpl
jno
push
stc
loopne
add
jb
inc
fwait
pusha
mov
mov
adc
filds
xor
inc
sbb
je
push
mov
xlat
loop
repnz
mov
xor
push
ljmp
add
mov
rcl
in
xlat
fucomip
inc
pop
mov
mov
xlat
mov
iret
repz
pop
add
and
add
pop
scas
push
in
add
xchg
push
mov
mov
mov
popf
enter
push
rol
test
sbb
xchg
aaa
sbb
push
mov
adc
pop
mov
inc
adc
jns
sbb
mov
into
les
je
dec
jbe
xchg
push
adc
or
ds
in
test
mov
pop
and
out
jle
mov
xor
xor
cmp
xor
fs
mov
jmp
push
jp
jo
dec
fists
je
mov
mov
fs
push
fs
mov
insl
data16
arpl
ret
xchg
aaa
fcmove
jle
mov
mov
jge
push
mov
or
insl
mov
stos
cld
out
testl
adc
sbb
sarb
rcll
mov
rcl
sbb
cmc
inc
sub
pop
and
test
and
scas
and
and
fildl
mov
sub
outsb
jno
inc
inc
jp
push
outsl
call
testl
in
cmpsl
pop
xor
cmp
cmpsb
mov
out
pop
es
cmc
cmp
jae
push
enter
or
ret
ror
inc
mov
mov
fsubl
aas
pop
jg
inc
iret
mov
mov
cwtl
cli
push
add
dec
pop
xor
lret
jo
aam
leave
adc
jl
add
repnz
bound
lret
dec
and
test
cld
fisubl
fs
loop
sbb
push
enter
mov
push
mov
jno
cltd
and
adc
jle
iret
xor
div
sub
push
or
adc
mov
mov
lret
das
sub
mov
xor
idivl
mov
and
jle
and
cld
and
xchg
push
popf
shrl
pop
out
mov
cmp
dec
or
mov
stc
js
pop
stos
add
in
aad
xor
push
cwtl
dec
inc
fwait
les
arpl
sub
shlb
or
xlat
and
and
push
hlt
test
inc
sbb
in
ss
push
aad
and
mov
movsl
sbb
pop
sti
jecxz
cmp
pop
adc
sub
ss
sbb
or
xchg
or
cmp
pop
lahf
int
and
fsub
psubusb
dec
push
mov
and
loope
lret
js
scas
add
int3
lea
imul
lea
out
xor
adc
push
ja
sub
js
iret
hlt
inc
imul
push
mov
lods
bound
aam
xor
fisubs
insl
xchg
adc
movsl
xchg
stc
adc
inc
stos
imul
cmp
dec
sub
fld
and
popf
jl
mov
sbb
sbb
lock
out
mov
pop
pop
inc
testl
add
sub
inc
sub
lahf
outsb
fldl2e
lahf
mov
mov
roll
xchg
lcall
inc
add
xor
sahf
mov
push
aad
daa
mov
lret
int
mov
imul
nop
rcrl
loope
rorb
loope
inc
push
and
inc
sub
xchg
mov
rol
fwait
mov
out
sub
push
xchg
dec
pop
xor
lds
pop
shlb
std
subb
inc
insb
in
ret
dec
leave
dec
mov
mov
aam
cmp
xchg
pop
inc
jo
adc
xchg
push
flds
lods
push
mov
and
inc
sub
cld
jg
jp
arpl
xchg
mov
cli
inc
adc
fcompl
imul
loope,pt
adc
xchg
idivl
pop
push
xchg
xchg
sbb
mov
mov
mov
inc
aaa
divl
sar
mov
stc
cmpsb
mov
mov
mov
xchg
scas
out
daa
repnz
in
dec
push
jno
in
sub
mov
mov
mov
mov
adc
pop
repz
stos
dec
sbb
pop
std
xor
xor
pop
mov
in
cmp
cwtl
pop
mov
jo
push
ja
mov
test
movsl
testb
insb
fs
jb
stos
mov
fwait
xor
dec
xchg
es
xor
mov
mov
xchg
xlat
and
fcomp
icebp
jbe
mov
xchg
push
xor
mov
dec
das
xor
xor
and
jae
mov
pop
and
jge
dec
mov
fwait
call
cmc
test
or
mov
lock
pushf
inc
xchg
jne
push
loopne
and
xorl
dec
ja
test
add
mov
or
mov
dec
jns
push
sub
jns
mov
sbb
hlt
fiadds
sbb
imul
mov
dec
jns
je
es
xor
lds
lock
mov
dec
clc
ljmp
mov
pop
shrb
loop
cwtl
dec
cmp
sub
movsl
inc
and
push
popf
int3
xor
outsb
push
xchg
xchg
jae
jne
clc
arpl
test
es
push
loop
cmpsb
dec
std
mov
je
mov
lock
sbb
pop
cltd
aas
push
movb
sub
scas
xorb
mov
pop
xor
shr
add
movsl
jne
xchg
and
arpl
addb
or
iret
push
dec
enter
and
movsb
dec
sti
arpl
sarb
sbb
mov
call
xchg
lret
aam
cmp
scas
push
lea
xor
adc
sub
mov
cmpsb
mov
sub
es
popa
jge
imulb
or
push
sbb
add
xchg
popf
and
xchg
sar
mov
testb
mov
mov
ljmp
inc
dec
fwait
mov
cmc
sub
mov
iret
cwtl
sub
dec
cli
repz
enter
cli
pop
enter
mov
scas
jb
out
or
imul
jo
js
pop
pushf
jno
xchg
popf
pop
sti
stc
dec
push
enter
mov
fs
test
mov
sub
int3
lds
test
mov
mov
jmp
std
bound
lret
cld
cmpsl
je
push
mov
sub
stc
pusha
out
sub
fdivl
add
adc
mov
hlt
and
stos
jnp
enter
loopne
add
dec
mov
dec
aam
or
sbb
cli
imul
dec
sub
dec
add
mov
pusha
push
jb
xor
into
dec
leave
jecxz
outsl
adc
inc
sbb
daa
and
inc
enter
mov
push
cmp
rcrb
inc
mov
gs
jge
loop
xchg
imul
mov
loop
ja
aam
daa
pusha
lret
mov
jns
xchg
mov
jne
ficoms
xor
cmp
jb
dec
or
in
or
ret
hlt
push
aad
or
cwtl
and
arpl
and
repz
jmp
jns
outsl
jne
pop
mov
leave
sub
fsubp
xchg
inc
sub
mov
or
dec
sti
push
sbb
movsl
add
sarb
les
arpl
fcoms
fmuls
test
out
pop
sbb
jbe
imul
lods
sub
or
add
fsubrl
iret
adc
imul
sbb
fs
fbstp
std
cmpsb
mov
and
cmp
gs
popl
int
add
subb
loopne
arpl
int
ficomps
jmp
aaa
enter
in
pop
sub
and
add
ret
sahf
fwait
push
mov
cli
stc
mov
ret
lea
lea
jb
test
lods
aaa
ficoms
stos
jecxz
push
ja
sub
sub
js
fs
inc
adc
cli
mov
push
addr16
pop
and
sbb
pop
jge
dec
shl
mov
jbe
sbb
xchg
xchg
sti
inc
cmp
pop
rcrl
fs
repnz
mov
mov
mov
or
dec
ss
mov
lret
mov
xorl
push
sbb
pop
mov
shrb
add
add
js
in
mov
les
lahf
in
les
sbb
mov
add
pop
jbe
jg
jne
fiaddl
cli
push
cltd
jmp
loope
je
sub
addl
mov
fidivrl
leave
cli
jmp
cs
sub
pop
mov
jg
ret
popa
nop
test
sahf
or
aam
jne
or
pop
pop
in
outsb
femms
ljmp
icebp
xchg
js
sahf
and
inc
xchg
xor
dec
popl
mov
lock
xchg
dec
jp
lds
scas
adc
outsl
call
cmp
mov
out
pop
sub
sbb
cmpsl
loope
lock
mov
pop
mov
lods
and
cmc
int3
int
inc
push
test
mov
aas
push
cwtl
int
popf
test
pop
xor
int
dec
sbb
mov
addr16
addb
out
or
add
mov
ror
cmp
in
lret
add
aas
sub
adc
nop
xor
jno
imulb
xlat
inc
fsubs
nop
test
sbb
aas
xor
test
sub
mov
mov
push
sbb
imul
fldt
rcrb
push
sahf
adcl
jns
call
into
and
ja
loopne
jg
and
leave
add
jg
in
mov
inc
fists
push
sbb
mov
push
clc
pop
ds
mov
cwtl
in
pop
sub
lret
inc
add
xchg
or
insl
pop
sbb
lods
fs
mov
push
iret
movsb
sub
xorb
or
test
sbb
lds
or
ficompl
sahf
icebp
mov
adc
rcrb
mov
cmovle
in
inc
push
lcall
or
arpl
roll
es
dec
or
dec
fistpll
ljmp
mov
xchg
push
mov
cmpb
push
arpl
or
lcall
add
movsb
sbbb
cs
nop
cmc
adc
dec
orl
mov
es
xchg
daa
jo
outsl
push
pop
nop
stc
xor
sub
mov
push
ds
mov
test
imul
xor
cld
add
sahf
cmc
addr16
mov
lret
test
xchg
mov
aas
mov
or
sti
out
dec
or
cwtl
inc
jo
in
inc
lods
das
push
sbb
dec
xchg
in
push
cmpsb
mov
sbb
rclb
push
js
ret
jecxz
les
adc
cmp
inc
jne
fwait
js
lds
mov
xchg
cmp
jle
jle
cmovo
subb
mov
fcomp
inc
test
jns
insl
nop
jge
adc
fisubs
ja
jnp
pop
jmp
push
sub
shr
daa
xor
dec
push
cmovp
sub
test
loope
mov
mov
inc
sub
xorb
push
and
mov
push
dec
inc
lods
push
cmp
rcr
cmp
loope
dec
push
test
stos
cmpsb
pop
xchg
pop
mov
add
ljmp
mov
and
push
mov
ds
jo
jo
aas
fisttpl
and
arpl
lods
mov
cmpsb
test
test
call
jp
imul
mov
cmp
cmpsb
xor
stos
xchg
neg
jmp
xchg
and
repz
push
mov
scas
and
es
and
inc
shrl
xor
fstps
mov
popa
imul
jnp
cs
adcb
lahf
loop
xchg
js
sub
arpl
push
xor
out
adc
push
xchg
inc
inc
xor
sub
test
inc
sub
mov
roll
imul
lcall
mov
or
das
scas
cld
jecxz
cmp
sbb
inc
inc
mov
pop
fadds
pop
cmp
sbb
mov
and
push
imul
adc
repz
adc
pop
and
sbb
lock
jecxz
dec
sub
jge
in
jb
mov
mov
mov
out
xchg
sbb
or
jae
xchg
mov
cltd
aam
push
clc
sub
add
jne
leave
and
movsl
jns
mov
lds
lcallw
dec
push
je
pop
mov
aam
in
pop
sarl
test
mov
jp
ficompl
cmp
insl
data16
xchg
mov
and
push
cld
xor
in
mov
in
cmc
cli
push
enter
and
in
pushf
cmpsb
xor
jecxz
ss
jne
in
pop
pop
xor
ret
sbb
lods
push
jmp
mov
sbb
stos
jne
lods
ret
outsl
imul
js
mov
loopne
pop
mov
cli
xchg
mov
test
pop
in
call
repnz
mov
sub
jmp
push
imul
inc
in
lods
stos
cld
dec
stos
jle
rcr
mov
setae
push
push
adc
sub
lret
xor
cmp
test
or
mov
jb
inc
leave
fsubrs
out
xchg
repnz
icebp
inc
ret
mov
or
sbb
xchg
pop
je
stc
je
fs
inc
inc
jne
punpckhdq
pop
outsb
push
jp
subl
xchg
pusha
jp
out
pop
jbe
cs
adc
sub
je
push
push
xchg
movsl
xor
repz
ret
fldt
cld
lret
das
xor
scas
insb
xor
sahf
ret
jo
push
icebp
out
jle
xor
jecxz
rclb
mov
jl
arpl
mov
rcrl
ss
mov
xor
dec
inc
adcb
out
jg
aaa
loop
fs
into
fbld
dec
fs
jle
cmpsl
mov
movb
insb
aam
pop
movsl
iret
mov
inc
stos
mov
add
or
imul
xchg
xchg
pop
jns
mov
pop
out
pop
jae
xchg
push
jno
push
sbb
push
or
loopne
and
pop
adcl
ja
sbb
stos
xor
movsl
pop
jno,pt
add
jne
dec
insb
cmp
sarb
loop
jl
outsl
add
xor
test
mov
dec
mov
outsl
sbb
and
pop
mov
filds
adc
pusha
push
mov
pop
add
mov
mov
jbe
insb
and
and
ljmp
lret
inc
cs
lahf
and
lock
push
add
sub
mov
jne
jge
mov
jno
jb
iret
movsb
add
mov
push
fnstenv
pop
push
mov
pop
rcrl
jbe
push
addr16
jl
cmp
daa
in
cmpsl
or
sbb
adc
dec
bound
add
xorps
pop
jp
add
jp
push
shlb
das
inc
xor
cld
scas
es
bound
leave
shrb
mov
sahf
pop
cmpb
xchg
or
cld
cmpsl
lret
cmpsl
sbb
inc
adc
push
outsb
bound
pop
gs
sbb
xor
pop
aad
mov
loop
jns
sbb
icebp
lret
inc
repz
cmp
push
stos
stos
icebp
xchg
addb
dec
mov
aad
shrl
dec
cmp
shl
jnp
fdivs
sahf
ret
inc
fisubrl
push
out
shrl
adc
ss
es
xor
pop
insb
jge
inc
pusha
mov
dec
jns
and
jo
mov
test
sarl
xor
cmp
add
pop
fbld
adc
xchg
sbb
add
and
test
outsl
add
sti
fsubrs
jo
jmp
stc
lock
jmp
jnp
outsb
hlt
inc
adc
icebp
mov
inc
add
add
inc
jle
jae
ss
sub
inc
add
and
ret
fnstenv
adc
xchg
jne
jns
cli
or
or
add
ffree
pop
pop
insb
dec
loope
repnz
adc
call
call
ficoms
fisttpl
sub
add
sahf
das
push
pop
or
inc
and
mov
lods
in
adc
hlt
jb
add
ljmp
out
icebp
ret
pop
mov
aaa
aam
jbe
mov
pop
jmp
dec
ficompl
stos
mov
call
call
xor
enter
or
pop
ret
movb
jge
mov
mov
rolb
sbb
sub
xchg
fbstp
mov
pop
pop
mov
fldl
shl
scas
xchg
pop
inc
fisttpl
dec
fucomi
mov
movsl
loop
nop
movsb
imul
gs
imul
jae
andb
lods
pop
fdiv
imul
inc
lahf
pop
lret
outsl
ds
add
icebp
add
cld
stos
faddl
icebp
jnp
pusha
cmp
clc
xlat
aaa
mov
push
xchg
repz
test
xchg
xchg
test
jbe
loop
es
mov
popa
mov
cmc
mov
push
lahf
xchg
push
aaa
adc
and
shrl
dec
jecxz
push
std
push
out
and
out
adc
sub
and
aas
xor
sti
sbb
icebp
sbb
sbb
ret
fbld
and
inc
pop
pop
jns
out
push
cmpsb
outsl
aad
mov
jns
mov
test
jne
imul
adcl
lahf
bound
insw
lea
test
fmull
loopne
rolb
push
lahf
dec
mov
mov
nop
pop
jns
mov
mov
or
imul
mov
lret
rolb
mov
icebp
ret
fxch
inc
mov
xor
repz
add
jmp
sub
dec
jnp
int
xor
mov
and
cmp
leave
push
fnstsw
les
je
mov
pushf
add
and
test
aaa
repz
dec
int3
stos
dec
fdivrl
lock
cmc
shld
outsl
movsb
inc
xchg
push
mov
jne
je
in
popl
dec
cmp
xor
call
pop
bound
gs
add
sub
subb
stc
ja
jecxz
jg
sti
or
mov
fidivrs
mov
mov
cmpl
insl
fwait
pusha
mov
xlat
and
and
xchg
sub
std
imul
fs
les
xor
dec
sahf
jecxz
xor
adc
sahf
adc
inc
out
scas
out
stos
cltd
sub
outsb
jae
mov
lock
fxch
pop
test
mov
insl
ret
mov
fcmovne
enter
leave
mov
roll
daa
mov
cmp
lahf
ss
stos
mov
outsb
dec
fdivrs
getsec
popf
lds
push
or
test
lock
nop
mov
pop
pop
test
jg
fcompl
sub
add
xor
jge
insb
xlat
xlat
pop
adc
cmp
ds
sub
pop
push
addr16
repnz
scas
cs
jp
je
lcall
mov
cmp
into
pop
pop
cmc
jo
or
mov
pop
mov
or
jecxz
outsl
mov
pop
scas
mov
sub
testl
sub
pop
mov
es
ljmp
in
adc
into
push
add
nop
std
js
fisttps
mov
xlat
add
sub
sbb
cmpsl
lds
fcoms
lahf
cmp
jge
mov
jne
stos
xchg
dec
lret
cmp
cmp
iret
cwtl
mov
push
ljmp
dec
xchg
shl
cmpsb
inc
mov
test
mov
outsl
fstps
fidivl
incl
mov
and
pop
xchg
pop
pushf
fcoms
lods
movsl
in
push
movsl
and
xchg
mov
mov
jmp
cmp
mov
outsw
cmpsb
dec
fs
xchg
inc
xor
lret
push
or
sub
lcall
imul
gs
add
mov
pop
push
add
mov
lret
imul
test
adc
jle
jmp
add
stos
enter
imul
ret
in
andl
sahf
mov
mov
push
inc
and
cmpsb
adc
pushf
clc
and
repnz
adc
mov
push
cwtl
pop
nop
std
dec
pop
jp
fs
mov
mov
sbbb
mov
pop
stos
je
sahf
inc
iret
cmpl
lods
jg
lahf
leave
icebp
xor
call
and
mov
insl
mov
in
out
lret
dec
fs
xchg
jg
scas
and
jbe
in
insl
cmp
into
or
outsl
mov
dec
mov
pop
rorb
add
es
add
andl
xchg
or
adc
pop
mov
pop
cmp
dec
jge
or
xchg
push
xlat
xor
pop
push
or
ds
dec
lds
mov
mov
aaa
in
mov
add
mov
int3
or
lea
mov
sbb
testl
mov
lea
sub
xor
test
cmp
xchg
dec
push
iret
stos
scas
add
rclb
std
jnp
mov
insl
jmp
jecxz
pop
add
pop
fldenv
jae
adc
inc
jns
sub
mov
nop
mov
stc
movsb
mov
push
je
hlt
xor
cli
xchg
mov
or
sbb
sub
scas
add
jp
push
or
ret
adc
add
and
add
xor
dec
inc
mov
inc
rcll
pop
push
cmp
insb
out
sub
test
and
movsl
adc
adc
mov
dec
lods
inc
mov
or
jb
lea
mov
ljmp
jo
ss
sbb
jo
dec
in
add
mov
shrb
and
pop
push
mov
push
mov
jnp
cmpsb
in
xchg
sbb
pushf
dec
scas
pop
jno
jns
loop
nop
mov
jnp
lds
jbe
jl
cmpsb
cld
movsb
adc
add
test
lods
mov
mov
or
pop
je
dec
loope
fnstsw
dec
jl
and
cmp
dec
inc
mov
push
push
outsl
sbb
pusha
add
or
inc
pop
push
push
rorb
xchg
insl
ds
cwtl
rorl
out
mov
pushf
lds
jecxz
fwait
sub
sbb
scas
and
mov
lret
or
cli
paddusw
inc
imul
dec
sub
add
or
nop
push
aam
xlat
daa
sahf
mov
or
lret
fucom
lock
jmp
insb
ss
pop
sub
bound
pusha
insb
ret
sbb
sbb
je
push
cmp
loop
push
aad
cmp
stos
int3
push
mov
idiv
inc
mov
mov
pop
not
fildll
mov
ds
sub
ss
outsb
jge
sub
insb
hlt
lcall
sarl
mov
test
add
mov
shll
scas
outsb
nop
js
sbb
loopne
mov
adc
ljmp
adc
bound
jae
mov
out
xchg
pushf
nop
push
inc
inc
in
sub
fnstcw
ficoml
hlt
mov
dec
and
cltd
fiadds
mov
add
pop
sti
fidivrs
xchg
sbb
sbb
xchg
xchg
jp
stos
mov
dec
add
inc
or
xchg
mov
repz
test
cwtl
movsb
leave
jnp
adc
push
push
jns
mov
nop
bound
sub
xchg
hlt
arpl
aam
aad
cld
xor
and
das
repnz
jns
cmp
bound
add
test
jmp
push
ja
scas
aad
jle
imul
and
data16
lods
imul
aaa
leave
or
add
inc
jecxz
mov
into
mov
imul
fwait
aam
sahf
insb
in
mov
ja
fiaddl
insb
adc
jae
or
int3
jg
es
scas
cwtl
iret
mov
push
xchg
mov
out
sbb
repnz
nop
dec
jmp
cmp
in
mov
addl
xchg
mov
add
stos
cltd
add
shlb
shll
pusha
adc
in
inc
xchg
cltd
std
fadd
and
loop
lods
mov
jmp
lods
int
mov
pop
cmpsb
outsl
out
xchg
xor
mov
sahf
inc
aad
push
add
sub
sbb
inc
mov
pop
orl
adc
call
xchg
mov
jp
and
or
fwait
jecxz
pop
hlt
loopne
enter
popa
adc
mov
lahf
xlat
popa
cmc
fisubs
clc
pop
sub
mov
and
lods
or
cmp
xchg
adc
aaa
int3
cwtl
jns
mov
shrl
pop
mov
sbb
jno
mov
sub
loop
adc
repnz
mov
dec
fs
push
ljmp
pop
mov
cmpsb
dec
adc
mov
test
sub
or
in
mov
loop
jge
dec
inc
shl
mov
js
f2xm1
incl
icebp
pop
mov
push
lcall
pusha
sbb
add
loopne
es
movsl
push
cli
in
dec
push
arpl
push
cmpsl
and
mov
cltd
adc
imul
lock
fs
push
add
outsl
enter
out
mov
pop
xor
iret
fbstp
adc
or
add
lret
jbe
push
movsl
in
sbb
outsl
jo
push
push
rclb
cmp
add
adc
les
push
out
and
add
sbb
sti
cmp
sahf
and
jg
adc
lcall
lods
movsb
fistpl
shl
cmp
lods
cmc
jg
and
mov
mov
ret
in
cmp
insl
add
loopne
outsl
push
in
xchg
out
sub
test
sbb
inc
adc
rorl
mov
xchg
xchg
sbb
adcb
mov
stos
shr
mov
icebp
shll
sbb
adc
add
sub
mov
jecxz
push
fists
enter
div
mov
outsb
pop
cwtl
lea
pop
xor
lcall
insl
jmp
fcom
xchg
pusha
ficomps
clc
jnp
test
stc
in
hlt
cs
xchg
and
mov
dec
adc
je
mov
sbb
arpl
mov
lahf
notl
sbb
xor
push
shrl
pop
cmp
sarb
push
lock
xorb
push
sub
pop
add
jae
pushf
pop
cmp
fcmovu
arpl
ffree
hlt
pop
push
into
and
pop
fidivrs
loopne
and
popf
push
push
jno
and
je
xchg
das
sti
sbb
int3
shll
rcpps
or
std
aas
lret
les
and
cli
xor
sub
leave
mov
lods
lods
fmulp
lcall
das
and
xlat
pop
jbe
or
cmp
ficoms
pop
pop
lods
push
xchg
clc
pop
cld
push
dec
insb
xchg
push
xor
subb
mov
adc
ljmp
pop
xlat
rcll
and
jno
mov
or
push
sub
cmp
lahf
push
in
into
jl
ret
int3
pop
push
or
pop
xor
outsl
aad
mov
xchg
mov
add
jno
push
jb
outsb
roll
add
mov
sbb
test
ret
mov
sbbb
pushf
test
dec
in
mov
hlt
add
fstpt
mov
icebp
lahf
stos
mov
cmp
insl
orb
jo
push
push
and
sti
and
jmp
pop
mov
lods
imul
pop
fdivrl
out
outsb
outsl
inc
or
sbb
adc
adc
push
dec
jg
out
push
or
dec
inc
jae
lods
cmp
xchg
imul
mov
mov
dec
adc
jg
jbe
test
mov
rolb
xchg
mov
fdivrs
daa
call
jg
add
fisttps
pop
lods
out
mov
shrb
inc
inc
repz
cmp
xchg
imul
test
sbb
add
add
js
cmp
push
pop
addb
test
and
out
dec
mov
scas
stc
jo
lret
push
shl
push
cltd
xchg
or
mov
add
ds
movsl
loopne
in
xor
sbb
inc
enter
or
mov
enter
cmp
stos
sub
xor
test
aaa
mov
xchg
int
xor
sbb
inc
int3
adc
lock
mov
stc
stc
repz
arpl
xchg
sbbl
icebp
mov
pushf
jne
adc
cmpsl
xchg
in
faddl
iret
mov
lods
sub
sbb
fwait
lret
call
adc
jle
stos
dec
cmpsb
ret
adc
cmp
cltd
imul
fldt
arpl
int
mov
in
jmp
into
into
sub
and
in
lds
leave
aad
jge
cmpb
sbb
insb
jbe
xchg
sub
adc
out
mov
retw
pusha
dec
jae
mov
call
mov
popa
mov
dec
imul
out
jl
xorl
mov
push
or
les
shrl
and
pop
sub
jns
jecxz
aad
jne
stos
sbb
fdivrs
cmp
data16
addr16
inc
outsl
push
repnz
test
sahf
mov
es
push
cmp
mov
inc
pop
inc
cmpsl
inc
add
popf
sub
jnp
iret
xchg
dec
add
sbbl
dec
xor
push
push
repz
jge
gs
pop
sbb
lret
out
mov
and
mov
je
cmp
hlt
pop
pop
pop
adc
sbb
in
pop
fldpi
loopne
cmp
or
sub
xor
or
cltd
aaa
aad
add
cmp
dec
je
pop
movsl
add
add
inc
push
push
adc
dec
mov
mov
push
sbbb
adc
dec
roll
lret
popa
js
mov
gs
popl
pop
sahf
adc
int
call
stos
cmpsl
stos
push
iret
mov
push
xchg
in
xor
cli
fmull
cs
pop
mov
cmc
lds
adc
inc
add
incl
dec
test
sub
call
mov
mulb
xor
xor
int3
pop
rolb
jns
movsb
adc
in
and
ret
pusha
mov
movsb
inc
out
xor
ret
jp
pop
pop
pop
push
sbb
das
movsl
movsl
jo
mov
or
out
adc
movsl
jne
ret
xor
sub
daa
dec
in
and
mov
cmc
cmp
jge
mov
mov
daa
int3
mov
cltd
mov
lea
sub
loope
les
iret
dec
xchg
mov
pop
xchg
std
stos
movsl
out
fstps
mov
mov
pop
jmp
mov
aam
cmpsb
dec
sbb
fisttpl
out
mov
inc
loope
cmp
push
sub
mov
xchg
aaa
mov
inc
ljmp
push
cli
mull
mov
push
fiadds
imul
divb
xchg
mov
addb
lret
in
clc
enter
xor
dec
mov
mov
xchg
lods
adc
adc
cmp
cmp
lahf
mov
jp
arpl
dec
mov
decb
or
and
test
jae
sbb
int3
mov
xchg
pop
xchg
rcrb
stos
lea
hlt
mov
in
sub
pop
out
loop
pop
jle
or
pop
nop
out
fldl
nop
imul
sbb
arpl
sbb
and
cmp
push
jmp
test
popa
rolb
pop
push
push
inc
pushf
outsb
add
xor
pop
ret
fyl2x
dec
push
scas
inc
push
push
push
int3
fldl
push
sbb
xchg
cltd
hlt
inc
cmp
sub
xchg
pop
pusha
sahf
xchg
add
call
rolb
push
repnz
call
jmp
push
xchg
xchg
and
cmp
sub
popa
hlt
sbb
js
push
shll
sbb
stos
negb
push
jmp
sbb
jb
insb
sub
jp
add
in
into
pop
mov
test
inc
xchg
aas
and
int3
adc
testl
int3
outsl
pusha
jp
add
lcall
pop
push
jns
sbb
mov
jno
ficomps
jbe
sbb
jbe
subl
cmp
cmpl
in
or
rcrb
clc
xor
iret
gs
mov
push
cmp
inc
push
or
imul
movsl
mov
mov
aam
cmp
dec
sbb
adc
fimull
in
sbb
mov
fisubs
jo
cltd
adc
sti
insb
or
pop
push
subl
cmp
push
fisubrs
jnp
scas
clc
sbbl
or
faddl
sub
xchg
jecxz
movsl
mov
int
aam
mov
popa
neg
leave
xchg
lds
les
pop
push
and
ja
pop
xchg
mov
sub
mov
lock
cld
int3
bound
test
insl
cwtl
mov
push
jg
and
sbb
cltd
cmp
lods
cli
mov
rorl
adc
pop
cli
ret
cs
inc
call
xchg
pop
inc
movsl
add
test
mov
xchg
nop
add
aam
pushf
ds
mov
push
mov
xor
jns
out
or
icebp
push
imul
ds
cltd
add
pop
push
push
mov
lods
movsb
inc
int
push
leave
sbb
insb
mov
rcrb
xor
sub
jno
inc
gs
push
jg
stc
ljmp
pop
sub
mov
jle
pop
mov
pop
mov
cmp
pop
cli
dec
dec
inc
jno
jne
pop
int
push
xor
sub
pusha
outsb
ljmp
xchg
addr16
cmp
std
adc
and
test
test
shlb
stos
and
dec
in
add
xlat
push
loope
inc
orb
push
popf
or
push
int3
movsb
adc
in
rorl
jmp
and
push
push
pop
cs
mov
and
mov
xlat
and
ret
add
lods
add
xor
lret
or
mov
movsl
mov
leave
cli
cs
fmul
pop
mov
clc
lds
sahf
mov
inc
aad
sbb
sahf
mov
insl
les
or
push
loop
cwtl
cmc
dec
ret
mov
inc
xchg
adcb
or
lods
adc
lahf
inc
sbb
xchg
les
mov
xor
lods
pop
fdivs
pop
jnp
les
fsts
pusha
mov
or
jb
sub
adc
or
pushf
xchg
stos
sub
cmp
mov
push
dec
xchg
mov
fucomi
lods
cmpb
lods
push
stc
das
xchg
push
popa
mov
decb
insl
add
loop
pusha
leave
divb
sti
shll
cmp
inc
and
hlt
loop
andl
pop
jbe
int3
xchg
cltd
test
jbe,pn
mov
push
out
and
fprem
mov
in
shll
add
mov
in
ss
movsl
iret
nop
jno
test
mov
jo
adc
ljmp
sbb
and
out
mov
outsl
xchg
push
cmpsl
mov
out
fsubrl
repnz
test
add
xchg
movsl
dec
cmpsl
loope
add
xchg
sub
outsb
inc
cwtl
jmp
xchg
inc
adc
addr16
push
jnp
mov
sub
adcb
inc
xor
or
jp
icebp
mov
subl
out
loop
das
pop
insl
jns
sbb
or
pop
fwait
dec
enter
imul
fnsave
lret
ret
movlhps
popa
and
push
pop
ret
mov
adc
jp
out
mov
stos
shl
adc
stos
outsl
lea
or
cltd
call
and
scas
cmp
inc
movsl
mov
add
insl
and
test
outsl
bound
cmp
fst
bound
scas
push
or
js
push
jp
fwait
jp
xchg
xchg
cmpsb
push
mov
mov
mov
movl
jbe
loope
mov
mov
inc
outsb
sbb
dec
aas
xor
addr16
mov
xchg
cmc
sbb
mov
setg
lret
push
sub
dec
xchg
mov
aas
test
popf
lret
popa
sub
shll
mov
xchg
aad
dec
mov
sub
push
scas
shll
adc
xchg
ss
mov
sbb
xor
jg
mov
cmp
ret
test
xchg
test
sarl
xor
fiaddl
lret
mov
adc
jecxz
add
and
xlat
stos
inc
jecxz
in
mov
pop
mov
test
mov
repz
aaa
xor
adc
sub
lret
xchg
push
push
xchg
dec
add
ret
lods
xor
aad
push
xchg
ss
icebp
add
repnz
sbb
shrb
fbld
add
mov
ficoml
shll
sbb
insl
dec
inc
loop
sbb
jns
sbb
sub
adc
rol
xor
fisttpl
xchg
pop
sub
inc
lret
mov
cltd
loop
insl
imul
stos
loope
cmc
repz
sahf
cmp
xchg
sbb
sub
cmp
mov
push
push
mov
cmp
ret
sahf
sahf
xor
dec
jae
lahf
repz
out
in
jge
movb
inc
imul
mov
push
add
into
push
cltd
lcall
outsb
cmp
fstps
leave
pop
insb
push
fcompl
inc
jns
roll
mov
xor
cmpsl
outsb
fdivrs
xchg
adc
dec
mov
mov
jle
and
adc
daa
push
insb
xor
add
sbb
cmc
mov
addr16
fildll
ss
ret
stc
push
test
sbb
and
mov
jno
and
add
sub
scas
mov
adc
push
pop
pop
push
aad
in
push
bound
adc
cltd
arpl
sbb
scas
dec
fstl
push
das
imul
push
stc
sbbb
dec
ret
sbb
mov
dec
cmp
add
xchg
xchg
push
dec
pop
and
into
addr16
dec
sbb
sbb
push
xor
add
xchg
subl
jl
pop
push
ret
xchg
into
roll
cmp
sub
shll
mov
daa
sbb
mov
lahf
outsl
mov
adc
jp
shlb
or
mov
mov
push
test
fistps
mull
fs
data16
sbb
sarl
dec
decl
jle
addr16
ljmp
mov
jl
mov
movsl
inc
fsub
popa
pusha
es
pop
ret
mov
mov
arpl
test
pop
lds
cli
or
fdivl
lcall
sbb
nop
dec
jge
push
test
sbb
jns
push
jo
xchg
add
and
testb
hlt
jg
and
sbb
ja
data16
out
or
in
mov
push
lcall
insl
test
fists
jl
push
ret
jb
mov
outsl
je
in
jae
fcmovnu
add
pop
xchg
mov
add
pop
notb
mov
mov
and
push
daa
shl
push
lahf
roll
in
sub
pop
add
ret
or
sub
scas
jecxz
adc
cmpsb
sti
data16
into
cmp
rcrb
jge
fwait
arpl
clc
cli
scas
xchg
jp
mov
adc
lods
adc
clc
adc
dec
pop
push
repz
ret
adc
out
out
sbb
das
sbbl
stc
loopne
gs
pop
ret
shll
outsl
popf
enter
or
jecxz
xchg
sub
push
pop
lret
pushl
xor
cmpb
dec
rorb
push
push
inc
int3
test
pop
andl
fnstsw
notb
jmp
ljmp
bound
incb
call
add
mov
jge
popa
mov
pop
addr16
movsl
jne
das
aad
test
pushf
nop
clc
pop
xor
scas
and
dec
outsl
push
dec
test
lds
mov
cmp
scas
mov
push
pop
out
dec
in
xor
mov
dec
andl
notl
dec
sahf
push
xchg
mov
cmp
jne
ds
dec
jecxz
xchg
jge
dec
or
fcmovnb
lods
adc
mov
jmp
clc
outsl
out
out
stos
roll
mov
jno
add
cmpsl
cli
arpl
add
pop
dec
loopne
push
sub
lock
add
mov
enter
call
sub
bound
les
cmc
jmp
rcr
or
out
lcall
shll
mov
loope
add
push
mov
or
mov
cld
jns
loopne
dec
movsl
ss
ja
addb
adc
sub
popa
add
ds
sti
rolb
adc
mov
pop
mov
mov
iret
lea
je
imul
test
repz
stos
xor
mov
sbb
pop
in
xchg
jl
pop
fdiv
fwait
or
ds
pop
fistl
jle
dec
fists
popf
mov
mov
cmp
mov
fwait
sub
lcall
mov
js
stc
sub
insl
rcrb
popa
repz
repz
dec
push
push
jg
jb
outsl
mov
fisubs
scas
lret
and
cs
icebp
inc
lods
mov
mov
add
and
mov
adc
mov
adc
sub
inc
adc
inc
dec
out
sub
pop
fwait
jnp
mov
mov
je
test
jl
outsl
inc
stos
lcall
leave
pop
push
mov
dec
in
xor
add
pop
lret
jno
mov
xor
jno
or
push
cmpsl
jp
test
and
and
lods
adc
stos
sti
or
faddl
test
pop
scas
and
mov
add
pop
lret
cs
sbb
leave
inc
repnz
and
push
icebp
imul
xchg
lods
lods
pop
xor
jnp
dec
and
jg
inc
lret
mov
sub
mov
jns
psrad
or
xlat
inc
and
ret
sbb
cmp
adc
sbbb
xchg
push
add
test
lea
push
ja
hlt
test
testl
ret
push
cmp
cld
mov
adc
jecxz
cmpb
js
rolb
hlt
mov
bound
inc
sub
insb
out
in
xor
or
xchg
cmp
dec
cld
loopne
jmp
push
js
enter
xor
mov
push
mov
ret
jmp
iret
daa
push
test
pusha
cmp
mov
cmp
xor
fwait
movsb
aad
call
ja
fimull
add
dec
faddl
sar
mov
jbe
sbb
shlb
in
xor
daa
push
or
inc
fisubrl
iret
addr16
aas
xchg
fs
dec
inc
adc
inc
inc
jl
jae
or
mov
adc
xchg
scas
mov
mov
in
fldl
cmpsw
ljmp
outsl
gs
inc
mov
das
ljmp
sti
add
xchg
xchg
push
in
ljmp
inc
arpl
scas
subb
arpl
arpl
push
or
test
and
fwait
inc
ss
pop
inc
fsubp
adcl
sbb
test
mov
enter
outsb
fdivs
dec
add
aad
cmp
dec
iret
daa
cmpsb
es
into
repnz
dec
int
adc
mov
push
pop
sub
cwtl
mov
mov
bound
popa
xor
bound
xchg
pop
arpl
sbb
cmpsb
push
add
test
pop
mov
test
sub
cmp
imul
call
call
aas
jae
pusha
cld
cmc
inc
aam
and
jo
mov
imul
sub
sbb
jmp
lret
pushf
cli
outsb
inc
enter
lea
cmp
addr16
sbb
adc
mov
add
ret
leave
or
mov
adc
fidivrs
mov
mov
sbb
iret
int3
jecxz
ja
xchg
enter
mov
cld
ficomps
popf
pusha
repz
add
out
add
orb
clc
aad
ret
jns
jp
orb
push
dec
test
aaa
fdiv
pop
sub
loop
push
mov
scas
xchg
nop
arpl
jo
or
dec
and
int
rorb
inc
aaa
xor
push
fisubs
mov
rorb
inc
lcall
xchg
xor
jl
in
jo
sbbb
push
sbb
test
push
shlb
adc
sub
das
pop
xor
nop
adc
and
aas
pop
aas
faddl
test
adc
jle
mov
or
mov
outsb
mov
loope
adc
xchg
in
mov
add
sbb
xchg
les
ja
inc
lahf
repnz
test
sub
outsl
cmp
and
in
mov
hlt
pusha
or
fistps
mov
repnz
mov
popa
jle
pusha
jo
out
test
les
mov
out
push
fidivrl
js
inc
sbb
or
call
cld
jns
leave
pop
fsubl
xchg
pushf
mov
push
lgs
cmp
pop
mov
unpcklps
inc
mov
es
in
mov
popl
jmp
mov
sti
jmp
aam
data16
mov
xchg
sbb
dec
out
fildll
icebp
or
inc
in
and
daa
cmpb
jge
xor
sbb
xchg
jecxz
add
and
sti
xchg
sbbb
mov
dec
ret
jmp
jae
xor
scas
movsb
sub
mov
ja
pop
push
push
aam
insl
dec
mov
outsb
dec
and
outsl
pop
into
in
mov
push
js
jg
adc
jg
inc
mov
xchg
insb
cmc
fisttps
or
inc
int
mov
nop
aad
outsb
pushf
jne,pt
adc
test
adcl
jl
outsl
stc
xchg
dec
cmpsl
push
or
pop
push
lea
mov
jne
jecxz
decl
stc
sti
bound
sbb
int
loop
mov
out
in
xchg
addl
mov
negl
fsubrs
sbb
lcall
or
cmpsb
and
mov
cmp
les
adc
aad
inc
bnd
aad
dec
gs
push
cmp
loope
movsb
nop
and
inc
xor
pushf
push
push
pop
das
or
lea
loope
mov
nop
cwtl
pop
cmp
push
xor
nop
adc
int
mov
adc
cs
jb
gs
cld
xchg
jo
sub
mov
adc
frstor
pusha
mov
push
lcall
mov
repz
add
jp
scas
xchg
mov
dec
cwtl
aam
stc
mov
scas
enter
pop
xchg
popa
nop
mov
jmp
dec
cmp
adc
inc
mov
inc
cwtl
sub
mov
lretw
inc
pop
or
lret
xchg
and
out
jmp
inc
leave
cmp
andb
xchg
lcall
loope
mov
sub
xchg
cmp
lods
mov
sahf
adc
xor
mov
repnz
in
lahf
pusha
xchg
sub
xchg
icebp
shrl
xchg
sar
mov
xchg
dec
dec
jno
or
in
and
mov
imul
fldl
popf
push
iret
cmc
es
loop
pop
roll
push
iret
rorl
cmp
inc
shll
outsl
jmp
pushf
pop
pop
cld
mov
outsl
pop
ss
pusha
mov
ja
or
fwait
shrl
cmpsb
popf
outsb
push
xchg
in
les
push
jmp
mov
fwait
rcll
inc
dec
mov
out
adc
ror
pop
test
ror
add
mov
imul
or
pop
xlat
xor
inc
cld
xor
loopne
mov
and
mov
sahf
lcall
mov
and
jno
pop
jbe
mov
pop
mov
or
and
int
pop
mov
cmp
inc
hlt
adc
out
lods
add
js
jmp
sub
adc
fiadds
xchg
xor
out
dec
mov
clc
dec
mov
repnz
test
xorb
lods
mov
mov
pop
jbe
stos
sub
xchg
lods
push
arpl
push
inc
popa
gs
pop
cmp
sbb
scas
cmp
test
lods
xor
cli
sar
shll
xchg
popf
mov
or
ljmp
int3
lret
push
add
shlb
dec
push
sti
xor
jmp
js
jg
push
lahf
sbb
in
mov
fdivrl
je
shl
cmpb
fcompl
add
in
add
mov
stc
les
pop
ss
stos
cmp
sbb
jae
sbb
pop
mov
out
in
xor
adc
and
push
ds
dec
js
xor
sbb
cwtl
hlt
or
cmp
pop
or
pop
leave
pop
adc
xchg
add
pusha
cmpsb
lcall
dec
push
inc
or
fisubl
pop
data16
sbb
add
pusha
je
push
push
jne
and
fistpl
push
sti
sub
lea
mov
xor
fsubl
loopne
cld
fcmovb
pop
sub
aad
pop
scas
mov
xchg
arpl
and
mov
jnp
insl
cli
ret
arpl
insb
cmp
hlt
adcb
sub
or
adc
xchg
jge
cmp
xchg
xchg
adc
sub
in
rcr
aad
lret
add
xor
xchg
rol
rep
or
xchg
gs
enter
xchg
inc
pop
inc
aad
add
mov
xchg
xchg
cmp
or
testb
pop
adc
pop
push
fildl
mov
sub
cmp
fmuls
push
push
dec
cld
mov
cmp
sbb
stos
lret
dec
push
stos
push
lahf
xchg
aas
jbe
mov
repnz
test
scas
pop
mov
and
aam
jle
cmc
push
push
inc
loop
cmp
nop
aas
subl
jecxz
mov
pop
enter
and
sbb
or
insb
imul
icebp
cmp
out
repnz
pop
in
gs
jbe
or
inc
push
fimuls
jo,pn
insl
mov
popa
fdivr
push
cmp
ss
incl
cli
cld
push
jp
add
popl
hlt
jl
mov
inc
rcrl
mov
jp
xor
jne
ljmp
mov
and
dec
out
xchg
les
js
or
in
push
push
push
cmp
js
dec
or
xor
addl
roll
fsubrl
cmp
and
lcall
in
or
or
std
jg
mov
jne
jns
inc
jne
mov
stos
cmp
outsb
cmp
negb
jno
and
aas
je
rorl
pop
add
or
aad
outsb
mov
cltd
pop
loope
push
rcll
xchg
mov
mov
jo
and
jo
jge
fisubrs
pushf
push
inc
xchg
push
andb
fstps
cmp
inc
fistpl
adc
call
daa
sub
push
push
std
ss
mov
jnp
xor
pcmpeqd
and
cli
sbbl
push
sub
out
sub
fsubrl
in
add
push
sbb
xlat
pushf
sbb
xor
int
push
rorl
incb
mov
mov
xor
outsl
lea
mov
pop
test
jmp
mov
setb
xor
pop
imulb
xor
les
cmp
iret
adc
rclb
outsl
popf
mov
sub
inc
mov
push
shll
sarl
pusha
and
fdivr
mov
mov
daa
fildll
push
call
stos
xor
xchg
pop
movsl
pop
mov
push
mov
testl
mov
dec
push
xchg
adc
cli
mov
push
push
ret
adc
cmp
jl
arpl
mov
out
dec
insb
in
gs
loope
inc
pop
imul
pushf
xor
push
xchg
clc
and
mov
rorb
cmpsl
inc
je
pop
push
inc
dec
loopne
xlat
mull
mov
ret
push
sahf
fs
scas
jnp
lahf
cmpsb
jge
cmpsl
inc
or
or
and
dec
sarl
sahf
pop
jecxz
mov
call
jmp
cld
or
xor
test
jae
stos
les
push
jp
repz
lret
mov
in
xorb
xchg
inc
cmp
inc
mov
iret
inc
call
mov
cmpsb
dec
popa
sub
inc
nop
aaa
repnz
icebp
jle
fnstsw
in
push
and
jns
stos
imul
test
jp
sub
mov
xchg
pusha
inc
popa
sub
addb
inc
por
sub
push
in
int3
leave
cmc
lcall
stos
mov
sub
push
xchg
lret
xchg
jle
push
inc
rcll
loop
adc
ret
fisubrs
sbb
in
mov
insb
js
pushf
sub
add
icebp
add
mov
jecxz
out
lret
lret
jnp
sarl
fisubs
mov
sub
in
or
sub
stc
add
lods
pop
xor
xchg
mov
push
and
outsb
sbb
rclb
adcl
mov
cmp
in
inc
roll
sbb
repz
pop
in
shrb
push
fld
rorl
mov
icebp
insl
mov
dec
sbbb
lahf
pop
fnsave
fldenv
mov
out
xor
insl
mov
aaa
outsb
icebp
and
aam
pop
jnp
das
adc
adc
pop
lea
push
xchg
cmp
movsl
sbb
jl
dec
mov
and
pusha
outsb
ljmp
push
aas
fisubl
push
loope
jns
int3
xor
repnz
add
orps
mov
mov
call
popa
ljmp
mov
daa
xor
xlat
cmpsb
cmc
pop
mov
mov
jae
dec
mov
mov
iret
adc
cld
push
daa
in
mov
scas
xchg
push
jne
cmp
add
js
loope
flds
scas
data16
xor
in
rorl
bnd
adc
lcall
mov
pop
movsl
dec
or
loop
cltd
cmp
add
leave
jbe
call
call
push
popa
cwtl
pop
call
adc
sub
mov
xor
xlat
jae
cmp
jecxz
std
adc
jg
outsl
out
sbbl
or
jne
cmpl
aam
pop
push
addr16
pop
pop
pusha
jns
shll
insw
pop
xor
sub
dec
inc
cmpsl
inc
pushf
mov
cmp
xor
rcl
or
add
je
ror
and
jge
mov
hlt
inc
push
mov
and
rcl
scas
mov
xor
xchg
or
cs
notl
sti
mov
xchg
out
push
add
orl
push
rol
out
lret
adc
iret
xor
adc
es
dec
repnz
movsb
and
mov
mov
mov
cmp
cmc
inc
stos
dec
and
test
jl
pop
mov
ret
sarl
ljmp
in
pop
test
test
push
sbb
pop
jmp
les
imul
cltd
mov
xchg
fsubl
cmp
out
insb
into
cmpsb
jmp
inc
dec
xchg
cli
adc
clc
ds
call
mov
pusha
stos
lcall
xchg
mov
repz
dec
es
pop
jmp
mov
into
mov
loope
ja
std
call
sbb
adc
sbb
pop
xchg
rolb
push
cli
xchg
dec
arpl
rolb
mov
push
mov
xchg
push
mov
jb
cmp
pop
sbb
xchg
inc
aam
test
lret
mov
jb
cltd
test
stc
inc
adc
arpl
mov
pop
loopne
jg
mov
fwait
out
pop
sbb
mov
dec
je
sbb
int3
dec
mov
jns
xchg
sbb
push
xchg
inc
jns
jno
mov
mov
movsb
jno
aas
outsb
cmp
sub
pop
inc
and
mov
sub
pop
ljmp
ret
sbb
fnstenv
add
out
pop
mov
mov
cli
insl
jl
out
out
fdivl
clc
scas
in
xchg
int
cmp
inc
xor
fistpl
adc
cmp
js
inc
pop
xor
cld
aaa
mov
add
int3
lds
ret
jl
js
lock
and
jns
out
sub
mov
sbb
xchg
pop
push
pop
popa
fbstp
popa
or
sti
aad
arpl
das
add
or
mov
mov
jecxz
movsb
out
fisttpl
aad
lock
xchg
xchg
xor
xor
or
pushl
mov
fwait
jmp
xor
add
addb
sub
pop
xor
stc
aam
push
push
repz
cmp
movsb
outsb
or
fdivrs
adc
mov
jne
mov
arpl
push
sbb
push
jle
push
pop
out
call
lcall
push
fs
push
lret
jle
aas
and
lds
jp
inc
push
aam
push
mov
jmp
decb
add
cmpsl
fwait
lret
es
jns
sub
cmc
lods
jge
xor
or
adc
stc
mov
push
aas
xor
rcl
shll
mov
enter
lcall
sbbb
sti
mov
jle
or
shrb
add
mov
mov
imul
lret
and
es
pusha
lahf
jle
ds
cmpsl
or
cmpsl
lea
inc
cmp
mov
insl
loop
mov
clc
cmp
add
mov
sub
push
and
cwtl
ret
iret
adc
or
cmp
jmp
jno
inc
or
push
push
ret
adc
sbb
mov
inc
or
or
fdiv
int
sub
frstor
daa
add
arpl
or
mov
xchg
jl
insb
cmc
ror
mov
and
std
mov
shl
ret
scas
fisubl
jbe
gs
and
ficomps
popa
and
add
insl
sbb
jo
loopne
aas
cmpsb
lret
xlat
jae
arpl
pop
imul
sub
and
xlat
iret
cmp
add
cmpsl
in
in
rolb
ret
push
push
pop
lret
into
mov
sahf
xor
add
mov
addr16
outsl
int3
dec
adc
outsl
loopne
pop
mov
pop
repz
stos
cltd
call
adc
aaa
pushf
adc
xor
xor
stos
ja
xlat
mov
es
decl
mov
and
add
sub
jl
add
test
or
push
xor
pop
repz
sub
cmp
inc
rcl
or
mov
xchg
and
repnz
outsl
lods
cld
xorl
fs
mov
sub
or
mov
mov
sbb
repz
dec
ja
mov
push
arpl
mov
pop
fwait
and
sbb
out
mov
ss
or
cmp
into
mov
pop
mov
decl
sbb
pop
inc
pop
insl
sbb
pop
ja
cmp
imul
dec
mov
cmpl
popa
adcl
or
sbb
call
repnz
addr16
ljmp
daa
loope
bound
popa
xor
imul
mov
pop
imul
stc
xchg
lret
pop
dec
or
cmpb
xor
ljmp
or
dec
loope
sub
iret
pusha
test
sub
pop
pop
mov
cwtl
stc
mov
and
cmpsl
inc
js
das
call
cmp
scas
xchg
lahf
repz
cwtl
insl
test
dec
fcomip
push
jecxz
mov
shlb
sub
dec
xchg
inc
scas
dec
loope
subl
jl
loope
and
js
addr16
test
sbb
mov
leave
add
movsl
inc
das
dec
mov
arpl
push
or
sub
out
mov
dec
sub
and
cmp
out
cwtl
aaa
mov
sub
insb
push
cs
cmpb
push
xchg
pop
mov
jns
mov
push
jne
into
cs
push
repz
pop
mov
int
ret
xchg
or
shrb
xor
ss
bound
gs
and
int3
sbb
xor
jecxz
lods
in
push
xlat
pop
sbb
pusha
sub
int3
or
mov
cmp
jb
dec
js
add
sbb
mov
xor
push
inc
lahf
mov
and
lcall
add
or
xor
sahf
loope
cmpl
ja
ss
jnp
xor
pop
add
xchg
popa
sbb
iret
iret
and
lcall
es
mov
test
cmp
mov
gs
enter
mov
call
mov
dec
cmp
lds
stos
sbb
mov
idivl
inc
dec
in
mov
sarb
pop
jecxz
mov
and
pop
cmp
lds
sbb
sub
sti
hlt
dec
movsb
and
pop
mov
inc
mov
in
sub
cmp
cmp
hlt
add
xor
das
dec
int3
rcl
inc
push
rclb
mov
mov
ficomps
xor
insl
sti
sarb
in
inc
test
sub
clc
fimull
js
ds
out
mov
pop
stos
jmp
inc
jnp
lds
or
sub
shlb
push
andb
sbb
cs
pop
mov
xor
mov
scas
and
insl
cld
pop
inc
nop
jmp
cmp
popf
imul
xchg
pop
or
sti
push
jno
je
sub
jns
or
mov
dec
sbb
out
push
cs
mov
sahf
fpatan
lret
mov
lahf
clc
xor
out
in
push
addr16
inc
mov
stos
push
hlt
clc
sbb
icebp
pop
mov
dec
or
in
xor
scas
sub
cmp
in
jmp
add
jecxz
imul
ljmp
nop
xor
jno
and
imul
repz
leave
jo
out
jl
mov
mov
dec
cmp
stos
jmp
fldt
jmp
cmpsl
pop
sbb
mov
lahf
mov
out
std
lret
sahf
fxam
jns
mov
scas
js
xchg
mov
sbb
inc
push
lock
mov
push
out
xor
outsl
cmpsb
inc
ds
fimuls
jl
and
icebp
dec
pop
ja
fs
pop
es
fdivrl
bound
cmp
lods
mov
shrl
sub
or
aas
in
sub
das
je
sbb
decb
scas
scas
cmp
mov
mov
fistpl
inc
scas
jle
setae
adc
dec
repnz
sbb
cmp
sahf
adc
push
push
stos
lods
pop
jle
lods
test
push
mov
sub
cmpb
cs
and
repnz
jl
pop
cs
stc
cmp
push
pop
pop
pop
out
add
fisubrs
add
xor
mov
sbb
jle
add
dec
ljmp
push
sbb
inc
inc
fwait
testl
and
mov
cli
mulb
divb
push
stc
sarl
jno
jmp
jl
mov
ds
leave
mull
or
cld
pop
outsb
mov
sahf
cmp
mov
repz
into
jl
mov
or
sbb
cwtl
lahf
cmpsl
or
aam
pusha
std
add
leave
enter
dec
jae
jnp
loopne
push
lret
or
xlat
add
cltd
cmp
imul
das
cmp
in
dec
imul
dec
pop
xor
inc
sahf
subl
aam
mov
cmpsb
es
mov
and
jp
pusha
addl
sub
daa
pop
xchg
vmwrite
out
xchg
and
movsb
in
push
les
orl
js
mov
pop
cmp
out
cmpsl
xchg
test
push
test
lds
pop
push
out
or
push
add
and
jb
loope
fs
xchg
bound
out
adc
int
push
push
fsts
push
pop
jg
xor
cmc
aam
cmp
jne
aas
jge
imul
push
pop
and
or
pop
dec
or
pop
or
mov
xchg
cmp
data16
push
ret
je
sbbb
mov
les
cli
test
icebp
inc
int
iret
roll
mov
repz
ds
xor
xor
out
xchg
mov
jecxz
inc
pushf
or
sahf
sub
les
ret
std
pop
sbb
testb
jecxz
jp
subb
fbstp
mov
shlb
scas
sbb
popf
call
and
into
cs
int
adc
out
sahf
pop
mov
pop
push
inc
xchg
dec
in
pop
xchg
mov
lds
push
cli
scas
in
sub
jg
mov
pop
or
add
xchg
or
int
loopne
andl
repnz
shrl
xchg
sub
pop
cltd
jecxz
push
and
stos
int
dec
pop
pop
insl
and
xor
notb
scas
pusha
jne
cmp
sahf
cmpsl
mov
inc
xor
outsb
adc
lcall
jb
les
ds
push
mov
aas
xor
mov
in
add
in
jecxz
pop
dec
sbb
popf
jge
and
push
cmp
mov
sbbb
scas
mull
mov
fists
mov
jns
add
ds
cmp
pop
imul
jge
xor
mov
add
in
mov
fs
push
xchg
xor
sbb
cmpl
cmp
sbb
jl
mov
pusha
in
in
inc
push
mov
bound
sbb
inc
push
pop
cmp
mov
xchg
jp
mov
inc
push
mov
push
shlb
les
scas
cltd
sarb
sbb
pop
mov
int3
gs
xchg
sarb
sub
add
lods
inc
data16
xchg
movq
mov
adc
jno
leave
xchg
jae
cmp
pop
add
stc
cltd
fildll
or
sbb
or
ret
mov
push
xchg
fisttpll
scas
pop
xor
sahf
and
vpmacswd
ja
stos
mov
fisubs
cld
push
inc
std
negl
aam
shrb
out
sbb
jo
addr16
cmp
movsl
adc
mov
mov
ficomps
and
mov
xchg
inc
dec
loop
ss
stos
shll
jns
lods
ret
mov
cwtl
add
jbe
test
mov
imul
sbb
jecxz
pop
mov
dec
mov
std
xchg
lret
imulb
bound
adc
test
cmp
sbb
ds
mov
xchg
sbb
mov
mov
mov
mov
ficomps
dec
fisttpl
dec
dec
jae
or
push
mov
inc
cli
fwait
jle
out
cmp
mov
loopne
mov
or
xchg
fstl
sbb
gs
shlb
sub
in
and
ljmp
dec
jmp
inc
pop
cmp
cmpsb
aaa
dec
push
icebp
repnz
jbe
push
dec
repz
imul
js
mov
aam
sub
sbb
pop
faddl
xchg
pop
les
cmp
cmp
push
out
or
pop
movsl
jns
sub
inc
push
adc
xchg
mov
and
in
xchg
fwait
adc
stc
loop
cld
out
xlat
jmp
jge
movsb
mov
mov
je
dec
push
cli
jbe
stos
pusha
adc
cmp
mov
jl
dec
sub
mov
in
arpl
push
cltd
sbb
out
out
dec
dec
lcall
sarl
sub
and
or
imul
mov
adc
pushf
cli
adc
mov
sub
ljmp
xor
cmp
push
mov
pop
rcll
into
dec
xor
mov
test
add
mov
stos
outsb
movb
xchg
cld
in
lds
gs
pushf
mov
rclb
call
dec
test
rcl
mov
mov
push
add
cs
xor
loopne
adc
jo
divl
cmp
xchg
mov
or
and
test
xchg
rcrl
xchg
ljmp
outsw
jae
roll
test
fnop
out
mov
mov
enter
mov
mov
mov
xor
ljmp
push
je,pt
ss
or
call
int
rcr
jns
and
add
notl
lods
out
push
int3
imul
mov
leave
scas
or
jne
jmp
and
ret
dec
mov
sub
sub
mov
adc
lret
fildll
pop
sbb
lret
sbb
push
test
bound
sbb
push
js
lret
xchg
dec
stc
inc
sub
mov
es
fadd
mov
out
mov
pop
dec
add
aaa
xchg
insl
stc
jo
lahf
mov
or
add
sub
push
jne
lret
ljmp
and
cmp
xchg
loope
cltd
pop
fisubrs
xchg
add
inc
pop
bound
mov
ja
mov
mov
add
mov
and
jnp
pop
unpckhps
mov
iret
mov
inc
scas
adc
lock
das
mov
scas
mov
or
scas
aas
sbb
mov
add
sti
jbe
xchg
mov
rorb
leave
cmp
pushf
inc
push
sub
ret
jbe
repnz
in
out
pusha
sub
aam
das
mov
jb
sbb
mov
sbb
cmp
cmp
xchg
cld
roll
stos
xor
jl
mov
loope
in
mov
sub
jp
into
subl
pop
xor
and
adc
cmp
rolb
pushf
sbb
sbb
sbb
es
mov
out
jmp
jae
mov
add
jbe
hlt
daa
bound
cli
pop
jnp
outsl
pop
fnclex
adc
mov
mov
jb
stos
pop
add
xchg
daa
mov
adcl
mov
push
adc
popf
call
orb
jo
inc
sub
aad
mov
cmp
lret
jl
imul
mov
test
scas
cmp
insl
xchg
pop
sbb
xor
icebp
xchg
jl
add
lds
sub
add
mov
add
add
push
jg
clc
rcr
ret
pushl
fstpl
mov
nop
je
mov
fsubp
movsb
mov
dec
xchg
mov
mov
stos
fldl
or
aas
in
mov
mov
mov
shl
outsb
fst
cmc
popa
sbb
pop
xor
dec
aam
cmpsb
cld
xchg
lock
icebp
cmpsb
mov
mov
mov
lret
rcll
xor
or
outsl
imul
sbbb
cwtl
push
fwait
mov
incl
dec
notl
popl
leave
sub
pop
xor
sbb
mov
clc
jo
call
movsb
aaa
repz
mov
xlat
adc
sarb
rorb
ljmp
xchg
and
mov
scas
rclb
sbb
je
mov
sub
lret
pop
ds
mov
sub
lods
fmull
js
ja
dec
jl
idivl
adc
lret
fwait
mov
inc
jp
mov
lods
sub
insb
jl
notb
sbb
fcomp
mov
shl
and
fcomps
adc
cmp
xor
sub
lret
imul
mov
andl
pop
in
ret
divb
dec
dec
cmc
add
jmp
adc
xlat
sbb
sti
fldcw
adc
jns
xor
add
fmulp
mov
xchg
imul
push
adc
es
loop
jge
std
jge
sbb
out
pop
test
repnz
push
in
push
sahf
pop
push
imul
pop
stc
mov
cmp
enter
repz
popf
testb
jo
jmp
mov
pop
sbb
bound
push
sub
pop
inc
pop
cld
hlt
out
scas
aas
js
call
lret
cmpl
lret
and
jp
add
mov
loope
test
out
int3
loopne
lods
cmpsl
pop
push
in
jb
rorb
or
cs
inc
sbb
mov
addl
mov
push
and
and
les
and
int
mov
cmp
xor
pop
cltd
fwait
data16
loope
and
jp
push
rcll
jb
add
or
ds
dec
inc
in
inc
stos
out
mov
dec
movsl
into
xor
inc
stos
sar
out
xlat
insl
cmp
ds
xor
imul
insl
mov
enter
js
out
ja
dec
lcall
mov
imul
lods
push
jecxz
sub
hlt
jg
out
sti
jo
ret
lret
adc
iret
sub
dec
jbe
clc
lods
test
int
call
xor
and
xor
int
sbb
add
and
add
xchg
int3
cmp
add
lds
pop
addr16
nop
cmpsl
dec
xchg
and
ret
adc
repz
pop
loope
rorl
nop
test
add
jbe
mov
scas
xor
shlb
popa
cmpsl
push
add
pop
cmp
outsb
inc
adcb
repnz
ja
push
fxch
insb
leave
std
mov
sub
xor
xlat
adc
mov
ret
sub
ret
inc
js
jge
in
inc
cli
sbb
cmpsb
mov
gs
ss
imul
adc
push
push
int
xor
push
fisubl
push
sbb
mov
stos
xor
lock
xchg
jnp
test
mov
lret
leave
out
pop
xor
cmp
fdivrp
pusha
in
pop
in
mov
sbb
push
call
xlat
lcall
and
xor
ret
mov
pop
or
inc
int3
and
fisttps
es
dec
push
mov
adc
ret
ficomps
dec
es
xchg
aam
sbbl
xor
pop
mov
mov
cwtl
push
mov
mov
sti
xchg
pop
shll
adc
jle
xor
jnp
std
mov
cmpsl
mov
rcrb
ret
in
pop
dec
cmp
ja
or
adc
aam
xor
mov
push
leave
xor
repz
add
pop
push
mov
aam
xchg
or
sub
pusha
dec
push
out
in
cs
scas
sbb
insl
jecxz
pop
dec
cmp
mov
iret
mov
cli
cld
push
lods
xchg
loop
dec
add
push
cs
push
mov
pusha
lret
or
push
mov
lcall
dec
cld
inc
mov
mov
xchg
mov
call
and
mov
push
lods
pop
dec
lcall
dec
dec
out
arpl
push
and
cmp
mov
in
rcl
scas
jge
xor
rsqrtps
push
int3
cmpsb
and
aam
stc
or
cmp
mov
jae
jp
sub
or
inc
stos
pop
push
mov
leave
jno
xchg
mov
orb
mov
mov
add
ja
je
out
shrl
andl
es
shll
jns
xlat
call
add
repnz
hlt
push
xchg
cmp
aam
call
push
lahf
ror
pusha
push
sub
icebp
shll
mov
mov
daa
pop
mov
insb
movsb
sahf
xchg
jl
sbbl
push
xlat
xchg
mov
pop
ja
pop
add
test
mov
pop
xchg
pop
test
mov
sarb
dec
aaa
ret
aad
in
push
xchg
or
jge
bound
pop
or
ret
orl
jl
mov
and
pop
sub
dec
mov
leave
nop
orb
aam
cmp
pushf
mov
leave
xchg
lock
ret
pop
stos
fmull
out
push
push
sub
xor
inc
pop
leave
aas
adc
push
xlat
or
mov
xchg
cltd
pop
cs
inc
adc
sub
mov
imul
dec
or
dec
lret
lea
lahf
repz
imul
jle
mov
test
mov
in
jg
rcr
pop
xchg
das
add
lret
pusha
and
mov
add
ljmp
pop
int3
insb
nop
lahf
lds
pop
push
mov
inc
mov
mov
xor
loope
je
xchg
cwtl
push
xchg
test
xchg
adc
mov
enter
mov
lret
sarl
or
or
cmp
sbb
mov
cmpsb
clc
xlat
test
loope
call
hlt
test
pop
cmp
repz
add
fidivl
jo
stos
loop
sub
loopne
jo
stc
in
jno
fidivrl
mov
test
mov
ss
fdivrl
cmpl
inc
lret
lds
xchg
mov
ret
je
add
pop
inc
mov
xor
lods
jno
sbb
cs
fucomp
pop
mov
dec
adc
jg
iret
das
sbb
adc
mov
cli
pusha
push
xchg
inc
xor
shr
xchg
imul
test
and
in
sar
xlat
dec
mov
lcall
cmpsl
push
and
iret
inc
imul
insl
and
cld
pushf
jno
rolb
sub
int3
idivl
mov
mov
sub
push
fidivrl
arpl
jle
sub
push
loopnew
daa
add
aas
or
mov
sub
push
jnp
enter
ret
aam
cmp
gs
add
sbb
inc
push
movsb
mov
inc
and
or
adc
bound
loope
pop
and
icebp
xchg
pop
movsb
or
fadd
and
and
stc
xor
cmp
adc
push
cli
inc
es
and
push
add
rorl
sub
mov
push
aad
jg
imul
fwait
les
mov
cmp
sahf
mov
xor
dec
dec
out
sub
outsb
or
mov
xchg
inc
cwtl
iret
xchg
or
imul
cmpsl
lock
mov
cmp
mov
push
movsb
mov
testl
popa
test
jae
or
adc
ret
pushf
jecxz
mov
shr
push
lds
mov
dec
cld
bound
test
dec
xor
nop
dec
daa
jbe
jp
sarl
lds
mov
sbb
orb
imul
dec
mov
rcrl
mov
mov
mov
test
fsubrs
cmp
idivb
loopne
fnstenv
ds
dec
in
dec
jmp
or
push
cmp
adc
or
mov
inc
aad
jbe
add
inc
lods
test
cli
pop
pop
dec
cwtl
dec
mov
pop
movsl
int
outsb
adc
fnsave
pop
dec
push
mov
lahf
mov
daa
loope
or
jne
lods
inc
pop
pushf
cmp
push
mov
adc
mov
shrl
pop
outsb
bound
dec
pop
scas
std
sbb
mov
cld
decl
mov
jg
stc
sbb
loope
movsl
cmpsl
jmp
cmp
push
out
loop
mov
add
cmpsl
xchg
adc
jmp
popf
cmp
push
mov
in
ficoms
rcrl
cmpsb
xor
or
les
pop
adc
outsb
inc
mov
dec
lods
popf
sbb
mov
pop
inc
mov
outsl
add
mov
cmc
repz
mov
aaa
push
mov
xor
add
outsb
mov
pop
lahf
cmpsl
push
fcoml
rcl
addr16
lret
jecxz
jg
dec
outsl
xchg
test
or
and
out
mov
jo
push
cwtl
pushw
outsl
xor
or
jge
add
mov
sub
hlt
push
mov
pop
push
mov
xor
sbb
jmp
fsubl
ljmp
jno
or
hlt
pop
adc
mov
loop
dec
push
inc
mov
fisubl
mov
in
in
dec
lcall
fstpl
push
adc
cmc
mov
adc
mov
add
pop
pusha
and
mov
mov
jne
or
adc
in
dec
mov
insl
outsl
enter
cmp
popf
xchg
sub
or
scas
and
aam
fidivl
into
jg
add
mov
nop
or
push
iret
je
xor
xchg
aad
ljmp
jp
xorl
xor
int3
shl
inc
push
in
mov
jb
orb
pop
mov
push
arpl
aas
out
push
jg
add
sti
ja
adc
arpl
push
pop
cwtl
js
in
and
aam
pop
rcl
dec
cs
pop
test
stos
daa
movsb
imul
mov
push
sub
xor
loope
xchg
dec
clc
insb
adc
or
popa
iret
mov
fmull
loop
and
mov
and
popa
sbb
movsl
lods
call
jbe
test
imul
scas
in
mov
xlat
call
inc
inc
inc
sub
pop
shl
pushf
xor
popa
xor
sbb
mov
pusha
je
xchg
fistpl
mov
cwtd
sub
xchg
pop
dec
sub
xor
addr16
lret
adc
push
fbld
clc
xor
mov
jp
push
adc
mov
add
mov
sbb
ficoml
or
js
push
push
dec
add
dec
shll
jnp
adc
mov
into
push
mov
loope
leave
cli
aad
leave
std
aam
pop
mov
add
sbb
hlt
or
test
leave
or
mov
lret
dec
cwtl
stos
imul
cmp
cmova
mov
or
xchg
jne
xor
mov
loopne
fistl
pusha
or
test
inc
add
cmp
pop
xchg
and
xchg
popf
mov
std
aaa
mov
das
stc
dec
sbb
cmp
dec
xor
sbb
mov
loop
push
or
cmp
roll
repz
adc
pop
out
loopne
jno
inc
outsb
sbbl
jge
lods
sub
xchg
aas
mov
lea
ja
push
cli
sarb
lds
test
enter
pop
fwait
scas
jbe
lret
insl
std
bswap
stos
xor
sbb
scas
inc
nop
mul
and
pop
repz
dec
subb
xchg
lret
ljmp
shrb
ret
sub
jb
xchg
or
dec
mov
or
imul
adc
cwtl
shlb
inc
fstpl
xchg
aas
mov
mov
xchg
push
adc
rorl
xor
sahf
mov
lods
dec
xchg
insb
and
or
rcll
out
addr16
jp
inc
jmp
std
xchg
and
mov
adc
leave
xchg
sub
cwtl
xchg
sti
fildll
sti
adc
jmp
push
and
sub
xor
out
inc
mov
ss
sbb
testb
je
push
mov
sub
xor
mov
jle
lret
aas
mov
and
leave
scas
adc
sub
loope
lock
insb
mov
in
shrl
stc
out
adcl
add
add
repnz
lahf
cmp
adc
jmp
pop
pop
nop
test
scas
or
push
sbb
inc
outsl
stos
loope
rcrb
dec
cwtl
xchg
jle
jp
loopne
ret
shl
sbb
or
imul
lret
push
sbb
cmp
pop
and
adc
pop
xor
out
mov
stc
push
jg
lods
sbb
sbb
xchg
mov
mov
out
mov
xchg
js
sbb
mov
cwtl
imul
sub
cmc
out
in
pop
sahf
mov
iret
icebp
jnp
dec
in
add
ja
cmp
and
cmp
inc
xchg
inc
mov
inc
push
cltd
je
popf
iret
mov
sarl
mov
pop
jo
lods
nop
das
dec
sbb
and
inc
insb
outsb
or
cs
lods
movsb
xchg
inc
iret
rorl
fucom
xlat
lds
repz
jae
cmpl
xchg
repnz
inc
push
popa
dec
dec
mov
fnsave
fwait
orb
out
or
cmp
lods
inc
nop
and
dec
addr16
pop
pop
fwait
xchg
jne
int
out
cmp
popf
sub
xchg
addr16
jmp
lods
mov
push
lret
das
sub
jae
inc
arpl
scas
or
xchg
adc
sbb
sbb
sbb
jge
je
repnz
push
add
and
ss
push
jne
push
pushf
sarl
or
mov
mov
inc
iret
lret
fnstcw
xchg
push
mov
hlt
rcrl
outsb
jecxz
push
lea
inc
inc
pop
push
or
stos
popf
cmp
push
test
jmp
out
movsl
test
pop
inc
fs
push
and
clc
xchg
and
popa
stos
push
xchg
xchg
xor
ja
xchg
cmp
fsubl
sbb
pop
sbb
or
sahf
push
xchg
ror
cld
bound
imul
pop
sub
fcmovb
dec
pop
popa
clc
js
cmpsb
shll
aas
mov
cwtl
add
lret
sub
push
loope
jae
mov
sbb
mov
inc
mov
cmc
adc
pop
stos
push
stc
sbb
xchg
jge
mov
pop
js
into
and
ljmp
lcall
movsb
jmp
push
pop
jb
sbb
mov
mov
cmp
in
data16
popf
in
ljmp
lods
fldenv
cltd
popf
inc
mov
dec
push
daa
inc
addb
xor
test
lret
test
jmp
hlt
sub
stos
mov
cmp
in
xchg
mov
jno
insb
jecxz
jbe
push
push
ret
cmp
mov
push
mov
pop
push
add
jns
ljmp
gs
lods
sbb
pop
sbb
lcall
aas
add
sbb
lock
mov
mov
enter
pop
inc
xchg
das
shl
fsubrl
sarl
and
jno
mov
out
cmp
cmp
inc
add
into
addr16
mov
jmp
adc
mov
sbb
lea
sti
adc
xchg
or
jg
jmp
jecxz,pt
jl
push
lea
fcomps
ret
adc
xchg
push
mov
or
lcall
push
and
into
outsb
cmp
inc
sbbb
cmp
mov
inc
loope
mov
mov
jne
mov
je
imul
mov
rclb
push
cli
in
hlt
mov
stos
insl
sahf
xor
dec
jb
push
mov
mov
mov
pusha
imul
adc
out
repz
insb
push
fisttpll
addr16
outsb
mov
pop
push
popl
and
mov
xor
mov
loop
pop
mov
lahf
das
mov
mov
ljmp
data16
das
lahf
aad
test
mov
lods
push
popa
arpl
addr16
cmc
cltd
and
push
inc
sbb
aaa
and
cs
andl
rolb
xchg
lods
and
push
inc
outsb
jbe
loope
pop
push
adc
int
test
xchg
mov
push
ret
mov
ljmp
cmc
enter
pop
or
mov
ljmp
cli
push
jmp
cmpsl
movsb
roll
push
aam
dec
inc
add
push
mov
aaa
pop
rcrb
stos
mov
mov
data16
or
add
pusha
inc
sbb
cmp
jl
jne
mov
sub
mov
sbb
outsb
insb
ja
add
cwtl
in
mov
inc
das
cmp
cmp
movsl
mov
cmc
int
bound
pushf
outsb
mov
mov
dec
mov
pop
aad
cmp
fmuls
sarb
cmc
push
cmpsl
cmc
push
add
cmp
cmp
sub
pop
orb
pop
mov
cld
loopne
dec
mov
pop
jns
in
in
lea
lcall
push
int
pop
jl
xor
jp
mov
sbb
and
jmp
orb
mov
push
xlat
stos
cmp
dec
icebp
sti
or
or
mov
cmc
cli
pop
icebp
sbb
clc
push
add
outsb
xor
enter
fnstcw
nop
arpl
xchg
xchg
dec
jb
les
dec
popf
jbe
cli
xchg
pop
rolb
stos
pop
cli
adc
mov
adc
cs
jp
cmp
jno
xor
rcll
or
aas
pop
dec
ja
pop
xchg
cltd
inc
imul
mov
leave
loopne
push
and
in
adcl
push
dec
dec
icebp
lea
xchg
mulb
das
iret
and
pusha
fisubrs
lock
mov
sbb
mov
insb
adc
or
sti
mov
xchg
popa
repz
adc
cmp
ss
sub
push
jae
pop
jo
cltd
loop
and
cli
push
adc
adc
movsb
mov
sti
jmp
push
lret
icebp
jmp
jbe
stos
popa
add
adc
or
popa
cs
bound
sub
ret
push
mov
or
mov
out
and
ja
sbb
lea
xchg
pop
jno
fadds
pop
and
movsl
in
push
push
rol
xchg
mov
addb
add
add
shr
clc
ret
cld
js
loopne
mov
cs
add
fsub
fstps
in
xor
mov
sar
mov
stos
xchg
mov
les
mov
cs
inc
imul
add
push
and
pop
sub
fmulp
mov
jmp
test
call
out
shrl
mov
lods
xor
xchg
test
xchg
in
aad
dec
es
jns
xchg
das
jne
enter
popf
mov
mov
inc
inc
jb
mov
adc
mov
sti
int3
out
cmp
lret
stos
fs
and
xlat
mov
push
sbb
fadd
fdivr
rcl
rcrb
pushf
jecxz
aas
stc
xor
push
cli
fs
insb
mov
rcl
dec
clc
imul
sbb
xchg
adc
jno
insb
push
sub
stos
mov
adc
sbb
call
xchg
arpl
lcall
lock
jb
adc
pop
call
push
adc
mov
rcll
mov
pusha
sbb
jecxz
xlat
xchg
xchg
xchg
in
out
icebp
xor
cmp
loop
push
aaa
or
cmpsb
std
ret
push
mov
cmp
fidivrs
xlat
test
pusha
lcall
push
daa
in
xor
jns
sub
outsb
mov
fnsave
xchg
std
lea
cmpsl
iret
lret
or
int3
mov
pop
inc
mov
sbb
dec
mov
fcomps
dec
xor
mov
xchg
xchg
mov
enter
fprem
loop
scas
out
scas
addr16
xlat
sbb
out
lods
inc
lea
ret
outsl
das
nop
pop
xadd
scas
pop
shr
imul
sub
xchg
aaa
pop
inc
cmc
flds
popf
out
mov
lods
pusha
mov
mov
jns
cs
xor
xchg
sbb
sbb
pop
pop
fisttpl
aas
in
jmp
or
sbb
mov
jl
sbb
cwtl
jle
das
or
jle
add
sub
out
push
and
pop
or
inc
jne
jae
mov
mov
cmpsl
decb
sub
int
xchg
orb
out
cli
cmc
outsl
ljmp
loop
nop
xlat
in
loope
mov
and
and
xchg
pop
jns
cmpl
xchg
test
push
inc
xchg
or
adc
fstpl
je
xor
notb
data16
into
mov
testb
and
mov
or
sbb
push
int
ror
mov
mov
int3
xchg
test
adc
fwait
stc
jno
mov
ja
add
leave
push
pop
sti
ret
int
or
push
or
stc
insb
sbb
movsb
movsl
mov
cmp
test
sahf
insb
sub
cld
mov
push
movsb
std
and
subb
sbb
aaa
es
mov
dec
sbb
daa
xchg
lret
jl
fldln2
add
sbb
mov
dec
mov
jo
xor
sub
test
jb
jbe
cmp
xchg
mov
adc
xchg
dec
sarl
test
movsl
fisubrl
lcall
sbb
jb
add
lods
ljmp
movups
cmp
ss
adc
fsts
data16
out
add
mov
or
xchg
jp
dec
pop
adc
stos
lahf
xchg
xor
push
loopne
push
sbb
sub
scas
pop
push
shrb
lret
aas
ret
out
inc
mov
test
and
ret
sub
inc
mov
shlb
adc
jo
cmp
lcall
inc
mov
jae
mov
or
sub
das
je
mov
cmp
xlat
inc
xchg
enter
xlat
sbb
sub
repnz
lods
adc
pop
fwait
outsb
out
mov
lock
fisttpl
movsl
push
sti
popf
push
scas
ds
dec
adc
mov
cmpsl
shll
lea
outsb
sbb
test
mov
jb
sahf
mov
mov
mov
xor
icebp
es
mov
lock
push
inc
dec
pop
pop
andb
dec
add
ficomps
xchg
push
sbb
addr16
mov
test
repz
test
hlt
inc
daa
inc
xchg
loop
cmpsl
xchg
sub
jbe
add
xchg
loop
mov
or
mov
dec
rolb
and
sub
out
lcall
loopne
push
sub
mov
cmp
movsl
je
es
pop
push
ret
out
dec
call
dec
push
pop
out
enter
adc
xor
in
inc
imul
jle
xor
cmc
push
sub
lea
pop
fsub
cmpsl
push
mov
inc
addb
pushf
fldl
out
fstpt
mov
stos
es
sbb
fists
mov
jmp
xchg
push
int
sub
jecxz
lcall
inc
mov
hlt
mov
in
imul
ss
int3
sbb
jge
insb
fnstenv
xchg
and
out
pusha
dec
es
sub
mov
stos
mov
inc
ret
or
in
ret
sbb
fldcw
inc
mov
fs
test
xchg
xchg
xchg
ja
mov
or
adc
adc
cmp
xor
addb
lods
enter
rcrb
sub
loop
and
outsl
fimull
aam
in
cmc
inc
push
pop
dec
in
cmpsl
mov
and
mov
out
insb
ja
cli
fdiv
xorb
ficompl
sbb
mov
push
dec
orl
fwait
mov
dec
ficoml
popf
fistps
int
jns
cmpsb
sar
dec
push
sub
sbb
sbb
dec
mov
scas
icebp
push
push
test
cmp
jne
pusha
cmpsl
js
lret
mov
aaa
lea
or
sub
sahf
pop
push
jae
repnz
ja
jmp
pop
out
sub
mov
xlat
dec
xor
mov
xor
lock
mov
jmp
cmp
push
sbb
scas
sbb
add
push
xchg
mov
lahf
jge
dec
mov
idivl
gs
mov
repnz
lods
movsb
add
in
dec
pop
push
enter
outsb
icebp
xchg
cltd
shr
lret
jno
sbb
sbb
mov
test
adc
lahf
adc
mov
movsl
or
add
dec
xor
lcall
inc
iret
or
idivb
jl
js
testb
fimuls
jb
int3
xor
pop
cmpsl
mov
popf
xchg
sti
adc
add
sub
fcmovu
scas
loope
cld
and
mov
ds
inc
cmp
rcrl
inc
loopne
movlps
mov
sbbl
stos
push
pop
clc
and
pop
loopne
pop
mov
jo
in
faddl
movl
cs
pop
mov
xchg
xor
in
xchg
lock
lret
mov
sub
loopne
ret
and
movsl
fadds
loope
pop
pop
fucomip
xchg
mov
jecxz
clc
popa
inc
std
sub
mov
sub
jg
mov
cmp
in
mov
shrl
push
js
and
mov
lds
and
jo
pop
and
scas
and
adc
push
add
insl
xchg
fsubs
pop
push
in
fnsave
push
repz
imul
ret
mov
dec
push
andb
std
int
sub
push
popa
imul
mov
dec
lahf
adc
push
clc
out
das
sbb
dec
or
add
adc
addr16
fldl
add
subl
push
xchg
cmpsb
mov
jl
mov
add
mov
ret
mov
add
movsb
int
mov
daa
xor
mov
test
inc
mov
inc
sbb
sbb
or
cmp
into
pop
mov
mov
imul
leave
cmp
jne
mov
das
aas
fcompl
cmpsb
repz
daa
scas
push
repnz
xchg
repnz
out
pushf
add
std
adcl
rcrl
fs
rclb
fs
mul
xchg
jo
xchg
mov
lock
enter
mov
adc
mov
or
icebp
shrl
pmulhw
mov
dec
stos
std
mov
mov
mov
and
ret
add
leave
jne
mov
fisttpll
pop
push
add
push
sbb
lds
add
pushf
es
imul
lcall
push
push
cmc
push
jb
sbb
shll
ret
push
subb
lcall
nop
jl
pop
cltd
jb
inc
lret
nop
stos
cs
mov
cmp
fwait
mov
xchg
dec
mov
fistl
cmpb
stos
or
iret
lret
dec
call
cs
or
inc
and
test
lods
pushf
cmp
xor
sarb
int
pop
fidivrs
aam
sti
ja
lea
out
test
jne
repnz
out
push
xor
adc
fdivs
push
push
mov
jae
stos
push
fildl
shl
out
sbb
ljmp
lds
xchg
aas
xchg
lret
lds
dec
stos
repz
dec
jge
xchg
pop
xchg
pop
arpl
adc
or
dec
dec
popa
repz
sbb
data16
loopne
mov
and
enter
inc
and
or
jns
add
xlat
adc
pop
sub
lcall
push
jnp
push
dec
sub
shrl
mov
jb
jecxz
orl
push
sub
lret
pop
int3
out
fcomps
xor
faddl
iret
push
sbb
das
in
mov
cmp
int3
cmp
ja
or
adc
ret
pop
and
pop
pop
xchg
jno
or
ss
sbb
sbbb
pop
shrb
dec
mov
jp
or
call
insl
test
xorb
sub
xor
add
cli
pop
add
or
pop
pop
xor
bound
lea
jge
cli
cld
pop
jne
arpl
out
push
cltd
xchg
jb,pt
sub
and
mov
xchg
mov
mov
dec
sbb
aaa
imul
xlat
arpl
dec
dec
push
xchg
cmp
inc
mov
stos
xchg
pop
push
mov
or
lret
cmpsb
mov
stos
hlt
stos
and
dec
sbb
mov
jl
push
addr16
sbb
pop
add
pop
jne
aaa
xchg
sub
nop
mov
sub
sti
ret
and
lret
andl
adc
inc
repnz
xor
lea
jb
jns
das
sbb
push
jp
imul
mov
sbb
mulb
adcl
lcall
int3
nop
std
cmpsb
add
lock
and
movsb
mov
adc
movsb
mov
leave
rcll
dec
push
loopne
push
xchg
mov
int3
ljmp
decl
push
push
pop
or
or
xchg
into
leave
pop
sbb
pop
leave
mov
sub
std
inc
add
inc
lock
push
xchg
xchg
out
pop
std
adcb
jmp
bound
aas
mov
add
push
in
stc
mulb
pop
rcr
jo
mov
mov
pop
insb
xor
ja
dec
pop
aas
xor
pusha
scas
sti
ret
divl
repz
clc
insb
sarb
dec
shlb
sbb
and
test
lret
push
sbb
jns
add
mov
movsb
sub
stos
out
rorl
or
arpl
sbbb
add
xchg
in
pop
adcb
flds
and
add
sub
jg
cli
orl
adc
int3
jb
sbb
and
inc
nop
loop
xor
pop
pop
cld
xchg
stos
in
or
lcall
shl
loop
cmp
push
xchg
cmp
lret
icebp
xchg
jae
adc
jmp
sbb
jp
cmp
imul
adc
xchg
xor
leave
pop
iret
aas
push
push
mov
test
mov
outsl
popa
jp
jb
movsl
fildl
push
jg
test
xchg
ret
dec
sbb
add
mov
dec
cs
mov
mov
dec
popf
pop
jg
pop
nop
roll
xchg
push
sub
cmp
in
mov
orb
xchg
addr16
mov
adc
pop
xor
jnp
rclb
dec
lea
out
cld
jbe
ret
xchg
sbb
pop
insb
dec
cld
loop,pt
xor
hlt
sbb
cltd
mov
jmp
outsl
jp
dec
inc
xlat
in
int
dec
rorb
lds
push
out
sbb
add
and
mov
cmc
jbe
repz
xchg
andb
xorb
lcall
out
inc
jo
out
add
cmp
or
in
xchg
pop
fistpll
sbb
je
scas
push
push
mov
sbb
repz
aas
cmp
mov
cmp
jo
sbb
mov
je
movsb
ret
add
inc
pop
imul
cwtl
shrb
or
adcb
xchg
lods
push
repz
fisttps
in
adc
cmpsl
and
cs
pop
seto
xchg
mov
cmp
loope
or
adc
add
mov
sti
and
inc
ret
sub
mov
mov
jae
jl
in
push
push
mov
out
push
out
lods
mov
mov
xor
and
cmp
arpl
lods
fs
jns
pushf
nop
bound
js
gs
imul
pusha
je
in
in
xchg
cmp
pop
inc
push
jge
mov
imul
adc
rorb
ret
push
mov
in
pop
sub
add
push
jge
and
jbe
hlt
lret
gs
aam
rcll
mov
sub
insl
dec
and
scas
or
lods
es
pop
pop
pop
int3
outsl
repnz
adc
out
inc
or
pop
add
test
bound
sub
jecxz
mov
pop
ret
pop
inc
jmp
mov
lds
push
and
pop
std
es
mov
pop
repz
cld
mull
shl
lock
dec
mov
fidivl
and
dec
cmp
add
iret
jecxz
pop
es
fisubrs
or
mov
and
xor
lea
rcl
lods
ds
sbb
fimull
mov
mov
inc
push
add
test
mov
jno
mov
cltd
sbb
mov
dec
add
dec
push
add
fnstcw
xchg
stos
icebp
and
ss
xchg
sub
add
sbb
jmp
xchg
lret
adc
cmp
ds
jp
inc
cmp
dec
sbb
mov
push
mov
push
xlat
shll
xchg
daa
push
and
in
fmuls
jp
mov
aaa
adc
andb
aam
cs
and
xchg
mov
insl
ret
data16
das
aam
stc
xor
cld
mov
sbb
dec
std
ret
add
stos
sub
or
push
leave
mov
adc
enter
arpl
stc
jbe
push
xor
outsb
mov
repnz
test
rcll
jge
clc
push
js
sub
retw
dec
stos
out
lret
xchg
leave
and
inc
stc
push
mov
mov
and
cmpsb
rolb
pop
xchg
xchg
cld
pusha
cmpsl
push
lods
outsl
das
imul
dec
and
add
xchg
iret
pop
rolb
test
out
lret
sbb
lret
data16
out
pop
sahf
bound
push
pop
aad
int3
and
push
push
addr16
jbe
ljmp
movb
ret
xor
cltd
aaa
int3
pushf
int
sub
mov
cmpsb
mov
loopne
cltd
addl
add
sub
lds
cli
or
dec
jbe
pop
pusha
cmp
das
mov
stc
leave
sub
sub
std
or
in
mov
loope
jp
add
mov
pop
dec
ret
cmp
sub
pushf
push
ret
dec
pusha
pop
adc
sbb
int
fcomip
push
cmpsb
inc
movsb
in
in
xor
push
jmp
popa
or
lret
pop
aas
ds
fbld
stos
and
sub
mov
mov
fisubs
outsl
aam
loope
leave
enter
xor
add
dec
push
es
sar
jp
jg
out
xor
dec
mov
and
mov
rol
add
ljmp
inc
inc
mov
insb
cmp
fistpll
mov
stos
cld
pop
mov
stos
fdivrs
and
cmp
iret
pop
add
or
push
stc
pop
cwtl
adcl
inc
push
pop
lods
jecxz
sbb
xchg
push
es
mov
jge
das
fsub
sub
xchg
inc
xchg
lret
shll
jle
int
mov
mov
mov
push
xchg
mov
sbb
lahf
shrl
ds
fwait
adc
dec
js
ja
test
push
in
fildll
jnp
es
cltd
mov
push
inc
push
shlb
mov
dec
pop
movsl
arpl
loop
enter
sub
in
dec
cmpsb
mov
inc
testl
lea
cmpsb
movsl
mov
test
fsub
pop
cmc
xchg
or
pop
divb
pop
xor
test
adc
test
jnp
jmp
jns
xchg
int3
pop
add
out
daa
push
outsb
mov
ror
pusha
loop
inc
shl
movd
mov
dec
hlt
add
cmpb
bound
out
mov
inc
clc
lods
mov
add
jecxz
popf
js
gs
fadds
jl
push
push
pushf
sbb
or
mov
adc
outsl
cmp
lret
sarl
add
lret
mov
test
push
stos
and
sahf
test
inc
jl
jl
and
push
loop
in
and
ljmp
pop
out
sub
mov
movsl
push
or
jge
aas
cmp
xchg
mov
dec
sub
xor
lret
sub
aaa
jne,pt
mov
mov
inc
aaa
jnp
daa
ds
frstor
icebp
push
mov
xchg
and
sub
jmp
lcall
mov
or
xor
out
jb
cmp
shll
sbb
jb
mov
outsb
jp
cli
push
ja
lcall
in
mov
in
ret
cmp
jl
adcb
les
cmp
inc
ss
ljmp
es
aad
call
cmpsb
mov
and
popf
idivb
mov
cmpl
test
mov
iret
aaa
pop
mov
fldcw
lcall
std
icebp
push
mov
mov
popf
push
movb
sbb
outsl
xor
mov
out
dec
inc
outsl
mov
or
ret
dec
lods
inc
into
icebp
and
ficoml
mov
pushf
sahf
pop
mov
and
xchg
jnp
ficomps
ret
xor
and
pop
mov
cmc
sbb
inc
aam
lret
test
pop
inc
fs
out
test
test
stos
aam
jae
sub
out
inc
cmp
jg
lods
insb
xor
jo
and
inc
push
and
out
add
test
push
and
sub
add
leave
rcrl
insl
lds
xor
cli
movsb
pop
mov
loope
pop
push
cmp
rcll
daa
in
popa
jle
cmpsl
and
cmc
enter
cmp
enter
jge
or
push
mov
sub
xchg
jecxz
ret
cltd
lahf
ja
xchg
inc
ss
shrb
xor
mov
mov
scas
decb
push
mov
cmp
push
test
repz
mov
cmp
ja
xchg
sbb
push
jp
sahf
loop
push
jge
push
jb
jno
addb
xor
pop
xor
shrl
aaa
sbb
dec
inc
mov
push
inc
xchg
cmp
add
insb
call
cmp
and
cmp
mov
sub
xchg
test
mov
test
loope
jo
dec
mov
adc
mov
jecxz
mov
cmc
inc
sub
or
loop
and
fsubl
xor
xor
mov
push
sti
shlb
ds
enter
jle
into
aaa
xchg
test
xor
mov
scas
imul
test
pop
popf
mov
js
xchg
scas
add
imul
aas
xchg
jno
cmp
sub
lahf
insl
xchg
jnp
lret
icebp
stc
aas
dec
xchg
call
push
inc
in
mov
outsb
inc
rclb
fisttpll
push
test
pop
les
repz
sub
push
cwtl
pop
stc
mov
xorb
pushf
adcl
popa
or
ror
jnp
movsl
add
addl
xor
xor
push
loop
fidivl
jecxz
cmpb
jns
push
cmpsl
or
sti
fistl
sti
push
inc
mov
test
xchg
jecxz
xor
inc
out
fldt
inc
adc
lahf
cmp
fs
cmpsb
mov
out
std
js
out
push
iret
gs
adc
inc
mov
sub
in
jl
or
out
lcall
fsubrl
push
cmp
xchg
flds
mov
add
push
out
inc
gs
adc
insl
xor
lahf
xlat
fwait
xor
testb
aam
stos
insl
pop
aas
int3
aaa
popa
lods
cmpsl
cmp
mov
test
or
cltd
inc
push
add
imul
adc
mov
push
std
adc
xchg
test
mov
sti
ljmp
push
in
data16
jb
rol
stos
rorl
subb
sub
stc
sub
std
mov
shlb
add
in
sbb
lret
pop
imul
mov
cld
and
lcall
imul
or
jnp
sahf
adc
adc
jmp
movsb
aam
sbb
jno
cmpsb
andb
in
jg
push
sub
inc
mov
dec
mov
dec
nop
loop
leave
push
sbb
in
inc
test
push
add
int3
enter
sub
pop
cwtl
popf
fistps
or
scas
jo
outsl
mov
popa
testl
mov
or
loope
lahf
lock
fstpt
push
push
push
cwtl
or
mov
and
xor
mov
push
sub
testb
aaa
aam
iret
mov
xor
dec
adc
sbb
xlat
cltd
jmp
push
icebp
fimuls
xchg
aad
jno
dec
call
inc
pop
mov
jno
test
sub
cmp
sbb
push
xchg
cltd
test
rcll
push
aas
xchg
push
jo
in
orl
lds
sub
and
adc
int3
and
push
xchg
lcall
add
stos
rol
cmc
cmp
mov
sbb
push
fisttpl
adc
mov
jp
sbb
mov
push
push
jbe
movsl
int
cmp
ds
outsb
mov
inc
add
add
pop
das
mov
mov
xor
inc
test
call
out
cwtl
ds
hlt
stc
push
dec
mov
test
mov
lcall
fs
loopne
push
add
add
or
lock
rorb
outsb
xchg
test
dec
fxch
add
cmpsl
pop
fsubrp
arpl
leave
or
push
fimull
mov
mov
incl
pop
pop
push
push
repnz
dec
mov
out
mov
or
leave
push
pop
int3
popa
push
mov
jns
push
add
jle
ljmp
popa
div
mov
pop
jmp
in
mov
mov
dec
inc
imul
dec
xor
aas
pop
arpl
push
jns
stos
sbb
push
addr16
int
adc
sbb
shrb
and
out
outsl
jmp
xchg
sub
lahf
mov
bound
adc
xor
or
sub
add
iret
or
fcmovb
add
pop
fsubp
xchg
xchg
add
jecxz
sub
aad
inc
push
jo
mov
jo
subb
push
stos
mov
hlt
in
test
xchg
icebp
cmp
mov
sbbl
daa
popa
push
jle
cmp
movd
int3
mov
sub
xchg
and
or
jb
inc
adc
adcb
inc
mov
pop
ss
jb
mov
push
sbb
cld
sub
jle
nop
sahf
iret
jae
mov
mov
dec
cmpsl
adc
push
mov
mov
ljmp
out
mov
inc
push
push
mov
cmp
or
mov
jbe
test
mov
push
cli
and
mov
adc
lcall
out
imul
dec
les
add
push
mov
mov
cltd
pop
das
cmp
mov
lds
call
push
xlat
shrl
jb
ret
insb
repz
jbe
xor
js
or
cmpsl
enter
adc
cli
rcrl
and
lcall
mov
in
mov
cmp
push
push
xchg
lds
or
or
xchg
mov
out
mov
dec
xchg
push
decl
xor
mov
adc
mov
add
roll
scas
push
push
test
cmpsb
into
clc
cs
jp
fcomp
fmuls
jg
pop
pushf
imul
jo
and
push
mov
xadd
lea
lahf
and
ret
cmp
sahf
cmp
ljmp
clc
mov
imulb
fnstsw
mov
cmpb
subps
out
bound
fstl
pop
dec
or
clc
shr
js
cmp
jae
jb
add
ret
xor
loop
sahf
lcall
inc
sbb
out
push
mov
ret
pop
int3
test
sub
adc
inc
loopne
jle
call
into
add
sti
mov
xchg
in
mov
out
jmp
push
push
loope
or
sub
popf
and
sbb
and
cmp
mov
inc
sub
jno
xchg
sub
fldl
je
push
sbb
add
sub
loopne
aas
pusha
bound
sbb
ret
dec
mov
push
lea
ret
cmp
ss
xchg
in
inc
sti
mov
xchg
es
test
dec
cmp
sbb
add
mov
movsl
sub
add
xor
mov
js
xchg
ret
cmp
mov
popf
push
pusha
or
sbb
push
arpl
adc
imul
out
rcl
push
imul
std
bound
add
inc
aaa
sbb
fdivrl
cmpsl
fistpl
hlt
mov
je
arpl
cmp
lea
adc
popa
lock
out
sub
bound
fildll
leave
mov
incb
push
insb
movsb
pop
fldt
mov
mov
in
sub
in
lock
mov
push
notb
in
sbb
xor
xchg
dec
iret
lods
mov
jl
aaa
cmpsl
ret
push
int3
addr16
cltd
dec
movsl
cmp
push
pop
jg
lcall
cmp
arpl
and
xor
cmp
lahf
cld
mov
push
pop
idivl
pop
lods
adc
xchg
pop
xor
mov
dec
jg
stc
clc
cmp
pop
mov
dec
test
cltd
cli
xchg
in
add
lods
js
jnp
cwtl
and
fwait
xor
dec
mov
mov
push
adcl
jae
pushf
int
xchg
pop
sub
sahf
subb
ret
mov
rol
jle
push
or
pop
pop
mov
cmp
dec
sbb
and
lock
inc
nop
out
xor
addr16
imul
cltd
stos
dec
loope
roll
filds
sub
inc
ret
push
mov
jae
in
popf
ss
aad
icebp
repz
jg
adc
push
jge
jae
lds
stos
push
fnstcw
adc
inc
pop
adc
push
les
xor
movsb
sub
repz
mov
cltd
inc
aas
add
ljmp
je
jnp
fs
cld
pop
jno
pop
cmp
lods
push
stos
inc
bound
pop
shlb
jmp
out
and
pop
ret
mov
add
push
pop
push
dec
call
into
js
pop
dec
xchg
jmp
les
add
int
xor
mov
or
jg
add
repnz
xor
idiv
int3
sub
or
in
inc
and
icebp
jbe
in
insl
sbb
sub
mov
enter
mov
testb
xchg
add
mov
inc
xchg
sub
push
mov
ss
inc
outsl
mov
xchg
ss
jo
xor
mov
add
mov
subl
push
shl
mov
int
in
xor
hlt
ret
and
xor
fildll
inc
inc
ja
mov
cs
inc
xchg
es
ja
xor
pop
loopne
mov
xchg
insb
xchg
jecxz
xchg
imull
pop
fisttpl
xor
push
les
ret
sti
insl
daa
bound
pushl
or
xor
pop
lods
sub
fstpl
movsb
lret
xchg
in
inc
pop
jle
gs
popf
iret
lods
hlt
int
pusha
mov
inc
adc
out
adc
lea
jg
inc
inc
jp
ret
loop
or
lret
xor
lret
aam
mov
fmuls
cmpsl
daa
cmp
xlat
out
mov
mov
enter
enter
mov
iret
cmp
dec
addb
pushl
in
dec
int
addr16
arpl
int
stc
mov
or
call
adc
cmp
adc
pop
nop
or
iret
sbb
sbbl
sahf
cld
testb
jmp
jbe
add
mov
mov
in
mov
dec
jns
jge
pop
insl
aaa
in
std
pop
or
pop
dec
adc
xchg
xor
js
and
aad
xchg
ja
lret
mov
cmp
aas
std
mov
imul
adc
mov
into
xchg
rorl
mov
sahf
xchg
dec
int
add
fwait
pop
jge
push
xor
in
pop
into
stos
jno
mov
pusha
fsubrl
jae
jle
mov
mov
push
adc
aaa
test
add
and
scas
arpl
fidivrl
jne
stc
icebp
dec
push
push
pop
pop
and
jno
and
cmp
mov
bound
repz
mov
pop
rorb
pop
sub
mov
adc
pop
pop
push
dec
adc
out
loope
pop
ljmp
push
lret
imul
sahf
dec
mov
repz
xchg
mov
shlb
popf
mov
inc
add
sub
orb
xorl
jg
mov
icebp
loopne
dec
push
jecxz
cmc
sbb
divb
jbe
pushf
rcrb
jae
pop
mov
push
xchg
mov
pop
push
addb
in
rcrl
popf
add
push
stc
sub
xor
mov
jp
and
sub
bound
outsl
sbb
xchg
add
ljmp
jmp
add
mov
cmpsb
push
sbb
sahf
xchg
sbb
or
or
fdivp
push
lret
jp
jp
mov
dec
cld
insl
in
dec
inc
vpunpckhqdq
fucomi
add
inc
mov
cmp
mov
cmc
call
mov
int3
loop
xchg
mov
mov
aas
cld
cmp
dec
or
mov
pop
sub
or
and
sub
xor
cwtl
repnz
mov
jbe
mov
mov
sahf
into
push
dec
mov
cld
mov
mov
jle
inc
mov
dec
mov
in
pushf
or
test
repnz
jg
jnp
adc
popl
in
mov
mov
jns
sbbl
pop
inc
jecxz
cwtl
cld
call
ds
dec
adc
popa
out
sbb
jbe
aad
in
pop
add
jmp
pop
ja
loopne
repnz
and
call
pushf
data16
ret
adc
fsub
mov
cli
inc
mov
and
insl
jg
pop
pop
imul
fnstenv
and
dec
fcomp
dec
fnstenv
call
xacquire
xor
je
cmpb
adc
rol
or
jnp
fldenv
jb
xor
outsb
cmp
mov
sahf
fsts
push
push
pop
inc
pop
out
dec
and
shlb
mov
jg
ljmp
mov
and
xchg
sbbl
lea
fidivl
jge
cli
adc
or
push
sbb
pop
popa
leave
add
rorb
push
adc
lods
fsubs
lret
xchg
test
or
dec
cmp
or
jno
cwtl
add
adc
mov
sub
pop
out
dec
xchg
loopne
inc
loop
stos
push
mov
sub
xor
nop
testl
aam
cmpsb
dec
sti
fsub
in
loopne
fstl
in
jg
movsb
xor
into
mov
hlt
aad
jae
inc
cmp
adc
lcall
jg
in
lahf
mov
stc
scas
jbe
lahf
adc
imul
sbb
dec
lea
call
fisubrl
std
cwtl
push
and
mov
jecxz
sub
icebp
test
fldcw
jne
insl
pushf
mov
hlt
sbb
repnz
repz
jge
lods
jb
in
roll
jno
xchg
and
dec
adc
push
outsb
xor
sub
cld
push
int3
and
sbb
push
call
test
outsb
add
int
je
int
call
inc
cmpl
sbb
inc
das
movl
pop
inc
push
insl
mov
popa
add
fs
push
inc
xchg
icebp
aaa
into
shr
jns
dec
sbb
cmp
inc
or
push
xlat
xchg
sbb
stc
repnz
pop
out
xchg
ficoms
mov
jecxz
insl
mov
mov
daa
or
jge
fwait
cmp
rol
mov
xchg
pop
nop
sbb
add
adc
jp
lea
insb
pop
cmp
push
jno
fistps
scas
push
inc
add
push
xchg
out
cwtl
cmp
fisubrs
test
mov
sub
into
hlt
add
or
out
adc
hlt
push
cwtl
fwait
cmp
rcrb
hlt
jmp
test
adc
jo
fildl
push
sbb
mov
loopne
popf
and
xchg
and
fcoml
adc
test
movsl
xor
insl
out
out
sahf
or
cs
xchg
ror
sbb
iret
outsl
pop
cs
push
push
lcall
jne
mov
add
jmp
stc
into
pop
and
subl
pop
xchg
inc
lea
lods
mov
in
outsl
push
jae
mov
mov
in
leave
jmp
push
addr16
filds
cmp
mov
jns
xlat
call
mov
jge
push
ret
cwtl
jmp
adc
jo
sub
mov
mov
in
xchg
push
mov
and
fst
dec
repnz
stos
leave
push
jae
pop
idivb
mov
fildll
aad
shll
bound
jb
insb
or
jg
or
cmp
mov
cwtl
fnstcw
aam
push
or
outsb
pop
les
sub
mov
ss
insb
xchg
jl
add
gs
mov
ds
lock
xchg
aas
push
jns
imul
inc
cld
mov
inc
mov
jno
mov
xor
in
test
movsb
cmp
cmp
dec
inc
xorb
mov
push
push
inc
fidivrl
pop
fwait
push
pusha
stc
stos
push
xor
push
sub
ret
fstps
sbb
push
out
mov
icebp
loopne
ja
mov
ja
fadds
lods
test
mov
inc
out
dec
test
sub
mov
jne
cmp
and
or
in
in
jo
and
jmp
ja
adc
les
adc
movsl
in
jmp
inc
xchg
mov
pop
add
sbb
cmp
popf
ss
arpl
and
sahf
loope
jecxz
xchg
jb
movsb
cmp
stc
shlb
popl
push
sub
stos
cltd
or
or
sarb
shl
ficompl
pop
arpl
push
lahf
push
push
xchg
stc
xchg
ljmp
xchg
fwait
lret
pusha
jge
xchg
and
add
inc
enter
mov
fldcw
pop
rcrb
sbb
dec
jae
mov
fimuls
into
mov
jb
arpl
adc
cld
orb
imul
aas
push
lds
sub
cmp
or
sti
pop
push
cmp
gs
sub
pop
jnp
jg
sbb
in
push
fldenv
out
adc
mov
ds
test
pop
push
mov
xor
mov
sbb
sub
inc
mov
mov
out
outsb
out
fdivp
push
sbb
sbb
jb
imul
fs
adc
fildl
fs
dec
pop
pop
ficoml
fidivl
pop
icebp
and
and
xor
push
lods
movsb
mov
mov
les
shll
jae
ja
cld
push
test
js
scas
popa
mov
ret
push
mov
mov
xor
mov
push
ss
pop
mov
pop
sahf
dec
fnstcw
in
lods
mov
andl
test
mov
cmp
in
xor
xchg
pop
jle
insb
mov
xor
mov
sub
movsb
daa
xor
out
mov
jb
pop
xor
dec
push
xchg
je
je
lret
repz
aam
dec
adcl
pop
aad
inc
and
stc
adc
push
inc
mov
fsubp
mov
push
mov
dec
imul
mov
cmp
aas
push
daa
pop
xor
pop
loopne
fimuls
pop
mov
repz
out
movsl
lret
mov
or
adc
stos
cmp
mov
push
stc
test
mov
and
jmp
fcmovnu
mov
hlt
std
test
and
lds
test
jnp
sbb
cltd
dec
int3
out
das
fnstenv
push
pop
jmp
ja
lods
jl
in
sbb
push
loop
out
mov
lret
repnz
shr
hlt
mov
mov
outsl
or
lcall
xor
insl
mov
cltd
cld
xchg
mov
xchg
mov
mov
xchg
and
mov
pop
cmpsl
inc
sbb
stc
mov
inc
dec
dec
jecxz
std
daa
fsubrl
adc
iret
dec
leave
inc
cmp
pop
inc
lock
dec
rol
pop
mov
jae
cmpsl
fisubrl
push
push
adc
mov
inc
xchg
cltd
lret
dec
mov
add
dec
or
int3
dec
out
enter
sahf
pop
adcl
xchg
test
lods
sub
ret
fadds
push
std
iret
stos
jo
mov
movsl
gs
cmp
or
push
dec
clc
lea
mov
or
aad
lcall
jns
xchg
stc
test
mov
jno
stos
insl
push
imul
sub
push
add
pop
pop
push
sub
test
or
imul
inc
add
test
ljmp
fidivrs
popa
gs
pop
dec
cmp
bound
jne
jnp
insw
xchg
add
inc
jge
lods
loop
adc
out
in
jl
push
jno
nop
mov
xor
in
dec
mov
mov
xor
rcl
xchg
jge
lock
aas
test
pushf
add
pusha
lahf
inc
xorb
insb
ret
sbb
sub
jbe
push
sbb
add
push
shll
jle
fsubrl
add
out
cmpsl
in
jge
dec
dec
mov
jns
xchg
sahf
mov
cld
mov
aad
or
test
das
mov
pop
mov
mov
dec
inc
adc
fbld
mov
or
popf
pop
repnz
pop
or
clc
iret
jbe
push
lods
mov
negl
aam
mov
lret
pop
icebp
and
pop
inc
inc
dec
xor
adc
dec
sub
scas
push
xor
les
or
dec
and
add
ret
popa
bound
jne
dec
or
adc
or
lods
jbe
aad
pop
cld
push
lahf
hlt
cmp
xchg
out
sub
jl
and
adc
daa
push
daa
xorl
test
or
xchg
mov
cmp
mov
lea
pop
out
bound
imul
fsubs
xchg
jo
lret
xlat
adc
ret
ret
cld
inc
pop
mov
in
je
fildll
call
fcomps
cmp
pop
push
push
int3
dec
out
and
in
sbb
or
cltd
sbb
mov
or
test
ret
subb
adc
push
movsl
inc
pushf
popf
push
sbb
insl
sbb
mov
mov
bnd
ret
inc
jno
popf
insb
mov
and
adcl
mov
test
je
sarb
mov
push
sbb
outsl
imul
push
push
aas
adc
push
mov
repz
lea
icebp
icebp
loop
or
leave
stos
mov
repz
cltd
orl
mov
and
ss
out
pop
test
lret
jae
cs
dec
inc
mov
test
pushf
or
fisubl
adc
movsb
cmpsl
jo
call
pop
push
pop
jae
mov
repz
jecxz
fst
loopne
mov
mov
das
je
aas
mov
les
xchg
mov
adc
adc
insl
loope
std
lcall
stc
sub
adc
jns
jecxz
and
fwait
insb
fsubrs
stc
fadd
hlt
jbe
in
sbb
cmpsl
imul
push
sub
add
repnz
mov
paddusb
dec
enter
add
xchg
pop
out
ja
lret
cld
jnp
ljmp
test
mov
mov
out
mov
cmpsl
fs
inc
repnz
sub
mov
mov
mov
repz
adc
dec
std
rclb
shrb
xchg
mov
push
jmp
cmp
lock
xchg
and
or
cld
cwtl
mov
fiaddl
adc
adc
fwait
in
cmc
inc
out
mov
loop
insb
repnz
jns
std
addl
scas
pop
mov
and
movsl
jo
jns
in
or
into
cmpsb
xchg
cmp
push
push
loopne
cmp
sub
inc
xchg
inc
inc
lahf
mov
scas
insl
mov
mov
fildl
ja
pushw
or
mov
push
shlb
inc
outsl
xor
outsl
mov
and
lods
cmp
cmp
xchg
and
je
jecxz
rol
mov
int
loop
jmp
out
test
jecxz
push
or
insb
or
push
jmp
mov
decb
stos
popa
std
in
sahf
shll
dec
insl
std
mov
fcmovu
idivb
aaa
push
xchg
imul
jb
xchg
in
sarb
cmp
loop
mull
std
imul
xchg
outsl
pop
push
lods
or
fsts
mov
repnz
fcomps
xlat
push
pusha
test
dec
push
ja
mov
repnz
dec
sbb
adc
sbb
jge
ljmp
pop
es
dec
jo
pushf
aad
adc
movb
xchg
cltd
adc
dec
icebp
aaa
into
addr16
in
push
pop
and
pop
cmc
xchg
lret
jecxz
push
jle
pop
pop
imul
outsl
mov
in
das
cmp
ljmp
jns
add
sbb
and
cs
enter
and
add
xchg
mov
je
sub
pop
mov
sahf
pushf
inc
push
sarl
mov
stos
sbb
loop
lock
addr16
adc
or
pop
push
mov
andl
adc
sbb
jns
pushf
sub
xor
or
cmp
mov
or
mov
lock
imul
out
in
or
subb
ds
jmp
es
loopne
ljmp
hlt
adc
mov
pop
dec
sarl
sub
jb,pn
mov
jl
xor
lods
ljmp
sub
cltd
sbb
add
das
lea
xchg
mov
aam
pop
xchg
and
pop
cmp
xor
inc
aad
sub
je
ss
aam
cmp
mov
js
xchg
and
daa
addb
sub
pop
sbb
and
pop
movsl
xor
mov
cmc
mov
jnp
in
vmwrite
cmp
repnz
inc
addr16
jecxz
andl
push
js
sbb
inc
test
int
mov
mov
repnz
jmp
es
clc
cs
daa
jmp
cs
call
xchg
das
mov
lret
jge
ficompl
outsb
jmp
mov
xchg
xor
jmp
jbe
stos
add
insb
inc
fucomp
setl
and
adc
das
es
xor
cmc
mov
pop
jno
or
mov
sbbl
cwtl
cs
sbb
int
fsave
pop
notl
mov
xchg
je
sub
xchg
dec
sbb
inc
pop
cmp
adc
add
jns
cmp
aaa
cmp
jbe
dec
xor
movsl
fimull
inc
mov
ret
push
cmc
movsb
mov
lahf
les
js
sub
lahf
mov
mov
cmp
mov
mov
sbb
cmpsl
fucomi
cmpsl
out
and
imul
inc
xor
jg
push
dec
stos
ljmp
xor
inc
aas
cs
out
test
cmp
cmp
test
add
push
les
movsl
jno
pop
sahf
andl
pop
arpl
adc
push
ja
mov
in
mov
std
sahf
mov
arpl
adc
int3
mov
cmp
mov
mov
push
loop
lahf
jbe
aaa
rcrl
popa
fdivrl
movsb
mov
xchg
mov
adc
lea
or
test
inc
mov
and
xorl
mov
xchg
pop
mov
push
mov
imul
sub
cltd
jle
adc
inc
addr16
pop
pop
push
ja
int
sub
sub
into
rorb
data16
lret
mov
add
ficompl
push
mov
lret
hlt
ja
jae
cli
xchg
sub
inc
ss
mov
push
pop
cli
push
cmpb
mov
dec
sub
gs
aad
shl
xchg
das
nop
mov
push
pop
popf
push
mov
dec
xlat
nop
in
pop
inc
jae
push
ret
lret
dec
cmpsb
mov
aad
mov
movsb
mov
aam
cs
and
or
bound
adc
xchg
jno
bound
pop
pop
pop
mov
push
push
cltd
xchg
adc
push
test
mov
out
imul
mov
lds
xchg
or
mov
mov
cmc
test
popf
filds
mov
out
dec
sbb
mov
out
lods
insb
cmp
cmpsb
push
add
mov
into
nop
push
xor
sbb
inc
cltd
ljmp
jge
inc
and
push
sahf
rcr
fyl2x
imul
pop
pop
lcall
mov
push
repz
mov
jnp
adc
mov
sub
scas
pop
icebp
mov
repnz
fdivrl
lods
aas
into
or
or
jge
xor
jge
jns
push
ljmp
xchg
stos
mov
sbb
pop
mov
fsts
add
hlt
and
gs
cmp
adc
aaa
xor
sub
sub
or
add
rcrb
ljmp
xlat
dec
push
push
push
repnz
mov
xor
inc
jle
mov
lds
pop
hlt
jae
out
jb
nop
jle
aad
pop
and
std
or
mov
fists
or
lret
outsl
addr16
push
into
test
movsb
and
mov
or
test
lods
jae
pop
dec
mov
mov
dec
inc
out
loopne
loopne
cmp
xchg
cmp
adcb
lods
pop
push
popa
fstpt
cmp
xor
cmp
out
rcrb
and
mov
imul
pop
adcb
mov
rcrb
add
pop
mov
insl
fimull
dec
sarb
push
adc
mov
fiaddl
xchg
lock
xor
mov
imul
je
inc
lock
adc
adc
mov
or
xor
nop
pop
aam
clc
mov
or
adc
fdivr
sbb
int
pop
pop
fisubl
mov
rcl
sbb
hlt
push
in
test
dec
or
xchg
outsl
pop
push
mov
mov
insb
push
mov
imul
mov
pop
sbb
lock
lcall
xchg
les
mov
adcl
inc
out
adc
popa
push
cli
pop
jae
mov
adc
int
cmp
cmpsl
scas
adc
fpatan
jbe
mov
xchg
inc
jns
stc
lret
pop
fwait
and
divb
imul
mov
psrld
cs
les
mov
cmp
in
ljmp
push
outsb
add
js
pop
mov
bound
in
fucomi
xchg
jno
mov
and
nop
idivb
jae
lret
or
pop
sarb
sbb
push
xchg
mov
jae
insl
mov
scas
test
test
pop
or
pop
mov
fstps
dec
and
fbstp
mov
scas
mov
mov
enter
jecxz
jnp
pop
pop
fiadds
pop
push
cli
xor
xlat
pop
ret
push
mov
pop
sarl
and
cmp
gs
pop
jecxz
ret
jge
sti
push
addr16
stc
xchg
mov
outsb
movsb
or
ja
popa
jg
pusha
sub
jmp
roll
in
cmp
test
loopne
insl
jnp
lds
js
mov
sub
mov
push
imul
cwtl
ret
push
xchg
sub
aaa
test
je
aad
cwtl
sub
push
ja
shrb
jbe
sbb
imul
in
insb
dec
shrb
shrd
mov
mov
js
inc
cmp
and
jg
xor
mov
in
xchg
data16
mov
pop
lods
pusha
js
xor
aad
test
call
push
or
cmc
ret
sbb
cld
push
mov
sbbl
and
sub
testl
rcr
mov
in
es
add
cmpsl
fsubs
push
push
fs
ret
sti
sti
imulb
mov
xchg
or
push
sub
rorl
sub
sbb
jo
out
dec
xchg
jbe
dec
cmp
frstor
mov
icebp
sarb
inc
das
cmc
pop
stos
clc
push
pusha
sahf
or
out
pop
adc
adc
or
xchg
and
popa
add
js
jb
mov
ret
jg
sbb
sbb
enter
test
fs
xor
pop
pop
cmp
mov
add
test
mov
fcmovbe
xchg
xchg
out
inc
cltd
data16
xor
mov
leave
arpl
dec
fnsave
adc
fdivl
add
dec
dec
sbb
push
in
rcrb
sub
imul
fcomps
cmpsl
rcrl
mov
sub
roll
adc
pop
cltd
nop
cltd
inc
int3
push
cld
jne
addl
or
xchg
xor
pop
ret
mov
mov
xchg
xor
and
sbb
pop
ja
ret
sahf
inc
mov
mov
xor
int3
jg
aas
pop
dec
add
bound
xchg
jno
push
leave
pop
pop
push
add
das
iret
fisttpll
cmpsl
xor
jecxz
jle
sbb
add
cltd
jg
lock
push
push
aaa
push
add
pop
repnz
inc
or
push
fiaddl
inc
lret
ficompl
ljmp
add
or
mov
jmp
jl
lds
adc
adc
and
test
jmp
xor
dec
mov
sbb
mov
in
dec
sbb
jle,pn
es
mov
in
sbb
sti
addr16
dec
test
push
add
mov
repz
lds
loop
and
xchg
lds
aaa
mov
mov
push
cmp
pop
pop
out
pop
and
aaa
cltd
push
loop
in
xor
addr16
bound
cs
loopne
imul
cmp
sbbl
xor
jp
rcrb
push
cs
mov
adc
pop
or
inc
iret
xchg
dec
in
push
loope
movsl
outsb
notl
or
inc
gs
ret
push
shlb
push
cmovb
mov
test
xor
jg
dec
stos
rolb
xor
iret
pop
fdivrs
inc
cwtl
mov
std
leave
cli
hlt
into
outsb
jne
enter
sub
test
std
mov
subl
jmp
adc
lcall
cld
adc
jle
inc
out
gs
js
pop
gs
xlat
dec
cmp
aaa
or
mov
ror
fstpt
add
or
mov
cmpsb
idiv
and
cmc
sub
adc
subb
mov
jns
mov
outsb
cltd
xor
adc
dec
add
mov
mov
arpl
sbb
sti
adc
ds
sub
jb
faddl
rclb
repz
fwait
xchg
dec
test
sbb
adc
repnz
inc
outsb
aam
jns
or
sahf
mov
sub
push
dec
xchg
mov
outsb
gs
inc
sub
subb
loopne
scas
lcall
test
or
aas
clc
orb
fisubrl
test
sbbl
sbb
adc
jge
mov
jl
push
or
mov
stos
cmc
and
xchg
call
sbb
xchg
stc
push
and
adc
sbb
jmp
lods
dec
hlt
cmpsl
das
sub
mov
loope
lds
repnz
mov
xor
jg
adc
jle
pop
xchg
popa
ljmp
out
fnstcw
xchg
rcrb
push
cmpb
cli
dec
out
les
arpl
push
cmpsb
sti
hlt
lahf
lods
mov
outsb
and
xor
popa
pop
ret
aaa
out
sbb
add
js
ljmp
cmc
mov
divl
js
das
sub
cmp
pop
movsl
cli
inc
mov
xchg
adc
in
dec
dec
popf
test
mov
mov
sub
out
cli
and
fld
dec
rorb
or
lahf
out
cmpsb
pop
das
pop
sbb
shll
fadd
inc
cli
mov
fstpl
test
sub
pop
xor
adc
add
mov
int
test
idiv
js
mov
inc
fidivs
es
jb
inc
mov
aad
jecxz
mov
out
nop
sbb
cmc
xchg
imul
inc
xchg
arpl
lret
cmp
mov
clc
add
aaa
leave
xor
test
inc
mov
addl
lcall
cmpsb
push
fistl
xchg
or
dec
push
xor
sbb
push
inc
testl
outsb
dec
and
mov
mov
arpl
imulb
dec
lret
loope
lahf
ja
lahf
cmpsb
jns
or
scas
aaa
mov
inc
add
mov
stos
jnp
leave
lods
push
int3
pop
lods
add
cs
shlb
mov
fdivr
add
xchg
sub
jmp
insl
es
pop
cmp
and
daa
das
fmuls
in
cmp
test
lds
xor
inc
and
call
or
push
push
lock
fwait
outsl
imul
jmp
push
jecxz
aad
stc
and
lods
push
or
mov
mov
sbb
loope
lock
jle
add
xor
push
cmp
repz
popf
mov
rsqrtps
cmpsl
ljmp
clc
mov
cmp
xor
xchg
and
lret
adc
daa
sbb
cltd
jl
lcall
mov
cld
adc
int3
lahf
cmpsb
in
stos
push
imul
aaa
fsubrs
push
cmp
rclb
jecxz
push
add
xchg
test
mov
addr16
mov
cmp
xor
iret
add
icebp
dec
pop
pop
lods
xchg
mov
mov
jno
and
rep
push
xchg
jae
ja
xchg
sti
negl
jecxz
xchg
inc
cwtl
sub
fidivrl
movsl
lea
jecxz
cwtl
dec
mov
std
push
loopne
mov
mov
cmpsb
out
cli
pop
icebp
loope
popf
sub
jg
aas
mov
jmp
push
and
stos
mov
hlt
popa
xlat
int3
xchg
js
sbb
mov
iret
pop
data16
mov
pop
ret
dec
mov
push
and
dec
sbb
jmp
and
movsb
insl
jmp
std
xchg
pop
xchg
into
mov
sub
mov
xor
push
fadds
mov
adc
push
jne
in
loopne
push
and
mov
test
xor
cmpsb
cmp
xlat
shrl
push
xor
add
popl
or
or
daa
fidivs
fwait
repz
lds
out
jae
or
inc
lret
cmp
fwait
jnp
cmp
ficoms
ror
loop
repnz
cmp
ss
jbe
das
or
rclb
pop
rorl
loopne
jae
fcomps
add
scas
stos
pop
mov
je
mov
push
sbb
inc
push
roll
adc
add
inc
xchg
loope
push
xchg
sub
imul
sub
clc
mov
cmp
arpl
imul
aaa
pop
hlt
and
jp
inc
or
orb
cmp
mov
jbe
imul
iret
mov
cs
sbb
adc
sbb
sar
iret
cmp
xlat
push
pop
das
or
adc
xorl
test
mov
and
inc
cltd
cmp
cwtl
sub
mov
add
push
loop
jnp
insl
icebp
sarl
int
ficomps
lret
into
jl
xchg
lods
movsl
arpl
pop
xor
ds
test
xor
xchg
das
xchg
bswap
test
jbe
mov
cmp
lea
sbbb
jo
mov
movsb
xor
loope
push
sub
xchg
or
test
cwtl
jp
mov
sub
inc
sbb
fldenv
daa
pop
lock
repnz
scas
out
mov
js
test
inc
loopne
dec
add
insb
adc
imul
mov
lods
int
xchg
ret
out
xchg
jge
test
xchg
or
mov
pop
sbbb
fisubrl
fiadds
pop
enter
cmpsb
dec
cmc
adc
lahf
popa
push
cmp
mov
adc
sub
mov
xchg
push
inc
movsb
or
testb
xor
insb
std
ret
je
je
aad
inc
inc
mov
sub
or
xchg
dec
push
adc
mov
xor
and
lret
dec
mov
pop
push
sbbb
dec
lahf
mov
xor
and
fucomi
inc
iret
jmp
ja
aam
sub
pop
ds
push
insl
jg
ja
leave
inc
adc
jns
or
push
ret
popa
mov
fisubl
call
imul
faddl
dec
cmp
fimuls
and
in
sub
sbb
jne
leave
js
or
xchg
dec
je
imul
pop
mov
xor
cmp
xchg
mov
xor
repz
mov
scas
iret
cmp
mov
and
test
js
mov
sub
fsubrs
jo
jmp
adc
sbb
call
cmp
jg
mov
and
inc
mov
pop
int
mov
sbb
cmp
dec
push
pusha
dec
or
push
incb
dec
jbe
test
int3
dec
mov
xor
inc
insb
test
mov
js
enter
sbb
push
and
rorl
mov
mov
rcl
mov
outsl
dec
push
repz
rcrb
or
cwtl
cmp
fsubrs
pop
jnp
popa
lcall
pushf
ljmp
pop
int
rorl
testb
outsb
and
ret
lret
push
repz
lea
dec
dec
fwait
push
adc
clc
xchg
lcall
test
cmp
pop
sub
aad
sahf
shl
ficoms
add
ret
ret
jns
pop
mul
jl
and
xchg
add
shll
cli
dec
pop
pushf
inc
and
cmpsl
mov
mov
into
mov
xor
int
cmpsl
out
hlt
sub
jnp
and
lock
stos
in
les
imulb
lock
dec
pop
fstl
inc
xchg
fstpl
xchg
xchg
inc
shl
popf
movsl
loopne
lods
jg
push
mov
mov
fwait
sbb
outsl
das
into
cmp
mov
jmp
jge
sbb
dec
bound
in
pop
and
icebp
pop
ror
imul
icebp
lret
ficomps
rol
into
mov
sarb
cmc
ret
mov
roll
popaw
rol
lret
call
movsb
push
and
addl
mov
ja
ss
mov
mov
fildll
cmp
in
jno
sub
mov
sahf
les
fwait
push
sbb
cmp
push
shlb
dec
movsl
dec
push
add
orl
mov
pop
movsb
xchg
add
xchg
sbb
ret
push
pop
ds
mov
xor
outsb
mov
sub
adc
inc
xor
jae
push
int
loopne
jae
pop
push
push
rcl
add
test
cmc
sub
xchg
jo
xor
dec
pop
cmpsb
sub
not
loopne
jp
push
pop
sub
lea
mov
test
repz
cmp
inc
cmp
or
adc
jnp
mov
sub
cmp
and
add
xor
ds
push
scas
jmp
divb
dec
lcall
lea
push
jo
mov
add
in
imul
mov
fcomip
test
jae
mov
xchg
jl
sbbb
and
addr16
or
dec
dec
sub
movsl
sbb
das
sbb
lock
ficoml
xchg
mov
bound
in
cmp
pop
jne
lods
int3
jle
or
jmp
or
lret
cwtl
mov
xchg
sti
fimuls
mov
xor
pushf
jae
sbb
lds
xchg
mov
mov
sbb
add
jp
icebp
inc
add
fdivl
movsl
xchg
inc
xchg
dec
xor
pop
mov
add
inc
rcl
jge
jecxz
add
mov
push
stos
repz
mov
cli
ja
push
scas
xchg
movsb
push
fdivs
lods
notrack
lock
adc
clc
insl
rorl
jo
lods
shll
bound
inc
cmpsl
jae
jmp
pop
push
jecxz
push
scas
aaa
nop
adc
mov
iret
sub
adcl
xchg
std
pop
js
sub
dec
pop
push
or
lds
pop
aas
popa
sub
fs
aaa
daa
mov
leave
cltd
jg
aaa
xchg
and
jns
cmc
aad
jecxz
adc
jo
sarl
cmp
jns
xchg
popa
or
in
fisubs
jle
shll
sbb
cwtl
sbb
pop
loope
fildl
push
fnstsw
gs
stc
and
add
inc
mov
sbb
out
out
jp
insl
push
adc
pop
mov
fdivl
into
push
icebp
jge
and
iret
lret
scas
dec
xor
sbb
pop
pop
adc
pop
and
xchg
lahf
lea
xchg
pusha
xor
int3
sub
movsb
sar
cmp
call
ljmp
fdivs
js
mov
sbb
jp
aaa
push
inc
popa
rcrl
lock
xor
js
mov
push
sbb
loopne
xor
cld
popf
add
or
mov
inc
sarl
fld
roll
out
lea
jge
push
jge
sbb
jge
pop
mov
push
enter
lret
mov
mov
mov
push
jp
jae
jae
popf
add
jge
mov
pop
lret
int3
inc
mov
test
lods
lahf
lret
jp
call
pop
fisubrs
mov
xlat
daa
and
clc
sbb
push
out
jmp
push
push
fs
lea
mov
pusha
clc
xchg
inc
adc
dec
or
setnp
pop
mov
mov
adc
add
inc
inc
inc
outsl
mov
repnz
outsl
dec
jle
dec
inc
scas
inc
mov
adcl
stc
pop
test
xor
mov
xchg
fcoml
cmp
inc
bound
sbb
pop
cmpl
stc
bound
inc
xchg
inc
cwtl
fwait
lock
add
adc
add
rorb
sbbl
dec
insl
addr16
stos
sbbb
gs
lds
ret
lds
sarl
imul
mov
leave
nop
lret
cmp
int3
push
gs
mov
in
push
lret
test
pop
sbb
mov
insl
jge
cmp
insb
pop
daa
insl
dec
fistpll
adc
stos
mov
xor
push
out
pusha
pusha
cmp
sbb
adc
jge
sbb
xor
mov
je
pop
sub
pop
mov
push
clc
decl
or
sub
mov
cmpsb
jecxz
mov
jl
stc
out
jnp
in
aas
inc
mov
push
shrb
pushf
in
jmp
nop
add
xchg
inc
mov
add
xor
push
dec
stc
adc
enter
mov
inc
push
iret
adc
fstpl
xor
xchg
sub
mov
int3
mov
mov
nop
ja
jle
pop
jbe
test
dec
cmp
sub
dec
xor
fcompl
repz
ret
fs
or
test
or
jle
add
imul
pop
lret
lds
pop
or
dec
cld
mov
aad
or
int
pop
dec
pushf
shr
and
push
lret
sub
or
cmpxchg
jmp
aas
pushf
mov
cli
jmp
into
cmpsb
inc
scas
pop
add
or
mov
arpl
mov
xchg
xor
subb
inc
mov
add
enter
mov
dec
sbb
or
cmp
insl
push
xchg
pop
test
dec
jp
int3
mov
popa
jecxz
mov
mov
cmpsl
cmp
ss
nop
scas
jns
xchg
adc
daa
xchg
mov
lret
cs
xchg
test
test
aaa
jb
xchg
xchg
mov
or
inc
je
repz
adc
sbb
test
push
stos
xorb
pop
loope
int
sbb
icebp
jb
adc
test
mov
push
loop
mov
jmp
hlt
ret
loope
js
cmp
dec
or
in
repz
rorb
lds
push
add
fstl
jg
lret
test
pop
jl
add
jecxz
mov
xor
push
dec
insl
fisubl
in
aaa
adc
lcall
push
or
add
fimull
jns
xchg
and
or
mov
cltd
jecxz
dec
dec
mov
xor
push
jbe
cmpsl
mov
ja
inc
retw
aam
pushf
movsb
add
pop
daa
xchg
xchg
push
jb
into
daa
xor
push
mov
pop
in
lret
xchg
sub
adc
xlat
xchg
hlt
hlt
lcall
cmp
sub
add
xchg
or
xor
shl
lcall
cmp
insl
mov
jle
lea
cli
idivb
inc
and
sbb
or
sub
ret
xlat
xchg
data16
xor
pop
mov
adc
mov
jle
adc
mov
cmp
sub
and
or
lock
cmc
jne
aaa
fisttpll
adc
imul
cmc
ljmp
push
shl
adc
pop
dec
sti
jg
sbb
sbb
cld
aad
mov
add
xchg
movsl
sti
add
pop
fwait
inc
mov
push
mov
rcrl
sarl
loopne
pop
push
push
aaa
sbb
sahf
mov
pop
popa
adc
pushf
lahf
stc
and
jae
sbb
sar
inc
int
icebp
xor
sub
sub
mov
pop
stos
loope
push
or
sbb
xchg
call
pushf
jbe
inc
test
insl
aaa
jb
mov
xor
mov
outsb
push
mov
stos
mov
mov
nop
mov
nop
and
out
cmp
xor
les
xor
loopne
pop
xor
lods
test
cmp
loopne
insb
jl
lret
cwtl
push
int3
out
pop
test
into
xor
sub
ss
dec
ja
test
ret
icebp
push
imul
add
mov
and
fstpt
es
pop
out
rcll
inc
dec
mov
sbb
fucom
imul
aas
mov
in
mov
out
movsl
out
mov
sbb
popf
pusha
jmp
xchg
adc
push
sahf
gs
rcrb
fsubrp
jne
mov
jbe
in
mov
popa
cmpsl
shrb
and
pop
lret
add
dec
xor
fwait
movsb
gs
and
mov
gs
or
pop
pop
popa
sbb
mov
sub
dec
xor
insb
mov
push
mov
lods
out
aas
add
int3
imul
cwtl
scas
fwait
jno
inc
pop
test
inc
push
nop
int
in
sub
adc
andl
jp
inc
in
inc
mov
lods
addr16
and
hlt
mov
and
mov
fimull
ficomps
adc
jl
pop
imul
jle
cmc
push
pop
sub
or
hlt
mov
movsl
cmp
xchg
add
fdivl
xchg
pop
xchg
mov
fimull
cmp
cli
aas
scas
in
jecxz
loop
in
aad
inc
scas
sbb
adc
scas
mov
les
mov
insl
push
dec
andl
ret
mov
inc
xor
mov
pop
sbb
repz
stos
dec
ja
mov
gs
cmp
push
dec
lods
shr
aas
fcoms
pusha
inc
or
in
shrb
out
adc
cltd
call
dec
inc
outsb
adc
out
out
inc
push
xchg
loop
out
scas
lahf
xchg
cs
rcll
cli
push
add
ret
aaa
gs
adc
ljmp
fcompl
dec
shll
inc
cmpl
loope
popa
int3
pop
mov
int3
mov
outsb
rol
cld
sti
mov
sti
xlat
and
fcmovne
out
outsb
adc
fs
adc
outsl
and
mov
cmp
jno
loope
push
xor
out
push
add
cmpsb
test
dec
fcmovbe
sbb
xor
mov
push
stos
adc
movsl
sub
inc
cmp
out
daa
je
xchg
fstpt
xchg
pusha
add
xor
outsl
dec
orb
mov
test
xlat
cmp
pop
xchg
add
mov
sub
or
pop
test
hlt
sbb
aaa
imul
mov
sbb
push
jecxz
cmp
sbb
jl
dec
popa
hlt
inc
sbb
adc
popf
mov
mov
test
testl
or
stos
cmc
andb
pusha
sahf
xchg
fimull
dec
lock
pop
dec
push
fisubl
mov
nop
pop
pusha
xchg
mov
push
addr16
in
jl
inc
aaa
or
repz
int3
sub
and
inc
xchg
xchg
call
sarb
enter
xchg
jge
mov
xchg
out
sbb
ja
add
dec
or
mov
inc
push
xor
pusha
jns
sbb
pop
hlt
call
lea
in
pushf
jb,pn
mov
ss
pusha
les
xor
repnz
xchg
mov
cmc
rcll
cmpsb
iret
pusha
repnz
fxtract
push
push
adc
dec
inc
sarb
and
inc
push
mull
dec
dec
xchg
cwtl
mov
jge
out
ficoms
pop
mull
call
adc
cmp
out
xor
mov
dec
andnps
dec
cmp
sti
xor
jl
out
clc
mov
ja
pop
cmp
add
inc
xchg
xor
xor
dec
shll
xchg
jbe
fsubrs
pop
aaa
pop
xor
std
inc
test
push
jge
cmp
sub
mov
shlb
out
adc
mov
adc
xchg
push
pusha
negb
push
inc
imul
push
test
xor
shl
popf
sti
push
je
mov
cmp
xor
push
mov
push
push
and
ss
fidivl
inc
cmp
je
or
arpl
jg
add
jp
mov
int
iret
jae
sbb
fisttps
cmp
in
roll
mov
xor
and
in
lock
ss
cs
fdivr
xchg
sbb
sarb
enter
jno
xchg
inc
inc
mov
lds
pop
cmp
popf
and
out
into
sahf
inc
cli
mov
inc
mov
jbe
sti
jo
dec
loopne
push
dec
shl
inc
mov
in
push
push
insl
jbe
sbb
in
nop
or
rclb
mov
pop
daa
mov
cmp
sub
sub
shll
mov
scas
xchg
mov
das
int
dec
pusha
nop
cli
rorb
add
fcoml
xchg
lods
ja
inc
lock
cld
test
imul
outsb
jp
mov
xchg
rcrb
lcall
jge
mov
data16
adc
mov
xor
movl
ds
mov
jmp
lods
sbb
sbb
nop
pop
divb
mov
lret
xchg
in
jle
adc
dec
xlat
mov
arpl
mov
mov
pop
xor
loopne
clc
scas
jecxz
movsb
movsl
xchg
rcrb
inc
insl
dec
int
push
and
cmp
dec
cmp
hlt
repz
test
and
jae
in
cltd
and
pop
lds
add
loop
stos
mov
inc
test
loop
int3
pop
out
mov
and
rolb
jge
movups
jle
or
fcomps
adc
icebp
lods
dec
pop
hlt
xchg
pusha
nop
or
imul
rclb
adc
je
inc
into
out
or
popf
jae
in
xor
xchg
cld
xchg
loope
js
lods
or
popf
cltd
mov
xor
cltd
push
inc
push
lea
in
inc
dec
push
scas
pop
jae
mov
jnp
jbe
mov
jl
inc
jl
xchg
add
pop
out
sahf
daa
mov
or
pop
adc
fs
sbb
fistpl
cwtl
popf
inc
inc
pusha
push
cmpsl
inc
sbb
aaa
or
fcom
lea
sub
add
fstpt
mov
mov
bound
je
sub
mov
jmp
iretw
xchg
xchg
dec
xchg
xchg
int3
jge
imul
out
mov
sahf
les
jg,pn
mov
dec
mov
dec
rolb
add
adc
pop
psadbw
xor
sbb
ds
test
cmpsl
add
push
lret
pushf
push
mov
rcrb
subb
jl
shrl
stc
fdivrs
popf
xchg
aam
shl
inc
push
rcrl
insl
fstl
mov
fstpt
jmp
or
imul
push
repz
and
push
dec
xchg
or
jae
hlt
jg
xor
pop
push
xchg
out
sbb
jbe
xchg
cltd
sbb
jb
test
inc
in
xchg
adc
adcl
out
mov
lret
pop
cmp
dec
lahf
xlat
out
add
push
ss
sub
addr16
push
fldt
mov
adc
pop
in
add
movsl
mov
leave
or
popf
lds
frstor
jl
sbb
leave
fwait
push
mov
gs
loopne
pusha
mov
in
push
fistl
inc
ja
fmull
in
mov
stos
or
fsubs
push
mov
push
out
cmc
movsb
je
inc
mov
xor
jbe
sub
or
jp
je
mov
into
popf
scas
outsb
push
ret
push
sbb
and
lds
mov
into
repz
pop
pop
sbb
jp
icebp
mov
mov
out
add
xor
mov
push
sub
loop
and
sbb
inc
pop
int
ret
sub
push
jp
sbb
mov
out
and
dec
out
cli
rcl
or
jb
negl
pop
incl
pushl
mov
cmpl
mov
or
pop
push
das
ret
mov
and
mov
stos
fiaddl
xchg
sbb
ljmp
pushl
and
int
mov
movsb
push
das
outsb
pop
cli
les
dec
push
je
imul
xorl
imul
or
aam
mov
aas
xchg
cmp
dec
out
xchg
jne
add
sbb
arpl
jbe
cmp
in
das
out
jp
cmp
dec
es
push
mov
outsl
daa
lea
mov
jo
inc
cmp
out
test
movsl
test
cmc
ficoms
jle
fbld
sbb
test
dec
rorb
push
dec
add
and
fimuls
rorl
pop
inc
pop
jns
cmpsl
loope
mov
ret
mov
leave
cld
sub
dec
cld
xchg
clc
jbe
int3
or
add
cmp
roll
imul
jmp
pop
pop
mov
pushf
xor
out
pop
outsl
lahf
sbbl
jmp
imul
xor
sub
xchg
das
push
movsb
fmull
jnp
mov
sbb
push
mov
jl
push
popa
cmc
insb
mov
mov
cltd
cmp
dec
inc
sub
fildl
icebp
clc
fidivs
adc
cmp
decl
cmp
negl
mov
pop
push
aaa
inc
in
adc
inc
pusha
je
test
cmp
xchg
insl
inc
xor
add
mov
sbb
cltd
fcoml
adc
pushf
rorl
les
into
mov
sub
sbb
data16
push
stos
mov
sub
nop
subb
jmp
xor
test
xchg
insb
sub
xchg
xor
pop
sbb
fistps
jg
mov
jnp
subb
fcompl
sbb
adc
xchg
cmp
pop
mov
out
clc
mov
das
mov
cmpsl
pop
enter
mov
sbb
mov
daa
push
cwtl
test
mov
mov
cmp
jb
shll
jne
sbb
or
notl
add
xor
loop
add
xchg
jae
cmpsb
andb
addr16
inc
push
jb
aam
pop
ja
mov
out
movsl
aam
lods
and
xor
jo
addl
stos
jbe
insl
push
movsl
add
jb
dec
cmp
jge
nop
rcll
inc
mov
aam
sbb
dec
stos
in
outsl
out
leave
ret
xor
push
cld
pop
or
fldt
add
or
dec
mov
sbb
lret
or
pushf
int
popf
insb
mov
jl
clc
sti
xchg
arpl
push
inc
imul
call
pushf
aaa
mov
and
cmp
jbe
and
sub
aas
fisubl
scas
mov
ficoml
inc
push
aam
pop
sub
sub
pop
ja
mov
test
xor
icebp
pop
stc
test
iret
xchg
scas
mov
jno
cmp
push
popa
ja
cmpsl
das
nop
xchg
or
mov
xor
pop
cmpsb
jae
sbb
mov
sti
xchg
push
lods
shll
sbb
mov
and
xorb
adcb
loopne
dec
test
scas
mov
push
xchg
or
jo
push
insl
dec
or
stc
sub
cs
adc
je
mov
popf
das
cmpl
rclb
push
dec
gs
mov
fwait
and
bound
dec
dec
sub
sbb
mov
lret
cld
cld
push
call
icebp
add
out
aas
movsb
shrl
or
int3
movsb
in
stc
addr16
mov
mov
subb
shll
jp
pusha
nop
enter
cltd
shlb
orb
pop
lret
icebp
sbb
je
cmp
ljmp
inc
scas
sbb
dec
test
lods
add
xchg
in
xor
aam
enter
int
clc
outsb
sub
push
adcb
xchg
push
dec
xor
inc
bound
sbb
xlat
cmp
sbb
jbe
mov
jb
shr
jno
adc
mov
xchg
inc
cli
lods
js
push
push
in
outsb
and
loope
pop
nop
dec
popa
mov
jecxz
add
gs
popf
ret
sahf
and
dec
xor
lock
add
sub
mov
adc
jle
aaa
pop
sbb
jne
add
fbld
out
jmp
jg
sbb
frstor
outsb
stos
sub
stos
push
bound
or
push
mov
mov
xor
inc
mov
ror
mov
jnp
int3
or
insb
aas
adc
add
sahf
pop
rclb
into
xchg
es
in
jge
dec
mov
cmp
data16
xor
xchg
mov
or
call
adc
mov
lock
dec
push
bound
push
mov
loop
xchg
lcall
inc
je
pop
mov
cmc
out
fs
xor
in
cmp
mov
or
cmp
rcrb
ja
pop
lahf
shrl
jb
jae
mov
mov
iret
or
sub
popf
ja
jo
lea
enter
inc
adc
and
in
add
lods
push
aad
xchg
enter
loop
call
lds
mov
push
faddl
jecxz
pop
ss
int3
icebp
fwait
andb
lds
xlat
int3
in
lods
add
xor
gs
sarb
cwtl
adc
sub
sbb
insl
dec
pusha
bound
fists
js
push
xchg
fcoml
rcl
popf
push
sub
outsb
jno
pop
sub
cwtl
rorb
sbbl
and
mov
fdiv
mov
pop
sbb
jo
daa
and
mov
call
xor
ret
cmp
ja
mov
inc
enter
ss
xchg
adc
in
cmpsb
mull
xorb
pop
das
push
fistl
cld
dec
push
orb
mov
lret
cmpsb
or
mov
jecxz
xchg
push
sbb
mov
or
lods
bound
push
jmp
mov
and
mov
minps
jbe
sbb
inc
pop
sti
test
jge
mov
cli
fildll
mov
jbe
jno
inc
and
popa
in
data16
jb
decl
in
fimuls
dec
fld
xor
ds
jo
xor
dec
inc
sub
cli
aad
lea
test
jg
lds
test
adc
rclb
or
or
mov
xchg
ds
mull
jb
sahf
cmp
or
xlat
xchg
gs
adc
xchg
add
and
test
mov
fwait
loope
add
sub
aaa
lds
sbb
fwait
test
dec
pop
int3
lret
cmp
out
test
xor
outsl
test
or
ss
adcb
ret
scas
lds
imulb
test
jl
mov
ja
lds
and
jno
dec
and
xchg
add
mov
adc
sub
adc
adcb
sahf
inc
cmp
dec
repnz
lahf
or
popf
insb
nop
xor
aaa
mov
sbb
xchg
mov
or
jle
insb
pop
push
inc
lods
inc
xchg
push
or
add
add
fnsave
push
sarb
push
sbb
cmp
lods
in
push
jne
mov
xor
js
add
mov
jbe
push
imul
mov
pop
int
shrl
aas
jl
dec
cmp
xchg
jle
add
jl
ss
cmc
arpl
inc
push
sub
xchg
imul
rcll
sar
pushw
stc
das
and
adc
gs
cmp
and
jnp
mov
jns
das
aas
add
rcrl
cmp
push
mov
cmpsb
adc
sbbb
cmp
cmp
xor
lret
loopne
mov
int
bound
mov
and
jecxz
pop
imul
ret
scas
or
mov
hlt
xor
dec
sbb
popa
or
pop
icebp
or
sahf
shl
vpavgw
fcomp
cmp
loope
sbb
gs
insl
es
adc
sbb
movsb
push
push
cs
fnsave
mov
movsb
and
add
out
in
mov
test
jecxz
loope
mov
add
sbb
les
jbe
inc
cmc
stos
hlt
popa
fwait
sub
mov
std
xchg
adc
pop
jmp
push
sbbb
pusha
mov
inc
fwait
lds
mov
cli
jne
daa
popf
jl
or
mov
inc
jmp
test
stos
pushf
mov
inc
pushf
scas
xor
bound
outsl
cs
or
xor
sub
mov
and
sti
adcl
push
sub
in
push
sbb
push
jb
sarl
jle
jns
out
and
in
mov
jnp
sbb
xor
or
ljmp
jmp
out
pop
fs
fsubs
ds
aad
add
repnz
mov
pop
xor
stos
adc
addr16
jge
inc
out
add
daa
mov
shrb
insb
test
mov
push
or
fdivl
movsb
in
outsb
ret
add
dec
mov
hlt
jmp
pop
lret
les
ret
xor
pop
sub
mov
or
mulb
mov
out
dec
xor
jno
xchg
push
and
mov
lahf
arpl
outsb
and
jge
addr16
inc
mov
mov
or
sarl
sahf
sub
jecxz
lods
xor
push
jno
fwait
sti
nop
mov
pop
push
jge
xchg
sahf
mov
lcall
mov
pop
pop
shll
sbb
xor
in
mov
mov
js
sbb
pop
sbb
ljmp
aaa
mov
mov
mov
pop
jnp
icebp
and
orl
sbb
push
sub
cmp
add
repz
pop
xor
dec
lret
and
sub
sub
fs
sbb
fwait
push
dec
int3
mov
and
push
dec
add
gs
add
push
ja
bound
call
push
adc
clc
xchg
sbb
or
je
push
movsb
or
pop
and
inc
ljmp
mov
test
sub
and
popa
xchg
jns
xor
inc
sbb
jns
insl
fld
sub
ljmp
fimuls
fs
jmp
aam
lds
hlt
out
addr16
int3
pop
pop
outsl
int3
lods
fwait
mov
stos
pop
mov
mov
adc
mov
pushf
add
mov
xor
popa
mov
test
aas
mov
outsl
and
icebp
popa
lret
pop
sub
test
and
pusha
inc
nop
xor
mov
imul
push
outsb
fs
int
mov
jmp
adc
cmpsl
fwait
cwtl
movsb
jnp
cmp
inc
ds
mov
bnd
add
cmp
cli
inc
aas
sbb
and
stos
sahf
and
pop
jmp
inc
or
loop
pop
dec
fs
rolb
sub
fadd
mov
mov
cmp
shlb
imul
pop
mov
mov
xor
loopne
add
mov
test
lret
test
cmp
test
sbb
push
jge
daa
xchg
push
xor
xchg
in
lods
mov
enterw
faddp
in
cmp
mov
xor
inc
fdivl
mov
mov
mov
cld
cltd
inc
xchg
cltd
insl
push
aad
roll
aad
add
addb
rolb
mov
inc
dec
daa
and
insl
imul
add
ja
pop
ret
sbb
xchg
dec
fs
outsb
fnstsw
call
xchg
aad
js
dec
or
cs
insb
icebp
subb
jl
jge
mov
test
fcmovb
hlt
mov
lock
and
push
int
push
addb
xchg
jp
pop
insb
pop
lock
into
out
pop
cmp
aam
sub
pushf
adc
xor
filds
and
lret
jnp
mov
add
dec
xor
test
xchg
push
out
pop
xchg
js
and
inc
ss
das
and
mov
sub
daa
mov
sub
andb
or
lods
mov
or
pushf
pop
dec
je
pop
cs
add
pop
in
lods
jo
daa
nop
insb
add
jmp
sub
push
jbe
popf
mov
jno
clc
testl
imul
push
popa
and
fwait
les
push
int
hlt
jo
mov
iret
mov
mov
cwtl
lock
cmp
test
pushf
adc
mov
pushf
sub
dec
push
pop
mov
js
ja
fs
xchg
mov
outsb
sbb
jle
inc
into
push
mov
dec
inc
aas
and
jle
lock
and
rorl
fwait
jp
mov
mov
push
lahf
enter
mov
scas
pop
sub
ret
popa
inc
pop
sbb
push
pop
cmp
xor
inc
cmp
xor
jne
cmpsb
nop
mov
add
das
in
imul
mov
fcompl
xchg
cltd
mov
out
pop
pavgw
orl
repz
xchg
jge
rorb
les
mov
xlat
rolb
lcall
in
add
mov
or
test
lods
stos
iret
in
inc
xchg
fists
dec
xor
xchg
and
xor
or
jle
dec
push
jg
jmp
repnz
jmp
xchg
push
fidivrl
xchg
addr16
jno
out
fucomp
fsubr
cltd
mov
loope
mov
hlt
and
out
and
dec
pushf
mov
sbb
xchg
out
xchg
inc
dec
xor
cmp
cld
mov
inc
xor
stos
or
sub
imul
push
mov
prefetch
sub
adc
subb
mov
aas
or
and
adcl
lahf
lret
ja
inc
cmpsb
enter
add
ret
add
inc
mov
lret
add
pop
cmpsl
and
inc
das
push
lea
sub
rclb
imul
xor
adc
lds
cmpsb
xor
into
rorl
sbb
loopne
mov
loopne
sub
rolb
jnp
sbb
pop
xor
xlat
xchg
movsl
inc
xor
repz
inc
mov
movsl
xor
push
lds
dec
pushf
pop
pop
lods
dec
xchg
nop
sub
hlt
or
les
cmc
jnp
test
lods
lret
dec
inc
subb
xor
push
and
shlb
in
mov
cmp
int3
ja
scas
cmpsb
jne
pop
push
pop
sarl
sbb
fistps
mov
adc
ds
or
mov
data16
xor
lods
mov
or
insl
mov
add
int
flds
sbb
fwait
add
xchg
mov
push
push
and
pop
ljmp
outsl
rcll
xor
mov
inc
xor
out
mov
xchg
sub
ds
data16
pop
mov
sbb
adcb
fs
lcall
xchg
inc
xor
mov
pop
mov
push
mov
imul
inc
and
xor
lock
adc
fsubr
lret
mov
jecxz
lcall
mov
fsubrl
ja
xchg
outsl
mov
popa
ficoms
jbe
std
sbb
or
cli
out
mov
add
rolb
sub
into
adc
nop
lret
in
cmc
repz
cli
jl
xchg
shll
jmp
sbb
mull
in
mov
add
je
push
dec
mov
cmp
xor
stos
push
sub
xchg
test
mov
clc
jbe
sbb
and
hlt
arpl
mov
sub
fisttpll
xor
sub
inc
insb
push
jnp
pop
sarl
sbb
ds
stos
mov
xchg
sub
and
add
and
daa
imul
jle
pop
imul
fisubl
push
insb
sub
loop
rcrl
mov
push
daa
sbb
pop
pusha
dec
filds
or
push
insl
sbb
sbb
ret
es
push
jns
notb
cmp
cmp
test
xchg
jae
xchg
mov
mov
xchg
decb
and
adc
or
xor
xchg
dec
xchg
iret
cld
mov
mov
loopne
pusha
mov
sarb
lret
lods
sbb
inc
orb
add
ret
movsb
inc
inc
push
movsb
sub
imul
aam
ret
stos
cwtl
pop
loope
mov
out
out
lret
xorb
push
adc
movsb
test
jb
scas
xor
sbbb
or
gs
cmc
mov
mov
leave
mov
or
repz
sub
jmp
xor
test
adc
pop
int
xchg
pop
pop
adc
pop
jo
mov
mov
call
and
stos
push
cld
into
mov
ja
outsb
ja
call
cmp
push
ret
mulb
mov
and
rorl
dec
xor
das
ja
lcall
pop
and
push
in
mov
sub
cmp
push
sbb
jecxz
and
loopne
inc
xchg
mov
add
and
adc
jns
mov
push
enter
sahf
ret
push
aaa
xor
or
mov
xchg
imul
ja
xor
push
cmp
lds
jl
sub
repnz
jno
aad
lcall
mov
jle
push
repnz
dec
xor
ljmp
xchg
pop
and
lods
jecxz
jo
sub
loope
xchg
sub
and
dec
and
shrb
fwait
jbe
into
sub
ljmp
stos
cld
sahf
test
repz
sub
add
push
int3
push
sub
aas
loop
pop
sub
mov
xor
js
pop
push
sahf
mov
or
in
pop
xor
sub
aam
inc
fisubrl
rol
fdivrl
cmpsl
xchg
add
mov
xor
imul
mov
sub
lret
jns
sbb
xor
pusha
and
jne
repnz
mov
clc
lret
popf
push
xchg
or
push
pop
test
or
jge
pop
call
add
dec
mov
fwait
pop
cltd
push
ja
sarl
or
jns
lcall
mov
push
dec
add
out
dec
jecxz
pop
sarl
dec
sbb
cmp
test
clc
mov
dec
or
dec
pop
push
out
in
jp
dec
sbb
mov
scas
in
jmp
test
push
mov
inc
js
insb
add
pop
dec
mov
outsb
mov
push
jg
inc
loopne
imul
mov
jne
mov
push
stc
cmpl
dec
loope
jnp
and
rcrl
sbb
push
insl
div
or
add
sub
out
ret
inc
pop
push
fwait
ret
push
test
in
ret
mov
mov
jge
jp
in
shl
xor
sti
repnz
les
dec
pop
pushf
jecxz
mov
dec
xor
out
insb
out
aad
mov
or
pop
sti
mov
xor
push
adc
push
mov
aam
test
nop
rol
mov
dec
sbb
xchg
xchg
jbe
inc
pop
adc
pop
leave
je
push
sbbb
loopne
int3
dec
sub
lret
cwtl
daa
jmp
mov
mov
fdivr
adc
pushf
jmp
xor
nop
mov
ja
pop
repz
leave
mov
sub
out
xor
jp
dec
out
in
mov
push
je
mov
pop
xlat
xchg
div
ss
mov
pop
pop
je
data16
push
std
test
cld
mov
sbb
xor
mov
mov
push
fsubl
pop
lds
inc
loopne
cmp
and
shlb
mov
movsb
fldl
add
jae
fistl
sbb
mov
mov
in
sub
dec
out
and
int3
mov
cmp
jae
or
lahf
icebp
add
sti
add
or
jl
ss
int3
push
jp
cs
ret
js
inc
testl
cmpl
mov
enter
mov
jb
cmc
out
loop
mov
cwtl
shl
inc
pop
push
sbb
inc
xor
and
sahf
lock
sbb
pop
jmp
shl
jl
das
scas
cwtl
lods
mov
xor
repz
mov
das
adc
push
sbb
addl
inc
or
jge
int3
loop
ffreep
mov
push
js
sbb
pop
scas
or
insl
push
add
inc
fistps
jne
in
pop
add
jbe
bound
idivb
sbb
xor
in
out
test
or
rcrb
aaa
out
rcrb
add
stos
cld
ret
mov
cmpsb
aaa
adc
mov
scas
shlb
xor
and
and
fs
pop
fwait
lods
subl
push
lods
cltd
inc
pusha
inc
loop
les
mov
mov
bound
push
push
out
into
and
cmpb
xchg
fmull
mov
mov
repnz
sbb
int3
push
add
pop
stos
shrb
icebp
dec
aam
jnp
out
cwtl
xchg
inc
push
out
mov
shlb
call
rcr
add
int
shr
push
dec
faddl
push
lods
dec
rolb
mov
test
pop
ss
pop
mov
jge
push
mov
lret
ljmp
ret
outsb
add
or
add
stc
push
loope
xchg
or
jo
imulb
cmp
adc
cld
inc
iret
sbb
or
add
outsb
ret
xchg
pusha
mov
adc
push
sbbl
xchg
in
jbe
shll
dec
sbb
adcl
addb
pop
popf
mov
xchg
out
sti
fwait
jo
or
inc
xor
pop
mov
jl
jmp
jge
mov
or
xchg
je
add
cmp
pushf
cmpb
pop
sti
out
fnstcw
push
lock
cmpsl
test
sub
fiadds
push
adc
push
subb
in
xor
movsl
jb
mov
mov
rol
and
hlt
stos
mov
or
push
dec
jmp
jle
jae
loopne
std
test
aad
cmp
cmpsl
out
mov
aad
mov
sub
mov
das
or
in
mov
scas
aaa
rolb
shlb
jmp
dec
rcrb
testl
mov
ds
sub
pop
retw
sub
xchg
lods
add
or
idivb
push
lret
sub
in
adc
xchg
xchg
push
aam
notl
pop
push
xor
inc
xchg
push
mov
ljmp
insb
pop
xor
dec
inc
fildll
sbb
inc
inc
push
cmpsl
ss
cmpsl
xchg
push
pop
pop
push
sti
call
dec
das
add
fisubs
popf
cmp
and
dec
sarl
enter
lods
mov
sub
cmc
dec
popa
lcall
and
cmp
in
jl
jo
dec
inc
lret
lds
imul
jecxz
dec
push
movsb
inc
pusha
adc
push
aad
cs
lds
ret
int
fstl
inc
outsb
xor
mov
and
sbbb
mov
xchg
mov
iret
sahf
sbb
mov
into
fisubl
xchg
cmp
pushf
sub
insl
call
aas
xor
xor
adc
mov
push
rcrb
and
out
inc
popa
cmp
cltd
dec
jecxz
push
ja
mov
mov
fldenv
int
popa
int3
pop
pusha
imul
push
jb
pop
imul
js
add
jns
add
shrb
push
sbb
mov
cld
dec
std
gs
outsb
cmp
je
in
cli
fistpl
in
push
scas
mov
orb
add
jne
ret
fisubrs
fsubr
shll
fldenv
mov
sub
jg
sbb
cmp
push
and
shll
outsb
cmc
in
std
xlat
lret
push
in
out
mov
out
mov
mov
xchg
adc
inc
std
mov
mov
sbb
or
in
add
push
shl
or
scas
insb
inc
in
sbb
insb
aad
loope
cmp
and
nop
push
jo
fnstcw
in
popf
sti
adc
xchg
in
mov
pop
and
sub
outsl
jo
unpcklps
jno
pop
out
addr16
xor
mov
mov
jnp
dec
popa
sub
fwait
adc
loopne
mov
int3
jg
lcall
andl
mov
sbb
outsl
cmp
shrl
in
cmc
pop
dec
lcall
jnp
mov
add
cmpsl
push
lock
cli
sbb
std
or
orb
or
or
adc
scas
push
pop
cmp
test
push
jae
ret
sbb
aaa
mov
mov
sbb
rorl
add
jle
lods
push
orps
cmp
outsb
sub
dec
adc
das
mov
inc
and
in
mov
rorb
inc
les
and
mov
pop
mov
mov
in
out
sub
sub
orb
lods
inc
dec
mov
xchg
test
or
fnstsw
pop
gs
pop
scas
mov
sub
xchg
insl
cmp
cmpsl
cmp
nop
sub
mov
mov
pop
sub
xchg
arpl
inc
push
repz
jge
mov
xchg
test
fucomp
cmp
pop
mov
sub
repnz
lods
push
fwait
inc
push
je
les
call
mov
fwait
and
push
lock
sbb
orl
in
clc
sbbb
in
mov
fidivl
fbstp
cmp
dec
fmul
xor
jl
adc
int3
mov
imul
push
lahf
negl
sbb
mov
lcall
xchg
adc
mov
sub
push
adc
aam
out
jne
xor
into
insl
lods
out
mov
incl
aam
jb
xchg
pop
pop
in
mov
xchg
jecxz
les
xchg
cmp
es
and
adc
push
popf
xchg
jns
dec
add
or
jp
dec
inc
adc
fst
mov
lds
inc
push
adc
add
int3
sub
mov
xlat
mov
push
mov
jbe
or
push
pop
popf
lret
popf
imul
fildl
adc
lea
mov
fsubl
sub
push
and
cmpsl
ret
sbb
xchg
mov
push
rcrl
mov
jno
xchg
add
cs
imul
mov
lea
test
inc
addr16
mov
cmpsb
dec
daa
push
fistpl
rorl
stc
mov
sub
int
dec
dec
sti
in
mov
ss
jecxz
test
dec
loop
leave
xlat
and
jns
je
out
div
mov
mov
inc
mov
jb
adc
jo
loopne
xchg
dec
pushf
out
das
ficompl
inc
dec
adc
mov
shl
ret
sub
or
push
inc
cmp
adc
or
mov
xor
aam
xor
out
and
fwait
jae
dec
fs
adc
push
push
daa
xchg
out
push
cmp
lods
push
andl
or
enter
jl
sub
mov
dec
stos
insl
fcmovnbe
mov
jp
lods
js
or
mov
or
fcomps
and
add
pop
mov
out
push
or
scas
mov
test
xlat
in
xor
pusha
jnp
push
repz
jb
jecxz
int3
aad
int3
nop
jge
psubq
in
xchg
cmc
das
prefetch
mov
test
sbb
movsl
stc
lea
push
sub
shlb
cmp
inc
scas
add
sbb
pop
add
xchg
pushf
pop
jecxz
mov
ljmp
push
outsl
insb
push
idivl
jno
mov
push
hlt
fstl
std
loopne
lahf
scas
arpl
iret
sub
mov
ljmp
xchg
lock
inc
pop
ss
inc
jbe
or
adc
add
fsts
ror
mull
add
repnz
outsl
cmpsl
pop
cmp
in
sbb
add
sub
rcr
ss
and
popa
cmc
push
inc
mov
mov
push
xor
mov
cmpsl
or
pop
and
dec
daa
sbb
test
xchg
cmp
orl
ljmp
repz
push
das
xorl
cmp
sbb
xor
loop
mov
clc
mov
cltd
scas
in
mov
cmc
lods
and
pop
stos
scas
int3
sbb
int
pop
mov
mov
fmuls
icebp
jno
sub
stc
inc
jns
and
outsb
in
inc
adc
or
xchg
sub
cmp
pand
jmp
xchg
xchg
xchg
cmp
mov
push
ds
iret
js
push
xchg
into
test
pop
arpl
stos
loope
pop
out
ds
out
aas
rcr
xchg
jae
enter
adc
adc
or
cs
jecxz
push
mov
pop
dec
jle
jmp
test
outsb
jecxz
or
pop
aad
fwait
jo
inc
or
fsub
hlt
xor
jnp
jp
cvttps2pi
pop
sbb
in
mov
sahf
sarl
jmp
data16
movb
cmpsb
pop
idivl
pop
das
or
or
test
out
addb
lock
sti
inc
xor
mov
push
adc
jae
test
push
push
add
test
fsubrl
mov
scas
aad
je
cmp
xchg
imul
or
loop
push
xchg
cld
sub
dec
cmc
lods
ficompl
and
fiadds
into
rclb
dec
fadds
mov
pop
xorl
mov
xor
cmp
lods
adc
jno
lods
movsl
in
xchg
lcall
mov
pop
call
popl
push
push
gs
xchg
out
mov
fwait
inc
sbb
in
enter
movsb
or
lahf
mov
adc
xchg
mov
mov
push
or
ffree
sbb
sarb
stos
in
iret
inc
out
adc
pop
or
adc
insb
or
jp
fisubl
popf
jg
loope
and
mov
cwtl
mov
pushf
dec
sbb
mov
push
imul
jbe
dec
ret
sub
je
xor
rcr
movsb
lods
lret
fldenv
lds
push
xchg
nop
lods
mov
fldenv
push
xchg
lahf
push
dec
bound
or
std
das
rcrl
jnp
outsb
add
and
sbb
flds
xor
je
push
push
pop
fs
or
xchg
adc
jo
sbb
jae
adc
xchg
push
adc
mov
mov
cmp
or
mov
lods
outsb
mov
jns
mov
add
lods
fmuls
push
adc
mov
test
in
cmp
mov
aas
sub
jne
adc
jb
fs
int3
popf
adc
imul
pop
sti
xor
mov
test
enter
mov
mov
cmpb
sbb
inc
jmp
enter
repz
ret
nop
xchg
call
xlat
movsb
iret
movzwl
sub
cmp
lods
or
jns
imul
rorl
test
jne
out
mov
xchg
je
inc
mov
test
pusha
int3
pop
stc
jbe
add
and
mov
mov
out
ret
push
jmp
add
add
adc
insl
xor
mov
sti
cmc
dec
cmc
jmp
in
out
and
les
jb
pop
mov
adc
cmpsb
add
push
push
popf
mov
or
cmp
pop
and
or
mov
cmp
xlat
insb
sub
jb
sub
call
scas
stos
shll
mov
pop
ds
dec
jecxz
sub
sbb
push
xlat
mov
jmp
mov
sub
xchg
loopne
dec
lods
rol
lret
popa
nop
inc
pop
rcrb
fiaddl
in
dec
repnz
sub
pop
je
push
dec
cld
inc
pushf
mov
mov
test
ficompl
cmpsl
jl
dec
ret
std
daa
adc
xlat
ss
out
iret
mov
popf
jp
iret
or
push
sbb
push
push
daa
xchg
arpl
jns
ds
lret
dec
int3
dec
xor
scas
xchg
add
cmp
sbb
dec
mov
leave
js
adc
je
jecxz
and
repnz
mov
rclb
lcall
jge
into
dec
out
std
pop
cltd
rorb
jns
xchg
scas
fiadds
mov
cmpsl
pop
shl
repnz
cmpl
or
dec
cwtl
int3
je
xlat
into
inc
jb
dec
insb
pop
addl
lret
cmpsl
sbb
jns
sub
pusha
enter
jns
jae
das
jmp
adc
call
adcl
bound
lea
scas
add
xchg
cmpsl
mov
rcr
push
scas
adc
mov
int3
mov
or
sbb
enter
push
sbb
mov
stos
loopne
pop
in
pop
xchg
dec
shl
add
jbe
pusha
and
inc
xchg
sbb
jle
repz
inc
mov
sub
and
mov
addr16
imul
nop
push
dec
mov
add
push
push
repz
in
mulb
xchg
inc
mov
das
shl
mov
test
add
mov
cmp
fucomp
adc
inc
jo
mov
dec
sahf
xor
pop
xchg
cmp
ljmp
mov
and
cmp
nop
daa
inc
leave
push
outsl
mov
mov
inc
mov
mov
xlat
jns
mov
xor
inc
ss
dec
cmp
push
xchg
sub
xor
iret
std
cli
sbb
stc
cltd
push
mov
pop
vprotw
das
call
push
push
sub
leave
iret
int
mov
xchg
test
fstps
mov
cli
test
cmp
mov
jae
mov
and
loopne
inc
loope
insl
adc
mov
roll
movsb
cmpsb
sbb
in
test
xchg
xor
pop
pop
ss
xor
rorb
or
jo
or
scas
adc
push
in
jo
leave
fmul
xchg
push
sbb
add
jo
sub
push
jmp
add
or
pop
outsl
rolb
iret
xor
loopne
jle
adc
arpl
lods
cmp
or
jbe
push
scas
dec
mov
and
fstl
pop
jo
mov
fs
shll
out
mov
lret
or
dec
roll
stc
inc
mov
sahf
sbb
fldcw
js
int
cmpb
lahf
mulb
stos
pushl
inc
mov
push
xchg
stos
jp
js
dec
test
cmp
cmp
sub
and
jb
in
mov
fsubs
repz
push
mov
mov
xchg
lods
adc
jno
and
push
int3
loop
xchg
cmc
sbb
inc
sbb
or
push
cli
outsl
xor
repz
mov
xchg
imul
dec
and
and
mull
jae
xor
cli
inc
jb
shrb
xchg
pop
inc
mov
jl
scas
cmp
jb
into
mov
movsb
ret
pop
mov
out
jge
lahf
lret
std
icebp
adc
dec
clc
xchg
sti
fsubrs
repz
mov
addr16
ja
inc
mov
out
mov
js
int
mov
cmp
mov
lahf
lock
adc
cltd
pop
pop
sub
std
ficomps
mov
das
mov
xchg
lcall
and
jle
pop
mov
inc
add
push
jmp
jb
lods
imul
sbb
cmp
dec
roll
ss
in
gs
push
fwait
imul
pop
cmp
popa
ljmp
adc
popa
sub
sahf
sub
into
ret
inc
sub
xchg
iret
add
loopne
xchg
test
adc
inc
test
enter
in
inc
xchg
fstl
inc
popa
cmpsb
sbb
inc
fwait
jp
cmp
xchg
xchg
ret
dec
mov
jg
imul
scas
add
add
mov
mov
add
data16
scas
sahf
aad
fcomip
dec
dec
mov
or
adc
mov
cld
mov
nop
outsb
and
cmp
popa
dec
loope
cmpsb
fildll
loop
sub
std
cmp
fadds
mov
aas
sahf
mov
dec
fisubs
ficomps
xor
loopne
lret
imul
mov
lahf
test
xor
pop
sub
test
stos
lds
outsb
ret
or
dec
test
icebp
dec
addr16
adc
mov
xchg
push
testb
leave
movsb
roll
aam
clc
xchg
stos
lock
dec
lret
cld
inc
adc
fstpt
imul
call
fwait
adc
cli
mov
or
jge
adc
cmp
push
cmp
push
xchg
push
ror
ret
aaa
and
out
cmp
addr16
or
lods
shll
add
les
add
mov
das
pop
es
xor
push
sbb
pop
push
bound
push
jne
jecxz
testb
jl
mov
jnp
mov
cmp
aaa
xchg
add
xchg
jg
fistpl
daa
push
jns
dec
cmc
ja
jmp
xchg
or
fildl
out
push
push
jg
mov
popa
jge
clc
mov
lahf
lret
mov
rolb
and
bound
cmp
ret
out
ljmp
push
hlt
call
dec
adc
mov
test
iret
mov
filds
cmp
popa
lret
dec
fldt
and
dec
jmp
insb
ja
mulb
jns
stos
int
mov
inc
sub
pop
shll
daa
sub
or
data16
mov
ljmp
movsl
pop
cltd
xchg
dec
notb
loopne
push
sbb
loope
loope
iret
fldcw
lods
lret
sub
aad
cmp
cli
jno
mov
ja
or
iret
gs
pop
aaa
push
loope
rcr
push
adc
cmpsb
in
pusha
in
in
sbb
sbb
or
jo
mov
pop
inc
iret
call
mov
xor
or
jle
arpl
test
popa
test
lea
call
daa
xor
fadds
ret
xchg
outsb
sub
out
mov
sub
out
fisttpll
filds
xor
inc
fcmovbe
xchg
jmp
sub
xchg
add
inc
pop
jmp
xor
lock
loope
jns
loop
outsb
hlt
inc
push
jnp
mov
mov
xlat
dec
repnz
adcl
mov
push
stos
mov
in
ds
lcall
jge
lods
dec
rcrb
repnz
mov
sub
xchg
loopne
roll
ret
lods
dec
jo
sbb
movsb
push
std
jns
fisttps
mov
pop
fdivs
fnstenv
ds
or
fsubl
add
in
adc
mov
mov
and
mov
jl
scas
jae
xchg
pusha
cmp
or
xchg
inc
rcll
cmp
mov
push
mov
push
insb
jecxz
push
push
and
mov
fwait
add
scas
je
jmp
inc
stos
jmp
lods
pop
or
js
scas
or
lods
lods
xor
gs
int3
xchg
stc
leave
or
popf
pop
pop
mov
les
mov
bound
cs
lret
xchg
lds
mov
pop
es
sbb
push
lds
add
stos
repz
ret
hlt
leave
call
dec
lcall
add
insb
les
nop
cmp
imul
lret
imul
lcall
loopne
push
je
rcrl
imul
sarl
or
adc
into
sbb
movsb
pop
lods
mov
cld
or
pop
sbb
testb
or
xchg
pop
daa
fdivrl
xlat
stc
int3
lds
mov
pop
jmp
dec
fmull
lds
and
push
in
popf
and
mov
pop
and
pmaddwd
fidivs
imul
jb
in
xor
mov
lea
repz
out
sub
push
add
or
sub
inc
ret
pusha
xchg
fisttpl
xchg
les
push
rorl
xor
stc
add
mov
push
aad
int
mov
out
fs
xor
adc
or
ds
xchg
push
or
pop
sub
mov
jo
lea
jmp
fcoml
sub
mov
sarl
arpl
pop
adcb
movl
ja
push
xchg
jne
push
pusha
movsb
imul
rcll
add
repz
cmpsl
jg
adc
movsb
mov
inc
xor
fadd
sahf
das
fsin
test
inc
and
outsl
add
push
mov
jno
daa
adc
pop
lea
push
pop
repnz
adc
nop
es
icebp
push
mov
jo
scas
pop
pop
xchg
push
lret
lea
insb
lods
mov
int
nop
sbb
inc
cld
xor
cmc
push
pop
push
imul
test
xchg
test
ss
ficoml
cmp
dec
or
mov
or
cmp
in
jle
pop
lock
dec
pop
add
ffreep
pop
mov
fdivr
inc
mov
xchg
sub
cmp
adc
and
in
mov
inc
adc
shl
insb
in
mov
in
jmp
push
out
nop
push
fdivs
sbb
pusha
cmpsb
mov
jecxz
ljmp
pop
lods
or
lea
push
cmpsl
sub
mov
mov
test
ficomps
test
jnp
lret
mov
das
icebp
xor
das
pop
sub
push
push
inc
or
cmp
sbb
pop
into
push
push
lock
mov
cmp
loop
mov
inc
and
xor
xor
out
xor
addr16
add
cmp
jle
and
in
aaa
cmc
jmp
ficompl
cmp
outsb
imul
fisttpll
push
sti
dec
ret
lock
aas
add
hlt
shrb
fldt
insl
pop
stos
aas
int
lret
pop
mov
mov
jp
ljmp
fcmovnb
or
jge
sbb
push
dec
stc
mov
cs
dec
inc
adcb
pop
xchg
cs
push
mov
sbb
repnz
das
pushl
mov
imul
dec
pop
subl
clc
inc
stos
insl
push
sub
mov
inc
xor
cmp
inc
scas
add
lods
aam
push
xchg
pop
fistpll
cmp
test
push
sahf
pop
stos
pop
mov
xchg
xor
adc
gs
and
notl
rcrl
adc
mov
mov
andl
repz
cs
push
mov
or
aaa
or
pushf
cld
mov
shlb
aas
dec
rorl
xor
push
mov
xchg
inc
andl
pop
cmp
ljmp
stos
cwtl
mov
xor
xor
fldcw
push
dec
adc
ljmp
lods
cld
loopne
cs
lock
jmp
xlat
cmpsl
cld
add
test
movsl
movaps
rorb
push
or
jmp
iret
or
xchg
cmpsb
scas
mov
shrb
daa
mov
fadds
inc
jno
adc
cmp
and
dec
arpl
ljmp
out
xor
mov
shll
imul
lea
mov
add
mov
ret
pop
std
lcall
add
fs
or
jnp
jg
loopne
jp
inc
aad
adc
shlb
mov
enter
jecxz
clc
xor
xchg
cmp
js
int3
xor
mov
orb
call
in
pusha
pavgw
and
aad
sahf
adc
shrb
add
inc
in
iret
movlps
fwait
mov
andl
push
xchg
pushf
shrl
sti
fnstcw
test
or
lcall
gs
mov
pop
stos
xor
dec
jo
test
insl
shl
add
cld
jne
dec
mov
out
repz
je
adc
ljmp
aam
cmp
pop
sti
sbb
cltd
lea
sbb
loope
cmp
ror
fwait
cmp
inc
mov
push
adc
stc
pop
fcompl
jge
rorb
mov
ljmp
cli
js
outsl
mov
add
bnd
push
sub
jge
lcall
mov
mov
mov
sub
gs
mov
sub
out
mov
addr16
outsl
mov
add
jns
in
imul
pop
loopne
jne
mov
lods
aas
and
xor
stc
mov
nop
fisubs
pop
aas
cmpsb
sti
pop
cmpsl
mov
pusha
mov
xchg
lret
push
rolb
bound
call
in
addr16
mov
and
inc
sar
adc
outsb
ror
mov
pop
dec
push
cs
in
hlt
mov
and
int
scas
pusha
stc
pop
shr
push
and
xchg
dec
stc
push
sysret
sar
cmp
pop
inc
in
pop
lahf
nop
mov
paddd
pop
arpl
stos
jo
pop
sbb
jp
push
xor
sub
incb
sub
fildl
jmp
cli
fsub
in
dec
shll
mov
test
gs
add
push
fiadds
cmpsl
ja
in
outsl
fdivs
cli
xchg
pop
jb
dec
mov
sub
pop
jmp
xchg
es
and
ds
add
push
inc
loop
sbb
xor
push
test
ja
icebp
movsb
fdivs
cmc
daa
shlb
jmp
jno
jge
aaa
add
adc
lds
imul
sbb
inc
faddl
mov
or
dec
clc
pop
repnz
imul
cld
fbld
out
jp
jge
lds
nop
jb
aad
push
in
call
dec
dec
mov
lahf
dec
into
scas
sbb
dec
cmp
std
cmp
push
scas
enter
dec
loop
fwait
jo
adc
push
rdpmc
mov
ss
scas
dec
lods
xchg
shrl
inc
jg
icebp
and
pop
jl
sub
sti
lds
sti
push
paddsw
loopne
xor
das
adc
decb
test
sbb
es
jge
mov
jo
mov
mov
push
sub
call
sub
test
jnp
loopne
rcr
mov
sub
das
fcomip
dec
xchg
or
adc
pop
test
das
stos
inc
pop
and
adc
adc
fidivl
fst
xorb
jmp
sub
lret
subb
ljmp
movl
rolb
mov
sub
sti
or
std
sbb
push
and
mov
loop
into
cmp
movsl
orl
jo
decl
shrl
outsl
push
imul
movsb
xor
in
rclb
jbe
addr16
loope
loope
add
inc
ror
add
xchg
psubq
push
jnp
rol
punpckldq
push
nop
pop
xlat
mov
out
push
stos
pop
imul
mov
aam
dec
nop
cmp
dec
test
mov
and
push
jmp
aad
mov
mov
push
andb
push
mov
jecxz
fdivl
xchg
mov
mov
lds
testl
divl
mov
sub
sti
jecxz
cs
enter
xchg
add
jmp
xor
iret
enter
fsts
shl
pop
jns
scas
inc
dec
push
ret
outsb
fiaddl
mov
iret
sar
cmpsl
sub
add
repz
inc
xor
in
and
pusha
mov
jle
xor
mov
mov
imul
add
std
dec
inc
sub
loope
flds
fisttpll
orb
and
sbb
jg
add
ss
mov
mov
or
les
ds
cs
test
adc
and
cmp
and
mov
add
lret
movb
fsubr
xchg
sub
mov
les
leave
ljmp
loopne
fst
mov
pushf
jg
cmpl
in
add
xchg
mov
sti
bsr
mov
jmp
cmpsb
inc
or
scas
push
lcall
add
push
mov
cmp
fldt
in
xor
or
into
sbb
mov
cmp
push
mov
xchg
hlt
push
icebp
push
shlb
scas
xlat
fisttpll
mov
adc
pop
xchg
stos
jmp
cmp
cmp
sbb
jp
shll
sub
into
aaa
mov
dec
rcr
ja
cmp
add
mov
jl
or
cmp
ds
push
insl
jg
cld
insb
fistl
mov
icebp
into
lods
lea
add
mov
insb
mov
mov
mov
clc
pop
out
fbld
jo
setle
rcrl
mov
xchg
test
xor
icebp
mov
aas
rorb
rol
jmp
clc
xlat
int
cmp
and
negl
xchg
cmp
mov
fildl
arpl
stos
andb
imul
and
bsr
mov
call
xor
push
hlt
add
stos
addr16
push
xor
xor
std
sahf
pop
mov
popa
dec
movsb
xchg
add
fisttpll
add
jl
popa
inc
ficoms
aam
sbb
int3
xlat
xchg
ds
scas
jns
icebp
pop
mov
and
pop
push
adc
adc
cwtl
movsl
test
mov
adc
jne
inc
push
add
adc
mov
outsl
sub
jp
shlb
mov
rcl
xchg
add
fstpt
add
js
jg
pusha
lret
test
dec
xorb
sub
sbb
in
mov
mov
jno
ret
test
jle
outsb
inc
aas
push
mov
push
jge
dec
sbb
mov
adc
pop
jnp
outsb
jl
cmp
push
sbb
mov
cld
fdivrl
dec
push
in
push
jmp
mov
sub
mov
jmp
mov
jge
sbb
aas
sbb
sub
andl
xchg
imul
imul
or
ret
sbb
adc
push
cmp
loope
das
fnstsw
clc
jbe
std
stos
aad
cld
loope
icebp
sbb
pop
fxch
addr16
jno
stc
add
out
lods
imul
cmp
dec
daa
mov
jo
mov
jne
addb
call
xchg
scas
sub
mov
mov
mov
xchg
shr
cmc
mov
mov
movsl
std
data16
pop
nop
jnp
mov
outsb
out
fs
add
shr
mov
hlt
test
dec
shrb
out
mov
lods
mov
dec
loope
daa
fs
and
pop
sub
mov
lret
aas
mov
data16
mov
in
sbb
xlat
inc
cmc
push
aaa
ret
loope
movsl
outsl
lret
jns
and
cs
in
mul
icebp
movsb
pusha
xlat
or
sbb
or
daa
scas
cld
xor
imulb
xor
aaa
xchg
fstpt
dec
dec
sti
shlb
xor
movsb
sub
push
sub
add
hlt
lcall
mov
lret
fistpl
cmp
in
cmp
imul
clc
lds
push
stc
fcomps
call
mov
xor
data16
jne
cwtl
out
cmc
fcoms
xchg
jle
repz
loope
xchg
xchg
mov
stos
pop
loopne
jge
and
repnz
sbb
les
testl
arpl
filds
out
dec
repz
dec
es
test
scas
xchg
repz
mov
insb
rorb
lret
ret
repnz
or
mov
call
inc
in
addl
cmc
in
mov
andl
and
sub
jb
push
out
adc
xor
inc
or
jae
test
fmull
jecxz
mov
or
scas
clc
mov
mov
sbb
xchg
jl
mov
jb
push
pop
adc
popa
imul
movsl
bound
repz
inc
call
in
shrl
pushf
in
pushf
dec
sbb
mov
dec
dec
cmpsb
fsts
xor
sub
sbb
movsl
and
cs
mov
add
xchg
xorl
dec
jle
scas
shlb
cmc
fdiv
idiv
fwait
jne
loope
sbb
mov
cmp
mov
test
outsb
arpl
fldl
xchg
pop
or
int
stos
movsl
popf
test
ds
jp
inc
pushf
fisubl
jl
mov
stc
js
cmp
cli
sbb
fsubp
xchg
and
jb
mov
mov
xor
adc
mov
xor
xorl
add
sub
shlb
movsb
mov
pop
pop
push
movsl
adc
cld
test
adc
mov
mov
push
pop
notl
add
xor
lds
rcl
fidivrs
cltd
xchg
mov
cmp
fs
sbb
mov
push
jae
jne
push
ret
adc
adc
aaa
adc
cmp
pop
cmp
mov
sub
orl
jle
rcr
push
cli
cmp
jo
mov
stc
add
and
and
mov
inc
data16
insb
xor
dec
out
inc
xor
jle
inc
dec
xchg
fildl
icebp
data16
pop
enter
int3
js
mov
push
sbb
out
mov
and
cmp
gs
notl
push
pop
mov
push
mov
stos
push
lcall
dec
scas
or
not
test
or
rorl
repz
mov
dec
xor
aam
jbe
mov
mov
push
lret
imul
lret
xchg
sbb
mov
mov
sub
jge
incb
fdivrl
xor
lret
push
jmp
into
dec
cmc
lret
pop
hlt
cmp
pushf
mov
inc
xchg
loop
imul
sub
mov
ret
enter
pop
lods
in
cmp
jo
gs
jp
or
dec
stos
sbb
push
jnp
out
fyl2xp1
call
mov
mov
jmp
add
jmp
dec
sbbl
repz
aad
bound
cmp
ret
mov
mov
bound
adc
inc
cltd
ret
add
daa
ds
shl
outsl
jl
rclb
in
pop
pop
testb
cmp
jge
pop
dec
inc
nop
push
add
pop
or
pushf
fnsave
lahf
mov
adc
aas
lods
stc
mov
push
inc
xchg
jo
out
scas
rcr
mov
int3
test
test
xor
ret
or
lods
sti
lods
pop
fs
sarl
jmp
enter
mov
dec
cmpsb
lea
imulb
sbb
dec
aad
jae
sarl
inc
pop
neg
jae
dec
imul
push
pop
sub
sti
jb
rorl
sub
mov
loop
push
lret
stos
inc
mov
rcl
mov
mov
mov
hlt
jg
inc
cli
mov
mov
inc
lds
lea
mov
test
add
shrb
mov
shl
out
addl
pop
rcrl
loope
mov
cmpb
jge
pop
das
pop
sub
sbb
ja
xchg
pop
lock
sub
fwait
dec
ficoml
pop
std
sbb
ja
sbb
bound
or
daa
jb
shll
cmp
ret
jns
movsb
pop
std
and
repnz
jg
idivb
into
mov
cs
test
and
sub
in
xor
add
mov
xchg
outsb
mov
xchg
scas
mov
rcll
cmp
hlt
lret
gs
xor
mov
xor
mov
fnstcw
mov
std
dec
cld
pop
arpl
lcall
mov
xor
mov
stos
mov
call
sub
call
shll
enter
imul
mov
jp
adc
in
outsb
sti
inc
stc
imul
shll
xchg
shll
jecxz
repnz
dec
in
pop
sub
clc
imul
xchg
cmpsb
sub
js
adc
cli
les
cmp
add
test
mov
or
jl
jne
pop
pop
pop
rcrl
ret
cmp
pop
rcll
psubb
cs
ja
stos
shl
shlb
cltd
test
jg
movsb
dec
in
nop
in
inc
dec
test
adc
sub
imul
in
and
jp
icebp
pop
cmpsl
jmp
cmp
sti
stos
je
repz
in
rcrl
dec
lds
lea
rorl
cmp
pminub
mov
scas
dec
pop
mov
lahf
in
push
cltd
repz
push
dec
jle
stos
cwtl
int3
add
cld
xlat
push
sub
mov
mov
dec
lret
repnz
leave
pop
test
shrb
add
jbe
jl
cli
sahf
mov
and
insb
xor
pop
icebp
inc
in
push
pop
cmpsb
sub
scas
pushf
fcomps
rol
mov
xchg
es
jge
jo
add
rolb
jo
leave
popa
test
mov
xchg
sahf
sub
andb
rep
mov
xchg
loope
jnp
mov
mov
out
inc
mov
dec
jne
jl
lods
sub
out
lods
out
iret
dec
clc
or
lahf
add
push
pop
scas
fsubl
scas
sub
xlat
dec
mov
dec
sbb
imul
insl
outsb
into
lods
adc
mov
loopne
cmp
cli
gs
fwait
pop
pop
jecxz
dec
sbb
push
mov
loop
fmul
adc
fdivs
iret
in
cmp
pusha
les
pop
inc
xchg
mov
push
mov
lahf
loope
adc
stos
mov
push
fists
rcr
jb
cwtl
mov
dec
push
sbb
pop
sbb
fistps
and
xchg
repnz
sub
aaa
jne
rcr
jge
mov
mov
and
jno
idiv
push
push
mov
lahf
inc
aad
pop
sbb
movsl
adc
mov
xchg
or
push
out
xlat
test
lods
stc
pushf
inc
fnsave
movsl
mov
ror
adc
adc
jecxz
shll
stos
adc
or
jo
sbb
xchg
jne
fs
gs
push
fisttpll
shrb
in
adc
xchg
inc
xchg
repnz
pop
mov
sbb
outsl
out
or
pop
sbb
cmp
inc
fisubs
cmpsl
and
in
xchg
es
cld
jp
jo
adc
or
cmpsl
add
fiadds
mov
pop
sub
cmpsb
mov
cmp
sub
adc
je
mov
in
xorl
imul
xchg
mov
test
push
mov
push
es
in
lcall
adc
add
addb
lds
test
mov
stos
sti
sahf
in
and
mov
in
adc
sbb
fisubl
mov
movsl
sub
data16
or
mov
std
rep
inc
jbe
push
mov
aaa
push
cwtl
pop
je
inc
and
dec
ja
mov
push
rcrb
inc
aad
xor
push
sub
xorb
or
aad
add
loop
mov
lock
mov
and
loope
in
sub
xchg
pop
scas
ds
dec
ret
mov
cmp
cmp
into
testw
push
push
out
fwait
int3
xchg
aas
pop
cmp
cmp
popa
mov
and
lods
in
inc
jnp
inc
hlt
sub
fisubs
out
movsb
push
js
adc
movsb
popa
xchg
xchg
mov
hlt
pop
jg
jge
push
fbld
xchg
cmpl
xlat
cld
pop
dec
lcall
cmp
shrb
pop
in
popf
dec
mov
lods
mov
gs
mov
xor
aad
lret
adc
cli
inc
outsb
mov
inc
jmp
mov
test
pop
dec
int3
or
out
jae
push
hlt
test
sbb
mov
leave
inc
jno
jp
jecxz
jo
mov
push
adc
dec
xor
mov
mov
repz
fst
mov
icebp
sti
insb
lods
inc
out
xor
lds
sti
repz
push
sub
sub
dec
pushf
pop
xor
inc
pop
inc
out
mov
pop
pop
loope
out
and
fsts
mov
out
pusha
jbe
shll
cli
xchg
xchg
push
andl
outsl
ret
jae
scas
stos
popf
iret
add
ret
enter
dec
fistpl
jecxz
mov
xchg
xchg
xchg
ficoms
das
or
jbe
aam
cmpsl
dec
cmpsb
test
mov
or
add
inc
cmp
xchg
or
dec
inc
mov
xchg
mov
adc
insl
cmp
test
ret
push
add
jnp
mov
hlt
cmp
inc
loop
insl
mov
cmp
adc
scas
pop
jg
mov
mov
push
cmp
cld
bound
mov
loope
pop
mov
clc
mov
pop
jmp
sti
xchg
outsb
das
lock
loope
cmpsl
and
fdivrl
pushf
pusha
sbb
pop
lret
cmc
pop
fstpl
pop
xchg
push
into
add
test
idivl
push
and
inc
dec
mov
mov
sbb
fsubl
or
xorb
cmp
leave
push
mov
adc
inc
or
and
test
in
mov
pusha
shrb
loope
lea
push
inc
sbb
subb
ret
jae
and
pop
mov
fxch
add
paddusb
mov
add
jmp
push
orl
repz
mov
inc
or
nop
out
shlb
pop
mov
mov
pop
jnp
xor
jns
pop
test
pop
and
push
xchg
popa
or
jne
mov
out
jns
adc
mov
jnp
enter
lret
xor
cmp
js
mov
inc
pop
jnp
loope
outsl
jno
xor
mov
lods
jmp
ja
sbb
hlt
cmpl
ror
adc
xor
dec
fwait
pop
loop
adc
movsb
xor
mov
cmp
cli
cld
pop
lds
and
in
sub
nop
adc
xor
imulb
ss
cwtl
pop
mov
aad
shr
into
inc
xchg
cs
xor
imul
mov
std
sub
adc
outsl
push
enter
pop
mov
xlat
jmp
stc
adc
push
push
repz
cmc
lret
imul
and
filds
inc
xchg
sub
jmp
add
and
sbb
sahf
push
bound
sub
das
pop
sbb
stos
mov
testb
or
pop
out
pop
jb
out
test
or
sahf
sub
clc
ljmp
jno
mov
dec
push
jg
scas
jo
fsubrl
jge
mov
or
sub
popf
popa
test
sbb
xor
sti
mov
fwait
ss
mov
xchg
jne
pop
pop
dec
cmp
aaa
aad
adc
js
orb
lods
jnp
sub
and
sbb
fcmovb
cmp
push
mov
cmp
vorps
add
mov
xor
cld
jno
cmpsb
cmpsb
ja
jns
add
into
les
das
mov
in
push
mov
and
ss
imul
sub
sub
cmp
cmp
lahf
and
pop
mov
and
test
mov
push
test
cwtl
icebp
lahf
mov
xchg
jno
and
sub
out
cmovbe
fwait
testb
push
push
xor
gs
mov
push
aaa
mov
jns
pop
push
xor
mov
rclb
xorb
sub
jnp
sets
mov
inc
cmp
inc
dec
outsl
pop
aad
scas
fs
xor
xor
fsubr
call
movswl
cmp
lods
inc
xlat
out
sti
aas
fcomps
jns
mov
jle
scas
test
loop
xchg
jp
pop
jo
inc
push
push
fwait
orl
fs
jb
jns
cmp
ja
cs
fldt
in
adcl
jno
fcmovu
cwtl
lods
dec
jle
pop
xor
enter
out
icebp
fdivr
dec
dec
mov
xor
pushf
or
data16
xor
repnz
push
mov
sbb
and
pop
rcr
out
aad
call
mov
push
or
test
js
xor
xor
insb
lea
pop
mov
lock
mov
xchg
out
jmp
cmp
xor
mov
lds
xlat
pop
fwait
mov
mov
stc
in
enter
jne
cld
jns
sub
stos
cltd
sbb
fmuls
dec
scas
insl
xchg
cmc
dec
test
xor
pop
sbbl
icebp
hlt
push
jle
test
int3
out
add
dec
push
cmc
popa
divl
mov
cwtl
pop
les
xchg
mov
xchg
mov
mov
jle
jle
push
cld
mov
std
cld
mov
adc
sbb
rolb
fisubl
out
or
fwait
mov
inc
js
or
sub
lret
test
jno
mov
sub
mov
xchg
mov
out
clc
pop
icebp
mov
ss
inc
cmp
mov
push
mov
arpl
push
scas
out
int3
ret
stos
aam
popf
inc
adc
stos
mov
divb
cmp
lods
mov
push
inc
jno
loopne
and
ljmp
loop
gs
in
add
push
jnp
and
pusha
xchg
push
fisubrs
sub
lds
add
daa
in
mov
push
loop
cmc
and
int
or
cmp
mov
dec
out
insb
jmp
mov
cwtl
ficomps
push
ss
push
inc
mov
pop
mov
mov
and
in
nop
adc
cmp
pop
cmp
jbe
pop
xchg
jno
aaa
jno
and
dec
int
in
shll
push
mov
xlat
fs
out
movsl
xor
mov
jbe
dec
or
push
cltd
push
push
dec
loop
stc
sub
xor
jbe
and
xor
scas
xor
lcall
out
mov
mov
fsub
clc
hlt
aam
cmp
fldt
mov
inc
adc
dec
mov
leave
add
test
xor
add
js
sbb
int3
jb,pt
fwait
lods
xchg
mov
fldl
xor
stos
sub
mov
inc
or
andl
jl
push
in
negl
mov
mov
push
pop
pop
cmp
cmp
out
ret
xchg
fsubs
lock
inc
icebp
pushf
sub
sarb
insb
outsb
retw
dec
pop
and
popf
dec
sub
fidivrs
mov
data16
xchg
int3
sub
aam
loopne
fistl
cmp
push
xlat
add
popf
add
mov
sub
xrelease
xchg
jmp
data16
fwait
aam
xchg
sub
inc
xor
out
out
mov
add
mov
movsb
mov
sbb
mov
sbb
sub
xorl
add
xchg
sbb
ss
jp
sbb
cld
test
fwait
in
push
jecxz
outsl
rol
arpl
rclb
int3
repz
movsb
and
lods
sbb
pop
js
and
je
xchg
jl
rorb
ja
jns
dec
and
mov
leave
ds
xchg
inc
cvtps2pd
cmpsl
bound
popa
cmpsb
sub
jmp
add
jbe
mov
mov
ljmp
push
mov
push
cmp
in
dec
les
test
xchg
jl
sub
out
ja
mov
jg
test
pop
pop
fmul
mov
push
and
ss
jo
mov
pushf
aad
jl
ud2
call
fisubrl
jo
cmc
lret
nop
push
jg
cld
cmp
bound
sub
insb
dec
sbb
ds
rorb
insb
ja
and
push
in
inc
sarl
dec
imul
cmp
jmp
pop
out
sarb
xchg
dec
ja
lods
sbb
imul
add
lds
mov
cli
jle
cld
mov
stos
adc
les
push
cmp
mov
or
adc
lret
mov
fcoms
add
inc
ja
xchg
int
sub
xchg
mov
loope
push
inc
lret
shl
int3
xchg
push
ljmp
push
ljmp
cld
sub
movsl
jb
rcr
sahf
fisubs
adcl
adc
cld
lods
fs
pop
pop
pop
fisubs
inc
jns
ljmp
and
mov
cld
lods
mov
movsb
insl
sub
in
pop
fiadds
cmc
sbb
outsb
mov
lods
push
arpl
out
pop
aas
and
adc
sub
cmpb
popf
jns
ret
cmpsl
xchg
push
rol
aas
fstpl
jo
xor
mov
pushf
call
out
mov
testl
scas
jl
jb
adc
sbb
insl
mov
lds
mov
xor
bound
mov
mov
lods
jne
gs
lcall
lahf
sbb
pop
test
clc
testl
and
fwait
add
stos
sub
jecxz
sbb
jne
nop
mov
cltd
push
movsl
jecxz
mov
pop
std
ja
xor
or
jp
add
stos
mov
clc
push
loopne
or
dec
jne
add
ret
dec
fisubs
in
jae
lahf
jns
mov
pop
ret
loop
andl
pop
xor
icebp
mov
sahf
jbe
mov
mov
arpl
outsl
dec
xor
xor
stos
inc
mov
and
dec
adc
out
test
andb
mov
fcomps
jp
dec
pop
inc
in
push
imul
call
lahf
mov
mov
sbb
cmp
push
pop
shl
push
pushf
jp
cmp
inc
xorb
mov
mov
cld
cmp
les
imul
out
push
or
and
orl
lcall
push
cwtl
cmp
jo
xchg
scas
mov
fwait
imul
cmp
test
mov
pop
add
lret
loopne
icebp
std
or
loopne
cmpsl
lret
sbb
pop
or
inc
seta
sub
push
mov
mov
mov
out
int
fcomps
pop
push
fisubrs
cmp
call
add
dec
insb
cmp
jno
xchg
int
fiadds
pop
xchg
mov
mov
xor
jmp
cmc
insl
pushf
xchg
sbb
pop
cmpsl
mov
jnp
jae
xchg
mov
cmp
xchg
and
repz
jg
icebp
mov
or
jmp
xchg
in
xchg
inc
pop
jecxz
mov
cs
xchg
and
fldenv
pop
cmpsb
std
mov
jns
mov
and
out
subb
mul
adc
sub
sub
das
jle
dec
dec
repnz
gs
or
lea
imul
push
movsl
call
and
cld
lahf
pop
add
pushf
sbb
jecxz
pop
mov
jg
mov
fistpl
jae
call
dec
xor
ret
andl
push
es
inc
icebp
dec
test
mov
in
pop
insl
mov
mov
adc
push
mov
pop
sub
pop
pop
jp
fisubrs
scas
mov
and
outsl
pop
xchg
jg
pushf
dec
fsts
sbb
jge
pop
mov
out
add
shr
jnp
mov
xor
test
xchg
pushf
aad
xchg
ficomps
test
stos
mov
dec
mov
xchg
mov
dec
and
lods
js
pop
and
fadds
mov
fdivrl
pinsrw
ds
lcall
xchg
mov
enter
xchg
lret
inc
shlb
sbb
mov
dec
sahf
or
and
sbb
add
daa
in
jo
roll
vaddss
roll
clc
sahf
js
inc
jbe
xor
sbb
inc
rol
fldcw
bound
mov
dec
test
cmp
fs
les
jo
push
push
pusha
xchg
sbb
stc
in
cld
xchg
push
out
test
jae
mulb
lds
dec
jbe
movsb
or
lcall
inc
mov
imul
insb
ret
popa
adc
lods
lods
rcrb
jb
sbb
sbb
xchg
adc
cli
hlt
dec
xchg
out
stos
sbb
nop
js
and
and
cmc
cltd
ret
add
mov
mov
in
je
rolb
cwtl
pop
out
cld
jbe,pn
and
push
push
es
je
add
mov
mov
pushf
in
xor
mov
popf
xchg
mov
lahf
sub
adc
push
mov
cmpsb
aaa
jmp
sbb
or
les
lea
insb
pop
je
cmp
pop
fucomi
roll
into
stos
jbe
cltd
insb
dec
lcall
mov
rorl
lahf
pop
mov
jno
mov
rcr
inc
xchg
mov
or
mov
fistpl
test
mov
add
add
xchg
fwait
mov
cmpsl
inc
shl
inc
fstp
sbb
test
or
daa
push
fisttpll
aaa
dec
cmovge
enter
and
mov
jns
push
out
and
cltd
adcl
movsb
iret
cld
loope
call
mov
cmpsb
push
fdivrl
mov
popa
add
jne
test
cmpsl
enter
pushf
in
mov
ret
outsl
out
sub
adc
jle
shll
data16
and
fstp
pop
imul
xor
ss
rcll
mov
or
mov
and
mov
dec
dec
test
cmp
push
roll
inc
mov
pop
sbb
fsubs
cld
test
out
aam
pop
dec
fstps
jecxz
outsb
outsl
movsl
fld1
mov
push
jno
dec
stos
sahf
mov
push
or
xorb
cmp
jae
std
movsl
xor
xchg
or
aad
mov
push
nop
pop
addr16
push
fcmovb
inc
pop
rol
xchg
inc
cwtl
and
fcomps
inc
push
ss
inc
aam
push
jne
lods
cmpsl
in
js
xor
sbb
or
dec
sbb
hlt
pusha
jl
das
jmp
js
cmpsb
and
outsl
in
and
aaa
mov
or
inc
pop
dec
jbe
or
iret
call
sub
pop
out
es
ja
push
pop
pop
sbb
mov
cwtl
insl
adc
int
sbb
sbb
xor
push
js
in
psllq
iret
outsb
or
jbe
jp
sub
push
lret
sub
adc
fmull
push
pop
test
pusha
sbb
mov
ja
dec
adc
movsl
loope
ret
xor
fxch
xchg
and
push
xor
gs
jle
ror
dec
stc
jecxz
mov
enter
loopne
pusha
stos
and
sub
cmp
mov
lret
loop
sbb
enter
pushf
fbld
lahf
jb
rcll
jmp
inc
lcall
xchg
ljmp
inc
es
push
pop
lds
push
adc
sbb
andb
adc
loopne
mov
aas
test
add
xchg
out
sub
aas
jge
inc
aas
dec
push
push
mov
dec
js
sbb
movsb
lods
bound
popf
jbe
inc
xor
lret
fucom
push
add
mov
sbbl
and
outsl
out
adc
xor
cli
ret
xor
xchg
addb
sbb
inc
cmp
sbb
mov
cmp
addr16
popf
test
push
jmp
push
rcll
sub
xor
cltd
sub
pop
or
mov
adc
call
out
test
or
clc
ret
fsave
mov
or
stos
pop
mov
and
adc
sahf
jl
rcrb
jbe
xor
lods
sbb
cmc
in
sbb
cmp
push
pop
or
push
loop
dec
push
jnp
jo
mov
pop
lcall
xor
gs
fstp
dec
sub
add
adc
mov
inc
jne
popa
and
ror
mov
icebp
nop
dec
in
inc
add
fcoms
js
xor
aaa
adc
cmp
imul
and
je
fucomip
call
cmp
ret
add
int3
nop
cmpsb
and
dec
mulb
das
scas
mov
jo
fcomps
cli
push
pushf
jno
mov
out
push
pusha
shrb
ljmp
mov
add
fldt
dec
fwait
and
mov
popf
fcmovne
loop
add
mov
xor
ret
dec
popf
hlt
and
test
adc
adc
push
int3
imul
pusha
sbb
call
pop
addr16
daa
pop
pop
sub
dec
das
inc
lods
clc
es
mov
fisubs
mov
imul
cmp
xchg
xchg
popa
ljmp
scas
loopne
ret
xor
adc
and
cltd
adc
pop
jno
mov
cmp
test
lds
mov
stos
xor
cmp
lock
dec
jno
frstor
mov
pushf
test
outsl
push
cwtl
inc
cld
mov
mov
cs
lods
mov
sti
test
mov
inc
mov
add
popa
jns
stos
and
and
lea
mov
mov
roll
adc
leave
add
sub
pop
ja
jp
jg
sbb
cmp
jae
add
sbb
and
cmp
fstps
add
sub
inc
jo
dec
fisubrl
fisttps
sub
mov
sarb
std
sub
addr16
out
das
jp
dec
push
pop
cwtl
lahf
loop
daa
out
sarl
pop
ret
inc
push
insb
aaa
adc
addps
sbb
sbb
adc
cmpsl
mov
rcrb
push
mov
ss
ss
mov
in
xor
iret
lea
vmptrld
jbe
andb
rclw
rcrl
jg
dec
xor
cltd
mov
inc
adc
add
xchg
mov
icebp
pop
mov
stos
insl
push
jmp
shll
lds
das
mov
clc
inc
pop
sub
lea
ret
sbb
or
addl
mov
add
adc
add
adc
ss
and
cld
pushf
je
mov
orl
lock
pop
not
roll
aam
out
push
sub
movsb
cmpsb
popf
leave
pushf
cmc
push
add
aas
mov
inc
lods
xchg
xchg
movsl
fwait
mov
sbb
jp
and
adc
or
xor
test
js
mov
hlt
out
pop
mov
xor
paddb
or
lds
mov
dec
int3
imul
in
shrb
shlb
xchg
popa
mov
test
sub
insl
push
xchg
mov
sbb
sub
jle
jbe
aam
mov
mov
push
sub
fstpt
pusha
out
and
xor
shl
cmp
fistpll
or
test
js
shr
lret
jge
xor
xchg
cmpsl
pop
gs
adcb
and
sbb
bound
mov
fcmovbe
scas
lods
ret
dec
dec
int3
js
pop
fistpll
and
sub
popa
stc
arpl
push
jb
lods
adc
shll
push
mov
lret
ret
cmp
cld
int3
jecxz
adc
in
mov
and
lods
jp
ss
in
sub
shrb
push
sub
jae
orb
sbbb
inc
sub
add
sbb
and
or
shl
rcr
push
es
in
lock
dec
push
cmp
cmpsb
dec
cmpsb
sbb
or
outsl
mov
rclb
enter
jnp
hlt
push
test
jno
insb
cmp
sti
bound
and
mov
pushf
int
push
lea
jle
shlb
cwtl
int3
dec
repz
cld
dec
and
inc
adc
in
jge
pop
mov
lret
adc
hlt
cli
push
xor
xchg
add
mov
roll
xor
loopne
js
dec
dec
flds
cmpsb
leave
pop
lods
lock
or
ja
mov
and
xor
mov
lret
pop
lock
adc
out
mov
in
push
mov
fisubrs
jmp
repnz
frstor
sbb
pop
and
test
adc
sub
cmp
mov
and
out
or
mov
and
cmpsl
fs
jbe
mov
or
mov
push
stc
mov
adc
das
nop
xor
jge
ret
test
sub
sub
push
xchg
push
adc
and
xchg
rorb
lock
mov
out
arpl
outsb
mov
push
fwait
dec
in
xchg
mov
add
sahf
xor
jmp
push
movsl
sbb
or
lret
sub
mov
mov
mov
addr16
rorb
testl
testb
cmp
addl
imul
pop
sbb
scas
inc
lahf
xchg
stc
xor
aas
inc
int3
pop
je
lea
xchg
inc
jo
fists
or
xor
in
pop
mov
cmc
cwtl
aad
jl
push
js
insl
stos
aas
pusha
lock
stos
mov
inc
inc
fsubs
mov
push
add
aam
mov
sub
dec
dec
repnz
insb
jecxz
add
dec
and
inc
and
push
adc
jge
xor
ret
fimuls
pop
xchg
jnp
mov
jns
xor
jl
pusha
inc
clc
or
rcrb
xlat
mov
and
sbb
and
neg
movsl
dec
and
push
inc
incl
faddl
jecxz,pn
xor
or
das
adc
insl
sbb
pop
rcrb
mov
xlat
fsub
sbb
sbb
fsubrl
popa
andl
add
test
aad
jp
cltd
insl
xlat
clc
xchg
out
sbb
fwait
mov
mov
in
js
lret
pop
jg
fucomi
gs
scas
mov
inc
push
dec
mov
cmp
dec
mov
fsubp
xor
movsb
mov
mov
lea
sbbb
pop
mov
push
ret
repz
and
push
scas
clc
push
and
jp
mull
add
inc
imul
sub
imul
test
leave
mov
andl
sbb
add
in
sbb
inc
and
pushf
mov
roll
xlat
repz
push
lds
sbb
lcall
sbb
clc
push
xchg
stc
movsb
imul
or
lret
xchg
lcall
fistl
test
out
add
sub
enter
dec
push
sarb
vsubss
das
sti
ljmp
les
sti
adc
enter
insl
cmp
cmp
cmc
cltd
xlat
ljmp
or
xchg
into
sahf
sbb
jmp
mov
adc
mov
pushf
jecxz
cli
mov
push
lods
sar
jecxz
adc
pop
lds
mov
loop
jle
lahf
dec
int3
es
mov
jns
fisttpll
lods
mov
int
or
mov
add
sbb
xlat
sub
sarb
inc
fdivrl
ret
pop
xchg
pusha
sbb
xchg
loope
xorl
mov
mov
dec
sbb
adc
and
xor
dec
inc
popf
ret
cmpsb
inc
and
insl
cmpsb
movsb
and
cmp
inc
mov
or
cmp
fstl
pusha
and
dec
push
mov
jge
mov
scas
sbb
xchg
adc
or
fildll
inc
xchg
jmp
ds
push
cmp
repz
push
jmp
ret
push
testl
clc
push
out
ret
sub
dec
push
adc
pop
jmp
add
inc
imul
lea
push
xchg
hlt
sbb
ficompl
repnz
stos
mov
hlt
notl
aaa
jp
insb
fstps
fsubr
sbb
adc
add
insb
jmp
push
pop
sub
sti
jp
in
js
mov
roll
setnp
sub
sub
les
outsl
and
pop
call
dec
dec
sub
xchg
call
mov
xchg
ret
clc
js
repnz
dec
xchg
mov
adc
popf
lods
mov
push
lds
sub
loopne
les
ret
sbb
push
dec
loop
mov
fadds
xchg
xlat
stos
je
or
repz
xor
pop
jo
xor
mov
sbb
popa
inc
je
cmp
push
push
inc
aad
xchg
fisttps
call
dec
fnstsw
movsl
insl
mov
cld
pop
and
cltd
xchg
lods
sbb
hlt
movsb
xchg
mov
lahf
pop
int3
dec
fwait
int
cmpsb
mov
cs
das
loop
out
clc
xchg
cmpsb
cmp
mov
and
in
fdivrs
in
sub
mov
test
dec
add
and
jp
loope
mov
jmp
scas
or
movsl
in
loope
and
cld
lods
dec
xor
inc
xor
sub
add
cmp
clc
fcomp
dec
or
mov
or
cltd
bound
adc
std
rcrb
nop
rorb
mov
jno
bound
test
enter
insl
xchg
inc
scas
daa
out
push
lahf
outsb
mov
lods
jne
scas
xchg
cmpsl
mov
lods
jb
lea
jbe
jnp
in
outsl
xor
out
ret
outsb
fdivr
push
out
mov
fnstcw
das
pop
xchg
cmpsl
call
cmp
cmpb
in
inc
stos
pop
lds
scas
fistpl
and
sbb
add
lret
std
mov
lcall
push
ret
mov
es
pusha
add
lahf
fsubrp
aas
dec
pop
aas
call
movsb
movsl
mov
ds
mov
xor
push
dec
loop
shr
jle
inc
fwait
push
andl
inc
jg
jmp
pop
jb
into
jae
fucomp
in
test
mov
cmp
cmp
into
sbb
mov
push
ror
sub
ret
daa
and
pop
lods
xchg
outsl
dec
arpl
outsl
nop
out
imul
mov
jae
sahf
push
cmp
mov
ljmpw
jmp
and
mov
add
mov
call
mov
xchg
mov
cmp
movsl
mov
jp
test
mov
or
cmp
adc
movsb
push
jb
pop
cli
xchg
pop
mov
sarl
pop
inc
mov
dec
cld
mov
fmuls
cmp
dec
adc
popf
fadds
mov
jecxz
cmp
push
lret
mov
mov
icebp
and
aad
das
inc
add
ljmp
sti
je
outsb
xor
push
ljmp
andl
push
xchg
lret
xchg
test
xchg
inc
and
enter
sbb
je
push
enter
int3
and
or
cmp
pop
mov
fwait
rcrb
sbb
lock
scas
sbb
mov
icebp
sahf
mov
pop
cmpsl
repz
pop
cmp
sbbb
mov
lock
test
divps
daa
ficoml
mov
lcall
subb
sbb
int
inc
cmp
xlat
jns
dec
insb
movsl
lods
pop
xorb
xor
pop
mov
stc
call
roll
and
cmpsb
pop
sbbl
push
cmp
mov
stos
nop
or
xor
jae
outsb
hlt
mov
pop
ds
leave
sti
imull
or
mov
jge
inc
or
inc
movsl
and
inc
dec
xchg
ficoms
xchg
sub
movl
clc
frstor
popa
lret
mov
xor
adc
lcall
std
mov
fidivs
scas
cmp
fwait
mov
cmp
enter
jo
xchg
inc
lcall
lcall
jbe
mov
or
sar
fwait
cmp
insl
pop
aam
cld
gs
mov
mov
or
add
and
leave
fsubrl
addr16
fimuls
push
mov
in
push
push
push
clc
or
push
mov
ret
add
sub
cmpsb
in
inc
insb
ret
sti
mov
ret
lds
and
jmp
sub
pushf
push
or
pushf
add
push
lods
scas
and
cwtl
ljmp
ret
stos
insb
mov
aad
sub
loope
arpl
mov
lret
imul
pop
pusha
std
adc
div
dec
dec
sarl
lods
and
ror
cli
lods
or
fistps
mov
data16
sbb
insb
out
xor
lcall
mov
fnstcw
sbb
mov
fsubl
bound
lods
andb
imul
or
jmp
adc
sub
ret
push
cmp
fnstcw
pop
es
icebp
xchg
arpl
enter
rolb
mov
xchg
inc
add
loope
bound
inc
xor
mov
lret
mull
cwtl
jp
out
xchg
das
or
xor
in
dec
dec
add
fbld
jo
loopne
adc
cmpsb
xchg
xor
or
xor
mov
mov
jmp
gs
add
cmpb
popf
cmp
inc
out
mov
lret
mov
mov
popf
ffree
std
jle
testl
das
ss
popl
fcomi
cwtl
xchg
cmp
ja
loopne
mov
aaa
cs
sbb
inc
sbb
or
add
ljmp
mov
cltd
outsb
mov
in
cwtl
outsb
rcrl
aam
movsb
add
sarl
jo
mov
outsb
push
inc
subl
mov
lds
cmp
xor
adc
lds
jl
out
sbb
cmpsb
mov
mov
lret
mov
bound
cld
stos
push
psllw
add
icebp
pop
cmp
mov
fs
xchg
mov
inc
insb
lds
mov
cmp
jo
xchg
jnp
push
clc
aam
pushf
roll
add
andl
push
div
sahf
mov
fstl
sub
sub
mov
push
imul
adcb
jle
testl
push
inc
sar
repz
sub
xchg
jmp
imul
push
cmp
adc
pop
enter
inc
pop
rol
push
stc
and
scas
mov
sbb
bound
lds
push
icebp
jno
popf
sbb
loop
into
hlt
cld
movsb
mov
out
sub
push
fs
adc
xor
cltd
mov
push
jmp
shl
popf
push
or
adc
ret
jo
inc
icebp
or
movsb
in
in
das
mov
mov
jle
movsl
sahf
incb
sbb
jg
dec
cmp
mov
pop
jne
gs
sbb
cmc
xchg
outsl
repnz
xor
addr16
mov
call
test
leave
cwtl
jne
mov
pop
jne
dec
loopne
dec
iret
fldt
pop
xchg
repnz
out
out
mov
test
incl
cwtl
enter
repz
ret
mov
dec
sub
push
mov
out
iret
push
lret
mov
xchg
mov
cmpsl
popf
inc
add
repnz
dec
fucomi
out
jo
je
xor
daa
nopl
and
adc
addr16
mov
jmp
push
cmp
addr16
push
jl
jbe
andb
sbbl
mov
neg
cmc
pop
jo
lods
or
or
and
mov
lea
hlt
push
xchg
jmp
mov
sbb
push
mov
lea
popf
mov
pop
jns
mov
popf
nop
ret
imul
pop
and
loope
out
xor
sbb
cld
sbb
aas
mov
addb
or
incb
mov
insl
pop
idivb
das
ret
into
jo
adc
xor
sbbb
inc
out
loope
jp
das
mov
pop
je
jnp
mov
sbb
sub
xor
negl
push
js
adc
xor
test
xor
adc
jmp
pop
shrl
out
jl
pop
cmp
mov
ja
call
push
in
or
jge
add
mov
sub
push
push
push
cmpb
fsub
xchg
ret
pop
ja
sub
mov
cld
adc
push
push
cmp
daa
mov
gs
cmp
dec
bound
loop
sub
sub
jmp
out
add
cltd
mov
rorl
push
xlat
stos
jg
and
push
in
and
inc
cmp
outsl
ds
or
jns
dec
rcll
andl
adc
and
xor
mov
dec
cmp
out
idivb
xchg
outsb
test
lock
push
inc
dec
jle
minps
movsb
nop
and
cmc
popa
enter
push
xchg
lods
push
mov
jmp
scas
lods
fst
rclb
push
jle
cmc
out
pop
push
ja
movsl
scas
push
call
sub
or
and
push
mov
fsubr
add
push
pop
jae
add
mov
cmc
xor
int3
mov
pushf
jbe
push
jnp
jmp
jne
add
enter
jmp
jb
jmp
mov
dec
pop
into
sti
lret
sbb
in
lcall
pusha
inc
into
int3
gs
or
xor
xchg
dec
hlt
mov
clc
test
in
push
scas
add
mov
xor
stc
inc
xor
int3
ds
pop
repnz
xchg
rorb
int
test
inc
out
xchg
mov
and
sbbb
xchg
mov
cmpsl
aam
or
test
aad
ds
push
mov
adc
or
je
cmpsl
and
outsl
fcmovnbe
outsl
jmp
cmpsb
pop
cltd
lcall
jle
decb
or
cmp
and
and
dec
test
push
mov
add
add
cmp
and
loopne
imul
adc
lods
daa
loopne
sbb
dec
jge
mov
jecxz
fbstp
mov
jl
pop
xchg
or
in
test
repz
out
fistpll
xchg
inc
push
pop
adc
or
es
add
xor
sbb
push
pop
test
cld
or
flds
fldenv
dec
or
loopne
aaa
aas
inc
sub
fwait
jb
jo
sti
mov
stos
pop
inc
imul
mov
pop
dec
sub
les
testb
jge
out
xor
inc
sub
sbb
movsl
test
out
pop
dec
add
in
push
ficompl
cmpsl
xchg
jecxz
cmp
in
leave
shrl
sub
push
pop
int3
or
pop
or
push
test
mov
leave
push
dec
sub
cmp
xchg
mov
enter
pop
out
outsl
pop
and
mov
mov
fisttpl
stos
mov
lea
jb
test
lret
mov
or
fdivrl
or
adc
pop
sub
xchg
or
andl
mov
push
xchg
out
into
push
fistps
mov
cmpsb
lods
pop
xchg
test
mov
stos
add
and
movsb
in
scas
das
popf
jle
orl
lret
stc
mov
mov
movsb
lcall
iret
pop
and
out
pushf
sbb
popf
fidivrl
incl
insl
jecxz
in
sarb
xor
aad
inc
xchg
in
pop
cmc
jne
in
in
sbb
adc
inc
fists
xchg
push
inc
lahf
jbe
dec
or
jb
lcall
aas
xchg
aad
sub
pop
sub
jle
or
sub
icebp
mov
sbb
xchg
aaa
inc
pop
loop
or
push
mov
jb
pop
mov
mov
mov
pop
scas
mov
inc
fisubs
imul
cli
cwtl
fadd
movsl
push
mov
loop
push
sysexit
jmp
xchg
push
mov
push
jg
dec
and
pop
add
mov
out
jle
jo
cmp
into
scas
rol
shll
leave
push
mov
or
fdivrl
pop
mov
popf
pop
fmull
sbb
sbb
push
into
inc
jbe
out
pop
leave
cwtl
push
shrb
pusha
lock
loop
test
xor
or
ficompl
xor
icebp
push
jecxz
pop
insb
mov
test
sbb
popf
mov
aam
roll
mov
jb
jg
mov
sbb
add
in
mov
popa
iret
scas
xor
clc
jns
scas
fildll
out
jg
adc
lock
jne
pusha
je
inc
outsl
fs
mov
pop
out
fldt
stos
cs
adc
jne
data16
std
jecxz
popf
or
lcall
cmpsb
mov
sub
or
xchg
mov
mov
jnp
lret
mov
leave
push
dec
dec
lcall
cmc
mov
insb
push
push
lds
movsb
cmp
test
and
mov
mov
sbb
push
jg
or
fxch
push
inc
shr
dec
mov
jmp
cmp
add
test
xor
pop
jge
sub
push
and
sub
sub
inc
pop
inc
pop
xchg
call
mov
push
mov
test
mov
adc
inc
push
jle
subb
ss
or
pop
clc
xor
or
push
xchg
fcmovu
push
lcall
aad
sub
ds
cmp
stc
and
loope
fwait
pop
test
test
add
gs
out
push
or
mov
pop
add
call
and
shrl
mov
adc
sub
lcall
cmc
push
out
icebp
mov
add
loop
cmp
xchg
pop
sub
adc
sbb
into
xchg
sbb
inc
cmpsl
sub
sti
mov
pop
xchg
imul
xchg
jno
mov
pop
dec
pushf
add
pop
out
test
and
and
bnd
pusha
adc
and
cld
mov
aam
cltd
pop
aas
and
sbb
push
sub
popf
movsl
sarb
lock
or
test
push
or
jns
movsl
test
cmp
imul
ja
call
mov
xchg
movsl
fs
fs
push
pop
fcoml
mov
rcrb
lcall
pop
mov
lds
or
pop
pop
rcrl
push
or
push
push
xor
loopne
xlat
adc
lds
cmp
pop
sub
ret
movsb
xchg
and
push
repz
mov
dec
mov
sub
push
mov
scas
cwtl
lret
cmp
in
imul
or
inc
mov
and
push
in
xor
pop
test
jmp
movsb
jb
inc
loop
sub
movsl
dec
aad
ds
pop
stos
repnz
inc
sbb
mov
xchg
fildll
add
xchg
loop
nop
and
xchg
mov
or
cmp
hlt
adc
inc
cmc
mov
mov
mov
sbb
cmp
mov
leave
mov
lret
dec
xchg
stos
lods
rorb
popf
rolb
ret
clc
sub
insl
insl
jmp
into
out
rcrl
fisubs
fwait
xchg
inc
mov
insl
shrb
test
les
aaa
sub
movsl
mov
pop
das
cmp
lcall
xchg
fsub
xchg
cwtl
xchg
in
clc
push
pop
push
xchg
or
sahf
int
shlb
lods
repnz
sbb
mov
xor
into
out
jb
inc
lods
xchg
and
push
xor
fcoms
loope
ja
aam
outsb
dec
push
incl
mov
jae
fidivrs
daa
movsl
mov
jle
inc
mov
icebp
push
xchg
mov
jno
inc
push
sbb
lods
in
lea
dec
xor
lock
mov
xor
cmp
test
cwtl
adc
lahf
loop
movsb
test
mov
xor
rcr
outsl
imull
xor
adc
je
add
lods
std
stos
mov
imul
jnp
jnp
out
push
jmp
clc
cwtl
inc
pop
stc
lds
loopne
fiadds
inc
inc
lock
lret
es
pop
aaa
aas
mov
sbb
adc
add
mov
mov
das
mov
repz
pop
mov
or
loop
cmpsb
andl
test
pop
sub
jae
or
adc
push
popf
inc
pop
stos
push
inc
and
pop
int3
daa
and
jmp
loopew
test
jecxz
mov
lock
and
and
outsb
loopne
andl
outsb
mov
add
sbb
pop
shll
jnp
jl
mov
xor
std
mov
mov
dec
inc
lret
pusha
into
sub
mov
sbb
push
ja
in
jmp
pop
xor
or
lock
mov
xorb
nop
xor
push
ret
mov
push
sarl
xor
call
pop
pop
stos
outsb
cmpsl
sub
nopl
jg
imull
jns
xor
aas
lahf
dec
push
rolb
jp
mov
pop
inc
sbb
call
fidivrl
adc
daa
and
xchg
mov
fadds
mov
fwait
push
xchg
mov
sub
fimull
decb
cmp
push
add
dec
or
cmpsb
pop
mov
sbb
test
pop
scas
mov
xchg
jge
cmp
and
inc
test
outsb
pop
xchg
imul
xlat
adc
std
push
bound
lock
or
xchg
das
inc
into
cmp
adc
lods
decl
sbb
adc
jl
fidivl
incl
stos
test
mov
scas
sti
in
test
aas
xorl
or
ficomps
lret
pop
jae
push
punpcklwd
ljmp
jb
pushw
dec
aas
inc
stos
xor
add
cmp
cmp
addr16
test
jno
mov
cmp
pop
xor
lods
push
fsubr
cmp
sti
clc
icebp
push
in
imul
push
add
pop
shll
int3
xor
scas
and
movsb
xor
adc
push
jecxz
outsb
or
daa
insl
adc
cmc
imul
lahf
or
int3
sub
rol
jae
push
outsb
dec
xor
pop
jnp
out
cmp
xchg
shlb
mov
jmp
inc
inc
pop
arpl
dec
jg
xchg
in
xor
movl
lds
imul
cmpb
jmp
jns
add
pop
pop
les
lods
pop
xchg
fwait
lret
mov
lahf
repz
sbb
xchg
adc
cmpsl
cmp
test
dec
mov
mov
test
mov
sub
mov
jbe
dec
push
icebp
xor
cld
pusha
popf
cmp
inc
ret
cmp
fidivrl
in
imul
or
dec
insl
lods
lret
iret
and
test
xlat
or
icebp
fimuls
mov
cwtl
push
fidivs
push
sbb
jg
and
insb
icebp
add
adc
adc
sub
or
pop
imul
les
inc
add
sbb
pop
sub
shlb
lods
add
call
pop
mov
lds
fistps
and
add
hlt
jecxz
sbb
inc
inc
movl
addb
mov
or
push
push
iret
mov
lock
enter
in
and
dec
rcrl
xor
add
sbbl
flds
push
adc
push
jl
xchg
pop
popaw
mov
in
mov
inc
imul
lods
inc
inc
int3
popf
xchg
scas
pushf
cltd
pop
xlat
add
xor
push
cmp
inc
roll
mov
jecxz
and
shll
scas
add
lea
fnstcw
cmpsl
jge
cmpsb
into
and
jge
insl
push
push
xchg
mov
scas
cmpsl
jae
add
sub
lret
mov
int
sbb
sar
lahf
mov
pop
aam
std
mov
insb
push
ljmp
imul
cmp
repnz
cltd
sarb
xchg
cmc
leave
das
sbb
in
js
push
mov
xchg
enter
bound
mov
mov
adc
xchg
sti
arpl
lretw
cmc
loope
add
mov
mov
scas
adc
ret
iret
sbb
dec
mov
dec
inc
push
aas
xchg
or
fimull
sub
xchg
xchg
mov
orb
cmp
cmc
mov
push
sbb
insl
xchg
sub
das
inc
push
ret
ss
xor
shrb
mov
adc
dec
lods
ds
lods
mov
xor
jle
stos
shll
jmp
push
pushf
ja
div
cld
sbb
mov
or
or
xchg
sbbl
test
push
stos
mov
cli
jb
stos
jb
lds
cmp
mov
jp
inc
cli
mov
cltd
mov
cli
pusha
int3
pop
call
inc
xchg
dec
jle
mov
xchg
mov
add
push
repz
icebp
sbb
mov
dec
aam
stos
jg
inc
add
std
ds
shrb
xchg
cmp
mov
out
andl
push
mov
cs
test
adc
add
pop
ret
mov
inc
jbe
pop
and
add
pandn
inc
ror
inc
add
andb
cmp
insl
mov
mov
aas
mov
sub
repz
push
cmp
push
icebp
ss
das
jae
mov
cli
iret
mov
xorl
rol
insb
xlat
sub
out
test
pop
add
addr16
or
and
test
fildl
mov
mov
and
insl
mov
dec
inc
adcb
dec
or
sub
enter
mov
ss
adc
fdivrs
inc
sarb
idivl
sahf
test
sahf
jno
mov
pop
subb
jo
lret
orl
loopne
mov
daa
fimuls
push
ljmp
push
xchg
xor
mov
mov
psrlw
ds
ss
jb
dec
mov
fiaddl
dec
jg,pn
mov
push
jb
jbe
push
lock
adc
pop
xlat
pop
test
ja
clc
in
inc
sbb
movsb
je
add
test
xchg
jbe
sub
add
push
clc
push
aad
push
in
xlat
into
dec
loope
ljmp
cmp
rolb
ljmp
mov
xorl
loopne
add
insl
and
arpl
sbb
jmp
jb
lds
mov
sub
sub
pop
and
ja
push
and
inc
lret
and
leave
and
and
sahf
inc
fstpl
movsl
adc
xchg
ljmp
inc
push
inc
sub
dec
fmull
cwtl
idiv
mov
fnstcw
repz
test
sbb
daa
pop
xor
es
pop
pusha
mov
mov
out
in
test
mov
pop
jg
mov
inc
cmp
sbb
sti
in
daa
les
mov
daa
push
data16
shl
adc
mov
scas
xor
cmp
adc
sub
je
jecxz
subl
sbb
lds
in
mov
mov
jle
add
insb
call
dec
sahf
sub
jns
test
stos
je
cmpsb
add
sbb
mov
and
cwtl
xchg
inc
jge
or
scas
sub
mov
inc
xchg
sbb
mov
lea
push
fistpll
mov
lods
rcr
fwait
outsl
int
sub
pop
leave
dec
inc
add
and
jne
pop
push
jb
mov
mov
int3
adc
mov
add
dec
pushf
mov
inc
loop
mov
fwait
jns
pop
add
out
xor
mov
inc
push
clc
add
fadd
sub
xor
lock
xor
sub
inc
scas
std
sub
jb
les
rorb
int3
lret
scas
cmpsl
add
push
shlb
jle
mov
pushf
out
xchg
and
sahf
call
int3
mov
test
add
clc
cmp
xor
and
xor
div
mov
aad
loope
xor
loopne
test
dec
in
test
daa
jne
adc
in
xor
jnp
add
icebp
rclb
and
repz
jg
mov
and
mov
insl
dec
stc
push
aaa
jbe
loopne
lahf
inc
popa
js
lods
dec
stos
std
ja
inc
rcll
das
lahf
adc
nop
cmpsl
sbb
daa
mov
lods
lea
daa
push
xchg
repz
stos
movsb
arpl
dec
lods
les
mov
xchg
xor
adc
shrb
leave
mov
mov
or
fldenv
jmp
pop
std
mov
xchg
pop
xchg
stos
inc
es
fisubrl
fwait
jg
and
sub
scas
inc
shll
sbb
sbb
xorb
push
add
and
test
mov
push
push
aad
xchg
push
jae
or
hlt
subb
mov
xor
sbb
lds
jb
and
cmpsb
jo
test
clc
pop
mov
outsl
aam
call
xlat
fldcw
push
mov
mov
cwtl
out
jo
pop
mov
pop
xor
mov
mov
mov
jecxz
mov
aas
sub
and
push
rcrb
movsb
mov
mov
bound
add
add
sbb
jne
fsub
pusha
cmp
lret
inc
popa
sub
push
xor
call
lahf
inc
jge
mov
ret
insl
add
cmp
testb
cli
xchg
dec
pusha
jp
push
cwtl
and
int3
mov
and
or
rcrl
sbb
xchg
cmp
test
inc
mov
mov
add
insl
xchg
stc
mov
test
loopne
add
mov
pushf
fldl
dec
sbb
sub
mov
pop
cmp
xor
xor
scas
sarl
dec
cli
xchg
ja
jae
das
fnstcw
sbbb
jmp
cmp
cmc
mov
mov
xchg
push
push
jns
outsb
pop
jge
jge
fucomi
mov
insl
xor
dec
test
gs
mov
scas
or
sub
xchg
sbb
rorl
cld
mov
pop
gs
leave
mov
xlat
sbb
sub
jmp
cmp
jecxz
loop
add
xor
adc
dec
imul
and
push
repnz
cld
fdivl
mov
nop
ja
aam
insb
les
push
es
out
pop
and
insl
loope
mov
je
mov
int
jle
stos
fwait
lods
cmp
adc
jge
test
xchg
sub
imul
dec
lods
stos
add
mov
stos
mov
lret
pop
dec
mov
add
add
aas
and
popf
outsb
outsb
andb
test
loop
ret
pop
pop
std
sbb
or
push
mov
fistpl
incl
push
xor
xchg
cli
jb
and
cmpsl
xchg
popf
or
mov
das
rcrb
push
sub
mov
gs
cld
dec
push
fcomp
add
adc
dec
andl
stos
push
inc
cld
rolb
pop
and
xor
pop
in
arpl
mov
sub
or
mov
cmp
fimuls
dec
sub
push
popf
xchg
outsl
mov
mov
dec
aad
dec
xor
and
cmpsb
or
inc
pop
lcall
fmuls
jge
mov
cmp
add
pusha
scas
sbb
shll
sub
movl
enter
xchg
out
das
mov
and
lds
jmp
out
imull
sub
pop
mov
xchg
pop
outsl
fidivs
sar
and
jne
mov
xchg
bound
rorl
insb
int
fsub
lds
pop
push
inc
jp
mov
dec
bound
jge
outsb
cmp
push
mov
push
insb
repnz
add
mov
xchg
aam
sahf
lret
call
sarb
cmp
cmp
sti
mov
push
jbe,pn
mov
add
pop
shll
sub
movsl
inc
cmpsb
xor
arpl
inc
dec
push
aam
xor
sbb
mov
dec
push
out
pop
mov
cmp
scas
lahf
mov
out
sub
mov
jge
mov
cmp
push
in
xorb
out
sub
fiadds
jp
mov
sbb
ja
sub
bound
das
cmpsl
nop
or
jo
inc
aas
sbb
mov
sbb
lahf
push
ss
mov
pop
les
outsl
pop
xchg
ret
adc
lahf
or
data16
mov
pop
aam
sti
cmp
cmpsl
push
nop
mov
jl
push
push
inc
xor
insl
mov
incl
xlat
pop
and
push
add
pop
mov
mov
push
pop
xor
int
popa
dec
sbb
scas
fcomip
out
xor
inc
mov
sub
outsl
mov
and
mov
je
enter
jb
int
stos
movsb
fisubl
xchg
test
inc
mov
xchg
int3
xchg
mov
mov
sbb
ja
push
push
sbb
mov
pop
in
xchg
mov
xchg
in
inc
subl
inc
jmp
sub
push
sub
jbe
mov
adcl
out
pushf
xlat
into
and
sub
mov
daa
pusha
inc
dec
int3
pop
test
lds
dec
lret
push
lods
sbb
pop
dec
pop
mov
in
pusha
sub
in
arpl
xor
testl
shll
sub
ljmp
inc
subb
ret
imul
movsb
jno
dec
and
fldl
push
xor
cld
pop
stos
rep
push
pop
or
or
cltd
mov
jb
loope
fwait
adc
lret
incb
bound
cmp
adc
pop
and
jmp
lahf
and
dec
subl
int
mov
lods
dec
repz
testl
mov
xor
ret
jp
mov
pop
ret
ds
mov
inc
aaa
xchg
imul
sbb
mov
cld
push
aad
lds
jns
das
mov
sub
icebp
xor
rolb
cmpsb
in
enter
in
push
inc
xor
ret
mov
sbb
cli
lods
int3
scas
dec
jecxz
sub
stc
in
repnz
pop
nop
rorl
fisubrl
adc
xlat
cmc
incl
jge
or
loope
mov
movb
in
xchg
pop
fcomp
in
jl
mov
sbb
cmp
or
pop
movsb
mov
dec
cwtl
cmp
pop
adc
scas
ds
sbb
rcll
jb
jl
inc
ljmp
push
mov
and
mov
sbb
xchg
or
dec
out
xor
cmp
or
push
aaa
into
mov
cmp
dec
sti
mov
pop
stc
popa
xchg
mov
and
dec
mov
sbb
mov
fidivrs
xchg
shrb
ret
mov
add
push
cmp
sbb
aas
jnp
mov
repz
jnp
cmc
dec
mov
insb
mov
int3
mov
int3
fmulp
sub
dec
in
sbb
scas
leave
adc
xor
outsb
push
enter
jns
inc
out
loope
pop
insb
push
ljmp
sub
bound
in
test
dec
outsl
jle
fists
or
jb
fndisi(8087
xchg
clc
movsb
pop
call
sbb
loope
cmp
js
mov
fidivl
and
dec
cld
mov
clc
sbb
sbb
add
rolb
inc
ret
adc
inc
outsl
dec
inc
adc
xchg
lods
cld
in
push
and
add
cmp
and
std
inc
mov
frstor
cmpsl
inc
adc
daa
fstl
sbb
mov
arpl
imul
or
inc
jge
cmp
lea
testl
cmp
mov
rorb
shrb
lods
xor
adc
inc
sub
insl
jp
inc
and
push
movsb
outsl
loopne
mov
fwait
js
mov
and
sub
lret
loop
int
leave
fnstcw
cmp
and
out
cwtl
dec
add
jbe
pop
jb
subl
daa
clc
out
push
xor
mov
jo
dec
movsb
fstps
sbbb
jae
push
dec
iret
cli
and
loop
mov
pusha
and
bound
inc
aaa
adc
mov
fnstenv
outsb
rcrl
enter
push
sbb
icebp
mov
mov
mov
shl
fiaddl
scas
sub
push
cltd
lock
mov
mov
jecxz
pop
aaa
push
in
sub
dec
xchg
sub
sbb
inc
aaa
movsl
inc
ja
push
mov
xchg
test
xor
sub
sbb
clc
rcrb
jbe
mov
lods
mov
hlt
stos
mov
mov
mov
pop
inc
mov
orl
jmp
cwtl
shll
aam
jle
cli
testb
mov
stos
out
mov
xchg
ss
adc
call
lret
les
dec
scas
ret
push
jne
jl
imul
sub
scas
push
fistl
add
subb
loop
cwtl
mov
scas
dec
sub
lods
shll
inc
or
loope
sub
xchg
nop
xchg
push
shlb
in
sar
xchg
xchg
and
jle
jae
xchg
lods
and
fdivp
xchg
or
mov
mov
clc
in
test
push
adc
call
rolb
out
addr16
inc
push
xlat
test
add
mov
call
jbe
mov
stos
leave
jb
sub
bound
xor
inc
ljmp
leave
pop
pop
js
cmpsl
cmp
leave
enter
pushf
mov
insb
popf
out
movsl
test
mov
lea
dec
loopne
fwait
jmp
mov
adc
inc
add
inc
insl
test
test
fwait
push
lods
xor
decb
jmp
ret
pop
movsb
dec
mov
inc
call
test
lods
test
aad
out
jno
bound
decb
je
pop
in
sbb
icebp
shll
scas
lock
mov
or
sub
cli
aad
xor
pop
add
mov
les
push
add
xor
shl
and
sbb
push
mov
jns
lret
in
outsl
ss
jbe
icebp
or
jp
imull
xor
push
mov
in
je
shrl
cli
aam
dec
xor
xchg
daa
imul
jns
ret
and
test
pop
pop
mov
dec
xchg
mov
repnz
push
adc
adc
or
xchg
sub
inc
jle
xchg
je
sub
testb
xchg
fs
pop
in
pop
aaa
dec
out
inc
cmc
das
movsb
hlt
xor
add
add
pop
pop
jp
mov
iret
movsl
imul
fisttpl
cltd
dec
xchg
xor
pop
mov
mov
jg
dec
jmp
data16
sbb
jl
ret
repz
mov
mov
subb
insb
mov
sbb
into
mov
push
test
je
xor
insl
jb
add
xchg
enter
mov
xor
jo
test
sahf
pop
and
rorl
movsb
rcrb
mov
outsb
or
test
push
push
jmp
lret
jo
push
orb
mov
jo
push
push
stos
add
mov
loope
fistpl
sub
jns
sub
insl
test
dec
pop
rorl
rcll
icebp
dec
popf
sub
imul
jne
lret
cmp
pop
loopne
mov
sbb
ljmp
xchg
and
nop
icebp
sbbb
add
push
mov
pop
int
xchg
fwait
ret
lea
pop
cmpsl
adc
inc
xor
test
push
push
shrb
mov
hlt
inc
or
sbb
aas
sub
add
clc
and
sub
lock
iret
lret
xchg
sub
sahf
jnp
jbe
and
lds
cmc
shrb
sti
mov
lods
js
bound
mov
mov
and
inc
push
adc
inc
testl
loope
hlt
adc
pushf
xor
rorb
mov
and
shrb
arpl
and
mov
scas
fcmovu
mov
lret
aam
popf
dec
fdivl
xchg
std
in
and
mov
or
outsb
inc
out
ret
lret
dec
mov
fbstp
add
and
sub
pop
sbb
out
out
std
and
not
cmp
add
push
push
call
dec
lret
jb
in
cltd
scas
xor
xchg
jns
bound
fs
ds
xchg
xchg
fwait
jg
lds
fs
stc
xchg
leave
mov
sarl
xor
dec
sti
shrb
add
jb
ja
lock
punpcklwd
enter
into
popa
jno
cmpsl
cmp
pusha
push
aas
lock
fildll
movsb
outsb
stc
and
or
dec
jae
je
aad
dec
push
stos
icebp
out
xor
sbb
rcl
push
or
or
cmpsb
fstpl
dec
or
shlb
fcoms
out
iret
xchg
ficompl
push
and
sbb
cmpsl
fcmovu
adc
das
ret
lock
adc
or
mov
adc
insl
jns
addr16
push
cmpsl
movsb
sub
call
int
out
push
lea
ljmp
scas
out
outsl
adc
leave
xchg
pop
imul
mov
add
cmc
sub
fcmovbe
xor
pushl
lds
mov
mov
add
sti
pop
jb
movsl
mov
dec
nop
lret
pop
ljmp
test
ret
cmp
mov
imul
xlat
jecxz
lea
and
dec
xlat
loope
cmpsl
dec
inc
push
dec
xchg
pop
aaa
adc
jecxz
aaa
push
popf
nop
std
sub
addr16
mov
cmpsb
jae
inc
cmpsl
test
popf
push
pop
imull
cltd
movsb
mov
adc
jae
cmp
scas
lret
or
loop
push
fldl
add
xor
dec
loope
int
sti
mov
pop
in
sarl
mov
xchg
scas
and
sti
jbe
and
rolb
sbb
jge
sti
subb
in
fimull
mov
push
xor
outsl
inc
adc
popa
push
lcall
mov
sahf
pop
shll
testl
mov
inc
add
mov
repz
outsb
pop
popa
cmpl
testl
outsb
aad
scas
and
and
int3
hlt
push
dec
sbb
mov
out
imul
and
inc
mov
cmp
lea
mov
sbb
call
dec
pop
add
ret
xchg
jmp
pop
hlt
sarl
mov
lock
mov
dec
icebp
jb
insl
cmp
int3
sbb
les
add
mov
aaa
std
cmp
test
sar
sbb
rorl
adc
lods
pop
je
repnz
inc
stos
sbb
in
rcl
pop
daa
out
dec
xchg
jb
cs
repz
mov
add
test
hlt
xchg
jb
push
add
cmp
jecxz
test
ljmp
repnz
outsl
pusha
mov
lock
pop
xlat
iret
imul
leave
pop
data16
push
imul
xchg
sub
or
adc
mov
leave
cli
xchg
sbb
jbe
aaa
push
dec
mov
imul
xchg
add
fdivrs
sahf
inc
stos
sub
xor
add
sub
jl
pop
xorb
das
and
mov
outsb
or
mulb
cmc
sub
push
test
lea
arpl
lock
lea
cmp
fstps
repnz
leave
inc
dec
nop
cmc
inc
sbb
out
mov
add
dec
fsub
mov
jle
mov
mov
push
pop
daa
int
movsb
scas
and
jbe
sbb
scas
mov
daa
mov
or
mov
mov
dec
test
mov
xchg
mulb
enter
test
mulb
lods
mov
xchg
pop
and
add
xor
sub
xor
bound
inc
jg
lods
xchg
xchg
insb
nop
les
lds
mov
divl
cmp
lods
enter
mul
pop
rclb
outsl
int3
pop
xchg
cmpsb
ja
repnz
mov
scas
lcall
bound
lret
ficoml
pop
mov
in
aad
pop
mov
xor
jne
xor
bound
movsb
sti
into
xchg
xor
push
popa
or
push
mov
popa
cmc
push
xchg
xor
rol
xor
addr16
cmp
iret
mov
out
bound
xchg
sahf
insl
dec
nop
pusha
imul
xor
pop
add
inc
mov
sub
jle
test
xor
lock
lds
push
cmpsb
jle
aaa
xchg
dec
push
pop
jle
adc
xchg
js
inc
xor
clc
push
ret
in
out
test
xchg
call
cmc
push
push
out
jae
adc
add
jmp
or
add
cmp
sarb
popf
out
push
sbb
push
jb
hlt
mov
xchg
or
mov
xlat
xor
hlt
stos
jmp
pop
gs
sbb
stc
push
jne
pop
in
inc
mov
push
mov
xchg
jl
fisttps
roll
and
in
test
cmc
jbe
fidivs
xchg
push
sbb
xchg
or
cmp
push
inc
push
ss
mov
cli
dec
pop
cld
inc
outsl
mov
sub
adc
scas
mov
add
in
ljmp
mov
sub
cwtl
jne
inc
push
cmp
sbb
bextr
mov
clc
fistpl
dec
sub
bound
fidivl
mov
imul
jbe
test
ja
stos
dec
add
shl
or
fistps
xchg
or
lods
jne
mov
in
out
dec
mov
or
daa
outsl
pop
and
mov
in
scas
popf
andl
aad
shlb
mov
sbb
dec
cmp
call
mov
outsl
lret
js
imul
ljmp
and
roll
adc
loop
jge
and
xlat
jns
out
sbb
push
sub
les
mov
stos
add
lds
cwtl
icebp
cmp
sub
rcl
xchg
pop
xchg
jne
repz
cld
mov
stc
ret
push
cmc
xor
push
rclb
fnstsw
pop
ficomps
adc
sbb
sub
ret
sbb
ret
addr16
push
stos
sbb
sti
push
dec
jmp
push
inc
mov
testl
pushf
xor
ss
jne
int3
out
scas
pop
repz
ret
int
test
jecxz
in
insb
stc
pushf
push
xor
inc
hlt
xlat
mov
leave
mov
xor
clc
repnz
in
inc
xchg
xor
repz
push
mov
ret
push
mov
bound
sarl
add
repnz
mov
xchg
cwtl
pop
imul
and
or
inc
rcrl
add
jle
cli
ret
repz
div
sub
push
cmp
cmp
and
pusha
dec
or
in
outsb
adcb
mov
dec
movsl
mov
clc
ja
mov
inc
scas
dec
adc
in
test
jge
pop
sahf
cld
jne
xor
je
sub
or
icebp
daa
and
jo
lods
lcall
push
imull
jmp
divb
aas
push
inc
mov
negb
in
jb
and
adc
or
dec
mov
imul
adcl
sub
dec
fchs
lret
mov
mov
aad
mov
sahf
xor
push
sub
fs
adc
mov
sub
lds
and
xchg
fisubrl
and
aaa
mov
fstps
mov
adc
fnsave
out
push
nop
jg
in
push
fnstcw
add
scas
push
jle
jecxz
ficoms
xchg
dec
repz
jge
cwtl
pop
xor
sbb
icebp
hlt
movsl
mov
push
es
stos
or
jbe
nop
inc
leave
test
mov
dec
push
jecxz
mov
xchg
and
pop
lds
mov
inc
aaa
push
in
ja
into
fyl2xp1
lret
adc
std
push
cmp
adc
dec
sub
inc
nop
xlat
mov
int
sbb
cmc
mov
and
adc
adc
xor
jns
sub
push
je
pop
adc
jg
jl
jbe
popf
mov
mov
call
cmp
pop
mov
int3
sbb
or
pop
shrl
push
adc
xor
shll
mov
loope
ficompl
and
or
pop
mov
negl
jl
pusha
cmpsl
add
cld
test
mov
xchg
cmp
adc
cwtl
jo
subl
lret
clc
add
fimuls
inc
mov
mov
in
scas
and
sbb
xor
adc
je
loop
hlt
dec
mov
out
adc
aaa
add
aam
cmp
and
adc
cld
push
data16
stos
cs
mov
push
xchg
jmp
sub
pop
rcrb
int3
cld
jecxz
ret
pop
sbb
clc
mov
xor
xchg
out
add
ret
into
stc
popf
mov
adc
sbb
dec
testb
xchg
sub
xchg
dec
cmc
mov
in
cmp
add
lahf
fistps
pop
add
xchg
loope
sub
cmpsl
mov
pop
mov
sub
sub
mov
cmpsb
jg
inc
mov
fldenv
andb
cs
dec
daa
bound
sbb
sti
int3
stos
mov
aad
jno
xor
xchg
inc
mov
sub
xchg
jne
test
fadds
sahf
cs
add
mov
jle
jg
push
jae
mov
cmp
dec
pushf
sub
sahf
mov
mov
jl
cmp
mov
and
mov
loopne
insb
scas
loopne
hlt
xor
push
ja
push
inc
mov
add
aaa
xchg
inc
xor
lock
push
addr16
loop
jmp
pop
jg
gs
loopne
or
js
js
fcmovnb
cmp
scas
hlt
mov
and
jecxz
out
cmp
xor
dec
inc
pop
xor
sahf
fstps
push
outsl
pop
in
adc
cmp
mov
jg
push
xchg
dec
sub
dec
pop
inc
fistl
xor
pushf
mov
addr16
cltd
mov
cld
lock
test
cmp
fsubrl
int3
pushf
and
push
add
inc
xlat
mov
jl
imul
insb
or
inc
jnp
xchg
xor
dec
xor
dec
adc
pusha
sbb
pop
orb
pop
xor
mov
mulb
movsb
mov
push
push
dec
jp
mov
jge
adc
mov
jnp
lahf
les
mov
add
repz
bound
xchg
repnz
ds
jle
jmp
xchg
or
insb
fsubs
cmpsb
lods
mov
movsl
pop
clc
mov
daa
repz
lock
pop
in
dec
ljmp
loopne
xchg
cmp
xchg
dec
mov
and
add
adc
int3
or
sub
pop
enter
cld
test
scas
dec
xchg
js
outsb
dec
or
cmc
jns
xchg
lock
sti
add
pop
xor
push
rcrl
ljmp
leave
mov
fstpt
mov
cmp
and
notb
in
push
mov
mov
mov
inc
and
xchg
std
lcall
outsb
sub
or
mov
pop
rcrb
xor
jmp
jae
adc
xorl
bound
mov
push
nop
sbb
pop
ss
adc
mov
push
insl
push
les
push
cmp
xor
in
lds
mov
sti
outsb
bound
xor
xlat
sub
dec
fsts
fucom
mov
js
sub
aad
test
dec
or
push
mov
fists
les
lods
sahf
push
popa
dec
mov
add
and
popf
loop
stc
sub
out
insl
sub
and
adc
insl
adc
cmp
push
addr16
sub
xor
test
out
and
fldlg2
incb
rolb
and
mov
adc
andl
dec
call
add
sub
mov
aas
push
adc
in
incb
add
js
sti
lahf
dec
cmp
jl
xchg
mov
mov
cmp
test
inc
push
pop
out
add
aad
mov
popf
push
dec
mov
mov
mov
aaa
lcall
addr16
in
hlt
cmp
pop
fcomi
sub
dec
push
fdivr
out
xor
lret
dec
decb
mov
dec
jnp
inc
adc
clc
int3
pop
lea
in
popa
movsb
push
sbb
push
push
cmp
xor
sbb
inc
dec
hlt
int
jecxz
add
cmp
fdivl
jb
ret
out
dec
mov
imul
in
imull
popf
sbb
in
in
data16
nop
jecxz
or
js
in
fadd
xor
adcb
push
dec
out
inc
addl
sub
bound
js
mov
jb
cmp
cmp
push
ret
imul
add
mov
pop
lcall
lret
shrl
fistpl
es
lret
je
test
push
add
in
into
dec
and
xor
jno
in
pop
lcall
ret
adcl
in
int3
jbe
int
mov
lods
test
lds
loopne
jno
into
push
xor
aas
cmc
adc
test
ret
in
and
cmp
xchg
sahf
enter
xchg
fbld
adc
and
in
int
jne
repz
sub
jae
inc
or
or
and
movzbl
jo
inc
jno
dec
jne
inc
mov
mov
mov
mov
xchg
push
stos
movsw
cli
and
pop
cltd
lret
aas
or
aad
lcall
jp
loop
aad
xor
jl
mov
es
pop
push
lea
fwait
data16
bound
xchg
jmp
test
cmp
jmp
aad
mov
arpl
xor
in
cwtl
test
je
jp
sub
sahf
inc
pop
jg
rcll
pop
mov
sahf
mov
push
add
ret
mul
pop
rolb
repnz
sarl
or
dec
mov
gs
loop
cmp
les
sbb
jecxz
les
push
push
mov
dec
jne
aam
dec
sub
cmp
gs
mov
xor
cltd
sbb
push
mov
cmp
and
push
mov
mov
into
sti
repz
mov
jmp
out
push
in
xchg
jg
cmpsb
or
inc
cltd
rcl
lcall
mov
push
inc
xchg
pop
xchg
aaa
imul
ja
xor
loope
sub
xchg
mov
jae
ficoms
ja
cmp
xchg
lods
aaa
add
fidivrs
fildl
pop
mov
test
movsb
mov
call
lahf
xlat
je
adc
xor
out
jle
outsl
jo
ret
hlt
xor
push
sbb
jns
mov
ss
stos
xor
push
push
pop
lods
lret
cmp
imul
push
xlat
mov
outsl
lea
pop
mov
insb
repz
push
popf
cltd
dec
and
inc
sarl
daa
mov
or
subb
jnp
or
xor
lcall
mov
jnp
cmp
out
push
jnp
andb
gs
dec
jge
inc
jle
sti
xchg
push
dec
nop
mov
js
cltd
mov
jecxz
pusha
mov
push
jle
nop
sbb
inc
sar
outsl
or
mov
insb
mov
aaa
or
fnstsw
mov
popa
jecxz
imul
das
aam
mov
inc
arpl
into
out
popa
cmc
xchg
xchg
repz
jo
jle
or
xchg
cwtl
mov
xchg
jno
sbb
rcr
pop
rcl
scas
clc
xchg
je
aaa
jle
xchg
inc
mov
jbe
jnp
loope
push
cmp
mov
out
mov
dec
sub
hlt
xchg
loop,pn
jnp
xchg
fistps
into
xchg
in
out
jg
rcl
cmp
cmc
jp
leave
add
call
test
push
and
push
mov
or
mov
xor
mov
leave
xchg
mov
xchg
les
ret
iret
dec
in
cmp
mov
mov
inc
sbb
loop
pop
je
out
inc
jg
xchg
jmp
iret
xchg
push
mov
push
loopne
cs
cmc
sub
cmc
les
rolb
xchg
jbe
inc
rcl
cmp
push
mov
movsb
inc
movl
pop
xchg
mov
cli
int
pop
dec
xacquire
in
mov
cli
push
mov
and
xchg
sbb
dec
pop
clc
add
and
movsb
scas
out
xor
ret
pop
adc
or
and
jmp
cmove
jecxz
in
jmp
xchg
leave
pop
in
aam
jge
mov
out
es
lods
fcomi
rcrl
pop
pop
push
outsb
in
push
hlt
and
addr16
lcall
popa
mov
jae
push
xchg
mov
jp
push
outsl
mov
das
lret
out
dec
pop
in
in
and
xorl
scas
adcl
lods
and
mov
mov
dec
mov
push
inc
aad
popa
xor
mov
fnsave
outsb
lods
add
fs
shl
sub
pop
lahf
ds
std
jl
call
mov
aad
jae
push
imul
jbe
jne
xchg
outsl
mov
enter
adc
mov
or
movsl
sbb
push
inc
test
stos
inc
data16
inc
rcll
sub
mov
cmpsl
into
dec
xchg
jecxz
add
inc
je
cmp
dec
dec
aad
mov
sbb
icebp
ret
push
push
mov
and
mov
daa
out
fs
jle
xchg
mov
xor
mov
out
in
imul
pop
xor
xor
sbb
pop
outsl
fisubrl
int
pusha
repz
hlt
shll
cmp
inc
add
and
imul
insb
fcomip
and
leave
inc
sub
scas
outsb
fsts
out
jns
cmp
popf
push
and
lcall
inc
adc
push
cmp
dec
jo
adc
icebp
ficoml
rorl
cmp
sbb
gs
fistpll
mov
paddsb
sbbb
inc
mov
je
fildll
mov
or
mov
mov
lahf
pop
cld
cmp
pop
mov
cmpsl
div
loop
stos
rclb
ljmp
pop
addr16
popw
add
pop
cmpsb
push
icebp
sbb
fcomp
loop
push
dec
pusha
sub
push
mov
orl
lret
adc
inc
das
push
xchg
mov
pop
mov
iret
lods
std
lds
adc
insb
add
cmovb
inc
std
test
adc
es
aam
mov
dec
nop
pop
mov
jp
add
mov
jno
jmp
loop
movsb
sub
outsb
clc
adc
jno
data16
aaa
push
fsub
push
add
lods
xchg
fldcw
xor
insb
fcomp
xchg
mov
ss
sbb
adc
jg
dec
and
mull
add
pusha
pop
ror
pop
pop
mov
in
pushl
shll
push
das
stc
lds
mov
test
ficompl
js
jle
fiadds
btr
pop
ss
mov
jmp
pop
dec
add
test
je
mov
pop
movsl
xchg
cmp
fwait
push
cmpsb
dec
imul
clc
push
shll
into
or
movsl
or
xchg
lods
sbb
daa
xlat
jno
jecxz
push
sub
push
cmp
add
jno
push
and
adc
nop
test
insl
roll
jbe
mov
js
mov
mov
sarb
js
repnz
rorl
rcrl
pusha
xor
dec
dec
sbb
cmp
sbb
mov
js
lock
xchg
stos
push
sbb
sub
mov
iret
jns
xchg
loop
or
xor
and
sbb
mov
push
mov
push
gs
es
xor
pop
mov
arpl
test
jbe
popa
mov
jle
cmp
cmp
adc
rclb
imul
test
sbb
ss
xchg
shr
mov
cs
cmp
adc
ret
dec
push
dec
sub
jbe
test
add
popf
pop
xchg
jge
cmp
shll
movsb
fs
xor
mov
mov
cmpl
lock
jo
nop
inc
dec
jb
popa
std
fs
jbe
aad
je
je
adc
sbb
push
pop
shlb
dec
push
out
cmp
insl
ljmp
test
cmp
arpl
movsl
mov
je
scas
shll
mov
rorb
sbb
cmp
pop
insl
addr16
orl
lahf
adc
push
addl
adc
sahf
arpl
mov
push
int
mov
mov
dec
inc
int
and
ret
loop
sbb
fcmovne
cmp
xchg
into
jnp
push
mov
jmp
inc
and
mov
gs
xor
imul
dec
gs
lock
pushf
pop
cmp
mov
stos
inc
jp
fwait
lods
std
cltd
xchg
mov
xor
cmpsb
leave
les
dec
pushl
jo
ss
shrd
addr16
inc
or
stc
dec
lods
cli
xchg
and
or
sbb
mov
mov
sbb
cmpsb
daa
stc
push
sarb
into
inc
int3
scas
daa
cmp
dec
ds
repz
cltd
pop
mov
jecxz
out
xchg
idivl
inc
cmp
or
aaa
mov
pushf
cmp
add
xor
sub
popf
pop
push
cld
inc
pop
ret
aad
cmp
xlat
cmpsl
sub
add
ljmp
mov
outsb
add
ret
add
cmp
gs
mov
dec
xor
mov
pop
xchg
xor
push
mov
test
sbb
rep
xchg
andb
cli
mov
daa
push
jnp
sub
add
jmp
jl
mov
adc
mov
add
mov
aas
rorb
or
leave
je
add
int3
sbb
int3
push
or
cmp
shl
scas
aad
sub
xorb
push
popa
jge
xor
test
jbe
cmp
popf
std
pop
jbe
iret
dec
in
mov
or
mov
xchg
fdivr
bound
stos
inc
or
mov
push
jmp
sbb
adc
outsb
mov
inc
divl
xorb
in
xchg
ljmp
xchg
push
jns
jle
int
addr16
xchg
jbe
out
push
inc
mov
stc
fwait
sbb
xor
jo
nop
ret
test
push
mov
ja
fwait
jns
lds
fisubrs
dec
lods
push
movsl
dec
dec
push
vpcmpgtd
mov
jbe
push
cld
mov
mov
jne
mov
jmp
movsl
es
les
jo
jle
insl
mov
mov
stos
cmpsl
in
negb
pop
test
or
in
in
inc
ds
cmp
inc
inc
sbb
fnsave
loopne
cmpsl
xchg
lds
mov
push
enter
xchg
mov
std
shll
jns
xor
fwait
xchg
mov
data16
sbb
add
xchg
std
or
ret
adc
fistl
scas
aaa
repz
fcmovbe
lret
mov
and
jbe
imul
ja
push
inc
lahf
sti
insb
mov
pop
stos
mov
aaa
jl
or
inc
sub
pop
cmc
mov
dec
and
or
rcrb
ret
clc
icebp
repz
ja
jmp
jge
stc
and
int
sahf
jp
adc
xchg
dec
xorb
sti
sub
cmpsb
pop
loop
or
pusha
lock
mov
cmpsl
xchg
jnp
mov
popf
push
push
xor
test
inc
das
inc
fadds
mov
lods
xorw
aam
mov
mov
jno
mov
push
and
negl
fucomi
cmpsl
xchg
inc
orl
cld
sbb
pop
rep
add
fstps
pop
sbbb
mov
mov
rcrl
icebp
insb
push
adc
pushl
testl
mov
jl
add
push
pop
in
out
adc
and
sub
push
divb
addr16
ds
jmp
jge
adc
mov
jecxz
ljmp
addb
out
mov
out
das
sub
and
and
mov
adc
andb
js
vaddsubps
sbb
pop
pop
insl
cmp
shlb
iret
push
leave
daa
push
out
mov
dec
dec
xchg
rcrl
adc
cld
add
stc
int3
outsb
mov
mov
jnp
out
cmc
shlb
sbb
mov
jbe
dec
mov
mov
xchg
pop
push
sbb
xchg
xchg
jne
cs
and
ret
mov
mov
sub
ret
in
arpl
dec
sub
sbb
std
stos
test
xchg
leave
js
loopne
jecxz
sbb
inc
cmpsb
adc
repz
cmp
sub
cmp
test
sbb
inc
das
mov
and
push
xchg
insl
daa
sub
movsl
push
cltd
sub
push
fldcw
xchg
pop
cmp
sub
cwtl
cltd
movsb
push
les
fidivrs
push
inc
xchg
subb
add
mov
adc
cli
xchg
push
or
jne
arpl
sbb
out
mov
out
push
mov
sub
push
in
mov
jnp
cmc
lcall
fsubr
mov
mov
dec
inc
adc
jge
lods
int3
daa
into
sbb
and
and
in
in
mov
test
adc
sbb
dec
fwait
pop
mov
cmc
mov
fisttps
push
add
fistl
xlat
mov
pop
cmp
rolb
cmp
stos
push
ds
int
cmp
cmp
into
adc
pushf
fiadds
push
mov
adc
shrb
pusha
test
cmp
arpl
jbe
icebp
push
ret
and
imul
add
pop
mov
push
arpl
and
outsl
std
gs
cmc
and
mov
fldenv
jmp
sub
jge
dec
incl
mov
adc
cmp
ret
sbb
fists
and
into
ret
loop
push
xchg
sub
shrb
ss
pop
push
inc
aad
mov
js
outsl
push
aam
mov
xor
scas
push
mov
aam
mov
ja
je
das
pop
push
sbb
xchg
add
int3
sub
mov
pusha
sub
lods
pop
xor
jb
enter
lret
clc
xchg
mov
push
xor
xor
or
xor
aaa
cmc
mov
sti
imul
sti
scas
dec
sbb
pop
stc
popa
adc
mov
roll
cmpsb
test
mov
jle
inc
cs
adc
cmp
mov
or
sbb
push
inc
xchg
jnp
jle
aad
mov
mov
call
mov
and
sbb
push
cmp
adc
rclb
mov
sbb
push
into
adc
aam
jns
mov
push
xor
out
jo
jne
lods
inc
imul
ret
and
push
out
xor
add
dec
bound
mov
add
pop
jae
pop
sar
lds
aad
mov
sbb
adc
xor
orl
xchg
dec
adc
mov
cwtl
insb
imul
imul
cmp
cmpsb
movsl
jg
jg
xor
subl
popf
and
aaa
outsl
xor
sbb
mov
jl
mov
or
es
stos
scas
setnp
mov
sbb
or
or
mov
push
ret
xor
aaa
dec
and
inc
add
sbb
mov
xchg
xchg
daa
out
inc
xchg
add
popa
pop
sahf
sbb
movsb
adc
in
and
rclb
fadds
add
dec
int3
adc
add
loop
xchg
icebp
xor
pop
insl
sub
adc
out
xor
adc
sub
scas
sub
jb
push
or
mov
jp
repz
sub
cmc
inc
mov
fisttpl
cmp
xchg
xchg
mov
mov
stos
xor
clc
xlat
cmp
xor
and
push
xchg
stos
ljmp
inc
dec
mov
and
mov
je
in
out
push
mov
push
jge
jne
rolb
aaa
addr16
lret
mov
and
inc
loopne
inc
icebp
inc
cmp
popf
jns
mov
xor
dec
dec
pop
dec
popa
jae
xorb
inc
and
push
loope
xchg
lea
dec
pop
ljmp
aaa
mov
jo
aas
mov
pushf
xchg
mov
popf
inc
dec
sub
stc
and
movsb
xchg
lods
and
mov
testb
pop
andl
addr16
test
sub
pusha
scas
divl
and
ljmp
mov
add
dec
sub
arpl
xor
add
mov
cmp
adc
insl
cli
int
andb
aas
add
clc
push
sbb
or
in
sbb
pusha
cs
in
inc
fwait
cmp
sub
mov
in
mov
subb
pop
dec
pop
xor
cmpsl
add
dec
push
sbb
inc
add
xchg
fidivs
int3
add
push
es
fdivrs
ret
xchg
inc
ss
mov
mov
ss
nop
test
inc
jmp
pop
test
mov
sub
imul
push
jns
xchg
inc
mov
xor
sti
sti
shr
or
lods
or
fmul
xchg
ljmp
lcall
pop
ljmp
es
pusha
inc
es
jecxz
add
jae
xor
idivb
push
pop
jno
mov
jl
inc
or
decl
add
lret
mov
mov
mov
ret
mov
jne
dec
dec
daa
shll
push
jecxz
cmp
cltd
shl
fsubrl
loop
lods
inc
xor
aad
inc
sub
push
xchg
aam
jp
leave
jno
bound
sahf
dec
int
sahf
stos
test
cli
push
andl
inc
outsb
dec
hlt
test
mov
push
cmp
insl
sub
inc
cmp
aam
repz
aaa
push
cltd
aaa
pop
add
inc
aad
cmp
test
outsb
push
add
adc
rcrl
mov
ja
inc
adc
mov
outsl
mov
stos
mov
gs
sahf
dec
mov
call
push
ljmp
dec
cwtl
popf
push
shr
cmp
xchg
ret
sbb
cmpb
mov
fsubl
ret
dec
pop
popl
xchg
and
sbb
jnp
jp
nop
sti
aam
in
push
and
mov
movsb
call
mov
std
jnp
scas
or
or
push
lock
aas
cmp
test
cmp
dec
mov
inc
lods
mov
mov
inc
fs
add
mov
mov
fcoms
popa
leave
jnp
iret
mov
hlt
sar
lahf
xor
mov
lahf
js
cmp
sub
xchg
outsl
dec
or
data16
xchg
dec
push
adc
imul
adc
pop
call
in
lods
jmp
insl
mov
cmc
pushf
ffree
sbb
sahf
sub
repnz
mov
shl
lock
cmpb
in
push
jle
mov
push
cmp
xchg
fimull
push
adc
mov
xor
outsl
and
push
jmp
dec
stos
dec
sbb
mov
fdivrs
idiv
xor
ret
outsl
loopne
push
rcr
sub
stc
inc
mov
jnp
xchg
cld
filds
cwtl
je
adc
sbb
adc
dec
xchg
mov
mov
xlat
push
or
or
xchg
jnp
cli
mov
int3
test
xchg
rcl
inc
enter
ljmp
cmpl
mov
fwait
scas
mov
xor
testb
add
pop
xorb
loope
inc
rorb
jecxz
movsl
popa
cmpsl
dec
pusha
adc
mov
rol
int
repnz
div
fs
fldl
loop
fists
and
int3
cld
inc
data16
int
movsb
cmp
aaa
es
hlt
push
sbb
testl
addr16
pop
sbbl
test
mov
rcl
sub
dec
cli
jne
test
popa
mov
dec
cmc
and
inc
icebp
jbe
adc
or
pop
imull
dec
push
sti
lret
push
fwait
clc
test
dec
adc
push
mov
sarl
cli
and
repz
lcall
xor
jl
lahf
fstp
inc
xchg
inc
mov
mov
filds
ds
int3
daa
cmp
leave
mov
mov
nop
inc
leave
push
enter
mov
xchg
loope
popf
test
cltd
insb
pop
decl
popf
xchg
rol
scas
lret
push
mov
popa
mov
cmp
outsl
xor
add
bound
sti
jae
xor
inc
loope
pop
repnz
call
push
sbb
pop
push
int
xorb
or
fs
xchg
icebp
clc
adc
xchg
cmp
test
sub
lret
xor
frstor
into
jecxz
scas
call
mov
loopne
mov
dec
ds
sub
mov
inc
fucom
mov
fcompl
jns
mov
hlt
inc
mov
fldl2e
insl
mov
dec
mov
push
pop
mov
bound
ds
fldcw
cli
nop
aam
sbb
insb
mov
negb
cld
xchg
aaa
mov
rorl
and
add
adcl
repz
mov
fidivrs
push
xor
pop
cld
jne
lret
ljmp
xchg
inc
test
jge
adc
inc
jmp
sub
push
stc
push
mov
test
sub
daa
rol
mov
outsb
out
inc
pop
cmpsl
jb
push
xlat
fdivrs
daa
xadd
pop
out
jbe
or
add
hlt
xor
lods
add
aam
fcmovne
mov
in
sub
cs
push
fs
adc
and
loop
idivl
pop
stc
push
jnp
inc
sbb
dec
sub
xor
push
inc
dec
mov
int
sbb
add
sbb
in
add
inc
pop
addb
sbb
out
out
out
mov
iret
sbb
xor
jno
das
xchg
ss
popf
out
mov
mov
dec
jg
push
ljmp
adc
rcll
imull
loope
jnp
cwtl
mov
inc
insb
in
mov
lods
adc
test
lcall
gs
cmc
subb
cmp
xor
xor
mov
repnz
jae
push
mov
cmp
mov
sub
stos
scas
imul
in
lock
sbb
xor
lea
ds
mov
testl
clc
push
repnz
push
mov
cmpsl
xchg
and
into
es
outsb
mov
sub
jmp
push
pop
jecxz
or
sub
int3
xor
imul
arpl
ret
xlat
mov
andl
and
imul
cmc
call
loopne
lods
fstpl
flds
sub
mov
aam
cld
mov
mov
xchg
jbe
pop
mov
mov
pop
cmpsb
cmp
sbb
adc
cmp
mov
jnp
or
cli
jb
pop
sbb
jg
daa
aam
outsb
bnd
add
jp
or
cmc
mov
shll
lods
xchg
add
jb
adc
jae
push
aaa
and
stos
and
mov
cmp
cs
and
xchg
fisttpl
xorb
popf
adc
adc
loop
pop
dec
popa
adc
iret
xor
mov
push
shrb
push
dec
icebp
jns
test
or
and
lahf
fisubrl
icebp
cmp
push
dec
leave
shrl
push
stc
add
xchg
and
adc
into
adc
jo
push
daa
mov
mov
pop
sub
sub
inc
xchg
roll
push
scas
test
out
push
xorb
xorb
cmp
movsb
pop
xchg
imul
repz
xor
mov
int
push
pop
cmpsb
stos
sub
dec
jmp
mov
mov
inc
jne
pop
sbb
in
cltd
in
mov
jecxz
ficoms
inc
sbb
xor
xlat
mov
lret
push
xchg
test
push
pop
fsts
mov
mov
pop
or
sti
mov
pop
imul
icebp
pop
or
lods
enter
incb
iret
jmp
sbbl
sbb
jp
xchg
jp
sti
mov
xorb
sub
ffree
mov
mov
and
mov
rcrl
fwait
cmpsb
and
lahf
or
and
std
adc
aaa
push
in
cmp
mov
fmuls
loopne
adc
xlat
sbb
negb
push
xchg
adc
pop
lea
add
push
mov
mov
nop
xor
cld
mov
and
into
fdivrs
push
ljmp
std
mov
add
aam
dec
stos
xlat
out
sub
in
hlt
test
shll
push
fwait
pop
or
dec
fstpl
aas
xor
movsb
or
inc
fstpt
fmul
add
jp
roll
rcrl
and
or
adc
fldenv
inc
test
rorl
fnstcw
dec
js
les
adc
inc
fs
or
repnz
ljmp
mov
jge
test
popf
sbb
mov
std
jp
pop
rclb
mov
add
add
mov
das
jge
dec
xlat
cmp
frstor
jp
lea
jnp
aam
faddp
mov
and
sti
and
push
fnstenv
cld
sbb
ljmp
negb
dec
js
inc
shrb
loopne
or
jl
lret
scas
xchg
sub
adc
in
popa
xor
sahf
dec
push
adc
mov
mov
add
shrl
xor
es
push
ja
enter
and
sub
loope
and
dec
sub
cltd
xor
and
inc
scas
pushf
inc
movsl
adc
es
rol
jp
mov
push
xor
insl
jmp
mov
push
stc
and
lods
and
jb
leave
add
or
xorb
mov
mov
adc
test
pushf
dec
dec
shl
mov
jle
nop
es
mov
fistps
push
dec
mov
jle
xlat
lahf
das
xchg
jmp
ss
lea
stos
ljmp
inc
fcoms
gs
dec
jp
mov
jae
fcomp
stos
pop
out
xchg
mov
out
into
lahf
dec
in
int3
out
inc
outsl
lahf
sbb
mov
and
loopne
sub
xchg
xchg
cwtl
or
fisubrs
ds
lods
jne
sarl
shr
fistl
sub
sarl
push
test
or
push
rcrl
popa
add
xor
popa
pop
sub
dec
outsb
fstps
ret
push
test
stos
fidivrs
insb
xor
lods
inc
adc
cmp
inc
es
mov
mov
ret
mov
sub
bound
adcb
popa
dec
sbb
pop
sbb
test
cmp
ds
into
ds
lock
hlt
ficompl
imul
cmp
and
pop
and
and
sbb
aas
push
push
mov
call
insb
loope
out
push
mov
and
popf
jne
mov
cmp
add
mov
fstpt
cmc
mov
or
push
cmp
pushf
pop
lods
pop
inc
xchg
pushf
adc
xlat
add
push
xor
xlat
mov
pop
push
aas
mov
stos
rorl
les
ljmp
xchg
bound
scas
jb
negl
sbb
movsb
adc
and
push
sbb
pusha
rcl
jg
movsb
mov
les
sub
sbb
into
mov
lods
mov
nop
test
jle
or
push
test
mov
and
adc
das
xor
ss
push
pop
pop
xor
jae
js
cmp
mov
mov
adc
ja
notl
jbe
les
shlb
sbb
cld
cld
pop
and
jmp
pop
or
mov
lods
push
iret
es
add
dec
test
movsb
jmp
mov
pop
add
andb
mov
mov
ret
insb
inc
gs
lcall
pop
dec
mov
popf
call
mov
fimull
mov
data16
dec
shll
jo
sub
inc
pop
push
imul
pusha
jl
dec
add
orb
dec
popl
add
pop
lahf
or
test
jecxz
loopne
es
dec
rorb
xor
test
ss
mov
loope
add
dec
sbb
sub
in
shrb
out
pop
outsb
cmp
pop
jp
xor
or
ret
inc
in
mov
int
mov
cwtl
test
mov
stos
testb
pusha
fnstcw
mov
std
ret
leave
push
outsl
and
jge
dec
adc
push
mov
sarb
fs
pop
popf
fcomi
in
xchg
push
xchg
and
xchg
mov
shlb
xchg
xor
push
mov
out
mov
cmp
xor
sarb
lret
pop
push
jnp
mov
imul
xor
jae
cmpsl
or
stos
and
adc
mov
aaa
sub
sbb
mov
mov
mov
pop
mov
mov
and
arpl
je
into
push
mov
in
cld
ds
push
mov
fsubl
out
push
or
xchg
ljmp
popf
mov
addr16
mov
test
sub
xlat
jg
int3
movsl
push
adcb
add
xchg
mov
lods
lods
add
push
push
push
das
xor
jb,pn
xchg
movntq
jns
adc
nop
cmpsb
lea
in
pusha
dec
insb
or
cmp
xchg
int
inc
insl
jne
mov
rolb
adc
sbb
in
into
xchg
js
ret
loope
pusha
mov
fistps
push
lret
fwait
push
cmp
loopne
pop
pop
mov
mov
pop
leave
lods
fs
cmp
or
jg
jo
les
or
shlb
mov
sub
inc
pop
push
sbb
mov
fidivl
fdivl
pop
lret
push
es
pop
rcrb
sub
in
mov
sbbl
insl
notb
ret
sbb
pop
jp
adc
idivb
push
jae
adc
add
loop
push
xchg
in
inc
stc
xchg
sbbl
scas
ret
aas
nop
pop
jmp
mov
aaa
pop
dec
dec
imul
mov
inc
rclb
data16
lret
inc
imul
push
fstps
stos
lock
insl
test
cmp
ficoml
out
sbb
mov
addr16
lods
pop
jle
std
push
mov
shll
pop
aam
cmp
mov
push
mov
mov
jecxz
sbb
ror
pop
xor
std
test
aad
outsl
les
repnz
addl
mov
pop
push
inc
or
mov
xlat
and
into
push
pop
test
lcall
test
mov
daa
rorl
aam
pop
cmpsb
sub
pop
leave
cmc
dec
shl
mov
push
arpl
arpl
mov
mov
test
fs
sbb
outsb
std
add
jne
loopne
dec
jle
insb
pop
mov
cmp
cs
int3
fisubrl
icebp
jns
jno
mov
sbb
mov
add
shrb
push
push
jecxz
ficompl
jae
orb
add
push
pop
pop
xor
fcoms
ret
stos
arpl
pop
xlat
shl
in
adc
jae
cmp
test
lea
mov
mov
pusha
lret
nop
mov
ja
cmpb
scas
movsl
mov
jae
int
and
cmp
inc
sub
fisubs
fnstcw
mov
popf
xchg
arpl
cmpsb
xchg
fbstp
cmp
add
xchg
shrb
xlat
sub
ret
or
iret
int
sub
sub
mov
pusha
mov
or
xor
pusha
push
dec
scas
cld
dec
and
icebp
dec
dec
mov
pushf
sbb
and
cli
int
cs
sub
les
into
cmp
pusha
cltd
or
xor
je
lea
or
dec
incl
cwtl
mov
sbbb
push
inc
rorl
imul
orb
mov
incl
lods
cmp
jecxz
sbb
fsubs
mov
dec
adc
push
jbe
pop
movsb
or
push
bound
dec
ficompl
or
outsl
test
xor
stos
push
lret
sti
mov
jecxz
and
addr16
xchg
fstpl
mov
movsl
inc
fiadds
fldt
sbb
int
insl
push
push
jns
sbb
sbb
in
add
xchg
pop
sbb
mov
sub
pop
cmpl
xor
ds
cmp
js
mov
dec
mov
imul
repz
sbbb
cmpsl
iret
mov
jo
sub
sahf
push
mull
jb
mov
cmp
sti
out
dec
jmp
aaa
mov
adc
shll
iret
push
outsb
adc
mov
or
pusha
popf
sbb
out
in
jno
mov
pop
fsubs
into
inc
xchg
mov
popf
sub
sbb
sub
pop
in
ljmp
jg
dec
adc
xor
fwait
cmp
or
mov
out
xor
ds
enter
jns
sbb
pop
int3
popf
and
jl
sbb
xor
pop
or
xor
stc
sahf
imul
cmp
push
loopne
pusha
dec
mov
pop
xor
xchg
cmp
dec
popa
in
push
rolb
sarb
iret
inc
xchg
scas
leave
out
xchg
lods
icebp
outsb
popa
mov
push
cld
mov
shl
movsb
ljmp
jecxz
pusha
jno
loop
rolb
dec
imul
xor
jecxz
and
cmp
add
push
adc
dec
fcoml
pop
sbb
adc
inc
in
shrl
xor
sbb
fldenv
std
sbb
add
pop
mov
cmc
call
icebp
mov
xchg
cld
mov
push
sub
shl
add
pop
mov
int
stos
xor
jmp
push
adc
pop
jno
daa
clc
fstl
xorb
popa
push
in
push
aas
pop
imul
jl
fwait
imul
push
xchg
cmp
cltd
or
ret
dec
add
mov
and
in
ljmp
es
mov
mov
ret
jmp
xorl
pop
idiv
and
dec
popf
mov
inc
jne
mov
xchg
adcb
iret
jns
mov
push
leave
sub
in
pop
pushf
cltd
cmp
push
fiaddl
inc
ret
js
les
add
sbb
jne
cmp
mov
or
mov
and
insl
inc
sbb
pop
dec
xchg
fistps
sub
hlt
lea
je
inc
ret
lea
repnz
cmp
cmp
aaa
xor
popa
push
adc
pop
push
cmp
or
lock
xchg
sub
push
pop
inc
les
push
dec
shl
sub
out
arpl
mov
addr16
cs
jns
fnstcw
cld
fsts
jb
jle
cld
jecxz
mov
jns
ljmp
leave
push
or
pop
lcall
xor
sti
mov
cmp
lea
insb
cs
gs
inc
clc
or
cmp
adc
pop
in
lahf
cmova
sub
and
lret
mov
mov
imul
inc
je
mov
mov
jne
stc
addr16
es
cmpsb
sbb
clc
and
sbb
mov
ja
addl
loopne
lea
jb
popf
cmc
xor
lahf
add
outsb
add
jns
adc
imul
jns
cmpsl
out
mov
mov
imul
push
push
jge
lret
sub
pusha
repnz
inc
stos
mov
pop
adc
mov
jb
inc
push
xchg
cltd
pusha
adc
fnstenv
mov
or
push
push
insl
movl
mov
repz
divb
mov
adc
mov
cmpb
imul
cs
mov
sbb
and
stc
cwtl
or
fadd
jl
pop
jne
or
aam
int3
mov
cmpsb
hlt
mov
loopne
cmp
xchg
sbb
push
mov
cmp
mov
xchg
pop
and
xor
adc
mov
mov
out
and
push
movsl
and
pop
js
xchg
mov
dec
cli
sub
jb
jns
fstpt
and
inc
sbb
mov
ficoms
push
and
push
mov
xor
lock
cmp
aad
hlt
xchg
or
mov
adc
scas
movsl
jl
sbb
pushf
mov
add
adc
sahf
xchg
scas
les
jne
pop
jnp
mov
es
jp
es
or
inc
xchg
jg
idivl
adc
cs
in
and
mov
in
mov
sub
jne
ret
call
sahf
fcmovnbe
pusha
jge
sbb
int
outsl
push
sbb
in
add
inc
dec
pminsw
imul
stos
mov
or
jbe
mov
xchg
dec
pop
sbb
enter
dec
xor
fucomi
sub
sub
and
cmpsl
ret
xchg
mov
jnp
adc
or
and
rol
sbb
nop
test
xchg
jae
fcmovbe
je
or
xchg
std
lret
cwtl
sti
or
mov
pop
pop
adc
leave
push
loope
psubb
fs
or
sarb
out
xor
popa
cmpsb
test
sub
fsubs
scas
andl
fwait
movsb
lods
movsl
jne
push
iret
mov
push
arpl
jns
cmp
repz
test
test
repz
cmp
sub
test
jl
das
addr16
rcll
repz
decl
mov
push
ds
mov
dec
out
enter
jge
repz
daa
outsl
push
mov
int
es
mov
scas
adc
lea
inc
xorb
sbb
imul
cwtl
fwait
into
out
dec
mov
xor
push
insl
lret
jne
cmp
sbb
icebp
xor
pop
int
std
fdivl
xchg
ljmp
sbb
repz
mov
test
dec
sbb
repnz
lods
inc
inc
pusha
mov
stos
test
mov
out
jmp
push
pop
in
pop
dec
xchg
cmp
fstp
std
mov
dec
push
xor
jl
mov
cmp
cmp
lcall
push
movsl
ljmp
mov
xlat
rcr
mov
insl
pop
push
out
xchg
mov
pusha
and
rcrb
push
les
or
dec
sbb
scas
xor
xchg
mov
sub
aas
pop
mov
sti
int
stos
arpl
lock
aad
xchg
pop
pop
popa
mov
test
sbbb
mov
jg
pop
iret
ljmp
shr
add
sti
push
popf
mov
add
mov
xchg
test
add
mov
loopne
add
pop
ds
cmp
jl
outsl
mov
lods
and
lea
pop
repz
fcoml
scas
cmp
call
mov
mov
int
pushf
sbb
or
xchg
inc
jnp
fdivrs
out
inc
outsl
and
xchg
ljmp
addr16
sbb
mov
jmp
xchg
dec
aam
mov
negl
aad
pop
orl
sbb
jl
push
sbb
adc
jmp
xchg
inc
cld
out
add
cmpsb
lcall
adc
sbb
aaa
in
js
mov
inc
mov
jg
lahf
mov
jbe
adc
pop
inc
jmp
out
jl
push
add
aas
in
xchg
fs
pcmpeqw
pop
adcb
ds
xor
push
sbb
dec
shlb
aad
add
add
mov
hlt
push
movups
pop
lahf
pop
ljmp
sbb
test
aaa
xor
xchg
fistpl
sar
dec
jbe
mov
push
sbb
aaa
xchg
popf
rorl
jl
or
sbb
cltd
rcll
loope
fsts
or
test
or
xchg
or
mov
lock
lcall
push
inc
push
sub
xchg
xchg
inc
test
jne
imul
bound
or
jb
addr16
mov
ds
js
das
imul
sbb
fucomip
popa
dec
icebp
sbb
jg
dec
inc
arpl
push
ja
ljmp
rdmsr
adc
xor
push
enter
xchg
add
cmp
add
mov
push
xchg
cltd
adc
inc
int
xor
add
and
mov
jmp
outsb
mov
cld
xor
sahf
xor
push
fsubr
iret
add
sub
mov
cmpsl
dec
dec
sub
sbbl
jmp
inc
or
call
inc
sbb
xor
imul
cmpl
dec
push
sbb
xchg
jne
or
repnz
sbb
adc
jbe
jae
nop
out
lret
mov
inc
push
jne
cmpsl
shll
cs
nop
cld
aad
cmpsl
cs
sbb
push
lods
cmpl
ljmp
pop
cmp
sub
or
pushf
or
out
adc
lahf
jb
cmpsl
cld
int
xor
lahf
repz
fadd
sub
out
jecxz
xchg
jg
push
insb
add
mov
add
cmc
fdiv
stos
mov
pop
repz
ljmp
ljmp
bound
jmp
adc
dec
add
jmp
dec
les
jns
pop
jmp
push
push
jecxz
sub
stos
mov
insl
inc
inc
jge
push
jle
fidivrs
pop
dec
out
jno
addl
cli
xor
mov
fnstcw
cltd
fisubl
or
sti
lock
data16
addb
sub
adc
iret
sbb
dec
xor
mov
jmp
adc
dec
rcrb
mov
mov
push
jmp
test
data16
push
mov
dec
mov
in
add
rclb
or
add
cmp
sub
roll
cmp
add
xchg
rclb
push
adc
mov
ds
inc
fisttpl
cmpsb
call
mov
pusha
cmp
pop
pop
inc
and
cmc
pop
push
fnstsw
scas
sbb
sub
pop
mov
xor
xor
lret
xchg
xchg
push
xchg
mov
sbb
out
aaa
repz
cmp
mov
push
data16
movsl
inc
rcll
mov
icebp
int3
cmp
scas
popf
out
call
icebp
or
subb
mov
pop
test
sub
dec
sub
cmp
dec
dec
mov
pop
jecxz
mov
lahf
inc
shrl
nop
xor
pop
int
rclb
iret
jbe
lret
cmp
and
xchg
jecxz
jb
push
stos
xchg
shll
in
or
in
xchg
xchg
mov
nop
stos
ret
lret
push
mov
xor
std
jmp
lret
adc
std
or
push
fstps
out
repz
xchg
jmp
jae
mov
jns
push
lods
push
mov
mov
mov
call
sub
stos
mov
test
mov
mov
fisttpl
lock
dec
or
mov
dec
rcll
in
dec
sbb
popa
loope
sbb
mov
fdivl
imul
int3
fbstp
ljmp
pop
mov
xor
or
sbb
lret
jbe
push
jg
loop
popa
mov
imul
ret
shlb
leave
clc
shll
mov
jge
loope
aam
pusha
xchg
push
pusha
imul
aad
iret
ret
pop
push
popa
mov
fildl
cmp
out
xchg
jb
mov
mov
jno
outsl
jle
cmp
das
not
aas
sub
add
push
rcrb
or
sbb
and
in
mov
mov
sti
js
in
or
add
jle
loop
not
mov
sbb
inc
aam
mov
cmp
jp
mov
clc
and
mov
js
mov
push
pop
push
dec
cmp
sub
enter
outsl
add
dec
fiaddl
mov
idivl
mov
add
movsl
pop
adc
ror
lock
call
push
cli
mov
hlt
lahf
jno
inc
jbe
add
loop
scas
aad
mov
fwait
enter
xorb
sti
cmp
lds
cmp
test
ret
dec
xchg
mov
testb
pushl
push
adc
leave
push
sti
mov
jle
or
adc
int
cmc
cmp
nop
aam
mov
mov
push
pop
lahf
insl
jmp
xor
out
dec
xor
xchg
xchg
das
sub
or
lahf
and
mov
xchg
adcb
push
test
lods
cltd
xchg
inc
in
mov
iret
je
movsl
pop
adc
adc
cmp
insb
ljmp
push
repz
dec
pop
mov
mov
add
int
ds
add
mov
lret
std
sbb
test
cmp
out
scas
and
push
inc
test
mov
add
mov
mov
inc
ss
jmp
clc
fstl
aad
in
xor
xor
mov
cmc
pop
pop
xchg
mov
movsb
jne
jo
jmp
lods
push
and
pop
and
movsl
add
and
mov
inc
push
pop
xor
cmpsb
fsubrs
nop
jg
jno
add
dec
addr16
mov
adc
dec
push
add
std
pop
sub
add
mov
stc
pop
ja
push
cltd
insl
test
dec
cmpsb
mov
sub
sub
xchg
daa
adc
pop
mov
jno
adc
in
aam
mov
stos
les
movsl
fs
inc
andl
fs
movsb
in
xchg
aam
das
sub
cmp
pop
xchg
fmuls
sub
movsl
push
repnz
arpl
push
pop
or
mov
loopne
enter
inc
sub
xchg
divl
pop
shlb
shlb
cmp
orl
sub
jmp
out
cli
adc
or
or
loopne
push
or
jp
jne
stos
inc
push
push
imul
bound
adc
xchg
aaa
dec
lret
xlat
xchg
inc
dec
loop
jo
std
fldt
push
pop
and
cmpb
call
mov
mov
outsb
push
jle
mov
notl
movsb
fadd
push
cmp
call
jb
mov
adc
or
std
mov
mov
xchg
test
sbb
int
pop
js
repnz
xchg
and
enter
xor
push
jmp
inc
nop
fs
insl
mov
test
jl
mov
mov
xor
xor
jns
and
fs
push
sbb
cwtl
jae
scas
stc
sub
pushf
cli
clc
andl
and
inc
pop
in
pop
sbb
sub
popa
pop
ret
outsl
loop
call
pop
xor
and
jp
test
je
popa
mov
pop
ja
fs
ret
pop
adc
or
int
push
inc
and
js
rcll
jne
testb
jg
xchg
jb
xchg
and
mov
dec
dec
addb
cmp
into
mov
fistps
fld1
dec
mov
push
lret
mov
or
pop
dec
movsb
iret
les
cmp
mov
add
mov
mov
loop
inc
push
repnz
xor
inc
jnp
imul
scas
jno
in
aam
sub
inc
mov
sbb
mov
lods
push
push
outsb
inc
gs
testl
mov
or
movsb
xor
stc
mov
leave
mov
ret
mov
and
jmp
jge
and
mov
lods
mov
imul
sub
sub
sbb
sub
and
aam
inc
test
push
mov
cmp
sbb
push
call
xor
push
ljmp
xchg
mov
mov
dec
dec
xor
push
cmp
push
int
aad
sbb
and
movl
mov
test
iret
loop
sub
mov
mov
orb
call
lret
lret
jle
ret
ss
sub
sahf
insb
xchg
or
xor
adc
fldl2t
rolb
icebp
aaa
mov
mov
fdivrp
hlt
insl
loopne
clc
sbb
stos
xlat
push
mov
ret
cmp
popf
in
movsl
sbb
jo
js
jbe
sub
stos
je
inc
mov
sub
push
xor
dec
lds
inc
jmp
xchg
cmp
ficomps
outsl
pop
cwtl
pop
iret
xor
push
sbb
lahf
dec
mov
ret
jo
aam
xchg
out
pop
std
cmpsl
sub
dec
inc
dec
sti
inc
aaa
and
adc
mov
dec
sub
and
insb
mov
fimuls
mov
pop
mov
call
pop
jle
dec
ljmp
pop
mov
push
aaa
insl
rclb
les
lods
or
xor
pop
push
mov
or
dec
iret
pop
pop
mov
nop
ss
aam
sbb
pop
ja
stos
js
lds
adc
cmp
negb
and
lods
and
fimuls
test
lret
push
push
mov
ljmp
int
pop
repnz
jae
jle
negl
stos
lods
scas
cmp
mov
inc
adc
mov
inc
mov
xchg
cltd
add
lret
sbb
add
jmp
test
pop
xor
fnstsw
push
mov
out
cmp
ja
add
inc
and
sub
lret
rcll
xor
sbb
ret
mov
cmp
mov
lcall
jns
pop
in
scas
scas
mov
cmp
jmp
sti
rcr
repz
xor
xor
fs
sub
call
push
or
mov
leave
cwtl
or
adc
push
xchg
cmp
imul
cmp
inc
test
out
out
shrl
aas
cmp
jo
mov
pop
add
xchg
popf
xlat
addb
das
xchg
sbb
lods
stc
mov
jl
jns
jno
pop
mov
unpcklps
mov
push
call
sarb
jp
cli
dec
add
call
inc
stos
jno
or
mov
or
jo
pop
add
adc
dec
push
popa
cwtl
imul
xchg
lods
add
pop
jae
iret
in
xchg
fiadds
push
pop
imul
add
popa
jp
push
add
icebp
and
pop
popa
lock
dec
or
fsts
lret
xchg
add
outsb
dec
fs
push
push
jmp
popa
sub
mov
ret
cmp
les
sahf
push
jb
inc
sbb
pop
inc
mov
fistps
fs
jno
jg
mov
jne
and
pop
dec
popf
negl
push
pop
mov
stc
mov
out
jp
jne
jle
rcrl
mov
aam
pop
mov
data16
xor
or
aas
mov
popf
call
sub
sbb
jo
jns
inc
adc
outsl
sub
mov
hlt
jmp
lahf
adc
mov
in
rolb
add
pop
cmpsb
xor
scas
dec
ret
push
mov
push
mov
adc
xor
fwait
movsl
mov
rcll
dec
mov
fdivrs
or
cmp
sbb
xor
rcrl
push
mov
shl
jno
adc
test
xor
xor
inc
xor
imul
into
mov
out
adcl
loope
adc
scas
xchg
outsb
pop
cltd
stc
sub
adc
addl
cmp
fcoml
aam
or
outsl
cmpb
out
push
adcl
mov
ret
push
cs
sarb
mov
sarb
adc
nop
test
xor
stos
add
addr16
push
sbb
ja
push
mov
loop
loop
fcoml
in
in
fidivrs
sahf
xchg
xchg
je
lcall
xor
loop
jne
out
sbb
ret
xlat
push
std
cmp
dec
xchg
xchg
cmp
inc
lcall
fstl
out
xchg
jae
fisubrl
sub
and
rcrl
push
sub
mov
mov
mov
add
push
and
dec
sub
mov
mov
aam
fldt
sbbb
mov
into
int3
in
xor
push
mov
fnstenv
xchg
loope
or
xorb
adc
insl
adc
stos
sub
or
mov
mov
lahf
fildll
mov
std
lahf
repz
stos
or
add
and
xor
and
sub
sbb
pop
out
mov
clc
cmp
inc
insl
adcb
jecxz
push
fnstsw
loop
lret
js
cmp
or
jge
test
or
movsb
mov
popa
push
adc
xchg
cmpsl
test
fwait
sbb
add
xor
scas
mov
ljmp
pop
arpl
insb
xchg
dec
jp
cmc
aas
xor
push
std
dec
sub
cwtl
inc
mov
shlb
syscall
dec
push
leave
mov
jl
cmpsl
or
mov
push
ljmp
lods
cmp
mov
mov
cmp
bound
mov
xlat
cmpsb
push
push
out
jae
push
call
add
mov
cmp
xchg
lret
push
jno
xchg
sub
cltd
clc
add
repz
jmp
jne
xchg
push
inc
in
pop
out
hlt
gs
push
sub
iret
add
fimull
pop
push
mov
jmp
dec
add
bound
hlt
inc
pop
sub
push
xchg
jns
ds
fistpl
out
and
mov
fmul
cltd
mov
inc
flds
xchg
cli
repz
pop
jge
out
das
fisubrl
dec
xchg
jb
sub
add
dec
xorl
xchg
outsb
inc
fisttps
add
daa
inc
adc
push
aam
mov
mov
repz
sub
sub
stos
aaa
je
pop
mov
ja
lret
adc
jg
popa
jbe
lret
testl
out
test
add
inc
sbb
lds
cmp
aas
push
sahf
mov
nop
sub
or
popf
cmp
and
ss
xlat
and
icebp
or
mov
xchg
test
sbb
pop
mov
jge
add
jge
pop
xchg
orl
mov
push
xchg
daa
and
pop
xchg
or
push
pop
sub
mov
fucomp
add
jns
xor
push
dec
loope
outsl
mov
call
hlt
adc
ja
fs
dec
jge
pop
cmp
push
cmpsb
sub
jne
stos
xchg
xchg
inc
push
sbb
ret
mov
es
xacquire
adc
fldl
mov
xor
ret
mov
cmp
test
push
and
insb
xchg
dec
test
test
push
inc
cmpsl
mov
or
mov
mov
mov
inc
xor
jne
out
cmpsl
test
cmc
shlb
or
pop
cmp
xchg
nop
fscale
or
xchg
jl
mov
mov
mov
lcall
jecxz
cld
in
lahf
cmc
pop
popa
pop
xchg
loop
out
loopne
stos
xchg
adc
mov
test
shll
sbbl
push
lahf
xchg
cmp
and
adc
in
scas
pop
sahf
xchg
movsl
movsb
iret
pop
in
iret
jno
cmc
imul
scas
cmp
and
repz
lock
xchg
or
repz
sub
xchg
inc
repz
repz
int
xchg
popa
inc
cmp
add
loopne
xchg
pusha
mov
dec
push
or
call
in
xchg
xchg
enter
fisubl
ja
loopne
add
rcrb
mov
insl
inc
mov
sub
adc
std
mov
imul
sbb
mov
mov
in
repnz
ljmp
adc
sbb
popa
add
sti
mov
add
movsb
push
imul
inc
hlt
nop
sub
and
xor
jnp
xor
mov
sbb
pop
cld
adcl
mov
lret
std
pop
dec
cmp
push
scas
test
xchg
adc
fwait
rorl
jecxz
popa
push
js
add
pop
and
jae
loop
inc
iret
insb
pop
and
xchg
or
or
mov
outsl
or
mov
dec
std
shlb
cmp
icebp
xor
inc
mov
fs
push
mov
mov
sbb
pushf
clc
cmpsl
iret
xchg
sbb
stc
cmp
fistl
lcall
cmp
sar
bound
mov
test
mull
fnstenv
push
and
and
lods
es
or
imul
in
lret
fs
sub
xchg
adc
insb
aad
or
jg
lds
sti
pop
mov
sub
lods
stos
testb
fldl
sbb
adc
loopne
xor
mov
xor
std
aas
ror
mov
shll
mov
xchg
or
xlat
mov
std
gs
repnz
iret
jge
dec
sbb
jl
inc
fwait
xor
push
and
in
outsl
jne
push
add
mov
std
ss
or
nop
cs
push
bound
pop
push
rcrl
repz
dec
lock
addr16
fnstcw
sti
outsl
out
popf
push
and
push
aam
dec
pop
repnz
rcr
push
jnp
xlat
into
lahf
enter
push
clc
or
cltd
cmpsl
icebp
inc
inc
stos
or
iret
jno
adc
push
es
cmp
in
sub
movsb
xchg
push
sbb
xor
dec
mov
or
shrl
sbb
aas
inc
fnstsw
push
test
pop
jge
or
hlt
pushf
enter
std
sbb
out
popf
mov
sbb
mov
sub
cmp
xchg
aam
aam
xor
fists
sbb
rolb
cmp
adc
fdivrp
add
shrl
adcl
fisttps
pushf
pop
gs
jb
lods
sub
stc
in
xchg
adc
inc
test
std
loope
aam
cs
movsl
dec
mov
pop
add
lcall
int
jno
lret
sub
push
jo
enter
or
fs
sbb
xchg
dec
cmp
imul
popa
cmp
jo
movsb
mov
adc
cld
std
inc
jg
xor
jl
push
inc
lods
push
fidivrl
out
pop
aad
mov
dec
add
push
testb
sbb
push
repnz
fnstenv
lea
jle
xor
add
outsl
popa
arpl
mov
inc
pop
aad
flds
jge
fsubrs
pushf
sbb
cmp
jns
jo
loopne
cmp
stos
mov
xlat
jae
mov
pop
sbb
ds
in
dec
jo
xor
imul
mov
test
sbb
arpl
shr
or
cmc
adc
sbb
sub
mov
mov
ror
cwtl
lods
popa
push
cmpsb
popa
idivb
popa
popf
xor
push
in
push
in
adcb
sub
insb
jo
inc
sub
xchg
stos
inc
js
add
mov
add
adc
aas
add
and
nop
test
pop
add
sbb
fistpl
jns
out
das
jl
inc
stos
cmc
pop
es
mov
fdivrs
daa
cmp
es
scas
shlb
xor
fistps
movsb
pusha
ret
and
fidivs
loopne
jl
test
mov
mov
sti
lret
ljmp
lret
aaa
cmpsb
sbb
cltd
lods
jle
cmpsb
iret
sbb
push
rclb
clc
rorl
mov
cli
je
pop
cmp
js
push
mov
arpl
inc
push
cli
movsb
pop
in
push
mov
loop
cmp
push
aam
push
loopne
dec
pop
dec
push
test
xchg
vphaddbq
sbb
mov
cs
adc
xor
mov
bound
notb
andl
dec
sub
push
mov
and
push
scas
fsubrs
jne
out
shlb
das
icebp
stc
in
push
lret
xor
mov
dec
xor
mov
mov
cmp
fldl
and
outsb
inc
and
sub
jge
jg
inc
and
ret
cltd
testb
aaa
jge
outsb
addr16
dec
bound
nop
insl
mov
stc
dec
add
sbb
mov
roll
leave
stc
lcall
pop
xor
pushl
stos
out
mov
popf
xchg
cmp
addr16
scas
jbe
jnp
iret
orl
addr16
cli
cmp
pop
sub
iret
or
rcrl
mov
fldt
jb
dec
enter
or
dec
dec
mov
iret
cs
mov
mov
js
mov
cld
sbbl
adc
aas
pop
shr
inc
pop
and
aaa
imul
mov
dec
rol
stos
out
add
daa
insl
mov
aam
insb
rclb
cmp
aam
push
sub
pop
in
jbe
inc
call
nop
cmp
xor
xchg
or
xor
test
cmp
and
ret
loop
fnstenv
cmp
addr16
jmp
int3
and
dec
xchg
adc
dec
cmp
iret
ss
mov
repnz
shrl
sub
notb
lahf
pop
add
add
repnz
lahf
test
js
xchg
xlat
enter
or
aaa
cwtl
les
aas
lcall
push
hlt
adc
lds
xchg
cmp
shrl
cmp
outsb
and
mov
inc
or
into
cmpl
xor
pop
lret
popa
cmp
faddl
dec
dec
jecxz
inc
add
and
cmpsb
jb
jg
imul
mov
inc
repz
mov
call
in
jecxz
addl
clc
pop
sarl
cmp
arpl
mov
xor
das
push
adcb
pushf
lret
arpl
aas
push
mov
xchg
pop
js
in
in
xor
cs
mov
add
mov
cmp
push
and
mov
adc
or
cmp
jecxz
fbld
enter
aaa
sub
pop
test
data16
and
mov
sub
inc
xchg
xchg
add
pusha
pop
imul
mov
mov
fcomi
mov
scas
leave
lock
mov
data16
jno
xchg
roll
xor
sub
jbe
iret
jle
add
out
or
inc
and
ret
icebp
sbbb
sub
xlat
jb
test
cmp
popf
fwait
push
jg
das
cmp
jbe
add
jb
in
lock
cs
jo
enter
mov
mov
mov
mov
out
fdivs
adc
ljmp
pop
inc
ss
sub
push
jbe
xchg
pop
les
push
dec
aaa
sbb
inc
pusha
pop
cmpsl
inc
cmc
push
pop
mov
lock
rolb
mov
adc
test
jp
push
xor
pop
loopne
mov
inc
loope
push
sahf
fsubl
adc
icebp
mov
test
ret
jne
or
cld
sbb
sub
in
stos
adc
ja
into
leave
ja
jl
mov
rolb
mov
mov
setnp
test
or
and
push
gs
lock
adc
out
movsb
fiaddl
fldt
mov
xor
pop
hlt
shll
in
iret
sbb
xchg
sbb
mov
cltd
sahf
aas
mov
int3
pop
rorb
dec
jg
mov
test
lea
mov
push
push
inc
das
xchg
xlat
repz
rorb
pop
dec
lds
jne
cltd
xchg
sarl
mov
adc
scas
mov
ds
es
or
inc
pushl
jae
xor
jns
mov
mov
pop
cmc
mov
movsl
test
mov
je
out
jno
test
into
pop
idivl
xor
jnp
inc
mov
and
test
adc
sub
cmp
rorb
sub
popf
addr16
out
and
add
lahf
js
xor
sub
lea
subl
inc
xchg
pushf
sub
repnz
mov
mov
lret
std
pop
push
push
insl
jmp
push
cs
push
mov
aad
mov
xor
sub
sbb
sahf
inc
jne
cmp
jl
iret
imul
pop
push
pop
icebp
mov
mov
andb
icebp
xchg
adc
push
rep
jge
cmpsl
int3
sbb
or
std
popf
add
std
mov
test
jae
xchg
sub
dec
push
lcall
sub
rcr
pop
pop
push
adc
push
out
adc
push
fistl
test
jb
imul
push
jnp
sub
add
mov
pop
mov
mov
fistl
pop
es
loope
xchg
and
pop
sub
inc
leave
mov
rcll
ds
fs
clc
roll
xchg
imul
jmp
xlat
mov
inc
inc
or
mov
xchg
lds
fnsetpm(287
mov
loope
insb
fsubr
pop
or
cmpsb
inc
push
lock
inc
loopne
arpl
pushf
aam
mov
cmp
outsb
andb
mov
xor
push
lret
jbe
test
push
and
inc
sti
or
xchg
sbbl
xchg
or
xchg
ds
xchg
scas
les
orb
push
test
ss
shlb
call
mov
incl
dec
dec
inc
repz
aad
aad
cmpl
out
out
scas
mov
xchg
adc
xchg
movsb
das
mov
rcll
sbb
test
push
or
jp
cltd
xchg
push
mov
sbb
shr
mov
ljmp
stos
push
sub
les
imul
xchg
pushf
push
jle
mov
and
loope
lods
mov
pop
bound
mov
pop
dec
mov
xchg
imul
loope
lds
mov
cwtl
xchg
lock
push
out
rcl
jl
in
sub
push
lods
lods
test
sub
ret
mov
cli
std
pop
test
sbb
inc
push
insl
xor
xlat
outsl
out
rcrl
dec
mov
cmp
pop
inc
mov
test
jbe
mov
xchg
adc
and
cmpsl
add
aaa
imulb
dec
fistl
lea
jge
jecxz
ret
mov
movsb
jle
pop
jle
pop
mov
das
adc
int3
bound
stos
stos
sbb
xchg
inc
ja
sub
inc
or
inc
stc
jle
fisubl
pop
mov
sbb
xchg
loop
test
fadds
mov
jns
mov
mov
mov
add
mov
dec
mov
jl
cpuid
pop
test
iret
int3
mov
jl
sbb
add
cmpsb
popl
pop
out
test
call
outsb
xchg
iret
aad
hlt
adc
js
jl
push
cmpb
sbb
jmp
inc
cmp
aad
loope
mov
mov
mov
enter
or
push
ror
lds
outsl
in
mov
out
sub
stos
adc
addr16
test
repz
dec
repz
jno
inc
dec
loope
xor
es
mov
or
dec
push
in
ret
xor
adc
repnz
xor
xchg
gs
inc
jno
mov
cmp
leave
lods
jnp
jp
cld
or
dec
test
mov
scas
jo
xchg
mov
mov
pop
and
test
ss
nop
xor
outsl
adcb
pusha
pusha
fwait
dec
cmpsb
mov
lcall
stc
pop
dec
mov
jp
cmc
lds
mov
pop
push
cmpsb
leave
pop
andb
ljmp
pop
add
mov
sub
insl
sub
mov
nop
mov
pushf
lock
cmp
lcall
xor
sbb
dec
stc
scas
mov
add
data16
adc
cmpl
clc
add
pop
pop
addr16
adc
and
mov
cmp
fsubr
pop
jnp
popa
adc
pop
dec
cli
jno
pop
xor
cmpsb
or
cwtl
sub
pop
sti
inc
cmp
std
test
push
sbb
push
mov
inc
xchg
stc
sbb
adc
call
sbb
fmul
xchg
pop
loope
add
xor
outsl
outsb
mov
sbb
fsubl
fst
fidivrs
xchg
push
arpl
jno
pushf
shll
cmpsl
add
out
mov
dec
jmp
lods
ds
ud2
cmpsl
in
mov
and
cwtl
insb
jae
xlat
push
sub
mov
push
mov
mov
pop
std
inc
sbb
lock
inc
arpl
out
inc
fcoml
or
inc
fistpl
shll
push
std
call
cmp
dec
pop
movsl
test
pop
imul
xadd
pop
fidivrs
pop
iret
adc
dec
lret
pop
mov
insb
mov
rclb
cmpsb
lea
mov
clc
lret
jae
shrb
add
stos
test
sub
jbe
leave
add
dec
xchg
add
lods
push
into
leave
xor
pushf
xchg
and
pushf
lret
xchg
jl
js
xlat
hlt
push
or
mov
push
fistps
inc
jns
adc
cmp
jmp
dec
or
popa
cmpsb
jp
ror
and
es
push
mov
and
clc
cmpsl
repz
xor
xor
pop
imul
add
sub
or
cmpb
sbb
ss
into
and
xchg
lds
dec
push
mov
aam
or
data16
cmpsl
sub
roll
stos
imul
mov
adc
stc
cs
xchg
std
mov
mov
xchg
jbe
sbbb
mov
pop
ficoms
jle
test
lcall
jno
xor
cltd
fst
test
sarb
sbbb
dec
stc
scas
pop
xor
dec
out
enter
sub
add
mov
int3
cmpsl
adcl
andb
ret
mov
mov
into
mov
cmp
insb
test
mov
cmp
fs
inc
or
jno
push
pop
jbe
jnp
iret
pop
rorb
inc
repnz
pop
push
jle
out
popa
pusha
popf
adc
lds
sub
in
cmp
adc
push
outsl
push
dec
xor
rcl
xchg
sub
ffree
cmpsl
xchg
imul
leave
nop
add
cmp
xchg
jae
das
and
cmp
andb
mov
push
int
cmp
dec
inc
inc
mov
mov
push
mov
out
push
push
cmpsl
push
aaa
sti
test
int
mov
sahf
cmp
ret
cmpsb
es
dec
cld
test
inc
mov
add
xchg
adc
fs
imul
add
psraw
sti
adc
xor
lock
lds
xlat
push
mov
movsl
sub
insl
jns
xchg
add
cmp
fldenv
cwtl
lea
add
js
mov
lock
or
pop
add
dec
mov
xchg
inc
xchg
sbb
add
xor
dec
repz
iret
mov
pop
mov
pop
repz
sub
xor
cmovge
movsl
imul
adc
and
je
mov
push
in
loope
in
pop
call
adc
jns
jno
dec
jl
jge
jg
ljmpw
dec
push
cli
jge
mov
xchg
sub
int
js
push
addr16
cmpsb
ret
jae
cmp
std
cmp
jmp
rcl
lods
cmp
stos
jmp
fdivrl
fcmove
push
in
mov
rcr
xor
sbb
mov
adc
ss
shr
sub
push
sub
xor
sti
pop
lock
adc
repz
inc
jl
mov
bound
jge
xlat
mov
inc
movups
leave
outsb
and
fcoms
xchg
jbe
mov
ret
xchg
sub
sbb
aam
frstor
xor
lds
fnsave
xor
subb
cmc
jae
xchg
xchg
ljmp
xchg
xchg
push
xor
mov
imul
pop
push
addb
dec
mov
and
orl
ret
inc
js
cmp
lds
pop
ret
inc
cmc
jns
push
jne
stc
mov
addr16
aaa
fdivs
jb
xor
sbb
add
in
pop
dec
adc
xor
dec
cmp
aad
dec
in
idivb
stos
cmp
xchg
adc
stc
daa
insl
xchg
jno
xchg
push
add
scas
nop
dec
xchg
fstl
pop
pop
insb
mov
mull
outsb
pop
stos
mov
adc
test
inc
pusha
jmp
fadds
sbbb
cld
scas
mov
cld
stc
sub
dec
mov
cmpsl
loop
jne
sbb
pop
in
out
enter
fldcw
dec
cmp
int3
decl
cmp
mov
ror
or
andb
icebp
stc
pop
jnp
add
push
sti
leave
sub
es
mov
xchg
mov
or
jle
lret
cwtl
mov
jp
inc
bound
punpckhdq
pop
fildll
popa
xchg
add
dec
fwait
add
cmp
mov
add
out
sub
popf
cmc
pop
sub
into
mov
out
or
dec
or
imul
test
clc
xor
jg
jl
mov
repnz
outsl
nop
xchg
daa
jl
dec
jecxz
or
pop
je
add
loopne
adc
repz
mov
add
js
icebp
aad
stc
and
sahf
popf
shrl
and
dec
push
stos
pop
xchg
xor
xor
dec
xor
loop
hlt
insb
mov
pop
mov
andb
cltd
or
fidivs
jl
shl
xor
repnz
bound
and
mov
xchg
mov
in
test
out
movsl
mov
sub
test
pusha
jae
movsl
test
imul
fs
test
mov
shrb
fcmovbe
adc
aaa
xchg
sbb
clc
jecxz
inc
repnz
add
jmp
dec
xchg
pop
out
ss
cld
int3
dec
inc
loopne
and
mov
push
pop
in
adc
scas
insb
push
mov
push
in
xor
int3
pop
pop
or
orl
inc
jno
aaa
aad
xchg
jnp
mov
loop
push
scas
in
stos
cmp
movsb
add
add
les
mov
lods
sbb
popa
mov
lods
repnz
lods
jns
pop
adc
push
xchg
outsl
movsb
pop
adc
shl
call
imul
outsl
xor
dec
ror
flds
mov
fs
mov
mov
add
rorl
mov
push
pop
out
call
test
int
ja
mov
insb
mov
lahf
js
pop
sbb
cmpsl
mov
ja
mov
call
push
cld
xchg
sbb
loope
loope
rolb
jmp
nop
adc
cmp
pop
ss
bound
cmp
iret
push
inc
testb
aad
mov
mov
jg
mov
and
addr16
out
mov
fs
push
imul
xchg
sub
enter
loop
inc
and
jae
out
movsl
cmpsl
push
adc
jge
or
fisubrl
insl
test
pop
shrb
test
test
pop
sub
mov
lcall
adc
adc
jp
pop
or
popa
sbb
sbb
stos
int3
pop
push
pop
sbb
into
dec
dec
push
or
mov
jle
mov
adc
sahf
or
daa
popa
sbb
lock
popf
mov
inc
scas
inc
xchg
aam
fwait
xchg
call
cmc
sub
into
ret
movsb
out
jle
into
idivl
lods
mov
cmp
ss
jl
jns
test
loop
xchg
sub
jl
les
pop
inc
in
adc
std
les
pushf
push
out
outsb
push
cld
mov
mov
lods
xor
push
cwtl
push
out
bound
js
mov
fdivp
inc
testb
pop
insb
jmp
mov
out
pop
movl
fsubl
cmpsl
push
nop
int
notl
in
add
sarl
movsb
cmp
mov
push
pop
mov
popa
loope
ljmp
aas
ret
call
cmp
ret
pop
push
xor
jnp
xchg
loopne
bound
insl
cmpsb
fcomp
add
mov
adc
in
mov
out
and
gs
outsb
pushf
lds
repz
sub
dec
pop
sarl
loopne
mov
push
addr16
xor
fildll
cmpsl
adc
cs
jmp
jo
xchg
xor
push
sti
cmp
popa
dec
sarb
push
lods
lahf
cli
popf
inc
pushf
mov
outsb
popl
shr
and
or
rclb
lahf
xchg
xchg
jnp
mov
add
lods
iret
outsl
mov
push
test
xor
xchg
and
jb
es
sbb
jbe
or
push
rdtsc
in
daa
pop
dec
mov
stos
in
test
cli
cmc
jle
insl
cmp
or
sub
pop
pmullw
pusha
lcall
cs
pop
divb
pushf
dec
test
out
jne
cwtl
pop
fsubrs
in
jmp
sbb
dec
inc
add
lahf
cmc
test
and
mov
push
or
lahf
cmpb
rcrl
and
xchg
bnd
cmp
pop
sub
mov
pop
push
in
xchg
aad
jmp
fdivrs
and
out
mov
inc
adc
cld
test
loopne
sbb
xlat
lret
sbb
xchg
mov
cmpsl
cmp
imul
test
addr16
xchg
into
xchg
lds
nop
xor
pop
push
dec
loop
jp
xor
mov
icebp
cmp
sahf
iret
mov
rol
cmp
mov
jo
call
ffree
rcrl
rcr
and
scas
sub
lret
out
and
mov
das
push
into
movsl
leave
cmp
jne
inc
xor
sub
xchg
orl
shrw
push
adc
out
fidivs
stos
lods
mov
dec
jecxz
or
les
adc
push
dec
out
cmp
sahf
rolb
pop
cmp
std
insl
iret
scas
jmp
add
imulb
sarl
fcomp
addl
out
sbb
dec
push
dec
mov
aad
stc
pop
and
movsb
dec
cld
popf
fiadds
add
inc
loope
hlt
jg
pop
fcoml
pushf
pusha
jle
and
xchg
popf
rcrl
jg
or
mov
mov
mov
or
sbb
xchg
cmp
sub
mov
flds
outsb
les
cwtl
push
sbb
mov
rcll
jns
rorb
stc
xchg
mov
daa
pop
in
push
rolb
push
inc
dec
mov
mov
scas
mul
outsl
mov
push
mov
in
jmp
adc
sub
addr16
hlt
mov
divl
fsub
adc
ja
cmp
cmc
add
pop
aas
adc
cld
dec
call
adc
lods
push
jl
int
pop
ret
lock
ficompl
imul
cmpsb
out
data16
push
xor
adc
test
or
adc
dec
movsl
sti
rcrb
mov
cwtl
je,pn
bound
ret
lea
and
sbb
xchg
sbb
sti
xlat
loopne
cmp
add
loop
mov
adc
mov
adc
inc
dec
aas
fdivrl
cmp
jmp
icebp
jl
daa
push
popf
pop
dec
or
mov
clc
outsb
rorb
das
cmp
xor
cmpl
push
aad
sti
cli
inc
or
int
mov
inc
stc
ds
mov
and
sbb
sbb
leave
push
and
jl
test
inc
iret
in
cltd
leave
add
and
psubusb
clc
push
adc
and
push
inc
adc
cld
push
add
push
cld
mov
mov
fists
adc
repz
xchg
xchg
cmp
add
xlat
in
stc
data16
add
in
xchg
and
mov
scas
loop
data16
sbb
stos
adc
mov
ljmp
or
cmpsb
movsb
daa
cli
sti
sbb
pop
push
call
clc
das
adcb
ds
cmp
icebp
jnp
pop
cli
cmp
xchg
jnp
cmp
adc
jae
sub
push
mov
push
outsl
aaa
aad
outsb
jl
sahf
shrb
imulb
adc
popf
mov
cli
shll
or
mov
outsb
xor
or
repnz
dec
rcr
lock
push
inc
mov
les
shlb
lcall
push
and
sub
pop
xor
sti
fbstp
mov
sbb
stos
pop
pop
xchg
iret
lods
add
mov
push
adc
mov
adc
push
pop
jg
jecxz
andl
icebp
push
mov
xor
imull
hlt
push
pop
dec
pop
and
jg
test
jmp
scas
dec
pop
ret
mov
xchg
pop
aad
outsl
mov
ret
cmpsb
hlt
out
push
sbb
push
neg
ficomps
xchg
test
mov
dec
gs
sub
jecxz
push
sti
int3
add
inc
xchg
pushf
ret
outsb
mov
dec
xor
xor
shrl
pop
xchg
push
fsubrl
adc
adc
xor
mov
push
fs
jnp
mov
int3
fstps
jecxz
cmp
or
das
adc
call
sbb
push
imul
std
mov
mov
gs
jo
sub
nop
mov
mov
gs
sub
pop
test
xor
cmp
stos
aad
adc
movsb
rol
sub
out
push
mov
hlt
xchg
fwait
in
pop
add
mulb
cmpsl
push
cmc
aam
sub
mov
and
aaa
sub
pop
test
int3
mov
test
or
sbb
imul
mov
mov
cli
rcrb
push
in
add
bound
pop
cmp
adc
jae
pusha
xor
mov
aam
cmp
jno
adc
xchg
adc
jo
cli
lds
sahf
and
sbb
push
mov
and
fwait
cmp
dec
jnp
call
adc
jo
add
jle
ret
inc
int3
xchg
int
nop
scas
les
pop
jge
xchg
out
dec
mov
pop
add
fs
and
mov
lcall
dec
xchg
test
stos
sub
adc
int3
lea
push
ret
ljmp
dec
xorl
mov
inc
sub
mov
lock
add
jg
popf
leave
cs
fisttpll
and
and
sti
sbb
test
movsb
mov
aad
xchg
inc
or
xchg
xchg
popf
inc
cmpsb
leave
int3
mov
inc
mov
push
xor
cmp
jno
jg
in
arpl
daa
pop
sub
lds
add
loope
fistps
sbb
cmpsb
cmp
icebp
xchg
scas
bound
mov
push
imul
sub
xor
in
out
push
xchg
dec
rcrl
in
adc
cmp
mov
jnp
test
pop
lret
iret
push
das
or
jns
dec
imul
push
mov
lea
mov
movsb
add
aad
or
sub
int3
jge
xor
fsubr
into
jbe
rol
testl
popa
lea
and
call
stos
pop
cmpsb
jecxz
pop
pop
roll
arpl
inc
icebp
lcall
jo
gs
movsb
add
mov
popf
adc
insl
cmpl
in
les
clc
xor
mov
and
xchg
dec
and
jle
mov
adc
sub
shl
sarl
jmp
cli
in
fwait
test
aam
cmpsb
xsave
cli
mov
jp
outsl
cmp
inc
fistpl
data16
movsl
scas
scas
xor
mov
adc
sub
lock
scas
stos
sbb
adc
out
pop
add
movb
scas
mov
scas
xor
adc
sub
data16
or
ja
and
sbb
fcoms
push
jo
mov
jae
movb
and
mov
xlat
popa
clc
or
sar
dec
inc
xchg
imul
or
loopne
jg
pop
mov
jno
cmp
and
das
insl
add
mov
add
sar
and
in
daa
sub
dec
imul
inc
pop
ficoms
xchg
xchg
lahf
in
xor
cmc
cltd
mov
and
lret
lds
sub
lock
icebp
lret
mov
pop
jo
dec
aam
sti
daa
fcmove
and
xchg
adc
push
repz
std
inc
enter
mov
mov
lds
sar
mov
lret
xchg
pop
mov
divb
pop
jg
lock
inc
fwait
iret
push
stos
es
xchg
getsec
inc
mov
jne
ret
and
cld
into
xor
and
enter
mov
or
inc
fisttpll
pop
add
mov
scas
ds
sbb
add
out
iret
das
jle
es
in
jmp
lret
ficomps
pop
pop
loopne
pop
test
js
iret
ds
jns
cmp
add
pop
jle
sub
les
insb
lret
outsl
gs
nop
arpl
int
lock
test
fs
mov
inc
add
and
insb
inc
mov
xor
inc
test
shrb
jns
mov
shll
in
sub
mov
push
pop
xchg
fidivrl
and
cmp
das
mov
lcall
nop
jo
push
insl
movb
lahf
pop
mov
test
loop
jnp
inc
les
or
les
cltd
fbstp
into
sbb
imul
xchg
and
dec
mov
aas
and
cmp
sbb
stc
pop
mov
out
jg
popa
xor
loop
lds
jae
loop
loopne
xor
cmp
mov
fwait
or
mov
push
dec
out
push
popa
push
or
movsl
aad
fs
pop
mov
inc
inc
lret
xchg
pushf
lahf
sbb
jns
mov
mov
sub
int
and
sahf
stos
push
and
dec
jb
cmp
xor
idiv
xchg
lret
push
lret
inc
xchg
push
pop
cwtl
dec
and
add
addr16
shr
shrl
add
lock
stc
mov
adc
pop
fnstsw
mov
cmp
cld
gs
insl
bswap
ficompl
insb
jnp
mov
lods
pop
pop
daa
xadd
cmp
inc
sub
lock
cld
fdivrl
inc
adcl
and
inc
dec
call
jo
and
push
and
sub
xchg
sbb
pop
dec
jo
push
iret
pop
fwait
pop
cmp
scas
mov
fistpl
or
ljmp
in
dec
imul
push
shll
loopne
loopne
push
lret
in
and
lds
ds
in
daa
mov
in
mov
cmc
mov
test
test
sbb
push
and
dec
cmpsb
js
enter
sub
cltd
stc
enter
out
cli
lods
lret
xor
mov
adc
xor
outsl
pop
add
cmp
mov
stos
aaa
nop
adc
addr16
adc
xorb
sub
arpl
outsb
aaa
jg
jecxz
stc
dec
mov
pusha
jecxz
nop
jbe
mov
push
stc
mov
fwait
repz
lcall
insb
popw
xchg
and
iret
add
pop
push
mov
stc
dec
outsb
loopne
out
add
pop
xchg
outsb
inc
int3
mov
and
jl
out
in
sbb
lahf
xchg
shr
sbb
mov
add
movsb
popa
inc
xchg
fidivrs
stos
mov
and
sbb
xchg
jmp
xchg
rcrb
lret
mov
ret
mov
mov
stos
jno
lcall
push
inc
mov
mov
clc
adc
in
insb
or
jmp
push
call
mov
mov
xor
in
imul
cld
and
mov
or
xchg
das
in
vmread
jp
rolb
sub
and
outsb
daa
cmc
xor
push
mov
mov
adc
fidivrl
mov
lods
xchg
xchg
stos
loopne
push
lods
nop
adc
cmp
push
popl
cmp
gs
push
stos
dec
sbb
fiaddl
sbb
leave
in
mov
mov
loope
sbb
adc
push
fdivrl
pop
inc
daa
xor
xor
adc
push
mov
xchg
test
ret
lds
mov
pop
xor
lea
test
push
jp
mov
int
mov
test
cs
push
mov
adc
cmpsb
add
sbb
sub
movsb
fnstenv
mov
mov
in
sbb
or
arpl
enter
adc
imul
and
dec
push
fsubl
mov
aam
es
stos
aas
nop
sbb
mov
pop
es
cmp
mov
jecxz
std
mov
or
imul
arpl
shll
mov
dec
jge
loope
mov
adc
fcoms
mov
mov
or
mov
xor
push
lods
or
pop
jle
dec
stc
in
push
in
pop
fldcw
fidivrs
shl
add
int3
ss
lret
fnstenv
mov
sbb
fisttpll
out
rcrl
loopne
data16
adcb
inc
das
pop
lcall
cmp
icebp
jae
inc
fwait
add
dec
or
sbb
xor
push
mov
pop
sbb
imul
into
push
inc
insl
cmp
imul
inc
iret
mov
jg
jne
pop
xor
insb
pop
adc
lock
ds
sub
xchg
pop
leave
mov
xchg
pushf
ret
or
js
sbb
gs
inc
xor
leave
inc
jns
push
xchg
fildl
lahf
scas
je
mov
mov
push
add
jp
xchg
pop
push
in
jg
inc
pop
mov
xor
test
sti
out
cmpsl
push
jns
adc
loop
xlat
cli
adc
and
pop
jge
lcall
and
lret
mov
mov
out
outsl
sub
cltd
inc
pop
andb
jl
shr
pop
sarb
push
adc
fiadds
pusha
xchg
lock
cld
aad
jns
sub
js
lahf
movsb
fucom
mov
ljmp
inc
aam
lock
jmp
mov
mov
adc
jo
ds
fs
enter
pop
fs
ja
icebp
xchg
fs
push
outsb
sub
lahf
cli
push
inc
jnp
mov
std
aaa
xchg
dec
inc
aad
shrb
push
movsb
addb
test
mov
jnp
mov
mov
mov
jne
inc
sti
mov
jns
cmp
mov
mov
cmp
push
negb
add
xchg
ds
fisttps
mov
adc
sub
bound
std
sbb
inc
stos
lock
ds
cmpsl
lret
and
add
or
arpl
in
jmp
repz
sub
and
jnp
int
pop
out
lret
aas
push
mov
pop
adc
je
adc
pop
lds
stos
outsl
into
loopne
cli
pop
xchg
xor
les
inc
jb
and
loop
imul
test
and
orl
xchg
pop
pop
xchg
lret
sub
nop
test
adc
out
cmpb
push
pop
push
jae
movsb
pop
mov
sahf
popa
cmp
int
scas
xor
fsts
das
enter
adc
jle
adc
xor
mov
mov
push
insb
pop
outsb
cwtl
repz
xchg
pushf
out
leave
inc
pop
push
dec
cld
ret
xchg
jb
sbb
sub
inc
shl
dec
lods
popa
pop
cmp
fbstp
leave
xor
mov
inc
push
push
out
pop
outsb
inc
mov
mov
adc
lret
jmp
flds
daa
ffree
jle
rcl
jae
adc
mov
sbb
xor
pop
mov
mov
repnz
es
aaa
and
sub
inc
subb
adc
mov
call
fstpl
out
enter
int
jno
sarl
inc
out
lret
and
icebp
xor
sub
pop
xchg
push
jmp
mov
sub
icebp
iret
dec
xchg
sbb
stos
js
cmpsb
inc
cmp
call
adc
inc
cltd
cmp
jae
in
testl
push
jb
cmp
inc
dec
mov
and
push
push
mov
push
push
xchg
xlat
inc
shll
fdivrs
fsubl
inc
adc
mov
add
daa
push
mov
insl
ss
xchg
loope
jnp
cwtl
ficoml
push
pushf
mov
dec
insb
std
movb
adc
mov
cltd
out
jmp
add
sbbl
addb
out
fcomip
insb
jge
jnp
add
data16
xchg
dec
jo
lret
in
and
sub
mov
mov
pop
xor
call
hlt
add
rorl
adc
push
cmpsl
in
mov
mov
jbe
ss
fsubrl
mov
mov
dec
cltd
mov
bound
inc
or
xor
mov
shlb
dec
iret
add
xchg
daa
inc
les
mov
jo
lock
es
push
aam
or
dec
ret
out
mov
and
mov
push
ds
nop
leave
pop
test
dec
cmp
imul
inc
lret
fs
inc
aad
lds
pop
add
cmp
sbb
or
push
data16
add
test
imul
or
dec
fistps
or
mov
pop
sub
lock
cmp
testb
cmp
scas
mov
cli
mov
push
ds
sti
lcall
outsb
out
fcmovne
lret
xor
push
lods
ljmp
test
jbe
jbe
popa
iret
xor
and
mov
and
xchg
sub
sub
jbe
adc
sub
call
je
mov
xchg
pop
fnstsw
and
notl
jae
mov
mov
es
adc
mov
push
xlat
sub
sahf
ret
mov
mov
jl
dec
inc
imul
mov
xchg
add
out
iret
mov
push
fsubp
push
test
dec
xor
mov
cli
jnp
cmp
mov
cs
inc
sbb
andb
sti
outsb
bound
lods
inc
mov
or
xor
xchg
xor
repz
clc
cmp
jb
imul
sub
inc
fadds
call
iret
icebp
sahf
loop
fistps
mov
mov
jle
rolb
aaa
test
push
movsb
fidivrs
xor
dec
push
out
push
test
sti
ret
dec
inc
fs
mov
mov
ss
insl
adc
adc
sti
xchg
out
sub
adc
jnp
adc
lods
aam
push
cs
mov
out
sub
js
movsl
xchg
shlb
insb
mov
aas
mov
out
std
test
jnp
and
iret
ja
in
sbb
push
add
dec
mov
mov
ss
and
sub
cmp
adc
pminub
shrb
add
mov
test
mov
mov
xor
inc
in
jp
sbb
lcall
stos
pop
adc
pop
and
loopne
das
repnz
dec
or
enter
sbb
cmp
inc
mov
xchg
cmp
addr16
mov
pushf
or
out
insl
dec
divb
test
mov
div
add
adc
mov
jge
test
sbbl
adc
mov
sbb
inc
mov
imul
add
xchg
xchg
xchg
sti
push
mov
mov
push
or
dec
dec
jne
cs
and
sbb
les
mov
push
inc
adc
jae
lock
fnstsw
sub
imul
dec
mov
mov
ret
in
pusha
pop
out
xor
popa
adc
rcrl
mov
loope
xor
xchg
pop
je
popa
add
adc
adc
insl
inc
ds
movsb
in
movsl
adc
pop
pop
dec
mov
sbb
lds
popf
dec
jmp
mov
lret
or
je
dec
jmp
ja
enter
lret
out
test
into
fcoms
mov
gs
fstpt
mov
xchg
cmc
or
lea
cltd
mov
lcall
pushf
addr16
dec
sbb
nop
mov
mov
jnp
fldl
xor
movsl
dec
out
dec
pop
enter
lahf
test
pop
lahf
mov
lcall
jp
dec
add
ja
push
adc
pop
mov
jmp
xchg
cmp
cmp
mov
adc
mov
in
mov
sbb
mov
sub
cmpsl
dec
jb
je
fmuls
loop
mov
dec
xlat
pop
mov
insb
pop
dec
es
pushf
jb
push
lret
mov
dec
pop
push
cmp
adc
int
xor
cmc
insb
jo
pop
out
dec
pop
in
les
inc
bound
mov
xor
int3
xor
lcall
xor
out
sbb
dec
aaa
pop
lds
xchg
dec
add
lds
sti
int
out
out
mov
sub
loop
loope
cmpsl
in
lods
cmpl
test
fidivs
xchg
lods
jmp
bnd
out
int3
mov
movsb
aam
test
sbb
adc
pop
xor
rcrl
lahf
test
aad
or
inc
inc
adc
jl
and
rorb
dec
inc
cltd
lock
push
push
cmpsl
and
sbb
scas
push
ja
and
int3
or
mov
xor
push
push
pop
xchg
and
ret
fistl
test
push
pusha
xor
pop
lret
into
sub
mov
cmpsl
sbb
adc
cmp
mov
popf
jb
mov
add
xchg
and
es
shll
and
popf
pop
loope
and
loop
cmpsl
daa
adc
and
nop
repnz
gs
stos
sbb
aaa
push
cmpsb
outsb
dec
mov
lret
jne
add
mov
xchg
stc
lods
lcall
movsl
xchg
push
shl
test
or
pop
es
js
and
inc
stc
dec
sub
or
leave
jnp
lcall
pop
xchg
mov
pop
pop
enter
scas
cs
popl
inc
pop
iret
pop
lock
outsl
loopne
pop
add
mov
sub
fs
cmpsl
mov
lret
xchg
dec
pop
fsubl
sbb
or
int3
xchg
adc
jg
aam
xchg
lds
mov
aad
cmp
and
push
cmp
dec
dec
jae
inc
aam
pop
adc
in
shl
xchg
fstl
pop
adc
fdiv
mov
mov
add
mov
fcoms
push
jmp
popa
and
and
jns
push
mov
sub
pop
test
inc
pop
dec
cmp
mov
and
lods
mov
mov
cld
imul
sub
push
inc
inc
xor
mov
pushf
shr
daa
out
and
sub
jecxz
xchg
iret
shl
pop
cmp
xchg
adc
test
pop
mov
les
dec
testb
xchg
jne
data16
imul
pop
mov
dec
xchg
cmp
push
mov
pop
insb
or
push
sub
js
pop
dec
lea
jmp
inc
inc
les
pop
shr
out
or
je
out
mov
pop
roll
sub
fildl
and
lret
dec
pop
fists
in
aaa
divps
stos
shr
rcll
sub
popa
cmpsl
enter
fcomps
push
add
mov
mov
xchg
mov
fstl
inc
cld
pop
lahf
lea
daa
and
dec
loope
fsubs
lret
add
lock
shll
cli
addr16
pop
xchg
nop
lahf
mov
lret
adc
aaa
xor
out
dec
xlat
popa
icebp
sub
dec
outsb
jae
aad
push
add
loop
movsb
in
out
push
adc
add
pop
rolb
pop
xchg
shrb
out
lahf
inc
leave
pop
orb
sbb
dec
sub
mov
mov
xor
or
pop
pop
ljmp
lods
xor
rcll
stc
sub
imul
rorl
cmp
jl
mov
push
scas
pushf
xor
inc
int
pushf
dec
xchg
mov
mov
inc
mov
movaps
mov
mov
cld
inc
push
les
movsb
add
aam
push
mov
ret
mov
ljmp
int3
bound
rcrb
into
xor
notb
mov
lcall
pop
jb
fwait
mov
xchg
ds
cmp
dec
ret
pop
xchg
adc
pop
push
jg
into
jmp
movsb
jnp
or
mov
mov
xchg
pop
into
bound
addb
test
out
add
loopne
ljmp
sahf
jp
adc
inc
cmp
push
jl
pop
jbe
add
inc
dec
dec
add
test
jns
pop
daa
inc
in
cmp
and
and
fstpl
or
mov
lods
mov
js
clc
xchg
sub
test
pop
jne
movsb
lcall
jecxz
insb
or
jge
xchg
xchg
cld
sarl
inc
fdivr
pop
bnd
nop
shrb
mov
lret
xchg
push
pop
jle
and
adc
mov
rorl
andb
fstpt
repnz
sub
iret
out
adc
jmp
jne
xor
lret
adc
mov
cli
mov
adc
lea
mov
lcall
cmp
push
pop
mov
cmp
bound
pop
iret
sub
popf
outsb
adc
jp
test
push
or
mov
dec
cmpsl
insl
aad
mov
ljmp
mov
mov
xchg
shll
addr16
inc
mov
mov
cli
std
jbe
out
xchg
je
in
adc
jb
xlat
roll
movsl
out
cmpsl
ljmp
xchg
or
inc
cmc
lret
enter
mov
enter
jg
jns
push
movsb
or
or
repz
mov
and
sti
fwait
das
popf
int3
shll
imul
push
or
lret
mov
push
sub
inc
pop
daa
stos
mov
pop
imul
mov
scas
mov
movsl
std
mov
div
inc
imul
mov
and
or
sti
pop
and
pop
xor
inc
divl
imul
in
fstp
add
mov
lcall
arpl
mov
xlat
xchg
mov
mov
sarl
ja
rcrb
mov
jns
gs
jg
sti
mov
in
call
pop
mov
shrl
ficoms
mov
sti
lret
cmp
adcb
pop
add
into
fldl
movsb
xor
jg
shrb
stos
sub
lret
jb
bound
mov
cmp
lret
cmp
mov
dec
cmpsl
sbb
inc
mov
pop
out
test
mov
cmpsb
sti
and
fildl
in
es
out
icebp
cmpsl
push
jg
into
mov
jp
test
cmc
and
mov
mov
xchg
cmp
mov
or
push
mov
das
push
movsb
nop
xchg
pusha
cmpsb
hlt
movsl
call
mov
hlt
xchg
xor
and
adc
add
test
iret
movsb
xlat
ss
out
into
cmp
insb
xchg
push
pop
mov
pop
sbb
mov
cs
aam
or
push
sahf
addl
inc
test
popf
xor
adc
pop
out
mov
insl
fnsave
mov
xchg
adc
and
hlt
dec
push
add
push
jge
inc
fwait
nop
dec
lds
pop
pusha
jne
loop
and
pop
jo
in
cltd
add
jb
inc
js
mov
dec
ss
pusha
ljmp
or
mov
dec
cmp
pop
mov
test
out
scas
mov
mov
cmp
sub
add
outsl
cwtl
mov
xchg
rcrb
inc
xor
stos
xchg
into
cmp
xor
insb
insb
fwait
std
movsl
inc
or
out
dec
movsl
add
and
std
outsb
aas
inc
sti
mov
int
add
insl
outsb
loope
popa
jnp
insl
outsb
jmp
sub
jns
pop
dec
fisubrl
jne
loopne
jg
mov
out
iret
inc
mov
pop
in
fnstcw
repz
stc
icebp
jl
sub
jbe
sub
pop
popf
cmc
fsubs
cmpsb
add
inc
cmp
sbb
add
add
ss
or
aam
int3
mov
pop
and
iret
imul
lock
bound
cwtl
das
out
add
fisubl
stc
in
push
in
push
dec
dec
xor
in
mov
pop
shrl
nop
xor
psubd
orl
cmp
mov
popa
loope
out
je
push
hlt
jmp
lret
movsb
dec
test
jmp
pushf
aad
push
and
cmpb
test
in
insl
fdivs
lods
add
insl
ret
test
xor
xchg
sbb
fmull
jmp
jmp
adc
xchg
inc
push
movsb
xlat
adc
xchg
cmpsb
mov
cmp
into
push
sbb
jg
push
sub
or
dec
cmp
push
jecxz
mov
test
les
jae
aad
jl
adc
lret
and
fbld
mov
push
jbe
jne
je
fdivrs
pop
jle
push
insb
push
scas
inc
mov
loop
sub
lock
xchg
xor
shll
adc
jp
je
das
shll
push
in
roll
leave
add
in
sarl
ljmp
push
scas
and
nop
or
in
mov
mov
call
mov
hlt
jp
lahf
fisubl
pop
call
mov
inc
sbb
lods
arpl
dec
sbb
das
ljmp
imul
les
ret
mov
or
lods
inc
mov
push
pop
jg
inc
test
pop
mov
int3
test
jl
jae
or
or
xor
js
mov
mov
mov
rol
scas
inc
ja
lods
jl
aaa
mov
cmp
push
and
mov
cmp
mov
mov
fistps
xor
orl
push
xlat
movsl
leave
pop
cmp
mov
cmc
fisubrs
das
xchg
fdivl
cli
fnstenv
add
xchg
and
pop
test
in
fnsave
mov
scas
add
adc
out
sub
and
cmp
mov
orl
fisttps
cltd
jg
fstl
stc
or
test
lcall
push
xchg
scas
and
mov
jns
mov
lcall
mov
add
cmpb
jbe
mov
adc
xor
rorl
pop
cs
loop
inc
aas
jo
cmp
jge
jmp
and
icebp
outsl
subb
mov
mov
jns
dec
lea
jne
aas
xor
inc
push
aad
xor
lds
out
ss
dec
mov
push
lea
leave
dec
cmc
fincstp
dec
call
outsl
loope
outsl
popa
xchg
mov
adc
das
sbb
add
jp
mov
pop
lock
cmpsl
inc
pop
int
stos
nop
mov
sub
inc
jb
ja
loop
dec
and
cmp
mov
cmp
mov
xor
loopne
xchg
repnz
lea
movsl
jo
push
sub
ja
loope
orl
loop
push
in
sbb
inc
ljmp
xor
jl
gs
sbb
inc
aas
andb
xchg
jns
xchg
sti
fldt
push
lcall
sub
les
ljmp
jno
inc
push
cmp
dec
nop
or
enter
push
ljmp
in
lret
cmpsb
or
outsl
fsts
nop
xchg
jle
adc
jmp
mov
sub
es
jmp
push
scas
mov
jge
cli
push
cmp
movsb
mov
aaa
jl
mov
xor
sbb
in
push
es
add
imul
push
test
pushf
xchg
fidivs
cli
mov
into
or
lods
push
push
nop
pushf
or
jge
cmpl
lret
cmpsl
shl
in
loope
jnp
icebp
jmp
stos
pop
shl
lods
xchg
hlt
dec
into
addr16
and
add
pop
aas
adc
jb
mov
add
and
jne
popf
subl
ds
mull
int3
add
divl
out
cld
test
iret
and
bound
pop
lret
xor
aam
add
or
cli
dec
xlat
and
jns
imul
pop
push
xchg
mov
dec
xchg
aas
sub
or
cltd
dec
mov
mov
or
pop
dec
xchg
data16
scas
pop
mov
push
pop
orb
ret
xor
push
xor
cmp
lret
scas
ds
das
lahf
dec
sbb
jecxz
push
mov
lods
push
push
add
loope
jle
or
xchg
stos
cmpsl
inc
int
not
outsl
xchg
push
cmp
fldz
push
or
out
xchg
notl
jns
or
sbb
mov
mov
js
enter
push
in
mov
jecxz
or
rcrl
mov
or
stos
rcrb
out
daa
inc
pop
mov
sti
jecxz
sarl
adc
sbb
dec
mov
nop
and
inc
jp
mov
mov
rorb
insl
and
arpl
ja
push
popa
mov
add
inc
adcb
mov
loopne
xor
outsb
subb
testl
cmp
ror
push
pop
mov
inc
lret
inc
sahf
jge
out
lods
pop
xchg
pop
cmp
cmpsb
stos
outsl
stc
jb
sub
jp
cmovle
mov
mov
lret
pop
mov
jecxz
bound
and
call
mov
fldcw
int
mov
ss
jbe
xchg
enter
je
das
push
xchg
inc
inc
inc
mov
fst
and
es
mov
adc
inc
sbb
cmp
cmp
rcr
push
repz
scas
call
inc
lea
mov
mov
ja
sub
aaa
insl
mov
sub
cwtl
hlt
pop
push
lcall
inc
fstl
inc
and
jp
adc
test
fadds
and
and
pop
or
cmp
cmp
out
push
add
sbbb
mov
and
pusha
add
lock
or
xchg
adc
loopne
loope
xorl
dec
and
and
dec
ja
lahf
sarb
jle
push
xchg
mov
inc
rorb
xchg
dec
push
fwait
cmp
or
sub
in
push
rcll
or
xchg
outsl
leave
out
and
pop
cmp
int
scas
mov
pslld
out
mov
xchg
inc
mov
push
mov
rolb
clc
dec
rcrl
cmc
pop
mov
aaa
fsts
aaa
outsb
jno
fbld
daa
mov
cli
std
out
add
sbb
dec
add
std
ret
pop
push
test
or
addr16
xchg
push
loop
dec
mov
add
in
dec
adcl
mov
lock
leave
loope
mull
les
addl
shrb
fmull
sbb
inc
inc
movsl
test
std
mov
insb
mov
mov
jb
fldcw
lea
ret
mov
clc
mov
int
mov
pop
xchg
sbb
push
sub
mov
cmp
and
test
dec
test
lcall
fistpll
decl
xlat
xchg
arpl
outsb
cmpsb
pop
xchg
stc
pusha
cld
and
adc
movsl
out
je
xlat
out
inc
sbb
mov
fcmove
inc
mov
mov
cmp
lahf
adc
hlt
std
or
inc
outsb
push
xchg
xor
cmp
pop
xor
loope
ljmp
loopne
xchg
imul
pop
mov
dec
add
mov
cwtl
cmp
sbb
or
shrb
leave
inc
sub
loope
cmp
out
hlt
cmp
popf
shll
push
movsl
inc
ljmp
dec
mov
pop
incb
mov
inc
dec
push
repz
movsb
sbb
add
and
out
aas
dec
stc
dec
aaa
incl
jge
add
repz
mov
outsl
inc
cmc
aad
push
push
jo
loope
dec
adc
nopl
fwait
pop
jg
fsubs
ja
jp
in
inc
and
sub
pop
pop
jb
aad
mov
enter
fildll
pusha
jbe
dec
mov
sbb
imul
jae
or
stos
xchg
test
fisttpl
push
inc
add
decl
push
inc
imul
loop
aad
inc
scas
dec
pushf
adc
xor
cmpsl
mov
pop
pop
fdivs
les
jnp
sahf
mov
loop
jle
rorl
mov
aaa
lea
rorl
add
addr16
daa
daa
pusha
xchg
mov
dec
arpl
pop
mov
in
and
imul
inc
shll
or
and
inc
cmpsl
add
vcomisd
fstpl
sbb
jb
pop
or
dec
test
xor
test
das
adc
push
cli
movsl
mov
adc
repnz
sbb
push
sahf
pop
fiaddl
cmp
lahf
push
lret
push
inc
push
into
mov
xor
leave
pop
and
hlt
loope
iret
or
enter
and
mov
imul
movsl
les
pop
mul
pop
es
fs
jae
push
and
jmp
mov
shll
push
dec
ror
mov
sahf
push
adc
mov
mov
push
je
fwait
nop
aam
push
mov
xor
imul
push
xor
test
mov
push
loopne
cltd
imul
sub
inc
subb
nop
sahf
mov
mov
push
mov
les
xor
mov
and
pop
cmpsl
push
pop
inc
sub
repz
mov
popa
jg
lret
scas
movsl
lods
and
or
lock
xchg
mov
stos
pop
push
add
pop
inc
aam
mov
add
xor
enter
adc
fisubs
aas
pop
xchg
ret
mov
aam
pushf
push
pusha
inc
fwait
xchg
mov
popa
ds
xchg
leave
and
in
sub
push
cmp
xor
or
cltd
sti
lods
mov
aas
jnp
sub
addr16
and
mov
int3
push
insb
sbb
sub
jae
sub
lds
fnstcw
int
mov
cmpsl
sbb
negl
xchg
sahf
decl
adc
gs
das
shrl
cmpsb
or
jmp
scas
rcrl
add
ficompl
test
add
pop
sub
ror
xlat
adc
mov
pusha
push
xor
xor
arpl
rorb
leave
push
fnstsw
pushf
mov
testb
xor
aas
fs
push
add
push
imul
push
pop
or
rclb
test
adc
and
in
js
adc
mov
ret
in
repz
das
cld
inc
rolb
dec
enter
pop
mov
dec
testl
xchg
mov
push
cmc
rcrb
push
mov
popf
dec
cltd
inc
fiadds
sub
xchg
pop
cmp
nop
lods
mov
sub
xchg
push
repnz
pushf
in
lods
adc
lods
push
or
out
shrb
clc
psubusb
pop
inc
xchg
andb
pop
adc
adc
jl
xchg
sahf
and
or
iret
out
inc
ja
out
dec
inc
scas
addb
or
movsl
cld
mov
mov
rcrb
mov
stos
outsb
jg
or
mov
sbb
movsb
or
std
inc
out
jl
imul
xor
lea
hlt
sbb
test
stos
pop
aam
jae
cmp
jnp
aas
jge
and
cmp
shrl
movsb
adc
add
fbld
lods
loope
inc
jle
inc
sub
incl
les
in
call
sbb
jle
jo
mov
cmp
xor
imul
xchg
mov
xchg
mov
pop
sarl
mov
cmp
push
xchg
sbb
xor
sub
sbb
aad
fstl
push
ljmp
mov
and
sbb
push
stos
pop
jns
mov
sub
test
or
mov
add
out
leave
mov
dec
sub
imul
ret
lods
lods
inc
push
adc
inc
adc
mov
sub
orl
push
sbb
xlat
dec
cmc
jo
pop
dec
outsl
dec
cmp
stos
adc
test
inc
outsb
cmpsb
call
lret
sbb
adc
xor
pop
fimull
jbe
movsl
add
cmpsl
stos
mov
es
jge
dec
rcr
mov
out
into
adc
negl
popf
stc
mov
fldenv
mov
enter
mov
pushf
test
push
mov
pop
mov
shrb
aam
es
pop
int
mov
adc
inc
xchg
sub
cmp
call
test
and
loop
push
add
loopne
jecxz
xchg
je
cli
lret
sub
loop
ds
ljmp
cltd
lods
lret
leave
dec
movsb
subb
nop
push
mov
pop
jecxz
or
xlat
pop
stc
mov
sarl
sahf
dec
cmp
das
inc
jg
xor
stos
pop
and
jecxz
or
pop
sbb
sub
fisubrl
inc
cli
sbb
loop
and
add
decl
xor
pop
jecxz
cmpsb
jp
addr16
sbb
mov
iret
adc
add
push
mov
jge
jge
cld
test
dec
sbb
shlb
ret
xor
cmpsb
dec
mov
das
add
jmp
adc
or
sub
ret
iret
lods
lret
arpl
push
jmp
cmp
cmpsl
jle
xchg
lret
or
mov
or
sbb
cmp
in
stos
sub
mov
pushf
mov
ja
inc
setae
adc
adc
add
mov
sbb
imul
sahf
or
dec
or
push
enter
mov
test
pusha
clc
and
inc
or
rolb
cmp
or
pop
addr16
push
mov
inc
sbb
add
das
push
mov
loopne
or
xchg
pop
outsl
fiadds
or
and
pop
aam
add
jmp
push
ljmp
mov
and
mov
adc
add
mov
xchg
xor
in
ds
pop
rclb
int
loop
jbe
push
mov
stos
into
pop
mov
pop
or
imul
push
jno
or
repz
mov
add
outsl
mov
pop
inc
pop
das
ret
int
mov
movsl
and
xor
stc
jecxz
ret
dec
ret
shl
xchg
push
inc
std
lea
sahf
addr16
dec
sarb
pusha
cmpsb
sahf
mov
ret
imul
mov
jecxz
and
mov
test
push
sbb
push
pop
xorl
mov
test
stos
ss
rorl
call
or
aas
xor
jnp
negl
fwait
stc
aad
pop
fistl
adc
pop
imul
call
mov
arpl
out
dec
mov
inc
mov
push
pop
sahf
dec
adc
mov
das
and
ds
icebp
dec
lcall
fnstcw
test
pusha
mov
int3
pop
clc
and
mov
or
test
xchg
in
add
and
push
push
pushf
frstor
clc
int
jp
and
xchg
std
bound
int
mull
addr16
in
pop
cmp
popa
aaa
ljmp
xchg
adcb
sub
sbb
sti
movb
test
push
std
ds
xorb
sbb
push
pop
inc
add
xor
lds
test
mov
mov
sbb
repnz
lods
fstps
jb
push
mov
out
call
add
jp
rolb
jmp
ljmp
not
push
nop
test
dec
lds
jbe
int
and
and
and
dec
gs
cld
add
adc
and
les
fstps
jbe
jae
jge
clc
mov
adcl
movsl
cltd
lret
and
ljmp
inc
in
mov
icebp
push
out
push
roll
jnp
test
xchg
out
xorb
stos
int3
sub
data16
negl
fneni(8087
cmp
outsb
sub
cwtl
daa
adc
loop
lock
jg
xchg
jb
les
jecxz
sbb
test
pop
adc
negl
stos
mov
lods
cmp
jns
rcrb
adc
hlt
lret
lret
lea
cwtl
call
addr16
lods
enter
mov
dec
scas
push
dec
loop
fwait
or
sub
das
push
pop
ret
ja
fsts
cs
pop
and
mov
sysexit
das
mov
inc
pop
sbb
lahf
xor
inc
call
adc
xchg
aad
xor
cmp
imul
repz
xor
imul
dec
jl
jnp
adc
jecxz
shlb
mov
xor
lret
cwtl
js
mov
xchg
xor
inc
rcrb
push
sbb
repnz
adc
cmc
or
jae
idivb
pop
insl
insl
xchg
pop
inc
movsb
push
add
movsl
push
mov
xlat
cmp
and
call
jecxz
xor
xchg
jo
or
xlat
orb
push
or
fdivrs
lahf
xchg
jp
insl
mov
sbb
dec
cmp
mov
call
or
sub
mov
xor
or
mov
incl
ljmp
cwtl
dec
call
sbb
fldlg2
sbb
sbb
dec
push
or
xchg
sub
idivl
push
and
sub
push
das
mov
sbb
insl
push
les
add
add
push
scas
das
xor
in
int
insb
sbb
cmpsl
jl
jge
add
mov
xor
xor
sbb
addr16
scas
mov
sub
sbb
cli
pop
mov
jmp
xor
push
sub
aam
ljmp
ficoms
jl
fimuls
and
cmp
lahf
inc
push
repz
adc
pop
out
xor
jmp
mov
pop
xor
daa
cmp
or
loop
js
call
dec
shlb
je
cmp
in
popf
insb
push
pop
mov
or
cmp
sahf
stos
data16
mov
subb
popf
jle
push
imul
cs
popf
adc
push
cli
lret
dec
xchg
jbe
sub
out
dec
push
scas
popfw
push
mov
outsl
stos
cmp
push
in
and
fstl
or
popa
jae
adc
pop
jge
jns
mov
add
lock
mov
dec
push
xchg
and
fistps
jno
int3
pop
test
sbb
jmp
inc
mov
pop
jo
sub
addr16
adc
xchg
jnp
rorl
movl
mov
dec
aad
cwtl
imul
and
out
inc
movsl
sar
push
pop
aam
hlt
cmc
ret
dec
decb
add
dec
frstor
mov
xchg
aad
pushf
inc
push
mov
add
inc
jge
pop
mov
sbb
inc
pop
pop
jle
jmp
push
jmp
add
jae
xor
shll
xchg
outsb
cmpl
jnp
add
shl
push
adc
lret
adc
push
dec
mov
push
jmp
mov
into
idiv
jp
cld
leave
and
sub
pop
inc
out
push
mov
mov
xchg
fcos
aam
shlb
stos
mov
pop
lahf
je
sub
filds
jge
int
or
movsl
or
out
inc
leave
lods
fists
jno
jl
movsb
into
cli
and
arpl
cmpsl
lea
repnz
int3
outsl
daa
cs
ds
insl
ret
fs
push
or
sti
es
mov
idivl
stc
les
push
jno
mov
shlb
dec
aas
popf
aas
orb
addr16
jge
ds
push
pusha
adc
pop
jae
into
arpl
out
jge
xlat
jnp
lods
outsb
cmpsb
cs
mov
inc
mov
cld
jp
push
sbb
mov
xchg
aas
push
jne
mov
jecxz
pop
xchg
dec
nop
push
mul
ficoms
pop
xor
incb
xchg
xchg
sub
enter
push
fmul
movsb
and
mov
in
imull
scas
pop
shrb
test
mov
aad
aam
jmp
daa
adc
daa
inc
jmp
and
popf
add
out
mov
inc
lods
inc
xchg
stos
add
movsb
ret
and
dec
and
or
push
xchg
push
repz
add
lahf
mov
scas
leave
rorl
iret
sahf
xor
push
add
adc
push
cwtl
fldenv
in
cmpsl
and
xchg
fidivrl
insb
fisttps
imul
pop
repnz
mov
push
adc
bound
por
xchg
mov
xchg
fists
cltd
inc
add
shrb
js
cmp
xchg
xchg
dec
mov
das
scas
pop
outsb
add
adc
pop
add
cs
adc
adc
mov
cs
aad
pop
icebp
out
in
sub
sbb
into
adc
fwait
dec
sahf
aam
xchg
iret
push
inc
dec
push
add
dec
lods
cli
cmpsb
mov
mov
or
adc
enter
inc
nop
lods
dec
dec
lret
aam
mov
ret
jne
jmp
push
push
outsb
popa
imul
daa
push
insl
out
in
sbb
call
xor
mov
push
mov
flds
mov
test
and
inc
jmp
insl
xchg
pop
clc
adc
jmp
roll
or
mov
xchg
pop
sahf
and
xor
addr16
xchg
cmp
roll
bound
test
call
inc
mov
dec
in
mov
movsb
or
shlb
orl
cmc
fadd
jle
jnp
scas
xchg
stos
leave
dec
lds
iret
mov
je
fistpll
jmp
mov
cmpb
jp
imul
cmp
adc
aad
adc
fnsave
adc
push
mov
mov
cmc
mov
je
mov
sbb
pop
mov
mov
pop
shrl
loopne
leave
fsubrs
lods
push
and
insl
scas
jbe
xchg
inc
and
push
pop
push
inc
lock
scas
mov
test
int3
push
bound
shrb
test
push
rcrb
test
popa
mov
pop
dec
dec
inc
inc
mov
pop
mov
cmp
stos
pop
imul
imul
xor
testl
push
mov
push
add
outsl
rorb
test
pop
jle
pushf
lods
dec
imul
gs
inc
mov
jge
aad
je
sub
push
push
sahf
xchg
daa
jae,pt
dec
mov
or
inc
add
ffree
push
bound
cmp
inc
and
fmull
jp
fbstp
pop
pop
scas
aaa
mov
stc
cwtl
and
aam
mov
rol
ds
fdivs
mov
jns
adc
xchg
sub
jmp
adcb
adc
pop
push
adc
dec
mov
and
fwait
in
sbb
sub
test
shrb
pop
push
sbb
imul
loope
or
sbb
aad
pop
js
jns
popl
loop
shlb
cmp
pop
std
sbb
adc
adc
push
sbb
lds
sbb
push
mov
fldenv
dec
cmpsl
cmp
clc
outsb
mov
xadd
push
xor
les
cmp
or
xchg
and
sbb
add
pop
mov
mov
inc
pop
or
sub
movsb
inc
push
and
pop
lds
les
in
mov
dec
add
or
jne
or
mov
mov
out
mull
movsl
data16
fnstsw
daa
mov
test
push
sbb
dec
cwtl
mov
push
mov
pop
fdivs
repz
xorb
out
push
sub
cmp
stos
dec
sbbl
mov
aas
push
or
adc
mov
aas
movsb
xor
inc
ds
imul
xchg
movsl
gs
mov
icebp
sbb
aam
fisubl
or
std
or
fsts
addb
push
imul
push
mov
mov
sahf
ret
mov
push
add
arpl
xor
push
xchg
add
xor
sarl
mov
scas
mov
mov
xchg
jo
mov
insb
adc
xor
cmp
mov
pop
shlb
sub
cmp
shl
lret
sub
shrb
fbstp
mov
xor
push
mov
shlb
and
ret
imul
outsl
inc
insb
inc
cs
inc
and
scas
jmp
sbb
lods
out
in
xchg
push
add
repz
and
push
outsl
lds
pop
je
cmp
inc
inc
fstpt
add
mov
shlb
roll
or
cmpsb
stc
clc
in
les
or
xor
repnz
sub
gs
daa
push
mov
adc
loop
mov
push
fwait
outsb
sub
not
jae
sub
nop
push
mov
adc
clc
out
or
xchg
gs
add
fnstenv
scas
stc
fcomps
fwait
add
push
xor
sub
dec
and
or
fsubs
rolb
out
repnz
xchg
out
sbb
push
mov
mov
jno
movsl
iret
jge
xor
fwait
pop
add
mov
push
cmp
xlat
fildl
ret
mov
dec
cmp
and
ret
or
pop
clc
in
cmp
ret
js
jge
jge
dec
ds
mov
pushf
sti
icebp
cmp
adc
sbb
mov
outsl
cltd
negl
mov
xchg
mov
out
push
dec
insl
jnp
add
jo
mov
lcall
dec
fmull
sub
push
mov
movsl
out
mov
incl
lock
test
jne
stc
cmp
push
and
nop
loope
out
and
popf
jle
cmp
popf
mov
xchg
cld
les
adc
push
test
mov
mov
lcall
inc
mov
daa
push
out
les
popf
clc
push
pop
mov
aaa
nop
xchg
lret
int
cmpsb
lods
cwtl
stos
xchg
sbb
dec
in
jg
fwait
leave
loopne
ljmp
outsb
es
popf
mov
stos
pop
sub
es
sbb
inc
jb
push
mov
cmc
fcmovb
mov
lods
sub
pop
movsl
sub
pop
push
stos
loope
or
fdivrp
lds
shlb
push
sbb
das
imul
pop
push
inc
idiv
lods
sbb
adc
mov
pop
aam
adc
mov
fcmove
and
lods
push
popa
push
dec
ss
or
jb
mov
add
pop
or
sarl
pushf
cmp
out
popf
outsb
rcl
adc
shll
cli
enter
cmp
outsl
sub
or
mov
aaa
mov
sub
push
sbb
shrb
push
dec
jg
adc
pop
push
sub
orb
in
mov
xchg
gs
stos
pop
jecxz
push
mov
fwait
jns
and
push
pop
cmp
push
or
cmp
lods
or
rorb
inc
cmc
mov
jne
pop
sub
ret
ja
pop
pusha
ds
mov
mov
sbb
les
clc
mov
jl
push
xlat
scas
and
movsl
push
mov
xchg
and
jg
xor
nop
lock
adc
aaa
cltd
mov
repz
add
pusha
mov
lds
outsl
mov
fwait
int3
scas
lcall
xor
or
ficoml
adc
sbb
pop
jnp
fstpl
add
imul
jno
aaa
jb
pop
enter
fldl
or
add
push
adc
pusha
mov
pop
mov
push
daa
pop
enter
movsb
jmp
xchg
lahf
sbbl
pop
rcr
sbb
and
jo
pop
or
shr
pop
jecxz
aaa
aas
pop
ret
aas
in
int
dec
push
mov
fistpl
lods
das
hlt
adc
mov
ret
movsl
add
sub
xchg
not
es
mov
lret
data16
pop
lods
cli
pop
adc
ljmp
test
pop
mov
pop
inc
dec
jp
rclb
incb
ret
jo
xchg
mov
cmc
mov
scas
shll
out
mov
ret
ret
mov
push
mov
jnp
lret
test
pop
dec
adc
das
xchg
jmp
int3
xchg
adc
pop
cli
inc
xor
aad
nop
sarl
aam
jno
shr
insl
nop
mov
dec
sahf
and
mov
addr16
xchg
stc
imul
lea
mov
pop
add
push
xchg
mov
stc
das
fistpll
sub
push
inc
in
test
inc
add
cmc
pop
ss
nop
add
xchg
cli
decl
xchg
and
or
xchg
mov
or
stos
lret
rorb
leave
sbb
push
xor
dec
ret
push
ffreep
jl
pushf
fsubrp
stos
negl
lock
sub
mov
test
and
hlt
mov
pop
inc
xchg
add
in
lds
xlat
aad
in
or
ss
fildl
and
ljmp
and
loopne
dec
outsb
jmp
and
insb
cs
mov
pop
xor
roll
gs
enter
sbb
std
jle
cmpsl
test
add
lds
ss
inc
fbstp
adc
sar
jno
adc
outsb
jnp
shll
out
movsb
jno
inc
in
mov
addl
loope
push
adc
cltd
pop
jle
push
or
in
pusha
popf
test
fistl
popf
dec
push
movsb
add
mov
mov
and
mov
stos
mov
lret
lock
mov
inc
xor
mov
addr16
out
dec
cmpsb
mov
adcl
rorb
mov
stos
pop
xchg
ror
sbb
push
ljmp
outsl
dec
or
and
sub
inc
pop
fs
out
jg
sbb
stos
pop
mov
ficoms
xchg
mov
push
dec
sahf
push
dec
pop
jno
mov
mov
mov
pusha
adc
inc
push
and
inc
call
and
fdivl
in
mov
imul
cmp
sbb
adc
or
adcb
test
mov
push
and
mov
jp
push
out
pop
dec
aad
enter
int
and
and
inc
es
push
jbe
cmp
xor
fldenv
fnstenv
cwtl
and
in
imul
mov
pop
testl
dec
addb
jae
pop
pop
js
cmp
adc
sub
dec
movsl
sarb
mov
xor
add
jl,pn
ss
adc
adc
test
sub
xchg
scas
shrb
mov
push
mov
cli
xlat
cmp
cwtl
inc
pop
inc
je
test
xchg
mov
sub
adc
push
jns
jmp
add
lret
and
xor
or
and
push
dec
xchg
outsb
mov
mov
mov
jl
and
lods
push
cmp
and
das
jg
or
ret
xor
pop
lcall
popf
and
push
scas
pop
or
rol
cmpsb
inc
repnz
mov
lods
mov
movsb
or
add
inc
xor
jno
fcoml
fwait
sbb
adc
fistpll
mov
inc
or
push
inc
pop
daa
arpl
into
jmp
and
xchg
popa
jb
or
or
clc
mov
call
mov
mov
jge
pop
ds
outsb
inc
arpl
and
xchg
ret
sub
pop
leave
mov
push
inc
fiadds
imul
pusha
xchg
mov
dec
std
push
push
mov
test
sbb
sub
jecxz
int3
pop
nop
dec
je
movsb
push
pop
mov
test
stos
or
cmc
xchg
mov
push
and
pushf
and
add
mov
xchg
popa
repz
rol
dec
xor
xchg
pop
test
sahf
cs
lods
ds
cli
jno
mov
xchg
inc
mov
pusha
lcall
adc
outsb
fisubrs
mov
test
out
jmp
call
aam
mov
jbe
push
loop
push
arpl
incb
dec
popa
lret
pop
mov
outsb
or
cmp
fisttpl
dec
adc
roll
push
adc
out
stc
and
add
mov
cmp
jbe
add
mov
add
cltd
and
push
inc
cmp
and
outsl
jp
leave
or
push
or
pop
jp
call
xchg
cmc
ja
hlt
jne,pt
imul
movsb
and
and
cmp
jl
dec
cmp
xchg
pushf
scas
mov
enter
movsb
cmp
pop
jb
cmp
in
fldenv
jbe
mov
mov
jl
mov
cmpsb
int
jno
imul
inc
mov
repz
add
orb
bnd
sub
sub
call
cs
add
push
add
jg
jge
das
sub
add
add
xchg
jl
in
aaa
adc
sub
jns
insb
push
mov
mov
out
xchg
arpl
repz
notl
inc
scas
add
jb
js
rorb
mov
sub
and
je
push
fwait
push
mov
gs
movsb
cmp
pop
pushl
mov
ljmp
cwtl
xor
fdivrp
in
or
incl
xor
and
jmp
scas
cmp
pop
out
xchg
and
mov
aad
ret
push
daa
jl
jg
sbb
inc
mov
shrb
cltd
jbe
fwait
repnz
sbb
sbb
dec
add
add
je
outsl
pop
lods
into
and
cld
dec
xchg
ja
ja
pop
ret
push
sti
xor
mov
adc
sbb
ret
rclb
dec
fwait
shrb
or
or
aad
iret
mov
or
xor
or
xchg
push
xor
push
add
mov
jmp
dec
jno
enter
mov
sbb
movl
or
cltd
stos
daa
aam
aad
gs
decl
xor
scas
jmp
pop
sarl
and
jbe
push
or
jg
aad
int
inc
js
test
pusha
movsb
fnsave
pop
mov
test
test
jle
clc
add
sarb
roll
lock
sbb
les
sub
iret
dec
sub
xor
mov
sar
in
cld
mov
sbb
es
aad
sarl
call
ss
das
push
imul
mov
js
mov
or
iret
fnstsw
outsl
fiaddl
push
scas
xor
xor
cmp
les
loope
inc
jno
mov
push
leave
dec
add
pop
xchg
test
adcl
inc
and
arpl
add
push
mov
lret
dec
mov
add
leave
rcrb
sti
data16
sbbb
out
js
mov
jg
or
stc
fildll
pop
stc
xor
and
js
pop
lea
xchg
cld
mov
jnp
mov
push
sti
pop
out
cmp
imul
mov
mov
jno
xor
stos
xchg
and
fadd
sarl
pop
enter
adc
inc
lock
sbb
imul
lret
jecxz
repnz
scas
loope
pop
pushf
gs
shrb
mov
loopne
jmp
push
inc
jns
xchg
mov
and
data16
gs
test
lret
mov
pop
push
stos
sbb
fmulp
mov
or
lea
aam
mov
add
popa
stc
repnz
das
fistpl
xor
or
iret
and
js
shll
aad
aaa
cs
fstl
cmpl
js
mov
pop
ljmp
push
jae
pop
jmp
shll
insl
cmp
data16
pop
ret
lods
push
aam
mov
jecxz
pusha
inc
pop
xchg
jl
add
xchg
or
mov
push
push
and
jno
fdivrl
filds
jge
stos
sti
cmpsb
jl
icebp
sub
ror
cli
add
xor
xorl
jmp
mov
sbb
mov
imul
inc
loope
cmp
add
cmpsl
jo
imul
push
dec
fucomi
out
mov
xchg
xlat
loop
fisttpll
cltd
test
mov
pusha
stos
scas
lock
aaa
pop
xor
jno
cmp
cmpsl
jmp
lods
jno
decl
xchg
sbb
subl
cmc
rorl
push
and
mov
pop
cmpsb
out
adc
ds
std
adc
ljmp
mov
fidivs
jno
mov
inc
imul
push
and
mov
pop
into
inc
add
jo
daa
test
rclb
cmp
adc
pop
pop
popa
xchg
sbb
or
pop
stos
in
add
ss
jmp
imul
movl
repnz
pop
add
imul
or
or
fnstcw
fdivrl
push
fimuls
sub
mov
mov
mov
sbb
sbb
out
mov
js
mov
addr16
movsb
lcall
sub
lahf
xchg
lds
subb
cmp
dec
jp
inc
sbbl
dec
test
aaa
scas
jo
jle
divl
push
xchg
cmp
add
push
std
or
cmovge
clc
js
ret
int3
xchg
fsubl
fabs
aam
pop
fs
out
insb
pop
pop
icebp
cmpsl
dec
fistps
xchg
test
clc
ret
mov
mov
jae
inc
add
mov
fnstenv
or
cmp
jecxz
sbb
gs
pop
jno
dec
rcll
push
mov
sbb
es
mov
int
dec
inc
dec
cmp
fmull
testb
scas
dec
pusha
out
push
movsb
xor
shlb
mov
scas
dec
ja
test
push
add
loop
cmp
int3
das
jnp
push
inc
xchg
xor
xor
stos
pop
adc
jle
and
add
add
addb
sbb
pop
jns
push
ret
or
jbe
int3
adc
or
mov
jl
ffree
cmp
sub
roll
stos
add
and
add
mov
sub
cmpl
call
lret
je
movsb
pop
daa
enter
mov
xchg
add
adc
or
dec
loope
das
movsl
lcall
cmpsb
add
cmp
adc
lret
mov
pop
xor
add
mov
mov
cmp
lcall
popf
fists
ret
jb
inc
sub
je
test
sbb
push
iret
pop
jns
sbb
inc
sub
xchg
ljmp
xchg
jecxz
pusha
sub
aas
lds
iret
inc
and
sub
dec
dec
movsl
adc
jnp
mov
pusha
test
inc
scas
roll
mov
inc
outsb
xchg
test
xchg
mov
sub
or
inc
sbb
syscall
jb
pop
cli
das
mov
loopne
jae
popa
in
addb
or
aas
xor
sub
loopne
mov
sarl
xlat
and
sub
or
fiaddl
mov
pop
push
sbb
add
dec
xchg
lret
cmp
dec
pop
cmp
cmp
cmp
xlat
mov
cld
test
fprem
xchg
mov
inc
dec
xor
xor
inc
mov
daa
push
std
sbb
mov
sbb
iret
mov
or
pop
data16
xorb
mov
mov
fdivrl
or
cmpsb
scas
xor
cmp
inc
fidivs
pusha
push
ljmp
push
push
int
adc
push
out
mov
cmpsl
cld
push
xchg
and
xchg
addr16
rolb
sarb
push
cmp
hlt
into
sub
dec
mov
fdivrs
adc
in
mov
inc
aas
in
mov
in
cmp
or
cmpsb
clc
cmpb
jmp
int
repz
lahf
negl
jnp
or
mov
lds
and
mov
pop
aas
push
push
pop
rcl
pop
imul
push
leave
imull
shl
cmp
dec
lds
les
xchg
fnstcw
into
xchg
into
cmpl
lds
loope
push
inc
pop
mov
pop
jg
xor
je
xlat
push
dec
clc
mov
pop
dec
pop
aam
leave
add
xchg
int
fidivrl
out
jne
lock
fcomip
jbe
loope
xchg
xchg
pusha
pop
push
lock
imul
adc
push
cmp
cmp
es
jbe
jno
movsl
or
or
and
nop
xor
inc
pusha
inc
fmull
push
outsl
inc
lahf
dec
jp
test
xchg
fistpll
cwtl
rcrb
pop
icebp
sahf
cmp
and
xor
inc
aaa
imul
arpl
fadds
pushf
lea
cs
pop
mov
in
jmp
sbb
cld
lds
lret
and
and
testl
shr
add
bound
jo
sbb
jno,pn
jb
push
mov
clc
ret
jmp
xor
fmull
or
add
cmp
repnz
repz
scas
ss
lds
bound
xor
mov
mov
int
aad
xor
add
cmpsb
inc
aaa
mov
fs
movsb
arpl
mov
jbe
cwtl
mov
rcrb
popf
inc
and
dec
jge
shlb
add
and
mov
cmp
sub
add
cmpsb
pop
pop
jne
and
jmp
dec
or
das
popf
xchg
sub
pop
xchg
pushf
jge
lds
testb
cmp
xchg
not
rclb
sbb
xchg
jne
pop
xchg
lcall
jb
dec
or
mov
out
adc
adc
dec
hlt
nopl
lret
stos
or
mov
sahf
mov
fcoms
sbbl
xor
movsl
mov
jno
push
in
mov
insl
or
push
cmpsl
cmp
sub
mov
das
pop
test
aam
push
mov
add
roll
adc
xchg
xchg
and
jno
push
push
xchg
mov
push
sub
test
xchg
and
rorl
sub
cmpsb
dec
fwait
xlat
ret
cmp
ss
mov
scas
repnz
les
aam
push
cmp
stos
popa
icebp
cltd
lret
xchg
xor
iret
sub
mov
push
xchg
addr16
sub
cmc
push
or
or
das
mov
ljmp
xor
loop
adc
lods
lea
paddsw
std
loop
inc
cmp
adc
je
xchg
sbb
nop
pop
outsb
cmp
pop
adc
push
lds
pushf
and
or
arpl
movsl
mov
stc
xchg
mov
jb
clc
movsb
shll
shlb
xor
jae
mov
add
xchg
nop
in
lret
incl
arpl
xor
imul
mov
in
xchg
dec
aaa
roll
or
js
aas
xor
xchg
or
mov
dec
mov
push
mov
mov
pusha
scas
int
jno
inc
rcrl
aaa
lcall
xchg
pop
adc
out
addr16
xchg
pop
inc
addb
popa
cmp
pop
push
fisttps
jo
pop
sub
inc
shll
inc
jle
scas
lea
push
jecxz
sbb
mov
test
mov
hlt
lcall
mov
cwtl
mov
aam
dec
adc
jbe
sub
sub
cli
leave
mov
jns
pop
iret
pop
adc
and
jecxz
out
jle
lahf
stos
xor
scas
add
scas
mov
out
add
mov
stos
mov
xchg
filds
and
mov
push
mov
repz
xchg
adc
xchg
inc
push
imul
rep
mov
sbb
cmpsl
outsb
into
cmpsb
mov
test
sub
movsl
sub
sub
cld
fisubrs
mov
icebp
leave
sti
clc
and
xchg
push
outsl
jl
test
add
inc
out
jmp
lea
movl
jns
popf
xchg
lock
sbb
jne
xchg
clc
and
shl
pop
cmp
push
and
or
push
push
xor
and
fdivrs
cli
fstpt
sub
xchg
pop
mov
shlb
lods
add
dec
jne
mov
mov
sbb
movsb
movsb
mov
jae
fwait
xlat
push
dec
fstpl
mov
and
mov
leave
cmpsb
cmp
jne
xor
popf
sbb
pop
adc
fsubr
pop
cmp
or
dec
fstpt
cmpsb
jmp
pop
into
inc
jb
iret
aaa
xchg
nop
call
xchg
out
cmp
sar
repnz
test
pushf
lock
mov
jmp
cmpsl
add
pop
adc
aam
gs
lock
fisubl
inc
lods
lods
adc
in
add
mov
lods
cmp
mov
roll
dec
or
out
rolb
aam
scas
add
inc
faddp
lods
push
popa
int
out
inc
cld
push
outsl
cmp
mov
mov
cmc
or
mov
mov
cmp
mov
test
mov
jecxz
push
mov
push
sub
into
test
adc
mov
out
rcr
inc
lock
data16
add
xchg
lods
in
pop
jmp
ret
inc
mov
or
and
movsb
and
jbe
dec
jmp
pop
rcrb
sbb
bound
daa
inc
into
fwait
ret
test
adc
mov
pop
test
movsl
out
sub
cmpsb
hlt
repz
stos
jecxz
mov
sub
data16
or
stos
stos
andl
mov
push
iret
pop
leave
mov
sti
cmp
dec
shrl
std
mov
jge
fisubrl
lahf
lahf
ja,pt
sbb
loopne
hlt
xchg
xchg
cmp
xchg
imul
push
and
nop
mov
test
shll
xor
lret
popf
cwtl
fistpl
mov
imul
dec
add
inc
lcall
mov
mov
push
sbbl
dec
mov
les
push
cmpsl
fcomps
mov
mov
test
or
jo
sub
add
data16
jnp
daa
gs
or
and
gs
sub
mov
dec
pop
push
cmp
cmp
rolb
mov
pop
jecxz
cld
das
adc
and
mov
imul
shll
insb
mov
cmp
clc
push
mov
shl
cmp
lahf
js
inc
dec
popf
sub
xor
fstps
imul
inc
lods
test
das
xor
pop
mov
sbb
adc
xor
mov
jbe
and
cld
mov
pushf
aam
mov
mov
iret
aaa
sbb
rcrl
xchg
mov
xchg
mov
dec
adc
scas
push
push
sub
mov
adc
sub
stos
arpl
popa
in
popa
cmpsl
addl
mov
xchg
add
out
fwait
mov
fmuls
push
mov
in
inc
dec
mov
mov
out
inc
aam
sbb
test
mov
hlt
movsb
pop
leave
insb
jmp
jge
enter
pushf
jp
xchg
and
sti
adc
push
clc
ljmp
in
les
cmp
xchg
fstps
arpl
ret
fwait
mov
or
mov
lcall
mulb
cs
jecxz
push
in
ret
dec
loop
push
bound
in
popa
js
mov
test
xor
es
cmp
sub
cmpsl
pusha
test
cld
leave
mov
cmp
adc
negb
fnstcw
aad
and
pop
pop
push
orb
xor
push
mov
lods
cli
mov
dec
push
cmp
outsb
or
xor
pop
bound
dec
rorl
adc
es
imul
jne
lock
inc
dec
fnstsw
and
into
iret
dec
mov
mov
jecxz
fdivl
ror
mov
inc
ret
mov
lcall
fimull
and
mov
daa
sbb
push
push
mov
inc
add
insb
inc
out
mov
fldt
mov
inc
insl
into
test
pop
sbb
jge
dec
mov
xchg
and
push
divb
push
cmp
pop
enter
lock
enter
lret
ss
sbb
mov
cld
inc
mov
xchg
sahf
lods
loope
sahf
nop
xor
and
pusha
dec
aam
repz
outsl
js
or
xchg
add
int
daa
push
pop
adc
imul
xchg
mov
dec
push
push
aad
loop
pop
scas
push
xlat
jge
in
push
icebp
scas
out
adc
negl
inc
mov
sub
cmpsl
rcl
push
or
test
les
movsb
push
push
inc
fs
mov
or
cmp
push
popf
movsl
sbb
pop
inc
test
dec
xorb
ret
mov
adc
addr16
inc
jmp
push
lods
repz
mov
mov
xchg
pop
mov
jae
adc
out
jbe
inc
out
into
lret
ficoml
pop
ljmp
rcll
testb
sub
or
fwait
loop
push
mov
and
add
fsubs
filds
and
dec
pushf
int3
lret
in
shrl
fisubrl
ret
push
scas
sbb
in
fdivrs
mov
fucom
popa
adc
popf
outsb
mov
xchg
incb
cwtd
jp
cwtl
cmpsl
mov
fldl
dec
mov
mov
popf
and
ret
add
mov
sbb
pushf
cmp
pop
and
add
dec
and
or
adc
jae
ffreep
sub
sarl
enter
icebp
add
mov
or
mov
cs
in
popf
movsb
aam
hlt
adc
pop
fsubr
ds
and
fwait
movsl
jns
sub
add
iret
cmpsl
mov
and
xchg
cmp
jle
movsl
xor
sub
jle
jg
jle
jne
push
je
sub
jo
sub
shll
mov
xor
and
mov
fs
clc
xchg
arpl
data16
insb
mov
icebp
aas
data16
adc
and
add
sbb
int
add
mov
lahf
clc
xchg
js
dec
scas
stc
xchg
or
sub
sahf
inc
test
mov
push
xchg
cld
je
mov
mov
xchg
dec
negl
inc
pop
lahf
or
add
rolb
mov
push
call
xchg
adc
icebp
and
repz
out
nop
or
cld
test
push
dec
in
aaa
insb
ja
push
jecxz
insb
mov
mov
cld
xchg
or
subb
jnp
lock
shll
add
lret
cwtl
gs
repz
mov
mov
subb
jnp
je
and
out
shrb
ja
mov
adc
and
bnd
mov
and
bound
mov
push
pop
pop
gs
xchg
lahf
ret
lcall
mov
and
lret
mov
in
jg
imul
das
jbe
into
pop
jo
add
negb
xor
mov
mov
mov
je
mov
xor
stc
das
mov
dec
out
rcll
repz
stos
imul
lods
aad
and
pop
mov
fisttpl
pop
mov
mov
mov
out
adc
and
adc
loop
sub
inc
or
outsb
repnz
fcompl
outsb
shrl
lods
icebp
stc
pop
jp
mov
mov
add
xchg
and
arpl
pushf
add
je
push
shll
sbb
js
addr16
cmp
dec
lret
test
mov
push
test
sahf
repnz
jnp
lock
pop
jl
lret
scas
enter
icebp
stc
dec
or
jl
stos
adc
sbb
mov
test
dec
call
rorb
popa
mov
fwait
sub
sub
ja
sbb
add
pop
xchg
pop
lret
lods
pop
push
aam
inc
mov
xor
sbb
iret
pop
adc
js
movsb
in
dec
jmp
inc
mov
insb
dec
jae
js
push
pop
shrl
add
pop
add
imul
sbb
mov
or
mov
repnz
push
mov
mov
or
jno
or
mov
sti
mov
out
in
push
adcl
imul
aas
push
xor
movsl
inc
int3
aad
and
and
loope
inc
cli
int
jmp
mov
jg
insb
cltd
call
pop
push
js
cmp
sbb
mov
mov
outsl
js
popa
nop
imul
mov
jg
fwait
mov
cmp
ss
xorl
je
xchg
frstor
xor
push
xchg
push
pop
cmp
iret
fstps
bound
scas
cmp
xor
arpl
push
fcompl
cmpb
xor
aam
mov
fs
cld
xchg
push
or
add
jne
popf
and
mov
es
inc
pop
jl
mov
enter
xchg
mov
shrb
xor
adc
push
shlb
mov
sub
dec
push
test
or
push
gs
jg
xor
jge
push
add
ret
in
dec
ds
or
mov
loopne
mov
leave
leave
in
int
and
negb
call
cmp
fistps
jne
push
mov
lods
push
or
cmpsb
mov
pop
jo
jl
out
test
imul
jae
out
mull
sub
pop
cmp
aas
mov
inc
add
and
push
pop
or
shrl
sub
mov
adc
enter
cltd
mov
loop
fwait
mov
cwtl
repz
add
sarl
lds
ja
add
in
fwait
arpl
dec
je
mov
xchg
loopne
std
or
jo
sbb
rcll
inc
push
push
or
jecxz
addr16
iret
shll
lret
data16
rol
inc
adc
inc
sub
jmp
frstor
imul
sbbl
mov
push
mov
into
stc
js
xchg
or
push
fld
enter
add
fs
mov
mov
cmpb
mov
sub
gs
ret
sub
mov
pop
test
mov
arpl
or
pop
dec
mov
into
sub
mov
loop
scas
sbb
les
jno
push
xlat
sub
jmp
fwait
mov
outsb
ja
adc
dec
push
ds
sub
cmp
gs
ret
js
mull
xchg
popa
loope
insb
lea
push
out
inc
shl
add
aam
movsl
mov
inc
xchg
test
je
pop
push
inc
sub
andl
leave
lock
popf
cmovs
jmp
test
gs
in
inc
ret
push
dec
addr16
out
push
mov
das
loope
in
push
mov
jle
jnp
cmp
xchg
cmc
dec
ret
mov
push
cltd
sbbb
lds
shll
pusha
adc
dec
in
repnz
bound
jle
push
push
es
mov
ja
mov
adc
xor
pusha
nop
fistps
fisttpll
push
sbb
sbb
shlb
scas
sahf
mov
cmp
jns
push
out
fsubp
fs
jp
add
bound
xchg
dec
mov
ds
call
cld
insb
cmpsl
ss
daa
jl
dec
jo
cmp
call
sub
pushf
mov
addb
add
mov
jb
popa
add
imul
xor
or
jo
mov
scas
cmpsb
mov
xor
icebp
notl
and
mov
pusha
cltd
push
jae
cmpsl
and
or
in
jae
jne
aad
inc
push
jb
fisubl
inc
mov
nop
leave
fsub
xchg
mov
imul
xor
add
lea
repz
mov
lret
or
xchg
mov
xchg
xchg
push
jg
sub
out
sub
dec
push
inc
hlt
dec
add
aam
jl
pop
idivl
or
sub
aas
fldenv
cltd
jo
int3
pop
les
decl
jmp
xchg
ja
xlat
add
gs
dec
pop
out
dec
test
mov
xor
pop
mov
es
fidivl
push
xor
cmpsl
mov
into
jnp
es
add
lret
lock
and
leave
sub
xchg
jecxz
inc
jcxz
dec
inc
push
dec
je
pop
jo
cs
mov
mov
mov
push
fldpi
ds
sahf
xor
jle
scas
xor
push
icebp
pop
fimull
mov
pop
push
call
lds
cld
cmp
inc
insb
cmp
pop
gs
lret
lret
mov
xchg
adc
add
cmp
stos
mov
daa
add
ret
push
xor
dec
fs
xchg
adc
sbb
loop
jo
sbb
or
arpl
cli
jne
jmp
stos
push
mov
fstps
xchg
jle
mov
std
bound
mov
xor
and
or
sub
push
jge
gs
push
pop
pop
dec
jge
xorl
cmp
jnp
popa
inc
pop
orl
push
lret
pop
inc
gs
jecxz
in
cld
sub
cmpsb
xchg
adc
sub
sub
mov
add
xor
xlat
mov
inc
inc
jnp
inc
and
sub
cmp
jbe
mov
cld
xbegin
mov
outsl
jbe
clc
out
mov
cmc
xchg
in
jns
outsl
clc
xchg
repnz
xor
add
xor
mov
xorl
xchg
cmp
lock
ja
mov
aam
and
push
cmpsl
in
rorb
push
sarb
mov
jno
sarb
or
push
dec
sub
in
xchg
out
pop
sub
adc
pop
popf
pop
insb
and
loop
loopne
pushf
ja
mov
scas
jp
lea
xchg
sti
sti
sub
push
sub
sub
adc
es
enter
xchg
fnstenv
test
emms
std
jg
inc
stos
dec
sub
ljmp
jmp
std
pop
sbb
push
mov
ret
cmp
rcrl
loope
repnz
test
leave
mov
mov
mov
fmuls
fneni(8087
jg
in
aaa
cmp
push
cmp
jnp
fdivrs
xor
push
inc
sub
loopne
xchg
insb
sbb
xor
ljmp
notl
sbb
xchg
lock
test
shl
in
mov
in
and
mov
xchg
aam
ja
aaa
inc
pushf
or
jb
or
xor
rcrl
mov
and
out
pop
icebp
pop
stos
cmpb
jl
imul
repnz
mov
out
push
ja
insb
das
xor
jl
xchg
cmpsb
ss
mov
int
jb
mov
shrb
cmp
mov
ffreep
mov
sbb
mov
mov
pop
daa
xchg
add
adc
inc
sub
inc
sub
sub
das
xchg
lods
js
mov
and
fistpl
sti
pop
out
lods
xchg
adcb
jbe,pt
loop
popa
cmp
mov
fsubl
dec
test
inc
dec
xor
push
push
imul
mov
sbb
jge
divl
adcb
add
adc
xor
lea
push
pusha
mov
call
or
mov
inc
push
int
jbe
xchg
ficoml
dec
mov
fucom
mov
in
jp
in
xchg
fistpl
dec
fisubs
or
lock
add
xor
cwtl
rcll
loopne
dec
enter
push
popf
or
pop
adc
mov
mov
cmp
mov
iret
iret
shll
sub
inc
rep
leave
gs
shll
sbb
shl
in
loope
mov
xchg
sbb
loop
adc
cld
lds
mov
xor
jecxz
shr
jo
inc
pop
stos
mov
je
in
daa
mov
int
mov
loop
pop
daa
adc
negl
adc
aad
aaa
lahf
idivb
cmpsb
push
jns
xchg
insb
xorb
or
es
pop
mov
add
pushf
insl
jns
pop
lret
lods
int
test
into
arpl
mov
rcrb
sub
inc
fcmovne
in
dec
je
cmp
test
mov
stc
pushf
pusha
loop
popf
adc
adc
pop
jge
mov
out
and
rolb
cmpsb
stc
in
loop
pop
dec
sti
mull
cmpsb
aaa
jne
mov
fldenv
lds
daa
adc
lods
hlt
pusha
jno
mov
cli
scas
lret
push
icebp
imul
xor
or
pop
mov
test
in
mov
ja
push
scas
push
enter
push
out
mov
pop
js
fnstenv
push
push
inc
scas
adc
lahf
jle
into
ss
ja
xchg
imul
int
inc
stos
ja
xor
push
and
enter
push
push
xchg
xchg
js
push
bound
pop
add
hlt
inc
pushf
data16
sub
aaa
dec
xor
pop
or
sub
lret
mov
mov
in
jnp
mov
dec
in
jo
lcall
jp
daa
mov
lock
dec
sahf
loop
es
cld
cltd
repnz
adc
test
inc
mov
push
clc
xchg
stc
sahf
mov
out
dec
inc
fcomip
add
jg
imul
and
fstl
cmp
sbb
pop
inc
insl
adc
icebp
ljmp
mov
and
jp
scas
mov
stos
sub
dec
xchg
fidivs
mov
xlat
mov
fistpll
cmp
stos
jo
dec
ret
addb
xor
mov
xchg
xlat
popa
jae
jl
stos
outsl
xorl
ja
sub
mov
call
in
push
mov
jmp
stos
pushf
into
mov
rorl
insb
in
loopne
sbb
cmp
jno
fistps
mull
mov
stos
mov
into
stc
mov
test
push
sub
adc
cmpsl
and
idivl
movl
xor
ret
or
cwtl
and
or
inc
subb
mov
mov
ds
fscale
push
sbb
icebp
rcrl
es
adc
fists
ficoms
push
add
and
mov
mov
and
adc
decb
jne
pop
mov
xor
addl
mov
sub
int3
mov
std
xor
int
cwtl
ja
loopne
and
cmp
push
mov
mov
data16
mov
or
or
or
rorb
jno
movsl
or
sbb
jns
and
movsb
lcall
pop
shr
jns
aas
pop
dec
add
xlat
xor
mov
loopne
and
sub
in
in
jb
sbb
push
movsb
cld
mov
test
push
push
pop
aaa
inc
cmp
pop
lahf
stc
call
jno
out
mov
jo
push
pushf
pop
lcall
sbb
push
fldt
xor
mov
mov
je
mov
lret
adc
mov
movsl
mov
mov
dec
dec
je
into
in
popf
xor
dec
pop
sbb
xchg
stos
jo
xor
into
sub
pop
iret
cmp
inc
adc
xchg
ljmp
arpl
inc
mov
fstpl
test
sti
ss
pop
sbb
adc
sub
aad
ss
inc
fadd
adc
push
enter
sub
push
jns
stc
mov
cmpsb
pushf
loope
inc
shlb
sub
insb
mov
fbstp
inc
les
inc
mov
mov
insb
fcompl
xchg
jle
out
jle
mov
and
cltd
push
pop
xchg
std
cmp
outsl
sahf
aam
int
sub
inc
push
loopne
adc
mov
push
stos
and
pushf
mov
and
xor
and
add
mov
clc
mov
cmp
lcall
data16
clc
pop
popa
lret
loope
frndint
fldpi
outsb
and
iret
jg
enter
mov
pop
sbb
xchg
jb
add
xorl
lods
jp
push
loop
jmp
mov
clc
jl
pop
out
inc
pop
cltd
sub
jl
inc
dec
adc
gs
call
xor
scas
aaa
aam
sub
add
mov
lret
sub
pop
mov
in
addr16
push
mov
fiaddl
sti
cmp
aad
mov
adc
mov
dec
xor
adc
sub
xor
jg
add
data16
xchg
xchg
pop
xchg
or
push
lock
mul
pusha
mov
lods
lcall
jo
in
ss
dec
ljmp
lea
pop
mov
in
jg
fiadds
mov
pushl
sub
mov
repnz
mov
ljmp
mov
sbb
iret
lock
or
cmp
int
pop
adc
sub
jmp
mov
mov
ficoml
insb
push
sub
and
push
addr16
sub
cs
cmp
fwait
sbb
add
inc
sub
popa
inc
push
cmp
mov
adc
testb
stc
inc
inc
fisubrs
fstpl
mov
mov
inc
adc
daa
jle
inc
cwtl
pop
pusha
pop
push
xchg
inc
jg
xor
jg
inc
int3
jns
xchg
divb
ss
pop
jae
push
sbb
inc
push
xor
sar
cmp
add
jns
cmp
stos
lods
pop
adc
push
les
or
sub
pop
mov
sti
push
pop
pushf
movsl
add
cmp
dec
add
jle
jge
cltd
add
sbb
jmp
cmp
popf
xchg
sbb
sub
pop
jmp
or
xchg
fucomp
lock
inc
pop
cwtl
push
push
imul
pop
mov
divl
push
in
xchg
adc
dec
adc
repz
jmp
test
fstpt
sbb
mov
ret
test
filds
inc
inc
pop
push
push
cmp
push
dec
loop
mov
pop
std
pop
popf
pop
mov
nop
fwait
xchg
add
dec
stc
ljmp
push
stc
cmp
or
out
clc
push
test
in
stos
jg
movsl
not
push
es
loope
mov
imul
push
sarb
xchg
repnz
scas
add
inc
adc
sub
das
aaa
lahf
outsb
in
out
lcall
push
sub
mov
pop
sub
stos
fstps
cmc
das
cmp
push
jb
daa
inc
add
adc
xor
xchg
inc
mov
loopne
rcrl
mov
in
mov
fmull
ljmp
lret
sub
sub
les
mov
and
ja
insl
adc
jg
adcb
mov
jbe
push
ds
jle
cmp
mov
sbb
outsb
sbb
dec
jp
std
stos
dec
shrb
outsl
mov
and
cltd
or
and
mov
stc
adc
bound
sub
scas
ja
std
cwtl
sbb
push
jns
ja
cmpb
or
fisubl
mov
addb
push
add
sbb
xor
lods
mov
inc
arpl
movsl
sub
outsl
notb
jne
je
insb
hlt
aas
sahf
aad
loopne
jmp
xchg
sub
loope
je
dec
pushf
repz
mov
xchg
or
jns
ss
add
test
inc
push
stos
std
sub
push
xor
add
push
and
insb
pop
ja
xchg
sarl
mov
cmp
lret
idivb
mov
adc
cmp
out
xor
cmpsl
jae
rclb
clc
call
sub
in
out
and
fwait
mov
fsts
fnstsw
arpl
push
pop
pop
mov
push
aam
insl
xchg
out
fwait
cmp
pop
fucom
rclb
xchg
es
popf
arpl
testl
cltd
test
cltd
cmp
rorb
insl
or
jo
test
or
push
dec
packssdw
ds
std
es
clc
dec
adc
dec
mov
pop
and
jp
ret
push
subb
ljmp
push
cmp
and
mov
mov
inc
mov
lret
leave
stc
inc
movsb
dec
pushf
cmp
jl
mov
jb
repnz
test
rclb
xchg
jno
imul
push
js
xchg
sub
decb
andl
in
sub
push
dec
fisubrs
lret
fiadds
std
or
jo
xchg
loop
rorl
pop
jne
inc
mov
mul
popw
stos
inc
es
clc
adc
mov
xor
stc
scas
rolb
mov
repz
push
loope
popf
mov
fistpll
and
cli
imul
jl
jns
xchg
pushf
das
imul
lret
inc
xchg
clc
or
gs
pop
sahf
xor
decb
int3
int3
xchg
xchg
mov
fbstp
sarl
setbe
iret
adc
push
push
iret
fstpl
movl
push
jle
adc
stc
insl
or
adc
sub
test
out
and
es
movsl
xchg
jl
mov
mov
rolb
iret
jbe
negb
sbb
sbb
repz
stos
hlt
push
add
ret
push
and
mov
imul
inc
mov
lds
pop
inc
cld
shll
into
mov
cvtpi2ps
je
adc
jge
mov
pushf
mov
cmc
test
in
pop
stos
jno
es
dec
adc
mov
jne
push
mov
fidivl
gs
popf
pop
shlb
aad
rcll
stos
clc
cmp
cmc
adc
inc
add
mov
push
enter
int3
jne
outsb
pushw
sbb
lcall
loope
cmpsl
xchg
or
js
inc
mov
mov
push
adc
add
sahf
popa
sbb
mov
and
lods
or
xchg
and
mov
xchg
lcall
dec
cs
mov
sbb
mov
push
pusha
fstpl
sbb
jns
jl
cmp
lods
cmp
or
scas
das
ret
mov
loop
cmp
test
dec
fwait
push
in
add
sbb
mov
popf
shlb
jae
sti
cltd
sbb
loope
gs
adc
mov
lret
and
out
lea
xor
or
xlat
jbe
push
int3
lea
xchg
or
dec
cmc
jle
jns
jae
repnz
jmp
sub
int
push
lahf
dec
std
and
pop
or
mov
mov
jmp
movsb
mov
xchg
cmp
lods
mov
js
pusha
push
iret
js
ds
cli
aas
inc
jmp
sbb
je
xchg
dec
testb
dec
inc
cmpsl
out
sbb
mov
dec
lret
js
fdivl
je
sar
mov
into
out
fpatan
add
mov
scas
mov
test
sub
ja
push
cmp
fimuls
dec
cmp
jno
in
rorb
adc
mov
ret
scas
inc
nop
and
cmpsb
inc
push
fcomip
inc
outsl
mov
push
stos
and
mov
mov
or
fs
sub
ja
sub
imul
mov
icebp
mov
or
icebp
sbb
scas
clc
mov
stos
mov
test
xchg
out
cmp
push
xor
test
test
cmpsl
adc
es
hlt
pop
fcoml
jmp
sbb
fsubp
out
push
sub
sub
in
or
sub
adc
pop
add
xlat
iret
pop
pop
lds
cltd
lret
cmpsl
shlb
mov
int3
push
insl
iret
xlat
xor
mov
sub
enter
jnp
mov
int3
sub
hlt
inc
pop
xor
and
rcrl
outsl
sub
es
sub
sub
jge
jl
sbb
jb
outsl
cwtl
lock
cmc
sub
inc
push
xor
jecxz
call
cmp
xor
jno
ljmp
inc
and
addr16
inc
cltd
hlt
in
fs
adc
outsl
jae
sti
jge
lahf
xchg
push
ljmp
lcall
fmuls
out
lret
mov
iret
sub
xchg
in
inc
jae
notl
dec
cmpsb
ljmp
pop
aas
arpl
push
adc
inc
icebp
lods
xor
lret
add
arpl
iret
fisubrs
mov
shr
inc
or
mov
lods
fdivrs
aas
aad
in
adc
sbb
xor
sahf
mov
mov
jno
adc
jo
test
stc
mov
push
mov
sbb
fistps
dec
cmpsl
imul
cld
push
or
jno
ja
mov
sub
cmp
push
sbb
ret
fldt
xchg
call
pop
jg
push
es
popf
push
xchg
mov
imul
stos
cmp
into
into
ret
addb
sti
movsb
stos
lea
inc
mov
sub
add
mov
jmp
fisttpll
mov
xchg
scas
cld
mov
jb
dec
mov
mov
lret
popa
ds
sub
cwtl
jne
popa
add
adc
int
sub
testl
or
inc
add
pop
xchg
xchg
sub
mov
leave
jno
lea
fisubs
in
movsb
add
shll
std
inc
stos
mov
mov
inc
orl
mov
mov
mov
aaa
pop
das
jecxz
ret
sub
daa
dec
test
adc
int
xchg
pop
jg
sub
shll
aam
or
mov
leave
lods
push
lock
icebp
push
arpl
cmp
repnz
inc
adc
int
gs
fstps
push
and
push
inc
mov
xor
aad
dec
add
lds
jae
insl
sbb
and
push
mov
pop
lods
fdivp
push
sbb
movsb
dec
push
sub
add
cmp
sti
adc
notl
mov
mov
mov
push
jnp
sahf
cmpsl
mov
mov
cmp
loop
sbb
insb
ret
loopne
dec
orl
stos
scas
or
pop
movsl
push
cmp
out
mov
loope
pop
dec
js
jmp
adc
in
push
lea
sarl
mov
fwait
xchg
add
jl
cmp
aaa
push
cmpsl
lock
das
out
jge
sub
sub
std
xor
inc
mov
xchg
mov
push
mov
xchg
setl
mov
cld
mov
mov
lock
sbb
sbb
repz
popa
aas
imul
stos
jp
jns
mov
js
push
testl
or
fwait
sbb
loop
lods
cltd
push
xor
stc
add
lahf
inc
ds
mov
addr16
add
inc
pop
mov
jp
clc
fwait
in
ljmp
out
scas
roll
fabs
in
adc
or
aaa
out
test
cltd
incb
sbb
mov
cmp
call
je
adc
xchg
xor
xchg
ret
or
push
int3
movhps
push
imul
jle
mov
cmp
or
xchg
sub
sbb
pop
add
mov
push
pop
fisttpl
out
stos
mov
push
rcl
fs
add
jb
out
xor
in
arpl
js
cmc
and
into
pop
sbb
pop
lcall
call
frstor
adc
rcrb
fildll
add
mov
leave
cmp
jo
mov
xchg
sbb
dec
cli
sub
dec
push
sub
pushf
ljmp
mov
ljmp
lea
pop
rcrb
pop
xor
dec
sahf
sbb
mov
mov
fs
jge
ficompl
arpl
fs
add
mov
ds
lods
or
inc
cmp
sub
mov
dec
push
pop
clc
jecxz
lds
inc
cltd
adc
lds
and
pop
jo
jl
jl
outsl
ds
push
or
nop
das
push
adc
push
inc
push
pusha
fnsave
mov
lahf
cmc
sti
inc
addr16
pushf
push
xorl
or
cmpsb
scas
scas
insb
sub
test
insl
push
repnz
pop
cmp
loopne
inc
imul
mov
cmpsl
ret
jbe
call
inc
push
push
mov
ss
pop
jne
sub
dec
adc
loopne
aaa
xchg
and
add
subb
dec
xor
xlat
add
pop
jge
sub
pop
fwait
ljmp
insb
inc
shlb
nop
push
fwait
movsl
jmp
loopne
jmp
cmpsb
sahf
and
sbb
test
lds
lret
xchg
or
mov
pop
jmp
push
negb
fsts
and
jge
ficoms
ja
jb
add
xchg
lods
or
xor
adc
dec
add
imul
mov
push
popa
jb
push
jle
fwait
dec
push
fistpll
aas
dec
xlat
sub
sbb
jecxz
mov
popa
sub
or
arpl
mov
add
mov
fsubr
not
jne
xchg
js
sub
out
adc
enter
jbe
mov
inc
das
adc
xor
xchg
std
xor
mov
dec
inc
dec
jge
mov
data16
lods
flds
test
ss
les
push
push
outsb
rcl
dec
cltd
sub
fucomi
ds
stc
pushf
add
dec
jae
lret
andb
popf
jle
ljmp
xor
jb
xor
sub
insl
mov
outsb
jle
sahf
or
cmp
inc
dec
inc
sahf
inc
jbe
jae
mov
sub
insb
pop
pushf
jmp
mov
cmp
jb
mov
js
loope
mov
cmp
sbb
aad
sarb
cmpsb
push
pop
adc
scas
dec
out
inc
and
movsb
push
mov
inc
lods
lods
and
xchg
fiadds
std
das
mov
daa
lcall
daa
mov
into
jmp
jnp
jne
shl
or
rorl
sbbb
shlb
or
jmp
lcall
sbb
xchg
or
xchg
popf
insl
inc
movsb
test
and
fwait
in
daa
adc
push
in
pop
push
enter
std
in
xor
mov
dec
mov
jge
in
sbb
sub
movsb
mov
fidivl
push
jg
fmul
leave
jp
dec
add
mov
and
sarb
jg
outsb
dec
jmp
sbb
shll
adc
ja
jl
push
and
rcr
or
mov
sar
inc
mov
pop
pop
xor
or
pop
inc
dec
roll
xchg
push
pop
add
mov
pop
call
dec
rcl
or
sub
test
cmp
shl
daa
mov
push
push
inc
jns
lahf
adc
jl
mov
enter
mov
loop
mov
push
pop
and
cmp
mov
cs
rdmsr
sub
lods
mov
ret
inc
rcrb
or
outsb
mov
inc
jmp
push
sar
mov
outsl
mov
jmp
into
ds
in
pop
fwait
xlat
out
xchg
aam
push
bound
out
mov
clc
xchg
aam
aaa
cmp
inc
cli
mov
leave
adc
and
aam
and
cli
and
inc
mov
mov
divb
leave
mov
push
lock
jle,pn
inc
xor
cmpsb
push
sti
arpl
push
inc
aad
pop
jmp
xchg
in
adc
movsl
mov
xor
and
inc
pop
mov
jg
cltd
rol
stos
scas
push
into
sub
mov
aad
cmp
jl
jecxz
fisubl
fistps
inc
cmp
lcall
shr
je
pushw
frstor
out
fisttpl
cmp
pop
into
loop
sub
arpl
std
mov
adc
jo
es
mov
dec
jne
js
xor
cmp
fisttpll
std
insb
push
sub
and
mov
sub
push
jge
mov
sub
inc
fcompl
loope
cmpsl
bound
mov
mov
mov
cmpsb
jo
scas
in
aas
lahf
jae
in
fwait
push
xchg
inc
add
and
jb,pn
pop
and
push
rolb
and
cmc
fimull
adc
decb
bound
pop
push
sahf
les
xor
adc
das
mov
sbb
sbb
sti
scas
hlt
mov
aam
jle
jnp
cmp
sarl
call
cmc
rorl
and
dec
sub
and
clc
inc
lods
cmpsl
pusha
in
sub
cwtl
dec
je
and
cmp
pop
xlat
pop
stos
mov
insl
vpinsrw
daa
jge
mov
mov
pop
cmp
cmp
in
push
jno
sbb
bound
dec
push
mov
mov
scas
inc
testl
sarb
xchg
mov
or
cmpsl
aam
add
or
ret
popf
mov
aam
pop
sbb
loope
hlt
mov
in
jecxz
pop
jle
xchg
dec
pushf
jbe
scas
subb
iret
fnstsw
add
clc
mov
outsl
aaa
lock
movsl
scas
jmp
gs
enter
mov
pushf
leave
mov
movsb
push
fisubrs
pushf
std
xchg
ret
loope
push
pusha
xor
jno
cmc
xor
mov
ret
cmp
push
pop
sub
enter
into
or
jg
mov
add
lods
or
xor
pop
nop
cmp
jo
loope
push
cwtl
imul
aam
sub
pushf
dec
and
call
divb
or
sub
cmp
inc
lahf
ret
cld
xor
addr16
push
xchg
loope
ficompl
ss
sub
fs
jle
push
filds
xlat
mov
add
push
pop
jne
loop
jp
push
mov
lds
xchg
mov
and
scas
sar
stos
push
jg
popf
mov
push
adc
stos
dec
xchg
and
sub
in
imul
jecxz
insb
jecxz
imul
lret
aad
cmp
cltd
xlat
and
inc
icebp
mov
mov
fbstp
fstps
bound
ret
inc
mov
xchg
pop
inc
or
out
xchg
sbb
out
jl
dec
dec
aaa
adc
sub
mov
out
mov
out
cmp
in
aaa
lahf
loope
sub
add
xchg
xchg
loopne
mov
mov
fs
jecxz
mov
aaa
testl
iret
pop
inc
and
cli
adc
sbb
adc
pop
ljmp
fisubrs
out
dec
scas
xor
je
xchg
sub
lea
push
adc
push
adcb
shrl
leave
out
sub
pop
sbb
scas
out
mov
cmp
jge
out
push
xchg
fmuls
aad
mov
mov
insl
aaa
cld
dec
inc
fwait
pop
xchg
push
and
xor
mov
gs
pop
cwtl
xchg
pop
les
push
pop
xchg
xchg
iret
insb
les
mov
fwait
inc
dec
push
rorl
test
out
lret
lret
imul
inc
mov
xchg
cmp
jne
sub
test
loop
ret
pop
adc
dec
mov
xchg
push
das
sarb
jle
sbb
aam
insb
sbb
fldcw
inc
adc
shll
out
xchg
xchg
es
pop
subb
ja
mov
and
pop
push
sub
cmp
js
ds
imulb
inc
xchg
mov
out
xchg
mov
es
cmp
xor
cmp
mov
lods
cmp
addr16
xchg
stos
js
cs
xor
inc
call
fstpt
mov
pop
pop
ret
iret
mov
js
aaa
popf
sub
aas
jp
xor
pusha
leave
scas
dec
xor
jecxz
pop
sarb
out
push
movsb
bound
arpl
sarl
aas
fs
int3
adc
jnp
je
adc
mov
rcll
outsb
fwait
push
andl
pop
jecxz
ds
cli
ss
test
into
mov
fcoml
lahf
sbbl
in
loopne
les
sub
test
gs
sahf
inc
adc
add
dec
sbb
popa
and
sbb
mov
adc
add
xor
test
and
adc
add
adc
nop
loop
gs
outsb
aas
dec
jp
sbb
std
jg
or
and
mov
shl
or
ret
mov
pop
add
sbb
out
pusha
and
loopne
cmpsl
stc
lock
xchg
jmp
sarl
add
sub
push
scas
adc
cmp
lea
outsl
in
xchg
push
iret
cltd
push
imul
ret
jecxz
ljmp
repnz
rcrb
inc
and
aad
pmulhw
imull
dec
adc
mov
mov
call
xor
cmpsb
and
aam
pop
scas
mov
std
lds
fwait
add
dec
jg
in
or
loop
dec
cmp
push
push
insl
psrlq
je
clc
aaa
jne
mov
les
addr16
cmc
or
mov
and
frstor
push
stos
xlat
iret
mov
aad
in
sbb
push
ret
or
xor
movsb
jl
ja
imul
mov
out
add
xor
dec
jle
cmpsb
rcrb
popf
sbb
icebp
in
lock
jo
nop
xchg
int3
adc
mov
cmpsb
push
push
je
and
push
pop
pop
or
ja
xor
lahf
sub
pop
or
std
das
xor
jmp
mov
shrd
in
addl
in
lods
js
pop
arpl
mov
pop
sbb
gs
and
mov
pop
add
inc
nop
jb
or
adc
xchg
stc
jae
imul
or
pusha
push
add
cli
dec
jno
int
mov
add
pop
cmovne
pushf
add
shll
mov
pop
jg
sbb
mov
inc
mov
je
aaa
fldt
add
jb
mov
mov
test
pushf
mov
cmp
jmp
aad
pop
inc
orl
and
jmp
dec
or
test
shll
in
out
lds
ds
cmp
fwait
ss
push
xlat
leave
mov
xchg
xor
cmp
pop
fstps
jne
jmp
enter
adc
outsl
lea
add
xor
cmp
xchg
pop
clc
clc
push
mov
xchg
jge
sub
notl
ljmp
cs
arpl
mov
loop
sbb
fisubrl
jns
mov
mov
test
push
mov
pop
stos
stos
mov
fsub
inc
mov
stos
test
cmp
add
orb
push
adcb
cmp
jmp
xor
test
xlat
jmp
ja
aaa
cmp
lock
jne
pop
xor
insl
xchg
rorb
lds
jae
outsb
insb
mov
pop
nop
sbb
pushf
jg
rcl
xor
mov
pop
shll
mov
dec
inc
in
pop
push
scas
ds
in
repnz
movl
add
out
out
cmp
pop
sub
in
mov
hlt
or
jns
scas
test
dec
push
push
and
sbb
jp
mov
je
inc
sar
in
fcompl
mov
aas
xchg
fidivl
test
xchg
cmpsb
add
repz
dec
push
cmc
insl
nop
sub
push
adc
mov
cmp
and
jmp
dec
fsubl
push
pop
xchg
movsb
mov
nop
or
jle
mov
js
in
xchg
cwtl
xchg
or
pushf
popa
adc
adc
addr16
mov
sub
cmp
insb
add
adc
mov
push
jno
jl
stos
pop
push
mov
in
stc
sti
shlb
mov
das
mov
repnz
xchg
fwait
push
cmp
movsl
jl
sub
dec
push
loopne
test
adc
jmp
pop
es
adc
sbb
pop
call
adc
dec
insl
bound
sub
xchg
jbe
xorb
lret
pop
add
pushf
nop
push
insl
xor
jge
lea
mov
add
pop
int
or
pop
das
mov
pop
orl
jg
leave
out
ljmp
cmpsl
popf
ja
data16
cmpl
pop
pop
imul
cmp
popf
push
mov
push
gs
pop
mov
nop
sbb
and
int
out
and
jb
repz
loop
sbb
cmp
jmp
std
test
xchg
cmp
fiadds
dec
loopne
icebp
daa
clc
out
insb
scas
add
out
dec
lret
call
push
les
mov
int3
sahf
out
sbb
push
adc
mov
xor
cmp
sbb
mov
insb
xchg
mov
filds
dec
fisttps
push
or
sbb
inc
inc
je
pop
mov
adc
jp
cmpsl
jnp
pop
jbe
test
sub
lock
pushf
sti
lds
jg
sarl
dec
mov
sbb
and
jmp
xchg
pop
sbbl
cld
ljmp
xorb
icebp
dec
ss
and
sub
xchg
xchg
cmp
fisubrs
in
mov
xor
push
dec
add
or
cmp
push
push
jge
xchg
sub
mov
mov
jecxz
dec
fs
jge
scas
sbb
mov
xchg
das
sbb
cmp
and
inc
jne
inc
dec
fisubs
mov
cwtl
xchg
fsubrs
sbb
fnstenv
negb
ljmp
and
inc
call
mov
pop
jmp
pop
sub
pop
push
push
mov
call
into
cld
adc
out
loopne
popf
ljmp
inc
sub
fwait
inc
cmp
jg
or
fs
out
pop
testb
cmpsb
lods
pop
sub
cmpl
dec
icebp
mov
jae
mov
lea
jns
mov
adcl
xchg
and
imul
mov
cmpsl
dec
hlt
test
and
sub
xchg
mov
sbb
stos
aaa
inc
inc
mov
mov
xor
enter
mov
out
imul
jg
adc
je
ret
xlat
sbb
int
call
lcall
outsb
sub
lods
aaa
into
dec
scas
xchg
test
fbstp
pop
scas
sub
xchg
into
jnp
mov
pop
push
push
sti
or
ficomps
push
scas
test
xchg
mov
pop
pop
pop
mov
or
iret
push
mov
aad
imul
adc
inc
add
mov
movsb
jo
cmpsb
stc
pop
adc
rol
and
cmp
cmp
clc
xor
jnp
repnz
out
or
sbb
mov
je
sub
mov
push
mov
and
je
inc
mov
in
cmp
ret
mov
gs
dec
cmpsl
xor
lret
xor
ret
cmp
xor
push
jle
lods
insl
xorb
rolb
scas
add
arpl
cmp
inc
gs
sbb
fmul
sbb
and
pop
xor
push
fldt
push
inc
pop
sub
push
pop
popl
or
adc
mov
popf
xchg
ss
inc
ret
inc
or
jge
xchg
jne
stos
stos
enter
adc
mov
push
dec
lret
aam
in
xor
hlt
inc
or
pop
jge
mov
cld
mov
mov
shlb
ja
test
lret
mov
insb
fcompl
jno
ds
popa
mov
dec
mov
and
sub
push
inc
outsl
jmp
ret
insb
loope
int
bnd
adc
cmp
push
lods
mov
out
lods
pop
cli
xchg
push
mov
push
mov
and
nop
movsl
and
fwait
or
dec
and
and
jp
pop
push
popa
or
cltd
push
cmpb
loope
cli
or
push
xor
and
test
xchg
cmp
mov
inc
dec
gs
out
jge
bound
testl
rcrb
sbb
clc
cld
sbbl
sub
push
xchg
xchg
mov
xchg
call
adc
enter
dec
sbb
dec
mov
ss
dec
mov
push
cmc
sub
orb
div
fisttpl
call
testl
sti
sub
xchg
fs
data16
iret
cld
jnp
adc
dec
pop
jnp
sbb
inc
ljmp
inc
pop
sub
dec
loope
pop
cmp
loopne
jns
push
dec
sub
cltd
stos
rcll
mov
adc
aam
push
jb
adc
or
sti
fmul
sub
hlt
and
cld
cmp
cs
cmpsb
xchg
jge
jae
dec
call
js
pop
jno
mov
mov
add
test
lcall
pop
pop
cli
push
push
mov
cmp
push
call
and
mov
movsl
mov
ret
pop
push
adc
jecxz
pop
ljmp
fimuls
test
sbb
push
insl
mov
adc
push
lds
dec
inc
adc
or
mulb
sar
lret
jns
push
mov
cmp
jb
popf
mov
and
rcll
fadd
xchg
inc
out
in
iret
mov
mov
push
push
jge
arpl
out
gs
adc
mov
sub
fsubrp
adc
pop
cmpsb
stos
shlb
out
jo
movsl
call
mov
fimuls
mov
mov
xchg
inc
and
stos
bnd
pop
fcoml
scas
adc
add
in
pop
sbb
inc
mov
out
insb
cmp
sbb
mov
pop
ret
cmp
sahf
push
cld
sub
inc
test
pop
cmp
jnp
xchg
xchg
cmp
loopne
aaa
cs
mov
sub
jge
add
push
dec
jg
jo
cmp
hlt
icebp
push
xor
add
and
jne
pop
shll
dec
and
adc
cwtl
adc
sbb
in
cmp
adcb
into
je
mov
mov
jl
push
int3
xor
jae
adc
scas
mov
mov
xor
xorb
clc
inc
popf
sub
push
shll
pop
sahf
sub
pop
mov
and
push
js
and
popf
pop
imul
pushl
add
sub
cmp
cmovae
inc
fnstsw
pop
mov
xor
fsubl
or
xor
aam
bound
int
pop
mov
inc
mov
in
fucomp
fdivs
popa
sub
out
xor
mov
jbe
adc
or
insb
fisttpl
int3
mov
in
testb
xor
jnp
mov
js
and
add
dec
dec
enter
and
loop
mov
xor
nop
xchg
js
movsb
lods
jbe
aas
mov
mov
enter
cmp
iret
xchg
jnp
cmp
outsl
cltd
mov
or
cmpsl
out
iret
jnp
jecxz
outsl
jle
imul
sub
lods
insb
loopne
jecxz
mov
lret
xor
cmp
or
imul
sti
jp
fs
inc
into
sbb
add
xchg
mov
mov
les
inc
movsb
cmp
lock
cmpsl
rorb
rorl
shlb
in
icebp
jae
repz
fs
push
push
jo
xabort
inc
push
xor
cmp
xor
mov
loop
inc
lcall
test
xchg
test
inc
cwtd
out
jl
pushf
cmc
loope
nop
jle
mov
cmp
and
jne
sub
pushf
and
cmp
test
hlt
pop
lods
enter
popa
call
cli
mov
test
je
sbb
daa
arpl
inc
xor
pop
jecxz
ret
nop
sti
mov
push
mov
test
insb
or
pushf
sub
popf
fbld
push
pusha
int
push
sub
sub
sbb
test
push
fists
out
dec
mov
enter
div
popf
sbbl
xchg
adc
cmp
popf
mov
or
adc
and
fcoms
pop
out
add
xchg
push
mov
cmc
jae
adc
imul
ss
push
lock
ret
jmp
loopne
mov
push
dec
add
sbb
mov
gs
cmp
sub
push
and
rcrl
repz
divl
fstl
mov
ss
js
jg
pop
lock
insl
jo
and
stos
sub
shlb
popf
lods
pop
cmp
ja
and
dec
and
test
cmp
into
xor
adc
repz
inc
nopl
sbbl
cmp
jmp
mov
dec
sbb
mov
mov
loope
inc
imul
stos
cltd
sub
stos
push
shrb
cwtl
addb
or
pop
and
dec
jecxz
cmpsb
jnp
and
ret
cltd
movsl
inc
int
mov
adc
xchg
mov
mov
push
sbb
es
hlt
push
inc
jne
mov
mov
mov
mov
adc
aaa
jge
cmpsl
cmp
enter
ja
inc
pop
xchg
js
ljmp
mov
es
sub
xor
bnd
pop
add
and
movsb
push
mov
insb
adc
cli
je
xchg
pop
loopne
pop
or
cs
out
add
mov
cmpsb
adc
push
or
test
lds
mov
popa
in
pop
mov
arpl
loopne
jp
ficoms
enter
mov
std
test
pop
jnp
out
pusha
aaa
xor
sahf
sbb
es
jno
test
push
push
or
sti
aad
movsb
mov
pop
sti
movsb
xlat
pop
jmp
popa
jge
mov
cmp
mov
sti
sub
adc
pusha
js
andb
outsl
jl
pusha
fwait
dec
mov
cmp
push
aaa
xor
pop
jne
sbb
pop
dec
push
outsl
jbe
sbb
jbe
xor
sbb
clc
sar
test
jmp
cmp
sub
mov
mov
mov
push
ret
std
fiaddl
in
shlb
insl
mov
cld
std
jge
les
int3
aad
sub
or
faddl
xlat
cmp
and
cltd
pop
sahf
inc
push
dec
sbb
negb
aad
push
jge
shr
add
mov
pop
add
in
mov
xchg
cmp
jle
int
cmp
lods
adc
imul
push
xchg
scas
mov
aaa
cld
cwtl
add
cmp
pop
pop
cld
cmp
shlb
fdivr
movsl
divl
xor
or
adc
inc
lret
mov
in
add
hlt
mov
jae
popa
mov
js
cmp
jae
enter
jecxz
lods
clc
shl
sub
ss
and
xor
xchg
out
fbld
add
pop
push
mov
test
jp
ret
sub
xor
je
dec
out
in
out
insb
jae
in
shrb
out
stos
test
mov
pop
shll
push
inc
xor
dec
adc
adcb
adc
aas
xchg
and
pop
fisubs
cmp
adc
cmpl
mov
xchg
inc
xchg
fistpll
push
mov
test
add
notb
nop
fstpt
mov
jg
popa
shl
lods
dec
lds
xchg
sub
sub
push
inc
or
repz
adc
sub
jb
rcll
dec
cld
sarl
lods
test
addr16
pusha
jne
ds
dec
sub
mov
sahf
xchg
pop
lret
jge
or
mov
cmp
push
cmp
sub
andb
sbbl
loopne
cmpsl
out
loop
cmp
pop
fisubs
shr
lods
inc
aaa
xchg
cmp
or
adc
xchg
movsl
hlt
jnp
out
es
cmp
daa
outsl
mov
loop
loope
and
out
mov
and
mov
mov
cmc
push
adc
icebp
mov
cmp
aaa
sbb
sbb
arpl
or
loopne
xor
sub
push
cli
xlat
movsb
into
fs
mov
repz
inc
ret
pop
jo
dec
cltd
pop
lret
inc
jle
or
fsub
push
mov
pushf
inc
repz
lock
popf
loope
pusha
fldl2e
sbbb
xor
inc
loop
cmp
xor
lods
loopne
pop
clc
cld
push
fldcw
add
popa
xor
jb
addr16
enter
inc
call
mov
sbb
push
xchg
xchg
lods
xor
or
push
or
adc
pop
add
repnz
scas
out
mov
mov
add
stos
jle
push
lock
ja
daa
mov
and
mov
cmp
mov
roll
sub
mov
push
sub
adc
fisttps
inc
sarb
mov
sub
bound
call
in
cmc
lods
sbb
fiaddl
sbb
test
sbb
cmp
out
popf
mov
ds
add
shrl
cld
call
ss
add
xchg
loopne
in
fcmovne
jp
mov
mov
in
mov
sub
push
mov
mov
lcall
lods
jns
and
inc
xchg
mov
sub
sub
sbb
nop
mov
ljmp
xor
fcompl
xchg
cwtl
rcr
inc
fwait
or
leave
pusha
sub
and
lahf
pushf
movsb
test
and
mov
mov
and
data16
cmp
pop
popa
pop
push
ljmp
push
xchg
add
mov
clc
lods
pop
cmp
add
rolb
cmpsb
inc
pop
dec
sahf
pop
jnp
sbb
xlat
mov
outsl
jecxz
ror
aam
in
mov
mov
mov
clc
mov
lahf
sbb
cwtl
adc
iret
push
imul
aaa
scas
iret
cmp
js
or
sbbl
or
cmp
leave
arpl
ljmp
mov
andl
out
mov
or
inc
add
cld
loop
inc
fsubl
call
loopne
dec
outsb
lahf
xor
jb
adc
rolb
jp
lahf
stos
std
in
mov
sbb
jp
mov
stos
jp
aam
mul
inc
mov
pushf
jae
pop
imul
add
loopne
cltd
stc
sbb
pop
jge
lods
cmpsb
cwtl
fwait
dec
jp
xor
sub
outsl
les
pop
fcoms
fstl
inc
push
add
inc
xchg
mov
push
dec
arpl
jle
addr16
jno
lods
cmp
lds
stc
sub
mov
clc
test
xchg
rcll
and
daa
aas
pop
std
out
nop
pop
in
sub
lcall
repz
mov
push
adc
inc
mov
movsl
sub
mov
push
jns
mov
add
out
int
jno
add
clc
mov
lods
inc
xor
int3
jno
jae
int
nop
rcrl
dec
pop
jns
imul
stos
adc
in
dec
enter
pop
dec
fmull
pop
cmp
lcall
in
std
xchg
xor
outsl
bnd
push
push
dec
jnp
or
bound
dec
dec
jae
outsl
test
and
jle
sti
sub
pop
in
aad
bound
jno
pop
xor
out
dec
pop
sbb
ret
stos
or
stc
stos
gs
pop
add
cli
sarb
mov
xchg
imul
push
std
xchg
jl
loop
pushf
cmpsl
xor
ja
cmp
dec
lcall
cmp
popf
push
int
push
sahf
ret
sbb
pop
sub
dec
push
movsb
pop
pop
movsl
pushf
lds
pop
mov
rcrl
push
jae
ret
cltd
inc
mov
xchg
sbb
cmp
pop
je
and
sbb
pop
bound
arpl
inc
pop
imulb
mov
mov
decb
fiaddl
mov
out
into
inc
not
xchg
pop
fcompl
xchg
shlb
outsl
js
arpl
stos
jle
rorb
push
divl
cwtl
push
add
in
lcall
insb
and
in
xor
cltd
shll
jmp
ss
in
pop
mov
int3
jne
jo
mov
xor
das
cmpsl
ret
ss
sub
sub
jno
fildl
movsl
adc
xchg
and
dec
fwait
and
jne
pusha
rorl
adcb
push
mov
in
repnz
leave
or
ja
pop
sub
add
loop
dec
incl
dec
fadds
adc
and
loop
xchg
ljmp
clc
mov
shrb
xchg
add
mov
push
inc
repz
sub
xor
movsb
mov
mov
adc
or
gs
or
mov
push
cmpsl
cmc
test
sub
outsl
scas
leave
jnp
test
mov
stos
fisttps
out
pop
imul
lret
push
mov
xor
ds
pop
lret
mov
leave
clc
cld
movsl
push
xor
mov
add
mov
or
xchg
and
sub
mov
xchg
call
inc
into
pop
adc
leave
or
adc
bound
sub
dec
or
icebp
jmp
in
sub
int3
xchg
fstpl
adc
shll
pop
clc
push
lock
imul
jns
ret
lock
mov
ficompl
ret
mov
jbe
pop
mov
push
outsb
lret
cmc
xor
popf
adc
mov
ljmp
les
push
pop
mov
dec
sub
scas
cld
xorl
xchg
mov
lea
rcll
leave
xlat
xor
jmp
cmpsb
pop
testb
sub
cltd
lods
cmp
dec
inc
cmp
aad
lret
add
sbb
xchg
pop
xchg
gs
lret
stc
and
std
or
xlat
pop
lock
outsb
pop
dec
aas
bound
mov
push
dec
add
mov
std
test
cwtl
sub
outsl
shl
add
mov
addr16
jle
add
out
cld
jmp
sbb
leave
add
mov
in
push
and
scas
inc
push
mov
mov
cmpsb
adc
movsb
mov
adc
iret
inc
push
push
fimull
xchg
jno
fimull
pop
cli
ja
int3
jp
pop
mov
sahf
fdiv
lret
jo
push
mov
or
xchg
leave
int3
cmp
cmp
aad
sbb
fcomps
mov
pop
adc
cmp
and
insl
popf
mov
jle
out
addr16
mov
je
cltd
out
xchg
fdivrs
hlt
divb
lock
out
test
in
imul
adc
loopne
dec
push
jmp
push
jle
add
jae
ret
mov
add
cmp
dec
adc
sbb
cmc
add
fldcw
cmp
jg
out
cmc
or
repnz
mov
aad
aam
xadd
lahf
fldcw
cmpsb
leave
pop
dec
pop
dec
pop
jbe
ret
fstpt
mov
xchg
and
jbe
mov
stos
fisubrs
lret
icebp
pusha
adc
fisubl
and
clc
mov
lahf
jp
xchg
dec
pop
push
lods
fists
aaa
or
adc
mov
sahf
xorl
xor
cltd
ss
aas
stos
push
mov
in
inc
push
and
cmpsb
xor
lock
sbb
fs
cltd
cmp
out
or
mov
inc
push
sub
or
test
jne
dec
mov
cmc
jp
cmp
inc
aaa
mov
adc
pop
cmp
push
cwtl
ficoms
push
rcrb
in
gs
scas
push
ret
jp
cmp
popa
push
pop
or
sbb
and
scas
xor
mov
gs
int
jmp
test
bound
inc
or
aas
test
push
adc
add
adc
lahf
dec
imul
rolb
dec
insl
arpl
insl
push
adc
xlat
leave
push
out
jmp
fnstcw
sub
or
jp
movsb
push
repnz
imull
std
fdivs
orl
jp
cmp
jno
nop
hlt
arpl
adc
je
dec
clc
push
inc
or
sub
add
test
ljmp
fdivrl
cmp
push
or
jo
pusha
mov
xor
inc
xor
pop
jae
lods
xor
push
stos
lret
sbb
sub
out
or
andb
sarb
rcr
and
pop
pop
subl
js
ja
mov
lock
pop
xchg
lods
xor
test
rcl
adc
mov
in
daa
push
out
fcmove
sarl
xorb
lock
mov
mov
test
lret
xor
ret
lret
pushf
out
dec
lods
out
loop
mov
hlt
loopne
popa
or
out
adc
dec
in
movsl
sbb
mov
mov
dec
or
push
jns
std
sarb
jo
fistl
inc
inc
mov
xchg
arpl
imul
cmp
data16
dec
cmp
ficoms
cmp
sbb
iret
push
in
jle
xchg
sub
clc
add
mov
shlb
ret
les
or
dec
fsubl
or
inc
inc
or
fcos
mov
gs
jmp
imul
fidivs
pop
adc
jmp
pop
jae
xor
sub
push
sub
cmp
aad
push
inc
mov
fs
push
xchg
and
stos
xchg
call
ja
lcall
and
jp
xor
jmp
daa
rcl
sub
dec
insb
pop
push
mov
pop
je
pop
sub
mov
aaa
add
addr16
loope
jb
ret
test
sti
mov
inc
jns
sarl
xchg
mov
or
test
mov
mov
sbb
in
dec
jl
and
daa
dec
mov
aas
add
aad
mov
mov
sub
jnp
push
adc
xchg
insl
call
fsubr
cmp
cltd
aas
cmp
nop
jmp
inc
repz
inc
mov
jp
out
xor
sahf
dec
es
add
xor
fadd
out
mul
xchg
inc
dec
adc
inc
in
stc
sub
leave
jbe
outsb
movsl
and
inc
mov
loope
sbbb
loope
pusha
out
fbstp
mov
rcll
dec
aad
or
std
add
int
arpl
filds
ffreep
jbe
jbe
xchg
jge
cmp
int3
or
adc
xchg
mov
vpshuflw
repnz
jp
sub
ss
pop
mov
jns
les
rorl
fldt
inc
sub
mov
adc
sbb
or
ss
cmp
icebp
stos
add
fsubl
imul
aaa
in
loop
jge
jle
in
sbb
pop
dec
mov
xor
movsl
lock
cmp
loop
movsl
clc
cmp
lcall
and
jecxz
addl
fs
movsl
dec
cltd
sbb
cli
xor
mov
sbb
pop
mov
frstor
cmp
cmpsl
repz
mov
pop
add
inc
xor
mov
dec
jns
mov
xor
push
sbb
movsb
cwtl
sti
lret
jl
mov
and
jp
pop
dec
sbb
push
sub
mov
rcrb
out
mov
adc
dec
xchg
sub
fbld
arpl
shl
sub
xchg
mov
mov
dec
mov
lcall
loopne
and
sub
or
fdivr
xchg
adcl
shlb
dec
inc
add
in
mov
int3
jb
jbe
sub
iret
hlt
insb
stc
gs
imul
movsl
cld
addb
jecxz
xor
sti
jge
pop
jns
cltd
test
or
xor
cmp
stos
jns
and
mov
fidivl
outsl
and
pop
out
sbb
imul
jae
adc
xchg
ficoml
xor
ret
icebp
rcll
xor
ficoms
js
pushl
lret
in
lret
adcb
dec
mov
bound
dec
dec
sub
lahf
pop
mov
cmp
mov
jg
bound
jb
jecxz
addb
pushf
shll
rcrl
enter
enter
mov
shll
pop
aam
test
add
jnp
rcrl
add
mov
sbb
cli
xor
add
in
inc
clc
push
xchg
jg
inc
int
mov
fnsave
test
inc
popf
jle
cmp
int3
xor
mov
add
dec
cld
shlb
or
fldt
pop
mov
pop
cli
mov
das
push
mov
add
jge
jge
or
mov
and
loopne
sub
shll
or
pop
dec
pusha
mov
mov
pushf
hlt
jns
ds
lods
rcrl
adc
js
mov
arpl
pop
notb
repz
dec
and
out
jge
rcl
mov
and
xchg
in
or
jbe
xchg
and
fwait
push
mov
jp
mov
mov
adc
cmpsl
in
rcll
cmp
mov
addb
repz
dec
lret
xor
push
and
inc
and
in
add
or
mov
lds
add
adc
aad
xchg
jg
sbb
dec
das
xchg
fisttpl
mov
adc
cmp
mov
or
aam
cmp
sub
dec
jl
and
jne
jo
sub
movsb
mov
pop
insl
dec
popf
hlt
adc
ret
inc
pop
inc
repnz
and
stos
fmuls
mov
pop
jb
sub
jb
stc
xchg
mov
mov
push
and
mov
jle
aas
mov
sahf
pop
nop
in
push
les
and
jno
and
dec
lahf
daa
scas
icebp
fstpl
push
aam
jg
mov
les
xor
xor
and
mov
lock
lds
rcll
repnz
mov
and
fmuls
pop
add
sbb
dec
lahf
movsl
xor
xchg
push
push
imul
fwait
inc
add
fmull
adc
jns
out
mov
out
sub
es
rcrl
mov
in
sbb
js
subb
out
xchg
mov
push
imul
push
test
push
push
adc
jecxz
add
outsl
jp
test
decb
pop
jl
je
in
subb
es
nop
shlb
gs
xor
xor
insl
inc
inc
mov
mov
push
sub
push
popf
cmp
pop
int
push
in
cmc
cmp
jmp
sbb
jmp
inc
xchg
fwait
xchg
jmp
sbb
push
rep
add
cmpsb
js
hlt
aaa
ret
ljmp
sbb
rorb
cwtl
lahf
jb
daa
xchg
add
daa
lcall
inc
shrb
stos
adc
jnp
jns
cs
rol
idivb
jnp
jp
ja
outsl
les
push
nop
lock
movsb
jl
sub
sar
lret
ret
dec
mov
nop
fildll
cmc
pop
ret
ss
xor
out
adc
rolb
push
mov
scas
in
test
mov
ficompl
loop
outsl
jle
cmpsl
jmp
xchg
test
adc
mov
rorb
loopne
je
sbb
js
fdivs
or
not
in
dec
push
mov
adc
popf
push
sub
pop
jp
jno
mov
test
jno
inc
add
sti
popf
bound
adc
xor
fnsave
rol
cmpsl
lea
fimuls
mov
xor
outsl
cmp
inc
xor
or
mov
sub
insl
xor
lahf
mov
sub
rcll
testb
aam
stos
mov
add
push
mov
push
inc
flds
cmp
sub
mov
movsb
dec
mov
das
mov
mov
into
cs
js
aas
xchg
sbb
jp
in
and
gs
or
xchg
push
or
jnp
pop
push
lahf
ret
mov
orl
cmc
dec
push
jl
mov
push
mov
out
fisubrs
fs
std
xchg
dec
mov
out
or
inc
xchg
scas
inc
mov
int3
iret
enter
mov
fidivl
cmp
adcb
or
mov
push
mov
and
sbb
lret
dec
clc
mov
sbb
jmp
jmp
mov
movsl
fildl
sbb
dec
push
push
xor
sahf
mov
mov
sti
xchg
dec
xor
lock
push
push
inc
gs
in
mov
lods
iret
in
jecxz
popf
mov
cmc
cmp
jecxz
fwait
jnp
pop
adc
pushl
xchg
cmpl
lds
das
rorb
or
push
adc
shr
sub
in
push
lea
xor
fimuls
pop
stos
pop
xor
ret
stos
xchg
jp
mov
adc
daa
jae
lret
arpl
xchg
cmpl
inc
add
push
sbb
je
push
fstl
and
arpl
mov
sub
stos
sbb
cmpsl
jmp
ret
push
adcb
cltd
jb
lret
mov
dec
jmp
and
clc
mov
mov
jne
pop
xchg
out
js
pop
int3
test
lret
add
fsubl
pop
mov
sbb
push
push
adc
push
mov
outsl
and
jo
mov
mov
xchg
mov
sub
xchg
test
mov
mov
stos
movsb
xchg
shrb
cmc
xchg
lret
pop
incb
sub
inc
insb
and
loop
push
xchg
mov
mov
dec
loope
insl
fistpl
inc
aad
sbb
cmp
ficomps
mov
adc
inc
mov
jecxz
add
sub
jp
lock
dec
stos
in
stc
clc
hlt
push
sahf
sbb
out
jmp
inc
inc
adc
test
push
cmp
movsb
xor
inc
sub
xor
sub
xchg
adc
cltd
sbb
aam
mov
sub
cmpl
js
add
outsl
add
test
outsl
fnsave
pushf
or
in
fsubl
or
scas
jge
mov
in
xor
out
adc
subl
stc
stos
or
into
xchg
pusha
jmp
xor
mov
pop
je
int
arpl
dec
fs
rorb
xorb
bound
adc
shl
pop
sar
xchg
or
sbb
data16
fisubrl
out
mov
jb
lock
push
xchg
lods
mov
lea
mov
jns
mov
push
lea
xchg
ret
vextracti128
push
js
mov
adc
hlt
mov
clc
xchg
dec
push
xchg
test
stos
mov
repz
div
cmpsl
inc
add
in
in
jge
fdivr
lret
mov
lods
in
out
int3
ja
es
xchg
sub
push
stc
addr16
sbb
insb
add
jl
loop
mov
dec
mov
dec
in
call
negl
in
inc
ret
lfs
dec
adc
in
test
in
lock
daa
pop
inc
jb
fimull
pop
mov
or
insl
iret
xchg
pop
test
dec
mov
mov
faddl
mov
lods
repnz
or
insb
inc
add
es
xlat
push
xor
pusha
ss
sti
stos
pop
xor
insb
xchg
jbe
push
push
xor
es
push
xlat
push
icebp
cmp
jl
fldcw
mov
xchg
sbb
mov
ret
clc
xchg
inc
and
insl
in
out
sub
dec
cs
or
sbb
dec
and
insb
and
pop
pop
lahf
mov
xchg
jle
outsl
mov
je
daa
das
add
cmp
lcall
inc
push
sbb
inc
sbb
enter
add
pop
xor
dec
jl
neg
push
push
lods
aas
xchg
sbb
stos
push
repnz
xchg
sbb
fadds
mov
fwait
mov
xlat
mov
sbb
lcall
or
cmp
fisttps
pop
cltd
mov
in
stc
push
mov
pop
pop
fadd
mov
dec
fisubrl
pop
inc
or
pop
lret
repz
enter
iret
cltd
test
lret
pushf
mov
xchg
scas
mov
les
enter
insb
mov
call
xor
ret
inc
adc
in
andb
jle
xchg
dec
filds
adc
iret
lods
scas
or
add
xor
jg
ret
inc
inc
sti
sbb
or
sub
or
mov
lods
xchg
and
in
fidivs
or
jl
out
jb
mov
loope
cs
ret
pop
add
pop
ret
pop
jmp
lret
loop
add
hlt
pop
mov
lods
scas
or
in
das
bnd
cli
pop
nop
sahf
test
xchg
cmp
pand
repz
sbb
mov
sub
jns
mov
loope
adc
or
dec
insb
xchg
insl
fcompl
mov
dec
mov
leave
push
fs
pop
sbb
xchg
jae
mov
mov
lcall
clc
lock
xchg
sub
inc
dec
pop
rcrl
add
repnz
mov
lods
mov
xchg
sbb
sti
movsl
or
lock
out
add
insb
inc
stc
mov
loop
jb
mov
cmp
das
mov
add
adc
je
push
negl
add
mulb
roll
enter
clc
xor
loopne
test
adc
loopne
test
push
aaa
mov
xorb
fildll
loope
test
and
in
push
xchg
pop
lods
xchg
rdtsc
inc
repnz
cmp
insb
mov
xchg
sub
adc
loop
jl
inc
mov
aaa
shlb
popf
sti
es
push
test
add
call
and
call
stos
pop
jns
mov
in
inc
xor
mov
dec
adc
jae
mov
xor
pop
orl
loop
mov
jge
push
scas
dec
dec
and
mov
scas
int
add
popf
pop
jae
popa
mov
sbb
add
sahf
aam
mov
icebp
fidivl
mov
push
int3
cmc
pop
pop
mov
shl
mov
lock
jmp
xchg
clc
xor
mov
aas
sub
out
aas
mov
pop
mov
pusha
mov
fstpt
mov
push
pushf
mov
fiaddl
lds
push
xchg
add
pop
adc
scas
jbe
ret
iret
mov
cld
nop
aaa
mov
lret
xorl
js
loop
rorb
mov
sub
insb
negb
in
inc
jge
pop
rolb
push
stos
jl
adc
lcall
mov
call
jbe
fmull
xchg
mov
inc
arpl
test
push
adc
shlb
or
lods
pop
mov
ja
push
or
movsl
xor
or
ret
aaa
fsubp
inc
inc
dec
add
test
xor
shlb
fwait
push
shlb
cmp
mov
cwtl
icebp
in
xchg
or
inc
repz
push
out
mov
adc
ficompl
std
xchg
ss
scas
cwtl
out
pop
pop
pusha
lock
sbb
hlt
in
fisubs
mov
arpl
sbb
adc
outsb
sub
xchg
mov
lcall
int
insl
xor
push
sbb
in
jbe
into
js
scas
shll
test
push
adc
test
addr16
cwtl
sarb
cmp
push
inc
sti
decb
and
not
pop
sbb
cmc
sti
stos
jns
inc
nop
cmp
push
es
mov
sub
push
mov
and
cmpl
mov
pop
pusha
test
dec
ror
sbb
dec
lds
outsb
cmp
or
mov
int3
or
push
mov
sahf
dec
test
ret
mov
daa
inc
xchg
pop
insl
js
sub
lods
cmp
sbb
imul
sub
lcall
inc
inc
popa
adc
test
cld
and
cmp
data16
hlt
sbb
cmp
inc
cmp
or
jbe
shrb
xor
dec
addr16
xorb
xchg
lcall
movsb
pusha
shlb
jae
xchg
push
xor
and
sub
mov
pusha
pop
sbb
jmp
add
mov
lods
shlb
push
cmp
jmp
into
adc
push
in
pop
mov
lret
xchg
dec
rcll
lret
popf
gs
dec
mov
dec
les
or
inc
loop
and
jmp
xchg
add
call
test
or
loopne
scas
cmc
loop
mov
jb
sub
xchg
loop
nop
movb
or
pop
cmp
loope
jbe
popl
cld
jbe
dec
out
jmp
mov
xor
cmp
fldl
mov
sbb
and
sti
int3
les
push
jecxz
xchg
fwait
lds
repnz
jo
lahf
lahf
ljmp
sbb
add
xchg
sub
mov
or
outsb
or
aaa
arpl
pushf
ja
shll
jle
jae
sbb
xchg
jmp
leave
or
xchg
ss
ret
fwait
es
out
or
xor
loopne
push
sbb
jecxz
add
jmp
mov
push
subl
sub
push
inc
fisttps
lret
xchg
cmp
add
inc
arpl
out
shrb
push
mov
sub
test
loope
or
push
shlb
cltd
inc
imul
jne
and
aad
and
add
shll
lods
pop
sub
xor
pop
repz
push
jecxz
or
jmp
movsl
daa
loopne
and
xchg
push
cmpsb
mov
in
adc
cli
out
adc
fimuls
lcall
mov
ret
aas
dec
dec
cmp
int
mov
shlb
outsb
in
pop
test
or
arpl
lcall
cmp
arpl
negb
repz
add
mov
ret
xchg
mov
jno
js
mov
stos
stos
pop
pop
sbb
xchg
int3
and
scas
and
cmp
jg
push
cltd
or
imul
mov
in
pop
outsb
mov
xlat
frstor
dec
fnstsw
add
jns
fnstenv
mov
pusha
jg
fistl
nop
js
mov
inc
int
mov
movsb
push
or
sub
or
sub
pusha
test
inc
and
xor
or
shlb
mov
ror
movsl
mov
mov
push
pop
aam
ja
dec
dec
lods
xchg
inc
movsb
jnp
scas
jb
cwtl
lea
pop
dec
inc
and
mov
cmp
and
jmp
sbb
stc
add
and
daa
mov
jns
outsl
cltd
xchg
xor
mov
fsub
andb
test
xor
inc
mov
xor
sbb
inc
mov
sahf
shl
jp
jae
dec
setl
pushf
inc
sub
xor
xchg
jo
cmpsl
inc
mov
pop
push
loopne
loopne
scas
xchg
xor
jae
mov
or
js
xchg
hlt
mov
or
adc
xchg
inc
mov
out
ja
inc
adc
jbe
adc
xchg
jmp
xchg
sbb
fiaddl
orl
scas
mov
xchg
mov
jg
js
mov
out
xchg
sbb
ffree
push
inc
xor
lds
popa
xor
cmp
sub
cld
pop
pop
in
xor
pushf
arpl
push
push
sub
dec
dec
or
pop
adc
mov
push
sub
jle
fnsave
xchg
dec
lods
inc
mov
pop
nop
ret
mov
cmp
in
xor
hlt
jecxz
fdivs
xor
out
fisubrl
and
jl
notb
notb
jp
mov
nop
or
sbb
pop
movsl
out
fisubl
mov
stos
adc
stos
movb
cmp
inc
cmpsb
push
pushf
loop
scas
inc
ret
adc
mov
les
jns
lea
ds
notl
test
sti
and
cmp
outsl
loop
ror
shrl
nop
add
xor
cwtl
add
dec
push
and
cmp
pop
jl
cmpsl
xchg
dec
pop
or
les
inc
test
loope
and
and
xor
pop
sub
adc
mov
pop
fsubs
out
xor
jb
xchg
or
push
out
popa
mov
test
pop
xchg
cltd
lock
xchg
jg
fwait
testb
out
push
xrelease
fisubs
repnz
loopne
gs
sub
inc
lods
int3
adc
add
sbb
js
jle
push
call
aam
mov
mov
and
pop
sarb
ret
mov
dec
stos
adc
mov
or
popa
xchg
jge
mov
loope
jne
scas
into
inc
in
adc
jp
outsl
lea
stos
cmpsb
push
bound
mov
out
jp
repnz
movsl
rol
sbb
mov
dec
movsb
push
out
in
outsb
mov
das
xor
jnp
sahf
ja
mov
sahf
loopne
and
push
iret
hlt
icebp
jbe
test
mov
insb
cmp
push
pusha
adc
and
lcall
mov
mov
stc
scas
sarl
adc
int3
in
cmp
sbb
fsts
fistpl
nop
push
and
shr
into
ljmp
or
mov
out
pop
pusha
jmp
jae
add
sub
popa
and
jo
jmp
adc
cmpsb
pop
insl
mov
int3
imul
adc
test
push
mov
mov
xchg
testl
test
inc
cmp
imul
jb
loope
shr
aas
sti
loop
and
push
pop
pop
std
adc
mov
push
pop
dec
bound
dec
in
dec
sbb
shll
out
mov
cmp
pop
sahf
mov
mov
in
pop
and
xorb
push
add
gs
mov
popf
sbb
sub
stc
outsl
out
je
lock
movsb
test
mov
mov
cmp
into
mov
hlt
mov
in
mov
inc
mov
mov
loope
sti
movsb
imul
das
jns
dec
push
cmc
mov
sbb
sbb
dec
inc
fldcw
sbb
and
sbb
dec
mov
inc
dec
inc
mov
push
popf
xor
sbb
imul
mov
hlt
jmp
xor
push
adc
clc
sbb
jg
mov
xchg
sarl
inc
pop
xor
dec
sub
addl
ret
mov
pusha
fidivl
cwtl
call
pusha
cs
incl
xor
call
jmp
pop
and
enter
call
inc
dec
xor
mov
adc
aad
lea
xchg
pop
pop
cmc
sub
ss
cs
dec
add
in
xchg
cmp
mov
pop
push
aas
cmpsl
pop
cmp
fcoml
sbb
pop
dec
mov
jecxz
cli
scas
fdivr
mov
xor
mov
bndstx
mov
into
xchg
outsl
mov
aas
cld
shrl
out
cmc
jno
pop
stc
sbb
cmp
sub
inc
sbbb
test
inc
mov
in
iret
inc
addr16
or
fsubrp
sbb
cmpsb
xchg
fidivl
adc
stos
xor
mov
adc
das
mov
xchg
movb
sbb
xor
mov
insl
mov
jge
and
lock
dec
mov
mov
aas
sub
xor
inc
jnp
imul
idivl
jl
fisubrl
arpl
test
daa
mov
out
fs
add
mov
js
mov
xchg
fadd
jb
xor
scas
sarl
xchg
pop
xor
and
ficoms
inc
mov
mov
push
push
mov
in
mov
insb
mov
fs
mov
bound
ja
inc
loop
adc
mov
nop
jb
aam
inc
mov
sub
ret
xor
adc
mov
and
rorb
sub
xchg
mov
inc
addr16
add
lret
mov
push
xchg
subl
jo
mov
jle
ja
cltd
sbb
cmp
mov
mov
dec
test
stos
in
mov
ret
sub
adc
sbb
shl
cli
insl
or
jo
nop
movsl
sbb
push
push
adc
div
and
xor
or
xchg
scas
pop
int
dec
add
jmp
fstpt
or
push
fcmovnb
or
ds
shrl
pop
shlb
mov
ret
lea
xlat
outsl
ss
cmp
adc
mov
subb
push
mov
xchg
sub
jns
call
dec
add
cbtw
cmc
xchg
mov
xchg
cmpsb
mov
test
or
call
das
sti
jle
bnd
scas
mov
imul
xchg
movsl
scas
loop
nop
shlb
xchg
xor
movsb
ret
xchg
jb
adc
into
pop
sbb
jecxz
xchg
cmpsl
mov
jmp
mov
pop
mov
jae
insb
fdivs
mulb
pop
inc
in
hlt
cmp
stc
mov
js
sbb
addr16
mov
cmp
sbb
in
or
mov
mov
ljmp
dec
data16
and
mov
sbb
inc
js
and
iret
pop
pop
fisttpll
push
sub
mov
out
or
pop
or
dec
imul
insl
fwait
xlat
and
rcr
daa
loope
stc
push
cmpsb
in
sub
adc
cmp
jb
pop
aam
mov
jle
sbb
das
pop
outsb
bound
in
pop
add
push
scas
insl
cmp
stos
popf
ficompl
mov
or
ror
cmp
hlt
ljmp
push
lcall
dec
movsl
hlt
enter
pop
sbb
aam
pop
xchg
add
and
aaa
push
mov
cmpsb
das
sub
push
xor
xchg
inc
lea
dec
dec
and
out
repnz
pop
or
jne
stos
xor
or
fs
mov
sahf
or
dec
inc
inc
rol
add
push
js
inc
or
ss
cmp
fcomp
and
data16
repnz
jo
add
pop
add
divl
outsb
jge
xor
xchg
jbe
das
fidivs
sahf
xor
xor
add
push
imul
mov
daa
je
xor
push
gs
test
int
push
mov
mov
dec
sbb
sbb
in
dec
shlb
adcl
xor
inc
add
divl
add
test
sub
mov
lock
jb
mov
xor
leave
push
pop
pusha
dec
aas
sti
pop
mov
jmp
mov
bound
cmp
or
sbb
xchg
inc
xchg
jae
insb
xchg
adc
in
push
hlt
hlt
rcrb
insb
punpckhdq
imul
xchg
mov
mov
mov
mov
cmc
and
sbb
adc
test
aam
lds
xchg
dec
sub
push
mov
lea
test
repz
aas
push
push
stos
fxch
xor
mov
xor
push
enter
test
cmp
xchg
scas
test
ljmp
inc
sbb
jg
or
xchg
fnstenv
adc
cmp
and
in
sub
pop
nop
mov
stos
addl
iret
dec
int
or
loop
sbb
inc
insb
pop
decl
cltd
add
xchg
sub
push
mov
movsl
out
insb
jne
lock
mov
mov
inc
jbe
scas
cmp
stos
divb
iret
loope
gs
sbb
mov
je
in
lods
shl
lahf
fdivrs
or
push
fistps
lods
push
or
ret
ret
fimuls
ret
adc
pop
adc
roll
scas
es
ja
loopne
dec
fsubl
lahf
push
xor
add
lods
std
stc
gs
repz
mov
and
push
push
add
pop
dec
mov
sub
sahf
xchg
rol
negb
cld
pop
sti
jbe
pop
add
dec
dec
loop
test
sub
pop
sub
rcr
cmp
movsl
ror
outsb
cld
sub
sub
or
mov
push
jbe
cs
xchg
inc
sbb
movsl
mov
in
cld
sub
mov
pop
sar
iret
aaa
idivb
adc
jne
adc
into
fwait
les
push
sahf
jl
nop
daa
adc
popa
jne
in
nop
push
adc
aaa
sub
jge
jg
nop
xchg
shll
out
push
mov
repz
dec
pop
xchg
call
add
loope
std
andb
adc
insl
mov
test
jmp
test
lret
ljmp
jecxz
and
jae
cmpsb
mov
mov
or
xor
pop
fsubrl
cltd
data16
push
and
mov
push
outsb
mov
fs
mov
andb
xor
mov
faddl
loop
xlat
iret
cld
ljmp
xor
cmc
xor
lret
insl
cmpsl
mov
push
sti
or
cmp
push
mov
aaa
mov
mov
mov
inc
jmp
or
mov
addl
push
sbb
clc
bound
inc
cwtl
sub
or
jo
dec
fists
mov
pop
and
jmp
sub
enter
add
cmc
aas
das
mov
jae
test
cmp
jae
loopne
adc
dec
adcl
jmp
imul
push
cld
xor
test
pop
out
ja
adc
lods
repz
scas
shll
int3
ret
pushf
sbb
add
add
inc
push
pop
jge
mov
cmp
mov
pop
cmpsl
pop
jl
adc
sbb
mov
jl
outsb
jne
es
jle
jns
mov
lret
inc
pop
jp
fstl
push
rclb
sub
das
fs
pop
sbb
adcb
iret
mov
popl
mov
inc
cli
ret
stc
ret
and
pop
repnz
std
scas
js
bound
out
mov
push
pushf
add
xor
pop
sbb
xor
pushf
icebp
lcall
outsl
cmp
andnps
fldenv
inc
imul
add
pop
pushf
ret
push
lcall
scas
add
adc
add
mov
adc
jo
js
or
sub
pop
lods
sub
dec
mov
ret
sti
adc
rorl
jbe
popa
mov
add
iret
repnz
addb
outsb
dec
inc
push
lds
push
shll
or
sub
sti
mov
into
lret
ljmp
loop
mov
mov
lret
movsl
adc
loope
cwtl
sub
test
adc
jle
inc
ret
push
mov
mov
out
stc
push
sti
mov
xchg
data16
in
xchg
test
into
xchg
ljmp
and
mov
test
sarl
inc
icebp
mov
and
repnz
mov
adc
je
stos
add
sbb
mov
in
push
and
shrb
inc
leave
sbb
xchg
lods
sub
jnp
and
push
add
and
icebp
push
jp
mov
imul
push
sbb
clc
dec
sbb
mov
stos
lods
and
sbb
fisubs
jno
mov
mov
outsl
test
cmp
push
sub
mov
mov
aas
leave
popa
popa
cltd
pushf
out
daa
out
loop
mov
shrl
rolb
adc
test
clc
bound
xchg
xor
adc
or
aam
popf
sbb
jae
cmp
cmpsb
jno
xor
fisubs
enter
jne
xlat
add
arpl
lahf
xchg
ljmp
mov
sub
imul
push
push
jb
les
lahf
pushl
push
add
adc
inc
xchg
xchg
mov
lahf
push
and
xor
nop
and
jg
cwtl
mov
fisubrs
std
lods
rorb
mov
push
jmp
cmp
sti
xor
stos
inc
or
xchg
xchg
cmp
mov
inc
jo
insb
mov
dec
aam
stos
mov
mov
pop
je
es
pop
dec
aaa
or
lods
jbe
loop
jo
lds
lds
leave
loopne
rol
sti
or
mov
hlt
iret
push
mov
imul
jp
out
jge
int
fdivrs
test
test
test
push
or
xchg
sbb
mov
leave
sbb
mov
push
push
push
rorb
int
add
push
jp
sbb
popa
dec
mov
jl
inc
xor
jge
jns
pop
xchg
fs
mov
dec
in
push
ljmp
dec
push
inc
pop
lock
mov
out
mov
out
mov
lret
and
inc
cmpl
inc
mov
pop
dec
dec
pop
pop
sub
mov
testb
mov
je
sbb
xor
inc
cmc
jmp
iret
xor
movb
push
pop
jg
sar
jge
add
inc
lahf
test
cmc
cmpsb
psubb
push
or
pop
sbb
in
mov
jmp
rorb
lock
dec
jmp
xor
xlat
in
inc
test
xlat
sub
cmp
push
aaa
popf
stos
or
push
and
andl
cmpsb
cwtl
sub
in
adc
ds
push
and
dec
lods
adc
fsubr
add
dec
sub
out
lea
sbb
fisttps
cld
out
push
nop
cltd
in
jno
xlat
mov
shll
aad
faddl
lock
dec
sbb
mov
xlat
lcall
jl
push
xchg
cmpsb
mov
icebp
push
repz
jmp
sub
push
ds
repnz
out
inc
dec
pop
jbe
pop
and
shr
add
adc
cli
push
push
sub
xchg
in
add
push
fldenv
mov
mov
mov
movb
outsb
xlat
xchg
scas
iret
rcrl
mov
rcl
cmc
push
fisttpl
sar
cli
sub
pop
movl
push
inc
jmp
and
out
push
adc
push
push
test
dec
xor
pop
jo
in
shlb
xor
orl
add
daa
add
jns
mov
fs
mov
xchg
icebp
sub
aaa
aaa
adc
mov
or
mov
aaa
icebp
sbb
mov
and
and
roll
xor
xor
mov
sysret
aad
int
xor
add
aad
xchg
push
adc
push
dec
addb
fidivs
popa
jnp
sub
scas
mov
pusha
and
mov
ret
in
shl
add
cmc
add
iret
mov
inc
xor
sbb
pop
stos
mov
xlat
in
int3
incb
xorb
cld
xor
or
xlat
pop
test
enter
or
loope
lret
sbb
and
divl
sbb
adc
sbb
pop
push
shll
aaa
push
push
orl
pop
jb
push
push
divb
or
roll
fistpll
jmp
fwait
push
jb
cmp
shll
or
sbb
inc
jp
sahf
xchg
dec
xor
pop
pop
sub
mov
cli
add
jge
arpl
in
push
inc
mov
and
dec
insb
cmp
fsubrp
push
setp
xlat
mov
adc
test
mov
ret
inc
push
jae
inc
cs
xchg
pop
bound
xchg
or
mov
ret
sbb
inc
jecxz
cs
cmc
jno
out
push
cmp
cmp
std
and
pop
scas
sub
mov
mov
add
in
sub
daa
xchg
lea
xor
and
rclb
mov
jl
clc
jecxz
inc
xor
nop
fstpt
std
and
jae
or
mov
mov
xor
xlat
push
jnp
xchg
fcom
jne
std
mov
or
in
and
mov
add
ret
dec
test
mov
jmp
dec
popf
bound
push
mov
int
sbb
xchg
pushf
inc
dec
or
into
jo
andl
rolb
popa
pop
int3
dec
pushf
add
cmc
shl
shll
jne
pop
das
push
and
aas
cmpsb
fisttpll
idivl
loope
xchg
xchg
cmp
push
dec
rol
cmp
loopne
pop
pop
jae
rcll
push
sub
jecxz
xchg
sub
adc
addr16
daa
enter
stos
or
fwait
sub
ret
fisubrl
dec
xchg
fwait
daa
and
test
push
mov
test
sbb
cmp
pop
insl
and
pop
adc
jns
add
xchg
adc
pushf
mov
loop
add
fbstp
sahf
fisubrs
xor
clc
lret
sub
aad
xorl
pusha
dec
pop
pop
data16
rol
lods
mov
mov
push
and
mov
pusha
lcall
out
or
ffree
cmpb
xor
jp
cmp
ja
push
leave
inc
lds
or
or
mov
aaa
aaa
lcall
mov
xor
pop
push
and
es
cmpl
jb
xchg
lds
mov
jno
cld
jns
fdivrs
xor
pop
movsl
sub
inc
inc
xchg
fstl
push
lcall
je
daa
sbb
test
fwait
cmp
inc
xchg
push
xchg
pop
test
stc
mov
ljmp
adc
repnz
jge
jo
cmp
ret
stos
adc
loopne
pop
hlt
aam
pop
inc
bound
iret
lahf
sub
add
dec
sub
scas
popa
pop
repnz
jb,pt
out
movsb
mov
jmp
jge
ret
stc
jnp
sub
rolb
out
push
pop
pop
mov
fimuls
stos
xchg
jno
or
fsub
idivl
in
fwait
xlat
std
add
jb
cwtl
into
push
mov
daa
cs
ljmp
subl
ljmp
jl
lods
js
in
mov
mov
loope
ss
jmp
lret
clc
pop
xlat
cmp
pop
sbb
inc
and
mov
jecxz
and
sub
outsb
push
rcr
jle
daa
add
imull
jnp
mov
jno
mov
mov
int
nop
lcall
movsl
inc
or
sbbl
inc
mov
mov
add
movsl
imul
inc
ds
stos
leave
pop
push
cld
repz
testl
pushf
in
lret
fdivrs
iret
data16
shll
adc
fcmove
xor
ret
lret
adcb
push
cmp
pop
call
cmp
out
sti
nop
cli
shlb
xchg
xchg
packssdw
scas
inc
xchg
leave
filds
aad
mov
lret
dec
dec
aas
xor
xchg
adc
mov
icebp
iret
loopne
sbb
bound
ja
into
lods
sub
mov
in
mov
xchg
dec
dec
inc
jle
cmpsb
scas
aaa
outsb
lds
sub
fdivl
or
sub
sbb
jecxz
inc
adc
js
jp
sub
je
loope
fdivrl
pop
dec
mov
fdiv
out
rol
cmp
xor
and
sub
inc
adc
adc
movsl
dec
aas
jge
lahf
into
or
push
pop
in
add
sbb
mov
adc
xchg
adc
rclb
dec
idivb
ret
cmp
aaa
jo
mov
loope
imul
sbb
mov
push
mov
lods
mov
xor
sub
scas
int3
jae
add
xor
push
mov
repz
icebp
and
inc
and
popa
dec
addl
enter
and
sti
cwtl
cmp
enter
sbb
ret
test
adc
xor
popf
aaa
xlat
cltd
sbb
lock
pop
mov
inc
pusha
rclb
sbb
inc
dec
dec
or
sbb
or
cli
ret
dec
call
out
stos
cwtl
stc
xchg
cmp
pop
sub
cmp
dec
xor
pop
jecxz
clc
dec
orb
mov
xchg
dec
inc
mov
pop
lret
mov
fsubr
push
scas
div
into
xchg
or
xor
icebp
inc
lcall
push
inc
bound
and
cwtl
insl
push
not
adc
xchg
cwtl
and
add
rcrl
mov
ret
cmp
push
pop
test
adc
sub
ja
adc
icebp
inc
and
lods
mov
and
add
push
out
test
popa
push
adc
and
lods
cwtl
sub
xchg
push
xchg
fstpt
sbb
xchg
sbb
dec
push
adc
and
dec
add
int
dec
fbld
add
into
sbb
jecxz
jbe
rolb
and
mov
cmpsb
les
inc
std
icebp
lfs
add
jge
xor
pop
cld
inc
stc
mov
adc
ja
xor
pop
inc
push
stos
mov
jmp
jle
jnp
push
jns
imul
pop
stos
jg
pop
adcl
push
pop
sbb
ficoml
outsb
ja
xchg
decl
ds
movsl
jmp
movsl
sbb
arpl
out
jmp
jb
jnp
aas
inc
jb
xor
xorb
adc
mov
pusha
sbb
in
hlt
lods
inc
mov
lea
aas
xchg
cmp
sbbb
sbb
inc
test
add
jb
xchg
cmp
jb
sub
popf
mov
push
or
pop
and
xor
adc
mov
adc
sub
sub
std
fidivl
inc
fcompl
rorb
fdivr
inc
andl
dec
jp
mov
mov
jbe
fcompl
ret
jmp
fcmovb
das
loop
test
cmp
pushf
loopne
pop
stos
add
and
pushf
cs
test
mov
bound
sub
sbbl
xor
rclb
inc
pop
outsb
rorl
sarb
fsubs
int
fdivrs
pop
dec
fwait
nop
xchg
cwtl
in
inc
js
ljmp
gs
jmp
cmp
cld
into
pop
into
mov
dec
add
jb
call
lods
adc
xlat
mov
int
pop
rorb
or
sbb
dec
xchg
cmp
rorl
and
mov
push
psubsb
fildll
into
sbb
sarl
mov
sbbb
mov
xchg
xchg
js
mov
cltd
jbe
inc
mov
push
mov
dec
stc
out
ja
xchg
mov
add
imul
outsb
adc
addb
fldt
xchg
ja
cmpsb
js
pop
push
xchg
pusha
data16
dec
sbb
in
pusha
and
jmp
jg
les
mov
sti
arpl
xchg
adc
in
imul
out
out
inc
push
in
adc
ja
lret
mov
outsl
sbb
mov
mov
jns
sub
sbb
add
push
and
pop
scas
sbb
js
jg
arpl
pop
out
stc
addr16
fisttpl
repnz
mov
in
dec
adc
fwait
xor
and
mov
test
sbb
mov
sbb
push
sbb
mov
fisubs
lods
cvttps2pi
pop
xchg
cmp
in
lret
mov
and
ret
dec
mov
ret
push
icebp
test
dec
fidivs
rorb
dec
sbb
push
sub
jbe
nop
mov
inc
test
mov
sbbb
testb
in
sbb
lods
and
inc
test
push
mulb
mov
xor
mov
add
je
in
adc
jp
jmp
loope
jbe
aad
mov
pop
sarl
push
enter
sub
std
and
xchg
or
ret
pop
test
jno
xchg
add
inc
push
std
fnstcw
daa
or
push
jne
add
fists
das
xor
call
cmp
nop
in
jb
sbb
cmp
nop
sub
ret
or
bound
adc
cld
in
mov
daa
inc
cmc
daa
sbb
int
push
aam
stos
add
dec
add
popf
popf
inc
outsb
ds
and
push
mov
fbld
and
ja
sbb
jno
sti
shl
add
addr16
faddl
leave
inc
cwtl
mov
daa
adc
jl
test
dec
cmc
adc
lods
pop
jo
jge
scas
xor
lea
inc
lcall
xchg
sbbb
mov
ljmp
inc
jae
inc
fwait
out
movsl
xlat
imul
xor
sbb
loop
aam
bnd
mov
aaa
jbe
sbb
mov
dec
leave
push
lret
pop
mov
mov
inc
int3
and
stos
movsl
mov
ret
add
push
int3
ret
and
xchg
aad
and
cmpsb
sbb
ds
mov
mov
testl
fisttpl
mov
xorl
ret
mov
add
inc
out
sub
mov
push
mov
cmp
and
in
lahf
jmp
roll
jl
ficoml
addr16
test
stc
mov
mov
mov
jl
jnp
jl
cmp
pop
cltd
aas
or
mov
jbe
jecxz
jmp
mov
inc
test
sbb
jle
pop
in
fisttpl
sub
cmp
jl
aaa
xchg
pmaxub
stos
mov
mov
push
insb
xchg
mov
jnp
imul
rcr
aad
and
sbb
inc
loopne
inc
in
in
and
adc
xchg
cmp
ret
pop
pushf
ds
mov
scas
das
call
xor
sbb
inc
jbe
push
jne
mov
xor
or
or
test
fildll
stc
shlb
and
or
enter
pop
roll
mov
jb
mov
clc
shlb
mov
adc
jge
or
sub
jnp
sub
add
outsb
push
sub
and
lds
xchg
and
pop
shrb
sub
dec
adc
inc
or
mov
cs
sbb
pop
lcall
adc
push
mov
sub
inc
sbb
daa
xor
leave
mov
cld
stos
cmp
pop
fstps
popl
gs
push
sbb
nop
mov
ljmp
and
pop
cmp
jmp
rolb
push
push
mov
mov
jne
pop
inc
xor
or
aas
sub
dec
cli
clc
dec
ljmp
xchg
mov
pop
cltd
add
inc
jno
enter
push
jl
mov
out
cs
int
mov
mov
nop
movsb
mov
mov
cli
loope
and
cmp
subb
ss
icebp
cs
jmp
sub
dec
jl
fldcw
stos
leave
jge
xchg
mov
dec
xchg
js
or
gs
mov
fs
lds
loop
cli
fwait
sub
cmp
inc
fildl
jb
mov
or
fisubrs
js
push
stos
push
mov
stos
push
daa
in
sbb
cmp
dec
rcrl
push
jb
out
mov
gs
adc
dec
xchg
push
and
sbb
lods
adc
fnstsw
je
xor
sub
lods
sahf
test
nop
les
jl
add
leave
dec
mov
jmp
inc
arpl
add
into
addr16
inc
sub
fmuls
popf
xlat
sahf
add
mov
rcrl
mov
neg
xor
push
mov
nop
ja
push
sti
jge
int
push
fbstp
xchg
mov
in
and
xor
dec
or
dec
inc
push
jnp
ficoms
popf
enter
jnp
or
inc
inc
push
mov
jmp
jmp
test
pop
pop
jge
jecxz
inc
inc
shll
ss
xchg
pop
scas
fstps
mov
xchg
push
sub
or
jb
mov
cmpb
sub
dec
xorps
icebp
inc
movsl
das
bound
sub
adc
in
mov
cli
enter
or
icebp
mov
dec
aad
ret
xchg
rcr
test
mov
push
loop
mov
data16
mov
pop
ret
out
push
mov
mov
mov
sahf
imul
cmp
dec
fcoml
xorb
or
std
fldcw
lret
pop
sbb
xor
mov
ds
out
add
clc
orb
jbe
mov
add
jg
cmp
dec
push
sub
dec
push
cmpsb
fsubrs
sbb
lods
mov
pusha
std
xlat
pop
mov
andb
xchg
out
jbe
mov
jne,pt
arpl
outsl
aas
shlb
mov
fs
shrb
add
add
jno
xor
repz
mov
in
subb
ret
mov
mov
xchg
pop
icebp
scas
pop
out
das
sub
mov
mov
mov
or
loope
mov
scas
lret
push
or
cmp
iret
repz
mov
add
cmp
outsb
jp
bound
cmp
out
xchg
imul
xchg
sub
fdivrl
xor
lods
mov
hlt
test
mov
out
dec
lcall
or
fcmovnu
pushf
add
adc
xchg
mov
enter
fistps
mov
jecxz
mov
test
pop
mov
jecxz
and
ss
in
das
push
out
rcrb
inc
in
and
sub
das
xor
add
jne
dec
mov
add
add
cmpsb
xor
lods
iret
rol
jb
fcoms
inc
jo
xor
inc
and
add
adc
mov
dec
out
test
pop
mov
testl
test
adc
jp
movsl
sub
mov
inc
mov
scas
test
out
test
sahf
sub
push
jnp
inc
xchg
inc
int3
inc
inc
sbb
fstpt
mov
adc
inc
dec
and
fbld
mov
fwait
jp
imul
fcoml
cld
inc
outsl
dec
mov
xchg
lcall
jl
sub
mov
rcll
push
fcmovu
jae
inc
jmp
pop
pushf
xor
bound
mov
push
dec
xor
mov
orb
iret
ficoml
push
inc
gs
iret
pop
or
in
dec
rorl
pusha
add
sbb
js
mov
push
arpl
out
popa
pushf
cmp
pop
sbb
push
sub
cmp
and
clc
mov
cmp
lret
sbb
mov
dec
mov
mov
and
xor
cmp
rcl
cli
icebp
pop
mov
cs
ds
mov
push
cmp
mov
js
mov
imul
dec
jl
lock
pop
xor
xchg
inc
shrb
mov
faddl
dec
outsb
jne
push
pop
or
xchg
idivl
in
shlb
jae
insl
or
pop
jle
in
cmp
sbb
inc
shrb
xlat
shl
or
add
je
xchg
jecxz
lds
ja
mov
out
fstps
sub
movsl
cmp
mov
pop
xor
cli
dec
sbb
psraw
jmp
scas
pop
mov
repnz
stc
adc
inc
ds
jge
mov
cmc
push
data16
push
push
jae
mov
stos
push
mov
cs
fyl2xp1
fstps
cltd
bound
pushf
xor
leave
scas
jae
xor
shll
lds
cwtl
mov
pop
sub
loop
sbb
xchg
cli
int
push
jp
add
cmp
sub
rcl
stos
repz
testl
out
pop
pop
out
jno
xor
cmp
and
mov
and
fidivs
mov
mov
aaa
shlb
call
jp
int3
dec
push
push
lock
xchg
lahf
fldt
cwtl
cs
cli
ja
hlt
xchg
or
lahf
dec
xchg
jl
inc
jmp
inc
mov
xchg
ds
adc
cmc
sbb
mov
sbb
ficompl
jno
lea
xor
lret
mull
sub
out
je
inc
push
lods
es
mov
iret
xor
sub
xor
dec
divb
push
into
sbb
testb
out
or
js
jmp
sub
ss
push
stos
adc
xlat
jg
and
inc
andl
je
je
add
jecxz
add
int3
sbb
xchg
repz
repz
cwtl
cmp
lds
nop
outsb
mov
ja
jbe
cli
test
test
ret
pop
fwait
cmp
imul
adc
imul
push
xor
cmp
ljmp
ret
push
aaa
pop
pusha
mov
adc
iret
imul
aam
fwait
arpl
scas
in
pop
jns
push
shll
xchg
fildll
decb
or
cmpsl
jae
pop
outsb
dec
sub
lahf
mov
sub
sub
ret
cmpsl
sbb
jbe
dec
ljmp
sbb
das
scas
mov
adc
ljmp
push
push
push
leave
xchg
mov
fwait
je
xchg
inc
sbb
sbbb
ds
push
mov
cmp
mov
aam
mov
jge
arpl
push
sbb
leave
lock
jno
jo
pop
or
push
add
pop
jle
je
js
stos
xor
add
lds
dec
push
movsb
fnsave
test
arpl
shlb
jge,pn
out
mov
mov
xchg
out
test
cmp
arpl
mov
cld
or
or
pushf
jno
or
stos
aaa
jo
ja
movsl
call
fimuls
add
cwtl
push
jb
mov
dec
mov
jmp
sub
int
xchg
out
and
jp
test
loop
push
sti
out
mov
dec
inc
lods
ljmp
cmp
aas
loopne
fimuls
imull
jno
jle
mov
movb
sub
lods
xchg
dec
adc
add
jge
sub
mov
sbb
adc
mov
cmp
subl
mov
or
icebp
dec
std
je
pop
push
sbb
pop
mov
test
mov
fbstp
lods
icebp
das
push
xchg
mov
insl
repz
mov
cwtl
push
cmc
shl
inc
mov
out
call
repz
dec
mov
dec
sbb
test
jae
cltd
fsub
out
mov
movsb
add
pusha
dec
ljmp
andl
mov
adc
sub
cmp
inc
je
jns
cmp
lahf
mov
lock
sti
jecxz
ds
cs
sbb
in
fcomps
stc
rcr
mov
out
xchg
xlat
mov
mov
loop
sbb
cli
mov
mov
mov
int
pop
int
xchg
cmc
decl
fsubrp
mov
jmp
in
xchg
adc
push
rcr
fcompl
sbb
pop
and
mov
imul
aaa
popa
gs
cmpl
test
addb
cld
lock
ss
loopne
fildll
dec
rolb
xor
test
leave
inc
fwait
cmp
pushf
adc
lret
sbb
fisttpll
mov
mov
rcrl
repz
sbb
fwait
push
in
mov
lods
adc
in
mov
inc
data16
push
jl
pop
pushf
sbb
sbb
adcl
cs
mov
enter
pop
cmp
pushw
cs
icebp
and
xchg
scas
loop
andb
fcoms
adc
scas
inc
gs
es
gs
push
mov
xchg
sti
loop
add
outsb
pop
xchg
aas
subl
sub
mov
adc
hlt
jns
iret
cli
test
jl
lods
scas
mov
jne
push
jge
loope
loopne
adc
sbb
mov
or
addr16
aaa
dec
lods
notl
loopne
js
fisttpll
movsl
out
mov
pop
push
je
xor
dec
add
hlt
scas
adc
sub
xchg
jo
dec
sub
add
jmp
add
ret
cmp
mov
movsb
mov
or
pop
jne
push
mov
fwait
cmp
add
sub
add
sbb
js
outsb
aam
inc
imul
ja
mov
ja
outsb
adc
notl
mov
jge
xchg
adc
xor
adc
xor
cld
cmc
inc
pop
pop
and
popa
and
enter
gs
adc
mov
ss
out
jp
sbbl
sahf
dec
or
mov
nop
mov
jns
loopne
loopne,pn
enter
push
and
sbb
ret
hlt
sub
aas
loopne
decb
sahf
sub
out
into
aas
jno
jns
movl
push
data16
xchg
sbb
nop
incl
shr
andb
mov
lods
mov
or
sahf
mov
adc
pop
es
les
jmp
mov
pop
test
xchg
pop
cmpsb
loop
mov
ret
push
jmp
and
fcoml
loopne
inc
repz
xchg
test
and
mov
sbb
pop
data16
pop
xor
cmp
jl
or
fnstenv
je
mov
inc
pop
pushf
loopne
pop
test
in
mov
inc
or
fimuls
adc
mov
jmp
cld
imul
push
mov
daa
or
sbb
sub
xor
xor
push
inc
or
jg
and
jmp
cmp
dec
mov
xchg
adc
or
popf
arpl
into
pushf
test
fisubs
lds
push
hlt
mov
out
pop
push
push
and
cmp
cmpsb
test
aad
movsl
loop
xchg
mov
adcb
jg
mov
mov
jns
cmpsl
cmp
mov
adc
pushl
dec
in
pop
test
inc
repz
subl
push
mov
cmpsl
push
das
fisttps
jno
add
lds
or
sahf
xlat
bound
lods
pusha
and
js
rcrb
icebp
ljmp
bound
call
xchg
sbbb
dec
dec
push
cmp
fdivs
pop
call
stos
shll
mov
and
adcl
cld
and
std
push
adc
sub
push
mov
and
xor
adc
into
faddl
fucomip
repnz
mov
xchg
jb
cld
push
aad
popa
mov
add
jmp
mov
ret
inc
data16
nop
lret
add
lods
ljmp
push
popf
adc
lcall
adc
pop
add
out
rorl
mov
push
mov
cs
repz
adc
int3
or
fistl
xor
sbb
cmp
aas
rcrl
inc
sahf
dec
daa
xlat
or
inc
sbb
jae
aam
test
pushf
add
sbb
inc
nop
xchg
mov
repz
lds
or
aad
stos
test
pop
scas
imul
cld
hlt
add
add
jnp
movsl
scas
sarl
psraw
out
mov
inc
cmp
mov
xor
jecxz
dec
in
test
mov
pop
dec
mov
add
jb
sub
xchg
test
and
std
outsb
pop
jecxz
mov
lds
sub
jge
pop
aaa
dec
mov
in
adc
or
xchg
ret
dec
add
pop
subl
push
sub
add
push
push
daa
pop
and
push
std
data16
fst
push
adc
cwtl
mov
rol
or
mov
ljmp
sub
push
jge
ret
xchg
sbb
add
popa
aas
adc
adc
sahf
nop
jecxz
test
mov
push
pop
mov
mov
add
les
in
adc
ja
cmpsl
jo
fldt
repnz
enter
fildll
scas
inc
lahf
sbb
xchg
iret
stos
xchg
mov
add
in
xchg
mov
sub
pop
arpl
lcall
mov
pushf
push
cmp
inc
xor
mov
fsubrs
sbb
inc
or
mov
add
mov
outsl
icebp
outsl
mov
dec
loopne
jmp
pop
cmp
sbb
xchg
pushw
cltd
es
in
pop
inc
inc
test
orl
mov
inc
test
in
rolb
xor
daa
aas
mov
and
xchg
leave
pop
cmpsl
lock
cs
lods
or
xor
sarb
or
insl
idiv
test
push
mov
imul
jnp
dec
sbb
cmpsl
scas
xchg
cmp
push
repz
jp
cltd
iret
sub
jl
sti
cwtl
int
aad
ret
out
in
xor
jle
xchg
andl
pop
xor
mov
fistps
push
sbb
cmp
xchg
shll
pop
push
and
inc
dec
add
cmc
sti
mov
pop
jl
jge
lds
xchg
jl
sbb
das
mov
push
jno
int3
xlat
ret
inc
xor
xlat
inc
outsl
mov
lcall
xor
cli
adc
mov
icebp
dec
xlat
adc
add
sbbb
pushf
adc
xchg
xor
lock
les
jmp
pop
ud2
into
pop
es
xchg
call
bound
xchg
cmp
and
int
popf
xchg
cwtl
lea
inc
sti
inc
add
mov
enter
dec
dec
sub
out
repnz
rcll
mov
mov
mov
daa
sahf
sub
and
ja
shll
fs
or
shll
sub
and
xor
repnz
xor
imul
lods
push
fidivs
mov
pop
in
fdivrl
jmp
inc
insb
cmp
mov
mov
mov
cmp
xchg
mov
add
aad
ja
cmpsb
sub
jns
adc
movsb
lcall
push
ss
stos
mov
icebp
lock
inc
pop
adc
mov
stos
aas
push
jbe
dec
pop
enter
adc
insl
bound
in
xchg
icebp
mov
add
mov
pop
push
or
std
movsl
mov
xchg
sbb
cltd
sub
and
fimuls
fsubs
movsl
gs
xor
aad
es
adc
cli
adc
jmp
hlt
mov
xor
out
mov
shlb
mov
testl
adc
mov
daa
lds
popf
popa
ljmp
jl
dec
test
inc
add
sti
xchg
stos
iret
repz
in
mov
xlat
lahf
pop
ljmp
xchg
int3
sub
dec
vmovq
inc
dec
add
mov
stos
mov
movsb
rorl
rcll
out
and
pop
jnp
dec
xchg
mov
cmp
repnz
dec
mov
scas
mov
add
dec
sbb
xor
and
sub
mov
push
cmp
pop
and
cmp
push
fdivs
xchg
jg
std
lods
jb
cmp
popw
cmpsb
xchg
rolb
dec
dec
clc
addl
adc
dec
push
in
in
fs
js
shrb
jbe
fsts
xor
mov
loop
xchg
aaa
cmp
les
arpl
inc
ljmp
adc
sbb
add
jo
push
and
cltd
xchg
insl
bound
popa
dec
dec
xor
or
xchg
mov
test
mov
xor
les
pop
fwait
stos
xor
or
stos
and
scas
or
out
dec
push
mov
movsl
rep
jbe
push
sub
cmp
shll
int3
popf
push
repnz
adc
imul
mov
imul
enter
and
sbb
xor
pop
lret
and
loopne
mov
dec
cmp
xor
cli
push
lods
mov
lcall
in
int3
push
js
sbbb
mov
sbb
push
fisubl
cmp
push
loopne
outsl
xchg
int3
cltd
inc
nopl
jo
xor
dec
pop
pushf
mov
pop
insl
or
mov
sub
xor
jns
xchg
iret
repz
ljmp
hlt
sub
icebp
adc
add
push
les
scas
popa
loopne
jnp
inc
cmpsl
jno
rclb
scas
pop
stos
xlat
sbb
dec
pusha
or
xchg
xchg
jbe
sbb
xlat
jmp
idivl
out
repz
add
mov
mov
inc
xchg
xor
jne
sti
push
add
je
adc
sahf
jbe
inc
add
ret
xchg
inc
sbb
stos
es
in
pop
aas
jecxz
pop
fwait
dec
xchg
push
pusha
jg
pop
jmp
lods
jae
jp
push
push
rol
clc
nop
punpcklwd
lods
pop
ljmp
mov
loope
loopne
aaa
aas
sbb
scas
mov
xchg
push
fs
fsubrl
in
cmp
das
add
aad
mov
js
adc
sbb
lcall
decl
fwait
aad
shll
fnstsw
pushf
shlb
xor
pop
xor
adc
push
pushl
push
xor
push
mov
fadds
loop
neg
addb
jecxz
out
push
jmp
mov
push
or
lret
adc
push
in
imul
adc
pop
inc
and
fildl
dec
xor
push
je
pushf
insl
leave
jbe
ret
adc
fcomp
sbb
je
fildll
std
adc
ret
push
sahf
ja
imulb
in
scas
das
sbb
stos
mov
or
jnp
shrd
mov
mov
jge
into
ljmp
inc
pop
gs
inc
sub
cmp
push
movsb
cmp
sub
push
lods
loope
inc
and
dec
dec
out
jp
stc
inc
and
cmpsb
jmp
leave
dec
dec
pop
inc
gs
add
loope
aaa
out
mov
ds
insl
mov
cmpl
mov
pop
pop
in
adc
out
insl
sysret
push
scas
dec
ljmp
mov
ret
pop
clc
lock
idivb
mov
decl
sbbb
aas
arpl
lcall
call
dec
inc
hlt
inc
cmpsl
mov
pop
repnz
sub
aas
mov
cmpsb
nop
and
mov
add
in
je
lods
lods
mov
scas
or
cld
test
outsb
mov
fucomp
scas
xor
mov
out
mov
js
mov
pop
imul
sbb
je
adc
dec
jmp
lock
loop
cld
push
rcll
imulb
fdivl
pop
outsl
loope
lock
jle
or
pushf
pop
loopne
popa
mov
and
cmp
je
andb
sbb
insl
push
int
loope
mov
jnp
data16
pop
push
lret
loope
xchg
mov
pop
push
and
andl
adc
jns
sub
dec
icebp
jns
fldt
pop
jbe
ror
push
leave
outsl
or
daa
fdivr
sarl
inc
aad
in
fwait
insl
movsb
pop
nop
sahf
sub
arpl
addr16
ret
and
das
nop
lods
add
jb
aam
lock
xchg
popa
dec
and
xchg
inc
push
shr
lods
outsb
mov
ficoml
mov
pusha
mov
insb
out
sbb
cs
test
dec
add
js
clc
add
sbb
mov
xor
or
call
stos
dec
test
xchg
pop
jle
in
outsb
dec
fisubrs
and
cwtl
ljmp
mov
scas
out
out
popa
jnp
aam
and
push
xlat
in
jl
pop
dec
mov
sarb
nop
add
lds
fs
setns
rcrb
lcall
repnz
pop
repz
pop
pop
pop
mov
jns
xor
imul
nop
leave
mov
pop
dec
lcall
sub
mov
jl
in
rorb
and
shl
jnp
pop
mov
lret
add
xor
sub
jnp
jmp
fisubrs
sbb
sar
mov
subb
mov
scas
jl
imul
ret
mov
loop
inc
andl
shl
addr16
dec
into
cwtl
insl
int3
add
jo
data16
rcll
cs
repz
jl
fnstsw
andb
pop
xor
or
or
outsb
mov
and
or
scas
dec
push
ss
dec
xchg
test
mov
nop
icebp
ds
daa
push
jno
mov
push
enter
fimuls
and
mov
mov
pop
sahf
jecxz
ljmp
inc
lret
iret
jl
sbb
pop
rolb
xor
jecxz
mov
mov
push
push
mov
xorps
out
push
jns
imul
jmp
out
movsl
xchg
sbb
xchg
mov
in
mov
add
lahf
mov
clc
je
leave
adc
xor
sub
xchg
cmp
orl
jle
sbb
inc
loopne
fwait
notb
push
pusha
xor
mov
hlt
jbe
jnp
scas
inc
negb
mov
rol
mov
adc
sti
seto
mov
insl
stos
test
shl
push
jns
push
mov
cmpsl
sahf
adc
xor
test
pop
mov
jg
repnz
std
or
jnp
int
push
mov
adc
aam
jnp
sbb
or
inc
adc
ret
andb
jecxz
aas
mov
sti
adc
add
sub
xchg
dec
mov
push
mov
cmp
test
test
cltd
out
test
and
jae
out
stos
dec
testl
fcoms
rorl
shl
movsl
mov
xor
in
mov
inc
xor
dec
ljmp
add
lea
shl
pop
mov
daa
imul
sti
sub
mov
lds
jle
jmp
xor
imul
ret
push
jg
xlat
pop
push
daa
inc
and
pop
push
pop
inc
jmp
push
sub
in
into
inc
sbb
in
push
sbb
mov
pushf
mov
cli
push
or
jecxz
stos
adc
jle
clc
cltd
testb
sub
and
pushf
loop
scas
mov
inc
clc
ja
dec
mov
outsb
sahf
sub
sub
or
insb
addr16
repz
mov
sub
xlat
movsl
rorl
mov
cmp
dec
pop
mov
movsb
or
adc
sub
pusha
aad
xor
gs
fs
mov
out
testl
jo
lods
or
dec
cmpsb
or
pop
cmpsb
imulb
pusha
dec
mov
adc
pop
js
enter
jo
sub
aam
sbb
push
fisubrl
mov
push
pop
inc
xchg
pop
sbb
mov
js
stos
mov
loop
out
inc
int
rcr
addb
test
mov
mov
aaa
movswl
fucomi
hlt
pop
dec
movsb
arpl
adc
jmp
inc
xchg
in
dec
inc
gs
adc
mov
repz
test
and
ljmp
push
jb
in
shrl
aas
imul
fisttps
std
jmp
adc
sub
inc
mov
xor
jg
cmp
out
sub
test
cmp
mov
incb
add
inc
dec
pop
lods
cmp
stos
and
jle
dec
mov
xchg
je
in
jae
pop
mov
inc
push
ja
push
jae
or
lock
dec
sbb
xchg
fdivr
mov
icebp
notl
pop
dec
outsb
jne
and
fildll
cltd
inc
xor
aas
mov
fdivrs
mov
mov
repnz
xlat
xchg
pop
xchg
dec
inc
mov
sbb
dec
aaa
jne
mov
stc
sti
dec
loop
sbb
pop
outsb
cmp
inc
or
or
inc
lds
mov
adc
jl
fcoml
and
notl
in
xor
cmpsl
add
mov
or
push
pop
andl
ljmp
add
lcall
leave
adcl
cmp
and
and
test
pop
inc
jnp
clc
and
pop
ds
sub
mov
test
inc
pop
call
sbb
or
jb
jl
test
jle
arpl
xchg
mov
jns
pop
mov
test
repnz
xor
jno
jae
mov
mov
test
xchg
repnz
adc
arpl
xlat
mov
dec
xchg
aaa
cmp
mov
daa
ljmp
and
push
dec
or
popf
add
or
aam
pop
inc
gs
pop
mov
je
sti
stos
orb
cmp
mov
jae
cmp
sub
in
test
jbe
xlat
cmpsl
or
in
lcall
ljmp
mov
punpckhdq
adc
inc
xchg
stos
outsb
cmp
repz
out
push
jp
and
cltd
or
int3
xor
roll
jns
aaa
insl
sub
and
test
or
iret
mov
and
mov
scas
lret
xchg
outsb
sar
push
in
mov
add
mov
add
shlb
cmp
cmc
adcl
cmp
mov
adc
les
scas
add
cmp
fisttpll
enter
and
dec
movl
adc
call
leave
ss
fwait
outsl
loope
fucomp
loop
das
push
mov
aas
test
cmp
xlat
pop
jg
push
mov
mov
jbe
push
xchg
add
iret
popf
cli
lret
inc
lock
jp
scas
cmc
stos
pop
push
adc
and
or
pop
or
and
loop
iret
popaw
jg
mov
aam
xchg
sbb
unpcklps
adc
imul
ja
xor
mov
iret
push
int3
add
or
js
adc
jle
rcr
push
lret
lret
cmp
xor
lahf
pop
in
mov
stc
inc
xchg
pop
sahf
cmp
es
mov
cwtl
cmp
gs
add
lahf
roll
into
mov
popf
popf
test
xchg
lret
push
rolb
adc
dec
in
loop
mov
xchg
fnstenv
lret
xchg
aam
imul
lds
loop
icebp
xchg
insl
pop
jbe
das
add
jnp
push
pop
test
mov
mov
aas
stos
push
jns
iret
ret
aad
aam
ljmp
mov
push
push
xchg
and
cmpsb
or
pop
xor
popa
iret
mov
cmpsb
add
dec
bndstx
xor
mov
mov
dec
gs
pop
int
popa
iret
dec
ret
lahf
sbb
imul
das
pop
adc
lds
int3
push
push
mov
bswap
xor
push
or
add
fucomip
jno
mov
inc
and
adc
sti
xlat
adc
jne
push
test
jge
scas
cwtl
insl
clc
mov
mov
mov
lods
sub
xor
dec
shlb
clc
push
cwtl
mov
dec
loop
fcmovbe
dec
in
adcl
sbb
jp
dec
loop
and
adc
fsubl
fiaddl
push
aas
xchg
rorb
push
stc
sbb
mov
mov
and
mov
xchg
addl
jbe
push
mov
call
ret
push
push
ffree
mov
cmpsb
sub
rcr
lock
mov
leave
sar
add
je
cs
idiv
jge
jp
dec
aas
jns
icebp
jge
and
insl
aaa
inc
stos
sarl
jecxz
inc
out
dec
cs
sbb
out
push
out
fdiv
inc
rcrl
mov
iret
sub
pop
call
mov
je
mov
mov
mov
and
cltd
sbb
out
sbb
cli
ds
jns
add
ss
xchg
xchg
leave
mov
rorb
test
inc
jle
lahf
xor
ret
testl
mov
arpl
inc
and
adc
scas
adc
das
cmpsl
xabort
fs
mov
push
and
subl
inc
mov
fs
rorl
repnz
cmpsl
xchg
fadd
adc
push
inc
leave
or
dec
js
ja,pt
bound
xchg
mov
enter
fiadds
icebp
into
arpl
lret
fidivs
adc
mov
rol
sbb
cltd
xor
adc
fidivrl
in
mov
clc
sahf
popf
sbb
lret
jge
jae
fisttpl
test
ret
sbbl
jne
xor
cmc
pop
or
mov
aam
rorl
clc
add
xor
and
jp
dec
leave
and
subl
clc
movsb
push
loopne
rclb
mov
adc
repnz
pop
mov
call
pop
adc
pushf
or
sub
xor
out
dec
mov
push
xchg
sahf
insb
jbe
sbb
adc
test
mov
js
ds
push
imul
ret
and
xor
inc
xchg
rcl
sbb
shlb
inc
and
fmulp
outsb
mov
and
lods
mov
sub
push
mov
or
pusha
mov
dec
fcomi
je
loop
mov
xchg
push
jge
dec
rcrb
and
jne
pop
icebp
popf
dec
cli
ja
cmp
adc
jo
add
test
aad
shrb
pusha
lea
mov
popl
add
test
adc
mov
scas
negb
imul
jbe
sarb
cld
lcall
dec
repnz
cmp
dec
mov
jb
pop
pusha
test
daa
imul
loop
pop
xchg
repnz
es
cmpsl
pop
ja
or
popl
call
dec
rep
xor
aad
sti
pop
lcall
pushf
enter
out
outsl
sbb
pop
scas
sarl
repnz
rcrb
imul
push
cmp
inc
mov
dec
push
ljmp
daa
inc
dec
enter
inc
dec
ret
add
movsb
and
pop
out
ret
inc
sbb
xor
jp
mov
jae
pop
and
test
lcall
dec
push
inc
push
out
stos
xchg
lea
repnz
mov
pop
xchg
xchg
fisubrl
lcall
ffree
test
mov
mov
cmp
nop
cmpsl
mov
mov
mov
xor
xchg
jp
or
stc
mov
mov
add
xchg
filds
test
sbb
arpl
sbb
in
push
into
push
clc
dec
inc
jecxz
hlt
mov
aas
push
lcall
xor
jg
sti
xor
lds
push
pop
sbb
add
jno
aaa
xor
test
lods
xor
insb
pop
mov
lcall
and
fwait
xchg
fsub
add
push
push
mov
lret
xchg
negl
or
push
cld
dec
and
inc
imul
out
inc
inc
sub
jno
inc
jg
and
adc
gs
clc
dec
xor
mov
sti
icebp
inc
fdivl
cmp
pop
hlt
jb
fmuls
pop
mov
dec
pusha
or
inc
rorb
jl
push
dec
pop
and
sbb
xor
or
stc
rcrb
fisttpll
jbe
dec
or
jmp
push
push
gs
mov
imul
pop
adc
mov
movsl
aam
mov
ds
loop
xchg
push
into
jo
mov
test
add
fildl
cmp
movsb
rcl
add
outsb
adc
push
daa
lds
mov
sbb
lock
shlb
shll
leave
sahf
pop
sbb
xor
cmp
dec
outsb
adc
scas
cmp
xorb
gs
lea
cwtl
iret
mov
jmp
mov
add
mov
adc
pusha
xorl
mov
imul
data16
jecxz
test
pop
loop
bound
in
fs
jo
int3
out
rep
je
xchg
mov
jmp
pop
dec
popl
fwait
inc
add
jbe
pusha
adc
popf
mov
mov
push
mov
outsl
push
dec
stos
repnz
dec
cwtl
aaa
dec
jb
sub
int
fldt
fiadds
mov
xor
popf
popf
sbb
fisubrl
xchg
dec
add
adc
sub
mov
popa
sub
in
rorl
adc
icebp
push
mov
mov
push
and
push
lcall
loope
jnp
hlt
out
fsubr
dec
lret
call
adc
outsb
pop
jnp
and
push
adc
rorb
dec
test
fstpl
decl
add
xor
stc
mov
mov
enter
mov
insl
pop
sbb
dec
push
mov
cmp
in
fst
cmp
mov
adc
in
pop
mov
xor
cltd
xchg
lahf
es
call
jbe
out
pop
jae
or
in
daa
movsb
orb
jae
xchg
aam
lret
enter
std
leave
sbb
xor
mov
outsb
arpl
stos
add
sub
shrb
out
gs
repnz
mov
std
dec
test
call
dec
out
movsl
imul
cmp
sbb
loopne
movsb
and
xchg
lcall
and
mov
loopne
icebp
aam
in
test
jns
int3
movsb
jl
rolb
int3
lcall
lods
xchg
ss
pop
or
push
jae
xchg
cmp
in
lods
lcall
in
xor
push
fcmovbe
fsts
and
mov
and
push
sbb
sbb
push
nop
xor
sarb
pop
xchg
xchg
scas
daa
in
inc
insb
push
pop
sbb
leave
push
add
lods
mov
hlt
jge
mov
ja
scas
sbb
and
ss
or
out
clc
ret
mov
test
add
mov
push
stc
stos
inc
insb
mov
insb
sub
mov
mov
test
push
lret
add
push
sbb
push
pop
addl
mov
gs
es
pop
sbbb
nop
jne
aaa
jecxz
inc
sbb
jno
adc
xlat
jl
out
pop
mov
pop
lods
inc
adc
jge
cmc
and
flds
xor
lret
mov
sbb
jg
shll
push
enter
push
and
mov
or
movsb
or
pop
fs
pop
cmp
mov
adc
push
test
sahf
outsb
cmpsl
xor
sti
and
cmp
cld
sbb
clc
sbb
scas
out
inc
cs
stos
or
test
push
xchg
lea
xchg
push
xor
pop
push
insb
sahf
loop
jge
popf
ljmp
push
int
add
cmp
out
lods
xchg
nop
rcll
dec
xor
aam
clc
pop
movsl
mov
mov
adc
pop
xchg
pop
divb
insl
leave
pop
scas
xor
push
pusha
aad
and
sbb
inc
loopne
pop
and
pop
mov
lahf
adc
in
aas
sub
popa
or
or
xchg
popa
mov
add
lds
repnz
adc
jae
in
outsl
cli
fidivl
scas
sub
or
mov
in
aaa
int
cmc
stc
add
shlb
es
movsb
add
test
dec
sbbl
xor
sbb
mov
mov
jne
jmp
popl
roll
add
icebp
inc
inc
inc
mov
mov
int3
mov
mov
dec
mov
mov
xorl
add
mov
cmovb
mov
xlat
fstpl
sub
popa
pusha
iret
stos
or
pop
lds
das
mov
imul
adc
xchg
push
inc
dec
imulb
nop
push
xchg
push
shlb
inc
icebp
xor
iret
loope,pn
lret
movsl
sub
ret
jmp
adc
rcll
jo
sar
add
xchg
mov
add
fmul
sbb
pop
push
cltd
and
sarl
xor
sbb
rclb
adc
sbb
test
push
dec
stc
sub
inc
mov
xchg
push
pop
shlb
sub
and
scas
lcall
dec
sti
imul
jbe
stc
int
add
aaa
lds
dec
adc
jne
sbb
ss
adc
mov
mov
fwait
imulb
xor
xchg
aaa
aas
add
adc
pop
xor
or
or
xchg
daa
in
enter
pop
or
pop
pop
sbb
pop
cmpsl
notrack
inc
pop
es
into
mov
xchg
cmpsb
fiaddl
jg
lcall
loopne
gs
addr16
adc
xchg
std
test
inc
add
or
dec
lcall
mov
sbb
xchg
into
lcall
aam
and
push
mov
push
fnstcw
ss
scas
loopne
ja
jae
paddq
shll
dec
cmp
bound
mov
cmp
jle
rorl
sbb
pusha
fidivs
outsl
iret
push
cmp
push
push
mov
insl
or
push
test
push
mov
pop
mov
mov
lods
insb
rcrl
sbb
rcll
xchg
outsb
dec
and
insl
xchg
lea
push
push
jns
cmp
sub
dec
addr16
add
stc
add
jmp
mov
cmp
popf
inc
insl
mov
sbb
fs
and
cmp
js
jae
and
push
lods
add
and
inc
aad
dec
cmpsb
xchg
das
iret
xor
cltd
cmp
mov
mov
xor
movsb
mov
mov
sbb
cltd
int3
das
dec
add
pop
in
mov
into
imul
jae
lcall
add
mov
push
cli
mov
dec
push
ja
mov
imul
cmpsl
xor
jl
mov
ja
push
sti
cs
pusha
and
sti
stos
dec
fisttpll
imul
jo
sarl
inc
xchg
mov
fisubrl
xchg
int
push
cmp
dec
ljmp
xor
rcrl
pop
aas
adc
push
mov
mov
outsl
or
xor
cmp
adc
sub
add
loopne
popw
sbb
add
aam
std
out
imul
mov
rorb
ja
fcmovb
arpl
pusha
fadds
addl
fstpt
xlat
mov
push
fisttpl
xor
push
stos
loop
mov
repnz
xor
mov
push
dec
test
stc
dec
test
sbb
aad
shrb
pop
and
jecxz
iret
insb
jmp
ret
xorl
inc
jnp
cld
and
in
icebp
sbb
adc
mov
mov
xchg
dec
push
xorb
les
add
hlt
push
jne
adc
mov
stos
sbb
sar
sbb
test
movsb
inc
adc
mov
shll
ljmp
mov
dec
mov
adc
xchg
sub
adcb
std
out
sub
xor
mov
jle
cld
dec
gs
xor
fst
int3
sub
xchg
sbb
xor
mov
outsb
jo
in
adc
mov
fcoml
lea
aam
sbb
movsb
push
mov
xor
xor
xchg
out
xchg
ret
mov
mov
push
pop
das
sbb
jns
cltd
mov
xchg
mov
jecxz
jne
imul
stos
cmp
lcall
movsb
shll
xchg
add
repz
fiadds
mov
add
test
ret
push
xchg
sub
dec
pop
jmp
dec
sbb
jmp
cltd
leave
inc
std
data16
sbb
dec
popa
cmc
out
sub
rorb
cmc
sbb
fcmovne
xchg
nop
and
sbb
mov
xor
sub
jno
js
out
adc
jg
icebp
test
and
push
inc
sbb
sub
jge,pn
rorb
nop
mov
mov
cld
popa
hlt
into
sbb
inc
push
and
test
mov
pop
adc
push
cwtl
ret
in
sahf
cld
push
out
insb
insb
movsl
out
insb
call
cmp
lock
jl
cmp
sbb
ret
fnstenv
and
into
inc
roll
cmpsb
fwait
clc
ljmp
inc
mull
in
in
dec
sub
fucomi
and
mov
push
adc
jno
mov
jb
mov
popa
sub
mov
push
cmp
loopne
sbb
cmc
ja
cltd
test
mov
cmp
imul
fisubrl
pop
mov
dec
xlat
test
add
sbb
loop
xchg
shrb
inc
dec
sbb
xchg
shll
pop
xor
jmp
sar
les
xchg
insb
je
xlat
mov
fistl
test
mov
mov
mov
cmp
iret
insb
shrl
or
dec
daa
pop
jecxz
add
jp
jl
mov
cwtl
dec
dec
sbb
dec
pushf
mov
data16
cltd
stos
es
repnz
call
frstor
arpl
fldt
les
icebp
movsb
push
jmp
cmp
mov
mov
push
sarl
cld
js
int
or
notb
cld
sub
incl
sti
std
xchg
adc
das
push
shl
pop
lods
arpl
and
aas
dec
enter
das
jnp
push
in
or
sbb
push
add
stos
call
mov
addb
dec
sahf
add
xchg
daa
or
dec
inc
imul
adc
outsl
push
adc
mov
jmp
lea
stos
test
jp
dec
arpl
cmp
cs
lret
mov
mov
xor
lods
push
mov
inc
xor
shl
dec
pop
mov
jg
iret
inc
sub
cld
imul
adc
dec
pusha
push
pushf
push
jne
xorb
bound
idivb
mov
cld
call
hlt
lahf
ret
test
dec
out
clc
call
inc
sbb
cmpsb
outsb
arpl
lcall
sbbl
xchg
dec
aaa
outsl
imul
jae
aaa
push
mull
xchg
inc
jae
loop
jp
jbe
js
adcb
fs
xor
mov
inc
sbbb
push
cmp
in
shlb
dec
ret
mov
mov
imul
jecxz
and
cli
lea
push
mov
and
add
es
cmpsb
lahf
xor
pop
sbb
mov
jo
test
cmp
push
push
pop
insl
jp
in
xchg
xchg
in
push
inc
xor
and
cltd
push
push
ss
adcb
pushf
stc
jecxz
outsl
jl
adc
inc
adc
or
aaa
mov
cmp
add
gs
leave
and
sub
mov
out
rcrl
mov
ret
out
in
mov
test
cld
popa
aam
cs
scas
sub
or
out
and
jl
loop
dec
add
fdivrs
push
addr16
aaa
fdivrs
scas
sub
xorb
je
shlb
cmpsb
add
adc
cmp
mov
loopne
mov
pop
call
out
push
adc
movsb
addr16
popf
mov
mov
xchg
push
cmp
add
mov
mov
cmp
mov
and
aam
fdivrs
movsb
dec
pusha
rorl
inc
call
sub
push
or
sbb
notb
xchg
addr16
ficoml
xchg
sbb
shll
dec
out
adc
popa
push
flds
push
xor
ret
mov
mov
decl
testl
cmpsb
ljmp
movsb
dec
xchg
repnz
mov
pop
cld
or
jne
cmp
lock
or
pop
jmp
xchg
scas
and
jp
xchg
scas
xchg
push
mov
aas
mov
adc
leave
xchg
mov
cmp
lret
jp
scas
push
pop
out
jnp
lds
icebp
mov
fs
mov
ud0
cmpsb
and
ret
test
mov
jl
cmp
dec
xchg
push
call
xchg
ret
sub
mov
xchg
inc
cmp
sbb
cmp
jl
sarb
ret
fsubl
repz
or
clc
sbb
jne
jb
adc
out
and
inc
loop
repnz
pop
data16
push
ds
out
aad
pop
pop
ds
jmp
insb
leave
push
int
movsl
lds
loop
mov
dec
mov
sub
add
mov
jecxz
adc
ja
push
add
sub
imul
call
mov
in
push
nop
aam
addb
popf
je
jns
insl
cmp
clc
sbb
push
pop
and
movsb
rolb
mov
loopne
test
cmp
sbb
ffreep
jb
add
jmp
gs
cmp
decb
stos
icebp
mov
push
pushf
adc
iret
cli
mov
test
mov
jmp
hlt
fwait
adc
xchg
adc
mov
cmc
or
pop
nop
enter
scas
cs
sub
shll
adc
in
add
add
repnz
and
je
mov
xchg
and
cmpsl
push
ret
xchg
jl
jge
mov
xchg
leave
jns
sub
mov
sbb
push
int
pop
mov
dec
outsl
mov
fisttps
in
aad
add
adc
sub
or
add
test
in
icebp
mov
add
pop
ret
imul
popf
repnz
add
lcall
adc
enter
push
sbb
and
insl
xchg
push
pop
mov
movsb
push
dec
cmp
arpl
cmpb
out
pop
inc
mov
dec
xor
fsubrs
in
iret
push
jecxz
xor
cmp
lea
ljmp
pop
push
mov
sbb
adc
jg
jge
test
sub
popf
mov
and
stos
sbb
ja
gs
inc
sar
add
inc
inc
stc
adc
std
mov
lcall
ret
mov
aaa
xchg
and
add
pop
jnp
dec
pop
outsl
sbb
or
repz
aad
jmp
cmpsl
imul
hlt
or
xchg
sbb
les
rcrl
xor
cmp
pusha
cmp
sub
out
xlat
jp
dec
mov
or
push
into
push
stos
mov
lods
adc
shl
fsubs
add
int
mov
sbb
sub
std
push
faddl
insl
mov
or
jo
popa
mov
jnp
adc
mov
mov
xchg
rolb
clc
shlb
loop
pop
test
lds
fisubrs
imul
es
out
and
int3
popa
dec
clc
mov
mov
fistl
cmp
int3
in
nop
push
es
push
loopne
xor
inc
mov
adc
fstl
pop
pop
dec
movsb
mov
in
mov
cli
ret
xchg
icebp
sub
adc
add
int3
into
push
or
lds
sbb
xor
and
mov
in
mov
popf
mov
xchg
mov
push
pusha
adc
or
inc
pop
inc
bound
push
mov
push
test
scas
imul
mov
imul
ret
push
icebp
and
mov
imul
or
xchg
aad
push
ds
add
fimuls
sub
arpl
inc
sub
mov
xor
incb
cmpb
xor
pop
insb
jle
jl
sub
sbb
add
adc
and
nop
and
loope
sub
sub
ds
cmpl
xchg
cs
mov
pop
pop
aad
push
xor
stos
cwtl
popf
test
out
ds
ret
fwait
sbb
jae
in
xchg
repz
cmp
loop
iret
mov
shrb
dec
fists
jns
add
xorl
xchg
int
pop
pop
mov
incl
pop
cld
jns
stc
cmc
adc
ljmp
jnp
scas
cmp
dec
inc
push
arpl
add
out
fcmovu
cltd
lea
inc
inc
das
rolb
cmc
stc
hlt
or
inc
fbstp
dec
outsl
mov
je
cmp
inc
inc
sub
xchg
dec
cmpsb
popa
and
mov
or
xchg
or
in
mov
outsl
bnd
lock
inc
iret
pop
sbb
jnp
add
adc
inc
xchg
or
and
inc
mov
lcall
mov
iret
arpl
fwait
mov
shlb
ret
push
aad
loop
add
inc
shlb
push
push
dec
sub
pusha
icebp
push
aaa
repz
cli
add
pushf
in
adc
push
pop
in
ljmp
std
jae
inc
pop
mov
ss
and
push
cmpsb
dec
nop
lds
inc
adc
jnp
mov
int3
xchg
stos
arpl
mov
xor
fbld
adc
dec
lahf
sbb
sbb
repnz
ljmp
mov
cli
xor
push
ret
repz
pusha
or
mov
dec
add
dec
data16
ja
pusha
ja
cs
fsubrl
insb
mov
stc
pop
xor
mov
les
out
cwtl
notl
popa
sbb
idivl
jle
mov
inc
data16
outsb
dec
cmp
test
adc
cli
insb
xchg
mov
sub
sub
pop
or
cmp
mov
add
into
mov
add
add
mov
ljmp
push
xchg
pop
mov
out
pop
addr16
lods
clc
pop
pop
lods
mov
mov
es
and
daa
jne
jno
lods
or
jne
or
icebp
lods
mov
cmc
fs
enter
in
pop
pop
fldt
jecxz
and
addl
ret
cmp
xor
push
sahf
mov
aam
int3
push
lods
push
push
pop
mov
push
inc
or
outsl
dec
jmp
mov
add
pop
xchg
into
push
xlat
fsubl
lret
shr
push
in
mov
mov
pop
cmpsl
jge
xor
cli
jbe
out
mov
pop
int
mov
out
or
or
xor
in
lcall
sub
cmp
daa
add
mov
mov
pop
cld
cwtl
ja
adc
jg
sub
xor
sbb
out
push
ja
add
repz
jg
imul
pop
data16
jp
mov
pop
cwtl
jnp
shrb
scas
ss
xor
mov
sub
cmp
stos
adc
rcll
add
pop
addr16
sub
and
leave
jp
call
dec
sub
movb
movsb
lea
xchg
inc
cmp
rorl
mov
pop
mov
xor
fcmovb
push
lcall
xlat
sub
sbb
das
ret
push
lds
add
imul
jmp
in
ffreep
and
xchg
adc
mov
inc
sbb
cmpsl
ja
fldt
pop
jo
fsubrl
xchg
jno
xlat
sub
leave
mov
inc
jb
xor
add
and
das
insb
xchg
push
movsb
inc
and
sub
insl
call
fdivs
daa
loopne
adc
movsb
mov
pop
hlt
mov
and
cld
sahf
lods
adc
pop
adc
dec
sub
dec
cmc
jbe
outsb
add
sbb
shlb
ds
pop
jp,pn
insl
mov
outsl
mov
or
lods
jne
stos
dec
xor
sbb
jns
add
jne
cmp
js
lahf
or
ret
std
xchg
mov
mov
sbb
mov
lahf
cmp
addl
jp
push
cmpsb
scas
jmp
adc
and
xor
fldt
cld
jmp
push
pop
mov
inc
cmp
pop
inc
inc
jns
push
sbbl
xor
xor
xlat
mov
cmpsl
push
mov
pop
xchg
or
dec
mov
stos
xchg
movsl
gs
sbb
leave
xchg
fidivs
adc
sub
mov
lods
shr
push
xchg
lcall
lcall
jmp
pop
jge
or
pop
xchg
in
or
pusha
fisubrl
in
mov
and
das
or
cmp
sub
testl
ss
mov
mov
add
scas
inc
rorl
push
cmp
into
shlb
and
popl
jae
mov
shrl
mov
mov
and
jbe
mov
cld
or
xchg
das
addr16
xchg
adcb
mov
xchg
nop
test
adc
popf
mov
cltd
jle
cld
push
dec
jecxz
cltd
out
out
push
test
popf
dec
lods
push
test
adc
mov
xor
sbb
pop
mov
and
mov
inc
les
adc
scas
and
outsl
ja
sub
pusha
icebp
pushf
lret
loopne
lods
jmp
test
add
xor
mov
dec
out
cmpsb
mov
test
jnp
filds
mov
out
outsl
pusha
mov
ret
pushf
add
cld
lods
shlb
xlat
out
mov
sti
add
xlat
lret
xchg
mov
stc
repz
xchg
pushf
outsl
mov
push
data16
push
inc
pop
cld
jae
push
cwtl
cmp
pushf
mov
call
sub
out
push
sar
std
sub
push
jg
sbb
aam
or
cmp
lock
out
mov
pop
fwait
jl
pusha
mov
jae
rcrb
and
xchg
sti
push
test
add
popa
arpl
jnp
push
clc
pop
jae
loope
lret
imul
pop
movsl
cld
cli
shll
dec
ret
lahf
mov
roll
jb
xchg
jne
sbb
jle
insl
mov
scas
dec
outsb
jbe
xor
aam
fisubs
shrl
jb
daa
or
xchg
jb
pop
inc
lea
dec
sar
das
test
sub
jmp
add
pop
jmp
mov
in
call
popa
cltd
loope
mov
or
jp
cmp
outsb
pop
jl
push
xchg
leave
cs
mov
sbb
movsl
push
jmp
ret
push
loop
lahf
repz
pop
inc
stos
or
mov
xchg
sbb
adc
dec
in
mov
jge
mov
cli
add
mov
lea
mov
inc
mov
test
loope
in
aad
fsts
test
push
fsubs
push
push
ss
xor
pop
jp
pop
mov
mov
pop
adc
cmp
jl
push
or
sbb
outsb
sbb
lock
mov
jg
scas
push
shlb
jl
fisttpll
and
sub
or
mov
dec
hlt
jne
ss
add
pop
das
outsb
shrb
inc
mov
cmc
mov
mov
pop
int
mov
cmp
inc
mov
insb
pop
ljmp
or
popf
sub
jns
outsb
in
out
popa
adcl
icebp
test
cld
mov
inc
aaa
and
adc
hlt
sub
cmpsb
je
repnz
inc
xor
loope
out
push
aam
lret
sarl
out
inc
lahf
pushf
pop
adc
mov
mov
xor
imul
mov
hlt
lods
sahf
ja
mov
jg
cltd
adc
dec
cmp
sub
movsb
dec
xor
add
push
xchg
push
sarl
gs
mov
fsubr
mov
fcoms
jl
outsl
cmp
dec
mov
add
jo
and
pop
pop
xchg
xor
sub
adc
pusha
mov
and
pop
inc
lcall
inc
mov
stc
shll
stc
cs
pusha
push
mov
pop
xor
jb
lods
xchg
sahf
out
push
xor
clc
pop
jne
pushl
adc
test
ss
jne
mov
sbb
and
mov
dec
fxch
sbb
mov
out
dec
into
xor
cld
push
dec
push
dec
pop
add
orl
in
push
xor
sti
gs
fstl
dec
es
pop
icebp
aas
add
icebp
jo
or
push
xor
mov
mov
leave
lock
mov
dec
and
jbe
shll
and
xor
cmp
testl
inc
mov
sub
leave
adc
pusha
mov
add
xor
mov
cmp
dec
and
mov
mov
sbb
xchg
adcb
inc
inc
and
mov
rcrb
sbb
sbb
aas
sahf
jle
xor
pop
jns
lods
mov
pop
cmpsl
mov
or
push
jl
mov
aad
mov
fbld
pop
sbb
mov
adc
outsb
imul
repz
or
mull
popl
xor
das
cld
test
in
sbb
jbe
aad
mov
dec
inc
rolb
nop
inc
lds
cmp
jne
and
mov
push
sub
adc
mov
jge
outsl
repz
adc
and
dec
inc
jns
add
pop
push
push
add
sbb
shlb
in
test
xchg
add
mov
sub
fsubrs
insl
sub
mov
inc
pop
fcomps
aaa
test
jo
jl
arpl
sub
mov
int3
popa
push
push
mov
aaa
or
lahf
pop
push
ret
mov
nop
xlat
push
dec
and
xchg
dec
enter
lods
out
and
jle
lds
and
sbb
adc
stos
xchg
aad
popf
jge
sbb
subl
cltd
mov
mov
mov
lock
insl
sub
fwait
xlat
add
cmp
add
into
aam
fiaddl
push
push
lea
cli
or
test
das
adc
jl
subb
pop
push
aaa
test
push
xchg
lds
xchg
call
cli
add
out
adc
xor
mov
imul
dec
negl
sbb
clc
movsb
shl
mov
ficomps
daa
mov
sub
in
and
push
mov
cmp
pop
xchg
popa
lea
inc
mov
pop
sub
xor
dec
fxch
les
cmpsb
xchg
jmp
xor
leave
hlt
mov
or
xor
mov
xchg
or
insb
or
push
enter
sbb
push
cmpsb
add
das
cmp
sub
iret
sbb
movsl
imul
sbb
xor
sbb
lret
pop
lcall
sbb
sub
shlb
xchg
xchg
mov
bt
fmuls
push
dec
test
add
add
mov
fst
mov
scas
test
rcrb
push
shrb
les
pop
pop
mov
pop
popa
notl
mov
dec
sub
hlt
cs
cmp
xor
inc
rcrl
adc
add
out
xor
and
and
cmp
out
in
sub
jb
dec
mov
test
add
fsubr
mov
xchg
jne
cwtl
sti
push
jg
sub
jns
and
dec
ljmp
push
mov
fdivr
test
arpl
fidivl
mov
jmp
test
pop
sbb
sarl
and
insl
shrb
dec
out
mov
scas
lahf
xchg
mov
out
movq
shl
andb
adc
xor
lcall
dec
xor
fwait
stos
add
mov
add
ljmp
mov
jo
xchg
jbe
gs
loop
cli
push
clc
push
lods
mov
cmp
inc
mov
or
outsl
jge
sbb
js
gs
ss
jbe
clc
or
xchg
call
hlt
push
or
icebp
lock
inc
mov
inc
push
mov
fimuls
stos
insl
in
stos
mov
rcr
pop
dec
adc
adc
push
xchg
popa
movsb
push
iret
in
cmpsb
push
or
xchg
mov
jg
jl
std
pushf
sbb
test
xor
out
icebp
arpl
das
enter
fisttpl
dec
mov
testb
add
jo
and
cmp
jne,pt
fs
addb
jl
bound
mov
cmpl
je
sub
sbb
jbe
mov
jnp
testb
jl
inc
aas
xlat
sub
es
loopne
inc
xchg
push
cli
pusha
xchg
dec
sub
xor
shlb
jecxz
push
push
cmp
mov
repnz
pop
inc
and
sub
ljmp
mov
push
sub
jno
icebp
addr16
in
mov
sbb
jecxz
in
mov
daa
loope
fwait
lcall
mov
xchg
test
sbb
cltd
dec
dec
mov
pop
aam
sbb
jecxz
mov
repnz
fsubs
popf
push
sub
imul
out
ficomps
mov
fwait
cmp
inc
pushf
push
das
or
jg
pop
jmp
inc
lods
pop
mov
sbbl
sahf
xor
lods
sub
jbe
cmp
mov
and
xchg
push
mov
xchg
js
outsl
into
iret
je
pop
rcrb
xor
jl
xor
popa
movsb
push
loope,pn
or
cmp
cltd
and
pusha
aam
repnz
lds
push
and
sub
or
pop
bound
push
cs
addl
adc
and
sub
mov
cld
movsb
hlt
shll
in
and
mov
jnp
enter
push
adc
sbb
mov
add
push
and
pop
mov
xchg
push
mov
push
push
push
mov
jns
fbstp
sub
adc
adc
mov
cmp
adc
or
and
loope
mov
lcall
dec
sub
mov
jecxz
and
push
sbb
pushf
mov
mov
adc
dec
mov
xchg
jbe
add
clc
xchg
into
fcom
imul
popf
inc
in
scas
push
add
rcll
inc
subb
fmuls
arpl
push
push
cmp
nop
push
mov
jns
dec
stc
pop
js
dec
cmp
xor
lods
xchg
insl
roll
xorb
pop
push
int
sbb
fcomip
jmp
out
mov
jp
jge
and
mov
fisttps
or
dec
adc
push
inc
add
jae
cmp
daa
dec
jmp
adc
test
push
xchg
mov
es
inc
push
sub
push
lods
add
or
ja
cmp
imul
and
fnstenv
sti
fmul
adc
je
push
mov
aaa
fldl
hlt
mov
js
aas
inc
pop
mov
nop
arpl
dec
jg
imul
fisubrl
pop
mov
inc
in
mov
lcall
sub
mov
mov
and
mov
das
test
mov
outsl
push
cld
jl
mov
cltd
xor
fsubrl
mov
bound
lret
jle
mov
jp
adc
mov
cmp
add
push
adc
sbb
mov
jae
pusha
push
sub
imul
int3
add
mov
cmp
pushf
ss
sub
mov
inc
push
loopne
mov
and
test
push
and
out
imul
fcoms
mov
sti
inc
or
dec
subl
add
mov
sti
mov
pop
movl
lods
xchg
out
xchg
jnp
pop
sbb
clc
aas
cmp
and
cld
ficoml
mov
ficoms
fwait
adc
lds
jae
xor
or
scas
push
inc
mov
jp
out
mov
leave
fincstp
xchg
loope
cmp
adc
sub
pop
in
das
lea
inc
data16
or
and
add
scas
addr16
xor
jnp
scas
ja
xor
push
pop
leave
xchg
sbb
pop
jnp
cmpsl
push
push
ret
xor
lock
inc
adc
les
insl
scas
inc
xchg
sti
div
and
pop
sbb
imul
jmp
xor
insb
mov
xorb
push
pop
lea
xor
in
imul
mov
cs
cmp
mov
mov
or
rorb
add
mov
inc
leave
sub
sub
notb
or
xchg
pop
cs
dec
cmc
dec
inc
repnz
sub
out
icebp
cwtl
imul
loop
lods
clc
stc
shlb
dec
xor
sub
ds
push
dec
push
fsubrs
fistpl
push
fdivr
scas
or
jb
int3
push
je
mov
into
add
mov
pusha
jle
lea
add
lea
dec
pop
std
int3
roll
or
stos
push
xor
dec
shll
cmp
lahf
pop
jae
rcl
data16
add
sub
insl
lds
mov
mov
out
xchg
cwtl
int
inc
lds
lcall
clc
push
inc
inc
mov
pop
mov
xchg
shl
push
stos
addl
and
pop
and
cmp
outsb
mov
fs
push
add
inc
mov
fcmovb
scas
jle
dec
xchg
fidivrs
cmp
sub
hlt
out
mov
push
in
and
mov
cmpsl
loopne
jmp
adc
lods
test
xor
in
sub
add
roll
pop
mov
movsb
or
sbb
xor
xchg
mov
mov
add
dec
mov
sub
and
xchg
dec
aad
fidivrl
add
dec
in
push
or
mov
inc
test
lret
push
mov
ds
cmp
push
adc
xchg
stc
adc
jne
rcll
add
or
sbbb
push
push
fwait
test
ret
dec
adc
mov
in
mov
mov
adc
lods
in
shrb
fstl
jl
std
imul
in
sbb
inc
rorb
and
jp
cmp
jge
outsb
loope
cld
lods
mov
adc
mov
loop
in
in
aaa
loop
xor
jle
dec
call
or
or
adc
cmc
dec
jnp
mov
lret
aas
icebp
mov
pop
sub
jb
sub
cmp
cmpsl
in
dec
xchg
orb
jae
cmp
mov
sbb
xor
lret
pop
imul
fwait
mov
pop
mov
xor
cwtl
out
cmpsl
stc
into
pop
pop
test
sbb
outsl
cs
outsl
push
fnstcw
inc
inc
push
add
imul
ds
lods
jne
aam
aad
mov
add
jp
into
sbb
xor
jne
mov
jge
sbb
xchg
into
add
outsl
pusha
ret
jmp
aas
inc
sub
or
ss
out
clc
add
push
hlt
les
sti
and
jmp
jg
cwtl
std
mov
push
daa
lods
cmp
stos
sti
push
xchg
insl
mov
stos
push
test
roll
cmp
xor
cwtl
cmp
loop
push
mov
xchg
outsl
jecxz
test
mov
cmp
xchg
cmp
lock
xor
mov
pushf
push
cmpsl
test
inc
test
mov
sarb
jg
cli
dec
sub
popa
lret
aad
addr16
rorl
outsl
xchg
mov
jmp
lea
mov
jmp
inc
jp
or
jmp
mov
out
adc
lcall
std
mov
mov
dec
mov
sub
movsb
pop
inc
mov
cmp
lock
jg
and
jecxz
cmovb
repz
rcrb
in
push
xor
data16
icebp
rorl
add
negb
ror
arpl
je
icebp
int3
add
cmp
adc
daa
sub
pop
icebp
mov
sub
xor
enter
xor
imul
loopne
push
test
lcall
ljmp
and
mov
scas
lahf
add
cmp
cmpsb
sub
pop
mov
cltd
int
ret
pop
enter
mov
in
cmpb
out
jne
fs
inc
in
or
adc
shll
mov
aaa
dec
xchg
cld
jno
pop
push
push
mov
in
sbb
popf
stos
std
and
cmpsl
popf
in
repz
adc
jae
pusha
mov
sub
test
dec
cmp
xor
stc
xchg
jbe
add
fs
scas
movsl
pop
imul
push
cmpsb
mov
mov
ret
jmp
scas
mov
xorl
jecxz
mov
push
add
jae
popa
stos
test
js
into
jmp
das
aam
mov
sub
push
dec
push
sub
sbb
mov
adc
push
fwait
cmp
pop
xchg
cmp
lcall
jbe
sub
outsb
test
push
test
rcr
pop
dec
subl
cmc
push
add
push
and
jo
xor
xchg
in
clc
loopne
cmp
lods
mov
nop
inc
mov
in
mov
aaa
pop
test
ds
or
mov
sbb
pop
sub
xchg
stos
cmp
loope
cmpb
movsb
push
cmp
cmp
cmp
sbb
mov
jns
mov
nop
frstor
sarl
cmp
scas
insb
addl
sub
push
pop
add
out
outsb
mov
jge
int
dec
inc
cld
mov
into
mov
pop
mov
fnstenv
dec
jg
jp
lret
push
mov
or
cmp
and
mov
adc
lods
xchg
fstl
inc
push
and
pop
mov
cmp
in
lcall
scas
pop
and
dec
out
out
enter
add
shlb
ljmp
jp
push
aas
inc
test
addr16
sbb
xorb
loopne
mov
jle
adc
jbe
test
pop
adc
inc
cwtl
jle
cld
fs
dec
test
sub
shrb
push
lods
or
hlt
xlat
sub
test
repnz
mov
mov
lock
add
pop
inc
fsubrs
fisubs
loopne
mov
es
dec
jp
xorl
mov
in
addl
push
testb
jns
jo
cmc
cmp
cld
add
pusha
int3
sti
pop
test
movsb
xchg
push
jl
stos
add
dec
loop
adc
xchg
les
or
adc
sub
xlat
xor
xor
inc
xchg
pop
push
and
dec
or
push
or
adc
xchg
decb
mov
mov
das
icebp
or
pop
ret
in
fldcw
cwtl
lea
push
mov
mov
and
xchg
rolb
jge
add
popl
int
fisubrs
xchg
ret
les
shll
add
mov
out
test
mov
loope
sbb
push
mov
ss
xor
scas
fcompl
mov
dec
faddl
in
in
scas
dec
das
sub
in
mov
adc
xor
mov
jecxz
in
add
adc
dec
cmpsl
mov
lret
pop
mov
call
mov
imul
rcll
sbb
jle
dec
pop
mov
or
or
aaa
dec
mov
push
pop
and
fwait
push
xchg
icebp
sub
mov
add
mov
xor
arpl
jne
test
fimull
int3
insb
and
fldenv
arpl
negb
cmpsb
jne
rcl
mov
cmp
in
add
repnz
popa
or
sub
loope
cmp
xchg
inc
xchg
aas
lret
sbb
pop
push
aam
popa
adcl
rcll
dec
mov
loopne
jecxz
xchg
xor
jo
inc
in
push
das
xchg
lret
jle
adc
sbb
cmp
sub
cmp
sahf
xor
or
callw
xor
popf
mov
int3
arpl
imull
fistps
jmp
jp
testl
xor
jp
mov
push
test
inc
and
dec
enter
xor
cltd
jp
sbb
add
xlat
push
jp
lret
shr
dec
jbe
push
lea
pop
jge
xlat
pop
jb
mov
pop
lahf
pop
xchg
cmpsl
daa
hlt
int
push
mov
add
push
add
shll
jg
repnz
mov
inc
loop
mov
pop
les
jno
and
scas
inc
js
dec
test
xor
dec
repz
adc
std
or
scas
xchg
aad
xor
add
push
int3
and
loopne
push
dec
dec
xchg
sahf
inc
shrb
out
mov
clc
jbe
cmc
lahf
sti
cmp
dec
shlb
mov
xor
jbe
push
lahf
and
jae
or
mov
mov
inc
inc
out
out
fldt
sub
push
pushf
sysenter
clc
pop
xlat
xor
mov
test
inc
loopne
in
fstpt
movsl
inc
data16
ret
inc
or
rcrb
popf
push
dec
sub
add
ss
repnz
dec
mov
mov
xor
imul
sarl
int3
sbb
push
pushf
nop
fcmove
icebp
mov
pop
add
xchg
push
add
mov
ret
movsb
cld
jp
jg
pop
or
mov
out
ss
xor
rcrb
subb
rcll
mov
faddl
inc
int
outsb
and
lods
xor
sbb
jecxz
imul
in
or
scas
and
or
xor
lcall
js
es
nop
sub
cmp
inc
jne
and
outsb
xor
jle
inc
push
cmp
sti
iret
adc
xchg
xchg
ss
pop
cmpb
rorl
movl
mov
jb
push
psubsw
cmp
mov
test
test
pop
scas
enter
sti
adc
inc
repz
loope
xchg
xor
scas
push
mov
test
pop
sub
sbb
push
xchg
mov
clc
mov
mov
inc
insl
add
je
mov
push
and
cltd
add
push
mov
mulb
cmp
pop
aam
fadd
xchg
inc
je
cmp
out
mov
pop
or
xor
dec
xchg
ficoml
bound
outsb
cmp
lahf
pushf
inc
mov
push
inc
rclb
mov
insl
lret
int3
xor
mov
jmp
ret
das
inc
and
enter
lea
sar
fucomi
and
js
and
pop
scas
sti
jb
iret
add
bound
mov
int
shr
jno
sub
xlat
cmp
or
xchg
test
cltd
add
push
inc
mov
lea
dec
mov
mov
pushf
outsl
lea
or
lea
mov
inc
inc
cld
sub
mov
loope
rclb
ja
subb
mov
out
fs
jmp
test
ds
insl
sub
sbb
inc
inc
xchg
inc
xor
jnp
loopne
in
lds
mov
or
push
sub
sub
mov
jecxz
in
jne
std
sahf
gs
sub
adc
shll
sbb
push
add
xchg
addr16
mov
sub
in
out
sbb
loope
shrl
and
pop
fidivrs
adc
cwtl
jl
hlt
stc
lds
push
xor
leave
loope
cmpsb
leave
enter
lahf
xchg
xchg
shll
das
xor
pop
outsb
mov
sub
push
push
mov
xchg
xchg
nop
out
sahf
cltd
pop
cmp
in
sahf
xchg
out
xchg
mov
xor
int3
pushf
loopne
or
std
fadds
pop
pop
adc
dec
xorl
push
popa
scas
lods
mov
shlb
out
and
test
aaa
push
ja
repz
adc
mov
inc
nop
or
loope
fsubrs
sti
add
or
insb
pop
or
push
push
and
jno
sbb
addr16
lea
jle
pop
mov
push
and
sub
push
dec
test
jb
movsl
out
add
adc
push
aad
imul
xorb
jnp
in
jo
xchg
xchg
sbb
push
sbb
sub
mov
mov
dec
dec
mov
xchg
mov
cmp
pop
dec
push
sbb
ljmp
push
adc
pop
and
out
and
xlat
js
inc
cmp
jge
cmc
sahf
mov
scas
mov
repz
mov
pop
icebp
add
mov
in
hlt
sarl
adc
cmp
inc
cwtl
loope
add
inc
subl
adc
aaa
jbe
cld
jl
test
jl
cmpsb
les
rcrl
add
icebp
push
mov
loop
stc
dec
push
mov
mov
jns
mov
incl
sbb
mov
lds
arpl
cltd
xchg
xor
mov
xor
stc
enter
and
jmp
cmc
cmp
fmul
adc
fisubs
in
xchg
gs
pushf
push
movsl
mov
pop
inc
test
xor
xchg
sbb
sti
and
arpl
lahf
adc
add
mov
insl
insb
arpl
dec
aam
xchg
mov
mov
divl
mov
cmp
mov
arpl
cs
sub
imul
ret
xlat
push
enter
test
addr16
rorl
jns
insl
sbb
aam
jnp
lods
pop
sub
inc
shrb
xchg
shlb
stos
xchg
sahf
lock
popa
xor
sbb
xchg
jp
pop
cs
jp
popa
pop
lcall
mov
int3
leave
cmp
out
in
jbe
in
add
mov
cwtl
inc
push
xor
add
js
xchg
pop
push
cmc
pop
push
sbb
jl
rorb
jbe
lahf
dec
repz
mov
mov
fdivp
pop
mov
push
aas
int3
adc
movb
sbb
or
out
cltd
adc
outsb
out
clc
jae
ljmp
jae
inc
xor
aad
les
pushf
jge
cmpsl
pop
cwtl
mov
ds
add
and
jo
push
pop
pop
cwtl
and
add
stos
push
mov
jne
cmc
iret
push
dec
adc
adc
lds
icebp
push
stos
out
pop
div
data16
shlb
lcall
aaa
rep
pop
fcomip
xlat
sub
sub
pop
ja
push
fs
adc
loopne
xchg
lcall
xor
pusha
ja
pusha
repnz
push
and
add
popf
test
sbb
jg
stos
out
lret
push
push
out
int
adc
nop
loope
and
add
mov
aam
imul
lds
loope
sub
inc
cmpsl
lds
pop
jp
repz
loope
loopne
mov
mov
dec
fadd
ss
mov
cmpsb
pop
xchg
jg
stos
loope
stos
cmp
pop
jae
loope
mov
into
subb
push
enter
hlt
xor
pushf
fsts
cwtl
sbb
cld
inc
hlt
jnp
mov
xchg
pop
and
out
push
stc
xchg
push
lock
jo
pop
jp
cmp
test
xor
or
mov
popa
andl
mov
movsl
push
inc
mov
imul
pop
add
andb
adc
jae
test
int
lret
loope
arpl
lods
dec
sbb
mov
pop
jecxz
cmp
cwtl
shrl
cmp
bound
cmpsb
shr
lahf
and
push
pop
jg
sarl
jae
cmp
leave
add
ljmp
int
daa
xor
sub
fiaddl
aas
sub
shrl
xchg
adc
xor
outsb
outsb
xchg
in
xorl
cmp
xor
test
je
xor
push
bound
dec
aas
mov
fldenv
ja
test
rclb
mov
pop
ljmp
arpl
scas
aas
cmpsl
fwait
add
inc
cli
inc
dec
sub
test
call
ds
pop
test
push
sbb
pop
xchg
shl
jbe
push
sbb
inc
push
mov
xor
mov
adc
push
lea
sub
loopne
inc
pop
cmp
cmpsl
pop
push
xor
push
mov
rolb
jae
rcrl
pushf
sbb
lock
push
mov
jno
data16
cmp
and
xor
cli
xchg
or
sarl
fisttpll
push
ja
lods
cwtl
das
jae
xchg
mov
push
jb
inc
mov
cld
mov
jmp
lods
xchg
push
push
cmpsb
or
pop
loope
rcrl
scas
stc
push
mov
adc
pop
mov
or
lret
adc
xor
mov
mov
hlt
or
fmuls
jno
loope
jae
ds
mov
sub
out
pop
sti
lret
mov
std
dec
imul
xorb
and
mov
aas
mov
adc
jnp
test
iret
shll
cmp
int
jb
ret
imul
or
lods
sub
ljmp
rorb
or
ror
inc
xchg
jge
lods
in
jne
test
mov
mov
mov
pop
add
push
and
push
fcmove
or
cmp
pop
jbe
sub
fstl
sub
out
int3
or
jns
icebp
sub
or
pusha
cmp
repz
in
add
mov
or
inc
lret
aas
ret
bound
stos
aam
shlb
shrl
jecxz
lods
fidivrl
jno
and
pop
leave
outsb
test
mov
jp
jne
sub
pop
lcall
and
loope
sbb
and
mov
inc
stc
shll
pop
pusha
push
arpl
sbb
sbb
loop
inc
add
mov
pop
push
movsl
jg
iret
sbb
inc
aas
ret
or
xchg
jg
aam
or
dec
sbb
cmp
fldz
mov
orl
js
sahf
ss
in
or
pop
push
fwait
mov
scas
in
dec
incb
andb
divb
mov
fimuls
add
sub
and
jb
sbb
fwait
je
popa
jno
jmp
mov
mov
in
out
xchg
push
int
sbb
rcl
movaps
jnp
stc
mov
into
mov
sub
pop
mov
sbb
sbb
jge
outsb
inc
mov
cld
or
mov
push
repnz
repz
inc
adc
push
xchg
mov
adc
loope
mov
into
pop
sub
sahf
sbb
dec
dec
dec
mov
fisttpll
cmp
pop
add
clc
or
dec
aas
cmp
ds
std
insl
loope
js
out
scas
mov
les
mov
pop
jle
sub
sbb
mov
jbe
lods
addr16
fistpll
and
adc
pop
mov
and
pop
mov
push
hlt
sar
out
push
and
xchg
cwtl
fdivrl
arpl
mov
outsb
xor
mov
bound
sub
xor
fcmovnu
cmp
mov
sub
push
aam
je
imul
sbb
aad
fisttpll
dec
notb
ret
in
inc
test
inc
popf
adc
jmp
loop
adc
mov
pop
push
inc
scas
xchg
sub
jmp
subl
jno
xor
cli
mov
out
jno
xchg
sbb
lcall
popw
iret
dec
or
xor
push
test
cmp
jg
mov
pop
cmp
popa
cmp
xor
push
dec
pusha
inc
push
imul
test
jb
mov
imul
cld
pusha
jne
enter
and
lahf
pop
mov
popa
out
leave
pop
scas
sbbl
out
imul
loope
mov
pop
inc
js
fldt
push
jle
adc
mov
dec
cmpsw
popf
jnp
call
insl
xchg
mov
out
mov
lock
mov
out
nop
and
pop
mov
into
sbb
adcl
das
std
sub
rolb
imulb
cmp
sub
mov
nop
repnz
inc
push
loop
push
ds
push
fildl
jo
cmc
dec
jo
adc
sbb
pop
lcall
rorb
arpl
pop
fwait
and
lret
dec
cmpsb
lds
les
test
sti
dec
cmp
push
lods
adc
aaa
aad
add
adcb
in
add
cmp
xchg
shlb
ret
push
jb
jmp
nop
sbb
shlb
mov
add
push
clc
sub
pop
mov
lret
dec
iret
je
gs
xor
gs
inc
arpl
int
mov
fwait
mov
push
pop
push
lea
negb
lods
cli
pop
arpl
jnp
inc
sbbl
mov
jae
jecxz
mov
xor
popa
xchg
and
mov
and
ss
sti
push
lea
add
mov
aaa
mov
mov
pop
mov
mov
sbb
xor
or
dec
xchg
pop
test
ss
push
repz
or
cli
adc
pop
test
cwtl
dec
dec
sub
pop
xor
lret
jecxz
loopne
dec
cmp
dec
jmp
pop
dec
popa
jg
push
adc
fwait
sub
jle
xor
cmc
hlt
fists
mov
nop
jb
dec
mov
in
cld
je
mov
push
pop
xchg
stos
fcoms
pop
int3
ljmp
sbb
arpl
add
data16
pop
mov
scas
repz
cld
scas
sbb
xor
adc
xor
sub
gs
insl
out
xchg
aad
push
ror
xchg
sarl
mov
push
push
jae
sub
enter
lahf
push
cmpl
jle
jnp
sbb
mov
xor
push
pop
dec
cli
cmpsb
scas
aam
fwait
cs
icebp
xor
pop
sahf
out
pushf
gs
in
add
cltd
mov
sub
mov
fcoml
mov
and
jae
test
mov
shl
adcb
daa
mov
jp
loope
sub
inc
push
push
pusha
jge
xor
rorb
dec
pop
ss
mov
nop
lahf
pop
sub
cmpsl
cmpsl
add
inc
fmull
rorb
in
xor
push
aad
cmc
sub
adc
call
cwtl
sub
mov
mov
push
loope
cwtl
inc
mov
out
mov
mov
jp
cli
imul
xchg
es
fsubr
sti
jns,pt
xlat
mov
sbb
aam
mov
add
imul
jbe
inc
cli
mov
dec
mov
or
xchg
or
fwait
fcmove
push
xchg
pop
pusha
adc
nop
dec
loope
rcrl
cmp
outsb
cmc
test
or
mov
xor
popa
push
lret
lahf
dec
push
push
add
nop
int3
int3
add
fwait
cltd
int
pop
test
rorb
jnp
xchg
pop
fcompl
mov
mov
xorl
adc
das
mov
gs
in
cmp
fisubs
sub
add
mov
xchg
sub
hlt
fsubrp
xchg
lods
push
int3
clc
aaa
mov
in
loopne
es
daa
sub
aad
add
push
aas
push
aad
pop
loop
mov
adc
mov
popf
cmp
repz
icebp
mov
iret
inc
fs
mov
enter
das
mov
cld
pop
rolb
cli
add
sbb
imul
cmpsl
dec
mov
ljmp
mov
test
xchg
insb
adc
mov
loopne
mov
inc
push
movsl
sbb
aas
faddl
and
mov
insl
xchg
stos
mov
das
ret
jne
repnz
adc
cmp
das
and
adc
lods
jecxz
jecxz
jmp
adc
pop
nop
aas
rorb
adc
jae
push
xor
test
cwtl
jge
sbbw
xor
pop
push
neg
cmp
ficoml
fsubrs
shlb
rolb
jbe
loope
sbb
fistl
cwtl
pop
sbb
call
push
inc
pop
test
dec
mov
sbb
cmp
mov
lods
ficomps
jl
xor
mov
cld
js
jl
divl
pop
daa
adc
mov
push
dec
aaa
xchg
bound
push
aad
mov
pop
lods
mov
es
mov
and
in
pop
fs
jle
inc
mov
fwait
sbb
add
aad
push
lret
testl
mov
popa
adc
popf
aad
aas
inc
mov
pusha
mov
xchg
pop
pop
cmpsb
pop
adc
push
bound
shrb
cmp
hlt
add
sti
insb
bound
stos
icebp
and
sbb
loopne
test
aaa
xchg
divb
in
add
pop
xchg
test
rcll
out
push
dec
add
pop
fsubrl
or
mov
rcll
mov
sub
pop
sbb
adcl
cmpsl
sbbl
sub
add
lods
mov
fmuls
pop
lods
mov
scas
popa
push
and
das
dec
push
adc
fdivl
sub
ror
pop
mov
mov
mov
cmp
sahf
sbb
cmp
cltd
sahf
dec
or
repnz
daa
cmp
and
mov
dec
cmpsl
mov
dec
arpl
aas
mov
mov
cmp
mov
enter
test
daa
out
fcoml
mov
xchg
xchg
cmc
jle
pushf
mov
shll
aad
pushf
push
xchg
enter
mov
xchg
ret
scas
mov
popa
mov
aam
jmp
dec
push
call
cmp
xchg
mul
sahf
mov
push
jne
das
cmp
scas
xchg
mov
sahf
iret
adc
mull
clc
lcall
lret
in
imul
mov
cmpsb
adc
imul
addr16
jp
pop
out
cmp
or
or
or
cwtl
into
mov
adc
pop
out
xchg
dec
std
mov
call
pop
adc
stos
rclb
adc
cmpsl
add
int
pop
jle
jmp
sti
in
xchg
and
in
cmp
pop
inc
mov
cwtl
adc
cmp
sbb
push
push
outsl
add
cmp
ss
add
dec
shl
cmp
dec
divb
mov
lods
pop
jmp
cli
jle
lea
xchg
cld
imull
xor
xchg
hlt
aaa
sbb
push
aam
in
lahf
mov
bound
inc
cld
cs
out
mov
cmpsl
js
aaa
in
aam
xchg
sbb
cmpsl
mov
enter
sbb
dec
and
add
notb
sbbb
jmp
dec
sub
jmp
dec
mov
jae
fimull
adc
cmc
sahf
push
jno
js
mov
or
ja
sahf
popf
adc
cmp
cmp
sar
movsb
leave
ljmp
cmp
fnstcw
mov
cld
sub
jbe
jns
movsb
aad
in
or
xchg
mov
movsb
sub
ret
imul
lods
cmpsl
mov
lods
sub
add
test
pop
test
push
stos
mov
mov
not
ljmp
in
insb
jecxz
xchg
cmp
pop
addr16
cmp
or
inc
lcall
jb
push
dec
leave
mov
sub
hlt
popa
pop
mov
test
les
pop
lods
cmp
sbb
xchg
hlt
in
js,pt
insb
dec
iret
xor
or
pop
and
call
jmp
jno
pop
add
pop
loope
ud1
movsb
lret
movsb
push
dec
push
or
push
loope
subl
add
mov
fs
mov
jmp
adc
ret
jae
cmc
mov
call
mov
loopne
leave
jae
adc
stos
ja
lahf
sbb
mov
mov
mov
sbb
push
cmp
dec
fs
add
andb
push
add
aas
dec
rorl
mov
shlb
sbb
aas
imul
outsb
shl
fdivrs
mov
pop
push
jno
loope
mov
xchg
movsb
sbb
jmp
push
cmc
pop
xchg
bound
xor
imull
or
sub
clc
rorb
fsubs
scas
adc
data16
and
push
ret
sub
cmp
pop
clc
adc
neg
jp
insb
shr
imul
icebp
mov
fs
pop
mov
hlt
and
mov
jnp
pop
negb
mov
inc
stc
push
push
jp
xchg
inc
push
cmpsb
ds
xchg
mov
mov
add
lods
push
idiv
push
sbb
loopne
lea
xor
xor
jo
js
inc
cltd
adc
inc
mov
in
sbb
push
mov
popf
push
cmp
dec
inc
data16
sbb
add
inc
adc
cmp
cs
out
cmpsl
lock
xchg
stos
mov
mov
sub
pop
push
js
push
push
add
in
lods
sbb
jno
mov
or
sahf
icebp
mov
mov
or
int3
out
jmp
jmp
lahf
and
fmul
add
jne
movb
or
dec
inc
mov
daa
clts
push
mov
and
pop
mov
mov
test
mov
mov
push
sub
and
jb
fwait
mov
fnstsw
jno
add
movl
push
pop
add
or
push
mov
lds
arpl
cmp
test
out
mov
xchg
sub
rclb
mov
sub
xor
xor
pop
add
mov
and
shll
adc
push
pop
out
jbe
sub
xchg
mov
cs
jnp
pop
adc
xor
push
mov
jb
cli
in
daa
xchg
and
push
add
daa
jp
adc
xor
jb
ljmp
adc
orb
stc
add
push
out
fisubl
xlat
jp
jmp
sbb
insl
das
xchg
in
push
xchg
std
xchg
adc
loopne
pop
cmp
mov
in
push
addb
pop
push
mov
in
adc
xor
dec
loope
fcomps
sbb
mov
pushw
dec
repz
fs
or
dec
pop
cmc
outsl
pop
rcl
push
mov
popa
lahf
lcall
push
mov
pop
fbstp
popa
push
jo
cs
jb
mov
mov
adc
mov
add
dec
repnz
movsb
lret
in
sub
dec
mov
xlat
js
ljmp
add
or
idivl
insl
xor
inc
jecxz
sbb
mov
rcll
adc
jmp
pushf
insb
nop
mov
inc
cmp
push
cmp
sbb
in
and
xor
into
cmp
push
roll
cld
rorl
push
sbb
fisubrl
fnsave
je
imul
adc
out
ret
jb
mov
jns
sbbb
push
add
outsl
sbb
and
into
xchg
inc
mov
or
pop
lret
enter
sahf
test
cmc
daa
addr16
mov
pop
mov
mov
mov
cmp
xchg
inc
cmp
pop
iret
pushf
sub
pop
inc
pop
xor
sbb
xchg
inc
mov
test
arpl
aas
subl
fcompp
mov
std
fs
addr16
xor
cmpsb
nop
out
int3
add
outsb
push
adc
sub
fsubrl
lcall
sbb
cs
shl
mov
xchg
pop
arpl
stos
enter
sub
imul
sbb
mov
clc
and
mov
jb
sbb
mov
mov
ljmp
scas
or
call
rcll
repz
inc
xchg
mov
lcall
shll
js
push
xlat
pop
mov
and
lods
pop
lea
fnstcw
pop
mov
les
mov
adc
pop
xor
scas
pop
lods
pop
imul
jbe
jnp
jle,pn
cmp
ljmp
es
dec
inc
push
adcl
jg
ss
dec
aas
pop
lret
jge
mov
ja
mov
cmp
mov
cmp
inc
lds
inc
arpl
popw
mov
or
sbb
push
fdivrl
stos
push
jge
subl
hlt
xor
fwait
test
jmp
outsl
xchg
imul
frndint
shrl
add
into
mov
fadds
jnp
mov
mov
outsl
inc
pmaddwd
push
dec
fs
mov
insl
scas
mov
lret
cli
and
scas
sub
sub
pop
je
out
push
stc
aam
cwtl
mov
add
push
scas
mov
sarl
repnz
icebp
cmpsb
and
repz
stos
ret
lods
sbb
dec
loope
icebp
or
jmp
mov
sub
add
sbb
sub
xchg
fistps
inc
in
mov
cmp
xchg
leave
aam
adc
cmp
dec
pop
daa
fwait
cmpsb
jge
adc
incb
sub
lcall
fnsetpm(287
adc
jne
movsl
xchg
aam
lock
jg
add
std
jecxz
insl
ds
iret
insb
cmp
aad
xor
imul
inc
mov
fstp
mov
pop
xorl
mov
fxam
cmpsb
test
add
pop
mov
sub
cs
mov
mov
ja
push
lods
mov
xchg
add
ret
jl
shll
push
daa
subl
cs
xor
xchg
bound
insb
pop
mov
rcl
mov
mov
mov
push
iret
les
jo
add
jge
cmp
jbe
xor
xchg
dec
adc
imul
mov
clc
jae
fdivrs
stc
incb
dec
add
incb
or
mul
test
not
xor
repz
adc
ret
pop
cmc
test
mov
sbb
sbb
mov
ret
inc
pop
lods
pop
pop
pop
cmp
or
sbb
stos
jno
lret
or
ss
and
jl
ss
jecxz
dec
rcrl
mov
adc
cmp
test
push
xchg
test
fs
inc
cmp
inc
das
outsb
cs
push
pop
cmp
test
lds
sahf
test
int
ljmp
shll
fucom
ffreep
mov
sbb
mov
je
pop
cmp
out
cmp
lods
in
jl
aam
push
aad
pop
inc
mov
test
adc
mov
gs
cwtl
movl
fdivl
inc
cmpl
outsb
insl
dec
xlat
es
fisttps
cmp
fsubrs
dec
cmp
mov
andl
adc
pop
roll
xor
mov
xlat
mov
cmp
xchg
push
cli
lret
out
mov
jb
ret
bound
lods
or
and
ror
pop
fisubrl
dec
or
pop
das
jg
jmp
or
mov
mov
push
in
dec
ret
cs
and
inc
mov
or
jge
xor
loop
jp
inc
xor
mov
mov
mov
inc
data16
or
in
decb
cmp
pusha
clc
daa
sub
bound
sbb
mov
adc
dec
mov
bound
sbb
or
xchg
inc
fmull
test
imul
inc
lret
pusha
lcall
icebp
out
movb
xchg
xchg
mov
or
pop
cld
or
iret
sub
stos
icebp
shl
into
xlat
aas
lds
cmp
dec
mov
add
sbb
in
test
lea
xor
or
jecxz
cmpsl
ret
cmp
adc
mov
std
pop
mov
cmpsb
outsl
loope
iret
fisttps
mov
lcall
mov
dec
cmovbe
xchg
mov
std
test
gs
arpl
dec
sub
aad
mov
in
dec
lea
dec
out
cli
bound
mov
dec
sbb
sahf
cwtl
pushl
push
in
sbb
add
orl
in
pop
sub
fidivs
fdivrp
fstps
lea
movsb
mov
xlat
xchg
daa
pop
lods
adcl
xchg
push
push
and
sub
or
jne
lods
outsl
sub
fcmovnb
add
mov
imul
lods
mov
sub
pusha
push
imul
imul
movlps
mov
mov
dec
sub
sti
js
xorl
ljmp
and
ljmp
test
cmp
gs
jno
int
insb
inc
sahf
xchg
in
sub
push
xchg
outsb
mov
or
lahf
pop
or
aaa
xor
adc
clc
pop
adc
mov
pop
pop
lds
stc
loopne
or
jmp
cmc
popf
enter
pop
mov
jl
subb
mov
add
mov
mov
adc
outsl
or
push
test
dec
push
outsb
xlat
push
lods
cmp
lds
int3
rcrb
test
add
jb
cs
jbe
cmp
cmpsl
adc
flds
mov
fld
hlt
dec
adc
in
push
jecxz
repz
out
or
lret
push
jne
pop
push
jge
ret
rep
cmpsl
jge
shll
sbb
mov
and
es
mov
dec
mov
mov
repnz
scas
fwait
inc
jnp
inc
jl
scas
mov
xchg
insl
sub
pop
icebp
lahf
loopne
aaa
sbb
gs
outsl
cmp
jns
mov
jae
push
pop
orb
or
int3
adc
and
stos
sub
scas
push
mov
dec
dec
test
adc
mov
pop
popa
mov
loopne
lahf
adc
je
sbb
jns
cltd
enter
add
stc
xor
or
xlat
and
icebp
fistpl
test
push
sub
dec
enter
cmp
jp
jecxz
mov
lock
call
pop
fwait
inc
cmp
ss
dec
fstl
pop
lea
lods
pop
test
out
mov
fnsave
mov
xchg
out
adc
inc
sti
int3
js
pop
mov
push
inc
movsb
mov
xor
leave
mov
adc
xor
out
mov
add
mov
cmp
fucomi
mov
mov
mov
sub
icebp
push
out
adc
add
jo
mov
xor
push
cld
cmc
dec
xlat
cmp
in
test
in
outsb
andl
push
jmp
jno
lea
inc
sahf
mov
cs
pop
xchg
and
mov
subb
popf
inc
stc
out
jl
je
in
in
pop
pushf
add
mov
push
and
imul
dec
outsl
les
in
cld
adc
insl
push
fsubrs
imul
push
mov
rolb
sbb
xchg
ret
movntq
jp
inc
movsb
imul
outsl
xchg
inc
outsl
cwtl
sbb
outsb
clc
outsb
mov
bnd
mov
push
idivb
xor
idivb
neg
rclb
repz
cmp
jle
sbb
imul
mov
jge
jnp
xchg
and
mov
fidivs
inc
arpl
aad
sub
orl
mov
or
divb
adc
and
push
aaa
fidivs
shll
push
subl
icebp
sahf
jb
testl
jg
lcall
pop
in
adc
iret
hlt
ds
mov
jp
lcall
arpl
movsb
inc
jo
xchg
nop
xchg
jle
rorl
lret
lds
mov
jb
pop
jno
mov
aas
xor
ret
mov
adc
jnp
cmpl
mov
inc
lds
lea
pop
pop
sub
fsub
stos
sbb
push
and
std
lock
adcl
movsb
add
inc
nop
fs
mov
pop
mov
add
leave
mov
hlt
dec
stos
fildl
cmp
mov
pop
cmp
insb
jg
push
nop
faddl
sbbb
xchg
pop
sarl
push
cmpb
daa
scas
jl
imul
push
cs
outsl
rcrb
dec
mov
sti
push
lods
add
cs
outsb
pop
dec
xor
or
jo
fstps
iret
adc
repz
dec
push
adc
xor
test
lock
inc
adc
and
xor
loopne
and
insl
sub
xchg
bound
cli
push
inc
xchg
dec
push
xchg
fcoml
test
ret
lods
repz
clc
adc
into
and
xor
sti
test
pop
into
mulb
rol
ja
mov
in
cmp
clc
inc
dec
cmp
ret
push
or
xlat
pop
jge
adc
arpl
jmp
xchg
mov
sub
mov
xchg
xor
push
lret
addr16
es
push
push
lock
fsubs
cmp
jl
in
pushl
xchg
sbb
test
outsb
call
fwait
cmp
push
sbb
fmull
dec
push
inc
xchg
lret
pushf
pop
mov
andb
inc
aas
pushf
cmp
xchg
mov
xor
es
cmc
or
cmpsb
pop
mov
insb
pop
mov
movsl
dec
sbb
call
das
nop
fidivrs
dec
aaa
jb
xor
cmp
cmp
sub
mov
jge
jne
mov
out
or
daa
lea
pop
movsl
ds
rcrb
pop
xchg
loop
lock
cmpsb
xchg
mov
push
fdivr
dec
stc
or
jo
ficoms
inc
add
aam
inc
mov
lea
xchg
adc
xchg
sahf
xchg
jnp
loope
xchg
test
shl
lods
lret
fisttps
call
cs
pop
stc
dec
push
sbb
jecxz
dec
jbe
push
aad
icebp
cmp
in
push
mov
mov
dec
mov
in
in
pop
stos
shrl
mov
lods
out
cmpl
hlt
leave
jge
gs
sub
push
rcr
data16
sub
sbbb
jne
lcall
fiaddl
cmc
add
xchg
in
popa
cmp
orb
out
jle
mov
imul
mov
adc
xor
dec
sub
je
xchg
cltd
dec
pop
lret
inc
out
xchg
fdiv
mov
jns
and
scas
in
xchg
cmp
push
inc
mov
or
enter
inc
cli
stos
sub
jb
adc
dec
orl
push
hlt
ja
and
xor
adc
scas
mov
fisttpll
fisttpl
mov
or
fdivs
mov
push
push
or
int
inc
and
or
mov
cmp
filds
ret
sub
out
and
mov
scas
pop
sbb
and
aad
test
adc
pushf
jnp
iret
pop
mov
stos
push
mov
fistpl
jae
shr
jge
loopne
inc
lea
mov
sub
ljmp
fdivl
mov
gs
pop
icebp
mov
add
sbb
push
mov
fdivs
aaa
lcall
iretw
icebp
out
adc
xchg
in
stc
and
push
xchg
out
stc
sub
dec
or
testl
mov
gs
push
and
ret
xor
cltd
data16
test
inc
sub
adc
push
data16
push
rcll
xchg
shrb
cmp
xchg
mov
xchg
mov
xchg
cmc
mov
cmpsl
in
test
popf
xchg
leave
std
push
movsb
sub
out
push
stos
aad
test
out
push
divb
sahf
push
stc
icebp
mov
aas
xor
inc
pop
push
add
inc
xor
insb
jne
sub
pop
jbe
mov
mov
add
dec
sub
loop
pop
push
ficompl
lret
xor
push
push
xchg
mov
orl
aad
xchg
lods
mov
ljmp
frstor
hlt
and
and
xor
xchg
jne
adc
cmp
pushf
jno
xchg
xchg
bound
cvtdq2ps
sbb
dec
mov
dec
pop
and
or
sbb
pop
lret
stos
lods
fcoml
and
mov
cmc
rclb
xchg
mov
push
jbe
mov
xor
xchg
std
std
xor
mov
dec
mov
dec
add
mov
mov
jecxz
mov
aad
or
test
or
out
sub
pop
mov
and
push
mov
fwait
sub
push
push
sub
nop
jmp
xor
sbb
jne
out
out
in
out
and
xor
xchg
fldt
xchg
sub
xor
xor
into
cli
adc
arpl
enter
faddp
scas
add
adc
test
pop
fldenv
jp
jecxz
adc
push
pop
xor
cltd
test
ja
jae
imulb
fdivrs
or
sub
sub
cwtl
jno
inc
scas
jo
push
xchg
xor
lret
xor
les
fmull
inc
jge
stos
add
mov
mov
adc
pop
fldl
aaa
popf
sbb
dec
jne
leave
sub
out
ja
out
cmp
scas
int
cwtl
inc
js
rcll
sub
enter
pop
cmpb
jne
mov
mov
pop
add
push
dec
movsb
mov
and
ss
aaa
or
add
and
popf
cs
mov
pushf
xchg
jbe
mov
test
cmc
fldt
adc
xchg
lret
pop
dec
scas
shrb
arpl
mov
in
shll
dec
icebp
in
dec
roll
and
js
push
clc
xchg
pop
out
mov
sub
sarb
xor
or
dec
fldcw
fcmovbe
test
loop
insl
jg
or
cltd
into
repnz
mov
mov
inc
outsl
mov
cmc
or
jne
test
pop
daa
jg
out
jnp
bswap
sub
dec
push
dec
jb
jmp
cld
and
sub
sub
cwtl
or
or
mov
enter
cmp
cmpl
jb
lahf
mov
push
bound
or
push
out
cmp
jle
addl
fwait
push
scas
jns
add
fsubp
int3
lcall
cs
sbb
aad
lea
ficompl
faddl
enter
testl
mov
add
repz
mov
xchg
call
lock
sub
test
mov
xchg
test
shll
mov
out
xchg
aaa
fadds
mov
inc
dec
inc
scas
and
shrl
rcr
pop
sbbb
cmpb
sub
repnz
inc
out
push
xchg
ss
push
icebp
out
shrb
and
push
fcmovu
mov
xchg
sub
movsb
loopne
inc
cld
jo
cmp
push
std
xchg
test
test
cmp
sbb
xchg
sahf
add
ja
vpandn
fsts
push
jnp
mov
cmpsl
fcmovbe
popa
pop
and
dec
pusha
add
bound
pop
jbe
and
fistpl
movsl
cmpsl
aad
push
sahf
lret
ret
leave
jl
fdivrs
xlat
lods
xchg
andl
xchg
dec
xchg
push
jle
jmp
movsl
dec
and
push
idivb
mov
bnd
sbb
pop
cmpsb
sahf
loopne
cmp
test
sub
mov
aam
dec
mov
cmp
add
push
xchg
mov
ror
sti
lods
lods
xchg
mov
int
imul
int3
je
and
ret
cmp
sub
cld
jge
jns
xchg
and
cs
fimuls
push
outsb
fstpl
ficomps
mov
push
mov
xlat
mov
leave
add
cmp
es
xlat
mov
pop
aas
in
mov
gs
xor
jl
aaa
lods
jo
inc
xlat
aas
push
or
or
loope
sub
mov
add
xchg
iret
dec
iret
mov
xchg
lret
dec
sbb
out
sbb
dec
inc
mov
push
hlt
lret
mov
imul
and
pop
push
jp
sub
mov
arpl
arpl
push
cmp
lcall
and
popa
fcoms
cmp
rcrl
mov
push
dec
pop
mov
cmp
dec
sahf
movsl
loope
repnz
sarb
test
push
inc
insb
push
mov
mov
xchg
mov
testb
push
mov
jo
push
int3
jg
lahf
fcom
and
mov
and
mov
push
aaa
jnp
sahf
pusha
pop
out
adcl
or
or
in
arpl
or
sbb
in
jecxz,pt
xchg
push
in
loopne
adc
lods
xor
sub
fistpl
jmp
sbb
or
faddl
mov
mov
movsl
jecxz
xchg
jo
and
pop
pusha
mov
xor
or
subl
mov
aaa
xchg
aaa
out
cmp
push
xchg
pop
sub
lret
jne
sti
mov
das
add
and
and
aaa
icebp
ss
es
dec
enter
rcrl
in
int3
mov
sbb
and
std
adc
jo
mov
mov
jae
mov
sbb
lock
xor
xlat
mov
mov
je
push
lods
cmpb
add
stc
push
jmp
cwtl
pop
es
cli
jb
mov
scas
push
data16
clc
mov
and
fsub
daa
mov
push
fcmovbe
dec
faddl
loope
cwtl
add
subb
dec
out
aad
aad
cmp
xchg
sub
mov
mov
std
fcomip
sbbl
cmp
stc
push
ljmp
pop
push
xchg
out
mov
out
adc
cmc
mov
mov
imull
rorb
pushf
test
sub
scas
push
add
vpunpckhwd
int3
dec
repz
inc
cmpsb
mov
or
sahf
jno
jle
in
mull
mov
mov
insb
popa
mov
cmp
fucomip
lahf
cwtl
mov
mov
push
xlat
ds
insb
pop
mov
push
or
ss
mov
movsb
and
xchg
mov
mov
adc
or
notl
jecxz
sbb
jnp
mov
das
mov
cmp
cmovp
in
ret
iret
ja
push
mov
inc
filds
nop
insl
popa
aam
jmp
loop
lret
in
lea
pop
pushw
xchg
les
rcl
shl
lret
aaa
mov
mov
sub
jecxz
add
sarb
test
out
out
pop
test
imul
test
cmc
xchg
repz
test
test
push
adc
jl
sub
cmp
xchg
insb
jo
mull
add
aam
pop
jbe
in
ret
ret
jecxz
fs
in
mov
mov
testb
dec
mov
or
pop
mov
fstpt
inc
push
xchg
cmp
cmp
pop
movsb
pop
xchg
and
jp
push
aam
jmp
push
sub
sahf
sub
cmp
mov
das
fstl
bound
and
rcrb
scas
stos
push
inc
lea
cmp
sub
dec
cmp
aas
cmpsl
mov
adc
enter
sub
leave
sbb
icebp
lods
hlt
dec
mov
test
dec
rcll
inc
lods
insb
sub
icebp
push
scas
rorb
inc
cmp
pop
adcb
stc
je
pop
out
js
sti
inc
adc
jbe
mov
xor
mov
in
pop
mov
mov
test
xor
bound
lds
adc
and
cmp
cmpsb
push
jg
push
jge
cmp
loopne
jle
bound
mov
mov
dec
sbb
daa
sbb
or
scas
jo
add
mov
ss
jo
dec
xchg
and
mov
sar
bound
xlat
jecxz
jl
xlat
aas
xchg
js
out
xchg
cmpsb
cmpsb
push
pop
xchg
pop
add
hlt
pop
scas
pop
sbb
inc
jg
mov
lret
sub
mov
pop
sbb
adc
jo
jle
pop
fcmovnbe
mov
call
dec
sbb
dec
test
sbb
fsubl
sbb
mov
jge
jg
xchg
mov
or
movsb
loop
push
push
fdivr
scas
mov
cli
xor
sahf
loop
lock
add
dec
cmp
lods
addr16
and
dec
jmp
dec
mov
sti
call
rorl
adc
xor
jns
xor
add
mov
cmp
mov
inc
pop
inc
in
push
adc
or
push
jle
mov
inc
out
jp
repz
sbb
fildll
dec
lock
test
xchg
lea
std
pop
sbb
inc
jbe
int
imul
iret
fiaddl
dec
inc
and
xchg
ljmp
mov
push
dec
xchg
daa
das
into
mov
adc
hlt
pop
imul
fstps
mov
fcmove
cs
pop
push
push
and
mov
sbb
stc
insb
xchg
dec
cmp
jecxz
xlat
popf
push
push
into
aas
movsl
and
jae
push
nop
jae
loop
cmp
add
mov
call
pop
cli
push
xchg
jge
pmovmskb
jp
sub
aas
hlt
pop
pop
push
pop
repnz
xor
adc
mov
mov
inc
sbbb
mov
faddl
inc
cmc
fsts
movsb
mov
pop
imul
and
dec
paddw
adc
mov
lods
sub
sub
shll
aam
xor
sbb
insl
ret
fcmovbe
lods
out
mov
movsb
push
insl
loopne
jns
dec
outsb
rorl
adcl
fcmove
mov
scas
fldcw
mov
xor
into
mov
mov
dec
adc
mov
movsl
imul
add
inc
js
and
or
sbb
mov
mov
popa
repnz
jl
pop
in
and
xor
leave
sub
sbb
jmp
clc
les
cmpsb
push
out
pop
and
je
pusha
lret
inc
dec
sbb
or
clc
hlt
xor
cmpsb
xlat
stos
push
loop
shrb
sub
sub
fbstp
inc
ss
xor
imul
jb
test
pop
dec
add
loop
leave
or
xlat
xchg
inc
arpl
inc
es
fimuls
xorb
mov
jg
pop
lcall
mov
std
mov
movsl
add
stc
dec
in
push
add
cmpsb
mov
loop
xor
mov
cmc
xchg
movsb
pushf
in
or
popf
inc
push
sbb
fadds
mov
mov
imul
aaa
push
inc
call
sbb
mov
sub
lahf
sbb
or
aas
or
jb
jg
push
and
dec
mov
push
rorb
pop
insb
xchg
cmp
pop
aam
xor
fidivrl
jb
push
jp
adc
out
or
mov
rol
adc
sub
sahf
jl
jmp
test
mov
cmpl
dec
fyl2xp1
jno
or
jecxz
movsl
aaa
cmp
inc
aas
adc
stos
loope
insb
pop
lods
mov
out
incl
aad
jle
stc
fnstcw
sti
mov
lcall
cli
xor
add
mov
mov
xor
pushf
xchg
mov
lcall
inc
mov
enter
pusha
cmp
pop
xor
dec
inc
nop
inc
inc
mov
xor
add
xor
lret
mov
mov
lock
std
bound
pop
xor
push
mov
sbb
push
cmp
inc
leave
pop
out
mov
das
arpl
hlt
push
repnz
mov
iret
faddl
push
dec
add
orl
xor
inc
mov
inc
cmpl
or
stos
sahf
inc
mov
aaa
iret
cmp
lods
dec
cmc
fcomps
add
mov
cli
fwait
mov
fwait
loopne
out
mov
out
pusha
cmpb
jl
sbb
mov
inc
push
inc
dec
cltd
jecxz
mov
out
scas
xchg
jecxz
mov
and
icebp
repnz
sub
pop
fadds
jecxz
or
stc
sahf
ljmp
cli
fs
push
jbe
scas
lret
mov
inc
pop
mov
cmpsb
push
adc
lahf
fsubrl
test
jp
mov
ficomps
mov
out
aas
jne
in
ljmp
fs
sarb
stos
mov
fprem
lahf
jge
dec
jl
enter
pusha
inc
popf
fadds
in
insb
les
aaa
jne
and
push
ret
stos
jne
lcall
imul
fbld
sbb
lahf
mov
mov
clc
js
adc
or
js
jmp
test
into
add
arpl
or
addr16
and
mov
imul
or
js
dec
xchg
rorl
or
je
sbb
outsb
pushf
xlat
xchg
loope
aam
dec
inc
aaa
push
mov
mov
xor
pop
out
data16
test
mov
imull
xchg
pandn
scas
push
shrl
sub
push
cmp
mov
cli
js
fsts
arpl
push
jg
mov
mov
adcl
sub
or
mov
inc
stos
iret
stos
jg
sub
push
xor
inc
sbb
lret
fdivr
movsl
in
cwtl
inc
sub
popf
or
pop
loopne
outsb
mov
mov
std
cmc
dec
scas
adc
outsb
pop
push
push
int
push
xchg
loopne
inc
jno
adc
out
inc
les
jbe
mov
inc
in
cmp
imul
cmc
aam
fsubl
ja
adc
mov
xchg
fmuls
gs
inc
pop
adcb
jo
icebp
dec
fisubrs
pop
or
xchg
iret
mov
in
push
xchg
scas
cmp
pushf
mov
fidivrs
lods
ss
xchg
jl
ret
pop
loopne
rcrl
aaa
and
out
lods
stos
mov
lahf
pop
ljmp
dec
cmpsb
mov
xor
mov
outsb
shl
test
cmp
pop
pop
jns
sahf
insl
mov
xchg
jmp
xchg
stos
dec
jge
scas
cli
mov
pop
in
jne
mov
aas
and
dec
iret
mov
sbb
inc
push
aas
arpl
incl
inc
mov
fidivrl
test
fidivl
jbe
pop
sbb
lahf
pop
cld
sbb
cmp
xchg
xchg
or
sbb
add
and
sub
lret
leave
sub
xchg
or
sbb
iret
fdivl
or
sar
bound
pop
xor
sbbl
loope
stc
push
xchg
mov
and
sub
mov
mov
inc
js
adc
inc
not
sbb
subb
mov
mov
or
xor
cmp
push
push
mov
pop
fimuls
cltd
cmp
jmp
fistpll
cs
into
lret
jo
fdivrl
fstps
fildll
loop
xor
scas
clc
movd
mov
rcrl
cmp
inc
sub
loopne
sti
xchg
jp
xchg
add
inc
sub
test
push
adc
add
adc
adc
loopne
cltd
xchg
xchg
test
ret
loope
dec
insl
sub
mov
icebp
int
mov
test
jl
mov
or
ljmp
xchg
jo
fsubrs
test
pop
xor
cmovs
fildl
sti
or
dec
jno
push
fisttpl
mov
js
aas
leave
push
dec
lock
jmp
aaa
push
lods
out
icebp
test
mov
stos
mov
stos
test
sbb
stc
popf
push
and
mov
xor
insl
ja
adc
xor
mov
fistl
ret
cmpsl
les
mov
das
lock
jbe
outsb
cs
jg
les
xor
gs
pop
sbb
dec
and
inc
inc
data16
push
jl
test
idivb
mov
stos
sti
pushf
les
pop
adc
pop
mov
rcr
pop
subb
loop
mov
fs
mov
adc
add
das
adc
mov
xchg
pop
orl
jnp
mov
mov
loopne
sub
jmp
gs
lock
test
gs
fldt
daa
xchg
enter
test
mov
out
mov
push
divl
pop
jg
nopl
rcr
cmpsl
mov
lcall
jp
sub
lfs
clc
or
daa
adcl
jmp
lea
fs
inc
xchg
pop
mov
pop
ja
daa
popf
mov
cs
cmp
dec
in
pop
test
movsl
lods
or
jmp
dec
daa
je
cmp
stc
add
pop
xor
xchg
xchg
push
jb
and
jae
gs
jo
loopne
jp
mov
das
pop
mov
popa
loop
out
fwait
mov
mov
jmp
aad
inc
mov
fsubr
inc
iret
pop
std
lods
push
push
push
sub
outsb
mov
insb
stos
insl
sub
and
aaa
push
push
xorl
or
sub
cmovl
dec
movsl
mov
inc
ds
adc
fcmovnb
rolb
xchg
fisubs
dec
or
sub
push
push
xchg
xor
out
in
cmpsb
pop
outsl
dec
mov
test
mov
loope
in
std
cmp
pop
cmp
test
ljmp
mov
es
mov
push
jo
mov
ret
jl
addl
push
and
push
mov
cmc
addr16
mov
jo
xchg
cmp
sbb
cmp
pop
test
dec
fwait
jne
pusha
add
inc
inc
mulb
out
fimull
jbe
leave
pop
mov
xchg
xor
hlt
inc
repz
push
aam
mov
jl
jo
adc
jne
stos
sub
test
aad
repnz
inc
lds
sbb
mov
fcomp
jp
jmp
cmp
sub
jbe
ds
mov
pop
mov
push
testl
popf
add
jle
call
nop
hlt
loop
sub
xor
cmp
mov
enter
add
sbb
imul
lea
outsl
out
jp
cltd
lahf
xor
cmpsb
popf
cmc
dec
push
out
sbbl
stc
pushl
mov
inc
inc
test
aam
gs
and
or
inc
inc
xor
cwtl
xor
push
cld
mov
ljmp
cmp
pop
inc
sub
add
addb
jbe
pushf
or
pusha
push
cmc
js
adc
cmp
and
jp
sbb
pop
dec
fstpt
mov
pop
inc
mov
roll
out
mov
notl
cli
addr16
dec
add
sbb
test
and
mov
jp
xchg
lods
push
jns
daa
rcll
xchg
divps
cltd
mov
mov
jp
and
icebp
push
add
and
subb
sbb
aaa
push
cwtl
inc
add
gs
icebp
insb
fldenv
je
enter
jo
outsl
pop
adc
test
in
loope
aas
sbb
pop
pop
imul
les
imul
sarb
mov
and
push
repnz
jle
cltd
inc
mov
lcall
push
sub
in
pop
mov
mov
int
fs
cli
sbb
fcmovu
fs
dec
leave
cwtl
sbb
xor
inc
mov
fwait
icebp
cmp
sbb
sub
ret
push
in
cmp
out
incb
mov
or
add
mov
mov
pop
mov
ret
sub
aas
out
rorb
imul
xchg
push
aaa
xchg
popf
jp
dec
cmc
shll
pop
cmp
stos
aas
mov
jbe
rorl
into
hlt
shlb
cld
fstps
popa
pop
stc
mov
stos
hlt
push
mov
aam
xchg
push
bound
cmc
sarl
pop
mov
lret
jne
and
movsb
pusha
js
and
sbb
sbb
jno
mov
jle
push
xorb
testb
out
cmp
stos
push
enter
cmpb
repnz
stos
movsb
popf
cmpsl
jle
pop
popa
test
shrl
mov
fcomip
dec
std
push
mov
xchg
jp
dec
push
or
push
inc
mov
xchg
pop
lahf
sahf
xchg
loop
ljmp
pop
adc
push
push
add
mov
imul
dec
xlat
out
jnp
out
inc
jb
scas
and
or
test
mov
ret
add
leave
xchg
enter
mov
out
xor
and
or
cmp
stc
das
sub
inc
cmpsb
cmp
adc
inc
nop
outsb
add
push
mov
jle
dec
push
das
pop
dec
sub
and
sbb
popf
das
cmp
stos
sbb
cmp
stc
adc
sti
inc
mov
cmp
in
mov
jge
mov
sarl
imul
xchg
movsb
rcrb
adc
int3
out
repnz
leave
popa
stos
bound
jns
call
xchg
mov
fdivr
enter
dec
outsl
mov
mov
mov
add
add
adc
ljmp
xor
cmp
cmc
sub
mov
mov
aad
mov
xchg
jl
sbb
add
xorl
and
test
sub
aaa
jbe
xchg
push
lds
in
adc
push
push
cli
cs
push
or
dec
or
aad
pop
out
cmpsl
icebp
shrb
and
imul
xor
cmp
xchg
aam
adc
cmp
adc
sub
xchg
in
arpl
xor
aad
sub
push
cmp
iret
adcb
xchg
outsl
sub
sub
hlt
cltd
mov
fwait
sbbb
bound
xchg
or
or
lcall
mov
popa
lret
aad
cmp
cmpsl
inc
call
push
ljmp
cltd
fsubrs
in
outsb
fldpi
roll
jle
mov
pusha
lods
sub
pshufw
inc
lret
lahf
lods
xchg
jecxz
cmovns
in
or
cmpsl
movsb
mov
and
stos
in
loopne
mov
repnz
pop
rol
movsl
out
or
and
push
pop
mov
push
ss
inc
into
lcall
aad
shrl
mov
into
mov
xor
pop
out
test
jg
jo
in
mov
sub
push
orl
mov
je
test
sub
daa
cmp
scas
sti
jbe
mov
ret
xchg
fldcw
outsb
fisubrs
mov
dec
fisttpll
int
xchg
mov
in
inc
aad
mov
ljmp
cwtl
or
repz
mov
inc
and
push
shll
push
mov
push
xchg
or
lods
hlt
xor
pop
cmc
and
sub
lcall
test
and
sarb
jns
cltd
outsb
and
scas
popf
adc
pop
movsb
xor
test
fidivl
push
inc
sub
sbb
aad
adc
call
and
mov
xor
dec
movsl
push
loope
sbb
pop
cwtl
loop
movsl
sbb
cmc
mov
lahf
lcall
mov
aad
bound
inc
mov
loope
add
test
lds
pop
or
mov
aas
imul
mov
xor
dec
or
cmp
hlt
popf
push
push
mov
dec
and
enter
inc
imul
fs
mov
adc
das
sub
jnp
jg
rol
mov
lret
les
cmpsl
sub
mov
or
sub
xcrypt-cfb
cmpsl
pusha
xor
movsl
mov
dec
mov
loopne
inc
jbe
mov
rorl
xchg
mov
and
jmp
movsl
out
out
fcmovnb
inc
pop
and
addr16
push
jo
into
repnz
das
or
push
xor
adc
lahf
add
adc
and
add
pop
pop
sub
push
mov
inc
dec
dec
push
and
addb
and
insb
inc
adc
pop
iret
or
jbe
bound
lcall
adc
adc
addr16
pop
jno
dec
fnstcw
stos
dec
xchg
xor
jae
insl
scas
push
push
ja
mov
mov
pop
andl
sbbl
in
sbb
cwtl
dec
push
fdivp
popf
lea
inc
addl
stos
sbb
aam
cltd
fsubrs
fwait
lahf
inc
cmpsl
pop
hlt
movsl
filds
repz
stos
xor
pop
pop
mov
push
mov
pop
mov
in
mov
cmp
cld
dec
cli
daa
cmp
xchg
test
cmc
push
and
jb
lock
in
clc
int3
xor
pop
adc
mov
push
mov
aad
cmp
fcmovnu
scas
loopne
iret
jb
repz
mov
pop
inc
in
cli
pop
test
jnp
shll
cmp
scas
es
into
xor
clc
lret
cmp
imul
nop
pop
in
xor
in
iret
jae
push
inc
pusha
mov
mov
sbb
jno
and
push
test
daa
lret
jae
or
or
xor
add
xchg
pop
adc
xchg
inc
scas
mov
xchg
es
arpl
or
in
or
cltd
xor
mov
sbb
testl
mov
sub
outsb
cmp
mov
fwait
insl
mov
inc
pop
mov
bound
inc
insl
push
inc
fimuls
outsl
mov
xor
ret
jns
sub
push
ret
leave
fwait
aad
push
stos
and
ss
adc
shlb
mov
arpl
aas
mov
pop
sbbl
mov
pop
xchg
pop
imul
lea
dec
jecxz
cli
fcomip
pop
jo
outsl
dec
sub
clc
pushf
inc
pop
mov
cmp
push
xchg
push
out
lret
les
in
dec
repz
and
aaa
test
or
lds
jge
stos
cmp
push
push
pop
jne
lods
push
in
mov
push
call
out
not
int
mov
inc
fsubrl
icebp
cs
lret
pop
mov
mov
mov
push
xchg
adc
cmp
jo
ret
jmp
out
jg
sub
sysexit
leave
loopne
stos
xchg
cmp
clc
jae
addr16
jmp
mov
inc
pop
test
out
iret
hlt
lahf
fcmovnbe
leave
adc
push
push
mov
jmp
and
out
sahf
imul
mov
das
fldt
jl
imul
stos
pop
pop
sahf
dec
mov
movsl
test
les
add
lahf
pop
pop
shrl
test
dec
mov
and
and
sti
leave
daa
ljmp
pop
push
das
test
adc
jns
ficompl
pop
cltd
push
mov
adc
icebp
addr16
xchg
sub
rcrl
sahf
ret
leave
jne
lods
pop
add
popf
or
movsb
imul
fistpll
cmpsb
jae
neg
dec
adc
and
loopne
push
movsl
jmp
mov
and
jns
leave
stc
xor
dec
sbb
jle
mov
xor
addr16
push
cwtl
add
outsb
popf
xlat
add
out
repz
mov
xlat
pop
lret
push
mov
xchg
test
mov
mov
sar
call
cmp
cmp
mov
cld
push
rcrl
jp
fisttps
inc
jecxz
cmp
push
sbb
add
jl
rcrl
push
jns
add
inc
mov
jne
lock
ffree
xchg
inc
out
cwtl
xor
pop
jle
add
mov
pusha
or
mov
nop
cwtl
jl
inc
xchg
pushf
popa
sti
shrb
movsb
hlt
jmp
popa
popf
fistps
push
gs
gs
add
into
jo
jnp
mov
inc
rorl
mov
pop
rcll
mov
pushf
jg
sbb
ficoms
mov
pop
mov
and
aas
sbb
inc
and
or
orb
lea
jmp
testl
dec
xchg
hlt
test
and
mov
cld
adc
les
add
int
cld
xchg
xor
bound
fisttps
push
mov
stos
call
cwtl
push
pop
inc
icebp
and
lret
popa
mov
mov
and
push
pop
xor
icebp
addb
add
out
imul
je
lds
call
je
xchg
pop
js
pop
movsb
dec
lahf
or
mov
sar
mov
sarb
ja
mov
ljmp
sub
test
sub
lea
fcmovb
bound
imul
hlt
popf
sub
loopne
repnz
and
cmp
movsb
out
or
add
loope
push
push
adc
jae
adc
add
nop
lock
push
dec
fnstcw
cltd
push
inc
sahf
xlat
push
jo
test
xor
dec
dec
cmp
inc
push
adc
pop
mov
adc
mov
add
movsl
jecxz
pop
dec
jmp
decl
mov
scas
mov
sarb
pop
mov
insb
jo
inc
mov
jmp
and
hlt
mov
pop
out
mov
jmp
js
fmul
testb
into
lods
arpl
cmp
or
das
push
je
lcall
mov
and
pop
data16
pop
xchg
mov
jae
sbb
bound
jge
mov
inc
ficoms
int
orb
jae
inc
shll
iret
cld
into
xchg
mov
xchg
sahf
out
sbb
into
or
mov
xor
jo
xchg
sbbl
adc
dec
stos
sub
lcall
jbe
xor
mulb
mov
imul
mov
adc
mov
xchg
lcall
jb
bound
ds
xchg
pop
xchg
mov
mov
dec
cmp
or
mov
int
outsl
mov
push
icebp
xor
into
xor
stos
push
sbb
hlt
lods
ja
cmp
push
rcll
xchg
lock
in
lcall
rcll
mov
call
xorb
ds
and
test
icebp
negb
iret
push
scas
jo
push
sub
in
and
je
lock
les
sub
push
lret
loope
jnp
mov
xor
sbbl
jl,pn
xchg
add
pop
push
push
sbb
arpl
push
and
fcmovnu
pop
popf
or
out
out
jmp
xor
dec
xchg
and
insl
dec
popf
out
push
ja
add
sti
outsb
inc
mov
jle
push
dec
outsb
andb
stc
dec
test
xchg
shlb
pop
adc
pop
outsl
or
pop
in
cmp
pop
sbb
shll
aad
sbbl
dec
in
in
nop
push
mov
jg
xlat
lcall
sub
sub
dec
mov
push
nop
xchg
cmp
cli
pop
repnz
mov
lock
jg
cmpsb
leave
adc
popf
jp
lock
int
or
popa
frstor
cs
jb
ja
pop
sbb
hlt
jbe
jmp
lret
loopne
sbb
mov
ja
movsb
mov
stos
xor
push
lds
push
sbb
jp
push
daa
hlt
pop
loop
loop
sarb
pop
xchg
sbb
jmp
test
inc
dec
fs
jecxz
sbb
es
sbb
ret
ret
imul
add
mov
adc
fists
call
or
dec
push
loop
in
mov
adc
or
xor
movsb
test
cmp
clc
jge
pop
jp
jmp
addr16
sbb
mov
in
or
xor
dec
push
adcb
imul
es
xor
lret
sbb
xor
xor
mov
mov
jmp
scas
push
xchg
fdivl
pop
std
adc
pushf
pushf
push
movl
ucomiss
imul
jo
popl
ret
sub
mov
rclb
cld
jno
out
nop
imul
push
jne
clc
jne
in
jnp
mov
fists
inc
pop
mov
sbb
ret
fcomip
popa
fsubrl
cmp
out
sub
mov
sub
adc
pop
gs
iret
dec
iret
dec
stos
cwtl
ds
dec
cmpl
push
out
mov
hlt
pop
fdivr
inc
or
ljmp
xor
aad
test
rcll
out
aad
aam
fs
push
loop
push
lret
dec
es
jnp
aam
es
inc
jo
adc
push
ret
jge
nop
mov
pop
in
jge
inc
jbe
and
popa
and
repz
mov
jbe
imul
mov
rorl
inc
mov
faddp
stos
xor
dec
inc
and
loop
xchg
rcrl
pushf
lds
or
insl
pop
out
jmp
ds
imul
cmpl
mov
cltd
loop
jmp
lock
inc
jmp
shlb
sub
fildll
add
jge
inc
cmpsb
cwtl
loope
sub
or
rol
and
push
sahf
dec
push
mov
adc
outsb
inc
pop
jnp
jecxz
add
orl
scas
sbb
sub
mov
push
pop
cltd
jmp
cli
inc
fwait
sub
jae
push
xor
dec
pop
pushf
cmpsb
in
cmp
push
js
mov
and
mov
cwtl
ret
jle
pop
jo,pn
sub
jle
xchg
mov
cmp
fadds
sbb
in
stos
fsubl
jnp
mov
push
movsl
xor
js
sbb
cmc
jecxz
or
dec
test
lahf
jnp
dec
or
hlt
jbe
into
sub
call
push
lea
cmpb
xorb
arpl
filds
mov
push
add
cwtl
mov
jmp
adc
jecxz
rcl
ljmp
push
pop
ret
xorl
subl
sarb
xchg
out
je
lock
int3
leave
mov
filds
sub
push
test
sarl
loope
out
in
sti
outsl
fistpll
mov
shrb
push
repz
sbb
int
lcall
push
mov
sub
mov
cmpsl
ja
mov
mov
sar
and
mov
jmp
leave
add
les
insb
pop
and
adc
mov
cld
add
push
or
jns
in
lods
stos
adc
jne
ljmp
pop
inc
jnp
sub
dec
mov
or
push
or
mov
data16
pop
flds
psubq
out
shl
lds
xchg
in
lret
mov
jl
mov
add
mov
les
arpl
xor
or
adc
mov
pusha
xor
adc
jns
cmp
and
ret
and
stc
out
out
aas
sbb
jp
mov
mov
cmp
xchg
out
xchg
pop
or
jnp
lret
push
mov
mov
sarb
clc
int
mov
pop
int
adc
pop
ja,pn
push
je
pop
and
mov
mov
add
cmpsb
ljmp
or
sbb
add
daa
xchg
shl
push
hlt
fsubl
nop
outsl
pop
jp
pop
out
or
cmpsl
push
imul
mov
dec
test
xchg
lret
push
or
mov
movsl
mov
fwait
dec
cmp
add
mov
add
add
inc
sbb
jo
outsl
sub
xor
push
lods
daa
ret
or
push
pop
imul
jle
sub
pop
xchg
loope
xchg
push
sub
push
jns
sbb
xor
aaa
add
clc
divb
mov
stos
cmpsl
cmp
xchg
cmp
aad
or
sbb
adc
inc
filds
fisubrl
test
sti
mov
push
mov
adc
and
loope
push
inc
xchg
push
pop
addr16
notb
pop
outsl
xchg
mov
mov
adc
push
adc
imul
les
out
mov
push
in
cmpl
mov
stos
sbb
inc
add
idivl
sub
out
add
scas
jae
cltd
scas
imul
scas
or
int
ffreep
in
dec
into
je
iret
add
or
fs
push
add
mov
insl
mov
add
add
adc
rol
pop
jbe
fs
add
push
fmull
pop
add
lds
pop
movsl
out
repnz
scas
jbe
jns
dec
add
mov
mov
daa
movsl
mov
clc
or
jnp
mov
add
and
add
fs
adc
mov
iret
inc
xor
inc
in
mov
scas
xor
iret
lcall
sub
inc
leave
push
push
pop
test
movsl
mov
pop
mov
outsl
fidivrs
or
test
movb
cmp
inc
jecxz
xor
ljmp
dec
sbb
es
scas
ja
xchg
pop
sub
div
leave
xor
push
dec
pop
mov
leave
xor
xchg
iret
mov
outsb
sub
inc
rcll
clc
jg
test
out
insl
add
inc
xor
nop
cmp
mov
ret
rcrb
out
pushf
push
mov
inc
popa
add
testb
jmp
dec
xor
das
jp
fidivl
dec
aas
fs
int3
hlt
lods
stos
loop
cmc
mov
sha256msg2
adc
dec
outsb
fsubl
sbb
out
xchg
outsl
push
loope
imul
scas
mov
adc
pop
push
xchg
and
ds
scas
or
push
push
popa
testl
inc
arpl
nop
movsb
mov
lock
adc
mov
cmp
mov
add
cmp
dec
dec
cmc
mov
inc
sbb
cmpsb
outsl
fisubl
call
js
dec
inc
sbb
popf
pop
xchg
push
xor
aaa
ljmp
jmp
push
dec
jb
repnz
push
fmull
add
daa
mov
mov
clc
xor
mov
cmp
cmp
cmp
ss
imulb
in
sbbl
adc
mov
dec
pushf
lds
sbb
fistpll
popa
pop
inc
or
mov
loope
testl
mov
pop
xor
xchg
inc
mov
and
dec
mov
ss
fstpl
or
loopne
dec
into
sbb
ret
shrl
jecxz
xchg
data16
imul
push
inc
xchg
cmp
cmp
inc
adc
in
cmp
mov
dec
cmp
cmp
adc
adc
push
addr16
jl
test
lahf
sub
aad
fnsave
cmp
dec
push
repz
pop
cmpl
mov
aas
js
out
imul
pushl
xchg
mov
adc
dec
push
ds
clc
push
adc
loope
mov
push
scas
shrb
and
and
hlt
test
pop
stc
nop
jno
pop
idivl
fnsave
insl
loopne
fstps
mov
mov
rorb
sahf
cmp
push
nop
jg
mov
and
xchg
cmp
mov
or
push
dec
mov
loope
mov
les
sti
sti
in
shrb
sti
fcmovne
in
jbe
cmpsl
cmc
pop
ret
sahf
mov
sub
frstor
mov
xor
dec
int
out
fsubl
jl
or
sbbb
fnstcw
leave
fdivrl
sbb
cmp
push
outsl
lret
out
in
out
sarb
les
and
pop
sarb
ret
in
pop
xchg
insb
sbb
and
or
adc
sti
int3
push
mov
pop
cmp
sti
sub
sti
mov
in
adc
sbb
js
repz
shl
mov
push
xor
movsb
lock
iret
cmpsb
out
dec
lock
lods
mov
mov
lods
test
das
push
clc
rclb
xor
adc
dec
xchg
adc
stc
mov
mov
jo
je
in
out
mov
push
and
mov
or
mov
mov
mov
fldl
jecxz
jae
mov
ret
cmp
jmp
dec
cs
movsl
cmp
in
inc
xchg
das
es
and
adc
mov
jb
testl
adc
xor
pop
sbb
xchg
add
sub
jle
jae
xlat
inc
mov
push
fwait
lods
dec
or
adc
dec
icebp
mov
mov
int3
pop
lcall
and
lods
ljmp
sbb
daa
out
out
dec
mov
shl
int3
movb
adc
dec
inc
ficoml
sbb
dec
lret
pusha
mov
stc
call
movsb
cmp
xchg
ret
pusha
pushf
push
inc
xlat
add
lock
icebp
ret
xchg
add
jp
xchg
inc
jl
pop
ficoml
dec
xor
and
insb
pop
pop
fistpll
push
stos
lods
nop
lods
add
inc
or
cmp
xor
sub
dec
inc
sbb
push
lea
xchg
pop
pop
cwtl
jp
fisttps
popa
sub
fstpl
pop
push
fstpl
xor
lods
lret
fmulp
lret
jmp
addr16
dec
clc
cmpsb
int
push
push
das
mov
sbb
std
js
test
xor
pop
dec
es
sahf
out
pop
imul
cmp
ds
pop
xchg
outsb
cmpsl
outsb
push
cs
lcall
cli
ljmp
pop
add
ret
jae
mov
sbb
inc
lcall
icebp
inc
pop
adc
popf
outsb
and
aas
popf
mov
dec
mov
cli
outsb
jnp
add
inc
mov
add
sub
add
ja
insl
rcl
jne
mov
neg
and
jl
loope
stc
or
jb
pop
imul
xor
imul
test
mov
push
mov
mov
incl
test
leave
lock
dec
rorl
mov
popa
pop
pop
mov
lahf
mov
add
mov
or
dec
mov
loope
dec
mov
lds
mov
sub
and
push
xor
add
int
fnstenv
push
xorl
lahf
mov
adc
mov
jne
inc
sbb
das
idiv
stos
jo
outsb
ret
jmp
jmp
cld
pop
cmp
outsl
lahf
and
inc
test
adc
mov
ds
xchg
bound
ret
jbe
jge
in
pushf
inc
out
cltd
movsb
push
xchg
hlt
shlb
ret
jp
and
std
sbb
cmp
aad
std
mov
leave
std
filds
sbb
pop
call
dec
fwait
nop
daa
or
fs
dec
imul
and
out
or
fildl
movsb
aas
test
xor
pop
adc
hlt
xchg
add
aam
inc
push
gs
roll
jg
outsl
repnz
imul
add
mov
std
and
sub
pop
js
jnp
fdivr
jo
inc
in
mov
outsl
adc
inc
push
hlt
ret
iret
push
cmp
rol
lahf
mov
mov
inc
std
jmp
repnz
push
mov
push
not
cmc
pop
std
xor
or
js
jg
xchg
mov
or
dec
jg
aam
shll
loope
xor
int
xchg
jmp
dec
push
add
popa
mov
clc
aad
aas
jmp
pusha
sub
clc
es
dec
outsb
into
jae
pop
jb
addr16
into
sti
lret
ja
cmp
cmp
dec
mov
mov
test
mov
cwtl
pushf
jge
movl
ja
jecxz
test
push
pop
push
mov
lea
jl
pop
lcall
mov
imull
test
mov
jo
and
call
fisubl
or
mov
ret
lret
inc
dec
mov
pop
int3
rol
sub
sahf
or
adc
sbb
into
mov
xor
negb
sahf
inc
sub
je
pop
mov
movsl
dec
xor
movsb
mov
daa
jo
fisttpll
lea
jne
mov
je
sti
mov
add
mov
scas
testl
test
dec
xchg
iretw
add
add
scas
lds
adc
sbb
addr16
mov
loop
inc
fsub
mov
cli
mov
stc
cmp
cmpsl
aas
xor
xchg
lock
pop
loopne
cmc
iret
inc
cltd
push
pushf
mov
nop
cld
inc
ret
xchg
mov
sbb
sbb
je
jg
adc
sbb
fwait
int3
mov
mov
in
jecxz
lds
sub
dec
cs
test
dec
adc
fwait
enter
loopne
stos
xchg
sbb
fwait
adc
imul
iret
cmp
int
repz
sub
bound
jno
sbb
ss
inc
es
pop
mov
mov
les
movl
repz
rclb
and
pop
mov
add
shll
pop
pop
and
cmp
sbb
inc
cld
xor
mov
xchg
insb
andl
inc
cltd
or
mov
add
pop
sahf
jnp
repnz
loopne
and
jecxz
mov
into
mov
dec
adc
mov
xchg
outsl
jge
mov
sbb
jge
xor
mov
xchg
lahf
leave
mov
xchg
add
pop
push
or
popf
jne
add
xor
orb
stc
fsubrp
push
daa
aas
xor
sub
dec
arpl
lds
push
or
xchg
mov
fwait
sti
sbb
imul
fmul
adc
inc
dec
je
adc
and
in
pushf
mov
sub
inc
lea
dec
pop
int
jg
and
arpl
shrl
mov
pop
stos
push
inc
mov
imull
mov
lods
aas
and
dec
sub
mov
xchg
sbb
ret
and
cltd
sbb
roll
fstpl
mov
lock
jp
inc
xchg
outsb
out
hlt
jge
dec
cs
mov
test
shr
jnp
push
dec
push
in
jns
push
repnz
or
add
push
loope
scas
fildll
call
jbe
dec
cmp
mov
dec
out
add
fdivrs
cmp
enter
push
cmp
add
ja
cmp
add
jnp
sub
into
jge
test
in
cmp
shlb
mov
out
das
scas
cmp
idivb
mov
mov
dec
mov
cmpsb
adc
mov
add
jl
jp
cmp
movsb
fdivs
pop
das
or
es
imul
aaa
sbbl
mov
lret
add
mov
push
mov
out
jo
test
mov
xchg
jb
add
or
call
mov
inc
ret
mov
icebp
mov
sbb
lea
jne
daa
cld
pop
mov
cmp
xor
mov
mov
push
add
pop
pusha
mov
rclb
or
pop
xchg
into
js
jmp
imul
stc
jnp
mov
imul
movsb
sahf
lock
cmp
jmp
sarl
mov
ja
xchg
inc
pusha
sub
xor
mov
sti
ds
hlt
xor
cmp
xor
enter
inc
nop
pop
fwait
sub
and
mov
dec
and
addl
xchg
xor
sti
aad
adc
jg
addr16
push
push
out
and
push
popa
dec
sbb
daa
out
mov
les
xor
jns
lcall
pop
sub
xchg
add
inc
pop
jns
test
dec
out
sahf
pushf
ss
sahf
inc
je
xor
mov
inc
and
out
and
movsb
jecxz
cmpsb
cmp
lret
roll
mov
xor
movsb
jb
outsl
testl
mov
or
stos
xor
pop
add
ljmp
mov
push
xor
mov
or
jl
sub
ja
dec
inc
adc
ja
mov
push
cmp
pop
leave
mov
in
mov
std
mov
push
sahf
es
dec
insb
fadds
imulb
mov
daa
insl
shll
arpl
jge
daa
ds
cs
jmp
sub
test
aad
and
test
aas
cld
mov
pop
sub
dec
pusha
dec
and
ficompl
insl
xor
aaa
sub
xchg
jo
jmp
sub
inc
in
shrl
xor
xchg
out
adc
xchg
leave
test
in
inc
imul
dec
and
pop
and
fwait
dec
inc
lods
mov
push
and
push
adc
mov
jbe
jmp
xchg
inc
ffree
out
aas
addr16
or
out
stos
loope
pop
ret
or
and
outsw
add
lock
cmp
mov
mov
sti
add
sbb
outsl
cmpsl
lods
test
dec
or
pusha
cmp
adc
inc
pop
sub
inc
sti
or
dec
lea
mov
cmc
andb
test
stos
xchg
inc
xchg
sub
jno
clc
jo
ret
fistpl
cmp
push
jle
inc
sarb
icebp
sbb
cmp
and
xor
inc
das
jo
ret
jge
ds
dec
sub
add
mov
mov
dec
mov
stos
mov
sbb
iret
push
xchg
popa
push
gs
outsl
push
adc
mov
es
les
icebp
js
stos
test
loop
inc
dec
enter
sub
scas
xchg
mov
jg
push
hlt
xchg
lods
cs
sub
add
pushf
push
jns
push
or
pop
inc
stos
or
sub
fcmovu
ds
aam
add
jb
je
into
fs
sbb
xor
movsl
ds
sub
jo
fmul
jp
fisttpll
xor
xchg
pop
xor
sbb
add
dec
daa
xor
pop
fbstp
xchg
repnz
sti
and
stos
cmp
xchg
dec
pop
pushf
sub
mov
dec
cmp
test
pop
jbe
nop
cmp
daa
daa
xor
mov
mov
stos
mov
ljmpw
fiadds
pop
mov
sbb
and
mov
int3
push
jnp
popa
sbb
shl
test
sub
adc
sub
sub
and
adc
push
push
sti
xchg
sbb
out
sub
pop
pop
js
xor
add
std
clc
fcompl
sub
scas
test
cmp
in
or
and
mov
aam
jno
sti
jbe
insb
cmpsl
fidivs
or
xchg
dec
sbb
pop
add
sahf
cmc
rol
push
popf
jns
repz
or
mov
std
adc
mov
leave
and
sbb
fisubrl
scas
jg
push
jo
sub
add
call
test
test
out
mov
ss
inc
xor
sub
pop
fisttps
bound
dec
or
push
cmpsl
int3
inc
pop
movsb
pop
daa
pop
adc
arpl
out
test
xchg
leave
adc
xchg
adc
xchg
add
push
or
xor
jae
xchg
mov
jecxz
jle
pop
idivl
sbb
push
pusha
addl
xchg
sub
pop
add
jns
xchg
add
insl
add
cmpsl
or
orb
int
outsl
add
in
ljmp
cmp
sub
aas
subl
lea
call
xchg
subb
pop
jg
not
ss
xor
mov
ret
aaa
lahf
inc
ret
cmc
xchg
push
aam
push
jns
add
xor
pusha
mov
loope
test
add
out
fistpll
pop
cwtl
je
sbbl
nop
add
inc
out
xchg
clc
pop
dec
inc
stos
clc
mov
pop
mov
fdivrs
inc
mov
stos
xor
pop
gs
fstps
or
imul
add
shl
sub
data16
inc
cmp
sbb
or
jo
movsb
add
in
mov
jae,pn
hlt
adc
out
and
push
jnp
lods
inc
pop
in
or
test
lods
sti
imul
test
aaa
test
loope
sub
test
jmp
shrb
cwtl
lahf
xlat
les
pop
pop
shrl
sbb
dec
add
xchg
sbb
pop
jb
jno
dec
mov
and
lcall
iret
call
pop
pop
fs
xchg
dec
sub
sub
stc
or
pop
jg
xor
xor
lahf
or
addb
pusha
add
pop
push
dec
jae
mov
mov
mov
jo
adc
xchg
add
fbstp
subb
stos
andb
test
loopne
push
call
xor
movsb
and
push
pop
jmp
xchg
pusha
repz
sti
adc
and
arpl
cmpl
mov
or
outsb
adcl
out
and
sub
std
aam
or
or
mov
popa
test
inc
cmp
fildll
shrl
lock
stos
lods
testb
and
jp
xlat
xchg
inc
aam
enter
add
push
std
sbbb
mov
and
inc
jb
xor
jp
lds
pop
sbbb
add
push
xor
shl
jne
insl
mov
cld
call
dec
push
xchg
or
mov
cld
add
les
push
dec
fiadds
adc
inc
das
cmp
xchg
test
mov
negl
ljmp
repnz
adcb
push
adc
insl
and
mov
push
sub
jne
xlat
sbb
es
mov
stos
cmpsl
fs
mov
shrl
mov
or
in
mov
icebp
cld
fistps
xor
rorb
xor
adc
pop
pop
xor
or
lahf
stos
lods
andl
and
jle
out
jbe
inc
xchg
and
sub
sahf
inc
push
xor
mov
sbbl
aam
lcall
and
loope
push
jmp
ss
repz
negl
adc
xchg
sbb
mov
adc
pop
in
cwtl
repz
cli
push
out
sarl
xchg
adc
mov
cli
stos
cmpsl
ss
mov
xchg
popa
adc
xchg
inc
jmp
adc
in
rolb
or
jge
adc
cmc
or
push
sub
jp
jecxz
mov
add
xchg
cmpsl
call
mov
sar
out
loopne
jae
pop
pop
addr16
jecxz
jmp
pushf
mov
inc
fwait
test
insl
xchg
xorb
data16
push
sbb
and
std
repz
inc
in
mov
mov
cs
lods
xor
outsb
xchg
xchg
jbe
and
dec
add
lret
xchg
xchg
lcall
mov
push
daa
mov
jb
jae
adc
cs
xchg
push
lods
bound
inc
sub
mov
add
xchg
jmp
sub
adcb
sub
out
pop
mov
ret
iret
arpl
in
sbbl
mov
jge
aas
test
loop
add
pop
fcmovnu
xor
ljmp
xchg
inc
roll
xchg
push
push
dec
add
aad
sbb
xor
inc
sub
imul
push
test
divps
in
movsb
adc
shl
fdivs
hlt
mov
cmp
fsubp
push
cmp
adc
imul
jae
and
das
mov
xor
push
inc
sarb
loope
in
in
test
sub
mov
push
or
jae
sbb
xorb
stc
and
dec
mov
int3
mov
repnz
roll
or
pushf
jne
jl
jns
xchg
aam
cmp
out
inc
cmp
shll
and
clc
mov
mov
in
cltd
inc
ds
jmp
jg
lea
xor
or
test
inc
sti
popf
push
orb
dec
sub
cltd
inc
and
iret
clc
pushf
push
jmp
inc
popf
lcall
and
call
fsubrs
in
push
jg
addr16
add
shr
inc
mov
rolb
dec
or
cs
sub
mov
xchg
arpl
repnz
loope
cmp
jl
mov
inc
aas
mov
subb
mov
sbb
add
xchg
xchg
cmpsl
int
and
jecxz
pop
imul
sub
rcr
repnz
nop
dec
lret
popa
lods
xchg
or
and
jae
sbb
mov
fwait
hlt
pop
mov
rcl
mov
xor
je
ror
fisubl
movb
jl
add
repz
or
push
cmp
mov
cwtl
jb
fs
sub
cwtl
gs
sbb
sar
pop
rcll
cmc
jo
jo
add
xchg
data16
jp
lds
mov
jmp
xor
mov
orl
ret
aas
iret
push
popa
je
scas
xchg
hlt
add
jnp
sbb
jno
test
fbstp
push
jecxz
ret
push
insl
cmp
adc
sbb
xchg
pop
mov
or
adc
sbb
pop
mov
push
mov
pop
jp
push
icebp
sub
xchg
pushf
dec
addb
inc
xor
inc
test
mov
jo
cltd
sbb
out
xor
scas
jo
or
je
push
jmp
jg
sbb
push
dec
mov
arpl
inc
or
xchg
vpunpckhdq
aad
ljmp
sti
or
mov
mov
push
and
jmp
jo
int3
insb
dec
icebp
xor
inc
mov
movsb
cmpsl
imulb
iret
and
push
loope
jmp
cltd
push
test
pop
cltd
incb
jnp
push
jne
mov
dec
pop
shll
rolb
mov
stos
aas
call
sbbb
icebp
add
out
sub
cmp
push
and
lret
ss
xchg
or
sbb
ljmp
int
xchg
insl
mov
cmp
sbb
xchg
loopne
iret
aad
fwait
and
fs
xchg
adc
xchg
push
xchg
arpl
add
cmp
loop
or
imul
daa
cmp
jbe
mov
add
push
lods
xchg
push
aam
outsl
test
into
arpl
jbe
jb
dec
nop
xchg
cli
sub
aam
fstps
je
inc
cmc
incb
sub
jno
mov
xchg
aam
and
mov
jmp
sub
icebp
adc
cmp
imul
popa
stc
into
xor
in
ret
aam
jne
stos
setge
addl
or
sbb
vmwrite
jnp
fnstenv
mov
popf
mov
xchg
jl
aam
dec
cmp
mov
mov
add
xchg
mov
dec
mov
aas
das
mov
dec
xor
adc
test
stos
dec
lock
ret
or
ss
std
sbb
pop
mov
push
push
pop
data16
adc
test
push
sub
clc
mov
into
jne
pop
arpl
inc
push
pop
fnsave
in
cwtl
mov
call
pop
int
je
and
ficoms
imul
pop
xor
jp
jne
stc
xchg
mov
sub
dec
ds
icebp
dec
pop
popl
ret
dec
cmpl
mov
data16
leave
cltd
test
and
ss
cmpl
gs
imul
in
mov
data16
sub
jmp
mov
out
add
xor
pop
add
hlt
arpl
jg
nop
lret
pop
adc
imul
and
lea
mov
sub
inc
popf
or
into
jmp
leave
dec
sub
mov
sub
sbb
rcll
lret
fs
and
jne
aas
test
fistl
cmpsl
add
mov
mov
jno
test
mov
push
jp
pop
push
and
insb
jno
loopne
pusha
pop
cmpb
mov
pop
pop
push
mov
mov
lret
inc
mov
sub
test
hlt
push
fisttpl
add
repz
movsl
je
loope
adc
rorb
jo
leave
mov
push
outsb
outsb
iret
lods
dec
jge
shlb
outsl
testb
push
push
jns
stos
clc
pop
loope
fstpt
shrl
pop
pop
inc
pusha
rcrl
cmc
sbb
inc
in
xlat
sub
ds
dec
out
imul
xchg
pop
pop
popa
andb
mov
xchg
push
mov
loop
aam
xchg
jns
sahf
pop
sub
outsb
adc
jnp
daa
mov
sub
xor
ret
jmp
inc
rolb
sar
inc
jo
sub
aaa
int3
mov
xor
test
xchg
mov
rcll
lret
shl
repnz
xchg
scas
mov
sar
or
xorl
sbb
xchg
aad
pop
mov
xchg
adc
test
cmp
pop
push
lea
or
daa
cmpsb
ret
xchg
sub
dec
popa
jo
leave
in
and
lods
arpl
stos
nop
lret
mov
ljmp
outsl
jg
fwait
dec
mov
push
stos
add
das
sub
out
push
pop
xorl
xchg
es
fists
cltd
fs
lods
push
aaa
sbb
popa
jb
aas
cmp
mov
out
jmp
ljmp
loope
pop
jg
and
mov
dec
mov
mulb
pop
dec
inc
add
add
dec
xchg
stos
sbb
cli
shrb
sbb
subl
call
sarb
sahf
jae
inc
and
xchg
xchg
adc
mov
scas
fmulp
sbb
fbstp
fcompl
cmp
cmpsl
aad
push
dec
in
jns
and
adc
loope
int
push
push
pop
cmp
jno
fdivrl
shrb
mov
mov
arpl
js
cltd
ret
sub
pusha
arpl
ss
psraw
sub
subb
hlt
das
in
mov
xlat
pop
cli
cmp
or
js
pop
add
loope
mov
incb
inc
scas
imul
xchg
das
mov
pop
int3
cmc
mov
pop
add
push
pushf
in
addr16
xor
and
xchg
xchg
lcall
mov
jno
mov
add
push
lahf
fdivp
out
repz
aas
cltd
aas
lea
aaa
mov
aam
divb
lock
lds
fsubrl
mov
jae
push
cmp
jle
adc
pop
mov
das
push
imul
mov
lret
add
mov
or
cmc
loope
add
add
lcall
mov
xor
in
shrb
jo
adc
bound
mov
insl
loope
and
int3
sbb
mov
call
rolb
adcb
ret
lds
popf
in
fs
ljmp
pusha
mov
lods
mov
push
repnz
scas
repz
fimuls
push
fsubr
imul
movsl
sarl
fwait
mov
icebp
sbb
inc
sub
shrl
js
incl
fmull
mov
in
cmp
sti
lea
adc
repnz
add
loopne
test
sbb
xor
push
xchg
mov
and
arpl
push
push
add
jl
pop
fs
leave
adc
push
or
stc
aam
negl
std
adc
dec
adc
addl
and
mov
das
shlb
push
shl
lret
cmp
into
xchg
jne
pop
push
test
mov
int
shl
lods
adc
dec
dec
ficomps
sub
pusha
pop
shr
arpl
into
ror
sub
lcall
repz
test
inc
pop
cwtl
js
nop
stos
cmpl
cmp
hlt
dec
adc
sub
pushf
cmp
xchg
movsb
jecxz
cmp
add
jle
xor
mov
lock
xchg
pushf
leave
or
mov
cmp
ret
mov
movsb
icebp
sbbb
cmp
pushf
into
push
test
add
pop
pop
mov
sti
mull
xor
or
mov
inc
push
xchg
adc
ja
mov
or
sti
js
mov
xchg
mov
pop
adc
bound
add
sub
xlat
scas
cmp
sahf
and
xchg
lea
fldcw
cltd
hlt
adc
add
mov
sbb
cmovns
mov
mov
ret
lods
and
push
jle
jnp
xchg
and
mov
fimuls
test
cmpsl
leave
push
sbb
push
jg,pt
and
cmc
lcall
lock
imul
cmp
and
ljmp
mov
fwait
clc
fsubrp
ds
jmp
std
test
pop
add
jne
shr
mov
inc
shll
icebp
fsubr
cmp
jg
xor
adc
jl
push
push
pop
std
push
or
xchg
pop
cmp
and
add
xor
jae
pusha
xor
je
xchg
xchg
pop
cli
int
call
fs
ror
cmp
iret
fxch
cmp
xor
dec
repz
mov
mov
mov
mov
xchg
inc
icebp
lock
cmc
or
pushf
shll
dec
scas
aad
repz
xor
push
std
leave
adc
repz
dec
mov
dec
divl
lret
mov
sub
or
ret
aaa
mov
rcll
add
lcall
inc
in
lcall
movaps
mov
xor
mov
testl
pop
jne
jp
and
jb
loop
stc
mov
mov
pusha
cwtl
sbbb
dec
dec
pop
dec
clc
sub
mov
or
stc
mov
xor
lret
xor
sub
fstpl
data16
mov
and
imul
sub
cli
pop
xchg
rcrb
lret
icebp
or
mov
xchg
data16
xlat
mov
lcall
jnp
pop
in
enter
stc
or
jns
mov
popf
jno
fs
cltd
and
int3
xchg
in
or
mov
ret
mov
dec
aaa
push
push
fs
aam
jecxz
or
fwait
cwtl
out
cmp
jecxz
cmpsb
bound
jne
mov
add
fstpt
pusha
imul
or
inc
mov
icebp
xor
mov
stc
xchg
lret
adc
mov
aam
je
jmp
pop
and
jnp
adc
dec
mov
or
push
cmp
mov
cwtl
leave
dec
in
inc
ds
mov
enter
js
inc
push
psubsw
sub
scas
mov
sbb
cltd
in
insb
jbe
cmpsl
out
mov
and
mulb
xchg
out
gs
mov
push
jns
xchg
jecxz
pop
push
imul
mov
enter
push
and
add
imul
xor
and
rclb
pop
jmp
mov
adc
sub
or
subb
js
cltd
das
nop
mov
movsb
das
xor
xchg
xchg
push
sbb
in
sub
jns
outsb
fcoml
out
xchg
stc
mov
pop
jge
ficoms
lock
jmp
cmp
pop
push
pop
or
inc
insb
mov
cld
xor
das
jmp
or
mov
cmp
mov
xchg
int
pop
aam
out
and
xor
arpl
divl
lcall
xchg
outsl
adc
sbb
jmp
cld
scas
cmp
ja
mov
inc
mov
mov
bound
mov
push
orl
out
xlat
cwtl
mov
sbb
sbb
push
ret
lds
out
fists
lock
popf
sbb
sbb
xchg
jmp
dec
push
rclb
sub
cmc
cli
sbb
jmp
cmpsl
lret
lods
mov
mov
fstpt
dec
jp
arpl
sbb
popf
xchg
mov
mov
jbe
leave
movsl
lods
fwait
xchg
leave
xor
rcll
loopne
das
and
sti
in
aad
mov
in
divb
loope
scas
pop
mov
mov
test
push
nop
js
adc
ret
movsl
bound
stos
fcmovb
jb
mov
xchg
push
cmpsb
das
clc
add
sti
invd
daa
in
pop
push
data16
sub
mov
cmpl
mov
xchg
sarl
push
and
out
mov
xchg
adc
xchg
insb
push
pop
inc
aas
xor
push
setle
outsl
out
xor
sbb
loopne
pushf
cli
xchg
repz
or
ja
push
mov
pop
sahf
add
jnp
fcmovu
mov
mov
adc
sub
sar
lods
decb
adc
xchg
addr16
jbe
loopne
pushf
inc
push
pop
into
jb
subb
jle
jg
aad
adc
lahf
mov
shl
pop
in
xchg
sbb
jo
insl
cmp
inc
xor
dec
arpl
or
shrb
push
ret
push
into
xor
test
out
push
mov
mov
dec
out
xchg
mov
mov
jp
movsb
call
adc
aam
enter
add
jnp
jbe
addb
mov
ljmp
dec
push
sbbb
add
pop
mov
mov
ljmp
lods
pop
popa
jb
ror
shlb
push
rcl
scas
cli
dec
inc
out
dec
lds
mov
cli
push
pop
sub
stos
mov
ds
js
sarl
cmp
jne
cmpsb
js
sub
icebp
xchg
jno
ds
rcll
or
and
adc
and
add
aas
adc
addr16
pop
imul
mov
cmp
and
iret
icebp
sar
out
imul
adc
dec
push
lret
xor
inc
xchg
popa
inc
dec
mov
aaa
stos
mov
divb
popf
mov
out
sub
cmp
or
outsb
rcrb
out
es
or
xor
push
lcall
loopne
push
es
push
test
xchg
jmp
jge
mov
insl
mov
mov
fwait
lods
fildl
and
ret
loopne
push
loope
sub
push
inc
js
ja
inc
jmp
push
cmp
in
push
cmpb
fisttpl
sub
adc
jle
notb
ljmp
js
sbb
add
adc
xchg
mov
xor
xchg
sahf
mov
lret
in
jecxz
str
mov
jbe
xor
mov
out
inc
lds
fbld
and
js
clc
pop
mov
ds
in
cmc
push
xlat
push
std
mov
scas
fidivs
push
dec
and
jg
movsl
dec
fdivrs
jecxz
jb
fstl
bound
push
aam
inc
shll
fmul
addl
jp
pop
sbb
cmpb
lret
pop
push
add
inc
mov
addb
loopne
insb
or
jge
outsb
cltd
into
push
jae
inc
pushf
or
movsb
mov
sub
fidivs
or
imulb
cmp
mov
mov
xor
enter
bound
ret
sub
pushf
and
mull
push
test
leave
pop
xchg
leave
or
lea
xchg
aam
dec
xchg
loope
cmpsb
arpl
fnstcw
popf
clc
inc
daa
xor
sub
dec
dec
movsb
repz
pop
sub
out
into
mov
mov
inc
sub
test
fnsave
mov
xor
fimull
dec
out
sub
and
push
xor
sbb
dec
pop
fwait
inc
ljmp
icebp
push
xor
notl
add
add
ljmp
sbb
out
mov
pop
les
lret
xor
xor
xor
insl
and
mov
fists
stos
fsubs
ret
pop
pop
mov
test
xchg
xor
pop
mov
mov
mov
jecxz
push
add
jno
xchg
iret
out
and
xchg
mov
xor
sub
stos
lea
mov
insb
mov
sbb
push
inc
or
divl
jae
dec
mov
dec
or
das
ljmp
pop
int3
fcoms
rcll
mov
clc
xor
jnp
dec
mov
mov
mov
jnp
imul
insl
outsb
mov
cmp
or
add
pop
or
rorb
inc
pusha
and
das
pop
lods
mov
loope
adc
jbe
addl
cwtl
xchg
sub
repz
into
fs
jp
pusha
add
mov
lahf
mov
and
cmp
jns
add
cmpsb
sahf
ljmpw
xchg
and
imul
sub
jbe
add
adc
pop
push
mov
shlb
fs
icebp
sti
push
fstps
mov
push
xchg
mov
xchg
fs
jl
inc
repnz
xor
jbe
mov
inc
fst
lea
or
or
icebp
testl
dec
cmp
sub
in
enter
lret
leave
mov
add
adc
inc
lahf
out
fisubs
insl
add
clc
pop
sbb
jge
mov
lock
loop
cld
push
mov
add
jmp
pop
data16
adc
dec
and
xor
jl
xlat
cld
in
jecxz
or
pop
sub
out
pop
cmc
movb
shlb
roll
shl
cmp
int
or
inc
lds
push
cmp
pop
lods
inc
sbb
cmpsl
hlt
cli
rcl
or
dec
es
fsubl
add
add
xor
jl
jbe
and
sub
scas
orl
lcall
rclb
fs
sbb
into
int
cmp
add
mov
es
mov
jne
xchg
sub
call
xchg
je
jle
addr16
test
psllq
test
sbb
adc
incl
cmpsb
cmpsb
jg
xor
movsb
mov
shrb
ret
stos
je
mov
std
dec
leave
mov
jbe
push
fldl
mov
loope
adc
and
rcr
and
sahf
clc
adc
xchg
idivb
or
pop
pop
jl
add
in
or
jp
aam
mov
dec
mov
loope
dec
mov
jmp
dec
cmpl
in
mov
lahf
xchg
ret
aas
pusha
dec
push
fnsave
pop
push
cmp
ds
push
adc
inc
sub
lds
sub
fwait
mov
test
addr16
lods
pop
test
cld
roll
lret
stos
jl
push
adcl
jmp
sub
arpl
cmp
push
mov
pop
jnp
pop
ficomps
aas
lds
insb
mov
sbb
xchg
iret
mov
push
popa
push
and
sub
push
dec
hlt
push
ss
cmp
inc
xchg
mov
lods
dec
call
mov
clc
cmp
sub
ret
dec
sub
and
lds
out
sbb
jne
mov
sbb
adc
imul
cmp
sbb
stos
jo
xchg
and
repz
mov
jns
sbb
mov
xlat
ficompl
cwtl
dec
mov
cli
push
imul
dec
nop
cld
cmpsl
pop
hlt
sub
rorl
out
mov
jno
push
or
inc
andl
dec
cli
dec
pop
push
rcll
dec
push
push
mov
outsb
ss
arpl
pop
cmp
cmpsl
mov
out
mov
in
imul
xchg
cmp
mov
sub
pop
pop
cmp
call
mov
ret
in
dec
jmp
adc
cmc
jae
cltd
jbe
inc
nop
inc
ljmp
jae
adc
push
fdivrl
fiaddl
dec
add
inc
sub
clc
loop
mov
cli
iret
iret
cmp
mov
andl
lods
outsb
sub
mov
inc
sub
sub
gs
ret
adc
iret
nop
shll
call
push
mov
sbb
inc
ret
and
cmpsl
sarl
sbb
hlt
dec
xor
test
js
push
jno
mov
outsb
xchg
stc
inc
clc
sbb
jnp
insl
xchg
inc
lods
fiadds
dec
test
gs
ja
cmpsb
or
enter
ja
sbb
push
cmp
sub
mov
jmp
jns
and
hlt
leave
movsb
mov
add
scas
loopne
pop
push
popa
inc
nop
mov
ja
nop
xchg
pop
sub
das
fidivs
ret
in
fdivrl
adc
dec
pusha
inc
inc
sbb
mov
data16
arpl
clc
leave
ljmp
mov
aas
jmp
hlt
cmp
stos
and
scas
mov
cwtl
lds
pop
push
stos
push
dec
das
jmp
xchg
cmp
xor
push
js
push
mov
sub
loop
mov
mov
or
xor
xor
jae
adcl
sbb
rcrb
rcrb
sbb
loop
stos
or
sub
mov
aaa
stos
add
mov
std
or
and
arpl
mov
out
sbb
adc
incb
jo,pn
push
nop
std
xchg
lret
out
into
adc
cltd
iret
cli
imul
ror
xchg
sub
aad
testb
fucomip
cmp
data16
iret
xor
outsl
mov
in
scas
cli
push
sub
cltd
pusha
or
out
insb
pusha
xor
xchg
cmp
mov
shll
jmp
or
add
sub
xor
hlt
mov
je
movsl
pop
add
out
je
fldl
mov
jns
inc
cmovae
shll
add
cmp
add
inc
test
shl
mov
pop
pop
and
mov
into
jmp
mov
push
push
in
jno
mov
adc
and
push
inc
out
rcrb
hlt
push
pushf
and
jecxz
xor
sub
stc
mov
add
cmp
ret
insl
xchg
or
jo
aaa
and
sbb
in
pop
add
in
sub
out
mov
js
cld
ss
mov
mov
int3
mov
add
jnp
sbb
cld
add
lds
push
jecxz
pop
inc
das
xor
sti
icebp
jp
repnz
iret
and
xlat
pop
jge
dec
jbe
in
lahf
dec
adc
dec
mov
ljmp
outsb
push
or
inc
jno
cmc
loop
popa
leave
int
cmpsb
sbb
lret
cld
lds
sti
dec
mov
fnstenv
pop
enter
push
es
repnz
mov
sbb
add
mov
clc
data16
push
imul
shrb
xchg
fistl
mov
idivb
or
pop
fstps
jge
cmp
int
dec
jnp
adc
jnp
adc
int3
and
hlt
cmp
ja
or
stc
mov
loope
jg
push
mov
iret
aad
push
cmpb
test
push
pop
xchg
inc
test
es
sti
sbb
and
dec
decb
stos
add
sti
push
sbb
test
insl
mov
xlat
cmpsl
lahf
pop
cmc
out
outsb
bound
xor
jno
mov
adc
pop
inc
int3
aam
ds
loop
xlat
bound
mulb
or
lcall
add
inc
das
nop
iret
and
cmp
pop
movsb
mov
sti
call
fistps
push
in
cltd
jge
mov
sub
cmp
imul
sbb
push
andl
mov
inc
orl
lods
lcall
pop
ljmp
mov
lea
leave
lods
cmp
rclb
sti
cmp
or
enter
mov
xchg
add
mov
loope
dec
mov
dec
in
out
xlat
fldcw
xor
xchg
adc
std
lock
out
addb
xor
aaa
lods
add
stos
jmp
cmp
xchg
ljmp
pushf
adc
sbb
cwtl
hlt
xchg
xchg
lods
dec
lret
lock
pop
mov
mov
fidivrl
sahf
push
mov
cmp
add
xor
or
adc
mov
adc
adc
cmp
cmpb
xchg
xchg
mov
popf
push
push
aaa
nop
shll
out
pop
popf
or
dec
mov
cmc
mov
aam
movsl
xchg
push
xchg
jle
inc
scas
sbb
adc
xchg
adc
jae
inc
sbb
push
lds
add
push
insl
jnp
test
push
cld
mov
sbb
add
xchg
xor
inc
je
lock
das
movnti
jbe
in
jmp
rcrb
icebp
mov
loop
out
xchg
in
lahf
and
in
dec
call
pop
call
jb
push
pop
stos
subl
jo
pusha
ret
imul
inc
inc
and
lcall
xchg
sbb
insl
pop
out
dec
in
and
fbld
jns
adc
std
add
xor
in
mov
out
dec
sbb
adc
adc
mov
pushf
mov
ss
shll
outsb
mov
pop
jge
pusha
rorl
cwtl
fnstsw
mov
cltd
lret
mov
cli
mov
mov
sub
cmp
mov
jno
push
xorb
and
or
in
pop
mov
shrb
iret
jecxz
rcrl
mov
xor
mov
mov
inc
call
mov
and
hlt
adc
jecxz
mov
adc
mov
pop
cli
in
or
jbe,pt
jl
mov
jae
fs
push
add
ret
out
fwait
jae
sbb
xchg
mov
sbb
into
pushf
lds
pop
push
cld
ss
shll
inc
dec
and
xor
jbe
lea
xchg
or
std
lret
jno
sbb
scas
daa
pusha
add
and
lret
jge
in
data16
mov
sub
push
sbb
cs
data16
xchg
or
mov
loope
mov
mov
and
decb
maskmovq
notl
dec
int3
inc
roll
js
lods
xchg
dec
mov
mov
pop
test
out
mov
loope
sarl
in
shrl
or
popf
push
cltd
jne
push
xchg
sbb
lret
xchg
add
mov
or
pop
pop
mov
mov
sbb
insb
xchg
je
mov
push
xchg
dec
test
cmp
cmpsl
or
and
jb
pop
mov
addl
jmp
outsl
jge
int
xor
sbb
cltd
jno
aaa
clc
sub
nop
ljmp
mov
sbb
pop
std
push
adc
dec
adc
lods
std
mov
mov
jae
mov
sub
pop
jmp
mov
dec
outsl
arpl
repnz
push
rcrl
aas
fildl
mov
add
sbb
pop
jl
adc
xor
dec
aad
push
rcrb
enterw
dec
cltd
rol
mov
lods
cmpsl
jno
push
xlat
pop
addb
mov
pop
mov
repnz
jg
push
movsb
dec
test
push
inc
cmpsl
data16
fsubl
sub
int3
mov
stos
mov
sub
in
cmp
mov
std
mov
mov
sub
js
int3
mov
fildll
pop
les
shrl
mov
push
sub
inc
push
out
xchg
sbb
out
fsubrp
int3
iret
sbb
push
into
je
cs
scas
jbe
add
push
cmp
or
mov
dec
repnz
jecxz
icebp
jg
ret
mov
push
pop
sbb
push
adc
jae
cmp
jge
mov
lock
mov
sub
out
push
cmpsl
xchg
mov
mov
xchg
int3
cmp
dec
sub
rolb
dec
cld
iret
xchg
cli
lods
dec
push
mov
or
add
xchg
adcl
arpl
inc
mov
jecxz
jb
ret
and
test
xlat
lret
testb
xor
push
push
subl
movsl
pop
lods
js
xchg
mov
iret
clc
mov
or
mov
cmp
mov
cmp
cmp
cs
test
pop
js
xchg
jl
xchg
imul
mov
xor
shll
cmp
shr
fmul
dec
push
fnstcw
dec
inc
inc
adc
jo
mov
mov
repnz
xchg
movsl
pop
mov
das
sti
add
xchg
mov
push
inc
in
sub
xchg
aaa
push
mov
lret
addr16
stc
mov
fildll
xchg
psadbw
in
cmp
mov
jmp
movsb
or
ja
orl
rol
cmpsb
orb
push
cltd
pop
out
inc
fucomp
icebp
popa
dec
aad
push
mov
bnd
jne
push
add
cmp
push
xchg
sub
mov
sub
pop
in
mov
cmpl
inc
inc
jge
shll
sbb
dec
xchg
push
cld
fstps
and
and
bound
data16
out
les
or
addr16
shll
jmp
mov
lahf
pop
mov
out
and
mov
fcoml
push
cmp
mov
stos
push
out
sbb
mov
fidivl
fbld
mov
mov
and
push
mov
insl
mov
or
pop
mov
test
shl
out
mov
and
stc
push
cmc
cmpl
xlat
mov
ss
sbb
bound
push
ja
inc
push
and
je
loopne
xorl
cwtl
jecxz
mov
mov
xchg
jb
pop
popf
lret
movsb
mov
imul
aaa
jp
adc
push
mov
dec
pop
pop
bound
lret
leave
loopne
in
push
mov
movsb
xor
pop
jb
repnz
rolb
lods
cmc
inc
push
push
lock
inc
xor
clc
and
push
dec
pop
lea
add
pop
popa
jmp
sub
orb
jp
loop
scas
push
loope
clc
sub
pop
stos
mov
mov
pop
push
lret
dec
and
inc
sarb
dec
push
push
out
fwait
scas
pop
add
and
clc
xchg
xor
adc
xchg
dec
outsb
or
pop
fcomp
pop
fdivl
fdivs
ljmp
lea
andl
mov
sbb
cltd
cmpsb
pop
popf
mov
pusha
fstp
pusha
sub
jbe
or
add
jno
push
mov
sbb
sahf
dec
xor
push
imul
ja
xchg
loope
xor
mov
sbb
mov
add
sbb
or
dec
das
into
xchg
mov
jnp
and
enter
mov
bswap
in
movsb
xchg
mov
lods
cmp
leave
or
add
cmp
or
hlt
lret
mov
shlb
int
bound
test
stc
pop
scas
leave
pop
xor
inc
mov
and
pop
bound
jmp
mov
inc
sub
repz
sti
popf
cmp
mov
test
or
mov
addl
test
jbe
xor
add
data16
adc
stos
das
mov
ja
jg
push
lods
std
jnp
popf
js
push
mov
iret
and
aad
ds
or
in
xor
add
shlb
mov
jbe
adc
mov
or
xchg
jns
sub
in
cmc
sub
push
push
repz
mov
gs
jmp
xchg
jl
shll
aas
mov
test
daa
mov
sti
and
mov
jae
std
pop
sbb
add
jnp
xorb
and
ss
mov
cmpl
pusha
js
je
or
xor
fidivrl
andb
sub
xchg
cmp
mov
call
sar
push
jmp
mov
mov
aas
adc
jmp
lds
das
jmp
fnstcw
sub
mov
je
jno
pop
call
cmp
and
fmulp
pop
cwtl
inc
dec
in
sub
jp
mov
imul
sub
in
in
add
cs
push
add
jl
push
lods
cmp
cmp
and
and
outsl
push
jp
cwtl
ret
pusha
addb
and
jl
rcll
push
jge
push
out
xchg
daa
mov
loopne
stos
cld
push
mov
sub
dec
cmpsl
test
repz
push
sub
mov
idivl
push
leave
dec
cli
push
push
mov
fs
roll
dec
jg
sub
loope
aam
xchg
insb
nop
and
in
mov
jo
xchg
cld
add
mov
mov
xor
pop
push
into
enter
pop
lret
cmp
xchg
jne
movsb
sbb
sub
push
inc
push
cmpl
pusha
pop
aad
mov
movsl
xchg
push
mov
mov
fsubl
mov
shl
pop
cli
mov
pop
shlb
clc
pop
test
dec
mov
cmc
sarl
out
sti
pusha
xor
mov
sub
inc
mov
fisttpll
cmpsl
xor
push
pop
rolb
addb
bound
pop
sbb
jae
or
xchg
push
jb
inc
lock
inc
jle
out
imul
mov
cmp
xchg
in
cltd
sub
add
jecxz
lret
mov
xor
in
cmpsl
outsl
fs
scas
int3
loopne
xor
call
add
jg
jno
insb
push
xor
sahf
shll
push
sub
subl
push
cmp
lea
je
jae
lds
sub
sahf
scas
cmp
dec
push
or
mov
and
insl
sbb
inc
shlb
test
xchg
in
push
pop
andl
push
test
jmp
sub
repnz
and
inc
push
lcall
or
pop
sarb
mov
pop
adc
cltd
dec
mov
adc
inc
jae
xchg
adc
mov
ret
xchg
jp
in
daa
dec
fwait
inc
jge
jmp
loopne
push
mov
popa
jecxz
jb
sbb
adc
push
jg
hlt
int3
sbb
adc
xor
add
aaa
sub
push
cmpsb
dec
xor
aam
negl
enter
inc
cmp
xchg
mov
out
test
lods
adc
insl
sub
dec
gs
mov
sub
inc
push
loop
cmc
xor
add
inc
add
dec
and
sarl
push
ret
mov
xor
flds
adc
xchg
dec
and
dec
or
cmpsb
or
rclb
jp
mov
and
cmc
sub
shll
adc
inc
pop
mov
push
dec
lock
xor
inc
sub
pop
jae
cmp
imul
mov
mov
push
stos
inc
mov
adc
mov
xchg
jge
dec
jnp
push
shrl
cmp
fs
test
lret
sbbl
pop
lods
pop
addl
sub
mov
hlt
cltd
and
cmp
mov
xchg
add
fisubrl
fbstp
dec
mov
fisubrl
cmp
push
dec
cmp
mov
sbb
std
jb
fistps
inc
leave
in
and
fldenv
fnsave
jle
lds
jp
insl
mov
out
mov
pop
jmp
loope
push
mov
pslld
call
div
cmpsl
inc
mov
mov
sahf
test
mov
add
mov
pop
shrb
pop
addl
ret
push
sbb
fdivl
sub
mov
mov
pop
dec
mov
fnstsw
pop
addb
ja
adc
imul
fsubr
mov
test
in
mov
mov
mov
insl
aad
daa
repnz
out
loope
jns
in
add
mov
and
sbb
mov
je
icebp
sbb
fisubl
dec
popf
rcr
cmp
sub
fsubr
mov
and
push
into
aaa
sub
and
add
jbe
lods
jnp
arpl
mov
jmp
inc
dec
and
popf
aaa
mov
popa
std
and
dec
pop
arpl
test
test
out
xchg
shlb
or
pop
jmp
xchg
js
je
out
pop
out
dec
stos
jl
cmc
negl
cmpsb
jb
mov
stos
repnz
cmpsl
mov
rclb
and
movsl
pop
add
cmp
ret
into
xchg
inc
imul
iret
loope
es
test
xor
insb
xchg
into
mov
jge
sbb
mov
fs
ja
add
imul
fnstcw
xor
jne
cmp
mov
fs
xchg
pushf
daa
sbb
in
fsubr
and
jp
fistl
and
inc
es
lods
orb
mov
fs
in
pusha
add
jge
xchg
or
outsb
pop
outsb
mov
jge
inc
enter
sti
in
mov
jno
jnp
sahf
mov
xchg
sub
push
cmp
or
inc
mov
popf
out
lods
dec
dec
orl
nop
jbe
iret
lret
and
mov
jmp
inc
cmc
inc
in
jle
out
lcall
or
imulb
cmp
and
pusha
cli
inc
push
dec
jno
cltd
dec
loopne
sub
pop
addb
dec
pushf
pop
inc
push
sub
sahf
jl
push
mov
fs
fldt
lods
mov
dec
imul
shlb
xchg
mov
mov
pop
jno
add
sbb
mov
data16
fsubrs
and
int
lods
jns
lret
pop
in
js
mov
rcll
mov
mov
xchg
popf
cmp
pop
sub
rcll
mov
lods
pop
ret
lea
jmp
and
mov
dec
arpl
mov
mov
mov
cmpsl
movsb
shrl
sub
inc
add
inc
xor
sub
je
sti
sub
inc
push
aas
xor
test
pop
cmpsl
popf
and
addr16
fdivrp
xchg
xchg
push
sbb
rorl
std
and
sub
inc
or
inc
cmovge
and
cmp
mov
mov
cmp
push
push
mov
mov
sub
hlt
mov
jbe
lea
sbb
frstor
pop
mov
test
iret
and
adc
test
adc
sub
clc
push
mov
shr
jp
mov
xchg
aad
out
jne
test
jecxz
fmul
loope
mov
pop
frstor
mov
fimull
xchg
in
xor
xchg
stos
xchg
popf
pop
mov
adc
shlb
sub
roll
pop
jp
aam
pop
sbb
xchg
mov
ja
jb
mov
mov
mov
adc
lea
in
iret
jl
out
movsl
cld
jecxz
dec
cmp
inc
out
icebp
nop
cmp
cli
arpl
in
ljmp
jge
add
pop
into
adc
mov
jecxz
insb
jbe
xor
push
push
lock
scas
mov
jmp
or
roll
fdiv
mov
dec
jb
sarl
shll
sub
cmp
leave
sbb
std
rolb
lock
cld
clc
in
mov
xchg
repnz
int3
xchg
ret
inc
ljmp
addr16
push
test
js
fwait
je
adc
mov
cmc
rcr
in
adc
call
pop
dec
sahf
or
ds
dec
jecxz
ss
cs
lds
shrb
push
and
je
and
xor
or
mov
mov
or
popf
mov
adc
rcrb
shrb
mov
mov
mov
cli
stos
cmp
and
or
mov
loope
movb
sub
das
in
inc
outsl
idiv
mov
fistpl
cmpsb
mov
and
sub
bound
pop
dec
rorb
repnz
fwait
insl
mov
or
jne
imul
cmp
or
xchg
jnp
add
cmc
xor
pusha
dec
stos
out
inc
push
or
dec
mov
mov
stos
pushf
sarb
xchg
mov
mov
or
inc
pop
jecxz
pop
rcll
cmp
aam
sub
adc
sahf
jg
xchg
fwait
rol
xchg
pop
and
stos
ljmp
push
loope
mov
nop
clc
in
mov
sbb
inc
lods
ret
test
mov
bound
das
xor
gs
ret
dec
iret
mov
xlat
mov
ljmp
xor
mov
xlat
pop
adc
push
shlb
lret
test
dec
cwtl
pop
dec
pop
imul
mov
xchg
push
cmpsb
pushl
sbb
cli
jbe
cmc
cmpsl
out
test
mov
xchg
sarb
mov
pop
jns
lcall
out
pushf
aas
lods
sub
aad
pop
mov
shll
pop
adc
mul
cmp
dec
or
mov
imul
fs
aas
in
xor
nop
or
jmp
lods
sbb
cs
notb
or
decb
out
jmp
mov
jl
xchg
jmp
adc
popa
jge
mov
sub
shlb
xchg
mov
dec
xchg
xchg
mov
pop
pop
fcmovnb
inc
adc
sarb
xchg
cmp
imull
sarl
imul
adc
ret
add
imul
or
xorl
shufps
sahf
adc
xorb
testb
out
dec
push
arpl
addr16
add
xchg
jns
push
mov
out
mov
sahf
and
or
cli
std
scas
ret
lods
mov
add
mov
sbb
pop
or
fldenv
ret
mov
aam
repnz
mov
icebp
sti
push
inc
outsb
lret
pop
dec
lret
out
and
stos
xor
sub
imul
jbe
xchg
pop
adc
jmp
das
rcll
dec
pop
and
xor
and
xor
insb
sbb
dec
lds
aas
xchg
stos
mov
fisubs
in
test
adc
mov
inc
imull
sti
fwait
fs
mov
ret
pop
and
mov
stos
in
dec
pop
sub
xor
clc
sbbl
sbb
xor
in
pushf
pop
jo
jle
inc
adc
mov
sbb
push
cmpsl
mov
std
jns
flds
cs
sub
js
xchg
dec
push
add
iret
pminub
mov
cli
inc
repnz
orb
pop
rcl
mov
xacquire
lock
mov
jbe
cmp
cmc
xchg
fnstenv
shl
dec
movsb
lea
mov
mov
or
or
lds
sub
xor
pop
pop
push
dec
ss
aas
pop
jns
ja
orb
add
hlt
or
aas
bound
aas
scas
jb
leave
and
outsl
and
cmp
xchg
adc
jne
mov
jl
jle
das
lds
imul
js
imul
daa
insl
push
popa
add
loop
mov
sbb
in
sub
scas
mov
es
jg
pop
ret
mov
out
sub
jecxz
xor
andl
sub
sahf
dec
stc
test
int
divl
dec
cmp
scas
ja
daa
xor
jl
test
xlat
fmul
sub
dec
dec
and
test
je
xchg
fdivrl
sbb
xchg
dec
xchg
jb
mov
loope
mov
mov
jmp
xor
loope
mov
push
arpl
icebp
data16
in
inc
movsb
rorb
adc
gs
test
fcompl
jns
mov
out
add
roll
jnp
dec
stos
add
mov
push
dec
je
cmpb
cmc
pop
mov
add
and
jo
in
rcll
and
pushf
insb
and
aad
adc
das
add
cli
ja
out
push
add
insb
cmpsb
jnp
fmull
xor
ret
insb
mov
fistpll
mov
andb
loop
fstpt
cmpsl
into
roll
jge
or
mov
sbb
negb
push
mov
add
and
addr16
aas
loopne
daa
xor
andb
add
sbb
mov
mov
jmp
rcrl
push
sbbl
add
repz
pop
testl
inc
cmp
js
or
push
ret
adc
mov
push
push
stc
fisubrl
out
repnz
shll
xchg
dec
xor
inc
popf
ficompl
mov
inc
addr16
rcr
sbb
inc
adc
push
movsb
lea
xor
outsb
hlt
movsb
dec
or
data16
and
ret
fiaddl
and
and
sbb
loope
fdivs
mov
push
out
repnz
imul
out
add
jl
pop
xchg
rcl
int
push
mov
clc
or
pop
testb
movsb
adc
jbe
std
hlt
xchg
and
aaa
imul
int3
cmc
mov
into
dec
xchg
loopne
or
mov
int
adc
cmp
sub
lret
sbb
pop
out
adc
mov
or
in
lret
out
cmp
pop
inc
pop
leave
mov
loope
adc
cmp
push
add
rcll
xchg
sarl
bound
add
rcl
shl
test
cmp
jl
pop
repnz
out
adc
cltd
rcll
dec
roll
sub
jmp
add
push
push
in
mov
adc
sub
cld
push
and
add
ljmp
fs
ljmp
cmp
inc
mov
and
mov
mov
inc
push
pop
je
inc
jnp
lock
cs
ret
nop
inc
dec
jo
push
sbb
or
pop
ljmp
adc
xchg
push
insl
cmp
addr16
and
sbb
ss
xchg
bound
roll
std
xchg
pop
lods
and
mov
sub
in
xchg
sub
xor
jb
sbb
dec
sub
inc
or
sub
rcrb
popf
add
jge
loopne
int
mov
sub
imul
xchg
sbb
xchg
fadds
lods
and
and
sub
add
ror
and
mov
sbb
lods
cs
and
aam
cli
xchg
jmp
and
insl
mov
jle
cmp
inc
cltd
cmp
xchg
cmc
pop
int3
or
enter
sarb
push
jo
xchg
data16
pop
mov
out
jno
add
ljmp
hlt
leave
push
push
jecxz
cmp
das
pop
jl
sbb
push
data16
push
clc
data16
cmp
arpl
jne
cmp
dec
push
adc
repz
imul
adc
jno
xor
lea
std
and
push
ret
inc
pop
mov
test
sub
ja
jp
ds
dec
rclb
cwtl
mov
jb
std
jmp
push
and
pop
inc
pop
push
pop
cmp
push
mov
fwait
mov
movsl
imul
int3
lret
jmp
ja
aam
dec
sub
inc
sbb
cltd
ret
or
andb
jae
in
mov
add
inc
paddd
mov
and
sub
sub
xor
daa
mov
out
scas
jp
xchg
bound
mov
adc
nop
adc
xchg
jb
adc
fdivs
outsb
out
or
dec
xchg
out
mov
dec
cmp
sub
sbb
js
mov
aas
jg
mov
into
inc
mov
repnz
mov
aam
dec
sub
cmp
lds
or
out
fdivrs
mov
push
test
shl
lahf
test
arpl
fdivrl
cwtl
mov
aaa
lahf
lds
adc
fstl
lods
mov
jno
ljmp
fiadds
testl
jb
insl
iret
das
mov
lock
push
sahf
test
fcomi
xor
jecxz
out
sub
pop
into
xor
inc
add
pushf
xor
popa
out
pop
or
sub
and
fnstenv
add
xchg
lret
ret
in
dec
add
insb
lret
lods
adc
jno
inc
inc
or
fidivs
sahf
jb
inc
shll
test
imul
adcl
in
lcall
pop
jns
add
clc
outsb
mov
into
call
les
enterw
adc
pop
test
push
jecxz
inc
xchg
cmpsl
sbb
mov
and
test
sahf
lods
sbb
ret
dec
dec
in
movsl
inc
lret
cmp
dec
xor
add
sub
fbld
push
lods
movsb
fimull
mov
fwait
xchg
xchg
daa
adc
repz
lock
xor
adc
mov
sbbb
movsb
lea
leave
sub
lock
sarl
xor
fcompl
js
fwait
xchg
popf
xchg
push
subb
setns
adc
filds
mov
xchg
dec
or
jno
fimull
mov
or
xchg
out
je
and
jmp
loopne
cmc
cwtl
or
or
pusha
sbb
pop
mov
and
call
aas
jns
mov
jb
mov
lods
mov
repz
iret
ficoml
dec
xor
push
or
enter
leave
shlb
ret
xchg
dec
fsubr
mov
popa
ficompl
rol
xchg
push
pushf
ljmp
push
mov
test
sub
shlb
xor
jg
or
stos
xor
dec
adcl
enter
xor
sbb
mov
negb
lock
int3
enter
mov
xor
leave
rcll
call
lret
pop
call
cwtl
push
lds
sbb
adc
mov
pop
jecxz
fs
ret
mov
add
or
jb
pop
adc
clc
subb
sbb
lods
addr16
mov
xor
inc
fs
cmp
lea
js
mov
inc
imul
jle
adc
bound
loop
mov
jle
push
sahf
in
adc
loop
rorb
int
fldenv
cltd
and
stc
fwait
mov
inc
enter
push
mov
bound
inc
xchg
shrl
adc
adc
in
or
int
cltd
jae
and
and
jmp
push
xor
and
mov
sub
orb
sarl
jo
loope
pop
lods
jnp
jle
scas
fcoms
cmpb
stos
aad
mov
xchg
cld
cmpsb
fisubs
push
mov
mov
and
sub
loop
push
and
dec
mov
sbb
or
stc
call
sub
lahf
test
cmpb
adc
dec
xchg
push
outsb
loopne
outsl
dec
in
dec
xchg
in
xlat
daa
adc
jns
mov
pcmpgtw
mov
insl
cltd
lods
shlb
les
testb
dec
pusha
inc
inc
or
rcl
mov
pop
ja
push
push
jae
adc
outsb
int
filds
jne
jns
inc
ret
cltd
vmulsd
xchg
adc
pop
lret
adc
or
fildl
aam
inc
int3
sbb
push
and
mov
repz
jl
insl
sti
dec
cmpsb
bound
popa
ret
xor
cwtl
xchg
cmpb
mov
or
ficomps
cld
push
in
mov
testb
pop
pusha
js
stos
aam
insb
dec
imul
inc
clc
sbb
into
dec
sbb
stc
sub
pusha
pop
adc
pusha
out
inc
imul
xchg
xor
sbb
pusha
add
sti
fstp
push
sbb
iret
adc
mov
mov
sbb
jmp
lret
xchg
inc
mov
es
imul
add
lods
mov
iret
xchg
jbe
mov
xchg
punpcklbw
and
xchg
aaa
loop
test
out
daa
insl
call
and
insl
adc
push
inc
mov
out
pop
stc
arpl
jp
fwait
arpl
and
push
stos
xchg
mov
xor
add
test
dec
js
jb
cltd
lock
in
fwait
arpl
dec
and
mov
xorl
dec
push
out
ss
jnp
loope
ljmp
out
sbb
inc
xlat
sbb
aad
cmp
xchg
sub
mov
pop
or
jg
lcall
cli
cli
jbe
dec
loope
fadd
sbb
icebp
mov
nop
fs
cli
nop
rorl
nop
jl
cmp
pop
cmpsl
sti
pop
out
popf
addr16
xchg
cmc
sub
jb
fdivl
aas
dec
mov
push
mov
mov
or
xor
jmp
sbb
bnd
lods
cmpsl
push
in
loop
ret
mov
jns
add
and
mov
mov
cltd
inc
cmp
loop
into
xchg
popa
in
ret
adc
pushf
inc
lret
lock
xchg
fcmove
mov
rcll
jecxz
cmp
adc
dec
push
int
add
xchg
out
bound
rcl
push
pop
out
stc
xchg
dec
lods
sub
add
xor
fwait
insl
into
out
sub
loop
cltd
jns
loope
cmp
jae
enter
mov
mov
inc
adc
pop
lcall
mov
push
pop
scas
lahf
lods
and
adc
les
fcoms
repz
shl
aaa
pop
dec
aaa
out
int3
lahf
popf
and
xchg
data16
add
out
test
inc
inc
fsub
mov
inc
inc
mov
shll
test
pop
push
adc
sbb
xchg
mov
jo
iret
xchg
pop
movsb
stos
or
mov
fiaddl
movl
insl
notl
addr16
pop
xlat
push
or
ss
adc
mul
or
inc
fisubrl
sarb
std
stos
sub
adc
sbb
fucom
iret
cld
mov
pop
lret
add
jo
fsubrl
cmpsb
fwait
rcrl
or
insl
das
shr
cltd
dec
sbb
out
xchg
pop
clc
xor
and
cmp
iret
lea
jno
imul
cmp
pushf
xlat
push
outsl
loop
push
mov
xor
iret
mov
lock
mov
or
and
jle
loop
adc
iret
ja
mov
lcall
pushf
jns
test
ret
mov
jae
cld
jns
mov
mov
ljmp
and
dec
fisubrs
pop
cld
xlat
cwtl
sbb
mov
pop
cwtl
stos
mov
out
or
push
cmpsb
add
enter
or
fstpt
lahf
sub
outsb
inc
arpl
push
lds
into
jle
mov
inc
xor
loope
or
loopne
dec
stos
adc
mov
pop
test
imul
call
dec
test
in
test
dec
mov
jne
or
or
or
in
repnz
pop
fsubl
jg
aas
push
push
mov
insb
sub
add
cmpsl
xor
testb
xor
xchg
nop
mov
enter
fistpl
pop
aam
pop
dec
add
adc
xchg
in
sub
fldt
aam
test
add
shll
or
outsl
in
divb
cmp
add
or
outsl
xor
pop
aas
ljmp
movsb
fiaddl
xor
pushf
int3
insb
into
mov
mov
cmpl
in
aam
ficoms
xchg
adc
push
psraw
and
test
outsl
push
pop
or
pop
out
pop
sbb
popa
fmul
mov
pop
pop
iret
ret
out
out
mov
in
cmp
push
out
push
adc
jp
out
andl
fidivrs
adc
add
in
cmpl
pop
lock
jne
aam
ret
and
in
adc
iret
jmp
mov
mov
loopne
mov
cmp
cmp
js
cmpsb
mov
jmp
mov
movsb
mov
xorl
add
idivl
jo
loop
adcb
jge
daa
jge
xchg
push
rcll
mov
jns
mov
shll
shll
subb
xor
or
test
cwtl
jns
int3
adc
in
scas
cmp
ja
xchg
aaa
mov
adc
dec
jmp
lret
xchg
sar
ret
mov
jne
es
notl
leave
jl
adc
add
sbb
bnd
mov
icebp
out
sbb
insb
je
into
sbb
daa
sub
stc
call
int3
cld
call
pop
lds
dec
adc
in
dec
jge
cmp
push
pavgw
jp
push
call
ljmp
ds
mov
outsl
ret
pop
stos
sbb
inc
mov
rcr
ss
mov
jae
in
mov
leave
or
mov
lea
mov
xor
pusha
sbbb
cmp
clc
test
mov
cld
inc
shrl
call
dec
addr16
lcall
mov
movsb
mov
leave
leave
add
inc
cmp
dec
mov
mov
jl
dec
jbe
jbe
daa
jl
lock
clc
inc
test
mov
je
push
sub
leave
lcall
xchg
stos
daa
cmp
push
and
cmp
push
pop
inc
call
lahf
xchg
cmpsl
fwait
rclb
sub
sbb
in
dec
jp
pop
nop
dec
pop
xchg
dec
add
and
je
and
lds
push
outsb
insl
cmc
mov
cmp
popa
pop
outsl
or
jnp
and
push
mov
andl
mov
ret
and
pop
cmp
hlt
cmp
outsb
jae
cmp
dec
ja
sarb
xchg
stc
xor
ljmp
mov
push
mov
and
push
sub
outsb
icebp
test
mov
mov
jecxz
and
pop
insb
pop
inc
lds
add
daa
test
jno
aam
dec
cmp
push
out
das
int
shr
ret
int3
ds
or
push
shr
cwtl
in
pop
mov
les
mov
adc
js
xchg
jecxz
adc
cwtl
mov
imul
ret
in
mov
ret
mov
add
aas
ret
sti
leave
stos
dec
or
jg
pop
lret
icebp
or
mov
inc
cltd
and
inc
sbb
jl
pop
bound
pop
dec
adc
mov
sub
pop
xchg
stc
lcall
mov
dec
sbb
loope
jmp
stc
fildl
jl
or
shll
data16
rcr
int
cmp
dec
jb
and
and
push
mov
lahf
mov
or
cmc
push
xorl
test
cmp
test
and
dec
popa
xchg
outsl
add
test
pop
pop
mov
ficomps
rcr
pop
int3
mov
loope
push
fidivrs
sbb
add
enter
mov
popf
dec
jecxz
out
test
sbb
or
inc
sbb
mov
adc
ja
cmp
fists
mov
mov
or
test
or
popf
cmpsb
cmpsb
dec
inc
add
mov
mov
xor
inc
in
push
mov
add
sbbb
addr16
mov
subb
xor
and
outsb
test
adcb
inc
cmp
mulb
cmp
xor
xor
fadds
xlat
mov
sbb
xchg
pop
in
aam
outsl
mov
repnz
sub
std
fsubs
jb
lahf
mov
mov
mov
xchg
clc
xor
cli
je
dec
pusha
outsb
push
lahf
sub
pusha
pop
jo
imul
push
stos
or
inc
or
xlat
gs
fidivs
pop
rorl
xlat
fistpll
mov
xor
push
lods
ja
xchg
or
cs
loopne
pop
mov
adc
test
jmp
std
xor
pop
cwtl
or
sahf
shrb
jmp
jp
mov
push
daa
rcll
or
push
inc
push
mov
imul
mov
int
sbb
fnstsw
fadds
or
outsl
push
cmc
lods
adc
adc
out
dec
rep
xchg
call
dec
add
mov
shld
sbb
dec
jmp
mov
imul
cmp
mov
pop
sbb
fisttps
int3
push
push
sti
xchg
mov
jg
mov
addr16
into
sbb
dec
cli
scas
adc
push
mov
sub
or
cwtl
out
shll
xor
xor
loope
cs
cmp
sarb
mov
xchg
dec
xchg
xchg
mov
push
xchg
pminub
dec
add
test
cmp
xchg
jbe
mulb
shr
xchg
dec
movsl
neg
out
push
push
pop
mov
cmpsl
jno
fwait
push
mov
imul
ret
cmp
jp
mov
pop
sub
mov
and
xor
mov
shrb
loop
mov
xchg
sbb
out
push
pop
aas
jl
mov
pusha
ljmp
or
xchg
imul
mov
mov
test
ficoml
mov
mov
imul
je
dec
mov
adc
out
dec
sbb
jbe
fdivl
cmp
bound
pop
lcall
cmpsl
aad
mov
push
fwait
mov
mov
mov
xchg
call
mov
popl
repnz
xchg
and
sahf
ds
sub
daa
in
sbb
pop
fcoml
movsl
fsubp
jecxz
stc
sbb
aad
pop
jae
cmpsl
sbb
jb
push
fwait
adc
dec
jmp
jmp
push
les
push
ja
inc
jle
adcl
xor
push
outsl
mov
pop
dec
subl
cmpsb
in
mov
jmp
iret
les
insb
lahf
add
cs
mov
sbb
push
ljmp
inc
mov
or
shl
std
cmc
sub
es
ret
mov
fistpl
cmpsl
fisubrs
and
sbb
rolb
lahf
test
fstps
adc
adc
cmp
inc
dec
faddp
pushf
mov
iret
shll
test
mov
xor
pop
leave
imul
mov
mov
lret
mov
jl
loopne
xor
pushf
xchg
mov
test
mov
int
mov
pop
or
push
fisubs
pushf
ljmp
shlb
push
mov
xlat
mov
xchg
fld
insb
mov
in
mov
jae
add
push
and
lds
add
push
stos
notl
cltd
jp
pop
movsb
xchg
inc
cltd
icebp
mov
xchg
push
add
or
into
sar
popf
push
adc
add
push
or
mov
fs
mov
cli
mov
mov
sbb
mov
mov
fcos
mov
mov
mov
mov
loope
mov
xchg
fimuls
sbb
fsubl
pop
aam
mov
les
xchg
mov
mov
xor
jle
push
pop
mov
xchg
scas
out
mov
int3
clc
icebp
xor
and
rcrb
lahf
fstpt
shlb
mov
neg
call
lcall
adcl
xor
enter
pop
std
push
add
enter
rol
shlb
jmp
int
aad
add
xchg
mov
nop
fs
pop
ja
or
addr16
inc
mov
mov
push
mov
add
fadd
mov
psubusw
clc
call
pop
leave
mov
adc
pop
out
mov
ret
push
das
jno
andl
lcall
mov
jne
icebp
lods
lock
in
sub
ret
mov
adc
cld
cmpsb
icebp
adc
nop
sub
frstor
jp
cmpb
add
push
xchg
mov
fisttpll
cwtl
xchg
mov
outsb
movsb
jbe
ror
neg
xchg
xlat
in
insl
xor
in
fsubrs
sbb
pop
adc
lods
sbb
push
movsl
xor
jno
std
leave
xor
pushf
push
mov
shl
add
bound
insl
push
jns
xchg
inc
je
cld
hlt
imul
aas
jecxz
jcxz
inc
imul
mov
pop
test
mov
cmp
loope
and
dec
xchg
lret
int3
repz
cs
pop
je
inc
and
mov
xor
imul
bound
loopne
leave
hlt
sahf
imul
mov
lret
flds
cmc
dec
push
mov
sub
mov
sbb
mov
inc
mulb
mov
ret
data16
cli
cmp
mov
popf
cwtl
imul
bound
ret
xchg
cwtl
mov
mov
cmc
jmp
jbe
mov
imulb
cmp
push
pop
push
push
mov
ja
ret
ja
mov
mov
mov
movsb
jle
aam
ljmp
sti
scas
in
pop
adc
cmp
pushf
pop
dec
lcall
xchg
hlt
int
push
loope
jns
cltd
xchg
aad
call
push
mov
sbb
sub
hlt
sub
in
xchg
mov
movsl
xchg
pop
icebp
int
cmp
and
add
lock
push
mov
in
xchg
and
mov
pop
pop
rolb
cmp
rcrl
mov
mov
cli
pop
pop
not
lret
or
out
jno
mov
les
sbb
popa
imul
ss
add
lods
pop
sub
push
cwtl
stos
or
cmp
jb
jl,pt
push
les
arpl
pop
aam
mov
xchg
or
push
ret
pushf
add
push
cmp
push
jle
cmp
lock
mov
mov
mov
ret
data16
sub
hlt
xor
div
jmp
jg
xchg
push
mov
out
addl
ret
scas
or
xchg
lea
and
popf
add
lods
sbb
dec
and
dec
ss
pusha
inc
push
mov
mov
cmp
jecxz
add
cltd
out
popl
clc
inc
push
jns
sbb
aas
jno
adc
add
repnz
js
loopne
xor
pop
mov
push
test
xor
cmp
jb
fstpl
add
ret
push
rcr
pop
rcr
icebp
in
or
in
add
popf
cmp
and
pop
lret
xchg
les
jecxz
sbb
mov
inc
push
inc
cld
mov
iret
stos
lods
out
lcall
mov
repnz
or
xor
jmp
xchg
test
loopne
test
push
pop
xchg
inc
gs
push
mov
jle
pop
mov
jbe
mov
sub
cmpsl
fwait
mov
insb
pop
movsl
pop
jge
lods
aaa
xchg
mov
mov
test
rolb
ror
jge
ret
cli
cltd
xor
mov
push
jns
push
push
iret
and
sub
clc
cmpsl
inc
jns
movsb
std
xor
les
push
mov
mov
and
push
push
or
jnp
jmp
cld
sub
rorb
xor
sbb
outsl
divb
jb
mov
std
inc
push
lods
xor
pushf
push
add
push
sbb
nop
ficomps
ret
cwtl
loopne
mov
enter
xchg
sub
in
pop
insb
mov
stos
jp
rorb
xor
adc
sbbb
nop
gs
ret
xchg
enter
push
iret
jae
adc
std
loop
test
mov
insl
dec
jo
lea
xlat
clc
xchg
adc
mov
clc
in
jle
xlat
mov
call
xchg
or
call
mov
jo
test
jle
dec
mov
push
ljmp
xchg
sbb
aam
int
or
mov
lret
and
je
pop
inc
pop
test
dec
lea
cwtl
mov
imul
call
jmp
push
jecxz
jnp
subl
lcall
loopne
dec
push
cli
loope
mov
call
andb
add
dec
and
or
inc
fimull
fidivl
inc
add
outsb
jns
out
dec
int3
dec
push
push
sbb
push
loop
inc
mov
adc
or
push
out
inc
mov
stos
xor
hlt
das
jge
int
xchg
xor
outsl
rcll
outsb
in
orb
push
sbb
hlt
inc
mov
push
cmp
out
or
mov
push
test
xchg
repnz
shl
jp
inc
inc
or
mov
out
or
mov
lret
out
sbb
lret
outsb
cli
xlat
cmpl
insb
jecxz
adc
xor
pop
inc
push
icebp
inc
adcl
pop
shrl
sarb
roll
push
in
push
and
ja
repz
lods
mov
xchg
mov
mov
inc
das
jb
ds
or
fisubrl
pop
cmp
pop
gs
jbe
arpl
cltd
bound
fldt
dec
cs
es
and
jl
pop
mov
jae
mov
in
mov
movnti
lret
xchg
shrl
cmpsb
cmp
mov
adc
inc
dec
int3
mov
push
insl
in
add
stos
sub
dec
dec
notl
out
jl
movsb
aad
inc
cmpsb
xchg
repz
stc
add
in
dec
dec
xchg
out
scas
es
or
sub
outsl
test
lods
or
mov
cmpsl
adc
test
mov
cmp
xor
mov
es
lea
cmp
pop
js
stos
mov
mov
cmp
gs
push
cli
divb
inc
aaa
push
fcompl
data16
push
fs
incl
add
pushf
in
std
adc
aam
imulb
pop
sub
dec
or
icebp
jl
jmp
je
and
testl
test
in
jns
xor
neg
sbb
push
lock
fdivr
jp
jecxz
mov
pop
jle
pop
dec
adc
ljmp
mov
push
inc
pop
sub
mov
mov
pop
pop
sar
mov
or
dec
and
daa
or
lcall
paddq
shl
pop
xchg
ret
mov
testb
sub
xchg
repz
out
enter
lds
movsb
pop
dec
xchg
add
xchg
loop
mov
insb
call
jmp
rcl
pusha
sbb
mov
imul
ljmp
push
repnz
mov
cmpb
cmp
xor
lahf
movsb
cltd
shlb
mov
mov
jo
add
jle
inc
je
dec
sbb
std
jg
and
stc
mov
cmpsl
mov
leave
adc
icebp
fstpl
in
adc
pop
mov
jl
jno
adc
push
mov
out
sbb
mov
enter
in
push
or
mov
adc
push
xlat
mov
jl
and
out
mov
lcall
in
sbb
jle
push
fiadds
test
fxch
enter
les
shlb
dec
inc
nop
add
xchg
mov
out
div
sub
dec
rcll
dec
inc
jo
push
cmp
pop
push
aam
and
faddl
mov
sbb
cmp
test
inc
xchg
mov
inc
popf
loopne
mov
sti
sti
dec
cmp
stos
int
push
sub
push
mov
or
sub
mov
push
add
lahf
sbb
dec
ljmp
shlb
andl
cmpsl
cmp
imul
cmp
out
cmp
xchg
lea
mov
mov
cmp
push
or
xor
jge
scas
outsl
jbe
addr16
inc
mov
and
addb
and
stos
sub
jns
ret
pop
stos
and
push
nop
cmp
jmp
lret
orl
ret
xlat
add
ret
push
imulb
sarb
push
push
adc
les
roll
sub
xchg
imul
sub
dec
out
fldl
outsl
push
call
pushf
es
rcrl
adc
or
xchg
pop
mov
pop
jo
test
dec
out
ret
mov
adcb
push
xor
jmp
adc
dec
test
pop
popf
in
cmpsl
push
mov
idivl
jno
in
outsb
push
idivl
testb
pop
dec
inc
xor
inc
xor
sub
int3
dec
push
mov
inc
jp
adc
outsl
fucomip
aaa
clc
popf
and
aad
fmuls
pop
cmp
jle
cmc
or
sbb
inc
ljmp
adc
mov
jne
lret
pop
mov
ja
cltd
and
sub
dec
inc
mov
call
jmp
cli
mov
cmpsb
sbb
movsl
inc
pop
jecxz
test
pop
xchg
sbb
inc
arpl
add
rcrl
call
int
adc
pop
leave
dec
cwtl
ljmp
pop
jg
pop
mov
push
fimuls
stos
mov
test
mov
aam
add
mov
xchg
pop
add
xor
jmp
sbb
test
imul
jecxz
mov
dec
or
mov
xor
jnp
pop
test
call
or
pusha
aam
jno
push
int
sti
out
push
shr
cmp
jae
in
shl
les
mov
xor
xor
jg
add
sar
push
rclb
daa
xchg
pop
mov
mov
xor
mov
xchg
inc
jo
push
xor
dec
loope
imul
imul
pop
movsb
dec
and
test
inc
sbb
xchg
stc
rolb
jb
cli
xor
out
xor
cld
xlat
pop
xor
adc
jne
mov
pop
ret
movsl
cmpsl
into
sbb
gs
pop
loop
adcb
ljmp
add
roll
cltd
fwait
mov
jnp
imul
xchg
in
daa
add
rcrb
popa
mov
push
xchg
and
shrb
icebp
push
movsb
dec
push
push
scas
mov
cli
xchg
pusha
sbb
fsts
je
in
sbbl
and
insl
test
jl
flds
jp
stos
mov
cmp
pop
and
cld
notl
dec
movsl
adc
or
or
mov
fnstsw
jl
or
test
aam
test
jle
xor
push
in
inc
adc
inc
cli
pop
lahf
pusha
cmc
dec
jae
cmp
cmp
or
cmpsl
mov
dec
pop
pop
inc
ljmp
mov
jae
imul
movsl
notl
mov
inc
sbb
cmp
mov
leave
rcrl
mov
into
mov
mov
adc
push
out
jo
adc
fld
gs
or
test
sub
ss
call
lock
rcll
adc
jae
and
divl
xor
ja
and
and
lods
pop
movsl
add
icebp
dec
loopne
xor
outsl
or
cmp
incl
cld
jl
ljmp
sbb
adc
scas
mulw
pop
loop
loop
sub
xchg
sbb
inc
xlat
xchg
sub
and
jae
adc
pusha
mov
cmpsb
aaa
jno
leave
and
xchg
clc
icebp
adc
rcll
shll
or
fidivs
mov
adc
cltd
cmpsb
movsl
cmpsb
or
mov
cwtl
xchg
pop
aas
push
sbb
jne
or
pop
loopne
test
and
pop
fsubrs
inc
cmp
std
sbb
addr16
mov
push
nop
mov
inc
fdivl
adc
cli
dec
mov
stc
jae
cmp
cwtl
xchg
jge
cmpsl
das
ds
and
movsl
aaa
xor
xchg
pop
jle
push
lods
loope
imul
cwtl
gs
jle
dec
jp
cmpsl
fstp
inc
jle
loop
ds
fsubrs
inc
std
or
adc
push
aam
lcall
add
mov
jnp
sbb
dec
fists
out
mov
iret
xor
mov
pop
sub
sbb
pop
jae
scas
aad
repnz
rolb
xchg
push
das
mov
xchg
inc
adc
jmp
push
repz
lcall
jne
int3
fsubs
and
call
inc
lods
push
insl
lods
orl
mov
lcall
jl
mov
ja
loopne
or
jne
mov
call
sub
int
addr16
ror
popa
xor
lcall
xlat
mov
rcrb
fldl
jnp
loopne
or
stos
in
jne
imul
xor
stc
sbbl
cmp
fdivs
dec
adc
icebp
jns
push
xchg
js
icebp
pop
clc
cmpsb
xor
mov
sub
rolb
imul
sbb
pushf
ficoml
out
loop
sbb
mov
out
jb
fistpll
sbb
inc
xor
sub
shll
mov
inc
push
sbb
insl
jl
sub
lods
sbb
push
xchg
unpcklps
shll
scas
add
jl
arpl
loopne
mov
lret
outsb
sub
iret
pop
sbb
jb
rclb
scas
ret
push
in
mov
orl
dec
cmpsl
sahf
xor
test
test
out
lret
sub
aas
cli
push
ljmp
lcall
xor
das
xchg
mov
andl
insb
and
mov
jp
sbb
mov
int
fnsave
sbb
inc
hlt
cmp
scas
cmc
outsl
shl
xlat
in
cmpsl
add
ja,pn
sar
push
sub
dec
push
jne
xchg
add
test
sbb
xor
fcomps
add
sub
sub
data16
leave
push
cmp
sbb
xor
push
mov
mov
mov
mov
ja
xor
pop
jle
dec
sti
cmpsb
orb
push
cli
jne
pop
jge
fldt
push
icebp
idivl
aas
adc
int3
mov
cwtl
cmp
lea
or
jp
pop
sub
cwtl
inc
sbb
rcll
cs
push
jno
xchg
jnp
sub
cmp
adc
lods
jmp
inc
das
sbb
push
mov
fbld
cmp
push
ss
jb
mov
ret
mov
les
jnp
lret
or
and
cld
mov
inc
xchg
dec
pop
pop
cs
or
fs
mov
dec
adc
in
dec
xchg
jge
mov
mov
orl
lcall
leave
aam
pop
mov
push
cmp
inc
mov
push
ds
dec
pop
adc
mov
lea
sbb
bound
hlt
add
adc
xchg
jnp
mov
outsb
arpl
jae
dec
pusha
dec
and
dec
hlt
out
das
xchg
jb
gs
jl
incl
mov
mov
pop
movsb
inc
mov
xor
sahf
lret
movb
jle
add
push
push
int
add
addl
loope
nop
mov
sbb
loope
dec
sub
sub
inc
add
outsb
or
mov
fnstenv
je
div
popf
es
cmp
daa
cmpsl
inc
lds
or
arpl
or
mov
cld
movsb
iret
add
push
cmc
and
test
push
out
xchg
adc
sbb
xor
mov
pop
aaa
in
nop
faddl
bound
inc
nop
leave
fldl
sbb
adc
int3
daa
mov
xlat
xor
clc
fsts
insb
nop
pop
xchg
jge
sub
cmp
sub
fdivr
les
or
mov
pop
fsubp
push
xchg
sub
dec
insl
fdivrs
mov
inc
lahf
sbb
pop
and
out
int
icebp
outsb
outsl
xchg
pop
xchg
neg
jle
xor
push
movsb
cmp
jecxz
test
dec
sbb
aas
push
arpl
pop
loop
jbe
jecxz
jg
clc
push
pop
or
add
or
and
hlt
insb
test
fcmovnb
mov
dec
push
repz
xchg
push
or
call
int
add
out
inc
jb
leave
push
cmp
mov
in
inc
pusha
mov
push
cmp
pop
sbb
leave
aad
and
jae
popf
jno
xlat
and
jo
pop
jb
push
ret
pusha
jbe
mov
shll
hlt
or
imul
pop
hlt
pop
mov
xlat
push
outsb
jmp
jle
xchg
push
jecxz
inc
add
jecxz
xchg
inc
push
sub
jl
das
hlt
sbb
fdivrp
test
loope
sbb
and
sub
push
data16
sbb
mov
aam
add
push
leave
add
push
stc
jns
cmc
cmpl
jbe
mov
mov
push
xchg
outsl
jle
lods
mov
pusha
mov
insb
lock
mov
or
inc
push
fisttpl
repnz
mov
sub
les
sarl
fcmovnb
testb
jnp
adc
repz
and
ja
sub
sub
add
inc
and
int
cmp
push
jae
shl
mov
stc
pop
into
and
rcl
arpl
and
jbe
sub
out
test
dec
rcrb
sub
pop
mov
mov
out
sbb
xor
out
repnz
jle
sub
xor
ja
sub
mov
popf
adc
cwtl
jecxz
loopne
and
mov
xor
and
or
stos
or
jae
dec
xor
jg
push
pop
or
test
push
out
cmp
cltd
push
subl
lock
jmp
pop
mov
push
mov
mov
adcl
nop
pop
loopne
jae
fsubp
lahf
psubusb
adc
dec
push
push
test
mov
lods
adc
xorb
or
xchg
and
jecxz
fldl
loop
xchg
xor
imul
jmp
push
mov
cld
rclb
hlt
shlb
es
push
data16
imul
push
push
popa
int
mov
vlddqu
addr16
stos
loopne
cmp
insl
or
push
xchg
aam
jb
sbb
and
aaa
mov
adc
lds
in
dec
ljmp
push
out
imul
add
jae
push
stos
mov
das
cmp
ja
mov
pop
add
xor
mov
out
scas
ja
sbb
push
ficoml
mov
dec
lea
stc
mov
cld
sub
inc
push
out
mov
das
dec
fxch
mov
stos
fwait
mov
nop
add
push
imul
pusha
cmp
xor
add
dec
mov
sub
add
int3
movsb
fiaddl
int
jno
pop
push
mov
cmp
xchg
test
addb
mul
mov
mov
cmp
xchg
in
push
mov
add
mov
in
pusha
out
push
enter
das
cli
dec
push
cmpsb
fisubs
loope
mov
xchg
sbb
lahf
jne
pop
mov
mov
xchg
adc
sub
iret
in
bound
mov
inc
mov
sub
ljmp
mov
icebp
add
push
into
inc
push
mov
jbe
cld
mov
jbe
mov
push
lahf
shl
sub
xchg
test
lahf
add
add
mov
xor
jp
jmp
test
xchg
add
add
inc
mov
mov
mov
dec
sti
mov
push
xor
in
cmp
clc
dec
cmp
inc
add
mov
out
out
mov
push
test
xlat
xor
xchg
inc
sub
aad
or
mov
mov
jnp
xchg
sahf
int
popa
movsb
jne
test
or
xchg
out
mov
mov
cli
in
mov
add
hlt
aam
sub
sub
pop
push
jge
xchg
or
int
xchg
cltd
jg
adc
mov
dec
testl
test
xor
xor
out
outsb
jl
cmp
cmp
ja
mov
je
sbbb
jmp
xchg
ss
jmp
ljmp
stos
daa
jge
dec
test
mov
rcl
in
cltd
dec
mov
sbb
outsb
sbb
insl
adc
or
lret
mov
push
pop
shl
ret
lds
mov
mov
pop
fwait
loopne
push
data16
sub
lods
lds
leave
push
pop
aam
fsubr
aaa
xorl
outsl
fs
mull
xor
inc
or
dec
aad
jmp
gs
dec
add
mov
xor
lahf
sbb
mov
jl
aam
lcall
dec
pop
popf
lock
xchg
push
pop
jo
mov
mov
cs
or
vunpckhps
imul
in
adc
lcall
mov
cmp
pop
push
jne
call
call
movsl
ror
movl
mov
lock
sub
add
fldenv
in
cmp
idivl
aaa
push
jg
adc
jmp
xor
push
sbb
push
dec
mov
ds
push
je
sub
outsl
sbb
sub
test
mov
sbb
leave
mov
rclb
jb
or
cld
sub
and
popf
and
sub
sbb
repz
lcall
cli
fisubs
loope
insb
ja
lods
inc
in
jne
dec
fdivs
test
fisubrl
sub
ret
rsm
int
imul
in
jg
sbb
dec
stc
mull
loope
fsubrp
mov
jmp
sub
push
dec
das
orl
add
ss
fmull
mov
mov
cmp
mov
mov
negb
cmc
push
and
add
loop
xor
fadd
in
test
xor
mov
sti
inc
sbb
cmp
call
add
out
mov
mov
cwtl
es
adc
push
stos
neg
mov
fcoms
daa
mov
mov
div
mov
jg
or
test
ret
test
pop
mov
and
in
push
fidivs
clc
imul
jmp
rorb
lock
jns
mov
repz
xor
jecxz
lcall
cmpsb
loope
push
inc
gs
add
mov
mov
clc
stos
pop
mov
add
cmp
insb
cmp
repz
loope
push
push
adc
repnz
sahf
rcrl
cmpsb
adcb
hlt
cmp
dec
int3
jbe
or
loop
add
sub
pop
fmul
sbb
jne
sbb
lods
xor
xor
adc
mov
mov
data16
jb
xorb
and
idivb
add
add
hlt
or
push
jnp
jmp
xor
add
mov
mov
mov
adc
sub
int3
sti
cmp
out
push
iret
or
xor
and
jle
aam
mov
lret
ret
adc
xor
mov
mov
mov
xorb
scas
lock
test
bound
inc
dec
loop
pop
pop
enter
lret
sub
dec
mov
jno
sbb
addr16
or
ret
sbb
push
pop
aas
vpaddsb
jmp
int3
xorb
ficoml
std
ja
aam
insl
fnstenv
adc
push
xor
and
mov
mov
mov
fs
xchg
mov
xchg
xlat
sbb
jmp
sbb
in
in
aad
add
xchg
add
jg
stc
mov
loope
ja
shll
and
test
int
mov
lahf
insl
ret
stos
loop
loope
arpl
xchg
push
adc
adc
test
mov
in
inc
or
imul
inc
sahf
imul
sub
or
push
xchg
cmp
xchg
mov
mov
mov
add
dec
adc
push
pop
sbb
pop
cld
push
fldcw
cmp
in
scas
out
lds
sbb
adc
outsl
ljmp
push
jle
nop
fnsave
dec
test
push
xchg
mov
bound
sbb
cwtl
jle
inc
fcompl
push
das
in
cmc
cmp
inc
dec
add
jge
test
jbe
or
mov
popf
cmpsl
or
nop
pop
mov
ret
xchg
mov
mov
xor
cmp
int
notl
sahf
cs
call
mov
cld
fwait
xchg
negb
movsb
sbb
or
sahf
dec
mov
mov
sbb
les
xor
mov
pusha
pop
add
sbb
jo
lods
fisttps
xchg
clc
xorl
inc
mov
sar
xchg
loopne
mov
das
outsl
arpl
inc
sbb
sub
jl
sub
mov
dec
mov
pop
pop
pop
movsl
inc
lcall
arpl
dec
pop
fwait
add
fildl
mov
or
sub
mov
and
and
into
adc
mov
mov
sub
and
ds
inc
icebp
push
fcomps
mov
push
das
mov
lret
outsl
lds
mov
hlt
pop
adc
call
outsl
inc
cmp
pop
dec
dec
pop
mov
push
push
stos
fildl
aaa
and
mov
cmpsl
and
sbb
arpl
mov
cmpsb
cmp
cmp
jmp
jb
aaa
push
sub
dec
push
stos
sahf
sub
sahf
test
lock
push
in
shll
es
mov
adc
je
xchg
mov
in
mov
push
sti
pop
cmp
mov
lock
movsl
inc
push
sub
xor
inc
cld
test
and
out
jne
lds
mov
mov
mov
adc
push
push
movsb
inc
dec
push
into
push
add
push
in
insl
or
lock
psubusw
sub
jno
test
dec
andl
sahf
mov
das
inc
pushf
bound
int
mov
cmp
popf
daa
rcll
aas
pop
push
rolb
xchg
pop
xor
andl
sub
sar
lret
xchg
leave
mov
mov
or
push
mov
jl
in
movsl
insb
cmp
jae
and
mov
mov
cwtl
inc
sbb
out
xchg
data16
aas
pusha
dec
dec
inc
testl
pushl
popf
mov
mov
enter
dec
cli
dec
jno
adc
mov
inc
xor
repz
sbb
sub
nop
mov
xlat
in
adc
xlat
inc
stos
sti
pop
cmp
adc
mov
cmp
cmpsl
xchg
sbb
cmp
shrb
scas
pop
sbb
dec
das
mov
mov
pop
std
dec
test
aad
inc
jnp
add
lods
sarl
aam
ret
dec
xor
shlb
dec
xor
dec
filds
mov
or
iret
lahf
cmc
leave
xchg
ja
or
mov
das
pop
lcall
insl
mov
lcall
incb
out
fcmovnu
movsb
lret
shrl
leave
popa
and
add
mov
fsubp
sbb
aaa
sub
pushf
aas
sub
scas
mov
jno
cld
aaa
loop
loope
inc
sbb
push
ret
and
mov
xchg
mov
xchg
xchg
subb
aad
fadds
jne
mov
xor
push
rep
aad
lds
leave
cltd
cmp
shl
jl
loop
inc
movsb
push
mov
push
lret
sub
lahf
bound
mov
scas
xchg
jbe
mov
negb
sub
leave
add
loopne
cmp
mov
pushaw
push
add
flds
cld
and
and
shrl
adc
and
jge
lret
jne
divb
adc
movsb
add
xchg
sub
outsb
sti
shll
or
inc
mov
sub
and
cmp
inc
insl
ss
pusha
dec
idivb
or
sub
dec
jno
stc
sar
dec
loope
js
es
loope
add
paddw
sub
pop
js
sub
mov
pop
sbb
cltd
in
jmp
icebp
or
mov
cli
popa
fcompl
pop
push
mov
movsb
shl
js
jmp
pop
fdivrp
sbb
out
adc
jg
jnp
in
leave
stos
sbb
aaa
imul
mov
mov
sahf
xor
pop
dec
stos
adc
or
xor
stc
jae
shrb
inc
mov
aad
insb
adc
adc
call
int3
adc
mov
mov
out
or
adc
dec
jne
xchg
jmp
movsl
notb
mov
shrl
ja
movzwl
cs
adc
add
in
dec
sub
push
cmp
imul
sbb
mov
xchg
adc
into
fstpt
add
pop
jo
or
lock
or
pop
test
pop
ret
imul
nop
pop
dec
bound
jecxz
jb
dec
mov
popf
out
inc
xor
cmp
add
xor
jbe
cmp
jmp
nop
fwait
xchg
add
les
xchg
adc
pop
popa
inc
into
add
bound
scas
adc
lret
inc
sub
leave
dec
push
test
out
enter
xor
movb
repnz
cmp
lret
lret
aam
push
outsl
std
cmc
addr16
negb
loopne
push
inc
fdivl
shll
mov
sbbl
clc
fdivr
std
pop
mov
sub
jb
pop
js
fmul
shll
push
stos
mov
add
enter
jns
and
jg
addl
sti
sbb
fstpl
dec
sbb
pushf
cmp
sti
loop
add
mov
rcll
sbb
aam
ljmp
inc
jmp
pusha
fwait
rcrb
gs
nop
xchg
inc
ficoms
in
popa
inc
dec
aas
pop
loopne
push
in
push
mov
popl
sti
fs
stc
mov
imul
xlat
push
or
push
pop
fstpl
stc
push
aaa
dec
in
sahf
sahf
jne
int3
and
test
mov
pop
mov
sti
adc
jo
movsb
pushf
xor
pop
repnz
adc
adc
clc
or
inc
lret
cwtl
insb
pop
xor
and
testl
push
add
xor
out
inc
sub
inc
mov
mov
daa
mov
loopne
or
pushw
stos
and
pop
in
cmpsb
les
clc
mov
sub
adc
xchg
pop
das
pop
mov
int
je
fst
sbb
mov
jle
dec
iret
push
mov
pop
in
or
pop
mov
jecxz
roll
nop
jo
or
or
arpl
in
shll
sub
jge
push
jae
pushf
add
mov
pusha
sub
xchg
cld
xor
fsubrp
dec
repnz
lock
and
call
inc
xchg
pop
jne
xchg
mov
lret
shll
xchg
ss
cmp
es
adcb
and
cli
sub
orb
stos
les
cmp
pusha
jne
mov
ds
stc
xor
cmp
ss
pop
xor
pop
fadd
ror
pop
xor
add
rcr
dec
pop
jle
adc
call
shrb
test
shrl
push
imul
pminub
cmp
pop
pushl
test
sbb
out
inc
add
xchg
dec
dec
push
xor
dec
imul
lret
or
xchg
mov
jb
adc
cmp
fistps
push
or
adc
scas
dec
dec
dec
test
or
and
xchg
mov
movsb
ficompl
movsl
inc
xchg
push
adcb
std
fiaddl
xor
and
xchg
aam
loope
inc
and
push
out
gs
push
aam
ja
jg
mov
sbb
imul
js
fs
sti
sbb
fisttpl
adc
int
iret
jg
in
mov
or
or
in
sub
cwtl
and
add
outsl
imul
repz
push
push
lcall
gs
fimull
test
push
xchg
sub
xchg
in
mov
sbb
or
push
enter
xchg
lods
jnp
push
enter
cmp
xchg
or
cmpsb
cwtl
ja
mov
daa
icebp
lahf
push
in
push
jmp
adc
xor
or
mov
mov
adc
popf
jle
xchg
imul
sub
dec
xlat
and
jae
mov
jnp
cmp
enter
sbb
jo
mulb
lds
pop
ds
push
in
cwtl
pop
shll
mov
fs
inc
aaa
mov
repnz
cmp
imull
cli
dec
push
mov
pop
pop
loop
push
inc
popl
and
outsl
rcrl
outsb
imul
push
sarl
xchg
xchg
jp
movsb
push
inc
enter
arpl
lret
repnz
stos
and
repz
dec
sub
cmp
push
movsl
sbb
inc
fists
dec
inc
outsb
push
push
mov
jne
jmp
rcl
mov
mov
mov
mov
jp
add
test
out
shrb
idivb
fildll
inc
sbb
rclb
enter
xor
das
jmp
mov
jmp
mov
jbe
dec
sub
arpl
lret
ret
enter
push
rcll
inc
dec
pop
sub
mov
stc
ficompl
jo
sbb
jb
aas
iret
mov
pop
or
push
xchg
sti
jbe
adc
cmp
mov
cmpsl
xchg
add
xchg
mov
pop
lock
jns
adc
cmp
push
pop
dec
pop
sub
aam
addr16
adc
push
addb
aad
fs
es
xlat
lock
mov
clc
pop
add
in
pmulhw
mov
jbe
cmp
pushf
dec
sbbb
jno
sub
filds
andl
sahf
daa
loop
and
aam
icebp
sub
sbb
mov
jnp
add
ficompl
dec
into
mov
lahf
fwait
fs
fwait
lahf
movsb
inc
fbld
or
dec
cwtl
adc
xor
leave
cmpsl
sbb
ret
clc
bound
xchg
pop
in
pop
lock
imul
mov
test
test
lcall
loop
inc
jae
or
mov
cltd
sahf
cmp
inc
add
es
pushf
cltd
and
aas
or
push
repz
rcrb
ds
mov
push
mov
ja
mov
mov
xchg
enter
push
push
sbb
adc
xor
push
cltd
aas
sub
push
in
imul
push
mov
xchg
leave
decb
mov
call
dec
xchg
and
enter
adc
pop
loope
add
push
and
push
sahf
adc
ja
xor
xor
outsl
xor
popa
inc
mov
mov
or
popa
sub
frstor
mov
fmuls
cmp
loop
aaa
call
pop
int3
jne
insb
or
add
pop
push
stos
enter
and
outsb
movsl
dec
inc
push
adc
test
jnp
popa
in
sbb
jo
loope
repnz
popf
mov
aam
ja
or
in
sub
add
ds
jne
adc
sub
cmc
or
popf
xlat
push
hlt
pop
bound
add
sub
pop
out
cmp
fldenv
shll
loope
cwtl
sub
dec
and
dec
negl
sti
inc
stos
xchg
mov
bound
push
int3
dec
xchg
test
lret
xchg
test
jg
xchg
mov
xor
cwtl
into
dec
mov
mov
sarb
test
hlt
or
dec
icebp
lahf
dec
jno
jle
mov
and
adc
xor
loop
sbb
dec
outsb
xchg
lods
jne
push
mov
ss
xchg
lea
add
insl
inc
lea
xchg
mov
pop
pusha
aaa
sub
into
lods
ljmp
lock
and
in
ja
push
adc
inc
sbb
je
xor
dec
mov
and
in
sbb
jge
inc
mov
add
push
mov
stc
out
jl
les
push
cltd
outsb
daa
pop
aas
and
cmp
addr16
aaa
mov
push
push
gs
xor
fiaddl
mov
fwait
cwtl
mov
addr16
xchg
repz
popa
mov
cmpsb
cs
test
rcpps
push
mov
adc
dec
jg
cmc
push
lahf
pop
scas
and
pop
push
xchg
and
daa
ljmp
dec
xchg
sarl
sub
pop
push
in
insb
push
loopne
pushaw
dec
adc
jecxz
fnsave
pusha
and
insl
int
aas
fucomp
aad
xchg
gs
xchg
and
pmulhuw
leave
test
mov
add
adc
mov
pop
call
sbb
fbstp
fisttpl
mov
sub
out
scas
sub
push
bound
repnz
scas
out
ret
js
mov
popf
xlat
into
sbb
pop
lock
and
insb
ss
loope
insl
adc
lahf
ret
push
testl
jp
sub
push
mov
or
xor
xor
lods
jle
mov
in
dec
insb
jb
mov
test
and
dec
call
inc
ffree
pushf
cwtl
jmp
pop
cmp
jl
fbld
ret
cmp
pop
pop
jmp
pop
cmp
push
push
clc
call
xchg
mov
jmp
pop
xor
cmp
repz
pop
cmp
ljmp
dec
jo
cmp
in
mov
add
fnstsw
test
jmp
mov
aas
and
movsl
ficoml
and
and
cmpl
les
or
ss
and
fimull
mov
jns
mov
jns
and
push
adc
insb
pop
fnstsw
pushf
dec
cld
jno
xor
std
add
push
xchg
shll
push
sbb
dec
mov
insl
xchg
iret
roll
mov
mov
push
cmp
lahf
push
aas
xchg
cmp
test
and
inc
cmpsb
cmp
and
jle
mov
cmpb
dec
push
jae
pop
add
inc
jecxz
adc
xchg
push
mov
mov
sub
pop
cmp
mov
imul
aam
or
mov
push
mov
cmp
xchg
jecxz
and
mov
jp
into
jmp
out
xchg
jmp
push
test
or
mov
lret
mov
stc
and
xor
imul
fsubp
icebp
dec
dec
push
cld
mov
loop
setne
sbb
out
inc
fistpl
stos
divb
ljmp
enter
mov
andb
adc
mov
cmp
fistl
imul
ja
mov
fdivp
lea
sub
mov
fisubl
iret
inc
jge
leave
mov
or
imul
mov
or
aaa
xor
js
enter
loop
repz
insl
insl
lods
ret
cmp
cmp
sub
push
popf
fdivr
add
lock
jno
push
hlt
ljmp
inc
sbb
popl
push
das
xchg
xchg
push
lods
hlt
push
sbbl
jae
xchg
pop
sub
loopne
shll
inc
sbb
dec
jl
ss
fsubrl
jecxz
lcall
mov
xchg
pop
js
ljmp
jmp
hlt
jp
imul
dec
out
nop
clc
push
int
cmpsb
jmp
les
sbb
das
pop
and
sub
dec
or
xchg
push
sub
nop
mov
sbb
push
insl
cmpsl
adc
push
cmp
adc
loope
add
pop
xchg
sub
imul
sub
jle
das
push
stos
jbe
scas
mov
sarb
xchg
in
mov
notl
imul
jno
mov
sbb
fcompl
stos
fs
hlt
dec
adc
das
or
or
fstp
lock
push
andb
mov
cmpsl
pop
ret
dec
mov
mov
pop
jbe
inc
xor
push
sbb
rorb
push
mov
arpl
pushl
fstps
and
jp
dec
ret
in
mov
fcompl
push
les
xchg
sub
xchg
mov
out
fwait
lock
jmp
stos
sbb
leave
in
push
movq
or
inc
and
aam
xchg
and
imul
dec
sub
pop
ret
cmp
sub
jmp
out
cmpsl
addr16
subl
sti
mov
jne
lds
loope
in
aas
and
jl
std
mov
and
push
push
pop
mov
cmp
cltd
push
out
cltd
js
mov
adc
lahf
inc
ret
gs
xor
pop
mov
ljmp
or
ja
add
mov
xchg
cld
rorl
sub
or
fdivs
lods
add
pop
mov
jns
jnp
mov
loope
mov
aas
add
icebp
ret
hlt
int3
cmpsl
out
incb
or
out
xor
sub
dec
mov
mov
dec
lret
dec
sbb
test
mov
jmp
sbb
inc
pop
mov
rcrb
and
int3
xor
mov
lds
mov
inc
int3
stos
xchg
insl
lret
enter
dec
in
out
push
iret
scas
insl
pop
sti
lcall
pop
testb
mov
fisubrs
imul
into
adc
arpl
cmp
adc
dec
jge
stos
in
push
loopne
and
jae
push
xor
push
cmp
xchg
int
pop
flds
adc
roll
in
in
insb
lods
adc
jnp
mov
inc
cmp
sbb
in
or
movl
dec
lds
sbb
cmpsl
dec
pop
xchg
xor
xor
addl
hlt
mov
lea
mov
daa
pop
pop
jnp
push
lock
aam
xor
ret
test
in
ja
je
xor
push
stos
push
mov
push
js
bound
ret
jmp
mov
add
dec
and
sti
sahf
mov
add
mov
cmpsb
imul
fwait
cld
loopne
insl
and
push
aad
push
shlb
aaa
ljmp
icebp
inc
push
xchg
scas
mov
sbb
add
insl
lret
out
enter
daa
mov
sbb
adc
fists
adc
jge,pt
out
test
xor
cld
or
inc
mov
ret
fstps
lret
movsb
shlb
inc
xor
fwait
xchg
out
fndisi(8087
sub
fmuls
ljmp
or
push
out
in
xor
adc
das
or
jmp
xchg
shrb
xchg
in
sub
pop
in
dec
cmp
jns
push
pop
mov
xchg
add
pushf
iret
jl
icebp
rcr
fcmovnu
adc
les
inc
out
or
les
push
divb
fsts
dec
xchg
add
rcrl
adc
xchg
test
and
fwait
or
xchg
adc
rcll
test
xorb
push
and
xor
ret
sub
mov
xchg
popa
pop
test
test
pop
sbb
sub
or
fidivrs
enter
jnp
in
mov
xor
xchg
out
repz
sti
mov
loopne
cmp
jp
mov
mov
xchg
fsubl
les
aaa
push
mov
mov
xor
and
outsb
lcall
add
mov
inc
pop
daa
dec
push
leave
in
or
push
dec
fimull
lahf
mov
jo
adc
int3
cs
lfs
and
repz
sub
mov
mov
dec
mov
dec
adc
add
pop
dec
xchg
push
imul
ljmp
inc
dec
sbb
mov
adc
jno
fwait
lea
cmc
sbb
mov
shll
int3
xor
arpl
xchg
jmp
shll
xchg
sub
mov
inc
jmp
movsl
sub
sub
mov
push
in
clc
push
je
imul
rcrl
inc
ja
dec
push
jne
cmpsb
iret
and
cld
inc
inc
aaa
dec
pusha
pusha
clc
and
sub
jnp
dec
lret
lock
aas
fldt
lret
scas
mov
call
call
cld
push
jecxz
pop
pop
ja
inc
stos
shl
fs
insl
movsl
imul
lods
add
loope
je
loope
xor
lret
aas
dec
mov
les
stc
fsubs
push
addr16
outsb
sub
sub
rcrb
or
or
test
in
inc
loop
test
push
pop
jns
sub
xchg
pop
mov
movsl
test
lods
add
push
cmp
and
dec
pushf
lahf
jge
mov
sbb
icebp
lods
or
add
sbb
shlb
add
adcl
push
fwait
sub
dec
inc
mov
out
dec
add
pop
out
mov
push
dec
push
inc
subb
dec
push
adc
filds
shll
sahf
fcmovb
mov
lret
jne
popa
imulb
popf
add
dec
icebp
int3
sub
sbb
test
mov
idiv
sbb
pushf
xchg
call
movsl
fs
jns
movsl
mov
popf
pop
and
movl
lret
test
add
mov
ss
cmp
aaa
jnp
cwtl
xchg
fadds
lods
push
cmpsb
mov
xor
jae
inc
icebp
sbb
add
and
xchg
leave
jle
pop
and
dec
jle
aas
xchg
and
dec
pop
xor
pop
cmc
adc
addr16
add
sbb
xor
sbb
inc
adc
hlt
adc
cmp
push
sub
mov
mov
mov
enter
xor
pop
jo
mov
jle
mov
testb
and
fwait
dec
mov
dec
stc
out
cmp
add
push
arpl
xchg
lds
insl
test
xchg
sub
jne
imul
mov
and
mov
imul
sub
gs
jmp
inc
xchg
adc
pushf
mov
jo
adc
mov
dec
xchg
cmp
in
icebp
jl,pn
xchg
rcll
out
hlt
sti
sahf
mov
inc
test
imul
mov
ror
mov
fdivr
arpl
shrl
scas
jp
ljmp
lahf
pusha
fldl
icebp
aaa
or
jecxz
inc
fadds
int
into
lds
scas
insb
dec
test
xor
movsb
jp
lods
sbb
add
call
inc
std
ret
loop
or
les
inc
mov
xchg
xchg
mov
ficoms
pushf
inc
arpl
push
push
cmc
jmp
adc
sbb
dec
and
adc
in
lods
sti
sub
rorb
inc
mov
jp
sub
add
xlat
je
mov
ret
fwait
cli
scas
push
add
ror
insb
sbb
pop
mov
ljmp
mov
cmc
loope
push
imul
sti
lock
scas
ljmp
pop
js
mov
jns
push
cli
push
movsb
int
mov
sub
xchg
jl
test
sub
addr16
dec
subb
inc
adc
lea
xor
sbb
shll
xor
inc
mov
xor
jge
mov
lods
sbb
cld
or
mov
or
pop
jbe
stos
adcb
lret
xchg
clc
bound
mov
cli
add
sub
movsb
jns
dec
add
fsubrl
and
jnp
mov
push
pop
sbb
inc
mov
cwtl
ret
in
clc
repnz
mov
int
jp
fiaddl
dec
icebp
xor
ret
push
insb
xchg
or
inc
ds
jae
and
pop
or
popa
xchg
inc
call
aas
setge
popf
enter
imul
test
stos
xchg
inc
xor
cmp
pop
mov
call
notl
stos
xchg
mov
mov
decl
pop
sub
int
sub
in
pusha
icebp
xor
xor
fistpll
ret
and
jl
aad
outsb
mov
xor
sbb
mov
mov
aam
or
cmp
sub
push
out
les
inc
movsb
push
dec
xchg
and
lods
push
test
icebp
sbb
sub
popa
cmp
add
mov
sub
push
fcoms
sbb
push
fdivrs
into
xchg
addr16
outsb
fs
scas
sbb
std
push
jge
pop
sbb
mov
loope
jb
testb
add
mov
loop
fstpt
sbb
cmpsb
jnp
loopne
adc
sbb
std
mov
lret
mov
cmp
mov
ss
mov
cmp
jne
or
pop
mov
dec
mov
fwait
lret
push
dec
mov
sbb
btr
and
dec
pushf
mov
aam
cmp
call
jno
push
imul
lret
jae
jo
push
cmp
into
push
sbb
enter
stc
pop
clc
imul
pop
cmp
les
mov
das
dec
sub
in
xor
xchg
mov
sub
aaa
and
js
dec
mov
mov
and
inc
jno
mov
enter
jg
aaa
jns
clc
mov
cmpsl
jle
fadds
or
clc
out
pop
fnstcw
lods
jns
aaa
sub
or
daa
cmp
sti
dec
dec
mov
fidivrs
sahf
punpckhwd
sti
jle
ljmp
xorb
aaa
jo
jae
popf
movsl
or
cmp
cmp
mov
mov
push
pop
mov
popf
sub
pop
fimull
aam
stos
addr16
popf
xor
add
arpl
in
shrb
xor
in
fistpll
repz
pop
mov
xor
sub
pop
mov
and
mov
pop
aas
sbb
dec
xorb
hlt
addr16
ja
mov
ds
jg
lods
stos
and
or
loopne
in
loop
cmp
or
xlat
fwait
xor
push
ljmp
cmp
cmpsl
and
push
loopne
sbb
pusha
cmp
orb
sub
popf
jo
xchg
inc
pop
dec
mov
or
push
jae
ds
adc
out
shl
xor
fcomip
loope
les
xchg
test
das
sbb
and
dec
cltd
cld
jmp
mov
sbb
and
aam
jl
imul
sub
sbbb
or
mov
ja
rolb
sub
divb
push
mov
std
inc
and
test
push
and
mov
aam
je
mov
jmp
mov
popf
rcrl
aam
xchg
and
push
mov
ss
push
push
and
sub
dec
jbe
cmc
push
fists
js
mov
mov
aas
push
jp
js
loope
daa
outsl
test
out
in
pop
jb
jbe
lods
dec
cmp
fistps
shrb
repz
sbb
sbb
insl
xor
ret
shlb
pop
push
jmp
mov
cli
push
imul
cmp
ljmp
sahf
outsb
fwait
mov
repz
leave
clc
imul
xor
out
out
insl
ss
lods
test
je
push
and
adc
sbbl
sub
sub
jecxz
xlat
sub
testb
cmp
xor
shrb
xor
test
mov
inc
xchg
daa
sbb
sub
out
sub
out
push
pop
jecxz
loop
les
sbb
mov
orb
inc
push
xor
mov
add
mov
add
and
or
mov
loopne
inc
sub
les
ljmp
and
inc
pop
push
push
into
and
sbb
fdivrl
int
jl
sub
mov
imul
jmp
jne
in
add
adc
sub
mov
push
jns
adc
mov
gs
fnsave
inc
xor
ss
out
push
and
int3
fstl
out
push
movsl
mov
sahf
cmpsb
in
jo
in
mov
test
mov
fistpl
leave
xor
test
add
add
and
outsl
mov
shll
mov
in
and
pushf
jb
aaa
pop
sub
arpl
jbe
sbb
bnd
xchg
push
nop
xor
jmp
in
push
and
nop
mov
mov
and
mov
scas
imul
cmp
pop
push
enter
mov
test
lea
ds
dec
pop
push
and
dec
lods
or
and
pop
inc
xchg
mov
ret
push
outsl
pushf
lock
mov
in
mov
push
js
fwait
test
insb
mov
cld
xor
mov
mov
pop
lret
movsl
ret
xchg
sbb
subb
mov
cmp
pusha
mov
addr16
xor
insl
and
adc
test
mov
cwtl
dec
xor
lds
mov
ret
pop
xchg
add
push
jae
insl
out
jo
or
lret
push
push
pop
das
adc
xlat
test
lcall
icebp
shrb
push
movsb
inc
ljmp
stos
mov
sbb
mov
push
js
lret
jne
ss
xchg
xchg
lahf
aaa
adc
inc
lret
mov
mov
add
and
fldcw
outsb
outsl
and
icebp
clc
psubq
inc
mov
jno
mov
aas
std
andb
xchg
cwtl
insb
lea
xchg
xlat
pop
negb
jo
cmpl
addr16
hlt
push
fs
int
jmp
lock
jle
pop
xchg
daa
cmpsb
mov
adc
xor
js
les
mov
clc
and
data16
xchg
pop
repnz
enter
imul
addl
fcomi
mov
or
outsl
shrd
sub
insb
lahf
outsb
sarb
or
add
imul
cmp
xor
jne
push
and
jp
shll
mov
cmpsl
dec
mov
sbb
xor
cs
add
adc
adc
or
into
cmp
outsl
cld
outsl
icebp
fs
addr16
jecxz
push
lods
stos
bound
inc
ja
cmc
push
inc
in
pusha
add
xor
shrl
fsubs
filds
mov
sub
js
icebp
notl
xor
dec
mov
xor
pop
in
fwait
push
es
sbb
int3
sbb
addr16
dec
dec
or
add
jb
int3
dec
arpl
fdivs
loop
jno
xor
mov
arpl
imul
and
out
jmp
daa
in
loope
jecxz
xchg
je
gs
gs
leave
push
aam
xchg
shl
fildll
punpckhwd
add
out
push
push
add
and
inc
jb
sbb
fadds
and
jp
mov
clc
mov
js
mov
fisubrl
jl
sti
sub
loop
push
call
push
cmpsl
sbb
xor
or
or
lods
push
lods
push
out
mov
jle
mov
and
out
cmp
pop
pop
cld
jle
inc
pop
lret
test
fldl
call
test
inc
pop
mov
sub
mov
popa
test
push
xor
add
into
insb
jp
push
jge
fmuls
push
int
push
push
fistps
ret
xchg
jbe
and
ffree
mov
or
mov
and
rorb
insb
dec
imul
adc
xchg
les
fisttpl
andl
mov
addr16
repz
pop
mov
cmp
pop
xchg
cmp
push
jb
xchg
call
into
movsl
adc
data16
add
mov
popf
mov
outsb
enter
test
push
fisubrl
fldcw
xor
push
cs
jge
mul
outsb
lcall
sbb
fbstp
repnz
push
sub
dec
movsl
pop
sbb
jne
cmc
xor
and
mov
into
pushf
ficoml
xchg
inc
jns
and
pop
popa
xchg
dec
lea
xor
cmp
pop
and
cmp
fsub
or
push
xor
adc
call
lods
test
add
lock
xchg
imul
std
dec
imul
fistpl
aad
inc
popf
int
jp
in
pusha
jae
iret
clc
fwait
pop
daa
mov
and
call
mov
jb
sbb
ss
sbb
jb
fs
das
adc
inc
mov
stc
mov
sub
adc
lcall
in
and
fidivrl
fsub
sbb
aam
jae
lods
jo
xlat
fstl
jecxz
fdivr
pop
daa
push
push
jne
pop
jnp
fdivr
push
fildl
loop
mov
rorb
aam
or
test
rcrl
lods
sbb
fisubrl
push
add
and
insb
dec
sahf
sbb
mov
mov
into
iret
fsubrs
adc
movsb
pop
dec
mov
aam
test
jmp
and
mov
cwtl
movsl
jp
jno
loop
pop
sarl
cmp
sub
nop
push
add
mov
xchg
clc
mov
jl
jne
cmp
push
test
aaa
inc
push
out
cli
xchg
loop
cli
xchg
pop
frstor
adc
mov
sbb
and
sbb
or
sbb
mov
xor
and
sti
inc
inc
push
mov
adcl
adc
das
cmpl
leave
mov
mov
or
mov
jle
pop
cmp
or
stos
pop
sub
push
call
xor
cmp
lods
jp
into
push
push
pushf
data16
fcompl
je
fisttps
cmp
sahf
fldcw
test
addl
out
sahf
pop
shr
jp
outsl
leave
fsubr
mov
sub
add
inc
pusha
push
inc
bound
leave
xor
faddl
and
les
loop
pop
ds
loop
inc
xor
sti
pop
pop
inc
pop
cmpl
add
mov
mov
push
jge
mov
das
fimull
cld
testl
inc
push
fsubrs
cld
or
cld
sti
ds
or
mov
mov
push
nop
out
cmp
dec
pusha
fwait
movsl
movsb
push
or
mov
jne
mov
testb
mov
fs
enter
call
daa
adc
cld
inc
call
shlb
repnz
sub
push
jae
lcall
adc
adc
inc
scas
scas
sbb
mov
aas
or
adc
in
push
arpl
pop
adc
js
es
jns
gs
mov
cmp
xor
push
sub
je
mov
cmovs
insb
and
or
insl
add
adc
jb
sti
scas
int
xor
xchg
jmp
outsl
pop
outsl
shl
fsts
cwtl
or
add
icebp
mov
ror
cli
cmp
xchg
mov
loopne
ljmp
jns
loope
test
movsb
sub
frstor
dec
inc
cwtl
adc
or
xchg
mov
sarb
xor
andb
add
dec
stos
mov
jmp
mov
adc
and
mov
outsb
adc
aad
jae
add
out
mov
mov
cld
jae
push
std
scas
pop
xchg
inc
test
jge
mov
scas
dec
imul
lea
inc
movsl
inc
jmp
sarl
mov
dec
lock
cmp
leave
jns
rcll
fldenv
bound
jae
push
hlt
and
or
stos
popa
out
loop
sbb
inc
ret
push
dec
mov
rcrl
in
lret
shlb
out
cmp
push
fstl
pop
or
dec
mov
hlt
push
lods
scas
jns
push
call
and
mov
dec
iret
test
out
xchg
mov
outsb
add
mov
pushf
in
lods
mov
dec
ret
xor
cmp
filds
fdivl
and
xlat
icebp
out
test
fwait
and
aas
icebp
in
call
dec
adc
sub
inc
pop
and
dec
mov
imul
iret
mov
stos
pop
or
mov
ret
lock
sar
rcll
add
dec
roll
lret
aam
cld
mov
xor
dec
cmpsl
in
pop
cmp
loopne
mov
imul
lahf
mov
mov
bnd
daa
dec
ret
out
cmpsb
add
adc
add
or
outsl
loopne
lea
dec
in
call
outsl
mov
clc
or
or
sub
repz
mov
push
pop
test
inc
int3
xchg
dec
insb
push
xchg
cltd
sahf
mov
and
leave
xchg
mov
dec
and
jle,pn
xor
sbb
pop
movsl
sbb
je
jl
test
stc
cwtl
adc
pop
or
addb
push
push
mov
call
mov
push
xchg
push
movsl
ret
jno
and
out
dec
xor
sti
stos
push
adc
or
ss
adc
subl
jp
sti
jb
fstpl
inc
out
pop
cmpsb
push
mov
jo
lea
in
push
fstpl
int
pop
lock
add
daa
stc
xor
sahf
ss
ds
mov
adc
jno
out
scas
inc
cmp
mull
out
pop
and
and
mov
cmc
nop
adc
in
repnz
sbb
mov
xor
adc
das
mov
inc
sbb
repz
fidivs
cltd
call
jbe
cli
mov
ljmp
cmp
or
lret
fildl
call
call
out
sub
push
mov
imul
jbe
xchg
cmp
pop
or
loope
xchg
inc
xor
adc
mov
push
and
stc
jae
push
psrlw
icebp
jle
or
sub
push
push
popa
into
cmp
mov
mov
cmpsl
xchg
or
std
call
jns
in
xchg
add
andl
dec
xchg
or
push
in
and
cmp
fsubr
stos
in
pop
push
sbb
aad
lods
cmp
lock
cltd
add
sbb
iret
hlt
or
and
addl
xor
xlat
lods
fldt
push
aam
pop
ds
adcb
imul
stos
mov
cld
hlt
pop
mov
cltd
cmp
cmp
and
adc
fcom
iret
pop
jno
lds
cmp
jg
inc
sub
shrb
and
sbb
addr16
and
push
dec
sarl
xchg
icebp
sub
loop
push
sub
aas
mov
ret
inc
xchg
lea
xor
mov
scas
pop
imul
sarl
add
sub
inc
sub
lret
xchg
add
lahf
pop
cmp
test
adc
enter
inc
sub
inc
orb
mov
mov
or
mov
fldcw
mov
xchg
bound
ja
push
ljmp
adc
push
dec
rcrb
test
popa
inc
xchg
push
stc
dec
stos
dec
inc
jns
xor
dec
fsts
xor
push
add
test
xchg
pop
ficoml
mov
fwait
pop
mov
scas
call
loope
inc
cs
paddd
aad
lods
push
xchg
jmp
jmp
pop
xchg
lock
je
fstpt
push
xor
insb
xchg
in
fbstp
fldenv
out
popf
idivb
mov
test
scas
repnz
les
jno
mov
pop
jl
mov
fldl
dec
add
ret
loopne
cmc
cld
divb
mov
enter
add
cltd
cmp
mov
jno
dec
mov
popa
rcrl
mov
test
in
arpl
ret
mov
push
sbb
adc
push
pop
xlat
out
ror
repnz
xor
fwait
cmp
inc
mov
sbb
pushf
xchg
push
push
mov
cmpsl
lock
cmp
jg
out
cmpsb
mov
aas
into
inc
cmp
cmpsb
pop
iret
es
orb
push
dec
cmp
imul
andb
aam
mov
arpl
lea
pop
sbb
in
pop
incl
push
xchg
adc
inc
mov
outsb
in
ficomps
loope
or
dec
cmp
movsb
mov
xchg
jle
scas
mov
sub
push
insl
jo
lcall
pop
out
jmp
sub
loopne
pop
fldl
loop
jns
pop
sbb
rcrl
jno
mov
or
dec
bound
lahf
cmp
jle
test
mov
out
sti
dec
mov
scas
cmp
les
and
sbb
sbb
push
add
scas
fiadds
adc
or
sub
sbb
pop
push
xchg
ss
in
leave
dec
mov
pop
cmc
pop
inc
ds
cli
icebp
bound
mov
jbe
lods
mov
mov
xchg
stc
pop
mov
jo
imul
enter
adc
dec
orl
int3
test
outsb
xlat
xchg
fs
push
lcall
sarb
repz
lret
leave
jle
xchg
or
mov
dec
test
mov
testl
cmp
notl
or
in
xlat
xchg
adc
fidivrl
jae
std
jmp
mov
add
or
cmpsb
popa
iret
sub
xchg
aaa
jle
aas
mov
lods
jb
cs
xor
loopne
int3
inc
inc
mov
cmp
flds
cmp
data16
mov
nop
xchg
cmp
add
jge
mov
mov
and
outsl
into
pop
cli
loopne
sarb
mov
add
adc
inc
fstps
jp
mov
scas
cwtl
push
pop
lahf
pop
xchg
sti
fld
call
mov
lret
mov
inc
pop
jae
data16
cmp
push
inc
int
aaa
shr
pop
test
jbe
out
lds
fwait
aaa
and
mov
movl
jbe
mov
test
popf
stc
iret
imul
and
ret
adc
jp
pop
in
cmpsl
arpl
sub
cmc
pushf
mov
push
push
les
cmp
jmp
test
in
or
int3
pop
push
pop
xor
shlb
xor
xchg
pusha
loopne
les
fldcw
sub
pop
call
lea
in
scas
jnp
bound
mov
inc
xor
sbb
in
stos
scas
stos
cli
cmp
cmp
fs
push
push
pushf
xchg
enter
dec
xchg
xchg
add
iret
cli
xor
push
fadds
mov
loopne
push
push
dec
mov
xchg
add
data16
hlt
xor
lock
inc
jbe
arpl
pop
aas
arpl
xchg
out
ficomps
and
shll
stos
add
insb
push
notl
push
inc
inc
out
dec
inc
test
jae
or
shrl
clc
add
popf
ljmp
lret
cmp
das
jnp
push
push
dec
adcl
sbb
add
fists
lods
sub
jmp
dec
test
fstl
mov
mov
xchg
fsincos
fsub
pop
fmull
ja
loop,pt
out
mov
push
js
add
push
scas
imull
insl
xor
imul
pop
mov
adc
mov
fcompl
inc
shll
ret
test
inc
jnp
jge
sub
in
lea
xor
add
pop
push
cmp
pop
dec
lods
adc
out
outsb
in
test
add
pop
mov
cmp
xlat
in
call
enter
adc
sbb
subl
dec
roll
enter
mov
es
sub
lods
lcall
fildl
aam
daa
adc
jmp
add
pop
cmp
lcall
mov
and
add
mov
fnstenv
movzbl
or
xor
ror
push
pop
cld
mov
or
sahf
jmp
fcomps
xor
popf
mov
push
cmp
or
addb
push
jmp
aam
in
scas
movsb
repz
test
mov
jle
jb
jecxz
rol
imulb
outsl
sbb
or
pop
jmp
push
sub
pop
pop
lds
cs
push
inc
stc
mul
popf
mov
ja
arpl
roll
jbe
mov
mov
or
mov
mov
call
lret
das
pusha
fstp
es
and
add
sub
mov
stos
pop
inc
xchg
jle
mov
loop
mov
inc
push
cmpl
rolb
pop
int
popf
mov
bound
pop
xchg
cmp
daa
jle
jge
ljmp
and
cmpsl
mov
cltd
nop
push
inc
xor
aas
jne
dec
das
insl
aaa
lock
jmp
in
out
sbb
into
testb
xor
sbb
jo
ret
jno
mov
mov
notl
fbstp
icebp
insl
scas
add
mov
mov
pusha
out
lock
sub
fs
out
xor
aas
push
test
sqrtps
int
cmp
pop
inc
inc
jg
subl
sahf
sbb
mov
sub
mov
cmp
push
add
into
mov
scas
out
scas
orl
jno
loopne
mov
and
xchg
cmpsb
int3
jno
dec
test
popa
pushf
or
add
aad
fs
imul
out
dec
aad
sub
xchg
daa
push
loope
inc
or
mov
inc
into
outsb
orl
jae
mov
imul
ret
je
shll
xor
pop
sub
mov
mov
xchg
dec
xor
imul
add
fsubr
adc
xchg
scas
sub
add
or
mov
adc
cld
dec
xchg
daa
das
lods
js
ror
int3
not
adc
jge
aas
push
push
mov
and
stc
int3
in
adc
fsubl
testl
mov
jge
push
xlat
gs
xor
mov
stos
lahf
adc
fadd
int3
push
das
iret
ljmp
ja
or
leave
jmp
fsubs
hlt
addr16
jo
lret
fisttpll
pop
ja
jecxz
adc
aaa
arpl
stos
mov
daa
add
xchg
loope
dec
sbb
xchg
push
loop
mov
pop
or
test
fcmovnb
cmp
pop
out
mov
rorl
in
xchg
int3
push
aaa
dec
push
lahf
dec
lea
in
mov
or
insb
mov
xchg
or
andb
popf
lods
imul
mov
inc
add
push
lret
push
lcall
shr
stos
fimull
inc
push
push
add
rclb
xchg
jge
mov
pop
in
fnsave
stos
ficomps
pop
shrl
or
xor
aas
enter
xor
call
jge
lahf
push
mov
or
cs
test
push
mov
xor
fstpt
mov
dec
cmp
lds
xchg
cs
xchg
push
xchg
hlt
movsb
aas
adc
cmp
and
rcrb
pop
inc
pop
lea
pop
es
mov
mov
push
lcall
leave
in
mov
clc
xorb
xchg
pop
jb
cmpb
inc
adc
gs
pop
aaa
and
in
iret
xor
push
cmp
pop
out
jb
xchg
jge
in
xchg
push
dec
sti
inc
lret
push
std
mov
add
jnp
adc
movsb
inc
fnsave
pop
xchg
dec
mov
mov
sbb
loope
mov
fcmovne
out
dec
in
dec
mov
out
clc
clc
add
popa
mov
jb
sbb
dec
ret
out
mov
sub
pause
dec
out
or
cmc
or
xchg
insl
popf
or
pop
icebp
lcall
lahf
mov
push
arpl
cmpsl
jbe
dec
movsl
cld
add
dec
push
in
pop
cmp
jno
xchg
cmp
mov
imul
and
stos
rcpps
test
in
mov
dec
arpl
mov
fwait
push
add
push
mov
rcr
cmp
mov
or
mov
xchg
sbb
mov
aad
mov
out
add
inc
rolb
push
bound
cmp
cmp
jecxz
jae
aas
pushl
iret
les
outsb
xchg
mov
lret
rclb
sub
in
in
jbe
mov
into
loope
push
arpl
iret
shlb
mov
xchg
mov
add
es
xlat
push
insb
shlb
out
mov
push
into
push
sub
sbb
mov
aas
mov
data16
push
repz
jbe
mov
push
sub
inc
xchg
pop
repnz
xor
xor
das
movd
mov
push
inc
lret
xor
test
iret
mov
cmpsb
xor
sub
mov
pop
mov
loope
dec
ret
sub
jno
cli
in
fs
lea
push
inc
jo
mov
cld
inc
loopne
cmp
add
push
out
fldenv
pop
pop
mov
cltd
std
in
jecxz
and
mov
arpl
bound
dec
mov
jl
int3
int3
inc
push
pop
popf
sbb
adc
dec
lcall
std
xchg
inc
out
mov
pop
je
fcmovbe
les
jae
stos
repnz
jno
lods
mov
cmc
mov
loop
insl
xlat
jecxz
pop
call
popf
mov
movsb
adc
cmp
or
out
fldcw
mov
movsb
leave
adc
es
cmp
or
xor
mov
xchg
jns
or
add
sbb
mov
dec
add
xor
idiv
movsb
inc
mov
hlt
jl
and
scas
xor
xor
in
stos
cld
cwtl
rcrl
jno
inc
adc
ret
sarb
stc
scas
fidivrl
pop
add
aam
cmp
idivb
sar
aaa
mov
and
xchg
sbb
outsl
sti
pop
iret
dec
xchg
xchg
lds
sbb
cltd
mov
jecxz
push
cmpsb
scas
clc
inc
das
inc
lcall
fmulp
sarl
mov
bound
mov
mov
xchg
lret
sub
mov
pop
xor
bound
cmpsb
inc
pop
addb
fsubl
clc
inc
das
add
pushf
xor
xchg
mull
cmp
pop
lret
js
sub
call
movsb
add
dec
test
pop
aas
mov
or
incb
js
xor
rol
lods
sarl
scas
in
cmc
lret
inc
xchg
add
ja
cmpsb
fsubs
pushl
xchg
fnstsw
sub
jae
test
dec
fdivp
iret
call
testb
addb
adc
sbb
xorl
mov
sbb
and
ja
arpl
leave
lea
sti
int3
inc
rorl
inc
cld
rcl
sahf
and
or
mov
pop
adc
adc
add
insl
xor
aam
pop
dec
dec
mov
stos
int
push
fimuls
popf
dec
jae
adc
imul
dec
loope
imul
jg
std
mov
fstpt
in
xor
stos
push
push
dec
out
add
fsubrp
jp
jecxz
iret
mov
jae
adc
jge
mov
in
sub
sub
cli
mov
lods
mov
sbb
sbb
mov
cmp
inc
and
mov
jo
xor
cltd
and
nop
cwtl
add
or
cmpsb
mov
loope
or
add
xchg
das
push
mov
js
fmull
mov
xchg
xchg
adc
je
jo
jb
jecxz
adc
and
xchg
adc
and
addl
jecxz
jl
lods
js
dec
push
push
pop
fldcw
inc
test
adc
mov
push
sub
jg
incb
jmp
pop
pop
fcoml
add
jne
mov
mov
mov
xor
cmp
data16
xchg
or
pusha
aaa
fcompl
lcall
cmp
mov
std
iret
xchg
and
lods
jne
mov
sub
cmp
xchg
imul
loope
bound
scas
lods
mov
cmpsl
fidivrs
sbb
add
dec
jb
cwtl
mov
std
pop
jbe
mov
inc
jle
sub
add
xchg
add
and
loope
je
aad
adc
fldt
cwtl
pop
or
pop
sbb
xor
cld
sbb
in
out
xchg
bound
jmp
jg
inc
xchg
out
mov
cli
orb
lcall
jne
sahf
lods
aad
out
mov
jo
sbb
mov
or
mov
adcb
dec
sarl
sbb
and
gs
imul
std
sti
xchg
insb
shll
mov
into
insb
sub
les
jg
adc
imul
dec
das
ficompl
jae
movsl
rcll
mov
in
or
pop
dec
cwtl
xchg
aam
ret
xchg
imul
popf
test
popf
mov
lret
repnz
shlb
insl
fisubs
rolb
jno
mov
imul
mov
aad
cmp
sub
out
mov
pop
adc
ss
mov
out
jg
or
bound
out
mov
inc
inc
sub
xchg
test
or
sub
add
push
mov
ljmp
sbb
and
or
sub
mov
fildll
cmp
mov
call
inc
xor
adc
fs
mov
inc
scas
das
sbb
bound
add
mov
stc
xor
sbbl
inc
imul
xchg
push
add
lods
sbbl
jle
pusha
loope
push
shl
imul
adc
xlat
mov
mov
and
jg
push
add
arpl
test
cmp
shl
cmovne
lock
jg
lret
or
pop
stos
sub
xchg
push
sti
testb
ljmp
pushf
popf
dec
sub
jge
or
into
sbb
mov
pop
xor
iret
or
jb
popf
fisubrs
imul
fwait
jne
out
cmpsl
std
add
cmp
adc
mov
insb
aad
adc
mov
add
mov
mov
subl
gs
out
scas
mov
mov
add
xor
mov
test
xchg
push
mov
into
jmp
je
lock
out
lea
mov
push
and
lcall
sub
jno
dec
mov
psubusb
fs
mov
pop
cli
stc
cwtl
jns
fwait
inc
in
sub
xchg
mov
test
inc
sti
data16
jl
inc
sti
cs
rep
popf
rorb
lret
push
mov
popa
xor
jae
std
cmc
adc
fsubl
xor
js
adc
push
lret
xchg
in
fldenv
in
loope
psrad
jle
add
enter
and
xchg
das
pop
iret
and
cmpsb
pop
push
cmp
shlb
mov
inc
pusha
insl
addr16
out
scas
push
push
xchg
sbb
inc
or
movb
jle
pop
out
es
out
nop
mov
js
jmp
pop
jge
ficomps
popf
inc
push
xchg
ljmp
sbb
ret
pop
nop
out
test
das
scas
jns
rcr
inc
mov
fadd
jnp
sub
xorb
ljmp
outsl
cmp
inc
dec
mov
aaa
ret
sub
mov
jmp
sbb
push
aas
inc
fwait
popf
popf
mov
jne
lods
rcrl
pop
adc
sub
ljmp
roll
sbb
mov
ds
cmpsb
imul
sti
mov
mov
mov
iret
xchg
or
int3
popa
fwait
mov
sbb
ljmp
sub
fs
gs
mov
fs
pop
repz
je
jp
xlat
lock
xor
fadd
lods
jnp
xor
sbb
xchg
hlt
stos
fistpl
pop
pop
shr
stos
push
pop
pop
loope
mov
repnz
mov
push
pop
jge
sbb
xchg
mov
pop
adc
sub
adc
enter
aam
out
sahf
add
add
jns
jns
push
pop
bound
sub
andb
dec
adc
clc
repz
jne
add
adc
cmp
push
jmp
inc
mov
arpl
dec
xor
xchg
mov
mov
popa
out
and
in
rclb
xlat
sbbb
icebp
popf
xchg
rclb
pop
mov
push
inc
push
sti
cmc
loope
fs
xor
dec
mov
xor
pop
ss
xor
in
jl
subl
mov
filds
adc
sar
or
mov
cmp
in
pop
push
mov
cmc
or
popa
sub
mov
stc
jnp
cwtl
stc
sahf
pmulhuw
jno
cmpsb
adc
mov
das
cmp
push
add
aaa
sahf
js
loop
sbb
cld
cmpsl
mov
stos
rcr
in
int
ja
cli
dec
push
pop
mov
pop
mov
jo
push
jge
popf
outsb
cmpsl
inc
scas
lods
mov
push
mov
sub
mov
dec
cmp
std
outsb
and
nop
jbe
adc
jae
fcomps
mov
or
adc
lea
adc
shlb
idiv
push
mov
jg
adc
sub
mov
mov
push
mov
sub
push
mov
cmp
cmp
push
cmpsb
mov
int3
notl
or
iret
js
shrl
repnz
sbb
clc
fcomip
mov
ja
scas
mov
shll
add
sbb
push
mov
fs
cmp
sub
fsubrs
imul
pop
cmpsb
mov
cmp
int
mov
adc
aas
mov
xchg
adc
jle
mov
cmpl
dec
in
xor
jmp
sub
inc
sbb
loopne
cli
enter
sti
test
mov
and
sarl
roll
pop
fwait
aam
lahf
std
jmp
inc
sbb
xlat
pop
sarb
jo
lret
and
adc
jecxz
pushf
pop
cmp
mov
push
enter
mov
add
jecxz
popa
adc
daa
xchg
sub
mov
jge
xor
pop
test
adc
xchg
aam
sti
mov
dec
pop
adcl
aam
mov
dec
clc
out
cmpsl
test
push
mov
jl
fs
xor
popf
insb
imul
jae
mov
jne
dec
push
push
mov
jae
leave
push
fildll
aam
jae
dec
cwtl
cmpsl
mov
xchg
push
jne
lea
xchg
aad
xchg
push
cs
xchg
and
xchg
jmp
imul
iret
out
dec
pop
adc
dec
inc
push
jo
scas
imul
pop
mov
imul
mov
mov
push
inc
shll
mov
fwait
pop
fdecstp
sbb
fdivrs
xor
enter
jmp
popa
outsl
cmc
cmp
fsubrs
mov
das
pushf
movsb
call
mov
notb
cmc
dec
or
cmp
mov
movsb
lods
sub
movsl
jns
xchg
mov
dec
scas
jmp
pop
push
gs
sub
mov
aad
xchg
test
repnz
and
fmul
data16
out
inc
add
mov
add
adc
repz
sub
add
jnp
dec
adc
ss
pop
pop
imul
dec
xor
and
lock
int
mov
adc
mov
pop
das
jb
push
mov
jne
leave
jns
lcall
dec
shlb
jns
rcrb
into
addl
lods
rclb
push
and
mov
arpl
sarb
pop
es
clc
jg
rorl
lret
xor
or
fisubrs
pop
cs
jg
cs
stos
outsl
and
insl
ja
or
movsb
sub
pop
sub
shr
or
xor
mov
in
imulb
inc
int
imul
cli
cwtl
outsl
jecxz
out
gs
rcrl
hlt
add
pop
pop
ret
adc
lahf
push
dec
pusha
int
divb
jmp
mull
inc
push
test
xchg
outsb
jecxz
mov
inc
mov
mov
and
sub
test
ja
push
gs
cmp
inc
stos
mov
clc
mov
fnsave
inc
stos
xor
es
fistps
sub
push
jp
pop
add
xchg
mov
inc
push
decb
pop
pop
jp
mov
lcall
mov
add
cmpsl
xlat
enter
cmp
daa
pop
inc
mov
das
adc
sub
and
sti
rolb
into
popa
inc
dec
je
arpl
mov
and
and
mov
sbb
iret
js
pop
arpl
sub
jns
or
jl
je
repnz
pop
adcb
xchg
jo
clc
clc
or
sub
in
mov
add
pop
or
cmp
in
pusha
pop
jg
loopne
cmp
inc
push
mov
push
dec
fmuls
and
rol
ret
andb
mov
insl
or
shr
cmp
loopne
clc
test
in
add
pusha
cmp
xor
cmp
repz
push
xlat
lock
adc
add
ss
or
mov
js
fucom
ja
ds
pop
fcmovbe
jo
adc
ret
dec
push
or
cmp
outsb
mov
push
ss
mov
push
jmp
dec
jg
push
cwtl
fwait
in
je
sub
std
movsl
lds
mov
add
movl
es
cmpsb
or
add
xchg
mov
pop
push
mov
inc
in
popa
aam
and
push
pushf
add
add
popf
scas
mov
pop
hlt
sub
fimull
lea
jno
rorb
test
xchg
jns
cmp
inc
orb
leave
cmpsb
or
mul
jnp
test
add
mov
lcall
push
jbe
int3
sbb
xchg
loop
jge
mov
mov
incl
aaa
lcall
js
cmp
jge
mov
cmc
mov
fsubr
jo
add
mov
mov
lea
cmc
mov
cltd
mov
movsb
push
movsb
es
jne
cmp
jge
lret
aaa
pusha
cmp
rol
or
mov
in
mov
mov
ret
pop
cmp
js
repnz
pushf
mov
mov
cmp
imul
aad
xchg
popf
inc
iret
clc
clc
rorl
lea
jo
bound
lcall
in
pop
movsl
sbb
push
inc
imul
mov
add
ret
mov
or
mov
lret
mov
inc
into
test
mov
popf
sbb
jo
out
lea
push
cmpsl
int
jle
out
data16
sub
je
das
dec
sub
cmpsl
pop
pop
and
lret
pop
insb
push
fldl
in
inc
subb
call
roll
dec
rorl
iret
test
decl
in
xchg
mov
jb
push
cld
daa
cltd
push
adc
cmp
push
imul
xchg
xchg
dec
fwait
xchg
out
mov
mov
shl
frndint
sub
pop
icebp
cmc
inc
pop
add
imul
push
fs
out
in
fsubrl
outsb
es
lret
pushf
jecxz
sbb
ss
jo
xchg
clc
cmpxchg
xchg
adc
stos
out
xchg
xchg
cld
push
fwait
lret
ljmp
mov
mov
xor
pop
xchg
imul
adc
dec
cli
cwtl
testl
rcll
adc
dec
pop
adc
xlat
in
mov
adc
aaa
insb
hlt
test
cmp
test
lcall
adc
sub
xchg
sbb
into
lods
mov
xor
inc
mov
add
daa
pop
mov
stos
cmp
cmc
rcr
jae
sbb
out
das
push
push
push
aad
addl
aas
jecxz
add
sub
push
notl
and
mov
mov
pushf
lahf
xchg
fcmovbe
dec
movsb
mov
lcall
xchg
inc
jns
sti
jecxz
mov
mov
arpl
jecxz
mov
mov
and
push
testb
xchg
mov
aas
xor
pop
jp
jecxz
jle
stc
pop
mov
mov
or
jno
mov
jmp
jne
dec
push
xchg
stos
nop
jbe
jno
mov
push
push
adc
and
mov
dec
jno
mov
sbb
sub
shll
aas
dec
lret
pop
or
xchg
add
clc
mov
cmp
sahf
sub
mov
loope
jmp
aad
xchg
dec
movsb
pop
cmpsb
sub
adc
ss
mov
push
int3
pusha
push
outsl
lods
jb
lcall
xchg
jns
fisttps
adc
test
test
insl
ja
int3
call
test
dec
pop
push
dec
iret
add
mov
jne
jecxz
mov
lret
push
ss
arpl
into
xor
pop
add
mov
push
sbb
xor
cmp
lahf
into
das
icebp
aaa
add
cmp
test
pop
int
mov
or
xor
dec
shrl
lods
lret
push
loop
fmull
or
jecxz
stos
popf
xchg
xor
mov
movsb
int3
fdivl
xchg
and
bound
xor
insl
push
pop
mov
cs
pop
and
mov
mov
dec
xor
in
in
pop
jle
daa
repz
mov
fcoms
lcall
dec
je
int
stos
pop
fucomp
inc
out
lcall
scas
roll
sarb
mov
add
popa
mov
sub
or
xchg
ljmp
mov
xchg
xchg
adcb
lcall
mov
lret
mov
les
stos
ja
xchg
dec
idiv
sbb
pop
cwtl
push
mov
test
push
andl
mov
andb
outsl
movsl
cmpsl
push
fsubs
mov
pause
dec
sub
pop
adc
xorb
cli
cs
cmp
add
jl
dec
sub
xchg
mov
fisubrl
notb
add
pop
mov
aas
int3
iret
hlt
dec
into
and
fucomp
out
xchg
inc
outsb
sbb
push
test
add
js
mov
in
jo
shlb
div
sti
nop
lcall
movsb
inc
xor
jnp
orl
rcll
clc
adcl
dec
bound
stc
sahf
pop
add
mov
loop
ret
xor
mov
xor
into
mov
adc
repz
sub
pop
popf
pop
cmp
insl
mov
rcll
repnz
jo
pushf
jae
adc
out
jnp
adc
mov
sbb
in
daa
mov
in
jae
into
cltd
dec
popf
xor
sbb
cs
mov
outsb
out
cwtl
addr16
imul
idivb
lcall
ret
push
ret
lret
sti
test
pushf
fisttpl
lods
jo
push
mov
jns
scas
inc
lods
jl
sbb
push
adc
shlb
and
fbld
mov
faddl
ja
push
xlat
test
xor
lret
adc
gs
hlt
lret
xchg
repnz
jg
and
pop
and
lcall
jns
arpl
loopw
sbb
and
add
lods
mov
outsl
fisubrl
xor
inc
and
adc
ds
jecxz
add
fs
xchg
push
jns
push
and
mov
add
cmp
insb
pushf
addr16
cmp
or
les
pop
and
lods
movsb
cltd
test
sub
add
add
pop
lea
out
in
inc
pop
lods
ret
cmp
std
subl
mov
jecxz
cwtl
out
mov
jg
loopne
xlat
cmp
in
push
test
mov
dec
std
sub
lahf
sarl
pop
rclb
sbb
mov
aaa
adc
fistl
lock
mov
adc
js
repnz
fnstsw
add
mov
ja
jnp
roll
leave
bound
int3
call
stc
inc
or
daa
add
sbb
testb
dec
lods
pop
push
or
dec
inc
in
xchg
cld
pop
test
jl
jns
mov
mov
jl,pt
insb
add
push
xchg
lods
mov
iret
shl
xchg
jae
in
push
cmp
pop
xchg
or
sbb
cmp
mov
add
call
repnz
int
fdivp
xor
or
leave
jmp
pop
mov
mov
jno
inc
push
jg
mov
lahf
imul
dec
rep
pop
movsl
out
mul
xchg
outsb
or
push
push
stos
neg
test
or
push
adc
mov
adc
sub
push
ja
xor
mov
push
leave
dec
add
push
mov
das
lahf
mov
ss
inc
inc
mov
push
mov
dec
inc
popa
mov
mov
add
test
lods
cmp
jnp
sub
and
and
icebp
dec
add
lods
adc
dec
push
mov
and
jle
cli
push
mov
xchg
jle
mov
imul
mov
fwait
mov
mov
dec
add
dec
and
fwait
cltd
cmpsb
cmp
leave
fwait
jecxz
call
dec
sti
inc
hlt
pop
sbb
jmp
jbe
test
negl
add
pusha
adc
mov
xchg
fadd
dec
sbb
imul
and
dec
roll
pop
push
jo
test
out
or
ja
mov
cltd
dec
faddl
mov
or
stc
stos
mov
push
lea
xchg
push
inc
xchg
push
gs
mov
mov
lea
mov
aaa
lcall
bndstx
push
pop
mov
clc
repz
mov
imul
bswap
les
popa
stc
movb
mov
lret
cmp
inc
mov
cld
mov
daa
out
testl
cmp
xor
mov
xor
dec
scas
pop
out
and
into
add
enter
out
faddp
cmpl
pop
mov
pop
xchg
int3
xor
inc
rcr
mov
mov
insb
mov
into
and
inc
fdivrl
mov
stos
cmpsl
je
jns
lret
mov
jne
push
ss
test
lea
sub
ficomps
adc
push
xchg
cs
shll
movsl
scas
push
cmp
or
movsb
push
xor
int3
xor
inc
pop
jbe
insb
push
add
aam
add
test
out
lods
mov
lea
and
pop
inc
bound
dec
mov
push
dec
push
fdivrl
inc
js
fwait
scas
mov
loopne
push
in
cmp
repnz
and
std
xorl
jae
jge
push
jae
mov
mov
mov
push
jnp
sub
xlat
or
mov
icebp
fistps
pop
lods
stc
xchg
mov
and
shr
sub
dec
and
push
cs
dec
mov
aad
clc
mov
lock
mov
outsb
cmp
jl
mov
mov
sbb
mov
sbb
aam
test
sbb
xor
add
nop
enter
mov
xor
adc
push
aaa
cmpsb
sbb
stos
cmp
add
das
adc
push
sbbl
sahf
jp
cmpsb
mov
cld
jb
cmc
imul
sub
aam
pop
push
iret
inc
mov
stc
aas
jmp
sub
movsb
loop
pop
pop
rorb
aam
scas
cltd
cmp
pop
nop
sbb
scas
jno
pop
sti
mov
and
imul
in
nop
sbb
sub
mov
nop
sti
cmp
rcrl
mov
xchg
in
dec
dec
jl
xchg
in
inc
sbb
xchg
movsl
in
cmpsl
mov
pusha
sub
jmp
jb
pop
mov
mov
fldcw
movsl
adc
add
sbb
adc
ja
dec
push
pop
test
loope
push
or
sbb
xchg
in
hlt
mov
test
stos
stos
dec
jb
or
mov
cwtl
sbb
cmpsb
xor
testb
mov
adc
jbe
cmp
mov
xor
int
icebp
jns
mov
pop
rclb
pusha
loop
jb
or
arpl
repz
adc
es
inc
jecxz
and
push
nop
cmpsb
sbb
int
cltd
iret
mov
insl
pop
xchg
push
mov
daa
pop
or
ss
jb
flds
jmp
sbbb
int3
xchg
divl
int3
dec
mov
andl
decl
enter
idivb
xchg
xchg
cltd
sub
jecxz
imul
data16
pop
insb
adc
pop
push
cmp
xor
fstl
int
push
fisttpl
jl
cltd
lods
popa
add
sub
int3
cmp
mov
test
cmpsb
gs
test
jnp
mov
pop
xchg
inc
outsb
inc
arpl
jp
repz
mov
add
xchg
add
sahf
xor
dec
and
dec
push
inc
inc
or
out
push
xchg
cwtl
mov
orb
daa
js
popa
les
gs
aas
clc
inc
cmpb
push
fmul
jg
or
jl
in
jno
or
movsb
xor
cwtl
xchg
aad
mov
mov
decl
sahf
cmp
fs
ret
jno
test
push
sahf
enter
scas
cmpsb
lods
dec
ficoml
bnd
mov
xchg
push
cmpsb
or
jmp
jecxz
push
stos
jl
mov
shll
jbe
cmp
bound
xor
lret
div
ljmp
mov
pop
jg
mov
cld
mov
hlt
mov
inc
int3
sub
jg
jne
sarb
lahf
rcr
sbb
daa
popa
testl
xchg
shrl
das
mov
hlt
int
mov
sub
in
jp
scas
sub
ficoml
std
and
mov
popf
sub
dec
rolb
sub
or
inc
push
push
inc
mov
loopne
std
or
aas
cmp
pop
pusha
mov
es
mov
xchg
in
inc
stc
fidivrs
adc
sbb
lock
inc
xor
dec
aam
aam
push
xor
pop
scas
hlt
hlt
scas
jp
xchg
push
jns
mov
mov
mov
adc
out
mov
mov
popf
xor
cmp
xor
mov
push
jns
mov
pop
lahf
add
ret
jge
mov
lods
jg
pop
aas
rcll
mov
in
loope
pop
lret
data16
mov
lea
sbb
insb
fstpt
pop
mov
js
sbb
mov
fnstenv
mov
inc
scas
addb
push
jle
jae
vmaxsd
push
xchg
inc
pushf
imul
mov
mov
enter
mov
sub
js
add
mov
data16
sub
push
dec
adc
inc
mov
sarb
fisttpl
fistps
cmp
xchg
imul
push
pop
or
shrb
shll
mov
adc
rorb
inc
shll
or
pop
mov
shlb
lds
xor
aas
out
mov
mov
pop
jmp
cmp
addr16
jb
in
xchg
sahf
jl
mov
push
mov
xchg
or
adc
mov
subb
add
mov
nop
ss
out
out
fldt
inc
leave
cmpsl
fistl
mov
jge
mov
call
pop
add
xchg
push
bound
pop
aaa
dec
loopne
xchg
inc
int
xchg
decl
mov
ja
jmp
incb
dec
fisttps
fwait
lret
lods
jle
jl
add
jecxz
jo
aam
cmp
stc
int
pop
scas
in
fcmove
stc
sbb
and
in
cmp
adc
call
xchg
push
loope
hlt
std
rclb
jecxz
xchg
lods
sbb
movb
fwait
gs
fmuls
fdivl
pop
daa
mov
ret
sti
mov
out
repz
mov
orl
je
repnz
int3
dec
push
cmp
repnz
test
clc
sub
push
dec
xchg
into
push
pop
adc
xchg
sbb
cld
stos
mov
imul
cmpsb
mov
xor
mov
mov
arpl
addl
inc
movsl
and
xor
add
and
out
mov
xor
sub
lock
sbb
outsb
in
test
cmpsl
adc
dec
testl
jo
xlat
fstl
mov
inc
xchg
sbb
jbe
sbb
jnp
aad
insb
movsb
add
fldenv
lahf
int3
fistl
and
dec
dec
jl
daa
lret
add
lds
jbe
js
out
lret
push
mov
addb
mov
xor
jb
rcrb
in
push
sbb
xchg
call
fstps
and
and
jmp
push
sti
and
mov
and
je
and
add
lret
xor
xchg
or
std
sub
mov
pushf
popf
gs
iret
inc
sbb
lods
dec
jge
sahf
loopne
cmp
lahf
loope
fbstp
mov
movsb
cmpsl
sub
aaa
movsb
mov
fs
cmp
adc
push
rcrb
dec
stos
movsl
sub
lcall
pop
push
in
jecxz
fadd
sbb
lods
xor
lock
std
mov
xchg
xchg
lahf
inc
imul
pusha
fcmovnbe
push
out
mov
push
fildl
inc
mov
sbb
lret
or
loopne
gs
mov
jecxz
out
into
movsb
jae
loop
cmp
bound
stos
ljmp
push
xchg
int3
jge
in
pop
pop
cmp
push
inc
int
dec
loop
ret
inc
ret
xchg
movsb
xor
push
dec
sbb
jne
loop
dec
jnp
cld
jnp
xor
mov
mov
sub
mov
lret
ja
pusha
pushf
hlt
or
cmpsl
cmp
mov
jp
dec
pusha
out
mov
xchg
pop
mov
ljmp
xor
scas
sbb
rclb
aam
cmp
xlat
xchg
or
popa
dec
lock
popf
dec
xchg
push
fstps
mov
sbb
xlat
sbb
fnstcw
xor
inc
cmp
testb
mov
mov
sahf
push
fsts
pop
icebp
mov
les
push
push
scas
int
add
mov
pop
push
sbb
addb
and
aad
imul
cmpsl
lds
adc
add
das
mov
cmp
ret
sbb
hlt
xor
pop
imul
leave
pxor
mov
insl
call
dec
lahf
mov
or
shlb
ja
mov
mov
popf
xor
push
fadds
sbb
xchg
dec
aaa
fs
std
ret
aaa
cli
pop
popf
and
mov
and
push
iret
popa
sar
add
push
push
andb
fidivs
add
jp
inc
mov
pushf
cmpsb
aas
cmc
in
fcmovb
add
sbb
shl
es
lods
loop
xor
clc
sub
daa
jno
push
stos
sbb
outsl
xlat
pop
fsubrs
and
sbb
xchg
jae
addr16
mov
jae
xchg
and
popa
mov
and
test
inc
flds
cltd
std
jp
cmpl
xchg
and
fdivrl
test
ja
or
xchg
jle
dec
cmc
dec
xchg
jns
and
mov
cs
push
lcall
mov
loope
test
pop
inc
push
arpl
cld
fdiv
les
xchg
cmp
in
sub
in
xchg
rol
arpl
loopne
clc
inc
fwait
sub
cmp
and
mov
movsb
jbe
jae
popf
loopne
push
pusha
dec
aam
and
addl
orl
mov
mov
daa
stos
inc
mov
nop
jnp
lea
clc
push
inc
jno
pop
jae
xchg
push
leave
imul
jecxz
push
jmp
pop
xor
fwait
out
pop
mov
cmp
pusha
shlb
add
gs
inc
rorb
pop
jmp
push
mov
clc
daa
adc
cmp
out
mov
std
xchg
lcall
cmp
fnsave
add
xchg
xchg
xor
or
xchg
inc
dec
aaa
stos
mov
popf
sub
push
ja
sbb
xorl
test
fs
push
jb
push
cmp
push
push
inc
sub
pop
lods
imul
dec
lds
cmp
test
ret
idivb
pop
jecxz
lds
notb
jmp
and
stc
and
mov
roll
push
lods
stos
xchg
sbb
lret
pushf
popf
or
lahf
mov
jl
mov
dec
adc
xchg
mov
jmp
shrl
sub
out
mov
or
faddl
hlt
inc
sub
pop
scas
jnp
mov
pop
shll
inc
pop
mov
push
shr
or
jne
std
push
sub
add
inc
mov
imul
mov
push
es
aaa
sbbl
scas
test
dec
out
addr16
jge
inc
jbe
adcl
ffree
fs
fdivl
fcomps
cld
pop
or
jle
xchg
xor
mov
inc
dec
push
scas
daa
hlt
pop
xor
imul
clc
arpl
jae
cmpsl
xor
fldcw
fisttpl
imul
cmpsb
lret
mov
es
mov
mov
cmc
inc
nop
xor
arpl
mov
sub
cmp
test
in
movsb
movsl
ljmp
cmp
scas
cltd
aaa
das
xchg
xor
jne
adc
shl
les
cmp
imul
mov
xor
out
cltd
mov
int3
out
push
repnz
mov
sub
movsb
loopne
not
std
test
jmp
xchg
mov
ss
push
push
enter
xor
jae
pop
popa
xchg
icebp
out
mov
push
lsl
roll
sub
outsb
cmpl
sub
stos
lcall
test
pop
sbb
test
xor
lds
out
std
jbe
cwtl
je
ret
mov
and
push
sbb
mov
sti
and
sbb
lret
imull
fdiv
pop
mov
and
xchg
fwait
into
das
push
cld
mov
test
iret
inc
jmp
cld
loope
out
push
aas
scas
mov
stos
xor
inc
jmp
or
arpl
mov
pop
test
inc
mov
stos
or
divl
test
arpl
maxps
testb
jns
pop
addb
aas
mov
jo
movsl
xor
jecxz
sub
push
mov
mov
std
outsb
dec
dec
jae
insl
xorl
xorl
jnp
data16
sub
sbb
call
loope
sbb
les
sub
adc
bound
mov
jnp
xchg
nop
xchg
dec
mov
addr16
push
cld
xchg
test
add
sub
dec
push
test
push
adc
sarb
xor
loop
mov
adc
repnz
push
add
push
sbb
ds
lds
movsl
cwtl
xor
outsb
imul
sub
mov
mov
push
push
push
fisttpl
test
jmp
mov
push
into
in
scas
fwait
stos
fs
pusha
xchg
call
in
push
repz
sbb
scas
gs
jge
mov
inc
scas
cmp
push
fbld
push
or
xchg
inc
push
xchg
push
inc
xlat
sbb
test
ficoms
hlt
inc
mov
sub
negb
mov
sbb
rcrl
adc
pushf
stc
xchg
sbb
addr16
aad
push
dec
inc
mull
shrl
pop
push
xchg
pop
pop
pop
and
add
sbb
xor
sbb
sub
int3
les
popf
mov
je
dec
jecxz
pushf
popf
adc
jp
fdivrs
shrl
xor
pop
sub
insl
mov
push
cmp
or
dec
jnp
cs
xlat
test
idivl
inc
mov
mov
in
mov
rorb
cli
loope
jo
and
mov
or
int
out
dec
scas
push
lret
loope
repnz
popf
popa
push
xchg
and
jae
and
adcb
arpl
adc
in
cmp
cmp
cwtl
js
ljmp
xchg
js
jno
inc
nop
dec
rcrb
sbb
lods
mov
add
ret
cmc
adc
jge
shrb
sub
test
sbb
jecxz
push
and
fdivl
cltd
cmpsb
push
leave
and
mov
outsb
mov
jne
dec
push
xchg
push
mov
mov
daa
or
cmp
cmpsb
add
jnp
cmpsb
push
jmp
sbb
mov
push
clc
jecxz
movzwl
leave
pushf
mov
push
sbb
cs
pop
jg
adc
dec
fimull
shr
loopne
les
mov
insl
std
mov
push
dec
mov
lahf
add
sbbb
inc
push
adc
lock
pop
sti
pop
fxch
mov
mov
or
addr16
add
inc
dec
out
push
push
bswap
push
inc
or
fdivrp
add
das
sub
pusha
pusha
push
idivl
in
and
repnz
shrl
inc
rcr
and
in
cmc
pop
out
jp
add
cmpsl
adc
xchg
sub
mov
adc
stos
sub
loope
aas
int
mov
fadds
decb
outsl
testl
int
adc
test
xchg
lods
es
mov
or
pop
pop
js
addr16
add
add
sahf
and
cmp
inc
andnps
and
inc
in
frstor
or
out
test
xchg
cmp
pop
fdivl
xchg
cmp
xchg
xlat
sbb
lcall
scas
scas
bnd
repz
and
add
popf
icebp
inc
adc
les
or
sahf
xchg
insb
xor
mov
mov
rcl
ljmp
daa
mov
mov
push
mov
rorl
pop
push
repnz
push
mov
or
jo
shrl
filds
sub
fistl
cmpl
test
ret
fucom
icebp
sub
ss
jo
data16
ss
ds
loope
fs
xchg
add
cmp
jle
pop
stos
sbb
popfw
adc
testl
inc
and
mov
cmp
bound
add
or
pop
xchg
sub
xchg
imul
push
mov
cmpsb
xchg
ljmp
jg
inc
mov
mov
test
mov
ficoms
push
cld
sbb
jge
rcrb
push
pop
fwait
jo
int3
push
sarl
lock
push
pusha
sub
xlat
shlb
cltd
dec
or
fadds
fildl
add
xor
outsb
roll
orw
push
js
sub
outsl
jle
lret
mov
inc
mov
mov
xchg
nop
lock
lcall
xchg
cmp
mov
sti
jo
cld
dec
xchg
jle
mov
lret
pop
mov
sub
pop
mov
ficoml
sub
push
adc
cmpsl
add
outsb
sub
ror
pop
jecxz
mov
test
dec
stc
pop
xlat
sub
repz
add
insb
sub
out
shrl
movsl
lods
out
pop
push
xchg
mov
movsl
mov
cmp
and
adc
outsb
inc
test
cltd
and
repz
mov
repz
int3
js
cmp
mov
les
ds
mov
push
in
and
pop
and
test
in
push
and
adc
mov
shlb
lcall
dec
jg
hlt
add
fiadds
jl
cmp
xchg
jp
mov
jp
loope
inc
and
sbb
mov
into
cltd
inc
mov
mov
push
cmpb
inc
push
jmp
movsb
mov
cld
sti
adc
pop
push
pop
jg
scas
rolb
mov
dec
jno
js
sbbb
adc
mov
leave
repnz
aaa
pop
inc
loop
bound
jmp
cmc
bound
fadd
xor
jl
cmp
repnz
xchg
popa
push
ret
loopne
or
mov
dec
adc
xor
fwait
arpl
popl
jg
jg
mov
push
stos
aaa
cmp
lret
pop
inc
push
cmpl
stos
jne
outsl
ficompl
imul
xchg
pop
jb
rol
in
pop
insb
cmp
mov
stos
add
mov
mov
int3
lds
out
test
xchg
cli
andl
negb
test
es
rclb
inc
repnz
pop
cltd
sbb
push
mov
lea
inc
ja
push
lea
xor
push
js
add
inc
je
adc
dec
test
adc
xchg
sub
adc
sub
jmp
xor
xchg
push
jns
outsb
aam
add
cld
mov
pinsrw
pusha
sti
push
push
shl
popf
xchg
push
push
push
dec
jae
fucomip
mov
cmp
pushf
pop
pop
int3
xlat
pop
or
jne
adc
test
push
in
ja
inc
cmp
pop
push
push
dec
test
pop
cmp
ds
outsl
ficoml
and
dec
inc
rorl
clc
mov
adc
stos
loope
jb
push
push
mov
scas
sub
cmp
insl
mov
push
cli
jno
out
int
loope
mov
cmp
bound
int3
ret
mov
es
push
stos
int3
test
mov
adcb
pop
test
fcoml
lahf
sub
loopne
add
clc
clc
mov
xchg
sbb
ss
lahf
mov
and
lods
in
adc
test
or
ficoml
ja
sub
xor
pop
inc
lds
or
jp
fisttpll
cmp
ss
mov
adc
cmpsl
xchg
mov
xchg
mov
sbb
adc
sub
push
xor
fwait
stos
inc
stos
rcrb
in
out
jle
scas
adc
in
pop
xlat
imul
jmp
mov
pop
repz
ret
xchg
es
in
js
mov
dec
out
or
jbe
sbb
xchg
into
xchg
xchg
xor
dec
shll
rorb
aaa
inc
or
add
push
in
sti
lods
jns
jne
mov
dec
push
pop
adc
xor
push
lods
fstpl
push
leave
in
sub
fndisi(8087
ja
dec
lcall
cmp
ljmp
leave
add
mov
sub
xchg
and
iret
mov
cld
sub
inc
push
cmp
nop
push
mov
loopne
stc
fsubl
ds
xchg
push
xor
sti
jge
cmp
es
mov
outsl
and
adc
sub
into
adc
and
xchg
jmp
fwait
pop
sahf
inc
jmp
nop
sbb
js
pcmpgtd
fisubrl
xchg
cwtl
cvtps2pd
scas
cmp
push
jo
movsb
repnz
in
in
fildll
jne
push
insl
inc
jno
les
add
enter
movsl
inc
adc
xorb
xchg
jns
dec
je
fistl
pop
mov
scas
data16
std
icebp
les
ret
adc
inc
jecxz
js
imul
xchg
addr16
and
sbb
fcomip
shrl
popf
pop
sbb
xchg
stos
cld
xchg
lcall
cmp
ljmp
movsb
push
jb
mov
shlb
jmp
out
and
das
mov
out
adc
rorl
xchg
pop
fdivrs
ret
and
test
fs
mov
sar
leave
lods
into
shll
jg
or
fisubrs
daa
in
inc
mov
xorl
fwait
inc
push
jae
pop
sbb
insb
scas
unpckhps
xchg
test
or
ds
xchg
dec
imul
shr
rolb
inc
jmp
push
movsb
xchg
jge
lahf
std
sub
mul
jg
xlat
loope
jno
into
dec
ds
rcrl
xchg
rolb
stos
shr
lds
push
int3
jge
lds
cltd
xchg
xchg
xor
or
xchg
pop
in
xor
cld
dec
out
test
cmpsb
aam
int3
push
lret
and
mov
add
mov
or
cmp
jbe
inc
lods
int
cmpsb
imul
jecxz
mov
add
aad
xchg
push
mov
out
loope
pop
cmc
sbb
ficoml
inc
or
lds
daa
outsl
adc
arpl
in
dec
mov
dec
loopne
jp
dec
jl
out
fistpll
aam
push
cmp
and
mov
xchg
fiaddl
testl
xor
mov
xchg
dec
test
shl
push
jmp
outsl
push
jecxz
ret
int
fldt
out
and
sbb
loopne
push
sahf
cwtl
imul
arpl
arpl
xchg
outsb
outsl
mov
add
push
and
adc
and
sbb
rcr
leave
mov
test
push
gs
iret
je
insb
xor
inc
std
sub
cli
xor
jae
push
xlat
xchg
push
mov
inc
sbb
adc
rorb
jg
cmc
xor
sbb
test
mov
xchg
xor
pop
leave
fisttpll
pop
jnp
in
mov
addr16
jl
mov
rclb
mov
lods
jecxz
aaa
mulb
lds
outsl
add
in
push
ljmp
cmpsb
or
loope
hlt
add
xchg
rcl
leave
mov
enter
fidivrs
stos
mov
lcall
test
add
xor
sbb
pop
mov
jb
xor
mov
fimuls
lcall
adc
inc
sub
inc
push
mov
or
jbe
mov
adc
or
mov
leave
out
stc
repnz
push
loop
xchg
dec
mov
or
mov
scas
add
mov
dec
mov
hlt
jl
xor
fcoms
inc
cmp
ret
stc
mov
jns
shlb
inc
mov
inc
stc
subl
cmp
in
mov
push
and
dec
lret
mov
add
adc
inc
popf
scas
stc
sahf
pop
inc
jmp
dec
testb
cmpl
mov
incl
xchg
jmp
lods
dec
mov
stc
push
iret
addr16
jg
xchg
xchg
add
sbb
xor
lock
push
cmp
mov
xor
mov
enter
or
add
adc
lock
cmpb
in
ljmp
or
and
outsl
and
mov
jmp
mov
adc
leave
fcomp
and
pusha
mov
bound
push
jb,pn
sbb
jb
loopne
add
fbstp
mov
jnp
into
dec
jnp
test
scas
movsb
cld
mov
pop
das
adc
or
lods
mov
push
pop
cmc
test
mov
test
shlb
dec
jb
popf
mov
daa
mov
mov
push
lock
fiadds
bnd
inc
lret
mov
xchg
mov
addr16
mov
mov
fimull
das
mov
jno
or
cmp
push
inc
sub
and
mov
ja
lock
lods
ljmp
jmp
and
jnp
mov
mov
xchg
out
cmc
mov
cmp
jno
inc
loop
out
lahf
lock
xchg
push
fbstp
outsb
pop
mov
xchg
push
fs
mov
jnp
xchg
push
or
fimull
or
pop
push
or
push
fdivrs
cwtl
add
mov
insl
dec
inc
addr16
push
out
lcall
cld
or
andl
mov
mov
mov
sbb
imul
push
icebp
test
test
and
adc
aam
cmp
jb
dec
frstor
ss
inc
mov
ret
mov
outsl
movb
push
xorl
pop
imul
and
dec
mov
lock
mov
adc
add
dec
stc
mov
cmc
int3
out
stos
into
inc
imul
adc
bound
push
rorl
jno
test
or
mov
mov
dec
or
hlt
iret
adc
fistl
pop
xor
mov
jmp
mov
jg
mov
mov
jns
pop
cmp
pop
dec
inc
fs
xor
scas
push
jg
inc
rorb
and
jp
mov
cli
pop
xchg
out
out
sub
in
ldmxcsr
pusha
jne
xchg
sub
test
mov
push
inc
mov
arpl
mov
lret
loopne
mov
test
mov
int3
popa
in
popa
sbb
mov
pop
sub
mov
das
ficomps
cmp
sarl
in
scas
and
pop
ds
jg
xlat
pop
mov
jae
jbe,pn
cld
repz
addr16
inc
jno
fildl
push
movzbl
mov
iret
and
xor
inc
std
jns
in
js
jp
shlb
pop
lret
hlt
dec
adc
jo
jecxz
jmp
sbb
cmpb
loop
jge
cmpsb
clc
dec
dec
lret
jmp
inc
or
movsl
xchg
lret
ds
idivl
fwait
cli
shr
push
mov
subl
pop
inc
adc
aas
out
repnz
loope
jo
aaa
enter
push
lds
les
and
loope
push
sub
push
push
in
adc
dec
outsb
push
adc
repz
pop
cmp
arpl
push
fsubrl
adcl
les
mov
mov
adc
rcll
xchg
xchg
stos
mov
push
jl
xchg
in
or
fbld
jnp
jg
pop
fldl
and
or
scas
lret
or
mov
fnstenv
pop
lret
jae
jnp
fimuls
adc
movb
xor
pusha
lret
xchg
jnp
or
jno
push
mov
mov
add
popf
mov
mov
push
insb
inc
adc
js
inc
pushf
addr16
cmp
inc
and
jbe
andnps
mov
and
imulb
jle
jne
mov
enter
add
cmp
mov
popa
push
jle
out
xchg
jmp
mov
adc
jae
and
pop
sti
jg
pop
jmp
add
pop
out
iret
dec
mov
add
fstpl
add
aas
inc
sub
bound
mov
lds
xor
add
or
cwtl
nop
mov
jnp
lock
dec
jne
clc
push
setg
or
cmp
xchg
out
sub
jge
aad
test
sbb
mov
cpuid
stos
mov
pop
mov
dec
jmp
push
in
fmull
rcl
insl
mov
jl
cmp
push
jecxz
cmc
movb
push
sub
xor
lcall
or
mov
or
and
je
cmpsl
xor
jge
loop
adc
subb
jmp
inc
and
jae
fdiv
clc
mov
push
and
fcmovnu
cs
mov
out
popf
daa
aaa
mov
jmp
les
or
decl
mov
shrl
xchg
movsl
ss
daa
outsb
sbb
cmpsb
addb
dec
xor
loop
jg
cli
sbb
test
imull
pusha
sub
push
add
ljmp
rol
mov
cwtl
out
or
mov
inc
das
inc
cmpsb
mov
test
loop
data16
sbbb
incb
arpl
push
mov
dec
aaa
dec
repz
pop
jns
push
setle
sbb
pop
mov
enter
or
push
in
pushl
mov
pop
jg
sahf
adc
push
pop
loope
mov
ret
xchg
push
aaa
movsb
mov
and
imul
or
xor
movups
pop
pop
dec
mov
push
adc
cwtl
xchg
fcomip
jnp
inc
imul
adc
icebp
jge
cmp
xchg
push
repnz
bound
mov
mov
les
popa
sub
int3
lods
cli
and
fistl
sub
push
xchg
and
aaa
int
ds
push
sbb
out
pusha
into
add
int
sub
sub
das
dec
push
or
les
fs
dec
in
cmpsb
in
xchg
ret
aam
jp
clc
cmp
lea
orl
in
add
or
out
mov
rclb
push
jmp
dec
das
mov
sub
adc
cli
adc
iret
xchg
adc
mov
xchg
lods
mov
cmp
xor
cs
fnstcw
xchg
inc
xor
repnz
imul
cmpsb
mov
push
jns
bnd
add
adcb
sbb
jae
ror
je
mul
and
adc
pop
fs
jno
push
xchg
and
jae
or
es
push
mull
or
jo
dec
xor
nop
loop
int3
lret
add
xor
rcrl
lea
mov
rcrl
mov
rcr
movsl
ret
movsl
or
xchg
mov
outsl
lret
insb
jmp
mov
jle
lds
popa
in
jle
jno
sub
stos
out
jae
or
cmp
mov
add
popa
pop
cmp
and
and
xchg
add
stc
pushf
mov
cmp
cmp
xor
add
pop
push
adc
mov
add
xchg
cmpsl
rorb
jo
mov
addb
pushf
add
repnz
out
xchg
test
mov
cld
test
dec
or
dec
xlat
pop
or
xchg
fisubl
jno
aad
or
loop
test
mov
mov
lahf
mov
ficoms
push
cmp
in
lret
xchg
mov
stc
fwait
mov
fiaddl
push
sahf
pop
mov
pop
mov
pushf
out
dec
xlat
iret
lock
imul
mov
scas
rcrl
mov
rolb
sub
lahf
test
jp
sbb
cltd
jns
push
add
popf
add
xor
int
pop
inc
adcl
push
add
test
mov
inc
lea
pop
and
inc
mov
rcr
lret
xchg
and
arpl
scas
addr16
adc
ret
or
fstpt
aam
imul
jno
mov
lea
rol
mov
inc
iret
jno
cmp
imul
jge
jle
jecxz
adc
mov
enter
inc
dec
adc
dec
fstpl
mov
fcomp
mov
mov
pop
ja
fidivrs
push
lcall
fistpll
adc
push
sbb
sarl
and
cmp
push
addr16
jne
mov
iret
cmp
mov
adc
push
pop
sbb
shl
das
add
or
popa
pop
repz
popf
test
jae
mov
ss
mov
mov
dec
fcmove
cmp
or
das
into
repz
cwtl
stos
insl
xchg
add
idivb
mov
xor
dec
rcrb
mov
arpl
pop
outsl
test
lea
sub
pop
lret
les
test
dec
popa
daa
sarb
pop
inc
mov
xchg
ret
or
lret
dec
sbbb
mov
mov
ljmp
mov
iret
and
repnz
xchg
lea
mov
lea
adc
jne
aad
mov
mov
adc
in
or
lahf
fildl
cmp
mov
xor
out
pop
shr
sub
fidivs
int3
out
test
jmp
dec
int3
push
inc
stos
push
fnstenv
orb
aam
loopne
sbb
jo
js
push
ja
mov
and
or
arpl
dec
or
cmp
and
fldcw
test
mov
in
adc
lock
or
cmp
push
imul
gs
mov
aad
pop
jle
cmpsb
xchg
fmul
ljmp
cld
pop
adc
pop
out
aam
js
mov
jo
and
pop
xchg
adc
xorb
xchg
xchg
add
sub
repz
lods
pop
bound
mov
pop
sbb
cs
and
lods
in
popa
mov
loopne
lahf
dec
shrb
ss
mov
mov
add
and
fwait
sub
js
jns
test
subb
int
int3
stos
pop
je
fsubl
jg
and
icebp
add
lret
addr16
sub
fmuls
ror
cmp
inc
es
aas
push
lret
imul
and
adc
xchg
ljmp
adc
lahf
xlat
daa
aas
xor
cmp
push
iret
mov
push
dec
insb
sti
push
sbb
aam
fimuls
clc
lods
adc
test
push
cltd
mov
adc
xchg
mov
test
push
idivb
push
mov
xchg
les
lret
lock
mov
int3
cmp
arpl
loope
cmp
mov
push
insb
ja
and
adc
inc
jg
cltd
adc
popf
adc
arpl
in
add
and
and
outsb
xor
leave
mov
outsb
testb
pop
rcl
aad
rorl
push
loope
push
pushf
lret
xor
pop
and
push
adc
outsb
push
pop
pusha
repz
stos
push
sbb
js
xor
and
dec
in
mov
push
in
ja
sarb
push
inc
cltd
loope
fcomp
gs
mov
xor
insl
dec
sub
cltd
aas
out
shll
or
cwtl
lods
test
mov
push
pusha
icebp
scas
fmul
loopne
and
adc
and
int3
or
out
cmp
sbb
pop
pop
sbb
je
das
pushf
mov
adc
inc
ja
and
movsl
enter
jo
loop
call
mov
daa
stos
jb
xor
push
rcl
data16
cltd
cmc
test
mov
xor
test
rclb
xor
subl
dec
ja
jmp
cmp
test
fstl
inc
pusha
loop
xor
mov
sahf
es
sub
lcall
sbb
lods
inc
mov
lret
add
test
sbb
xchg
sarb
mov
les
lock
cmpsb
dec
lea
mov
stc
insb
in
xor
jg
test
lods
test
cmpsb
adc
mul
aad
test
pop
and
fisubl
add
sbb
mov
les
cmp
mov
imul
xchg
or
ds
cmp
mov
fstl
aas
das
xor
mov
sub
xchg
outsl
popa
mov
xchg
dec
scas
inc
addr16
mov
cs
mov
add
or
gs
pop
sbb
mov
push
mov
dec
xor
fst
xchg
pop
daa
stc
pop
pop
inc
add
jle
add
cmpsb
dec
mov
jecxz
test
in
or
sbb
mov
repz
sbb
ss
rorb
sbb
jp
arpl
mov
jle
push
cmp
fisttpl
mov
shrl
stos
popa
jmp
ret
in
cmpsb
mov
inc
insb
ror
dec
outsb
daa
cli
rolb
cwtl
imul
mov
fs
loop
cmp
jecxz
enter
imul
sub
into
movsl
cltd
push
jmp
pop
xor
int
xor
sub
and
xor
push
insb
mov
mov
dec
lock
mov
test
adc
mov
inc
adc
cli
push
cwtl
sbb
sahf
mov
leave
inc
loope
dec
sub
sub
js
out
dec
pop
sub
sbb
fnsave
pop
cwtl
insb
sbb
or
adc
imul
loopne
adc
movsl
cmpsb
adc
nop
hlt
loop
and
xor
sbb
lea
shrb
inc
dec
lods
pop
or
stos
push
cmp
in
movsl
mov
push
and
dec
int3
call
out
rcl
pop
xchg
cmpl
xchg
cmc
mov
mov
sub
mov
mov
out
scas
sub
ds
and
adc
sub
enter
jmp
xchg
adc
in
loop
std
loopne
adc
lock
movb
fmull
cmp
jns
xchg
cld
outsl
std
dec
pcmpgtd
ret
sbb
sub
add
sub
sub
mov
xchg
lahf
pop
pop
push
das
cmp
jle
popa
jne
cmp
dec
sbb
pushl
jg
push
js
inc
scas
dec
rol
arpl
mov
xor
dec
imull
sub
ljmp
xchg
push
and
cli
push
fbld
js
jle
jnp
inc
fmul
xor
xchg
add
sbb
sti
lock
int
lcall
mov
xchg
in
mov
pop
mov
xchg
cmpsb
sahf
and
stc
fwait
sbb
sub
shll
cmpsl
mov
push
lret
aad
imul
lret
add
add
arpl
scas
pop
mov
cmc
or
xchg
cld
push
sbb
mov
cmpsb
jno
addr16
dec
mov
lret
xchg
sub
inc
lret
jge
nop
adc
pop
jmp
pop
pop
filds
cmp
mov
xchg
cmp
jge
jg
or
leave
mov
push
clc
push
add
jmp
fisubs
sbb
scas
repz
addr16
sbb
je
iret
and
xor
das
jl
fyl2x
ret
int
xor
repz
in
and
cmp
jmp
add
das
imul
sub
cld
pop
push
addl
cltd
outsl
fidivrl
aam
xor
sub
mov
ret
jno
repnz
imul
pop
popa
mov
mov
jo
sbb
adc
shll
pop
sahf
pop
movsb
mov
imul
cmp
mov
lock
add
lds
call
cmp
dec
aaa
inc
pop
outsl
or
arpl
mov
leave
jb
xor
mov
es
test
mov
dec
lcall
sub
je
psubb
pop
bound
roll
sbb
inc
add
jge
and
add
mov
outsl
jno
mov
pushf
shrl
cwtl
mov
or
xor
pusha
sub
mov
xlat
mov
xchg
mov
mov
push
je
jge
and
insb
pop
cmp
ficoml
mov
call
jp
aas
jo
push
jg
stos
push
in
sub
push
add
lea
cmp
lret
push
xchg
and
icebp
es
std
pop
push
sub
pop
mov
ja
int3
fsubl
roll
push
push
sub
push
fdivs
push
bound
adc
popa
push
enter
mov
mov
mov
push
jne
cmp
mov
mov
push
call
push
inc
mov
out
frstor
mov
sbb
sub
test
mov
stos
fwait
ds
lock
lea
ja
push
sahf
mov
and
pop
inc
lret
xchg
fisubrs
roll
jmp
shlb
dec
or
mov
sbb
or
mov
or
mov
add
ret
mov
inc
jge
clc
jle
and
imul
es
xchg
fwait
xor
shlb
mov
push
xor
xchg
fs
cwtl
fwait
and
repz
rcrb
int3
or
sarl
pop
test
test
pop
arpl
das
test
lahf
jo
loop
pop
add
rclb
iret
test
add
cli
xchg
imul
push
pop
adc
mov
cmp
faddl
icebp
mov
xchg
subb
pop
ror
daa
mov
xchg
cmp
in
int3
cmp
mov
lds
inc
roll
roll
in
mov
inc
stos
divl
fimull
sub
ja
pop
outsl
loope
mov
cmpsb
mov
inc
in
mov
leave
bound
stos
mov
cmpl
adc
into
shlb
jnp
shr
dec
lea
pop
scas
adc
push
test
pop
in
adcb
or
adc
push
jne
and
mov
xor
jno
mov
lret
fxtract
adc
add
pop
fisubrl
int
hlt
pop
test
sub
mov
mov
js
dec
sub
mov
pop
xor
daa
xchg
lcall
pop
pop
pop
jmp
mov
out
inc
gs
dec
adc
adc
jecxz
aas
pop
fdivrl
ret
cwtl
pushl
sub
sub
cmp
pop
data16
repz
stos
call
movl
shll
lods
shrl
test
insl
sahf
jae
mov
dec
mov
ret
pop
bound
arpl
xor
xchg
jno
clc
lods
jb
mov
dec
adc
dec
repz
cmp
adc
add
cli
push
push
test
adc
inc
addr16
ljmp
pop
sbb
movsl
cmpsb
jle
lret
mov
mov
into
shl
pop
pop
ja
jecxz
addr16
inc
daa
mov
sti
jge
in
cli
push
add
sub
pusha
shrl
pop
lret
inc
sub
add
lahf
inc
cmp
rolb
aaa
fwait
jecxz
pop
mov
call
ds
xor
jb
ja
mov
xor
in
std
or
sub
pop
adc
adc
xchg
test
mov
subl
and
mov
pop
in
and
rorl
shll
in
dec
push
inc
movsb
push
push
test
in
dec
fs
adc
test
subb
xor
mov
insl
mov
es
sub
adc
pop
add
sahf
or
add
add
push
movsl
mov
sub
jbe
xor
arpl
jmp
ficomps
push
mov
adc
test
sub
pop
or
dec
fimull
jg
mov
cmp
or
loopne
gs
test
leave
pop
push
sbb
sub
pop
mov
das
cmpsb
sti
ljmp
cmp
ss
aaa
scas
imul
cmp
lock
or
mov
lds
jmp
or
add
cmc
popl
and
push
call
or
or
lds
jmp
pop
add
mov
jp
into
fbld
int
pop
and
jbe
jne
mov
jecxz
mov
and
push
jmp
fcomp
cmp
insl
popa
add
cli
jae
or
lods
dec
je
test
aaa
fdivs
inc
adcl
cmpsb
mov
xor
add
jmp
je
pop
xchg
popa
pop
ss
std
pop
jo
xchg
fmul
in
mov
je
cltd
dec
test
les
jnp
mov
jae
call
pop
push
or
clc
cmp
push
test
push
mov
sahf
cwtl
jb
dec
cmp
sti
mov
xor
mov
fsubs
ffreep
xlat
push
lret
out
jge
push
das
test
shlb
jae
mov
cmp
mov
clc
sub
daa
and
shlb
loop
leave
sbb
inc
daa
adc
test
fdivl
fs
dec
aad
jp
scas
stos
fcoml
pop
lret
mov
enter
push
scas
loop
cmp
movsl
xor
loop
jge
xor
push
aaa
shll
mov
ja
inc
sub
xchg
sub
outsl
or
rcrl
and
hlt
push
mov
rorb
jl
cmp
pop
mov
cmp
out
addb
popf
mov
out
mov
test
es
mov
jno
mov
cmc
inc
or
test
push
jnp
dec
jl
sub
or
jne
mov
mov
sbb
push
xchg
inc
jns
jl
xorl
daa
sub
or
rorb
push
fcompl
pop
imul
mov
push
and
sub
adc
xor
loopne
and
jbe
sbb
fidivl
cmp
stos
sub
fwait
int
xlat
sbb
xchg
fistl
stc
push
loope
divl
sub
call
pop
pop
mov
nop
push
xor
pop
mov
sbb
xor
stos
and
jge
jns
mov
cmc
aad
pop
push
fistpll
push
xchg
int
mov
cli
cmp
cmpsb
jmp
pop
outsl
enter
clc
xor
sub
ljmp
inc
popa
pop
adc
push
sti
sbb
addb
push
pop
lret
pop
fisubrs
dec
test
jecxz
mov
out
inc
fcompl
stos
shll
clc
in
inc
xchg
cmpsl
lock
push
inc
call
ja
push
and
dec
or
push
inc
aad
icebp
xlat
ss
mov
out
cwtl
jnp
mul
mov
xchg
mov
xor
push
sbb
mov
rcr
inc
cmpsl
into
loope
outsb
stos
push
mov
dec
call
and
lahf
add
jns
aam
test
ret
das
add
bnd
out
das
popf
sbb
or
pop
dec
push
mov
inc
cmpsb
mov
mov
repz
pop
inc
and
add
xlat
jno
sub
add
dec
int
jne
js
cli
clc
lods
out
hlt
sbbb
arpl
pop
pop
mov
or
aaa
aad
or
or
jns
push
jmp
jecxz
ret
mov
iret
lret
push
pop
xchg
mov
mov
jb
push
push
test
out
mov
or
into
cmp
inc
sub
sub
push
cld
jns
imul
cmp
adc
mov
inc
mov
mov
pop
cs
xchg
leave
and
lahf
fisttpll
sahf
leave
jp,pn
xor
lea
shlb
pop
xchg
sub
test
pop
test
lock
pop
xor
add
movsb
fdivrp
dec
adc
out
testb
int
adc
lods
inc
fs
mov
add
jb
pop
lahf
lock
jne
pop
out
andl
shr
xor
cmpsl
flds
fs
jl
and
xchg
bswap
xor
icebp
cmp
pusha
and
cld
xor
inc
repz
ret
rolb
and
mov
sahf
add
es
sbb
sbb
adc
xchg
hlt
mov
push
cmp
gs
sub
shlb
rcll
jg
add
jg
das
pop
test
dec
jae
jl
lods
popf
jnp
adc
cmpsl
js
fucomi
in
ret
sub
repnz
mov
into
pop
aas
arpl
mov
fsubs
imul
icebp
adc
pop
scas
nop
mov
imul
adc
and
cmp
gs
sub
adc
test
push
in
push
hlt
call
jns
mov
pop
push
mov
lods
bnd
adc
popf
and
addr16
mov
ljmp
shlb
loopne
jge
int3
sbb
pop
push
pop
inc
or
inc
cmpsb
jl
pop
movsb
inc
in
inc
sub
cmpl
scas
sbb
jle
insl
mov
and
jb
cmp
mov
cld
std
xor
call
lret
sbb
ljmp
lods
xchg
xchg
add
mov
cmp
mov
out
ret
jbe
pop
jmp
cltd
repnz
or
mov
insl
dec
push
dec
adc
jnp
insb
push
inc
push
mov
pop
repnz
add
in
popfw
xor
jmp
mov
hlt
adcb
pop
add
icebp
adc
ss
out
jno
roll
pop
das
aas
out
mov
andl
jl
pop
scas
jno
jo
lahf
test
enter
cmp
cld
push
aas
scas
fucomi
sub
aaa
je
inc
lds
gs
out
adc
jle
dec
inc
in
cltd
cmc
int3
repnz
dec
movsb
push
xchg
icebp
call
cmp
or
lds
lds
out
jmp
jmp
or
add
dec
jb
mov
lock
lods
clc
ljmp
push
in
gs
adc
fcoml
aam
sub
out
and
xchg
scas
and
mov
andl
aas
xor
dec
xchg
pop
aam
sbb
idivb
andb
sub
mov
inc
icebp
mov
das
push
insl
ja
add
pusha
add
ffree
cmp
out
jne
sub
out
cmp
scas
aas
pusha
cs
rorb
loopne
mov
or
xor
jae
lahf
push
or
aas
or
dec
and
cmp
pop
subl
xchg
out
inc
mov
and
fwait
test
addl
test
lods
rcl
dec
addr16
cmpsl
inc
std
mov
fs
jle
and
inc
jmp
nop
dec
in
lods
jnp
mov
test
push
les
mov
jae
sub
std
aaa
outsl
mov
xor
mov
mov
fnstenv
sub
dec
lahf
inc
nop
sbb
pop
test
gs
jbe
clc
dec
or
mov
pusha
shll
fsubp
pop
sbb
mov
adc
js
enter
les
inc
mov
int
adc
iret
lds
gs
sbb
stos
inc
mov
mov
jmp
mov
fs
cs
ljmp
imul
sbb
adc
mov
insl
stos
mov
cld
popf
fnstcw
fbld
into
lds
jo
fistps
push
inc
cli
push
sub
sbb
cmp
push
mov
sub
loope
sbb
jb
imul
mov
push
mov
and
dec
lcall
mov
popf
lret
test
dec
enter
inc
jb
push
out
das
cli
dec
pop
dec
mov
insl
cs
mov
arpl
rol
jne
clc
loop
jne
leave
sbb
mov
and
out
pop
dec
pop
stos
ss
mov
fistps
pop
iret
push
shrb
ja
lret
insb
push
sbb
sbb
in
dec
or
mov
fdivr
push
testl
add
ret
int3
mov
pop
out
shl
or
xor
cmpsl
cs
dec
dec
mov
xchg
cmp
mov
daa
stos
cmpsl
pop
push
nop
test
fwait
je
into
jb
push
testl
pop
ja
jge
jno
or
push
jns
fstpl
xchg
out
js
sbb
sub
push
loop
lods
popf
push
fsubrl
sti
push
fildl
lcall
inc
mov
popf
inc
jp
xchg
mov
add
pop
pushf
arpl
push
loop
add
push
shlb
es
or
in
shll
mov
sub
fucomi
or
xchg
leave
fldln2
pop
cmp
andl
in
lret
adc
mov
cmp
cmp
cltd
mov
xchg
loopne
ret
jp
xchg
push
out
sbb
mov
push
inc
es
cmpsb
mov
and
stos
push
mov
in
xchg
in
jbe
arpl
roll
out
adc
into
cmp
pop
adc
gs
pusha
sub
push
call
sbb
sub
dec
adc
lock
pop
movsb
out
push
cmpsb
test
pop
imul
fbld
inc
movsl
ss
enter
mov
cwtl
cwtl
adc
mov
scas
or
inc
jle
add
outsl
jmp
negb
lahf
push
lods
sarb
push
sbb
or
or
aad
icebp
test
cmc
movsl
leave
mov
lcall
stos
lcall
roll
imul
int
push
cli
inc
jns
iret
fs
mov
testl
mov
pop
sbbb
insb
mov
jmp
mov
xchg
and
std
in
int3
adc
pop
or
pop
mov
fs
insl
and
push
adc
lock
add
add
insl
stos
ds
mov
or
int3
das
xor
cvtps2pi
jns
scas
lods
and
xchg
pop
lcall
mov
divl
out
jo
add
jg
shlb
add
push
dec
cmp
and
pusha
rclb
loop
in
and
cmpsl
pop
in
lret
and
imul
dec
pslld
fs
mov
or
jae
dec
pop
inc
xchg
push
mov
pop
pop
outsb
add
jb
jo
xor
inc
js
fstp
xchg
jbe
popa
out
or
cmp
jmp
ljmp
fistpll
ljmp
popf
insl
sbb
shll
movsl
push
fucomp
cltd
sub
xchg
std
adc
push
loope
pushf
nop
pop
lret
jnp
pop
out
mov
fcmovnu
movsl
notb
and
orb
push
push
scas
push
test
cltd
lods
popf
addl
sbb
int3
inc
scas
dec
call
adc
pop
lods
sbb
dec
in
rol
mov
shlb
fimull
pushf
pusha
popf
cltd
cs
xchg
xchg
mov
add
aas
pop
les
adcl
in
push
inc
cli
mov
jne
out
in
mov
andl
sbb
dec
fisubrl
mulps
and
pop
adc
fldpi
lods
loopne
fwait
mov
mov
sbb
mov
adc
pop
inc
sub
push
rolb
lods
xchg
and
repz
sbb
xor
dec
sub
in
dec
adc
jae
adc
push
lods
rcll
arpl
fistps
pop
sub
lret
gs
outsb
xchg
xor
lods
add
mov
pop
jno
xor
sti
fidivrs
popf
nop
imul
push
arpl
inc
jmp
imul
mov
adc
lea
adc
imul
imul
xchg
roll
inc
pusha
pop
and
cli
sub
add
xchg
mov
add
leave
je
xor
cmp
dec
or
cmp
sub
adcl
cmc
dec
arpl
mov
jne
dec
adc
mov
lret
push
sub
ja
mov
inc
stc
xchg
popa
cld
cmp
pushf
and
mov
stos
jb
adc
mov
out
inc
pop
ss
push
out
pop
loope
jle
ds
sbb
aad
lahf
jl
mov
mov
or
sbb
sbb
jp
outsl
xchg
jge
jno
mov
sub
hlt
inc
out
push
insb
test
inc
imul
xor
scas
fs
ss
cltd
loopne
push
fsqrt
pushw
andb
lea
stc
pop
add
jecxz
test
ret
and
sub
or
push
icebp
and
lcall
jnp
pop
add
adc
call
lret
cmp
xchg
adc
lret
lret
fst
dec
pop
das
fdivrs
mov
rorb
stc
mov
pop
xor
jl
inc
inc
hlt
mov
ret
sub
jns
cmp
scas
dec
and
or
mov
mov
loopne
idivb
xlat
mov
dec
mov
icebp
aam
ret
pop
ret
xchg
and
sbb
add
sub
andb
pop
jbe
adc
push
js
push
in
jne
fwait
call
inc
adc
mov
sbbl
fidivrs
movsl
mov
and
fnstsw
fwait
sub
cmc
mov
cmp
ds
addr16
xchg
ljmpw
jbe
lock
add
insb
pop
or
xchg
arpl
push
call
cltd
dec
loopne
das
inc
sub
pushf
pop
push
mov
push
je
imul
xchg
inc
xor
xchg
adc
aad
xor
ret
xor
add
jp
aad
lahf
and
dec
gs
dec
pop
mov
test
pop
xchg
std
repz
cmp
enter
std
iret
xor
lahf
add
fisubl
pop
mov
inc
icebp
sub
push
mov
dec
lds
and
mov
inc
pop
cmp
jmpw
loopne
shll
mov
icebp
pusha
xchg
popa
jmp
mov
inc
sub
and
cmp
out
lock
cmc
dec
lahf
mov
fidivs
xlat
call
mov
add
mov
push
push
or
daa
or
ljmp
sbb
pop
popa
fsubrs
loop
sbb
pop
sbb
in
cmp
fsubrs
mov
mov
push
push
cwtl
fstpl
imul
dec
stos
or
cmp
xor
jmp
sub
mov
and
addr16
add
ja
clc
and
test
rcll
sbb
lahf
orl
mov
movsl
cli
mov
push
push
or
adc
or
lahf
mov
inc
push
dec
cwtl
xor
leave
xchg
int
sarb
int3
lcall
xor
mov
mov
push
ret
xchg
and
ret
dec
jne
add
jns
inc
xchg
mov
push
and
inc
inc
mov
je
mov
lret
sub
loopne
lahf
dec
push
ds
sahf
fisubrs
cmc
out
jp
cltd
icebp
ds
mov
jo
aam
lods
inc
imul
pop
mov
jp
scas
add
popa
push
sbb
out
push
pop
and
jge
lods
xchg
cmp
add
xorb
add
int3
fs
sub
xorb
sbb
sbb
push
mov
dec
fiaddl
popl
lock
push
xchg
fsubrl
rcl
ret
stc
jbe
sub
push
mov
xchg
mov
sub
cmp
adcl
pop
sbb
inc
adc
mov
test
and
cmp
mov
ss
fidivrs
ror
insl
sbb
es
mov
or
sahf
dec
out
cld
imul
push
ret
add
jl
cs
sub
gs
rorb
fisttpll
sbb
je
movsl
sbb
ljmp
mov
mov
sahf
hlt
xchg
mov
sub
xor
xchg
inc
xor
jae
cmp
inc
mov
stos
stos
xor
inc
js
fs
dec
mov
push
lods
idivl
xchg
sbb
out
sub
or
lcall
rclb
rcrl
icebp
cld
cmpl
cmpsb
stc
ljmp
and
mov
insb
inc
sub
imul
aaa
fiaddl
push
sub
outsb
stos
pop
outsl
enter
insb
rcpps
xchg
jge
xchg
ljmp
sahf
roll
or
xchg
push
mov
xchg
out
lret
mov
or
subl
enter
push
icebp
imul
cmc
jnp
ret
mov
insl
jns
push
in
fists
or
xlat
xchg
sub
jg
stc
shlb
pop
iret
mov
sbb
pop
cli
jne
out
sub
test
arpl
nop
dec
jns
xor
mov
jne
add
mov
xchg
push
ljmp
mov
jae
arpl
hlt
pop
push
into
lret
call
insl
dec
scas
shrb
daa
dec
mov
loope
sbb
je
xchg
mov
push
lods
jmp
bound
cmp
nop
adc
cmp
imul
mov
or
dec
xorb
xchg
mov
mov
rolb
sbb
test
add
sub
push
xchg
ds
or
xor
mov
stos
lods
add
mov
lods
in
xlat
int
fcomps
subl
mov
push
mov
or
ficoml
xchg
stos
jge
pop
mov
mov
xor
adc
mov
xor
mov
sub
mov
cmp
and
je
dec
or
ret
mov
xchg
jae
sbb
mov
sub
int3
pop
adc
sbb
mov
mov
dec
int
pop
sub
rcrb
and
scas
push
ret
mov
inc
xor
push
in
and
frstor
ds
in
push
fimull
loope
loope
fiaddl
rcl
inc
test
sub
push
mov
clc
sub
sbb
pop
shlb
mov
insb
jmp
sarl
sbb
dec
push
or
sub
ds
jmp
jecxz
data16
and
jge
cwtl
inc
fiadds
insl
imul
xchg
stc
or
aas
jnp
mov
imul
and
jge
lret
dec
rcl
lcall
roll
fcomp
in
xlat
xchg
aad
pop
insb
mov
adc
out
sbb
in
jb
pop
stos
lret
ja
sub
popf
insl
pop
aad
lea
mov
pop
mov
pop
jecxz
divl
lahf
int3
or
lcall
insl
das
in
in
push
sar
cltd
cmp
je
cmp
loopne
and
mov
add
popf
jno
adc
popf
ret
mov
bound
and
cmp
mov
out
mov
dec
and
inc
sarl
rclb
hlt
repnz
imul
insl
mov
and
jg
shlb
testl
sahf
in
dec
inc
inc
fsubrp
and
pop
mov
inc
mov
das
ljmp
notl
push
add
lods
cmp
ds
lahf
xchg
mov
xchg
add
push
push
mov
xchg
aam
ret
push
movsb
roll
outsl
fninit
push
mov
daa
jmp
popf
sub
lds
outsb
icebp
adc
out
ffree
int3
or
cmp
cmc
inc
mov
adc
adc
or
mov
jp
push
push
add
outsl
rcrb
xor
xor
cmp
adc
adc
and
mov
or
mov
aas
xchg
movsl
lea
xchg
inc
mov
cmp
mov
pop
and
mov
jmp
mov
in
shlb
cltd
mov
ljmp
pop
lods
dec
xor
add
xchg
xor
fsub
int3
das
pop
outsb
popa
iret
fld
sarl
adc
mov
push
mov
push
xchg
dec
sbb
and
in
or
push
pop
out
xor
xchg
shlb
jecxz
cmp
dec
rorl
push
incb
inc
xor
lds
nop
imul
std
inc
add
sub
push
ret
adc
jne
fadds
rol
inc
nop
adc
mov
mov
insb
cmp
loopne
pavgw
imul
mov
mov
addl
dec
adc
jg
sub
jecxz
das
fcoml
mov
out
cltd
sub
sub
icebp
pop
mov
outsb
or
out
aad
scas
add
pop
imul
hlt
insl
add
and
lcall
sbb
or
xor
cmp
stos
sub
adc
repnz
pushf
sub
cmp
mov
shlb
xlat
lds
stos
mov
insb
jo
lahf
ret
cmpsb
bound
mov
insb
jg
mov
ds
jge
fldl
scas
ret
xchg
shr
cwtl
sarl
das
fildl
adc
mov
jne
lret
dec
sub
cmp
mov
out
or
adc
jb
adc
out
in
int3
imul
push
sbb
cmp
or
pop
xchg
lods
fdivs
pusha
into
cmp
shld
sub
sub
loop
jg
negl
add
in
sub
testb
cmp
cmpsl
stos
rcl
xor
ja
cwtl
mov
nop
sbb
call
dec
push
dec
loop
in
xchg
adc
cmp
loope
or
into
pop
jbe
mov
subb
adc
and
pop
pop
cs
jge
mov
jae
out
sub
mov
lds
ret
xchg
xor
mov
aam
xchg
loopne
mov
sti
mov
xchg
jecxz
jle
clc
test
fstps
aas
pop
mov
fisubrl
ds
addr16
fcmove
fists
das
addr16
adc
int
dec
insl
lock
or
lahf
pop
mov
dec
repz
add
mov
xor
xchg
push
jns
outsb
jp
rorb
dec
pop
push
popa
mov
xor
xchg
mov
fldenv
sub
int
xor
stc
daa
pop
les
dec
adc
fstpt
push
popf
push
cltd
shl
in
jge
lahf
and
mov
mov
xchg
out
enter
daa
popa
je
rcl
push
mull
nop
jae
fisubl
xchg
and
fmull
dec
jle
sub
pop
cltd
inc
aam
cld
mov
enter
negl
call
fnstcw
jg
scas
out
icebp
push
pop
mov
lds
enter
ret
test
sahf
sub
ror
roll
or
lea
fldt
jae
bound
in
int3
xchg
sub
aad
jge
mov
mov
aaa
pop
scas
dec
jb
popa
inc
mov
inc
jae
scas
out
aaa
fbstp
cwtl
dec
sub
fwait
mov
rorl
mov
inc
mov
cwtl
add
mov
les
push
inc
jns
bound
xchg
mov
mov
dec
mov
data16
ja
inc
add
es
xchg
aam
sbb
sub
lods
add
gs
sub
cmpsb
cmpsb
out
cwtl
dec
sahf
xor
loopne
in
sub
mov
xchg
sub
sbb
jbe
mov
dec
fcoms
scas
cmp
call
aaa
imul
cmp
out
inc
shll
insb
pop
sti
pop
push
mov
xchg
mov
mov
mov
idiv
xchg
pushf
lahf
cmp
adc
int3
jae
pop
loopne
repnz
fistpll
jl
pushf
fs
sub
rorb
add
pop
aas
inc
sbb
movsl
jecxz
jb
mov
xor
mov
es
cmpsb
pop
aas
push
cmp
subl
ljmp
jno
push
cmp
lret
rorl
pop
test
pop
out
daa
xchg
call
push
stc
dec
and
mull
or
or
inc
cmpl
push
lods
push
in
f2xm1
aas
dec
sub
dec
nop
imul
and
xor
cmpsb
and
sbb
stos
daa
mov
ds
push
push
out
lret
pop
clc
loop
mov
shll
dec
lock
data16
std
inc
shll
xor
enter
and
bound
jns
sbb
inc
xor
mov
push
push
jno
jnp
clc
dec
scas
push
xchg
das
mov
es
pop
push
sbb
mov
sbb
mov
or
inc
mov
testb
stc
dec
cld
or
lret
adc
movsb
sti
daa
divl
cmpsl
rol
iret
js
jno
mov
adc
xchg
mov
mov
or
sbb
pop
xorb
ljmp
call
pop
outsl
sbb
sbb
inc
sub
sbb
add
jl
jg
mov
in
xor
test
loop
xor
sti
xor
xchg
sub
mov
adc
jle
jle
movb
pop
test
inc
in
mov
cmp
aad
lret
ss
adc
add
aad
xchg
stc
imul
cli
sbb
mov
repz
cmpsb
push
and
out
add
dec
mov
in
xchg
lods
sbb
sbb
bound
test
dec
xor
inc
sbb
cmp
call
push
cwtl
dec
adc
out
out
push
cmp
mov
mov
in
jmp
js
xor
filds
std
adc
popf
xlat
and
pop
dec
mov
fmul
repnz
push
loop
mov
push
lods
ds
movsl
cmp
pushf
mov
mov
push
popf
dec
fs
lcall
jo
push
inc
mov
ret
jmp
lods
leave
lods
clc
push
jae
inc
cmpsl
repz
or
xchg
mov
sbb
mov
movsl
insl
cltd
dec
cwtl
sub
jmp
pop
jp
adc
aaa
cmp
ss
sarl
imul
lret
mov
shll
lcall
jge
bound
add
aas
mov
int
fistpll
and
lea
xchg
mov
sub
cs
and
lods
jae
jmp
adc
ljmp
addl
insl
test
jno
imul
push
jg
inc
mov
ficoml
mov
rcll
dec
dec
movsb
lret
jns
xor
ret
fists
xorb
sub
adc
scas
mov
je
popf
xchg
sub
pop
pop
ret
enter
movsb
pop
sub
mov
inc
mov
mov
in
or
ficompl
pop
daa
stos
and
dec
cmp
jno
arpl
incl
xlat
and
aad
insb
je
mov
lods
push
adc
cmp
stos
cmp
loopne
or
stos
sub
xchg
cwtl
sub
mov
ljmp
dec
cmc
scas
cmp
xchg
xchg
jg
mov
sbb
int
aaa
xchg
shlb
add
pop
sbb
cltd
cltd
add
mov
jnp
xchg
loop
cld
adc
jo
ljmp
decb
mov
std
ss
mov
imul
out
fcoml
lahf
repnz
sbb
cmp
inc
fiadds
xchg
jmp
xchg
jg
bnd
add
in
jge
push
leave
lds
insb
add
inc
clc
inc
push
add
nop
sti
jb
aaa
test
cmp
imul
mov
gs
and
test
xor
mov
push
cmp
xchg
insl
lahf
and
push
lcall
add
inc
popf
lods
dec
add
push
loopne
test
pop
and
js
mov
int
pop
jbe
sarl
sub
dec
out
mov
mov
sub
subb
movsl
shl
jno
repz
rcl
mov
mov
jns
call
push
stc
pop
imul
add
loop
insl
aam
fwait
pusha
jnp
stc
cmpsb
push
inc
dec
mov
fimuls
mov
lods
mov
sti
les
sub
cmpsb
sahf
xchg
mov
and
popa
sbb
dec
test
jp
adc
cmpsb
jns
mov
jmp
cmp
xadd
push
cmp
mov
shr
jne
add
ficomps
cwtl
sub
shlb
ss
rep
mov
adc
aam
mov
mov
xchg
jecxz
inc
jmp
and
xor
stos
test
mov
jge
jne
jg
daa
sub
cwtl
adc
push
xchg
lods
add
push
into
xchg
iret
or
sub
mov
fcoml
jno
jno
or
mov
or
push
fmulp
jo
xor
fldl
cmp
test
lret
pop
out
push
bound
push
push
les
fcompl
and
jmp
cmpsl
je
repz
in
lods
adc
mov
movsb
adc
int
add
jns
jl
es
pushf
cwtl
outsl
pop
loope
xchg
aad
jb
xchg
add
enter
mov
dec
out
or
sbb
and
pushf
outsl
ret
jecxz
mov
hlt
dec
sbb
push
sbb
js
pusha
cmp
aas
xlat
mov
push
jmp
sahf
adc
dec
aad
push
call
pop
jge
add
ss
sbb
aam
sarl
movsl
aam
sti
and
lret
sti
sub
loop
sbb
out
loop
call
sahf
repnz
sub
mov
pusha
cmpb
enter
insl
popf
pop
cmp
adc
and
aaa
pop
test
mov
mov
or
andl
and
ljmp
roll
imul
pop
mov
mov
loopne
push
or
movsb
dec
sub
sub
push
or
or
subb
xor
pop
sub
cmp
aaa
mov
xor
les
jmp
add
repz
in
scas
lds
sub
push
mov
jmp
push
adc
imul
inc
xchg
mov
sbb
repnz
xchg
int
mov
dec
fimuls
mov
std
sbb
sbb
faddl
mov
mov
xor
cmp
adc
sbb
xchg
mov
jge
or
stos
sub
mov
mov
mov
cmp
adc
shlb
cmc
pop
inc
xor
call
mov
dec
popf
add
mov
xor
mov
into
js
testb
or
mov
xchg
in
sbb
cmc
mov
cld
jecxz
mov
xor
push
arpl
sahf
das
int3
or
and
mov
or
ror
loop
fidivs
loopne
mov
lods
lods
add
sub
cmp
outsb
cwtl
nop
movsb
outsl
dec
and
or
lods
popf
add
ljmp
inc
pusha
push
or
iret
in
and
vmovlps
popa
cmp
sbb
ret
fistpl
stos
outsl
sub
mov
dec
dec
popa
mov
popf
addb
les
push
divb
stos
lds
push
sahf
das
and
movsb
pop
xchg
pop
pushf
adc
test
cmp
dec
inc
or
adc
push
iret
mov
rclb
pop
push
fbld
pop
test
pop
sbb
and
and
jo
scas
lahf
adc
add
imul
in
mov
sbb
inc
add
ret
jp
mov
xchg
fiaddl
arpl
xchg
sub
iret
xchg
or
sub
iret
mov
lea
pop
or
iret
or
add
test
repnz
sbb
je
popa
mov
cmp
mov
pop
in
jl
and
hlt
cli
mov
jmp
lahf
sub
add
fisttps
scas
cmpsl
mov
add
fildll
lcall
pop
mov
movsl
jg
imull
rol
jecxz
ficoms
jle
or
or
and
test
dec
push
sar
fsts
jp
pusha
xor
mull
sbb
push
mov
pop
or
jb
je
xchg
ljmp
fnstsw
sbb
dec
inc
push
pop
mov
and
xchg
arpl
dec
jp
mov
sbb
scas
inc
lret
pop
ss
mov
inc
popl
stos
lods
mov
fldl
popa
add
sub
scas
out
and
push
inc
rcll
movsb
cmp
cwtl
nop
sti
popa
dec
stos
es
adc
add
fwait
sbb
daa
dec
jo
lahf
insb
popf
mov
cmp
jmp
movsl
pop
pusha
sub
ret
mov
or
cli
lds
rcrl
jns
mov
sbb
icebp
in
nop
scas
and
jae
sbb
popf
ds
pop
sahf
xlat
sahf
cmp
jbe
lods
push
push
cmp
xor
imul
aam
loope
cld
outsl
cmp
mov
add
loopne
dec
aaa
cmpsl
ljmp
lret
shl
mov
jo
or
mov
sub
push
adc
shr
cwtl
inc
sub
jno
mov
push
sub
dec
xor
mov
or
mov
push
loop
sti
in
push
test
aaa
mov
push
push
rol
sbb
mov
mov
test
aam
lods
mov
inc
mov
xchg
nop
jnp
das
sbb
dec
pop
xchg
push
dec
mov
xlat
adc
movsb
push
les
fcoms
cmp
movsl
xlat
std
leave
mov
dec
scas
jp
in
pop
popf
jp
pop
inc
lcall
and
test
stos
xchg
test
add
loop
rol
ja
outsb
jne
test
lods
and
mov
repnz
das
fildll
in
adc
daa
mov
or
pop
push
mov
call
pop
es
outsl
pop
pop
scas
sub
or
js
push
add
sbb
inc
test
lods
sbb
push
mov
ss
mov
fcomps
int
sub
pushf
int
mov
xor
xchg
inc
inc
adc
sbb
std
aam
and
sub
pusha
lds
stc
add
mov
jmp
movsb
sahf
mov
sub
aam
sub
dec
or
rcrl
xor
mov
jmp
xchg
test
lcall
repz
test
rclb
jl
sbb
rol
cmpb
jecxz
sbb
jl
mov
aad
test
movl
outsl
ret
pop
adc
shl
bound
mov
test
xchg
lods
scas
add
mov
cmpsb
jnp
push
mov
testb
int3
je
or
jns
sub
pop
mov
dec
scas
lods
push
lret
mov
jbe
jmp
xacquire
sub
jns
mov
sbb
ss
push
fldt
lret
imull
and
cli
xchg
loopne
aas
jl
xchg
stos
mov
jle
mov
iret
sub
sbb
int
mov
add
outsb
mov
cmpsb
cmpsb
mov
call
or
mov
mov
jg
pop
pusha
lock
call
out
outsl
xchg
outsb
test
dec
icebp
dec
jae
in
inc
xor
xor
int
das
bound
xor
shl
dec
pop
loop
in
inc
jmp
add
in
aad
insl
inc
loope
cmp
bound
fnstcw
mov
xchg
rorl
pop
hlt
xchg
pop
pop
jecxz
fisttps
hlt
push
div
and
mov
dec
pop
push
dec
hlt
cmp
mov
mov
arpl
push
mov
xor
daa
inc
push
cmp
pop
mov
cmp
lahf
js
je
movsl
imul
mov
psubsw
adc
xchg
mov
roll
jge
inc
gs
stos
push
sbb
lods
sahf
mov
stc
out
stos
shr
aaa
sub
filds
cmp
dec
nop
xchg
aad
or
cltd
das
xor
movsl
pop
push
scas
pop
aaa
outsb
shl
sub
dec
mov
lahf
dec
xchg
data16
cmpsb
push
xlat
out
mov
cmp
jle
jns
orb
js
pop
inc
jg
push
sarl
cmc
xchg
mov
sar
pop
frstor
jmp
mov
pop
aam
jecxz
mov
push
call
cmpsl
xchg
lahf
mov
inc
xor
insb
sub
lcall
xor
add
imul
xchg
cmpsb
xchg
cwtl
inc
mov
xor
mov
mov
jo
lods
mov
mov
icebp
and
adc
sub
inc
test
nop
jnp
add
clc
mov
dec
sub
out
jne
mov
xchg
adc
ret
arpl
jb
cmpsl
adc
add
or
es
loope
mov
and
insl
mov
and
dec
add
arpl
bound
fwait
test
aam
leave
mov
repnz
psubsw
push
mov
movsl
dec
sbb
xor
leave
mov
cmp
adc
mov
dec
dec
mov
sbb
adc
ret
mov
pop
jecxz
xor
fldenv
lret
xor
rcrb
cli
jmp
lock
jo
sub
pop
fistpl
sbb
imul
add
test
fdivrl
ret
iret
lods
int
mov
insb
fsubs
cmpb
call
repnz
fdiv
or
ret
dec
in
cmp
xchg
inc
negb
mov
iret
jmp
push
mov
fstpt
repnz
imul
xchg
mov
negb
fs
gs
dec
xchg
call
cld
loop
imul
cmc
stc
cld
loopne
mov
sahf
push
mov
push
neg
shrb
lahf
clc
pop
insl
adc
mov
inc
lret
imul
cmp
imul
addb
push
imul
lcall
jmp
mov
addr16
hlt
sub
les
or
mov
dec
popf
lret
mov
rcrb
stos
cmp
push
add
lock
stos
int
js
in
push
arpl
iret
xchg
add
loop
jl
nop
mov
scas
push
pop
lret
push
cmpsb
or
sbb
mov
adc
push
shl
loop
push
jnp
nopl
das
dec
pop
xor
and
and
push
adc
dec
int
cmp
sbb
pop
les
stos
xchg
lret
nop
insb
and
sub
in
cli
mov
ret
pusha
lods
dec
add
test
xchg
lea
push
loop
out
push
std
dec
test
sbb
push
inc
insl
ds
in
fmul
adc
sahf
dec
and
mov
mull
fmuls
leave
push
adc
cmpl
ret
loope
fnsave
adc
out
dec
iret
loop
push
cmpsl
addr16
pop
sbb
xor
mov
lahf
sub
lcall
or
rol
mov
mov
or
push
xchg
imul
jbe
inc
pusha
xor
or
movb
pop
lods
loop
push
adc
push
ret
mov
jg
cmp
push
outsl
dec
mov
mov
pop
mov
inc
imul
mov
mov
dec
andl
movsb
xor
mov
icebp
cmp
cli
and
imul
loopne
gs
cmp
sub
sub
xorl
lret
fldt
cmpsb
addr16
mov
jno
jae
pop
or
push
inc
fcomps
clc
adc
int3
lret
mov
cwtl
xor
xchg
in
popa
xchg
cli
out
jl
addb
mov
jno
pop
imul
sub
loopne
dec
inc
outsl
frstor
xor
repz
insl
mov
or
hlt
xor
mov
pop
fs
xchg
push
inc
pop
stos
std
les
fists
mov
les
lock
cmp
push
movsl
sbb
sub
aam
or
mov
adc
add
xchg
lret
lret
or
scas
adc
lds
icebp
mov
pcmpeqd
sti
mov
orl
fbstp
ret
push
mov
push
scas
scas
idivl
push
inc
push
add
jb
mov
pop
cmpsl
adc
lret
sub
into
push
sub
pop
mov
mov
jp
insl
jmp
add
push
jno,pt
bound
sub
sub
clc
sbbb
ficomps
lds
leave
sbb
xchg
jge
jne
enter
outsb
cs
jnp
jle
push
nop
ret
loopne
sub
add
mov
sub
insl
int
mov
push
ficomps
mov
push
inc
mov
ja
ds
xorb
xchg
sbb
clc
imul
out
lahf
std
sbb
or
ja
or
sbb
cwtl
sarl
adc
ret
mov
cmp
jno
and
inc
jmp
add
stos
jo
clc
ds
out
jecxz
dec
and
cmp
inc
xor
add
jne
xchg
std
dec
or
push
jg
sbb
clc
sbb
push
push
lret
int3
ficoml
mov
ljmp
inc
xchg
jo
insb
jmp
adc
loop
lret
mov
or
pop
ret
fiadds
out
mov
push
or
ja
xchg
in
push
push
ss
xchg
xchg
rorb
xchg
push
daa
shrl
testl
sbb
mov
or
xchg
in
ret
mov
imul
mov
repnz
or
fildll
mov
fs
push
les
sbb
int
mov
mov
inc
test
jecxz
out
cmp
add
sub
movsb
lcall
xor
pop
js
daa
pop
sub
int3
testb
fwait
shrl
daa
dec
fimuls
mov
popa
mov
sbb
mov
push
xor
ret
pop
das
lahf
mov
add
add
imul
notl
icebp
cwtl
movsl
cmc
call
add
xor
lock
sbb
cmpsl
out
sub
int
mov
pop
popf
push
pop
jmp
leave
xchg
push
movsb
je
es
mov
sub
sbb
test
fisttpl
mov
lret
mov
mov
in
cmc
add
xchg
addr16
movsb
and
mov
in
test
fcomps
imul
inc
inc
movsl
or
xor
int3
cmpsb
pop
fcomi
clts
cmp
pushf
mov
outsb
add
push
mov
ja
inc
push
test
and
pop
inc
jno
cmp
cmp
sbb
out
jnp
or
mov
mov
movsl
xchg
cmp
jle
mov
cmp
pop
das
scas
and
adc
jae
mov
or
js
and
cmp
mov
jge
mov
add
in
sbb
ret
mov
das
loopne
sbb
enter
pop
mov
cmp
dec
mov
shll
mov
mov
popf
int
test
sub
test
jl
push
push
into
out
xor
xchg
mov
test
out
sbb
push
fldcw
mov
int
ret
vunpcklps
mov
imull
mov
aad
sarl
and
cmp
xchg
push
bound
pop
cmp
pop
dec
push
es
xor
fwait
and
pop
pop
out
cld
sub
mov
xor
outsb
fldl
inc
pop
xor
xchg
enter
adc
xchg
and
inc
sahf
adcb
mov
dec
sbb
sbb
dec
sbb
mov
mov
jno
mov
shlb
jbe
jle
scas
inc
adc
ljmp
sbb
scas
jbe
mov
pop
shl
add
sub
xor
mov
sbb
ljmp
jo
les
daa
out
pop
sti
jp
gs
cmp
xchg
lods
jecxz
in
push
loope
roll
out
mov
in
int
inc
or
adc
adc
push
cmpl
mov
loop
lods
sbb
aam
fcmovnu
cltd
stc
pop
and
push
cwtl
cmpl
insb
sahf
nop
in
xor
shrb
add
or
push
mov
test
pop
adc
adc
mov
sub
stos
sbbl
push
and
xchg
xor
sahf
cmp
jp
call
lea
inc
xchg
in
mov
mov
jl
popf
into
shrl
pop
sbb
mov
add
imul
jp
mov
incl
cwtl
sahf
xor
aaa
hlt
or
into
mov
into
xor
adc
and
shrb
push
push
sti
into
shlb
icebp
test
mov
ror
mov
sbb
stc
test
movq
into
or
xchg
inc
fs
je
in
mov
cmp
sub
push
out
shlb
mov
clc
scas
packsswb
mov
push
imul
es
outsl
add
das
fdivrs
fistl
shrb
call
test
mov
dec
push
add
mov
iret
nop
sub
popf
iret
lds
or
gs
lret
pop
fdiv
jno
fistpl
rcr
push
icebp
cs
cs
daa
pop
mov
je
lock
movsl
cmpsl
fidivrs
mov
and
or
data16
cltd
adc
and
decl
and
fstl
dec
shlb
out
daa
fsubrs
add
pop
std
push
adcl
jae
ljmp
pop
popa
out
iret
shlb
pop
popf
inc
cld
add
popf
pop
mov
aas
fadd
movsl
inc
jmp
jle
inc
mov
push
jp
hlt
or
shl
fldenv
in
sbb
add
test
push
ret
test
or
ud0
sub
mov
jae
add
adc
call
sbb
dec
leave
xlat
fistps
jle
mov
push
sbb
cli
sub
add
add
divb
aam
inc
mov
mov
arpl
mov
jbe
pop
jmp
arpl
cmp
push
pop
xor
dec
dec
popa
add
imul
stos
push
xchg
clc
jmp
fsubl
push
inc
andb
iret
mov
jne
cmp
in
out
and
mov
push
aas
fs
inc
xchg
push
mov
adc
jmp
aad
sub
imul
jae
jl
stos
dec
xor
jb
mov
addr16
loopne
pop
aas
xlat
stc
xor
xorl
xchg
popf
stos
daa
fsub
mov
cmp
das
push
sbb
sub
mov
fidivl
je
pop
popa
lahf
add
dec
push
and
mov
sti
mov
clc
out
cmpsb
jmp
push
jb
push
std
cmpb
aam
out
movb
push
aam
pop
jmp
out
pop
movb
popf
xor
cmp
in
push
dec
lods
or
lds
lret
push
push
jo
lahf
push
pop
fnsave
mov
dec
ret
xchg
push
lcall
in
jge
sbb
push
inc
loopne
sbb
pop
outsl
xor
mov
mov
adc
in
inc
push
cmp
jmp
mov
scas
or
mov
jl
cwtl
repnz
pop
ds
push
cs
sbb
test
xor
jnp
sbbb
adc
cld
pop
cmpsb
or
addl
bound
adc
xor
ret
mov
pop
lret
push
mov
cmovno
loop
jge
sub
mov
inc
ljmp
mov
jae
mov
add
cmp
ljmp
cmp
ss
add
xlat
xorl
mov
rorb
or
and
add
push
add
inc
xor
jg
fwait
mov
pop
or
xchg
je
sub
mov
cld
wrmsr
add
pop
fstps
dec
pop
push
aam
add
cli
mov
shrb
ja
dec
cmp
and
inc
jmp
jecxz
xchg
jbe
cmpsb
fstps
aam
into
dec
mov
jnp
xor
into
mov
sub
clc
xchg
jl
xor
dec
push
xchg
xchg
xchg
leave
das
sbb
lods
and
push
shrl
add
mov
xor
dec
mov
push
pop
and
mov
and
jp
and
ficoml
je
fimuls
aaa
xchg
aaa
ret
adc
dec
dec
push
sbb
movsl
push
mov
inc
push
push
mov
roll
ss
jnp
cwtl
push
bound
xor
mov
dec
nop
push
jmp
imul
or
andb
mov
jge
outsw
mov
adc
xlat
ret
dec
add
loop
add
ret
or
xor
jl
mov
into
jae
mov
pop
mov
or
repz
pusha
adc
faddl
mov
popa
xchg
enter
sub
pop
push
jae
xchg
sub
ficoml
out
aad
inc
sbb
push
push
push
outsb
xchg
test
cmp
pop
xchg
mov
ret
popf
pop
dec
repnz
stc
jne
pop
scas
push
xlat
or
cmc
and
jnp
sub
popf
sbb
cmp
int3
enter
pop
xchg
sti
mov
add
iret
xor
pop
sub
and
pop
push
ds
sahf
clc
xorl
ret
add
aaa
add
inc
add
stos
pop
pop
mov
xor
push
xor
setae
sub
add
adc
cmpl
pop
adc
mov
pop
test
jo
xchg
stos
push
rolb
cmp
jne
nop
dec
cmp
pop
sbb
sub
scas
jb
sub
cmp
push
test
sbb
adc
test
jns
pusha
scas
es
or
mov
push
dec
in
fbld
leave
push
push
rolb
push
movsb
cmc
adc
add
xchg
lret
pop
xchg
mov
cmp
out
negb
pop
mov
dec
popl
movsl
shrl
sti
sbb
mov
mov
lods
jne
out
add
out
test
add
mov
sbb
adc
icebp
cs
cmpsb
movsb
pop
stc
cmp
inc
out
je
ljmp
mov
mov
mov
xchg
rol
push
xchg
or
in
out
test
je
repz
mov
cmp
in
sub
fnsave
inc
pop
jge
jbe
sti
mov
sub
add
jno
mov
enter
adc
cmp
or
add
popf
pop
mov
adc
mov
fbstp
or
sbb
std
xor
shlb
cli
adc
mov
das
add
push
pop
pop
cmpsl
mov
clc
ret
dec
into
insl
dec
push
popa
in
pop
add
lret
push
les
or
or
pop
pop
sub
and
sbb
mov
sbb
cmp
pop
mov
xchg
or
insl
push
dec
jge
jl
test
aad
jnp
std
sbb
xor
jb
mov
jl
scas
lahf
pop
enter
mov
ret
lret
mov
sti
dec
in
and
aaa
stc
mov
decb
stos
pusha
mov
jns
xlat
jl,pn
jle
hlt
dec
jno
inc
push
adc
cmpsl
dec
push
dec
jl
xchg
jg
pop
inc
pushf
jae
repnz
insb
mov
enter
push
sti
fcomi
mov
dec
pop
dec
xor
fdivrs
or
xor
and
jo
xchg
pusha
das
adc
and
jbe
adc
divb
in
jle
outsb
and
ret
outsb
test
lea
repz
mov
stc
jbe
jno
mov
stos
das
popa
ret
xlat
fimuls
mov
mov
fidivs
add
pop
push
jmp
jbe
or
inc
scas
outsb
aas
lret
dec
xchg
xchg
pop
push
push
lea
in
fsubr
mov
clc
insb
cmpl
movsb
popf
dec
movsb
sar
sbb
rol
test
jecxz
and
shrb
mov
into
fsubl
lea
pop
addl
adc
dec
dec
add
mov
sub
test
setbe
out
test
jecxz
movsl
data16
pushf
jns
stos
fidivs
addr16
push
pop
sbbb
iret
jp
testl
pusha
clc
stos
xlat
out
or
pop
divl
mov
jge
loopne
jg
add
popa
lds
mov
inc
sbb
lret
inc
cmp
test
xchg
jne
sub
repz
scas
mov
sbb
jno
jae
pop
ja
movsb
push
dec
loopne
js
mov
rolb
clc
mov
or
add
lret
ljmp
jle
push
sahf
ret
cs
addr16
cmp
stc
mov
icebp
outsb
mov
incb
adc
push
adc
xorb
sar
jns
fdivr
scas
xchg
mov
add
jno
js
jno
inc
cmp
test
add
pusha
jp
imul
push
pop
pop
xlat
inc
lcall
hlt
cmp
lahf
in
mov
cmp
inc
roll
fiaddl
or
dec
addb
xor
inc
insb
nop
jge
mov
neg
pusha
stos
adc
pushf
inc
inc
aad
std
mov
outsl
sub
adc
sub
adc
inc
mov
sti
add
dec
aam
dec
lods
cmp
ficomps
xchg
out
insl
jmp
cmp
sti
arpl
movsl
sbb
cltd
call
push
arpl
fcmove
sbb
mov
mov
pop
push
pop
sbb
mov
push
in
inc
xchg
das
add
pushf
pop
mov
cmc
and
mov
test
mov
jmp
fcmove
in
popa
and
xchg
dec
sub
add
mov
xchg
xor
rcrb
push
fwait
and
xchg
mov
pop
mov
and
mov
push
fwait
xlat
dec
pop
mov
scas
fsts
test
and
inc
inc
jnp
daa
jbe
dec
sub
sub
push
sbb
cltd
dec
fcoms
sbb
adc
stc
in
xchg
ss
fnsave
and
lret
mov
into
cmc
cmp
and
enter
fidivl
jmp
pop
lret
cld
in
jge
jecxz
inc
mov
call
fstpt
mov
outsl
cli
negl
pop
mov
sub
les
jne
xlat
or
lods
add
cmp
dec
sahf
scas
jmp
cmp
int3
int
adc
cmp
mov
andl
xchg
jl
xor
adc
icebp
fistpl
cli
in
loopne
push
fldcw
sub
and
inc
push
outsl
insl
jb
pop
insb
pop
dec
inc
lea
fistpl
or
mov
jb
inc
cmp
mov
and
xchg
adc
mov
fisttpll
xorb
lods
loopne
mov
stos
lcall
aad
pushf
divb
scas
push
add
jmp
scas
inc
imull
into
jle
inc
cmpsb
loopne
or
adc
inc
subb
fiadds
cmp
jnp
adc
ds
das
dec
test
and
arpl
stc
push
inc
leave
popf
fbstp
mov
mov
fimull
or
fmulp
out
xchg
mov
fcomp
xor
popa
sub
out
mov
and
outsl
pop
xchg
test
pop
imul
orb
sbb
pop
mov
ret
loop
lcall
push
popf
daa
nop
fs
pop
push
inc
cmpsl
imul
dec
mov
jp
cltd
jl
or
sbb
icebp
inc
sub
push
cmc
jp
mov
int3
in
xor
dec
notb
xchg
data16
insb
cs
mov
fs
lret
dec
mov
jmp
shl
mov
dec
xor
cli
sbb
dec
popa
leave
cmp
pop
loope
xchg
xchg
incb
fiaddl
andl
xor
sbbb
mov
cmp
inc
fidivs
dec
cmp
dec
movsb
pop
out
call
fistl
shlb
popa
pop
pop
xchg
and
out
mov
sbb
movsl
inc
shll
adc
pop
jns
dec
fnstenv
fs
mov
loope
mov
add
or
clc
mov
adc
sub
cmp
popa
pop
and
cwtl
cmpsb
jle
out
pop
loopne
mov
push
js
mov
mov
sub
ss
movsl
std
mov
inc
int
jae
push
pop
fcmovu
inc
cwtl
lods
ljmp
inc
fs
aam
lahf
mov
data16
aam
pop
setbe
aaa
test
dec
pop
nop
ja
jo
fucomi
add
xchg
xchg
xlat
jg
push
jl
inc
outsl
fimull
xchg
data16
mov
inc
pop
cmp
adc
outsl
lea
adc
xlat
mov
sub
aaa
xchg
pop
mov
out
push
repz
jns
insl
outsl
jg
cmp
jle
out
cmpl
inc
test
or
dec
and
fcmovnbe
mov
sbb
outsl
cwtl
mov
outsb
fdiv
inc
mov
in
cmp
jo
inc
add
sbb
lahf
shll
add
xor
enter
mul
sarb
mov
xchg
cmp
incl
xor
push
inc
pusha
cltd
adc
mov
and
push
push
pop
iret
inc
insl
sahf
fdivr
ret
mov
aaa
mov
cmpb
inc
hlt
loope
inc
fwait
arpl
psllq
cmp
xor
cmp
es
jb
sbb
orb
cwtl
lea
pop
lods
sahf
psubd
test
adc
lret
dec
cli
or
add
cmc
fidivrs
inc
dec
cmpsb
cmpl
xor
aam
xchg
ss
mov
popf
and
push
int
push
hlt
push
loopne
jbe
pop
sbb
in
fsubrl
and
data16
stc
pop
shrb
stos
rorb
pop
lret
rclb
mov
add
div
xor
in
jmp
dec
rolb
push
jmp
out
gs
rolb
pop
cmp
or
and
popa
dec
sub
push
fcoml
xor
ss
cli
lods
xor
xor
repz
mov
mov
mov
in
pushf
daa
xchg
ja
sub
hlt
inc
cmp
mov
repnz
movsl
add
lea
lods
ljmp
int3
jp
popf
cmp
sahf
pop
aad
aaa
jbe
out
xchg
and
cmp
mov
inc
lcall
aas
jmp
push
jg
sub
pushf
sub
push
and
sbb
pop
std
inc
fs
sbb
cmp
out
xlat
scas
sub
in
fisubrl
leave
inc
pop
sbb
mov
je
lods
outsl
add
cwtl
pop
xlat
jne
int
sbb
pop
jae
popf
js
aad
ljmp
push
xchg
imul
xchg
add
bound
shlb
test
aaa
mov
arpl
pop
pop
xor
add
jns
add
sbb
and
dec
test
mov
ret
pop
cld
rorb
jl
pop
ja
dec
mov
dec
loopne
aas
dec
pop
shrl
adc
call
xor
push
gs
mov
mov
mov
lds
adc
and
dec
je
outsb
pop
jbe
mov
mov
lods
pop
ljmp
dec
lock
adc
testl
and
adc
out
mov
or
inc
xchg
jp
xor
and
add
mov
into
jb
scas
sub
or
fadd
fs
sbb
andb
js
jno
lea
jge
shll
cwtl
mov
addr16
cmc
pop
sbb
inc
mov
in
sbb
jge
fnstcw
in
mov
cmc
in
ja
sub
aaa
sub
sub
pushf
sub
xor
fsts
adc
mov
jns
sbb
push
movsl
rorb
imul
push
sub
in
jecxz
mov
loop
lret
mov
mov
pop
test
add
pop
popa
mov
mov
inc
loop
add
sbb
jmp
stos
int3
movb
pushf
aaa
push
xchg
out
push
fidivl
jae
push
sbb
jnp
pop
push
sub
pop
rolb
mov
mov
mov
dec
xlat
jmp
mov
gs
push
popf
cmp
out
push
fisubrs
mov
and
cs
imul
push
loop
mov
sub
in
add
fdivr
cmc
cld
pop
out
adc
mov
sahf
xchg
icebp
sti
nop
adc
and
test
sub
inc
cmp
mov
sub
pop
in
push
mov
outsb
stc
add
insb
mov
js
sub
lret
fnclex
lock
fbstp
js
adc
cmpsb
mov
mov
in
push
scas
xchg
xor
cmp
add
or
adc
pop
sbb
popa
xor
in
nop
cli
cs
fdivl
fs
and
je
test
push
xor
daa
dec
jle
mov
pop
lahf
int
sub
xor
sub
stos
add
adc
dec
orl
sbb
cmc
out
pop
stos
lcall
je
movsl
adcl
ds
adc
mov
sub
push
scas
loopne
jl
adc
pop
loopne
mov
dec
lcall
in
rcl
aad
in
sahf
sbb
dec
adc
xor
cmpsb
xchg
jbe
pushf
ret
pop
movsb
and
inc
and
push
int3
es
xor
les
leave
outsb
int
jb
cmp
cmpsb
pushf
ds
xor
cltd
adc
fs
gs
loopne
sbb
test
xor
bound
lcall
xchg
dec
arpl
mov
dec
ss
mov
fmull
dec
push
and
push
jmp
clc
mov
add
sbb
int
mov
lock
xchg
add
pop
xchg
in
jae
adc
jae
aad
xor
int
paddusw
mov
shl
or
and
inc
jbe
cwtl
or
add
fldl
or
push
jle
jge
jns
pop
mov
push
into
lock
int
lods
mov
push
lret
mov
xor
jle
mov
shlb
test
inc
cmp
cmp
dec
cwtl
in
pop
lcall
fcmove
les
sti
test
addb
jecxz
xor
adc
out
adc
and
sub
mov
xor
pop
push
xor
sub
sub
mov
push
pop
iret
adc
inc
sub
andb
inc
pop
hlt
xchg
xlat
nop
sbb
mov
adc
lds
test
push
jp
fdivs
imul
outsl
jge
repz
mov
sub
sub
xor
aas
in
ja
jg
ljmp
sub
add
jbe
in
sub
push
mov
shr
jecxz
xrelease
pop
test
iret
lea
ljmp
and
or
mov
ret
or
fs
cmp
pushf
add
cmp
mov
cmpsb
pop
cmc
ret
aaa
or
push
and
jae
ffreep
push
enter
loopne
insb
inc
cwtl
mov
lock
cwtl
sub
adc
or
mov
xchg
cmc
adc
mov
cmp
imul
adc
lcall
and
add
dec
mov
fimull
notb
mov
or
adc
arpl
push
shll
cmpsb
jns
pop
out
pop
insb
cmp
sahf
data16
mov
pushf
mov
lahf
and
orb
lock
pop
ss
jge
dec
pop
mov
lret
adc
mov
cwtl
fwait
je
stc
pop
pop
shr
xor
cwtl
ja
lahf
jecxz
sub
insb
imulb
sbb
lretw
adc
sbb
in
mov
loope
fdivrs
pop
adc
jbe
fs
or
xchg
ss
and
jns
add
std
inc
std
mov
mov
aaa
sub
xchg
std
scas
cld
mov
pop
mov
imulw
xchg
xor
and
fwait
mov
cmc
cli
jno
nop
popa
lock
loopne
mov
js
icebp
mov
jmp
inc
aad
sbb
sub
mov
and
push
addr16
bound
scas
pusha
jmp
stos
enter
test
scas
das
add
pop
enter
pop
shlb
xor
mov
imul
shrb
ds
aaa
push
mov
shll
cmp
out
add
or
ds
or
sbb
jnp
xchg
fisttps
ret
shlb
mov
and
or
dec
xchg
fisttpll
andb
adcb
sub
aam
and
lock
push
mov
xlat
testl
mov
dec
mov
fisubl
mov
inc
dec
out
pop
outsl
icebp
and
ja
mov
and
mov
andb
jmp
xor
xor
outsb
jns
xor
fadds
jecxz
fisubs
in
aam
notb
int3
dec
adc
sbb
imul
std
lods
mov
mov
cwtl
xchg
bound
xor
loopne
inc
jge
clc
cli
push
insb
sub
adc
sbb
movsb
mov
test
es
add
jnp
inc
mov
ja
sbb
aas
mov
imul
sbb
outsb
hlt
fistpl
pop
lods
pop
mov
jno
fldl
cmp
lret
mov
imul
aas
cmc
in
fwait
jno
mov
pop
je
mull
lods
lret
dec
lret
ljmp
mov
pop
xlat
jge
in
inc
fstps
insb
loop
push
xchg
xor
popa
imul
xor
xchg
and
push
inc
in
jp
push
mov
xchg
movsb
dec
adc
insl
jb
lods
out
cmp
mov
pop
jg
cmp
mov
lods
js
adc
xchg
mov
es
fisttpll
ds
or
sub
imul
sub
mov
lret
pop
subb
es
xchg
cmc
lret
adc
leave
add
call
movl
lret
scas
negl
lea
jno
dec
push
mov
mov
mov
dec
mov
adc
xchg
bound
jns
adcb
ljmp
sub
mov
es
xchg
popf
pushf
repnz
outsl
cld
jne
pop
push
in
rcl
movsl
pop
sbb
mov
out
in
xor
aad
xor
pop
call
mov
mov
xor
repz
push
cwtl
clc
jae
testl
les
pop
sahf
pop
arpl
push
push
pop
test
add
push
dec
jnp
scas
and
fisttpl
mov
hlt
scas
pop
or
divl
mov
add
sbb
mov
loop
cld
ret
xor
lahf
rolb
push
pop
lods
imul
jp
or
xchg
sub
cld
pop
test
push
mov
addr16
out
sub
lcall
mov
pop
mov
shll
fwait
push
sub
mov
subl
push
or
dec
pop
or
sub
andl
leave
lcall
sub
inc
sub
or
adc
dec
cmp
call
mov
pop
in
pop
mov
faddl
jne
mov
insb
xor
mov
mov
add
mov
sbb
dec
insl
push
inc
jbe
adc
jg
movsl
mov
adc
sub
les
or
sub
cmp
cmp
mov
out
scas
pop
mov
xor
insb
push
or
pop
mov
insl
iret
jp
cmovb
and
shrl
sbb
imul
mov
faddl
mov
push
js
flds
rorb
pop
sahf
cli
pop
mov
fsubrs
xor
and
sub
inc
adc
filds
das
cs
sub
ljmp
dec
and
insl
mov
inc
das
ror
out
jmp
ret
add
xor
loopne
out
adc
jecxz
xor
sbbb
cmp
jg
rorl
sbb
fwait
rorb
orl
rcrl
jne
dec
xchg
int
jns
fsubr
in
clc
in
stos
ja
jecxz
sub
add
mov
ja
pop
and
sub
push
cwtl
sub
xchg
sbb
mov
loope
and
inc
scas
stos
ret
faddl
test
fdivrl
sti
pop
cmp
xchg
test
fsubr
repz
sub
shlb
mov
adcl
stc
stos
xchg
ja
push
pop
xchg
pop
pop
sbb
imul
sbb
out
dec
cs
pop
and
sbb
mov
jle
mov
mov
in
movsl
ret
add
xor
add
out
jle
add
shrl
inc
jl
int3
add
mov
pop
cmp
ljmp
call
mov
fcoml
push
or
or
out
call
jo
mov
popa
cmp
pop
inc
test
mov
mov
adc
fldenv
lret
mov
xchg
ret
mov
adc
rorb
pop
js
mov
popf
xor
add
dec
clc
mov
cmpsb
mov
ret
push
jg
inc
xor
inc
lcall
and
and
xchg
push
sub
or
inc
mov
pop
mov
div
gs
mov
xchg
fwait
xchg
add
mov
xchg
aam
verr
pop
out
push
mov
out
dec
daa
sbb
dec
scas
cmpsb
dec
shlb
movsb
mov
fiadds
fidivs
insb
and
popf
dec
jae
xchg
shlb
mov
fstp
sti
testb
jp
or
ret
aaa
fsubrs
testl
cmp
mov
pop
imul
jmp
mov
and
cmp
sbb
pop
xchg
into
aad
or
push
insb
inc
je
lahf
repz
jmp
das
lock
pop
xor
nop
xchg
rcrl
outsl
aaa
mov
and
inc
xchg
cmp
pop
out
adc
and
dec
cmp
xor
mov
stc
jae
jge
xchg
mov
xchg
dec
roll
inc
mov
inc
scas
mov
loope
mov
pusha
ret
mov
clc
fisubrl
int
leave
cwtl
add
mov
inc
sub
pop
popa
sahf
lcall
cmpsl
mov
stc
sub
mov
xor
bound
pop
sarl
push
pop
xlat
popa
lret
xchg
daa
mov
aaa
andb
nop
xchg
xor
popf
and
daa
mov
or
pop
je
leave
daa
xor
test
mov
jg
loop
std
data16
mov
insb
ljmp
lods
inc
rolb
adc
jbe
jb
fwait
jl
sbb
mov
push
cmp
rorl
inc
mov
mov
jns
je
pop
jns
mov
push
test
cmpsb
adc
mov
inc
call
sbb
jne
leave
or
mov
mov
sti
push
jmp
inc
mov
xchg
fists
mov
pop
or
pop
adc
xchg
sbb
scas
mov
out
sub
adc
fisubrl
clc
cmp
push
pushf
add
xor
lock
and
sub
loop
dec
push
push
sub
xchg
lea
insl
popf
jae
sub
inc
dec
dec
pop
push
mov
cmp
pop
mov
mov
cld
cmpsb
fdivr
cmp
lahf
sti
psubq
addl
lds
jle
sti
iret
push
cwtl
adc
shl
xchg
fs
comiss
out
fildl
pop
inc
inc
sbb
inc
xor
test
xchg
and
mov
gs
mov
loopne
cmp
idiv
or
jle
and
mov
dec
push
shrb
insl
mov
and
cmpsb
fistpll
shr
add
mov
push
ficoml
out
shll
les
adc
jnp
adc
rclb
stc
mov
jne
pop
ss
and
sbb
mov
and
adc
inc
inc
bts
jae
gs
loopne
test
je
push
or
jb
adc
imul
out
mov
sub
and
sbb
xchg
aas
sbb
mov
dec
aad
lahf
js
icebp
sbb
mov
cs
nop
add
into
push
lret
and
add
jmp
jg
cwtl
addb
push
andb
test
aam
cmp
push
cwtl
lret
fcom
xchg
push
and
daa
pushf
notl
cmp
mov
lahf
pushf
xor
adc
rcrl
cmpsl
mov
mov
adc
mov
pop
hlt
cltd
push
mul
aam
dec
jns
cmpsb
push
cld
or
popa
xchg
and
repz
and
push
dec
pop
xor
add
xor
lds
sub
push
lods
push
and
cmp
inc
mov
push
movsb
sbb
mov
ret
jnp
sbb
mov
popf
jl
cmpb
cmpsl
jl
sti
pop
pop
inc
adc
mov
add
fisubrs
add
or
ss
stc
mov
lret
into
inc
mov
lock
inc
je
jno
push
or
sub
pop
inc
adc
lret
jno
pop
push
sbb
push
icebp
jge
and
xchg
aad
lea
mov
es
imul
xchg
fldcw
ss
cmp
push
inc
push
mov
int3
push
jae
mov
xor
icebp
add
cmp
jnp
in
notl
sbb
dec
dec
hlt
lds
xchg
outsb
in
xchg
pop
arpl
xchg
push
mov
xchg
mov
dec
dec
faddl
scas
out
pop
clc
dec
rep
fmull
sub
repz
dec
jno
xchg
xor
cmp
scas
sub
enter
xor
stos
sub
or
out
xor
and
add
sti
xchg
adc
std
push
dec
push
pop
mov
mov
rol
or
sub
pop
xchg
sub
out
es
scas
cmp
sub
cltd
xor
fwait
daa
ds
add
rcrb
mov
movsl
cltd
adc
scas
xchg
and
std
dec
xchg
aam
jmp
adc
out
es
icebp
sbb
mov
and
es
push
mov
push
cmp
test
lahf
and
sahf
dec
dec
lcall
dec
les
int
icebp
add
rol
sub
mov
cli
arpl
sub
xchg
cmp
xchg
sbbb
enter
lcall
dec
push
and
xchg
xchg
dec
jae
daa
std
xor
imul
lret
ret
mov
add
sbb
or
xchg
jge
jg
jns
fidivl
cmp
push
push
push
push
scas
test
jecxz
sbb
scas
iret
movsl
cwtl
mulb
pop
ret
xchg
and
ret
inc
xchg
je
mov
sbb
mov
addr16
stc
pop
lds
inc
inc
mov
lret
stc
jbe
outsl
push
repnz
sbb
dec
sahf
mov
iret
mov
cmp
mov
adc
mov
repnz
adc
aam
jno
aas
sub
inc
enter
shll
lds
iret
sub
subl
pushf
in
in
orl
mov
cmpsb
xchg
xchg
xchg
das
arpl
stc
jb
enter
cli
out
fisubl
push
jp
test
leave
cmp
pop
mov
icebp
inc
sbb
movsl
orl
pushw
or
mov
mov
jp
insb
lret
lcall
loop
dec
movsb
in
popa
inc
imul
adc
int3
iret
xor
fldl
imul
and
bound
xchg
jle
loop
in
sahf
add
sbb
and
jno
lret
jae
dec
daa
in
cmp
mov
fisttps
push
cmp
dec
inc
cmp
or
add
add
xor
js
out
not
imul
arpl
mov
push
into
xor
divb
sub
scas
xchg
jmp
and
add
sbb
lods
test
dec
jo,pt
shrb
cld
xor
hlt
pop
stos
adc
in
push
into
mov
dec
push
mov
sub
jge
into
mov
sbb
rolb
cmp
aas
pop
mov
adc
cld
or
fildl
inc
mov
adc
out
enter
mov
lea
loopne
mov
les
loop
add
jno
enter
adcb
or
ret
xchg
adc
pop
jb
mov
mov
cmp
cwtl
dec
repz
mov
mov
jle
mov
data16
mov
jnp
lods
inc
mov
xor
inc
jnp
add
dec
pop
ret
dec
out
inc
sbb
or
mov
push
pop
pusha
hlt
mov
es
test
add
push
cmpsl
cmpsb
add
adc
pushf
neg
je
dec
gs
std
adc
stos
sbb
push
mov
test
repnz
add
aad
xor
sbb
jns
push
xor
movsb
insl
mov
in
dec
es
iret
xor
sub
xchg
outsb
lret
in
int
test
and
bound
push
mov
rcl
idiv
cmpsb
sub
shrl
adcb
fdivp
xchg
shrl
push
add
xchg
cmp
push
adc
mov
fsub
dec
subb
add
xchg
mov
xchg
sti
in
or
sub
or
outsl
or
xchg
outsl
adc
movsl
in
fcmovb
mov
and
outsl
pop
push
out
cs
arpl
mov
or
xchg
inc
jns
pop
sub
push
and
cmpsb
ss
dec
cld
xchg
pop
ret
add
pushf
mov
pop
js
mov
daa
pop
int
lods
scas
insl
fidivs
dec
loopne
or
sub
push
sahf
inc
xchg
in
xor
jbe,pn
inc
je
cmp
xlat
mov
jmp
mov
xor
cld
cmpsl
push
inc
push
sbb
shl
cwtl
pop
xor
xchg
insl
pop
mov
outsl
out
pop
ds
and
sbbb
mov
sbb
pop
call
sub
xchg
sti
xchg
int
fbstp
inc
mov
inc
xchg
adc
sbb
sbb
scas
pusha
ss
sbb
xchg
pop
jnp
xor
mov
insl
mov
fsub
ds
mov
inc
mov
xchg
pop
add
aas
push
gs
test
sbb
sub
jns
mov
cmp
xchg
in
icebp
inc
xor
out
pop
or
push
push
adc
add
lds
pusha
inc
dec
pop
jmp
in
adc
shlb
outsl
pop
movsl
inc
add
in
fistl
jnp
add
in
or
clc
mov
lea
lods
cli
dec
jge
add
or
repz
fidivl
lret
sahf
pop
and
ss
cmp
and
testb
les
mov
fwait
push
roll
jae
popf
xchg
imul
outsl
xlat
jmp
shrl
js
mov
mov
cmp
mov
mov
pop
dec
dec
in
aas
ja
cmp
sub
and
dec
jae
inc
ja
jmp
lods
cmc
ja
gs
sarl
mov
xor
out
jp
aad
xchg
inc
scas
iret
jnp
inc
sti
adc
outsb
aas
addr16
jl
sarb
sbb
es
aas
jl
imul
or
pop
adc
outsl
enter
inc
addr16
imul
std
mov
ficoms
push
mov
jbe
pop
pop
lahf
sbb
movsb
push
and
dec
das
pusha
dec
push
mov
sub
enter
xor
sbb
jecxz
push
fistl
and
mov
cmpsl
xor
jae
dec
arpl
or
inc
mov
std
jecxz
es
pop
inc
les
cmp
popa
movsl
mov
stos
sbb
push
xor
jae
into
pop
jmp
daa
lock
xchg
out
in
scas
mov
outsl
xchg
cli
jge
mov
push
jne
lahf
sub
test
fidivs
or
dec
and
xchg
xor
aad
lahf
loop
inc
lods
cltd
inc
adc
adcb
xor
push
and
fdivrp
mov
jp
pop
mov
push
fisttps
test
out
lret
push
out
jg
in
pop
sbb
cltd
jp
std
fdiv
das
xchg
fwait
dec
xchg
push
popf
adc
cmp
daa
push
arpl
js
and
push
mov
jae
inc
int
xchg
push
lds
aad
jle
das
sub
push
inc
push
sti
adc
push
adc
enter
bsr
and
adc
cs
xlat
rolb
xor
mov
mov
pop
and
xor
xchg
loope
shlb
es
dec
add
lds
pop
and
ror
push
daa
nop
ret
loop
inc
pop
mov
mov
std
cmpsl
cmp
mov
dec
pushf
hlt
mov
mov
mov
data16
enter
push
dec
inc
mov
lds
push
pop
enter
fidivs
pop
call
shll
clc
inc
out
loop
aad
sbb
movsb
dec
orl
mov
pop
ja
cmpsl
shlb
roll
jne
stc
sub
adc
inc
iret
jmp
sbb
cmc
cmp
push
jecxz
pop
rorl
xchg
mov
push
enter
mov
push
shrb
lock
aam
add
and
into
fstl
jg
shlb
xor
and
notl
andw
dec
cmpb
inc
fsubl
and
fs
sbb
jo
fbld
sbb
xchg
cwtl
out
clc
imul
das
aad
and
ljmp
cmp
js
es
ljmp
pop
jmp
scas
pushf
outsb
shl
fidivl
out
sbb
jnp
push
sbb
jb
loop
cmp
cmp
pusha
add
and
in
mov
ds
lods
pop
stos
pop
ljmp
and
cmp
movsl
cmpb
sbb
push
push
addr16
pop
or
lds
ja
das
arpl
js
xor
mov
fisttpl
sbb
ss
sbb
add
or
mov
xchg
test
add
and
aas
xchg
je
push
sub
loop
push
add
gs
sub
test
dec
cmovle
add
or
mov
movsl
out
cmp
inc
sub
fs
insl
sub
lods
fnstcw
ds
mov
mov
mov
fildl
lea
pop
mov
fmull
imul
scas
call
cmp
adc
inc
mov
mov
test
aad
jns
and
xor
lahf
add
in
adc
pusha
xlat
frstor
mov
pop
es
sub
fsubrl
addr16
push
cs
daa
and
fcom
push
dec
sahf
mov
test
fcomps
int3
shlb
jo
jp
dec
in
push
pop
fldl
mov
add
jnp
xchg
mov
fwait
xor
call
mov
xchg
outsl
xor
shll
cwtl
fisubrs
cmp
xor
daa
cli
aad
push
or
fldenv
xor
aam
aaa
mov
test
and
mov
out
ja
jg
ret
test
in
inc
push
dec
xlat
cs
add
stc
jle
add
add
ja
rclb
stos
loope
out
pop
mov
cltd
xchg
jno
shrl
loope
dec
mov
mov
mov
push
fidivrs
adc
cmp
ljmp
xor
loop
sbb
arpl
mov
dec
mov
daa
fs
inc
or
clc
mov
mov
or
jle
and
push
pop
aaa
cmp
push
loop
or
dec
leave
pushf
pop
aaa
xchg
mov
jno
or
jle
je
inc
inc
movsl
pusha
mov
aam
mov
ljmp
daa
mov
dec
sti
fwait
xchg
lods
test
mov
fsubrs
in
sbb
sbb
xor
mov
aaa
outsb
dec
pop
mull
dec
popa
mov
fidivs
in
push
mov
pop
xor
sti
xor
pushf
scas
out
cwtl
repz
lcall
stc
push
and
mov
test
mov
js
inc
cmp
mov
or
jg
xor
inc
or
mov
test
inc
ret
adc
add
out
movsb
clc
dec
xchg
cmp
sbb
loop
mov
fs
mov
sbb
dec
xor
sbb
mov
dec
or
and
push
leave
mov
dec
push
pop
inc
dec
bound
push
out
inc
inc
push
dec
rcll
mov
movsl
jnp
lods
mov
or
dec
gs
lods
add
in
dec
insb
stos
outsl
dec
stos
sbb
dec
cmp
leave
jne
pushf
push
jecxz
jl
push
sahf
clc
test
stos
jg
cmpsl
lds
mov
jge
in
xorl
xor
insb
cmc
xor
mov
mov
testb
dec
mov
pop
int3
jecxz
pop
or
jge
dec
xchg
lcall
cmp
pop
push
cwtl
push
push
je
mov
gs
and
xchg
push
lods
dec
pop
add
fstpt
push
ja
lea
adc
mov
xchg
mov
shl
lds
pushf
or
push
fs
pop
imul
icebp
stos
sub
into
mov
movl
cld
push
sbb
shr
ljmp
mov
mov
add
loope
cmp
sub
and
iret
adc
dec
aas
push
out
mov
xchg
sbb
adc
negb
add
fmul
insl
scas
xor
or
cwtl
aas
mov
dec
mul
sarl
js
mov
and
scas
xchg
out
add
arpl
push
pop
das
push
jo
push
cltd
mov
jle
add
lods
mov
std
cmp
ss
popa
leave
fiaddl
js
pop
jb
push
adc
sub
push
add
ljmp
fsub
imul
jo
test
mov
adc
push
in
jbe
mov
mov
test
call
loopne
ljmp
je
test
negl
and
or
dec
fadds
aas
adc
bound
call
fimull
mov
adc
sub
sbb
mov
jno
loope
cmpsb
xchg
xchg
in
popf
aaa
mov
jle
push
inc
mov
jno
insl
xchg
mov
push
mov
jae
lods
or
sar
lds
or
in
inc
lcall
and
out
clc
adc
testl
sahf
push
repz
cmc
ret
nop
xchg
xor
lcall
push
test
sub
cmp
inc
les
or
sub
jo
adc
arpl
lock
hlt
rcrl
ss
cld
xchg
rcrb
push
inc
xchg
add
imul
pop
in
dec
cs
insl
rclb
push
xchg
test
cmpsb
dec
rolb
inc
test
decb
out
add
lods
popf
or
lods
dec
xchg
sbb
jg
cmp
add
stos
out
mov
testb
outsb
cmp
pop
mov
mov
or
decl
test
dec
jp
daa
mov
fs
ret
inc
movsb
imul
add
addl
sahf
mov
push
mov
xor
insb
movsl
into
mov
lods
adc
fs
dec
insl
dec
imul
shlb
and
data16
inc
mov
adc
or
or
aam
cmp
sarl
pop
or
popf
js
xchg
test
sbb
mov
push
fcomi
mov
aam
call
test
cmp
mov
lock
and
mov
push
sbb
jmp
jmp
test
or
xchg
inc
cmp
jnp
loope
fs
dec
xor
call
pop
push
outsw
lcall
mov
push
push
pop
stos
mov
bound
stos
gs
cmp
clc
jbe
sub
add
sub
xchg
fcmovnb
sbb
pop
leave
pop
movsl
test
rcl
inc
fildll
in
xchg
push
mov
push
es
test
adc
mov
int3
jb
cwtl
and
iret
dec
pop
sbb
cmp
sbb
cmp
mov
test
push
cmpsl
pushf
es
fiaddl
xor
hlt
notl
and
shlb
mov
iret
cwtl
out
or
sbb
mov
daa
sub
and
sub
inc
loop
enter
test
movsb
push
aas
call
lds
sbb
jnp
push
xchg
push
sub
into
insb
inc
xchg
push
pop
decb
imul
mov
outsb
adc
arpl
push
paddusb
lret
ja
push
xchg
pop
ret
int3
pop
and
sbb
addr16
pop
lahf
scas
fsubp
in
pop
xchg
mov
ljmp
mov
pop
or
daa
insb
insl
mov
imul
jl
fldt
insl
sbb
mov
lahf
mov
push
popa
mov
scas
es
icebp
decl
outsb
into
es
iret
pusha
mov
loopne
loope
add
dec
xor
ja
xchg
xor
jl
enter
fs
scas
rep
xchg
lret
sbb
popa
lret
pusha
xchg
add
dec
loop
sbbl
jno
xor
es
adc
pop
rol
stos
xor
test
outsb
out
das
adc
add
ds
sarl
das
out
out
bound
lahf
mov
sbb
aaa
mov
aas
in
loop
in
add
es
mov
in
mov
sub
and
clc
cwtl
or
icebp
fdiv
fsubs
mov
pop
in
xchg
xor
xchg
sbb
inc
test
mov
std
add
sub
add
pop
cmp
dec
xor
mov
sbb
or
xor
test
and
ljmp
pop
adc
aad
sahf
int3
rcrl
lods
leave
push
bswap
push
dec
cwtl
jp
push
xchg
jne
mov
jne
sub
dec
inc
pop
sbb
jae
push
push
jns
jo
mov
rorb
cld
roll
aam
push
aaa
dec
xorl
sub
mov
int3
push
lds
and
test
lahf
push
das
cwtl
icebp
int
cmp
dec
dec
jge
pop
dec
cmp
or
loop
sub
cmpsl
push
out
loopne
xchg
mov
jl
outsl
decb
popf
subb
cmp
js
in
mov
and
push
in
push
jge
scas
xor
fidivrs
out
aam
pusha
jns
or
cltd
pop
pusha
cmpsb
arpl
adc
imul
mov
je
push
mov
lds
sbb
xor
ficomps
add
xor
cmp
shlb
in
lcall
jge
call
sbb
in
adc
or
mov
pop
aad
test
push
frstor
adc
arpl
fcmovb
xchg
push
mov
xlat
in
push
add
ss
add
pop
mov
inc
mov
jl
in
ficoms
cmp
test
lods
dec
gs
push
fmuls
mov
lods
mov
xor
daa
repnz
push
pusha
jmp
jg
adc
out
xor
in
xchg
pusha
and
es
pop
loop
rclb
stc
xor
push
pop
mov
pop
dec
stos
pop
push
and
mul
cmpb
pop
mov
ret
sbb
aad
neg
mov
fmull
xchg
ds
fnstsw
xchg
lods
cltd
mov
ss
push
fmull
stos
enter
lret
dec
lods
bswap
cmp
jp,pn
stc
aaa
pushf
jo,pn
stos
mov
inc
clc
mov
movl
hlt
mov
or
sbb
fcompl
nop
mov
cmc
mov
cld
inc
jle
adc
jnp
rorl
push
fwait
addl
daa
jns
mov
popf
add
sbb
mov
and
out
mov
xor
mov
ret
sbb
push
subps
xchg
cld
aas
out
popa
testb
les
hlt
xor
clc
xchg
adc
cmp
cmpsl
push
sub
lret
jnp,pt
in
and
rcl
test
push
outsb
sbb
pusha
mov
andb
push
cmp
stos
cli
push
cmp
cmp
not
movsb
insb
cmp
add
dec
xchg
cltd
xchg
iret
call
lea
add
jg
lods
fdivrs
jae
pop
sbb
loop
pusha
sbb
adc
and
jno
jns
mov
lods
add
and
inc
mov
clc
ja
inc
out
out
lret
mov
cmp
or
xor
orb
xchg
xor
mov
jo
xor
filds
stos
adc
xchg
add
lcall
pop
jmp
lods
or
ror
xor
std
sbb
imul
insl
jecxz
jno
xchg
and
cmp
pop
pop
mov
pop
ss
rol
xchg
adc
cld
mov
nop
sub
pop
push
adc
jmp
lret
add
mov
sbb
mov
int
add
fxch
out
cmp
and
outsl
rolb
test
int3
addb
iret
aam
inc
dec
lret
adc
mov
adc
pop
jge
inc
into
lods
lea
rol
inc
cmp
and
popf
fwait
mov
ljmp
dec
cltd
movsl
lock
mov
mov
rorb
rcll
lret
mov
or
xor
or
ret
fnstenv
cmp
in
cmp
int3
out
or
xlat
rolb
das
mov
mov
inc
xchg
jne
int
xlat
and
rcrb
inc
mov
arpl
jmp
popa
stc
add
cs
xchg
jb
lret
loopne
mov
sbb
xor
adc
inc
pop
mov
mov
les
movsb
aaa
lock
sub
ljmp
xor
outsb
inc
out
loop
dec
mov
add
stos
sbb
jo
sbb
push
bound
mov
pushf
into
push
jle
std
ja
jne
sbbb
xchg
add
ja
shrl
out
adc
dec
adc
mov
loope
push
test
in
mov
out
cs
test
jno
xchg
dec
sub
adc
xor
xor
lods
fcomp
in
pshufw
pop
dec
sbb
sbb
pop
sbb
mov
imul
add
sbb
push
jnp
pop
and
jp
dec
idivl
fs
jge
les
mov
or
cwtl
fstl
sub
pushf
nop
jns
pusha
xor
aam
mov
cld
cmp
dec
and
jp
sbbl
push
or
or
lds
xchg
mov
push
cmp
xor
jle
ss
xchg
lods
les
imul
test
mov
mov
pop
xchg
inc
rclb
aaa
fdivrl
stos
xor
or
jbe
lahf
mov
addr16
sbb
jle
push
sbb
add
popf
in
jno
jno
call
imul
sbb
sahf
sbb
pop
dec
mov
add
sub
fcmovnb
pop
pop
pop
bound
ja
int3
pop
dec
mov
imul
les
in
jo
sbb
sbb
cmp
dec
sub
out
test
div
pop
repz
dec
ror
insb
jns
sahf
in
inc
fiadds
pushl
fnstsw
int3
addr16
add
adcl
pop
push
js
pop
dec
daa
lock
lds
or
int3
int
jecxz
lds
outsl
mov
call
lds
mov
push
decl
stos
jb
dec
test
push
xlat
cmp
push
inc
push
cmpsb
push
and
sub
in
cld
scas
std
mov
jp
in
fisubrs
inc
adc
gs
mov
jg
push
stc
test
cwtl
imul
repz
adc
pop
mov
cmp
sbb
fucomip
loop
dec
inc
push
push
or
and
xorb
out
xor
pop
cmp
lods
and
loopne
stc
out
add
sub
je
jo
int3
daa
incb
inc
and
inc
out
xor
bound
fs
std
daa
xchg
fsubs
lcall
js
jmp
nop
out
jae
xor
push
cmp
rorb
nop
cmpsl
mov
push
jl
stc
mov
shl
int3
jbe
dec
ja
hlt
mov
loop
mov
jnp
mov
cltd
cmp
push
repnz
les
mov
outsl
cmc
aam
lret
movsl
jb
repz
les
pmulhuw
notb
aas
pushf
subb
fdivrp
adc
inc
cmp
lods
push
push
mov
lahf
and
in
les
pop
inc
cmp
mov
mov
in
sti
hlt
out
mov
sub
test
test
rcrl
scas
adc
pop
xchg
sarl
sub
push
in
xor
xchg
lea
or
xor
gs
xor
dec
sub
pop
js
adc
mov
or
daa
jb
stos
sbb
or
imul
enter
cmc
xchg
lods
sti
out
xor
movsl
bound
adc
inc
js
sbb
add
mov
xchg
xor
iret
pop
shll
ljmp
pop
es
jb
mov
sbb
js
adc
jne
fldl
and
repnz
sbbb
call
rcll
jnp
insb
cmc
adc
stos
mov
fxch
inc
inc
push
call
lods
loop
daa
mov
lcall
lods
test
dec
outsb
icebp
mov
repz
nop
and
lea
les
in
ss
mov
and
shll
mov
cmp
fucom
sbb
mov
add
movsb
subb
xlat
notb
ds
ret
cmp
addl
iret
add
fstpt
or
fisubrl
scas
push
mov
sub
cmp
subb
and
mov
pop
inc
pusha
outsl
cmc
sti
jb
jne
sbbl
adc
ss
adc
into
jp
adc
mov
loopne
les
cmc
fs
sub
sub
sbb
or
inc
pusha
popf
pop
fildl
dec
mov
xchg
or
das
fwait
add
dec
pop
pop
push
cli
clc
jl
std
mov
dec
lahf
push
enter
fs
int
fsubr
and
cs
sahf
push
sbb
adc
in
xor
add
cmpsb
out
js
push
xchg
mov
lds
aam
pop
in
nop
mov
pop
sub
cmp
test
mov
pop
popl
adc
out
int3
aad
fcmovbe
adc
xchg
push
sbb
adc
sahf
paddsb
movsb
mov
jnp
cmp
pop
adc
or
push
out
inc
stos
sbb
loopne
fstl
xchg
or
push
and
and
mov
and
cmp
mov
and
and
and
fwait
mov
push
out
inc
xor
sarb
pop
adc
or
xor
call
shl
shrl
add
sti
movsb
sub
mov
lods
clc
xor
wrmsr
lcall
pop
cmc
sbb
pop
popa
stc
or
pop
sbb
inc
jae
dec
or
fists
cld
stos
repz
inc
mov
call
push
lahf
stos
stos
clc
dec
insb
mov
roll
inc
adc
or
movlps
popf
das
sti
test
aas
lods
aad
inc
or
jno
mov
into
lds
xchg
scas
pop
cmp
pop
cmp
inc
int3
lock
sbb
in
mov
xchg
add
aas
imul
mov
aad
mov
xor
jge
jecxz
rolb
mov
sub
push
lret
pop
outsl
pop
insl
xchg
xchg
les
add
cmp
sbb
mov
movsl
adc
cmpsb
idivl
fwait
mov
es
jecxz
cmp
mov
aam
and
xchg
aad
popa
outsl
int3
sbb
scas
test
jne
stos
inc
jb
pushf
aam
fs
jle
jmp
outsl
scas
clc
dec
mov
pusha
loopne
xor
imul
int
mov
testl
test
xor
lods
mov
fbstp
sbb
test
inc
lods
sti
fcompl
mov
jp
dec
cs
mov
movsb
mov
add
iret
jmp
pop
cli
jge
ret
sbb
cmpsb
pop
push
mov
arpl
stc
xchg
xor
fsubrs
ss
je
in
mov
shll
jle
lods
sbb
sbb
mov
and
xchg
jmp
dec
pop
dec
jno
jb
sahf
dec
xor
pop
push
inc
dec
sbb
jge
xchg
sub
shr
shll
pushf
loop
pop
outsl
mov
fisttps
movsl
mov
jne
scas
jb
jnp
inc
outsl
jb
into
inc
cmp
and
add
mov
in
bound
loop
jmp
outsl
and
ljmp
lret
sbb
add
lret
mov
add
add
bndstx
dec
jge
mov
aas
mov
jmp
xchg
aas
inc
adc
pop
inc
outsl
lods
dec
mov
mov
xlat
push
jecxz
sbb
test
cmpsl
push
mov
xchg
int3
jmp
test
sub
sub
push
cmp
cmp
add
jns
sub
arpl
orb
gs
incl
dec
push
jno
jg
mov
stos
adc
sub
mov
sbb
test
mov
jle
push
out
cmp
out
cs
mov
add
in
mov
mov
js
mov
cmpsb
test
inc
mov
mov
movsb
lds
sbb
repz
rorb
xor
out
mov
sbb
push
or
mov
leave
lods
mov
sub
pop
jbe
add
cltd
notb
pop
mov
cmpsl
lahf
jne
ss
lea
fsts
adc
gs
dec
shrb
test
imul
arpl
add
or
dec
mov
shll
repz
cmp
test
or
xchg
and
jno
cs
shll
xorl
xchg
cmp
xchg
mov
jg
test
movsb
dec
stos
jae
add
mov
pop
push
clc
dec
ret
jg
mov
lock
or
repnz
push
pop
repnz
clc
xor
movsl
daa
dec
insl
jns
out
shlb
pop
pop
xchg
enter
mov
icebp
add
xchg
inc
or
jne
mov
xchg
loop
jbe
mov
inc
xchg
call
psubb
fsubp
mov
aam
inc
xor
pop
adc
mov
push
mov
adc
xor
xchg
sahf
sub
mov
pop
adc
fs
and
in
cmc
jno
sahf
push
and
sbb
dec
fwait
mov
inc
inc
les
xor
popf
js
fimuls
movsb
jb
das
adc
inc
fistpl
call
push
sub
cmp
sti
ficoms
pop
out
insb
rorb
jecxz
or
lcall
mov
mov
pusha
nop
inc
cmp
or
and
push
adc
xchg
arpl
rorb
dec
test
imul
scas
int3
xchg
jne
mov
addr16
jg
jae
jo
or
lods
push
jge
cmp
mov
push
push
lods
je
jbe
mov
push
mov
outsb
out
xchg
sbb
sahf
or
call
mov
mov
les
xor
mov
sbb
into
cmp
icebp
ffreep
in
fsubs
lret
mov
addb
xor
mov
mov
out
xchg
pop
in
das
adc
movsb
lcall
push
cs
jb
js
xchg
xor
mov
jnp
imul
sbb
pop
cmc
xchg
jmp
loop
sub
pop
mov
inc
icebp
fiaddl
xlat
xsha256
cmpsb
sarb
mov
imul
dec
mov
rclb
cs
cmp
and
les
push
andl
test
push
xchg
push
xchg
and
aas
icebp
sbb
or
dec
dec
sub
cwtl
cmp
fildll
test
int3
jg
popa
and
ffreep
std
push
ffree
subl
pop
test
xchg
mov
test
xchg
pushf
js
insb
test
gs
mov
nop
cmpsl
test
adc
pop
cmpsb
sub
add
pop
xor
push
in
inc
push
fisubl
pop
outsb
stos
fwait
pop
imull
dec
push
or
jne
insl
enter
ja
arpl
and
jle
cmpsl
lds
imul
sub
out
sbb
fdivl
jecxz
cld
int3
outsl
test
or
xlat
pop
cli
pushf
test
pop
jb
xlat
adc
lcall
pop
int3
dec
in
rcrl
jne
incb
out
cld
jmp
fsin
mov
addl
jg
jle
pop
in
jmp
fisttpll
sub
xor
mov
ljmp
push
mov
add
mov
mov
adc
sbb
in
stc
mov
out
push
nop
fcoms
lahf
in
adc
stos
mov
xchg
aaa
int3
xor
mov
xchg
jno
test
dec
cmpsl
mov
aam
inc
pop
jg
js
inc
out
gs
movsl
inc
push
push
call
push
lea
ret
mov
jnp
sbb
insl
hlt
mov
int
adc
jg
xor
aas
push
cmpl
roll
cs
dec
pop
inc
enter
xor
lods
movsl
aam
dec
dec
sbb
sahf
xor
sub
aaa
in
add
adc
pop
pop
insb
and
aad
imul
in
daa
fldcw
fidivl
push
add
int
xchg
xchg
sbb
jmp
jo
sbb
and
aam
mov
cld
jno
pop
mov
rcl
lret
iret
jnp
call
lods
jl
and
fisubs
cmp
inc
outsl
mov
mov
sbb
add
out
jecxz
mov
pusha
ret
xchg
out
stos
mov
mov
daa
adcb
pushf
fnstenv
jbe
rolb
pop
inc
iret
int
cmpsl
jns
mov
sub
xlat
iret
and
cld
pop
sub
sub
push
and
or
jns
arpl
lret
in
lods
xlat
out
xor
mov
mov
popf
pop
ficompl
mov
out
sub
mov
xor
shlb
and
test
int3
or
sbb
pop
adc
fiaddl
push
stc
outsl
and
cltd
in
xor
loope
out
punpcklbw
js
or
out
jg
subb
cmp
xor
or
xlat
adc
or
add
ficoml
dec
cmpl
pop
push
lahf
lock
adc
pop
fistl
clc
inc
pop
pop
sub
mov
lock
gs
fmul
pushf
test
mov
sbb
mov
mov
leave
leave
rcrb
lods
imull
fs
push
daa
cltd
inc
or
push
call
js
pop
es
or
mov
cwtl
aam
mov
sti
aas
jae
sbb
ret
mov
mov
leave
xchg
mov
mov
jmp
jno
stos
adc
cmpsl
enter
pop
sbb
xchg
mov
cmpsb
or
lods
or
pop
mov
adcb
cmpsl
dec
out
in
jle
add
jmp
out
jbe
push
mov
movsb
out
xchg
js
inc
je
mov
aam
fwait
sbb
pushf
and
mov
int
push
fscale
in
add
loope
pusha
push
addl
xchg
outsl
sub
ljmp
sub
js
sbb
testl
fwait
sar
aas
test
insl
and
xlat
push
dec
inc
jbe
shlb
dec
mov
cmp
mov
mov
lret
fisttpll
dec
das
pushf
add
adc
push
mov
test
pop
xor
sti
add
mov
lods
jg
rcrl
or
adc
mov
into
inc
dec
sub
mov
das
insl
jnp
rcrb
dec
imul
inc
std
xchg
loope
xchg
jb
xchg
insb
je
sbb
fistpl
loopne
mov
dec
jno
jle
mov
mov
pop
sub
fcomp
inc
into
or
xor
mov
or
cmp
mov
sub
es
mov
dec
mov
add
push
or
inc
stc
push
hlt
xor
xchg
sar
jmp
mov
es
xlat
mov
loopne
xor
test
pop
mov
inc
cld
lret
or
rcrb
cmpsb
ret
cmpsl
out
mov
mov
sub
ret
cmpsb
mov
and
sbb
cmpsb
cltd
sbb
into
out
or
sub
cli
adc
leave
testb
das
cmpsb
insb
lcall
shlb
xchg
push
lods
cmp
sbb
push
iret
dec
cmp
cs
int
jl
xchg
arpl
call
adcl
pop
and
outsb
ja
adc
mov
add
push
pop
add
push
mov
pop
lea
sub
mov
pop
aaa
push
jae
sub
cmpsl
mov
out
sti
push
test
cmp
and
repz
mov
imul
mov
xchg
imul
and
or
add
sbb
sbb
ljmp
jg
jmp
dec
daa
popf
inc
push
cmpsl
in
mov
sbb
sub
in
shlb
cwtl
dec
sbb
filds
mov
cmp
inc
jbe
push
icebp
cmc
lret
and
cmp
push
or
pop
inc
lock
jns
cld
stos
cmp
mov
loop
sbb
aaa
cmp
shll
scas
dec
jge
and
loopne
gs
aam
in
jl
adc
arpl
jp
fwait
and
lea
mov
inc
lahf
sub
das
mov
out
mov
jno
movsb
cmpb
aad
es
in
sti
jmp
adc
cmc
add
push
sbb
cli
xor
mov
xchg
leave
mov
shl
popa
sbb
popa
xor
push
pop
setl
ds
xor
jmp
pop
and
xchg
sub
adc
or
push
stc
fstpt
mov
xor
into
mov
adc
adc
ss
sbb
movsl
push
jg
clc
movsb
andl
cmp
shl
scas
xchg
aam
dec
mov
fcomps
loop
stos
cs
jge
push
or
jl
outsb
stos
fisttps
in
adc
add
lea
shrb
imul
es
mov
jle
out
aad
add
inc
pop
push
testl
xor
add
sbb
scas
aas
call
insl
pop
pop
popl
push
paddsw
push
push
mov
pop
lea
stc
push
sbb
in
clc
loope
and
mov
mov
clc
mov
mov
insl
addr16
dec
test
mov
dec
mov
add
push
cmp
mov
xor
xchg
mov
jno
int3
outsb
mov
inc
repz
mov
push
ds
jne
jmp
xchg
inc
add
and
push
lock
aam
adc
test
stos
add
lahf
outsl
mov
std
and
dec
mov
cmp
ja
push
mov
or
mov
pop
inc
add
scas
inc
and
sbb
fisubrl
inc
pushf
inc
leave
xor
lds
sub
dec
lcall
dec
mov
inc
push
sbb
xlat
xor
xchg
cld
push
mov
int3
cmc
dec
mov
fsts
push
xor
jne
adc
bswap
pop
xlat
les
push
pop
dec
rorb
popl
rorb
mov
cmpsb
std
cmp
and
add
jb
dec
mov
cmpb
popl
loope
cltd
fistps
popf
add
js
fwait
loope
out
lods
xchg
xchg
lahf
mov
jl
cmpsl
or
xchg
add
pop
sbb
insl
stos
shll
iret
lcall
das
sub
loop
xchg
mov
mov
dec
dec
xor
sub
xlat
cmpsb
into
aad
fs
in
rorl
rcrl
insl
hlt
push
adc
mov
test
sub
jle
push
leave
in
iret
mov
jnp
mov
sbb
std
jne
andb
cmp
pop
test
stos
int3
in
ljmp
jne
lcall
clc
jl
and
mov
pop
jo
insb
movsl
jge
rcl
lea
xor
cmp
push
mov
xchg
xor
sub
out
fisttps
inc
dec
sub
jne
xchg
addr16
jnp
xchg
cmp
xchg
xchg
stos
les
mov
xchg
insl
dec
lock
addl
mov
rcl
push
push
mov
xlat
xchg
pop
dec
push
hlt
sub
dec
and
jp
shll
inc
sub
dec
ds
pop
and
add
shll
sub
out
add
or
sbb
or
inc
test
jmp
arpl
aad
jnp
leave
ja
in
dec
adc
add
jl
stos
xlat
popf
out
push
or
inc
or
cs
and
xor
cli
out
loopne
incb
ja
xchg
sub
lcall
and
and
movl
adc
cwtl
dec
in
cli
clc
sub
xor
dec
push
xchg
popf
push
xor
sti
mov
push
jb
pop
sub
mov
sbb
idivl
movaps
jecxz
pop
sbb
pop
and
mov
mov
jmp
outsl
jle
aas
pop
jge
pop
rclb
jmp
mov
repz
loopne
push
mov
aad
push
mov
jmp
loope
jmp
iret
mov
je
clc
dec
dec
in
xor
mov
or
cmpb
movsb
lret
fnstsw
outsb
mov
ficompl
xchg
mov
add
push
push
mov
sti
jecxz
in
popa
mov
ret
add
outsl
mov
pop
pop
dec
cmc
filds
in
pusha
sbb
lods
vcvtss2si
les
adc
mov
push
adc
movsl
cwtl
mov
xchg
dec
jnp
out
stos
into
mov
sub
insb
lret
sahf
mov
mov
sub
sub
cmc
rorl
sub
cmp
mov
subb
aaa
repnz
std
xor
jp
jo
cmpl
js
mov
mov
mov
mov
lret
jae
fimull
lahf
xlat
cmc
or
dec
pop
sbb
push
dec
and
aam
adc
sub
inc
fiadds
adc
addr16
subl
pop
decl
inc
test
mov
stos
jecxz
and
or
aas
xor
fs
sbb
xchg
pop
out
cld
je
repnz
sti
jbe
cltd
push
cmc
adc
cltd
or
mov
lds
mov
mov
mov
push
nop
test
sbb
xchg
mov
lret
push
xor
xchg
lahf
add
enter
dec
cmc
stos
adc
iret
adc
aas
paddusb
aas
inc
and
incl
in
jo
dec
lahf
lea
test
xor
jmp
push
mov
mov
popf
negb
jnp
and
adc
sub
xor
add
out
push
sbb
pop
mov
scas
rorl
out
idivl
push
sbb
sarb
fucomip
add
bound
cmp
out
lods
fsubrp
pop
add
fstpl
and
inc
mov
and
add
mov
fnstsw
icebp
insl
ja
and
pop
cli
cmp
movsb
xor
aam
jae
hlt
loop
mov
stos
push
cmpb
jecxz
fwait
lods
mov
jns
orb
in
xchg
sub
xor
or
out
aad
or
push
jns
mov
test
sti
cmpb
cmp
jno
test
fsubrl
stos
je
pop
out
gs
add
mov
cmp
mov
stos
btr
sbb
or
jnp
xor
mov
jge
push
cmpsb
into
xor
push
mov
cmpb
sbb
sbb
sub
fisubrs
adc
mov
repnz
mov
pop
fadds
xor
pop
jge
and
aam
sahf
iret
pop
pop
aaa
rclb
fwait
push
inc
dec
jg
and
cs
test
das
push
inc
jno
js
pop
in
mov
sub
mov
mov
or
xchg
movsl
adc
add
cmp
mov
mov
loop
stc
or
lahf
mov
clc
inc
pusha
mov
imul
les
outsl
sti
dec
sarb
cmpsl
pop
dec
sarl
xchg
int
sbb
shll
and
enter
sub
data16
scas
cli
pop
enter
aas
ss
and
lahf
mov
push
cmpsb
fistps
mov
pop
jmp
sub
fcomps
dec
xchg
mov
sub
xchg
es
pop
add
and
inc
int3
test
pop
jbe
push
sti
in
inc
dec
dec
dec
dec
xchg
loope
cmp
hlt
adc
roll
das
stc
into
addr16
icebp
lahf
pushf
repz
jbe
jp
mov
sbb
sbb
jg
mov
add
pop
inc
inc
dec
lock
lret
ja
movsb
mov
popf
cltd
lock
lea
mov
ss
mov
jb
or
jmp
rolb
xor
xchg
push
xchg
in
movsl
xor
xor
ret
lret
imul
data16
icebp
test
icebp
dec
push
push
dec
xchg
pop
imul
lds
insb
mov
das
repz
push
sbb
inc
cld
lea
jmp
test
push
add
mov
pusha
pop
repz
adc
xor
xor
cmpsb
mov
mov
push
inc
pusha
dec
sbb
fists
fmul
sub
jmp
adc
ret
mov
clc
or
mov
push
sbb
movsl
fstps
pop
sti
loopne
push
xchg
adc
jb
xor
mov
sub
std
jne
paddusb
xchg
pop
jb
add
sbb
ds
fcmovu
rcl
sahf
jno,pn
push
xchg
pop
shl
pusha
xchg
inc
pop
in
mov
xchg
dec
sub
das
pushf
sub
imul
fldt
call
imul
lret
sub
jo
lret
scas
sub
subb
sub
jnp
pop
sbb
pop
pusha
insl
xor
in
sub
mov
js
dec
mov
fistl
shl
test
jae
xchg
adc
pop
lods
popf
aad
out
insl
mov
mov
add
test
push
jl
repz
xlat
es
lret
notl
stos
hlt
call
shlb
dec
pop
dec
sarl
mov
fdivrs
and
xor
mov
rorb
mov
in
and
push
std
insl
pop
in
fsubs
push
addr16
mov
scas
push
jae
aaa
stos
orl
xlat
fldcw
pop
mov
mov
mov
shlb
in
jmp
ror
jne
adc
movsl
xor
lods
xor
adc
pop
std
andl
push
lahf
aam
or
cwtl
sbb
cmp
je
lock
std
out
add
adc
mov
jmp
int
mov
mov
in
add
xchg
push
fstps
or
jnp
sahf
out
cmp
stos
ljmp
xchg
push
xor
mov
fistps
loopne
pop
mov
sub
xchg
jmp
aaa
faddl
ja
mov
xchg
adc
iret
push
hlt
mov
xor
fstpt
add
loop
mov
sbb
xchg
push
adc
mov
push
push
mov
fidivl
inc
cmc
jle
inc
xchg
xchg
add
inc
inc
mov
div
fadds
xchg
cli
mov
add
adc
fistpl
adc
lcall
inc
push
cmp
gs
cltd
test
call
and
sub
rorl
and
lret
fimull
push
push
mov
popf
stc
cmp
pop
jno
outsb
add
les
sbb
movsb
insl
pop
popa
stos
test
mov
pop
jmp
add
pop
sarb
dec
push
pop
pop
cmp
in
stos
movsb
jle
inc
mov
les
out
jns
pop
in
pusha
dec
jno
push
fists
dec
push
dec
or
or
jns
ljmp
loopne
aaa
dec
nop
movsl
xchg
mov
test
sub
adcb
xlat
sbb
das
mov
scas
loopne
hlt
pop
js
pop
push
pop
mov
or
xor
push
bound
adc
add
dec
stos
lret
movsb
scas
bound
xchg
bound
out
mov
scas
test
and
lods
jmp
push
popf
cs
inc
pop
and
pop
shll
and
hlt
call
ret
loopne
movsl
popf
pop
xchg
dec
out
add
adc
dec
adc
xchg
repz
cmp
dec
stc
cmp
inc
aaa
sbb
and
and
and
xchg
jle
shll
pop
data16
push
or
scas
mov
jns
pusha
into
aas
adc
mov
push
out
inc
popf
in
jl
xchg
dec
or
mov
out
adc
mov
ljmp
and
repz
mov
inc
cltd
fs
jno
nop
icebp
lret
pop
mov
into
dec
mov
mov
dec
push
loop
sbb
les
dec
ljmp
or
iret
ds
gs
mov
mov
in
mov
push
sbb
push
lock
clc
je
das
shlb
mov
add
mov
mov
popa
shrb
mov
or
addl
push
xor
rcrl
pop
gs
bound
xchg
data16
inc
aam
orl
iret
xor
dec
jecxz
dec
adc
sub
inc
js
fidivl
repz
xchg
cmp
clc
inc
fwait
mov
ljmp
insb
sub
test
xchg
dec
sbb
in
imul
and
push
test
xlat
jbe
insl
fsubl
inc
fwait
mov
or
push
sbb
dec
daa
ret
lret
popa
sub
xor
sbb
cmc
std
cltd
lds
xchg
xchg
in
adc
out
xor
adc
notb
mov
or
jge
and
stos
mov
sbb
cltd
mov
jp
data16
mov
lret
fmuls
dec
xor
mov
xor
xor
fs
sub
popa
repnz
jnp
push
xchg
xor
sub
cs
mov
shrb
dec
leave
mov
dec
push
jbe
lea
add
imul
sub
mov
xlat
rcr
pop
out
mov
gs
pop
and
xchg
mov
es
sti
push
inc
out
pop
xor
or
daa
fstpl
popa
mov
push
cmpsl
pop
scas
fwait
out
inc
lret
sbb
dec
pop
pop
fidivs
sarb
push
push
fwait
scas
cmp
mov
dec
mov
ret
sti
es
xchg
add
xor
jno
dec
std
insl
dec
pop
les
stos
cwtl
push
popf
loop
xor
insl
in
test
xchg
lcall
loop
mov
and
add
int
inc
addr16
popf
rorl
fs
jecxz
loopne
scas
rcrb
inc
std
nop
rorl
or
or
or
aas
add
setge
jnp
lods
inc
push
push
fwait
loopne
scas
loopne
inc
jo
fiaddl
mov
enter
push
clc
je
dec
xchg
hlt
scas
aam
mov
aas
adc
mov
mov
fmuls
jae
push
call
cmpsl
mov
adc
bound
pop
mov
dec
test
std
loopne
scas
cmp
push
jle
push
push
sub
sub
mov
dec
push
pop
mov
gs
cmp
leave
mov
xor
push
inc
jl
dec
jecxz
cmp
aad
cmpsb
xchg
out
mov
jb
cld
repz
xor
cmpsl
cmpsl
out
pop
or
movsl
jns
add
cld
lods
mov
sub
mov
pop
scas
jo
push
je
mov
jnp
les
adc
sbb
fisttpll
mov
pushf
in
jae
in
mov
repz
cwtl
mov
jge
out
pop
fsub
pop
and
sub
cli
sub
pusha
mov
pop
sbb
test
rolb
out
cmp
in
ds
in
test
dec
sub
and
dec
fildl
push
adc
pop
stc
nop
nop
mov
roll
fistl
divl
sbb
inc
mov
lea
xor
fadds
call
in
shll
jp
cmpsb
ret
jb
pushf
sub
xchg
xlat
outsl
jle
cmc
inc
mov
repz
popf
lods
shl
sub
sub
repz
iret
shrb
add
xchg
mov
sub
in
jns
dec
bound
inc
mov
mov
inc
adc
aad
fwait
leave
inc
jnp
sub
test
dec
push
std
mov
leave
cmp
mov
or
jecxz
pop
push
fsubp
inc
sbb
out
ljmp
out
pushf
shll
movsb
test
pop
and
mov
adc
in
xchg
xchg
mov
repnz
inc
add
shll
push
mov
and
cmpsb
loope
xchg
lret
dec
rolb
push
sbb
inc
xchg
push
jbe
inc
adc
or
faddp
aad
xor
mov
xor
icebp
nop
push
and
sub
bound
ret
cwtl
fistpl
ffreep
leave
cld
pushw
int3
out
fldl
xchg
popa
push
cmpsb
test
sub
or
enter
adc
lods
xor
add
test
cld
int
and
sahf
les
cmpsl
lds
jp
scas
aaa
and
mov
mov
popa
mov
pop
cmpsb
add
aam
dec
je
inc
jne
test
imul
sub
scas
pop
and
lahf
arpl
cmp
cmpsl
xor
leave
cmpsb
dec
loopne
lcall
mov
jo
lods
fdivs
sub
setp
scas
fdivrl
cs
imul
inc
push
js
sbb
lods
or
addr16
rorl
insl
and
or
rcrl
int3
lahf
pop
pushf
fstpl
enter
xchg
mov
loopne
stos
and
and
pop
insb
outsl
ficompl
and
fimull
jge
out
cmc
stc
push
scas
cltd
inc
bound
or
dec
fidivrs
mov
sbb
push
or
aaa
lahf
push
js
or
mov
orl
pusha
roll
and
loope
dec
or
adc
xor
loop
lcall
rol
test
mov
jmp
jp
push
rolb
repz
jnp
aas
std
fnstsw
pop
or
push
xchg
add
scas
push
xlat
cmp
cltd
xchg
jge
inc
loop
sbbb
mov
sahf
jnp
pop
push
sbbb
add
jmp
xor
ja
jp
enter
loopne
xchg
pop
ja
mov
push
cmpsl
pop
pop
js
pop
es
clc
jmp
push
out
inc
lods
jge
jae
arpl
mov
and
and
xor
sub
lret
xor
xchg
push
xchg
mov
dec
xchg
dec
pop
cli
loop
or
jmp
xchg
into
sbb
xchg
xchg
popf
jno
xor
mov
shll
mov
shlb
cli
sub
popa
push
in
lds
jb
inc
jmp
push
icebp
push
mov
sub
push
sbbb
jne
dec
outsb
fistpl
sbb
mov
enter
mov
add
push
test
or
add
pushf
xchg
inc
jmp
rclb
adc
std
xor
mov
add
xor
xchg
repz
jmp
inc
jg
lods
dec
pop
insb
sbb
sub
pop
mov
lret
daa
pop
stos
cltd
rorl
vcomiss
test
push
nop
std
sbb
out
and
sub
ljmp
add
stos
pop
fbld
notb
repnz
ret
insb
lcall
adc
nop
mull
push
sbb
mov
xchg
add
out
jns
add
inc
xor
lcall
ret
xor
jne
pop
addl
pop
rcrl
inc
sahf
add
push
incb
movsb
into
scas
add
dec
mov
popf
daa
pop
jb
cmpsl
add
movsb
xor
lds
ret
fdivl
push
sub
mov
xchg
shl
movsb
xchg
in
mov
pop
sub
pop
psrld
movsl
loope
pop
jmp
stos
cmp
inc
outsl
xor
out
mov
in
fstp
mov
xorb
mov
test
leave
xor
repnz
leave
paddb
out
push
push
xchg
adc
out
popf
ret
pop
dec
shlb
mov
adc
pushf
cmpsb
inc
cld
mov
add
sahf
or
add
out
xchg
mov
mov
jnp
fists
cltd
sub
daa
pusha
lahf
mov
cwtl
aas
or
or
push
xchg
je
js
push
xchg
stos
lret
push
push
dec
orb
repz
bnd
stos
and
bound
pusha
push
jns
jl
das
fsub
aaa
mov
jp
jp
loope
dec
or
icebp
inc
test
call
pop
sub
jmp
lds
mov
imul
fs
test
cmp
dec
and
jnp
mov
out
lock
pop
sub
imul
push
inc
and
push
out
xchg
cltd
popl
subl
mov
int
hlt
xchg
sbb
inc
pusha
or
dec
jae
fld
jmp
dec
imul
add
or
push
cltd
xchg
and
out
aam
cmpsl
pop
or
and
cmpb
cmpsb
mov
xlat
and
mov
inc
pop
mov
addr16
and
dec
arpl
orl
jmp
lahf
xlat
mov
xor
mov
dec
pop
pop
push
cmpsl
and
add
dec
mov
mov
in
out
and
movsb
or
xchg
add
popf
mov
xor
movsb
stos
xor
popf
mov
sub
add
mov
rolb
pop
test
xchg
mov
ret
das
cmpsb
data16
mov
and
xlat
lahf
outsl
lea
stos
and
fs
add
dec
data16
push
jecxz
mov
hlt
fidivrl
push
or
clc
add
icebp
or
xchg
rep
mov
or
push
ss
fidivrl
dec
roll
repnz
lods
jl
cmp
push
gs
rorl
push
cmc
adc
mov
pop
adc
or
fwait
sub
in
out
stos
in
cli
int3
add
pop
push
sub
push
jbe
pop
mov
cmp
and
das
mov
sub
scas
sbb
cmp
pop
sbb
jb
xchg
xor
fwait
stos
movsl
jne
mov
dec
mov
jne
adc
or
popa
and
add
aaa
or
xor
fidivrl
pop
xchg
mov
mov
in
test
sub
cs
insl
push
loopne
xor
jl
loop
jb
mov
sbb
mov
cmp
hlt
in
imul
call
mov
dec
aad
cs
lock
ds
loop
pop
sub
mov
mov
in
jge
jbe
pop
mov
push
stos
cwtl
sbb
cmp
lcall
gs
xor
inc
push
pop
lds
ret
add
mov
test
mov
dec
inc
jmp
mov
adc
cltd
add
je
and
rcrl
dec
pop
testl
rcr
scas
pop
push
pop
imul
inc
arpl
out
int3
xchg
jnp
or
add
xor
enter
int
iret
jge
aas
stos
mov
inc
mov
iret
xchg
add
dec
lret
lret
pop
dec
insb
xorb
ds
dec
icebp
enter
jo
push
mov
inc
clc
cmp
fs
xlat
jns
dec
inc
mov
out
xchg
popf
jo
scas
xchg
popf
dec
sub
stc
sub
inc
inc
arpl
mov
mov
mov
mov
sub
negl
push
mov
pop
xchg
popa
inc
mov
xor
sti
aad
push
adc
int3
orl
or
mov
xor
rcl
adc
adcl
dec
ret
jbe
js
sub
sbbb
mov
mov
cmp
hlt
adc
es
pop
shll
jbe
mov
xchg
je
ret
cmpsl
insb
loopne
jne
addl
xorb
sub
jae
mov
pop
dec
repnz
out
movl
rcrl
adc
stos
mov
lret
cmp
mov
loopne
or
mov
ss
les
mov
stc
adc
xor
fdivr
daa
jg
rolb
gs
mov
mov
mov
cmp
out
aaa
adc
jbe
sbbb
cwtl
dec
adcl
and
mov
test
mov
cs
dec
mov
sbb
loop
pop
faddl
sub
inc
gs
inc
and
push
in
jbe
sbb
jecxz
fs
filds
push
push
bound
das
mov
cmp
int3
xor
mov
mov
add
or
cmpsb
cli
subb
mov
jbe
aaa
cmp
dec
fidivrl
popf
cld
sbb
lcall
jo
and
or
ficoms
sub
scas
lock
add
xor
adc
pusha
es
in
ljmp
sub
jo
xchg
mov
cld
jns
divl
jno
and
in
outsl
cld
jne
cmp
sti
push
rcrb
test
cmp
sub
adc
lahf
nop
jnp
mov
or
outsl
mov
fisubs
push
sub
sbb
cmp
jp
mov
not
aad
sub
inc
iret
mov
jge
cmpsb
das
clc
push
movl
jg
rol
cmp
jae
sbb
mov
cli
aaa
adc
lock
push
ljmp
jle
mov
xchg
movsb
popa
pop
cmp
aaa
mov
mov
lret
add
pop
cmp
sub
out
enter
out
inc
push
adc
movsl
adc
mov
shll
xchg
out
cltd
xor
mov
outsb
cs
and
mov
mov
in
cmpsl
stos
pop
cmp
out
leave
sub
pop
pop
call
xor
xor
test
shll
fidivrs
or
mov
adcb
add
mov
rcr
ss
cmpsb
pop
pop
push
fs
loope
pop
cli
in
lds
mov
jbe
bound
or
mov
or
insl
add
dec
and
lret
outsb
aad
inc
insl
mov
xor
mov
insl
sti
dec
pusha
mov
leave
adc
sbb
nop
inc
xchg
dec
pop
outsb
ficomps
int3
mov
icebp
jne
mov
sbb
mov
jg
lahf
mov
aaa
jae
mov
iret
adc
cmp
or
or
xor
mov
fs
lcall
xor
adc
mov
mov
jns
stos
sbb
fisttpl
pop
lods
shrl
jl
push
jp
push
insl
pushf
sbb
or
cmp
pop
mov
in
outsl
xor
addr16
daa
lcall
dec
cli
decl
add
loope
sub
dec
test
xor
insb
mov
nop
and
int3
push
gs
dec
cmpl
pop
fists
add
and
xor
inc
in
out
dec
add
rclb
xlat
arpl
sub
dec
iret
or
popa
xchg
int
push
ror
inc
add
int3
adc
sbb
mov
add
mov
icebp
jecxz
pop
in
push
std
nop
jecxz
into
dec
into
mov
mov
mov
jge
mov
mov
jmp
or
sbb
fcmovu
js
and
int3
jbe
scas
movsb
int3
or
lret
mov
out
pop
rorl
into
mov
push
sub
or
adc
inc
add
mov
std
mov
or
jnp
mov
sub
fisttpll
hlt
cmp
mov
pop
or
stos
mov
jp
mov
sub
sahf
xor
imul
roll
pop
notl
aad
std
repz
ret
lret
xor
xchg
test
cmpsb
cmp
lret
lahf
or
mov
leave
xchg
push
or
nop
pop
icebp
cmpsl
add
cmp
dec
movsl
imul
lahf
dec
jl
mov
mov
movsb
dec
mov
pop
mov
sahf
add
imul
xor
cmp
xchg
js
push
push
lea
fiadds
outsb
push
inc
dec
inc
mov
push
mov
push
jg
lahf
sub
mov
dec
nop
dec
clc
orb
cmp
shrl
and
xor
dec
test
mov
subl
push
mov
enter
sub
rorl
pop
cmpsb
jno
shlb
mov
sbb
or
sbbl
mov
cwtl
jno
int
out
enter
shrb
sbb
adc
ret
or
imul
lret
pop
lock
fnsave
filds
mov
sbb
std
push
sbb
jae
adc
inc
addr16
rcr
xor
into
xchg
mov
jae
aaa
aaa
mov
fmul
push
call
jnp
pop
rclb
imul
sub
rcll
inc
nop
fsts
scas
xor
je
scas
mov
fidivl
test
dec
or
or
test
xor
lods
sti
cs
addb
jecxz
jns
mov
pop
pop
rorb
in
push
in
mov
push
arpl
aas
sbb
mov
xchg
outsb
iret
nop
mov
xchg
dec
xlat
inc
mov
mov
stc
cli
sbb
cmp
add
test
fisttpl
xchg
jle
je
pmaxub
sub
jge
or
push
pop
add
ret
shrl
or
push
pop
dec
add
inc
fld
sahf
in
xchg
imul
add
pop
adc
add
mov
sub
push
mov
sub
push
mov
jg
dec
sub
jb
sub
mov
pushf
mov
xchg
scas
mov
jg
cmp
int
cmpsb
xchg
mov
sbb
bound
cmpsl
adc
inc
sar
jo
mov
leave
les
pop
mov
pop
jle
loopne
in
xor
mov
jns
xchg
xor
loope
push
jae
sahf
outsb
sbbb
fstl
sub
jge
cmpsl
add
dec
loop
jecxz
insb
lret
pop
mov
adc
add
inc
lcall
push
jecxz
mov
imul
fistl
pop
cmp
repz
mov
insb
fcoml
fcompl
inc
and
or
xchg
or
mov
jne
xor
jbe
stos
jmp
orb
pop
clc
rclb
pop
test
outsb
in
outsb
push
and
iret
ja
sbb
pusha
fisubrl
mov
mov
fs
aaa
push
sub
jge
inc
pop
adc
sahf
mov
jg
bnd
mov
pop
ljmp
aaa
loop
or
push
cmp
sti
sub
mov
pop
add
xchg
inc
adc
sbb
negl
fsubrs
subb
fisttpl
xchg
insb
int
sbb
pusha
ficoml
push
adc
test
icebp
mov
inc
jecxz
in
push
int3
insl
and
jp
jle
fiaddl
mov
jg
rol
ja
mov
and
out
jne
movsl
and
mov
xor
pop
sbb
mov
lods
arpl
aas
cs
fldenv
jnp
lock
xor
cs
or
adc
and
dec
movsl
jae
jb
add
test
ja
je
ret
jmp
out
int
add
sbb
sbb
int
lea
sub
sub
rcrl
xchg
out
cmp
pop
mov
cltd
push
imul
and
bound
jb
or
jmp
sub
dec
mov
pop
insb
icebp
popa
insb
xor
orl
popf
incb
ret
sub
addr16
xchg
andl
ret
mov
inc
push
notb
fnstenv
xor
mov
fnsave
out
loop
mov
mov
shll
jmp
popa
loope
lret
jo,pn
aas
fsubrp
mov
imul
sti
lock
dec
sub
lret
int3
lret
inc
aaa
ljmp
mov
xor
aad
dec
add
jae
mov
hlt
pop
clc
lea
xor
xchg
fidivrl
jg
push
ss
jg
xor
imul
pop
inc
mov
in
loopne
inc
cmp
xchg
and
into
pop
out
mov
dec
sbb
adc
dec
mov
in
ffreep
inc
ret
in
je
push
inc
cmp
ja
sbb
mov
fwait
mov
jg
iret
es
push
and
pop
movsb
sbb
shll
incb
cltd
fwait
clc
jae
sbb
cmpsl
ja
adc
dec
pminub
xchg
mov
popa
inc
cmp
dec
ret
aad
jp
adc
xchg
stos
movsl
mov
imul
mov
ret
sahf
mov
fwait
and
aaa
clc
cmp
fsubl
shll
sub
jmp
shrb
and
add
jo
jp
jg
pop
mov
inc
fs
sbb
cmpsl
jno
mov
and
lret
adc
pop
xor
lahf
cmpsb
enter
xor
mov
cli
icebp
xchg
xchg
adc
jne
fsubrs
and
inc
je
loope
test
lea
jo
xor
loope
pop
sub
cwtl
inc
add
add
xchg
shlb
sbb
jmp
xchg
or
out
sbb
push
jmp
cmpsb
std
outsl
mov
lock
nop
or
pop
and
jp
cwtl
adc
cmp
ja
pop
test
int3
fisubrs
lret
into
cmp
xchg
shrl
jo
cmp
std
mov
cmp
shr
out
cmp
and
jo
xchg
loope
ret
pop
xchg
stos
cmpsl
fisttpll
xor
aaa
test
out
and
add
jp
sbb
cmc
in
push
data16
xor
xor
pop
jae
lods
rclb
dec
or
mov
repz
mov
adc
jecxz
xor
mov
mov
ds
data16
lret
jl
fwait
out
mov
subl
cmp
cs
jg
adc
mov
daa
adc
in
enter
inc
mov
xchg
xchg
jg
jg
mov
shll
add
adc
xor
cmp
mov
lds
fisubrl
inc
mov
sbb
xchg
push
mov
push
out
add
jmp
popf
pslld
lahf
mov
stos
out
cmp
fsubp
bound
push
ss
rcll
push
sub
ja
stos
cltd
fcoml
add
jmp
add
enter
mov
mov
pop
push
mov
sub
test
xchg
sub
cmp
int3
test
adc
lock
filds
add
or
cs
dec
pop
xchg
out
mov
ret
out
loope
jp
jmp
mov
cwtl
sub
mov
push
dec
adc
dec
das
in
enter
push
data16
inc
jmp
repz
pop
mov
idiv
jnp
clc
stc
mov
rorb
xchg
add
jle
mov
daa
adcl
pop
cmpsb
imul
mov
xor
mov
xor
addr16
push
data16
rorl
popa
das
mov
adc
mov
cli
xchg
outsl
jne
popf
mov
cmp
nop
mov
push
mov
ficoms
dec
lea
mov
sbb
fisubrl
arpl
rcrb
jecxz
adc
adc
adc
pop
outsb
mov
add
into
mov
xchg
mov
dec
inc
ja
push
mov
fstpl
sbbb
xor
mov
fidivrs
and
add
out
ret
movsb
xor
call
in
rclb
sbb
xchg
xchg
mov
sbb
fstpt
mov
clc
sub
xchg
iret
xchg
fsubrs
push
mov
addr16
rcrb
jg
xlat
jae
jle
cli
jne
jae
or
xchg
loopne
pop
sbb
cmpsb
fwait
mov
or
orl
fsubp
adc
push
notb
jns
add
js
adc
ret
mov
jb
out
cs
rclb
or
adc
adc
or
scas
mov
cmp
sbb
iret
and
mov
push
cmp
pop
cmp
push
dec
fistl
mov
lds
and
cmp
pop
mov
out
push
inc
or
mov
xchg
mov
sub
sbb
pushf
test
push
and
rorb
aam
push
sbb
ja
xor
xor
pop
ja
test
les
ljmp
or
gs
inc
insl
sub
fcomp
fistl
adc
stos
arpl
outsb
cmpl
fs
cmp
mov
cmp
mov
popf
scas
sbb
fwait
arpl
xchg
and
test
fistpl
mov
push
xchg
out
push
sbb
hlt
rcll
stos
mov
lahf
aam
jo
and
pop
and
imul
sarl
ds
cmp
shrl
fdivr
xchg
repnz
xchg
lds
jl
pop
insb
push
add
jle
test
push
add
lods
lea
imul
xlat
dec
scas
bound
inc
mov
xchg
outsl
inc
fbstp
pop
fisubs
stos
pminub
xor
repz
int3
aam
imul
inc
sbb
jae
add
ss
add
adc
icebp
mov
scas
cld
dec
cld
push
fwait
xchg
dec
sti
mov
daa
adc
int3
cmp
or
aas
test
rorb
test
scas
jmp
ss
mov
sbb
pop
in
jno
insl
mov
lods
jmp
in
and
dec
out
cltd
test
repnz
ret
jne
fldcw
push
mov
xor
gs
dec
inc
add
mov
add
xor
jae
pop
and
pop
push
fistps
xor
adc
cwtl
sti
push
and
cld
cmpsb
jmp
pop
out
jne
adc
insb
mov
mov
dec
hlt
push
sti
pop
testl
sub
or
lret
sar
js
pushf
add
sub
je
rorl
mov
iret
jo
cmp
pop
nop
in
xchg
inc
or
jns
xchg
lcall
mov
cmp
in
cmpsb
leave
out
xchg
inc
pushf
rol
stc
out
divb
xchg
jl
mov
and
inc
push
cmp
aam
xchg
fiadds
cwtl
pop
inc
daa
jne
xor
hlt
pop
and
dec
xchg
cmp
imul
popf
adc
fsubs
and
in
mov
sub
test
ret
fdivl
or
jmp
jl
lret
aam
les
inc
inc
mov
aas
pop
and
cs
jno
sub
mov
enter
jae
out
dec
inc
xchg
cmpl
xlat
cmp
jns
add
ret
stos
add
movsl
mov
cmp
cmc
jae
scas
adc
aas
xchg
frstor
inc
dec
xor
dec
movsb
mov
and
mov
cmp
jecxz
inc
adc
test
push
mov
test
pop
push
test
fsubrl
fistl
loop
mov
xchg
xchg
aad
mov
sub
xchg
sub
idivl
pushf
dec
jg
mov
inc
loope
dec
ret
push
xchg
mov
mov
pop
sarb
js
or
fsts
insb
xchg
dec
add
sub
push
lret
mov
rcll
sti
xor
imulb
std
dec
lock
out
xchg
popa
xor
repz
call
xchg
cwtl
imull
in
adc
stos
leave
ret
call
sub
add
cmpsb
inc
dec
add
push
cmp
add
xchg
out
push
mov
push
enter
shrb
rcrb
sub
cmc
xchg
addb
mov
js
rcrb
xchg
test
outsb
lea
mov
rol
outsb
and
repz
cwtl
es
pop
pop
adc
pop
inc
jmp
cmp
mov
mov
xchg
inc
adc
mov
scas
sbb
test
fsubrs
sbb
div
xchg
shll
mov
inc
add
rcrb
add
add
inc
cli
movsl
sub
lds
jp
sub
mov
lds
pop
in
out
mov
sub
jle
fidivl
stos
ds
rcll
jp
test
call
push
pop
add
dec
add
push
js
push
test
fnstenv
leave
sbb
sub
or
ror
jae
sarb
notb
hlt
push
add
jbe
jmp
cmp
push
lods
les
iret
jb
sub
aaa
fwait
inc
les
cld
shlb
clc
and
mov
push
dec
cmp
into
sub
shl
ds
aas
pusha
xor
jno
out
repz
cwtl
pop
fsubs
adc
jns
scas
mov
xchg
jbe
iret
aad
popa
sqrtps
jl
lcall
popw
out
call
inc
mov
sbb
lret
data16
scas
arpl
xchg
push
out
lods
dec
push
cmpsb
das
jg
lock
add
cs
int3
pop
and
lods
sahf
mov
xor
xchg
add
lea
inc
das
test
rcrl
pop
stos
mov
insl
cmp
pushf
gs
cmp
mov
mov
push
lahf
or
push
adc
push
mov
enter
dec
jne
pop
test
adc
pop
cmp
pusha
lods
addl
jbe
and
stc
in
pop
and
mov
jmp
mov
or
add
xlat
sbb
roll
mov
out
and
out
fstpl
fisubrl
add
mov
test
shlb
and
pop
lahf
cmp
inc
jbe
xor
and
sbb
inc
in
pop
push
sbb
fidivs
inc
dec
inc
jge
mov
jp
scas
lods
movsb
inc
mov
fisubrs
jae
inc
mov
jne
inc
mov
inc
cmpsb
and
ror
inc
movsl
pop
aam
sub
xor
fbld
mov
xchg
push
jge
pop
ss
ret
lea
int
add
sti
dec
or
pop
jl
mov
jmp
mov
test
cmpsl
sbb
push
loopne
rcrl
imull
int3
pushf
mov
mov
and
fcmove
rcr
mov
xor
xor
dec
pop
inc
pop
xchg
lods
lret
rcl
jb
jbe
hlt
adc
stc
ficomps
shl
push
shl
lcall
sub
popa
jo
xchg
in
lahf
test
insl
in
xor
aaa
jb
lret
sub
int
int
push
push
mov
out
movsb
xchg
mov
sbb
dec
mov
dec
in
push
pop
jo
insb
scas
inc
mov
fiadds
cli
dec
fistps
push
mov
divl
xchg
xchg
sbb
testl
jnp
jl
xchg
popa
lods
fstps
jp
std
dec
fdiv
or
fimull
lahf
movsl
xchg
insl
out
pop
dec
push
loope
mov
mov
pop
or
and
mov
int
lods
aam
cmp
adc
pushf
jo
adc
out
mov
push
inc
mov
ret
adc
cmc
fwait
pop
fstpl
xchg
cmp
sti
in
inc
and
lahf
cmp
scas
jns
pop
pop
es
stos
cltd
add
nop
pop
pop
mov
ret
xchg
push
sbb
mov
mov
cmp
sbb
and
push
or
add
scas
sub
sbb
or
adc
pop
int
sub
pop
mov
pop
mov
cltd
adc
lcall
dec
jne
push
ds
lahf
testl
pushf
in
lds
pushf
sarl
xor
loopne
addb
pop
bound
push
jecxz
das
int3
out
mov
into
js
dec
push
mov
dec
loope
mov
sbb
jge
push
dec
mov
shll
dec
addl
je
mov
push
xchg
fistpll
and
mov
xchg
sub
pushf
and
shl
test
scas
addb
std
arpl
pop
das
xor
stos
push
hlt
and
movsb
push
repnz
or
mov
xchg
sahf
adc
mov
push
fnsave
test
jmp
sub
inc
adc
rcll
bound
sub
jns
shll
test
sbb
loope
or
adc
pop
adc
cwtl
repnz
mov
add
xor
mul
dec
fwait
mov
xor
jnp
mov
mov
pop
out
cmp
xor
ret
or
xchg
cmc
movsb
or
jbe
mov
leave
insb
outsl
lret
pop
cli
outsb
or
aad
std
int3
repz
sbb
loope
xchg
cmp
sub
add
sbb
test
cmp
push
js
lcall
ja
xor
mov
jge
pop
jecxz
and
sub
mov
xor
dec
mov
jo
or
sti
or
out
and
cld
sub
xchg
jo
or
mov
cwtl
sarl
add
cmpb
cmp
cmp
dec
add
mov
repz
mov
dec
mov
adc
insl
jmp
jmp
daa
icebp
flds
fnstsw
mov
lcall
push
inc
shlb
mov
mov
xchg
mov
pop
insl
jecxz
and
cs
jl
je
xchg
dec
loop
mov
mov
enter
imul
cltd
pop
inc
mov
test
sub
pushf
xor
sbb
clc
bound
test
mov
xchg
ljmp
inc
sbb
mov
aas
ds
dec
nop
jnp
jl
jo
cmp
mov
sbb
out
mov
add
scas
xchg
adc
es
int
jg,pt
sarl
loope
or
mov
add
push
inc
fucomp
and
mov
std
jl
push
pop
cmp
xor
inc
lods
mov
push
or
sbb
cmp
jecxz
add
and
test
push
mov
out
push
test
push
fmulp
repz
inc
cmp
aas
mov
mov
sbb
jp
and
dec
shlb
sbb
cmp
xchg
insb
jns
push
dec
adc
ret
loop
xchg
roll
loopne
xor
add
fsts
ret
sub
repz
add
mov
ret
daa
sbb
push
adc
mov
xor
xor
push
mov
jnp
lea
ss
push
cmp
out
sbb
pop
out
mov
hlt
mov
ret
jno
adc
xorl
aaa
mov
cmp
int3
mov
cli
and
fwait
addl
mov
dec
movsb
inc
sub
sbb
push
or
jns
or
cmp
push
shr
pusha
add
jecxz
ret
in
inc
jne
adc
jl
dec
xchg
and
test
fidivrs
cmp
stos
lahf
loope
lcall
inc
add
rcr
push
es
ffreep
dec
outsb
loope
xor
call
or
push
rol
jp
xlat
aas
aas
fistpll
enter
xchg
or
ret
jbe
lret
outsl
add
cli
cmpsl
cwtl
push
ja
lods
movsl
push
push
cwtl
mov
and
data16
testl
cs
test
mov
cwtl
mov
aad
nop
gs
mov
adc
lea
sti
cmp
mov
lcall
dec
stos
mov
rorl
mov
ja
push
xor
pop
add
fwait
push
and
imul
dec
testb
and
out
fstl
xor
fwait
scas
mov
cmpsl
add
popf
ss
push
add
inc
scas
decb
lds
sbbb
clc
sub
popa
jl
xor
mov
mov
or
stos
cmp
test
mov
scas
inc
divb
pop
lock
xchg
pushf
test
movsl
jne
add
push
inc
pop
lcall
popf
cltd
repnz
push
mov
shll
andb
mov
sub
jg
daa
subb
lds
xchg
mulb
in
push
aam
cmp
xor
enter
loope
pop
xor
mov
jno
push
dec
loope
mov
lea
sub
and
sub
out
enter
mov
mov
int
pop
sbb
push
mov
push
mov
mov
test
rcll
and
frstor
aas
data16
les
mov
inc
pop
mov
daa
rorl
popa
mov
inc
std
xor
mov
lds
cmpsb
movsl
cmp
cmp
stc
movsl
pop
lahf
dec
into
je
scas
imul
lret
cmp
andl
mov
xchg
fs
mov
mov
xlat
sub
jne
add
xor
adc
ja
inc
mov
and
shlb
jecxz
push
mov
bound
fsubl
mov
outsl
or
lods
mov
xor
ret
dec
cmpsl
xchg
rcll
push
or
jnp
push
inc
xchg
js
mov
test
fsubr
sub
addr16
mov
gs
mov
in
imul
mov
mov
sub
sub
movsb
test
mov
mov
inc
ds
shrl
inc
popf
sbbl
add
shrl
mov
mov
sub
ljmp
pop
or
push
mov
and
mov
mov
and
mov
jge
lods
jno
xor
xorl
jno
lods
inc
fistpl
cmp
cld
arpl
rolb
jno
mov
rcl
sub
cmp
aaa
leave
lods
xchg
mov
or
lahf
hlt
pop
sub
outsb
ret
fsubl
hlt
jmp
inc
sub
jnp
cmp
cltd
push
mov
fdivr
sub
xorb
pop
cmp
in
xor
sub
shll
cs
mov
add
inc
jecxz
adc
cwtl
scas
pop
xchg
jl
shll
inc
or
mov
mov
imul
shrb
mov
imul
inc
hlt
pop
adc
mov
inc
add
cmc
adc
sbb
addr16
dec
addr16
fs
fmull
popf
pop
lret
cmpsl
cmp
out
xor
bound
out
and
lock
jnp
clc
and
mov
movlps
lret
aam
fisubrl
jno
and
xchg
jno
adc
fbstp
inc
pop
pop
jge
adc
das
or
or
dec
cld
mov
rcl
xor
jmp
lods
lcall
cmpsb
sbb
jg
dec
push
adc
mov
sbb
mov
das
inc
jge
es
add
xor
jne
xor
mov
out
dec
sub
xor
cmp
jmp
pop
push
test
sbb
in
pushf
imul
lret
inc
adc
test
cmp
add
ret
and
dec
push
xor
sbb
add
loopne
xchg
lret
outsl
mov
outsb
xchg
cltd
push
xchg
fs
sub
xor
sub
and
cmpsb
mov
movsb
in
inc
or
jo
bound
sti
fcmovb
cmc
mov
inc
bound
fs
test
mov
out
or
jae
aaa
sti
icebp
xor
jns
ljmp
cmp
leave
test
sub
popf
les
loope
mov
xchg
sub
add
dec
pop
testl
imul
hlt
jb
test
inc
int3
inc
jo
dec
adc
stos
xchg
add
sub
sub
enter
ficoml
divb
les
and
lods
xchg
pusha
cmpsl
inc
pop
xor
loop
sub
mov
ficompl
pop
mov
sub
mov
lods
bound
pushf
xchg
rorb
popf
mov
cltd
cs
sti
imul
cs
xor
ss
push
mov
nop
int3
ficoms
jno
jmp
add
mov
aaa
neg
movsb
mov
pushf
fnstcw
xchg
loopne
push
ficoms
cmp
leave
cmp
adc
ds
in
test
sbb
int
loopne
push
enter
xor
pop
and
mov
pop
jecxz
stos
arpl
mov
in
mov
mov
pop
movsb
push
sub
push
outsl
or
jae
in
adc
lods
loop
orl
leave
rcrb
add
mov
or
inc
sbb
pop
notl
inc
mov
in
fs
in
xchg
fisubs
lock
in
dec
sub
jg
lea
mov
xorl
loopne
xchg
scas
test
test
sub
sub
sub
lods
adcb
pop
sbb
das
lods
jg
push
movsl
sahf
or
inc
pop
xchg
mov
ds
lods
inc
xlat
or
cmp
pop
mov
loope
outsl
xor
push
lods
and
inc
push
fisubl
sbb
sbb
xor
insb
inc
push
sub
pop
mov
jno
or
pop
cmp
xchg
loope
xor
add
pop
dec
and
mov
mov
aas
sbb
outsl
sub
mov
sub
in
lods
pop
push
xchg
lea
stos
add
int3
lock
push
fidivs
std
call
xor
pop
and
mov
scas
dec
adc
or
fcmovnb
je
jmp
mov
test
pop
int
sub
inc
fistl
adc
lret
and
sbb
jl
jmp
dec
data16
dec
mov
aas
jmp
push
push
add
ret
and
sti
test
or
mov
js
jle
insb
add
cmp
imul
lret
syscall
in
inc
pop
add
out
cmp
nop
mov
dec
ret
fsubr
data16
jb
mov
lea
enter
add
arpl
int3
sbb
or
aad
jnp
aas
cmpsb
dec
sub
in
leave
mov
jo
mov
es
mov
mov
outsb
xor
xor
ret
mov
arpl
push
pop
and
insl
clc
js
ds
mov
adc
in
outsl
xchg
add
ficomps
lods
or
out
push
pushf
dec
test
jle
stos
int3
clc
insb
mov
mov
lcall
mov
imul
lods
rclb
xchg
sub
adc
insb
movsb
mov
sub
cli
add
imul
int3
in
inc
lret
add
fstl
loop
in
out
pushf
out
push
insb
adc
ds
inc
cmpsl
xchg
mov
mov
shrl
push
outsb
xlat
dec
lods
andl
add
cltd
adc
fcomi
push
sub
xor
daa
mov
lret
cmp
pusha
sti
pop
push
sti
or
out
adc
xchg
xor
xchg
mov
movsb
stc
and
aam
push
in
push
push
test
pop
scas
jge
inc
mov
jno
in
jecxz
adc
push
mov
xchg
mov
mov
out
ljmp
jno
mov
jge
hlt
les
mov
jb
adc
jb
push
jns
mov
les
mov
in
xor
int3
sub
sahf
rcrb
cs
ds
imul
push
xchg
or
das
int
pop
std
insb
add
sarl
xchg
cli
push
lahf
mov
or
inc
cmc
push
dec
call
mov
outsl
sbb
dec
push
push
push
test
jle
jb
mov
mov
arpl
sbb
orl
push
mov
mov
iret
js
dec
dec
in
and
push
stos
out
mov
mov
push
pop
out
mov
data16
jno
jbe
shrb
frstor
in
sbb
bound
stos
jmp
pop
psubw
repz
fs
jecxz
add
gs
mov
xor
and
scas
popf
xor
jg
fwait
or
and
sti
sbb
std
pushf
cmp
and
stos
xchg
push
test
shrl
add
push
jno
js
loop
and
imul
adc
cmpsl
adc
xlat
js
xchg
jo
push
neg
adc
fdivs
aaa
call
or
daa
in
or
mov
jae
vpsubd
pop
adc
insl
sub
mov
and
out
mov
sbb
aas
stos
jbe
jecxz
adc
xor
sarl
mov
mov
push
push
clc
je
xor
cmpsl
dec
out
mov
arpl
out
mov
or
pop
jp
sub
pop
fs
and
sub
xchg
movsl
pop
sti
dec
int3
scas
mov
push
in
sbb
subb
cmpl
sarb
xchg
sub
pop
fsqrt
sbb
stos
std
test
xor
xchg
mov
xchg
sahf
inc
es
mov
or
inc
pop
xor
mov
mov
mov
int3
adc
mov
aaa
test
jl
jge
push
mov
add
push
lahf
lock
mov
mov
xchg
sbb
mov
cmpsl
lods
inc
imul
pop
dec
dec
mov
or
mov
push
mull
dec
xchg
orb
test
sbb
mov
int
das
subl
sbb
or
mov
scas
sub
sbb
rorb
js
fbld
jmp
xlat
xchg
pop
inc
decl
adc
jle
adc
dec
sbb
fcomp
mov
jle
sbbl
sub
cmp
popf
or
popa
rcrb
push
xor
adc
cli
mov
adc
xor
mov
insl
cmpsl
ret
mov
cmp
test
xor
cmovle
in
mov
cmp
addb
test
adc
lret
jbe
pop
jge
and
push
cmp
fs
scas
ficomps
mov
outsb
call
rclb
xchg
cmp
addb
or
mov
sub
add
data16
fisubl
fcomps
iret
sbb
mov
xchg
sbb
pop
pop
mov
xchg
cmpsl
fmulp
jae
rcll
push
aaa
pusha
pop
movsb
testb
addr16
jae
push
mov
pop
jns
adc
orl
jns
inc
ret
fcmovnbe
dec
adc
inc
dec
bound
test
or
push
push
pop
or
call
lcall
cwtl
clc
imul
cmp
stos
es
sbb
sub
push
dec
dec
push
sbb
aad
rcrl
jae
push
fstpl
pop
cmpsl
xor
aaa
and
inc
arpl
mov
xchg
loop
addr16
add
and
rolb
jb
enter
mov
mov
xor
push
outsb
test
sbb
jge
iret
sarl
sbb
enter
popw
jb
aaa
cli
xchg
into
cli
daa
int
nop
and
hlt
rol
xor
inc
sub
dec
lds
jmp
mov
pushf
pushf
jnp
pop
jb
lea
inc
dec
jge
inc
sub
sbb
xor
jecxz
sub
lds
sub
sarb
mov
inc
cwtl
cmp
aas
ja
addr16
push
xor
aaa
cmc
into
cmpsl
jg
and
mov
push
into
insl
dec
sbb
and
ds
inc
test
or
adc
sbb
inc
cmpsb
cmp
frstor
jp
ss
stos
aam
adc
imul
mov
mov
jnp
xchg
mov
dec
ja
ret
testl
cmp
pop
xor
mov
dec
cmpsb
xor
cmp
div
imul
repz
addr16
jb
adc
jns
xor
pop
pop
ret
test
insl
fbld
inc
pop
clc
push
pusha
sub
mov
stos
cld
or
adc
in
dec
mov
arpl
cs
dec
xor
xchg
bound
movsb
xchg
test
clc
xchg
cs
sarl
xlat
mov
shlb
mov
mov
in
push
push
mov
xor
add
cmpsb
test
fsts
fwait
sar
test
cmp
cltd
stos
sbbl
xor
imul
fdivs
sbb
in
sbb
mov
inc
mov
out
hlt
mov
out
mov
inc
adc
loopne
mov
xchg
data16
and
mov
movsl
jo
aad
mov
mov
fiadds
sub
mov
dec
pop
xor
js
mov
mov
js
push
push
andb
jnp
ds
xorl
negb
add
mov
jno
cmpsb
popf
aaa
aam
mov
das
adc
xor
inc
mov
test
pop
xor
into
push
out
cmc
int3
lcall
jno
push
lcall
out
outsl
neg
fmull
enter
mov
xchg
insb
mov
daa
cmp
ljmp
jne
orb
fcmovbe
or
addl
inc
inc
movsb
scas
mov
xor
inc
cmp
fs
cmp
or
xchg
int3
sti
cmp
mov
cmpsb
mov
pop
ljmp
and
or
in
pop
popf
test
push
mov
sbb
outsb
pop
cmp
rcrb
inc
clc
xor
sbb
jno
int3
xchg
pop
mov
mov
pop
inc
pop
mov
and
fsubrl
dec
mov
pop
lahf
inc
std
and
jge
movsb
sarb
frstor
adc
ss
mov
aad
dec
notb
push
repz
xchg
jb
lcall
and
cmp
or
add
push
xor
call
lret
dec
test
iret
pop
or
mov
repnz
imul
arpl
fdivrl
dec
and
xchg
mov
xchg
cmp
push
hlt
push
call
in
inc
add
pop
call
mov
icebp
xor
leave
into
push
xor
pop
imul
out
loop
pop
pop
ret
sub
fs
xor
inc
in
aas
or
add
mov
jnp
test
lcall
push
gs
xchg
sarl
and
mov
jle
in
cmp
hlt
mov
mov
push
inc
jo
mov
jle
loope
dec
mov
cmp
ds
lods
dec
gs
xor
add
xchg
lods
push
sub
fstpl
nop
dec
mov
jmp
test
test
dec
jo
xchg
fidivs
mov
fcoms
cmp
aas
pop
scas
jle
ficompl
out
call
sbb
fidivrs
push
or
cmove
sbb
cmp
mov
rclb
imul
inc
movsb
lea
sub
in
push
add
subb
sub
adc
sub
int3
inc
jmp
adc
xor
mov
and
inc
sbb
insl
dec
les
aam
in
xor
out
fnstcw
xor
jns
xchg
mov
repz
or
push
sub
scas
int
jmp
stos
mov
mov
pusha
ljmp
fsubs
adc
jl
xchg
jp
hlt
sub
frstor
jns
and
es
jle
imul
mov
mov
test
shll
sbb
hlt
inc
mov
jle
xchg
mov
and
repz
pop
add
jge
add
adc
push
addl
movsl
daa
rcrb
sbb
pop
sarl
mov
jmp
js
loop
inc
xchg
push
jo
in
xchg
adc
movsb
movsb
pop
lds
stos
bound
test
mov
cmpb
xchg
bound
fs
mov
pop
cmp
sub
test
dec
mov
int3
shl
sbb
ffree
fstpl
mov
mov
inc
mov
repnz
adc
ljmp
out
adc
stos
pop
loope
and
sbb
icebp
pop
fbstp
mov
aam
pop
adc
stc
mov
call
mov
xchg
jae
xor
xor
jno
cmpl
jmp
insb
lods
out
pop
daa
xorb
stos
cmc
adc
add
lret
sub
pop
enter
sbb
into
mov
stos
sbbl
icebp
ret
in
std
lea
lods
test
icebp
in
loope
dec
cs
cli
inc
dec
or
fnsave
int
inc
cmp
mov
add
gs
push
flds
adc
cmpsl
std
sbb
push
jg
jmp
popf
stos
and
sbb
lods
and
jmp
stc
aaa
scas
pop
mov
and
push
int3
pop
xchg
jb
xchg
inc
pop
add
jmp
push
push
pop
pop
mov
cmp
js
loop
and
inc
lods
lret
sub
aas
fdivrs
push
mov
aas
pop
add
jnp
iret
adc
lea
ja
jle
cmp
push
leave
jp
jmp
div
inc
ret
sahf
movsl
test
cmp
sbb
mov
andb
xor
dec
jmp
xchg
push
es
ja
scas
dec
ficompl
int
arpl
xor
xchg
shll
das
inc
test
pop
fwait
in
dec
xchg
mov
mov
ljmp
push
dec
push
in
jge
imul
xchg
add
xchg
popf
mov
enter
enter
ja
push
fisubs
dec
pop
inc
test
add
and
jge
adc
lds
and
lcall
or
ret
lds
mov
imul
cmpsl
outsb
xor
jg
add
mov
sbb
xchg
or
sbb
jne
movsb
ret
xchg
mov
xor
cld
in
add
in
mov
sub
sbb
sarl
hlt
test
mul
mov
stos
mov
push
jge
stos
or
fiadds
movsb
mov
cmpb
jp
outsl
add
js
loope
movsl
jmp
jmp
dec
pop
test
push
jecxz
push
aad
shrl
subb
sbb
pop
orl
loope
mov
xchg
ds
iret
or
mov
sbb
inc
cmc
dec
mov
dec
sbb
lods
imul
cmp
fwait
mov
mov
dec
pushf
xchg
cld
mov
jae
inc
xor
sbb
sub
and
test
and
out
pop
adc
out
sub
jmp
xlat
cmp
punpckhbw
mov
aaa
pop
mov
repz
inc
imul
jne
scas
jl
xor
sbb
sbb
pop
xchg
lret
push
or
jmp
outsl
mov
aam
cmp
repz
mov
cmp
insb
iret
add
lcall
loop
in
push
enter
cs
imul
and
aad
sub
sbb
dec
out
mov
lods
rcr
or
mov
pop
push
push
pop
scas
in
lea
ret
xlat
adc
mov
mov
inc
cmpsl
sahf
aas
test
mov
push
adc
sub
ficomps
movsb
mov
fsubrp
gs
pop
dec
cmp
sub
pop
or
push
fwait
push
jne
mov
pusha
subb
rorl
int
jge
mov
push
outsb
in
test
mov
hlt
scas
lods
pop
pop
int3
lods
addl
loope
xor
mov
jmp
jg
or
ret
add
out
add
inc
xchg
lahf
jno
inc
out
xchg
outsb
inc
xor
mov
fmull
bound
clc
rcl
cmp
bound
sbb
mov
push
imul
int
jo
and
jbe
int
imul
bound
dec
les
testb
nop
jae
jmp
sti
sbb
mov
shll
and
mov
pop
nop
rcrl
scas
ja
cmp
mov
add
out
enter
push
pop
cmp
js
cmc
aad
cli
mov
test
outsl
add
insb
movsb
stos
push
push
and
jg
mov
gs
inc
out
xlat
pop
in
inc
insl
adc
mov
push
push
inc
sbb
out
push
dec
ss
movsl
mov
add
add
cmpsb
shlb
jge
dec
xchg
sbb
jb
hlt
dec
adc
and
xor
cmp
sbb
lods
xor
cs
fsubl
sti
mov
inc
push
xchg
icebp
xchg
jb
push
jbe
imul
cmp
mov
push
shrl
icebp
dec
sub
adc
push
stos
add
adc
inc
sbb
or
lods
clts
ljmp
add
adc
std
add
xorb
sub
cs
jecxz
clc
push
clc
call
leave
fstp
push
out
cmpsl
stos
xchg
jg
dec
cld
lahf
ret
cmp
cld
arpl
push
cmp
xorb
arpl
clc
cmp
and
je
ja
pop
sbb
sub
mov
aaa
inc
mov
jl
xor
adc
pushf
insl
inc
mov
fwait
shrl
sub
jge
cmp
mov
lahf
mov
mov
and
aam
mulb
in
xor
dec
push
aaa
scas
or
ja
jl
call
mov
lcall
add
push
mov
ljmp
xor
xchg
das
notb
stos
test
xchg
repnz
mov
or
subl
imull
daa
or
vphaddubw
lods
nop
fimull
adc
inc
dec
xchg
cmp
enter
jp
jb
mov
adc
mov
inc
sti
stc
ret
sbb
lock
sti
test
prefetch
leave
pop
nop
out
jbe
inc
pop
mov
sub
enter
jl
hlt
adc
pop
pop
movsl
lods
das
cmpsb
xchg
bound
test
jmp
pop
loopne
add
lds
iret
loop
xchg
or
inc
adc
mov
fdivr
adc
sbb
sbb
mov
inc
call
dec
mov
mov
xchg
scas
fildl
fcoms
and
adc
xchg
out
mov
aam
inc
sbb
xor
gs
mov
jcxz
or
inc
adc
fdivs
loope
and
inc
xchg
ret
sub
jno
sbb
ja
mov
cld
sbbb
adc
xlat
mov
pop
jo
stos
push
inc
sahf
add
jns
repz
mov
mov
dec
inc
mov
in
icebp
lds
pop
aam
nop
ja
sub
push
add
push
add
jo
mov
pop
int
lds
iret
jae
int
mov
xor
xor
sbb
xchg
inc
scas
xor
push
jecxz
add
mov
push
pop
jbe
mov
out
incl
adc
xor
pop
add
dec
test
mov
mov
dec
imul
inc
jno
inc
fsub
and
ret
loope
in
xchg
arpl
outsl
out
in
mov
fcomps
jb
mov
in
xchg
add
or
adc
pop
fisttpll
lahf
dec
dec
cmpsl
sub
or
xor
stos
push
jo
outsl
int
xor
xlat
dec
out
outsl
lods
lock
out
testb
std
jae,pt
shlb
and
mov
jmp
jo
call
xchg
mov
lds
ret
jmp
iret
mov
push
int
pop
mov
mov
cltd
xor
xchg
cmp
cld
fwait
cld
mov
mov
xchg
mov
jmp
push
adc
add
mov
faddl
fiadds
leave
add
iret
mov
lcall
ret
sbb
inc
leave
in
imul
sahf
sbb
arpl
sbb
cwtl
sub
xlat
xchg
shrl
clc
into
xor
xchg
mov
or
xchg
sbb
lds
xor
packssdw
inc
js
fisttpl
mov
jge
jp
cmp
adc
inc
fdivs
mov
mov
out
test
loop
mov
and
jae
icebp
sbb
inc
std
xor
mov
mov
movsl
imul
inc
mov
fcompl
lods
daa
mov
jo
imul
push
lret
sub
out
jge
call
pop
aad
cmp
jne
mov
jl
adc
sbb
rol
pop
aas
in
dec
test
jecxz
enter
clc
cmp
mov
nop
mov
fmull
jmp
inc
pop
stos
insl
out
pop
pop
xchg
jnp
test
jle
and
leave
lret
popf
aaa
cltd
rorb
aas
pushf
pushf
pop
lret
sbb
out
pushf
testb
in
ret
and
mov
fcompl
stos
sub
fcomi
xchg
data16
push
sub
popf
cmp
push
sbbl
nop
dec
cmp
cmp
jnp
pop
outsl
mov
mov
test
test
iret
popa
movl
sub
addr16
or
xor
loop
xor
mov
sub
add
shrb
push
and
mov
ja
dec
xlat
and
sbb
add
shrl
adc
mov
ret
mov
test
addr16
add
push
hlt
fidivrs
scas
jle
cmp
cmpb
fisttps
pop
sbb
fmull
sti
std
ret
pop
or
or
add
inc
or
adc
test
inc
mov
or
xchg
xor
adc
out
dec
mov
into
out
sbbb
fdivl
outsb
xor
inc
or
movsb
mov
jbe
mov
jp
mov
mov
sub
xor
inc
jp
dec
lahf
arpl
jns
push
dec
imul
sbb
dec
adc
xor
or
push
lods
daa
cld
hlt
or
stc
jnp
xchg
add
mov
cli
int3
ret
inc
mov
rcrl
mov
cmpsb
sub
pusha
sbbl
stc
enter
shll
mov
ja
ljmp
shll
stos
clc
nop
pop
cld
lds
lock
out
adc
pop
mov
js
adcb
shrb
xor
inc
fistl
xchg
xchg
and
fucom
inc
aaa
add
dec
in
add
out
stc
add
fwait
test
sub
test
lcall
mov
mov
cmc
std
add
pop
or
mov
outsl
inc
ret
inc
sub
lcall
mov
loope
mov
jl
inc
cmp
mov
je
inc
and
fsubs
mov
cld
pop
jmp
sub
hlt
or
call
popa
std
in
into
and
jno
push
sub
push
nop
push
pop
push
inc
adc
lcall
cmc
xchg
in
jp
leave
jno
lea
xchg
sti
nop
inc
mov
push
hlt
std
pop
mov
xchg
pop
mov
mov
adc
repnz
outsb
inc
mov
push
ror
sub
xchg
dec
int
add
push
pusha
mov
daa
adc
aaa
add
ds
bound
pop
mov
jmp
mov
push
lods
outsb
jno
sbb
jno
push
mov
xor
xchg
add
inc
jp
lahf
lret
ja
and
lahf
iret
xchg
jl,pt
sub
jo
popa
arpl
pop
add
pop
sub
inc
gs
sub
nop
inc
mov
popa
js
lret
add
adc
imul
or
cmc
out
std
sbb
push
add
mov
mov
roll
mov
jno
int3
cltd
cltd
and
and
cmpsb
movsb
pop
sub
out
xchg
jecxz
xchg
clc
pop
aaa
aad
mov
mov
lahf
dec
jp
xchg
ret
daa
xchg
in
inc
push
dec
push
xchg
fisttpll
xchg
fldl
sbb
in
imul
and
movsl
push
inc
cmp
in
cmpsl
insb
mov
fbld
sub
jg
push
lds
jnp
push
adc
cmpsb
fldenv
imul
push
mov
and
clc
jns
mov
xchg
cltd
ljmp
inc
pusha
mov
jnp
popf
inc
outsb
xchg
fcoml
shl
xor
push
dec
or
mov
xlat
or
dec
shlb
cmp
sub
hlt
das
mov
xchg
xchg
mov
and
lret
sub
or
ljmp
rcrb
loopne
negl
es
xor
jne
xchg
adc
stos
fistl
repnz
jae
mov
out
rcrl
jmp
jbe
mov
call
data16
movsl
xchg
sahf
push
iret
push
aam
or
sub
sub
mov
pop
shrl
cmpsb
idivl
negb
cmpl
mov
clc
push
or
sbbb
jno
das
insl
sub
dec
cmp
jno
out
cmp
repnz
fldcw
xchg
lcall
or
inc
mov
je
in
inc
push
mov
data16
je
mov
call
fidivrs
ljmp
sbb
cmpsb
imul
fimull
jnp
lock
cmp
in
pop
call
push
xor
sub
out
inc
sub
push
xchg
scas
sub
idivl
xorb
xchg
xor
in
sbb
dec
into
pop
das
xchg
inc
andb
call
and
pop
xchg
xlat
sbb
mov
mov
xchg
jmp
cli
cmp
es
sahf
imul
sbb
decb
lret
or
lea
sub
jle
xchg
sbb
push
dec
dec
pop
test
adc
lea
inc
fcmovbe
push
leave
movsl
lods
sub
sbb
xchg
mov
cmpsb
rcrb
test
pusha
cld
or
xchg
fiadds
xchg
mov
sub
sub
push
mov
xor
pop
mov
pop
pop
xchg
ds
das
mov
pop
push
outsl
mov
fcmovnbe
scas
xchg
mov
es
dec
rcr
and
xchg
mov
mov
and
inc
dec
push
lea
repz
aad
arpl
adc
scas
sub
imul
test
inc
repnz
or
lcall
inc
jnp
lods
les
shlb
push
ds
jl
dec
int3
xor
pop
mov
sbbb
push
lret
addl
xor
stos
std
pop
or
hlt
lcall
inc
nop
sbb
pop
loopne
fdivrs
adc
sub
adc
lods
lea
xchg
or
cmp
mov
mov
push
aam
jo
sbb
jecxz
negl
cmp
xor
inc
cli
xchg
mov
arpl
lods
xchg
push
cmc
pop
outsb
test
mov
lods
xchg
mov
loopne
inc
test
rclb
dec
mov
ljmp
mov
mov
mov
inc
cwtl
jg
xchg
pushf
add
fwait
dec
mov
xlat
fistpl
mov
into
hlt
jns
mov
pop
outsl
or
xchg
sbb
and
push
pop
jno
add
notb
mov
out
jns
jg
and
icebp
test
test
outsb
dec
fmulp
loopne
push
fstpt
jnp
pop
aaa
imul
scas
pop
lret
shrb
pop
test
xor
loope
sti
orb
push
mov
ja
popa
cmp
jg
cmp
testl
pop
lods
movsb
jno
stos
roll
addps
xor
jns
sbb
pop
inc
lds
dec
fimuls
bound
in
out
xorb
jge
pop
or
rcrb
sbb
scas
push
fistps
cld
push
xlat
divb
add
mov
repnz
pop
xor
stc
stos
xchg
pop
cmp
pop
imul
mov
jnp
push
sub
and
mov
pop
bound
ret
jle
sbb
xchg
test
pop
std
push
xor
dec
adc
js
pop
push
loopne
out
sahf
mov
xchg
fs
xchg
nop
dec
out
fisttpll
subb
mov
mov
add
andb
jge
mov
mov
dec
push
adc
sti
out
sbbl
jmp
dec
dec
mov
jecxz
mov
test
pushf
rcll
fld
mov
mov
dec
das
fistpl
js
jns
and
popa
or
in
push
cmp
arpl
add
jmp
sub
or
daa
out
xor
into
xchg
dec
dec
push
mov
xor
je
jnp
jbe
cmp
in
in
dec
pop
jle
jno
pop
or
aaa
hlt
lds
cmp
lds
jbe
popf
popf
stos
mov
mov
imul
dec
les
xorl
insb
pop
push
in
push
mov
lock
popf
fistps
cwtl
testb
sbbb
xchg
mov
cs
imul
loop
and
lds
mov
cmp
mov
insb
or
outsb
and
lods
xor
data16
mov
xchg
repz
inc
aad
pop
push
mov
jge
push
or
int
les
data16
in
leave
rcrb
cmp
xchg
mov
xchg
push
add
fildl
mov
loop
sub
inc
dec
das
aaa
in
xchg
pop
jle
xor
cld
dec
mov
pop
push
mov
imul
ficomps
push
ret
push
call
xchg
and
xchg
in
bound
in
loope
jbe
adc
push
sbb
sbb
add
rcr
sti
xor
mov
and
push
lret
adc
les
pop
mov
psubusw
out
lock
add
adc
mov
pop
nop
cmpsl
addr16
inc
orl
in
jecxz
ja
fwait
and
dec
shrb
push
jg
aas
inc
shlb
push
enter
inc
outsl
xchg
cwtl
adc
fdivs
adc
out
stos
stos
or
bound
inc
cmp
inc
cmpsb
inc
jg
ss
mov
mov
mov
mov
call
xchg
mov
add
lret
dec
call
dec
out
mov
popa
in
stos
push
push
adc
pop
xchg
or
jg
lcall
iret
mov
arpl
push
lret
jmp
iret
fidivl
ret
xchg
mov
mov
repz
scas
and
repz
xchg
dec
adc
cmp
fxch
mov
rol
xchg
cld
mov
and
testb
outsb
dec
clc
jecxz
push
mov
jp
xlat
cs
and
call
lea
push
movsb
idivl
and
cmp
xchg
jp
push
and
mov
pop
jo
dec
cmpsl
sub
mov
jae
add
test
mov
out
push
or
xor
rcrl
sti
mov
mov
cmp
insb
pop
xor
push
pop
dec
pop
into
daa
ss
and
sbb
test
sbb
jo
les
inc
les
stc
decl
or
xchg
aaa
add
repz
ficoms
arpl
or
xchg
jo
adc
ds
lods
xchg
in
inc
adc
mov
xor
mov
sub
sbb
repnz
push
mov
aas
mov
cltd
push
dec
fimull
pop
and
stos
popa
adcl
lods
xchg
xchg
sti
jb
imul
in
les
pop
pushf
scas
loopne
inc
stos
push
inc
aas
rol
sub
cmp
inc
fs
sarl
aam
jg
cs
cld
dec
test
or
dec
xchg
aam
idivb
pop
in
and
push
jg
andb
lock
xor
test
iret
fnstenv
and
sbb
stos
push
test
xchg
jae
lret
inc
shlb
fdivr
cwtl
xchg
dec
fwait
sahf
test
jnp
pop
test
mov
fwait
xchg
cmp
int3
mov
shrl
sbb
jp
shlb
mov
sbb
mov
pop
xor
filds
outsb
test
inc
inc
mov
jmp
mov
popa
cmp
push
icebp
pushf
outsb
sbb
cmp
jbe
clc
jae
sub
pop
test
xor
aad
loopne
mov
aaa
add
sub
in
add
fdivl
pusha
sub
das
xchg
popf
andl
ret
ret
mov
mov
mov
mov
icebp
jecxz
dec
fcomps
or
jbe
add
shlb
aad
lea
jge
mov
lock
test
aas
sbb
sti
push
ja
sbb
out
gs
mov
push
inc
in
sbb
push
jbe
pusha
mov
shrl
pop
mov
addr16
into
add
xchg
pop
mov
enter
or
sub
xchg
es
das
push
aaa
dec
jbe
mov
pop
jp
daa
test
outsl
shlb
repz
mov
rdmsr
or
sub
fsts
xchg
je
enter
mov
sub
lock
jnp
bound
icebp
sub
pusha
mov
jg
bound
push
cmp
jo
out
cmp
fidivs
push
sbb
repz
jp
jg
test
xor
mov
imul
add
pop
and
cmc
sbb
xor
and
in
push
jne
lods
shrb
and
and
add
ret
pop
jg,pn
mov
xchg
nop
push
aas
loope
daa
ljmp
popa
inc
in
adcl
pop
or
daa
fwait
loop
xor
mov
jp
inc
cmp
in
cmpl
xchg
sub
test
adc
rcrb
mov
jbe
rolb
mov
mov
add
push
sub
cmpb
xchg
xor
ss
mov
clc
dec
sbb
sub
push
inc
gs
push
or
cmp
stos
dec
js
loop
dec
daa
pop
div
scas
lcall
push
out
inc
pop
out
jbe
nop
jmp
pop
sbb
pusha
adc
cwtl
clc
lds
in
xchg
lds
pusha
es
and
sub
ret
mov
xor
jecxz
mov
testl
mov
cmp
gs
mov
cmpsl
sbb
mov
xlat
mul
mov
mov
dec
in
push
jge
bound
push
jbe
dec
add
sub
sub
cli
or
clc
adc
sub
push
cwtl
mov
imul
mov
out
rcr
push
inc
lcall
mov
out
mov
dec
push
inc
cmp
movsl
jmp
mov
sub
or
jecxz
pushf
cltd
ds
out
cmp
outsl
xchg
xchg
cmp
xchg
jle
mov
lret
adc
adc
lock
daa
dec
or
push
fnsave
sti
fnstenv
fstpt
fwait
fs
lock
adc
xchg
cmp
sub
push
mov
lahf
cs
lret
xchg
mov
sbb
sbb
ret
xor
mov
out
aaa
cvtpi2ps
scas
mov
add
or
sbb
loopne
pop
xor
dec
mov
xor
ljmp
in
pop
mov
hlt
pop
mov
ja
loop
das
std
cmp
inc
fsubrs
adc
inc
test
lea
push
add
jle
fisttpll
pop
and
movsb
loopne
sub
sub
mov
cmp
pop
orl
stc
xor
testb
ds
xor
pop
outsb
imul
sbb
mov
xchg
mov
into
das
sub
in
mov
icebp
inc
mov
dec
push
and
shll
leave
into
mov
cwtl
into
cli
outsl
repz
or
nop
add
dec
adc
bound
sti
mov
int3
aas
xor
cmp
xchg
sahf
ret
pusha
adc
and
or
push
fisubrs
cli
sahf
fnstcw
ret
xorl
fwait
movsl
dec
out
mov
cmp
jg
push
jbe
pop
xlat
push
shl
xor
lahf
jmp
out
repz
ss
incb
push
popf
push
hlt
push
insb
push
adc
pop
leave
mov
insl
decl
adc
jmp
mov
xchg
out
push
aam
cmp
sbb
pusha
imul
xor
or
dec
xchg
mov
and
jle
xorb
sbb
push
cwtl
shll
scas
popf
jnp
aas
fwait
mov
out
mov
fsub
adc
add
or
pop
test
lds
cmp
xchg
pop
lods
xchg
xor
mov
clc
jae
mov
mov
test
mov
std
sub
cmp
pushf
cmpsl
cli
fwait
and
add
add
inc
pop
pop
mov
iret
inc
dec
push
inc
ja
xchg
sbb
cmp
aad
sbb
dec
fisttps
push
arpl
jae
lfs
sbb
mov
cmpsl
add
call
cmp
imul
add
cs
push
call
shll
nop
mov
mov
adc
xchg
fldt
pop
aad
pop
xorl
pop
xor
and
xor
push
inc
lcall
fdivrp
hlt
or
mov
and
mov
push
fsts
mov
pop
dec
imul
subb
jle
xchg
popf
sub
dec
sub
stos
inc
pop
pop
sbb
pop
scas
test
cmpsb
mov
int
ret
sub
repz
push
insb
arpl
leave
xor
fldt
stos
into
push
in
sub
cltd
in
loop
imul
add
jno
push
pop
imul
mov
cld
push
or
lock
jo
ja
test
jnp
mov
addr16
cli
xor
mov
pop
adc
sub
lods
sbb
lcall
pop
mov
popa
mov
bound
xchg
movsb
sbb
push
add
pop
cmp
xchg
pushf
dec
outsl
pop
push
test
call
stos
js
mov
lds
fistpl
enter
stos
ss
inc
es
cs
jns
lock
call
sti
dec
adc
dec
movsb
leave
pop
jnp
adc
adc
dec
shrb
xor
out
lds
xchg
stc
scas
and
push
add
add
push
xor
fcomps
clc
and
sbb
mov
cli
test
inc
fwait
mov
mov
leave
push
andb
cmpsb
test
or
push
inc
aaa
adc
cs
pop
jno
mov
enter
xor
bound
rcrl
jg
mov
and
jns
xor
hlt
mov
xor
push
add
or
or
xor
cmp
cmc
mov
jg
add
push
or
jns
rol
pop
sbb
mov
push
push
data16
fistps
imul
mov
jns
adcl
enter
or
push
fisubrl
push
and
xor
movsb
or
xor
and
push
adc
and
call
sub
rep
mov
xchg
ds
lahf
mov
inc
repnz
jecxz
les
test
insb
inc
or
addl
add
mov
lds
mov
imul
adc
xchg
adc
fs
stos
je
mov
into
or
add
daa
imul
repnz
pop
pop
repz
mov
scas
scas
sbb
cwtl
push
pushf
cmp
pop
and
mov
xchg
jns
lods
jnp
jmp
inc
fdivr
ljmp
push
js
adc
lret
repnz
shlb
aas
mov
ds
mov
sub
push
cltd
addl
sbbb
dec
and
sbb
adc
or
mov
mov
mov
cmp
push
mov
dec
and
xchg
jbe
sbb
data16
cmp
enter
stc
orb
push
jb
adcl
jbe
xchg
inc
adc
xor
shlb
mov
add
in
or
repz
inc
aam
iret
sbb
das
jge
push
pop
daa
cwtl
outsl
mov
jno
cmc
sbb
daa
shll
cmpsb
arpl
sub
add
and
mov
xchg
outsb
daa
in
sub
fisubrl
or
movsb
out
call
push
mov
inc
fmul
stos
int
pop
repz
sub
mov
cmp
pusha
and
lds
jno
out
push
jns
jo
lcall
stc
out
add
repnz
adc
mov
je
mov
adcl
adc
movsl
out
mov
lret
into
mov
pop
insb
pop
dec
sbb
adc
fucomip
jg
adc
xchg
mov
xor
pop
mov
xchg
cltd
nop
insl
cmpsb
je
flds
imul
out
adc
test
pushf
mov
jecxz
lahf
cmpsl
xor
flds
xchg
inc
jl
mov
add
jb
arpl
loop
test
jmp
sbb
icebp
or
pop
cld
cmpsl
adc
cmpsb
scas
xor
test
jno
pop
stos
push
out
mov
out
mov
jae
ror
addr16
fadd
hlt
pop
sarb
push
xchg
push
inc
or
mov
fisubs
test
mov
push
sbb
mov
push
cmp
leave
mov
es
mov
dec
jmp
ret
divb
scas
mov
push
push
sub
dec
repz
inc
pop
xcrypt-ctr
cmpsl
push
dec
jge
and
sub
popf
sub
cmc
movsl
pop
imul
dec
outsb
pop
and
jl
jno
stc
not
loopne
or
adc
aaa
movsl
outsl
push
out
rcll
leave
popl
jle
or
inc
rorb
lcall
in
mov
cmpl
sti
mov
and
fildll
mov
pop
stos
lea
ja
loope
je
jl
popf
sbb
or
cmpb
js
into
lods
sub
imul
mov
pop
and
jg
lds
mov
lret
hlt
adc
inc
pusha
fildl
les
loopne
aad
push
std
mov
in
es
insb
sbb
mov
imul
push
scas
mov
xlat
loop
mov
call
mov
xor
push
inc
imul
xchg
xor
addb
mov
cmc
iret
and
mov
in
arpl
xchg
dec
ret
and
imul
fcomi
scas
jae
ljmp
jno
ja
dec
push
sub
cmc
sub
lea
lock
sbb
mulb
xor
iret
push
xchg
push
cwtl
sarb
mov
loope
adc
cli
mov
cmp
aad
sbb
and
in
inc
je
imul
scas
push
sti
dec
pop
xchg
ja
add
inc
dec
mov
cmpsl
fidivl
mov
push
out
sub
dec
lea
int3
xlat
jecxz
not
adc
sub
push
mov
sub
gs
inc
jg
or
xchg
mov
data16
or
push
cli
roll
or
mov
loop
xchg
insb
rclb
pushf
fwait
sub
dec
fisubs
pop
movsb
jecxz
jle
push
mov
mov
jne
cltd
lfs
pop
mov
and
dec
jne
cmp
cmp
inc
dec
cmp
mov
outsb
lds
aam
mov
insb
out
mov
shl
sbb
inc
sub
pop
mov
add
or
cmp
cmp
lret
lods
adc
sbb
stos
inc
je
call
push
imul
adc
pop
movsb
xchg
loope
add
mov
cltd
out
lods
insl
push
cmp
dec
sbb
lahf
xchg
cmp
cmc
ss
push
sbb
xor
adc
and
mov
or
daa
scas
test
mov
aad
mov
loop
lahf
mov
mov
xor
cld
loop
scas
cltd
xchg
cs
adcb
imul
sbb
jge
sti
bound
and
rclb
daa
push
lret
mov
out
shlb
shl
mov
movsl
cmp
push
push
addr16
scas
fimuls
cmp
std
mov
popa
cmp
adc
sahf
push
mov
or
int
push
and
je
fadds
mov
lea
in
fsubr
xchg
out
movsl
xlat
fwait
xor
jmp
js,pt
out
xchg
dec
incb
jl
and
pop
push
cmp
lcall
je
addl
daa
lods
pop
gs
ret
adc
and
fsubs
pop
push
cmpsl
sarb
sub
aaa
popf
inc
dec
scas
cld
inc
push
and
mov
mov
js
lcall
lcall
shr
or
sti
push
lcall
loopne
out
and
jbe
cmp
or
mov
dec
dec
cmp
data16
outsb
and
mov
cmp
clc
or
sbb
or
mov
jp
push
sti
push
dec
insb
pop
stos
loop
pop
push
gs
fwait
cmpsb
ljmp
and
xchg
push
inc
adc
dec
mov
int
in
aam
push
pop
mov
shrl
notl
xchg
pop
inc
mov
inc
fldt
jge
pop
mov
push
jnp
xchg
jbe
js
mov
xchg
mov
out
int3
mov
sub
fnstsw
fnstsw
lret
mov
add
es
shll
cmpsb
jp
and
loop
lret
cmp
mov
leave
mov
dec
mov
popa
ja
adc
sub
mov
jo
push
mov
dec
sbb
mov
push
ret
mov
das
test
mov
outsb
cmpl
sub
jl
fcmovu
scas
ljmp
loopne
sbb
jno
jp
cmp
int3
les
loopne
sbb
mov
cmp
xchg
movsl
pusha
in
and
push
push
mov
fs
mov
aam
or
adc
lods
pop
jle
push
aam
jl
mov
sbb
xor
xchg
lcall
rcrl
push
mov
aad
pop
call
aas
lock
push
and
into
hlt
rcrl
xchg
je
ret
lahf
jbe
pop
inc
inc
das
pop
sub
gs
sub
jl
aaa
outsb
mov
sbb
push
aaa
mov
sub
stos
sbb
mov
ror
rcrl
roll
hlt
das
add
enter
cmp
cmp
adc
mov
sbb
mov
jno
orb
cmc
pop
xorb
test
dec
out
movsl
out
in
in
das
inc
js
jg
aas
push
call
fstp
ds
and
inc
mov
jns
dec
dec
and
stc
or
loope
stos
imul
add
test
int3
popa
stos
xlat
xchg
mov
mov
test
push
or
shrb
push
push
or
push
cmp
push
sub
mov
sbb
out
and
shlb
cmc
and
jb
stos
xor
or
inc
jecxz
jl
pop
jns
jne
or
push
aaa
outsb
adc
sbb
aad
sbb
fmull
push
test
mov
and
add
clc
jns
cmp
pop
adc
stos
mov
xchg
shlb
mov
fnsave
push
xchg
cmpl
popf
pop
jecxz
mov
scas
pop
push
mov
adc
jnp
in
rol
sarb
sbb
jmp
and
jb
outsb
imul
mov
mov
icebp
mov
xchg
imul
xor
adc
xor
push
pusha
dec
inc
fisubl
jne
xor
insb
xor
jae
in
mov
mov
aad
jecxz
loopne
inc
into
adc
pusha
fwait
hlt
bound
xchg
mov
or
push
sub
lret
setg
mov
mov
or
aam
lods
pop
enter
sbb
into
push
arpl
inc
or
and
ds
mov
push
push
jae
adc
stos
sbb
test
js
add
ja
push
mov
cltd
lret
cmpsl
inc
mov
push
adc
je
mov
setnp
mov
fwait
jns
rcrb
int
add
andl
jge
ret
lret
arpl
notb
push
pop
fisttpl
xchg
lret
cmp
addb
kxnorb
outsl
mov
sub
mov
jmp
and
jb
inc
xchg
std
addr16
adcl
mov
loopne
inc
cmp
jp
fistpll
rorb
mov
lret
pop
jp
subl
cmp
fs
int
rolb
icebp
call
xchg
repnz
lahf
loope
sahf
inc
xchg
aas
inc
in
loopne
mul
push
lock
test
stc
in
sarl
insb
pop
add
push
testl
xchg
ljmp
jo
int
lods
out
call
adc
push
loopnew
les
insl
mov
pushf
push
inc
inc
insl
les
jge
push
mov
stc
dec
jb
cmp
fiadds
mov
stos
inc
push
mov
cmp
movsb
mov
loopne
in
xor
cli
faddl
aas
lea
sbb
loopne
dec
push
mov
es
or
pop
push
jbe
add
out
js
cmp
ljmp
mov
jno
loop
xor
cmpl
pop
cwtl
dec
pop
insl
sbb
lcall
mov
jmp
daa
inc
or
jno
lret
or
icebp
nop
mov
jp
cmp
and
ret
inc
fidivrl
and
cs
or
mov
imul
inc
pop
fcomps
sbb
ret
push
xchg
dec
jne
jb
nop
daa
fmull
jae
pmulhw
aaa
mov
ret
sub
mov
mov
pop
sub
jl
popf
jecxz
xor
adc
push
jno
push
xchg
fcmovbe
xchg
or
jg
into
in
mov
test
sub
push
inc
pushf
sarl
rcrb
jo
jp
xor
or
fldenv
das
enter
aam
jae
ret
lret
pop
cmpsl
or
add
repnz
sub
jbe
add
add
and
sub
fwait
xlat
cwtl
xor
lods
das
fnstsw
repz
mov
or
sub
pop
and
or
jae
add
cli
stos
xchg
shll
pop
cmc
test
movsl
sbbb
icebp
je
leave
jle
add
push
lds
leave
xchg
mov
out
push
aaa
ljmp
call
dec
lahf
lods
or
add
insl
lret
and
sub
rorl
inc
rcrl
xor
shl
mov
aaa
imul
jecxz
dec
mov
jg
sub
lret
adc
frstor
pop
sbb
addl
sbb
fmuls
or
gs
cmpsb
jp
pandn
rorb
mov
push
aad
cwtl
add
pop
xchg
dec
mov
cmpsl
test
loopne
sbb
test
lds
xlat
leave
inc
mov
movsb
push
les
call
pop
rolb
or
repnz
mov
mov
inc
cmp
jne
sbb
xchg
sub
rcll
icebp
dec
bound
xchg
adc
xor
clc
jp
mov
outsl
jbe
outsb
cmc
cmpsl
push
loope
mov
and
arpl
xchg
cld
arpl
lret
sub
into
ljmp
fsubl
push
loop
in
or
scas
dec
loope
jnp
mov
std
add
ror
movsl
out
pusha
sub
pop
aad
cld
lods
ja
fdivl
lea
iret
leave
pop
or
lahf
movsb
out
adc
ret
pop
mov
jl
xor
sub
push
out
pusha
inc
and
jge
jmp
enter
sub
mov
add
push
arpl
pop
fildl
outsb
notl
or
iret
adcl
dec
jb
adc
and
ficompl
xor
icebp
aad
repz
add
xchg
fs
cli
imul
inc
pushf
pop
lods
xor
pop
pop
and
out
mov
xchg
mov
xor
in
adcl
std
jnp
pusha
mov
mov
aaa
lret
adc
mov
lea
stos
test
inc
xchg
mov
stos
adc
push
inc
lahf
jo
sarl
ficompl
push
je
sub
test
push
das
test
xor
fidivrl
aam
jns
xchg
mov
xchg
iret
imul
cmp
lods
bound
sub
add
xlat
leave
pop
add
enter
and
shll
test
jl
lock
inc
xchg
lcall
sbb
jecxz
repz
mov
aam
pop
test
xor
jg
inc
add
cmp
pop
fs
or
insl
sbb
mov
jmp
shrl
mov
and
and
test
test
daa
jle
inc
cmp
int3
fisubl
stos
or
or
imul
jae
push
idivb
inc
arpl
mov
mov
xchg
es
inc
adc
pop
or
out
mov
test
jb
ret
aas
aad
cmc
add
mov
mov
enter
cmp
in
mov
mov
fistl
jnp
xlat
inc
sbb
out
xchg
cmpsl
cmpsb
mov
and
bound
sub
mov
xor
test
popa
lret
mov
pop
aas
jne
sub
fwait
jg
push
movsl
fistpl
xlat
test
das
pop
xchg
cmc
dec
jb
cmpsl
sub
pusha
push
stos
cmpsl
add
and
mov
sub
mov
andb
popa
sub
ret
outsb
jecxz
mov
push
xor
ficoml
inc
jp
imulb
das
jnp
sub
sub
pop
dec
fs
sbb
fldcw
clc
mov
dec
mov
mov
cli
jle
out
inc
enter
sub
ret
and
sub
inc
sub
mov
dec
fsub
mov
sub
xlat
rcrl
mov
mov
insl
test
xor
test
call
adc
add
jp
data16
jmp
inc
gs
fcomp
jne
fs
leave
inc
dec
or
arpl
scas
push
sbb
or
jo
jae
and
add
daa
lret
clc
loopne
popl
test
ljmp
mov
mov
mov
les
jecxz
pop
dec
rol
ljmp
adc
mov
repnz
iret
std
daa
sahf
mov
cltd
or
push
xlat
cld
mov
sbb
sbb
jp
outsb
jb
testb
aas
adc
or
aad
ja
aas
mov
aas
fsubs
add
sbb
adc
pop
sub
call
aas
pop
inc
std
out
int3
scas
out
add
out
out
mov
inc
xlat
es
pop
push
push
xor
cmp
mov
les
pop
xor
movsl
jns
mov
mov
or
lret
jge
test
xor
pop
mov
call
xchg
pop
out
mov
ficoml
mov
and
ror
insb
test
adc
xor
pop
movsl
mov
cmp
adc
pop
add
inc
lock
fisttpl
outsl
xchg
enter
out
lods
outsl
aam
mov
fmuls
mov
mov
or
fwait
iret
jne
xorl
mov
ds
jo
cmpsl
or
dec
insl
mov
arpl
ljmp
fsubl
sahf
push
ja
jnp
lds
jne
or
arpl
dec
cs
pop
aad
push
fwait
imull
pushf
hlt
push
movsl
sbb
lretw
mulb
sub
pop
push
push
push
movsb
lret
adc
pusha
aas
lock
sbb
jecxz
test
out
xor
cld
jle
inc
jns
mov
js,pn
mov
pusha
jo
or
inc
aaa
shlb
push
test
dec
jno
sub
and
pop
sbb
cwtl
mov
arpl
and
jl
lcall
push
or
mov
out
andl
jb
mov
jecxz
in
in
mov
lods
sub
sbb
inc
movsb
dec
cmc
push
jae
xchg
subl
xor
cs
jge
or
pop
fldcw
hlt
sub
pop
sbb
cmp
testl
mov
pop
push
sub
faddl
in
xlat
or
mov
dec
mov
adc
dec
sub
int
rcrl
fdivl
sbb
push
js
push
cmp
and
sub
xchg
es
push
std
enter
jmp
jg
in
stc
or
mov
and
xchg
push
fadds
dec
arpl
in
and
bnd
pop
cmp
es
lahf
cld
mov
cmp
icebp
loope
pop
pop
inc
add
inc
inc
lcall
fcmovnbe
lods
and
loop
adc
out
es
inc
push
xor
fisubrl
divb
mov
enter
xchg
scas
mov
fldl
and
pop
mov
or
sbb
stos
mov
or
rcl
movsl
insl
test
fucomi
jns
mov
xchg
dec
jl
adc
dec
or
or
fiadds
test
lret
mov
add
pop
stos
push
aaa
rol
cmpsl
cmp
pop
call
pop
out
add
xchg
and
and
sbb
adc
inc
ret
jle
cs
push
rcll
add
mov
pop
add
out
adc
insl
sbb
sbb
leave
je
ret
xchg
and
call
mov
jmp
stos
fcoms
cmp
push
out
rcl
outsb
adc
push
ss
push
mov
mov
sbb
mov
cmpsl
mov
push
lods
scas
fadds
lret
jmp
lret
out
in
add
rcr
daa
dec
fs
sbb
jne
and
add
lods
in
cmp
cmp
jne
rorb
stos
test
fdivrl
es
fisttpl
xor
xchg
clc
lock
out
inc
lret
inc
mov
outsl
dec
rcll
ret
cltd
cmpsl
idivl
xchg
repnz
nop
jnp
pop
sub
sbb
inc
addb
in
sub
mov
pop
xchg
test
fcoml
cltd
cmp
mov
scas
mov
ja
mov
push
or
dec
std
jecxz
mov
in
jb
lcall
mov
mov
sbbl
js
push
mov
jno
in
sub
cmp
push
shl
hlt
aas
imull
mov
mov
enter
xchg
and
push
movsb
pop
add
jo
shll
pop
adc
or
pop
aam
fcompl
minps
mov
nop
dec
enter
in
mov
leave
cmp
enter
loopne
insl
xor
pop
cmp
push
dec
iret
adc
jo
out
nop
dec
addr16
into
mov
lods
lea
pop
pop
add
mov
in
lahf
in
mov
jecxz
decl
jo
sub
icebp
mov
arpl
popa
lock
aaa
int
inc
dec
lods
lea
imul
dec
iret
adc
add
je
inc
fidivrs
jl
adc
add
subl
mov
mov
loop
and
fdivp
push
dec
stos
pop
dec
fdivrs
in
je
pushf
popf
push
es
xchg
mov
pusha
daa
cmc
xor
and
inc
popl
loop
nop
inc
cmpsl
mov
in
out
sbb
sbb
repz
xor
push
daa
ss
jns
adc
nop
test
and
pop
xchg
loopne
mov
movb
out
aam
cmc
sbb
xchg
out
test
xor
leave
push
xchg
stos
sbb
cmp
bndldx
sub
cld
xchg
sub
adc
test
bound
lret
nop
mov
adc
xchg
and
in
inc
call
stos
jnp
hlt
mov
test
fdivs
inc
xchg
jp
and
fbstp
push
cmpsb
je
pop
cmpsb
adc
imul
iret
scas
mulb
cmp
mov
pop
mov
mov
call
dec
jl
sub
xlat
mov
inc
jge
mov
adc
repnz
push
cmpsl
add
jecxz
xchg
test
jnp
or
mov
sbb
jmp
in
mov
xor
dec
jnp
clc
pop
xorl
data16
fcmovu
fdivs
push
pop
mov
xchg
pushl
enter
out
mov
xor
repnz
adc
pop
faddl
iret
and
lds
js
adc
xor
add
scas
out
stos
xor
sbb
inc
movsb
push
jo
lea
pop
gs
inc
adc
xchg
mov
and
ret
fnsave
xchg
pop
jns
out
js
jl
dec
pop
push
cmpsb
mov
cwtl
mov
mov
int
iret
push
and
je
sbb
cmp
movsl
push
data16
shrl
mov
aas
movsb
jp
jmp
jno
outsl
mov
lret
add
clc
fstps
lods
addr16
sub
push
outsl
jb
lods
xchg
xorps
add
lret
xor
cmp
not
cmpsl
push
xor
incb
mov
rorl
rorb
pop
div
jp
es
js
out
lcall
mov
mov
inc
push
ja
pushf
mov
pop
push
mov
sub
lcall
in
fbld
rclb
pop
and
jae
cmpb
mov
adc
pusha
out
js
fsub
mov
call
xorl
inc
jge
or
mov
adc
fwait
rcr
or
loope
push
sbb
mov
dec
fildll
fdivs
adc
mov
aam
sbbl
or
cwtl
adc
icebp
call
leave
and
mov
xor
aam
mov
movsb
adc
mov
repnz
imul
dec
add
push
ret
inc
jge
cmp
insl
cmp
loop
bound
hlt
adc
or
push
test
add
or
imul
mov
mov
inc
pop
mov
icebp
pushl
dec
test
shlb
pop
cli
add
jp
insb
loope
lahf
nop
scas
daa
test
dec
shlb
shrl
xchg
mov
ret
scas
push
inc
jne,pn
mov
sub
xor
mov
jae
sub
in
lahf
stc
mov
das
adc
lcall
push
sbb
ljmp
sahf
sahf
mov
sub
add
mov
inc
pop
sub
jmp
sbb
insl
sbb
dec
or
stc
lds
lret
lds
cmpsl
mov
imul
jp
xor
lcall
jns
subl
push
cmpl
mov
xchg
cli
sub
and
xor
adc
xchg
in
daa
sbb
mov
sub
jmp
cmp
ja
nop
xchg
mov
pop
fwait
jle
sarb
pusha
js
xor
int
shrb
leave
dec
cmpb
dec
scas
xchg
xor
in
movsb
push
mov
mov
insl
lcall
mov
and
repz
cli
sbb
test
dec
or
add
cmp
jnp
mov
or
adc
ret
cmp
aaa
stos
inc
dec
cltd
mov
add
leave
daa
sbb
mov
into
sub
adc
dec
mov
sbb
push
mov
shr
fcmovnb
clc
adc
mov
shll
testb
nop
sbb
jg
push
and
inc
pop
cmp
loop
dec
int3
sub
mov
lret
shrl
jl
pop
movsb
or
popl
jle
scas
rorl
pop
fdivrl
in
push
mov
inc
aaa
lcall
add
sbb
loope
and
or
lahf
inc
cmp
test
int
fmulp
cmpsl
int3
push
and
sti
pop
stos
clc
out
push
jns
rolb
int
test
jnp
push
mov
pop
lret
or
push
cmp
xchg
mov
test
les
add
les
cmp
cmc
and
call
bound
lea
mov
idivl
jmp
adc
imul
pop
loop
pop
mov
push
int
test
or
xchg
sbb
sub
push
ljmp
fsubrl
idiv
jb
push
adc
aaa
xchg
or
cmpsb
mov
arpl
xor
inc
cmc
push
pop
idivl
sahf
dec
jp
das
adc
inc
imul
sub
cmp
rclb
int
push
repnz
test
imul
aaa
cwtl
mov
jl
imul
pop
std
shlb
hlt
sbb
test
mov
lock
das
cmp
cmp
scas
push
add
out
fmul
xchg
les
repz
pop
loope
es
scas
or
movsb
fcmove
in
jae
jmp
stos
mov
xchg
aas
and
pop
jmp
sahf
ja
stos
and
adc
mov
stos
call
dec
inc
mov
cmp
lret
pop
and
inc
test
cmpb
rolb
dec
mov
xchg
int
xor
and
xor
xchg
mov
arpl
fcomps
aam
stos
push
fwait
adc
arpl
das
dec
ja
sub
scas
sub
sbb
xlat
push
and
scas
aas
push
into
mov
sbb
mov
cmp
and
fs
jne
ds
adc
or
sub
jbe
push
flds
lea
lock
push
lcall
dec
sub
mov
mov
mov
mov
hlt
sahf
ja
popa
divb
aaa
dec
mov
rolb
mov
in
mov
pop
out
add
movb
gs
xor
cmp
push
outsl
daa
es
in
in
ret
ja
and
dec
sbb
push
mov
scas
mov
aam
add
fwait
les
cs
repz
js
addl
out
outsb
dec
fsubl
or
test
out
xchg
cmp
shrl
mov
xchg
stos
cmp
mov
mov
mov
inc
sbb
pop
push
lahf
imul
xor
jb
jle
ret
sti
shlb
rorl
negb
lret
sahf
mov
push
xor
or
shrl
xlat
imul
xor
pusha
inc
mov
sti
cld
jne
jge
fdivs
adc
push
xor
out
xchg
popf
jae
mov
cmp
popa
dec
rclb
hlt
in
add
popf
rcrb
cmp
stos
push
insb
test
xor
es
push
xchg
imul
sbb
mov
lds
mov
mov
sbb
pushl
roll
sub
ja
dec
jp
sbb
add
es
sub
fwait
mov
inc
sub
push
arpl
push
stc
sbb
addr16
inc
lods
dec
mov
in
test
aad
mov
movsb
mov
inc
stc
popa
enter
lds
inc
loopne
out
cmp
mov
dec
inc
xor
gs
jno
sbb
jns
cmp
call
cli
imul
jmp
mov
shrl
gs
xor
clc
inc
cmc
cs
fucomi
inc
inc
mov
les
dec
add
mov
push
fcoms
jp
xor
pop
loopne
xor
fnsave
mov
pop
push
push
loop
ret
in
xchg
into
and
jg
shll
sbb
mov
mov
sub
mov
test
mov
in
in
loop
in
das
aam
lods
sbb
adc
out
push
mov
pop
mov
shlb
xchg
outsb
push
dec
push
lcall
pop
push
sti
lea
mov
out
sub
dec
insl
and
inc
xchg
inc
jae
pop
mov
sub
jl
pop
sub
cmp
aaa
imul
mov
daa
and
adc
dec
xchg
cmp
lcall
push
pop
xchg
movb
insb
jae
adc
bound
adc
daa
inc
jns
std
xor
or
jns
int3
repz
push
pop
pusha
test
enter
adc
mov
jbe
nop
adc
ss
lds
jmp
int
dec
dec
push
sub
jp
xchg
push
aam
jg
mov
mov
jne
pop
pop
dec
test
nop
dec
sub
jo
dec
call
or
or
pop
sbb
adc
dec
sub
fcoml
lods
sbb
sbb
push
outsb
sub
nop
and
inc
int3
inc
rcrl
in
scas
sbb
pushf
aaa
sub
cmpsb
arpl
insb
xor
mov
dec
icebp
sbb
insb
pop
push
stos
mov
sarl
push
mov
call
mov
out
andb
lret
pop
pop
xor
inc
mov
mov
push
jmp
aas
test
fsubrl
sbb
pop
cmp
fdivrs
je
push
int
mov
movsl
out
mov
ret
cwtl
cmp
mov
push
ret
lcall
pop
andl
mov
add
xchg
nop
and
sbb
sbb
scas
jl
nop
std
or
shl
test
mov
inc
inc
mov
push
in
mov
sub
outsb
loope
sub
jg
and
fisttpl
fwait
sbb
shlb
lock
lret
sahf
adc
mov
aas
aam
cmpsl
push
test
and
mov
and
jecxz
js
cmp
leave
and
add
mov
lock
jmp
fs
imul
dec
and
jmp
mov
es
mov
cmp
push
sub
push
int
xchg
stos
das
imul
lret
jb
mov
pop
xchg
pop
xchg
out
mov
and
dec
enter
cwtl
enter
mov
outsb
shl
cmpsl
jnp
xor
or
addl
mov
loope
dec
pop
pop
sub
call
inc
into
test
fdivr
dec
pop
call
stos
or
movsb
sarl
call
pop
pop
and
xchg
int3
hlt
in
movsb
jae
push
daa
push
fisttpll
inc
dec
sub
mov
xchg
das
cs
shrb
and
xchg
orl
ficoml
adc
adc
add
cltd
pusha
adc
and
jno
sub
pop
outsl
pop
mov
xor
nop
lock
sub
cmp
jns
loope
shll
or
std
push
sbb
mov
mov
or
bound
mov
ja
int3
aam
xor
repnz
sub
push
rclb
cmpsb
xchg
cmp
push
jae
sub
shll
pop
inc
jle
out
mov
sarb
fidivrs
dec
jae
sub
push
icebp
es
repnz
jnp
xor
dec
push
call
push
sub
cmp
leave
push
or
in
into
lock
inc
std
inc
jns
out
push
imul
out
jmp
out
in
push
lea
push
push
lcall
adc
cmp
in
xchg
xchg
shll
mov
rorb
popf
inc
mov
shrb
lea
cmpsb
xchg
jne
mov
sub
jp
daa
cli
popl
loope
inc
into
cmpsb
dec
cwtl
cmp
sbb
and
jge
pop
loopne
mov
cmp
and
jae
add
mov
xorl
inc
push
ds
mov
test
cmp
lcall
dec
mov
inc
dec
sub
imul
ljmp
inc
xchg
adc
xchg
repnz
and
fnstcw
sbb
pop
shrb
stos
sub
sbb
add
sbb
xor
xchg
or
sub
and
dec
add
js
add
scas
test
incl
rol
inc
adc
sub
dec
adc
fs
push
repnz
jns
stos
push
aad
mov
and
cmp
sbb
mov
adc
movsb
pop
aam
jecxz
fcmovne
movsl
mov
shll
cltd
movsl
aaa
xchg
push
les
and
std
cmp
mov
mov
ret
mov
repnz
aam
xchg
push
xchg
sti
inc
nop
xchg
insl
mov
leave
pusha
je
mov
adc
mov
addr16
cmp
xor
das
cs
push
fs
mov
push
mov
and
pop
add
mov
cmp
add
dec
test
in
repnz
mov
add
fnstsw
xchg
inc
test
lret
jge
sti
dec
mov
jmp
xor
mov
je
jno
sti
mov
mov
inc
add
ljmp
adc
repz
insb
and
cmc
dec
mov
loopne
sbb
test
xchg
testl
add
popf
mov
cmp
push
push
lds
fsubrl
mov
cs
inc
sbb
jno
iret
leave
adc
sbb
xlat
repnz
sbb
pop
cmp
ret
js
bound
push
dec
div
pop
int3
dec
scas
xchg
xor
pop
in
ljmp
pop
push
add
movsl
shrl
fcomps
outsb
mov
data16
mov
mov
insl
in
lcall
filds
lds
inc
push
add
jl
insb
jno
mov
orl
add
std
out
sahf
mov
cli
mov
cmp
ljmp
push
cmpsb
repz
push
push
mov
mov
mov
push
sub
sbb
pop
cmp
arpl
pop
neg
mov
iret
jns
loopne
and
xor
cld
lahf
and
mov
mov
and
mov
ss
and
pop
ja
pop
push
rol
imul
pop
out
dec
inc
mov
jl
inc
xchg
mov
sub
jno
push
loop
or
mov
dec
xor
inc
and
or
and
inc
push
subb
shlb
notb
scas
addr16
push
dec
iret
inc
jp
xchg
mov
ret
outsl
jae
shl
pop
push
add
push
jae
out
repnz
lcall
das
mov
xor
sub
add
loopne
loop
xchg
pop
xor
xor
enter
sbb
scas
fs
push
mov
add
clc
lea
sbb
in
jne
sbb
mov
push
jbe
pop
mov
sbb
add
jl
pop
xlat
fists
mov
mov
push
mov
sub
jmp
outsb
ja
loop
jg
push
pop
xchg
lahf
mov
or
rorl
pop
xchg
je
mov
push
cmp
mov
adc
pop
pop
lret
fldt
rorl
xlat
inc
push
inc
ficoml
rcrl
xorl
cld
inc
loope
pusha
sti
and
push
and
add
mov
test
jecxz
push
adc
inc
sarb
daa
fstpl
lahf
sbb
xchg
push
adc
push
inc
mov
jbe
fmull
sbb
xchg
inc
cmpsb
jp
cmp
call
cli
sub
push
mov
jno
nop
jb
test
dec
decl
dec
sbb
xchg
or
lcall
pop
or
xchg
fstpl
rorl
fs
mov
aam
jns
stos
je
pop
cmp
arpl
dec
pop
push
adc
sbb
cltd
sbb
sti
leave
jnp
mov
dec
pop
pop
or
mov
movb
pop
add
inc
test
inc
fcoms
jp
cmp
mov
leave
push
mov
filds
push
dec
lods
sbb
insl
mov
jmp
scas
dec
mov
stos
sbb
rol
jbe
jnp
jnp
iret
pop
movsb
dec
fistps
insb
mov
orl
push
outsb
adc
mov
dec
mov
imul
inc
int
fmulp
push
jg
popf
mov
adc
movsl
dec
push
ret
je
mov
out
mov
mov
in
cmp
pusha
movsb
pop
mov
cmp
or
lcall
xchg
mov
mov
in
adc
jne
test
jge
jo
cmpsl
sti
pop
xlat
jo
cltd
push
icebp
dec
push
lret
andb
in
mov
dec
cwtl
mov
js
lock
adc
push
xchg
out
int
ret
movsb
mov
repnz
mov
jle
push
aam
or
ljmp
rorl
arpl
adc
xlat
sub
pusha
int
outsl
cmp
lea
xor
sub
sub
cmp
ss
mov
out
jmp
popa
add
daa
xchg
adc
rcrl
and
ja
hlt
pop
mov
mov
test
adcl
sahf
sub
mov
sbb
or
push
sub
test
sub
xchg
dec
mov
push
lret
add
mov
adc
mov
mov
pushf
addr16
lea
jb
lods
mov
in
pop
leave
push
movl
dec
pop
inc
mov
sub
xchg
cmp
sbb
push
mov
icebp
push
jno
and
pop
lock
mov
jno
inc
scas
push
lods
sbb
pop
jno
js
adc
addb
cmc
repz
adc
mov
dec
aaa
mov
popa
data16
sbb
out
jmp
lahf
daa
mov
pusha
movsl
cmc
cld
adc
stos
loop
fs
ljmp
push
mov
sub
sub
adc
cmp
test
xor
mov
and
xchg
loopne
sbb
das
adc
push
and
add
pusha
jbe
out
fwait
cmp
lcall
pushf
pop
bnd
push
das
aam
ja
outsl
sarb
gs
xchg
and
push
jno
sarb
push
out
in
jge
mov
daa
repz
cli
cmp
stos
in
jmp
ret
adcb
shrb
mov
mov
fadds
jb
jecxz
rcr
ficomps
xchg
push
test
or
sub
xchg
or
sti
aam
lods
imul
loopne
lock
adc
repz
mov
mov
sub
pop
cmp
idiv
mov
test
adc
jne
or
stos
jno
adc
xchg
aas
xchg
cmc
xor
add
shr
leave
or
dec
cli
xor
push
mov
call
pop
mov
jne
cli
pop
pushl
xchg
inc
xchg
sub
imull
aad
and
sbb
and
scas
jne
repnz
ljmp
lods
fsubrl
xor
xchg
idivl
add
cmp
icebp
mov
push
out
andb
xor
dec
popf
jl
mov
arpl
add
stos
pop
andl
inc
inc
cmp
sub
subl
pop
jno
sarl
jle
aad
test
call
or
stos
int
ja
scas
sub
test
fst
cwtl
jp
sbb
popa
dec
rep
notl
gs
ja
sti
mov
inc
xchg
leave
cmp
xchg
jge
in
mov
jecxz
into
inc
push
into
call
nop
adc
cmp
leave
incb
xchg
or
cmp
mov
sbb
xchg
pop
mov
ds
icebp
arpl
sub
mov
sub
in
xchg
push
rcl
lods
jbe
push
inc
cmp
repnz
stos
in
jnp
cld
dec
bound
sti
lret
lods
cmp
rcrl
roll
push
jecxz
xchg
xor
xorb
inc
sub
hlt
ljmp
mov
fcmovne
sub
test
mov
add
fiadds
movsb
mov
shll
ret
push
dec
jmp
pop
test
push
stc
cli
push
sbb
inc
out
xchg
clc
aas
out
mov
push
pop
repz
addr16
pop
popf
add
or
rorl
loopne
jmp
in
imul
fnsave
data16
or
xor
jge
shl
dec
pop
cmpsl
fs
lock
ja
test
pop
cli
mov
cltd
rcrb
in
into
pop
mov
pop
das
mov
into
pop
icebp
mov
pusha
pop
in
nop
sbb
pop
jo
sbb
clc
ljmp
mov
fs
push
push
std
jbe
jg
mov
es
cltd
pop
ret
nop
push
sub
sti
or
test
sub
test
lret
or
jle
mov
icebp
and
fnstenv
pop
cmp
scas
adc
push
sbb
sub
stos
sub
push
pop
cmp
cs
lret
adc
pop
popa
xlat
mov
jmp
xchg
ret
adc
shll
movl
loopne
cmp
push
in
aad
or
jg
push
cmp
in
imul
and
loopne
repnz
sbb
andl
data16
or
stos
icebp
testl
push
jmp
into
push
inc
add
mov
mov
xchg
ss
pusha
pop
pop
add
leave
adc
test
adc
repnz
imul
dec
pop
icebp
xchg
mov
pusha
add
cmp
dec
fs
push
pop
jp
aaa
jle
hlt
ja
icebp
aad
outsl
lcall
das
shlb
adc
mov
ror
add
mov
mov
cmp
mov
aas
lods
xchg
fdivl
subl
mov
out
pop
fistpll
scas
adc
mov
scas
fcom
add
cld
sub
xchg
dec
mov
and
enter
sahf
mov
stos
and
fsubrp
int3
cmp
into
loopne
xor
cli
inc
mov
mov
xchg
mov
and
pop
add
push
xor
outsl
imul
sbb
adc
orl
test
cmc
lock
jno
push
push
movsl
idivl
test
cmp
sub
mov
lahf
sahf
dec
xchg
mov
in
hlt
dec
dec
bound
pushf
sub
clc
sub
mov
push
inc
popl
adcl
mov
out
push
fstp
cmpsl
xchg
mov
mov
sbb
int
repz
mov
imul
dec
push
sub
sbb
pop
mov
mov
add
arpl
pop
and
popa
or
insl
lods
mov
pop
loop
push
movsb
ds
push
stos
cmp
jns
movsl
push
in
inc
aam
jb
xlat
sbb
movsl
xchg
es
push
mov
popf
xchg
std
loop
scas
cmpsb
add
orl
pushf
and
add
push
inc
imul
sub
pop
push
sub
hlt
cmp
mov
jbe
fsubl
mov
mov
cwtl
test
adc
pop
add
jnp
push
fisttpl
sbb
in
sarb
xlat
loopne
mov
in
cmpsb
cmp
add
repnz
cld
pop
sbb
cli
push
and
addr16
addr16
jl
enter
sbb
mov
lea
mov
pop
iret
inc
mov
push
pop
aaa
sub
movsb
xor
arpl
pop
sub
add
dec
mov
xchg
jle
cmp
les
inc
add
fbld
push
jmp
sbbb
addr16
dec
add
int3
pop
nop
inc
push
xor
or
iret
inc
mov
xor
adc
sub
jp
ficomps
sbb
sbb
ds
mov
xlat
test
mov
sahf
sub
push
xchg
les
shl
ss
dec
jno
and
jecxz
cmp
jb
add
xchg
inc
shll
stc
ljmp
fcmove
cmp
shr
cli
inc
inc
sub
test
repnz
mov
push
xor
xor
enter
push
dec
dec
jl
outsl
and
adc
jae
xor
mov
pop
scas
lret
popa
xlat
lods
mov
xchg
dec
pop
or
js
mov
imul
adc
push
clc
mov
lret
int3
in
aam
dec
aas
pop
imul
mov
jb
call
xor
mov
cmp
mov
mov
xchg
jecxz
sarl
rol
inc
addr16
call
jns
leave
es
push
loope
xchg
xor
pusha
imul
rorl
mov
shr
pop
ror
loop
out
daa
inc
mov
negl
pop
out
adc
xor
fwait
lret
rcll
scas
jb
add
cmp
dec
push
das
mov
shrb
aam
push
mov
stos
push
inc
negl
mov
mov
das
inc
sub
rorl
jle
cmp
dec
nop
pop
std
lock
push
inc
and
dec
xor
or
out
add
ret
xchg
fsubrp
sub
or
adc
jb
lods
xchg
and
inc
and
sub
mov
xchg
out
test
xchg
sbb
sti
je
mov
push
adc
mov
sub
mov
dec
fstpt
sub
cmpb
sub
xlat
out
xchg
lods
xchg
or
mov
xlat
out
xlat
iret
rcll
loope
mov
adc
jg
in
out
outsl
dec
xchg
ror
adc
xor
inc
inc
jo
sahf
insl
xchg
mov
jnp
adc
aaa
outsb
jmp
and
pop
add
fcoml
adc
cltd
dec
movsb
jne
xlat
mov
mov
xor
insl
jns
je
adc
dec
cs
sti
adc
subl
cmc
inc
mov
call
mov
xlat
in
js
imul
cli
cmp
dec
sti
and
gs
roll
test
cmp
add
inc
test
and
jge
jle
fwait
stos
inc
sub
rolb
sbb
add
hlt
add
lahf
jne
inc
lods
dec
jmp
adc
popa
xchg
sbb
fildl
ret
mov
inc
cmp
repz
jo
mov
icebp
or
dec
repnz
testl
loope
push
push
and
and
pop
rcll
xchg
imul
add
out
adc
jnp
lock
std
out
out
stc
jae
call
and
cltd
inc
mov
jecxz
outsl
jp
add
stos
sub
sub
scas
mov
scas
mov
xchg
or
push
dec
and
out
addps
outsl
mov
imul
sub
adc
inc
mov
inc
jb
insb
andb
popl
jae
stc
ss
dec
jne
cwtl
orb
jne
fwait
push
popf
inc
dec
fldl
bound
stc
lret
adc
sahf
cmp
xor
xor
sub
and
shlb
mov
lcall
icebp
inc
clc
aad
out
jecxz
shr
and
fidivs
mov
or
or
sti
scas
and
sarb
pop
ljmp
or
sar
push
gs
mov
cmp
dec
lcall
push
clc
scas
repz
shlb
fcoml
mov
lods
push
test
lcall
dec
mov
cmp
jle
sbbb
outsl
iret
movsb
dec
stos
jg
std
loop
out
dec
cli
iret
dec
ficoms
xchg
repnz
xlat
dec
mov
jle
add
sbb
adc
movsb
imul
xchg
bound
lcall
int
cmp
push
rcr
mov
sbb
cmp
push
stos
nop
scas
mov
cmp
insl
in
fwait
xor
mov
push
test
inc
cmp
mov
lret
xor
jg
mov
jl
or
mov
out
xchg
int
jp
pushf
mov
pop
mov
sub
aaa
dec
xor
push
xchg
int
je
pop
xor
mov
sbb
rcrl
mov
sahf
xchg
adc
in
sub
cmp
mov
lds
mov
and
popa
pop
jbe
push
xchg
loope
mov
cli
test
mov
and
cmp
stos
loop
mov
mov
loope
mulb
pop
cwtl
sbb
es
jnp
or
mov
inc
decl
fdivrl
add
fnclex
jecxz
adcl
sub
clc
xor
inc
push
or
or
adc
cmp
daa
std
push
mul
popf
fidivs
adc
call
aaa
std
imul
push
and
pop
push
cmpsl
mov
pop
loop
lcall
fdivr
popa
jbe
mov
jne
xlat
cmp
mov
adc
enter
cmp
sti
dec
imul
cltd
not
fmull
jle
sub
loopne
pop
jge
sti
scas
and
mov
lods
pmaddwd
daa
dec
cwtl
cmp
scas
mov
stos
sbb
jmp
sahf
pop
dec
in
nop
mov
adc
ret
lds
mov
ret
dec
mov
lds
std
sbb
pop
std
mov
in
jle
js
mov
pop
push
mov
mov
sub
call
imul
dec
sbb
mov
push
xchg
sbb
adc
fldl
pop
scas
fildl
and
sub
repnz
cmp
dec
cs
lea
add
cwtl
sti
or
jl
jge
push
push
iret
enter
pop
inc
idivl
xchg
ret
add
out
iret
ret
hlt
mov
enter
outsb
sub
pop
mov
loopne
sbb
adc
inc
fst
mov
push
ja
dec
xrelease
sbb
aam
jmp
int3
jg
out
cmp
mov
es
xlat
int3
loopne
jbe
shl
mov
cmp
jmp
in
out
mov
ljmp
aam
dec
rcll
out
jbe
add
inc
stc
xchg
fwait
jmp
lret
mov
add
sub
mov
fdivl
movl
mov
mov
pop
cli
mov
inc
mov
push
sub
notb
leave
in
movsl
dec
mov
fistps
scas
sbb
rol
aas
loop
movsl
and
mov
mov
scas
std
push
pop
mov
add
shlb
les
arpl
sbb
cmpsl
lds
shr
leave
aam
adc
popa
jb
mov
fsubrs
insl
jns
jmp
xchg
cmp
mov
jb
sbb
mov
out
rol
orl
clc
pop
dec
in
out
xor
lock
cld
push
adc
mov
enter
jl
dec
and
js
ss
stos
jg
mov
mov
mov
ret
xchg
pop
iret
dec
stc
rcl
fs
push
fimuls
pop
idivl
dec
sub
xchg
fsub
xor
cltd
lods
insl
aam
and
mov
in
movb
sub
popa
inc
bound
and
cmc
cmp
cwtl
aam
fbld
jge
jmp
stos
mov
add
pop
cmc
pop
or
loope
cld
mov
push
pop
sti
xchg
pusha
sub
xor
bnd
push
sbb
ds
cld
leave
je
lcall
mov
xchg
sub
or
test
popf
ss
scas
xor
cmp
add
out
pop
fistpl
mov
push
in
mov
ret
lahf
ja
repnz
stc
or
stc
inc
ja
push
jae
fidivrs
sbb
xchg
rcrl
cmpsl
je
testl
fstp
pop
mov
fs
jp
pop
mov
sbb
sub
push
push
inc
int3
add
cltd
lods
int
pop
mov
inc
pop
in
enter
test
leave
lahf
scas
add
mov
aam
mov
les
sub
and
into
in
sar
lcall
int3
xchg
xchg
ja
push
out
pop
adc
imul
inc
dec
dec
jo
int3
cmc
pop
push
repz
out
fsubs
push
lcall
inc
cwtl
push
and
aaa
mov
je
add
test
add
mov
jne
loop
enter
push
jge
scas
or
aad
rorb
inc
mov
out
push
add
mov
popf
xor
inc
jge
pop
cmpsl
push
int3
popf
jge
pop
dec
pop
dec
cmp
test
push
cwtl
xchg
lahf
std
dec
sub
fbstp
bound
pop
stos
daa
addr16
push
sbb
test
loope
lahf
out
jmp
sti
movsb
push
push
mov
push
scas
xchg
mov
loopne
loop
imul
push
mov
lcall
xchg
cmp
lahf
aam
or
sub
sub
shrb
xlat
pop
popf
leave
loope
push
pop
xchg
lea
outsb
push
jmp
push
das
out
imull
push
pop
lock
xor
jbe
ss
xchg
enter
dec
cmc
int
push
mov
xor
push
adcb
ljmp
jle
data16
sbb
inc
adc
or
push
leave
xor
and
or
inc
arpl
inc
xchg
sbb
xchg
incl
cmc
pop
jo
lahf
aad
cmovbe
lahf
xchg
test
push
loope
sbb
movsl
test
out
xchg
aad
jg
mov
jp
jl
insb
mov
mov
mov
imul
loopne
pop
leave
es
nop
xchg
mov
push
sbb
ss
jo
or
int3
mov
xchg
sbb
imul
test
fidivs
mov
mov
pop
pop
in
imul
mov
arpl
pusha
ficomps
fmuls
out
sub
daa
add
adc
push
add
xor
cs
pop
add
cli
shlb
lcall
imul
shl
xchg
data16
enter
mov
jecxz
bound
iret
es
and
loope
lods
mov
pop
xor
std
sub
cmp
cmp
jp
sub
sub
sub
lret
movsl
insb
loopne
cmc
lcall
and
mov
jmp
xchg
mov
pusha
or
addr16
push
adc
lods
mov
xchg
jmp
and
sarl
fistpl
xchg
cmp
je
dec
imull
fldenv
mov
inc
ret
bound
ds
mov
imul
test
push
in
jmp
subb
mov
sub
push
je
leave
lods
push
mov
in
pop
movsb
mov
mov
cli
mov
cmp
xchg
aas
ljmp
bound
inc
and
out
sub
pop
mov
xchg
adc
add
int
add
loopne
fcmovnb
loop
mov
stc
loop
push
mov
push
jp
mov
sti
cmpb
lret
pop
push
dec
es
andb
outsb
aam
fdivrl
push
fldl
out
xor
outsl
mov
xor
mov
mov
xor
roll
in
imul
movsl
mov
lret
out
sub
out
sar
pop
pop
mov
or
fs
shrb
int3
dec
das
cmp
add
mov
cli
jle
pop
test
push
les
adc
cmc
add
push
shrb
and
xchg
ficoml
mov
hlt
adc
mov
cmpsb
std
xor
arpl
xchg
sub
sub
popf
fistpll
jle
insb
aas
jb
loop
dec
iret
clc
out
insb
and
push
popf
out
movsb
outsl
sub
xchg
fcmovnbe
sbb
leave
mov
xor
fucom
mov
scas
or
push
into
xor
push
lods
and
sbbb
or
or
fstp
mov
mov
and
sub
js
dec
cltd
je
fnstenv
aas
inc
jge
mov
jmp
mov
imul
dec
notb
xor
dec
loopne
das
or
and
sahf
xchg
leave
and
and
sahf
dec
jbe
dec
out
add
inc
mov
cltd
imul
lret
xor
lcall
call
cmp
daa
xchg
pop
push
sub
or
xchg
loop
xchg
das
fmul
adc
inc
jl
lds
cmp
popa
notl
mov
adc
jg
wbinvd
and
sub
cmp
cmp
and
ss
jb
aaa
jnp
xchg
nop
out
mov
mov
je
mov
cmpsl
add
rcrb
mov
cmpb
orl
je
pop
sbb
stc
aaa
push
mov
adc
mov
inc
push
or
mov
scas
mov
xchg
cmc
call
fsubrl
jp
divb
xor
mov
fldt
in
push
ja
mov
sbb
push
lock
test
xchg
dec
inc
data16
mov
pop
pop
xchg
sub
popf
int3
and
push
lret
sti
shl
ljmp
xchg
leave
jno
cs
int
mov
jmp
mov
inc
sbb
push
or
cli
adc
mov
iret
loopne
add
out
in
push
test
mov
xchg
mov
cmp
jg
adc
push
pop
inc
mov
lret
stos
adc
jo
testb
lods
int
cmc
mov
pop
int3
je
mov
jne
pop
outsl
jns
repz
std
je
test
dec
pop
aaa
pop
addr16
ret
xor
mov
insl
aaa
adc
cli
ss
jge
pop
out
jae
lcall
and
cmp
push
mov
es
mov
push
clc
adc
mov
aaa
push
and
lea
cmp
xor
and
lds
aas
in
pop
repnz
mov
push
es
out
nop
xchg
pop
clc
ljmp
jmp
dec
out
repz
adc
arpl
dec
stos
pop
aad
nop
mov
loop
mov
or
out
adc
loopne
dec
jns
push
test
mov
push
xchg
fwait
es
inc
sub
sbb
lret
stos
jb
ja
mov
xchg
aad
push
std
iret
shrl
jns
pop
mov
xchg
incb
iret
push
jne
cmpsb
call
pop
and
pushf
stc
test
fcompl
mov
jmp
sub
xor
pop
dec
and
and
mov
push
mov
in
cmovae
inc
stos
jmp
push
outsb
out
and
daa
cld
push
jg
xchg
imul
push
xchg
ss
shr
xchg
xor
and
insb
lds
in
test
les
xor
push
mov
iret
sbb
scas
pop
pop
fwait
inc
inc
fadd
jo
sub
cmpsb
testl
pop
jb
sub
mov
mov
rcrb
xchg
jae
jne
cmpsb
iret
xchg
outsl
mov
or
mov
jl
xor
add
das
out
test
inc
sbb
xchg
jle
push
jp
inc
adc
mov
cli
push
lds
or
cltd
jbe
mov
lea
push
cs
icebp
popa
dec
push
fistpl
lahf
jp
adc
shll
fnstcw
mov
arpl
loopne
xlat
add
nop
mov
arpl
dec
push
fcomp
push
in
sub
add
push
lret
pop
lods
cmp
adc
pop
nop
into
int
imul
aaa
push
adc
cmpsb
fldcw
in
cmpb
ljmp
aas
kmovb
xor
push
jo
mov
stc
loop
adc
dec
sub
scas
out
cld
in
push
inc
mov
inc
in
imul
and
leave
and
mov
or
out
aad
fists
cmc
scas
sub
fisubl
inc
cmc
data16
pushf
sbb
inc
sbb
fisttps
xchg
ds
shrl
fnstsw
xlat
pusha
cmp
push
icebp
sbb
jae
repnz
inc
or
mov
push
sbb
imul
loopne
add
std
mov
xor
sahf
xor
sahf
out
mov
adc
inc
push
call
jbe
lcall
filds
adc
mov
pop
sub
pop
outsl
dec
xchg
inc
je
xchg
fstl
fcoml
pop
add
cmp
lea
jbe
inc
push
push
cltd
cmp
insb
mov
dec
in
jge
enter
fnsave
sub
stos
sbb
inc
xor
cmp
push
nop
iret
stos
jp
leave
sub
pop
mov
fsubrl
dec
push
dec
inc
je
lret
push
scas
xchg
xor
push
xchg
or
lds
and
cmp
in
mov
sub
push
dec
into
mov
ljmp
mov
lods
jmp
sahf
pop
std
mov
adc
scas
ljmp
dec
or
inc
cmp
lret
jmp
cld
or
pop
or
mov
ljmp
ja
je
pop
push
dec
div
test
cmpsl
push
test
pop
iret
mov
mov
js
rolb
clc
and
test
imul
dec
sbb
push
push
sbb
push
adc
das
outsl
orb
enter
push
ja
mov
stc
mov
and
rorb
cli
andl
and
icebp
cli
ss
pop
scas
sbb
pop
in
lods
out
jp
stc
out
rcrb
or
lea
sub
ljmp
dec
lret
loopne
push
push
ror
loopne
inc
sarb
push
xchg
add
ret
cmp
aas
mov
cmc
push
aad
lret
sbb
mov
orl
jecxz
sub
sbb
pop
cld
xlat
add
dec
fisttpl
negl
mov
gs
cmpsl
psrlq
fsub
stos
jns
lods
mov
inc
sbb
adc
jo
mov
sarb
lods
xorl
dec
outsl
mov
data16
cmp
in
hlt
push
jae
or
add
loop
jg
test
outsl
ds
ret
sbb
cmp
push
sbb
insl
or
fwait
lea
inc
add
icebp
rorl
dec
cltd
and
stc
aad
inc
dec
inc
aas
inc
cmp
sbb
fnsave
negb
dec
fnstsw
push
push
fcomps
mov
cltd
and
cwtl
mov
sub
jbe
jae
push
movsb
push
jl
loopne
cs
jle
xchg
loope
outsl
pop
mov
mov
push
adc
pop
push
stos
popf
icebp
lods
jmp
in
cmp
xor
sub
bound
cmp
in
fistl
mov
sahf
hlt
mov
scas
imull
call
xlat
cltd
imul
and
cmp
lss
dec
into
cs
fwait
aad
enter
sbb
sbb
sub
cli
jg
and
pop
pop
incl
popa
mov
or
push
out
fisttpl
adc
xor
clc
mov
dec
jne
inc
mov
mov
pop
cli
sub
mov
sbb
addb
out
sbb
repnz
cld
je
xor
mov
pop
mov
lret
stos
mov
lods
cwtl
xchg
repz
outsl
adc
sbbl
fcomps
jae
xor
insl
loopne
int
mov
popa
outsb
outsb
adcb
cmp
rorl
fiaddl
jb
cmp
sar
mov
mov
mov
movb
xchg
sbb
outsl
mov
and
pop
data16
dec
push
ret
stos
jle
add
push
jle
mov
cmp
cld
test
xor
push
and
movsl
fldenv
mov
jmp
mov
cmp
enter
mov
shll
jne
xchg
lcall
jge
and
loope
orl
loope
aam
outsb
pop
and
std
rcrb
das
push
fldt
dec
sbbb
adc
cmp
add
cwtl
or
cmpsb
and
adc
cmp
cmp
pop
lods
out
aad
xchg
xor
adc
imul
mov
pop
lds
pop
pop
out
mov
inc
xchg
sahf
pop
subl
fwait
jl
js
mov
lds
lret
inc
cld
and
popf
jbe
test
mov
cmc
ficomps
pusha
add
pushf
inc
adc
bound
pop
push
repnz
repnz
mov
addl
cmc
in
mov
out
jns
int3
ret
mov
push
shl
inc
push
pop
mull
repz
fidivl
sahf
pushf
aam
fiaddl
cwtl
pop
es
cltd
jae
push
shll
jns
mov
andl
insl
mov
pop
pop
test
xchg
outsl
mov
inc
mov
loop
in
cs
imul
pushf
arpl
adc
mov
mov
pushf
inc
jle
leave
sbb
jnp
and
out
xchg
es
dec
mov
call
mov
stos
jmp
pop
jo
inc
sub
in
int
sbb
jmp
sub
daa
add
iret
jle
andl
push
or
sarb
gs
scas
push
roll
orl
outsl
push
jle
aaa
movsb
jnp
add
pop
sub
lret
aad
mov
adc
push
jae
xor
ljmp
fucomip
ret
mov
dec
das
push
push
or
ret
stos
imul
fcomi
mov
das
xchg
xor
mov
sub
add
lods
add
jnp
sbb
jns
test
mov
ss
xor
cmp
into
test
test
xchg
test
data16
lret
jp
jns
repnz
lret
adc
pop
mov
add
pop
pop
dec
adc
dec
fdivp
shll
dec
xor
rcll
cli
popf
lret
out
xor
and
loope
xchg
adc
add
jb
and
fiadds
mov
jbe
shr
in
push
lret
call
shr
mov
xchg
das
cmp
stos
jecxz
push
jg
jne
popa
add
sti
cmp
fdiv
call
add
jecxz
insl
xor
lock
jb
call
out
mov
add
cmp
pop
mov
sarl
jecxz
add
mov
fwait
enter
or
loop
pop
dec
mov
lods
add
mov
sub
xchg
dec
clc
pop
push
and
dec
cli
adc
cmp
jp
jno
mov
xor
mov
inc
cmp
xor
pop
addl
ss
jl
test
xchg
push
add
mov
in
addr16
into
addl
fisubrs
sbbl
es
jge
mov
or
push
adc
xor
fadd
in
mov
loop
pop
and
xor
inc
adc
xchg
xchg
aam
jg
push
mov
xor
fcmovnb
dec
repnz
lcall
and
sarb
jno
pop
das
xchg
sbb
mov
push
das
add
cmp
jns
js
sbb
outsl
mov
adc
pusha
xchg
movsb
data16
in
jmp
push
sbb
push
push
dec
and
pop
pop
jbe
enter
sub
fs
or
mov
pop
mov
les
push
lock
inc
fs
je
stos
jns
js
adc
push
cmp
cmc
inc
addr16
inc
stc
js
xchg
test
sub
push
mov
es
shrl
insl
hlt
push
inc
mov
je
loopne
sbbb
imul
pop
out
sub
repnz
mov
fs
cwtl
xchg
pop
xchg
add
jbe
pop
ret
cli
rcll
lret
cld
push
repz
scas
jmp
jl
push
xchg
mov
xor
add
ret
push
pop
insl
shll
imul
push
push
movsb
lods
cli
stc
sti
lret
movsb
cmp
in
mov
push
mov
pop
xchg
mov
adc
cmpsb
test
pop
cltd
jl
into
sub
popa
pop
stos
sub
hlt
jge,pt
mov
add
or
xor
cmp
rol
iret
je
repnz
les
and
mov
inc
mov
jbe
rorl
pop
fwait
cmc
xor
pop
adcl
jecxz
out
ret
pusha
and
dec
cmp
push
adc
inc
outsb
jmp
mov
mov
push
xor
sub
lret
jecxz
mov
or
and
push
cld
mov
and
adc
stos
push
ret
insl
pop
inc
aas
cmpsb
pop
sbb
mov
mov
orl
les
data16
push
jp
icebp
and
adc
pop
sbb
dec
jl
test
test
cmpsb
and
push
cmp
int
ja
mov
xchg
sub
mov
mov
sbb
shll
jo
bound
push
data16
mov
inc
sub
mov
cld
push
mov
dec
push
pusha
xchg
mov
out
jecxz
push
inc
xchg
mov
mov
notl
dec
hlt
in
adc
mov
lret
cmp
and
cmpsb
out
mov
mov
add
adc
sahf
aas
pop
mov
jno
addb
fucom
mov
mov
dec
jo
sbb
push
and
loop
mov
dec
jmp
es
sbb
fcomps
in
pushw
pop
stos
mov
mov
jle
push
xchg
stos
in
lcall
gs
orb
mov
add
inc
mov
mov
pop
iret
cmp
ds
movsb
add
mov
sbb
dec
adc
lcall
mov
insl
test
imul
mov
ret
lret
pop
inc
inc
push
mov
vpslld
pop
arpl
clc
mov
iret
pop
idivb
inc
cmp
jno
inc
cmc
push
push
sub
push
push
addr16
pop
cmp
out
out
lahf
jnp
mov
in
movsl
and
sub
jnp
cmpsl
sub
in
arpl
add
dec
movsb
jne
dec
fisttps
push
sbb
push
adc
and
imul
mov
stc
jo
pusha
push
dec
add
fnstenv
test
test
sbb
int
shll
and
cld
mov
ss
xchg
dec
fdivs
adc
jg
pop
fldenv
mov
cmp
xchg
pop
adc
xor
mov
mov
je
aaa
dec
out
xchg
in
insl
gs
gs
pop
push
inc
inc
je
adc
pushf
mov
xor
movsl
arpl
push
test
int3
and
sub
dec
repnz
pop
lds
xchg
ficoml
es
add
insb
mov
nop
xor
xor
mov
popa
xchg
sti
push
sbb
shlb
addl
pop
ret
jecxz
orb
push
stos
ret
test
in
adc
xchg
cwtl
sbb
movsb
pop
push
scas
call
in
fists
fs
jbe
cli
lret
jge
pushf
int3
inc
mov
int3
push
andl
cs
sbb
out
aaa
scas
aas
sbbb
hlt
cwtl
or
or
fbld
push
jns
mov
xchg
mov
mov
fsubrs
rol
js
xchg
mov
iret
hlt
sbb
inc
out
mov
adc
push
mov
hlt
jle
mov
xchg
jb
inc
xor
std
js
adc
sbb
imull
mov
lods
jb
aam
loop
and
push
jp
stos
mov
into
stos
mov
adc
add
sarb
sbb
mov
xor
sahf
sbb
fldl
aad
push
in
mov
sbb
rorl
cmp
loopne
mov
fnstcw
pushf
scas
sbb
pushf
int3
out
jbe
dec
add
dec
out
out
fmull
sti
xchg
mov
int
adc
push
inc
movsb
mov
push
and
out
xchg
cmpsb
mov
mov
mov
mov
mov
lahf
sub
test
lret
rcll
icebp
mov
cmp
add
filds
jne
faddl
pop
and
or
loop
popa
or
mov
les
data16
and
mov
fcomi
fadds
lahf
pop
jno
lds
sbb
and
mov
sbb
sarl
out
out
push
push
nop
in
lahf
xchg
test
in
mov
and
scas
test
shll
dec
cltd
ljmp
mov
pop
fldl2e
aad
dec
subb
pop
daa
add
or
cmp
push
jns
test
xadd
loope
lea
pop
adc
aaa
jno
call
insb
arpl
cmpsb
cmpsb
sahf
fmulp
mov
push
push
mov
push
ss
out
mov
movsb
mov
mov
mov
xchg
or
cwtl
inc
pop
popa
test
rol
pop
pop
sub
test
loop
iret
jg
idiv
sbb
xchg
pop
push
add
leave
jbe
jbe
aad
inc
ljmp
in
ds
or
mov
sbb
inc
push
mov
out
ret
or
xor
sbb
and
data16
push
aaa
cmp
xchg
jp
add
and
stc
jle
mul
into
nop
addr16
lods
in
fcoms
cwtl
mov
jg
jg
sahf
add
aaa
out
or
jae
cli
sub
pop
xor
test
add
add
lods
and
or
movsl
scas
or
int
adc
mov
test
xor
cmp
sub
xchg
test
sbb
jge
jno
xor
incl
xor
pop
xor
pop
icebp
loopne
loop
jecxz
xor
mov
addr16
mov
dec
mov
jecxz
dec
pop
mov
das
or
sbb
sub
int
or
pop
les
add
das
shlb
pop
mov
pop
jl
test
insb
fidivl
lret
mov
fiaddl
pop
movsb
iret
sub
and
jne
xchg
inc
and
or
mov
add
cld
jge
popf
mov
inc
ljmp
push
cmp
inc
sub
in
enter
mov
jne
or
xlat
sub
xor
les
ljmp
cwtl
jb
mov
xor
sub
xchg
lods
mov
fs
and
aam
xor
sbb
fsubrp
fcmovbe
leave
mov
adc
jmp
pusha
mov
push
push
or
adc
addb
push
cwtl
je
repnz
dec
insb
push
int3
xchg
mov
add
mov
test
inc
sahf
leave
cmpsl
xor
jge
dec
aad
push
ret
sub
jp
jl
xor
mov
in
jle
sub
jmp
jge
mov
das
inc
sbb
pop
inc
inc
jmp
jnp
sub
int3
pop
nop
daa
push
icebp
mov
mov
adc
push
into
push
int
cmp
pop
fmul
xchg
lds
sbb
lods
lods
dec
scas
adc
fwait
add
sub
sahf
ret
jmp
mov
fwait
inc
cmpb
mov
push
int
sar
repz
es
addr16
insl
popa
mov
sbb
cmpsb
cmp
loope
fiadds
test
push
fisubs
jns
out
mov
xor
and
adc
stc
or
sbb
add
xchg
sbb
js
add
addr16
imull
adc
std
push
jnp
loop
jo
popf
jo
shlb
aam
or
push
cmpl
pop
push
push
jl
mov
arpl
scas
and
mov
mov
adc
and
lcall
jge
es
bound
push
sbb
mov
xor
popf
dec
mov
fsubr
stos
or
iret
fisttps
jl
inc
push
mov
lods
mov
popf
lret
in
inc
clc
inc
orb
fucomp
xchg
jbe
test
orl
aam
mov
aaa
add
jno
fucomp
and
sub
mov
pushf
pop
pop
sbb
jno
push
adc
cli
or
loop
cwtl
lcall
lret
dec
dec
in
ja
cmp
in
rcll
adc
fiaddl
jno
dec
mov
inc
rol
sarb
outsl
icebp
mov
jo
icebp
aad
cmp
add
mov
cmp
cli
xchg
repnz
push
imul
sahf
sbb
sbb
add
jecxz
xor
fistpl
mov
sarb
jbe
imul
lcall
mov
mov
xor
jae
and
daa
add
xchg
cltd
dec
sub
xor
bound
xor
cmp
inc
and
add
sub
shll
dec
mov
pop
and
lcall
adc
inc
or
add
fisubrl
pushf
lea
mov
test
sbb
test
push
push
lods
lods
out
insb
xchg
loope
fsubs
inc
enter
add
iret
push
push
mov
xor
test
jmp
mov
cmpsb
ja
scas
cwtl
int
outsb
add
nop
pop
test
jecxz
push
dec
add
das
fdivr
lea
and
pop
xor
sahf
xchg
dec
outsl
lret
jge
mov
cmpsb
enter
aas
popf
aam
repz
rorl
js
push
nop
sbbb
addr16
outsb
xor
or
data16
adc
mov
lea
out
mull
data16
push
ja
sub
dec
sbb
aad
mov
das
adc
aad
popa
jae
cltd
push
cwtl
adc
les
mov
or
or
lods
fisttpll
xor
fwait
mov
adc
push
arpl
adc
jg
lods
jmp
pop
push
mov
popf
mov
or
jge
xor
lds
xchg
ficoms
ss
hlt
sbb
pusha
mov
inc
inc
roll
pop
in
test
dec
popa
dec
es
sub
xor
push
push
mov
push
dec
shl
pop
js
adc
or
les
cwtl
data16
roll
je
or
xchg
jne
adc
mov
mov
jmp
mov
les
xchg
xchg
mov
out
mov
push
jp
stc
arpl
repz
outsl
or
jne
rcrb
loopne
sar
incb
fldt
adc
add
push
in
xchg
adc
std
push
je
jmp
cmp
stc
sub
pop
mov
loop
and
inc
inc
adc
faddl
push
mov
inc
sbbb
mov
adc
mov
add
pop
test
jl
inc
sub
popf
push
mov
mov
and
inc
scas
int
movsl
gs
fidivrl
repnz
push
xlat
cs
jmp
dec
lret
sarb
adc
pop
inc
jb
or
lods
clc
inc
outsb
pop
adc
not
xor
lds
adcl
mov
add
out
xchg
jge
pop
sbb
test
daa
mov
push
xchg
and
mov
daa
adc
or
jg
cmp
mov
mov
mov
push
in
mov
dec
pop
arpl
aas
inc
lds
push
xor
sti
adc
testl
dec
dec
rolb
xor
leave
ja
sarb
inc
lret
xor
cmp
jnp
mov
inc
pop
scas
aad
xor
nop
xchg
dec
std
js
cmpsb
mov
mov
sub
inc
mov
mov
inc
gs
loopne
mov
faddl
dec
jle
dec
arpl
cli
test
enter
push
loope
test
fisubrs
mov
cs
add
popf
sbb
pusha
in
scas
paddusw
cmp
outsb
pop
es
orb
int
jbe
dec
push
cmp
shrb
push
xchg
mov
shrb
sub
js
or
arpl
loope
sbb
sub
pusha
sbb
pop
mov
or
sbb
fisttpl
xchg
mov
jp
jl
push
xor
clc
jg
add
ret
xchg
mov
sbb
dec
in
xchg
mov
mov
pop
imul
popf
and
sarl
xchg
dec
inc
add
scas
xor
ret
and
fstps
pop
sub
mov
cmp
cmp
daa
pop
test
shlb
mov
jmp
pop
outsb
jmp
sti
xchg
mov
xor
or
cmp
testl
mov
jge
cmp
pop
jb
jne
test
cmpl
jo
mov
or
outsb
push
mov
roll
fwait
in
clc
movsl
sub
cmpsl
mov
pushf
dec
les
out
lock
mov
lock
scas
in
leave
shrb
outsl
jbe
les
mul
addb
cmp
dec
xorb
cmpsl
xorl
insb
shll
jns
mov
outsl
imul
bnd
enter
sub
leave
adc
xchg
pop
sahf
mov
iret
pop
cmp
dec
enter
lahf
push
push
ljmp
mov
faddp
lock
add
add
sbb
xchg
xchg
test
push
fs
add
pop
aas
int
pop
pop
pusha
jae
mov
adc
sbb
adc
and
xor
inc
out
cmp
cltd
and
outsb
and
xchg
dec
sarl
jge
inc
pushf
xorl
push
lahf
xor
xchg
jns
lods
mov
data16
les
inc
pop
xchg
fwait
sub
inc
push
or
add
popf
mov
lret
sbbb
sbb
or
lss
jge
loopne
insl
mov
push
inc
enter
sti
pushf
adc
and
int3
test
mov
in
imul
and
fdivs
fmul
inc
and
or
testb
jle
mov
or
jnp
push
insl
dec
add
aam
cmpl
popa
divb
imul
arpl
sarb
adc
leave
loopne
cmp
mov
test
je
shrl
push
int
fs
or
outsl
cmpsb
in
mov
push
jg
orb
add
bound
fimuls
shlb
cmp
fistpll
dec
scas
xor
dec
mov
push
and
jmp
call
xlat
jb
dec
push
jae
pop
out
sub
shrb
dec
rcl
pop
call
ret
dec
ja
sbb
jg
dec
imul
xchg
loope
and
ret
adc
sbb
jecxz
xchg
sbb
inc
dec
icebp
push
in
pop
dec
push
push
das
push
and
dec
push
jnp
lods
mov
pop
xchg
and
adc
and
jae
dec
cmc
jns
cmp
jge
ret
or
mov
fldt
dec
arpl
and
stos
xor
xchg
adc
sbb
dec
lcall
dec
stos
sahf
sub
push
cmp
mov
add
sub
xor
sbb
lods
scas
pop
mov
test
std
xor
ja
addr16
lods
subl
das
pop
cmp
cmp
push
andb
int
lcall
lret
nop
movsb
gs
push
jns
nop
mov
notl
jmp
xor
sub
push
push
subl
fisubrl
pop
sub
jno
jns
loopne
in
fwait
mov
lock
lret
ss
sbb
fiaddl
xlat
daa
scas
pop
leave
sbb
ja
mov
push
dec
in
dec
cmp
mov
xor
lea
and
in
pop
dec
xor
cmp
xor
and
out
in
xlat
lds
std
and
scas
sub
lock
aad
pushf
add
mov
daa
cs
into
in
sbbb
pop
das
sarb
roll
out
sarb
push
enter
test
inc
xor
push
fwait
sub
ficompl
rcl
clc
mov
jno
cmp
inc
jp
jmp
jg
jecxz
inc
xlat
leave
fisttps
pop
jg
rclb
bound
jmp
insl
jge
fstpt
out
jmp
sub
jbe
inc
mov
cmpsl
lods
push
pushl
sbb
test
inc
mov
hlt
fwait
sub
add
lahf
add
pop
inc
shll
push
call
ss
repnz
mov
aad
add
sub
mov
add
test
shlb
pop
pop
inc
mov
mov
mull
or
fs
mov
cmp
fbld
aad
test
push
mov
dec
jo
inc
jge
mov
mov
or
adc
mov
movsl
stc
std
pop
inc
mov
daa
xor
add
pusha
shrl
fldcw
and
jo
cmp
test
popf
jg
ja
mov
imulb
dec
jb
inc
jo
in
aas
cwtl
dec
mov
jl
xor
aaa
outsl
lret
and
push
adc
or
dec
cmc
dec
jb
lea
cmp
mov
popa
call
mov
lahf
outsb
aad
xchg
fwait
inc
pop
inc
pop
lcall
jb
xor
mov
lcall
shl
outsb
out
out
xchg
repnz
les
jne
popa
cwtl
and
inc
in
lods
sarl
xchg
and
inc
jo
mov
add
jnp
in
add
add
ja
xor
mov
cmpl
sub
dec
cmp
and
stc
loop
hlt
loope
jae
pop
xlat
das
outsl
sbb
pop
dec
or
push
leave
mov
into
fstl
fists
pop
xor
inc
or
xchg
mov
xchg
cmp
pop
add
dec
rcrl
lahf
xchg
jmp
movsb
fsts
gs
jb
roll
xchg
push
shll
popf
pop
mov
subl
iret
ljmp
cmovbe
daa
lret
and
test
iret
ficomps
adc
xchg
ljmp
push
mov
jp
pop
pushf
jge
mov
and
aam
adc
mov
rcll
adc
dec
aad
cld
push
roll
mov
cmp
mov
insb
fnsave
test
rcll
mov
lods
frstor
inc
xchg
stos
cltd
cwtl
daa
mov
cmp
xchg
pop
adcl
inc
cmp
out
inc
cwtl
xor
mov
sbb
or
stos
pop
lock
int3
pop
pop
fs
loopne
fbld
in
addr16
xchg
push
add
dec
jg
cmp
and
es
cmpsb
aad
jo
ror
enter
pop
shrb
push
jbe
lahf
adc
mov
sub
je
or
mov
lret
dec
out
shlb
mov
out
std
es
in
xchg
pop
pop
lods
bswap
or
out
xchg
mov
cli
cmp
out
sbb
pop
inc
xchg
repnz
inc
lock
popa
in
dec
add
les
jmp
xchg
inc
mov
adc
jbe
adc
sub
dec
pop
cld
out
inc
pop
mov
mov
dec
jne
adc
sub
out
mov
fsubrl
cmc
jge
fcompl
mov
jmp
inc
sub
lock
pop
jns
cmpb
lock
ret
push
test
dec
cmpsb
jl
sbb
movl
push
ljmp
scas
daa
addr16
xor
push
mov
stc
xchg
lret
int
push
ljmp
sub
sbb
testl
pop
dec
push
cmp
stos
mov
or
imul
jbe
and
mov
mov
dec
cmp
adc
aam
lea
pop
mov
cmpsl
pop
xor
scas
mov
jmp
ficoml
cltd
jne
rorb
add
jo
dec
mov
data16
in
jb
sarl
add
pop
fidivs
pop
adc
add
xchg
sti
ret
sub
pop
and
xorb
out
pop
xchg
pop
sbb
pop
sarl
or
push
mov
adc
mov
jnp
cmp
and
sbb
pop
sbb
mov
sbb
xchg
test
pop
rol
xchg
leave
inc
mov
or
enter
mov
mov
lret
sub
dec
lret
sbb
aaa
push
fsubl
mov
test
call
in
shll
mov
sbb
mov
dec
mov
notl
aaa
pusha
sahf
aam
add
push
sbb
test
cwtl
xchg
rolb
inc
dec
rcrb
xchg
shlb
jo
add
xor
mov
push
loopne
xor
movsb
add
in
jae
in
hlt
jmp
das
mov
pop
divl
stos
xchg
mov
cltd
xchg
inc
insl
adc
mov
jp
mov
cmp
neg
cli
cmp
cld
popf
das
dec
sub
dec
arpl
and
jne
pop
enter
repnz
xchg
je
loopne
push
repz
inc
shrb
cwtl
push
js
mov
inc
ljmp
xor
mov
scas
inc
or
jae
cmp
xlat
lret
faddl
call
sahf
jge
push
sti
movsl
pop
dec
inc
mov
lret
in
popa
jge
decb
loop
add
cmp
mov
sbb
lahf
pop
leave
ja
je
in
popf
push
push
scas
jae
jmp
mov
fsubrl
icebp
out
testb
mov
inc
loope
sahf
mov
ds
dec
sbb
in
sub
psllw
mov
jno
loop
cli
outsl
jae
add
and
xor
repnz
push
jge
xchg
xchg
nop
sbb
mov
ss
loop
lods
cli
mov
into
or
jne
push
mov
pop
cli
aaa
lods
clc
cmp
into
fld
sahf
push
pushf
sub
dec
jge
cmp
das
jb
enter
stc
in
test
lcall
pop
inc
sub
mov
ljmp
dec
cmp
mov
push
and
and
mulb
sbb
pushf
std
adc
bound
xor
mov
cmp
inc
mov
mov
ret
call
nop
repnz
dec
pusha
sub
and
scas
out
les
adc
int3
dec
xchg
movb
clc
repz
jnp
lret
push
lret
mov
outsl
adc
leave
pop
jo
ret
mov
pop
adc
push
test
lods
inc
in
in
addr16
dec
jnp
mov
add
loope
or
scas
sub
xor
and
sbb
je
adc
dec
mov
xchg
popf
jo
lahf
nop
arpl
mov
shll
adc
cwtl
in
push
dec
pop
nop
sahf
sahf
sub
sbb
aam
sti
iret
int
xchg
and
adc
clc
or
pop
out
jle
xchg
pop
mov
inc
insl
sub
cld
or
dec
std
inc
orl
rcrl
dec
lods
cmpl
xchg
subl
mov
sbb
push
mov
adc
jecxz
xchg
insb
add
ds
sbb
fimuls
pop
imul
sub
std
adc
lret
cmp
cmp
inc
int3
push
out
jge
sbb
mov
inc
sub
ds
xchg
iret
pusha
lock
sbb
adc
or
push
cwtl
add
in
sahf
push
pop
std
lret
sub
stos
push
imul
lea
mov
push
pop
pop
fiaddl
mov
mov
dec
mov
stc
dec
icebp
imul
aaa
xor
pop
jmp
push
push
subl
inc
sahf
and
daa
xchg
fcomi
mov
scas
and
cmp
fisttps
insl
mov
jb
out
jno
xor
iret
jae
test
xlat
pop
adc
inc
cmp
inc
jle
and
mov
sahf
aas
adc
inc
shll
aad
cli
out
cltd
xor
jns
gs
mov
inc
fwait
and
jmp
rcrl
push
pop
xor
push
lods
iret
jp
pop
mov
sbb
dec
pop
xor
movsl
sbb
aas
imul
shlb
inc
cmp
push
out
stc
popa
lds
mov
adc
lret
test
cmp
mov
mov
movd
mov
lods
and
lahf
daa
adc
dec
cmp
fdivs
ss
mov
lcall
dec
into
jp
jb
cmp
psadbw
jne
cmpsb
stos
mov
repz
inc
push
pop
push
inc
clc
xchg
mov
add
sub
lgs
inc
sarb
and
push
jno
out
test
mov
into
mov
or
imul
addl
gs
repnz
cmp
jg
mov
mov
pop
into
lret
xchg
push
xor
jmp
call
push
std
jle
jo
mov
jecxz
jne
pushf
jge
mov
outsl
xor
daa
jl
daa
scas
pop
mov
or
jb
movsl
pushf
sub
inc
add
daa
mov
dec
mov
je
xor
loop
jmp
xorb
outsl
inc
stos
outsb
sbbl
fists
mov
sbb
clc
add
and
test
xchg
mov
adc
mov
sar
rolb
or
push
nop
xchg
in
out
pop
xlat
mov
outsl
clc
mov
inc
mov
call
push
mov
mov
cmp
pop
lds
mov
dec
das
sbb
inc
push
nop
lods
jle
sti
pushf
jg
fcomps
imul
xchg
jb
sarl
sub
lea
sub
add
push
cmp
or
inc
data16
xor
ret
pop
mov
jge
outsl
movsl
ficoms
in
insl
dec
negb
es
hlt
sub
jno
call
push
jne
or
cs
mov
jnp
test
jmp
cmp
push
sub
loopne
imul
fnsave
sbb
pushf
sub
loope
pop
fnsave
mov
out
xchg
or
mov
cmp
outsl
ret
dec
pusha
push
add
andl
mov
in
icebp
imul
inc
cmpsl
movb
sub
dec
fisubrs
gs
sbb
adc
pop
inc
aam
pushf
movsb
mov
xchg
push
cmp
and
adc
adc
adc
int3
dec
lcall
lcall
xor
mov
mov
fsub
jp
lahf
mov
mov
popa
in
outsb
dec
push
jecxz
sub
dec
mov
aam
sub
jnp
hlt
push
aaa
shll
movsb
sbb
inc
sbb
orb
jnp
test
sub
xlat
and
rclb
call
fldenv
test
insl
cmpsl
xor
es
cmp
and
jns
pushf
push
xchg
idivl
xor
clc
rcll
sbb
push
pop
stos
test
fsubs
and
ret
in
mov
sqrtps
mov
iret
add
mov
pop
pushl
and
pop
sbb
popf
mov
mov
xlat
xor
mov
cmpsb
daa
das
sub
aaa
scas
push
loope
in
subb
or
mov
inc
nop
xchg
cs
xor
cmp
push
dec
add
mov
out
sbb
dec
mov
or
insl
jmp
mov
jb
sbb
mov
aaa
xchg
ror
adc
sub
mov
lock
push
xchg
pop
jae
loop
scas
adc
jb
sbb
adcl
shlb
push
nop
popa
and
testb
and
aad
jne
xor
insl
push
pushf
mov
dec
inc
push
ficoms
xchg
inc
mov
jns
sarb
sbb
inc
cmp
pop
inc
ljmp
les
sub
mov
add
outsl
xchg
jecxz
cmp
inc
negb
or
inc
mov
or
push
jecxz
leave
sbb
lret
jg
jnp
repz
pop
push
bound
hlt
cli
addb
and
dec
mov
add
fisttps
pop
sbb
cld
mov
test
mov
and
adc
or
in
jmp
fbld
adc
sti
mov
cmp
or
sub
dec
ja
out
sahf
adc
std
or
inc
movsb
mov
push
inc
lds
mov
xor
cmpsl
add
gs
inc
add
sbb
sbb
dec
sub
adc
or
pop
dec
xchg
movsl
pop
jecxz
push
xchg
adc
pop
loope
scas
lock
call
ror
pop
loop
adcb
add
push
pop
loopne
shrl
dec
pop
xor
add
inc
les
lods
cmp
mov
lods
jno
aaa
leave
lock
push
mov
je
xchg
xor
sub
cmpsb
sub
sti
mov
inc
mov
pop
ret
popf
insb
into
std
xchg
jmp
xor
mov
inc
adc
mov
adc
aas
ljmp
cmp
int3
xchg
xchg
and
je
loop
jle
xchg
and
xchg
push
pusha
xchg
pop
cmp
arpl
test
test
cli
jmp
push
call
adcb
fsubl
dec
iret
aas
loope
out
sbb
pop
cmpsl
mov
inc
nop
xor
lahf
cmp
mov
out
inc
push
out
push
std
cmp
fiaddl
sub
ret
icebp
repz
clc
jmp
stos
xchg
jg
ret
dec
clc
in
lret
cmp
out
jne
xchg
mov
cmpsb
mov
out
cmp
into
cwtl
mov
test
imul
jge
jb
mov
cmc
arpl
dec
pusha
mov
or
or
pushf
and
push
ret
cmpsl
test
cmp
push
mov
fstps
aas
je
cmp
push
sbb
push
sub
push
jbe
sbb
outsl
into
ja
mov
fidivs
insb
cli
push
stc
sahf
mov
bound
sahf
jg
adc
mov
scas
and
sti
test
lret
popa
call
dec
sub
xchg
cmc
pop
mov
adc
rcll
jne
lret
or
mov
or
jl
pop
ja
pop
mov
pop
loop
div
adc
scas
xor
insl
xor
mov
movsb
adc
js
add
jno
sub
les
std
mov
or
and
stc
pop
out
mov
inc
inc
aam
enter
jae
mov
sub
mov
add
je
dec
pushf
dec
sbb
push
push
adcl
in
inc
jmp
jl
xor
pusha
jo
mov
dec
add
jg
push
data16
push
xor
sahf
imul
pop
into
popa
int
repnz
out
pop
pop
or
insb
testb
fsts
aam
add
data16
mov
outsl
adc
sbb
jmp
movsb
cwtl
sub
cmp
mov
sbb
push
test
fincstp
cmp
loope
ja
mov
sbb
add
insl
xor
pop
cwtl
dec
outsb
lcall
mov
sub
je
out
jns
popf
adc
test
cld
je
adc
jg
sub
mov
icebp
jl
in
test
push
outsb
cmp
stos
flds
dec
push
jge
das
dec
cmpl
xchg
int3
jmp
add
leave
test
enter
subb
ljmp
popa
insb
into
jne
decl
xor
jb
add
in
ret
push
add
fndisi(8087
push
pop
add
es
orb
or
cmpsl
jbe
mov
pushf
sbb
popa
add
rolb
rolb
xchg
sbb
pop
fstp
mov
and
lcall
insl
shll
jge
clc
and
in
notl
into
pop
ficoms
out
push
cmp
sub
mov
xchg
loopne
xor
stc
jle
popf
stos
test
cmp
mov
jne
sub
test
pop
addr16
aaa
cmp
push
lret
lcall
aam
cmpsl
faddl
int
cmp
mov
ja
ja
jp
cmp
out
fsts
das
jl
leave
test
movsl
fcompl
mov
mov
dec
es
aad
in
mov
xchg
mov
pusha
add
lcall
add
stos
and
ret
js
les
add
repz
test
cmp
jb
pop
or
or
rcrb
pop
aam
insb
push
mov
das
push
ret
enter
jge
xor
xchg
sbb
xlat
daa
imul
jns
pop
ljmp
sub
hlt
hlt
mov
sub
pop
shrb
inc
pop
pop
lahf
stos
add
notb
jns
sbb
sahf
shlb
mov
std
and
sub
mov
cli
fistpl
and
testb
dec
dec
ficoms
aad
mov
lea
inc
daa
pop
push
add
adc
pop
fldt
gs
sub
adc
pusha
int3
shl
in
and
dec
call
pop
push
xlat
test
loope
mov
jp
leave
dec
xlat
lods
pop
daa
sub
xlat
dec
mov
and
aam
jmp
add
inc
lea
cwtl
es
sahf
or
xor
add
push
dec
mov
xchg
xor
inc
ret
jo
xchg
imul
fdivl
test
loope
mov
and
fbld
jno
call
imul
dec
push
mov
xchg
adc
jb
scas
das
jmp
adc
xchg
lds
jecxz
inc
xor
adc
mov
pop
les
popa
movsb
adc
mov
lret
sub
dec
sti
xchg
scas
push
xchg
mov
mov
xor
sub
push
or
inc
outsb
sbb
mov
mov
sbb
outsl
ss
jbe
fwait
loop
mov
mov
pop
sbb
fnop
inc
sbb
sbb
loop
adc
rcr
adc
xor
pop
mov
out
adc
mov
es
fdivp
pop
js
data16
hlt
adc
lahf
cld
cmp
sub
inc
or
cmpsb
and
push
push
dec
mov
cld
repz
mov
mov
je
pop
sub
mov
mov
xchg
sbb
and
popf
popf
mov
mov
outsb
push
and
insl
out
pop
das
inc
cmp
mov
out
shr
push
mov
sub
insb
xchg
loope
ret
sub
js
jle
adc
sbb
sahf
data16
out
lret
out
in
loop
pop
mov
mov
push
fidivrl
add
or
dec
inc
jp
rcrb
das
jns
cmpsb
add
pop
xchg
cmc
iret
scas
push
lods
sbb
mov
pusha
into
push
jg
add
pop
test
sub
sbb
cli
pop
dec
xchg
and
mov
fwait
sbb
lds
ss
in
push
xchg
addb
test
inc
in
mov
lea
and
adc
cmp
inc
dec
and
mov
jmp
xchg
lds
clc
and
js
xlat
jge
add
mov
testl
jae
lds
cwtl
lods
scas
mov
mov
scas
xor
jo
outsb
test
cld
jp
in
dec
pop
cmc
add
sbb
rorb
imul
add
js
fidivs
jge
xor
mov
push
iretw
fmuls
loopne
cmpsl
clc
add
fmul
add
xchg
cwtl
ja
cmc
int3
sbb
inc
and
jge
push
int3
rorl
loopne
cmpsl
sub
jbe
icebp
jl
sub
out
jp
sahf
dec
jmp
das
sti
insb
or
icebp
aad
aaa
imul
lret
mov
xchg
jns
pop
pop
sub
sbb
cs
insl
push
addr16
sbb
aam
xchg
lahf
adc
scas
aaa
scas
jne
test
pop
fwait
sbb
or
mov
push
es
adc
cmp
xchg
or
pop
dec
inc
fsubp
divb
and
pop
sub
mov
jnp
mov
push
add
jo
scas
js
push
je
mov
enter
jmp
xchg
cmp
add
decb
mul
lret
mov
lds
ret
int3
sub
sub
roll
push
and
xchg
imul
aad
xchg
mov
aas
cld
fwait
pop
mov
adc
mov
push
sub
pop
shl
pop
std
push
jge
lea
xchg
jmp
xlat
iret
xor
mov
test
xchg
je
out
or
shrb
movsl
xlat
mov
and
imul
cmp
adc
sub
ret
adc
inc
pusha
shlb
add
xchg
inc
cmp
xchg
xchg
in
or
sbb
dec
loopne
jmp
mov
and
jmp
xlat
inc
sub
cltd
pop
loop
push
es
pop
bound
mov
mov
les
mov
popf
push
pop
out
add
fwait
pushf
sub
stos
add
loopne,pt
mov
inc
repz
decl
out
pop
je
inc
sub
lds
sbb
push
insb
ljmp
jle
ja
push
lods
movsb
add
cmp
adc
dec
dec
cwtl
push
rcrb
jnp
sti
add
dec
pop
adc
inc
jne
negl
sub
jge
jp
add
mov
sbb
mov
daa
es
cmp
sbb
call
shr
sbb
mov
shrl
pop
fiadds
jmp
iret
push
sub
jp
xor
pushf
jno
pop
pop
fstp
push
loop
jp
pop
sbbl
fwait
add
pop
cmpsl
pop
inc
shll
aam
daa
cmpsb
mov
dec
push
mov
jnp
fistpll
adc
pop
data16
ror
xchg
xchg
jp
int
ss
fwait
lock
xor
ss
push
int3
fcompp
xchg
add
imul
in
xor
cmp
mov
aad
into
ret
fs
daa
test
mov
mov
sbb
and
inc
cmp
lods
inc
xor
adc
out
push
cmp
or
cmpsl
mov
push
adc
pop
pop
fs
dec
imul
inc
jns
loopne
pop
push
adc
or
cmpb
jmp
or
sbb
pop
cmp
push
jg
imul
xchg
ds
pop
decl
adc
inc
xchg
pushf
mov
xchg
add
imul
xlat
push
sbb
xchg
xor
jle
push
add
pushf
cmp
in
add
or
mov
push
in
mov
mov
xchg
pop
inc
mov
addl
in
sbb
test
sub
in
jno
int
es
repz
popa
xchg
ja
or
jo
sti
leave
pop
outsb
sbb
in
lods
lret
cmpsl
mov
je
movsb
xchg
sti
cmp
mov
sbb
aas
stos
or
iret
lea
dec
xlat
adc
and
cmpl
cld
pusha
data16
out
xchg
push
pop
test
add
pop
adc
icebp
pop
jno
fs
ret
test
mov
xchg
mov
loope
pop
push
sbb
mov
out
in
inc
mov
inc
mov
daa
mov
push
dec
jmp
cmp
jmp
and
pop
sub
sub
mov
inc
sub
out
xchg
ret
enter
pop
sbb
int
loop
jp
xlat
lret
mov
cmpsb
out
and
test
sub
mov
daa
push
xor
test
adc
imull
lahf
dec
dec
shlb
out
lret
movsl
pop
out
xchg
inc
and
jmp
push
jge
cld
mov
shlb
divl
push
adc
stc
jbe
jl
fmull
int
repnz
inc
pusha
les
xor
lea
jns
sub
negl
leave
push
jge
ds
or
clc
aam
pop
cmp
sbb
nop
push
sub
test
xor
pushf
mov
fmul
loop
scas
cmp
ja
xlat
nop
cmp
lock
addr16
jg
or
inc
daa
enter
std
movsb
gs
fdivr
add
xlat
jecxz
mov
mov
adc
rcl
cmp
sbb
push
add
addr16
inc
xchg
in
and
inc
push
lcall
jne
pop
aad
popf
je
in
inc
ret
xchg
mov
sub
ret
lods
lea
mov
pop
shrb
icebp
jnp
insl
pmulhw
jge
rclb
inc
aad
push
mov
stc
jmp
popa
rcrl
movsb
aaa
inc
cs
pop
inc
cmc
and
sub
lea
or
pop
mov
ror
pop
repz
mov
inc
inc
ds
mov
std
mov
outsl
scas
sbb
in
sbb
mov
in
adc
pushf
sub
add
mov
mov
fnstenv
movsl
test
sahf
sbb
jp
in
xorl
dec
xchg
rorb
sar
mov
inc
xchg
sbb
inc
push
adc
fwait
and
push
inc
imulb
cmpl
rcl
es
cmp
pop
jmp
jns
pushl
push
adc
mov
xor
clc
repz
imul
orb
ss
mov
xor
lretw
in
jg
mov
push
dec
loopne
jns
jne
xchg
dec
xchg
in
adc
rcr
test
pop
cli
rolb
inc
or
lods
cli
mov
movsb
dec
mov
mov
icebp
dec
sub
mov
in
or
enter
test
lods
jnp
and
mov
sub
adc
mov
adc
lahf
out
movsb
push
jge
imull
inc
out
je
adc
fcoml
adc
sbb
imul
stc
xchg
adc
push
lea
nop
shl
aad
daa
mov
push
mov
iret
out
int
cmp
push
pop
mov
int
and
xchg
cld
lsl
mov
dec
pop
and
ljmp
sti
sahf
jle
jg
sbb
cmc
ja
mov
aas
dec
mov
sbbb
call
arpl
and
fmulp
fdivr
idivb
aad
jmp
scas
cld
push
das
ds
ror
pop
rorb
insb
mov
lcall
loop
loope
lods
imulb
aas
popa
push
lret
imul
mov
out
ja
pop
scas
jae
mov
hlt
pop
jae
jecxz
xchg
xchg
dec
bnd
aas
and
in
lods
ret
add
cmp
sahf
or
or
test
imul
push
mov
pop
xchg
cwtl
in
jmp
cli
dec
jne
lahf
push
adc
xchg
daa
mov
notl
jmp
pop
scas
fsubrs
cmovb
and
mov
sbb
int
pushf
mov
daa
cld
mov
sahf
cld
ljmp
gs
xchg
sub
sti
and
aaa
stc
fistl
cmpsl
lret
aaa
femms
rcll
pop
outsl
mov
cmpsl
lods
inc
lods
cmp
jge
test
xchg
inc
rolb
cli
fnsave
mov
leave
mov
icebp
dec
add
test
mov
mov
inc
outsl
das
test
cmp
test
mov
aam
jbe
mov
push
and
fsubrl
insl
push
iret
mov
push
xchg
xchg
pop
call
aas
xor
jb
dec
mov
xor
insl
cmc
adc
js
lods
jbe
mov
outsb
pushf
dec
jl
dec
jmp
iret
xor
fidivl
inc
inc
loop
mov
push
andb
add
mov
mov
inc
rcr
in
mov
sbb
inc
xlat
pop
add
in
mov
xchg
ja
repz
imull
movsl
mov
pop
xchg
out
fstpl
jmp
add
rcll
jo
into
enter
int
fmull
dec
in
cmc
aaa
and
lea
cli
add
mov
test
mov
cmp
mov
cmp
pop
dec
pop
imul
xchg
fcmovb
ja
shlb
mov
jbe
iret
decl
dec
fidivrs
sbb
in
push
cmp
std
inc
pushf
mov
out
fadds
sub
xor
xlat
repz
test
ss
sbb
lock
pushf
cli
loop
add
or
mov
sbb
fstl
dec
inc
dec
in
inc
mov
and
jo
stos
cmp
loopne
incb
xchg
lea
scas
lods
das
ret
lcall
mov
mov
pop
adc
and
popf
cmp
lcall
mov
imul
push
enter
fucomi
jo
cmp
in
daa
push
lods
push
ss
in
cmp
jbe
daa
cmp
ds
sti
inc
rcr
shlb
xchg
out
xor
popa
shll
loopne
or
das
mov
and
call
sbb
cmp
xchg
cmp
out
sub
xchg
lahf
ret
push
cltd
xor
sbb
std
add
mov
daa
lret
fs
cmp
mov
adc
mov
mov
roll
stc
test
add
inc
int3
mov
shll
add
or
sarb
fsubrs
jmp
xchg
rep
sub
add
fsubl
inc
test
sub
mov
push
ror
fstl
lret
push
mov
mov
int3
lret
inc
push
push
gs
adc
sbb
je
push
dec
and
inc
les
sbb
push
xor
in
lahf
cmpsl
or
inc
mov
repnz
cwtl
popf
test
push
gs
in
xchg
xor
lock
pop
adc
xchg
inc
lahf
ljmp
mov
stc
cmpsb
out
sbb
pop
jae
sub
dec
pushf
jp
pop
fsubs
adc
inc
outsb
ljmp
lds
mov
in
inc
inc
je
adc
jb
aaa
shrl
icebp
pusha
or
push
lret
pop
mov
xchg
andl
cmp
sahf
mov
addl
mul
fiaddl
mov
xchg
sbb
push
es
scas
xchg
aad
push
dec
mov
inc
fwait
adc
add
ds
sub
test
or
outsb
cmp
cmp
push
mov
sbb
paddq
in
ss
lret
pushf
adc
mov
fstpl
push
bound
js
les
push
repz
cmp
stos
fs
sub
add
inc
mov
dec
jg
and
or
sub
loope
pop
in
inc
call
jmp
ljmp
pop
jecxz
imul
jmp
icebp
fimull
push
jmp
jmp
std
cwtl
xor
push
call
adc
push
nop
add
lods
clc
add
sbb
test
fcmovnb
mov
test
mov
push
jno
cmp
ret
sarb
xlat
arpl
test
fisubs
clc
inc
adcl
xchg
cmc
pop
adc
xchg
inc
push
ret
jb
push
mov
fcompl
mov
adc
lock
aam
sbb
pop
jno
es
adc
pop
arpl
mov
jne
and
shll
daa
hlt
sti
sub
das
lods
imul
cmc
and
mov
adc
mov
adc
mov
test
repnz
pop
insb
push
addr16
movsl
and
je
test
lods
in
push
nop
pop
mov
cmpsb
shlb
xor
inc
mov
loopne
daa
int
iret
stos
mov
aaa
fwait
stos
rep
aas
or
pop
fistps
popl
inc
test
dec
sbb
pop
stos
xchg
xchg
xor
out
cli
mull
popf
out
cwtl
hlt
xchg
rolb
mov
xchg
xor
jne
popaw
add
shll
xor
insb
jg
in
repnz
pop
lret
out
mov
aad
lds
adc
pop
xor
cmp
xchg
cli
int3
cmp
mov
addb
and
popa
rcr
enter
or
sbb
imul
sub
loop
aad
mov
inc
and
lods
push
mov
es
jno
sbb
mov
mov
xor
jg
sbb
stos
adc
repnz
inc
ret
mov
fists
jnp
out
mov
pop
jmp
mov
dec
add
xor
lahf
pop
ljmp
pusha
int
add
sti
and
jae
dec
pop
decb
jno
fcoml
push
pop
mov
and
fcmovne
data16
jno
push
iret
shl
out
xchg
popa
sar
mov
inc
sub
jb
shl
add
bound
out
and
popa
cwtl
cmp
std
nop
pop
iret
pop
push
pop
and
mov
jae
xchg
mov
leave
jg
mov
shrl
mov
cmp
fistl
push
ljmp
cmpsb
add
or
mov
inc
xchg
lea
push
insl
ds
push
push
xchg
inc
lret
or
mov
sub
pusha
jbe
cli
into
mov
cltd
hlt
cwtl
ljmp
es
rorb
movsb
in
inc
sbb
mov
inc
pop
cwtl
dec
sbb
fsubrl
and
add
sub
adc
cmp
inc
jl
jne
outsb
jns
inc
mov
mov
loopne
xchg
cmp
shrb
jo
xchg
lcall
xlat
icebp
jl
or
fdivrl
sbb
fwait
daa
sub
dec
xchg
or
add
adc
mov
add
xor
lcall
pushf
or
sbb
into
mov
lock
xor
and
scas
fisubl
mov
popa
push
push
pop
aad
pop
jecxz
cli
aaa
je
daa
mov
pop
sbb
or
outsb
xor
inc
into
mov
add
pushf
push
stc
test
rcrl
pop
fwait
xchg
xor
adc
lret
cs
popl
sub
pop
jae
out
jae
cmc
pop
add
icebp
cmp
cltd
cmp
repz
jnp
xchg
jb
fadds
movd
mov
and
jp
ds
inc
push
mov
mov
jp
adcl
dec
jns
arpl
and
or
push
ss
aad
rclb
xchg
stos
push
std
or
xlat
outsb
into
or
jnp
jbe
aad
leave
push
add
inc
or
mov
leave
push
and
pusha
scas
and
xor
mov
lcall
pop
cli
pop
and
mov
mov
push
inc
gs
push
xlat
inc
int3
mov
jns
mov
ficompl
lds
daa
mov
insb
dec
lock
jno
or
jae
cli
je
stos
cmpsl
aam
xor
mov
dec
sar
lds
enter
xchg
mov
jae
mull
ficoms
cmp
or
les
sti
or
stos
lahf
xor
or
sahf
fildl
lea
fistl
lret
cmp
push
mov
pop
push
insb
lcall
xlat
inc
repnz
mov
ss
push
or
adc
test
out
push
cmpsl
mov
scas
push
push
lcall
push
int
cmp
lret
push
test
or
jns
mov
xchg
push
lret
pop
xchg
jbe
aas
mov
repnz
out
sub
pusha
sahf
xchg
jl
mov
jmp
mov
xor
mov
cmp
ret
sub
pop
jecxz
sbb
sbb
repnz
scas
push
xchg
loopne
imul
fisubrs
adc
xchg
aad
sub
or
push
and
cli
fnstsw
or
je
out
test
pop
rorb
xor
aaa
lods
mov
or
in
ss
push
fisubrl
or
fnstsw
jl
bound
add
outsl
jne
adc
mov
bound
gs
xchg
push
cmp
lahf
cltd
lcall
loope
cwtl
je
and
dec
out
stos
cmp
out
cmp
stos
mov
mov
lret
sub
sub
mov
cmp
aas
idivb
mov
out
mov
or
cli
xor
inc
xor
out
aaa
sarl
adc
outsb
xor
mov
pop
je
ja
int
cmpsl
into
pusha
es
jge
rcl
clc
sub
mov
and
pop
and
jo
mov
movsb
aaa
mov
in
js
inc
pop
and
dec
jno
mov
inc
in
mov
dec
daa
or
jbe
sub
pusha
jp
dec
and
lret
stos
sbb
out
sti
adc
and
hlt
add
xor
bound
pop
xor
test
or
adc
out
pop
bnd
jl
cwtl
fisttps
jp
sub
fisubl
inc
push
imul
loope
adc
mov
scas
inc
inc
mov
roll
std
inc
mov
pop
sub
jmp
pop
jne
cli
jnp
dec
adc
fimull
and
fwait
xchg
jb
pop
push
outsb
xchg
gs
jno
cwtl
mov
push
jns
mov
add
scas
sub
inc
cmpsl
test
sub
test
xor
adc
add
xlat
fimull
iret
push
inc
test
fistl
jmp
dec
cltd
fistps
cwtl
inc
dec
push
sub
rorl
xchg
fwait
pusha
jecxz
out
out
mulps
pop
mov
addl
cli
test
cmp
pop
sbb
and
cmp
mov
test
xor
hlt
syscall
xchg
jecxz
dec
repz
ss
mov
insl
xchg
ljmp
mov
mov
rol
or
leave
orb
lahf
and
sub
mov
cbtw
fwait
adc
test
and
fnstsw
add
arpl
aas
lcall
jge
out
adc
adc
xchg
out
xor
mov
adc
or
insl
aaa
jb
push
fimuls
mov
sbb
popa
fdivrp
addl
mov
push
cmp
mov
call
mov
pushf
dec
lcall
pusha
add
push
jp
dec
shrb
xchg
test
mov
jmp
hlt
idiv
aaa
repnz
mov
pop
jge
repnz
mov
int3
sbb
fwait
xlat
inc
mov
in
xor
stc
jg
insb
push
adc
sbb
or
mov
push
pop
rclb
cli
out
jo
shrb
pop
push
popf
ja
std
adc
ljmp
mov
iret
scas
loopne
stos
sarl
xor
in
adc
sub
adc
daa
test
cmpsb
mov
repnz
mov
push
mov
stos
std
dec
cltd
inc
add
loopne
cmpl
add
icebp
iret
les
mov
jecxz
shlb
push
pop
push
imul
arpl
xor
or
in
and
mov
add
pop
loope
pop
cmc
inc
xlat
int3
std
inc
test
cmc
cmp
sub
mov
adc
xchg
int3
or
mov
inc
in
adc
test
dec
cwtl
std
popf
cmpsb
push
add
sbb
dec
int
inc
js
les
pop
fstps
xor
dec
mov
movsb
xorb
lea
and
dec
and
xchg
lods
cmp
sub
shlb
mov
roll
pop
push
jge
jge
fistpll
lods
dec
jae
hlt
cmpsl
push
mov
jecxz
das
jmp
mov
pop
jp
xlat
push
and
repz
push
shll
jbe
dec
cmpl
dec
pop
push
js
js
sub
mov
xchg
outsb
sbb
xor
pop
out
repnz
test
test
sar
fldcw
in
push
enter
push
cmp
sub
mov
inc
into
dec
data16
popa
std
bound
fisttpl
insl
lret
jl
jno
jnp
or
jno
dec
mov
xchg
add
cwtl
scas
frstpm(287
jb
hlt
xchg
jecxz
bound
insb
sbbb
add
jp
loopne
popa
jno
sahf
inc
out
adc
mov
sahf
ds
sarl
pop
test
subb
out
outsb
outsb
adc
sbb
sbb
cltd
or
inc
and
add
rcrb
fildll
enter
cmp
push
imul
into
iret
sub
lret
outsl
out
jns
mov
mov
les
out
aam
mov
xchg
insl
adc
and
insl
cli
dec
pop
push
dec
sbbl
push
loope
cli
adc
outsl
dec
scas
aas
cmpsl
dec
pop
xor
dec
out
loop
sub
fcmovnu
jo
int3
add
daa
ds
fisubs
sub
xlat
push
cli
inc
insb
mov
xchg
pop
xchg
sbb
inc
repz
xchg
push
push
cmp
outsl
aam
sbb
scas
xchg
inc
dec
add
call
mov
imul
sbb
push
push
mov
jmp
cmc
inc
sub
mov
fldenv
jmp
fmuls
fnstsw
xchg
xor
dec
je
cmp
sub
or
dec
push
jae
cmp
push
ljmp
js
fidivrl
cmp
mov
push
dec
es
or
jae
imul
pushw
push
out
add
jmp
pop
cmp
adc
outsb
jae
jmp
jnp
or
hlt
out
popf
loopne
mov
fistpl
scas
jns
mov
sbb
out
leave
lds
lahf
xchg
shlb
vmovd
pop
ljmp
into
mov
popa
jno
xchg
push
stos
fwait
syscall
rorb
pop
jecxz
int
cli
mov
rolb
dec
mov
rclb
lods
aam
jae
das
sub
xchg
xor
nop
sub
mov
outsb
pop
cmpsb
cmp
into
ret
pop
push
push
sti
loop
dec
int3
pop
dec
sub
sub
jecxz
or
add
lret
sti
ds
sti
inc
aad
sub
setae
dec
lret
adc
pop
push
jno
sahf
push
repz
push
mov
in
adc
in
adc
and
jmp
dec
push
in
lcall
in
inc
sti
jge
movsb
jecxz
dec
data16
mov
dec
cltd
std
add
je
push
mov
inc
cmp
mov
repz
mov
sub
subb
rcrl
add
mov
aaa
xor
push
sahf
push
aaa
das
out
cmpsl
jne
sub
jmp
or
cmc
push
jbe
cwtl
mov
or
mov
sub
mov
xchg
pop
faddl
adc
xchg
insb
adc
sub
lahf
jmp
orl
xchg
or
shll
sbbl
inc
ret
jae
xor
jl
push
jmp
cmp
sub
shrb
shrb
inc
jns
iret
sbb
jb
int3
pop
decb
shl
into
or
and
loopne
pop
sti
jg
add
and
cs
pop
or
int3
jno
push
mov
sbb
ds
pop
jae
cli
and
pop
pop
outsb
cmp
shrb
sub
rolb
es
out
inc
jnp
cmp
add
andb
sub
dec
xchg
bound
js
mov
cmp
xchg
lods
push
mov
loopne
sti
lret
fmul
sarl
cmp
xchg
iret
sarl
jno
xor
scas
stos
sarb
popa
pop
lock
jecxz
xchg
mov
ret
cmpb
fstp
shrl
inc
mov
jno
imul
xor
jp
inc
pop
js
or
xchg
dec
xchg
in
rol
push
mov
in
js
add
fsubr
sbb
or
mov
mov
mov
je
nop
ret
fistps
mov
push
cwtl
lods
or
aas
jge
enter
shl
rcrb
xlat
cmp
push
sti
cmpsb
sub
es
ljmp
jns
mov
adc
adc
imul
pop
or
xchg
jg
jl
push
dec
push
ret
je
subl
pop
and
je
stc
pop
loope
adc
sti
mov
insl
push
adc
mov
stos
xor
xchg
pushf
mov
push
ficoms
imul
cltd
xchg
je
ja
xor
xor
je
int3
xchg
sbb
lahf
inc
xor
cmp
pop
mov
and
pop
add
xor
repz
aad
icebp
mov
rorl
jae
stos
es
pop
jg
popf
ja
lret
cmp
adc
das
fmul
push
repnz
push
or
push
scas
jo
mov
rolb
mov
cmpsl
cmp
je
je
stos
mov
repnz
gs
mov
sbb
and
stc
jo
pop
sahf
pop
jp
mov
pushf
hlt
adc
sub
dec
int3
fs
jo
or
adc
dec
push
or
hlt
mov
dec
mov
sbb
and
mov
adc
push
faddl
imul
lahf
mov
loop
mov
sbb
pop
jle
sub
lock
add
or
push
fistpl
adc
lods
xor
sub
jne
mov
cmpsb
es
es
sti
jl
mov
ljmp
je
arpl
push
jmp
mov
es
mov
lea
or
add
lods
call
mov
repnz
push
mov
xchg
fiadds
xlat
add
mov
gs
loope
gs
adc
push
adc
cmp
fs
or
icebp
xlat
call
cs
jbe
adcb
sbb
out
cs
pop
sahf
sbb
or
push
mov
xor
inc
mov
ds
popf
cmp
cwtl
call
idivb
xor
mov
insl
movsl
je
out
adc
pop
mov
jne
shlb
popa
insl
sti
mov
leave
sub
nop
or
jge
fisubl
add
mov
int3
addr16
aas
mulb
addr16
lret
mov
sbb
xor
push
pop
addr16
insb
pop
jle
hlt
mov
les
push
add
or
dec
leave
cmc
xchg
and
ljmp
adc
cs
in
js
and
xor
push
push
and
fidivs
inc
and
jbe
daa
js
or
xor
add
or
jo
sub
xchg
jbe
addl
dec
mov
sti
xchg
mov
sbb
cli
es
enter
rolb
negb
stos
mov
popa
sbb
ss
cli
out
pop
jg
test
inc
scas
sbb
fimuls
jmp
pop
fs
mov
fiadds
in
mov
daa
xchg
scas
mov
int3
add
dec
pop
push
fstpt
mov
cli
sti
hlt
outsb
lahf
xchg
inc
sub
push
sahf
mov
divb
mov
sub
ljmp
cmpsb
out
fidivs
sbb
fnstcw
push
xor
and
xor
js
fwait
punpcklbw
xchg
clc
pop
dec
pop
cmp
fbstp
imull
adc
bound
aaa
aam
adc
inc
fsubrs
int
in
pusha
jecxz
push
adc
xlat
or
rorl
not
ret
mov
and
jecxz
pop
mov
ficoml
mov
lahf
dec
xchg
pop
clc
push
sbb
gs
insb
fbld
xchg
adc
add
push
adc
lret
dec
pop
and
mov
xor
xchg
xchg
aaa
arpl
sbb
pop
leave
dec
push
xor
push
fidivrs
iret
mov
int
jmp
jae
int
outsl
fnsave
jg
arpl
cltd
cmp
inc
and
fmuls
xchg
pop
subl
rol
cmpsl
cmp
dec
xabort
inc
push
mov
and
inc
inc
stos
mov
int3
test
inc
and
mov
cmp
jnp
inc
jnp
inc
jno
ds
dec
fwait
dec
pop
push
cmp
sti
mov
popf
pop
cmpsl
jo
enter
cs
pop
stos
addr16
jbe
pop
mov
fs
sbb
daa
xor
jbe
lods
imul
fimuls
imul
stc
cmp
xor
xchg
mov
roll
dec
mov
inc
inc
xor
mov
inc
sub
sbb
fbld
inc
jmp
outsl
fidivrs
bound
shrb
stos
dec
in
xchg
sub
mov
pop
mov
fwait
mov
andb
stc
lds
push
mov
jecxz
jnp
mov
mov
popa
mov
push
dec
push
xlat
xchg
inc
cmp
call
pop
cltd
jne
test
mov
popa
lret
in
inc
loop
out
mov
cli
mov
call
out
mov
es
push
ss
xchg
adc
sbb
jno
inc
rep
cmp
pop
or
repz
lods
jge
cmpsl
add
jmp
push
add
aad
dec
dec
xchg
mov
push
and
addb
dec
adc
fldcw
clc
es
fiadds
imul
xor
or
repnz
repnz
test
mov
push
push
fsubrs
outsl
cwtl
xchg
and
pusha
data16
rorl
inc
lcall
push
pop
cmc
mov
icebp
xor
and
movsb
fdivs
in
scas
ret
test
int
push
sbb
movsb
mov
sub
fisubl
push
xlat
mov
mov
mov
inc
pop
inc
push
add
ret
repz
scas
jp
inc
and
in
ss
push
cmp
sbb
xchg
arpl
pop
sbb
pop
sbb
mov
dec
clc
xchg
stc
cmp
mov
js
outsl
movl
jne
mov
inc
sbb
test
add
add
push
daa
jge
inc
popa
imul
sbb
dec
sti
cmp
pop
shl
dec
testl
movsl
xor
xchg
inc
dec
inc
xor
movsl
sbb
data16
xor
jo
or
into
jns
lahf
dec
stos
ficomps
dec
imul
and
out
jbe
daa
inc
test
jns
enter
lock
sbb
xchg
jns
add
outsl
push
push
mov
test
insl
cltd
mov
ljmp
jmp
push
repnz
or
aaa
lcall
dec
pop
scas
mov
js
mov
adc
icebp
scas
inc
mov
add
jle,pn
mov
jle
cmpsb
aaa
das
adc
gs
xchg
imull
fwait
shl
jo
imul
mov
int3
jb
lret
rcr
add
add
or
stos
repnz
inc
out
iret
arpl
repnz
jmp
push
pop
and
push
pop
mov
push
loop
out
push
push
aam
test
lea
and
test
test
scas
inc
inc
push
or
out
cltd
sub
and
pop
mov
lret
xchg
idivb
pop
out
gs
jg
ds
outsb
add
mov
loope
push
dec
push
inc
test
mov
inc
or
filds
pop
jp
imul
inc
loope
push
jnp
inc
jmp
out
out
outsl
ds
adc
jo
dec
lea
lret
add
mov
adc
sahf
iret
push
mov
test
jmp
test
movsl
cmp
test
in
insb
xchg
xchg
push
lea
jae
das
cmc
inc
shl
jnp
push
shrb
and
jg
mov
aaa
cltd
and
scas
mov
sub
mov
adc
push
cltd
push
pop
mov
addr16
jbe
in
call
add
adc
test
jmp
into
add
push
xchg
push
jp
les
outsl
loope
adc
out
mov
pop
in
loopne
sbb
or
mov
inc
lods
pusha
sbb
inc
in
adc
lahf
mov
inc
ret
nop
daa
sbb
adc
fstpt
in
push
mov
dec
cmp
daa
mov
mov
cltd
mov
adc
test
pop
add
les
adc
mov
jbe
add
xor
sbb
adc
jns
pop
nop
push
stc
fstpl
pop
call
enter
cmp
daa
xchg
outsl
jp
psubb
push
adc
add
sub
mov
jle
jg
icebp
cmp
mov
or
pop
fisubrl
insl
outsl
add
das
stc
dec
pop
dec
cmpsb
and
xchg
lock
mov
sbb
in
outsb
int3
and
subb
jmp
xor
movsl
sahf
pop
xlat
mov
gs
bound
rclb
inc
jge
xor
addr16
pop
js
cmp
pop
sarl
pusha
dec
and
leave
scas
jbe
lahf
sbb
jne
mov
sub
lea
das
push
jb
dec
lret
inc
mov
push
mov
sarl
mov
out
lcall
pusha
imul
adc
shll
fs
ret
inc
jb
pop
out
enter
fadds
or
jbe
ljmp
xchg
stos
jle
popa
pop
dec
mov
sub
int3
pop
pushf
dec
xchg
push
hlt
mov
mov
aas
cwtl
ds
in
js
lahf
sub
or
jp
das
add
shr
cltd
leave
pop
lahf
ss
sbb
sub
rclb
ja
xchg
aas
sti
sub
lret
sahf
push
je
mov
jbe
push
sub
pushf
in
cli
and
inc
sub
adcb
sbb
dec
addr16
jnp
cmpsb
imul
adc
sbb
jecxz
cmp
dec
ret
add
test
fildl
test
or
testb
and
rolb
mov
pop
push
cld
dec
insb
cmc
sub
add
stos
adc
ljmp
dec
dec
jg
or
adc
aam
mov
aad
mov
bound
loope
ss
frndint
je
and
out
outsb
sbb
iret
mov
mov
gs
cmp
inc
mov
adc
sahf
lods
xchg
sub
fisubs
popa
fstpl
ret
ficoms
sti
mov
pushf
mov
dec
mov
iret
lods
pop
jmp
or
pop
pop
adc
jbe
jne
mov
dec
add
jno
cmp
mov
imul
iret
incb
inc
pop
add
pop
sbb
cmp
lods
pop
pushl
int3
cmp
mov
scas
sbb
xchg
mov
data16
std
xchg
adc
out
xor
shl
adc
mov
out
shlb
inc
cmp
scas
sbb
mov
xchg
cmpsb
mov
in
jp
jns
icebp
add
imul
les
test
subl
xor
adc
out
into
adc
lret
repz
js
aam
xchg
scas
jb
rorb
dec
arpl
push
push
xchg
xor
push
xchg
inc
mov
push
test
jo
xchg
mov
aam
jb
cmc
mov
xchg
cmp
icebp
xchg
fwait
addl
jp
in
lods
mov
jmp
sub
stc
dec
push
xchg
xchg
int3
xchg
cmp
out
xchg
loopne
and
ss
gs
and
jo
cmp
sub
outsl
push
jp
lds
aaa
jne
cmp
mov
leave
xchg
cwtl
ja
test
cmpsb
scas
mov
int3
fmul
in
ss
xor
loope
in
mov
mov
test
jmp
shr
movsl
xor
mov
add
fstl
or
add
xor
mov
mov
cs
mov
pop
inc
inc
lcall
lds
icebp
adcb
add
jl
mov
sub
or
out
add
or
and
sub
out
pop
pop
lock
and
int3
or
mov
add
mov
mov
mov
mov
test
cmp
adc
leave
inc
pop
pop
call
lods
iret
aad
jmp
rcrb
xchg
lods
mov
stos
sub
data16
sub
leave
cltd
fistps
mov
lahf
or
je
cmpsl
loope
push
daa
icebp
lret
out
setne
sub
push
or
stos
jle
cmp
adc
jmp
sbb
stos
lds
and
mov
aam
cmp
xlat
out
push
lcall
hlt
xchg
inc
fneni(8087
or
loopne
jl
sahf
add
movsl
adc
and
fidivl
rolb
icebp
push
jg
js
shrb
mov
nop
adc
in
mov
add
adc
and
shll
sahf
rep
fisubrl
fimull
pop
and
shll
je
daa
shlb
sub
mov
adc
cmp
dec
ret
ret
lods
sbb
out
inc
test
pop
mov
and
mov
bound
sub
push
and
shrb
loope
sub
xor
jl
fs
ljmp
jo
fisttps
shrb
jb
xchg
cmpsl
mov
outsb
jge
pop
sbb
lods
cli
adc
xor
rorb
add
jo
inc
mov
lcall
stos
adcb
lock
push
pop
test
and
adc
cmp
jb
adc
cld
jnp
dec
es
scas
jns
pop
inc
mov
cmp
divps
imul
idivl
push
scas
fisttpll
jg
push
insl
pop
incl
hlt
push
push
dec
pop
jecxz
clc
enter
mov
les
xor
push
push
push
fldcw
clc
lods
push
xor
cmp
sub
arpl
inc
leave
jns
mov
xlat
arpl
divl
and
mov
adc
rolb
lea
xor
pop
and
xchg
daa
pop
out
push
adc
and
lretw
xor
mov
mov
ja
push
mov
mov
fs
pop
in
sti
scas
add
and
imul
and
ljmp
cmp
scas
xchg
inc
mov
movsb
cmpsl
mov
es
scas
mov
in
jae
pop
out
pop
add
in
idivl
mov
stos
xchg
pop
sub
popf
popf
xor
xchg
aas
int
inc
add
dec
adc
sarl
xchg
sbb
mov
sub
mov
sbb
es
out
js
fs
icebp
and
stc
dec
xchg
ret
cmpsl
add
pop
pop
test
jb
sub
push
fistps
cmp
dec
sbb
mov
or
repnz
popf
leave
ja
pop
pop
hlt
mov
sub
xchg
jbe
xor
mov
out
inc
adc
nop
movsl
sahf
enter
push
dec
lret
push
cmpsl
test
jp
add
loope
jp
mov
adc
cwtl
jmp
outsb
sbb
push
pop
stc
icebp
jae
cld
sub
in
fists
sarb
sbb
jnp
stos
ret
fldt
xchg
movsl
cld
sbb
mov
and
pop
xor
lret
mov
arpl
rclb
or
adc
xchg
in
add
or
sub
mov
les
and
push
sub
xchg
mov
pop
push
lea
add
dec
fsts
negb
in
push
add
test
pop
test
rcll
das
xor
sbb
fs
add
jne
movsb
mov
lea
call
or
out
jb
jl
mov
arpl
and
adc
mov
sub
and
mov
push
movsl
clc
and
mov
mov
jae
in
mov
cmp
pop
jno
push
mov
fwait
in
adc
shl
pop
inc
cmp
pop
mov
call
call
leave
movl
cltd
les
push
dec
cwtl
adc
mul
in
lds
adc
out
inc
push
dec
and
mov
mov
es
jbe
adc
lods
pusha
cmc
aas
add
push
lcall
sub
cmp
in
sub
test
dec
test
adc
mov
jnp
and
inc
lcall
aad
jg
cmp
cmc
cmpsb
cld
cwtl
aam
add
imul
repnz
clc
add
inc
xchg
sub
jbe
or
xlat
sub
xor
test
fdivrl
cs
push
fnstcw
xlat
out
cld
hlt
or
mov
fs
jo
iret
push
xchg
rorl
xor
mov
mov
fcmovu
in
sub
pushf
aam
adc
adc
inc
xchg
sbb
cli
in
mov
inc
test
mov
mov
inc
mov
mov
push
sub
mov
push
push
mov
push
mov
sbb
xor
pxor
in
clc
inc
xchg
mov
mov
call
push
pop
xchg
lret
fwait
out
dec
xor
out
sbb
nop
xchg
mov
and
push
rcrl
popa
cwtl
jns
outsb
jnp
lcall
leave
or
pusha
mov
pop
das
in
pusha
adc
scas
push
cmp
icebp
xor
dec
shrb
scas
cmpl
jecxz
ss
mov
mov
mov
jb
das
aas
sbb
inc
ds
pushf
and
lahf
outsb
dec
pop
mov
mov
and
out
xchg
xchg
mov
adc
push
je
mov
pop
hlt
popa
cmp
mov
xchg
adc
push
cmpsl
cmp
pop
pop
xor
mov
mov
mov
dec
cwtl
test
mov
int3
xor
jp
inc
imul
lods
cmp
test
and
sahf
mov
out
clc
lods
mov
popf
xor
cwtl
xchg
push
scas
fistpll
sbb
push
xchg
inc
bound
shr
std
in
enter
or
adc
iret
sbb
lcall
push
imul
adc
adc
addr16
loope
movaps
add
mov
call
pop
cmp
cltd
loope
lds
pusha
jg
jns
aam
xor
mov
dec
mov
jns
jg
push
das
push
por
movsb
xor
mov
mov
repnz
or
gs
lret
jnp,pt
mov
mov
loope
seta
fld
ljmp
cmp
lret
jmp
jmp
mov
cmp
push
cmp
popf
sti
stos
push
pusha
push
bound
int
push
mov
jns
or
mov
push
vphadddq
movsb
xor
sbb
test
cmpsb
aas
lcall
xchg
lcall
hlt
sub
and
jno
or
roll
scas
clc
lea
sbb
mov
andb
repnz
cmp
jae
fcom
addb
int
cmp
dec
inc
xchg
mov
pop
popa
ret
xchg
xchg
mov
enter
lcall
enter
gs
xchg
outsl
insb
scas
xchg
xor
mov
mov
fisttps
xchg
stos
add
daa
inc
sti
or
and
jg
jns
out
loope
out
hlt
jg
pop
xchg
pop
dec
and
mov
mov
sbb
popf
fdivl
adc
dec
add
and
test
leave
pop
mov
dec
fdivrl
fs
sahf
jns
mov
sub
sbb
add
fildl
lods
jg
das
push
shr
inc
mov
insl
mov
pop
add
in
test
mov
inc
int3
test
or
mov
into
scas
sub
mov
test
sbb
inc
pop
cmp
inc
pop
or
jnp
das
jb
cmpsl
scas
dec
mov
push
adc
xchg
jmp
jb
out
cmp
addr16
icebp
fcomi
or
inc
push
mov
push
cmpsb
into
repnz
dec
xchg
dec
in
roll
push
push
pop
lret
lea
xor
leave
movsl
in
lea
adc
mov
in
dec
xor
dec
mov
out
xor
mov
movsb
mov
jno
inc
cmc
xchg
cltd
jmp
repz
sbb
add
insb
pop
push
jno
outsl
sub
lcall
fbstp
or
xchg
pop
test
cmp
shll
cmp
or
ret
push
insb
push
dec
jo
rorl
mov
dec
adc
mov
mov
mov
int
pop
mov
xchg
and
pop
xchg
inc
pop
push
inc
sbb
pop
js
mov
icebp
gs
and
scas
inc
pop
pop
and
sub
xor
loop
mov
outsb
dec
mov
ret
jnp
mov
inc
pop
out
mov
xchg
mov
jmp
xchg
push
dec
imul
sub
push
test
jge
das
and
xchg
arpl
cld
mov
mov
mov
imul
add
popf
xchg
cmp
mov
dec
and
fsubrl
or
push
dec
in
cmp
push
lcall
enter
pushf
jnp
cmp
mov
popf
insb
dec
ds
daa
outsl
mov
and
lea
mov
add
in
std
add
adc
cmp
pop
mov
xor
insl
test
jmp
test
scas
pop
sbb
xor
cs
push
and
daa
lock
dec
testl
and
push
adc
lods
push
ljmp
pop
sbb
add
je
adc
int3
adc
test
cmp
pusha
rcrl
add
or
pop
mov
push
jmp
adc
xchg
ficomps
jb
aaa
or
dec
xchg
movsb
mov
fstpl
jmp
scas
jmp
fsave
mov
sbb
cmp
cmp
and
ljmp
hlt
clc
fwait
pop
rcr
adc
imul
adc
std
sub
push
cltd
mov
inc
cld
push
add
lock
lods
sub
mov
push
repnz
cmp
and
loope
cmp
dec
pop
jnp
xchg
int3
xor
sub
shl
fildl
xchg
cmp
roll
adc
push
cmpsl
into
fisubrl
sub
sti
pushf
frstpm(287
pop
js
cmpsl
aas
add
cmp
push
scas
sarb
shll
test
mov
mov
push
mov
fs
xor
shl
loopne
lret
jmp
enter
xor
jg
lret
jae
ljmp
dec
add
jmp
push
or
arpl
repz
enter
ss
pop
mov
mov
xor
push
mul
sbb
xchg
out
jo
mov
scas
inc
jo
scas
fcmovnu
xchg
dec
je
in
rcrb
push
popf
lds
lds
call
icebp
or
rcll
mov
xor
inc
push
cmp
add
mov
push
pop
pushl
push
ret
lods
pop
cmpsb
or
call
mov
gs
mov
mov
adc
jge
add
mov
pusha
lds
xchg
repz
inc
mov
fcmovne
add
jp
icebp
hlt
add
sbb
je
lahf
push
repz
mov
loopne
lret
fs
sti
je
jmp
movsb
or
jne
sbb
xor
pusha
mov
xchg
xor
es
cmp
stos
mov
lahf
xlat
cmpsl
jbe
mov
imul
jno
jge
sbb
outsb
jae
sub
sbb
loop
jnp
adc
xor
sahf
jl
mov
ret
fimuls
jnp
rorl
scas
add
xor
nop
adc
dec
push
jbe
int
aas
cld
push
pop
mov
ljmp
push
ds
mov
aas
push
pop
jmp
cmp
loop
in
bound
aaa
je
xlat
xchg
push
jo
dec
gs
ss
pop
retw
test
xchg
jno
pop
fdivs
add
movsb
in
xchg
nop
push
sub
sbb
push
pop
pop
psubsw
daa
pop
lods
stos
test
push
add
cwtl
cwtl
push
shl
push
ljmp
in
shll
ds
lret
push
mov
mov
lcall
nop
and
jno
divb
pop
pop
mov
sbb
ja
mov
fstpt
and
sub
xlat
imul
and
mov
sbb
sbb
sub
dec
cmp
shlb
cmpsb
xor
lcall
addl
hlt
fsubs
js
or
sub
push
push
sbb
or
data16
movsl
mov
mov
loopne
loop
sub
rol
or
cmp
pop
les
jne
xchg
xchg
stc
or
pop
add
push
push
dec
xchg
das
pushf
bnd
mov
pop
dec
ds
arpl
add
add
lret
dec
outsl
cmp
outsb
sub
mov
iret
inc
pop
mov
jb
loop
nop
clc
mov
es
mov
arpl
and
inc
imul
cmpsb
mov
dec
adc
mull
call
xor
xchg
ret
mov
ss
repnz
ret
push
add
push
out
roll
test
frstor
rol
call
pop
icebp
ret
mov
lcall
jp
stos
rcll
sub
xchg
rcll
push
cltd
test
cmpsl
mov
xchg
and
dec
ror
out
imul
xchg
and
adcb
push
clc
cs
adc
arpl
cld
sbb
cld
decb
xor
sbb
fsubrs
cmp
stos
cltd
xchg
push
int
xchg
rcr
pop
jns
mov
mov
adc
scas
in
and
mov
lret
jb
inc
or
int
bound
xlat
std
daa
cmp
jp
xchg
pop
xchg
mov
shll
sub
push
jae
cs
cltd
jp
test
lcall
popa
popf
stos
mov
and
or
ss
mov
pushf
loop
and
sub
mov
sbb
mov
icebp
pusha
sub
inc
pop
movsl
fld
repz
pushf
xor
in
cmpsl
dec
in
bswap
fcmovnbe
jne
popf
in
inc
and
cmpsb
fildll
add
imul
mov
push
outsl
sbb
in
push
sub
daa
les
jp
mov
cmp
cli
jp
testl
clc
jg
jne
pminub
cmp
inc
push
add
stos
pop
ds
bound
dec
xchg
jecxz
pusha
push
cmp
pop
call
sub
sbb
cli
jl
sub
sbb
insl
mov
xor
jle
pop
and
mov
add
ret
xor
xchg
into
stc
mov
popf
cmpsb
cmp
push
jb
bound
xchg
jns
cmc
test
lods
pop
mov
pop
mov
daa
pop
mov
movsl
aaa
int
mov
fidivl
push
push
roll
cmp
mov
lods
xor
jo
xor
pop
sub
sbbb
or
adc
jns
and
mov
sbb
xor
jno
mov
mov
repz
push
fstl
mov
cltd
mov
or
je
mov
ja
pop
add
leave
movsl
cs
mov
dec
loop
sbb
or
outsl
push
pop
mov
jp
mov
in
mov
call
call
out
dec
sub
push
rorl
adc
shll
loop
psubsb
sbb
jmp
cmp
cmp
stos
or
add
into
or
and
ret
es
cmp
rol
push
in
cmpsb
push
pop
into
in
lcall
jno
add
rcll
sbb
stos
or
push
fdivrs
lods
fbld
fstl
test
jbe
stos
ret
inc
inc
lahf
or
sbb
int3
lret
out
icebp
fadd
int3
outsb
popf
out
adc
jl
into
jle
int
dec
int3
push
into
lds
sbb
cmp
das
inc
stc
dec
pop
test
call
lds
dec
std
pusha
insl
jae
adc
loopne
movsl
cmp
or
sub
imul
in
push
pop
or
and
inc
shll
dec
push
mov
enter
jmp
leave
or
sub
aaa
xor
out
popa
outsl
ja
xchg
dec
mov
pop
add
add
push
insb
mov
xor
mov
icebp
lcall
lahf
push
push
movsb
jae
pop
das
int
scas
test
clc
jns
popf
cwtl
xor
stos
daa
sbb
cs
movsb
xorl
out
iret
aam
std
cmp
aam
popa
fwait
mov
cli
xor
pop
push
xchg
lds
nop
or
rolb
outsb
fwait
push
xchg
addr16
and
push
test
cmc
mov
mov
lahf
xchg
xor
dec
lcall
fdivrl
imul
mov
pop
and
or
sub
inc
leave
dec
imul
test
xchg
lock
xor
sbb
pop
mov
shrb
cmpsb
pop
xor
or
mov
lahf
fbstp
enter
mov
push
cs
data16
xlat
aad
dec
mov
cmpsl
inc
enter
sbb
xor
jg
push
jbe
shll
xor
jmp
add
xor
adcl
scas
and
out
popf
sbb
inc
ds
or
adc
add
fs
push
sub
mov
sahf
cmp
in
push
ret
rorb
adc
arpl
dec
fwait
push
jno
lcall
mov
push
push
inc
gs
mov
jecxz
ljmp
sub
icebp
adc
mov
mov
dec
addr16
mov
icebp
das
mov
out
sarb
cmp
inc
cmpsb
inc
cmpsl
jle
xchg
xor
xchg
lcall
in
test
dec
out
cld
lret
loop
fstp
dec
stc
cmp
mov
jge
mov
sahf
lods
int3
out
dec
int3
mov
out
jge
mov
add
out
sbb
dec
out
dec
in
push
aaa
dec
popf
icebp
clc
and
xchg
rolb
js
jl
sub
sub
jne
adc
inc
adc
mov
test
out
mov
push
jbe
outsb
sbb
cmp
out
cmp
fadds
in
xlat
and
in
aam
and
dec
mov
ljmp
sbb
addr16
aaa
lea
or
out
pop
fwait
xchg
xchg
mov
dec
insb
adc
mov
mov
popa
push
jl
or
push
and
iret
mov
rcrb
jg
pop
fwait
pop
fldcw
mov
xor
ss
hlt
xchg
test
mov
or
or
imul
jg
data16
sub
lahf
adc
aaa
xor
icebp
xor
fsts
push
push
xchg
cmc
mov
aam
mov
ret
mov
cmp
cwtl
fldt
nop
cmp
jp
cwtl
paddsw
test
ficoms
test
push
dec
test
jne
enter
pop
aam
out
jl
dec
xchg
jp
test
push
std
adc
imul
leave
dec
pop
cs
mov
adc
test
bound
cld
insb
outsl
outsb
insb
aad
mov
movsl
xlat
mov
mov
testl
stos
push
inc
or
xchg
int
lahf
mov
shll
cmpsb
dec
add
add
cmp
das
out
test
andb
fcmovu
scas
mov
mov
adc
int3
adc
inc
mov
sbb
lret
inc
out
xchg
adc
ret
sahf
jb
jmp
insl
mov
sbb
jmp
stos
mov
mov
out
xchg
lock
ja
cmp
dec
cmc
sbb
xor
inc
out
jmp
and
or
je
ss
iret
or
fcom
sub
mov
cmpsb
clc
adc
sbb
dec
fsubrs
js
pop
roll
push
mov
mov
into
in
xor
mov
out
jl
test
loop
lds
or
popa
loope
mov
and
mov
popf
push
xchg
lods
jmp
mov
xchg
fs
xor
inc
mov
insb
or
inc
outsb
loopne
and
sub
mov
inc
iret
addb
inc
dec
lock
push
push
ja
jnp
mov
loopne
sbb
jmp
jp
je
std
arpl
mov
pop
xor
ja
jnp
cmp
mov
ret
pop
dec
jb
push
outsl
sbb
xor
pop
mov
jbe
pop
imul
push
sbb
pop
in
data16
repz
adc
inc
insl
arpl
test
add
jnp
or
add
jbe
or
adc
sbb
repz
dec
loopne
mov
inc
sub
xchg
ss
in
mov
xchg
cltd
mov
xchg
cli
scas
dec
push
jl
adc
xchg
mov
mov
mov
adc
aam
jae
push
jae
and
push
ret
sbb
cld
xor
mov
ss
mov
mov
call
dec
mov
mov
jae
xchg
repz
dec
daa
out
mov
or
sbb
xchg
ja
cltd
push
cld
pop
mov
xchg
lahf
cli
cmpsl
decb
xlat
push
cmp
sub
xchg
lock
pop
xchg
inc
mov
mulb
in
sub
clc
xor
and
fnstsw
dec
inc
inc
sbb
into
pusha
mov
je
icebp
inc
fldenv
add
push
insb
std
cs
movsb
jg
test
cmp
xor
loop
data16
pop
test
ret
out
lahf
push
lahf
shrb
stos
xlat
xchg
sub
arpl
add
sbb
push
stos
or
inc
daa
mov
mov
push
insb
mov
jo
shlb
xchg
mov
mov
lods
pop
xchg
lret
shl
lods
hlt
xlat
movsb
dec
jge
xchg
js
push
xchg
add
cmp
ret
and
jmp
mov
fcoms
or
push
xchg
mov
and
cmpsb
ret
xor
lahf
xor
call
mov
loopne
mov
pop
xor
cwtl
aas
das
test
pop
pop
mov
push
mov
adc
inc
push
inc
inc
stc
gs
cmp
cmp
test
repnz
cmpsl
jno
jle
sub
xchg
push
push
pop
mov
repnz
iret
js
push
stc
lret
push
add
mov
insb
pop
mov
cmp
cli
cmp
aaa
popa
aad
int
aas
ret
repz
ss
jp
push
lret
adc
cmp
lds
sub
scas
andl
es
in
out
cmp
fiaddl
out
xchg
push
gs
loope
sti
das
andb
movl
fisubrs
test
mov
dec
out
jle
loop
in
jo
in
test
inc
add
lock
clc
sti
lret
out
pop
leave
pop
in
test
js
add
adc
mov
inc
gs
xor
push
cmp
push
rcll
and
popf
cs
cmp
repz
sub
push
pop
pop
addb
rcll
push
and
and
or
and
jge
cmp
stos
jnp
sbb
adc
mulb
cmc
xchg
or
mov
add
add
lret
adc
xor
cmpsb
dec
mov
stos
leave
loope
and
aad
incl
mov
out
cmp
adc
rcrb
adc
jb
fisubl
jne
pop
and
leave
cwtl
sti
movsl
xor
jns
je
gs
dec
out
stos
loop
fnsave
mov
mov
fnsave
lcall
jl
insb
and
xchg
cmpsl
cmp
xor
aas
icebp
adcb
sbb
imul
pusha
ret
dec
loop
stc
shrl
mov
push
mov
in
sub
cmpsb
daa
sbb
addr16
mov
leave
leave
shll
sbb
ss
pop
rclb
idivl
mov
push
shlb
movsl
test
minps
jge
and
shrl
inc
push
iret
repnz
cs
add
xchg
cmp
adc
in
adc
sbb
xchg
mov
jbe
jns
pop
test
in
add
dec
arpl
out
mov
enter
stos
push
popf
mulb
pop
jno
jnp
xor
add
jne
pop
xchg
pop
pop
cmp
loopne
fwait
sub
je
in
nop
adc
sti
mov
and
mov
shlb
rcll
jmp
in
out
adc
pop
stos
cwtl
repnz
lret
or
inc
pop
pop
xchg
fadds
mov
push
imul
cmpsb
lret
inc
aas
mov
adc
jne
js
test
scas
cmpsb
sub
out
xor
hlt
je
loop
iret
gs
mov
gs
sub
imul
push
jg
jne
aam
imul
movsb
push
or
push
lods
jecxz
push
test
or
cmpsb
insl
sbb
sbb
jmp
mov
js
cmp
stos
les
mov
dec
lea
imulb
leave
dec
cmp
adc
leave
mov
outsb
lds
sub
inc
jne
ss
push
imul
scas
mov
inc
incl
lahf
adc
in
loope
out
mov
and
mov
rcrb
pop
mov
arpl
lds
daa
fs
push
mov
fwait
inc
inc
xchg
jae
dec
or
insl
mov
jp
hlt
sub
push
lahf
sbb
pusha
or
stos
in
movsl
dec
push
pop
fdivrs
outsb
dec
js
cmp
sbb
fnstenv
ficomps
enter
out
inc
add
jle
pop
dec
mov
call
out
mov
jp
or
inc
les
les
xchg
insl
mov
xchg
ss
jno
cli
int3
popf
xchg
xorl
js
inc
lret
jp
xor
loop
fcoml
pop
mov
in
add
sub
out
pop
mov
mov
test
aaa
xchg
pop
jp
cwtl
sbb
push
rcrl
cmp
and
mov
lods
adc
imul
scas
jno
add
out
or
test
cmp
fcmovnb
or
addb
fs
mov
out
dec
scas
scas
jo
lods
and
mov
jae
pusha
or
rcrb
xor
fisttps
jecxz
outsb
add
rclb
sbb
or
push
xlat
push
test
xor
arpl
mov
mov
sbb
in
pop
inc
scas
ret
std
dec
test
fs
sub
push
jne
push
pusha
test
imul
xchg
sbb
iret
data16
lock
adc
mov
in
push
repnz
cmc
mov
mov
insl
imulb
xchg
out
test
xor
or
push
mov
dec
lods
dec
sub
cli
mov
xor
rolb
inc
xchg
inc
pop
andps
rorb
cli
and
test
jo
dec
stos
cmpl
mov
dec
push
lahf
add
into
push
std
mov
test
pop
pop
mov
lea
or
mov
sar
ret
inc
fcmovne
sti
js
out
jne
pop
pop
sbb
sbb
nop
dec
add
xor
push
lods
add
mov
call
mov
in
mov
jecxz
stos
inc
xor
aam
xorb
adc
jle
loope
loope
jb
daa
imul
mov
mov
or
xchg
pop
and
push
cmp
mov
dec
stos
sahf
ror
add
out
adc
ficompl
jg
sbb
or
bound
mov
and
lods
into
push
in
xchg
out
xor
jle
fistpll
jecxz
bound
test
pop
in
mov
xchg
daa
push
dec
adc
cmp
or
fs
lret
xor
inc
mov
mov
push
imul
and
xchg
push
fbld
push
push
clc
lret
xor
jmp
fadds
sbb
shl
outsl
mov
cmpl
dec
int3
xlat
shlb
xchg
std
out
and
jg
shlb
testb
adc
or
dec
mov
les
xchg
test
mov
cmpl
cmp
dec
mulb
or
adc
jp
inc
icebp
mov
stc
mov
lahf
call
movsl
popa
idivb
testl
mov
mov
pop
jg
jle
sti
shr
and
xchg
jb
add
jnp
popa
ret
mov
stos
int
shlb
inc
lods
xchg
out
pop
call
movsl
movsb
sar
inc
inc
cwtl
xor
xchg
pavgw
mov
and
movsl
push
add
dec
dec
jmp
push
es
gs
push
cmc
jecxz
icebp
mov
cmc
xor
push
and
mov
cli
fs
and
jns
pop
pop
jl
cmp
jecxz
and
popa
jp
or
imul
mov
outsl
xor
sahf
xchg
sbb
or
or
mov
mov
xor
mov
imul
add
and
add
or
mov
sbb
ljmp
mov
jge
fisttpll
jle
imul
dec
testl
aad
gs
bound
es
lods
ljmp
jae
subl
movsb
aas
aam
jb
sub
loop
into
test
mov
dec
xchg
push
scas
sub
mov
lock
xor
sbb
push
popa
jmp
sbbb
adc
xor
xor
and
mov
mov
aaa
cmp
dec
inc
xsaveopt
dec
je
cld
pop
cmc
push
xor
xchg
pop
push
push
in
mov
mov
sub
inc
cld
pop
call
cld
jecxz
sub
jne
lock
mov
insb
in
ret
jae
sbb
and
mov
inc
or
jle
imul
cmp
mov
ds
jmp
jl
jmp
and
nop
or
xchg
shlb
mov
decl
inc
notl
into
daa
sbb
sub
cmc
negl
fcmovbe
gs
not
std
jne
movsl
sbbl
in
xchg
adc
std
jle
movsb
or
lahf
mov
cli
dec
cmp
ret
movsl
int
sub
cmp
xchg
data16
test
jle
out
out
aam
inc
and
pop
cmp
jp
das
pop
inc
xchg
gs
or
cmp
je
int
sub
inc
xchg
pop
and
out
cmp
mov
out
pop
mov
adc
mov
adcb
mov
cmpsl
pop
stos
jb
push
mov
stc
in
fists
push
jno
xlat
inc
outsl
dec
add
xchg
and
xchg
push
add
sbb
shll
aad
sub
mov
mov
cmpsl
mov
adcb
pop
pop
jle
cmpsl
lret
mov
cmpsb
jne
icebp
xchg
pop
pop
fs
sbb
cmp
lcall
sbb
sub
mov
pusha
ret
adc
and
push
loope
cli
mov
imul
imul
push
jnp
or
addr16
mov
jp
gs
mov
imul
cld
mov
xchg
xchg
insl
js
jl
push
nop
andb
push
xchg
xorl
jb
lds
and
sub
cwtl
pop
popa
lods
and
ja
xor
into
mov
xchg
push
iret
push
and
pusha
cmp
ret
lret
pop
bound
cs
fsubrl
cltd
xchg
pushf
and
ja
jno
xor
ret
cld
test
cwtl
clc
xchg
arpl
sbb
jmp
sarb
out
subl
ja
loope
cld
inc
adc
js
sbb
mov
lods
pop
or
mov
dec
rolb
dec
std
and
pinsrw
xor
adc
pop
adc
adc
popa
or
cmc
lret
pop
mov
or
ljmp
pushf
aad
cs
aad
push
shlb
mov
rcrl
sbb
jnp
xchg
cmp
dec
cli
gs
dec
sbb
mov
sub
ss
andb
ret
in
lret
and
sbb
aad
add
fdiv
and
mov
in
repnz
mov
fmuls
xor
xchg
mov
jge
mov
cwtl
sahf
inc
stos
gs
cmp
inc
inc
adc
in
pop
stos
movl
adc
adc
pop
sbb
jmp
jns
mov
je
xor
aas
cmp
inc
add
sub
fs
jge
loop
or
shrl
stos
hlt
aad
mov
and
outsb
adc
repnz
jge
fs
cmpsb
orb
and
ljmp
cltd
mov
mov
imul
iret
sbb
mov
test
mov
pop
mov
out
sbb
mov
fisttps
cmp
outsb
pop
pop
mov
icebp
out
jmp
addr16
lock
adc
xor
mov
mov
repnz
aam
scas
lds
add
icebp
push
aaa
inc
leave
in
nop
ret
pushf
loopne
or
push
cmp
icebp
inc
sbb
and
lock
fildl
adc
subb
mov
push
pop
and
push
mov
xor
out
xchg
jmp
cmpsb
and
stos
pop
fsubrl
inc
sahf
sub
push
fidivrs
mov
push
push
pop
dec
out
inc
and
inc
fldcw
cld
fidivrl
mov
mov
push
and
add
and
cmc
jne
xchg
xchg
call
dec
push
mov
call
cltd
rcrl
adc
das
push
lds
mov
jnp
jbe
dec
sbb
xlat
inc
ljmp
rclb
mov
jae
shll
pslld
data16
pop
outsb
ss
out
sbb
iret
scas
jp
insl
dec
lret
rorb
enter
repnz
cmpsl
ret
loope
jnp
jo
test
fmuls
mov
inc
mov
fs
dec
jl
insl
int3
lock
enter
add
cmp
dec
push
ljmp
rcrl
rcrl
fistpl
push
add
mov
xchg
cs
fadds
mov
repnz
pop
sbbb
inc
adc
test
mov
ss
xchg
push
sbb
dec
cs
loop
pop
mov
xor
test
scas
gs
and
in
stos
sti
inc
xchg
fucomp
out
enter
ficomps
fxam
or
ret
test
sbb
push
in
adc
addl
sbb
dec
je
pop
fld
lcall
mov
mov
cwtl
adc
and
or
xchg
sbb
shll
fwait
mov
adc
jo
mov
mov
mov
cli
add
pop
sub
jnp
lret
push
sbb
outsb
fcomp
add
xchg
vcvtpd2psx
jno
add
mov
push
mov
sbb
xchg
adc
xor
dec
or
xor
dec
sbb
mov
xchg
es
ja
sti
jno
mov
sbb
inc
pop
jle
je
sti
mov
mov
mov
clc
and
xchg
stos
mov
mov
jge
adc
ret
mov
fmulp
xchg
lea
xor
mov
mov
inc
stc
add
mov
cmp
cmp
loope
popa
test
or
adc
fistl
ds
push
mov
xchg
fstpl
cmp
fnstsw
fwait
mov
sub
mov
pop
lds
mov
pop
push
inc
jb
dec
push
jmp
shlb
int3
push
push
jl
aaa
add
or
leave
xlat
add
add
lret
scas
jb
and
pop
hlt
jmp
inc
fsubrl
sub
lods
andl
cld
sub
jno
xor
xor
and
cmpsl
out
hlt
mov
outsl
stc
adc
sub
fimull
call
test
fcoms
cmpsl
daa
inc
and
mov
lret
add
jmp
cmpsl
add
popa
lods
cmp
addr16
into
dec
mov
inc
popa
addb
push
scas
pushf
leave
inc
sahf
pushf
aad
out
mov
nop
add
stc
incb
pushf
lcall
dec
sbb
sbb
cli
jmp
xor
push
in
or
insl
sbb
movl
pop
lds
dec
adc
sub
cli
fwait
bound
jb
or
nop
add
jns
lds
pop
pop
out
out
sbb
lret
mov
mov
rcll
aad
jo
mov
fdivrl
repnz
repz
in
test
ffreep
mov
jg
rcll
stc
or
xchg
xchg
xchg
lods
mov
inc
clc
pushf
ffree
xchg
jae
push
out
push
mov
rclb
insl
and
and
mov
xchg
add
mov
xor
pop
xchg
or
and
aaa
lret
or
out
mov
loop
sub
jge
std
xchg
push
pusha
addr16
daa
daa
icebp
adc
sbb
add
aas
ljmp
adc
mov
in
adc
ss
repnz
and
inc
pop
jne
test
push
sbb
ret
cld
push
lahf
arpl
jecxz
xor
sahf
imul
mov
mov
push
xchg
in
sub
jnp
fcoms
addr16
mov
sub
out
cmp
cltd
push
fisttps
enter
pop
out
lahf
dec
jno
aas
lret
lods
sbb
jge
lods
les
arpl
and
push
adc
lcall
fnstcw
mov
sbb
popf
xor
aam
inc
jmp
xlat
mov
jno
dec
das
inc
imul
pop
lret
mov
xor
aaa
testl
pop
xchg
mov
bound
add
sub
lahf
sub
inc
add
aas
adc
mov
cmp
add
decb
mov
mov
push
fldl
cwtl
mov
pop
stos
out
ret
mov
and
and
push
lret
xchg
cmp
shll
outsb
adc
xlat
cmp
pop
mov
call
lock
push
out
lods
incl
pop
std
mov
pop
fs
out
sbb
jns
dec
into
add
dec
std
jb
loop
inc
gs
mov
push
sar
push
lret
dec
cli
push
pop
push
test
in
in
pop
xchg
les
test
push
paddb
dec
pop
jecxz
fwait
enter
fucomi
cmc
pop
call
out
and
addr16
out
cmpsl
lods
inc
jne
in
popl
pop
dec
xlat
movsl
je
clc
lds
pop
xchg
lcall
das
imul
and
pop
sbb
xchg
out
adc
inc
nop
cli
ret
xlat
enter
mov
jae
jecxz
cwtl
jge
ljmp
cmp
in
test
inc
mov
mov
sbb
mov
mov
pop
mov
out
push
out
add
jne
mov
jmp
stos
mov
adc
cmp
jp
mov
xchg
jle
cmp
flds
push
iret
sbb
test
mov
and
or
push
pop
cli
rcll
ds
mov
out
enter
xchg
fwait
pop
xchg
push
add
aad
mov
outsl
cmp
xchg
adc
pop
push
mov
and
ret
outsl
add
jecxz
int3
cs
rcl
out
and
mov
out
inc
mov
sarb
and
mov
inc
imul
mov
test
mov
stc
sub
cmpsb
pop
andl
or
daa
into
inc
nop
inc
adc
sarl
cmp
je
adc
push
pusha
fucomip
mov
loop
imul
fimull
and
imul
xchg
xor
adc
in
mov
and
shll
data16
mov
out
ret
popa
jecxz
mov
rorl
das
out
pop
add
inc
ja
icebp
fdivl
ss
mov
jbe
int3
push
adc
icebp
adc
fdivrl
fstps
scas
shlb
dec
mov
rcr
jg
inc
cwtl
xchg
outsl
mov
or
xchg
mov
and
ror
sti
mov
cmp
lcall
aad
jno
xchg
hlt
push
xchg
lahf
cmp
fbstp
dec
pop
add
scas
ja
test
sbb
xor
jbe
pop
jno
sbb
add
jo
xor
sbb
in
mov
sarl
and
divb
repnz
fldt
out
xlat
adc
adc
mov
aas
in
mov
stc
sahf
dec
sahf
inc
movsl
xchg
add
jno
push
mov
ret
in
leave
jne
icebp
pop
sbb
adc
inc
adc
push
jns
orl
sbb
inc
in
ret
aad
jl
scas
push
cmp
jae
fidivrs
sbb
or
pop
dec
xchg
dec
or
cwtl
xchg
ljmp
ljmp
dec
jb
stc
jecxz
add
mov
jo
mov
fs
imul
cmp
inc
sub
pop
ror
jnp
add
and
dec
xchg
popa
add
hlt
cmpsb
push
mov
sbb
adc
in
inc
dec
fmuls
pop
nop
arpl
lods
outsb
shll
push
dec
xchg
sbb
aaa
xor
iret
nop
adc
pop
push
enter
daa
ret
in
sbb
scas
or
lahf
insb
lret
mov
decb
sbb
and
push
loope
rorl
xchg
push
sub
push
add
stos
icebp
lar
push
and
insl
ds
int
push
ror
icebp
rcrl
pusha
jbe
lahf
add
sbb
jmp
push
jae
jnp
push
jp
jp
inc
xchg
pusha
mov
shl
not
mov
mov
icebp
loope
cmp
sbb
and
jge
jbe
mov
lret
mov
and
fs
xor
pop
or
or
add
inc
sbb
push
xor
dec
cltd
repz
xor
jl
jno
je
lds
or
cltd
rcrl
sarb
mov
cmpsb
or
testl
push
or
dec
es
xorl
sub
fisttpll
adc
and
ret
es
int
mov
mov
sti
and
sbb
cmpsb
pop
jb
dec
adc
ret
std
add
cmp
lret
jge
dec
decb
scas
hlt
test
in
sbb
in
icebp
mov
or
test
lods
mov
adc
push
or
sbb
cltd
push
inc
pop
mov
dec
jecxz
in
xchg
mov
iret
icebp
cld
out
arpl
jae
and
push
mov
das
jne
lret
cmp
pop
xorb
dec
aas
fwait
add
jno
add
imul
js
inc
xor
dec
repnz
and
dec
lea
push
repz
jo
pop
and
xchg
into
or
ljmp
push
push
push
push
pusha
into
shl
js
dec
filds
es
ja
jno,pt
xlat
xchg
mov
inc
fiadds
shlb
pusha
jnp
sbb
or
loope
fistpll
jp
cmp
mov
push
sbbl
in
das
call
inc
pop
fimuls
fs
mov
pop
in
xor
cli
inc
outsb
xchg
xor
cltd
pop
ror
adc
xor
sub
adc
cltd
iret
xor
je
in
test
rcll
movaps
scas
pop
negl
enter
inc
les
jnp
orl
sub
pop
push
jbe
pop
loope
push
mov
roll
add
cmp
pop
out
fwait
je
jge
push
movl
pop
inc
dec
jmp
xor
cld
jb
jg
jecxz
xchg
aaa
inc
loopne
jl
adc
and
test
lcall
div
jns
mov
cmp
xor
pop
xchg
dec
or
rcl
mov
sub
mov
xchg
add
movsb
cld
cmp
jnp
add
or
enter
and
xor
lahf
imul
mov
fisubs
cwtl
mov
or
ror
jo
mov
add
mov
jg
pop
xor
mov
test
adc
xor
adc
adc
xchg
rorb
in
jecxz
xchg
and
hlt
push
ja
in
scas
in
sub
fidivrl
mov
pop
orl
mov
adc
jb
enter
and
sahf
and
jnp
sub
push
scas
insl
js
call
test
add
dec
gs
daa
das
call
iret
sbb
pop
jp
and
clc
sbb
unpcklps
lcall
xchg
inc
xchg
outsb
jmp
in
jne
jl
aad
in
f2xm1
ljmp
icebp
xchg
test
mov
pop
subl
sbbb
fadds
gs
jg
aad
jmp
mov
leave
bound
test
or
sar
pop
popf
lret
jp
leave
clc
rcl
xchg
std
mov
and
out
mov
jne
push
out
jns
cwtl
push
push
scas
xchg
mov
xor
jae
mov
bound
dec
or
xorl
aad
dec
jmp
jbe
jnp
out
xchg
inc
pop
mov
fs
int
inc
inc
leave
rcrl
and
mov
leave
sbb
mov
enter
repz
cmp
jo
or
xchg
inc
cmp
adcb
mov
and
pop
stc
add
push
outsl
cs
out
cmp
xchg
test
cmp
mov
lcall
jmp
jae
xor
ja
cmpsl
mov
das
xor
pushf
mov
dec
mov
mov
dec
dec
test
push
mov
in
out
or
orl
aam
xor
leave
dec
inc
out
mov
js
popa
mov
imul
out
scas
pop
pop
push
ljmp
ret
push
and
nop
hlt
sbb
lock
jg
repz
fcompl
and
mov
adc
mov
stos
shrb
aaa
xor
lahf
pop
in
ds
test
dec
jbe
fbld
pop
imul
lds
cwtl
lretw
mov
pop
add
outsb
dec
je
dec
hlt
int
mov
daa
add
aad
mov
sub
lods
inc
xor
shll
pop
arpl
bound
dec
ds
and
add
and
inc
pusha
cmp
sub
insb
enter
sbb
fwait
jo
stos
addr16
xchg
test
mov
cmp
pop
add
in
mov
xor
outsb
pop
push
je
lds
rdtsc
loope
dec
sub
push
inc
xor
jp
dec
int3
dec
out
testb
lods
loop
gs
dec
jle
xor
scas
in
jns
aad
mov
pop
lock
cld
inc
pop
adcl
and
cmc
inc
ret
jecxz
gs
or
jecxz
sbb
into
inc
cmp
ss
mov
push
jecxz
pop
ret
add
inc
int3
mov
mov
dec
and
lret
jbe
and
xchg
mov
xor
cs
rolb
fidivs
cli
fildll
insb
push
or
cmp
pushf
jns
mov
or
xor
les
stos
aam
fstpl
mov
pop
ud0
in
in
dec
dec
into
fildll
lahf
mov
push
push
pop
jecxz
jg
loop
xor
cld
imul
xchg
mov
xor
rorl
bound
bound
pop
cmpsb
shr
sub
mov
xchg
test
repz
icebp
dec
hlt
rcrb
xor
mov
pop
mov
mov
mov
adc
xlat
xchg
pop
jo
testb
cwtl
nop
pushf
leave
mov
dec
jne
and
push
mov
push
std
cmp
popf
mov
xchg
aam
clc
out
cli
push
repnz
add
jnp
dec
pusha
sub
mov
cmpsl
mov
adc
push
gs
cld
inc
addps
push
push
jmp
jg
std
mov
or
imul
mov
mov
ljmp
and
subl
lock
int3
lds
pop
in
lcall
clc
cmp
dec
pop
inc
add
mov
adc
jns
pusha
test
sub
mov
mov
ja
jecxz
or
dec
out
jl
push
or
pop
push
mov
jmp
mov
adc
or
mov
xchg
mov
push
addr16
dec
push
pop
aam
loop
add
repz
loop
and
adc
mov
xchg
sub
movsb
jp
xchg
sub
ret
dec
dec
mov
fsubrl
je
int3
mov
pop
cli
mov
sahf
jl
push
mov
push
inc
bound
mov
repnz
jecxz
clc
pushf
sbb
xchg
ret
pop
xchg
inc
lds
mov
adc
xor
ljmp
lods
das
imull
setbe
sbb
cwtl
out
mov
xchg
icebp
dec
cmc
push
loope
data16
xor
cmp
js
xor
pop
inc
push
xchg
jmp
call
dec
iret
push
push
mov
gs
or
xchg
adc
cld
lahf
fidivl
leave
aam
sbb
repnz
jmp
stos
icebp
das
inc
sbb
in
dec
orl
inc
leave
movsb
sti
ret
xchg
lock
fdivrs
inc
nop
jno
add
cltd
adc
xor
rorb
jo
sub
or
inc
xchg
int
hlt
jbe
cmpsl
mov
sub
mov
and
negb
pop
xchg
mov
repz
inc
call
into
sbb
test
imul
sbb
addr16
in
cwtl
push
test
jg
pop
jp
movsl
shll
mov
call
cwtl
aam
lock
sub
out
aam
fcoms
movsl
xchg
mov
mov
inc
in
xchg
stc
jns
adc
jbe
dec
adc
loope
rcrb
gs
lock
icebp
mov
roll
call
jno
cmc
sbb
imul
int3
pop
addr16
mov
cmp
xchg
mov
pop
xchg
sub
inc
jb
loope
add
fildl
scas
lret
adc
ja
inc
xor
push
mov
dec
pop
pop
ss
out
mov
and
rorl
testl
mov
or
pusha
pop
add
jne
cltd
popf
mov
stc
cmpsb
andb
lds
dec
xor
or
inc
or
out
aam
add
cltd
mov
and
sub
fs
xchg
test
xor
mov
sub
imul
xor
ds
scas
outsl
and
push
fxch
xor
fwait
mov
dec
sub
ds
icebp
cli
leave
movsl
es
sti
pop
xor
nop
jmp
mov
mov
sbbl
xchg
xchg
mov
cmpsl
pop
push
jne
mov
dec
jge
xor
xchg
jmp
sbb
and
rcl
adc
movsl
lods
push
pop
cmc
cmp
pusha
clc
mov
mov
inc
cmp
outsb
inc
sub
mov
mov
push
xchg
imul
lods
imul
cmp
movsb
iret
dec
inc
daa
cld
jo
jb
out
jg
daa
fmull
sub
mov
sub
mov
cmp
jmp
sub
jmp
rcl
mov
lret
hlt
subl
pop
add
scas
cmp
mov
imul
mov
and
stc
movsl
cmc
or
xchg
pusha
mull
jns
fpatan
pop
addr16
add
dec
outsb
dec
inc
test
ds
fsubs
fsubrs
dec
xorl
jns
stos
incb
pop
jle
xor
push
adc
push
stc
mov
rorb
lods
mov
sbbb
cmpsb
adc
cmpsl
je
push
inc
mov
mov
add
iret
pop
mov
mov
popf
repnz
push
aaa
outsl
sub
sbb
cltd
or
add
sub
stos
inc
les
mov
fcmovnbe
sbbb
xor
test
or
popf
out
and
jns
mov
fildll
jge
adc
xorb
mov
xchg
imul
imul
ret
mov
aam
test
xor
dec
not
pop
pop
gs
or
xchg
and
sbb
popa
jnp
jns
pop
push
sub
mov
loopne
js
lds
jbe
pop
push
cmp
pop
cmc
cmp
leave
mov
sbb
les
pop
sbb
cli
add
add
int3
stos
pop
lcall
push
aaa
adc
pop
leave
rorl
jnp
jb
andb
fnstsw
xchg
faddl
sbb
sub
fmull
sti
aad
push
pop
adc
mov
mull
xchg
outsb
andb
clc
ret
addl
insl
mov
rorb
out
aam
adc
fisubs
mulb
or
jb
aaa
push
xchg
or
sub
cmpb
outsb
scas
or
xorl
mov
rorl
inc
les
cmp
dec
and
add
bswap
pop
aad
pop
lahf
jecxz
xchg
lcall
aad
sbb
ds
add
fwait
mov
daa
jl
in
int
pop
mov
dec
ljmp
mov
push
xchg
test
test
fldcw
add
jo
push
or
int3
loope
and
pop
outsb
mov
cmp
add
int
pop
cs
fwait
imul
push
imul
pop
cltd
aaa
out
fcoms
xor
aas
mov
mov
sbb
mov
imul
sub
lock
push
jb
mov
repz
jnp
sbb
mov
mov
les
pop
push
fistpll
inc
xor
lea
or
and
andl
push
mov
sub
test
add
and
add
ds
test
outsb
jle
insb
dec
inc
fs
bnd
pop
xlat
dec
or
jb
sarl
add
push
cld
cmp
add
adcl
xchg
ja
dec
imull
out
jg
les
sub
hlt
js
rcll
shll
jbe
rol
dec
xchg
rorb
xor
cmp
loope
loope
jb
subb
xchg
push
test
mov
sub
pushf
or
pop
or
xor
xchg
dec
in
xchg
mov
push
lods
mov
push
cmp
fistps
in
jae
es
pop
outsb
aam
out
pop
popf
repnz
jbe
nop
aad
xor
mov
xchg
jnp
jbe
movsb
dec
popf
and
jno
pop
sbb
xor
xchg
cmpl
pop
loope
and
xor
ds
sbb
test
cmp
arpl
xchg
adc
cmp
mov
jmp
cltd
or
add
pop
inc
mov
inc
in
ret
clc
jb
mov
popa
dec
movsl
adc
sar
jno
fisubs
imul
ja
fbstp
mov
aad
popa
lea
mull
rclb
imul
cmc
xor
xchg
loopne
dec
fcompl
in
inc
xor
and
fcomps
sbb
mov
dec
shrl
xchg
fcomi
add
jg
add
jae
push
or
dec
lea
insl
andb
cmp
mov
fcoml
sub
pop
ss
mov
stc
xor
cmovg
mov
xor
pushf
inc
testl
cmp
mov
maskmovq
testl
sbb
pop
dec
pop
outsl
mov
scas
inc
and
aas
xchg
inc
mov
mov
aas
enter
rcll
je
pop
inc
andl
mov
aam
inc
pop
mov
and
and
mov
pop
inc
push
ljmp
and
mov
xlat
adc
aad
xor
xor
dec
inc
in
cmc
out
mov
cwtl
xchg
pop
fisubrl
add
push
inc
xchg
rcrl
scas
mov
and
dec
mul
std
js
push
or
mov
mov
adc
lret
mov
jl
mov
push
sub
lods
push
test
movsl
stc
pop
aad
jl
jp
cmp
xorl
pop
pop
push
bound
movsl
dec
aaa
push
stc
fbld
hlt
push
jl
mov
pop
push
testl
jp
jp
aad
xchg
ja
bound
fdivrl
pop
ror
xor
or
ja
cwtl
sub
mov
fwait
lock
mov
and
vshufps
je
fucomip
es
mov
mov
xchg
sti
loopne
sti
adc
dec
lods
cmp
shll
add
stos
roll
cmp
sub
cmp
mov
hlt
pusha
lret
and
js
mov
and
mov
dec
shrl
pop
fidivs
ljmp
jne
sar
and
sub
sub
sbb
out
pop
pop
pop
sbbl
pop
movsb
int3
sbb
cli
jmp
sbb
pop
xor
pop
jae
hlt
mov
adc
push
add
jl
mov
hlt
sti
jne
xchg
gs
pop
mov
pop
hlt
cmp
push
add
js
mov
in
sub
xchg
mov
inc
in
in
fisubl
lods
int3
mov
or
jmp
push
sub
cmpsb
sub
push
outsb
add
xchg
sbb
pop
clc
bound
push
into
adc
jp
dec
loop
fcmovu
clc
jb
inc
fcomp
or
iret
jl
dec
xchg
adc
stos
sbb
inc
pusha
add
mov
sti
data16
movsl
in
push
dec
stc
push
imul
in
mov
imul
push
jge
xchg
jl
jns
sub
lods
insl
fcoml
clc
lods
jmp
sbb
pusha
push
clc
cmp
mov
cmp
movsb
out
inc
or
mov
rclb
fmull
jle
in
sub
mov
cltd
jns
pop
mov
movsb
sub
jmp
sbb
lahf
push
js
pop
sub
loopne
clc
mov
mov
pop
repnz
dec
enter
push
pop
mov
sub
in
arpl
xor
test
and
cmpsl
pop
popa
cmp
dec
enter
xor
vmovapd
or
mov
popf
mov
adc
bound
mov
inc
mov
xchg
jecxz
mov
sbb
fwait
lret
xchg
loope
mov
xor
shrl
jp
imul
cmp
push
dec
adc
xchg
shl
jge
dec
xlat
jbe
add
call
mov
mov
rorl
js
loop
imul
dec
cmc
jle
add
push
idiv
ljmp
lock
sub
ret
sub
mov
scas
repnz
fiadds
stos
iret
mov
ja
shl
imul
push
mov
cwtl
cmc
adc
popa
sahf
aad
jmp
lods
shlb
sbb
mov
xchg
lret
inc
or
sbbb
ret
jno
or
movb
xor
outsl
notb
jb
lock
xor
lret
inc
ss
aaa
push
pop
xchg
pop
sub
insl
loop
aaa
dec
fst
add
cmp
pusha
fsubrl
inc
mov
outsb
pop
dec
mov
mov
sbb
out
and
loopne
push
pop
cmp
lods
xchg
cmp
cs
push
cmpsb
mov
fdivs
pop
mov
std
sbb
cmpsl
push
cmp
push
sub
pop
popa
jg
xchg
shrb
cmpsb
xchg
adc
les
cld
lods
pushf
out
xlat
jg
loopne
adc
pushf
and
mov
sbb
fdiv
pop
add
mov
jl
xor
lret
mov
into
jmp
xchg
in
loope
pop
ds
sbb
cld
orb
cmp
gs
xor
xchg
lds
jge
movsl
mov
movsl
stc
push
ja
xor
movsl
mov
jmp
cmp
mov
mov
outsb
nop
pop
add
mov
sbb
adc
outsb
aas
in
cs
jb
lds
outsb
and
pop
ja
xchg
sbb
cli
mov
mov
movsl
jnp
adc
push
mov
imul
sbb
sti
adc
test
in
xor
daa
sub
sub
pusha
cmp
xchg
outsl
jge
mov
mov
pop
js
jmp
call
test
push
test
mov
dec
dec
xchg
fwait
pushf
movsb
stc
fstps
adc
xor
out
ja
icebp
dec
mov
jmp
add
mov
adc
jae
inc
in
mov
inc
call
fisubs
mov
leave
out
xorl
push
jbe
pop
lock
and
or
mov
push
lds
ret
fsubr
mov
add
repnz
popa
or
inc
inc
enter
aam
mov
jne
jno
jecxz
aam
fimuls
xor
fsub
aad
sub
mov
push
outsl
testl
jbe
bound
sbb
hlt
lcall
mov
daa
shlb
mov
xchg
pop
cmp
pop
dec
rcrb
in
jle
jle
jnp
push
jg
and
mov
into
mov
and
cltd
nop
test
scas
lods
mov
jl
inc
mov
mov
lods
cmp
lcall
out
lods
in
xor
pop
dec
lods
sbbb
cmc
loopne
push
cld
sub
fwait
repnz
repnz
cmpsl
js
xchg
mov
jecxz
out
addr16
push
jp
int3
dec
adc
inc
sbb
pop
fcmovne
dec
jbe
mov
xchg
jno
test
and
add
push
push
xchg
loop
les
les
in
jno
add
stc
call
xor
mov
mov
stos
cmp
int
cmp
pop
in
arpl
jle
out
ss
pop
cmpsl
out
or
jmp
push
pusha
paddb
adc
daa
sub
xchg
nop
mov
jmp
movb
xchg
mov
hlt
adc
sbb
push
pop
or
push
mov
test
mov
cld
pop
or
xlat
adc
mov
lods
arpl
cmp
nop
cltd
jge
dec
add
sub
gs
mov
adc
outsb
out
leave
dec
in
lahf
push
jl
in
je
push
sbb
mov
cld
imul
adc
lods
aas
xchg
adcl
in
mov
pop
test
subl
sub
pop
pop
cmpsb
xchg
sahf
xchg
pop
push
fs
inc
orb
dec
add
mov
cmp
xchg
or
scas
aaa
mov
insb
xchg
int
bnd
mov
pop
inc
lret
fisubl
loopne
mov
cmpsb
ficoms
rclb
std
cli
cmpsl
sub
cli
pop
test
in
popa
popf
lea
jle
sbb
push
add
or
xor
pop
lcall
int3
xor
iret
shll
mov
xor
fcoms
js
jo
xchg
gs
pop
decb
cmp
movsl
cltd
push
push
cmpsb
inc
ja
int
pop
ljmp
stos
xchg
inc
out
sbb
lahf
mov
fiadds
daa
in
mov
mov
jl
adc
push
in
test
lcall
and
stos
dec
cld
or
cmp
dec
or
test
push
iret
xchg
mov
lods
xlat
lret
push
mov
test
pop
in
fidivs
sbb
ss
sahf
or
jmp
jbe
xlat
test
mov
cmp
adc
cmp
pushf
fcompl
in
mov
js
test
mov
into
int3
jae
sbb
shr
andb
inc
mov
jmp
clc
cmp
jecxz
mov
mov
sub
xor
leave
push
dec
into
add
scas
inc
jne
enter
lods
fs
sti
dec
lret
inc
ljmp
mov
jbe
mov
dec
pop
popf
dec
std
popa
mov
adc
mov
dec
je
xchg
add
daa
cmpsl
imul
das
rclb
shrl
mov
fnstcw
xchg
cmc
mov
daa
into
jle
fiaddl
sub
push
and
sbb
flds
jmp
ret
lret
imul
inc
cmc
xlat
gs
xchg
cmp
push
shl
xor
scas
mov
inc
mov
aaa
fwait
sub
pop
clc
test
jmp
pop
pushf
add
movl
inc
jecxz
xchg
js
push
cmp
scas
adc
insb
lock
sbb
aam
sbb
lods
mov
inc
das
scas
mov
mov
pop
shlb
mov
lahf
ror
jno
popf
sahf
jge
push
mov
js
and
cmp
aas
out
mov
jp
dec
scas
test
xchg
sub
pop
fs
mov
inc
div
pop
cmpsl
cwtl
xor
adc
in
jb
jl
into
push
outsl
jmp
mov
stc
fisubrl
sbb
pop
jmp
sub
aaa
push
sbb
adc
lea
sbb
mov
jbe
sub
mov
add
jne
xlat
xchg
push
filds
add
addb
enter
xchg
mov
mov
jno
sub
in
aaa
sbb
insl
stos
fldcw
mov
inc
aas
cmc
popl
jmp
enter
add
sub
xorl
lahf
fst
xor
xchg
or
ss
je
jns
ljmp
add
and
icebp
aam
js
ljmp
mov
data16
icebp
aad
mov
xchg
out
dec
mov
jp
or
aam
sahf
pushf
mov
sbb
shr
sbb
hlt
jns
pop
fwait
lret
mov
xchg
cmp
cmpsl
sbb
subl
aam
pop
shlb
stos
cmp
jmp
lds
adc
cmp
shrl
pop
dec
cmp
jae
jmp
lods
xor
cs
inc
int
cmpsb
adc
mov
and
pop
repnz
es
sbb
jnp
jp
xchg
mul
test
lret
mov
mov
lea
movsb
mov
nop
sub
or
stos
push
mov
sahf
fistps
and
pop
xchg
dec
fdivl
jne
mov
mov
dec
sub
inc
test
xchg
stos
daa
aad
int3
sahf
sub
inc
out
sub
ret
adc
movb
shlb
and
sub
sarb
rcll
lahf
mov
and
jg
push
add
arpl
inc
push
sbb
cwtl
pop
gs
imul
dec
jg
xlat
lods
cwtl
inc
push
cmp
ss
rol
xchg
sbb
aas
inc
ret
lea
les
scas
stc
repz
mov
inc
mov
bsr
xchg
jmp
repnz
les
shrl
xchg
push
push
jg
mov
cmp
add
lret
pop
pop
push
sbb
pop
sti
pop
test
sub
fsubr
sbb
lea
push
adc
dec
xor
bnd
xor
adc
mov
fldcw
popa
std
ret
push
hlt
lret
jl
or
out
dec
mov
les
mov
lahf
pop
xor
stos
in
stos
in
test
adc
fildl
adc
subb
lret
mov
add
xchg
ss
leave
jne
lock
mov
test
cli
pop
aaa
rcll
repz
jmp
dec
push
ja
dec
cmc
ret
cli
and
cmp
jl
call
add
mov
jg
insl
pop
dec
jns
popf
into
cmpsb
adc
cmp
mov
jns
lds
sahf
ret
jmp
lods
add
xor
xor
sbbl
sub
add
movsb
jb
mov
cmp
adc
adc
fstl
test
inc
sub
fimuls
push
sbb
lock
adc
int
xchg
lea
dec
bnd
xchg
mov
pop
add
sarb
incb
leave
sbb
jecxz
cmp
fstl
mulb
test
into
pop
adc
xchg
mov
jno
or
inc
adc
leave
mov
inc
lea
jmp
mov
insb
inc
mov
jge
stc
cmp
out
cmp
push
jne
sub
lea
lock
push
rcrb
pusha
fidivs
aam
add
in
cmp
lea
fbld
aad
inc
mov
inc
imul
jg
add
dec
jge
cltd
loop
push
popf
cmp
xchg
sbb
data16
xchg
fs
mov
negb
leave
inc
divb
in
fdiv
jle
mov
cmp
jbe
jge
mov
mov
imul
pop
cmp
pop
dec
and
sub
cwtl
aad
in
add
arpl
scas
sar
popf
inc
dec
xlat
sub
test
fcompl
dec
cmp
je
sbb
push
pop
popf
pop
into
push
add
or
mov
cmpsl
and
into
and
mov
sub
or
out
jae
or
dec
mov
sub
add
out
cltd
cmp
adc
cld
aaa
jne
lods
stos
adc
push
rorl
mov
xchg
inc
sar
lcall
xchg
out
movsl
int3
hlt
push
sbb
lods
add
iret
inc
idivl
mov
fcoms
mov
insl
mov
pop
jecxz
push
push
add
test
cmp
adc
push
repz
fdivrs
add
out
jne
mov
pop
pop
scas
dec
mov
jo
add
pop
stos
stc
daa
leave
xor
push
jno
jo
in
xlat
insl
pop
jl
adc
push
push
push
xchg
cli
dec
movl
xchg
leave
mov
scas
loope
icebp
std
push
movsb
dec
dec
shl
inc
loopne
pop
lret
inc
adc
cmp
enter
addr16
or
jbe
clc
mov
pop
pop
cli
test
hlt
into
iret
shlb
repnz
in
out
insl
fldcw
sbb
adc
lock
xchg
lods
sub
mov
lods
movsl
jno
icebp
movzwl
inc
mov
jo
xor
mov
loop
mov
push
add
jo
cltd
les
std
int
imul
mov
or
jl
jg
mov
lds
movsl
int
aas
in
mov
std
pop
inc
mov
jl
aas
or
add
test
cwtl
cmpsb
xchg
cmp
pop
pushf
pop
push
jb
dec
pushf
push
pop
mov
rclb
ss
shll
jg
jge
out
or
lods
cmpsl
mov
adc
sahf
lret
sbb
repz
xchg
mov
inc
pusha
inc
call
or
mov
adc
lea
inc
mov
aam
adc
jle
push
cld
test
mov
pusha
adc
or
dec
xchg
jne
mov
fdivr
jne
sbb
inc
ljmp
into
dec
pop
sub
mov
out
pushf
cwtl
pop
inc
stc
lds
repz
insb
sbb
push
cli
pmulhw
pop
push
aad
lods
dec
inc
test
sbb
mov
mov
imul
jp,pt
pop
sbb
leave
and
sbbl
cmpsb
fisubrl
mov
xchg
jmp
pop
nop
fnstcw
pop
stos
adc
xchg
nop
add
adc
fcomps
sahf
push
mov
lea
push
mov
test
mov
mov
inc
push
jno
call
popf
push
mov
push
movsl
sbbl
inc
add
push
ds
jb
fisubrl
call
xchg
mov
ret
push
inc
pop
mov
jb
xchg
inc
lds
cmp
mov
jo
ficomps
add
imul
nop
inc
fcmovu
and
movsl
ljmp
ja
daa
imul
iret
outsb
lods
outsb
cmp
cmp
sbb
lea
cmp
out
setp
addr16
lret
fcmovb
in
adc
sub
add
outsb
inc
sti
in
pusha
hlt
cli
adc
std
jae
pop
gs
dec
in
subl
mov
shl
imul
aad
adcb
pop
dec
rol
ss
xor
out
lret
cmp
mov
idivb
push
mov
ficoml
jmp
add
lret
ja
sub
mov
aam
movsl
jo
xchg
ret
and
mov
push
add
push
jno
les
mov
mov
decl
nop
cmp
jmp
clc
cltd
es
int3
cwtl
test
xchg
push
bound
popf
cmc
movsl
popf
insl
inc
dec
sub
sbb
jg
lods
out
push
int3
sub
mov
jnp
popa
mov
ret
sbb
hlt
into
dec
add
es
cmpsl
in
push
cmp
rcr
aaa
add
adc
mov
xchg
outsb
fnstcw
outsl
cmpsl
aas
mov
push
popa
push
dec
outsb
sbb
cmpl
xchg
push
cmp
dec
cmp
popf
mov
nop
enter
daa
add
insl
fldenv
xlat
push
adc
and
add
fidivrl
sti
xchg
test
jmp
test
mov
jg
fimuls
or
cmpl
xor
mov
iret
add
push
jmp
or
test
xor
test
cltd
iret
mov
setbe
cmpsl
mov
mov
sti
out
cmp
iret
dec
dec
xor
or
fmuls
push
lods
lods
sti
jge
sub
das
and
pop
popa
in
jecxz
mov
shlw
jo
rcrl
jns
cmpl
cmp
sub
adc
pop
fdivr
cltd
pop
cmp
mov
inc
in
je
mov
jmp
push
lcall
leave
fimull
fsubl
in
popa
push
fdivl
pop
lret
je
add
push
ret
shrl
std
in
fldcw
loopne
add
movq
roll
js
into
xchg
lret
jbe
jge
or
push
push
or
leave
or
out
lea
cmpsb
outsl
popa
and
ja
ret
pushl
mov
shl
lret
sub
ja
and
mov
mov
xor
adc
inc
int3
sub
in
fsubrl
mov
cmpsl
push
xlat
adc
mov
in
call
push
jmp
sub
aad
inc
lods
jmp
enter
pusha
jo
clc
loope
xlat
in
repz
push
lret
jns
sarb
mov
pop
into
pop
cmp
mov
xchg
ret
push
sbb
jnp
mov
and
popa
fisttpll
pop
fnsave
mov
in
sub
push
ja
mov
fsubr
lret
fdivrl
lcall
inc
lds
imul
sub
arpl
xchg
shlb
lods
lock
pop
or
xchg
ret
push
sahf
les
repz
into
jecxz
lods
jbe
xchg
ftst
test
pop
cmpsb
je
adc
and
sub
cmp
scas
push
outsb
mov
outsl
scas
mov
pop
adc
jl
lods
mov
push
data16
sub
shrl
fxch
loope
pusha
xchg
out
mov
cltd
push
out
dec
xchg
sub
dec
je
push
movl
sbb
mov
mov
jecxz
orb
imul
inc
and
or
and
in
loopne
jle
lret
mov
stc
push
jmp
cmp
jo
ficoml
ds
jns
inc
sbb
dec
jae
lock
into
dec
push
cmp
popw
and
mov
dec
insl
shll
ljmp
jl
bound
cmc
push
test
cwtl
push
push
jnp
add
push
stos
mov
out
lret
sub
aas
pusha
fisubrl
mov
test
jmp
add
fnstcw
mov
popa
xchg
cmp
add
add
mov
push
movsl
cmp
in
mov
pop
xchg
xchg
xorl
je
adc
imul
dec
lcall
adc
in
or
sbb
xchg
clc
fildll
xchg
mov
inc
movsb
pop
cmp
clc
in
sahf
mov
pushf
ljmp
inc
dec
cwtl
fcmovu
ficoml
in
adc
jg
sbb
xor
les
mov
orl
inc
cli
ret
push
out
filds
in
mov
imul
xchg
shll
mov
push
nop
add
add
fs
aam
lret
js
cmp
lret
add
mov
push
adcl
sbb
ret
les
shl
mov
push
dec
inc
mov
std
pushf
jae
in
faddp
push
je
mov
xorb
dec
add
aas
xchg
and
dec
lods
add
daa
rclb
lret
mov
adc
int3
dec
fidivl
fmull
push
stc
xor
push
pop
xchg
addr16
jmp
xor
dec
imul
outsl
sub
aaa
dec
jle
push
push
push
out
dec
enter
test
pop
xor
jae
lret
rcrb
mov
adc
js
scas
cmp
imul
cld
mov
sbb
mov
jmp
clc
adc
fisubrl
inc
sarl
roll
mov
fldl
add
test
and
mov
lret
imul
sahf
xor
test
sub
out
jmp
push
and
jne
mov
jbe
mov
bound
dec
leave
pop
sti
pop
sub
xchg
mov
rorb
stos
arpl
jbe
jb
fs
sbb
adc
imul
sub
add
or
stos
out
cli
ret
outsb
orl
test
push
add
sti
addr16
xor
or
pop
pusha
outsb
or
mov
add
xor
subl
and
insl
daa
icebp
imul
nop
fcomi
add
and
push
mov
out
and
mov
sbb
aaa
mov
cltd
xor
cmp
test
cmp
or
std
mov
sub
clc
shll
daa
inc
sbbl
add
setne
movsl
xchg
mov
sub
mov
inc
test
fwait
pop
movsl
adc
pop
lcall
and
mov
fists
xor
jns
jge
or
insb
lock
mov
into
inc
lock
or
cs
daa
in
pusha
mov
ror
mov
mov
xor
rclb
in
xchg
xor
mov
and
and
inc
add
bound
ss
add
or
xor
adc
out
pop
arpl
inc
cmp
sbb
push
push
adc
xor
divb
and
mov
cmp
mov
cmp
int
test
inc
dec
or
jbe
ja
sbb
rolb
idiv
mov
rcll
push
dec
mov
adc
popf
sub
scas
add
jb
test
jno
jp
push
sub
inc
enter
fistl
push
adc
sub
scas
push
je
cmp
imul
push
push
adc
in
in
dec
sbb
cli
sub
cli
pop
cld
pop
notb
cmp
pop
xlat
cmp
in
hlt
enter
xchg
fimuls
mov
outsl
clc
add
jp
xor
xlat
arpl
or
dec
nop
adc
stos
subl
nop
daa
rcrl
and
mov
mov
sbb
testb
notl
pop
fucomp
hlt
sub
leave
xchg
testb
mov
mulb
cmc
aas
push
inc
sub
fwait
xchg
jl
pop
mov
fnstsw
xor
stos
fcompl
nop
pop
pop
js
pushf
call
push
dec
dec
xchg
xchg
and
jns
xchg
add
sbb
pop
imul
mov
mov
mov
mov
ret
adc
ret
cs
sahf
add
mov
mov
out
pop
adc
and
fldenv
hlt
mov
stc
sbb
push
lea
fcmovb
mov
xor
nop
add
add
cmp
rcl
mov
and
dec
std
adcl
push
add
aam
in
push
xchg
pop
inc
repz
ss
mov
mov
add
push
stos
mov
into
int
das
out
test
aas
jecxz
je
and
in
out
nop
push
cld
push
mov
mov
cmpsb
aas
lods
leave
adc
int3
push
pop
mov
push
leave
fstpt
xchg
fimull
or
cwtl
les
out
push
push
mov
in
push
movsb
lods
push
lcall
lret
sarb
inc
jmp
dec
dec
xchg
int
sbbb
sub
jle
in
or
fnstcw
pop
dec
add
pop
push
and
mov
xchg
fldcw
iret
push
jmp
dec
adc
rolb
iret
push
in
pusha
test
or
mov
jbe
push
xchg
jae
roll
adc
and
pop
xchg
dec
and
dec
das
mov
roll
pop
and
or
sub
js
and
inc
lea
das
pop
pusha
xor
lods
mov
rclb
addr16
cltd
into
lds
es
ljmp
ss
mov
test
test
nop
js
mov
cmpb
dec
scas
stos
mov
into
sub
jae
push
or
imul
or
pop
cs
lea
out
push
int
push
add
mov
lock
fcoml
in
sarb
in
lock
or
lret
inc
iret
in
xchg
xor
xlat
pushf
push
mov
mov
jno
dec
scas
jmp
xchg
jp
dec
jne
cmp
push
ss
pop
fs
inc
fldenv
adcl
sti
ds
repnz
mov
add
jno
adc
jmp
mov
cmp
test
sub
add
movl
dec
int3
hlt
in
aam
mov
andl
test
shlb
cmp
ret
mov
or
pop
inc
in
loope
sbb
sbb
adc
push
fists
ss
mov
fwait
push
cmp
insb
fs
dec
stos
loope
xor
xor
xor
rorl
push
or
cmpsl
and
mov
xchg
mov
in
imul
ss
push
add
xchg
aas
icebp
push
pop
jl
out
jge
sbb
xchg
mov
jl
mov
push
fsubrs
mov
push
mov
pushf
daa
or
ret
mov
mov
test
aaa
xlat
repnz
push
ss
js
inc
mov
xor
nop
iret
jno
dec
adc
lock
xlat
cs
fldl
sub
xchg
xor
inc
rcll
push
xor
jo
inc
and
mov
adc
dec
pop
daa
ret
xor
lret
xchg
dec
pop
xor
repnz
xor
pop
pop
pop
out
leave
ffree
add
sti
and
les
lret
jne
clc
pop
jg
pop
imull
scas
mov
aaa
fildl
or
decb
jge
push
add
rorb
enter
pop
xchg
xchg
popf
mov
mov
mov
lcall
rcll
divl
mov
dec
xchg
xchg
lods
daa
adc
push
rol
xchg
out
add
push
aaa
cld
je
inc
stc
or
jmp
inc
mulb
loope
test
ret
movsl
or
or
xlat
lahf
lahf
bound
inc
jo
lcall
pusha
aad
xor
testl
rclb
mov
nop
cmc
lret
mov
int
push
pop
push
cmp
incl
xor
imul
int3
std
mov
jns
lea
sahf
ljmp
stos
mov
sbb
ret
outsb
into
mov
adc
lahf
imul
mov
inc
or
movsl
inc
mov
pushf
xlat
gs
mov
jecxz
push
scas
fwait
test
xchg
mov
popf
aad
xchg
mov
rcl
inc
push
pop
lea
xchg
mov
stos
xchg
mov
jg
pusha
pop
cmp
mov
dec
je
push
ds
bound
or
mov
push
imul
lcall
push
add
xchg
ds
stc
rcrl
or
push
pop
stos
iret
je
pushf
shll
lods
mov
mov
adc
cmpsl
test
je
add
push
jae
repnz
push
cs
scas
push
sbb
je
jp
mov
lods
pop
loop
mov
mov
push
int3
fisubl
xchg
inc
lock
leave
or
int3
fcoml
and
scas
mov
mov
repz
sbb
rorl
cmpsb
iret
fisttpl
fwait
xchg
inc
mov
mov
out
or
pop
xor
ret
imul
sub
loop
test
push
hlt
cmp
cmp
pop
neg
mov
scas
je
out
nop
jno,pn
dec
xor
or
maxpd
dec
adc
pop
mov
sub
and
and
cmpsb
lahf
mov
mov
fistpl
xor
outsl
inc
dec
test
mov
mov
jg
in
push
add
dec
jbe
loopne
into
xor
or
mov
sbb
inc
or
test
sti
add
mov
pop
orb
inc
dec
jecxz
cmpb
mulb
and
lret
pop
push
movsb
shll
cmp
loope
in
and
add
ret
out
push
add
inc
scas
ja
mov
loope
ljmp
jno
sti
xchg
popf
out
popf
out
arpl
lret
xor
push
adc
inc
lds
aas
pop
and
adc
and
out
sbb
ss
xor
jp
test
rcll
xor
dec
sub
adc
jnp
ficomps
dec
adc
ss
pop
data16
frstor
inc
outsb
and
popf
fiadds
jne
cwtl
add
pop
shlb
jbe
jo
loope
jns
add
pop
scas
nop
test
mov
add
ds
insb
lock
rcll
xchg
mov
mov
sub
push
add
in
stos
repnz
mov
dec
dec
xchg
xchg
sub
xor
mov
and
iret
xchg
adc
and
pop
sbbl
insb
inc
popa
cmp
or
sub
adc
mov
xchg
mov
rorl
pusha
mov
adc
mov
jle
push
in
aam
in
std
xor
dec
in
pop
mov
xlat
test
sbb
js
sub
repnz
movl
xor
dec
add
and
lret
aas
imul
jmp
lds
and
mov
nop
jo
xchg
shll
repnz
cmp
xchg
sub
sahf
adc
pop
mov
sub
mov
popa
fbld
xchg
aam
lcall
mov
cld
adc
inc
cmpsb
add
jg
xchg
hlt
into
jecxz
ror
cltd
fnsave
push
mov
int3
pop
cmp
add
dec
mov
adc
test
stos
or
imul
or
ljmp
rol
daa
xor
mov
jae
fcmovnu
pop
nop
pop
stos
mov
push
or
in
push
test
loopne
call
sbb
out
or
adc
aaa
lds
jg
movsl
jo
xor
cmp
push
cmpsl
outsl
std
sbb
lds
sub
in
sahf
sub
push
mov
inc
dec
pop
sahf
cmp
xor
lea
fs
aaa
push
adc
sub
popf
dec
pushf
in
std
add
sub
out
mulb
ss
pop
xor
sbb
lods
fwait
push
fimuls
pop
add
xchg
bound
rcrb
sbb
push
xchg
movsb
jmp
jae
std
outsl
js
add
jae
pop
das
sub
dec
int
or
sbb
cmpl
mov
adc
push
in
je
jbe
xor
xchg
ljmp
lods
fimull
arpl
iret
mov
pusha
popa
fmuls
lods
add
mov
repnz
jle
sar
movsb
pop
ret
sbb
sub
in
cmp
jmp
add
sti
popa
in
pop
or
sub
xchg
addb
mov
inc
and
lods
sub
pop
jg
mov
fs
or
mov
pop
mov
and
stc
iret
or
inc
or
push
pop
jp
mov
mov
jbe
stos
xor
cld
sub
push
in
dec
icebp
mov
icebp
dec
or
es
xor
and
pop
lret
push
mov
pop
fbstp
adc
jmp
lcall
cmpsl
mov
aad
xlat
and
in
or
cltd
push
jno
xlat
jge
lret
dec
out
mov
repz
dec
push
dec
stc
into
dec
jle
mov
in
jp
clc
clc
jle
sub
test
popf
pop
jg
mov
clc
fmull
fwait
std
lock
test
and
and
subb
cwtl
popa
scas
bound
lret
jmp
cmp
mov
data16
or
out
inc
and
repz
xor
pop
ja
jae
or
jl
or
clc
cmpb
inc
sub
add
mov
leave
jl
push
xor
xchg
jne
mov
les
loopne
fcmovnb
cwtl
loope
push
je
mov
cs
mov
or
pop
adc
mov
fildl
cmp
outsb
mov
sub
cmovle
out
pop
daa
dec
arpl
xchg
lcall
xor
mov
or
iret
mov
fstps
add
adc
in
dec
mov
and
inc
adc
pop
iret
loop
cld
lcall
and
mov
mov
popf
jge
cmpsb
sub
xchg
stos
inc
dec
adc
push
test
call
dec
rcrb
fdivs
aad
sbb
mov
sbb
jecxz
aam
inc
aam
jp
fs
shlb
stos
dec
and
aas
shlb
stos
mov
test
sub
or
inc
test
orb
mov
ret
pop
out
in
sbb
outsl
stc
fdivrl
or
cmp
pop
lret
adc
add
les
movsl
test
into
filds
cmp
popf
arpl
stc
subl
fcomps
push
push
xchg
ljmp
lock
adc
dec
scas
cmp
hlt
in
xor
pop
imul
ror
and
ljmp
push
shll
push
rclb
mov
jne
push
jne
sbb
mov
shrl
mov
sahf
mov
xlat
int3
shr
sahf
jae
mov
adc
or
mov
gs
inc
sbb
jp
std
xor
push
aaa
pushf
sbb
rcrl
int
jle
dec
fs
gs
mov
lea
mov
clc
inc
dec
cmp
mov
mov
lret
push
dec
daa
test
cli
insl
aaa
arpl
cltd
mov
and
aam
aas
inc
inc
es
jnp
test
mov
ffree
fwait
iret
mov
test
xorl
pop
pop
cmpsb
scas
dec
movsl
pop
cmp
inc
movsb
xchg
nop
fdivp
sub
loopne
cmpb
push
sahf
dec
popa
add
xchg
push
fldt
push
adc
outsb
xor
pop
sub
popa
inc
jae
test
shl
jge
bound
xchg
xchg
adc
adc
push
inc
adc
sti
out
test
pop
xor
sahf
push
xor
pop
shll
pop
jmp
loop
xor
cmp
and
fadds
mov
iret
cmp
add
lods
lea
sbb
pop
jle
jae
pop
jno
out
push
jl
or
pop
dec
rclb
sub
hlt
lds
adc
in
pcmpeqw
sub
sbb
inc
outsl
test
fisubl
leave
jp
notl
xor
xchg
dec
jbe
pop
int
cmp
add
jns
iret
xchg
fwait
xchg
dec
adc
sarl
sahf
mov
dec
jo
push
nop
mov
jmp
sub
push
push
sbb
hlt
test
mov
or
bound
or
push
dec
insl
mov
fisubrs
xorl
int3
push
mov
nop
and
int
pop
out
inc
jl
lcall
and
xchg
ja
stos
cwtl
sbb
adc
ljmp
cmp
push
in
mov
out
lahf
cmpsb
lcall
mov
sub
lret
bound
and
xchg
fidivrs
in
dec
mov
adc
mov
mov
add
sub
jne
sub
es
mov
stos
xchg
repnz
xchg
and
inc
sub
mov
add
dec
insl
loopne
in
adc
mov
pop
xchg
cmp
mov
xchg
pop
idivl
and
daa
cmp
sahf
xchg
jnp
xor
mov
sbb
pop
rol
jecxz
ljmp
xchg
out
nop
jl
adc
addr16
test
mov
insb
sbb
addr16
leave
jne
loop
into
test
pop
outsl
out
repnz
mov
inc
xchg
icebp
cmp
mov
push
mov
jns
test
xor
mov
mov
jno
fsubl
mov
arpl
mov
mov
jnp
pop
dec
and
and
sub
rcrb
call
fadd
ret
pop
jmp
mov
mov
cs
movsb
sbb
mov
cmp
xor
pop
mov
idivb
adc
push
popa
orb
or
sarb
and
push
popf
dec
fisttpl
pop
jae
psubq
inc
push
mov
add
sbb
mov
sub
insl
lea
outsl
mov
insl
push
dec
aas
sub
xchg
or
insb
movsl
test
mov
pop
jne
addb
dec
test
mov
sub
subb
out
lahf
push
dec
push
cs
jmp
das
enter
inc
push
add
mov
sub
std
mov
sub
rclb
or
and
xchg
xchg
int
out
lea
or
add
imulb
lods
sbb
pop
mov
jae
mov
sub
bound
stos
out
sub
add
push
ljmp
push
pushf
jp
cmp
popf
sti
out
mov
lret
faddp
pop
xor
nop
roll
mov
push
fidivl
cmp
mov
xchg
push
xchg
nop
fiadds
daa
or
mov
xor
or
push
scas
roll
add
iret
push
adc
repnz
outsl
imul
rorl
dec
mov
mov
hlt
mov
dec
push
push
adc
mov
xchg
cmp
mov
movsl
push
fs
test
lahf
test
jmp
sbb
lret
out
outsl
mov
mov
and
cltd
adc
aad
mov
ja
sub
mov
xchg
pop
mov
cltd
sub
sbb
andl
add
out
dec
and
das
pop
cmp
push
or
cmp
cmpsb
cmp
adc
out
mov
fnstcw
addr16
mov
ret
pop
or
movsb
jl
inc
ljmp
jno
jno
data16
xchg
xchg
cs
in
imul
dec
mov
les
pop
push
jno
xchg
test
sub
adc
cmpsl
out
sti
or
call
or
jle
jl
inc
xor
xor
lahf
into
inc
or
mov
jne
jecxz
xlat
lret
pop
cmp
test
mov
xchg
xchg
and
adc
sbb
imul
sub
rcll
xchg
inc
cld
jne
push
fwait
daa
movsb
mov
xchg
add
addr16
jae
insl
fnstcw
enter
or
mov
scas
lods
dec
arpl
sub
and
inc
fidivrl
scas
std
xchg
jae
mov
xchg
mov
jb
roll
mov
into
inc
in
scas
push
fdiv
inc
push
fistpl
loope
insb
loope
dec
lcall
adc
jg
cwtl
cmp
push
aas
hlt
sub
fwait
ja
adc
inc
andl
aaa
inc
xor
push
add
call
pop
jno
add
mov
das
out
movsl
mov
loopne
sub
mov
push
push
sub
cmovb
out
adc
pusha
nop
jmp
repnz
data16
out
fbld
xor
add
aam
push
iret
inc
push
repz
or
ret
sbb
aaa
negb
sub
push
pop
out
pop
sbb
roll
sbb
sbb
mov
shll
dec
lret
into
add
jae
sbb
lock
std
into
dec
mov
and
loop
pusha
xchg
out
pop
sbb
les
push
xor
das
jp
sbb
cmp
pop
and
sub
into
movsb
hlt
aad
adc
sbb
dec
lret
js
dec
push
inc
mov
push
fcoml
cmpsl
jge
fs
mov
jecxz
sti
loop
jp
cwtl
xor
jmp
mov
in
add
jecxz
roll
je
ds
push
add
inc
cwtl
rorl
out
js
cmp
bound
lahf
bound
or
mov
adc
pop
mov
sbbl
fwait
xor
shrd
out
popf
test
outsl
mov
push
mov
mov
adc
ljmp
xor
mov
es
jp
cmp
pop
test
inc
push
pop
xor
mov
push
pop
fstpt
cmp
insb
ljmp
into
cli
push
sbb
push
int
mull
jle
adc
push
cmp
dec
cli
sbb
inc
cmp
repz
call
or
add
nop
scas
or
mov
push
lret
das
adc
xor
inc
ret
inc
pop
lret
pop
xor
inc
addr16
cmp
mov
xchg
xchg
fcomip
sub
inc
ja
ja
loopne
pop
adc
mov
fwait
orl
add
cmpsl
adc
pop
inc
popa
test
pop
sub
xchg
dec
ss
lods
mov
cmp
ds
mov
test
ret
sbb
out
lcall
sub
jl
lea
insb
xchg
push
repz
into
je
inc
nop
jbe
fnstenv
js
push
ljmp
cmp
lahf
mov
imul
mov
ret
hlt
sarl
sbb
into
hlt
das
or
sbb
mov
addr16
js
jmp
cmp
or
leave
fnstcw
mov
ja
sub
and
out
or
jmp
mov
inc
setnp
cli
jbe
jo
in
lret
mov
cli
jl
inc
fstpt
js
popa
pop
xor
sub
push
test
call
sahf
mov
lea
cltd
pop
pop
jnp
out
and
adc
add
cld
out
dec
xlat
shll
jae
cld
cmpsl
dec
mov
aad
cltd
jecxz
jg
and
add
mov
jmp
sahf
pushl
into
jo
lret
cmp
cltd
inc
sbb
xchg
mov
rcr
mov
and
lcall
mov
or
pop
stos
cwtl
and
mov
mov
jno
nop
jecxz
imul
scas
xor
adc
pop
fiaddl
or
pop
or
out
sub
rclb
xchg
cld
mov
jns
or
movsb
call
movsl
mov
push
dec
xchg
jecxz
pop
vmovsd
cmp
leave
add
dec
adc
and
add
pop
push
xor
add
mov
fsts
movsb
into
inc
xor
mov
gs
das
into
out
pop
and
pop
les
mov
mov
out
sti
repnz
idivb
cmp
mov
fldt
pop
cmpsb
sub
iret
idiv
xor
and
adc
xor
pop
pop
xchg
xchg
jns
in
and
test
bound
lds
push
fidivrl
mov
jb
into
lahf
cmovle
xchg
ret
cmpsb
mov
push
clc
sbb
inc
or
add
push
test
les
shufps
and
cmp
nop
and
test
mov
cmp
and
jp
inc
cmp
int3
outsl
gs
sbbl
sbb
lahf
add
lret
dec
mov
mov
sbb
faddl
xchg
loope
adc
jle
mov
dec
mov
add
pop
out
scas
xor
sub
jbe
les
jns,pn
ret
pop
jnp
incl
les
cmc
jmp
test
adc
cmp
xor
mov
int
inc
loopne
iret
lods
cmp
cmp
inc
insb
push
jbe
stc
cmp
jg
fisubs
pop
adc
fmul
fdiv
and
pushf
mov
xchg
xor
addb
aam
movsl
movsb
in
cmpsl
popf
cld
call
xor
jge
sbb
xchg
and
gs
aad
pushf
push
fwait
out
out
and
mov
sti
lcall
push
mov
shlb
xchg
insl
or
xlat
add
mov
test
push
addr16
add
mov
popf
cmc
or
repz
loopne
hlt
lcall
push
lods
shll
nop
or
hlt
sbbb
hlt
cmc
xor
jno
jne
cmp
ljmp
or
dec
dec
dec
xrelease
scas
movsb
ret
inc
sbb
jmp
dec
les
lret
mov
xor
xor
sbb
xchg
in
cltd
xor
jne
cmpsl
jmp
add
mov
add
movsb
cmpsl
out
popa
adc
and
dec
mov
fmuls
push
mov
sub
jno
mov
mov
repz
idiv
and
ret
cmp
jp
and
loop
mov
jb
xlat
or
push
mov
pop
cmp
aaa
ljmp
mov
xchg
pop
out
scas
xchg
cmp
std
xor
gs
pop
mov
int3
jge
xchg
jmp
or
mov
cmp
mov
nop
pop
ret
mov
cmp
roll
cmp
test
jo
adc
mov
and
mov
in
push
xorl
mov
enter
stos
mov
sub
add
cmp
negw
mov
lock
ss
push
mov
imul
shl
mov
pminub
sub
fistpl
ret
mov
mov
dec
call
pop
mov
push
dec
dec
icebp
jmp
clc
cmp
jno
push
je
addb
sbb
xchg
bound
and
adc
sub
cmp
sti
pushw
fldt
fisttpl
in
out
cmpsb
sbb
test
xorl
xor
xchg
les
shl
stos
xor
mov
sbb
pop
pop
or
shll
lret
fildll
push
sbb
outsb
pop
push
icebp
cli
cmp
popf
in
mov
xor
lahf
adc
or
xchg
std
cmpsl
sbb
arpl
push
ror
add
jns
movsl
aam
mov
jne
js
xchg
out
and
sbb
sub
mov
mull
or
jl
outsl
lret
sbb
xchg
sub
mov
fwait
xor
daa
bound
fidivl
or
mov
inc
inc
into
or
not
sub
les
fildll
inc
push
jns
loope
cld
jmp
icebp
mov
gs
out
jmp
out
leave
mov
xor
push
cli
xor
movsl
jmp
lea
or
cltd
ss
push
rorl
jg
mov
inc
popf
shll
push
pushf
push
jl
mov
out
and
lods
pop
dec
push
bound
fldlg2
pop
push
push
popf
mov
sbbl
push
addl
in
xor
fistl
es
lods
lea
sbb
mov
push
cmp
mov
lock
inc
cs
push
jl
xchg
pop
scas
dec
in
loopne
dec
sbb
mov
cmp
mov
call
pop
or
lcall
fmull
inc
xor
add
mov
loopne
cli
and
sub
mov
sub
sbb
sbbb
aad
jne
shlb
jmp
repnz
adc
loope
insb
mov
or
xor
add
ljmp
mov
push
dec
stos
roll
call
cld
rolb
sub
pop
rcrl
sbb
bnd
xchg
int3
fsubl
enter
push
push
sarb
jnp
bound
insl
lods
popf
mov
mov
xchg
leave
mov
ret
jecxz
sub
jne
adc
dec
and
cmp
dec
and
push
outsb
test
mov
sub
movsb
sarl
in
loop
inc
push
daa
clc
xchg
add
nop
in
dec
and
cmp
psubusw
sbb
push
jnp
shlb
xor
adc
cli
mov
push
jle
pop
push
cwtl
push
leave
ret
adc
pop
and
pop
dec
cmpsl
imul
lea
sbb
xor
mov
push
nop
cwtl
xor
and
negl
lods
popa
inc
insb
sbb
xchg
iret
pop
and
and
push
xor
cmp
dec
test
mov
in
iret
or
dec
dec
in
cltd
ds
fwait
ja
sbb
sub
stos
pop
cs
dec
inc
fiaddl
fsubrl
sbb
mov
mov
push
shlb
or
cmp
push
int
sub
cmp
cmp
aad
test
sbb
or
push
inc
pop
xor
out
std
cmp
jae
mov
push
jmp
nop
jmp
mov
cld
outsl
push
fcoms
aam
or
jge
dec
test
in
and
orl
push
jb
xor
dec
mov
outsl
inc
inc
shlb
mov
cmpsb
add
mov
xchg
jne
popa
std
nop
out
sub
xchg
loop
rcrb
adc
push
ficoml
js
aaa
jns
ja
ja
mov
int
dec
cmp
jecxz
test
imul
gs
xchg
sub
in
mov
cwtl
sbb
in
stc
rcrl
adc
fbld
inc
sbb
dec
idivb
mov
fs
loopne
fcomps
xchg
ret
cli
mov
cmp
cltd
xchg
jp
cmc
push
fs
push
insb
sbb
mov
sbb
pop
add
ljmp
lcall
out
mov
jne
inc
jecxz
sbb
or
pop
int
or
out
lds
jb
pop
scas
daa
inc
or
push
call
mov
xor
add
lock
imul
mov
rorb
mov
ljmp
cmp
xchg
idivb
lds
push
inc
wbinvd
inc
les
pop
dec
out
push
sub
roll
lsl
sbb
ret
imull
dec
push
push
sbb
jb
loope
hlt
inc
or
jle
push
aam
pushf
lret
repz
aad
frstpm(287
sbb
ljmp
dec
dec
sbb
in
pop
cmp
rorl
loopne
rcrb
push
mov
les
or
scas
pop
cmpsb
jp
sbb
push
sub
xchg
or
mov
push
mov
mov
mov
rolb
adc
add
ret
popf
sub
adc
push
cmp
loope
sbb
jmp
int3
add
int
sbb
push
adc
xchg
test
push
mov
mov
fdivs
rcll
mov
cmp
jb
mov
push
inc
xchg
cmp
cli
cltd
movsb
lods
jp
fistpll
stc
inc
leave
repz
inc
mov
mov
jnp
fdivl
jle
lock
add
cmp
test
or
je
sbb
adc
in
and
pop
pop
xchg
xor
sbb
pusha
loop
popf
pusha
loope
daa
push
movsb
int3
js
mov
xor
cli
xchg
enter
lahf
xchg
imulb
js
je
aas
add
sbb
pusha
inc
pop
cltd
xor
jge
mov
adc
and
push
outsl
fs
lods
daa
pushf
and
sbb
outsb
das
pop
pop
xor
inc
sub
mov
loopne
loope
mov
clc
leave
pop
and
pop
mov
mov
sub
xorb
jbe
push
pop
push
mov
and
jno
sbb
cmp
add
push
in
int3
lods
fisubs
ret
addr16
into
cli
mov
dec
dec
pop
insb
in
mov
xchg
fisubrs
cmp
cmpl
jl
inc
fiadds
cmp
aaa
js
out
out
scas
clc
pop
xor
ljmp
dec
xorb
outsb
icebp
mov
clc
shll
int
les
movsb
sub
gs
rorl
cltd
ds
fiadds
stc
ljmp
or
pop
ficoml
es
sub
imul
ja
mov
cli
aad
pusha
push
out
pop
pop
mov
int
xor
cmp
ftst
test
sbb
ret
add
cmp
jle
cmp
clc
lds
dec
roll
cmp
mov
cmp
xor
repz
dec
push
movsb
gs
add
push
push
cmp
adc
cmp
test
cltd
cld
push
cli
and
or
add
loope
mov
loop
int3
pushf
xchg
neg
scas
loop
xchg
int3
sar
repz
sti
mov
icebp
and
into
lock
mov
sbbb
jg
cmp
daa
inc
aaa
mov
mov
push
loopne
cli
jnp
idivb
inc
lds
pop
adc
aad
mov
mov
pop
test
inc
push
or
inc
dec
mov
pushf
push
inc
bound
xor
inc
or
pop
ljmp
dec
ja
sub
mov
push
ret
repz
push
push
mov
and
mov
mov
cmc
mov
push
ja
mov
nop
adc
pop
dec
add
inc
pop
push
mov
sbb
pop
sub
push
push
fsubrp
mov
inc
das
repz
leave
mov
adc
hlt
sbb
jl
sub
repnz
and
imul
aad
or
jle
mov
inc
iret
ret
sbb
and
sub
adcb
cmp
and
add
movsl
jle
push
cmp
xchg
or
xor
push
js
imul
mov
xchg
xor
sub
aas
inc
sub
xlat
sbbl
adc
mov
cli
ret
jbe
adc
jb
xchg
sub
lock
jb
add
push
and
or
addr16
or
cmp
es
add
xlat
mov
dec
and
jmp
or
aas
lcall
fcomp
mov
lcall
hlt
jae
call
adc
add
scas
xchg
mov
pop
pop
lock
nop
push
ficoml
jmp
stos
cld
int3
dec
movsl
mov
pop
out
inc
dec
jo
jle
hlt
cmc
adc
ljmp
and
xchg
jne
shl
cmpsl
pop
es
ljmp
aam
pop
pop
das
lret
and
and
inc
leave
mov
inc
xlat
mov
xchg
or
jecxz
stc
pop
in
mov
scas
test
jns
popa
das
fildl
pusha
mov
enter
bound
out
jmp
stc
pop
lods
cs
mov
enter
jnp
mov
test
pop
add
or
outsl
in
imul
sbb
push
xchg
cmp
or
cmpsb
rcr
leave
and
in
test
mov
push
inc
xor
inc
sub
cltd
nop
push
and
push
push
and
add
mov
and
je
add
xchg
fsubrs
mov
sbb
leave
and
mov
les
mov
jge
dec
test
or
ficompl
ljmp
push
mov
cld
xor
mov
cmp
jl
xor
jl
jbe
test
and
push
inc
cmp
jbe
scas
movsb
leave
mov
aas
negb
xlat
movsb
adc
and
sti
mov
pop
ds
and
lds
dec
lret
fmuls
xchg
mov
mov
or
lret
sbb
fnstsw
mov
clc
subl
pop
bound
add
test
jno
jnp
cltd
lods
xchg
mov
out
and
xchg
aas
decl
lods
sbb
iret
shl
and
into
cltd
call
and
or
out
aaa
stc
inc
dec
int3
pop
lds
ss
sbb
mov
sbb
add
mov
jle
andl
aas
mov
xchg
pushf
xor
jl
loop
mov
icebp
mov
inc
bound
pop
mov
xlat
sbbl
xorl
lds
dec
cmpsl
insl
jge
orb
lea
xor
push
pop
xchg
dec
js
jne
movsb
add
mov
inc
lds
hlt
mov
or
mov
cs
xor
out
ficomps
xor
andnps
popl
adc
fs
out
cld
repz
pop
jns
and
cmp
bound
add
jnp
mov
aaa
xchg
fnstenv
xor
jne
dec
lds
and
add
scas
or
fwait
cwtl
add
test
inc
outsl
ds
dec
out
stos
mov
mov
xrelease
enter
fistpll
outsl
out
fimull
xchg
shlb
dec
inc
xchg
xchg
pop
jne
daa
rorb
mov
mov
std
push
add
mov
xor
push
pop
jb
dec
mov
loopne
xor
push
cmp
xor
push
loop
mov
popa
daa
mov
in
push
xchg
cmp
aaa
popa
cld
adc
inc
ds
rorb
dec
out
and
dec
fbstp
hlt
mov
jecxz
xor
sbb
sub
xchg
cmp
popl
popf
mov
cwtl
data16
and
cmp
inc
xor
mov
pop
mov
mov
mov
mov
sub
mov
imulb
add
andb
in
xor
pop
leave
sub
dec
xor
push
mov
mov
mov
adc
or
xchg
stos
xor
and
xchg
test
pusha
sbb
inc
mov
mov
outsb
test
xchg
int
mov
inc
inc
dec
lret
jmp
fdivl
dec
test
and
pop
test
push
jecxz
addl
push
mov
cmc
orb
addr16
into
in
push
in
add
test
push
mov
daa
popa
mov
jns
add
pusha
stos
jl
ja
insl
mov
fisttps
push
sub
stc
test
pushl
in
mov
sub
pop
jne
jp
repnz
pop
xchg
cs
sbb
les
das
sbb
test
adc
mov
clc
pop
lcall
mov
cmpb
jmp
inc
loop
addr16
dec
push
xor
add
and
movsl
daa
std
negb
daa
aaa
pop
dec
sahf
stos
sbb
xor
mov
cmpsb
xor
cmc
fidivs
jnp
xchg
arpl
pop
cmpsl
adc
adc
je
or
fmuls
fmul
in
das
pop
push
pop
pushf
add
dec
pop
ds
fwait
idivb
push
rclb
nop
jp
aam
pop
test
outsl
cs
into
xor
sbb
fcmovb
add
sbb
xor
lock
cltd
sub
jl
idivl
es
mov
lahf
xlat
clc
out
mov
rclb
dec
inc
mov
cmpl
out
das
repnz
jp
outsl
cmpsb
pop
push
lea
in
mov
xchg
adc
loop
dec
pop
out
fwait
and
sbb
fisttps
add
js
and
or
add
add
jno
insb
sbbl
sub
ds
mov
cwtl
sti
xor
addr16
es
fldenv
je
push
adc
xchg
xor
popa
outsb
xchg
inc
push
xor
je
push
add
call
cmovne
fcompl
sbb
xchg
cmp
pop
divb
xchg
dec
fstpt
or
loop
add
sti
pop
mov
test
inc
shrb
bound
dec
sub
xor
fistps
mov
cmp
and
cmpsl
sbb
inc
xor
cmp
aas
mov
or
mov
and
adc
andl
adc
nop
aad
rcll
dec
jns
shr
push
test
lret
cmp
into
mov
scas
fldl
sahf
lods
dec
ljmp
imul
aaa
aas
pop
adc
ret
mov
mov
jp
sub
mov
cld
jno
sub
or
mov
mov
pop
push
pop
out
cmp
insb
xor
mov
stc
rorb
push
sti
or
cli
outsb
jns
add
inc
test
sbb
pop
adc
insb
sub
xchg
jnp
aas
lret
dec
sahf
jle
mov
dec
and
jle
push
xor
jmp
inc
push
jbe
pop
adc
lea
in
dec
mov
mov
fstpl
nop
and
aas
sub
cmpsb
inc
push
sub
xlat
jnp
popf
out
cmp
fmull
es
adc
cmpsl
test
orb
insb
mov
inc
sub
jne
es
aas
clc
inc
xchg
xchg
mov
enter
sub
pop
and
xchg
aaa
in
add
lret
fisubs
lds
insl
lock
mov
dec
pop
xor
int3
fldl
rorb
adc
mov
sbb
mov
xchg
inc
add
outsb
add
sbb
das
ret
push
xchg
mov
aaa
das
sbb
cltd
xor
imul
pop
stos
in
pop
pop
inc
int
push
sarb
mov
pop
jae
and
adc
push
xchg
loop
adc
lds
sbb
xor
jl
rcrb
dec
push
shll
xchg
sbb
cmp
ljmp
xchg
xchg
setle
decb
xor
aaa
and
cwtl
incl
lahf
loopne
fdivr
xorl
out
pop
sub
sahf
scas
jp
pop
ror
push
inc
fs
jl,pn
and
jae
add
out
mov
ss
and
mov
sbb
sbb
cmpsl
jne
in
push
sub
xchg
pop
mov
ja
dec
dec
mov
fcomi
push
xchg
xchg
lods
jns
push
movb
push
clc
sahf
fucomip
insb
mov
mov
xor
pop
push
pop
dec
shll
inc
in
push
loope
clc
lods
mov
adc
clc
pop
mov
sahf
mov
or
aas
pop
push
xchg
push
lret
pop
mov
push
push
mov
outsl
int
xor
dec
les
lret
mov
movl
aam
or
push
mov
cld
jge
stc
sahf
mov
add
divl
inc
ret
sbb
jno
popf
call
es
xor
js
je
pusha
lcall
add
movsl
mov
fmul
lcall
push
push
push
adc
mov
ljmp
movsb
int3
stos
mov
and
call
dec
mov
sub
imul
jbe
xchg
cmp
mov
in
mov
mov
cmp
mov
dec
negb
push
xchg
nop
loope
adc
adc
cmpsb
imul
les
in
bound
mov
mov
add
xor
pop
add
sbb
sti
add
fcompl
cmp
push
mov
pop
dec
mov
out
roll
ss
arpl
lods
jecxz
shlb
pop
jnp
and
xchg
xor
mov
lods
xor
and
lret
addb
cmp
popf
inc
cld
push
int
test
and
outsl
mov
mov
mov
out
mov
lahf
adc
lods
dec
cmp
int
jg
mov
xchg
outsl
xor
xchg
out
jb
push
lcall
arpl
or
cld
imul
aas
push
fsubrl
loope
mov
test
xchg
int
pushf
stos
mov
insb
rolb
arpl
cmp
lcall
inc
mov
ss
inc
pushl
sbb
popf
out
jo
aad
mov
subb
loope
sti
push
jge
mov
sbb
gs
cmpsb
jl
popf
into
xor
mov
mov
inc
mov
push
lea
push
xchg
and
addl
movsl
jns
sbb
std
adcb
je
stc
in
pop
ljmp
jecxz
jbe
mov
mov
mov
jnp
movsb
adc
or
test
lcall
xor
out
mov
or
adc
int
in
shlb
ds
pabsb
popa
int
es
loop
jno
xor
sub
jmp
ljmp
imul
cmp
enter
mov
loopne
pop
fs
ja
jecxz
cwtl
and
stos
pop
aas
orb
lds
mov
push
adc
xchg
xlat
jl
out
push
ja
mov
and
int
push
jae
rolb
pop
lret
xor
xchg
jo
aaa
nop
push
mov
sub
mov
int3
aas
mov
or
or
push
and
pop
mov
out
out
fchs
lds
cwtl
pop
daa
negl
dec
imull
mov
test
pop
mov
test
xchg
ret
inc
push
scas
cmc
pop
daa
ret
popa
cmpsl
cmp
hlt
or
ljmp
out
add
scas
in
sbb
fldcw
sbb
pop
xlat
or
mov
and
or
xchg
jo
fistpll
fwait
arpl
hlt
jecxz
push
mov
scas
std
add
jne
jg
fcoms
outsl
xor
sti
pop
call
adc
mov
and
pop
mov
xor
mov
cmp
hlt
dec
leave
adc
sti
sti
sub
int
sub
cmc
fbld
cli
push
xlat
movsl
push
pop
pusha
sti
inc
fldt
push
jle
sub
out
mov
cmp
adc
jecxz
pop
jb
loopne
movsb
dec
popa
cwtl
mulb
dec
xchg
inc
xlat
test
jno
push
call
pusha
movsl
jecxz
mov
mov
sub
insb
mov
xchg
movsl
push
test
push
outsl
aam
mov
call
ja
popf
repnz
in
sarl
in
outsb
stos
xchg
ret
xor
mov
jge
cmp
test
lea
hlt
inc
dec
mov
mov
jne
loop
mov
movsl
cltd
mov
inc
xlat
add
lock
push
dec
sub
push
sub
jg
mov
insb
sbb
andb
out
inc
adc
cmp
or
fdivrl
sub
rorb
mov
sub
out
xor
outsl
sub
or
lret
out
cmp
test
hlt
pop
imul
mov
das
insl
xchg
push
mov
fwait
pop
call
rcrl
xchg
movsl
and
and
sbb
popl
cmp
dec
mov
lahf
add
sub
rol
or
pop
add
std
repnz
sbb
loope
test
mov
push
pop
pusha
rorl
outsl
jns
mov
mov
imul
incl
push
lret
pop
lds
add
smsw
lret
inc
xor
and
jmp
call
mov
pop
add
fwait
and
pushf
xchg
jnp
inc
jns
xchg
sbb
push
cld
mov
mov
mov
xor
adc
sub
js
and
sbb
fsubs
loop
xchg
insb
push
lods
repnz
outsl
sub
lods
iret
movsl
mov
or
daa
push
incl
in
ds
fsubl
mov
pop
cmp
mov
adc
cltd
mov
sbb
mov
jecxz
mov
adc
dec
add
sbb
hlt
cwtl
adc
sti
pop
mov
aam
in
inc
mov
or
sbb
mov
cltd
pop
mov
int
in
xlat
repz
add
stc
popf
leave
xchg
daa
jnp
notl
mov
and
mov
sub
xor
pusha
lahf
mov
pop
ja
fsubl
fldenv
adc
les
lods
bound
ds
pushf
cmp
leave
dec
sub
add
jge
pop
sbb
std
cmc
daa
rcrb
or
rcrl
test
sbb
f2xm1
dec
pop
xchg
pop
adc
or
je
pop
xchg
push
sub
cmp
jge
test
test
dec
mov
jbe
jmp
lahf
lcall
idivl
inc
aaa
lock
ss
setns
ds
push
adc
ja
clc
pop
out
sub
notl
adc
jecxz
repnz
xchg
sbb
push
loope
into
mov
push
sub
and
dec
lds
repz
roll
mov
xor
dec
stos
sub
jnp
mov
cmpsb
cmp
movsb
lcall
sbb
int3
sarb
mov
repnz
test
mov
cmp
cmpsl
stos
jl
xchg
xor
les
mov
and
popf
ret
cmovae
aaa
pop
scas
shlb
lcall
loop
in
ds
mov
add
xor
or
out
add
jae
test
pop
pusha
adc
push
mov
adc
loope
mov
xor
sub
in
cli
js
cmpsl
cmc
rcr
and
out
sub
cmpsb
and
test
in
mov
jecxz
sub
pop
add
int
xor
push
lods
mov
inc
insl
jo
sub
stos
cmpsb
mov
loop
insb
movsb
push
loopne
mov
aas
in
sbb
xchg
jne,pt
cld
jp
daa
aad
clc
in
adc
and
sahf
mov
pop
rclb
and
loopne
pop
adc
add
sub
test
mov
int
mov
cli
js
add
fbld
lea
hlt
lea
push
rorl
adc
enter
xchg
jo
insb
aaa
inc
mov
mov
xchg
push
daa
cld
inc
lds
int
adc
sbb
mov
ss
xchg
out
cmpsb
pushf
mov
fiaddl
pop
cmpsb
xor
int
mov
fiadds
mov
push
cmp
ror
mov
mov
popf
insb
inc
dec
pop
mov
ss
sti
addr16
xchg
subl
pop
sub
xchg
movsb
stos
jle
lahf
jb
mov
jl
inc
mov
call
inc
jb
sub
mov
dec
xchg
pop
jo
push
stos
push
push
mov
jmp
aad
sub
xchg
mov
push
insb
psllq
adc
add
lahf
fnstcw
add
mov
xlat
add
shlb
dec
cltd
fnsave
or
push
xor
and
xlat
or
add
dec
add
aas
je
push
mov
into
jp
scas
dec
and
adc
jp
mov
xchg
jmp
push
sarb
adc
das
pop
push
mov
mov
mov
subl
and
clc
pop
dec
imul
hlt
add
sbb
adc
jnp
adc
pop
ljmp
loope
sub
insl
fadd
stos
mov
fs
lods
mov
adc
outsb
outsl
dec
xor
lods
lds
dec
dec
je,pt
push
xchg
pop
add
fs
sbb
or
fs
sbbb
bnd
cmp
mov
rorl
xchg
jae
test
addr16
in
push
jge
xchg
mov
jne
movsl
mov
lcall
scas
inc
add
sbb
lock
sahf
or
js
dec
or
nop
insl
pusha
pop
push
arpl
repz
jnp
jle
adc
clc
inc
stos
jle
xlat
test
add
ds
jg
popf
xchg
and
jp
cwtl
add
in
dec
sub
je
xlat
std
sub
jge
dec
jecxz
ret
xor
test
loope
push
xor
addr16
mov
aad
xor
or
or
jnp
lea
sahf
movsb
push
in
mov
mov
add
lds
mov
xor
or
mov
outsb
std
jno
pop
jle
ds
jle
dec
dec
xor
movsl
repz
negl
ret
dec
inc
pushf
inc
xchg
enter
mov
in
jnp
flds
test
ljmp
fldt
pop
pushf
shll
loope
loope
test
je
xor
iret
dec
xchg
or
jae
ds
and
xchg
movsb
push
pop
aam
shrl
jl
push
push
idivb
cwtl
pop
sbb
xchg
sbb
loope
mov
adc
iret
lods
orl
imul
push
cwtl
test
inc
leave
sbb
inc
sub
add
and
shll
jg
in
dec
mov
xor
pop
jle
das
sti
sub
sahf
mov
popf
fstpl
bound
dec
push
xlat
pop
adc
cmp
and
mov
es
push
insb
jle
jl
clc
test
jae
mov
inc
std
push
shlb
and
sub
lods
insl
push
test
mov
pop
repnz
pop
scas
lretw
sub
aaa
enter
scas
cmp
neg
jae
pop
rclb
and
mov
leave
cmpl
lahf
jl
fidivl
shll
ficoms
mov
xor
scas
rcrb
clc
mov
js
pop
fldl
lret
out
add
or
xor
cmpsl
add
cmp
call
jmp
cmc
aas
fs
fistpll
fists
idiv
xlat
dec
push
mov
not
arpl
dec
and
imul
test
mov
addl
pop
gs
imul
xor
jae
and
lret
cwtl
clc
push
push
out
lcall
hlt
inc
pop
pop
popf
xchg
sub
jle
leave
mov
push
sub
push
jb
inc
pop
xor
mov
pop
iret
mov
mov
inc
or
lcall
push
push
xor
mov
in
jl
andb
or
es
pop
mov
inc
sbb
mov
in
inc
fistpl
popf
xlat
xor
xchg
or
push
xchg
add
fimuls
inc
bound
cwtl
jg
inc
fcmove
sarb
add
push
adc
shr
push
pop
xchg
incb
pop
jmp
imul
xchg
push
mov
sbb
adc
or
inc
out
xor
xchg
lahf
jns
fdivrl
hlt
shrl
bound
jmp
test
add
xchg
adc
add
pop
je
or
in
paddusb
loope
xor
scas
fisubs
aad
je
aad
push
stos
call
add
xchg
fistl
xor
inc
daa
add
pop
add
addr16
mov
dec
cmpsb
imul
ret
sti
dec
jo
jbe
mov
mov
mov
push
mov
test
dec
cmp
push
or
fcomi
fistps
push
and
shrl
push
dec
aad
loop
dec
push
jns
inc
fwait
mov
in
data16
fwait
aam
daa
mov
xchg
test
sbb
pop
fwait
xchg
fstps
xchg
sub
xorl
andb
dec
mov
xor
and
cmc
scas
dec
movsl
stos
mov
push
push
mov
jo
int3
jmp
mov
mov
and
mov
cmp
or
xchg
mov
adc
inc
inc
add
aad
dec
outsb
repnz
or
test
dec
sub
xchg
loop
jg
scas
jl
adc
cmp
and
jae
push
jl
or
test
xchg
cmpsb
pushl
pop
xchg
iret
sub
cmp
iret
stos
mov
jnp
sub
dec
stos
xor
hlt
sarb
call
jbe
push
out
sub
popa
mov
mov
pop
outsl
frndint
jne
mov
dec
dec
out
dec
cltd
shlb
adc
stc
mov
xor
lcall
mov
cmp
adc
adc
mov
dec
lahf
ja
fidivl
xor
sbb
and
mov
push
jnp
adc
sbb
leave
push
insb
lcall
or
sub
stos
jl
sbb
jno
dec
aas
mov
xor
call
les
dec
stos
repnz
add
ljmp
xor
dec
or
repnz
jo
mov
nop
sbb
adc
mov
mov
test
imul
and
popa
sub
cmp
or
xor
pushf
imul
xlat
pop
sahf
pop
mov
stc
fwait
and
nop
xor
cmc
int3
popf
and
arpl
lcall
fmuls
es
mov
call
pop
fbstp
out
push
adc
ret
xor
aas
and
or
add
test
xor
dec
test
or
movsb
rorl
mov
into
push
cltd
xchg
push
or
hlt
daa
ret
lods
rcrb
cmp
add
mov
push
into
adc
sarb
jp
adc
fcoms
call
or
and
dec
inc
scas
js
mov
ss
insl
loope
js
inc
sbb
loopne
movsb
repz
jno
clc
in
sbb
sar
cmpsb
in
add
jbe
pop
lods
fcomps
pop
or
and
sbb
or
movsl
pusha
dec
adc
imul
mov
fisttpl
xchg
xor
mov
xor
test
push
mov
cmpsb
cmc
mov
addl
js
idivb
mov
ret
pop
sub
adc
data16
shrl
arpl
repz
pop
lea
pop
and
mov
dec
iret
xor
mov
pop
fisubrs
pop
inc
and
dec
jne
hlt
ds
sbb
xor
imull
sbb
fs
cmp
mov
lds
decl
cmp
jae
sub
inc
dec
xchg
jae
cmp
or
pusha
xlat
jmp
gs
frstor
popf
sub
ja
pop
or
pop
out
sbbl
call
adc
out
mov
shlb
pop
js
enter
xorb
inc
orb
inc
popa
shll
dec
cmp
or
cmp
sub
and
adc
out
sahf
xor
push
or
int3
cwtl
pushf
insl
mov
repz
mov
or
pop
jmp
pop
pop
lods
cltd
jb
out
mov
out
std
fs
fsts
xor
xchg
add
pop
ds
sbb
nop
subl
sti
enter
dec
loope
add
inc
lret
nop
inc
ret
sub
sub
pop
and
sarl
out
rclb
or
add
push
ret
and
in
xchg
icebp
pop
jmp
sbb
lcall
mov
sub
add
mov
repnz
pop
pop
cltd
and
jp
inc
cmpsl
imul
mov
dec
xchg
sub
add
mov
sahf
push
lock
add
sbb
js
mov
filds
jle
jns
push
push
cmp
sub
push
imul
jns
adc
mov
mov
sub
xor
inc
jo
out
xor
or
int3
es
jle
push
inc
pop
xchg
xor
fwait
push
es
push
cmc
out
and
mov
mov
mov
not
bound
ljmp
cmp
scas
pop
lret
popf
push
xchg
scas
shlb
inc
mov
out
and
mov
test
sub
pop
cld
std
push
into
arpl
int
mov
xchg
cmp
fisttps
push
push
mov
dec
xor
lods
inc
into
unpckhps
lahf
or
xchg
ja
pop
mov
add
dec
cmp
adc
loopne
inc
mov
gs
xor
pusha
fimuls
cmp
lcall
or
push
dec
mov
int
push
popf
std
adc
pushf
das
repz
idivb
push
mov
mov
xchg
mov
sbb
fsub
and
and
pop
xchg
pop
add
and
pop
mov
fldl
loope
add
mov
scas
mov
jg
mov
jle
jge
jl
pop
push
ja
jge
lock
addr16
jb
xorb
inc
sti
movl
fsubrs
mov
adc
int
lret
mov
ss
mov
std
pop
clc
repnz
push
stos
cmc
push
push
sub
dec
outsl
aas
add
pop
enter
mov
sub
add
xchg
dec
xor
fwait
xor
mov
mov
xor
in
shr
scas
xor
outsb
aaa
push
test
mov
dec
aad
xchg
into
dec
out
mov
or
imul
movsb
bound
and
cltd
push
call
addr16
xor
inc
add
fidivrl
jg
mov
rcrl
push
pop
stos
mov
inc
mov
aad
jno
sub
cld
sbb
nop
jl
iret
rorl
pusha
sahf
jb
adc
rcrl
xlat
outsb
sbb
xor
mov
int3
mov
mov
ja
scas
int3
mov
sub
cli
pop
adc
in
xor
or
cmp
inc
mov
lods
aaa
xor
dec
data16
mov
add
inc
nop
jle
out
xor
out
xchg
push
cmp
movsl
push
pop
add
mov
push
or
outsl
mov
sbb
fidivrs
cli
jne
xchg
xor
xor
xchg
lds
icebp
sub
lahf
add
daa
push
loope
repz
jns
test
sub
push
cltd
push
sbb
inc
lock
adc
out
fwait
xchg
shll
cmc
jns
add
fisubl
rorl
mov
pop
jle
cld
imul
pop
lahf
or
and
adc
stos
out
jae
xchg
or
mov
shlb
imul
mov
push
lods
aaa
stos
call
xchg
or
pop
sbb
das
mov
movsl
cmp
inc
mov
imul
scas
mov
call
sbbl
xor
out
pop
orb
cli
cli
movsl
rorl
xor
shlb
negl
add
pop
fninit
mov
sti
cmpsb
jp
mov
push
jmp
push
pop
std
mov
adc
mov
imul
cmc
or
push
jo
sub
fisttpl
fcoml
and
mov
imul
mov
call
std
lret
cmp
push
push
icebp
cld
dec
idiv
sub
mov
mov
jecxz
cwtl
fwait
jnp
add
imul
mov
sub
imulb
or
and
mov
mov
cld
cltd
inc
sarl
subb
push
adc
xor
xchg
push
loopne
mov
mov
test
stc
add
insb
fs
or
stos
stc
and
mov
pop
pop
push
dec
lret
dec
mov
push
jge
ss
ja
stc
nop
jae
sub
xchg
sub
rorl
jge,pt
rol
in
test
outsl
out
push
mov
push
xchg
sub
push
movsb
in
and
movsb
push
dec
loopne
push
or
push
lods
dec
clc
stos
xchg
inc
out
shl
das
imul
cwtl
push
cs
scas
dec
ret
inc
xchg
aaa
test
lods
pop
in
push
mov
cmp
outsb
dec
outsb
pop
xchg
std
xchg
add
push
mov
jne
stc
sbb
arpl
jmp
pop
jb
shll
shll
lea
imul
add
test
pop
and
pop
es
and
cmp
mov
mov
dec
add
into
jecxz
scas
sbb
jae
sub
mov
xchg
xchg
mull
les
push
mov
lds
std
out
sub
lods
mov
push
lods
rclb
mov
adc
fcmove
inc
cli
lahf
data16
push
mov
ds
repnz
mov
das
xor
pop
dec
std
mov
adc
inc
aaa
aaa
fwait
push
rclb
icebp
out
sbb
in
push
adc
arpl
or
inc
fistl
and
es
add
rolb
ret
xchg
std
add
mov
mov
adcl
shlb
sahf
nop
sub
mov
loopne
pop
jne
rcrb
jno
xor
sti
jmp
push
mov
mov
and
pop
repnz
add
ret
stos
mov
cld
xchg
out
sbb
lock
add
cmp
bound
daa
and
push
in
sbbl
mov
cmpsb
insb
jg
dec
push
cmpb
repnz
dec
mov
pop
jp
js
pop
flds
test
mov
neg
add
pushw
push
das
scas
enter
push
pop
mov
jo
xchg
lods
or
lds
dec
mov
or
call
jnp
lcall
cmpsb
fs
xchg
dec
testb
pusha
scas
pop
ds
dec
and
xor
lret
leave
cld
stc
test
lahf
popf
ds
sbb
add
jp
jecxz
out
pop
inc
pop
pcmpeqd
ror
xchg
icebp
dec
sub
mov
les
inc
mov
jno
stos
sbb
scas
lret
enter
popa
lock
mov
xlat
imul
or
stos
push
andl
mov
xchg
push
and
notl
out
add
clc
fmul
jge
rcrb
dec
adc
outsl
fidivs
dec
aad
jns
jno
pusha
or
das
enter
addr16
mov
mov
mov
call
aam
cmpb
fistpll
mov
addr16
adc
cmc
cmp
stos
std
pop
adc
and
add
in
adc
call
addr16
popa
jge
enter
xor
movsl
or
int
pop
xchg
xchg
pop
stos
jg
and
jge
fiaddl
or
pop
sahf
xchg
xor
xchg
cmc
enter
dec
mov
arpl
inc
mov
call
cs
adc
aaa
xchg
sub
mov
cmp
add
lret
adc
test
or
mov
test
cmc
daa
cmc
sub
jmp
ljmp
fsubr
or
mov
xchg
in
ficompl
repnz
scas
fwait
or
mov
pop
cmp
imul
or
push
ss
out
div
mov
pop
fs
and
mov
aaa
mov
xchg
mov
push
pop
push
aaa
movsb
movsb
scas
gs
outsb
dec
fsubs
sub
dec
inc
or
repz
mov
fstpl
inc
in
in
gs
sti
jecxz
mov
mov
jns
or
fldenv
jp
bound
pop
aad
xlat
lea
fcomps
shr
hlt
popf
sub
pop
or
xchg
jne
push
mov
lahf
push
ret
out
xchg
dec
aaa
popf
and
popa
cld
push
sbbl
lret
pop
push
push
cmp
sub
fcoml
ds
fwait
xchg
jno
pop
pusha
cs
cltd
dec
mov
fnstcw
movsb
push
pop
sub
cmp
lret
mov
xchg
sbb
addl
lahf
inc
adc
mov
subb
jp
xor
divl
sar
fcomps
loope
xchg
jl
call
cli
inc
in
dec
adc
pushl
adc
jbe
sbb
xchg
push
jns
xor
cld
adc
mov
out
ljmp
sub
dec
loopew
adc
pop
lock
out
in
addr16
hlt
xchg
push
pushf
stc
pushf
leave
fldt
mov
or
mov
cmp
cs
test
imul
mov
xor
shrb
test
mov
jle
xor
stos
add
inc
mov
xor
push
pop
mov
pop
fbld
xorb
dec
mov
icebp
mov
or
fldenv
mov
xor
lahf
push
add
frstor
data16
sub
mov
and
adc
push
xchg
fs
adc
int
iret
jne
mov
and
popf
xor
xor
frstor
adc
popf
sbb
xchg
adc
push
js,pn
inc
int
pop
gs
mov
lods
ficomps
test
mov
dec
cmp
repz
addb
inc
ss
xchg
stos
js
enter
pushf
test
lds
xchg
pop
push
pop
mov
cmc
fldl
iret
push
sarl
loopne
lret
scas
mov
jle
int3
fidivs
in
cmp
addl
xchg
cltd
insb
xchg
jmp
sbb
js
aam
adc
mov
jle
or
mov
insl
and
jmp
test
adc
sti
lods
mov
inc
lea
add
rcrl
pop
xor
mov
cmp
dec
jp
mov
xchg
cld
test
cld
enter
enter
sub
in
andl
inc
stos
xchg
pop
push
mov
jle
cli
sbb
and
cwtl
cltd
das
gs
dec
decb
pop
in
xor
sub
and
movsl
inc
mov
jge
ss
fsubrl
mov
lret
rorl
and
fcoml
call
inc
sub
icebp
pop
push
cmp
shlb
in
add
shl
popf
adc
repnz
stos
push
add
stos
jle
sbb
jecxz
xor
das
push
sbb
jne
jbe
popa
outsl
xchg
dec
xor
stos
roll
cmpsl
ds
repnz
add
sti
sti
aaa
or
jnp
stos
jno
pop
adc
pop
push
jnp
cwtl
mov
mov
sub
in
pop
mov
stos
sahf
adc
out
cmp
adc
mov
and
mov
sbbl
adc
dec
cld
mov
lahf
mov
add
ljmp
out
in
sub
shl
lds
xor
mov
push
movsl
mov
inc
pop
jnp
mov
adc
cli
cmp
hlt
dec
mov
cmp
mov
divb
dec
js
and
scas
hlt
add
out
test
inc
fcomps
sub
add
imul
test
lods
out
icebp
scas
adc
mov
in
pop
add
frstor
xor
push
and
jge
jl
gs
cmp
push
lcall
mov
or
outsl
mov
pop
xlat
jne
icebp
test
mov
adc
cli
cld
aaa
mov
fdivs
jb
loop
push
movsb
mov
pop
outsb
ljmp
loopne
les
sti
outsl
mov
jg
fstpt
jle
fwait
cmp
faddl
push
ja
inc
sub
jno
repnz
cmp
cli
out
fcom
in
aas
xorb
pop
or
mov
das
fidivrs
push
sub
adcl
pop
les
or
call
or
jno
test
in
pop
ret
mov
mov
lahf
pop
push
lret
out
jge
aam
bound
dec
add
scas
int3
cwtl
add
cmp
popf
int
jb
cmp
jnp
loop
lea
fdivl
mov
xchg
xor
ret
pop
push
sub
sti
mov
xor
jbe
addr16
cmp
jb
mov
jns
xor
addb
pop
push
xchg
adc
push
adc
adc
test
inc
pop
cmp
jnp
and
mov
push
dec
pop
cwtl
mov
sub
xchg
ret
push
scas
and
adc
and
push
fnstsw
jne
repnz
mov
mov
orl
in
and
iret
jo
ret
bound
loop
jmp
sti
or
dec
mov
cmpsl
pop
mov
icebp
loopne
fs
gs
sbb
sub
mov
pop
int3
popf
mov
dec
mov
jecxz
ss
cs
stos
xor
sbb
imul
add
pop
mov
test
xor
in
out
repnz
clc
or
inc
pushf
pop
sbb
add
jne
inc
fistps
or
dec
imul
ljmp
xor
aas
adc
jl
pusha
xor
cli
mov
cltd
lock
xlat
int
dec
in
bnd
insl
imul
sub
mov
mov
mov
js
sbb
bound
and
aas
jg
jecxz
jp
mov
hlt
fs
stos
mov
push
cmpsb
es
or
pop
ja
imul
or
nop
jmp
dec
pop
push
popf
mov
push
hlt
jecxz
dec
std
add
mov
or
ljmp
sub
mov
lea
cld
pushf
insl
cmp
cmpsl
sbb
in
jbe
or
mov
jp
jmp
in
adc
sbb
cli
rcl
cmc
push
cltd
add
xchg
push
add
push
fwait
int
pop
or
xchg
ja
jo
inc
mov
adc
mov
popf
mov
dec
cmpsl
dec
jbe
into
pop
pop
sbb
xchg
pop
xchg
mov
dec
loop
lahf
lret
cli
mov
es
xor
push
rcll
xchg
cld
int
cmp
enter
jge
cld
fsub
mov
ja
and
ret
les
enter
lods
icebp
iret
mov
pushf
xchg
fxch
lods
stos
mov
imul
fdivrl
jmp
adc
jmp
ret
aaa
xor
enter
jl
leave
pop
push
sub
fdivs
adc
lcall
jge
push
jp
lods
lock
inc
jns
enter
mov
ds
add
stc
cmpsb
rcl
lret
js
pop
adc
xor
xor
xchg
jno
sbb
mov
fs
sub
xchg
stos
mov
mov
dec
mov
pop
fisubrs
cltd
mov
adc
repnz
pop
cmpsl
nop
clc
mov
lock
mov
inc
aaa
xor
mov
and
sbb
pop
jl
cmc
aas
sub
pop
sub
ljmp
xchg
cmp
cmc
add
push
add
cmpsb
iret
jmp
jge
cwtl
stc
lds
mov
mov
and
push
push
or
test
out
cmp
stc
not
push
movsb
lcall
adc
repnz
fcmovnu
stc
out
std
mov
push
jg
repnz
xor
and
lods
mov
insl
adc
mov
cmp
sbb
dec
repnz
xchg
mov
lret
xchg
mov
pop
sbb
xor
daa
andb
or
cmp
cs
rolb
movsb
pop
fiaddl
xchg
bound
dec
sbb
jne
sub
mov
xlat
mov
sbb
sbb
xchg
xchg
inc
jnp
xor
aaa
xor
cmpsb
fdivs
dec
cwtl
sub
leave
mov
sbb
jnp
shlb
aaa
inc
inc
sub
adc
xor
jno
xchg
lea
mov
jnp
inc
push
xor
xchg
sub
out
xchg
popf
imul
subl
push
out
ljmp
jnp
push
leave
cmpsb
ret
or
call
sub
and
sub
and
test
aam
inc
dec
insb
inc
enter
sbb
sub
mov
lock
enter
or
aam
mov
sub
push
adcb
gs
outsl
stc
movsb
jns
arpl
loop
push
ja
push
ljmp
inc
jecxz
cltd
subl
rol
aas
cmpl
arpl
push
sub
daa
adc
call
cmp
cli
adc
jle
sub
jecxz
insl
out
test
sbb
pop
push
scas
push
imul
mov
fcompl
outsb
jns
lods
jno
mov
push
fs
cmp
inc
test
div
repnz
ds
jae
xchg
jmp
pop
sub
mov
sbb
nop
jp
inc
icebp
adc
xlat
cmp
pop
imul
mov
cmp
std
dec
lret
dec
cltd
aam
sub
je
lock
mov
bound
in
and
outsl
mov
int3
jnp
jnp
xchg
es
in
hlt
jb
aas
addr16
stos
outsb
int
adc
xlat
loop
adc
loop
mov
ja
cmp
fucom
cmpsl
leave
xlat
mov
and
fisttps
mov
ficompl
scas
pop
adc
push
std
mov
imul
aas
xchg
js
int3
sbb
jne
ljmp
sbb
adc
mov
mov
add
lock
fisubs
adc
add
ja
outsb
shrb
dec
pop
fstps
gs
mov
std
movb
cmpsb
jno
lahf
jmp
mov
cmp
mov
lahf
sbb
shll
cli
inc
or
add
pop
pop
mov
jecxz
mov
mov
bound
jecxz
stos
dec
xor
aad
test
cmp
jo
cs
adc
jno
xor
shr
mov
sahf
pop
mov
icebp
mov
stos
adc
sub
jo,pn
inc
aaa
or
ljmp
test
movsb
or
mov
in
js
pop
sub
stc
fs
adc
shrb
pop
xor
repnz
sahf
cmp
icebp
in
mov
pop
imul
sub
mov
mov
fistl
cli
or
rol
in
divl
scas
inc
push
dec
pop
loopne
sub
pop
mov
arpl
out
dec
push
mov
dec
dec
iret
jle
out
cwtl
scas
sub
test
rcrl
aaa
pop
dec
mov
jnp
das
adc
cmp
sti
push
inc
and
in
aad
dec
frstor
mov
adcb
lods
adc
dec
mov
adc
fisubrs
orl
clc
push
shr
icebp
rorl
call
push
push
subb
rep
data16
outsl
and
fdivs
dec
adc
ret
imul
add
xor
stos
xchg
loop
cltd
repnz
cmp
mov
cwtl
sub
lea
xor
or
inc
pop
adc
dec
mov
std
and
push
jbe
ror
mov
stc
cmp
cld
ljmp
fbld
jbe
jbe
inc
dec
in
add
rclb
sbb
in
mov
inc
ficoml
out
inc
jae
es
mov
cmp
jle
xor
dec
lods
imul
cmc
adc
dec
add
mov
inc
movsl
cmc
push
mov
lock
fldcw
aas
push
int
iret
lods
popf
lea
sbb
inc
cli
mov
inc
cmp
shlb
mov
out
mov
or
scas
pop
push
jnp
push
fdivl
negl
jns
cmp
call
cmp
cli
push
pop
cpuid
pop
lock
cmc
arpl
es
cmp
adc
adc
mov
pop
lcall
jg
dec
cmp
fidivrs
mov
mov
jecxz
repz
push
call
adcb
sbb
sbb
movsl
fs
sub
xchg
and
xchg
clc
fadd
dec
ret
loop
sub
xorl
das
lret
adc
fmuls
enter
xchg
mov
ss
jmp
sub
dec
cmp
cli
aas
push
cmpsb
inc
inc
outsl
ret
popf
clc
ljmp
iret
stc
adc
xchg
sub
cs
pop
mov
mov
les
shll
and
pop
push
cli
daa
mov
or
sbb
pop
movsl
pop
dec
cltd
popf
sub
push
ret
sbb
inc
sub
mov
cmp
xor
dec
jns
cltd
cmpsb
or
loopne
xor
rol
inc
jo
popf
and
ds
scas
xchg
xchg
dec
mov
inc
pop
pop
mov
icebp
and
ss
cwtl
imul
aam
ljmp
mov
pop
pop
fdivrl
mov
push
mov
jge
adc
inc
mov
push
cmp
push
leave
testl
stc
sub
xchg
cmc
jb
icebp
xor
dec
mov
xchg
data16
pop
or
mov
mov
sbb
es
xor
lret
je
out
push
and
dec
cmp
mov
iret
xor
xchg
sbb
pop
cmp
mov
lods
cli
ja
orb
movsl
adc
dec
push
mov
cmpsb
cmpsb
pop
dec
int
int3
dec
mov
gs
dec
jecxz
pop
je
outsl
cwtl
movsl
fucomip
xor
xchg
cmp
inc
cmpsb
test
dec
mov
xchg
aas
mov
loope
mov
cmp
lock
push
cmp
cltd
loop
mov
icebp
cmp
pop
cmp
jnp
ret
addb
gs
ljmp
inc
sub
mov
aaa
adc
ret
jecxz
xchg
jmp
inc
icebp
pop
xchg
out
xchg
repz
daa
xor
push
or
test
call
lcall
sub
xlat
xor
mov
xor
out
add
mov
mov
cmpxchg
arpl
outsb
add
leave
lds
clc
jnp
pop
inc
add
pop
mov
ljmp
popa
pop
addr16
test
or
push
push
imul
xor
enter
sbb
mov
push
out
insl
fstpl
push
jg
or
mov
es
out
rol
push
push
mov
negl
push
sar
and
cmp
int
rclb
jnp
mov
in
in
xchg
xchg
push
scas
and
test
pop
in
inc
int
sbb
into
cs
add
or
in
push
stos
sbb
sub
and
test
push
je,pn
in
into
cld
push
add
cmp
popa
cmp
jmp
pop
lahf
mov
aad
dec
push
adc
push
pop
in
inc
int3
push
into
sbb
cmp
jo
jge
jmp
mov
lods
stos
jb
call
jecxz
stos
push
movsl
pop
sbbl
jno
out
dec
xchg
mov
ja
into
mov
shr
xchg
or
popf
jno
cmpl
mov
andb
test
cld
lods
stos
push
lret
mov
out
or
insl
pop
aaa
dec
ds
in
arpl
ss
mov
ljmp
mov
les
insb
flds
fidivs
sub
in
inc
aaa
into
in
aad
xchg
pop
cwtd
stc
xchg
pop
add
and
fidivl
xchg
aas
adc
dec
jge
lret
stc
ja
sub
push
cmp
and
out
call
pop
sbb
jae
addr16
cmp
mov
fs
aam
sub
mov
inc
test
pop
mov
cmc
mov
push
sub
dec
fstl
sub
jle
ljmp
lret
add
ss
xor
cwtl
stos
pop
add
lahf
frstor
shlb
gs
lahf
scas
mov
xchg
and
insl
sub
add
sti
sarl
and
xchg
push
popf
jp
sarb
cmpsl
aaa
cmpsl
fisubrl
mov
andl
hlt
ds
mov
or
ja
mov
fcmove
xchg
push
mov
in
das
dec
test
sub
shlb
shrl
xchg
push
cs
scas
xchg
imul
xor
sbb
notb
pop
jbe
out
or
js
xchg
stc
or
std
mov
cmpsl
mov
arpl
lods
cmp
into
pop
sub
je
int
xchg
insb
mov
mov
leave
add
test
xchg
mov
imul
fstpl
pop
into
test
imul
lcall
jno
lret
dec
movsl
mov
and
das
cli
xchg
outsb
inc
xchg
in
or
je
dec
add
cltd
pop
in
or
sub
ds
jg
stos
pushf
sub
sub
xchg
aad
add
mov
ror
dec
jo
stc
push
inc
ds
enter
mov
imulb
testl
popa
and
nop
in
sub
rorl
cmc
daa
sub
sarb
aaa
dec
add
scas
add
sar
test
test
andl
leave
add
fbstp
test
in
test
sbb
cltd
or
cmc
cmp
sbb
in
mov
dec
pop
dec
stos
notl
dec
dec
xor
and
and
pop
xorb
push
xor
mov
and
pop
cmp
lcall
mov
cwtl
mov
fnstenv
ret
inc
popa
repz
cmpsl
addl
jb
fcoml
or
pop
jne
aas
andb
cltd
cmp
fwait
cli
jnp
aaa
sub
out
out
xchg
xor
add
mov
ret
xor
pop
and
mov
mov
push
stc
sub
ss
arpl
aaa
pop
loopne
mov
cmp
ret
in
aas
flds
pop
fucompp
sbb
shrb
lea
shl
out
jae
popl
and
or
pop
xchg
and
push
push
or
jbe
jecxz
xor
fsubrl
fcoms
adc
out
hlt
xor
jg
inc
rol
test
jb
sub
addr16
add
loope
nop
sub
mov
je
pushf
mov
mov
mov
xchg
pop
mov
clc
fisttpl
cmp
movl
leave
fucomi
sub
mov
mov
mov
mov
adc
cmpsl
decb
xchg
sahf
adc
xchg
call
lea
outsb
sub
lea
lods
mov
rcrb
call
pop
dec
inc
mov
jecxz
aam
ret
je
ret
inc
jp
in
push
xor
sahf
ror
add
fiadds
and
stos
push
out
dec
and
mov
or
inc
push
xchg
push
shll
fs
push
mov
fcmovb
cmpsb
jne
cs
mov
dec
mov
mov
int
push
nop
add
addr16
stc
dec
ficoml
lds
add
popf
jge
aam
imul
cmp
into
test
push
int3
cs
xchg
pop
fadd
sbb
mov
adc
roll
add
lds
imul
push
dec
ss
or
in
jo
call
push
repz
xchg
cli
in
stos
out
cmpl
push
repz
punpckhwd
lret
lea
adc
push
dec
fs
sbb
aad
cltd
popa
or
sbb
mov
orb
pcmpeqd
jae
and
fistps
inc
xor
lock
cmp
mov
push
iret
xor
test
int
fmul
mov
test
push
pop
cltd
jno
mov
dec
scas
xchg
lret
bound
inc
push
test
pushf
mov
inc
bnd
imul
pop
sarl
mov
jb
xor
cmc
outsl
sbb
push
pop
mov
icebp
dec
jae
scas
inc
ret
out
ja
cmpsb
iret
les
pusha
sbb
xchg
or
int
fidivrs
bound
gs
sbb
lods
mov
jmp
dec
jo
xchg
push
or
ss
xchg
gs
pop
cltd
data16
sub
adc
xchg
push
push
dec
rcll
sub
mov
inc
andl
dec
xor
stos
and
push
inc
add
add
dec
inc
xlat
add
cmpsb
dec
addr16
xlat
sti
sbb
push
push
orb
cmp
xchg
test
gs
push
pop
movsb
push
adc
jns
push
shrl
bswap
fnstcw
and
stc
mov
xchg
lret
sub
out
or
push
lahf
xchg
cmc
push
add
xchg
aaa
iret
mov
jo,pt
clc
or
stos
inc
jnp
xor
dec
push
cltd
mov
pop
cmpl
hlt
iret
push
dec
lret
stos
cmp
lock
and
mov
sbb
sub
movsl
xor
xor
sbb
hlt
fistpll
pop
or
sub
cmp
loope
cmp
icebp
inc
or
sbb
sub
movsb
sbb
and
dec
xor
idivb
shlb
mov
jge
and
stc
sub
dec
xorb
fisubs
mov
add
sbb
dec
add
cld
inc
or
mov
fdiv
push
mov
inc
pusha
std
sti
mov
out
or
xchg
xchg
pop
popa
dec
cli
lods
push
jp
cmp
stc
fistps
lahf
xlat
mov
shlb
repnz
stos
clc
cltd
cmp
out
adc
leave
or
dec
jp
mov
mov
mov
repz
ja
or
call
inc
push
addr16
int3
fdivrs
cld
pop
and
sbb
xchg
pop
cli
fcomps
jg
mov
xbegin
adc
das
mov
xchg
jbe
mov
gs
jmp
cmp
dec
dec
or
and
or
xor
mov
and
lcall
inc
cmp
fmull
pop
adc
dec
mov
aam
mov
jle
xchg
add
or
in
dec
fldenv
inc
fisttpll
outsl
ficoml
movsb
cmpsl
jbe
cmpsb
dec
push
mov
cmc
push
sub
test
push
sbb
xchg
mov
pop
mov
cmpsl
or
and
ss
add
ds
push
je
lods
mov
addr16
jmp
int3
lock
mov
pop
movsl
pusha
dec
xchg
pop
rorl
imull
lahf
or
mov
jg
and
mov
outsl
out
mov
enter
lods
fwait
jg
push
sub
or
and
cwtl
inc
xor
and
fbstp
ja
fs
loope
loope
and
push
loope
add
mov
or
inc
xor
mov
or
loop
mov
adc
dec
adc
and
mov
and
pop
test
push
ljmp
and
in
adc
sub
jge
inc
cs
gs
jmp
xor
add
push
pop
imul
mov
mov
jl
jb
add
mov
or
mov
lock
mov
cld
ss
lcall
sbb
adc
popa
push
imul
cmp
fnstcw
push
jmp
sarl
loopne
sub
call
inc
or
pop
push
test
shll
xchg
enter
pop
and
mov
idivl
in
frstor
dec
imul
outsb
sub
lret
cmpsl
inc
push
add
int
cmp
push
push
xor
out
push
mov
stos
pop
or
pop
sar
outsl
inc
outsb
faddp
mov
stc
fldt
daa
mov
inc
xchg
rcrl
sti
cmpsl
mov
jg
pop
dec
sub
jbe
ficoml
lret
and
pop
xchg
sub
cli
and
fstl
and
cmp
cltd
sbb
push
mov
aad
lock
mov
or
jne
and
bound
mov
xor
pusha
dec
adc
or
jo
fs
pop
jecxz
movsl
mov
test
mov
ljmp
cs
out
stc
xor
pop
loope
es
add
dec
xchg
out
ror
jb
xchg
mov
into
out
repz
jnp
jno
adc
fdivr
cld
fwait
xchg
ret
inc
cli
mov
push
and
and
push
and
cld
stc
std
mov
inc
xchg
or
lds
mov
mov
pop
sbb
add
mov
adc
flds
or
repz
std
lret
xchg
dec
lret
adc
xchg
loope
sub
ficoml
xchg
in
jbe
xchg
xor
pop
jg
or
das
in
loopne
clc
jmp
dec
xchg
arpl
mov
cltd
mov
fidivs
in
insl
jecxz
insb
push
ret
xchg
aam
dec
push
sub
sbb
mov
outsb
rcll
lea
xchg
sbb
mov
jo,pn
repz
cmp
xchg
scas
push
or
stos
mov
mov
nop
sub
loopne
adc
mov
pop
mov
ret
dec
push
push
repz
mov
xchg
lcall
outsl
and
sub
inc
les
or
mov
pop
enter
addr16
out
add
and
and
aas
and
xor
sbb
push
cmp
loope
gs
test
cpuid
js
je
inc
movsb
adc
pushl
out
add
fidivs
cwtl
out
cmpsb
jb
mov
fs
sarl
call
and
jmp
pop
add
or
test
gs
clc
ret
jae
and
push
adc
cmp
imul
je
push
fcoms
test
in
mov
cwtl
add
arpl
xor
sbb
mov
xor
daa
fs
push
lds
inc
dec
dec
inc
in
popa
std
jecxz
mov
add
call
popf
pop
dec
notb
jns
arpl
lret
lds
ror
sbb
jg
mov
inc
jmp
dec
fs
or
adc
jbe
xchg
clc
in
movsl
xor
ds
enter
mov
and
and
add
xchg
ret
daa
mov
mov
lahf
insl
mov
add
int
mov
arpl
sbb
xchg
mov
xchg
daa
fs
adcb
fnstsw
test
pusha
jge
mov
rolb
push
mov
mov
sub
sbb
out
xor
push
cmp
mov
aaa
and
les
mov
pop
mov
ficomps
pshufw
mov
jns
popa
popa
push
push
int3
shlb
mov
cmp
in
jns
gs
mov
adcl
clc
sbb
mov
dec
call
mov
adc
jg
push
push
les
shrl
ret
clc
out
inc
flds
repnz
call
dec
xchg
mov
sbb
lock
sub
std
push
push
clc
xchg
and
xchg
adc
aad
push
sbb
es
jnp
add
mov
fiadds
repnz
sbb
scas
xchg
fwait
lcall
push
jb
rcrl
fdivl
xor
scas
sub
xor
sub
xor
mov
out
pop
pop
mov
pop
enter
insb
daa
movsb
inc
push
mov
adcl
mov
mov
pushf
add
mov
xor
iret
addr16
push
jecxz
int
loopne
jbe
add
lods
outsb
xor
sub
xchg
sbb
sub
or
mov
lret
js
out
lea
mov
push
xor
sbb
push
mov
ds
enter
ret
cmpsb
sti
and
lods
insl
add
inc
les
into
push
aad
inc
in
icebp
push
int3
nop
mov
ret
out
orl
lret
std
ret
popf
jl
cmc
lret
shlb
test
mov
insb
or
xchg
sub
fists
out
sbb
popa
jne
jne
cld
pusha
push
shll
mov
pop
add
aam
cmp
and
mov
ret
ds
inc
lahf
mov
push
in
jecxz
and
aam
jl
jg
jmp
or
mov
mov
inc
pop
jne
jno
test
sti
inc
fwait
out
insb
roll
jecxz
shll
xchg
pop
lods
ljmp
jg
sub
stc
jns
mov
and
mov
xor
imul
jbe
xlat
push
std
pop
nop
das
aam
or
xchg
arpl
mov
out
cmpsb
xchg
cmpsb
lret
xchg
push
sahf
leave
cltd
jle
pusha
loop
xchg
xor
inc
fdivr
xchg
push
push
nop
and
repnz
inc
pop
xchg
mov
lahf
or
scas
in
xchg
mov
pushf
dec
hlt
mov
repz
incl
sub
fwait
ror
leave
lds
adcl
mov
bound
addr16
pop
testb
insl
clc
ficompl
sbb
loop
shrl
int3
andb
subl
inc
ret
movsb
pop
leave
add
test
cld
xor
outsb
mov
andl
push
or
sub
cmp
sub
fs
fcmovu
es
mov
jb
addr16
cmp
cmp
and
bound
orb
jno
mov
jg
pop
jp
std
cld
cmpsl
jp
jg
aaa
ret
loopne
pop
cli
sub
xor
and
push
in
cmpsl
lock
call
int
imul
sub
fpatan
sbb
push
mov
jne
lret
shrl
pop
mov
xchg
in
dec
or
mov
jo
cmc
scas
pop
frstor
ljmp
xor
sub
enter
lret
or
cs
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
cmpsb
add
aaa
sub
mov
movsb
dec
sbb
das
push
lahf
pop
xor
in
enter
sbb
cmp
and
adc
fmuls
insl
mov
cmpsb
rcll
in
lds
add
jmp
fistps
pop
in
shrb
lods
adc
or
xchg
out
js,pn
mov
int
inc
add
sub
xor
pop
mov
or
arpl
jnp
jg
push
jne
push
pop
xchg
in
add
inc
cmp
lods
in
mov
inc
and
pop
mov
aam
adc
test
stos
push
sub
jbe
jns
int
je
cmp
push
stos
es
and
or
push
mov
mov
in
data16
jno
pop
xor
and
mov
xor
jno
test
lret
repnz
movsb
inc
push
push
mov
push
xor
push
inc
popf
add
mov
mov
xchg
jae
and
xchg
cmpsb
mov
xchg
add
pop
inc
lods
xchg
and
les
cs
mov
cs
jnp
in
xchg
in
ja
lds
jmp
data16
mov
imul
xchg
inc
mov
cmp
stc
dec
xchg
mov
fmuls
dec
xchg
sub
or
shr
out
sub
sub
aad
adc
push
mov
sbb
jne
int
fnstcw
iret
aad
orl
movsl
subb
xchg
push
xor
mov
push
fisubs
daa
scas
imul
mov
loopne
clc
cmp
lds
test
popf
sahf
mov
sub
call
push
testb
stos
push
andl
in
js
std
jno
jbe
shrl
rcll
dec
sub
aas
mov
inc
sbb
in
and
imulb
mov
cmpsb
aad
xlat
test
arpl
mov
cmpsb
sub
mov
int
fistps
xor
dec
scas
add
data16
iret
xchg
sub
xchg
cmpsb
enter
out
pop
or
xchg
sti
cmp
mov
cmpsl
inc
xchg
das
inc
xchg
subl
push
lods
pusha
ffree
ja
cli
cld
or
push
sti
cmovge
in
sbb
mov
fwait
xor
in
and
mov
mov
out
mov
or
popf
sbbl
aaa
adc
push
jmp
adc
rclb
push
mov
data16
sbb
movsb
js
in
lods
sahf
int3
and
pop
mov
xor
xor
out
shrl
xchg
into
in
add
or
pop
jle
icebp
ljmp
fidivrs
mov
clc
pop
popf
loop
fisubl
leave
sbb
sub
pop
dec
xchg
mov
mov
xor
in
mov
add
scas
push
aad
mov
dec
pop
mov
dec
pop
insb
lcall
mov
sbb
cmp
sbb
cmp
das
in
cltd
out
les
and
imulb
mov
ds
mov
insl
jp
in
jnp
xor
adc
arpl
push
lcall
jb
xchg
bound
mov
cli
lahf
inc
adc
ret
mov
fs
cmp
pop
inc
mov
sbb
mov
inc
mov
in
fnsave
mov
mov
das
mov
roll
cwtl
and
sbb
lock
cmp
lcall
or
adc
aad
subb
cmpsb
inc
movsl
das
xlat
jp
pop
lea
rcrl
loopne
fs
inc
pusha
jmp
mov
xor
mov
cmpsb
add
mov
xchg
in
push
aad
mov
inc
cld
mov
xchg
das
push
shrl
inc
enter
pop
xchg
insl
pop
shlb
imul
lods
or
imul
testl
in
cmp
jmp
push
aaa
inc
inc
push
dec
divl
xor
out
push
outsl
adc
pop
sti
or
or
mov
or
cs
rorl
aam
insb
add
jmp
jb
cmp
mov
xchg
cmp
pop
outsb
inc
inc
sub
push
test
idivb
enter
cmp
mov
push
cs
shlb
pop
push
jne
pop
jge
lret
or
mov
sbb
mov
push
popa
xor
into
dec
in
inc
ljmp
fnstsw
adc
dec
and
mov
adc
nop
lods
pop
in
pop
jl
pop
mov
mov
adc
rcrl
xchg
inc
test
mov
in
sbb
push
insb
nop
mov
lcall
mov
insl
mov
adc
leave
and
cmp
adc
mov
jb
adc
ror
es
pusha
pop
pop
pop
or
mov
imul
fwait
pushw
push
cmpb
lret
popa
lfs
inc
out
das
ret
in
ja
outsl
iret
sub
test
imull
mov
scas
or
sti
shr
rcl
adc
xchg
lods
sbb
int3
pop
or
cli
out
jbe
testb
hlt
add
daa
jbe
xchg
dec
dec
lock
shll
xchg
int
test
add
repnz
pusha
inc
or
repz
push
movsl
std
test
sbb
xchg
push
xchg
popf
jecxz
xor
cmp
sbb
sub
cmp
sub
subl
xchg
cmpsl
mov
or
cs
clc
lea
fabs
cld
nop
xchg
mov
xchg
ljmp
cmp
lret
mov
cmp
rcrl
xlat
or
inc
xchg
dec
ja
insb
scas
and
sbb
dec
nop
inc
sti
push
out
ret
jbe
repz
dec
rcll
repnz
ficompl
js
dec
ret
imul
dec
cmp
jl
jmp
xchg
pop
or
call
inc
fmull
pushf
mov
icebp
mov
push
js
xor
sub
push
inc
dec
adc
icebp
sub
push
push
jge
xlat
mov
push
xor
xchg
inc
clc
jns
jns
push
xchg
jno
ljmp
stc
inc
lahf
dec
mov
xor
arpl
sub
rcll
jb
jg
and
stos
push
add
dec
jbe
incl
sbb
dec
fcoml
adc
adc
xor
repz
nop
leave
enter
sbb
test
lds
cld
adc
icebp
out
outsl
lods
clc
add
shl
xorl
pop
cmc
sub
stc
mov
ds
dec
popf
sbb
mov
repnz
mov
mov
xor
sub
xchg
dec
pop
jge
fisttpll
xor
mov
inc
pop
ret
fstl
cli
fldenv
xchg
inc
fldenv
shl
js
and
mov
pop
in
jnp
dec
mul
adc
and
sub
inc
andl
clc
jns
jns
jo
mov
cld
push
stc
rcrl
loop
ss
pusha
push
dec
mov
mov
sbb
inc
ret
rcrl
std
dec
mov
and
sbb
outsb
xor
mov
sti
mov
imul
or
sahf
mov
inc
testb
cltd
xor
popa
fwait
xchg
lods
adc
inc
mov
and
fcompl
jle
test
dec
insl
incl
lock
ljmp
in
fisttps
stc
in
cld
pop
jge
jl
adc
ret
aam
dec
stos
xchg
or
and
addr16
test
or
sub
mov
cmp
int
xchg
repz
mov
in
pop
gs
jns
insb
testl
out
int
xchg
movsl
pop
push
dec
mov
imul
sbb
stos
lret
or
cmpsl
push
mov
mov
sbb
leave
and
pop
pop
jae
pop
inc
push
xchg
je
ljmp
ficoms
mov
sbb
jns
adc
je
movsl
pop
scas
and
xlat
sarl
lret
imul
int3
cld
rcrl
xor
cmc
jno
xchg
adc
sub
fisubs
movsl
mov
outsb
icebp
call
jp
dec
cmp
fidivs
mov
dec
repz
insb
lret
pushf
enter
fwait
mov
sbb
jge
fnstsw
mov
push
pop
cmp
mov
pop
mov
out
or
push
or
hlt
push
jle
fsubrs
test
andps
pushf
std
sub
cmp
jp
push
jne
nop
xchg
lds
xchg
add
pop
xchg
xor
sbb
call
cmpsb
sub
jno
and
sub
ret
dec
pop
mov
mov
leave
cmpsb
in
mov
mov
pop
int
cmp
insl
imul
cmp
jp
and
dec
inc
loop
inc
adc
mov
cmp
adc
pop
test
in
dec
loopne
pop
push
fmulp
js
push
or
cmc
pushf
fwait
xchg
lret
sub
and
adc
dec
pop
xor
daa
mov
pop
pop
or
and
add
cmp
cmp
insl
popa
fs
loop
pop
lods
mov
xor
mov
pop
aas
loopne
add
sub
pop
rorb
iret
std
cmp
pop
in
mov
loope
sti
add
cmpb
in
push
mov
xor
jge
popa
addr16
cmp
sbb
mov
cltd
fisttpll
cmc
mov
popa
cli
sub
push
rol
jl
in
xchg
cmp
push
mov
enter
rcll
sbb
rol
cmpsl
fwait
jns
xchg
jns
sbb
rclb
les
pop
lea
filds
inc
dec
jmp
fs
jnp
es
xchg
jl
psubusw
sub
mov
movsb
cltd
cmp
pop
sbb
movl
inc
jb
std
into
loope
sbb
loope
fnstcw
cmc
sbb
pushf
adc
test
or
mov
jmp
or
lret
push
mov
pusha
in
inc
enter
adc
cmp
mov
addl
les
jne
jmp
imul
loop
sti
mov
and
mov
ja
insb
push
mov
ret
push
cs
in
xchg
jns
js
aad
xor
xchg
std
popf
cli
dec
xchg
mov
pop
imul
ds
dec
adc
lret
mov
stos
jnp
jne
dec
out
cli
push
push
push
sti
clc
test
push
xor
mov
cmp
inc
dec
insb
cltd
int3
iret
lret
lcall
aam
and
test
sbb
mov
psubq
cmc
addr16
fiaddl
mov
sbb
subb
repz
or
add
sub
and
sbb
insl
pop
cmp
jns
pop
adc
pop
xchg
movsl
inc
inc
pop
adc
lcall
add
popa
xor
xor
xor
cmp
cmpsl
add
pop
in
push
cmp
lret
adc
icebp
adc
cmp
jle
push
mov
xchg
sbb
shrb
sub
dec
pop
cmp
lock
mov
xchg
xchg
pop
add
cmp
push
movsl
inc
test
add
aad
inc
fwait
xchg
sub
and
pop
mov
push
or
and
jmp
outsb
and
fisubrs
mov
xchg
xchg
ds
mov
jbe
cmp
xchg
scas
ret
fdiv
out
xorb
adc
jno
cmc
cmp
cmp
mov
jbe
sub
jo
xor
cmpsl
out
in
inc
aas
data16
dec
adc
xchg
loop
je
inc
shl
add
mov
push
push
push
hlt
and
mov
mov
and
xchg
bound
fidivrs
lea
fidivrl
sbb
xlat
insl
inc
add
int3
stc
mov
push
stc
rorl
xor
sahf
jge
repz
mov
scas
imul
lods
sub
mov
push
pusha
xor
adc
cmc
add
sahf
jo
and
dec
push
jbe
cld
dec
in
xor
mov
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
addb
add
insl
