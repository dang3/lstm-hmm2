sbb
add
mov
xchg
fcoml
sub
pop
mov
add
and
mov
push
jo
add
and
pop
dec
pop
inc
mov
pop
sbb
das
mov
daa
imul
mov
pop
negl
adc
xor
dec
pop
bound
push
outsb
test
cmp
inc
pop
adc
out
inc
or
ret
iret
inc
cmp
pop
pushf
xchg
jbe
or
in
ret
cmp
stos
aad
push
lods
add
out
and
sub
sbb
imul
push
gs
pop
pop
out
dec
add
xchg
pushf
rcl
test
jecxz
mov
lret
int3
nop
ss
fcmove
dec
scas
jns
cmp
mov
orb
arpl
push
mov
lds
shlb
push
es
andl
loop
leave
push
out
pop
lcall
mull
mov
das
jno
loope
test
mov
lret
mov
add
lds
and
cmp
or
xor
sub
adc
addl
and
cwtl
out
mov
stos
pop
std
loope
sbb
gs
mov
out
push
mov
dec
xchg
shl
cli
push
je
push
sub
push
test
inc
push
aas
sbb
dec
orl
adc
pop
jne
stc
mov
mov
mov
stos
add
or
arpl
data16
adc
movsb
mov
pop
adc
fstl
push
push
je
push
popa
dec
mov
pop
insl
lcall
mov
xor
stos
xor
xchg
mov
mov
fstpt
adc
into
add
push
xor
pop
pop
inc
pusha
sub
out
xchg
jmp
xchg
mov
jo
push
test
adc
push
jne
pop
pop
sbb
xor
ficomps
addr16
mov
lods
repnz
scas
sbb
sub
push
movsb
lods
sbb
adc
or
inc
mov
lods
lcall
xchg
mov
mov
xor
mov
in
pop
das
loope
mov
sbb
push
pop
mov
xor
inc
sbb
arpl
add
pushf
add
inc
aad
xchg
and
into
jecxz
xchg
xor
adc
jmp
lahf
mov
cmp
add
ret
scas
ja
lcall
shrb
lock
cli
sub
sbb
add
sbb
jns
fcoms
imul
ss
ja
sbb
inc
adc
or
lods
neg
mov
xchg
dec
fsubrl
stos
mov
cwtl
lods
inc
mov
mov
push
in
pop
mov
xor
mov
mov
mov
adc
jge
test
pop
mov
add
dec
sub
pop
cli
nop
mov
imul
push
push
enter
jle
xlat
xor
xor
pop
sub
push
mov
nop
inc
mov
mov
jnp
je
push
sub
pop
push
xchg
add
cmp
xlat
enter
cmpsb
jnp
mov
lods
adcl
in
or
es
std
jmp
pop
fnsave
pop
stc
xor
inc
mov
movsb
sar
cltd
push
int3
dec
insl
in
cmpl
mov
jle
pop
test
sbb
sbb
add
and
loop
popa
mov
pop
out
cmpsb
pop
pop
jmp
daa
dec
dec
mov
jl
jg
sbb
clc
push
sbb
fistps
mov
lods
addr16
cltd
jmp
jecxz
or
notl
and
das
add
sbb
scas
sub
inc
pop
subl
sar
or
xchg
loopne
xchg
and
gs
in
adc
data16
jecxz
adc
push
cmp
enter
movb
xchg
or
sbbl
sbb
xor
rcrl
xchg
adc
idivb
mov
test
sub
cmp
jle
hlt
ja
adc
jae
sarl
sbb
aaa
rorl
loope
fld1
mov
in
cltd
push
sbb
shlb
pop
in
xchg
fsubl
aam
lahf
or
or
fldln2
repnz
dec
in
inc
testb
mov
xor
pop
xchg
fbld
cmp
imul
ljmp
cmc
ljmp
cmp
inc
inc
dec
or
jae
xorb
or
cmp
subb
xchg
popf
cmc
pop
repnz
sbb
lods
pop
and
popf
push
notl
data16
inc
pop
cmpsb
or
das
push
sub
cltd
sub
push
shlb
out
nop
dec
sub
insl
push
push
pop
sub
ds
ds
ret
ret
pop
aas
mov
shll
or
add
mov
fsts
imul
je
push
lds
inc
xchg
xchg
cmpsb
jo
pop
push
push
imul
push
insb
or
out
imul
call
sbb
cltd
std
jl
sub
or
iret
pop
enter
xlat
jle
inc
fcmovnb
aaa
xor
sbb
mov
nopl
sbb
adc
or
ljmp
push
xchg
add
imul
test
xchg
into
lret
jp
lods
cmp
adc
jo
pop
pop
shrb
mov
adc
aam
sub
push
push
fldcw
popf
sti
or
inc
negb
test
xlat
push
push
out
and
jg
mov
and
xchg
push
jae
sbb
sti
mov
sub
xchg
fwait
icebp
mov
cmp
inc
and
lds
or
daa
mov
sub
push
mov
cmp
das
pusha
dec
mov
sbb
jbe
enter
icebp
jmp
push
out
mov
cwtl
push
sti
subl
outsl
ss
aam
jl
lret
mov
pop
mov
xchg
scas
in
sub
and
out
adc
and
xchg
sti
mov
int
lea
jmp
jmp
fdiv
and
jne
jecxz
add
or
jae
lret
dec
aad
jns
add
cs
add
and
loope
fimull
cld
xchg
out
les
dec
pop
ja
into
aam
pop
xchg
pushf
into
jo
cmpsl
inc
idivl
std
xchg
fimull
out
into
sbb
fisubrl
xor
jg
ret
mov
push
pusha
dec
movsb
je
in
jge
mov
and
cmp
and
cmpb
adc
adcl
lods
inc
ror
sub
pop
mov
lret
adc
test
imul
ficompl
mov
sbb
add
arpl
iret
dec
insb
lret
sti
loop
jecxz
sub
lea
frstor
pop
xor
dec
dec
dec
jb
rcr
jge
addr16
rorl
repz
lods
imul
sub
push
inc
adcb
xchg
inc
push
aas
hlt
pop
fbld
aaa
out
popa
out
mov
xor
pop
dec
loopne
jp
adc
pusha
adc
out
cmp
fildll
fildl
mov
mov
testb
sbb
xchg
jmp
add
pop
aam
cmp
out
or
divl
jb
negb
dec
add
pop
adc
ljmp
sbb
push
push
add
pop
cmp
nop
xchg
dec
push
aam
movsb
sbb
xchg
cmpsb
adc
fnsave
sbb
iret
ficompl
push
stos
add
movl
cmpsb
sbb
mov
mov
aam
adc
outsb
or
jns
pop
cltd
bound
test
jno
xchg
sbb
aad
nop
sub
mov
lret
into
mov
mov
ss
cmp
sub
jo
push
addr16
or
cld
mov
sbb
pop
clc
or
or
roll
fldl
jae
jle
sbb
mov
push
mov
jbe
push
adc
mov
repz
cmpsb
adc
ss
mov
jl
or
daa
movsl
shl
fistps
jmp
cmp
pusha
xchg
dec
add
repz
jge
fwait
sub
pop
insl
sub
inc
sub
daa
or
or
jp
pop
add
pop
test
xchg
andl
insl
cld
outsb
inc
xlat
test
call
jns
movsb
hlt
add
jle
sub
fimuls
clc
jmp
add
xchg
data16
fwait
int
orb
fstpt
scas
mov
jl
jge
fcom
pop
test
out
xor
lods
pop
cmc
icebp
loope
out
dec
jno
or
insl
ss
mulb
movb
sarl
ja
sub
icebp
lcall
jb
mov
pop
pusha
test
xlat
push
push
cli
fucompp
int
mov
xor
cmpsb
sahf
ds
sub
mov
fs
mov
jnp
jmp
mov
testl
sub
leave
xchg
mov
xchg
fs
cmpsb
and
mov
and
pop
xchg
sarl
cmp
mov
jge
jae
loopne
out
xchg
jo
lret
mov
shll
jp
fs
insb
sahf
lret
scas
notl
stos
jns
mov
mov
or
dec
pop
cwtl
pop
mov
mov
lret
lods
dec
push
enter
jmp
pop
out
movsl
scas
popa
mov
pop
cltd
leave
mov
adc
add
sbb
lcall
xor
out
or
movsb
repnz
mov
xor
xor
leave
push
imul
push
dec
mov
adc
shrl
leave
sub
outsl
dec
cmpsl
dec
dec
xchg
repnz
and
mov
xchg
aas
cmp
imul
xchg
repz
fs
sbb
pop
int
shrl
sbb
adc
pop
jecxz
repz
adc
dec
jb
js
sbb
jmp
stos
flds
pop
sub
inc
mov
bound
enter
jge
jbe
stos
rolb
pop
or
int3
imul
mov
aam
fimull
or
adc
adc
mov
or
loop
out
ret
jecxz
cs
cmpsl
mov
fldenv
push
sbb
xchg
pusha
jmp
lahf
out
clc
les
add
ss
lahf
sti
mov
xchg
sarl
sbb
mov
insb
test
shll
xchg
leave
out
add
out
sbb
lret
nop
jmp
icebp
push
dec
das
pop
add
sub
sbb
inc
pop
repnz
cwtl
add
scas
xor
movsl
xchg
sbb
and
scas
push
sahf
sahf
popf
cld
roll
fs
pop
into
mov
or
out
mov
mov
or
imul
push
pop
je
lcall
dec
or
dec
adcl
aam
test
subb
shrb
cmp
mov
sub
jne
lret
jns
sarb
popf
mov
dec
outsb
je
lds
adc
cmp
js
int
xor
jns
pop
dec
call
sub
cmpb
mov
adc
pushl
fs
add
xchg
rorl
xor
movsb
in
jno
mov
mov
cltd
imul
repz
fistpl
xchg
and
jbe
add
pop
int3
pop
imul
cmpsb
lahf
shrl
int3
inc
sbb
sub
insl
and
lret
add
rolb
mov
in
std
cmp
mov
js
xorl
cmp
in
or
repz
dec
xchg
push
ss
mov
sbb
std
gs
scas
xchg
imul
into
sahf
jnp
repnz
and
sub
in
xor
add
lahf
scas
imul
out
lods
jno
dec
mov
rolb
in
push
xlat
iret
addb
out
xchg
movsb
stos
jle
rcl
into
loopne
fstpl
mov
mov
loop
cmpsl
je
pop
repnz
push
cmp
arpl
test
scas
add
and
push
inc
xlat
inc
pop
mov
adc
rcll
imul
inc
inc
push
add
stos
jmp
xor
add
or
into
jne
sub
cmpsl
lcall
pop
out
add
cld
cld
adc
xchg
xorb
scas
and
xor
fmul
clc
sub
bound
pop
ss
dec
ficompl
mov
mov
inc
sub
or
imul
lahf
fwait
xchg
lds
adc
scas
sarb
jbe
xchg
mov
mov
imul
sbb
push
and
mov
mov
push
xor
push
and
pop
pushf
or
shrb
mov
pop
in
into
sti
push
inc
jle
xor
xor
data16
mov
and
mov
pop
fldl
pop
mov
std
sub
mov
jae
test
ds
movsb
push
cwtl
push
adc
sarb
inc
xchg
cmc
mov
jl
mov
test
jle
jg
or
push
sti
clc
fisubs
shll
cmp
pop
sbb
cmpsb
inc
xor
jecxz
sub
mov
in
dec
aam
mov
jmp
stc
xchg
xor
lock
or
add
cwtl
test
xor
add
mov
cmp
add
inc
cli
mov
push
repnz
lret
push
dec
cld
mov
jge
lea
icebp
pop
push
test
pushf
xor
xchg
dec
iret
insl
xor
data16
sbb
jmp
jno
lret
test
cmp
hlt
inc
or
mov
mov
pop
aam
repnz
in
xor
rcrb
out
cld
addl
mov
orl
cltd
testb
idivl
pop
into
leave
xorl
cmp
into
sub
and
xchg
xor
aaa
pushf
cmpb
dec
iret
out
sar
push
or
jecxz
mov
ret
xchg
mov
sbb
movsl
test
das
adc
pop
push
and
imul
mov
scas
add
imul
lcall
loop
adcl
popa
into
stos
mov
repnz
sahf
test
std
adcb
in
in
xor
out
scas
jl
pop
lret
xor
inc
mov
fsubrs
add
lock
ljmp
movsb
pop
push
pop
stos
inc
xor
inc
push
adc
aam
mov
sub
or
sub
fimuls
add
push
and
xor
icebp
dec
jns
dec
fadds
cwtl
push
addr16
stos
cmpsb
jne
add
repz
and
push
stos
std
adc
les
sarl
sti
and
gs
sbb
gs
cmp
shrl
dec
rorl
ret
arpl
repz
pmullw
jg
shrl
or
sub
enter
mov
out
jmp
bound
xor
imul
aas
push
cltd
leave
mov
xchg
enter
pop
push
mov
sbb
sbb
out
outsb
sub
mov
adc
jge
pusha
cmpsb
xlat
mov
pop
mov
or
cmp
bound
rolb
aam
sub
cmp
inc
or
out
xchg
mov
xchg
and
jl
ss
fstpt
aaa
add
daa
dec
out
std
add
rcr
or
and
cmp
xor
jp
dec
es
xchg
jmp
cltd
jae
fdiv
push
dec
or
jmp
outsl
subl
es
jp
mov
sbb
fstl
jmp
push
test
mov
xchg
faddl
leave
dec
xchg
and
lea
mov
int3
sub
pop
push
outsb
push
aad
loopne
dec
js
daa
xor
es
jle
adc
sub
cmp
dec
pop
ret
jg
ret
inc
pop
pop
test
dec
cli
add
fidivs
aad
adc
push
loope
pop
ds
push
stos
cwtl
jg
out
push
insb
and
or
popa
cmpsl
insb
dec
xor
jg
fs
xchg
xchg
sub
fmulp
fcoms
or
aas
cli
jb
repz
and
ret
mov
ret
add
pop
fisttps
inc
mov
cs
push
jle
roll
enter
incl
xchg
jmp
stos
mov
cmp
mov
xchg
bound
stc
xchg
mov
je
push
push
cltd
pop
andb
push
repnz
movb
push
es
jl
add
loope
jne
mov
lret
adc
add
jae
mov
loope
cld
popa
fbld
jle
out
mov
xlat
out
push
mov
cmp
aaa
loope
in
or
lds
int3
fnsetpm(287
sbb
lret
arpl
bound
xor
jge
jp
pop
fs
inc
sbb
fcmovu
js
ret
cltd
notb
inc
mov
xor
dec
fyl2x
test
pop
sarl
sarl
xchg
scas
mov
adc
fdivrp
adc
inc
test
call
shlb
mov
or
sbb
divl
mov
sub
push
or
inc
rclb
mov
pop
adc
push
pushf
adc
and
add
jne
idivb
mov
xchg
xor
sbb
xchg
or
insl
push
inc
cmp
cmp
cmp
xchg
xchg
jle
out
dec
push
sarb
jle
addb
loopne
jae
rorb
ficoml
pop
mov
nop
daa
pop
popf
jmp
dec
les
arpl
adc
xchg
push
outsb
mov
icebp
jae
mov
test
icebp
or
and
in
jge
lahf
inc
into
pop
sbb
push
lea
xor
jno
stc
mov
movsl
cmp
sub
iret
jp
pop
or
jle
movsb
jge
pop
xchg
sbb
pop
popa
mov
jns
pop
js
xlat
xchg
xor
xor
in
jno
fcomi
cmp
rcll
mov
mov
test
cmp
js
add
negl
push
repnz
mov
push
and
xor
or
mulb
mov
aas
pop
arpl
sub
call
idivl
lock
inc
repnz
pop
pop
mov
pop
shll
jbe
arpl
pushl
test
lods
int3
inc
imull
shrl
daa
push
adc
sbb
fwait
hlt
aad
add
add
cli
mov
imul
pop
out
add
gs
adc
nop
out
imul
add
js
leave
push
dec
push
int
push
fcmove
icebp
sbb
jg
out
inc
jno
jbe
dec
jno
inc
movsl
incl
test
fbstp
inc
enter
push
pop
lds
icebp
ret
jle
fsubp
in
sub
xchg
push
mov
stc
clc
popf
push
mov
fbld
dec
jne
shl
scas
rorl
cmp
xchg
push
sub
into
push
arpl
jl
out
add
imul
nop
or
dec
mov
dec
mov
dec
sub
pushf
call
roll
push
cli
popa
cld
push
fdivr
loopne
push
sbb
inc
rol
sub
shlb
pushf
jmp
stos
adc
outsl
jbe
insl
sub
push
addb
repz
test
out
sahf
and
jns
cltd
rolb
add
sahf
pop
sub
push
lret
repnz
orb
add
xor
sub
sub
daa
stos
adc
mov
jbe
lods
fwait
mov
bswap
xor
movsl
jl
outsb
mov
mov
pop
dec
fsub
sahf
push
lret
pop
addr16
ds
cmc
fistl
arpl
pop
add
cltd
lea
sub
inc
pusha
iret
dec
xlat
movb
int3
add
inc
add
int3
and
mov
shll
mov
inc
mov
xchg
jo
subl
dec
das
imul
push
xor
out
pushf
cmp
push
pop
inc
lret
in
frstor
loope
xchg
mov
xchg
aas
push
je
pushf
repnz
rorb
loop
mov
insb
shr
jp
daa
mov
insb
stos
pop
push
scas
test
xor
mov
fidivrl
pop
inc
jnp
lcall
adc
in
jb
xor
jg
or
sar
arpl
adc
sarb
dec
shll
jbe
ret
loopne
call
jge
addr16
jp
mov
and
js
sahf
repz
xchg
outsl
mov
loope
ljmp
or
inc
sub
pop
sub
jl
lret
pop
mov
adc
jge
sbb
cmp
lods
mov
ds
fwait
ret
aas
xor
pusha
test
xchg
mov
adc
inc
nop
sub
pop
cmp
imul
sbb
cltd
push
xor
sbb
mov
lret
mov
dec
cmp
jnp
sbb
lret
lret
stos
pop
xor
cmpsl
sbb
cmpsb
xchg
dec
mov
loope
mov
jo
sbb
and
lahf
adc
adc
push
adc
lcall
sbb
jecxz
lea
ljmp
in
cltd
adc
cmpsl
dec
adc
sub
movsl
push
mov
fucomp
or
repnz
jg
mov
shrb
xor
push
add
in
jbe
divb
shll
push
in
jmp
sub
push
dec
pusha
pop
pop
cmpsl
push
push
or
punpckhdq
jmp
hlt
or
mov
adc
out
lahf
sub
dec
dec
jbe
push
xchg
jp
outsl
lahf
jmp
pop
outsb
in
out
ret
and
jl
ror
sub
popa
jb
and
int3
scas
in
and
cmp
jno
push
mov
out
ficoms
jg
lahf
dec
movsl
mov
mov
cltd
loop
xlat
shld
push
divl
xchg
adc
jg
imul
call
mov
call
mov
lock
push
fwait
sub
add
in
cmp
int
xor
loop
xor
pop
mov
in
out
mov
stc
pop
ja
dec
xchg
add
int
lods
sub
out
sub
ret
and
dec
jno
xchg
jns
adc
prefetchw
lods
ret
xchg
ss
pop
xchg
or
cmp
and
adc
cmp
std
and
js
xor
jbe
cmp
push
jecxz
pop
xchg
lods
or
cltd
ret
mov
testb
inc
test
leave
mov
mov
stc
sarl
mov
imul
stc
sub
test
add
leave
sub
pop
mull
mov
jle
imul
in
push
pop
xor
or
cmp
insb
xlat
int3
cmp
dec
dec
ljmp
push
or
int3
movsl
sbbb
sti
icebp
popa
add
adc
fldenv
dec
fcomps
repz
mov
mov
mov
pop
stos
xor
xchg
loop
sub
sub
dec
add
xor
divb
call
int3
mov
rcrl
popf
orl
inc
ljmp
scas
mov
jp
outsb
ret
push
out
mov
aas
ja
lods
sub
scas
dec
sub
add
cmc
xlat
cs
cmpsb
call
adc
push
cmc
jne
es
call
push
xchg
push
sbb
xor
jle
mov
push
mov
bound
lcall
sbbb
lods
and
xchg
xchg
movsl
mulb
push
sarl
int
inc
jg
in
sahf
sbb
int
cmp
mov
pop
js
jae
out
sahf
jge
scas
pushf
push
fcoms
and
mov
push
push
test
cld
inc
popa
cld
lds
mov
xchg
icebp
nop
adcl
rorb
mov
mov
lock
orl
jae
cmc
fwait
stos
lret
dec
rorb
pusha
movsl
cmp
mov
mov
jo
pop
mov
dec
mov
loopne
in
ljmp
fldenv
test
jl
sbb
pop
pop
lds
popa
sbb
dec
cmpsl
dec
jno
or
adc
into
pop
mov
mov
enter
mov
sub
lods
movsb
loope
js
mov
arpl
push
sbb
aas
sbb
pop
dec
aas
inc
pop
add
je
adc
and
push
dec
sbb
ja
mov
mov
mov
cmp
fcmovnbe
or
mov
bound
in
push
and
inc
mov
je
lea
cmp
testl
iret
shll
cmpsb
pushl
and
gs
pop
test
mov
movsl
stos
mov
stc
push
shlb
mov
call
fistps
jg
into
fcmovnu
adc
pop
jle
mov
adcl
cltd
stc
mov
jle
adc
das
cmp
fnstenv
iret
sbb
pushf
cmp
gs
out
inc
inc
scas
or
add
inc
cmp
pop
mov
add
je
mov
call
mov
xor
pop
sbb
push
fisttpll
hlt
cmp
jg
sub
jg
jmp
fcmovu
rcrb
test
dec
imul
rcrl
push
inc
mov
cwtl
mov
sbb
addr16
aas
mov
imul
cmpb
fstps
add
imul
sbb
sbb
out
and
test
es
cmc
data16
jle
sahf
movb
push
add
push
add
pushf
mov
cmpsb
adc
roll
push
ss
leave
dec
test
pop
daa
mov
pop
add
pop
testb
out
imull
mov
int3
sub
ror
pop
inc
loopne
ja
std
jg
mov
std
jnp
jle
ja
mov
jnp
in
int
in
bound
rsm
lds
pushf
mov
je
iret
xchg
ds
sti
mov
dec
pop
aas
mov
push
notl
sub
mov
sbb
out
loop
jns
push
cmpsb
push
cmp
nop
mov
addr16
mov
xchg
xchg
addr16
dec
inc
daa
out
mov
xor
sarb
sti
jb
pop
dec
add
gs
and
rcr
xchg
repz
shl
rorl
mov
cmp
push
push
xor
add
cld
mov
shl
rcl
cmc
sbb
sub
dec
lods
push
or
mov
cmc
push
adc
lcall
or
fwait
mov
mov
cmpsb
enter
repnz
cmp
stos
aad
adc
push
or
ret
repnz
and
sub
mov
and
out
scas
arpl
daa
push
out
rorb
std
pop
mov
in
sub
test
into
ror
dec
push
cmp
into
xor
jmp
mov
insb
loop
dec
or
push
lods
push
lock
mov
mov
or
iret
pop
jg
loopne
fnsave
push
adcl
ret
inc
rolb
fidivrs
push
in
mov
sbbb
mov
out
pop
mov
mov
sbb
and
test
inc
out
dec
mov
mov
insb
and
icebp
inc
movsl
aas
outsl
pushf
in
int3
pop
cmp
dec
imul
cmp
imul
or
mov
push
fisttpll
cmpsl
aas
xchg
cwtl
xchg
xchg
aas
icebp
or
ficoml
push
lock
ficompl
addr16
loope
push
jle
std
jg
leave
sbb
jb
bound
lea
cmpsl
mov
jp
scas
idivb
cmc
pop
cmp
cmp
int
ss
dec
and
mov
lds
cmp
add
cmpsb
xchg
mov
rclb
test
mov
add
cmpsl
add
cmpsl
test
stos
fs
mov
jb
call
stc
add
lods
lret
shlb
fiadds
jl
incl
sub
jmp
std
out
bound
lcall
or
ds
out
sbb
sbb
adc
jae
repnz
and
fcoml
nop
scas
imul
ja
in
and
cmp
mov
sub
lahf
push
cmp
aas
sub
sbb
test
clc
jne
sub
pop
inc
inc
out
popf
ret
or
push
sbb
out
js
iret
shll
loope
rcll
mov
sahf
jno
jbe
lods
into
mov
call
into
lcall
cld
das
stos
lret
push
outsb
inc
and
mov
mov
loopne
leave
test
sbbw
bound
mov
dec
push
cli
pop
out
dec
jae
testl
jbe
loopne
sti
fistl
jl
xchg
sub
aad
sub
mov
cmp
movsl
pop
clc
iret
ds
and
sbb
mov
aas
or
ret
push
gs
cmp
or
pop
stos
sti
fsubrp
mov
lret
mov
sub
popf
imul
mov
dec
test
xor
lahf
into
fdivs
sar
shlb
dec
shl
cli
add
mov
cmp
fidivrl
popf
mov
aas
test
sbb
testb
jb
ja
and
jb
outsb
hlt
dec
outsb
inc
xlat
pop
repz
jmp
sbbb
adc
or
jg
xchg
ds
cmpsl
cmp
pop
sahf
cmp
jmp
scas
mov
loopne
addr16
cmp
into
adc
push
in
xchg
ret
dec
pop
sub
iret
nop
xchg
ret
dec
sub
add
adc
leave
jb
mov
inc
mov
in
sub
cmp
push
xchg
loop
adc
mov
jp
das
sbb
movsb
ljmp
fcoms
rolb
xchg
aad
cmp
push
inc
xchg
mov
fs
test
push
pop
jno
adc
je
ret
pop
insl
cmc
push
mov
mov
fs
pop
mov
insl
lock
cmpsb
mov
mov
test
popf
or
cltd
sti
test
lock
bound
push
xor
sbb
push
sub
cli
rcr
ds
inc
aas
push
mov
nop
xlat
push
cwtl
insl
cmp
sahf
or
or
es
rcl
lods
sub
jg
dec
jns
cltd
inc
xor
rep
dec
gs
add
jp
or
sub
das
rorl
push
push
pop
mov
cwtl
pusha
addl
icebp
or
jbe
pop
ss
lock
jne
jnp
popf
les
or
inc
and
cs
mov
and
xor
fwait
hlt
loope
or
cmpsl
loope
popa
rorb
add
sarl
std
hlt
ficoml
mov
mov
jne
sub
jb
ds
scas
jnp
pop
cmp
filds
or
vunpckhps
cmpl
xchg
jae
mov
clc
daa
mov
ffreep
sbb
xchg
int3
das
jo
adc
jo
btc
jge
push
ljmp
jmp
push
add
sbb
sbb
pushl
decl
and
pop
aas
popl
test
jbe
aad
sbb
lret
lock
fcoms
icebp
push
and
inc
xchg
sub
jbe
les
out
fwait
xor
sbb
scas
adc
xchg
push
and
sub
or
jns
inc
push
outsb
jp
fs
rcl
mov
cmp
or
pop
ss
pop
mov
inc
repz
fistpll
rcr
xlat
fisttpll
add
jno
fiadds
push
addr16
sub
xchg
cwtl
test
out
es
mov
or
add
jno
or
dec
sub
lahf
pop
xor
inc
mov
out
dec
push
es
in
iret
mov
pop
out
mov
mov
or
outsl
mov
cltd
mov
out
xchg
adc
mov
push
sub
or
mov
js
xor
sub
sub
and
and
jbe
adc
dec
inc
pop
pop
mov
icebp
jnp
hlt
mov
shrl
addr16
sbb
sbb
mov
test
mov
pop
xchg
repnz
aaa
daa
cmpsl
bound
push
fdivrl
aam
dec
xchg
test
and
pop
pop
jne
sbb
and
mov
or
or
pushf
les
lahf
sbb
jge
hlt
inc
lret
inc
fmuls
sbb
scas
rolb
aam
out
xor
test
mov
inc
cmc
lock
push
inc
xchg
xor
adc
shlb
enter
fabs
jo
outsl
outsb
call
pop
notb
pop
daa
xor
and
fimull
mov
ud0
xlat
inc
cmp
cmp
push
fadds
stc
mov
stc
dec
xor
push
shrb
mov
repz
add
lds
ret
shrl
inc
dec
mov
in
subb
sbb
xor
mov
mov
daa
mov
popf
add
insb
repz
mov
fstpl
add
negb
sti
mov
sub
enter
or
arpl
push
sbb
popa
imul
pop
aas
lods
cmp
in
enter
jno
pop
adc
test
jl
xchg
or
fldcw
pop
jbe
xchg
in
sub
je
in
lret
jo
mov
and
shll
push
jge
test
sti
dec
mov
sti
bound
mov
dec
cmp
mov
mov
or
xchg
push
adc
lods
imull
inc
iret
jge
pop
cmp
adc
mov
xor
dec
xchg
decb
adc
inc
sbb
sti
push
xchg
xlat
jp
in
daa
ret
int3
subb
mov
jne
pushf
dec
add
int3
jae
or
cmp
stos
jmp
test
mov
pop
xor
sub
aam
pop
sub
out
push
mov
enter
push
repz
sbb
dec
setns
and
sbb
lret
pop
or
cmp
xor
mov
jg
xor
ss
push
jge
or
push
test
in
in
or
xchg
int3
inc
cwtl
dec
aam
add
incl
add
pop
pusha
sti
enter
mov
xchg
arpl
and
fstpl
jecxz
shlb
push
mov
add
xor
sbb
fmulp
scas
popa
out
mov
xor
sub
adc
iret
arpl
jno,pn
pop
test
push
mov
inc
mov
mov
fwait
cmc
popf
out
loope
dec
push
mov
or
or
gs
mov
rcll
cli
lret
leave
icebp
clc
ss
mov
jp
popa
xor
push
adc
or
ret
addr16
call
dec
dec
inc
cwtl
fs
scas
pop
push
cwtl
inc
mov
imul
and
pusha
xor
mov
lds
adc
xor
dec
push
sbb
je
repnz
sub
jecxz
pop
daa
xor
mov
in
int
mov
pop
idiv
sub
outsb
jl
pop
enter
xlat
lods
mov
xchg
dec
nop
data16
mov
inc
push
adc
ret
lss
iret
popf
aam
outsl
lret
lods
adc
and
dec
inc
movsl
fnstsw
pop
add
sbb
and
pop
in
sbb
xchg
hlt
push
movsl
mov
sub
clc
fwait
push
dec
jp
iret
or
jne
jecxz
cltd
cli
mov
jg
cmp
jbe
mov
and
filds
sbb
out
outsb
jle
mov
mov
cmpsl
arpl
xor
and
cmp
shr
push
stos
mov
rolb
mov
ss
imul
or
jb
testb
xor
adc
sti
inc
jle
inc
jns
out
push
je
fists
and
sbbl
sub
xchg
int3
sbb
and
icebp
repnz
pop
jl
shll
test
push
inc
push
outsb
lret
xor
cvtps2pd
jb
testb
rol
fsubs
cmp
in
inc
xor
mov
cltd
hlt
xor
sub
dec
mov
pop
jbe
inc
fcmovnbe
mov
mov
loope
gs
lcall
jno
rorb
test
sbb
bound
jecxz
and
lret
dec
jbe
js
mov
aas
xor
repnz
cmp
push
pop
pop
jae
or
mov
xlat
mov
mov
in
dec
ficoml
mov
into
test
stos
addr16
mov
sarl
loop
and
cli
pop
lret
scas
dec
lock
jne
or
xor
cs
push
imulb
sub
mov
jno
sbb
lret
popf
adc
and
lods
in
xchg
ss
mov
xor
addr16
fdivrs
mov
xchg
popf
jne
xchg
jle
push
jecxz
roll
insb
fmull
or
or
inc
fs
in
aam
or
and
xchg
mov
enter
bound
sti
loopne
in
nop
sahf
stc
aas
clts
shll
sbb
sbb
mov
inc
outsl
dec
faddp
out
add
sahf
pop
sbbb
add
jmp
mov
and
fs
in
xor
adc
mov
out
add
test
add
add
call
cld
dec
call
inc
in
push
int3
loope
cmp
cmp
inc
jb
jle
adc
mov
sarb
sahf
xchg
nop
push
pop
gs
popa
inc
imul
mov
iret
subb
lret
pusha
cmp
jbe
mul
push
mov
cld
jbe
gs
mov
or
call
test
push
notb
pop
fsubrl
int3
fs
push
andl
push
inc
imul
lret
mov
leave
rcl
sbb
scas
orl
pop
shll
xchg
fincstp
mov
ljmp
xchg
jno
xchg
cmp
dec
pushf
stos
mov
cmp
and
subb
je
shrl
cltd
xchg
mov
add
mov
mov
movsb
jae
int
outsb
psubsw
popa
mov
gs
aas
sub
cmp
sar
push
arpl
nop
scas
sahf
sbb
movsl
scas
and
mov
fmull
inc
mov
test
cmpsb
dec
pop
mov
jmp
popf
lret
mov
sub
jecxz
mov
aas
rcrl
imul
or
jno
adc
loopne
test
loope
into
or
lds
inc
push
lods
push
mov
aas
pop
adc
mov
xchg
mov
bound
adc
sarl
sub
ficomps
pushf
mov
xchg
push
sub
push
xchg
cmp
fwait
adc
aam
hlt
push
or
js
ss
sbb
xchg
or
shlb
les
js
ror
sti
stos
ffreep
aam
enter
or
test
daa
lea
mov
mov
cwtl
int
sarb
popf
push
mov
jmp
add
into
stos
mov
dec
jp
into
addl
push
icebp
dec
pop
cmc
mov
pop
cmpsl
mov
enter
scas
repz
insl
call
sbb
stos
cli
dec
add
fstps
sarl
dec
sub
or
int
fcoms
or
jns
lock
add
add
scas
and
inc
shll
aas
xchg
mov
fs
arpl
shlb
aam
cmp
add
jp
loopne
push
xor
push
jo
cmp
lret
cmp
sub
pop
pushf
xchg
cmp
ret
jmp
shll
in
jg
das
iret
xchg
lods
hlt
out
adc
js
orb
shlb
cmp
rcrl
ret
jo
addr16
addr16
arpl
mov
mov
jbe
jle
lds
mov
xor
mov
fidivs
mov
rcr
fisubrs
push
addl
imul
add
andl
xchg
movsb
inc
pop
es
repz
data16
dec
pop
mov
fldl
pop
lret
es
push
in
xor
lret
mov
scas
movsb
orl
popf
pusha
or
pop
and
inc
les
inc
xor
fs
je
stos
stos
jne
jno
push
in
ljmp
lcall
out
mov
cmp
sub
or
push
adc
mov
arpl
push
sbb
jge
add
repnz
cmc
or
hlt
xor
adc
popa
adc
mov
adcb
and
icebp
fdivs
cmpb
out
xchg
mov
rorb
mov
iret
out
pop
push
out
add
pop
inc
out
inc
rorl
xchg
jle
sub
cmp
add
jmp
out
cmpsl
out
pushaw
inc
jecxz
cmp
hlt
mov
and
int3
fimull
dec
stos
mov
fidivs
popa
jae
arpl
cs
sbb
out
rcll
xchg
xor
loopne
mov
inc
out
and
dec
insl
or
xchg
pop
fildll
lods
fwait
addl
popa
or
rorb
jne
enter
in
sub
dec
and
or
mov
jecxz
mov
push
sbb
dec
pop
mov
test
xchg
lret
fidivs
stos
mov
in
mov
inc
es
dec
mov
mov
dec
mulb
or
fbstp
mov
mov
sbb
repnz
jo
cltd
dec
jl
xor
insl
xor
push
jp
mull
adc
in
in
mov
ljmp
cmp
test
jecxz
stos
pop
jnp
push
dec
out
push
add
inc
nop
cmp
lods
sub
sbb
inc
pop
pop
in
cld
movsl
mov
std
jg
mov
sub
loope
repnz
jae
push
or
shrb
pop
sub
inc
lcall
jp
fsubrl
shll
out
mov
xlat
int3
push
fcom
mov
inc
std
pop
xchg
fnsave
jb
mov
sbb
int
pop
mov
jnp
mov
jo
inc
aaa
scas
mov
loop
xor
test
bnd
movsl
sbb
aad
mov
fisttpll
in
ja
dec
mov
push
into
xchg
testl
cmp
mov
stos
out
cmp
inc
arpl
cmp
push
mov
mov
mov
test
mov
sti
mov
pop
inc
cmpsb
js
lea
lahf
xor
das
and
mov
into
sbb
out
aam
stos
xchg
repnz
and
push
subl
cmc
push
mov
mov
stc
sti
and
lea
adc
jge
in
fstl
notb
or
cwtl
mov
fdivl
in
mov
cmp
or
test
inc
and
cltd
and
inc
jae
inc
cmp
dec
xchg
daa
jbe
mov
sar
push
cmc
movsb
and
pop
or
pop
sub
mov
mov
cmpsl
lds
pop
fwait
scas
adc
mov
adc
lret
sub
ss
cmp
repz
cs
sti
sub
xchg
dec
shll
jg
add
fildll
imull
add
out
call
cmp
out
adc
int
jmp
ss
stc
clc
clc
cmp
sbb
mov
mov
js
mov
jo
jp
ret
repnz
addb
imul
mov
push
inc
test
div
dec
inc
push
je
out
fcomp
stc
inc
fmull
mov
add
repz
inc
in
pusha
aad
xchg
insb
loop
dec
or
jmp
jle
pop
add
mov
cmp
out
into
xor
xchg
mov
std
xor
in
jns
fwait
push
rcl
jge
sub
outsb
xor
xchg
sbb
jbe
and
test
mov
xor
cs
lret
mov
shlb
out
stos
test
mov
adc
add
jb
scas
scas
insl
repnz
xchg
xchg
mov
daa
mov
jmp
test
in
das
rorl
xchg
rorb
mov
xor
pop
imul
mov
cmp
rorb
loope
repnz
movb
cs
subb
movsb
add
xchg
sahf
fidivl
jo
cmpsl
sbb
lcall
out
scas
inc
popf
mov
adc
push
lods
and
mov
adcb
push
mov
mov
icebp
push
pop
outsl
xchg
and
mov
mov
mov
in
daa
test
mov
test
lret
sbb
cmpsb
xor
aas
insb
jge
adc
mov
in
cmp
enter
shrl
cmp
dec
adc
pop
add
inc
xor
and
sub
dec
sarb
inc
pop
mov
dec
sbb
lods
in
dec
cld
or
insb
xor
inc
call
mov
in
inc
jmp
daa
lock
shrl
outsb
add
xor
mov
shll
lahf
stos
mov
pop
fisubrl
fstpl
sub
pop
sub
xchg
dec
and
imul
sti
cmp
push
loope
jae
addr16
inc
cmpsl
mov
std
adc
cltd
mov
mov
jno
adc
mov
repnz
inc
jmp
addl
mov
add
pop
sbb
inc
cs
aam
in
mov
mov
popf
mov
cwtl
lcall
mov
or
dec
adc
cwtl
in
inc
loope
mov
mov
push
jb
in
and
push
outsb
arpl
mov
inc
jmp
add
scas
neg
jbe
fwait
incb
mov
push
mov
sub
test
les
xchg
dec
sti
in
mov
jecxz
cwtl
lret
aam
jnp
frstor
and
pop
lahf
addr16
mov
rcrl
dec
dec
cmpsl
xchg
andb
add
mov
sub
jp
cmp
in
or
push
bound
frstor
aam
cld
stos
push
mov
in
cmp
and
mov
cmp
mov
push
loopne
repz
inc
jge
and
int3
aad
shrl
or
mov
push
ret
gs
add
cwtl
aas
hlt
cmp
pushf
and
inc
lds
xor
adc
insl
fstpt
ss
lcall
push
or
mov
jecxz
xchg
push
fsub
jbe
push
rclb
addb
iret
cmpsb
rclb
loop
add
arpl
cmp
out
repnz
sub
cwtl
shll
lcall
jo
int
pop
pusha
rcrb
mov
loop
or
push
cs
dec
jge
mov
lods
lock
sbb
shlb
mov
bt
sti
and
mov
sbb
lret
add
leave
xchg
xchg
fxch
push
jns
jp
sub
xor
xor
in
mov
xchg
pusha
call
and
aad
sbb
pushf
inc
mov
pop
mov
push
nop
lods
fldt
rcll
std
rcrl
loopne
push
cltd
mov
lods
test
xor
sbb
xchg
xor
push
pop
lret
pop
in
popa
cmpsb
daa
add
data16
push
mov
mov
lahf
fbstp
lret
cmp
dec
sbb
ja
stos
jecxz
push
cmc
push
xor
negl
imul
je
stos
xor
add
add
sahf
scas
movsl
scas
xchg
or
jno
and
in
cltd
lock
subb
rclb
adc
inc
jae
dec
ja
insb
jl
and
je
sub
mov
sub
int3
dec
mov
mov
dec
lds
imul
adcl
adc
dec
loop
fistpll
inc
imul
push
fsts
jecxz
sbb
pushf
or
icebp
jae
sbb
scas
insb
push
imul
test
cmp
mov
loopne
sbb
sub
mov
ds
arpl
dec
out
sbb
mov
cltd
sub
cmp
ds
mov
and
sbb
dec
lds
fwait
and
or
out
adc
add
sbb
or
jg
aad
push
jg
daa
or
bound
sbb
xor
stos
stos
repz
pop
movsb
cmpb
stos
push
das
xlat
in
and
dec
dec
std
outsb
mov
cld
outsl
mov
lea
movsb
push
jg
aas
xchg
pop
addr16
jnp
jnp
push
int3
or
pusha
adc
in
out
xorl
arpl
out
in
pushl
les
inc
push
dec
sub
push
jmp
in
adc
add
push
dec
push
fildl
mov
lea
data16
xchg
mov
movsb
movsb
or
cmp
xchg
push
cmp
movsl
xchg
test
pop
imul
lock
and
scas
mov
mov
insb
add
inc
jecxz
sahf
xchg
clc
mov
mov
stc
addr16
les
push
jp
adc
lcall
mov
inc
push
inc
add
sub
inc
sub
xchg
pop
insb
inc
int3
data16
jg
add
sbb
sar
lret
fadd
cmpl
jge
push
stc
nop
jmp
shll
push
in
lods
shll
xchg
fadds
xchg
stc
int3
xchg
cmp
mov
ja
hlt
xlat
std
clc
push
rcrl
roll
cwtl
jmp
push
addr16
int3
js
push
insb
and
xor
sub
push
jl
xchg
inc
mov
mov
mov
add
or
hlt
iret
jle
sub
mov
mov
mov
sub
rcrb
push
push
fisttpll
add
push
lahf
popf
lock
loopne
mov
and
int
sti
cmp
cmpsl
mov
leave
stos
sub
fs
add
loop
hlt
xor
repnz
mov
and
stos
or
jne
notb
push
lock
outsb
or
jo
lds
scas
sahf
les
dec
cs
fdivp
test
shr
adc
ret
xchg
insb
aaa
push
aad
pop
mov
push
cld
iret
jns
push
push
loop
push
shll
xchg
sbb
sub
femms
rcrb
addr16
popa
mov
mov
inc
arpl
ret
dec
pop
cld
pop
sbb
rol
xor
push
arpl
sbb
rolb
pop
inc
pusha
pusha
jae
testb
xchg
ds
adc
popa
adc
shl
mov
push
add
push
out
fisubrs
jge
jecxz
sbb
enter
jg
clc
mov
jge
add
fidivrl
cmpsb
je
mov
pusha
seto
adc
cmc
mov
lea
clc
shrb
inc
fists
cmp
mov
sarb
xorl
loop
mov
test
test
loopne
push
add
add
popa
es
mov
xchg
mov
mov
shlb
sbb
dec
or
mov
das
mov
jecxz
enter
scas
jecxz
bound
xorb
fnstsw
in
inc
and
mov
fisttps
dec
cld
xchg
push
loop
mov
icebp
mulb
and
mov
sbb
sub
outsl
xor
inc
xchg
jo
fs
ficompl
xlat
dec
xchg
mov
test
xor
pop
rcrl
sbb
sub
es
push
mov
sub
addr16
jecxz
lock
insl
cmp
cld
orl
ret
mov
adc
mov
test
ss
pop
ljmp
cmp
movl
and
and
add
imulb
mov
es
dec
sbb
dec
mov
leave
clc
mov
sbb
leave
ljmp
pusha
xchg
jbe
jle
pop
or
sti
lock
pop
xor
xchg
sub
addr16
hlt
xchg
push
or
pop
mov
std
sub
das
fs
add
add
pop
test
mov
jae
and
outsl
dec
xor
ss
cmp
pop
mov
orl
mov
fldcw
add
and
mov
aaa
xlat
incb
flds
scas
popa
mov
inc
pop
xchg
or
fwait
adcl
inc
or
cs
mov
sbb
or
jo
imul
loopne
lods
hlt
adc
push
xor
fs
pop
fcompl
sbb
xchg
adc
popa
insb
scas
dec
xor
inc
insb
mov
inc
leave
jns
xchg
rorb
and
cmp
aas
mov
dec
or
cltd
cmc
inc
add
or
cmp
std
adc
sar
call
xor
or
aad
add
in
fs
and
sub
iret
pop
mov
arpl
fwait
pop
loop
mov
dec
add
push
inc
outsb
icebp
out
shrb
hlt
cld
lds
enter
or
xchg
xchg
mov
mov
sbb
data16
stos
scas
fcoml
pop
sbb
insl
push
fmull
mov
and
into
mov
fistpl
dec
stc
and
push
in
adc
jmp
mov
push
add
out
lods
fwait
rolb
fisttpl
mov
add
ja
push
push
xchg
les
cmc
imul
mov
loopne
mov
iret
push
sub
mov
fsubrs
mov
and
repnz
adc
push
xor
popa
pop
sub
movsb
sub
ds
mov
int
jmp
sbb
rcrl
arpl
push
push
dec
cmpb
enter
xor
mov
inc
enter
stos
loop
pop
in
fdivrl
or
enter
inc
inc
adc
dec
add
jp
and
sbb
dec
test
jmp
ds
bound
lret
sbb
stc
jne
and
out
fsubs
mov
flds
test
mov
jns
xor
cmp
sti
inc
rorb
repz
sub
in
rclb
in
rcl
push
xlat
and
add
into
xor
or
jmp
int3
repnz
rcr
pusha
sbb
or
add
jg
js
cmpsl
add
sub
or
fildll
mov
add
xlat
jae
pop
pusha
mov
inc
jns
mov
fs
loopne
pop
adc
inc
xchg
lret
dec
mov
lds
push
cmp
adcl
mov
jo
lea
test
mov
mov
xchg
movsb
cmpsb
imul
mov
ja
aas
add
scas
push
mov
out
sbb
xor
and
and
int
fs
inc
mov
sbb
mov
cmpsb
jne
clc
adc
cmp
lds
lea
xlat
dec
cmp
cmp
lret
scas
mov
loope
das
aaa
in
mov
out
mov
xor
adc
out
cli
ror
push
loope
adc
sbbb
lock
test
loopnew
push
lret
pushl
and
push
sahf
push
scas
adc
jno
mov
push
jl
or
fcompl
test
adc
ds
repz
sahf
push
leave
jp
xor
cmp
call
cwtl
cmpsb
sub
pop
xchg
sub
lcall
lahf
and
xor
mov
dec
cmc
xor
repnz
mov
xchg
mov
and
mov
mov
push
or
push
aam
roll
scas
int
cmp
loopne
adc
jg
xchg
sbb
sub
addr16
mov
je
iret
mov
pop
xchg
inc
repz
dec
adc
inc
repz
inc
xchg
fbstp
inc
pop
sarl
mov
aaa
push
loopne
mov
fstpl
mov
xor
mov
divl
jecxz
mov
out
pop
repz
jp
mov
mov
lods
into
das
je
push
ljmp
movsl
clc
enter
cmp
fucomp
inc
test
lcall
lods
leave
xchg
mov
sub
mov
cmpsl
cwtl
rcrb
mov
sub
mov
popf
mov
mov
or
inc
xor
mov
mov
push
int
shlb
gs
pushf
cmp
ret
xchg
cwtl
add
cwtl
test
lcall
lret
mov
mov
fcomi
rclb
push
jecxz
sbb
mov
loop
pop
stos
add
std
mov
xor
test
xchg
cld
js
sbb
pop
test
cli
cmpsl
dec
mov
dec
mov
std
sbb
xlat
daa
std
icebp
cmovbe
test
shlb
iret
js
jle
cs
pop
xor
shlb
xchg
xchg
stos
adc
loope
push
dec
cmpsl
int3
mov
xor
mov
movsb
cmpl
dec
ds
adc
pop
lret
push
lahf
and
sarl
ret
xlat
aaa
pop
fld
sub
or
scas
pop
mov
xchg
pusha
icebp
push
testl
jne
xchg
mov
sub
repnz
mov
outsl
jecxz
jmp
jp
jo
lea
xor
imul
cmovo
and
rorl
loopne
mov
rcrb
in
insb
fimuls
mov
push
xchg
roll
shrb
out
inc
xchg
fcomi
icebp
mov
inc
hlt
xchg
lods
test
mov
cmc
sahf
or
gs
xor
mov
cmp
and
xchg
and
cmp
jns
out
xor
mov
cmc
out
push
jmp
fcoms
sbb
xor
addl
xor
cs
sbb
xor
pop
jo
add
pop
enter
xlat
andb
imul
repnz
inc
roll
push
flds
or
into
movsl
cvttps2pi
add
xchg
std
cmpsb
lcall
push
cwtl
imul
jmp
push
loope
add
movsb
pusha
fidivrl
dec
and
lahf
xchg
inc
in
aad
push
fwait
cmpb
aaa
add
mov
shl
mov
dec
shrl
mov
pop
mov
clc
mov
arpl
add
js
into
cld
pop
xchg
jbe
add
rep
xchg
xor
cli
out
call
sub
or
push
int3
stos
mov
pop
scas
mov
or
in
loopne
pop
les
sbb
or
out
fs
mov
out
jo
fwait
cmp
sub
jecxz
push
lahf
adc
repz
in
loope
adc
cmpsb
insb
shll
daa
test
mov
inc
xchg
dec
daa
stos
hlt
dec
dec
outsb
ljmp
pop
mov
add
add
out
inc
jg
pop
push
mov
cmc
xchg
jbe
sti
mov
jl
mov
cli
jnp
xor
mov
sbb
mov
rorb
mov
inc
push
fwait
mull
push
mov
aad
dec
pop
pop
xchg
inc
sbb
stc
fbstp
add
push
jne
inc
jecxz
lret
dec
test
push
xor
scas
sbb
pop
and
nop
scas
dec
jnp
stc
aas
loopne
fisubs
pop
mov
or
push
iret
negb
push
stc
sub
mov
dec
jno
ficomps
push
xchg
psubq
lods
int3
jg
lret
loopne
lds
add
or
add
push
loop
and
push
cmp
mov
mov
adc
mov
fld
dec
push
jp
mov
cmp
xchg
lea
adc
xchg
sbb
lcall
pop
mov
inc
ja
xchg
jbe
dec
cmp
jno
mov
sbb
jl
imul
push
xlat
pop
mov
cld
sar
ret
add
imul
ret
popa
xor
mov
and
adc
inc
fldl
insl
insl
mov
das
lds
xor
data16
dec
and
shrb
xchg
out
inc
inc
xchg
stc
daa
mov
add
jecxz
add
jne
ja
mov
and
jne
pushf
mov
sbb
lods
gs
insl
fisubs
sti
dec
or
add
loopne
negl
aas
mov
dec
lods
cli
icebp
test
in
sahf
add
clc
jno
stos
xor
jne
xchg
shrl
sub
or
gs
xor
sbb
loope
fimuls
adc
test
mov
jae
test
scas
xchg
ss
fs
mov
pop
cmp
aad
rclb
add
subb
adc
hlt
pusha
mov
mov
cmp
shlb
sbb
sub
sbb
push
adc
adc
inc
mov
sbb
fistps
push
insl
mov
pop
repz
cmp
or
jae
mov
inc
popf
mov
mov
int3
dec
cs
lret
ja,pn
insb
sub
sub
mov
ret
xor
mov
push
adc
les
cmp
repnz
inc
xchg
call
icebp
bound
or
in
in
xchg
repnz
lret
adc
xor
pop
push
int
and
in
mov
pop
fstpt
pop
mov
pop
clc
movsl
orb
scas
fisubrs
mov
cmp
ror
push
dec
cmp
add
push
push
xorl
cltd
mov
mov
push
sub
push
out
jge
in
mov
and
fimuls
or
cmpsl
fwait
lds
inc
dec
hlt
dec
mov
pop
rcrb
das
es
sbb
test
loop
cwtl
jp
push
or
test
fsubr
cmp
stos
push
xchg
cmove
mov
cmp
xor
rclb
addr16
mov
add
pop
push
inc
jnp
shll
pop
movsl
adc
stc
call
into
inc
push
cs
push
dec
jo
jge
out
leave
add
js
add
repnz
cmc
aad
adc
jo
test
xor
gs
inc
subb
jg
pop
adc
cmpsb
shlb
movsl
ud1
mov
mov
xlat
xor
xor
adc
daa
sbb
incb
aad
xchg
push
mov
or
add
and
cld
lahf
sbb
loop
jge
mov
shlb
jo
rcl
das
sbb
mov
pop
adc
and
and
jb
jae
dec
inc
dec
add
cs
mov
aaa
out
fs
fistpl
repnz
cmp
jg
fdivl
lds
dec
sub
push
test
call
call
daa
ljmp
mov
mov
cmpsb
xor
int
adc
andb
cmp
nop
pop
inc
pop
push
push
test
xor
repz
mov
fmull
cmp
pop
shll
inc
rorl
scas
inc
push
cmp
mov
cwtl
xchg
jle
inc
neg
subl
add
cmp
fimull
sub
mov
sub
xchg
fidivs
xchg
call
inc
test
lea
mov
sub
daa
inc
jge
add
xchg
mov
lahf
xchg
mul
loop
cmpsl
dec
lds
xchg
or
cwtl
inc
jbe
shll
jp
dec
push
jmp
or
dec
or
pop
lret
bound
sti
xor
add
mov
mov
lahf
cmp
jne
mov
orl
adc
ja
add
je
jp
dec
mov
push
or
aaa
mov
sti
cwtl
flds
jecxz
movsl
sub
sti
adc
inc
jno
test
stc
jo
cld
cmp
jmp
rsm
movsb
sbb
lds
and
test
sbb
xor
dec
push
dec
sti
push
hlt
xor
pushf
add
cltd
test
push
in
pop
inc
aam
mov
sub
pop
ret
outsb
dec
or
dec
test
mov
push
mov
jbe
mov
or
in
jle
adc
dec
movsl
xchg
pusha
cli
aas
jle
jecxz
or
mov
dec
into
inc
cld
addb
pop
es
fildl
andb
adcb
andl
mov
scas
test
ret
sub
jge
ds
aaa
pop
rcr
cmp
xabort
outsl
push
add
out
or
testl
repz
negb
ret
inc
dec
mov
nop
ret
dec
mov
and
mov
xor
or
cs
push
cmpsl
subl
push
mov
and
jg
sti
jg
inc
sub
or
sti
jno
jb
js
loope
clc
mov
test
adc
scas
sbb
nop
cmp
pop
xchg
inc
xlat
sbb
int3
call
iret
xchg
sbb
das
pop
dec
push
mov
push
popf
shrb
inc
sbbl
push
dec
dec
data16
or
mov
sahf
cmp
adc
xchg
stc
dec
sti
out
mov
add
ss
mov
imul
mov
into
int3
sti
subl
bound
fisttps
push
test
adc
jge
inc
xchg
jle
cmp
test
xchg
ss
cld
cltd
rdtsc
and
lods
mov
movsb
add
and
xchg
pop
cmovo
out
imul
adc
lea
call
fimull
stc
ds
jmp
inc
push
lret
jno
push
sbb
in
xlat
mov
xchg
icebp
mov
popa
push
mov
lahf
sub
cmp
repz
mov
fwait
imul
fldcw
movsl
mov
pop
pop
movsl
mov
mov
nop
scas
fistpll
mov
out
xor
or
adc
call
andnps
cmc
inc
outsl
push
cmpsl
ret
nop
add
test
jb
lds
mov
add
inc
pop
sbb
jno
inc
xor
sbb
lods
inc
xor
je
out
cmp
leave
pop
leave
ljmp
jle
jbe
push
inc
clc
subb
ja
mov
fcoms
mov
mov
jns
inc
add
push
mov
push
sbb
sbb
out
sti
sbbl
sub
fimuls
mov
lea
dec
jne
lret
mov
enter
shl
cmpsb
and
adc
fs
pop
adc
out
xor
sti
in
hlt
xlat
daa
adc
jns
fisttpl
lods
or
cltd
mov
test
icebp
xchg
dec
sub
aam
xlat
xor
push
xlat
js
push
xlat
sbb
scas
sub
inc
pop
inc
pop
fs
shl
inc
into
and
out
rorl
cli
adc
dec
xor
dec
and
mov
inc
call
iret
jno
mov
jnp
or
pop
push
sub
sbb
sub
mov
data16
mov
jb
frstor
jmp
lret
mov
xchg
or
lock
or
sbb
inc
push
int3
inc
sub
adc
adc
imul
or
shr
add
incl
test
sahf
pushf
frstor
xor
fisttps
and
xchg
jge
inc
clc
je
xor
and
adc
shrl
scas
out
jb
aam
push
pop
and
arpl
aas
lods
out
in
add
cli
out
sbb
xchg
mov
mov
push
cmp
ret
jge
xor
xchg
xchg
jno
out
data16
loope
out
or
popf
int
out
neg
lock
insl
inc
push
sub
sbb
sbb
pop
lret
ret
mov
push
cmp
je
enter
xor
or
jnp
fcompl
rorb
pop
std
call
lds
add
push
addr16
sbb
aam
or
or
pop
lea
rcr
insl
loope
addr16
popa
cs
ret
dec
out
mov
add
sbb
outsl
mov
xor
sbb
push
or
xchg
mov
push
cmp
arpl
sbb
les
orl
mov
lret
sbb
pop
jo
cmc
sbb
xchg
xor
hlt
test
add
push
gs
lods
xor
xor
cltd
lret
or
lahf
mov
rcrb
sbb
addb
push
mov
jmp
sub
sub
mov
in
dec
xchg
cmp
mov
or
pop
mov
xchg
jge
adc
fdivs
mov
ficoms
push
ds
les
leave
dec
iret
ficoms
ficoml
in
shll
in
std
adc
fst
popf
lcall
and
addb
push
jmp
jnp
ret
mov
mov
leave
les
aam
iret
shll
pop
mov
xchg
out
mov
mov
das
xor
add
sub
sbb
push
icebp
data16
cmp
pushf
lcall
cmpsb
cmp
inc
xchg
lods
cli
fs
cmp
mov
add
and
movsb
dec
movsb
mov
xlat
rcrb
adc
mov
hlt
lods
mov
push
and
fidivs
test
add
cwtl
inc
and
test
jge
pushf
movsb
idiv
lea
addb
mov
or
je
bound
loope
sbb
stos
stc
push
lods
or
shlb
loop
idivl
aam
repnz
aaa
mov
clc
rcrl
leave
fisttpll
divl
sbb
movsl
add
outsl
and
movsb
dec
pop
jp
mov
mov
cmp
dec
cmpsb
jmp
popa
mov
push
jmp
pop
addr16
push
leave
ja,pn
inc
sub
push
lret
inc
push
mov
jns
lcall
stos
int3
out
es
test
xchg
cmp
out
jb
fdivr
xchg
sub
outsb
pop
mov
popf
repz
mov
sub
shll
sti
pop
xlat
adc
ds
jne
sbb
jae
xchg
aas
xchg
inc
inc
cmp
jp
cwtl
call
movsb
push
adc
cltd
ficompl
inc
mov
repnz
insl
sub
adc
lds
ljmp
ret
or
xor
filds
insl
jo
gs
or
repnz
data16
int3
divb
adc
pop
xor
mov
pop
jno
cmc
stc
push
pop
jmp
cmc
imul
or
cmpsb
sbb
out
push
dec
mov
mov
and
push
xchg
xlat
push
shrb
inc
jmp
sbb
mov
sbb
mov
mov
dec
cmpsl
mov
ret
mov
jae
out
stc
mov
jge
sbb
add
out
adc
dec
int3
jns
mov
push
fdivrs
mov
insb
xor
bound
cmp
add
or
mov
or
cli
pushf
das
loop
ret
xor
cmc
in
push
ss
cmpsl
fbstp
fcoml
icebp
aaa
jb
cmpsb
ja
mov
mov
pop
rclb
xor
pop
ljmp
sbb
movsl
jo
es
or
inc
sbb
rorl
xchg
aaa
lahf
push
add
mov
cmp
xor
faddp
inc
pop
cmc
dec
lea
add
push
bound
insb
sahf
jb
popa
in
enter
pop
ljmp
xchg
adc
leave
mov
ficompl
repz
adc
stc
add
mov
xor
adc
es
ss
mov
jge
jmp
mov
mov
xchg
jnp
daa
adc
aad
jg
int
dec
cli
shl
in
mov
inc
jno
push
inc
xchg
sub
mov
lahf
push
mov
lret
mov
in
aam
xchg
rolb
jmp
in
sbb
mov
inc
pusha
cmp
push
and
repz
loope
mov
loope
inc
jno
in
and
out
shr
mov
std
movb
mov
imul
fists
les
inc
jns
xchg
jbe
mov
pusha
adc
iret
inc
loopne
inc
test
jmp
add
and
add
scas
jns
mov
je
add
mov
insl
adc
or
xor
lahf
fcoms
mov
mov
add
xor
mov
inc
sti
xor
add
dec
or
iret
call
icebp
adc
addl
aam
jo
jg
mov
adc
inc
into
mov
xchg
mov
xchg
sub
jl
pop
sub
mov
scas
icebp
jbe
mov
ljmp
loope
mov
imul
mov
and
dec
pop
push
imul
mov
pop
xchg
and
int
mov
dec
adc
sbb
divl
or
jbe
outsb
es
jge
out
in
sub
sub
xchg
fstpt
inc
pushf
mov
lods
pop
les
pop
lret
and
push
pop
sub
les
imul
mov
fcomip
xchg
jae
arpl
jmp
pusha
mov
repz
int3
pushf
out
arpl
adc
int
and
dec
imul
push
inc
scas
sub
jbe
push
fisubrl
mov
mov
xchg
sub
iret
sbb
mov
pop
dec
push
into
stos
in
rcll
stc
int
or
into
or
cmp
bound
mov
adc
mov
fbld
inc
sub
xchg
xchg
push
jge
sub
loope
in
and
popa
dec
outsb
fidivl
bound
stos
xchg
inc
mov
das
sbb
inc
or
push
movsb
sbb
sub
adc
in
ds
jne
push
cmp
loopne
lcall
cmc
mov
xorb
dec
in
mov
xchg
sbb
fldcw
loopne
icebp
cmp
call
mov
mov
inc
sarb
cltd
xchg
adc
testb
mov
xchg
sub
jp
sbb
sti
fimull
inc
mov
and
jb
cmp
inc
push
jg
xor
lret
int
sbb
cltd
insb
repnz
jmp
std
and
adc
into
sub
xchg
lods
mov
mov
adc
and
mov
inc
in
and
mov
dec
dec
mov
lock
rcrl
and
or
stos
sahf
jmp
push
sbb
out
sub
gs
pop
mov
stos
loop
mov
dec
xor
mov
pop
scas
cmp
scas
ret
movsb
or
and
and
sbb
push
jl
jl
sub
jae
xchg
lret
test
sbb
add
add
xor
insl
fcoml
enter
loope
mov
mov
cmp
data16
and
popa
les
mov
lahf
mov
cmc
fsub
jae
push
mov
pop
xor
inc
mov
rcrb
es
js
add
mov
insl
incb
ljmp
dec
lea
lds
dec
jno
sub
in
int
es
shr
pop
lea
loop
add
sbb
mov
or
je
xchg
in
fwait
cs
test
inc
out
adc
mov
add
dec
cmp
jae
negl
mov
dec
sbb
mov
mov
jecxz
cmpsl
cmp
adc
mov
inc
mov
mov
xor
lods
orl
outsw
sub
sarb
jg
inc
lods
cmp
mov
repnz
dec
cmpsl
xchg
notl
and
pop
cmp
data16
or
add
daa
sub
aas
iret
xor
pop
push
mov
in
loope
push
push
or
xchg
fwait
js
pop
int
addr16
dec
faddp
popf
fidivl
dec
inc
clc
xor
popa
ja
push
push
jg
repnz
test
scas
imul
pop
or
cmpsb
mov
sti
dec
cltd
pop
sti
pop
xor
lcall
outsl
repnz
sbb
mov
mov
jmp
cmc
cli
cmp
or
inc
jp
stc
sbb
int
and
mov
mov
nop
push
inc
xchg
mov
xchg
sub
out
jge
aaa
xor
inc
and
xchg
xchg
mov
jne
sub
iret
or
stc
mov
das
loopne
mulb
repz
es
adc
cmp
adc
dec
push
xchg
fldt
test
aaa
ret
aas
cmp
iretw
push
shlb
in
or
aam
and
cmovns
loope
push
jns
mov
inc
xchg
xchg
test
dec
loope
inc
out
ret
push
jne
inc
imul
dec
fstps
jg
cmp
jp
cmpsb
loope
sysenter
dec
frstor
stos
xchg
shl
jae
mov
dec
test
or
cwtl
movl
pop
ss
in
test
adc
sub
ds
popl
loopne
inc
xlat
jmp
gs
xchg
cwtl
fs
mov
push
inc
jp
repz
mov
dec
scas
sub
gs
popf
lods
cmc
das
popa
and
popf
mov
xchg
pop
pop
pop
stos
adc
dec
jecxz
loope
sub
ds
xchg
jl
jg
pushf
insb
shll
or
pop
mov
stos
cmp
imul
rclb
ljmp
add
jo
fdivs
mov
lcall
mov
int3
test
xlat
cmp
aam
jnp
dec
adc
mov
adc
pop
mov
adc
mov
sti
cmc
int
pop
cmp
ss
in
decb
and
mov
adc
fstl
adc
out
jp
mov
xchg
jb
adc
cmpb
mov
pop
xchg
je
cmp
cmp
pop
cmp
into
fs
mov
mov
lea
enter
out
clc
xchg
inc
sbb
arpl
fisubl
inc
add
adc
into
pusha
imul
fildll
xchg
jecxz
push
cmp
xchg
fsub
loopne
fcoms
movsl
pop
repz
cmp
and
adc
dec
adc
pop
rcrb
addr16
push
push
jnp
pop
int
push
call
dec
rcrl
pop
lds
repnz
clc
sub
adc
push
call
pop
out
jmp
and
int3
mov
pop
fimull
popa
out
ret
hlt
sub
loope
loop
sub
lret
das
icebp
and
mov
jbe
mov
mov
nop
sti
jle
movsb
pop
xlat
cwtl
scas
pop
lcall
lahf
adc
clc
inc
adc
std
dec
xchg
ret
fsubr
pop
pop
sub
cmpsb
cmp
add
mov
ret
aam
outsl
pop
enter
dec
push
xchg
fisubs
les
jno
clc
fstpt
dec
xor
incl
mov
xor
jbe
inc
sbb
aas
lods
lahf
mov
sbb
stos
and
stos
mov
std
pusha
xchg
lods
stc
sub
into
sbb
inc
jae
adc
push
or
dec
scas
jmp
dec
int3
mov
cld
out
jnp
xchg
mov
lcall
ret
add
inc
adc
xchg
arpl
push
jnp
mov
outsb
sub
xor
lahf
jno
aas
jle
loop
xchg
pop
divb
cmpsl
adc
rcr
dec
xor
repz
push
out
arpl
mov
sti
xchg
fidivrl
push
mov
mov
sbb
add
andb
cli
pop
and
pusha
or
mov
ret
lods
pusha
pop
push
lds
jo
fstpl
xor
clc
mov
xchg
add
imul
out
test
mov
fisubl
dec
pusha
ss
dec
loopne
add
or
out
data16
outsl
inc
mov
movsl
push
cs
ss
inc
imul
xchg
and
sub
push
inc
push
test
xor
movsl
mov
mov
les
mov
inc
jmp
or
fisttpll
fwait
or
popf
mov
cltd
adc
lea
sub
clc
push
iret
mov
xchg
sbbb
or
roll
adcb
mov
dec
je
or
sub
cmpsb
test
xlat
fnstsw
in
aas
dec
lret
cmp
push
push
jp
sbb
push
xchg
test
lahf
mov
test
pop
or
stos
adc
mov
push
inc
les
negl
je
test
adc
and
pop
mov
xchg
push
and
xchg
je
fs
add
push
loop
subb
cmp
jae
mov
mov
js
mov
push
mov
push
arpl
fdivrs
mov
add
jl
sarb
test
aad
cli
call
add
mov
inc
sbb
pop
pop
jmp
or
or
and
inc
outsb
xor
xor
and
and
ret
mov
jno
cmp
rclb
mov
dec
mov
insb
or
gs
lret
in
aad
push
fidivrs
xchg
mov
cli
push
xor
test
fwait
adc
xor
jnp
pusha
mov
lahf
aad
cmc
dec
out
sub
sub
int3
dec
aas
sbb
lret
adc
push
test
jmp
test
adc
or
mov
rclb
icebp
scas
push
ljmp
jb
inc
ja
stc
ret
out
pushf
mov
sbb
sub
fnsave
jmp
sahf
dec
mov
mov
and
sbb
inc
adc
shlb
ret
not
gs
push
mov
add
jns
decb
jp
cwtl
iret
mov
icebp
add
int3
out
mov
leavew
sub
je
mov
in
xor
jecxz
mov
decb
sbb
subb
and
movsb
or
pop
mov
dec
push
loopne
dec
pusha
inc
add
mov
ret
add
test
sbb
int3
call
dec
mov
mov
sbb
add
popf
jmp
dec
xor
negl
inc
arpl
add
mov
pop
add
hlt
stc
pushf
jmp
jmp
cltd
repz
mov
aam
dec
clc
leave
push
ror
add
loop
ret
hlt
inc
adc
sti
mov
mov
dec
in
jne
popa
repz
xchg
outsl
xchg
jbe
push
jae
pmulhw
out
mov
movl
sahf
mov
push
add
inc
jle
pop
mov
pop
xchg
dec
xor
out
add
fwait
adc
popa
bound
loopne
shll
enter
adc
lock
mov
jp
cmc
cld
dec
dec
xlat
dec
in
or
cmp
push
pusha
and
aad
loop
sbb
xchg
sahf
and
dec
sub
aad
popf
pop
dec
sbbb
cmp
sti
fadds
sub
in
push
jp
insl
sub
push
and
sar
movnti
fcmovu
jae
fdivrl
sbb
loope
inc
call
testl
shlw
loope
fstl
scas
and
push
jp
int3
mov
ret
jo
mov
xchg
jbe
sub
icebp
pushf
mov
pop
pushf
dec
idivl
mov
sbbl
in
repz
dec
cmp
mov
pop
sti
std
cmp
adc
xchg
adc
pop
out
popf
ss
int3
pop
mov
xor
test
push
scas
gs
fldenv
mov
movzbl
jns
cmp
lret
xchg
dec
ljmp
push
pop
sar
mov
cmc
or
test
out
pop
ja
push
outsb
jecxz
and
cld
push
jb
int
add
sub
pop
rolb
pop
fcoms
and
mov
lods
pop
pop
pop
mov
pop
arpl
jge
dec
cmp
mov
int3
jns
lahf
cld
push
add
mov
nop
loope
sub
sub
xlat
rcll
mov
orl
cmp
cmp
pop
xchg
in
sti
nop
fnstcw
in
sbbl
jp
aaa
xor
lock
fnstenv
xchg
cmp
push
mov
lahf
dec
sub
add
rolb
lret
lds
adc
xor
push
cmp
mov
mov
pop
push
mov
pop
mov
xchg
adc
adc
sub
adc
aam
testl
lds
pop
jno
dec
repnz
cld
or
pop
hlt
add
sbb
fisttpll
sub
sti
mov
popf
out
pop
imul
cmp
mov
fdiv
in
jge
push
cld
test
jb
xlat
add
pop
inc
das
or
adc
leave
popa
mov
imul
insl
repnz
jle
push
popa
xor
or
pop
mov
rcll
aam
push
jbe
sbb
or
fwait
daa
daa
sbb
ret
arpl
sub
cmp
xor
dec
shrl
mov
xor
pushf
cmp
ljmp
jnp
inc
mov
or
jo
inc
or
push
addr16
loopne
xlat
and
pop
adcl
mov
push
add
or
mov
out
dec
push
xchg
xorb
mov
fistpll
data16
xchg
int3
push
or
imul
mov
out
mov
add
jo
lea
in
das
aaa
jnp
std
inc
pop
subb
int
cld
add
and
inc
fcompl
in
into
or
pushl
fcompl
lret
loopew
and
pop
pop
jno
cmp
ficoml
in
and
inc
mov
cmpb
adc
dec
inc
or
fnstenv
ja
xor
pop
xor
in
adc
ja
sub
inc
cmpsl
add
jg
shrb
rorl
bound
lods
pop
sbbl
das
aaa
aas
or
in
ds
push
jno
sbb
cmc
arpl
xchg
adc
in
push
mov
mov
les
mov
dec
cmc
loopne
neg
add
movnti
push
mov
mov
scas
add
xchg
std
aaa
fcmovne
bound
fisubrs
ljmp
jne
cmp
fwait
sub
cltd
xor
inc
movsb
cltd
imul
pop
xor
shll
fistpl
cli
in
repnz
fwait
orb
or
sub
mov
inc
cmp
sbb
and
fimull
inc
jo
cmp
mov
imul
adc
hlt
mov
popa
imul
cmp
aas
mov
std
dec
mov
push
cmpsb
mov
fldt
sbb
jmp
fs
mov
aad
mov
inc
push
sub
lahf
enter
js
pop
imull
mov
pop
fdivrs
ja
pop
pushf
dec
les
sbb
push
pushf
jge
bound
mov
sub
into
cmpsb
jne
push
js
cmp
push
in
inc
mov
push
fwait
cmp
in
into
inc
push
mov
in
enter
arpl
adc
imul
pop
xchg
mov
xchg
addr16
stos
xor
test
xchg
hlt
mov
loop
insl
push
and
aad
hlt
push
cmp
and
pop
rcr
jge
mov
test
mov
adc
nop
shlb
adc
and
dec
jbe
loopne
xchg
mov
jbe
sub
lods
mov
xchg
imul
es
sub
or
popa
ss
gs
mov
jp
cli
mov
pop
and
or
push
or
sbb
push
shl
movsb
mov
imul
mov
repnz
test
sub
in
xabort
test
cli
inc
push
imul
xor
xchg
sbb
sbb
jecxz
or
nop
xchg
adc
sbb
cs
cwtl
sub
pop
pop
rolb
cmp
jbe
lds
cwtl
sbb
test
xor
add
mov
adc
inc
stos
aad
xor
jmp
shlb
cmp
push
test
clc
into
iret
cmp
cli
mov
sub
sbb
scas
pop
cmp
gs
mov
xchg
cli
ja
pop
test
in
int3
outsb
dec
cld
or
inc
sarb
sub
or
into
sti
mov
jle
jbe
shrl
movsb
aaa
xchg
push
or
shll
mov
cmp
mov
pop
xchg
imul
xlat
xchg
imul
xor
mov
jnp
aad
inc
xchg
mov
xchg
insl
arpl
test
xor
iret
mov
push
mov
es
jbe
mov
leave
dec
cmp
sbb
mov
cmpsb
cmp
int
cwtl
fisttpll
push
cmc
push
sarl
imulb
mov
cwtl
mov
popf
lahf
jb
cmp
faddl
mov
jmp
fcmovnu
and
mov
in
loope
test
cmp
repnz
or
ret
xor
mov
sub
dec
je
dec
push
imul
clc
stos
loope
movsl
xchg
sbb
mov
arpl
dec
addl
jns
add
ret
mov
xchg
and
lods
imul
pushfw
pop
push
data16
cs
xchg
fnsave
clc
jmp
adc
sub
add
and
addr16
and
lods
fucomip
fldenv
and
sub
cmp
add
je
mov
pop
inc
pushf
mov
leave
gs
jmp
mov
add
out
or
inc
outsl
adc
xor
stc
bound
movsb
xor
movhps
mov
out
aaa
test
pop
pop
dec
fnsave
xchg
jo
adc
fucomip
inc
add
add
cwtl
dec
sbb
cmp
popa
jmp
xchg
mov
lds
stos
cmp
sbb
push
popa
xor
sbb
lahf
jp
mov
xchg
bound
jge
adc
jge
xchg
cmpsb
cmp
push
adc
dec
scas
shrb
lds
inc
mov
jno
xchg
test
pusha
xlat
int
sbb
scas
xchg
insl
xor
mov
xor
push
push
push
mov
pushl
sbb
push
lret
add
or
das
lock
test
scas
mov
ss
mov
xchg
cmp
xor
push
xchg
push
in
xor
test
js
test
sub
mov
pop
fidivl
lret
inc
xor
mov
fdivr
pop
dec
mov
mov
xchg
adc
push
mov
popl
dec
iret
lods
mov
inc
sub
imul
mull
test
icebp
flds
je
cmp
mov
loop
push
movsl
leave
mov
lret
stos
adc
loope
xchg
je
pop
xor
pop
push
hlt
xchg
push
out
mov
sub
mov
pusha
dec
mov
pushf
or
xlat
push
inc
and
jno
cmpsl
xchg
sbb
dec
out
fwait
mov
add
mov
inc
sar
mov
xor
xchg
sbb
sbb
jl
lretw
mov
into
pop
sub
bound
sarb
ds
pop
aas
push
adc
iret
out
mov
fnstcw
sahf
nop
popa
pushf
imul
pop
xor
sti
xchg
into
jns
out
rol
xor
sbb
loopne
inc
cmp
jmp
out
pop
and
lods
into
shlb
enter
xor
mov
call
xlat
cwtl
xchg
insb
daa
pop
mov
jg
sbb
int
sub
scas
jg
jo
jle
add
sbb
push
imul
mov
mov
and
insl
mov
inc
mov
pop
sub
inc
or
sahf
ret
xor
lcall
in
or
icebp
mov
jp
mov
cmpsl
fistpl
sub
in
push
mov
or
xchg
ret
sbb
out
loopne
add
bound
push
enter
mov
add
push
adc
xlat
sbb
pop
pop
sub
jno
mov
push
fwait
in
rol
jge
jno
rcrb
sti
andb
test
ds
hlt
mov
adc
movsb
insl
enter
mov
or
jb
dec
sbb
jae
test
adc
add
xchg
mov
rcl
xchg
cmc
lods
sub
enter
out
data16
push
ss
jl
inc
jb
leave
cmpsl
nop
rorl
adc
pop
mov
and
adc
je
sbb
cmc
in
jb
pop
in
xor
inc
sahf
push
insb
repz
lds
pop
xor
adc
push
test
dec
pop
stos
jns
sarb
mov
jnp
inc
int
dec
aam
xchg
inc
mov
bound
xor
outsl
scas
ret
add
in
cmp
push
outsb
xchg
cmp
out
aam
icebp
test
call
mov
call
and
mov
push
pop
cmpl
bswap
incl
mov
jp
sub
xorl
mov
sbb
iret
pop
lahf
je
jmp
pop
adc
std
add
inc
repz
adc
push
jge
jnp
jle
stos
pop
or
jbe
outsl
pop
xor
sbb
mov
fnsave
icebp
mov
pop
icebp
push
std
fdivrl
std
and
pop
mov
fmuls
jmp
icebp
hlt
insl
outsb
jno
inc
sub
out
xlat
fs
pop
mov
jb
or
mov
or
inc
in
and
ret
shrb
and
out
daa
loop
int
ficompl
xor
andl
mov
rcrl
lcall
xor
incl
or
cmc
mov
dec
jle
inc
inc
mov
adc
sbb
pusha
lret
lahf
pop
xor
sbb
inc
xor
jl
daa
mov
xchg
mov
jge
mov
pop
add
mov
pop
sub
cwtl
xor
iret
enter
pop
int3
inc
imul
push
out
mov
cmp
jae
or
cmp
push
loopne
mov
mov
jns
movsl
leave
adc
negb
out
jmp
dec
cmp
mov
dec
xchg
insb
lret
mov
jbe
xor
lahf
push
cmpsl
xor
repz
sub
xchg
or
loop
hlt
dec
pop
lds
cmp
sub
inc
xchg
in
xor
in
negl
cld
pop
jecxz
adc
mov
loop
add
fidivl
popa
fwait
adc
mov
pop
fsts
fnstenv
push
rcr
stos
movsb
or
inc
dec
std
and
inc
iret
nop
or
out
shrl
adc
in
fnstcw
movsl
sbb
call
mov
cmp
jl
les
or
push
ficoms
cmp
repnz
scas
pushf
mov
ffreep
inc
movsb
fld
stos
std
adc
and
pop
lds
cltd
push
cwtl
inc
sub
fstl
push
mov
ss
mov
jl
jp
cmp
scas
pop
les
jmp
add
add
jle
sarl
lcall
fs
mov
ljmp
pop
fcomi
or
in
out
jns
movsl
push
bswap
mov
and
test
add
enter
jle
call
add
push
mov
jb
push
sub
ret
imul
stos
inc
cmp
mov
cwtl
inc
sbb
fstps
xchg
mov
cmp
sbbl
pop
into
pusha
dec
mov
dec
fmull
pop
mov
out
sarb
aad
jmp
adc
ret
cmpsl
mov
jae
inc
mov
jge
pop
addr16
imul
hlt
sti
ds
stos
xchg
loopne
inc
leave
xchg
and
xchg
xor
jnp
in
fbld
fcomps
fcmovnu
das
jo
nop
je
xchg
adc
sbb
jns
sbb
addr16
pushf
lods
inc
aad
push
jp
jne
in
mov
shl
push
outsl
dec
bound
in
sti
mov
popf
or
jmp
mov
adc
rorl
lock
mov
popa
pcmpgtw
push
xor
jae
xchg
aad
xchg
popa
push
lcall
icebp
cld
sarb
mov
add
sarb
mov
pop
test
bound
out
fdivrl
or
fs
loope
xchg
fmull
test
fcmove
bound
in
jp
test
icebp
sbb
push
pushf
icebp
pop
fsubl
mov
pop
jg
ret
push
outsb
jmp
cmp
mov
adc
pop
mov
les
xchg
leave
sbb
jmp
into
cltd
add
sbb
and
in
adc
pop
fstl
sarl
stc
call
or
leave
mov
lods
push
rcll
cld
or
add
ja
loop
shll
dec
addr16
mov
cmpsb
mov
and
pushf
xchg
adc
fwait
mov
jbe
int3
stos
mov
pop
mov
idivb
xor
sbb
loopne
hlt
aad
repnz
add
mov
cld
dec
mov
and
add
lea
push
dec
out
mov
push
vpsrlq
arpl
lret
dec
mov
mov
loopne
hlt
xchg
or
cmpsb
sbb
outsl
cmp
mov
inc
setp
popa
jmp
pop
mov
xchg
adc
mull
mov
sub
sbb
fisubl
lods
dec
pusha
cmpsb
mov
shlb
imul
pop
xchg
enter
dec
mov
gs
pop
sub
leave
dec
ljmp
push
into
inc
pop
out
ds
jle
lahf
sar
icebp
xor
sahf
aas
add
pop
mov
fs
clc
pop
gs
or
xor
es
lock
pop
pop
bt
je
mov
data16
sub
fildll
ret
out
ja
inc
xor
imulb
ds
movsl
cltd
pop
mov
push
jp
jle
lods
inc
imul
aam
xlat
test
jp
cmpsb
and
adc
cltd
outsl
adc
push
fwait
int3
and
popf
rcl
lret
daa
cmpsl
addb
sti
jle
xchg
es
adc
push
sub
xchg
add
out
pop
hlt
icebp
jb
movsl
test
pushf
pop
or
add
les
out
pop
fisubrl
mov
es
loopne
push
mov
rorl
jl
jmp
fiadds
rcl
ss
add
icebp
iret
adc
and
inc
sbb
jle
cmp
xor
cmp
cltd
int3
cmp
fcomps
outsl
cmc
int3
mov
push
add
xor
in
xchg
xor
xchg
nop
mov
imulb
xor
cmp
pushf
js
aas
and
lahf
out
addr16
adc
inc
std
popf
pop
adc
mov
in
add
mov
loopne
mov
dec
lret
rorl
mov
pop
loopne
mov
dec
orl
mov
adc
rorl
and
icebp
sbb
mov
nop
lods
inc
cmpsl
sub
xor
mov
stc
push
rcrl
fs
js
cmp
add
pop
fldcw
cli
add
movsb
in
sub
aaa
in
dec
inc
sub
xchg
pop
push
rorl
push
in
idiv
jg
pop
lds
jecxz
pop
lldt
mov
sti
cmpsl
sub
test
test
push
mov
cmp
jg
dec
bound
mov
cmp
popa
lods
pop
push
inc
and
xchg
push
jo
cmp
mov
or
adc
bound
xlat
pop
scas
xor
adc
lahf
dec
lret
mov
jo
xchg
sbb
dec
mov
xor
mull
dec
jns
xchg
cwtl
xchg
outsb
cmpsl
sbb
repnz
add
sub
fistpl
jns
dec
shll
insb
pop
popa
stc
lods
imul
adc
sbb
adc
xchg
or
adc
or
repnz
mov
movsl
lock
call
adc
inc
loopne
push
mov
push
pop
loope
jne
lods
xchg
loopne
add
insb
imul
jge
scas
mov
sbb
enter
ret
mov
sub
pop
movsb
sbb
cmpsb
sahf
sub
ud2
test
out
mov
mov
cmpsb
lock
mov
aas
stc
notl
mov
fwait
test
popf
mov
inc
cmp
jne
fxch
fmul
dec
je
ret
int3
sbb
adcl
or
mov
jp
out
lret
je
scas
fimull
addb
or
mov
test
mov
cmpsb
int3
hlt
jge
aaa
divb
ss
jge
add
mov
adc
cwtl
add
bound
jne
cli
jbe
outsl
mov
pop
daa
pop
hlt
pop
rcrb
cld
sub
or
jl
inc
push
lea
sub
push
add
jnp
cmp
push
inc
xor
mov
lea
mov
mov
mov
cli
lret
jb
cmp
popa
pop
dec
cmp
lods
push
mov
jmp
ljmp
xchg
pop
stos
sbb
jbe
popf
dec
jno
jecxz
hlt
pop
push
mov
and
cmp
icebp
enter
or
insl
add
hlt
dec
int3
push
and
sbb
fdivrl
addr16
mov
mov
jge,pn
inc
cli
add
mov
add
xor
out
std
rorb
shll
xor
jle
push
enter
rolb
cmp
test
pop
scas
mov
mulb
xor
xor
xor
scas
loope
dec
adc
outsb
sub
inc
mov
sbb
call
es
lock
adcb
xchg
and
push
push
hlt
mov
shl
mov
imul
data16
lahf
mov
add
int
sbb
movsb
sub
fs
push
xchg
sahf
lret
push
xchg
add
and
cmpsl
cli
cmp
xor
loop
or
in
enter
jg
mov
add
loope
or
cmp
push
mov
xchg
jbe
dec
fs
fistl
fucom
scas
nop
push
cmp
jnp
mov
dec
xchg
sbb
jge
mov
cmp
cmc
mov
mov
movsb
lahf
es
xlat
cwtl
inc
je
hlt
mov
pusha
add
loopne
add
xlat
cld
jg
mov
stc
stc
push
shrw
add
sbb
xor
sub
lahf
lahf
cli
jnp
int
in
xchg
aam
insb
aas
dec
sub
jge
sbb
mov
shl
fstl
aam
loop
ljmp
and
inc
rcll
cmp
sbb
mov
sbb
loope
push
mov
jno
clc
inc
repnz
mov
nop
fldcw
fistpll
cmp
push
adc
mov
dec
add
faddl
pop
sbb
cmp
stos
dec
cmp
pop
enter
xor
push
lock
sub
sarl
imull
mov
movsb
jae
lret
ret
lock
orl
fstl
stc
daa
push
lds
dec
xchg
xchg
jae
dec
mov
in
add
lds
rolb
cmp
movsb
cmp
mov
sbb
dec
addr16
mov
sahf
fisubrl
fwait
sbb
ja
clc
das
fmulp
les
addr16
push
subl
inc
and
push
mov
aas
cmp
mov
push
pop
js
bound
enter
aad
add
or
repz
enter
sub
fstl
mov
cmp
loopne
jns
lds
stc
sahf
jb
xadd
jne
push
rolb
cmp
cmp
loopne
sub
ret
roll
jmp
int
std
xchg
mov
imul
adc
xor
stc
dec
xchg
or
rcr
call
arpl
mov
and
sbb
xchg
add
sub
popw
sahf
jbe
inc
adc
test
sub
mov
pusha
inc
arpl
fbld
fsubrl
je
jo
cmp
rcrb
jbe
xor
jno
ss
fmuls
cwtl
push
pop
cmp
sbbl
imul
inc
mov
sbb
mov
mov
mov
mov
sti
push
lret
add
mov
aas
pop
or
mov
std
test
sub
lret
aas
mov
mov
cmp
pop
dec
jg
sub
mov
jbe
mov
and
dec
test
inc
std
mov
pop
daa
xor
icebp
fiadds
xchg
inc
or
in
notl
in
int
aas
push
cld
fldl
dec
and
xchg
lock
cld
cmp
testl
shll
jbe
sbb
cmp
je
aas
and
cmpsl
jb
and
pop
push
enter
mov
push
xor
add
sub
push
test
les
pop
shr
xchg
into
fwait
sti
adc
mov
cwtl
scas
mov
sub
in
lret
in
call
sub
mov
lods
test
int
and
push
shrb
pop
loope
adc
xchg
pop
add
ja
pop
mov
scas
sub
xor
inc
cmp
jmp
loopne
and
sub
pop
sub
inc
xchg
sbb
dec
lcall
push
popa
xor
jge
into
in
aaa
jecxz
popa
or
inc
mov
and
and
jbe
pop
mov
mov
lock
jb
cmp
fwait
ret
into
xchg
cmc
roll
add
enter
lea
mov
mov
test
mov
cs
into
sub
push
pop
ja
into
xchg
xor
push
cmp
aam
jecxz
sbb
pushf
adc
data16
in
push
int
lcall
mov
push
test
ljmp
bound
xchg
scas
rclw
shlb
mov
stos
mov
and
mov
test
out
adc
cli
sbb
add
adc
pop
jns
in
lea
mov
clc
push
imul
imul
dec
movsb
loopne
stc
imul
addr16
cmp
inc
fadds
popa
stos
pop
sbb
mov
cmp
jnp
fs
xor
ljmp
mov
sub
mov
jmp
lods
jmp
insl
ljmp
xchg
aaa
push
orl
jl
xchg
jecxz
loopne
add
aas
rclb
inc
mov
xor
cli
sbb
and
cmp
jmp
sub
cmp
sbb
in
xor
lock
or
and
cmp
push
pop
jmp
in
outsl
rcrl
cmp
or
pop
mov
xchg
out
shrl
fdiv
das
inc
aam
cmp
lcall
lret
popa
sbb
aad
test
sar
cmpl
push
mov
inc
and
sub
out
std
imul
or
cmpsb
test
add
cmp
test
push
ficomps
sbb
mov
xor
and
xor
or
mov
push
flds
cmp
pop
das
jp
mulb
jnp
xchg
rcll
jmp
pop
pop
jle
cmp
nop
dec
repnz
fisttpll
add
sbb
lds
lock
test
pop
std
imul
mov
lret
test
mov
mov
sub
test
bound
sbb
sub
push
in
cmp
lret
jp
into
push
sbb
lcall
inc
mov
cltd
fst
xchg
scas
jo
push
jl
mov
mov
cmpsb
jnp
lods
pop
mov
testl
call
mov
sbb
mov
ljmp
mov
pop
sti
add
sub
popf
lcall
mov
adc
dec
sahf
mov
sarl
xchg
gs
mov
insb
jae
mov
lea
test
cmp
vpackuswb
or
add
pop
scas
xor
push
stc
xor
out
cmp
fimull
lahf
sbb
sbb
dec
ljmp
xchg
adc
dec
clc
cmpsb
mov
jnp
sub
cmp
xchg
xor
sub
fsubr
push
jnp
pop
test
mov
push
sahf
rcrl
mov
mov
mov
mov
push
loope
movsb
bound
inc
lds
pop
or
shl
adc
scas
xor
mov
shrl
lea
push
adc
push
jmp
lret
into
popf
insb
cmp
push
jp
jl
mov
test
call
jp
mov
fdivrl
jb
mov
ret
int
sub
lock
popf
mov
dec
mov
lock
adc
adc
adc
push
xlat
or
rcll
ret
rcr
mov
inc
aad
jge
cs
stc
shl
popa
gs
ss
pop
xor
push
lret
jg
cmpsl
jne
xor
je
mov
popf
sub
sub
xchg
fsubrs
sahf
xor
push
loopne
dec
mov
sub
cs
in
push
popf
dec
xor
add
sub
mov
jmp
pop
inc
sbb
mov
mov
sbb
and
add
fcoml
mov
and
aad
xchg
cltd
push
xor
dec
icebp
jnp
test
and
mov
test
shrb
jne
mov
cmp
loop
and
mov
in
stc
icebp
test
repnz
mov
xor
xchg
dec
movl
ljmp
cwtl
vmovdqa
or
cmc
popf
sbb
fsts
orl
mov
out
lds
mov
hlt
test
mov
fadd
sub
sbbl
mov
mov
add
push
test
sub
pop
push
xchg
pusha
mov
cmp
ljmp
add
xor
mov
sbbb
xchg
mov
mov
xor
cmc
imul
sub
jl
add
lock
push
pushf
popf
jnp
sub
inc
inc
xor
aam
push
cs
mov
aas
outsb
ljmp
push
pop
lds
in
pop
jle
test
jecxz
ss
lea
mov
dec
push
pop
pop
xor
hlt
lods
add
das
mov
fidivrl
ret
xchg
sub
dec
adc
adc
cmp
and
dec
pop
call
push
pusha
xchg
ja
xchg
repz
xchg
out
call
aas
xchg
call
cmpb
outsl
mov
xlat
push
in
das
movsb
pop
dec
int
mov
lock
pop
push
add
ss
sbb
icebp
loop
xchg
push
cmp
adc
fcmovnb
adcb
test
movsb
sub
push
cs
lret
cmp
imul
sbb
enter
add
subb
sbb
call
into
adc
xchg
rol
cmpsl
push
push
lock
in
sbb
mov
stos
add
inc
lret
outsl
stc
das
sti
stc
pop
mov
or
psubsb
lods
inc
lock
lods
pop
pop
jnp
aam
lods
mov
xor
push
fstpl
loop
or
std
inc
out
sbb
add
xchg
mov
mov
sbb
cmpsl
add
sbb
das
lret
arpl
loope
push
adc
andb
xor
std
or
dec
mov
add
ljmp
mov
in
fsubrl
fs
xor
xchg
enter
push
inc
nop
punpcklwd
pushf
cmp
fadds
inc
adc
or
fwait
mov
cmp
cwtl
xchg
pop
mov
imul
pushf
adc
mov
xchg
pop
ret
push
clc
xlat
das
lcall
aad
testb
mov
jmp
aas
gs
sahf
aad
add
push
roll
mov
push
jl
mov
repz
and
sbb
mov
dec
cmp
fdivs
pushf
push
int3
and
repnz
sti
cmpsb
xchg
dec
push
push
subl
xchg
cmp
and
or
fstl
mov
push
dec
push
sbb
jle
push
jg
sbb
inc
dec
cmp
popf
dec
insb
test
in
or
nopl
fsubs
xor
mov
cld
jbe
push
pop
lcall
pop
add
add
dec
push
mov
mov
sbb
push
fsubl
hlt
cmp
xchg
add
es
lahf
and
scas
lahf
pop
and
orl
push
shr
gs
nop
xchg
fiadds
xchg
push
xor
mov
and
cli
ds
sti
js
sbb
fsubr
adc
sbb
dec
dec
adc
sub
aas
imul
bound
mov
push
add
jns
in
jo
mov
outsb
scas
push
mov
daa
cli
dec
and
ljmp
sbb
test
xor
dec
inc
int
sub
push
add
xchg
cmpsl
das
call
je
repnz
sub
xchg
fdivrl
pop
ds
dec
sbb
adc
pop
pop
lcall
mov
push
cmp
in
lea
mov
imul
aam
nop
fists
loop
popa
mov
cwtl
push
pushf
and
jno
push
mov
and
int
loopne
ficompl
xor
inc
lret
out
icebp
cmpsb
popa
cli
and
pop
testb
mov
dec
pop
pushf
cltd
inc
fildll
scas
outsl
pushf
jle
dec
popf
orb
aas
xchg
sbb
outsb
mov
dec
fwait
add
mov
stos
test
mov
xor
fadd
dec
ss
nop
add
outsl
inc
lcall
jne
imul
inc
pushf
and
jbe
cli
mov
outsl
iret
fisubrl
xor
mov
pop
pop
sbb
ja
cmp
xchg
in
cltd
dec
cmp
jns
xchg
inc
fidivs
pop
add
add
sub
and
stc
cwtl
mov
xchg
cltd
sti
xchg
mov
jl
adc
mov
cmp
cmp
enter
pusha
pop
sub
bound
idiv
xor
fstps
sbb
sbb
sbb
push
adc
adcl
sub
adc
js
xor
mov
adc
jne
dec
ja
push
pusha
testb
loop
push
xor
lock
insb
ds
iret
jl
ds
iret
jmp
fcoml
loop
sub
es
jg
lds
aam
inc
gs
inc
mov
imul
imul
out
rorb
das
add
stos
xor
outsl
adc
or
adc
fdivl
ret
repnz
dec
inc
loopne
pop
fmull
sub
jno
shrl
mov
dec
jnp
cmpb
xchg
pop
mov
addr16
scas
cmp
sub
or
or
sub
fcoml
in
mov
sbb
sti
int3
push
dec
xchg
sti
mov
xchg
push
pop
ret
xor
ljmp
jo
loop
mov
dec
add
mov
movsb
icebp
fistpll
out
inc
rorb
sti
sahf
loopne
pusha
aam
dec
mov
jae
iret
xchg
inc
les
sbb
or
rolb
fildl
pop
ja
or
scas
xchg
jo
xchg
xor
rcrl
lock
dec
sbb
sub
xchg
aam
pushl
sub
cwtl
popa
bnd
lcall
jbe
popa
and
ret
popf
adc
fldl
insb
test
fisubrl
sbb
cmpsb
xchg
roll
jl
das
or
or
nop
adc
adc
test
or
mov
xor
mov
lods
and
cmc
jnp
cmpsb
dec
out
ret
jns
mov
pop
push
nop
add
out
lahf
mov
add
je
cmp
subl
inc
mulb
lock
pop
mov
clc
dec
or
pop
cmp
add
pop
jnp
push
cmp
fs
inc
pop
pop
aad
jne
mov
add
adcl
stos
xchg
les
test
xchg
ja
jb
push
aad
add
jno
xor
jae
orl
adc
fstpl
mov
xor
notb
pop
sub
pop
int3
dec
xchg
jnp
outsl
test
mov
xchg
out
cmp
movsb
lret
pop
push
push
push
dec
mov
shlb
movsb
fdivs
pop
out
in
popa
lock
add
pop
jne
imul
mov
jnp
cmp
xor
push
mov
ds
test
daa
pop
xchg
push
jecxz
xor
pop
and
push
ja
inc
jb
cmpsb
sub
ljmp
ret
lock
lds
mov
stc
mov
outsb
cld
dec
xlat
clc
orb
adc
mov
push
lock
sbb
fmull
cmp
jle
loopne
ja
sbb
or
fsts
mov
sbb
fsubs
inc
into
jmp
lods
bound
inc
dec
sub
jl
or
add
gs
push
sub
sub
pop
push
push
leave
pop
stos
daa
test
add
mov
ret
push
xor
cltd
mov
lcall
loope
stos
or
jns
or
sahf
and
nop
xor
cs
mov
mov
cs
pop
sbb
xor
leave
sub
lds
xchg
mov
repnz
les
pop
call
xor
fwait
pop
stos
inc
sbb
enter
jns
mov
jne
ret
xchg
cmc
in
push
mov
push
xchg
jle
adc
mov
or
testl
mov
or
mov
sbb
add
xor
adc
frstor
out
adcb
xchg
filds
mov
sub
ljmp
cmp
jbe
add
cmpsl
sbb
jo
xlat
jnp,pt
push
test
test
les
jmp
aam
xchg
xor
add
pop
cmp
test
mov
jbe
push
xchg
cs
and
push
outsl
adc
cmp
jmp
ja
push
mov
push
stc
jns
jne
inc
lock
call
inc
mov
es
xor
nop
fwait
xorb
mov
nop
cli
inc
stos
mov
adc
out
cmc
mov
xchg
jnp
leave
jbe
in
or
mov
or
mov
add
clc
in
je
rorb
jecxz
add
lcall
xor
pop
mov
inc
lods
adc
cld
xchg
shll
popf
sarb
movsb
into
dec
test
jge
fyl2x
ja
xor
push
jo
leave
mov
mov
mov
mov
push
mov
push
jns
loope
and
loope
pop
cmp
inc
in
dec
lahf
rclw
jnp
mov
in
lock
pop
jo
adc
dec
push
mov
out
pop
subb
cmp
fnstsw
icebp
push
xor
mov
and
incl
cs
pop
fldenv
inc
mov
sahf
daa
movsl
mov
mov
jns
fbld
pop
lcall
jae
inc
add
mov
pop
cmp
xchg
dec
into
mov
js
ret
sarl
in
adc
adc
xor
pop
mov
cmp
cltd
aaa
pop
inc
les
cli
sbb
xchg
call
sub
pop
pop
push
cltd
jl
xchg
mov
es
xchg
fistpll
sbb
and
neg
sub
rcr
xor
int
cmpsl
jno
int
xchg
push
sub
jg
mov
aas
ficompl
rol
inc
or
dec
addr16
jle
fsts
push
add
lret
mov
test
popa
loopne
cmpsb
mov
test
or
movsb
pop
xor
push
push
jns
sbb
sub
mov
movsb
test
das
fcmovnb
jo
mov
xor
ljmp
jbe
inc
jae
dec
xchg
mov
push
mov
xor
in
cmc
cld
dec
rorb
lret
push
mov
jbe
loopne
cmp
rcrb
outsl
fiaddl
call
ljmp
sub
mov
mov
mov
outsb
cmpsl
xor
and
shr
push
or
adc
sbb
lock
aad
fxch
ffreep
and
stc
cmc
movsb
in
andb
shrl
les
mov
loopne
fisttps
jae
xor
xchg
das
jecxz
push
pop
cmp
stc
push
dec
ret
and
cmp
mov
xchg
sbb
adc
xchg
cs
add
jp
fcomps
jmp
xchg
loope
and
push
add
mov
popa
dec
sub
ja
pop
cmpsb
lret
pushf
dec
mov
lret
cwtl
std
mov
sub
insb
lahf
jae
mov
jo
ret
or
ret
jecxz
xchg
mov
es
out
mov
loopne
xor
xor
lea
inc
pop
enter
cmc
sub
clc
sti
sbb
cmp
mov
lret
mov
pop
push
or
lahf
push
enter
mov
ret
fisubl
push
sti
add
xlat
push
movsb
ret
fstps
es
push
jnp
repz
out
pop
cmp
sarl
andl
add
mov
jbe
mov
test
aaa
cli
push
lcall
cli
pop
adc
in
pop
or
lods
and
lock
lahf
dec
mov
lods
mov
cmpsl
dec
sub
push
sub
inc
pop
lcall
icebp
js
dec
sarb
jmp
xor
mov
jno
pop
pop
mov
inc
adc
flds
dec
aad
stos
imul
cmp
cltd
filds
filds
cmp
fs
icebp
xor
jne
call
sbb
das
icebp
fmulp
mov
mulps
and
mov
ficomps
cmp
repnz
dec
jno
mov
mov
shr
nop
movsl
lods
mov
fdivl
imul
push
insl
ret
fcmovu
iret
adc
mov
add
inc
scas
pop
sub
jmp
xor
and
add
cmp
mov
pop
ja
arpl
and
xor
jbe
dec
jg
push
stos
sub
shlb
push
sub
pop
xor
shrb
call
ljmp
pop
inc
hlt
jmp
gs
or
mov
pop
jbe
ret
cmpb
mov
and
cmp
inc
xchg
xchg
out
lahf
jo
push
pop
fdivrs
push
and
js
sub
jbe
push
inc
sbb
inc
push
add
cmpsb
inc
sbb
leave
insb
xorl
add
int3
js
add
push
cmpsb
adc
fnstcw
in
mov
mov
ja
call
adc
movsb
push
lds
pushw
xchg
insl
negl
mov
mov
outsb
jg
inc
iret
test
sub
mov
inc
inc
sarl
imul
add
push
inc
dec
pop
push
addr16
push
sub
cmpsb
xchg
mov
cmpsb
mov
ja
sub
mov
mov
aad
pop
xor
add
scas
hlt
cli
leave
mov
mov
cld
jnp
fbld
and
push
add
xlat
cmpsl
jg
adc
into
xchg
jae
loop
cs
inc
push
jb
mov
inc
pop
inc
ja
repz
mov
jne
push
ficoms
stos
pusha
das
lret
arpl
ja
xchg
lahf
fucomp
sbb
cmp
popf
adc
and
andl
aaa
mov
inc
inc
mov
arpl
scas
sub
xchg
mov
cmp
insl
scas
in
inc
or
sub
pinsrw
ss
lahf
ffreep
lret
mov
or
jnp
mov
arpl
add
popf
mov
stc
es
sub
pop
inc
push
xor
movsb
incl
or
pop
and
test
adc
fidivl
int3
sti
cmp
or
pop
faddp
scas
sub
or
dec
jnp,pn
scas
mov
jp
push
sti
stos
insb
and
and
adc
adc
adc
mov
stc
or
mov
jmp
and
mov
int
fbld
mov
sbb
testl
sbb
or
mov
sub
jp
in
lods
push
rcr
xorb
adc
and
dec
test
icebp
insl
xchg
push
and
pop
sbb
xchg
adc
xchg
mov
pop
lret
pop
es
rorl
sarl
mov
dec
or
xchg
xchg
sbb
pop
xor
sti
cld
jb
lret
in
push
pop
mov
dec
sbbb
bound
movsl
cs
jae
cli
add
jnp
ja
inc
ret
xchg
inc
inc
jmp
push
js
inc
cmp
mov
pop
imul
movsl
loope
cs
ja
movsb
lods
inc
inc
mov
movsb
outsb
aam
cltd
jne
push
or
cmp
jbe
xchg
mov
and
xchg
cs
jp
icebp
xor
mov
scas
push
fstp
sub
ljmp
inc
iret
mov
mov
pop
lock
imul
jmp
popa
loopne
sti
sub
testb
lcall
dec
je
into
cmpsb
in
xor
lods
pop
cmpsl
imul
cmp
cltd
int3
xchg
gs
push
jns
call
jp
xchg
add
rcl
sbb
addr16
inc
aas
enter
sub
xchg
outsl
inc
xchg
dec
fnstsw
ljmp
sbb
rolb
add
stos
cli
sbb
cmp
sub
cmp
pop
and
push
rorl
jbe
cld
ds
fld
dec
mov
mov
dec
lock
stc
pop
mov
jb
pop
and
jnp
idivl
adc
sbb
xor
sbb
push
call
adc
cmp
fnstsw
inc
ret
aam
test
test
push
mov
jno,pt
pop
push
xor
jo
push
mov
xchg
sub
rorl
mov
or
fbld
push
int
es
out
lcall
mov
mov
inc
push
push
insl
loop
mov
test
mov
push
aaa
jbe
arpl
add
adc
lds
pusha
or
mov
jnp
or
xor
inc
inc
enter
cli
push
jbe
mov
call
and
push
xchg
insb
in
adcb
gs
adc
clc
lahf
repz
xor
jmp
sub
out
scas
fwait
insl
inc
out
movsl
pop
fwait
mov
ljmp
int3
pop
and
and
lea
mov
movsl
jl
lock
xchg
or
imul
movsl
dec
mov
add
aas
idivl
aad
xor
cmpsb
push
sbb
pushf
in
lret
adc
adc
pusha
push
btcl
add
or
adc
aad
pop
fs
sub
bswap
inc
push
sub
and
push
je
mov
xchg
popa
insb
or
call
sub
pop
mov
pop
mov
popf
cs
cmp
inc
push
mov
and
loop
push
inc
push
aam
cld
or
mov
dec
imul
xor
sbb
inc
rorb
out
pop
xchg
mov
in
or
mov
in
mov
into
imul
bound
mov
ss
repz
ret
cmp
scas
test
sbb
fidivrs
and
movsl
aad
pop
push
mov
aaa
mov
xchg
sub
jge
dec
add
es
and
pop
sbb
and
xchg
xchg
add
out
xchg
fimull
xor
cmpl
pop
adc
xchg
out
fwait
xchg
jne
out
enter
push
pop
pop
cltd
lods
push
cmp
jo
std
jp
jns
adc
in
insb
gs
iret
jne
add
fiaddl
mov
inc
jp
movsl
mov
inc
mov
jle
lods
sub
gs
mov
sub
cwtl
or
movsb
mov
mov
std
insl
inc
add
cs
mov
scas
shr
daa
sbb
pop
insb
in
das
sub
lahf
and
cmc
sub
repz
cli
addb
fcmovb
mov
jecxz
sarl
popf
xlat
xchg
cmp
out
sbb
dec
lret
ret
and
dec
push
push
cmpsb
dec
and
xchg
in
fucomi
mov
nop
pop
shr
or
in
mov
lret
das
int3
cmp
push
inc
lods
jge
push
xlat
lcall
icebp
xchg
push
sub
out
std
or
lret
lret
fsubr
mov
add
xor
sub
shrb
sub
pusha
jmp
or
add
stc
mov
bound
xchg
xor
mov
fldcw
in
pushf
shll
repnz
pop
pop
sub
cli
add
cli
cmpl
sbb
repnz
inc
test
js
inc
or
icebp
push
loop
in
aaa
cmpsb
fbstp
xor
xchg
mov
loope
mov
sub
in
jae
fildll
lcall
and
mov
pop
mov
xchg
fistpl
imul
sub
mov
outsb
icebp
sti
call
arpl
or
mov
ljmp
adc
fiadds
jno
pusha
jmp
adc
push
data16
mov
mov
fsubs
cmp
aam
cmp
pop
lahf
mov
rcrb
adc
lods
dec
fistps
sahf
adc
xor
fwait
sahf
xlat
aam
dec
sub
mov
fadd
lret
or
orb
enter
test
mov
mov
and
adc
lods
xor
mov
into
push
or
adc
loop
pushf
ds
mov
mov
inc
cwtl
jns
cmpsl
or
mov
xchg
rcll
loope
adc
idiv
pop
mov
cmp
pop
gs
js
inc
push
stos
push
sub
movsl
scas
pusha
scas
pop
fwait
mov
rolb
xor
sbb
lcall
pop
lret
or
cld
sub
and
jo
xchg
pop
jns
cwtl
loop
repnz
mov
add
call
push
and
sbbl
jg
lret
orl
xor
push
or
jno
mov
std
adc
call
inc
and
adc
xchg
scas
xor
aad
loope
dec
mov
ljmp
jp
inc
dec
jo
mov
push
mov
and
ret
loopne
mov
inc
lea
movsl
repnz
or
inc
pop
dec
mov
cld
xchg
cltd
sbb
jl
stos
and
roll
sbb
jg
xchg
negb
test
mov
dec
mov
mov
adc
xlat
fcmovnb
or
daa
and
push
mov
push
push
not
cmp
or
popa
mov
cmc
dec
ja
xchg
xor
jb
call
xchg
addl
cltd
dec
mov
xor
adc
out
mov
ficompl
movb
sbb
dec
pop
idivl
iret
pop
mov
dec
inc
decb
jb
dec
or
dec
xor
cmpb
ljmp
outsb
xchg
push
mov
fucomip
cmpsb
ficomps
push
or
imul
out
inc
nop
sahf
out
je
insl
adcb
nop
xchg
js
lcall
inc
out
sti
mov
sub
cmc
push
dec
adc
sub
cs
inc
dec
aaa
xchg
xlat
test
loope
mov
jecxz
loope
push
xor
mov
mov
mov
cld
cltd
sbb
mov
aam
insb
cli
sbb
fwait
dec
test
mov
lods
adc
rcll
sbb
sbb
xor
cs
jmp
enter
jge
push
fsts
sahf
icebp
pop
outsb
jbe
pushl
xor
push
test
mov
in
sarl
daa
loop
stc
adc
test
and
and
stc
push
cmp
shl
repnz
aas
push
adc
mov
lock
imul
jbe
push
inc
mov
lcall
add
inc
bound
stos
inc
repnz
jne
mov
mov
mov
mov
pop
cmp
pop
pop
pop
jge
push
xchg
xor
jo
icebp
sbb
jae
ds
addr16
repnz
mov
or
ss
cmpsl
aad
jp
pusha
ret
mov
and
stos
jmp
dec
xor
jo
cmp
xchg
sub
sub
cmp
xchg
add
jmp
nop
lock
sbbb
jl
stos
lret
mov
mov
push
movl
fimull
loope
sbb
and
push
push
out
add
add
jns
nop
pop
in
or
stc
addr16
fadd
xchg
jmp
sub
lcall
sbb
push
shll
sbb
dec
dec
in
or
cmp
xor
call
pop
fdivrs
jno
jbe
lret
ffreep
push
lcall
sbb
push
sbb
mov
push
movsl
mov
or
sub
mov
gs
ss
lods
movsb
push
ret
shlb
mov
dec
aam
add
ret
xchg
scas
and
adc
and
outsb
jmp
or
cmpsl
push
cld
enter
push
clc
out
sbb
adc
ljmp
push
jae
out
jbe
and
enter
push
sub
jnp
mov
addr16
or
add
jne
es
xor
add
xchg
cld
leave
in
cmp
rolb
scas
dec
pop
add
repnz
cld
lret
xchg
sbb
push
lea
and
inc
inc
or
loope
nop
mov
imul
xchg
lds
test
jb
push
mov
lret
imul
mov
lods
jp
push
adc
out
xlat
add
dec
push
mov
movsl
add
out
push
jae
out
pop
add
add
aaa
mov
neg
test
lret
pushf
call
mov
jmp
jmp
mov
sbb
jmp
mov
pop
cmp
fsubrl
add
jle
je
jns
mov
dec
mov
in
int3
xlat
pop
rcll
sub
in
inc
lret
push
hlt
and
lret
xor
out
mov
push
movhlps
add
adc
xor
iret
adcl
in
cmp
stos
mov
push
mov
cmp
nop
ffree
sbb
enter
xchg
xchg
aad
mov
dec
jno
mov
shr
sub
pop
cli
cmp
and
shlb
xchg
dec
scas
add
mov
paddb
mov
imul
shl
cmp
outsb
test
inc
sbb
scas
push
sub
xchg
cld
movsb
mov
xchg
lds
xchg
dec
sub
aam
filds
pop
xor
addr16
fimull
push
aas
push
fstp
pushf
pop
scas
insb
inc
int3
inc
div
jge
push
repz
mov
rcll
das
jb
icebp
ja
or
sbb
xorb
jmp
adc
jo
sti
xchg
cmp
iret
inc
xchg
rclb
cmpsl
cmp
sbb
xor
imul
test
scas
pop
adc
rcrl
lahf
fstpl
sti
insb
js
jb
sbb
stos
arpl
lds
mov
xchg
in
xor
jae
ss
clc
lea
pop
dec
dec
push
int3
loope
or
dec
adc
and
gs
sub
ss
sbb
or
fistpll
ret
fwait
push
bound
out
add
cmpsl
std
mov
int3
or
mov
std
sbb
dec
shrb
inc
rolb
cmpsb
push
pop
add
xchg
lcall
sti
mov
jmp
push
ret
pop
popl
dec
pop
xorb
pop
cmp
stc
mov
pop
aaa
rcr
jle
lcall
dec
jo
mov
pop
cmpsb
outsb
or
push
push
push
in
mov
mov
into
cmpb
movsl
out
loop
fisubrl
mov
dec
lret
cs
mov
scas
pop
dec
fs
mov
mov
insb
cld
mov
repnz
loop
add
dec
pop
adc
or
jmp
push
in
bound
shll
cmp
push
mov
ss
xor
push
sahf
les
jo
outsb
cwtl
scas
cmp
jp
adc
popf
adc
pop
xchg
shrl
cwtl
pop
clc
jg
movb
inc
dec
andb
call
and
fimull
je
icebp
push
out
jo
and
xchg
cli
fildll
stos
popa
adc
mov
jnp
xchg
jb
jl
and
push
and
or
xor
or
and
jge
pop
mov
mov
or
cmp
imul
or
pop
jae
sbb
push
mov
sbb
in
cltd
pop
cmc
and
shlb
push
je
adc
or
or
test
mov
lahf
scas
js
dec
add
ret
insb
cli
lret
push
fisubl
jecxz
sbb
mov
mov
js
xlat
pop
mov
add
pop
test
fcomps
jl
dec
movsl
mov
and
and
xor
negb
int
stc
pop
add
daa
jno
scas
cmpsl
cwtl
in
xchg
adc
pop
or
shll
in
jge
xor
pop
dec
xor
fnsave
or
push
lock
cwtl
enter
out
jns
add
insb
xchg
ret
xchg
data16
push
dec
loopne
decl
ret
ret
jecxz
imulw
inc
outsl
sub
cmp
or
and
jo
in
cli
mov
and
sub
bound
in
adc
xchg
mov
int
int3
gs
mov
dec
jle
out
aas
jmp
faddl
in
cld
pushf
sahf
and
sub
push
clc
adc
push
aas
test
repz
das
std
mov
inc
out
push
fnstcw
cmpsl
std
jecxz
insl
sub
lds
xchg
mulb
xor
mov
pop
push
xchg
ret
jbe
lahf
dec
or
mov
jl
or
shrl
insb
ss
sti
out
jne
pop
loop
mov
ljmp
fidivl
cmp
sbb
mov
cld
es
ljmp
imul
mov
inc
mov
inc
hlt
mov
jmp
dec
js
shl
fsubrs
inc
push
sub
inc
jbe
inc
movsb
into
pop
in
sub
ja
incl
frstor
icebp
in
fldcw
mov
dec
mov
or
pop
les
out
push
and
jb
in
or
cs
inc
loopne
mov
mov
cmc
cmpsl
xchg
std
adc
cltd
xlat
pop
ja
fstl
scas
jmp
jmp
xchg
adc
iret
mov
bound
cmpsb
mov
mov
js
mov
sub
sbb
xor
inc
mov
push
xor
adc
lahf
idivl
mov
cld
ret
and
add
cwtl
in
mov
icebp
testb
rcll
and
mov
mov
jno
xor
pop
lret
cli
jb
fadd
gs
popf
mov
mov
mov
cs
pop
jle
gs
stos
xor
mov
dec
inc
imul
push
adc
jno
scas
xchg
sub
mov
push
push
ficomps
xchg
adc
cmpl
mov
lods
lock
mov
or
orb
bound
sarl
call
pop
or
jns
push
iret
in
push
lods
xchg
sbb
jb
scas
xor
pop
cmp
or
pushf
jl
aas
xor
jae
and
in
cmp
xor
lock
sbb
scas
nop
mov
dec
jb
inc
sahf
or
xor
adc
adc
std
movsl
js
call
pop
ss
sub
mov
movsl
popf
shll
cmp
dec
adc
pop
inc
jns
xchg
test
ficoml
lock
dec
adc
icebp
sub
dec
rcrb
sub
sbb
lock
mov
neg
pop
pop
imul
sub
mov
mov
jne
xchg
mov
testb
orl
push
dec
gs
lds
xor
in
insb
ret
ljmp
sub
mov
mov
push
cli
mov
sub
rcrb
loope
out
test
pusha
add
lods
push
sub
inc
pusha
daa
cwtl
add
add
stos
insl
push
sub
iret
loopne
test
jno
xchg
or
jle
pusha
pop
mov
push
sub
jle
dec
lahf
xchg
xor
sub
imul
mov
cmp
movsb
pop
fisttpl
mov
scas
push
jae
push
jl
mov
cltd
int3
inc
push
lods
add
fmul
xor
xchg
push
dec
jge
fwait
cld
div
dec
add
push
je
dec
pop
insl
inc
mov
shlb
je
cmp
out
nop
jne
cmp
jb
cmpsb
mov
or
mov
arpl
mov
roll
sbb
jecxz
push
mov
and
repnz
lahf
or
pop
mov
insb
xorl
test
adc
jb
shll
xor
xor
inc
xchg
push
sbb
or
sbb
out
pop
mov
jne
mov
lea
addb
inc
sub
movsb
lds
mov
ds
mov
mov
mov
cmp
pop
aaa
xchg
mov
jmp
sub
movsb
sbb
jecxz
decl
push
insl
test
mov
testl
bound
xchg
out
xchg
in
pop
jns
mov
jmp
les
lds
notb
das
inc
rcr
and
addr16
jmp
or
cs
lods
in
pop
aaa
mov
sub
daa
loope
jbe
and
or
or
outsb
clc
lret
xchg
xchg
jno
mov
xorl
sub
scas
stos
xchg
aaa
sbb
xor
sub
movsb
cmpsl
mov
inc
fisubl
mov
or
rdtsc
cmp
sub
out
sahf
insl
push
inc
push
cs
pop
mov
je
xchg
test
pop
add
mov
icebp
stos
add
push
xchg
jno
dec
imul
not
push
sti
aad
inc
sub
or
xor
push
js
add
xchg
jb
jl
mov
pushf
data16
ret
mov
and
dec
and
or
or
icebp
stos
ret
push
jg
or
clc
mov
daa
mov
add
rcl
jl
xchg
mov
sbb
or
aas
std
pop
pop
mov
fsubrl
cmp
in
sub
mov
dec
xlat
mov
sbb
lods
cli
mov
aas
cmpsl
in
stc
aas
pushf
inc
mov
mov
or
inc
pop
ret
rcr
aam
or
xor
mov
cwtl
xor
and
out
test
iret
stos
jno
sub
sbb
testl
mov
je
les
iret
scas
movsb
hlt
jb
sbb
add
aaa
inc
lahf
add
adc
dec
fnsave
orb
push
mov
dec
icebp
xchg
pop
and
push
fs
test
mov
movl
sub
daa
lahf
shrl
fsts
movsl
mov
hlt
push
sub
adc
mov
std
xchg
mov
sub
jge
loopne
sub
cmp
imul
repz
push
and
int3
jo
dec
cwtl
and
inc
ljmp
xchg
push
and
popa
xchg
lock
add
sub
enter
ja
dec
and
add
jg
es
push
scas
xchg
pop
cwtl
int
and
loopne
test
mov
xor
std
push
pop
sbbb
pop
hlt
das
and
in
push
lcall
xchg
xlat
enter
xchg
in
test
rcr
pop
inc
xchg
jle
mov
and
adc
clc
mov
pop
adc
lods
imull
fidivl
xchg
test
mov
mov
sub
dec
stos
mov
int
jecxz
push
pop
sub
adc
pop
daa
pop
cmp
mov
jg
aam
xchg
sahf
outsl
repnz
xchg
fcom
sbb
jno
mov
push
pop
ror
loop
dec
jle
mov
cmp
jg
jmp
sub
mov
in
push
dec
xchg
push
rolb
pop
and
fisttps
xlat
xchg
push
or
aam
pop
jmp
sub
sbbl
add
mov
orl
test
mov
into
fs
incb
sub
or
repnz
sbb
cmc
push
mov
cmp
cmp
xor
sub
mov
pop
sbb
cli
jns
pop
out
addr16
push
icebp
mov
xchg
inc
in
cmp
arpl
shll
rep
push
cmp
xchg
fwait
jge
cwtl
inc
pop
jno
adc
xchg
rcrl
je
rcrl
sub
sbb
mov
sbb
sbb
test
mov
fbld
cmp
mov
and
fbstp
cbtw
lahf
cmp
push
scas
mov
cltd
dec
repz
inc
add
xor
xchg
sub
dec
enter
and
out
pop
mov
push
cli
or
loope
out
cmpb
es
sbb
insl
xchg
fsubl
cmpsl
stc
ret
xchg
cmpsb
sub
xchg
xlat
shlb
cs
in
movsl
subb
push
gs
insl
sub
mov
test
xchg
ljmp
fwait
mov
xchg
and
xor
cmp
pop
xchg
icebp
gs
sbb
xadd
pop
fbstp
jmp
pop
sbb
push
pop
dec
daa
jecxz
push
jns
scas
mov
aam
xchg
imul
int
hlt
dec
jl
jnp
test
pop
dec
jno
adc
or
jmp
inc
mov
fsts
ja
pop
adc
xchg
idivb
ret
push
inc
dec
xor
sub
sbb
enter
pop
inc
dec
mull
xor
sub
sbb
clc
push
ljmp
cmc
adc
or
es
dec
lods
jge
sti
js
lea
mov
dec
push
and
aaa
notb
pop
xchg
fnstcw
jne
pop
sbb
arpl
fsubrl
into
int
fmul
scas
xorl
lock
and
les
lods
sbb
mov
aaa
outsb
cmpl
jne
jb
pushl
push
ret
dec
cld
or
addr16
and
xchg
and
aaa
jnp
mov
adc
js
mov
test
pop
lcall
out
mov
cli
pop
cmpsl
sub
popa
leave
into
mov
dec
inc
repz
xchg
adc
ret
jne
mov
pop
repnz
lcall
cmp
add
out
stos
add
aad
jnp
xchg
stc
js
push
mov
xchg
adc
mov
mov
push
ds
xor
and
hlt
mov
rcl
jp
imul
pushf
cmp
or
stc
xchg
fistps
scas
sub
movsb
ss
jmp
add
in
or
loopne
and
mov
push
xchg
mov
dec
dec
sbb
inc
xor
cmpsb
std
cmp
push
pop
pop
pop
ficompl
mov
xrelease
inc
ja
xadd
lds
xorl
mov
popf
inc
ljmp
lock
cmpsb
testb
xor
pusha
mov
ja
shlb
push
push
pop
test
fsub
lret
fistps
movsl
jno
add
mov
das
into
pop
mov
mov
rcr
enter
pop
sbb
test
xor
inc
inc
shl
or
push
mov
lret
movsl
dec
popl
lahf
sbb
adc
incb
jg
cmp
gs
cmp
jp
stc
lret
test
dec
loop
xor
stos
dec
sub
adc
mov
xchg
femms
popa
and
leave
ret
rcr
push
icebp
jp
rcrb
jno
dec
mov
xchg
lret
leave
push
cmp
jmp
cmp
cmp
pop
ficomps
push
je
xor
lcall
xchg
add
std
insl
out
movsb
std
inc
sub
push
lahf
mov
cmp
push
pop
mov
or
cmp
imulb
mov
mov
in
jecxz
sbb
sub
jp
sbb
insb
add
fs
jae
dec
out
fdivs
insb
scas
xchg
inc
pusha
rcrl
xor
cmp
push
std
fdiv
das
cmc
adc
sub
inc
push
add
mov
jb
out
sbb
pop
mov
cmpsl
and
inc
call
mov
or
test
push
xlat
cmp
out
in
mov
sbb
mov
mov
adc
push
stc
adc
xchg
test
adc
test
nop
dec
mov
ja
dec
mov
pop
cwtl
rcrb
sti
dec
add
sub
add
testb
imul
out
mov
stc
insl
sti
jns
pop
rol
xchg
push
mov
push
gs
cmp
or
cmp
pop
jp
adc
cs
or
add
repnz
cmc
push
ret
lret
out
add
or
xor
add
repnz
insb
jae
inc
sub
inc
stos
xchg
add
sbb
das
add
mov
sbb
stc
inc
sbb
repz
pop
jo
in
and
xorl
popa
jne
mov
dec
mov
lahf
or
dec
inc
repz
sub
mov
push
repnz
xchg
or
ds
rolb
lods
add
std
or
daa
les
out
orb
pusha
sub
and
lods
imul
pop
xchg
lods
inc
or
outsl
fidivrs
int3
sub
jg
mov
repnz
push
ret
cmp
rorl
aad
inc
fcmovnb
andl
sahf
and
push
movsl
cmc
inc
bound
data16
lahf
pop
adc
js
loopne
push
test
int
cld
aas
push
xchg
rcll
outsb
repnz
popf
mov
pusha
inc
adc
sbb
sahf
add
js
jnp
mov
cmp
imul
cmp
pop
adc
jge
xchg
push
sub
incl
jns
in
stos
jge
jge
cmpsl
dec
mov
aad
popf
clc
aad
aaa
negl
fnstcw
movb
xchg
into
mov
xor
lcall
dec
sbb
mov
jg
mov
insb
adc
lods
pop
imul
repz
and
and
or
jb
lods
jns
push
data16
add
xchg
shll
dec
push
lret
xchg
pop
es
jle
popf
div
mov
inc
and
sbb
jmp
out
push
adc
sub
fisttpll
xchg
cwtl
ja
mov
mov
loopne
jge
iret
xchg
mov
popa
cmp
jge
mov
cmpsb
pop
sbb
loope
xchg
cld
clc
andl
pop
adc
out
lea
push
popfw
fdivrs
outsb
xor
push
push
mov
inc
dec
mov
pop
fmull
out
xchg
scas
fcmovne
loop
jl
mov
std
push
cmp
rcrl
es
xchg
dec
mov
repnz
pop
iret
mov
add
lods
pop
ficompl
insb
sub
add
fdivs
in
mov
pusha
out
pop
movsb
insb
aaa
sbb
mov
cmp
das
add
ja
jle
repz
cli
shrb
orb
fucomi
dec
inc
jle
dec
pop
mov
mov
rcrb
ss
and
cmp
je
fisttpll
adc
cmp
push
xor
sbb
cmpb
lcall
xchg
inc
and
rorb
lahf
inc
inc
jne
leave
das
inc
xorb
inc
hlt
inc
arpl
or
sub
dec
ret
mov
mov
or
repnz
inc
call
mov
mov
je
mov
pop
jae
xchg
mov
push
push
ljmp
xchg
test
stc
mov
push
mull
ucomiss
add
cmpsl
dec
out
icebp
and
pop
add
jo
mov
mov
in
shlb
loopne
movsb
into
nop
mov
jnp
jbe
jmp
stos
xor
cmp
aas
mov
and
cmp
leave
pushf
out
push
ret
xor
xchg
push
jo
in
ret
ret
and
mov
dec
mov
mov
insl
inc
xor
cmp
ret
xlat
hlt
cmp
push
xor
inc
cmp
xor
adc
mov
sbb
lret
loopne
pop
into
adc
outsl
add
js
pop
mov
mov
icebp
movsb
inc
pop
addb
cli
sub
push
add
cmpsl
scas
scas
pusha
sub
icebp
bound
mov
mov
call
test
stos
adc
xor
add
icebp
inc
xchg
jne
jg
inc
insl
test
scas
out
stc
icebp
mov
sbb
inc
rol
es
pop
mov
mov
in
mov
push
mov
pop
lret
push
and
xchg
shlb
mov
dec
jne
push
jg
xchg
dec
push
rorl
js
aad
jl
fdivl
out
mov
adcb
jecxz
popa
push
sub
pop
cmp
jns
loopne
adc
rorl
fimuls
test
subb
mov
jg
and
shl
add
outsl
dec
out
dec
or
rcl
pop
fcoms
mov
and
xchg
popf
inc
lock
xchg
and
push
add
sub
sbb
outsl
int3
jg
mov
xchg
adc
and
aas
in
mov
out
pop
cmp
test
sbb
nop
imul
mov
mov
xchg
inc
jb
pop
int3
inc
push
ljmp
ficompl
stos
div
adc
adc
shl
icebp
fdivr
enter
mov
jo
add
cwtl
sbb
jnp
adc
jp
mov
pop
adc
sbb
and
mov
dec
jno
push
insb
je
pop
xchg
xchg
or
xchg
aam
xchg
mov
leave
push
add
dec
cmc
mov
je
sub
sub
loop
insb
push
lods
push
js
push
or
and
aad
jns
cmpsl
mov
push
hlt
mov
pop
xorl
outsb
sbb
sub
ljmp
xchg
pop
mov
cmpsl
mov
cmp
mov
aas
in
test
mov
cmp
mov
sahf
aaa
pop
mov
mov
dec
ljmp
ss
shl
sahf
ljmp
add
and
inc
ficoml
aad
push
mov
jne
data16
daa
incl
int3
mov
subb
adc
pop
in
jle
inc
test
inc
pop
fists
add
sbb
or
loope
outsl
mov
shl
movsb
arpl
pop
ficoms
xor
fwait
ss
mov
cwtl
pop
out
push
mov
out
and
imul
jp
imulb
sbb
adc
dec
int3
adc
and
dec
movsb
xor
mov
shl
test
ret
pop
shlb
repz
repz
ss
xor
fdivr
sbb
div
sub
pop
out
xchg
or
push
or
sbb
push
loope
xor
mov
push
inc
imul
insb
sub
rcrb
xor
jns
rolb
or
fsubrl
jo
mov
idivb
pop
mov
sbbb
jmp
popa
and
jno
sbb
aam
js
pop
or
lock
sahf
fildl
pop
add
andl
add
mov
and
leave
jle
int
fadds
ss
cltd
adc
dec
jnp
inc
xor
xchg
out
add
ds
or
pop
cmp
push
xchg
movsb
mov
xchg
ds
shlb
push
test
or
jnp
rcll
mov
gs
mov
cmc
or
sub
sbb
aam
jno
ucomiss
ljmp
dec
adc
test
and
xchg
popf
addr16
mov
xchg
shrb
test
es
mov
or
mov
stos
and
pop
or
jbe
mov
push
fdivp
insb
add
mov
repnz
push
in
cld
jns
test
push
outsb
fadd
popf
inc
aad
cs
push
test
jecxz
ret
aaa
sub
xorb
or
dec
fwait
xlat
mov
adc
popf
add
inc
or
mov
inc
cmp
aas
and
fsubs
into
rcrl
shlb
dec
or
imul
jp
sti
jnp
das
das
lret
outsb
fsub
lock
cmp
dec
sbb
and
in
and
dec
xor
sub
xchg
mov
iret
jg
cmp
jnp
dec
fcom
mov
repz
and
lcall
dec
sbb
lret
or
jnp
mov
outsl
pop
jbe
sahf
out
stos
mov
cld
adc
inc
cwtl
xchg
imul
imul
fucomip
xchg
nop
aad
pusha
lods
xlat
jle
push
stc
fsubl
cltd
inc
lock
roll
sbb
icebp
add
ljmp
leave
jns
and
popf
imul
out
jmp
ret
inc
addr16
call
aam
pop
add
mov
jg
rcl
mov
xchg
and
lret
insb
test
add
shrb
fbstp
sarl
xor
push
sub
mov
cs
js
and
inc
data16
jnp
push
cmp
mov
xchg
popa
fs
fcompl
adc
rolb
mov
fisubl
xchg
cwtl
stc
sub
shrl
add
inc
add
or
ja
add
repnz
and
es
push
push
gs
jbe
cmpsb
push
out
jno
xor
inc
dec
mov
subl
add
dec
dec
mov
pusha
stos
bound
or
pusha
loop
repz
mov
sub
jnp
push
mov
pop
popf
mov
push
adc
ss
clc
lds
imul
dec
mov
filds
outsl
movsb
enter
pop
mov
movsl
jp
test
mov
pop
mov
cmp
push
mov
lds
or
pop
inc
sub
test
insb
mov
or
mov
and
mov
orl
mov
or
mov
mov
push
stos
xchg
mov
fldcw
jmp
jge
pop
daa
adc
sti
addl
mov
inc
or
lret
scas
shlb
or
inc
xchg
xchg
insb
lahf
out
scas
lret
mov
shlb
sbb
mov
sahf
sub
js
sub
xor
xlat
push
in
repnz
in
mov
inc
add
insl
fcmovnb
clc
fwait
imul
fmuls
jle
jg
fsubrl
sbb
rorl
push
xchg
outsb
fiaddl
dec
pop
dec
jae
inc
dec
mov
daa
fdivrs
out
jne
dec
push
xor
stos
lods
inc
sbb
aaa
leave
adc
ljmp
sbb
shr
enter
xor
mov
in
popa
add
pop
lcall
testb
xchg
xchg
std
aam
push
jbe
addr16
xor
pop
add
jecxz
sbb
dec
add
icebp
movsb
mov
lret
cmc
aaa
xor
aam
pop
rorl
rorb
xlat
out
out
fisttpl
sti
lods
ljmp
cmp
inc
pop
push
scas
adc
xorb
inc
adc
fwait
jg
popf
xchg
sub
mov
add
xor
dec
fisttps
call
aaa
cmpsb
sbb
add
sub
nop
frstor
sub
test
lods
loop
push
adc
andb
mov
mov
push
inc
cmpl
adc
test
cmp
push
das
sbb
sub
mov
lcall
loopne
adc
dec
test
fs
imul
push
jg
std
mov
xlat
push
pop
popa
dec
dec
adc
add
and
xchg
cmpsb
dec
sahf
fnstsw
dec
xchg
imul
adc
int
inc
jle
jbe
subl
in
out
xor
jne
lock
loop
xchg
out
xor
push
ret
dec
cmpsb
dec
xor
dec
ret
mov
add
mov
jo
call
xor
mov
sub
add
lock
inc
movsl
icebp
and
insl
ficoml
push
pushf
xor
in
push
jne
jg
sbb
mov
imull
mov
mov
mov
jmp
mov
push
insl
xor
xlat
insl
cmpsb
jnp
xchg
and
fadd
shrl
repnz
and
lahf
in
push
filds
aas
mov
add
testb
hlt
or
faddl
push
jge
pop
sbb
mov
add
lret
xor
mov
dec
xor
out
leave
clc
shlb
xchg
and
mov
jg
icebp
sbb
test
cmc
or
sbb
xor
jns
roll
mov
or
mov
cld
ja
out
adc
dec
jne
addr16
and
imul
imul
mov
sbb
scas
in
imul
lds
add
mov
loop
pop
mov
ljmp
push
fdivrl
push
sub
mov
fists
inc
addr16
out
xchg
jmp
addl
inc
inc
insl
pop
sub
mov
adc
ret
lds
jecxz
cmp
mov
imul
mov
push
dec
dec
out
jmp
testl
pop
ret
sbb
cmc
xchg
mov
mov
fisttpll
imul
dec
decb
imul
lods
xchg
aaa
pop
int3
pop
add
lcall
subl
fbld
mov
and
outsl
enter
and
adc
push
or
add
sub
fcom
push
idivl
in
and
or
dec
lods
sub
jns
mov
repnz
mov
rep
push
push
mov
jns
dec
sbbl
xchg
idivl
sub
cwtl
jge
loopne
or
dec
mov
stos
out
ss
cmp
pop
lods
test
pop
mov
sbb
pop
or
mov
dec
and
movsb
push
cmpsl
in
scas
mov
pop
mov
push
jae
or
leave
mov
xorb
pop
cmpl
ljmp
jle
ja
jbe
les
insl
sti
std
aam
lret
jno
arpl
out
or
jo
cmp
loopne
insl
cs
inc
ret
imul
daa
or
sbb
jo
ret
scas
jbe
mov
sub
leave
xchg
sub
add
dec
xchg
lcall
xor
xchg
pop
and
push
ljmp
stc
dec
data16
add
repnz
mov
lea
data16
sub
xor
mov
movl
inc
loop
push
cmp
push
mov
lea
xchg
push
rorl
jns
dec
push
in
mov
js
pop
jmp
sub
mov
add
loopne
fldl
dec
push
xor
inc
repnz
repz
sbb
dec
pop
jo
es
enter
aas
add
stc
ljmp
pop
jmp
add
cmp
lcall
inc
in
adcb
prefetchwt1
test
cs
add
mov
jg
pop
xchg
pop
repz
lods
xlat
pop
sbb
mov
mov
addl
fldt
hlt
stos
les
mov
xor
movsb
mov
push
pop
js
fs
dec
push
mov
xor
xchg
stc
push
dec
pop
mov
test
sub
jmp
inc
mov
pop
push
and
insb
add
je
rcrb
mov
mov
mov
fsubp
popa
sti
fidivl
ljmp
and
lahf
inc
dec
jnp
pop
and
dec
ds
xchg
fistl
xchg
out
dec
aas
paddsw
add
pop
test
push
leave
mov
fs
or
fcmovnbe
imul
mov
arpl
jno
cmc
int
push
mov
pop
xchg
mov
inc
cwtl
xchg
adc
cli
cmp
pop
push
adc
mov
push
sbb
dec
outsb
cs
les
mov
sbb
and
jbe
jnp
bound
data16
jae
xchg
push
xchg
add
pop
mov
sbb
push
push
repz
nop
cmpsl
xorb
fcmovnb
mov
jle
mov
lock
and
lret
xor
or
subl
cmpsb
cmc
xchg
enter
sbb
or
es
and
pop
in
push
sbb
popa
inc
lret
pop
pushf
scas
sbb
mov
fwait
gs
mov
aam
movsb
cli
in
add
dec
add
call
xor
out
push
or
jle
jne
sub
fwait
loop
push
ror
adc
int
push
jmp
xchg
notl
movsl
fcoms
jp
push
call
inc
cltd
mov
clc
jae
mov
rcrl
lds
scas
jnp
xor
sbb
xchg
inc
push
aaa
pop
mov
jmp
movsl
fs
cmp
inc
in
lcall
lahf
xor
ret
or
inc
sub
lock
mov
clc
aad
or
pop
pop
inc
and
pop
dec
pop
ret
sti
xchg
sub
xlat
pop
xorb
sbb
sbb
inc
leave
out
movb
pop
loope
or
cmp
xchg
sahf
push
mov
stos
dec
negl
xchg
adcl
sbb
and
jne
std
xchg
fdivrs
fidivl
mov
cmpl
xchg
scas
imul
imul
das
js
iret
push
lods
inc
les
mov
xchg
sbb
mov
jbe
xlat
mov
shll
adc
and
xchg
jnp
enter
and
cmp
push
xchg
lret
scas
cmpsb
dec
leave
mov
test
dec
test
stos
icebp
add
aas
dec
mov
stos
jno
fisubl
gs
xchg
cltd
je
mov
adc
or
iret
pop
xor
shl
pop
cmpsb
lahf
pusha
pop
mov
aaa
and
shlb
fbld
sub
push
cltd
repnz
out
or
std
fstps
popa
xor
sbb
xchg
fcoml
cltd
adc
mov
addr16
in
dec
mov
fidivs
xor
jg
dec
dec
in
arpl
les
push
arpl
inc
pop
addb
insb
daa
inc
lods
dec
out
scas
fnstenv
sub
ficomps
or
jle
mov
inc
xor
fdiv
add
and
pop
push
lods
xor
or
jnp
into
iret
jnp
icebp
push
nop
dec
push
push
int3
int
shrl
movsl
stos
adcl
icebp
iret
and
es
test
sub
adc
jno
out
out
adcb
xchg
jb,pn
dec
cmpsl
fimuls
and
and
push
inc
pop
pop
add
pop
jecxz
mov
aam
pusha
or
cld
push
lods
mov
adc
sub
sarb
lods
cmp
icebp
xchg
cmp
test
stos
in
pop
mov
in
lods
mov
lods
rolb
outsb
adc
rcrb
mov
or
cmp
cmp
arpl
or
push
dec
cmp
nop
in
clc
mov
adc
movsl
jne
les
mov
int3
jb
push
sbb
dec
sub
or
gs
xchg
roll
jecxz
mov
sbb
adc
lock
stos
dec
push
jmp
fs
imul
call
pop
and
das
dec
pusha
xor
cmp
nop
push
scas
adc
sbb
push
jns
rcll
cmp
inc
push
pusha
cmp
ja
scas
imul
clc
dec
lret
dec
hlt
aaa
cmpsb
out
xor
adc
mov
ljmp
ret
out
mov
dec
in
mov
xchg
push
xchg
push
pop
mov
jb
dec
mov
mov
sahf
sub
pop
mov
adc
rcrb
cmp
cli
int3
movsl
pop
out
icebp
in
and
clc
jp
sub
jno
lds
movsl
mov
outsl
fldcw
stc
push
cmp
aaa
push
cltd
sahf
push
pop
pop
push
test
jae
dec
sbb
push
dec
pop
pop
jle
stc
mov
sbb
ds
es
sbb
xchg
loop
sbb
and
jo
sbb
lret
dec
rcrb
filds
cmpsb
mov
jge
jno
mov
xor
arpl
in
xchg
cmpsb
test
and
dec
hlt
out
inc
inc
insl
push
out
dec
int
fldcw
cmp
in
adc
call
les
xchg
cmp
push
xchg
xor
scas
xchg
mov
aad
insl
loopne
pop
pop
push
dec
cmpsb
hlt
idivl
jge
push
int
aaa
loopne
imul
xor
pcmpeqd
js
xchg
xchg
sbb
loope
scas
shlb
xor
dec
lods
dec
pop
xchg
fs
push
jmp
imulb
push
jmp
mov
lret
mov
sbb
lds
dec
out
outsb
cmp
aaa
aad
or
or
pop
sub
mov
ror
xor
jbe
hlt
sti
jnp
adcl
or
imul
cltd
js
test
aam
or
push
or
ret
xchg
push
mov
cmp
gs
mov
mov
mov
daa
lea
mov
loop
ja
ds
pushl
mov
aas
int3
jbe
and
scas
jl
in
add
fildl
add
mov
rcl
sub
mov
insb
inc
cmpsb
xor
repnz
pop
out
je
push
cmp
inc
hlt
xchg
ljmp
cmp
les
lea
dec
aad
push
mov
jo
xor
fyl2xp1
pop
repnz
loope
call
mov
sbb
dec
jo
dec
mov
sbb
les
jno
or
adc
push
scas
jge
inc
movaps
sbb
orl
xchg
push
dec
fcompl
adc
daa
dec
es
mov
pushl
xchg
jmp
jl
fstpl
movb
cld
xor
inc
cld
test
cmp
arpl
gs
jo
mov
mov
add
xchg
cltd
xor
mov
add
sbb
xchg
loopne
fxch
rol
lea
xchg
mov
mov
lret
lods
sbb
xchg
push
test
bound
xor
and
jae
fs
mov
mov
int
fsubs
lods
xor
jbe
cmp
sbb
loop
dec
or
ror
cmp
nop
bound
les
add
jge
aad
lods
popf
sub
pop
mov
mov
insl
addr16
vpsrlq
dec
shrl
mov
cmpsl
mov
mov
jge
ja
jbe
imul
std
push
out
scas
test
inc
jns
dec
or
dec
and
mov
jge
sbb
xor
bound
std
lret
push
bound
mov
shl
iret
out
arpl
sub
std
lcall
clc
mov
rorl
mov
cmp
cmpsl
mov
pop
mov
mov
outsl
add
adc
or
push
jb
mov
dec
sub
lcall
and
and
sbbb
cmp
test
dec
pusha
push
and
fneni(8087
test
loopne
mov
std
popf
pop
mov
inc
mov
sub
xchg
mov
push
or
pop
sbb
mov
fildll
test
sub
push
mov
bound
lock
add
adc
outsb
sub
lret
or
loopne
xor
mov
in
and
outsl
scas
jmp
mov
cmpb
xor
jle
xor
jo
push
or
out
filds
pop
fwait
and
push
xchg
push
pop
mov
sub
xchg
fistps
fistps
dec
push
mov
lret
sub
addr16
imul
push
mov
pop
jb
int
ret
shrb
or
movsl
mov
push
jmp
ds
insl
rcll
in
adc
mov
sub
dec
inc
rorl
movsb
adc
ucomiss
addr16
movsb
inc
mov
dec
or
cmp
sahf
iret
insb
test
popf
add
iret
cld
xor
or
sub
jno
dec
mov
adc
cli
fbstp
in
ljmp
jmp
stc
add
adc
mov
cmc
pop
adc
inc
int3
mov
lea
dec
es
cmp
and
fistps
jnp
ljmp
roll
lret
ljmp
sub
cmp
test
mov
daa
jl
cmp
xor
pop
or
es
mov
sbb
xor
addr16
mov
daa
mov
imul
add
fadd
les
outsb
rcll
dec
addl
sub
int3
aaa
mov
sti
add
push
sbb
dec
jge
and
dec
es
nop
shrb
outsl
out
xor
insl
xchg
mov
nop
jae
inc
sub
out
test
test
cmp
sub
scas
loope
add
sbb
mov
xchg
in
repnz
ror
bound
jge
or
xchg
es
nop
cmp
push
frstor
fwait
xchg
inc
push
lret
xlat
clc
sbb
aam
pop
ficoms
mov
pop
dec
aaa
addl
lret
cmp
jb
jp
push
lods
jns
fs
adc
sahf
out
pop
push
scas
repnz
and
cmp
xchg
aad
cli
sub
pushf
ja
push
insb
mov
jnp
ds
push
das
testb
ss
fsubrs
cmpsl
and
rcll
adc
sub
xchg
fsubrl
cwtl
and
lret
add
call
aaa
stos
sub
mov
and
dec
and
rorb
imul
xlat
aaa
out
insb
daa
jl
inc
inc
repnz
add
cmpsl
push
pop
mov
nop
push
inc
loop
in
push
scas
mov
fs
add
inc
pusha
inc
es
jne
out
ficompl
xor
adc
mov
sub
js
int
in
mov
and
jmp
stos
leave
pushf
mov
push
pop
das
jmp
lods
adc
pop
ret
test
add
hlt
das
mov
lret
lea
cmp
scas
push
fimull
in
or
jae
enter
orb
pop
jg
inc
adc
gs
flds
cmp
adc
pop
xchg
jge
clc
popf
sub
and
cmp
into
mov
mov
push
add
sub
jp
sahf
data16
nop
pop
insb
ret
mov
stos
push
ret
mov
mov
sub
scas
stc
fimull
mov
adc
addr16
xchg
test
dec
stos
aad
adcl
push
lret
repz
push
push
rep
adc
mov
mov
mov
out
xor
mov
notb
iret
dec
pmuludq
add
cli
cmp
push
mov
in
and
outsl
dec
push
stos
xor
fldt
sarb
test
pop
xchg
sbb
shlb
cmpl
push
add
pushf
ret
mov
roll
addr16
es
xchg
out
pop
ret
push
add
and
imul
inc
sti
mov
lahf
adc
sub
data16
sbb
cmp
fprem
call
pop
pop
int
roll
pop
pusha
in
mov
sbb
pop
ret
xor
not
mov
adc
adc
add
cli
cmp
aaa
sbb
add
xchg
fwait
subl
daa
xor
iret
fsubr
aam
ret
push
cmpsb
jmp
jg
faddl
repnz
daa
jns
inc
xchg
jmp
filds
call
inc
jbe
hlt
mov
in
mov
insb
fimuls
xchg
mov
insb
mov
addr16
or
test
mov
inc
sub
cmp
mov
cmc
add
test
sti
inc
xchg
lods
add
cmpsl
pop
outsl
cmp
xor
mov
sahf
iret
inc
test
rorl
imul
fstl
in
rcll
xor
roll
dec
inc
lcall
xor
dec
inc
add
xchg
or
add
xor
push
sbb
into
filds
scas
cs
jge
jmp
dec
repz
ljmp
js
xlat
aas
cmp
movsl
lcall
in
sub
inc
and
push
nop
insb
sbb
xor
in
inc
in
sbb
dec
inc
xchg
adc
cli
hlt
mov
dec
sahf
addr16
inc
pop
pushf
xchg
je
popa
or
out
fcomip
mov
inc
jge
push
push
cmp
push
pushf
subb
cmc
xor
mov
ret
lcall
insl
inc
adc
das
fbstp
rclb
stos
popa
mov
imull
lret
dec
inc
scas
inc
inc
push
pop
pop
and
adc
ljmp
cmp
xchg
xor
cltd
sti
and
xchg
daa
mov
pushf
int
push
sysret
das
movsl
lock
mov
clc
scas
repnz
push
movsl
aad
and
adc
jae
sbb
cmp
stos
sub
jl,pn
mov
lret
jo
mov
pop
into
iret
lret
mov
rorb
jae
adc
ja
sub
ss
dec
std
mov
mov
in
xchg
cs
out
xor
mov
imul
lcall
jmp
add
sbb
mov
mov
nop
add
mov
xchg
pop
dec
ja
js
js
push
xor
je
sbb
add
jg
add
shll
fistl
cmp
sub
jno
mov
aad
pop
jo
mov
add
jbe
mov
pop
jbe
fidivl
inc
rcr
pusha
mov
push
sbb
cmpsb
int3
push
xchg
sub
lcall
mov
js
std
cs
insb
mov
int3
push
adc
dec
jecxz
and
jle
mov
int3
push
popf
cmp
push
inc
jg
sub
pop
xlat
add
inc
mov
xor
mov
fistps
pop
shll
pop
and
adc
pop
jecxz
shlb
std
fwait
sub
ret
mov
ds
nop
fcoms
int3
stos
shl
cltd
xlat
test
inc
xchg
add
aas
and
jnp
sarl
lods
ljmp
lcall
insl
jp
inc
cmc
mov
xor
sbb
clc
pop
dec
fdivrs
push
cmp
test
mov
int3
test
imul
outsb
xchg
sub
jae
sbb
mov
mov
pusha
inc
jnp
inc
mov
inc
mov
daa
gs
sub
enter
inc
aad
cld
int3
data16
jmp
adc
xchg
imul
mov
xorb
dec
pop
sti
sub
inc
jge
punpcklbw
dec
mov
and
sub
cld
inc
or
rorl
fsubl
push
mov
mov
fisubs
ss
into
lret
pushf
aad
adc
loope
ss
xchg
xchg
loope
mov
je
cmp
in
fsubr
and
pop
mov
inc
sbb
xchg
filds
sarl
add
fwait
shrb
movsb
inc
std
sub
insl
daa
and
pop
sarl
and
add
inc
pop
xchg
mov
adc
pushf
push
int
ds
xor
movsb
js
pop
rorb
xchg
insl
hlt
add
adc
lahf
inc
xchg
ret
add
mov
hlt
jnp
pop
xor
sbb
lret
andl
add
mov
sti
or
adc
xchg
arpl
jmp
cmp
add
mov
popf
mov
mov
cmp
mov
jmp
cmp
sarl
jns
enter
testb
push
stos
lret
jne
mov
sub
movsl
jmp
dec
ljmp
popa
pushf
fiadds
mov
pop
mov
or
jno
and
mov
sub
add
push
int
out
sub
add
push
push
pop
or
int
fbstp
fildl
sub
mov
mov
fucomp
rcrb
xor
push
outsb
lds
inc
scas
jge
xchg
in
push
fisttps
inc
rcr
jle
cmp
out
insl
mov
scas
pop
out
sub
inc
xor
movl
stos
mov
xchg
repnz
cmp
mov
mov
jo
fstps
jae
add
js
cli
loop
cmc
lcall
lods
gs
out
pop
imul
icebp
adcl
dec
scas
clc
call
push
insl
mov
or
mov
push
sbb
or
xchg
jecxz
pop
shrl
or
sbb
das
pop
jns
pop
test
jmp
fists
outsl
dec
cli
sub
sbb
pop
in
cltd
mov
mov
xor
loope
addr16
sahf
cmpsb
pop
inc
dec
push
repnz
ja
subb
push
add
and
jb
adc
mov
ds
sbb
push
les
and
xchg
xor
aas
inc
iret
add
cltd
pushf
pop
inc
jge
add
icebp
jmp
adc
mov
cmc
fidivrl
sbb
loop
jo
insb
outsl
mov
inc
or
stos
cwtl
and
mov
into
popf
mov
push
sub
cmp
and
xor
dec
pop
mov
xchg
cmp
loop
mov
sti
add
mov
rclb
add
cmp
lea
mov
dec
or
mov
pusha
xor
roll
in
in
push
lods
stos
mov
sub
jno
in
loopne
xor
mov
dec
jns
cld
or
push
orl
jbe
in
or
dec
sub
cmpsl
inc
or
add
or
shlb
arpl
push
les
pop
mov
pusha
cld
push
test
int
lock
push
ret
sub
adc
pop
cmpsl
dec
adc
pop
lock
push
shll
enter
cwtl
aad
or
jo
mov
leave
sbb
pop
cmpsb
jmp
and
imul
sahf
outsb
cld
cmpsl
fsubl
xor
mov
push
sar
mov
xchg
jg
sbb
out
adc
popa
jmp
leave
or
into
scas
divl
addl
push
inc
lock
shll
jp,pn
clc
add
insl
pop
pop
out
lock
cmp
scas
ret
mov
lods
out
std
cltd
jnp
sub
mov
mov
ret
sbb
xchg
sbb
in
xor
xchg
ret
popa
mov
push
or
pop
jmp
add
daa
mov
popa
mov
negb
fwait
call
or
shl
rolb
mov
cld
fwait
imul
or
inc
outsl
sub
xlat
pop
movsb
xor
scas
push
xchg
cwtl
inc
js
imul
cmpsl
scas
sub
movd
xchg
mov
pop
dec
iret
add
xchg
fwait
insb
mov
adc
push
lcall
lods
lahf
cltd
mov
mov
add
inc
and
test
loopne
cs
roll
ljmp
dec
adc
enter
shr
stos
inc
sbb
outsl
sub
cmpsb
fwait
jno
mov
ret
and
mov
mov
and
lret
loope
pushf
dec
mov
xchg
call
dec
inc
push
jb
imul
dec
inc
outsl
adc
out
sub
cwtl
mov
rolb
rclb
test
scas
push
mov
into
loop
rorl
inc
xchg
outsl
xor
stos
and
xchg
sbb
js
test
aas
inc
jns
cltd
dec
cmp
sahf
push
rcr
jge
lcall
push
push
imul
int3
sbb
pop
and
xlat
mov
enter
jge
add
into
jge
cld
jbe
cld
pop
add
hlt
call
jle
mov
adc
int3
pop
lret
xchg
stos
aas
add
test
rolb
sbb
stos
pop
mov
out
mov
loop
loope
jbe
mov
jnp
mov
or
or
shll
imul
sbb
push
and
arpl
enter
cli
adc
dec
adc
push
sub
dec
mov
mov
pusha
shrl
jne
add
cmp
push
jg
andb
pop
jno
in
out
pusha
pop
push
jle
push
cmc
repz
pushf
sbb
inc
mov
lds
push
mov
adc
mov
cmpsl
mov
add
mov
ss
add
mov
jb
jbe
jecxz
push
adc
mov
mov
push
xchg
js
stos
shrb
mov
inc
jne
dec
outsb
sub
fdivrs
js
loopne
mov
xchg
mov
aad
ret
xor
sarl
ds
stos
sub
into
push
fsubl
orl
cmpb
pop
mov
into
cmpsl
inc
jo
ss
inc
cmpsb
mov
dec
mov
push
dec
cld
push
movl
inc
es
dec
pushf
push
jno
cltd
adc
clc
fisubs
pop
scas
iret
lahf
or
xor
imul
movl
xor
xchg
repnz
mov
and
sub
mov
fsubrs
lds
cltd
xor
ja
jae
je
mov
mov
por
cmp
dec
aaa
out
push
adc
repnz
jb
hlt
aad
sub
pop
mov
imul
shll
adc
aaa
insl
loope
xchg
adc
push
lret
out
pop
int
data16
cmc
mov
das
mov
das
test
into
lods
xchg
pop
cld
and
popf
fnsave
cwtl
lcall
in
scas
inc
movsb
jae
add
pop
stos
push
jp
jge
mov
sub
hlt
rcrb
add
mov
je
cmp
jnp
subl
cmp
jbe
xchg
lods
int
insl
shll
pop
add
movsl
movsl
inc
cmp
jl
jb
cmp
jecxz
add
push
cmp
push
cli
cmp
cmp
pop
jno
mov
inc
stos
adc
pushf
sbb
pop
pushf
ret
adcl
enter
lock
mov
dec
mov
es
in
mov
mov
xor
and
fwait
xchg
movsl
repz
mov
ss
push
xchg
es
mov
ljmp
je
cmp
adc
out
add
lret
inc
ds
ss
push
in
lcall
test
fstps
sub
mov
jae
rcl
push
into
mov
mov
inc
mov
dec
es
sub
je
push
adc
sub
aaa
in
mov
mov
into
or
inc
pop
lcall
and
xor
adc
dec
jg
inc
xor
insb
adc
rorb
mov
push
js
jb
pop
lods
or
lea
push
push
rorb
mov
push
dec
arpl
pop
push
jb
jmp
or
sub
popf
ja
jecxz
xor
andl
dec
pop
repnz
and
decb
or
adc
and
insl
lret
adc
xchg
test
sub
aaa
lods
lret
jmp
iret
adc
addr16
out
or
push
daa
and
dec
test
and
jne
lcall
add
clc
jg
movsb
pop
ror
add
movsb
std
in
movsl
push
push
icebp
imul
jb
mov
push
sbb
repz
jae
xor
mov
dec
pop
test
scas
mov
jp
adc
sti
stos
xchg
xchg
xchg
mov
pop
stc
stc
xor
jmp
dec
xchg
ljmp
pop
lret
sub
mov
pop
mov
push
or
std
lea
dec
mov
pop
xchg
in
clc
aad
aaa
jp
nop
shrl
std
xlat
ds
mov
jmp
dec
jmp
push
inc
sub
fwait
inc
aaa
xchg
shlb
aas
dec
sub
mov
aam
mov
loope
inc
in
shrb
iret
mov
notl
dec
call
mov
fistpll
push
pop
rclb
das
cmp
add
xchg
popf
dec
pop
push
inc
jecxz
xchg
testb
jmp
punpckhwd
xchg
aaa
stos
sub
insl
in
sub
sbb
push
cmp
ss
std
mov
jmp
xlat
int
sbb
fists
ret
popa
pop
test
iret
les
xor
mov
sub
fsub
lret
dec
cmpsb
mov
loop
data16
ror
pop
or
pop
mov
out
shll
jge
loopne
cwtl
out
and
xchg
pop
out
dec
divl
push
hlt
icebp
clc
sub
stos
xor
repnz
outsl
rorb
and
jmp
repnz
add
sub
mov
and
es
icebp
lcall
jo
lods
stos
repnz
inc
insl
dec
dec
pop
stos
add
xor
test
inc
pop
out
add
cmpsb
fs
dec
or
in
adc
add
icebp
mov
mov
pop
mov
cli
add
dec
and
xor
out
push
mov
pop
jge
jo
adcl
dec
cmp
movsl
pop
test
and
xchg
subw
jns
dec
mov
mov
movsb
out
repz
lahf
push
shll
aaa
and
push
and
and
mov
adc
dec
mov
sbb
out
idivl
mov
xlat
shll
fs
mov
jge
jo
lock
push
xor
xorl
aas
mov
loopne
and
jo
jnp
call
sbb
mov
or
mov
pop
push
mov
inc
mov
aad
lret
cld
je
sbb
add
lret
popa
inc
adc
pop
cld
jge
mov
push
push
push
sbb
sar
testb
jo
push
dec
and
sbb
mov
scas
insb
mov
jecxz
pop
iret
cmpsl
jno
sbb
daa
and
pop
sbb
xchg
daa
shrl
cmpsl
test
xchg
mov
jge
outsl
sbb
adc
gs
pop
ret
pop
hlt
loope
push
scas
sbb
mov
push
jmp
sub
sub
pop
popf
dec
and
sub
sub
sbb
stos
cmp
adc
xchg
inc
aaa
mov
adc
xor
and
inc
daa
mov
stc
fisubs
iret
sub
jns
mov
mov
dec
sbb
subb
addr16
mov
loop
rcrb
shrb
inc
ljmp
jmp
fcoms
flds
sbb
push
stos
dec
pusha
jg
xor
adc
lds
stos
jg
mov
das
pop
in
push
imulb
xor
xchg
cwtl
jge
pusha
or
sar
push
mov
int3
sbb
xchg
stos
jle
or
sti
test
imul
push
lea
imul
push
iret
inc
scas
push
mov
xchg
nop
or
mov
xchg
mov
rep
mov
loopne
mov
in
xor
push
cmp
stos
int3
subb
mov
mov
negb
outsb
mov
iret
sbb
fldcw
shrl
xor
outsb
pop
fdivr
dec
push
pusha
psubq
leave
or
add
addr16
inc
mov
mov
and
enter
iret
dec
clc
cmpsl
imul
inc
mov
mov
mov
ss
cli
outsl
and
mov
gs
aam
xor
aad
and
mov
jae
arpl
push
fwait
push
pop
push
push
lods
lods
pushf
and
and
pop
sbb
clc
dec
sbb
and
dec
mov
nop
ljmp
sar
fcoml
adc
daa
arpl
pusha
xchg
mov
ret
test
ljmp
push
outsb
sub
jb
xor
lea
fisubs
mov
fcmovu
mov
ljmp
adc
aam
sbb
push
mov
pop
mov
jmp
push
inc
cmpsl
cmp
or
test
add
aam
and
lret
ret
scas
dec
jecxz
bound
repz
mov
push
adc
inc
sbb
xor
js
mov
and
imul
in
mov
cmpsb
mov
imulb
lds
pushf
adc
pop
add
sbb
dec
inc
adc
icebp
lea
rcrb
sbb
push
andb
push
dec
test
clc
jl
push
xchg
or
movsl
gs
xlat
mov
fninit
add
sbb
fiaddl
xchg
das
push
pushf
mov
add
divb
adc
in
insb
lea
xor
and
movsb
or
addr16
aam
addr16
push
xchg
sub
leave
sub
jb
cwtl
leave
push
loopne
daa
in
mov
fwait
xor
icebp
fs
mov
aas
cltd
sti
fcompl
jl
jo
jno
pop
sub
mov
pop
les
leave
and
pop
cmp
aam
cmp
pop
dec
fdiv
enter
dec
lods
pop
cli
cmp
std
xchg
and
mov
test
ss
rcrl
popf
mov
push
out
jo
bound
fwait
and
cld
mov
out
pop
push
jecxz
jb
sub
pop
push
xchg
push
xor
fadds
or
lds
out
and
xchg
pushf
pop
lods
adc
push
iret
dec
push
sbb
arpl
mov
push
dec
xchg
movsl
ret
cmp
insl
dec
mov
pop
cmp
jns
aad
pop
push
sbb
xchg
mov
pop
mov
add
or
lcall
aas
cmp
and
in
jns
xor
mov
shl
sbb
bound
into
leave
das
aaa
xor
dec
pop
cmp
xor
pop
shl
inc
decl
adcb
out
iret
or
sub
cmpsl
icebp
or
ljmp
je
cli
stc
das
mov
dec
call
push
aas
add
push
adc
daa
lds
mov
cmpsl
xorb
in
decl
mov
out
data16
sbb
fcomi
call
push
push
jnp
jmp
mov
jl
scas
jns
scas
jle
xor
outsl
xor
xchg
mov
dec
push
hlt
pop
sbb
push
jmp
mov
ljmp
rolb
and
lods
cmc
pop
sbb
jg
leave
jns
cltd
jbe
hlt
addl
cwtl
pop
xchg
pop
nop
je
push
callw
sub
add
xor
filds
pop
loopne
mov
loope
lea
out
jl
bound
into
fcomp
sbb
xor
dec
in
in
and
sub
loope
pop
pop
jno
call
rcll
mov
dec
out
dec
stos
xor
pusha
lret
mov
dec
out
pop
sbb
xchg
adc
pop
iret
iret
pop
sub
mov
lock
mov
rorb
stc
inc
mov
ja
mov
cld
push
jle
jl
mov
pop
pop
cmp
js
mov
leave
leave
out
pop
and
es
andb
jmp
sbb
icebp
or
addr16
test
jbe
push
xor
jnp
sbb
cmc
and
mov
push
out
pop
sub
int
mov
addr16
popf
je
outsb
shlb
and
inc
add
ficomps
sarb
ss
sbb
testl
mov
ljmp
mov
jae
stos
insl
and
dec
xchg
sbb
fsts
xchg
mov
dec
pop
adc
sarb
or
mov
stc
test
sbb
fstps
test
bound
ss
inc
sub
push
pusha
mov
xchg
ss
push
sahf
out
inc
sbb
aad
ret
jg
mov
and
lret
and
in
push
hlt
das
sbb
mov
cmp
xor
sub
jb
stos
mov
sub
inc
icebp
jl
mov
adc
lods
mov
jne
mov
sub
inc
push
fistpll
lods
ljmp
adc
lods
mov
push
cmp
push
call
leave
sbb
push
data16
rcrb
addr16
xor
mov
int3
sub
call
enter
das
xor
cmpsb
in
adc
mov
mov
addr16
insb
inc
aam
ficompl
jb
pop
fdivrl
push
and
xacquire
push
mov
mov
shll
mov
ja
sub
push
jbe
pop
data16
es
cmp
and
mov
shl
outsb
pop
cmp
movsl
insl
int3
push
cmp
mov
sbb
ret
dec
adc
cmp
filds
push
loope
mov
mov
and
sub
and
js
sbb
dec
mov
insl
xor
outsl
inc
adc
clc
mov
add
mov
loop
xor
fadd
andl
mov
cmp
insb
out
sub
stos
xchg
mov
jbe
ficoml
xlat
push
cld
jns
lock
and
jge
mov
aad
mov
or
lock
mov
lret
mov
pusha
mov
xchg
cmp
imul
mov
cmp
lret
icebp
mov
rcrl
inc
cmpsb
dec
mov
push
add
decl
inc
cmpl
and
push
andb
push
pop
fstl
inc
rorl
enter
lock
jecxz
popf
or
sub
cmc
push
mov
jecxz
push
mov
dec
nop
jg
sbb
ljmp
push
xor
in
ds
clc
dec
in
fcoms
jge
test
sub
out
cmpsl
aas
aas
fisttpl
cwtl
push
pop
inc
test
lcall
xchg
push
xor
add
addr16
add
js
fistps
out
repz
insl
xchg
pop
or
xlat
jb
xor
mov
arpl
or
inc
cmp
sbb
sub
sbb
packssdw
pop
dec
mov
je
adc
mov
inc
sub
adc
adc
adc
push
dec
cmpsb
fiaddl
repz
sub
adc
popa
mov
mov
sbb
xor
clc
cwtl
leave
in
fstl
movsb
xchg
add
insb
sbb
outsb
xlat
push
xlat
fimuls
test
jne
outsb
dec
je
push
gs
mov
xchg
cmp
or
je
addl
and
push
dec
rcll
sbb
popf
fadds
mov
pop
std
dec
dec
push
dec
mov
lahf
or
add
pop
adc
mov
push
mov
xchg
mov
lods
sti
cmp
pop
sub
pop
pop
jle
inc
ds
cmp
cli
dec
adc
sbb
scas
leave
push
sub
je
es
add
mov
outsb
lahf
cld
mov
lret
lock
jecxz
push
fwait
loopne
mov
nopl
mov
fldenv
stos
lock
mov
lcall
lds
add
jl
xchg
out
xor
push
cmp
add
xchg
jmp
js
add
inc
sbb
inc
cld
mov
and
mov
test
add
mov
adc
mov
stos
pop
aad
mov
js
push
shl
jmp
icebp
imul
sti
mov
pop
rorb
aad
fcoml
push
mov
aas
cltd
cmpsl
xor
into
jp
inc
aam
adc
movsl
popa
fnstsw
nopl
mov
xchg
jl
mov
and
movsl
int3
add
sub
inc
pop
gs
sub
aas
mov
gs
mov
pop
jge
xchg
rcrl
sbb
push
pop
movsb
ret
and
xchg
xor
lods
or
loopne
mov
rolb
hlt
sub
and
sahf
pusha
pusha
testl
aaa
push
xlat
lahf
out
mov
xor
shrb
sbb
mov
sti
mov
mov
iret
push
adc
lds
and
dec
fsts
in
rcl
mov
or
push
daa
jge
leave
movsb
cmc
lods
xchg
ficoms
lcall
adc
aam
adc
push
sbb
jnp
mov
cmp
lret
lret
cmp
movsb
mov
fnstenv
roll
in
mov
pop
push
mov
dec
movsl
jne
seta
jns
jle
mov
aas
lea
leave
test
aam
in
int
or
push
fists
sub
mov
sarb
push
pop
lock
add
outsl
mov
push
scas
add
cmc
ret
into
push
pop
sbb
mov
xor
lcall
in
in
xchg
sub
xchg
jl
mov
push
lock
out
test
mov
cmp
push
mov
cs
repz
fmull
scas
lret
cmp
adc
in
push
das
and
jns
mov
jge
mov
pop
cmp
dec
mov
stos
cltd
les
adc
test
fdivrl
es
lret
cmp
in
mov
fldenv
xor
aam
adc
aad
adc
xlat
notl
out
sub
cltd
add
mov
xor
fs
or
ja
movsb
mov
test
ds
push
xor
lds
and
mov
sbbb
or
inc
xchg
dec
fsubl
or
ljmp
pusha
push
lret
cmp
rcl
icebp
mov
sbb
scas
call
or
jo
sub
fsubr
jns
xchg
sub
mov
insb
mov
cmp
dec
mov
cmp
xlat
test
add
ficomps
add
in
fstpl
push
ja
divl
popf
mov
sub
pop
stos
jecxz
insl
or
int
push
fbstp
or
push
addr16
mov
xor
sti
dec
xchg
sub
sti
ror
cmc
out
jl
dec
out
xor
test
xlat
pop
cwtl
addl
add
imul
adc
lea
or
cmp
sbb
adc
in
adc
out
js
gs
fists
cli
fcompl
loop
scas
sti
dec
sub
ljmp
in
ret
mov
int
mov
sbb
repz
loop
lods
inc
popf
sub
outsb
aad
es
jmp
push
hlt
pop
shrb
dec
enter
xchg
pop
das
adc
and
push
mov
cld
sbb
push
add
xchg
jl
insb
sub
push
lret
mov
cmp
inc
adc
test
inc
roll
popa
cmp
dec
sbb
lahf
add
push
xor
pop
mov
cmovg
loopne
xchg
mov
in
or
mov
cwtl
dec
into
inc
call
inc
imul
ficomps
mov
mov
fs
mov
inc
mov
aas
lods
push
sti
jle
bound
bound
and
dec
adc
cli
xor
mulb
mov
fs
inc
mov
rcll
add
ljmp
push
xor
sbb
ljmp
and
push
lahf
adc
dec
aad
mov
jmp
out
cli
cli
cmp
lds
inc
fstp
pop
pop
push
fsubl
xor
insl
filds
mov
mov
clc
enter
sub
das
cs
inc
icebp
outsb
stos
lods
lock
movsb
cs
and
jb
jecxz
cli
addr16
xor
mov
pop
pop
arpl
fwait
sub
outsl
jno
scas
outsl
xor
fistpl
stc
push
sub
jo
leave
inc
std
mov
lea
cli
inc
loope
ljmp
cmc
cmc
xor
sti
and
sbb
loope
jl
cmpsl
fidivl
mov
add
sub
js
aaa
adc
hlt
xor
cmp
cld
jp
xor
push
cmpb
or
cmp
jns
dec
adc
dec
subb
add
rorl
xor
imul
inc
inc
popa
adc
call
fdivrs
xor
das
adc
mov
mov
adc
sahf
mov
or
aas
mov
pop
stc
mov
or
cmp
mov
popf
idiv
test
and
push
xor
cmp
push
test
xchg
loop
or
pusha
movsl
add
in
in
mov
cs
and
and
mov
lods
mov
inc
stos
jge
sub
scas
xchg
or
mov
push
outsb
idiv
shrl
aad
testl
push
xor
popa
jecxz
ret
sub
std
out
jne
xlat
push
and
mov
dec
loopne
loopne
sbb
inc
xlat
test
cmp
sbb
out
push
into
jno
or
das
lds
int3
sahf
aam
sub
cmp
cwtl
es
fidivs
sbb
jbe
add
xchg
pop
jnp
xor
hlt
into
pop
push
dec
cli
pop
push
test
or
xor
or
cld
inc
clc
sbb
xchg
inc
dec
out
lret
mov
inc
dec
popa
and
cmpsb
cmc
push
push
xlat
jno
clc
adc
hlt
cmc
xchg
xlat
jo
and
into
inc
jge
shlb
xchg
fwait
stos
mov
cwtl
pop
xchg
call
push
dec
enter
lahf
pop
mov
lods
fisubl
clc
imul
mov
loop
inc
pop
or
aaa
adc
pop
sti
out
sbb
daa
jae
push
xchg
xchg
inc
movsl
xchg
push
clc
mov
lods
nop
ds
ret
push
das
repz
mov
mov
jns
push
push
push
int
ret
aad
pop
jg
test
test
or
jne
inc
jge
movb
or
fwait
xor
push
shlb
ret
jp
sbb
out
mov
in
pop
leave
mov
sbb
jno
and
movsb
outsb
or
sti
add
shll
aad
fwait
xor
adc
imul
or
push
inc
cmp
bound
mov
jecxz
push
add
mov
mov
lcall
mov
push
mov
sti
js
xor
push
imul
out
dec
call
adc
mov
mov
fsubp
outsl
aaa
dec
push
jns
mov
mov
into
into
bound
mov
pop
or
xor
xor
or
xchg
and
lahf
pop
lahf
int3
in
rcll
mov
adc
addb
xchg
test
ja
and
jno
mov
sbb
insb
or
out
adc
push
fisttpll
fs
test
or
addl
inc
into
pop
fldt
mov
movsl
int3
or
jns
mov
cmp
lcall
ljmp
xlat
xor
mov
mov
imulb
inc
sbb
add
dec
and
sub
inc
popa
in
bound
xor
xor
lahf
ja
iret
sub
mov
pusha
icebp
rcr
insl
cmc
sub
in
adc
push
push
insl
leave
stos
inc
std
mov
push
sbb
dec
mov
push
stc
das
inc
cli
loop
es
cltd
mov
sub
push
pop
mov
insl
in
icebp
sbbl
loop
sbb
les
or
dec
cmp
push
int3
mov
push
movsl
xor
lret
leave
xchg
dec
cmp
or
aaa
pop
push
cmp
hlt
push
or
jae
xchg
push
inc
push
fisubs
pushf
cmpsb
std
dec
cmpsb
jbe
cmpsl
inc
in
and
pop
mov
dec
pop
xchg
ljmp
cmpl
sub
test
nop
shl
mov
jp
repz
inc
icebp
hlt
fstpt
aad
sbb
and
stc
mov
fwait
jl
loopne
sub
andb
jle
scas
inc
movsb
mov
loope
lock
xchg
sub
xchg
shlb
push
xlat
bound
das
xor
fsubr
test
out
testl
jge
push
dec
popf
int
loopne
mov
and
lahf
add
xchg
in
cltd
fnsave
mov
ret
rorb
ficoml
bound
clc
imul
jae
jle
in
popa
jmp
jnp
sub
rorb
jp
mov
lock
int3
push
add
jb
jp
push
dec
lds
xor
mov
xor
push
adc
mov
dec
cli
test
pop
jae,pn
std
cmp
mov
mov
cs
pop
arpl
xor
mov
test
xchg
dec
jmp
pop
sub
mov
ss
xchg
jae
add
cltd
jge
inc
loopne
mov
ljmp
loopne
leavew
pop
cmp
popa
test
jmp
inc
scas
jne
rcl
je
mov
cmpsl
aaa
sub
add
fwait
jge
jmp
add
mov
out
and
sbb
jns
icebp
mov
pop
fnstcw
leave
out
aas
or
cmp
mov
or
notl
push
cmp
jns
dec
subb
mov
ljmp
xor
bound
jle
adc
ljmp
jne
ret
insb
add
xlat
xor
xchg
mov
std
sub
adc
ss
mov
sub
ret
jl
dec
add
stc
lods
inc
fsts
sti
add
xchg
or
push
add
sti
scas
inc
mov
xchg
mov
pop
stos
pop
mov
cmp
aas
inc
push
and
jmp
jns
js
aaa
mov
mov
jecxz
out
out
jns
leave
xchg
lods
mov
les
jbe
ret
cmp
mov
in
add
pop
jp
movsl
lret
lods
jo
int3
mov
adc
pop
popa
imul
cld
pop
cwtl
ret
loop
sub
mov
ljmp
fistl
sbb
clc
mov
jp
fwait
into
add
and
test
mov
add
test
insl
adc
push
subl
es
cmp
push
mov
push
push
cs
in
lcall
les
jle
sub
sub
mov
add
lcall
push
jg
pushf
popf
push
xlat
stos
or
mov
test
mov
dec
repnz
xor
dec
adc
adc
cmp
hlt
add
jp
cmc
mov
mov
minps
imul
sbb
int
ret
rcll
adc
mov
lea
xor
loopne
sbb
cmp
push
outsb
cmp
cmp
or
inc
test
ret
lahf
ds
in
lret
lret
pop
jmp
notl
mov
mov
shrb
imul
test
cmpsl
sub
pusha
jg
mov
add
jl
repz
pop
loope
dec
shll
pop
adc
and
sub
dec
jge
push
daa
in
and
in
sub
es
mov
sbb
pop
and
aam
inc
pop
or
loop
sub
jg
push
jo
inc
inc
sarl
jge
inc
lcall
fmuls
lods
inc
and
scas
xchg
mov
data16
xorl
stos
out
mov
decb
rcrb
lret
cld
inc
lahf
cmp
mov
int3
fs
int
xchg
mov
clc
clc
jl
stc
push
mov
push
mov
dec
je
mov
jge
cmc
jg
jae
int
xchg
jbe
loope
sahf
popa
and
repnz
daa
sbb
lods
ja
jmp
ss
aad
adc
sbb
subb
pop
xor
add
push
adc
ss
stc
scas
enter
int3
and
outsb
mov
dec
mov
mov
sbb
mov
and
or
inc
ljmp
into
scas
outsb
rolb
jle
dec
jbe
cmp
iret
test
jo
pop
das
sbb
pop
fstpl
cmpsl
lods
mov
mov
es
mov
mov
nop
push
pop
iret
mov
mov
mov
js
xorl
mov
sbb
jnp
push
bound
push
and
lahf
adc
jmp
out
xor
jl
inc
and
test
pusha
insb
ficompl
mov
mov
out
jge
in
jno
mov
fldl
movsb
shlb
cmp
push
ja
xchg
insb
seta
sub
sbb
shlb
and
mov
adc
mov
mov
adc
das
add
lcall
push
pop
mov
cltd
scas
bound
fcoms
xchg
rclb
push
mov
pop
mov
add
dec
pop
test
imul
sbb
inc
insl
nop
xchg
mov
dec
sub
jae
out
cld
xchg
in
dec
leave
ss
outsl
lret
and
ss
aas
outsb
push
xor
icebp
out
addb
gs
inc
mov
jecxz
imul
sarb
rcrb
pop
jb
ljmp
in
sti
inc
loop
addr16
xchg
pusha
xor
testl
gs
aas
push
dec
add
fstps
mov
fisubs
mov
jg
in
adc
pop
loope
nop
sbb
push
mov
pop
push
je
cmp
movsb
cmc
pop
imul
cmpsb
adc
cmp
adc
fldt
pop
jb
pusha
ds
fstpl
sbbl
fcoml
sbb
cmp
out
aad
rcrb
xchg
divl
jbe
mov
int3
add
mov
stos
mov
pop
jmp
jge
mov
or
adc
cmp
insb
pushf
sbb
adc
mov
mov
jmp
cmp
lea
pop
popa
dec
cld
pop
jmp
popl
pop
mov
jmp
rorb
push
ljmp
repz
adc
lea
daa
sbb
mov
ret
dec
sbb
mov
jp
jb
add
xchg
in
cmp
lahf
add
pop
inc
movsb
sub
or
cmc
pop
inc
sub
xor
push
jns
mov
imul
push
ds
gs
clc
std
sbb
push
pop
es
imul
mov
js
sbb
jmp
fmul
mov
mov
cmp
aas
cmp
or
mov
pop
fisttps
push
setb
mov
aas
dec
int3
insb
pusha
pop
pop
mov
idivb
insb
cmpsb
aam
insb
testl
pop
shrl
jnp
mov
pop
xchg
lret
dec
rclb
push
in
mov
lret
jbe
push
mov
push
xor
pop
add
mov
mov
cmp
sahf
lcall
inc
pop
inc
dec
xchg
cmp
sarl
xor
fidivrl
fisttpl
in
rcr
lock
inc
mov
sahf
pushf
sahf
cmp
sbb
cmpsb
cmp
push
push
sti
rclb
dec
xchg
sub
cld
add
inc
pop
pop
shrl
pop
mov
mov
inc
jns
sahf
and
fld
pop
and
cmp
iret
fcomps
popf
lds
in
sub
ret
jne
frstor
or
xchg
jmp
pushf
mov
inc
iret
push
mov
xchg
mov
loop
xchg
cmpb
jae
add
inc
xor
mov
test
jb
mov
sub
insb
movsl
xor
or
jle
add
xchg
adc
sbb
add
std
mov
enter
adc
sbb
cli
jl
pop
sub
add
jbe
mov
imul
orb
std
imul
ja
ds
inc
push
imull
shll
sbb
adc
lods
repnz
pop
mov
xchg
push
aad
rolb
pop
pop
xor
pusha
add
stos
cmpsl
add
push
scas
adc
push
inc
jle
xlat
push
rolb
jle
sahf
jb
xchg
mov
mov
ljmp
iret
out
sbb
push
pop
inc
xchg
sub
jne
add
hlt
adc
mov
sub
mov
je
push
cmp
hlt
icebp
sbb
stos
data16
stos
inc
dec
shll
loopne
push
sub
lea
or
jne
loope
and
or
test
mov
mov
adc
jne
into
pop
mov
xchg
or
jge
fiadds
cltd
cld
dec
cwtl
push
cltd
inc
aaa
pop
aad
cmpsl
repnz
loopne
mov
cltd
inc
movsb
xor
adc
push
and
imul
mov
inc
negb
cs
mov
dec
out
mov
mov
rol
cmc
pushf
dec
aam
loopne
and
or
jbe
clc
dec
gs
out
cmpsb
jge
pop
and
mov
jmp
addr16
clc
push
cmc
push
sbb
and
jae
push
neg
ret
test
push
ja
push
push
push
push
mov
ss
or
orb
sub
push
add
insb
das
in
out
mov
rcrb
dec
stos
add
fldl
jl
lods
and
js
push
adc
aaa
dec
xor
js
imul
mov
into
cld
xor
dec
scas
sub
es
cmp
xchg
cmpl
fsubs
enter
das
outsb
in
pop
repz
rol
jmp
outsl
outsl
mov
push
loope
lock
push
aad
cld
enter
xchg
loope
xor
mov
bound
cmp
pop
or
mov
pop
push
sar
daa
and
add
mov
sub
mov
imul
fs
cli
xlat
in
jg
mov
jo
es
lock
mov
add
xor
pop
cli
adc
icebp
cmp
dec
jmp
out
sub
fstps
mov
jb
dec
cld
aaa
push
into
jle
or
paddw
test
or
dec
sbb
imul
loope
cld
aam
push
xchg
push
lsl
imul
inc
sub
sbbb
mov
pop
mov
setg
adc
imul
insl
dec
jle
xchg
dec
sahf
add
pop
jae
loop
pop
mov
repnz
jo
and
sbb
lret
cmp
jmp
iret
out
push
mov
pop
cwtl
psllw
jg
push
jb
mov
mov
adc
pop
test
mov
jmp
sbb
dec
outsb
inc
lahf
inc
mov
and
mov
push
adc
add
and
push
mov
jb
insl
repnz
mov
sub
add
fnstenv
mov
mov
fmuls
cmp
aas
mov
nop
jle
into
aad
fbld
sub
mov
xchg
lret
xchg
leave
popf
into
pusha
shrl
mov
sbb
ds
mov
aaa
call
test
nop
in
nop
out
jg
int3
cmc
sahf
adc
lods
call
aad
sub
sbb
pop
lahf
jecxz
inc
inc
push
mov
adc
adc
ss
addl
xor
enter
mov
cwtl
outsl
ret
clc
imul
mov
jnp
or
stos
add
addr16
loop
adc
sub
inc
fxch
popa
jmp
nop
popf
shlb
push
lahf
jmp
push
cmpsb
ror
add
mov
les
cmp
mov
inc
pop
cmp
repz
sub
iret
adc
cmp
xlat
xchg
cwtl
add
cmp
dec
ficoms
bound
shlb
add
mov
xchg
lock
and
jb
sub
dec
lea
les
xor
nop
adc
dec
scas
inc
cld
mov
xor
js
sbb
ror
insl
movl
xchg
and
push
xor
hlt
cmpsl
enter
cmp
or
cmp
adc
lea
subl
rolb
fnop
rcll
inc
mov
add
lcall
sbb
inc
adc
and
fstp
jl
push
lcall
pop
and
push
sti
pusha
xor
movsl
jp
mov
in
xor
adc
inc
scas
into
pop
data16
sahf
jno
fldenv
push
cltd
loop
sub
cmp
jae
fcmovnu
xchg
jp
leave
negl
pop
pop
js
scas
push
fcmovne
repz
mov
xor
out
in
lahf
sbb
adc
xchg
cld
mov
or
lret
inc
aaa
int
mov
sbb
push
jne
pop
mov
in
out
pop
sbb
or
mov
bound
dec
push
mov
dec
xchg
push
mov
fldenv
mov
daa
inc
xchg
sub
mov
jnp
andb
push
mov
leave
and
lret
cmp
call
sti
call
pushf
ds
pop
xchg
movsl
sbb
orb
imul
cmpsl
repz
ljmp
pushf
inc
out
and
sti
ret
sub
dec
leave
sbb
push
inc
pop
pop
mov
hlt
test
pop
sub
or
shll
xchg
sar
rcrb
add
insl
test
jg
xchg
icebp
data16
inc
inc
adc
and
data16
cmpsl
add
xchg
inc
push
addr16
ret
in
pop
popa
lock
mov
fistl
mov
enter
sbb
pop
out
fs
mov
sub
jge
ss
push
push
sbbl
leave
push
and
lahf
xchg
jecxz
pop
pop
fistps
incb
popa
xchg
lret
mov
ret
int3
inc
dec
mov
outsl
scas
movsb
push
mov
stc
mov
dec
push
dec
shlb
ljmp
fisttpll
mov
insb
add
lds
in
mov
push
dec
fisubrl
shl
and
mov
xchg
sbb
mov
addr16
das
jg
jns
push
dec
cmp
xchg
xor
lret
dec
or
mov
pop
cld
sbb
dec
add
adc
mov
outsl
jl
pusha
mov
lea
dec
mov
int3
lds
out
popa
es
push
mov
inc
xor
int
les
jmp
inc
add
jge
add
sarb
stos
mov
add
lahf
mov
int
inc
das
insb
xor
imul
add
pop
mov
push
je
pop
xchg
in
or
ss
and
push
sub
push
or
adc
and
std
push
loope
les
in
inc
add
ja
sbb
and
jg
jnp
jmp
inc
mov
jbe
fst
es
add
push
fldenv
and
popf
mov
sahf
ret
xchg
call
je
push
js
inc
and
xor
std
push
xlat
xor
fldcw
ljmp
cmp
mov
out
hlt
add
sub
es
sbb
add
adc
fsubrp
into
sbb
lods
adc
cmpsl
in
xchg
fwait
out
lahf
stc
push
ret
je
push
mov
pop
sti
ljmp
in
dec
fdiv
mov
ffreep
xorb
aam
int3
repz
js
cmc
lock
or
mov
in
or
mov
jbe
je
inc
ja
loop
insl
mov
cmp
mov
mov
icebp
mov
into
addr16
bound
xchg
icebp
mov
or
dec
sub
out
pop
fists
sub
mov
add
lret
lock
shll
stos
mov
les
shrl
xor
inc
jns
sub
shl
mov
test
lahf
in
pop
inc
in
pop
jg
fmul
test
and
into
jl
xor
fs
or
mov
dec
cmc
adc
push
cmp
cltd
push
iret
mov
arpl
mov
or
repnz
fwait
add
jnp
dec
cmp
cmp
sbb
adc
cltd
insl
popf
xchg
adc
push
cmp
mov
movsb
sbb
hlt
ficoml
mov
stos
sbb
dec
and
push
xor
jae
push
cmp
cmpsl
rolb
xchg
jecxz
mov
mov
ljmp
pop
jl
push
cld
sbb
sbb
mov
push
mov
imul
inc
or
int3
and
bswap
repz
in
inc
ret
in
xlat
xor
cli
xchg
ja
iret
jg
shll
fadds
dec
imul
bound
ret
ret
imul
cld
gs
add
popf
jb
jne
jl,pt
pop
xor
add
pop
jge
xor
inc
iret
push
loope
sbb
out
mov
movsl
sbb
out
push
mov
and
jmp
adc
cmp
ss
int3
inc
aad
mov
stc
xchg
adc
pop
movsbl
xor
sub
push
mov
inc
sub
dec
mov
lea
outsb
sbb
push
lods
rolb
je
add
test
mov
jmp
inc
xor
aad
xor
or
jge
fadd
sub
jb
push
dec
fwait
or
xor
cmp
pushl
pop
add
inc
ret
xor
lret
in
push
or
xor
inc
pusha
cmp
sub
fcoml
fcompl
imul
jb
pop
es
pop
sub
mov
out
out
es
push
sub
pop
sbb
cmp
cmp
in
xchg
andb
ja
js
movsb
lcall
push
jl
std
test
adc
pop
fimuls
imul
pop
mov
sbb
inc
mov
sbb
xlat
fwait
mov
andl
push
jg
pop
test
adc
xchg
in
push
cld
popf
cmpsl
cltd
popf
pop
mov
jecxz
loope
push
pop
xchg
mov
fdivs
and
filds
lahf
push
push
dec
incl
outsl
aas
cmp
jb
pop
insb
cmc
adcb
sbb
mov
dec
dec
and
iret
jecxz
lods
call
mov
mov
arpl
jno
mov
dec
sbb
data16
stc
roll
pushl
mov
inc
idiv
inc
lods
xchg
sub
push
cmp
mov
gs
push
add
imul
sbb
push
or
mov
add
add
gs
xchg
lods
mov
scas
repz
mov
jno
inc
push
mov
xchg
mov
pop
sub
daa
mov
add
mov
aas
cmp
sbb
clc
sub
jge
mov
in
sbbl
or
push
dec
sbb
sbb
cmp
xchg
jnp
movsb
lods
fsubp
xchg
ret
mov
mov
mov
push
mov
cmp
mov
mov
jle
decl
fsubrl
dec
sbb
clc
shrb
cltd
add
test
lods
xor
int
jbe
jne
shrb
jle
scas
cmp
sbb
adc
dec
out
cmp
fbld
outsb
outsl
inc
fbstp
cli
loop
sbb
popf
lock
mov
or
cli
mov
std
std
push
sub
test
lock
popf
xchg
sarb
pop
mov
sub
clc
mov
ret
push
jp
xlat
push
xor
pop
mov
mov
ss
iret
scas
push
pop
xchg
sub
sbb
xor
test
pop
push
lock
xor
push
jge
pop
lods
testb
and
fdivs
out
adc
loope
mov
out
leave
dec
mov
cltd
push
sarl
xor
and
arpl
dec
xchg
fsubrl
mov
adc
xchg
je
leave
jl
pop
add
leave
cmpsl
push
cmp
lds
movsl
xchg
popa
pop
clc
xor
sub
ss
sub
out
xchg
pop
adc
pop
ja
pop
xor
add
mov
iret
or
lea
adc
or
aaa
es
enter
shlb
cmpsl
or
add
xchg
leave
xchg
pop
imul
fmuls
bound
adc
sbb
dec
cmp
push
xor
dec
les
adc
mov
sahf
inc
push
mov
dec
into
xor
push
mov
pop
jg
add
sub
incl
call
movsb
in
add
sbb
shlw
in
call
lea
pop
aas
jns
xor
repz
imul
dec
mov
lods
and
sbb
push
mov
mov
jmp
xchg
test
es
adc
fistpll
mov
mov
mov
dec
push
xor
mov
add
xchg
stc
mov
inc
mov
fdivr
add
lea
rcrb
push
mov
jle
cmp
pcmpgtd
lcall
xchg
cmp
and
leave
xchg
movsl
cli
mov
das
aad
and
enter
mul
cmpsl
lret
mov
sub
and
mov
mov
pop
adcl
ds
adc
adc
aam
test
xchg
xrelease
test
leave
js
dec
xchg
jl
mov
pop
int3
xchg
or
jns
pusha
xor
je
popf
aam
test
pop
mov
xchg
cmpsl
mov
orb
aas
add
sbb
data16
adc
mov
in
fisttps
adc
sbb
imul
scas
daa
shlb
mov
outsb
inc
add
js
aaa
js
jmp
push
insl
insb
push
call
cmpb
jno
std
add
out
jb
sbb
or
sbb
call
jbe
xchg
add
jge
sbb
fisttpl
adc
and
int
fsubl
lret
adcb
mov
sub
dec
add
xor
imul
les
pushf
sub
aas
sti
inc
enter
cmpsb
cltd
lock
fldl
int3
push
iret
cmpsb
notw
dec
nop
or
sbb
adc
or
int
jg
sub
or
push
xchg
shll
mov
stos
arpl
push
add
pop
cmpsb
sub
pop
xchg
jle
dec
sub
cltd
lcall
lods
dec
fcmovnb
jl
mov
xchg
mov
adc
sbb
repz
jp
nop
lds
or
xor
inc
insl
jge
js
scas
jmp
mov
sub
rol
sahf
loop
mov
pusha
jns
jo
shrl
lds
cmp
mov
sahf
sbbl
out
xchg
shll
sbb
out
sub
mov
xchg
adc
popa
inc
out
int3
push
lret
cmp
jnp
sahf
add
and
adc
lock
jecxz
push
into
pop
sti
adc
xorl
aad
mov
filds
xchg
add
ss
push
pop
mov
outsl
xchg
pusha
lods
mov
or
mov
ror
push
sub
lret
push
neg
xor
cmpsb
push
lcall
fwait
insb
rcrl
push
popf
shufps
xchg
enter
sub
les
mov
push
inc
push
lea
xchg
xor
push
xchg
cli
mov
rolb
sub
or
fstpt
xlat
adc
xchg
mov
test
sets
xchg
sub
std
mov
adc
and
daa
outsb
leave
sub
ja
push
pop
mov
sahf
lds
cltd
mov
popa
leave
js
fstpl
cmp
data16
fidivl
fwait
push
stc
fdiv
movsl
cli
inc
cld
cld
sahf
stos
cwtl
cld
test
mov
scas
les
mov
push
sub
push
adc
pop
in
rorb
loopne
mov
loopne
popl
les
sbb
mov
adc
stc
adc
pop
shll
or
addr16
dec
or
dec
and
pop
xchg
sbb
sub
roll
scas
add
icebp
xor
adc
pop
cs
xor
pop
in
pop
xor
insl
cwtl
subb
daa
icebp
int3
sbb
mov
add
xor
xor
sub
sub
lds
data16
int
ret
dec
pop
rcr
or
jp
ja
addb
imul
sub
ficompl
xchg
repz
dec
arpl
lods
mov
mov
mov
cmp
out
js
sbb
je,pt
jbe
xchg
outsb
adc
iret
jg
in
add
mov
mov
ljmp
mov
int3
dec
ljmp
cmp
out
add
rclb
cmp
push
push
into
cmp
xchg
je
push
sbb
fildll
enter
sbb
enter
addr16
ret
imul
popf
cs
xor
and
push
dec
notb
xchg
ficomps
insb
mov
lcall
pop
xchg
sub
push
lods
imul
inc
and
in
decb
insl
inc
cmp
dec
cmp
ja
add
popf
fninit
cmp
pop
sbb
ds
push
sahf
jno
cmp
lods
jno
jns
or
inc
dec
cmpsl
insb
sbb
push
sbb
adc
pop
inc
xorb
fs
pop
pop
sbb
add
insb
lcall
jne
dec
adc
adc
mov
hlt
xor
sbb
cmp
icebp
jo
and
xchg
jbe
push
dec
ljmp
ret
pop
insb
sub
jns
ja
mov
je
and
cli
mov
scas
shll
dec
jbe
stos
mulb
out
popa
shl
popa
imul
movsl
mov
sbb
push
sarb
mov
dec
jnp
int3
push
rcl
xor
dec
mov
jg
add
mov
cmp
cmc
outsb
stos
dec
cmpb
mov
pop
pop
mov
push
and
in
sub
push
in
add
add
ss
adc
incb
stc
adc
mov
data16
or
subl
jb
imull
mov
push
xchg
add
push
testb
add
jg
xor
cmp
jge
adc
jns
push
sbb
mov
inc
push
repz
mov
lret
pop
cmp
xchg
aaa
cli
fcoms
cmpsb
mov
sbb
outsl
stos
push
add
push
or
sar
adc
inc
add
into
dec
mov
je
ret
or
lcall
add
xorb
fcoms
popa
sbb
sub
aas
repz
push
sti
scas
and
xchg
xchg
sbbb
dec
jae
add
ret
das
inc
xor
js
mov
into
push
pop
pop
fs
mov
add
adc
adc
jmp
cmpsl
sbbl
cmp
sbb
add
sbb
ljmp
sbb
int
ja
mov
loope
jns
das
or
xchg
insl
push
scas
mov
jge
test
add
fsts
adc
sub
and
xor
mov
push
sbb
xchg
jle
lods
ficomps
pusha
mov
movsb
cmp
out
pop
notl
push
jmp
jae
loop
es
push
stos
adc
mov
xchg
stc
mov
lods
movsb
jecxz
loope
adc
ljmp
mov
inc
into
mov
inc
dec
bound
int
mov
call
or
sub
pop
mov
mov
cmp
mov
pop
xchg
adc
sbb
mov
jnp
or
ret
pop
mov
sahf
enter
aad
dec
sbb
rorl
sbb
lods
push
pop
icebp
or
test
inc
and
adc
xor
sbb
addr16
fstpt
inc
cs
adc
cmc
pop
andl
push
dec
mov
cmp
insl
aam
sbb
stc
mov
mov
or
js
jg
push
inc
xor
arpl
int
mov
push
and
pop
xor
movb
jmp
pusha
sub
add
cmp
push
or
scas
or
fcomps
mov
fstl
lahf
add
shll
in
push
mov
jns
inc
sbb
fcompl
movsl
jae
inc
adc
sbb
xor
xor
xchg
xor
sbb
icebp
ds
loopne
lock
dec
jle
jbe
cltd
fstl
sti
jmp
xchg
cltd
fcomip
mov
repz
lds
cmp
data16
cmp
in
aad
push
pushf
rcll
adc
and
lret
xor
into
or
mov
std
xor
movsb
mov
lcall
sahf
xchg
mov
and
mov
sub
cmp
pusha
out
fdivrs
mov
out
xchg
mov
jns
jl
test
sbb
lods
xchg
mov
popf
outsb
lods
outsb
inc
cmp
fcompl
ret
push
inc
repnz
and
jge
test
mov
jmp
cmp
mov
mov
mov
leave
mov
jmp
ljmp
push
sahf
sbb
xor
and
xor
lahf
xchg
cmp
aas
xchg
pop
shlw
cmp
stos
repz
mov
jae
ret
mov
loope
jo
jb
in
mov
xchg
dec
shrb
sbb
cltd
mov
dec
test
adc
sub
into
pop
sbb
cmp
or
scas
lahf
roll
cmpsl
cmp
inc
enter
mov
mov
decb
imul
ret
test
cmp
loop
daa
addr16
addr16
sbb
sub
inc
xchg
adcb
in
mov
movsb
std
das
loopne
aam
and
popf
push
xchg
inc
mov
mov
push
aad
inc
js
add
cmpsl
movsb
cmp
mov
inc
lock
sbb
out
scas
ficoml
cld
mov
jp
or
in
popa
cmp
out
inc
sub
cltd
dec
mov
inc
add
push
leave
subl
adc
sub
cmp
sbb
add
lods
push
scas
fiadds
imul
mov
mov
cmp
fs
out
loopne
loope
sbb
jae
mov
sbb
cmpl
lret
jne
int3
in
cmp
xor
jge
lret
pop
xor
sub
sarb
mov
cmp
jns
mov
jb
pop
std
rcrb
cmp
xchg
push
fldl
mov
filds
out
xor
or
mov
ss
pop
out
ffreep
std
sbb
movsl
lcall
pop
xchg
ret
sub
lods
lock
cmpsb
inc
scas
pushw
enter
in
mov
fisubl
mov
insb
aad
adc
ret
sub
mov
lea
mov
or
mov
in
inc
inc
jg
sbb
fildll
xor
and
cli
fcmovnb
repnz
lods
jae
xor
adc
mov
fsubs
mov
addr16
pop
lcall
insl
ja
sbb
sbb
adc
les
gs
adc
sbb
div
loop
sbb
sbb
das
cs
cmp
xchg
mov
jmp
mov
std
dec
mov
imulb
inc
mov
scas
mov
cmpsb
mov
adcl
addr16
in
aam
sbb
pop
lret
cmpsl
mov
je
inc
jnp
ret
pusha
cmp
data16
cld
insb
movsb
dec
ljmp
nop
test
sub
call
in
js
pop
dec
add
adcl
scas
or
jmp
jno
pop
shlb
daa
mov
xchg
cld
int3
adc
cmpsb
cltd
aas
xchg
stos
in
adc
add
sbb
sub
mov
mov
push
inc
jo
inc
add
ret
xor
mov
insb
mov
add
pop
pop
xor
ss
fsubrl
fucomi
fildl
mov
xor
test
rolb
push
push
mov
int
test
jmp
ljmp
cltd
in
testb
arpl
sti
sub
add
call
xchg
jo
lock
aad
xor
ljmp
adc
xchg
bound
out
add
out
or
pop
cmp
push
lret
or
std
cltd
xor
sub
dec
mov
aas
or
outsl
jbe
rcrb
out
mov
adc
in
or
enter
xor
add
inc
in
sbb
or
xlat
jnp
movsl
ficoml
sbbb
out
jbe
xchg
mov
pop
jae
inc
jge
jnp
add
lea
jecxz
cmp
pop
or
push
mov
pop
loope
xchg
xor
std
loopw
sbb
jp
mov
adc
push
imul
scas
sbb
mov
xor
les
cmp
data16
xor
jp
addr16
aad
pop
popa
icebp
push
mov
mov
xor
cmp
push
dec
cld
inc
sbb
push
jl
stc
repz
out
cwtl
arpl
xchg
dec
stos
cmpsb
sub
hlt
aas
rcrl
pushl
insb
xchg
lea
adc
mov
xchg
jo
cmp
dec
lea
js
jg
mov
and
std
pop
sbb
pmullw
jb
jbe
inc
fistpll
xor
clc
mov
mov
in
or
out
push
addb
inc
fsubp
or
push
je
adc
nop
scas
jge
nop
out
xchg
aad
push
std
mov
ret
imul
pop
jae
cmp
inc
mov
jge
cmp
sbb
push
xchg
loope
fidivl
orl
mov
in
mul
ss
mull
out
and
and
mov
pop
mov
jecxz
fcmove
mov
pop
mov
mov
jecxz
add
lock
repz
sub
pop
sbb
mov
pop
dec
pop
xor
les
or
mov
fdivp
call
jge
or
lahf
and
icebp
test
pop
dec
mov
fsubp
dec
push
fcoml
sti
lcall
and
xor
jae
mov
push
and
outsb
aad
stos
push
and
mov
xchg
pop
addl
pop
pop
cltd
pusha
jecxz
jmp
jmp
mov
inc
mov
mov
mov
add
lods
scas
jecxz
lds
mov
nop
jo
jne
pop
out
mov
repz
jg
jnp
cmp
lds
jle
dec
les
sti
add
sub
sbb
push
jg
mov
inc
pop
push
mov
dec
add
in
inc
mov
rorl
outsl
push
or
dec
xchg
out
xchg
push
xchg
xchg
aas
dec
push
imul
jb
mov
out
jle
mov
fldcw
fwait
jb
sbb
jp
jo
fists
cmp
fwait
fwait
shrb
inc
cs
insb
shlb
adc
dec
mov
mov
arpl
das
jg
sbbl
mov
xor
cmpsl
mov
push
mov
and
movsl
and
cwtl
addr16
push
add
adc
lahf
jecxz
cli
mov
add
testl
scas
lock
xlat
jle
adc
add
cwtl
lret
sbb
lret
call
inc
and
jle
mov
add
xor
push
pop
bound
inc
scas
data16
cmc
into
insb
test
loopne
sub
test
lahf
pop
loop
test
dec
icebp
sbb
int3
rcr
shl
pop
cmp
clc
pusha
imul
pop
sbb
push
call
fnstenv
xor
inc
add
roll
int
pop
imul
xor
pop
pop
push
mov
and
adc
div
sbb
pop
jne
push
and
enter
sub
int3
or
rolb
leave
hlt
cmp
popf
mov
cmp
mov
arpl
push
jg
imul
jecxz
push
pushf
jp
mov
sbb
push
shlb
xor
mov
roll
or
jmp
pop
lods
shr
aas
mov
cmp
mov
aad
pop
stos
idivl
jae
jne
mov
dec
hlt
fs
adc
ss
imul
ds
icebp
xorb
sbb
subb
and
dec
mov
insb
push
or
push
sbb
xor
int
imul
adc
or
lods
adc
sbb
mov
subb
ljmp
leave
sub
add
or
inc
and
dec
fstl
scas
sbb
jl
push
ficoms
ljmp
jmp
pop
imul
pop
sarl
ret
sub
mov
jo
test
sbb
inc
inc
add
je
fisttpl
clc
shlb
std
adc
ffree
icebp
sub
fs
and
fwait
and
arpl
push
mov
cmpsb
and
push
enter
mov
std
push
int
push
ds
jb
mov
inc
push
dec
jge
jae
mov
or
cltd
int3
pop
int3
inc
hlt
enter
add
popf
mov
rcrb
mov
sbb
scas
insl
lahf
cmpsl
fadds
xorl
fcomp
mov
sub
data16
inc
add
sbb
loope
xchg
push
push
cmp
lcall
movsl
ret
scas
cmpsl
cmpsl
aam
lahf
imul
xchg
ljmp
das
int
sub
cmp
sub
popf
icebp
outsb
std
pop
or
loope
xchg
dec
pop
imul
pushf
mov
test
int
cmpl
push
lock
or
loope
inc
cmpsl
sub
mov
call
sub
xchg
mov
adc
fidivrs
and
or
cmp
ds
or
pop
les
push
lods
mov
push
or
jnp
or
cmpsb
dec
je
sbb
fisttpll
fs
and
out
mov
pop
and
adc
enter
mov
lcall
jno
dec
push
out
imul
cmp
lea
mov
push
jo
and
ss
add
jl
fyl2x
stos
lret
xorb
loope
pop
pushf
rcr
push
adc
ss
ljmp
icebp
cmpsl
jge
ficoml
test
add
sbb
cltd
ja
mov
mov
push
icebp
jecxz
push
mov
sub
pop
dec
jg
fadds
fadds
or
xor
ja
aad
lret
mov
popa
data16
dec
and
add
nop
mov
aam
mov
mov
adc
insl
pusha
dec
jnp
xor
mov
mov
adc
mov
or
daa
fmul
mov
sbb
rclb
add
fstl
jne
rolb
and
mov
iret
fnstsw
pushf
pop
filds
jp
iret
rcr
clc
dec
sbb
xchg
push
mov
push
add
sbb
mov
out
and
sbb
mov
dec
lods
pop
cli
mov
movsb
stc
adc
dec
mov
nop
xor
dec
pop
ljmp
call
std
dec
mov
sub
shll
dec
jecxz
fstpl
scas
pop
fdivs
sub
pop
jno
movsl
pextrw
pop
push
cmp
nop
mov
into
aad
mov
repz
push
xorl
jge
xchg
mov
nop
dec
sahf
jg
push
clc
and
and
push
adc
mov
sub
insb
push
rorb
pop
pop
push
insb
arpl
cld
loop
outsb
pop
dec
cmc
outsb
cltd
sub
ja
jnp
cmp
imulb
inc
jnp
adc
sub
hlt
das
std
je
adc
sub
mov
adc
push
outsb
sbb
shrl
dec
daa
inc
gs
xor
and
bound
ret
adc
xchg
dec
mov
xor
mov
test
cmpsl
and
in
sub
sarl
je
imul
xchg
sahf
mov
cmp
je
imul
push
int3
or
adc
das
rorl
gs
test
sbbl
pusha
push
int3
jnp
jns
push
sbb
jmp
subb
fidivs
aam
xorl
out
sub
xor
inc
lret
mov
lock
call
dec
lcall
inc
enter
mov
and
rcll
sbb
cmp
xchg
cmp
xor
xor
arpl
mov
sub
sbb
imul
stmxcsr
inc
cmp
ds
pop
ljmp
sti
adc
mulb
sbb
ljmp
ds
mull
cmovl
cwtl
repnz
sub
scas
int3
mov
orl
sbb
sub
add
into
mov
jne
pushf
test
jne
mov
cld
inc
sbb
jp
iret
adc
mov
cmc
pop
xor
imul
gs
mov
lcall
ljmp
or
mov
ficompl
inc
dec
lret
xor
pop
hlt
clc
mov
cmpsb
cli
push
cld
enter
mov
or
xchg
fisubl
mov
and
mov
mov
sbbb
jp
stos
fidivl
gs
add
pushl
add
ds
lds
aas
add
fsubrl
sbb
push
pop
inc
add
push
stos
dec
inc
adc
inc
shll
fisubs
xchg
lods
test
lahf
shl
test
movsb
stos
cwtl
xchg
insl
ja
dec
and
sbb
lods
call
push
aaa
sahf
repnz
adc
pop
mov
lret
mov
pushf
dec
das
mov
gs
pushf
cld
mov
mov
sbb
adc
addb
in
add
add
adc
mov
je
push
and
je
nop
xchg
xchg
push
hlt
outsl
add
outsb
scas
inc
shll
push
pop
mov
and
mov
fidivrl
xor
push
loop
inc
in
aad
icebp
jno
cs
sub
xchg
dec
and
and
and
lods
pop
mov
pop
adc
lea
test
inc
dec
and
jae
scas
call
push
xchg
xor
mov
jb
xchg
push
jae
test
repnz
mov
mov
inc
adc
je
xlat
adc
insb
adc
push
nop
pop
into
xlat
test
mov
dec
sti
dec
mov
dec
mov
adc
mov
das
lcall
lds
mov
mov
sub
popa
jmp
mov
shlb
add
mov
add
leave
aam
push
or
popf
push
xlat
cmp
mov
push
jecxz
dec
aam
fcmove
cmc
add
and
sbb
mov
sbb
cmc
rcrb
xor
ljmp
push
ja
sti
adc
enter
fistps
test
int
add
mov
xlat
mov
out
aas
sarb
scas
xor
gs
xlat
adc
popa
xlat
test
push
fstps
sbbl
add
sub
movsl
xlat
push
pop
adc
inc
xchg
push
xor
lret
mov
fldl
mov
jge
loope,pt
mov
push
mov
repz
cmpsl
cltd
mov
fwait
stos
adc
sbb
pop
iret
leave
rcrl
ret
orb
mov
popf
lods
aas
push
imul
pop
hlt
pusha
mov
cmp
jb
or
fsubl
add
test
repnz
lahf
or
sub
sbb
jno
int
sbb
fidivrl
ret
mov
fcomp
rorl
mov
jns
js
jge
push
outsl
stc
icebp
leave
adc
lret
push
lds
adcb
adc
es
data16
mov
inc
dec
cmp
loopne
push
inc
jp
push
cld
inc
mov
mov
scas
push
scas
pmovmskb
scas
call
popa
je
add
adc
cmp
jecxz
movb
cmp
jno
add
push
cmpsl
push
mov
mov
sub
sub
push
mov
inc
orl
mov
add
xchg
in
clc
dec
nop
gs
cld
out
adc
das
and
push
jno
scas
pop
xchg
or
cmc
cli
xchg
add
add
jl
fisubl
mov
dec
pop
in
ss
cmpsb
ret
cwtl
leave
cmp
sbb
jge
das
pop
arpl
mov
add
push
lea
mov
popa
mov
mov
xor
das
mov
push
cmpsl
xchg
cld
sbb
pop
mov
movb
inc
std
shrl
add
je
inc
aad
es
or
mov
jmp
add
mov
or
repnz
outsl
scas
in
jne
adc
push
testl
outsb
adc
or
jb
cld
int3
popf
jae
cs
in
dec
cld
adc
daa
insl
pop
repz
test
xchg
jmp
pop
ljmp
iret
les
in
xchg
jnp
jl
pop
inc
push
popa
mov
test
jmp
test
push
xchg
pop
push
mov
jle
aad
xchg
cwtl
inc
pop
mov
psubb
mov
ret
inc
lds
setge
rclb
lcall
sub
or
pushl
mov
inc
sahf
movsb
lahf
inc
xor
cmp
ja
out
and
xor
lods
imul
fistpl
adc
add
xchg
push
out
dec
int3
add
mov
outsb
cmpsl
inc
int3
mov
mov
lock
cmc
jmp
mov
repz
fs
ss
test
jbe
dec
in
ds
pop
xchg
jno
and
negb
popa
adc
mov
jo
ds
xchg
test
fptan
xor
jl
push
xor
outsl
dec
aad
push
ficoml
xchg
adc
ljmp
shr
stc
mov
or
or
repz
push
mov
or
mov
rorb
lahf
add
cmpsl
sbb
test
mov
adc
jo
orl
push
and
je
push
andb
mov
add
push
mov
fsubr
adc
orb
icebp
sahf
dec
and
ss
mov
adc
les
adc
stos
lret
sbb
inc
push
fsubs
adc
les
adc
hlt
ja
leave
mov
mov
mov
lret
mov
add
out
and
inc
rcll
mov
mov
push
add
stos
add
lret
outsl
dec
aas
and
in
dec
mov
push
xchg
dec
mov
inc
arpl
pop
cmp
dec
fmul
psrlw
leave
pop
lea
stos
iret
fwait
test
imul
arpl
movsb
mov
lock
test
std
inc
shl
xor
push
cltd
daa
adc
adc
stos
and
mov
in
push
mov
lcall
add
jg
loop
inc
testl
push
cmpsb
cmpb
pop
test
add
adc
sub
jge
mov
test
add
shll
sub
mov
and
jp
push
js
xor
inc
cmpsb
mov
out
jne
insb
mov
jecxz
dec
jbe
xlat
std
inc
cmp
imul
mov
xor
push
dec
sarl
pop
mov
addr16
test
clc
test
dec
xchg
xor
mov
jp
enter
mov
mov
xor
icebp
xor
jb
scas
push
popa
xor
idivb
inc
push
fiaddl
dec
lret
mov
xchg
mov
shlb
dec
push
imul
adc
fistpl
dec
push
xor
push
mov
bound
pop
jecxz
jmp
push
adc
aad
cmc
pop
outsl
in
insb
out
sbb
sbb
mov
es
jp
adc
lock
jbe
cmpb
sub
mov
out
adc
mov
iret
mov
mov
push
push
test
xlat
iret
je
and
das
icebp
testb
ja
pop
push
mov
les
push
outsl
mov
mov
sti
and
les
and
leave
aas
lods
aam
dec
aam
stc
and
push
mov
imull
sub
adc
out
sarb
std
pop
adc
xor
out
inc
jns
in
out
fadds
xchg
aas
cmpsl
mov
cmpsb
push
xchg
shll
cmc
jne
mov
fsubl
les
or
mov
adc
xor
sbb
mov
inc
adc
cmp
xchg
pop
out
icebp
nop
dec
inc
fmuls
pop
push
push
rcrb
jmp
cld
cwtl
popf
dec
shrl
sbb
jae
push
dec
subl
xor
das
cwtl
cs
add
sarb
rcl
nop
cmpb
imul
lret
stc
mov
popa
loope
fdivl
push
jl
xchg
xor
outsl
mov
xchg
sbb
gs
jmp
idivb
repnz
fisttpll
pop
fisubrs
jb
cwtl
insb
and
xor
mov
in
int3
push
neg
cmpsl
gs
insl
ret
rcrb
pop
mov
cltd
mov
sub
dec
sahf
jne
inc
inc
sub
pushf
imul
add
pop
lret
out
leave
icebp
aaa
sub
mov
jl
push
xorl
dec
out
mul
push
pop
and
inc
cwtl
gs
xorl
fisubrl
pop
addr16
pop
fcoms
push
mov
sbb
push
push
cmp
inc
mov
xor
stos
flds
inc
mov
xchg
and
lahf
lds
rol
or
xor
adc
inc
aaa
cmovb
pop
and
push
js
mov
or
fldenv
int3
or
bound
push
loope
jae
push
std
in
jae
popa
push
push
aad
aas
mov
sbb
jbe
or
popf
jp
subb
loop
insl
inc
notl
lcall
mov
adc
jae
inc
mov
out
fisubs
xchg
cmp
mov
jl
sub
pop
xor
repnz
dec
divps
cld
iret
mov
inc
pop
sub
mov
push
sbb
fmul
gs
cs
push
dec
xchg
cmpsb
mov
lss
xlat
outsl
dec
dec
dec
ret
dec
fistps
xchg
in
or
movsl
inc
or
es
ss
lods
jbe
pushf
gs
and
xchg
jne
lock
mov
aaa
pop
ja
mov
cmp
in
insb
add
jecxz
sub
outsb
adc
in
ds
addr16
xchg
fidivs
and
cmp
jbe
sub
stc
sarl
xor
in
loope
out
ja
jo
push
adc
or
xlat
test
in
mov
mov
lods
jb
jmp
and
daa
mov
repnz
bound
push
and
fdivs
shll
lret
jo
mov
std
lahf
cmpsb
jb
mov
jecxz
mov
mov
xor
cltd
inc
jmp
shrl
ja
mov
mov
push
xlat
mov
xorl
jb
stos
sub
rolb
push
jae
aam
jg
cmc
repnz
mov
dec
sub
sbb
je
test
or
movsl
rorb
jg
push
xor
jge
das
lret
cwtl
out
roll
imul
repnz
jge
gs
sub
mov
rcrl
jecxz
jo
cltd
or
icebp
scas
cmp
or
loopne
inc
enter
movsb
inc
dec
dec
xor
mov
lea
pxor
movsb
dec
mov
lahf
mov
test
mov
in
mov
insb
push
xchg
divl
les
and
mov
call
int3
adc
enter
inc
aaa
add
pop
lods
dec
dec
fldcw
jne
imul
add
lret
imul
rorl
jecxz
mov
lret
xor
loop
in
pop
lret
fisubrs
enter
jg
push
sbb
xchg
insl
outsb
pop
sub
add
test
cmp
lock
int
jle
lock
mov
inc
pop
out
push
icebp
adc
sbb
repnz
daa
xchg
xorb
and
movsl
xor
fldl
cmpsl
test
pop
jg
enter
mov
push
bound
int3
cmp
jo
dec
movsb
lock
out
ss
cmp
sub
push
lret
mov
fcoms
hlt
mov
xor
lods
in
into
xchg
mov
pushf
lock
cmc
fidivs
fwait
sbb
push
lods
sbb
pop
scas
cmpsb
inc
sar
inc
cwtl
fistpl
outsl
or
cmp
push
mov
fcmovnbe
add
cmp
pop
daa
add
adcl
cmc
nop
sbb
rolb
xchg
and
rdpmc
cmp
jle
jno
jp
xchg
cmpsb
mov
inc
or
cmp
addr16
xchg
jnp
push
inc
mov
xchg
jge
jae
lea
ret
ja
mov
shrl
push
or
mov
push
mov
dec
pop
push
std
testl
mov
inc
aam
pop
ja
ljmp
jbe
or
das
xor
out
mov
lock
mov
jmp
mov
add
mov
jb,pt
jo
mov
mov
cmp
in
enter
lods
int
jo
dec
imul
xor
sbb
inc
mov
aas
ds
dec
shl
movsb
insb
sub
sbb
fucomip
les
xor
and
scas
push
add
popf
fwait
xor
xlat
xlat
mov
and
jecxz
xlat
inc
pop
cmp
sub
pop
shll
cwtl
out
add
movsl
out
ret
imul
push
inc
in
ficoml
or
add
mov
cmp
add
in
test
pusha
xchg
xchg
mov
cmp
fldt
clc
stc
pushf
stos
add
push
and
cmp
out
or
scas
je
dec
fs
sub
add
or
leave
roll
cld
out
int
in
jns
stos
mov
mov
les
mov
clc
push
and
in
dec
popf
cmp
int3
out
inc
pop
mov
ss
push
test
adc
inc
jnp
adc
inc
push
ret
xchg
pushf
popf
rclb
shrl
sub
sbb
xlat
inc
lock
neg
shlb
imul
loope
lcall
or
pop
or
shl
into
shll
sbb
and
int3
jae
adc
xor
nop
and
sbb
sarl
cwtl
push
cmp
aas
lret
inc
outsb
dec
dec
imul
lret
adc
push
sub
scas
sbb
dec
sub
jmp
jbe
push
ficoml
add
clc
mov
push
hlt
add
loop
aaa
dec
imulb
and
mov
popf
cmp
leave
cli
inc
andl
loope
jecxz
aas
jnp
fldenv
lret
mov
leave
fsts
xchg
leave
in
mov
call
outsl
xchg
test
pushf
ds
lahf
mov
notb
lods
dec
shlb
das
cli
add
outsb
insl
mov
mov
iret
aas
mov
jae
lods
mov
ret
scas
fstl
and
lods
rorb
and
adc
cmp
adc
nop
mov
fnstenv
out
pop
loop
insb
scas
cmp
push
push
pop
sti
pop
int
fwait
clc
cld
cld
mov
jmp
push
push
sbb
cs
or
xor
mov
sahf
mov
faddl
push
push
std
sbb
je
or
xor
and
push
sbb
pop
pusha
js
mov
sbb
lret
inc
sub
sub
xor
mov
loope
lds
js
jne
int3
jbe
mov
jl
dec
add
push
xor
xor
mov
test
callw
shrb
cmp
cmp
lods
lret
lcall
jge
lea
dec
lcall
ljmp
dec
adc
sbb
fmull
push
call
xor
ret
insb
mov
imul
xchg
into
xchg
push
adc
shrb
xor
ljmp
pop
pop
not
testb
mov
int
fs
fimull
and
ret
adc
fnsave
add
and
mov
mov
sub
mull
pop
push
cld
and
cmc
sub
iret
adc
test
xchg
addr16
lock
cmp
cmp
mov
adc
iret
sbb
loopne,pn
fisubrs
nop
xlat
iret
push
fistpl
roll
mov
cli
mov
pop
mov
aas
idivl
lock
mov
jge
sub
mov
js
add
pop
adc
cwtl
mov
stos
jge
jg
stos
into
ret
test
stc
and
or
inc
jp
int3
gs
das
cmpsl
sbb
xlat
in
fsubl
movsl
push
iret
push
mov
push
xor
scas
xchg
sub
ljmp
insl
shll
lgs
mov
scas
in
mov
xor
ss
test
inc
adc
ja
imul
xor
clc
push
inc
daa
jae
mov
gs
jbe
stos
dec
mov
lods
lods
fcomps
andl
cmp
jl
ret
mov
cmp
dec
jmp
stos
mov
sbbl
or
lret
inc
int
scas
cmp
cltd
inc
lahf
inc
std
aam
mov
jl
adc
xchg
add
lods
clc
jb
xchg
dec
aam
push
test
incl
cmp
push
push
mov
ljmp
ds
aad
and
aad
pop
dec
decb
movaps
jno
jle
inc
call
sahf
arpl
shrb
and
out
xor
or
std
mov
sub
repnz
sets
dec
mov
or
sub
sbb
adc
and
jns
es
mov
adc
sub
and
pop
push
jmp
or
out
das
inc
mov
cmpb
lcall
add
push
lcall
dec
subl
arpl
xor
cli
mov
mov
cmpsb
sub
xor
sub
xor
imul
cltd
jne
sbb
jle
xchg
adc
mov
mov
jge
jb
pop
daa
mov
sub
int3
dec
into
pop
or
add
xor
sbb
jno
mov
push
or
stos
add
mov
inc
mov
popf
inc
add
mov
inc
xchg
sar
xchg
inc
scas
jecxz
rcl
or
mov
sti
icebp
dec
cmp
repnz
sbb
dec
push
mov
fs
add
movsl
push
rcrb
test
or
arpl
push
orb
jns
fmul
or
push
add
cltd
mov
and
dec
movsl
hlt
out
inc
rol
inc
pop
ficomps
sub
test
dec
pop
enter
and
sub
add
push
icebp
subb
int
addl
mov
add
adc
gs
sbb
jbe
aas
mov
xchg
iret
jecxz
dec
outsb
dec
cld
retw
int3
ss
aaa
push
jae
out
fisubrl
mov
cmp
orb
test
nop
dec
or
pop
xchg
mov
and
outsl
imul
pop
mov
ret
jb
cmp
cmc
add
shlb
das
jbe
repz
outsl
test
addl
pop
cmp
stos
dec
sub
sub
jmp
fldenv
fstpl
pop
lcall
cmp
orl
mov
xchg
mov
dec
sub
push
and
add
xchg
and
and
add
dec
stos
xchg
mov
pushf
ja
push
mov
clc
cs
mov
pop
int
mov
outsl
mov
ja
adc
and
fs
sarb
popa
shrl
fsubr
in
jb
cmp
fcmovnbe
hlt
mov
xchg
inc
sub
sub
lret
inc
jbe
fidivrs
sub
popa
inc
aaa
sub
fnstsw
mov
mov
xor
fsubl
cltd
xor
jl
iret
out
ret
push
ret
and
orl
pop
cwtl
inc
in
sti
pushf
adcl
cmp
call
push
or
push
mov
call
incl
jnp
pop
jp
gs
mov
adc
pushl
jno
and
out
or
cli
mov
or
stos
dec
enter
or
xchg
cmp
lcall
push
and
mov
shld
stos
jb
xchg
mov
dec
out
cld
cmp
cld
and
and
js
cmpb
bound
mov
test
testl
rol
cmpsb
stos
cmp
mov
pop
and
cltd
mov
adc
push
add
clc
fsubrl
fadd
sub
xchg
xor
cmp
shlb
daa
xor
jbe
inc
stos
dec
outsb
fadd
in
or
mov
mov
jecxz
rol
negb
cs
push
rorb
add
sbb
push
xchg
mov
mov
xor
sti
cmp
sub
xor
and
int
xchg
xor
xchg
mov
enter
pop
dec
cmp
jl
xor
ret
and
or
mov
jne
outsl
scas
jge
stc
sub
loop
out
push
jnp
aas
jo
stos
sub
xchg
cmpb
cld
dec
aas
andb
ds
hlt
cmp
negb
fmuls
fisttps
adc
shl
in
jo
mov
arpl
sbb
ret
mov
aam
adc
in
movswl
mov
mov
xor
in
jmp
movsl
repz
out
lcall
out
mov
out
in
into
arpl
movsl
xor
movsl
sbb
out
test
jne
jmp
push
aaa
inc
cmp
xchg
cmpsl
or
in
ret
and
int
dec
sub
sub
sub
lret
and
sub
pcmpgtw
dec
mov
mov
lock
sti
call
test
xlat
fstpt
pop
xchg
stos
inc
cmp
pop
mov
xlat
fnstenv
mov
nop
scas
inc
dec
and
xchg
stc
clc
orb
inc
xchg
mov
das
adc
or
stc
lds
mov
sbb
xlat
js
xchg
or
push
or
xor
push
andl
xchg
fnsave
pop
or
push
add
push
movsb
mov
pop
fnsave
nop
loop
imul
lea
cmp
push
es
or
dec
rol
pushf
mov
dec
call
out
lcall
mov
aas
inc
cmp
daa
mov
movsl
xor
test
mov
movsl
jo
aad
and
add
aad
mov
adc
or
cmp
jo
jne
call
xor
sbb
outsl
rcl
lods
and
xchg
fisubs
adc
insl
mov
imul
jns
shrl
aaa
scas
mov
repnz
xor
popa
dec
sub
ljmp
ja
jg
pcmpgtw
fmuls
jge
xor
push
fcomps
aad
repz
insl
jg
in
fwait
pop
test
ret
mov
xchg
push
mov
stos
std
pop
popf
mov
mov
adc
mov
pushf
pop
jae
push
adc
mov
push
cmp
icebp
push
sbb
call
enter
jmp
cs
pop
lahf
lds
cwtl
daa
fsubr
in
jle
push
and
adc
int3
sub
sarb
test
xor
jno
add
sbb
adc
das
cmp
iret
aaa
push
and
lahf
cmp
pop
fcompl
jbe
fdivrl
push
xchg
push
add
iret
xchg
test
xor
fstps
xchg
ffreep
out
and
mov
mov
imul
enter
addl
enter
push
xor
jo
jle
pop
jl
sbb
frstor
loop
outsb
enter
push
mov
mov
shlb
shlb
or
cs
cmpsb
sti
push
call
and
lret
push
out
jbe
or
mov
dec
push
imul
push
or
setae
test
cmc
push
popl
rorb
popf
mov
dec
xchg
test
and
sub
divb
js
insl
mov
insb
fadd
mov
fdivrs
lods
lret
int
add
xchg
cmp
and
push
stos
repnz
push
pop
mov
add
inc
fsubrl
xor
scas
sbb
aam
add
pop
icebp
adc
aam
mov
cmpsb
mov
or
push
fbld
sub
les
dec
lcall
stos
outsb
adc
xchg
loop
data16
push
stos
xchg
es
mov
jp
mov
in
loop
pop
loop
cmpb
leave
es
mov
lods
inc
dec
or
cmc
cmp
inc
inc
sub
xchg
inc
popa
jmp
jnp
xor
or
loop
lock
popa
dec
mov
pop
fucom
mov
mov
push
push
sub
cmp
test
inc
jno
ja
lods
int
fimull
fdivs
lahf
jge
mov
in
popa
movsb
sub
xor
jbe
push
jns
xchg
sub
std
jno,pn
outsl
push
fnstsw
enter
or
sub
fsubl
mov
jnp
imull
sub
push
cmp
icebp
xlat
add
and
mov
iret
addr16
sti
or
xchg
lds
sbb
sub
or
cmpsb
or
cmp
pop
jns
and
loop
sub
cld
movsl
mov
lods
outsb
unpckhps
je,pn
shrl
dec
pop
push
cmp
jecxz
pop
xor
out
idivl
push
inc
ja
int3
clc
clc
imul
or
jnp
adcl
cmpsl
popf
mov
mov
sahf
stos
roll
pop
loope
sbb
addb
dec
adc
dec
mov
cmpsl
test
jmp
lods
pop
or
fisttpll
jns
mov
pop
out
jo
std
addr16
out
fcoms
lea
inc
jne
mov
sub
dec
std
cmp
stos
jbe
push
ljmp
mov
lock
into
imul
das
insl
clc
xchg
sub
jb
mov
test
add
pop
pop
jecxz
cli
fisubrs
dec
xchg
repnz
ret
pop
shr
adc
cmp
sub
inc
cmpsl
popf
xor
inc
cmp
stc
hlt
repnz
mov
cmp
cmp
aaa
inc
add
jp
out
and
jl
stc
and
frstor
mov
add
stos
aaa
push
adc
xlat
shlb
pop
inc
aas
les
ret
mov
out
incb
rcr
in
test
aaa
cmc
mov
xor
mov
sarl
mov
xchg
pop
mov
mov
push
fists
pop
ficomps
cmp
push
call
test
iret
push
in
enter
fisubrs
pop
cmp
inc
jns
mov
inc
jmp
rcll
gs
ret
aaa
jmp
stc
movsl
and
sub
popf
notb
jo
sub
push
shl
push
rorl
mov
mov
loop
dec
scas
mov
mov
inc
adcb
mov
mov
jns
dec
ljmp
bound
jl
jg
fstl
insb
add
jbe
inc
adc
xchg
mov
clc
cltd
repnz
mov
notb
cmpl
cmc
xchg
fisttpll
add
sub
dec
lock
dec
inc
in
stc
or
ljmp
lret
inc
mov
fldcw
jnp
leave
das
test
sub
push
test
jne
mov
dec
movsb
aad
popa
lea
add
jmp
jecxz
jl
pop
or
jns
fidivrs
push
mov
mov
inc
in
pop
rorl
fldcw
adc
sbb
adc
into
jmp
mov
adc
call
mov
add
jmp
dec
sarl
ljmp
add
mov
pushf
insl
adc
sbb
mov
je
jp
jge
and
mov
aaa
adc
std
out
mov
pusha
es
fs
jne
cwtl
sbb
sub
in
jmp
test
jecxz
arpl
push
jmp
das
je
xchg
mov
arpl
ret
test
dec
outsb
mov
mov
add
test
dec
xchg
or
js
and
fldt
cmc
aas
test
imul
aaa
push
push
outsb
lds
mov
ljmp
sahf
into
fimull
xor
cmp
flds
adc
or
je
or
fldt
adc
nop
cmp
cli
sbb
lret
xor
scas
les
pushf
hlt
pop
lahf
popf
or
inc
cmp
clc
inc
popa
mov
icebp
bound
dec
jns
xor
cmpsb
xchg
rcr
orl
ret
ja
js
sub
popf
pusha
or
fisubrs
jno
push
cli
data16
rcr
mov
adc
and
or
das
stos
adc
insl
cmpsl
sbb
inc
mov
scas
mov
stos
andb
std
insl
cld
fdivl
push
inc
data16
mov
add
push
pop
xchg
in
addr16
fcomps
cmc
xor
pop
in
out
inc
jmp
pop
aas
pushf
out
mov
mov
inc
xchg
xchg
dec
push
scas
push
loop
scas
ss
fwait
add
sbb
test
inc
sub
roll
xchg
jnp
push
jmp
dec
or
dec
jmp
add
js
in
or
outsl
inc
jo
notb
mov
xchg
mov
dec
cli
loop
outsb
pop
pushf
mov
jl
into
fs
mov
fwait
sub
mov
lret
dec
std
icebp
shll
mov
push
leave
cmp
aas
js
call
iret
cli
test
adc
mov
pop
aaa
mov
imul
inc
cmp
shlb
test
ret
mov
les
xchg
nop
lcall
xor
adc
je
and
and
out
aam
sbb
nop
lcall
jge
imul
sbb
dec
repz
jp
dec
mov
out
dec
fwait
repnz
xor
xchg
cmp
cs
dec
loopne
std
inc
mov
popl
push
xor
aad
xchg
adc
dec
pop
or
inc
ret
pop
sti
leave
mov
push
pop
rclb
mov
movsl
mov
ljmp
xchg
ja
fwait
dec
cmpsb
xchg
arpl
int
add
fcompl
adc
in
dec
popa
aam
rcr
jno
inc
fcompl
and
ror
inc
jg
insl
dec
inc
imul
fisubs
dec
mov
adc
xor
inc
cwtl
jbe
add
in
sub
into
push
push
xchg
push
stc
fwait
push
imul
push
test
adc
lods
lods
adc
inc
aas
les
push
mov
dec
enter
add
cs
cmpsb
cli
lcall
iret
sub
leave
xor
lcall
subb
icebp
pop
jae
mov
jbe
sub
pop
mov
stos
mov
push
mov
mov
jbe
data16
and
and
dec
popf
cmpsb
clc
push
stos
in
loop
and
out
stc
sarb
fistl
pop
and
adc
cmp
pop
lahf
int
pop
dec
jno
cmpsb
in
adc
jmp
xchg
mov
xchg
xchg
insb
pusha
stos
mulb
mov
leave
xrelease
push
jae
jg
fstps
dec
xchg
pop
lods
xchg
mov
adc
adc
cwtl
push
jmp
aam
xchg
mov
and
ret
mov
sbb
fnsave
jne
sbb
stc
ret
pop
or
mov
push
push
jp
lret
jo
or
gs
xor
jbe
mov
int
jp
cltd
sbb
inc
cmp
xor
andl
mov
jno
dec
fcomps
and
push
jmp
mov
cmp
iret
fistps
test
arpl
and
arpl
or
inc
lods
push
pop
mov
fdivrs
push
je
pop
jnp
jno
cli
dec
scas
push
std
out
mov
or
out
cltd
pop
andb
mov
mov
xor
fstps
cmc
xor
jno
cltd
imulb
xor
push
ss
in
inc
sub
test
cli
pop
cmp
mov
or
arpl
fdiv
test
mov
rcll
add
cmpsb
movsb
inc
mov
enter
scas
dec
addr16
mov
pop
add
rorl
incl
rcll
mov
xchg
mov
jno
adc
imul
jo
mov
adc
add
imul
adc
test
mov
in
into
cmpsb
and
mov
nopl
mov
popa
scas
sbb
add
outsl
cmp
pop
addr16
jle
ja,pn
out
xor
jnp
ficoml
or
mov
iret
das
sub
cli
mov
daa
addr16
jmp
cld
shl
imul
sbb
jae
mov
mov
inc
int3
pop
and
inc
mov
inc
fwait
jo
ret
sub
xchg
mov
scas
inc
fiadds
sub
pop
mov
or
xchg
and
lcall
dec
pop
fcoml
adc
sub
and
mov
inc
push
cs
stos
out
test
lret
js
notb
adc
cmp
sbb
pop
adc
arpl
lret
add
repnz
push
addr16
lock
mov
mov
push
lea
clc
add
ret
enter
sub
aad
fs
jno
mov
xor
and
inc
int3
popa
scas
jle
shrl
adc
int3
in
sbb
popa
sahf
negl
mov
and
jp
cmpsl
aaa
icebp
dec
jo
mov
dec
mov
jg
sub
in
mov
sub
fcmovnbe
push
push
decl
lahf
push
adc
mov
or
sub
pop
push
outsb
loope
pop
negb
xchg
daa
shl
sbb
sbb
xchg
repnz
ds
sub
in
mov
lcall
dec
popa
mov
pop
or
pop
int3
adc
sub
xor
in
sbbl
adc
push
aad
ret
pop
nop
mov
sbb
cmp
push
sbb
xchg
loop
jo
xchg
pop
repz
sub
dec
lds
cwtl
jbe,pt
pop
push
int3
cmp
dec
inc
stos
mov
pushf
scas
stc
jecxz
stc
jo
leave
mov
cwtl
lods
or
push
cltd
jb
mov
cltd
xor
sar
cmp
dec
ret
testl
push
jnp
imul
int3
mov
jle
jno
sub
mov
dec
xchg
inc
xor
xchg
ljmp
mov
sbb
cs
fwait
mov
xchg
xchg
bound
shl
jnp
sahf
sbb
sbb
mov
mov
push
pop
neg
push
in
mov
sbb
sbb
cmpsl
jp
sbb
lea
popf
fwait
test
cmp
lahf
sarl
xchg
xor
outsl
jg
cmp
add
in
xor
iret
test
cld
je
fdivr
lock
pop
add
call
rolb
ror
inc
jo
or
ja
clc
test
lahf
xor
adc
pop
mov
add
jmp
mov
xchg
push
addb
mov
xchg
inc
cmp
pop
mov
mov
imul
push
aam
or
pusha
leave
cwtl
jns
and
and
enter
inc
lods
adc
arpl
dec
inc
adc
mov
pop
push
repnz
out
sbb
dec
xchg
jno
inc
fwait
mov
jo
cmpl
pop
dec
orl
add
mov
inc
adcb
and
fstpl
mov
mov
push
in
rcrb
test
dec
arpl
pop
pop
lret
pop
lcall
sub
and
cmpsb
cwtl
fcoms
iret
push
jmp
push
pop
pop
jb
movsl
push
mov
repnz
aas
pop
out
pop
dec
xchg
sti
or
cmp
fdivs
cmpsb
adc
orb
iret
out
frndint
cmp
pop
jl
jb
push
cmp
xchg
and
es
xor
icebp
psrlw
leave
push
stc
jo
mov
sub
and
mov
push
add
inc
inc
cmpsb
lahf
fldt
sbb
sub
sbb
pop
decb
ret
pop
mov
mov
int3
imull
sub
ret
lcall
out
xor
and
sub
lock
mov
lahf
pushf
cmp
jns
pop
jl
mov
add
mov
adc
loop
leave
lods
adc
in
fisubs
movsb
xchg
idivb
popa
mov
in
and
pop
outsl
inc
aam
push
out
fistl
ljmp
fsubrs
cmp
movsl
stos
mov
cwtl
int3
and
addr16
ficompl
sub
mov
rcrl
xor
inc
fxch
pusha
sbb
dec
movsb
mov
and
cmpsl
xor
aas
movsb
sub
inc
pop
cmp
sub
push
cltd
ljmp
cmpsl
fwait
push
jmp
inc
testl
fbld
jbe
les
push
int
fimuls
xor
out
scas
mov
in
test
cmp
int
out
lcall
push
fucomi
shrb
pop
mov
das
fldcw
mov
and
fs
xlat
mov
jnp
orb
pushf
pop
mov
ucomiss
lret
out
adc
das
leave
push
aam
sub
inc
pop
call
cmpsl
xor
mov
test
add
jnp
xor
mov
sbb
mov
sub
mov
pushl
enter
addb
into
in
sub
jno
mov
lret
ss
cmpsb
scas
add
and
or
test
adc
jo
leave
jle
sarb
cmp
or
sahf
scas
outsl
into
add
andb
lret
lret
adc
jo
fwait
dec
or
cmp
jle
in
shll
subb
sahf
fincstp
mov
dec
inc
data16
xor
icebp
jge
sarl
inc
mov
ss
ficomps
and
mov
jge
mov
dec
push
rorl
orl
add
iret
xor
shlb
or
daa
out
xchg
out
pcmpeqd
jnp
shlb
lret
mov
jge
inc
rcrb
xchg
mov
adc
loopne
dec
hlt
je
aaa
aam
cli
inc
push
cld
push
cmp
fmuls
and
imulb
ret
push
or
lahf
pushf
wrmsr
add
es
or
add
xchg
push
lahf
sbbb
sbb
mov
cli
aad
in
push
inc
push
inc
lea
xor
icebp
add
psubsb
pop
ficoms
inc
dec
adc
sahf
mov
mov
sbb
ds
mov
loop
orb
pop
adc
sub
jecxz
push
jo
dec
sub
push
inc
pop
fcoms
fcomi
or
loop
in
mov
out
adc
mov
adc
push
and
sbb
inc
pusha
js
daa
cvttps2pi
pop
inc
jnp
xor
stc
lahf
cmp
orb
pop
adc
or
jmp
push
mov
fs
sti
jno
mov
xchg
aaa
rolb
dec
shrl
movsb
pop
movsb
aam
pusha
sub
xor
sbb
rolb
scas
sbb
jge
insl
test
mov
add
sub
dec
test
popf
imul
call
sub
pop
insl
jns
daa
push
jg,pt
fnstsw
stos
cmp
imul
jb
movsb
out
adc
jb
sbb
lret
out
dec
rcrb
pop
movsl
mov
and
sbb
push
xchg
pop
jle
int3
shll
insl
pop
inc
stos
cmpsb
ret
ficompl
xchg
cld
and
aaa
push
dec
pop
inc
pusha
xor
mov
nopl
xchg
jnp
scas
jmp
push
xchg
fcoms
adc
cmp
mov
xor
jl
add
and
stc
add
jg
cmp
and
pop
push
in
test
add
sub
cmp
or
and
push
inc
bound
in
pop
sub
cld
rol
out
in
in
mov
notl
je
jnp
or
out
out
aad
inc
mov
mov
mov
jle
repnz
push
repnz
sbb
aas
push
jns
fistl
int
push
nop
out
pop
aam
shlb
insb
push
sbb
dec
int3
sbb
int3
in
sbb
xchg
ja
negb
pop
push
and
jnp
adc
pop
sub
xchg
xor
push
xchg
lds
mov
sub
inc
inc
fst
mov
lea
dec
pop
pop
jo
push
push
mov
lgs
cmp
leave
add
adc
aas
sti
shll
pop
xor
cmp
push
and
or
dec
jae
dec
shll
aad
cmp
scas
jg
sbb
mov
or
call
dec
mov
xor
add
xchg
ret
push
push
dec
inc
dec
pusha
pop
mov
xlat
sahf
and
sub
aad
sub
ret
jg
xchg
testb
xor
mov
enter
gs
sub
jnp
mov
jne
adcl
mov
test
int3
dec
or
es
pop
xor
stos
pusha
push
inc
xchg
mov
out
rolb
jns
xchg
lods
cltd
sbb
outsb
adc
and
or
movl
repnz
xor
dec
adc
in
pop
mov
in
je
xor
sbb
push
pop
cmpsb
outsb
push
or
sbb
ds
pop
fsubl
push
xchg
aaa
xor
cwtl
ret
inc
push
insl
xchg
mov
cmp
jle
das
push
outsl
or
cmc
pop
loop
lcall
jle
mul
call
xor
shlb
mov
movsb
fildl
je
fadds
cmc
iret
sub
sub
mov
int
jmp
push
xchg
sub
mov
jb
sti
hlt
xchg
aam
fdivrs
test
jbe
popa
mov
xchg
aam
jl
movsb
popf
push
aad
negl
pop
jl
stc
sub
cmpl
stos
and
pop
inc
insw
shrl
mov
cmp
mov
push
push
inc
ja
cmp
into
std
xor
mov
incl
inc
rcr
ds
fnstcw
inc
mov
push
dec
in
pop
adc
ret
jge
nop
mov
out
out
xor
mov
push
and
xor
mov
or
mov
or
movsl
scas
jg
scas
sub
call
mov
lea
jns
fidivrl
sbb
or
push
out
sbb
stc
cwtl
mov
insl
inc
imul
lds
int3
xchg
int
test
pop
xor
xlat
pop
popf
fimull
int
add
add
test
shll
sti
and
mov
aas
mov
inc
mov
lahf
mov
adc
mov
aad
ss
pop
daa
pusha
jg
pop
lods
enter
sbb
into
dec
adc
cmpsl
cli
jae
cmc
icebp
out
push
add
out
nop
cmc
xchg
jnp
shlb
pop
add
in
dec
jg
ljmp
clc
sub
ret
mov
sbb
clc
sbb
xchg
xor
jb
mov
or
sbb
inc
aas
pop
addr16
mov
repnz
popf
lods
mov
adc
into
in
out
inc
dec
scas
shlb
xchg
inc
xchg
dec
pop
aad
outsl
xchg
gs
pop
out
mov
in
iret
jbe
fnsave
gs
mov
test
mov
rorl
adc
mov
shrl
ja
mov
sahf
loop
sub
xor
xchg
cmp
out
lds
inc
pop
ljmp
loop
bound
mov
lock
push
int3
cmp
ficomps
adc
and
jbe
jle
movsb
int3
cli
xchg
popa
xchg
sbb
mov
rcrl
stos
stos
jle
clc
mov
pop
bound
jnp
mov
jne
adc
push
xor
mov
out
outsl
imul
jo
icebp
cmp
mov
inc
imul
mov
movsl
pop
push
push
popf
ljmp
xor
ljmp
jecxz
cmp
jb
popf
clc
mov
push
call
lret
int
loop
mov
dec
or
rorl
ja
jo
cli
cmp
lds
scas
aam
movsl
mov
les
test
inc
xor
dec
sbb
repz
jmp
pusha
jae
mov
xor
jno
xorb
push
or
xor
xor
out
lcall
lcall
je
cs
arpl
fnstcw
xchg
add
xor
xchg
mov
sub
fs
xchg
mov
mov
es
dec
imul
pop
jb
cmp
dec
stc
sarl
xchg
jp
sub
xor
mov
movsb
insb
sbb
cwtl
ret
inc
lods
push
xchg
xchg
push
sbb
pop
fisubl
fnstsw
aas
outsl
jmp
ja
arpl
popa
negb
jnp
fsubrl
xchg
stos
mov
idivl
and
pop
mov
out
lret
imul
and
adc
lret
push
add
jo
ja
xor
sub
ss
jne
cmpsb
fdivrl
mov
or
loop
jge
mov
xchg
or
cmpb
sbb
das
bound
cmpsl
pusha
jnp
push
mov
sbb
cmovnp
movsb
cmpl
xchg
testb
cmp
add
adc
push
xor
fiaddl
lret
cmc
notb
adc
bound
ret
cmpsl
and
pushf
test
repz
pop
fcoms
inc
xor
cmp
jns
stc
sub
adc
scas
dec
or
push
mov
jns
xorb
not
pop
xchg
imul
leave
cmc
cmp
push
cmp
das
out
pop
pop
dec
iret
ss
iret
movsl
int3
ljmp
addl
aam
sbb
xchg
push
or
lret
les
lret
xor
and
cmp
es
push
inc
xchg
int3
push
rclb
mov
test
fnstenv
mov
lea
fwait
pusha
loopne
dec
jl
std
cmp
scas
arpl
das
scas
mov
mov
test
addr16
dec
cmpl
push
out
sbb
das
push
mov
sbb
xor
add
jmp
addb
andl
xlat
insl
addr16
cs
ja
push
mov
ret
push
lods
xor
dec
in
mov
mov
mov
fwait
cmpl
and
inc
jmp
faddl
test
loop
mov
xchg
repnz
mov
outsb
cmp
sbb
ret
mov
addr16
jecxz
repz
push
lock
cld
dec
test
sub
pop
jmp
inc
rcr
aam
andl
or
sub
das
jb
in
shrb
sub
jbe
movsb
or
inc
or
cmpsb
outsb
add
lahf
lods
mov
add
xchg
jecxz
adc
xor
inc
leave
jne
test
and
xchg
lret
cmp
push
jo
ja
lods
out
mov
sub
mov
mov
pop
das
es
dec
loopne
imul
out
add
sub
mov
filds
mov
imul
dec
fistpll
cld
jge
pop
and
leave
xor
xchg
pop
sub
pop
or
lds
movsb
jge
fidivrs
fwait
js
pop
sub
imul
adc
in
stos
mov
cmp
pop
sbb
push
cmp
jnp
inc
mov
inc
test
mov
cltd
insb
int3
std
icebp
bound
mov
mov
daa
repz
call
mov
push
mov
nop
xchg
out
rorl
cmp
mov
mov
dec
pushf
jg
iretw
call
mov
sbb
mov
mov
mov
mov
insl
fisttpll
call
sti
xor
adc
fsubrs
sub
or
jmp
mov
js
nop
nop
push
popf
cmp
xor
lock
pop
mov
push
gs
add
lods
push
sarb
test
mov
insb
xchg
push
push
mov
sbb
ret
loop
cmp
rcrl
push
push
rclb
jge
movsb
std
aad
mov
into
push
push
add
movl
cmp
scas
hlt
int3
test
cmp
or
push
ficompl
out
aam
xchg
inc
sbb
ja
lods
scas
adc
out
pop
xor
or
ficomps
xor
xchg
shll
mov
enter
fsubrl
sub
stos
stos
bound
cmp
loope
sbb
cmpb
ret
sub
and
push
jo
dec
or
push
mov
cmp
imul
cmpb
add
and
jbe
lock
and
iret
daa
in
shlb
aaa
mov
shll
jbe
inc
jb
dec
bound
adc
leave
mov
subb
clc
aas
cmc
in
mov
in
ret
insl
shl
je
lods
cmp
pop
jp
fisubl
in
sarl
je
and
jbe
call
cmp
pop
clc
shll
insb
mov
mov
movsb
sub
xlat
jo
jecxz
pushf
sbb
push
pop
ret
cmpsl
icebp
mov
xchg
int3
dec
mov
inc
pop
imul
pop
icebp
lahf
scas
push
mov
mov
mov
ja
jge
xchg
jge
test
loop
sub
jmp
lods
cmc
mov
out
pop
cmc
imul
xor
lds
test
mov
jbe
orl
sub
dec
push
pop
and
cmpsb
sbb
stos
jle
sbb
xchg
ss
sub
cs
inc
loopne
jno
dec
push
xor
sbb
xor
int
dec
dec
xchg
push
xchg
mov
push
iret
dec
inc
and
sarb
loop
add
insl
les
rolb
out
xor
mov
lret
pop
xlat
test
sbb
je
fs
jge
sbb
and
inc
push
pop
sbb
mov
cmpsb
in
and
sub
add
int3
filds
leave
repnz
divl
push
or
ror
insl
sbb
les
push
stos
xchg
xlat
sub
mov
leave
add
inc
insl
out
mov
xchg
dec
psrlq
pop
out
jl
jb
xor
scas
mov
sub
rcr
stc
mov
jb
push
xchg
or
jl
adc
add
cmp
scas
sti
adc
mov
adc
cmp
xor
push
cmovns
call
leave
and
repnz
push
nop
mov
ja
shrl
xor
adc
pop
cmc
outsl
xlat
sahf
daa
sti
mov
mov
or
xchg
xor
add
xor
dec
imul
mov
popf
pop
jb
rcrb
pop
push
inc
scas
insl
mov
mov
int3
xor
shr
jbe
jecxz
pop
outsl
adc
pop
imull
rorb
xor
out
jl
xchg
push
lret
fadds
div
ret
adc
pop
push
dec
fstpl
xor
stos
xor
fs
fsubrs
sbb
pop
mov
enter
dec
sub
xchg
xchg
and
std
pop
xchg
scas
push
movsb
cwtl
bound
mov
jns
les
jp
mov
jl
ret
xchg
sbb
add
sbb
ret
ret
jg
aaa
cmp
rdpmc
enter
bound
push
push
mov
mov
xchg
cmp
mov
ja
jle
lahf
in
pop
xchg
imul
mov
pop
sub
stc
xchg
jb
add
mov
cmpsl
pop
mov
jne
into
mov
movsb
in
adc
pusha
cmc
and
dec
mov
xchg
or
in
and
in
sub
aam
add
dec
sbb
push
enter
out
xchg
jb
ret
fidivs
adc
push
jno
mov
pop
jnp
push
or
aad
xchg
jmp
add
out
fists
sub
hlt
in
movsl
xor
xor
pop
jbe
shll
mov
jge
ret
jge
loopne
mov
loope
pop
aaa
mov
mov
out
jae
sbbb
dec
test
jecxz
stos
popa
fdivr
pop
lahf
fnstcw
testl
mov
cmpsl
inc
add
xchg
outsl
ret
adc
inc
xor
cld
out
inc
mov
fcmovb
jnp
test
dec
rolb
or
scas
les
jae
dec
cmp
xor
mov
xor
mov
or
mov
pop
xor
aaa
push
adc
mov
push
mov
mov
mov
cmp
jo
jl
mov
mov
or
addr16
rorb
ss
and
cmp
cmpsl
push
mov
push
outsb
scas
sub
cmp
xor
xchg
bound
iret
jne
jecxz
xchg
mov
ja
add
cmp
add
cltd
xchg
jl
mov
ret
rcl
xor
arpl
push
cmp
lea
mov
test
adcb
jecxz
sub
jecxz
sbb
cmp
pop
jns
pusha
test
dec
jl
sub
cwtl
sbbl
fcmovnbe
test
or
hlt
or
leave
les
cmp
adc
inc
inc
fdivs
push
xor
and
fdivl
push
push
inc
inc
lea
insb
push
jno
aas
lock
dec
cwtl
sahf
fwait
insl
sbb
push
pop
dec
and
xchg
jmp
push
xor
into
lahf
pop
pop
arpl
or
imul
test
push
pop
push
push
pop
cs
cmp
ds
cmc
data16
add
adc
xchg
out
or
mov
dec
add
xor
or
cmp
sub
mov
jle
lds
test
jge
mov
jnp
mov
lds
mov
sbb
push
mov
pusha
fs
int
cs
cmp
or
insb
or
lcall
rol
aas
sub
mov
inc
lds
adc
int3
repz
cmpsb
mov
int
repnz
int3
les
sub
and
aad
divl
pop
shrb
sbb
repz
arpl
lcall
test
shr
aad
xor
xchg
xchg
mov
xchg
jnp
and
and
rolb
jmp
push
addl
add
jecxz
jo
push
fs
sub
mov
scas
outsb
mov
inc
cmp
cmpsl
sbb
xchg
jns
leave
stos
call
xlat
xor
mov
cli
xchg
int3
fmuls
inc
decl
mov
insb
call
mov
cltd
jmp
test
push
mov
jns
sub
cmpsb
xor
sub
sbb
lret
jno
fdivrs
shrb
daa
sbb
movsb
iret
adc
or
sub
mov
inc
rep
pop
fsubrl
jae
sub
iret
or
jmp
sbb
add
push
popf
push
jbe
lds
and
hlt
ss
cmp
lcall
mov
xchg
pop
movsb
vmread
fldenv
cmc
or
test
pushf
lods
fsubrs
imul
mov
dec
jno
fwait
xchg
push
loope
mov
push
sub
xchg
push
in
rcll
sbb
rcl
loop
notb
xor
inc
sub
mov
and
dec
xchg
adc
testb
mov
dec
stos
sub
fsubs
xchg
mov
loopne
sti
or
std
xchg
nop
lahf
icebp
xor
aad
sbb
cmp
cmp
lcall
push
mov
xor
and
mov
repz
sub
or
popf
jl
pop
dec
or
jbe
arpl
and
add
mov
and
inc
adc
nop
lahf
scas
xor
xor
lret
scas
cltd
lret
sarl
or
cld
jno
sub
enter
loopne
adc
mov
loope
mov
aad
ss
int3
lret
inc
mov
lock
aad
sub
lock
out
jno
xchg
push
js
cmovl
or
xlat
stos
sbb
arpl
mov
addb
dec
in
xor
lahf
xor
popa
repnz
mov
loop
notb
or
cmpsl
jmp
mov
push
xor
and
out
fwait
cwtl
pop
gs
cmp
mov
out
js
nop
leave
repz
int3
dec
out
repnz
rcl
mov
xchg
ds
popf
test
stos
lret
jno
jmp
pop
lea
out
dec
mov
sub
jp
dec
repz
xchg
pop
enter
test
xchg
sbb
rolb
movl
in
inc
lret
les
int
or
ret
orb
icebp
sub
add
mov
sub
iret
sub
icebp
out
orl
movsl
sub
in
push
cltd
loope
shrb
bound
jecxz
pop
jb
and
mov
das
push
jae
pop
jbe
in
out
xor
fsubs
cld
f2xm1
jbe
pop
mov
mul
mov
in
xor
push
ret
mov
mov
push
stos
cld
xchg
xor
imul
scas
push
stos
add
lock
and
pop
mov
dec
hlt
nop
sbb
rcrb
mov
cmp
cmpsb
pop
push
lret
xchg
push
stc
jg
pop
adc
cmp
mov
adc
ret
sub
or
fst
in
pop
mov
clc
aad
outsl
into
test
push
mov
mov
not
sbb
pop
loope
int3
push
dec
xchg
push
sbb
jbe
mov
les
call
pop
pop
stc
mov
push
sub
clc
sub
in
push
mov
int3
ja
xor
push
shlb
in
mov
pop
mov
ds
push
xor
dec
jne
shll
mov
popa
fcoms
into
repnz
adc
xchg
sti
and
jl
pmaxsw
mov
aaa
mov
cmpb
push
insb
or
ja
jmp
pushf
xchg
jecxz
xor
cmp
pop
aad
stos
decb
enter
push
mov
push
mov
pop
je
and
sub
dec
imul
push
cmpsb
jmp
mov
mov
mov
jmp
push
lret
lods
test
inc
mov
arpl
mov
add
sbb
pop
adc
jno
mov
push
adc
jbe
fs
pop
cmp
mov
adcb
std
mov
sub
pop
popa
imul
adc
fnstsw
pop
out
push
sahf
xchg
outsl
arpl
inc
gs
push
or
xor
test
mov
lret
inc
insb
push
popf
xor
add
add
dec
pop
popl
mov
and
jecxz
mov
adc
pop
test
mov
out
or
idivl
sub
in
das
rolb
or
jmp
adc
xor
mov
sub
pop
push
xor
or
inc
jmp
jns
ljmp
dec
adc
je
mov
test
xor
xor
mov
popf
pop
stos
lods
pop
test
add
jae
ja
mov
dec
in
mov
in
adc
aad
jmp
sub
test
outsl
add
movsl
out
push
insl
sti
aaa
sub
sub
xchg
or
mov
mov
or
movsb
dec
dec
lods
in
xor
push
jle
and
xchg
lret
int3
mov
ss
out
add
and
cwtl
pushf
dec
or
aad
aad
push
push
clc
std
adc
jmp
mov
jbe
in
mov
cmp
jge
loop
or
icebp
push
add
push
sbbb
enter
rolb
cmp
sub
xor
pop
add
inc
lret
aam
xchg
or
cmp
mov
insb
int
lea
movsb
cs
std
cwtl
mov
sahf
stos
movsb
add
cmc
mov
mov
shll
cmp
push
xor
daa
test
nop
and
xor
mov
push
sahf
fidivrl
push
push
leave
push
push
divb
jae
enter
sub
sbb
jmp
nop
and
dec
into
and
push
jne
jle,pn
adc
push
inc
imul
addr16
xchg
sub
sti
daa
outsl
lret
bound
popa
iret
inc
call
je
cmp
adc
sub
andl
or
or
inc
sahf
lods
mov
mov
test
cs
xchg
in
cwtl
mov
xchg
xchg
lods
dec
xchg
mov
sub
inc
sbb
ficompl
imul
shrl
jle
popf
cmp
jns
jbe
xorl
push
mov
pusha
mov
daa
iret
xorb
dec
sub
push
xor
inc
loope
add
lret
adc
cmp
mov
cmp
test
dec
jl
push
jae
aad
js
movd
int3
ds
js
pop
xchg
int
jecxz
roll
jno
push
je
and
das
or
icebp
cmp
pop
sbb
jmp
xor
fwait
add
push
cmc
imul
fidivl
mov
mov
mov
sub
fistpl
loope
scas
jnp
and
cmp
and
sbb
imul
test
dec
and
sub
pop
in
or
insb
int
mov
adc
add
sahf
fs
adc
push
push
and
jb
leave
inc
push
jae
popa
mov
xor
jmp
dec
jecxz
mov
clc
repz
fcoms
sub
aam
shrb
std
or
jae
cmpl
mov
mov
inc
mov
arpl
push
imul
cwtl
arpl
pop
and
mov
dec
or
lret
dec
push
cmp
shll
stos
add
ss
hlt
push
not
mov
lea
mov
js
outsb
aad
movsl
fmuls
in
enter
outsb
addr16
insl
mov
movsb
or
mov
in
subl
cmp
mov
ret
jnp
cmp
push
xchg
jno
jnp
sbb
sbb
aaa
jnp
fsubrl
and
cld
push
idiv
cltd
ds
fwait
push
jne
push
xchg
loop
mov
lds
sti
lret
cmp
stos
sbb
jae
or
jae
cld
ljmp
nop
imul
push
rclb
mov
aas
and
or
mov
adc
push
add
pushf
mov
cli
loopne
popa
fldenv
mov
xchg
jne
les
push
stos
mov
cmp
mov
sub
shll
dec
mov
nop
fisubrl
aad
sub
push
dec
jb
or
dec
inc
stos
mov
into
jb
inc
ds
fwait
test
sbb
and
xor
jge
or
xchg
out
sub
bound
add
sbb
dec
and
pop
jo
xor
cmp
sahf
arpl
std
mov
push
lea
xor
bound
dec
sub
outsb
xchg
fs
sbb
aam
ficoml
inc
icebp
or
in
mov
lds
cmp
push
mov
fisubrs
inc
mov
pop
inc
sbb
mov
lahf
cmp
neg
insb
je
add
ret
xor
addr16
xlat
test
xor
jl
sub
std
mov
imul
and
cmpsb
arpl
jne
lds
add
push
and
nop
push
shrl
shll
ja
ss
jnp
bound
push
lret
pushaw
cmc
pop
or
adc
out
leave
push
mov
xor
mov
loop
pushf
pushf
add
mov
xchg
scas
fucom
clc
and
mov
and
mov
push
inc
push
lret
imul
outsb
xlat
ret
test
mov
sbb
mov
incl
mov
mov
inc
push
or
pop
xor
ret
loope
cli
sahf
cmc
js
dec
test
push
cltd
loop
jl
popf
fadds
cmpsl
inc
adc
mov
sub
pop
sahf
xchg
cmp
mov
aad
inc
add
cmp
cmp
cmp
inc
fdivs
outsl
sub
sub
ret
pop
adc
add
xchg
jbe
cmp
adc
sub
out
adc
xchg
dec
cld
int
sarb
jmp
aaa
sarb
les
cmpsb
fbld
inc
cltd
sahf
xlat
daa
out
fucom
jmp
dec
inc
push
test
test
js
sub
rcrb
pusha
sub
aad
push
mov
mov
daa
loope
loope
push
mov
or
sbb
mov
out
rclb
sarl
jl
sbb
in
movsb
dec
cmp
or
inc
pusha
leave
mov
sbb
sti
mov
xchg
xchg
lock
pop
jne
jae
xchg
lea
xor
and
mov
jo
and
jne
and
jle
xor
push
faddp
ret
sub
adc
pusha
xchg
push
loopne
fiadds
or
in
imul
data16
mov
lods
fsubrp
into
mov
repz
mov
fidivrl
pop
pop
xchg
mov
out
cmp
cmc
shr
xchg
xor
add
xchg
adc
loopne
or
adc
ds
push
lcall
mov
lcall
mov
mov
and
in
pop
pop
cmp
bt
mov
mov
and
ljmp
loopnew
inc
dec
cmp
xor
mov
hlt
jno
mov
jne
pop
pop
sub
fstp
mov
xchg
mov
pop
gs
sbb
lock
xchg
test
push
cmp
push
mov
and
push
jb
xor
idivl
fildll
mov
pop
lods
ret
sub
lret
pop
divb
iret
test
pop
cli
sbb
rorb
dec
jne
cs
std
sti
fildl
mov
adc
xchg
lock
or
aaa
sti
setle
or
xor
in
sbb
mov
pop
mov
jbe
add
and
test
imul
add
mov
xchg
rorb
push
cmc
mov
sub
gs
outsb
sbb
aaa
pop
lret
xlat
movb
nop
xor
jae
xchg
xchg
sarl
cmp
or
jle
push
pop
mov
pop
daa
arpl
xor
mov
test
xchg
dec
insb
shrb
imul
xor
cmp
std
add
push
xchg
jns
or
push
xchg
gs
lds
ret
lock
test
sub
outsl
pop
pop
jmp
jns
pop
inc
sahf
push
in
mov
dec
mov
jns
shlb
popf
mov
loop
and
clc
loopne
repz
and
push
mov
in
stos
mov
les
ret
fs
lret
mov
dec
repz
enter
mov
pop
sub
pop
ret
loopne
jp
iret
fwait
int3
jo
mov
xchg
fnstenv
scas
mov
in
add
or
cmpl
dec
lcall
arpl
mov
js
cmp
jb
ljmp
ror
das
inc
xor
adc
push
fnstenv
mov
clc
sahf
iret
ss
std
push
pop
adc
mov
jp
and
loopne
sub
dec
cmp
addb
addr16
test
jl
test
aam
cmp
aas
out
push
stos
inc
jae
and
out
into
nop
mov
cmp
int
sub
in
loop
jb
scas
mov
xor
adc
mov
mov
xchg
in
stos
and
lret
xchg
mov
pop
sahf
mov
mov
add
out
aad
std
lret
fidivs
mov
inc
jg
pushf
test
xchg
cmpsl
cmpsb
sbbl
jne
dec
mov
adc
mov
leave
ja
mov
or
xchg
mov
cmc
xchg
out
addr16
sti
fbstp
mov
rorl
outsb
lret
rep
int
insl
xor
stos
sbb
les
mov
out
push
jle
jbe
push
pushf
add
xchg
repnz
sbb
push
inc
fcoms
hlt
push
cmpsl
loopne
gs
or
sbb
dec
add
sahf
bound
les
mov
aam
aaa
jl
add
and
inc
das
push
and
dec
dec
enter
pop
sub
cmpsb
mov
pop
inc
mov
inc
xor
loopne
repnz
jbe
mov
adc
rcrb
ja
mov
ja
lcall
inc
cmc
xor
and
cmp
in
or
or
mov
cmp
jno
adc
sbb
and
loopne
jecxz
sbb
xchg
out
into
outsl
cmp
ret
ret
sub
lcall
adc
push
xor
inc
pop
out
sbb
aad
imul
jbe
divb
scas
sbb
pop
push
imul
inc
aaa
daa
scas
and
and
mov
loopne
xor
push
adc
test
pop
imul
push
xchg
mov
jmp
mov
jp
jle
xlat
xor
shr
mov
andps
lea
ror
leave
int
xchg
push
adc
pop
add
jge
and
cmpsl
js
mov
cmp
aam
add
or
add
add
lods
mov
fidivl
jge
mov
icebp
mov
mov
sbb
pop
mov
mov
fistpll
xor
int
decb
adc
push
cmp
xor
mov
dec
cld
fidivrl
testb
in
out
les
xor
hlt
adc
jbe
pusha
aaa
les
adc
dec
xchg
add
repnz
mov
pushf
adc
daa
test
pop
iret
adc
add
xor
mov
sahf
xor
jg
fwait
aad
inc
mov
mov
push
xchg
or
shr
fwait
imul
lret
xor
cli
xor
jo
std
insb
fs
xor
enter
orb
inc
and
vucomisd
das
data16
loop
mov
lret
lret
sub
movsb
sub
sbb
jo
mov
loop
into
add
cmp
loopne
sub
mov
cltd
loop
xchg
loope
add
nop
sub
mov
loope
call
out
pop
mov
iret
sahf
imul
mov
out
iret
sbbb
jae
aas
std
add
adc
cmpsl
mov
mov
jle
mov
int
xchg
pusha
sbb
cmpsl
push
mov
roll
jmp
push
fsubs
outsb
mov
add
clc
test
mov
test
cmp
xor
mov
fsubrp
aad
pop
lds
imul
push
jo
hlt
mov
inc
notb
call
xor
mov
repz
adc
daa
cmp
daa
push
mov
fsubr
mov
cmp
mov
push
cs
cmp
mov
ja
pop
arpl
ret
mov
lcall
lds
rolb
stos
int3
fisubrl
inc
sbb
lea
cmp
inc
mov
xchg
int
leave
pop
push
pop
stos
pop
jne
lret
into
sbb
cwtl
adc
mov
adc
and
jne
mov
ret
sub
cltd
jae
out
fmull
cli
cli
push
clc
or
xor
mov
push
cs
inc
jb
cmp
into
pop
sahf
popa
scas
imul
mov
lret
add
test
or
sbb
inc
pop
push
stos
cli
enter
out
push
and
bound
loope
cltd
xor
mov
stos
in
jns
mov
rclb
xchg
pop
mulb
sbb
mov
add
inc
insb
xor
inc
xchg
sti
xchg
push
inc
fnstsw
cld
pop
mov
jnp
dec
dec
push
lock
pop
push
cmp
ljmp
cmp
scas
push
mov
xchg
sti
dec
and
mov
pop
sbb
sbb
adc
data16
lret
fmull
xor
cmp
rcrb
sbb
repnz
lret
mov
pop
pushf
xor
mov
xchg
or
jae
xchg
inc
xchg
pop
jnp
out
add
jbe
ficompl
test
pop
fisubs
into
adc
or
and
je
cmp
mov
ficompl
in
lea
fstpt
je
dec
in
andl
repnz
repz
lods
jg
dec
inc
cmpb
cmc
out
test
lcall
cmp
xchg
dec
push
push
cmpsl
push
mov
jge
mov
pop
or
cltd
jle
sub
ret
push
dec
sub
ja
xor
inc
pushl
pop
int3
in
adc
sub
shl
sub
push
out
cmp
pop
adc
stos
pop
clc
push
fimuls
in
into
out
jp
fdivr
or
pop
mov
jge
push
sbb
aaa
add
mov
adc
lods
fisttpll
mov
xor
insl
xchg
add
add
sahf
scas
inc
out
sub
or
xchg
push
inc
insl
push
cwtl
hlt
dec
in
mov
imul
lea
mov
jge
adc
fdivr
sti
psllq
and
mov
and
fnstsw
adc
es
xor
flds
scas
pusha
dec
pusha
fiaddl
inc
fistps
sahf
test
pop
adc
jg
push
shl
pop
pop
xor
rcl
adcb
and
in
xor
loope
jp
mov
fimull
or
xor
xor
imul
mov
xchg
cmp
loop
xor
stc
test
push
ret
and
jb
repz
loopne
pop
jp
inc
arpl
pop
testl
jno
nop
lret
mov
xor
mov
lods
int3
dec
leave
xchg
mov
lret
sbb
loope
sub
dec
imul
cmp
and
repnz
pushf
dec
lret
cmpsb
sub
adc
or
jle
js
out
or
mov
adcl
xorl
ds
shlb
xor
mov
xor
push
adc
push
rolb
addr16
push
push
pop
mov
sbb
in
and
popf
dec
sub
sbb
cmc
push
out
jge
mov
and
and
call
pop
mov
jecxz
outsb
jnp
adcl
icebp
cmpsb
push
insb
pop
je
in
adc
das
jg
push
push
cmpsl
adc
je
add
js
call
dec
loope
pop
pop
hlt
pop
push
adc
dec
mov
inc
jbe
imul
repnz
jmp
add
sbb
fimull
cmpsl
sti
and
sbb
lret
add
pop
mov
loop
mov
adc
push
ds
sub
lahf
xchg
cmp
xchg
aas
in
mov
jle
js
jmp
addr16
and
mov
add
inc
enter
insl
lea
pop
rol
and
fwait
pop
in
inc
and
in
rcll
xchg
mov
cli
jns
mov
ja
loopne
mov
call
add
fcmovnu
xchg
xchg
xchg
dec
xchg
jmp
int3
mov
sbb
mov
pop
out
jl
push
ss
push
ds
sahf
pop
mov
sbbl
cmp
jo
mov
inc
clc
ss
pusha
out
jb
and
imul
and
insl
in
adc
js
fisubl
add
test
dec
and
lea
pusha
pop
sbb
pop
sub
aad
sbb
xchg
in
rolb
ss
push
sti
cmpsl
leave
mov
ja
test
sub
mov
fisttpl
andb
mov
fs
in
ljmp
mov
xchg
mov
push
inc
in
mov
call
outsl
xchg
insl
mov
fdivp
cld
stc
jns
dec
push
xchg
repnz
inc
shrb
clc
and
test
jg
pop
or
in
das
insb
repz
lods
dec
inc
mov
lcall
xchg
inc
sub
or
call
roll
enter
inc
or
inc
push
call
cwtl
imul
xchg
pop
sub
pop
ds
xor
xor
and
xor
push
sbbb
add
icebp
xchg
cmpsl
cmp
lahf
lret
stc
or
scas
mov
lahf
lahf
in
int
mov
lds
mov
sbbl
insl
and
call
xchg
ljmp
dec
xchg
cli
aam
xchg
js
or
pop
jbe
call
sub
add
pop
xchg
popl
sub
adc
mov
jnp
add
mov
pop
popf
stos
test
je
in
pop
ja
iret
push
addr16
in
push
stos
repz
test
jl
cmp
cmp
pop
insl
push
fwait
out
jg
xor
sbb
mov
mov
jp
sbb
jne
cmp
sahf
cmp
pushf
je
mov
add
mov
sbb
lahf
xor
addr16
and
sub
sar
cmp
not
adc
mov
mov
in
ljmp
and
lods
incb
mov
addr16
test
fcmove
call
pop
jns
sbbl
cmp
mov
and
adc
dec
push
inc
push
inc
cld
and
fs
mov
fisubl
adc
mov
mov
or
std
std
icebp
jo
mov
inc
mov
jne
scas
ret
iret
push
out
ror
pop
pop
lock
jns
cltd
inc
dec
sbb
xor
mov
and
sbb
mov
test
bound
or
daa
lret
inc
mov
std
and
add
data16
sti
mov
dec
push
push
mov
hlt
mov
push
movsb
mov
sahf
femms
cmpsb
mov
test
ja
daa
mov
push
xchg
fisttpll
or
daa
sub
ja
mov
cmp
cmp
sub
push
mov
decl
and
add
xor
shlb
adc
push
jnp
add
les
aad
out
sti
out
insb
fists
push
add
pop
and
add
insl
jmp
mov
mov
add
or
jmp
push
mov
mov
sti
int
mov
lods
lret
scas
pop
mov
popf
dec
aam
out
adc
xchg
pop
push
cs
fnsave
shlb
into
test
add
mov
add
ss
mov
outsb
aas
aam
std
jg
jnp
push
nop
fstl
stos
xchg
in
shrb
or
mov
push
jae
inc
mov
rcrl
adc
pop
mov
mov
mov
adc
decb
iret
add
sbb
jnp
jl
daa
pop
dec
sub
adc
adc
add
dec
sti
jno
outsb
popf
fisubs
loop
pushf
push
lock
push
jle
jg
int
stc
in
push
outsl
repz
add
dec
xchg
or
addr16
sub
mov
or
ss
push
sub
jl
fs
data16
cmp
xchg
rclb
cltd
dec
ret
push
jae
adc
fadd
fnstsw
scas
das
jge
jg
and
xchg
aad
push
pmovmskb
sub
push
inc
jne
sub
adcb
mov
mov
mov
jbe
data16
loopne
jmp
mov
add
lods
lock
jne
lods
in
cwtl
out
out
mov
ret
aam
cli
push
pushf
fstpl
mov
inc
dec
xchg
lods
sub
arpl
rorb
cmp
flds
outsb
shl
dec
or
ljmp
or
or
mov
or
sbb
enter
fcompl
push
xchg
lcall
flds
add
sahf
icebp
fcomps
jmp
mov
jecxz
je
xchg
add
aad
jae
lock
loope
mov
jnp
imul
cmp
sarl
and
and
aaa
sub
jae
mov
or
cmp
sub
fcomip
outsb
add
add
cmc
xchg
pop
mov
rclb
iret
inc
fs
inc
and
fldenv
mov
idiv
out
cli
push
dec
bound
or
push
push
ds
test
push
jp
out
jl
enter
lock
inc
xchg
or
push
iret
aad
add
repnz
push
push
outsl
push
mov
lcall
fsubs
bound
std
popf
je
cmpl
popa
mov
outsl
test
mov
cmp
jae
cli
repnz
xchg
cmp
mov
repnz
sbbl
jb
in
lea
sub
inc
jl
lret
sahf
jo
adc
cs
pusha
nopl
inc
xor
mov
or
sbb
movsb
mov
or
mov
pop
out
and
sub
dec
mov
pop
xor
outsb
aad
jle
mov
push
mov
inc
sbb
daa
fwait
mov
sub
out
jl
jg
pop
lods
cwtl
push
jecxz
push
das
call
push
jl
js
cmpsl
adc
and
cmpsb
mov
ja
cli
jbe
mov
inc
push
mov
adc
inc
dec
rcrb
mov
jb
xchg
sbb
icebp
rcr
pop
add
mov
inc
push
das
insb
mov
or
xchg
inc
xchg
jb
and
testb
sbb
xor
jg
jne
test
jmp
cs
nop
inc
sub
jbe
es
dec
jno
inc
mov
jmp
out
shlb
rorl
push
adc
xor
aam
aad
loop
not
mov
sbb
ds
cmpsl
and
lret
sub
leave
movq
rcr
loop
mov
jbe
lods
jmp
cmpsl
or
and
add
sarb
cs
jp,pn
inc
xchg
sub
mov
rcr
sbb
and
icebp
pop
pop
jmp
sub
clc
imul
imul
adc
xchg
mov
adc
pop
icebp
mov
lods
xchg
in
iret
cmp
scas
test
mov
clc
dec
movsb
push
cwtl
sarl
mov
shrb
lret
pop
sbb
push
lock
pop
jecxz
pop
mov
dec
cltd
std
ds
xchg
pop
xchg
jno
add
or
leave
outsl
pop
cltd
lods
cmp
idivb
imul
and
clc
imul
adc
sbb
popa
sub
xchg
sbb
mov
pop
pop
xlat
les
or
pop
adc
icebp
pop
loope
xchg
push
jo
loop
lds
in
pop
test
and
adc
shll
mov
outsb
scas
inc
push
sbb
and
jae
aaa
jl
popa
jle
mov
xchg
add
out
lahf
inc
push
loop
loopne
or
push
stos
or
sub
adc
ret
mov
mov
ljmp
xor
bound
jno
andb
jp
push
and
cmpsb
aaa
jbe
int
lods
or
inc
xor
cld
addr16
inc
push
or
outsb
mov
enter
mov
rcrl
test
mov
cmpsb
jns
dec
aaa
lret
pop
push
xchg
cmp
out
cs
sbb
movsl
jmp
adcb
add
cmp
aas
push
mov
iret
cmpsl
int
inc
dec
aad
andb
xor
jo
rcrl
aad
mov
mov
data16
data16
aad
mov
add
or
fsubrp
push
add
data16
fcmove
clc
mov
xlat
jg
xchg
out
jp
sub
sbb
xchg
jno
and
mov
xlat
mov
inc
adc
cwtl
jp
and
idivb
pop
jmp
inc
call
pushf
sbb
ljmp
add
hlt
dec
push
lret
and
cli
adc
mov
xor
insl
sub
imul
arpl
clc
and
mov
outsb
cmpsl
subl
movsb
in
stc
out
xchg
shll
xor
pop
pop
mov
fstpl
pop
sti
jmp
loop
gs
mov
nop
adc
lret
sbb
sbb
sub
sbb
mov
aam
call
imul
push
mov
cltd
and
adc
and
xor
out
push
adcb
jae
jbe
ljmp
cli
iret
xchg
pop
mov
jb
mov
mov
in
fwait
adc
lods
xor
pop
inc
lcall
xorl
jno,pn
repnz
ds
aad
test
ss
sahf
mov
cmc
out
push
dec
and
vpsubusb
lret
std
pop
mov
mov
cmp
cltd
adc
in
fdivl
aaa
inc
cltd
paddusb
fwait
je
pop
stos
xor
adc
push
rep
into
outsb
adc
test
pop
dec
loope
mov
push
aam
push
inc
mov
xchg
rolb
push
ja
ret
mov
shrb
push
xchg
pop
dec
mov
xchg
push
lret
xor
cltd
cs
mov
xor
pop
lret
jnp
daa
fyl2x
lds
inc
sub
xchg
cmpsb
push
ficoml
sub
and
test
mov
push
movsb
xlat
psadbw
shl
adc
enter
mov
mov
stc
loop
rorl
sub
jb
mov
lret
cmp
sub
mov
xchg
fisttpll
in
outsb
add
or
or
sbb
cmp
inc
ds
jbe
repnz
dec
dec
stos
add
pop
leave
cmp
jne
pop
rol
jno
xor
lcall
imul
pusha
cmp
mov
scas
or
shr
ret
inc
or
cli
mov
and
inc
mulb
sbb
mov
stos
cmp
and
stos
shll
negb
sub
test
lods
cltd
std
icebp
cs
sub
je
test
push
clc
push
sub
mov
sbb
dec
fdivr
add
mov
aas
js
sbb
inc
xlat
sbb
ret
hlt
jb
ss
test
mov
sub
nop
jl
iret
sbb
lcall
cs
ficompl
imul
push
addr16
std
and
sbb
pop
and
adc
test
adc
out
andl
mov
sbb
push
ljmp
leave
or
sub
inc
imul
test
cmc
enter
aas
add
out
negl
scas
xchg
mov
pop
mov
or
xchg
test
cmpsb
jmp
mov
hlt
push
jno
sbb
cltd
loope
push
pop
xchg
sub
dec
push
outsb
pop
jno
dec
and
clc
mov
out
inc
mov
pop
shrb
fs
jmp
sbb
daa
shll
jge
ret
in
inc
jmp
negl
cmp
cmp
mov
mov
jbe
sbbb
mov
frstor
sbb
adc
mov
inc
pop
dec
xchg
xor
xlat
jl
push
jb
mov
dec
test
addl
shlb
mov
cmpsb
inc
fldl
inc
pop
cmpsb
add
shl
adc
adc
loope
shlb
test
add
add
imull
orl
cmpsb
lcall
lret
orl
loope
mov
and
sub
pop
popa
rorl
sarb
enter
lcall
lea
cmc
push
add
xor
xchg
dec
mov
lahf
testl
hlt
cmp
insb
dec
add
dec
xor
cld
enter
push
sbb
out
stos
add
jle
lcall
inc
and
lret
cmp
and
adc
ds
inc
pushw
mov
fdivrl
les
mov
jl
inc
dec
mov
ss
cwtl
aam
mov
insl
jl
mov
jmp
pop
mov
pop
clc
mov
hlt
xchg
daa
mov
daa
xchg
add
jno
pop
xchg
das
sub
ljmp
push
add
and
mov
sbb
repnz
add
dec
xlat
ljmp
sub
aam
mov
pusha
xor
mov
arpl
jge
adc
cmp
pop
push
mov
push
bnd
push
adc
enter
cmpsb
cs
inc
jp
shl
stc
aam
cld
test
mov
popf
ret
xrelease
cmp
jmp
sub
dec
imul
call
and
add
fldl
sub
pop
aas
xchg
xchg
mov
mov
frstor
out
jp
and
pop
cwtl
push
mov
bound
mov
adc
add
loopne
imul
push
cltd
loope
dec
jl
xor
testb
lods
cmp
fidivs
sbb
popf
pop
cmp
daa
lods
mov
or
fstl
ret
push
ds
cmp
addr16
xlat
mov
cltd
mov
mov
mov
inc
adc
ja
das
sbb
dec
pop
sub
mov
push
mov
jne
sbb
leave
xchg
je
cmp
gs
in
call
push
sbb
pop
mov
push
push
inc
inc
and
lods
pop
and
adc
sbb
and
xor
scas
sbb
fstps
jecxz
mov
and
cmp
sbb
pop
fs
adc
jg
bound
cli
fwait
mov
dec
shl
inc
into
pop
jbe
inc
add
sub
lods
testl
mov
iret
xor
pop
int3
dec
outsb
dec
mov
test
push
add
xor
mov
inc
mov
mov
sbb
or
cmp
test
fucomi
xchg
dec
or
leave
out
push
js
test
or
aaa
mov
mov
cmp
inc
xor
dec
in
aaa
ja
xchg
loopne
inc
ja
and
push
jnp
cltd
shlb
test
mov
xor
push
cltd
and
sbb
sahf
iret
push
xor
aas
repz
cmpsb
jne
aas
test
jno
repz
test
es
xor
push
test
jmp
sub
movsl
and
inc
movsb
inc
jns
sub
lods
push
push
sar
or
adc
mov
sahf
iret
lods
arpl
je
int3
cmp
mov
push
scas
bnd
jns
bound
es
mov
mov
inc
jo
adc
or
push
adc
mov
mov
xchg
pop
icebp
mov
jle
int3
sbb
mov
fsts
jp
pop
jg
mov
imul
push
mov
cmc
adc
movsl
add
pop
sub
or
in
out
cmpsb
pop
cmp
jo
sbb
fidivs
add
or
fsubs
pop
sub
mov
arpl
pop
jo
mov
pop
clc
lods
and
push
pop
inc
dec
fisubs
pop
or
and
xchg
pop
outsb
inc
cmpsb
jecxz
in
sub
adc
sbb
fidivrl
mov
add
mov
jae
clc
fisttpl
xchg
push
xor
test
fstl
jbe,pt
je
xor
push
aas
and
pop
jno
ret
dec
add
push
into
xor
cmp
lock
mov
mov
mov
fiadds
and
sub
add
lret
push
cmp
arpl
jl
or
pop
mov
xchg
sbb
push
clc
aaa
sub
pop
outsl
in
inc
jo
jp
push
dec
jp
out
cld
mov
scas
add
mov
aad
ret
std
int
and
ss
fldt
xor
dec
adc
mov
sbb
in
cli
mov
add
sbb
sahf
jecxz
int3
mov
pop
dec
mov
mov
test
mov
popf
push
cltd
jmp
fwait
mov
dec
in
jle
pop
test
jbe
inc
and
sbb
xchg
cs
bound
ja
adc
inc
pusha
aas
xor
aaa
imul
mov
imulb
mov
mov
push
add
insb
adc
outsl
mov
inc
sbb
pop
or
out
pop
imul
js
jl
call
adc
cld
into
shlb
add
xchg
and
movsb
dec
and
repz
adc
cmp
stc
mov
dec
into
stos
sub
les
sub
sbb
out
jle
mov
inc
sqrtps
hlt
jnp
mov
mov
adc
mov
mov
fstpl
push
stos
dec
jnp
ja
aas
xchg
addr16
push
cs
ja
fistps
subl
gs
stc
aas
adc
push
fmull
test
incb
mov
dec
mov
mov
xor
dec
xor
lret
push
js
inc
stc
adc
cmp
sahf
clc
xchg
int3
adc
hlt
out
ss
clc
xor
test
movb
pusha
stos
sbb
push
xchg
decl
mov
or
push
in
mov
sub
cli
test
inc
or
mov
pop
xchg
cmc
shl
clc
out
push
popa
push
loope
push
arpl
ffreep
push
sbb
xor
lods
xchg
push
pop
inc
iret
adc
cmc
pop
mov
push
push
adc
mov
adc
and
xlat
fsubrs
bound
ljmp
cld
dec
pop
jbe
notl
cmp
xor
sar
push
cmp
ja
insb
adc
bound
andb
sbb
fcompl
cli
and
jl
and
push
pop
xor
shr
jg
ja
mov
in
das
sub
jae
pop
outsl
fcomps
out
and
cmpsl
in
ret
mov
add
pop
xor
call
iret
fistps
pop
enter
arpl
dec
xchg
adcb
adc
cmc
jp
fsub
inc
lea
adc
xor
out
insl
sbb
push
js
loop
jns
xchg
pop
fsts
test
outsl
imul
repz
xchg
ljmp
push
lcall
xchg
dec
pop
pop
rolw
out
std
mov
or
sbbl
std
push
jb
movsb
cltd
jo
ds
or
mov
sarl
fdivrp
pop
push
or
data16
adc
test
jbe
cltd
out
xchg
push
ja
bound
xlat
jmp
cmpsb
sti
push
lea
testb
inc
insb
push
jo
jns
inc
test
xlat
repnz
xor
es
or
push
jecxz
inc
lcall
add
shld
cli
pop
inc
scas
jo
stc
arpl
jae
neg
cwtl
dec
subl
mov
jae
dec
jecxz
lds
jne
jne
in
stc
mov
shlb
mov
push
jno
cwtl
adc
and
push
daa
dec
jnp
insb
push
pop
inc
hlt
push
inc
dec
or
mov
mov
testb
test
sub
movsb
hlt
ja
cmp
inc
jp
xor
test
pop
mov
icebp
jb
adc
and
stc
mov
push
adc
push
wrmsr
mov
xchg
arpl
xor
aad
jp
mov
sahf
or
aas
mov
lods
jno
mov
xchg
jo
imul
neg
pop
int
push
loop
jno
xor
push
fs
std
mov
fnsave
xchg
fildll
dec
push
lret
test
pop
das
jns
adc
out
scas
mov
mov
sbb
mov
mov
lds
in
mov
jns
daa
rorl
adc
jbe
and
int
outsb
inc
cs
cwtl
mov
dec
loopne
cmp
imul
jg
adc
pop
aas
pop
sub
loopne
mov
pusha
or
and
test
mov
mov
jbe
pushf
lea
adc
es
xlat
xchg
fnstcw
pop
lods
mov
cs
sub
cwtl
pushf
in
sub
fisttps
dec
xchg
repz
jl
out
cmc
loope
ds
bound
lret
aas
daa
sub
pushl
jo
in
adc
bound
mov
push
js
mov
fsubs
push
mov
or
jle
jb
xor
repnz
adc
mov
sub
fwait
jl
or
lea
mov
mov
sub
pop
cwtl
sub
inc
leave
test
outsl
cmp
movsb
stos
bound
add
mov
sbb
cltd
stos
inc
lea
repnz
cmp
ror
int
dec
mov
iret
das
xchg
jmp
xchg
xor
sbb
lock
fidivrl
idivb
xchg
js
pop
int3
out
sbb
shrb
popf
jns
push
push
push
cmp
faddp
xor
lahf
sti
xchg
stc
jl
sbb
push
lahf
add
dec
repnz
xchg
out
test
push
sub
pop
jbe
jnp
mov
cmpsl
jbe
outsb
in
jecxz
xor
inc
push
arpl
es
in
clc
jno,pn
int
and
pop
out
hlt
and
jmp
mov
push
pop
xchg
negl
pop
in
xor
push
add
or
test
dec
pop
in
mov
scas
pop
dec
fildl
mov
popf
cmp
ds
xchg
add
add
je
jb
sti
shlb
aam
mov
mov
leave
lcall
pusha
xchg
test
ss
mov
popa
add
loopne
adcb
mov
popf
insl
or
add
lods
adc
movsb
xchg
jnp
sub
leave
inc
stos
push
stos
aad
aas
test
adc
cmp
sti
into
and
into
sbbb
les
cwtl
fidivs
adc
imul
mov
sahf
cmp
push
mov
daa
in
lods
mov
lret
push
and
ja
sar
xchg
xchg
push
outsb
xchg
aaa
scas
fs
insl
leave
mov
pop
jne
inc
sbb
inc
out
pop
sahf
add
adc
lahf
sbb
repnz
mov
cmp
inc
and
aas
mov
jbe
arpl
mov
push
mov
push
dec
mov
adc
ja,pt
adc
cmpsl
mov
xlat
or
cltd
lods
stos
repz
xchg
inc
sbb
sub
jle
mov
repnz
dec
aad
push
xchg
sbb
lcall
cmp
pop
cwtl
hlt
and
ds
dec
jo
push
filds
push
xor
jmp
sbb
lods
xorb
adc
mov
mov
pushf
lods
dec
push
mov
clc
arpl
subb
dec
std
mov
sarl
test
pop
xor
andb
movsb
cmp
lcall
pop
loop
lret
call
pop
cmp
mov
fisubrs
and
mov
push
and
enter
cmp
and
dec
in
out
sub
ds
push
jo
rep
insb
nop
addr16
cmp
lods
sbb
xor
lock
int3
xchg
fcomp
ret
gs
dec
or
dec
fbstp
inc
pop
lods
cmp
sub
sbb
ret
and
lret
mov
mov
icebp
iret
dec
cmp
das
aad
lcall
push
enter
cld
mov
test
push
arpl
dec
iret
or
push
ja
ret
fnstcw
jae
movsb
sub
push
int
push
iret
scas
sahf
lds
jle
popa
sub
popf
adc
mov
jg
int
or
outsb
scas
gs
mov
push
xor
ja
xchg
mov
pop
mov
mov
shll
negb
mov
test
jecxz
ret
lock
cmovge
das
jae
loopne
xor
sbbl
test
jbe
or
and
xchg
inc
sbb
mov
xor
adc
push
mov
push
mov
mov
cmpsl
push
das
adc
andb
dec
addr16
inc
mov
leave
jl
loope
insb
inc
push
sub
sbb
scas
dec
xor
pop
pop
mov
inc
punpckldq
nop
movsb
iret
pop
pusha
mov
enter
xchg
dec
push
dec
push
mov
jge
dec
movsb
or
mov
les
lcall
mulb
leave
ss
jns
dec
inc
in
test
lret
fsubrl
dec
outsl
push
push
jno
in
add
push
lods
and
stos
cmp
mov
aas
xor
cmpsl
aas
repnz
mov
int3
jb
scas
ds
mov
ror
jecxz
lahf
inc
enter
mov
or
lret
add
sbb
cltd
jmp
fbstp
adc
adc
je
mov
or
xchg
incb
out
arpl
repnz
xor
ja
dec
mov
sbb
xchg
std
mov
div
out
mov
bound
sbb
mov
and
fwait
scas
je
xor
test
pop
dec
scas
and
sti
aaa
dec
into
addr16
sbb
add
repnz
sub
jmp
into
xor
mov
ljmp
aaa
imul
push
incb
insl
pop
pop
pop
pusha
adc
inc
leave
and
loop
add
data16
testl
icebp
es
pop
aas
lock
divb
and
aad
icebp
lods
mov
es
dec
jae
aaa
fnstsw
and
pop
push
and
ja
xor
fcomps
pop
cmp
mov
scas
stc
andl
push
ss
jl
pusha
sbb
lods
adc
dec
cltd
jns
shr
insl
lds
push
rorl
fadd
filds
inc
mov
in
xchg
add
fisttpll
std
push
push
cmpb
mov
add
add
adc
loop
fsubl
fnstsw
daa
mov
push
fsubrs
sahf
push
or
cmpsb
repz
jmp
out
insl
sahf
icebp
imul
nop
mov
mov
mov
lds
jg
mov
fmull
mov
mov
adc
inc
iret
ljmp
movsb
stc
mov
mov
mov
hlt
ja
jno
icebp
jle
sbb
add
and
mov
push
cmp
adc
mov
lahf
fildl
dec
push
mov
fdivrs
jnp
imul
jbe
sbb
hlt
and
push
inc
cmpb
stos
push
pop
out
pop
push
fdivl
jae
scas
or
movsb
stos
mov
aam
mov
mov
int3
movsb
out
repnz
adc
arpl
ret
enter
jp
notb
pop
inc
imul
jnp
or
pop
sub
dec
into
pop
cmpsb
int3
jecxz
repnz
add
sub
loope
fcomp
lods
stc
sub
in
stos
hlt
fildll
xor
add
fmull
lock
jge,pt
pop
call
adc
pushf
js
fwait
insb
mov
arpl
rep
jle
icebp
push
std
stc
mov
mov
pop
dec
pop
add
add
or
push
dec
roll
inc
jle
mov
js
mov
pop
jbe
ficoms
dec
outsl
push
xor
nop
fndisi(8087
add
push
or
mov
inc
xchg
or
sar
jnp
mov
imull
lret
jo
loop
mov
gs
stc
fidivs
dec
enter
lods
or
push
mov
sub
fidivrl
jge
add
sbb
cmpsb
jg
or
xor
and
call
cmpb
and
jmp
fs
jbe
imul
movsl
xor
jg
pop
fwait
jmp
cld
repz
mov
jecxz
movsb
jge
scas
arpl
icebp
inc
cwtl
inc
mov
js
add
and
scas
cmp
popf
add
int3
outsl
repz
add
jp
scas
pop
adc
jmp
stos
mov
repz
sbb
cmc
cs
xor
mov
jnp
mov
cmp
xor
in
and
ficomps
mov
mov
or
jecxz
mov
cmp
hlt
jae
xchg
add
mov
mov
aad
and
sub
repnz
sub
out
jno
sbb
adc
xchg
cli
mov
cmp
mov
dec
jle
fistpll
and
test
stos
fisttpl
shll
imul
or
stos
mov
xor
or
push
std
mov
insb
das
in
ffree
es
pop
adc
inc
sti
aaa
fdivrl
cmp
mov
push
pop
leave
fisttpll
inc
bound
scas
test
out
cmp
cmp
jp
cmp
or
inc
xor
leave
cmpsl
sub
aad
lea
xchg
dec
outsl
mov
imul
mov
addr16
pslld
fwait
push
jmp
loop
cmp
and
iret
or
int
out
sbb
negl
fwait
xor
pop
pop
mov
fcmovnu
mov
imul
test
push
sub
pop
or
insb
rorb
jl
sub
aam
xchg
sub
jno
cmp
dec
fidivrl
jecxz
cmp
in
test
std
mov
ljmp
bound
stos
lahf
ja
inc
xchg
cli
loope
jb
testl
repz
push
jp
mov
pop
es
xor
inc
sarb
jae
mov
outsl
fdivs
cli
mov
movups
pop
jnp
int
inc
jbe
jns
inc
fdivr
jnp
test
mov
jmp
aaa
push
xchg
push
sub
ficompl
addr16
lock
sbb
jmp
mov
xchg
mov
pusha
mov
and
imul
rorb
mov
and
jne
pop
es
adc
jmp
and
and
cmpb
sub
test
std
sbb
mov
dec
pop
mov
fadds
and
loopne
push
cld
js
dec
inc
loopne
dec
loope
adc
daa
add
dec
push
sti
sti
and
inc
add
xchg
xor
xchg
scas
enter
sbb
sbb
vcomisd
out
ret
and
insl
push
jnp
or
sub
xor
dec
rcl
ret
jno
dec
add
ffreep
iret
pusha
add
add
ss
jns
push
xchg
enter
xor
push
imul
mov
lock
xor
cld
subl
sarl
mov
cs
jnp
mov
mov
push
push
rcll
pop
bndstx
repnz
jno
xchg
cli
cmpsl
xchg
adc
sub
sub
inc
add
xor
xlat
dec
xchg
jbe
stos
ja
std
mov
mov
repz
add
mov
dec
out
idivb
mov
mov
das
jle
popa
dec
mov
in
jg
je
mov
arpl
ror
mov
int
ficomps
lods
inc
lock
dec
or
jae
icebp
mov
lods
add
mov
daa
cli
jnp
mov
cmpsl
or
adc
and
pop
adc
adc
pop
xchg
jno
pushf
sbb
ficompl
and
add
sub
inc
mov
test
cmc
inc
ds
mov
sahf
mov
xchg
xchg
enter
out
mov
xor
and
rclb
jno
inc
das
out
inc
fistpl
je
pop
leave
mov
dec
mov
cmpsb
dec
mov
sbb
insl
xor
popa
adc
mov
xchg
or
cli
dec
inc
movsb
fwait
jnp
ret
xchg
stos
jp
jae
push
popa
xchg
xchg
rcrb
push
mov
adc
cmp
iret
mov
andb
je
lret
or
fidivrs
push
imul
arpl
jmp
jge
das
add
addr16
lea
jae
fiaddl
dec
call
or
sub
mov
xchg
adc
mov
pop
ss
jae
cmp
fisubrs
repnz
incb
sub
pop
mov
mov
mov
push
xlat
pop
subb
jmp
cmp
pop
shll
popa
stc
imul
repz
xchg
ss
mov
lcall
pop
cmc
xchg
sarl
dec
movsl
sub
push
pop
in
and
pop
aas
mov
dec
mov
jg
cmp
push
test
add
mov
mov
mov
rorl
jl
mov
lock
pop
fcomip
sub
jl
adc
inc
lods
sbb
fs
cli
addr16
daa
clc
mov
insb
cmpsb
dec
das
pop
gs
aad
int
jo
add
cmp
mov
inc
push
fisubl
and
dec
lret
sti
je
inc
lret
xor
push
mov
bound
sti
movsl
inc
sbbb
inc
imul
cmp
fwait
inc
jno
mov
xor
ljmp
push
dec
stc
push
or
cmp
dec
dec
inc
lcall
sbb
pop
jae
lret
or
test
ljmp
fistpl
in
add
mov
xor
je
sub
cwtl
cmp
pop
jg
imul
mov
iret
pop
sub
hlt
scas
sbb
repz
lahf
mov
mov
test
sbb
push
insb
punpcklwd
jb
push
sbb
mov
hlt
movsb
shll
aam
faddl
mov
push
jge
xor
outsb
inc
push
cmp
mov
lds
xchg
bound
leave
adcb
jne
cmp
loopne
icebp
push
inc
sbb
mov
std
pop
dec
mov
or
pop
out
lcall
roll
jg
lods
add
cld
and
repnz
jne
adc
xchg
add
mov
adc
cmp
push
cmpsl
inc
sbb
mov
cwtl
ss
cmpsl
sbb
sub
sbbb
push
dec
xor
pop
out
dec
int3
nop
cwtl
mov
inc
test
lods
in
mov
mov
push
push
in
sbb
out
or
mov
loop
xchg
cli
jno
xor
jg
rcrl
hlt
mov
gs
fucomp
jmp
rcr
push
jecxz
xchg
pop
int
cli
adc
repz
ljmp
sub
popa
js,pn
push
xor
arpl
sar
fwait
push
test
ror
inc
mov
fsubrl
sbb
push
inc
sarl
sub
pop
xchg
cwtl
mov
pop
int3
pop
daa
inc
add
faddl
cmp
mov
lds
cmp
ds
xor
gs
fistl
bound
arpl
push
sti
sti
pop
and
sub
lock
popa
mulb
xchg
push
pushf
jp
insl
cmc
loopne
fwait
aam
sbb
pop
idiv
scas
push
loop
mov
xchg
pop
adc
inc
das
mov
aaa
es
movsb
out
sub
mov
pushf
test
test
jmp
and
dec
and
cld
fisubs
pop
mov
mov
or
jno
xchg
cmp
inc
ds
xor
mov
clc
out
jp
xor
pop
jge
push
inc
dec
or
adc
pop
insb
repnz
insb
cmc
scas
call
push
in
adc
sbb
sbb
add
adc
push
into
and
sub
push
jb
cmp
sub
adc
cmc
sbb
imul
std
jns
dec
addr16
push
repnz
mov
enter
in
mull
int
cmpl
add
in
jg
clc
xchg
scas
sti
ret
imul
jae
dec
scas
add
dec
cmp
outsl
adc
and
dec
mov
lahf
mov
ss
mov
test
or
add
sbb
cmp
loop
xor
adc
xor
sar
adc
adc
lods
negb
addr16
xchg
outsl
decb
ret
jecxz
push
xchg
movsb
push
jns
leave
dec
mov
sbb
neg
cli
adcb
jae
mov
enter
ret
sub
lret
mov
push
push
orl
mov
cs
mov
stc
dec
sbb
insb
mov
call
outsb
mov
ret
add
ficomps
fdivrp
jg
pushf
add
mov
push
test
cmp
shrl
ja
jp
fwait
xor
mov
adc
mov
pop
xchg
dec
and
fwait
jnp
out
or
xchg
add
loop
and
push
notl
jle
je
mov
in
js
cmp
fidivs
imull
out
popa
jbe
push
pop
daa
cmpsl
jle
xor
in
mov
scas
outsb
leave
movsb
cmp
icebp
daa
sti
fbld
mov
xlat
dec
or
or
ljmp
daa
xchg
imul
ret
mov
nop
addr16
stc
imul
xor
xorb
or
cltd
pop
nop
and
cmc
add
stc
or
fcmovnb
xchg
or
mov
cld
lea
adc
sub
add
gs
pop
jp
call
and
cltd
mov
test
mov
push
insb
vaddps
mov
pop
dec
shlb
pop
mov
lcall
cmp
es
push
pusha
cmp
cltd
push
push
mov
cmp
sbbl
pop
push
sbb
roll
mov
mov
popf
enter
test
dec
sub
fiadds
rclb
inc
das
lahf
sbb
cmp
push
das
or
xor
sbb
ret
pop
popf
pushf
rcll
inc
jb
pop
lret
cmpsl
outsl
mov
addr16
js
adc
aas
lahf
or
fincstp
arpl
pop
lea
xchg
push
lds
xchg
hlt
imul
gs
fmuls
or
push
cmp
rolb
sbb
les
dec
lret
jmp
cmpsb
imul
mov
push
jbe
leave
ret
pop
inc
push
je
mov
sbb
loop
push
nop
cmpsb
xchg
fst
or
bound
jb
ja
sub
ljmp
xchg
sub
sti
scas
cmp
push
add
push
push
cmpsl
addr16
cmp
rorb
in
push
push
imul
xchg
sbb
in
xchg
addr16
cmp
fsts
push
pop
inc
rcrb
dec
shrl
lea
lods
ret
das
xchg
aad
dec
xchg
outsb
outsb
js
mov
pop
add
call
lods
mov
pop
or
jns
cmp
add
ret
jne
pop
sub
clc
jg
mov
inc
movl
mov
pop
inc
rcll
mov
gs
leave
cld
xor
fdivs
sbb
push
imul
inc
inc
ja
std
pop
repz
leave
fwait
mov
iret
jno
sbb
scas
jmp
pop
outsb
shrb
and
cmp
test
inc
out
cs
push
and
sub
jl
xor
sti
cli
mov
out
cltd
popa
jmp
mov
xchg
ja
sbb
cmp
fidivrl
add
inc
insb
mov
loopne
gs
std
inc
xor
cmc
jns
shrl
push
jo
push
fbstp
mov
adc
cmc
in
pop
adc
lret
leave
pand
push
pop
lea
mov
sub
cmp
out
adc
adc
cmp
cli
and
push
pop
xlat
adcl
inc
fisubrl
cmp
test
add
je
cmp
pop
ja
add
daa
pop
popa
xor
aaa
bound
adc
xchg
sahf
add
out
in
gs
pop
imul
hlt
mov
pusha
xchg
cmp
je
sbb
ds
xlat
mov
adcb
in
xor
sbbl
imulb
jo
add
shl
iret
ljmp
gs
mov
insb
jae
jmp
pop
cmp
inc
mov
movsl
jne
xlat
xchg
mov
movsb
and
sub
fdivl
add
dec
sub
test
sbb
jno
add
dec
insl
fs
and
ja
jns
aam
xor
pop
inc
fcoms
mov
jle
push
jno
sbb
add
shl
out
decl
push
test
cmpb
in
mov
inc
test
stos
and
stos
in
aad
xlat
test
imul
mov
cmp
je
sub
inc
and
or
adc
mulb
dec
loope
mov
mov
lds
jle
xchg
std
add
cwtl
repnz
rorl
adc
addr16
cwtl
stos
pop
cmp
mov
push
xor
lock
mov
push
push
mov
and
sbb
int3
leave
xchg
dec
cmp
xor
fnstsw
add
and
or
or
test
popa
into
inc
arpl
push
gs
adc
mov
cmp
add
call
clc
adc
mov
mov
mov
fidivl
lcall
ss
xor
ja
cwtl
xchg
push
dec
pop
mov
jmp
test
icebp
sub
fisubrl
jge
nop
hlt
adc
mov
fbld
xchg
xor
sub
sbb
pop
pop
adc
xchg
mov
cwtl
mov
ficoms
data16
loopne
xchg
jp
sbb
leave
sti
pop
outsb
pop
xchg
lea
add
mov
call
add
sbb
jno
mov
mov
jge
mov
ficomps
es
push
push
leave
lds
daa
adc
dec
idiv
hlt
orb
sahf
pop
daa
mov
shll
in
mov
pop
test
xor
movsl
xor
xchg
push
xlat
add
xchg
xchg
cltd
push
and
sbb
or
or
fs
inc
sub
insl
fistl
mov
sbb
inc
lcall
decb
call
mov
test
xor
adc
sbb
outsb
popa
mov
outsl
or
lock
mov
sbb
xchg
xor
dec
jmp
fcompl
and
sub
aad
das
push
and
pop
out
xchg
pop
mov
or
icebp
lret
add
mov
jl
inc
or
sbb
aaa
mov
lcall
cmp
fnstcw
outsb
push
dec
loop
push
inc
insb
adc
xor
mov
xor
movsb
aas
mov
jg
mov
daa
and
xor
pusha
std
xor
push
or
jb
fchs
movsb
push
lcall
and
gs
xchg
mov
in
xor
mov
xchg
inc
clc
imull
out
jle
fadd
and
aam
nop
add
mov
repnz
fdivrs
cmpsl
dec
mov
ljmp
ficoms
int
dec
mov
adc
and
dec
fwait
mov
int3
out
cli
xor
std
inc
aam
adc
fdivs
pop
imul
dec
cmpsl
mov
ljmp
lcall
lock
push
mov
lret
out
inc
jl
dec
mov
push
add
jo
add
mov
pop
int
bound
pop
jg
sti
leave
push
stos
adc
mov
or
in
psubq
push
cmpsl
pushf
into
mov
ficompl
cs
mov
aas
mov
xchg
outsl
jl
in
adc
cmp
mov
xchg
scas
push
test
inc
pop
insl
inc
aam
push
mov
cli
dec
loop
sbb
in
pop
movsl
mov
sahf
shll
bound
dec
inc
fisubrs
in
shl
js
stos
jge
push
icebp
mov
lea
rolb
cmovne
xor
jg
mov
sbb
repz
sub
fs
mov
sub
fcom
pop
addl
insl
or
xor
and
push
ror
sbb
in
movsl
mov
pop
mov
pop
xlat
push
xchg
movsl
mov
mov
cwtl
dec
mov
aad
int3
in
dec
fistps
and
je
mov
enter
loopne
push
xchg
xorb
repz
ds
add
mov
aaa
xor
mov
outsb
jecxz
xchg
sbb
mov
icebp
ror
cwtl
sbb
jle
in
mov
fs
in
shll
sub
sbb
cwtl
adc
out
and
xchg
push
sub
dec
lahf
inc
jecxz
neg
outsb
test
in
ffree
sub
adc
add
dec
adc
sarl
xor
es
lret
lods
push
xor
jnp
ret
fnstcw
addr16
test
adc
dec
pop
lret
push
fdivs
arpl
mov
int3
xor
pushf
popa
pop
dec
pop
aaa
push
aaa
jecxz
xchg
scas
cmpsb
stc
sti
test
pop
mov
cmp
xlat
sti
jge
movsb
dec
add
stc
fisttpll
push
cmpsb
shll
outsl
mov
push
adc
fdivrl
adc
aam
cmp
scas
mov
cmp
xor
jmp
push
scas
or
dec
mov
cli
dec
fidivs
hlt
orl
or
pop
fstl
fdiv
mov
sub
icebp
xchg
cmpsb
repnz
inc
and
dec
std
push
push
sbb
shrl
dec
pop
test
push
clc
sbb
dec
jl
js
hlt
and
add
popa
repz
cmp
stos
push
push
sub
mov
sub
xchg
std
add
cmc
or
fwait
lcall
xor
push
pop
cmp
fcoms
out
cmp
pop
subb
es
jle
pop
mov
or
lods
mov
add
pop
lret
pusha
test
popa
or
aaa
jg
mov
hlt
enter
imul
popa
icebp
test
adc
xchg
xor
jns
aas
shrb
pop
push
push
into
lret
mov
je
popf
add
xor
repnz
jecxz
sub
inc
pop
imul
out
or
push
fildl
or
stos
inc
out
sbb
dec
pushf
adc
mov
sub
loope
xor
lods
rclb
mov
pop
push
imulb
jne
fwait
cmp
lcall
mov
sub
xchg
mov
mov
adc
sub
pop
clc
ljmp
pop
or
pop
push
icebp
adc
fistps
mov
lahf
mov
cmp
shlb
ljmp
mov
movsb
mov
adc
insl
sub
dec
cld
addl
dec
cmp
add
fcomip
lret
mov
inc
addr16
cmp
pop
stc
sbb
ret
mov
jnp
inc
push
xor
popf
mov
push
jge
mov
or
add
mov
mov
gs
xor
into
jge
jne
xchg
jl
enter
push
adc
dec
dec
adc
hlt
mov
aad
mov
fistpl
mov
ds
mov
mov
mov
add
popa
repnz
mov
rolb
or
add
test
imul
jae
or
adc
xchg
test
aam
outsb
jae
outsl
or
lock
sar
pop
in
adc
dec
test
add
dec
xor
mov
xchg
pop
arpl
jl
iret
push
cmp
cmp
loopne
adc
inc
inc
stos
insl
mov
cmpl
mov
mov
repnz
pop
mov
sbb
hlt
push
pop
add
stc
in
and
fs
fimull
outsb
mov
dec
sub
mov
inc
mov
cltd
inc
add
mov
or
scas
adc
mov
push
jns
sub
pop
insl
pushf
rorl
xchg
sub
push
push
pop
jo
daa
pop
and
jno
lret
push
and
jmp
cld
xor
mov
into
stc
mov
movsl
test
rcl
outsb
outsb
dec
jo
fisttpl
out
repnz
mov
mov
sub
xor
dec
and
xor
inc
lock
fcomip
mov
idivl
dec
sub
cmp
lahf
hlt
loope
and
div
frstor
lock
lods
cli
pop
idivb
iret
lds
cmp
jl
data16
bound
push
push
cli
out
dec
sbb
jp
xchg
and
test
push
and
adc
xlat
xor
mov
push
pop
iret
push
xorb
inc
ret
xor
push
incb
pop
fbld
mov
call
test
in
aam
mov
push
scas
adc
testb
mov
sub
mov
push
xor
and
outsb
mov
repnz
add
cmc
rorl
mov
pop
fs
pushf
pop
repnz
fwait
inc
mov
popa
mulb
push
pop
inc
popa
pop
leave
ljmp
dec
les
enter
jle
mov
loopne
out
pop
and
mov
lock
stos
pop
push
imul
mov
rolb
mov
mov
sub
rcll
dec
shlb
test
jnp
jae
test
mov
cld
push
adc
cld
inc
idivl
mov
test
hlt
adc
push
pushf
dec
out
fimuls
sbb
mov
dec
push
xor
jbe
rclb
js
ja
lret
insb
jmp
mov
mov
xor
jno
popf
xchg
call
in
mov
jp
pop
mov
lods
sbb
or
push
sub
std
bnd
out
lret
out
dec
and
lods
dec
and
mov
jecxz
jns
mulb
orb
inc
dec
mov
jge
rcrb
sbb
bound
hlt
sbb
sbb
inc
fsubp
out
pop
adc
xor
xor
cmp
push
pop
das
inc
daa
mov
leave
enter
xchg
hlt
ds
push
call
pusha
push
adc
stos
cli
mov
insb
fucomip
xor
in
add
test
clc
xchg
pop
rcrl
mov
sub
aaa
jb
aam
inc
mov
xchg
xchg
loopne
fdivrs
pop
cwtl
test
cmpl
leave
jae
aas
push
lahf
xor
xor
sub
sbb
icebp
in
sbb
arpl
das
in
arpl
mov
call
jne
sbb
jmp
cmp
xor
dec
scas
pop
stos
test
adc
stos
cmp
push
vmread
dec
adcl
into
popf
sub
rcr
cmp
jns
jnp
movsb
fisttps
shll
jno
dec
out
mov
mov
xchg
inc
sub
in
pop
push
add
ret
push
dec
aad
jmp
int3
jecxz
sub
cmpsl
movsb
pop
pop
xlat
jl
sub
xor
clc
ljmp
dec
aas
fwait
xchg
jb
fcoml
cmp
xchg
daa
push
pop
aaa
shrl
pop
lods
push
mov
jbe
js
lods
dec
mov
xchg
mov
add
xor
cs
and
out
xchg
sub
lea
and
jnp
or
pop
sub
pop
jno
pusha
dec
int
jbe
dec
mul
or
dec
jle
sbb
out
mov
je
mov
xor
pop
or
or
adc
in
cwtl
push
xor
ja
dec
pushw
ret
add
mov
push
cmp
adcl
mov
mov
orb
les
mov
push
adc
into
mov
push
lret
xor
outsl
and
inc
std
stc
add
fbstp
sahf
and
jle
fcom
hlt
lock
fldt
mov
adc
popf
test
xor
shlb
fmull
es
sbb
mov
dec
insb
in
sub
cmp
andl
cmp
cmp
aas
lock
repz
jge
mov
aad
fisttps
cld
push
and
mov
sti
iret
mov
loope
mov
mov
jl
push
cmpsl
out
popa
clc
dec
movsl
daa
ror
data16
sarb
adcb
outsb
or
jns
mov
divb
and
dec
mov
xor
or
fsubrl
and
les
test
mov
movsl
mov
call
mov
pop
xchg
jns
cmc
mov
icebp
inc
shlb
nop
popf
lds
or
pop
mov
or
scas
aad
jns
xchg
push
sub
adc
aad
mov
cmp
repz
jae
cli
enter
pop
sbb
and
loope
cmp
sti
jmp
mov
fnstcw
ret
mov
xchg
mov
or
mov
aam
rep
enter
stos
clc
test
aaa
pop
add
lahf
ja
js
out
js
push
pop
sbb
lods
cmp
xchg
xchg
xchg
js
dec
mov
push
add
orl
cmc
adcl
pop
adc
push
imul
daa
push
lret
sahf
cltd
sbb
in
jbe
out
popf
push
xchg
ljmp
xlat
mov
or
fmull
pop
in
add
push
push
push
mov
dec
mov
pop
push
jne
and
sub
inc
dec
nop
cmp
inc
add
imul
adcl
jns
cli
jo
or
repz
mov
je
push
inc
scas
xor
pop
bound
or
sub
push
loopne
xchg
pop
inc
or
int3
repnz
xchg
jns
mov
mov
mov
inc
repz
rclb
push
pop
cmp
mov
fcomps
loopne
jp
mov
or
xchg
jl
jnp
adc
icebp
aam
or
or
icebp
lds
add
adc
mov
mov
mov
movsb
andb
negb
fcompl
cwtl
mov
test
jbe
dec
outsb
adc
sbb
fimull
movsl
pop
sbb
iret
pop
sti
andl
dec
lds
mov
xchg
repz
pop
pushf
and
xor
dec
mov
arpl
fldcw
test
mov
js
shrb
sub
mov
in
push
subl
out
ds
add
xor
lret
scas
cwtd
push
xchg
add
faddp
scas
arpl
lahf
mov
insl
xchg
push
adc
and
arpl
test
jmp
cmp
in
sub
push
fs
adc
sbb
in
push
subl
sti
loopne
xchg
sub
mov
push
repz
mov
and
push
cltd
stc
sbb
gs
cwtl
mov
arpl
push
adc
lds
or
ljmp
pop
mov
iret
sbb
xchg
inc
mov
pop
jae
inc
mov
or
roll
ret
fistpl
adc
fcmovnbe
outsl
rorl
daa
repnz
push
outsl
std
in
test
jns,pn
pop
loope
xor
movsl
pusha
fnsave
push
push
inc
cwtl
je
lret
xchg
xlat
and
add
mov
adc
clc
add
out
arpl
jb
movaps
or
rcll
movsb
adc
mov
aam
cs
lcall
sub
xor
fwait
mov
xor
sub
dec
push
cmp
mov
testb
icebp
std
lock
cmc
add
sub
cs
loopne
das
xchg
lods
add
lods
popf
xchg
mov
pusha
in
in
clc
test
sbb
cmp
mov
rcrl
daa
ljmp
push
or
lds
shll
and
cmp
inc
pop
bound
mov
repz
xchg
xchg
xor
xchg
mov
push
push
sbb
loope
xchg
push
in
mov
loopne
mov
decl
xchg
dec
popf
jo
sbb
andb
mov
sub
inc
pop
into
jnp
mov
mov
dec
pop
add
mov
mov
fistpl
or
lahf
inc
dec
inc
fs
pop
xor
cmp
and
loopne
dec
pop
std
rcrb
enter
pop
mov
fld
js
icebp
jns
mov
rcr
mov
sub
fsubl
out
dec
les
jns
dec
xor
inc
xchg
dec
mov
imul
cmp
je
jge
ja
lods
fisttpll
inc
sti
cmp
xlat
cwtl
push
adc
mov
aaa
adc
in
dec
mov
xchg
aam
cli
sbb
pop
jle
sahf
inc
in
repnz
daa
lods
pusha
jb
je
mov
repnz
aaa
jg
lods
jno
dec
xchg
mov
outsl
das
cs
je
dec
inc
not
xchg
out
js
fcomp
rorb
inc
clc
sub
adc
or
movsl
inc
mov
lea
clc
sub
in
and
out
cld
xchg
dec
lods
pop
mov
or
xchg
out
xchg
fisubrs
push
out
por
dec
jge
add
add
ja
aad
push
push
cwtl
inc
push
arpl
in
pop
gs
mov
stos
negb
cmp
lods
ret
adc
mov
push
int3
in
push
divl
add
dec
inc
adc
or
or
inc
aam
xor
jbe
and
xor
or
loopne
and
sub
aaa
sub
ret
cld
ljmp
adc
std
jae
aam
rorb
insl
subl
mov
push
pushf
inc
aas
es
inc
adc
adc
aaa
pop
fmul
push
inc
mov
fiaddl
jg
int3
cs
out
push
cmp
dec
mov
mov
rcll
addr16
in
mov
pushf
lock
stos
sub
int
cltd
or
je
xorps
inc
inc
data16
test
sub
jp
lods
fwait
cmpsl
test
in
mov
test
insb
jne,pt
push
lods
and
lods
movsl
icebp
pop
cmpsl
jne
pop
push
inc
andl
push
mov
testl
xchg
adc
xchg
mov
mov
icebp
popa
lds
rcll
push
pushf
loop
subb
cmp
leave
cmpsl
test
ret
jecxz
push
push
test
inc
stc
xchg
mov
rolb
rorb
std
jp
sub
mov
sahf
jge
popf
xchg
lods
push
das
or
lock
popa
push
lods
lods
cmc
push
popa
pusha
fnstsw
fmul
push
dec
test
inc
and
xlat
test
pop
pop
cmp
call
notl
stos
ret
pop
fwait
ret
addr16
jne,pn
dec
and
loopne
aaa
cmpsl
and
lods
call
or
xchg
mov
sub
outsb
xor
aas
mov
loop
aam
fadd
mov
outsl
ret
subb
jo
dec
les
jae
das
jmp
jae
loop
fstpl
iret
jecxz
fistps
xchg
push
xchg
push
call
mov
vmovntps
loop
pop
inc
inc
imulb
cmpsb
aaa
pop
js
pop
inc
cltd
shll
mov
scas
push
xor
xchg
paddd
pop
cs
xlat
mov
or
add
int3
inc
or
push
lret
inc
adc
lcall
mov
sar
movsl
xchg
add
mov
dec
filds
push
xor
push
mov
and
pop
jge
test
cmp
cs
scas
mov
lds
push
aad
div
pop
mov
mov
or
fistpl
es
sub
shll
jbe
and
cmpsb
repz
fcompl
imul
xor
fsubs
xchg
fistl
jmp
and
xor
xor
outsl
sub
movb
mov
fcompl
xor
xor
xchg
fistps
cld
cld
mov
fsubrp
nop
and
and
in
mov
dec
ja
inc
scas
push
and
mov
pop
jns
push
fdivp
rclb
pushf
lds
stc
ss
loopne
dec
outsb
xchg
mov
int
pop
inc
and
ss
daa
adc
dec
mov
inc
sbb
ljmp
cmpsl
sbb
jbe
pusha
dec
mov
int3
mov
xor
lea
in
push
adc
enter
test
xor
aaa
movsb
and
mov
out
sbb
push
inc
sub
aaa
dec
fisubrl
gs
xchg
jmp
ljmp
clc
clc
cmp
add
sub
push
test
insl
test
in
ljmp
inc
xor
addr16
sub
and
aaa
mov
dec
jecxz
je
bswap
cmp
repz
jl
and
adc
cmp
mov
cmc
pop
repz
jne
add
cmp
add
or
fbld
in
mov
js
dec
ljmp
popa
lahf
ss
gs
in
cli
cvtdq2ps
jo
xchg
push
or
jb
dec
mov
test
or
sbb
lea
scas
jo
insl
sub
std
ret
loop
xchg
adc
sub
outsl
xchg
mov
pop
xor
insb
pop
rcr
into
lods
les
mov
sub
xchg
mov
add
mov
in
mov
mov
fsubrl
cmc
xchg
adc
ret
jp
sbb
sbb
fadds
aam
sbb
add
movsb
pop
jp
mov
inc
out
push
or
pop
mov
sbb
jge
xor
ds
or
pop
add
test
inc
inc
pop
outsl
les
pop
or
mov
push
sbb
jge
nop
pop
or
mov
faddp
lret
dec
mov
or
mov
xchg
mov
mov
pop
leave
fwait
out
fs
xchg
jne
jl
das
pop
add
call
jnp
sbb
add
sub
mov
lock
pop
cmc
rorl
rorb
pop
xchg
sub
sub
orl
sub
les
mov
inc
inc
or
stc
add
hlt
movl
jno
aas
dec
and
and
sub
je
into
mov
xchg
ljmp
mov
in
shrb
fmull
fsubl
push
inc
lea
pop
adc
icebp
sbb
inc
sbb
stos
mov
pop
inc
nop
pop
mov
add
jg
cmpsb
rcrb
std
inc
pop
cmpsb
hlt
jno
into
and
push
sbb
cmp
add
push
cmp
push
lock
dec
leave
mov
push
dec
pop
or
fdivrl
xorl
dec
adc
in
mov
stc
jne
test
pushf
rorl
sub
nop
fidivrl
gs
push
xor
icebp
mov
push
push
sub
sahf
jbe
inc
mov
das
out
pop
sbb
mov
aas
mov
scas
arpl
xchg
addr16
movsl
movsb
lea
dec
cmpsl
and
jecxz
push
fwait
arpl
js
lods
sub
ret
mov
xor
pop
sub
icebp
inc
sbb
repz
fstl
rcr
sti
add
mov
cmpb
inc
lods
xchg
and
xchg
push
inc
mov
fisttpl
jne
jnp
ss
sahf
mov
pop
movsl
int
mov
lods
psrlq
cmp
pop
scas
sti
mov
lock
test
imull
jp
jne
add
cmpsl
scas
sbb
xchg
lret
xor
hlt
stos
jo
xchg
fcom
enter
adc
inc
and
outsl
loop
xchg
ss
outsl
add
lret
std
loopne
jbe
xchg
lods
add
leave
sbb
cmp
mov
mov
into
and
sub
sub
cmp
jo
mov
xchg
mov
mov
add
ss
adc
orl
popf
ds
adcl
cmc
cltd
jnp
outsb
and
and
push
out
in
outsl
arpl
sbb
out
push
inc
or
cltd
push
call
push
pushf
pop
rcrl
test
xchg
cmpsl
jo
je
xor
popa
xchg
mov
outsb
xchg
aam
in
fs
inc
sbb
test
lods
push
or
ret
inc
mov
dec
xor
scas
cmp
push
jmp
pop
jge
jne
add
mov
repnz
loopne
push
push
mov
pop
xchg
lock
scas
inc
dec
sub
xlat
stos
dec
add
mov
lds
dec
je
dec
outsl
push
dec
cltd
sbb
lret
test
hlt
push
insl
inc
inc
inc
cmp
sub
out
jns
popa
jg
mov
leave
imul
push
add
addr16
xchg
test
ficompl
mov
std
adc
in
out
std
fisttps
cmp
adc
push
in
inc
mov
movsb
and
pop
pop
pop
repnz
neg
mov
test
int3
dec
call
xor
adc
hlt
lcall
lock
stos
bound
push
dec
jo
adc
xchg
incb
addr16
xchg
cwtl
dec
push
mov
es
out
cld
pop
daa
xchg
imul
out
or
ja
in
add
xchg
std
mov
clc
cmpb
sbb
pop
xchg
cld
rolb
lcall
push
and
out
stos
movsb
xor
push
cmp
or
xchg
dec
xchg
fiaddl
fs
mov
push
xchg
lods
rorb
ljmp
sbb
out
int3
arpl
jo
adc
mov
sar
dec
rorl
push
aaa
push
adc
iret
and
push
lret
pop
jg
jno
mov
xchg
icebp
iret
adc
dec
popa
ret
pop
das
xor
push
cmpsl
stos
loop
xchg
or
pop
fcoml
xlat
iret
push
test
or
sbb
adc
adc
and
or
jge
in
jge
lds
in
sub
add
and
xor
icebp
mov
push
sbb
ljmp
cmp
cmp
fs
pop
mov
push
pop
push
sbb
inc
xor
dec
cmpsl
dec
fsubrs
xchg
lea
adc
or
pusha
shll
fcmove
xchg
mov
in
sahf
sub
mov
rorb
mov
cmp
nop
movsl
mov
sti
sub
xchg
lds
jae
cmp
ss
and
and
out
lcall
cwtl
repz
xchg
daa
sbb
mov
movsl
fldt
stos
pop
fildl
fcmovnu
sarb
lods
enter
push
and
jl
push
or
frstor
lods
dec
rcrl
hlt
pop
std
adc
mov
xchg
cmp
add
jmp
fcoms
mov
inc
sub
imul
pop
fs
jl
fnstcw
xchg
test
xor
push
add
pop
ja
cmp
xchg
ror
icebp
mov
xchg
or
mov
pushf
or
pop
push
xchg
mov
pop
incl
clc
adc
aas
push
pop
loopne
pushf
jle
push
bound
push
inc
aam
mov
jp
mov
ljmp
fwait
test
loopne
dec
and
mov
xchg
in
adcl
jle
insl
xchg
ret
sub
rcrb
pop
dec
out
jle
bound
xor
jecxz
in
fildl
xchg
out
popf
inc
xor
in
adc
xchg
stc
ds
int3
ret
jno
mov
fidivrs
pop
push
pop
ficompl
xor
rolb
and
hlt
test
mov
sti
jnp
lcall
lods
dec
cmp
ret
cmp
or
daa
je
adc
jb
repz
flds
cli
iret
inc
pop
jecxz
scas
es
imul
push
test
and
mov
ret
sub
ds
push
lcall
test
ret
rcl
adc
jno
mov
fsqrt
or
pop
rep
cmpsb
lods
cmp
push
push
or
out
test
inc
ljmp
mov
pusha
pop
xchg
or
shll
add
scas
pop
jo
and
ret
dec
ds
cmc
les
sub
outsb
mov
loop
repz
lea
dec
mov
jl
mov
pop
jge
jp
in
xor
xchg
loop
push
out
cmp
push
pop
xchg
jne
fwait
inc
lock
pop
mov
int3
xchg
push
mov
inc
imul
sub
sbb
xchg
out
loopne
imul
inc
in
mov
loope
jb
adc
cwtl
adcl
insb
dec
roll
out
mov
jns
insl
sub
xchg
add
imul
and
push
orb
mov
push
adc
mov
add
adc
sub
pop
out
jmp
fdivs
push
out
xor
push
jns
jae
add
cmpl
mov
lret
test
add
outsb
inc
movsb
leave
mul
movsb
sbb
incl
mov
rcrb
mov
sarb
jecxz
push
cs
popa
pop
and
ret
mov
loope
sbb
push
loope
popa
inc
sbb
divl
jbe
sub
fbld
dec
xchg
xor
adc
mov
insb
dec
dec
stos
dec
xchg
dec
ljmp
cltd
and
data16
subl
lock
pop
adc
pop
bound
into
xorb
in
add
pop
and
xchg
iret
mov
sub
mov
movsl
mov
push
cld
mov
fmuls
push
dec
mov
test
lods
icebp
jge
xlat
mov
cmp
rorl
das
insl
or
sub
sub
pop
insb
addl
jmp
jg
xor
enter
lret
aad
mov
fbstp
cltd
sarl
rcr
cmp
mov
xor
iret
mov
adc
adc
push
and
stc
das
mov
and
pop
pop
in
std
and
out
jecxz
and
xchg
into
mov
fidivs
mov
call
jno
dec
cld
dec
xchg
jo
call
ljmp
dec
mov
test
fldt
das
inc
mov
fsubl
arpl
pop
sub
sub
ljmp
mov
mov
pop
mov
insl
cmp
or
hlt
push
mov
test
sbb
test
stc
gs
sbb
insb
repz
and
pop
xchg
mov
lcall
jnp
and
and
lods
pop
dec
adcb
jecxz
jmp
mov
jl
pop
stos
sub
pop
xor
icebp
xchg
jbe
cmp
je
mov
cmp
dec
arpl
dec
andl
cmp
pop
je
rcrl
adc
scas
sub
cs
mov
mov
cs
in
sub
int
jb
xor
cmpl
repnz
subl
cmpl
cli
pop
cmpsb
adcb
lret
cmpsl
movq
adc
pop
push
dec
outsl
xchg
push
adc
mov
xchg
inc
sahf
sbb
sarl
in
mov
or
lock
int
pop
enter
jmp
dec
and
lcall
leave
sbb
add
stos
and
pop
xchg
testb
lods
xlat
rcrb
shr
in
es
leave
mov
cmp
mov
test
push
out
mov
dec
xchg
cmp
mov
into
adc
jmp
push
pop
bound
mov
stc
cwtl
mov
lret
push
push
cwtl
adc
lods
fstpt
adc
add
repnz
ret
adc
fldenv
mov
ds
mov
jne
inc
nop
cmc
xor
jle
pop
push
and
pop
imul
std
mov
jmp
mov
arpl
dec
loopne
xor
cltd
pop
ljmp
imul
push
adc
lcall
aam
std
jp
lods
ficoml
out
out
add
cmp
sbb
leave
add
add
jecxz
xchg
sbb
push
test
adc
inc
pop
sbb
in
add
sti
or
sub
mov
test
loopne
dec
jno
adc
push
es
outsb
scas
sub
fstps
hlt
out
test
add
push
mov
xchg
mov
scas
es
adc
cmc
stos
push
adc
mov
mov
jge
sub
cld
push
lcall
nop
jp
out
push
loope
push
lods
popa
or
and
js
pop
addr16
enter
mov
aad
jle,pn
aaa
popf
cltd
pop
mov
lods
adc
cld
push
aad
xchg
pop
out
iret
xor
jg
push
push
outsl
push
xchg
pop
sti
cwtl
orl
mov
mov
outsl
loope
sub
mov
out
stc
and
inc
and
sub
stos
out
mov
mov
mov
aam
stos
pop
jnp
dec
xchg
insb
lret
cmp
ljmp
pop
pop
test
subb
cmp
sub
imulb
xor
jne
push
ss
mov
leave
xchg
add
adc
arpl
adc
addr16
lods
cltd
or
dec
xchg
out
ret
roll
arpl
cmp
sbb
bound
pusha
or
es
jb
mov
outsl
aas
and
lret
push
mov
pusha
icebp
insb
bound
or
mov
inc
dec
jle
leave
jg
scas
jae
adc
jbe
call
test
jmp
cmpsl
mov
fdivl
mov
xchg
rclb
and
push
popa
imul
fcmovne
push
pop
sbb
das
shrb
popf
sub
jae
pusha
jge
adc
add
incb
mov
add
scas
fs
nop
xor
mov
loope
test
mov
mov
rorb
stc
adc
cmpl
mov
mov
mov
fwait
jo
jne
push
fdivrs
sub
fsubrl
loop
mov
or
or
out
inc
xchg
sbb
or
lds
jbe
iret
sub
inc
dec
popf
popf
in
lahf
inc
xor
lret
xchg
fsubrs
cmpsl
pop
push
dec
sarl
sarl
ds
add
aas
sub
andb
sub
das
inc
movsl
push
push
jns
inc
push
cmpsb
or
stos
dec
call
xor
push
push
jno
inc
rcll
mov
push
ror
mov
ss
dec
pop
pop
dec
dec
cmpsb
mov
jnp
push
xor
add
repz
loopne
and
inc
or
mov
icebp
and
push
xchg
cltd
fdiv
pop
ficoms
aas
ret
fnstenv
repnz
pusha
dec
in
mov
ds
sti
getsec
imul
pop
test
cld
xor
adc
arpl
inc
ds
inc
push
dec
inc
fisttpl
stc
jmp
inc
mov
cmpsl
sbb
pop
pop
mov
xchg
aaa
mov
push
mov
shlb
stc
sbb
mov
push
jl
push
mov
dec
movsl
aaa
push
hlt
out
icebp
ja
dec
or
cmp
leave
lods
sub
dec
inc
and
inc
pop
cmp
scas
outsl
mov
aad
or
mov
jmp
mov
imul
mov
imul
inc
push
or
pop
test
xchg
push
jp
repnz
mov
jno
cli
lcall
sub
mov
sub
dec
repz
sub
outsb
popf
or
test
mov
jbe
dec
and
clc
sbb
adc
xchg
and
dec
loop
into
ljmp
cmp
pop
dec
addb
insl
push
stc
pop
fidivl
aad
push
pop
xor
sarl
sbb
lcall
inc
fisubrl
lods
inc
jns
popf
js
xchg
mov
adc
jne
repnz
xchg
jl
push
in
inc
mov
push
ja
jl
xor
out
clc
lock
shl
std
dec
or
test
and
sbb
cmp
daa
js
jge
push
or
cmpsl
push
je
add
mov
push
cmp
jnp
cmpsl
jo
cmpl
pop
mov
cmc
dec
call
repz
jmp
pop
lcall
xchg
push
add
mov
sub
mov
mull
js
jecxz
imul
cmp
lock
js
mov
inc
lret
and
push
inc
dec
nop
outsl
outsl
insl
insl
cmpsl
or
pusha
or
std
scas
inc
cltd
clc
icebp
mov
adcl
andl
cmpsl
mov
mov
mov
add
dec
imul
inc
fstpt
pop
jno
lret
jecxz
fimull
std
push
lds
jno
inc
pop
xor
icebp
mov
inc
mov
addr16
mov
pop
sti
cmp
xchg
call
lods
loop
inc
xchg
arpl
div
sbb
into
orl
popw
inc
lods
out
in
stos
push
xor
mov
js
stos
push
cmpsl
jle
out
fiadds
scas
xchg
gs
pop
xchg
inc
pop
pushf
rcll
xchg
stos
push
mov
and
lds
pushf
mov
xlat
stos
and
push
enter
mov
leave
in
int
push
dec
loop
pusha
sysexit
pushf
jg
dec
jge
add
push
nop
xor
xchg
xchg
out
movsb
mov
jmp
in
dec
ror
out
popa
xchg
aaa
jge
adc
push
jne
ffree
das
scas
xor
daa
sti
jge
mov
sub
into
daa
or
gs
pop
enter
iret
aad
sbb
addb
rclb
out
adc
call
lock
mov
movsl
dec
jge
js
mov
paddq
pop
test
xor
pop
insl
mov
mov
enter
outsb
sub
dec
lcall
xor
sbb
mov
sub
xchg
mov
test
mov
and
mov
dec
sub
pop
sti
hlt
inc
sbb
or
ds
cmp
and
and
push
cmp
adc
mov
sub
sbb
into
popf
push
push
rep
scas
mov
and
fsubl
cmp
xor
push
cli
test
clc
mov
imul
mov
jl
sahf
pushl
test
and
xchg
sbb
cmp
bound
js
and
popa
mov
cmp
mov
jmp
cmp
jmp
test
das
and
sub
addr16
push
shl
lahf
addr16
loopne
cmp
adc
jle
or
and
cs
fisubrs
or
js
fistpl
lcall
inc
push
mov
int3
sbb
mov
cmp
xchg
pop
mov
lea
repz
mov
mov
or
cmpsl
scas
sub
pop
jmp
xor
push
xor
clc
xchg
rorl
push
mov
xchg
mov
int3
or
mov
push
fiadds
fwait
in
in
dec
mov
flds
mov
xor
xchg
test
or
jno
xor
lea
es
push
or
xchg
bound
sub
fs
add
lds
rol
dec
sub
mov
dec
lods
or
jmp
arpl
adc
ljmp
test
jae
mov
cmp
sbbb
adc
out
daa
lcall
int3
test
dec
stos
add
popa
stos
pop
lcallw
lds
ss
loope
dec
jo
fstpl
orl
cld
pop
adc
sbb
or
push
add
push
mov
sti
xchg
lods
cltd
add
sub
mov
mov
sbb
or
xchg
pop
mov
pop
shlb
inc
movsb
gs
into
and
in
push
inc
pusha
call
int
fstl
dec
jne
inc
mov
push
or
inc
fstl
inc
mov
cmp
dec
or
and
out
out
sarl
dec
aad
sub
sub
scas
lcall
fisubrl
movsl
out
pop
jno
ds
xchg
sub
or
xchg
in
iret
mov
daa
cmp
cmp
xchg
js
imulb
xor
fs
xchg
int3
xrelease
or
ljmp
adc
sahf
in
outsb
sbb
or
xchg
xchg
inc
sub
addr16
xlat
hlt
pop
das
add
jmp
or
outsb
mov
mov
and
pop
add
jae
rolb
mov
fstpl
inc
lret
into
xchg
mov
stos
mov
in
mov
stc
pop
je
mov
cltd
cmc
lret
scas
add
mov
test
fdivrl
lods
daa
mov
imul
xchg
xor
xchg
mov
ret
push
je
push
dec
idiv
ds
cli
ret
adc
divl
mov
dec
mov
pop
mov
mov
jnp
repnz
xlat
arpl
cltd
and
or
and
ss
pop
punpckhwd
insb
movsl
fmulp
movsb
inc
insl
repnz
mov
rcrl
arpl
lock
out
pop
xchg
cmp
jae
cld
out
dec
adc
pusha
shlb
fnsave
push
jmp
iret
add
pop
mov
subl
pop
push
inc
out
lods
jne
adc
cs
cmc
xchg
pusha
leave
push
pop
sub
add
dec
add
outsb
and
fsubrl
imul
clc
push
rcrb
lret
push
sarb
rcll
push
mov
mov
bound
sbb
sub
dec
push
add
jne
lret
cmpb
je
lahf
js
xchg
pop
mov
or
xlat
outsb
imul
inc
call
pop
mov
xchg
fidivrs
and
jbe
inc
pop
or
sbb
jns
cmc
call
mov
xchg
test
xchg
fs
int
imul
idivl
pushf
cmp
mov
sbb
cmp
ja
iret
cmp
and
mov
cmp
outsb
cli
and
insb
in
cmp
or
xor
mov
pusha
dec
enter
cld
or
mov
jno
shrl
das
pop
xor
pop
sti
xor
sbb
push
dec
jne
dec
mov
inc
lds
mov
jge
jb
ss
jl
xchg
das
test
mov
xchg
inc
inc
mov
stos
xchg
or
cwtl
xor
lret
mov
xlat
mov
out
adc
pop
inc
ljmp
and
cmp
fimull
or
addl
mov
fistpl
mov
and
mov
push
mov
jo
xchg
push
repnz
dec
out
mov
in
sbb
adcb
setb
lcall
aad
jne
cmp
stos
stc
lcall
idivb
daa
std
pop
test
push
pop
lock
loope
mov
lds
add
and
popa
into
sub
cmc
popa
scas
mov
mov
inc
or
sub
cmpsl
out
rolb
add
cwtl
cs
sub
xchg
jle
adc
das
mov
adc
sub
mov
cld
pop
sti
and
mov
movsb
cmpsl
push
cltd
inc
cmp
jo
enter
iret
iret
daa
sti
insl
int
xchg
data16
fs
sub
mov
fimull
mov
lcall
aad
inc
cli
mov
adc
movsl
and
fmuls
cwtl
test
test
popa
cmp
jne
into
popf
aam
les
sbb
and
enter
sub
xchg
in
in
jo
nop
cmp
aam
adc
and
sub
mov
stos
lods
pop
mov
mov
add
mov
dec
clc
daa
inc
out
xor
inc
mov
pop
ds
fldlg2
clc
ret
filds
inc
adc
ror
clc
aad
add
aaa
pop
jbe
data16
sahf
and
sbb
adc
pop
dec
shrl
aas
pop
rcll
inc
rclb
outsl
mov
cli
lcall
les
sahf
test
pop
xor
pop
inc
xchg
loope
add
push
ljmp
mov
enter
pop
xchg
adc
and
and
push
mov
nop
xchg
sahf
adc
xchg
add
cmpsb
pop
fwait
xchg
scas
push
jecxz
mov
sbb
das
xchg
dec
jmp
pop
nop
dec
dec
fmul
pop
sarl
sub
fcoms
imulb
mov
add
ljmp
add
pop
mov
int3
aad
incl
imul
add
xchg
popf
subb
pop
xchg
xlat
daa
add
sub
fidivl
inc
add
mov
cmp
out
xor
dec
mov
or
sub
and
les
mov
cwtl
xor
loope
cmp
imul
xchg
dec
jmp
cmp
jne
and
sbb
fbstp
and
in
xlat
inc
add
mov
mov
xlat
out
add
jl
mov
jp
cmc
jge
jp
push
popa
add
push
adc
xchg
adc
out
jge
xor
ljmp
cmpsb
repz
lret
xchg
leave
stos
jg
js
push
idivb
lds
sub
popf
sahf
test
seta
mov
mov
out
jg
push
cmp
addr16
mov
rolb
xchg
push
sti
inc
in
stos
ss
xor
mov
in
xor
jg
dec
add
sbb
pusha
add
stc
cmp
mov
jnp
scas
jne
popa
add
aaa
sub
inc
jnp
push
inc
or
lock
inc
in
insl
mov
filds
pop
xor
mov
jle
jne
gs
jbe
outsb
pop
jns
idiv
mov
lock
test
cmp
test
test
data16
xchg
out
lods
test
mov
and
mov
mov
jnp
jbe
cs
push
mov
fiadds
cs
lret
dec
jmp
sub
sub
lret
insb
sbb
loopne
jb
jne
push
sarb
ds
mov
out
out
mov
loopne
mov
mov
mov
insl
xchg
push
iret
cmp
cmp
xchg
mov
inc
push
subb
loop
ja
jle
mov
add
push
add
or
xchg
movsl
daa
call
dec
adc
rcrl
clc
notb
xchg
mov
xchg
push
aaa
stos
test
xchg
cmp
adcl
dec
test
pop
cmp
xor
imul
aam
push
add
ret
lret
insb
movsb
xor
int3
adc
fbld
or
clc
cmp
push
cmpsl
cltd
jnp
decb
gs
mov
xchg
push
cmp
ret
sub
mov
lret
shrl
push
or
xlat
daa
sbbb
pop
mov
ret
sub
lret
pop
insl
sub
fcmovnu
sti
out
mov
cmp
outsl
popa
cmp
pop
pop
pushf
mov
clc
fs
cmpl
adc
test
data16
mov
xlat
addr16
js
pusha
adc
xor
lods
mov
inc
push
sbb
mov
fst
add
fcmovnbe
sbb
mul
int
inc
leave
push
mov
mov
enter
hlt
push
std
add
mov
clc
ljmp
adc
fistps
fdivr
lcall
sub
dec
cmovo
inc
and
fmull
imul
test
movsl
test
sbb
and
dec
jno
mov
addb
push
cmovne
sahf
addb
aam
mov
jb
xchg
add
sub
cwtl
pusha
iret
popf
sub
inc
pop
inc
lods
shl
sub
pop
dec
sub
push
dec
xchg
pop
xchg
jle
gs
out
pushf
in
xchg
aaa
cmp
fsub
lock
inc
dec
add
in
and
lods
in
aas
daa
out
insb
fwait
shrb
cmp
imul
dec
bound
inc
insb
push
iret
push
stos
dec
dec
push
ret
xchg
rolb
frstor
out
lds
mov
mov
imul
enter
sbb
lock
pusha
cmpb
jmp
loopne
adc
xchg
pop
add
cltd
imul
mov
inc
and
mov
adc
ljmp
sub
dec
call
adcb
mov
pop
nop
mov
test
or
adcb
mov
pop
jns
dec
mov
pusha
movsb
les
arpl
jnp
pop
fildl
in
aad
call
ret
jecxz
dec
stos
adc
inc
and
dec
dec
inc
jae
mov
mov
mov
add
pop
pop
out
pushf
mov
sbb
fistpll
adc
mov
int
pop
and
lods
arpl
mov
xor
mov
incb
sbb
xchg
adc
mov
and
and
inc
aad
and
cmpsb
sub
pop
cmp
push
mov
in
fnstenv
xchg
pushf
repnz
sub
dec
lods
xchg
ds
or
jae
adc
test
movsl
cltd
mov
or
jne
xchg
xchg
addl
out
nop
jo
mov
into
cmp
imulb
aad
loope
xor
cmpb
jl
out
xor
inc
movsl
pop
lahf
push
es
jg
jl
push
xor
clc
and
fcmove
enter
sbbl
push
es
jecxz
int
inc
iret
sbb
jmp
push
stos
mov
xor
jle
ret
mov
mov
xlat
xchg
addr16
sarb
movsb
rorl
cmp
cmp
mov
cmp
cmovno
enter
fidivs
inc
pop
push
fidivs
movsl
pushf
shlb
xor
and
decb
jno
outsb
mov
or
shll
adc
inc
ret
push
dec
jbe
movsl
mov
xchg
and
add
sub
xchg
rorl
adc
out
add
iret
cmp
stos
inc
ja
outsl
cld
mov
loopne
mov
cs
pop
ficompl
or
aas
nop
stos
imul
imul
xchg
sub
jge
scas
movsb
and
loop
sub
adc
scas
stos
aaa
ss
je
lahf
mov
adc
ja
das
cmc
push
xchg
mov
test
sbbb
int
cld
push
push
sub
scas
fcomps
pop
flds
por
fwait
inc
repnz
and
xchg
and
xor
hlt
clc
movsl
xor
fnstenv
popa
cld
mov
shll
inc
inc
insb
negb
pop
add
ret
jp
lods
mov
pop
jns
cltd
cltd
push
xor
mov
xchg
out
dec
nop
loopne
bound
lock
inc
mov
fildll
lahf
cwtl
cmp
mov
fs
mov
add
repnz
test
pusha
add
and
cmp
inc
adc
pop
ret
dec
pop
or
xor
loopne
adc
or
ds
gs
sbb
xchg
jnp
jae
pop
cs
cs
pop
dec
jecxz
dec
or
push
mov
add
push
mov
adc
jae
jl
ret
out
jp
dec
pop
popf
cmc
pop
idivb
jae
adc
adc
jp
stc
leave
int
dec
push
pop
aad
shrb
push
and
push
cmc
sub
add
jmp
loope
push
stos
outsb
bound
xchg
sbb
sub
and
leave
das
push
pop
daa
ret
jl
mov
xor
push
je
jecxz
andl
mov
mov
add
es
rorb
icebp
push
add
inc
jnp
jbe
xchg
inc
inc
divb
hlt
loop
jmp
lods
jne
mov
jge
mov
loope
adc
sbb
inc
incl
les
les
mov
push
test
cmp
leave
mov
cmp
mov
inc
and
cwtl
sub
mov
ds
sbb
xchg
mov
add
cmp
xor
lds
into
cmp
daa
dec
add
cmp
inc
stc
fnstcw
push
jecxz
in
mov
icebp
xchg
jae
repnz
mov
lret
scas
adc
nop
adc
roll
popf
stc
inc
das
sbb
cld
and
push
lret
inc
scas
ds
cmpb
int
lahf
movsb
xor
adc
or
imul
lea
shll
fwait
popf
jns
notb
pop
dec
xor
mov
mov
cmp
mov
and
daa
inc
xor
std
daa
test
into
repz
add
or
lret
dec
les
sub
addl
ss
loopne,pt
jl
jge
xchg
cmp
dec
mov
cld
outsl
into
test
test
push
pop
mull
cmpsb
rcl
insl
mov
pushf
push
push
jne
sti
push
test
jge
stos
and
fstp
add
icebp
es
and
js
xlat
xor
into
push
lock
xor
mov
xor
and
cmpb
arpl
add
sti
rorl
and
mov
rorl
adc
movl
dec
cmp
sbb
mov
mov
hlt
adc
sub
xchg
cs
lcall
sbbl
test
subb
add
jg
movsl
lcall
adcb
lock
pop
clc
dec
roll
lock
stos
nop
int3
dec
push
inc
push
outsl
loop
mov
push
jmp
mov
cmp
mov
jecxz
xchg
xor
cmp
add
out
ja
add
imul
repz
add
mov
or
jns
xlat
popf
cwtl
and
mov
insb
aaa
cli
xor
mov
cwtl
jl
ret
daa
lahf
cmp
dec
jl
pop
and
test
or
sub
aas
mov
and
ss
or
adc
mov
jbe
jne
jbe
scas
repnz
lret
mov
xor
mov
mov
jge
mov
sahf
adc
mov
dec
arpl
jmp
dec
arpl
adc
and
scas
cltd
loope
sbb
popa
or
outsb
sbb
dec
mov
or
shl
pop
jge
loopne
push
iret
pop
pusha
mov
cmp
push
sbb
push
push
mov
sub
sbb
ja
repz
and
cwtl
push
and
mov
and
pop
mov
xor
mov
cmp
mov
fs
pop
lds
cs
out
div
sahf
and
push
lea
mov
mov
mov
cli
mov
adc
imul
aad
adc
adc
sbb
mov
xchg
cltd
pop
xor
push
ja
sbb
loop
xor
cmpsb
jp
jbe
inc
jmp
testb
inc
inc
mov
or
test
outsl
in
in
insl
pushf
or
fs
jns
out
test
out
add
loop
jns
insl
lds
and
dec
pop
cmp
jns
inc
sar
or
jno
loope
cmp
mov
adc
ljmp
test
aaa
sbb
adc
lods
cmp
mov
mov
mov
not
mov
test
mov
roll
notl
adc
xchg
addr16
test
jl
leave
or
pushf
xchg
addr16
or
scas
push
jecxz
jb
mov
test
addl
fidivs
dec
inc
movsb
cmp
xchg
adc
jbe
call
test
pop
xchg
push
add
lds
xchg
sub
test
mov
or
in
xor
or
push
arpl
fs
cmp
jns
out
scas
push
cmp
pusha
dec
jne
and
mov
cmc
xchg
and
cmpsl
fistpll
add
xchg
inc
mov
and
leave
cli
jnp
sub
lods
push
mov
dec
xchg
andl
push
push
sub
data16
lock
setno
adc
ja
jmp
in
stc
xchg
jno
inc
push
les
imul
test
jge
mov
rcrb
cmc
movsl
or
in
movsb
incl
cmp
pop
sub
jp
dec
dec
push
cs
outsl
inc
push
ficoml
sbb
sub
mov
stos
popf
jae
cmpsl
cltd
adc
adc
fsts
cmpsb
fidivrl
mov
ficoml
xchg
bound
pop
icebp
test
xchg
push
add
in
lahf
popa
pusha
out
adc
sub
out
sbb
repnz
push
nop
iret
lea
push
testb
mov
inc
mov
pop
mov
bnd
cmpsl
or
shlb
mov
add
ljmp
xchg
push
test
cli
stc
test
stos
mov
ret
mov
xlat
gs
push
add
sbb
jg
sbb
inc
shll
inc
std
ror
cmpsl
pop
mov
adc
inc
mov
fcomps
repz
pushl
and
push
outsb
inc
les
int3
xor
add
movl
mov
cs
clc
or
loop
jbe
dec
sbb
or
mov
ret
adc
jo
mov
push
dec
stos
jae
mov
popa
add
test
cmp
jge
add
ljmp
bound
mov
xchg
mov
or
jmp
pop
lods
mov
or
sti
ljmp
call
sub
outsl
inc
push
mov
adc
mov
imul
cmp
clc
jnp
add
adc
out
pop
and
cmp
mov
mov
or
and
push
cmp
insb
scas
lea
imul
mov
dec
cmp
cli
mov
adc
xlat
aas
sub
mov
mov
dec
mov
sub
jbe
push
xor
mov
ficomps
adc
lds
rcl
mov
mov
aam
popa
jbe
mov
fld
adc
push
test
daa
pop
jo
pop
xchg
test
mov
xchg
test
sti
push
mov
jo
mov
xor
mov
fwait
test
jbe
jne
xchg
and
lods
pop
rolb
int
icebp
jno
movl
and
popf
aaa
sub
mov
cmp
jp
xor
mov
mov
xorb
jno
and
es
test
and
pop
jge
xchg
jns
push
dec
sub
add
and
cli
pop
insb
fld
mov
dec
jle
mov
lret
sub
push
jle
bound
mov
hlt
mov
scas
xor
popa
push
pop
mov
mov
add
mov
ds
xor
jmp
pop
bound
inc
js
js
adc
sub
push
sub
or
movsb
enter
xchg
push
cmp
xchg
ss
mov
xlat
jae
mov
lret
cmp
inc
inc
repnz
out
or
or
mov
enter
pop
ror
test
adc
and
test
leave
lock
add
scas
push
test
pop
xor
pop
leave
cmp
roll
inc
je
loopne
bound
imul
xor
sbb
ss
xchg
sub
pop
and
ljmp
and
xor
mov
jmp
push
aad
push
jne
or
inc
push
lret
shrl
fwait
test
push
push
jle
jno
ficoms
fsts
aad
ret
jnp
in
mov
outsb
jl
cmp
mov
jbe
add
mov
mov
cmp
lret
sub
or
inc
add
xchg
repnz
lods
jmp
adc
or
mov
dec
mov
loop
inc
int3
and
fldl
js
pop
and
lods
pop
fcomps
and
lds
sbb
inc
sub
mov
ret
enter
jo
fimuls
jg
in
mov
repz
outsb
mov
rcrb
mov
jmp
imul
and
add
jno,pn
inc
mov
mov
in
jmp
xor
or
pusha
in
iret
mov
lds
movsb
popa
pop
inc
or
sub
xchg
insb
cmp
ret
enter
push
movsb
jge
mov
jne
push
mov
pushf
mov
pop
in
mov
test
inc
lahf
push
sbb
fimuls
mov
sub
mov
sub
dec
hlt
jge
incl
or
out
xchg
ljmp
scas
fimuls
fistl
dec
pop
xchg
dec
jo
push
or
aaa
aaa
imul
leave
push
push
add
mov
adc
xchg
push
dec
clc
push
jp
mov
arpl
jp
pop
mov
nop
neg
negl
xchg
cmc
sub
das
xlat
pop
sbb
lds
cmp
add
xor
push
inc
add
fcoms
add
ret
mov
adc
and
rsqrtps
pop
je
xchg
pop
loopne
arpl
mov
mov
loopne
add
xor
add
cwtl
mov
subl
jns
mulb
xchg
push
pushf
cmp
int
inc
call
sbb
imul
jo
pusha
lock
movsb
js
das
lcall
push
jge
mov
push
pop
int
cmc
mov
into
in
push
cmp
cli
test
mov
cmpb
loope
mov
fwait
dec
mov
ljmp
mov
and
aas
mov
mov
sarb
ds
ds
xchg
mov
add
sub
jo
out
jg
ficompl
daa
jmp
push
fnstcw
inc
jbe
je
out
fdivp
ds
insb
pop
loope
add
xchg
fsts
das
dec
mov
adc
xor
dec
inc
bnd
mov
xchg
add
outsb
imul
dec
fdiv
icebp
shrl
je
ret
test
or
mov
jl
sub
and
cli
sarb
xor
xchg
roll
dec
mov
aaa
sub
mov
or
push
insb
push
mov
push
or
mov
daa
dec
enter
outsb
fnstsw
xchg
shl
push
or
arpl
pop
lds
loope
jg
hlt
mov
mov
popl
out
rorl
ljmp
sbb
or
xor
jno
repz
mov
fwait
ja
js
and
ror
loopne
mov
jge
push
movsb
jnp
mov
test
rorb
in
mov
cmp
fbstp
std
cmp
lcall
mov
int
mov
sub
inc
repz
mov
mov
inc
pushf
ljmp
jne
pop
cmc
loope
sbb
xor
sub
adc
lods
jmp
rcrl
movl
cmpsl
into
cmc
lcall
mov
popa
jp
aas
dec
mov
outsb
xor
into
shrl
iret
std
arpl
and
push
push
push
dec
sarb
stc
std
push
mov
ret
scas
cmpsb
adc
aas
push
sahf
aas
inc
out
jne
jae
loope
stc
mov
rclb
pusha
pop
push
mov
inc
filds
sti
dec
mov
sub
jb
cmc
test
jns
or
jno
or
and
dec
sbb
lds
jmp
and
mov
xchg
rorl
mov
push
inc
jno
les
rcll
pop
ja
pop
cli
cli
sbb
add
stos
jb
bound
out
jo
je
jns
or
sub
lods
jl
scas
lods
lret
fcoms
mov
nop
lock
pop
push
xchg
test
nopl
cltd
call
enter
clc
popf
inc
lds
mov
pop
mov
mov
stc
cld
inc
push
mov
and
jg
out
insl
inc
and
sub
aaa
or
mov
pop
imul
fcomi
pop
jns
fadds
clc
pop
scas
hlt
or
mov
add
lock
pop
bound
jge
sub
adc
cmpsl
sbb
fistps
xchg
nop
or
inc
xor
sub
in
in
dec
sbb
adc
pop
test
loope
mov
fisubl
rol
mov
jmp
push
aaa
and
in
int3
pushf
outsb
mov
aam
inc
in
jg
rcrb
cmp
dec
cmp
jno
cmp
xchg
and
out
push
jge
imul
mov
stc
test
sub
sub
adc
gs
mov
movsb
mov
repz
or
mov
fsubl
pop
outsb
and
repz
inc
xor
sub
adc
push
jle
pop
push
push
xor
pop
enter
push
xchg
fnstsw
jl
imul
stos
rcll
pop
dec
ss
lods
jecxz
insl
faddl
ret
add
sbbl
lds
dec
jl
sbb
cmpsb
lcall
adc
outsl
mov
push
sbbl
and
lahf
cmp
pop
mov
adc
xor
mov
push
mov
mov
pop
divl
sub
add
cmp
sub
aas
mov
sub
or
inc
and
and
outsb
insb
cmpsl
mov
imul
jmp
adc
gs
scas
mov
pusha
dec
mov
jle
xchg
jbe
scas
pop
adc
or
mov
mov
sti
cmp
xor
lret
cs
sub
repnz
push
mov
add
jbe
aam
xchg
sbb
mov
push
and
mov
xchg
add
sub
insl
cmp
jl
in
or
cs
in
fsts
sbb
jecxz
fs
int
cli
add
inc
ret
cmpsb
lahf
pop
sbb
pop
int3
nop
jb
mov
or
add
iret
mov
gs
sbb
into
jle
ficoms
mov
mov
rcr
lcall
cmp
ret
cmp
loopne
jbe
pusha
jle
je
and
fwait
pop
cmc
loope
pushf
and
adc
jl
stos
mov
or
jp
or
dec
frstor
rcrl
adc
gs
push
jle
aas
pop
sti
addb
inc
iret
jecxz
ljmp
icebp
pop
icebp
xchg
leave
jae
imul
jle
int3
bnd
dec
inc
hlt
fwait
icebp
cmc
adc
sbb
xor
rclb
mov
pushf
push
xchg
repz
outsl
sub
pop
fldenv
ljmp
xor
pop
push
icebp
xchg
nop
xor
lock
mov
add
mov
mov
or
xchg
insb
lcall
add
pushf
dec
lahf
shld
push
add
mov
jae
mov
lock
adc
jne
push
mov
popa
mov
loope
fbld
cmp
cmp
jge
mov
shll
jno
mov
aas
leave
pop
les
xor
shr
fwait
shl
aas
mov
lahf
xorb
in
pop
xchg
sub
mov
mov
jno
cmc
pop
je
sub
lret
adc
mov
pop
icebp
into
mov
jmp
mov
cmc
enter
insl
mov
dec
xchg
adc
push
rclb
add
rolb
aas
shlb
loope
pop
add
lcall
jbe
jbe
jl
mov
fwait
push
mov
sbb
pop
ss
and
int
clc
xor
add
stos
fdiv
hlt
push
and
cmp
movsb
or
cltd
lcall
bound
out
in
xor
cmp
lahf
fdivr
test
or
scas
mov
cs
push
adcl
push
push
lds
pop
and
shll
and
dec
jne
jge
push
shrl
or
push
sbb
or
cltd
add
inc
xorps
mov
xor
adc
mov
clc
hlt
mov
xchg
es
ss
push
popf
add
fildl
mov
push
out
mov
push
dec
and
icebp
cmpsl
into
rcrl
es
xor
sbb
push
pop
sub
mov
sbb
cmp
imul
or
lock
cmpl
inc
push
mov
xchg
pop
data16
mov
out
sub
outsb
popf
inc
mov
fldenv
scas
sub
je
pop
sub
cmc
js
enter
xchg
testl
jae
out
cmc
push
cmp
or
adc
dec
lds
decb
in
int
aas
fs
inc
repnz
ljmp
lods
mov
inc
fcmovb
sbb
in
test
mov
js
scas
gs
cmp
aas
jmp
xchg
shll
sbb
faddl
stc
inc
xor
inc
inc
jb
lds
pop
ss
and
or
clc
rep
lret
add
in
mov
cmp
es
jmp
js
outsb
jo
stc
jecxz
add
pop
mov
js
push
jno
idivl
fsubrl
dec
xchg
inc
mov
xchg
dec
jo
push
out
mov
das
mov
mov
xor
in
or
mov
dec
std
mov
std
in
sbb
das
push
mov
mov
ja
mov
insl
mov
test
popa
mov
test
aas
pushf
fptan
lea
push
mov
add
cmp
push
repz
xchg
mov
notb
mov
mov
sub
jnp
cmpsl
xor
iret
faddp
or
jmp
aaa
rorl
mov
imul
mov
pop
cld
data16
loop
jge
jle
xor
js
int
dec
cmpsb
push
aad
and
loopne
ja
lcall
hlt
inc
cmp
add
rcrb
stos
cmp
mov
xchg
inc
stos
aad
inc
xchg
and
pop
pop
loopne
outsl
add
pushf
jle
push
mov
mov
mov
add
xchg
test
stos
jnp
sbb
and
sti
negb
faddl
sub
fistpl
or
nop
and
jae
or
xchg
inc
in
add
push
dec
jl
daa
inc
pop
aas
scas
push
push
inc
and
popa
sbb
pop
jnp
frstor
xor
push
mov
les
or
out
cmp
jo
adc
dec
push
adc
push
stos
jg
stos
adc
xchg
aaa
dec
loopne
sbb
fsubr
out
test
or
xchg
mov
mov
inc
xchg
ss
and
stc
push
test
test
imul
aad
adc
mov
inc
and
cmp
ret
mov
push
lds
add
fnstsw
shr
adc
mov
test
pusha
pushf
adc
inc
test
cld
pop
mov
xor
mov
push
and
and
sbb
pop
outsb
pusha
sbb
in
aaa
mov
pop
xor
repz
daa
mov
inc
sub
test
lahf
fnsave
aam
xor
clc
je
pop
mov
mov
push
push
sbb
push
add
push
outsl
jnp
fbstp
lds
out
in
leave
pop
or
xor
cmp
adc
jne
sub
sub
pop
pop
add
mov
loope
into
mov
into
repz
push
jp
test
or
outsb
int3
ret
into
pop
pop
je
mov
sbb
fists
or
rolb
sub
pop
lcall
pop
hlt
in
dec
xchg
inc
inc
pop
out
es
xchg
jmp
out
jo
cld
mov
xchg
dec
out
adc
pop
push
in
icebp
out
aad
insb
mov
push
dec
test
and
std
scas
orb
stos
pop
mov
add
xor
and
fxam
lods
sbb
movsl
imul
xchg
pop
mov
and
add
daa
das
and
xchg
lods
mov
push
cli
xor
loopne
inc
rcrb
xor
adc
push
jbe
jns
push
mov
scas
int
add
mov
jne
call
cmpsb
loop
adcl
push
aas
shll
out
jnp
aaa
jp
push
movsl
test
outsb
mov
iret
outsb
jb
mov
sbb
daa
mov
shrl
cld
push
sbb
or
fimuls
pop
mov
jge
sbb
fistps
jg
mov
hlt
xchg
test
loope
ljmp
orb
sbb
pop
gs
mov
das
ds
push
clc
xchg
out
or
cmp
cmp
popa
fimuls
and
add
rclb
fwait
stc
sbb
inc
mov
sub
pushf
cmp
adc
and
repnz
cltd
popa
mov
push
nop
xor
xchg
popf
lea
pop
cwtl
cs
aam
ss
mov
bound
loope
lahf
loop
ljmp
inc
out
adc
mov
fdivl
cmp
mov
fisubrs
int
inc
mov
sbb
jbe
or
push
icebp
fildl
enter
loopne
fs
addl
jno
pop
add
shlb
lods
or
mov
xchg
cmpb
sarl
mov
add
inc
arpl
jnp
negb
pop
clc
sub
stos
arpl
jg
cld
pop
mov
leave
inc
mov
adcb
mov
and
ja
sbb
dec
jg
scas
push
les
adc
fldcw
mov
push
call
jb
pop
dec
jg,pn
shrb
jl
push
dec
sub
xchg
xchg
mov
jle
and
pop
mov
test
stos
xor
xlat
aas
rorb
cmp
lock
fmull
aas
rep
mov
rcll
mov
mov
jge
lcall
lds
nop
insl
lret
jp
mov
cmp
arpl
fcompl
mov
dec
dec
int3
mov
sbb
addr16
fistl
adc
mov
add
iret
cmpsb
popf
push
pop
mov
cmc
mov
ja
mov
inc
cwtl
push
call
adc
cmc
mov
jecxz
hlt
sub
jge
sub
int
movsb
call
clc
dec
out
lea
pop
mov
or
or
xchg
arpl
pushf
sar
orl
aad
mov
mov
dec
mov
imul
pusha
div
jbe
inc
xchg
sbb
test
jp
mov
jne
lods
not
or
pop
inc
lcall
xchg
sti
scas
rclb
int3
repnz
mov
xchg
ret
testl
sub
mov
inc
test
fnstsw
sub
and
cltd
sub
int
and
ds
jle
lds
inc
mov
into
xor
push
or
mov
gs
scas
sub
icebp
lods
scas
jbe
push
fdiv
into
dec
rcrl
and
dec
loopne
iret
ret
jle
push
or
xor
mov
loopne
sbbl
rcrb
jl
mov
xchg
shll
mov
in
xor
mov
pop
inc
rolb
jnp
arpl
shll
jb
jecxz
aas
cld
fstpl
sbb
and
sbb
mov
rcrl
or
jnp
pop
test
into
insl
in
cmp
iret
add
jcxz
sub
sahf
into
lock
call
push
pop
out
jg
dec
ret
dec
xchg
shlb
or
rcrl
aam
stc
jg
mov
jnp
jmp
adc
in
jns
or
or
jbe
adc
aad
es
and
jno
mov
xchg
mov
stos
or
out
aas
push
xchg
insb
ret
scas
ja
push
pop
xor
ret
jae
or
pop
fld
fucomi
sub
push
shll
iret
xchg
sub
rcll
shrb
mov
insb
test
adc
inc
push
lods
int3
stc
push
pop
mov
mov
stos
dec
pop
mov
xchg
sub
mov
mov
in
push
sahf
add
mov
clc
test
scas
push
mov
or
mov
xchg
orl
insb
icebp
and
xchg
push
dec
jns
mov
psubsb
repnz
outsb
xor
jno
and
pop
in
in
push
dec
mov
data16
mov
and
push
lret
loop
add
int
and
push
dec
lahf
jb
cmp
xchg
cmp
or
push
pop
cld
aad
adc
hlt
sti
in
lahf
inc
and
call
push
daa
pop
dec
js
cwtl
inc
jle
pushf
jp
xchg
cmp
lds
and
repz
sarl
lds
dec
mov
ret
sahf
dec
ljmp
inc
mov
mov
out
push
ss
clc
imul
in
data16
shlb
push
push
fstps
jno
dec
jo
mov
lock
lods
int
subl
push
out
mov
sahf
and
lods
rorb
sbb
inc
in
mov
loop
add
subl
movsb
js
adcl
std
lds
sub
scas
jae
int
stos
inc
sbb
out
leavew
adc
and
cwtl
jne
or
sub
pop
movsl
jl
mov
idiv
jnp
inc
or
loope
mov
sbb
movsl
aam
lahf
bnd
push
sahf
lods
out
addb
xor
pop
or
inc
jbe
and
inc
adc
movsb
clc
mov
push
mov
shl
fnstsw
imul
cld
mov
mov
and
and
dec
and
stc
repnz
je
pop
sbb
jne
outsb
jbe
in
xchg
pop
mov
mov
movb
add
mov
xor
dec
jnp
sbb
push
icebp
mov
cli
loopne
rcr
cli
jg
add
cmp
fs
mov
mov
mov
xchg
shlb
xor
in
insb
jo
out
out
shrl
push
idivl
pop
scas
pop
xor
in
pusha
shl
subb
mov
mov
sub
pop
push
jecxz
inc
dec
xor
mov
std
or
xor
sbb
sti
lods
cmpsb
sub
adc
stc
mov
scas
aad
jge
das
adc
xor
push
and
mov
in
xchg
jle
lock
das
inc
mov
mov
lea
mov
pop
xchg
xchg
jl
fisttpll
or
adc
push
cmp
aaa
mov
out
or
sahf
call
bound
in
cmp
add
pop
mov
sub
fmuls
ds
add
xchg
call
or
or
outsl
pop
xchg
sbb
into
mov
insl
call
pop
mov
stos
jnp
sub
jne
sub
out
and
sbb
sti
stc
bound
adc
notl
xlat
adc
rcrl
aaa
aaa
xor
mov
mov
mov
sub
daa
sub
sub
ss
pop
je
mov
jg
mov
inc
lea
aaa
repz
aam
mov
divb
stos
xchg
aam
decl
dec
pop
outsl
mov
stc
out
shr
pop
scas
jnp
xor
mov
ja
fldcw
pop
jns
popf
movsb
sahf
push
shll
sahf
aam
test
xchg
sbb
mov
pop
dec
les
xchg
popa
sub
jae
sbb
inc
cmp
add
xchg
rclb
int
test
push
call
int3
push
sti
pop
addr16
fwait
push
lcall
addl
lea
jmp
pop
aas
movsb
mov
call
iret
insl
mov
mov
pop
sub
mov
int
sub
push
lcall
aad
js
int3
call
cmp
sbb
loopne
add
and
mov
in
jne
ret
fldcw
and
xchg
inc
shlb
into
icebp
ja
mov
jne
add
xor
icebp
xchg
dec
jecxz
dec
mov
dec
push
js
cwtl
sbb
pop
mov
lret
stc
subl
and
fldenv
aam
push
cltd
pop
mov
jae
popa
insb
xlat
cs
adc
aaa
shlb
loop
cmpsl
and
loopw
loopne
and
jmp
adc
jge
mov
adc
shld
xchg
and
int
sbb
xchg
cmp
lret
dec
sahf
mov
dec
lcall
mov
in
pop
sarl
jge
xchg
sahf
push
add
or
jmp
mov
push
jle
rorb
mov
fwait
cld
adc
xchg
into
inc
lret
pop
and
mov
orb
inc
insb
cwtl
jae
lds
sbb
inc
adc
or
in
sub
mov
adc
mov
cmp
stc
mov
xchg
pop
js
mov
enter
inc
mov
xor
lods
jg
pop
testb
cmp
push
fsubs
int3
sub
cmpsb
or
bound
xchg
and
adc
inc
lods
lret
out
imul
ret
cmp
jbe
and
aad
lds
enter
ficoml
repz
cmpsl
imul
cmp
arpl
pop
sbb
push
mov
aam
push
sahf
sub
arpl
mov
mov
addr16
out
sub
add
scas
or
xor
push
sbb
fdivrs
loope
xchg
rcrb
cmpl
push
or
xlat
std
test
fld
aam
xor
test
testl
pop
ret
iret
cmpsl
mov
loopne
ret
pusha
add
in
jae
xor
int3
mov
lahf
sbb
pop
je
pop
lret
cmp
cltd
fdivp
lea
sti
mov
jb
push
cltd
fnstsw
loopne
mov
xchg
test
mov
mov
inc
mov
mov
shrl
push
lock
js
ret
pop
mov
xor
mov
and
enter
lods
aad
jg
clc
int
cwtl
loopne
loope
flds
or
sub
dec
test
lret
fistps
cmpsl
insl
pop
loope
shl
jecxz
xor
rorb
inc
mov
jl
test
or
testl
fisubrl
es
cld
jge
adc
mov
shll
je
xchg
add
inc
out
dec
sbb
stos
xchg
sbbl
scas
sub
hlt
mov
and
stc
popa
mov
jne
daa
movsl
sbbl
mov
pop
dec
inc
cld
sub
aad
bound
mov
or
sbbl
xchg
dec
push
adc
stc
stos
dec
or
or
jl
cvtpi2ps
xor
enter
ljmp
pushf
cwtl
fidivrl
fisubrl
xlat
mov
cli
pop
arpl
aas
test
jmp
popf
sub
imul
pop
adc
xor
mov
sar
bnd
std
mov
scas
jb
push
xchg
add
lcall
mov
and
xor
and
jne
outsb
dec
lods
mov
sbb
std
repnz
je
jbe
mov
inc
nop
out
movsl
aas
ficoml
shrb
xor
cmp
mov
pop
sahf
pushf
fdivrs
shrb
mov
xchg
dec
mov
iret
mov
ret
jmp
outsb
and
test
and
fwait
scas
dec
mov
jmp
aaa
outsl
or
cmc
pusha
sbb
es
mov
outsb
stos
jno
adc
ds
and
xor
lock
imulb
jle
add
jne
pop
cmp
dec
insb
test
xchg
js
or
fs
mov
rcl
imul
scas
mov
push
mov
repz
xchg
test
arpl
testl
lods
mov
outsb
mov
pop
xorb
cmpsb
enter
in
cmp
cmp
xchg
int
jmp
jmp
pop
fsubrl
lods
and
les
jbe
nop
mov
sbb
stos
inc
inc
out
and
aam
fstl
in
out
dec
jg
je
cmpl
in
push
daa
pop
call
test
mov
add
and
xlat
push
stos
aad
push
push
shrl
scas
sbb
daa
cmpsb
add
sahf
xorl
popf
ja
stos
mov
mov
or
xchg
sub
pop
pop
out
in
int
adc
cltd
lahf
jbe
pop
out
das
mov
mov
or
andb
add
int
out
scas
inc
pop
dec
sbb
mov
fisubl
dec
inc
int
add
ja
lret
adc
cld
cmp
sub
pop
xchg
adc
push
je
dec
or
sbb
cmp
mov
enter
rorl
cmpsb
dec
sbb
movsb
mov
das
dec
dec
movsb
sub
outsl
dec
dec
push
cmp
inc
insb
sbb
jmp
cmpl
ret
and
cmc
push
mov
sbb
pop
add
cld
syscall
and
cmc
lds
dec
fiadds
pop
jne
sbb
inc
xor
sbb
mov
dec
xchg
in
mov
adc
dec
push
cmp
pop
mov
mov
inc
cltd
mov
nop
ds
movsb
jg
xchg
test
jns
inc
vorps
sub
daa
push
jne
sub
xchg
iret
add
in
jbe
xchg
andb
aaa
sahf
stc
cmp
bound
xor
sahf
jno
out
jecxz
movsl
push
popa
shll
push
les
add
and
xchg
cmp
icebp
dec
loop
xor
adc
push
pop
sbb
sub
jns
lods
call
jg
out
dec
or
inc
cmp
fldz
inc
jp
cmpsb
add
jg
cwtl
js
rcll
fmulp
repz
repz
jmp
jbe
and
sahf
push
test
cmpsl
dec
in
push
jp
inc
test
push
andb
push
lret
imul
sbb
push
push
jne
xchg
gs
inc
aas
insb
gs
mov
int
loope
mov
sub
rcr
ja
mov
and
dec
aaa
mov
in
daa
dec
stos
mov
insl
xor
adc
std
push
lods
in
loopne
mov
xor
ljmp
xchg
call
pop
fildll
int
jmp
mov
bound
test
repz
seta
pop
test
cmc
jmp
fwait
push
mov
jne
sbb
lcall
outsb
add
sbb
popf
add
adc
or
aaa
jne
nop
cmp
and
mov
mov
mov
adc
movsl
pop
roll
iret
mov
hlt
aas
push
out
push
dec
insb
fchs
aaa
fcompl
arpl
jnp
rclb
xchg
or
sub
push
jnp
adc
cmp
or
and
jno
mov
add
inc
sbb
scas
mov
cltd
sub
leave
mov
pop
and
shl
mov
insl
xor
adc
into
insb
inc
ja
pop
inc
sbb
dec
ss
iret
add
xchg
test
test
cltd
shrb
inc
into
push
adc
push
jno
out
int
inc
cmpsl
jmp
adc
lahf
sbb
add
push
adc
xlat
fsubrs
not
hlt
ud1
or
cli
loope
in
pushf
lret
stos
cwtl
xchg
mov
test
cmc
adc
add
shlb
jg
movsb
and
dec
jae
push
push
dec
insl
xchg
call
addr16
outsb
push
pop
pop
dec
add
or
and
xor
sub
cmp
or
ss
jp
daa
rorb
clc
addb
jbe
cli
mov
lds
jle
fsubrs
fldl
test
sub
pop
ja
dec
cltd
pop
mov
push
fimuls
mov
add
inc
xor
ds
xor
imull
loop
lahf
mov
stos
insl
mov
and
ret
xchg
mov
or
jne
clc
add
lret
push
out
or
fdivrl
dec
lcall
xlat
in
into
or
mov
jae
shrl
cmp
cli
mov
mov
rcrl
or
pop
movsl
sbb
int
sub
push
or
jnp
mov
xor
or
add
pop
ss
push
lahf
aaa
mulb
fnstsw
arpl
xchg
shll
lahf
push
pop
mov
adc
stos
cmp
loopne
out
xlat
imul
or
test
inc
and
test
sarb
mov
rcrl
push
lahf
sbb
pusha
rorb
jmp
lcall
push
and
out
and
out
dec
mov
pop
dec
lods
shlb
daa
ss
push
sbb
jnp
fcoms
iret
dec
mov
shll
int
dec
sbb
cmc
mov
mov
xchg
aaa
leave
push
call
mov
push
jle
sbb
lea
int
cmpsb
out
mov
mov
add
pop
sub
dec
xor
icebp
repz
out
push
loopne
pop
lock
push
mov
ja
inc
adc
push
in
mov
cli
out
int3
push
adc
roll
out
cmc
call
daa
mov
leave
push
mov
adc
aas
shl
dec
mov
fldl
push
mov
in
push
sbb
mov
mov
mul
cmp
add
movb
and
dec
inc
push
push
daa
lock
push
mov
std
xchg
cwtl
aaa
sahf
mov
push
sti
sub
or
idiv
push
mov
push
lds
sbb
mov
add
cmpsb
stos
jb
pushf
stc
aaa
push
add
call
pop
stc
sti
lea
jg
dec
js
push
js
orl
cmpsb
clc
xor
or
xor
repnz
mov
inc
repz
mov
sbb
lods
in
out
push
scas
cmp
lret
mov
out
cmp
insb
call
aad
xor
out
sbbl
add
jo
mov
outsl
pop
ret
insb
sarl
pop
push
rolb
hlt
sbb
dec
inc
xchg
adc
sub
pop
mov
insb
mov
or
leave
int
call
or
rcrb
cltd
adc
mov
out
and
push
out
adc
inc
add
call
fimull
aaa
sbb
add
jmp
cmp
pop
pop
cmp
into
out
add
and
repz
into
or
jne
dec
mov
aas
es
iret
and
leave
cmpl
mov
sbb
and
insb
pop
stc
push
mov
cmp
jecxz
ds
pop
enter
pop
push
add
clc
es
sub
mov
fmull
mov
cmp
jp
lds
lret
xor
int3
loope
push
pop
dec
std
jmp
sbb
in
xchg
movlps
inc
rcr
mov
aaa
jg
add
repnz
clc
cmp
lret
adc
push
shrb
cmpsb
xchg
shl
stos
ljmp
sbb
bound
dec
cmpsb
mov
push
ljmp
jne
sub
sti
sbb
dec
rorb
adc
daa
sahf
hlt
insb
inc
pop
aam
xchg
mov
lock
xor
adc
movsb
daa
rcr
stos
jne
insb
nop
add
jno
jns
ret
dec
push
les
inc
sub
lret
add
or
lahf
lcall
pop
clc
mov
mov
cmc
loop
incb
push
jb
mov
xor
enter
adcl
loope
xchg
xchg
pop
insb
cmp
loopne
mov
cld
jns
xor
cmp
pop
test
fdivrl
cmp
jle
xchg
sti
pop
mov
xchg
test
icebp
cld
adc
fdivrs
sbb
jl
mov
lret
cli
jle
ss
jo
mov
jns
or
add
cld
aas
inc
xchg
ljmp
sub
jne
push
inc
and
add
and
push
push
or
dec
aad
negb
dec
sbb
aas
xor
les
insb
cmp
sbb
cli
roll
gs
inc
xchg
sbb
inc
cwtl
cmp
pop
sbb
outsl
fimuls
adc
cmp
subb
cmpsl
mov
jb
jecxz
xchg
insl
mov
dec
fld
stos
xchg
pop
adc
cmpsl
pop
xorl
inc
jp
fisubrl
xlat
les
mov
rcll
stos
pop
cmpsl
fadds
sub
dec
in
orl
sbb
mov
xor
fdivl
pop
clc
inc
adc
fbstp
xor
fs
jg
dec
aas
mov
pop
icebp
arpl
std
pop
pop
aas
pop
and
shrl
or
or
xchg
mov
out
icebp
xchg
adc
clc
iret
add
aaa
loopne
lcall
mov
sbb
jle
loop
insl
xlat
std
push
push
insl
inc
mov
jbe
vmptrst
sti
loopne
dec
int
sbb
aas
int3
pusha
test
dec
cld
sahf
test
inc
xor
dec
fsubs
sub
cmp
fdivs
aam
mov
in
iret
lods
pop
jecxz
adc
out
rcrl
sbbl
push
and
xor
mov
or
cwtl
push
in
mov
cmp
or
push
xchg
sbb
and
cmpl
cmc
or
and
rclb
lods
pop
mov
sub
mov
mov
xchg
scas
mov
jns
stc
pop
or
cmpsb
popa
subl
pop
mov
xor
dec
mov
femms
or
addr16
pop
cld
or
pop
lock
mov
mov
jbe
lahf
out
lods
pushf
mov
pop
arpl
sbb
sar
inc
in
imul
cmp
xchg
or
pop
stc
inc
and
ret
add
inc
aam
fldcw
mov
ss
dec
icebp
pop
and
test
cld
jbe
xchg
dec
iret
inc
pushf
lret
pushf
fnsave
fmull
into
mov
call
lods
and
int3
pop
sub
mov
test
sarl
outsb
mov
and
inc
xor
ljmp
xchg
out
ds
fldcw
das
or
lret
adc
sbb
imul
gs
ret
xchg
fbld
inc
out
mov
pushf
xchg
popa
roll
rolb
xchg
shrb
fstl
idiv
sbb
hlt
cltd
add
push
pop
idivl
fisubl
dec
jl
mov
sub
das
sbb
jle
scas
mov
inc
scas
cltd
repz
icebp
adc
push
repnz
or
roll
sti
in
dec
fidivl
push
xor
jno
cmpsl
out
jmp
mov
jae
mov
xor
jnp
cmc
push
outsb
jmp
pop
xchg
mov
xor
enter
dec
ret
inc
mov
push
mov
jmp
mov
mov
dec
xchg
movsb
add
cltd
pop
pusha
mov
cmp
addb
adcb
call
sti
push
jle
sub
imul
adc
je
fidivrs
ds
sbb
aaa
pusha
push
mov
out
psubb
jno
js
ja
or
and
push
test
cwtl
ss
dec
xchg
push
dec
cld
ljmp
fsubrl
sbb
out
mov
sub
les
fdivp
mov
packssdw
or
push
imul
mov
loop
aaa
sub
push
rorb
or
jmp
sub
rcr
mov
mov
ret
fcmovnbe
shlb
ficoml
aad
sub
icebp
pop
jl
adc
sub
dec
loope
jecxz
lret
inc
pop
fucomip
pop
mov
mov
jno
pop
adc
mov
jp
pop
cmp
pop
push
jg
sub
jno
addr16
adc
push
sarb
mov
pop
adc
pop
sbb
inc
les
and
mov
lcall
cmc
leave
mov
xchg
outsl
in
push
test
sub
push
xchg
repz
xor
jne
push
in
xchg
ss
sub
mov
cs
loop
inc
cmp
dec
cmc
cmp
stos
fwait
xchg
pop
pop
pop
dec
mov
xchg
push
adc
data16
cmpsl
and
fidivrs
les
loope
shrl
loop
in
adc
pop
xchg
mov
adcb
push
dec
nop
mov
push
mov
cmp
cmp
in
sbb
out
mov
into
dec
lret
and
int3
jecxz
in
xchg
sbb
arpl
mov
xorb
dec
pushf
lahf
dec
add
inc
sbb
imul
mov
pop
icebp
jecxz
loopne
adc
pop
gs
mov
rcr
lret
ret
stos
mov
push
insl
push
jp
les
pop
adc
mov
inc
cmpsb
cmp
adc
call
and
push
push
or
ds
call
and
cmp
addr16
xchg
jne
and
jnp
xchg
add
cmp
mov
in
sbb
sub
sub
mov
xchg
out
jnp
inc
jle
mov
cli
ljmp
sub
jne
nop
loop
jns
xor
add
daa
fnstcw
out
or
pop
imul
aad
push
mov
sub
stos
jg
jbe
popf
lret
jo
xchg
jmp
decl
add
mov
bound
jmp
jecxz
inc
xor
jmp
hlt
das
loope
lahf
dec
hlt
dec
xchg
mov
dec
xchg
mov
pop
es
dec
mov
rcrb
leave
es
imul
faddl
jo
or
or
std
out
adc
ja
cwtl
push
xchg
sbb
mov
cmp
in
into
outsl
fdivrs
and
out
repz
call
pusha
cmp
cmp
jne
pop
lods
imul
lods
arpl
fldcw
cmp
dec
push
mov
mov
mov
out
inc
mov
dec
push
push
mov
dec
movsb
push
jno
lods
inc
aam
jo
jmp
fsubl
imul
scas
in
sub
orb
jg
jle
outsl
leave
cmc
cmp
stos
jle
test
add
sti
mov
and
pop
mov
dec
add
sbb
ficoml
or
mov
xchg
pop
sbb
jbe
sti
or
outsl
cmp
fwait
cmp
fcmovnb
cld
das
jbe
lods
lds
push
and
xor
add
add
loop
outsb
adc
or
sbb
inc
cli
inc
pop
stos
xor
add
inc
cmp
cs
mov
mov
add
in
shl
arpl
or
lock
mov
mov
push
dec
bound
sub
icebp
and
dec
jb
mov
cld
inc
mov
stos
into
enter
scas
popf
repz
mov
sbb
jb
enter
lcall
popa
out
jo
sti
mov
mov
xchg
mov
outsl
xlat
pop
repnz
adc
iret
ljmp
fcmovnbe
dec
data16
cld
inc
out
mov
sarb
xchg
inc
and
add
out
orb
mov
sub
es
jns
pop
pop
push
test
cmp
imul
in
sbb
mov
xor
sub
mov
or
loop
pusha
and
or
roll
mov
xchg
jmp
sub
hlt
test
in
stos
fs
or
repz
cmp
and
in
xchg
enter
aam
mov
sbb
push
mov
fdivrp
clc
lods
cwtl
mov
or
pop
roll
dec
in
mov
dec
xchg
or
xor
lahf
inc
pop
rorl
jo
pop
mov
xlat
mov
mov
lahf
cli
or
hlt
sbb
inc
imul
mov
inc
jbe
mov
into
push
scas
pop
mov
cmp
nop
and
push
mov
xchg
cmpsl
jp
cmc
sahf
sub
pop
in
clc
inc
sub
cmp
rorb
test
idiv
mov
mov
xor
push
cltd
jns
pusha
inc
enter
cmp
jl
xlat
pcmpgtb
je
les
xchg
and
dec
xor
and
lods
lret
testl
add
jmp
push
int
jno
icebp
int3
jg
ljmp
std
add
inc
dec
sub
xchg
lahf
cmp
mov
adc
mov
addr16
sub
aam
mov
int3
push
lcall
sub
inc
pop
mov
sub
mov
pusha
pushf
jbe
out
or
int3
pop
in
mov
cmpsb
fwait
jno
mov
cli
jmp
ss
add
mov
and
add
sub
insb
push
int3
insb
sbb
cli
pop
ret
cli
ljmp
lret
and
pop
cmp
nop
mov
jecxz
jbe
loopne
lds
mov
int3
sub
mov
test
clc
pop
mov
sub
dec
jle
jmp
lds
adc
jo
add
adc
mov
dec
xchg
ret
stc
test
ret
mov
icebp
push
not
push
push
and
lret
mov
mov
fdivs
adc
int
insb
mov
sbb
inc
push
inc
mov
inc
jp
dec
push
dec
stos
leave
adc
add
xchg
popa
inc
inc
mov
addb
pushf
imul
adc
mov
cmp
pop
sub
pop
dec
icebp
and
push
rcll
lea
push
inc
out
adc
aas
mov
push
sarl
int3
sti
mov
mov
xchg
out
jecxz
ljmp
cmpsb
shll
rclb
sbb
cmpsl
rol
leave
mov
cmp
test
or
pop
ss
xchg
push
add
jo
fsubrs
jle
das
push
shrb
xchg
sub
sub
insl
lret
shll
bound
and
xchg
movzwl
ss
cmpsl
jg
add
mov
or
int3
jp
xchg
fs
imul
xor
fwait
dec
cltd
insl
outsb
andps
rcll
hlt
int
sbb
popa
sub
sbb
jmp
ret
jns
sbb
ds
imul
stos
inc
dec
jns
loopne
cmp
jmp
mov
psubq
adc
jg
std
jne
jnp
out
jmp
mov
sbb
sub
movsl
icebp
add
add
fidivl
mov
cmp
xor
fdivrs
jecxz
xor
add
movzbl
pop
fnstcw
add
jmp
sbb
xchg
mov
test
into
in
mov
sahf
adc
jge
ss
nop
int3
add
loopne
mov
sbb
jno
fld
push
faddp
dec
or
and
ficompl
fdivrs
push
imul
mov
pop
dec
xchg
scas
ds
mov
out
in
pop
ss
lret
dec
cmpsb
push
inc
ja
adc
xchg
sub
adc
add
clc
inc
inc
pusha
adc
and
and
mov
xchg
add
out
or
out
pop
shr
adc
test
mov
dec
cli
xor
mov
nop
aaa
test
or
ss
sub
adc
or
xchg
lods
push
jle
test
or
rorb
loopne
ja
push
adc
clc
jbe
cmp
daa
push
xor
mov
cwtl
pop
mov
movsl
les
scas
jbe
add
mov
stos
adc
jge
sub
daa
movsl
shlb
mov
shll
mov
mov
push
pusha
mov
jae
imul
je
pusha
push
mov
lcall
cltd
sti
pop
or
and
mov
sub
jnp
int
mulb
les
xor
loope
dec
jmp
sahf
sub
xchg
popa
insb
stos
scas
andb
push
mov
sbb
and
dec
gs
xor
or
pop
lahf
adc
sub
pop
mov
aas
push
movsl
and
lea
push
mov
sbb
xor
push
xchg
sub
xchg
andl
adc
xor
mov
into
xchg
ljmp
mov
mov
popa
adc
dec
mov
ljmp
dec
outsl
cltd
imulb
xor
inc
jecxz
xchg
adc
cmp
pop
lret
dec
insl
jge
xor
inc
lret
aad
xor
push
mov
mov
cmpsl
dec
ret
adc
pop
inc
or
cld
and
inc
dec
loop
mov
dec
xchg
pop
xchg
ljmp
into
ja
mov
out
fists
ljmp
fiadds
daa
jecxz
pop
leave
stos
and
mov
out
mov
or
inc
pop
push
imul
arpl
daa
outsl
setns
adc
mov
jle
dec
adc
inc
insb
mov
xchg
stos
stc
lret
jp
cld
mov
daa
movsl
shrb
pop
sahf
sub
sahf
lret
test
cmp
dec
cli
mov
or
jo
dec
rcl
stos
cmp
add
jle
sarl
sbb
dec
xchg
jo
test
sti
push
inc
pop
int
dec
pop
rcll
mov
pop
je
sbb
popf
adc
or
rcll
sbb
mov
adc
stos
js
in
popa
fwait
loopne
mov
ret
xchg
daa
mov
xor
adc
pop
es
faddl
popf
flds
push
fstl
push
outsl
fcompl
mov
cli
mov
and
push
cld
movsl
sti
fisttps
or
add
push
aaa
subl
test
sahf
cmp
mov
push
stos
incl
push
mov
aad
daa
jg,pt
movsl
call
cli
lods
dec
xchg
sub
int3
bound
iret
mov
daa
lcall
push
rcll
hlt
sub
ret
fcmovnbe
add
adc
dec
nop
sub
sahf
xor
bswap
ss
daa
and
ljmp
jno
mov
nop
xchg
test
or
jmp
xor
scas
ja
and
fsubp
aaa
sub
loop
adcl
sbb
sarl
add
xor
cli
nop
and
pop
sbbb
mov
jecxz
xor
mov
mov
je
fdivs
ret
ret
xchg
lret
push
or
xchg
xorb
in
std
rorb
fistpll
dec
sbb
push
test
sbb
ljmp
dec
out
fsubp
inc
shlb
mov
test
in
lret
mov
or
aas
mov
xchg
pop
sahf
pop
sub
jns
or
push
outsl
in
out
sub
mov
sarb
xchg
xchg
popa
nop
js
cmc
std
and
xor
test
out
pop
mov
popf
cmp
lret
or
sbb
neg
rcrl
cwtl
loopne
mov
adc
mov
sbb
fnstcw
sub
sbb
push
adc
xchg
setne
dec
daa
or
fcomps
adc
adc
int
adc
pmullw
divl
mov
insb
fbld
sub
push
jnp
cld
mov
and
jmp
jno
lcall
mov
ja
cmp
inc
stc
flds
adc
dec
shll
lcall
sub
pop
jb
imul
ret
into
movsl
push
ret
mov
pop
rorl
push
gs
shrb
xlat
jg
jle
add
inc
scas
mov
pop
push
es
xor
je
jmp
loope
add
inc
mov
aad
in
aaa
dec
xchg
dec
sbb
cmc
jp
xchg
divb
dec
sbb
xor
aam
dec
inc
pop
clc
ret
push
cmpsl
popa
adc
movsb
mov
insb
add
jle
sbb
sbb
sbb
sbb
xchg
cmp
ret
shll
das
inc
and
lcall
test
leave
fucomp
xchg
pop
xor
add
insb
push
cld
pusha
jno
nop
jo
enter
mov
add
ret
jmp
inc
dec
nop
xor
testl
xchg
popa
xchg
adc
je
add
subl
mov
lods
mov
xlat
xor
sub
mov
jb
dec
adc
jns
jo
cmc
xchg
mov
push
popa
xlat
pop
stos
push
addr16
inc
xor
mov
pop
insl
jne
or
pop
inc
push
mov
cmp
sbb
dec
xchg
cmp
adc
pop
sub
mov
fs
pushf
aad
mov
sub
add
bound
fdiv
cmpsb
push
mov
je
add
pusha
lods
lret
mov
mov
daa
and
mov
enter
and
xchg
mov
pop
sbb
ret
pop
cmpsl
adc
imull
push
mov
add
cmpsl
xlat
mov
pop
je
in
sub
std
dec
imul
adc
das
jno
ljmp
xor
push
dec
jmp
mov
xor
xchg
movsb
pop
lock
or
jae
adc
pop
push
jbe
popw
fiadds
xor
sub
dec
push
sahf
filds
lea
mov
test
inc
pop
xor
jno
aas
xor
add
aas
lahf
cli
jle
adc
mov
call
mov
scas
addr16
push
or
cmc
add
mov
sub
test
mov
mov
dec
les
cli
mov
testb
sbb
sbb
sub
pop
out
ds
fwait
lcall
pusha
out
pop
frstor
lock
mov
jae
js
dec
repz
push
insb
or
mov
leave
pop
outsb
lcall
lret
mov
dec
xlat
das
movsl
pop
cwtl
pop
adc
insb
mov
mov
cmp
mov
and
cmp
add
sbb
push
dec
cmpsb
out
mov
test
int
lahf
faddl
movsb
pop
jecxz
add
scas
dec
dec
sbb
roll
int
and
test
mov
int3
push
rclb
jl
in
push
dec
insb
ja
rcrl
pop
test
gs
push
popa
fs
or
mov
outsb
mov
jns
push
aaa
or
push
cmp
mov
fadds
cmpsb
ds
in
aad
inc
jns
cld
push
sub
sbb
push
ljmp
mov
adc
xor
cltd
imul
xchg
xchg
out
pop
inc
scas
mov
pop
mov
add
dec
push
std
loopew
mov
hlt
xchg
sub
add
xorl
daa
push
inc
or
push
pop
rcrb
into
push
jmp
adc
movsb
ret
fcmovu
adc
lcall
mov
stos
push
dec
orb
fimuls
loope
lret
ds
sub
ret
fidivrl
xchg
xor
jnp
adc
jne
movsb
mov
jge
and
shl
js
jns
xchg
aaa
sub
xlat
and
add
lea
xor
and
insb
outsl
cs
out
lahf
das
xchg
clc
inc
roll
sub
insl
pop
cwtl
lods
pop
mov
push
jmp
jo
jne,pt
jmp
add
popa
outsl
outsl
out
sub
dec
jecxz
cs
enter
iret
jge
mov
xor
data16
or
push
std
xorl
sbb
iret
push
jle
push
andl
lret
movsl
cmpsb
sarl
push
test
mov
pop
ljmp
xorl
in
mov
sbb
movsl
cmpsl
test
lcall
mov
enter
insl
int3
fiadds
stos
mov
jae
mov
push
into
jge
mov
dec
cmp
sahf
iret
stc
adc
add
sub
mov
call
call
sub
push
dec
sbb
popf
scas
cmpb
inc
sub
inc
xchg
jecxz
clc
cwtl
mov
xor
out
dec
fisttpl
add
mov
scas
pop
aaa
sbb
and
test
pextrw
dec
pushf
xor
dec
pop
xchg
arpl
lock
scas
testl
cmp
cmpsb
sub
mov
cmpsb
test
jnp
add
call
cmp
pop
outsl
ror
jle
push
mov
jbe
and
cmpsb
loop
xor
das
pop
ret
outsb
popf
mov
nopl
loopne
mov
cs
pusha
mov
adc
fstl
lahf
mov
or
mov
push
mov
sbb
lret
sqrtps
test
leave
mov
xchg
xchg
mov
push
jge
negl
mov
jno
adc
dec
dec
fdiv
lret
push
and
jns
push
inc
lds
incl
mov
lods
dec
stos
pop
mov
ret
aam
jmp
repnz
sbb
decl
mov
movsl
xor
stos
mov
scas
xor
rcrl
out
mov
notb
sbb
xchg
mov
sbb
or
mov
adc
push
and
mov
aaa
pusha
jg
mov
cmp
or
adcb
mov
in
repnz
aaa
bound
and
std
mov
add
cmc
mov
loop
mulb
cmpsb
shll
mov
mov
xlat
sarb
mov
pushf
jmp
sbb
push
jne
cmpsb
imul
jl
popf
out
out
push
xchg
movsl
icebp
or
cmpsl
fcmovnu
jnp
push
sahf
xchg
jns
int3
sub
das
push
sbb
mov
mov
mov
cltd
jb
inc
cmp
lock
call
mov
sbb
flds
mov
push
add
cmp
inc
pushf
cli
xor
aad
jbe
mov
rcll
mov
addr16
xorl
push
pop
addb
push
inc
inc
aam
dec
adc
cmp
cmp
ds
idivb
icebp
pop
jle
jp
push
pop
dec
in
sub
xchg
push
pop
jb
sub
mov
jo
ljmp
arpl
mov
loop
fwait
pop
repnz
cmpsl
dec
cmp
pop
xor
cmp
in
mov
out
in
fiadds
imul
inc
loope
jbe
test
lods
cli
insb
push
cmp
cwtl
sbb
pop
inc
shl
cmp
mov
adc
mov
imul
jge
das
dec
pop
out
jb
fwait
out
dec
cwtl
dec
popa
dec
pop
and
fs
cmpb
mov
int3
loope
mov
rorb
cmp
enter
xchg
leave
stc
ds
rcl
mov
inc
push
rolb
add
jmp
nop
xchg
push
xchg
in
testl
movsb
pushf
aad
lea
jns
jl,pn
lea
jnp
lds
push
push
jne,pt
repz
pop
push
nop
scas
mov
sbb
shrb
out
or
sub
sub
hlt
es
pop
sbb
sahf
les
mov
outsl
test
sbb
lret
jno
xor
into
ds
sub
dec
ficoml
jmp
sahf
ja
loopne
iret
pop
xor
inc
jle
insl
push
jnp
push
push
arpl
inc
pop
or
mov
and
shrl
jb
sbb
lret
outsl
sarb
movsl
leave
pop
in
cs
mov
xchg
rcll
imul
sub
mov
lahf
dec
mov
inc
fistl
scas
inc
mov
decl
mov
testl
sbb
lock
push
add
fcompl
out
lahf
or
dec
xor
pop
adc
test
out
xchg
nop
push
dec
rorl
imul
mov
cmp
or
xor
push
popa
and
rolb
call
inc
push
ljmp
cli
and
pop
push
aas
jns
xchg
filds
sub
sub
add
dec
nop
stc
sub
add
adc
mov
lcall
outsb
push
push
sbb
cmp
aam
out
cmc
icebp
lret
insl
leave
lcall
mov
je
mov
fs
dec
add
scas
sbb
bound
call
xor
add
leave
dec
adc
mov
mov
xchg
sbb
push
push
fistpll
iret
adc
pop
jl
repz
mov
in
test
or
sarl
out
sti
adc
outsb
bound
jnp
std
inc
sbb
imul
ret
out
outsl
adc
adcl
dec
sbb
scas
cmc
sub
stos
cli
jmp
cmpsb
insl
xlat
sub
stos
clc
js
jno
and
call
ds
sbb
mov
jle
cs
pop
ljmp
mov
leave
push
stos
and
adc
int3
js
mov
aam
fdivs
inc
add
jno
fdivs
insl
xor
outsl
insb
sub
cmp
in
daa
adc
shrl
add
in
mov
scas
mov
leave
lods
pop
pop
dec
push
cmp
loopne
or
rcll
xchg
cmp
fs
popl
mov
cmp
xor
push
jnp
enter
cmp
in
mov
inc
iret
ljmp
or
xchg
lods
leave
lock
add
sub
inc
mov
sub
clc
scas
jnp
ds
jns
int3
mov
enter
adc
or
mov
xchg
pop
xor
nop
adc
xchg
sub
adc
test
jmp
insl
jae
cmp
ljmp
jno
xor
push
lret
je
cmpsb
push
dec
xor
push
jb
dec
xchg
sbb
fwait
fs
sbb
es
mov
lock
vpcmpeqd
rorb
arpl
out
cmp
push
in
xor
jg
push
sbbl
out
xor
push
sbb
jne
cwtl
xorl
mov
ds
test
pop
jns
iret
cmova
mov
dec
enter
out
cmc
rol
push
sbb
loope
mov
xorl
dec
insb
mov
hlt
in
jmp
outsb
xchg
dec
call
sub
or
lcall
sub
stc
rcrl
scas
in
dec
mov
sub
push
dec
aaa
mov
leave
inc
test
jl
lahf
jmp
lock
inc
je
fsts
push
rorl
jmp
movb
lret
and
mov
mov
cmp
pushf
xchg
jne
lcall
and
shll
arpl
mov
cli
fstpt
xor
pop
or
aad
out
leave
adc
lret
add
inc
xchg
jecxz
int
sub
jle
jle
les
jae
and
sub
cli
sbb
jp
sub
mov
mov
mov
and
mov
and
out
adc
sub
int3
int3
or
and
xor
insb
mov
addr16
push
test
jnp
mov
mov
notb
iret
test
xor
shlb
loopne
xchg
push
push
sub
fsubs
outsl
push
call
xchg
inc
out
fs
xchg
push
in
pop
rcr
js
inc
or
cmp
aas
jg
add
sbb
mov
subb
loopne,pt
or
fdiv
enter
adc
sahf
js
xor
lahf
lahf
pop
lret
inc
in
pop
into
stos
and
pop
fcoml
inc
mov
jbe
inc
cmp
xor
pop
and
leave
pop
jo
scas
sub
ret
iret
cli
push
add
lea
mov
mov
lods
jp
lcall
or
loope
sub
pop
pop
add
inc
out
cmpl
sbb
stc
pushf
and
dec
xchg
dec
adcb
jp
adc
jae
sahf
rcr
mov
pop
ret
popa
mov
lcall
outsl
lahf
iret
jl
notl
test
idivb
ja
dec
fs
add
and
test
ss
inc
repz
push
inc
es
add
jl
adc
pop
cmp
sbb
mov
lea
outsl
xor
dec
outsb
cmp
outsb
mov
cmp
jecxz
data16
cmc
aad
int
cmc
adc
mov
xchg
mov
add
adc
frstor
mov
repz
ljmp
aaa
xchg
dec
mov
popa
in
ret
dec
push
jae
in
jmp
sub
inc
xchg
xorl
xchg
js
cmp
adc
xchg
jp
jne
outsb
aam
enter
jns
daa
std
ret
or
pop
insl
xor
clc
add
in
jae
cmc
inc
aad
jae
pop
xor
cmp
mov
jle
mov
out
ja
add
sub
subb
andb
arpl
ret
enter
push
xlat
mov
mov
xchg
mov
jmp
aad
out
jp
dec
sbb
scas
shll
and
flds
sbb
call
pop
mov
xor
sar
sbb
loopne
and
mov
jo
pop
int3
and
mov
andl
push
add
test
rcrb
xor
lahf
adc
pop
add
jle
and
ror
popa
pop
mov
cmc
jae
pop
push
push
subb
xor
pop
mov
and
inc
add
add
stos
loope
mov
jecxz
jmp
mov
fidivs
pop
fst
aaa
cmp
dec
pop
popf
jl
inc
imull
movsl
test
pop
or
data16
cld
pop
mov
cmp
fadds
aas
pop
dec
outsb
mov
testb
sub
xorl
movsb
xchg
repnz
in
sub
jne
je
aaa
sbb
mov
adc
jge
mov
cmp
pushf
xlat
sahf
add
lret
rclb
or
data16
xlat
ljmp
add
cmpsl
mov
imul
pushf
hlt
jp
cmp
decl
or
sbb
enter
leave
leave
sarl
mov
addr16
xor
ret
mov
push
cmp
pop
jmp
adc
imul
sub
cwtl
push
xlat
popf
xchg
dec
int3
jmp
in
sub
test
dec
gs
pushf
std
jp
nop
sbbb
loopne
out
dec
out
imul
push
fidivrs
shrb
icebp
popf
jge
popf
cmc
push
inc
dec
mov
mov
sti
out
int3
icebp
add
scas
xor
ljmp
fistpll
dec
loope
and
mov
sbb
pop
scas
push
dec
adc
mov
lds
mov
lret
stos
mov
das
movsb
adc
sbb
je
fwait
push
sbb
jno
bound
lcall
pop
fmuls
cld
mov
imul
nop
pop
outsl
lods
add
fdivr
out
cmp
lods
lods
movsb
xchg
scas
sbb
dec
xchg
insb
adc
xor
into
jmp
jnp
and
push
cmp
mov
jge
dec
repz
push
push
xor
popa
push
daa
pop
lcall
loope
shl
aaa
jmp
push
push
or
xor
lock
and
adc
fistpll
lret
inc
push
aam
mov
clc
arpl
clc
mov
repnz
xor
rorb
sarb
repnz
int3
mov
mov
orl
divb
push
fwait
movsl
outsb
jnp
push
je
aad
jb
into
sti
mov
aas
ljmp
sbb
add
and
in
cmpsb
cmp
std
jns
adc
jl
ret
ficompl
push
pop
les
ret
addb
push
inc
idiv
inc
stc
sbb
imulb
stos
ret
mov
es
rcrb
adc
mov
dec
inc
inc
sbb
loopne
sbb
inc
mov
inc
add
xor
lcall
xchg
cmpsl
divb
sti
mov
push
and
inc
mov
out
repnz
dec
mov
and
dec
stc
jle
aad
mov
jb
bound
stc
sahf
jns
mov
into
jge
push
out
imul
rcr
dec
add
and
fldl
push
dec
xchg
xchg
rcr
lods
xchg
gs
pop
add
dec
fucomi
jno
inc
dec
sub
arpl
data16
pop
inc
imulb
mov
cs
std
cmpsl
imul
dec
sbb
and
mov
mov
test
lret
mov
paddw
test
xchg
adc
jnp
xor
popf
into
and
xchg
inc
dec
insl
add
push
adc
cmpsl
hlt
cmp
mov
out
sbb
clc
push
aam
cwtl
adc
repz
push
xor
pop
fld
inc
pushf
clc
in
mov
es
idivb
and
mov
cld
in
in
stos
mov
scas
sub
loop
scas
fsts
jbe
inc
loopne
push
dec
imul
xchg
dec
mov
jns
mov
mov
rcll
jbe
fwait
push
xor
sahf
fstps
xor
push
dec
rorb
add
shlb
xchg
or
sub
dec
imul
mov
es
mov
flds
adc
mov
adc
stc
enter
mov
sbb
dec
int3
iret
push
push
iret
sub
mov
lahf
out
add
in
jmp
lds
jmp
out
dec
jp
xchg
iret
lods
jp
mov
lods
daa
mov
clc
push
lahf
dec
test
aas
mov
jno
sub
sbb
ret
fwait
xchg
and
jae
jo
outsb
dec
mov
lcall
xor
add
cmp
push
xchg
ret
cmpsb
jle
hlt
aam
js
cmpsb
mov
jge
mov
fst
pop
xchg
iret
les
lds
pop
repz
daa
cld
lods
and
cmc
into
cwtl
push
xchg
push
hlt
add
push
cmp
mov
push
cmp
xchg
out
pop
ret
xor
ret
mov
push
xchg
and
mov
popa
jecxz
sahf
mov
pop
dec
negl
mov
stc
sti
jo
gs
scas
cmp
mov
out
and
lods
aas
addr16
idiv
adc
push
js
arpl
rcll
stos
mov
add
and
scas
sbb
sarb
icebp
xchg
push
jbe
add
adc
xchg
add
push
negl
and
sbb
rcll
lahf
and
add
stos
and
fadd
ret
test
sub
xor
sarl
aas
mov
pop
adc
std
add
cmpsl
push
stos
or
pop
lods
add
jo
mov
or
fwait
mov
ret
dec
cmpsb
add
inc
nop
divl
das
dec
cmc
call
into
add
lahf
add
sbb
scas
arpl
mov
mov
jp
jmp
and
or
and
dec
fisttps
flds
dec
inc
test
mov
jge
or
daa
fs
aad
xchg
ret
xchg
fdivp
or
jmp
sub
mov
lret
shl
stos
mov
orl
jae
lret
jecxz
mov
mov
dec
adc
lret
pop
adc
jae
mov
and
stc
add
mov
imulb
push
sub
outsl
xchg
mov
sbb
push
jns
dec
xor
test
scas
add
add
fistps
sbb
mov
fwait
stos
jno
sub
lea
enter
scas
inc
sub
addb
in
inc
es
or
mov
sub
dec
dec
sar
adcl
sahf
jne
jmp
mov
out
ds
sti
pop
push
cmp
aaa
scas
ret
adc
or
into
fidivl
neg
testl
icebp
loope
mov
daa
ss
mov
fnstenv
jge
in
jle
mov
inc
lea
and
sub
jns
sub
xchg
pop
lock
test
test
sbb
jmp
cmp
in
push
push
aad
mov
sbb
aad
stos
hlt
test
aaa
jecxz
dec
push
and
mov
jmp
sbb
pop
jecxz
or
push
pop
adc
inc
push
pop
mov
dec
leave
inc
dec
mov
xchg
jmp
dec
xlat
jae
out
adc
inc
sub
xor
mov
push
insl
sbb
ds
insb
sahf
xchg
sarl
test
mov
popf
movsl
fsubl
sub
add
in
sbb
imul
push
int
add
out
xor
addr16
loopne
xorb
int3
inc
inc
push
scas
fs
out
add
xchg
adc
mov
push
stc
jg
mov
rorb
pop
popa
inc
in
jle
sub
jge
enter
or
xor
scas
arpl
inc
gs
arpl
jno
dec
push
mov
imul
sti
adc
mov
and
xchg
popf
xor
adc
pop
xchg
stos
mov
or
mov
adc
pusha
mov
add
loop
jo
inc
std
int3
mov
loopne
xor
ret
pop
stos
lods
stc
or
in
call
adc
and
ds
pop
andb
hlt
cmpsb
mov
add
stc
jae
dec
mov
mov
pop
mov
sbb
clc
sub
xor
jge
mov
lahf
pop
adc
mov
push
dec
jno
ljmp
push
pop
pop
out
adc
stc
iret
push
pop
popa
out
pop
sub
push
dec
mov
es
and
out
dec
movsb
dec
mov
loope
mov
fldcw
scas
pop
aad
repz
inc
pusha
mov
mov
sub
pushf
mov
shrb
and
jne
xor
je
inc
or
mov
stos
repz
adc
jno
mov
mov
add
pop
mov
jge
inc
jne
jnp
pop
in
je
adc
xor
jns
mov
fistpl
shlb
xor
js
pop
xchg
xchg
fildll
scas
pusha
inc
add
lods
push
mov
xor
or
stos
sti
hlt
notb
jnp
dec
stc
mov
push
or
nop
mov
sarb
and
or
test
xchg
aam
push
sub
fisubs
sbb
dec
lcall
jno
jno
test
add
dec
pop
sub
ficoms
adc
mov
sub
add
lds
sbb
cmovne
cmp
pusha
inc
in
inc
insl
xchg
jno
inc
fwait
add
loopne
icebp
ficomps
adc
hlt
daa
mov
inc
fbld
mov
test
xor
cmpb
into
pop
fsubl
ss
add
push
inc
pusha
jnp
das
xchg
cmpsl
pop
shl
fdivrs
mov
xor
enter
sub
inc
sub
cmp
call
fwait
sbbb
clc
push
xchg
cmp
sub
stos
or
cmp
int3
mov
xchg
int3
ljmp
jp
loop
cmp
cmpsb
xchg
daa
push
mov
loope
data16
mov
out
stos
or
arpl
dec
ljmp
test
jnp
ds
xchg
ret
out
pop
repz
mov
dec
mov
pop
addb
mov
xor
and
repnz
fmuls
inc
rclb
ljmp
push
jg
mov
enter
mov
loop
daa
jbe
insl
mov
or
push
mov
leave
jne
sbb
xchg
cmpsl
xor
imul
dec
inc
inc
cmp
mov
jl
hlt
ret
sbb
sbb
clc
test
popf
xchg
mov
mov
or
outsb
push
inc
xchg
mov
cmp
out
insl
mov
inc
sub
pop
inc
lcall
push
andb
sbbl
and
repnz
lret
sahf
sbb
dec
iret
das
mov
sti
inc
mov
sti
or
add
ss
ret
xchg
imul
movsb
lret
test
out
jbe
push
stos
fxam
aaa
inc
loop
xor
popf
divb
dec
enter
sti
sbb
fcmove
cld
leave
mov
jle
testb
mov
roll
and
pusha
ret
push
dec
jmp
jp
mov
cmp
insb
mov
jno
inc
cmpsl
int3
shr
push
jg
das
mov
xor
shlb
in
add
add
push
insl
mov
sub
sub
push
mov
cmp
pop
cmp
mov
sub
pop
mov
mov
cmp
inc
mov
inc
test
es
shrb
popa
push
and
mov
mov
lcall
push
test
hlt
jb
jnp
inc
fstpl
xchg
fisttpl
push
mov
js
test
int3
xchg
add
fwait
and
scas
add
and
fimull
mov
int
or
sub
and
xchg
adc
insl
testb
add
mov
in
xorb
dec
aad
jle
ret
aas
shlb
adc
xchg
adc
imul
cmp
outsb
fnstcw
shlb
push
outsb
in
ret
jecxz
loope
imul
hlt
outsl
movsb
jle
adc
ret
cmp
xor
jo
in
gs
js
xchg
lods
add
test
shrb
mov
cs
enter
lret
inc
mov
xchg
xor
sub
sub
repnz
rcr
inc
iret
pop
jmp
imul
roll
enter
out
arpl
dec
xchg
sti
outsl
out
fisttpl
fiadds
loopne
cld
orl
sub
stos
dec
jae
jle
flds
arpl
dec
sbb
mov
lock
xor
xor
jl
pop
dec
pcmpgtw
cmp
ja
lods
imul
sbb
aas
inc
mov
cmp
icebp
das
jl
arpl
gs
mov
ljmp
add
ror
push
mov
ljmp
repnz
fildl
lods
sahf
and
cld
cwtl
xchg
adc
stos
rorb
cld
repz
insl
popa
mov
pop
xor
out
add
inc
adc
test
pop
lock
jo
sbb
lret
sbb
sti
inc
push
and
pusha
imull
lods
bndldx
insb
fisttpl
int
mov
sub
or
adc
push
cmp
mov
mov
jnp
add
lods
popa
stc
jecxz
addr16
test
push
add
pop
rolb
inc
inc
dec
mov
mov
xor
adc
wrmsr
mov
sbbl
xor
inc
sub
hlt
ret
jo
add
in
lods
xchg
loop
or
rorb
cmp
mov
jns
pop
pop
pop
fwait
xor
das
lods
push
add
insl
inc
mov
adc
mov
pop
jne
mov
mov
sub
dec
mov
sahf
xor
jae
mov
inc
jg
out
sbb
sbbl
sub
sti
pop
fisubrl
das
dec
fs
repnz
insb
xor
sbb
or
dec
daa
pop
jecxz
xor
scas
pushf
mov
mov
jne
outsb
stos
aam
outsl
inc
pop
lods
fdivrs
leave
pop
and
loope
insl
add
xchg
mov
test
dec
stos
mov
mov
jo
popl
xchg
or
jg
andb
fs
outsb
aam
insb
push
cmp
adc
push
ret
rclb
xchg
and
or
inc
jae
pop
add
xchg
cltd
movsl
sarb
pop
adc
clc
daa
out
jmp
je
cmp
nop
aas
test
movb
mov
aas
sbb
lahf
dec
inc
adc
dec
mov
jnp
pop
sbb
out
xlat
je
or
testl
mov
pop
cmc
and
rcll
and
mov
jnp
and
dec
insb
inc
pop
adc
adc
jnp
jnp
sbbb
lods
jg
mov
imul
add
xlat
out
in
add
mov
mov
mov
dec
and
fcmovne
movsl
cmpsb
mov
bound
xlat
imul
add
das
hlt
test
jg
xchg
in
and
xchg
and
cld
or
push
dec
pop
adc
mov
xor
dec
mov
loopne
shlb
or
jne
stos
xchg
push
and
mov
xchg
mov
pop
sarb
rol
popf
cmp
adc
fistpl
inc
cmp
dec
dec
jl
add
ds
stos
mov
jecxz
jbe
icebp
cmp
mov
jecxz
les
jge
add
call
xchg
mov
mov
sti
add
decb
sbb
cmpsl
rcr
inc
or
mov
lret
mov
pop
or
sarl
lahf
shlb
mov
push
mov
js
sbb
mov
pop
xor
shl
in
jo
pop
clc
sbb
out
sbb
lret
icebp
adc
rcl
push
and
les
and
ja
cmp
imul
adc
or
shrl
gs
mov
nop
dec
iret
or
mov
adc
xchg
mov
mov
cmp
mov
cmp
sarl
fistpl
lahf
orb
pop
cli
fs
add
jmp
and
out
fsubs
sbb
xor
cld
stc
add
push
inc
mov
mov
arpl
xor
sbb
mov
rcll
adc
and
adc
or
add
pop
addr16
or
test
popf
aam
test
pop
inc
xchg
jle
jo,pt
fmull
mov
mov
pop
or
and
xor
lret
stc
xor
push
push
xchg
add
inc
ret
popa
fsubr
cmp
and
das
fs
jno
outsb
cmp
stc
mov
cmc
xorl
inc
out
dec
or
mov
push
movd
xchg
jp
xor
adc
aad
mov
inc
pop
inc
mov
xchg
movsb
cld
push
dec
aaa
enter
out
rcll
push
cld
outsl
decb
or
cmp
push
iret
mov
imul
lcall
jae
sbb
fmul
xlat
imul
dec
pop
cmp
and
outsb
les
nop
or
shll
xor
pop
mov
xor
les
bound
bound
add
mov
sbb
mov
lret
imul
mov
and
dec
mov
and
xlat
push
sbb
cmp
leave
stc
movsl
inc
and
sub
popl
mov
leave
mov
xchg
addb
add
pop
and
pop
aas
mov
dec
xchg
mov
sbb
shll
sti
mov
mov
mov
mov
js
sahf
add
adc
push
mov
sub
or
and
add
pushf
mov
mov
mov
pop
and
iret
adc
nop
lock
mov
mov
shll
sti
mov
push
jmp
mov
ja
cmp
sti
fs
and
add
ja
jbe
int
out
push
clc
inc
mov
fdivs
ret
jmp
mov
adc
ret
push
jmp
jp
xchg
xchg
decb
mov
dec
aam
or
bound
xchg
inc
push
inc
lea
pop
inc
mov
clc
xchg
pop
arpl
sbb
mov
and
xchg
xor
cli
daa
xor
test
push
lret
jnp
mov
or
lods
repnz
fcmove
xor
imul
push
and
aad
loope
leave
mov
jmp
add
push
dec
clc
popf
xor
dec
jbe
xlat
fstl
mov
inc
push
daa
fwait
sub
mov
push
or
in
loop
gs
mov
jmp
jae
cltd
bound
push
push
sub
inc
cmc
inc
loope
stc
stos
xchg
xlat
jle
mov
inc
cmpsl
pop
popa
aam
mov
dec
in
aas
cmc
add
call
inc
mov
mov
cmp
inc
xorb
jecxz
dec
cmp
pusha
jl
and
cmc
inc
mov
movsl
cwtl
and
xor
jnp
sbb
jg
arpl
and
lods
popf
iret
xor
mov
lret
repnz
inc
addr16
mov
or
pop
sbb
imul
sub
push
popa
loope
out
xlat
lods
sbb
and
cmp
mov
test
cld
sub
lock
sub
rcrb
out
lcall
cmp
dec
cltd
in
adc
push
out
xor
cmpb
int
pop
inc
pushf
push
bound
jae
loop
or
inc
cs
cmp
xchg
add
pop
loop
shrb
pop
test
test
pop
mov
mov
xor
daa
fistps
sbb
movsb
xchg
xchg
jg
jns
int
in
cmp
fstpt
insl
inc
gs
mov
movsl
iret
aad
pop
add
sbb
mov
mov
add
fwait
jl
leave
rcl
push
mov
pop
jns,pn
fidivs
daa
jbe
icebp
mov
test
in
out
gs
test
lret
push
js
mov
xchg
adc
xor
cli
xchg
adc
test
or
jns
mov
push
mov
mov
xchg
xor
lods
xor
stos
divl
add
int
adcw
or
ds
mov
push
dec
mov
adc
jno
in
mov
lret
pop
add
cwtl
std
xchg
xchg
pop
and
cmp
fs
add
push
fcomps
add
push
scas
sti
pop
and
movsb
lods
sbb
mov
fwait
jl
cltd
cli
lss
mov
adc
sbb
rcrb
jbe
xchg
shl
fistl
das
jg
dec
push
test
or
pop
xchg
add
popa
sub
je
cltd
sbb
cmp
inc
sub
mov
test
aaa
lcall
loope
bound
stos
scas
adc
or
push
ljmp
jecxz
or
pop
cmp
fistpll
popf
pusha
repnz
and
xchg
sub
rcll
xchg
mov
adc
mov
jle
stos
mov
std
js
sub
or
sub
mov
sbb
cmp
mov
push
enter
arpl
pusha
lret
ljmp
ficoms
push
mov
and
and
jl
mov
xlat
push
fildl
inc
aam
roll
mov
push
jp
mov
mov
rcll
ret
nop
jnp
xor
in
pop
xor
sbb
cmp
testl
adc
fisubl
sub
xor
push
icebp
and
jp
ret
mov
pop
gs
add
sbb
dec
pop
stos
pop
inc
ja
leave
and
pop
xchg
or
stos
into
cli
repnz
jecxz
or
dec
mov
dec
stos
ljmp
in
sub
xchg
sub
dec
push
add
pushf
fnsave
sub
imul
cmpsl
xchg
mov
mov
push
popf
jecxz
sar
and
inc
ds
sub
inc
cltd
inc
jns
or
mov
jne
imul
leave
outsb
jg
or
das
pusha
inc
popf
repnz
dec
test
mov
and
cmp
sub
sub
mov
adc
add
jae
jae
cltd
stc
dec
cmp
inc
cmp
mov
out
jns
out
fisubl
test
sbb
push
mov
nop
mov
inc
mov
sub
jmp
stos
lds
mov
test
sbb
fstps
inc
leave
xchg
adc
ljmp
aad
push
add
rorl
and
pop
inc
stos
add
jns
dec
xchg
xchg
cli
sbb
in
and
fwait
dec
xchg
mov
bound
ja
insb
std
in
xor
into
and
ds
lods
adc
mov
inc
inc
sub
sahf
pop
or
clc
lcall
hlt
lret
cmp
cmp
sahf
das
aad
test
adc
stos
xlat
sbb
fbstp
icebp
xchg
dec
lods
movsb
loopne
cmc
and
cmc
jge
sarb
dec
xcrypt-ofb
cmpsl
in
lahf
fxch
jg
dec
ss
xchg
dec
dec
mov
mov
pop
cs
shll
push
mov
cmc
movsb
fucomip
std
ret
test
cwtl
cmp
mov
imul
inc
cltd
sbb
mov
sarl
aas
es
xchg
repnz
add
daa
loopne
mov
scas
lahf
daa
sarl
xorb
adc
imul
scas
or
dec
pop
es
xchg
not
movl
repnz
in
adc
adcb
dec
loopne
add
sbb
das
arpl
das
popl
add
xor
lods
sbb
sbb
pop
sub
lret
test
and
test
test
shlb
lret
dec
sbb
test
sub
xchg
imul
aaa
mov
adc
loope
or
sub
inc
mov
aam
leave
mov
test
roll
pushf
sub
bound
fcomps
jno
cmp
mov
jecxz
jle
mov
gs
inc
mov
pop
jmp
cmp
add
ror
sbb
fisubs
les
scas
and
push
shl
sub
adc
or
jne
pop
es
std
das
xchg
pop
cmp
xor
inc
lret
cmp
add
out
or
push
out
push
dec
out
jp
inc
xor
push
mov
xchg
in
xchg
sti
lcall
jno
mov
adc
jg
inc
cs
pushf
or
aam
ss
push
arpl
push
inc
sub
xor
xor
lret
xor
mov
js
pusha
stos
mov
pop
mov
aam
push
ljmp
bound
hlt
mov
sbb
mov
dec
jne
sub
iret
sub
insl
out
or
rclb
ds
jne
push
or
mov
sbb
add
daa
cmp
mov
or
sub
test
scas
loope
push
and
test
orb
push
inc
sub
jp
fst
mov
jbe
or
lahf
mov
and
test
cmpsl
test
idiv
pop
and
cltd
cmp
xchg
outsb
xchg
adcl
jo
enter
dec
repnz
popa
scas
dec
sbb
inc
jp
mov
inc
in
dec
fnstsw
and
xchg
ljmp
mov
rep
dec
pop
aaa
int
popa
xor
es
xchg
adc
add
dec
cmpl
xchg
xchg
add
into
lods
inc
cmpsl
shll
inc
pop
in
inc
in
sbb
es
aam
sub
jns
mov
mov
aas
test
mov
imul
dec
in
rcr
scas
and
sbb
push
int
add
cmp
scas
or
repz
cmp
xchg
mov
fsubs
int3
cli
add
mov
mov
xchg
sub
cmc
sub
add
ret
pop
movsb
movsl
sbb
aas
test
mov
mov
xchg
int3
adc
sub
add
sbb
cmc
xchg
inc
daa
xchg
sbb
push
hlt
pop
scas
les
mov
mov
pop
jns
inc
insb
xor
adc
lcall
xchg
pop
out
bound
and
pop
fldln2
jbe
jo
repz
shrb
dec
testb
inc
pop
adc
clc
ficompl
and
mov
push
xchg
add
movsl
cmp
push
pop
jb
out
shl
mov
mov
out
mov
mov
xor
or
out
in
and
jle
add
outsb
sub
xchg
dec
cs
cmp
aas
loopne
jle
addl
out
xchg
cwtl
shrl
inc
fsts
mov
ss
aad
cmp
mov
adc
sbb
mov
popa
lods
xchg
jge
hlt
sub
fxch
and
jg
insl
pop
push
adc
js
imul
subl
fsts
push
inc
xchg
push
filds
add
xchg
ljmp
fadds
and
ret
mov
shl
mov
test
fmull
std
sbb
rcrl
push
cmc
jbe
mov
or
lock
push
lret
jbe
push
dec
adc
dec
mov
mov
frstor
mov
add
xor
or
sti
push
lock
pop
mov
cmp
add
cmp
pushf
int3
xorl
or
stos
xchg
sbb
dec
out
outsl
sub
frstor
lret
push
or
mov
mov
in
jg
push
pop
inc
jp
inc
icebp
pop
cmp
loope
push
sbb
mov
push
dec
mov
cmp
xor
gs
pop
mov
cld
bound
sub
mov
subb
out
push
xchg
and
mov
fxam
aam
icebp
sub
cmp
inc
add
cwtl
xlat
jno
xchg
lahf
adcl
dec
push
sbb
jnp
insl
cmpl
aam
mov
mov
sbb
rep
lret
add
xchg
pop
jno
ret
fsub
out
ljmp
mov
mov
imul
repnz
xchg
push
push
scas
mov
fdivrp
adc
sub
pop
movsb
cmpsb
mov
rcl
js
mov
mov
test
dec
jns
out
cmp
adc
push
hlt
imul
push
ficomps
xchg
std
loopne
imul
cmp
and
adc
outsl
cli
inc
adc
inc
fcoml
hlt
and
sub
mov
cwtl
mov
neg
sbb
cmpb
mov
sti
jge
aad
dec
or
mov
or
and
cld
je
adc
cmp
sbb
cld
roll
aaa
push
add
push
outsb
hlt
out
aas
ret
cmp
iret
shll
dec
mov
sahf
pop
jge
pop
arpl
rorl
and
cs
shll
and
ljmp
icebp
sub
ljmp
mov
fisttpl
int3
out
aam
into
sub
push
mov
jnp
mov
mov
add
cs
aas
lahf
sti
fwait
cmpl
adc
pop
bound
inc
test
rcrb
arpl
bound
arpl
jecxz
and
mov
dec
ret
cmp
stos
cmpsl
popa
dec
cmpsb
imul
and
out
gs
push
aas
cmpsl
out
push
nop
adc
adc
lods
push
lret
rcl
sub
lahf
cmp
icebp
inc
arpl
mov
js
adc
es
mov
pop
xchg
push
imul
mov
xor
xchg
mov
ret
mov
cld
call
in
sub
ljmp
stc
cwtl
add
jle
inc
push
inc
lret
icebp
sub
and
in
test
mov
and
inc
fdivr
cmp
hlt
add
push
add
inc
lret
aas
xor
negl
lret
pop
cmpsl
in
bound
loope
out
adc
loopne
int
hlt
addr16
push
test
sarl
and
das
adc
mov
mov
and
push
divb
aas
dec
cwtl
xchg
test
jge
ficoms
sub
faddl
push
xchg
shlb
xor
and
nop
sbb
jecxz
iret
call
pop
adc
push
adc
call
sbbb
icebp
out
cmp
jbe
gs
imul
je
xor
lods
movsb
nop
dec
outsl
jnp
fisttpll
cld
mov
mov
push
mov
dec
les
aas
imul
push
rorl
int
xor
fmull
xlat
jl
stos
sbb
int
dec
xchg
out
js
in
cmp
bound
jp
add
inc
mov
notl
fucomp
and
sub
ret
jne
cmp
fcom
scas
push
out
shld
sub
sbb
xor
leave
dec
sahf
and
cmp
dec
mov
pop
out
fcoml
pop
sbbl
lcall
shll
icebp
jns
sbb
jge
bound
xor
push
cmp
insb
sbb
and
or
fbld
fisttpll
pusha
lret
scas
call
dec
lcall
push
sub
xchg
cmpl
in
lcall
mov
aaa
push
pushl
ss
orl
adc
push
test
inc
sub
je
lret
jns
dec
movaps
leave
dec
xor
adc
loopne
mov
add
cmp
inc
dec
mov
std
adc
sbb
es
pushw
fs
lahf
aaa
addr16
and
dec
push
mov
dec
add
jo
sbb
out
popf
pop
lea
sub
pushf
add
jo
mov
shlb
cld
adc
mov
mov
in
cmp
hlt
jmp
lds
addb
lcall
dec
xor
rorl
addr16
clc
loope
and
or
cs
push
fadd
rolb
stc
dec
int
cltd
cmp
sti
mov
clc
xchg
inc
xor
hlt
pushf
mov
push
sub
push
xchg
or
sub
out
ret
mov
outsl
movsl
xchg
push
xchg
fwait
imul
gs
int3
jbe
adc
and
xchg
push
in
jl
shll
sbbl
stos
je
sbb
push
sub
inc
pop
fcomps
out
pop
into
push
dec
or
jge
cmp
std
pop
sbbl
mov
scas
clc
sbb
dec
xor
test
jb
and
das
lock
sbb
or
pushl
and
mov
jb
fisubl
mov
mov
cmc
add
inc
in
fnstsw
or
add
jb
in
adc
and
push
mulb
lods
out
hlt
add
and
out
orl
mov
out
push
dec
fistpl
jge
jmp
mov
jns
push
lods
pop
out
jp
fnstenv
imul
push
pop
iret
das
add
ja
sbb
sbb
call
dec
xor
mov
pop
movsb
push
sbb
test
into
outsb
loopne
imul
mov
xchg
sub
inc
in
xor
stos
scas
rclb
xor
adc
bound
lret
push
or
ds
sti
ljmp
xor
cli
jb
push
push
clc
inc
dec
sbb
les
les
aad
cmp
cmp
fldpi
adc
cmpsl
lahf
xlat
or
sbb
movsb
in
sahf
jp
sub
jl
push
jno
add
lods
pop
ss
jmp
adc
lcall
stos
repnz
jbe
xlat
mov
push
movsl
jae
sub
add
xlat
loope
pop
popa
js
push
pop
mov
stos
pop
imul
out
push
repz
shl
sub
cmp
add
into
inc
mov
lods
sbb
aam
popf
add
mov
in
cmp
cld
cmpsb
mov
movsb
mov
rol
adc
sbb
aaa
xchg
sahf
pop
fcmovnb
jb
into
shll
mov
fidivs
dec
jb
cld
ret
cmc
xchg
shl
sbb
push
int
dec
call
decb
jae
pop
leave
js
lret
sbb
ja
xor
add
jle
add
popf
mov
nop
push
mov
aas
sbb
adc
in
xchg
rolb
lods
mov
add
pushl
pop
fcomip
sbb
je
stos
inc
mov
pop
xchg
dec
push
jo
pop
fimuls
jg
cmp
jbe
nop
mov
pusha
jmp
shrb
stc
in
push
jbe
mov
mov
cwtl
pop
push
insb
cmpsb
add
stc
or
pop
mov
scas
lods
xchg
xor
cmp
jmp
cmpsb
jnp
cli
lds
push
pop
int3
aaa
sbb
xor
dec
mov
xor
sti
push
xchg
mov
inc
dec
out
enter
and
dec
test
outsb
mov
stc
popf
or
pop
in
fldl
adc
lock
stos
sbb
das
fwait
subb
and
incl
loopne
sbbb
adcl
and
rcrl
push
add
daa
and
imul
inc
cvtdq2ps
repnz
mov
insb
outsl
pop
pushf
cs
push
cmc
cld
pusha
clc
inc
xchg
push
add
addr16
pusha
mov
push
enter
pop
or
in
jl
dec
dec
or
lods
push
mov
inc
gs
sub
lret
mov
test
pop
inc
jge
lods
push
fbld
add
mov
into
mov
fisubs
bound
or
popf
xchg
fs
nop
insb
push
mov
push
ret
inc
dec
int3
add
add
mov
xor
ror
loop
cltd
pop
daa
xchg
ret
inc
sbb
mov
jae
movb
out
and
sbb
sub
pop
or
popa
shr
iret
lcall
push
mov
jmp
out
sbb
into
notb
and
daa
mov
adcb
xchg
or
daa
cmp
or
mov
jg
in
and
das
mov
mov
push
aad
cmp
out
push
jp
or
loope
popf
xlat
sbb
push
aas
inc
mov
jnp
out
sbb
push
adc
pusha
lock
fdivl
add
and
fs
andb
and
xchg
mov
sbb
inc
imul
into
je
and
xchg
scas
mov
jmp
push
pop
test
movsb
mov
pop
mov
aaa
in
or
je
adc
jecxz
ss
mov
jg
sub
cmp
insl
mov
aas
jno
fs
imul
mov
rorl
imul
xor
jl
or
jg
subl
pusha
iret
into
sub
cmp
xorb
movsb
cmp
push
call
int
inc
mov
int3
clc
shlb
inc
or
mov
js
repnz
or
mov
add
pop
mov
and
jmp
jmp
dec
cmpsb
rcll
stc
mov
add
dec
cli
cltd
xchg
bound
jne
push
iret
enter
fstpl
sbb
or
push
or
jbe
movsb
call
jmp
cwtl
dec
jmp
sbb
adc
ds
and
xchg
loop
out
sbb
js
imulb
sar
mov
add
mov
sbb
xchg
jbe
mov
xor
subl
or
rorl
xor
push
mov
mov
push
test
aad
push
ds
push
inc
jp
ds
mov
cs
dec
aam
gs
xor
inc
rorl
adc
or
and
xchg
cmp
imul
movsb
mov
addr16
negb
or
ja
ss
addr16
or
popa
push
mov
stc
das
ljmp
sub
std
rorb
mov
and
sub
add
je
mov
adc
cmp
cmp
mov
mov
adc
adc
xor
inc
pop
test
mov
into
shlb
pushf
pop
xor
sub
mov
sti
fmull
cmp
inc
add
jmp
lcall
mov
into
adc
sub
or
popa
scas
push
repnz
xchg
ja
cwtl
jbe
push
cmp
push
scas
adc
dec
push
add
arpl
xchg
shl
mov
in
hlt
into
out
cmp
sub
xchg
and
ret
aam
xchg
inc
fiaddl
into
nop
clc
jne
imul
or
adc
subl
jbe
adc
test
sarb
mov
push
gs
push
or
jb
fsub
sbbb
data16
movsl
fwait
in
push
fnstsw
pcmpeqw
lds
int
and
dec
xchg
in
ret
xchg
leave
fldenv
mov
sub
frstor
insl
dec
inc
bound
mov
aam
or
cmc
roll
pop
add
fsubp
insb
adc
das
lret
cmpsl
xor
dec
and
push
mov
in
mov
pusha
dec
test
sbb
cmp
pusha
sub
pop
and
in
xor
cmp
pop
cmp
inc
add
out
enter
mov
cld
lods
in
xor
fstl
test
mov
js
dec
rorb
fdivp
jg
push
add
xchg
xchg
enter
or
and
jb,pn
or
jmp
adc
call
pop
xor
fnstsw
pop
dec
xor
sub
mov
loop
cwtl
scas
or
sub
mov
push
or
dec
iret
mov
push
cmp
and
test
sub
xchg
pop
cmp
adc
jle
lret
jno
and
mov
jecxz
jno
adc
push
or
in
jl
mov
dec
daa
mov
dec
aas
and
test
mov
out
rcl
in
test
push
bound
mov
test
lret
rcl
leave
mov
bound
stc
or
adc
adc
aad
pop
or
xchg
test
mov
ljmp
sbbb
push
shlb
xor
in
dec
pop
mov
sbb
not
cmp
adcl
bnd
pop
sub
mov
out
cmp
mov
jp
add
mov
jo
lret
rorb
int
pop
jle
mov
lock
test
rcll
cmp
iret
mov
scas
adc
push
push
outsl
jnp
cmpsl
ja
loop
test
push
or
sti
push
sub
or
push
inc
dec
pop
cmp
jge
xor
insb
out
icebp
sarl
ds
mov
jg
add
pop
iret
aad
pop
imul
lahf
adc
push
in
in
fisubl
shrb
or
dec
dec
lcall
adc
add
jae
sbb
ljmp
outsl
and
out
inc
gs
out
add
mov
or
sbb
cmp
push
pop
jecxz
sbb
jg
push
and
mov
das
vshufps
out
mov
sub
mov
stc
popl
into
outsb
fdivrl
sub
cs
inc
push
fistpll
add
loope
fnstcw
in
add
aam
subl
mov
pop
cmpb
sbb
xchg
xchg
shll
loope
xchg
push
inc
adc
jne
cmp
xchg
dec
cmc
outsl
inc
fistpl
jb
mov
pop
pop
test
mov
dec
pop
daa
and
or
aaa
xchg
dec
cmp
sub
push
add
adc
jbe
mov
mov
mov
jp
or
push
lret
inc
insb
dec
test
shll
arpl
mov
subb
leave
jle
mov
lock
jb
and
dec
and
fists
popa
push
push
movsb
or
jb
scas
push
xchg
fmull
cld
stos
pop
dec
rolb
call
cmp
mov
outsl
and
pop
mov
mov
or
lcall
arpl
stc
imul
lret
and
lahf
jae
pop
xchg
mov
fmull
stos
mov
or
cmp
into
sahf
sbb
lods
xor
in
jns
mov
sbb
aas
jecxz
pop
and
ss
fdivrl
imul
dec
push
xlat
cmp
imul
xor
sub
mov
xchg
cld
test
mov
test
repnz
out
cmp
cmpsl
cmp
stos
repz
push
gs
jo
sub
insl
dec
mov
ret
je
testb
fisubs
stc
jp
cmp
cmpsl
repz
enter
leave
cmp
pop
ss
arpl
mov
add
lcall
sub
leave
loop
or
movsl
or
sub
pop
movsl
xchg
stos
into
shll
sti
inc
xor
adc
push
jge
xor
nopl
and
ret
sub
movsl
negb
xor
lock
mov
or
sbb
push
lahf
rclb
add
pop
cmpl
fsubl
js
loopne
outsb
xchg
in
cs
movsl
jg
or
add
xor
and
mov
cmc
or
mov
ret
mov
and
fisubrl
bound
jp
inc
shl
dec
loopne
aas
and
dec
idivl
push
lods
adc
and
pop
jnp
xchg
imul
pop
bound
and
jmp
cmp
scas
mov
icebp
mov
sub
add
mov
ds
hlt
push
aas
add
stos
repz
ficoml
mov
enter
test
ret
cltd
inc
lds
scas
jge
decb
mov
dec
xor
lret
jae
mov
in
test
inc
mov
in
push
lods
pop
mov
mov
inc
add
adc
mov
sbb
push
dec
add
push
arpl
scas
les
repnz
fwait
mov
cmp
in
xor
jae
mov
lods
cmc
and
mov
cld
gs
je
in
add
aaa
push
jns
add
pop
push
pop
pop
mov
xor
add
xchg
and
lcall
cmpsl
dec
cmp
mov
push
push
cmp
dec
sar
sbb
test
add
shrb
lds
mov
inc
mov
movsb
sbb
mov
in
dec
mov
or
shrb
les
push
movsb
cmp
pop
inc
sarb
das
frstor
adc
enter
dec
pop
sub
xor
adc
aad
cmp
lock
jmp
loop
push
add
js
and
xchg
push
imull
in
jmp
out
push
or
fadd
aas
loop
lds
and
fwait
cld
mov
ret
sahf
scas
test
movl
adc
clc
cs
sub
js
rcl
stc
dec
mov
ficoms
out
cmp
nop
push
inc
stc
rcrl
jnp
icebp
add
cmpsb
inc
sub
in
xchg
fstps
aad
sub
cmp
or
sub
dec
cwtl
or
mov
sysexit
and
xchg
ja
xchg
arpl
push
mov
addl
ja
dec
inc
jno
and
jnp
adc
push
pop
sbb
lds
into
jle
arpl
ljmp
fcoms
sub
gs
data16
int3
xor
fldl
out
xor
cli
sub
jmp
push
add
cmc
push
int
cltd
fs
mov
mov
inc
pop
jge
sti
pop
xor
or
sub
inc
ds
inc
ret
in
popf
loope
shlb
bound
push
mov
inc
fimull
inc
pop
lds
test
fisubrs
ret
insb
ds
repnz
push
add
pop
dec
iret
mov
fnstsw
cmp
loop
dec
add
xchg
ficoms
ficompl
and
xchg
mov
call
cmp
icebp
and
test
stos
popa
cmp
es
or
gs
dec
ret
ffree
pop
sbb
adc
xchg
dec
xor
adc
mov
lahf
push
dec
loop
shl
sbbl
or
push
insb
fnsave
and
rcr
cmpsl
pop
pop
in
dec
fnsave
mov
nop
mov
inc
rcll
inc
xchg
add
mov
inc
mov
dec
andl
int3
mov
ljmp
pop
inc
cmp
pop
arpl
and
or
arpl
add
xor
cmp
cmp
pusha
xlat
cmp
fs
sub
push
sbb
push
xor
aaa
jae
adc
sti
xchg
mov
sub
xchg
add
mov
scas
cld
inc
mov
add
insb
sbb
pusha
shlb
mov
pushf
or
push
push
sbb
mov
jp
test
adc
jbe
mov
push
sarb
imul
ret
add
loope
into
enter
nop
dec
in
test
mov
push
and
fdivrl
scas
scas
mov
cmc
imul
jp
fists
cmp
jecxz
pushf
adc
sub
sub
sbb
jge
or
jne
mov
add
das
cmp
inc
lret
jle
popf
mov
mov
or
pusha
cmp
or
in
add
daa
dec
sub
jno
mov
cwtl
aam
into
shrl
lret
push
mov
ret
aad
dec
and
aas
das
hlt
mov
adc
faddl
ret
mov
std
outsl
mov
nop
sarl
pop
ss
mov
xlat
rclb
pop
sub
cwtl
popa
mov
ja
cwtd
loopne
cwtl
xchg
or
xor
fbld
subb
sub
int
inc
dec
inc
iret
sbb
xlat
mov
pushf
dec
decl
and
test
divb
add
test
mov
mov
repz
mov
loop
outsb
nop
sub
mov
add
cmc
adc
pop
mov
aaa
mov
das
shrb
mov
mov
dec
jb
mov
fcoms
pop
cmp
mov
xchg
test
push
jge
fldt
mov
repnz
mov
push
lahf
push
les
xchg
cli
push
mov
adc
fwait
cmpsb
add
add
icebp
mov
mov
xchg
pop
sbb
jg
popa
pop
push
xchg
add
stc
mov
and
cltd
xor
ds
jmp
leave
aad
adc
repnz
pop
int3
lcall
div
sbb
push
or
jns
push
mov
mov
jnp
mov
aas
add
pop
and
cmp
inc
jge
subl
jle
xchg
xchg
dec
icebp
pop
fs
jb
aad
cmpsb
ret
xor
enter
mov
mov
outsl
repz
xor
rolb
imul
or
lods
fs
mov
or
pop
push
xchg
pop
rolb
hlt
mov
xor
jns
mov
add
insb
pop
mov
jp
adc
jl
dec
and
xor
ret
mov
and
mov
fisttpll
out
add
xchg
dec
sub
dec
mov
pop
or
lcall
dec
subb
pop
sarb
fimull
div
mov
test
mov
stos
sarl
push
mov
loope
push
cmpsb
dec
out
in
mov
push
push
shl
sbb
sbb
daa
dec
lcall
out
dec
inc
mov
sub
lock
aam
int3
out
lock
xchg
xor
dec
jne
clc
mov
dec
mov
sbb
stos
add
outsb
or
mov
add
jmp
pop
jbe
loope
jne
jo
movsb
loop
mov
inc
add
out
outsb
jne
idiv
std
and
dec
imul
insb
aad
cmp
fcmove
out
pop
ss
xchg
test
jnp
out
mov
cmc
mov
ret
jle
mov
mov
mov
test
pusha
xchg
xor
aad
je
adc
cs
xchg
jbe
inc
ret
cmpsl
push
stc
cmp
ja
pop
adc
fs
cmp
gs
inc
sbb
cmp
dec
stc
push
addb
fistpll
fcomps
stc
pusha
imull
ret
cmp
pop
out
test
test
or
jmp
jo
mov
xor
test
or
xor
and
rclb
shr
and
loope
in
push
mov
les
scas
push
mov
push
xor
inc
or
xchg
fcoml
jns
mov
mov
inc
or
sbb
and
mov
arpl
fdivrs
div
xor
iret
fcomps
jo
xchg
xchg
pop
mov
je
int
cmp
gs
scas
sbb
sub
mov
mov
lods
mov
in
add
xchg
sub
xor
cmp
lret
mov
dec
push
jne
mov
xchg
lds
and
jle
outsb
xchg
div
aam
loope
test
push
rcrl
cmpsb
aas
add
adc
mov
lret
jmp
and
pop
int
daa
inc
inc
and
xor
cmpsb
in
push
cli
cmp
add
lret
lods
lods
imul
test
dec
pmaddwd
stc
lret
stc
insl
stos
cvtdq2ps
ljmp
push
leave
jmp
scas
xchg
insb
test
rol
jmp
dec
xor
insl
xchg
jb
mov
outsw
xchg
adc
pop
ja
pop
mov
scas
fadds
fstl
fstpt
sti
leave
and
rolb
stos
loopne
inc
push
fistps
mov
cmc
in
shrb
push
out
pop
data16
call
scas
sub
cmp
add
push
mov
mov
xchg
fcmovu
sub
add
in
mov
lock
dec
popa
shl
adc
jp
adc
scas
dec
dec
pop
xor
into
inc
mov
test
imul
cmpsb
imul
or
shrl
rorl
flds
pushf
xor
fstpt
scas
cmp
ja
jbe
shlb
leave
shrb
mov
add
lods
cmp
mov
mov
push
mov
jp
cmp
jno
cmp
hlt
cmpl
outsb
aad
icebp
shrl
fcoml
inc
insb
push
and
int3
rcll
jbe
clc
les
jae
add
stos
push
in
in
sbb
lahf
clc
mov
sub
fs
aam
das
cli
aas
inc
out
loopne
dec
xor
test
jge
pop
xor
mov
mov
mov
and
int3
mov
arpl
in
orb
mov
cmc
ss
push
mov
mov
or
daa
lds
dec
and
movsl
dec
jmp
and
aad
fcmovu
mov
add
jmp
imul
sub
mov
ss
test
data16
inc
inc
pop
jg
inc
push
mov
repnz
in
lret
mov
data16
aad
sti
test
cwtl
stc
and
scas
xchg
adc
cld
inc
dec
fdivrl
inc
movsb
fisttpl
add
jp
cmc
sbb
mov
shrl
mov
or
push
xor
and
outsb
sub
sbb
lea
scas
popa
test
push
mov
je
inc
insb
fnsave
push
xlat
in
or
mov
into
or
inc
ret
mov
lods
mov
mov
cmp
mov
js
shl
push
inc
jbe
das
lret
mov
mov
xchg
push
js
les
xchg
pop
mov
lret
rcrb
pop
jo
sbb
ja
pop
pop
call
sbb
mov
or
aam
lods
loopne
add
in
dec
call
cmpsb
cltd
inc
ss
mov
cld
mov
ret
xor
data16
ret
mov
pop
aam
mov
in
sub
addb
jl
xchg
adc
rorl
add
adc
mov
dec
xchg
cwtl
inc
loop
stos
jne
push
out
and
decl
lret
mov
ds
imul
push
dec
cmc
or
ljmp
cmpl
push
xor
mov
sbb
hlt
stc
imul
push
xchg
or
scas
jmp
jb
push
xchg
rcrl
decl
jge
xchg
adc
xchg
inc
pop
and
outsb
adc
inc
leave
insl
fcmovu
sbbb
sbb
paddusw
loope
mov
cltd
pop
dec
popf
repnz
and
in
jl
or
mov
repz
popa
test
pop
adc
js
jl
mov
adc
addr16
cld
mov
hlt
aad
movsl
xor
int
jl
push
int
and
xor
cltd
xchg
sub
daa
cmpsb
lea
pop
cmpsb
in
sti
sub
out
cld
jne
cli
mov
in
pop
adc
out
insl
icebp
jmp
xor
inc
outsb
push
mov
mov
xlat
cmp
or
push
dec
insl
cwtl
jp
in
mov
fdiv
int3
mov
mov
loopne
mov
mov
xchg
sbb
xchg
mov
xor
test
xchg
and
push
pop
je
cmc
dec
repz
in
xchg
out
test
jg
imul
sti
xchg
adc
xchg
test
sbb
aas
into
ja
stos
lret
in
inc
repnz
lcall
mov
mov
shlb
adc
imull
cld
mov
subb
pushf
test
into
and
test
cwtl
xchg
xor
mov
pop
xor
in
ss
mov
ficoml
sti
stos
push
pop
pop
mov
pop
test
stos
inc
mov
dec
data16
aad
jo
out
cmp
mov
cld
mov
dec
out
xchg
sbb
movl
lea
cmpsl
add
mov
push
mov
mov
int
sub
lahf
pop
scas
aaa
cmpsl
gs
call
push
data16
cmp
pop
mov
stos
xor
loop
push
ret
rorl
sarl
mov
pop
mov
inc
imull
dec
sbb
icebp
fisubs
jbe
adc
mov
xor
lret
aas
jb
inc
movsb
and
call
mov
icebp
mov
shll
cmp
add
data16
pop
xchg
scas
push
mov
mov
adc
xchg
dec
or
push
mov
loopne
add
jmp
lahf
pusha
stos
fisttpll
test
sbbb
and
jbe
movsl
leave
or
out
cmc
push
push
std
cmp
xchg
xor
cwtl
popf
loope
dec
outsl
add
test
mov
cmpsl
cmp
xor
inc
dec
ds
popf
subl
jne
lret
into
stc
mov
mov
adc
sub
pop
cmpsl
aas
pop
push
addr16
outsb
xor
clc
test
jl
ret
adc
imul
mov
scas
cmp
jmp
jne
mov
push
sub
or
test
pop
sub
sub
dec
inc
jae
pop
inc
xchg
stos
add
add
mov
leave
xorl
stc
loopne
ja
sbb
inc
mov
imul
mov
and
scas
mov
mov
sub
arpl
sahf
cmp
and
jo
lods
mov
andnps
xor
xorb
out
inc
mov
jne
clc
jae
packssdw
add
stc
call
and
jo
in
jmp
xor
ja
test
xchg
es
adcl
jae
xor
fsubs
jle
test
xor
cmp
das
mov
repz
jle
mov
pop
fstpt
sub
es
clc
mov
sub
int3
push
js
cmp
inc
faddl
cwtl
repnz
sub
push
fstp
movsl
cmp
cmp
idivl
xchg
aam
sub
insb
outsl
std
je
add
pop
push
scas
lods
mov
mov
rorl
in
mov
lret
or
pop
sbb
push
jg
jge
sbb
pop
sbb
dec
call
sub
in
inc
cmc
adc
outsl
jge
repz
leave
push
xchg
push
rol
jp
dec
sub
mov
jo
sahf
pop
fisubrs
les
cs
sbb
fcmovbe
popa
mov
enter
push
jns
call
cmpb
xchg
inc
mov
inc
cli
push
or
cmp
repnz
rcl
pop
lcall
pop
inc
xchg
les
outsb
mov
sub
mov
popf
jae
fmuls
mov
push
mov
fistl
int
insb
test
sbb
cli
lock
or
mov
icebp
and
sub
rol
sarl
data16
push
aaa
ficoml
cwtl
fiadds
imul
lahf
mov
call
add
out
lds
mov
xlat
loop
movsb
jl
xor
in
ss
jnp
hlt
inc
mov
fcomps
clc
fs
repnz
stos
mov
nop
add
hlt
dec
or
mov
push
xchg
xor
loopne
lods
xlat
nop
pop
lret
cmp
cmpsb
sbb
mov
gs
shll
fwait
sbb
xor
sub
or
std
inc
addr16
movb
mov
mov
push
push
inc
fmul
sub
pop
lahf
negl
mov
inc
int3
add
jle
sub
inc
ret
pop
cwtd
mov
insl
and
popa
cmp
xor
xor
shll
add
add
lods
push
repz
pop
and
or
cmpsl
mov
js
jp
add
data16
ljmp
mov
in
mov
adc
add
push
sub
fisubl
lret
cmp
mov
es
ljmp
push
ljmp
cwtl
and
sbb
orl
sbb
lcall
mov
aad
sub
stc
fstpl
or
addb
mov
mov
or
xchg
dec
pop
mov
adc
jae
pushf
jb
sbb
sahf
lret
sti
in
js
gs
cmp
xorl
flds
cmp
adc
push
fisubs
mov
popf
push
sub
out
cs
cli
aas
sbb
out
inc
dec
adc
mov
add
push
pop
xchg
js
push
xor
xlat
adc
hlt
lahf
dec
mov
cmp
push
jmp
dec
nop
jl
pop
movsb
jle
sub
lock
ljmp
mov
movsb
sub
xlat
and
adc
or
pop
out
daa
mov
test
lods
add
clc
xchg
xor
lock
jg
mov
cmp
outsb
ljmp
repnz
icebp
mov
inc
add
mov
lds
dec
sub
mov
pop
sub
ds
adc
push
mov
inc
loope
or
pop
stc
push
sbb
loop
loop
cmpsl
pop
mov
xor
cli
adc
jle
xchg
push
inc
inc
cld
xchg
inc
mov
outsb
mov
repnz
lds
mov
bound
jae
out
repz
incb
jmp
adc
or
leave
lcall
gs
sub
dec
inc
inc
loop
scas
or
sub
mov
int3
pop
mov
ret
daa
push
neg
jmp
repnz
and
pop
push
mov
mov
inc
xor
sti
adcl
adc
test
pop
or
rcr
fimuls
cli
outsb
les
and
and
adc
adc
std
pop
mov
inc
dec
pusha
addl
and
out
push
mov
push
add
lea
lds
xor
push
sbb
ret
arpl
aad
dec
fnstsw
pop
cmc
mov
jb
ljmp
add
in
xor
mov
push
cs
aad
imul
loope
add
jmp
xchg
pop
sbb
mov
lret
mov
call
dec
inc
cmp
icebp
xchg
insb
push
fs
loopne
jmp
mov
out
cmp
ja
pop
mov
loope
sbb
sbb
daa
lret
push
mov
jmp
add
push
in
hlt
loop
adcl
inc
hlt
lds
push
icebp
and
movsl
mov
pop
inc
scas
aam
mov
inc
test
xchg
mov
scas
xchg
mov
cmp
sbb
dec
inc
push
jae
xor
jl
and
dec
xchg
add
and
roll
cmp
mov
dec
popa
cmp
push
fildll
pusha
mov
movhps
decb
mov
mov
scas
push
lahf
pop
jns
inc
test
stos
repnz
mov
fsub
push
test
dec
sbb
rolb
daa
push
mov
shlb
inc
je
adc
mov
or
cmc
into
cld
data16
jae
xor
in
cmp
lcall
mov
iret
fwait
jp
mov
fnstenv
lcall
das
mov
loopne
xchg
in
sbb
dec
les
jbe
sub
fcoml
ret
jbe
and
pop
in
mov
sbb
jmp
push
mov
cmp
cltd
mov
adc
ret
xor
xchg
call
cmp
mov
pop
and
push
pop
push
push
mov
pushf
lcall
js
mov
mov
lret
inc
imul
mov
ja
push
inc
add
lret
mov
sbb
dec
inc
sbb
lods
orb
ja
cld
push
xlat
arpl
add
jne
lahf
mov
repnz
sbb
push
enter
sub
jmp
inc
or
negb
mov
data16
mov
out
cmp
push
nop
mov
push
jb
cmp
roll
ljmp
fnstenv
cmpsl
or
xor
cld
cmp
rcl
outsl
mov
xchg
xor
cs
lret
push
mov
test
mov
loopne
add
les
cwtl
test
repnz
lock
push
cmp
mov
cmc
xchg
out
loopne
sarb
ja
mov
stos
jns
pop
fisttps
sahf
jno
push
pusha
inc
mov
sub
ds
in
push
and
ss
out
xor
test
in
cld
jmp
out
or
addr16
cltd
ss
mov
stc
lea
mov
cli
js
ret
cmp
jno
aaa
or
movsl
jnp
adc
pop
jo
inc
push
fidivrs
into
xor
fs
adc
inc
int3
mov
pop
jo
dec
clc
add
lods
test
imul
cmc
mov
int
jo
pop
mov
cmpsb
xor
or
inc
sub
jge
lods
adc
jb
lock
sub
ljmp
push
push
jno
pop
adc
and
stos
insb
gs
push
mov
jnp
push
aad
inc
and
fs
hlt
adc
addr16
cld
jmp
dec
sbb
add
fcoml
daa
test
jl
dec
out
into
and
imul
imul
cmpl
stos
jmp
dec
loopne
sbb
xlat
clc
add
sti
mov
cmp
mov
cmp
roll
fdivl
pushf
int
shll
cmpsl
into
rcr
push
fsubl
int
outsb
mov
xchg
bound
aaa
sub
jae
int
add
jp
mov
mov
push
sbb
andb
cmp
mov
in
and
and
fsubrs
or
bnd
push
fldenv
jae
popf
int3
mov
lcall
xchg
pop
cltd
lahf
adc
cmp
bound
xor
adc
cmp
bnd
lea
arpl
call
xor
shlb
roll
js
or
mov
cli
aad
cltd
icebp
lock
jecxz
mov
vrcpss
xchg
mov
sbb
push
into
lds
and
aas
mov
mov
inc
push
push
leave
cmpsb
xchg
stos
sub
xchg
jns
and
xor
aaa
fistl
push
fwait
add
xor
sbb
mov
inc
and
ss
cmp
in
pop
mov
mov
xchg
sbb
push
popa
sbb
sbb
dec
push
cmpsl
sbb
jl
dec
shlb
jp
imul
fucom
icebp
push
movsb
ljmp
or
add
lock
pop
lcall
adc
cmpsb
hlt
cmp
das
jmp
sahf
mov
shlb
dec
in
sbb
adc
inc
out
lahf
pop
mov
nop
mov
pop
iret
mov
lock
cmp
jl
outsl
out
ror
insb
out
testb
sbb
xchg
adc
ficoml
pop
in
mov
out
scas
repz
cmpsb
xchg
push
mov
sti
mov
test
jns
lea
cmc
mov
sbb
mov
dec
lcall
xlat
dec
jp
dec
cmpsb
sti
dec
repz
icebp
scas
lds
add
cmc
sti
fldt
add
dec
xchg
fildll
outsb
pop
mov
lret
cmp
mov
or
in
sbb
dec
inc
push
aad
andl
dec
addb
not
pop
or
outsl
outsl
stos
cld
mov
jg
leave
xchg
in
jg
packssdw
loop
inc
mov
subl
mov
push
fisubl
or
js
sub
out
pop
jae
in
lock
xor
incb
imul
shrl
lea
lods
pusha
xor
pop
hlt
ja
sub
mov
pop
jae
and
pop
lahf
inc
aas
or
jne
sbb
cmp
leave
ss
int
jp
out
out
xchg
xor
test
inc
xchg
or
mov
repnz
imul
xor
insl
in
ja
xchg
xchg
mov
xchg
adc
sahf
mov
jl
mov
xor
iret
mov
dec
sub
xor
or
insb
jge
jne
aad
ret
or
cmp
or
add
pop
in
hlt
mov
jg
adc
insl
ja
cwtl
adc
test
xchg
add
inc
push
aas
out
leave
jnp
jns
lea
pop
pusha
push
xchg
sbb
in
clc
inc
outsl
add
cmpsb
sub
xor
stos
cmp
int
ljmp
popa
repz
stos
inc
js
rcrb
fcomp
fs
into
cli
jnp
aas
adc
xchg
dec
cmp
and
or
addb
in
jmp
xor
js
add
leave
xchg
xchg
int
mov
mov
lock
add
push
ret
adc
test
je
int
in
sbb
dec
stc
addb
xchg
divb
mov
jae
aaa
sub
ja
in
loop
push
dec
pop
arpl
push
testb
mov
push
adc
aaa
inc
fs
adc
mov
xchg
int3
psraw
mov
movsb
push
les
dec
mov
sahf
or
hlt
test
jp
push
adcb
clc
cs
add
xor
sarb
aaa
lret
dec
xchg
cs
dec
loopne
sti
leave
out
dec
fcomps
rolb
sbb
out
cmp
push
sahf
sti
movsb
inc
jb
adc
push
xchg
xlat
mov
cwtl
mov
and
call
repnz
or
lcall
in
pop
sub
dec
callw
dec
and
lods
dec
iret
ret
das
xor
inc
sub
cmp
daa
gs
dec
dec
out
sub
lcall
or
arpl
aam
pop
cmpsl
int
cmp
cmp
push
add
fildll
sub
sub
shrl
out
es
pop
push
in
scas
pop
pop
xchg
mov
adc
out
sbb
sti
sub
lds
movsb
dec
stc
repnz
pop
push
dec
xchg
inc
add
adc
pushl
pop
cltd
add
xor
lds
sub
add
in
lods
mov
add
or
ret
pop
sub
enter
xor
std
clc
inc
mov
xchg
pop
dec
call
je
loope
pop
adc
add
and
add
sbb
xchg
out
out
imul
jl
int
inc
fs
nop
rorb
aad
in
cld
mov
lret
mov
les
mov
clc
dec
push
mov
rorb
and
aas
fs
jge
je
pop
ficoms
jae
pop
hlt
stc
inc
into
sbbl
pop
imul
sbb
mov
ds
jl
sbb
and
xchg
hlt
push
mov
push
xchg
mov
clc
cs
mov
jge
mov
lock
mov
cltd
or
fnstsw
xchg
push
mov
pop
mov
rol
xchg
and
pop
icebp
dec
mov
or
and
cmp
sbbb
aad
sub
jl
call
frstor
add
dec
roll
pop
xchg
or
test
fadds
lea
cmpsb
xchg
xlat
js
inc
jnp
pop
aaa
jns
outsl
xchg
or
xchg
test
aam
sbb
cmpsb
das
cwtd
mov
enter
sbb
xor
push
out
jae
into
test
jae
inc
out
inc
cmc
mov
xor
add
call
pop
movsb
push
pop
xor
add
addr16
ror
fistps
fs
or
ljmp
icebp
les
sub
sub
sbb
push
adc
lar
fwait
jmp
mov
push
push
xchg
xchg
repnz
je
jb
mov
int
sbb
xor
loope
inc
arpl
or
shlb
icebp
mov
fnsave
popf
aad
push
aad
dec
cmpsb
sub
adc
stos
or
mov
adcb
loop
pop
xor
sarl
mov
inc
add
pop
add
pop
ljmp
pop
mov
fildl
aam
xchg
out
xchg
push
inc
repnz
xchg
fidivl
sbb
jecxz
out
mov
cmc
stos
out
loope
bound
sti
inc
mov
gs
add
je
inc
ss
leave
fnstenv
push
clc
xor
inc
ss
xchg
push
push
mov
or
stc
xchg
inc
test
cmpl
jg
sub
cmp
flds
sub
shrb
jo
adc
cwtl
cli
cmp
dec
jmp
push
mov
or
and
sbb
cmpsb
ja
or
cmc
test
xor
or
out
dec
and
sbb
xor
xchg
sub
mov
mov
pop
dec
jnp
jl
test
xchg
mov
cmp
sahf
orb
inc
jecxz
cmp
jo
mov
notl
or
add
es
push
sahf
lods
mov
pop
lcall
popa
cli
loopne
ret
test
mov
movsl
test
icebp
inc
jmp
clc
xchg
jo
iret
filds
xchg
push
shrb
aaa
jl
inc
jns
cmp
ja
sbb
addr16
lods
pushf
jle
cmp
push
loop
shr
mov
cmp
jne
add
push
in
fldl
inc
repz
add
or
addr16
push
mull
xor
scas
push
lret
adc
add
or
xor
xor
iret
aad
dec
cli
sbb
into
stos
clc
push
jle
ficomps
popa
jb,pn
stos
das
mov
mov
enter
enter
adc
sbb
idivl
sbb
sbb
imul
loop
sbb
pop
cmpl
ljmp
scas
mov
xchg
into
inc
test
pushf
adc
in
daa
cs
sbb
fmull
inc
push
cmpsl
sub
std
jmp
and
cmovno
and
popf
rcll
push
jl
mov
push
mov
mov
mov
push
jno
mov
addl
lods
mov
icebp
cmpsb
hlt
ret
jl
and
jnp
outsl
mov
pop
pop
outsl
pop
dec
stc
mov
cmp
xchg
sub
cmp
push
dec
stos
mov
cmpsb
out
inc
sub
cltd
outsl
fisubl
pop
mov
inc
test
sub
inc
loope
jmp
add
xchg
dec
xlat
mov
js
mov
lcall
pushl
lock
or
xor
ret
lods
mov
js
loopne
icebp
sub
xchg
ret
mov
sahf
xor
mov
pop
cltd
fs
pushf
inc
insl
stos
movsb
mov
or
sub
int3
lea
cmp
mov
outsb
pop
rorb
lret
inc
or
shlb
sub
mov
mov
adc
scas
xchg
inc
out
enter
enter
cmp
loopne
cmp
cwtl
xorl
jmp
cmp
fwait
out
xchg
lock
lcall
movsl
mov
test
scas
ss
mov
mov
jns
frstor
sbb
test
es
push
icebp
pop
cmp
xor
ljmp
loop
xchg
outsl
dec
out
aam
mov
and
js
shll
dec
ffree
rclb
jp
jns
test
xchg
cmp
maxps
jae
cmp
push
aas
jno
or
ret
push
sbb
pusha
xorl
scas
sbb
shr
faddl
add
mov
in
pop
sti
aad
ret
lock
iret
repnz
mov
push
add
fiadds
jae
sbb
mov
xor
pop
lahf
sbb
mov
push
outsb
stc
icebp
scas
test
push
xor
sbb
jbe
cmp
test
mov
adc
lods
push
push
fs
lock
sbb
sub
nop
sub
imull
cs
and
jne
shlb
ret
scas
jnp
xor
and
push
and
mov
xor
mov
nop
xorb
aad
in
inc
pushl
aas
sti
pop
jg
mov
jb
std
cld
imul
mov
cmpsl
mov
pop
adc
mov
push
xor
mov
int3
aam
shlb
mov
testb
cmp
cmp
mov
lods
mov
ss
int
jmp
sbb
push
addr16
xchg
lret
sub
imul
sahf
dec
rcl
insl
push
cmpsb
pop
dec
jbe
pop
sub
add
fidivs
cmpsl
lock
stos
cmp
scas
jl
lds
outsb
sbb
jecxz
shrb
sbb
pop
sub
pop
sbb
and
popa
ja
xchg
sbb
shlb
ret
push
lea
loope
jmp
xor
sub
mov
addl
stos
cmp
xor
cmc
leave
out
xchg
inc
test
pop
shl
cmpsb
scas
jmp
fnstsw
sub
loopne
mov
xor
popf
push
adcb
adc
and
test
loopne
insb
pop
jb
jb
divb
or
fcmovu
cltd
pop
and
bound
xor
popf
xor
stos
aam
bound
mov
adc
outsb
or
pop
inc
iret
push
iret
mov
add
dec
or
out
sbb
pop
inc
jns
je
pusha
sbbl
push
mov
and
hlt
les
push
inc
loop
popw
loop
or
rol
sub
pop
jl
push
xchg
fs
dec
jo
pop
insl
mov
mov
std
test
outsl
lock
imul
scas
aam
jle
stc
imul
xor
mov
adc
jbe
add
fidivs
sbb
lea
fdivrs
push
cs
dec
daa
add
or
daa
loopne
jae
mov
bound
add
ret
in
fwait
jmp
mov
loope
pop
mov
arpl
addr16
sub
repz
and
cmp
cltd
pop
sub
std
popf
cmp
mov
cli
mov
insl
int
xchg
in
aam
into
iret
scas
sub
inc
test
xor
repnz
stc
inc
adc
inc
sbb
test
pop
push
xor
out
cmp
mov
xchg
aam
das
xor
mov
addb
dec
movsb
cld
push
hlt
ret
movsl
fcompl
mov
sub
je
cli
mov
sbb
mov
stc
into
jnp
add
jecxz
daa
inc
jb
cli
push
pop
pop
lods
xchg
enter
and
xor
push
fcompl
test
push
jecxz
cmpsl
cmpsl
or
inc
popf
repz
push
or
add
xchg
stos
bound
xor
dec
sub
xor
adc
sub
scas
push
mov
cmp
cmp
fdivrs
mov
mov
xor
pop
mov
lds
adc
sti
ss
mov
stos
mov
jae
mov
loop
ret
mov
fbld
pushf
int
outsb
jno
or
mov
shl
les
jb
daa
xor
xor
call
mov
ret
push
push
mov
sbb
mov
sbbl
jns
adc
push
or
sub
std
fptan
push
or
cmp
int
adc
mov
inc
jo
mov
pop
cmp
pop
dec
lea
test
cmp
jecxz
fidivl
mov
test
inc
mov
call
insb
pop
sahf
sub
pop
std
dec
rcrb
push
shrb
fcompl
aad
scas
sbb
sub
xchg
mov
ret
out
out
push
jp
pop
cld
jae
mov
sub
int
std
cld
lahf
add
inc
in
sub
jecxz
dec
push
mov
andl
in
insb
insb
shrb
out
and
add
cmc
inc
int
lcall
mov
inc
jecxz
std
and
push
add
xor
call
sub
call
mov
jg
sbbb
mulb
cmp
dec
stc
fwait
es
fiadds
pop
jnp
mov
ficoml
jns
lods
outsb
add
adc
pop
xor
lds
cli
shlb
data16
ret
js
cltd
dec
mov
adc
dec
cs
out
sub
fildl
int3
inc
das
std
ret
jle
mov
inc
mov
dec
fmull
cmc
lahf
pop
mov
pop
dec
f2xm1
sub
aad
mov
out
sbb
leave
outsb
mov
fcomi
xchg
push
add
cmp
ja
clc
scas
jg
jmp
jle
ljmp
xor
arpl
xchg
dec
insl
insl
push
hlt
sbb
dec
and
mov
jp
adc
cld
jecxz
or
jns
sub
popa
popf
sbb
and
insl
roll
pop
sub
inc
adc
ja
out
stos
xor
shlb
push
xorl
mov
inc
jne
mov
imul
insl
inc
pusha
lcall
inc
xor
repnz
dec
outsl
inc
push
pop
cli
arpl
cld
fucomip
ret
arpl
rorl
add
xchg
inc
pop
cmp
movsl
adc
add
inc
jge
xor
dec
cmp
cmp
in
lods
lds
push
mov
popa
pop
add
sti
pop
stc
cltd
icebp
icebp
cli
xor
insl
cli
add
loope
cmp
out
or
jne
int
and
push
cmp
push
loopne
adc
nop
or
inc
dec
fsub
lods
aaa
or
stos
sub
add
mov
jecxz
xor
pop
lods
inc
mov
push
pop
lcall
inc
adc
dec
and
daa
cwtl
xor
aas
jge
popa
pusha
and
cmp
popf
adc
lret
cmp
cmp
push
adc
fstpt
push
fnsave
sub
stos
xor
hlt
sub
in
mov
sbb
std
cs
adc
mov
dec
aam
cmc
mov
pop
mov
sti
pop
mov
aad
stos
fwait
add
xor
fmuls
cmp
dec
std
mov
lahf
xchg
out
arpl
xor
ret
rcll
sub
call
sarb
jle
xchg
cli
out
add
inc
ljmp
cmp
inc
je
fwait
add
xchg
jno
dec
lret
or
cmp
xchg
dec
inc
pop
stos
push
sbb
testb
cli
add
dec
fcmovnu
mov
and
pop
mov
pushf
cmp
sahf
mov
cmp
adc
orl
inc
imul
push
sbb
arpl
and
pop
pushf
xchg
jmp
fistps
fs
fnstsw
addl
mov
in
pop
push
adc
aad
mov
out
mov
mov
cwtl
cmp
pop
cwtl
add
out
or
rcrb
in
es
jb
mov
mov
dec
fs
test
mov
lcall
or
in
cmp
dec
lds
jge
mov
gs
ljmp
dec
mov
xchg
movsl
inc
dec
movsl
andb
inc
lods
shlb
jle
int
enter
dec
ljmp
jo
out
subb
loop
out
xor
adc
xchg
sahf
jnp
lret
add
fld
xor
mov
add
pop
fisttpll
enter
cltd
fst
loope
rclb
fnstenv
add
aam
js
jo
xor
cld
cmp
test
push
sbb
push
add
xor
loopne
lods
popf
xor
pop
int
inc
pop
cmp
fucomp
cli
ficoms
dec
xchg
lret
jg
mov
pusha
jne
jg
shl
scas
push
insb
lahf
xchg
adc
add
mov
sbb
and
pop
mov
push
out
adc
popf
and
mov
leave
pushl
and
push
xor
mov
fnstcw
in
sbb
mov
aaa
nop
roll
data16
pop
cli
inc
mov
xchg
fwait
inc
jp
sbb
pop
scas
jl
outsb
dec
xchg
addl
dec
sbb
imul
outsb
icebp
inc
ss
pusha
lock
jno
dec
pop
mov
xor
lret
rorb
loope
rcll
leave
in
jl
lock
int
aam
mov
aaa
dec
gs
mov
jmp
jge
push
std
push
jg
mov
aam
daa
mov
bound
jb
add
daa
test
pusha
xor
xchg
daa
es
dec
daa
cli
push
mov
stos
inc
movsb
movsl
nop
je
xchg
push
movhps
cmc
clc
mov
scas
xchg
push
popf
cmc
xchg
xor
fs
xchg
push
or
and
cmc
pop
cli
mov
dec
sbb
jge
gs
jge
shl
shl
movb
pop
out
mov
push
out
ljmp
add
mov
int3
mov
test
lret
aam
insl
inc
dec
lret
cmp
aad
pop
lcall
mov
aam
cmp
sbb
xor
mov
sbb
and
aaa
adc
subl
xor
xchg
pop
and
pop
sbb
scas
or
inc
in
push
fcomip
jmp
aad
cmp
xchg
push
roll
imul
jp
xor
or
xor
xlat
inc
pop
pop
lea
fsubrl
mov
lods
ret
shl
pop
or
clc
jecxz
push
test
shlb
pop
jnp
jge
imul
fildll
xlat
mov
or
aas
imul
pushf
pop
push
sahf
lret
mov
add
or
dec
push
sbbl
popa
fisubrs
mov
lahf
ds
mov
add
dec
std
push
jp
in
or
mov
in
mov
imul
cld
mov
out
xor
add
scas
sub
push
jmp
arpl
out
add
stos
out
push
sub
dec
add
sub
ds
das
inc
lods
outsl
jno
decb
loope
push
int
lods
out
jo
cld
std
outsb
adc
jns
cli
add
out
adc
iret
xor
dec
popf
insl
mov
pop
inc
out
ljmp
fs
hlt
sahf
push
adc
loop
mov
mov
popf
ret
repnz
imul
popa
sbb
mov
add
in
mov
ja
bound
fcmovnu
les
adc
jecxz
mov
aad
out
xchg
ret
pop
popl
sub
push
xchg
mov
add
xchg
hlt
popa
loope
fistpl
test
lcall
mov
dec
das
cmpsb
fwait
testl
jno
outsb
daa
add
popa
popa
movb
clc
jo
sahf
fstpl
ljmp
push
pop
mov
pop
lcall
mov
mov
sbb
shll
push
adc
clc
ss
cmp
cmpsb
xchg
sbb
mov
roll
adc
pushf
xor
xor
stc
aas
lock
incb
insb
fsubrs
mov
das
xchg
insb
stos
sahf
cmpsb
iret
mov
xchg
loop
add
hlt
xor
push
mov
lahf
sbb
mov
leave
adc
xlat
xor
in
adc
mov
add
rcl
ficompl
aas
mov
movsl
daa
sti
mov
jp
mov
inc
imul
mov
xchg
cmp
dec
jge
ss
xlat
loopne
call
mov
adc
mov
sbb
add
loope
push
mov
push
in
lods
rcr
jmp
sbb
mov
mov
push
fldt
js
and
cwtl
push
add
int3
adc
stos
adc
popa
lret
jno
jg
pop
sti
sbb
adc
add
ljmp
sqrtps
lret
xor
je
popf
leave
jb
ret
or
fdivp
ret
gs
cmpsl
into
insl
cwtl
subb
and
scas
add
addb
std
jb
stos
cmpsl
es
and
pop
outsl
push
or
lods
stc
or
outsb
out
and
gs
push
out
lahf
jmp
scas
add
push
adc
jge
jp
mov
popf
scas
iret
enter
xor
jns
test
sub
clc
in
cmpsb
or
popa
cmc
stos
or
fwait
int
sbb
sub
xchg
mov
stc
push
cmp
popf
xchg
jae
test
data16
sbb
out
daa
addr16
dec
mov
xchg
add
int3
leave
lret
addr16
aaa
cmp
test
push
icebp
fnstenv
sub
xlat
out
xlat
mov
dec
stos
adc
xchg
adc
jb
pop
mov
dec
fdivrl
push
scas
push
dec
add
push
lea
sub
adc
aam
inc
pop
adc
pushf
adc
dec
sbb
shll
mov
xor
push
adc
mov
or
addl
pop
fists
push
dec
and
xchg
xchg
pop
sub
insb
sub
arpl
sbbb
pop
pop
or
sbbb
call
fstpl
push
icebp
add
xor
int
fimuls
rorl
mov
adc
clc
rcrb
ja
in
das
jns
push
stos
sbb
std
jge
or
clc
movsl
in
jno
xlat
sbb
outsb
in
and
pop
jecxz
jg
lds
push
ficoml
jns
dec
mov
std
adc
out
cmp
jno
pusha
subb
push
mov
adc
xchg
rol
ret
insl
out
leave
gs
pop
addl
mov
stos
test
jge
lret
fwait
insl
xchg
mov
popa
mov
arpl
xlat
xor
aad
sub
sub
in
es
sbb
cs
pop
data16
adcl
data16
data16
cmpsl
mov
repnz
dec
inc
cs
mov
jecxz
push
mov
jl
imul
icebp
xor
test
jae
dec
inc
fwait
xor
movsl
cmpsl
jle
testl
xchg
xor
mov
or
stc
fdivl
jmp
sbb
leave
into
xchg
mov
cmp
stc
stc
sbb
dec
test
jp
adcl
push
jae
scas
roll
push
ret
mov
and
jno
hlt
pushf
jno
ljmp
sbb
fs
push
dec
rcll
sbb
jb
scas
jo
cmc
jo
iret
sub
inc
xor
or
jne
pop
jmp
push
jmp
cmpsl
jne
mov
in
shrl
push
test
push
adc
and
repnz
in
mov
lahf
dec
scas
outsb
xor
mov
sarb
loop
fstl
gs
jo
sub
fstpl
or
pop
jmp
repz
lock
jp
mov
arpl
jg
push
arpl
out
xlat
es
cmp
fisttps
push
jae
neg
mov
mov
push
adc
pusha
pop
dec
cmp
push
jo
jecxz
loope
dec
popa
push
sub
and
push
cmc
ret
xor
add
shr
cmpl
push
cmpsl
lds
inc
mov
sub
jno
mov
and
pop
dec
int
mov
cmpsb
and
mov
mov
sub
test
imul
loope
xchg
mov
mov
mov
inc
sbb
cs
cmp
inc
movsl
into
adc
sub
jo
mov
fildll
lret
or
adc
fs
or
rcll
pop
xchg
cmpsb
inc
xchg
outsl
je
mov
daa
mov
cs
subb
lret
mov
mov
mov
push
sbb
jno
mov
bound
lret
daa
in
sub
inc
fsubs
sub
in
les
daa
sbb
mov
mov
cmpsl
jle
iret
fwait
push
fsubl
push
cmp
stc
sbb
mov
dec
jle
and
add
lea
mov
xchg
repnz
jge
mov
pushf
mov
sbb
push
bound
xor
fcmovnb
adcl
lods
adc
cmp
daa
cwtl
push
fbld
and
cld
std
sub
pop
lods
jmp
xchg
jo
es
mov
pop
cltd
in
lock
dec
popa
out
fwait
hlt
scas
popf
sub
movsl
lock
mov
jge
inc
add
mov
inc
ja
pop
in
or
mov
fdivl
push
aam
mov
pop
es
xor
in
cmp
xlat
sbb
lret
flds
pop
mov
cmp
js
inc
clc
inc
sbb
cmp
imul
cmpsb
xchg
lods
cmp
push
cmp
push
xchg
or
xchg
test
pmulhuw
xlat
or
or
fwait
shlb
ljmp
adc
daa
bound
mov
popa
pop
and
xor
sbb
or
jae
xchg
add
mov
jne
mov
stos
jg
sbb
dec
std
mov
xchg
jmp
popa
inc
ja
sub
jl
pop
pop
cmp
cs
mov
xchg
inc
inc
sbb
les
pop
mov
fdiv
adc
jmp
aad
ret
adc
scas
scas
cmp
add
mov
push
mov
scas
xchg
dec
mov
adcl
jp
push
xchg
xor
mov
xorl
jno
jp
adc
dec
add
cs
mov
push
pop
aam
pop
int3
test
decb
jns
icebp
adcl
shl
mov
pop
mov
and
push
push
push
inc
add
mov
test
xchg
xor
rcl
cmp
jo
cltd
sub
sbbb
and
stc
incb
and
test
sub
pop
into
jo
les
repz
aam
jmp
aaa
mov
mov
pop
sbb
inc
imul
jno
daa
sbb
xchg
push
mov
addr16
mov
in
xor
jbe
orb
pop
push
out
and
xchg
mov
jp
push
scas
ljmp
ret
lret
into
and
or
xor
aam
xchg
mov
sbb
cltd
dec
aad
stos
test
or
sbb
ret
jp
mov
mov
enter
xor
and
mov
mov
insb
inc
cwtl
inc
outsb
push
or
mov
das
insl
or
xor
or
mov
repnz
in
jmpw
mov
add
lret
subl
cmc
pop
arpl
push
movq
cli
and
jge
or
popa
aam
cmc
cld
loope
push
cli
mov
out
mov
pusha
cmp
or
insl
xor
add
js
mov
cmc
xorb
or
lret
push
dec
mov
jmp
scas
out
inc
lds
or
mov
out
hlt
inc
push
jp
sub
sbb
flds
push
push
cltd
mov
gs
inc
loop
cld
mov
lret
and
daa
gs
xchg
test
sbb
jb
loop
adc
mov
fnsave
jmp
outsb
in
insl
idivl
sub
in
push
clc
push
mov
movsb
insl
cmc
pop
arpl
fldt
push
push
jbe
cmc
das
push
jecxz
dec
jg
popf
and
aam
lcall
fstl
add
shr
xlat
sbb
data16
mov
clc
popa
cmp
mov
and
inc
jmp
and
nop
xor
hlt
mov
ret
scas
xor
pop
mov
mov
inc
arpl
enter
add
mov
mov
sbb
pop
dec
sbb
pop
jge
shll
fdivl
pushf
add
movsb
xor
or
xchg
std
push
aas
mov
push
js
shrb
and
xor
jp
add
pop
or
ret
test
push
data16
inc
outsl
push
jo
jne
xchg
clc
popf
xchg
or
push
cmp
pop
cmp
cmc
pop
xor
stos
mov
mov
sbb
lret
or
mov
xor
mov
mov
or
fsubs
test
flds
ficoml
cs
jne
push
roll
lds
inc
or
pop
cld
push
loopne
in
js
add
stos
int
dec
enter
mov
ss
mov
cld
aaa
cmp
loop
xchg
dec
xor
mov
ret
jge
data16
push
sbb
mov
and
jge
stos
dec
daa
outsl
aas
mov
and
lret
ljmp
shr
push
mov
dec
add
jle
push
xor
mov
lods
xchg
jge
into
jmp
hlt
sti
enter
decl
inc
sbb
jl
mov
cs
add
mov
mov
xor
sahf
mov
mov
mov
pop
addb
cld
mov
dec
stos
push
and
or
sub
mov
or
add
mov
scas
aas
adc
ret
or
sbb
pop
cmpsb
mov
inc
inc
or
jle
mov
popa
pop
sub
or
cmpsb
and
cmc
adc
adc
ret
push
test
mov
insl
aas
leave
mov
ja
lock
sub
jns
push
out
enter
imul
es
mov
mov
test
out
jle
dec
nop
add
add
repz
pop
fdivs
adc
popa
or
ss
jne
push
sbb
repnz
mov
jae
push
mov
dec
mov
xchg
int
std
sahf
bnd
je
mov
jmp
cwtl
push
repz
dec
xchg
cmp
mov
std
mov
test
divb
lea
pushf
mov
fildl
out
mov
add
out
mov
js
sub
jne
ss
fs
out
adc
xor
inc
mov
pop
push
pop
and
imul
or
movsl
sahf
pop
into
dec
loopne
outsl
sbb
push
add
and
jmp
mov
test
mov
fisubrl
xchg
cmp
lret
pop
insb
js
je
nop
and
test
xchg
je
and
add
in
inc
dec
mov
inc
xor
movsb
test
lock
negb
inc
pop
loopne
or
jle
adc
mov
jg
daa
mov
pushf
cmp
fs
daa
loopne
and
aas
dec
mov
push
adc
xor
push
lea
loop
push
xchg
dec
nop
pop
dec
inc
mov
insl
inc
xor
mov
inc
sbb
je
mov
mov
dec
push
xor
sahf
xor
jo
loope,pt
out
xchg
mov
jo
jecxz
pop
add
adc
mov
fnstsw
shr
mov
xor
mov
cmp
dec
xchg
scas
lods
fsubs
adc
scas
movsb
fs
inc
pop
movsb
lret
fisubrs
jns
es
test
sarb
mov
iret
pop
insl
inc
or
push
rorb
mov
mov
cmpsl
scas
xor
inc
pop
dec
jo
cmp
push
imul
push
cmp
mov
mov
add
adc
jg
sarl
add
leave
inc
stos
andb
int3
dec
inc
jge
or
gs
xchg
pushl
mov
and
jbe
cmpsl
dec
mov
adc
xchg
ret
out
xor
jecxz
or
loopne
push
pop
addr16
and
push
xchg
pushf
rcr
mov
cli
xchg
dec
inc
jo
and
aam
xchg
loopne
fwait
mov
outsl
cwtl
pop
nop
dec
pop
dec
in
dec
cld
js
andl
mov
push
sbb
stos
mov
rclb
movsl
mov
imul
or
jecxz
cmp
or
push
icebp
imul
lcall
mov
xchg
or
in
inc
pop
mov
mov
dec
pop
divb
sahf
int3
sub
mov
ja
pop
scas
mov
lock
dec
lods
hlt
sti
mov
iret
aas
in
xlat
adc
ljmp
sub
push
fwait
lcall
jnp
aam
sub
pop
xor
rorl
push
cvtps2pi
in
test
mov
jae
cmc
clc
xchg
sub
scas
bound
dec
mov
xchg
sub
in
ret
aaa
fidivl
xchg
adc
arpl
jo
pop
mov
push
jle
inc
dec
mov
sub
sbb
inc
adc
popf
jmp
dec
arpl
push
mov
adc
mov
inc
or
and
shlb
orb
add
orb
sub
gs
jmp
inc
xor
push
mov
sbb
ljmp
sub
pop
or
out
add
sti
or
and
xchg
icebp
mov
jns
lds
sbbl
pop
std
or
mov
lods
loope
sub
inc
mov
mov
mov
dec
fadds
xchg
jne
in
mov
inc
sbb
sub
aam
sti
ja
out
add
mov
mov
push
mov
rolb
jle
shrb
mov
cmp
push
add
stos
sub
mov
sbb
aas
mov
push
aam
lea
and
mov
test
outsl
push
mov
jmp
add
in
ss
cltd
rolb
mov
int
jp
in
sub
ret
int
ret
cli
fmuls
pop
int
mov
sahf
mov
fisttpl
pop
roll
lock
lds
and
negb
jl
mov
pop
jp
mov
icebp
sub
popa
or
leave
fstps
inc
in
in
sub
xchg
jmp
test
mov
push
mov
xor
rorl
aam
iret
std
inc
test
inc
add
pushf
pop
push
fldenv
addr16
arpl
fldt
mov
sub
adc
mov
mov
out
or
jbe
je
movsb
call
js
sbb
jne
out
push
outsb
sbb
lock
mov
sbb
iret
dec
push
jne
push
xchg
cld
push
rolb
jne
jl
stos
cmp
mull
test
inc
movsl
adc
adc
lcall
jae
popf
insb
fidivrl
push
adc
movsl
das
mov
push
xchg
sub
aas
and
adc
in
push
frstor
mov
pop
imulb
or
js
gs
popf
fcoms
repnz
inc
push
xor
cmp
sub
scas
or
mov
cmp
mov
jmp
mov
inc
mov
or
sti
jp
fidivs
mov
scas
xchg
sbb
pushf
popa
push
xchg
sub
jecxz
xor
fisubs
cld
call
and
sub
mov
adc
pop
sbb
and
lret
rcll
push
in
adc
out
popa
cmp
push
jl
rclb
pop
xorb
mov
fistpl
jno
rcr
inc
popa
insl
xchg
icebp
xor
stos
loopne
jmp
pop
ret
mov
push
mov
subl
pop
cld
xor
dec
aaa
mov
insl
cmpsb
mov
or
mov
mov
adc
enter
imul
mov
repnz
jb
call
mov
cmp
cmp
and
xchg
sub
imul
pusha
push
and
jmp
pop
iret
nop
dec
lock
in
out
cmp
int
sbb
fldl
dec
gs
jp
mov
and
xlat
push
cmp
in
dec
jg
pop
mov
sub
sbb
aam
mov
xlat
xchg
or
pop
mov
enter
and
mov
dec
sti
hlt
mov
cwtl
xor
inc
xchg
mov
mov
push
inc
pushf
sub
and
in
inc
xor
stos
aaa
pop
pop
dec
and
or
add
divb
jecxz
inc
fldenv
push
adc
call
sbb
adc
hlt
dec
daa
sbb
cmc
jecxz
stos
jge
xor
inc
adc
sti
or
jecxz
jl
das
test
addr16
sbbl
test
inc
mov
aaa
jl
stc
pop
jle
daa
mov
add
add
cwtl
mov
fdiv
data16
loop
aas
dec
test
xlat
lods
call
xor
dec
and
xor
pop
outsl
sub
adc
test
movsb
inc
jbe
adc
mov
inc
lods
mov
sub
sub
pop
sbb
pop
sbb
aad
fwait
inc
lods
scas
cmpl
mov
idivl
sbb
jnp
xchg
pop
pop
movsl
lea
jne
cs
insl
rcr
cmp
and
popa
scas
rcr
pop
bound
pop
shl
fisttps
or
and
popa
sub
popf
adcb
sub
or
popl
scas
xor
mov
sbb
notl
enter
shrl
faddl
es
pop
mov
stc
aam
jecxz
mov
hlt
cli
loop
test
jae
inc
mov
leave
loopne
cmp
push
cmpsl
ss
fnop
cmp
or
sbb
pop
or
cmp
jno
test
jb
rcrl
icebp
stos
mov
pop
sbb
insb
add
data16
jb
xchg
roll
adc
cmp
cmp
les
sub
pop
mov
rol
xchg
or
mov
cmp
cmp
push
push
adc
add
fisubrs
int
and
inc
pop
aad
pop
xchg
add
nop
je
cmovg
jp
or
mov
hlt
addb
loope
mov
into
or
std
adc
fdiv
jbe
pop
imul
push
les
aaa
subl
pushf
repnz
mov
xor
in
push
pusha
sbb
sarl
or
shr
push
nopl
push
and
fnstenv
push
test
negl
test
add
in
push
or
rcll
pop
out
shll
lret
pop
sbb
mov
xchg
push
mov
subl
xor
in
out
or
jne
dec
cmp
mov
stos
mov
adc
push
adc
test
dec
leave
push
setg
inc
mov
xchg
mov
stc
adc
imul
shl
dec
xor
movsl
lret
push
aaa
in
xchg
rclb
add
or
arpl
push
or
and
fwait
std
sub
add
add
movsl
mov
imul
cmc
sahf
int3
addb
rcl
insl
pop
dec
pop
scas
out
jmp
and
test
lods
or
dec
lods
adcb
mov
add
pop
pop
push
mov
mov
add
pop
and
fistl
aaa
nop
ds
cli
or
out
insb
lds
outsl
jecxz
orb
sarl
cmpsl
mov
lret
out
jle
sub
dec
rcll
mov
sbb
dec
or
sti
add
iret
xchg
scas
mov
mov
pop
mov
and
lods
and
aad
cmp
sub
scas
loopne
inc
sbb
dec
add
clc
into
or
gs
test
add
test
andl
testl
test
mov
movsl
addl
movsb
addr16
xor
pusha
rorl
push
scas
es
lods
out
and
push
xor
mov
sub
xlat
push
cmpsb
xchg
mov
fs
and
ret
mov
test
bound
xlat
ja
cmp
test
in
add
xlat
jg
mov
add
mov
inc
add
mov
lret
int3
add
xor
out
inc
pop
adc
movsl
xchg
in
jge
js
push
movsb
cmp
sub
iret
mov
xchg
out
mov
or
enter
push
movsl
pop
cmp
out
xchg
mov
enter
neg
mov
adc
mov
fdivs
jne
xchg
ret
or
xchg
dec
cmp
repz
in
hlt
xlat
aam
loope
pop
arpl
push
sub
xchg
cmpsb
mov
and
cs
jo
sbb
and
xchg
cvtps2pi
adc
ja
lahf
cmp
test
push
dec
xchg
xchg
cmp
jno
lret
adcl
dec
jbe
dec
sbb
pop
sbb
add
cmp
mul
jnp
cwtl
pop
sarb
or
popf
dec
sbb
daa
cltd
shll
jp
mov
in
cli
fdivrl
jg
cmc
dec
mov
mov
xchg
inc
and
push
or
and
test
fstpl
int3
push
popf
sbbb
out
push
aad
icebp
jbe
adc
in
lret
cmp
xorl
cli
pop
jg
and
push
jnp
les
mov
jecxz
movsl
pop
cmp
or
bswap
call
nop
push
add
js
outsb
inc
mov
je
jb
rolb
sub
push
outsb
aas
sbb
mov
or
mov
outsb
lods
xor
inc
das
mov
xchg
sub
dec
mov
xor
add
jp
enter
outsb
hlt
xchg
aaa
dec
es
or
rcrl
jg
push
xor
outsl
fmul
cmp
xchg
cltd
jmp
lea
lret
or
cli
push
pop
ljmp
mov
fnstsw
add
pop
shr
and
ljmp
aas
stos
push
and
adc
lar
push
jb
dec
pop
inc
jecxz
mov
stos
in
add
pop
outsb
out
es
xchg
add
xor
les
add
or
int
cmp
pop
loopne
add
xchg
stc
out
fs
ds
fcomi
adc
add
xlat
and
pop
mov
out
bound
ret
xor
mov
jmp
fsubs
add
sbb
xchg
shrl
pop
pushf
mov
dec
jno
adc
sbb
and
jbe
sbb
sbb
call
xchg
inc
jle
or
popf
int
dec
aam
inc
pop
cmp
out
mov
lret
imul
cwtl
arpl
test
or
in
jg
cmpsl
clc
xlat
or
cmpsb
and
jbe
in
hlt
gs
xchg
push
pop
test
jns
lods
inc
icebp
push
adc
xor
sbb
sbb
add
enter
lods
outsl
cs
fstl
nop
mov
inc
sub
dec
js
or
push
dec
in
inc
fldenv
cmpsl
pop
adc
pop
arpl
and
test
scas
enter
xor
imul
dec
add
sahf
sub
scas
sbbl
adc
arpl
stc
aad
jbe
movsl
pop
adc
cld
mov
into
xchg
pushf
clc
iret
pop
jle
leave
inc
sarb
in
mov
fsubl
stos
test
jecxz
int3
in
mov
xchg
sti
push
jne
lret
mov
mov
xchg
cld
outsl
das
lahf
or
cmp
out
dec
out
ficoml
rcr
push
int3
pop
dec
stos
xlat
jae
adc
jb
pop
and
gs
adc
mov
repnz
add
pop
lcall
add
rcl
dec
xchg
es
xchg
clc
mov
xchg
dec
push
sbb
pop
mov
ret
fsubrs
mov
push
loope
mov
push
divb
lret
mov
idivb
lcall
sahf
pop
mov
sbb
jnp
mov
adc
mov
xor
pop
shll
mov
push
adc
sub
inc
scas
lds
mov
and
xlat
bound
cmp
out
push
gs
inc
mov
pop
scas
push
dec
jmp
aad
dec
out
clc
std
push
lods
insb
push
ret
pusha
sahf
dec
xlat
mov
dec
repnz
xchg
add
dec
fstpl
test
pushf
add
push
jno
mov
add
inc
push
mov
pushf
outsb
xor
shll
cld
jl
mov
jno
or
lds
inc
jle
xor
and
mov
sub
movsb
ds
sbb
gs
push
and
std
arpl
and
pop
repz
xor
xchg
out
jl
pop
out
fs
repnz
jno
mov
inc
cmpsl
icebp
dec
cld
mov
inc
mov
fmull
mov
inc
lret
shll
push
rcrl
push
into
xor
jne
popa
xchg
dec
pop
xchg
data16
das
std
xchg
pop
lahf
int
dec
lret
dec
and
dec
cld
ss
cmc
xchg
or
mov
dec
dec
cmp
les
inc
imul
int
adc
and
loopne
mov
nop
shrl
sbb
lret
das
enter
stos
mov
mov
and
xchg
jl
outsl
fsubs
and
lea
xor
adc
out
push
pushf
add
cmp
aam
add
daa
ret
or
cmp
cwtl
push
inc
imul
xlat
sahf
add
stos
pushf
pop
inc
inc
pop
repnz
dec
decl
in
mov
xlat
mov
lret
mov
cmpb
and
inc
adc
and
mov
rol
das
stos
lea
cmp
dec
xor
xchg
mov
xchg
in
mov
lea
addr16
repnz
loop
stos
cmp
adc
add
push
sbbb
int3
test
aad
lods
adcb
fldl
lods
test
incl
add
shll
lret
mov
or
aad
dec
notb
xor
jmp
and
add
fstpt
aas
cmc
lods
xchg
lea
xor
shlb
push
push
cltd
jg
mov
fnsave
ja
or
mov
stos
xchg
mov
arpl
or
mov
cmc
cmp
jnp
jg
jl
xor
jb
dec
cmp
jge
clc
js
mov
pop
data16
stos
jl
movb
fcomps
jp
jbe
lcall
push
or
lods
je
outsb
divb
out
xor
movsl
roll
mov
out
in
cltd
loope
cld
xchg
push
frstor
repnz
pop
xchg
lret
gs
pop
int
clc
jmp
or
jne
in
fsubs
ljmp
enter
mov
push
pop
and
lea
xchg
jge
and
inc
push
jne
and
sub
cmp
into
inc
push
sti
in
fwait
cmp
xorb
mov
mov
push
idiv
jmp
daa
jl
mov
cmp
leave
inc
adc
pusha
jno
inc
inc
sbbb
cmp
xor
pop
dec
inc
jno
insl
cwtl
sub
sahf
cmp
dec
add
popf
jnp
mov
loope
or
add
shrl
inc
subb
out
mov
dec
int3
push
cmc
sarl
in
jnp
jg
add
ja
shrb
jge
arpl
loop
gs
jge
sbb
mov
jge
movsl
adc
inc
mov
lock
mov
mov
test
mov
push
adc
arpl
fs
xor
mov
dec
leave
fdiv
repz
mov
or
sub
mov
adc
ds
les
ds
mov
out
inc
scas
jl
sbb
inc
and
and
mov
dec
cltd
jbe
out
inc
jae
cld
call
xchg
mov
dec
sbb
mov
push
pop
push
push
jmp
mov
xchg
xor
fiadds
add
cli
mov
add
arpl
mov
and
jb
jbe
xor
stos
xchg
jge
pusha
jns,pn
into
ficoms
or
addr16
das
push
push
daa
in
xchg
fstpl
inc
jo
mov
cmpsl
movsb
and
daa
xchg
sarl
mov
lret
popaw
mov
or
movsb
pusha
arpl
mov
call
es
aaa
leave
icebp
fcoms
inc
sub
bound
push
pop
daa
mov
dec
ret
dec
xor
idivl
in
and
push
icebp
jb
fiadds
xchg
mov
imul
xchg
and
sbbb
adc
repnz
push
orb
push
push
das
leave
stos
and
mov
mov
inc
das
dec
iret
lods
test
into
orl
ljmp
js
pop
mov
movsb
mov
aaa
mov
push
loope
addr16
jno
jnp
xchg
adc
outsb
sahf
or
test
xchg
fcoml
xchg
xchg
xchg
xor
sbb
or
sub
aam
xor
stos
dec
fwait
cmp
jmp
and
sub
mov
or
sub
inc
call
jl
push
mov
cmp
xchg
push
pop
addr16
jno
stos
jp
outsl
sbb
das
xor
ljmp
lahf
stc
and
mov
xchg
push
xlat
clc
add
sub
push
daa
fwait
sbb
loop
lods
or
icebp
scas
imul
push
das
repnz
and
mov
sahf
cmc
repz
adc
jne
shlb
cld
push
pop
dec
add
mov
fldt
fdivs
pop
jbe
movsb
push
push
push
mov
push
add
out
mov
adc
in
ror
sahf
add
repnz
pop
and
dec
xor
pop
adc
jecxz
xor
in
into
mov
frstor
and
pop
pop
inc
enter
fstl
lcall
push
dec
mov
adc
bound
pop
and
mov
push
or
mov
lahf
push
cld
mov
popa
mov
loop
pop
xor
adc
push
shll
adc
jl
xchg
je
mov
pop
hlt
jmp
jae
mov
jle
imul
sahf
xor
mov
cmp
push
jb
lods
jmp
pop
cld
adc
movsl
jmp
mov
stos
iret
ljmp
inc
jo
les
and
stc
sbb
sub
hlt
jno
js
inc
cwtl
fs
xchg
cmp
arpl
mov
test
outsb
sub
ficomps
loopne
adc
xor
and
or
js
mov
and
sbb
gs
les
xor
adc
stos
sub
mov
outsb
mov
xchg
mov
sahf
imul
xchg
inc
out
jns
icebp
out
push
xchg
inc
fldcw
stos
fsubl
out
xchg
or
dec
add
pop
mov
or
call
add
push
jno
mov
movsb
inc
clc
rep
popf
cmp
jmp
gs
inc
dec
add
mov
mov
mov
mov
or
enter
xchg
lods
xchg
movsl
notl
push
test
xor
dec
mov
pop
pop
inc
sbb
jl
push
in
mov
fiaddl
movsl
push
push
jle
dec
and
in
adc
inc
sub
out
arpl
aas
mov
leave
mov
push
cmp
je
lods
inc
pop
lcall
dec
ret
dec
stos
mov
pusha
mov
jb
pop
push
cmp
add
imul
inc
xchg
addr16
jo
fbld
pushf
sti
rcrb
adc
push
pop
shll
lret
adc
push
aaa
gs
stc
addb
js
and
and
mov
pop
mov
flds
add
xor
dec
lock
ss
push
push
mov
lret
ljmp
mov
inc
cmp
out
cmp
fistl
ljmp
push
int
inc
sarb
std
xchg
andb
jnp
sbb
dec
xor
mov
jne
cmp
scas
mov
testb
fsubrl
pop
push
add
stos
out
mov
movb
dec
sbb
stc
lods
in
in
jb
add
enter
xchg
addr16
das
arpl
mov
rcl
cmp
and
pop
mov
add
imulb
pop
xor
push
push
insb
fcoms
addl
adc
xor
and
xchg
lock
lret
std
jne
xchg
test
push
fdivrs
push
xor
aas
popa
jl
popa
mov
fdivp
loope
lods
test
sarb
add
aas
mov
shr
lret
stos
jae
mov
roll
cmc
dec
rcrb
cmp
sbb
cmp
pop
popf
inc
notb
scas
cmpl
shr
and
cltd
jno
in
cpuid
imul
lods
inc
aad
lods
cli
outsb
lcall
test
insb
add
pop
xchg
dec
push
xchg
xor
icebp
mov
sbb
jg
stos
pop
xchg
popa
cmpb
or
cltd
mov
aas
add
sub
stos
movsl
xor
xchg
push
mov
pusha
mov
into
leave
xchg
lds
int
inc
ficoml
incb
mov
cltd
xor
fisttpll
stos
jb
push
ss
dec
push
mov
fcomip
dec
and
push
mov
call
mov
jns,pt
xchg
leave
xchg
lahf
pop
cmpsl
dec
aad
add
pop
cli
jle
stc
push
push
int
es
or
lds
movq
lahf
movsl
cmp
cmp
xchg
in
xor
mov
sub
ret
cmp
cmp
jnp
jno
call
lret
mov
or
jbe
dec
ljmp
fsubrs
cs
jmp
add
dec
pop
outsl
jmp
mov
stos
sti
ret
std
cwtl
lods
add
pop
dec
outsl
push
insb
xchg
jecxz
inc
xchg
test
jecxz
loop
ss
andl
mov
or
repnz
pop
xchg
xor
ficoms
jmp
lods
bound
add
sub
xchg
cmp
pop
xchg
inc
sbb
sti
xchg
notb
mov
push
sbb
stos
mov
jno
test
aad
cwtl
mov
dec
xlat
gs
sbb
aad
mov
aad
lret
lahf
sahf
dec
lods
add
sbb
test
imulb
subl
arpl
push
cmp
xor
sub
lock
add
aaa
adc
push
add
cmp
psadbw
in
insb
call
and
xor
mov
movsl
stos
mov
mov
imul
add
add
inc
dec
jo
in
cld
xchg
test
mov
sub
lock
xchg
mov
js
es
pop
cmc
loope
jns
inc
mov
mov
push
inc
add
cmp
in
cmp
pop
in
decl
cmc
insl
jae
out
movsl
add
std
aad
pop
jg
mov
cmpsl
sbb
insl
dec
fldl2e
adc
push
cltd
test
cltd
cmp
addb
test
pushf
or
pop
loopne
mov
clts
loopne
xchg
mov
cmc
lret
imul
sbb
iret
jg
in
fsubp
cmp
xchg
push
xor
mov
in
sub
das
and
loop
lods
mov
xchg
xchg
mov
popa
testl
inc
inc
cmp
sub
pop
in
pop
stos
adc
sbb
loopne
cmpsb
dec
pop
push
out
push
dec
cmp
inc
add
push
mov
push
add
sti
repz
ds
push
push
sub
aam
and
sbb
lea
mov
cmpsl
push
mov
movsb
es
mov
lock
dec
add
mov
negb
add
popa
sub
mov
sub
iret
pop
test
es
inc
and
test
insb
shlb
cmp
xchg
roll
sbb
negl
cmpsl
xor
sub
sti
iret
lock
arpl
push
in
out
and
fstl
lret
call
cmp
jp
xchg
int3
push
rcl
push
or
fistps
inc
iret
in
fsubr
add
adc
icebp
out
out
sarb
xchg
bound
stc
stos
jg
add
ds
mov
cmp
shl
fcoml
sbb
cli
cltd
xchg
stc
aad
int3
xor
fs
pop
xor
scas
xchg
in
xabort
arpl
lcall
sti
add
scas
sub
pop
subb
pop
inc
adc
mov
jge
lds
cbtw
jmp
bound
lods
cmp
push
fistpll
push
cmp
dec
fucomp
add
std
and
lock
out
outsb
xchg
lcall
push
xor
mov
adc
sahf
stc
mov
xchg
mov
rcll
jb
mov
outsl
pop
push
jmp
pop
pop
movsl
imul
xchg
sbb
outsl
icebp
cld
or
sbb
cmc
imulb
sarb
inc
popf
inc
xchg
fidivs
push
jecxz
mov
addr16
xchg
add
loopne
je
xchg
mov
pop
sbb
sti
les
addr16
pop
dec
xor
sub
subl
adc
enter
mov
lret
add
out
pop
mov
fwait
push
mov
and
in
movsl
and
arpl
repz
or
ljmp
aaa
pop
jp
jbe
cli
insb
cmp
scas
std
cmp
mov
loop
xchg
es
pop
push
scas
fldenv
aas
xlat
aam
pop
mov
out
mov
sarl
dec
dec
xchg
test
dec
std
pop
fsubl
out
cmp
jmp
inc
mov
ret
inc
movb
outsb
fs
inc
jne
scas
pop
lret
sti
pop
stos
add
loope
test
jnp
xchg
clc
imul
inc
add
jnp
insl
fs
and
lds
mov
jno
cmpsl
iret
outsl
and
sbb
pop
outsl
mov
test
push
push
sbb
cli
ret
cld
pop
test
pop
sub
mov
xlat
xchg
ljmp
jae
add
mov
jp
jne
and
mov
adc
or
shll
ja
mov
add
sbbl
cs
jno
adc
cmp
ds
popf
imul
sub
jns
and
dec
lods
and
lods
les
mov
push
scas
les
call
into
dec
push
fmul
ja
push
leave
test
inc
repnz
mov
push
jl
in
aad
nop
int
xlat
sahf
or
mov
and
sub
inc
mov
ret
dec
dec
pop
ret
test
int3
jnp
xor
jbe
sahf
gs
out
mov
insl
add
imul
jle
sub
lret
mov
jge
scas
sub
push
shrb
dec
cmp
inc
mov
xchg
jl
js
arpl
fldt
or
mov
add
sbb
pop
or
je
in
adc
js
adc
push
push
in
imul
pop
cmp
xchg
leave
mov
cld
lret
xchg
dec
inc
hlt
das
mov
shl
add
in
mov
mov
shll
mov
mov
and
xchg
test
add
js
sbb
pop
and
fidivl
pop
lret
xchg
jae
sub
loope
xchg
bound
xor
call
into
pop
es
add
or
mov
rclb
ret
inc
pop
movsb
add
inc
sbb
xchg
hlt
fcmovnu
xchg
mov
rorl
shrl
mov
call
or
movsl
test
mov
out
jmp
or
stos
mov
leave
icebp
push
jb
fistpll
cli
aaa
lcall
push
sbb
xchg
xor
in
cltd
inc
pop
and
dec
push
inc
inc
adcl
dec
pop
push
push
sub
js
jle
popf
fidivrs
les
push
xor
aaa
ss
xchg
pushf
out
xor
pop
rcrl
adc
sahf
xchg
jne
adc
enter
popa
scas
mov
inc
xor
lock
or
aad
lds
and
push
xor
push
jo
pushf
xchg
dec
loopne
mov
mov
movsb
mov
outsl
aad
ja
into
out
stos
dec
fs
cmc
mov
xor
xchg
add
jl
cli
inc
clc
push
jno
movsb
push
fbstp
int
lods
aad
push
adc
pop
fcomps
mov
outsl
mov
sub
xchg
ljmp
icebp
frstor
ljmp
js
call
inc
jns
pop
jb
mov
xchg
sub
int
or
out
insl
shrl
ds
inc
data16
cwtl
xor
shl
mov
pop
adc
sar
in
pop
scas
dec
jg
sub
dec
mov
pop
and
in
xchg
pushw
std
pcmpeqb
or
in
push
cmp
dec
aas
in
notb
adc
aaa
jne
or
mov
jl
imul
in
inc
sub
dec
or
mov
movsl
imul
aad
cmp
test
and
push
add
in
mov
jns
adc
dec
test
push
outsl
push
pop
lcall
fildll
sub
xchg
pop
jo
test
lahf
cmp
pop
jmp
std
mov
mov
cli
sbb
mov
add
hlt
xor
aaa
andb
loopne
repz
imul
push
loope
and
rorb
cmp
sub
push
jo
sbb
sarl
dec
js
hlt
loopne
fldl
inc
xorps
icebp
inc
or
mov
sbb
outsl
fstpl
sbb
les
pusha
cmp
insl
push
aam
pop
loop
cmp
in
add
pop
rorl
mov
push
xchg
test
fdiv
sbb
push
mov
dec
imull
sub
inc
add
dec
push
fistl
sbb
mov
pop
sbbl
inc
mov
stos
mov
mov
jno
xchg
fidivl
mov
xchg
add
mov
mov
dec
mov
lods
mov
shlb
or
rorb
outsb
add
xchg
dec
pop
daa
push
shr
ret
adc
adc
testb
repnz
mov
fisubrs
dec
sbb
jp
loopne
inc
mov
idiv
out
pop
cs
outsb
jl
dec
and
cmovb
repnz
push
daa
pop
out
xchg
inc
xchg
popa
cmp
pop
sbb
in
mov
jae
das
aam
cs
sarl
push
and
push
mov
xchg
jns
and
inc
fdecstp
adc
jb
mov
ljmp
xor
sub
repnz
sbb
xor
sub
push
rol
mov
cmc
fidivs
outsb
push
lea
stos
hlt
gs
pop
insb
fcmovnu
movsb
fadds
and
push
mov
and
out
ljmp
call
jmp
mov
int3
sar
push
testl
xor
les
pop
lods
lds
adc
adc
fstps
add
sahf
inc
xorb
xor
adc
mov
mov
jo
ja
lds
lahf
dec
jno
test
and
repnz
imul
mov
and
mov
cmp
cmpsl
xchg
shrl
mov
pop
int3
add
in
aad
out
cmp
sbb
cltd
movsb
jecxz
dec
ret
cltd
inc
xor
loopne
adc
popa
subb
adc
das
lods
mov
and
andb
mov
mov
dec
sub
lods
clc
int
jl
popa
sbb
fnstenv
pop
dec
imul
sub
mov
fcoms
iret
mov
loopne
cwtl
test
sbb
pop
int3
into
adc
add
divl
xchg
lds
popf
add
pop
sbb
mov
test
add
xchg
pop
into
and
cmc
roll
clc
and
or
jle
push
mov
xchg
adc
pop
sahf
hlt
pop
pop
ljmp
test
adc
inc
pop
std
jle
xor
ret
sbb
push
pop
lret
and
mov
cmp
cmpsb
inc
test
pusha
and
stos
mov
push
or
mov
lds
in
cli
ret
lods
jle
fidivrl
adc
gs
cmc
xchg
pop
pop
mov
cmp
aaa
dec
rcll
dec
mov
xchg
rclb
ret
arpl
inc
mov
outsl
sbb
dec
mull
mov
adc
int
mov
xchg
mov
mov
or
pop
bound
xchg
std
lret
push
aas
das
ss
dec
popa
in
jnp
or
and
sub
pslld
adc
mov
adc
ret
push
movsl
sbb
or
mov
mov
arpl
mov
hlt
and
pushf
cmp
in
in
inc
pop
adc
dec
sub
rcrl
sub
test
pop
xchg
xchg
ffreep
sub
add
push
fdivp
jne
jg
xor
mov
inc
andl
pop
insb
mov
mov
inc
fxch
loope
daa
aas
scas
push
ss
sub
cmp
sti
fldt
mov
fstpl
pop
ret
cltd
and
repnz
iret
pop
test
push
nopl
inc
sahf
mov
fst
call
or
dec
fs
mov
mov
not
jb
xor
dec
jle
paddsw
jb
sub
movsb
adc
fimull
or
mov
pop
push
sub
mov
pop
pop
mov
dec
loop
push
scas
mov
nop
adc
inc
cmpsb
loop
out
loopne
adcl
fildll
push
sbb
pushf
mov
loop
fidivl
les
cli
insb
mov
shlb
js
pop
jl
das
fisttps
fprem
add
mov
sub
std
fwait
lret
clc
and
aaa
out
dec
call
in
rorl
push
cmp
and
push
jmp
sub
push
sarb
adc
test
outsb
jno
or
sbb
push
sbb
fldt
lods
mov
xchg
cli
dec
into
and
vpcmpgtw
lret
push
dec
es
add
add
pop
mov
loop
outsb
mov
fdiv
mov
sbbl
imul
inc
lods
push
rcrl
mov
cmpl
mov
lods
sti
or
loope
sub
shrl
and
test
subb
sbb
cli
and
mov
lea
cmp
call
popf
test
cmp
sub
xchg
dec
xor
or
sub
lods
cmpb
pop
mov
add
insb
mov
ljmp
outsb
ljmp
insl
aam
pop
pop
inc
mov
cmpsl
fdivrl
push
mov
insb
enter
stc
lods
push
xlat
xchg
idivl
xlat
jne
movsl
cmp
das
test
jae
lea
nop
jns
int3
mov
dec
lcall
adc
stos
fisubl
movsb
cltd
loope
pop
or
mov
lret
test
imul
lcall
add
mov
adc
xor
jecxz
adc
stos
in
mov
lahf
and
and
xchg
pop
flds
rolb
pop
push
cmpsb
sub
fs
nop
mov
imul
pop
sub
mov
jb
inc
xor
cld
dec
xchg
push
fdivs
rorl
mov
push
ss
cmp
cld
sub
xchg
insl
xor
mov
in
push
adc
inc
mov
rorb
mov
xchg
mov
outsb
movsl
mov
push
les
xor
add
das
fcoml
mov
fbstp
xor
jne
xchg
xchg
and
and
cmp
int3
mov
xchg
ss
push
xchg
fcoml
add
and
nop
movsl
int3
arpl
dec
gs
cmp
push
inc
inc
xchg
add
aam
mov
jle
jmp
mov
clc
mov
cmpsl
pop
jb
and
ds
mov
jbe
mov
pusha
lahf
mov
mov
mov
sarl
jp
inc
daa
dec
fidivrs
mov
xchg
pop
xchg
push
ss
insb
cwtl
jo
mov
dec
xchg
sub
lret
cmp
dec
or
and
in
shll
mov
aaa
in
mov
inc
pop
and
sub
ljmp
fdivrs
dec
lea
pop
push
roll
test
xor
mov
adc
rclb
xchg
xor
leave
and
loop
pop
stos
mov
jl
mov
mov
push
adc
push
daa
jg
or
mov
ret
sbb
sahf
std
mov
dec
add
imul
xor
cwtl
lds
push
add
rcrl
iret
lock
dec
jo
mov
dec
mov
sub
sub
sub
xor
mov
dec
cmp
cwtl
inc
ret
in
stos
cmpsl
outsb
dec
jge
test
ret
mov
or
test
jne
cmp
cwtl
sahf
push
and
out
rcr
iret
inc
add
hlt
shr
inc
xor
adc
popa
adc
scas
arpl
xchg
xor
dec
xor
adc
mov
sub
mov
nop
call
out
cmp
imul
or
xchg
push
repnz
sbb
sub
sbb
and
outsb
add
nop
aam
pop
test
dec
leave
popf
push
sahf
rolb
pop
out
push
cmp
rcrl
xor
imul
into
jns
xor
decl
xchg
aas
inc
daa
gs
dec
and
xchg
push
ljmp
lret
or
addr16
dec
hlt
pushf
mov
inc
out
and
ficompl
into
dec
rolb
cwtl
pop
pop
sbb
jns
je
mov
xchg
es
xchg
movl
push
sbb
jbe
imul
mov
retw
sub
sub
adc
rolb
shrb
dec
mov
lds
lea
push
repz
repz
jmp
xchg
call
icebp
xorl
int3
daa
xchg
cmp
dec
pop
sbb
sub
mov
mov
mov
dec
adc
pop
hlt
loopne
fwait
xchg
dec
in
out
sbb
jnp
in
std
lds
and
push
rcrb
test
std
jno
popf
and
mov
das
jno
daa
sbb
cmp
sahf
out
jl
sbb
xchg
or
xchg
pop
add
dec
ss
inc
comiss
add
xlat
pop
int3
ret
test
and
sbb
add
insl
mov
sbb
mov
shl
cld
orl
sub
gs
aam
rorb
dec
pop
dec
sti
and
add
pop
push
ss
cmp
xor
sub
ret
or
popf
cs
mov
repz
mov
mov
mov
xchg
clc
mov
push
push
push
push
xor
ret
hlt
test
jbe
jno
jno
xchg
jp
ret
sub
rol
movsb
repz
jmp
or
scas
repnz
xorb
mov
rcl
lcall
ljmp
fbld
jle
fwait
and
sub
jle
inc
ret
dec
out
and
xor
in
dec
xchg
test
mov
dec
xor
adc
cs
dec
pop
aam
sti
sub
xlat
xor
cmpsb
movsl
xor
loope
iret
xchg
lds
vmread
popa
mov
pop
outsb
mov
sub
sahf
inc
jae
adc
xchg
dec
adc
test
outsb
mov
push
testb
fbstp
hlt
lods
pushf
es
fwait
cmp
and
loopne
out
test
jle
mov
dec
arpl
stc
xlat
movsl
push
insl
mov
sbb
cmp
mov
jp
insb
pop
xor
add
mov
je
notl
jb
mov
xchg
jo
jle
jae
je
fdiv
cmp
pop
jbe
mov
push
test
mov
cmp
mov
and
lahf
cmp
push
daa
in
jae
stc
stc
push
popa
or
mov
fcmovbe
push
data16
inc
in
movsl
push
cmp
clc
lcall
adc
ret
int3
and
ret
add
xchg
jge
dec
sbb
pop
sbb
out
rol
fisubrl
jo
sbb
and
mov
cmp
ds
test
xor
stos
aad
pop
sub
sbb
and
rcr
or
inc
mov
addr16
sarb
adcl
filds
dec
add
movsb
fildl
bnd
sub
jge
jbe
xchg
ret
mov
push
call
add
or
rorl
shll
popa
xor
cmp
sbb
adc
or
hlt
or
fstpt
mov
mov
ss
add
loope
jmp
aad
adcl
leave
and
and
xchg
cmp
ficoml
mov
lret
jns
dec
push
adcb
mov
or
fwait
inc
sarb
cltd
popf
jne
xor
pop
adc
cmp
adc
pop
pop
mov
inc
mov
fs
jg
ret
pop
push
jge
jnp
movsb
int3
loopne
ja
mov
add
mov
out
or
movsl
mov
incl
sub
movsl
dec
fnstsw
mov
rorb
xchg
fwait
sbb
jp
ret
jb
shll
aas
lcall
in
rclb
pop
hlt
mov
jnp
ret
insl
mov
jb
xor
js
sti
out
lret
in
mov
cmp
rolb
jmp
mov
jp
sub
push
fsub
aad
push
notb
inc
push
into
nop
enter
cmp
or
adc
add
out
aam
xchg
mov
pop
pop
or
sahf
xchg
orl
xchg
mov
stos
cld
push
pusha
push
js
xchg
outsl
shll
sub
xchg
push
ret
cltd
cmp
cld
mov
pop
pop
mov
cmp
inc
pushf
mov
and
jl
mov
rolb
arpl
adc
cmp
rcrl
insl
cmpb
out
add
jo
fsubl
or
sbb
dec
mov
fcoms
and
andl
fs
and
xchg
mov
mov
mov
stc
mov
xor
mov
rcr
jmp
inc
inc
cmp
mov
movsb
lds
bnd
jg
mov
js
push
dec
sbb
mov
ficoml
or
xchg
xor
ret
push
call
push
push
popa
add
inc
sbb
inc
jmp
sarb
jl
mov
in
flds
add
test
jno
push
das
clc
and
push
lcall
mov
inc
lret
xchg
sub
cmp
add
iret
shl
mov
fmulp
inc
pusha
xchg
mov
in
decb
fsubl
push
mov
adc
sub
cmpsl
cs
fstpt
daa
mov
repz
cmpsb
arpl
jns
mov
pop
lahf
add
insl
mov
push
inc
inc
xchg
jle
cmc
pop
cmp
orb
addr16
call
xor
mov
lds
test
pusha
std
inc
dec
xchg
mov
sti
push
jge
test
pop
dec
and
sub
sbb
aaa
mov
in
enter
xchg
or
sbb
popa
xor
mov
mov
and
pop
sbbl
fld1
inc
movsl
aas
cwtl
shl
neg
push
sbb
push
inc
test
mov
dec
sub
notl
cmp
sub
mov
fsubp
cmp
adc
vandnps
out
lret
dec
lret
add
mov
ss
jmp
mov
popa
cmp
pop
mov
rolb
xor
dec
add
jno
movsl
pop
aaa
add
sbb
mov
xchg
iret
rclb
xchg
push
cs
add
fdivs
mov
or
les
test
add
pop
jmp
rcrw
data16
outsb
movsb
add
cmp
xchg
mov
dec
es
daa
cltd
stos
mov
mov
xchg
test
mov
and
mov
cs
sbb
es
stos
push
jl
sub
jg
cwtl
adc
xchg
xchg
imulb
loop
pushf
push
movsl
es
data16
xchg
ja
and
into
stos
clc
adc
mov
leave
lea
push
test
icebp
dec
fisttpl
jo
dec
lods
ret
or
ljmp
aam
sbb
mov
and
sub
lds
fwait
push
lods
imul
in
jne
in
xchg
mov
xor
adc
fstpl
and
mov
push
cwtl
lea
dec
adcl
or
lds
pop
mov
pushl
cmp
add
xchg
test
jb
mov
test
loope
clc
and
cmp
sbb
sub
fstl
nop
sbb
lret
lret
add
cmp
filds
in
pop
mov
cmpsb
jge
xor
pop
js
xor
adc
ljmp
into
pop
movsl
xor
les
in
pop
fstps
mov
pop
scas
jo
adc
ljmp
add
outsl
icebp
dec
ds
mov
out
push
movsb
or
in
out
nop
jmp
out
cmc
outsb
mov
xchg
iret
jne
adcl
add
imul
hlt
aas
icebp
and
loop
daa
std
leave
jne
mov
enter
sub
das
testb
sti
dec
xchg
call
loope
sub
jmp
pop
jp
cmpl
sahf
mov
dec
push
hlt
push
or
sarl
sbb
or
or
push
icebp
in
mov
cwtl
sub
scas
cs
inc
sti
mov
jl
jbe
rorb
push
sahf
lods
sub
add
inc
inc
mov
and
cmc
fmul
sahf
xchg
xlat
push
decb
insb
inc
aas
cmp
inc
jne
cmpsl
jecxz
mov
mov
std
loop
pusha
mov
loope
outsl
or
xchg
sub
stos
popa
push
jecxz
cmpsb
mov
lock
inc
data16
push
jge
xchg
nop
push
test
test
loope
adc
sub
add
inc
loope
jbe
into
gs
xor
sub
test
stos
jbe
and
jo
add
popf
sub
div
mov
out
arpl
jmp
mov
imull
inc
mov
dec
cwtl
daa
cmp
mov
mov
push
jae
inc
add
sbb
mov
sub
pop
add
or
or
cwtl
insl
xchg
jg
pop
sbb
inc
test
icebp
les
mov
in
xor
mov
scas
je
and
movsb
jne
sub
jp
stc
push
cmp
scas
loop
das
cltd
iret
cmpsl
enter
and
dec
xlat
dec
movsl
adc
jl
outsb
repnz
sub
sbb
adc
stc
lds
cmp
dec
xchg
or
jecxz
loop
xbegin
int3
imul
push
fildll
push
xchg
cwtl
mov
dec
loop
jmp
jp
jl
mov
jmp
mov
add
rorb
xchg
nop
mov
mov
leave
int3
jo
or
dec
jnp
cmp
inc
push
sub
pop
cmp
stc
sub
mov
cld
aaa
add
xchg
ret
xor
push
pop
bound
ss
sbb
inc
jecxz
popa
add
out
mov
in
mov
hlt
mov
mov
mov
ret
adc
and
lods
mov
mov
dec
aas
in
imul
pusha
fsubl
ret
out
cmp
stos
stos
and
fldenv
and
jae
cs
lahf
scas
sub
push
jl
mov
xor
push
mov
mov
or
dec
jo
sub
and
adc
repnz
fs
mov
pop
test
sub
dec
xchg
xor
roll
xchg
cld
or
sbb
push
ss
shll
out
ja
sub
insl
xchg
cmpsb
frstor
aas
push
pop
sub
mov
inc
cli
rcll
xchg
or
scas
mov
icebp
xchg
lahf
mov
fcompl
jo
jnp
mov
mov
lods
mov
add
sti
mov
inc
mov
mov
dec
sub
orb
lret
in
js
inc
sub
icebp
mov
sub
mov
scas
aas
std
sbb
sahf
push
jmp
vhaddps
adc
adc
pop
add
jmp
and
int3
loop
scas
clc
popa
hlt
mov
mov
clc
in
fidivs
adc
xor
das
mov
add
mov
push
ds
cmp
or
test
faddl
data16
hlt
stc
aam
lea
mov
std
mov
fucom
dec
lods
mov
jb
aam
sahf
jb
dec
inc
sub
jg
jne
ficoms
cmp
xor
add
lret
push
jp
xchg
cwtl
mov
sahf
xlat
js
cmpsb
addb
xchg
inc
inc
ja
daa
imul
dec
scas
and
cmp
sar
xchg
adc
push
and
mov
fmull
sub
pushf
xor
cmp
and
sbb
daa
cs
mov
jbe
dec
test
mov
adc
insl
iret
mov
add
mov
xchg
test
push
cmpb
jne
fcomps
inc
ret
fldenv
jnp
add
pop
cmc
mov
inc
jmp
js
push
das
inc
mov
adc
aaa
pop
xor
lods
mov
repnz
push
pop
arpl
addl
rcll
sbb
xorb
push
scas
shlb
andb
sbb
in
bound
jne
jb
mov
cmp
hlt
mov
lahf
into
dec
push
call
xchg
push
data16
ret
data16
je
xor
test
popf
in
mov
pop
dec
sub
aas
cltd
mov
aad
mov
jo
sub
inc
gs
idivl
sbb
mov
into
xor
das
rcr
sub
imul
xor
inc
popa
test
in
mov
insl
repz
jg
or
inc
cmp
add
pop
rclb
push
adc
dec
mov
out
lret
popf
mov
push
add
rorl
in
outsl
cmpsl
aad
xchg
adc
pop
mov
pop
jl
inc
repnz
xchg
gs
xlat
dec
imul
adc
adc
jge
outsl
imull
scas
ja
add
ret
push
xor
pop
or
in
sbb
es
mov
gs
rcrb
sbb
sub
jne
scas
dec
dec
jo
push
inc
test
clc
mov
jge
jnp
adc
out
xor
stos
xchg
test
stc
pop
sahf
cmpsb
lds
pop
pop
std
cmp
mov
cmp
or
jg
or
mov
cmp
inc
mov
stos
xchg
popa
xchg
mov
xchg
push
bound
dec
pop
jmp
jne
adcb
inc
push
xchg
cmpsl
nop
pop
hlt
mov
xchg
clc
or
lret
or
inc
sti
test
mov
xor
movsl
int3
leave
in
stos
jb
out
fnstenv
cmpsb
or
lret
insb
es
incb
sete
sbb
jp
shrl
jbe
sbb
pop
sub
test
pop
ret
mov
mov
push
lock
xor
mov
addr16
pop
lahf
pop
fsubl
push
mov
mov
fidivrl
mov
and
add
pop
pop
push
fsubrl
ja
outsb
roll
int3
cltd
lea
and
lock
jbe
aas
cs
jbe
call
mov
iret
push
out
pop
lahf
aaa
cwtl
xchg
sti
push
xchg
jo
es
push
movsb
pushf
gs
sarb
mov
ss
add
push
pop
iret
es
dec
lret
icebp
call
inc
and
jle
test
push
icebp
div
aas
jbe
mov
popa
cmp
mov
or
mov
dec
jg
fists
mov
mov
pop
out
push
push
fcmovbe
testl
add
pop
sti
jo
push
xchg
inc
mov
add
into
cmp
push
shl
push
sarb
sbb
lea
int3
xor
mov
or
adc
xchg
xchg
cmp
push
mov
mov
inc
pop
push
mov
lods
pop
stos
xchg
mov
dec
mov
xchg
test
scas
adc
pop
lcall
idiv
nop
je
jbe
out
cmc
in
into
mov
aas
shr
rolb
cmpb
aad
mov
dec
aaa
aam
fs
imul
pop
pop
jg
imul
xor
push
cmp
mov
pop
mov
out
or
sahf
push
je
jmp
fbstp
mov
and
mov
sub
addr16
sub
inc
jbe
cmp
pop
insb
push
rcl
push
popa
ljmp
into
divl
insb
cltd
in
dec
add
stos
lahf
lcall
inc
dec
add
push
mov
add
ret
or
movsl
and
loope
out
pusha
pushf
loopne
sub
pop
mulb
pop
cmp
mov
and
mov
aad
arpl
fnstsw
sbb
out
pop
movsl
push
add
loop
stos
shr
sbb
pusha
lods
addr16
jp
je
cwtl
insl
fisubs
in
fs
jg
mov
aas
test
ja
add
jnp
idivb
repz
sub
js
dec
sbb
pop
jns
cs
pusha
jne
push
divl
or
nop
mov
imul
add
sbb
dec
or
leave
mov
or
subl
push
aaa
mov
cmp
and
push
mov
sub
popf
in
jno
rcrb
adc
fld
push
and
mulb
out
sbb
mov
movsb
jp
sahf
nop
fsubs
rclb
jno
sahf
jo
lret
xchg
ja
icebp
mov
jo
cmp
pop
jo
cmpsl
pop
or
fsts
mov
inc
sub
in
push
xor
inc
insl
mov
and
jne
sub
jmp
out
pop
enter
jae
fwait
sarl
in
adc
mov
call
roll
xor
push
mov
subb
shr
lods
gs
xor
bound
cmpsl
fcompl
xchg
icebp
clc
out
test
adc
jp
es
dec
push
das
xchg
sub
in
push
cmp
mov
test
adc
sub
arpl
out
pand
jnp
mov
ljmp
cmp
popf
fimull
dec
and
lahf
pop
inc
xor
push
and
cli
cmpsl
test
cli
jno
or
lods
pop
jl
movsl
push
xor
mov
mov
jo
mov
fmuls
int
ja
jle
xor
inc
outsl
leave
mov
ds
out
xchg
sub
xchg
lret
jbe
lds
in
movsb
cmc
shll
in
jb
adc
out
movsb
mov
mov
ret
xor
adc
jg
adc
or
fwait
icebp
xor
fnstenv
call
cmpsl
sub
jne
jb
pusha
pop
push
ss
and
out
push
mov
dec
xchg
xchg
dec
std
pop
inc
je
mov
jns
pushl
dec
nop
stos
xchg
repz
fcom
mov
dec
repz
and
loopne
in
cmp
ret
dec
mov
cmpsb
xor
mov
jae
add
popf
pushf
daa
testl
rcl
scas
in
or
push
sub
lock
xchg
pop
pop
ss
xchg
mov
in
adc
push
cmp
lock
jo
es
inc
shll
cmc
inc
std
repz
fwait
sbb
ret
fwait
movsb
lea
dec
out
scas
push
push
outsb
bound
sbb
lods
jp
mov
sahf
jge
iret
pop
nop
jns
loop
mov
fs
out
dec
fcompl
jmp
pop
repz
cs
inc
inc
ja
mov
jb
sub
ds
out
and
ljmp
outsl
sbb
push
icebp
je
testb
cmpps
cmp
stos
sbb
sahf
mov
xchg
rclb
dec
mov
xor
push
push
add
xchg
imul
mov
mov
arpl
cmc
shrb
mov
or
push
incb
pop
or
movsl
mov
or
cli
sbb
and
push
aas
stos
dec
pop
xor
hlt
scas
sub
int3
ret
lret
daa
xor
jmp
jne
push
cmp
pop
mul
xchg
out
sbb
repz
push
sbb
cld
rcll
push
daa
jl
fmuls
pusha
or
sbb
adc
lret
and
outsb
cmp
stos
pusha
push
pop
mov
clc
cli
push
add
jp
mov
mov
lea
stos
mov
notb
push
subb
sub
pop
mov
or
lahf
jle
dec
add
mov
add
popf
pop
gs
cli
lods
mov
pop
or
mov
icebp
loopne
sbb
int
push
and
imul
out
das
test
push
sbb
push
repz
adc
lods
ds
inc
sbb
dec
mov
sbb
cli
insb
std
jp
or
notl
data16
push
inc
pop
insb
out
cld
cmc
inc
insl
mov
notl
ja
aad
jae
mov
jmp
jb
xor
jne
lock
test
cltd
lods
mov
mov
push
push
dec
mov
inc
fwait
and
cli
orl
sbb
xchg
aad
mov
ret
movsl
xor
pushf
mov
fdiv
or
clc
cwtl
les
outsb
sbb
push
dec
adc
inc
add
add
sbb
jmp
jmp
sbb
and
mov
fsub
adc
ret
and
lret
loope
mov
pop
push
loope
xchg
jb
fwait
add
in
pop
ret
icebp
add
xchg
sbb
pop
int
cli
scas
xor
sbbl
and
repz
into
xor
add
cmc
pop
lret
pop
outsl
std
fidivs
stos
hlt
iret
xor
js
psubd
enter
nop
push
or
in
lods
fbld
fdivrs
lods
xchg
dec
leave
insl
jl
jl
fnstsw
sbb
les
cmc
dec
icebp
mov
cwtl
icebp
xchg
pop
aaa
sbb
adc
jg
ja
ja
outsb
add
xor
cli
pop
jle
dec
sti
repz
sbb
dec
jo
mulb
and
push
nop/reserved
outsb
mov
cmp
xchg
ljmp
test
push
in
push
fst
leave
push
enter
push
out
jl
iret
mov
cmp
jb
mov
add
and
subl
push
sbb
sarl
sti
cmpsb
and
and
adc
pop
orb
mov
dec
cmc
ret
scas
pop
lret
push
insb
pop
ja
xchg
ss
sub
sarb
js
mov
sbb
loop
mov
jo
scas
fsub
rorb
fistl
jle
movsl
xchg
stos
cmp
cmp
xchg
rolb
ret
lcall
leave
adc
and
in
add
cmp
jg
in
in
or
outsb
add
fxch
adc
stos
sbb
jns
ret
inc
add
mov
mov
push
xchg
dec
pop
dec
notb
pop
sbb
outsb
cmp
push
mov
sbb
mov
jae
mov
int
aad
sub
outsl
stos
push
or
pop
or
pop
gs
pop
mov
mov
mov
and
mov
leave
mov
mov
or
jnp
mov
cwtl
fisttpll
dec
and
xchg
cld
fnstcw
mov
push
imul
repnz
xchg
sub
pop
pop
cmp
ja
jmp
inc
sti
out
nop
dec
pop
cwtl
dec
sub
pop
pop
push
in
cli
inc
std
ret
jmp
sahf
xchg
bound
jno
adc
adc
leave
lea
cld
inc
les
int
int
lret
jl
or
stos
jecxz
jle
and
int3
cmp
mov
pop
stos
outsl
out
imul
scas
adc
call
loope
cmp
cmp
and
dec
add
pushf
pop
xchg
dec
lret
dec
jle
rorl
push
iret
popf
add
es
stos
ds
enter
arpl
rcrb
and
sub
out
and
enter
mov
dec
lahf
pushf
test
dec
sbb
shll
popf
sar
inc
ror
bound
cmpsl
adc
in
mov
int3
xchg
jecxz
vpshufhw
fsubr
mov
fwait
add
das
xor
dec
xchg
in
mov
push
in
mov
stos
mov
dec
std
aam
adc
jnp
sub
jg
or
push
scas
jmp
aad
repz
test
jmp
xchg
cwtl
dec
test
sbb
xor
or
mov
js
mov
mov
lods
cmp
fistl
mov
notb
mov
gs
jnp
pop
movsb
inc
mov
mov
fs
and
mov
push
negl
cmpsl
sbb
es
adc
repz
dec
lahf
mov
stc
and
add
mov
or
fmull
dec
mov
adcl
mov
xor
int
scas
mov
mov
jle
dec
dec
push
shrb
pop
in
push
or
repnz
push
dec
dec
and
stos
andl
xchg
add
adc
repz
stos
popf
or
dec
pop
pushf
fwait
clc
daa
mov
out
fninit
dec
lds
add
mov
sbb
subb
push
pushf
in
movsb
rcll
cltd
lret
cld
jb
push
aaa
scas
cwtl
subl
insl
clc
sub
into
bound
adc
leave
mov
insb
mov
out
inc
shlb
shrl
inc
pop
mov
xchg
mov
int
adc
pop
mov
jp
rolb
dec
out
rcl
dec
mov
cmp
inc
pop
cli
sbb
in
shr
in
ljmp
shlb
das
and
add
push
sub
xchg
sub
fiadds
xorl
cmp
loop
and
push
lret
sub
fisubl
pusha
outsb
sub
out
jecxz
dec
outsl
mov
testl
or
xchg
insl
ret
aas
xchg
push
adc
inc
imul
pop
dec
push
sti
cmpsl
scas
lret
dec
jl
fisttps
das
or
dec
je
aas
insl
xlat
aam
and
jge
adc
add
jns
lea
push
iret
mov
inc
mov
fstp
fmulp
inc
jo
inc
jb
loope
add
aaa
sti
mov
add
cmc
push
sub
pop
and
mov
jmp
xchg
loopne
ds
in
das
rorl
inc
lods
inc
jnp
nop
rolb
cmp
jns
cmp
aas
pop
into
test
xchg
std
cmp
cmpsb
inc
mov
insb
pop
aas
jl
in
aaa
pop
sbb
jp
iret
sub
dec
scas
jb
dec
stc
adc
push
scas
mov
mov
mov
xor
and
mov
in
inc
push
push
fcomi
push
sbb
iret
fwait
scas
mov
push
sub
jo
push
sahf
popa
push
fadd
pop
cmp
pop
xor
push
inc
into
sahf
dec
and
dec
fcomi
clc
dec
outsl
rclb
lods
out
clc
mov
out
js
jg
inc
repz
fimull
shlb
mov
out
mov
into
fbstp
mov
les
xchg
mov
movsb
fsubl
push
aas
pop
push
rclb
ja
fs
fwait
adc
cmp
adc
xchg
stos
aas
add
je
daa
pop
cmpl
ljmp
mov
pushf
cmp
clc
inc
jmp
push
std
out
mov
out
dec
stc
mov
jb
rcrb
mov
aas
movsb
dec
and
addr16
add
sub
stos
popf
cmc
xor
lahf
mov
jne
mov
loop
pop
cmp
out
fidivrl
lret
and
cmp
cltd
bound
cwtl
gs
xchg
insl
int3
addl
jne
ficomps
jge
xchg
mov
insb
cmp
stc
les
or
mov
outsl
hlt
cmp
push
add
cmp
push
dec
lret
xor
add
cmp
mov
daa
bound
cmp
pop
mov
dec
adc
jo
pop
inc
push
sbb
scas
mov
sub
aad
mov
jb
sbbb
sbb
push
xor
xlat
cmpsb
and
xorb
int3
sub
sbb
ja
dec
loop
xor
cltd
in
test
stc
mov
fbld
leave
ret
scas
fs
ret
or
cmp
jp
in
in
hlt
les
mov
xchg
sbb
jae
and
jae
inc
mov
pop
pop
push
inc
cli
enter
cmp
adc
mov
or
jge
arpl
xchg
jnp
sub
xor
stc
int
loope
push
jb
sub
mov
pop
pusha
jp
lret
xor
cmc
jmp
je
cli
mov
fisubrl
adc
xor
enter
cmc
mov
sub
rclb
sub
sbb
fiadds
mov
out
lods
test
bound
ss
push
mov
xchg
xor
jmp
into
pop
insb
mov
mov
inc
iret
mov
icebp
nop
shrb
aaa
lods
fcoml
jo
in
mov
js
dec
pop
mov
add
hlt
clc
fwait
sbb
mov
pop
fdivrl
sub
adc
incb
sub
push
mov
mov
lret
inc
dec
mov
sbb
pusha
jle
sarb
xchg
xchg
dec
iret
sahf
push
test
insl
cmp
xor
mov
pop
inc
sbb
mov
lcall
ret
push
aam
pop
sarl
mov
mov
notl
pop
cmp
repnz
push
and
pop
into
cmpsl
inc
out
add
out
adc
cmpsl
xlat
mov
inc
les
sbb
in
loop
mov
dec
in
jnp
fadds
adc
mov
iret
dec
xor
mov
cmp
sti
xor
pop
and
movsb
shll
roll
add
loop
dec
ljmp
push
imul
iret
inc
sub
cmpsl
hlt
iret
mov
daa
mov
jl
bound
sbb
sbb
sbb
lret
cmp
or
and
or
push
dec
jo
pusha
adc
imul
int
push
push
mov
pop
xchg
xor
mov
inc
cmpsl
int
add
push
inc
insl
lds
push
dec
and
dec
and
dec
sub
jmp
push
sub
cmp
idiv
in
xlat
pop
dec
in
pushf
or
xchg
clc
sbb
out
cmp
cmp
and
xchg
fiadds
sbb
jge
out
jno
out
mov
pop
dec
dec
jno
jb
adc
int3
xchg
js
pop
push
mov
enter
push
xor
cld
jecxz
push
hlt
mov
pop
out
push
fmulp
add
loop
in
aaa
je
push
es
cmc
sarb
xor
sbb
sbb
inc
pop
jg
test
or
in
aas
ja
jp
jmp
imul
into
dec
ret
dec
inc
cmp
push
and
cli
in
test
mov
sahf
sub
mov
or
inc
pop
adc
xchg
inc
lret
jge
rclb
push
je
push
lock
test
dec
push
sub
call
jo
inc
xor
pop
jb
adc
adc
negl
ss
loop
jp
in
jno
cmp
popa
outsb
outsl
or
ja
or
inc
and
pop
jecxz
out
xchg
aaa
mov
add
pushf
push
loop
fwait
and
adc
jge
jle
push
and
fildl
xchg
xchg
shl
movaps
xor
mov
mov
inc
dec
fsts
add
fildl
adc
lea
arpl
test
std
adc
cld
xor
addb
and
jg
dec
test
xorb
iret
dec
repnz
mov
xor
xchg
mov
lds
pusha
enter
dec
dec
adc
pop
popf
loop
daa
rorb
enter
mov
icebp
aam
leave
mov
xchg
nop
stc
jno
xchg
out
cmp
gs
cmp
mov
dec
loope
ja
lahf
inc
sub
push
cmp
xlat
lock
test
xchg
pusha
xor
fiaddl
mov
or
enter
sbb
lcall
sbb
mov
sbb
out
and
fldl
inc
aas
btc
and
ficomps
mov
ret
cli
repz
or
test
xchg
orb
aaa
push
cmpsl
xchg
jmp
inc
mov
popf
mov
sub
ret
lahf
ds
push
or
mov
outsb
push
jae
pop
call
jo
cmp
sub
add
jnp
add
jg
inc
add
in
mov
sub
ficompl
arpl
fstl
mov
outsl
movsb
xchg
das
outsl
fnstenv
jge
lret
bound
mov
xorl
ret
and
adc
pop
cmp
mov
popa
and
jle
or
rcrl
ret
cmpsb
inc
repz
sbb
sti
or
roll
fiadds
mov
mov
in
fiadds
cmp
or
mov
pop
cmpsl
and
cmp
idiv
sub
inc
mov
mov
jmp
add
push
mov
sbb
pop
fdivs
cmp
fisubrs
in
daa
leave
mov
adc
sbb
imul
pop
repnz
mov
jae
mov
push
mov
mov
nop
aam
shll
jmp
ss
inc
lret
out
xchg
outsl
fimull
mov
pop
clc
mov
pop
jg
cmp
mov
and
mov
inc
repz
mov
and
inc
add
dec
jmp
push
add
aad
lock
or
getsec
out
aas
mov
pop
pusha
cmp
aas
leave
xor
jmp
and
iret
movsb
ss
xchg
or
pop
mov
in
fwait
or
bound
mov
pmullw
inc
ljmp
xchg
popa
or
dec
inc
nop
lds
cld
fistpll
or
test
jnp
sbb
xchg
adc
jno
cli
lods
lcall
call
test
jo
dec
push
jbe
cli
jae
or
adcb
popa
into
jns
add
push
cmp
loopne
jle
insb
into
sbb
dec
and
jge
jns
add
dec
mov
imul
sbb
cmpsb
stos
inc
test
pop
cmpsl
xor
sub
std
mov
pop
sub
sbb
cli
mov
mov
pop
fs
dec
push
lock
push
adc
aad
cmpsb
ds
xor
fs
test
imul
pop
push
leave
sar
jg
mov
push
iret
sbb
test
add
mov
fldt
sbb
mov
and
push
mov
mov
stos
aam
mov
inc
fsubr
and
xchg
sub
push
dec
jle
out
loope
xlat
mov
in
in
adc
std
sub
add
mov
ja
push
divl
push
jne
xor
push
les
sti
into
js
sub
rcrl
sub
popa
push
dec
mov
mov
into
add
sahf
stos
cmc
fcmovb
cli
jg
mov
int3
xchg
push
pushl
lea
dec
in
ret
push
jg
sub
cmpsl
andb
aad
sar
xchg
clc
push
icebp
add
int3
sbb
dec
jnp
fcomps
sub
xchg
lods
es
ret
outsl
aam
pop
dec
cmp
sub
or
scas
or
sbb
xor
dec
int
movsl
mov
cmp
inc
insb
xchg
cltd
adc
scas
push
xor
shrl
ret
and
in
movsl
mov
test
xor
decb
ja
mov
cmp
push
cs
fsts
mov
push
dec
and
add
pop
jmp
and
insl
push
mov
movsb
ret
jmp
lcall
std
fsubp
movsb
sub
jnp
push
imulb
sbb
lods
add
cmp
jg
movsl
and
data16
loopne
scas
insl
or
sarb
pop
push
outsb
cmp
insb
loop
dec
push
ret
add
inc
pop
xlat
pop
mov
fldt
adcb
sub
pop
data16
imul
cmp
mov
aas
int3
mov
sbb
cmp
std
mov
ror
test
ljmp
jp
add
mov
rcrl
jecxz
adc
push
xchg
or
or
cmc
popf
mov
cwtl
jo
push
cmp
sub
shlb
push
jmp
and
mov
ja
loopne
and
pop
sbb
inc
pop
test
xor
enter
inc
std
sahf
dec
or
mov
mov
mov
mov
ds
adc
sbb
mov
or
push
stc
and
jge
add
or
inc
mov
inc
mov
push
lds
cld
mov
inc
out
xchg
inc
inc
push
js
cmpsl
cs
out
sbb
xor
hlt
sub
loope
xchg
mov
cmpl
shlb
mov
or
call
push
and
es
or
xor
inc
jmp
daa
cmp
or
insl
mov
rcrb
jbe
push
fsts
xorl
jnp
mov
push
jnp
add
fsubrs
loopne
lahf
cmp
test
fcomps
and
icebp
mov
fldl
mov
ljmp
sbb
in
sub
mov
addr16
lcall
out
xchg
rolb
stos
lret
xor
mov
jl
bound
fucomip
adc
cli
adc
repz
icebp
inc
and
jge
mov
nop
movsl
andb
sbb
js
in
cli
xor
or
shrb
aad
cmpsb
stos
lods
out
jno
pop
sub
and
loop
jbe
neg
mov
mov
xor
cs
cmp
push
testl
mov
lcall
fistpl
clc
int
arpl
push
fwait
aad
into
xor
sub
jl
lods
hlt
mov
sub
inc
or
dec
popa
out
sbb
loopne
int3
das
sbb
xchg
sub
sbb
fisubrl
daa
sti
dec
jecxz
mov
or
sti
aam
mov
adcb
dec
or
and
mov
jp
jbe
mov
cmp
add
fistpl
cmp
bound
rcl
add
sahf
cmp
out
inc
in
arpl
repz
aas
pop
xchg
sahf
pop
fldcw
out
dec
mov
es
sub
iret
inc
sub
mov
push
mov
lea
shll
push
ret
cmp
push
xchg
out
mov
loope
enter
das
popa
add
cmp
push
push
test
jge
xchg
xchg
jne
arpl
adc
mov
or
cmpsb
push
inc
push
scas
scas
scas
imul
ss
fs
fsubr
js
inc
lret
outsl
xorl
mov
pop
addr16
xor
mov
loop
lods
subl
and
mov
mov
es
aaa
int
aas
outsb
mov
push
aam
andb
xor
or
pop
mov
fnstcw
loop
push
sub
xchg
or
lods
and
xor
std
les
adc
sub
gs
jno
mov
mov
sbb
adc
testl
inc
mov
cmp
sbb
in
jnp
and
jl
lret
push
add
sub
push
repnz
pop
clc
pop
pop
cld
lcall
xchg
repnz
add
loop
mov
scas
flds
jb
sarb
lods
and
jns
in
cmpsl
pop
dec
xchg
jmp
into
mov
mov
jmp
jp
and
dec
xchg
fs
fs
sbbl
sar
rcr
repz
out
daa
dec
adc
clc
mov
jle
add
push
mov
ljmp
out
outsb
jb
mov
rclb
lods
push
mov
and
push
rorb
jnp
sub
mov
popf
mov
fprem
icebp
xchg
inc
inc
data16
push
add
jge
movsl
outsl
icebp
shlb
mov
sbb
adc
testb
xchg
cmp
inc
mov
ds
arpl
push
adc
lcall
loope
or
jo
sarl
test
fmull
dec
cmp
inc
xchg
das
cwtl
adc
sbb
mov
jmp
pusha
lock
and
mov
lods
jnp
mov
add
fs
inc
aad
pop
sub
xor
or
fsubl
popf
jns
add
mov
or
inc
cmp
or
cmp
clc
or
pop
xor
in
hlt
adc
push
cmp
jmp
xchg
inc
and
ror
rol
xchg
daa
cli
dec
std
imul
push
insb
out
and
sbbb
push
inc
pop
out
enter
dec
sbb
cmp
adc
push
jo
sub
dec
adc
pusha
ja
pop
jnp
push
pop
jnp
and
jnp
cwtl
cld
cmpsl
in
aam
hlt
mov
inc
fisttpl
and
mov
pusha
fldl
cmpsl
xchg
fcomip
sub
dec
loope
iret
push
loope
addr16
xor
mov
out
pusha
lret
sub
fldenv
cmpsb
sub
lods
fs
inc
in
movups
xor
ret
rol
test
bound
add
mov
incb
or
adc
sub
test
nop
mov
mov
sub
in
das
ss
inc
aas
xor
setle
ss
inc
outsb
lret
fwait
in
loope
mov
sub
mov
mov
mov
sbb
pop
inc
in
pop
fbld
or
adc
xchg
dec
dec
and
stc
dec
pusha
dec
clc
mov
les
lods
rolb
aaa
lahf
stos
outsb
out
in
loopne
popf
xorb
push
sbb
jno
mov
movsl
repnz
daa
in
andb
daa
aad
das
sub
add
andl
loope
adc
or
add
pop
divl
jge
mov
and
xchg
mov
mov
je
orb
inc
cmpsl
lcall
or
or
pop
test
iret
lret
inc
divl
mov
xlat
pop
repnz
add
cmpsl
es
xchg
dec
and
dec
cmpsb
dec
adc
fnsave
out
push
lock
xor
cmp
scas
mov
stc
add
pop
fs
cld
imul
rclb
andb
pushf
inc
mov
mov
les
mov
imul
lret
adc
mov
and
cwtl
inc
sub
push
hlt
inc
xchg
pop
inc
jns
hlt
jmp
jmp
in
adc
pop
repnz
lcall
cmp
mov
dec
es
scas
sub
adc
dec
mov
cmc
test
sub
inc
cmp
mov
movsl
jge
pusha
movsl
lods
mov
xchg
shlb
gs
or
mov
inc
mov
sbb
mov
rcl
jecxz
jo
sarl
lea
cmp
lods
add
jmp
icebp
int3
push
mov
insl
cmp
add
lahf
std
loop
mov
iret
dec
cs
nop
shlb
mov
xchg
in
push
dec
sbb
pop
pop
mov
mov
sbb
stos
xchg
addb
cltd
add
movsl
mov
call
scas
sbb
cmp
mov
xor
xchg
cmp
cmp
insb
clc
pusha
mov
mov
mov
or
addb
cmpsb
mov
and
adcb
call
dec
mov
enter
add
dec
fdivrl
mov
stos
fadd
and
mov
push
les
push
push
fsubl
out
add
pop
xor
lret
sbb
ds
adc
fcmovnu
xor
add
xchg
lcall
mov
pop
sbb
dec
cmc
cmp
out
test
xchg
ficoml
gs
push
out
adc
mov
lcall
inc
xchg
shrb
fistps
and
or
mov
repnz
outsb
dec
pushf
add
adc
or
cmpsb
mov
xchg
push
movsb
jp
jmp
repnz
in
jnp
lea
jmp
test
out
out
and
addr16
int
jecxz
inc
adc
mov
outsb
lahf
xorb
repz
pop
scas
shlb
jg
int3
add
mov
cmpsl
das
cmpsb
push
stos
mov
aaa
ret
fwait
out
pop
push
jo
inc
ljmp
pop
cmc
imul
xor
or
mov
lret
xchg
dec
lahf
loope
rorb
mov
or
ja
xchg
imul
adc
icebp
xchg
or
lods
jns
inc
stos
fnstsw
divl
daa
xchg
mov
xchg
addr16
adc
and
cmp
out
jb
fsubrs
adc
dec
cmp
in
pop
mov
cli
aad
popf
iret
mov
jg
adc
out
jmp
ss
add
out
out
insb
jp
loope
nop
push
scas
arpl
dec
int
arpl
stc
je
fucom
pop
bound
xor
jb
inc
cs
xlat
pop
jbe
jge
or
cmpb
cmp
sbb
sarb
cmc
sub
lds
mov
jmp
je
pop
push
loop
in
or
int
mov
int
and
pop
sbb
in
lahf
pop
mov
adc
jp
outsb
xor
in
test
js
negb
test
je
xor
ficoml
bound
data16
push
outsl
or
cwtl
js
mov
or
jmp
jnp
and
out
mov
add
fcomps
imul
or
sub
or
mov
sub
pop
jbe
inc
push
sub
dec
and
cmp
sahf
addr16
mov
insl
nop
push
cmp
xor
in
dec
mov
inc
sub
pop
sbb
scas
jno
lods
test
gs
std
jae
inc
ja
mov
inc
inc
mov
aaa
leave
or
popf
mov
and
adc
push
mov
adc
push
push
mov
hlt
sub
les
mov
dec
xchg
push
mov
jp
fldenv
xchg
fnstcw
cmc
mov
sub
arpl
lds
xchg
mov
shlb
mov
mov
mov
gs
inc
out
push
fcomip
jl
dec
jecxz
flds
popa
mov
fmull
mov
test
adc
std
dec
xor
jbe
ret
push
nop
ds
mov
popfw
push
lahf
test
stos
jge
sti
les
out
cmp
jns
stc
movsb
pusha
and
and
xchg
xchg
push
mov
stos
or
jle
arpl
push
dec
std
loopne
xchg
js
out
pop
add
cmp
push
out
ror
in
push
adc
mov
lahf
out
mov
or
mov
xor
test
mov
jbe
fistl
andl
test
mov
push
add
subb
or
dec
outsl
add
fisubrl
inc
and
out
test
rcll
out
adc
stos
iret
lods
fnsave
in
mov
or
shll
inc
lea
fsubrs
jnp
dec
cmpsb
mov
loop
aaa
lret
jmp
jmp
call
inc
test
mov
sbb
rclb
cli
enter
fsubrl
shlb
lock
arpl
push
push
fmuls
insl
xchg
dec
outsb
in
inc
adc
icebp
icebp
jge
movsb
cmc
scas
out
sbb
pop
jmp
mov
jnp
inc
enter
test
ja
mov
stos
jnp
pop
clc
fnsave
call
cmc
repnz
cmp
loop
xchg
scas
cmp
jno
and
mov
jp
out
loopne
inc
and
test
mov
push
cmp
mov
jg
rorl
adc
push
jecxz
xchg
or
cltd
mov
mov
push
jnp
adc
roll
jo
or
cmp
shrl
fwait
mov
stc
sbb
pop
shrl
mov
adc
aaa
and
repnz
lock
cmp
dec
jbe
movsl
into
lahf
insl
je
leave
fistpl
cld
mov
out
cmp
sti
repz
sbb
std
mov
les
outsb
and
dec
jp
mov
addr16
mov
cmc
pop
add
sbb
aaa
push
push
mov
or
push
arpl
sub
js
rorl
insb
mov
out
mov
or
idivl
ret
jp
sbb
in
mov
dec
mov
sbb
inc
push
add
fisttpll
pop
test
nop
add
mov
xchg
fs
dec
xchg
ret
xchg
adc
inc
or
pop
add
jmp
push
in
cmpsb
pusha
xchg
mov
rclb
dec
outsb
dec
adc
jb
movsb
mov
jle
subl
xor
sub
jle
inc
xor
cmp
shlb
add
cmp
lret
sub
add
jle
inc
dec
jle
mov
sbb
test
pop
cwtl
mov
fbstp
out
pop
push
lret
mov
pop
je
sub
int
sub
push
fisubrl
mov
or
dec
cmc
fwait
mov
push
jmp
adc
aam
and
in
add
in
mov
jne
dec
subl
sub
mov
sub
ljmp
pusha
inc
and
int
shl
xchg
mov
push
sub
adc
cs
push
push
repz
loope
sbb
stc
adc
xchg
stc
gs
and
mov
daa
rol
clc
js
ret
pop
divb
mov
lahf
jbe
cmp
dec
dec
push
fadd
mov
mov
inc
scas
push
out
stos
mov
into
fstpl
cltd
sub
fwait
mov
pop
cmp
fdivrs
rorb
mov
in
and
stc
push
fiadds
or
cmp
lcall
sub
sub
pop
mov
lods
shll
cmp
lock
pop
mov
push
xchg
mov
lret
add
xchg
mov
xchg
mov
push
outsl
and
push
push
adc
add
ret
sbb
int
bound
push
orb
push
adc
stos
mov
std
fsubrl
cmpsl
jle
jp
jns
cmp
repz
scas
cmp
xor
imul
inc
ret
iret
push
sub
outsl
push
outsl
sbb
jne
mov
cli
inc
jns
push
sbbb
inc
pusha
inc
stos
in
lea
mov
je
push
pop
pop
push
rorb
stos
imul
inc
cmp
outsl
inc
pop
imul
mov
aaa
ss
jp
jmp
mov
imul
cwtl
pop
mov
push
cmp
cwtl
add
ret
lret
push
jmp
out
xchg
shrb
and
shll
lods
loop
cmpsb
mov
push
sti
scas
dec
mov
xchg
add
cld
push
mov
loopne
add
data16
and
lods
pop
inc
sub
adc
testl
mov
aaa
xchg
cmp
cmp
repz
lret
rorl
cwtl
xchg
xchg
int3
subl
pop
dec
and
mov
jno
fwait
mov
xor
aam
loop
and
ja
gs
leave
aas
das
inc
data16
ret
insl
mov
push
les
xlat
push
sbb
repnz
jb
aad
add
fsts
ja
dec
jl
mov
xor
cs
push
push
out
pop
lret
call
jge
repz
inc
jne
add
xor
out
push
lret
sahf
xor
inc
push
shr
or
cmpsb
inc
adc
je,pn
or
popf
push
or
pop
or
and
add
dec
fwait
pop
adc
ljmp
out
dec
hlt
in
out
cmpsl
adc
fwait
mov
sbb
movsb
push
adc
pop
mov
dec
ret
insb
adcl
add
cmp
jecxz
or
lret
enter
pop
xchg
in
mov
flds
inc
and
sbb
xor
sub
out
push
ja
pop
and
in
mov
mov
jp
push
push
mov
out
movsl
pop
dec
sti
lret
add
rcll
repz
xchg
push
mov
push
ds
lds
jg
jp
in
add
insl
xor
dec
inc
jmp
mov
icebp
testl
xchg
test
adc
inc
pop
mov
dec
repz
data16
or
shlb
fs
lahf
add
enter
sub
xor
mov
add
lods
fwait
inc
adc
jno
inc
and
popf
pushf
loopne
xorb
rorl
in
lret
mov
fidivs
ds
jae
xor
push
lea
xor
pop
adc
push
dec
jnp
aaa
fisubrs
scas
push
pusha
dec
jae
out
sbb
xchg
pop
sub
mov
and
in
test
pop
clc
xchg
mov
lret
je
stc
xchg
repnz
fwait
mov
stc
hlt
leave
dec
cwtl
xor
push
push
sahf
lods
aam
lret
pop
shll
add
fs
xchg
loope
repz
lret
dec
outsb
mov
mov
mov
into
lret
sbb
mov
push
sbb
imul
cmp
dec
inc
xlat
or
test
cmc
cmp
outsb
fimull
lods
push
fsubrl
loop
test
mov
dec
sub
dec
ret
xchg
mov
xor
out
call
test
dec
xchg
aaa
push
cli
aas
jb
lock
jbe
dec
inc
inc
sub
and
cmpl
hlt
adc
and
ficomps
mov
push
xchg
in
mov
add
ja
ficoms
icebp
hlt
in
cmp
xchg
sahf
std
lret
jp
and
fldcw
jno
pop
cmp
sbb
sub
jge
rclb
in
inc
in
scas
push
outsb
ret
ds
lock
push
jne
lcall
movsb
les
sub
or
ljmp
neg
shlb
push
movsb
insb
cmp
lret
mov
xchg
addl
daa
aas
scas
adc
loopne
fwait
xchg
cmc
jb
loope
jmp
pop
frstor
movsb
lods
xor
imul
xchg
xor
cmp
enter
rep
add
test
std
dec
cmpsb
xor
dec
scas
sarb
mov
xchg
rolb
sub
bound
fsub
test
fcompl
adc
into
fwait
or
les
out
lods
int
mov
cmpsl
jo
jmp
imul
ror
pushf
xor
or
sub
push
mov
dec
icebp
or
ljmp
bound
test
arpl
stc
and
push
jge
sarb
mov
je
sub
push
jbe
sbb
jbe
int
shrl
rol
mull
inc
inc
inc
loop
das
les
daa
push
mov
testl
or
stos
ret
pop
movq
fsub
xor
mov
cmp
sahf
stos
icebp
dec
shrl
sub
xor
lahf
out
shll
in
imul
sbb
and
jg
and
sub
aad
sub
aam
insb
daa
xlat
or
jae
js
scas
jae
mov
aad
xchg
sbb
dec
mov
push
or
push
fldenv
jecxz
ror
fmuls
push
movsb
cmpsb
jno
jle
or
jmp
test
loopne
jle
fstps
repnz
ljmp
stc
stos
mov
fistl
xchg
bswap
mov
sub
fwait
dec
mov
bound
mov
dec
jne
ja
stc
sbb
dec
inc
jecxz
ret
ja
mov
sbb
or
in
lock
leave
mov
inc
mov
xchg
arpl
add
lea
fwait
pop
sbb
adc
jns
jecxz
jle
jp
mov
mov
xchg
pop
xor
test
insl
xor
sti
inc
mov
dec
xchg
ret
std
ret
pushf
out
aad
outsb
cmp
pop
imul
sub
jg
push
lds
lahf
inc
into
jne
ficoms
xchg
outsb
cmp
scas
icebp
es
cld
ret
push
lds
test
gs
cmp
pop
aas
cmpsb
jns
xor
pusha
sub
das
gs
jne
jl
jle
test
cmp
jg
cmpsl
imul
fcomps
dec
test
adc
push
aam
jb
sti
stos
mov
ret
sbb
addr16
pop
cmp
stc
loopne
cmp
lods
popa
jb
dec
aam
xor
int
test
push
add
adc
sbb
lret
jno
xchg
cltd
inc
add
cmovs
jmp
dec
inc
jns
xor
in
add
aad
loopne
enter
mov
aas
out
mov
out
add
xor
lods
xchg
lcall
pop
inc
or
sbb
jno
mov
xchg
aad
inc
ror
test
cmc
sub
push
sbbl
test
cmc
jmp
aad
xor
mov
inc
ret
sbb
in
test
push
sub
rcll
push
jne
pop
adc
fldl
je
cmp
aaa
push
test
movsb
sub
add
jne
cs
dec
insb
aam
and
dec
push
repnz
jecxz
lods
jle
cld
jmp
repz
and
jns
rcrl
adc
mov
xchg
mov
adc
adc
idiv
push
shrb
fadds
loopne
xlat
sub
sbb
loop
jbe
mov
rclb
and
inc
nop
andb
pop
xchg
xor
xchg
fwait
jae
ficoms
pop
adc
push
mov
mov
clts
ret
and
mov
and
push
inc
jmp
push
jmp
sub
mov
loope
xchg
imul
out
inc
cmpsb
stc
add
gs
pop
sti
call
push
daa
xor
pop
adc
jno
sub
adc
push
xchg
stos
dec
push
jecxz
scas
sub
cmpsb
fnstenv
xchg
and
or
inc
add
add
xchg
movsb
mov
xchg
inc
push
adc
loop
adc
dec
imul
into
sub
rcl
push
mov
cwtl
inc
push
push
mov
jbe
test
shr
inc
lret
mov
push
adc
xchg
in
dec
test
add
mov
hlt
testl
lods
dec
xchg
cmp
inc
dec
mov
insb
xor
rolb
dec
jne
adc
in
sbb
cmp
loop
out
enter
cmpsl
push
sti
jp
sub
sbb
hlt
mov
jge
or
repnz
jae
xor
cmp
jb
fistps
mov
arpl
or
mull
cmovl
mov
adc
mov
add
les
cmp
lcall
cmpsb
xchg
xor
shrb
fmull
inc
lahf
loope
lds
xchg
pop
add
mov
hlt
pop
adc
jp
in
push
adc
mov
dec
pop
and
xor
push
sbb
mov
pop
imul
pushf
xor
imul
icebp
test
hlt
fsubl
lret
xchg
push
push
mov
dec
inc
popf
pop
inc
and
mov
jne
mov
cmp
pop
sarb
fsubrl
clc
mov
test
punpckldq
cwtl
xor
xchg
out
push
xchg
and
mov
stc
mov
sbb
enter
lods
imul
adc
loopne
pop
xchg
push
popf
xorl
aam
lods
fdivrl
test
mov
cli
dec
fwait
cwtl
out
dec
jnp
arpl
jmp
ret
test
aaa
dec
mov
sub
bnd
push
mov
mov
pop
push
clc
xlat
pusha
stos
inc
pop
jl
adc
insb
lods
fisubrl
jnp
inc
pop
mov
add
pop
popl
lahf
bound
inc
mov
add
xor
sbb
add
and
in
sbb
adc
mov
add
xchg
jbe
push
and
arpl
inc
add
add
add
out
jge
aad
adc
inc
mov
mov
repnz
aam
mov
leave
fldt
nop
fcompl
push
push
paddd
daa
jg
fucomi
push
daa
push
pop
sbb
adc
pushf
jbe
stc
dec
or
out
rclb
or
ret
jne
es
vucomiss
sbb
jge
xchg
enter
std
add
mov
gs
and
cmc
pushf
adc
add
outsl
fldl
xchg
jne
aas
cwtl
mov
call
mov
repz
xor
xchg
mov
fildl
push
lods
jno
scas
inc
lds
pop
dec
daa
mov
pop
dec
sahf
call
dec
popf
movsl
adc
imul
popf
rcrb
notl
in
bound
dec
pop
xor
mov
dec
adc
mov
cli
jmp
mov
and
sti
inc
cmp
in
jle
div
inc
push
imul
sbb
imul
add
addl
push
pusha
in
sbbl
je
sub
pop
stc
adc
adc
inc
insl
mov
jl
pop
test
sbb
add
inc
xor
inc
push
xchg
leave
je
jle
jecxz
add
fistpl
pop
mov
or
stc
sbb
and
mov
shlb
std
fisubl
flds
cmp
stos
addr16
scas
lret
inc
lahf
jmp
retw
arpl
sbb
mov
and
mov
orb
notl
mov
jl
sub
pop
ds
push
negl
sub
mov
sub
repnz
cli
or
cmp
dec
loopne
movsb
inc
sub
insl
ret
cmp
push
aam
adc
leave
andl
lock
addr16
fsubl
add
clc
fsubl
loop
sub
jae
push
or
push
sarb
push
fwait
mov
push
idivb
int3
sub
inc
adc
testl
in
jb
fisttpll
cmpsb
insl
das
cmpsl
cltd
xchg
mov
mov
xchg
lret
stc
cli
stos
sub
mov
dec
xlat
std
and
sbb
adc
pop
pop
ret
inc
or
add
in
or
xor
pop
xchg
scas
lret
push
roll
cwtl
cmp
cs
cld
cmp
jno
add
fldcw
cltd
std
or
bound
or
mov
and
jno
das
outsl
mov
pop
movsl
lahf
mov
and
lods
xor
pop
add
fistps
insb
in
rcll
popf
out
xor
mov
dec
clc
repz
and
jmp
push
ror
jecxz
cmp
mov
mov
cli
pop
call
cmp
jmp
dec
add
ljmp
std
in
in
and
dec
and
cmp
outsl
sbb
push
xchg
xchg
loope
fisttpl
lret
mov
cmp
jns
lods
enter
xchg
aaa
jbe
dec
mov
scas
xchg
testb
inc
lds
cmpsb
push
xor
jae
cmp
add
or
ds
adc
xchg
xorl
xor
aas
cmp
adc
push
adc
xchg
sub
mov
leave
mov
jge
movsl
add
push
pop
mov
mov
stos
popf
pop
arpl
stos
and
insb
pop
out
into
andb
fistl
insb
mov
and
arpl
orb
repnz
subl
inc
pop
xor
stos
popa
mov
adc
mov
xchg
stc
add
into
adc
repz
lcall
push
push
repz
punpckhbw
das
lds
jnp
js
xor
lock
pop
xor
pushf
mov
in
lret
xchg
sub
cmp
fidivl
cwtl
sub
and
inc
lcall
aad
ret
hlt
sbb
inc
js
mov
sar
mov
mov
cmp
imul
pop
push
mov
jns
jne
testb
stos
lock
les
fistl
popf
bound
and
inc
call
mov
cmp
mov
add
xchg
inc
jb
mov
sbb
leave
dec
bound
int3
div
icebp
sub
sub
in
dec
insb
mov
ljmp
pop
mov
nop
nop
fsubp
xor
ret
repz
sub
cli
pop
mov
rcl
in
ret
cmpb
pop
aas
nop
sub
add
daa
cld
int
scas
mov
or
adc
std
ss
push
fcoms
inc
add
repz
sar
inc
mov
ljmp
sbb
scas
xchg
repz
cmpsl
sub
xchg
les
gs
inc
pop
data16
pop
cmp
mov
out
push
negb
shll
sbb
out
icebp
adc
xchg
mov
pop
fisubrs
shll
imul
mov
cmp
fs
daa
inc
test
int3
dec
mov
mov
inc
inc
dec
cmp
les
jecxz
in
pop
mov
sbb
sbb
jns
lahf
jo
xor
int3
inc
mov
sarb
popf
in
lret
bound
ja
xlat
push
call
cmp
cmp
xor
pop
call
sbb
add
int3
cltd
data16
mov
push
xchg
push
test
fsubrs
adc
sbb
xchg
push
ja
jle
scas
push
mov
in
std
pop
ret
cld
lret
inc
mov
outsb
push
push
icebp
pop
insb
sbb
push
gs
ds
pop
fdivl
fdivrs
popf
xchg
sub
mov
les
scas
bound
sub
setl
fisubs
mov
cmc
mov
jl
push
jbe
cwtl
daa
push
inc
inc
adc
or
push
sub
repz
adc
addr16
xorb
mov
xor
lret
dec
xor
and
dec
mov
push
ret
popf
test
adcb
xchg
pop
inc
mov
and
ret
mov
iret
std
jno
or
mov
out
adc
test
aam
adc
call
mov
ljmp
inc
lock
sub
xchg
or
loope
imulb
testb
xchg
cwtl
mov
arpl
xchg
ja
xor
xor
inc
test
fcoml
pop
push
jg
les
leave
sbb
scas
scas
loope
or
mov
add
pop
dec
out
scas
pop
mov
mov
sbb
and
aaa
sbb
incl
je
test
stos
repz
cld
scas
bound
outsl
repnz
jne
addr16
pop
push
xchg
xchg
outsb
or
push
dec
jle
jge
sti
rorb
repnz
jnp
sub
sbb
mov
mov
in
push
movsb
rolb
dec
sbb
push
jns
aas
mov
aam
test
sub
lock
movsl
pop
pop
push
dec
mov
das
icebp
adc
popf
scas
and
xchg
or
jmp
pusha
mov
cmpsb
xchg
xchg
cmp
cwtl
pop
scas
sub
daa
fnstenv
iret
lret
adcb
xor
adc
rcrb
test
jmp
fimull
stos
je
dec
adc
sub
mov
mov
push
scas
ret
fwait
movsb
dec
xlat
notb
pop
aas
push
and
adc
cmp
popa
imul
stos
mov
roll
push
iret
daa
lahf
addl
or
xchg
ficoms
xchg
fbld
les
in
out
shl
mov
pop
or
gs
into
and
inc
popa
fcoml
pop
rcrb
test
lds
push
jbe
imul
push
lods
sbb
lahf
jl
or
loope
hlt
mov
fdivl
add
movsb
test
stos
xchg
mov
in
enter
sbb
inc
xor
mov
loope
jecxz
adc
mov
xchg
push
pop
icebp
ja
enter
in
pop
fcmovnb
mov
pop
cmp
pop
jle
mov
gs
in
insb
push
int
cmp
adc
shlb
push
adc
sub
pop
add
sbb
leave
das
daa
out
cmp
pop
pop
call
mov
xor
shll
mov
imul
dec
test
mov
pushf
xchg
data16
scas
add
mov
xor
xchg
sbb
add
ret
jp
pop
mov
inc
scas
push
imul
into
sbb
lock
cwtl
mov
add
addl
fstpl
divb
ljmp
arpl
dec
fbld
aam
or
test
cwtl
or
sub
push
movsb
or
pop
jo
imul
xchg
test
mov
sbb
fbstp
sub
pop
adc
in
sbb
jl
in
shl
xor
sahf
and
dec
adc
cmp
fiadds
sbb
jl
mov
xchg
pop
mov
lret
sbb
jo
push
pop
in
fisttps
jb
inc
pop
push
jge
es
push
pop
imul
dec
adc
xchg
dec
clc
test
ljmp
pop
push
js
add
mov
std
jp
push
lock
dec
cmp
add
les
pop
push
cmp
pop
sbb
mov
add
data16
addr16
sub
rorb
in
imulb
adc
push
and
ret
in
imul
or
add
popa
inc
mov
cmp
xor
jg
movl
inc
enter
inc
or
sti
pop
jno
enter
mov
fwait
movsl
inc
ljmp
in
aad
nop
test
outsb
fldl
mov
lret
es
sub
xor
mov
sub
ds
inc
jp
jno
push
mov
stc
fnstsw
sbb
jo
or
add
xchg
jne
xor
pop
das
mov
push
sbb
inc
test
or
cli
cwtl
pop
sub
subl
out
push
sbb
pop
in
xor
cmpsl
movsb
mov
or
push
pop
pop
ret
stos
and
xchg
cld
lret
cmp
out
cmc
imul
shlb
movsl
jmp
inc
lret
enter
insl
jge
stos
xchg
lret
test
movl
mov
in
jb
cmp
lods
dec
add
adc
loop
int
pop
out
pusha
and
out
pop
xor
add
mov
or
bound
ss
cmp
xor
push
sub
xor
jecxz
sbb
mov
insb
mulb
and
sub
call
rol
in
sahf
stc
in
inc
xchg
sarl
dec
pop
mov
dec
inc
dec
adcl
jle
in
sarb
pop
filds
dec
mov
rolb
lahf
idivb
sub
cmp
add
sub
xor
addr16
add
rorb
sbb
lahf
cmp
cmp
lret
mov
repnz
mov
add
add
mov
in
arpl
data16
fwait
aam
stos
loope
push
clc
sub
or
mov
rorb
popf
pop
sbb
xchg
or
sub
mull
punpckhbw
ret
cmp
add
movsl
mov
dec
jae
lcall
fwait
and
jg
fidivrs
incl
mov
mov
fsubr
jo
popf
xchg
pop
popf
lahf
mov
lock
sbb
cmc
imul
mov
mov
roll
xor
and
push
and
sbb
cmp
pop
xchg
sbbl
jp
xor
lcall
inc
xor
push
pop
into
nop
push
test
cmpsl
push
push
lret
sub
shrb
mov
adc
aad
mov
out
fdivs
add
cld
ds
not
pop
cmp
pop
adc
stos
stos
es
mov
adc
into
push
xor
sub
adc
pop
xor
gs
dec
and
out
lods
sub
ljmp
sbb
push
pushf
enter
xchg
mov
inc
or
push
cs
popa
icebp
push
out
imul
in
sbb
adc
push
add
ljmp
or
sub
fwait
popl
mov
dec
dec
subb
cmp
mov
rcrb
mov
xchg
movsl
adc
rclb
lahf
jo
das
mov
xchg
aas
xchg
cs
jnp
out
in
addl
cs
cli
sahf
mov
adc
jge
call
ret
gs
pop
ss
mov
mov
mov
xchg
fisubl
jb
shll
or
dec
test
sbb
inc
sub
and
in
mov
dec
jmp
push
pop
mov
roll
mov
and
lret
test
fs
not
outsb
cs
std
ds
pushf
xor
add
sub
sarb
mov
andb
pushl
mov
into
decl
aaa
iret
popa
pop
sbb
sub
add
dec
mov
mov
and
push
adcb
lahf
fcmovnb
or
and
jbe
xchg
dec
aad
inc
jae
mulb
jge
bound
xor
pop
mov
pop
mov
std
adc
cmp
mov
mov
rep
inc
mov
data16
push
mov
pop
jbe
in
call
inc
mov
mov
loopne
push
jno
mov
ljmp
jle
fiadds
jae
out
jno
movsl
insl
std
enter
icebp
aam
subps
mov
push
pop
ficomps
in
test
cmp
aaa
mov
loop
icebp
movsl
mov
xor
jle
shl
leave
mov
aaa
dec
ja
rorb
incl
mov
testb
mov
and
js
mov
jecxz
dec
dec
cmc
das
and
jmp
outsb
sub
fwait
dec
sub
or
loope
and
gs
repnz
jg
out
jge
jno
stc
scas
mov
les
sarl
in
add
pop
push
ret
mov
sub
xchg
and
test
fldcw
scas
ja
jne
and
or
into
dec
insb
sbb
jmp
inc
xchg
into
sbb
ds
pop
jmp
adc
mov
sbb
pop
out
clc
cmpsb
push
sub
inc
mov
fistpll
in
iret
ds
subl
dec
dec
cwtl
push
push
lods
insl
lret
int
data16
pop
scas
fwait
stos
pop
pminsw
leave
std
stos
out
pop
data16
ja
jp
pushf
lea
inc
popf
add
bnd
cmpsl
daa
icebp
lahf
push
cmp
lcall
out
sbb
pop
cmp
subb
mov
xor
add
cmp
mov
leave
xchg
adc
sub
pop
jmp
and
mul
add
and
clc
mov
jb
pop
icebp
xor
jo
faddl
adc
inc
xor
addb
and
xor
cmp
jnp
fnstenv
iret
xchg
and
shrb
clc
int3
mov
in
shll
dec
test
dec
repz
inc
push
add
pop
iret
cltd
xchg
xor
fcompl
sbb
daa
mov
outsl
xor
sti
or
repz
jp
push
dec
test
cwtl
out
mov
sbb
fldcw
push
fidivl
xor
add
aad
lret
mov
popa
jl
mov
fldcw
xchg
out
pop
bound
test
pop
dec
inc
xor
loop
jp
jl
outsl
sbb
add
ret
dec
pop
ds
adc
add
add
sbb
mov
dec
xor
ja
mov
popa
and
xlat
inc
xchg
call
or
in
in
fsubr
lahf
mov
rol
cs
push
mov
mov
imul
popf
je
cmc
rol
movlps
cmp
adc
insl
mov
dec
mov
das
leave
insl
push
shll
aad
mov
rep
jo
pop
imul
mov
push
cmpsl
sub
pop
in
sub
pop
ficompl
sbb
pop
and
call
sub
sub
dec
aaa
jne
mov
push
pop
jbe
aam
data16
jmp
stc
push
push
fildll
ljmp
call
mov
scas
push
push
cli
pop
and
mov
add
or
add
test
push
arpl
mov
add
push
push
inc
mov
daa
aas
popf
or
or
add
pusha
imul
mov
sub
jns
push
insb
aas
out
push
imul
xor
shl
inc
mov
xchg
sbb
fcoml
add
mov
adc
jle
pusha
fsts
push
push
cmp
fiadds
mov
shlb
mov
sarb
push
mov
sahf
push
pop
cmp
aaa
je
push
dec
pop
pop
mov
pop
jmp
jo
ret
aaa
int3
xchg
loopne
xor
jmp
adc
cmp
push
or
insl
xchg
repz
aad
nop
sbb
push
dec
and
inc
xchg
mov
test
cmp
push
sahf
daa
dec
jne
fs
addr16
jmp
aaa
fs
jge
push
lret
gs
cmp
enter
test
pop
jle
lcall
mov
imul
mov
pop
stc
cmp
inc
pop
jns
dec
or
scas
push
jnp
test
psrld
pop
mov
cwtl
aad
pop
inc
xchg
xchg
or
enter
pop
mov
push
out
fnstcw
and
into
int3
loopne
cmp
jae
enter
add
mov
jmp
mov
mov
pop
mov
and
lahf
and
push
xchg
dec
mov
cli
xor
gs
roll
add
mov
push
mov
pop
and
mov
imul
pop
mov
out
push
shr
movsl
mov
fstpl
div
lods
addr16
push
jmp
dec
sub
dec
lods
or
push
sbb
sbb
adc
jmp
mov
orl
pop
outsl
jge
adc
add
and
cmp
xchg
lods
lahf
fdivr
mov
sbb
mov
flds
imul
mov
cmpsb
push
xor
adc
adc
adc
loopne
push
mov
lcall
test
mov
std
shr
dec
lea
jge
xchg
xchg
or
and
push
push
dec
imul
pop
pop
inc
fnstenv
and
bound
push
repz
adc
push
pop
mov
cs
stos
mov
out
adc
and
movb
mov
dec
pushf
add
xchg
and
push
xchg
adc
lret
jp
adc
pop
push
stos
and
aad
push
jecxz
pop
das
mov
loop
cmc
sahf
in
push
imul
pop
in
mov
mov
cltd
ja
sbb
int3
jl
inc
leave
pop
push
pop
pop
mov
adcb
mov
push
mov
xchg
das
xchg
hlt
pop
or
aaa
xchg
enter
test
and
movsb
push
subb
mov
fisubrl
lret
sarb
push
mov
sub
pop
shrw
nop
movsb
add
or
insb
jl
enter
ss
daa
add
mov
mulb
push
je
xchg
pop
xchg
out
cmp
pop
je
pop
cmpsl
call
xor
push
test
scas
shrb
sbb
outsl
mov
jae
push
mov
ss
mov
inc
and
push
push
jno
aas
loop
pop
mov
push
cmp
xchg
aas
dec
into
inc
aaa
adc
icebp
mov
fsubl
sbb
push
or
inc
jnp
and
das
aaa
test
pop
cmpsl
xchg
stc
xor
adc
fisubrl
or
mov
in
mov
push
push
arpl
inc
cmp
mov
gs
jg
flds
lods
in
dec
xor
repnz
lahf
cmpsl
inc
movsl
sbb
jecxz
movsb
loopne
add
cmp
mov
xor
push
les
mov
mov
jb
lock
jecxz
mov
push
out
inc
push
or
add
xchg
in
ja
notb
mov
xchg
jecxz
push
push
mov
test
and
test
stc
mov
push
lods
lcall
insl
movups
mov
inc
out
stos
das
shlb
xor
xor
gs
and
inc
adc
fmul
mov
sarl
movsl
fcmovbe
stc
unpckhps
and
dec
push
out
sub
movsb
dec
decb
scas
movsl
jp
xlat
and
or
cld
mov
sbb
mull
mov
andb
and
mov
adc
xor
mov
or
popa
and
int3
push
sub
mov
movsl
je
mov
pop
aaa
pushf
mov
in
sahf
fnstcw
jnp
mov
and
je
mov
mov
mov
mov
jno
and
repz
dec
shrb
lcall
lock
ret
lods
ljmp
popa
push
js
push
pop
add
repz
jns
inc
push
pop
shl
stc
jnp
in
sbb
mov
ret
mov
adc
outsl
aas
hlt
imul
mov
stos
mov
jp
mov
mov
sub
into
xor
arpl
stos
push
or
inc
sar
scas
lahf
mov
push
or
mov
loopne
lcall
fsubs
out
pop
mov
sub
inc
push
sbb
or
dec
sub
fcoms
mov
lods
popf
cmc
dec
loopne
and
stos
mov
xchg
pusha
jb
movsl
pop
pop
mov
push
mov
out
inc
arpl
sub
push
jno
faddl
cmp
stos
repz
add
or
fisttps
mov
test
daa
dec
fwait
imul
mov
jmp
outsl
outsl
xchg
cmp
cmp
mov
sbb
fmull
jg
fdivs
dec
push
push
pop
mov
je
jp
xchg
push
jg
mov
enter
sti
mov
pop
popa
loopne
out
rcrb
mov
xchg
dec
cmc
in
data16
jnp
add
int
repnz
cmpsl
jg
inc
clc
or
pushl
cmc
repnz
xchg
dec
std
mov
dec
imul
dec
test
mov
mov
mov
in
cld
sarl
cmp
lods
xchg
popa
dec
adc
aas
imul
inc
and
pop
mov
push
sbb
cld
stos
jns
xchg
cli
aad
arpl
mov
mov
jo
or
int
test
mov
repz
pop
scas
sbb
lcall
das
fstp
inc
dec
dec
repnz
sbb
xchg
mov
jp
leave
push
cmp
repz
int3
push
dec
test
or
cmp
dec
jle
cmc
test
xchg
pop
rclb
fnstcw
pop
and
xor
rcll
incl
xchg
repnz
gs
cmc
and
mov
push
push
jg
nop
loope
sub
sbb
sti
imull
and
add
scas
in
jbe
lcall
cli
negb
mov
xchg
lret
insb
mov
filds
xchg
scas
cmp
sub
shl
sbb
mov
sub
lcall
mov
dec
mov
or
mov
rcrb
inc
lock
insb
xor
xor
pop
push
nop
add
out
mov
lock
call
sbb
xchg
stos
scas
and
dec
jbe
pop
mov
mov
stos
scas
dec
call
mov
jne
les
push
into
sub
adc
ja
in
popf
dec
lock
adc
sbb
test
pop
xchg
pop
pop
int
sub
mov
sbb
xor
or
sub
ljmp
add
js
sar
xchg
jecxz
nop
outsl
loopne
adc
int3
jmp
sub
cmpsb
or
push
lcall
imul
mov
mull
inc
les
push
jg
and
dec
push
test
sti
jo
inc
xchg
testb
pushf
lret
addr16
sub
push
jp
jne
jmp
xchg
inc
xlat
push
dec
scas
mov
adcl
test
out
sbb
fmuls
and
int
cmp
push
jne
pop
mov
test
jg
xor
mov
pop
packsswb
add
cmp
add
dec
pop
adc
out
lods
imul
pop
mov
rcr
jnp
pop
push
mov
aad
or
sub
push
cmp
and
shrb
ficompl
ds
dec
dec
int3
mov
add
add
adc
xor
rorb
movsb
sbb
or
hlt
jbe
popf
pop
adcl
sbb
cmp
pop
ds
jno
mov
jp
addb
dec
cmp
add
clc
rcl
leave
add
jl
mov
cmp
adc
fiaddl
add
inc
xor
inc
ds
lock
mov
test
inc
popf
mov
dec
xor
push
dec
fildll
ds
int
punpcklwd
jmp
adc
fisubrl
dec
stc
push
js
arpl
fdiv
and
jp
ja
and
push
push
ds
fnstsw
lea
xlat
dec
ret
inc
jecxz
mov
inc
xor
push
sbb
sbb
sub
notb
lea
inc
jne
daa
inc
cwtl
push
mov
mov
lret
cmc
xor
hlt
inc
movsb
mov
fnsave
lds
jb
mov
repz
lock
sub
inc
insl
dec
cmp
insl
cs
cmc
shlb
mov
std
mov
mov
jns
pop
hlt
pop
xchg
dec
shlb
push
mov
adc
mov
mov
mov
mov
nop
inc
sub
pop
push
lea
sub
sbb
int3
cli
andl
imul
pop
mov
mov
imul
pop
add
gs
je
scas
cmp
pop
cmpsl
cmc
push
xchg
loope
sub
int
mov
into
mov
popa
jmp
push
out
out
mov
fidivl
mov
and
xchg
ljmp
pop
mov
xor
add
or
fs
adc
fsubl
pop
mov
jmp
insl
lods
sti
and
lcall
test
leave
out
xchg
pop
adc
dec
xlat
or
call
scas
icebp
ljmp
ja
add
lret
xchg
scas
ds
test
sub
insb
mov
pusha
push
in
or
pop
fwait
cmpsl
clc
shr
mov
dec
mov
rcrl
pushf
mov
shlb
icebp
or
add
xchg
bound
push
shll
aam
lods
dec
pop
test
sbbb
xlat
fcompl
das
sbb
mov
sub
lods
or
sti
push
push
pop
xchg
pushf
pop
clc
cmp
sub
fimull
jge
mov
xchg
and
repnz
outsl
xchg
dec
leave
mov
adc
mov
and
adc
push
dec
mov
xchg
inc
or
xor
sub
das
sahf
mov
cld
pop
xchg
test
mov
outsl
repz
arpl
int
xlat
dec
jle
dec
clc
loope
roll
inc
mov
fwait
test
sub
stc
jae
inc
addr16
aam
jle
pop
in
outsb
call
inc
mov
nop
cmp
pusha
int3
inc
mov
mov
xchg
or
add
arpl
in
jb
repz
mov
jge
insb
pop
movsb
into
out
es
scas
rolb
add
fcoms
and
inc
or
popa
adc
adc
popf
cmc
aad
cmp
xor
pop
and
cmpsl
cmpsl
pushf
shll
dec
sbb
das
xor
fdivp
cmc
lods
data16
cmpsb
or
movsl
aad
xchg
cmpsl
in
call
pop
test
mov
and
xlat
xor
bound
add
insb
xor
jecxz
rcrb
adc
xor
ret
and
sbb
loopne
jb
mov
xchg
adc
mov
adc
inc
aas
outsb
xchg
lods
loop
ret
arpl
xor
sbb
and
nop
repnz
jmp
aam
dec
jg
enter
loope
push
cmp
je
add
jo
cmpsb
inc
fwait
mov
mov
xor
aam
dec
gs
xchg
pop
pop
aas
inc
int3
mov
fistl
sub
in
out
outsb
lock
mov
xor
clc
sub
out
insl
mov
sbbb
pop
mov
or
mov
push
push
xchg
rol
sub
repz
outsb
pop
pop
or
and
std
test
cmp
mov
cmp
jle,pn
dec
std
enter
jmp
inc
dec
in
pop
xchg
je
in
test
dec
sub
jg
jecxz
rcl
popf
lret
inc
push
jns
movsl
into
sbb
cmp
inc
mov
mov
fistps
mov
jecxz
lret
out
xchg
adc
imul
dec
sti
xchg
test
movsl
inc
sbb
inc
adc
rcll
pushf
mov
xchg
adcb
pushf
shll
mov
xchg
mov
cmpsl
mov
fisubs
rcll
inc
pop
in
jecxz
push
out
roll
lret
ficomps
pop
and
pop
imul
sbb
cmpsb
jb
out
pop
movsl
imul
and
fst
push
or
push
rcl
pop
mov
out
jnp
nop
push
or
push
test
int
lret
pop
xorb
push
xchg
lcall
test
jle
scas
push
xor
sbb
push
xchg
mov
mov
rolb
mov
jbe
movsb
mov
stos
cltd
push
popf
and
shl
rclb
std
mov
sub
mov
out
and
fcoml
xchg
cmp
ss
sub
sub
adcb
fadds
push
adc
movsb
lds
stos
in
insl
sbb
mov
cmp
jbe
add
movsb
cmp
movsl
repz
fwait
scas
inc
das
jbe
sub
cmp
ljmp
adc
je
cli
imul
jle
cmp
mov
mov
rclb
cmp
push
push
dec
mov
adc
jge
in
test
cmc
enter
test
xchg
je
add
sub
xchg
arpl
bnd
push
push
or
or
in
bound
cwtl
ds
bound
push
sbb
inc
icebp
jno
push
sub
inc
push
je
test
loop
xchg
cmp
ja
cmp
hlt
jb
pop
jnp
repz
jnp
shrb
adc
jge
fbstp
pushf
daa
push
out
xor
pusha
push
mov
das
cld
js
int3
cmpsl
add
sti
adc
and
xchg
pop
sbb
mov
xchg
dec
inc
jns
pop
mov
icebp
or
cmp
fnstcw
fcmovbe
or
adc
nop
xchg
add
arpl
push
xchg
fimuls
and
scas
lret
sub
sub
mov
std
js
adc
sub
mov
mov
ret
hlt
xlat
inc
rorl
cld
test
mov
sti
outsl
mov
jp
aaa
into
pop
addr16
aas
push
hlt
and
dec
push
ret
stc
pop
lret
ljmp
outsl
iret
fisubs
mov
or
out
or
into
push
dec
add
mulb
pop
ret
pop
add
pop
jbe
les
roll
dec
shlb
mov
xchg
cmpsl
shll
or
fucomi
xor
jge
sub
cmp
pop
je
test
mov
lcall
adc
dec
sbb
jmp
aaa
fcmovb
movsb
ss
sbb
mov
and
mov
and
sahf
std
dec
pushf
jns
shlb
sub
mov
push
daa
cwtl
or
rclb
sar
scas
ret
xor
pusha
fwait
add
mov
xor
pop
cmp
std
jae
fwait
mov
pushf
adc
jae
pop
dec
and
push
loope
jne
pop
out
nop
sub
pop
paddsw
outsb
ret
movsl
add
out
imul
xchg
test
int3
sub
out
sub
or
repz
push
aad
pop
dec
rcll
test
mov
jbe
mov
jae
out
pop
dec
mov
imul
arpl
or
or
mov
sahf
add
xchg
sbb
add
pusha
mov
cld
lock
pop
movsl
imulb
mov
sbb
lock
pop
xchg
lretw
out
xor
mov
frstor
dec
rcr
test
std
test
popa
xchg
cmpb
push
fcomp
adc
and
push
mov
int
jno
sbb
mov
sahf
push
cmpsb
stc
aaa
mov
xchg
mov
int
push
loop
mov
pop
jge
adc
stos
mov
les
hlt
movlps
push
ficoml
push
test
sub
gs
mov
stos
mov
repz
movsl
pop
xlat
pop
dec
pop
imul
adc
out
sarl
push
lods
push
adc
xor
int
imul
call
repz
mov
fidivrl
sbb
xchg
hlt
xor
stc
fidivs
cmp
scas
inc
adc
cs
rcrb
enter
xor
pop
cmp
cwtl
mov
loopne
pop
and
aam
or
sbb
add
lods
mov
imul
loop
icebp
rcll
imul
or
int
loope
jl
or
xchg
sub
pop
push
jecxz
leave
in
insb
test
xor
mov
pop
push
push
mov
cli
outsl
sarb
add
and
dec
pop
test
sub
ss
xchg
dec
xor
daa
orl
out
dec
not
add
jnp
fiaddl
hlt
inc
inc
pop
cli
xor
pop
dec
pop
sbb
mov
lret
inc
test
pusha
or
lahf
test
cmp
es
adc
lahf
inc
xchg
sub
and
pop
test
ror
or
sub
imul
adc
cmp
push
js
ret
mov
inc
ss
and
cmp
or
int3
and
adc
filds
mov
pop
xor
test
sub
inc
test
cltd
popa
data16
add
int3
cmc
dec
mov
je
fistpll
xchg
negb
mov
pop
adc
and
mov
dec
adc
xchg
mov
or
push
dec
fs
mov
cmp
pop
dec
mov
xchg
fwait
cmp
dec
xchg
jae
mov
pop
push
lods
repnz
mov
bound
sub
jo
mov
push
xchg
cmp
sbb
jp
testb
jmp
movsb
adc
notl
mov
out
pop
outsl
inc
cltd
add
imul
or
ret
shll
pop
mov
sbb
stos
shll
sbb
test
into
sbb
stc
push
das
imul
inc
lea
push
test
sbb
outsb
mov
insb
jns
imul
pop
add
inc
cs
fwait
mov
mov
xchg
pop
pop
fwait
mov
sub
pop
aaa
iret
nop
out
sbb
add
mov
sub
adc
sub
or
add
repnz
data16
mov
add
sbb
mov
push
mov
mov
or
sbb
jne
jns
insb
push
jns
mov
and
dec
pop
adc
ds
jo
je
repnz
sti
mov
or
cmpsl
mov
cmpsl
xor
mov
loopne
pop
adc
push
pop
jb
call
push
insl
jbe
sbb
daa
repz
repz
fisttpll
pop
adc
iret
leave
cmpsl
and
mov
fisubs
jle
add
stos
out
in
outsb
in
fbstp
xor
and
pop
cld
mov
call
push
and
mov
cmp
xorb
mov
pop
movsb
cltd
aaa
cmc
or
cmp
sbb
mov
mov
xchg
push
sbb
cmp
into
std
int3
add
adc
push
add
dec
lods
mov
push
int
imul
jns
js
stos
enter
mov
sahf
fsts
push
mov
lcall
ds
jo
lret
sub
sub
fwait
imul
cmp
mov
dec
sub
arpl
sub
sbb
jmp
pop
xchg
push
imul
ret
add
in
jb
mov
shll
adc
xor
sub
pop
dec
push
dec
lret
lahf
es
lret
mov
push
in
clc
adc
in
add
jne
pop
arpl
cltd
push
or
mov
cld
jecxz
inc
pop
mov
fistpl
imul
pop
loopne
leave
fdivrs
jae
push
fidivl
fildll
cli
stos
cli
sar
mov
mov
aaa
in
out
fistpll
jmp
scas
jecxz
into
mov
cmp
stos
repz
loope
lret
mov
dec
push
push
addr16
std
mov
jo
mov
jge
dec
fs
inc
std
cs
cmp
loopne
rclb
fildl
scas
lret
pop
rol
aad
das
mov
arpl
in
pop
jle
jns
decl
mov
loopne
cmp
decl
push
imul
aam
pop
fldcw
xchg
outsl
cmp
mov
dec
dec
stc
lcall
mov
clc
je
imul
outsb
out
ljmp
push
cmp
bound
clc
stos
sbb
popa
lea
stc
insl
decb
mov
sbbl
mov
les
cmp
in
ja
int
jb
cwtl
or
pop
int3
iret
mov
lcall
lcall
cmpsl
push
ss
mov
or
orl
test
lcall
das
lret
pop
jae
and
je
cmpsb
cmpsl
int
sub
cmc
sub
mov
shlb
aaa
lcall
mov
inc
ljmp
xchg
fnstenv
inc
inc
sbb
paddusw
cld
xchg
cld
xor
stos
lea
icebp
js
add
xchg
pusha
sub
sub
popa
inc
fmulp
sbb
ds
jge
arpl
xchg
call
or
sub
mov
je
pop
shrl
or
cwtl
cmp
adc
inc
aad
mov
jb
popa
pusha
sub
popf
rcr
mov
and
mov
sbb
test
cmp
fs
and
fcomps
cmp
and
xor
cmp
outsb
xor
mov
mov
popf
jmp
adc
sub
test
and
jnp
ret
mov
mov
push
fmul
shl
ljmp
sti
mov
insl
repnz
and
mov
ljmp
cmc
jmp
js
aas
orb
dec
daa
neg
cmp
adc
loopne
pop
inc
sbb
jo
movsb
push
xchg
xor
sarb
mov
imul
mov
lret
cmp
aaa
mov
hlt
push
cmp
cmp
loop
lock
fistl
inc
movsb
inc
push
dec
or
pop
adc
lcall
insl
aam
add
dec
insb
fidivrl
fwait
xchg
insb
cmp
nop
add
mov
push
hlt
add
loopne
inc
pusha
add
adc
add
or
fdivrs
icebp
pop
mov
pusha
xlat
jae
jmp
or
dec
daa
mov
sahf
inc
daa
ss
xor
ljmp
leave
inc
lods
test
cmp
sbb
mov
gs
imul
enter
imul
xlat
out
pushf
add
mov
mov
sbb
and
dec
dec
loop
xchg
add
cmpsb
xor
pop
pop
cmp
xor
fsubl
fisttpll
dec
inc
and
sub
in
cmp
jmp
dec
inc
xchg
roll
xchg
repz
push
lret
ret
std
sub
pop
loope
inc
adc
es
adc
in
cwtl
test
pop
and
stc
fstp
loopne
mov
push
mov
mov
jmp
lret
dec
fistpl
push
jns
movsb
xchg
jbe
pop
lods
dec
dec
cmp
sub
adc
and
push
fnsave
je
bound
mov
in
jbe
icebp
cmp
iret
sub
repnz
or
pushf
in
inc
cmpsl
lea
gs
or
movsl
insl
inc
mov
fildll
cmpsb
add
stos
loopne
or
jg
push
repz
xor
cmpl
push
dec
mov
cli
lret
xchg
inc
or
fisubrs
imul
sarl
lea
daa
aaa
imul
mov
sub
inc
xor
xor
sub
sbb
stos
push
inc
and
fcmovnu
jmp
cmp
daa
cmp
mov
push
rorl
fimuls
or
mov
jecxz
inc
sub
jae
pop
mov
subb
test
cmc
pop
loop
lods
in
sbb
dec
mov
icebp
cmp
xchg
stos
push
iret
or
pop
or
enter
js
inc
lret
aas
je
out
mov
pop
mov
sbb
pop
pop
out
call
sbb
popa
xor
jno
movsb
mov
das
ljmp
in
insl
cmc
cwtl
mov
rolb
mov
scas
pushf
xor
gs
mov
lcall
mov
or
negl
pop
stos
mov
callw
aas
jae
mov
sub
arpl
add
test
xchg
push
cmc
aas
fcomps
push
in
sbb
cmpsb
shrl
add
iret
jg
jl
ret
fs
sub
arpl
add
jle
push
xor
adc
jae
aam
xor
lods
add
pop
inc
loop
cmove
ss
or
leave
jp
rorb
push
xor
nop
sbb
iret
xor
cmpsb
or
shlb
outsb
aam
push
ja
jmp
inc
loope
rcll
push
xor
inc
loope
sbb
sbb
leave
or
jb
lcall
dec
push
sbb
dec
xorl
jmp
pop
jae
sbb
aam
lahf
mov
pusha
xor
cmpsl
cwtl
jmp
or
jge
lcall
out
out
jle
cli
popa
mov
mov
fnstenv
aad
jne
ror
mov
ret
lcall
fimuls
jae
hlt
xor
insb
mov
push
sbb
adc
xchg
inc
subl
popf
test
rolb
push
daa
fistpll
data16
jge
fwait
cmc
inc
jg
test
data16
cli
mov
mov
jae
mov
das
insb
or
push
clc
and
sbb
pop
mov
pop
push
pop
pop
std
lods
ljmp
pop
std
mov
movl
leave
jmp
ja
nop
adc
push
js
icebp
shll
cmpsb
test
ret
push
bound
jge,pt
or
fcomps
ficoms
adc
dec
add
loopne
jp
out
or
iret
gs
imul
shl
fisubs
shrl
sbb
in
sub
mov
jmp
enter
rorl
jns
and
imul
pusha
xor
outsl
es
daa
adc
into
jo
ja
inc
lret
sbb
push
pushf
into
jmp
xchg
loop
pop
push
ljmp
outsl
fldenv
push
push
out
popa
lret
aas
outsb
inc
gs
aad
adc
testl
push
movsl
jb
mov
cmc
jne
inc
ss
lock
inc
jnp
orl
popa
pop
cmc
pop
adc
aad
adc
orb
sub
mov
cld
cltd
sahf
sti
popa
sbb
fs
pop
fwait
dec
popf
xor
or
popa
out
shl
pop
sub
jg
mov
daa
jg
mov
pop
les
mov
cmp
or
shrl
iret
mov
bound
out
test
mov
repnz
push
xor
outsb
dec
ds
insl
daa
lods
mov
mov
push
xor
in
cltd
mov
pusha
arpl
gs
adc
pop
mov
je
aad
jl
cmp
movsl
fdivrp
loop
xor
xchg
clc
sbb
test
sbb
sbb
insl
cmp
pop
and
in
fldcw
ljmp
arpl
adc
xor
loopne
xor
adc
repnz
pusha
sarb
add
clc
cmc
cmp
sahf
fwait
test
lods
pop
inc
push
iret
lret
xor
dec
jno
in
push
lds
popf
test
enter
add
xor
repz
daa
fcmovnu
pop
test
sub
out
and
add
and
pop
sub
pop
sub
xlat
jmp
addr16
arpl
push
xor
sub
ret
pop
scas
cmp
push
sahf
scas
loopne
mov
xchg
mov
je
in
cmp
push
in
pop
mov
add
sub
and
cld
jnp
xchg
or
mov
out
jge
push
xlat
int3
pop
lcall
ljmp
adc
daa
pushf
or
xor
jo
out
push
test
mov
xchg
cmp
mov
jae
xor
xchg
inc
aam
inc
mov
mov
orl
leave
gs
mov
negl
cwtl
mov
sbb
jg
mov
add
push
mov
loop
dec
cmp
and
push
dec
sbb
cmp
mov
sbb
sbb
lahf
aad
xor
mov
mov
inc
and
addr16
jnp
jg
add
fcoml
push
pop
mov
imul
stc
adc
and
nop
fstpt
test
mov
sbb
dec
gs
js
mov
jmp
xchg
xchg
inc
pusha
outsb
mov
xchg
xor
adc
int
ds
fdivs
sbb
jmp
test
push
test
int3
insb
ret
pop
xchg
scas
sub
jp
or
cmp
inc
ljmp
shll
out
shrl
dec
sbb
cltd
mov
mov
mov
lcall
lds
mov
pop
test
push
das
negb
sbbb
jae
ljmp
addl
movsl
pop
insl
adc
fsubs
repnz
jo
push
pop
into
pop
loopne
xchg
xchg
cmp
les
push
mov
jge
mov
mov
fwait
and
add
mov
and
sbbb
lcall
jecxz
in
popf
adc
sarl
sub
mov
mov
imulb
jmp
arpl
test
sbb
lods
call
mov
xorb
insb
cmp
push
cltd
test
xchg
sub
lahf
mov
outsl
movsb
iret
test
jno
fwait
xor
fmul
sbb
sbb
ss
hlt
or
mov
add
jge
shll
mov
and
mov
and
jg
xor
ds
fists
fadds
ljmp
into
arpl
inc
jno
fldcw
mov
call
inc
repz
push
enter
xchg
mov
subl
pushf
xchg
sub
inc
sahf
mov
mov
pop
aaa
cs
jecxz
cmp
lock
int
push
xchg
dec
cmpb
xchg
xchg
xchg
dec
and
in
pop
pop
adc
mov
in
sbb
fiaddl
mov
xor
dec
out
popa
push
mov
or
dec
mov
xor
sbb
jne
mov
fstl
mov
jp
inc
mov
lea
pop
outsl
pop
fsubs
stos
scas
lret
out
out
lahf
insl
mov
mov
testl
je
adc
xchg
int
cmp
cmp
fidivrl
push
nop
stos
lock
inc
enter
add
jmp
test
add
inc
fsts
xor
rcrb
testl
mov
arpl
push
out
nop
lods
icebp
cwtl
xorl
fstpl
sub
pop
push
int3
out
adc
or
sub
lret
mov
fstps
icebp
iret
mov
jle
ds
enter
mov
mov
clc
pushf
or
popf
cmp
les
jg
cmp
adc
push
dec
cli
push
xlat
sub
mov
ret
call
daa
push
clc
mov
and
repnz
mov
adc
and
mov
int3
test
and
test
cmpsl
stc
mov
cmpsl
mov
or
ret
xlat
clc
in
or
in
push
addb
pop
adc
gs
xchg
adc
in
mov
jno
sbb
and
iret
rorb
sbb
and
and
outsb
add
xchg
push
aaa
addb
xchg
cli
nop
mov
mov
jg
addr16
cmp
shll
fwait
out
stc
movsb
xorb
sub
pop
xchg
pop
fiadds
dec
mov
seto
jp
push
jge
pop
js
repnz
mov
add
in
cmp
outsb
je
rorb
popa
mov
lcall
out
mov
das
jg
push
cmp
sbb
out
add
sbb
fldl
cmp
pop
aas
dec
xor
addl
jne
mov
mov
add
mov
jno
xchg
jo
or
jg
dec
jp
sbb
testb
dec
and
stos
orl
pop
popa
mov
je
or
pop
mov
pop
inc
lock
ljmp
in
or
add
repnz
repz
in
insb
movsb
mov
out
dec
in
mov
push
sbb
jp
pop
roll
ret
mov
test
sti
and
push
and
mov
mov
bnd
adc
loopne
cmpsb
xor
xor
mov
loope
call
clc
cmp
das
in
or
push
and
pop
push
test
in
xor
fldl
jnp
ret
test
call
pusha
sbb
pop
mov
add
push
mov
shlb
cmp
aam
repz
pop
dec
xorl
push
xor
cmp
inc
push
test
dec
js
sbb
jbe
stc
mov
mov
repz
negb
mov
lods
shll
xor
loope
out
sbb
jg
mov
ds
fdivl
addb
sbb
roll
pop
or
mov
add
cmc
jnp
pop
xchg
mov
repnz
jb
shll
jmp
mov
mov
test
fcoml
xlat
or
sbb
mov
sbb
adc
fmuls
daa
inc
add
rcl
sub
and
cmpsl
test
test
push
fsubr
cld
movhps
push
push
push
test
rorl
les
sar
dec
and
adc
mov
mov
mov
pop
and
mov
adcl
sbbb
mov
or
and
iret
je
jl
dec
les
mov
cmp
test
imul
fildll
push
inc
fidivrs
js
inc
repz
sbb
out
loope
mov
bound
or
sbb
ljmp
clc
cmpsb
shl
test
cmp
in
cmp
ficompl
repnz
mov
sti
mov
insb
mov
pop
loop
adc
push
fisubrl
flds
fbstp
xor
in
out
inc
jbe
adc
jmp
icebp
mov
pop
pop
into
stos
and
lea
rorl
push
sub
xchg
sub
push
int
push
popf
xor
sub
lret
or
gs
rolb
in
loope
push
and
jg
xor
and
xchg
push
jne
xchg
sar
or
pop
xor
aam
push
scas
stc
cmp
add
sub
pop
pop
fmulp
mov
das
lahf
inc
data16
jno
mov
rcrl
mov
and
jno
inc
push
int3
jbe
add
je
aad
dec
int3
popa
xor
adc
in
sti
je
adc
push
enter
popf
aam
mov
test
push
sub
es
cld
jmp
jbe
adc
add
push
sbb
add
cld
cmpl
inc
inc
icebp
mov
nop
xor
out
mov
in
icebp
rcl
push
std
pop
push
popa
sbb
mov
sti
cmp
clc
pop
aaa
adc
push
sbb
push
jb
dec
xchg
adc
xchg
andb
fsubl
xor
aaa
push
xchg
or
mov
mov
jge
xchg
xchg
frstor
sub
mov
xorb
cmp
inc
decl
jecxz
dec
add
mov
jg
sbb
cmpsl
jb
xchg
ljmp
mov
roll
mov
scas
ljmp
mov
or
pushf
int3
out
push
ja
mull
pop
push
or
shll
inc
nop
bound
mov
dec
xchg
aas
cs
jp
jbe
mov
jecxz
adc
dec
sub
cmp
ss
mov
rcrl
mov
sub
pop
inc
cli
fwait
cmpl
fbstp
lret
mov
lods
jp
xchg
jecxz
sahf
cmp
gs
dec
pop
movsl
jle
or
jl
dec
shr
mov
testl
and
push
dec
aam
enter
imul
add
or
das
pusha
ret
test
mov
pop
mov
insb
loop
push
push
add
sub
jge
push
fistpl
addl
dec
sahf
aaa
loope
gs
aad
cs
inc
and
inc
jo
into
jg
adc
add
mov
jno
outsl
mov
scas
fstps
aam
imul
pop
fs
icebp
xchg
loopne
mov
xor
lret
adc
or
sbb
fildll
xchg
mov
fs
adc
je
push
fidivrs
or
fnsave
add
stos
add
fcomps
inc
jo
xchg
sbb
push
sub
imul
sbb
in
add
repz
jl
ja
and
xchg
pushf
mov
pop
jae
cmp
shlb
jne
addr16
test
add
andl
cmpsl
je
shlb
xchg
cmc
jle
sbb
mov
scas
or
gs
in
mov
sub
sbb
jbe
hlt
pop
dec
and
xor
mov
adc
rcl
out
fcoml
rorl
repnz
mov
insl
sub
imul
cwtl
clc
push
stc
mov
das
shll
sbb
jo
cmp
sub
push
pop
xor
std
push
mov
lahf
inc
out
add
insl
push
jmp
mov
mov
xchg
inc
mov
es
test
cmp
pop
movsl
pop
mov
mov
mov
clc
xor
jecxz
xchg
pushf
mov
shlb
sub
loopne
or
int
jae
pop
pop
dec
pop
push
add
mov
das
cmp
js
test
sub
dec
nop
pop
push
mov
mov
sub
in
pop
bnd
int3
insb
jno
rorl
loopne
mov
shlb
mov
xor
cmc
movl
dec
sub
jge
seto
mov
cwtl
in
in
in
fistpll
pop
aam
dec
mov
lahf
mov
fisttpll
dec
xchg
cmp
fstps
out
and
in
mov
inc
or
decb
sub
movsl
roll
fisubl
lret
mov
jo
mov
stos
cmp
adc
in
and
ss
jae
loope
dec
pop
or
push
push
mov
cmp
in
scas
gs
movsl
fdivrl
std
xor
and
mov
mov
in
addl
add
mov
xlat
cmp
lods
in
aad
mov
pushf
or
adc
lret
ret
jnp
jno
add
add
arpl
mov
inc
mov
imul
lods
or
lods
popf
ret
frstor
xor
sub
xchg
cmp
loopne
cmpsb
adcb
push
xchg
cmc
enter
mov
mov
aad
add
popl
stos
out
pop
mov
scas
outsb
sbb
xorl
jecxz
inc
adc
or
arpl
push
lcall
ret
sbb
pop
ljmp
cmpsl
adc
push
mov
or
in
add
cmp
clc
or
pop
push
cmp
lcall
out
mov
out
ss
mov
movsl
pand
iret
sbb
sti
mov
add
test
xor
loope
dec
push
in
subl
sbbb
sbb
mov
add
jecxz
cmc
add
push
mov
bswap
cmp
inc
rcrb
lods
mov
stc
pop
cmpsl
adc
in
cmp
stc
div
mov
lods
jno
jmp
mov
mov
icebp
es
fnstsw
dec
dec
sahf
dec
jns
movsl
sub
out
xchg
daa
cmp
shlb
jns
mov
mov
jno
iret
push
fdivs
sub
sub
pop
adc
inc
cmp
jge
lods
js
xor
add
ss
in
or
repz
fistps
jecxz
xchg
sbb
icebp
mov
cwtl
pop
pop
pop
dec
fdiv
xchg
or
orl
jne
stc
inc
or
into
gs
fnstsw
push
sub
push
push
lock
dec
mov
jl
pushl
into
iret
xor
fldl
adc
popf
jle
and
push
inc
es
add
insl
fimull
je
cs
rcll
cld
popa
dec
mov
pop
xor
test
shr
out
test
inc
and
or
movsl
sbb
das
mov
sub
fucom
data16
ds
dec
xor
xchg
imul
mul
and
outsb
adc
dec
jecxz
rcrb
movsl
xchg
stos
mov
js
cmp
addb
mov
out
jmp
bound
test
push
popf
cmc
stos
jno
xor
bound
pop
lds
pop
fdivrs
mov
xchg
mov
ret
mov
inc
subb
jae
hlt
mov
or
stos
jns
or
jne
lcall
dec
outsl
inc
push
popf
sbb
pop
jno
inc
loope
inc
pop
stos
dec
cmp
orb
pop
cld
iret
ss
dec
outsb
cmp
jnp
aam
in
xor
outsb
or
jbe
xchg
push
xor
cmp
ret
sub
xchg
mov
add
mov
adc
gs
push
jns
dec
inc
incl
cld
xchg
insl
rcrl
adc
cli
ret
mov
cmp
out
dec
xchg
enter
and
or
cmp
fdivs
mov
push
mov
pop
or
cmc
test
dec
mov
int3
inc
data16
pusha
jmp
adc
sub
sarb
mov
mov
push
xchg
jbe,pn
cmp
and
out
jge
repnz
push
lea
rcll
andl
inc
pop
pop
jmp
xor
dec
repnz
pusha
shrb
cmp
push
stos
push
inc
add
and
xlat
jns
mov
mov
pop
pop
cli
jge
mov
imul
insb
xchg
mov
inc
jp
in
xchg
or
push
jg
loop
loopne
push
mov
mov
and
mov
mov
push
xchg
insl
xchg
adc
scas
sbb
dec
add
push
loope
test
stos
jne
xlat
gs
pusha
lea
push
jns
add
scas
adc
sub
xor
adcb
xor
pop
sbb
arpl
mov
sub
pop
ss
loope
jge
sbb
sbb
and
lret
lock
jns
jl
fadds
or
add
imul
scas
shll
icebp
das
pop
aam
daa
nop
add
mov
or
je
out
in
adc
pop
xchg
add
jo
fldt
aaa
and
pop
sbb
xor
test
sub
data16
stc
aas
lods
daa
ret
fs
cmp
jecxz
mov
mov
adc
xchg
mov
pop
repz
sbb
aam
fimull
push
jbe
jnp
mov
push
adc
adcb
sub
jge
outsl
rol
adc
xchg
xchg
loop
fs
or
jecxz
sub
pop
cmpsb
out
inc
testl
mov
pop
popf
dec
movsb
adc
pop
fdivl
inc
inc
cli
jno
xchg
xchg
sub
fnstcw
in
jg
cmpsl
neg
mov
dec
popf
aam
icebp
test
push
iret
ret
sub
xor
addr16
movsb
inc
ljmp
jmp
aaa
mov
movsb
test
inc
aas
xor
inc
push
lcall
push
mov
lcall
loope
sbb
pushf
es
repnz
imul
orl
rcrb
xchg
call
add
dec
dec
xchg
fnstenv
ret
xchg
scas
xor
fadds
jg
std
pop
ja
bound
xchg
call
mov
dec
jo
data16
sub
das
xchg
jp
xor
loopne
xor
outsb
push
and
mov
fs
dec
ss
push
or
xor
push
inc
dec
ss
enter
dec
push
pop
and
pop
cmpsl
mov
xor
jl
mov
movsl
jno
sti
aaa
mov
mov
mov
hlt
pop
dec
out
pop
pop
mov
or
sbb
sub
insb
ret
jmp
push
jb
cwtl
xor
push
rol
loopne
mov
mov
mov
lods
out
sbb
push
dec
imul
push
out
out
lods
mov
insl
lea
pusha
push
xchg
movsb
pop
push
pop
and
lea
cmpsl
sbb
push
pop
imul
scas
xchg
faddl
gs
xchg
lret
outsl
pop
inc
stos
jbe
and
add
push
add
sbb
sbb
fdivr
fwait
cmp
add
shlb
jno
inc
std
mov
mov
cmc
andb
pop
in
push
outsl
aaa
sub
and
stos
out
mov
sbb
push
pop
insb
push
shl
das
incl
pop
dec
mov
or
jecxz
jne
jge
lahf
fisubrl
aam
in
xor
mov
dec
jmp
cmp
cwtl
add
sarl
adc
adc
mov
add
mov
jle
jb
pop
fadds
jne
lcall
xor
jmp
sub
fcomip
inc
pop
test
cltd
call
pop
stos
in
jecxz
ljmp
out
pop
push
mov
or
mov
int
jo
push
gs
adc
mov
insb
sub
cmp
adc
dec
cs
add
ja
xor
mov
out
das
pop
xchg
test
inc
jle
and
js
mov
cwtl
sbb
into
out
mov
dec
push
push
jnp
out
sub
ljmp
shrb
test
pop
in
movsb
inc
in
add
cmc
js
je
je
xchg
pop
mov
rcrb
lahf
sub
dec
scas
xchg
inc
dec
mov
or
loope
mov
dec
js
aaa
pop
aaa
sti
scas
push
jae
jg
test
xor
fisubrl
mov
cmc
mov
leave
and
add
repnz
daa
xchg
jb
cmpb
pusha
fwait
jp
jns
ja,pn
test
dec
nop
mov
xchg
mov
mov
outsb
mov
pop
jb
int3
cmp
hlt
inc
aas
lock
js
xor
mov
adc
sbb
addr16
int3
lcall
jns
sub
shll
mov
mov
jg
leave
cli
push
loopne
fwait
push
mov
and
cmp
or
sti
adc
xchg
fdecstp
lcall
and
xchg
gs
mov
adc
jno
lcall
arpl
test
inc
and
dec
dec
xor
mov
ja
ss
lea
gs
cmp
scas
cwtl
and
sub
pop
orl
leave
insl
pop
nop
into
repnz
mov
or
ret
add
test
push
imul
xchg
dec
fsubr
adcb
orb
adc
push
push
jmp
push
leave
imulb
imul
jecxz
or
repz
push
test
push
push
mov
fdivs
jl
insb
bnd
xchg
pop
sub
inc
test
sbb
push
iret
lods
paddsb
add
mov
pop
stos
repnz
clc
cmp
test
pop
popf
sub
test
in
push
mov
lods
push
mov
adc
shl
xchg
sbb
dec
cmp
into
ret
jp
sub
outsl
mov
fstps
sbb
test
sbb
fldt
adc
ret
mov
adc
cmp
xor
int3
and
or
dec
mov
andl
addb
loopne
ds
lahf
xor
sbb
lea
push
test
cmp
push
cmpsl
and
or
fisubrs
fadds
out
sub
cmp
aad
cmpsb
int3
mov
daa
mov
je
test
std
aas
jns
xchg
sbb
mov
imul
lods
jecxz
jns
stc
enter
test
pop
sbb
sub
mov
andl
lea
test
ds
jecxz
jnp
dec
push
mov
mov
fsubrs
dec
scas
ljmp
stc
and
and
xor
pop
shll
in
jbe
mov
stos
inc
shll
inc
sbb
fstps
div
pop
sub
ror
or
xchg
cmp
xor
std
cmpsl
ret
jp
push
sti
adc
xor
adc
and
enter
lret
es
out
std
lret
add
test
int
out
jecxz
sbb
push
loop
push
jb
shll
pop
and
fs
mov
xlat
ja
mov
dec
mov
and
mov
sub
test
out
dec
data16
add
das
cmpsl
pop
jmp
aam
sti
daa
or
pop
sbbb
les
mov
mov
push
xor
xor
dec
les
and
outsb
lds
pushf
push
mov
stos
mov
cmp
add
lahf
outsb
xchg
dec
jecxz
push
fwait
sbb
cmp
movsb
push
jp
aas
xchg
movb
sub
iret
aas
add
jg
mov
loopne
pop
inc
pop
push
outsl
jae
mov
stc
cmpsl
imul
adc
movsl
aad
sbb
xchg
movsb
loopne
lock
jo
xchg
outsl
xchg
jecxz
and
add
push
ficoml
ss
outsb
hlt
shrl
in
pop
int
jae
mov
lcall
xor
pop
hlt
mov
xor
inc
hlt
lcall
inc
lods
or
enter
jle
pop
xchg
adc
sub
cmp
rorb
adc
inc
xchg
pop
mov
cld
fwait
stos
sahf
cli
or
cwtl
mov
popf
dec
cmpsb
xorb
xchg
dec
xchg
ja
add
pop
xchg
outsl
and
ja
adc
mov
daa
xchg
inc
inc
jne
adc
popl
in
fadds
add
cmpl
inc
push
stos
cwtl
or
mov
xchg
mov
jne
dec
mov
pop
push
int3
icebp
pop
imul
movsb
cmp
jmp
jl
cs
enter
or
or
test
test
xor
cs
ljmp
rolb
dec
mov
cwtl
or
add
cmp
and
test
mov
dec
push
pop
xchg
sbb
sub
in
nop
xchg
std
inc
cmp
mov
in
jp
and
mov
lods
ret
stc
nop
jae
xchg
pusha
enter
lret
sbb
add
arpl
aad
fwait
pop
je
pop
or
fsubl
xor
lods
pushf
adc
test
or
push
rcrl
xor
orl
scas
stos
ss
jl
or
js
das
scas
xor
jle
lcall
xchg
mov
gs
mov
roll
hlt
pop
push
lea
pop
sbb
mov
repz
jb
cmpsl
add
aam
imul
in
test
mov
and
lods
icebp
pusha
ds
cli
imul
clc
adc
jns
scas
pop
js
divb
add
sbb
cmp
jl
cmc
loope
pop
pop
sbb
xchg
fdivrl
pop
in
outsl
test
adc
xchg
dec
imul
jmp
xor
inc
push
les
notl
jb
jl
daa
loopne
les
mov
mov
fisubl
sub
dec
xchg
fisubrs
xchg
or
mov
aam
mov
push
imul
mov
push
fisubl
sbb
pushw
jmp
inc
jae
in
xor
add
xchg
cmp
mov
les
and
jnp
mov
jge
iret
test
insl
call
test
popf
fmull
cmp
scas
aas
jl
out
fdivrs
mov
mov
fnstsw
mov
fistl
mov
lret
xsaveopt
sub
pop
mov
and
in
mov
pushf
cs
popf
mov
mov
or
jmp
sub
xorl
cmp
push
ss
fwait
jl
movsb
ja
jbe
out
in
into
ljmp
mov
loop
mov
fcomps
cmp
mov
and
jne
cli
jbe
adcb
fdiv
scas
add
pop
loopne
out
into
jecxz
mov
rcrb
pop
mov
pop
fsubl
in
inc
lea
or
pop
aad
mov
push
cld
aam
ss
mov
xor
test
sti
int3
jnp
inc
cmpsw
in
repnz
jge
push
jmp
cmc
cmp
sbb
push
mov
push
scas
ret
or
std
pop
sub
mov
in
add
inc
jmp
icebp
push
jmp
sub
lods
xor
xor
in
sahf
psllw
mov
cmp
push
rorl
ljmp
mov
outsl
add
xor
xor
xor
add
call
jnp
into
lret
mov
cltd
adc
insl
xchg
cmp
xchg
imul
loop
lahf
imul
ja
dec
in
outsb
dec
cld
sub
daa
mov
dec
dec
rcl
pop
ficompl
push
and
dec
add
jp
int
xchg
pusha
ljmp
xchg
vpsrlvd
or
cmpsl
mov
mov
inc
dec
fdivrl
cs
mov
dec
pop
inc
lret
mov
or
sub
and
fstpl
stc
mov
arpl
shll
mov
cmp
mov
pop
xchg
lahf
in
jns
fsubr
xchg
repnz
mov
dec
aam
pusha
or
mov
std
xor
sbb
and
pminsw
in
aaa
adc
dec
fwait
test
dec
push
adc
inc
fsubl
jmp
int3
xor
pop
xor
ret
jne
loop
insb
sub
mov
movsb
mov
and
mov
and
loop
cs
shld
ret
out
mov
daa
sbb
mov
jg
xchg
out
into
dec
shlb
adc
cmpsb
fstps
stos
cld
inc
lods
adc
rorb
inc
dec
xchg
ja
xchg
loope
or
cmp
mov
xchg
rorb
jns
cmpsb
inc
ds
xchg
and
dec
data16
in
and
pusha
inc
cmp
fildll
mov
mov
mov
push
push
cmpsl
or
xor
sbb
sti
xor
insl
test
inc
insb
pushf
adc
aad
xchg
and
mov
xchg
sti
fldcw
inc
and
push
inc
mov
rcrb
out
mov
jne
fwait
sub
int3
inc
fisttps
sub
sub
pop
in
hlt
pop
and
push
inc
sbb
pop
lods
rcll
les
pop
mov
sbb
les
jl
inc
shll
push
clc
xor
push
push
add
pop
add
inc
cmp
mov
cmpsl
inc
and
cmpsb
psubsb
dec
mov
cmpsl
sub
lods
xor
std
js
leave
pmuludq
mov
sbb
insl
and
cmp
push
cwtl
xlat
fs
lret
test
add
in
test
mov
ret
jle
repz
movsb
push
push
mov
jle,pt
fisttps
imul
sbb
clc
orl
cmpsb
pop
shrb
or
inc
out
loope
clc
jb
sub
inc
loopne
sbb
mov
push
loop
outsl
sub
xchg
mov
xchg
push
sbb
fisubrs
cmc
insl
and
stc
xor
pop
mov
movsb
xor
sbb
or
sub
pop
clc
dec
push
jp
scas
mov
loope
fwait
sbb
ret
outsl
add
dec
data16
mov
xchg
fldt
xlat
xchg
mov
rclb
xor
jbe
jns
cmp
dec
cld
sbb
mov
pop
sub
dec
adc
dec
inc
dec
nop
mov
dec
jl
mov
sub
std
dec
out
cli
xchg
fldcw
out
dec
dec
mov
stos
xor
and
daa
and
jg
shl
shrb
nop
popa
or
push
or
repz
aaa
mov
jbe
stos
mov
cmpsb
stos
addr16
clc
test
shll
dec
mov
add
push
xchg
cmc
add
push
dec
inc
pop
inc
ret
pop
in
enter
cld
test
jecxz
cmpsb
imul
repz
jo
int3
dec
outsb
mov
std
lcall
xchg
push
inc
sbb
mov
mov
adc
test
add
out
dec
fnsave
sbb
icebp
lret
dec
das
and
out
cmc
pusha
mov
and
dec
popf
push
mov
testb
adc
jo
scas
in
arpl
mov
inc
adc
cmp
insb
push
mov
push
sbb
dec
daa
pop
stos
mov
aad
mov
mov
stos
or
mov
cmp
int3
bnd
xchg
cmpsl
fsubp
xchg
idiv
outsb
scas
fwait
in
mov
gs
dec
add
push
add
push
lret
into
cltd
push
fisubrl
or
jmp
repz
mov
push
outsl
sbb
sub
and
sbb
pop
test
push
test
cs
sbb
jns
pop
and
adc
jg
jg
pop
xor
pop
mov
mov
jno
in
call
iret
inc
push
sbb
mov
rcrb
sti
mov
cmpsb
sahf
add
pushf
mov
push
add
ss
movsb
or
repz
les
mov
shl
les
popf
cmpsb
xchg
jo
addr16
cs
cli
push
inc
jbe
adc
xchg
lea
push
loopne
cwtl
xor
pop
xor
stc
inc
cwtl
test
dec
or
scas
outsl
add
fwait
aaa
and
and
sahf
sti
fcoms
and
mov
pop
addr16
leave
out
int3
sub
sbb
sbb
or
rol
xchg
mov
cmpsl
cmpsl
popf
pushf
test
xchg
inc
dec
test
and
fistps
pop
sub
mov
or
mov
in
mov
mov
rolb
shlb
test
mov
mov
dec
ja
cltd
pop
pusha
or
test
aam
lods
bound
adc
es
xor
xor
cmpsl
repnz
jno
ret
imul
es
pushf
jmp
or
int
scas
sti
leave
lea
push
cmp
xor
shrb
ss
dec
mov
addl
cmp
dec
push
out
cmp
fldl
xchg
adc
xor
xor
loope
xchg
add
lret
outsl
push
mov
dec
mov
and
cmpsl
int
dec
jp
cltd
in
lret
rclb
push
and
insl
mov
sbb
pop
mov
push
stos
xor
push
out
mov
mov
imul
dec
in
adc
or
clc
mov
or
pop
sub
cmpsl
ljmp
mov
cmp
add
je
adc
insl
and
aam
push
aas
xchg
js
sub
call
clc
sbb
mov
pop
repz
xor
mov
div
mov
jl
imul
fsubrs
ret
add
adc
pop
adc
int
jl
insb
scas
mov
jbe
pop
cmc
push
sbb
pop
jo
mov
mov
lret
or
lds
push
in
incl
test
push
rorl
std
add
mov
sti
int3
ja
pop
cld
bnd
out
mov
jecxz
pop
outsl
push
in
sbbl
mov
push
sub
cmp
cmp
or
fld
int
or
cmp
xchg
jne
aas
sbb
add
cmp
fwait
std
jg
lea
add
out
or
cmp
lea
ds
xchg
popf
lock
fldl
lret
in
inc
mov
in
xlat
xor
aam
jmp
ja
loope
inc
sarb
sbb
push
shrl
fadds
in
jge
inc
pop
and
out
jne
sub
or
mov
popf
fimull
js
jl
sbb
xor
jmp
inc
out
cmpsl
cmp
into
xor
sub
enter
lea
add
xchg
rorb
push
mov
mov
mov
pop
dec
and
fs
push
cs
mov
push
xchg
xchg
std
pop
int
sbb
cmpsl
pop
in
pop
cmp
lds
sub
cld
mov
testl
daa
ret
into
xchg
jl
pop
pushf
ret
add
lret
adc
out
aam
dec
js
inc
cltd
test
std
inc
jle
test
ja
out
js
test
adc
scas
rcrb
mov
sbb
add
das
lea
fsubl
dec
mov
hlt
cli
mov
sub
js
dec
bound
pushf
push
fildl
outsl
clc
stc
shlb
js
sbb
push
push
in
nop
ficoml
sti
xor
dec
xchg
xchg
outsb
add
icebp
dec
stos
xchg
addr16
ss
push
fst
fnstenv
out
popl
lock
enter
test
inc
mov
jmp
into
mov
out
scas
imull
cmp
arpl
add
mov
or
mov
aaa
jbe
xchg
es
icebp
mov
rorb
mov
xchg
testb
jl
jl
int3
mov
pop
pop
in
cmc
in
inc
icebp
sbb
xor
stos
inc
lahf
aas
cmc
mov
mov
adc
call
xchg
mov
in
jnp
inc
ror
lcall
cmpsl
xchg
xchg
add
and
icebp
mov
push
dec
int3
pop
push
aaa
xchg
adc
mov
mov
cmp
xchg
adc
cmpsl
xlat
mov
sub
mov
mov
inc
sub
mov
fisttps
roll
loopne
js
cmpb
leave
push
mov
fcomps
jns
pushf
stos
clc
or
and
mov
mov
mov
into
out
not
aaa
or
cmpsl
push
pop
jg
push
adc
rcrb
and
and
dec
mov
daa
or
daa
movsb
xchg
jo
mov
shrb
mov
dec
or
sbb
call
test
out
jae
lds
mov
push
sbb
lods
movsl
add
xor
and
add
jmp
in
adc
pop
cli
jecxz
jae
jno
xchg
add
cmc
pushf
stos
xor
jl
or
stos
push
cltd
in
data16
sub
adc
jno
mov
sbb
out
adc
sahf
xor
mov
arpl
jp
fisubrl
push
iret
icebp
insl
mov
sub
lcall
popf
push
ds
orl
mov
adc
jg
popa
sbb
or
push
cmp
jae
sub
sbb
aam
jmp
push
sub
jmp
cmpsl
fbstp
cmpsl
mov
xor
fs
xchg
jnp
dec
push
movsl
out
dec
out
dec
and
pmulhw
jns
mov
or
mov
ss
sbb
lret
push
and
push
cs
adc
pop
or
lods
dec
xchg
pop
stos
ret
stc
and
les
jg
dec
pop
test
and
xchg
rcrl
cmp
pop
js
arpl
sub
out
jnp
fs
out
fcmovb
scas
push
add
cs
fsubl
rclb
das
push
or
shrl
in
in
sub
test
lret
loop
jl
xchg
jno
into
sbb
movsl
or
iret
add
jge
in
xchg
cmp
xor
lahf
loope
push
ror
fcmovb
addr16
mov
ss
mov
fwait
inc
nop
aas
mov
mov
mov
dec
loopne
jecxz
cmp
les
inc
and
jb
in
dec
and
shlb
jbe
sti
cmpsl
bound
push
les
or
xor
jb
xchg
setnp
cmp
jecxz
outsl
das
adc
push
xchg
aad
lret
push
out
insl
lock
jnp
lret
mov
inc
pushf
jl
leave
jmp
test
lcall
and
stc
push
jecxz
int3
xchg
dec
inc
out
or
xor
add
jae
and
gs
mov
orl
arpl
shll
fsubs
inc
jmp
add
sub
push
fs
push
iret
enter
imul
stos
add
in
pop
jae
push
sahf
mov
dec
loopne
in
mov
pop
fstp
pushf
xchg
pop
jp
cmp
movsl
lds
out
je
mov
cltd
test
push
loop
test
cmp
jmp
push
lcall
das
sti
mov
shlb
mov
inc
pop
inc
ret
fistpl
ds
popf
jl
xor
and
or
xor
dec
repnz
inc
and
sub
jae
outsb
push
js
test
test
mov
test
imulb
roll
sbb
jbe
sbb
xchg
movsl
sbb
push
adc
je
lea
xchg
into
cmpsl
push
mov
cmp
icebp
pusha
jg
or
sbb
jl
mov
pop
inc
push
mov
adc
jp
lea
test
adc
rcrl
rorb
add
sbb
mov
add
mov
push
sbb
imul
aaa
push
inc
movsb
mov
cmp
mov
jnp
cmp
arpl
in
jno
mov
jge
out
cwtl
roll
mov
pushf
jbe
xchg
jo
sub
xchg
adc
inc
roll
pusha
lcall
fcompl
call
in
je
movsl
push
mov
rol
pop
mov
subb
dec
sti
pop
jo
mov
sub
loope
adc
jecxz
jo
shll
ss
xor
fstps
js
jo
sbb
jp
inc
sbbl
and
sub
pop
out
cmp
stos
or
xchg
sub
test
xchg
icebp
out
or
scas
jbe
sub
hlt
cwtl
je
addb
or
add
or
sarl
push
sbb
lods
xchg
mov
mov
xchg
in
and
rcr
ljmp
mov
sbb
dec
cmc
lret
stos
fists
dec
test
jle
loop
cmp
pop
adc
js
sub
rol
addr16
je
or
repz
cmp
enter
pop
and
imul
jmp
mov
and
loopne
add
les
push
push
add
aaa
and
xor
lret
add
pop
cmp
out
adc
mov
ljmp
xorb
xorl
shrl
sub
ja
test
adc
mov
gs
subb
fs
pop
repz
iret
cmp
std
fistpll
pop
rcl
or
or
sbb
cmc
and
xor
pop
in
arpl
hlt
aam
push
jo
mov
sbb
jp
cmp
jmp
pop
mov
pop
pop
lret
les
scas
cmpsb
punpcklwd
jbe
or
sub
mov
ret
mov
sub
jbe
loopne
repnz
mov
jl
inc
jmp
sar
xor
in
mov
aad
or
arpl
fwait
mov
test
fsubl
mov
mov
aaa
dec
jg
dec
or
filds
sub
aaa
movsb
dec
sahf
add
cmp
xor
adc
dec
pop
enter
cld
out
repz
add
pushf
mov
inc
mov
inc
push
scas
inc
notl
rcr
jbe
inc
cmc
dec
jg
rorl
jle
nop
lret
rcll
insb
jns
and
cwtl
cmp
push
fisubrl
mov
mov
outsb
lds
add
xor
movsb
loop
mov
mov
inc
mov
andl
addl
outsl
xchg
jg
cli
leave
cld
in
dec
and
cmpb
sub
fistps
cltd
sti
addr16
mov
sub
sub
xchg
cltd
in
and
mov
movsl
sub
mov
std
fists
mov
std
mov
ret
jle
mov
fwait
mov
stos
sbb
ja
ja
outsb
push
and
shl
outsl
xchg
dec
mov
cmp
add
lds
aaa
in
xchg
mov
repnz
push
push
mov
cltd
mov
hlt
xchg
fistpll
xchg
xchg
lock
mov
xchg
cmpsl
dec
dec
or
add
mov
adcl
popa
or
shr
pop
les
pop
ljmp
and
add
shll
or
adc
pop
das
push
lods
add
mov
jns
cs
cs
lret
leave
icebp
cmp
fimuls
pushw
jge
je
jg
push
push
cli
mov
in
shll
sbb
aam
push
and
sub
xchg
fs
cmpsb
cmp
sub
push
sti
pop
lcallw
test
sub
aam
stc
jo
adc
push
scas
cmc
inc
xchg
xor
sti
movl
xchg
shlb
pop
mov
das
in
inc
mov
mov
adc
das
inc
aad
sub
fcoml
mov
mov
in
rolb
or
mov
sar
shlb
lahf
popl
cmpl
mov
jns
rolb
clc
inc
mov
sbb
aas
in
out
and
out
ja
stos
lock
mov
das
cmpsb
nop
lahf
fstpl
sbb
jl
and
test
hlt
rcll
outsb
lcall
jns
jle
gs
jns
clc
pop
in
cltd
pop
dec
xor
gs
add
cmp
pop
fwait
push
inc
lea
test
sbb
nop
fwait
repnz
inc
xchg
and
repnz
aam
mov
mov
movsb
pop
sub
jle
xchg
push
test
dec
rcrl
push
cwtl
jg
js
push
shll
or
xchg
xchg
push
ja
les
popf
and
sub
push
in
out
lods
ljmp
pop
cltd
or
adc
push
sbb
int
nop
int
aam
add
imul
xor
sub
push
stos
cmp
ds
pop
mov
or
iret
pop
sar
scas
mov
xchg
aaa
mov
outsl
pop
mov
mov
aas
mov
notb
sbb
xchg
push
fisttpll
sub
push
mov
and
push
mov
imul
or
jb
fldl
or
mov
mov
repnz
cmp
push
push
xchg
xlat
hlt
mov
xchg
iret
lcall
shlb
mov
lea
xchg
call
inc
int3
add
aaa
in
out
cmp
lods
test
mov
data16
ds
rol
rcrl
in
add
mov
sbb
jle
pop
andnps
cmp
ljmp
loope
ret
rorl
inc
push
lret
push
cmp
sahf
add
ja
push
sbb
mov
xchg
jbe
sbb
insl
into
aad
nop
aaa
jg
jg
sub
ror
sbb
dec
and
fcompl
idivl
pop
fwait
out
jns
into
cmp
in
jge
inc
out
dec
lds
testl
bound
jbe
jp
xor
test
sub
or
sub
leave
mov
jo
inc
test
and
cmp
pop
lock
iret
jmp
incb
adc
cltd
xor
cmc
test
mov
les
xor
aaa
cltd
dec
pusha
std
in
das
lea
cmp
jnp
sbb
sub
push
jl
jne
pop
test
and
pop
je
ljmp
inc
shl
mov
jne
push
popf
pop
dec
test
sub
iret
or
cmp
icebp
es
aas
clc
paddb
repnz
test
lret
adc
mov
lcall
inc
mov
or
and
nop
sbb
lock
mov
jp
push
jl
andb
mov
mov
stos
fbstp
xor
inc
cmp
adc
cmp
iret
inc
mov
out
test
out
mull
cmp
xchg
or
in
ja
rolb
cmp
sti
sti
nop
or
xchg
xchg
sbb
pop
pushf
aam
jbe
push
mov
loopne
rcr
mov
inc
leave
cltd
cmp
or
ss
pop
xchg
sbb
xchg
jecxz
enter
jb
aaa
xchg
jb
xchg
fcomps
fs
pop
test
or
js
movb
pushf
adc
and
das
pusha
xor
jecxz
negl
std
setae
leave
xchg
out
or
adc
mov
cltd
loop
shrl
cld
inc
or
enter
jp
outsb
clc
and
outsl
push
loopne
mov
jl
mov
leave
mov
fiadds
cmc
adcb
add
jl
cwtl
mov
xor
push
imul
lret
test
lret
pop
xchg
out
cltd
pushf
jmp
mov
ficomps
pushf
mov
std
inc
shll
lds
popa
dec
fcmove
push
or
icebp
outsl
rorb
sbbl
outsb
sub
daa
shll
fists
adc
int
sbb
mov
test
ret
xor
mov
out
flds
incl
or
test
pop
mov
das
gs
das
neg
mov
mov
jge
fwait
sub
pushl
mov
call
das
stos
mov
and
dec
add
mov
mov
loop
cmp
dec
sahf
jbe
inc
popf
adc
loop
mov
aad
mov
sbb
int3
sub
mov
sbb
cmpsb
lods
jge
dec
sbb
pop
mov
mov
jnp
cmp
nop
notb
hlt
pop
mov
pop
cmp
aam
in
mov
sbb
mov
rol
fcmovnb
mov
xchg
popa
adc
mov
sbb
push
inc
add
or
int
and
cmpl
cld
adc
mov
xchg
adc
lret
std
sbb
fisubrl
jbe
xchg
xchg
push
mov
fistps
jno
sbb
fucom
shrb
jle
sub
xchg
mov
inc
sub
jecxz
push
or
push
lods
mov
test
pop
cli
roll
pusha
mov
lods
mov
jbe
push
popf
rol
lret
stos
movsb
mov
mov
push
aam
xchg
xchg
xchg
fidivrs
mov
fimull
neg
inc
ja
dec
xorl
mov
lret
xchg
pusha
mov
aad
mov
jmp
mov
mov
mov
lock
aam
dec
shll
in
pop
push
sbb
imul
xor
sub
jb
mov
stos
iret
ja
mov
fisttpll
sahf
mov
ljmp
mov
shlb
repnz
xor
in
dec
sbb
fcompl
fisttpl
or
xor
mov
mov
cli
ja
ljmp
enter
sbb
ds
test
sub
mov
lret
arpl
subb
insl
mov
scas
flds
fs
mov
arpl
jb
movsl
aam
adc
xchg
mov
inc
cmpsb
push
xchg
in
dec
out
fadds
scas
cmp
stos
inc
rcrl
mov
or
nop
sbb
jbe
in
js
in
ljmp
cli
cs
inc
in
pop
out
movsb
repnz
xchg
pop
mov
imull
pop
push
insl
cmpsb
mov
aad
cwtl
test
cmpsl
jae
mov
mov
jecxz
divb
fiadds
int3
out
lret
jae
shrl
lret
aas
xor
or
add
fs
scas
ret
mov
mov
out
pop
cmpb
es
rolb
out
out
add
fcompl
icebp
int3
add
sub
ljmp
jecxz
cmc
dec
popa
neg
sub
scas
in
push
mov
sbb
inc
sahf
movb
sbb
dec
xchg
push
mov
push
pop
orb
movsl
lock
push
stos
sub
mov
fsubr
and
sbb
mov
stc
jl
nop
lock
imul
in
cmp
xor
pop
scas
ds
test
xor
push
xchg
cli
ljmp
fisttpll
adc
mov
js
push
mov
push
add
or
adc
pusha
jno
gs
in
pop
jg
test
mov
xchg
mov
sub
and
or
or
call
mov
nop
mov
jbe
ja
cmpsb
xchg
in
cmpl
sbb
out
cli
sub
sbb
cmp
pop
pop
and
inc
loop
mov
imul
shlb
imul
clc
addr16
lret
push
jmp
je
movsl
push
fs
repz
cmpsb
test
add
mov
cmpsl
cltd
xorl
dec
pop
repnz
lret
testl
mov
inc
jno
leave
or
xchg
pop
out
mov
dec
xor
mov
scas
push
sbb
inc
inc
mov
push
fldenv
les
add
dec
push
lds
add
sub
leave
push
mov
sbb
sub
cli
pushf
cli
jmp
cli
xor
lcall
push
stc
fsin
inc
bound
mov
fbld
repnz
mov
mov
add
push
mov
jo
push
loope
outsl
push
mov
je
xor
or
push
xchg
repz
jnp
popa
cmp
test
pop
addb
xor
xor
mov
jbe
cmpl
int3
jno
scas
dec
cs
and
iret
mov
stc
cmp
inc
popa
ret
lcall
mov
adc
sbb
addr16
push
fstps
outsl
notb
lcall
fwait
inc
jecxz
scas
lahf
jns
push
dec
pop
stc
les
push
cli
fildl
adc
rcrl
sbb
adc
adc
lods
mov
je
pop
clc
inc
imul
lcall
pop
mov
push
push
div
jg
testl
rep
sub
jns
test
ja
rcll
repz
adcb
std
fstps
xor
pop
fcmovnb
sub
mov
jmp
out
mov
push
nop
dec
mov
popf
cli
cs
xchg
cmp
add
adc
popw
arpl
mov
dec
ljmp
sub
es
cmc
mov
add
andb
sbb
fistps
in
aas
pushf
lret
js
lods
ror
mov
mov
jo
mov
ficompl
outsb
xor
xchg
pop
jne
cmp
push
in
adc
mov
rolb
adc
add
push
pop
and
mov
push
cmp
pop
call
mov
mov
xorl
test
mov
fs
and
push
jmp
daa
lods
and
mov
pop
or
ja
cmp
sti
add
xor
push
fistps
ja
rclb
imul
add
push
cld
in
fs
mov
pop
xchg
or
pop
mov
and
divb
cwtl
sub
int3
cs
mov
dec
ss
cmp
mov
aam
jb
sti
rorl
adc
jg
sbb
arpl
fcoml
mov
inc
insb
pop
es
xchg
fiadds
pop
and
add
leave
cmpsl
shr
nop
xchg
sub
add
jb
xchg
call
dec
test
sbb
scas
pop
add
add
dec
test
sub
and
push
jbe
sahf
inc
pop
inc
in
cmp
mov
jae
jp,pn
cmp
mov
rcll
lock
mov
fimull
cmp
xchg
mov
pop
adc
shl
test
fisubs
negl
dec
add
mov
mov
or
xchg
cwtl
test
lods
idiv
cmp
push
pop
imul
jo
xor
dec
mov
mov
push
aas
sbb
in
ds
sub
xor
dec
shl
fsub
push
sbb
stos
dec
mov
jns
pop
fsubrs
xchg
stc
arpl
adc
inc
jl
push
sub
popa
lret
loopne
popf
and
xchg
repnz
in
jnp
xor
pushf
stos
push
clc
pop
mov
xor
pop
mov
sub
scas
fs
fildl
pop
xor
nop
pushf
and
mov
aam
cli
inc
sbb
loope
roll
and
fs
testl
insl
sub
add
mov
or
and
mov
jb
ret
outsl
xchg
mov
movsl
sub
out
mov
fcmovnb
push
xor
rcrb
push
imul
in
insl
dec
pop
xchg
setns
filds
popa
movsb
cmp
pop
add
test
xorl
xlat
push
gs
cs
mov
xor
pop
aam
decl
std
and
repnz
pusha
sub
mov
dec
in
mov
int3
loopne
fldenv
addr16
sbb
mov
lods
popf
sub
jb
aam
jecxz
mov
test
pushf
mov
popa
cmc
adc
xchg
push
movsb
sbb
insb
in
inc
pop
mov
jl
inc
gs
xor
xchg
dec
in
add
cmp
loop
mov
sarb
dec
xor
fsubp
in
or
ret
xchg
sahf
loop
aaa
push
xchg
mov
xchg
xor
shll
mov
cmpsl
repnz
and
jns
mov
icebp
lods
pop
xchg
add
fwait
loope
mov
add
adc
push
push
xchg
cmc
push
ljmp
sub
sub
mov
or
sbb
mov
cmpsl
push
pop
xor
js
pmulhw
pusha
jmp
sbb
and
ss
loop
sub
jle
push
adc
inc
sbb
pusha
jbe
sub
shll
orl
xor
cmp
mov
outsl
pop
cli
mov
push
in
in
mov
mov
in
sub
push
pop
pop
scas
out
lcall
mov
outsb
cmp
jno
sbb
and
mov
divl
jns
sbbb
test
cmp
and
ja
mov
mov
push
jp
ljmp
fwait
insb
cmp
push
sahf
sti
push
mov
cmp
inc
cmc
push
pop
mov
cmpsb
and
push
or
data16
mulb
sbb
mov
push
stc
in
adc
jne
cmp
rcrl
or
test
xchg
dec
mov
aaa
out
add
fcompl
and
fsubl
push
ds
in
stos
jnp
jecxz
dec
xor
stos
int3
lods
inc
insb
xlat
arpl
mov
dec
repz
int3
setg
repz
into
sub
mov
je
push
out
mov
cmp
push
rep
clc
adc
or
adc
cmp
cmp
mov
or
ljmp
dec
dec
inc
lock
dec
jae
cmp
mov
test
push
pop
shl
fildl
insl
sar
mov
pop
das
stos
mov
sbb
push
xor
pop
test
fimull
adc
sub
or
insb
nop
cmp
leave
or
mov
jl
notb
or
push
jmp
and
push
cltd
xchg
sbb
xor
test
dec
aaa
and
inc
push
pcmpgtb
sarb
out
sub
in
jae
xor
int3
mov
or
mov
jmp
or
sbb
xchg
push
lahf
pop
cs
test
dec
mov
push
mov
mov
popa
jle
push
and
shll
adc
jno
imul
mulb
cmp
or
mov
rcrb
or
lds
repz
in
sub
dec
jo
mov
mov
pop
dec
push
sub
sbb
and
rcll
sub
orl
push
test
lahf
test
insl
in
jb
pop
mov
repnz
lock
leave
inc
es
lret
sbb
jno
push
xchg
push
mov
inc
dec
stos
mov
push
mov
jne
cmp
jmp
add
xchg
pop
mov
xor
movups
pop
pop
mov
clc
lock
push
repnz
or
xchg
in
out
sbb
cmp
loop
lret
xchg
and
jno
mov
ret
dec
jmp
sbb
mov
gs
out
inc
shrl
das
jl
dec
repnz
repz
mov
lret
cmp
cmp
sar
icebp
test
cmp
jae
add
or
xchg
cmp
push
jnp
out
push
decl
pop
clc
mov
bound
sbb
fildll
pop
and
cmp
or
cld
shrl
push
sub
cli
sub
pushf
mov
jnp
mov
mov
push
popa
std
mov
mov
xchg
mov
std
repnz
xor
cmp
mull
imul
test
fbld
arpl
pop
jecxz
or
sti
pop
iret
add
pop
inc
push
lods
jl
cmp
mov
or
pop
cmpsl
jae
jmp
subb
ret
inc
mov
push
sub
mov
pop
inc
divb
jmp
cmpsl
cwtl
sub
ret
jnp
push
and
jmp
push
imul
sbb
push
pop
out
sbb
out
into
sub
cmpsl
sbb
mov
pop
mov
or
push
inc
cli
mov
popf
or
cld
mov
insb
stos
icebp
sbb
push
sbb
cmp
js
jp
rcrb
rol
mov
test
aad
pop
add
in
neg
mulb
pop
or
mov
in
rorl
popa
fcompl
fs
ljmp
jmp
xchg
enter
xchg
scas
cwtl
adc
into
or
mov
dec
mov
scas
adc
imul
imul
and
test
fidivl
push
dec
adc
adc
mov
xchg
jo
sub
aas
mov
negl
mov
test
cmc
push
rclb
xchg
cmc
sub
popl
push
xchg
jle
fs
sub
xchg
clc
cld
mov
cmp
fwait
adc
inc
adc
aaa
mov
jno
push
sbb
inc
popf
inc
or
mov
mov
rcrl
push
das
add
mov
push
xchg
mov
sbb
ror
push
lock
ljmp
movsl
jne
cmp
sub
wrmsr
roll
sbb
jno
mov
xor
movsl
jl
fistps
mov
mov
xor
sbb
roll
flds
in
stos
mov
xor
cwtl
sub
pop
js
pop
mov
in
inc
test
jbe
inc
stc
nop
scas
mov
inc
insl
push
sub
jmp
stos
adc
les
lret
cmpsb
jp
bound
pusha
test
mov
jg,pn
cs
push
mov
mov
mov
add
call
mov
xchg
stos
jmp
psrlw
dec
lcall
aad
push
in
dec
mov
adc
scas
loop
mov
out
sti
ds
pop
add
jb
jg
adc
icebp
mov
jmp
adc
iret
push
nop
jp
fsubp
adc
out
aad
inc
lret
inc
negl
and
fwait
sub
je
je
aad
ret
push
dec
es
mulb
gs
int
pop
popa
xchg
jo
in
or
test
dec
ljmp
and
int3
popf
leave
dec
iret
lds
clc
cmc
mov
mov
loop
push
ds
pop
pop
stos
jmp
mov
lret
push
adc
push
std
and
pop
pop
dec
lret
enter
push
push
and
jo
testl
and
inc
popa
pop
out
test
mov
mov
lcall
repnz
dec
sub
jmp
xchg
shlb
stos
dec
into
scas
cmc
pop
push
adc
mov
out
rclb
aam
jb
or
lret
testl
movsl
aaa
lods
mov
cmp
mov
xor
rcr
negl
add
inc
sub
push
mov
mov
test
stos
lock
pop
out
dec
mov
in
or
mov
push
stos
cltd
mov
cltd
in
mov
sti
pushf
outsb
test
mov
xchg
into
hlt
lret
xor
daa
jae
aam
std
mov
das
mov
xchg
out
mov
pusha
aad
frstor
movsl
lea
hlt
cld
dec
cmp
fisubs
jecxz
add
gs
ja
and
je
test
lods
adc
jns
ds
inc
pop
ja
out
jne
and
pop
ret
cmpl
scas
into
pop
and
lock
fnstcw
ds
push
jp
inc
out
jmp
xchg
cli
adc
fstpl
lods
imul
or
adc
adcl
sbb
mov
lods
ds
jno
rorb
or
loopne
in
mov
call
xchg
xchg
xlat
sbb
sub
rorb
loope
sbb
and
out
cmp
hlt
sub
fildll
mov
repz
jecxz
and
xchg
lods
dec
aaa
xor
ljmp
repnz
lock
inc
jns
sbb
stos
lret
iret
push
jbe
xchg
xchg
xchg
push
aaa
xor
lahf
mov
sti
add
incb
mov
jmp
cmp
xchg
jge
pop
cmp
out
cli
rcrb
add
popf
sub
push
dec
xor
sbbl
cmp
cmc
xchg
rcl
fnsave
imul
test
pop
cmp
sbb
mov
cli
lcall
insb
loop
andb
arpl
test
fstl
inc
pop
out
mov
dec
mov
aad
mov
mov
cmp
inc
inc
aam
sbb
sbbl
and
jns
out
xchg
sbb
xor
out
mov
jne
pop
cmpsb
or
push
insb
and
cmp
add
mov
in
pop
repnz
sub
js
call
into
rolb
mov
jmp
push
fidivrl
sbbb
sbb
rcr
inc
dec
mov
inc
rorb
add
mov
je
add
test
push
sbb
out
test
mov
fisttpll
psubq
out
cmp
xor
dec
aaa
bound
or
imul
shr
push
ret
repz
sbb
add
rorl
fs
mov
xchg
mov
in
push
jbe
mov
and
inc
pop
jecxz
je
rcll
std
sti
cmpsl
jecxz
adc
push
ret
roll
movsb
or
sub
dec
push
in
test
add
rorl
push
clc
notl
divb
or
loopne
xrelease
imul
mov
pop
sbb
mov
lahf
ds
das
cmp
sub
pop
xchg
addb
scas
xchg
stos
jecxz
inc
orb
cmp
add
jecxz
insl
add
xor
out
loop
shlb
inc
mov
ds
inc
sarl
xor
add
cmp
imul
pop
into
aas
fiadds
cld
add
inc
sbb
adc
movsl
fmul
push
xchg
iret
pop
push
xor
sub
xor
or
iret
sub
shl
or
cwtl
mov
sub
jbe
add
jo
jbe
jle
fdivl
sahf
add
jo
int3
xchg
mov
xor
pop
pop
xchg
mov
mov
out
pop
aam
outsl
pop
adc
insb
add
outsl
and
fwait
lock
outsl
adc
es
fs
and
cmp
mov
mov
inc
orb
fildll
and
inc
in
addl
jns
dec
push
xchg
in
scas
sahf
jo
mov
daa
xor
pop
or
scas
adc
push
lods
std
pop
inc
rol
scas
add
out
cmc
fcmovu
pop
icebp
jp
jmp
ja
and
push
fisttps
rolb
lea
and
add
int3
pop
fwait
jae
xchg
negb
fdivrp
adc
test
lret
aam
test
stos
inc
mov
sti
mov
mov
dec
push
add
jo
dec
push
cmp
adcl
xor
fbstp
lcall
sbb
add
jb
and
push
sub
dec
sbb
fisubl
push
push
and
mov
aam
inc
inc
sahf
mov
mov
in
lahf
shrb
add
cltd
dec
lods
lock
shll
dec
test
cmpsl
sbb
mov
rcrb
mov
das
and
cld
sbb
mov
pop
les
xchg
xor
repnz
mov
test
test
pop
aam
push
pop
sub
test
loop
adc
inc
pop
pop
fwait
sahf
mov
push
jb
jbe
enter
xor
xchg
sub
cltd
cmpps
xchg
ds
mov
or
sbb
jl
push
pop
sbb
adc
mov
push
add
or
cwtl
mov
sbb
mov
cmp
imul
int3
loop
out
incl
cmp
pop
or
cmp
lahf
add
sarl
pop
cmp
or
lcall
inc
inc
lret
mov
movsl
jle
mov
jmp
cli
and
jne
popa
xor
dec
or
adc
fildl
sub
sbb
test
sbb
sub
lods
imul
int
xor
into
jge
push
pop
ss
add
push
xor
and
mov
push
jle
sub
dec
fsubrs
inc
or
ds
pop
popf
out
les
xchg
mov
repnz
push
jns
xchg
ficomps
ljmp
push
lea
add
mov
mov
xlat
dec
in
iret
lcall
inc
addb
leave
loope
xor
dec
andb
lds
jns
xlat
jns
xchg
sub
push
outsl
pop
lret
dec
xor
subb
sbb
inc
jmp
cmp
jmp
movsl
lret
push
cltd
imul
roll
aam
xor
nop
lods
push
and
mov
xor
loope
pop
cmp
push
pushf
mov
outsb
push
xchg
into
jmp
inc
rclb
xor
or
sub
daa
out
mov
inc
mov
or
cmp
movsl
xor
imul
mov
scas
dec
fstpl
inc
mov
and
movsbl
jmp
inc
dec
decb
and
imul
lock
nop
pop
push
dec
gs
rclb
inc
xchg
sti
jp
pop
cmp
pop
fsubrs
sub
fbld
lea
loop
gs
push
rcrl
jb
jmp
fistl
bound
cmp
scas
loope
lahf
xor
xchg
jge
stos
enter
add
mov
pop
dec
push
add
adc
mov
loop
pop
xchg
and
movsl
inc
nop
in
xor
mov
enter
mov
pop
push
aaa
ja
ss
mov
mov
pop
cmc
push
aas
clc
cmp
testl
push
mov
lcall
xor
push
cmp
jnp
lods
add
and
jmp
add
sub
adcl
push
dec
pushf
aas
xchg
fs
lcall
fs
dec
sbb
inc
movsl
and
in
cmpsl
dec
pop
aam
jne
lret
jnp
inc
fidivrs
fiadds
lea
imul
pushf
in
insb
mov
push
mov
and
sbb
xchg
sub
in
sahf
inc
jg
test
push
insb
fstsw
mov
or
sub
cwtl
leave
subb
mov
aaa
lahf
cmp
xor
sbb
pop
pop
pop
inc
aaa
in
jo
shrl
shl
mov
sub
push
jge
xor
or
leave
push
insl
loopne
stos
movsl
lret
enter
orb
jecxz
ljmp
pop
pop
inc
jmp
push
rol
or
movsb
fildll
jo
mov
mov
insb
lock
sbb
dec
stos
cli
movsl
stos
stc
sub
mull
imul
mov
sbb
jg
xor
shll
mov
cld
sbb
pop
hlt
push
popf
jecxz
mov
jno
loope
repnz
pop
rcrw
sbb
xbegin
icebp
mov
mov
jmp
sub
dec
or
ss
cltd
cmp
pop
cmp
dec
cmp
nop
pop
ja
pop
pop
push
ljmp
ss
loop
loope
xchg
je
mov
jg
cwtl
jecxz
mov
sub
cmpsl
fnsave
into
dec
mov
push
cli
lods
out
les
push
in
repz
xchg
add
inc
movsb
out
lock
dec
inc
sub
cmp
adc
sub
or
sbb
xchg
gs
cmp
sti
enter
insb
xchg
mov
mov
pusha
test
sub
inc
add
mov
mov
insb
cmp
in
mov
ljmp
push
pop
or
movsb
xor
test
adc
push
and
lds
sbb
mov
daa
sbb
enter
inc
adc
fsubr
push
rorb
dec
es
xchg
dec
mov
jbe
sets
daa
stos
leave
cmpsb
out
insl
dec
fwait
jecxz
sub
cmp
mov
bound
add
out
repnz
fdivl
cmpsb
repnz
pop
stos
mov
pop
add
in
sub
add
inc
outsb
lods
mov
or
pop
push
and
fsubl
icebp
aaa
rcrb
test
out
sub
and
lcall
lcall
push
mov
or
adc
bound
mov
add
xorb
cmp
or
jbe
and
icebp
icebp
ret
iret
in
and
sub
xor
rorb
jmp
sub
je
xchg
nop
jle
nop
cs
xor
pop
add
ljmp
sub
adc
fisubrl
in
mov
call
jne
jl
push
adc
orb
and
mov
scas
je
pop
int3
cmp
jmp
sub
or
out
xchg
cmp
pop
sbb
gs
jno
fnsave
fadds
clc
adc
test
aas
data16
sub
popf
and
mov
cmpl
jle
push
sbb
add
bound
adc
xor
or
sbb
into
rcrb
mov
inc
sbb
mov
es
xchg
fidivl
pop
es
daa
sub
jmp
inc
jb,pn
aaa
pop
dec
jne
sub
sub
mov
mov
insb
cmpsl
loop
clc
cwtl
jne
mov
nop
inc
jbe
in
arpl
jg
fisttpll
jp
mov
pop
pop
clc
xchg
mov
sbb
pop
push
scas
aaa
je
xchg
test
cmp
mov
mov
pop
aas
mov
loop
pop
push
leave
jb
inc
outsb
mov
cmpsl
jle
das
inc
loopne
xchg
and
mov
rolb
rcr
push
loop
push
dec
cmp
jmp
ss
xchg
jae
pop
pop
mov
cmpsb
lahf
popf
mov
mov
pop
xchg
xlat
outsb
jae
shrb
or
repnz
jns
xor
jg
and
repz
sbb
xor
outsl
jge
aas
lret
adc
sarl
aaa
lods
dec
add
rcl
scas
pop
jo
xor
mov
cs
lds
adc
push
lret
dec
lds
pop
cltd
sbbl
in
pop
dec
jmp
cmp
ljmp
adc
xchg
push
movsl
inc
enter
mov
adc
jp
popf
pop
and
mov
add
mov
test
and
movsb
sbb
repz
or
sbb
lock
dec
into
std
push
ss
mov
fidivl
bound
push
nop
cmpsl
dec
mov
jg
and
lods
mov
jg
sahf
iret
popa
inc
adc
sub
imul
jmp
xchg
xchg
xor
addr16
inc
mov
sar
shll
lret
shrb
lods
xchg
daa
int
and
lcall
add
sti
and
loop
mov
mov
orb
inc
or
push
negb
sub
out
push
cmc
jb
jo
or
lock
push
jno
fsub
mov
add
out
mov
mov
imul
xchg
sub
or
mov
rclb
ret
cmc
sbb
xchg
push
in
jb
nop
push
sbb
jecxz
mov
mov
hlt
test
rorl
movsb
inc
xor
call
std
sbb
aad
mov
inc
divl
leave
and
or
ret
sub
lea
inc
add
sub
xchg
mov
or
std
mov
cmp
add
insb
imul
inc
or
out
mov
movsb
push
mov
sbb
outsl
sub
push
testb
pushf
push
test
inc
lcall
js
jbe
adc
jle
xorb
int3
cmc
out
jne
or
mov
out
mov
fisubrl
les
mov
call
or
xor
je
mov
sub
mov
out
outsb
aaa
jb
push
pop
add
icebp
mov
cmp
jecxz
addb
xorl
cmpsb
mov
jl
out
stos
test
mov
sub
addl
mov
xchg
add
stos
movsb
xchg
push
movsb
insb
gs
loopne
push
xchg
lcall
fsubs
push
pushf
jle
push
inc
mov
jno
lret
fadd
sbb
xchg
dec
pop
push
mov
jg
loop
flds
mov
adc
pop
mov
sarb
cwtl
pop
mov
mov
push
aaa
loop
adc
add
mov
xchg
xor
xchg
cmp
push
out
loope
adc
icebp
test
xor
add
sbbb
fistpll
imulb
mov
or
pop
mov
int3
das
int3
lock
cmc
js
enter
pop
xchg
and
lods
or
cmp
sar
ficomps
pop
inc
jp
in
jo
jnp
xchg
cmpsl
sub
lahf
fldcw
gs
rorl
ds
fcmovnu
adc
imul
xchg
mov
subb
jp
mov
cmp
imul
dec
mov
dec
jbe
sbb
pop
inc
push
fdivrl
imul
repz
or
orl
xor
adc
mov
jbe
mov
imul
mov
aas
sub
js
xlat
aas
lret
sbb
pop
fisttpl
imul
mov
aaa
ret
sub
fwait
pusha
push
cmp
loopne
repz
pop
and
dec
ljmp
mov
scas
lea
imul
inc
cli
clc
inc
int3
mov
ret
fsubrl
sbb
push
shll
int3
lcall
ja
fwait
adc
ficoml
cmp
xchg
sub
sub
or
daa
mov
sub
enter
int
inc
inc
mov
out
jbe
lcall
jmp
popf
jbe
out
pop
jge
push
ja
push
sysret
mov
lret
add
push
jp
xlat
pop
adc
dec
js
mov
ds
jl
int3
sbb
aaa
jns
lret
cmp
sub
sbb
clc
es
mov
cmc
lret
lock
mov
outsl
subb
adc
jg
cmpsb
push
test
adc
inc
mov
stc
fsts
in
or
popf
xor
mov
or
imul
hlt
aaa
or
insb
add
bound
fimull
xchg
cltd
insb
sub
stos
mov
add
mov
hlt
mov
mov
cmpsb
inc
push
mov
sub
adc
aaa
inc
mov
mov
test
gs
cmp
pop
pop
insl
fldenv
je
sub
aam
adc
icebp
cmp
shl
fcoml
add
test
inc
fs
fildll
push
mov
rclb
ds
ss
mov
cltd
movb
data16
data16
or
jnp
insb
imul
scas
push
push
mov
sub
add
movsb
dec
pop
out
decl
ljmp
clc
inc
cld
loope
das
dec
inc
xchg
cmp
xchg
mov
dec
cmp
enter
xchg
bound
pushf
sahf
xor
jnp
mov
sbb
cmp
adc
movsl
sbbb
arpl
std
popf
xbegin
movsl
es
sbb
outsl
sbb
or
add
push
movsb
sbb
int
mov
dec
sahf
insl
mov
jecxz
pop
mov
mov
adc
sbb
test
into
mov
push
dec
in
addl
mov
push
loop
jb
jae
lds
adc
inc
fists
dec
push
inc
xor
andb
pop
xchg
iret
or
lods
ljmp
test
mov
sbb
adc
enter
mov
dec
mov
sub
jb
pop
push
test
sarb
and
shl
lret
jne
xchg
in
pop
fnstsw
sti
xor
push
pop
jge
push
test
cli
fisubs
add
cld
aam
stos
nop
mov
divl
pop
pop
inc
ja
inc
push
pop
inc
mov
jle
movsl
sub
dec
loopne,pn
movsb
sbb
add
jecxz
jbe
mov
inc
jno
dec
data16
addl
ret
test
stos
add
sbb
push
push
insl
sub
push
adc
push
inc
rcrb
pop
imul
pop
hlt
addb
push
add
pop
ficoml
fcmovb
jnp
fs
data16
lods
mov
inc
sbb
sbb
cld
ljmp
daa
pop
js
lods
mov
pop
push
repz
or
cmp
in
leave
icebp
dec
mov
push
rolb
or
lret
and
fstp
and
bound
cmc
and
clc
inc
test
mov
ficoml
or
fcoml
jg
mull
and
sub
inc
call
push
xchg
cmp
stc
int
mov
test
mov
sub
ret
inc
mov
mov
xor
leave
pop
or
sub
or
mov
rcll
add
std
data16
push
pop
stc
hlt
cmp
pop
adc
mov
in
cmp
pop
mov
loope
insb
popa
cwtl
jl
add
leave
cld
or
mov
out
insb
cli
jge
dec
insb
pop
sub
aas
in
push
ret
add
xchg
pop
test
in
icebp
mov
into
mov
mov
mov
add
lods
sub
dec
jno
and
aam
mov
mov
dec
pop
mov
into
aas
daa
mov
repnz
and
btr
cmp
movsl
mov
fiadds
inc
dec
into
loop
cwtl
mov
fnstsw
fisubs
push
and
push
out
fistpl
stos
xor
or
sbb
ret
icebp
leave
mov
nop
adc
enter
fistpl
push
add
or
push
mov
packssdw
stc
xor
mov
jl
scas
push
test
in
loop
jnp
cld
cmp
dec
add
mov
cmpsb
and
js
pushf
popa
outsb
inc
push
jbe
in
push
sbb
lcall
out
movb
rsqrtps
mov
adc
in
fwait
or
inc
pop
dec
leave
inc
test
jns
in
mov
sbb
xchg
orl
xchg
add
ret
in
cmp
xchg
dec
push
add
call
fisubrs
fldenv
mov
or
idivl
lahf
fidivs
jl
int
mov
out
cmpsl
pop
mov
mov
sub
adc
mov
mov
fidivs
jge
add
ja
out
lret
and
mov
ss
mov
mov
jb
cwtl
pushf
mov
push
hlt
and
cld
popf
cld
inc
daa
mov
gs
mov
sub
push
mov
aam
movsb
pop
sbb
ljmpw
sbb
clc
popa
int3
and
repnz
cli
mov
inc
jecxz
loope
aaa
mov
and
vmulsd
call
mov
or
pop
add
xchg
sbb
jb
outsb
cmp
jp
addr16
movsb
inc
les
sbb
out
push
ds
inc
mov
xchg
clc
int
pop
mov
xchg
mov
popa
dec
scas
xor
sbb
and
sbb
fxch
xchg
das
pop
mov
jecxz
rorb
mov
sti
std
pop
jge
and
imul
shrb
fsts
xchg
cmpsl
mov
jg
in
cli
addr16
dec
cmp
mov
clc
stc
mov
and
mov
imul
xchg
and
mov
jecxz
push
jmp
pop
mov
fdivr
out
jmp
mov
iret
or
mov
and
and
xchg
ss
in
xchg
out
push
pop
pusha
push
mov
mov
ss
lods
cmpsl
loopne
out
aam
imul
vmovd
add
dec
cmp
arpl
sti
sahf
push
add
jl
fnstenv
mov
xchg
scas
and
cmc
stos
fcmovnu
jle
jbe
fsts
push
es
movsb
fwait
out
subb
xor
pop
mov
push
jne
aam
lock
xchg
xchg
sbb
pusha
adc
test
sbb
outsl
ljmp
mov
in
pop
dec
inc
cmc
mov
and
mov
mov
dec
sahf
and
add
sub
fcomi
ja
out
sbb
pop
out
and
jbe
mov
jge
popa
xchg
pop
js
cltd
rorl
jno
pop
mov
fdivr
or
lds
mov
xor
pop
add
dec
pop
xor
pop
add
or
or
aad
aaa
mov
sbb
dec
cltd
mov
mov
xor
push
push
mov
int
imul
fstpt
add
mov
fistl
roll
mov
mov
fs
fisubrl
rol
movsl
je
adcl
push
inc
push
sub
in
aaa
add
negl
or
popa
out
sbb
xor
aad
jge
sub
jne
or
jo
sbb
out
jae
imul
dec
xor
push
int3
test
xchg
mov
pop
dec
enter
aaa
sub
jne
xor
aas
repnz
in
mov
mov
dec
sub
mov
popf
push
or
xor
or
and
cld
xchg
pushf
mov
sysret
js
lret
sub
pop
shrb
pop
xchg
call
loope
cmpsl
jb
mov
shl
mov
fcomp
pushf
xchg
jmp
mov
xchg
xchg
jae
or
lea
dec
sub
test
xor
mov
xorb
pop
mov
sbb
fs
or
lret
push
mov
test
loopne
test
xchg
sub
inc
push
mov
out
push
cs
icebp
inc
test
dec
std
pop
jno
cmp
icebp
mov
lods
iret
ret
jae
jl
outsl
shl
push
out
mov
sub
ret
iret
sbb
fdivl
arpl
scas
aam
sbb
sbb
lods
sub
in
test
sbb
scas
sbb
push
lods
push
and
jns
adc
dec
rcrb
add
push
mov
cmpsl
dec
push
jbe
push
jb
mov
lods
push
mov
sbb
jmp
add
or
lahf
imul
push
ljmp
jecxz
mov
inc
in
mov
xor
daa
aad
jg
fisubs
enter
pushf
das
inc
jp
adc
int
and
fidivs
lret
pxor
ret
mov
aam
pop
sbb
outsb
lea
aam
cltd
mul
rorb
cmpsb
sbb
bound
lret
popf
mov
mov
gs
push
icebp
xchg
daa
cmp
fwait
or
mov
xor
jle
push
mov
mov
cld
inc
pop
mov
or
xlat
lods
adc
mov
mov
sahf
pop
push
cmp
fildl
adc
out
leave
or
loop
push
sbb
push
and
mov
or
cmc
imul
xchg
inc
out
jns
xor
jno
ret
insl
daa
iret
or
div
cli
cwtl
bound
push
jmp
push
ljmp
test
rcrb
inc
stos
push
mov
clc
push
sbb
sub
sub
add
insl
lahf
adc
mov
or
fistl
ljmp
jmp
mov
sarl
lret
sub
and
jbe
or
sub
pop
mov
dec
repnz
mov
inc
adc
jb
mov
dec
jns
inc
sbb
sub
adc
mov
out
test
jmp
pop
mov
jbe
in
pop
xor
xchg
pop
shlb
int
jnp
sbb
ret
and
fdivs
cmp
imul
clc
dec
xchg
mov
jb
mov
gs
jbe
psubw
mov
mov
fwait
insl
ss
adc
pop
outsb
adc
aam
pop
cmp
cld
cmpsb
xchg
dec
in
sub
fstpl
scas
xor
dec
jge
sarl
pop
imul
mov
cmp
ret
xchg
sbb
mov
or
sub
mov
cmp
sbb
push
addr16
xchg
xchg
enter
mov
in
out
outsb
sbb
sbb
fsubrl
movsb
cmpsl
mov
or
xchg
aad
test
push
je
iret
rclb
adc
push
and
lcall
inc
xor
insb
ret
in
and
fadds
mov
ret
xor
es
fadds
ret
xchg
pop
nop
arpl
sar
aas
or
sarb
cmpsb
xor
push
dec
cwtl
adc
cmc
xlat
adc
fnsave
shrb
cmp
decb
shll
fsubrs
lds
popf
adc
mov
sub
add
pop
shl
xchg
inc
lods
sub
sbb
push
aad
push
addr16
mov
call
xchg
dec
mov
movsl
int3
push
cmp
stos
call
aas
jns
bound
jmp
jne
scas
pop
pushl
inc
xchg
dec
daa
sub
ss
shl
aaa
lahf
pop
fdivrl
sahf
dec
inc
sub
or
nop
xor
xchg
ss
testb
mov
sub
mov
xchg
loop
and
xor
add
cli
push
rcrb
fsubs
xchg
xor
mov
fsubl
clc
mov
nop
outsl
clc
nop
pop
mov
cld
mov
mov
aad
mov
mov
mov
fisttps
mov
fidivrs
mov
mov
adc
lcall
pusha
icebp
ss
jno
cmc
sub
adc
fimull
inc
mov
clc
jmp
ss
cmp
sbb
dec
or
ficoml
add
or
xchg
push
mov
dec
fmulp
mov
xchg
cmp
mov
push
inc
into
fisubrl
mov
scas
cmp
out
xlat
rclb
sub
fsubrl
fs
mov
adc
mov
out
lods
arpl
jge
sbb
cmc
int3
cmpsl
jmp
ds
scas
mov
xor
lcall
jo
mov
lcall
fisttpl
xor
cld
xorl
push
iret
lahf
or
sub
jns
sti
jecxz
xchg
scas
rclb
or
mov
lock
adc
xor
push
push
stc
xchg
mov
adc
or
loope
decb
inc
enter
movsb
mov
stos
loop
ja
cmp
sbb
aad
lds
xor
rcrb
cwtl
cwtl
add
ja
sbb
dec
mov
jge
leave
xchg
sub
push
stc
inc
fsubrs
adc
shr
mov
js
gs
test
idiv
and
and
adc
add
in
mov
jmp
out
aas
push
mov
gs
push
out
mov
xor
sti
test
mov
push
mov
sbb
mov
xor
outsl
repnz
mov
mov
adc
push
fcmovb
mov
pop
nop
add
movl
sbb
js
push
lret
stos
fldcw
cmp
jno
adcb
adc
sahf
push
imul
xchg
repz
jge
pop
aas
and
add
ret
nop
inc
mov
add
nop
dec
lret
pusha
sbb
out
pusha
call
scas
or
xor
dec
adc
lods
xor
mov
cs
cmp
mov
and
mov
xorb
shrl
add
sbb
mov
subl
inc
leave
addl
mov
scas
jmp
icebp
ja
jb
and
xor
dec
push
test
mull
and
lods
arpl
orb
into
xchg
arpl
lcall
cli
pushf
insl
jmp
fistpl
jg
call
loopne
xchg
sub
daa
scas
out
push
movsl
cmp
imul
sbb
repz
or
mov
jmp
mov
outsb
adc
pop
sub
mov
or
repz
push
loope
pop
cmp
lret
mov
idiv
xor
mov
mov
mov
add
ret
and
cmpsl
sub
inc
movsl
sub
adc
push
out
and
popf
orb
hlt
in
mov
dec
lcall
mov
jge
in
mov
or
sti
lret
push
pop
jae
add
cmp
mov
xor
hlt
in
int3
push
dec
adc
cmpl
sbb
cs
mov
fimull
jmp
push
push
mov
inc
and
mov
pop
push
adc
pop
push
fistpll
sbb
lahf
test
and
cli
push
inc
and
xchg
imull
imul
out
push
into
inc
je
dec
andb
ds
testb
aad
adc
scas
mov
mov
pop
mov
dec
mov
fidivrl
inc
dec
frstor
pop
pop
cld
jne
enter
loop
cmp
or
or
std
dec
dec
mulb
cmp
outsl
inc
dec
mov
dec
ds
jle
mov
or
iret
cmp
inc
mov
xchg
mov
test
dec
leave
push
sbb
daa
jb
add
push
pop
lahf
xorl
imul
movsb
insl
addb
push
shll
push
xchg
pop
mov
imul
lods
or
jle
mov
leave
ds
in
sub
pop
roll
movsl
mov
jecxz
std
into
xor
sub
or
and
xorb
adcl
mov
and
inc
mov
test
loopne
sub
adc
adc
in
lock
fldenv
repnz
lods
adc
lock
cmp
push
jns
inc
gs
fstp
fcoml
outsb
mov
data16
fs
pushf
fiaddl
pushf
jle
mov
ja
in
int3
jg
jl
out
xor
pusha
lea
push
fisttps
loopne
sbb
push
cmpsl
or
jne
mov
push
insb
lcall
test
inc
insl
xchg
fistpl
cld
inc
cmpsl
das
inc
mov
jnp
aad
outsb
push
xchg
or
pop
cmpsl
aaa
add
push
xchg
xchg
inc
xlat
in
loop
xor
sahf
insb
sbb
pop
and
sbb
aad
add
mov
shll
call
cmpsl
push
inc
repnz
push
shll
cmp
test
push
pop
cmpsb
mov
jae
inc
dec
addb
pop
mov
push
insb
in
sahf
mov
cld
test
pushf
cmp
out
pop
int3
es
clc
in
push
aam
mov
lcall
mov
sbb
inc
inc
ret
addr16
popf
dec
icebp
enter
push
das
pop
test
ret
sbb
mov
adc
sub
push
pop
fcomps
rcr
movsl
mov
adcl
int
mov
bound
mov
shll
loope
xlat
cmpsb
das
js
ret
dec
in
ficoms
pop
add
test
and
aaa
add
push
cmp
cmp
loopne
sbb
stos
pop
sahf
mov
dec
pushf
push
push
shll
scas
incb
shlb
xchg
ja
icebp
fimuls
pusha
xor
lods
test
and
fsubrs
cmp
mov
cmpsl
cmp
imul
xchg
scas
stc
mov
push
jns
aad
out
add
mov
cmpsb
mov
cltd
jge
ja
xchg
loop
cmc
loop
and
xor
out
lea
sti
lret
loopne
cmp
fwait
je
enter
inc
sbb
dec
lahf
rcrb
mov
mov
adc
pop
cld
popf
cmp
mov
sub
movb
mov
and
in
and
sahf
shl
sub
or
push
lods
or
sarl
pop
or
in
lods
mov
dec
push
push
inc
loopne
dec
sbb
dec
popf
xchg
fwait
out
or
inc
sti
fldt
jnp
sbb
outsb
pushf
add
pushf
andb
pop
sti
adc
mov
int3
sub
pop
data16
fistpll
push
sbb
cs
faddp
mov
xchg
xlat
push
rolb
mov
sub
cmp
add
and
push
lret
inc
push
aaa
imul
aas
addr16
pop
leavew
mov
xor
test
aaa
and
in
mov
ss
push
add
lods
scas
sub
or
jl
test
imul
imulb
daa
subl
scas
and
adc
sub
fstpl
into
and
repnz
aad
adcl
lock
push
mov
cs
push
add
pop
xor
imul
ja
movsb
movsb
cmpsl
les
inc
push
cmp
inc
xor
loope
xchg
xchg
sti
dec
mov
aad
int3
pop
js
js
dec
das
cld
in
push
and
bnd
sub
push
aam
pop
int3
sub
jmp
push
cmpsl
rolb
cwtl
test
div
dec
int3
pop
add
mov
enter
xchg
push
call
je
bound
jbe
aas
pop
cltd
mov
mov
inc
je
xchg
test
push
adc
jp
cli
sbb
notb
cmpsl
cmp
inc
xchg
cmp
push
insb
test
int
in
jno
jecxz
xchg
jecxz
pop
scas
sbb
xorb
cmc
aad
subb
lods
sbb
negl
add
idiv
pop
xchg
and
pop
jbe
or
lea
and
mov
pop
and
mov
ret
cmp
js
sbb
sahf
test
jge
imul
sbb
adc
xor
in
jns
fwait
in
aam
iret
scas
mov
push
adc
js
loopne
and
fs
loope
in
loopne
in
call
or
mov
add
dec
xchg
orl
inc
cmp
add
cwtl
xor
sub
jge
mov
push
or
inc
js
orb
sub
jo
bound
fs
repnz
xor
add
movsb
dec
xchg
or
lds
sahf
stos
jle
cmpsb
jb
icebp
cs
pop
sbb
lock
mov
push
dec
adc
add
pop
and
fildl
pop
xor
fldl
icebp
and
dec
jmp
shll
fs
jecxz
aam
and
gs
cmp
jno
jecxz
sbbl
cltd
addr16
rorb
iret
int3
int3
mov
jne
mov
daa
mov
jns
jne
push
push
scas
or
lret
or
inc
cmpsl
dec
rolb
add
lcall
and
xchg
cmp
or
in
in
sub
repz
nop
adc
add
pushf
sbb
test
add
cli
dec
and
jnp,pn
dec
test
xchg
xchg
outsl
ret
dec
xor
mov
jg
and
and
sbb
mov
adcl
push
push
cmp
mov
test
test
pop
jbe
inc
imul
jecxz
cmp
dec
add
sub
lret
adc
aas
ss
repz
sub
and
std
xorb
jnp
mov
cmp
rcrb
xchg
ja
cwtl
adc
out
cli
sbb
setno
pusha
into
orl
lods
inc
jp
mov
and
scas
repz
fwait
mov
inc
call
in
xor
outsl
fisubs
mov
pop
dec
sub
in
ret
pop
push
xchg
in
ss
int
jno
push
int3
pop
std
pop
or
adc
and
shl
push
mov
inc
add
stos
push
lods
cmpl
nop
test
jg
nop
mov
shll
push
mov
sbb
dec
cmpsb
mov
adc
stos
sar
adc
addl
fimuls
repnz
inc
xor
add
mov
jecxz
cmp
fadd
mov
fbstp
lret
shr
in
fldt
jae
mov
hlt
pop
or
lea
push
jle
push
gs
inc
test
js
push
in
and
jg
and
sbb
and
jmp
xor
push
cmp
test
stc
mov
stc
push
sti
pop
dec
mov
gs
mov
dec
call
push
xor
pop
jbe
icebp
pusha
testl
cltd
and
inc
dec
dec
loopne
or
aam
or
adc
sarl
sbbb
mov
mov
add
stc
maskmovq
stc
cmpsl
lock
sub
aaa
mov
rcrb
pushf
mov
cld
cmpsb
add
add
sti
clc
fidivrl
arpl
mov
xor
aam
in
xor
xor
arpl
mov
out
or
dec
mov
pop
lcallw
push
inc
les
stos
mov
daa
fisubl
int3
xchg
shrb
mov
lods
mov
nop
in
ljmp
mov
out
sbb
jo
fstps
cltd
jb
inc
sub
int3
jmp
std
adc
add
sarb
jg
cmp
jns
dec
in
jmp
pop
mov
fsubs
jae
jo
inc
cltd
test
or
xor
enter
cld
pop
mov
scas
out
pop
jo
xorb
jno
je
pop
or
loop
jecxz
mov
or
insb
adc
fisubrs
inc
leave
mov
push
mov
popf
cld
lret
in
js
notb
sti
call
jae
mov
iret
jmp
aas
shrb
mov
outsb
call
out
dec
icebp
cmpsb
dec
inc
icebp
xlat
mov
mov
cld
neg
dec
and
in
loop
and
mov
jge
mov
jne
xchg
dec
frstor
sbb
imul
xchg
adc
repz
and
test
pop
cli
jne
cwtl
bound
xor
push
cmp
popf
lahf
mov
iret
pop
pushf
ljmp
jns
addb
jle
stos
mul
xor
sub
clc
pop
push
adc
xor
sarb
jg
rolb
lcall
sbb
int3
mov
fildll
pusha
loopne
fisttpll
das
rcl
or
loope
jb
js
movsl
and
out
mov
adc
push
jnp
js
push
mov
in
rcll
mov
mov
mov
movsb
rorb
jl
cmp
xor
mov
lock
mov
xchg
pop
xchg
fs
lret
inc
loop
inc
leave
pop
or
rolb
imul
inc
adc
cmp
lock
fwait
xchg
lret
jnp
inc
mov
push
mov
adc
cmpsb
iret
data16
pop
sbb
jo
stos
fxch
adc
push
push
jg
int3
js
rcrb
sbb
adc
and
idiv
cmp
repz
xchg
mov
inc
cmp
jb
dec
cltd
jae
inc
add
clc
stos
add
sbbb
inc
and
out
fcomi
adcb
cmpsb
mov
fiaddl
inc
data16
shlb
cmc
ljmp
in
cmp
shl
xchg
insl
popf
mov
inc
outsb
js
inc
fldcw
pop
nop
add
push
fisttpl
jecxz
pop
aas
mov
inc
and
sbb
jecxz
mov
fistl
and
pop
in
mov
mov
stos
xor
mov
push
fstl
jmp
decl
stc
xchg
rcrb
mov
imul
cmc
les
xor
or
lock
adc
in
mov
inc
sbb
mov
inc
and
daa
popa
push
adc
outsb
jge
roll
push
out
jo
hlt
loopne
rclb
test
sub
mov
lret
cmp
sbb
mov
mov
pushl
add
push
dec
cmp
or
je
sub
fnsave
bound
or
xor
fidivs
push
xor
icebp
imul
fcoms
fcomp
in
pop
mov
popf
leave
out
pop
xchg
imul
add
jb
add
stos
mov
test
cs
xor
dec
jp
push
mov
jmp
dec
xchg
ds
testb
insl
mov
sub
stc
sbb
loope
je
shl
cmp
sub
sub
and
test
add
aas
insb
leave
cmp
insl
in
mov
sub
xor
cmp
loopne
xchg
xchg
fcmovne
cmc
inc
shll
sbb
add
mov
subl
inc
cmp
loopne
nop
push
and
jbe
cmpsl
lret
lcall
rcl
rol
cld
jb
mov
adc
or
out
out
sbbb
test
or
rolb
sbbl
nop
imul
pop
mov
fisubl
mov
hlt
fidivrs
fwait
jge
sarb
leave
inc
ja
loop
addr16
mov
call
enter
push
pop
rorl
fwait
jbe
and
and
fcoml
xor
adc
aas
sub
adc
test
pop
daa
popf
movsl
outsl
les
dec
stc
stc
out
int3
mov
push
mov
and
add
je
push
lahf
and
outsl
nop
jmp
xchg
mov
add
jmp
rcr
insl
jp
cmc
mov
mov
or
test
in
dec
push
fnstenv
sub
nop
mov
pop
cld
rcrb
dec
push
lods
fisubrs
ror
mov
lods
mov
mov
push
sub
xchg
xchg
jb
imul
pop
adc
adc
inc
sti
xlat
pop
stos
daa
movsb
sub
dec
cmp
pop
sub
je
mov
iret
mov
popa
push
ret
push
imul
sub
cmpl
sar
es
xor
pop
inc
in
or
rol
stc
dec
aaa
jne
mov
push
lret
movsb
sbb
sti
cmpsb
bound
mov
lods
sbb
shlb
add
or
lret
lahf
cmpsl
sub
clc
fisttpll
push
stos
in
fildll
test
jg
lds
inc
add
popa
sbb
xchg
ret
mov
mov
add
loop
in
out
mov
shl
inc
adc
lahf
mov
sti
push
mov
push
ss
jne
push
rorl
xchg
cwtl
mov
mov
pop
stc
movl
jmp
sbb
xchg
mov
dec
mov
inc
inc
pushl
in
inc
lahf
inc
fs
jne
inc
jg
mov
and
jmp
fcoms
ljmp
inc
je
push
jmp
push
cmc
jl
adc
fldl
outsl
jmpw
out
and
popf
das
xor
mov
xor
shrl
xchg
mov
or
test
sbb
push
mov
xchg
xchg
mov
fnstenv
jno
jnp
mov
cmp
jb
pop
jg
xor
push
push
fsts
imul
xor
cmp
and
xor
mov
adc
mov
adc
sbb
xchg
jecxz
sbbb
or
bound
inc
aaa
leave
repz
dec
add
pop
loopne
pop
mov
sahf
fisubrs
pop
xchg
les
cmc
xchg
mov
mov
or
mov
lds
cmp
dec
popf
rcrl
std
add
stc
out
adc
xchg
movsb
jne
movsl
inc
sbb
in
xchg
and
fmuls
das
ret
arpl
mov
cmpsl
rolb
stc
jnp
stos
pop
pop
ja
decl
push
test
and
or
fdivrp
lods
les
out
jl
pop
sub
lods
gs
cmp
rol
jmp
push
out
lock
add
jo
mov
jne
and
mov
movsl
daa
xor
les
sub
push
sub
push
inc
test
les
das
scas
mov
push
bound
xchg
mov
insl
fwait
sbb
fsubrl
dec
pop
mov
bound
pop
push
adc
adc
push
sub
mov
add
fsub
jmp
mov
rclb
push
mov
cli
fdivl
adc
sti
stc
shlb
dec
or
sub
lea
les
fcomps
sti
lcall
test
insb
cmp
outsl
push
add
inc
mov
cmp
fisttpll
cli
andl
cmp
mov
in
cltd
fadds
shll
dec
mov
js
stos
xchg
jnp
and
fnstsw
or
dec
ss
stos
enter
jle
mov
sti
hlt
xchg
sub
sti
jns
into
adc
pop
mov
fimull
push
mov
push
xor
jb
ficoml
and
inc
subl
mov
xchg
arpl
fs
lcall
pop
cmpsb
mov
data16
jmp
call
test
mov
scas
or
sahf
repnz
push
mov
jle
pop
xchg
sbb
scas
sub
cwtl
push
add
inc
arpl
push
pop
lcall
pop
dec
and
inc
test
fmuls
mov
sub
imul
dec
xor
xorl
movsl
dec
xor
jp
ror
push
xor
adc
jne
mov
int
mov
pop
jbe
or
cmp
in
cli
out
cltd
testl
fbstp
cmp
xor
pop
stos
bound
pop
cld
dec
ja
ret
data16
mov
adc
cmpsb
test
xor
xor
insb
inc
jne
cs
mov
out
push
dec
jne
or
jb
pop
jl
es
fbstp
dec
xchg
rorb
arpl
lock
jbe
lret
sbb
mov
pop
jnp
int3
mov
outsb
pop
dec
push
and
flds
jge
jmp
inc
cmp
adc
push
push
dec
sbb
add
cmpsb
sbb
mov
fwait
mov
jmp
dec
mov
inc
pop
pop
jbe
in
mov
rclb
ljmp
cs
inc
cmp
lret
daa
es
add
fisttps
inc
repnz
into
adc
adc
mov
sbb
xchg
enter
fsubr
and
xchg
sti
push
dec
lea
cmpsl
clc
mov
sub
lret
cmpsb
pushf
inc
movb
stos
idiv
dec
in
inc
mov
push
sbbb
lds
out
pop
rcr
jge
loope
popa
std
lock
jge
iret
aad
jb
inc
xor
xlat
sub
outsl
jne
xor
out
mov
push
and
jg
adc
mov
in
popf
pop
fimuls
inc
sbb
sub
ret
mov
mov
loope
mov
outsl
xchg
jl
xlat
cld
sbb
mov
hlt
sbb
clc
or
add
mov
mov
imul
out
loopne
sarl
pop
aaa
lock
mov
out
inc
or
or
arpl
pop
inc
sub
mov
cld
inc
mov
cltd
das
and
mov
test
xor
mov
pop
aas
push
jne
loop
xchg
push
lea
shll
daa
shll
in
dec
dec
jns
mov
jnp
mov
fidivrl
stc
into
sub
xchg
aad
cld
mov
mov
into
bound
push
add
lods
jecxz
inc
dec
ret
jmp
inc
int3
imul
in
sub
stos
dec
test
fildl
repnz
jp
and
in
movsl
add
xchg
jecxz,pt
jl
xor
shlb
sub
int
je
cltd
sub
mov
add
mov
mov
ja
dec
stos
shl
sub
aaa
pop
insl
mov
sbb
aad
out
pop
sub
cli
jnp
adc
xor
mov
ja
rcl
sub
cld
and
cmp
sub
xchg
int
sarl
jmp
inc
jo
popl
sti
arpl
xor
dec
imul
jns
and
push
add
ficoms
xchg
ss
orl
in
rorl
mov
cld
out
or
inc
pop
cwtl
loopne
mull
nop
clc
cmpsb
xchg
pop
sbb
cs
xor
ret
leave
pop
daa
add
call
lret
cwtl
adc
addb
mov
mov
sbbl
mov
cmp
mov
dec
popa
sub
mov
cli
out
pop
mov
fwait
stc
jp
sub
xchg
roll
loop
or
insb
stos
sub
cmp
incb
aam
cmpsl
aas
add
pop
or
lock
push
xchg
push
cmp
sahf
jo
cmp
aam
lock
inc
lock
call
jo
test
sar
pop
outsb
ljmp
or
pop
or
add
mov
hlt
out
push
mov
mov
sub
push
filds
pop
mov
adc
and
jnp
movsb
clc
call
and
pusha
pop
xchg
inc
cs
enter
jmp
adc
pop
push
insl
push
loopne
lret
mov
cmp
fadd
inc
lea
enter
das
or
inc
adc
subb
jo
arpl
mov
add
movb
int
and
add
ja
repnz
xchg
mov
pop
aas
dec
sub
mov
dec
mov
xchg
xchg
push
or
mov
sbb
cmp
stos
dec
pop
xchg
sbb
mov
movsl
push
xlat
ljmp
ds
dec
xor
jae
xchg
or
mov
insl
adc
sbb
or
imul
xchg
sub
jmp
inc
cmp
sahf
in
mov
inc
xor
fs
test
aam
add
pop
mov
xlat
mov
mov
pop
test
push
popf
ror
sahf
insl
mov
dec
sub
or
lahf
mov
aad
push
push
fcmovnu
mov
lret
push
jns
repnz
inc
xlat
mov
pop
ret
stc
mov
pop
aam
cmp
fcmovnu
xchg
push
data16
dec
out
dec
sub
push
cwtl
les
rorl
int
imulb
sbb
imul
cmp
decl
pushf
jne
imul
aaa
inc
stos
pusha
xchg
shll
xor
cmpl
sti
pusha
jmp
subl
popa
and
jmp
daa
out
stos
hlt
mov
mov
pop
sbb
shll
sub
das
mov
sbb
js
gs
into
bound
daa
and
jbe
pop
xchg
sbb
xor
loope
call
mov
mov
movsl
js
cwtl
shrb
cmp
stc
inc
jle
and
xchg
xor
imul
sub
inc
rcr
repnz
popa
and
aaa
mov
insb
mov
mov
fiadds
ret
aas
mov
scas
push
testl
jmp
and
dec
mov
push
imul
push
lds
mov
mov
fcompl
and
pop
hlt
imul
test
out
push
sti
popa
sbb
sbb
mov
into
xor
push
scas
frstor
inc
into
arpl
cmp
mov
push
fcoml
inc
mov
sub
push
fcomi
mov
fs
mov
sbb
inc
add
jmp
pop
cmpsl
mov
and
sti
nop
fcomps
push
inc
jle
xchg
inc
xchg
mov
mulb
xchg
dec
xor
in
jne
sbb
jp
shll
dec
sub
sbb
outsb
test
sbb
ds
jl
jp
in
xor
clc
push
fs
cmc
add
or
enter
icebp
mov
adc
xchg
mov
xchg
mov
xor
jne
outsb
sbb
jnp
or
or
fldl
pusha
mov
jns
shll
xor
dec
push
xor
loope
sbb
xor
add
mov
mov
dec
fistl
hlt
inc
filds
cmp
xchg
lret
cs
js
cmp
xor
lods
or
sbb
push
xor
mov
ds
add
cmp
test
cmpsl
xchg
xchg
dec
daa
mov
das
adc
fwait
bound
sub
in
ret
push
std
cmp
lcall
xor
sub
pop
xchg
jge
xlat
adc
and
or
jl
leave
mov
ss
stos
or
xchg
call
fisubrl
fsubrs
test
sub
outsl
dec
stos
ja
stos
ret
iret
insl
xor
push
out
push
jns
xchg
std
jle
mov
pop
cmp
sub
das
das
fildll
mov
insl
negl
sub
insl
inc
test
scas
sub
sub
repz
adc
ret
mov
xchg
jnp
shrl
and
bound
aad
and
leave
lods
fcmovne
inc
repnz
mov
pop
lock
test
enter
gs
dec
fs
xor
jns
outsl
mov
cltd
les
pushf
pop
addl
add
mov
xchg
paddusw
pop
adc
fs
roll
loope
and
mov
cmpsl
mov
int3
or
outsb
push
jns
shll
rcl
es
jb
divb
shlb
add
xor
mov
jecxz
xchg
cld
scas
shr
test
push
into
add
mov
sub
cmp
imul
leave
jp
mov
leave
aaa
cwtl
gs
aaa
mov
insb
inc
test
cltd
pop
and
pusha
leave
dec
pop
aas
add
cmp
popa
or
pop
xor
dec
shll
shl
fwait
in
mov
fidivl
dec
and
adc
mov
fsincos
shll
mov
add
jl
push
inc
fldl
or
inc
pop
adc
imul
cs
repnz
dec
jg
pushl
lea
movsb
subb
sbb
sub
popf
mov
das
stos
loop
add
pushf
test
movsl
lock
clc
jp
inc
jl
clc
inc
xor
dec
mov
sahf
fistpll
popa
inc
sbb
dec
in
jbe
or
jae
adc
lods
js
xor
dec
cmp
ret
pop
xchg
je
test
mov
push
pop
fucomi
jnp
rcrl
sbb
push
push
push
out
icebp
ret
sub
loop
mov
pop
mov
dec
pop
xchg
out
aam
int3
jns
les
clc
pushl
je,pt
sti
dec
cld
inc
mov
pop
fcompl
pop
mov
je
xor
push
cltd
ja
call
hlt
imul
push
and
cld
jns
pusha
sub
jnp
sbb
lock
jo
decb
addl
in
lock
fwait
nop
mov
add
fwait
stc
jecxz
out
dec
pop
mov
push
insb
outsb
and
sbb
andb
fbstp
jge
mov
xor
or
dec
xor
lods
jne
jmp
xchg
mov
push
scas
testl
pusha
push
xlat
shr
out
inc
xor
push
cwtl
dec
sub
fwait
stc
data16
add
lock
fsts
and
aaa
and
dec
addr16
add
stos
adc
gs
inc
ss
hlt
hlt
je
out
inc
adc
lcall
movsw
lds
popf
test
add
int
mov
pop
mov
mov
mov
mov
scas
jmp
std
sub
and
push
pop
or
sbb
pusha
addl
mov
ljmp
xchg
pusha
lret
and
daa
xor
inc
out
lock
pop
sbb
xor
ret
scas
fistpll
cltd
call
repz
into
inc
adc
dec
out
pop
pop
call
call
adc
cmc
inc
insb
in
jmp
mov
jo
mov
mov
push
mov
cwtl
cld
adc
mov
in
jecxz
or
pop
ljmp
rcl
mov
movsb
fbstp
insl
mov
loope
cltd
jle
imul
xchg
xchg
mov
ret
adc
and
addb
pop
test
scas
popa
mov
out
fcoms
pushf
inc
pusha
cs
sbb
out
pop
add
test
repnz
add
adcl
in
xlat
in
sub
adc
jl
div
fstpl
dec
push
adc
jp
aas
jmp
adc
subb
sub
xchg
mov
das
adc
aaa
shr
cltd
ljmp
adc
push
orl
call
fldcw
leave
fcompl
mov
xchg
aam
stos
outsb
cwtl
xchg
jne
pusha
cmp
lock
pop
in
cmp
adc
jp
test
inc
and
sti
aaa
loope
jo
pop
mov
push
enter
shlb
aas
mov
outsb
pop
cmp
add
fcomps
push
cmovno
outsb
mov
idivl
js
mov
xchg
mov
cmp
loopne
mov
ret
imul
inc
insl
lods
adc
repnz
andb
add
cli
inc
hlt
lret
jmp
jmp
rcll
stc
or
mov
cmpsl
out
in
adc
sbb
icebp
jmp
xchg
mov
arpl
inc
lahf
stos
stc
xor
test
dec
mov
in
jbe
sub
scas
adc
or
adc
push
or
orl
insb
or
mov
cltd
mov
mov
cmp
adc
ja
add
cmp
xchg
rorw
dec
push
inc
negb
inc
mov
or
ljmp
std
and
into
out
cmp
pushf
stc
xor
outsl
jno
std
stos
stos
inc
lods
aam
xor
and
cmp
inc
arpl
loop
out
mov
mov
movl
lcall
je
loopne
or
push
sbb
in
lret
cmp
adc
mov
sub
sahf
push
push
dec
ss
pop
ss
jecxz
mov
inc
ja
out
fdivrl
and
lock
jns
xlat
mov
mov
das
push
es
inc
mov
push
sbb
pop
pop
sarl
pop
rcr
add
pop
push
mov
push
xchg
outsl
or
test
sub
pusha
lcall
mov
mov
fs
xchg
xchg
call
push
inc
adc
insl
movsb
addr16
iret
dec
push
sub
xchg
daa
pop
cmp
sbb
add
sbb
shl
aam
xchg
mov
jle
jae
or
dec
mov
outsl
cmpb
sub
and
mov
adc
repnz
ljmp
sbb
cmpsl
xor
pop
es
pop
stos
and
fcoms
cs
inc
test
lcall
cmpsb
test
push
pop
aam
jbe
shl
mov
cmpl
movsl
jb
pop
lods
jo
pushf
fstps
pop
jg
jl
pop
andl
aad
inc
jge
mov
dec
cmp
pusha
loop
cmp
iret
call
dec
adc
push
out
adc
cld
shlb
mov
cmp
arpl
push
xchg
ficoml
out
xor
jmp
cwtl
and
xchg
out
cmp
inc
cli
adc
ret
jo
hlt
int
add
in
aaa
cli
pop
sbbl
imulb
push
ret
xchg
xchg
dec
push
stc
mov
inc
mov
fwait
scas
cmpsb
loop
cmovl
pop
xchg
rolb
fiaddl
and
jmp
out
or
mov
add
ret
clc
popa
std
fldcw
mov
mov
xchg
cmp
vcvttsd2si
imul
push
mov
pop
jno
lods
pop
adc
cmc
push
cmp
repnz
pop
das
test
dec
mov
xchg
cltd
sbb
and
inc
jg
push
repnz
test
in
fadds
movl
rol
cwtl
cmp
xchg
in
cwtl
jge
das
data16
fldcw
xchg
mov
cwtl
cmc
pop
fdivl
ds
sbb
xchg
faddl
rorb
jle
jp
cmpsl
jge
in
and
pop
add
cltd
repnz
push
sub
adc
in
incl
mov
inc
xchg
imul
mov
jb
les
sub
movsb
enter
insl
dec
lret
push
mov
xor
flds
ret
ret
add
inc
cmp
aam
repnz
mov
js
outsb
and
fs
mov
push
inc
pushl
xor
cmc
push
adcl
fldenv
pop
jbe
jp
call
mov
jge
jmp
or
add
mov
mov
stos
push
or
xor
inc
xor
push
es
mov
xchg
cmp
or
loop
xchg
repnz
test
sahf
sbb
sub
cmp
mov
jnp
push
data16
je
insb
in
daa
add
sbb
lock
stos
dec
int3
jo
xor
andb
or
ss
call
mov
sbb
fisubs
clc
fnstenv
test
lock
mov
mov
pop
sti
or
jnp
mov
fldl
out
jnp
xor
cli
pop
cmc
mov
cltd
mov
cmp
jl
in
inc
rcll
inc
xor
xor
cmp
movsb
clc
ret
cmp
sub
push
fwait
mov
sbb
es
sbb
inc
xchg
data16
add
push
loopne,pt
insb
dec
cmpsb
sub
push
xchg
jmp
faddl
out
fcoms
adc
aad
inc
fimuls
push
or
test
pop
pop
scas
jns
fidivrs
cli
lock
push
scas
jp
ficomps
icebp
fwait
or
aad
pusha
pusha
pop
out
sub
bound
test
clc
arpl
shr
popf
pushf
adc
jnp
mov
cmpsb
push
jle
rorb
jle
mov
rcr
rcl
sub
out
fisttpll
lods
jae
sbb
dec
lods
jae
xchg
add
sahf
mov
out
call
push
scas
xor
dec
inc
clc
and
leave
xchg
imul
mov
pop
inc
test
loop
scas
jp
daa
jnp
inc
dec
shll
push
mov
pop
or
push
mov
and
and
flds
fcmovbe
lret
cmp
pop
xchg
js
and
sub
xchg
add
into
in
lahf
add
hlt
fdivs
pushf
cs
lea
push
xor
movsb
mov
sub
push
std
cmp
push
icebp
sbb
inc
jecxz
push
fs
mov
test
cltd
shlb
mov
mov
in
or
out
hlt
call
sub
icebp
inc
mov
push
sbb
filds
or
sub
daa
cmp
in
jl
jo
dec
sti
xchg
push
in
cmc
imul
xchg
dec
cmp
mov
fisubl
pop
shll
mov
inc
mov
test
adc
sbb
xor
in
aaa
ljmp
hlt
jge
test
pop
or
icebp
sahf
pop
cmpsb
pop
xchg
mov
in
sbb
xchg
and
pusha
push
fstl
leave
shlb
lods
inc
loope
out
mov
or
sbb
or
mov
sub
mov
cwtl
inc
arpl
adc
pop
ljmp
shlb
ret
cltd
test
lcall
sub
mov
lods
mov
cli
sub
daa
lcall
adc
push
push
jle
ret
mov
scas
add
aad
cmp
push
cltd
jo
pop
xchg
inc
inc
mov
sbb
out
call
imul
mov
xchg
pop
cmp
lret
fisttpl
movsbl
push
or
sub
jne
mov
mov
cmp
mov
add
leave
gs
pop
cmpsl
loopne
jns
jmp
lret
movsb
push
xor
shl
jg
dec
out
sti
pop
and
mov
call
adc
mov
jp
sbb
cwtl
shld
ret
mov
repz
pop
in
lock
mov
lcall
xor
cmpsb
fnstsw
adc
fdivp
mov
mov
mov
adc
cmp
or
or
mov
push
ret
cmp
cmp
aaa
in
jl
stc
jmp
pop
in
movsl
dec
sti
in
enter
das
inc
mov
clc
popf
sbb
aam
pop
and
lcall
cld
out
add
add
in
cmpsl
pop
out
nop
js
std
rcr
push
mov
shll
cmp
inc
shr
int3
scas
xor
push
sti
xor
jbe
pop
push
test
and
jg
add
outsb
sbb
mov
mov
fwait
push
test
mov
call
push
das
shll
fadds
adc
lods
mov
push
jo
stos
rcl
and
xchg
repz
mov
adc
stos
roll
xor
pop
mov
ss
popa
sub
jl
mov
imulb
loopne
test
pusha
out
lods
adc
sti
cmpsl
xchg
nop
dec
jecxz
xchg
out
mov
cmp
cs
imul
push
cmc
pop
xchg
xor
ss
or
mov
jge
cltd
mov
pop
or
lods
xchg
fdivrl
rcl
popa
cwtl
imul
push
xor
in
roll
pop
add
pop
mov
mov
pop
rcrl
ja
leave
gs
mov
inc
mov
rclb
test
add
shll
sbb
xchg
jnp
roll
mov
gs
jg
negb
test
xor
inc
in
adc
jg
push
les
inc
add
jae
aam
cmp
jnp
cmp
mov
mov
push
jno
loopne
mov
pop
aam
mov
and
out
jle
jns
pushf
test
mov
dec
fbld
das
adc
stc
es
push
pop
pop
mov
add
lock
mov
inc
imul
xchg
mov
sbb
adc
or
lcall
add
out
enter
adc
in
mov
in
test
nop
sbb
ret
pushf
adc
ss
test
pop
xorl
ret
test
shrl
rcr
jbe
fldcw
push
lds
outsb
xchg
jp
shrl
push
jb
jae
push
lea
mov
push
mov
andl
loope
mov
sahf
cmp
mov
mov
fimull
fiadds
cmpsb
std
mov
data16
dec
mov
ds
cld
nop
mov
mov
inc
and
in
inc
cmp
clc
mov
lahf
test
repz
or
dec
cmp
mov
pop
imul
cmp
inc
xchg
jno
lret
test
mov
and
mov
idivl
rcr
jp
pop
lds
stc
repnz
mov
xlat
sbb
int3
inc
mov
ss
cmp
ret
and
sub
pop
cmp
cs
mov
cmpsl
enter
jle
pop
iret
sbb
int
mov
xor
stos
pop
in
or
inc
adcl
cmpl
inc
dec
mov
xor
lret
push
fidivl
mov
mov
mov
scas
push
mov
jge
jmp
pop
fists
add
data16
adc
add
cmpsl
mov
js
adc
push
mov
push
nop
or
into
dec
clc
xchg
cmp
dec
fidivs
adc
xlat
cmp
in
mov
out
cmpsb
sahf
mov
lret
jle
frstor
fcompl
int3
pop
or
jae
daa
or
fs
rorb
jb
cmpsl
shll
xchg
mov
jb
jmp
adc
insb
daa
leave
mov
loope
cmp
dec
xor
test
pop
mov
repz
ror
ret
add
std
or
inc
scas
mov
adc
adc
leave
xor
xchg
add
lea
flds
jle
outsb
fdivs
lret
cmp
ja
inc
inc
add
jge
mov
cmp
xchg
cld
int
nop
jnp
dec
jmp
fucomi
mov
jne
mov
pop
loope
xor
and
ja
mov
xchg
xchg
insb
cmp
fwait
cld
cli
push
dec
leave
pop
fistl
add
dec
jo
repnz
imul
dec
orl
xchg
mov
inc
fcomps
inc
leave
add
out
pushf
ret
jb
cmp
add
ficomps
shrb
movsb
sbb
mov
popl
shl
hlt
test
fstpt
movsb
cmp
or
pop
or
xchg
mov
push
lea
mov
xchg
aad
mov
aas
push
ret
pushf
mov
mov
add
aad
sbb
imul
cmp
jb
ss
cltd
fcoml
stc
jecxz
lock
and
inc
ja
outsb
xor
jmp
ficoms
or
rep
push
pop
push
xchg
sbbl
sbb
mov
cs
insb
test
in
int3
test
js
adc
xchg
mov
or
mov
aam
lret
mov
mov
mov
jae
sbb
fisttps
es
jnp
pop
rclb
add
imul
cltd
scas
ret
lahf
sbb
movsb
cmpsb
movsb
xchg
push
inc
scas
test
cmp
xor
adc
mov
rcrb
arpl
sub
in
int3
insl
mov
aam
xor
push
xchg
stc
xchg
xchg
int3
in
cmp
jns
scas
clc
mov
fbstp
sti
xchg
in
push
pop
jl
dec
xchg
ficomps
inc
dec
or
arpl
cmp
in
sarb
sub
outsl
or
movsl
cld
std
lods
and
and
cmpsb
outsb
ret
xor
cli
adc
add
fildl
mov
popf
imul
mov
xor
pop
push
dec
cltd
stc
fcompl
sub
mov
push
sti
pushf
mov
xorb
fsubs
inc
insl
or
pop
pushf
add
loopne
movb
loop
ss
fildl
mov
aas
inc
add
and
std
gs
or
stos
iret
mov
sbb
mov
test
jecxz
cwtl
xchg
and
imul
push
call
repz
and
ljmp
mov
or
push
jns
movsl
jb
cli
xor
cld
cmp
jp
call
cmp
dec
xlat
divl
xor
bound
push
sub
andl
and
sub
pop
aas
popa
popa
adcb
fs
jle
mov
pop
inc
xor
or
push
mov
popl
jnp
div
lds
inc
outsl
jg
inc
into
andb
fdivrl
cmpsb
sbb
cmp
push
les
pop
cs
jns
add
out
cmc
sti
popa
sahf
lock
cmp
xor
and
dec
xor
mov
or
adc
ds
mov
stos
sbbb
add
sbb
call
in
pop
mov
scas
mov
pop
dec
js
cmp
mov
pop
jge,pt
call
jl
mov
xor
sbb
movsb
jmp
inc
pop
out
lds
pop
push
fisttps
xor
out
movsl
or
xor
cmp
xchg
add
adc
aas
mov
sbb
stos
cwtl
and
or
xchg
cmpsl
jmp
cmc
jmp
cli
mov
jb
push
fiaddl
xchg
lcall
push
sarl
js
out
mov
jo
sbbb
fmull
aaa
idivl
pop
pop
mov
nop
outsl
push
insb
mov
fimull
loop
mov
sti
std
cmc
push
jae
test
mull
cmp
adc
and
outsl
mov
cltd
mov
divb
and
out
push
int
mov
cmp
pushf
stos
in
lds
mov
pop
lods
pusha
or
test
mov
inc
aad
sub
dec
pusha
cli
adc
ljmp
sub
xor
pushf
jmp
test
dec
out
push
js
sahf
dec
xlat
or
jae
cmp
stc
test
sahf
popa
int3
insl
fcomip
aaa
test
mov
and
mov
cld
mov
cmp
push
dec
add
mov
jp
xchg
mov
pop
push
sti
iret
sbb
loopne
and
mov
in
daa
leave
insl
mov
sbb
add
or
movsb
imul
xor
daa
push
inc
push
ret
into
cmp
pop
ret
daa
pop
xor
out
lcall
popa
jne
push
popa
jo
shl
iret
popf
inc
imull
sbb
iret
xorb
fisttpl
iret
cmpsb
out
fidivrl
jle
and
lret
cmp
sub
sub
mov
dec
jmp
aaa
lret
imul
icebp
push
xchg
cmp
add
ja
scas
adc
dec
jns
jge
cld
inc
push
lahf
rcr
or
ljmp
mov
aas
lods
sti
orl
fildl
push
loopne
xor
cmpsl
xchg
jno
push
loopne
push
bound
pop
or
aad
cmp
outsb
cld
mov
loopne
lret
cmpsl
mov
scas
sbb
cmp
fcmovnbe
into
shrl
ljmp
xchg
lcall
movzbl
xchg
dec
bound
ficoml
xchg
inc
lret
ds
je
mov
ret
imul
mov
sbb
insl
addr16
lret
xor
daa
jno
push
int
clc
or
add
xchg
push
mov
gs
shr
jl
sbb
xor
out
jne
fcomp
rcrb
push
lock
mov
vpsllq
mov
inc
xchg
mov
jbe
mov
scas
inc
mov
sarl
into
cmp
push
cmpsl
cmp
cmc
add
lcall
shl
cmpl
cmp
jp
jo
jo
test
leave
jbe
clc
xchg
movsb
push
mov
addr16
aas
jp
lods
ret
adc
cmc
jecxz
call
pop
jnp
xchg
cld
pushf
jae
and
pop
xchg
neg
daa
cwtl
sub
and
cmpsb
hlt
push
mov
adc
or
mov
push
pushf
andb
mov
push
jae
lock
dec
and
cmc
push
std
popf
xchg
imull
and
idiv
idivl
xor
int
cmp
mov
add
dec
push
pop
push
addl
daa
icebp
test
jbe
pop
jecxz
stc
push
lods
mov
mov
cmp
jne
cmp
sbb
insb
or
sbb
push
fsubl
mov
push
sbb
cmpsb
leave
aam
je
or
pop
dec
sbb
pop
dec
and
add
inc
jno
lcall
in
mov
lods
or
std
repnz
cmp
sub
jne
addr16
fwait
xchg
pushf
push
xchg
mov
and
and
mov
stos
mov
jns
ret
xchg
and
cmp
outsb
in
fcmovbe
dec
jns
leave
jge
xlat
stc
sbb
jecxz
repz
pop
or
push
xchg
dec
stos
and
mov
adc
cmc
andl
js
dec
cmp
cli
inc
inc
sub
mov
mov
jne
dec
js
pop
fs
andb
ljmp
hlt
lock
inc
jmp
jnp
mov
and
repz
int
testl
inc
cld
jne
jp
iret
ret
fsubrs
sahf
mov
sbb
add
and
mov
fs
sub
mov
jbe
push
ja,pt
sbb
sbb
push
es
insl
mov
ret
mov
sub
mov
pushf
sbb
cmpsb
sbb
or
push
mov
add
and
inc
lods
cmp
jno
cmp
xor
lcall
leave
and
outsb
nop
or
sbb
or
and
add
inc
in
cmp
adc
mov
ret
jmp
lds
add
xchg
xchg
in
cmpsl
xchg
rclb
xlat
mov
sub
fidivrs
push
mov
push
inc
pop
in
fidivl
lods
mov
cwtl
jb
rcl
fsubrs
inc
movntps
cmpsb
cmc
sbb
fidivrs
repz
pop
test
xchg
bound
popa
decl
mov
push
sbb
in
mov
fiadds
push
jmp
sbb
jge
dec
sub
and
xor
stos
jae
loopne
test
push
adc
mov
jge
xchg
ss
std
sbb
sub
mov
lea
xor
pop
loopne
jae
or
insb
iret
push
repnz
and
pop
cmp
xchg
xor
sbb
dec
out
jp
jo
stc
test
jecxz
adc
ljmp
mov
xor
shll
xchg
aad
mov
idivb
cmc
sbb
je
sub
mov
sbb
lret
jns
negl
shrl
push
lahf
insl
sbb
test
sbb
lcall
pop
pusha
sbb
inc
out
stos
stc
adc
lock
sahf
pop
mov
xchg
and
adc
into
pop
int
dec
and
xchg
jnp
inc
shrb
arpl
dec
adc
push
add
out
loop
and
adc
inc
aaa
filds
xor
jp
xchg
sti
rcll
out
fidivl
in
xchg
mov
sub
or
mov
insl
jae
xchg
ja
dec
or
pop
add
or
aaa
rorl
adcb
add
daa
into
fidivl
in
push
fisttpll
xchg
mov
out
pop
and
pushf
adcl
dec
xchg
lahf
aad
scas
inc
aam
cmp
add
dec
jge
mov
dec
inc
and
sbb
test
mov
imul
out
insl
cs
mov
fnsave
fildl
and
push
gs
sbb
push
ja
and
dec
mov
lcall
aaa
jno
jge
pop
imul
or
cmp
fimuls
add
in
shl
fldl
xor
xor
pop
out
or
push
lea
je
push
mov
jl
cld
pop
xor
cld
loopne
jp
push
clc
xor
lods
cld
test
leave
push
int3
mov
sbb
mov
adc
in
clc
adc
mov
test
adc
sbb
jae
ds
jmp
dec
jnp
mov
movsl
pop
and
jge
push
ret
pop
cmp
push
jecxz
mov
jmp
push
pop
vpshufhw
jb
lret
lahf
dec
push
sub
sahf
sti
sub
es
ss
mov
jno
xchg
mov
inc
pop
pop
aas
push
ret
xor
frstor
loopne
ret
push
sbb
loope
loope
mov
add
add
fisttps
ja,pn
sbb
mov
out
shll
adc
sub
arpl
mull
js
push
inc
addl
pushf
icebp
test
cmpsl
adc
adc
loope
add
sarl
call
xchg
sub
addr16
cmp
dec
cltd
in
sbb
and
movaps
pushf
movsl
call
adc
and
imul
loopne
push
mov
testl
mov
mov
jb
ds
mov
outsb
mov
adc
insl
mov
or
test
push
jge
cmpsb
fadd
movsl
inc
or
mov
and
pop
clc
mov
xchg
mov
cli
xlat
pop
cltd
jle
shll
cmp
sbb
and
dec
enter
rol
dec
pop
sbb
imul
scas
xor
jg
and
call
add
bound
in
das
mov
repz
mov
xchg
cmpb
fildl
mov
jnp
loop
nop
or
cmp
push
cmpsl
stos
xchg
popf
rol
cltd
lods
imul
pslld
lds
mov
lret
sbb
xchg
dec
jmp
push
scas
mov
pop
mov
lret
lret
push
vmovupd
inc
mov
jmp
rorb
jae
ljmp
adcl
add
cmp
in
jne
ja
sub
mov
inc
sub
mov
arpl
fistpl
test
jbe
xor
or
into
push
mov
pop
inc
jg
outsb
dec
mov
push
sbb
in
cmpb
mov
leave
push
xor
dec
dec
fs
add
inc
loope
aad
movsb
ljmp
cmp
addl
out
or
mov
mov
mov
cld
inc
es
or
iret
and
aam
mull
fstps
xrstors
orl
test
adc
popf
aam
test
push
psubd
push
inc
or
add
repz
fstps
xor
inc
je
imul
pop
inc
fimuls
xchg
adc
arpl
lods
jmp
dec
xchg
scas
mov
add
or
gs
aaa
rorb
cltd
xor
cmpsl
push
lods
leave
imul
push
dec
nop
jbe
adc
pop
push
rcl
dec
icebp
movsl
xchg
jne
adc
ds
sahf
mov
data16
ret
or
xchg
sbb
pop
push
push
out
outsb
or
fcom
lods
sti
mov
or
sahf
adc
jno
popf
sub
mov
dec
pop
dec
inc
inc
cwtl
ret
jo
loopne
and
movsl
sub
lahf
add
repnz
mov
ret
lret
lcall
aaa
sbb
push
mov
ror
insl
jecxz
stos
xchg
sahf
mov
add
mov
movsb
popf
inc
or
jg
mov
sbb
ret
mov
jp
mov
mov
push
out
lods
std
in
iret
cli
adc
loop
in
icebp
and
push
push
addr16
ret
add
xchg
xchg
adc
repnz
test
cs
cmpsb
out
sub
out
jbe
lret
push
sbb
divl
dec
cmp
mov
repnz
push
sub
add
push
fdivs
nop
fildll
adc
pop
test
or
jno
jnp
aam
pop
adc
les
push
xor
popa
mov
test
jge
fsts
jns
stos
mov
ficoms
call
or
in
jg
mov
testb
cmp
andl
xchg
fidivrs
lds
push
shlb
pop
and
inc
ror
aad
dec
xchg
nop
ljmp
xchg
xor
rorl
xchg
scas
push
mov
pop
imul
ret
dec
push
mov
stos
fucomi
mov
adc
jb
out
bnd
mov
xlat
sub
ljmp
jnp
dec
out
loopne
add
sub
aam
idiv
js
js
pop
aaa
popa
test
ds
xchg
mov
pop
add
cwtl
fisttpll
dec
add
pop
pushf
sub
pop
xor
pop
add
imul
aaa
movsb
mov
inc
cld
loopne
es
xlat
scas
sbb
mov
pop
pusha
test
insb
fimuls
out
inc
sub
add
int3
mov
push
in
mov
sbb
jmp
addr16
add
push
push
das
lret
or
imul
mov
inc
or
push
fwait
movsb
cmp
mov
out
add
andl
push
push
cmp
mov
jnp
cmp
test
cmpsb
and
jp
cmp
std
xor
sbb
inc
mov
pop
jo
clts
loop
dec
mov
dec
shll
into
xchg
lock
cli
inc
xchg
ret
cld
and
push
dec
xchg
fistpll
rorb
mov
pop
pushf
call
aam
dec
lret
fidivrs
push
inc
mov
call
push
in
push
pop
stos
cmp
loopne
sub
subb
lahf
fwait
loopne
loopne
cli
lret
lock
inc
dec
jl
out
jo
shrb
ja
jae
insl
in
sub
pop
mov
out
ss
cmpsb
pop
cld
stos
call
add
adc
std
xchg
push
xchg
in
and
shr
into
andb
mov
clc
push
fcompl
push
jb
out
cltd
addl
arpl
adc
int3
popa
and
mov
sub
lods
lds
rcl
decb
inc
imulb
mov
adcl
inc
adc
movsl
movsl
test
imul
xlat
mov
jno
adc
xchg
nop
mov
and
out
dec
fwait
adc
shll
add
sub
cmp
jle
sarl
xchg
lock
add
fldl
mov
das
adc
inc
cltd
mov
jns
lods
cltd
aam
ret
mov
imul
dec
add
lahf
xor
std
aad
repnz
iret
arpl
jg
or
jge
inc
popa
out
xor
jae
jns
vmovapd
xchg
inc
imul
and
push
hlt
xchg
pushf
sar
mov
ds
fldl
lahf
pop
dec
sbb
testl
ja
xor
addr16
das
mov
nop
pop
enter
mov
aas
insl
imul
aad
xor
loop
movsl
jne
mov
jae
leave
jo
lods
push
out
sub
loop
test
cmp
lret
inc
sti
pop
push
mov
movsl
in
insl
fwait
imul
mov
jmp
lahf
adc
jo
inc
into
xchg
imul
lret
mov
test
fwait
aad
dec
sub
sub
mov
mov
outsb
shl
movsb
push
fprem
pop
bound
sub
xor
cmp
sbb
mov
cmp
leave
adcl
shl
add
jo
sbb
pop
pop
cltd
pop
xchg
leave
xor
jmp
out
js
les
ja
pop
ffreep
clc
add
cmpsb
cmp
loope
mov
push
pop
inc
mov
xchg
aaa
popl
std
aaa
lcall
push
ror
pop
pop
jmp
pop
in
lcall
fiaddl
dec
dec
inc
andb
or
mov
adc
popf
in
test
push
roll
test
sub
jl
loop
sub
lds
add
lods
mov
mov
inc
pusha
ret
mov
cmp
scas
push
jmp
jnp
jb
loopne
imull
mov
loop
or
adc
fidivrl
push
testl
jle
sub
ret
icebp
jns
dec
and
lea
push
sub
lods
lret
outsb
push
scas
xlat
jbe
cs
aam
clc
inc
jae
out
or
call
je
push
div
mov
dec
notl
icebp
add
and
js
jge
xchg
jecxz
aaa
call
sahf
push
and
cltd
cmpsb
les
dec
sbb
pop
mov
sub
cltd
faddp
int3
fdivrl
aas
xor
aas
arpl
mov
jmp
rcrl
sbb
rol
andl
mov
es
or
add
call
lods
iret
cmp
lahf
inc
das
sub
jp,pt
jbe
nop
push
xor
dec
mov
or
imul
add
daa
cmp
pop
adc
mov
xchg
pop
lret
leave
leave
pop
cwtl
mov
je
imull
scas
mov
mov
sbb
xlat
sub
sbb
lret
aaa
loop
ja
cmpsl
mov
adc
inc
cwtl
xchg
mov
in
movsb
movsb
test
mov
je
sub
dec
mov
jl
push
mov
hlt
mov
pusha
lds
arpl
cmp
cmp
cmp
lahf
dec
dec
hlt
xor
mov
xchg
jmp
fdivrl
repz
push
cmpsb
push
sti
xchg
stc
nop
mov
cmp
xor
iret
jecxz
mov
test
push
in
std
leave
xchg
mov
fistpl
xor
mov
adc
es
cs
mov
pop
adc
rorb
sbb
xlat
into
aam
adc
ret
xlat
aad
or
pop
xor
add
mov
aaa
mov
es
es
jno
adc
and
push
out
aas
sub
mov
add
cli
mov
mov
je
aam
dec
mov
lods
ss
add
inc
orl
aaa
roll
adc
jge
and
adc
push
sbbl
lea
gs
mov
test
stos
pop
mov
cmp
add
dec
jp
push
or
outsb
dec
jae
mov
mov
dec
mov
ds
in
das
scas
mov
in
adc
test
mov
pop
in
out
inc
pushf
insl
jne
or
enter
jmp
inc
xor
jnp
push
dec
lret
and
pop
add
sub
test
adc
cmp
push
ljmp
fdivs
test
loope
pop
pop
inc
aas
xchg
arpl
dec
hlt
in
sahf
sbb
dec
out
adc
aas
repz
stc
pop
orb
insb
loope
call
inc
jge
mov
daa
fisubrs
mov
xor
int3
mov
das
add
mov
cmp
jae
xor
nop
js
ret
jp
sti
loopne
inc
sub
call
pop
repz
xchg
pop
jno
and
dec
inc
add
add
enter
rcr
les
int3
push
mov
adc
insl
call
sub
mov
add
mov
and
mov
gs
sub
cmp
adc
dec
mov
nop
jle
lods
pop
mov
outsl
jecxz
mov
dec
mov
mov
lock
xchg
adc
popa
scas
xchg
aas
dec
adcb
pop
push
sar
mov
flds
scas
adc
xor
pop
mov
jge
xchg
xlat
sbbb
xor
test
inc
jnp
subl
cli
andl
sub
and
int
mov
dec
inc
mov
out
es
adc
jo
loop
add
mov
and
push
fnstenv
lock
push
shr
and
pop
ret
faddl
push
insb
aam
jnp
fsubrl
insl
mov
mov
xor
push
daa
jg
push
ljmp
cmp
ss
jne
adc
lret
sbb
mov
xchg
test
iret
ror
sbbb
scas
inc
sbb
std
mov
test
fimull
jae
mov
mov
pop
negl
sbb
push
sub
push
cmpsl
fdivrl
lock
jp
jae
cmp
popa
fimuls
adc
nop
mov
xchg
pop
mov
push
add
rorb
ss
push
add
xor
lret
pop
mov
mov
mov
xor
cmc
aas
xor
jb
jmp
push
and
shlb
push
pop
pop
push
rolb
insb
imull
xor
mov
lea
adc
dec
sub
xchg
test
and
cmp
mov
pop
adc
out
jns
jge
mov
lods
fiadds
fcmovne
addl
shll
jecxz,pt
hlt
ljmp
adc
ja
mov
lds
xor
fcoml
in
into
push
inc
nop
aad
mov
or
addb
xchg
flds
fiaddl
outsl
ret
enter
iret
xchg
push
sbb
push
rclb
fadd
jge
cmp
or
arpl
das
mov
sbb
jae
mov
sbb
cmp
push
mov
mov
rcll
pop
xchg
dec
sub
mov
hlt
mov
ljmp
add
clc
lods
sbb
sbb
mov
xchg
enter
add
cmp
mov
or
push
and
lea
scas
xor
int
es
xchg
jns
aaa
pop
test
add
push
roll
fwait
cmpsb
rcll
dec
xor
cmpsb
push
lods
arpl
cmp
loop
pop
and
xor
mov
rcrl
xchg
and
mov
mov
cld
push
jmp
xchg
mov
adc
test
out
push
popf
push
divb
add
and
push
aad
rorl
push
aad
or
sti
scas
cmp
push
and
cli
leave
xor
outsl
je
xor
frstor
dec
sub
mov
and
dec
pop
ds
sti
xchg
cmp
push
mov
pop
or
adc
pop
nop
xor
cmp
jnp
ret
sub
sbb
pop
mov
xchg
and
scas
out
popf
or
xchg
sub
inc
xor
mov
lret
mov
enter
xchg
pop
data16
mov
mov
pop
mov
pop
pop
and
pop
ret
inc
inc
dec
cmpsb
mov
xor
mov
or
mov
rep
idivb
inc
sbb
popa
adc
stc
in
add
fcom
lret
push
mov
cmpsb
xchg
mov
insl
or
adc
adc
cmp
mov
aas
ficomps
cld
sbb
jbe
xchg
ds
sub
jo
test
mov
mov
cmp
push
outsb
mov
xor
hlt
aad
mov
fstpl
jecxz
stc
enter
andb
or
popf
ss
daa
scas
push
and
push
cmp
addr16
scas
jmp
add
out
nop
loope
inc
aaa
testb
fcomps
add
jge
jmp
movsb
mov
jp
shrl
les
cmp
push
sub
out
cwtl
aad
pop
dec
das
cltd
jnp
and
jne
mov
cmpsb
popf
pusha
cmc
insl
popa
xchg
add
cmp
jp
insb
push
xchg
inc
xchg
xchg
add
inc
jl
push
adc
and
sbb
cmp
inc
insb
pop
dec
and
test
stc
xchg
pop
stos
jne
xchg
fs
repnz
cmp
sub
or
jno
sbb
cmp
stos
out
dec
push
negb
xchg
mov
outsb
jp,pt
push
inc
xor
pop
xchg
inc
mov
fsubrs
scas
adc
sti
mov
lahf
mov
nop
repz
call
mov
mov
stos
lods
pop
fistpll
pushf
xchg
lret
ret
lods
dec
cmp
inc
mov
or
mov
jne
fimull
push
out
lcall
pop
xchg
dec
les
inc
jge
pusha
fcomps
cmp
inc
sub
add
dec
cmp
xor
cmpsl
add
jecxz
adc
or
iret
sahf
jecxz
aaa
sahf
aad
js
out
pop
xlat
xor
sbb
sti
dec
and
mov
push
out
sbb
push
push
xchg
cmp
ret
stc
ljmp
or
scas
ret
mov
inc
and
mov
xor
lods
adc
sub
or
xchg
mov
arpl
enter
or
arpl
cmpsl
xchg
sub
sti
mov
mov
pop
sbbl
aaa
mov
outsl
pop
daa
lahf
decb
push
enter
push
js
mov
push
adc
or
jnp
fnstenv
jl
mov
clc
mov
in
cld
popa
pusha
shl
outsl
daa
andl
data16
mov
xchg
jmp
inc
cmp
imul
in
test
adc
xchg
inc
adc
xor
push
jbe
and
cmpsl
shll
sbb
mov
xor
outsb
dec
adc
hlt
dec
cld
gs
inc
pushf
fildl
mov
xlat
insl
fadd
or
cmpsb
and
loop
movsb
idivb
fcomps
add
aas
repnz
ja
inc
dec
repnz
mov
arpl
inc
mov
andl
and
repnz
sbb
sub
mov
ret
ret
scas
push
jl
sbb
mov
and
pop
lds
dec
pop
jecxz
adc
cld
cmc
cmp
cwtl
jmp
add
mov
pop
pop
ja
pop
in
lcall
mov
mov
pop
push
mov
lret
fwait
clc
add
inc
mov
sub
push
add
dec
jmp
adc
adc
divl
fildll
cmp
fwait
jmp
fldcw
or
push
pop
out
mov
cmp
sbb
jg
xor
or
fldenv
movd
dec
in
js
aad
pushf
mov
daa
dec
cmpsb
stos
call
push
clc
lds
cmpsb
sub
jb
xor
jle
clc
jno
pusha
push
sub
sbb
clc
mov
xor
stc
fimuls
ja
ret
pusha
enter
gs
pop
sub
icebp
aad
cli
or
repnz
mov
dec
popf
cli
fxrstor
outsl
cmp
mov
popa
roll
es
jnp
dec
fsubrs
mov
or
inc
call
movsb
push
adc
add
gs
xlat
mov
pop
and
subb
sbb
call
xlat
scas
lret
jb
mov
mov
addr16
lea
aaa
dec
in
pop
mov
or
jno
loopne
das
pop
fdivrl
xchg
mov
out
push
out
push
mov
inc
aaa
in
movsb
jno
repnz
clc
xor
jge
lods
por
lahf
cmpsb
lcall
cmpsl
add
cmp
int
pop
sbb
ja
cwtl
add
and
cmp
push
fwait
in
sub
aad
or
or
and
inc
sub
push
inc
pop
inc
xchg
mov
fdivrs
push
mov
mov
cmp
insl
enter
ret
jp
mov
sbb
ss
in
add
push
push
sbb
jns
in
in
push
stos
cmc
and
xchg
mov
repnz
out
push
pop
xchg
mov
sbb
mov
sbb
ss
jmp
es
cmp
ror
cmpsb
fcmovbe
jbe
or
popf
add
iret
xchg
inc
scas
mov
pop
dec
mov
adc
cmp
loope
pop
mov
pop
jl,pn
add
mov
cmp
fisubrs
rol
jne
mov
mov
jg
outsl
or
shrl
pop
ja
aad
clc
daa
bound
push
js
push
push
xchg
ja
jns
sbb
jo
and
sbb
nop
mov
hlt
test
push
sbb
es
dec
dec
cld
pusha
std
mov
jecxz
pushf
rcrb
and
ret
xchg
jns
and
mov
ja
xor
aas
pop
xchg
shll
sarb
dec
dec
into
enter
cmp
dec
lahf
inc
mov
fdivrp
orb
lret
ret
sbb
shl
xor
test
dec
sub
push
add
inc
sbb
test
xchg
es
or
in
jo
xchg
or
popf
loopne
adc
jge
inc
scas
sahf
into
push
cmpb
adc
mov
enter
adc
mov
stc
lahf
xchg
fnstcw
push
adc
inc
iret
jg
stos
push
xor
orl
pop
mov
int
sub
xor
aam
cmpsl
pop
cmc
push
into
movsl
testl
das
mov
mov
mov
sarb
adc
sti
jp
ss
pop
ds
pushaw
in
mov
push
and
dec
sub
dec
mov
pop
push
push
faddl
sub
xchg
stos
ss
sbb
enter
mov
xor
sub
cltd
lds
je
lret
cli
jg
cmpsl
xchg
sar
inc
js
dec
xor
cltd
out
pop
fcomip
xchg
pusha
cmp
xchg
bswap
and
ja
cmc
in
scas
shlb
ret
clc
shr
scas
mov
mov
mov
add
nop
scas
mov
mov
jg
addr16
mov
push
lcall
inc
adc
or
subl
dec
in
lea
jl
lret
mov
test
add
rcl
test
inc
mov
aaa
shrl
xor
and
adc
dec
scas
ret
adc
push
inc
mov
cmp
fs
push
jne
subb
aam
scas
lds
or
insl
inc
jae
xchg
jge
dec
pop
pop
loopne
cmp
pop
cs
xor
jmp
pop
sbb
mov
sti
mov
shll
cmp
repnz
xchg
jbe
mov
lods
das
inc
sub
push
ret
jo
mov
add
shl
adc
sub
xchg
mov
aad
gs
ds
jno
psubb
or
adc
and
ljmp
xchg
push
test
mov
jne
gs
lret
das
mov
adc
lock
stos
jg
repnz
push
jnp
gs
lahf
xchg
into
lahf
mov
flds
mov
mov
and
pop
push
das
pusha
std
adc
mov
lret
out
stos
imul
cmpsl
xchg
icebp
adc
adc
shlb
cmc
sbb
mov
cmp
sti
lret
add
jo
dec
mov
inc
push
repnz
jmp
mov
mov
test
xorl
and
mov
pushf
mov
int3
out
inc
mov
push
and
rcrb
iret
ret
and
lcall
into
imul
insl
xchg
cmp
add
notl
xchg
adc
and
call
scas
add
inc
sbb
add
jg
cmp
dec
xor
das
xchg
jle
scas
push
mov
int3
arpl
repz
movsl
es
xchg
pop
negl
mov
cmpsb
sahf
xor
enter
mov
loopne
mulb
lods
sbb
xchg
dec
push
fnsave
cmpsb
jo
adc
lret
mov
sbbl
lahf
dec
je
stos
aam
aaa
adc
sti
push
stc
mov
sub
fistpl
jge
inc
loop
add
jecxz
cmp
icebp
icebp
adc
inc
insb
sub
mov
jae
mov
push
xor
ljmp
out
xchg
les
lcall
rcrb
adc
pop
nop
xchg
sbb
and
adc
andb
ret
into
xor
sbb
mov
out
negl
lret
mov
mov
and
add
and
jl
rcr
loop
pop
jns
fbstp
xchg
jmp
sbb
push
dec
xlat
int3
and
push
and
scas
sti
mov
and
fidivl
fistpll
jmp
push
loopne
inc
aad
lods
cli
add
cltd
arpl
pop
lods
pop
push
enter
loopne
inc
push
xchg
mov
loop
aam
scas
stos
dec
dec
dec
push
lahf
repz
pushf
add
iret
dec
xlat
adc
dec
repnz
sub
jne
rcll
add
call
xor
inc
jo
inc
aam
mov
div
or
xchg
and
xchg
jmp
in
cwtl
sti
jmp
pushw
stos
push
jo
andl
or
into
rol
xor
cltd
daa
and
push
ljmp
mov
jns
jp
scas
jge
es
stc
add
mov
sbb
int
out
xor
add
adc
jbe,pt
jb
jl
fiaddl
xchg
lret
jge
in
cmpsb
pop
enter
popf
out
cmp
push
or
pop
pop
in
es
add
in
pop
js
cmp
gs
pop
repz
rorl
cmp
jae
jnp
adc
mov
lret
jae
add
push
cmpsb
push
adc
jmp
aam
pop
adc
push
psllq
pop
mov
rcrb
add
add
add
mov
xor
test
hlt
dec
add
shll
fisubrl
xor
jo
mov
fldt
loopne
bound
sbb
sbb
mov
cli
cmp
test
mov
and
adc
jmp
ficompl
icebp
in
leave
sub
push
push
jle
pusha
cmp
or
or
repnz
push
sbbl
mov
movsl
ja
ja
popa
jle
call
in
leave
cld
pushf
xchg
adc
in
cmp
and
loope
xchg
xchg
subb
je
or
fmul
inc
xchg
pop
out
cltd
push
outsb
aas
sbb
xor
sub
data16
sub
push
sbb
inc
imul
test
jbe
pop
shlb
jno
outsb
pop
test
aam
dec
out
dec
jmp
test
mov
mov
push
mov
dec
adc
xchg
mul
mov
insb
and
rclb
mov
je
test
aad
push
dec
ret
ljmp
testl
or
or
lcall
xchg
aas
jbe
sbb
fcomps
sbb
clc
push
pop
dec
jns
xor
cmpb
popf
dec
xchg
adc
hlt
adc
dec
les
ss
sbb
pop
jl
ror
leave
ljmp
mov
pop
mov
inc
imul
cmp
sti
pop
fidivrl
stc
scas
mov
sar
jb
rol
scas
cmp
notb
cmc
push
sbb
xchg
jl
in
dec
dec
xchg
or
push
mov
fmulp
ficomps
mov
arpl
add
pop
fsts
pop
mov
mov
sbbl
jg
push
repz
mov
hlt
sahf
cmp
js
arpl
lahf
ret
inc
pop
xor
pop
dec
mov
or
cmp
nop
imul
les
cli
and
pop
lds
add
sbb
test
mov
mov
xchg
roll
ror
sub
bound
mov
ret
ret
int
fucomp
inc
dec
idivl
xorb
popf
mov
daa
movsb
outsl
insl
jo
popl
leave
and
cmp
and
ret
mov
dec
scas
sub
xchg
mov
mov
call
out
push
jbe
in
sub
sub
jae
sahf
jne
gs
test
pop
jae
sbb
or
xchg
lahf
push
sub
add
or
andl
lea
jno
and
sbb
mov
mov
or
pushf
out
hlt
jbe
mov
int3
stos
jle
cwtl
push
cmp
xlat
dec
lea
pop
sub
push
push
mov
xor
lock
int3
das
xchg
pop
mov
mov
xchg
aam
data16
pop
pop
or
cmp
xor
out
or
lods
jne
ret
stos
dec
mov
sbbl
cmp
jp
adc
aam
xor
cwtl
lahf
lret
pop
pop
call
ja
popf
pushf
enter
xchg
mov
adc
adc
es
mov
add
mov
mov
xchg
dec
and
sub
ror
pop
ret
push
lret
out
adc
pop
pop
xchg
jmp
push
or
lret
cs
lret
in
inc
test
repnz
jp
and
xchg
fiaddl
or
lds
pushf
sbb
push
push
inc
dec
mov
mov
cmp
mov
mov
jmp
or
mov
pop
in
adc
push
cmpsb
pop
mov
out
pop
ret
dec
lock
div
jle
lret
inc
pop
movsl
cltd
jo
push
add
pop
rolw
xchg
sbb
loopne
dec
lret
imul
inc
insl
dec
push
and
ss
rorb
push
rorb
mov
push
xchg
mov
sbb
enter
xchg
loope
xor
xor
out
icebp
mov
and
popf
jno
jns
popl
mov
xchg
stc
and
push
loopne
xlat
shlb
lock
pop
icebp
movsb
jbe
pop
and
jp
insl
add
add
icebp
ret
jnp
fstps
sarb
adc
push
pushf
popf
push
cs
xchg
xchg
xchg
jge
pop
aad
and
add
dec
jb
mov
adc
movsl
cmp
jle
add
jns
pop
xor
out
jle
test
pop
mulps
inc
mov
subl
movsl
out
xchg
dec
jnp
orb
cwtl
jbe
pop
fistpll
pusha
into
xchg
mov
mov
lret
scas
inc
dec
shlb
jo
repnz
mov
sbb
ret
iret
adc
push
outsb
and
outsb
mov
cmpsl
loope
inc
repnz
pop
adc
xlat
push
insl
ret
and
testb
and
cmc
dec
push
cmpsl
sbb
popa
mov
repnz
pop
lock
push
xor
adc
dec
pop
leave
dec
mov
in
mov
jp
sbb
sbb
imul
arpl
roll
rolb
mov
sti
jmp
les
sbb
sub
dec
dec
cmp
out
sbb
jge
popf
mov
add
inc
je
cli
inc
in
fadds
popf
lret
loopne
push
adc
mov
pop
xor
rcrb
xchg
xorl
hlt
lret
out
movsl
lret
aaa
and
cmpsb
leave
xlat
pop
jg
jg
outsl
mov
loope
gs
call
jp
or
insl
push
js
push
adc
mov
jmp
icebp
popf
inc
lods
fcomi
insl
sub
imul
mov
inc
push
rclb
or
adc
outsb
sub
int3
int
mov
add
test
in
add
dec
mov
cmpsl
lea
leave
aas
loop
lea
lret
add
jmp
xor
push
jecxz
xchg
lods
mov
gs
pop
repz
sbb
jge
dec
mov
lret
inc
adc
mov
ss
mov
bound
sbb
incb
xorb
out
sub
xchg
cmpsl
inc
fsubr
lret
adc
les
cmp
mov
cmpsl
adc
clc
push
adc
push
push
jno
pop
lahf
add
test
dec
imul
popf
cmp
or
lret
leave
add
int
jnp
jo
jge
dec
sahf
pop
push
jecxz
test
push
pop
sbb
cmc
popa
rep
jle
shll
push
cmp
fdivrs
jl
hlt
outsl
dec
insl
lcall
jne
sar
clc
push
pushf
iret
aaa
add
jae
jbe
pop
sub
shll
sahf
mov
loope
jle
pop
sub
push
sahf
sbb
fsts
xchg
cmpsl
lock
lods
lds
sub
rcr
imul
fcmovne
idivb
jne
cs
xor
arpl
xor
xor
pusha
cli
fmulp
leave
or
ljmp
cmp
test
push
inc
pushf
mov
fs
sbb
add
popa
pop
cld
les
mov
xor
mov
aaa
adc
into
add
fnstsw
out
enter
movb
adc
ret
mov
mov
ja
fdivl
popa
or
rol
xlat
mov
cmpsb
dec
push
rcrl
nop
sti
sbb
test
mov
mov
inc
and
addr16
jb
dec
in
xchg
test
ljmp
pushf
jns
scas
mov
into
mov
sub
cmp
pop
insb
inc
inc
push
aad
insb
hlt
sub
xchg
cmp
xchg
jecxz
or
pop
xchg
cmp
push
sub
imul
insl
scas
sbb
std
insb
into
mov
int
jp
push
insb
scas
ficoml
mov
adc
subl
out
clc
loop
in
xor
pop
orps
add
faddl
push
mov
cs
inc
call
cwtl
lods
repz
jmp
sub
push
mov
push
jne
daa
xor
xor
pop
lret
popa
test
add
mov
cmpsl
adc
sbb
popf
mov
push
flds
daa
or
aad
xor
sub
outsb
data16
pop
mov
test
lea
add
pause
pop
inc
lods
pusha
xor
adc
push
imul
sarl
mov
push
jo
lcall
push
add
loop
int3
icebp
mov
sahf
mov
jno
mov
xlat
shll
iret
arpl
test
push
int3
jmp
aas
dec
dec
loop
sbb
jp
out
mov
out
cmpsb
jae
mov
and
and
sbb
cltd
add
loopne
push
cmp
fists
sub
push
push
psllw
ffreep
repnz
shr
xchg
insl
ret
mov
adc
push
sub
dec
rcrl
mov
scas
jp
pop
stos
outsb
dec
out
mov
in
mov
cmp
cs
adc
adc
sub
cmp
adc
xchg
jnp
push
lret
add
fsubr
mov
leave
mulb
pop
data16
cld
lahf
out
pop
sbb
call
jb
je
jge
xor
add
or
or
pop
popf
mov
into
push
add
fbld
pop
mov
push
lcall
push
scas
mov
inc
into
and
pop
leave
lret
xor
jnp
pop
mov
inc
add
or
adc
pop
mov
push
icebp
push
imul
outsl
and
dec
jge
and
inc
cmpb
arpl
lea
mov
or
mov
in
push
push
mov
jl
mov
lahf
std
adc
cmp
mov
mulb
mov
out
into
or
cs
bsr
jmp
jnp
adc
movsb
xchg
and
cmp
or
enter
das
loope
addr16
shr
mov
adc
out
outsl
rclb
add
mov
adc
lds
inc
sbb
jo
loopne
fcoml
adc
or
inc
mov
sbb
and
inc
jl
test
lcall
dec
psrad
sbb
adc
mov
inc
loopne
mov
cmp
sbb
ds
mov
and
sub
mov
pop
xchg
lods
stos
mov
cmp
pop
lods
jae
mov
mov
cmp
out
loop
js
in
aaa
xor
mov
sti
ja
cmp
ja
push
inc
aam
ja
popl
dec
decl
outsl
mov
movsl
xchg
es
sbb
xchg
inc
loope
dec
gs
nop
mov
adc
bound
and
aad
arpl
jno
cmp
test
insb
ljmp
sub
repnz
adc
inc
xor
movsl
fldt
pop
stos
xchg
add
scas
inc
dec
inc
xchg
dec
mov
inc
push
and
xchg
mov
loop
xor
or
xlat
mov
adc
roll
pop
scas
and
adc
mov
notb
pop
clc
add
stos
orb
jp
mov
nop
push
and
stos
int
lea
cmp
xchg
mov
call
sbb
mov
out
dec
adc
orl
xchg
add
es
sub
cmp
mov
adc
aad
sbb
jle
stos
repz
cltd
xchg
inc
inc
vmovntdq
adc
addr16
push
xor
jl
cmp
pop
mov
lret
sub
rorb
lea
inc
je
lock
cmpsl
popf
movsl
mov
push
adc
stos
xchg
jge
jno
aam
push
lods
lds
mov
imul
sub
lahf
and
dec
lods
sbbl
fs
or
test
cwtl
jnp
je
xor
xor
test
push
adc
sbb
cli
push
xor
push
push
aas
or
sub
jle
xor
xchg
outsb
aaa
mov
lds
jae
xor
into
in
repnz
add
dec
out
or
dec
imul
in
pop
int3
jp
out
outsl
adc
int
hlt
iret
mov
inc
dec
aaa
scas
cmpsl
insb
lcall
add
jg
xor
lret
push
cmpsb
icebp
jl
inc
imul
mov
add
xchg
out
push
or
dec
bound
loope
and
xor
sti
shll
push
cs
mov
jg
fidivrs
iret
test
orb
lods
mov
arpl
push
mov
mov
pop
out
mov
ja
in
jl
xchg
jge
mov
test
aaa
dec
out
xchg
push
sbb
lods
in
aad
or
imul
mov
ret
imul
cmpsl
dec
cmpsl
jno
mov
and
lcall
sub
jmp
stc
dec
jl
jp
and
cmpsl
fs
push
vpshuflw
stos
out
pop
mov
jmp
xorps
shl
sti
sub
aas
mov
mov
fwait
in
xor
mov
test
mov
stc
popa
pop
cltd
push
cmc
data16
cmp
lds
adc
mov
enter
push
aad
inc
jle
jl
or
aam
or
jl
je
xorb
jge
xor
cmpsb
sub
cmpsb
pushf
jns
ud0
int3
out
mul
jno
into
adc
mov
mov
es
popa
hlt
nop
ret
jnp
dec
mov
out
subl
ds
sbb
aas
sbb
push
and
pop
mov
or
mov
fdivr
jle
push
xor
pusha
je
mov
data16
and
sbb
sar
mov
test
pushf
nop
mov
int3
sub
jb
pop
orb
cmp
jp
xor
adc
xor
fbstp
pop
test
and
scas
pop
fs
sti
inc
stos
lods
xlat
sti
cmp
mov
push
mov
inc
test
hlt
mov
dec
ficoml
xchg
inc
sti
sbb
je
mov
je
rcrl
adc
fiadds
ret
xchg
mov
into
mov
mov
adc
lea
dec
icebp
in
cli
arpl
add
iret
inc
adc
inc
movsb
inc
and
mov
les
stos
lret
and
cmp
lahf
xchg
roll
into
gs
lret
incb
adc
and
push
dec
adc
jecxz
mov
lods
cmp
or
mov
mov
outsl
out
clc
push
inc
push
sbb
xchg
cmpsl
ss
pop
pop
cmp
mov
sbb
mov
rcl
hlt
xor
stc
add
in
sbb
int3
dec
imul
jae
jp
mull
scas
scas
lret
push
and
repz
stos
jnp
loope
jnp
in
add
loopne
xor
sqrtps
and
adc
mov
in
push
cmp
lret
cmp
repnz
in
or
or
mov
sti
cs
mov
dec
dec
xor
scas
ss
das
outsb
clc
cmp
fcmovnb
jg
lret
xchg
and
sub
int
dec
cmp
repnz
sahf
jle
enter
es
testl
shl
push
pushf
cltd
jp
xor
movsl
inc
std
add
aad
mov
mov
mov
or
out
mov
jl
lahf
push
les
out
mov
adc
adc
jbe
and
xorl
test
push
int
mov
pop
aaa
push
jp
mov
cmp
cmp
stos
xor
scas
jns
push
mov
out
jge
fsubl
faddl
int3
into
lahf
push
aam
scas
sub
jnp
and
mov
or
push
rcrb
test
daa
call
or
push
dec
sbb
xchg
xchg
cmp
ja
loope
cmp
sub
out
jg
pop
pop
inc
xchg
out
aas
pushf
lods
aas
sti
xchg
jmp
aas
insl
in
cmpsl
ficomps
cmp
insl
sbb
fucomp
mov
xchg
dec
shll
push
pop
aaa
cmp
jne
lods
mov
movsb
test
shrl
inc
push
sbb
pop
mov
loopne
mov
movl
mov
mov
cmp
xor
add
shlb
out
jnp
or
sbb
push
incb
mov
xchg
adc
pop
outsb
hlt
xor
ret
sar
jae
fisubs
inc
dec
fiaddl
pop
mov
pusha
roll
movsl
or
xlat
and
or
adc
xlat
shrb
mov
ret
mov
lds
push
pop
cwtl
das
sub
adc
arpl
clc
xorl
mov
stos
lea
dec
sub
push
loopne
out
es
test
xor
jmp
dec
inc
scas
cmc
mov
popf
xlat
pushf
cmp
or
adc
fcoml
jg
add
jmp
push
bound
stos
imul
idivl
cmp
lods
dec
push
fimull
sbb
mov
mov
shlb
and
aam
xchg
cld
into
cli
out
pushf
inc
lahf
mov
and
mov
rclb
inc
leave
mov
cld
sbb
test
es
scas
sbb
lds
sarb
and
sub
loopne
push
dec
jae
cmc
or
jge
xchg
and
push
dec
add
cltd
jg
lds
push
arpl
cltd
add
das
fs
push
nop
and
cmc
insl
push
addr16
ret
sub
hlt
repz
adc
cmp
jp
pop
sbb
cltd
sub
xchg
test
cmc
inc
xchg
rolb
mov
out
mov
jb
xor
fs
adc
xchg
cmpsl
jne
jge
jne
or
sub
xchg
jge
fdivl
sub
adcb
in
fmuls
popa
dec
mov
in
cmp
sarb
mov
inc
stc
mov
and
mov
fdivl
loope
mov
add
cmp
fwait
mov
sarb
mov
ljmp
jg
mov
adc
jb
rcrl
shl
mov
hlt
xchg
or
or
xchg
push
push
dec
xorb
pushf
xor
mov
into
push
mov
pusha
lds
xchg
adc
cli
test
jo
pop
mov
insb
push
push
adc
fcompl
popa
rorl
dec
sbb
out
popf
ja
xchg
sub
dec
fsubrl
dec
sbb
sub
dec
inc
test
jne
mov
or
shl
movsl
sub
ret
adc
in
cmp
and
xchg
jnp
movsb
xlat
in
xor
mov
dec
lret
jmp
inc
insb
push
sub
cli
movsb
and
adc
xchg
loop
add
sub
pusha
xor
out
pop
stos
or
pop
jno
dec
decb
scas
movsl
bound
adcb
sub
dec
hlt
test
mov
rcll
out
roll
mov
incl
ret
sbb
test
mov
push
xchg
nop
jmp
js
dec
fcmovnb
stos
insl
push
loope
xchg
add
sub
cmp
std
dec
adc
xchg
mov
and
mov
push
pop
test
movl
nop
xchg
mov
pop
movsl
cmp
imul
inc
leave
mov
dec
push
mov
xorb
push
or
mov
lcall
jecxz
push
cltd
into
lods
cli
cld
es
xchg
enter
mov
test
and
imull
fidivrl
pop
aas
mov
pop
mov
xor
xchg
inc
mov
lods
sahf
mov
xlat
pusha
push
push
shlb
negb
jp
fmulp
xchg
dec
inc
mov
or
insb
aaa
mov
mov
jecxz
std
push
stos
mov
sub
out
fcoml
sbb
pop
pop
adc
mov
xor
sub
aam
sub
mov
xchg
fdivl
mov
mov
out
test
and
je
or
push
inc
inc
push
cmp
cmp
test
xor
dec
add
movb
lahf
xchg
mov
mov
bts
mov
inc
loop
cmp
test
icebp
xor
mov
ljmp
je
xchg
add
push
ss
test
call
lods
fistpl
cmp
dec
dec
mov
or
push
add
aad
iret
cmpsb
hlt
xchg
xor
mov
imul
sahf
mov
or
in
cld
lock
loope
push
dec
inc
pop
mov
bound
jnp
sub
jle
xchg
nop
push
aas
out
js
adc
lock
add
xor
and
sbb
and
mov
pushf
jg
rclb
out
ret
jbe
popa
aam
movsb
repnz
sbb
cs
sbb
jp
int3
popf
sahf
enter
xor
sub
push
jg
ss
lock
sub
call
jg
sbb
pusha
insl
movsb
out
incl
sbb
add
and
push
gs
out
outsl
je
mov
cltd
pusha
push
std
fildl
shll
sbb
lods
jge
jle
mov
inc
jb
sub
daa
sbbb
mov
pop
and
pusha
repz
push
mov
jo
jle
mov
out
outsb
jae
fdivp
ror
je
dec
sbb
push
mov
push
test
jl
or
and
jns
scas
mov
repz
nop
sub
pop
ret
mov
inc
xchg
fsubrs
mov
fisttpl
outsl
cld
push
adc
lea
ja
mov
js
jecxz
movsb
daa
jo
adc
cli
aam
xor
dec
es
scas
mov
scas
bound
pushf
adc
pop
xchg
push
in
cmp
negl
mov
bound
mov
sahf
imul
sub
daa
or
sbb
add
negl
dec
fistl
cmp
cmp
or
push
mov
fnstenv
cmp
in
push
fucomip
test
mov
adc
jge
jnp
imul
cmp
sub
rclb
dec
cs
ljmp
xor
xorb
jb
cmp
cmpl
push
jb
sbb
test
scas
pop
inc
shl
sub
jp
imul
sbb
or
sbb
in
addr16
jo
xor
cmp
xchg
xchg
xchg
xchg
inc
aad
push
iret
pop
mov
inc
cmp
mov
sub
xchg
mov
pop
dec
mov
pop
adc
lods
jle
rorl
sbb
outsb
and
dec
mov
pop
cmp
jne
jg
test
lret
mov
stc
xor
jo
loopne
push
dec
or
addb
ss
pushf
das
cmp
mov
out
fistpll
inc
test
out
mov
enter
mov
jnp
ljmp
lds
bound
fdivrl
sbb
or
xorl
adc
stos
popf
xor
loope
or
sarb
je
incl
push
cmp
xor
pop
jbe
pop
daa
andl
in
aam
xor
mulb
lds
push
push
lods
fsubp
cltd
into
sarb
mov
mov
xor
xor
scas
cmc
adc
out
iret
lods
loop
xchg
or
inc
clc
ret
mov
outsb
or
lcall
push
shlb
rcrl
xchg
and
inc
dec
sbb
movsl
jnp
inc
addr16
mov
add
dec
js
je
push
cli
movsl
nop
xchg
lods
xchg
push
test
jge
mov
xor
clc
and
das
out
stc
cld
push
push
inc
out
dec
xor
lock
push
push
mov
lds
rorb
sbb
xor
scas
cs
cmpsl
insb
xor
pop
xor
insb
mov
jno
test
incl
xchg
fidivrs
mov
adc
ds
pop
push
mov
push
push
ss
lock
or
scas
ds
insl
loope
test
hlt
addl
cmp
sub
push
ljmp
into
and
xchg
dec
push
adc
nop
int3
cltd
jae
outsl
jo
sti
sub
cmp
cld
ljmp
stc
or
inc
xchg
pushw
pop
add
jnp
xor
jl
ds
nop
adc
scas
push
or
cmp
and
xor
push
jae
pop
sub
or
incl
int
enter
stos
cmp
cmpb
cmp
shll
mov
push
decl
sbb
push
out
mov
jbe
fbld
pop
add
stc
sarl
push
or
dec
dec
push
repnz
pop
cli
sbb
pop
lods
xor
ds
pop
icebp
xchg
ret
add
imul
out
stc
fwait
or
sbbl
xlat
data16
jbe
iret
stos
pop
jo
sti
sbb
outsl
xor
pop
test
xor
loopne
mov
arpl
xchg
jp
ret
out
call
jge
ljmp
mov
pop
cmpsb
or
bound
jbe
mov
test
or
sbb
jp
jmp
test
push
aas
dec
aaa
pop
jp
dec
aas
push
xchg
mov
ret
stos
out
movsl
or
adc
add
add
sub
lcall
ss
out
data16
test
inc
int3
je
push
jno
popa
xor
movsb
mov
or
mov
jno
jl
loop
jns
mov
notl
sbb
fcom
mov
xchg
mov
aas
sbb
sbb
push
mov
shl
and
cli
insb
jno
pop
jb
testl
stos
aam
mov
mov
dec
adc
fcmovu
adc
leave
cmc
adc
repz
mov
mov
and
cmp
push
aad
test
cmpsb
fstpl
addl
repz
push
movsb
adc
cld
daa
sti
or
cmp
xor
mov
cld
add
andb
fildl
push
subl
dec
imul
add
jbe,pn
dec
out
mov
pop
jb
adc
push
and
mov
dec
inc
jl
scas
mov
jle
cmc
push
movsb
jp
les
aaa
sbb
mov
mov
adc
lret
mov
pop
jnp
push
daa
das
mov
fwait
mov
adc
mov
push
and
and
sub
fwait
hlt
mov
and
stos
cmp
mov
neg
insl
and
or
jmp
dec
test
fbld
dec
or
out
test
and
cli
push
frstor
add
inc
sub
fldl
mov
pop
mov
aam
enter
cmp
jmp
adc
sti
xchg
popf
cli
stos
out
and
stos
ds
pop
pop
xchg
aad
xor
jno
pop
and
mov
iret
ret
lods
into
mov
pop
mov
lock
loopne
in
xchg
inc
push
jge
jae
shrl
jecxz
xchg
adc
add
movsb
dec
icebp
push
divl
dec
fcoms
loope
mov
jg
lret
rcrl
push
nop
cwtl
mov
mov
popf
jns
insl
icebp
mov
out
jle
movsl
push
ret
and
mov
mov
xchg
jo
xchg
fcmovne
into
stos
ret
ficompl
and
add
mov
lret
loope
xchg
fwait
cmpsb
adc
bound
arpl
test
or
std
or
mov
pop
rep
jle
bnd
mov
in
inc
testb
bts
dec
lock
inc
adc
dec
shrb
dec
sub
cmp
pop
adc
add
ret
sbb
movsb
add
xor
jmp
push
test
pop
xchg
test
and
inc
in
or
mov
aas
cmp
leave
ret
xchg
loopne
hlt
movsl
mov
xchg
addl
daa
popf
orl
flds
lahf
mov
mov
add
jle
out
je
aaa
aaa
les
jnp
out
xor
mov
cs
pop
cli
cwtl
dec
pop
lods
pop
sub
xchg
add
popf
bound
adc
pop
inc
fisttps
push
je
outsl
ja
cmp
adc
cwtl
ret
movsb
in
adc
xchg
cmp
fnsave
mov
and
sub
jnp
dec
inc
mov
cmpsb
or
fsubl
test
adc
fwait
adc
rol
mov
inc
push
popf
push
inc
xchg
sti
inc
cld
xchg
arpl
mov
stos
mov
push
cmp
push
decb
lock
sbb
test
jmp
ljmp
mov
rcrl
push
mov
sub
dec
cmp
pop
mov
popa
push
add
push
xor
sbbl
mov
dec
test
loope
mov
and
out
les
xchg
xor
or
insb
mov
adc
mov
add
mov
ljmp
push
cmp
outsb
dec
xor
lods
imul
add
add
lock
xor
nop
je
inc
or
fcomps
rcrb
nop
ret
sub
repz
add
lahf
out
mov
lock
push
mov
inc
std
sub
jp
and
ds
push
inc
sub
mov
and
mov
push
add
ljmp
fiadds
popf
sarb
clc
test
les
jnp
lret
xchg
mov
aaa
shl
push
and
dec
shll
popf
lds
xchg
xor
sub
or
mov
adc
in
sbbb
enter
nopl
xchg
add
add
data16
repnz
rdtsc
and
inc
popf
sub
fidivs
pop
and
sub
xchg
xor
xlat
sbb
push
pop
sub
xlat
push
add
negb
mov
aam
test
leave
and
mov
mov
add
mov
out
les
or
mov
rolb
leave
idiv
pop
imulb
fnstsw
call
or
out
mov
fnstcw
inc
inc
jbe
and
movsl
fdivr
fisttpl
scas
ja
gs
xorb
sub
pop
jg
testb
xchg
data16
inc
jecxz
xor
cwtl
and
in
inc
loopne
lcall
test
xorb
mov
pop
fnsave
cltd
rep
push
pop
nop
or
test
mov
cmp
pop
out
adc
test
pop
movsb
cmp
and
enter
fwait
mov
push
xor
cmp
cwtl
push
jge
fimuls
ja
lret
ja
bound
ret
xchg
les
pop
outsb
pop
sbb
dec
je
insb
leave
loope
xor
stc
loop
push
in
sub
xorl
dec
dec
adc
cld
pop
sarb
idiv
sub
icebp
pop
repnz
lret
pushf
shl
mov
adc
inc
mov
shrb
sub
out
pop
mov
jo
or
idivb
rolb
imul
mov
dec
sti
ljmp
call
and
jge
je
jle
adc
jno
push
fiadds
pop
out
daa
out
cmpsl
cmpsl
test
mov
sbb
adc
mov
icebp
push
cltd
notb
pavgw
enter
sbb
mov
cmp
mov
jge
jae
mov
inc
lret
fcoml
push
popf
cs
ror
mov
out
pop
mov
lods
xchg
push
dec
add
dec
sbb
cltd
adc
lcall
xchg
test
out
mov
rep
out
add
jmp
popa
icebp
test
xchg
pop
or
xchg
das
int
and
cmpl
stos
ljmp
mov
jmp
sub
aad
test
repnz
outsl
cld
mov
push
xchg
pop
jno
clc
stc
push
adc
push
push
imul
not
xor
cmpsb
xchg
sub
push
inc
jne
xlat
loope
mov
scas
test
jns
addr16
enter
insl
in
push
test
sahf
and
mov
xchg
jb
pop
jl
dec
test
and
add
pop
mov
push
cmp
xchg
sub
cmpsl
add
jle
push
jnp
and
inc
in
jne
clc
push
mov
mov
fwait
les
cmpsl
sarb
add
cli
jbe
mov
push
adc
jecxz
add
out
pushf
push
jae
push
lret
xchg
fwait
mov
sahf
xchg
loop
arpl
rcl
xchg
movsb
addl
add
or
stos
or
fwait
adc
lcall
mov
in
dec
push
cmp
jle
sub
lods
ds
mov
xchg
lods
and
mov
ss
sbb
fdivr
or
push
or
or
sub
push
xorb
xchg
pop
mul
fldcw
mov
mov
rcrb
mov
insl
jl
pop
fistl
and
fwait
sub
ds
mov
xor
add
sub
mov
jnp
add
jg
cmpsl
xor
dec
arpl
dec
scas
insl
dec
and
pop
and
popa
mov
arpl
jmp
push
jo
xchg
dec
pop
or
fwait
int
popa
lods
outsl
test
mov
cld
rcl
push
cwtl
pop
inc
mov
xchg
imul
jle
fstpl
mov
pop
ficoml
fsubrs
mov
rolb
fcomp
pushf
dec
pop
loopne
arpl
in
fwait
xor
adc
sbb
add
gs
aad
sub
or
inc
int3
leave
jle
scas
aam
aas
jns
stos
lock
jae
lods
adc
or
cmpsb
cpuid
fs
imul
iret
sbb
imul
xor
je
cmc
in
cmc
fs
scas
and
out
insb
jbe
mov
add
inc
sbb
mov
push
test
mov
fisubrl
dec
and
mov
push
enter
jge
push
aas
jp
movsb
jnp
push
xchg
inc
add
lds
adc
ret
or
mov
lock
mov
sti
cmp
dec
mov
in
cltd
push
cmp
push
loop
aas
jge
xor
jno
loopne
cmp
fwait
or
cmp
mov
push
pop
push
mov
and
inc
and
out
add
popf
outsl
xchg
fildl
jle
mov
aaa
adc
mov
pop
outsb
test
stos
imul
adc
xor
hlt
popa
std
out
cmp
sub
fisubrs
lahf
fwait
jecxz
lahf
lea
int3
mov
cmp
aad
jnp
lahf
sbb
out
pop
xor
adc
pop
inc
adc
jo
adc
inc
bound
rclb
insl
fists
xchg
jle
cmp
xor
arpl
loopne
pop
xchg
pop
ret
xlat
repz
insb
xchg
inc
xor
mov
mov
xlat
mov
mov
pop
fisubrs
xchg
push
in
movsl
test
icebp
rcrl
cmp
fistpl
mov
aam
add
aaa
arpl
fisttps
mov
mov
jmp
lods
cli
xor
push
sbb
loope
mov
or
push
aaa
test
push
flds
daa
mov
cld
int3
add
add
das
or
inc
addr16
pop
fcomps
inc
mov
insl
adc
adc
popf
mov
shr
xchg
roll
dec
sbb
rorl
addl
mov
dec
sub
mov
gs
ljmp
jbe
imul
sbb
aam
sbb
xlat
push
cld
loop
aad
enter
lods
cmp
jmp
and
dec
fcoms
leave
add
cmp
sub
or
cli
or
sub
xlat
aad
cmp
dec
test
fistps
jbe
cmp
mov
sub
pop
mov
mov
int3
mov
adc
repz
enter
int3
lret
fldcw
mov
cltd
in
push
push
pop
pop
inc
call
lahf
xor
out
push
sbb
inc
and
dec
mov
sti
loopne
or
lahf
fidivrl
outsb
stc
jae
jecxz
enter
push
fwait
int3
sub
lds
inc
enter
or
out
divl
test
xor
cmp
jbe
dec
and
mov
xchg
cld
jne
or
add
roll
cs
rep
mov
pop
sahf
sub
or
test
insl
ret
lods
or
ljmp
scas
lods
ss
xchg
dec
out
sub
xchg
ja
adc
arpl
cltd
or
bound
add
push
inc
add
inc
daa
lret
adc
nop
loope
pop
bound
adc
aam
or
sbb
xor
inc
or
test
gs
stc
dec
push
adc
mov
ror
pop
out
popa
sbbb
push
mov
xchg
into
xchg
loopne
lret
xor
lock
std
adc
inc
mov
mov
pop
inc
pop
pop
pop
std
mov
sbb
mulb
mov
pusha
dec
jne
fs
pusha
les
or
pop
lds
kmovw
mov
lods
mov
fnsave
cmpsb
and
das
rcrl
xor
jb
mov
add
mov
mov
push
rorl
cmpsl
icebp
push
jne
mov
popa
mov
mov
divl
mov
pop
add
xchg
lds
cli
add
adc
inc
inc
rcrl
push
ret
inc
shl
ret
loopne
cmpsl
rol
push
or
test
gs
dec
mov
gs
adc
cmpsb
movsb
inc
lock
and
cmpsb
outsl
mov
jge
and
outsb
jle
mov
inc
lcall
out
mov
add
stos
lahf
popl
pop
jl
or
push
cmp
pushf
adc
xchg
push
inc
dec
add
pop
or
test
sarl
mov
arpl
lret
pop
stos
pop
add
dec
inc
jg
rcr
sti
hlt
lods
inc
xchg
clc
roll
mov
xchg
pop
cmp
jne
pop
notl
xor
std
pop
cmp
rcr
sub
jne
fistps
add
ljmp
hlt
mov
sbb
cmp
jb
pop
xchg
popf
or
sbb
loope
repz
adc
in
mov
xchg
movsb
icebp
out
push
in
mov
in
add
lds
int3
adc
mov
int
out
inc
roll
add
cmp
add
mov
jmp
outsl
adc
push
insl
mov
mov
dec
gs
js
and
adc
fistl
jecxz
mov
mov
test
cmp
xor
sub
ss
mov
sbb
xlat
leave
int3
pop
dec
pop
das
rcrb
out
push
jge
cmp
inc
push
sbb
sbb
sahf
les
fsub
adc
push
test
adc
jmp
ror
insl
movsb
shll
dec
xorb
dec
adc
xrelease
ljmp
xorl
push
sub
cmp
div
ds
loope
pop
push
xor
fcompl
push
pop
loope
cld
arpl
sti
std
frstor
push
imul
fcomip
jg
pop
arpl
sub
cltd
mov
lcall
sbb
pop
in
std
aaa
sub
sbb
lods
xlat
push
jae
fs
and
xchg
cmc
push
insl
adc
inc
das
sub
orb
xlat
ss
and
lods
lahf
pusha
dec
sbb
mov
fbld
call
in
push
popf
ljmp
xchg
cltd
ljmp
mov
mov
mov
or
data16
rol
xchg
lds
xchg
jl
ss
imul
add
lret
mov
nop
sbb
cmpb
arpl
in
and
fiaddl
je
das
idivl
pand
push
dec
or
or
ret
and
push
into
pop
pop
cld
sub
sub
or
stos
shl
add
jp,pt
mov
insl
xchg
xchg
jne
cmpb
xor
inc
clc
push
sarl
fdivrl
pop
dec
push
sbb
fucomip
shll
pop
sbb
scas
xor
mov
rsm
in
cmpsl
das
cmp
xor
test
mov
in
xor
fldenv
sbbl
incl
js
dec
jnp
xor
mov
daa
lea
lock
push
and
dec
imulb
add
gs
pushl
xchg
xor
add
cmc
xchg
imul
dec
jo
mov
jmp
push
mov
ja,pt
cmp
adc
mov
shlb
sahf
into
addb
adc
mov
imul
xor
cmc
cmpsb
cmpsb
pop
adcl
enter
push
cmpsl
mov
cmp
es
inc
insl
push
jge
adc
data16
popa
pop
fsubr
xlat
outsl
mov
mov
ja
mov
in
insl
or
xlat
or
movsl
pop
fwait
pop
push
xchg
popa
popa
jbe
sarl
fnstcw
iret
xor
adc
cmpsl
and
push
pushl
shlb
divps
sti
dec
or
jecxz
orb
nop
inc
xor
pop
xchg
insl
jl
loope
xchg
mov
mov
mov
inc
pop
push
and
je
sub
inc
lret
decb
mul
add
or
push
sti
outsb
jae
mov
shlb
adc
pop
loop
jl
repz
jle
lcall
fs
aam
nop
xchg
mov
jns
scas
cmp
je
or
mov
xor
jns
gs
and
push
mov
inc
jae
or
ret
mov
jo
idivl
dec
stos
lock
sbb
or
pop
lahf
daa
xchg
in
cmp
aad
jne
jge
fidivl
ljmp
int
test
outsb
and
push
xchg
loope
ja
repnz
mov
lcall
jle
or
dec
push
test
or
pop
sub
add
movsl
orb
mov
pop
out
sbb
jge
sub
ret
out
jecxz
push
clc
insb
lret
rcrb
push
pop
adc
aam
mov
fisubrl
inc
cmp
aas
inc
cltd
dec
sbb
xlat
cmp
fs
and
pop
imul
xchg
or
and
mov
out
mov
fsts
lods
push
jecxz
jp
sub
xchg
adc
fwait
push
cld
call
xchg
push
xchg
jp
mov
bound
aad
fwait
es
shrl
and
cltd
xor
xchg
out
adc
jecxz
aas
mov
fwait
jae
mov
stos
push
jae
lods
sub
cld
lds
stc
sub
aaa
int3
decl
add
lds
sbb
movlps
mov
daa
mov
inc
sti
daa
adc
addr16
loope
and
ficomps
sbb
inc
push
mov
aad
rclb
arpl
push
aas
inc
add
mov
stos
stc
in
fisttpl
mov
das
lods
cmp
dec
mov
rcl
std
sub
or
rcrb
imul
rcl
repnz
movsl
imul
dec
push
mov
and
pop
pop
lcall
movsl
mov
lahf
xorl
roll
shll
roll
pop
les
sub
cwtl
sub
mov
dec
mov
cwtl
jg
or
rorl
or
imul
push
add
or
jl
sub
pop
testb
in
roll
cmp
enter
cmp
dec
rol
fwait
int3
movsb
rclb
pop
cld
out
aad
mov
loop
insl
stos
les
xchg
xor
pop
xor
iret
sub
sbb
dec
adc
jae
xor
jae
lret
adc
pop
push
movsl
in
lods
sbb
sbb
out
dec
push
adc
ret
push
sub
or
cmpl
xchg
or
and
lret
jmp
addr16
fucomp
test
iret
adc
xchg
inc
cmp
in
sbb
sub
test
scas
xchg
insb
repz
push
inc
mov
inc
jle
stc
orb
mov
dec
mov
jb
loope
fidivl
mov
jae
stc
or
lds
fcmovnbe
jo
and
loopne
push
mov
mov
push
mov
jp
jae
jp
xorb
jo
int3
jbe
fistpll
mov
adc
push
hlt
and
in
sahf
ss
jg
shl
inc
push
and
call
adc
xor
push
jne
in
push
push
outsb
sarb
add
and
pop
cld
or
aas
jp
jg
cmp
inc
push
out
das
dec
add
loopne
rorl
sub
xor
pop
jp
jae
bound
dec
je
arpl
jne
or
pop
test
shl
mov
sahf
add
and
xor
inc
inc
mov
lcall
xor
clc
in
adc
xchg
testb
mov
push
scas
jecxz
std
jns
xor
jg
mov
dec
pushf
jle
cld
add
dec
cmpsl
mov
cld
das
push
stos
das
push
int3
hlt
pop
sti
test
inc
mov
or
in
loop
loopne
cmp
push
add
mov
sub
mov
adc
cli
and
adc
in
dec
mov
add
mov
mov
cli
cli
jo
movsl
ljmp
enter
testl
jns
mov
mov
mov
lcall
cwtl
or
push
mov
inc
pop
cli
out
movsl
lahf
jbe
xchg
push
add
mov
js
adc
or
popa
mov
mov
lods
cwtl
mov
mov
mov
in
mov
jae
jne
inc
cmpsl
lret
testl
fwait
shrb
sbb
jne
outsb
or
lret
xor
rcrb
inc
das
aad
arpl
xor
adc
and
pop
xchg
or
cmp
mov
popf
xor
xor
das
aam
aad
sti
or
pop
pop
jmp
stc
lods
inc
adc
push
xor
add
mov
push
int
cs
jecxz
test
loope
sub
iret
sub
xchg
xchg
js
lods
inc
dec
xorl
mov
cmpsb
in
mov
lcall
mov
xor
pop
outsb
mov
pop
sub
outsl
test
or
pushf
lods
mov
mov
mov
adc
mov
je
jo
popa
test
mov
or
jl
into
xlat
pop
cmp
mov
popa
stos
xor
xor
fisubrs
ret
imul
xor
and
lods
sbb
rcrl
fisttps
test
jge
mov
data16
mov
jne
testb
rolb
repnz
std
fildl
pop
aas
lods
jnp
mov
outsl
inc
xchg
sub
sti
sbb
call
adc
loop
sub
arpl
push
lods
cmp
mov
inc
pushf
lock
mov
ret
mov
and
nop
sahf
aam
pop
mov
das
or
cli
dec
jnp
ljmp
mov
aaa
fsts
mov
mov
outsb
jl
cmc
aam
sub
inc
dec
pop
xchg
mov
xor
test
xchg
pop
in
fisttpll
pop
cltd
rorb
mov
add
loopne
add
in
add
cli
pop
pop
aas
inc
sub
mov
sub
filds
dec
repz
mov
std
lret
rcrl
adc
and
mov
cmp
jo
pop
push
add
lds
subl
hlt
dec
pop
fstpl
mov
iret
inc
mov
lret
xor
arpl
xchg
jbe
cwtl
xchg
cld
leave
cli
adc
xchg
ror
negl
insb
adc
add
jl
mov
pop
xchg
dec
push
push
test
adc
adc
sar
call
add
sbb
sahf
ret
out
repz
icebp
push
fisubs
add
xor
sub
insl
in
movb
das
push
pop
ja
xchg
dec
xor
in
xlat
add
inc
addl
arpl
sbb
pop
dec
sar
std
or
add
mov
jb
cmp
pop
or
pop
in
mov
loop
cmovnp
jl
cmpsl
push
mov
into
add
mov
in
xchg
pushf
adc
and
rorb
and
cmp
mov
sub
insl
test
jb
mov
add
mov
xchg
push
xor
stc
jle
fsubl
into
jl
inc
add
jle
jmp
mov
sbb
and
pop
xchg
push
cmp
movsl
push
mov
mov
or
sbb
lcall
dec
mov
pop
ror
orl
jae
pop
scas
idivl
imul
nop
adc
shll
jbe
xor
pop
mov
testl
in
push
lret
mov
pop
xchg
mov
icebp
jg
out
inc
mov
shlb
lds
adc
mov
mov
cmp
push
or
xor
push
les
cmc
cs
and
jns
inc
enter
call
jmp
call
sub
sbb
jmp
sub
sbb
rcll
jge
inc
popa
push
out
mov
int3
dec
imul
push
add
test
cmp
xorl
imul
sbb
mov
fcomi
jmp
movl
lods
and
sub
sub
jle
mov
xlat
mov
add
fbstp
mov
frstor
or
or
sbb
les
nop
xchg
out
shlb
adc
xchg
insl
mov
jecxz
das
notb
or
stos
push
jnp
xor
bound
push
icebp
xchg
adc
rorb
xor
test
lret
adcb
dec
popa
pop
mov
test
pop
lret
jno
repnz
loope
mov
imul
cmp
mov
outsl
cmp
cmc
jge
aad
insl
xor
mov
add
test
jo
es
data16
add
stos
fsubrp
or
out
aam
lods
sub
jmp
scas
cmpsl
sahf
jne
adc
push
or
jg
daa
sub
test
jp
jmp
test
outsl
xor
cli
imul
loopne
or
js
push
sbb
mov
sub
add
in
rorl
and
insb
mov
dec
push
mov
dec
pop
inc
sub
scas
jae
push
lcall
shlb
pop
out
sub
inc
scas
lods
loope
sbb
in
adc
decl
mov
or
jns
inc
and
adc
mov
ljmp
sub
lods
in
mov
notb
sbb
std
dec
aas
mov
xchg
add
mov
std
or
les
or
ds
or
cmp
sub
pop
mov
fsubp
mov
out
dec
jge
sbb
mov
sub
std
aas
mov
mov
mov
outsb
jl
insl
in
inc
outsl
mov
mov
mov
in
imul
call
mov
pop
jg
inc
mov
insl
repz
xor
add
les
sub
movsl
cmc
pop
xor
mov
popf
shll
sub
add
cli
push
fimull
pop
repz
idivl
pop
je
push
loop
jae
sbb
aaa
ret
ljmp
or
inc
push
ficomps
cltd
jecxz
aam
cld
jb
jnp
stc
ret
mov
mov
out
push
cmp
xor
cld
test
daa
stc
aad
rdtsc
jno
mov
xchg
test
pop
dec
dec
in
sub
fldenv
pop
jne
mov
mov
lret
xchg
xor
and
orb
cmc
fwait
inc
adc
xchg
imul
rclb
lret
les
xor
insb
push
mov
lods
cs
bswap
lcall
inc
fidivrs
je
loopne
sbb
xor
frstor
mov
rcrb
and
test
dec
ret
cltd
cs
sarl
cs
es
mov
add
enter
fadds
inc
xchg
cld
pop
pop
jmp
lock
dec
pop
push
inc
rclb
fistl
fistpll
inc
add
xchg
adc
dec
fwait
pop
and
xor
jae
pop
test
pusha
mov
lods
pop
mov
insl
sub
call
push
dec
jns
mov
sub
cmp
mov
sbb
push
mov
js
fadds
outsl
sub
push
push
ljmp
fsubl
cmp
push
out
mov
sub
daa
push
rorl
xchg
mov
cmpsl
mov
or
mov
outsl
jns
test
std
icebp
mov
mov
sub
int3
cmp
mov
push
lods
xchg
adcl
repz
dec
in
pusha
movsb
adc
jbe
push
mov
outsl
ja
into
gs
in
mov
int3
sub
xchg
fs
xor
test
pop
dec
push
dec
adc
cmpsb
or
sbb
js
daa
push
leave
cmc
mov
fs
or
and
repnz
xor
lods
cwtl
test
fwait
dec
imul
test
imul
mov
and
jbe
ror
jge
es
mov
jecxz
popf
push
sbb
mov
push
je
je
or
ljmp
arpl
sbb
aas
and
ss
popf
shrb
pop
repz
inc
mov
cltd
inc
cmp
loope
cmc
dec
xor
repz
xchg
and
adc
lea
and
sbbl
jo
gs
movsl
push
xchg
mov
pop
ret
fwait
leave
imul
push
push
mov
jns
sbb
xchg
into
xchg
xchg
arpl
leave
sbb
add
inc
jg
loope
popf
dec
xor
in
dec
sub
jg
mov
jne
sbb
mov
xlat
fdivrs
sub
gs
dec
lret
sub
lret
out
mov
xchg
mov
addr16
inc
arpl
sub
inc
pop
xor
nop
push
lds
pop
rclb
in
and
stos
push
nop
push
pop
xor
push
fs
aam
test
and
mov
and
pop
sbb
sbb
pop
fistl
cmp
movsb
sub
sbb
adc
icebp
movsl
int
fwait
jno
sub
jle
rcrb
mov
fistl
in
mov
repz
lods
inc
cmp
sub
xchg
in
ljmp
pusha
ds
xor
sub
call
jno
int
in
lods
jg
ss
out
push
rcll
cmp
push
xchg
adc
mov
in
sbb
mov
and
cwtl
sub
lret
jecxz
jbe
push
cwtl
mov
sarb
push
je
cwtl
sub
insb
lahf
adc
or
nop
jae
insl
clc
cltd
xchg
sub
sti
cmpsl
cmpsw
adc
idiv
stc
je
jo
cmp
iret
js
mov
and
sub
cmp
pusha
ret
imul
inc
test
loop
xchg
lds
pop
int
stc
gs
lods
das
add
mov
pusha
adc
inc
jns
xorl
mov
js
xchg
gs
popa
and
sub
push
xchg
xor
ja
jae
inc
mov
aas
add
and
sti
cmpl
das
sbb
or
dec
addr16
clc
ljmp
sbb
xor
jne
xor
push
pop
cmc
cmp
sub
push
xchg
sti
xor
mov
jae
mov
xchg
sarb
pop
inc
rcll
xor
push
cmp
cmp
jmp
xchg
lret
xchg
inc
hlt
push
cli
getsec
roll
repz
mov
xchg
mov
int
sahf
sub
xchg
adc
popf
dec
mov
or
repz
aas
lret
xchg
add
shrl
rcrb
inc
dec
cltd
sub
shlb
and
dec
fcoms
mov
sbb
jo
aam
inc
inc
push
aas
icebp
inc
fimull
add
loopne
mov
fdivrs
in
push
mov
push
call
mov
pushf
fucom
add
outsl
fdivp
mov
mov
mov
push
jo
pop
xchg
pushf
f2xm1
mov
jecxz
mov
sub
cwtl
fwait
add
mov
mov
pop
inc
or
add
aaa
fcoms
mov
mov
mov
enter
cmp
into
xchg
nopl
clc
cmp
stc
fs
jns
mov
aam
stos
filds
mov
mov
or
lods
pusha
jo
fwait
mov
pop
lahf
sbb
dec
scas
cmp
loop
aam
aaa
sarl
ljmp
inc
cltd
ret
push
cltd
jecxz
fdivp
cli
mov
ret
add
sbb
int
mov
rorb
loope
mov
xor
xchg
or
mov
sbb
xorl
frstor
ss
adc
push
ja
push
in
push
lret
and
sub
shl
xchg
sbb
stos
jnp
xchg
pusha
stos
push
mov
pop
adc
or
dec
lret
mov
imul
pop
push
push
nop
out
or
sbb
imul
dec
ljmp
es
sbb
mov
jno
or
cmp
push
sub
jno
push
fdivrs
lret
inc
mov
inc
movsl
out
and
sub
fldl
jp
mov
dec
or
mov
dec
cmpsb
mov
mov
pushf
test
inc
lds
lods
shr
xchg
stos
mov
fwait
ret
mov
mov
xchg
sbb
repnz
sub
push
or
nop
xor
push
and
je
adc
pop
and
lods
imull
sbbl
fmull
jo
push
subl
cmp
icebp
dec
inc
sbb
push
sub
into
lret
andb
jg
or
nop
mov
push
pop
mov
mov
and
jecxz
adc
mov
cs
lret
lock
push
shlb
test
mov
ja
or
in
pop
notb
xor
xor
mull
jmp
sub
xor
mov
mov
mov
data16
or
push
movsl
sbb
leave
inc
mov
pop
adc
rcr
lds
fsubs
sbb
mov
lea
out
jne
imul
fisubrs
and
sbb
sub
mov
mov
cmp
cltd
jb
incl
adc
and
or
inc
shl
ja
add
inc
jle
fsubrl
nop
repz
leave
sbb
jge
mov
cld
xchg
jmp
scas
fsubp
in
sub
rcrl
loop
and
mov
sub
and
add
sub
jge
test
jg
inc
adc
mov
hlt
lea
xor
dec
push
push
fwait
push
outsb
jb
int3
scas
lret
imul
mov
mov
inc
or
and
mov
imul
cmp
aaa
rol
loope
jns
sbb
bound
pop
in
ja
cmp
mov
out
xor
and
out
fstpl
lods
pop
fs
pop
es
jmp
ret
ljmp
adc
jle
jle
pop
pop
mov
pop
iret
mov
pop
jnp
imul
stos
nop
pop
and
icebp
jnp
movsb
inc
push
iret
jle
iret
cmp
fmull
fcmovnu
psrld
adc
roll
add
pop
pop
push
bound
mov
mov
int
lds
mov
xchg
lods
mov
daa
scas
lahf
arpl
push
ljmp
mov
jne
ss
ja
dec
shll
lods
lahf
je
out
rolb
inc
test
mov
shlb
mov
mull
lods
jecxz
xchg
xor
ljmp
pop
mov
pop
popa
xor
mov
pop
cld
rolb
rorb
and
xchg
lea
test
or
shr
add
cld
nop
movsl
jecxz
sarb
leave
or
addr16
pop
notb
cmpsb
xchg
pop
push
xchg
sarl
add
scas
jl
icebp
scas
jno
add
shr
lret
push
push
sbb
sub
imul
push
add
out
mov
inc
xchg
shl
aaa
sbb
js
test
jae
jno
and
scas
fwait
cmpsb
jecxz
mov
pop
cmp
mov
notl
pop
pop
std
inc
push
sub
ret
xor
in
inc
cs
stc
add
xchg
xor
adc
cmp
sub
fbld
movsl
cmp
pop
scas
test
add
test
push
divb
repnz
rclb
xchg
dec
shrb
pop
data16
push
mulb
add
ss
ret
dec
fistpll
icebp
mov
dec
xchg
mov
sbb
dec
enter
lret
mov
adc
hlt
mov
xchg
fucomi
lahf
in
jb
sbb
mov
cmpsb
iret
movsb
mov
pop
call
out
push
xor
xorl
adc
scas
outsl
adc
cmovno
mov
push
xor
enter
and
mov
and
pop
repnz
out
mov
ljmp
push
mov
xchg
cmp
fs
xchg
dec
insl
inc
scas
add
cmc
ds
stos
rcll
add
cmp
xchg
pop
sahf
sub
jle
ja
xchg
dec
mov
int3
test
or
push
icebp
add
jmp
jnp
lret
sub
xor
push
add
inc
pop
imul
push
ja
jecxz
lock
jl
in
loopne
cmp
call
mov
popa
add
je
dec
adc
lds
push
out
scas
and
lahf
mov
sub
dec
cli
and
add
inc
push
hlt
xor
shl
call
movsb
xor
fs
and
mov
push
mov
out
repz
jp
das
and
jle
mov
jge
cmp
push
jo
cmpsl
dec
mov
sub
mov
adc
test
xchg
pop
mov
cld
fimuls
aaa
fildll
dec
testb
jb
cmp
aad
mov
cli
push
out
inc
add
jp
lock
adc
out
popf
push
mov
rcr
lcall
popa
pop
popf
sub
imul
xorl
inc
cmc
jg
and
mov
lock
dec
ret
pop
dec
loop
shrb
dec
inc
and
scas
adc
andl
add
push
sub
or
sbb
jp
pop
jae
fidivl
sub
push
pop
xor
push
mov
jne
or
xor
cmpsl
mov
stc
add
cltd
fs
repnz
adcb
inc
fsubs
push
lret
aad
adc
outsl
lods
mov
sbb
ss
pop
fists
out
adc
jns
xor
cmovbe
mov
jmp
or
mov
shll
negb
lods
insb
or
addr16
mov
hlt
jge
mov
loopne
adc
xchg
mov
sub
iret
mov
out
push
pop
jge
xor
in
cmova
or
shrb
std
and
scas
adcb
in
push
nop
sub
enter
nop
xor
rorl
push
into
push
mov
xchg
xchg
lret
xchg
push
push
lods
cmpsl
push
adc
dec
dec
dec
and
sbb
pop
mov
aad
mov
fstl
jp
cmp
cmpsb
push
dec
mov
icebp
or
out
inc
fbstp
xorl
mov
pushf
xchg
adc
shl
xor
incl
sbb
xor
aaa
into
dec
mov
inc
shll
push
fwait
das
popa
enter
jo
ds
jecxz
cmp
jno
push
pop
shr
lahf
jl
in
sbb
sub
mov
or
sti
std
out
sub
mov
sub
insl
jecxz
les
data16
sbb
xor
pop
scas
and
or
outsb
sarb
jo
dec
addr16
fs
dec
adc
stc
cli
in
add
psubsw
and
out
dec
dec
adc
dec
cld
mov
add
sbb
mov
call
sub
loope
jns
sbb
jl
insb
mov
mov
data16
jns
push
lock
scas
out
shl
sbb
sub
out
adcl
pop
or
xor
pop
lock
inc
adc
lret
xchg
sti
sbb
and
dec
sub
dec
jle
push
fmuls
push
pop
sub
cmp
mov
orb
mov
jo
cmp
inc
sub
push
cwtl
lods
test
sub
xor
les
mov
push
jle
push
mov
pop
jge
in
push
mov
jnp
push
push
out
je
mov
addr16
cmp
shrl
xor
sub
into
jae
cltd
inc
sub
or
or
nop
jle
mov
add
xor
loopne
push
dec
rcll
dec
es
outsl
leave
xchg
inc
fdiv
push
call
das
xor
fimuls
dec
push
adc
pop
push
orl
jbe
fs
out
fdivrs
out
data16
cmp
push
sbb
jno
daa
xchg
in
iret
mov
mov
xor
adc
or
sbb
jl
push
dec
push
ficoms
inc
repnz
dec
lods
xchg
pop
jmp
add
xchg
mov
pop
and
dec
cmc
js
out
shrb
push
dec
jmp
out
xor
test
movsl
xor
movd
sbb
pop
gs
ja
shlb
sbb
into
pop
popf
mov
mov
imul
xchg
pop
daa
xlat
cmp
xor
and
inc
or
dec
js
cmpsl
test
dec
sti
or
mov
push
add
test
sbb
push
push
lret
push
push
stos
sarl
or
jb
mov
clc
adc
mov
dec
shll
insb
fst
pop
outsb
xchg
dec
push
jmp
cli
outsb
cltd
fwait
addr16
lret
xchg
cli
negb
testl
dec
sbb
mov
out
mov
lods
pop
fucom
mov
jns
das
adc
adc
into
in
mov
push
push
push
mov
sbb
xchg
xchg
cmpsl
cmpb
mov
ljmp
ret
es
ss
add
or
lret
and
lods
mov
sahf
jno
lret
and
adc
bound
scas
pusha
sarb
bound
dec
push
cltd
sbb
mov
fldt
push
inc
dec
mov
das
das
mov
repnz
rcl
mov
dec
xchg
sbb
and
jb
ret
cli
and
test
stc
hlt
pop
test
dec
outsb
out
in
dec
fcom
xchg
or
fsubrs
add
stc
ljmp
adc
pushf
mov
mov
cltd
insb
inc
imul
out
mov
pop
push
sbb
jae
iret
hlt
pushf
jnp
jg
imul
xchg
jecxz
loop
mov
pushf
inc
fnstsw
cltd
ds
xlat
scas
adc
xlat
xchg
fs
cli
and
addr16
loopne
call
or
iret
std
aam
pop
pandn
jmp
push
jne
sarl
sub
and
scas
sbb
and
cltd
into
insl
pop
sbb
les
mov
lock
pushl
pop
sbb
add
add
pop
sub
xchg
daa
push
push
push
repnz
mov
sub
xchg
dec
aad
hlt
shrl
sbbl
sbb
sub
mov
les
mov
push
fbld
movsl
jae
xchg
repz
fsqrt
ljmp
out
testl
lods
iret
icebp
sub
or
fwait
xchg
sub
pop
mov
add
sti
jge
fprem1
movsl
xchg
dec
and
inc
in
movsb
ret
dec
pop
fdiv
sbbl
popf
mov
aam
jmp
mov
inc
testl
mov
and
jecxz
pop
sub
fsts
add
out
mov
hlt
pop
xchg
in
mov
sar
mov
ficompl
xor
stos
test
imul
mov
jle
jg
sub
pop
into
sbb
lods
xor
mov
inc
mov
pushf
test
sbb
cmp
pushf
outsl
insl
mov
mov
ljmp
pxor
je
mov
arpl
stos
lea
cmp
movsl
pushl
or
es
ret
out
icebp
mov
iret
adc
test
sub
js
sub
fldt
sub
clc
mov
movsb
fistl
icebp
ret
mov
ds
into
sbb
and
pop
out
pop
adc
jbe
mov
mov
shll
test
jns
xchg
xchg
ret
inc
push
xchg
pop
rolb
mov
out
pop
fs
test
lock
inc
xchg
les
jbe
lcall
and
loop
xchg
out
aaa
in
add
mov
or
scas
icebp
imul
mov
mov
les
repz
sbb
mov
mov
inc
sahf
pause
sar
out
imul
cwtl
dec
sub
scas
outsb
cmp
and
fldl
mov
pusha
es
mov
lea
or
jne
sub
adc
push
mov
cmp
int3
fnstcw
and
ss
imul
jns
and
je
sarb
push
xlat
repz
ljmp
outsl
stos
fisubrs
mov
mov
push
rcrb
scas
mov
mov
cmp
movsb
mov
xchg
sub
out
in
fsubs
popa
outsb
pusha
test
imul
lret
inc
repnz
mov
xorl
in
add
fwait
jmp
pop
outsb
jecxz
jecxz
inc
pusha
sub
imul
pusha
shll
lods
ds
or
or
gs
repz
test
ret
pop
out
mov
lahf
mov
mov
jecxz
stos
addr16
xchg
push
outsl
popa
push
lods
pop
sub
imulb
adc
movsb
adc
std
mov
addb
dec
outsl
loope
ret
pop
cld
fidivs
in
mov
imul
sbb
mov
dec
repnz
inc
lea
xorb
ljmp
or
or
sbb
fs
mov
cmp
ds
pop
inc
lret
add
dec
lret
xchg
jns
pushf
add
cmpsb
scas
inc
loopne
subl
test
cmp
push
call
fistpl
and
fsub
xor
fnstcw
mov
jne
jnp
cwtl
cmpsl
fldenv
prefetch
shl
add
pop
jecxz
enter
jno
outsb
das
addr16
dec
sub
cmp
fsubs
lods
inc
push
sbb
jnp
scas
lea
and
xor
iret
in
dec
sub
jbe
ja
les
adc
sub
push
movsb
sub
push
mov
aaa
mov
mov
xchg
loope
pop
xchg
adc
leave
mov
jo
add
jns
push
enter
sbb
mov
mov
and
push
lds
dec
inc
jle
xchg
dec
rol
inc
pop
or
mov
call
dec
push
sbbl
lahf
pop
cmp
dec
out
mov
lret
inc
jmp
les
icebp
mov
popa
es
mov
xchg
mov
push
inc
cmp
dec
xor
xchg
push
rcll
mov
xor
sahf
jecxz
xchg
jne
jmp
lock
aad
and
pop
mov
aad
pop
xchg
test
pusha
jmp
shlb
je
lock
loopne
or
jge
jmp
adc
sub
jle
sbb
sub
or
push
pop
inc
xchg
paddusb
adc
xor
adc
inc
pop
jle
cmp
mov
pop
setbe
xchg
out
repnz
cmpl
pop
jb
push
sahf
stos
xor
pop
jmp
jb
sbb
cmpsb
xchg
ja
xchg
jl
cmp
dec
push
stos
outsl
cmp
mov
addr16
fnsave
je
mov
sahf
inc
pop
cmc
jbe
and
int
push
dec
js
adc
in
sub
mov
outsb
aaa
xor
push
add
aaa
xlat
andb
pop
sbb
into
push
xchg
cmp
mov
dec
gs
inc
jo
sub
xchg
shrb
call
jbe
loop
clc
fildl
je
sbb
xor
cmp
jo
mov
push
outsb
js
int
imul
in
mov
dec
xor
pop
sarb
mov
cltd
cmp
xor
add
aas
jmp
xchg
pop
ds
pushf
and
sbbb
addl
aam
mov
sahf
add
dec
mov
cmpsb
dec
jbe
dec
adc
cmp
sub
jge
leave
add
sub
and
int
push
sbb
addr16
and
mov
mov
and
jge
xor
sbb
lea
cmp
inc
out
xchg
or
loop
push
sbb
lret
test
inc
inc
outsb
xchg
sub
lret
add
lods
jecxz
push
fwait
gs
xchg
dec
sbb
mov
and
in
cmp
ss
scas
mov
pop
xchg
xor
and
bnd
aaa
fstpt
adc
jae
dec
fstps
iret
stos
int3
scas
inc
push
leave
roll
lahf
mov
mov
ret
mov
pop
jg
or
leave
jo
push
xor
in
or
shl
enter
mov
xchg
sub
xchg
scas
add
sbb
sahf
stos
push
sub
std
das
es
add
cs
or
daa
aas
push
mov
fdivp
and
imul
sahf
fwait
pop
pop
je
mov
adc
jb
or
ds
bound
cld
test
rclb
jl
jnp
push
pusha
sbbb
sbb
xlat
xchg
mov
push
sbb
and
icebp
hlt
sub
addr16
adc
pop
mov
xchg
test
std
idivl
xor
pop
inc
sti
pop
cmpsb
and
add
call
lods
out
ljmp
insl
insl
dec
jbe
cs
scas
pop
add
lods
in
push
mov
push
mov
cltd
dec
jno
outsb
cmp
fadd
mov
ret
adc
cmp
rolb
push
and
sbb
js
jecxz
pushf
inc
add
sub
addr16
xchg
insb
xchg
out
shll
xlat
sub
jle
out
test
lret
jmp
lret
dec
iret
or
dec
movsl
lods
xchg
lds
xlat
loopne
xchg
loope
ficoms
in
mov
in
jns
sahf
mov
inc
into
mov
idivl
arpl
mov
ret
iret
pop
in
jno
sbbb
imul
cmp
shrb
mov
in
daa
into
mov
cwtl
inc
cmp
in
xor
repnz
push
mov
fcompl
dec
aam
and
mov
and
sbb
shr
inc
pop
sbb
mov
fwait
std
das
cs
cmpsl
inc
rorl
aad
sub
ret
xor
fimull
xchg
mov
divl
hlt
fucomip
clc
push
sbbl
add
int3
test
cmp
int3
inc
sbb
rclb
int3
mov
inc
inc
into
fstps
pop
xchg
sbb
push
pop
fstpt
mov
add
mov
fmulp
lahf
loop
cmp
mov
pop
fistpl
mov
mov
das
out
in
cmpsl
jp
jne
push
scas
xchg
fidivs
xor
clc
dec
push
push
inc
popa
cmp
mov
mov
pop
data16
cld
jle
bnd
xorb
xchg
mov
movb
pop
cwtl
or
lods
out
add
jp
fimull
cli
fcompl
inc
xor
andb
sub
negb
rclb
ds
push
and
lods
mov
stos
mov
xor
std
inc
mov
add
sub
xchg
xor
rorb
and
pop
je
and
leave
sub
cltd
movsl
sbb
pop
jbe
sahf
push
mov
out
xor
inc
test
push
mov
insl
ja
out
push
xchg
push
mov
popa
and
fcomi
pop
jecxz
pop
in
mov
or
xor
xor
outsb
dec
js
xchg
outsl
pop
movsb
inc
sbb
inc
popa
lock
mov
mov
wrmsr
lahf
mov
mov
loopne
cld
sub
adc
push
adcb
test
dec
and
rclb
fistl
mov
adc
dec
mov
in
je
add
mov
jne
idivl
adc
repnz
pop
cltd
and
imul
in
or
push
mov
popa
outsb
jmp
call
cmp
pop
sub
mov
popa
popa
jp
cmc
loope
mov
lds
fsubrl
pop
cmc
push
mov
mov
jbe
and
sub
and
jbe
cs
dec
nop
inc
or
aad
or
xor
add
mov
rcl
aam
mov
ss
lods
or
inc
inc
mov
pop
jb
in
fs
mov
jmp
rcll
mov
jge
clc
cmp
adc
lea
out
ficoms
lea
and
mov
jl
cld
lret
mov
jle
subb
mov
add
in
mov
sub
xchg
pop
in
pop
lret
jo
sub
xchg
inc
sbb
inc
lahf
xchg
fistl
aaa
scas
je
mov
sbb
sbb
or
js
insl
mov
jg
xchg
addr16
and
in
xchg
in
imul
push
cli
cld
in
fisttpl
mov
imul
test
or
or
sahf
out
fwait
in
pop
push
test
out
or
or
cmp
mov
loop
cmp
xchg
push
sbb
sbb
cmpsl
faddl
jg
xchg
and
and
adc
mov
popa
mov
cmc
neg
push
or
add
sub
mov
cwtl
mov
cmp
jnp
xchg
or
cmc
and
cmp
push
orl
stos
lea
sbb
sub
inc
pop
fsubr
push
jne
das
pushf
push
into
fcoml
mov
push
stos
repnz
stos
out
daa
lret
cmp
bound
lahf
bnd
add
lcall
jo
mov
pop
clc
ss
push
lret
mov
or
jge
mov
add
xchg
sbb
or
aaa
aad
insb
cltd
jg
mov
pop
pop
cmp
ja
test
and
cltd
sbbb
cmc
xsaveopt
xchg
add
icebp
cmp
jo
dec
das
popf
call
xor
icebp
fdivr
mov
dec
mov
xor
lret
jge
and
jg
jo
sbb
or
shl
sbb
dec
cmp
cwtl
mov
popf
push
in
dec
pop
fists
push
mov
adc
imul
xlat
loopne
fimuls
xor
jns
mov
xchg
push
sbb
rorb
sbb
adc
xchg
sbb
xchg
push
cmp
or
lods
and
in
rorb
iret
dec
xchg
nop
xchg
inc
lock
and
into
push
adc
pop
out
xchg
sub
out
es
dec
jno
mov
mov
loope
push
ret
pop
cmpsb
xchg
aam
xor
fwait
xchg
push
mov
stc
fimull
stos
pop
ffree
lahf
movl
cmp
shll
lahf
mov
pop
pop
and
add
orl
cmpsl
inc
leave
out
xlat
cld
push
add
lret
xor
sub
ret
std
test
aaa
xchg
aam
test
dec
mov
add
lret
pop
cmpsl
and
cmp
jo
mov
mov
cmp
mov
lock
xlat
and
loop
xchg
push
adc
mov
cli
popa
fdivrl
add
repnz
outsl
mov
lea
mov
xor
push
loope
pop
push
notl
xchg
xchg
mov
ds
mov
fwait
jle
adc
int
mov
adc
and
adc
pusha
push
or
fistl
iret
mov
in
push
inc
sti
pop
int3
dec
ja
pop
mov
sbb
clc
shr
inc
adc
push
pop
cmpsl
cmpsb
scas
loop
sahf
in
push
add
gs
fldl
loop
dec
sub
sub
hlt
cmp
test
add
fsubp
cmc
push
push
jb
int
out
dec
or
jmp
jmp
mov
jno
popf
sbb
in
adc
mov
pop
into
data16
js
ret
icebp
add
cmpb
xchg
inc
dec
mov
or
mov
aas
iret
enter
pop
pop
flds
ret
lea
push
xchg
mov
push
rolb
testb
movsb
call
and
inc
inc
aad
roll
ja
shlb
loopne
mov
popf
jns
or
add
sbb
mov
sub
inc
pushf
out
push
and
enter
pop
mov
cmp
test
push
mov
lock
pushf
mov
xchg
cmp
jmp
sub
inc
cmp
mov
sbb
sbb
xchg
jo
out
sub
mov
and
cmp
sbbb
ss
shll
scas
cwtl
mov
or
sbb
pop
pusha
data16
lock
push
jecxz
test
popa
scas
cltd
inc
stos
mov
cs
lock
fidivrs
test
loop
daa
jmp
mov
sarb
test
pop
leave
sub
push
orl
add
jg
xchg
dec
push
cld
push
inc
popl
xchg
pop
push
sahf
and
and
pushf
stos
xchg
fisubs
idivl
inc
pop
js
cmp
aaa
adc
popa
imul
sti
int
inc
cmc
ret
shll
mov
push
pop
dec
idivl
sub
sub
lods
pusha
adc
int
movsb
lret
cli
dec
gs
adc
pusha
les
mov
mov
into
lea
sbb
fstps
outsb
mov
movsb
mov
and
mov
sbb
int3
mov
sbb
movsl
xchg
sub
dec
mov
xor
pop
sub
inc
clc
and
lea
xchg
mov
dec
add
outsl
insb
data16
movsb
sbb
sbb
scas
lds
or
and
fxch
pushf
insl
hlt
insl
icebp
pusha
sbb
out
insb
and
lahf
shrb
mov
aaa
mov
and
dec
inc
mov
rcrl
adc
inc
pop
ss
int
dec
dec
int3
out
out
inc
fbstp
add
es
mov
mov
sub
mov
enter
popa
clc
add
mov
xchg
pop
adc
dec
push
std
push
movsb
and
mov
jmp
sbb
mov
xchg
xchg
xchg
pop
sub
push
cli
iret
imul
or
or
or
add
mov
and
movsb
fmuls
pusha
inc
xchg
cmp
xor
add
lock
hlt
mov
mov
inc
paddsw
cs
cmp
cltd
movhlps
mov
cwtl
mov
pop
pop
dec
call
popa
and
jo
test
test
sbb
xor
jmp
mov
mov
mov
icebp
adc
cmpsl
loopne
sub
dec
inc
push
loope
push
ljmp
dec
mov
xchg
pop
hlt
call
add
je
pusha
bound
xor
mov
fiaddl
pusha
neg
xchg
mov
cltd
sbb
in
pop
lea
ss
mov
lahf
or
in
xchg
pop
sbb
jns
dec
adc
xchg
rolb
add
adc
out
sub
bound
jle
mov
cmc
in
pop
cmp
xor
add
sbb
sarl
push
jg
mov
cld
lock
mov
sbb
push
mov
pop
cmpsl
loope
ffreep
jle
fcompl
insb
nop
push
sub
push
xchg
or
add
lods
push
pop
stos
mov
sub
fimull
imul
insl
or
stos
aad
push
rcr
bound
pusha
jg
icebp
xchg
fidivs
jge
es
insl
push
lds
or
jb
mov
mov
push
or
loopne
cmc
and
xchg
imul
into
dec
arpl
mov
int3
imul
repz
jb
sub
jmp
xchg
sub
cmp
push
stc
or
xchg
ja
repz
push
add
jo
mov
or
out
jge
pop
cld
xor
pop
pop
fs
dec
movsb
push
fdivrp
jo
cli
lds
mov
shlb
sub
sbb
out
repnz
lds
xchg
jne
insb
mov
xchg
or
xchg
push
mov
adc
in
sbb
mov
orl
and
and
fcomp
adc
sbb
pop
aam
jp
sbb
adcb
pop
insl
pop
pop
mov
cmp
mov
mov
cld
nop
fildll
int
and
cmc
cmc
xchg
scas
mov
push
add
sbb
dec
mov
jp
pop
out
push
pop
push
ret
divb
ret
divb
les
dec
dec
shrl
push
icebp
ret
inc
and
mov
mov
inc
mov
stc
cmc
psubsw
sub
lret
inc
loop
add
shll
and
fistpl
xor
fucom
push
inc
mov
in
pop
int3
pop
pop
jmp
pushf
push
jge
decb
xchg
xlat
pop
sbb
jne
pushf
mov
scas
xchg
xor
add
test
sbb
gs
ret
inc
and
loopne
mov
popa
dec
out
test
fs
test
xchg
or
and
lods
shlb
pusha
xchg
jno
xor
ja
adc
ret
pusha
sub
lea
or
inc
subl
or
das
in
fidivrs
pop
add
cmc
push
ljmp
gs
dec
es
loopne
inc
outsl
add
sub
pop
or
xchg
fsubr
int3
jb
pop
ja
insb
cmpsb
insl
xor
frstor
sbb
pop
lods
jo
xor
pop
cs
or
dec
insl
in
inc
push
jno
sbb
and
cmp
sub
clc
loop
cmpsb
push
inc
out
in
add
dec
xchg
push
orl
add
aaa
test
fs
xor
andb
loopne
in
dec
push
sub
popf
lcall
mov
mov
clc
lahf
dec
lret
push
pop
loop
std
gs
push
cmpsb
jecxz
lar
fwait
jnp
mov
mov
pop
int
fsubp
xchg
jmp
cmc
or
cwtl
sbb
jb
imul
pop
cs
mov
or
mov
xchg
jmp
or
mov
inc
cmpsb
in
push
dec
add
pop
scas
shrl
jmp
adc
pop
ja
push
push
mov
sub
test
xor
ds
movb
rcrl
mov
adc
sbb
inc
fcomps
mov
xor
and
adc
rcrl
mov
cwtl
out
push
inc
dec
rclb
mulb
dec
ret
rcll
std
xchg
lret
call
mov
or
sub
mov
fcoml
mov
push
out
mov
cmc
mov
ss
out
mov
cld
cmp
mov
cmp
jge
test
jecxz
push
fbstp
fs
test
into
loopne
sub
inc
imul
mov
loope
mov
cmp
sub
outsb
jge
leave
mov
jno
dec
movsb
xor
pop
add
push
pop
js
push
mov
in
pop
push
daa
dec
inc
ds
pop
mov
inc
lret
clc
pop
mov
xchg
cld
pop
rcl
push
lea
aas
push
negb
push
addr16
mov
mov
aam
jecxz
out
mov
imul
mov
xchg
das
es
aam
mov
inc
mov
sub
pop
outsb
iret
fdivrs
sub
mov
pop
loop
push
sbb
lods
stos
mov
mov
repnz
sti
ja
cmp
sarb
xor
mov
scas
loope
in
js
add
mov
andl
clc
mov
imul
daa
mov
aaa
push
cmp
pop
add
xabort
ss
sub
icebp
out
into
ja
sti
mov
fwait
pop
ds
cmpsl
test
mov
idiv
divl
mov
dec
lods
jecxz
mov
pop
mov
fidivs
jns
mov
push
sub
mov
movsl
int3
xlat
sub
push
insl
ds
insl
mov
in
sbb
dec
aas
pop
xor
jg
in
sub
mov
jecxz
aas
rolb
rclb
mov
sub
cmc
ljmp
adc
add
sbb
sti
xchg
xor
adc
test
aad
mov
xor
pusha
dec
sub
jp
fwait
mov
mov
hlt
mov
jle
pop
mov
fs
and
aas
dec
js
pop
arpl
mov
lds
scas
aam
loop
les
sti
and
in
or
cs
je
jb
in
js
add
sbb
mov
mov
lods
mov
lahf
movsl
xor
sahf
cmp
insl
insb
movsl
or
lret
dec
icebp
pop
sbb
bound
xchg
lret
xor
outsl
into
mov
dec
ljmp
fnsave
outsb
add
jo
dec
cmp
sub
mov
mov
pop
cmp
pop
mov
outsb
js
pop
insl
mov
jp
out
add
xchg
sbb
icebp
mov
push
dec
popa
cmp
add
out
xchg
sbbl
push
add
lcall
lea
cmpsb
push
sti
jl
rclb
mov
add
mov
sub
adc
ds
adc
cmp
sub
or
in
inc
test
cmp
fisttps
adc
sti
xchg
or
lcall
fcomps
mov
cmp
lea
mov
sbb
xor
sarl
imul
adc
fistps
clc
shrl
dec
test
test
sbb
jmp
xchg
je
adc
jno
addr16
xor
js
mov
dec
cmpsl
aaa
add
sarb
int
inc
imul
aad
inc
jecxz
jno
je
push
inc
data16
xchg
mov
repz
dec
sub
call
lods
mov
sub
xchg
test
xchg
js
mov
pop
dec
test
in
bound
int3
fnstsw
dec
xchg
leave
pop
mov
pop
pop
cmp
cs
cmp
sbb
pop
mov
cltd
adcb
test
je
sar
outsl
or
test
mov
add
sub
cmp
in
repz
mov
sti
add
sub
mov
movsl
ja
sub
sub
mov
inc
sbb
cld
sbb
push
adc
mov
or
cmove
lds
fsubrs
lea
pop
xchg
in
das
cmpsb
mov
div
xchg
and
push
mov
push
cmpsb
xor
fadds
cmpsl
enter
mov
adc
fs
ss
jnp
push
and
mov
icebp
int3
notl
mov
stc
out
int3
ljmp
inc
jnp
mov
jle
rcrb
jae
out
fcmove
push
sbb
jp
fistl
in
mov
outsb
aam
movsl
shll
adc
sub
mov
es
pop
gs
loop
mov
in
aam
mov
or
push
sub
cli
fwait
dec
jb
push
imull
test
shrl
dec
ret
sbb
push
adc
imul
int
aaa
lods
popf
fldl
pop
divb
mov
pop
leave
pop
in
mov
lahf
pop
ljmp
jle
or
mov
inc
insl
nop
dec
andnps
negb
dec
sbb
dec
lret
pop
sarl
pcmpeqd
add
fcomip
pop
jl
sbb
push
xlat
or
and
repnz
sub
xchg
and
ret
jl
mov
fldcw
jmp
in
and
or
sbb
sub
aad
jg
stos
fstl
mov
xchg
scas
mov
mov
test
mov
sbb
sti
fcoml
btc
and
adc
fldcw
dec
mov
scas
xor
loope
in
scas
insb
and
pop
adc
lcall
push
sub
cmp
in
stos
inc
inc
adc
mov
xchg
lcall
int
int3
fldl
jb
test
add
popf
int
shlb
cmpsb
nop
ljmp
cmp
pop
sub
repz
gs
push
aad
xchg
or
daa
adc
lock
lea
adc
mov
rolb
adc
mov
mov
lcall
adc
ds
popa
jmp
push
fld
loope
ljmp
fs
cmpsl
inc
aam
lods
mov
pop
xor
stos
clc
arpl
insb
lahf
sub
cmp
or
test
or
pushf
sbb
or
jmp
dec
mov
jns
push
lods
sbb
pop
cwtl
out
pop
in
repz
cli
into
push
mov
or
cmpsl
addl
icebp
nop
mov
add
popa
sub
cli
jge
and
or
cmp
adc
sti
add
adc
shll
sub
adc
xor
dec
or
xchg
fwait
lret
or
test
push
pop
adc
jge
add
imul
push
inc
push
aaa
in
stos
pop
pop
sub
cmp
andb
ficompl
aad
mov
lods
dec
aaa
add
adc
shll
clc
test
outsl
pop
dec
xlat
shlb
std
loop
fs
jne
cwtl
insl
inc
aas
cmp
ret
in
rorb
ja
add
push
cld
cmp
xor
out
xchg
sub
or
imul
or
les
cmc
mov
pop
push
jecxz
in
mov
xlat
mov
mov
andb
jecxz
dec
xchg
hlt
stc
xchg
jl
xchg
dec
jae
inc
enter
adc
push
lcall
clc
out
pop
rcrl
pop
mov
pusha
scas
xchg
decl
inc
or
les
arpl
addr16
in
incl
inc
inc
movsl
fisubrs
mov
or
add
dec
pop
xchg
pop
in
adc
and
repz
jp
dec
push
stc
inc
push
gs
mov
sbb
repz
lret
nop
or
jge
push
idiv
dec
xchg
add
negl
stos
enter
and
decb
pop
fsubrs
mov
and
push
in
sbb
jp
cmpsb
cmp
pop
inc
out
in
sub
or
push
jle
inc
or
es
lock
pop
sub
mov
testl
fisubrs
int
fidivrs
aam
js
fwait
je
loopne
hlt
outsl
push
stos
jne
mov
jecxz
std
adc
stos
lahf
aam
add
ret
sbb
jmp
push
fwait
push
cmp
out
cmpsl
sub
xlat
jnp
rcll
and
movsl
mov
lock
rclb
scas
fisttpll
push
sar
popf
cli
mov
hlt
adc
sub
nop
bound
mov
cs
call
fildll
fnstsw
mov
push
and
cmp
push
xor
and
pop
push
cmp
stc
aaa
dec
push
call
xchg
mov
jb
cmp
fs
addl
out
pop
stc
xchg
mov
xchg
adc
arpl
ds
stc
lcall
pop
jb
cmp
loop
pop
shl
sbb
into
adc
pop
aam
and
jl
xor
lret
lcall
add
int3
add
cmpsb
mov
dec
out
out
imul
sarb
xchg
mov
aaa
adc
inc
shrl
test
imul
sbb
cmp
xor
into
xchg
pop
ud0
inc
sub
hlt
in
or
mov
adc
cwtl
ret
mov
int3
mov
ds
jge
xchg
aas
xor
es
fadd
rcll
push
pop
mov
aam
mov
cmp
repnz
xor
and
repz
clc
dec
fwait
inc
lret
xor
or
lea
inc
and
repnz
mov
inc
popf
es
mov
add
test
add
push
decl
in
cmp
scas
mov
inc
out
sbb
dec
not
xchg
dec
loope
cmc
int
adc
ret
dec
ds
stos
leave
popa
mov
mov
xor
add
xor
or
int3
and
push
repz
xor
mov
mov
pop
adc
in
lock
or
sarl
xlat
cmp
int3
addr16
into
sub
pop
cmp
or
imul
xlat
das
xchg
sbb
sub
mov
ss
es
outsb
in
pop
shlb
push
xor
fcmovu
push
inc
mov
push
and
sbb
sbbl
in
movsl
xchg
cmp
outsl
add
imul
xchg
testb
and
cmp
scas
jge
pop
dec
inc
cld
xor
test
popf
jmp
cli
ds
mov
push
sti
ret
mov
std
out
push
js
outsb
or
scas
dec
cmpsl
mov
adc
testl
mov
adc
rorl
lods
fistl
vunpcklps
mov
adc
cld
in
pushf
lcall
push
mov
sub
mov
std
leave
std
pop
mov
push
pop
mov
test
adc
nop
fcmovu
and
pop
lock
jge
sti
loope,pt
mov
repz
stos
sub
pop
push
sub
and
xor
push
push
mov
pusha
add
jae
mov
jbe
lods
mov
hlt
daa
out
cmpsb
mov
xor
cmp
setae
cmc
dec
pop
pop
outsl
scas
jae
out
inc
loopne
push
stos
pop
xor
push
pop
jecxz
sbb
out
pop
mov
and
lret
pop
dec
xor
xchg
leave
lret
daa
scas
xor
out
popf
fwait
push
sub
repnz
lds
sub
loope
andb
inc
jecxz
or
jp
adc
sarl
sub
aas
pop
int3
dec
mov
lcall
fdiv
aam
xor
loop
nop
inc
xor
fdivl
pop
inc
mov
sub
xchg
cltd
mov
outsl
xor
gs
inc
es
dec
adc
lcall
loop
aas
cld
aad
mov
xor
in
sbb
movl
cmp
mov
mov
mov
or
mov
or
inc
iret
or
xchg
and
call
inc
imul
popa
mov
sahf
xorb
jae
frstor
xor
mov
pop
or
orl
mov
ret
or
iret
aam
call
sub
daa
outsl
stc
cmp
cwtl
push
jae
mov
adcl
lahf
or
lret
jns
push
xorb
sub
lods
imul
add
std
push
orb
mov
ficompl
mov
jo
stc
inc
popa
popf
cmp
daa
sbb
inc
or
adc
xchg
or
test
aam
ja
inc
or
jp
insb
or
jp
dec
out
adcb
xor
xchg
push
cld
mov
iret
lahf
pop
jle
outsb
push
sbb
data16
lcall
arpl
sub
sarl
cltd
test
in
push
fld
cmp
dec
dec
push
std
in
xor
mov
dec
lret
rorb
xchg
ja
fldl2t
fdivrl
ja
jbe
mov
ja
lds
mov
or
shrl
aam
jmp
dec
push
shr
sbb
xor
mov
xor
xorl
ja
and
mov
jmp
mov
js
popf
aad
or
and
and
or
pop
stos
dec
cld
mov
arpl
repnz
call
mov
inc
enter
pop
fisttpll
addl
lahf
pusha
dec
lods
mulb
sub
push
pop
lahf
rol
cltd
jae
shll
push
lds
mov
mov
stc
aam
pop
add
fnstsw
out
mov
jo
push
xor
stc
loopne
mov
psllw
push
fistps
loope
sub
cmp
xchg
jp
pushf
push
mov
lret
in
cmp
xor
inc
xchg
ljmp
inc
call
popa
sbb
adc
gs
dec
jnp
lret
lds
in
and
sbb
jmp
mov
roll
or
xchg
add
je
inc
adc
stc
xor
xchg
ret
imul
dec
inc
mov
test
cmp
mov
call
dec
dec
mov
mov
in
sub
lock
imul
movb
je
loop
xchg
sbb
mov
xchg
ljmp
cwtl
enter
fsubr
push
mov
inc
lret
xor
xchg
out
call
adc
insl
dec
pop
scas
shrl
ficomps
xor
daa
dec
xorb
xor
push
cmpsb
sbb
shlb
negl
add
cmpsl
inc
fucomip
mov
mov
fimull
fdivrs
mov
xchg
push
sti
scas
push
ficoml
jbe
mov
leave
mov
int3
pop
cmpsb
mov
sahf
mov
and
lds
pop
insb
xchg
and
push
hlt
push
ljmp
inc
and
mov
add
fmull
lret
icebp
mov
in
mov
rolb
or
cmpsb
mov
push
xchg
call
cmpsl
into
push
and
sahf
imul
int
add
mov
loop
aas
mov
sbb
out
loope
cmp
push
aaa
stos
push
mov
sti
mov
xchg
mov
test
cmpsb
lret
scas
pop
mov
mov
and
cmp
jl
jbe
and
xchg
jnp
inc
movsb
sub
and
push
int3
scas
ror
adc
pop
mov
mov
stc
lahf
arpl
and
add
scas
sbb
jae
or
push
int
mov
push
add
mov
xchg
pop
fnsave
mov
cli
nop
pop
and
push
sbb
stos
lods
mov
mov
addr16
ds
cmp
sahf
cltd
gs
dec
jb
addl
xchg
mov
mov
repnz
ss
inc
sbb
dec
jg
jg
sub
loopne,pn
fs
test
ret
xchg
jecxz
cltd
jg
mov
inc
imul
jb
ficoms
fwait
int3
pushf
mov
sub
clc
faddp
fucomi
nop
cld
dec
aaa
add
aad
jp
or
in
lret
lret
mov
sar
adc
sub
insl
push
dec
xchg
sar
test
xor
fwait
and
or
adcb
push
aad
pop
cmpsb
or
rorb
dec
mov
jge
mov
movsl
rcll
pop
sahf
inc
xchg
out
mov
xor
cwtl
push
dec
push
pop
idivb
cld
pop
ss
push
stos
push
adc
jmp
pop
cli
mov
lea
loope
sbb
dec
lods
test
push
mov
test
ror
fs
sti
in
mov
cltd
or
in
loope
xor
ss
ss
pusha
cmpsl
jle
in
insb
cmp
mov
sbb
cmp
sahf
pop
lods
inc
jae
ss
sub
push
sub
dec
mov
not
insb
and
push
mov
out
arpl
stos
dec
jne
mov
cld
dec
xor
mov
mov
mov
dec
jne
pop
jle
sub
pop
stc
stc
jp
xchg
dec
mov
mov
movsb
nop
shr
out
jns
pushf
mov
mov
mov
mov
aaa
jl
insl
nop
pop
inc
test
adc
lods
push
fldenv
es
mov
pop
xor
outsl
outsb
scas
into
loopne
rolb
push
xlat
or
push
xor
mov
aaa
fadd
or
sti
decb
imul
xchg
lock
mov
arpl
sbb
dec
cld
add
mov
add
and
push
mov
jne
adc
jne
loopne
dec
divb
out
imul
sbb
sub
pop
imul
adcb
fsubrl
pop
cmpsb
xchg
in
rol
loope
out
pusha
inc
fs
inc
or
or
repnz
mov
je
pop
sub
mov
inc
lret
mov
cld
outsb
out
jl
aam
lods
dec
test
mulb
pop
add
pop
add
repnz
dec
push
mov
mov
mov
call
pop
and
shll
dec
repz
mov
in
cmp
inc
std
mov
sub
test
shlb
loop
xchg
fmull
xchg
jbe
pusha
or
xchg
stos
inc
fs
mov
cmp
xlat
clc
mov
and
fsubl
movsl
and
ds
pop
mov
inc
data16
fdivrs
mov
inc
xchg
scas
or
pop
cltd
xor
shll
pop
sbb
lods
mov
sti
sbb
xor
iret
or
clc
loope
pushf
pop
cli
in
gs
and
mov
push
jae
ret
mov
jmp
shrb
mov
ss
popa
push
sub
dec
push
fbstp
repz
xchg
clc
or
pop
ja
add
aas
or
aam
mov
sbb
push
jnp
and
push
popa
push
das
fbld
or
dec
mov
mov
adc
xor
or
imul
icebp
out
jae
in
rcrl
stos
jg
mov
sti
cli
pusha
xchg
mov
cmpsb
dec
lds
xchg
stc
sub
mov
mov
scas
sarl
mov
push
stos
sbb
mov
int
popf
pop
sub
inc
pop
add
popf
add
movsb
fcmovnu
dec
test
dec
cmp
subb
scas
in
pusha
and
cmpsl
lods
mov
cmp
mov
inc
or
xchg
xchg
jb
jg
push
inc
hlt
sbb
in
std
ljmp
push
dec
das
xor
xchg
std
idivb
aam
ret
clc
out
movd
movsl
dec
adc
imul
testl
push
lds
imul
jo
inc
jnp
dec
pop
aaa
fdivl
pop
sti
or
jb
lcall
shl
dec
pushf
enter
out
sahf
xlat
scas
pop
imul
in
leave
jns
hlt
xor
icebp
lret
inc
inc
mov
dec
in
cmp
adc
repnz
pop
mov
addl
addr16
xor
mov
or
imul
push
mov
xlat
pop
xchg
adc
inc
mov
ljmp
jb
inc
mov
push
push
hlt
iret
aad
loope
xor
cltd
lods
lcall
pop
je
adc
sbb
lds
mov
adc
add
fwait
mov
mov
cmpb
enter
movsb
push
pop
lock
inc
scas
cs
pop
mov
jge
js
mov
mov
rcl
jbe
in
jns
and
aam
into
cmpsl
cwtl
lcall
cmovle
xor
pop
data16
jmp
push
cmp
aam
mov
adc
mov
sbb
xor
mov
jo
adc
incb
roll
test
inc
xchg
stos
mov
lret
out
adc
les
jae
movb
in
fdivrs
jne
and
jbe
jno
push
std
push
jmp
dec
xor
push
pop
xchg
sti
dec
push
pop
imul
adc
test
movsb
adc
xchg
shl
xor
push
or
enter
mov
nop
mov
dec
sahf
adc
lea
insl
mov
mov
pushf
sbb
mov
testb
and
enter
outsb
dec
pop
int
ja
and
das
andl
pop
imul
cltd
rorl
int
sbb
rcl
push
inc
ds
xchg
movd
sub
fdivp
fcompl
pop
in
mov
or
mov
lods
adc
mov
lret
sahf
enter
mov
inc
outsl
movsl
mov
xor
incl
loopne
jl
add
lock
cmp
addr16
pop
pop
xchg
imul
add
out
mov
sub
in
enter
push
xor
in
jb
aam
mov
fidivrl
test
dec
insb
jo
pop
or
outsl
mov
dec
jl
adc
enter
push
jb
sbb
mov
mov
ds
and
icebp
dec
lods
int
or
cmp
cli
sub
insl
push
mov
les
mov
jg,pt
outsl
jmp
push
subb
mov
mov
xchg
sqrtps
shr
fwait
out
das
lods
sarl
jns
xor
push
push
inc
pop
inc
push
fdivl
ss
es
jne
sahf
pop
xor
insl
roll
punpckhdq
push
xchg
lret
and
fstpt
push
cmp
or
dec
or
push
add
add
mov
xor
inc
cld
cmpsl
ret
add
sti
pop
pop
adc
outsl
fs
hlt
stos
fwait
movb
in
adc
cmc
loopnew
pop
jne
aas
xor
cmp
into
insl
fwait
std
dec
pop
sbb
mov
push
or
test
push
lcall
jp,pn
sbb
imul
or
adc
cmpsl
dec
xchg
pop
int3
xchg
call
xor
gs
pop
scas
mov
movsb
jns
push
adc
pushf
shlb
into
movsb
inc
out
adc
xchg
stos
out
push
xchg
cs
loopne
sub
sub
fimull
int
fwait
sub
fs
dec
out
adc
dec
stos
sub
mov
cmp
xlat
aas
fcomps
scas
mov
sub
imul
xor
cmp
les
lods
scas
jle
data16
xlat
in
lea
mov
adc
xor
xor
jp
scas
sub
push
addb
push
lcall
pop
ss
loope
out
data16
sub
inc
xchg
sbb
sbb
loop
jle
inc
adc
jae
out
sbbl
cs
dec
push
int3
fisttpll
or
jns
jmp
mov
mov
xor
outsb
xchg
push
fistps
jmp
fwait
mov
test
mul
shlb
dec
stos
in
add
std
sarb
mov
mov
jno
aas
sbb
aad
or
rcl
aam
or
ret
mov
mov
xchg
and
pop
cmc
xchg
shr
icebp
mov
mov
push
imul
inc
lods
add
jns
dec
xor
decb
shr
hlt
fstl
cmc
imul
mov
sub
pop
call
push
mov
xor
sarl
es
adc
imulb
mov
and
cmpb
mov
pop
std
adc
xchg
mov
int
test
xor
ljmp
push
push
aas
dec
data16
jg
enter
mov
lea
scas
or
sub
sub
aaa
jno
pushf
adc
in
cmc
push
aad
jl
lahf
stos
imul
push
es
movsb
ret
stos
movb
bound
test
dec
into
cld
scas
les
pop
xchg
xchg
mov
jge
mov
adc
ss
ja
outsb
xchg
xor
jl
outsb
call
or
mov
test
add
test
xchg
hlt
lcall
nop
and
fadds
cwtl
xor
push
bound
mov
sbb
and
nop
jnp
vpaddw
fs
jle
sti
aad
or
push
or
xor
pop
xchg
jae
push
mov
mov
or
and
jmp
mov
cld
mov
rcr
lea
stos
imul
gs
js
hlt
and
dec
add
jmp
pop
push
inc
int3
loope
push
cld
xchg
xchg
hlt
mov
pop
adc
in
dec
cli
fdiv
adc
sbb
pop
rolb
xchg
fs
adc
repz
in
inc
inc
mov
test
in
imul
loop
xor
test
lds
lock
push
pushf
cmp
cli
insb
mov
cltd
out
das
jge
lahf
jg
and
mov
stos
adcb
cmp
add
std
dec
dec
addr16
stos
je
std
jne
fisubrl
call
cs
jle
gs
cs
gs
dec
jnp
lret
or
cmpsb
ds
int3
xchg
or
shrl
sti
lret
cld
lret
fadd
sti
or
dec
or
fs
xchg
shlb
out
adc
fs
mov
hlt
cmc
in
push
push
insb
or
je
ds
fists
cmc
mov
and
lcall
push
jp
pop
cmp
out
mov
not
or
sbb
cmp
das
push
out
ljmp
jmp
and
nop
je
mov
mov
xchg
push
mov
mov
scas
pop
xlat
fisubs
insb
nop
cmp
cltd
sbb
lcall
or
roll
push
lock
xor
cmp
aaa
lcall
js
aas
jecxz
lods
int3
sahf
mov
jle
fucomp
inc
mov
cmp
pop
push
push
add
scas
inc
insb
ds
adc
scas
xor
mov
adc
jae
pusha
push
daa
mov
out
inc
mov
mov
push
mov
pop
sahf
stos
or
adc
mov
dec
into
pop
ficomps
fs
fs
repz
sbb
pop
or
xlat
out
pop
dec
movsb
inc
cmp
jge
pop
push
jmp
pop
in
movsl
mov
cmpsl
add
xchg
insb
lock
inc
cmp
dec
dec
xchg
and
divb
icebp
cmpsb
cmp
rcll
imul
roll
mov
sub
outsb
arpl
dec
mov
aad
movsl
movsb
jl
movsb
fldcw
movsl
xchg
ja
sbbb
aad
pop
loope
and
std
popa
or
outsb
cmp
cwtl
pop
loop
int3
hlt
and
mov
jnp
mov
out
adc
push
jge
sbb
sub
scas
outsl
mov
adc
repnz
dec
cmpsl
sub
sarb
std
sti
addr16
dec
orl
insl
call
inc
cwtl
jae
sbb
mov
in
push
jg
and
pusha
lods
loope
sbb
sub
xchg
pop
insl
movsl
mov
pop
xchg
inc
jno
sub
add
mov
rclb
dec
fdiv
push
push
jb
lods
lahf
adc
pop
pop
lcall
out
inc
outsb
leave
xchg
dec
cmp
and
js
push
sbb
xchg
add
std
scas
sbb
ret
jge
cmp
adc
lcall
lcall
dec
test
inc
sahf
mov
mov
popa
test
ret
or
stc
push
inc
lds
cmp
and
movsl
ss
push
and
add
cmpsb
mov
popf
fldt
adc
std
sub
stos
clc
dec
cmp
pop
test
mov
cmp
loopne
aam
scas
mov
outsb
cld
orb
sbb
jns
xlat
and
xchg
sbb
loope
xchg
sbb
push
ja
mov
cmp
dec
mov
sarb
mov
push
gs
sub
outsl
fxch
icebp
sbb
sub
mov
sub
or
call
les
xchg
dec
int3
frstor
movsl
mov
stos
or
aam
add
dec
xchg
cltd
imul
mov
or
jns
jp
ds
pop
out
das
xlat
in
xlat
fsts
jnp
pop
stos
inc
xor
dec
pop
dec
jns
hlt
jae
xorb
and
stc
pushf
out
outsb
push
aaa
dec
xorb
inc
fdivr
mov
cmpsb
enter
or
into
fistl
gs
pusha
rcll
scas
or
xchg
mov
ror
pop
mov
jg
push
lock
push
in
out
sbb
es
stos
popa
mov
ud1
test
mov
imul
out
cmp
adc
aas
and
pop
and
pop
cwtl
jbe
mov
or
sbbb
mov
leave
mov
jge
imul
xor
je
in
mov
adc
xor
adc
add
pop
addl
push
fwait
insl
icebp
inc
call
dec
ret
lea
insl
sbb
xchg
jle
cmpsl
aas
push
jae
pop
daa
sahf
in
repz
roll
fsubrs
dec
mov
lods
push
lret
notl
add
movsb
into
test
addr16
and
test
and
arpl
cmpb
mov
lods
jp
sub
out
inc
pop
cmp
pop
repnz
outsl
adc
xchg
ret
pop
pop
xor
mov
pop
xchg
in
movsl
movsl
outsb
sub
mov
mov
test
and
xor
and
sub
mov
mov
test
sub
push
cmp
mov
fs
add
xor
bswap
mov
ja
jl
ret
pop
iret
mov
mov
nop
xlat
xor
ss
lahf
insb
cmp
out
lods
xchg
fldt
daa
mov
add
aas
gs
xor
pop
pop
xchg
pop
xchg
movb
jp
in
inc
mov
mov
shrl
push
les
orb
xor
jne
lods
loope
stc
xchg
add
loope
sbbb
popa
jecxz
xor
in
test
inc
fstpt
lods
in
cmp
sarl
insl
testl
leave
mov
jmp
jne
adc
cmpsl
adc
add
and
jbe
mov
lret
fcoms
push
pop
in
shlb
test
dec
lods
inc
mov
dec
pop
push
shl
or
in
ds
adc
fstps
xchg
ret
push
les
movsb
les
shll
ficoms
mov
cmp
lret
sub
hlt
and
push
inc
insb
out
icebp
or
pusha
push
cmp
aam
andl
xchg
adc
sbb
into
shrl
lds
inc
mul
xchg
insb
xchg
movsl
mov
std
js
add
jo
fnstcw
inc
outsl
out
sub
es
imul
fwait
mov
mov
cmp
test
cwtl
jl
addr16
clc
mov
pop
stos
pop
addb
inc
inc
mov
mov
bound
dec
stc
scas
repnz
xor
xor
sbb
out
or
cmp
mov
mov
jp
cli
inc
mov
ss
add
sub
push
inc
mov
jg
arpl
lcall
sub
push
or
push
or
cmp
mov
aam
std
and
cmp
mov
dec
push
jge
jno
repz
sbb
lret
scas
mov
xor
adc
stc
mov
mov
cltd
and
loop
fs
sub
jno
push
inc
xchg
mov
or
push
jle
dec
xchg
ss
daa
jns
bound
add
xor
sbb
push
notl
stos
cmp
jle
mov
inc
shrb
mov
test
test
sarl
xlat
imul
addr16
xchg
mov
or
aaa
cmc
movsl
loope
adcb
jns
mov
sbb
data16
mov
fmuls
scas
jl
dec
jle
sbb
cmpb
push
mov
mov
jp
xchg
jo
dec
xchg
sbb
arpl
push
mov
orl
mov
xor
fwait
sub
sbb
sbb
insb
mov
bound
ja
jg
aas
cmpsb
dec
and
fimull
pushf
and
out
inc
cltd
inc
stc
sbb
shlb
and
les
movsl
jne
sub
test
lret
lret
jl
sbb
sub
cmp
adc
cmc
and
xor
std
push
in
and
movsb
inc
dec
push
sahf
sbb
ret
hlt
sbb
test
xchg
roll
mov
cs
pop
notb
mov
shrb
scas
data16
out
aaa
ret
adc
hlt
or
and
xor
xor
mov
add
cwtl
mov
sub
sub
mov
cmp
xchg
ljmp
stos
lods
mov
pop
sti
push
imul
pushl
ret
pushf
xchg
xor
pop
ljmp
lea
adc
sub
adc
das
and
test
je
stc
inc
out
arpl
or
fcompl
adc
out
in
jmp
xchg
js
push
fidivrl
mov
jl
or
jo
sbb
mov
mov
fwait
aam
insl
mov
sub
or
mov
pop
roll
add
ret
ljmp
jg
jl
inc
test
mov
xor
mov
out
arpl
adc
insl
aaa
daa
fadds
aas
dec
dec
pop
outsl
in
adc
cmc
cmp
clc
test
or
pop
adc
cmp
out
mov
inc
mov
push
mov
stos
fucompp
addb
add
lret
lods
addr16
lcall
inc
add
leave
pop
pop
push
fcoms
jnp
cmp
xchg
push
sbb
in
popa
popf
and
paddq
jae
cmp
sbb
inc
in
cld
push
and
test
aaa
add
sarl
pop
add
ret
dec
adc
aam
sbb
jbe
xor
ds
mov
mov
jmp
fadd
test
add
les
mov
aas
add
inc
ss
inc
mov
scas
mov
sahf
push
sbb
test
sub
std
jb
in
add
or
enter
cmp
ret
or
fiaddl
push
mov
xlat
pop
gs
loop
stos
lret
test
inc
adcb
loop
gs
pop
rcrb
mov
xchg
call
cmp
stc
adc
xor
repz
and
cmp
xor
nop
xchg
lods
or
fisubrs
lret
fistpll
mov
adc
mov
repnz
mov
xchg
popf
inc
addl
fistpll
push
jp
xchg
test
push
scas
dec
push
cltd
gs
out
push
jg
mov
jmp
xor
xchg
faddl
loope
dec
mov
imul
cltd
inc
cltd
idivl
insl
sbb
iret
push
mov
ret
lods
sub
jb
xchg
inc
ljmp
adc
arpl
mov
push
test
xor
mov
stos
arpl
dec
push
pop
test
xor
sbb
inc
fsubr
cmp
jg
inc
das
cwtl
test
je
repnz
ljmp
push
mov
cmpb
cli
inc
inc
sub
rorl
pop
inc
add
in
es
mov
leave
xchg
mov
fistpl
sar
jge
bound
sub
push
sbb
ret
lock
mov
mov
dec
shlb
mov
or
aas
lcall
pop
mov
xor
out
fnstsw
neg
icebp
rolb
test
inc
roll
xchg
int
sbb
pop
sbb
inc
cmp
pop
pop
cmpl
fcompl
push
adcb
sbb
cmp
xor
sub
sbb
test
sbb
mov
add
shrb
jmp
out
adc
pop
cmp
mov
and
dec
lock
stc
sub
test
xchg
arpl
mov
decl
imul
je
sub
mov
xchg
jmp
mov
sbb
pop
inc
adc
sbb
hlt
and
sar
fcompl
jmp
icebp
sub
leave
shrl
xor
repnz
jl
sti
loop
lret
insl
loopne
fadd
and
xchg
lret
pop
add
les
pop
ret
lods
xor
or
bound
cld
mov
bound
repz
in
push
out
or
clc
stc
out
xor
pop
jnp
js
add
cltd
xlat
dec
jecxz
sub
nop
add
xchg
sbb
or
jb
cmp
movsl
roll
out
mov
icebp
mov
lcall
jns
test
sbb
or
in
dec
test
push
cltd
mov
adc
popf
cmpb
aad
test
cmpl
mov
xchg
jle
jmp
add
push
jne
xchg
popf
fisttpll
clc
add
fidivs
xchg
out
mov
pop
faddl
or
adc
dec
int3
mov
sbbb
vpmacswd
adc
sub
int3
sub
pop
and
jle
outsb
pop
cld
loop
incl
das
mov
sub
je
jae
mov
pop
inc
xchg
ljmp
lret
stc
adc
xchg
fs
cmp
cwtl
jl
loope
call
push
cwtl
testb
add
test
mov
sbb
lods
dec
cmpsb
test
je
pop
dec
fs
aad
pop
fucomip
pushf
and
xchg
jp
out
movsl
xor
popa
inc
sbb
cmpsl
mov
push
pop
pop
xor
int3
pop
cli
lahf
mov
ds
pusha
jns
push
add
sbb
push
cmp
dec
out
ret
dec
idivb
cmc
test
adc
lds
pop
cmp
xchg
aam
dec
push
dec
movsb
cmp
sarb
dec
and
pop
add
adc
push
xchg
out
or
xor
mov
dec
imul
pop
addr16
subl
leave
and
movsb
jbe
insb
dec
sub
xchg
xchg
scas
cmpsb
mov
negl
adc
mov
xchg
dec
xchg
bswap
dec
mov
cmc
cmp
test
stc
int
pop
popf
adc
jno
lock
xchg
adc
shll
jge
push
mov
cmp
pop
daa
call
pop
and
xchg
xor
pop
fdivr
into
xor
dec
loop
pop
mov
mov
fldcw
dec
adc
fwait
mov
or
xchg
mov
cwtl
cwtl
test
xchg
push
cmpsb
mov
cmp
or
add
cld
dec
andb
inc
add
fcoms
mov
sub
sub
sbb
dec
mov
mov
push
loope
aam
repz
cld
icebp
mov
jnp
cmp
and
push
sub
movsl
cli
mov
sub
lea
aad
idivb
xor
push
cmpsb
in
fimull
mov
clc
jp
pop
stos
cld
loopne
outsb
imul
outsb
mov
xchg
js
push
xchg
lea
mov
shl
or
lds
mov
test
daa
mov
cltd
data16
mov
shlb
sub
jmp
xor
das
lret
ja
jge
fsub
inc
xchg
mov
stos
mov
mov
leave
jnp
xlat
nop
mov
sbb
jbe
dec
loope
stos
fcomip
adc
out
cmp
loope
in
pop
gs
adc
or
ss
out
ss
dec
or
fistpl
push
in
or
movb
sbb
test
outsl
ss
bndstx
pop
jae
cmp
push
mov
push
jg
test
scas
cmpsl
in
out
lds
daa
or
jecxz
clc
subb
dec
adc
aaa
and
icebp
in
testl
sti
inc
andl
mov
js
mov
lret
insl
andb
xchg
and
xlat
out
mov
cmc
xchg
test
pop
mov
mov
aaa
lods
negb
jne
scas
mov
bound
sbb
xchg
mov
xchg
adc
in
xor
ljmp
sar
int
movsl
pop
ja
dec
mov
test
jg
out
test
lds
ror
scas
jecxz
cli
icebp
add
inc
repz
add
inc
hlt
inc
mov
mov
dec
cmpsl
movsl
sub
hlt
jno
and
decb
push
mov
mov
fisttpll
in
mov
xor
inc
dec
or
sti
xchg
insl
inc
pop
scas
dec
and
lret
in
adc
into
jg
pop
xchg
mov
inc
push
movsb
pushf
fistl
and
mov
and
imul
inc
push
outsl
cld
dec
xor
dec
clc
insb
inc
bound
stc
adc
insl
movsb
icebp
or
aam
xchg
push
xor
adc
scas
dec
inc
xchg
out
mov
mov
jmp
mov
mov
dec
add
jb
in
sti
lret
lret
push
mov
and
sub
ret
shrl
sbb
cltd
pushf
push
enter
outsb
or
jb
imul
rclb
or
mov
sahf
mov
cmp
fcmove
hlt
mov
roll
ss
enter
jo
xchg
test
xchg
jge
leave
pop
sbb
dec
xor
in
js
out
mov
pop
dec
push
test
push
dec
mov
test
jbe
xor
inc
mov
mov
in
and
int
mov
xchg
dec
inc
lds
sbb
fcompl
mov
add
stos
gs
add
idivb
dec
sub
cmp
cmp
fisubrl
shr
mov
jb
xlat
cmp
adcb
aas
mov
inc
into
jno
lret
inc
pop
xor
rcl
lods
xor
push
push
jle
enter
sbb
inc
in
std
push
pop
sti
cmp
loopne
movsl
call
mov
inc
shl
cmc
imul
inc
icebp
stos
xchg
fldt
fstpl
pop
sub
mov
or
cli
sub
movb
test
daa
inc
incb
push
clc
aas
ss
sub
or
dec
mov
sub
inc
jb
jp
ss
enter
imul
dec
add
adc
cmp
inc
or
stc
xor
sarl
jo
adc
inc
add
dec
in
popa
aad
push
sub
test
test
and
xchg
add
inc
int
out
test
add
movsl
sbb
in
les
sarl
loop
jbe
and
vpsllq
imul
push
inc
in
push
daa
sbb
mov
mov
fisubl
mov
xor
or
pop
xchg
jmp
sahf
or
ret
hlt
std
adc
adcl
shrl
pop
sub
scas
fidivrs
mov
xchg
xor
jecxz
sbb
or
or
cwtl
xor
jne
sub
or
xchg
clc
xchg
nop
call
out
das
dec
outsl
sub
outsl
or
xchg
leave
cld
adc
add
mov
lods
and
rcrb
add
push
sahf
pop
pop
ja
iret
jnp
xchg
aam
mov
mov
sbb
pop
iret
hlt
sbb
or
adc
stc
jae
jp
mov
cmp
adc
out
xor
jno
mov
nop
fs
ja
hlt
mov
xor
hlt
mov
fists
inc
xchg
and
cld
fs
mov
je
outsl
mov
push
add
and
sbb
mov
sbb
int
adc
mov
inc
in
jl
mov
mov
pop
sti
call
or
ret
sbb
mov
cmp
inc
jg
loope
xor
repnz
pop
xlat
lret
push
inc
lret
lret
rorb
rcrb
lock
mov
test
sub
scas
adcb
mov
jp
push
jp
jno
lret
adc
aaa
jb
fcomps
jle
add
shrl
js
iret
and
js
dec
and
mov
mov
jae
fs
dec
pop
outsb
orl
lea
pusha
push
sbb
cwtl
jne
iret
lds
add
test
ds
aad
mov
out
inc
movsb
in
xor
inc
xor
fsts
and
add
mov
call
cld
pusha
pushf
mov
mov
mov
call
cmp
mov
dec
inc
mov
orb
cmp
in
lods
and
insl
not
inc
aam
pop
in
xor
pop
push
mov
mulb
xchg
sahf
scas
xor
ljmp
mov
mov
jmp
jb
fwait
ret
andl
in
mov
ficoms
inc
cmp
sbb
push
pop
jae
rcll
hlt
jmp
push
test
and
lods
test
or
mov
jns
pushf
dec
mov
xchg
jo
fdivrp
jnp
stos
movsb
xcrypt-ofb
cmpsl
test
outsl
dec
into
inc
lea
push
imul
in
jo
xchg
shll
les
loop
shr
imul
popf
pop
repz
int
jecxz,pn
cld
std
lds
ret
bound
pop
xchg
lods
out
out
jl
push
cs
mov
sub
into
mov
dec
dec
pop
and
mov
sbb
xchg
ret
mov
jns
sub
push
pop
pusha
into
mov
dec
das
es
decl
mov
and
ja
jns
repz
in
stos
pop
dec
or
test
aas
mov
jbe
mov
or
test
push
out
ret
sbb
jno
loop
aas
daa
push
ja
add
jbe
jl
push
repz
shl
test
xchg
mov
push
sub
xchg
addb
outsb
test
adc
adcl
mov
jae
mov
cmp
sub
adc
pop
and
loope
cli
add
sub
mov
lcall
xor
sub
fmul
inc
aam
xor
sub
pop
mov
xchg
ret
out
jmp
sbbl
inc
out
xor
adc
xor
fcom
popa
addb
fnsave
dec
addl
push
or
adc
insl
subl
int
xchg
mov
add
cs
jns
or
popf
or
sub
sbb
out
out
sbb
iret
ljmp
mov
adc
aam
adc
sti
or
or
xor
imul
enter
mov
lods
adc
cwtl
pop
dec
sarb
jae
pop
pushf
or
inc
push
mov
xchg
push
mov
test
pminsw
cld
rcrl
pop
mov
arpl
push
leave
cmp
pop
jbe
push
nop
lds
jb
xor
std
outsl
call
pop
data16
xor
push
scas
in
push
pop
jb
pusha
ss
pop
xchg
inc
call
rorl
mov
mov
cwtl
mov
stos
cmc
movsb
adc
sbb
adc
or
iret
and
aas
dec
cmp
cmpl
xchg
mov
xchg
cmp
shrl
cmp
jp
jecxz
pop
loopne
es
adc
xchg
pop
gs
fs
pop
sub
int
cli
lods
test
and
mov
ret
aam
mov
cmp
mul
xchg
push
fisubrs
and
xchg
and
imul
pop
pop
xchg
pop
aaa
adc
test
movsb
inc
daa
shll
mov
cmp
mov
stos
bound
xchg
dec
popf
stc
sub
lods
js
cmpsb
mov
sbb
sti
pop
notl
pop
mov
adcb
arpl
cmpsl
xlat
lret
push
lea
cwtl
cmp
fstps
nop
insl
gs
xchg
dec
mov
jmp
sbb
scas
add
dec
int
push
rcrl
rcrb
bound
loop
push
ret
aas
push
add
mov
push
nop
divb
mov
xor
rcrb
and
cmpsb
aam
sbb
push
in
ds
int3
pop
imul
push
inc
cmpl
lea
addr16
pop
rclb
sub
xchg
out
cld
pusha
icebp
aas
inc
sar
int3
or
push
xor
leave
inc
mov
mov
and
or
dec
dec
mulb
aad
sub
fidivrs
sbb
or
sbb
inc
mov
test
and
in
cwtl
jle
sahf
mov
push
orb
js
xor
or
push
and
adcw
mov
inc
xchg
mov
test
fisttpll
pop
sti
inc
pop
stos
pusha
adc
xor
xor
inc
add
idiv
in
pslld
jne
frstor
push
leave
push
out
movsb
inc
hlt
jo
inc
sti
loop
pop
ret
bound
pushf
sahf
add
in
push
fcoms
movsb
dec
das
fcoml
sub
adc
cltd
add
push
xchg
cmp
inc
gs
cmp
pop
pop
sbb
mov
test
jno
imul
nop
shll
add
scas
jecxz
rcll
ret
cltd
add
dec
stos
cmp
xchg
xchg
push
call
lcall
xchg
push
mov
jp
cli
and
mov
sbb
lods
jl
push
cld
popf
mov
sub
rcrb
icebp
lret
cs
movsb
arpl
cmp
sbb
and
dec
lods
out
into
repnz
dec
cmc
out
int
out
inc
xor
push
xchg
subl
aam
jae
hlt
add
outsb
dec
in
mov
clc
dec
lret
add
jbe
and
adc
icebp
cmpsb
jnp
hlt
adc
sbb
popf
push
mov
mov
xchg
shlb
sub
pop
pop
jnp
movsl
pushl
and
ss
roll
push
jae
mov
pop
pop
popa
and
add
pop
add
push
call
lahf
add
mov
dec
lret
dec
aad
mov
inc
loope
and
and
and
jno
sbb
mov
lea
int
repz
imul
jge
ss
mov
sbb
mov
mov
filds
and
movsb
xor
jne
sub
mov
rolb
icebp
lds
xchg
or
dec
mov
fwait
push
dec
insl
das
cmp
push
cmp
pop
fs
add
outsb
lret
out
jbe
aad
mov
icebp
cmpsb
pop
add
pusha
or
cmpsb
pop
mov
jle
xchg
jo
cmc
stc
jb
mov
loope
pop
lock
js,pt
or
push
mov
mov
mov
movsl
push
mov
mov
cmc
mov
icebp
idivl
jns
cmp
int3
sbb
and
lcall
sbb
pop
roll
cmp
sub
and
jne
sbb
jecxz
push
jl
push
xchg
or
inc
pop
push
popa
xchg
dec
test
pop
pop
ja
mov
int3
aaa
xlat
fiaddl
rolb
cmp
shl
sbb
mov
pop
mov
mulb
cwtl
stc
xchg
cld
jae
mov
lds
nop
push
gs
sqrtps
int
cmp
sub
pop
loope
mov
call
adc
lock
sub
sub
xlat
scas
mov
es
xchg
or
cmpsl
lcall
pop
mov
fdivl
ljmp
inc
cmp
stc
aam
cmpb
mov
inc
lcall
rorl
and
and
in
push
sbb
mov
mov
pushf
jnp
mov
xchg
sbbl
jecxz
das
and
cmpsb
xchg
lods
jb
xor
jns
repnz
push
popf
xchg
pop
dec
inc
fs
addr16
setl
inc
gs
nop
mov
dec
fisttpll
and
or
fmuls
jnp
dec
inc
test
push
push
shlb
xorb
sub
sbb
cltd
insb
xchg
push
popa
jns
push
xor
into
sbb
inc
imul
lods
xlat
aaa
icebp
outsb
out
mov
loope
pushf
mov
inc
push
jecxz
je
test
int3
mov
cmp
sbb
leave
es
popl
add
imul
sub
pop
je
push
movsl
outsb
stos
mov
xor
push
push
jbe
cld
dec
and
or
fsubrl
cltd
or
add
or
xchg
loop
jge
fldenv
cmpsb
hlt
movsl
outsb
sbb
js
push
mov
xchg
ficoml
or
lods
pop
int
jbe
icebp
cmp
clc
pop
lock
pop
aad
lds
out
cmp
psubw
pop
pop
fcmovb
inc
das
bound
and
add
xchg
adc
rorb
ss
inc
ljmp
mov
lret
jo
std
enter
inc
lods
push
add
repz
mov
xchg
mov
pop
aam
in
or
push
cmp
push
rep
jb
lods
jl
lret
in
imul
lods
lret
ljmp
pop
popf
jae
imul
sub
ljmp
daa
cs
int3
lds
and
inc
cmp
pop
and
push
adc
jp
dec
pop
pop
add
into
pop
adc
xor
inc
mov
in
jno
pushf
or
pop
sbb
enter
pop
test
or
js
pop
cltd
mov
fiaddl
sub
jbe
test
shlb
ss
nop
mov
cmp
xchg
mov
cld
cmpsl
clc
jmp
mov
adc
pop
or
mov
test
cli
jae
mov
mov
cmp
clc
sbb
push
test
imul
jge
mov
mov
lcall
jns
cmp
jns
and
lds
fnstsw
pop
add
rclb
enter
xchg
arpl
dec
mov
sbb
jns
adcb
inc
mov
sbb
xlat
xchg
push
movsl
dec
mov
fwait
mov
jno
sub
pop
mov
movsb
rorl
stos
incl
jge
test
fwait
mov
fsubr
push
and
xchg
cwtl
test
aaa
loope
je
adc
cwtl
addr16
fiaddl
fisttpl
stos
push
xor
cwtl
fs
and
xchg
frstor
notb
jmp
mov
adc
mov
pusha
stos
cwtl
jb
xchg
std
cmp
pop
orb
cmpsl
mov
out
aam
in
pop
cmp
enter
mov
xchg
pop
jo
popf
sahf
ss
aas
nop
aam
lock
roll
inc
sbb
ret
cltd
mov
add
mov
jmp
adc
xor
inc
fyl2xp1
test
pop
cmpsl
lods
jo
sbb
addr16
daa
ss
cmp
mov
or
test
in
add
push
xchg
xor
dec
adc
cmp
cmp
hlt
lcall
mov
in
pop
cmp
das
jecxz
jle
mov
jecxz
add
das
and
cmp
sarl
fcmovnu
add
push
ljmp
or
fstpl
mov
mov
mov
pop
jmp
add
xchg
xchg
pop
jae
imul
lods
shlb
sub
out
out
lods
fdivrs
push
imul
dec
jmp
jle
scas
pushf
mov
orl
xor
push
cmp
mov
xchg
mov
push
cs
ljmp
lret
mov
xor
popa
in
hlt
js
aad
push
or
dec
dec
and
addb
jne
dec
jae
and
mov
adc
xchg
push
out
js
mov
lods
out
xor
call
jno
adc
add
in
es
outsl
negl
repz
fdivr
fildl
mov
ret
dec
inc
mov
mov
mov
rclb
pop
add
outsb
test
xchg
sti
pusha
cmp
pop
mov
and
ja
ret
inc
test
cli
jno
jecxz
add
loopne
clc
sub
jle
shll
loope
inc
and
push
sbb
fadd
jno
xor
mov
sub
and
pop
aas
cmp
jge
xchg
les
jmp
mov
cli
shr
rcrb
jnp
dec
sub
cmp
add
mov
add
pop
in
lea
fidivs
jl
and
imul
enter
push
ficompl
pop
xor
aad
mov
push
pop
movsl
fidivs
sbb
shrl
and
aaa
cmp
push
mov
int
xor
xchg
dec
pop
add
iret
movsl
cwtl
in
stc
outsb
aas
add
lock
mov
in
add
dec
xcrypt-ctr
cmpsl
push
cmp
adc
pop
cmc
and
mov
sub
push
arpl
andl
in
jae
add
sbb
jge
sub
das
stos
in
not
mov
repz
cwtl
aam
and
or
push
scas
xchg
mov
dec
aad
or
lods
lret
imul
mov
inc
int3
das
inc
cmp
add
cmc
mov
sub
in
mov
mov
lods
cmp
push
mov
mov
int
adc
movsl
cli
xchg
arpl
sub
fwait
leave
inc
xor
xor
fcomps
add
mov
mov
xor
mov
int3
inc
mov
adc
rorl
cltd
mov
sbb
xchg
mul
cmp
add
inc
cmp
js
je
aam
jo
add
in
xchg
test
nop
hlt
sbb
clc
pop
stos
mov
mov
sub
out
loop
subl
push
pop
mov
push
xor
mov
cmpsb
cmpsl
repz
jmp
movsl
daa
mov
push
or
sub
not
daa
mov
push
notl
mov
aad
inc
cli
pop
inc
lods
aaa
inc
jp
loop
dec
movsl
arpl
rolb
test
in
loopne
js
test
pop
cmc
sahf
into
in
pop
ds
adc
aad
mov
pop
fwait
loope
pop
lcall
cmp
jecxz
fwait
sarl
outsl
jp
mov
mov
mov
push
inc
test
jb
lret
pop
and
rolb
mov
mov
adcb
test
imul
mov
inc
jg
mov
push
ds
inc
mov
adc
negl
addr16
xchg
add
lea
mov
fldl2t
sub
xor
sbb
sbb
loopne
rcll
ss
stc
std
popf
cmc
js
pop
cmp
jae
ret
pop
xchg
push
adc
imul
lods
pop
sahf
add
add
sub
cltd
test
jne
divl
fsts
xor
lret
cmp
mov
out
dec
lret
cld
test
es
jae
inc
pushf
ret
pop
mov
xchg
jns
mov
popl
adc
dec
mov
or
push
mov
inc
iret
aad
xor
and
pusha
repnz
out
mov
sbb
inc
repz
lcallw
popa
inc
notb
loope
pusha
outsb
sbbb
outsb
call
repz
test
push
in
xchg
push
inc
test
sub
lods
or
lock
pop
subl
xlat
add
je
sub
lods
xchg
fdivr
les
sbb
push
stos
in
mov
xchg
push
movsb
xchg
sbb
fsubs
xchg
roll
or
insb
cmc
adc
adc
jmp
jbe
sub
test
aam
ud2
sti
lahf
jno
inc
data16
adc
mov
test
adc
inc
dec
fnstenv
mov
lock
adc
rcll
push
push
iret
xchg
outsb
dec
push
dec
fisubrl
or
pop
sbb
jbe
mov
push
aas
or
into
in
add
subb
movsl
repnz
adcl
xor
arpl
mov
scas
ror
dec
push
mov
jo
arpl
adc
in
dec
inc
xchg
int
mov
push
es
jno
mov
push
in
xchg
sbb
lds
xchg
scas
xor
mov
dec
cli
stos
xchg
fistpll
gs
mov
dec
jecxz
jp
or
mov
mov
xchg
rorb
movsb
pop
in
fdivrs
les
fisubs
mov
pop
mov
lods
rcrl
jns
xchg
xchg
clc
xchg
outsb
pop
rolb
jb
inc
lods
add
loopne
xor
mov
mov
ljmp
stc
push
dec
loope
pusha
dec
pop
sbbl
pusha
push
stos
out
addr16
add
mov
or
mov
in
rcr
jbe
lods
mov
push
mov
dec
mov
pop
addr16
push
nop
divl
scas
ljmp
test
ror
ja
mov
mov
stos
stc
mov
movsl
imul
mov
sbb
sahf
pushf
leave
dec
xchg
lock
sub
addr16
sub
movsl
cld
sub
stos
xchg
das
mov
out
and
push
push
ds
xor
mov
sbb
jbe
in
enter
xchg
and
and
xor
push
xlat
push
jle
adc
pop
push
pop
fbld
sarb
les
jl
jle
daa
ret
xor
pop
jp
xchg
xchg
nop
push
ret
cld
mov
push
test
push
sti
mov
push
push
mov
iret
push
mov
mov
jne
sti
jae
imul
outsb
xor
cmpw
jae
cmp
arpl
xchg
fcompp
repz
and
xchg
shl
testl
ret
jae
or
inc
cmpsb
jmp
and
dec
jecxz
jg
mov
push
clc
cmp
sbb
and
iret
and
fcompl
ja
into
mov
icebp
stos
test
mov
xor
and
outsl
mov
test
or
jl
and
push
mov
pop
xchg
cmpsb
mov
adc
jns
cs
xchg
stos
repnz
ljmp
xor
popa
and
or
or
scas
xor
rcrl
fcmovne
pop
xchg
jp
hlt
mov
jae
lea
cmp
xor
push
xorl
and
icebp
push
mov
sub
out
or
fsubrl
inc
xor
jae
mov
adc
out
in
repz
and
inc
add
inc
sbb
inc
les
xor
cld
pop
cld
mov
stos
adc
pop
push
mov
jbe
aad
out
pop
movsb
mov
ja
and
xor
fsincos
sbb
xor
or
jmp
imul
mov
imul
add
sub
js
dec
xchg
jecxz
pusha
push
bound
dec
cs
popa
stc
pop
cmp
shrb
add
jmp
out
add
bound
push
je
and
cltd
cmc
mov
sub
cltd
lret
cld
int3
cs
jnp
xchg
in
mov
fcompl
jne
add
inc
gs
mov
ja
ja
in
pusha
lcall
add
fdivrp
hlt
dec
imul
shll
pop
mov
in
jbe
sbb
sahf
dec
fldl
add
pushf
push
or
or
inc
mov
out
mov
loopne
lret
cltd
sbb
rolb
inc
cmp
push
mov
scas
rorb
sbb
ljmp
jb
dec
push
test
push
xor
xlat
and
sbb
out
and
fdivs
xor
lahf
xchg
fwait
xchg
dec
fldcw
insl
insl
subb
stos
dec
push
sbb
jb
mov
jno
pop
sub
mov
mov
and
inc
in
pop
std
ret
in
out
mov
or
dec
adc
fcoml
sbb
mov
out
jl
mov
xlat
xor
nop
jno
mov
enter
mov
xor
add
bound
sub
or
lea
cmpsb
test
cwtl
mov
stc
dec
cld
lret
sbb
mov
int3
mov
jp
das
out
into
loope
out
into
add
inc
mov
into
pop
cmp
shrb
in
not
ds
push
cmp
push
xchg
rcll
xor
hlt
lret
sbb
sbb
xor
out
inc
cmp
fisttps
adc
xchg
xchg
xlat
stos
xor
fidivrl
push
or
and
xchg
sahf
mov
test
mov
out
push
xchg
sub
and
int
adc
add
ss
out
mov
lcall
dec
push
inc
jp
mov
xor
cs
test
dec
jne
js
outsb
out
out
iret
pusha
jecxz
pop
xchg
mov
test
sub
enter
push
mov
push
scas
in
add
in
fidivrs
mov
test
mov
pop
loopne
insl
dec
and
fiadds
int3
mov
push
dec
dec
sbb
insl
inc
pop
xchg
or
imul
mov
shll
or
lea
out
sti
js
xchg
mov
insb
ror
mov
pop
lods
insl
arpl
inc
int
add
test
mov
jg
push
loop
adc
mov
add
fidivl
fwait
dec
insb
je
and
test
xchg
cld
fstps
pop
jb
mov
test
incb
and
pop
shr
sub
ja
push
pushf
mov
rcr
xor
out
out
sub
addr16
lods
in
jmp
mov
dec
loope
and
das
or
dec
jns
pop
dec
push
and
sti
mov
andl
into
out
xchg
fidivs
cmp
sbb
iret
dec
fwait
sbbl
into
movsb
adc
sti
cmpsb
adc
xor
in
xchg
sub
sbb
xor
add
fstps
sbb
mov
pop
pusha
pop
ja
aad
dec
add
sub
adc
fidivrl
scas
add
out
push
xor
movsb
push
mov
mov
imul
into
jmp
or
aas
add
mov
cltd
scas
push
xor
pop
int
xchg
mov
jbe
cmp
push
dec
pop
shl
or
push
mov
out
xchg
addr16
cmp
gs
imul
inc
and
arpl
sar
xchg
lcall
adc
dec
xor
mov
lods
outsb
jmp
mov
test
outsl
push
movsbl
stc
faddp
movsb
add
dec
repnz
ds
jmp
in
int
push
push
cmp
jecxz
inc
sbb
adc
ds
sub
mov
aad
and
xchg
sub
fildll
jb
mov
cmp
js
dec
dec
inc
push
pop
call
subl
adc
lods
in
cmpb
adcb
dec
mov
push
cmp
imul
gs
fwait
mov
into
rolb
adc
push
test
cli
idivl
jae
adc
pop
out
mov
jp
adc
add
jno
shrl
cmp
or
pop
nop
and
mov
push
pop
mov
push
jecxz
sub
fidivrl
cmp
insl
sbb
jmp
pusha
in
push
jae
stos
sub
push
mov
test
test
movsl
lcall
mov
jmp
or
testl
flds
dec
stc
aad
test
inc
sarl
xchg
sub
jl
clc
cmpsb
sbb
mov
or
test
les
xchg
rcrb
pop
mov
subb
cmpsb
pop
repnz
xchg
clc
dec
adc
loopne
xor
adc
stc
or
xchg
stos
dec
cmp
test
xchg
adc
leave
xchg
mov
daa
push
mov
cli
xchg
mov
movsb
push
mov
mov
or
dec
lcall
pop
mov
mov
test
aas
arpl
push
es
js
xlat
loopw
fcom
stos
mov
mov
dec
xor
cmp
mov
inc
or
jb
fdiv
or
xchg
lods
rcrb
lock
inc
arpl
test
rcrb
jmp
sbb
push
pop
mov
pop
sub
cmp
adc
mov
lret
dec
jmp
adc
shll
shrl
sbb
rolb
popfw
push
mov
sbb
fwait
movsl
iret
ror
stos
imul
outsb
jl
mov
pop
pop
mov
mov
inc
leave
pop
mov
loop
jb
mov
adc
inc
pop
jne
pop
xchg
sbb
shr
or
pushf
xchg
mov
mov
es
imul
push
mov
imul
mov
push
push
push
addr16
ljmp
ret
xchg
xchg
sbb
jbe
mov
mov
test
jbe
adc
mov
sarl
imul
adc
jnp
cmp
sti
xor
adc
sbb
sub
pop
sbb
repz
ss
adc
out
pushf
or
je
push
jnp
shlb
loopne
add
inc
xlat
stos
adc
adc
imull
sbb
stc
aad
in
adc
jns
cmpsl
mov
mov
mov
push
out
add
shrb
lret
push
push
imul
leave
movsl
test
out
jns
pop
or
push
rorb
cmpsb
pusha
mov
push
cltd
xor
loop
lds
sahf
add
sbb
stc
daa
xchg
shrl
xchg
out
lret
jno
lea
es
adc
sub
pop
jle
dec
cmpsl
stc
stos
mulb
into
pop
addl
dec
int3
lods
jne
xor
push
xchg
add
movsl
dec
pop
js,pn
movsb
pushf
arpl
sub
xchg
outsl
pop
mov
add
movsl
js
lret
add
test
sbb
clc
mov
mov
decl
sbb
lret
jecxz
and
mov
adc
das
lock
and
sahf
sbb
movsl
pop
nop
daa
xor
roll
in
push
addl
aas
dec
pop
das
dec
fmul
test
or
loope
pop
mov
or
ret
push
jo
insl
ljmp
push
in
iret
int3
jl
popa
inc
addb
lods
cmc
inc
mov
dec
or
jle
ret
push
mov
mov
rcrl
mov
cmp
shll
sbb
in
or
sbb
pop
sbb
pop
mov
pop
inc
or
xor
and
cmpsb
cmp
in
or
sbb
into
popa
mov
icebp
ss
mov
cmpsb
mov
test
pop
mov
dec
scas
jne
ret
cmp
or
adc
xchg
testb
and
sub
std
sbb
mov
cmp
imulb
test
xrelease
test
popf
mov
ss
dec
inc
int
ficoms
xchg
sub
sub
loop
jne
pop
iret
clc
xchg
push
sub
loopne
sub
mov
xchg
jo
or
cs
pop
popf
mov
mov
fstl
subl
or
popf
xchg
cmp
jmp
push
adc
jge
daa
mov
mov
sbb
jmp
jg
sbb
xchg
shl
pushf
negl
dec
pop
pop
addr16
out
push
mov
mov
jae
pusha
pop
scas
push
cmp
hlt
push
pop
sub
daa
rcll
mov
outsl
push
mov
or
or
xchg
push
out
pushf
in
je
outsl
hlt
testb
jl
jecxz
daa
insb
iret
inc
xorb
nop
fidivl
pusha
clc
adc
add
mov
stc
xor
movsb
idivl
sbb
js
mov
sbb
jmp
xor
sub
lds
adc
jno
in
push
insl
or
inc
pop
push
pop
subb
mov
jbe
mov
jb
cli
movsb
cmp
jle
lds
outsb
aad
sub
dec
push
movsb
cmp
inc
fs
fstpt
add
mov
jg
inc
adc
aam
in
mov
in
push
cmc
pop
insl
jmp
jns
push
sahf
in
lods
testb
add
sbb
cmp
jg
sub
gs
xor
add
inc
sub
in
push
test
insl
gs
push
fs
inc
add
and
pop
sub
jo
mov
inc
xor
sbb
test
enter
pop
in
das
add
and
xor
push
nop
adc
cmp
cmpsb
or
mov
push
mov
mov
cmp
jp
jmp
cmp
mov
nop
mov
dec
ret
aam
or
jp
pusha
jmp
mov
cmpb
xor
cmp
lock
or
setnp
aaa
lock
push
push
xchg
ja
or
pop
push
call
mov
in
fwait
dec
nop
movsl
push
mov
loope
push
aaa
xor
stos
adc
arpl
push
in
pop
test
cmp
push
test
and
in
mulb
call
lea
aas
mov
cli
ss
or
sbb
lret
leave
repz
outsb
push
push
lea
fsubs
cmp
pop
mov
pop
xchg
xchg
add
jbe
push
hlt
xchg
outsb
shlb
cmpsl
pushl
push
jp
mov
shlb
adc
idivl
dec
dec
push
in
sbb
inc
insl
test
movsb
or
out
xor
loopne
push
push
mov
cmpsb
aam
faddp
leave
jge
dec
imul
xchg
xor
mov
cltd
clc
dec
mov
xor
leave
push
mov
in
pop
adc
push
dec
cwtl
hlt
adc
mov
leave
jge
popa
aad
insl
lds
fdivl
mov
leave
inc
fbstp
sub
jne
imul
mov
fadd
mov
scas
adc
cmpsl
adc
sbb
and
add
mov
icebp
adc
out
outsb
inc
shrb
sahf
fiaddl
jbe
add
cmpsl
mov
loop
inc
scas
dec
jo
adc
pop
call
mov
inc
mov
push
mov
jo
jecxz
sarb
pop
mov
fdivrl
adcb
int
jne
and
jmp
xchg
rcll
cld
mov
mov
push
mov
sub
rolb
movsb
dec
inc
pushf
xchg
adc
test
or
arpl
xchg
mov
push
lret
or
push
fmuls
inc
test
and
jle
cs
push
out
push
sbb
jp
scas
inc
int
sub
das
sahf
bound
and
sahf
hlt
data16
push
cmpsl
sub
pop
mov
mov
pop
lret
ljmp
rorl
outsb
add
pop
xchg
adcb
xchg
fs
push
pop
jl
xor
fs
mov
movsb
out
pop
push
and
mov
cmc
cmp
mov
stc
nop
nop
mov
push
test
cmp
add
jg
xchg
cmp
lds
movsl
movsl
mov
dec
jmp
or
shll
sub
sbb
daa
mov
mov
mov
test
iret
and
fs
inc
pushf
sbb
sbb
dec
dec
mov
jb
loop
and
jne
push
aam
into
insl
fucom
jns
fwait
mov
push
sbb
xchg
stos
jns
push
stc
popa
aad
rcrl
ss
mov
adcb
and
or
mov
jp
dec
enter
repnz
mov
clc
jl
daa
and
sub
out
fdivrs
push
adc
stos
add
inc
repnz
mov
and
and
sbb
cmpsb
js
sub
aad
xor
rorb
xchg
pop
jecxz
out
ja
add
push
shlb
iret
or
mov
ljmp
mov
jno
sti
and
or
pop
pop
sub
lahf
and
cltd
aas
mov
jecxz
pop
or
insl
cs
sbb
enter
pusha
rcrl
pushf
fmul
ja
popf
and
rcrb
or
pop
loope
test
out
sub
xchg
sarb
xor
lods
arpl
aam
daa
sbb
xor
adc
push
mov
mov
push
ficoml
push
xchg
jno
xchg
adc
arpl
sbb
dec
cld
inc
outsb
inc
mov
insl
mov
push
sbb
fisubl
xchg
repnz
mov
dec
sbb
mov
loope
loopne
sbb
adc
mov
jmp
lods
into
inc
add
mov
xchg
in
test
adc
add
mov
pop
stos
dec
es
data16
jae
jge
iret
lods
fisttps
jl
push
pop
out
sbb
jmp
jns
pop
stos
pusha
and
lahf
xor
call
test
xlat
xchg
jp
cmp
filds
or
jge
xchg
ret
cmpsb
mov
inc
inc
or
ljmp
mov
pop
gs
lret
inc
ror
push
inc
cltd
jge
ja
fistpll
or
push
ret
or
jp
movsb
jae
pushf
jge
push
xchg
jns
mov
jno
xor
mov
mov
test
stc
aas
mov
mov
push
xor
into
lret
dec
jmp
into
sub
hlt
mov
mov
mov
and
mov
mov
out
or
mov
test
aaa
fidivl
or
sub
lcall
pop
lods
rcll
sbb
loop
jmp
inc
jle
mov
cmp
sbb
ljmp
cmp
cmp
fmuls
sub
lahf
push
icebp
stos
cmp
sub
and
jge
arpl
jmp
jbe
adc
add
fiaddl
movsl
out
out
insl
xchg
or
mov
loope
and
enter
xor
repnz
cmp
mov
adc
xorb
enter
cli
lcall
mov
aam
pop
insb
and
shll
movsb
or
mov
sbb
inc
cmp
hlt
sahf
shlb
dec
loopne
loop
stc
js
test
movsb
pavgw
sub
fiadds
imul
inc
movsb
pop
subl
pop
in
in
push
rclb
stos
pop
lock
inc
stos
es
hlt
jge
test
insb
scas
push
xchg
mov
pop
mov
js
mov
nop
inc
add
jbe
movl
outsl
dec
and
jecxz
fwait
cwtl
mov
stos
cld
test
addr16
pop
xor
xchg
adc
add
mov
std
repnz
outsl
clc
add
in
cld
or
lahf
sbb
mov
mov
mov
jno
jbe
mov
add
shrb
and
fnstcw
cmp
movsl
xor
sub
ficoms
popf
sbb
inc
outsl
sub
sub
and
lahf
std
ficoml
test
adc
pop
push
out
ss
in
jg
push
xchg
cwtl
mov
jg
cmp
sahf
aam
jl
fistpll
mov
xor
rcl
pop
mov
bound
cmc
mov
outsb
fdivs
aam
add
in
mov
pop
movsb
js
lea
arpl
stc
mov
push
and
call
and
mov
mov
push
xchg
push
pusha
pop
mov
js
sbb
out
fimull
ljmp
lcall
sub
in
push
and
movsl
add
and
pop
jns
neg
sbb
inc
pop
inc
push
movsb
inc
sarl
jp
loop
jbe
inc
fstl
add
fucomi
inc
bnd
or
aad
xchg
pop
loop
pop
sub
push
add
stos
cmp
jbe
mov
js
cmp
jae
mov
adc
mov
add
aad
dec
imul
dec
push
sub
xchg
mov
loope
cmp
test
xchg
pop
or
out
jb
xchg
xchg
pop
jne
push
add
push
idivl
fwait
sub
add
js
mov
xor
jmp
popa
adc
fldt
mov
int
xor
int
inc
sbb
cmpsl
popf
mov
fwait
cmpsb
decb
shll
mov
ret
push
outsb
jmp
int3
xor
test
loope
jg
fwait
lcall
fs
mov
mov
cltd
enter
movsb
test
repz
add
xor
push
dec
das
fwait
shrl
js
fwait
jb
jmp
or
fwait
xor
xor
test
mov
in
pop
mov
ret
jnp
dec
mov
jg
ds
xchg
sub
out
sar
scas
jo
adc
cld
and
leave
js
test
push
jb
lahf
lret
cmpsb
cmc
mov
cmp
stos
jl
xchg
mov
push
xchg
ret
pusha
mov
inc
lods
mov
push
mov
sub
xchg
mov
pop
sbb
cmp
out
icebp
jo
scas
loope
mov
and
mov
aad
push
adc
add
dec
dec
ja
out
pop
mov
or
fisttpll
inc
je
or
out
adc
vandps
push
shlb
scas
add
xchg
mull
add
fisubrs
loope
dec
in
nop
add
cmp
fildll
icebp
loope
mov
xor
adc
sub
scas
lahf
movsb
cmpsb
xchg
callw
aas
cmp
les
xor
push
pop
xor
ficomps
or
inc
test
std
mov
mov
cmp
inc
mov
arpl
ja
out
cltd
loopne
xchg
sahf
add
pop
leave
add
pop
insl
xor
mov
pop
jle
pop
sbb
dec
jnp
xchg
icebp
clc
mov
push
fsub
mov
lock
push
dec
mov
mov
xor
popa
lcall
push
fnstenv
add
stos
xchg
sub
test
xchg
popf
mov
adc
dec
or
mov
cmp
and
push
gs
mov
imul
xchg
inc
cs
and
stos
sbb
push
or
movsb
mov
iret
cwtl
fwait
jne
sbb
inc
cltd
repz
dec
subl
insb
or
mov
sbb
mov
arpl
psrlw
dec
cmp
cmp
xchg
adcl
jbe
jl
mov
es
jne
inc
sub
ss
dec
fwait
call
xchg
mov
adc
mov
daa
mov
or
xchg
shll
negl
mov
and
cwtl
imul
out
or
ret
lock
cmc
sbb
push
add
add
fwait
loopne
lock
mov
pop
xor
mov
cmc
icebp
mov
xlat
cmp
jnp
and
clc
jg
xlat
add
addl
call
cld
and
cltd
hlt
addr16
fcoml
popf
push
in
inc
les
xchg
or
mov
hlt
inc
cmp
loope
push
push
push
sbb
xchg
mov
sub
xchg
aam
aam
mov
inc
mov
and
cmpsl
out
xchg
dec
mov
xchg
adc
hlt
orl
xlat
xor
ret
repnz
and
xchg
or
push
stc
arpl
loopne
out
jecxz
dec
and
pop
cmp
lahf
das
call
xor
ss
mov
adc
mov
mov
nop
push
mov
mov
push
out
iret
lock
ljmp
mov
adc
in
push
clc
iret
sub
sahf
cmp
mov
int
stc
insl
mov
neg
imul
icebp
jle
pop
and
es
xor
pop
clc
pusha
lret
pop
mov
mov
pop
pop
daa
popa
test
push
jmp
ss
fiaddl
cmpsb
push
addr16
xchg
lea
cltd
jle
jg
sbb
fdivs
movb
mov
xorb
pop
inc
pop
inc
dec
fildl
psubsw
std
or
hlt
sub
mov
into
addr16
das
rolb
out
jae
or
das
fcmovnbe
pop
ljmp
xchg
pop
out
test
mov
test
cltd
sub
jne
mov
sbb
enter
pop
je
adc
pop
push
or
mov
push
data16
push
rcll
cmpsl
xchg
mov
call
jne
jns
mov
addr16
xor
xchg
pop
scas
mov
movsl
fwait
xchg
dec
nop
mov
mov
adc
inc
arpl
movsl
and
sub
les
ret
pop
ja
cltd
mov
mov
xchg
adc
inc
in
jns
jb
jb,pn
sahf
test
gs
cmp
push
jae
rcrb
in
lea
inc
out
arpl
test
push
and
in
repz
dec
leave
xor
add
add
hlt
mov
and
jl
mov
scas
stc
pop
or
dec
xchg
jp
push
stos
mov
mov
jge
mov
ja
fsubl
test
or
faddp
mov
xchg
dec
fnstcw
fcomps
push
inc
mov
jp
add
and
and
mov
stos
mov
sbb
pop
and
or
xchg
loope
aas
fidivrs
cltd
test
dec
or
add
xchg
jl
add
seto
push
test
call
inc
repz
outsb
sbb
jmp
mov
mov
push
jns
ret
pop
pop
pop
or
cmp
fs
mov
imul
adc
dec
and
fucomp
jnp
xchg
ds
test
jne
sub
aad
addr16
lea
lahf
test
or
fcmovnu
clc
jg
xor
xchg
mov
jmp
xchg
sub
and
and
mov
insl
push
jmp
inc
gs
ljmp
fbstp
cmp
adc
push
stc
aad
loopne
insl
movsb
jmp
stos
cmp
lds
test
cmp
cmp
or
loope
lods
add
stc
imul
stc
inc
in
icebp
adc
pop
cmp
cwtl
iret
int3
dec
sub
jne
jns
mov
out
insb
fcompp
xchg
mov
mov
fs
les
loop
loopne
jecxz
push
cltd
je
xor
stos
nop
int
inc
jmp
cmp
xchg
cmp
sbb
push
inc
and
ficompl
je
push
notb
xacquire
bound
jg
test
leave
fisubrl
dec
cmpsb
mov
pop
shl
std
jle
rcrb
aaa
and
imul
es
out
frstor
pop
mov
and
andl
andb
xchg
xor
cmp
fstpt
sub
mov
bound
inc
out
lock
or
cld
fucomi
arpl
mov
and
loopne
shll
mov
inc
mov
jmp
pop
pop
fistpl
andl
ljmp
idivl
jmp
mov
fs
pop
or
push
adc
or
inc
test
testl
fisubrs
inc
ja
mov
sti
lcall
add
or
lea
inc
inc
dec
xchg
xlat
repz
pop
int3
imul
mulb
stc
cs
cmp
add
cmp
fisubrl
test
add
and
mov
sub
mov
or
mov
push
or
lret
aam
cmpsl
xchg
rolb
js
cmp
ret
addr16
pop
dec
fmull
movsl
mov
sti
add
pop
rcrl
push
mov
es
shll
fdivs
cltd
inc
adcl
hlt
mov
sbb
gs
jecxz
add
cmp
cli
lcall
sbb
push
add
push
iret
lret
mov
pusha
test
iret
sub
xchg
mov
cwtl
lcall
fs
xlat
pop
loop
shll
pop
repz
adc
push
mov
imul
out
pop
aas
mov
add
int3
dec
mov
dec
repnz
push
mov
stos
jle
jecxz
fwait
sbb
inc
inc
jg
xor
rolb
pop
push
inc
push
mov
mov
divb
in
sahf
out
inc
sub
xchg
aam
or
addb
iret
test
clc
std
jecxz
clc
push
or
pusha
pusha
fwait
mul
lea
test
sub
loop
dec
add
loopw
lcall
lahf
lods
pop
pop
scas
jge
and
sub
mov
sbb
xor
fs
popf
lret
fldenv
dec
shlb
mov
in
and
jmp
mov
or
fistl
cmp
mov
lret
lret
movb
movsb
shlb
jne
or
mov
pop
aas
push
iret
stos
fisubs
inc
mov
push
movsb
add
jae
push
cwtl
xor
out
mov
sub
adc
adc
mov
shlb
xlat
roll
xchg
add
ds
mov
imul
sbb
xor
mov
fists
mov
mov
jl
daa
or
outsl
sbb
fs
sarl
cmp
jle
push
or
sub
lds
ljmp
mov
rolb
push
repnz
mov
sub
les
sar
sub
shrb
jno
sbb
loopne
js
lret
bound
sahf
out
dec
ret
cmc
mov
aam
out
jmp
shlb
sbb
fiaddl
jg
push
push
jae
and
push
jle
out
xchg
cmpb
dec
imul
out
mov
and
xchg
mov
mov
mov
lret
loope
cmp
jp
xor
mull
rorb
push
mov
aam
fwait
lea
scas
xor
ja
sbbl
dec
test
test
aam
je
push
les
adc
fiadds
in
mov
data16
adc
mov
jns
fbld
push
aaa
popf
sbb
sub
testb
cmp
xchg
mov
shlb
mov
adc
iret
inc
dec
sbb
jb
mov
mov
adc
aad
jae
mov
jg
or
pop
xchg
pusha
xor
test
sub
mov
and
sbb
mov
mov
cli
mov
adc
ss
ljmp
xlat
leave
insl
ja
lret
xchg
jmp
pop
cltd
jno
dec
add
leave
stc
sub
jg
stos
fistpl
sbb
xchg
in
and
xor
sti
push
insb
jecxz
mov
add
xchg
xchg
ss
shl
movsb
es
popf
test
popf
pop
repz
loop
out
sub
ss
or
adc
nop
lods
adc
mov
adc
add
cmpsb
out
std
cmp
pop
jecxz
dec
mov
jae
nop
fidivrs
inc
inc
iret
push
xor
mov
lahf
pop
mov
loope
mov
hlt
aad
mov
pushf
cmpsl
shll
repnz
mov
int
in
fs
add
pop
andl
out
sahf
scas
inc
cmp
mov
mov
or
movsl
xor
pop
data16
sub
fs
mov
lds
ret
loop
inc
xor
jecxz
sbb
inc
fs
test
movl
popf
mov
mov
push
cmp
test
daa
sbb
sbb
xchg
and
je
cmp
pop
jmp
and
rcrb
aas
scas
icebp
cmp
add
call
aam
mov
call
push
or
and
or
cmp
leave
mov
mov
adc
and
aad
bnd
std
add
mov
adc
fdivrs
add
pop
xor
inc
stc
push
and
shlb
jmp
and
and
and
outsl
sbb
popa
loop
add
pop
push
xor
pop
cmc
xchg
and
popa
pop
addr16
outsb
xchg
jmp
lea
cltd
jne
out
mov
xchg
shlb
push
call
out
iret
mov
idivb
decl
sti
xor
imul
mov
lcall
in
sbb
sub
loop
adc
jo
icebp
int3
fdivl
mov
pop
sbb
arpl
fimull
in
pop
sbb
or
dec
cmp
add
xor
mov
mov
ffree
pop
adcl
adc
pop
push
aaa
out
stos
cmp
xchg
xchg
lods
xchg
pop
lcall
adc
mov
lret
and
push
nop
mov
in
cltd
xchg
sub
ret
sub
lods
mov
xor
sub
add
mov
mov
jbe
or
inc
lock
out
je
incb
addr16
push
ret
jmp
movsl
cmp
clc
or
daa
int3
arpl
das
out
lcall
sub
xor
rorb
xorl
outsb
push
aaa
stos
inc
xchg
lcall
adc
lret
sbb
inc
adc
and
push
xchg
inc
test
out
mov
adc
jl
cs
inc
mov
fwait
or
adc
and
enter
jg
inc
push
lret
dec
loop
fld
test
or
and
in
es
cmp
lret
fstps
out
mov
jno
rorb
rcr
cltd
xor
rcl
mov
clc
pop
in
shl
xchg
ja
cmp
mov
sub
dec
xor
aas
or
add
inc
call
xor
loopne
cmpsb
xchg
lcall
pusha
mov
loopne
test
adc
mov
push
cmp
rol
popf
jp
negb
in
stos
std
dec
out
out
test
pop
lods
pushf
sbb
push
jp
ja
repnz
push
xchg
or
jmp
dec
mov
or
jl
dec
movsl
ret
lahf
movsl
aad
mov
inc
imul
cmp
adc
outsb
jno
movsl
decl
add
adc
lahf
nop
pushf
mov
repz
in
mov
addr16
jns
call
xchg
sub
inc
aam
cmp
hlt
xor
xchg
cs
arpl
xor
daa
inc
leave
push
dec
jecxz
int
ds
mov
and
and
les
mov
xor
sbb
fs
jecxz
pusha
rcl
add
std
mov
or
adc
inc
push
mov
inc
neg
push
mov
adc
pop
mov
adc
call
xchg
push
xchg
int
mov
mov
cmpsb
jb
and
ss
dec
adc
xlat
cmpsb
std
or
add
add
test
data16
sbb
ret
or
fs
mov
dec
xorl
or
push
and
out
add
xchg
cmp
or
jne
mov
jg
sarb
dec
xchg
aad
jbe
popa
add
stc
dec
loop
mov
ret
cmp
pop
inc
add
jne
fwait
mov
lret
insl
out
jmp
fdivrp
gs
push
cmp
xor
xchg
mov
addr16
jge
xchg
mov
sub
push
or
int3
fsubrs
sub
cmp
mov
push
push
inc
jns
out
sbb
sbb
lock
xchg
shlb
pop
popf
inc
insl
mov
jne
cmp
jp
rorl
stc
icebp
ja
data16
jns
jne
arpl
inc
pop
mov
pop
das
into
fisubrl
in
dec
decb
je
xchg
lods
je
dec
sbb
push
pop
das
ja
jmp
rclb
or
dec
fsubp
push
sbb
aas
cmp
pop
jb
xor
jnp
xchg
cwtl
sbb
frstor
xor
lret
inc
jo
inc
ss
sub
push
pusha
je
push
mov
cwtl
cld
in
and
sbb
push
mov
jae
int
pop
adc
lret
stc
push
int
jmp
data16
dec
jl
inc
mov
push
and
xchg
test
cld
rcrl
pop
icebp
andb
push
mov
ret
fs
push
sub
negb
xchg
cltd
test
xor
les
ljmp
filds
xchg
orl
push
pop
jl
aas
pop
into
mov
and
push
jl
add
icebp
loope
bound
aas
fildl
push
jg
frstor
in
pop
jo
add
jecxz
and
sbb
pop
daa
nop
ljmp
sbb
lret
into
pop
cld
cmp
sti
add
cltd
lods
xorl
or
mov
les
inc
in
mov
das
push
add
xchg
mov
push
cltd
mov
in
mov
add
imul
aas
pop
stc
cwtl
adc
pop
push
aaa
pop
mov
aas
xorb
and
mov
or
mov
and
push
imul
mov
rcl
imul
jns
cltd
cmove
push
sbb
mov
and
pop
pop
jnp
gs
stos
cmpsb
inc
xor
xchg
or
sahf
mov
addr16
push
and
stos
jp
lock
mov
jno
pop
jb
add
fcoml
aas
cmp
add
fbld
pop
and
aaa
xchg
mov
jle
jae
roll
int3
ja
fisubrl
pop
leave
ret
dec
in
dec
push
fsubrl
mov
testb
mov
push
ret
outsl
sub
inc
jbe
in
mov
pushf
out
mov
scas
out
add
jle
or
sub
mov
inc
repz
adc
fdivl
and
jns
in
cli
lret
faddl
pop
sub
mov
mov
push
xchg
jp
dec
jo
ljmp
aam
stos
inc
ljmp
inc
push
push
mov
mov
negb
jge
orb
aas
movsl
sub
ja
inc
or
neg
adc
inc
xor
xchg
or
sbbl
bound
cmp
pop
pop
inc
mov
and
ret
jae
mov
cs
sbb
outsl
cmpl
and
xor
push
pop
cld
loope
pop
loop
insb
cmp
add
int3
loope
in
cli
or
adc
jo
dec
jecxz
or
cld
fidivl
add
or
mov
mov
loop
dec
add
pop
mov
ja
jmp
jp
mov
mov
cmp
imul
pushf
or
scas
sahf
insb
cmp
cli
cwtl
inc
fbld
fmuls
mov
lcall
ds
jbe
lret
pushf
xchg
sbb
mov
xchg
dec
pop
test
and
es
fmuls
xchg
adc
icebp
sbb
jbe
jle
das
sub
test
sub
mov
xor
movntps
mov
inc
nop
mov
and
in
call
jg
push
addl
ja
mov
jmp
sahf
sti
les
call
jg
fwait
test
adc
inc
rcll
stos
cwtl
adc
aaa
jle
sub
outsb
sbb
repz
mov
xchg
dec
lds
xor
fwait
mov
cmp
insb
imul
and
lea
popa
dec
aad
jecxz
adc
sub
push
push
adc
xchg
sbb
popa
roll
sbb
push
dec
addps
and
bound
dec
mov
stc
popa
jbe
mov
imul
sub
imul
scas
push
dec
test
sub
not
push
jns
adc
mov
loopne
mov
mov
sbb
xchg
cld
add
and
pop
xor
sahf
test
rcrb
jg
inc
out
jae
adc
addl
jbe
push
sbb
lret
push
or
sbb
sahf
test
popl
nop
add
pop
movsb
cmc
lock
or
mov
cmpsb
add
dec
sahf
stc
xlat
cmpsb
movsb
lds
xor
inc
push
mov
movntq
out
xor
xchg
xorb
xor
cmc
out
jbe
loopne
mov
pop
mov
stos
sub
sub
dec
orb
bound
add
sbb
outsb
sub
insb
mov
rcr
cwtl
call
cmp
mov
es
mov
cmp
add
mull
xor
ljmp
mov
xor
jne
movsb
xchg
shr
mov
sbb
sub
clc
add
iret
int3
mov
cltd
mov
push
inc
add
pop
add
jo
cmp
mov
xchg
ret
loopne
pop
add
add
or
mov
jo
jg
lcall
jp
pop
push
lret
mov
or
inc
push
mov
mov
cli
sub
add
in
mov
and
bound
fnstenv
inc
pop
and
ss
sbb
into
jbe
aaa
or
ljmp
fdivrl
xor
sub
xor
lods
jl
ret
out
push
imul
xchg
or
mov
xor
fcmovbe
sbb
cmpsb
int3
push
mov
or
mov
and
and
dec
lds
cmpsw
sbb
lds
insl
sbb
dec
arpl
xchg
add
xchg
mov
xchg
sub
lods
push
push
inc
or
or
jl
or
dec
sbb
loop
popa
decb
in
scas
clc
jp
sub
xchg
aam
cmp
pushf
push
lret
lahf
mov
pop
mov
pop
or
mov
in
aaa
cmpsb
xor
incb
jmp
in
fisttps
pop
cmpsb
insb
iret
lret
dec
stc
int3
addr16
dec
int3
push
mov
dec
adc
es
not
sbb
jl
outsl
imul
mov
xchg
inc
push
out
add
sbb
sti
mov
fnsave
in
lret
jge
xchg
cmp
pop
test
ds
test
and
mov
in
mov
stos
leave
clc
lds
xchg
mov
int3
push
iret
push
sbb
pushf
daa
push
sub
aad
insl
adc
or
cmp
or
icebp
adc
cmpsl
cld
push
lds
test
mov
dec
lcall
mov
add
inc
sub
xchg
pop
add
test
pop
sbb
jno
mov
fcmovnb
mov
pop
sbb
cmc
mov
xor
stos
call
xchg
xchg
sub
cmp
cwtl
bound
mov
push
pop
leave
ja
jl
mov
ss
ja
data16
insb
jmp
fsubl
or
lock
dec
push
sbb
in
mov
pop
lahf
iret
lret
cs
fimull
insb
negl
jge
sti
test
push
sbb
clc
jmp
mov
lret
ja
lret
sbb
dec
mov
daa
pop
int
js
arpl
dec
stc
mov
push
loop
std
sub
fwait
pop
hlt
test
pop
leave
enter
insb
pop
pop
mov
jb
jbe
cld
xchg
and
sbb
jle
rolb
repz
repnz
fldl
outsl
aam
mov
add
stc
push
loopne
jge
mov
jecxz
xchg
fists
push
jge
cs
dec
add
xchg
loop
rol
in
aad
aas
pop
jnp
ret
push
aas
in
push
icebp
cltd
rol
mov
xor
jg
and
and
lock
sub
or
pop
sub
js
xor
xor
or
sbb
cmc
inc
xchg
sub
xchg
aaa
jp
mov
loop
outsl
adc
pop
xchg
enter
pop
outsb
mov
scas
pop
sub
in
push
xchg
push
sbb
fmuls
adc
pop
cmpsl
movsl
adc
push
arpl
xor
dec
and
es
lods
sti
je
in
mov
mov
loopne
scas
xor
fisttpl
add
adc
ds
adc
test
and
test
fidivs
mov
sarl
je
add
dec
cmc
data16
out
test
xor
into
js
mov
xor
sub
jae
dec
aam
in
mov
jle
negl
sbb
stos
out
and
fcomps
sarb
adc
iret
push
push
stc
test
cmp
mov
dec
sahf
aaa
lods
add
and
push
loope
andl
mov
cmp
cltd
jp
enter
jl
andb
insb
cmc
mov
xchg
div
xchg
rcrl
jmp
sahf
and
fcoms
push
xor
notl
sub
loope
mov
ss
int3
adc
xchg
aas
je
popa
cmp
hlt
arpl
subl
in
jle
popw
inc
sahf
and
mov
cwtl
out
cmpsl
pop
leave
inc
sti
movsl
fiadds
cmp
rcll
imul
mov
bound
lret
outsb
jb
adc
xchg
mov
pop
and
out
out
jb
fucomi
arpl
fldl
decb
sbb
lock
addr16
sub
pop
adc
inc
sbbl
cmp
mov
icebp
ret
mov
mov
mov
bound
js
pop
push
dec
pop
in
mov
icebp
jmp
cmpsb
pop
sbbb
pop
sbb
sub
mov
stc
lret
sub
divl
std
out
out
push
popf
test
cmp
test
dec
or
scas
shlb
mov
lret
pop
mov
push
daa
xchg
mov
push
mov
mov
in
icebp
imul
pop
in
cmp
das
lcall
adc
jmp
pop
pop
or
dec
cmp
jp
mov
shll
cmp
adc
and
inc
in
in
dec
test
negb
push
sbb
mov
push
pop
jg
loopne
adc
pop
mov
jp
dec
aam
popf
loop
mov
mov
js
imul
out
movb
mov
loope
dec
cmp
xchg
aam
mov
push
aad
inc
loopne
insl
and
mov
jb
jns
mov
mov
mov
fcoms
xor
pop
test
inc
rol
mov
repnz
pop
jmp
rorl
std
fmuls
loop
roll
push
xor
fs
mov
je
mov
inc
pop
std
jge
call
out
xor
and
lods
adc
fs
mov
sbb
gs
pop
push
push
jl
sbb
sbb
dec
js
xor
mul
or
cs
xor
hlt
stc
cmp
sarl
les
mov
leave
cmp
pop
sbb
fidivrl
in
mov
in
adc
into
dec
aad
dec
ja
pop
out
in
das
scas
sub
inc
add
aam
pop
lret
movsl
cmc
ljmp
repz
outsb
dec
data16
or
sbb
out
pushf
pop
repnz
int3
lea
into
mov
push
add
scas
fnop
mov
mov
stc
cmp
enter
push
out
or
adc
int3
adc
push
sahf
adc
fwait
pop
sbb
dec
adc
pop
xchg
rep
xor
or
es
notb
push
imul
repnz
sbb
push
jmp
dec
mov
imull
test
xor
rcrb
into
mov
push
inc
iret
mov
ljmp
push
mov
rcll
fcmovnbe
andnps
xor
xorb
inc
outsl
cli
or
jns
jbe
ss
insl
push
xchg
hlt
jp
out
jg
or
in
dec
xor
xorl
fcmovb
outsl
sub
sub
fnstsw
pop
jmp
mov
ljmp
aas
aam
stos
jecxz
fdivrs
test
lret
mov
jo
nop
fsubs
testw
lods
xlat
inc
paddsb
in
lret
leave
sbb
inc
movsb
push
pop
insb
jg
sbb
popf
arpl
loopne
fcmovne
lea
das
inc
or
imul
inc
adc
and
push
out
jecxz
sbb
stos
in
ljmp
lods
xor
push
fisttps
adc
sbb
mov
mov
stos
out
inc
push
or
pop
enter
imul
jle
mov
jp
dec
jno
xchg
int3
sub
in
inc
xchg
mov
in
mov
xchg
dec
aas
cmp
sub
sub
sar
sbb
shlb
loop
pop
flds
mov
ffree
xor
xlat
pop
jnp
sub
sti
mov
push
sbb
std
sahf
out
faddl
dec
clc
xor
lds
pop
inc
jl
or
mov
or
jbe
fdivrl
mov
jmp
stc
fcmovnu
idivb
movsb
adc
push
mov
mov
pop
lret
pop
push
xorb
ret
mov
repz
decl
inc
mov
mov
out
sub
movsb
jl
xor
js
test
lea
adc
fwait
mov
into
insb
sub
leave
inc
mov
rcll
mov
adc
dec
shrl
scas
inc
push
pop
loopne
jecxz
sub
xlat
popa
jmp
mov
mov
movsb
xorl
js
test
inc
andb
in
add
ds
out
mov
jno
and
push
dec
xchg
pop
dec
push
psllw
sub
into
stos
hlt
jmp
and
jno
jb
xor
xor
out
sarb
hlt
rcll
pusha
leave
push
mov
adc
inc
mov
pop
and
repz
xchg
stos
pop
cmp
mov
fldenv
std
adc
fsubs
inc
mov
movsl
into
aad
dec
mov
int3
int
lods
cmp
pop
loop
ret
cld
jmp
xchg
stc
test
cmp
out
mov
in
shlb
movsl
jns
adc
and
mov
mov
mov
shrl
push
dec
jecxz
mov
stos
cmp
loopne
push
push
add
out
movsl
pop
sub
mov
mov
dec
lahf
pusha
movsl
cmc
xchg
push
jg
inc
push
cmp
xchg
push
mov
out
stos
jae
cmp
outsb
mov
jle
jecxz
std
loopne
in
cmpsl
movsb
add
rcrl
push
les
jns
cmp
jmp
lret
xor
push
or
mov
jne
inc
mov
and
lret
adc
and
xchg
and
or
fwait
jae
inc
cmc
jb
pusha
lock
in
cmp
in
xorb
imul
aas
sub
cmp
fidivrl
mov
mov
or
inc
lds
cmp
cmp
adc
cmc
xchg
in
lahf
adc
fs
pushf
mov
fbld
and
xchg
jne
popf
lret
js
in
movsb
push
push
bound
adc
inc
mov
add
mov
fmul
cld
mov
mov
nop
or
add
cltd
xlat
clc
cli
lods
fdivrl
jno
rcll
mov
push
jns
insl
xchg
jb
mov
das
jmp
rorl
pop
add
mov
jne
jae
jg
cmp
call
icebp
scas
aam
roll
shll
jge
push
test
aad
iret
iret
call
loop
out
or
data16
xchg
mov
mov
cmc
aaa
mov
out
fidivl
adc
or
mov
jbe
mov
mov
mov
subl
or
imul
pop
jne
mov
in
jle
mov
aad
xor
iret
sbb
rolb
mov
inc
loop
popl
rorl
aas
js
ja
sbb
pop
jp
pop
jae
mov
iret
push
in
outsl
inc
imul
arpl
mov
pop
loope
repz
and
call
arpl
ret
and
sbb
mov
shlb
push
mov
sbb
lahf
xchg
in
or
mov
rcll
pop
cmp
repz
stos
push
mov
es
fdivrs
stos
pop
dec
shr
test
and
jmp
enter
or
lock
xchg
pusha
in
aad
mov
push
lea
mov
jg
jl
xchg
stc
cmp
sub
jb
and
int3
adc
mov
adc
push
shlb
lahf
sub
cwtl
scas
add
pop
cmp
mov
xchg
mov
imul
add
fs
aas
stc
fxch
dec
sahf
dec
push
inc
lcall
or
ret
sbb
scas
sub
adcb
dec
ret
ljmp
xor
cmp
lcall
sub
popa
xchg
mov
adc
sub
imul
aam
push
in
push
das
mov
cmpb
sbb
adc
imul
dec
out
dec
sarb
scas
lds
out
arpl
fucomi
out
pop
clc
arpl
push
das
jbe
jbe
test
rcl
inc
fldcw
or
scas
fldcw
mov
mov
bound
in
mov
push
ret
aas
xchg
stos
or
mov
dec
inc
pop
shlb
in
fimuls
rcr
jo
or
loop
fstl
ret
mov
dec
outsl
mov
inc
push
mov
js
leave
sbb
outsl
push
sbb
sub
lods
dec
push
enter
testb
popa
cmpsl
bnd
mov
mov
out
in
fistps
lea
sbb
popa
or
cmpsb
mov
push
xchg
fwait
outsl
adcl
std
sbb
mov
les
imul
iret
mov
lcall
dec
fisubrl
or
stos
in
pop
in
xor
daa
mov
sbb
arpl
in
mov
cld
mov
cmp
in
xor
mov
and
inc
xchg
js
aam
mov
aam
xor
jnp
adc
cmp
jg
pop
dec
add
add
mov
and
je
aad
test
or
inc
dec
dec
xor
in
fsubrs
inc
cltd
sar
push
cmp
pop
inc
mov
dec
and
popl
cmpsl
push
movnti
enter
decb
push
or
sub
ds
fistl
shlb
add
ja
dec
or
aas
pop
or
insb
mov
insb
cmp
fisubrs
mov
stc
pop
out
dec
push
cmp
inc
mov
cmpsb
adc
hlt
inc
dec
adc
jle
sbb
pop
fwait
adc
aam
fdivs
imulb
xchg
pop
popa
popf
xchg
and
in
fiadds
ss
out
adc
push
ret
xchg
and
sbb
push
mov
imul
cmp
cmp
scas
das
fstpl
imul
mov
cwtl
movsl
jns
mov
shrb
mov
fwait
in
sbb
test
fsubp
xor
or
dec
dec
std
xor
int3
sahf
ljmp
xchg
push
sub
stos
lds
mov
sbb
xor
insb
xor
fwait
mov
push
lea
push
pop
stos
xor
jmp
and
mov
shlb
movsl
sbb
push
cmp
inc
push
rclb
xor
mov
icebp
pop
and
inc
mov
and
mov
cs
out
mov
cmp
jbe
mov
rolb
mov
cmovns
push
jge
jae
imul
xor
icebp
pop
push
ljmp
mov
cld
scas
adc
and
int
xchg
clc
pop
adc
cmp
dec
cmp
cltd
and
stc
leave
cmpsl
xchg
sbb
fwait
pop
sarl
stos
and
pop
inc
rclb
rolb
inc
movaps
adc
pop
sbbb
pop
cltd
fsubl
pop
or
xor
into
icebp
cmp
inc
shrb
gs
js
test
mov
inc
inc
or
and
and
lds
out
mov
lea
insl
and
loope
into
leave
add
jbe
stos
cltd
mov
not
push
ret
in
xor
orl
mov
aas
ss
dec
inc
orb
cmp
test
jns
jb
or
test
pop
stos
adc
sub
mov
pusha
insl
xchg
jg
das
stos
or
ret
enter
in
lcall
sahf
outsb
stos
jecxz
dec
mov
jl
popf
mov
pop
imul
mov
cmp
mov
sub
sub
lret
pop
pop
xchg
ret
js
sar
imul
lret
cmc
adc
inc
jae
push
fcoms
xchg
mov
popa
and
push
push
loope
rorb
loop
out
jae
pop
inc
inc
or
mov
dec
imul
xchg
cli
fidivrl
mov
dec
mov
data16
ds
imul
sub
or
outsb
mov
push
jg
adc
fisubl
jge
cs
fidivl
cltd
bound
mov
sahf
sarb
add
fildll
scas
pop
mov
je
pusha
mov
aaa
add
insl
int
ja
adcb
and
pop
dec
pop
push
push
xchg
mov
adc
out
loopne
pop
xor
add
dec
scas
shll
inc
jmp
out
mov
sbb
pusha
and
test
xchg
loop
mov
ret
cmpsb
push
dec
outsl
dec
lea
cmp
in
or
sub
push
decl
mov
fwait
mov
negb
enter
test
and
and
fdivl
and
ret
mov
sbb
lea
movsb
cmpsb
out
sub
test
mov
je
in
or
bound
pop
imul
pop
jne
inc
push
mov
ss
ja
jne
mov
xorb
lcall
into
jl
in
pop
insl
aam
mov
pop
mov
pushf
fsubr
pop
pop
repz
jp
xchg
into
outsb
xchg
mov
xor
sub
sbb
cli
test
mov
push
sbb
jb
add
mov
adc
les
cmpsl
add
adc
sbb
out
stos
sub
sub
frstor
stos
pop
pop
stos
out
loope
xor
cltd
or
mov
mov
mov
out
cmp
inc
or
es
jnp
inc
dec
jle
and
xchg
mov
xchg
cld
push
mov
inc
mov
cmp
mov
sub
pop
and
bound
inc
push
xor
adc
pop
cmpsl
mov
xchg
xchg
mov
ret
and
push
xchg
aas
movsl
jmp
cmp
lret
das
mov
xlat
aas
addl
arpl
fidivl
pusha
sbb
addb
into
fwait
iret
bound
jmp
xlat
imulb
nop
or
fcompl
sbb
sbb
and
or
xor
outsl
pop
shr
mov
push
test
inc
jnp
js
jb
jg
orl
xor
mov
xor
jmp
mov
mov
add
or
mov
mov
inc
xor
xor
xchg
movsl
mov
add
adc
push
adc
mov
mov
mov
inc
in
sbb
outsb
sub
addr16
aaa
cmpsl
or
push
pop
pop
push
fsubrl
cmp
xor
loope
vmovss
adc
cmpsb
icebp
jae
leave
xor
jne
mov
ljmp
orl
outsb
lahf
adc
pop
sub
ret
xlat
call
and
into
and
push
cmp
jo
jecxz
dec
or
addb
scas
addl
das
xor
jl
iret
ret
popf
xchg
aam
pop
call
sub
stos
push
adc
aam
mov
dec
scas
pop
add
push
shlb
jl
or
jl
fidivrl
loop
iret
aas
enter
mov
jg
jbe
nop
lds
in
data16
xchg
enter
sub
or
test
lods
scas
mov
insb
jae
fmull
adc
xchg
aam
ret
cmp
dec
jmp
jno
adc
adc
cmp
cmpsb
mov
sub
inc
rclb
mov
rcll
lret
mov
shll
mov
mov
js
xchg
mov
pop
add
pushf
pop
pop
aad
dec
push
movsl
sub
out
fwait
aaa
xlat
jo
lea
test
js
mov
sub
insb
inc
lock
shlb
pushf
inc
cld
adc
ja
jmp
jecxz
push
pop
clc
push
aad
cmp
jo
scas
arpl
push
add
sarb
daa
push
add
xchg
inc
mov
add
lcall
cmpsb
inc
push
or
sbb
imul
xor
mov
pop
jae
mov
into
mov
das
int3
xor
aas
out
adc
fs
bound
movsl
dec
aam
not
cmp
pop
clc
sti
addr16
ja
ret
pop
inc
sub
repz
pop
and
dec
mov
rcll
or
mov
imul
inc
pop
or
xor
xchg
test
icebp
add
or
ds
add
loope
int3
xchg
cld
in
cmpsl
jns
sub
insl
lods
cmp
cmpsl
mov
imul
mov
jecxz
jno
repz
xchg
scas
mov
dec
lret
push
xlat
jae
ss
movsb
es
outsb
pop
add
es
add
or
leave
daa
sbb
sbb
lock
sub
pop
mov
clc
mov
test
cli
fstp
xchg
mov
insb
data16
mov
movsb
das
mov
dec
aas
add
idivb
cli
cmp
adc
inc
dec
subb
int3
andl
or
mov
inc
fimuls
fcmovu
adcb
hlt
addr16
lods
inc
xlat
js
popa
mov
dec
dec
mov
push
repz
jl
xchg
dec
push
sarl
cld
add
fisubl
stos
mov
testb
les
jmp
out
adcb
outsl
jl
aad
das
sti
outsl
mov
clc
push
insb
in
adc
cmp
aam
mov
sar
es
rcll
insl
out
sbb
mov
push
pop
pop
push
imul
xchg
fldt
negl
loop
pop
stc
mov
sbb
inc
rcr
fnstenv
movsl
push
jp
xchg
sub
shlb
cli
adc
js
and
sahf
clc
pop
in
mov
ret
jae
mov
arpl
sbb
sub
mov
dec
scas
ret
xchg
mov
scas
clc
push
ficoml
push
cmp
cmp
lods
or
andb
inc
mov
fiaddl
pop
pop
arpl
push
mov
lret
dec
mov
mov
test
sbb
out
sbb
xor
test
dec
sub
mov
mov
or
mov
push
inc
pop
enter
pusha
cld
bswap
pop
mov
inc
jl
insl
jecxz
pushf
je
mov
pusha
cltd
dec
test
dec
sub
inc
mov
shlb
xor
jp
es
iret
sbb
sbb
aam
jne
test
je
loope
popa
aam
pop
cld
push
push
jnp
sahf
iret
xchg
and
aam
lcall
sub
js
sub
call
fisubrl
inc
scas
and
into
pcmpeqd
pop
jmp
test
add
sahf
push
or
and
push
fdivrs
cmp
imul
jle
rclb
ret
adc
jnp
repz
aaa
jne
lahf
imul
or
cwtl
imul
mov
aas
jnp
mov
repz
nop
or
iret
ret
xchg
jl
dec
cwtl
sbb
test
and
push
fstp
cmp
call
cmp
gs
loope
inc
xlat
xchg
in
push
push
iret
lret
and
daa
jp
jbe
jbe
lods
cmp
mov
mov
push
fisubs
test
ret
xchg
outsl
xor
xchg
std
andb
mov
decl
imul
pop
add
sub
dec
and
and
xchg
lods
jl
imul
out
dec
mov
mov
aam
clc
cld
addr16
call
xchg
mov
lahf
mov
adc
mov
add
fs
into
add
inc
imul
sahf
and
pusha
bound
lds
add
pop
xor
pop
ja
stos
outsb
popa
rclb
imul
dec
mov
lds
leave
fbstp
stos
mov
bound
cmp
push
iret
loope
mov
and
lods
add
push
leave
out
xchg
cmpl
fstpt
fs
cmpsl
flds
mov
repnz
sahf
js
popf
pop
cmc
xchg
gs
orl
mov
daa
pop
leave
ljmp
mov
push
std
xor
es
shlb
movsb
dec
jns
out
cld
push
xorl
lret
test
mov
add
push
mov
aas
add
repz
sbb
jl
xor
andb
pop
mov
mov
fistl
movsl
push
fldt
test
pop
lcall
stos
scas
push
dec
aas
loop
popa
adc
jbe
daa
dec
mov
fidivl
push
push
xlat
jbe
ljmp
mov
xchg
xlat
sarb
inc
ret
mov
add
sub
jg
push
jno
pop
rcrb
daa
pushf
adc
lcall
xor
orb
test
adc
sarl
jg
outsl
mov
push
cmc
pop
add
int
mov
fs
loop,pt
and
mov
pop
dec
movsl
cmpsb
and
or
xor
stos
dec
adc
mov
mov
mov
sbb
int3
xchg
hlt
inc
sbb
sub
test
es
fbld
outsb
mov
scas
loope
ret
xlat
and
in
cmp
sub
movsb
and
popa
push
mov
sbb
shrl
mov
lret
rorb
cmpsb
inc
nop
xorb
ja
cs
cmp
dec
sbb
in
hlt
xchg
dec
inc
mov
int
sti
jnp
out
lds
fdiv
aaa
adc
rorl
push
jmp
mov
aam
inc
das
and
dec
test
dec
jnp
xchg
inc
and
out
jp
mov
fimuls
lea
sub
fildll
or
clc
movsl
stc
pop
jg
jb
aaa
js
adc
push
jb
mov
pop
pushf
in
into
sbb
dec
jne
dec
arpl
add
jmp
adc
lds
mov
fcomps
sahf
inc
and
dec
fisubrl
sub
sub
jne
ja
dec
lock
sbbb
jp
pop
inc
and
jmp
push
mov
cmp
push
inc
sub
cs
clc
mov
cltd
adc
mov
popa
xchg
std
mov
aas
mov
movsb
stos
inc
push
mov
gs
int3
cmp
mov
inc
mov
movsl
or
mov
int3
in
pop
push
pushl
cwtl
arpl
jo
fisttps
pop
push
or
jmp
ret
fnstsw
aas
xor
test
push
rol
inc
push
iret
pop
push
xchg
loope
jbe
mov
or
sub
xor
lcall
adc
fdivl
cmp
scas
cld
sti
es
sbb
loope
jg
xchg
inc
pop
push
push
adc
call
dec
sub
movsl
jo
and
addl
jg
fimull
sti
or
stos
and
mov
sbb
push
or
adc
push
pop
xchg
insb
adc
in
in
subl
dec
inc
inc
adcb
sbb
add
in
int3
in
jp
dec
and
pop
adcl
bound
cltd
xchg
dec
fisttpl
cmp
and
dec
mov
out
addb
scas
or
or
jl
in
or
cwtl
aad
dec
push
jns
mov
jae
stos
das
or
and
and
add
inc
mov
in
fs
ja
jb
or
adc
mov
push
cmp
lds
push
adc
rol
mov
mov
pop
inc
push
hlt
loopne
frstor
and
js
sbb
push
sbb
int3
jbe
xchg
mov
cli
testl
pushf
mov
jp
inc
std
fsubrl
repnz
nop
cmp
sbb
add
sbb
clc
sbb
push
sti
aam
inc
xor
mov
testb
xchg
mov
mov
sbb
push
cltd
push
scas
dec
popf
mov
push
sbb
ds
mov
outsl
dec
imull
mov
mull
js
pop
pop
sub
mov
mov
inc
jg
mov
bound
adc
fs
cmp
bound
fs
adc
sbb
and
fucomp
lds
popa
stos
mov
cmp
sbb
rcr
mov
jbe
push
cmp
inc
jp
cmp
outsb
mov
daa
sbb
xorl
mov
daa
and
mov
push
mov
push
in
lcall
mov
lcall
fcom
fsubrl
mov
cmp
mov
sub
inc
jge
cmp
sbb
mov
and
imul
or
aam
cli
stc
add
xchg
push
es
pop
imul
fwait
cs
les
ret
sti
jbe
xlat
inc
cmp
test
mov
pop
sbb
aas
leave
mov
out
scas
clts
mov
andb
xorb
pop
mov
mov
cmp
or
pop
out
dec
xchg
xor
mov
mov
ss
cmp
dec
xchg
mov
test
sub
pop
pop
add
push
imul
movsl
mov
mov
xor
push
stos
outsl
push
faddl
inc
or
mov
xchg
xchg
scas
lods
pop
jle
jge
or
sub
pushf
sbb
sub
cmpsl
gs
out
push
inc
cmp
sub
cmp
xchg
pop
inc
push
test
adc
sub
mov
mov
into
xchg
pusha
cmp
mov
hlt
jb
int3
mov
in
fs
int
stos
jnp
pop
jnp
sbb
mov
sahf
add
testb
mov
test
add
mov
dec
ret
sbb
mov
and
movsl
jecxz
hlt
add
decl
imul
xchg
out
out
mov
sub
loopne
in
xor
push
rcl
addr16
das
xchg
aam
sbb
adc
jg
adc
aad
dec
pop
xchg
pop
das
nop
ret
sub
movsl
ss
negb
movsl
bnd
js
daa
mov
and
lock
sbb
and
mov
xor
dec
dec
or
xor
aam
in
mov
fs
dec
cwtl
stos
jl
inc
scas
sub
movsb
inc
arpl
mov
mov
push
push
jl
pop
xor
insb
adc
arpl
cmpsl
sbb
movsl
orb
inc
imul
mov
out
adc
fdivl
adc
and
inc
lret
icebp
jne
fldt
repz
sbb
pusha
jg
and
sub
pop
xor
and
dec
xor
xchg
inc
or
je
out
push
inc
inc
mov
cld
mov
push
add
stos
xchg
in
loop
xchg
or
stos
pop
sbb
mov
sbb
add
lock
in
js
jb
mov
mov
xchg
repz
push
cmp
cmp
in
or
jae
in
cld
lahf
xchg
xchg
clc
hlt
jge
imul
adcl
xchg
test
cli
dec
push
lods
mov
xchg
addr16
lods
gs
sub
lahf
iret
ja
pop
add
jno
dec
xorb
mov
pop
ret
rcrb
loope
or
mov
push
pop
xchg
add
push
inc
cwtl
rcr
addl
out
xchg
lods
int
mov
jb
or
push
gs
cmp
fwait
xor
aas
cld
pop
inc
out
test
test
cs
cltd
jb
movb
in
inc
push
pop
cmp
push
push
call
xchg
jp
out
je
dec
inc
or
fprem1
rclb
add
xchg
cli
xorl
shrb
mov
call
scas
mov
add
jbe
push
push
inc
icebp
mov
mov
mov
in
and
pusha
or
or
test
call
fs
fistpl
mov
mov
cmp
jl
fdivs
faddl
sbb
bnd
out
mov
test
cmp
push
test
jge
mov
std
pop
mov
sub
test
mov
mov
inc
shlb
bound
nop
addr16
addb
imul
dec
mov
outsl
clc
inc
es
out
sub
ror
in
ja
mov
testb
shl
rorl
and
lock
lcall
mov
int3
nop
sub
outsb
cmp
pop
sbb
call
in
dec
pop
repnz
cmpl
arpl
lock
adc
into
nop
lcall
xor
roll
mov
cmc
dec
pop
ret
inc
fwait
adc
jb
mov
dec
int
pop
int3
sub
pop
mov
xor
push
popf
or
inc
lock
cli
jp
pop
push
pminsw
test
and
xchg
mov
repz
pop
cmp
dec
jno
pop
xor
mov
xchg
or
sar
xor
jmp
dec
mov
mov
add
inc
hlt
xchg
inc
subl
imul
mov
fucomp
arpl
insb
xchg
pop
in
xor
mov
add
mov
inc
fdivr
cltd
popa
pop
push
fadd
in
cmp
scas
arpl
sub
inc
fldl
xchg
xchg
jge
cmpb
and
push
jbe
jp
les
rclb
cltd
sahf
xor
xchg
cmc
add
cmpsb
push
sbb
or
aam
mov
sbbb
pop
ret
sub
aam
cld
lods
xchg
jbe
push
mov
pop
dec
dec
test
mov
stos
or
xor
roll
push
add
in
aam
std
cltd
out
loope
stos
mov
ja
es
adc
add
sbb
push
iret
stos
fwait
pop
out
xor
scas
xchg
sub
gs
xor
xchg
mov
bound
aad
jnp
icebp
enter
mov
cmp
mov
cmp
scas
inc
cmp
push
repnz
lret
push
or
test
jo
xor
xchg
jecxz
les
fs
in
or
adc
jnp
add
lcall
enter
add
fidivs
cld
rolb
imul
lcall
mov
inc
ficoms
sbb
test
push
in
repz
jae
jno
daa
mov
mov
int
test
xchg
ds
sub
push
pop
test
sbb
movsl
shr
inc
outsb
or
jmp
fsubs
inc
lods
dec
sbb
jmp
or
push
add
xor
pop
jne
cmp
cli
test
xchg
and
or
mov
or
and
or
lret
mov
sub
jo
inc
nop
jg
dec
call
lcall
gs
shll
dec
inc
push
mov
xor
lods
lds
cmp
loope
lds
jp
scas
test
xor
bnd
inc
js
repnz
push
sbb
mov
frstor
mov
push
rol
dec
movsl
jg
cmc
fistpll
sub
mov
daa
sub
adcl
andb
xor
fucomi
lds
dec
aam
sbb
and
mov
cmp
add
out
imul
mov
sbbl
daa
aad
add
mov
ja
testl
mov
cld
adc
xor
add
out
lret
mov
jnp
mov
outsb
stos
jp
jl
aaa
mov
sarl
pop
add
sub
sub
and
mov
clc
mov
jo
in
sub
mov
sub
cmp
xchg
rclb
insb
fmulp
xlat
movl
push
jl
daa
xchg
mov
and
pmullw
out
add
xor
ret
loop
in
sub
xchg
mov
cmp
xchg
dec
add
les
sub
into
jo
jae,pn
dec
pusha
insb
mov
loop
outsb
sbb
cwtl
mov
test
es
fidivrs
ret
pop
mov
xchg
push
dec
loope
pusha
pop
pop
gs
mov
rcr
and
insl
movsl
xor
test
popf
mov
ret
add
mov
andb
xor
jl
cltd
ds
pop
jns
sbb
shlb
mov
mov
cmp
dec
pop
outsb
dec
mov
cmp
jmp
mov
push
ret
int
jb
sahf
pop
xor
mov
cmp
js
fmull
and
pop
cmp
outsl
mov
cmp
lret
inc
mov
les
popf
cld
mov
call
jns
test
stc
cmp
push
or
sbb
cmp
adc
xor
mov
xchg
cmpsl
mov
fsubs
sbb
out
in
xchg
movsl
leave
mov
out
out
push
stos
adc
fwait
insl
movsb
subl
mov
ret
nop
jno
xor
out
cmp
xchg
cltd
cmp
xchg
roll
xor
rcrl
scas
push
adc
dec
mov
ret
bound
insl
adc
aad
mov
ss
and
and
bound
sub
fcomps
das
and
xchg
stc
repnz
inc
pop
sub
cmpsb
and
inc
test
cmp
cld
sti
lods
jmp
fistps
ds
and
ret
mov
and
adc
or
cmp
data16
push
adc
mov
test
push
fsubs
test
cmpsb
jecxz
nop
repz
or
std
inc
cs
rolb
iret
and
lods
adc
clc
xchg
cmp
out
or
lods
fldenv
call
repnz
and
cmpsb
dec
mov
sarl
lods
aam
or
in
into
ja
lock
mov
imul
fisubl
and
clc
cmove
xor
je
adc
cmp
in
or
adc
push
pop
or
mov
mov
loopne
add
and
ljmp
sub
and
cltd
pushf
jns
jne
jns
fistpll
imul
mov
pop
xor
add
mov
gs
js
sbb
jmp
push
cmpsl
xor
or
push
bound
xchg
bound
and
imul
push
pop
adc
lods
fidivrs
fs
pushf
std
into
aad
js
adc
test
aad
cs
add
stc
aam
in
cmp
test
fcomi
fstps
ja
stos
enter
shl
cmp
inc
andb
and
popf
enter
xchg
xchg
mov
inc
push
cmp
xor
shll
filds
lds
dec
scas
imul
mov
sbb
or
je
mov
jg
sub
push
subl
jp
aad
mov
or
cmp
ss
pop
cs
aam
imul
daa
iret
and
mov
clc
or
xlat
aam
pop
ja
test
jne
cmp
pop
push
cmp
and
jno
insl
adc
sub
lahf
add
cld
or
enter
in
jno
pop
cmp
add
fadds
in
rcrl
out
fld
jo
add
jp
out
loop
xor
iret
push
leave
mov
icebp
mov
hlt
push
sbb
imul
sbb
pop
icebp
stos
lcall
and
jbe
bound
into
sub
xor
sub
lea
xchg
test
inc
cs
or
inc
fcmovbe
xor
sbb
popa
jns
adc
add
mov
xor
lret
aam
adc
push
aaa
mov
clc
leave
cmp
jmp
fs
fcoml
lahf
xlat
leave
mov
movsl
inc
ror
dec
pop
pop
push
mov
iret
in
pop
sub
fsub
lcall
lods
push
mov
inc
sbb
loopne
cltd
inc
repz
repnz
jo
jge
popf
mov
jne
movsb
mov
push
or
pop
inc
pop
outsl
push
add
scas
inc
dec
inc
add
mov
in
sub
push
push
pushf
jo
pop
push
lea
cli
jl
sahf
xchg
adc
aam
inc
scas
dec
hlt
jmp
mov
stos
adc
mov
xchg
add
lods
mov
push
in
xchg
outsb
cmpsb
inc
outsl
and
inc
jb
mov
nop
aaa
fistpl
cmp
dec
cmp
cmp
pop
mov
loope
dec
movsb
scas
into
loopne
cld
stc
addr16
test
mov
jo
xor
sti
dec
xchg
loop
ret
scas
out
jp
mov
inc
mov
sub
cmp
pop
lea
or
lahf
adc
test
sbb
jb
jno
pop
pop
lret
pcmpeqb
gs
pop
jecxz
and
pop
mov
sbb
incb
jmp
ljmp
popf
cmc
jp
fcmovb
pop
insb
mov
rcr
enter
fistps
icebp
sahf
push
and
lahf
push
mov
mov
into
out
or
pop
mov
pusha
inc
icebp
sbb
out
and
aaa
sub
ret
adc
dec
in
adc
imul
shlb
xor
pop
in
push
rcll
push
or
lahf
outsb
lahf
add
in
add
loope
cmp
int3
insb
pusha
pop
pop
push
jns
mov
in
sbb
lods
pop
lods
mov
sub
push
push
ret
shrl
add
stos
outsl
repnz
lock
sub
and
and
mov
ljmp
adc
jbe
lock
and
sbb
pop
mov
loop
and
or
ljmp
xchg
stos
cmpsl
inc
jnp
fldt
and
jg
aam
dec
jge
cmpsb
push
mov
xor
lods
jnp
inc
int3
mov
push
cmp
and
sbb
scas
outsl
popa
adc
push
inc
cli
pop
cmp
fnstcw
fnsave
xor
enter
addb
in
iret
cmc
lret
out
xchg
cld
add
push
mov
shrl
adc
stos
jle
je
push
dec
jmp
xchg
aad
lds
and
xchg
movsl
jb
and
mov
push
mov
insb
test
rorb
cmp
mov
mov
mov
mov
int3
sub
mov
or
pop
test
cld
idivl
scas
jbe
pushf
mov
push
mov
iret
lret
loopne
or
lods
into
xor
push
lods
mov
and
insb
aam
or
push
insb
mov
push
push
xlat
icebp
xor
ja
pop
imul
arpl
cli
inc
jns
mov
sbb
mov
cwtl
jno
pop
pop
jge,pn
pop
fsubp
lahf
insb
out
cs
rcrb
insb
dec
idivb
ficoml
xor
xor
sbb
mov
jae
imul
sbb
dec
pushf
dec
push
and
xor
mov
add
sub
xor
lods
scas
aaa
fs
insb
inc
add
add
dec
sbb
mov
neg
sub
sbb
and
enter
pop
push
cmpsl
test
or
sbb
jnp
mov
jl
ret
jge
inc
decb
inc
push
xchg
xchg
pop
test
mov
loopne
or
std
jno
rclb
in
rorl
test
cmp
inc
add
and
sub
mulb
cmp
pusha
push
mov
jo
pushf
inc
stos
cli
pop
pop
mov
dec
negl
fs
xor
sub
divb
pop
sub
cmpsb
mov
in
es
dec
or
das
pop
add
push
xor
pop
pop
out
mov
fwait
lds
add
mov
pop
shlb
test
fstp
inc
push
xchg
dec
popl
mov
rorl
iret
rorb
js
add
jle
scas
sbb
push
ja
adc
adc
push
popf
mov
fs
fstpt
test
and
daa
pop
mov
inc
scas
mov
ret
cmp
mov
xor
movb
lods
cs
mov
vpshaw
cld
incl
mov
je
das
fildl
in
lods
scas
push
lods
outsb
rcpps
xor
imul
imul
cmp
lcall
std
mov
fidivl
dec
pusha
mov
data16
push
adc
push
mov
out
dec
pop
dec
mov
push
cmp
fld
test
add
imul
rcrl
or
lret
hlt
cld
in
js
sbb
jnp
xorl
jo
push
jmp
dec
mov
mov
inc
shrb
mov
lods
out
out
aas
jle
cmp
adc
cmpsl
out
mov
jb
shrb
pop
shll
hlt
dec
xor
std
lea
sarb
jnp
xorb
xchg
jbe
icebp
lea
mov
aad
repz
aam
pop
movsl
imul
fisubrl
out
jb
clc
lods
cli
pop
mov
mulb
inc
jbe
adc
lahf
test
xor
hlt
fcoml
cmc
or
push
jae
in
sbb
jbe
js
xchg
shll
repz
repz
repnz
mov
hlt
pop
pop
mov
mov
aas
andb
push
and
mov
and
shlb
stos
incl
mov
sbb
inc
sahf
nop
sub
xchg
cmpb
mov
adc
loope
idivl
pop
dec
cmpsb
lcall
xlat
std
or
cltd
or
cmp
enter
pop
into
mov
lret
sbb
inc
jb
xchg
jge
sub
cmpsb
push
xor
movsl
mov
mov
iret
jb
mov
push
addr16
push
orb
out
daa
cli
or
xor
sbb
dec
adc
mov
movsl
stos
jl
dec
out
int
pop
xor
stos
push
mov
mov
stos
in
xchg
adc
test
push
jne
mov
stos
adc
imul
sbb
mov
push
out
stc
add
enter
decb
fdivs
cltd
pop
jle
jns
xlat
sub
popa
push
jnp
cmp
iret
mov
xchg
ljmp
push
mov
adc
or
popa
movsb
inc
mov
insb
sub
adc
adc
ret
mov
pop
mov
and
push
ljmp
push
inc
lock
fisubrs
repnz
in
pop
xor
gs
pushf
testb
lock
xchg
sub
inc
and
xor
daa
popf
mov
out
cmp
push
inc
jo
inc
mov
lahf
into
mov
scas
daa
sti
cmp
ljmp
mov
lret
mov
and
daa
test
jp
xor
jecxz
notl
sbb
shl
mov
mov
adc
orb
adc
xor
adc
mov
jp
fldenv
aam
fbld
pop
rcrl
in
sbb
xor
insb
add
mov
mov
jl
sub
aam
and
incb
sbb
xor
ds
xchg
mov
dec
mov
lret
aam
outsb
rcrb
jnp
sbb
fidivs
repz
vpunpcklbw
leave
out
icebp
jnp
clc
out
in
mov
js
mov
out
jle
orb
insl
cli
push
fsubr
ret
mov
mov
popa
test
scas
mov
adc
mov
inc
pusha
and
sub
or
dec
add
mov
jnp
popa
test
or
test
hlt
and
cmp
inc
and
jne
sti
fildll
aad
movsb
adc
mov
inc
stc
push
popf
imul
adc
nop
bound
vmptrst
out
nop
mov
and
cmp
scas
getsec
nop
or
das
dec
rorb
jne
xchg
sub
stc
or
cmp
insb
adc
mov
or
fsubs
nop
pushl
mov
dec
test
adc
mov
call
mov
push
scas
stc
jns
mov
dec
mov
dec
jmp
mov
pop
stos
ret
inc
adc
xor
nop
out
mov
mov
mov
xchg
aad
and
imul
fcomi
imul
adc
fnstcw
mov
lea
mov
aam
cmc
test
dec
mov
cltd
faddl
dec
xor
push
stos
rcrb
lods
adc
fs
andl
enter
aaa
inc
xor
jo
adc
push
aam
fnstsw
pop
pop
hlt
xchg
mov
dec
int3
cmp
stos
lret
roll
xchg
and
cmpsl
enter
pusha
imul
lahf
mov
mov
in
sub
xor
mov
cltd
arpl
mov
pop
mov
fcmovb
test
push
mov
shlb
mov
scas
rorb
dec
adc
sbb
xchg
mov
gs
daa
ffreep
jle
movsb
jg
popa
jnp
das
ljmp
jne
cltd
ret
pop
push
pushl
sarl
sete
scas
mov
xor
pop
mov
movsb
les
mov
mov
mov
xlat
jecxz
scas
in
mov
scas
push
loopne
or
pop
lea
sbb
push
enter
les
or
dec
pop
loop
mov
mov
fcompl
mov
mov
push
add
add
mov
and
outsb
pop
adc
sbb
mov
fldt
xchg
scas
pop
push
cmp
dec
jno
iret
xchg
lea
fwait
fs
mov
pop
xchg
aad
sti
dec
in
cmc
cwtl
xchg
addl
addr16
in
mov
pusha
mov
inc
nop
add
and
popa
scas
mov
pop
push
clc
call
sbb
xor
popf
xchg
mov
jbe
pusha
push
adc
loop
orl
mov
cmc
mov
jno
dec
sbb
std
ja
inc
xlat
scas
adc
lea
fcomi
ja
mov
xor
sub
shrl
loope
pop
and
test
iret
inc
insb
popf
ret
fsubl
jne
cld
mov
push
xor
pop
iret
or
stos
addr16
pop
or
mov
add
daa
lods
insb
xchg
sarl
mov
cmpsl
jb
fwait
test
loop
jne
mov
lret
sub
cltd
repz
pop
adc
mov
bound
movsl
sbb
ficomps
and
and
xorl
push
ss
jl
sbbl
lret
outsl
cmp
loop
pop
jmp
jnp
or
sub
dec
mov
flds
enter
lea
inc
inc
repnz
addr16
push
mov
in
jno
jmp
jl
and
mov
in
xor
add
mov
aaa
fdivl
jge
push
fcomps
imul
jbe
inc
cmp
xchg
and
jno
jge
outsl
outsl
movsb
inc
lret
mov
or
enter
shrb
or
aas
xchg
mov
and
and
jmp
sahf
stc
gs
adc
mov
sahf
cmpsl
xor
push
sbb
sub
sbb
sbb
addl
cmpsb
mov
pushf
stc
das
and
sbb
xchg
pop
mov
cwtl
fs
fistpll
repz
fdivrs
cltd
inc
bnd
mov
hlt
addr16
mov
mov
cwtl
lock
shrl
xor
stc
sysexit
jnp
pop
pushf
sub
std
in
add
mov
leave
inc
ficompl
iret
jg
lret
subl
and
mov
stc
sbb
rcl
ss
jle
adc
xor
fldenv
outsb
insl
inc
rcll
fistl
add
clc
cmp
enter
int3
dec
insb
andl
and
jb
jnp
dec
mov
mov
dec
pop
inc
test
xchg
cmp
mov
add
sbb
sbb
pushf
mov
aaa
test
dec
push
xor
mov
cli
jp
and
cmp
sti
mulb
inc
jg
stc
lods
fists
popa
rol
mov
or
lret
dec
pop
cmpsl
std
pop
in
cli
xchg
aas
jb
mov
xchg
arpl
cmp
and
mov
arpl
or
dec
add
lods
loopne
mov
clc
lea
bound
add
outsb
cmp
adc
pusha
aaa
fdivrl
xchg
lods
aam
jge
mov
aam
inc
fcoms
mull
arpl
cli
xchg
insl
daa
and
cmpsl
adc
movsl
rcl
or
imul
pop
and
mov
faddl
cwtl
cmp
test
mov
sbb
pop
lahf
out
aas
stos
mov
popf
xchg
sqrtps
fmuls
mov
sbb
sbbl
cmp
loopne
mov
je
cmpsb
in
mov
test
xchg
xor
xor
mov
dec
xchg
xorb
dec
cld
push
iret
add
sbb
push
int3
inc
and
xchg
ja
call
pop
incl
add
leave
lret
in
nop
pushf
fistpl
int
ficoms
jns
and
std
enter
sub
jmp
decb
les
pop
imul
push
pop
jg
xchg
mov
outsl
xor
pop
xor
mov
pop
shrb
les
arpl
movsb
sub
rorl
cmp
xchg
mov
pop
int3
outsl
sbb
push
jae
cmp
fcmovu
sbb
dec
data16
mov
xor
mov
aaa
sbb
rcrb
jp
dec
adc
stos
shrl
mov
push
sbb
jae
lret
fcomps
xor
dec
arpl
out
pop
test
mov
cs
push
lcall
test
in
das
andb
in
push
loope
mov
subb
add
out
sbb
cmp
test
fisttps
outsb
pop
add
jb
stc
jbe
jge
mov
repz
ja
aaa
push
dec
mov
cmpsb
inc
adc
xor
jg
mov
add
jb
add
outsb
mov
in
arpl
or
cltd
jge
push
or
push
lds
add
movsl
adcb
dec
push
fistpl
lds
sbb
ficomps
lcall
add
fwait
sbb
shrl
test
addr16
cmp
xchg
inc
jo
mov
pop
test
cmpl
dec
loope
fnstsw
pop
dec
mov
int
nop
ret
mov
dec
inc
test
popa
xchg
call
and
pop
push
les
xchg
mov
iret
adc
mov
shlb
popa
sub
call
rcrl
lds
jb
movsb
sub
dec
add
mov
test
outsl
test
mov
push
sub
mov
add
xchg
insl
sub
mov
push
mov
in
std
pop
fstps
pop
sub
add
fxch
jo
fdivs
or
push
iret
jae
scas
ficoml
jge
inc
xor
xchg
lcall
shl
fstl
cmp
sub
pop
cmp
scas
xchg
push
enter
ret
jmp
cmpsl
lds
mov
sbb
push
pop
jecxz
lods
sarl
movsl
jnp
repnz
divl
mov
inc
adc
mov
in
adc
pop
stc
pusha
cltd
fdivrp
sub
sub
scas
mov
fistpll
xchg
mov
jb
dec
inc
adc
or
lds
les
sub
push
cmpsl
mov
xlat
push
add
jns
xchg
lret
jne
pop
inc
or
sar
fstl
jp
dec
and
mov
mov
test
pop
imul
enter
je
cmp
add
aam
insl
push
mov
fidivl
repnz
vmaxpd
or
ror
lcall
shrb
adc
sbb
mov
ret
cld
imul
mov
bound
mov
dec
jmp
mov
mov
dec
mov
aas
dec
mov
cmc
dec
push
jmp
mov
mov
ret
dec
jmp
dec
or
adcl
jecxz
sbb
add
xchg
dec
loopne
out
pop
mov
inc
fwait
jns
ds
ret
xlat
dec
adc
mov
sub
jg
xchg
outsb
test
push
shlb
dec
pop
mov
rorl
imul
cmpsl
ret
mov
test
mov
sti
mul
insb
imul
mov
std
in
jg
popa
push
mov
xchg
or
int3
mov
jp
into
and
xor
pop
mov
sbb
add
cli
shll
mov
es
mov
cmp
cmpsl
loop
xor
adc
je
mov
icebp
dec
jbe
insl
mov
daa
sub
ret
mov
push
add
cld
aad
call
push
mov
mov
sbb
cmp
out
jno
jl
push
or
push
mov
sub
lea
in
int
sub
stos
in
rorb
lods
adc
testb
sub
xchg
pand
mov
jg
out
sbb
rcl
dec
mov
hlt
push
sarl
ret
fildl
push
jp
xchg
les
je
popa
sub
mov
xchg
xchg
frstor
cmpsl
jle
xchg
lret
xlat
dec
fsubrs
cmp
mov
inc
mov
ret
sbb
shrl
std
jno
aas
loope
cltd
pop
test
scas
aaa
pop
push
pop
sbb
xchg
push
or
mov
test
mov
or
xor
cwtl
and
shll
lret
xchg
pop
dec
inc
mov
sub
std
mov
mov
mov
mov
imul
movsl
push
mov
std
pop
stos
dec
fucom
call
add
fcomps
lds
mov
mov
test
mov
pop
ljmp
mov
jmp
pop
shr
adc
sbb
cmpsl
xor
adc
jp
gs
movsl
jo
jns
popa
pop
inc
adc
loop
xchg
pushf
mov
fists
std
jle
insl
mov
scas
adcl
push
pop
adc
test
loope
mov
dec
sbb
jns
lods
ret
into
aas
mov
xchg
rorl
icebp
stos
push
dec
out
movsb
add
je
push
movd
jae
mov
or
xchg
cmp
dec
sbbl
sub
or
fstps
dec
das
int
icebp
mov
pop
jo
mov
es
mov
enter
hlt
in
xchg
jnp
jp
jle
ljmp
add
add
cltd
lret
leave
xchg
sahf
pusha
cmp
pop
add
lods
lods
xor
leave
adc
dec
cmpl
xchg
sahf
jl
pop
inc
jne
dec
hlt
adc
push
stos
js
dec
movsb
es
push
mov
cwtl
add
fsub
pop
and
dec
jp
loope
xchg
sub
and
cmpsl
cmp
pop
stos
sbbl
mov
test
jne
faddl
push
pop
lock
int
arpl
pop
cmc
ficoms
arpl
jle
repz
lods
shr
cmp
jp
mov
or
pushf
xor
and
cmpsl
or
adc
push
aas
dec
imul
icebp
inc
fidivs
popa
lea
rolb
mov
paddsb
mov
cli
popa
adc
scas
dec
adc
addr16
dec
fiadds
shl
aam
sbb
cmc
mov
sbb
jp
mov
dec
dec
mov
push
xor
ljmp
push
out
ja
inc
ljmp
fnstsw
xor
sub
sbb
push
sbb
pop
adc
mov
cmp
enter
sbb
dec
sbb
jecxz
xor
cmpsb
pop
mov
jp
jb
push
out
bound
or
dec
mov
adc
xor
mov
push
pop
cwtl
popa
stc
adcb
adc
fcomps
test
jne
arpl
fisubl
mov
sahf
rol
cmc
pop
test
or
and
std
cld
inc
add
lods
notl
xchg
cmp
cltd
sbb
in
mov
cli
and
mov
push
mov
inc
jmp
nop
push
push
dec
ret
fisubl
xchg
in
push
push
or
ja
sub
xlat
ljmp
or
jmp
mov
mov
dec
stos
test
push
mov
dec
pop
cmp
std
test
push
and
push
mov
mov
ljmp
fsubr
insl
pop
in
out
mov
adc
or
mov
push
lret
inc
dec
ja
xor
ret
into
dec
push
pop
inc
xor
pop
push
dec
mov
xor
shl
testb
xchg
fs
dec
sub
cwtl
es
orb
fisubs
push
je
dec
fwait
or
leave
test
leave
jno
lea
idivb
rolb
jp
div
test
icebp
add
loop
xchg
lahf
xchg
pop
movsb
ljmp
rcll
sub
sbb
js
icebp
jns
sub
push
or
xchg
cli
rcll
mov
xchg
aad
dec
xor
jecxz
fbstp
test
lea
inc
pop
dec
jmp
aaa
movsl
in
mov
icebp
stos
sar
inc
cmp
icebp
mov
mov
inc
xchg
xor
sub
add
loope
data16
aad
push
mov
adc
clc
mov
cmp
adc
mov
pop
daa
pusha
sbb
and
cld
imul
call
cld
dec
mov
clc
gs
jb
dec
outsl
mov
cmp
pop
cmp
outsl
cmp
inc
sahf
sub
jo
push
fldt
sbb
xlat
xor
inc
aad
in
jp
push
add
cmp
mov
adcb
test
add
push
pop
popf
mov
mov
jns
ss
repz
pop
fucomp
mov
mov
and
scas
pop
cmp
xorb
iret
pop
pop
out
clc
sti
insb
mov
mov
repnz
in
fcmovnb
and
cli
mov
dec
cs
ds
mov
push
lea
fldt
repz
cmp
sub
xor
dec
imul
mov
and
imul
push
outsl
add
mov
push
push
mov
movsl
jmp
mov
outsb
cmp
out
fsubrl
jle
daa
in
or
ret
rcl
dec
ljmp
mov
xor
mov
add
and
lret
mov
popa
push
arpl
jae
adcl
repz
loopne
jnp
adc
out
xor
mov
adc
divl
jle
push
sbb
lahf
pop
je
pushf
add
mov
test
cltd
adc
in
adc
sub
xor
lahf
push
lret
xor
pop
aaa
pushl
test
xor
inc
fbld
inc
loop
xchg
cmpsb
imull
fistpll
mov
xor
sbb
jecxz
xor
iret
movsb
sbb
jp
dec
jmp
xchg
stos
out
subb
mov
daa
pop
cmpsb
mov
insl
pop
fs
fildl
and
scas
in
cmp
cli
jmp
fcoml
jb
add
in
sub
in
maxps
mov
add
xchg
xor
mov
or
cltd
cmp
xchg
lcall
mov
inc
mov
enter
sub
out
lds
xchg
mov
xchg
inc
arpl
sub
pop
loop
jp
fisubs
adc
popa
cmp
inc
fwait
adc
mov
jae
mov
imulb
or
mov
jo
dec
aad
fbstp
fs
xchg
mov
sbb
fistps
adc
inc
pop
dec
ljmp
or
mov
mov
jbe
fcoml
lock
lds
xor
pop
enter
cld
mov
mov
adc
scas
xor
in
repnz
enter
push
repz
out
orb
outsl
outsb
shl
jge
mov
pop
add
sub
in
cmpsl
cbtw
push
mov
sub
out
lds
addr16
aas
out
inc
outsl
xlat
pop
push
lea
lret
mov
mov
jne
adc
mov
imul
add
xchg
sub
fstps
icebp
iret
jae
lods
std
out
or
loopne
sbb
popf
test
adc
cld
aad
or
dec
hlt
aaa
xor
push
mov
dec
mov
scas
enter
orb
cwtl
pop
mov
orl
lock
test
into
or
divb
jge
jp
pop
or
int3
sub
or
or
jp
orb
cmpsl
shll
lahf
lahf
adc
notb
je
add
mov
jmp
ret
or
xchg
cwtl
int3
outsb
out
xor
stos
push
rep
sub
sbb
pop
xchg
mov
jno
mov
cltd
add
fst
ljmp
add
xlat
xor
mov
orb
add
in
jns
xor
mov
rol
add
add
subb
dec
lods
and
bound
add
mov
popa
adcb
cmpb
movsb
fs
cmc
jmp
lea
ret
js
push
ljmp
push
or
arpl
xor
pushf
fdivs
adc
movsl
dec
dec
jmp
sub
ss
ficoms
adc
jo
lcall
lret
pop
add
inc
aam
push
pop
push
mov
sti
rcrb
mov
and
lds
add
mov
and
pushf
stc
mov
and
mov
dec
fsts
dec
fs
mov
pushf
push
cmp
in
jge
aam
inc
and
andl
in
in
pop
pop
pop
pushf
test
test
adc
negb
outsb
dec
cli
dec
jae
pop
imul
aam
cmp
and
imul
enter
sti
ss
jns
gs
out
mov
pop
mov
push
imul
sahf
movsb
and
cli
je
fildll
cltd
ljmp
shl
call
jg
add
cwtl
mov
pop
push
mov
add
int3
jb
sbb
or
shlb
test
rolb
and
stc
push
scas
mov
in
jb
addb
enter
or
es
add
popa
subb
or
call
loop
jecxz
inc
leave
leave
stc
loop
out
or
mov
fadds
mov
sub
push
ret
call
xchg
push
sub
mov
outsl
imul
xchg
adc
pop
adc
outsl
jno
mov
xor
in
subb
cmp
push
andl
shlb
xchg
test
je
std
mov
pushf
jle
lock
notl
int
mov
fadd
adc
push
jno
in
push
ret
sbb
lods
out
push
sub
cmp
lret
test
inc
outsl
mov
clc
ret
mov
jo
aad
mov
testl
pusha
cmp
cmp
dec
aaa
mov
in
xor
xor
push
sub
xchg
mov
aaa
mov
insl
movsb
sub
cld
mov
cmp
cmp
rorb
arpl
fnstenv
in
sbb
inc
ds
loopne
cmp
int3
out
outsl
bound
push
out
popf
mov
ret
data16
mov
and
stos
jb
or
shrb
mov
mov
mov
or
in
test
and
test
decl
adc
or
sar
in
sbb
mov
inc
jo
push
adc
jno
cmp
dec
aas
push
insl
jnp
mov
cwtl
es
push
inc
les
dec
mov
outsb
xchg
pop
push
mov
fisttps
insb
aam
sahf
ffree
pusha
inc
stos
add
push
pusha
fwait
js
xchg
test
inc
jg
das
sbb
xorl
xor
lret
cld
or
xchg
push
cmp
shlb
out
int3
in
int3
addr16
sahf
push
xchg
xor
imul
push
addr16
adc
and
jbe
ret
xor
mov
test
out
and
pop
mov
jb
jge
scas
lret
enter
cmp
sbb
xor
das
sub
cmp
sbb
dec
das
cs
fnsave
sbb
scas
fldenv
cwtl
jg
xchg
lock
or
filds
daa
adc
in
ss
add
adc
jmp
adc
bound
clc
sub
sbb
scas
jns
add
fs
sub
add
jge
xor
and
dec
sub
jae
sub
ljmp
lock
ror
jmp
imul
pop
mov
dec
insb
leave
jne
dec
negb
ficoms
mov
adcb
inc
ret
xor
push
and
jl
mov
daa
iret
or
add
in
pusha
mov
data16
stc
call
or
inc
scas
cmpsb
jnp
int
xor
sti
push
sub
or
push
xchg
mov
popa
mov
in
fsub
push
subb
int3
js
fisttpll
lea
adc
and
into
not
jmp
xchg
test
mov
test
sbb
dec
popl
js
lcall
xchg
jnp
pop
addr16
stc
mov
adc
mov
popf
loop
mov
and
nop
jp
and
and
test
sti
pop
push
jbe
std
lods
decb
sti
or
mov
push
pop
les
inc
and
cwtl
adc
sar
mov
jo
push
gs
push
enter
test
loopne
jp
dec
inc
sahf
imul
mov
ret
or
mov
mov
or
and
jmp
mov
or
movsw
inc
into
add
mov
gs
adc
shlb
cltd
jae
mov
xchg
mov
test
sbb
inc
or
arpl
jno
xchg
call
pop
xchg
push
pop
pusha
fisttpll
push
dec
sbb
in
push
hlt
xor
and
lods
jg
cli
sbb
cli
imul
jge
imul
mov
xchg
call
insb
cmc
xor
fs
push
aad
push
mov
lret
xchg
mov
jnp
fsubr
xor
sbb
loope
mov
aam
xchg
or
mov
mov
mov
arpl
mov
incb
ret
push
lahf
cmpsl
jbe
dec
icebp
xchg
mov
xchg
pop
or
andl
sbb
ds
add
jbe
pop
sub
ret
dec
mov
or
es
dec
ss
cmpsl
hlt
ret
cmp
xchg
rcr
adc
adc
mov
pop
xchg
test
or
or
in
mov
aam
cmp
mov
sbb
cmp
mov
dec
lgs
cmp
das
or
fstps
call
cmp
jbe
sbb
mov
ficoml
xor
mov
in
sahf
lret
std
pop
jecxz
fwait
or
sbb
pushf
jne
pop
in
popf
dec
lret
mov
xchg
jle
push
outsb
adc
inc
ds
push
nop
insb
or
inc
ret
in
fstpt
sub
in
dec
popa
cmp
enter
push
ret
push
dec
cmp
xor
dec
xchg
mov
xchg
adc
repz
loop
push
movsb
pop
sbb
dec
inc
xchg
cmp
inc
sahf
and
cltd
adc
popa
jle
inc
xor
cli
mov
jno
dec
fwait
ds
push
popl
xor
adc
inc
xchg
dec
pop
sub
mov
sahf
pop
scas
stc
mov
jecxz
sbb
inc
out
in
sub
mov
or
dec
insb
and
xchg
jg
test
cwtl
xchg
shl
into
les
stos
and
pushf
outsb
fucomip
mov
inc
or
sbb
imul
aaa
pop
in
or
adc
outsb
mov
popa
add
out
mov
pop
insl
repnz
inc
or
popf
iret
xor
jbe
movsl
loop
adc
adc
fwait
or
in
int
imul
mov
jnp
out
aad
jmp
loop
push
jle
aam
push
int
scas
and
notl
add
gs
add
es
fstpt
jmp
iret
lds
xchg
push
inc
mov
inc
or
jns
cmp
in
nop
xor
jno
in
aam
stos
out
adc
fdivrl
loopne
push
icebp
ss
sub
repz
aad
pop
jle
fildll
loope
arpl
add
add
adc
adc
into
jno
pop
fimuls
inc
in
pushf
cltd
mov
jae
mov
loop
cs
jno
dec
mov
jnp
push
pusha
ljmp
out
xchg
icebp
xor
out
push
xchg
jl
dec
jne
repnz
lods
xchg
out
cltd
sarb
loope
cmp
fcmovu
cmpsb
push
sahf
mov
iret
iret
daa
or
insb
repz
pop
sbb
jbe
mov
pop
push
int
mov
pop
jge
inc
mov
js
mov
cmp
outsb
imul
cmp
jnp
inc
subl
jmp
shlb
addr16
mov
es
pop
call
test
xor
rcrb
xchg
and
mov
inc
dec
popa
hlt
push
outsl
in
dec
push
movsb
and
dec
push
add
out
sbb
push
push
mov
xor
mov
imul
inc
popa
je
push
insb
mov
in
fistl
push
lret
pop
mov
gs
loop
das
cmp
sbbl
xchg
mov
mov
cli
or
pop
stos
jo
xor
jne
xchg
mov
dec
cmp
sbb
add
push
stos
add
dec
decb
xchg
fists
sub
loopne
or
loop
xchg
movsl
inc
and
dec
inc
mov
rolb
je
jecxz
mov
dec
push
repnz
leave
mov
xor
fs
pop
fcom
es
insl
notb
or
push
cld
push
xchg
push
dec
jecxz
push
jae
arpl
dec
xchg
mov
js
push
and
enter
inc
cld
push
jnp
iret
into
mov
test
adc
aas
movsb
popa
xchg
push
subl
jmp
adc
adc
mov
add
xor
xchg
sub
aad
sub
cld
mov
cmp
aam
fisttpll
jne
xor
mov
mov
test
test
or
inc
jae
sub
inc
pop
loopne
xor
mov
cmp
cs
iret
iret
mov
pop
sbb
outsb
popa
cmp
clc
sub
les
mov
jb
dec
nop
sub
call
cwtl
mov
adc
mov
jae
dec
xor
divl
ljmp
fisttpll
outsb
into
push
push
mov
rcrb
jl
push
cmp
ficoml
mov
cs
enter
xor
cld
call
out
sti
loop
ljmp
mov
cli
sti
pop
push
push
xchg
mov
icebp
lods
popa
push
mov
pushf
jmp
int3
pop
push
mov
cmp
cmp
sub
insb
xchg
fcmovbe
sub
jns
jbe
jge
or
pop
mov
and
lea
push
fsubrl
aam
xor
cmpsb
pop
mov
mov
cwtl
jecxz
shrb
sbb
je
jecxz
lods
lcall
ret
add
dec
ja
dec
out
sub
in
pusha
xor
aam
insl
in
mov
scas
ret
insl
adc
xchg
pusha
pusha
sbb
inc
mov
sbb
subb
jbe
push
xchg
popf
je
lds
orps
jmp
mov
and
out
cwtl
jbe
inc
notb
fmuls
stos
fcmovne
lock
pop
je
mov
cmpsb
in
iret
in
leave
int3
sbb
pop
scas
les
ss
fimuls
push
das
mov
mov
aas
outsl
sbb
sbb
test
out
inc
xchg
lods
jecxz
xchg
jg
shl
jno
pop
fnstenv
cmpsb
out
dec
jp
pop
pop
loope
ret
lret
mov
lock
inc
and
lds
inc
mov
mov
popa
pop
adc
mov
xchg
mov
cld
xchg
pusha
jne
mov
lods
push
clc
xchg
popa
add
jecxz
lcall
ret
xchg
mov
roll
mov
pushf
aad
push
into
push
adc
adc
mov
test
test
ret
dec
mov
pop
loopne
ja
imul
mov
jmp
aam
int3
enter
jns
fpatan
imul
rcrb
cmpsl
cmpsl
stos
jno
mov
ss
xor
mov
and
lret
clc
inc
cltd
out
jl
mov
aam
and
hlt
jbe
cltd
idivb
loop
fisttps
dec
mov
adc
or
xchg
cmp
pusha
sbb
clc
fisubl
out
mov
mov
imul
lcall
das
sbb
fcoml
mov
xchg
xor
mov
dec
dec
push
insl
pusha
mov
popf
jnp
or
sbbb
inc
fwait
add
xlat
jno
mov
or
neg
xchg
cltd
andb
lahf
jg
into
imul
rolb
imul
sub
fsubrl
and
and
cmp
cmc
mov
cmp
dec
sbb
and
mov
clc
loopne
jle
or
enter
mov
cmp
jns
mov
out
xor
xor
pop
fadds
add
xchg
dec
cmp
aas
jge
jl
incl
fstp
cmp
push
mov
jg
les
cmp
repnz
cli
bound
in
add
pusha
iret
into
pop
push
add
lods
adc
xlat
rcrb
lea
je
fists
out
jne
mov
cmpsl
push
mov
call
out
test
mov
pop
pop
ret
enter
je
mov
shl
sbb
sbb
flds
faddl
xchg
loop
jo
idivb
or
pushf
fildll
jmp
icebp
mov
mov
pop
fldl
cmc
inc
stc
lcall
fisttps
mov
jae
mov
adc
pop
test
sti
fucomi
xor
cld
sti
lea
sti
mov
roll
cmp
das
adc
push
pop
nop
test
jo,pt
or
sub
faddl
out
xchg
jmp
adc
sahf
add
pop
pop
sub
dec
lds
mov
insl
aaa
pop
and
add
jl
fwait
cmpsb
push
dec
stos
fldcw
push
cmp
nop
stos
push
aam
push
sahf
cld
popa
cmp
addr16
int3
and
xorl
testb
repz
mov
notl
sbb
in
shll
daa
dec
mov
xchg
pop
mov
lods
mov
test
jmp
scas
inc
rol
cltd
pop
add
dec
adcb
jmp
dec
mov
or
fwait
btr
mov
outsl
push
mov
shl
lret
test
xor
loop
and
call
add
jmp
xor
mov
ret
sub
popa
pushf
pop
or
mov
dec
mov
jge
or
jge
xchg
sahf
pop
or
cli
or
xchg
call
adc
int
daa
aas
mov
je
jne
pop
sbb
outsl
aad
mov
vpunpckhbw
jns
jle
dec
scas
rcll
nop
cli
clc
and
mov
leave
lret
dec
cmp
jmp
gs
lods
fmul
adc
mov
inc
jmp
insl
lret
jecxz
xor
pop
push
dec
xchg
xchg
sbb
out
stos
std
push
mov
in
or
inc
movsl
inc
sar
cmp
sbbl
pop
or
loop
adc
jae
mov
lock
cmpsl
pop
xchg
and
adc
add
sar
fsubrl
cltd
int
cmpsb
push
dec
into
xorb
adc
es
fsubr
pop
mov
adc
mov
sbb
dec
or
pop
and
aam
push
stc
mov
xchg
pop
aad
fidivl
adc
shr
ljmp
push
push
lea
jo
js
pop
arpl
in
test
jno
inc
popf
mov
mull
mov
xchg
out
add
mov
inc
sub
mov
lahf
shrb
inc
xchg
js
inc
and
push
push
out
add
cli
std
jns
fistl
jg
imulb
in
fisubrs
adc
jns
stos
out
or
daa
adc
sti
push
cmp
push
adc
jge
sub
jge
push
les
push
xlat
imull
dec
mov
popa
test
mov
mov
out
aas
xlat
arpl
jmp
sahf
rcll
test
lods
jb
cltd
fistps
in
pop
pusha
mov
push
pushf
nop
cmpsl
push
rcll
mov
sbb
sbb
xlat
mov
loop
icebp
xchg
sub
inc
ret
lahf
lods
push
mov
scas
push
xor
pop
pop
cltd
xor
loop
inc
dec
lret
cmpsb
cmpsl
das
inc
cmp
jmp
std
into
push
lods
add
sub
push
pop
addl
inc
ret
inc
rclb
popf
jl
pop
pop
inc
jns
test
xchg
imul
dec
decb
insl
dec
mov
lcall
dec
sbbl
dec
add
lods
in
xor
std
mov
push
sbb
push
cli
push
lods
add
jl
stos
rorl
mov
fnsave
mov
pop
insb
sti
jp
xchg
fstps
lret
fs
pop
and
jmp
push
arpl
push
xor
mov
dec
mov
pop
fwait
clc
inc
sbb
int
ja
pop
or
mov
jecxz
jb
iret
xor
push
sub
sub
arpl
nop
in
add
test
sbb
fcmovnu
mov
push
mov
xlat
shlb
mov
daa
xor
dec
mov
lds
cltd
push
pop
pop
jne
add
aas
pop
inc
pop
xlat
mov
jp
sahf
je
dec
mov
mov
xchg
ja
in
insb
adc
inc
jo
cwtl
loope
or
mov
adc
xchg
cmp
xchg
adc
or
mov
mov
sbb
movsb
repz
pop
mov
jmp
addr16
ja
jne
jne
lret
sbb
aam
test
pop
mov
notb
aaa
gs
in
sbb
and
leave
in
sbb
frstor
stos
sbb
mov
into
pop
push
dec
cmp
pop
aad
aam
inc
aas
data16
lret
movsl
bound
pop
dec
imul
jp
cmp
push
hlt
outsl
sub
das
rcll
xor
mov
inc
int
rcrb
pop
imul
bound
cld
in
imul
cmp
loopne
or
inc
js
add
cmp
jbe
cmp
xor
imul
pop
fcos
mov
and
sub
lods
jecxz
pop
pop
dec
outsb
mov
outsl
shlb
jns
xchg
popa
popf
pushf
scas
push
in
scas
outsb
aas
pop
movsl
jne
push
call
stos
movsl
repz
imull
cmp
nop
or
jae
nop
outsl
shl
add
mov
cmpsl
imul
incb
mov
cmp
dec
xchg
popa
fsubl
sub
fiaddl
adc
insl
ficoms
int3
dec
mov
call
or
lods
mov
daa
fnstsw
movsl
adc
cmp
cmp
xchg
mov
loopne
pusha
pusha
and
ror
and
cli
lods
pop
repnz
in
sub
sbb
jnp
jnp
arpl
adcl
xchg
xchg
xor
push
or
iret
dec
jecxz
test
xchg
adc
ret
sub
add
push
in
hlt
mov
lret
fildl
sti
dec
and
gs
je
push
loope
jmp
dec
add
pusha
fcoml
cld
mov
cmp
pop
sarl
add
xor
ret
mov
mov
adc
bnd
insb
xor
mov
jp
dec
jo
ret
dec
aam
jmp
xchg
repz
mov
addr16
cmp
mov
dec
cli
and
int
aas
adc
adc
repz
or
sub
imul
aam
dec
testl
sbb
dec
fldenv
cmc
pop
or
dec
shrl
or
mov
xchg
pop
xor
and
sbb
je
sbb
inc
stc
fdivs
imul
xchg
inc
or
stos
aas
push
gs
jge
add
inc
movsb
push
cmc
out
push
xchg
in
add
add
sahf
pop
in
inc
sbb
or
jge
inc
or
dec
sub
sarb
das
xlat
cmc
xchg
xor
mov
or
dec
push
pop
hlt
movsb
and
xlat
mov
stc
fisttpll
and
inc
jecxz
xlat
dec
dec
mov
ss
aam
ss
pop
fcoms
leave
out
cld
cs
add
adc
jge
mov
push
es
xchg
test
subl
popa
fmull
int3
hlt
movsl
ficomps
leave
rclb
add
fcmovnb
out
inc
pop
ds
add
scas
pop
into
xchg
sbb
into
jg
adc
and
insl
lods
or
push
pop
sti
mov
popf
jno
loopne
cmpsl
inc
inc
sarl
cs
mov
shrl
sub
popf
sti
mov
rcll
jge
sbb
and
fwait
add
or
or
xchg
cld
mov
mov
inc
shll
xchg
outsb
fidivrs
fisttpll
repnz
icebp
dec
lret
jbe
ja
pop
mov
lcall
mov
aam
xchg
pop
cmp
hlt
sarb
into
inc
imul
and
rcl
fs
insb
jp
cltd
adc
bound
clc
mov
clc
cmp
pop
xor
add
inc
mov
test
pusha
addr16
mov
loop
push
repnz
pop
jecxz
es
cmp
mov
add
push
ja
pusha
repnz
cwtl
scas
add
and
cmp
push
hlt
out
ret
sbb
test
or
scas
sub
mov
lea
sbb
mov
ret
xor
fldz
insl
add
scas
jmp
lods
cli
mov
pop
sti
repz
dec
fnstenv
and
xchg
cmp
inc
mov
lahf
push
xor
mov
clc
into
xchg
fisubs
popf
popa
fistpl
sub
iret
cld
lret
fmuls
push
jmp
pop
cmp
cld
scas
jmp
add
f2xm1
pop
mov
outsl
sub
mov
je
fldenv
or
dec
popf
aas
je
cltd
mov
inc
xor
push
aaa
xchg
repnz
xor
fdivrp
sbb
test
sub
loop
xchg
lock
mov
rep
and
mov
jns
fdivrs
iret
push
aas
push
rolb
xor
jp
or
jae
dec
sahf
pop
in
js
repnz
std
loope
push
or
lock
xor
mov
inc
mov
pop
push
inc
data16
xor
mov
cmp
into
inc
inc
out
mov
xchg
and
pop
repz
sub
jns
cmpsl
xor
notl
pop
jmp
das
lock
popf
popf
in
iret
movb
push
leave
or
frstor
mov
xorl
iret
jecxz
pop
cld
inc
mov
mov
adc
fwait
mov
lock
mov
aaa
icebp
dec
movb
xor
dec
in
stc
dec
adc
mov
adc
mov
rol
inc
imul
idivl
or
pushf
jmp
pop
scas
pop
aad
add
sbb
jle
xchg
sbb
fiadds
sbb
out
xchg
inc
and
testl
xchg
push
stos
mov
mov
inc
and
push
cwtl
dec
inc
xchg
int3
out
lret
or
cmp
mov
scas
inc
inc
pop
rorl
xchg
jb
cmp
xchg
add
or
shr
loope
jp
xlat
push
cmp
adc
out
xchg
jne
mov
jge
pop
and
pop
adc
ss
xlat
ja
popf
imul
inc
lahf
iret
clc
jne
mov
xor
or
out
adc
stos
scas
mov
daa
ficoms
lret
fistps
cltd
adc
jnp
mov
jge
add
mov
cmp
cwtl
loope
es
je
ret
cmpsl
push
mov
sub
loop
insb
stos
sbb
add
cmpsl
stos
cmp
push
shlb
fisubrs
inc
or
pop
mov
cmp
sub
adc
add
in
add
icebp
and
dec
push
add
sbb
fstl
fisubrs
icebp
add
mov
push
xor
jl
or
sub
adc
lods
mov
les
ds
inc
fnstsw
call
mov
add
or
xlat
pop
lcall
cmp
inc
dec
js
call
add
mov
leave
cmp
popa
andb
sbb
lea
je
pop
mov
push
int3
mov
ret
lret
mov
jne
insl
sti
mov
clc
mov
lods
cmpsb
and
dec
xchg
ret
popa
aad
imul
rorl
das
js
ret
adc
xchg
mov
test
movl
mov
sub
test
dec
mov
mov
test
pop
out
mov
cmpsl
and
shl
fs
out
push
cmp
lret
in
xchg
icebp
push
and
dec
push
push
insb
lods
lret
pop
fwait
rcrl
xchg
imul
jo
into
jecxz
mov
cld
jnp
fdivrp
jno
pop
xor
dec
sbb
hlt
mov
and
sahf
pop
test
inc
and
or
aaa
lret
xor
and
fidivl
fidivl
pop
rcl
xchg
lds
icebp
mov
nop
xor
xchg
ret
mov
cltd
lret
xchg
adc
data16
aam
in
scas
xchg
cmp
stc
mov
cmp
imul
icebp
pusha
loopne
pop
lcall
push
cmp
pop
dec
pop
aas
enter
fs
scas
pop
or
jb
xchg
cli
cmpsb
test
push
fistpl
jo
stos
orps
cli
loop
mov
pop
adc
cmpsl
movsb
cmp
dec
daa
arpl
dec
inc
test
or
and
cmp
je
in
xor
xor
xor
dec
mull
or
dec
jbe
inc
fmull
loop
jecxz
push
pop
out
pop
insl
into
addr16
adc
stos
or
xor
imul
shl
dec
and
or
mov
imulb
xchg
and
pop
xchg
lds
xchg
fidivrl
movsb
cltd
hlt
call
mov
out
push
outsb
or
loop
adc
and
aas
jns
js
sbb
mov
daa
loop
jecxz
sub
push
cmp
inc
inc
mov
adc
lret
mov
and
cmc
lock
add
push
mov
mov
sub
insl
or
aad
ret
in
shlb
mov
mov
in
mov
mov
shll
jmp
jecxz
mov
lret
addr16
or
stc
dec
outsl
xor
addl
pop
xchg
dec
pop
pop
mov
xor
and
fcoms
mov
xor
arpl
fadds
mov
ss
nop
sbb
bound
sbb
add
repz
addr16
into
test
out
inc
dec
mov
cmp
movsb
ret
sub
sub
jp
jp
das
mov
xchg
pop
loop
jl
in
cmp
movb
inc
mov
push
fdivs
pop
mov
mov
mov
inc
jne
insl
sub
and
mov
out
inc
pop
mov
push
sahf
xor
push
loopne
xchg
repz
push
addr16
stc
in
pop
push
xchg
mov
sbb
mov
call
and
cmp
cwtl
xchg
adc
or
push
lds
in
and
add
enter
push
lret
addr16
add
iret
jo
xchg
nop
popa
aam
fcmove
mov
clc
push
mov
pop
aas
out
pushf
mov
or
sbb
jno
out
in
sbb
mov
lods
fstps
xchg
cmp
jg
pop
mov
adc
jle
push
shll
sbb
xor
int
sbb
mov
int
mov
cmp
jne
xchg
cmp
sbb
xchg
pop
lret
push
mov
mov
mov
loope
mov
mov
xchg
dec
jp
sub
mov
add
xor
insl
insl
rolb
fs
pop
push
cmp
aam
push
out
lock
cmpsl
push
adc
addr16
mov
pusha
sbb
shlb
xchg
push
call
or
jl
into
mov
lret
dec
inc
ror
xchg
jno
out
jae
xor
je
xor
push
and
pop
dec
mov
push
mov
sub
shl
scas
sub
pop
jg
adc
inc
mov
cwtl
fs
jmp
xchg
in
jnp
pop
js
pop
leave
arpl
ss
je
repnz
test
inc
or
inc
clc
mov
outsl
or
or
stos
movsb
mov
jmp
sbb
shll
mov
insl
sub
push
scas
shrl
mov
lret
or
out
adc
out
cmp
cmp
cmp
loope
or
lds
sbb
mov
lcall
inc
add
sub
add
repz
xor
mov
repnz
xchg
pushf
pushf
cmp
sar
pop
xchg
out
aas
add
fdivs
arpl
add
loope
pop
mov
dec
sti
fs
stos
jg
pop
arpl
jecxz
dec
pop
sahf
mov
repnz
push
pop
test
add
xlat
cmp
push
dec
and
scas
push
js
xor
push
mov
jmp
enter
mov
xor
cs
and
add
enter
arpl
rorl
mov
loop
daa
cli
sub
push
and
dec
push
sub
dec
cmp
test
sbb
faddl
mov
jbe
ds
lds
mov
shrb
mov
aas
or
mov
dec
mov
sbb
sub
mov
xchg
scas
mov
jle
push
mov
gs
int
fstpt
fucom
jecxz
jns
int
or
push
movb
pop
mov
mov
jo
cmp
and
and
push
jp
sbb
fsts
jnp
popa
popf
inc
or
inc
pop
push
popa
rcrb
adc
jnp
sahf
fldenv
jns,pn
inc
lret
add
jle,pt
movb
mov
adc
pop
or
insl
sub
mov
outsl
xchg
mov
lret
outsl
les
add
mov
fcoml
sbb
inc
mov
inc
inc
repnz
inc
std
sub
pop
push
sbb
fs
in
xchg
cmp
mov
cmpsl
mov
cmp
lret
pop
push
scas
cmp
movsb
jbe
cwtl
push
mov
and
movb
mov
pushf
xor
dec
lret
xchg
imul
test
and
mov
cmp
aad
pop
or
fucomip
cltd
push
jp
adc
pop
cli
rcl
sub
mov
daa
dec
and
repnz
insl
xchg
push
loope
adc
sbb
andb
cmp
dec
push
pop
mov
loopne
xor
cld
out
gs
call
subb
inc
mov
subb
pushf
cs
adc
ss
cmp
xchg
xor
mov
xor
adc
mov
add
out
mov
jp
cmp
rcrl
iret
pop
mov
mov
scas
pusha
inc
xchg
sahf
adcb
test
mov
mov
jb
xchg
and
test
or
mov
push
cmpsb
push
sbb
data16
mov
lahf
repnz
lds
inc
dec
sub
xor
lods
hlt
int3
mov
adc
inc
les
lcall
sbb
mov
cmc
push
pop
dec
jae
xor
jmp
push
mov
hlt
add
cwtl
dec
xchg
or
sbb
pop
lcall
jge
sub
and
xchg
jo
loope
arpl
push
daa
sub
out
mov
jle
mov
fwait
ret
push
jmp
divl
jg
lock
sbb
pop
sub
jecxz
ret
sbb
inc
or
cmc
lock
adcl
popf
xchg
pusha
cltd
and
imul
in
lret
or
jae
je
mov
lea
sbb
bound
mov
jmp
shl
and
mov
fidivl
or
or
scas
aad
jno
cmp
aam
aam
xchg
xor
xor
inc
and
mov
mov
jle
fdivl
std
sbb
sti
popa
negb
subl
fidivl
clc
and
xchg
sarl
jo
out
add
mov
andb
xchg
push
and
xchg
or
cld
subl
cmp
push
lahf
loope
inc
pop
push
daa
fsubs
xor
and
sub
into
jl
outsl
push
adc
imul
pop
jle
mov
lret
aam
arpl
push
push
dec
adc
xlat
int
xchg
cmc
or
addl
gs
jge
test
sbb
mov
es
push
mov
xor
imul
mov
lret
scas
out
gs
inc
sti
hlt
pop
cli
lret
mov
or
ret
xchg
sbb
mov
xchg
lcall
push
xchg
out
out
dec
outsb
out
in
mov
arpl
imul
sti
das
xor
aas
jecxz
xor
arpl
shll
jle
ljmp
mov
sbb
aad
push
les
xchg
cmpb
jecxz
fnstcw
fbstp
pop
iret
jnp
add
dec
adc
mov
fisubrl
lcall
jmp
cmp
push
xchg
mov
scas
cmpl
xchg
mov
loop
xor
lods
aaa
mov
andb
scas
cmpsl
out
pop
clc
lods
xor
xchg
push
and
movsl
push
ljmp
jg
mov
mov
inc
aas
fsts
push
adc
jmp
imul
cmpsb
sbb
mov
fldcw
fcoms
ds
dec
popf
aam
mov
push
xor
lds
or
push
push
scas
int
jno
and
xchg
jb
cmp
movsb
aad
mov
dec
sbb
out
mov
lods
std
mov
in
dec
int
add
pop
push
test
nop
and
jns
pop
jne
jge
stos
jae
and
call
mul
lret
das
iret
nop
arpl
inc
fadds
sbbl
ja
jmp
call
shll
ljmp
mov
lea
xor
jb
outsb
and
lahf
out
xchg
je
cmp
sahf
and
xor
or
in
cmp
mov
dec
mov
movsl
iret
sbb
xchg
ja
mov
stc
push
jnp
fidivrs
dec
imul
popa
sub
addr16
mov
lods
pop
jno
mul
xchg
jne
pushf
xchg
inc
dec
push
movl
repnz
out
testl
xor
in
xchg
inc
loop
loop
ficoms
in
or
fwait
cmp
and
inc
push
pushl
mov
xor
loope
lds
ds
scas
loopne
fnstcw
and
sbb
jg
addr16
cmp
fsubs
cmp
insl
sbb
add
flds
jne
ss
sbbl
dec
aas
stc
inc
add
iret
dec
idiv
aam
mov
outsl
sub
sbb
pop
fiaddl
std
mov
inc
arpl
adc
sbb
mov
aas
xchg
out
cmpsb
mov
push
lea
or
enter
ficoml
xchg
or
jle
jp
in
lret
xchg
push
cmp
movsl
out
test
cmp
lods
outsl
ret
pushf
add
xchg
cmp
pop
fwait
inc
dec
stc
andl
inc
push
cmp
incl
mov
push
stos
dec
sbb
jne
out
cli
jns
int3
pop
cwtl
sahf
jl
fldt
push
out
inc
loop
movb
xor
pushf
push
mov
out
adc
push
inc
sahf
xchg
or
sti
xor
aad
pop
push
pop
lahf
out
icebp
fs
arpl
mov
lret
push
adc
out
xor
filds
pop
sbb
and
cmp
jb
xor
insb
sub
jno
gs
adc
cmpsl
mov
and
pop
call
sti
pop
dec
mov
push
pop
fwait
push
pop
movsb
shrl
lds
inc
mov
stos
cs
lock
aad
mov
jo
gs
cltd
push
and
aad
rorb
cmpsb
icebp
mov
mov
jp
pop
fiaddl
cmp
dec
xor
cmp
out
add
cmp
sub
insb
out
loopne
outsl
pusha
loope
mov
mov
mov
lret
jmp
push
scas
cltd
sahf
fs
outsb
mov
pop
xchg
aas
scas
orb
inc
xor
xor
outsb
cltd
and
imul
sub
fnstcw
pop
hlt
dec
sub
int
adc
inc
repnz
movsl
aaa
aad
and
lock
add
je
add
add
mov
add
mov
dec
push
xchg
adc
cmp
xchg
jno
out
inc
cwtl
into
test
dec
ss
jne
jmp
jmp
fdivl
sti
out
stos
adc
mov
lds
inc
fwait
test
inc
in
mov
push
cmp
dec
inc
insl
xchg
arpl
adc
mov
repnz
stc
out
stc
or
in
add
dec
mov
xor
or
jns
push
int3
xor
sub
fidivrs
mulb
adc
xchg
sub
sbb
call
out
ret
jo
pop
les
rorb
inc
inc
cmc
jb
mov
cmp
pusha
in
ret
push
leave
test
dec
jle
mov
xor
add
lock
jo
xor
xchg
into
sahf
mov
xor
jo
clc
addr16
dec
push
mov
fimuls
aad
jle
dec
in
pop
jg
dec
icebp
dec
pop
sbb
arpl
pop
pop
shll
inc
sarb
and
pop
lods
scas
in
dec
outsl
push
icebp
adc
and
xlat
mov
pop
stc
pop
mov
sub
cld
mov
xchg
mov
lock
test
inc
pop
push
mov
xor
in
inc
arpl
pop
sarl
jnp
pop
mov
xlat
fdivrl
sub
mov
jnp
xor
cwtl
pushf
xor
in
frstor
mov
cmp
mov
jl
jp
cmpsb
fisubs
and
rclb
gs
inc
pop
mov
insl
arpl
dec
xor
and
movsl
shlb
stos
int3
imul
rclb
cmp
fwait
adc
dec
aad
add
pop
or
iret
xor
addr16
jno
out
lods
xlat
imulb
jge
popa
sbb
sub
xor
push
mov
cld
gs
push
lds
mov
jo
xor
frstor
fistpll
imul
push
cli
xor
cmp
sbb
cmp
out
sahf
jbe
mov
push
jbe
arpl
sbb
shll
mov
testb
mov
out
mov
js
sub
sti
and
dec
pop
fistps
clc
pop
imul
dec
sub
into
xor
test
push
pop
in
fs
mov
pop
or
test
xchg
xchg
jae
xchg
jns
xchg
loop
cltd
outsl
in
xor
sbb
inc
or
fisttpl
and
lahf
push
andb
inc
pop
or
sbb
testl
popa
pop
and
add
fisttpll
stos
pop
cli
rdmsr
inc
gs
lods
mov
mov
sbb
test
dec
jl
imul
and
xchg
call
push
cmpsl
xchg
aas
dec
test
insl
mov
and
sbbb
int
cmp
lods
movsb
pop
jae
xor
int
imul
fsts
lock
cmp
dec
int3
xchg
mov
stos
loope
test
shr
adc
out
shll
fidivrs
inc
aas
jp
cmp
cwtl
pop
aam
push
hlt
ljmp
push
inc
dec
mov
and
in
mov
jb
psrad
cmpsl
cmpsl
push
pop
inc
int
cld
inc
in
das
pop
lds
push
pop
xchg
push
test
rolb
nop
mul
adcl
push
xchg
add
xor
dec
push
movsl
outsb
cmpsb
or
lods
data16
lcall
mov
cmp
dec
out
pop
cld
lock
in
sbb
mov
pop
test
push
jno
inc
add
jl
dec
sub
mov
cmp
xchg
in
xchg
sbb
inc
aaa
inc
xor
mov
cmpsb
lret
xlat
sub
cwtl
in
leave
mov
add
mov
add
int
popa
cld
std
mov
sub
cmp
xor
cmc
nop
push
aaa
push
jo
push
fcmovne
mov
sub
mov
xchg
adc
mov
sbb
ljmp
movsb
iret
ja
add
inc
mov
inc
sahf
fcom
inc
push
shl
xchg
mov
lret
movsb
js
jae
xchg
repnz
mov
jne
negl
sbb
test
stos
ret
mov
je
mov
or
shr
sub
push
hlt
xor
mov
test
xchg
sub
nop
pop
dec
add
xor
xor
cmp
ja
int3
push
in
ret
aad
leave
daa
loop
sbb
sub
shll
jbe
iret
xor
push
push
bound
mov
ss
fbld
mov
mov
sub
imul
scas
push
inc
in
mov
scas
jl
int
fwait
or
push
loopne
xchg
filds
mov
and
sbb
fldenv
cwtl
fidivrs
aaa
push
mov
push
mov
inc
jbe
add
dec
mov
rorl
out
int3
jmp
test
and
and
int
loope
jne
cmp
cld
mov
xchg
daa
sbb
mov
int3
mov
lahf
push
xor
aad
add
andb
clc
andl
sbb
push
xor
xor
and
add
enter
push
out
dec
roll
jnp
pop
inc
rorb
inc
dec
and
mov
cmp
mov
push
mov
xchg
jg
dec
data16
pushf
cld
mov
repnz
sub
inc
shrl
mov
jl
jb
jmp
jns
adc
ds
mov
jp
or
pop
shl
inc
fcoml
hlt
sub
and
sub
xchg
fstl
cli
cmp
call
fistpl
mov
cmp
jecxz
push
testl
popf
adc
lahf
mov
jp
xchg
add
sbb
sub
add
adc
cli
mov
dec
inc
sahf
outsb
dec
jmp
push
dec
fldcw
nop
add
addl
cld
rorl
add
dec
pop
fisubl
dec
mov
dec
test
in
adc
roll
pusha
mov
add
lcall
inc
mov
pop
icebp
sub
out
or
shlb
xor
dec
gs
cmp
lea
push
loop
or
je
pop
jg
aaa
cmp
xor
mov
dec
fdivr
pushf
adc
sub
mov
fisttpl
and
adc
outsb
mov
ret
fdivs
div
mov
je
or
mov
aam
and
inc
inc
cmp
and
lahf
adc
cmc
cmpsb
xor
inc
lahf
mov
bound
pop
addb
pop
xor
or
movl
pop
add
arpl
test
jo
mov
insl
jg
sub
cltd
push
sbb
cmp
aaa
xchg
xchg
add
cmp
jb
int3
cmc
mov
outsl
sbb
xor
clc
xor
dec
enter
and
outsl
or
dec
xlat
stc
dec
and
mov
iret
repz
sbb
bound
mov
sbb
iret
lret
push
lock
in
fcmovbe
sbb
pop
outsl
cltd
pusha
and
or
or
sub
fs
mov
mov
outsl
imul
ror
rcrb
cwtl
nop
fstl
jecxz
das
jb
pop
add
bt
stc
loopne
mov
push
mov
daa
fwait
push
ds
subb
subb
cli
shlb
cmpsb
jo
js
lds
stos
dec
pop
add
push
daa
out
jp
push
shll
int
in
dec
out
jbe
ja
out
push
cmc
inc
fwait
dec
inc
rolb
adcb
jp
xchg
push
mov
sahf
cmp
inc
add
xchg
stc
mov
cmp
pop
inc
push
sub
outsb
std
add
andb
push
arpl
loope
test
leave
push
mov
jb
adc
dec
mov
mov
mov
mov
cmc
inc
into
pop
cld
sub
add
xchg
xchg
dec
aaa
loop
call
mov
xchg
rol
adc
xchg
jno
xchg
push
dec
mov
inc
jnp
out
cwtl
push
stos
jmp
enter
cmp
aam
into
stos
sub
int
stos
mov
into
fidivl
cmp
out
rcrl
testl
call
stos
push
pop
ljmp
lret
cmp
xchg
add
xchg
lea
test
fwait
dec
inc
push
dec
fcompl
push
lcall
je
addl
mov
dec
or
loop
mov
fistpl
femms
cmp
fildll
mov
call
or
or
test
adc
inc
lods
lret
fwait
mov
adcl
js
jp
out
inc
dec
call
jmp
mov
mov
push
inc
or
sbb
sbb
outsl
faddl
arpl
andb
xchg
xor
punpckldq
dec
lods
dec
ret
test
je
enter
mov
jae
ljmp
cmp
xchg
mov
xor
cs
jae
lcall
xor
lods
mov
fwait
mov
dec
fwait
es
into
stos
test
cltd
stos
lock
gs
lahf
mov
adc
inc
pusha
xor
aaa
pop
and
add
push
sbb
outsb
push
lcall
add
ss
or
mov
shlb
add
mov
inc
cs
and
xor
mov
aad
inc
xchg
mov
jge
out
fucomp
mov
fisttps
jo
leave
fcoms
mov
notl
add
or
sub
mov
fnsave
xor
aas
dec
and
ret
sub
notl
fisubl
lret
xchg
pop
sbb
cmp
add
xor
mov
push
in
sub
sbb
sbb
je
ljmp
mov
cld
or
les
fdivrs
mov
cmp
add
cs
adc
scas
fidivs
outsl
mov
mov
adc
jp
cmp
gs
adc
test
xor
dec
add
jnp,pn
xchg
xchg
addl
push
add
mov
adc
xchg
adc
mov
leave
push
imul
out
cld
test
lahf
xor
adc
inc
pop
dec
push
sbb
sti
pop
push
pop
test
inc
push
add
pop
jl
or
jg
mov
and
jge
pop
inc
out
call
or
pop
lret
imul
leave
repnz
out
mov
in
push
add
push
add
sub
gs
jl
test
xchg
mov
xor
mov
fistl
sbb
dec
stos
out
js
push
cs
cmc
and
inc
mov
inc
pop
mov
adc
insb
int3
mov
rcll
mov
dec
inc
jp
fwait
jb
mov
into
pop
fldl
xchg
inc
pop
jae
inc
xlat
ljmp
rcll
lods
insl
ss
inc
xchg
lods
mov
scas
add
stc
mov
mov
ja
dec
xchg
aas
imul
dec
push
enter
cltd
cmp
lret
push
in
cmp
inc
push
test
les
sti
sub
sbb
mov
cli
xchg
add
mov
imul
enter
fucomip
insb
mov
cmpsl
lcall
mov
pop
add
test
fs
xchg
pusha
lcall
out
cwtl
jl
or
xor
int
mov
pop
cmp
loop
sub
push
addr16
push
xchg
aad
fisttpll
ror
ljmp
mov
nop
mov
xchg
inc
repz
movsb
stos
xlat
mov
rcll
mov
xchg
arpl
das
lcall
notb
mov
int
jmp
xchg
insb
inc
push
js
sub
shrl
test
iret
adc
popf
sbb
dec
lahf
int
lods
daa
mov
cmp
mov
jge
pop
mov
sbb
test
jecxz
mov
insl
and
pop
sub
push
push
mov
inc
push
sbb
mov
call
jo
cld
mov
fnsave
test
call
fidivrs
cmc
clc
cmp
adc
rcr
cltd
xchg
jbe
pop
arpl
xchg
adc
cmp
ja
push
and
ret
push
stos
cmc
daa
out
fwait
out
ja
pop
mov
jp
add
jmp
lds
pop
and
subb
shlb
cmp
fwait
xor
repz
mov
cltd
mov
push
fdivrl
pop
add
addr16
pushf
or
cmc
icebp
insb
mov
lcall
cltd
adc
xorl
cmp
push
jp
inc
push
das
movb
inc
ss
mov
xchg
dec
ds
mov
and
xchg
jle
sub
scas
outsl
pop
mov
add
push
incl
cmp
mov
jns
sbb
mov
mov
jmp
sbb
cmp
repnz
es
push
or
mov
mov
adc
jp
xor
add
inc
test
ds
or
pop
stc
cmp
scas
mov
mov
inc
xchg
adc
movb
pop
imul
and
push
arpl
int
fnsave
and
cmp
divb
cs
pop
les
imull
and
xor
hlt
add
rclb
imul
mov
mov
gs
jbe
dec
xlat
cmpsl
addr16
iret
movsl
xchg
jo
push
outsl
call
test
cmovp
xchg
test
je,pn
sahf
test
mov
popa
mov
aaa
imull
push
in
imul
aaa
imul
insl
cmpsl
xor
or
mov
pop
xchg
pop
pop
xor
test
mov
insb
mov
rorl
dec
lock
jg
pop
jo
xor
lds
cwtl
mov
push
and
outsl
and
mov
dec
call
lret
scas
jns
add
fwait
xor
std
cmp
jb
scas
or
push
add
pop
inc
out
fimuls
inc
movl
dec
test
mov
enter
push
lods
lcall
std
fbld
divb
popf
repnz
xchg
cli
inc
and
dec
pop
push
push
repnz
ljmp
int3
mov
mov
push
xchg
add
repnz
pop
mov
out
sub
mov
mov
xchg
jb
shrl
ljmp
add
pop
or
xor
idivl
pop
mov
popa
xchg
ljmp
add
scas
mov
xchg
pop
ss
and
outsb
ret
pop
xchg
jp
push
es
sti
or
nop
into
add
scas
jbe
insb
push
and
xor
mov
fisttpl
mov
pop
pop
inc
movsb
jle
push
ds
stc
cmpsb
inc
push
and
js
popa
jno
xchg
push
adc
inc
xchg
decb
leave
cmp
inc
shll
xchg
jl
fcoms
cmpsl
push
out
addr16
lgs
faddl
stos
inc
sbb
push
shld
xor
jae
leave
adc
fsub
add
into
adc
repz
stc
daa
jmp
aam
or
movsl
fcoms
cmp
ja
xor
sub
jle
pop
mov
lahf
cmp
mov
mov
push
jnp
mov
test
push
cmc
sub
jo
inc
pop
inc
mov
cmp
push
cwtl
stc
adc
cmp
cltd
fucomp
push
fmull
dec
push
cld
lret
clc
test
inc
sub
mov
dec
dec
leave
stos
test
leave
sbb
and
add
in
inc
jp
xor
and
orps
out
xchg
xchg
adc
pop
les
inc
gs
pusha
and
mov
jl
pusha
lcall
pop
je
lock
lcall
mov
cli
lret
mov
mov
or
dec
lahf
iret
fwait
push
xchg
lret
outsb
xor
cwtl
mov
les
rcl
sub
mov
out
cltd
jmp
mov
push
mov
fimuls
and
cs
adc
or
ljmp
cmp
dec
sub
xlat
jg
cwtl
in
add
dec
mov
adc
into
subl
rorb
jecxz
stc
or
lret
lret
iret
aaa
cmc
lret
sub
pop
jnp
cmp
ss
mov
push
pop
inc
mov
test
push
xchg
jg
dec
or
inc
je
out
sub
loopne
fnstsw
push
jmp
jle
xchg
pop
enter
push
push
adc
inc
adc
push
sub
in
outsb
mov
jne
sbb
and
ja
in
imul
lods
orl
aad
xor
and
mov
mov
cmc
adc
in
xchg
and
xor
mov
repnz
dec
pop
jbe
jne
and
sub
mov
sub
jge
lds
pop
les
sti
ja
jl
sub
movsl
adc
mov
cmpsl
dec
or
subb
je,pt
pop
push
cmp
add
out
and
mov
xlat
xor
jno
repnz
mov
scas
adc
xor
sbb
inc
push
inc
mov
into
push
into
into
shl
repnz
xchg
orb
lock
push
and
nop
cmp
mov
add
xchg
adc
mov
cmp
cwtl
pop
or
or
xchg
repz
lock
jnp
inc
xor
loopne
mov
or
mull
leave
or
cmp
sbb
pop
out
inc
sbb
mov
je
sub
dec
pop
std
enter
mov
cmp
mov
fsubl
test
out
mov
push
inc
mov
mov
sub
hlt
mov
dec
add
outsl
sbb
inc
xor
imul
in
fs
movsl
test
pop
add
xor
jns
aaa
cmp
jnp
int
xor
pop
adc
fildl
xchg
add
fildll
pop
int3
int3
add
xor
jnp
pusha
sub
push
cmovp
popf
test
mov
mov
lea
jg
mov
mov
sbbl
xlat
or
std
pusha
addr16
outsl
mov
fisttps
inc
jnp
jmp
add
cmp
mov
ret
out
mov
jmp
nop
lock
in
mov
or
jae
fsubs
popa
and
and
add
into
mov
ret
push
inc
rcrl
dec
push
push
xor
in
mov
or
jp
les
pushf
push
mov
push
cmp
fwait
jecxz
mov
icebp
pop
loop
pusha
fsts
xchg
or
sbb
lret
mov
inc
jmp
sub
adcb
orl
cli
mov
shll
sub
pop
cmp
jnp
movsb
or
gs
mov
enter
jns
jnp
rcrb
dec
repnz
jp
rcll
mov
popl
cmc
je
or
fsts
test
xor
jns,pt
pop
aad
imul
add
pop
inc
adc
roll
mov
fnstsw
mov
cmp
inc
jle
popa
and
shlb
sub
and
sub
jg
fdivrs
or
jb
shrb
or
inc
pop
insl
cld
lret
add
push
adc
pop
mov
push
or
inc
inc
cmc
push
testb
mov
jge
xlat
pop
mov
jmp
mov
pop
jno
and
in
pop
gs
lahf
sarl
add
jns
jecxz
and
jmp
and
cwtl
jbe
adc
outsl
cltd
lock
xlat
aad
cs
mov
js
popa
xor
out
sahf
in
sbb
sbb
in
lea
clc
lahf
sub
loop
pop
divl
ret
dec
dec
fnstcw
popa
pop
inc
dec
mov
pop
lcall
sub
sbb
sub
pop
cli
mov
dec
outsb
int3
adc
in
aaa
mov
fwait
mov
lcall
push
hlt
sbb
movsl
lret
sub
data16
pop
xchg
mov
mov
cmp
or
sub
dec
pop
inc
mov
aad
in
fildll
sti
jp
sbb
andl
lahf
mov
push
sub
pop
push
sub
jmp
ficompl
cmpsl
sub
out
arpl
mov
sarl
dec
jb
mov
fisttpl
adc
popf
and
pushf
rcll
add
incb
insb
jle
jno
fstps
push
xchg
xchg
insb
sbb
lods
inc
cltd
jle
jb
mov
cmp
stos
lahf
add
push
sub
pushf
in
xor
orl
pop
cmpsb
xor
nop
int3
cli
push
pop
dec
iret
adc
sti
xchg
lret
stc
in
scas
arpl
js
dec
js
mov
sub
jns
daa
mov
inc
jbe
cs
xchg
xchg
ja
jbe
xor
clc
xchg
push
iret
push
adc
fdivp
mov
dec
stos
gs
sub
and
mov
cmc
test
das
push
bound
jae
mov
imul
or
in
push
dec
cmp
inc
xchg
mov
mov
sub
xchg
pop
jb
and
xor
inc
femms
mov
push
mov
pushf
in
xchg
mov
lret
das
mov
mov
aas
aad
fsubrs
inc
loopne
repnz
sub
push
fdivs
sub
popa
stos
mov
daa
test
rcr
mov
nop
pop
mov
ja
out
cltd
aad
add
sub
sahf
fisttps
inc
sub
dec
inc
sbb
sub
fmulp
cmpsl
inc
repnz
cli
repnz
push
xchg
cmpb
jno
jp
jle
insl
adc
pop
jne
nop
jl
mov
imul
fistpll
out
add
xlat
mov
loop
and
xchg
loop
stos
cmp
dec
dec
clc
movsl
int3
jp
dec
dec
xor
and
sub
fcoms
dec
pop
imul
add
cwtl
dec
lock
mov
cmp
jo
std
test
cmp
mov
dec
xor
pop
push
push
or
adc
sub
mov
lea
dec
insb
jno
mov
push
and
or
push
mov
test
cmp
xor
cld
mov
mov
outsb
mov
lret
test
pop
mov
int3
sbb
dec
jae
orb
mov
mov
pop
sub
xchg
das
and
jecxz
dec
and
mov
test
xchg
or
add
mov
pop
xor
das
mov
iret
aas
xor
fstps
jnp
xchg
lret
cs
mov
das
je
imul
test
adc
ja
or
or
push
xchg
in
lods
jne
fistps
lahf
fs
stos
fldenv
sbb
sahf
push
ret
in
int3
ret
push
sbb
mov
out
sbb
cmp
xchg
push
inc
fdivl
in
xchg
loopne
aaa
stos
mov
xor
xor
ficompl
xor
push
push
add
mov
mov
scas
mov
xchg
sbb
js
jmp
int
je
popf
mov
out
decb
add
hlt
sbb
ds
push
cmc
ss
xlat
ret
in
sub
and
push
lock
shrl
push
push
and
dec
mov
mov
push
fs
push
hlt
sti
stos
adc
xchg
iret
out
stc
inc
inc
dec
scas
mov
je
les
xchg
push
ja
loope
test
or
div
fldenv
adc
push
xchg
pop
out
xchg
cmp
cmc
xlat
loope
cmpsl
adcb
daa
inc
jmp
out
cmpsl
sahf
lahf
cmovns
adc
daa
xor
mov
repz
lcall
testl
pop
push
inc
xchg
push
mov
inc
fnstcw
dec
fdivrs
sub
repnz
mov
dec
sub
jp
jle
out
pop
xchg
fisubrs
ud0
and
out
out
jo
shlb
rcrb
into
insb
repz
mov
or
sti
sbb
mov
push
jmp
pop
movsl
add
sub
loop
nop
pop
inc
jl
add
push
dec
xor
pusha
xchg
sbb
loopne
and
imul
adc
jecxz
faddl
fdivs
sub
sarb
repz
xlat
lret
ret
outsl
xchg
sbb
adc
push
fs
dec
xchg
shll
sbb
out
fldt
popf
imul
sbb
xchg
das
lret
not
or
jg,pt
aam
push
adc
lock
xchg
pop
dec
fninit
popa
cwtl
fstps
in
dec
jnp
pusha
mov
add
sti
sub
pop
sub
jnp
mov
std
lret
cs
xor
xor
repz
inc
mov
xor
cmpsb
jl
arpl
inc
mov
imul
add
aad
push
cwtl
gs
ret
or
aas
out
cmpl
inc
cmpsb
sbb
sub
push
mov
stc
stos
shll
daa
int3
pop
lods
or
cmpsb
lods
mov
aas
xchg
imul
lret
leave
push
imul
xlat
xor
push
mov
mov
loop
aam
pusha
movsb
lods
das
and
repnz
les
mov
pusha
jmp
sbb
mov
cmp
pusha
and
cwtl
lahf
sahf
cmp
add
dec
movsb
sbb
call
out
adc
mov
fsubrp
jl
sbb
outsl
add
mov
sbb
dec
pop
push
xor
jecxz
mov
pop
xor
pop
mov
push
loop
xchg
pusha
dec
cmp
imul
add
xor
lcall
jmp
aaa
sub
and
push
jo
mov
icebp
movsl
cmpsl
lret
scas
insl
scas
mov
jae
mov
pop
lcall
inc
jo
mov
inc
maskmovq
divl
mov
jp
and
in
test
in
push
lods
mov
pop
push
or
loopne
pop
test
adc
mov
cmc
or
rolb
mov
inc
stc
stos
pop
mov
fadds
cmpsb
test
push
inc
test
in
mov
out
adc
pop
out
sub
pop
xchg
pop
icebp
sbb
mov
sub
push
pop
dec
das
mov
push
ret
sbb
inc
mov
push
cltd
mov
add
or
jp
mov
dec
sub
js
or
and
lods
lret
shl
xchg
xchg
and
add
mov
xor
int3
bound
pop
mov
fnstenv
testl
mov
sbb
or
jnp
jbe
adc
pop
mov
sbb
fcoml
cmc
lods
daa
ja
add
bound
add
sub
mov
mov
and
ljmp
jb
mov
xchg
movsb
push
int3
rep
sub
mov
out
jl
mov
stos
or
push
popa
mov
imul
in
arpl
sbb
jp
js
jb
aad
ss
shlb
in
outsb
lea
jle
pop
mov
stos
cltd
pop
mov
and
dec
pusha
mov
jae
pop
jmp
repnz
jle
insb
xchg
cmc
loop
xchg
dec
jnp
icebp
pop
and
mov
sub
stos
insl
xchg
push
xlat
lods
adc
jp
es
mull
adc
cld
push
in
jno
pop
rorb
aam
add
std
pusha
add
cmpsb
or
lds
icebp
in
aaa
push
inc
fwait
push
xchg
sub
jbe
cmp
xor
and
adc
adc
sub
xchg
push
js
xchg
mov
movl
cmp
subl
fisttps
aas
mull
cmp
jne
jl
stc
pop
mov
mov
movsl
cltd
or
xchg
inc
lea
mov
jns
add
rolb
popf
cmp
xchg
jae
ss
nop
loopne
decb
fdiv
cmp
in
sub
in
loope
ljmp
inc
adc
jg
or
cwtl
sub
pop
xlat
pop
iret
out
push
cld
push
lcall
repnz
xlat
xor
adc
ljmp
xor
xor
pop
popf
cmp
push
leave
icebp
jno
ljmp
jg
mov
jne
loope
cmp
repnz
inc
xor
and
xchg
sbb
insb
fdivl
je
loope
jle
out
fisubrl
cmp
cld
and
inc
ja
sbb
cmp
push
dec
popa
xchg
std
xchg
sbb
mov
lods
inc
dec
cmp
jbe
std
gs
cmp
and
pop
or
inc
jp
mov
pop
aas
and
mov
xor
jnp
outsl
push
sbb
sbb
push
xor
repz
ds
xchg
test
leave
mov
test
scas
dec
popa
dec
in
mov
xchg
dec
jb
add
and
scas
mov
repnz
add
jp
mov
mov
sub
lea
cmp
or
pop
std
xchg
loopne
fiadds
cmp
rcrl
xor
xor
dec
jl
mov
sar
sbb
mov
cmp
ja
cli
popf
mov
out
ret
js
sbbl
push
call
imul
mov
cmpsl
inc
movsl
and
mov
mov
adc
mov
test
mov
adc
and
orb
mov
outsl
pushf
rcll
aaa
mov
jg
and
aas
icebp
lret
mov
or
adc
inc
xor
std
sbb
mov
outsb
call
mov
inc
inc
int3
and
test
mov
mov
cwtl
mov
jbe
cld
mov
pop
aas
mov
bound
jne
xchg
mov
mov
xor
xchg
mov
les
int
push
mov
inc
dec
fs
dec
dec
dec
in
xlat
inc
sbb
in
orb
mov
mov
loope
mov
lcall
push
shll
push
lcall
or
sub
je
fs
push
pop
jo
cld
xor
hlt
or
or
jae
loop
hlt
dec
push
nop
hlt
fbstp
leave
pop
mov
push
fdivs
gs
test
iret
arpl
pop
dec
xor
call
shl
pop
add
mov
data16
mov
int3
xchg
repnz
sub
push
imul
sbb
lock
mov
or
mov
push
cmp
imull
add
dec
pop
dec
mov
cltd
push
ljmp
jmp
inc
or
ret
mov
je
popf
ds
shll
mov
imul
lcall
push
out
clc
fisubrl
jno
and
call
inc
push
in
jg
xor
lock
mov
leave
and
lds
push
outsb
jb
cmp
addb
ss
xchg
hlt
ficoms
adc
mov
call
cmpsb
xchg
popw
sbb
add
fisttps
outsl
int3
test
mov
pop
cmp
mov
loope
push
cmpsl
push
popa
adc
cld
sti
mov
ds
out
dec
adc
sub
loopne,pn
jmp
lock
arpl
test
jmp
hlt
add
sbb
push
mov
mov
test
sub
insl
addr16
jb
out
jg
xor
push
inc
ror
mov
arpl
test
inc
in
push
lahf
insb
xchg
popa
sbb
je
jp
inc
inc
pop
bound
xchg
xor
mov
das
push
and
inc
cs
mov
ds
repz
sahf
mov
adc
cmp
mov
popa
xor
loopne
mov
adcb
mov
nop
fimuls
fwait
cmp
ljmp
push
jo
push
cmpsb
dec
dec
iret
lods
mov
jb
cmc
repz
aaa
pop
xchg
lea
loope
bound
cs
and
cmp
pop
jmp
fstl
cmp
cmc
add
mov
push
push
mov
cmp
jo,pn
cmp
fidivrl
xor
js
out
jne
xchg
orl
mov
out
test
lods
pop
xor
stc
inc
es
mov
mov
lea
fistpll
adc
dec
dec
xchg
push
call
pop
xchg
shrl
adc
sub
rol
imul
adc
sub
repz
fmuls
pushf
call
sub
out
nop
inc
inc
xor
xor
xchg
and
pop
adc
mov
dec
pop
mov
lret
pusha
xor
inc
sub
dec
xchg
inc
push
sbb
scas
xlat
cmp
lds
inc
or
push
ljmp
out
int3
pop
mov
loopne
pop
mov
aas
pop
dec
gs
int
jmp
cmp
iret
mov
mov
xchg
repz
jl
xlat
mov
cmpb
testb
in
out
push
lcall
je
or
fcoml
xchg
or
mov
imul
repz
mov
stos
mov
les
xlat
add
mov
ja
cli
fwait
add
nop
fcomps
loop
popl
xor
repz
outsb
fs
dec
leave
cltd
js
loop
jno
mov
pop
mov
shll
ljmp
jnp
jnp
pop
cli
outsb
push
hlt
jo
pop
xchg
pop
mov
xor
mov
aad
jns
std
lea
popf
test
push
sbb
mov
pop
insl
inc
push
shlb
mov
pop
in
mov
cld
xor
pop
stc
xor
in
gs
push
sbb
xor
jl
push
xchg
iret
out
push
fwait
cmpsb
or
xchg
mov
scas
push
sbb
sarl
xor
jl
popf
fwait
es
sbb
push
sahf
enter
xchg
es
or
hlt
cmp
pop
or
cs
add
ja
incb
test
xchg
jns
daa
fsubs
jne
xchg
xorb
cmp
pop
mov
mov
sub
jl
movb
test
subb
fisttpl
mov
and
dec
xor
xchg
out
test
sahf
into
push
pop
sbb
add
aam
aad
add
xchg
inc
inc
xor
mov
push
fstpt
mov
test
mov
push
sti
inc
lahf
sbb
sub
jo
pop
fwait
jbe
ficoms
jbe
mov
mov
call
cmp
dec
aaa
sbb
daa
jnp
inc
mov
mov
std
fxch
fcmove
scas
xchg
jl
dec
pusha
nop
mov
mov
cld
fidivrs
in
and
sti
js
cmpb
inc
ror
dec
sbb
mov
mov
mov
or
das
inc
dec
dec
push
sub
test
mov
add
inc
and
test
dec
jmp
cmp
inc
popa
ds
or
xor
and
out
pushf
mov
aaa
cmc
je
addl
inc
iret
add
fs
push
bnd
pushf
imul
ljmp
je
repz
js
sub
inc
daa
mov
mov
ficomps
aad
shrb
lods
mov
pusha
cwtl
loop
sbb
enter
dec
sub
sub
or
nop
pop
lahf
push
mov
jmp
dec
adc
mull
push
rorl
testl
pop
sbb
lea
push
or
mov
insb
jno
jbe
mov
and
filds
dec
into
push
jge
ljmp
jo
mov
pextrw
ss
test
jp
sbb
pop
cmpsl
ds
jp
popa
stos
cli
es
sbb
jo
mov
cmpb
or
add
cld
cmpsb
jnp
in
push
or
mov
add
ret
into
or
test
add
mov
lea
inc
mov
mov
movb
ficoms
and
or
xchg
out
scas
in
scas
adc
sbb
test
mov
aad
nop
adc
bound
fistpll
mov
clc
mov
mov
bound
lock
pop
test
xor
sub
mov
mov
or
xchg
push
xor
fs
stos
test
mov
pop
stos
shlb
ffreep
js
mov
adc
arpl
sbb
pop
pop
inc
adc
jb
mov
cmc
stos
xchg
subl
jecxz
jmp
sub
js
cli
fsubs
push
pop
sti
testb
mov
divb
in
mov
imul
pop
xchg
or
fbstp
cmp
std
les
xchg
pusha
sbb
mov
jl
ljmp
loopne
scas
mov
leave
xchg
lea
clc
sub
jne
idivl
mov
ds
jp
push
push
inc
imul
push
pop
fisubl
ficomps
pop
lcall
push
fwait
mov
and
data16
das
ret
dec
and
jg
mov
add
fnstcw
and
pop
jno
xchg
cmpsb
push
or
adc
jp
lds
addl
sub
out
push
pop
shr
or
mov
xor
fcmovne
dec
gs
push
fs
std
daa
js
dec
and
lods
push
sahf
xor
push
fadd
lea
jmp
mov
shrl
inc
lods
dec
mov
in
mov
mov
in
mov
jl
arpl
sbb
shll
loop
ret
jne
sub
or
movb
push
cld
sbb
sub
add
inc
loope
xlat
std
jno
pop
nop
xchg
push
pop
mov
push
pusha
inc
paddsb
out
jbe
jns
test
mov
movsl
adc
add
inc
push
mov
dec
cltd
out
lcall
push
out
inc
pop
stos
xchg
stos
adc
mov
adc
das
inc
pop
mov
add
rclb
add
jno
out
push
mov
loopne
and
cmp
and
clc
mov
sub
pop
cmc
xor
shll
push
inc
xchg
and
idivb
add
dec
sbb
dec
ret
call
inc
repnz
and
sarl
cli
mov
xor
mov
mov
aaa
outsl
inc
stos
mov
mov
pop
dec
inc
rcrl
push
mov
gs
testb
imull
roll
push
cli
cli
into
rcr
loop
inc
xchg
adc
data16
xor
mov
adc
pop
inc
adc
and
call
repnz
out
cwtl
push
push
es
loope
gs
add
rorl
dec
popf
mov
nop
stos
push
aas
hlt
jl
jp
enter
rcll
jmp
add
adc
jg
sbb
sbb
scas
cmpsb
stos
ss
xor
loope
out
popa
push
adc
inc
in
out
aaa
lret
mov
pop
insl
mov
xor
data16
js
bound
loop
les
cmpsl
or
sahf
push
adc
lret
lds
ret
mov
or
inc
mov
popf
orb
nop
cltd
xor
sbbl
push
add
add
insl
mov
sub
and
lock
imul
sub
fxch
je
add
notb
lcall
mov
int3
and
dec
dec
scas
pushf
stos
out
or
inc
rcr
scas
push
pop
mov
cwtl
int3
out
jg
out
jb
loope
ss
loope
jno
imull
mov
jle
gs
sti
or
or
adc
jecxz
dec
ret
shrb
ret
clc
pop
sbb
sbb
xor
test
test
fs
pop
test
cmp
ret
sub
push
dec
lahf
fwait
jns
rcll
fidivl
mov
psubsb
push
sub
ror
lahf
daa
notb
inc
fimuls
das
nop
sbb
ret
lret
jg
dec
xchg
push
cmp
les
adc
jmp
test
lods
add
pop
popf
adc
mov
sahf
in
cmpsl
and
in
jl
movntps
sbb
popa
add
movl
mov
jns
cld
xlat
dec
jle
mov
ljmp
jnp
lahf
mov
lods
movsl
push
bound
fmuls
test
imul
imul
sub
jbe
in
cmp
mov
xor
push
lcall
insl
inc
xor
cmp
push
movsl
ds
inc
lcall
sarl
cmp
dec
cmpsl
lock
pop
in
add
mov
cmp
pop
cld
mov
sbb
lods
iret
das
lods
pushf
es
pushf
or
jmp
mov
dec
hlt
fdivs
arpl
sti
lea
in
inc
push
les
nop
out
hlt
push
jp
adc
jp
add
sbb
lods
xor
adc
ja
pop
or
sub
aas
int3
sbb
pop
inc
shl
pop
movsl
js
pop
addl
jge
movsl
or
cltd
xor
pop
push
sub
in
or
jns
cmp
mov
jp
push
out
lcall
pop
dec
mov
imul
or
lods
mov
pushf
lcall
push
sub
lcall
or
cmp
outsl
push
dec
add
and
mov
cld
das
cs
jbe
mov
pop
pop
push
cmp
in
mov
aas
andb
adc
mov
imul
stos
bound
and
nop
dec
std
shrl
repz
and
mov
loope
push
pop
push
push
popa
cmp
outsb
imul
cmp
shrb
jp
jmp
cmp
out
fstps
xor
push
xor
inc
cmpsb
xchg
or
pop
mov
xchg
lods
sub
iret
into
fldcw
xor
daa
sarb
sub
ret
and
popf
out
sub
js
pop
adc
dec
xorl
or
orl
jno
sub
negl
or
mov
aaa
xchg
in
test
ss
repnz
add
sub
mov
push
and
mov
test
dec
cwtl
lds
int3
std
jle
outsb
gs
rcrl
pop
ds
shlb
out
push
mov
popf
mov
jge
in
std
loop
or
xchg
call
mov
fistpll
inc
shll
call
ret
sbb
push
push
ss
xchg
pusha
mov
mov
cmp
call
inc
xchg
jl
push
push
add
jle
cmp
or
xchg
adc
imul
push
andb
dec
mov
mov
xor
popa
scas
movsb
jb
xlat
cmp
fstpt
cmp
mov
or
in
mov
add
lods
xchg
add
test
repz
inc
test
lods
arpl
sbb
aam
decl
xor
inc
sti
in
sbb
jg
cmc
imul
and
jae
adc
jno
jns
ja
or
lea
call
and
int3
inc
add
pushf
mov
cmpb
out
mov
test
mov
fbld
sub
xor
insl
aam
adc
ror
iret
addr16
mov
repz
adc
sbb
stos
pusha
jbe
in
push
lds
pop
jbe
pushw
push
dec
jns
pop
std
fdivrs
or
dec
xor
shr
ret
xorb
jecxz
mov
aad
sahf
sub
mov
gs
mov
add
adc
xchg
pushf
inc
jb
lods
ret
xor
ret
push
nop
fldcw
push
push
addr16
loop
xchg
jb
and
jle
cmp
jl
adc
sub
call
scas
inc
jb
jno
rclb
pop
int
pop
mov
jle
adc
xor
scas
dec
xor
mov
aad
sbb
call
test
out
loopne
jge
call
testl
xor
leave
mov
jne
jbe
cmp
shl
stos
cwtl
mov
cmp
adc
clc
jne
and
mov
push
ss
stos
adc
pop
mov
adc
sub
imul
inc
mov
add
adc
adc
ds
ds
xor
mov
outsw
dec
fadd
fldt
or
inc
mul
push
mov
ds
mov
inc
out
lods
jl
push
outsb
pop
sbb
aas
push
stc
cwtl
lods
inc
jb
jle
mov
iret
cmp
outsl
dec
dec
loop
xlat
adc
incl
sahf
mov
gs
out
icebp
adc
mov
loope
jle
pusha
loopne
push
addr16
mov
xor
mov
repz
imul
lcall
inc
stos
orb
pusha
push
jo
idivb
jle
movsb
andb
add
xchg
repz
movsb
js
sub
lcall
mov
clc
insl
xor
sub
dec
sbb
xchg
sub
cmpsb
std
mov
sti
es
xchg
jns
aas
fiaddl
push
lods
xor
shlb
fcoml
test
stc
mov
xchg
sahf
jle
push
mov
sub
add
push
sbb
sub
and
int3
jae
adc
jmp
xlat
mov
nop
pop
cmp
xchg
lret
lock
adc
pop
movsl
pop
or
dec
or
cmpsb
cmp
inc
sbb
cmp
stc
movsb
mov
xchg
cmp
rorb
push
pusha
xorl
les
jbe
andb
scas
mov
cli
or
cmpsl
inc
push
mov
arpl
getsec
jbe
mov
dec
in
mov
shll
and
data16
cmp
mov
jmp
shld
insb
cmp
mov
adc
or
sub
adc
rclb
jg
inc
daa
scas
loop
jnp
fucomip
ljmp
stos
sub
or
cltd
les
sbb
movsb
jns
pop
addr16
loop
pushf
sub
or
jb
dec
test
xchg
dec
rol
in
call
inc
ficoml
cmp
pop
lock
loop
insl
xor
adc
push
and
mov
js
fidivs
adc
aaa
mov
movsb
fldcw
sar
xor
movsl
and
es
add
xlat
lods
push
jo
ror
jp
or
xor
cltd
pusha
pop
in
xchg
rep
cs
mov
dec
pop
pop
addr16
xorb
aas
adc
sbbl
mov
jo
cmc
cmp
fdivrs
cmpsl
inc
mov
dec
test
dec
adc
mov
cwtl
mov
out
clc
dec
lods
cs
and
adc
jae
push
mov
js
dec
movsl
out
sub
data16
push
imull
test
dec
loopne
xchg
jmp
movsb
mov
test
inc
stc
iret
xchg
push
mov
sub
in
es
cltd
xchg
adc
cmp
or
adc
pop
mov
sbb
add
loopne
mov
orl
inc
pop
dec
je
mov
or
in
mov
jmp
or
orb
stos
pop
mov
push
or
cmp
add
inc
xor
pop
lahf
cli
jb
add
add
lahf
mov
test
push
ds
fldt
adc
out
cmp
pop
addr16
adc
insb
pop
hlt
jns
jle
inc
outsb
mov
movsl
test
adc
and
jno
xchg
add
sahf
in
adc
inc
adc
mov
adc
push
lock
cs
out
mov
pop
cld
lock
mov
fwait
and
divl
or
inc
ss
scas
jo
div
inc
addr16
adc
sub
xlat
shlb
fistpl
jne
and
clc
mov
jb
out
fsubrl
lret
lahf
fs
lahf
push
xchg
lret
insb
repz
arpl
addr16
push
mov
mov
jle
jns
push
shl
rorb
lock
sub
sbb
pop
cmpsb
mov
std
jmp
test
mov
sahf
sbb
out
sub
stos
test
add
adcb
or
pop
imull
xchg
lret
jns
add
mov
mov
es
sbb
in
fisubl
mov
push
lods
mov
xchg
cmp
sbb
mov
cmp
addr16
je
jp
outsb
repz
ljmp
jge
push
sti
ret
filds
je
loope
or
push
aas
mov
jmp
or
mov
inc
push
push
dec
daa
push
negl
pop
pusha
mov
iret
icebp
js
xor
subb
cmp
lods
call
fstpl
fsubl
in
push
and
iret
or
adc
ret
inc
push
or
dec
fistps
sbbb
cmc
and
out
fwait
jp
xor
jl
push
daa
sub
dec
and
and
in
in
nop
mov
xor
loop
das
mov
push
sub
push
cs
cmp
data16
inc
outsl
adc
mov
cld
push
add
dec
outsb
push
fadds
sub
sbb
ret
pop
pop
inc
push
push
fmull
fstl
mov
xchg
push
jl
pop
jns
jp
fbld
jle
jb
add
mov
push
mov
push
push
pop
push
and
xlat
dec
cmpl
outsl
gs
shll
cli
cltd
jbe
fwait
insl
fisubs
mov
pop
mov
or
push
mov
push
shlb
sti
or
mov
dec
rcll
cmp
iret
add
xchg
test
xchg
sbb
lds
cmpsb
push
movsl
mov
pop
mov
popf
ja
and
js
in
repz
xor
and
xchg
jp
mov
icebp
sub
push
xchg
dec
cmp
pop
add
dec
les
das
inc
mov
xor
cmpsb
lahf
sbbb
fs
dec
popa
inc
mov
sahf
dec
sti
movsb
test
icebp
rol
xor
fisttpll
movswl
repnz
mov
rclb
mov
fistpl
mov
gs
leave
js
sbb
mov
outsl
es
shl
lock
call
insl
std
push
fimull
icebp
cmp
add
mov
jmp
push
jbe
pop
inc
jb
push
pop
aas
mov
movsl
cmpl
push
insl
pop
aas
mov
mov
cmp
push
pop
push
or
mov
lahf
xchg
das
mov
push
hlt
decb
leave
scas
mov
pop
mov
data16
mov
int
cmp
push
adc
xchg
and
outsl
xchg
inc
jo
hlt
mov
int3
and
jle
xlat
test
sbb
inc
xchg
sbb
lods
pop
add
imul
cmp
pop
cmp
cmpsb
lahf
pop
sub
inc
cmpsl
ret
jmp
or
repnz
mov
push
daa
addr16
mov
sbb
sub
adc
jge
pop
ljmp
sbb
push
imul
fs
jne
inc
add
inc
mov
mov
ret
adc
add
and
cwtl
stc
mov
movsb
pop
adc
inc
aad
jne
mov
dec
lret
outsl
inc
sbb
cmpsb
push
mov
pushf
lock
lods
mov
push
push
push
push
add
jae
cmp
xor
pop
adc
mov
fimuls
enter
repz
lcall
cmp
pop
dec
xchg
push
push
decl
iret
cmpsl
stc
xchg
cs
cmc
pop
push
jns
fucomi
pop
shrb
mov
jnp
bnd
test
mov
into
rorb
push
push
cmp
ja
push
add
bound
add
ja
mov
push
jecxz
sbb
mov
fs
arpl
lcall
sbb
or
sub
and
xor
jae
mov
lea
shrl
mov
push
mov
test
js,pn
enter
js
call
cmp
cmp
pop
sahf
mov
fs
fdivs
aas
xor
cs
jae
adc
sub
push
xor
or
and
xor
rep
dec
repz
xlat
jae
aam
pushf
dec
mov
push
xchg
lret
mov
lret
rcll
outsl
or
pop
mov
ret
and
mov
mov
adc
add
in
and
pop
les
push
cmpsb
sbb
lods
clc
popf
dec
clc
ja
adc
movsb
lea
insb
dec
aaa
adc
add
sar
das
sub
xor
test
add
cmpsl
and
push
lock
adc
pop
std
add
inc
shl
pop
insb
loopne,pt
js
fcomi
jo
pop
jecxz
xchg
outsl
xchg
sub
and
jg
and
xorb
in
jns
mov
push
mov
outsl
out
int3
xchg
mov
and
roll
push
push
pushf
xchg
mov
sub
call
lods
add
sbb
jo
adcb
mov
fnstcw
jl
fwait
imul
mov
imul
fmul
cmpsl
adc
fcmovb
inc
and
cwtl
inc
or
cmp
pop
push
mov
cmp
dec
loopne
ret
scas
pop
repz
test
jl
xchg
cmpl
or
out
les
popa
pop
das
xchg
and
arpl
pushf
inc
pop
sarl
mov
hlt
push
push
xchg
mov
cmp
into
pop
out
cmp
aad
push
inc
fnstsw
mov
fsubrl
int
nop
push
pushf
pusha
push
insb
mov
out
pop
out
xchg
stos
daa
inc
mov
xchg
jp
sub
test
fsubl
pop
imul
xchg
aaa
mov
or
jb
jbe
int
sarl
mov
rclb
das
movsb
cmp
jae
mov
adc
testl
scas
popf
imul
lahf
mov
push
jne
push
flds
shrb
aam
out
out
xchg
mov
lods
inc
icebp
vcmpps
push
push
mov
lods
jae
xor
les
repnz
mov
jmp
add
mov
adc
sbb
mov
fistl
push
jo
adc
stos
insb
into
cmc
outsb
xchg
xor
lret
loop
mov
out
ret
adc
and
cli
push
sahf
and
mov
int3
cli
cmpsb
ret
into
out
sarb
mov
pop
or
pop
stos
ja
ss
jbe
xor
cmpsl
jp
movntps
xchg
outsl
mov
fsubrp
and
lcall
push
andl
pop
push
ret
cwtl
addr16
mov
insl
push
insb
lods
cltd
scas
repz
shlb
mov
pusha
cmc
push
out
jns
lock
xor
es
gs
push
cmp
inc
repnz
into
jbe
and
sti
sub
mov
cmpsb
sbb
mov
sub
lcall
out
dec
bound
test
inc
mov
pop
imul
call
loopne
cmp
mov
hlt
sbbb
sbb
mov
in
iret
jmp
xor
das
push
and
mov
bound
mov
mov
shr
addb
popa
push
dec
pop
stc
jmp
rcll
mov
mov
mov
sub
push
push
fidivrl
add
ss
inc
mov
or
cli
out
out
add
lcall
inc
mov
mov
call
pop
or
out
push
pusha
xor
dec
or
jb
pop
xchg
das
push
fdivr
sub
mov
ret
mov
add
nop
icebp
xchg
inc
adc
mov
aaa
dec
xchg
xor
fcoms
test
outsb
sub
cmp
jg
mov
cmp
stc
push
jp
xchg
das
inc
aaa
jmp
fwait
scas
cmp
sarb
adc
int3
cmp
inc
jne
sbb
addr16
or
jmp
test
jo
push
pop
leave
lahf
sbb
imul
inc
fnsave
bound
enter
test
pop
icebp
jbe
xlat
sbb
movsb
popa
dec
adc
jbe
cli
or
imulb
mov
ljmp
push
cmp
stos
bnd
inc
in
lret
push
ds
jp
nop
pop
sub
cltd
outsb
repnz
sbb
cmp
aas
les
or
pop
cmpsb
pusha
mov
out
add
pusha
decl
sub
jl
cli
jb
sbb
push
mov
dec
pop
mov
lods
sti
lahf
jo
pushf
inc
push
or
add
pop
test
test
std
test
mov
xchg
xor
lcall
cmp
mov
and
and
cmpb
loop
sarb
push
mov
cmp
push
mov
lahf
jae
repz
fisubs
sbb
in
cld
daa
inc
adc
cmp
into
xchg
out
shlb
sbb
or
xor
dec
dec
push
dec
pop
pop
sbb
add
cmc
xor
add
rclb
repnz
pop
in
orl
mov
ljmp
dec
pop
xchg
ljmp
out
dec
pop
in
rcrb
in
ljmp
jge
outsl
arpl
sub
cmp
test
dec
push
add
iret
dec
sbb
jl
sbb
sbb
test
cmp
mov
insb
push
pop
mov
fisubl
in
loopne
inc
cli
arpl
xor
lods
xorl
push
dec
in
cmc
and
cmp
sahf
pop
movsl
fldenv
pop
popf
shll
xchg
sbb
stos
outsb
outsl
out
addr16
sahf
fsubl
jnp
adc
in
pop
add
faddl
pusha
pop
movsb
mov
mov
insb
test
addr16
jb
mov
mov
mov
jbe
sti
push
jp
inc
ret
sub
cmp
ffree
xchg
test
or
or
sbb
pop
jecxz
pop
dec
iret
stos
push
addr16
into
lods
xor
rcll
sbb
dec
xor
mov
lret
rclb
adc
or
stc
andb
pop
sbb
and
ret
sub
pop
fucom
shr
in
jmp
das
cld
adc
jae
jns
loopne
cmp
pop
mov
inc
aam
jg
xchg
ja
pop
cmc
into
jbe
outsl
stos
mov
pop
add
adc
sbb
jl
push
aad
popa
popa
sbb
mov
les
dec
aam
mov
inc
fiadds
test
fwait
adc
sahf
cmp
jb
pop
call
ffreep
or
cmp
mov
sti
push
lret
sub
imul
xor
imul
push
sarb
fadd
cmp
test
dec
mov
xchg
jmp
xor
js
inc
push
mov
xor
mov
mov
inc
das
xor
mov
push
cmpxchg
ret
sub
insb
out
mov
add
xor
shr
or
das
es
mov
push
imul
adc
lock
cmp
stc
xchg
loope
and
xchg
stc
std
mov
test
fadd
push
hlt
xchg
shl
ja
out
sbb
stos
dec
inc
lods
in
rolb
jg
stc
in
sti
and
sub
mov
jnp
jmp
negl
or
sub
xor
adc
push
sub
or
movsl
push
fs
out
insl
mov
dec
push
mov
adc
movsb
mov
lock
mov
call
cmpl
adc
xchg
addr16
data16
push
testb
jg
lea
shlb
in
adc
xchg
loope
add
xchg
sbbl
bndstx
push
xor
js
call
fwait
nop
mov
inc
mov
ss
inc
and
adc
cmpsl
jmp
xlat
cmp
je
inc
ja
std
or
sub
or
ficompl
adc
xchg
xchg
fidivl
xchg
aad
bound
pusha
shlb
push
sub
add
xchg
xchg
cli
aas
inc
nop
push
in
xlat
out
sbb
movsl
mov
and
xchg
sbb
inc
push
add
test
adc
fwait
xchg
xchg
mov
clc
adc
cltd
fwait
aam
loope
and
sub
loope
push
out
les
inc
push
jae
add
popf
jl
stc
lret
popa
dec
movsl
sarl
pusha
inc
aam
push
mov
sub
fstpl
call
sbb
sub
pop
das
cwtl
lock
cwtl
or
push
add
push
aam
iret
gs
leave
dec
push
pop
cwtl
cmp
xchg
ljmp
pop
out
es
pop
outsl
fdivrs
arpl
inc
addr16
and
jno
sbb
ds
popa
xchg
inc
xor
cmpsl
cmp
push
rcrb
sub
das
adc
sbb
push
cltd
jl
xlat
loopne
mov
hlt
push
lahf
pop
jns
icebp
ret
sti
addl
cmp
sub
adc
or
jo
cmp
inc
pop
dec
hlt
mov
add
in
ret
int
jle
adc
insl
add
sub
scas
stc
sbb
stos
int3
sbb
ja
loop
daa
insb
xchg
sub
xchg
mov
jo
in
xor
stos
cltd
fsubrs
enter
aad
cmp
xchg
das
aam
jnp
inc
push
adc
and
push
xor
cmp
nop
je
dec
pop
icebp
adc
mov
and
mov
jae
std
int
xchg
dec
xor
in
pop
add
or
and
xchg
sub
std
movl
add
mov
inc
xchg
mov
cmp
adc
xchg
push
inc
jl
jnp
cwtl
mov
or
std
push
cmc
leave
pop
or
aad
std
inc
cmpsl
dec
jmp
jns
sbb
aad
adc
ljmp
sahf
mov
movsl
mov
cmp
lret
xchg
dec
ljmp
sbb
das
adc
or
push
je
lods
popf
dec
dec
cwtl
iret
lret
dec
std
cltd
fidivs
mov
call
ss
mov
movsl
push
ret
mov
cmc
es
lock
mov
push
fs
or
pop
aad
loop
fmuls
lock
jl
fists
and
ja
out
mov
imul
jnp
ret
mov
cld
xor
scas
sub
out
ror
lea
inc
cmp
cmp
push
mov
pop
or
hlt
jle
out
popf
or
jle
push
popf
fsubs
inc
xchg
jmp
test
cs
and
mov
and
aad
sbb
jg
out
xlat
cmc
xchg
adc
sbb
flds
mov
mov
push
addb
fmuls
loop
insb
lock
cmp
pop
jo
mov
aam
ret
push
pop
movb
mov
test
inc
adc
mov
flds
sbb
inc
sub
or
jle
test
fs
sbb
inc
in
pusha
outsb
mov
aad
sub
add
mov
xor
inc
mov
ss
cmp
cmp
leave
std
std
lods
push
fs
and
adc
jmp
rorl
or
mov
cltd
ljmp
mov
jmp
je
xchg
leave
fnsave
imul
testb
and
dec
jb
out
les
pop
test
ja
adc
push
decb
lahf
sub
inc
and
mov
pop
mov
inc
or
sbb
mov
hlt
imul
pop
adc
pop
mov
inc
pop
pop
mov
mov
xchg
std
push
pop
and
push
xor
push
cmp
add
pop
call
add
test
add
sbb
or
das
enter
pushf
ljmp
xchg
xor
iret
or
mov
and
std
fldl
loope
ds
les
push
jmp
cmpsb
xchg
out
push
mov
cmp
loop
mov
test
pop
std
jecxz
daa
cmc
lahf
push
loop
fstp
push
push
movsb
sbb
add
imul
fistpll
sar
lods
xor
ret
xchg
shlb
call
mov
data16
stos
inc
pop
pop
scas
cmp
hlt
loopne
inc
ud2
pop
push
push
push
xchg
iret
out
jnp
test
ss
cmp
cwtl
into
mov
icebp
lea
inc
imul
dec
in
mov
rorl
push
rcrl
mov
dec
test
pop
test
test
jnp
ja
roll
sbb
sbb
pop
repnz
stos
mov
mov
lods
aam
xchg
jns
popf
adc
mov
loop
mov
ret
push
cmpsl
loop
loopne
add
icebp
test
shrb
imul
pop
inc
fs
dec
mov
movsl
stc
mov
lock
fistps
sub
icebp
and
or
mov
jmp
cld
adc
insl
inc
add
cmp
jne
ffreep
ret
scas
dec
ds
nop
sub
jno
mov
shll
mov
mov
push
jbe
push
aam
aam
push
mov
fnstenv
xchg
add
push
xchg
adc
and
mov
mov
das
cmp
stc
fadds
xor
mov
xor
push
fbstp
aas
cmp
lret
xchg
lret
or
gs
mov
adc
shl
rcrb
or
cmp
xchg
mov
mov
iret
cli
push
gs
jo
inc
dec
pop
mov
push
mov
cmp
mov
neg
ja
aad
mov
or
lea
mov
loope
ret
mov
out
mov
addr16
daa
daa
mov
cmp
loop
ja
je
call
fs
mov
mov
rolb
adc
mov
cmp
in
hlt
sub
lret
mov
loop
jbe
pop
cmp
push
cwtl
mov
mov
add
pop
dec
fnsave
test
inc
out
test
test
lret
sarl
adc
std
lock
cmp
popf
adc
sub
mov
ret
sbb
int3
in
cmpsl
rcrb
loopne
lret
jge
push
dec
movsb
jae
push
adc
cwtl
push
xchg
es
pop
and
adc
push
in
int3
mov
pop
into
fcom
shr
arpl
movsb
inc
inc
inc
pop
jno
cmpsl
cmp
insl
push
aaa
mov
and
mov
arpl
out
loopne
lret
sahf
fsts
pop
push
mov
mov
cli
sub
rol
inc
sahf
mov
popf
mov
popl
cmp
ret
xchg
jmp
clc
cmp
in
in
cmp
push
push
inc
mov
aad
cmc
shrb
mov
enter
mov
mov
mov
frndint
std
bound
sbb
jg
mov
rclb
loopne
adc
inc
jle
push
xor
pusha
in
loopne
mov
shrb
push
fs
sub
je
add
lret
xor
rcll
out
cmp
mov
lcall
push
push
or
jl
daa
xchg
xchg
mov
rcrb
rol
push
lods
pushf
scas
sub
adc
or
push
std
mov
fldcw
pop
adc
test
cmp
inc
jge
push
push
fidivrl
xchg
movsb
mov
shlb
aad
insb
stos
pop
lcall
pop
rcll
pop
jg
mov
fmulp
cmc
imul
sub
jp
mov
outsl
push
mov
scas
call
addr16
scas
fptan
xlat
add
in
shrb
push
jnp
adc
cmpsl
rorb
adc
mov
ficoml
sub
jecxz
dec
leave
xchg
cltd
mov
mov
mov
jl
cmc
sub
sub
outsb
outsb
repnz
imul
in
ss
jmp
sbb
cmp
push
mov
mov
adc
or
iret
cmpsl
fmulp
xchg
or
mov
fidivs
or
sub
scas
and
ja
jnp
and
push
pop
outsb
xorl
divl
sub
ret
movaps
or
repnz
ret
js
repz
addr16
stos
push
jns
pusha
sub
add
mov
ja,pt
aam
pop
sti
gs
cmpsb
mov
mov
rcrl
in
ds
adc
adc
fldcw
lahf
in
inc
mov
pop
xchg
xchg
jle
insb
stos
in
jb
mov
and
xor
dec
jmp
bound
ss
mov
hlt
xchg
mov
add
pop
or
jnp
mov
sub
cmp
mov
shlb
cmpsl
js
jns
mov
jne
outsl
xor
and
push
orl
movsl
mov
mov
and
and
lret
cmp
mov
cmp
ror
sbb
xor
hlt
int3
sbb
sub
or
adc
push
mov
mov
outsl
mov
cmp
adc
pop
mov
stos
aaa
rcrl
or
data16
out
outsl
insb
or
aaa
mov
fldcw
sti
xchg
lret
cltd
rcrb
mov
scas
popf
jnp
cmp
cmpsl
mov
and
and
cwtl
mov
push
and
fistl
jo
int
dec
pop
xchg
dec
xchg
sub
js
push
dec
cmpsb
loop
nop
pushf
mov
jecxz
js
jmp
sbb
xorl
fists
stos
shlb
jl
mov
in
icebp
inc
gs
sbb
sti
fistpll
cmp
ja
cld
mov
xchg
push
mov
add
jae
rcll
xchg
or
and
vpermpd
or
call
xor
inc
mov
mov
sbb
int3
push
movsb
lock
mov
and
pushf
add
push
shll
sarb
andb
mov
cmpsl
pop
data16
aas
pop
orl
xchg
pop
xor
and
cwtl
and
sbb
sbb
sbb
add
mov
xchg
pop
int
sbb
jmp
add
stc
lods
xchg
pop
fcomps
dec
pop
frstor
sub
sub
ret
push
mov
mov
popl
les
fdivs
int
cmp
dec
movsl
add
cld
cmp
divl
mov
gs
adc
test
dec
mov
pusha
outsb
leave
out
jns
ljmp
pop
outsl
fdiv
filds
xchg
sbbl
pop
and
xor
shrb
inc
sbb
mov
push
inc
cmpsb
sub
xchg
clc
cmpsb
cmpsb
xchg
pop
inc
mov
push
sbb
cmpsb
outsl
or
push
ret
inc
xchg
aad
cli
stos
add
sub
jnp
sub
daa
int3
cmp
mov
cmp
insb
sbb
lcall
cmp
ds
cmp
inc
popf
dec
movsl
into
mov
repz
jle
push
mov
data16
mov
sbb
iret
xchg
mov
test
or
add
mov
outsl
sub
xchg
add
mov
lods
push
sub
xchg
scas
mov
or
mov
dec
sbb
add
insl
stos
adc
clc
sbb
jmp
pop
inc
pop
jo
adc
xchg
out
lret
aam
fildll
mov
test
and
es
jo
incl
js
or
mov
xor
adc
jae
inc
in
cmc
jmp
aam
test
iret
les
dec
jg
xchg
push
adc
mov
icebp
pop
sub
int3
cld
into
mov
adc
iret
rol
inc
outsb
pop
sbb
test
mov
loope
xor
sub
jmp
es
dec
inc
aaa
cmp
mov
ret
hlt
fstpl
xor
js
bound
mov
mov
imul
scas
dec
sbb
les
pop
ljmp
dec
mov
rcrb
push
shlb
pop
ljmp
jns
push
test
jle
mov
mov
jae
hlt
mov
jp
popf
movsl
test
rcll
repz
push
nop
out
loope
out
pop
aas
mull
mov
shll
xchg
cwtl
mov
stos
jmp
cld
and
in
dec
test
rcr
out
adc
xchg
xchg
mov
sbb
add
cmp
sub
rolb
lds
dec
outsb
cld
lock
mov
push
adc
adc
bound
cwtl
pushf
xorl
jno
fxch
shll
adc
dec
aam
add
lcall
leave
mov
xchg
dec
dec
jp
daa
mov
hlt
leave
pop
mov
xchg
xchg
leave
sub
xlat
mov
test
jecxz
pop
aas
add
pop
mov
test
xchg
pushf
movsl
pop
add
xchg
lahf
xchg
pop
xchg
nop
iret
sbb
lcall
pop
scas
enter
out
xlat
fiadds
jmp
mov
xlat
dec
jmp
push
test
sbb
enter
mov
shll
pop
xor
xchg
add
mov
sbb
lods
leave
xchg
mov
mov
aad
addb
jle
or
mov
mov
adc
mov
cmp
mov
aad
mov
mov
adc
ret
popf
loopne
mov
mov
shll
ret
fcmovnu
out
shl
mov
add
add
js
outsb
stc
sbb
pop
pop
ljmp
push
cli
jge
sub
push
add
enter
in
test
loopne
jle
out
fadds
loopne
lcall
fninit
sti
stos
sbb
roll
cmp
pop
pinsrw
fisubrl
out
fcmovnbe
xchg
ret
xor
out
sub
arpl
fildll
mov
icebp
and
dec
call
sbb
cmc
jle
dec
sbb
jl
xchg
jge
or
mov
ja
sub
in
lods
fisttpll
mov
adc
inc
mov
jg
pop
ret
aad
in
push
cld
xor
jge
jp
xchg
mov
sub
in
dec
das
mov
dec
hlt
sbb
popf
dec
ret
in
mov
jg
add
mov
lods
movsl
mov
xchg
fdivl
mov
hlt
push
imul
stos
inc
inc
sti
jge
int3
insl
fisubrs
js
sub
add
mov
mov
push
orb
xlat
inc
movsl
sbb
shr
cmp
xchg
test
xor
jo
jbe,pt
push
add
fldl
shrb
jge
or
pop
cmpsl
inc
leave
das
mov
inc
xor
out
jo
imul
test
add
out
lret
and
dec
fstps
add
sti
ret
nop
loope
xlat
jl
loop
xor
aas
cmp
lret
data16
aas
jne
xchg
dec
or
cli
pusha
or
xor
cmp
xor
push
jne
insb
test
sbb
jbe
add
pop
mov
mov
lds
lea
jle
fstpl
mov
dec
push
ljmp
popf
mov
test
xor
popa
ss
js
icebp
mov
mov
push
dec
jl
pushf
mov
ret
insb
xchg
call
loope
pop
xchg
sbb
push
or
les
or
outsl
cmp
and
xchg
sbb
roll
sahf
pop
cld
cli
stc
sub
mov
pop
adc
inc
add
dec
scas
movl
lcall
ficoml
int3
nop
cmc
subb
sub
lret
jg
xchg
rcrl
scas
mov
jns
push
or
test
ljmp
pop
fisubrl
in
xchg
push
je
loope
lahf
notl
ss
pop
sub
dec
leave
daa
add
push
pop
imul
mov
out
ret
stc
pop
dec
loopne
fs
std
arpl
add
les
sub
outsl
inc
data16
popa
sbb
dec
mov
insl
lret
pop
out
xchg
out
xor
lds
std
cmpb
dec
xchg
cmc
stc
negl
pushf
cwtl
mov
mov
inc
xor
or
sbb
push
sarl
ja
inc
cmc
test
xor
addr16
sarb
sti
shll
push
lods
test
xchg
icebp
hlt
sub
lahf
cmpsb
les
mov
inc
test
lock
shlb
xchg
aam
rcll
fadds
sbb
jmp
test
imulb
inc
js
enterw
sbb
jecxz
insl
and
jb
pop
mov
adc
add
subl
push
pop
sbb
adc
sub
hlt
jmp
dec
in
daa
test
es
cmp
lock
xchg
sbb
enter
bound
lea
cmc
mov
mov
setg
dec
fidivrl
cmp
sub
push
xchg
pop
fcompl
dec
mov
and
and
pop
mov
sub
sub
je
sbb
aad
lcall
out
mov
inc
dec
cmp
mov
test
movsb
push
into
jo
add
lret
mov
cmp
add
cmp
mov
cmc
push
outsb
cli
lock
cmp
xchg
pop
imul
cli
cmc
cmpsb
loop
lret
push
jg
inc
arpl
jb
lds
stos
sbb
xlat
xor
xor
sub
les
xchg
add
dec
xlat
push
push
xor
iret
fistl
movsb
and
inc
mov
sub
cmp
xor
stos
and
loop
loop
adc
call
sti
add
push
sarb
in
in
inc
in
pop
ds
adc
dec
out
sbb
adc
repz
lea
xchg
xlat
mov
add
pop
lods
sub
xchg
push
stc
jp,pt
int3
incb
negb
rorb
cmp
dec
fnstsw
add
jl
or
stos
outsl
and
or
push
jmp
mov
jo
xor
test
rolb
cld
and
fbstp
mov
pop
mov
sub
inc
inc
fcoms
dec
fstpt
and
xlat
fs
push
daa
dec
loop,pn
dec
stos
stos
aas
add
lahf
pop
jbe
pop
mov
xchg
imul
pop
outsl
sbb
mov
or
mov
inc
outsb
movsb
repnz
pop
pop
mov
dec
dec
int
mov
mov
dec
or
or
jnp
mov
push
or
int3
test
add
sbb
jle
sub
pushf
mov
or
aad
sub
ja
rolb
xor
push
mov
xlat
xor
inc
popa
bound
add
roll
mov
test
enter
mov
cmp
loope
test
daa
scas
mov
mov
outsb
fiaddl
pusha
add
and
adc
hlt
aam
sub
pop
push
pmaxsw
inc
fstpl
lock
insl
les
push
negl
out
ret
leave
and
xchg
orl
repnz
fidivrl
sbb
mov
mov
jmp
xchg
and
lahf
or
insl
cmp
or
adc
add
into
jge
pushf
mov
cld
in
jnp
push
stos
repnz
popa
dec
push
in
inc
mov
or
lds
lret
cs
and
jmp
rclb
lahf
dec
mov
ror
inc
test
mov
xchg
add
push
cmpsb
ret
cmp
outsb
xchg
shl
dec
and
xchg
outsl
dec
cltd
xor
stc
cltd
inc
lock
push
mov
mov
push
xchg
inc
jnp
aam
ljmp
or
ljmp
clc
fs
rol
pop
jmp
insb
fcompl
jecxz
lods
jns
sub
xchg
jge
mov
xchg
fwait
jne
push
movsb
pop
test
imul
push
xchg
mov
ja
xor
adc
sub
pop
pop
jnp
insl
subl
lods
addr16
jno
sbb
fildl
mov
adc
mov
decb
std
pop
in
xchg
add
mov
test
and
mov
push
hlt
mov
xor
mov
adc
mov
and
test
xchg
sbb
push
daa
imul
pop
pop
dec
stos
xchg
jb
stc
jo
jmp
je
push
repz
imul
fcomi
lea
sbb
xor
lock
fidivs
ficomps
movsb
fcmovnb
test
pop
dec
push
and
push
icebp
popf
sbb
xchg
and
jns
repnz
stc
arpl
repnz
pusha
mov
or
sbb
cmp
xor
movsl
divb
jns
cmpsl
orl
daa
ficomps
and
sarb
xor
jp
test
mov
stos
inc
les
adc
sbb
loopne
and
bound
subl
out
adc
pop
cmp
popa
psubusw
stc
jbe
sub
jnp
popl
adc
fadd
das
ljmp
aas
nop
cs
and
fsub
in
push
push
and
in
pop
pop
cld
cmp
idivl
shlb
or
and
fistl
ss
pop
cmp
in
or
xlat
add
rcll
psllq
nop
test
lods
out
mov
cli
inc
and
ss
and
loopne
out
lret
or
add
or
mov
dec
mov
aad
clc
repz
shll
insl
push
dec
inc
push
add
insl
inc
and
jecxz
cld
imul
inc
and
xchg
cmp
xlat
imul
and
sbb
mov
mov
into
imul
inc
stos
pop
jmp
cmp
fisttpl
test
sahf
push
and
push
jl
testb
mov
dec
or
adc
arpl
loop
jb
xchg
jmp
and
das
dec
repnz
cmc
mov
int3
fxtract
sub
xor
fs
pop
mov
arpl
or
mov
je
ljmp
add
fsubrs
sub
xchg
dec
push
clc
mov
push
jno
xor
outsl
std
sub
shrl
add
aaa
xchg
xrelease
or
or
jno
mov
iret
int
push
mov
sti
xor
je
popa
push
jnp
outsl
das
adc
jmp
and
jne
inc
xchg
test
stos
enter
xlat
push
pusha
mov
loopne
sbb
rol
lock
pop
sbb
add
mov
adc
cmp
loope
inc
in
dec
js
cmpsl
inc
pop
imul
pop
repnz
and
xor
push
orb
into
dec
sbb
test
cltd
push
push
aad
pop
dec
mov
dec
ja
jo
jno
push
inc
add
inc
or
mov
push
pop
inc
addr16
and
push
lret
iret
mov
lock
out
jl
dec
mov
mov
outsl
mov
nop
xbegin
cmp
aad
sub
jo
insl
mov
mov
fdivrs
ss
cmc
push
xchg
lock
inc
add
sbb
xor
xor
push
mov
cmc
pop
iret
lahf
pushf
xor
pop
xor
jne
into
fwait
dec
mov
inc
test
xchg
push
mov
dec
rorb
je
imul
ds
shrl
aam
xchg
fnstsw
popf
and
cwtl
mov
push
mov
sub
loop
jg
and
jmp
cmp
push
inc
jno
test
lock
mov
or
inc
and
outsl
push
xor
sub
add
fwait
push
daa
push
mov
jp
or
sub
scas
jns
fndisi(8087
cmp
mov
sbb
add
cmc
push
mov
mov
push
inc
dec
insb
cmpsl
dec
out
add
inc
or
sbb
and
cmp
mov
mov
adc
fnstcw
pushf
jmp
sub
shrl
xor
adc
call
xchg
xbegin
jnp
cmp
aad
dec
dec
lods
out
mov
adc
sub
pop
popf
pushf
xchg
ljmp
or
in
dec
mov
mov
fs
push
movups
and
out
stc
test
insl
clc
mov
jge
jg
subl
push
stos
hlt
dec
push
je
aam
sub
inc
xor
mov
mov
or
movsl
xor
or
add
fadds
push
dec
bound
loop
ja
cwtl
iret
rolb
fidivrs
loop
pop
sub
jne
xchg
lods
icebp
je
out
dec
adc
jp
scas
or
subl
jne
adc
loop
lods
int3
push
dec
add
or
push
clc
dec
dec
mov
pop
mov
pop
push
xchg
mov
jnp
xchg
sub
mov
pop
cmpsb
mov
jbe
inc
ret
and
and
or
das
or
das
pop
aas
xlat
data16
daa
sbb
dec
jb
push
cwtl
mov
scas
pop
out
aad
jge
ja
push
divb
hlt
ds
cli
pusha
mov
push
mov
cmc
or
cltd
xor
sahf
add
lods
jp
test
xor
repnz
dec
mov
faddl
inc
cmp
ds
imul
enter
lea
push
push
xchg
shll
jbe
bound
pop
or
mov
in
imulb
andb
mov
fiadds
stc
cmp
in
es
mov
das
cmp
or
push
fs
ja
sbb
mov
xchg
mov
xorb
sub
mov
add
sub
push
hlt
xor
adc
adc
ja
add
push
addr16
xchg
and
push
ret
ds
or
inc
dec
out
fdivrl
push
pop
pop
mov
xchg
mov
sarl
pop
xor
xor
das
ljmp
jp
cmpsb
lock
mov
pop
xchg
lds
sbb
outsl
inc
push
psadbw
ret
subl
iret
pop
aad
fs
push
mov
inc
bound
pop
and
cmp
xlat
pop
or
clc
jmp
push
mov
push
lahf
jbe
xchg
jge
inc
add
dec
pop
adc
and
mov
or
popa
or
ja
shlb
arpl
shll
icebp
rclb
pop
sbb
cmp
imul
or
mov
add
sbb
data16
cmpsb
dec
mov
movsb
insl
test
adc
leave
mov
ja
dec
cwtl
fdivl
pushf
jmp
ret
lock
adc
and
mov
xor
dec
test
icebp
sti
int3
cmp
jne
pop
lret
mov
mov
js
mov
xchg
jecxz
idivb
cmp
jns
mov
clc
jmp
movsl
and
test
and
mov
fisubrl
xchg
mov
rcrl
and
popa
and
mov
hlt
cltd
sub
xor
sbb
int
xchg
test
cmpsb
jge
hlt
vcvtsi2ss
lret
dec
dec
xlat
clc
loopne
xchg
pop
int3
sbb
adc
xor
mov
pop
fcoms
ret
stos
pop
pop
mov
rolb
inc
adc
out
aas
pushf
jne
add
dec
inc
lea
enter
jge
sub
cmc
adc
das
clc
and
jne
xchg
or
aad
dec
add
mov
lcall
push
dec
push
aas
aad
es
stc
and
xor
cmp
xor
stos
int3
dec
pop
push
mov
mov
adc
mov
fsub
dec
push
xorb
and
push
lock
sbb
xchg
push
xlat
xor
repz
xor
push
js
adc
ret
aam
xchg
sahf
mov
shrl
or
lods
xlat
mov
nop
pop
mov
jnp
popf
je
cmp
mov
pop
mov
push
push
pop
add
or
mov
iret
push
inc
mulb
sub
fnstsw
mov
jne
outsb
mov
mov
mov
movsl
daa
xchg
mov
mov
or
mov
repz
pop
imul
mov
dec
inc
rcll
ds
xlat
and
push
imul
cs
addr16
mov
cmp
xchg
movsl
int3
scas
and
inc
cmp
popf
scas
aam
adc
mov
pop
ret
cltd
sbb
ds
cs
mov
push
mov
push
jb
add
mov
int3
scas
and
xchg
push
in
das
cltd
jbe
fstpl
sub
fsts
repnz
fmuls
imul
xor
mov
and
ss
jmp
scas
in
push
jns
in
into
fwait
int3
mov
lcall
xchg
cmp
sahf
jl
ss
adc
stos
xchg
xor
pop
ss
scas
cld
outsb
xor
stos
stos
sub
aas
pop
inc
jle
out
sbb
mov
cld
or
jns
in
push
outsl
lock
repnz
das
push
sbb
pop
aam
mov
fiadds
sbb
mov
repz
jae
ljmp
mov
push
and
pop
and
xchg
in
xor
mov
mov
mov
mov
out
rorl
inc
xchg
out
movl
fidivrl
movsb
or
xor
mov
ds
iret
mov
xor
clc
loop
xor
loop
enter
out
imul
lcall
add
xor
push
mov
mov
pop
jle
fwait
xorb
or
cwtl
scas
sbb
pop
xor
addr16
xchg
lods
jg
mov
mov
test
cmpl
rorb
push
sbb
or
sub
xchg
fs
popf
setne
lret
xor
and
lock
stc
pop
mulb
outsb
add
or
ss
int3
lock
or
test
sbb
das
adc
idiv
push
popa
out
das
mov
sbb
fs
std
inc
inc
fidivs
int
push
add
imul
jns
jmp
icebp
xlat
test
movsb
popf
sbb
sub
aad
mov
fcoml
test
adc
sahf
ret
aad
xchg
daa
icebp
mov
add
pop
inc
lret
fcmovu
cmp
sub
sbb
outsb
dec
icebp
cmp
testb
jnp
and
mov
sub
mov
or
jno
bound
mov
test
aad
and
lret
jmp
dec
out
add
pop
dec
dec
xor
or
jg
nop
jecxz
lcall
sbb
addr16
xlat
pop
mov
and
insl
aaa
movsl
ret
jb
mov
xor
or
stos
fs
xchg
jne
scas
xor
test
fs
outsl
xor
call
dec
out
jge
cld
mov
movsw
in
filds
rol
aad
push
xchg
roll
fisttpl
stos
push
lock
inc
sbb
xor
cmp
movsb
xor
jae
out
scas
mov
mov
js
inc
mov
xchg
cmp
fimull
decb
fcomps
pop
push
into
pop
sub
mov
sub
mov
dec
adc
adc
cmc
dec
mov
cmp
out
adc
xchg
les
lea
daa
ret
ljmp
sub
jl
jbe
xor
aas
inc
imul
loopne
mov
rcr
cmpl
pusha
sub
scas
sbb
rorl
cmp
push
sahf
ja
mov
dec
mov
pop
scas
cmpl
lahf
pop
adc
add
test
add
xchg
mov
sub
xchg
shrb
sahf
or
repz
add
cmc
mov
sub
out
dec
aas
mov
mov
movsb
int
out
sub
cmp
dec
lods
cmp
sub
cmp
xor
adcl
cmp
push
loopne
adc
shr
pop
in
sti
loopne
mov
add
js
pop
in
sbb
mov
popf
mov
mov
xor
mov
loop
adc
out
shrl
loopne
mov
movsl
and
sub
sbb
jecxz
mov
push
fwait
cmp
sub
fdivrp
cmpl
xchg
add
cmpsb
lods
icebp
movsb
jg
jle
sbb
push
lret
push
xor
lods
sbb
adc
pushf
pop
mov
pop
pop
mov
stc
pop
jecxz
adc
loope
into
inc
cld
and
out
shl
xchg
imul
pop
fdiv
mov
movsl
clc
aaa
imul
cwtl
dec
pop
xchg
sbb
jae
mov
fsubr
andl
loope
xor
adc
mov
cmc
push
adc
cs
mov
sub
sbb
daa
fimuls
adc
lret
addr16
jmp
lret
sub
lea
sbb
addb
dec
sub
xor
mov
pop
fisubrl
stc
xchg
and
insl
and
cmpsb
or
pop
mov
push
mov
pop
fcom
dec
bound
cmc
or
mov
mov
adc
fildll
bound
adc
adc
xor
test
push
inc
ss
mov
inc
fisttps
dec
ret
mov
add
adcb
jbe
mov
or
or
mulb
rorb
jb
inc
divb
adc
out
cmp
sbb
fldl
push
fisubs
sti
xor
nop
imul
push
out
pop
in
mov
imul
fadd
xchg
cs
pop
mov
jne
cmpsl
jne
arpl
lret
mov
ss
cli
iret
mov
cmp
lcall
xchg
adc
sub
test
loope
adc
adc
mov
jne
xchg
mov
jo
xor
adc
push
sbb
cmpxchg
sub
cwtl
stos
push
sub
inc
mov
nop
mov
sbb
leave
xchg
add
shll
and
cmc
jno
sub
push
adc
orb
scas
add
sub
mov
pop
fsub
movsl
jb
pop
add
sub
xor
adc
pop
adcl
sub
ret
stc
push
xor
sub
lods
out
jnp
pop
les
dec
sbb
daa
ss
push
insb
mov
push
out
mov
and
pop
mov
jg
sub
inc
push
int3
pushf
xchg
dec
dec
dec
mov
fisttpl
sbb
mov
stos
cmpsb
dec
sahf
pop
cwtl
les
or
ret
and
cmp
xor
in
xchg
cmc
push
or
repz
test
add
ja
jno
scas
xlat
or
lea
xor
adc
mov
popf
xlat
xchg
pop
movsb
xchg
shlb
add
dec
and
mov
jae
inc
shll
lret
add
or
in
insb
out
inc
sub
or
in
jae
and
in
xlat
xor
pop
add
xchg
ret
cmpsl
mov
xchg
xchg
push
cmp
sbb
xchg
mov
stos
push
lea
sub
sbbb
inc
movsl
and
orb
inc
icebp
in
loop
mov
pop
and
scas
lahf
sbb
mov
lock
pusha
xor
and
fwait
pop
mov
fbld
ljmp
jmp
outsl
mov
inc
or
add
fwait
dec
adc
sti
je
xor
sti
cmpsl
mov
or
mov
pop
adc
mov
rcrb
and
lods
or
mov
or
pop
xchg
mov
jecxz
xor
call
ds
fwait
jmp
jecxz
jo
in
xor
ds
jns
aad
outsb
dec
jmp
mov
mov
adc
push
and
xchg
fsubl
cmp
daa
movsl
jb
dec
loop
fwait
insl
xchg
and
mov
mov
or
popa
mov
je
repz
stos
pushf
setb
xchg
ret
mov
pop
loopne
cmpsb
pop
sbb
sub
loop
push
sub
sahf
sbb
mov
das
dec
rolb
and
jle
cli
add
int3
cmpsl
push
outsb
cmp
ds
jl
mov
pusha
pop
jp
push
out
sbb
lcall
mov
sbb
and
sub
mov
push
cmp
or
pop
jno
and
lret
lret
adc
dec
mov
add
hlt
fstpt
sub
inc
jns
std
pop
adc
or
or
adc
pop
and
xor
sub
xor
shll
add
lahf
sbb
fdivrs
imul
jl
insb
and
xor
sbbb
es
jmp
sbb
lret
inc
xchg
ret
push
adc
push
mov
push
mov
aam
outsl
mov
xchg
test
daa
xor
inc
rorb
icebp
lret
repz
mov
scas
push
cmp
cmpsl
and
sbb
cmp
fistpll
cmp
xchg
jecxz
fnstenv
rol
in
imul
lahf
mov
push
xchg
test
mov
enter
sub
push
cmp
adc
xchg
out
and
sbb
jmp
mov
sbb
pop
or
daa
scas
xchg
jmp
adc
lcall
jl
clc
push
or
stos
sbb
or
dec
lock
and
fnstenv
and
loopne
mov
ret
or
mov
inc
ds
mov
orl
fists
dec
and
nop
xor
repz
inc
cmpb
jb
push
dec
mov
std
mov
mov
stos
rolb
lock
setns
into
fdivs
ret
xor
push
cmp
add
mov
pop
mov
aas
dec
sarl
leave
pop
popf
dec
add
clc
push
pop
fisubrl
cmp
dec
sbb
cs
push
pop
mov
inc
pop
popf
ja
cmp
pop
fstpl
scas
pop
mov
mov
dec
mov
and
sub
int
lahf
jmp
cmp
and
pop
ficomps
cmp
xor
jno
clc
pop
mov
mov
jg
ss
mov
add
add
ss
in
ljmp
pop
sarb
sub
insl
outsl
dec
and
popf
mov
xchg
ja
adc
imul
dec
dec
arpl
pop
push
je
pop
mov
sbb
in
pop
dec
imul
xchg
push
push
ljmp
bound
mov
xchg
jae
push
stos
addb
loope
mov
das
cmp
xchg
cmpsb
mov
shrl
cli
pop
ret
into
outsl
or
push
xor
and
mov
adc
adc
js
outsb
and
mov
dec
cmp
popa
pop
inc
pusha
aas
jecxz
mov
loopne
xor
push
lock
testb
sbb
cmp
stos
lret
mov
dec
sbb
mov
std
inc
sbb
popf
in
in
push
pushf
fcoms
and
sbb
mov
mov
imul
shll
jb
inc
cmp
sti
lcall
jne
pushf
das
pop
jne
pop
je
mov
or
icebp
test
in
mov
aam
imul
cmp
std
aad
sbb
push
adc
xchg
sub
pushf
jns
lods
sbb
adc
cmp
fbstp
nop
or
fcmovb
mov
in
and
fcomp
mov
mov
shl
pop
mov
jp
pop
xchg
adc
xor
adc
jae
jne
mov
xchg
dec
and
inc
push
inc
cmp
mov
bound
fsubr
pop
ljmp
in
push
push
call
xchg
mov
xchg
xlat
jmp
insb
inc
ret
cmp
pop
sub
incl
insw
nop
popf
sbb
iret
rcl
and
jl
loop
push
sti
mov
daa
pusha
repnz
push
lods
in
ret
js
sub
inc
add
iret
push
mov
inc
sbb
cmp
aas
sub
lcall
inc
in
dec
push
sub
xchg
xchg
aam
ja
push
or
sahf
mov
in
in
arpl
and
aam
mov
jns
sub
js
test
repz
adc
faddl
cltd
pop
aas
sub
jno
enter
mull
call
xchg
jl
push
xchg
push
or
movsb
mov
cmp
imul
shll
std
cltd
sbb
mov
insl
jae
in
mov
jb
sub
popf
mov
jle
test
insb
push
roll
aas
sti
loop
test
shlb
push
lock
dec
add
pop
rolb
scas
inc
adc
inc
loopne
lret
mov
iret
pop
push
subl
mov
jge
jb
ret
adc
rorl
lods
stc
movsl
jecxz
push
or
scas
add
add
loop
daa
ficoms
pop
xor
jo
mov
imul
aas
cmpsl
push
and
xchg
pushf
aad
fsts
aaa
popf
cli
ds
int
cmp
ja
loopne
cwtl
xchg
cltd
or
dec
xchg
cmp
aad
and
lods
sbb
pop
jle
inc
and
ficoml
jmp
push
cli
xor
pushf
add
fidivs
or
mov
mov
cmp
clc
mov
jg
mov
inc
test
mov
mov
xor
dec
adcl
sarl
fisubs
sarb
popl
push
in
pop
imul
fucom
mov
rclb
xor
inc
add
stos
xor
dec
fldl
mov
inc
xor
pop
out
push
test
add
jns
mov
in
test
stc
dec
jg
mov
dec
lods
dec
xorl
inc
add
inc
popa
mul
faddl
in
inc
imul
and
and
add
push
xor
outsl
and
xor
test
mov
pop
push
inc
or
jge
clc
jns
xchg
arpl
jg
mov
pop
push
lods
in
cmp
add
add
xor
adc
sahf
mov
adc
outsl
dec
dec
jo
das
xor
cmp
fcoms
cmp
movsb
mov
lea
mov
jb
mov
faddl
dec
aad
pop
shr
jl
mov
arpl
mov
and
ljmp
lods
sub
pop
std
push
sub
jns
pop
cmp
std
ficompl
cwtl
add
mov
inc
mov
arpl
adc
pop
stos
leave
outsb
lea
sbb
cli
loope
sub
dec
popa
inc
xlat
lret
test
jae
les
and
xchg
daa
pushf
insb
cmp
mov
leave
mov
pop
scas
or
clc
das
and
jp
cwtl
sbb
push
ret
xor
mov
popa
lea
jne
repz
sub
or
test
fwait
adc
pop
mov
add
sbb
mov
mov
mov
imul
xor
dec
and
xchg
sahf
xchg
jnp
or
xchg
outsl
arpl
es
mov
mov
jl
aad
mov
mov
adc
lods
sub
ret
outsl
mov
mov
negb
mov
sbb
mov
mov
scas
pop
out
and
xchg
sbb
mov
iret
lret
fistps
mov
push
jne
jmp
sbb
adc
push
inc
lds
les
ficompl
pop
pushl
orb
jnp
sbbb
mov
push
lds
jle
jo
sub
mov
cld
pusha
sub
xchg
adc
mov
dec
jb
sbb
add
stos
cwtl
lret
mov
cmc
or
insl
mov
and
and
lret
pop
sbb
mov
lock
ljmp
ds
int3
out
pop
stos
es
xor
ds
adc
out
daa
mov
or
push
cmp
pop
lock
int
sub
and
jg
and
popa
hlt
fiadds
push
adc
cmp
and
sarb
filds
outsl
xchg
xchg
sbb
mov
and
pop
add
push
xor
cmp
jmp
popf
xchg
mov
lods
lods
dec
push
inc
mov
pop
xchg
and
out
cli
test
sbb
jge
daa
aad
cmp
aas
outsb
mov
pop
jno
clc
add
out
insl
mov
sbb
and
mov
movsb
xor
test
cmc
pop
pushf
jmp
fildl
push
xor
push
outsb
popf
iret
adc
mov
dec
lock
inc
sbb
nop
in
cwtl
outsl
into
test
ds
fs
sahf
hlt
les
push
and
aam
inc
adc
int3
or
cmpsb
je
add
gs
fdivrl
enter
lods
sub
pop
push
int
cwtl
movsb
shl
sti
cltd
push
xor
sbb
cmpb
in
xchg
rol
cmpsb
xor
push
pop
adc
lods
cmp
jnp
pop
adc
cld
scas
mov
jmp
inc
push
roll
dec
addl
inc
and
pop
int
repz
rorl
sub
inc
add
lcall
fs
bound
xchg
icebp
ror
xchg
cmp
pusha
xchg
sti
pusha
and
movsb
or
mov
insb
rcr
ret
loop
xor
pop
in
xchg
rsm
xor
inc
sub
into
mov
mov
push
mov
xchg
call
aam
sub
in
test
push
sahf
adc
push
fcmove
mov
lods
mov
pushf
rclb
ffree
cmp
or
mov
aas
iret
and
mov
push
addr16
and
cli
mov
flds
xor
fiadds
xchg
roll
rcl
sahf
xor
stc
inc
int
inc
fstpt
cmp
pop
popa
aad
sub
lock
iret
rcrb
jg
loope
jg
movsl
dec
push
add
push
push
and
push
cld
add
jb
sub
add
fnstcw
call
mov
push
lock
or
fs
enter
lea
fs
pop
sbb
test
xor
es
or
dec
xchg
adc
xchg
mov
lret
mov
pop
mov
cmp
idivl
iret
mov
xchg
mov
and
lds
jb
ja
mov
lods
mov
xchg
jno
lock
sti
popa
inc
add
mov
mov
sub
fidivrs
adc
jns
cld
popl
jg
aad
lods
jge
or
insl
jae
dec
loope
insb
add
pop
xor
mov
ret
mov
nop
mov
inc
mov
movsl
cmpsl
div
mov
mov
jge
aam
mov
xor
into
cmp
add
xchg
hlt
cs
adc
inc
je
jne
rcrb
gs
das
sbbl
aas
repz
push
mov
adcb
or
and
imulb
mov
jmp
and
iret
pop
das
inc
divb
mov
movsl
jp
movsl
sub
pop
mov
mov
pop
in
or
add
loop
call
or
test
and
outsl
mov
add
sbbb
pop
pop
scas
cmp
fcomp
pop
pop
mov
pop
adc
jge
imul
mov
les
hlt
push
test
push
push
lods
mov
sub
fsubr
xor
leave
xchg
push
push
arpl
cmpsl
pop
shlb
movsb
push
pop
jl
jg
adc
mov
mov
orb
cwtl
xlat
dec
loop
jg
xchg
movsb
rcr
cmp
adc
ret
mov
mov
hlt
add
fwait
pushf
fcomp
xchg
ret
mov
movb
push
adc
sbb
lds
arpl
cmpsl
dec
lods
js
popf
lds
aas
aam
pop
jle
sti
xchg
pop
sti
cmpb
jg
jb
sar
push
xorb
and
inc
subl
cmpsl
shrb
mov
ret
inc
test
jg
cmpsb
test
icebp
imul
out
dec
data16
icebp
pushf
mov
cmp
rorl
in
sub
mov
int
lods
les
xchg
or
nop
andps
fists
mov
fidivs
and
enter
and
loope
xor
lret
mov
movsl
das
mov
mov
popf
mov
call
outsb
push
les
mov
fwait
sub
out
push
push
add
jmp
out
lahf
sub
aam
movsl
into
fbld
adc
in
je
fs
stos
sub
add
mov
sbb
jl
stos
fcompl
das
jne
pop
dec
call
leave
push
jnp
jnp
popf
es
fs
dec
dec
loope
push
out
adc
inc
lret
jmp
es
sbb
popa
cmp
test
loop
ljmp
bound
xor
jp
cmp
pop
cmp
movsl
sub
andb
lea
je
fbld
das
inc
insb
lret
test
or
test
xor
ljmp
stc
jnp
xor
mov
enter
mov
bnd
jo
jne
iret
insl
inc
adc
inc
mov
loope
push
sahf
inc
pushf
mov
cmp
repz
dec
pop
sti
dec
mov
pop
inc
stc
ret
push
mov
or
mov
cmp
pop
aas
scas
mov
push
xor
fwait
or
pop
xchg
sbb
sbb
inc
shr
adc
adc
or
sub
jecxz
inc
stc
popw
mov
cmp
mov
divb
daa
pop
and
mov
cmpsb
sub
and
xor
mov
stc
ja
mov
repnz
adc
les
and
xor
icebp
xchg
mov
or
les
aam
rcr
mov
ss
or
pop
bound
sbb
rcll
icebp
test
mov
or
mov
inc
push
ret
jo
rolb
pusha
sahf
leave
mov
scas
loop
push
sub
push
sub
dec
add
or
pop
jo
out
jne
jne
outsl
mov
enter
xchg
pop
sbb
fnsave
push
lret
pop
adc
int3
mov
cmp
shlb
leave
out
in
ss
ficompl
add
mov
sub
hlt
or
mov
das
leave
fadd
out
gs
lahf
out
int3
push
add
mov
inc
nop
sbb
jne
push
test
addr16
inc
pop
mov
stc
cmp
lods
test
js
test
loopne
pop
stc
jbe
pop
iret
sub
jle
popf
push
lret
aam
icebp
pop
repz
jl
cmpsl
and
xor
mov
sbb
add
call
lea
mov
fisttpl
push
xchg
xor
cmc
movsb
sbb
shlb
adc
adc
cmp
push
mov
ud2
idiv
xchg
cmc
jle
insb
clc
xor
mov
outsl
mov
add
cmp
shlb
fcoms
xor
mov
adc
mov
dec
jecxz
popf
dec
ficomps
aaa
inc
fs
jg
pop
ret
test
mov
test
sbb
icebp
aas
dec
sub
mov
loop
rcrb
and
mov
lds
pusha
mov
push
add
pop
ljmp
icebp
daa
jecxz
jmp
xlat
bound
mov
popf
rep
aad
aad
cmpsb
fisubrl
cmp
shll
inc
inc
or
enter
popa
pop
shl
mov
cmp
jno
add
test
pop
push
mov
les
incl
xor
mov
addr16
adc
neg
xor
daa
push
test
cmp
mov
shrb
cs
popf
mov
daa
pop
sub
mov
jbe
sub
lcall
adc
pop
mov
sbb
mov
aam
jb
mov
xchg
cli
mov
jecxz
adc
outsb
imul
xor
and
or
mov
jl
push
divb
sbb
scas
xchg
inc
mov
rcr
test
cltd
fisubrs
and
adc
loopne
fcmovne
sbb
add
lahf
scas
int3
inc
jmp
pop
mov
cmpsl
pop
cmp
gs
rorl
imul
fdivrp
cmp
and
sahf
pop
push
and
inc
decb
xor
mov
mov
pop
xor
mov
ja
pop
jne
mov
push
or
mov
sub
ret
or
rorb
inc
sub
repz
imul
add
add
cmpl
sbb
roll
test
mov
cmp
mov
push
jb
lods
push
inc
inc
lahf
js
ss
lret
push
cmp
outsl
jp
adc
or
xchg
movsb
stos
lahf
pop
xchg
imul
mov
jns
dec
shll
and
arpl
sub
cmp
jbe
mov
xchg
sbb
pop
mov
or
add
lods
jno
mov
jl
addr16
into
shll
call
push
inc
push
sub
in
dec
ja
lea
enter
das
lods
or
cmp
aam
fsubrs
fsubrs
pusha
or
outsl
dec
mov
rcll
mov
sbb
test
test
jbe
es
adc
popa
and
pushf
movsl
cs
dec
pop
inc
leave
or
arpl
fsubl
and
mov
mov
fcom
dec
into
pusha
xor
sbb
inc
cltd
xor
rolb
call
jno
scas
movsb
sub
inc
mov
fnstcw
and
xchg
pop
loop
jns
xchg
mov
pop
ljmp
out
pop
sub
pop
cmp
add
cld
movsl
icebp
inc
out
popf
mov
push
xor
enter
jb
adc
push
push
pop
mov
mov
icebp
iret
cmpsb
pop
lcall
add
xchg
sahf
jbe
aas
add
cld
push
mov
pop
lods
mov
fdiv
jmp
pop
clc
xor
shlb
xor
in
adc
push
mov
lods
std
test
loope
shlb
int3
jle
in
hlt
mov
sbb
ficoms
inc
adc
aam
pusha
xchg
dec
jp
add
outsl
cmp
pop
push
push
cli
js
out
bswap
cwtl
fdivrp
mov
nop
ret
pop
lods
adc
mov
ljmp
xor
sbb
fisubs
mov
push
lcall
test
movsl
repz
shlb
mov
shll
push
lcall
stos
lahf
fnstenv
and
test
fldt
mov
xchg
fildll
dec
mov
call
mov
xor
lods
and
adc
adc
add
dec
incl
es
or
push
push
je
hlt
lds
lret
and
icebp
sub
push
inc
push
les
sub
or
pop
int
adc
fisubrs
mov
std
sub
xor
je
inc
cs
nop
std
adc
or
ss
movsb
pop
cld
adc
lcall
lcall
inc
xchg
fsubrl
adc
pop
sub
pop
inc
mov
mov
pushf
xor
xor
shl
adcl
out
pop
sbb
xchg
cmp
adc
sub
push
dec
cmpl
pop
and
mov
dec
sbb
xchg
outsb
sti
testl
push
cli
je
outsl
scas
rcll
fbld
or
lret
adc
push
andb
movsl
mov
jns
sub
mov
inc
mov
or
jmp
fstps
xor
pop
pop
mov
and
ljmp
xchg
call
and
leave
out
sti
sahf
lret
and
cmp
insb
call
insl
je
xchg
shrb
test
jmp
notb
movsb
xchg
adc
pop
jne
test
or
lods
mov
add
xor
in
xchg
xlat
cmp
pusha
pushf
fcomps
inc
out
pop
fs
jae
mov
cltd
fistpl
decb
fmuls
or
mov
ss
arpl
dec
stc
aad
push
pushf
sub
pushf
loope
shlb
add
sub
or
loop
jns
mov
in
cmp
adc
inc
inc
or
or
out
adc
hlt
or
ja
and
int
test
mov
ss
mov
push
movsb
andl
xor
sbb
fiadds
sbb
cmp
stc
jno
lahf
out
push
fistpl
mov
sub
and
lahf
push
repz
push
mov
mov
popf
cli
mov
fst
lcall
inc
or
pop
aas
mov
jg
sub
pop
shlb
adc
rcrb
sub
movl
sub
jae
mov
fldenv
pop
lods
inc
ds
mov
jns
std
not
cmpsl
insl
sub
cli
data16
and
fldenv
outsl
pop
enter
push
leave
popf
sti
adc
loope
jmp
jl
fsubrl
popa
inc
fdivl
sbb
jbe
sbb
je
sahf
prefetcht1
cmp
lahf
leave
mov
fiaddl
insb
in
dec
push
cmpl
mov
stos
xlat
lahf
clc
or
lret
mov
aaa
movsb
mov
pusha
js
fs
xor
negb
xchg
mov
sub
adc
mov
push
nop
ds
fcompl
inc
ret
icebp
int
cmp
jb
push
mov
icebp
cmpsb
jmp
add
xor
lret
add
add
or
mov
fmull
pop
mov
xor
dec
es
iret
cmpsb
dec
out
ss
xchg
sbb
push
lret
lods
or
cwtl
jnp
in
xor
push
jns
and
mov
sbb
js
bound
hlt
push
mov
sub
inc
arpl
fdivr
push
or
sbb
aaa
cmpb
scas
xor
jmp
xchg
lods
mov
inc
jbe
dec
add
push
xor
das
push
bound
mov
inc
pop
dec
outsb
mov
ja
scas
fldl
cmp
popf
orl
xor
pop
neg
out
sarb
sbb
jecxz
sahf
iret
fistl
mov
xor
cmp
cmp
movsb
aaa
in
fcomps
sub
cmc
pop
nop
data16
nop
mov
scas
aad
mov
mov
sahf
jnp
pop
stos
sbb
mov
pushf
pop
fsts
retw
aas
mov
aam
inc
fmull
dec
dec
mov
hlt
ljmp
stos
sub
or
outsb
insb
imul
jge
mov
bound
mov
and
or
cwtl
jno
lods
popf
outsl
repz
loop
loope
pop
jne
mov
pop
fmull
fisttps
ret
sub
cmp
jecxz
mov
aas
jp
inc
cmpsl
ret
adc
out
outsl
push
push
hlt
add
cmp
jbe
fistps
call
cmp
xor
pop
out
into
push
dec
push
movsl
pushl
jmp
add
fmul
push
shrl
jno
fwait
jns
ljmp
arpl
dec
cmpsl
in
xchg
xchg
xchg
shll
xor
push
jno
mov
sbb
loopne
xor
jge
cs
lret
je
cmc
aad
out
or
mov
loopne
les
lds
inc
pop
dec
pusha
push
das
add
std
dec
and
push
cmp
scas
add
or
aad
jge
lcall
fisttps
lds
jb
out
pop
aad
enter
in
sub
xchg
outsb
jo
rcrb
mov
xor
cmp
lret
pop
insb
sub
leave
push
in
mov
ljmp
roll
setbe
jb
ja
ret
mov
pop
cld
or
hlt
pop
jns
unpcklps
fimuls
adc
cltd
cs
inc
mov
es
dec
jl
arpl
std
jecxz
sub
push
xor
dec
xor
sbb
call
nop
imul
ja
pushf
cmp
jns
stos
fidivl
lcall
jns
adc
dec
pop
pop
nop
jl
out
pop
imul
or
xchg
add
jle
in
sarl
and
jmp
sub
and
add
xor
ret
sahf
sbb
jbe
aad
jge
pop
mov
fimull
inc
inc
pop
adc
mov
push
inc
daa
pop
xor
repnz
in
mov
jge
into
jae
insb
rcr
dec
adc
cmp
inc
push
jge
test
shrb
movsl
adc
inc
and
push
aas
fistl
push
loope
pop
aam
jbe
add
cmp
test
cmp
inc
in
stc
cmpb
mov
popf
repz
push
lret
inc
xchg
jno
cli
xlat
or
ret
lds
sbb
push
jp
xor
xor
out
jbe
or
adc
out
jge
xchg
dec
repnz
xchg
les
popf
sbb
test
xchg
cs
ljmp
or
jmp
mov
jmp
jae
cmp
shlb
fidivl
xchg
repz
scas
test
and
jae
int3
in
adc
repz
subb
sbb
std
clc
inc
push
mov
cmp
push
pop
loope
push
cli
adc
push
test
arpl
sub
mov
outsb
cmc
das
daa
dec
lahf
dec
cmp
loop
call
adc
scas
leave
insb
pop
push
in
cwtl
out
lret
shr
push
pop
das
loopne
orb
out
pop
xor
int
xchg
movups
or
popf
mov
sbb
xor
loope
push
mov
xchg
mov
jmp
pop
push
mov
dec
add
pop
adc
add
loope
jno
xor
mov
jp
adc
push
and
and
mov
shrl
ret
mov
xchg
enter
lds
mov
jecxz
pop
xchg
nop
pop
push
andl
movsb
cmpsb
and
sub
in
and
mov
fdiv
in
loopne
cld
adc
lret
test
adc
outsb
out
xor
push
sahf
add
movsl
mov
mov
mov
cld
add
sbb
mov
jg
decl
xchg
fisubs
leave
add
cs
stos
jbe
dec
xchg
sub
push
cmp
dec
iret
pop
push
rclb
push
jo
mov
movsb
pop
jmp
ret
lds
adc
bound
pop
in
popa
inc
pop
add
mov
scas
enter
out
sbb
das
mov
mov
xlat
jbe
cltd
mov
fwait
stos
test
fucomip
loopne
adc
sbb
insb
sbb
shl
cli
cmp
or
insl
jbe
cmp
push
or
out
enter
jg
rol
push
and
sub
pop
mov
andl
lods
movsb
call
stos
je
xor
cmpsb
pop
es
js
in
xchg
cmp
adc
push
cmp
jle
jbe
dec
mov
repz
pop
push
cmp
xlat
xchg
push
out
addr16
imulb
or
or
add
ret
pop
push
xor
add
add
or
push
lret
sti
xor
pop
iret
mov
imul
dec
jp
in
xchg
nop
sbb
mov
mov
cmc
js
xchg
mov
add
cli
adc
cmp
outsb
xchg
gs
je
mov
andl
sbb
mov
adc
ficompl
repnz
aad
loope
bound
fwait
adc
pop
jle
mov
xor
les
daa
enter
pusha
xor
lods
pusha
outsb
movsb
fcomi
dec
mov
in
add
xor
icebp
lret
addr16
cltd
sub
cmp
lcall
xchg
clc
mov
pop
pop
sbb
out
fisubl
orb
imul
sub
cmp
inc
xor
add
stos
inc
mov
jge
jae
push
sbb
sub
lret
jnp
incb
inc
mov
popa
sub
mov
jo
clc
es
lea
aas
dec
xchg
fistps
lret
and
pop
js
cmp
into
mov
push
xor
shl
and
add
sarl
mov
pop
sbb
leave
je
lret
sahf
pop
add
jp
sub
dec
dec
or
sar
inc
adc
xor
xor
sub
jb
pusha
cmp
lds
sbb
lods
fisttpll
add
mov
xor
add
aam
stos
and
inc
int
pop
dec
cwtl
xchg
aam
sbb
mov
inc
xor
add
out
lods
and
add
loop
ljmp
sub
sbb
pop
pusha
mov
shrb
mov
call
dec
mov
mov
stos
out
lock
pop
add
imul
sti
popf
sbb
xchg
daa
imul
mov
inc
pop
pop
pop
push
mov
jb
ror
daa
push
sub
mov
aam
rcrl
cmovp
lahf
cmp
jge
mov
mov
sahf
imul
sbbl
mov
mov
pop
sbb
jnp
xorb
fmuls
cmp
jp
iret
mov
sub
jmp
dec
cmp
jno
fucomip
fidivrs
iret
jl
mov
daa
lret
inc
out
xor
lds
xlat
out
or
repz
jb
fisubl
lods
mov
push
push
or
movsl
sbb
mov
xchg
mov
sbb
sbb
pop
fcoms
fmull
gs
in
sub
fsubrp
cmpsb
cwtl
sub
mov
inc
xchg
sbb
lock
inc
mov
xor
mov
sbb
dec
lret
insl
add
sbb
test
push
sub
fisttpll
mov
out
ret
daa
sahf
call
inc
ret
push
dec
ss
rcl
cltd
xor
scas
adc
jbe
xor
inc
mov
cmpsb
popf
loopne
daa
fmuls
insb
test
xor
enter
push
dec
stc
pusha
add
dec
fld
ret
js
mov
xor
mov
or
shll
scas
bound
xor
push
add
cmpsl
jmp
sbb
mov
mov
inc
hlt
add
shld
pop
ljmp
xor
or
imul
pushf
stc
lds
jl
xchg
in
repnz
dec
mov
jbe
dec
stos
lods
cltd
cld
push
js
add
loope
js
popf
cmp
sub
sub
adc
jl
push
adc
cltd
enter
add
pop
push
mov
imul
jno
add
xchg
xchg
outsl
lea
das
mov
insl
lods
loope
pop
pop
fdivrs
add
jne
loop
popa
rcrl
daa
es
loopne
add
mov
mov
lcall
cld
sar
jle
and
out
push
or
imul
out
loop
movsb
inc
xor
mov
pop
idiv
cmp
dec
dec
scas
in
stc
mov
push
add
add
xchg
pop
out
push
dec
jmp
ss
pop
xor
inc
dec
xor
mov
sbb
lea
inc
lock
ljmp
frstor
pop
iret
and
lods
shr
cmpsl
lcall
cltd
movsb
cld
inc
mov
xchg
dec
jae
stos
jo
stos
mov
stos
adc
leave
aad
insb
das
cmpsb
aaa
lods
mov
mov
or
jb
das
test
pop
mov
push
andl
insl
bound
add
lea
push
pop
lcall
xchg
not
push
sbb
fcmovbe
jg
nop
das
pop
imul
push
scas
rclb
ljmp
loopne
aaa
dec
orl
pushf
pop
icebp
pop
xchg
sti
fcmovnb
movsl
adc
push
inc
arpl
push
int
rcll
sub
lea
pushf
dec
movsl
cmp
out
rcll
add
aad
mov
cmpl
xchg
out
adc
cmpsl
cmpsb
adc
fcoms
cmpsb
movsl
xchg
pop
push
hlt
daa
mov
jge
mov
orb
stos
xchg
sub
inc
mov
jmp
lock
push
cmc
mov
fsubrs
jle
aam
xchg
pop
jns
clc
repz
add
mov
ss
inc
gs
fldl
jle
xchg
fcompl
jp
mov
enter
and
adc
popw
mov
and
les
cwtl
cwtl
icebp
in
mov
adc
add
lahf
cmp
pop
push
mov
fiadds
inc
popa
loope
push
cmp
lahf
lcall
rcr
aam
lds
gs
dec
popa
f2xm1
jg
xchg
dec
dec
pusha
inc
mov
pop
out
pop
scas
icebp
jmp
jl
cmp
pop
pop
jge
jl
lret
push
and
cwtl
mov
pop
movsl
test
in
mov
out
inc
add
and
pop
arpl
xor
mov
mov
popf
xorb
jb
aad
cld
fdiv
call
lock
out
dec
test
mov
sbb
sub
xor
out
das
insb
lock
cs
rorl
mov
movsb
xor
imul
divl
sub
push
out
loop
sbb
icebp
fsubl
out
mov
add
rorl
mov
or
iret
xor
and
add
dec
mov
xor
enter
or
rcrl
jmp
movl
xor
inc
fs
dec
push
jne
mov
sub
call
lahf
std
mov
sbbl
pop
push
jmp
push
sub
movsl
out
dec
je
fcmovbe
popa
cmpsl
push
aad
push
lea
xor
inc
pop
mov
sub
pop
or
sbbb
mov
fcmove
sbb
inc
rorl
divb
fwait
jae
das
mov
fdivl
inc
push
sub
jge
push
jmp
js
mov
popf
jne
sti
leave
stos
adc
out
int3
js
push
inc
mov
rorl
sub
out
mov
dec
out
nop
or
dec
aam
ja
pop
lret
ret
aaa
xor
cs
xchg
sub
shrb
les
mov
xor
push
ss
inc
repnz
bound
outsl
sub
and
mov
jge
ret
sbb
xchg
push
js
xor
and
sub
push
xor
stos
ret
adc
cmp
lcall
mov
imul
adc
mov
mov
sub
loop
ljmp
les
dec
push
in
sar
stos
not
mov
ret
or
rcr
pop
and
ss
enter
add
out
mov
ret
jns
pop
pop
xchg
fs
ret
xchg
jo
mov
pop
mov
aad
pop
stos
gs
push
sbb
call
and
bound
jns
movaps
mov
mov
cltd
mov
daa
sub
jno
cmp
movsl
adc
add
lock
and
in
add
cs
or
add
xor
xchg
mov
testl
div
pushf
addl
sbb
inc
push
rcrl
popf
cmp
mov
fs
repnz
pop
add
aaa
test
out
jno
xchg
fcmovu
add
sbbl
xchg
dec
scas
cmpsl
rolb
jp
dec
xor
or
ret
stc
dec
mov
cli
out
mov
scas
mov
stos
into
and
iret
and
stc
stc
rcrb
jg
dec
or
dec
dec
addr16
sbbl
nop
and
loopne
out
adc
ret
in
dec
sbb
shlb
out
sbb
inc
inc
mov
ss
or
mov
sarl
popl
push
xchg
or
xchg
lods
jp
pop
sub
gs
pusha
je
test
pop
cld
jg
add
sub
jmp
or
lock
sub
push
lods
outsl
jae
lret
pop
hlt
adc
les
lods
xchg
sti
mov
mov
mov
pmuludq
adc
call
xchg
fsubrs
xchg
movsb
mov
and
aam
xor
adc
add
and
rcrb
mov
pushl
nop
push
decb
mov
iret
adc
pop
inc
sti
add
inc
push
jecxz
aad
iret
ja
sub
add
xlat
fs
and
loop
xchg
push
xor
scas
icebp
jmp
add
cld
shll
sbb
outsb
inc
mov
loopne
stos
jecxz
adc
adc
push
mov
xchg
call
mov
and
scas
lret
ffree
and
mov
adc
mov
cmp
ljmp
addr16
cmp
adc
jne
xchg
sub
lods
lret
cmpb
fwait
pop
mov
gs
jbe
rorb
imul
pop
int
or
pop
xor
cmpsb
out
shll
xchg
adc
dec
push
mov
mov
mov
movsl
inc
out
cmp
nop
jb
ljmp
std
sub
inc
xor
adc
lea
push
inc
rcpps
lahf
mov
ret
cmp
in
dec
lea
mov
gs
cld
xchg
pop
lahf
jbe
or
test
shll
cmpsb
pop
sub
lcall
adc
push
lock
shrb
fwait
lods
and
dec
mov
xlat
aam
fdivrs
xchg
mov
xor
xor
jecxz
js
mov
pusha
fstps
scas
lds
aam
sub
mov
jae
xor
lods
add
xchg
push
mov
mov
inc
pop
fwait
mov
outsl
push
sti
movsb
mov
xor
mov
popf
xchg
imul
les
mov
xor
sbb
xlat
push
rcrl
or
aas
jne
mov
push
sub
dec
jb
xchg
fdivs
push
sub
cmp
mov
pop
in
cmp
nop
add
cmp
add
and
jae
iret
inc
inc
mov
fldl
xlat
mov
fldt
push
sub
inc
push
outsl
xor
fisubrs
cmpsl
dec
lret
adc
mov
fisubrs
outsb
mov
jbe
int
cmp
into
jbe
ret
fisubrs
sub
mov
pop
xchg
add
hlt
lret
in
push
sbb
mov
inc
repnz
ss
adc
mov
xchg
js
dec
and
mov
scas
xor
sbb
lret
imul
enter
cltd
js
mov
push
inc
xor
and
pop
or
lods
outsb
mov
data16
lods
jecxz
loop
int
jnp
cltd
push
mov
pop
fs
push
mov
in
test
jl
in
push
mov
cli
inc
sub
add
ret
ds
js
aas
xor
xchg
testb
dec
aam
jnp
sbb
fdivrl
rcrb
sub
fwait
imul
loopne
insl
fcomip
or
lods
dec
ds
fbld
xor
loopne
add
lock
es
cwtl
jmp
rcl
test
mov
ret
cmp
pop
xchg
test
aaa
icebp
add
sub
mov
push
cmpsl
cs
pop
cld
inc
sbb
push
imul
stos
out
mov
mov
xchg
mov
and
mov
xchg
mov
cmp
mull
add
sub
aam
cs
sar
ret
test
popf
test
mov
cmpl
mov
cltd
les
cmp
popa
dec
lcall
xchg
pop
loopne
adc
inc
and
jnp
add
mov
jecxz
aaa
mov
ret
fistps
mov
push
popa
add
cmp
jmp
loop
add
dec
cmp
fmull
mov
ljmp
xchg
add
cmp
pop
sub
test
ret
lret
mov
add
and
stc
cmp
inc
fcmovne
sub
jns
pop
and
mov
or
cli
add
or
ror
or
aad
cmp
call
adc
test
pop
fidivrl
lea
in
push
mov
cmpsl
cmpsl
in
jecxz
cmp
jns
lods
push
cwtl
aad
sub
mov
cmp
aaa
cli
mov
adc
and
cs
dec
mov
jnp
iret
mov
pop
mov
orb
in
loopne
fcmovnbe
inc
xchg
repz
pop
lahf
cmp
mov
ljmp
sbb
xchg
in
mov
call
insb
aaa
pop
test
dec
ja
shl
inc
cmp
or
hlt
xor
cli
add
push
lea
xchg
lret
xor
lods
insl
outsl
pop
add
sbb
dec
daa
cld
popa
mov
in
cmp
fucom
jb
sbb
mov
insl
push
push
iret
jge
shl
jne
mov
fildl
popa
sahf
mov
adc
cli
sbbl
pop
or
pop
iret
mov
test
cmp
lods
stc
dec
push
addr16
inc
inc
fdivr
in
js
scas
outsb
ficoms
icebp
es
adcb
cltd
js
movsb
or
jbe
lock
or
jno
sub
jae
aad
out
out
lea
outsl
inc
mov
and
pop
mov
adc
sub
fsubl
int3
aam
mov
adc
and
stc
cmc
addr16
inc
mov
sbb
fdivl
pop
shl
mov
addr16
iret
xlat
cmp
data16
sbb
push
nop
sub
xor
cld
add
cmc
fdivrp
int
mov
cli
aam
into
pop
dec
aas
cli
xchg
mov
push
stc
scas
mov
movsb
dec
cmpsl
ficoms
movsl
jl
ret
hlt
xor
push
loope
or
into
aas
sbb
imul
scas
repz
in
inc
aaa
add
stos
inc
lods
pop
cltd
in
cmpsl
cmpl
call
inc
push
push
pop
pushf
cwtl
sub
gs
mov
xor
mov
aaa
fidivrs
xor
mov
leave
shll
sub
test
jbe
and
dec
aad
fcmovu
jnp
decb
jge
stc
adc
jo
add
mov
xor
pop
push
mov
adc
push
cmp
stc
xlat
mov
gs
dec
inc
inc
fsubrs
int3
jns
push
sarb
pop
inc
mov
inc
bound
repnz
inc
fadds
mov
push
jne
xor
cwtl
push
mov
ja
xchg
std
shll
jae
sub
dec
fsubs
add
scas
mov
cmpsl
xor
call
addb
pop
int3
stos
mov
hlt
adcl
dec
jae
mov
mov
cld
jns
sbb
or
add
mov
cld
sbb
ljmp
cmpsb
btr
xchg
lret
push
sbb
adc
mov
cmp
xor
out
sti
sbb
repnz
pop
popa
cmp
xor
cmpsb
shlb
mov
lea
std
push
sbb
lret
xchg
mull
and
shrb
xor
stos
and
mov
add
ret
pop
jecxz
jb
shll
cmpsl
jnp
xor
push
fs
test
xor
aas
enter
out
and
jno
mov
ds
mov
scas
and
jle
inc
ret
ljmp
das
jecxz
cmc
mov
fistl
pushf
sbb
jle
dec
jne
daa
add
jl
shll
filds
sbb
jno
or
test
mov
dec
xchg
jnp
inc
cmpsb
xchg
pop
cmpsl
pop
cmp
repnz
jmp
push
je
inc
arpl
insb
mov
dec
push
xchg
incb
int3
inc
push
insl
jge
xchg
sub
jl
mov
ret
push
pop
in
mov
or
in
cmp
or
rol
leave
in
or
adc
cmc
out
sbb
sub
and
mov
push
leave
adc
fnsave
mov
jne
fwait
lea
mov
pop
pop
jae
sarl
repnz
or
cltd
jns
popa
jmp
cmc
jne
jle
enter
decl
imul
push
xchg
testb
or
into
jb
cmp
sti
shrb
inc
and
dec
mov
pusha
inc
inc
lahf
sti
clc
in
sub
arpl
in
cmp
popa
ret
pop
imul
jle
test
mov
cmp
popf
addb
pop
lret
gs
jp
mov
pop
pop
mov
lock
outsb
inc
xchg
data16
mov
add
sbb
xchg
push
test
icebp
and
xor
mov
shlb
mov
and
test
hlt
fcompl
mov
and
insl
sbb
sub
lds
mov
pusha
dec
inc
popf
fcoml
cmp
cltd
imul
push
add
aaa
gs
jns
sbb
add
idivl
xchg
fldl
jbe
test
inc
mov
push
mov
jns
test
add
mov
shrl
push
jo
adc
pop
mov
bound
arpl
ret
mov
xchg
fsubl
in
ljmp
in
and
sahf
fs
sbb
insb
les
pop
sbb
out
and
es
pop
mov
sub
into
aam
or
lea
or
jno
sub
mov
mov
inc
cltd
jle
sbb
clc
scas
popl
ja
js
out
aad
inc
jmp
ret
push
stos
cs
test
mov
or
mov
jmp
shrb
cmc
xchg
xor
xor
outsb
test
into
int3
cmp
lods
or
push
rclb
aam
push
cmp
mov
mov
mov
sbb
in
cmc
ret
lcall
dec
lahf
mov
sbb
add
int3
xchg
popa
lods
cmpl
aam
adc
xor
dec
mov
add
lds
ficomps
or
push
mov
scas
mov
dec
sbb
sbb
mov
inc
lret
into
sub
fcmovu
dec
push
outsb
test
cli
shrl
mov
cmp
daa
dec
sbb
sub
xchg
jg
fs
arpl
or
rcrl
jb
clc
cld
faddl
aas
test
out
shll
mov
jmp
pop
mov
xchg
xor
push
mov
or
inc
lret
clc
jl
mov
inc
jmp
shl
xchg
aam
fs
xchg
inc
jecxz
and
jmp
jge
fcomi
pop
jno
fbstp
push
daa
jp
cmc
xchg
mov
add
je
push
xor
ret
dec
mov
jp
pushf
fsubrl
shrl
dec
mov
cmp
jne
xchg
jo
pop
cmpsb
inc
push
sar
rcr
stos
scas
adc
pop
pop
push
mov
push
lock
iret
xchg
into
in
pop
adc
and
lock
xor
cli
ss
repz
je
and
cli
cld
ljmp
xchg
and
mov
cmovge
fs
enter
and
loop
fistpl
adc
inc
jmp
stos
push
ljmp
dec
push
xchg
or
aaa
mov
in
adc
push
mov
call
fstpl
pop
loop
jge
mov
mov
cmp
pop
xchg
out
fs
sub
adc
test
loopne
dec
inc
and
js
mov
adc
aas
sbb
dec
xchg
jb
adc
fwait
or
pop
pop
xor
loope
and
sbb
mov
dec
pop
mov
pop
dec
push
dec
jns
xor
xchg
aam
xchg
movsb
icebp
cmpsb
sti
mov
push
jne
orl
scas
sub
mov
sbb
add
jle
inc
pop
loopne
adc
ja
jb
and
push
sub
scas
insl
mov
rorb
fistpl
lahf
push
add
mov
jecxz
call
das
push
stos
insb
mov
out
add
push
mov
ret
dec
inc
fists
mov
cmc
dec
int3
jg
inc
popa
daa
xchg
movsl
xchg
adc
lahf
clc
mov
or
and
sub
stc
dec
test
push
fsubl
xchg
movsb
cwtl
pop
fwait
movsb
sub
sbb
fstps
insl
or
mov
adc
cld
add
and
sub
sbb
sarl
ret
mov
pop
and
scas
and
jl
mov
xchg
inc
movsb
cmpsl
les
adc
inc
out
lret
cmp
loope
aad
mov
and
fmul
int
push
push
cmp
das
dec
nop
push
sub
mov
mov
pop
pop
xchg
adc
lods
cli
pop
mov
sbb
insl
test
xchg
xor
int
lds
push
push
cmc
sub
dec
popa
gs
dec
test
mov
subl
cld
dec
fdiv
jo
cmp
bound
inc
cmpsb
daa
adc
enter
dec
ror
mov
das
cld
mov
out
cmp
adc
js
fdivl
arpl
nop
jmp
or
adc
popf
mov
cltd
fs
mov
pop
cmp
cmc
ljmp
outsb
cs
rolb
xchg
push
out
gs
lea
leave
jmp
pop
jno
jae
scas
shlb
lea
mov
adc
cmpsb
inc
and
in
mov
cmp
outsl
fwait
test
aam
into
data16
and
data16
fstpl
push
stos
sub
pop
pop
cmp
test
addl
sbb
jmp
out
sbb
dec
pop
dec
mov
scas
pop
cmp
mov
push
cmp
xor
mov
inc
pop
incb
inc
push
in
nop
cltd
inc
shrb
ficoms
sbb
andb
push
pop
jl
ja
jnp
out
icebp
sbb
lret
push
push
push
mov
add
jne
xor
xor
fistpll
data16
mov
rorl
psubb
add
lret
scas
pop
mov
daa
push
neg
fstps
mov
sahf
hlt
rcrl
mov
in
or
lds
in
ja
cmp
and
add
dec
pop
sti
inc
push
push
mov
fs
sub
jge
add
test
outsb
push
xor
and
sub
in
ret
lret
in
in
loope
push
std
cmpsb
jg
addb
push
cmpsb
loope
mov
popa
mov
cmpl
mov
js
xor
mov
inc
xlat
mov
inc
in
test
outsb
mov
ss
aas
stos
inc
loopne
pushf
cwtl
cltd
jg
enter
sbb
adc
jmp
mov
add
out
and
arpl
xchg
cmp
fcos
clc
or
cltd
ds
mov
jo
cltd
inc
pop
sbb
mov
insl
sti
movsl
cmp
push
daa
push
mov
lock
and
dec
cmp
xlat
out
sbb
cmp
pavgw
push
push
ficoms
pushl
mov
cmc
adc
xchg
cmp
xor
mov
dec
cltd
int
repz
clc
nop
jne
divl
mov
into
rcr
mov
ret
dec
sbbb
mov
or
pusha
inc
push
jl
es
and
popf
add
cmp
xchg
cmp
adc
pushl
je
mov
rcl
out
jne
xchg
mov
dec
pop
push
mov
pop
ret
mov
mov
inc
pop
xchg
dec
and
pop
xchg
fs
lods
test
pop
or
rorl
sbb
dec
in
jg
aaa
mov
sbb
or
xchg
and
jmp
jg
push
mov
icebp
outsb
sub
push
clc
cmp
out
outsl
sub
sub
in
pop
mov
mov
xchg
push
fsubs
cld
mov
jb
fnsave
adc
insb
mov
pop
cmp
xor
inc
lea
fsubl
lods
adc
pop
cmp
mov
sub
adcb
adc
sbb
push
mov
push
sub
stc
jl
mov
xor
jmp
pushf
shrl
aad
scas
mov
mov
xchg
cmp
and
cwtl
or
movsl
mov
call
jns
inc
mov
cmp
in
cld
aas
push
cli
xor
push
rorb
hlt
jmp
stc
out
mov
sub
mov
icebp
adc
sti
adc
dec
mov
push
pop
jg
cmc
jb
movsb
cld
stc
mov
scas
jmp
ljmp
faddp
movsb
mov
pop
ds
sub
jo
dec
aaa
sbb
push
arpl
js
xchg
pop
pop
into
mov
xchg
movsl
call
loope
fistpll
mov
gs
ja
aad
int
ficoml
push
pop
das
lea
push
roll
outsl
jno
es
test
add
add
sub
es
sbb
jne
push
leave
pushf
faddl
stos
hlt
loope
jecxz
int
ja
add
mov
popa
push
adc
loopne
push
orb
loopne
and
push
out
sbb
out
sbb
add
xchg
test
sub
addl
addl
pop
imul
adc
pop
leave
sbb
cmc
cwtl
mov
in
cmp
adc
and
lahf
ljmp
xorb
sbb
popf
mov
xlat
imul
mov
cmp
pop
orl
cld
xchg
cltd
sbb
sarb
das
insb
sub
adc
mov
das
insl
ret
mov
aam
mov
push
aaa
addr16
push
push
scas
rcr
imul
sbb
sbb
int3
sbbl
ret
test
pop
and
xchg
inc
fcom
pop
push
or
fldl
xrelease
outsb
ss
aam
into
lock
pop
repz
lret
insb
xor
inc
fiaddl
mov
mov
and
push
push
es
push
ret
paddsb
aad
fisttps
stc
mov
jmp
or
stos
adc
mov
orl
sub
and
stos
dec
pushf
push
addw
pop
jle
popa
mov
mov
sbb
in
sbb
mov
mov
cmpxchg
push
sarl
outsb
movsl
mov
mov
dec
hlt
add
ds
shll
or
jge
push
adc
mov
jmp
enter
lds
xor
loopne
dec
dec
push
jmp
das
push
jnp
sbb
push
cmc
mov
shlb
push
out
in
daa
mov
dec
and
cld
arpl
jmp
fs
enter
mov
and
and
sbbb
cli
mov
and
orb
jp
out
addl
mov
xchg
jl
adc
icebp
sarl
dec
cmp
and
in
lods
out
je
pop
sub
cli
ret
dec
dec
adc
and
jno
mov
cmp
aad
mov
out
push
jge
aam
out
mov
add
fidivl
add
mov
cmp
or
cmp
dec
shl
adc
iret
add
mov
in
sub
ds
sbb
pusha
pusha
mov
call
dec
aad
in
arpl
call
rclb
sbb
xlat
imul
aas
nop
sahf
aam
mov
push
popf
gs
lret
or
mov
stc
repz
leave
fsubrs
int3
lods
out
std
add
jmp
dec
rcrb
sub
imul
xor
pop
dec
cli
jns
xchg
xor
ss
jle
iret
aaa
lea
cmp
xor
push
sub
in
imul
aad
mov
in
dec
add
nop
sub
jl
pop
sti
push
sub
push
pop
leave
lods
addr16
enter
fs
dec
jge
cmp
into
stc
enter
arpl
mov
imul
fcomps
xor
lea
sub
icebp
mov
test
mov
cltd
popa
cmp
adc
repnz
dec
inc
es
ljmp
dec
nop
push
cli
mov
ret
dec
mov
adc
mov
push
xchg
jl
aad
push
sub
sahf
sbb
jecxz
xor
dec
mov
adc
or
test
sbb
sub
pusha
inc
stc
icebp
int3
cltd
int3
mov
inc
cs
lcall
dec
in
ds
negb
leave
push
cli
repnz
or
cmp
cmp
hlt
adc
mov
sub
mov
or
jns
lret
loop
inc
aad
loope
mov
lock
mov
mov
les
nop
sahf
add
push
or
mov
ss
popa
repnz
xchg
pop
sti
in
clc
cmp
and
dec
addr16
adcl
scas
negb
xchg
sarb
cltd
fucomi
inc
rcrb
jle
fdivl
mov
nop
sbb
cmp
jle
jb
test
out
and
add
inc
stos
add
sub
pop
lock
adc
jle
outsl
jno
adc
sarl
ja
cmpsl
xor
xor
pop
es
sub
and
stc
sti
mov
je
jg
aas
adc
loopne
inc
loope
jp
lahf
pop
cmc
xchg
fistps
dec
fsubrl
lock
mov
xchg
out
movsb
fwait
push
mov
push
push
push
sub
mov
xchg
xor
push
aad
mov
push
mov
sub
xchg
outsl
int3
cld
shll
xchg
sub
popf
mov
push
jns
inc
mov
loope
push
and
subl
and
lock
int
pop
in
dec
insb
and
paddsw
mov
push
sub
mov
mov
scas
cli
push
test
lods
push
test
dec
push
loope
fdivs
lods
stc
push
xchg
sbb
mov
rorb
jge
pop
ret
xlat
mov
jmp
jecxz
mov
inc
mov
add
mov
push
cmp
inc
mov
push
mov
ret
jl
sti
aas
adc
mov
mov
dec
fistps
int3
movsb
sbb
shl
xlat
jnp
sbb
mov
icebp
into
push
or
into
push
sub
lcall
mov
dec
cwtl
xchg
dec
mov
ja
movsb
into
sbb
add
out
call
xlat
push
nop
sub
fisttps
aaa
shrb
aad
repnz
in
js
loop
pusha
pusha
pop
cltd
std
dec
in
or
cmp
movsl
mov
out
je
aam
cmpsl
add
popa
stos
repnz
add
and
sbb
pop
fmuls
inc
aad
or
jge
jp
loopne
cmp
repz
test
bound
xchg
sahf
mov
hlt
out
pop
cmc
lret
fs
mov
lods
pop
loopne
arpl
mov
push
add
fs
push
cwtl
shll
pop
stos
inc
into
mov
out
lcall
roll
push
movsb
sbb
in
adc
aaa
mov
add
lahf
pop
pop
loopne
xor
es
dec
stos
inc
mov
ffree
mulb
icebp
inc
push
xchg
sub
and
adc
mov
jae
test
push
cmp
cs
mov
cltd
xchg
sbb
xor
sub
sbb
mov
arpl
sub
jnp
dec
out
call
xlat
sub
faddl
in
jb
ror
cmp
out
mov
test
cmpb
movsl
add
mov
xabort
loope
pop
stc
jge
out
jle
jl
mov
mov
cli
jle
cmp
ljmp
sub
mov
jns
clc
ja
decb
sbb
pop
and
clc
cmp
cmp
mov
dec
xchg
push
push
outsb
add
mov
or
test
jecxz
mov
outsl
inc
mov
xchg
mov
push
aas
jno
jae
pop
arpl
push
cmp
fwait
subl
sbb
loop
lea
and
clc
inc
add
sub
mov
das
sub
les
adc
pushw
xchg
mov
jmp
mov
imull
pusha
add
or
or
mov
cmp
cwtl
push
push
add
mov
bound
ret
scas
stos
jge
pop
pop
xchg
pop
push
in
jmp
out
add
pop
loope
xor
xor
jbe
or
fwait
popl
jmp
bound
sbb
pushf
pushf
test
sahf
pop
cmp
enter
int
adc
sub
call
movsl
push
push
jg
inc
and
addb
and
in
shlb
dec
in
and
dec
xor
xchg
or
ds
pop
and
jno
push
dec
mov
mov
divl
ds
fiaddl
hlt
sbb
pop
jg
outsb
adc
cltd
test
cmp
fstl
iret
dec
xor
xlat
push
das
call
xor
ret
les
cwtl
pop
and
clc
sti
push
mov
pop
push
push
push
lret
test
xchg
or
cs
lods
stc
fldl
cli
fsubr
pushf
ret
arpl
pop
sbb
pop
sti
lret
mov
insb
inc
out
mov
loop
pop
sbb
popa
test
pop
ss
test
ret
inc
inc
in
nopl
pusha
xchg
hlt
imull
sub
adc
addb
pop
dec
or
pop
push
fldcw
push
mov
out
add
mov
jle
dec
cmp
adc
lret
cmp
jnp
aas
lock
push
test
mov
jp
loop
js
icebp
sub
dec
scas
imul
cwtl
fldenv
ret
sub
in
movsl
repz
imul
dec
lods
jg
pop
aad
pusha
pop
inc
dec
fimull
punpckhdq
push
cltd
inc
scas
xor
jo
jge
out
sbb
fstpl
out
push
adc
inc
fwait
xor
pop
dec
mov
push
push
adc
fiaddl
aam
fldcw
ret
js
stos
adc
out
mov
pop
mov
dec
ljmp
adc
sub
push
adc
popf
jno
fsubl
xchg
stos
subl
enter
add
inc
lods
xchg
mov
fisubs
aaa
jg
outsb
mov
ljmp
scas
daa
mov
movsl
inc
cmp
inc
lret
jp
and
daa
sub
stos
jne
sub
stos
xchg
dec
aad
xchg
mov
jbe
cmpsb
repz
rorl
add
push
enter
nop
andb
fsubrl
nopl
mov
int
add
mov
push
push
std
int3
xchg
cmp
popf
push
jnp
add
int3
adc
and
pop
add
push
cli
sahf
rcrb
dec
mov
insl
add
pop
push
ds
push
add
mov
add
pop
dec
imul
aam
jno
mov
pop
into
mov
cld
and
lret
fwait
xor
stos
mov
push
stos
int3
in
sub
mov
movsb
addr16
nop
shl
mov
addr16
cmpsb
sbb
sbb
xchg
mov
push
int
xchg
test
flds
inc
sahf
imulb
sub
sti
fnstcw
aam
mov
jg
mov
or
roll
push
loope
jmp
loope
dec
inc
push
repnz
mov
mov
in
ljmp
lret
cwtl
mov
adc
mov
and
and
mov
lods
loopne
test
aas
jmp
pop
mov
push
popa
cmc
add
add
loopne
out
dec
bound
xchg
mov
dec
clc
out
sarl
loope
mov
int3
push
mov
cmp
push
mov
pop
or
fwait
and
pop
mov
and
jp
or
lret
les
bound
fdivp
mov
gs
das
add
cmpsl
test
jo
pop
add
dec
loop
mov
mov
test
jbe
dec
xor
jns
repnz
mov
pop
aas
inc
sub
nop
bound
lahf
popf
jge
dec
sahf
xchg
push
enter
xchg
or
mov
adc
leave
jo
xor
sbb
in
xchg
in
and
test
jae
pushf
add
lret
push
mov
aas
mov
hlt
xchg
add
daa
cmp
sbb
dec
sbbl
insb
push
mov
and
mov
or
fidivrs
cmp
aad
push
sub
fmull
popa
jmp
mov
inc
dec
cli
addr16
loop
add
adc
inc
shrb
push
mov
xchg
mov
mov
scas
push
mov
aam
cmovno
sahf
loop
nop
leave
clc
jmp
addr16
stos
lea
lods
cwtl
ret
add
fnstcw
in
js
xchg
test
and
push
adc
pop
sahf
xor
adcl
fildl
pop
fcomps
int
pushf
ja
int
sub
mov
pop
repnz
sbb
packuswb
nop
cmp
xchg
test
clc
mov
sbb
xor
sarb
in
add
cli
out
movsl
inc
sub
mov
adc
daa
and
dec
mov
into
ret
cmp
mov
push
scas
xor
test
add
ret
out
inc
xor
mov
fists
pop
sub
in
popf
adc
iret
push
mov
aam
jnp
push
repz
mov
adc
jns
cmp
add
arpl
xchg
out
xchg
ja
sub
fnsave
sbb
inc
ret
addr16
rolb
dec
mov
push
insb
fnstsw
pop
jae
fldcw
xchg
xor
add
imul
cmp
fsts
lret
jecxz
push
fucomi
mov
movsl
icebp
cmpsl
pop
sub
addl
call
js
sbb
stos
rcrb
jg
jl
or
sub
repnz
loopne
nop
pop
adc
add
aad
outsb
lret
out
js
push
imul
jp
stc
lcall
jno
xchg
dec
decl
sbb
mov
fs
dec
and
insb
cwtl
push
xchg
mov
and
fldenv
test
ss
sub
jmp
xor
mov
call
ret
fldl
outsb
dec
sub
or
jmp
mov
pop
sbb
sahf
scas
jecxz
icebp
loop
cmpl
dec
jmp
jp
idiv
push
adc
std
dec
push
mov
es
fisubrl
cmp
dec
sub
push
in
and
mov
ret
mov
push
stos
sub
outsl
mov
inc
xchg
xlat
push
mov
cmp
pop
jp
out
cmp
daa
mov
or
jp
jne
adc
mov
shlb
push
jge
daa
enter
scas
lret
or
xchg
mov
or
adc
inc
shll
pop
jge
test
pop
jae
cld
cmp
iret
js
mov
shrl
nop
jl
lock
inc
or
add
sti
jecxz
mulb
adc
icebp
popf
pop
cmpsb
push
fcomps
cmpsb
cmpsb
mov
cmpsl
rol
jo
jp
movl
outsb
sbb
sub
sub
pop
push
cmpsb
insb
mov
lret
xor
cmpsb
or
jge
aam
and
lods
ja
xchg
popf
in
mov
icebp
mov
pop
les
cs
lea
hlt
aam
rolb
cmpsl
in
ret
pop
fwait
pushf
inc
mov
fdiv
dec
push
add
xor
repnz
sbb
push
ds
cmp
fdivrl
mov
mov
aaa
imul
or
cli
cmp
out
mov
xor
jg
imul
popf
cmp
daa
push
jns
jns
push
lcall
fdivrl
repz
push
hlt
and
test
iret
sub
sub
dec
sbb
pop
add
popf
push
lahf
pop
cmp
jecxz
push
dec
test
pop
pop
lret
xor
and
push
cmpsb
pop
inc
mov
out
data16
aam
test
rolb
mov
adc
dec
mov
sbb
adc
ret
xor
dec
mov
pop
decl
pop
leave
xchg
repz
sets
sti
pusha
stc
cmpb
es
shll
dec
cwtl
fadd
push
pop
xor
or
xlat
push
mov
imul
js
mov
bound
and
aaa
xlat
bound
cmp
pop
and
fadd
jbe
or
sbb
pop
sbb
xor
imul
in
adc
lds
clc
ljmp
icebp
mov
cmpsb
mov
hlt
push
popa
push
add
mov
pop
fs
cmp
mov
sub
push
jg
jb
gs
in
js
jmp
xchg
push
stc
mov
jb
pop
idivb
push
xor
dec
xchg
aad
sub
cld
mov
aam
cmc
cmp
in
mov
lahf
push
jnp
inc
scas
add
add
test
mov
mov
add
sbb
fiadds
ror
push
int
addl
or
mov
mov
xor
ret
mov
push
js
push
mov
pop
int
ljmp
and
mov
cmp
loop
cmpsb
dec
mov
leave
and
fnstcw
inc
mov
pop
movb
je
dec
mov
adc
cmc
mov
outsl
inc
inc
in
lock
sbb
mov
fdivs
push
mov
pop
or
popf
mov
and
sarb
movsl
je
icebp
ret
jne
outsb
xchg
sub
stos
mov
mov
jecxz
nop
jbe
inc
sbb
mov
cmc
jns
pop
fdivl
in
fstpt
stos
addl
loopne
fsubrl
inc
stos
div
dec
push
out
inc
mov
dec
mov
es
mov
test
dec
jle
in
movsb
xchg
fsubr
inc
dec
js,pt
bound
jp
js
mov
xchg
mov
inc
inc
add
flds
leave
xor
push
pop
pop
jne
push
pop
pop
xor
fcmovne
jmp
jg
pop
stos
ljmp
bswap
sub
or
paddw
jae
leave
popf
repnz
lods
pusha
sar
cld
mov
cmpsl
lea
test
aaa
rorb
mov
test
std
gs
movsb
jae
idivb
sar
mov
mov
pop
into
or
clc
xor
xlat
push
mov
push
cmp
popa
aas
cmp
enter
xchg
or
push
xor
xor
xchg
aaa
in
adc
adc
les
outsl
jbe
les
cltd
lret
dec
fsqrt
and
cmp
mov
jge
int3
add
pop
clc
push
mov
xchg
sbb
imul
insl
adc
pop
sahf
pop
mov
fistpll
xchg
repnz
jbe
jno
dec
sbb
ds
jmp
sahf
stos
jl
xchg
mov
aas
aam
inc
mov
mov
cmp
js
in
push
repnz
push
pop
lahf
sub
pusha
fistpl
scas
fists
jne
xor
push
mov
cmp
inc
and
dec
mov
pop
push
dec
push
push
adcl
jp
mov
sbb
cli
xor
cmp
sub
pop
jmp
xor
sbb
pop
int
or
xchg
inc
into
in
mov
lds
iret
scas
add
jmp
loop
and
or
and
or
test
sarb
jno
lret
sarb
mov
mov
mov
jb
lods
mov
xchg
int
mov
cmp
outsl
pop
jg
bound
or
mulb
xor
push
push
stos
daa
jno
inc
push
mov
test
outsl
test
lahf
adc
mov
out
std
loopne
mov
roll
xor
inc
movsb
xchg
leave
sub
cmp
das
ret
mov
test
dec
push
lahf
sbb
cs
sub
gs
and
jne
aad
and
sti
or
mov
shrb
adc
popa
out
dec
pop
mov
pop
hlt
aas
push
xor
cmc
pop
cli
ret
pop
and
push
movzbl
cmc
add
cmp
sbb
clc
sbb
push
xchg
push
jb
clc
sbbl
mov
insl
cmp
pop
mov
pop
mov
enter
or
and
gs
ss
cmp
cmpsl
inc
xchg
fistl
lods
inc
and
lods
xchg
xchg
stc
jo
jge
data16
pop
mov
fcmovb
loopne
add
push
daa
out
pop
cmc
test
or
pusha
cltd
not
addr16
mov
sbb
fmuls
xchg
push
push
sbb
mov
jo
test
in
push
rcll
stos
sub
lock
and
push
inc
sub
psllw
shlb
into
jle
pusha
push
sbb
push
fsts
dec
scas
roll
imul
lcall
ds
and
add
ljmp
call
or
pop
fmul
dec
sti
mov
mov
pop
out
daa
jecxz
push
mov
pop
xor
jno
lods
mov
adc
adcb
rcrl
or
aad
shlb
xchg
dec
xor
gs
enter
sbbb
stc
aas
sub
shl
sarb
inc
enter
stos
or
mov
mov
push
pop
popa
dec
mov
push
lods
lods
lret
jae
das
in
xor
adc
sarl
pop
insb
loop
in
push
and
test
pop
mov
in
pushf
adc
icebp
incl
lret
xchg
movsl
fs
icebp
mov
pop
loope
fdivrs
andb
cli
cwtl
mov
dec
adc
popl
mov
hlt
or
das
out
xchg
inc
mov
sub
push
repnz
jb
lcall
dec
fwait
push
inc
cmp
call
sub
sbb
mov
mov
add
push
lock
add
ror
arpl
xchg
pop
clc
sub
popa
in
jp
push
xor
sub
jb
in
test
cmp
mov
pop
hlt
in
sbb
movsl
out
or
add
xchg
js
adcb
mov
fisttpll
mov
mov
sub
fs
loop
push
fsubl
mov
test
int3
jo
xor
imul
mov
negl
test
cmc
fstps
inc
lret
stos
sub
dec
add
mov
outsb
loopne
xchg
jne
mov
add
jl
into
fstps
xchg
sub
push
inc
out
sub
mov
loopne
push
rolb
sbb
dec
dec
push
mov
sbb
xlat
jb
cmp
scas
xchg
ja
out
in
pop
push
cmpsl
andb
inc
xorb
leave
enter
adc
mov
mov
and
push
jae
ds
mov
out
in
add
cmp
movsb
lds
push
fisttpl
mov
or
mov
cmp
sbbb
jbe
imul
xor
lcall
inc
lea
adc
push
test
and
jmp
xorb
pop
add
sub
addb
ljmp
mov
dec
mov
push
mov
mov
sahf
mov
insb
cmp
mov
sbb
xor
frstor
test
jae
cmc
add
pop
std
mov
lods
and
inc
push
lea
jae
pop
sbb
shrb
hlt
pop
mov
sbb
pop
xchg
call
dec
jcxz
sub
repnz
leave
imul
pop
out
test
xor
push
and
mov
cltd
ror
outsl
mov
add
jnp
inc
andb
out
jle
leave
lods
insl
and
jg
jb
ljmp
hlt
jb
orl
cmp
lret
pusha
fdivl
aas
cwtl
add
rcr
gs
mov
push
mov
arpl
push
loop
ret
mov
lods
int
or
pushf
aas
addr16
imul
fcoms
std
adc
xchg
repz
icebp
mov
xor
sub
or
enter
divb
aam
dec
adc
mov
and
sub
popl
mov
jne
jne
push
nop
leave
outsb
adc
mov
push
or
pop
iret
xor
jnp
iret
test
mov
push
sbb
push
mov
jb
xchg
cmc
add
rorb
mov
mov
lcall
fs
adc
repnz
push
mov
lods
mov
aam
or
mov
cmpb
xor
push
inc
mov
jg
data16
mov
xor
inc
mulb
nop
lock
and
outsb
jge
xor
xor
cltd
clc
push
cltd
inc
adc
or
cmp
xchg
push
bound
arpl
test
rcr
sub
and
inc
test
sti
mov
andb
sahf
inc
push
aad
rorl
mov
mov
dec
mov
les
loope
dec
cmp
scas
insl
mov
ja
lods
enter
pop
cmp
xchg
push
push
inc
xchg
mov
adc
call
dec
dec
and
dec
jle
mov
mov
adc
inc
int
xor
dec
outsl
sbbl
int3
add
les
jns
insl
sub
ret
and
pop
or
adc
sbb
ss
adc
ret
je
ret
mov
mov
or
sbb
les
cmp
or
mov
les
push
adc
divps
pop
inc
testb
xchg
mov
in
push
and
adc
sahf
pop
ret
divl
shll
adc
cld
sbb
dec
rcl
xchg
shrl
xchg
cwtl
adc
and
push
sbb
mov
arpl
cmpsb
xchg
dec
scas
cmp
push
ret
adc
mov
stos
pop
or
iret
scas
lods
jge
pop
test
outsl
jp
testb
je
nop
mov
mov
adc
addr16
jo
jge
negb
mov
leave
mov
xchg
dec
loopne
popa
sbb
jg
sbb
jge
std
bound
dec
mov
outsl
insl
int3
loopne
xchg
lock
repnz
mov
cmp
pop
adc
mov
sti
inc
xor
inc
push
popf
xchg
inc
out
inc
adc
sbb
sbb
cmpsl
sbbb
or
out
je
push
data16
dec
out
stos
pop
jno
dec
stos
mov
movsl
fiaddl
movswl
es
lcall
mov
pop
cli
adc
mov
sub
and
icebp
sti
jmp
xchg
sub
iret
addl
out
push
mov
mov
cli
and
add
les
cmpsl
pop
jmp
push
shlb
fs
pop
xor
or
xchg
movsb
stos
push
sub
dec
ret
ja
pop
adc
sub
scas
inc
mov
cmp
fwait
push
clc
and
jg
adc
lcall
inc
in
jbe
sub
jl
and
pop
gs
ja
int
cli
jae
adc
loopne
sub
mov
testl
cmp
ss
push
push
pushf
pop
ret
mov
lcall
in
loopne
in
ret
inc
dec
dec
out
sub
adc
mov
pop
inc
int3
jae
jge
bound
add
loop
adc
jle
adc
in
pop
pop
inc
mov
addb
adc
sbb
lret
mov
pop
sub
fistpll
mov
and
jmp
mov
mov
sub
testl
jp
jl
stc
push
pop
inc
sub
cmp
test
ds
pop
cmp
add
mov
add
xchg
pop
test
push
sub
out
loopne
pushl
add
lds
int
xchg
dec
sub
cli
mov
daa
jmp
and
push
or
arpl
loopne
add
leave
xchg
dec
push
scas
dec
mov
das
outsl
outsb
xchg
cwtl
cwtl
std
push
lcall
xchg
cld
lds
pop
leave
lret
test
mov
mov
into
push
or
pop
jmp
movsl
sub
stc
notl
in
pop
lahf
jp
decl
repz
sub
lds
add
and
aas
sub
mov
rcll
dec
insl
clc
je
loop
addr16
push
je
jbe
insb
repz
test
scas
cmp
dec
mov
cs
sub
inc
popa
aad
pop
xor
and
stos
inc
sub
xchg
bound
dec
push
mov
sub
or
in
mov
popf
cmp
xor
or
push
dec
ficompl
and
fcmovne
cwtl
cmpsb
sub
mov
xchg
outsl
int
arpl
adc
outsl
shlb
rcrl
push
int3
cmpl
sarb
les
pop
scas
fidivl
pusha
stos
repz
sub
xor
xor
incb
int3
cmp
inc
nop
cli
inc
stc
dec
inc
pop
or
add
jnp
dec
out
mov
iret
pop
mov
test
imul
pop
pop
sbb
dec
stos
dec
stos
fsubrp
sbb
jnp
xchg
lahf
mov
sahf
push
jl
and
mov
outsb
push
negb
cmpsb
mov
dec
cmp
pop
and
aam
stos
mov
mov
mov
add
xchg
inc
inc
pop
rorb
inc
rcrl
mov
leave
dec
sarl
sbb
or
jbe
lds
mov
pop
push
in
sub
aam
jne
sub
add
aam
je
in
jno
sbb
sbb
leave
pop
rcrb
adc
push
scas
xchg
xlat
sbb
stos
xchg
stos
push
dec
jb
jno
jb
imul
push
cmp
cmp
lret
aad
xchg
dec
popf
sar
xor
lahf
aam
leave
cmpsb
repz
mov
mov
orb
mov
or
jbe
mov
push
jns
xor
fwait
jb
push
mov
int
pop
mov
testb
mov
or
and
test
movsb
ret
adc
ss
aaa
enter
push
int3
jb
ss
dec
lcall
xchg
stos
mov
push
rcrl
outsl
and
xor
test
pop
movl
sub
fsubrs
cmpsl
adc
das
cmpsb
sar
push
push
adc
test
nop
sub
test
inc
cmpsb
lcall
addl
mov
or
movsl
test
dec
inc
stc
clc
and
mov
mov
mov
cwtl
pop
out
test
add
cmp
push
mov
lds
mov
xchg
fsubl
test
add
cli
mov
or
sub
cmp
popa
inc
xchg
adc
andl
jmp
roll
xlat
fsubrs
adc
push
out
push
inc
scas
xchg
lods
inc
fcmovnb
inc
xor
cld
lds
sbb
inc
sub
inc
cmp
inc
push
lds
mov
mov
imul
cmpsl
ljmp
cmp
mov
jecxz
pop
dec
cmp
push
add
pop
mov
shll
sub
out
pop
and
scas
ljmp
and
stc
mov
pop
dec
inc
gs
faddl
stc
cmpl
js
dec
nop
sub
loop
mov
sti
mov
repnz
push
out
sbb
mov
mov
std
ljmp
adc
insl
and
dec
mov
xchg
jae
add
dec
fcmovnu
xor
push
cmp
mov
loope
cmp
inc
testl
rorl
jl
dec
mov
mov
dec
push
in
int
hlt
repnz
mov
inc
pop
mov
outsl
fstpt
xor
mov
jbe
sub
out
pop
test
ljmp
xchg
sbb
cmp
int
pop
in
or
rclb
cmp
add
xchg
mov
lods
or
push
es
bound
adc
int
stos
and
enter
fisubl
adc
mov
scas
cld
adc
pusha
pop
jbe
dec
jbe
loop
mov
and
aas
push
and
push
in
in
iret
loope
mov
ss
lahf
dec
arpl
sbbl
cmc
mov
mov
sbb
mov
das
push
std
test
cmp
xchg
inc
nop
sub
mov
xor
int3
call
push
movsb
or
cltd
clc
and
cmpsb
movsl
or
icebp
imul
movsb
mov
fsubrl
lret
xchg
movsl
cmc
mov
or
ret
cmp
mov
jg
aaa
mov
and
mov
pop
push
stos
sub
dec
fldenv
xlat
push
ret
test
in
into
fwait
sbbb
dec
push
mov
inc
addr16
push
jb
stos
dec
sbb
xchg
lods
in
ret
faddl
dec
loop
mov
inc
jne
icebp
mov
cmp
bswap
push
rorl
xor
sub
mov
shll
jae
push
jecxz
push
xchg
push
test
orb
pop
fadds
or
shl
fsubrl
int3
std
repnz
imul
or
mov
mov
test
imul
fs
js
adc
mov
outsl
jb
dec
jbe
jb
je
cmpsl
out
in
cmpsb
movl
and
and
outsb
push
lcall
sub
outsb
mov
and
aaa
arpl
fwait
insl
out
icebp
icebp
or
dec
xlat
inc
lahf
pop
add
in
sub
xor
and
mov
xchg
stc
enter
insl
loope
mov
xor
outsb
add
nop
out
mov
lret
bound
jbe
insb
inc
or
popa
movsl
bound
dec
aad
aam
sub
push
mov
ja
sbb
test
mov
cmp
into
lret
enter
xchg
or
and
sbb
dec
cmp
paddusw
xchg
sahf
adc
push
out
jle
mov
repnz
mov
loopne
xor
rcr
jp
lret
adcl
shll
mov
mov
sti
bound
dec
or
negl
fs
adc
cmp
push
pop
and
imul
xchg
pop
enter
mov
test
std
or
jge
and
dec
aaa
rclb
push
loope
jle
into
loope
mov
scas
pop
fdivl
mov
mov
mov
notb
sbb
mov
sbb
cli
push
iret
or
ret
xchg
popf
notb
mov
jnp
push
push
aaa
jnp
jmp
add
pop
imul
sub
push
jno
jno
es
daa
jnp
pop
xor
mov
push
xchg
scas
stos
xor
imul
sub
rcl
dec
insl
inc
dec
mov
rcr
ror
data16
and
push
bound
pop
mov
call
inc
aad
jae
mov
jo
xchg
in
sub
cmp
imul
lods
and
stos
mov
cmpsb
fwait
or
mov
cmpsl
add
movsb
mov
adc
popa
sbb
ret
add
data16
inc
lds
adc
add
xor
hlt
lahf
aad
repnz
sbb
repnz
or
xchg
and
mov
fdivrs
subl
mov
rorb
ds
pusha
icebp
mov
loopne
imul
xor
push
fimuls
xchg
repz
pop
dec
ret
imul
stc
movsl
lcall
shrb
jp
or
stc
mov
popa
sti
push
daa
mov
repnz
push
out
js
adc
test
loopne
lds
lahf
shrb
gs
xor
inc
leave
xorl
lcall
pop
add
gs
push
test
and
gs
inc
roll
pushf
sbb
push
fsubrl
push
sbb
push
cmpsb
fwait
adc
movsl
movsl
sub
mov
add
popf
popf
dec
scas
clc
inc
sbb
mov
cmp
adc
xor
mov
xchg
cli
push
cmpsb
aas
nop
arpl
mov
outsb
test
shl
mov
inc
outsl
cltd
xor
jns
fs
adc
xor
push
out
aas
mov
sbb
xchg
push
aad
cmpsl
pop
xor
dec
inc
inc
push
add
movsl
int3
sub
stc
xor
pop
xchg
icebp
pop
add
vminsd
test
push
and
leave
aaa
repnz
iret
cmp
inc
ss
out
ja
iret
dec
test
mov
popa
dec
add
std
hlt
mov
cmp
test
roll
into
movsb
aas
out
shlb
stos
or
das
scas
iret
ss
leave
loopne
xor
lock
gs
jo
xchg
pop
test
cmp
mov
aad
mov
mov
lds
out
push
mov
or
xchg
test
xchg
in
mov
cltd
mov
and
sub
inc
xchg
cmpsl
push
cld
jns
pop
inc
jne
dec
mov
push
cmp
lea
inc
xchg
push
daa
iret
loop
mov
sub
cmp
add
fcmove
xorb
cmc
cltd
sbb
jb
xchg
repnz
or
je
gs
pcmpgtd
sbb
jmp
clc
loop
pop
movsl
xor
repz
ds
outsb
cmpsl
mov
sti
push
inc
hlt
push
ljmp
scas
in
cmpsl
mov
loop
and
jp
inc
mov
and
pop
sub
push
sbb
cld
fnstsw
push
mov
ret
std
lret
mov
add
roll
adc
cwtl
mov
jbe
add
push
xchg
inc
adc
xchg
dec
xchg
cld
sub
addr16
dec
jle
push
js
pusha
push
movsb
sub
adc
out
loop
cmpsl
dec
cld
das
out
add
push
test
sbbb
push
sub
mov
inc
xchg
mov
icebp
insl
dec
xchg
dec
mov
inc
rcr
outsl
inc
sbb
rcl
lea
sub
push
pop
push
and
stos
arpl
adc
or
mov
in
pushl
adc
cmp
pop
xchg
and
stos
andl
mov
add
lock
xor
sbb
dec
mov
mov
lret
sub
jg
mov
xchg
int
or
xchg
mov
or
push
jmp
xchg
in
jle
jo
jne
in
out
xlat
push
dec
xor
add
lock
js
test
fcmovbe
sbb
dec
sbb
jp
ss
push
push
rcr
inc
cmp
mov
lcall
int3
arpl
push
insl
cli
std
jl
push
movsb
cli
ljmp
and
fldenv
jp
mov
sub
hlt
cwtl
push
mov
jmp
cwtl
pop
add
out
fiadds
xchg
mov
test
jb
add
xorb
les
add
cmp
arpl
lods
aam
or
jecxz
lahf
std
cmpsl
nop
jmp
cltd
sub
jl
shll
pop
mov
scas
dec
mov
push
jo
movsb
sub
mov
fsubrp
repnz
dec
aam
jmp
xlat
cmp
or
es
mov
jae
mov
mov
fbld
clc
add
sbb
outsb
rcrl
rcl
ljmp
fnstcw
cwtl
sahf
lea
orl
mov
nop
sar
iret
push
cltd
jmp
mov
addr16
pop
lcall
mov
add
daa
out
cmp
and
mov
daa
mov
iret
add
fsubr
dec
mov
jmp
fisubl
test
aaa
mov
jmp
push
fs
lea
xchg
gs
rol
dec
or
cmp
inc
ljmp
jl
pop
sub
roll
cltd
es
or
popa
mov
shlb
scas
xlat
mov
pop
mov
repz
sub
test
psllq
lods
outsb
stc
lock
mov
rcrl
add
lods
jbe
sbb
and
jmp
mov
mov
or
pop
in
jp
pop
rcl
mov
lret
mov
add
leave
scas
add
mov
nop
sbb
mov
lcall
inc
or
inc
repz
xor
xchg
lahf
push
jnp
dec
jl
iret
push
mov
jg
jle
lods
ds
movsb
xchg
fstpt
and
cmp
xor
pop
push
or
popf
cmp
xor
insb
inc
jnp
cli
pop
sub
orl
push
dec
rcll
std
pop
mov
dec
mov
pop
xchg
inc
mov
mov
test
push
fwait
jp
mov
jns
adcb
loop
cmpsb
pop
testl
mov
fwait
cmp
inc
push
call
negb
xor
adc
xlat
test
mov
xchg
lcall
mov
lods
and
sbb
jne
xchg
or
les
negl
or
mov
je
add
and
mov
std
pop
push
rolb
dec
xchg
push
in
xor
daa
sbbb
divl
push
stc
lods
xor
mov
mov
adc
jno
push
insb
xor
outsb
je
pop
test
cli
stos
dec
or
and
or
ss
addr16
mov
addb
inc
mov
pop
test
inc
cwtl
sbb
adc
lcall
insb
xor
dec
xchg
inc
outsl
xchg
xchg
in
hlt
xchg
repnz
outsl
and
add
xchg
mov
adc
addr16
jg
push
mov
cmc
insb
or
cwtl
push
xchg
adc
mov
jmp
add
adc
adc
mov
scas
int3
push
addb
lahf
pop
sbb
xor
push
cltd
movsl
shl
add
jecxz
mov
ljmp
dec
jge
cli
push
test
pop
sub
lcall
test
mov
jge
xor
int3
jmp
stos
repnz
push
out
loop
pushf
jge
mov
push
bound
popf
sbb
add
test
pop
push
adc
aam
aas
lret
or
mov
dec
outsl
pop
leave
popl
adc
movsl
jnp
ficoml
mov
xlat
in
sahf
jns
mov
repnz
pop
fdivrl
xor
dec
jne
mov
into
bound
in
inc
or
adc
testb
fnstenv
iret
ret
inc
in
fadd
jnp
ds
mov
push
dec
cmc
adc
call
sbb
cld
scas
mov
jbe
repnz
mov
xor
data16
fdivl
imul
push
mov
bound
fisttps
mov
pop
inc
in
aad
sub
cwtl
dec
xchg
pushf
add
nop
test
divb
mov
shlb
bound
movsl
sub
int
xchg
jb
shl
inc
sub
or
add
pop
dec
cs
mov
mov
pushf
aas
adc
sub
lock
xor
dec
sub
sbb
fs
je
jle
jbe
mov
and
cmp
sbb
imul
push
adc
adc
mov
lret
aad
mov
lcall
adc
pushf
shll
mov
push
jmp
adc
sti
in
lods
ja
stos
je
mov
int3
and
in
cmp
xchg
xor
scas
sbb
aas
loopne
fwait
sbb
rcr
sbb
fisubs
into
lret
test
xor
xchg
cmp
in
hlt
jns
xor
cmp
mov
jp
sub
movsl
and
repnz
xchg
xor
outsb
cmp
cli
lret
aaa
push
xchg
dec
loop
imul
inc
std
add
add
mov
mov
push
xchg
shll
insb
mov
scas
or
test
rclb
and
and
outsb
inc
add
stc
or
outsb
outsb
leave
xor
std
push
lahf
jb
mov
and
and
pop
ss
popa
or
dec
popa
das
pop
mov
adc
inc
cmp
in
leave
fwait
outsl
es
and
dec
inc
jecxz
jno
mov
jmp
fstpt
and
mov
mov
and
inc
and
xchg
mov
incl
sub
stos
push
popf
mov
test
sbb
arpl
push
mov
push
data16
add
sti
stc
mov
insl
mov
mov
mov
inc
mov
mov
mov
or
aas
adc
xchg
cmp
add
jns
cli
jl
in
into
inc
aaa
mov
pop
pop
and
jns
fcoms
stc
or
inc
jle
and
mul
loopne
sub
push
pop
pop
test
test
in
enter
push
or
pop
cmp
aas
out
std
leave
pop
loopne
outsl
sbb
push
cmpsl
pop
sbb
or
frstor
push
mov
in
mov
xchg
or
push
jp
mov
dec
pop
mov
xchg
dec
adc
cmp
dec
andb
jb
fldt
std
adc
imul
adc
mov
xchg
xlat
jp
sub
popa
cld
pop
xorl
push
dec
jns
cmpb
adc
add
inc
xchg
and
xor
inc
adc
icebp
inc
sti
mov
into
in
enter
popa
pop
dec
dec
lret
inc
push
jo
das
xlat
sbb
ljmp
and
xorb
cli
pop
andl
push
mov
xchg
add
push
jnp
outsb
sub
pop
sub
scas
dec
push
ss
jne
shll
add
dec
push
adc
and
push
lods
gs
pop
test
mov
push
xchg
dec
sbb
xor
cli
sub
insl
movsb
fidivrs
lret
ss
fsubl
or
push
mov
mov
shrb
xor
pop
pop
popa
sbb
sub
add
negb
aam
faddl
cmpsb
push
aas
or
inc
push
test
mov
xlat
pusha
adc
shll
idiv
bound
es
daa
sub
dec
mov
mov
jo
jl
mov
nop
sub
xchg
aad
cmpsb
fimull
loop
dec
sbb
mov
add
jo
mov
stc
dec
fists
inc
jnp
fcmovne
sbb
lahf
out
dec
stos
fbstp
or
dec
test
fcoms
cmp
popf
inc
arpl
inc
in
scas
mov
inc
pop
insl
mov
out
pop
adc
inc
inc
cli
cmp
mov
shr
imul
out
add
pop
and
jne
fistpll
sbb
push
xchg
loopne
pusha
xlat
dec
cmp
movsb
int
repz
icebp
into
insb
jmp
ss
data16
shll
mov
iret
xchg
xor
in
leave
xor
sub
inc
aad
mov
mov
cmp
idiv
xor
cmp
cmp
lds
sbb
pusha
mov
mov
adc
jge
mov
pand
jp
cmp
fstpt
adc
fnsave
adcb
push
sub
ret
repz
sahf
add
xchg
pushf
sbb
inc
mov
jl
lds
add
add
or
push
ja
je
mov
cmp
jl
outsb
enter
and
fcom
sbb
iret
pop
pop
inc
testl
push
cmpsl
movsl
jnp
into
push
jl
adc
in
jmp
mov
jno
inc
inc
stos
xchg
dec
cmp
xchg
add
dec
cmpsl
xchg
out
add
arpl
in
cmpsl
aaa
rorb
mov
orb
push
scas
xor
hlt
sbb
add
jl
pop
out
push
xor
inc
clc
test
mov
jcxz
loope
dec
ret
cmp
bound
cmc
lcall
jns
add
pop
fs
je
jae
inc
pop
scas
jp
fidivrs
mov
and
sbb
sbb
lret
sbb
ss
sub
das
cltd
shlb
aaa
jo
jo
cmc
je
mov
mov
xchg
sbbl
jp
xchg
fbld
pop
dec
cmp
sub
pop
xor
push
mov
fcmovbe
or
in
inc
dec
adcl
lcall
andb
mov
sub
shrb
lock
and
cmpb
pop
mov
mov
push
movsl
dec
mov
or
ja
add
and
or
or
pop
jle
out
popf
inc
loope
pop
xchg
pushf
mov
in
outsb
dec
lea
mov
jb
das
or
cltd
inc
jl
pop
adc
es
jmp
popa
xor
imul
mov
jg
arpl
ja
jmp
lea
dec
or
add
mov
inc
scas
nop
cld
in
sbb
push
subb
loope
jbe
inc
xchg
sbb
fs
add
and
inc
cs
fucomp
jg
pop
sbb
cmp
outsl
mov
jecxz
testl
popf
dec
out
and
add
nop
insl
in
fidivl
xchg
lea
mov
jb
xor
jns
int3
flds
mov
xor
jle
adc
add
and
popa
cmp
out
insb
ret
mov
mov
mov
call
xchg
jl
andb
in
push
adc
test
rorb
inc
xor
lret
pop
sub
ljmp
pop
ljmp
frstor
outsb
push
sbb
mov
mov
inc
psubd
mov
mov
cmp
js
and
push
jle
xchg
js
sbb
push
push
dec
pushf
push
stos
add
call
sti
sub
stc
call
fdivrl
leave
lods
rolb
mov
jae
es
mov
jne
push
ret
rcr
adc
shlb
ucomiss
adc
into
jno
xchg
add
pop
dec
imull
or
adc
jno
pop
push
iret
xor
dec
mov
mov
jecxz
mov
xor
adcl
mov
mov
leave
xlat
and
cld
in
adc
sahf
jp
mov
ljmp
push
lcall
and
pop
call
mov
cmp
sti
hlt
inc
mov
icebp
sub
push
icebp
push
xchg
in
outsl
sub
movsl
mov
mov
dec
cmpsb
xchg
cmp
adc
in
add
in
inc
xor
mov
pusha
add
push
fidivs
push
stc
jb
push
pop
pushl
nop
mov
loope
outsb
cli
sbb
mov
addr16
mov
jg
xchg
jbe
push
adc
xor
sti
pop
imul
ss
push
in
jle
sbb
sbb
in
lcall
jp
adc
out
and
imul
stc
stc
jae
push
fnstsw
jle
dec
mov
push
lock
test
pop
subl
add
cmp
test
in
xchg
mov
repnz
or
xor
push
xor
std
pusha
icebp
pop
inc
mov
adc
aam
cmp
and
xchg
mov
xchg
test
jae
js
das
inc
lcall
pop
fnsave
mov
lock
mov
jp
movsl
xchg
mov
mov
dec
push
xchg
push
mov
sbb
cmpsl
imulb
dec
cmpsb
mov
mov
and
and
push
xor
cwtl
jae
and
in
or
jecxz
pop
or
cmp
stos
les
inc
pop
hlt
iret
mov
test
cmp
lock
push
cmpsb
fistps
lcall
cli
adc
xor
sbb
fistpll
mov
jae
and
fisubl
pushf
insb
loope
ss
sub
push
xchg
sbb
jo
dec
out
popf
lods
mov
cmp
sub
daa
jg
enter
mov
push
push
fdivrp
insl
ljmp
popf
sbbl
sub
sbb
push
xor
xor
cmp
jle
and
out
sbb
out
out
mov
test
adc
mov
pop
push
popa
push
std
ljmp
mov
jmp
pop
xchg
popf
jb
xor
int3
adc
fxch
xchg
scas
sbb
dec
scas
sbb
cld
or
out
sub
push
iret
xchg
adc
cltd
mov
xchg
and
push
loope
arpl
aam
leave
adcb
inc
wbinvd
bound
lods
insl
lods
jns
shr
or
mov
cmp
popa
addr16
adc
imul
mov
adc
dec
sub
inc
cltd
fisubrl
fs
jg
dec
sub
jl
adc
mov
test
pop
push
jmp
mov
cwtl
pop
fs
addr16
inc
mov
iret
cmp
loop
pop
xchg
in
stos
fsts
dec
lds
mov
or
das
adc
cmc
test
push
jo
lods
repz
cmp
fcmovbe
sbb
adc
mov
cs
clc
cmp
dec
dec
fs
push
pop
mov
shlb
jnp
mov
dec
or
add
adc
add
daa
cld
fs
in
pop
cltd
mov
adc
jmp
xchg
mov
movsl
pushf
mov
push
inc
jg
inc
gs
mov
pop
dec
fmul
mov
insb
enter
push
or
mov
shlb
daa
bound
scas
and
pop
adc
hlt
int
scas
sbb
sub
pop
mov
ss
pop
popa
inc
js
xchg
push
rorl
push
mov
dec
mov
push
fisubrs
nop
xchg
rcrl
stos
add
stos
in
test
add
jecxz
xchg
sub
jns
stc
call
cmp
cmpsl
scas
cs
inc
nop
jecxz
in
inc
dec
cs
out
mov
int3
push
jb
ficompl
call
shlb
pop
add
aaa
fmull
sbb
leave
sub
daa
cmp
outsl
mov
arpl
lea
jg
rcr
mov
subl
test
fwait
in
xchg
or
out
dec
pusha
push
push
add
pop
cmpsl
lods
cmp
mov
mov
adc
and
aad
ss
add
fisubrs
bound
dec
xchg
fdivrl
stos
add
push
jne
mull
call
jmp
pop
mov
int3
insl
jae
mov
mov
rcrb
je
cmpsl
repnz
shll
lcall
mov
xor
cmp
sbb
dec
cld
push
rclb
inc
iret
dec
adc
pop
mov
imul
mov
cmc
icebp
sbb
fucom
mov
push
cli
push
insb
push
xchg
outsb
fldcw
or
mov
out
xor
cld
enter
jae
or
ret
rcrl
sub
jb
outsl
fisubrl
mov
pop
pop
out
sub
out
sbb
or
add
lret
rolb
cltd
xorl
out
arpl
shlb
mov
add
mul
xchg
fwait
ret
popf
sar
rcr
push
outsl
jbe
or
adc
and
loop
mov
jo
pusha
mov
rcrl
push
mov
mov
jge
and
mov
push
ds
mov
adc
call
mov
popa
filds
sar
inc
leave
sub
sub
xchg
sbb
sub
push
jmp
rcl
xchg
bound
or
sub
push
out
neg
scas
call
fwait
jbe
sub
out
xchg
push
lahf
xor
xchg
je
stos
icebp
push
xlat
mov
mov
mov
mov
ret
loop
das
scas
ds
xchg
push
sub
jns
or
out
jns
fsubr
daa
cmp
test
sbb
dec
in
out
mov
mov
scas
lret
pop
jo
mov
pop
arpl
movsb
pop
mov
pop
or
mov
ljmp
xor
lahf
rorl
mov
add
lea
scas
add
test
or
pop
inc
add
scas
imul
jl
mov
ret
jb
lahf
sarb
insb
hlt
push
sub
and
cmp
mov
jle
xchg
sub
inc
mov
out
outsl
mov
fidivs
bound
sub
in
push
push
xchg
arpl
or
push
mov
dec
popf
pop
sub
pop
mov
iret
pop
jne
sahf
das
mov
cwtl
mov
imul
mov
in
je
dec
mov
sahf
aam
jle
mov
push
test
xchg
movsb
dec
iret
ds
xchg
sbb
cmp
lods
or
paddusb
xchg
dec
stos
leave
test
xchg
lret
mov
add
repz
enter
leave
loopne
jns
sbb
fwait
insl
xchg
rolb
mov
out
test
shlb
mov
jle
clc
xchg
negb
or
adcb
add
fld
fnsave
sbbb
repz
push
sbb
inc
mov
mov
xchg
pop
cmp
adc
inc
and
out
pop
and
and
int
out
stos
pop
dec
sub
sub
icebp
xchg
in
xorl
rol
xor
or
add
dec
scas
ret
andb
cmp
jae
ljmp
fidivl
push
fmull
sbb
xchg
jne
iret
dec
add
pop
sahf
shll
and
or
push
cmp
shrl
push
sbb
test
mov
push
dec
lcall
push
jo
aas
push
adc
stc
xchg
inc
dec
push
scas
test
xorl
push
out
fadds
in
lods
sub
dec
pop
pop
je
inc
stc
mov
lret
mov
sarb
test
sub
sbb
xor
daa
xorb
dec
dec
mov
insb
pop
and
push
lods
movsb
out
push
dec
incl
mov
icebp
nopl
xor
pop
lea
cmp
push
rep
ret
adc
sahf
and
shrl
dec
add
sahf
mov
sub
gs
sub
xor
daa
lock
dec
push
xchg
mov
cmp
push
nop
aam
push
dec
rorb
pop
jge
push
adc
cwtl
cs
jge
aas
sbb
in
mov
xor
xlat
adc
mov
mov
ja
enter
sbb
lods
jp
incl
lods
fsubr
inc
ret
mov
inc
in
jp
femms
in
jp
sahf
std
dec
mov
push
lret
in
cmp
popaw
out
rcrl
add
and
inc
aam
jg
or
mov
ss
sub
ja
pusha
jo
jno
lods
cmpsl
add
dec
dec
xor
cmp
xor
out
jmp
add
negl
out
outsb
xor
adc
mov
insb
aas
dec
lret
or
fisubl
loop
clc
xor
shll
sbb
mov
aad
daa
mov
ljmp
and
aaa
push
pop
xor
push
repnz
repz
popa
rcll
mov
push
xchg
mov
fs
lahf
insl
lock
cmp
lods
cs
lahf
mov
nop
mov
adc
test
mov
inc
iret
imul
repnz
jg
mov
jle
call
aas
gs
fadds
dec
pop
nop
mov
jg
sub
movsb
mov
pusha
imul
adc
add
addr16
mov
lock
xchg
sub
jl
xchg
outsb
stos
pop
aaa
repz
xor
xlat
mov
or
fwait
mov
and
push
mov
fldt
mov
out
jbe
jp
pop
inc
je
popf
aaa
loop
adc
and
imul
out
cwtl
pushf
fdivr
fwait
jb
xchg
mov
rcr
sbb
leave
jno
fildll
dec
inc
outsb
push
imul
jmp
cli
lea
dec
stc
ljmp
mov
jp
hlt
sti
adc
outsb
or
pop
fdivr
xchg
stos
fmull
jle
lcall
jbe
dec
mov
xchg
jecxz
dec
imul
mov
push
inc
dec
aas
dec
enter
add
loopne
js
call
xchg
scas
dec
push
inc
xchg
ficomps
decl
inc
xchg
push
bound
and
xchg
inc
loope
cmpsb
in
test
dec
daa
popa
lods
outsl
sti
mov
mov
fs
mov
addb
cmpsl
ret
cli
ljmp
mov
sbb
lea
les
shlb
adc
mov
and
les
je
movsb
outsl
gs
xchg
or
sub
jb
cmpsb
cmc
sbb
jmp
or
ljmp
mov
je
jns
call
push
xchg
mov
xchg
or
lods
movsl
into
sub
scas
stos
lahf
sbb
xchg
xor
iret
repnz
stc
addr16
lcall
movsb
sub
dec
inc
sub
inc
and
pop
inc
cmp
jmp
pop
into
popf
adc
add
enter
mov
int3
or
mov
mov
adc
add
xchg
mov
cmp
xchg
inc
gs
test
divl
add
mov
outsl
cltd
jecxz
fnstsw
pop
outsb
lret
rcrl
js
fbstp
xchg
cmp
lcall
pop
or
mov
cmp
xor
sahf
pop
inc
ror
push
in
shr
sahf
flds
in
mov
mov
sbb
push
mov
cld
orl
enter
out
es
js
test
aas
aam
mov
push
les
push
mov
mov
cmp
pop
pop
stc
scas
add
mov
lea
cmp
mov
add
bound
es
pop
rorl
dec
in
dec
int
push
xor
cmp
mov
addr16
movsl
or
mov
mov
xor
scas
jmp
insl
or
lock
jmp
aam
call
jbe
fnstenv
mov
xchg
mov
mov
sysenter
xchg
cltd
stc
outsb
ds
or
pop
dec
sbbb
movsl
icebp
sub
push
xchg
jmp
inc
dec
jle
add
jl
adc
arpl
sahf
jl
add
cltd
outsl
pop
jnp
sti
dec
testb
mov
push
pop
mov
push
xchg
iret
or
ret
aaa
mov
mov
mov
loope
in
sub
cmp
mov
sarl
shlb
and
int3
sbb
sbb
add
sbb
shll
imul
cmpsl
ret
xchg
fistl
mov
xchg
sahf
sbb
push
cli
setae
iret
dec
jae
inc
inc
mov
dec
dec
in
mov
sbb
stos
mov
or
or
outsb
fldenv
mov
test
repz
push
jo
lret
sub
add
imul
pushf
pop
jp
mov
mov
adc
cmc
push
outsl
sti
pop
lcall
je
cli
and
xor
imul
mov
pop
xor
mov
mov
dec
lods
pop
shl
adc
inc
sub
aaa
mov
sbb
ret
add
or
xchg
or
sbb
xchg
pop
roll
addr16
das
xchg
adc
ja
bound
mov
or
pop
push
lds
mov
or
push
cmp
mov
movsb
dec
xchg
push
or
mov
ret
pop
mov
mov
add
shll
ret
call
mov
das
or
adc
push
sbb
mov
insb
lret
cwtl
sub
mov
jg
jae
xchg
mov
jo
jg
jmp
loope
mov
cmp
push
lcall
jmp
imulb
jae
imul
test
ret
xchg
cmp
lods
or
addr16
push
pop
xor
jecxz
add
push
sarb
sbb
shlw
gs
adc
cld
mov
ja
push
xor
adc
outsb
test
sbb
jae
mov
push
leave
pop
push
xchg
rclb
sbb
jg
mov
mov
xor
loope
push
popf
jmp
sbbl
push
mov
mov
sbb
fwait
lcall
out
lea
inc
mov
mov
and
ds
adc
cmc
sub
das
cwtl
mov
dec
call
jecxz
mov
or
mov
sbb
dec
adc
sahf
sbb
ds
mov
xor
xchg
cmpsb
lcall
or
lahf
jb
hlt
jnp
mov
xchg
pop
inc
adc
gs
dec
stos
pop
in
repnz
and
jns
out
pusha
jp
aas
stos
fimull
sbb
jmpw
jne
lea
and
test
or
incl
and
pop
and
les
mov
movsl
std
bnd
xchg
jnp
ficoms
push
mov
pop
cmp
int
rol
push
iret
enter
cmp
fs
in
ret
or
inc
push
lods
sahf
addr16
mov
jno
aas
pop
subl
push
fcmovbe
mov
or
push
test
rcrb
loope
xchg
ret
pop
or
add
shlb
jl
inc
pop
push
cmp
push
mov
hlt
inc
sub
dec
inc
repnz
out
sbb
stos
pop
fs
inc
scas
rolb
ss
popa
dec
sub
es
xchg
push
cli
leave
jecxz
dec
sbb
add
jbe
bound
stos
sahf
cs
lods
xor
fdivrl
pop
test
and
adc
fwait
jbe
out
mov
je
inc
movsb
cli
and
mov
pop
mov
insb
pop
jbe
imul
arpl
lcall
dec
and
int3
arpl
jb
leave
adc
in
clc
fistl
push
sbbl
int3
inc
or
jae
fs
outsb
gs
or
jmp
push
sub
or
xchg
sbb
sbb
sarl
jno
xlat
cmp
insl
fiadds
and
push
and
test
loop
std
hlt
push
xor
xchg
and
mov
mov
push
jl
shrb
mov
add
cmp
cmp
sub
mov
add
xor
arpl
test
adc
iret
sbb
jg
pop
pop
ror
push
stos
loope
mov
fbld
iret
adc
stc
push
mov
gs
jae
popf
xlat
fwait
pop
sub
mov
jle
sti
or
xor
in
mov
cwtl
jmp
loop
mov
stc
sbb
cmc
jmp
xor
mov
xchg
push
jns
int
xor
jmp
inc
push
push
addr16
aam
aad
inc
daa
jp
sbb
mov
pop
test
repz
pop
inc
lds
xchg
stos
cld
hlt
aas
rcl
loopne
mov
and
sbb
xorl
arpl
mov
repz
cmp
and
pop
or
mov
cltd
jae
test
into
enter
cli
push
jmp
iret
sti
sub
push
sub
push
pop
xor
or
ljmp
push
jnp
outsb
sub
loop
inc
sbb
inc
xchg
or
ljmp
and
xchg
inc
jge
inc
inc
inc
mov
xor
scas
adc
and
mov
push
mov
std
pop
ss
push
mov
subb
inc
dec
pop
int3
jge
xchg
mov
xchg
stos
test
mov
adc
sahf
repz
sub
push
sub
xchg
push
das
push
fcmovu
push
outsl
leave
les
call
dec
sar
mov
and
and
pop
inc
test
pop
lods
push
out
mov
leave
imul
dec
fmulp
aam
xor
test
adc
pop
inc
jns
rclb
mov
movsl
xor
fsubl
mov
in
dec
sub
jp
jge
std
fstpl
sub
lds
and
add
mov
xchg
jp
adcb
leave
xor
dec
movsl
add
popl
mov
xor
test
loopne
sbb
cmp
mov
scas
pop
aam
pusha
icebp
outsl
pusha
mov
daa
decl
inc
mov
arpl
sbb
loopne
add
pushf
sub
test
mov
fbstp
shll
jle
scas
aam
fimull
and
out
pop
pop
dec
into
test
cli
xlat
xor
xor
cmpsb
add
pop
fisubs
stos
sub
scas
gs
jb
or
adc
push
in
xchg
push
hlt
pop
dec
fs
rcll
repz
push
add
dec
jb
dec
adcb
sti
in
ficoms
sub
cmp
adc
sbb
xchg
fdivr
lock
jecxz
stc
pop
mov
lcall
fnsave
lret
push
in
stos
fistpll
int
lods
jb
je
icebp
je
push
cmpsl
inc
shll
mov
inc
cmpsl
pop
out
stc
icebp
test
mov
inc
push
sbb
out
inc
mov
inc
outsb
inc
sarl
int3
ljmp
loope
sbb
js
cmp
jno
jne
xor
ror
fsub
cmp
aas
in
aas
sarb
fsub
stos
daa
pop
lods
into
bound
aam
es
mov
es
or
mov
xchg
ljmp
cld
cltd
cmp
aad
iret
pop
jno
jns
jae
push
int3
sahf
in
sub
js
lds
pop
ss
mov
jns
rorb
jnp
insb
sbb
mov
xor
pop
loop
sub
dec
leave
lock
cmp
mov
cmc
fwait
in
jae
pop
xlat
shl
pop
cmp
imul
fsubrs
dec
push
pop
cmp
adc
inc
outsb
repz
push
xor
repz
push
les
fisttpll
bound
mov
xor
sahf
xchg
shrb
leave
fistpll
int3
in
call
adc
adc
adc
cwtl
push
push
xor
pop
xchg
or
xor
cmp
in
jne
hlt
add
mov
das
cmpsl
and
adc
inc
test
fsts
addl
inc
nop
dec
dec
mov
lods
lock
out
fisubrs
mov
pop
and
sbb
mov
inc
ljmp
push
adc
adc
pop
filds
ret
jle
mov
idivl
aam
sbb
pop
mov
les
fsts
lret
test
push
pop
adc
je
fistpll
xchg
sub
add
cs
pushf
sahf
xchg
or
mov
or
mov
shrb
es
xor
sarb
xorb
data16
into
mov
or
mov
testb
lcall
dec
mov
shll
push
pop
xchg
ds
insb
repz
mov
mov
inc
sub
sbbb
jl
xor
sbb
mov
sbb
fistpll
call
popf
ret
and
std
enter
movsb
fildl
adc
shl
filds
pop
in
or
dec
ja
cmpsl
cmpsb
jmp
mov
loopne
fs
ss
aas
xchg
das
push
lods
dec
enter
push
test
push
push
and
push
std
jle
arpl
in
jle
sub
or
pop
push
out
test
xchg
int3
inc
jecxz
js
cwtl
stos
mov
fnsave
push
sahf
push
xlat
inc
mov
jmp
mov
cmp
and
mov
push
loope
cmp
sahf
push
jo
jl
out
or
xchg
push
push
cli
cltd
sub
stos
mov
pusha
xchg
pusha
js
xor
int
add
cli
movsb
fildl
dec
mov
push
xlat
movsb
or
push
pop
mov
sbb
or
in
xor
adc
sbb
cltd
in
mov
icebp
mov
fnstenv
jne
pop
jl
mov
call
sub
sub
pusha
loopne
pop
call
jo
adc
mov
aad
ret
icebp
inc
roll
inc
rcl
adc
daa
xchg
dec
push
push
movsl
and
mov
push
xor
mov
nop
xchg
mov
push
in
sbb
and
adc
repnz
xchg
hlt
cld
mov
lods
pop
orb
inc
jb
je
mov
lret
mov
pop
inc
adc
in
cltd
sbb
jp
lods
adc
in
cmp
pop
add
fsubrl
mov
scas
mov
loop
aam
arpl
pop
insl
mov
jno
cmp
cli
jecxz
rcll
xor
imul
xor
les
lret
test
inc
fdivr
cli
fwait
mov
loope
mov
dec
pushf
rcrb
mov
mov
push
stc
dec
stos
pushf
jge
mov
adc
fsubs
out
dec
and
sub
jmp
adc
stos
test
adc
out
xchg
push
mov
call
mov
push
pop
push
push
test
inc
scas
lds
jbe
dec
pop
adc
flds
in
and
sbb
or
sub
sub
pop
sub
pop
mov
dec
xor
cmpsb
push
cli
pop
push
orl
dec
mov
mov
mov
arpl
and
jbe
jecxz
sbb
sub
in
fmul
cmp
adc
push
push
movsb
sub
ds
ljmp
inc
pop
nop
dec
decb
and
repz
js
inc
pop
test
cmp
inc
add
fstpl
mov
inc
test
arpl
aam
mov
imul
inc
adc
mov
int
sahf
mov
mov
arpl
ja
inc
in
test
mov
lds
cmp
icebp
insb
mov
fdivp
inc
shll
ljmp
adc
cmp
ds
xchg
and
ret
icebp
jge
pop
cmp
outsb
mov
pop
test
pop
rclb
mov
lea
push
mov
push
repz
jb
jmp
subb
lcall
arpl
cltd
dec
notb
icebp
mov
movsb
xchg
and
loope
fisubl
adc
pop
push
inc
fcoms
stos
mov
fsubl
sbb
movsl
inc
pop
sbb
sbb
stos
sub
adc
test
call
daa
xchg
into
dec
push
nop
outsb
mov
pop
xor
icebp
inc
push
pop
pop
sbb
cmpsb
jecxz
add
pop
js
icebp
jnp
mov
sbb
dec
sbb
insb
shrb
push
or
loopne
fwait
jl
lock
cmp
test
cs
and
pop
cmp
push
in
push
push
insb
loop
sub
loope
popa
adc
je
lods
pop
adc
and
inc
mov
sub
inc
push
js
push
and
filds
dec
pop
cmp
mov
jnp
mov
rcl
sarb
mov
and
and
lret
inc
cmp
add
es
adc
out
sbb
lahf
test
and
inc
lock
mov
clc
pop
xor
ds
sub
adc
ss
outsl
jle
mov
repnz
xchg
rclb
arpl
lcall
or
or
popa
inc
jle
scas
sbb
jp
mov
add
mov
rcl
xchg
clc
enter
test
pop
adc
cmp
or
inc
fwait
outsb
aad
scas
pop
jp
adc
adc
xchg
pop
xchg
sub
push
cltd
jns
mov
in
jbe
xlat
sub
push
xlat
aam
jne
jb
jnp
repz
enter
ds
jae
ret
into
imul
faddl
xor
adc
aaa
xchg
pop
push
add
pop
stos
pop
scas
jbe
fs
sub
stos
dec
jns
outsl
jge
outsb
push
sbb
xor
ljmp
jnp
lret
fisttpl
adc
xor
jae
cmpsb
shlb
mov
ror
mov
cwtl
sub
cmp
hlt
push
aad
cmp
leave
lods
ja
mov
les
jmp
pop
push
aam
repz
mov
lods
mov
loope
push
gs
push
enter
jp
sbb
insl
adc
imul
xchg
inc
xor
test
popf
movsb
push
lahf
aam
sbb
mov
das
and
aam
fstpl
push
stos
int3
xchg
xor
jecxz
repnz
aas
push
dec
sbb
ss
lret
jnp,pn
mov
rcr
jae
push
dec
lret
sbb
mov
jmp
or
push
andb
sbb
mov
xor
xchg
in
enter
jo
xor
adc
sub
or
cmc
add
adc
jns
test
sub
push
jnp
push
and
add
outsb
or
in
std
cmpsl
scas
adc
jbe
fistpl
xor
add
test
or
xchg
mov
lahf
push
mov
cmc
pop
out
sub
jo
xchg
pusha
push
jecxz
add
leave
je
inc
popl
out
jge
test
sarl
cmpsb
movsb
xorl
dec
jmp
jp
enter
test
mov
loopne
pop
pop
insb
adc
mov
xchg
add
imul
fs
jo
sub
stos
out
js
sahf
fs
mov
test
cmc
mov
jnp
add
decb
bound
mov
fstps
aad
or
sub
adc
sti
aam
cmp
scas
xchg
jo
stc
jl
lds
and
fistpl
mov
jg
mov
test
lret
ret
lds
add
pusha
pop
jl
cmpsb
fsubl
outsb
xchg
popf
jbe
xchg
and
popa
ss
dec
orb
cli
inc
sbb
loop
adc
xorb
sub
test
divl
sbb
and
jl
sbb
arpl
fs
jno
repnz
clc
xchg
jmp
dec
jge
fucomi
sbb
mov
and
xchg
ja
leave
add
cmp
into
test
and
pusha
push
ret
rolb
inc
insb
sti
push
push
pop
dec
imul
adc
pop
mov
xchg
pop
or
mov
stos
fmuls
sbb
mov
mov
mov
mov
xlat
popa
mov
mov
test
pop
add
xchg
mov
cmc
sti
adcl
jl
lods
xor
cs
xor
mov
loopne
nop
popa
out
push
adc
jg
jae
sub
test
rol
lret
scas
sub
and
daa
sbb
push
push
jb
lahf
roll
repz
push
ds
and
sahf
and
mov
sarl
cmpsb
rcr
mov
sahf
push
push
test
scas
andl
mov
or
cmpsl
in
popf
fistl
inc
jmp
icebp
int3
jns
xor
xor
out
jge
jge
ss
xchg
inc
push
inc
sbb
cmpsb
out
xor
mov
mov
jmp
sbb
cmpsb
sbb
pop
adc
sub
push
cwtl
push
and
sub
fsubs
outsb
and
xor
mov
cli
in
add
stos
sbb
dec
lret
out
add
pop
addl
out
mov
test
sti
arpl
pop
cmp
cs
lea
inc
test
jne
lock
std
xchg
pop
in
cmp
mov
das
icebp
fldenv
fadd
cltd
loope
inc
push
sbb
ljmp
cld
xor
jo
xor
jbe
jno
push
int3
stos
mov
fadds
call
jmp
xchg
cmpsl
jg
pop
add
inc
es
leave
mov
mov
jns
fnstsw
jbe
shrl
test
inc
ljmp
add
cmp
push
adc
mov
dec
dec
cmp
and
mov
inc
mov
test
je
loop
adc
add
xchg
xchg
cmp
push
inc
shll
mov
jae
rclb
xor
mov
cmp
lods
xchg
sarl
popa
cltd
sub
mov
xor
cmp
cwtl
adc
dec
flds
jp
leave
ret
ror
pop
aam
fsub
push
and
test
mov
mov
dec
adc
push
dec
lock
push
jecxz
mov
imul
push
nop
pop
mov
fnstsw
jecxz
mov
pop
push
insl
pop
pushf
ja
dec
cld
add
mov
aaa
cmp
dec
ds
fcoml
sub
pop
sub
inc
jb
add
jnp
clc
push
call
xchg
dec
add
fdivrl
mov
mov
mov
in
sub
mov
sub
cmp
add
pop
adc
fs
loopne
pop
jle
pop
add
jae
push
mov
and
cwtl
inc
adc
mov
inc
pop
mov
pop
outsb
loop
out
pop
sub
jne
les
cmp
dec
sub
popf
mov
test
dec
filds
lret
sar
ret
movsl
xchg
dec
arpl
cld
push
out
pop
les
xor
push
icebp
jmp
xorb
loopne
dec
lods
or
daa
mov
add
mov
sbb
mov
push
movsl
push
ja
insb
add
mov
nop
push
bound
push
jp
jne
test
add
das
iret
pop
jp
pop
cmp
or
jb
pop
adc
mov
mov
mov
lcall
mov
jp
xchg
int
aad
jmp
into
aas
sahf
lahf
gs
leave
cmp
frstor
adcl
lcall
push
inc
enter
ffreep
push
xchg
lcall
mov
out
aaa
sub
cmp
or
loopne
adc
pop
xor
mov
in
xor
test
roll
adc
fsubrp
and
leave
cmp
loop
jg
pop
push
movsl
imul
push
cvtpi2ps
fnstcw
popa
mov
xor
rorw
hlt
int
xor
pop
mov
fimull
rcrl
aad
xchg
aam
jno
push
mov
add
sub
mov
scas
and
lahf
xchg
and
xchg
xor
mov
mov
add
xchg
sub
mov
lods
jo
inc
aas
mov
jp
push
mov
lahf
imul
mov
aad
cmc
push
jp
cmp
xchg
rorb
cmp
outsl
xchg
cmp
lods
add
cs
dec
jae
xchg
add
or
lds
out
negb
rcrl
push
jno
xor
std
repnz
popf
inc
out
cmp
shl
ret
stc
inc
xchg
adc
fmul
sahf
jne
add
dec
adc
inc
int
jo
xor
scas
lcall
dec
clc
idivb
jo
mov
xchg
xchg
out
ss
shrb
dec
loop
xchg
popa
mov
dec
loope
pop
pop
or
add
mov
jae
jg
jecxz
and
xchg
lahf
hlt
or
jbe
cli
dec
and
imul
addr16
mov
jp
loopne
test
and
jnp
mov
jae
scas
xor
mov
mov
xor
mov
pop
insb
mov
cmp
adc
jp
popa
jecxz
xchg
mov
cld
test
push
dec
out
dec
test
in
test
mov
test
xchg
rorb
pop
add
fistps
std
int
aad
rcll
into
push
rcrl
dec
sti
test
xchg
imul
dec
and
push
in
fidivs
into
mov
sbb
dec
inc
add
xchg
stc
nop
cmc
inc
push
lods
push
fldenv
fs
test
loope
nop
aas
mov
pop
lcall
maskmovq
imull
out
mov
pop
sbb
in
add
aaa
add
sub
jecxz
aad
mov
xchg
stc
popf
fidivs
mov
scas
lahf
js
addr16
daa
pop
add
xchg
and
mov
adc
js
lods
repnz
mov
ficoml
pushf
mov
or
mov
idivl
insb
loop
xor
cli
popf
cli
scas
shll
inc
xchg
adc
in
and
jge
movsl
mov
add
push
call
dec
add
sub
mov
pop
std
and
in
cli
xor
and
xlat
mov
lahf
jmp
inc
ljmp
clc
sti
xor
lds
mov
xlat
adc
scas
xchg
xchg
mov
xor
and
cmc
orb
mov
loope
mov
sub
push
mov
pop
sub
jnp
or
pop
xor
hlt
xchg
cwtl
hlt
mov
or
sti
leave
lret
aaa
cmp
mov
xor
or
into
sbb
cmpsb
xchg
fadd
jmp
pop
test
addr16
fwait
mov
addb
cmp
jmp
adc
in
mov
xchg
pop
shlb
dec
jmp
mov
mov
hlt
push
lret
les
push
jecxz
stc
mov
gs
adc
pushf
clc
icebp
mov
push
and
clc
push
pop
mov
mov
faddl
inc
fimuls
mov
or
inc
push
push
jo
sarb
mov
mov
pop
das
lea
cmp
and
scas
cmpsl
pop
cs
test
frstor
int
std
jns
mov
clc
inc
and
clc
sbb
and
ret
in
jo
shrb
or
pop
dec
add
jge
mov
mov
ljmp
pusha
hlt
pop
stos
pop
push
cmp
mov
push
sahf
lods
out
into
testb
sbb
xchg
out
sbb
pop
and
pop
iret
cltd
lods
xchg
nop
xchg
push
inc
loop
inc
std
pop
int
cmp
mov
adc
sub
adc
fcmovnb
bound
mov
adc
push
sti
and
ljmp
les
xor
xor
cmp
test
add
test
jo
xor
int
jmp
xchg
pushf
pop
or
adc
xchg
mov
mov
je
mov
adc
cmp
jl
lock
ret
inc
leave
sub
mov
mov
aam
mov
shrl
leave
movsb
add
call
xor
aaa
das
test
sub
dec
inc
pop
aad
cmp
push
filds
imul
sub
jae
into
mov
ficomps
leave
and
xchg
push
ficompl
or
enter
enter
inc
adc
popf
aam
jp
dec
or
xchg
ds
xor
icebp
decb
imul
in
adc
mov
mov
push
sub
sbb
in
test
daa
push
mov
stos
xchg
faddp
fs
jno
pop
push
push
es
and
gs
aas
inc
adc
loopne
addr16
sub
scas
in
push
sub
xchg
call
mov
stc
or
movsb
cmp
xor
lret
push
loope
add
sub
popa
pop
sub
addr16
mov
dec
arpl
jmp
sub
js
ljmp
lods
dec
inc
aad
dec
xchg
cmp
daa
xchg
mov
pushf
repnz
js
loope
push
inc
inc
dec
in
decl
push
insb
inc
sub
jns
or
mov
pop
xchg
shlb
test
inc
push
lret
into
cmc
scas
sar
sbb
test
cmp
jbe
fistpl
sbb
ja
in
popf
sbb
fcmove
inc
iret
jecxz
ja
add
dec
fisttps
lods
cmp
mov
loop
xchg
mov
mov
rcrl
lea
push
sbb
in
or
adc
les
jnp
mov
nop
mull
pop
mov
shll
push
addr16
sub
push
mov
xchg
enter
cmp
xchg
sbb
cmp
repnz
and
adc
sub
popa
movsb
ja
xor
ret
mov
or
dec
mov
divb
cmc
jle
mov
ds
outsb
cmp
popa
cmpsl
mov
cmpsl
in
sub
push
int3
and
push
ret
repz
clc
and
insl
dec
int
xchg
fldenv
adc
popf
sub
sub
lods
inc
pop
lret
fisttpl
add
movsl
xor
xchg
jno
cmp
andb
pop
mov
and
dec
mov
mov
iret
inc
mov
test
mov
jmp
stos
xor
outsl
stos
int3
inc
sahf
xorl
mov
pop
dec
xor
xchg
cmpsb
imul
outsl
cld
les
imulb
mov
ds
dec
stc
mov
cld
das
inc
cli
cmp
arpl
jmp
xchg
aas
aam
xor
shrb
repz
mov
push
xor
sub
shlb
repnz
jne
dec
mov
dec
pop
mov
cld
and
xchg
xor
inc
sahf
mov
shrl
jb
outsl
aam
arpl
sub
fcompl
add
iret
insl
addr16
je
jl
jmp
mov
mov
sub
sub
sub
mov
ss
lea
shll
push
add
js
pop
outsb
mov
push
shlb
in
xor
mov
add
in
aam
out
ss
insb
xchg
std
jns
lods
aad
clc
pop
fcmove
or
push
pop
and
in
sbb
inc
mov
push
js
pop
pop
pop
data16
push
xchg
and
inc
mov
test
out
adc
ljmp
push
jle
cmp
xchg
dec
xchg
push
pusha
or
aas
icebp
jl
pop
fdivr
add
xor
xchg
sub
insb
jns
cmp
imul
stos
divl
js
cmpl
cmp
sbb
cltd
adc
mov
sbb
mov
rorl
call
xchg
movsl
dec
repnz
aad
mov
hlt
pop
add
push
repnz
stos
inc
dec
divb
out
in
dec
lahf
adc
mov
dec
test
lods
and
push
lret
js
in
clc
push
int3
pop
add
mov
xchg
push
sbb
or
jnp
xor
dec
pop
test
inc
mov
inc
adc
mov
mov
sarb
adc
mov
and
mov
push
loope
cwtl
mov
push
mov
stos
sub
adcb
mov
jno
add
cmp
xchg
dec
push
fwait
sbb
push
pushw
or
add
xchg
jae
inc
insl
mov
xchg
cmpsl
or
fnsave
pop
mov
movsl
cmp
mov
lahf
lds
cs
pop
jg
dec
cmpsl
ss
repz
scas
mov
xor
pop
pop
adc
iret
mov
aas
or
cli
aaa
xor
lds
mov
ret
pop
jae
ja
or
ret
adc
sub
and
add
jmp
std
insb
pop
or
push
aad
jl
dec
subb
sti
mov
pop
fs
mov
fadd
mov
dec
xor
shll
lods
ret
sub
mov
sbb
divl
insl
inc
fnstenv
push
cwtl
gs
lds
or
cmpsl
add
mov
jae
xadd
push
std
loope
arpl
push
andb
iret
sbb
out
inc
and
out
sahf
out
stc
or
cltd
and
gs
les
sbb
lods
fisubl
cmp
dec
pop
mov
sub
fdivrs
sub
rorl
sbb
sbb
rcl
dec
out
adc
mov
mov
sbb
jne
xchg
in
fldt
jg
mov
call
mov
bound
test
add
or
jo
or
push
mov
mov
fcmovnbe
pop
sahf
or
adc
subl
scas
add
ret
jge
insl
mov
jecxz
mov
push
xchg
mov
add
std
xor
and
mov
roll
inc
mov
push
shlb
icebp
add
xchg
jo
push
cmpsb
cmp
add
adc
add
sbb
push
pop
push
movsb
out
insb
or
imul
call
xchg
sar
cmpsb
and
decb
dec
ja
lods
popa
leave
or
psubq
js
pop
inc
pop
test
jp
or
mov
sbb
fidivrs
cmpsl
mov
mov
or
movsl
mov
ja
xor
mov
ror
xor
cmc
mov
mov
cmc
jecxz
int3
lret
or
mov
shll
inc
push
repnz
sarl
sbb
outsb
pop
loopne
mov
ja
insb
insb
mov
xor
aaa
out
add
sub
xchg
inc
add
and
pop
insb
mov
cmp
cld
iret
loop
pop
lahf
mov
shrl
jno
cmpsb
push
adc
fimull
hlt
js
mov
sbb
scas
push
xchg
mov
mov
mov
mov
adc
dec
mov
fldenv
loope
mov
lods
sbb
push
bound
inc
scas
stc
jnp
xchg
fldt
outsl
pop
lock
repz
xchg
test
cmc
imul
dec
adc
test
inc
mov
lcall
test
fsts
xchg
or
inc
sahf
popa
sbb
add
xor
and
sub
jb
std
pop
repnz
inc
jp
test
popl
stc
mov
dec
repnz
or
aas
data16
orb
push
dec
out
mov
push
mov
fidivrl
push
jbe
cmc
pop
fmulp
scas
jp
or
test
sahf
xchg
add
sbb
dec
mov
repz
hlt
sbb
insb
loope
cmc
lret
cmc
or
jo
stos
add
add
mov
and
pusha
adc
add
imul
mov
in
mov
icebp
pop
aas
dec
mov
inc
aaa
cmp
push
scas
xor
inc
jns
xor
xchg
js
or
mov
jecxz
mov
loopne
lahf
pop
and
out
imul
mov
add
lcall
cwtl
and
lds
or
xchg
lods
lods
inc
cwtl
fs
push
fisubrl
imul
add
jae
jo
sbb
jl
sti
xchg
leave
lods
xchg
in
lcall
negl
call
inc
ss
cmc
repnz
adc
dec
nop
enter
push
pop
push
cmpsb
adc
mov
shrl
lds
enter
xor
add
jg
out
fsts
inc
mov
dec
add
cs
and
xor
jge
es
jo
add
cmp
xor
scas
mov
push
xor
mov
adc
icebp
jp
es
scas
adc
scas
out
jg
loope
inc
or
inc
je
scas
movsb
int3
movsb
mov
lret
adc
cmc
fdivrs
js
jge
test
add
sahf
mov
insb
and
sbb
jp
add
out
xor
push
sbbl
inc
loop
mov
ret
cmpsl
mov
or
adc
insb
popa
inc
fstpl
insl
and
in
cmp
jle
pop
inc
gs
dec
jle
pop
or
lods
mov
lock
ret
hlt
lret
ljmp
mov
ret
pop
lds
pop
push
jmp
mov
ret
scas
jae
adc
xor
aaa
pop
scas
xchg
popa
fistps
mov
mov
enter
lea
stc
push
das
roll
mov
enter
sbb
das
and
sbb
int3
add
sub
shrl
addl
dec
insl
daa
mov
mov
dec
addl
and
dec
fdiv
aad
cmp
stc
pop
call
js
pop
clc
fidivrs
jge
mulb
push
mov
jne
inc
add
hlt
in
aas
push
sbb
sub
xchg
mov
fstps
xor
aas
daa
sub
cli
ljmp
jge
xchg
std
lcall
bound
std
shll
push
mov
cmp
daa
jecxz
out
jnp
cmp
sbb
test
call
loopne
jne
sub
ret
stos
test
rolb
mov
sub
decl
ljmp
dec
int3
jg
inc
mov
arpl
sub
lahf
int
push
es
lods
pop
add
sub
inc
gs
push
or
daa
hlt
test
lahf
lahf
ss
nop
int
or
and
fdivr
xchg
jo
in
inc
sbb
push
xchg
push
inc
or
dec
mov
push
out
out
icebp
mov
imulb
cmpsl
js
cli
enter
add
xor
call
imul
sub
adc
pop
subb
and
mov
push
cmp
fyl2x
ja
aam
ljmp
push
mov
mov
mov
cmp
or
xor
call
mulb
mov
lcall
lret
movsb
testl
cmc
inc
pop
pop
out
outsb
lret
loope
adc
pop
dec
mulb
in
dec
push
sbbl
ficoml
xor
call
sahf
cwtl
and
sbb
loope
push
ffreep
cli
jo
aas
push
pop
sub
gs
jbe
mov
jo
jge
xchg
fldcw
dec
fildl
mov
xor
leave
pop
pop
movsl
push
out
jmp
push
mov
movsb
xor
inc
daa
popa
add
push
clc
mov
mov
jae
xor
in
js
push
fcom
fldenv
lcall
jno
xchg
adc
push
movsb
xchg
lret
adc
frstor
jg
frstor
loop
adc
loop
or
or
insb
cmpsb
loop
test
adc
push
push
sbb
movsl
fldl
sub
shlb
outsl
jo
adc
addr16
mov
add
jg
mov
adc
push
sbb
mov
push
jle
push
inc
add
inc
mov
lahf
mov
push
std
add
popf
sbb
in
mov
aaa
adc
int
pop
pop
orl
mov
insl
cmp
sub
les
iret
stc
mov
test
pushf
push
cmp
bnd
loop
aam
jl
pop
or
out
js
or
out
leave
inc
data16
and
mov
shll
jo
lds
pop
mov
push
mov
test
lret
jecxz
int3
mov
xchg
pop
xchg
loopne
mov
loop
xlat
mov
ror
cltd
push
daa
cmp
ss
jle
add
jle
in
mov
adc
outsb
enter
xor
dec
jecxz
mov
jae
jge
jno
lods
jmp
out
fidivrl
cmpsb
xlat
notb
and
sub
notb
loopne
fadds
pop
xchg
mov
inc
mov
leave
daa
xchg
cld
repnz
push
pop
pop
mov
adc
mov
aad
stc
dec
sahf
mov
out
cmp
push
scas
xchg
inc
lock
or
ret
mov
sub
mov
in
push
xchg
adc
add
es
leave
inc
lods
aaa
in
sub
xchg
inc
jb
jne
pop
cmp
ljmp
xchg
jo
in
push
leave
ret
pop
pusha
daa
dec
mov
mov
pop
push
dec
xor
mov
sbb
jae
sub
pop
imul
rorb
xchg
stc
cld
ret
gs
sahf
scas
inc
mov
mov
aaa
pusha
inc
pop
xlat
dec
subl
push
lcall
mov
jns
dec
js
ss
sarb
cmp
mov
call
loop
sbb
push
in
cmp
add
lcall
into
outsl
sbb
sub
in
xor
push
ja
ljmp
jle
jge
pusha
shrb
icebp
or
xchg
inc
dec
mov
pop
insl
push
jecxz
cmp
fimull
je
addr16
movsl
xchg
icebp
jge
add
pop
loope
call
mov
jae
aas
out
and
sbb
out
jecxz
xchg
test
aas
cmp
dec
pop
mov
fstl
gs
mov
cmpl
dec
dec
hlt
push
mov
and
dec
mov
or
cld
sub
fcomip
shrl
push
add
ja
mov
mov
push
movsl
addr16
push
ffree
sub
repz
in
mov
subl
add
jno
mov
xchg
xchg
sub
rclb
ret
mov
les
imul
cmc
add
das
dec
ss
idivb
jle
sbb
movsl
adc
jl
daa
cmpsl
ja
add
and
push
rorl
jno
xchg
and
fsubl
pop
pop
and
push
sbbb
pop
jl
mov
stos
sub
and
loopne
pop
ja
inc
mov
mov
enter
jns
fwait
mov
fdivl
fucomp
jns
in
lods
push
mov
cmp
ljmp
lcall
shrb
mov
pop
or
pop
dec
mov
and
adc
loop
or
mov
xor
lods
xchg
add
pop
mov
das
xlat
cmp
jmp
out
call
and
dec
subb
lods
cli
jp
mov
pop
pop
inc
enter
pmaxub
jns
ljmp
outsl
inc
int3
fsubr
inc
push
aaa
xchg
stos
roll
jne
nop
rorb
leave
les
jle
mov
stos
xor
ss
lea
xor
decb
mov
and
xchg
add
mov
add
rep
lods
ljmp
inc
test
cld
mov
imul
sbb
dec
xchg
or
aam
mov
sub
xor
or
mov
jae
or
mov
mov
cmpl
sbb
sbb
and
movsl
ss
lcall
out
pop
fcmovne
fmul
loope
or
and
push
clc
xor
jp
push
dec
dec
pop
dec
inc
dec
cmpsb
mov
mov
gs
fwait
xorl
jo
loope
sti
int
lcall
test
adc
and
test
icebp
movl
add
pop
and
sahf
xor
lods
mov
mov
icebp
and
mov
and
fldcw
mov
xchg
push
sbb
jb
icebp
xor
adc
in
sub
xchg
xor
gs
cmp
rorb
pop
push
ss
push
xor
xchg
xor
push
and
xor
loop
test
inc
aad
mov
movsb
push
daa
jo
mov
ret
cmpb
pop
daa
adc
cmp
fadds
mov
push
mov
mov
les
jle
rolb
mov
jge
clc
cltd
aad
inc
lds
cmpsb
pop
out
push
push
xchg
and
push
loopne
ficoms
cmp
dec
pop
arpl
xchg
add
int
outsb
andl
in
xor
scas
aam
int
rcll
pop
js
cmp
sub
cmp
push
out
pop
pop
dec
rcll
jo
negb
mov
fstpl
jne
arpl
jp
push
inc
leave
test
test
xor
dec
daa
outsl
mov
cli
lock
rcl
inc
lret
sbb
and
sub
lds
test
popa
xchg
adc
pop
and
je
outsb
shll
sahf
cmpsl
mov
cmp
cmp
cmp
arpl
jle
pop
sarb
cli
mov
cmp
cmp
xchg
into
lock
jns
lret
cmp
daa
jle
mov
cld
pop
adc
into
aam
mov
data16
dec
mov
lret
cmpsl
xor
mov
into
jbe
sub
xlat
jecxz
inc
pop
xor
mov
lods
test
popa
mov
lcall
inc
push
popf
adc
jl
inc
fucomip
ja
in
jo
sub
sbb
lahf
mov
xchg
jne
xadd
dec
call
outsl
pop
daa
popf
sub
cmpsl
mov
cld
cwtl
fcmovu
inc
jg
lahf
loopne
iret
je
mov
or
popa
das
or
and
js
fstpl
push
addb
inc
ja
scas
cltd
xor
sub
imul
in
cwtl
mov
aas
ret
mov
xor
shll
int
in
pushf
stc
mov
and
popa
vrcpss
enter
test
push
mov
jns
lods
enter
push
leave
mov
std
stos
jne
mov
xchg
mov
negb
cs
lods
call
mov
idivb
fxch
aaa
xor
jle
adc
push
inc
xor
push
cmp
sarl
pop
jne
sub
add
jnp
cmc
les
imul
push
pop
lea
mov
bound
jns
jnp
xchg
sub
ret
add
mov
movsl
outsb
xor
xor
push
or
push
ficoms
inc
adc
adc
cmpb
insb
or
aam
dec
cltd
imul
mov
jne
mov
mov
pop
popa
sub
ret
jns
repz
sti
push
mov
add
pop
sarl
push
push
inc
inc
das
sub
or
sahf
add
mov
mov
fwait
jae
daa
dec
into
in
repnz
setp
dec
fimull
and
pop
cmpsl
xor
mov
mov
xchg
adc
sahf
movsl
shlb
out
in
push
pushf
loope
push
enter
xchg
xchg
bswap
and
dec
adc
pop
inc
add
dec
mov
xor
mov
subb
loop
leave
pushf
es
cmp
out
mov
ficomps
data16
imul
test
xchg
in
mov
or
adc
pushf
sbb
push
jb
in
xor
sbb
pusha
stc
dec
and
les
xor
add
lea
mov
ja
pop
xor
xchg
int3
incl
and
xlat
std
test
mov
cmp
stos
testl
xchg
add
movsl
arpl
jecxz
pop
mov
xlat
sub
imul
stos
pop
fmuls
cltd
std
sbb
ret
sbb
jmp
arpl
test
cmp
std
push
pop
outsb
in
andb
fildl
push
out
scas
data16
in
pop
lock
pop
mov
lods
fwait
das
fisttpl
vpaddw
xor
js
mov
fldl
dec
test
dec
subl
mov
jne
sub
lods
cmp
adc
into
mov
jp
push
or
push
movsl
inc
adc
dec
dec
dec
cmpsb
ds
and
fstps
in
popa
idivl
sub
data16
mov
imul
scas
push
add
adc
push
popf
xchg
aaa
dec
ljmp
fstps
inc
and
push
inc
jo
or
aam
mov
loope
mov
cmc
negl
out
out
add
leave
jb
jno
pop
nop
xor
pop
hlt
imul
xor
xor
xor
and
cmp
leave
popf
fcmovu
xchg
xchg
out
es
push
sti
and
clc
outsl
bound
jmp
push
je
xor
xlat
gs
push
enter
push
push
std
out
sar
and
add
inc
js
es
mov
and
shlb
cli
inc
stos
jae
lret
shll
xor
scas
push
mov
mov
xlat
jns
mov
pop
mov
pop
call
lods
xor
mov
gs
stos
push
cmp
lds
jecxz
sbb
das
or
add
sub
mov
sti
pop
add
mov
adc
jbe
loop
sarb
fwait
dec
jmp
xchg
adc
call
mov
sbb
daa
clc
enter
int3
popf
data16
cmp
push
sub
and
jb
add
push
imul
mov
mov
jmp
jae
xchg
in
scas
cmp
jle
xor
xor
pop
inc
out
loopne
jmp
pop
jle
imul
es
jmp
dec
jl
rcrb
sub
in
jo
mov
dec
adc
sbb
iret
lahf
xchg
mov
sbb
push
dec
or
mov
movsb
dec
pop
call
lock
add
mov
sbb
rorb
dec
in
mov
ret
test
inc
jp
loope
pop
jnp
orl
js
cmc
shll
sub
ja
jno
rolb
cwtl
add
scas
sub
out
add
xchg
mov
jae
idivb
test
mov
fwait
add
outsb
jecxz
pushf
push
shr
aas
jno
pop
jmp
sub
pop
dec
or
rcrb
rclb
pmaddwd
xchg
lock
dec
ds
movsl
mov
ds
mov
jmp
inc
ss
xchg
pop
mov
mov
je
jp
andl
dec
add
dec
push
popa
jg
jne
in
or
jp
ret
push
sub
xor
push
push
xor
sbbl
enter
shrl
lret
rep
addr16
enter
imull
dec
mov
jbe
rolb
xchg
xchg
ret
mov
mov
mov
push
hlt
push
cmp
int3
add
arpl
inc
sub
ljmp
movsb
out
data16
push
pop
mov
cmpl
pop
es
ret
dec
shr
rcl
repnz
pop
ds
xchg
test
jno
sub
mov
sbb
inc
nop
mov
cmp
push
mov
ret
jg
xor
xchg
dec
xorb
sbbb
mov
pop
mov
fadd
jl
ret
xchg
add
cmp
jecxz
cwtl
xchg
stc
push
cltd
and
shrl
inc
xor
cmp
push
lcall
cmp
add
dec
test
or
insl
stos
cmp
push
fiadds
stos
push
push
enter
cmp
repnz
mov
test
mov
gs
std
sti
dec
andl
add
rcrb
pushf
andl
dec
inc
bnd
sbb
xor
adcl
test
pushf
inc
popf
mov
lods
rcrb
lods
add
jp
in
cmp
sbb
out
dec
pop
ljmp
int3
jnp
push
fcmovnbe
jl
adc
jbe
mov
xor
stos
xor
xor
pop
pop
loope
pop
jbe
mov
aas
in
hlt
ret
inc
mov
and
loope
stc
mov
adc
in
bound
stc
mov
sub
or
xchg
lods
mov
xor
xor
repnz
add
or
xor
jge,pt
call
mov
and
push
inc
repz
mov
aad
adc
xchg
mov
into
ficoml
repnz
lcall
addr16
pop
in
imul
inc
aam
cmp
in
sub
aam
mov
dec
loope
sub
in
das
loope
xor
neg
dec
jge
jae
mov
add
xchg
daa
push
sub
outsb
lea
repz
pushl
das
int
sbb
xor
mov
pop
test
loope
mov
fsubrp
outsb
lock
sti
sub
or
push
stos
pusha
fnsave
iret
fnsave
dec
test
adc
mov
pusha
mov
mov
adc
mov
push
mov
cmc
loop
inc
mov
leave
ss
jno
jb
jne
xor
mov
mov
sarb
dec
xchg
inc
xchg
lods
inc
sub
icebp
sbb
dec
fdivrl
inc
fs
mov
lret
jae
sti
or
mov
adc
lret
shrb
aad
cmp
out
lds
in
insl
and
loopne
ljmp
xor
fs
mov
mov
and
or
hlt
les
insl
push
in
fistpll
das
es
movsb
inc
adc
add
dec
rcrb
outsb
pop
in
adc
push
ret
inc
shlb
pop
arpl
and
ret
push
gs
inc
data16
mov
jnp
data16
xchg
mov
add
mov
sub
inc
jge
stos
pop
mov
rolb
loop
or
scas
or
or
push
mov
mov
sub
cmp
inc
xor
push
test
jl
fdivs
jecxz
inc
movsb
lods
sahf
xchg
out
cwtl
cmp
nop
imul
ficoms
or
sbb
mov
jae
mov
and
cmp
gs
lods
mov
movsb
jb
sub
mov
xlat
xorl
inc
jno
paddsb
mov
out
pop
or
xchg
mov
push
testb
pop
sbb
jne
negb
and
lea
mov
mov
out
add
mov
imul
aad
jae
jmp
stos
dec
adc
pop
mov
enter
xor
add
push
mov
xchg
pusha
insb
push
adc
pop
add
xor
jnp
sub
lock
and
and
test
cld
and
and
lea
cmc
jp
sub
mov
subl
sub
sbb
icebp
loop
mov
mov
inc
sarl
cld
pop
inc
popf
xor
stos
sbb
pusha
pop
xor
jl
nop
jle
sub
shlb
inc
sub
mov
adc
adc
xchg
pop
cltd
loop
dec
cmc
bnd
mov
nop
and
loopne
add
movsb
leave
cmp
ror
pop
imul
lahf
push
cmpsl
xchg
sahf
push
clc
push
sub
cmpsb
sti
hlt
testb
xchg
icebp
in
xor
mov
mov
test
shr
test
int
jnp
jl
mov
add
iret
push
gs
adc
and
pop
fwait
and
leave
enter
jne
fimuls
stc
cmp
push
fstps
repz
loop
ljmp
fcoml
daa
cmp
fcomps
rclb
cmp
std
dec
mov
stos
mov
push
mov
shll
scas
xor
xchg
mov
inc
mov
sub
mov
and
ljmp
cmp
cmp
jmp
push
pop
lret
xorl
ljmp
or
hlt
or
cmp
jge
cmc
mov
imul
dec
test
je
rcll
mov
ljmp
lods
insb
mov
fwait
dec
pop
and
xor
cmp
shrb
hlt
inc
lods
xor
ret
fidivs
xlat
pop
cmpsb
popa
lock
in
cmp
ret
pop
push
xchg
jb
mov
xchg
push
pop
push
movsb
mov
pop
mov
mov
data16
js
and
insl
scas
xchg
sub
outsl
sbb
in
xrelease
out
fxtract
cmpb
enter
mov
jno
inc
pop
or
sbbl
ds
mov
inc
sbb
pop
fisttpll
pushf
push
mulb
xor
data16
stos
out
sbb
xor
and
add
mov
add
test
mov
cli
push
jle
push
or
push
xor
or
mov
ret
pop
jae
in
xchg
movsb
adc
and
out
incb
push
fdivrs
dec
push
xor
stos
insl
roll
sbb
insl
scas
adcb
cld
or
jmp
leave
out
mov
fnstsw
nop
jne
adc
into
inc
inc
addr16
ret
pushf
xor
ror
pusha
test
push
ss
inc
pop
cmp
movsl
loope
xlat
cmp
jno
adc
aaa
nop
push
sub
in
xchg
das
mov
dec
stos
stos
sub
rcr
aad
xchg
loope
or
stos
jecxz
pop
lods
enter
movsb
int3
mov
mov
xor
nop
lods
push
pop
adc
jecxz
sbb
mov
hlt
mov
rcrb
push
mov
mov
insb
cld
xchg
mov
xlat
ret
add
idivl
stc
cmp
mov
and
cmc
jae
add
jge
gs
mov
sarb
shrb
dec
mov
mov
sub
push
pushf
scas
mov
cmp
xchg
xchg
sub
sbb
jp
jmp
ss
push
inc
cmpsb
sub
lret
xchg
jae
sbb
adc
sahf
pop
sbb
es
sbb
lods
or
call
dec
xchg
add
faddl
cltd
pop
aas
sub
pop
sahf
into
sub
rcrl
fildl
lds
pop
and
mov
dec
add
scas
js
push
xchg
push
je
nop
clc
dec
lcall
push
ds
subl
mov
adc
add
pop
mov
sbb
rcrl
out
dec
sbb
jle
arpl
cs
jmp
int
mov
cmp
xor
sub
je
xor
lahf
ss
cmp
sub
popf
mov
and
xchg
cltd
adc
leave
jns
sahf
addr16
fbld
adc
jmp
daa
imul
xchg
add
out
mov
mov
xchg
in
push
test
shlb
and
mov
inc
xchg
add
sbb
pushf
dec
insl
sbb
test
mov
fwait
nop
cmp
push
gs
pop
xor
insb
xor
lods
lret
mov
inc
and
adc
cmp
inc
pop
mov
je
sub
fstl
inc
lret
cmc
shll
add
xchg
cmp
pusha
xor
or
mov
cmp
je
jg
xor
lods
int
inc
xchg
push
sar
jnp
scas
sbb
mov
cltd
dec
das
stc
ret
cs
xchg
fadd
in
jge
mov
mov
mov
cmp
mov
int3
push
push
push
xor
repz
cmp
add
cmp
ret
sub
mov
xchg
adc
push
mov
dec
out
hlt
xchg
sub
add
scas
out
shlb
cmp
xchg
into
and
push
jecxz
cmc
inc
jb
jns
xchg
xchg
cli
mov
sub
pop
sub
sub
jnp
or
das
fistpl
cmp
fs
xorl
fcomps
shl
clc
inc
hlt
dec
movaps
add
mov
jo
stos
push
shl
stos
adc
jbe
push
mov
sbb
shlb
mov
in
xor
sbb
dec
outsl
pop
cmc
xchg
push
and
movsl
sbb
sahf
and
mov
pop
adc
cmp
mov
jnp
jle
adc
test
fistpl
adc
sbb
jg
ret
inc
es
sbbl
cwtl
push
inc
and
or
addr16
xlat
cli
cmp
int3
push
xor
or
stos
call
push
test
addr16
xchg
lea
sub
sbb
loope
xor
leave
hlt
dec
push
jp
jmp
push
adc
cmp
pop
mov
shrb
cmpsl
sbb
stos
or
xchg
jmp
clc
out
int
ret
push
jne
fcoml
scas
pop
loopne
mov
jg
inc
je
mov
out
add
mov
push
sub
adc
adc
and
push
int3
fadds
sub
stc
call
add
sub
cmp
enter
jmp
mov
xchg
dec
xor
cmc
pop
nop
jge
jne
inc
adc
jmp
test
stos
ja
ja
xchg
xor
add
shrl
adc
pop
inc
cld
leave
dec
lcall
jmp
sbb
jb
add
xchg
test
sbb
inc
inc
mov
lret
inc
xchg
lds
xlat
mov
mov
xchg
fisubrl
dec
push
jle
in
cmp
clc
out
inc
add
xchg
repz
push
ds
push
lcall
leave
or
mov
je
movsl
das
pop
insb
ss
test
mov
sub
xchg
push
sbb
adc
lahf
dec
xor
dec
xorl
sub
fsubs
xchg
xor
in
mov
push
cmpb
add
dec
out
or
mov
lret
nop
jno
lods
cmp
shlb
pop
push
adc
cmp
jp
push
sahf
mov
and
out
push
push
jno
mov
iret
push
and
lds
inc
xchg
jge
dec
mov
sahf
xchg
push
mov
and
shl
and
or
or
fbld
xchg
testl
out
jns
test
movsb
dec
fwait
shlb
into
fadds
dec
rcr
lret
movsl
movsb
and
pop
arpl
jnp
dec
add
movsl
sbb
mov
ret
jmp
insb
popa
push
inc
repz
xchg
stos
out
jmp
mov
cmp
cmpsl
mov
cmp
dec
sbb
out
in
push
pusha
mov
dec
xchg
jbe
push
push
outsl
fmulp
cmpsl
fwait
shrb
add
push
dec
pushf
push
es
fadds
sbb
mov
lret
pop
ljmp
ds
shl
add
dec
dec
push
int3
shrb
sub
jecxz
and
push
outsb
fcmovu
and
sub
and
sar
pop
inc
outsb
sub
xor
sbb
mov
xor
lahf
sbb
shr
rcrb
test
sarl
push
dec
xor
sahf
sbb
mov
mov
daa
adc
imul
imul
jnp
and
dec
cmp
in
push
fnsave
xchg
pop
cmp
popa
sahf
leave
jge
mov
push
add
testb
outsl
fistpll
stos
jmp
repz
jmp
mov
shlb
cmp
stc
testb
repnz
pop
orl
sub
and
adc
jl
adc
out
mov
rcrb
in
or
test
and
sub
pusha
jge
xor
ds
loopne
lock
neg
sbb
adc
imul
lds
mov
int
insb
add
pop
dec
add
mov
addr16
push
mov
lret
and
pop
jns
iret
sbb
sub
pop
dec
mov
scas
lcall
jecxz
pusha
jle
sub
push
shlb
in
cmpsb
push
in
cmp
lret
sbbb
pop
mov
loopne
mov
scas
lcall
mov
mov
fbstp
pop
cmp
repnz
xchg
pop
xor
xor
test
dec
sub
lea
pop
mov
push
nop
jo
popa
mov
aad
stc
inc
pusha
lret
mov
stos
pop
push
out
enter
cmp
aas
into
xchg
shrb
mov
push
movsl
sbb
sub
mov
arpl
pop
adc
mov
pop
scas
rcrl
icebp
mov
xchg
fistpll
xorl
mov
shrb
inc
pop
inc
hlt
imul
push
icebp
test
fisubl
pop
mov
shlb
fistpll
ljmp
dec
lcall
lret
cli
sub
push
jo
jmp
lods
mov
test
xchg
dec
icebp
sub
or
mov
xchg
dec
cld
xchg
out
aaa
fistl
pop
push
and
pop
mov
jbe
jne
cwtl
cmp
push
mov
jne
aaa
loopne
dec
push
adc
cli
insb
push
pop
sbb
or
shrb
mov
and
cmc
mov
dec
daa
fs
out
xchg
loopne
push
out
xchg
mov
push
cmp
sbb
cmp
lea
int3
cltd
enter
es
sahf
adc
and
add
jmp
push
ret
mov
add
loope
mov
ss
insb
and
lcall
jecxz
mov
jae
cmp
loopne
jecxz
rclb
iret
xchg
fcmovbe
and
not
setle
cmp
adc
in
fcmove
mov
xchg
or
mov
addl
cmc
push
sub
adc
xchg
data16
pop
lret
mov
add
sub
inc
pop
and
les
mov
iret
push
pushl
dec
iret
cmp
adc
mov
hlt
lods
in
imul
andb
movsl
scas
fcmovne
adc
or
cmp
jle
sub
jnp
or
js
mov
pop
dec
sub
fistpl
pop
push
inc
xchg
or
lea
fmulp
cmp
negl
mov
inc
mov
xchg
icebp
nop
xor
adc
sub
sbb
or
and
leave
or
insl
inc
in
adc
shrb
popa
mov
jb
enter
sbb
push
jno
mov
nop
and
jae
shr
mov
mov
push
mov
aaa
mov
dec
popf
scas
faddl
stos
aam
clc
pusha
iret
repz
sub
test
push
popf
popa
int
sbb
jecxz
jbe
daa
mov
xor
data16
dec
popf
xchg
and
fcom
and
incl
popf
mov
imul
jge
push
cmpsb
stc
test
aaa
sub
inc
insl
sub
shll
mov
dec
negb
push
je
stc
mov
leave
inc
cmp
sti
jg
push
pop
ret
adc
insl
mov
ljmp
xchg
gs
mov
inc
je
shrb
cwtl
push
cmp
bound
lea
sbb
lret
adcb
jbe
mov
imulb
fs
xchg
pop
sti
adc
inc
jns
test
outsl
sbb
mov
cmp
out
aad
mov
movsb
sub
mov
stos
sbb
mov
nop
or
movsb
or
gs
cmp
jl
xor
pop
or
lock
mov
mov
fs
cld
fldln2
and
cld
cmp
repz
jnp
fisttps
sub
xchg
adc
pop
and
test
push
inc
dec
dec
cmp
mov
sbb
jbe
adc
push
add
xlat
and
shrl
out
dec
dec
or
ljmp
push
add
dec
ds
pop
popf
and
mov
jle
xor
add
adc
nop
jge
in
or
mov
fwait
mov
hlt
push
ja
xchg
andl
aam
addr16
push
pop
xor
xchg
ss
icebp
into
js
inc
mov
js
push
repz
dec
inc
mov
cmp
inc
test
mov
cmc
out
or
andl
lods
cli
stos
test
push
fisubrs
dec
sbb
loopne
fmuls
ret
add
add
lret
mov
dec
dec
cmp
cwtl
jae
ret
lea
adc
push
std
adc
cmp
mov
aad
cld
pop
jecxz
xchg
add
test
push
iret
push
or
ficompl
add
pop
pop
fldcw
mov
fwait
lcall
mov
bound
mov
movsb
roll
mov
std
mov
push
out
das
js
sbb
inc
ja
aaa
jp
sub
jno
jae
inc
jge
mov
lret
repnz
cmc
lahf
xor
imul
int
mov
xchg
rorl
sub
cmp
test
and
push
movsb
pop
ljmp
xor
inc
shrl
ds
lahf
outsl
xor
sbb
adcl
jbe
fstp
sbb
xchg
test
mov
mov
or
mov
or
dec
jge
xchg
fucomi
addr16
jle
pusha
es
cwtl
je
out
pusha
arpl
clc
shl
clc
lea
or
int
inc
fldcw
xchg
push
inc
mov
in
pop
dec
dec
repz
lods
shll
shl
sub
cmp
pusha
pop
push
pop
fwait
test
fwait
push
push
xor
rol
add
bound
add
push
push
xchg
je
and
popa
lret
inc
test
enter
movsb
enter
and
sahf
mov
mov
dec
das
out
xchg
iret
cmp
sbb
pop
mov
add
cmpsl
shll
mov
inc
add
xlat
in
fisttpll
xchg
xchg
jecxz
pop
insb
sar
jge
icebp
popa
mov
push
mov
adc
jge
jb
inc
nop
jmp
mov
lret
xchg
adc
in
out
cli
sbb
dec
adc
jl
fdiv
aad
mov
rcrb
clc
nop
sti
rcr
sub
fsts
loope,pn
test
push
sub
dec
in
fldt
sbb
adc
inc
dec
adc
in
xchg
notl
xchg
pop
xor
sub
xchg
jbe
jle
xchg
adc
fs
pop
pushf
jns
adc
sbb
sarl
shll
push
les
inc
stos
enter
jno
mov
cmp
cmpsb
push
add
mov
inc
add
andl
or
mov
xchg
out
pop
call
add
xchg
inc
les
ss
je
mov
adc
test
sub
popa
fdiv
sarl
push
push
jmp
cwtl
pop
test
cltd
push
out
xchg
dec
test
sub
push
lods
fsubp
jb
push
fidivs
daa
cs
out
xorb
or
leave
mov
lcall
imul
shlb
push
xchg
cli
int
out
cli
push
mov
andl
or
dec
xor
pop
jmp
jl
cltd
repz
sub
mov
lahf
xor
xchg
cmp
lret
inc
inc
cld
mov
daa
mov
ja
imul
lock
sarl
imul
fbld
mov
lea
cmpsl
pop
cmp
in
lods
pop
dec
push
inc
jb
ja
mov
push
mov
mov
mov
cmp
xor
dec
jbe
xor
rclb
sbb
xchg
fstps
adc
xchg
mov
arpl
fs
mov
stos
inc
push
mov
testl
jne
lods
sub
insl
sbb
mov
sub
outsb
out
jmp
mov
mov
bound
inc
sahf
and
cmp
dec
jg
dec
fs
push
dec
jnp
out
xchg
jl
leave
ret
ret
fidivl
mov
pop
xchg
fidivl
cmc
imul
dec
pop
inc
jb
daa
ret
cld
pop
imul
ds
sub
jno
stos
push
out
xchg
aas
sbb
add
xchg
lahf
mov
fstpt
aas
movsl
jg
or
imul
aaa
inc
push
neg
push
mov
mov
scas
inc
dec
mov
fbld
lock
mov
add
jbe
jns
sub
and
xchg
test
stos
inc
mov
imul
mov
inc
std
mov
int
push
movsl
add
sti
outsb
mov
or
call
cmp
cltd
hlt
shll
gs
bound
dec
dec
add
movsl
or
leave
and
das
shll
cmp
arpl
sub
and
outsb
int
aad
in
fldt
clc
dec
cs
push
stos
lret
dec
mov
mov
inc
adcb
rcrl
cli
mov
lods
loopne
lahf
push
dec
lea
test
cmp
rcrb
sub
pop
and
pop
rorl
js
and
sbb
adc
test
mov
shll
push
ret
aaa
pop
scas
rolb
xor
cmpsb
and
inc
stc
sub
jp
icebp
dec
push
xchg
std
cltd
cs
or
dec
repnz
sub
mov
sbbb
pop
ss
and
lea
mov
cmp
clc
shl
add
lods
adc
fs
sbb
leave
and
gs
inc
cmp
into
test
enter
shll
aam
mov
cmp
je
ret
out
push
xchg
loope
adc
or
in
pop
stos
sbb
push
pushf
jle
pop
lods
movb
mov
pop
inc
inc
callw
mov
jge
sbb
or
mov
int3
out
mov
lahf
mov
out
jmp
lods
inc
subl
add
fcmovnu
and
pushf
push
jmp
shlb
mov
sub
bound
mov
arpl
xlat
pop
cli
popl
loop
andb
ja
add
cld
xor
sbb
jns
dec
cwtl
stc
in
mulb
jne
push
orl
cmc
pop
pop
fs
cwtl
pop
out
dec
push
lcall
add
xchg
stos
mov
cmp
mov
ret
add
loopne
loop
loop
xor
sbb
cmpsb
movsl
loop
rorb
pop
sbb
fsubs
loope
inc
out
pop
or
inc
repz
mov
push
or
test
rcrb
xchg
out
rcl
cmp
mov
mov
loopne
adc
js
cmp
insl
add
test
negb
pop
call
cld
enter
mov
mov
adc
pop
lret
mov
mov
push
dec
sub
and
jnp
dec
stos
jecxz
in
push
sbb
js
mov
or
xor
pop
sub
rcrl
inc
inc
data16
stos
mov
pushf
fisubrl
mov
mov
jge
add
jmpw
cmp
cmc
mov
mov
inc
ud1
pop
sub
lods
fcoms
adc
push
xchg
sub
jb
jae
mov
pushf
push
fildll
repz
lret
dec
faddl
les
enter
fsubp
cli
pop
xchg
xchg
mov
test
sti
mov
or
lcall
shll
mov
mov
push
call
dec
push
add
xchg
mov
les
jne
cmp
pop
sbb
test
pop
cmpsb
lret
lock
jns
inc
decb
lret
lret
xchg
daa
xor
adc
pushf
mov
gs
and
stos
push
js
mov
pop
shlb
lods
mov
add
jge
fdivrs
aaa
pop
cmc
es
mov
pop
mov
lahf
xchg
cltd
scas
dec
stos
mov
add
and
sub
movsl
inc
leave
test
push
movsl
or
mov
mov
adc
leave
sbb
mov
or
mov
or
xchg
hlt
sub
sub
sarl
dec
xor
je
xor
and
imul
fwait
xchg
push
push
dec
cwtl
imul
shll
push
xor
insb
in
cs
jg
jb
fs
addr16
push
pop
mov
loopne
mov
xorl
cmp
rclb
or
testb
daa
mov
xor
ret
jecxz
cmpsl
ljmp
scas
sbb
test
sbb
mov
test
and
jp
cmp
mov
mov
pop
pop
inc
sahf
imul
sbb
lcall
cmpsl
loope
stos
flds
sti
idiv
xchg
jae
inc
fnstcw
aam
mov
dec
mov
sub
dec
das
insl
scas
jb
push
mov
insl
int
lock
dec
lds
mov
hlt
daa
int
not
bound
push
lret
pop
jne
dec
mov
inc
sti
daa
in
loop
cmpsb
fs
mov
loopne,pt
mov
aad
movsb
insb
nop
xor
shlb
shlb
fwait
les
inc
jle
sub
mov
loopne
int3
adc
shlb
fbld
or
mov
test
mov
aaa
xchg
iret
ret
clc
mov
not
or
imul
xlat
cmp
jle
and
xchg
sub
out
adc
stos
repz
loope
pop
jle
mov
addr16
fcomp
jnp
fldcw
and
push
and
insb
insb
push
out
xchg
leave
jbe
mov
popa
ja
stc
pop
push
pop
xchg
pusha
mov
mov
jmp
jns
add
cmp
fwait
inc
int
mov
xor
ret
enter
ret
fidivrl
pusha
hlt
mov
out
je
inc
dec
lret
cmp
sub
imul
inc
dec
cmp
xlat
pushf
mov
xchg
stos
iret
sub
ficoms
aad
or
xor
mov
push
je
mov
pop
gs
outsb
test
rolb
push
in
sbb
push
adc
lods
lret
push
sbb
dec
int3
and
ret
imul
in
mov
cmpsb
in
sbb
xchg
jns
repnz
xchg
out
int3
xchg
test
xor
in
sbb
lret
jbe
ret
mov
adc
je
fwait
xor
aad
push
rcl
scas
into
and
icebp
fstpl
xor
mov
fists
gs
sub
fwait
inc
mov
jae
sbb
xchg
and
xchg
push
mov
test
jb
xor
pop
sub
mov
mov
jo
add
jbe
xchg
jno
sub
push
or
mov
push
bound
cmp
ds
xchg
pop
and
lods
sbb
xor
stos
sbb
xchg
mov
fxch
stc
jl
sbb
cmp
lods
xlat
push
mov
push
mov
js
jmp
xor
jns
jno
push
push
push
jne,pn
popf
aaa
mov
out
fwait
mov
add
jbe
dec
adc
adc
inc
or
into
or
leave
movsl
mov
sahf
popa
aas
or
jne
push
inc
sbb
xchg
test
xor
stos
test
test
insb
popa
arpl
inc
in
sub
inc
inc
xlat
fldl
int3
jmp
xchg
sbb
jecxz
push
cmpsb
lods
mov
mov
arpl
xchg
div
mov
jns
pusha
mov
push
daa
test
mov
xchg
rol
into
shlb
jne
mov
mov
xor
cmpsb
inc
xchg
ficompl
push
je
sbb
mov
mov
and
xchg
int
insl
shrl
out
mov
in
cld
mov
mov
push
pop
into
lcall
mov
gs
idivb
repnz
and
clc
dec
aas
add
jg
leave
sbb
scas
mov
push
sbb
in
cmpsl
mov
mov
imul
lret
xchg
out
mov
adcb
adcb
pop
xor
into
mov
mov
lahf
push
ja
xchg
rclb
sub
xchg
sub
add
pop
iret
out
add
adc
mov
jmp
xchg
shrb
popa
movzwl
iret
mov
mov
pop
mov
pop
jnp
int3
sbb
fs
in
ljmp
inc
mov
sub
rclb
mov
loop
jp
cmp
dec
rcr
and
ss
push
aam
negl
cmp
jge
mov
jmp
sbb
inc
mov
dec
jecxz
mov
data16
or
add
bound
lock
jno
dec
loopne
jbe
loop
aaa
loope
sub
jge
sub
repz
adc
dec
lods
imul
int3
jne
mov
je,pt
push
pop
lret
push
call
iret
jmp
sbb
push
shlb
in
and
pop
aam
incl
or
fmuls
jge
cmp
fidivrs
lods
mov
lret
inc
sbb
rcr
xor
mov
mov
dec
pop
dec
lret
push
adc
push
add
in
jecxz
xor
jle
xchg
sbb
int
pop
aaa
mov
fists
cmp
leave
stc
cmp
sub
adc
add
leave
cmp
cli
psrad
testb
mov
cwtl
out
enter
xor
out
mov
add
cmp
psadbw
mov
sbb
mulps
jne
xor
push
inc
adc
leave
cmp
sub
test
pop
imul
mov
out
movb
mov
adc
movsl
mov
ljmp
pushf
ret
or
mov
loope
and
jno
es
test
ror
mov
outsl
ret
mov
enter
lcall
ds
clc
lret
pusha
pop
inc
mov
popa
mov
xor
repz
in
rcr
mov
sahf
lea
aad
aas
shl
push
imul
mov
push
xchg
xchg
lahf
outsb
inc
hlt
lcall
add
subl
or
in
cmpsb
shl
adc
jno
pop
or
add
or
jg
mov
xor
ja
dec
sbbl
test
ds
leave
out
enter
pop
fstl
je
pop
push
mov
jecxz
or
push
sub
sub
arpl
lret
mov
cwtl
in
mov
mov
fxch
fidivl
imul
sbbl
add
adc
out
enter
lds
jmp
dec
jae
jmp
xlat
popf
outsb
push
gs
insl
add
into
dec
adcb
ret
jnp
repz
push
pop
iret
inc
mov
pop
insl
cmp
je
mov
mov
popf
leave
ds
bound
imul
pushf
enter
faddl
dec
mov
cmp
jo
jb
xlat
popf
cwtl
push
in
pop
out
xchg
push
dec
sub
loopne
xor
push
cli
into
pop
add
xor
mov
mov
sub
jns
jp
or
pop
xor
xchg
loop
dec
sbb
pop
ret
mov
push
xlat
mov
pop
inc
push
test
pop
mov
inc
sti
jmp
jo
and
xor
fisubs
fbld
fst
and
orb
push
push
push
inc
mov
in
fmull
jns
imul
mov
addl
xchg
test
sub
in
mov
mov
add
in
mov
adc
dec
sbb
mov
arpl
xor
mov
je
lods
jmp
inc
test
jge
mov
neg
or
jmp
subb
mov
mov
sub
mov
push
movsb
and
inc
mov
js
aad
loope
fidivl
fdivrl
jno
lcall
add
push
lds
mov
popa
jne
and
int3
mov
ss
inc
cmp
dec
adc
repnz
mov
and
sbbl
and
cmp
test
mov
xor
pusha
out
loope
push
in
lahf
mov
jne
test
and
and
leave
test
fdivrs
cwtl
call
inc
fldenv
cmp
lods
sti
stos
cmp
sbb
xchg
hlt
push
pop
dec
dec
in
scas
cld
into
push
test
rolb
loope
xor
push
iret
jle
pop
repz
shl
icebp
daa
addl
movl
loope
movsl
dec
frstor
jmp
je
cmp
aaa
add
adc
divb
ja
test
cmpsb
setge
in
or
xor
insb
arpl
rcrb
call
cmovne
in
shlb
push
xchg
in
sub
push
push
incl
rorb
hlt
test
xor
and
push
lock
lods
testb
test
fs
add
jmp
pop
call
xor
mov
mov
xorb
pop
pop
ret
dec
jle
std
jp
jp
out
push
mov
popa
dec
into
int3
mov
jno
inc
inc
pop
stos
mov
ja
sahf
ljmp
sahf
loopne
mov
add
in
call
cli
sbb
adc
popa
and
sti
cmp
imul
inc
adc
xor
dec
ja
icebp
inc
or
loope
divl
lret
jge
or
stos
jae
cmp
push
jae
sbb
add
sahf
call
xchg
push
bound
mov
dec
repz
push
fisttpl
sbb
gs
dec
jecxz
out
cwtl
push
dec
fwait
je
inc
mov
testl
je
push
leave
out
mov
aam
jmp
cli
xchg
mov
cmp
sub
cltd
mov
pop
jecxz
stos
lods
mov
addr16
std
fldl
rcl
movl
adc
dec
xor
fmull
sub
stos
mov
daa
fmul
lea
xchg
jmp
xor
add
pushf
dec
pop
aam
mov
insl
shll
cmpsb
dec
sub
mov
jmp
sti
jnp
ljmp
dec
cld
hlt
pop
xchg
sub
sarb
std
stos
mov
out
push
jmp
ret
push
push
add
lock
out
jl
std
mov
mov
push
dec
mov
and
jl
andl
cwtl
ljmp
dec
pop
mov
enter
dec
push
aaa
hlt
into
arpl
xor
sarb
mov
and
push
adc
mov
je
jle
push
cmp
jns
iret
mov
adc
into
sbb
out
shr
outsl
jecxz
cmp
sahf
sub
fimuls
add
mov
jbe
xchg
fcmovne
sbb
mov
outsb
pop
fistpll
ljmp
fstpl
gs
mov
fstps
aas
pop
xchg
or
pop
pushf
pop
mov
xchg
xor
faddp
js
shl
xor
lcall
cmp
cmp
testl
mov
cltd
mov
fstpl
fcmovbe
mov
ret
xchg
ds
jo
mov
imul
mov
adc
xor
jae
fwait
push
test
jo
push
dec
adc
js
cmp
out
cli
adc
dec
jbe
jl
inc
pop
xor
test
xor
dec
mov
dec
cmp
stos
and
mov
mov
sbb
movsl
ja
arpl
shll
pop
bnd
popf
xchg
in
mov
jl
jmp
mov
idivb
add
arpl
pop
xor
inc
mov
push
es
sub
gs
cmp
inc
dec
out
pusha
cmp
paddusb
incb
gs
adc
arpl
mov
jmp
cmp
adc
mov
sub
aaa
mov
adc
lea
dec
and
mov
lds
sub
lea
or
cmc
xchg
pop
iret
dec
scas
adc
and
scas
jp
test
inc
xchg
jg
sbbl
jbe
mov
dec
inc
or
cmpl
cmp
imul
lcall
push
es
sahf
cmp
add
test
iret
jle
ret
roll
sti
aaa
jle
movsl
pop
out
pop
fsubrl
lods
or
imul
xchg
and
mov
aam
cmp
aad
lret
mov
mov
inc
and
push
das
in
jne
adc
sub
mov
ret
mov
pop
mov
and
and
sti
dec
fildl
and
gs
ljmp
jnp
arpl
sahf
sub
adc
jecxz
ss
pop
ja
sub
dec
cmp
insb
in
mov
dec
stos
iret
jne
jecxz
adc
mov
imull
lods
cmp
and
jl
mov
mov
cs
rcrl
push
adc
xchg
repz
outsb
or
and
test
or
lcall
enter
or
xor
pop
fsubs
les
fsubp
jne
or
pusha
mov
sbb
add
xor
push
xchg
cld
xor
mov
adc
clc
lahf
jecxz
jnp
mov
ljmp
shlb
stos
lret
push
mov
loopne
aam
xchg
push
add
mov
jo
push
xchg
mov
ljmp
lret
add
sbbl
dec
sti
in
xchg
fs
inc
orb
sbb
std
fld
test
data16
test
add
lock
cmp
lods
mov
inc
cmp
adc
xor
shll
mov
pop
ds
push
ja
or
cltd
std
dec
xor
pop
lahf
cmp
int3
test
cmpsl
cmp
aaa
mov
test
mov
cmp
mov
push
mov
out
jecxz
adc
in
push
setb
jle
jp
xchg
out
pusha
cmpsl
movsl
or
movsl
insb
jg
dec
dec
loopne
adc
mov
or
shr
inc
cmp
pop
arpl
add
xchg
data16
loopne
pop
sti
add
jo
les
push
or
push
dec
cli
inc
mov
in
mov
cld
or
lret
andb
leave
cmpsl
dec
add
mov
adc
xor
lret
add
or
add
dec
add
push
pop
loopne
add
adc
aam
imul
shl
push
push
mov
mov
lea
dec
jmp
cld
mov
dec
and
jge
dec
das
mov
movsb
fbstp
dec
psrlw
outsb
push
jge
xchg
sahf
ds
iret
pop
mov
les
add
xchg
adcl
repz
leave
xor
enter
adc
out
lcall
jmp
pushf
repz
pop
pop
aad
adc
jbe
pop
frndint
dec
int3
lods
inc
push
jae
jo
push
je
push
sub
sub
cmp
adc
popf
ret
mov
mov
mov
lahf
test
ljmp
xor
mov
and
es
test
lods
adc
and
xchg
xor
mov
out
push
gs
fiadds
mov
and
sbb
lmsw
pop
jecxz
lea
jp
mov
or
stos
xor
sub
cmp
push
pushf
test
mov
cmp
mov
arpl
lods
cmc
pusha
test
fbld
add
push
xor
push
sub
mov
sahf
push
in
std
jmp
enter
lret
sbb
arpl
scas
adc
or
sti
add
adc
lds
iret
loopne
pop
aaa
adc
or
xor
das
cltd
add
sub
adc
lahf
push
and
mov
xchg
imul
cwtl
xchg
push
imul
rcr
adc
lods
push
pop
dec
inc
sbb
andb
ds
inc
loopne
sahf
push
jo
cmpl
mov
test
xor
sbb
aam
xor
lods
lock
mov
ss
sub
xchg
inc
xor
mov
xchg
roll
add
test
leave
jnp
pusha
sti
out
pop
ret
xchg
imul
cltd
lcall
outsl
jle
xchg
sub
inc
inc
scas
push
mov
iret
fnstcw
xor
pop
push
jb
bound
in
sub
cli
mov
stc
lods
xor
movsl
jnp
pop
sbb
imul
out
xchg
cs
mov
inc
cmp
sub
in
popa
dec
popf
cmpsb
xchg
push
push
addr16
xchg
daa
pusha
xchg
mov
inc
out
out
sub
movsl
or
mov
mov
xor
cwtl
into
cltd
cmp
in
push
je
and
out
pusha
mov
jmp
lock
ret
xor
inc
movsl
inc
pusha
xchg
fsubs
push
jo
inc
bound
shrb
sbb
push
lock
mov
icebp
add
cmc
cmp
xchg
cmp
pop
out
dec
adc
cmp
sti
shl
cmpsl
jno
lock
ds
ss
mov
and
jecxz
mov
and
mov
bound
pop
inc
xor
inc
fwait
in
dec
jmp
or
xor
jae
lret
push
gs
loopne
scas
inc
sub
fisttpl
call
and
push
mov
inc
sub
test
cltd
push
dec
pop
dec
add
test
or
mov
lods
mov
jmp
arpl
cmp
imul
xor
inc
add
push
popf
xor
push
pop
outsl
jbe
roll
mov
aaa
xchg
test
sub
pop
test
aas
cmp
inc
lock
pusha
lahf
jge
mov
inc
push
or
adc
sbb
in
mov
add
aas
rorb
scas
fs
in
sub
aad
adc
rol
adc
sbb
dec
lret
jmp
adc
test
inc
mov
mov
aad
push
imul
dec
dec
cmpsl
clc
mov
adc
adc
adc
test
push
add
mov
adc
or
inc
mov
pop
dec
flds
inc
pop
fwait
out
inc
sbb
std
dec
outsb
pop
add
sbb
pusha
xor
adc
test
cltd
cltd
sti
int
sbb
jb
xor
out
mov
pop
imul
xchg
das
es
fcos
ss
orb
mov
push
xchg
popf
lahf
ret
inc
add
push
jmp
add
fwait
mov
cmpsl
stos
test
nop
int3
pop
xchg
mov
jns
push
or
jle,pt
inc
insb
and
xor
stc
fldl
push
loope
cmpsb
jne
std
pop
push
into
jge
inc
inc
lods
rol
sub
in
cmp
ja
or
mov
ss
adc
jg
arpl
wrmsr
xor
inc
jne
pop
pop
movsl
xlat
mov
mulb
lret
push
mov
cmpsl
inc
jle
dec
cmp
jmp
adc
pop
jae
sahf
cld
call
scas
push
push
mov
outsl
cmp
mov
stos
jno
push
cmpsb
cmp
pop
sbb
add
repz
ljmp
int3
and
push
xor
shl
stc
ljmp
test
pop
fwait
or
vpsrad
mov
add
dec
inc
mov
adc
fucom
leave
pop
jl
mov
pop
in
adc
jnp
subb
lret
xchg
inc
add
push
aas
adc
in
sbb
sbb
or
outsl
dec
dec
and
test
cmp
pop
int3
repnz
stos
iret
xchg
pop
dec
inc
rclb
insl
int3
mov
sbb
xor
adc
cmp
pop
cmp
sub
mov
js
push
dec
loopne
mov
mov
aaa
mov
icebp
pop
inc
pop
jp
jno
xchg
leave
scas
xchg
pop
inc
adc
lods
fldl
imul
test
shrl
cmpsl
daa
aam
dec
xchg
ret
adc
sub
ljmp
push
adc
xor
ret
mov
cli
lds
cmp
repz
xchg
cmpsl
jnp
or
or
jae
push
popa
scas
pusha
lock
jae
insb
jne
ss
cmp
mov
push
sbb
pop
hlt
in
inc
rcll
lock
test
add
or
shlb
inc
popf
xor
jle
jb
fs
ja
xor
in
mov
or
or
xor
pop
jns
mov
loopne
ficomps
fimuls
ret
rclb
jge
xlat
jno
sbb
mov
push
idivb
or
mov
out
mov
mov
test
stos
push
xor
out
cmp
push
xor
addl
insb
rclb
ret
cwtl
push
ss
ds
jecxz
jno
adc
sbbb
dec
int
fisubs
and
sub
dec
sub
adc
cmpb
adc
sbb
adc
sbb
mov
repz
cs
loop
notl
dec
into
mov
push
popf
sbb
cmova
jl
clc
imul
flds
repz
jle
vunpcklps
sarl
mov
in
inc
xor
std
or
inc
in
mov
lock
mov
addr16
shlb
hlt
mov
mov
jl
aam
dec
popf
in
mov
lcall
dec
push
lods
inc
in
call
jl
push
jge
subb
xchg
je
push
sbb
jg
jbe
adc
nop
frstor
lahf
dec
mov
push
mov
jmp
in
xor
and
setge
lahf
popa
inc
dec
cmpsb
pop
jbe
pop
lret
cmp
push
add
shrb
aam
test
and
out
or
mov
pop
pop
or
and
xor
and
sub
jo
lock
jb
mov
mov
xor
add
jmp
test
lahf
ror
mov
out
mov
std
cld
xlat
std
sarl
daa
lods
lea
test
xchg
jl
sbb
adc
sbb
push
mov
dec
sbb
jecxz
sub
adc
mov
scas
js
mov
add
mov
pop
xchg
or
xor
arpl
or
xchg
push
mov
in
pop
pop
ljmp
mov
or
outsb
mull
loop
stc
pop
add
add
addr16
imull
jle
fcomps
mov
dec
push
fldcw
or
pop
roll
clc
stc
in
mov
pop
pop
pop
daa
jno
call
mov
scas
shll
sahf
jle
es
and
lcall
ds
dec
and
xchg
std
lods
icebp
sahf
or
loope
enter
hlt
xchg
xor
add
mov
xchg
mov
dec
loopne
jne
sub
lret
jp
xchg
jnp
pop
frstpm(287
xchg
push
inc
jns
sti
sbb
or
dec
stos
aad
enter
jb
add
push
xlat
push
mov
aaa
add
mov
and
shrb
mov
mov
sar
add
jns
imul
fcmove
dec
mov
and
in
jno
adc
pop
imul
jle
ror
add
insb
retw
outsl
xor
inc
call
insb
fwait
push
es
and
pop
imul
pushf
fadds
mov
jecxz
or
pop
lods
or
cmp
fs
mov
mov
jle
iret
jb
jp
stos
xorb
loop
inc
iret
ja
xor
add
pop
leave
jbe
int3
dec
dec
mov
sbb
adc
lods
cmp
pop
dec
in
sub
popa
mov
inc
mov
les
fwait
iret
pop
cmp
lret
ret
sti
cmp
pop
xor
pop
mov
add
cmc
cmp
les
xorb
mov
adc
add
out
into
xchg
lret
mov
jbe
xchg
repnz
in
mov
pop
mov
test
aas
inc
outsl
ret
jns
xadd
movsl
mov
loopne
jns
jae
inc
push
aam
stc
or
cmpsl
inc
lea
test
cli
add
or
sbb
jp
adc
lea
ror
cltd
and
cmp
inc
adc
cltd
mov
mov
es
pop
lahf
popa
out
dec
clc
mov
push
push
pusha
sub
jne
notb
sbb
es
dec
sub
daa
clc
popf
mov
jo
push
leave
mov
cmp
cmp
jb
mov
and
sub
aad
push
je
rorb
sbb
push
das
arpl
dec
imul
mov
cmc
mov
lods
mov
and
inc
sub
add
jmp
lods
or
sbb
pop
lcall
filds
adc
xor
jmp
push
push
mov
mov
fcoms
adc
mov
cmp
lds
cmp
adc
pop
mov
mov
loope
mov
jns,pt
add
movsb
scas
mov
and
outsb
ret
or
pop
pop
sbb
sbb
inc
dec
ljmp
pop
bound
stos
ds
fs
sbb
addr16
testb
dec
fildl
cmp
aam
fld
sub
stos
lret
ja
mov
and
popw
popa
sub
jno
cmp
loope
sbb
inc
lds
xor
ret
push
xor
imul
sti
out
mov
add
lods
jmp
jnp
pop
xchg
andl
scas
and
rcrl
inc
aaa
pop
scas
imul
add
mov
fimuls
push
sbb
lret
dec
dec
and
pop
fstl
repz
mov
lret
movsb
push
inc
pop
mul
stos
jp
mov
xchg
ds
test
adc
in
test
nop
pop
jne
aaa
ljmp
mov
insl
add
jb
out
xchg
push
dec
mov
dec
mov
or
stc
je
repz
mov
pause
push
mov
sub
mov
daa
fnstsw
outsl
jbe
cmp
mov
int3
pop
fisttpll
popf
add
sub
push
popa
in
in
into
aas
push
ret
push
add
hlt
out
jge
scas
xor
jno
cmpsl
inc
sub
in
ja
out
test
mov
bound
in
push
inc
les
mov
scas
test
adc
out
sbb
daa
xor
jbe
or
aas
inc
mov
pop
xor
pop
jb
push
xchg
sbb
mov
ljmp
inc
sub
xor
mov
cli
jmp
dec
in
mov
sub
out
vsubpd
mov
add
jecxz
jns
sub
sbbb
lods
enter
mov
lods
cmc
adc
imul
repz
lahf
sbb
jmp
bound
lahf
xchg
repnz
sub
jge
and
sbb
into
movsl
lea
sar
xchg
push
enter
pop
cmc
loope
cmp
xor
pop
les
fwait
mov
xor
not
das
jbe
subl
mov
aam
icebp
dec
fs
ds
movsl
push
cmpsl
inc
or
int
out
jnp
ret
shld
mov
add
sahf
dec
cmp
test
jnp
test
insl
lock
push
sahf
dec
xor
lea
cmp
dec
adc
in
jg
jle
adc
mov
sub
adc
fiaddl
or
mov
adc
cli
xchg
pop
xchg
push
add
mov
jge
imul
std
les
imul
fadds
in
sub
cltd
inc
mov
sub
insb
rcl
outsl
ljmp
dec
iret
jg
xchg
popa
push
xchg
clc
je
inc
mov
inc
mov
or
add
xor
mov
sbb
cmp
aas
mov
push
movsl
cltd
paddusb
pop
lcall
sbb
int
test
add
into
jb
insl
or
mov
xchg
lods
push
pop
test
js
stos
or
pop
lods
test
mov
imul
add
cs
dec
outsl
dec
xchg
sub
jo
inc
mov
mov
icebp
insl
sbb
ficoml
mov
adc
loope
fbstp
into
inc
mov
add
adc
and
hlt
mov
leave
dec
inc
mov
cmp
enter
outsl
mov
pop
xor
dec
pop
xor
pushf
frstor
sub
mov
out
stc
fimuls
xor
pop
sub
dec
movsb
scas
sub
mov
jne
push
cmp
cmp
jge
xlat
adc
dec
xor
adc
pop
sbb
call
adcb
imul
cmp
popf
fidivrs
insb
out
movsb
sbb
or
inc
jb
sbb
or
xchg
adc
aam
lret
lret
inc
daa
pop
popa
pushf
sub
mov
shll
pop
inc
fwait
sub
pop
cmpsb
dec
bound
into
jg
cmp
out
ror
push
out
xorl
movsl
out
xchg
test
jo
rcll
lahf
mov
adc
push
orb
inc
test
stc
and
mov
scas
pushf
mov
lods
dec
sahf
sub
inc
adc
mov
rep
or
cmc
xor
jge
jnp
in
mov
out
ja
sub
jne
pop
jmp
dec
xchg
ret
out
pop
dec
scas
icebp
mov
in
lret
add
call
mov
mov
and
jno
pop
xchg
xorb
or
mov
ficomps
aad
cmpsb
mov
ljmp
and
je
pop
adc
cwtl
insl
bound
pop
and
sub
dec
sub
mov
lcall
test
dec
fmull
cmp
into
mov
popf
push
fnsave
adc
jns
adc
mov
jle
gs
cmpsb
inc
lcall
shlb
pop
pop
mov
aam
das
mov
adc
dec
sub
rcrl
aaa
insl
pop
ror
pop
repz
pcmpeqd
xor
or
cmp
gs
pushf
or
pop
mov
loope
and
sub
xor
push
and
lahf
inc
mov
or
xor
or
and
dec
xor
push
jp
cs
sti
das
cltd
and
ret
xor
sti
scas
shrb
popf
inc
les
sub
popa
or
push
push
int
pop
jb
adc
leave
lret
loope
and
rclb
push
push
sarb
cmp
mov
sub
ss
mov
hlt
mov
popf
and
mov
test
sbb
push
scas
xchg
ret
cltd
bound
sbb
sub
outsl
dec
imull
mov
mov
pop
int
push
pop
push
test
dec
mov
cmp
repnz
mov
iret
xor
mov
enter
and
mov
mov
push
aam
lock
incl
pop
dec
lea
pop
xor
fxch
and
pop
cld
int
movl
dec
push
pop
pop
or
jg
in
cmp
jge
inc
sarb
test
je
jg
mov
sti
cmp
or
push
and
xchg
jecxz
pop
int
cmc
ret
push
fs
dec
xchg
je
push
int
adc
mov
add
pusha
rorl
rorb
pop
sbbl
cmpsb
in
adcl
xor
push
inc
insl
popf
mov
mov
mov
xor
mov
push
mov
dec
xchg
sbb
dec
dec
ficoml
pop
lock
shl
dec
or
loop,pn
mov
movsl
cmp
inc
ja
dec
inc
int3
sub
pop
int
or
aad
cmpsb
stos
add
sub
jne
or
jbe
in
bound
test
jne
pop
pop
cld
mov
out
xchg
dec
popa
test
aam
in
rorl
xlat
ret
or
ss
sarl
jb
mov
or
push
jno
in
sbb
call
jg
movsb
hlt
mov
loope
mov
or
jge
mov
stos
mov
pusha
pop
jbe
scas
ds
pop
stos
sbb
mov
mov
and
jl
iret
test
outsl
subl
insb
repz
jge
xlat
jle
add
mov
jmp
fnsave
das
or
ss
loopne
and
jle
xchg
test
adc
das
lods
repz
bnd
lods
pop
frstor
fsub
lcall
scas
mov
addr16
js
xor
adc
or
fdiv
mov
xchg
mov
add
popf
and
stos
push
or
stos
pop
xchg
stos
jmp
inc
xor
sbb
mov
roll
aad
outsl
push
or
mov
negb
mov
sahf
imul
adc
loopne
jmp
lock
pushf
fsubrp
inc
and
fiadds
shrb
and
lods
xlat
cmpsb
lret
jae
xchg
cmp
loop
sub
mov
cld
fwait
scas
outsl
cmp
or
add
outsb
fcomi
push
dec
and
lcall
adc
inc
xor
push
roll
out
mov
or
jno
mov
mov
cwtl
pop
push
push
mov
test
xchg
mov
leave
fwait
jmp
or
mov
cmp
mov
adc
xchg
xchg
mov
fs
test
jno
lods
jbe
sub
call
mov
adcb
imul
add
xchg
lods
iret
xor
test
jmp
jae
or
adc
and
fcompl
xchg
test
adc
stos
jecxz
pushw
push
mov
mov
pop
add
adc
stos
test
push
xchg
mov
imul
icebp
pop
ljmp
mov
out
fimuls
fdivrl
lahf
jb
cmpsl
and
sbb
pop
inc
sbb
mov
test
lret
pop
push
nop
mov
je
add
mov
test
lret
out
add
mov
add
xor
xchg
inc
dec
ss
fsub
xor
mov
mov
mov
mov
rcrl
mov
add
sub
aam
fidivrs
add
mov
rcrl
je
push
sub
ss
addb
rcll
push
outsl
or
xchg
inc
rcll
movsl
ret
int
xchg
mov
inc
adc
sbbb
dec
in
ret
xor
inc
inc
jge
xor
aas
lea
sahf
sub
addl
leave
addr16
ss
xor
incl
int
in
cmc
or
loope
xchg
aas
arpl
adc
ret
aam
push
dec
mov
insb
and
std
mov
das
dec
xchg
ror
cmp
push
clc
mov
mov
sti
jno
mov
imul
insb
ljmp
notb
mov
loopne
jb
and
aad
cmpsb
mov
lcall
cli
or
push
push
mov
pop
mov
rcrb
stos
scas
pop
clc
cmp
in
jmp
add
pavgw
daa
adc
jae
js
repz
and
nop
mov
and
loop
arpl
xor
sbb
std
add
jle
jg
aaa
xor
es
clc
mov
fwait
or
mov
daa
push
jl
loope
fstpl
mov
sbb
or
or
inc
std
in
lods
pushf
iret
mov
jne
int3
xlat
testb
insb
adc
xchg
push
push
push
lret
or
mov
mov
xorb
mov
imulb
repnz
sbb
fsubl
jg
nop
mov
mov
pop
dec
mov
shll
sbb
test
inc
pop
dec
cmp
or
sub
sub
stos
jb
and
mov
lcall
jno
pushf
jns
mov
mov
or
push
shlb
push
pop
repz
lods
or
roll
loop
push
cli
xchg
sub
and
push
jp
and
add
in
mov
push
inc
lahf
and
xlat
testb
pop
aaa
scas
pop
cmc
mov
push
iret
lret
dec
xchg
stos
mov
and
mov
dec
cmp
adc
jnp
add
sarb
push
je
sbb
xchg
loop
aas
popa
dec
and
xor
xchg
mov
lcall
sub
lahf
test
bound
js
sbb
jnp
divb
and
loopne
pavgw
and
pusha
mov
jbe
push
mov
mov
jbe
or
mov
sub
and
sbb
adc
adc
fistpll
ja
xor
pop
inc
imul
cmpsl
loope
pop
in
shll
cwtl
test
sbb
pushl
rorl
pop
mov
xor
sub
jo
and
test
xor
push
ds
sbb
mov
cmp
mov
outsl
popf
inc
add
fwait
cmp
pop
test
imul
sub
and
push
add
loop
call
sbb
dec
xor
fisttpl
aad
sub
scas
mov
roll
jge
inc
out
adc
push
pop
mov
and
or
sbb
jmp
fnstenv
cmpb
popf
cmpsl
jnp
jl
ret
cmpsb
popf
push
scas
dec
dec
movsl
mov
popf
ss
jbe
adc
les
pop
mov
mov
fnstsw
push
xor
sbb
inc
fstl
sub
ret
push
mov
out
inc
adc
ds
inc
leave
jl
push
xor
jno
sti
shl
cmp
fiadds
xor
mov
sti
aad
popa
scas
mov
and
dec
xor
loopne
repz
imul
lods
sub
adc
fnsave
mov
subb
out
add
lahf
fidivrl
loopne
hlt
xchg
sub
fisubrs
pop
mov
jae
add
mov
push
dec
push
ja
sub
inc
cld
mov
xor
addr16
push
cmp
dec
out
inc
add
retw
push
test
add
add
js
cmp
shl
sbb
pusha
std
and
jae
fdivrs
sub
in
pop
or
sub
inc
mov
shrb
add
fistps
or
add
sub
xor
xor
jecxz
xchg
xor
into
ljmp
jnp
cmp
sbbb
ds
sbb
dec
in
js
inc
mov
rcll
cmpsb
rcll
pop
sub
mov
ret
les
push
les
jmp
inc
fisubl
or
jecxz
or
cmp
outsb
mov
popf
adc
mov
sub
jnp
nop
or
xor
out
xchg
sbb
cld
or
lods
pop
lods
mov
push
test
imul
lods
cltd
push
mull
mov
mov
inc
lret
clc
dec
outsb
jo
fs
sar
jl
adc
arpl
pushf
mov
xchg
bound
mov
or
cmp
pop
and
pop
adc
jbe
loope
jnp
dec
in
pop
pop
jp
inc
or
ljmp
jle
hlt
jmp
jmp
icebp
pop
jg
repnz
je
stos
jne
mov
clc
pop
xchg
iret
inc
push
inc
cmpsl
gs
jae
leave
push
mov
inc
clc
popa
adc
sar
ljmp
and
loop
adc
cs
and
gs
fldcw
repnz
sbb
cmp
shrb
pop
sbb
mov
add
mov
aaa
es
cmc
int3
and
cmp
loop
stc
mov
mov
rcrl
jl
arpl
push
push
cmp
mov
out
xchg
sub
aad
clc
lret
dec
addr16
lock
fnstsw
xor
push
fst
cmp
xchg
imul
iret
xchg
iret
data16
lahf
pop
sahf
or
mov
or
mov
xchg
sbb
pushf
in
sbb
adc
pop
sub
ja
or
jmp
shl
add
xor
add
sbb
lock
or
jle
dec
ljmp
int3
movsb
xchg
out
add
sbb
cmp
mov
cmp
loope
cmc
push
jge
cld
cmpsb
and
out
aam
dec
jl
test
hlt
sub
aam
cmpsb
jnp
xchg
cmp
and
xor
xor
cmp
shll
jb
push
mov
jge
jmp
and
add
jg
daa
repnz
sarl
jmp
data16
insl
out
or
push
pop
pop
push
dec
jle
xorb
jmp
push
push
out
lock
inc
and
push
fadd
mov
sahf
pop
fldenv
inc
jle
inc
cmp
mov
ficomps
aad
dec
mov
movb
outsb
sbb
xchg
cld
lret
out
or
cmp
loope
sbb
les
mov
nop
scas
mov
push
int3
or
xor
push
xor
mov
mov
shl
adc
cmp
jnp,pn
jge
mov
loop
add
cmpsb
mov
mov
das
jae
xor
icebp
xchg
fiaddl
or
cs
imul
xor
pop
test
or
xor
pop
sarb
xor
adc
cmp
mov
mov
js
ss
loop
jmp
ds
xor
add
daa
inc
mov
and
in
jmp
scas
ss
xorl
dec
inc
je
aas
ret
imull
mov
push
jle
stc
adc
mov
into
push
sarl
or
ljmp
lret
mov
jp
dec
sbb
push
mov
out
xchg
adc
aam
mulb
mov
lcall
push
mov
out
ror
aas
jecxz
in
test
cmp
push
fnstcw
adc
mov
mov
js
jmp
cld
pop
sbb
mov
xlat
sub
add
or
lods
sub
dec
nop
fcmovu
outsb
and
jnp
push
pop
pop
cmovge
pusha
jns
mov
shr
dec
xchg
mov
push
inc
adc
pop
cld
popf
cmpsl
test
gs
jo
ret
pop
and
rcrl
dec
test
scas
lahf
in
nop
jecxz
mov
lods
call
cmc
sub
hlt
sub
sub
jl
or
jo
pop
test
adcb
cli
fstpt
jmp
movsb
popf
push
pop
jae
lock
cs
dec
aam
jns
push
stc
gs
ss
in
adc
cmc
out
out
out
shl
and
fwait
or
mov
inc
pop
mov
or
pop
xchg
das
iret
add
lret
jle
or
shrb
sahf
sub
mov
in
push
stc
clc
push
xlat
push
or
insw
sbb
push
repnz
jl
pop
push
jle
pop
mov
dec
dec
xchg
adc
cmp
push
and
lcall
mov
mov
mov
jp
push
test
mov
xor
xchg
data16
shll
outsb
sub
lods
inc
stos
or
es
cwtl
hlt
pop
arpl
mov
cmp
xchg
in
push
dec
stc
clc
jmp
inc
adc
sbb
inc
and
shrl
je
mov
stos
mov
scas
mov
xchg
cmp
pop
or
rorb
stos
dec
cmp
pop
pushl
jne
aad
aaa
xchg
jns
cld
movsb
clc
xchg
mov
rcrb
dec
mov
sub
lods
mov
push
test
or
mov
testb
in
xchg
out
arpl
shl
fistpl
or
ja
mov
je
das
inc
dec
push
lods
es
repnz
and
repnz
fnsave
mov
lret
cmp
xchg
incl
pop
mov
popf
aaa
sbb
push
fisubrl
xor
xchg
add
popa
cs
jge
pop
and
pushf
jge
mov
jle
fs
push
shlb
xchg
jle
pusha
cld
jbe
scas
int3
pop
pop
mov
inc
and
das
loopne
clc
sub
xor
nop
pusha
xchg
and
mov
pop
and
das
lods
sbb
dec
shrl
push
iret
and
jge
inc
js
insb
in
fwait
pop
add
and
jbe
inc
pop
push
into
adc
rolb
shlb
jno
xor
ficoml
push
xor
or
pop
lret
cmp
mov
int
or
std
ljmp
push
loope
lret
outsb
mov
cmp
notl
xchg
movsl
sbb
mov
dec
adcl
push
rorl
xchg
xchg
jno
dec
aas
mov
test
pushf
nop
mov
out
aad
inc
pop
xor
pop
push
test
push
sbb
enter
ret
mov
inc
stc
xchg
adc
pop
dec
fwait
es
add
rclb
insl
insb
push
test
mov
cmp
in
js
das
shlb
inc
out
jge
mov
mov
in
mov
push
mov
xor
push
imul
jge
sub
negb
inc
cmp
faddl
jbe
leave
imul
pop
jmp
xorl
cmpl
pop
push
je
adc
and
lret
mov
mov
jge
jae
or
aam
or
pop
mov
xchg
xchg
std
add
out
lret
arpl
pop
lea
and
inc
stc
mul
subb
fstpl
push
enter
push
push
enter
mov
lods
aas
mov
ja
into
fdivrl
cmp
outsl
out
mov
outsb
adc
das
popa
imul
mov
repz
mov
outsl
out
jne
lret
adc
or
mov
xchg
push
cmp
lods
adc
fnstcw
js
dec
jns
lds
push
cltd
aaa
xor
mov
adc
and
mov
or
push
das
or
in
push
jbe
repz
mov
add
outsl
daa
or
rcrb
push
jnp
mov
psubusb
les
mov
cltd
xchg
lahf
mov
jae
outsb
xchg
jge
dec
enter
les
test
sahf
iret
adc
cltd
cmpb
mov
andl
outsb
clc
sti
sub
jnp
mov
add
inc
inc
imul
cltd
mov
push
pop
mov
cmp
add
jns
sbb
xor
pop
cli
lods
testl
ds
dec
inc
sahf
inc
push
outsl
adc
or
xchg
aaa
fstps
icebp
push
loopne
push
cmpsl
popa
daa
mov
shrb
ror
pushf
imul
imulb
insb
jne
cmp
jno
dec
stos
cmp
out
rcrl
jg
adc
lods
pop
stos
cmp
lods
fsubrl
pop
push
andb
push
adc
cmpsb
ds
pop
pop
xor
scas
arpl
adc
xorl
push
add
repz
sti
push
mov
fistpl
mov
mov
in
lock
mov
jae
fistpl
iret
out
imul
push
xchg
sbb
sub
sbb
lds
xorb
sub
rcr
mov
cmp
inc
add
push
mov
sbb
fbld
sbbb
or
std
pushf
push
movsl
xor
add
insl
sbb
add
mov
in
sbb
int3
or
push
jmp
xor
pop
mov
jo
pushf
pop
pop
sub
adc
mov
dec
dec
loop
mov
jl
sbb
mov
inc
xchg
stos
out
xor
add
rorb
sub
mov
jb
mov
pusha
inc
add
push
sbb
popf
xor
mov
bt
jb
mov
mov
push
lds
into
mov
mov
jbe
sub
dec
adc
ja
sahf
push
aas
pop
ret
sbb
ja
mov
dec
jbe
fdiv
sbb
rcl
je
pop
xlat
add
push
fs
push
roll
outsl
sub
outsb
loopne
push
cltd
inc
push
sub
push
fadds
rcrb
fidivrs
inc
jo
js
gs
pop
lea
or
stos
sub
repnz
xor
mov
aas
icebp
mov
jno
sub
and
rcr
pop
sub
aas
xor
push
cmp
shll
clc
mov
lahf
iret
jb
and
jne
or
pop
push
cmpsb
dec
xchg
sahf
subl
pop
filds
imul
adc
jae
xchg
sub
cltd
fsubrs
test
pshufw
leave
es
jmp
xchg
aam
mov
scas
ss
mov
jl
stos
addb
int3
sub
mov
icebp
cmc
add
out
inc
aas
xchg
data16
dec
inc
in
inc
pusha
iret
dec
addl
test
mov
aad
sub
jnp
je
pop
fs
movsb
xchg
orb
fsubl
popf
xchg
xchg
inc
dec
or
subl
xchg
push
cmc
repz
fcomi
mov
inc
cmpsb
or
repz
ds
cmpsl
pop
inc
push
lcall
iret
mov
xor
shlb
into
imul
xor
in
loop
or
clc
scas
xor
in
xchg
push
cmpb
push
mov
sub
lds
iret
jle
pop
push
loopne
dec
dec
dec
jp
push
lds
push
rorb
sbb
xor
pop
mov
cli
movsb
jmp
call
shlb
stc
xchg
mov
mov
sbb
adc
cmc
jmp
adc
jl
jl
fs
add
jp
jnp
pop
pop
mov
inc
mov
xor
mov
sahf
jge
insl
js
or
mov
push
js
movsl
push
pop
daa
mov
rorl
push
xor
push
xor
xchg
push
mov
fstpt
cmp
loope
jnp
ja
lahf
scas
mov
loopne
push
mov
jge
outsb
outsb
fstpl
xor
push
fstpt
jne
pushl
icebp
inc
lahf
lret
aas
cmpsl
int
inc
sbb
cwtl
loope
dec
mov
aad
out
daa
xchg
jae
push
data16
popf
lea
dec
xor
es
xchg
popf
fistl
mov
mov
test
pop
out
add
pop
mov
sti
jmp
xchg
data16
out
fnstcw
xor
test
dec
imul
push
scas
jo
clc
mov
js
jmp
mov
mov
imul
out
mov
inc
sbb
mov
aam
cmpsb
xchg
lods
xchg
lea
sahf
hlt
scas
cmp
stc
adc
in
jno
and
mov
scas
inc
mov
imul
xor
sub
or
dec
inc
and
int3
adc
mov
shll
ret
mov
xor
jns
mov
xchg
cmp
popa
ficoms
icebp
mov
xor
fisttps
fistpl
pop
cmp
lock
mov
xor
ret
adcl
mov
push
adc
xor
out
push
repnz
push
jmp
stc
jmp
lods
dec
pminub
mov
or
lret
pop
sub
cmp
cmp
cltd
ss
stos
lret
add
ret
cmp
pop
pop
fnsave
pop
sbb
lea
mov
inc
fwait
repz
cmp
sbb
out
aas
in
inc
imul
pop
test
sbb
inc
push
jge
popa
js
pop
sbb
mov
xchg
cmpsb
jnp
test
adc
mov
arpl
cld
insl
inc
mov
sbb
xchg
mov
pop
sub
jae
and
jl
mov
pop
outsl
or
pop
imul
mov
push
and
xor
sbb
cwtl
mov
subb
enter
push
adc
sarb
mov
out
cld
and
push
in
cwtl
adcb
gs
cli
adc
je
push
data16
rcrl
xor
sar
jg
pop
dec
lahf
outsb
cmpsl
cltd
int3
xor
mov
cmpsl
ss
xchg
adc
push
aam
addr16
nop
jno
inc
jmp
scas
aaa
mov
sub
ror
lcall
dec
inc
jno
test
repnz
repz
push
push
jmp
gs
pop
or
sti
push
push
ret
out
incl
loope
int
push
xchg
aaa
jge
cmp
inc
ss
sbb
adc
pop
pop
movups
pop
loope
inc
aas
test
outsb
push
dec
ret
mov
and
jecxz
mov
xchg
jecxz
das
in
inc
pop
xor
int
fimull
clc
shr
cmp
jl
add
psubsw
inc
pop
xor
test
mov
push
mov
ds
jmp
cmp
dec
fadds
ret
inc
dec
jae
cld
jne
std
adc
push
lahf
pop
pop
fwait
pop
sbb
stc
loop
loop
aad
sahf
mov
lahf
ljmp
nop
dec
dec
clc
aas
lods
and
sbb
mov
jp
sub
jo
push
push
mov
xorl
repz
cmp
notb
fldln2
shl
test
lods
adc
rcrb
adc
iret
imul
push
jo
or
mov
jmp
dec
mov
hlt
ss
push
push
mov
cmp
sub
or
jl
dec
or
ja
mov
or
xchg
sbb
mov
fimuls
shll
push
lea
mov
adc
adc
sbb
fsts
jg
dec
rcl
and
cmp
push
mov
adc
jl
int
pop
into
or
mov
cwtl
sbb
aad
xchg
inc
push
scas
jne
cwtl
ret
jl
clc
lods
push
mov
push
fildll
cs
inc
inc
call
leave
adc
and
jno
out
xchg
ret
bound
mov
mov
test
mov
mov
sbb
aam
daa
cli
outsb
adcl
roll
lcall
sub
mov
and
frstor
mov
mov
jl
cmp
jg
into
js
cmp
mov
ljmp
das
leave
mov
ds
jno
call
ds
adc
xchg
sub
repz
hlt
or
lcall
nop
push
add
je
shll
lret
push
sub
lods
jns
cltd
or
rcrb
add
sub
in
test
aaa
xchg
test
sbbb
mov
sbb
popa
or
sbb
pop
int3
mov
mov
xor
push
arpl
jb
sbb
ljmp
mov
or
sbb
cwtl
leave
inc
sub
ret
dec
fisubl
clc
mov
notl
mov
fldl
pop
pop
mov
dec
xchg
sti
pop
cmpsl
cmpsb
fsub
jmp
stc
repz
and
es
es
mov
loop
out
xor
and
das
mov
mov
jns
push
jbe
mov
jb
shrb
cltd
dec
pop
xchg
mov
xor
std
mov
push
iret
cmp
ljmp
adc
hlt
xchg
adc
in
fcmovne
jae
dec
jle
dec
push
out
decb
cmp
jns
mov
jmp
or
out
add
aas
aam
xchg
jl
repnz
add
xchg
pop
cmc
jbe
jmp
lods
subb
int
lock
jmp
aas
push
mov
insl
push
adc
lods
sbb
xorl
cmp
das
jo
jmp
mov
orl
mov
cmp
ret
dec
je
cmp
inc
xchg
pop
sub
pop
dec
inc
test
adc
inc
jb
mov
ljmp
inc
and
loope
xor
ja
in
imul
sbb
call
pop
cmpsl
mov
jge
pop
pop
enter
fs
flds
mov
mov
inc
push
jmp
mov
test
adc
sarb
inc
xor
loopne
pusha
roll
lret
xchg
test
jns
incb
nop
push
jmp
scas
inc
dec
pop
pop
lea
push
adc
movsl
js
jl
fcmovnbe
rcr
push
dec
pop
jecxz
ret
ss
sarb
or
cmpsb
lcall
cld
int3
nop
scas
subb
das
sbb
xchg
pop
push
pop
jge
popa
les
repz
cmc
rorb
jle
mov
sarb
ja
pop
leave
inc
push
sub
fisubrs
aam
inc
repnz
mulb
xchg
pusha
adc
and
imul
test
mov
add
xchg
sbb
lods
stos
scas
push
aam
mov
push
scas
sub
popa
sar
scas
js
cmp
ds
push
jecxz
data16
fisubrs
stc
push
shlb
lds
outsl
shrb
lock
jno
jmp
sarb
sub
sub
inc
ret
xchg
std
and
outsb
inc
jbe
push
enter
hlt
icebp
icebp
mov
xor
or
jno
push
or
incb
sbb
sub
jns
or
mov
enter
inc
push
dec
pusha
popa
xchg
xor
cmp
xor
add
cmp
jno
js
clc
sbb
mov
xor
clc
xlat
popf
faddl
jb
pop
scas
mov
pop
divb
or
add
movl
sub
ficoms
in
das
xor
iret
fistl
sub
mov
jle
mov
jo
enter
popf
push
push
push
sbb
fnstenv
sbb
push
xor
add
pop
fbld
push
out
les
ja
dec
add
stos
jp
fdivrs
std
fwait
aaa
rorl
ffreep
in
push
imul
mov
insb
cmp
dec
dec
mov
xor
or
aad
fimuls
test
sub
inc
and
mov
movsb
sbb
mov
push
hlt
popf
xor
imul
loope
xlat
lcall
push
mov
and
add
sbb
jns
outsb
jns
addl
and
xchg
dec
aaa
mov
bound
lahf
sub
jg
fdivs
and
mov
xor
popw
xchg
push
xchg
jle
js
das
xchg
or
mov
cmpsb
xor
xor
les
repnz
movsb
xchg
jns
xor
cld
fcmovu
and
ficoml
rcrb
sbb
and
pop
pop
jecxz
call
mov
sbb
divb
xchg
dec
cmp
imul
jle
xchg
or
rorb
mov
jmp
stos
gs
xor
add
pop
jp
fsubl
inc
and
loope
bound
int
adc
clc
movb
je
arpl
adc
and
dec
inc
cli
in
mov
shll
nop
sub
paddd
lea
icebp
movsb
sub
sbb
jl
jbe
mov
das
and
std
arpl
iret
test
dec
popa
sbb
lds
stos
xchg
push
ljmp
ret
pop
jg
mov
ljmp
outsb
mov
mov
mov
lock
sar
and
xor
in
aam
pushf
aad
mov
push
loope
sub
test
mov
xchg
mov
mov
test
stos
addr16
adcb
push
cwtl
cmp
adc
adc
in
or
inc
cmp
pop
setns
pop
sub
pop
dec
ss
popf
fstpt
sub
mov
mov
in
sub
mov
imul
outsl
es
mov
sbb
or
dec
popf
test
in
jp
pop
enter
or
push
mov
nop
negl
mov
jne
cmp
bound
xor
xchg
xchg
sbbb
adc
out
cmp
mov
push
aaa
push
cld
out
cmc
mov
push
or
imul
les
sbb
cmpsl
mov
es
scas
daa
pop
mov
dec
jp
sbb
fstps
pop
jl
sub
pop
jb
mov
add
or
or
or
jge
daa
xor
adc
enter
iret
movsb
inc
push
lret
loop
xchg
cli
xchg
add
sub
cld
fwait
jg
or
inc
fistps
inc
sub
daa
cmp
fwait
or
in
cs
mov
mov
repz
loope
mov
xor
lock
cmpsb
pusha
data16
mov
adc
sti
test
lea
sub
pop
sbb
jmp
cmp
and
xchg
jne
xlat
inc
mov
xor
xor
xchg
aam
pusha
lods
mov
inc
test
call
adc
jge
mov
cmp
clc
cltd
sbb
xor
ds
loope
sti
lods
mov
lret
pop
xchg
lods
in
ret
xchg
push
push
pop
loope
xor
lret
lea
xor
lcall
jmp
addr16
xor
stc
mov
fstl
bound
pop
out
sbb
and
imul
mov
mov
fadds
fdivl
sbb
inc
mov
xchg
out
popf
add
pop
fstps
sub
sbb
sub
adc
jb
or
ja
fsubrl
jne
xlat
sbb
inc
mov
add
inc
nop
loopne
pop
or
dec
repnz
adc
adc
cmc
andb
dec
push
adc
mov
testl
fstpl
outsl
xchg
cmp
or
loop
aas
xor
cmc
jbe,pn
jo
stos
into
mov
ja
bound
movsb
arpl
jb
or
pop
mov
and
inc
imul
mov
incl
mov
ljmp
popf
pusha
fwait
in
inc
pop
xchg
add
fcoml
jle
push
clc
inc
pusha
sahf
inc
inc
rol
imul
push
jns
fidivl
test
in
out
outsb
fwait
pop
jmp
cmp
mov
pop
daa
repnz
xlat
insl
in
push
adc
dec
cmp
sub
dec
aad
gs
jno
and
repnz
cmc
mov
mov
or
mov
jae
inc
cmp
mov
jbe
enter
ljmp
xlat
in
insl
jno
pop
ficomps
xchg
ds
stos
push
movsl
jmp
int3
movsb
repnz
pop
loop
nop
cli
in
and
inc
push
fcoms
hlt
jge
push
push
lret
push
popf
xchg
bound
popa
push
push
fiaddl
mov
shlb
mov
cmpl
pusha
push
or
mov
xchg
lahf
jbe
jbe
jmp
fcomip
loop
sbbl
roll
js
push
mov
push
xlat
add
std
lahf
jp
hlt
dec
popa
mov
in
fimull
and
cmp
imul
cwtl
test
clc
inc
jo
adc
ljmp
outsl
mov
xor
dec
cmp
sbb
leave
or
or
roll
cmp
rcrb
pop
daa
lds
sarl
inc
in
mov
sbbb
sbb
imul
or
or
mov
xor
ja
cwtl
push
movsb
cwtl
adc
int
aad
jo
insb
pusha
xchg
adcl
push
push
add
xorb
and
idivb
dec
int
inc
std
jno
xchg
mov
add
cs
test
sub
cmp
ss
sbb
add
mov
sahf
jmp
jle
outsb
loope
jl
add
outsl
xchg
adc
outsl
test
pop
scas
gs
xor
jmp
mov
inc
pop
push
std
iret
mov
jb
lock
add
sub
sub
sbb
daa
xchg
xchg
dec
into
xor
cmpsb
stc
lods
loope
jp
scas
cs
sbb
cmp
clc
sbb
mov
mov
inc
insb
out
xor
cmp
js
push
mov
or
sahf
dec
std
jbe
xor
test
mov
and
cmpsb
inc
xlat
mov
xor
inc
aad
ds
mov
or
and
sbb
pop
daa
pop
jecxz
subl
cmp
xor
hlt
movsb
out
idiv
lea
cli
mov
loopne
push
add
xor
cmpsl
cmp
pop
and
add
xor
cmpsb
outsl
sahf
jmp
pop
mov
fidivrl
ljmp
adcb
adc
out
mov
cmp
dec
add
sahf
inc
xchg
into
in
mov
repnz
dec
test
sbb
or
xchg
or
mov
rolb
lea
sbb
fucom
loope
or
ret
roll
inc
lret
cwtl
jmp
pop
js
xchg
movsl
int
sub
jle
and
cmp
push
fiadds
mov
xlat
mov
push
adc
daa
into
cmp
test
push
rcl
test
pushf
es
hlt
cltd
xor
add
test
pop
in
lret
mov
or
lea
mov
popa
xchg
jae
stos
or
push
jns
add
outsb
daa
movsl
jno
adc
xor
xor
rolb
fadds
arpl
xor
add
test
pushf
sbb
pop
sahf
mov
xlat
and
aad
add
fcmovu
xor
je
or
cli
pushf
inc
iret
dec
mov
cmp
xchg
in
push
loopne
sbb
inc
es
rorl
insb
inc
std
pop
out
cmpsl
enter
cmp
jnp
add
xchg
in
test
xchg
adc
cld
xchg
imul
mov
into
jb
dec
and
repz
test
adc
stc
mov
cmp
xor
fdivrl
inc
and
inc
jnp
sub
sti
ljmp
sahf
ds
int
out
inc
xor
push
mov
in
aas
mov
stos
pop
aad
sub
push
popa
sub
xorl
xchg
mov
in
ret
mov
in
outsb
cmp
cmc
fcmovne
repnz
ljmp
or
mov
dec
sbb
xchg
iret
test
jg
outsb
cmpsl
cmp
xchg
scas
cmc
leave
mov
adc
xor
sbb
pushf
cli
popf
jns
jle
shll
andb
pop
sub
jle
ret
pop
addr16
in
mov
leave
nop
mov
jl
sub
aad
and
repnz
sahf
adc
dec
out
subb
push
lock
iret
mov
sbb
mov
cmp
repz
push
mov
or
mov
js
inc
and
mov
dec
rclb
fmull
mov
arpl
nopl
rclb
and
dec
in
mov
xchg
sbb
std
or
push
sbb
or
hlt
bound
mov
mov
mov
adc
ror
sub
inc
sub
and
je
mov
arpl
mov
adc
clc
das
mov
test
add
lods
push
and
xchg
jno
test
sub
jmp
jbe
dec
es
and
dec
test
std
out
dec
aam
dec
mov
icebp
dec
cmc
ds
scas
lcall
rcrb
loop
cmp
loopew
decl
xchg
sbb
iret
push
lea
xchg
enter
xchg
lods
das
dec
mov
sbb
nop
out
pop
push
pop
mov
push
icebp
push
xlat
dec
aaa
icebp
adc
stc
or
dec
dec
insl
ss
push
push
dec
icebp
xchg
inc
or
cmp
sub
rcl
adc
hlt
fsubs
int3
xchg
lahf
outsl
xor
ss
inc
adcl
shlb
mov
jb
roll
insb
mov
inc
shrl
out
mov
or
mov
adc
inc
ljmp
push
xchg
jle
sarl
pop
add
cmc
mull
ss
and
in
or
push
idivb
repnz
repnz
mov
xor
pop
and
out
add
daa
ja
int
sarl
adc
in
push
int
int
rorb
add
pop
iret
cmp
cmp
hlt
jmp
push
xchg
or
fwait
or
lret
pop
xor
scas
in
imul
das
jmp
jl
xchg
mov
jle
enter
es
bound
cmp
stos
in
mov
or
jge
test
cmp
out
and
mov
pop
xchg
insb
add
mov
jns
push
popa
push
pusha
jo
dec
mov
bound
xchg
in
sbb
lds
mov
push
sti
pop
std
sahf
lods
mov
je
ror
xor
xchg
cmp
fs
outsb
std
aas
pop
mov
loope
es
sarl
or
jae
pusha
std
jmp
fdivs
push
inc
out
jge
xchg
aas
and
int3
imul
or
rsm
pop
adc
sti
dec
sbb
or
and
pop
hlt
filds
and
cmc
add
lahf
pusha
mov
push
test
push
in
imull
pop
sbb
in
add
mov
js
in
call
stos
mov
and
push
mov
add
lods
xor
addr16
mov
fadd
cwtl
fdivr
mov
pop
loope
push
pop
cmp
fwait
sbb
aas
cld
adc
cwtl
and
pop
inc
push
bound
cwtl
stos
push
cmpl
ret
fldenv
sbb
pop
ja
dec
add
jmp
popa
int
sub
sbb
fcoms
pop
add
fwait
rolb
nop
mov
jle
in
pop
test
jae
and
mov
int3
cld
inc
icebp
mov
lcall
cmpsl
je
arpl
pusha
vmread
stc
lcall
dec
aam
add
pop
mov
add
es
lds
das
hlt
shlb
pusha
sub
mov
es
push
shll
out
lcall
les
push
ror
loope
loop
out
aas
int
xchg
mov
nop
jp
or
sub
loopne
cmpsb
inc
shrl
pop
mov
dec
inc
or
sub
or
inc
adc
rol
jnp
daa
lret
push
leave
jne
push
jge
push
and
arpl
cltd
push
xchg
mov
pop
xor
sahf
aam
push
sub
cld
add
in
imul
cmp
cmp
mov
rorb
hlt
adc
test
repz
and
cmc
test
pop
bound
jl
adc
push
jge
roll
imul
sbb
in
inc
mov
mov
mov
inc
adc
cmc
decb
pop
sahf
pop
mov
jae
aam
imul
sub
ret
fstpl
adc
test
mov
mov
sahf
test
mov
dec
xor
push
stc
jne
cmpsb
push
xor
adc
dec
jae
xor
jmp
enter
movsb
mov
lret
rcr
dec
sub
scas
add
or
imul
and
rclb
insb
push
xchg
mov
adc
mov
push
and
rcll
rcrb
xor
push
sub
icebp
dec
or
fisttpl
and
or
sub
inc
mov
mov
fdivrp
les
push
lds
push
push
cltd
js
outsb
sub
sti
out
mov
mov
jbe
mov
je
loope
xchg
cld
pop
inc
jmp
jecxz
cmp
out
sbb
lods
cmp
push
xchg
shll
add
xchg
xchg
xor
imul
cmp
mov
cwtl
push
in
mov
cmc
aam
jp
jp
inc
je
push
js
pop
test
cltd
sbb
xor
push
not
ds
inc
dec
dec
jns
or
add
jnp
mov
add
mov
adc
orb
insb
add
negb
dec
jbe
mov
gs
mov
outsl
dec
xor
sbb
inc
jmp
mov
fisubs
out
sub
leave
cmp
mov
in
mov
jns
xchg
dec
inc
fnstcw
sbb
int3
cmp
push
inc
cmpsb
out
les
or
cmp
call
push
mov
xchg
adc
sub
add
sbb
jmp
data16
dec
sub
jmp
in
dec
dec
test
daa
push
lcall
testl
mov
sub
mov
lahf
ss
hlt
dec
cmp
and
rolb
or
jo
push
mov
adcl
stc
xchg
icebp
mov
or
int
mov
decb
push
jle
dec
das
sbb
rcr
adcl
xor
pop
cltd
push
stos
repz
cmp
sbb
in
cmp
lods
cmp
cmp
xor
outsl
and
add
mov
sub
loop
std
out
dec
orb
sti
pusha
cmp
hlt
xor
pop
pop
adc
in
cmp
and
out
mov
daa
jns
dec
cmpsb
and
bound
cmpsl
xor
dec
leave
mov
rolb
mov
aam
dec
adc
jge
mov
adc
or
push
outsb
mov
jae
test
xchg
lods
out
push
sub
fcomps
insb
addr16
cltd
pop
and
mov
loope
adc
in
mov
jb
mov
ret
lock
inc
xor
mov
mov
fcmovne
js
mov
cmpsb
mov
fwait
lds
cmp
cmpl
ss
outsl
std
add
sub
fdivp
insl
or
aam
fadds
cld
mov
push
add
pop
repz
dec
lcall
repz
jg
nop
lcall
add
int3
inc
pop
add
fcoms
test
push
jp
mov
mov
add
push
cmpb
data16
stc
mov
push
notb
lods
jmp
add
mov
sub
cld
cli
push
xchg
sbb
jne
xchg
or
subl
cmp
dec
in
int3
je
pop
lea
xor
and
das
dec
mov
sbb
cmp
xor
add
sti
push
cmp
aad
dec
ds
xor
rcrl
fs
test
pop
mov
int
adc
adc
std
nop
movl
inc
out
inc
out
aad
pop
cmp
pop
inc
xlat
movsl
inc
xchg
frstor
jbe
test
sbb
push
xchg
lea
lret
int
into
ss
and
dec
clc
mov
push
mov
nop
pop
pop
mov
rcl
push
push
add
call
jecxz
cmp
incl
int3
or
inc
jno
xchg
insb
cltd
jbe
nop
ret
mov
mov
lds
adc
fildl
arpl
xchg
iret
js
lcall
lea
and
leave
imul
push
cmp
jp
sbb
dec
pop
loop
insb
sub
pop
jns
jle
scas
push
lock
jnp
mov
out
test
push
ljmp
mov
xchg
fwait
outsb
xor
push
xchg
movsb
xchg
out
inc
jmp
fdiv
in
inc
cld
out
pushf
sbb
cwtl
icebp
push
mov
add
inc
loope
cmc
pop
out
pop
mov
xor
int
lods
mov
out
sub
adcb
adc
adc
cmp
or
outsl
inc
rcll
push
aad
jmp
fidivrl
jmp
into
out
or
or
pop
adc
jp
xlat
rorl
inc
movsb
shrb
andb
ds
test
aad
pop
xorb
lock
test
mov
adc
ret
rclb
stos
idivl
nop
cmp
shrb
or
hlt
loope
pop
in
aas
ret
sub
or
out
add
mov
lock
icebp
inc
in
push
jecxz
and
imul
les
repz
aam
movsb
fimull
mov
fistpl
add
fnsetpm(287
test
adc
pop
xlat
mov
xor
mov
dec
hlt
and
xchg
cmp
mov
out
das
cmp
fidivl
sub
fld
cmc
test
pusha
adc
sub
bound
and
xchg
cmpsl
push
jnp
mov
cmp
in
and
inc
xchg
xchg
push
popf
nop
call
lahf
jecxz
call
arpl
xor
insb
mov
mov
adc
push
push
add
sub
cmp
iret
sub
and
test
push
add
test
push
add
or
insb
stc
clc
jb
mov
int3
loopne
mov
gs
incb
cs
jle
es
shl
jg
cmp
sahf
cwtl
xchg
stc
push
xchg
hlt
add
fisubs
mov
int
pop
push
cmp
or
iret
add
out
pop
cmp
fpatan
mov
fisubs
cmp
mov
dec
js
adc
enter
mov
imulb
jge
insb
push
mov
xchg
dec
dec
cltd
aaa
jp
outsb
jge
fistl
mov
scas
or
faddl
cmpsb
or
pusha
sahf
mov
frstor
das
movsb
or
dec
data16
shll
sti
jmp
sub
pop
lods
dec
into
sti
jle
cmp
popf
popa
outsl
jb
mov
call
imulb
xorb
outsb
push
ret
fidivrl
out
inc
clc
out
call
scas
mov
arpl
fisttpl
mov
test
mov
imul
je
pop
xor
jo
popa
pop
pop
push
push
or
dec
cmpsb
push
adcl
mov
sub
test
movsl
xor
lock
popf
xchg
ret
clc
cmp
xor
mov
fs
movsl
inc
push
cmp
movl
das
push
rolb
mov
popa
mov
out
sub
mov
aad
sar
sbb
adc
rcrb
or
add
pop
aam
jae
outsb
out
fistps
lret
pop
pop
stos
lods
jns
mov
mov
fnstsw
scas
adc
aam
adc
push
imul
mov
pop
mov
lcall
push
dec
xor
fnsave
cmpsb
mov
sub
adc
adc
outsb
jns
cmp
out
sbb
pushw
out
mov
subb
pop
cmpsb
or
or
cs
scas
and
pop
cwtl
mov
mov
xchg
loop
jbe
out
test
mov
jmp
adc
push
push
adc
lret
aas
fistpll
outsb
dec
push
push
insb
sbb
mov
lods
mov
add
dec
jp
inc
sbb
sbb
pop
lcall
sub
into
or
cmp
push
xchg
es
jge
jmp
mov
out
jne
push
insl
pop
and
xlat
popf
mov
push
cmp
and
cmp
push
adc
aam
pop
ret
data16
enter
or
xor
shll
push
xchg
lea
rcrb
xor
das
pop
ds
test
sub
dec
jmp
mov
jmp
fcomps
out
xchg
or
inc
xchg
dec
orl
push
test
cld
pop
icebp
cmp
int
push
mov
lods
jbe
imul
inc
inc
mov
pop
push
int
fistl
cltd
jl
sub
cs
ljmp
jmp
and
push
cmpsl
hlt
dec
cmp
xor
das
fnstenv
out
adc
inc
arpl
sti
mov
or
cmp
test
pop
mov
movsl
pop
test
xchg
lea
mov
xchg
inc
pusha
stos
add
or
pop
mov
ja
mov
adc
mov
cmp
cltd
ds
jns
stos
mov
cmpsl
jecxz
pop
pusha
sbb
ret
pop
or
mov
test
int
bound
and
or
or
and
dec
jnp
fdivrp
xor
push
int3
int
push
lahf
addl
jb
sub
call
movsb
xchg
addr16
es
xlat
ret
je
jecxz
loope
in
jo
fbld
pop
sub
jae
clc
fsubrs
cmp
mov
adc
sub
enter
push
and
mov
xchg
xlat
out
pop
or
imul
and
xor
mov
movsb
test
out
ss
add
and
icebp
xor
and
push
push
mov
mov
clc
lcall
ljmp
in
push
cmpsl
repnz
inc
adc
dec
pop
xchg
inc
mov
fnsave
jne
push
adc
adc
jo
shrl
dec
xchg
prefetcht0
pop
mov
pop
andb
and
mov
cmp
xor
gs
jmp
xchg
mov
mov
divb
shll
popf
ja
mov
or
adc
cltd
jnp
mov
cmpb
xchg
push
sbb
mov
scas
dec
ror
cmpsb
hlt
push
dec
call
mov
add
add
rorl
and
mov
push
jnp
mov
pop
mov
lret
push
push
mov
and
test
mov
arpl
adc
pop
jnp
mov
pushf
adc
sarl
adc
push
sahf
mov
xor
xchg
inc
scas
dec
push
inc
jae
mov
negb
cmpl
xor
jmp
xchg
int3
les
adc
and
sbb
addr16
add
cmp
mov
fs
add
scas
decl
lds
icebp
stc
push
fs
lods
int3
push
dec
sahf
inc
mov
das
or
outsl
add
jae
add
sahf
ds
xor
lds
rol
mov
stos
test
mov
scas
dec
adc
cli
int3
xor
outsb
lret
ljmp
orl
adc
push
cltd
and
scas
dec
mov
xor
push
dec
gs
into
mov
hlt
cmc
inc
nop
xchg
lds
mov
pop
inc
test
jne
xchg
or
and
fcoms
lret
xor
loopne
enter
cwtl
insl
movsl
mov
or
shll
pop
into
push
clc
adc
dec
imul
pushf
or
nop
cmp
stc
or
xchg
andl
pop
and
and
push
outsb
inc
pop
scas
int
or
ret
iret
jmp
jnp
rcrl
cmpsb
cwtl
andb
mov
shrl
int3
jmp
push
dec
or
dec
jmp
or
ss
f2xm1
push
arpl
iret
xor
push
adc
lcall
mov
or
and
iret
test
dec
cmp
dec
inc
push
imul
add
lock
ret
pop
sbb
adc
repz
pop
les
cmc
pushf
adc
std
sbbl
nop
push
std
mov
pop
push
ja
call
and
pop
mov
mov
aam
dec
push
stos
pop
and
mov
xchg
mov
and
xchg
mov
sub
xor
rol
sarl
sub
sbb
cmp
or
bound
pop
mov
test
out
btcl
or
in
fwait
outsl
pop
ss
push
add
lcall
push
dec
adc
mov
lods
icebp
sbb
xor
test
cmp
or
jge
jae
push
sbb
lahf
adc
outsb
xor
jmp
bound
jo
push
xlat
push
dec
and
mov
mov
lock
mov
and
fwait
xchg
adc
xchg
shrl
movl
push
fnstcw
or
mov
test
push
inc
adc
mov
pushaw
mov
out
cli
push
lret
cmp
dec
out
cmp
push
xchg
test
rol
cmpsl
jg
aaa
pop
adc
aaa
xchg
cltd
jle
lea
aaa
cmpsl
out
fcompl
and
outsl
cmp
js
and
mov
sub
das
cmp
sub
hlt
push
cmpsl
popf
or
sbb
cmp
cmp
sbb
mov
shll
into
xchg
sub
lds
cmp
test
into
lds
xor
or
sar
or
xchg
int
int3
jmp
sbb
pushf
je
mov
mov
jnp
andl
adc
arpl
push
sub
xor
cmc
sahf
adc
out
push
sub
iret
lret
add
faddp
jno
icebp
jmp
cmp
popf
add
loope
sbb
or
popa
xor
jmp
jb
pop
xchg
push
xor
inc
movsl
or
xor
pop
dec
mov
and
sahf
data16
out
jmp
gs
leave
es
shlb
bound
xchg
das
call
mov
xchg
mov
cli
decb
in
cmpsb
sub
gs
jp
mull
test
sub
mov
scas
sub
inc
mov
add
lret
call
adc
fs
cmpsb
cs
sub
pop
imul
add
jno
out
out
pushl
fs
cmp
scas
int3
xchg
mov
cmpsb
xor
ds
sub
fdivr
xchg
fistpl
xchg
inc
mov
out
pop
mov
out
jl
and
cmp
out
out
push
pusha
cmpb
jne
dec
shll
arpl
add
add
sub
lcall
popf
sub
mov
jnp
je
xchg
jne
addb
mov
jle
daa
insl
push
push
ja
lret
pop
test
cmpb
lock
adc
nop
inc
cmp
jbe
add
repnz
in
stos
iret
xor
test
rcll
inc
mov
fidivrl
scas
cld
int
mov
pop
popa
sbb
xchg
xor
and
repz
les
push
sbb
leave
hlt
fisubrs
outsb
fsts
cmp
sahf
int
mov
js
inc
fcomp
push
xlat
cmp
add
jo
sub
or
sbb
mov
stc
shl
insb
mov
insl
cs
pusha
jmp
sub
gs
push
fists
inc
out
xchg
push
mov
jns
sarb
scas
cmc
pop
push
aam
lcall
jg
fxch
lret
int
or
jmp
xor
push
les
xor
insl
cmp
daa
push
out
inc
in
sbb
mov
fidivrs
or
imul
dec
js
shll
lock
adc
push
lds
sbbl
popf
stc
sbb
sbb
cmp
movsl
mov
add
movsl
pop
ss
sub
out
xchg
mov
fsubrs
xchg
cmp
repz
jl
std
mov
sub
cmpsb
jmp
cmpl
and
outsl
and
jne
cmp
mov
scas
adc
shll
fildl
mov
lds
xor
adc
xchg
xchg
enter
jp
sbb
xchg
jbe
movsb
inc
aaa
push
cld
fs
add
cmp
imul
sbb
push
test
mov
mov
jle
loope
mov
push
or
addl
adc
cmp
daa
cmpsb
pop
es
xchg
lods
sub
clc
jge
sbb
pop
sti
mov
fwait
mov
popf
testl
loopne
add
jle
out
xchg
repz
push
mov
lret
dec
iret
je
gs
push
arpl
or
jno
cmp
push
xchg
jnp
pop
cltd
jbe
mov
jl
pop
mov
push
into
shrb
mov
sub
dec
xchg
xchg
add
push
or
sub
push
mov
pop
nop
aaa
xchg
sbb
jmp
or
mov
push
inc
daa
inc
xor
cli
xor
jge
dec
mov
lcall
in
mov
inc
pop
adc
fwait
outsb
mov
push
inc
cwtl
fdivl
insb
inc
ja
pop
inc
pop
out
inc
push
jo
call
adc
inc
jle
pop
mov
stc
ja
cmp
rcl
inc
ret
aaa
arpl
lods
icebp
lret
sbb
lock
movsl
sbb
dec
into
cld
cmp
add
mov
cwtl
aam
into
mov
loop
out
stos
mov
mov
mov
dec
int3
pusha
es
imul
adc
cmp
jg
xchg
sub
add
add
and
jns
out
jmp
mov
in
loope
xlat
adc
in
aaa
out
insl
pop
mov
add
sub
leave
lret
insb
mov
push
or
fwait
jnp
mov
clc
or
ss
fmull
push
pop
scas
lret
lock
fbld
dec
push
and
adc
pop
or
movsl
repnz
mov
pop
sub
mov
into
xchg
dec
pop
cmp
push
aam
mov
les
and
dec
cmp
adc
jo
popa
cwtl
fcmovbe
nop
mov
loop
sub
neg
data16
je
sbb
shl
out
ljmp
sub
sub
into
cmp
sub
mov
pop
mov
adc
paddusw
adc
sub
jle
fsubl
lock
dec
int3
int
outsl
jp
jno
pop
mov
cmc
sbb
dec
and
sbb
bound
pusha
mov
inc
clc
test
pop
bound
call
xor
jg
mov
loope
mov
lcall
mov
inc
je
jle
arpl
arpl
jnp
fildl
jge
data16
sbb
mov
lret
nop
xor
xor
push
add
xchg
xchg
ljmp
aad
lock
movsb
mov
mov
loopne
mov
imul
nop
add
xchg
jb
aaa
pxor
insl
roll
cmp
inc
mov
cmp
inc
test
mov
add
pop
mov
push
dec
sub
movsb
out
inc
aaa
out
sbb
popa
pop
testb
sub
mov
test
dec
cmpsl
imul
in
clc
add
mov
mov
bound
insl
mov
lods
push
sbb
aad
cmp
xlat
jb
sahf
push
jno
jbe
sbb
cwtl
repnz
jno
add
sti
jmp
dec
sbb
rorb
cs
sarb
fs
cwtl
adc
das
pop
test
and
jbe
mov
pop
nop
xchg
ljmp
insb
sbb
repz
jbe
shlb
aas
in
adc
jnp
sub
call
dec
mov
test
and
xchg
fidivrs
add
add
mov
xor
dec
push
xchg
xchg
cmc
testl
inc
dec
jb
negb
mov
or
js
pop
add
mov
stos
sub
push
out
aaa
enter
add
jo
pop
or
push
and
add
outsb
pop
out
test
dec
inc
dec
enter
xchg
pop
stos
cltd
cmp
mov
push
xchg
adc
notl
mov
jl
leave
jmp
push
loope
int3
sub
dec
jle
mov
neg
and
out
lret
dec
push
xlat
mov
subl
mov
jle
stos
mov
xchg
lock
dec
xor
sahf
imul
jne
sub
mov
mov
loopne
sub
fsubl
mov
sti
out
jae
sub
roll
push
test
and
pop
cmp
les
int3
shll
xor
pop
or
cmc
ret
inc
lods
sti
fcomps
adc
or
mov
lahf
jno
jp
les
ja
ljmp
add
fmuls
jmp
shl
xchg
mov
pop
mov
insb
pop
xor
hlt
pushf
dec
jmp
jno
add
pop
iret
pop
dec
pop
ret
mov
jns
jmp
and
leave
xor
mov
mov
jmp
imul
js
test
out
imul
in
adc
xchg
or
xchg
jbe
add
push
push
subl
fisttpl
outsl
cmp
fisttpl
xor
or
mov
mov
push
inc
sub
mov
adc
cli
movsl
insl
fld
xchg
addr16
or
add
jmp
adc
daa
pop
out
mov
mov
mov
pop
fcompl
sub
sub
mov
sub
daa
shl
inc
xor
xor
cmc
push
pop
mov
fucomp
cmp
test
loop
sbb
hlt
stc
test
mov
push
push
mov
xchg
dec
sbb
ja
je
mov
mov
orl
jns
pop
jl
repnz
fwait
shl
cmp
inc
clc
int3
or
and
call
imul
push
stos
fldcw
xchg
sub
mov
icebp
and
mov
xchg
push
in
jbe
push
jge
mov
cmp
adcb
adc
sub
pop
js
mov
cmp
incl
lock
inc
outsb
pop
xorb
imul
or
lahf
aad
icebp
ficoms
mov
mov
fistpl
das
inc
lret
repz
sbbb
jns
rorl
inc
pop
lds
test
pop
fucomip
pop
les
or
dec
add
push
ja
inc
cmp
xchg
jo
push
xchg
ds
xchg
icebp
or
jmp
push
testb
lods
sbb
sbb
data16
xchg
push
inc
rcrb
shlb
mov
repz
adc
jno
and
cmp
int3
add
popf
not
mov
mov
xor
cld
cmp
lea
aaa
push
jg
dec
push
neg
fdivs
cmp
ret
jbe
aaa
sbb
mov
xlat
mov
scas
fnstcw
cli
int
mov
mov
inc
or
out
pop
decb
and
mul
insb
mov
out
in
out
mov
std
loope
in
pusha
outsb
sbb
pop
adc
arpl
gs
lods
cmpsb
iret
cmp
call
into
scas
xchg
jbe
fs
stos
sub
in
jb
mov
pusha
fnstsw
lret
xchg
pushf
sbb
mov
mov
dec
xchg
test
mov
push
and
add
outsl
mov
push
xor
int3
andb
popf
dec
mov
pop
addb
pop
popw
mov
xchg
shll
call
and
push
and
sbb
inc
mov
nop
mov
push
inc
dec
inc
xor
adc
bound
in
inc
mov
cmp
ficompl
dec
sbb
fsubrs
vmovd
jp,pt
dec
jae
cmp
jmp
lcall
je
mov
xlat
cmpsb
cmp
out
add
ds
mov
mov
nop
out
mov
mov
jbe
mov
in
imul
rolb
and
rclb
push
mov
call
ret
xchg
lods
es
test
xor
jmp
iret
dec
rcll
sub
xchg
inc
popa
cmpb
pop
loop
hlt
add
push
jl
sub
sbb
sub
in
inc
push
mov
shlb
and
shlb
les
push
dec
push
xchg
lods
adc
xor
mov
loope
dec
inc
mov
dec
push
movsb
lods
mov
inc
xchg
out
push
in
clc
pop
icebp
sbb
mov
add
mov
pop
aas
jno
scas
leave
adc
enter
in
out
movsl
cmp
sbb
jl
mov
rcl
pop
inc
jg
fcompl
in
scas
pop
std
addr16
mov
sub
and
in
sbb
or
daa
in
fistps
lock
or
loopne
jge
cmp
jge
dec
mov
fidivs
xchg
add
repnz
or
mov
stos
inc
shlb
dec
sbb
fcoml
jno
dec
sbb
ja
jp
pop
rol
sbb
xchg
inc
xchg
pop
sbb
cld
mov
dec
pmulhuw
inc
adc
sbb
aam
push
jne
mov
iret
xchg
xchg
jno
and
lcall
push
test
cmp
je
push
arpl
mov
adcl
testl
pop
sti
or
addl
fcoms
fwait
in
sbb
and
add
movsl
lret
hlt
cmp
or
sahf
ja
xor
in
dec
popf
xor
stc
or
pop
mov
jae
pop
enter
pop
cwtl
ret
mov
lea
ficomps
jno
mov
push
outsl
mov
int
cmp
mov
scas
push
cltd
aas
add
inc
ret
xchg
std
mov
jo
mov
sub
xchg
jecxz
xorb
sti
fisubrs
icebp
cld
push
xorl
inc
test
scas
leave
or
sub
and
pop
xor
aas
or
push
loop
xor
push
pop
mov
mov
xor
rcrb
xchg
mov
outsl
pushw
xor
fisttpl
addr16
stos
pop
xchg
jmp
daa
and
scas
sub
out
jge
js
cmpsl
jbe
inc
mov
ss
dec
mov
mov
pop
cmp
stos
jnp
push
and
scas
lods
cwtl
fcompl
push
and
cld
mov
loop,pn
inc
cmpb
divb
sub
fnstcw
xchg
adc
dec
lahf
jp
add
imul
pushf
push
push
nop
mov
in
icebp
repnz
popf
loop
out
or
mov
imul
push
cmpsl
adc
mov
push
jbe
stc
cmp
fwait
repnz
mov
xchg
ffreep
mov
aam
dec
add
jne
pop
enter
and
mov
fbld
js
pop
cmpsb
lock
sti
imul
mov
cmpl
xor
cmpsb
pushf
rcl
ja
sub
mov
outsl
fdivl
loope
sbb
clc
popf
into
xchg
push
lds
das
test
mov
adc
xchg
push
or
jne
or
decb
adc
pop
push
mov
adc
es
shrb
mov
push
ss
jae
or
int
sub
sbb
sahf
insb
xor
xchg
inc
sbb
dec
jmp
arpl
dec
popa
rcr
sbb
inc
inc
fs
ret
jo
push
push
push
pop
pop
add
xor
mov
es
inc
jp
and
ss
inc
jb
adc
mov
aaa
or
add
inc
add
and
dec
jge
inc
ret
in
add
js
push
jae
fucomp
sarb
movsb
add
xchg
ret
mov
mov
and
push
ret
push
mov
and
or
adc
and
add
sbb
and
and
mov
mov
pop
xchg
mov
jp
popf
outsb
dec
inc
xorl
pop
stc
mov
dec
sbb
movsb
test
adc
and
dec
sbb
push
push
xchg
sbb
mov
loope
mov
test
or
sarb
mov
mov
mov
mov
int
negb
mov
fmull
fimuls
mov
xor
sub
fstp
lds
sti
pop
mov
int
push
lds
dec
dec
inc
jmp
js
dec
sbb
in
or
imul
gs
jmp
out
pop
inc
jle
cmp
inc
xor
cmp
iret
test
cmp
mov
cs
jnp
cmpsb
mov
shr
mov
popf
cmp
sub
dec
icebp
in
dec
jmp
xor
inc
pop
jmp
dec
ja
ds
push
aas
inc
aam
das
pop
outsb
xor
aad
pushf
dec
nop
aaa
mov
mov
sahf
movsb
adc
sub
mov
fistps
into
aam
sbb
enter
mov
pop
andl
test
in
out
add
mov
push
jl
in
pop
inc
das
fcomps
fmul
mov
xchg
lds
push
adcl
mov
cmp
inc
mov
mov
xor
jp
lds
sbb
fdivs
mov
xor
fdivr
cmp
and
iret
cmp
cltd
dec
arpl
inc
hlt
cmp
aaa
sub
ss
xchg
movsb
loopw
fs
sbb
adc
or
sti
fnstsw
pop
mov
sub
push
mov
lret
xlat
out
into
pushf
mov
popf
addl
mov
sub
call
mov
mul
cltd
inc
pop
mov
mov
int
aaa
push
inc
mov
and
or
sub
adc
arpl
cmp
mov
popa
push
or
lea
or
in
addr16
sbb
loopne
repz
ja
flds
jnp
add
aam
and
jnp
xorb
dec
mov
or
pusha
outsl
in
rorb
add
cwtl
xchg
pop
mov
sub
movsb
addl
pusha
loopne
inc
sub
push
lret
xchg
pop
inc
inc
or
sbb
cs
cltd
pop
test
or
scas
lds
jmp
insb
pop
stos
movsl
dec
jg
xlat
mov
mov
or
fcom
les
xor
pop
inc
cld
test
sbb
enter
les
jecxz
pushf
je
cltd
inc
xlat
mov
mov
xchg
nop
dec
mov
stos
xchg
pop
jp
and
rcl
add
cmp
and
mov
push
pop
loopne
or
into
aas
lret
insl
mov
popa
mov
cmp
cltd
sbb
std
nop
pop
ret
pop
int3
pop
sub
fs
jmp
inc
add
jnp
inc
mov
test
stc
lock
pop
dec
fisttps
out
mulb
js
xor
adc
outsb
mov
sbb
sar
mov
mov
xor
out
mov
adcb
xchg
or
hlt
loop
pop
add
shll
xchg
cmp
pop
scas
push
mov
xorb
pop
es
call
sub
test
aam
mov
inc
stos
pop
dec
ret
mov
dec
enter
adc
pop
mov
pop
push
and
test
fbstp
imul
pop
sbb
inc
adc
dec
dec
push
inc
shrl
jmp
dec
sbb
stc
mov
gs
shr
iret
aaa
sub
popa
inc
ss
and
icebp
clc
adc
leave
je
mull
pop
bound
sbb
push
ds
pop
push
dec
in
pop
mov
cmpsl
push
mov
and
cmp
and
jle
or
jle
xchg
mov
mov
and
dec
cmp
pop
outsb
push
mov
fldenv
pop
jp
sbb
or
xorb
add
rcll
add
jne
xlat
push
sub
adc
lahf
mov
in
jcxz
jecxz
push
mov
or
clc
add
mov
sbb
adc
lret
mov
dec
movsl
dec
sahf
lock
in
test
add
dec
pop
hlt
add
dec
js
mov
pop
xor
cmp
arpl
pop
xchg
jno
test
xor
and
adc
loop
cmc
sbb
cmp
loop
rolb
lret
add
dec
mulb
inc
sbb
dec
sarb
ss
imul
outsl
loope
loope
mov
jecxz
dec
push
adc
stos
in
mov
xor
aas
mov
sbb
xor
jno
mov
loopne
dec
xor
push
mov
mov
mov
xor
and
enter
dec
addl
pop
enter
add
data16
cwtl
daa
mov
sahf
cmp
adc
or
sub
sub
xchg
pop
sti
pop
push
rorl
lods
dec
mov
mov
out
inc
dec
add
sbb
dec
sbb
adc
dec
shr
or
jne
cmp
aad
incb
mov
loopne
xchg
bound
std
sub
test
push
call
mov
fmuls
push
iret
sbb
aad
adc
xor
jns
int
fucomi
jecxz
xchg
push
cltd
pusha
cwtl
and
cld
cld
adc
mov
inc
push
ds
cs
pop
adc
adc
fistps
sbb
aas
mov
adc
jmp
cmp
dec
sub
fistps
add
setbe
pop
or
lret
fiaddl
scas
mov
pushf
popf
xlat
std
xor
push
add
or
mov
and
outsl
cs
imul
inc
test
data16
in
dec
mov
xor
pop
js
mov
xor
sti
ret
out
push
and
mov
ja
inc
dec
mov
pop
pop
push
insl
leave
pmuludq
sahf
ds
mov
pop
mov
lods
cli
rcrb
jb
div
or
push
mov
fsubs
cltd
adc
push
add
stc
pop
shrb
dec
dec
pushl
ror
inc
fdivs
dec
call
mov
test
jne
repz
dec
movsb
xor
mov
ds
fwait
pop
or
pop
pop
out
cwtl
jno
hlt
jge
and
mov
rcr
inc
mov
aad
jge
sub
add
out
jmp
ret
sub
imul
add
jg
mov
movsb
sbb
pop
popa
out
mov
stos
mov
leave
fisubrl
inc
repz
pop
clc
mov
loope
fidivl
dec
sub
out
rcr
fld
aaa
adcb
cmpsl
imul
or
jb
loope
ljmp
out
gs
stc
dec
int3
dec
push
mov
loopne
jp
js
imul
mov
mov
cmp
arpl
and
and
dec
cltd
jae
or
lahf
pop
je
lahf
pop
mov
pusha
lret
pop
loope
adc
xchg
mov
stos
push
lea
add
ljmp
dec
pop
sbb
mov
lret
push
aas
pop
pop
iret
mov
imul
out
lret
cmp
xor
sbb
push
icebp
add
pop
sar
xor
fisubl
scas
sub
out
or
aad
lds
sub
jmp
mov
loopne
scas
daa
cmp
loopne
xchg
pusha
jno
sti
les
mov
adc
nop
sbb
sub
xchg
ljmp
mov
mov
lret
pop
aam
lods
clc
xchg
jg
in
dec
and
fdivs
push
hlt
stos
out
xlat
idivb
frstor
data16
jecxz
shlb
push
adc
sbb
pop
repz
and
inc
xchg
aaa
mov
int
cmp
cmp
mov
xchg
dec
push
add
outsl
fcomip
push
and
push
mulb
xchg
lods
xchg
push
pop
cs
dec
mov
aaa
clc
jl,pt
es
mov
outsb
ss
xchg
enter
stos
ucomiss
in
mov
add
dec
xor
sbb
adc
jle
jmp
mov
insb
push
negb
xor
jbe
fisttpl
lcall
fiaddl
fidivs
dec
lea
imul
jo,pt
jae
fcmovnu
add
inc
mov
mov
sbbl
fldcw
lods
sbb
cli
and
xor
fiaddl
jg
insl
pop
daa
fldz
pop
cltd
ja
push
mov
dec
sub
mov
popf
mov
movl
mov
sbb
and
pop
mov
push
and
mov
ret
rorl
roll
dec
lock
and
adc
adc
cmpsl
push
dec
mov
push
loop
daa
jns
call
push
cmp
push
inc
jae
enter
fs
jl
mov
std
sub
stos
andl
inc
pop
or
jo
ret
mov
loope
dec
dec
add
xchg
mov
jecxz
pop
rorb
jmp
mov
jecxz
pop
xor
adc
mov
rol
cmp
xchg
xor
mov
pop
jle
xor
xlat
mov
sbb
pop
enter
jg
pop
out
js
push
push
push
leave
daa
cmp
push
mov
pop
imul
clc
push
sub
mov
repz
loopne
adc
add
scas
lds
shrl
in
sbb
xchg
dec
jno
inc
mov
imul
mov
mov
jl
fdivs
imul
addr16
cmp
sahf
ljmp
loopne
mov
iret
loope
pop
scas
lcall
push
fisttpl
sub
jno
js
push
cli
pop
fs
jno
or
filds
pop
adc
push
movsb
add
mov
test
mov
loop
sub
or
or
pusha
jg
push
xor
pop
jmp
xor
aad
out
test
gs
pushf
adc
xor
scas
les
fidivl
sub
test
add
arpl
jns
shr
or
pop
ljmp
lret
lock
sbb
stos
dec
mov
stc
mov
dec
addl
lcall
sub
dec
inc
jb
inc
test
push
mov
or
fs
addr16
pop
mov
mov
les
cmp
pop
iret
mov
mov
mov
push
inc
pusha
pop
or
push
addr16
push
sbb
lds
movsl
aad
mov
add
movsl
push
test
addr16
xor
or
jb
inc
mov
jle
xor
xchg
add
lods
push
and
xor
or
xor
mov
sbb
dec
and
int
xor
aas
jo
cld
jns
sti
jge
scas
add
ja
cmpsl
mov
nop
mov
fistpl
push
cmc
test
les
inc
mov
inc
pop
pusha
cmpsb
in
test
jae
cld
insb
or
rcrl
loope
sbb
iret
shll
out
das
xchg
push
cmc
shrl
fisubl
lret
cmpsb
pop
jae
sub
orb
mov
xchg
shrl
push
push
fimull
mov
dec
leave
sub
mov
xchg
mov
dec
data16
and
mov
mov
mov
stos
add
inc
cltd
pop
inc
in
movsb
sub
aad
jmp
shll
sub
cmp
pop
xchg
test
dec
test
fistl
icebp
ds
mov
jecxz
sbb
cmp
sbb
int3
inc
fbstp
pop
bound
fnstsw
add
scas
outsl
clc
mov
inc
in
xor
jo
sub
push
lods
inc
mov
daa
test
push
push
adc
sbb
lds
shll
test
insl
mov
imul
inc
pushf
adcl
leave
sub
mov
out
hlt
out
inc
movsl
inc
mov
mov
or
add
lock
lods
aad
xor
xchg
dec
adc
je
cmp
adc
mov
jnp
rcll
sub
daa
stos
int
xor
sub
fmuls
or
fwait
cmpsb
into
call
xchg
rcrl
inc
mov
mov
xchg
inc
xchg
repnz
call
or
jae
mov
jmp
test
or
push
push
jns
push
rcrl
sbb
imul
aaa
lret
jl
cmp
mov
shll
clc
ds
mov
test
pop
in
and
mov
inc
jl
pop
push
mov
fs
add
js
cmp
arpl
insb
fnstenv
mov
cwtl
rcrb
iret
push
ret
out
les
inc
push
ret
loopne
push
dec
add
test
mov
loop
inc
stc
fwait
cmp
rolb
stos
add
mov
int3
insl
adc
cmp
jnp
add
pop
jno
inc
jae
push
jecxz
cmpsb
jmp
std
cli
inc
lret
mov
sbb
pop
ljmp
sbb
mov
cmp
cmpsw
jb
pop
int
sar
popa
orps
fildll
repz
jns
pop
adc
insl
fmuls
jge
repnz
scas
insl
push
leave
int3
mov
insb
mov
cmpsl
jae
mov
test
aad
cld
inc
xor
jnp
enter
cltd
mov
add
push
inc
sti
leave
inc
dec
jg
pop
cmpsl
incb
sbb
movsb
dec
xchg
out
add
add
mov
je
test
fiadds
xor
nop
lods
int
addb
jne
loope
fiaddl
aad
ds
push
cltd
cs
mov
je
pop
outsl
hlt
lea
test
int
push
addr16
rolb
repnz
pusha
adc
xchg
cli
arpl
lds
jns
mov
lods
dec
xor
jae
mov
push
sbb
push
sbb
xlat
and
scas
nop
int3
push
lock
fdiv
call
push
xchg
push
mov
sbb
std
pushf
dec
or
gs
mov
loope
xor
cwtl
jmp
int3
iret
and
xor
pop
shll
lea
js
ss
xor
mov
pop
xlat
cmp
jno
stos
cmpsw
rclb
inc
mov
addr16
pop
pop
jmp
ljmp
xchg
jp
in
mov
js
lods
cwtl
test
js
adc
or
imul
adc
loopne
mov
cmp
push
sub
fnsetpm(287
pop
xlat
pop
cmp
mov
jo
test
push
jne
and
cli
shll
imul
adcl
hlt
rorl
mov
push
push
pop
add
jbe
cld
mov
shlb
or
test
push
fistps
clc
push
out
mov
and
int3
loopne
adc
fdivrl
mov
inc
xchg
lods
out
test
sbb
std
scas
cmpsw
dec
mov
xchg
xor
adc
mov
data16
add
lea
pop
int3
mov
mov
stos
mov
ljmp
shlb
loopne
lods
das
leave
cmp
or
dec
ffreep
cltd
fbstp
mov
or
call
jo
sub
sub
pop
fwait
out
jle
add
dec
mov
sbb
lods
mov
fldt
sbb
mov
nop
and
into
add
sub
popa
push
cmp
js
pop
out
pop
sbb
dec
xor
xor
jne
pop
jp
gs
xchg
mov
imul
push
mov
cmc
int
cmp
add
insl
jno
aad
add
mov
cmpb
into
int
mov
add
mov
frstor
inc
scas
shr
and
icebp
insl
mov
xor
dec
add
lock
lahf
cmp
rcrb
cwtl
xor
and
xor
xchg
cmc
imul
out
mov
flds
add
dec
sbb
sub
add
adc
cmpsl
out
cmp
ss
and
mov
adc
cmp
xchg
enter
arpl
pop
dec
pop
ds
pushf
aas
lods
aam
shlb
mov
aam
clc
dec
cmp
push
dec
mov
imul
adc
ljmp
push
xchg
cmp
ret
mov
add
stc
ficomps
fwait
stos
jle
or
popf
popl
push
xchg
mov
add
xchg
xchg
dec
push
outsb
scas
rcll
cltd
fisttpl
xor
jo
daa
push
iret
xor
psubw
stos
jae
test
push
push
jl
pop
in
mov
add
adc
pop
in
ja
add
cmp
inc
xorb
stc
in
std
test
inc
push
or
aam
xchg
mov
xor
mov
insb
fsubl
sbb
sub
dec
push
or
jno
fsubrs
sbb
fidivs
ret
jae
pop
in
adc
dec
jp
hlt
movsb
and
iret
cmp
fld
adc
sbb
stc
pop
rcl
jns
ljmp
inc
incl
js
jp
inc
out
push
ror
jbe
ja
dec
icebp
test
aas
aas
ja
inc
xor
dec
dec
mov
outsb
sbb
cmp
dec
mov
pop
sub
ret
mov
mov
jg
dec
pusha
iret
rcrb
cs
cld
mov
mov
daa
lds
cmpsb
orb
xchg
sahf
push
mov
loop
mov
xorl
stos
je
in
sub
jp
filds
mov
push
setne
fmull
daa
rcll
mov
push
mov
and
mov
jg
loope
fisubs
leave
loope
jg
aaa
mov
add
insl
lds
cmp
xor
popf
sbb
lret
in
sub
mov
in
cwtl
movl
mov
add
add
xor
jno
cld
popa
mov
push
movmskps
xlat
push
pop
sub
loopne
jnp
mov
mov
or
mov
cmp
cltd
or
repnz
jle
or
out
lret
push
push
push
mov
es
lods
cmp
out
enter
lods
push
ljmp
and
imul
in
fwait
inc
in
jge
ds
push
jl,pn
les
dec
adc
pop
dec
shrl
leave
inc
mov
fistps
add
mov
jle
xor
pop
dec
mov
jae
mov
or
les
jge
xor
test
outsl
push
lcall
inc
sbb
and
push
mov
arpl
push
rcr
cmp
sub
into
jnp
jb
test
push
add
aad
mov
popf
xor
xlat
mov
add
imul
fsin
out
add
mov
sbb
and
mov
loop
in
testl
leave
rolb
push
gs
mov
mov
cli
jl
xchg
call
popf
lds
ja
push
push
inc
mov
jb
shl
gs
cmp
shlb
jb
inc
into
and
inc
dec
inc
xor
stos
bnd
es
sbb
sbb
jno
mov
or
lods
dec
inc
aam
jle
and
addb
or
fsubs
jb
dec
icebp
sbb
sbb
add
add
in
lea
sub
sti
cmpsl
mov
sahf
xchg
or
mov
mov
not
dec
pop
xchg
and
cli
mov
push
sbb
faddl
iret
loope
jne
sbb
jns
addr16
add
push
mov
push
bound
ljmp
or
stc
frstor
or
pop
xlat
idivl
pusha
or
sbb
jle
cwtl
in
je
push
out
mov
inc
jns
xor
push
dec
std
arpl
aaa
je
sbb
test
jae
fs
dec
bound
iret
and
jle
adc
out
or
cmp
mov
mov
xchg
mov
lahf
imul
mov
dec
or
xor
cwtl
ds
dec
imul
push
push
hlt
std
push
fwait
xchg
jecxz
std
in
movsb
jae
mov
sbb
movl
int
incb
jecxz
jge
das
test
frstor
or
pushf
rclb
and
push
xor
dec
xchg
les
andl
cmp
push
call
mov
adc
mov
imulb
add
adc
sbb
enter
pop
fisubrs
mov
dec
xchg
jns
cmp
outsl
jb
je
pop
ret
cmc
sub
push
xor
sbb
cmc
push
rorb
cmc
test
pop
cld
sbb
jecxz
lcall
ds
in
mov
movsl
not
pop
jns
stc
or
pop
and
mov
mov
xchg
loope
sub
mov
mov
push
idivl
aas
pop
gs
pop
in
stos
nop
adc
mov
cmp
xchg
push
pop
jnp
leave
ja
popf
in
call
cmp
adc
into
ret
or
dec
insl
shll
lods
push
pop
das
mov
test
pop
int3
insb
out
pop
add
mov
or
sbb
orb
dec
stos
cmovns
mov
sbb
pop
or
fisubrs
inc
mov
inc
add
insl
mov
cmp
in
add
popa
pop
pusha
hlt
xor
mov
cmp
mov
int3
sub
pop
jnp
test
and
mov
xor
inc
ljmp
sbb
shr
sbb
outsl
cmp
mov
daa
stos
out
in
dec
mov
jbe
or
jg
sub
jmp
and
stc
es
pusha
mov
jo
enter
mov
aad
xchg
test
pop
outsb
cmp
loopne
jl
dec
add
movsl
ss
adc
int3
inc
lds
inc
mov
imul
rolb
lret
inc
arpl
imul
lds
mov
add
out
daa
loopne
push
aas
das
mov
lahf
inc
lret
jle
jp
sahf
dec
xchg
aaa
addr16
fcmove
daa
incb
ficomps
ret
cmp
dec
xchg
push
sbb
insb
ja
hlt
adc
es
clc
or
adc
aas
in
lds
inc
and
fstps
push
xchg
adc
mov
dec
adc
mov
or
jmp
fdivs
fsts
mov
out
jae
test
and
adc
add
and
fsubs
fimuls
jnp
pop
in
mov
mov
dec
outsb
sub
cmp
imull
nop
loopw
mov
dec
mov
and
mov
push
or
sahf
push
daa
ljmp
inc
popa
ljmp
decb
es
arpl
xchg
cmp
mov
aad
dec
mov
rolb
jne
loopne
arpl
lods
inc
leave
fstpt
push
cs
aam
jl
aad
jbe
or
push
repnz
push
xor
inc
gs
fldl
dec
xlat
insl
pop
sbb
mov
mov
nop
cld
mov
pop
jmp
or
sbb
into
fsubs
push
int3
push
or
cmp
rcll
xchg
ret
stos
popa
and
add
lret
jo
repz
aam
adc
call
lcall
mov
lods
add
and
adc
test
mov
add
cmp
push
negb
xor
popf
jno
repz
xchg
xor
cmpb
push
stos
arpl
and
call
loop
sub
sub
loop
lret
pusha
test
xor
xchg
iret
pushl
lret
push
fs
mov
std
xchg
fcoms
rclb
out
fbld
test
pop
or
mov
xchg
xor
fistpll
xor
xor
sub
mov
cmc
scas
mov
enter
cli
hlt
outsl
xor
pop
dec
pop
xchg
jge
ret
xlat
cmpsb
loope
sti
adc
cli
jmp
lret
ret
loopne
xchg
lock
das
push
xchg
dec
rolb
mov
cwtl
sub
mov
cmp
push
cmp
add
fdiv
sti
ftst
push
mov
ret
daa
pop
repz
xchg
push
outsl
push
dec
aas
adc
popa
lods
xor
repz
mov
leave
into
cli
or
and
mov
inc
in
add
adc
inc
js
imul
sub
dec
jb
or
shrb
in
sub
daa
add
insl
shr
cmp
and
cmpsl
ss
insl
mov
in
xor
inc
dec
xchg
inc
imul
push
pop
in
popa
xor
je
xchg
mov
ret
bound
and
push
cmc
jp
dec
std
roll
lcall
shrb
jl
mov
push
push
mov
lahf
cmp
xlat
add
pop
dec
xchg
dec
jp
cwtl
repz
ret
fwait
pop
push
out
xlat
into
sub
stc
lahf
inc
and
rolb
out
mov
jns
push
and
fdivrl
sub
enter
ret
ja
xchg
addr16
xchg
mov
add
push
les
sub
pop
mov
inc
rcrl
dec
ror
mov
leave
scas
insb
pop
jnp
es
push
out
jmp
cmp
iret
adc
fistpl
add
dec
mov
ja
aaa
clc
scas
clc
test
out
mov
scas
lea
ret
dec
pop
sbb
dec
sti
out
insl
jecxz
mov
jb
and
lds
and
arpl
and
xor
int
dec
xor
xor
daa
inc
pop
sarb
add
pushl
adc
je
mov
pop
jmp
aam
push
xor
pop
movsb
out
ljmp
sub
outsb
or
out
xchg
xor
mov
repnz
mov
les
adcl
push
push
popf
sbb
cmpsb
xor
cli
push
sbb
pop
insl
xor
pop
mov
adc
push
sub
repnz
out
jge
and
cmpsl
dec
clc
push
fmull
mov
inc
aam
pop
and
or
mov
push
vmovaps
mov
jb
lcall
inc
sub
sarl
adc
jno
sub
add
popf
loop
dec
ljmp
jmp
pop
cmp
inc
int3
hlt
jecxz
cmp
in
jmp
in
dec
fdivrs
clc
stos
aad
test
or
mov
jmp
divb
lods
cmpsb
adc
hlt
inc
out
xor
cmp
xchg
dec
orb
add
lret
cwtl
and
xchg
clc
dec
jae
mov
xor
mov
or
and
stc
jns
insl
mov
lcall
andl
mov
mov
pushf
inc
in
sarl
mov
or
jnp
stos
dec
arpl
mov
mov
test
sub
and
xor
jno
inc
lods
pop
sub
je
and
xor
jmp
pop
add
sti
aam
test
mov
mov
roll
sub
xor
cmpsb
bound
xor
xchg
or
xor
test
lds
int3
sti
dec
les
lcall
push
dec
test
and
mov
or
rorb
jne
ret
dec
pusha
insb
not
int
mov
xchg
les
jns
loop
xor
xchg
dec
mov
dec
dec
jb
out
ja
insl
add
sbb
mov
fisttpll
push
inc
dec
js
movsl
icebp
mov
lods
iret
xchg
pop
pushf
imul
std
inc
ljmp
icebp
xchg
mov
lods
xorl
xchg
jo
add
fwait
mov
imul
sub
mov
das
mov
movsl
or
bound
mov
xchg
mov
xchg
fsts
and
dec
insb
xlat
clc
jmp
mov
pop
cmp
and
jle
fcmovb
dec
push
stc
cmp
or
inc
mov
push
and
pop
mov
hlt
sbb
fistps
mov
cmp
add
in
mov
je
in
push
aaa
popa
fcoms
adc
push
ljmp
ficomps
mov
lret
dec
outsb
mov
add
inc
lcall
loop
aas
inc
sub
add
mov
popa
fldl
je
pusha
pop
cld
data16
ret
lret
jne
push
adc
negl
popf
movsb
cmp
fsubrl
adc
test
push
lret
adc
push
sub
jne
mov
xchg
and
out
fdivrl
pop
mov
cmpsl
add
jg
add
push
lods
pop
xchg
xor
and
sub
cld
lods
test
dec
xorb
hlt
sbb
outsl
icebp
inc
addl
dec
sbbb
out
fistpl
sti
lock
sarl
dec
ss
adc
leave
scas
pop
push
sub
fldt
stc
jecxz
out
mov
nop
pop
push
iret
orb
pushf
shll
jns
test
cmpsl
addb
push
xor
in
enter
add
and
int3
sbb
std
and
cmp
jne
sbb
inc
data16
pushf
mov
adc
out
pusha
mov
mov
clc
adc
cli
je
adc
popf
call
loopne
xchg
push
lock
add
pop
cmp
ljmp
mov
sub
inc
mov
in
xor
or
in
movsb
into
or
cs
push
adc
or
xchg
xchg
push
test
mov
fsubl
sbb
xchg
jb
es
ret
ss
pushl
or
dec
add
int
dec
push
mov
xor
push
push
bound
xchg
rcr
or
sbb
test
dec
mov
into
mov
pop
mov
dec
jnp
cli
mov
mov
add
push
jbe
xchg
xchg
outsl
scas
scas
fwait
enter
outsb
sbb
sti
adcl
jecxz
mov
in
mov
jecxz
sahf
push
adc
jle
popa
push
nop
out
lahf
leave
out
xchg
or
adcb
leave
push
jns
xor
and
sarb
fisttpll
add
sbb
sub
dec
jg
ljmp
lret
je
ret
xchg
jmp
adc
xor
andb
sbb
push
jbe
inc
cli
push
inc
and
add
mov
das
sbbb
loope
stos
sahf
outsb
add
pop
repnz
arpl
inc
inc
movsb
addr16
fisubrl
adc
test
insl
popf
xchg
push
frstor
jo
mov
adc
add
dec
mov
dec
mov
movb
inc
arpl
scas
data16
ja
icebp
sbb
repnz
sbb
insb
mov
in
dec
ds
imul
xlat
pop
fdivp
xchg
sub
push
into
jnp
sahf
imul
mov
mov
pop
popf
repnz
mov
out
mov
addr16
rcrl
daa
push
xchg
daa
lahf
xchg
adc
pop
lods
mov
cmp
push
xchg
push
stos
in
shlb
inc
call
sub
mov
outsb
ljmp
inc
sahf
ret
sbb
adc
cmc
xchg
pop
popa
sub
and
adc
sbb
pop
dec
ljmp
testl
mov
push
nop
cmp
pusha
popf
sub
mov
jge
push
enter
cli
lret
aad
add
push
mov
shlb
sub
jg
outsl
stos
adc
pusha
inc
inc
push
loopne
leave
mov
pop
or
in
enter
mov
sub
jg
ja
mov
mov
sbb
dec
pop
pop
jbe
popf
dec
aaa
insb
mov
dec
sub
outsb
mov
jp
pop
jb
xlat
mov
repz
sub
add
mov
push
lcall
mov
sub
pop
les
push
jp
cmpsl
push
pushl
cmp
and
sahf
sub
mov
sub
jae
pusha
sbb
push
push
mov
jns
gs
std
mov
stos
jmp
add
fwait
lret
test
xchg
hlt
in
dec
pop
loope
and
ret
add
mov
jb
inc
mov
dec
movsl
or
pusha
xchg
andl
lods
fdivl
and
jmp
gs
mov
pop
pop
dec
xor
scas
into
mov
scas
mov
inc
cwtl
lods
and
pop
aad
shrb
in
je
pop
fisubs
sbb
test
dec
cmp
aad
mov
or
mov
in
pop
leave
adc
adc
and
jnp
and
mov
int3
inc
push
pop
mov
xlat
sub
out
sbb
mov
inc
xchg
inc
fmull
je
pop
stos
and
ja
and
adc
sub
xchg
outsb
cmp
jle
dec
bound
dec
cli
and
bound
enter
mov
push
add
in
jae
mov
out
sbb
adc
push
mov
ja
lea
mov
xor
adc
pop
cmc
adcl
and
and
sub
cmc
push
stos
les
dec
mov
lods
jbe
out
mov
sub
ret
add
cli
xor
mov
inc
sub
aad
xor
lea
add
std
and
in
jmp
test
imul
mov
js
xor
mov
popf
mov
mov
mov
push
data16
les
popf
mov
push
add
test
add
cs
in
cmp
inc
or
sub
jo
sti
rolb
inc
push
fisttpll
mov
jge
mov
and
rorl
push
mov
jecxz
jns
push
inc
xor
pop
lock
out
adc
outsb
sbb
or
stos
lods
inc
dec
dec
sub
jmp
mov
leave
sub
popa
lock
adc
and
dec
add
jmp
clc
ja
sbb
add
repnz
imul
mov
icebp
jle
sbb
iret
imul
and
js
push
dec
sbb
mov
inc
pop
jecxz
push
and
xor
insb
add
add
xchg
or
icebp
push
imul
sub
stos
sub
iret
xlat
cld
add
test
jmp
leave
int3
jnp
mov
test
shll
push
adc
adc
cmp
out
sbb
add
int
ljmp
or
cmp
movsb
mov
adc
lret
cmp
leave
testl
mov
stc
stos
repnz
in
ja
aad
mov
and
xor
pop
sti
out
add
jge
add
cltd
adc
or
stos
sub
sbb
popa
mov
std
cmpsb
dec
sub
pop
cwtl
jbe
dec
jle
mov
adcb
mov
mov
sahf
jg
lock
push
outsl
cltd
divb
leave
xor
hlt
push
cmp
push
sub
stos
push
ret
cmp
dec
lds
movsl
xchg
xor
or
mov
mov
daa
pop
stc
xor
int
push
clc
repz
and
cmp
push
fld1
repz
out
test
mov
cmp
add
push
xchg
push
xchg
mov
push
and
cld
mov
stos
mov
push
add
ljmp
adc
icebp
pop
dec
ds
add
pop
push
xor
mov
fnsave
call
shlb
out
mov
inc
and
mov
test
movsl
sti
clc
inc
pop
adc
xlat
imul
cmp
adc
adcb
inc
test
sub
mov
cld
pop
outsl
or
add
pop
xor
fs
dec
daa
mov
pop
pop
dec
in
push
icebp
pop
loope
outsb
test
std
mov
cmpsl
xchg
add
adc
nop
sub
in
aaa
popa
icebp
movsl
out
jge
test
sahf
mov
int
shrl
aad
fs
loope
adc
out
cmpb
rcl
jbe
lret
mov
dec
adc
inc
and
int3
xchg
scas
shll
mov
outsb
in
bound
je
jge
xor
dec
or
and
clc
push
fmulp
adc
xchg
jp
cwtl
cmp
cs
fwait
cmp
mov
jae
or
ret
js
arpl
test
lahf
push
dec
jb
inc
jnp
push
lock
iret
or
mov
or
sub
sub
pop
js
testb
pop
inc
push
jo
jmp
sub
popa
xchg
aas
pop
loop
out
cmova
arpl
push
sbb
push
arpl
mov
xchg
stc
mov
or
fsubs
jp
inc
sarb
pop
lods
push
inc
xor
idivb
jnp
jnp
rorl
push
test
mov
pushf
sarb
push
test
sub
sbb
in
push
jno
push
std
bound
xor
pop
push
loop
inc
clc
xchg
sub
sbb
push
mov
mov
lods
mov
ss
jl
cmpsl
repz
xchg
sub
cs
les
push
stos
xchg
adc
cli
push
shll
mov
inc
hlt
es
jl
imul
inc
into
add
mov
inc
cmp
shl
add
mov
pop
std
xor
mov
push
jnp
hlt
pop
leave
dec
loop
push
loop
rcrb
pop
add
add
adc
loop
leave
push
lret
inc
push
aam
idivb
pop
addr16
dec
xchg
jl
sub
sub
sbb
mov
mov
push
xchg
mov
js
mov
dec
ror
adc
das
mov
mull
aad
push
mov
mov
and
xor
cmp
pop
outsl
pushf
add
push
add
dec
out
insl
dec
mov
cmp
xchg
pushf
inc
cmp
cmp
sar
pop
lock
fcmovu
in
cmp
cwtl
rcll
and
sbb
xlat
test
cmp
cmp
mov
jg
popa
mov
out
shll
mov
int
sbbb
jns
movsb
inc
jg
push
mov
jno
mov
ret
mov
fisttpll
xchg
popa
fcomp
scas
stc
out
cwtl
mov
cltd
adc
testl
das
fisttpll
mov
cmp
andl
sbb
mov
sbb
pop
gs
cmp
and
mov
dec
outsb
and
adc
or
movsb
loope
lret
in
mov
sarl
xchg
cmp
loope
pop
pop
xor
xor
je
adc
sub
add
repnz
add
scas
je
dec
or
pop
jne
add
and
adc
push
nop
inc
dec
inc
add
in
loope
push
fnstenv
jnp
outsb
fisubrl
stos
add
cwtl
cmp
cmp
pop
and
lcall
arpl
imul
xchg
repnz
ret
in
lods
sub
jg
inc
sub
rcr
jg
adc
dec
cmpsl
popl
sbb
faddl
add
stos
lret
test
xor
inc
add
pop
sub
mov
cwtl
lock
addr16
mov
jle
mov
or
das
hlt
in
push
jno
je
movsl
test
adcl
xor
call
inc
add
sbb
and
jno
cmp
aaa
adcl
pop
cltd
add
and
gs
jns
test
mov
add
mov
push
xchg
movsl
xchg
popa
js
and
test
mov
inc
subb
fstpl
test
cmc
add
add
jecxz
dec
or
jp
scas
mov
lcall
adc
inc
xlat
leave
inc
sub
dec
fistpl
jle
cwtl
push
popf
cmp
mov
in
shll
mov
mov
mov
sub
inc
jnp
outsb
xchg
and
insl
mov
lret
and
pop
out
xor
xchg
subb
jns
hlt
xchg
popf
mov
rorb
imul
js
push
insb
jg
insl
xchg
sbb
sub
ret
pushaw
test
jmp
aad
imul
jp
sbb
cld
adc
scas
xchg
iret
sbb
sub
fwait
jge
dec
movsl
xor
outsl
mov
and
mov
inc
cmp
xchg
lret
sbb
jmp
pop
popf
add
in
dec
or
xor
mov
dec
sahf
pop
iret
sbb
jae
pop
loope
xchg
xchg
ja
rclb
mov
xor
decb
outsb
mov
mov
pop
or
dec
jl
aaa
mov
loope
data16
test
and
call
xchg
add
mov
xor
cmp
scas
incl
sub
nop
nop
rcll
push
jo
jg
xor
out
pop
cmp
lcall
pop
lds
sbb
jo
and
scas
sub
and
inc
mov
add
ja
lahf
or
das
xchg
or
test
sub
add
aaa
dec
jne
sub
cwtl
mov
xchg
gs
jo
sahf
jl
mov
sbb
rorb
adc
outsb
movsl
or
xor
xchg
sbb
ja
xchg
push
pop
aas
push
cmpsl
cmp
mov
xchg
stos
cmp
notb
fstpl
test
mov
xlat
cmc
sbb
scas
fnstcw
mov
jb
test
inc
inc
mov
movsb
sahf
jb
out
and
push
mov
in
or
pushf
icebp
xor
jecxz
sub
int
pop
cmpsl
cmp
pop
insl
pop
cld
xchg
jno
pop
or
rcr
mov
mov
cmpsb
push
adc
cmp
pop
pop
adc
fcomp
adc
decl
inc
jb
movsl
sub
adc
fiadds
adcb
les
push
pusha
loop
pushf
inc
scas
add
or
jb
fwait
push
cmpsb
or
scas
fwait
adc
ja
jb
xor
std
lock
outsl
and
in
sti
or
mov
scas
inc
js
or
jge
jge
repnz
inc
mov
cltd
fwait
ret
sbb
jl
jbe
fdivrl
inc
xor
cltd
xchg
movsl
gs
hlt
mov
adc
into
and
rcrl
aas
dec
mov
leave
cmp
lahf
mov
adc
loope
cmp
or
cmc
dec
lds
jne
ret
dec
lea
push
mov
mov
add
mov
dec
pusha
lock
push
lods
repnz
call
bound
sbb
rcrb
outsb
or
add
add
push
sub
ret
insb
arpl
add
fldcw
adc
and
sub
ror
pop
leave
lds
in
es
pop
xchg
leave
aam
test
popa
mov
aaa
rorb
add
fwait
mov
jge
pop
aaa
out
shlb
jbe
mov
dec
and
lock
in
mov
pop
outsl
mov
cmp
aaa
and
pushf
and
pop
inc
adc
mul
dec
mov
xchg
out
sahf
fimuls
movsl
andl
sahf
mull
lods
hlt
scas
and
mov
xlat
cmp
mov
pminub
pop
sub
out
not
and
inc
out
loope
nop
mov
sub
jmp
jnp
pop
xor
int3
loopne
gs
movsl
cmp
pop
mov
jp
fisubrs
aaa
push
outsb
push
jge
clc
xlat
xchg
sbb
inc
mov
mov
cmpsl
push
iret
mov
or
fdivrp
sti
shrl
inc
ljmp
lods
add
hlt
std
sub
sbb
jge
mov
jge
lea
lahf
mov
xor
push
mov
mov
inc
fs
mov
xor
mov
mov
xchg
into
inc
dec
xor
mov
push
or
jp
icebp
das
ja
dec
xchg
adc
sub
in
sub
add
sub
rclb
push
test
cltd
cld
and
movsl
addr16
sti
shl
jg
nop
inc
int3
push
mov
out
and
xchg
jbe
sti
insb
addr16
dec
movsb
mov
andb
xstore-rng
cmpsl
inc
or
sub
xor
cmpsb
inc
lahf
xchg
mov
fcompl
sub
jle
test
mov
shll
call
dec
cmp
xor
movsl
sbb
or
jo
fcompl
dec
adc
rcrl
sub
notl
mov
enter
std
loop
scas
add
push
inc
imul
mov
cmp
lret
pusha
sub
jae
ljmp
and
push
loop
sub
xchg
imul
fdiv
or
mov
repnz
gs
pop
in
mov
jmp
dec
lret
push
addr16
sub
popf
cmc
lds
xchg
mov
push
jnp
scas
mov
les
es
aas
rcrb
inc
xchg
sub
jns
push
repnz
push
mov
add
pop
daa
scas
mov
clc
jbe
lods
add
repnz
scas
fstps
shr
and
add
fimuls
lock
fnstcw
xlat
mov
out
add
mov
call
and
in
lret
mov
movsb
enter
andl
mov
push
dec
in
push
es
insb
and
jmp
jne
in
ret
lods
aad
in
int
adcb
icebp
or
loop
xchg
mov
ds
pop
mov
cmp
inc
mov
xor
cmp
jns
inc
hlt
mov
fs
sub
or
lods
jle
rep
mov
mov
and
out
mov
jno
ret
inc
call
and
fcompl
bnd
test
jge
xor
and
xor
out
les
jl
sbb
sub
inc
hlt
fcompl
sbb
lods
xchg
pusha
sub
xor
cmp
mov
lret
sub
or
stos
dec
fcompl
fucomp
xor
call
push
je
cwtl
add
inc
pop
bound
inc
lds
insb
add
mov
jnp
sbbb
sbb
cmc
mov
xor
jle
ret
fistl
out
push
das
lret
test
mov
int
addl
stc
sbb
sub
fcoms
cmp
pop
into
gs
sub
pop
mov
jg
adc
pop
lret
xchg
test
jg
pop
repnz
pop
inc
movsb
inc
fsts
or
int3
push
add
push
subl
test
enter
js
addr16
push
out
mov
add
or
or
and
mov
scas
iret
jo
lea
test
xor
pop
xchg
sbb
xchg
xchg
rcl
es
push
pusha
sti
pop
je
test
xor
inc
adc
xchg
cwtl
popa
mov
xchg
cltd
pop
movsb
xchg
pop
and
data16
or
push
out
push
inc
jne
jne
iret
xchg
lret
movsl
repz
dec
pop
inc
fwait
in
sub
scas
or
sub
cld
pop
sbb
adc
jbe
outsl
sbbb
lods
cli
hlt
fwait
lret
sub
out
dec
mov
or
mov
call
outsb
lret
jbe
aam
pop
pop
outsb
pop
mov
jp
movb
or
and
mov
insl
mov
add
xor
in
les
add
adc
jae
jno
mov
xchg
and
testl
inc
fmuls
mov
imul
nop
sahf
sub
test
push
mov
stos
xor
jns
roll
push
mov
out
cmpsl
xchg
scas
and
push
mov
lcall
mov
in
jb
adc
jge
cs
ljmp
aad
xor
sti
cmpsl
iret
sbb
stc
mov
ja
cmovle
mov
cwtl
pop
call
dec
mov
mov
add
lret
mov
sub
mov
jmp
inc
and
jmp
pop
xor
jo
sub
scas
xchg
lret
push
repz
inc
loop
xchg
movl
mov
push
aam
fwait
repz
test
aas
add
ds
bound
in
xchg
sbb
jmp
sbb
inc
nop
das
arpl
jecxz
add
imul
movsb
mov
cmp
ja
ret
pop
leave
fnstcw
cmp
pushf
adc
je
shll
push
sti
je
push
cmp
cmp
xchg
jne
push
in
push
scas
cmp
fstpl
fsubl
int
xchg
xor
xchg
in
cmc
enter
out
lcall
push
sahf
mov
out
dec
sub
out
pushf
lods
sub
jmp
daa
pop
out
into
pop
dec
or
imul
loop
push
sarl
arpl
add
xchg
xor
aam
test
adc
fidivrl
sbbl
lret
mov
dec
filds
xchg
sub
mov
xlat
inc
sbb
xor
adc
pop
das
mov
ss
lret
test
imul
cltd
rcl
jl
or
arpl
dec
cmp
dec
cmp
loope
je
mov
jl
xor
mov
test
cli
dec
int
mov
mov
movsl
or
movntq
mov
inc
int3
adc
xchg
popl
test
or
mov
inc
insl
fs
fwait
inc
or
push
or
jmp
mov
mov
out
add
and
fwait
hlt
stos
aam
dec
nop
inc
call
dec
pop
inc
loopne
push
push
inc
mov
fldl
inc
mov
mull
xor
sub
loopne
mov
mov
sub
dec
cld
sub
mov
ljmp
pop
mov
int
fnstsw
cmp
adc
sub
int3
xor
int3
dec
testl
scas
pop
cwtl
stc
cwtl
dec
repnz
into
or
mov
jmp
xchg
mov
push
xchg
pop
mov
and
pushf
adc
cmp
enter
mov
mov
xor
mov
cmc
adc
lea
popa
and
pop
les
xor
xchg
sbb
sbb
sub
lods
inc
add
push
sub
jnp
ljmp
shrl
jmp
outsl
mov
mov
xchg
mov
push
idiv
dec
arpl
ficomps
sub
mov
jae
jns
sub
fldl
int
hlt
cmp
mov
lock
mov
push
mov
aam
js
push
adc
inc
xor
cwtl
push
lea
insl
iret
je
jb
mov
xchg
lds
sarb
push
adc
adcb
or
iret
add
jne
mov
inc
stos
in
in
sbb
adc
inc
or
pop
or
cmpsb
dec
mov
pushf
insb
repnz
into
stc
fwait
dec
mov
popl
mov
xor
inc
dec
je
icebp
icebp
cmpsb
lds
and
xor
dec
hlt
jo
nop
mov
pop
push
pop
ret
fucomp
cmp
xchg
pushf
mov
stos
leave
jnp
insb
inc
dec
dec
cmpb
je
ja
les
sbb
or
sbb
pop
stos
pop
popa
pop
cwtl
cbtw
jl
push
movsb
orps
lahf
sbb
xchg
lahf
add
lods
or
mov
lahf
push
lods
not
test
ret
rol
add
dec
arpl
cwtl
push
dec
sbb
push
outsl
add
xor
ljmp
inc
sbb
pop
movsb
dec
push
adc
sahf
push
repnz
adc
aam
push
jecxz
bound
mov
dec
jle
ljmp
sub
dec
cs
sar
in
push
jnp
sub
into
xchg
cli
or
test
shlb
and
xor
pop
xor
loope
adc
test
call
pop
or
insl
out
mov
pop
rcrw
jbe
mov
and
movsl
lcall
or
ret
adc
xor
jl
sbb
xor
test
dec
lea
js
jno
movsl
sub
test
push
add
sub
mov
adc
cmp
push
jbe
inc
jbe
and
mov
mov
mov
dec
push
mov
push
dec
ljmp
addb
addr16
daa
xchg
mov
cli
push
xchg
stos
mov
mov
subb
mov
pop
sub
fs
ss
xor
mov
xor
xor
dec
mov
dec
popf
jne
dec
insl
ficoms
ljmp
mov
dec
inc
icebp
ret
and
test
int
xor
sub
sub
pop
int3
data16
rcrb
fs
dec
cld
lock
scas
mov
enter
push
mov
jle
mov
leave
jl
inc
and
xor
push
add
mov
lods
bound
lods
clc
mov
imul
cmp
rcl
xor
xlat
inc
mov
cld
jp
loopne
pop
mov
test
sbb
into
out
fiadds
subb
jp
adc
mov
pop
cmpsb
and
or
mov
fistl
scas
cmp
mov
or
lods
xor
sahf
jecxz
push
cwtl
jl
and
clc
sbb
leave
scas
push
into
insb
icebp
mov
sbb
cltd
cltd
in
mov
push
pushf
nop
ret
inc
imul
das
or
mov
outsb
xchg
or
xchg
mov
jg
adc
adc
or
aam
imul
int3
or
pop
push
cmp
add
push
out
jge
dec
nop
push
pop
inc
and
sub
add
or
mov
mov
ss
inc
ljmp
sub
out
xchg
mov
out
sub
aad
pop
clc
fcomip
cwtl
xor
and
pop
dec
or
push
shrl
push
out
mov
mov
mov
jnp
pop
mov
mov
rolb
mov
cmpb
pop
mov
scas
push
add
cmp
cld
fwait
sbb
mov
pop
dec
jb,pn
out
dec
fiadds
test
lods
mov
sub
es
xor
popa
dec
ljmp
push
fstp
leave
js
pop
lods
inc
sbbl
mov
jb
cmp
cmp
mov
arpl
xchg
ja
lcall
inc
pop
xchg
enter
test
int
xor
sbb
sub
lret
sub
dec
psrlw
pop
aad
xor
sbb
cmp
call
push
mov
popf
mov
and
in
ret
mov
sub
fidivrl
pop
and
fwait
pusha
out
subl
lahf
push
mov
imul
ds
aad
pushf
xor
pushf
xlat
rcll
xchg
mov
fwait
push
bnd
bound
ss
ljmp
adc
out
adc
push
inc
push
fs
pop
clc
cli
xlat
iret
subb
movsl
repz
nop
push
adc
lds
sbb
xor
push
pop
loope
sbb
filds
dec
sbb
loope
xchg
out
ja
mov
push
lret
cwtl
or
sahf
add
loope
outsb
in
jae
je
fnstenv
stos
mov
cmpsl
in
sub
shrb
and
mov
mov
arpl
inc
fbld
in
hlt
pop
xor
jl
loop
mov
mov
sbb
stc
cmpsb
les
sbb
bound
jmp
in
or
and
fwait
lret
push
pop
push
add
pusha
mov
inc
pop
jl
and
dec
lea
push
repnz
cmpsl
dec
cmp
decl
in
pop
aas
mov
outsb
cli
fistps
das
lcall
test
inc
pop
mov
mov
inc
iret
call
int3
mov
lods
popl
pop
testl
repz
xchg
cmc
and
sahf
inc
movb
jo
adc
add
adc
iret
imul
hlt
xlat
inc
mov
inc
mov
call
xchg
jecxz
or
xor
out
sub
pop
fadd
shrl
xchg
cs
push
cmp
sbb
jnp
inc
push
lea
add
mov
and
mov
xor
sbb
jg
les
inc
call
inc
lods
aam
inc
cwtl
ljmp
dec
mov
inc
sbb
fsubp
sbb
pop
mov
pop
sub
inc
mov
fdivrs
xchg
jno
iret
inc
out
xor
rolb
sbb
dec
lret
stos
dec
jmp
xchg
cmp
icebp
sub
adc
cmpsb
dec
scas
loope
add
addr16
pop
sub
outsl
cmpl
cmp
lods
test
mov
cmpsl
cwtl
imul
xor
insb
cmc
push
add
mov
push
sub
xchg
push
pop
jmp
add
daa
cmp
jne
sub
jae
ret
daa
mov
inc
xor
aaa
jg
in
xor
repz
sbb
cmp
mov
in
dec
cld
and
stos
inc
mov
mov
xor
rcr
adc
les
out
aam
stos
fwait
xchg
int
dec
adc
pop
lds
movsl
mov
lods
retw
xchg
add
jo
pop
mov
das
addb
imul
mov
push
or
nop
les
cmp
scas
lods
and
add
enter
jb
jnp
jns
or
fcompl
lcall
movsl
push
loopne
mov
push
addr16
mov
test
jb
and
lods
das
xor
in
xor
das
ja
dec
outsl
or
test
loop
sub
test
loope
cmpsl
out
loope
outsl
jb
leave
and
inc
ljmp
dec
test
push
add
add
mov
jecxz
mov
bnd
into
shr
rcll
sbb
push
dec
pusha
div
cmpb
faddl
push
dec
mov
push
dec
xchg
fdivs
call
out
in
or
dec
add
aam
push
mov
mov
lret
mov
int3
push
dec
cmp
push
mov
xchg
xchg
out
in
stc
das
in
push
daa
sub
sbb
sbb
mov
mov
jno
ret
cwtl
pop
xor
mov
dec
or
mov
sti
test
mov
shll
sbb
mov
push
popa
loop
sub
push
cld
cmc
and
or
dec
sbb
scas
and
mov
mov
push
in
xor
xor
pop
mov
cmp
add
jmp
push
cmpsb
into
call
mov
pop
mov
in
and
and
ficompl
pop
inc
sbb
iret
xor
push
inc
inc
je
je
mov
adc
rclb
adc
jl
movsl
fwait
push
testb
cmpsl
add
add
sub
or
sub
fwait
or
add
push
and
cmp
rolb
cmp
sub
add
ljmp
push
aam
mov
ss
mov
add
xchg
cmp
pushf
xchg
jae
adc
xor
cmp
ds
mov
mov
ret
dec
mov
or
add
adc
dec
loop
test
mov
addr16
aaa
jb
andb
movsl
mov
inc
jge,pt
push
fnstenv
js
and
inc
icebp
fistps
mov
std
push
push
negb
xchg
lret
sbb
je
mov
scas
sarb
mov
cmpl
bound
stos
mov
mov
xchg
shlb
sahf
push
inc
lock
push
inc
push
outsl
jns
dec
pusha
xor
movsl
and
stc
xchg
cltd
sub
cs
nop
jnp
loop
nop
roll
sar
test
bound
xor
dec
repnz
jl
daa
lock
icebp
aaa
push
ret
mov
mov
add
lret
sub
mov
cmp
popa
push
sbb
mov
lods
pop
imul
dec
outsl
leave
je
adc
mov
loopne
mov
jecxz
or
add
icebp
repz
sbb
loope
mov
jmp
lcall
and
xchg
or
mov
jmp
dec
and
push
dec
jl
fdivp
and
aam
mov
ja
insl
mov
mov
rclb
cmpsl
pushf
add
pop
test
push
out
test
cmp
pusha
rolb
add
imul
cmp
cli
mov
or
mov
lcall
sti
jmp
std
pop
inc
inc
in
mov
out
test
or
jl
cltd
cmpsl
push
or
popf
dec
sub
cmp
lret
ss
jl
sub
and
inc
fcoms
pop
int3
mov
lcallw
or
and
in
cltd
pop
test
mov
test
lret
jmp
and
jmp
ffreep
mov
pop
mov
loop
mov
sub
shrl
xor
cmp
push
or
jo
inc
xchg
sub
inc
arpl
loope
xchg
shrb
popf
jno
push
shrl
imul
cs
sahf
movsb
insl
pop
fbstp
notb
mov
aas
out
hlt
in
std
push
and
lods
imul
adc
sub
enter
aas
cmp
fdivs
dec
lock
sub
lahf
movsl
inc
repnz
int3
test
pop
in
add
fcoml
les
mov
fwait
pop
mov
cmp
scas
shll
jbe
or
and
mov
test
orb
test
dec
imul
or
fcos
sahf
out
sti
popf
sub
in
mov
sbbb
jb
pop
cld
xchg
cmp
shll
lock
cmp
leave
cmp
mov
xor
push
cmp
cltd
out
adc
icebp
sub
stos
or
add
imul
ss
rep
jecxz
shll
stos
in
movsl
lock
in
aas
bound
leave
xchg
xor
outsb
aam
int3
mov
les
dec
dec
roll
mov
popa
inc
dec
xchg
xchg
and
lods
out
fstps
lret
adc
iret
stos
sti
mov
lret
xchg
push
call
out
rorb
jo
pop
sub
loopne
cmp
mov
mov
ror
lock
add
jae
imul
mov
ret
adc
mov
test
dec
mov
addr16
lods
xchg
mov
mov
mov
pop
or
addr16
fwait
cmp
scas
sbbb
pop
sub
jns
je
jbe
pop
pop
adc
mov
pusha
lds
js
sub
mov
fdivrl
in
ljmp
in
pop
aam
popf
inc
pop
in
movb
xchg
jle
mov
pop
cmc
jmp
sbb
je
pop
push
sbb
test
cmpl
mov
icebp
test
stos
test
dec
fnstenv
mov
in
daa
dec
and
in
jns
mov
inc
mov
stos
call
add
repz
fdivp
jp
mov
mov
mov
push
leave
call
jb
dec
cmp
pop
sub
pop
pop
pop
outsb
cld
insl
lret
mov
pmulhuw
and
bound
aas
sbbb
sub
or
leave
and
popf
adc
rcll
or
mov
rdmsr
or
xchg
dec
pop
add
push
mov
sub
daa
daa
or
sbb
add
sbb
ss
outsb
arpl
aas
and
jo
arpl
lock
ds
mov
adc
push
out
lea
or
lcall
jmp
xor
jge
jnp
pop
push
fistpl
add
in
xchg
xchg
scas
pop
adc
les
aaa
mov
push
xor
inc
lret
arpl
push
jbe
fmuls
in
or
sbb
dec
sahf
mov
cmp
lock
or
lret
ljmp
in
cmp
shlb
fidivl
mov
addl
sbb
add
lret
dec
stos
cwtl
ds
mul
jl
jbe
sbb
in
mov
push
jg
mov
insl
mov
mov
std
jne
push
pop
aas
jo
inc
stc
cwtl
mov
mov
test
stos
xchg
inc
nop
gs
addr16
pushw
lret
adc
pop
jae
out
movsl
paddsb
sub
popa
shr
push
popa
inc
pop
mov
lock
fwait
sbb
cmp
cltd
and
sbb
loop
jbe
popa
std
mov
mov
cmpsl
cld
jnp
test
push
cmpsb
jp
mov
mov
scas
and
and
and
xor
mov
mov
xchg
ror
push
xchg
push
insl
and
mov
pop
jle
mov
inc
fwait
sahf
xor
sahf
in
mov
jno
push
outsb
dec
fadds
es
in
cwtl
leave
fsub
out
sti
xchg
insl
push
xchg
cwtl
fwait
jo
notb
adc
fwait
cmp
mov
or
xor
pop
rorb
add
ds
movsb
sub
or
sub
add
lods
stos
sbb
hlt
cwtl
cld
bound
rsqrtps
and
test
gs
in
outsl
sbb
pop
adcb
pop
out
push
aas
rcr
push
cmpsl
lret
scas
or
sub
and
rcrb
xor
xchg
dec
stc
add
inc
imul
jge
sub
mov
pop
lock
jecxz
aad
xchg
pop
push
pop
sub
mov
sahf
test
dec
out
inc
fidivrl
leave
cld
nop
and
xorb
out
scas
push
cmc
push
xor
mov
scas
and
mov
sub
and
loope
xchg
sub
xor
cmc
out
fisttpl
and
test
sahf
imul
mov
js
test
repnz
or
out
popa
adc
fisttpll
adc
cmp
rcrb
orb
lock
ja
ret
outsb
sar
sahf
stc
jecxz
pop
lcall
jno
lcall
jnp
sbb
inc
ljmp
mov
rolb
adcb
add
pusha
dec
cmp
lahf
mov
xchg
imul
inc
adc
shlb
pop
push
cmp
clc
xchg
pop
or
addr16
mov
shr
lea
jne
jge
sbb
mov
or
addb
sub
xchg
inc
xor
xchg
testl
or
in
and
std
sbb
sub
jp
lret
fisubl
push
inc
and
test
push
jbe
fucomi
and
xor
xchg
and
push
shll
mov
push
orl
nop
bound
mov
ret
out
orb
adc
sbb
daa
nop
std
es
rclb
sub
adc
xchg
hlt
push
jne
cs
lods
sbb
icebp
jp
repnz
cmp
cmpsl
out
sbb
imul
leave
or
fisubs
in
pop
jecxz
sbb
imul
imulb
pop
repz
fs
cmpsl
mov
jbe
int3
jg
mov
mov
outsl
mov
xchg
jo
int3
xor
out
xchg
mov
sbb
pop
mov
xchg
cmp
mov
jbe
add
repz
movsb
out
mov
pop
jno
mov
mov
cmpsb
scas
push
dec
out
push
pop
xchg
push
push
mov
jge,pt
repnz
jmp
cmp
adc
sub
and
fistps
mulb
jnp
push
pop
add
cltd
sub
mov
loopne
and
pop
mov
adc
add
call
jl
pop
fsubrp
adc
mov
shlb
sub
mov
call
lahf
cs
mov
mov
sbb
push
sbbl
jge
enter
push
jo
dec
cmpl
mov
inc
cltd
cmp
orl
test
jne
stos
imul
jae
sbb
sbb
pop
int3
aad
jbe
xchg
arpl
test
mov
or
repz
in
mov
jecxz
in
inc
repz
xor
sub
outsb
xchg
fs
sbb
insl
push
mov
ret
sbb
lock
push
or
fcoml
inc
dec
test
xchg
push
lods
sahf
xchg
xor
ss
pop
sub
cmp
push
inc
iret
ljmp
pop
pop
movb
pop
cmpsb
mov
ds
loope
pushf
jle
xor
mov
mov
sbb
outsb
inc
pop
xor
xchg
inc
pop
adc
jge
addl
nop
icebp
jge
subb
rcrb
js
addb
or
dec
mov
jne
mov
data16
inc
out
sub
mov
jecxz
inc
aaa
pop
daa
jae
inc
or
insb
pop
xor
mov
fsubl
int3
cmc
mov
dec
push
push
mov
mov
int
sbb
imul
repnz
jb
or
mov
push
add
iret
loopne
fiaddl
inc
in
push
and
into
jno
push
lea
fnstsw
lock
xchg
cmpsb
aam
mov
fnstcw
sahf
cmpsl
push
sbb
add
xor
adc
jl
and
stos
cmp
movsb
mov
inc
adc
sbb
pop
lsl
dec
mov
gs
pop
adc
rolb
jmp
shr
sbb
std
dec
pop
fdivrl
mov
pop
mov
scas
insb
mov
insb
push
popa
push
push
cmp
cwtl
mov
adc
in
cmovnp
cmp
cmc
je
hlt
loop
adcb
std
outsl
push
cli
leave
and
lahf
shll
sahf
inc
fistpl
inc
pop
and
xchg
push
mov
mov
dec
push
and
gs
enter
sbb
cmp
cmpb
dec
add
jp
jg
sbb
xchg
mov
and
sub
dec
imul
mov
mov
pop
pop
fwait
cld
mov
xchg
jp
and
push
mov
inc
mov
mov
cmp
test
cmp
mov
div
jns
pop
inc
cmpsb
jns
stos
sbb
sbb
ret
dec
cmp
int3
jne
aaa
int
fsubrp
xchg
pop
xchg
loop
inc
inc
andb
cmp
add
xor
ror
jnp
stos
xor
daa
imul
lret
add
mov
adc
roll
and
aaa
fs
cmp
scas
mov
arpl
into
fisubl
lds
inc
add
inc
inc
addr16
notb
iret
xchg
or
aad
sbb
xor
lcall
adc
das
dec
sbb
push
xchg
int
cmpsb
ret
jb
loopne
or
jns
and
push
adc
or
or
mov
sarb
jge
jbe
ja
adc
pop
repnz
adc
xchg
out
gs
scas
xor
mov
inc
mov
pushf
repz
sbb
outsb
inc
ljmp
jecxz
xchg
je
jle
add
mov
sub
xor
in
mov
sbb
ljmp
imull
bound
fiadds
mov
shll
xchg
mov
cmp
repz
stos
stc
jecxz
int3
out
das
cs
lods
fdivrl
sub
mov
jae
fs
dec
sbb
mov
jns
pop
cmp
cmp
gs
test
clc
leave
hlt
sbbb
stos
fcompl
stc
inc
xchg
jno
test
bound
sub
scas
push
pushf
into
and
or
push
xchg
cmpb
nop
push
or
fs
and
ja
insb
shlb
pop
sbb
pusha
sub
dec
je
add
push
dec
fadds
iret
mov
jb
aaa
adc
xchg
jns
jae
cmp
lcall
jns
inc
xchg
jne
xlat
ret
push
jecxz
out
movsl
or
cmp
adc
xchg
cwtl
mov
cltd
lahf
popa
pop
mov
test
or
xlat
dec
sti
sahf
rcrb
cmp
out
cmp
cli
das
int3
cli
dec
sti
pop
icebp
jge
add
into
or
mov
sub
adc
or
push
movsb
loopne
jbe
push
daa
movsl
cltd
repnz
mov
divb
inc
ss
cmp
insl
sub
imul
push
and
xor
test
and
test
lods
dec
lock
inc
lcall
scas
lret
test
cmp
push
xor
insb
cltd
pop
rcr
dec
sbb
adc
push
sahf
mov
dec
into
sub
clc
dec
and
mov
pop
pop
inc
adc
popf
cmp
cld
inc
stos
push
or
dec
pop
mov
shrl
shlb
lahf
mov
mov
adcb
out
mov
flds
cwtl
notl
test
ja
adc
sbb
cmp
imul
sbb
negb
mov
mov
add
xlat
mov
dec
out
jne
sbb
xlat
inc
imul
add
or
js
sbb
movsl
mov
mov
lret
negl
push
fisttpl
icebp
jnp
lock
loop
fmull
push
or
fsubs
sbb
sbb
and
dec
push
xchg
movsl
test
es
mov
test
dec
sbb
mov
andl
iret
in
mov
lods
loop
xchg
aam
mov
lcall
les
icebp
mov
ljmp
push
aas
push
push
out
dec
adc
mov
mov
xlat
in
das
lret
jle
addr16
xchg
imul
mov
fimuls
mov
adc
adc
stos
mov
jae
das
xchg
icebp
jno
fimuls
adc
pop
outsl
sbb
dec
mov
incb
les
in
lds
push
rcrb
repz
adc
cltd
leave
pop
fistpl
out
inc
mov
mov
pop
ja
movsb
inc
enter
mov
lods
add
xor
lret
jg
xchg
test
lds
test
insl
das
mov
xor
adc
int
adc
mov
xchg
aad
push
loope
jb
push
insl
push
cmpb
xlat
jge
jnp
mov
enter
hlt
jnp
pop
dec
inc
rorl
hlt
clc
movsb
xchg
mov
sbb
pop
sub
es
xor
ja
sbb
sub
mov
mov
xor
inc
jp
stos
xlat
adcb
repz
popf
stos
jge
pushf
insl
jp
inc
cmp
js
xchg
pop
inc
pop
mov
xor
adc
je
mov
out
outsl
add
sbb
mov
cmc
push
push
lods
xor
cmovo
mov
jne
in
adc
out
fcomi
jnp
mov
push
rcr
filds
ret
xchg
repz
sbb
xor
out
in
mov
stos
cmp
cmpsl
sbb
in
rcll
ja
or
leave
daa
jecxz
lods
in
sbb
mov
popa
lret
incb
xchg
xor
lods
mov
repnz
aam
outsb
cmp
xor
jno
lahf
push
iret
clc
and
and
push
ss
jo
xchg
and
push
repnz
xchg
or
and
daa
and
cmc
test
inc
setl
cmp
jg
fadd
push
test
inc
inc
syscall
push
jle
add
cmp
jns
pop
int3
iret
es
fiadds
repz
jecxz
sbb
cmp
mov
ret
lcall
lds
std
in
pop
mov
jns
inc
and
jp
cmp
xlat
enter
ds
xor
push
push
and
cmp
orb
pushf
mov
out
stc
jo
rorb
cmp
ds
inc
icebp
fucomp
mov
fcomps
loop
pop
fsts
pop
push
loop
jg
pop
cltd
fisubrs
das
push
adc
mov
inc
fld
adc
adc
jnp
sub
jne
lock
mov
jae
gs
sub
out
push
rcrl
les
insb
mov
scas
stc
sub
movsl
shll
leave
faddp
cmp
adc
xchg
call
out
xchg
mov
aas
cld
jo
arpl
cmpsb
rolb
mov
xor
pop
aas
mov
jmp
or
adc
fs
pop
mov
inc
enter
cli
mov
lret
adc
cmp
push
je
test
aaa
lret
repz
in
xchg
movsb
pop
jp
int3
jecxz
sbb
imul
add
inc
add
mov
jle
mov
imul
addl
xor
push
mov
mov
sahf
lds
mov
cld
pop
pop
lcall
mov
lcall
or
sarl
mov
sbb
sub
xchg
adc
cmc
enter
in
dec
rolb
fcomps
cmp
fcmove
fiaddl
cmp
mov
loope
mov
mov
out
xchg
jecxz
popf
dec
and
sub
xchg
std
mov
sti
xchg
popf
ja
movsl
arpl
call
xor
inc
inc
add
cmp
jle
adc
sub
adc
sbb
or
sub
fidivrs
jmp
test
leave
mov
mov
movl
cltd
lret
testl
pop
scas
call
sub
dec
jg
adc
fldcw
inc
pop
inc
push
lds
cmp
push
leave
sub
fisubrl
jp
push
data16
mov
loop
push
mov
jns
or
mov
sbb
xchg
fsts
gs
push
jno
out
mov
ss
vmptrst
sbb
pusha
add
mull
ja
outsb
push
rol
mov
sub
ret
outsl
pop
jne
mov
push
fs
stc
sub
hlt
mov
loop
cli
jno
adc
adc
mov
fstl
into
push
jae
mov
mov
fistl
xor
ret
mov
jno
mov
ds
or
out
jge
es
icebp
in
mov
jecxz
pop
sub
insl
sub
imul
mov
imul
xchg
mov
dec
es
xor
pop
adcl
adc
push
hlt
fldl
stos
xor
decl
mov
jp
test
fisubl
test
call
sbb
mov
gs
mov
fidivrl
insb
lds
cmp
pop
shlb
xchg
arpl
cld
mov
nop
xor
scas
xchg
and
and
pop
and
mov
icebp
js
inc
mov
lret
sub
adc
test
and
cmp
pop
dec
mov
xor
sub
cwtl
push
roll
add
fdivl
and
jns
mov
je
call
mov
pusha
sub
ss
enter
pop
or
ljmp
mov
jle
cmc
and
imul
adcl
mov
mov
inc
mov
dec
sub
jle
push
jmp
test
repz
push
iret
or
shrl
and
add
call
pushf
mov
out
cmp
out
xor
lret
or
sub
aaa
in
stos
or
lret
mov
shll
mov
push
outsb
aas
jp
out
les
es
jl
bound
fsubl
inc
jmp
push
dec
jnp
add
push
sbb
inc
sbb
pop
push
mov
mov
imul
cld
addl
fadd
mull
aad
iret
sbb
push
mov
repz
sbb
cmpsl
mov
int
scas
push
mov
pop
inc
add
dec
shr
pop
jno
pop
inc
icebp
sbb
xchg
loope
es
inc
lods
jae
or
lret
outsl
mov
jo
jmp
das
jb
outsl
and
pop
sbb
cli
jecxz
push
ljmp
fcmovnb
aad
push
rcll
sbb
ret
add
mov
lret
notl
dec
fisubs
andl
or
xchg
mov
and
loopne
xlat
ljmp
and
mov
adc
jecxz
push
incl
ljmp
xchg
sti
lods
jbe
int3
xchg
fwait
xor
and
inc
out
ljmp
icebp
add
sub
daa
bound
pop
push
sbb
popa
push
pop
jbe
and
pop
sub
dec
push
lret
lret
sbb
daa
call
iret
imull
es
or
sbb
test
mov
jmp
mov
les
shlb
pusha
nop
mov
xlat
push
xor
pop
adc
outsb
cli
ss
jae
xchg
mov
insl
fisubrs
xchg
int
xor
loopne
push
repnz
jmp
aas
mov
jge
xchg
push
enter
jmp
sti
hlt
sub
in
scas
aam
mov
push
popf
mov
and
shrb
movsb
jl
and
mov
das
ds
insl
push
mov
push
in
xchg
jl
push
test
pop
les
stos
outsl
dec
dec
inc
jge
inc
add
xchg
nop
jle
les
or
or
sbb
fimull
sub
call
test
shrb
stos
lds
insb
sbb
xorl
push
sbb
dec
mov
imul
getsec
dec
data16
clc
std
xor
lds
sbb
loopne
out
xor
mov
xchg
repz
or
ret
mov
inc
dec
adc
sbb
mov
out
in
push
push
add
data16
je
add
scas
addl
push
mov
mov
push
or
ja
jle
push
cmpsl
push
jb
dec
add
jg
xor
ss
sub
sub
jb
adc
sbb
jno
cs
jg
mov
stos
mov
ss
xchg
push
mov
xchg
add
push
mov
push
mov
push
movsb
push
imul
imul
push
pop
cwtl
call
aad
cmp
pop
push
iret
cs
adc
dec
sub
sub
fcmovnbe
add
jge
mov
es
ljmp
sbb
pop
loop
out
dec
js
cmpsl
stc
mov
sbb
sub
jns
jae
lret
mov
jl
push
pop
scas
push
leave
repz
mov
xor
sbb
iret
ljmp
pop
idiv
push
or
dec
jb
cmp
push
aas
and
ljmp
mov
test
mov
push
pushf
inc
mov
ljmp
addb
out
lahf
shrl
jae
fiadds
loop
mov
repnz
mov
repz
daa
adc
push
cs
testl
sub
xor
cmpsb
in
lahf
xchg
cmpsb
inc
push
push
imul
xchg
cmc
movl
test
leave
je
inc
add
cmp
and
mov
clc
push
xchg
call
mov
pop
lock
xor
cmp
rolb
mov
test
push
sub
xor
jo
mov
add
xor
jnp
jns
loopne
cli
mov
sub
movsb
flds
testb
push
outsl
mov
add
fisubrl
cmpsl
jl
dec
and
sub
shrl
inc
out
xor
xchg
addl
dec
call
rcrl
in
jge
aad
fwait
inc
hlt
inc
dec
mov
push
fmuls
loop
mov
repz
and
mov
mov
mov
adc
testb
popa
and
std
xlat
cld
lock
mov
xchg
sbb
jb
xchg
lret
mov
fildll
xchg
lahf
jg
iret
adc
scas
or
addr16
xor
dec
mov
imul
imull
scas
mov
mov
mov
cltd
or
pop
mov
enter
sub
mov
and
cmp
je
and
push
adc
push
mov
cld
adc
fnstenv
sub
jbe
imul
cli
mov
movsl
sub
fsubr
jbe
xor
xor
pop
dec
adc
pop
cmpsb
mov
movsb
outsl
fs
push
movsl
fs
adc
push
fistps
lahf
sub
dec
addl
arpl
bnd
push
xor
icebp
cs
and
mov
add
jle
test
inc
call
sahf
mov
push
sbb
inc
sbb
mov
mov
jecxz
out
les
lds
or
std
jg
ljmp
xchg
inc
xchg
rcrl
mov
ffree
pop
xchg
adc
shrb
roll
out
ljmp
out
and
cmp
outsb
and
xchg
push
lds
add
push
adcl
add
notl
pop
xchg
fdivrl
mov
inc
mov
adc
insb
pushf
dec
xlat
cld
inc
test
test
and
aad
pop
jge
jmp
repnz
pop
pop
aad
cmpsb
sbb
bound
fadds
mov
dec
mov
push
in
or
inc
pop
scas
or
xor
fldenv
xlat
ja
iret
es
dec
xchg
test
inc
xor
push
rclb
push
pop
nop
add
adc
or
ficoms
jnp
jbe
in
xchg
dec
ds
xchg
mov
dec
test
outsb
pusha
loope
cmp
mov
in
add
adc
pop
fstpl
mov
mov
orl
dec
pop
push
pop
pop
cmc
mov
mov
out
push
mov
fwait
inc
mov
xor
cld
xchg
shl
mov
cmp
lods
sarl
inc
imul
dec
adc
fadd
cmp
mov
inc
pushf
adc
ss
imul
imul
jae
pop
gs
pop
jb
mov
cmpsl
mov
insl
xchg
xchg
mov
sbb
fldcw
dec
jb
ss
jmp
pusha
out
pop
rcl
inc
xor
xchg
cmpsl
nop
jl
repz
mov
inc
push
iret
fxch
pop
xor
loop
popa
mov
push
add
out
pop
test
andb
mov
aas
push
cmpsl
jl
lods
sub
mov
incb
fsubrs
pop
xchg
testl
data16
shll
fwait
in
jb
mov
adc
xor
sar
sbb
in
jp
lods
sti
daa
enter
leave
push
mov
jmp
mov
outsl
dec
dec
mov
push
lods
mov
ret
push
cmpsl
repz
sub
mov
jnp
xchg
cwtl
jbe
nop
or
xchg
sub
std
inc
inc
bound
xor
push
mov
outsl
enter
mov
inc
dec
ja
cmpsl
xor
stos
jecxz
ficoml
adc
jnp,pn
mov
and
test
orl
adc
xchg
dec
mov
mov
repnz
in
push
and
lcall
insl
jae
lds
mov
sbb
pop
xor
dec
jp
push
imul
and
out
rorb
imul
shll
imul
loop
xor
jp
xor
add
or
jnp
xchg
jmp
sbb
jno
aam
je
xor
ret
daa
push
mov
fnstcw
push
rcl
cmp
pop
sbb
fistpll
clc
ret
xchg
add
or
sbb
cmp
xchg
lret
mov
cltd
sti
jne
xchg
das
orl
cmp
fidivrs
insb
sbb
xor
jp
push
insb
mov
clc
add
jae
test
adc
pop
out
call
mov
popa
push
lods
leave
outsl
ss
js
mov
and
jb
mov
popf
fdivrp
add
insb
ret
fs
dec
js
lret
jp
fwait
mov
call
and
dec
outsl
add
out
cmc
leave
jecxz
dec
pop
jo
mov
push
lods
incb
xchg
and
push
mov
int
push
push
jp
or
daa
and
pop
leave
jmp
addb
cli
sub
ret
cmp
xor
test
shrb
sbb
dec
push
outsb
out
mov
cld
ret
xor
sahf
or
test
iret
mov
dec
push
pop
mov
jb
mov
pop
cs
in
inc
jae
mov
mov
xchg
push
mov
push
jecxz
lret
or
dec
jle
or
jbe
push
mov
nop
sbb
mov
push
jnp
pop
mov
push
in
mov
mov
jmp
dec
arpl
mov
hlt
test
leave
int
es
jne
test
cwtl
cmp
xchg
fldenv
sub
pop
jbe
xchg
jno
xchg
sti
sar
dec
mov
dec
xchg
leave
push
dec
mov
jne
sub
mov
test
out
push
cmc
add
daa
xor
and
lock
out
movsl
and
xchg
repnz
lret
or
sbb
aam
xchg
jnp
mov
shrl
pop
mov
jmp
mov
scas
js
ljmp
xchg
fistl
push
out
shl
mov
add
mov
add
mov
add
shrl
test
sbb
mov
cmp
lock
fldt
or
rcll
dec
dec
pop
fld1
icebp
mov
shrl
mov
xor
fbld
mov
and
dec
mov
cwtl
adc
aad
loopne
mov
fnstcw
inc
push
push
jno
clc
cmc
addr16
rep
pop
sub
or
inc
or
fidivrl
pop
aam
add
into
dec
dec
mov
mov
out
push
insb
inc
cld
xlat
mov
fistpll
mov
mov
test
popf
mov
lcall
jne
push
inc
movsb
mov
adc
insl
mov
jbe
movsl
mov
xchg
test
xor
cld
hlt
cmp
pushf
cmp
lret
and
cmpsb
push
jb
fwait
or
clc
lods
jnp
ja
jne
int3
jno
stos
jnp
leave
leave
aad
xor
push
hlt
into
add
mov
dec
addr16
scas
inc
cli
or
divl
lds
jnp
or
lea
shr
ljmp
mov
repz
daa
and
jbe
mov
add
fsubl
faddl
test
xchg
xor
lods
fistpll
test
pop
pop
cltd
sub
fsubr
dec
test
lahf
push
push
cmp
lods
push
ljmp
push
sbb
es
or
sub
mov
lods
mov
push
lahf
in
cli
fs
jg
xlat
and
out
loope
mov
shll
inc
jge
dec
inc
inc
push
mov
repz
dec
mov
push
pop
imul
pop
cmp
pop
inc
fwait
es
cmp
mov
xchg
loopne
aaa
popf
scas
adc
jbe
shrl
mov
aaa
xchg
repnz
and
enter
out
hlt
adc
mov
and
mov
movsl
mov
jge
test
pop
jmp
addl
outsb
lock
jne
out
in
cmp
jle
add
jne
xchg
adc
cli
aas
fwait
jmp
cs
push
cmpsb
xchg
fists
stos
mov
nop
push
ja
rcrl
ret
push
loope
test
pop
xor
cld
ljmp
cmpsb
mov
fwait
push
dec
mov
xlat
mov
xchg
mov
in
aas
outsl
in
leave
stc
out
xlat
fistl
push
adc
push
aas
mov
and
cwtl
xor
mov
js
fimuls
jge
es
push
repnz
xchg
inc
xor
clc
push
sbb
cmp
lds
loop
cmp
inc
js
xor
iret
jno
dec
pop
mov
mov
sti
push
inc
or
gs
lret
cs
dec
ret
cmpsl
mov
xor
xor
push
test
lods
repz
flds
cmpsb
aas
mov
jo
pop
into
dec
ss
clc
aaa
dec
or
push
cmp
cmp
push
repnz
inc
lods
ss
dec
cwtl
ljmp
fmuls
jmp
shlb
mov
xchg
xchg
and
adc
sub
adc
mov
push
mov
or
or
add
mov
lret
es
in
xor
sbb
mull
aam
dec
jnp
xlat
fcompl
fnstenv
aas
pop
mov
cli
hlt
lock
push
loopne
cmp
fsts
jbe
and
sbb
or
mov
xor
loopne
shrb
paddq
sahf
fld
pop
jg
mov
mov
repnz
gs
popf
mov
sub
mov
rorb
cld
scas
or
sbb
leave
sarb
popa
lret
fsubs
lahf
sub
dec
ret
mov
bnd
or
pop
mov
insb
cmp
loop
clc
cmp
sbb
fwait
test
cmp
mov
add
inc
mov
popa
and
lahf
adc
adc
jns
arpl
fs
int
sbb
xchg
adc
xchg
cmpsl
fucomip
fsts
and
jle
jnp
gs
xor
sub
cli
repz
loop
test
dec
pop
popa
adc
insb
out
sub
jmp
cmp
out
inc
lahf
sub
cltd
shll
jo
les
mov
fcoml
into
fdivrs
in
add
cmp
daa
cmc
and
test
jecxz
pop
movsb
clc
inc
adc
scas
add
aam
shrb
cli
adc
adc
mov
lahf
lods
fists
mov
rcrl
xchg
sbb
sub
push
sahf
imul
loope
pop
push
scas
xchg
orps
mov
and
mov
sti
addr16
lods
ficomps
faddp
mov
cwtl
sbb
subb
out
int3
lsl
lret
mov
mov
xchg
jae
sub
iret
mov
jge
cmpsb
mov
mov
mov
mov
cmpsl
ficomps
mov
imulb
cmp
cs
loop
iret
add
std
jbe
stc
cs
xchg
into
pusha
rol
sahf
insb
fadds
inc
divl
fnsave
or
jae
iret
inc
mov
out
gs
xlat
cmc
js
cli
mov
rol
popf
fisubs
lods
sub
mov
popa
ss
daa
push
out
mov
jmp
jmp
cs
and
xchg
or
adc
in
xchg
popf
pushf
scas
je
cmc
negl
cs
mov
shrl
pop
sub
xchg
int3
inc
xor
mov
sub
or
popa
icebp
int3
xchg
addr16
mov
or
xor
adc
lds
lret
adc
fiaddl
pop
xor
shll
xchg
imul
test
adc
or
xor
jecxz
pop
bnd
dec
movsl
test
int
add
fs
imul
add
das
sbb
xor
hlt
or
pop
or
and
mov
mov
jnp
mov
rcl
push
push
or
mov
ret
scas
or
and
pop
movsl
leave
lret
adc
jl
cmp
adc
lea
movsb
cld
shr
rcll
sbb
in
loopne
scas
xor
jno
sub
lods
aas
inc
movsb
into
dec
mov
and
or
jbe
loope
jmp
or
aam
shlb
pop
push
cwtl
sub
enter
xor
roll
aad
cmpsl
es
inc
add
movsl
dec
jge
test
dec
xchg
int
popf
out
add
mov
and
mov
sbb
pop
lea
mov
leave
adc
rolb
add
sbb
in
dec
das
icebp
sahf
fcoms
and
iret
pop
in
mov
dec
adc
cmpsb
mov
jno
rcrb
lock
and
mov
pusha
dec
mov
rorb
xor
push
xor
mov
xchg
loopne
fists
jns
vmaxps
popa
pop
push
imull
lods
inc
pusha
push
rcrb
mov
lods
adc
pop
mov
push
dec
pop
movsl
shlb
popa
pop
ss
movsl
lods
push
rorl
mov
or
fcomps
repz
bound
mov
push
mov
movsl
ja
dec
sub
pushf
pop
pop
ret
cmp
jns
add
xchg
pop
or
test
out
hlt
xchg
aam
call
mov
repz
fldt
in
pushf
fstpt
lahf
push
scas
fbstp
jbe
lcall
mov
jecxz
out
cld
bound
inc
fs
jecxz
xor
call
adc
inc
or
lock
jae
add
push
movsl
mov
out
mov
mov
lcall
pop
or
sub
fs
lret
shlb
mov
mov
dec
mov
add
hlt
jbe
js
outsl
inc
xchg
xor
and
cmp
jge
push
adc
cli
xor
test
mov
and
daa
testb
mov
stc
sub
js
fldt
jge
iret
into
dec
ss
inc
ja
std
or
sub
cld
sahf
mov
jmp
cmp
or
std
mov
hlt
dec
add
xchg
push
insl
sbb
pop
xor
je
jb
mov
cltd
stos
arpl
xchg
ja
ds
enter
fwait
mov
je
lods
shufps
ss
ljmp
icebp
xchg
sub
into
lea
arpl
push
fsubrl
cmpsl
fiaddl
cmpsb
addl
xor
mov
data16
ja
notl
inc
mov
es
mov
or
lods
mov
rcr
push
stc
xlat
push
out
add
dec
mov
mov
inc
test
and
mov
push
mov
mov
and
int
lret
jns
andb
mov
sub
enter
ficomps
pop
rcrl
test
jl
adcb
pop
push
xor
lahf
add
add
jb
jmp
cltd
sbbb
idiv
inc
sbb
mov
stc
jno
je
mov
add
jmp
push
push
jg
push
inc
out
test
cli
cmc
lret
xorb
mov
jp
ljmp
jo
pusha
push
mov
stos
roll
lret
fistpl
sbb
xchg
cmp
cwtl
mov
adcl
and
test
mov
fs
add
mov
fstpl
aad
adcb
add
mov
outsl
push
mov
addl
xchg
ss
popf
call
mov
jge
push
je
movsb
lret
push
fsts
mov
cmp
cmp
xchg
mov
adc
in
mov
push
insb
pop
mov
imul
mov
daa
faddl
push
pop
imul
popf
popa
test
and
sub
add
xchg
push
jnp
dec
lds
add
cmpsl
pop
stos
adc
xor
jecxz
ss
xor
cmpsl
xchg
lods
test
push
cli
xchg
mov
push
loope
xchg
decb
inc
and
xchg
pop
push
je
sarb
cmc
inc
sbb
pop
xchg
and
lds
pop
xchg
cmc
lcall
loope
lods
adc
mov
dec
aad
sub
push
jae
mov
test
sbb
test
or
cmpl
cmpsb
daa
cmp
jnp
pop
xchg
adc
push
inc
lret
aaa
adc
lock
push
adc
lcall
in
adcb
pop
dec
and
out
sub
push
fidivl
jg
rolb
gs
sub
push
pop
jne
loopne
mov
push
aas
or
scas
sbb
fstps
lods
push
aam
jnp
dec
scas
hlt
mov
dec
fistl
jbe
or
cwtl
daa
out
cmpsb
ret
popa
mov
lretw
xchg
ds
xchg
fildll
popf
lret
fdivl
jns
int
mov
push
push
dec
mov
in
inc
pop
addr16
dec
xlat
or
movsl
xor
pusha
mov
ja
mov
aam
xor
dec
push
das
pop
adc
dec
cmp
pop
outsl
jno
xchg
fwait
movsb
mov
stos
ljmp
insb
cmpsl
bound
jno
fwait
push
or
repz
jne
mov
test
and
inc
jp
mov
mov
sahf
sub
ror
xor
and
pushf
in
mov
repz
jne
adc
sbb
pop
stc
in
mov
ret
ficomps
push
mov
sbb
sub
push
iret
rcrb
out
push
inc
cmp
js
or
mov
imul
or
cltd
pop
jne
push
nop
addr16
lock
jne
js
inc
push
lcall
hlt
mov
fwait
hlt
in
push
sbb
inc
mov
push
loope
adc
daa
das
dec
xor
mov
add
dec
cmp
dec
fisttpll
mov
out
adcl
inc
and
jno
push
push
enter
jp
lret
jb
in
or
sbbl
sbb
push
mov
stc
ja
jne
jnp
jns
into
push
movsb
cmpsw
push
int
xchg
ror
nop
sti
sbb
fbld
inc
insl
sbb
sti
in
mov
inc
xor
sub
dec
sbb
test
cs
pop
daa
mull
stos
scas
xor
es
les
ja
xabort
daa
test
cmc
jno
mov
addl
mov
lock
cltd
loopne
shrb
int3
dec
mov
mov
sub
test
xchg
add
xor
daa
cmc
push
pop
sahf
imul
pop
push
fisubrs
xchg
or
inc
ror
ret
js
cmpsl
sub
repnz
cwtl
lret
rcrl
and
mov
mov
lcall
das
je
mov
sbb
lret
orl
fidivl
sub
lods
lds
sbb
fstps
dec
xchg
mov
pusha
sbb
negl
mov
dec
out
rcll
mov
xchg
std
fists
adc
sub
aas
lcall
push
popa
sub
xchg
ljmp
or
lahf
sti
popa
shrl
lcall
dec
aam
mov
xor
test
in
gs
dec
cmp
mov
push
mov
mov
mov
out
push
je
mov
lea
mov
enter
jns
out
add
int
mov
jle
mov
add
lock
cli
cmpb
mov
ds
daa
pop
outsl
mov
shl
adc
shl
push
enter
mov
pop
insb
push
sub
rorb
stos
clc
cs
pop
mov
out
sbb
xchg
jb
push
jo
sbb
inc
in
cmp
xchg
mov
fwait
xchg
arpl
lea
andl
and
mov
das
add
add
loop
out
adc
mov
push
orl
shll
mov
popl
in
cmpsb
hlt
loopne
and
negl
cwtl
mov
nop
in
cmp
and
push
dec
xchg
adc
dec
mov
inc
xor
mov
push
adc
ljmp
add
add
sti
sub
ljmp
scas
mov
mov
add
out
out
pop
imul
pop
cs
movb
dec
jge
and
cwtl
popa
imulb
lahf
dec
test
fwait
mov
in
mov
into
xchg
pop
loopne
push
push
out
pop
push
outsb
faddl
ss
jno
pop
lods
and
fisubrl
xchg
stos
mov
lahf
mov
lods
jb
fucomip
cmp
xor
fisttpl
adc
in
lret
jns
mov
add
cmp
push
testl
stos
push
fdecstp
jl
xchg
andl
test
fstpt
mov
stos
cmp
xchg
cmp
pop
fwait
sub
push
add
xor
aaa
loopne
outsl
pop
pop
add
scas
cli
loopne
pop
lcall
xlat
ret
das
mov
push
cmp
add
jl
pop
shlb
adc
cmc
jno
test
loope
lahf
jae
push
pusha
mov
cmp
jbe
jl
mov
jp
lret
cmpsl
adc
daa
sar
jns
jbe
sub
pusha
adc
inc
test
ret
adc
sbb
iret
dec
mov
xor
adc
inc
jl
jmp
movsl
cmp
pop
mov
push
jg
pop
xchg
lock
popf
sbb
rcrb
dec
daa
jnp
stos
push
rclb
inc
sub
insl
push
pop
aam
push
cld
jmp
sub
cli
sub
arpl
lods
jb
mov
or
adc
add
es
mov
mov
jg
xchg
negl
xlat
dec
mov
stc
mov
cmp
rcll
sbb
fildl
mov
sbb
mov
pop
out
rcl
cmp
fs
inc
sbb
pop
mov
pop
ss
push
sarb
or
leave
cmp
mov
out
sbb
movsb
dec
cs
push
popa
or
mov
shlb
xchg
aaa
rcrb
add
mov
pop
inc
sub
lahf
das
pop
cmpsl
sub
mov
ret
sbb
dec
dec
and
into
mov
xlat
jl
in
xchg
fdivl
lahf
popf
call
into
sub
lret
sub
ljmp
fldt
test
xor
addb
stos
xorl
xchg
sarb
fdivrl
mov
push
ret
mov
dec
pushf
mov
jbe
pusha
inc
or
fistps
out
or
fnstsw
lea
fcomps
mov
out
adcl
mov
das
pusha
fs
pop
cmp
mov
xchg
xchg
mov
jo
inc
lods
outsl
push
cmc
rclb
ss
sub
inc
adc
ljmp
scas
xchg
cld
das
daa
inc
push
push
rol
cmp
sbbb
js
push
test
jmp
inc
pop
divl
add
inc
sbb
lock
cmp
cmc
sbb
cs
mov
clc
lcall
jg
sub
icebp
inc
sub
leave
popf
jae
cmpsb
push
jg
stc
outsb
add
push
push
sbb
jb
cmp
lods
ss
sti
scas
dec
cmp
inc
pop
mov
and
pop
lahf
mov
xchg
xchg
int
mov
xor
adc
jbe
scas
dec
add
lods
and
cmp
adc
add
mov
mov
adc
jmp
cmpsl
push
jmp
sti
sahf
call
cmp
xchg
test
aad
cmp
cwtl
push
dec
mov
stos
sbb
push
dec
jb
aas
bound
lret
mov
adc
push
outsb
ret
fwait
clc
jns
xor
jns
dec
mov
sub
xchg
gs
push
or
mov
mov
mov
jb
aam
jno
cmp
add
inc
lret
test
mov
fstl
int3
jae
adc
dec
pop
xor
sub
add
sub
mov
data16
push
out
lock
adc
mov
sub
sbb
add
loop
jecxz
mov
inc
enter
ficompl
mov
dec
hlt
and
iret
dec
aas
fadds
repz
mov
push
mov
clc
dec
out
jnp
mov
insb
sub
adcb
repz
decl
mov
mov
je
lcall
loope
mov
sub
and
sub
push
and
push
sti
dec
xor
faddl
es
sub
jns
xchg
pop
ficoms
jge
cli
paddsw
ret
insb
mov
test
sbb
loope
jge,pt
xchg
arpl
cmpsl
pop
mov
add
sarl
mov
and
in
mov
jg
loope
pusha
sub
test
imul
imul
dec
mov
adc
test
cltd
test
mov
xchg
cmc
push
arpl
sub
or
inc
mov
pop
mov
inc
out
pusha
mov
decb
push
mov
pop
rcrb
sub
out
xchg
adc
stos
push
mov
rorb
rcl
or
xor
into
xor
dec
rclb
cmc
mov
aam
fisubrl
or
popf
hlt
jb
lcall
cmp
xor
add
sub
add
and
sub
cmp
add
loopne
and
jo
out
xchg
jo
int3
fdivrs
ret
mov
push
push
scas
out
shr
and
scas
or
lahf
mov
cmp
or
mov
popf
mov
xchg
ds
stos
cmp
mov
outsl
loopne
aaa
push
jns
pop
mov
mov
xchg
or
sub
fstpl
mov
and
and
das
pop
mov
fadds
xchg
jg
fcompl
add
xchg
mov
scas
into
fwait
mov
xchg
pop
sub
aaa
je
jne
mov
cmp
stos
jle
es
pusha
adc
mov
repz
imul
xchg
popf
inc
test
ret
sarb
stos
mov
cld
repz
mov
or
mov
in
mov
movsb
sti
lea
sbbl
or
ljmp
icebp
push
or
mov
jns
fcompl
mov
movsl
push
jne
cli
mov
xchg
ja
fnstsw
js
mov
push
repz
push
inc
adc
pop
sub
mov
mov
mov
scas
pop
sub
scas
push
add
shlb
jp
xchg
addr16
dec
mov
or
popa
push
inc
test
sahf
xchg
call
movsl
mov
push
and
movsl
push
jl
mov
adc
test
icebp
sbb
movsl
jl
fildl
pop
insl
fwait
pop
push
jo
add
inc
insb
insb
sub
scas
lret
mov
inc
into
cmp
negb
jns
xor
push
sti
pushf
dec
dec
inc
xchg
mov
inc
jns
lea
dec
mov
sub
jns
scas
xor
enter
push
add
add
mov
dec
cmp
mov
icebp
je
dec
insl
test
test
jge
outsb
movb
cmp
fnstcw
ds
xchg
sub
adc
jbe
adc
dec
ds
pop
mov
out
ja
and
dec
push
xor
mov
lock
push
dec
shlb
test
cmp
adc
sbb
push
stos
fmuls
movsb
and
ljmp
leave
jno
insb
xchg
test
daa
mov
testb
xchg
push
mov
cmp
jecxz
mov
mov
ret
shlb
dec
std
pop
lret
xor
add
jmp
aad
ljmp
nop
inc
outsl
icebp
out
clc
xchg
sub
add
loop
orl
dec
jp
cmp
addr16
mov
jns
adc
pop
stos
lods
lds
push
mov
fstl
arpl
or
daa
jb
cmp
hlt
dec
cli
or
pop
adc
sbb
cld
lds
mov
pop
ds
cld
sbb
mov
lea
test
adc
lcall
mov
cwtl
fdivs
xlat
imul
lret
ficoml
jo
mov
dec
out
cli
setnp
pop
adc
push
ljmp
fisttpl
sbb
enter
mov
mov
test
mov
jl
mov
es
mov
mov
cmp
popf
test
movsl
and
std
ds
and
ficoml
ds
sahf
inc
jae
pop
in
sub
push
or
inc
mov
push
outsl
mov
sbb
scas
dec
fcomps
xchg
in
and
les
mov
push
pop
add
fwait
pop
mov
adc
xor
mov
leave
push
jle
aas
dec
add
negb
jbe
cmp
xchg
sbb
mov
movsb
sbb
insb
stos
mov
pop
fistpl
andl
jge
test
popa
pop
adc
fistps
sbb
loopne
outsb
xchg
mov
filds
dec
and
cmpsb
aam
or
add
inc
mov
add
mov
out
popf
add
shl
shrb
clc
rcrl
rorl
sub
mov
aaa
and
push
cmp
loop
and
hlt
add
xchg
lods
or
std
inc
lahf
fisttpl
nop
hlt
cmp
rol
add
inc
cmp
imul
adc
cmp
add
fwait
add
xchg
mov
mov
stos
or
cmc
inc
fsubp
mov
ja
sahf
fsubrl
xor
push
dec
out
fcmovne
xchg
loope
inc
andl
pop
enter
clc
lcall
aam
xor
aas
sub
inc
clc
fmul
sbb
jmp
pop
stc
add
enter
lahf
adc
push
xchg
aas
arpl
addr16
sbb
or
or
jmp
sbb
sarl
or
push
sbb
call
or
int3
mov
ja
mov
dec
xchg
je
fdivrl
stos
stc
call
sbb
std
daa
xor
test
dec
stos
frstor
sbb
insl
sbb
jmp
stc
lods
cmp
pop
or
fwait
test
xchg
pop
xchg
testl
mov
mov
jecxz
cs
mov
sbb
mov
scas
xor
adc
dec
lock
jae
mov
lock
xchg
sti
mov
scas
arpl
pop
push
push
aam
das
movsl
xor
ret
sub
cmp
out
dec
push
retw
jb
or
bndstx
enter
fwait
inc
jo
popf
addr16
outsb
xor
inc
mov
jmp
xchg
mov
addl
push
lods
sub
xchg
test
jp
cmp
cmpsb
sbbb
adcb
cmpb
jnp
js
jl
mov
loopne
and
push
repz
int3
mov
mov
mov
cmc
push
mov
push
in
xchg
iret
inc
xchg
jno
mov
pop
pop
push
jns
arpl
adc
lret
and
pusha
cmp
xorl
movl
cmc
cwtl
gs
hlt
jns
add
and
xor
xor
push
sahf
shlb
dec
test
adc
loopne
mov
sti
push
or
jmp
mov
sub
mov
xor
sbb
add
clc
mov
adc
mov
fucomp
push
scas
add
dec
jmp
fsub
neg
loope
jmp
jl
fwait
imul
or
mov
int
fiaddl
clc
scas
inc
popa
popa
sub
insl
in
test
xlat
cmp
frstor
sti
test
push
adc
imul
sbb
push
mov
outsb
movsl
je
push
fldt
aam
inc
xlat
add
inc
scas
jo
dec
jne
mov
test
inc
inc
xchg
mov
lock
xchg
cmp
dec
ss
shlw
inc
mov
leave
cltd
pop
dec
dec
repnz
xor
mov
outsb
sub
jo
xchg
inc
inc
mov
jge
leave
jno
in
xor
adc
xor
mov
jmp
nop
inc
inc
out
jns
inc
enter
mov
insl
test
lods
sbbl
loopne
rorl
add
push
mov
in
test
daa
test
repnz
mov
dec
jmp
aas
xchg
aas
mov
pop
pusha
test
and
les
in
adc
fstl
in
mov
add
adc
inc
and
sub
popl
nop
lods
test
int3
jnp
inc
scas
cli
jg
mov
xchg
or
cmp
das
loope
xchg
rcr
lahf
out
mov
sbb
iret
int
mov
addr16
jl
xor
ja
and
jmp
ja
mov
sbb
and
ljmp
pop
xchg
into
dec
dec
push
rcl
xor
aad
jg
loopne
ret
out
and
mov
stc
push
rolb
sub
stos
adcl
je
jne
fs
jmp
xor
popl
loopne
add
ret
pop
inc
insl
cmpsb
sub
jmp
mov
js
pop
out
mov
add
repnz
add
fwait
std
scas
test
outsb
adc
leave
fwait
sbbl
test
mov
orl
jmp
and
imul
orb
gs
sbbb
in
movb
rolb
dec
les
aad
push
out
mov
cltd
pop
mov
bound
dec
iret
dec
mov
stos
mov
dec
pop
push
adc
scas
fsubrl
lock
mov
test
xor
int
jne
mov
ss
inc
or
mov
mov
gs
sbb
shll
in
add
sbb
lds
dec
les
into
subb
sub
add
int3
test
xchg
mov
sti
xchg
pop
mov
pop
xor
cli
into
icebp
ss
pop
dec
and
add
divl
pop
mov
into
loop
mov
inc
icebp
and
mov
mov
pop
sbb
inc
sbb
and
sbb
repnz
xor
sub
fstl
sub
pop
cmc
fwait
jle
shlb
xor
add
cmp
jae
shlb
mov
mov
and
popa
or
mov
cwtl
sub
xchg
clc
clc
or
stc
mov
push
sarb
sbb
sub
insl
xchg
mov
xchg
sub
std
pop
mov
add
les
push
mov
cmp
push
scas
outsl
cmp
pushf
cli
or
xchg
cmp
test
popa
mov
jo
mov
out
lcall
bound
adc
xchg
cmp
jae
testb
lret
pop
sub
mov
aaa
mull
insl
inc
cwtl
cmp
jae
sub
rorb
dec
and
pop
or
push
jge
mov
inc
push
out
pop
mov
jl
lods
imul
addr16
pushf
cmpsl
pop
jb
out
mov
mov
adc
xchg
dec
xor
xor
dec
cmpl
cmpsb
shlb
out
xor
lret
mov
add
in
stos
rolb
jb
push
stos
and
movsl
and
mov
mov
push
int3
aad
push
jle
xchg
ja
xchg
xchg
add
mov
fildl
pushl
sub
push
jnp
pop
cli
push
hlt
sub
mov
or
test
fildll
xor
mov
loope
mov
cltd
adc
sub
mov
mov
cmp
push
adc
lret
es
faddl
in
or
mov
cmp
rcrb
mov
lods
and
xor
pop
movsl
rcrb
cmpl
mov
lahf
push
mov
mov
jmp
mov
cmp
cld
ret
mov
pop
ds
jne
jne
xor
pop
dec
add
jecxz
mov
scas
ljmp
mov
movl
scas
icebp
sub
fldl
insb
fimull
arpl
add
mov
mov
push
popa
enter
push
add
cmp
mov
inc
xchg
incl
and
sub
out
bnd
or
add
or
mov
or
in
push
xor
dec
jecxz
int3
push
mov
dec
imul
cmp
stos
sbbb
add
inc
aaa
lods
faddl
add
jmp
mov
inc
cmpsb
cmp
mov
sbb
xlat
sub
push
inc
inc
insb
add
call
and
ja
xlat
and
cmp
jne
pop
jae
ds
call
cs
das
and
add
or
sub
and
insl
je
test
sub
inc
or
sub
jbe
out
sbb
andl
insl
in
jle,pt
cmp
movsl
data16
imul
mov
outsb
test
jae
mov
repz
adc
aam
push
lret
lret
iret
inc
sbb
push
int
mov
jge
shlb
lock
repz
push
lret
or
jmp
sbb
add
xlat
shll
jmp
cmovae
repz
pop
out
mov
xor
outsb
cmp
jle
divb
mov
imul
adc
sahf
imul
mov
icebp
cmpsb
hlt
fdivl
test
sub
aad
mov
xchg
addb
xor
mov
xchg
xchg
das
lods
test
or
test
aaa
addl
pop
lods
cld
test
cmp
pop
or
cld
adc
jle
xlat
repnz
push
jp
push
stos
lret
mov
in
imul
pop
xor
jmp
mov
fs
push
dec
sbb
sub
pushf
sub
cld
sub
mov
loope
xchg
rclb
inc
push
mov
mov
sub
jne
repz
aam
jo
pop
idivl
daa
xor
shlb
ds
icebp
lods
lret
jno,pn
add
mov
push
push
pop
mov
mov
aam
pop
pop
scas
sub
arpl
addb
cmp
ljmp
sbb
popa
mov
inc
jmp
mov
xchg
push
adc
mov
dec
incb
push
push
insb
xchg
or
xchg
jmp
pop
imul
sbbl
rorb
and
xchg
notb
movsl
xchg
mov
dec
add
mov
xchg
xor
push
xchg
shrb
ljmp
xchg
dec
dec
jne
jae
les
mov
fsubr
ficoms
pusha
cmp
shrl
daa
mov
scas
mov
call
inc
sub
std
insl
popa
testb
and
out
int3
mov
lahf
adc
and
inc
insl
flds
dec
inc
mov
jo
repz
loope
fs
xchg
aad
pop
inc
inc
addr16
or
xchg
mov
jnp
out
movsl
dec
lret
stc
sub
and
orl
xlat
and
dec
out
cwtl
andl
or
mov
sub
ja
lods
rclb
push
xchg
cmp
or
jmp
mov
in
repz
scas
mov
or
das
jmp
jnp
sbb
pop
mov
mov
fistpll
icebp
inc
inc
jno
lock
sahf
push
popf
cmpsb
cltd
mov
xorb
add
popa
sub
push
mov
xor
mov
inc
xor
xor
or
dec
mov
stos
add
push
cmp
cmp
pop
cwtl
roll
fcmove
jl
lock
or
sbbb
sub
lods
lea
or
popa
je
pop
jne
loope
repz
adc
rorl
xchg
outsb
xchg
pop
push
sahf
pop
pushf
mov
fisubs
fistpl
cmp
orl
sub
xchg
jge
sbb
xor
enter
lahf
int3
cs
mov
mov
cltd
inc
lock
xchg
aad
mov
pusha
or
or
adc
dec
push
xor
sub
out
jno
adc
std
jb
xor
imul
pop
dec
jo
js
scas
inc
mov
mov
bnd
hlt
inc
rcr
dec
pop
mov
movzwl
notl
mov
gs
mov
add
pop
push
out
je
cli
lret
jmp
out
mov
lret
jb
xchg
xlat
decb
push
jl
inc
jl
out
sub
jmp
mov
push
mov
push
stos
in
gs
sub
cmpl
lds
add
ret
mov
inc
cmp
das
jns
sub
or
fwait
jns
mov
pop
dec
sbb
cs
or
popa
adcl
ds
aam
js
push
test
and
outsb
out
xchg
lods
repnz
pushf
jmp
iret
bound
clc
je
addr16
add
out
iret
mov
push
push
sbb
inc
fimuls
or
imul
mov
flds
lock
sbb
mov
push
xchg
pushl
inc
or
jns
nopl
sti
mov
push
mov
inc
outsl
mov
hlt
push
cmp
dec
mov
in
shll
dec
adcl
in
mov
push
outsb
in
pop
cmp
sub
dec
or
call
fwait
jecxz
push
int3
jmp
cmp
scas
out
sub
push
inc
repnz
push
inc
std
in
cmp
cmc
xchg
xchg
push
ds
loop
dec
popf
adc
repz
jae
fs
clc
int3
inc
or
sahf
add
lahf
dec
sbb
outsb
inc
aam
imul
loope
mov
inc
and
jne
or
push
fnsave
mov
rorl
mov
mov
testb
adc
xchg
inc
div
mov
dec
xor
push
call
data16
or
ljmp
fidivs
inc
cs
sbb
mov
lcall
xor
xor
add
das
cs
mov
pusha
movsb
rolb
mov
mov
fwait
lret
adc
stc
outsb
dec
lods
pop
movsb
rolb
loopne
js,pt
mov
movsl
iret
xchg
daa
dec
or
add
and
aaa
xchg
fisttps
fisubl
mov
cmc
out
inc
inc
stos
mov
rcrl
inc
cmp
dec
fwait
hlt
mov
push
mov
ret
or
cmp
cmpsl
mov
in
out
adc
aad
fld1
or
xlat
mov
fidivrs
inc
out
adc
cmp
sub
jg
jmp
or
xchg
dec
xor
adc
pop
sarb
ja
fcoml
xor
mov
and
shrl
clc
stos
dec
jnp
aaa
adc
repnz
js
je
out
lgs
loope
dec
mov
aas
cmp
rcll
mov
jecxz
inc
push
adc
jge
ret
xlat
add
mov
or
dec
cmpsl
aas
sar
mov
je
das
jp
movsb
adc
cli
pop
int3
loop
js
repnz
fcos
jb
loope
int
lret
hlt
jl
ror
xchg
data16
orb
jno
aad
js
call
push
adc
sub
dec
mov
lret
cmpsl
int
or
dec
push
repz
test
mov
cmp
jns
add
sbb
ljmp
lret
xlat
cli
adc
or
loop
test
fcmovnbe
call
mov
mov
popf
dec
push
jb
into
pop
pop
xchg
xchg
push
mov
xor
cltd
test
nop
inc
add
fstl
and
mov
mov
sbb
and
xorl
repnz
lods
fcomps
es
call
push
push
cli
mov
andl
cli
ja
mov
repnz
add
adc
sub
pushf
mov
idivb
mov
loope
jp
xor
int3
xchg
mov
stos
inc
push
fdivl
das
mov
pop
and
test
or
lods
icebp
pushf
inc
mov
pop
bound
mov
inc
and
mov
es
xchg
aaa
xor
pop
push
test
sti
call
and
xchg
leave
or
lods
mov
xchg
mov
pop
out
push
loope
push
in
lea
xchg
das
rorl
pop
aaa
lret
push
das
lcall
xchg
call
cmp
sub
mov
sub
mov
xor
cli
adc
cld
mov
mull
inc
lods
gs
xchg
incb
mov
rcll
jg
das
mov
mov
cmp
rcl
xchg
sbb
push
bound
jp
inc
imul
das
and
mov
jo
or
in
mov
mov
lods
ret
mov
xor
inc
movsl
push
imul
jne
xchg
jge
enter
cmp
iret
negl
xor
ss
lock
jecxz
jl
sahf
int3
and
js
sub
cmc
bound
sub
into
mov
add
int3
pushf
or
ret
mov
mov
nop
xor
cmp
mov
or
aam
mov
insb
and
in
mov
scas
test
mov
in
push
test
stc
adc
ljmp
mov
pop
daa
mov
xchg
cmc
cmp
dec
jp
jecxz
lods
mov
in
pop
lcall
cmpb
cmp
cmp
sbb
push
and
add
push
lret
dec
sub
daa
mov
jne
add
push
jb
inc
mov
xor
dec
pop
mov
jae
push
dec
push
fsts
repz
lea
mov
xlat
addr16
mov
fadds
inc
enter
movsl
jnp
fldl
sub
mov
xchg
mov
jecxz
dec
dec
fwait
aam
iretw
imul
inc
mov
xchg
test
sbb
or
or
sub
push
cmp
imul
sub
and
fidivs
or
sbb
adc
lds
mov
lcall
adc
and
pop
add
cmp
mov
movsl
mov
mov
int3
andl
fcoms
jl
lods
xor
ss
cmp
jmp
insb
insl
jnp
jmp
lret
ss
jge
sub
xchg
icebp
push
incb
mov
int3
push
repz
dec
loope
loop
ljmp
fmulp
loop
inc
mov
xchg
fcmovb
xchg
shrb
test
fstl
push
jno
sarl
orb
out
ret
or
scas
movsl
xor
pusha
sub
add
and
divl
arpl
dec
pop
stos
in
in
pop
xor
clc
ds
sbb
add
ss
xor
mov
aam
mov
ja
dec
adc
adc
sahf
fadds
aam
or
inc
out
adc
scas
jg
in
cmpsl
shll
sub
xchg
cmp
push
stc
jg
lods
and
push
nop
or
cmp
repz
sub
or
jne
and
fcomip
mov
ds
or
cmp
mov
mov
lret
jb
iret
push
or
fistpl
hlt
sbb
cmpsl
xchg
pop
jecxz
ljmp
dec
mov
add
icebp
out
mov
aam
mov
scas
mov
fimuls
and
lret
mov
in
sub
mov
add
pop
xor
cmpsl
mov
std
or
mov
mov
rcl
lds
and
loope
enter
inc
ret
popa
jl
push
pop
shlb
adc
mov
ret
pop
xor
sub
loopne
imul
sub
xor
sub
inc
cmpb
push
fists
jo
adc
int3
rorb
lahf
fldt
addr16
push
cmp
push
addl
sub
push
cmp
inc
scas
mull
aad
fistpll
dec
stos
out
mov
xlat
addr16
mov
and
inc
push
dec
loop
xchg
adc
imul
fldenv
cs
pop
pop
gs
mov
mov
into
add
jp
shrb
push
or
inc
mov
xchg
or
jns
push
ffreep
fldenv
cmp
adc
cmc
mov
cmp
decl
mov
jne
lea
push
xlat
and
call
sti
jmp
ja
das
xchg
pop
call
jo
jne
xchg
xchg
add
in
stos
pushf
sub
dec
add
mov
ss
movsl
lods
cmp
cmp
hlt
negl
mov
sbb
cmpsb
jo
aad
xor
test
je
shll
pop
or
cmp
test
icebp
hlt
out
std
inc
pop
and
jnp
mov
push
cmp
lret
push
mov
xor
int3
out
in
fisubrl
push
pop
pop
fisubs
flds
repz
cmpsb
sub
jp
and
std
imul
dec
fucomi
stc
push
repnz
sar
daa
push
test
mov
inc
std
xor
xchg
ret
dec
test
xchg
imull
test
aas
movsb
mov
jbe
mov
push
dec
test
dec
scas
cmpb
adc
mov
xor
pop
repnz
dec
pop
dec
jecxz
cmp
xchg
fs
ss
mov
jl
mov
or
push
popa
push
fdivrs
mov
dec
repnz
popf
icebp
arpl
cmp
and
pop
std
lahf
dec
mov
es
sub
sub
xor
inc
cltd
xor
cmp
adc
inc
ret
insl
jg
popl
pop
cmpsl
orb
sarl
push
fsubs
out
incb
dec
sub
fcmovu
and
in
rolb
cmp
shl
pop
cmpsb
sbb
aaa
je
push
pop
cmp
dec
lods
sbb
xchg
xchg
xchg
push
sub
mov
into
test
adc
in
or
cmp
xchg
repnz
hlt
pop
icebp
stos
mov
pop
aad
ss
aas
pop
divl
cmp
and
cmp
mov
addr16
push
mov
sbb
or
push
add
out
popf
aaa
xor
cmp
mov
and
push
into
cld
andl
dec
fwait
ret
mov
push
jns
scas
stos
bound
jbe
or
pop
and
cmp
stos
push
int3
cmp
jge
xchg
pop
decl
dec
hlt
sbb
cmp
mov
inc
mov
iret
inc
fdivl
sbb
mov
std
sub
dec
mov
add
dec
les
adc
pop
repz
outsl
iret
inc
jno
mov
mov
jo
dec
cmpsl
mov
es
jmp
or
mov
popa
int3
jge
test
pop
push
ret
test
jmp
repz
xor
inc
icebp
movsl
push
cmp
js
rorl
cmp
and
int3
jns
test
lods
adc
cmpsl
inc
cld
jne
and
lea
sub
cmp
lret
mov
push
pop
adc
cmc
ret
daa
sbb
adc
fcomps
mov
mov
sti
leave
jbe
pop
enter
loopne
rcrl
les
xor
jl
jp
or
mov
jnp
adc
cld
sti
stos
loopne
push
jmp
sti
es
arpl
adc
outsl
cmpsl
cmp
sti
mov
pop
xor
dec
mov
shlb
xor
out
fs
mov
push
xchg
or
pop
sbb
mov
push
mov
jne
xchg
lcall
xchg
enter
xchg
pop
cltd
adc
cltd
xor
sbb
ljmp
inc
clc
inc
jmp
and
movsb
out
js
mov
xchg
mov
lock
or
mov
cmp
test
bound
jae
inc
push
adc
push
call
xchg
loope
cmpsb
push
or
xchg
push
xchg
stc
mov
insl
pop
ret
pop
je
adc
and
mov
mov
add
pop
das
xchg
cltd
xchg
jno
sub
jl
mov
shrl
icebp
fadds
imul
xchg
push
pop
out
sbb
jbe
rcr
xchg
rcl
loop
mov
cmp
leave
lcall
imul
push
loope
xchg
mov
sti
adc
sub
xchg
out
addb
repnz
sbb
stos
xchg
out
pop
lret
into
test
adc
out
push
adc
xor
jns
jnp
iret
loopne
rcrb
outsb
sub
push
adc
mov
shll
xchg
pop
out
cmp
add
jl
into
into
icebp
stc
ficoms
popa
adc
mov
shl
test
mov
pop
push
imul
scas
pop
jo
mov
sub
inc
daa
idivl
ror
icebp
rorl
mov
add
ret
gs
jecxz
lds
lds
adcb
mov
lock
push
pop
test
xlat
lahf
sarb
popf
add
push
out
aam
outsl
xlat
out
mov
and
and
cmpsl
mov
sarl
xor
fstps
andnps
and
and
jbe
mov
sub
fs
shrb
mov
mov
jo
sub
aas
ret
sub
cmp
bound
daa
in
aas
fisttpll
cmp
jp
stos
dec
inc
or
mov
scas
jno
adc
testb
adc
incb
arpl
push
dec
sbb
ljmp
lret
pop
sbb
mov
leave
xchg
mov
clc
loopne
mov
jle
inc
shll
cwtl
mov
mov
fisttpll
and
scas
icebp
loope
and
sbb
iret
xchg
and
cs
or
addr16
movsl
xchg
push
mov
dec
scas
andl
add
imul
dec
or
and
pop
xchg
aad
inc
js
lcall
xchg
ljmp
lret
push
sti
xchg
pop
dec
dec
dec
and
pop
jecxz
icebp
mov
ret
xor
jno
mov
and
cli
js
roll
mov
pop
test
ret
ret
cmp
outsl
mov
and
leave
mov
ljmp
adc
pop
orl
mov
sbb
call
push
nop
aam
shlb
fbld
in
mov
stos
pop
or
loop
push
stos
mov
xor
les
adc
call
roll
fcmove
in
sti
sbbb
push
cmp
mov
je
push
rol
add
pop
loop
push
sub
jae
call
mov
push
xchg
lock
lds
jmp
sbb
push
xchg
iret
sbb
add
arpl
cli
mov
lret
mov
hlt
lods
cmpsl
push
mov
push
inc
dec
ret
insb
sub
add
mov
out
cmp
and
or
xchg
hlt
rorl
sti
jne
loopne
push
xlat
lcall
xor
stos
stos
cmp
vsubps
pop
or
jnp
dec
cmc
sub
inc
aam
mov
test
add
cmp
adc
popf
mov
daa
lret
mov
cmpb
fwait
dec
movsl
dec
inc
xchg
shrb
add
mov
mov
es
scas
les
pop
dec
subl
daa
pop
clc
ret
xchg
enter
sbb
int3
jo
in
cmp
add
fwait
pop
and
leave
pop
mov
gs
xchg
sub
mov
mov
lret
add
addr16
imul
and
and
imul
or
rcrl
push
mov
fsubr
sub
jle
mov
ret
cmpsl
mov
push
xorl
lahf
push
and
lds
leave
pop
in
jle
lods
sti
jo
pop
sbb
cmpsb
adc
sub
mov
or
push
and
xchg
das
in
cmp
nop
pop
add
adc
mov
mov
jo
jno
and
imull
xor
in
mov
jnp
arpl
lret
into
sub
mov
or
daa
jg
pop
lahf
jno
in
icebp
vaddsd
mov
aam
test
psubsw
bound
sub
mov
mov
jge
push
shll
clc
in
mov
xor
sbbb
mov
outsl
jo
adc
loopne
xchg
icebp
push
ss
push
aas
popl
mov
insb
std
cld
pop
lcall
das
je
mov
leave
mov
add
ljmp
jnp
xor
xchg
cltd
sub
insl
fidivrs
sbb
jbe
popf
xchg
fs
cld
movsb
jmp
movsb
stos
fdivrs
jae
hlt
sub
xchg
leave
stos
imul
push
add
push
ret
pop
add
repz
inc
stc
popf
mov
orb
bound
ja
outsl
push
imul
sub
dec
jmp
mov
int
imul
out
dec
push
test
mov
stc
dec
mov
jmp
rcrl
ja
aaa
cmp
mov
cmp
or
lret
pop
bound
dec
call
mov
inc
adc
loop
xlat
repnz
leave
std
in
lcall
js
pusha
call
int
xchg
loopne
xchg
pop
insl
test
test
cmp
jl
lea
sarl
mov
and
sbb
icebp
add
movsb
add
push
jo
inc
push
push
mov
push
jno
and
icebp
xlat
sub
hlt
and
imul
push
adc
cltd
fwait
mov
sub
cmp
or
hlt
lret
mov
shlb
hlt
pushf
or
iret
lods
xchg
testb
cmp
push
mov
cld
sahf
and
popa
in
xchg
xchg
in
cli
movsb
jbe
cmp
mov
repnz
mov
xor
cmp
stos
mov
mov
and
pop
lea
mov
cmpsb
mov
jmp
or
or
xor
stos
arpl
jmp
inc
data16
xchg
pushf
insl
add
xchg
or
into
outsl
mov
pop
mov
sub
push
lds
mov
lahf
cmp
test
xchg
out
lahf
push
out
sahf
pop
nop
xchg
dec
pop
in
pop
leave
sub
fwait
popf
imul
pop
or
rclb
dec
jp
and
push
scas
jl
push
loope
ljmp
xchg
or
xchg
fsubs
fildl
scas
xor
sub
xchg
ret
icebp
shrb
dec
and
repz
xchg
dec
stos
outsl
add
fstl
mov
lret
divl
mov
movsb
cmp
cli
jno
push
pop
push
mov
aam
xor
adc
aad
shrl
insl
add
test
stc
push
cmc
mov
pop
pop
cmpsb
xchg
insb
mov
mov
jmp
and
adc
rorl
subl
push
xor
icebp
add
mov
and
xor
pop
jno
mov
inc
jbe
pop
push
mov
mov
pop
sbb
cmpl
dec
mov
ret
xor
cmp
lods
cmpsl
mov
mov
mov
sahf
out
jg
jbe
cmpsb
aad
sub
ret
es
and
je
pusha
stc
out
pop
arpl
insl
ja
mov
ss
sbbb
das
ljmp
sbb
ret
xchg
cmp
popf
mov
jnp
mov
adc
int
lods
mov
les
js
fidivrs
mov
inc
clc
jno
stos
mov
and
adc
es
cmp
mov
or
mov
jmp
aaa
cwtl
cwtl
movsl
cmpb
ret
sti
pop
add
in
out
push
jae
daa
aaa
cwtl
sub
xlat
les
fwait
xchg
sbb
add
fdivp
into
sahf
xor
push
cmpsb
and
ss
fldt
stos
sti
mov
add
jmp
fisttps
out
enter
mov
sti
pop
push
add
mov
insl
bound
scas
push
mov
fsincos
pop
jno
std
inc
mov
decb
loopne
data16
repz
mov
pop
pop
lods
inc
adc
pop
sahf
cmp
sti
or
mov
testb
pop
inc
ja
jp
sub
sarl
mov
fdivrs
sbb
sub
xor
push
filds
add
outsb
repz
dec
inc
ja
or
xchg
pop
fstps
push
push
popl
xchg
lcall
aam
xchg
sbb
rorb
sbb
loope
push
xor
push
ljmp
fistps
incb
rcrl
adc
cmp
mov
inc
ss
mov
mov
pop
cltd
sub
stc
cld
addl
xor
rorb
sarl
out
cmp
mov
mov
jnp
fisttps
push
xchg
das
fldl
mov
adc
imul
mov
inc
fdivl
xchg
iret
or
jnp
movsb
push
fs
mov
pusha
or
add
outsb
fstl
lret
scas
ds
psllw
xchg
or
mov
aas
jle
and
cltd
je
or
jne
jle
daa
pushf
jnp
leave
mov
fmuls
clc
nop
jno
aad
bound
insl
shrl
out
leave
int
stos
bound
idivl
mov
pop
inc
stos
mov
jne
jmp
daa
clc
test
pop
mov
sarb
lea
aas
cmp
sub
aas
sbb
dec
xlat
lcall
cmpsb
shr
aam
in
or
or
call
data16
test
push
push
mov
add
xchg
sub
cmpsl
cmpsb
mov
enter
xchg
mov
mov
rcrb
mov
add
inc
orb
push
push
lods
js
xor
add
jo
pushl
lods
adc
rcll
sbb
leave
hlt
mov
dec
mov
aam
ret
lret
popa
js
test
xchg
pop
int
stos
dec
pop
mov
mov
out
cmp
aad
out
mov
lds
cld
jne
mov
dec
or
mov
cmp
adc
cmp
cmp
push
lds
pop
lahf
jmp
dec
scas
inc
jp
jle
push
imul
enter
fmul
jo
xchg
mov
mov
cwtl
loope
mov
sbb
inc
sub
sbb
lds
sub
inc
push
inc
enter
mov
jmp
inc
dec
dec
data16
fwait
push
ja
sub
testb
shlb
imul
in
fwait
lahf
movsb
lods
scas
pop
adc
mov
inc
mov
hlt
adc
sub
test
jo
jmp
inc
scas
movsb
mov
mov
xchg
xor
ds
inc
cmp
and
mov
aad
xor
xchg
cltd
andl
cmp
inc
shrb
pop
and
adc
and
mov
xlat
cltd
sahf
aas
jae
sub
xchg
dec
fidivs
jl
dec
pop
gs
cmp
pop
jne
xchg
or
lret
pop
fcoml
fcomp
ret
stos
inc
pop
mov
sub
mov
adc
cmp
mulb
adc
scas
ret
inc
lea
fisubs
jge
call
xor
inc
adc
ficoms
mov
mov
scas
leave
adc
fnstenv
loopne
fldcw
aaa
add
lock
push
or
mulb
mov
mov
cmp
add
and
push
stos
ja
ret
jecxz
mov
cmp
ja
pop
dec
push
test
mov
dec
icebp
xlat
lods
xorl
cmp
sbb
negl
loope
lcall
out
mov
cmp
popa
xchg
adc
dec
cmp
push
mov
cmc
add
pop
popa
sbb
jae
push
cmp
inc
test
outsl
lahf
sbb
dec
or
nop
data16
lret
ds
into
mov
cwtl
xor
je
sub
push
hlt
imul
cmc
jno
dec
mov
scas
push
mov
push
add
aaa
leave
lods
mov
les
notb
push
mov
jnp
xchg
mov
sbb
fcmovb
adc
jmp
dec
ljmp
push
sbb
mov
and
pushl
xor
xlat
push
xchg
movsb
sub
stos
fstpt
in
loope
or
decb
add
js
xor
sahf
jle
cmp
imul
hlt
addr16
xchg
les
test
aaa
pop
adc
ss
shlb
test
mov
div
iret
push
add
sti
sbb
jns
call
mov
dec
xor
in
incl
orb
sbb
xchg
scas
nop
push
es
mov
ja
std
push
add
mov
mov
cmpl
and
push
xchg
es
shlb
adc
movsl
adc
push
jg
lcall
adc
ss
pop
push
outsb
jnp
movb
pushf
outsb
pop
jns
mov
cmc
xor
inc
push
mov
repz
pop
andb
fidivrs
xor
lea
out
sub
sub
out
fcoml
dec
ljmp
dec
sti
xchg
mov
dec
mov
inc
arpl
or
loop
hlt
mov
or
scas
jbe
test
adc
divb
mov
sbb
clc
adc
faddl
mov
cmc
mov
or
xchg
loope
xorl
into
or
imul
sub
jle
lds
ljmp
pop
xor
cmp
cmp
pop
push
xor
cld
xlat
ss
loop
or
in
aad
xchg
inc
test
mov
cli
punpcklbw
adc
out
into
stos
sbb
sbb
xchg
fs
xchg
cmp
pop
push
frstor
scas
pusha
mov
aas
mov
lret
pop
inc
fdivl
cmp
adc
mov
adc
mov
pusha
lea
jl
sbb
neg
icebp
in
inc
pop
jge
mov
lds
add
sbb
not
int
aas
jle
fistpll
sub
or
fsubs
sub
push
sbb
mov
sbb
jo
mov
aad
les
dec
leave
imul
adc
fsubrs
daa
fisttps
aas
jecxz
ret
repnz
insb
mov
inc
iret
and
mov
pop
leave
push
negl
insl
ljmp
inc
aas
fsubrl
jmp
pop
and
lds
popa
adc
xor
stc
push
insl
mov
pop
nop
test
dec
xchg
add
or
hlt
pop
xor
push
rorb
adc
push
mov
std
test
mov
add
adc
test
daa
jns
inc
cli
iret
aad
lods
and
inc
aad
or
xlat
xchg
cmc
in
test
inc
sub
cmp
dec
add
xor
dec
aam
iret
sub
dec
inc
xlat
leave
in
scas
les
mov
and
cmpsl
or
jmp
mov
push
lea
mov
add
insl
mov
mov
lea
or
roll
mov
mov
cltd
outsb
push
push
aad
in
in
add
jae
sub
add
out
scas
inc
inc
mov
mov
xlat
loope
mov
es
jnp
mov
lahf
icebp
add
fmulp
rcll
xchg
and
sub
jo
lea
xlat
addr16
shl
cltd
loope
lret
arpl
ljmp
call
cltd
cmp
pop
xchg
int
inc
adc
mov
cmpsl
push
sahf
sbb
cmpsb
sahf
mov
neg
les
test
test
mov
jb
cmp
pushf
inc
add
add
lock
lds
xor
push
push
mov
sub
repnz
imul
ret
pop
into
repz
mov
sbb
ja
pusha
loope
push
xor
gs
sbb
fistps
dec
pop
push
insb
fdivl
jne
movsb
pop
pop
in
pop
pop
adc
push
lret
cli
jge
repz
cmp
push
xor
xor
jmp
add
shlb
test
daa
stos
lcall
les
sbb
movsb
addr16
mov
mov
xor
in
mov
pop
icebp
loope
pusha
or
and
jle
fcmovnb
jg
xchg
xchg
cmc
daa
cmp
mov
jnp
rclb
and
sbb
or
sub
into
push
and
es
cmp
push
stos
fdivrs
movsl
mov
xor
dec
pushf
sbb
inc
shrl
adcb
push
popa
sub
add
cwtl
xchg
push
push
xor
shrb
and
xor
stos
mov
jb
mov
jmp
int
ret
push
push
dec
xor
or
fmul
cs
push
iret
pusha
pop
xchg
add
icebp
push
add
push
mov
pop
int3
mov
jl
push
in
push
in
repz
mov
pop
mov
test
mov
fstl
test
cmc
mov
stos
sub
jp
and
push
int
add
mov
bound
and
enter
xchg
les
sub
xchg
rcr
addr16
int3
jo
lahf
ja
sbb
mov
adcl
cs
insl
sub
leave
roll
test
mov
fwait
pop
les
xchg
aam
pop
stos
stc
mov
mov
sti
fisttps
fs
jbe
pop
test
and
push
mov
jns,pt
jecxz
outsb
inc
xlat
sti
xor
aam
enter
pop
xor
outsb
push
ret
in
cmpsl
xchg
and
xchg
data16
andl
sbb
dec
rcll
sbb
cmpb
fucomip
and
inc
inc
pop
adc
popl
popf
nop
jne
push
insl
in
adc
cmpl
les
fdivs
xor
adc
sub
cli
xchg
icebp
cld
arpl
fdiv
jmp
mov
fmuls
les
adc
cmp
inc
cmp
pusha
lods
je
dec
and
cmp
inc
pop
adc
je
push
clc
sar
xlat
out
sti
scas
dec
adcl
and
sahf
fiaddl
rclb
rcrl
aam
fsubs
xchg
pop
and
mov
js
gs
pop
jge
pop
shll
outsl
inc
into
mov
sub
push
mov
fstpt
or
imul
lock
outsb
dec
xchg
dec
push
mov
jae
push
mov
jae
leave
xor
loope
adc
fcmovnb
das
in
inc
mov
pop
or
sub
sbb
fsubl
mov
mov
inc
mov
pop
icebp
out
add
popf
cmp
mov
popa
push
sahf
int3
inc
xor
sub
mov
or
dec
stc
jo
lods
push
and
xor
xor
data16
or
pop
xor
loope
xchg
clc
movsb
adc
stc
xchg
and
dec
pop
addr16
sbb
xchg
lret
add
or
and
dec
jle
pop
cmp
repnz
stc
ds
add
sub
jo
xchg
adc
test
out
ja
pop
mov
mov
test
sub
mov
dec
mulb
les
inc
cmpsb
sbb
or
cmp
fstpt
cmc
icebp
mov
int3
adc
mov
cmc
fcomps
lcall
outsl
mov
addr16
ficomps
mov
test
push
les
and
jecxz
into
es
xor
jbe
enter
mov
outsb
ja
dec
adc
or
mov
in
cmp
add
mov
stos
push
cli
push
mov
pop
mov
jnp
jns
movsb
push
fdivp
adc
int3
sar
movsl
sbb
sub
sbb
stos
loop
es
in
adc
pop
call
pusha
icebp
fldt
inc
or
outsl
mov
aaa
sub
lret
push
loop
outsl
inc
mov
sbb
pop
inc
xchg
movsb
roll
xor
loop
inc
std
mov
sub
mov
jge
and
inc
or
into
fcmove
pmovmskb
lods
lds
inc
outsl
les
scas
es
xchg
scas
jbe
fldenv
rcrl
sbb
pop
mov
aam
jecxz
xor
popa
push
ss
test
jb
sahf
sub
dec
mov
aad
jae
aas
jl
aas
jns
lahf
jne
and
rolb
xor
sub
sub
push
or
ret
lret
jno
xor
mov
notb
or
repnz
cmpsl
cltd
shll
push
pusha
sbbl
fdiv
or
negb
mov
sbb
pop
jle
mov
jns
mov
divb
mov
je
stc
ss
pop
in
dec
ret
jle
or
insl
dec
out
test
sub
mov
cwtl
inc
jecxz
test
imul
popa
fdivrp
cs
mov
adc
rolb
cwtl
popf
add
mov
xchg
mov
ds
mov
sti
xor
push
notb
xchg
xor
outsl
jae
push
dec
bound
stos
popf
lret
repnz
push
adc
int
adc
push
push
jb
out
aaa
ja
push
cwtl
jle
pop
dec
test
hlt
mov
sub
ret
bts
mov
xor
imul
fildl
rclb
push
or
and
popf
push
pop
clc
ret
mov
xor
lds
pop
or
ret
mov
insl
sbb
jge
mov
scas
xor
inc
fs
mov
test
mov
sub
sbb
aad
adc
pushf
lods
sub
xlat
pop
jmp
mov
xchg
xor
xchg
or
mov
insb
mov
mulb
in
pop
sbb
outsb
adc
das
or
mov
inc
dec
movsl
push
and
xchg
adc
sar
out
aad
cmp
pop
jmp
cmp
adc
or
fdivrl
or
cwtl
mov
or
iret
sub
cs
call
mov
cmpsl
loope
push
sbb
je
insl
push
cs
scas
xlat
jns
mov
mov
push
mov
pop
idivl
repnz
mov
ds
pop
cmpsl
leave
xchg
adc
mov
lahf
insb
jbe
imul
dec
sbb
xor
cmp
adc
mov
out
inc
js
das
or
push
xchg
sub
sub
mov
cmp
loopne
fwait
ret
hlt
ret
fstpt
jnp
inc
pop
iret
jecxz
sub
rcrb
dec
cmp
pop
int3
pushf
push
cmpsb
mov
movsl
push
pop
icebp
push
adcb
cli
fldenv
dec
pop
cmp
push
cs
cmpsl
push
sbb
icebp
decb
out
jae
jl
fildll
scas
hlt
adc
mov
ss
pop
mov
popf
lret
jno
fsubp
push
push
lods
sti
push
or
add
jmp
ja
lret
adc
xor
xchg
cltd
into
mov
push
aad
xchg
jo
jbe
jp
add
or
addb
out
or
test
das
int
xorl
push
mov
add
pop
cltd
pop
cmp
inc
ret
popa
jbe
ret
ss
std
mov
cmpsb
and
sub
or
push
int3
push
push
adc
inc
fstpt
pop
gs
ss
dec
and
ds
repnz
rcrl
imul
pop
sbb
in
ss
adc
jne
punpckhbw
sub
xchg
cmp
and
sbb
repnz
ret
pop
mov
xchg
daa
ficompl
xor
dec
pop
adc
jp
jge,pt
inc
das
sar
sub
push
rcll
insb
cwtl
movsb
push
cmp
fimull
adc
insb
daa
dec
push
adc
les
or
mov
cmp
iret
cmp
add
sub
adc
loop
aas
leave
push
iret
shr
lock
hlt
ds
jp
enter
iret
aad
sbb
mov
fisubrs
add
inc
ja
inc
aad
mov
and
cs
xor
sahf
enter
data16
out
mov
mov
add
repnz
sub
dec
lods
outsl
and
xchg
ljmp
sahf
or
pop
push
aaa
mov
shlb
arpl
clc
das
xchg
xchg
lods
pop
pushf
xchg
adc
jns
nop
cmove
sbb
push
push
scas
es
rcrb
cwtl
sbb
aam
jmp
hlt
push
dec
ret
mov
cmp
sbb
in
push
testb
adc
lret
fstpl
pop
xchg
std
jmp
sub
push
test
pushf
int
insl
cmp
aaa
cli
rcll
or
cmp
add
mov
loop
sub
aad
aas
lcall
jecxz
sbb
sahf
mov
test
inc
mov
push
fs
insb
push
jle
push
and
lds
xor
iret
in
push
or
jge
gs
xorb
fdivrp
mov
popa
lret
add
inc
pop
repz
pop
inc
dec
inc
fdivl
movsl
inc
arpl
jle
in
fildll
or
inc
adc
inc
inc
repnz
add
jnp
imul
mov
cmp
cld
rcll
repnz
mov
scas
stos
fimuls
add
add
mov
in
or
lret
out
lds
push
jo
and
push
pop
push
ret
inc
fistps
jmp
fdivrs
pop
sbb
in
dec
dec
pop
leave
cmp
int3
sub
sbbl
xor
clc
lock
xchg
adc
mov
lret
out
xor
pop
mov
sub
jmp
pop
dec
sbb
mov
sbb
pop
rclb
cli
imul
inc
fisubrl
mov
cmpsl
push
add
stos
sub
and
inc
lds
push
addr16
push
add
sbb
cwtl
iret
xchg
popa
ljmp
fnstsw
xor
mov
cmpl
mov
rolb
imul
sbb
add
daa
add
xchg
in
push
or
xchg
fs
repz
mov
dec
sahf
pop
sti
mov
mov
pop
or
insb
rorb
data16
or
dec
mov
fptan
out
testb
cltd
push
and
imul
jae
daa
jecxz
pop
mov
mov
and
repz
or
xchg
cmpsb
sub
pop
aam
sbb
pusha
call
data16
and
xchg
mov
movsb
cmc
push
xor
subl
mov
cmp
sbb
imul
sbb
nop
mov
dec
sub
jns
or
push
cmc
push
pop
add
sub
xchg
inc
cmpb
cmpsl
out
insl
cwtl
mov
lret
in
sub
outsb
cmp
jnp
adc
sahf
popf
mov
daa
cld
mov
nop
xchg
aas
cmp
xor
test
out
dec
adc
sub
fstps
faddl
loope
inc
push
dec
jge
insb
std
inc
fstp
repnz
lahf
mov
xchg
test
jmp
mov
sahf
add
daa
or
bound
dec
rcll
aad
test
jbe
sub
jb
push
dec
into
pusha
inc
dec
sahf
rol
test
test
push
cld
pop
rep
xchg
stos
test
out
jb
mov
lret
inc
cs
fmuls
mov
adc
push
cmpsl
jg
pop
mov
imul
hlt
pop
add
ja
push
icebp
push
or
fs
xor
ret
into
ret
icebp
js
dec
add
jl
repnz
sub
jge
xchg
mov
sub
in
adc
in
mov
cmc
mov
mov
xchg
or
inc
mov
int3
aaa
xchg
movsb
pop
out
add
mov
xchg
insl
pushf
outsb
in
xchg
outsb
cmp
mov
imul
dec
pop
dec
mov
arpl
pop
std
fs
and
sbb
popa
cwtl
jp
insl
test
cmpb
fistps
repnz
mov
lods
xchg
test
outsl
xchg
jbe
mov
jne
insl
xchg
pop
cltd
cmpsl
add
pop
adc
dec
or
lcall
leave
negl
ljmp
das
sbb
sub
out
adc
sub
fldenv
push
mov
dec
in
or
out
popf
inc
add
in
shll
aam
sar
rcll
xchg
ret
adc
js
xchg
in
int
ret
pop
inc
add
and
pop
mov
lds
jl
mov
sbb
jle
xor
cmpsl
mov
mov
xchg
dec
and
mov
mov
or
dec
cli
cmpsb
xor
lock
push
daa
dec
xchg
pushf
push
push
std
cli
adc
jae
addr16
sbb
and
test
mov
pop
or
sbb
roll
pop
cmpsl
mov
hlt
aad
scas
mov
and
bound
psubb
mov
ret
or
pop
cmpsb
mov
xlat
out
mov
dec
and
push
or
std
push
add
cli
clc
fildl
aaa
pop
dec
lret
push
fdivl
push
shll
out
xor
jg
jp
mov
jne
sbb
cmp
scas
and
fmull
pushf
sub
xchg
ss
outsb
sub
push
adc
dec
not
sbb
cld
sbb
popl
ret
andb
sub
adc
icebp
inc
ficompl
jns
adc
addb
in
xchg
xchg
push
mov
insb
dec
scas
jp
clc
inc
xchg
or
xchg
call
outsb
arpl
cltd
rcrl
out
in
sarl
adc
adc
adcl
jl
push
xor
jns
imul
ja
mov
in
div
xor
mov
movsb
push
mov
aaa
mov
outsl
test
std
pop
stos
shll
bound
insl
jbe
int3
in
dec
ljmp
orl
adc
loope
fisubrl
enter
jmp
push
xchg
ret
sub
pop
mov
jle
insl
aas
jns
clc
mov
daa
lcall
push
es
jg
je
sbb
stc
add
sahf
pop
movsb
push
mov
cmp
mov
xlat
dec
mov
in
adcb
aas
clc
out
stos
data16
add
xor
sbbb
testb
cmp
xlat
mov
popf
fs
fsubs
aam
lock
imul
push
or
add
in
inc
ss
push
sbb
enter
lods
ds
mov
std
adc
insb
clc
repz
or
mov
inc
movsl
xchg
mov
test
dec
movsb
pop
stos
mov
mov
roll
mov
pop
repnz
cmp
mov
aaa
or
add
movsb
dec
out
push
xchg
rolb
xchg
jmp
or
xchg
int3
inc
adc
popa
js
dec
ds
inc
scas
adc
xor
call
les
jecxz
sarb
scas
jnp
sub
pushl
and
mov
pop
lock
divl
dec
icebp
iret
push
movsb
subb
or
mov
fwait
pop
cmp
xor
sbb
data16
or
jne
sbb
scas
mov
dec
jo
nop
sub
test
sbb
sti
sti
loope
into
int3
mov
mov
ss
xchg
negb
cwtl
adc
cmpsb
in
jp
jmp
pop
pop
les
mov
sti
fiadds
sarb
sahf
adcl
movsl
cmp
aaa
popa
push
or
sbb
fbld
add
and
inc
stc
aad
mov
inc
lods
mov
jae
cmp
mov
enter
dec
mov
xchg
loopne
mov
xchg
cmp
jno
sbb
sub
sbb
call
push
inc
adc
push
daa
fmull
push
mov
enter
sub
fldt
add
scas
arpl
xor
les
jae
push
add
cmpl
pop
xor
mov
jae
mov
loope
xor
ss
aaa
popa
or
in
sub
and
aam
pop
loope
push
pusha
mov
add
fmul
push
pop
insb
sbb
test
cmp
ja
dec
int3
out
push
xchg
divb
rorl
mov
sbb
out
dec
bound
gs
rcrb
sub
xlat
xor
ret
mov
in
loop
pop
pop
fwait
lods
lea
inc
cmpsl
xchg
movb
outsl
or
test
outsl
adc
loope
pop
mov
lcall
test
imul
cmc
mov
scas
push
dec
test
nop
hlt
and
dec
das
jle
rorb
lahf
pop
and
faddp
fstpl
add
mov
and
sti
iret
cli
hlt
imul
add
add
rcl
inc
mov
fmull
pop
lds
out
jb
pop
dec
jecxz
jnp
rcrl
push
sub
and
test
add
adc
mov
lret
fnstsw
pop
lcall
cmp
repz
pop
loopew
cwtl
or
fsubl
lcall
leave
mov
cli
icebp
int
ljmp
mov
add
push
jnp
pop
arpl
mov
push
xor
add
pop
jmp
call
inc
pop
sti
cmp
stc
pop
mov
sub
arpl
aam
call
ret
les
in
xor
imul
and
push
xlat
push
dec
adc
jl
cltd
or
addb
add
cld
pop
out
aad
inc
sbb
pop
inc
subps
es
jno
rcll
xchg
movsl
mov
outsl
xchg
cmc
and
shlb
notl
icebp
fists
cmp
sbb
mov
repnz
xchg
ljmp
jecxz
outsl
scas
xchg
mov
inc
ljmp
add
cmp
jnp
dec
add
xor
add
cmc
inc
pop
xchg
sahf
out
cmp
and
pop
cwtl
pop
and
pusha
mov
push
xor
or
ret
ds
lods
jae
dec
fstpl
add
or
mov
std
and
fwait
sbb
mov
pop
mov
pop
shrw
mov
idivb
jbe
jmp
fstpl
mov
lret
in
imul
out
add
dec
xor
inc
int
inc
or
or
scas
iret
add
int3
fistpll
xchg
push
and
out
ljmp
stc
jl
insb
mov
cli
xchg
fcompp
push
in
and
xorb
fs
mov
dec
testl
cltd
call
lods
mov
inc
pop
add
xchg
imul
or
rclb
ret
out
sbb
sbb
mov
fsubp
xchg
icebp
push
adc
int3
fdivrp
inc
repz
ds
inc
jl
xor
leave
xlat
jne
hlt
loopne
push
test
cwtl
lds
aaa
lock
add
push
mov
out
sbb
sbb
mov
add
lcall
mov
in
lods
insl
lock
out
cld
mov
mov
insl
jecxz
pushf
insb
addr16
mov
pop
adc
shl
adc
movsb
add
cmpsl
xlat
xor
mov
cmpsl
out
outsb
fmuls
arpl
ljmp
mov
gs
inc
and
jle
sub
loopne
lcall
pop
cmp
mov
insl
jns
inc
imul
loope
or
pop
aam
js
outsb
outsl
push
gs
mov
push
imul
inc
movsb
ficoms
iret
outsb
cwtl
sub
out
or
cmc
pop
leave
test
ja
mov
mov
xchg
hlt
mov
xchg
lods
or
cwtl
scas
sbb
into
neg
add
andb
enter
push
sub
out
jp
pop
jno
call
sbb
pop
dec
xchg
repz
xor
dec
xchg
ret
fisubrs
fsubrl
mov
adc
push
cmovs
icebp
in
inc
sbb
pop
jl
aad
fwait
sti
cmp
fimull
mov
xor
pop
aaa
pop
dec
fsts
shl
insl
jecxz
pop
pop
sub
lahf
mov
cmpl
ret
adc
mov
sti
mov
lds
ljmp
stc
les
jle
in
bnd
lock
ret
lret
jge
jbe
decl
mov
repnz
fs
push
cltd
and
xor
and
jl
cmp
adc
mov
popa
xchg
inc
sub
call
ficoml
test
aas
bound
jle
xchg
lods
mov
sbb
ja
sub
jno
ret
pop
push
or
popf
mov
xchg
mov
fiaddl
mov
nop
pusha
pop
cmc
xor
in
or
and
iret
pop
xor
fldcw
adc
lea
sbb
test
sbb
mov
sub
sub
ret
and
cli
inc
insl
push
xor
mov
mov
pop
mov
fstl
repnz
add
mov
mov
stc
push
and
mov
imul
insb
rcrb
push
lea
out
mov
outsb
fdivrl
mov
and
lret
mov
xchg
adc
leave
sub
jg
stos
cmp
in
adc
cs
jns
jg
lds
push
xor
int3
aad
push
pusha
xchg
jp
cli
dec
mov
mov
psrld
jbe
jns
mov
or
cmp
xchg
mov
inc
scas
xor
mov
push
xchg
repz
and
out
cld
sub
idivb
into
fdivr
jns
repz
mov
out
push
cltd
cli
mov
lcall
and
out
iret
add
mov
cmpsl
lds
ret
xor
jns
sub
fwait
mov
dec
repz
add
sub
push
popa
testb
cli
cmp
pop
sub
cmp
sub
and
jne
xchg
dec
xchg
and
les
add
sbb
and
ja
test
repnz
xor
js
inc
or
push
in
pop
mov
insl
push
adc
adc
orb
scas
cs
rorl
out
and
jae
xor
cmpsb
mov
mov
sahf
arpl
mov
lds
test
cwtl
xor
adc
adc
fildll
adc
mov
nop
xor
dec
das
xchg
xor
xor
sub
jp
lods
inc
cld
scas
orb
nop
pop
shrl
xor
add
jecxz
shll
call
in
xchg
dec
mov
adc
fimuls
into
jno
sahf
mov
test
popa
or
aaa
cld
mov
adc
clc
xchg
push
outsb
dec
icebp
idivb
lods
adc
rcr
mov
adc
dec
shl
xorb
sbb
shl
outsb
mov
out
pop
inc
out
mov
test
or
xlat
leave
outsl
push
sahf
sti
popa
aam
je
mov
inc
pop
mov
mov
cli
fwait
into
test
popf
aad
mov
xor
pushw
pop
push
sub
les
ja
cmp
pop
add
jl
cmpsb
push
jecxz
outsl
mov
daa
pop
in
leave
sub
xor
jb
xor
mov
add
mov
push
jg
arpl
das
ficompl
jl
pop
jno
and
pushf
mov
sbb
jns
cmp
and
out
in
push
jns
in
mov
pop
fisttpl
repnz
jne,pt
sbb
out
push
mov
rolb
mov
out
push
dec
mov
movaps
xchg
fadd
cmp
das
cwtl
add
and
xchg
es
push
xchg
shl
cmp
xchg
rorb
or
mov
bound
out
pop
mov
gs
shlb
loope
aas
idivl
push
push
jl
mov
pop
cmpsl
and
aas
idivb
jp
mov
insl
cmpsl
fists
int
iret
call
push
test
test
fs
xchg
dec
faddl
mov
lock
sub
mov
roll
imull
add
lds
xor
dec
flds
roll
loope
into
pop
add
fs
fcmovnbe
pop
adc
xchg
sarl
mov
pop
sti
mov
ds
in
fisubl
lret
xor
inc
or
inc
mov
call
flds
ja
jo
aad
aaa
and
addr16
loopne
outsb
aaa
sti
lock
jae
jmp
fidivrl
inc
sbb
mov
movsb
pop
mov
xchg
les
pop
or
sbb
shlb
push
push
je
jg
dec
pop
or
or
add
xchg
adc
and
imul
aaa
aaa
sarl
in
movsl
sub
pop
ret
out
xchg
test
xchg
or
in
push
add
inc
fbstp
loopne
rolb
mov
jb
out
shlb
cmp
jl
xchg
lea
dec
jb
decl
es
je
sbb
mov
sbb
push
jo
nop
pusha
lods
cmp
mov
xchg
cmc
xchg
jno
lods
ret
lock
int3
mov
ret
loop
fcoml
test
icebp
dec
or
or
push
fstp
inc
sbb
mov
xor
clc
jno
and
loopne
gs
sbb
pop
fstpt
push
popa
add
fwait
jmp
adc
arpl
inc
scas
jne
cmp
adc
lret
mov
jbe
dec
xchg
xchg
push
add
test
ret
sti
mov
jnp
imul
xchg
fwait
daa
cmp
mov
cli
xor
sub
add
shll
pop
cmpsb
lahf
sub
cmp
mov
loopne
or
flds
mov
sbb
test
std
add
xchg
mov
xchg
dec
jb
push
jns
or
daa
sbb
in
pusha
insl
or
inc
mov
stc
imul
ret
fisubrs
add
loop
in
hlt
push
loope
cmp
ljmp
sbb
dec
cmp
fwait
ret
out
not
adc
push
inc
mov
fstps
cmp
add
inc
rep
and
int3
outsl
or
dec
pop
je
adc
sarb
push
push
popa
sbb
cmpsb
push
and
cwtl
mov
pusha
push
fwait
dec
mov
int
sti
and
jg
stc
adc
nop
xor
sub
aaa
xchg
mov
jge
add
mov
mov
dec
pop
jle
lret
xlat
add
xchg
jg
xchg
lods
rcll
jne
das
cmpsb
mov
xor
inc
loop
subb
aaa
ja
les
jmp
mov
jbe
and
xchg
testl
test
popf
je
sub
je
fucomi
xor
dec
cmc
dec
fsubrs
or
sbb
add
push
cmp
mov
pop
enter
add
aas
sbb
push
out
mov
ret
rol
adc
jge
mov
sub
mov
cmp
fdivrl
cwtl
add
outsl
mov
mov
mov
test
push
inc
fs
jl
cmp
dec
and
and
sub
sub
pop
lcall
or
outsl
mov
jns
xrelease
jae
xor
outsl
push
ss
inc
bndldx
testb
adc
es
xchg
divb
mov
mov
in
adc
adc
xlat
jbe
daa
lock
sbb
add
jmp
mov
arpl
mov
push
fcomps
cmp
sbb
jae
mov
mov
xchg
dec
xchg
lock
addb
repz
jmp
mov
das
dec
shrb
inc
cmp
hlt
push
out
test
pop
aaa
xchg
movsl
push
daa
lcall
cltd
test
pop
test
aas
and
movb
ror
or
mov
pop
cli
jl
sbb
add
or
mov
lods
repnz
mov
inc
lret
sub
cmpb
jecxz
ret
das
mov
hlt
xchg
jo
sbb
adc
and
add
adc
or
jge
std
fiadds
pop
icebp
test
xor
int
lret
or
adc
jg
sub
lret
ficoms
out
ja
inc
and
xchg
dec
bound
dec
mov
lods
or
and
shll
mov
pusha
outsl
test
inc
pop
icebp
in
int
icebp
xor
in
inc
std
pop
jo
push
addr16
lea
icebp
push
mov
lahf
dec
aas
popa
in
int
cltd
dec
fwait
stos
das
jecxz
data16
mov
adc
jmp
hlt
mov
mov
ljmp
push
jbe
pop
bound
addl
jo
push
mov
adc
mov
gs
sub
jno
rcl
movl
cmp
jns
and
pop
in
xor
sbb
scas
dec
adc
bound
jb
std
and
xchg
adcb
lcall
adc
xorl
jb
push
lahf
fwait
cmp
cmp
mov
js
adc
jecxz
enter
mov
decb
loop
add
cmp
std
fsubr
arpl
repz
les
popa
sbb
dec
bound
sub
imul
lods
jnp
daa
dec
pusha
jg
push
cmp
dec
shlb
xchg
ds
loope
mov
mov
inc
inc
std
int3
xchg
ljmp
push
rcrb
cwtl
push
imul
and
or
inc
test
inc
pop
inc
repz
mov
lahf
aas
jns
inc
fmull
cmp
jo
lahf
imulb
xchg
popf
dec
xchg
das
xor
aad
test
cmpsb
es
pop
jg
cmpsb
ret
mov
adc
cltd
xchg
adc
adc
mov
daa
sub
in
rcrl
les
jmp
jnp
add
pop
outsb
sbb
add
sbb
test
mov
fwait
outsb
jbe
push
pop
fildll
stos
out
jge
dec
adc
jae
jbe
mov
dec
and
enter
pop
int3
inc
imul
adc
inc
leave
sub
xlat
inc
aad
pop
xchg
jle
jecxz
mov
push
lret
push
pop
mov
pop
push
xchg
sbb
ror
mov
test
cli
and
adcl
mov
mov
adc
adc
lcall
sub
test
jp
jp
lock
js
int
mov
inc
push
jnp
ss
adc
mov
dec
js
out
jb
jp
xlat
adc
arpl
cli
xchg
sbb
fisttpll
ror
pop
sbb
aaa
test
clc
movsl
sub
rolb
adc
and
push
insl
cli
and
lds
mov
pop
lea
pop
faddp
insl
pop
mov
lret
add
bound
das
inc
gs
pop
push
mov
add
and
mov
mov
sub
mov
in
dec
xor
repz
mov
adc
xor
iret
sbb
xchg
dec
in
sbbl
jmp
cld
lahf
popa
cli
mov
sub
test
xor
mov
push
xchg
inc
jns
mov
into
out
aaa
pop
mov
or
lea
sbb
push
adc
mov
push
insl
push
fcomi
xchg
mov
xor
fmul
test
mov
inc
jb
lods
push
icebp
xchg
mov
push
mov
xor
nop
mov
subb
js
jns
lods
pushf
push
popf
sub
adc
lcall
sub
repnz
fs
shlb
out
out
and
hlt
arpl
aaa
loopne
mov
repz
sti
fdivrl
cmc
jo
stos
lret
ret
and
dec
xlat
fwait
sbb
or
add
mov
imulb
cmpb
int
mov
fisttpll
in
lock
pop
insl
shll
push
jmp
and
push
mov
out
jle
sbb
push
xor
jae
xor
inc
sbb
test
jl
popf
mov
loope
cmp
cmpsl
cmp
push
iret
add
mov
es
or
push
mov
sub
sub
mov
lahf
adc
cmp
sahf
inc
sbb
inc
fmull
sub
fistpl
dec
cltd
fmul
mov
scas
out
jp
or
js
xchg
jle
pop
ljmp
mov
repz
scas
in
std
pop
jl
push
sbbl
pop
jb
fidivs
mov
or
and
data16
test
push
je
sub
jle
sbb
dec
nop
xor
icebp
mov
daa
push
xor
push
mov
ret
movsb
js
push
imul
inc
pop
or
out
mov
cwtl
insb
and
ret
icebp
jno
test
adc
pushf
in
movsl
fisttpl
pop
popf
fistpl
xchg
sarl
inc
or
pushf
scas
cltd
ss
mov
movsl
pop
push
inc
test
push
adc
imul
cwtl
lahf
gs
stos
lret
ret
clc
outsl
data16
ret
cmp
jl
imul
dec
pushf
push
mov
aas
aad
int3
insb
mov
jae
out
push
into
jns
sbb
push
adc
icebp
cmp
sub
icebp
mov
fisubl
mov
fsubs
inc
push
int
insb
mov
fidivl
mov
and
test
mov
mov
mov
jmp
fsts
xchg
ja
lea
add
mov
movsl
and
jne
aaa
dec
dec
loopne
movsb
push
into
pushf
mov
dec
cmpb
into
out
data16
inc
mov
pop
inc
inc
or
scas
add
lea
mov
jae
xchg
cmpsb
cmc
pop
and
rcrb
add
shlb
xlat
push
and
pop
lcall
add
ret
push
and
jns
cltd
in
imul
fwait
mov
pop
adc
mov
scas
jno
aaa
or
movsl
outsb
jne
add
out
outsl
aaa
mov
sbb
mov
clc
xor
xor
xor
in
loop
fs
ret
movsl
ds
pop
testl
je
pop
adc
mov
int
iret
sbb
pushf
aaa
and
arpl
lahf
cmp
push
ljmp
pop
mov
lds
push
out
lcall
xor
sysret
int3
popa
inc
and
adc
int3
cmp
imull
xlat
cmpsb
imul
outsl
jl
pop
xor
cmp
daa
sbb
jecxz
and
movsb
sbb
pop
insl
into
lea
fbstp
xor
cwtl
push
jmp
scas
mov
jb
mov
pop
push
mov
mov
mov
mov
sub
or
fsubrl
fsubr
gs
adc
sub
xor
dec
cmp
add
idivl
push
mov
jae
aad
popa
dec
push
xchg
js
dec
mov
sbb
push
loope
inc
jno
mov
mov
sbb
jle
pop
ljmp
dec
sbbl
dec
sub
daa
sbb
adc
mov
xchg
inc
push
dec
add
call
jne
div
or
mov
dec
in
dec
adc
xrelease
cmc
and
int
in
inc
pop
sbb
or
js
mov
mov
cli
jo
cmp
mov
subl
cmpsl
add
push
mov
dec
sub
jo
enter
xchg
and
jnp
mov
out
aas
mov
sbbb
mov
mov
xchg
iret
or
sbb
nop
mov
add
sbb
push
sti
fwait
xchg
dec
pop
mov
pop
adc
pop
push
push
mov
sbb
inc
enter
cmp
testb
sbb
mov
and
cld
fisttpll
je
orb
mov
movsl
dec
pop
cmp
fs
outsb
fwait
popa
loopne
je
outsb
lods
push
loope
sub
xor
mov
jg
loope
lock
dec
inc
inc
fiaddl
push
shl
mov
cmpsb
cmp
dec
inc
inc
ret
loopne
xor
jle
pop
adcb
daa
lret
xor
push
out
push
imul
dec
rcrb
push
sti
pop
imul
ss
stc
jne
sub
cmp
setbe
pop
cmpl
jne
jae
jb
testl
sbb
rorl
or
xchg
shll
push
and
mov
pop
cmp
push
xchg
jnp
repnz
jle
insb
push
mov
adc
sarb
rolb
lcall
cmp
int3
subl
cmp
addl
push
sahf
lods
sub
xor
mov
lahf
sarl
sub
push
xorl
inc
cmc
jb
repnz
ja
addr16
shll
es
adc
cmc
sub
xor
adc
xchg
ret
or
jno
pusha
sarb
dec
fstpt
pop
sti
inc
cmp
pop
mov
out
cmpsl
inc
jns
lds
mov
daa
testl
sub
xchg
jb
out
jbe
mov
mov
lea
outsl
int3
aas
jl
cmp
outsl
call
js
pop
mov
insb
insb
les
lret
and
fwait
and
fcompl
mov
jae
xor
rcr
mov
and
lret
in
imul
divl
mov
movsb
xchg
mov
loopne
add
mov
jbe
pushf
mov
ja
cmc
mov
pushf
pop
movsl
mov
test
ds
filds
scas
fsubs
cli
mov
and
mov
add
dec
aaa
jb
sub
sti
xchg
in
and
fisubs
shl
push
sub
push
aas
imul
mov
cli
pop
test
dec
cmp
imul
add
inc
es
rcll
or
in
adc
roll
sbb
mov
xor
push
push
shl
mov
mov
test
and
inc
aas
sbb
into
idiv
call
mov
repnz
leave
sahf
or
ret
pop
call
aam
je
lret
inc
jns
mov
stos
cmc
mov
dec
ret
jmp
aad
xor
lcall
out
lret
aam
lds
mov
mov
add
push
in
cltd
loope
push
das
aam
ss
push
push
inc
jbe
scas
fsubs
loopne
jo
and
and
inc
cmp
movsb
mov
jns
filds
cwtl
test
int
pop
testb
jge
out
dec
and
xchg
sbb
pop
mov
jb
lods
or
and
cmp
jecxz
push
xchg
outsl
pop
into
jbe
icebp
mov
rolb
jl
fcmove
shl
test
push
ret
test
in
sbb
hlt
lcall
leave
mov
test
jp
mov
adc
push
push
sbb
imull
lods
pushf
pop
pusha
fwait
add
push
sbb
push
rorl
and
loop
addr16
sbbl
push
into
cld
push
sbb
xchg
in
mov
pop
arpl
js
push
std
sub
lods
sbb
gs
fs
pop
fs
shr
out
ljmp
pop
push
mov
lret
pop
pop
sahf
xor
imul
sub
or
mov
into
mov
pop
ror
in
add
cmp
or
or
cltd
cmc
pop
ds
lret
sbb
std
xlat
orb
adc
rcrb
aas
mov
andl
test
test
or
psllw
jne
mov
cmp
mov
or
pop
or
aad
clc
sbb
adc
shrl
fsubrs
or
fcoml
pop
jo
mov
outsl
shl
cmp
cmp
pop
cmp
lret
mov
adc
cs
adc
je
xchg
es
and
pop
mov
fistl
out
dec
repnz
and
cmp
aad
arpl
out
out
jmp
pop
push
push
lahf
imul
ja
outsl
pushf
cmp
fldenv
sahf
jg
or
xchg
xchg
ds
xor
movsl
inc
sahf
leave
pop
insb
iret
cwtl
xor
mov
rolb
mov
test
cmp
jecxz
pop
aaa
ja
call
scas
fisubrl
adc
cs
sbb
and
xchg
testl
loop
in
popa
jnp
mov
lds
adc
mov
dec
lret
push
insl
sub
rclb
inc
sti
sahf
movsl
mov
shlb
mov
jnp
iret
adc
shl
mov
test
push
into
add
sub
outsb
inc
xchg
and
test
daa
jmp
and
dec
dec
xor
mov
mov
push
jb
cmp
sub
hlt
cmpsl
insb
jle
test
cmp
push
add
sbb
std
push
insl
mov
jmp
les
mov
aaa
adc
fsub
leave
popf
or
push
add
lea
fdivrl
lods
jge
adc
sub
dec
xchg
jns
outsl
jno
test
pop
or
mov
push
push
daa
pop
lock
lock
inc
stc
aaa
int3
push
jg
ret
cld
mov
add
cs
add
and
cli
scas
out
push
push
cwtl
mov
and
jne
and
adcb
aam
adc
jmp
stos
andb
sbb
in
and
jl
bnd
mov
sub
sub
cmp
mov
rclb
loop
mov
movsb
jne
adc
push
adc
xchg
aam
dec
loope
stos
bound
loope
lods
and
or
out
xor
daa
sub
mov
mov
dec
cld
cltd
in
testl
xlat
sbb
xchg
xorb
mov
xor
js
dec
pop
adc
cli
rcll
pop
fldcw
xchg
mov
sbb
cltd
mov
clc
adc
imul
scas
inc
or
xchg
fildll
roll
les
call
mov
dec
loop
cmp
aad
pop
xchg
push
in
movsb
or
push
adc
adc
int
mov
xor
xchg
fcmovnu
ret
mov
mov
pop
aad
adc
enter
sbb
pop
dec
stc
pop
movsl
jl
jno
add
ds
pop
dec
jle
add
mov
outsb
lds
repnz
sbb
xchg
cmp
clc
sub
in
mov
fimull
and
daa
rorl
jne
imul
sahf
decl
sub
mov
push
push
xchg
pop
popa
jo
arpl
dec
gs
sti
imul
arpl
shl
cmp
out
and
repnz
ficoms
pop
lret
xchg
adc
aam
sahf
loop
add
jmp
or
sbb
push
scas
repnz
enter
add
lods
in
aas
out
or
jo
push
mov
and
pop
xchg
adc
in
rorb
lret
pop
jb
mov
xor
lea
dec
jl
push
add
adc
test
shl
outsb
push
rcl
jbe
cmpsl
add
andb
mov
lcall
inc
int3
call
add
repnz
ficompl
decb
test
pop
ret
sub
mov
popa
xchg
sbb
pop
lods
sub
jne
pop
push
or
mov
and
pop
in
mov
insb
add
jp
xchg
push
add
fmull
fmuls
dec
ja
ja
sarb
repz
sar
cmp
ficompl
hlt
or
iret
cwtl
hlt
mov
orb
arpl
dec
pop
xor
sbb
hlt
pop
lahf
ljmp
push
pop
nop
xchg
pop
xor
jle
es
aaa
sbb
mov
fcoml
push
and
push
daa
cs
mov
sub
xchg
fnstcw
outsb
cli
or
sbb
sub
iret
clc
iret
adc
xor
sbb
cmp
cltd
dec
jl
scas
adc
inc
das
pushf
jmp
or
pusha
lea
mov
push
mov
pop
add
bound
int3
jo
mov
sub
and
adcl
in
gs
dec
cmp
mov
rcrb
cli
sub
add
jg
mov
insl
cmp
adc
xor
inc
js
jno
mov
or
test
stos
pop
xchg
int3
inc
out
stc
push
cltd
xor
mov
test
leave
mov
in
push
enter
sub
add
les
or
faddl
inc
dec
jne
and
mov
std
add
rclb
jb
scas
jbe
lods
dec
adc
lods
pusha
cmovns
sbb
inc
pusha
ficomps
leave
jae
cli
xchg
hlt
mov
dec
das
das
stos
inc
inc
jb
dec
mov
mov
ja
pusha
inc
testl
loopne
fistpll
loopne
mov
lock
imul
jl
fwait
test
out
pop
inc
pop
adc
popf
sbb
push
and
jns
cmp
repz
pslld
mov
add
push
add
sbb
xor
add
and
loop
or
pop
sti
jl
das
push
push
stos
xor
xor
clc
push
outsb
push
and
inc
lock
addr16
pop
and
or
hlt
call
adc
sub
mov
mov
lcall
call
jmp
push
fwait
stos
mov
mov
pop
mov
les
inc
rcr
dec
rcrb
into
clc
jo
jl
mov
mov
mov
sub
and
jle
lcall
mov
xor
mov
mov
jno
and
daa
add
sub
sti
jno,pt
inc
lods
and
pop
movsl
or
lds
loope
imul
fdivrl
stos
fsubrp
cmpb
inc
mov
cld
and
mov
and
mov
out
adc
push
pop
hlt
icebp
add
ret
imul
xor
inc
dec
fisubrl
pop
dec
int
sub
adc
mov
push
les
mov
loopne
scas
cltd
add
mov
scas
xchg
lret
mov
shlb
std
daa
mov
mov
cmp
popf
imul
fsub
mov
clc
cmp
pop
ret
xor
ret
adc
or
aad
loop
emms
push
dec
sub
mov
loop
mov
add
fidivrl
xchg
je
cmp
mov
inc
popf
test
aas
ss
int
cmc
into
inc
jmp
fsubp
ja
and
pop
out
sbb
mov
lret
inc
push
pop
fnsave
jecxz
or
call
or
mov
cmc
aas
pop
pop
or
pop
cmp
add
imul
out
mov
mov
and
jns,pn
je
jg
inc
adc
sti
aam
std
mov
xchg
xor
fldenv
xlat
bound
outsl
push
mov
in
adc
dec
sub
movsb
xchg
call
and
xor
add
adc
fcmovb
mov
sahf
fsubrl
push
cmp
adc
pop
mov
pop
push
pushf
push
fildl
lods
insb
in
sbb
pop
test
addl
outsl
mov
or
movsl
push
mov
lods
in
mov
xchg
mov
popfw
or
mov
test
lret
stc
rclb
adc
or
or
jge
daa
hlt
arpl
mov
pop
push
insl
jmp
lds
sbb
ret
fnstcw
xchg
test
adc
push
fwait
and
adc
sub
dec
iret
pop
movsl
xchg
shrb
push
cmp
xchg
sub
pusha
mov
ja
scas
pop
inc
push
adc
push
enter
jne
add
push
repz
hlt
pop
push
push
mov
jnp
jbe
cwtl
pop
enter
mov
cmc
add
jo
xor
scas
sub
add
in
mov
psubusw
mov
cmp
shlb
outsl
xchg
loopne
cmp
and
xor
push
push
mov
ret
fsubrp
jecxz
loopne
or
jo
negl
sbb
imul
dec
movl
sarl
cli
rcrb
scas
mov
dec
je
popa
mov
fbld
jb
inc
pop
in
pushf
movsb
mov
add
mov
mov
push
test
push
adc
loopne
jne
int3
stos
in
mov
rorb
insl
fisubs
dec
xchg
icebp
mov
stos
dec
push
test
jle
movsb
lods
mov
test
sub
or
or
mov
es
outsb
insb
jge
mov
ljmp
sbb
mov
jo
data16
mov
push
mov
jge
dec
cld
repz
fsubrs
jae
xor
in
mov
mov
and
in
scas
xchg
cmp
fstpt
negb
sbb
push
pop
lret
fstpl
xchg
sub
mov
sbb
aaa
jmp
insb
and
jnp
ds
cmc
data16
sub
push
sbb
cmp
adc
xlat
adc
xor
push
sub
pop
adc
rcrb
sarl
roll
push
enter
mov
leave
adc
dec
js
jb
xlat
push
test
je
roll
mov
mov
sub
icebp
pop
jbe
imul
xor
iret
cld
sub
add
lea
inc
adc
mov
stc
shlb
mov
outsb
mov
in
insb
jb
popf
nop
arpl
bnd
fisubs
xchg
xlat
stc
and
popa
outsl
jno
int
mov
das
lods
aas
test
pop
jb
and
insl
pop
mov
mov
add
add
ret
pop
sahf
lcall
xor
cmpb
mov
out
cmc
movsl
adc
push
jnp
pop
push
xor
das
or
imul
cmc
imulb
lds
push
push
loopne
pop
or
cmpb
adc
inc
xor
push
and
inc
imull
cs
jp
sbb
dec
in
pop
in
iret
add
test
and
out
sub
int
pop
xor
je
add
lds
dec
jno
mov
jge
fidivrs
cmpsl
testl
dec
ret
inc
sub
inc
pusha
pusha
cmpsb
lea
fwait
mov
lock
leave
push
sbb
adc
es
sbbl
add
hlt
add
popf
mov
movsb
cs
jns
xor
adc
iret
dec
pop
ficoml
inc
cmpsb
int
aam
ss
aaa
push
and
insl
xlat
xlat
and
aad
mov
mov
sbb
insl
in
imul
enter
cmc
pop
aaa
nop
fwait
aaa
addr16
jbe
pop
loop
xlat
or
outsl
xchg
jne
mov
mov
sub
xor
pushf
pop
mov
insb
shlb
in
out
and
add
inc
add
xorb
jle
xor
xor
fisubrl
ds
mov
cld
aas
andb
mov
sbb
std
aad
push
xor
xchg
or
push
push
aaa
adc
push
fimuls
loopne
jmp
nop
leave
sti
dec
iret
repnz
fisubl
dec
xor
addr16
sti
insb
mov
fisttpl
gs
push
dec
out
mov
shr
mov
adc
out
sbb
dec
xchg
adc
arpl
adc
or
cmp
push
mov
fldcw
jmp
xor
xchg
adc
push
rclb
movl
sbb
lret
xchg
pop
cmp
cmp
dec
cmp
ds
push
aas
fbstp
xchg
pop
and
lods
jno
mov
inc
push
subl
cmpl
ret
and
xor
add
and
jnp
and
mov
daa
das
lea
cmp
in
or
xchg
cmp
cwtl
pop
sub
scas
out
jnp
je
movsl
movsb
imul
and
xlat
mov
hlt
repnz
fcomi
push
insl
mov
ret
sbb
test
pop
andb
mov
lods
cmpsl
test
push
stos
push
cmp
pop
aaa
leave
xchg
sub
repnz
scas
outsb
testl
mov
mov
and
pop
push
sbb
mov
cmp
mov
push
arpl
add
sti
daa
test
xor
call
pop
jb
xor
sbb
jae
push
inc
mov
dec
mov
sbb
cs
mov
inc
pop
aad
ficompl
divl
push
fsts
mov
push
js
mov
jp
adc
aas
andb
adc
je
outsb
cmp
jmp
mov
cmpsb
mov
sbb
out
inc
outsl
push
pop
mov
sbb
xorl
aad
xchg
hlt
test
inc
xchg
inc
imul
test
sub
adc
sub
cwtl
hlt
fdivrs
sub
xchg
add
jno
ficomps
pop
shrl
add
insb
jo
inc
shl
lret
mov
or
mov
sbbb
incb
mov
je
dec
dec
jbe
mov
ret
xor
inc
ret
push
sub
mov
cmpsb
dec
psrlq
movaps
add
loopne
push
stos
pusha
jne
push
mov
pop
jbe,pt
data16
into
loope
jmp
mov
adcb
jo
push
lret
xchg
sbbb
mov
adc
movsb
sub
fwait
inc
lds
loope
fwait
shll
arpl
add
sub
jg
sbb
adc
jno
mov
or
mov
add
aaa
push
cmpsl
cmp
mov
ja
mov
inc
mov
jo
aam
adc
in
cltd
xchg
leave
inc
add
pusha
adc
jle
cmpsl
test
mov
ret
jne
insl
sarb
pop
inc
and
pop
cltd
push
sub
lcall
out
mov
into
pushf
mov
lods
add
in
sbb
pop
xchg
sub
xchg
push
xchg
sahf
mulb
push
add
and
mov
and
lods
daa
sub
cli
adc
scas
cmc
dec
inc
inc
inc
mov
aas
and
lock
inc
mov
scas
mov
aad
lcall
dec
ljmp
or
pop
mov
es
sahf
jnp
addr16
mov
mov
mov
repnz
cmpsb
mov
cmc
jmp
mov
xchg
inc
or
add
pop
mov
clc
sub
ja
jo
loopne
inc
aaa
push
rolb
sbb
mov
sbbb
shlb
adc
lea
fndisi(8087
inc
push
adc
in
add
and
int
or
daa
idivb
shll
add
jae
add
aaa
fiadds
repz
outsb
in
mov
jecxz
cmpsb
push
push
fsubrl
mov
in
out
nop
fwait
or
adc
jne
push
aaa
inc
pextrw
or
jg
or
push
pop
pop
xchg
ror
or
cltd
mov
push
pop
insb
jecxz
insb
test
in
dec
pop
dec
daa
mov
stos
push
pop
and
test
and
push
lods
orb
jp
shr
cli
mov
jmp
movl
addl
enter
add
imulb
adcb
push
mov
push
loope
sub
add
lea
sbbl
mov
jl
mov
mov
add
cmp
popf
mov
fwait
sbb
inc
cltd
out
hlt
or
or
sbb
mov
fistpl
fstps
and
jmp
add
adc
outsb
sbb
pop
add
pushl
inc
inc
pushf
cmp
dec
loope
sbb
and
or
popa
and
xor
out
mul
sub
scas
das
movsl
jl
add
mov
in
lret
in
addl
and
out
and
ret
mov
insb
movsl
or
int3
jno
xor
jo
bswap
inc
into
pop
loopne
mov
insl
subb
fisubl
adc
lods
cld
sti
notb
out
jb
or
mov
jmp
push
fstpl
movsl
jmp
mov
pop
lahf
enter
repz
sub
mov
push
arpl
in
and
or
aaa
roll
xchg
dec
ds
mov
out
enter
in
pop
lea
std
cwtl
push
out
or
pop
mov
outsl
xor
mov
dec
in
inc
jbe
pop
dec
xchg
cmpsb
or
jno,pn
xchg
enter
mov
std
call
popf
subb
fisttpl
xor
pop
gs
mov
lcall
rclb
icebp
ds
dec
mov
pusha
jo
leave
push
shlb
mov
inc
dec
jl
mov
cwtl
cmpsl
scas
xchg
notl
add
xchg
dec
sbb
mov
push
jmp
outsl
je
and
les
dec
add
loop
mov
dec
mov
mov
lea
xchg
mov
aas
cwtl
jnp
push
fstpt
loop
inc
lock
pop
sub
push
ljmp
or
jmp
mov
jne
mov
pop
por
rorl
jnp
mov
cmpsl
loop
popa
decl
es
fisubl
add
cltd
pushf
les
sbb
add
and
inc
das
mov
cmpsb
inc
subl
add
xchg
lcall
xor
mov
xorl
sti
pop
fxch
sbb
loope
jle
cmc
aam
cmp
xchg
dec
shrl
popf
push
into
jecxz
adc
adc
mov
or
pop
mov
or
push
push
ja
call
lods
ret
cli
jns
pop
inc
pop
and
jns
mov
sar
cmp
or
pop
mov
scas
js
xchg
sarb
sub
xor
inc
paddb
xchg
lea
imul
mov
cmp
sub
in
js
lds
jge
cs
addr16
and
jae
mov
inc
push
push
aad
or
mov
mov
out
icebp
dec
pop
dec
xchg
aam
test
adc
ja
rorb
jge
mov
sub
mov
push
cld
lret
aam
mov
int3
sub
mov
fs
inc
cltd
cmpsb
adc
hlt
cmp
fstpt
repz
jp
xor
outsl
lods
pop
stos
pcmpgtd
out
lea
jl
sbb
push
out
mov
mov
ds
movsb
or
xchg
test
jge
data16
fsubl
les
data16
inc
add
push
in
jno
pushf
jne
cld
fidivrs
pop
ljmp
xor
dec
push
xchg
dec
scas
adc
cld
pop
jno
fs
dec
aaa
inc
push
add
pop
shlb
daa
in
js
outsl
rcrb
in
fsts
test
mov
repz
sbb
lret
test
push
out
pop
jnp
lret
xor
sbbl
daa
fidivl
jle
inc
add
mov
addb
jmp
stos
adc
jg
ret
push
stc
das
adc
sbb
mov
mov
loopne
push
cmp
cmp
lods
xor
dec
in
aad
push
jp
jae
xchg
ret
movsb
or
push
mov
push
test
mov
das
mov
push
shlb
pushf
push
rcrb
dec
into
shrl
adc
hlt
inc
inc
iret
and
fdivl
jle
push
xor
pusha
in
aam
int3
js
orl
enter
inc
mov
in
jmp
lret
pushf
mov
and
jecxz
jo
sbb
xor
mov
pop
out
ret
mov
ds
arpl
mov
xlat
push
mov
pusha
dec
or
mov
lret
add
in
or
add
cmp
lret
push
sti
pop
fadd
push
cltd
mov
push
dec
mov
sar
or
push
xchg
ret
xchg
insb
pop
push
jb
loop
dec
ljmp
mov
sahf
out
jns
mov
inc
int3
fisttpl
rol
jge
js
xchg
and
inc
push
mov
sub
pop
fmull
movsb
pop
and
xchg
pop
data16
je
insl
call
fsub
mov
test
into
mov
jbe
jmp
inc
pop
pop
scas
pop
or
nop
xor
out
inc
lcall
sbb
sub
mov
in
lea
bound
in
rcl
aad
pop
inc
ret
jne
and
insl
cli
jge
lret
sarb
mov
push
loope
xor
icebp
out
mov
adc
jge
cmc
pop
sub
nop
outsl
clc
and
mov
mov
cmp
lock
mov
dec
shlb
es
inc
mov
movsb
addr16
adc
pop
and
mov
pop
push
pop
aad
jae
nop
or
into
imul
pop
out
dec
repnz
je
jp
mov
or
pop
stc
jmp
mov
jl
lea
cli
stos
outsl
aam
pop
xor
jge
cltd
ret
aam
jno
add
add
lcall
icebp
jb
cmp
sbb
adc
jg
and
mov
push
shll
gs
add
outsb
test
stos
mov
lods
rcrl
mov
dec
mov
sbb
in
pop
subl
aam
aaa
fs
and
js
out
push
stos
and
add
xchg
or
inc
lret
fucom
popf
adc
cmp
xor
rcll
xchg
ret
push
sub
andl
push
mov
fcompl
xchg
int3
dec
test
mov
jmp
xchg
jmp
lahf
cwtl
sbb
in
pop
mov
cs
imul
mov
icebp
adcl
lods
push
fldcw
in
stc
jmp
ret
mov
lahf
cltd
jae
pusha
push
loop
sub
adc
push
adc
dec
aam
cmpsl
in
cld
in
mov
adc
cmpsl
inc
dec
pop
gs
iret
movsl
scas
lock
and
push
dec
xor
xchg
je
adcb
inc
and
jl
cld
loop
xor
push
lock
rcr
rorl
jge
pop
pushf
add
bound
pop
jns
mov
dec
data16
cltd
call
je
mov
jg
jb
xchg
cmpsb
lret
dec
lods
xchg
pop
lret
push
jg
xchg
fdivl
ret
sti
cwtl
dec
imul
bound
adc
sbb
push
insl
clc
xchg
dec
xchg
push
pushf
popl
xchg
pop
xchg
xor
nop
adc
cmp
push
cmp
and
shll
cli
or
pop
sub
push
sahf
sbb
mov
mov
dec
jnp
lock
repnz
in
and
sub
aas
xor
sbb
sbb
loope
int3
iret
cmpsl
mov
xchg
in
or
cmp
imul
int
loopne
jne
aas
hlt
push
mov
mov
pop
mov
fbstp
ljmp
cwtl
push
aas
sbb
xor
lret
cmpsl
int
push
lret
sti
dec
outsb
in
dec
cmpb
xor
mov
and
and
lods
stos
mov
test
xlat
push
and
gs
mov
sub
sub
ljmp
dec
dec
lea
mov
inc
inc
outsl
pop
sub
fxch
inc
add
sub
xchg
cltd
movb
push
inc
xor
mov
xchg
mov
outsl
push
pop
aam
sbb
lahf
push
sub
cmp
and
pusha
loopne
out
pop
push
sahf
push
cli
stos
sahf
out
xchg
imul
pop
imul
mov
lods
dec
inc
and
fisttps
jbe
add
aam
les
addr16
xchg
addl
jl
mov
mov
push
dec
hlt
lret
jle
or
das
call
lahf
daa
adc
adc
popf
push
jecxz
push
adc
imul
lahf
shll
adc
cmp
daa
mov
insl
mov
ss
xor
jmp
cmpsl
dec
iret
mov
insl
or
jb
int
pop
cwtl
dec
inc
loope
jae
and
lods
out
cmpsl
insl
imul
sbb
jbe
imul
sub
insb
inc
inc
and
mov
out
and
arpl
push
cmp
hlt
mov
and
push
mov
pop
jl
inc
orb
lret
pop
mov
sub
imul
xchg
cmp
js
push
sbb
mov
jp
sahf
into
sub
mov
arpl
sub
imul
jle
movsl
test
push
data16
stos
xchg
fnstenv
pushf
ret
mov
push
sub
test
mov
lods
stos
insb
stc
add
fbld
nop
fadds
cs
xchg
sub
pushf
push
scas
movsb
push
pop
ficomps
mov
mov
iret
add
adc
setp
mov
mov
sbb
xchg
in
orb
mov
out
mov
fidivrl
pop
and
sti
jnp
xchg
sub
std
mov
lods
push
mov
xchg
xchg
adc
push
loop
jl
loopne
scas
stos
cli
xor
xchg
jb
and
rcll
push
hlt
lret
repz
mov
sbb
push
les
cmp
jle
gs
ja
stos
lret
mov
sarb
in
inc
pop
insb
push
aad
or
xchg
sbb
sbb
xchg
es
jae
inc
jbe
inc
clc
jl,pn
push
ja
imul
adc
inc
push
pop
roll
inc
loopne
jmp
xor
jge
icebp
test
mov
sub
xor
cmp
inc
dec
aas
mov
outsb
mov
lret
fidivs
mov
jae
scas
ljmp
repz
xchg
mov
add
xchg
xchg
jno
sub
test
mov
insb
fucomp
movsb
insl
repnz
push
dec
ja
dec
sub
loopne
mov
cmp
inc
popa
cmpsl
fdivs
adc
jg
into
and
inc
ret
xor
std
das
rolb
les
lahf
xchg
fildll
ja
lahf
push
lret
cmp
push
xchg
jo
cmp
inc
mov
stc
in
aaa
adc
pop
ss
mov
sbb
and
call
rclb
cwtl
inc
iret
repnz
and
gs
fstpt
cmp
or
push
stos
and
pop
push
mov
xlat
cmp
loope
fisubl
lahf
and
mov
mov
or
ljmp
stos
push
bound
add
fistpl
mov
mov
ljmp
pop
adc
mov
loopne
clc
std
jae
sub
mov
mov
repz
add
popf
cmp
sub
shll
mov
mov
ret
xor
push
jne
lods
stos
lea
jge
js
xchg
pop
into
inc
ror
pop
mov
sub
imul
jae
imul
mov
lret
cmp
fdiv
pop
js
aas
or
xor
jge
sbb
test
inc
inc
adc
mov
mov
stc
cmp
mov
negl
mov
js
sub
in
push
push
jns
dec
xlat
push
xchg
or
imul
mov
and
and
fstps
or
shl
and
sub
lods
xor
pop
mov
pusha
or
jno
fadds
outsl
add
push
outsb
mov
and
shlb
addr16
cmp
jle
or
adc
xor
fadd
pop
jo
push
xchg
xchg
into
jno
mov
push
cmp
push
xchg
js
sti
insb
pop
inc
dec
or
fninit
enter
mov
or
out
out
xchg
daa
pushf
lcall
les
sbb
out
orb
test
jbe
sarb
sbb
jb
int3
push
adc
jmp
cmpsb
pop
cli
mov
dec
insl
icebp
sbb
mov
cmpxchg8b
leave
pop
negb
ret
call
shll
les
fildll
loopne
jae
cli
and
jns
lods
aam
leave
lahf
ds
or
push
rol
sti
test
lcall
enter
bound
bound
mov
mov
adc
addb
call
clc
sbbb
sbb
dec
sbb
lsl
inc
outsb
cmp
mov
pop
in
mov
inc
jecxz
pusha
sub
add
int3
xor
cld
orb
lods
xor
data16
xchg
in
imul
test
inc
leave
adc
pop
mov
sub
jne
push
push
fs
popa
xor
out
fldl
mov
in
adcl
fisttpl
movsb
jecxz
pop
push
mov
push
jae
inc
in
out
cmpsb
sub
push
push
and
outsl
in
pop
push
ja
fsts
sub
loopne
std
imul
cmp
cmp
call
pop
jge
aad
cmpsl
lds
arpl
pop
imul
clc
xchg
add
sbb
sbb
lock
xor
jmp
fstpt
push
test
cmpsl
xchg
dec
adc
add
enter
dec
push
fsubrl
add
push
and
inc
and
ja
rorl
outsb
fcmovb
push
or
mov
push
push
pop
sbb
nop
test
push
cld
sub
or
push
mov
fldcw
imull
inc
adc
outsb
dec
push
sub
inc
push
jle
pop
addl
or
rorb
cs
sbb
mov
lods
fimuls
movsb
xchg
xor
pop
rcrl
and
mov
popa
cwtl
ja
rolb
inc
incl
clc
xor
and
aas
and
cmpsl
push
jo
mov
outsb
into
dec
pop
mov
mov
jno
mov
and
sub
lahf
jp
movsb
and
mov
loope
dec
mov
sbb
icebp
or
mov
dec
mov
aam
pop
lea
test
xor
das
jnp
adc
lret
and
lret
push
sti
rcl
fnstcw
test
adc
cmpsl
cmpsb
pop
add
pop
add
sub
in
jg
in
int
std
mov
xchg
push
fisttpll
movsb
cltd
dec
push
sbb
jbe
icebp
dec
std
call
test
pushf
lcall
inc
xor
cwtl
mov
sub
xor
scas
ss
arpl
mov
adc
xor
inc
shll
mov
cmpb
sbb
loop
enter
jmp
jmp
lret
mov
gs
outsb
dec
sbb
pop
loopne
push
xor
cmpb
adc
mov
out
mov
pop
es
test
push
jno
dec
inc
cli
add
cmp
inc
ja
dec
mov
lock
dec
sub
cwtl
mov
insb
pop
push
dec
rcrb
and
or
mov
imul
pop
mov
mov
lret
sub
add
test
loope
inc
or
loope
shll
paddusw
mov
in
or
imul
mov
xchg
add
popa
repz
pop
out
sbb
fwait
mov
lods
and
lods
mov
subl
pop
fstpl
jge
jnp
push
push
jmp
push
into
adc
scas
push
jb
push
or
inc
or
inc
decb
std
inc
xor
std
ss
gs
lods
cmc
mov
dec
insb
into
dec
add
adc
cmp
inc
xchg
sub
dec
adc
mov
inc
mov
cltd
xchg
ror
mov
push
dec
shlb
mov
mov
add
popf
pop
ror
cmpsb
mov
sub
pop
sbb
in
pop
pop
push
xchg
sbb
fildl
scas
mov
mov
fwait
out
and
adcl
push
outsl
call
sbb
mov
fldcw
fcoms
dec
stos
filds
mov
stc
jo
mov
sub
div
fnstsw
xchg
push
ret
push
mov
mov
test
jge
push
sahf
test
stos
push
lahf
push
pop
jmp
insb
cmp
sti
cmpsl
inc
cmp
mull
stos
push
pop
cmc
out
or
push
push
jno
and
add
mov
xor
aaa
adc
data16
dec
mov
fstl
gs
mov
dec
popf
aas
cmp
fildll
cmp
loope
dec
insb
aas
iret
aas
cmp
jnp
mov
cmpsb
sub
pop
mov
inc
movsl
adc
xor
push
xchg
sbb
imul
popa
int3
push
adc
lahf
and
inc
xor
lods
sbb
sub
outsb
push
push
mov
call
xor
xchg
push
fs
fiadds
iret
shlb
ja
xchg
or
mov
mov
ss
bound
dec
cs
cwtl
fnstcw
dec
mov
das
insl
ss
push
ret
data16
clc
push
ljmp
sbb
popa
ja
jo
add
hlt
sub
cmp
daa
jl
popa
and
pop
push
jecxz
push
and
push
stos
ss
imul
sbb
sbb
shrl
push
pop
addr16
aam
cmp
decl
adc
movsb
dec
jmp
cltd
push
clc
dec
xor
insl
fwait
xchg
add
mov
dec
arpl
cmpsb
add
mov
scas
inc
mov
pushl
fwait
dec
lahf
cwtl
sub
mov
mov
test
mov
shrb
lods
out
dec
dec
jb
sbb
push
out
xchg
call
jo
xchg
lcall
or
sbb
call
into
sbb
repnz
xchg
and
pop
xchg
xchg
push
js
sarb
pop
jp
inc
pushw
addb
shlb
lcall
rorb
popf
sbb
cld
mov
andb
out
sbb
ss
mov
xchg
popf
les
xchg
popa
imul
iret
sbb
addl
cmc
rcll
loop
loopne
dec
lea
mov
test
push
add
jge
lds
popa
inc
ljmp
movsl
frstor
inc
sub
jmp
pop
cld
cli
inc
nop
fwait
in
push
jg
ficoml
push
leave
out
stos
add
enter
dec
or
xor
shlb
sub
lods
jecxz
push
inc
cmp
aad
repz
xor
cmp
inc
lahf
mov
cmp
adc
mov
loopne
mov
push
sub
js
pushf
dec
pop
lret
leave
out
das
outsb
arpl
or
sbb
dec
pop
adc
icebp
out
inc
inc
daa
dec
lret
xor
xchg
je
and
sub
sub
insb
add
inc
mov
jecxz
xor
cmp
or
inc
xor
mov
shrl
mov
in
jmp
hlt
call
ret
xchg
arpl
mov
jns
test
and
jno
xchg
sub
pop
js
and
test
stos
cmp
rclb
add
mov
push
lret
in
sub
push
sub
fsts
fs
adc
dec
add
es
mov
cs
xchg
jbe
stos
out
ret
lahf
xor
mov
insb
mov
popa
mov
mov
jl
cmpsl
jns
push
arpl
push
gs
sti
call
pop
ror
and
jcxz
insb
xchg
sbb
adc
ja
adc
cmp
scas
adc
or
insl
mov
xchg
fbld
pop
sub
movsl
fadds
popf
pop
insb
jecxz
aaa
add
pop
movsl
lock
psrlw
scas
ret
add
imul
ficoms
idiv
xor
divb
pusha
pop
xor
mov
and
add
in
inc
call
arpl
adc
daa
push
fists
outsl
cmp
rcll
sti
add
mov
sub
popf
ja
mov
dec
neg
sbb
jnp
imul
sub
dec
insb
fcomps
and
outsb
or
fiadds
mov
outsb
add
cld
sbb
sbb
cmc
outsb
add
mov
in
test
syscall
cltd
sbb
add
add
and
cmpsb
push
mov
mov
js
xchg
dec
dec
xlat
in
and
push
iret
xor
fimuls
adc
push
pusha
aam
sbb
test
shrb
mov
fimuls
and
mov
inc
adc
out
jmp
stos
pushf
mov
or
fldcw
insl
sub
jle
dec
mov
fwait
add
insl
mov
bound
hlt
mov
cs
shll
insl
testb
sahf
push
out
push
xchg
mov
ret
negl
popa
scas
fmull
add
pop
ret
popa
imul
adc
or
bnd
jecxz
dec
bnd
xchg
and
push
rcr
daa
xchg
cmp
adc
ret
inc
loop
notl
xchg
lret
lods
inc
xchg
sbb
jg
movsb
aas
pop
inc
outsb
imul
pop
xlat
dec
cli
jne
cmc
xchg
fnstsw
insl
stc
jecxz
int
addl
jb
push
cld
sbb
cmpsl
nop
jnp
jmp
movsb
cmc
iret
arpl
jl
push
dec
imul
jno
sub
fldl
lretw
xchg
jge
adc
sbb
xchg
or
dec
pop
sbb
data16
cmp
inc
in
xchg
js
dec
add
push
push
jmp
in
pop
sbb
lock
inc
adc
pusha
fs
jge
test
mov
in
inc
je
jo
movsl
push
test
aas
cmp
push
fcomps
push
mov
mov
mov
leave
mulb
push
imul
dec
dec
push
inc
jmp
sbb
mov
ret
dec
inc
pop
test
cmp
scas
push
pop
dec
cmp
mov
push
stos
xchg
iret
imul
ds
popf
shl
aam
dec
cld
cmpsl
adc
sub
add
test
gs
and
insl
sbb
xor
jb
scas
or
int3
fucomp
fisubrl
lock
movl
fwait
adc
lods
clc
xor
js
and
sbb
out
mov
pop
sub
inc
mov
push
mov
andb
cmp
and
sbb
out
push
pushf
icebp
pusha
cmp
divb
mov
sub
out
push
pop
mov
rclb
inc
mov
enter
inc
loopne
enter
jo
xchg
es
mov
inc
pop
fucomi
sbb
in
xor
aaa
and
sub
inc
ja
add
imul
mov
mov
inc
xchg
mov
lods
daa
mov
out
xchg
hlt
and
sub
insl
cltd
pop
mov
pop
cmp
push
push
sbb
mov
jnp
cmpsb
adc
stos
jb
inc
xor
sub
or
fldcw
pusha
dec
out
aad
mov
dec
sti
mov
inc
lret
aaa
pop
cmc
inc
xchg
aam
fildl
push
in
lret
push
fdivrl
and
ljmp
dec
movsl
xchg
repz
ret
pop
and
jg
mov
inc
cmp
cli
add
lcall
and
cltd
and
dec
stos
pop
cltd
scas
pop
jg
je
pop
into
inc
add
or
lock
pop
adc
cmp
fs
scas
popa
cmp
and
cmpl
in
leave
sub
sbb
push
pop
flds
adc
pop
jl
cmp
pop
xor
jbe
sbb
xchg
lcall
inc
xchg
jge
push
cmpl
sub
ja
fwait
xor
shll
or
sbb
sahf
lods
push
scas
or
xor
jno
fidivs
aad
icebp
lock
into
xchg
insl
lds
xor
cmp
or
cmp
shrb
pop
shlb
adc
int
pusha
sbb
push
rorb
repnz
lock
xorl
daa
in
loopne
mov
xchg
sarl
lods
push
mov
cmpsb
xchg
push
pop
dec
shll
je
js
rclb
cmp
jae
inc
das
inc
rcrb
cmp
stos
ror
cmp
cmpsb
and
mov
or
hlt
push
or
stos
mov
push
aaa
std
push
or
mov
push
fs
pop
pushf
push
ror
adc
sbb
mov
add
ret
or
lods
out
sub
jnp
pop
in
test
jo
and
lods
das
shrb
sahf
popa
xchg
ss
cmp
mov
jb
ljmp
nop
jmp
jg
rcrb
daa
mov
sahf
xor
jle
fmuls
jmp
xchg
ret
paddd
mov
js
outsl
rorb
jl
rcl
jne
out
aad
lds
adc
in
idiv
sbb
xor
cmp
or
cmc
fadds
fnsave
sbb
movsl
sbb
and
jp
aam
sub
aam
in
aam
loopne
arpl
addr16
push
xor
in
jp
loop
gs
inc
pop
fildl
xchg
sahf
fmull
ret
pop
lret
pop
push
dec
mov
mov
mov
push
add
stos
inc
cld
inc
ss
cmp
mov
add
jmp
fistpll
pop
jge
lgs
or
cmp
sahf
sbb
les
lcall
aad
scas
sbb
loopne
jbe
repz
out
dec
and
loop
icebp
pop
sbb
imul
inc
cmp
xchg
cld
inc
adc
imul
ja
pop
push
cld
ljmp
cmp
in
dec
ljmp
dec
std
mov
popa
adc
jge
dec
and
or
jb
lcall
cs
and
in
int3
imul
ret
dec
pushf
jl
or
imul
ret
add
mov
repnz
lea
movsb
sbb
dec
mov
lds
shr
cmc
hlt
loop
and
mov
scas
cltd
jae
push
push
rolb
icebp
sub
aaa
mov
sahf
sub
daa
xor
inc
inc
loope
push
sub
push
int3
mov
aaa
push
cwtl
adc
stos
out
add
mov
pop
or
mov
pop
incb
cmp
ljmp
stc
adc
adc
or
notb
nop
mov
push
loope
sar
dec
mov
test
hlt
lahf
or
subb
rclb
and
mov
jge,pt
popf
adc
inc
jbe
test
mov
cmpb
loope
aad
mov
cmc
outsl
inc
add
add
incl
adc
int
jecxz
std
jecxz
aam
shrl
jae
bound
push
stos
jecxz
je
cld
ret
jl
or
cs
jo
icebp
inc
lods
pop
mov
lock
stc
pop
pusha
add
mov
sbb
jmp
js
push
insb
mov
pusha
inc
sar
dec
pushf
inc
popf
loop
clc
sub
push
bnd
icebp
aas
mov
fbld
push
idivl
jl
js
cld
mov
xchg
lea
test
hlt
add
loop
sub
shlb
test
cli
movsl
fwait
push
ret
scas
aad
cmpsb
xchg
xchg
xchg
hlt
jb
push
aas
mov
inc
xchg
lcall
scas
aas
in
rcll
lret
popf
mov
or
data16
pusha
pop
out
ret
and
add
sbb
sbbb
pop
push
add
jns
mov
pusha
pop
mov
movsb
stos
push
mov
ret
sub
js
bound
mov
mov
or
into
inc
xorl
mov
inc
or
ds
out
mov
out
out
stc
and
or
pop
andl
mov
xor
xlat
xlat
icebp
xchg
push
bound
aad
xorl
out
adc
mov
out
imul
xor
mov
popf
insb
aas
inc
ret
or
inc
lods
jns
sub
outsl
imul
mov
mov
cli
call
sbb
cmp
mov
int
pop
sbb
jp
pop
jmp
cs
xor
daa
in
dec
mov
jno
or
cmp
push
stc
cmp
das
jo
inc
data16
push
imulb
jae
jp
or
add
std
or
mov
icebp
sbb
and
shrb
xor
xchg
shll
lahf
mov
pop
xchg
inc
add
test
dec
mov
inc
lcall
iret
xchg
insb
jne
testl
adc
sti
lret
push
or
rcrl
xchg
mov
or
xor
aad
pop
enter
loope
cli
rcrl
imul
xchg
lahf
outsb
inc
stos
pop
arpl
mov
xorl
adc
ljmp
ret
jbe
dec
mov
nop
xchg
xor
adc
popf
aaa
shlb
sbb
notb
or
xchg
inc
xor
fdivl
pusha
aad
cmp
cwtl
mov
or
dec
mov
into
imull
mov
cmp
ss
and
nop
sbb
xchg
pop
mov
cmc
add
push
push
sbb
bnd
mov
push
inc
mov
jmp
cli
push
push
cmp
push
ficomps
js
hlt
jecxz
repnz
cmp
lds
mov
cmpsb
mov
adc
mov
xor
mov
cli
sub
stos
add
inc
cli
push
lahf
jge
jae
push
adc
cmpl
insl
add
xchg
lret
mov
push
mov
mov
pop
arpl
sbb
imul
cmp
mov
iret
ss
fimull
jmp
aas
push
fsubrs
aas
icebp
out
stos
nop
adc
cmpsb
gs
repnz
in
es
lret
ficompl
pop
xlat
mov
xor
sub
scas
in
iret
in
mov
lods
push
xchg
out
mov
lods
loopne
sub
mov
push
sub
cmp
inc
xlat
xlat
add
stos
enter
dec
add
mov
je
int3
fisubrl
test
sbb
xlat
mov
loopne
lcall
out
xchg
xchg
repnz
mov
subb
in
xchg
lret
adc
jg
mov
stos
and
in
jecxz
pop
in
xor
mov
iret
add
push
dec
ss
ss
cmp
sub
jmp
push
dec
mov
pop
dec
xchg
dec
pop
jb
push
xchg
es
adc
pop
insl
and
imul
xor
xchg
icebp
mov
in
xor
sub
xor
push
sub
add
into
sub
lods
sbb
dec
adc
pusha
ss
aam
mov
add
mov
icebp
sahf
mov
xlat
and
in
pop
add
fildl
push
jmp
cmpsb
idivl
imul
add
test
test
rcrl
std
mov
ficoml
pop
inc
lods
pop
or
push
fildl
sbb
push
add
lea
inc
mov
and
leave
fiadds
rcll
pop
loopne
in
fistps
hlt
xchg
dec
gs
js
imul
adc
cmpsb
popf
lock
fprem1
xchg
and
and
shrl
add
mov
outsb
fsubrs
int3
repz
sti
cmpsb
cli
add
sti
cmp
mov
test
sbb
mov
sub
imul
pop
psrlw
sub
dec
sbb
sub
add
adc
push
xchg
push
rcrl
fistps
inc
cmpsb
hlt
mull
pop
xor
addl
inc
add
rol
inc
ror
and
and
push
mov
xchg
xchg
cmpsb
adc
out
gs
mov
out
cmpsb
nop
xchg
cmp
push
pop
aad
lcall
stos
cld
pop
in
sub
or
addr16
pop
jp
xor
mov
lea
shll
jecxz
test
scas
lods
sub
jmp
xchg
pop
dec
fmuls
fimuls
lock
testb
test
repz
insl
pusha
sub
cld
in
mov
rcrb
fwait
sub
add
pop
cwtl
dec
fdivrp
imul
adc
icebp
sub
mov
insb
lock
ljmp
xchg
arpl
enter
dec
adc
push
inc
stc
xchg
inc
icebp
outsl
mov
mov
ror
imul
xchg
sub
pop
fidivl
mov
mov
loopne
mov
push
ds
adc
sti
push
movsl
xor
cmp
pop
ljmp
imul
std
xlat
pop
sub
jp
iret
push
sbb
insl
psubq
sub
cld
add
xchg
or
sub
gs
fwait
sbbl
adc
add
xchg
aad
sbb
adc
jno
pop
hlt
sub
sarl
mov
mov
in
mov
cs
push
loope
xor
sahf
clc
xchg
cltd
sbb
jns
push
mov
in
movsl
mov
out
adc
mov
lcall
or
neg
inc
and
mov
clc
pusha
gs
xor
and
mov
pusha
push
int3
adc
mov
xchg
decb
pop
scas
cld
out
sbb
mov
movsb
mov
sti
or
adc
jle
xor
xchg
add
xor
aaa
or
not
add
sbb
mov
insb
das
out
sbbl
fisttpll
dec
add
mov
sub
test
fwait
pop
push
dec
pop
in
mov
jl
jl
adc
arpl
iret
paddw
inc
cmp
dec
pushf
je
jne
sub
jo
jnp
mov
outsb
sub
loop
inc
nop
not
add
mov
jecxz
andl
sbb
pop
shl
xor
lret
mov
mov
test
pop
push
mov
mov
jmp
xchg
add
dec
push
insb
movsb
sbb
cmp
pushf
out
divl
mov
push
mov
dec
adc
dec
test
cwtl
push
stos
sahf
add
xchg
dec
xchg
dec
aad
lret
inc
mov
jmp
insl
push
mov
inc
sub
scas
mov
add
xchg
xor
and
dec
rcrb
dec
mov
cmc
imul
add
inc
jecxz
cmp
jle
test
int3
add
jno
lret
shll
iret
dec
loope
daa
adc
mov
dec
xchg
out
lock
ret
cwtl
pop
cld
clc
aaa
xchg
pushf
cld
outsb
xchg
mov
dec
notb
pushf
in
mov
nop
jns
jge
push
fnstenv
lret
jge
test
pop
cwtl
and
pushf
xchg
fisubs
push
push
or
xor
sub
pop
mov
outsb
ret
mov
mov
sub
cmp
repnz
mov
call
xchg
push
mov
bound
jmp
addr16
pop
mov
outsb
xchg
inc
test
jle
addb
add
lahf
adc
cmp
push
pop
add
and
pop
mov
loopne
mov
pop
jg
shlb
scas
stc
jg
andb
daa
xchg
imul
xor
or
xor
lods
pop
in
outsb
int
cmp
ljmp
stc
pushf
aas
sbb
lock
pushf
sub
fwait
cmp
xchg
in
je
cwtl
test
aaa
dec
push
out
ret
jbe
aam
cmc
je
test
sub
loop
outsb
cmp
vcvtsd2ss
xor
and
and
ffree
adc
cmp
dec
pop
dec
mov
arpl
cltd
mov
pop
lahf
imul
cmp
in
paddsb
outsb
or
mov
cmp
insb
aas
adc
mov
les
inc
mov
das
scas
mov
clc
dec
jmp
imul
dec
xchg
cmp
enter
xlat
cmpsb
xor
or
aad
or
pop
in
mov
mov
inc
imul
mov
stc
icebp
xor
mov
iret
inc
fbld
dec
sub
dec
add
fnstsw
or
cmp
lahf
stos
xchg
outsl
in
testb
or
pusha
lret
and
aaa
mov
leave
or
sbb
repz
mov
sub
push
xchg
dec
lcall
cwtl
jae
jecxz
jl
jae
imul
fcompl
jecxz
xchg
test
sbb
lods
loop
scas
sbb
or
lea
test
jle
inc
xor
dec
xor
out
ret
cmp
sahf
mov
fdivs
lea
inc
maskmovq
idivl
dec
sub
fmul
mov
jb
push
mov
push
aaa
xchg
in
adc
jmp
imul
ss
jge
add
fdivrl
pop
pushf
fistpl
add
into
lahf
and
sub
and
inc
pop
dec
insl
and
jns
fsubl
sbb
sub
das
ss
mov
xchg
stc
in
dec
cld
sub
mov
push
mov
cmp
xchg
pop
cli
shl
and
inc
mov
mov
pop
add
leave
sbb
mov
aaa
in
mov
ljmp
aad
js
inc
repnz
dec
mov
ds
add
mov
ret
pop
push
cmpsb
inc
int
pop
inc
out
mov
xor
mov
dec
loope
mov
ja
adc
iret
scas
jg
shlb
pop
add
pushf
mov
std
mov
sub
lods
jne
outsl
mov
imul
lahf
add
in
in
push
aam
int3
js
lock
mov
rcrb
testl
mov
mov
lods
loop
gs
xor
aam
daa
xor
mov
xchg
jbe
xor
aam
adc
inc
xchg
and
or
pop
in
testl
stc
mov
aam
push
movsl
loope
xlat
out
sbb
xor
icebp
cmp
cmpsb
push
pop
loop
xlat
or
call
sbbb
scas
cmc
or
jmp
or
daa
lods
pusha
imul
mov
rol
iret
adc
hlt
mov
addr16
cld
in
mov
mov
or
mov
jnp
jbe
cs
or
fcmovnbe
ss
mov
aam
sahf
push
das
inc
call
shr
movsb
test
xchg
xor
orb
mov
leave
cmp
mov
xlat
dec
push
inc
and
cmc
sbb
aas
or
fwait
decl
mov
movsl
cltd
int
lods
cmp
xor
insl
push
lods
cmp
lds
ss
mov
cmp
push
repnz
inc
sub
dec
scas
rclb
cmpsb
mov
dec
dec
dec
scas
std
mov
cmc
inc
mov
aas
add
pop
or
addr16
stos
xor
jmp
mov
xor
loope
mov
mov
notl
lea
rolb
ret
mov
sbbb
mov
andl
xchg
rcrb
xor
scas
cmp
sub
daa
mov
sbb
ret
jg
mov
shl
loop
mov
addl
adc
sbb
gs
lret
imul
flds
loop
cli
push
scas
sub
lods
jae
pop
inc
sub
mov
mov
xor
aam
ror
inc
or
dec
jae
push
add
push
xor
stos
arpl
add
incb
andb
lds
test
stc
mov
mov
leave
insb
xchg
or
lods
inc
popa
gs
pop
push
or
pusha
idivl
cmp
push
test
and
xlat
push
gs
rcrl
out
outsb
jg
test
pusha
je
dec
xor
cwtl
cmc
adc
popf
stos
pusha
ljmp
in
cltd
movsl
out
in
adc
dec
mov
mov
pop
xor
jb
jg
or
adc
in
out
mov
das
dec
ds
push
out
dec
fxch
pop
lret
idiv
bound
xchg
and
loop
loope
pop
imul
fwait
sbb
xor
push
push
fstl
jl
inc
sbb
inc
sahf
sub
out
aaa
int
jno
jne
jmp
sub
dec
adc
and
pop
push
push
sub
pop
xchg
popf
testb
adc
cmp
pop
gs
mov
jge
cli
test
adc
mov
jmp
jno
jbe
jo
mov
cmp
push
ss
addb
sbb
test
dec
add
add
xchg
xor
jbe
ss
push
adc
mov
das
pop
lcall
push
inc
mov
pop
and
adc
arpl
xchg
mov
pop
fsubl
xor
or
inc
mov
xor
jl
loope
xor
cmc
ficoms
clc
stos
or
lret
add
add
jnp
sub
jne
shlb
call
pushf
or
cmpsl
rcrb
out
cli
fdivrl
shl
icebp
push
int
cmp
dec
xchg
cmp
inc
mov
xchg
and
inc
inc
fstpt
sti
fsubs
movb
cltd
mov
stos
mov
mov
cmp
mov
cld
out
lret
and
or
adc
incb
pop
adc
adc
call
ja
sub
cmp
icebp
xor
adcb
ss
subl
xchg
out
scas
dec
and
dec
leave
fidivrl
cld
out
divl
nop
pop
jae
aaa
ja
cs
icebp
outsl
mov
cli
gs
nop
cmc
mov
cmp
mov
and
mov
adc
out
mov
cmp
out
push
rolb
js
rolb
cmp
xchg
pop
xor
loopne
jbe
jae
cmpsb
aam
pop
test
lret
repnz
loopne
sbb
cmp
insb
ja
cmp
adc
add
adc
mov
pop
pop
xchg
push
lahf
lods
addr16
pop
fbstp
mov
outsb
aam
inc
jno
push
sub
out
push
dec
pop
cmp
inc
fsubl
mov
das
push
lea
push
pop
mov
pushf
cmp
popf
int3
inc
pop
fsubr
arpl
mov
aaa
xchg
inc
rol
les
add
int
or
add
push
or
mov
pop
je
jb
pop
mov
repnz
cmp
dec
xor
fdivs
stos
loopne
popf
and
pop
inc
sub
adc
popf
int
jns
int3
in
mov
cld
push
dec
jbe
lock
lea
andb
lahf
jo
out
xchg
insb
sbb
mov
pop
or
scas
pop
or
mov
out
pop
addr16
pop
cmpsl
and
push
loop
add
sahf
mov
aas
dec
jg
mov
mov
push
out
lret
in
sahf
loope
cmc
mov
xchg
clc
shr
xchg
pop
or
mov
sub
test
fisubrs
mov
scas
xchg
das
roll
pop
or
call
out
push
inc
int3
or
lahf
pop
ret
adc
int3
andl
stos
xchg
mov
jge
aam
lods
incl
inc
mov
testb
mov
add
data16
pusha
jbe
inc
iret
adc
loop,pn
shl
mov
rclb
xchg
mov
inc
cmp
cmpb
pop
sub
es
mov
mov
push
mov
loop
cmpsb
pop
cmp
jle
jmp
jp
sub
xor
mov
test
fprem
inc
mov
and
inc
jo
mov
jecxz
test
stos
inc
adc
xor
pop
outsb
lahf
insb
inc
xor
sahf
xchg
mov
dec
ret
push
out
pusha
inc
int3
push
push
cmpsb
loopne
adc
xor
js
add
sbb
out
ret
push
sub
mov
and
mov
in
add
mov
outsb
decb
mov
adc
or
xor
lds
mov
mov
sub
cmpsl
int
push
outsb
push
xor
into
movsl
andb
fstpl
xor
scas
rclb
cmp
mov
stos
shlb
movsl
jno
mov
xchg
push
push
je
fsubs
daa
movsb
jg
mov
cmc
xchg
imul
mov
movb
push
mov
sti
iret
push
push
push
jo
cmp
cmp
xchg
xchg
imul
js
jmp
mov
pop
cmpsl
fucomi
popa
inc
stos
js
mov
popf
test
xlat
movsb
sbb
sub
xchg
dec
inc
jl
js
outsb
pop
ds
sahf
fstpl
test
or
sahf
add
push
adc
fwait
inc
shlb
out
ds
mov
fldcw
in
xor
mov
push
shlb
cmp
pusha
int3
movsl
sahf
into
pushf
hlt
pop
jecxz
retw
loopne
jg
es
xlat
test
add
inc
adc
and
mov
out
pop
mov
aas
fisttpl
mov
mov
cmp
jecxz
xor
enter
xchg
jl
jnp
or
and
mov
cmp
push
add
push
jae
in
xlat
sbb
jbe
cmp
cmp
pop
sub
mov
pusha
sbb
pop
xor
jle
loopne
cmp
sbb
stos
movsb
inc
subb
cmp
xchg
mov
in
mov
stc
pop
pop
sti
inc
and
xor
divl
add
pop
arpl
lret
inc
fdivrl
js
les
cmp
mov
mov
andb
test
rorb
add
or
sbb
enter
push
mov
jge
dec
fcmovne
xor
mov
sub
lret
mov
push
mov
adc
dec
xor
mov
sub
pop
lds
lcall
int3
je
subl
cmpsb
icebp
cmp
addr16
insb
mov
inc
pop
mov
dec
das
or
clc
mov
push
arpl
push
enter
add
xchg
ret
int
rcl
xlat
loopne
and
ds
xorb
mov
pop
sahf
orl
push
ja
fcomps
insb
sbb
sbbl
aas
cltd
mov
aad
add
jmp
dec
sti
fcoml
jb
inc
add
jl
out
flds
sub
pop
fcmove
loopne
or
lret
xor
lea
sbb
fwait
in
inc
mov
push
lret
xchg
sub
or
int
pop
jecxz
ja
adc
inc
into
repz
mov
mov
jns
sahf
dec
in
xchg
test
lret
pop
int3
jnp
inc
pop
jae
movsl
cmp
sub
test
mov
sti
aaa
push
pop
inc
sbb
jge
int3
adc
je
or
and
mov
xor
rorl
xor
in
and
pop
stos
lahf
popa
push
jl
xchg
mov
and
lret
shlb
add
stos
leave
aad
aaa
adc
jne
fisttpll
aad
sub
cmp
mov
out
pop
call
dec
lahf
push
and
in
fsts
in
adc
in
push
fidivs
in
addr16
mov
inc
push
or
xchg
or
daa
scas
adc
shll
adc
and
mov
int3
jno
xorl
pop
mov
xchg
mov
ret
jmp
pop
pop
add
faddp
ret
push
mov
lahf
or
sbb
adc
ss
xlat
push
out
insl
loop
push
rcrb
pop
mov
daa
push
clc
or
lds
push
push
add
gs
out
outsl
shrb
and
sub
mov
push
xchg
hlt
mov
xor
clc
insl
pop
pop
push
into
shrl
outsl
and
call
arpl
pop
aaa
adc
jo
roll
pop
jge
in
mov
cltd
repnz
mov
gs
addr16
cwtl
mov
loopne
mov
lds
test
std
cltd
push
stos
mov
popa
out
cwtl
icebp
negb
mov
inc
aaa
pop
add
in
shll
insb
jle
lret
sub
add
add
pusha
adc
rcl
mov
xor
mov
nop
pop
sbb
out
xchg
cmp
pop
dec
push
or
out
imul
mov
addr16
sbb
xor
adc
dec
leave
and
mov
push
xchg
scas
xor
loop
inc
popa
push
addr16
pop
jle
mov
dec
mov
leave
xor
push
cmp
je
jne
fstpl
and
cwtl
fs
rclb
sub
sbb
stc
sbb
and
stos
int3
pop
cld
jne
fs
repz
mov
push
xor
test
sahf
pushf
sarl
and
dec
cmpsw
sub
dec
stc
xchg
mov
jo
es
cltd
xchg
mov
fisttpl
test
mov
fs
addl
dec
stc
shll
cld
sbb
jae
fnstcw
ret
push
lods
push
pop
repz
aad
es
dec
pop
xlat
sub
sbb
push
lea
add
leave
mov
add
cmpsb
test
add
mov
adc
mov
xor
lcall
into
mov
xchg
shlb
shll
mov
cmpsb
into
insl
cmc
int3
call
cwtl
xchg
fidivrs
pop
sbb
inc
cmp
cmpsb
sub
sbb
pop
inc
xor
and
imull
mov
push
mov
sub
out
in
test
in
lock
cltd
out
lock
stos
mov
cmpsl
dec
and
js
cmp
cmp
mov
loopne
jne
repz
sub
jp
div
imul
fldl2t
scas
xchg
mov
sti
sub
xor
negb
sar
test
mov
add
pop
std
stc
add
imul
and
adc
push
lods
or
orb
in
or
sub
dec
add
fsub
push
stc
ja
mov
push
mov
xchg
sbb
je
in
out
aad
std
scas
lahf
in
xchg
loop
sub
popf
jbe
and
xor
adc
insb
mov
push
xchg
push
ds
mov
inc
sbb
fiaddl
mov
shll
cmp
cmpsl
jb
sahf
loopne
es
and
shr
js
push
call
jne
dec
test
push
sbb
adc
sub
pop
adc
out
fildll
sbb
sbb
rorl
addl
cmpsl
popf
pop
sbb
pusha
mov
jmp
sahf
sub
xchg
dec
sub
les
mov
xchg
mov
repnz
sbb
int
sti
xchg
mov
mov
and
std
jb
sbb
ret
pop
incb
lea
dec
or
lods
stc
arpl
aas
pop
add
movsb
mov
sub
push
or
cmpsl
mov
test
out
xchg
xchg
add
leave
popf
ljmp
fs
loopw
ret
ficoms
imul
push
lret
mov
mov
pop
and
push
insl
push
jae
or
or
xor
call
sub
loop
int
inc
cmpsb
filds
ss
call
movsl
cmc
xchg
dec
mov
xchg
out
fwait
movsl
cmpsl
xchg
xor
jno
leave
lea
fidivs
iret
imul
rcrb
stos
sub
push
adc
push
in
adc
mov
test
add
mov
xchg
shlb
jle
jl
inc
outsl
pusha
sub
sub
in
test
adc
jp
jl
pop
mov
scas
stos
adc
push
jo
mov
orl
pop
je
pop
inc
inc
ret
popa
into
sbb
call
jo
mov
lods
lods
pusha
scas
neg
mov
or
mov
xlat
xchg
repnz
std
fcomp
sub
hlt
jmp
jecxz
and
cmp
jo
addr16
pop
ljmp
sub
pop
imul
outsb
lret
cmp
dec
and
mov
sbbl
rcrl
sbb
mov
sub
cmc
roll
dec
mov
push
xchg
mov
mov
or
mov
cld
pop
add
adc
in
movsl
lret
inc
add
daa
fistl
fidivl
rcll
loop
lods
cmc
cmc
stos
add
add
stos
sbb
aas
sbb
sahf
mov
test
pop
add
jns
int3
iret
push
pop
in
lds
je
fsub
push
xchg
inc
repz
inc
jl
cmpsb
movsl
add
mov
repnz
aaa
lods
sub
jecxz
loope
mov
push
or
add
sbb
jp
and
mov
pushf
icebp
inc
mov
push
out
mov
xor
gs
negb
inc
aaa
sbb
adc
jbe
mov
jge
lahf
mov
addr16
fwait
xlat
sbb
xor
inc
cmpsl
mov
mov
and
adc
lock
icebp
jne
mov
andl
inc
pop
int3
pop
cmp
sub
test
repnz
or
add
test
pop
jp
jp
pop
sbb
stos
mov
jp
std
fsubp
nop
int3
and
mov
repz
lahf
or
xor
mov
pop
pop
pushf
or
clc
or
mov
fwait
mov
xchg
mov
cmp
popf
int
loope
inc
ret
lods
popa
fwait
mov
das
mov
arpl
repnz
adc
shll
test
mov
pop
js
mov
outsl
pop
adc
pop
ljmp
sbb
repnz
js
sub
inc
or
mov
sub
xchg
jle
cld
mov
cmp
mov
in
iret
jge
stc
fstpl
adc
inc
test
xchg
stos
xchg
cmpsb
add
bound
insl
fldcw
gs
and
inc
adc
xchg
mov
add
mov
push
dec
sub
xchg
fildll
aas
je
xchg
orl
fmull
insb
mov
iret
cmpsb
xor
pop
mov
cmp
int3
int
popa
fsubl
aad
imul
jbe
push
out
daa
clc
lahf
or
cli
or
sub
mov
mov
add
movsl
add
xchg
adc
shr
inc
test
addr16
inc
lcall
cmp
xlat
mov
lret
or
inc
lods
les
dec
das
pop
pop
sbb
inc
or
push
mov
dec
add
fsubp
xor
mov
adc
cmc
inc
orb
xor
mov
aam
inc
out
fwait
lock
mulb
popf
leave
dec
fisubs
mov
jb
inc
insb
jl
bound
gs
and
pushf
jl
leave
addr16
js
fsubs
push
xor
xor
adc
mov
test
push
bswap
mov
push
sbb
xchg
repnz
sub
pop
lods
mov
lock
cmpsl
xchg
popf
inc
mov
inc
xlat
rcl
sbb
pushf
push
inc
fbstp
jbe
outsl
ret
andl
sub
loope
cli
sbb
andl
out
or
scas
jbe
or
push
icebp
mov
mov
push
jge
push
in
pop
enter
rcll
les
ljmp
cltd
xor
mov
sub
push
sub
mov
add
mov
sahf
addr16
fstl
repnz
pop
idiv
lds
adc
into
adc
mov
pop
jae
cmp
inc
mov
inc
mov
adc
jne
idiv
je
add
imul
dec
xchg
and
xor
push
out
add
pop
das
inc
xchg
inc
add
add
mov
cmpsl
fcmovne
jl
scas
faddl
cmpl
jl
cmc
cmpsl
fbstp
mov
jno
mov
mov
add
inc
sub
cld
push
or
arpl
rcrl
jne
test
imull
mov
jbe
das
adcl
lahf
lods
jbe
fst
adc
arpl
ja
enter
and
mov
mov
cmp
and
pop
mov
mov
cs
inc
sbb
and
xor
ds
xchg
cmpsl
pop
pop
xchg
fwait
out
popf
or
out
push
xchg
inc
xor
xchg
faddl
push
gs
int
stos
mov
push
idivl
adc
mov
mov
add
sbb
cmp
popf
ljmp
push
les
pop
test
pop
and
leave
sbb
jns
add
loope
mov
pop
and
xchg
aaa
lret
mov
add
push
sbb
dec
sub
xchg
leave
fistpll
or
mov
iret
jo
jno
push
arpl
addr16
xchg
icebp
or
aas
jmp
fstp
lods
mov
mov
test
insl
push
add
scas
sbb
cmp
cli
decl
cmp
mov
pop
repnz
or
lea
fbld
ss
or
pop
stc
jne
je
hlt
out
insl
fcmove
fdivrl
lock
repnz
bound
dec
adc
in
jmp
insl
inc
xchg
push
les
push
dec
imul
sar
gs
push
cmp
xchg
xor
xor
out
lahf
pop
jno
nop
xor
popa
lods
mov
loopne
out
dec
popa
add
jnp
bnd
pop
lds
test
xchg
cmp
cmpsl
sti
icebp
adc
std
test
fimull
in
inc
cmp
push
and
gs
inc
ljmp
in
rcll
bound
ds
sarb
add
fisubrl
and
test
sbb
pop
pusha
fcompl
jne
mov
lods
cld
lods
or
pop
cwtl
lods
mov
xlat
sub
jmp
lock
jnp
add
out
mov
aam
mov
push
sub
in
cmp
popa
test
aam
lock
mov
sub
popa
xor
dec
fildll
mov
mov
stc
jp
push
sbb
stc
dec
jo
push
addr16
or
mov
fwait
sar
mov
sub
sbb
and
jnp
rcr
push
adc
bound
push
pop
mov
mov
lea
out
pusha
iret
rcrb
call
int3
fisubl
and
subl
je
cwtl
mov
sti
stos
xchg
jg
mov
dec
or
or
aaa
jne
aaa
pop
int3
fmuls
jge
dec
add
xchg
pop
out
sbb
in
pop
xor
xor
mov
repz
clc
inc
in
and
shll
mov
inc
lock
adc
sub
insl
pop
imul
dec
imul
cmp
mov
mov
ljmp
add
inc
push
push
add
cmp
xor
dec
fcoms
mov
or
add
daa
es
mov
int3
mov
mov
in
mov
jno
cmp
jge
xchg
pusha
out
mov
outsb
cld
lahf
pop
lret
pop
push
addr16
popf
cmp
sub
out
xchg
mov
jns
jbe
push
push
es
aas
in
pandn
adc
ficoms
adc
mulb
lods
filds
jmp
movsl
daa
repnz
adc
ret
sbb
clc
jns
jne
add
push
add
aam
sbb
jne
roll
sub
jne
sbb
pop
jae
xor
jae
pop
sub
fdivr
xlat
icebp
in
adc
cltd
gs
lock
xor
add
test
mov
scas
mov
mov
gs
imulb
test
test
out
add
or
and
mov
mov
sti
cmc
sub
jb
jl
clc
bound
rorb
pop
dec
adc
imull
test
mov
ljmp
daa
jecxz
ret
xor
sbb
jns
cmpsb
clc
xchg
sbb
or
dec
pop
mov
xorl
push
insb
mov
fidivl
push
ja
xor
sbb
xchg
xlat
std
addl
sti
xchg
xlat
fcmovnu
lcall
test
sub
gs
adc
xor
dec
xchg
or
pop
cmc
test
test
sub
punpcklbw
jnp
dec
or
orb
fs
sarb
add
xchg
dec
data16
roll
xchg
pop
int
lea
push
ret
in
ja
in
cmc
dec
xor
popa
and
repz
clc
aad
inc
popf
in
push
shrl
pop
cmp
mov
push
xor
sti
mov
lods
out
imul
or
cmp
mov
dec
aaa
xor
add
lret
mov
jae
sahf
rorb
push
or
push
or
add
sub
ficompl
dec
test
nop
dec
shrb
cmp
ds
insb
sbb
mov
cmp
dec
shlb
mov
ss
in
daa
adc
add
mov
mov
sbb
cs
sub
leave
xchg
adc
push
loop
jecxz
clc
into
sahf
shrb
add
ja
int
pop
mov
insb
adc
lahf
jne
aaa
iret
out
dec
add
repnz
mov
or
shll
movsl
rclb
xor
aas
std
push
pop
cmp
call
mov
cmpsb
test
and
inc
mov
sbb
daa
sbb
dec
scas
adc
popf
lret
dec
mov
mov
push
outsb
pop
jne
je
sbb
fnsave
mov
and
mov
das
je
jle
sub
out
add
mov
stos
sbbl
call
mov
jns
pop
fildll
in
inc
cmpsl
xlat
mov
stos
inc
aad
out
adc
sbb
fwait
xchg
dec
inc
ror
xor
cmp
into
xchg
xor
lcall
adc
mov
ret
mov
outsl
adc
cwtl
jbe
xchg
lods
xor
xchg
cs
cmpl
jge
faddp
adc
xor
cmp
lahf
in
fcoms
xchg
js
add
jmp
cwtl
int
cmpsb
or
mov
fisubrl
scas
mov
test
jge
mov
or
pop
pop
lcall
loop
arpl
cwtl
sti
iret
push
fbld
shlb
ss
test
aad
loopne
mov
mov
iret
mov
jns
inc
push
xchg
ljmp
add
scas
push
imul
push
mov
adc
popa
mov
inc
rclb
jge
and
xchg
ret
sub
js
jecxz
js
rolb
loopne
aad
sbb
push
cmc
dec
mov
mov
mov
cld
and
ss
ja
repz
mov
jecxz
jbe
mov
stc
xchg
jl
mov
addr16
mov
add
mov
sbb
jg
and
stos
icebp
xlat
mov
dec
subl
lods
jno
test
loop
xchg
push
imul
and
cmp
xlat
pop
mov
iret
shll
and
xor
mov
test
mov
pop
mov
jo
mov
cmpsl
push
or
pop
xchg
stos
in
outsb
sbb
into
push
pushf
jp
jg
xor
adc
movsl
mov
sub
and
cli
fsubrs
inc
addl
xchg
dec
popf
jle
or
cmpsb
jo
scas
insl
dec
icebp
pop
xchg
test
les
leave
mov
xchg
outsl
push
mov
pop
loop
nop
push
sub
cmp
cmp
test
xchg
repz
fisubrl
mov
ror
scas
out
dec
iret
and
lods
mov
pop
add
pop
mov
aaa
or
inc
call
in
icebp
xchg
xor
aaa
stc
roll
incb
sub
stos
or
into
cltd
pop
xor
push
outsb
sub
sahf
xchg
mov
sbb
ja
shll
lods
jmp
inc
push
pop
dec
addr16
clc
add
mov
stos
adc
xchg
jecxz
adc
cmp
lret
stos
movsl
mov
mov
xchg
ficompl
btc
xor
add
sbb
pop
dec
addr16
stos
ret
cmc
mov
push
xor
mov
clc
test
add
mov
test
cmp
je
adc
sub
add
loopne
push
push
or
inc
dec
adc
xchg
sbb
mov
push
pop
loop
int3
insb
ljmp
xlat
rcrl
adc
bound
call
pop
repz
insl
cmp
testb
mov
cwtl
js
mov
or
jns
outsl
push
pop
mov
movsb
ss
addr16
pop
dec
and
int3
mov
push
push
fs
loopne
imul
mov
daa
pop
mov
jnp
mov
lahf
aaa
cmp
rcll
mov
iret
mov
testb
test
and
ljmp
inc
adc
pop
icebp
lret
cmp
movsb
fnstsw
in
cwtl
push
in
xchg
pop
mov
xchg
js
and
das
dec
fcomi
mov
jmp
xor
mov
cs
adc
mov
fs
cltd
jg
fwait
add
mov
mov
sti
cmp
xor
pop
add
call
or
jnp
das
data16
mov
test
shrl
aas
sbb
cs
push
xchg
lds
push
in
add
pop
mov
fs
pusha
into
stc
add
aaa
xchg
fistl
cltd
pop
inc
add
sahf
cmp
iret
hlt
sbb
cmp
and
inc
ret
rcll
mov
xor
and
testl
mov
mov
int3
sub
pop
fidivl
leave
xor
jp
lock
stos
mov
cmc
or
sbb
mov
clc
in
fcmovne
nop
push
mov
scas
sti
pop
lods
test
xorl
jg
sub
movsl
mov
in
insb
cmp
scas
rcr
cmp
mov
adc
repz
xchg
cmp
mov
cmp
jp
mov
leave
stos
xchg
sbb
sbb
pop
shl
xchg
adc
sti
or
in
int
sbb
or
out
shll
inc
mov
mov
aaa
jg
aaa
sub
jg
xor
ffree
icebp
inc
insl
ficompl
add
inc
or
loopne
cs
mov
jo
push
mul
sub
mov
icebp
clc
cltd
or
int
popf
inc
adc
dec
aas
daa
cmpsl
mov
lret
lods
mov
stc
mov
mov
jbe
fistl
pop
inc
mov
xor
mov
xchg
mov
cmpsb
incl
into
aaa
fwait
push
movsb
popa
insl
xor
xor
adc
lret
stos
aam
xor
out
fimuls
out
lds
ss
pushf
pop
or
insb
rcrl
lcall
push
jns
add
mov
xchg
inc
mov
mov
xor
mov
pop
add
jg
sbb
icebp
lahf
and
inc
arpl
repnz
imul
test
adc
movsl
sbb
jmp
aas
push
mov
xor
or
stos
shrl
mov
xchg
push
test
cs
xchg
dec
push
jmp
test
cmpsb
sbb
sub
test
push
stc
mov
mov
adc
arpl
insl
fcompl
or
cmc
dec
lds
or
cmc
mov
cli
jmp
sbb
xchg
dec
pop
mov
cmc
addr16
push
xchg
stc
pop
mov
adc
frndint
mov
and
stos
rcrl
mov
mov
mov
ret
xor
es
nop
testl
aaa
pop
arpl
icebp
ret
mov
push
xor
es
imul
inc
jbe
adc
cli
fimull
xchg
jae
dec
fldt
xchg
fadd
repz
inc
sbb
dec
ds
push
mov
sub
popf
inc
pop
mov
cmpsl
adc
mov
pop
addr16
xchg
iret
imul
mov
push
mov
popa
fcompl
idivb
sub
and
add
stos
loope
test
sti
cmp
iret
clc
insb
mov
xlat
adc
into
adc
jb
enter
lahf
lret
mov
inc
rcrb
shrl
adc
and
mov
es
push
cwtl
mov
mov
scas
jbe
in
inc
mov
xor
aam
mov
lcall
les
jne
sub
sbb
sarl
lea
mov
lret
subb
jo
insl
mov
adc
dec
movsl
negb
insl
out
and
sbb
add
stos
fdivr
sbb
notl
hlt
mov
pop
aam
sbb
out
dec
pusha
cmp
dec
scas
jg
mov
pusha
pop
pop
or
lock
sbb
test
mov
fs
daa
rcr
inc
inc
cmpsl
cltd
enter
mov
sub
inc
inc
xor
cmpsl
sub
xchg
lods
inc
and
xor
sub
mov
out
pushf
sti
push
dec
in
dec
iret
movsb
xchg
and
mov
mov
jnp
lea
je
sbb
lahf
adc
mov
mov
inc
sahf
frstor
sbb
mov
mov
out
lahf
sub
or
dec
cmpl
gs
and
stc
rclb
push
ret
nop
mov
jecxz
sub
test
lods
test
cmp
pop
dec
pop
xchg
mov
lcall
jbe
fs
sub
and
sbb
sbb
sbb
dec
dec
data16
leave
cmp
out
gs
fisttps
adc
lds
xchg
or
push
and
cs
mov
push
fistl
mov
jbe
xchg
aam
test
popl
es
sbb
outsb
and
xchg
cmp
add
xor
pop
xor
bound
insb
shll
mov
and
clc
sub
and
adc
js
dec
or
std
out
sub
lods
imul
pop
std
cmp
pop
xchg
cmpsl
push
hlt
cmpsb
insb
jo
leave
adc
out
dec
xor
jno
fwait
inc
sbb
adc
push
into
lock
mov
xchg
adc
xchg
xchg
xchg
movsl
out
in
sub
popf
mov
cmp
fdivr
pusha
call
test
jbe
jle
les
insl
js
push
inc
mov
popa
sub
add
push
adc
mov
push
int
notl
and
pop
jp
and
call
andl
push
movsb
xchg
out
inc
inc
add
xchg
inc
out
iret
sbb
test
div
in
add
nop
fcmovu
mov
and
sbb
jo
stos
loope
insb
mov
xchg
fsubl
stc
mov
jnp
pop
inc
movb
enter
test
jle
and
hlt
mov
rclb
nop
xchg
jno
pop
es
js
icebp
sbb
mov
xor
vxorps
sbbb
pop
pop
outsl
popf
push
orl
push
push
xor
mov
test
fs
repnz
jae
je
les
or
lods
in
or
js
inc
xor
push
repnz
test
inc
jmp
pop
push
push
aam
pushf
mov
jle
stc
leave
inc
in
aas
or
icebp
addr16
ss
pop
push
jno
jmp
int3
jp
and
stc
repnz
dec
or
jae
xchg
push
push
arpl
xor
sbbb
pop
clc
dec
jp
enter
mov
mov
add
or
dec
cmpsl
push
gs
je
xchg
or
mov
lock
inc
mov
ja
mov
mov
pusha
sbb
in
pop
lods
xchg
cmpsl
adc
cli
sahf
insb
out
add
push
daa
mov
pop
imul
out
dec
mov
or
adc
push
insb
pop
and
add
mov
jnp
out
cmp
cmp
jp
ffreep
in
jge
cwtl
ljmp
repz
in
dec
or
push
ljmp
ljmp
cli
pop
cld
movsl
mov
mov
stos
sahf
loop
imul
mov
jb
nop
or
xor
ja
into
xchg
sti
lock
mov
jne
pop
xchg
pop
sarl
stos
dec
outsb
pusha
lahf
cmpsl
in
mov
inc
inc
xchg
inc
lods
scas
add
divl
int3
adcb
dec
push
mov
or
mov
fidivrl
or
pop
cmpsl
xlat
xchg
clc
mov
sbb
dec
fimuls
repz
scas
popa
adc
lods
mov
dec
lock
xchg
cmp
xchg
dec
jbe
xchg
leave
sbb
adc
ret
pop
movsl
push
jne
nop
mov
aas
cwtl
pop
mov
addl
jno
and
repz
pop
pop
addr16
sbb
test
jb
xor
mov
or
out
movlps
out
aam
pushf
or
dec
ficompl
push
and
mov
xor
xor
cmc
push
jb
rcl
dec
inc
shlb
call
fwait
cmpsb
mov
push
fldl
lret
aas
clc
xlat
dec
xchg
add
cmpsb
jnp
in
dec
and
mov
and
test
xchg
mov
lods
sub
in
adc
rolb
hlt
out
inc
dec
mov
add
decl
pop
dec
cs
pop
xor
lock
pop
ljmp
inc
lret
in
sbb
mov
lock
pop
xor
or
sarl
add
lcall
mov
mov
cli
or
xor
adc
mov
lds
add
int3
push
subl
out
fcomps
repz
ds
adc
imul
mov
inc
add
mov
mov
pushf
xor
jnp
cmp
test
or
mov
add
out
arpl
mov
pop
shll
xchg
jno
popa
xor
adc
adc
test
aas
mov
mov
movsb
punpckldq
loope
lahf
pop
ret
lds
lret
cltd
mov
mov
inc
mov
mov
add
jbe
add
sbb
cmpsb
scas
cmpsb
incl
sti
pop
xchg
mulb
aam
sub
ljmp
scas
dec
out
push
mov
fsts
pusha
push
sub
and
dec
repz
frstor
xchg
xchg
cli
popa
mov
jne
adc
dec
lods
mov
pop
shr
rorb
mov
fidivrs
daa
mov
pop
call
xchg
sar
cmp
scas
inc
int3
add
mov
leave
js
les
push
testl
sub
add
push
outsl
sub
arpl
lret
pop
call
cli
scas
faddl
lods
pop
and
pop
push
sub
xor
xor
or
clc
dec
scas
sahf
lahf
jnp
push
adc
call
push
sub
out
cltd
push
or
cmp
adc
into
ffreep
shll
call
outsl
or
dec
adc
mov
loopne
outsl
sbb
int3
int3
mov
xlat
ficomps
push
pop
fisubrs
xlat
xchg
push
fs
mov
scas
repz
cld
fadds
mov
shl
mov
movb
andl
push
scas
mull
mulb
push
cmp
push
dec
scas
rorb
dec
adc
clc
shrl
sbb
cmp
cmp
jp
add
insb
insb
xor
push
xstore-rng
cmpsl
orb
gs
jne
clc
lcall
std
loopne
inc
push
sbb
aas
push
bound
pop
lret
movsl
inc
sti
cmp
loop
neg
repnz
xor
daa
lcall
or
cli
sbb
rcrl
aaa
mov
out
js
jle
addr16
addb
jne
inc
push
mov
dec
lea
hlt
dec
cld
nop
inc
and
mov
fldl
ja
pop
push
sub
sbb
lods
inc
sbb
and
pop
and
xchg
lea
or
cli
xor
andl
shl
mov
js
mov
leave
out
dec
mulb
fs
xchg
jbe
enter
xor
or
scas
dec
int3
cmp
enter
insb
mov
inc
andb
adc
setnp
inc
cli
or
add
lds
fdivl
in
js
jae
out
xchg
dec
lock
fbld
es
mov
popf
stc
push
ja
stc
lods
sbb
add
cltd
mov
mov
lds
adc
xchg
mov
xchg
jmp
mov
pop
inc
xor
jge
adc
push
xor
mov
xchg
das
inc
push
imul
mov
in
aam
into
add
push
inc
std
lahf
sti
sub
loopne
int
pmulhuw
repnz
and
shl
cmpsl
or
cmp
add
rorl
and
gs
addr16
mov
push
jbe
fcmovnu
mov
popa
mov
adc
scas
in
dec
inc
je
and
rolb
inc
push
dec
xchg
xchg
push
rcrl
jo
sbb
inc
shll
ss
daa
push
movsb
jo
push
and
mov
cwtl
xor
mov
xchg
mov
jmp
insl
pushf
test
adc
inc
ljmp
cld
rorl
or
push
mov
mov
outsl
enter
popa
or
add
xchg
add
mov
mov
mov
test
shlb
movsb
inc
sbb
jmp
addr16
sahf
adc
sub
adc
mov
sarl
push
cmp
iret
sbb
sub
xor
or
addr16
cwtl
push
pop
pop
push
loopne
ds
dec
aam
lahf
mov
push
add
xor
adc
ja
push
and
scas
imul
pop
call
filds
and
into
mov
lahf
notl
xor
out
shll
or
sahf
cwtl
roll
rorl
les
in
out
cli
jge
mov
push
jmp
adc
push
orl
les
pop
aam
jle
imul
add
dec
ror
jg
xor
sbb
sub
push
dec
stos
mov
js
icebp
cmp
jns
lahf
mov
out
jmp
push
adc
pushf
lea
cltd
xor
sub
jb
orb
in
dec
fwait
mov
mov
ret
lods
jns
xor
shlb
ret
mov
mov
add
inc
dec
inc
scas
sbb
dec
add
adcl
sub
pop
or
shl
and
mov
xor
lahf
jbe
sbb
pop
xor
fimuls
pop
jle
je
xchg
ret
pop
popa
mov
into
cmp
arpl
shrl
mov
lea
fwait
aam
xor
jno
in
xlat
jp
scas
lods
cmp
das
push
xor
addr16
inc
fscale
lds
xchg
inc
adc
dec
lods
rcrb
loope
gs
shll
xlat
repnz
ljmp
xor
shl
shll
stos
ror
into
das
mov
xchg
or
incb
and
and
push
in
push
sub
push
into
sub
adc
pushf
mov
je,pt
jg
stos
call
lcall
and
mov
mov
ds
jbe
pop
jle
pop
in
pop
xchg
push
icebp
mov
jae
add
repz
leave
lret
jns
out
cmpsb
rolb
movsb
je
mov
repnz
jns
xor
add
sbb
rcll
adc
rorl
xor
add
push
add
add
cwtl
sub
mov
arpl
lcall
xor
or
jge
cmc
sbb
roll
ret
push
outsb
nop
mov
push
movsb
dec
push
sub
push
pop
test
push
stc
outsb
faddl
mov
jbe
hlt
in
out
lret
xchg
sbb
gs
aaa
jnp
mov
jbe
movsb
jne
fsubl
movsb
movsl
out
jbe
lret
popa
pusha
cmp
icebp
in
jg
lahf
testl
jbe
pop
aas
and
testl
push
pop
xchg
ret
iret
mov
jne
adc
cmp
rcr
inc
jp
scas
jecxz
adc
add
repnz
push
push
cmpsl
jecxz
pusha
add
stos
jns
inc
popf
dec
repz
pop
dec
push
in
les
ds
adc
or
cmp
call
adc
je
adc
mov
sub
cmpsb
jl
xchg
or
aaa
xlat
dec
nop
mov
out
sub
inc
pop
insb
sub
cmpsb
mov
lods
inc
mov
pop
push
mov
add
pop
jmp
dec
xchg
mov
es
enter
incl
in
push
jl
mov
cmp
dec
push
xchg
lcall
scas
xlat
pop
push
gs
or
ss
sar
inc
shll
add
sub
gs
mov
int3
repnz
sub
jo
sub
lret
ror
fnsave
adc
lods
xchg
sbb
adc
adc
incb
ss
int
cmp
stc
sahf
jae
lods
pop
ss
nop
cli
jbe
nop
lea
adc
xchg
into
mov
iret
xor
jno
sbb
mov
sbb
dec
dec
popf
lock
sub
in
and
xor
lret
sbb
test
lods
fcomi
in
sbb
aad
faddl
outsl
aad
push
push
mov
pop
sub
mov
das
mov
lds
das
adc
xor
pop
inc
and
pop
pop
mov
cmp
aad
add
sub
push
mov
das
into
cmc
enter
ss
cmp
icebp
or
imul
fsubs
xlat
mov
fmulp
inc
loopne
add
fisubs
imul
push
push
mov
pusha
xor
ds
cmp
lcall
inc
add
repnz
int
je
mov
ret
loope
and
sub
sbb
dec
jbe
test
ss
pop
in
cmp
mov
fildll
push
out
push
in
test
hlt
mov
mov
jb
sbb
mov
xchg
mov
xchg
cmp
xor
xchg
xchg
add
push
flds
pop
cmpsl
mov
inc
daa
inc
or
andb
mov
mov
outsl
dec
hlt
movsl
out
pop
mov
xor
mov
es
dec
push
adc
cld
fdivl
xor
jne
lds
insl
out
dec
push
mov
sti
loope
dec
dec
sub
mov
lea
mov
insb
sub
add
and
or
decl
imul
inc
and
ds
mov
fistl
movsb
clc
mov
push
dec
jle
pop
into
xor
shrb
pop
xchg
aas
lret
mov
add
add
cltd
and
jmp
adc
mov
and
push
dec
insb
jnp
movsb
mov
lea
mov
in
scas
out
aad
jecxz
or
test
imul
outsb
xor
pop
jo
bound
shlb
pop
frstor
ror
test
int3
scas
mov
fcmovnu
mov
dec
subl
add
movsb
pop
ljmp
mov
jle
jecxz
push
adc
jbe
push
cltd
fimull
push
dec
stc
out
mov
pushf
aas
aaa
sti
lods
mov
shl
cmp
lahf
mov
push
mov
pop
test
xchg
mov
decb
jmp
and
push
int
stos
push
add
xor
imul
sub
and
in
cmpl
jnp
and
rcrl
arpl
pop
fwait
adc
jo
lods
mov
rcrl
paddsw
je
cwtl
cld
mov
pop
mov
inc
mov
sub
or
push
fildll
pop
ds
leave
clc
jnp
push
jge
iret
push
or
outsb
xor
insl
loope
xor
and
sub
and
and
adc
mov
add
mov
mov
add
lret
mov
movsl
cmpb
loopne
ds
lock
mov
daa
stc
cli
lea
dec
add
je
loope
gs
fstpt
mov
cs
xor
jp
ds
inc
adc
mov
movl
cmp
mov
ss
into
xor
sbb
xor
stos
jb
test
push
pop
jae
mov
scas
scas
movsb
imul
add
push
and
xchg
xchg
lahf
popa
test
xchg
es
inc
jg,pt
pop
pop
pop
mov
add
in
rcrb
cmpsl
mov
cmp
mov
lcall
ror
xor
int3
or
fsubrs
pop
dec
fstp
pop
pushf
mov
xchg
jns
js
imul
ret
hlt
repnz
cmp
ja
cs
ss
pop
out
rclb
push
ror
sub
push
fwait
std
int
dec
mov
mov
inc
jne
pop
sub
dec
inc
lock
test
rorb
cmc
sub
out
or
sub
xchg
adc
movsl
mov
popf
sbb
das
pop
ret
xchg
xor
imul
xlat
lcall
inc
test
scas
es
aad
fldcw
data16
mov
aas
or
imul
out
es
xor
pop
xchg
mov
jne
pop
insl
dec
inc
jp
fcomip
and
push
ljmp
dec
fnstcw
adc
mov
out
shrb
xor
push
jns
pop
fst
jb
or
mov
call
sbb
fnstsw
stc
inc
pop
xchg
testb
jle
pop
gs
dec
dec
and
mov
and
push
push
xor
test
cwtl
and
pop
mov
les
jbe
loope
pop
lea
push
inc
sbb
imul
sub
inc
call
cmpsl
mov
cmp
shr
iret
call
or
sub
and
daa
shll
cmp
mov
shl
fucomi
aas
loope
jp
cmp
je
and
mov
mov
dec
ret
mov
cmpsb
add
mov
repnz
stos
dec
stos
aad
dec
jbe
or
out
cld
shrl
push
pop
pop
mov
jbe
sahf
dec
mov
imul
push
xchg
and
insb
lods
es
mov
jl
mov
jg
subl
add
jnp
mov
mov
mov
je
repz
cmp
notb
rcrl
pop
loope
inc
data16
cmp
inc
inc
popf
push
or
inc
mov
stc
pop
and
test
push
into
pop
pop
xchg
sub
pop
movsb
scas
push
mov
mov
roll
inc
aam
hlt
and
in
and
dec
add
cmpb
scas
lds
dec
bound
fwait
lret
mov
in
fmuls
adc
in
dec
scas
movl
mov
pop
jbe
push
sub
jae
cmp
in
decb
popf
int3
cwtl
xor
out
je
sbb
sub
push
mov
pop
mov
jle
movsb
movsl
shll
imul
pop
call
out
sub
cltd
fwait
or
outsb
arpl
movsl
imul
dec
outsl
enter
call
mov
sub
orl
fildll
mov
les
push
jp
jmp
rcrl
sbb
inc
push
cmp
shrb
imul
movsl
stos
mov
lret
mov
fiadds
es
cmp
mov
xchg
push
adc
adc
pusha
scas
fists
push
int
adc
jb
sahf
or
push
roll
cli
jp
jle
inc
pop
mov
das
push
add
inc
mov
adc
xchg
xor
subb
cmp
adc
je
in
or
adc
or
xor
test
inc
and
xchg
js
pop
rcrb
sahf
aaa
dec
push
mov
pop
fcmovbe
jmp
adc
mov
add
in
mov
mov
jbe
int
xor
rcrb
lea
loop
xchg
dec
dec
rolb
mov
icebp
pop
enter
lods
clc
fcomp
pushf
es
push
sub
dec
jno
push
mov
addr16
and
arpl
test
lahf
inc
xor
sub
cwtl
jb
sub
and
inc
daa
or
lds
inc
lock
bound
push
or
pop
mov
es
out
stos
adc
or
gs
xchg
hlt
sub
daa
sbb
mov
data16
cmp
cmpsb
test
mov
int3
int3
xchg
fwait
push
incb
and
test
stos
dec
insl
cmc
cmpsl
sub
aam
jb
sbb
inc
cmp
sbb
imul
aas
mov
add
int3
cmp
mov
add
ljmp
sbb
and
pcmpgtb
sbb
xor
sar
in
loope
pop
repz
xor
cwtl
sbb
shl
leave
mov
ret
mov
pushf
inc
cmp
push
xchg
jp
jl
adc
bswap
mov
ja
mov
or
mov
lods
and
mov
test
scas
ret
cmpsb
mov
pop
jmp
stc
adc
shrl
lret
jo
dec
inc
push
cmp
sub
mov
shlb
jmp
or
push
popf
loopne
cli
aas
bound
jl
sbb
push
push
dec
es
scas
test
or
add
lock
shll
inc
or
or
inc
sarl
push
imul
ljmp
scas
pop
push
jns
aas
jecxz
ljmp
push
sbb
outsl
push
out
test
frstor
stos
push
js
inc
jns
mov
test
xchg
test
add
sub
enter
ljmp
shrl
adc
mov
or
push
add
aaa
add
std
jecxz,pn
in
ret
lea
loope
shrb
ret
adc
sarb
clc
xor
sub
jo
dec
jno
xchg
lods
mov
xor
popf
adc
dec
sub
outsl
and
out
push
lahf
stos
mov
push
sbb
fidivs
sbb
mov
arpl
in
in
aam
int3
out
pop
cld
sarl
sar
and
fidivrl
dec
mov
mov
loop
xor
add
inc
push
pop
xor
sub
inc
clc
andl
jle
add
popf
shl
jne
xchg
push
push
lods
cmp
jnp
sub
sub
dec
lcall
shrl
aad
outsl
cli
xor
sbb
lock
and
aaa
jnp
mov
dec
cmp
or
and
cltd
or
mov
nop
mov
xchg
sbb
pop
ret
addr16
int3
mov
cs
cwtl
rcll
sbb
loop
push
lea
cmpsb
xchg
iret
push
test
test
outsl
fs
in
jmp
or
leave
scas
push
or
enter
push
stos
add
repnz
pop
or
cmpsl
adcb
or
mov
not
test
out
mov
adc
int
add
pop
pusha
mov
fwait
shll
cmp
push
dec
lret
cltd
mov
and
lock
xor
sti
sti
or
outsl
xchg
xchg
test
stos
loopne
xchg
aad
les
or
pop
xchg
mov
sahf
jp
or
push
cmc
sub
and
rclb
sbb
enter
and
addb
lret
pop
push
dec
aam
inc
fwait
lea
mov
cmp
clc
cmc
ljmp
fldcw
and
add
mov
movsl
cmp
jo
mov
cwtl
push
loope
jae
sahf
mov
loopne
push
pop
xchg
stos
and
cld
sub
out
stos
inc
dec
cmpl
dec
gs
jb
test
pushf
insb
push
sti
out
mov
sbb
inc
int
adc
jns
cmp
fldl
mov
or
ja
out
jmp
push
sahf
xor
mov
and
add
cld
jae
lret
inc
mov
mov
xchg
or
sub
mov
cld
cmp
sahf
sbb
and
xchg
scas
pop
outsl
jns
pop
cmp
mov
arpl
add
mov
lret
pop
and
cltd
jns
rcr
cwtl
sbb
cmp
mov
sub
mov
inc
mov
lahf
pop
pop
shld
pushf
ljmp
roll
push
mov
jno
out
test
pop
lock
mov
inc
push
pop
scas
cwtl
cltd
adc
pusha
clc
fstpl
mov
test
imul
sbb
ficoms
into
cmpsl
test
jo
jne
es
clc
pop
andl
test
sub
in
js
jmp
inc
scas
lea
add
cltd
lcall
mov
cmp
jmp
sub
sbb
rolb
xor
cli
pop
xchg
fbld
adc
mov
rorl
rcrl
aam
loopne
inc
xchg
in
jb
dec
fisttps
fdivrs
pop
push
out
into
in
push
mov
es
inc
jo
mov
dec
adc
fs
nop
and
stos
push
adc
insl
sbb
mov
ret
mov
aam
or
xor
insl
sub
repz
call
sahf
js
fwait
cmp
jo
in
cmp
jg
pushf
scas
and
out
fiaddl
push
sub
adc
adc
xchg
inc
es
ja
lock
push
negb
jp
or
inc
stos
cmp
jp
enter
sub
std
out
mov
xorb
loope
cmp
jle
cwtl
adc
mov
sub
stos
repz
add
lock
jge
dec
rorb
xchg
push
imul
jns
lret
and
cmovns
incl
shrl
add
mov
lret
nop
out
cld
xchg
lret
xchg
sahf
adc
mov
xchg
cli
jmp
js
fmuls
jmp
mov
mov
cmp
sbb
faddl
jmp
cmp
jmp
cmpsl
fstpt
push
mov
inc
push
loop
sub
lods
stos
shll
add
mov
and
mov
ud2
leave
mov
imul
jnp
sub
jmp
xor
test
dec
cmp
hlt
mov
sbb
mov
sub
movsl
cmp
mov
and
imul
scas
out
ret
popa
daa
pop
addl
out
shll
xor
incl
pop
or
and
hlt
sub
fcomp
fsubrl
pop
repz
sub
subb
les
sub
lds
frstor
aaa
sub
stos
inc
mov
pop
mov
mov
push
lods
push
mov
repz
dec
addr16
rcrl
xor
jge,pt
xor
xchg
sbb
xchg
in
jl
and
pusha
imul
xor
pop
jp
ret
add
jbe
rclb
push
repnz
inc
add
cmp
xlat
lods
dec
xchg
mov
pushl
sahf
mov
sub
mov
xor
sbb
jp
and
pop
idivb
shlb
pop
enter
aad
jbe
push
cmp
pushf
add
sub
mov
sub
std
das
push
out
pop
out
mov
sub
rcrl
xchg
sbb
dec
add
xor
mov
pop
jmp
aas
xor
sbb
mov
stos
int
inc
int3
jp
push
dec
xor
js
pusha
pop
aam
mov
add
cltd
mov
sub
testl
mov
ljmp
push
and
sbb
adc
imul
popa
jb
in
mov
mov
mov
adc
cwtl
and
outsl
jb
out
enter
pop
lcall
std
mov
xchg
push
inc
roll
sbb
mov
xchg
and
fmull
incl
fs
in
in
lods
jns
stos
pop
mov
test
jnp
add
mov
mov
and
fisttpl
arpl
adc
and
cmp
rcrl
push
mov
jle
mov
sti
pop
pop
mov
lahf
push
or
test
and
in
mov
push
insl
ljmpw
and
cltd
test
in
mov
and
daa
inc
nop
in
or
repnz
das
mov
clc
push
pop
cs
pop
xlat
push
pop
sbb
push
xlat
or
xlat
addb
jno
pop
test
push
push
pop
iret
cmpsl
jle
into
loopne
repz
dec
pop
fdivl
xchg
push
loop
rcrb
mov
jge
js
dec
jae
sub
clc
lret
imul
push
out
sbb
add
es
arpl
sub
decb
add
in
mov
mov
jo
pop
clc
into
aas
pop
jp
mov
addr16
rcl
jbe
pop
fcomi
fistpll
subl
arpl
cmp
insl
inc
in
gs
push
popf
imul
aaa
pop
adc
jbe
jmp
loop
pop
sahf
or
cmc
pushf
aam
into
sub
mov
jae
xor
call
push
push
cmp
xchg
xor
fcoms
sub
popf
and
loope
test
push
sub
inc
push
sbb
xchg
ss
adc
incb
movsl
icebp
sbb
jb
rol
jl
je
or
es
cmp
push
stc
jb
inc
mov
push
pop
sbb
sub
push
xor
sahf
das
rol
xchg
inc
or
jne
test
dec
xchg
loope
popa
les
sbb
jg
jne
xchg
ds
daa
pop
mov
out
jl
icebp
mov
notb
mov
xor
or
xor
sbb
mov
lods
mov
mov
out
mov
and
in
mov
jg
mov
or
cmp
cltd
mov
iret
cwtl
inc
push
xor
jl
lods
insl
inc
sbb
dec
idiv
xchg
test
or
inc
sbb
stos
movl
arpl
inc
clc
rorl
jb
inc
pop
out
ljmp
mov
mov
mov
pop
sub
shl
lret
pop
push
das
add
jmp
int3
jae
add
adc
adc
adc
sti
stos
test
sub
sbb
out
xchg
sub
push
das
subb
xlat
ja
mov
inc
gs
mov
js
mov
lods
push
inc
push
fidivrs
pop
jne
loopne
sbb
inc
mov
enter
int3
lret
out
adc
lcall
xor
cmp
jno
push
popf
pop
sub
clc
test
cltd
fcoms
push
clc
inc
cmpb
out
lahf
call
test
mov
das
xlat
rcrl
addr16
jmp
push
dec
adc
adc
loope
cmp
fbstp
fimuls
pop
sti
pop
ja
mov
ret
sahf
mov
out
push
cmp
xchg
addb
jnp
sbb
popf
mov
imul
fisttpll
or
lret
push
mov
cwtl
shl
xchg
adc
test
cmp
cmpsb
or
scas
add
fs
dec
jns
lret
mov
daa
pop
shl
lret
repz
jmp
test
into
pop
fdivl
or
ffree
repnz
mov
cmp
add
ret
cmp
mov
fdivs
or
adc
sbb
out
enter
pop
lock
mov
or
insb
sbb
mov
ljmp
int3
sub
mov
cmpsl
loopne
out
fistps
sub
hlt
shr
ret
jle
add
icebp
add
push
inc
shlb
sub
jno
shll
out
rdmsr
in
jge
mov
ds
inc
fucomp
xor
ds
push
add
add
arpl
aad
aam
repz
loop
das
jle
cmovle
inc
inc
rorb
jo
int3
push
xor
mov
inc
cmpsb
push
mov
js
cwtl
fidivs
lds
cmp
cmp
cmp
inc
negb
jecxz
sbbl
jno
mov
ss
xor
fbld
int3
das
insb
loop
mov
mov
cmp
out
out
test
into
push
test
add
sub
mov
push
xchg
adc
movsl
sbb
cmp
fldlg2
jbe
js
leave
loope
xchg
sbbl
xchg
pusha
push
fiaddl
repnz
and
add
adc
outsb
pop
test
ja
loopne
xchg
mov
mov
mov
mov
fadd
add
test
inc
rcr
dec
sub
scas
lret
mov
clc
jge
iret
mov
outsb
dec
loop
in
jb
sub
fcoml
ds
js
fdivl
add
sub
jns
sbb
inc
into
mov
mov
push
bound
xor
dec
scas
mov
sub
mov
xor
mov
aaa
adc
movsl
inc
cmp
inc
mov
and
adc
ja
mov
es
call
add
dec
outsb
sub
scas
jl
mov
adc
hlt
sbb
jle
iret
pop
dec
in
sbb
pop
jle
lods
push
lea
cmp
dec
pusha
inc
mov
stos
jae
xlat
fsubrl
push
jo
or
jg
jb
jl
sarb
shl
repz
popf
fprem1
jge
cmp
mov
xchg
xchg
and
ljmp
mov
in
ja
roll
cwtl
out
pop
jmp
cmp
jp
dec
adc
push
mov
aam
pop
and
jl
fcoml
scas
sbb
push
jle
jmp
push
nop
mov
dec
shll
mov
inc
test
ljmp
cmpsl
sarb
in
pop
pop
enter
and
adc
aad
sub
inc
push
out
insb
pop
and
mov
out
inc
mov
xor
in
xchg
fistpl
or
scas
cld
jbe
xorl
adc
lods
cltd
adc
in
push
rclb
inc
movl
mov
pop
jo
pusha
adc
adc
add
jle
adc
pop
sub
inc
aam
jnp
rorb
mov
insb
fxch
lds
mov
xor
je
cltd
sbb
arpl
cmp
jo
jns
sbb
movsl
call
aaa
lret
insb
push
sbbl
fistps
sbb
out
sahf
lret
ljmp
out
xchg
fs
sub
out
rorl
aam
lock
push
sbb
frstor
data16
stc
loopne
in
mov
pop
dec
mov
push
xchg
fdivs
lods
pop
adc
push
movsb
jb
dec
sbb
xor
xor
or
inc
xchg
std
xor
ret
add
pop
frstor
jmp
movsl
add
iret
pop
jne
aad
mov
cmp
scas
jno
push
arpl
imul
test
enter
int
dec
inc
ds
cmp
mov
cmp
arpl
outsl
and
mov
mov
mov
cmp
icebp
push
sub
xor
inc
jo
mov
cmp
push
xchg
loope
mov
dec
xchg
ja
sti
aas
push
push
or
pop
test
sbb
push
dec
xlat
in
fucomi
jae
lds
add
iret
add
cmp
test
mov
add
push
pop
mov
jmp
jg
adc
xor
jns
in
mov
sub
fs
loope,pn
popa
adc
jne
adc
push
je
mov
pushf
push
cmp
or
cld
outsb
stos
lcall
mov
int
fimull
cmp
out
or
jne
push
jns
mov
pop
or
in
es
pop
adc
insl
dec
scas
loop
iret
and
loop
pmaddwd
add
mov
jo
lods
dec
mov
into
dec
mov
jmp
test
push
adc
jp
xchg
fxch
or
jl
mov
jno
daa
aas
mov
push
stos
es
pushaw
sbb
sub
je
mov
sti
fimuls
xchg
xor
mov
inc
push
adc
cltd
repnz
mov
lods
out
mov
fs
out
xor
imul
add
mov
mov
lret
lock
test
cmpl
ja
sub
scas
bound
mov
ret
aas
in
sbb
push
push
cmp
shr
mov
arpl
mov
rolb
ss
ret
jecxz
rcr
shrb
pop
sbb
fnstcw
push
push
cs
cmp
popf
and
cvtdq2ps
cmp
and
lods
ljmp
fldcw
jnp
add
push
mov
inc
fnstenv
in
into
aam
ljmp
repnz
in
cmpsl
mov
sbb
inc
sub
jb
fadd
mov
jbe
inc
pop
test
cmpsl
xchg
aam
mov
stc
gs
in
paddsw
sbb
push
or
popa
sub
mov
mov
movsl
fs
xchg
or
ja
fdiv
cmpsl
and
cmpsl
aaa
testl
sti
or
xor
and
and
imul
adc
push
int
popa
hlt
pop
es
jecxz
push
dec
aas
outsb
mov
inc
pop
mov
loope
fiaddl
or
test
mov
jge
pop
or
aaa
xor
cs
sub
adc
jg
sti
pop
and
dec
mov
push
pop
shll
inc
xchg
ret
mov
fwait
iret
push
cmp
sbb
ljmp
ret
mov
mov
mov
dec
xchg
shld
push
ret
sysexit
fsubl
adc
adc
mov
shll
pushf
push
jecxz
dec
dec
imul
pusha
cmp
inc
or
jne
cltd
leave
in
and
push
mov
lcall
cmp
lods
mov
subl
stos
jmp
add
hlt
lock
lret
dec
pinsrw
outsb
sbb
jg
idivb
jno
iret
mov
testl
adc
aad
and
cmpsb
addr16
mov
add
loopne
movl
dec
fstpt
jbe
mov
pushf
in
jl
sub
cwtl
dec
inc
outsb
fstpl
gs
push
xchg
pop
fsubrs
xchg
xchg
jo
and
and
dec
sbb
aaa
or
test
out
bound
leave
imul
inc
dec
jae
pop
mov
lcall
sti
and
add
mov
sub
out
test
rcl
cmp
pushl
addr16
inc
sub
mov
jmp
es
xchg
and
push
outsl
pxor
cmp
ljmp
sbb
sarb
cli
ret
xor
js
adc
xlat
cld
sub
faddp
data16
cmp
xchg
mov
mov
insl
dec
adc
push
ret
lea
xorb
cmp
adc
test
stos
and
or
icebp
lret
sbb
push
shlb
jle
mov
cmpsb
repnz
jmp
dec
mov
mov
les
push
shll
in
pop
ficompl
in
sti
sub
mov
xor
push
in
test
jae
pop
dec
mov
js
jg
cmpb
je
jne
xchg
das
gs
cmpsl
aas
je
sti
ja
cmp
mov
xchg
xchg
and
inc
insl
out
test
insl
jg
je
sbb
les
inc
add
outsb
ret
scas
orl
loop
dec
sbb
jecxz
push
inc
xchg
stos
cmp
ret
cmpsb
adc
sub
sub
and
nop
not
lock
xlat
dec
icebp
xor
fisubs
loopne
sbb
imul
mov
cltd
das
xchg
aaa
xor
xor
push
mov
and
mov
std
mov
pop
pop
icebp
or
fsubrs
and
adc
pusha
xor
cmpb
jae
dec
dec
mov
stc
imul
mov
sub
adc
iret
insb
sub
sub
xchg
or
rcll
inc
andb
mov
cld
sub
lods
xor
fldcw
stc
push
pop
push
dec
mov
test
adc
fistpl
xorb
int3
mov
or
in
mov
je
loop
xor
mov
cmc
out
inc
jbe
sub
rcll
xchg
sub
and
stos
dec
in
into
shlb
sub
jae
jnp
cmpsb
or
inc
or
xor
clc
and
imul
sti
jge
mov
sti
ret
xor
and
mov
iret
popa
dec
repz
xor
xchg
jecxz
jmp
push
cs
movl
test
cmp
sbb
jle
in
add
notl
repnz
push
pop
mov
int
aad
push
mov
ficoms
lahf
bound
adc
sbb
sbbb
inc
mov
cmp
cmpsb
aaa
int
test
cmpl
add
fsubrl
stos
pusha
cmp
push
mov
add
lds
mul
add
insl
xchg
xor
sub
sbb
adc
pop
cmpsl
mov
in
xchg
jg
cwtl
adc
xchg
addb
add
sbb
out
int
push
xchg
repnz
aas
movsl
lret
das
incb
fwait
push
mov
fidivs
shl
adc
push
stos
scas
pop
inc
ja
adc
daa
and
xchg
insb
mov
das
and
pop
aas
stos
and
ret
mov
imul
xchg
aad
or
clc
and
and
push
mov
fdivp
sar
mov
out
in
je
mov
jecxz
data16
push
mov
sti
in
stos
mov
push
jle
cmp
mov
adc
mov
xchg
dec
add
xchg
push
cld
sete
dec
push
lods
adc
addr16
negb
mov
push
or
jge
jp
movsb
imull
xchg
add
mov
mov
push
divb
mov
cmp
pop
mov
or
push
pop
cmp
add
mov
clc
repz
fistpll
insl
sbb
icebp
loopne
notl
rcr
shlb
mov
mov
cmpsb
xor
das
dec
fnstsw
adc
mov
push
popf
sbbl
lea
popl
sarl
push
cld
cmp
in
popf
lock
and
imul
shlb
adc
mov
mov
push
add
dec
cld
sbb
push
sbb
dec
pushf
ret
out
fwait
push
outsb
jnp
ljmp
pop
xchg
jl
loope
lods
daa
jbe
dec
sbb
movsl
dec
jp
adc
fs
sub
mov
ret
add
cmp
add
stos
lods
rorb
test
mov
add
mov
jb
and
xor
sub
pushf
push
rolb
mov
cmovle
jae
data16
popa
mov
inc
cli
dec
mov
repz
cltd
mov
insb
shlb
sbb
ret
pop
call
push
imul
mov
mov
loope
addr16
dec
cwtl
push
inc
sbb
inc
cmc
cld
adc
jle
ret
sub
and
adc
push
int
and
out
mov
sbb
or
dec
dec
adc
insl
dec
xchg
adcb
imul
scas
xor
loop
test
popf
and
cmp
pop
or
push
setnp
mov
jl
cmpsl
sub
sub
imul
inc
sub
xchg
mov
add
scas
inc
mov
orl
or
jne
inc
push
movsb
inc
aas
movsl
and
jg
arpl
inc
rolb
ret
fdivrl
or
xlat
cmp
xchg
mov
mov
cmp
lret
flds
mov
icebp
xor
rclb
inc
rol
xchg
rolb
add
sub
add
jnp
mov
cmp
push
stos
test
fs
pop
push
sti
pop
push
lock
pop
cmpsb
push
jne
cmc
mov
adc
sub
cmpsl
pop
jnp
sub
sahf
mov
dec
mov
mov
push
jmp
or
dec
sbb
xchg
imul
pop
jbe
push
mov
mov
mov
sbb
loopne
xchg
add
jl
xchg
or
xchg
cltd
je
push
les
aam
xchg
mov
xlat
and
add
pop
mov
jo
lahf
push
js
mov
and
mov
push
in
lods
pop
inc
mov
fwait
inc
push
push
daa
aaa
pop
addr16
enter
fmull
fs
mov
test
loope
loopne
jo
cld
push
push
jb
pop
inc
sbb
inc
push
sbb
dec
mov
mov
jbe
mov
aas
mov
adc
pop
xchg
mov
pop
sub
js
dec
cmovbe
in
mov
jge
pop
adc
cmp
xchg
inc
push
inc
rorb
out
and
jmp
cmp
leave
inc
fwait
shll
aad
loope
mov
jne
sbb
sub
push
dec
js
leave
pop
push
sahf
sub
pop
das
or
xor
icebp
clc
mov
push
cs
adc
repnz
test
les
mov
sbb
mov
call
mov
mov
sarl
mov
mov
fdivs
int3
rorl
pop
lahf
adc
xchg
dec
insl
ret
ljmp
or
sub
test
push
lahf
popa
rorb
ficoml
jne
cmpsl
pop
cmpsl
bswap
add
push
mov
xor
fildl
sub
jg
lods
nop
xor
das
test
and
cltd
mov
sbbb
push
xchg
stos
insb
mov
mov
jae
aam
inc
cmc
es
loope
mov
stc
stos
mov
mov
outsl
and
pop
enter
add
outsb
sti
or
push
add
scas
aad
and
mov
jl
mov
cmpl
loope
mov
cmp
mov
jmp
cmp
loope
xadd
in
and
jae
inc
repz
mov
hlt
push
mov
aad
arpl
divl
mov
pop
test
and
addr16
add
addr16
dec
sub
into
mov
sub
aas
or
daa
popf
fsubrs
jno
imul
repz
xchg
inc
daa
jge
imul
mov
test
shrl
into
xor
fsubrs
sub
xchg
xchg
or
jge
xchg
or
pop
adc
mov
xchg
shr
or
mov
ja
jo
call
push
mov
add
sbb
inc
test
ret
les
or
cltd
xchg
stos
push
pop
pusha
out
icebp
mov
mov
in
dec
loop
orl
push
inc
testb
sarl
ss
xchg
mov
cmp
movsl
inc
mov
maskmovq
testl
push
and
fucomp
jg
and
loope
sbb
cmp
dec
xchg
sbb
cmp
pop
pop
mov
xor
les
fidivs
lods
aam
stos
outsl
adc
sbb
xchg
jl
or
cwtl
pushf
leave
test
sub
cmpsb
xor
aas
fdiv
xor
inc
jns
lahf
pop
add
mov
push
or
nop
std
xchg
stc
dec
jmp
mov
cmp
andb
dec
mov
mov
push
jbe
pusha
sti
and
loop
or
sub
xchg
xor
mov
inc
cli
pop
or
cmc
adc
mov
xor
hlt
das
icebp
in
cmpsl
outsb
add
rcrb
dec
loopne
inc
lock
pop
sub
shll
push
fstps
mov
out
outsb
sub
fistpll
and
faddl
fadds
push
cmp
jb
sahf
push
mov
pop
jo
inc
dec
push
into
pop
adc
add
cld
and
inc
xchg
data16
and
fbstp
dec
movsl
push
leave
cmp
push
js
mov
out
cmp
mov
dec
pop
pop
iret
pop
cltd
jecxz
jo
push
or
dec
jno
stc
clc
call
pop
dec
repnz
adc
mov
jns
js
fimull
repnz
sub
jg
loop
mov
pushf
pop
xchg
xor
xchg
push
mov
xor
adc
or
mov
dec
cmpsb
nop
jb
outsl
gs
and
repz
pop
xchg
daa
mov
or
push
pop
int
push
sbb
mov
xor
push
pop
cltd
rolb
pop
stos
dec
and
enter
jo
dec
mov
sub
mov
push
mov
pop
movsl
cmc
cmp
ret
mov
stos
movsb
scas
movsl
leave
addb
inc
icebp
cmp
push
and
jl
pop
pop
dec
dec
pop
scas
rcll
fwait
push
add
test
mov
fiaddl
jmp
cmp
pop
add
mov
lret
dec
lcall
daa
jns
sub
dec
jno
imul
dec
cmp
sub
aas
and
cltd
lret
gs
lods
mov
or
dec
mov
int
jmp
ja
or
addr16
push
xlat
les
movsl
stc
sub
jmp
mov
rorl
sbb
insb
cmc
stc
jno
rcrb
pop
out
xchg
push
fisubrs
jnp
bound
mov
pop
sbb
push
aas
ret
jae
call
enter
and
cmp
mov
movsl
aam
lea
cvtps2pi
jl
dec
push
inc
mov
jge
jbe
int3
xchg
mov
push
sub
mov
ljmp
in
fmuls
mov
cmp
push
mov
out
hlt
fcoms
lahf
lret
or
add
dec
cmpsl
push
jmp
enter
test
inc
xorl
mov
hlt
pop
ficomps
or
out
adc
inc
mov
pop
inc
loope
cltd
lds
call
outsl
pop
stc
lock
das
sbb
and
ficomps
sub
jbe
mov
js
pop
lahf
push
pop
jb
push
fsubrl
push
jecxz
clc
test
push
lds
repnz
lret
shlb
and
fisubs
add
jne
jg
repnz
push
pop
aas
test
lock
shll
add
push
mov
sub
adc
push
sbb
mov
cld
js
mov
push
adc
cmp
data16
adc
xor
mov
dec
mov
push
gs
std
jo
cmp
cmpsl
adcl
mov
add
jb
mov
dec
fcomip
test
add
leave
xor
inc
or
dec
aad
aam
sbb
cmpl
mov
data16
pop
pop
jp
lret
or
add
xchg
jnp
push
scas
xor
cmp
push
pop
hlt
or
ds
pop
outsl
jo
in
pop
xchg
cmp
inc
lcall
jp
out
jecxz
sub
cld
outsb
bound
adc
insl
adc
xor
add
fucomp
add
stc
imul
mov
std
rorb
rcl
stc
outsl
add
pop
xchg
ljmp
fdivrl
mov
fisttpll
mov
jge
add
add
xchg
cmp
notb
pushf
cli
add
sub
icebp
jecxz
mov
imulb
jecxz
out
fwait
lret
and
shlb
into
jg
into
add
inc
push
inc
pop
addl
push
xor
mov
add
push
cmpsb
add
mov
hlt
lret
dec
jmp
orb
mov
push
mov
push
in
cmc
icebp
jbe
loop
test
daa
jg
mov
cld
xchg
popa
xor
fdivl
mull
test
imul
mov
mov
mov
dec
mov
loop
jno
fs
test
jle
shlb
pop
int3
mov
jb
stos
sbbb
xor
in
add
push
adc
scas
ds
pop
out
les
mov
stc
pop
sbb
push
adcb
out
dec
mov
mov
cmpsb
aad
in
lret
pop
stos
dec
pop
jnp
inc
stos
inc
jmp
jbe
and
ljmp
popa
mov
fiaddl
xor
cmp
add
xchg
iret
fwait
lea
adc
xchg
repz
pop
int3
cmp
in
add
mov
sahf
sar
cmp
aas
sarb
sti
enter
cs
sbb
add
rcll
mov
mov
cmpl
dec
cmp
cltd
mov
push
mov
push
dec
mov
outsb
test
jecxz
scas
pop
inc
das
cwtl
mov
add
movl
push
aaa
push
rorl
adc
popf
enter
pop
and
mov
sbb
movsl
inc
jnp
test
and
jo
ret
repnz
add
and
cli
decl
sbb
sbb
fadds
pop
pop
pop
cmp
mov
imul
in
rorl
sbb
mov
push
bound
sbb
cltd
push
sbb
mov
test
fadd
ret
shrl
dec
xlat
xchg
rcrl
insb
jg
sub
call
scas
push
and
idivb
insb
ss
xchg
shrb
and
dec
int
test
mov
add
inc
mov
xor
inc
insl
shlb
sarl
mov
and
push
sub
mov
pop
movb
and
jno
out
mov
imul
xchg
add
xchg
inc
xchg
call
dec
sahf
insb
imul
movsl
lret
sub
test
notl
push
xor
mov
dec
cmp
aad
aaa
out
cmp
mov
lods
cmp
fcmovnb
fsub
rorb
insb
inc
mov
in
mov
or
outsb
sbb
clc
iret
xlat
je
push
les
repnz
xor
mov
rolb
mov
das
jl
roll
test
push
jae
mov
addr16
aad
loop
aad
dec
xor
cmpb
in
inc
sub
addr16
jbe
xchg
out
rorb
push
fs
jg
pop
rclb
nop
mov
bound
cmc
int3
xchg
push
pop
jns
sub
scas
popl
pusha
lds
cmpsl
push
es
cs
mov
pop
js
imulb
dec
sub
mov
xchg
jge
sbb
jb
mov
js
adc
cwtl
mov
lret
or
es
in
xchg
and
aaa
dec
push
sub
xchg
fisubs
or
pushf
fldt
ret
sbb
fdivp
inc
mov
lret
fwait
cmp
dec
adc
or
out
in
push
sbb
mov
adc
mov
bound
pop
into
cmc
cld
mov
mov
out
xor
mov
faddp
je
inc
add
fistpll
add
es
iret
cltd
push
pop
xchg
add
xchg
out
sar
push
mov
mov
into
inc
into
cmp
adc
rcr
cli
dec
jmp
adc
icebp
xor
fildll
loope
mov
inc
lea
dec
cld
dec
pop
push
out
stc
cmp
pop
pusha
clc
pop
outsl
test
ret
ja
mov
int3
loop
adc
push
ret
xor
add
fucomip
or
inc
je
shl
dec
mov
dec
and
pushf
test
mov
adc
ss
jl
shrb
mov
xlat
sbb
mov
sbb
cld
mov
das
add
mov
pop
lahf
in
pop
out
jg
int
xchg
sahf
jle
imul
outsb
push
push
sub
dec
cmp
sahf
sub
push
int3
lahf
and
rcr
pop
jbe
xor
cltd
pop
lea
adc
or
jecxz
inc
add
xor
mov
addb
sbb
cltd
imul
insl
mov
jge
fdivrs
pop
jmp
add
test
stos
test
js
cmc
jl
sbb
jmp
cmp
clc
filds
movsb
jmp
cmp
mov
xchg
aam
xlat
data16
inc
fdivrp
mov
push
fsubp
push
sub
inc
add
mov
leave
cmp
lock
pcmpeqw
ss
push
call
enter
jle
mov
sti
sbb
mov
pop
mov
cmovp
cmp
xor
jge
jo
lods
repnz
sti
sbb
mov
push
int3
aas
in
cmp
jmp
in
pusha
push
mov
rcrl
loopne
xor
xorl
or
int3
and
cs
cmp
sub
cmp
jg
cmp
push
sbb
das
mov
cmpsl
push
pop
aas
adc
es
mov
mov
fldcw
outsb
std
scas
fs
add
int
enter
scas
mov
push
les
fcompl
mov
adc
or
fcmovne
mov
add
sub
jbe
pop
lods
lds
cmc
inc
pop
push
daa
push
mov
js
xchg
movsl
jg
pop
fsubl
sbbl
push
add
leave
push
push
adc
ss
and
adc
lcall
dec
mov
push
dec
cmc
out
pop
stos
mov
xchg
push
or
push
mov
repnz
lods
ljmp
push
ljmp
xor
jae
test
jns
testl
mov
push
loopne
mov
aad
cmp
and
add
mov
sbb
sub
imul
loope
lret
or
dec
out
in
xor
out
push
testl
jns
call
sub
pop
adc
popf
dec
jg
test
xlat
inc
test
mov
rcrb
xchg
mov
jp
fsts
or
xchg
xchg
into
negb
inc
ffree
in
or
or
rol
insb
and
mov
ja
fcoms
push
ret
mov
daa
jb
pop
cmp
cmp
push
hlt
sub
xor
mov
and
fldcw
lcall
and
inc
leave
sbb
popa
cli
push
and
sbb
push
rcrb
in
xchg
test
pcmpeqb
dec
sqrtps
cmp
mov
adc
dec
out
cmp
dec
adcl
faddp
add
mov
dec
cmp
add
dec
loop
mov
in
ja
addl
cli
in
push
insb
sbb
bound
filds
xor
mov
mov
rcrl
xchg
idiv
adc
in
mov
sarl
inc
jno
adc
stc
and
sbb
pop
inc
pusha
pop
rcl
xchg
sub
and
test
jl
mov
cmp
fcoml
aad
cmp
pop
out
fwait
cltd
xchg
test
sbb
jnp
ds
enter
stos
daa
lea
mov
push
fwait
inc
sbb
mov
int3
movsb
es
fists
mov
in
addb
sbb
js
lock
pop
add
lds
or
fdivrl
negb
xchg
sub
xor
mov
xchg
in
push
sbb
xchg
lcall
jl
xor
clc
iret
jmp
in
jl
arpl
decl
mov
inc
sbb
les
es
stos
pop
or
push
and
mov
repnz
sahf
js
xor
iret
push
inc
stc
ss
lods
inc
dec
lahf
scas
clc
rclb
sti
stc
lods
sbb
mov
push
dec
mov
dec
push
and
sarl
test
scas
jo
jae
stc
jbe
adc
jmp
mov
jns
loopne
pushf
sub
lods
vmread
and
lods
and
jo
adc
inc
stos
lock
mov
push
les
cmp
inc
daa
fildl
aaa
out
out
stc
cmp
inc
gs
push
xor
sbb
adc
sti
sarb
push
aad
sbb
lret
or
and
mov
add
into
cli
ljmp
add
call
insl
jp
out
mov
push
fisttpl
xchg
mov
das
dec
fs
lock
pop
iret
push
mov
mov
pop
mov
insl
cmp
and
xchg
mov
push
lahf
mov
or
orl
dec
lret
lret
xchg
imul
fcompl
or
imul
sbb
loop
xorl
add
insb
pop
std
cli
inc
adc
inc
jg
jb
push
scas
adc
pop
mov
and
mov
leave
sbb
inc
jo
xchg
pop
jmp
pop
sbb
das
add
xchg
roll
bswap
arpl
fistl
sbb
or
mov
or
ja
out
inc
push
aas
test
ja
aas
xor
ret
jle
shrl
add
or
rcl
subl
xor
add
ret
mov
pop
cmpsb
lds
xchg
dec
aam
fcompl
loopne
mov
xchg
je
xor
mov
mov
xorl
xchg
or
mov
or
int3
xchg
es
xchg
nop
test
cmp
rorb
push
mov
scas
mov
jge
aas
ret
sbb
fmuls
dec
pop
add
xchg
test
adc
out
jno
mov
out
cmp
push
enter
es
imul
in
sbb
sti
xchg
pop
add
xchg
daa
mov
mov
jmp
and
dec
jns
addb
lahf
or
xchg
mov
inc
inc
orl
mov
outsl
fdivp
aam
xchg
dec
aas
icebp
push
cmpb
fbld
mov
fisttps
or
inc
imul
cwtl
ds
pop
add
insb
xchg
jns
int
fisttps
push
xor
mov
pcmpgtw
lahf
push
pushf
bound
xchg
push
xor
in
mov
xor
push
cmp
scas
fstpt
ror
or
or
or
lea
shl
lret
mov
arpl
cmc
roll
push
scas
bound
dec
inc
in
pop
or
jl
or
pop
mov
jmp
inc
aad
xchg
dec
dec
arpl
mov
sub
cmp
test
cmp
outsb
push
imul
stos
and
pusha
or
mov
int3
add
pop
stos
jns
fucomip
mov
jl
fdivrs
lcall
inc
adc
pop
mov
add
jno
pop
sub
test
or
jae
mov
test
mov
xlat
inc
repz
push
inc
daa
xchg
lret
xor
xor
push
repnz
jg
aad
shlb
xchg
shl
push
inc
jle
add
pop
test
mov
and
pop
sub
and
loop
sbb
push
add
jecxz
rorb
in
and
cmp
cltd
inc
pop
jmp
testb
stos
adc
movsb
xor
mov
push
mov
mov
mov
mov
fstps
push
add
rorb
pushf
or
in
sbb
mov
je
adc
mov
lea
mov
sti
fildl
cmc
push
aam
insl
mov
jns
decl
in
leave
pop
lcall
repz
mov
xchg
std
mov
push
mov
testb
xor
aam
mov
push
inc
repz
jmp
test
mov
xor
fwait
adc
dec
sub
sub
arpl
push
mov
loop
adc
dec
inc
and
outsl
in
into
mov
test
jnp
lret
cmp
and
mov
sub
rorl
dec
mov
out
sarb
loopne
shll
int
divl
mov
sbb
or
push
xor
les
cwtl
jge
cli
mov
cmpsb
mov
xor
loop
or
mov
aam
pop
mov
test
movsl
fwait
pop
xchg
sbb
push
inc
imul
data16
lea
mov
jg
movsb
sub
and
or
xchg
push
and
enter
sub
xchg
mov
pop
gs
sbb
jo
mov
pop
fmul
pop
add
ja
inc
push
ret
mov
sahf
aam
loope
xor
or
ret
inc
sbb
sbb
stos
sbb
lahf
add
pusha
cmp
xchg
add
test
xor
dec
addr16
xor
addr16
idivb
xchg
fwait
push
mov
arpl
and
inc
outsb
and
test
stos
dec
and
add
pop
jae
add
xchg
rcll
iret
adc
pop
jl
shlb
xlat
dec
test
sarb
xchg
add
pop
cltd
xchg
mov
and
ja
pop
repnz
mov
and
arpl
sub
or
jecxz
pop
inc
add
add
inc
jnp
mov
out
insl
push
es
into
sub
dec
cmpsl
pop
pop
adc
outsb
pusha
lds
popf
mov
scas
adc
ret
sar
ss
mov
les
loopne
loopne
jbe
cmc
jl
enter
cs
scas
adc
jbe
cmp
push
insb
xchg
es
stc
pushf
dec
mov
cmc
push
lcall
movsl
mov
add
dec
inc
js
xchg
push
and
xor
push
std
sbb
fsubs
xchg
into
inc
xchg
mov
fwait
xor
iret
jne
push
push
inc
and
in
out
addl
outsl
adc
sub
loopne
out
jl
mov
xchg
pop
ficoms
mov
iret
cli
cmp
cmpsb
xor
cmp
movsl
cmc
pop
cmp
or
sub
iret
inc
mov
and
aas
mov
jns
aaa
fstpt
adc
inc
js
rcll
iret
std
pusha
imul
cmp
jge
sub
ljmp
call
jb
push
xor
sti
mov
xlat
lcall
jo
ficomps
inc
push
jns
inc
pop
loope
sbb
add
or
jno
icebp
repz
mov
or
ret
movsb
mov
dec
loop
jmp
rol
inc
and
pop
aas
inc
js
fs
sarl
imul
cltd
adc
push
movsl
adc
sub
pusha
in
sub
mov
ljmp
shr
mov
mov
dec
cmp
aas
in
mov
inc
jmp
mov
jbe
cmc
jo
push
inc
adc
jo
pop
push
mov
jnp
cli
test
xor
cmpsb
mulb
pop
cmp
jae
adc
dec
aam
js
add
jnp
mov
xor
inc
jmp
lods
push
imul
dec
hlt
xchg
add
jne
jle
mov
pop
adc
push
insl
cmpsb
bound
movsl
arpl
adc
imul
xchg
sbb
lods
lock
push
in
lods
fs
adc
mov
mov
add
in
popa
pop
mov
jecxz
and
fs
sub
aas
push
cmpsb
push
sbb
orb
mov
sbb
push
ss
loopne
cmp
outsl
icebp
mulb
stos
rcrl
xchg
or
xchg
push
lahf
and
inc
test
xor
mov
sub
jle
adc
mov
mov
pop
stos
fmuls
std
sahf
add
and
xor
in
lret
in
addr16
mov
or
jno
mov
cli
decl
movsb
test
inc
cmpsb
xor
in
and
sub
loop
lret
arpl
sbb
jp
test
int
mov
push
into
push
fcoml
out
je
dec
push
add
gs
inc
pop
push
bnd
fstpt
push
dec
xor
dec
out
lock
test
mov
loop
pop
pushf
ss
icebp
jmp
imul
mov
test
push
ja
sbb
repz
lock
dec
xor
cmc
insl
cwtl
mov
pushf
push
sahf
mov
stc
scas
inc
push
mov
inc
jecxz
adc
dec
sti
rolb
push
sub
nop
hlt
adc
cmp
pushf
dec
cmp
ljmp
aaa
jecxz
cli
push
jle
ret
jnp
mov
xor
pusha
inc
lock
das
xchg
inc
call
mov
les
jbe
pop
and
cmc
jmp
push
fsubrs
jg
inc
add
stos
icebp
fnstenv
adc
and
call
push
dec
fs
adc
lahf
lods
dec
mov
test
andl
bound
or
test
shll
push
inc
jns
into
mov
mov
in
mov
imul
jae
rolb
bound
aam
or
aad
mov
push
jmp
rorl
dec
leave
mov
mov
out
cmp
push
fnstenv
mulb
mov
jb
dec
push
jb
sti
cmp
inc
int
into
js
or
imul
jp
cmc
add
repnz
add
pop
xchg
inc
mov
out
sub
pop
dec
test
dec
mov
xchg
dec
in
inc
jg
inc
hlt
xor
adc
pushf
or
scas
js
push
inc
and
adc
cwtl
push
and
mov
xorl
loopne
xchg
xorb
aam
mov
loope
repnz
xor
pushl
fcmove
stos
jg
pop
xor
leave
lock
sbb
xchg
flds
adc
sbb
sub
fwait
add
fldt
data16
punpckhwd
mov
out
clc
adc
lock
or
bound
aad
mov
icebp
es
lods
pop
adc
ficoml
jae
les
popa
cmpsl
mov
push
inc
mov
out
push
sub
or
or
int
mov
fcmove
jmp
test
or
push
jle
lods
inc
sar
inc
push
cmc
enter
js
xorps
shll
fdivl
push
inc
movsb
jge
sti
outsb
cmp
insb
or
sbb
cmp
int
dec
mov
scas
adc
adc
or
mov
push
adc
lods
cmp
inc
imul
push
dec
jp
cwtl
dec
aam
xor
fdiv
pop
into
jo
pop
cmp
outsb
sbb
push
mov
xor
sbb
inc
mov
mov
mov
xor
push
rclb
orb
pop
sbb
xchg
mov
cltd
movsl
mov
sub
leave
stos
das
test
jp
mov
mov
inc
lret
cmp
push
push
repnz
in
inc
shrb
xchg
pop
data16
cmp
mov
imul
add
xchg
jle
inc
mov
xchg
shl
std
js
or
push
pop
add
ljmp
loop
xlat
incb
xchg
das
ss
fisubs
add
stos
ret
pop
fiadds
lret
dec
inc
mov
xchg
outsb
mov
mov
inc
mov
dec
test
imul
int
xchg
out
cmp
out
mov
lret
pop
cmp
nop
aam
and
add
dec
xchg
mov
in
pop
in
add
orl
or
cmp
mov
adc
out
jmp
mov
shl
lahf
push
push
pop
fucomip
adc
movsb
inc
imul
push
cmp
inc
lret
mov
movsl
push
loopne
fistps
enter
sbb
mov
inc
popa
sub
sub
lret
add
sub
push
or
sbb
lds
aad
adc
lahf
loop
out
xchg
xor
adc
daa
popa
sarl
adcb
loop
add
dec
dec
ljmp
loope
negb
aam
cld
sahf
dec
push
pusha
push
push
lods
pop
cmp
out
pop
cld
adcl
mov
or
sub
xor
mov
add
pushf
push
mov
pop
ret
fcomps
filds
loope
enter
cs
adc
and
push
test
inc
sahf
add
mov
mov
adc
xchg
jo
adc
cwtl
jns
ljmp
ja
out
inc
inc
sysret
sti
sbb
cmc
bound
dec
stc
enter
cmp
push
mov
cmc
add
inc
cmp
jbe
pop
icebp
ja
pop
xor
dec
mov
pop
inc
ficoms
lds
pop
das
mov
aaa
test
insl
cmp
pop
repz
inc
mov
inc
ficoms
mov
in
cmp
jne
push
mov
dec
shl
popa
fwait
inc
int
in
xor
pop
bound
inc
stos
jno
push
sbb
jle
fdivl
sub
cmp
mov
cltd
mov
push
pushl
xchg
call
test
xchg
add
lcall
aaa
jmp
insb
inc
decl
mov
lcall
lcall
xor
dec
cmpsb
mov
add
inc
loop
imul
ss
sbbl
cmp
jle
popf
add
adc
mov
push
add
rorb
iret
push
jmp
jbe
or
test
out
es
push
mov
adc
lret
jp
or
sub
jl
pusha
test
mov
mov
out
and
inc
mov
mov
popf
sbb
xchg
dec
fdivl
arpl
shll
xchg
cmp
pushl
pop
mov
xchg
test
std
andl
pop
push
aam
xchg
push
and
dec
in
jge
dec
mov
jg
inc
sub
rcrl
leave
xor
mov
push
jmp
cld
lea
pop
cmp
xchg
mov
pop
jle
ret
sub
imul
rclb
mov
add
push
xchg
pop
adc
ljmp
das
in
pop
rcrl
sbb
js
daa
xor
and
adc
popa
cmp
fnstenv
mov
mov
mov
in
mov
adc
pop
jle
xchg
cmp
mov
test
pop
fwait
lcall
repz
jne
pushf
pushf
dec
orb
imul
adc
inc
out
inc
jmp
pop
jmp
or
xor
fs
jne
and
call
dec
dec
mov
mov
add
outsb
mov
dec
cmp
cltd
xor
shl
jp
inc
add
xchg
ret
filds
pop
add
leave
push
xchg
sub
aas
sub
fdiv
adc
sbb
mov
es
js
pop
jl
dec
popf
clc
push
andl
or
shlb
ja
xor
lret
lcall
add
dec
cmpsb
cltd
mov
jle
mov
cld
or
lret
daa
mov
and
ljmp
addr16
popf
xor
mov
mov
rolb
pop
sbb
mov
pop
outsb
arpl
scas
pushf
in
push
cli
xor
adc
cmp
dec
add
add
pop
in
imul
push
inc
ss
xor
lods
or
or
xchg
xchg
push
xlat
test
aam
jnp
ficoms
lret
lock
das
ds
out
out
sub
daa
cld
int3
add
arpl
nop
addb
sub
mov
idivb
lret
jl
fiaddl
pop
jle
mov
inc
es
rcll
iret
inc
fdivl
adc
push
push
adc
xchg
pop
mulb
cmp
and
in
xchg
lock
xor
loopne
outsl
adc
lcall
fildl
popf
sbb
leave
jg
fwait
lret
xchg
pop
xchg
out
jmp
push
repnz
dec
and
imul
enter
std
popa
sbb
mov
mov
les
jle
mov
jne
call
mov
sbbl
outsb
xor
popa
and
add
lcall
mov
rcrb
cmp
xor
in
or
pop
cld
mov
mov
xchg
icebp
enter
xor
dec
xor
mov
xor
sbb
sub
pop
jnp
sahf
push
xchg
arpl
dec
aas
cs
adc
cmc
cmp
insb
xchg
popa
push
add
aas
ret
in
out
rcl
push
inc
xlat
fs
inc
rcrl
mov
sub
push
imul
test
mov
fsubl
bound
out
dec
xor
es
imul
adc
xchg
jbe
pop
shll
jbe
out
mov
leave
jge
xchg
scas
out
push
decl
jbe
sahf
ss
imulb
fnstenv
sub
add
mov
and
jmp
and
add
aas
xchg
jne
dec
cmp
push
mov
xchg
mov
sbb
mov
mov
mov
ret
addr16
xor
jl
mov
cmp
xor
xchg
mov
bound
fstpt
insl
adc
pop
loopne
dec
ret
ds
leave
mov
xor
push
js
pop
jno
push
cmpsb
sbb
adc
push
mov
stos
movsl
outsl
mov
insl
inc
daa
cmpsl
in
into
aam
xchg
xor
adc
clc
ss
test
jne
add
test
les
icebp
outsb
cwtl
cmp
sahf
aad
andb
subl
mov
mov
sub
subl
add
sti
lock
push
cmpsb
into
ljmp
or
adc
mov
inc
adc
shl
insb
jp
push
fsubs
jge
mov
fisubrl
aaa
inc
test
iret
mov
inc
xor
aaa
add
lahf
data16
adc
pop
mov
cmp
mov
stc
jg
dec
nop
fildl
or
loop
sbb
shlb
and
aad
aad
scas
js
imul
out
loope
into
lahf
mov
lds
adc
cmp
and
shrl
jle
mov
mov
xchg
jl
lahf
mov
sbb
and
pushf
mov
fsubrp
lret
mov
pop
push
pop
mov
movsb
test
push
and
mov
push
dec
sbb
outsb
dec
or
pop
sbb
pop
sbb
insl
add
push
ss
nop
es
pop
pop
loop
test
ss
les
jle
xlat
cmp
popf
and
gs
in
adc
repz
cmpsl
and
push
xchg
xchg
mulb
sub
jmp
int3
stos
adc
leave
dec
cli
push
fnstenv
ljmp
sarb
mov
jno
notl
inc
mov
mov
repnz
push
das
loop
test
cmpsl
loopne
iret
daa
nop
xor
scas
mov
xor
mov
mov
sub
jp
je
rep
scas
fldl
popa
add
cwtl
jp
js
jns
cmpsl
push
hlt
xchg
in
jg
mov
pop
and
xchg
fcmovnb
jbe
xor
fisttpl
lods
test
fs
sbb
push
xchg
cmp
das
roll
je
sbb
sbb
out
dec
std
in
sbb
dec
pop
js
xchg
and
pop
push
sti
dec
sbb
mov
mov
daa
push
push
bound
push
inc
mov
and
dec
sbb
xchg
pop
ja
add
and
shrb
cmp
es
dec
divb
push
test
or
scas
adc
mov
jbe
add
xchg
xor
shlb
loop
pop
inc
in
and
lock
into
fucomip
dec
fs
jmp
mov
xor
or
js
addl
adc
or
daa
andb
ja
lods
push
or
mov
lret
leave
es
pop
pop
test
jns
bound
cmp
sbb
pop
xor
fistps
sahf
jnp
push
sub
sti
and
out
mov
test
rorl
sldt
dec
sub
daa
xor
adc
adc
pop
pop
movsl
dec
pop
cmc
xchg
imul
std
sbb
fld
stos
std
adc
inc
mov
bound
adc
mov
enter
subb
sub
pop
add
mov
jnp
dec
repz
rcr
xor
xor
mov
mov
fwait
test
inc
mov
mov
icebp
mov
mov
or
mov
inc
push
jne
scas
or
es
icebp
les
fldenv
or
iret
sub
mov
jae
adc
xchg
push
jae
add
fcmovb
cmp
shl
and
repnz
dec
pop
jns
adc
jmp
incb
and
idivb
idivb
or
jnp
mov
stos
and
push
add
cmp
out
mov
xor
lret
clc
mov
mov
dec
mov
xchg
adc
push
lret
inc
dec
push
push
insl
mov
adc
cmp
lret
in
scas
push
in
into
sbb
icebp
and
loop
jp
xchg
jns
lock
test
adc
ret
test
sarl
sub
into
ret
add
mov
icebp
fildl
push
stos
cmp
pop
das
ja
mov
add
sbb
pop
adc
sub
imul
or
gs
icebp
or
movsl
out
adc
mov
xchg
clc
mov
push
stos
in
xlat
lahf
rorb
data16
insb
jmp
rclb
imul
cmp
jbe
daa
pop
push
rcll
push
dec
pop
adcb
xorb
xchg
jge
lock
sbb
lret
aaa
jle
rol
daa
lcall
sub
dec
fisttps
push
push
inc
fistl
xchg
adc
gs
jp
mov
nop
fdivl
or
imul
cld
push
stos
into
aaa
ret
mov
xor
pop
sbb
jle
inc
test
gs
and
mov
mov
push
dec
icebp
dec
cmp
repz
lret
xchg
movntq
out
inc
cmp
push
and
repz
mov
sbb
adc
push
mov
inc
pusha
lret
insl
cmpb
mov
push
jne
jbe
data16
outsb
arpl
xor
mov
push
and
mov
mov
jnp
loop
sub
mov
and
popf
jnp
dec
dec
jnp
ss
push
sub
jne
pop
add
leave
mov
incb
push
jge
test
ljmp
lods
pop
inc
push
pop
sbb
mov
pop
jle
std
xor
inc
cmpsl
js
mov
into
into
mov
addl
fistpll
out
adcb
xchg
call
xchg
push
lock
scas
xchg
mov
xchg
shlb
or
mov
daa
sub
out
fiaddl
dec
mov
call
xor
or
pusha
push
loop
lods
fwait
iret
sbb
iret
pop
stos
sbbb
scas
mov
mov
cltd
int3
cmp
sub
add
inc
mov
jmp
in
enter
fpatan
sarl
cmp
daa
adcb
sub
xor
addr16
data16
shr
enter
imul
mov
or
in
fs
mov
std
add
hlt
and
push
cmp
xlat
ret
add
pop
inc
testl
add
pop
xchg
and
inc
imul
push
mov
out
sti
lds
cwtl
pop
stc
xchg
jmp
dec
movsb
add
adc
cli
pop
mov
mov
cmp
insb
test
jns
pop
adc
cmp
icebp
add
jge
js
loop
inc
ljmp
jns
or
push
fldcw
icebp
push
cmpl
sbb
adc
add
or
and
imul
dec
in
sub
mov
inc
lret
add
xor
sahf
xor
stos
movsb
ljmp
xor
sbb
lock
jb
stos
in
and
pop
jp
imul
test
das
adc
pop
insl
or
call
pop
lods
std
daa
add
sti
test
cltd
mov
lock
mov
push
popa
loopne
movsb
and
pop
or
jp
jae
and
xor
leave
fldl
jno
push
mov
popa
dec
call
jecxz
hlt
subl
mov
mov
aas
mov
xor
dec
xor
ss
add
adc
pop
push
sbb
int3
push
ret
dec
icebp
outsl
fmull
aam
xchg
shrl
loopne
mov
lahf
popf
addr16
pop
arpl
inc
in
aaa
mov
push
dec
imul
mov
call
std
add
mov
adc
jg
loop
lods
andb
imulb
fimull
div
out
mov
inc
dec
mov
mov
sub
dec
dec
pop
sub
mov
aad
subb
shrb
sub
xchg
movsl
inc
int
adc
ja
push
inc
adc
pop
or
and
push
aam
mov
cmp
jle
enter
inc
fisttpll
hlt
mov
hlt
sub
jno
out
pop
push
add
push
insb
or
mov
jnp
mov
or
jne
cmc
pop
movsb
inc
adcl
mov
out
inc
cmpsl
dec
mov
ret
mov
push
lock
sbb
jns
push
sub
lods
testl
cld
rolb
stos
dec
mov
mov
sub
sbb
das
test
outsb
pop
js
js
add
out
jb
mov
lock
inc
fidivl
test
sahf
dec
adc
subb
mov
mov
dec
pop
add
mov
test
cli
js
or
mov
lds
test
shll
dec
fs
push
and
mov
jp
mov
daa
mov
popf
cld
repz
xor
cmp
popa
fisubl
and
insb
xor
push
sub
sub
inc
xchg
push
jmp
inc
add
je
lret
js
arpl
loope
add
fnsave
xchg
cmp
jp
mov
mov
into
fbld
cmpsb
minps
movsl
es
add
pop
adc
movsb
or
jmp
pop
cmp
dec
and
out
xchg
mov
jns
sti
fs
push
adc
pop
push
adc
mov
lret
inc
mov
push
xor
push
ja
dec
enter
push
xor
or
aaa
xchg
aam
add
subl
mov
mov
mov
sbb
lock
push
rorb
les
faddl
mov
or
mov
cmp
stos
int
xor
fdivrl
lea
sbb
addb
into
enter
mov
in
ret
mov
gs
sbb
int3
arpl
and
cwtl
and
hlt
fistl
mov
push
std
stos
jg
das
mov
and
inc
cmp
cltd
cli
xchg
das
jo
test
pop
data16
push
bound
fisttpll
xor
inc
enter
inc
rcrb
sbb
lret
movsb
movb
mov
js
ret
mov
shrb
and
out
xor
cmp
mov
sbb
pop
mov
cld
or
loopne
mov
jb
jmp
andb
lock
inc
mov
ljmp
pop
sbb
mov
pop
lods
das
cmpsl
fwait
dec
dec
adc
out
inc
insl
ret
in
daa
scas
shlb
lret
jecxz
cmp
in
xlat
jne
negb
inc
cmp
ss
cmc
test
dec
pop
push
mov
mov
mov
jge
aam
cmpsl
jo
fistps
mov
jo
or
ljmp
adc
push
xor
jge
cmpsl
test
push
cs
cs
xchg
iret
pop
ffree
loope
addr16
mov
pop
movsl
fldcw
lcall
pop
lahf
aas
loope
mov
aam
jle
pop
mov
push
int
icebp
aas
out
mov
or
pushf
fsubrs
and
pop
int
aas
in
es
sbb
inc
sub
ja
xor
push
inc
pop
xchg
mov
xorb
popf
aam
xor
aam
ljmp
xchg
outsl
push
mov
std
or
push
adc
jbe
pushf
xor
add
or
std
and
or
xor
xchg
xchg
das
cmp
js
js
loopne
and
in
jns
les
push
xchg
and
dec
and
add
test
dec
inc
stos
icebp
xchg
add
inc
pop
dec
dec
xor
sub
inc
mov
add
pushf
test
pusha
ss
xchg
and
divb
xor
shrl
pop
pop
and
xchg
lods
dec
leave
jmp
adc
cmp
sti
add
cmp
adc
loop
xchg
js
sub
outsb
cltd
cli
hlt
inc
mov
mov
aad
mov
into
push
xchg
xor
jle,pn
push
shrb
das
mov
test
push
fwait
test
repnz
sbbb
or
and
or
stos
clc
gs
pop
jns
push
mov
mov
cmp
jl
xchg
xchg
pop
push
jb
fstpt
fidivl
aam
ds
xchg
cmc
jnp
lds
xor
aaa
fists
pop
repz
xor
mov
pop
cmp
pop
fucomp
arpl
jb
mov
inc
insl
cltd
push
daa
sbb
push
xor
test
movsl
std
inc
mov
adc
mov
xchg
or
push
insl
cmpsb
cltd
jns
icebp
pop
jl
test
cmp
call
jge
sti
sbb
pop
bound
cmp
fwait
sub
lret
ret
pop
sbb
faddl
and
imul
dec
mov
in
mov
dec
pusha
or
mov
stos
out
fmuls
stc
xor
mov
int
add
sub
jne
mov
aam
stos
or
xor
popf
sub
fistpl
lcall
sbb
sbb
push
es
ret
daa
cmpsl
aam
stc
adc
loope
ds
fst
rcrl
xchg
xchg
xor
leave
push
insl
imul
repz
daa
xchg
pop
stos
int
jns
push
dec
adc
add
or
std
add
mov
out
es
push
and
xchg
or
cmpsb
xorb
cmp
jne
sbb
xlat
out
inc
xor
les
xchg
push
cmc
xor
sub
and
mov
test
shl
jp
les
jge
cmp
xchg
aad
bound
cmc
mov
dec
push
imul
push
jo
mov
mov
sbb
push
mov
sub
jg
sub
mov
mov
or
sub
inc
sub
sub
stc
sbb
scas
mov
popl
outsb
into
inc
pop
xchg
or
fiadds
repz
jg
mull
js
fwait
testl
jle
mov
fld
and
dec
imul
ss
mov
push
pop
lret
roll
popf
jno
fidivl
mov
add
push
lret
aas
in
pop
xchg
scas
mov
push
icebp
repz
lret
xchg
push
push
imul
xchg
and
pop
or
inc
or
into
test
pop
mov
jle
mov
add
pop
aaa
push
es
jl
cmp
mov
repnz
or
inc
int3
test
stc
in
ja
sub
loope
or
aaa
fadd
shl
jo
adc
jnp
lods
push
or
cmp
test
test
lahf
lds
mov
mov
fisttpl
push
cmp
pop
in
gs
mov
sub
lcall
xchg
sbbl
push
repz
in
push
inc
flds
sahf
aas
andl
xchg
shr
xchg
repnz
rorl
sti
popf
sbb
into
mov
pop
cs
sbb
mov
imulb
dec
push
jmp
jg
xchg
addr16
xor
or
stc
push
xlat
sbb
xchg
jae
add
cmp
ror
vphsubwd
imul
push
mov
in
in
cmp
rcrb
orb
test
test
dec
jo
je
jecxz
scas
mov
mov
push
shll
fsub
mov
popf
imul
repnz
lahf
pop
pop
push
lret
mov
repnz
dec
add
lea
mov
outsl
or
outsb
mov
add
or
mov
mov
clc
pop
shl
jnp
jge
sbb
repnz
sahf
fidivrs
pushf
fiaddl
ja
adc
and
adc
mov
cli
sbb
sub
repz
sti
mov
addl
add
dec
and
sub
loopne
mov
dec
sti
inc
or
into
or
push
stos
xor
add
mov
mov
cmp
push
in
stos
or
mov
test
adc
shlb
sub
sub
sbb
push
sub
iret
loop
pop
testl
out
pop
pop
mov
lcall
shrl
jecxz
and
aaa
add
aad
lea
insl
loope
xlat
or
xlat
lret
add
or
push
idiv
cmp
inc
pop
pop
dec
fwait
cmp
push
mov
xor
xor
jmp
push
dec
xorb
mov
aaa
add
cmp
negl
iret
sarb
push
cwtl
lret
or
insb
jno
mul
mov
mov
cmpsb
sbb
lcall
fistps
sbb
loopne
ljmp
cli
pop
xchg
lea
inc
xor
std
lcall
and
push
in
or
pop
adcb
push
aad
hlt
sbb
arpl
mov
fsubrl
sbb
mov
or
imul
xor
lcall
aam
cmp
sbb
out
jle
lock
int3
add
jbe
out
xor
pop
or
dec
cmpsb
subl
push
stos
dec
or
mov
loope
ret
in
lret
pushf
leave
orb
push
movsb
xchg
pop
popf
mov
mov
lcall
xchg
sub
or
je
test
outsl
cmp
das
iret
sub
lock
mov
movsl
psubsw
and
es
lods
in
das
add
or
adc
mov
and
repz
roll
mov
lds
cs
pop
adc
cmpsl
pop
enter
mov
rcr
cld
idivb
fidivrs
fldenv
repnz
fstps
call
notl
outsb
lret
cli
mov
test
int3
call
loop
push
jbe
shlb
mov
mov
ja
sub
lods
ds
jmp
jb
mov
and
or
leave
shrb
arpl
outsb
popa
popa
fadds
hlt
xor
xchg
leave
cld
add
push
lods
push
fmuls
push
aaa
lods
xchg
insb
jno
fwait
jg
aaa
repz
fisttps
mov
xchg
mov
out
outsb
xor
or
enter
stc
gs
aam
imul
sbbb
push
leave
cmp
hlt
arpl
adc
ss
cs
sub
mov
sub
sub
sbb
pop
rolb
scas
mov
gs
lret
jbe
ss
aaa
push
movsl
mov
in
mov
or
cmpb
shrb
inc
push
push
add
push
inc
popf
lret
xor
dec
pop
sbb
hlt
lret
sub
xchg
pop
cld
daa
sub
lods
lret
mov
mov
push
das
imull
mov
fwait
pop
jnp
pop
xchg
sbb
int3
push
mov
lret
push
mov
in
test
test
or
test
data16
lcall
sbb
jp
inc
pop
das
addr16
aas
out
lret
sbb
mov
testl
lret
mov
pop
lods
imul
or
fisubl
sbb
push
dec
dec
nop
push
add
mov
aad
jg
xor
es
es
push
outsb
inc
testl
inc
push
movsb
jg
lret
fcmovb
xor
dec
push
cli
leave
push
push
int
aad
lods
mov
cmp
xchg
fnsave
pop
jl
div
cmp
dec
negb
cmp
push
sti
mov
sbb
mov
mov
lods
sahf
cltd
mov
pop
arpl
lock
jns
mov
fsubrl
filds
das
adc
push
out
addr16
adc
lret
enter
movl
fcomps
xor
mov
xor
mov
test
xchg
push
adc
push
jne
cmp
xor
arpl
mov
lcall
int
sub
and
cmp
adc
mov
scas
lds
mov
sbb
in
inc
clc
les
sbbl
aad
adc
test
push
xchg
fcoms
lock
xchg
or
mov
jl
mov
and
movsb
pop
sub
cmpsl
mov
fxch
xchg
lea
mov
dec
cmp
sub
mov
aas
mov
and
adc
jns
mov
int
lret
imul
pop
push
fwait
cmp
inc
in
mov
fwait
jmp
push
jb
ja
push
or
lret
xchg
bound
jmp
adc
dec
aad
jecxz
sar
mov
or
push
movl
inc
xchg
mov
flds
pop
movsb
cli
xor
xchg
jg
push
and
aaa
mov
or
mov
aas
dec
pop
or
shrb
int
rolb
mov
pop
out
pop
inc
test
mov
dec
aas
rolb
mov
mov
xor
or
mov
jo
pop
or
mov
inc
lret
int3
pop
rcrl
push
mov
mov
sub
and
mov
inc
sbb
pop
xchg
test
cwtl
dec
nop
lret
xchg
mov
mov
mov
scas
lock
add
xlat
push
fcoms
frstor
fwait
loopne
in
mov
shll
fistps
mov
or
ss
insl
lret
and
pop
imul
mov
ja
dec
cmpsb
xchg
aad
sbb
stos
push
add
rcl
scas
mov
dec
rcl
bswap
pop
push
or
mov
das
test
stos
int3
xor
cmpsl
mov
pushf
dec
imul
out
imul
in
sbb
test
jle
cltd
sbb
xchg
sahf
push
sbb
stos
sub
sbb
dec
mov
fadds
add
and
mov
inc
ret
dec
adc
sbb
jb
cmp
cs
and
mov
fnstenv
xchg
push
push
push
xchg
add
call
int
bound
mov
stos
dec
jmp
mov
imul
jae
addb
jl
rcrb
xchg
das
aad
xlat
mov
mov
into
cmp
popf
mov
push
jle
cmp
lods
stc
pop
jp
inc
jmp
xlat
sbb
xchg
fwait
push
push
add
dec
and
loope
cmp
and
push
pushf
xchg
jp
mov
divl
cmpsl
or
adc
mov
sbb
lock
push
lods
js
adc
popa
int
xchg
loop
in
sub
aam
xchg
out
pop
inc
dec
cmp
repnz
inc
and
lea
xchg
sahf
cmp
sbb
insb
std
addb
inc
out
in
cmpsl
hlt
jp
jle
mov
pusha
cmp
js
or
pop
nop
mov
adc
add
out
sub
rol
popa
pop
lret
dec
xor
in
inc
int
jmp
mov
sub
stc
or
out
cwtl
outsl
cmp
jne
mov
scas
test
bnd
addr16
or
cmp
fdivr
jo
inc
and
les
and
sub
rcrl
dec
dec
gs
ja
xchg
add
and
lret
mov
ja
aad
dec
das
inc
lret
pop
jns
fldenv
xlat
mov
in
jne
lret
mov
rclb
and
xchg
cmp
shlb
inc
inc
insl
sbbb
push
aas
flds
fs
push
leave
out
inc
fldcw
add
in
pusha
pop
cmc
pushf
mov
movsb
in
fwait
arpl
out
imul
adc
add
push
xchg
int
jae
maskmovq
mov
shlb
scas
adc
sub
xchg
subl
push
mov
pop
test
xor
and
cmc
cmp
mov
out
cmp
lcall
pop
les
shl
fimuls
jne
shr
cld
xchg
cmpsl
in
mov
cmp
imul
push
xchg
mov
push
add
sarl
push
jmp
mov
sbbb
mov
popa
cmp
iret
mov
sub
inc
xlat
pusha
and
and
mov
cmpsl
movsb
sub
push
lds
fidivrs
adc
test
jmp
stos
sti
inc
mov
dec
mov
jb
mov
lock
stos
xchg
adc
pushf
cmpb
std
inc
fdiv
adc
inc
mov
in
dec
addl
xor
fwait
bound
or
inc
sub
push
sahf
sub
nop
mov
sbb
xchg
rcll
xorb
sub
pop
std
push
jge
pushf
sbb
out
dec
cmp
xchg
mov
and
adc
push
sub
pop
push
mov
stos
imul
push
pop
les
sub
jmp
sti
lea
in
andb
push
int
mov
and
adc
xlat
add
and
dec
jb
mov
pop
cmpsl
jno
test
cltd
jg
mov
icebp
into
fsubrl
fsubrl
imul
add
xchg
scas
lods
cmp
lea
jp
data16
shrb
out
jne
insl
movsw
jl
jl
loopne
xor
ja
or
imul
or
loop
pusha
cmc
add
aam
jg
jno
mov
adc
jmp
int
aam
aaa
xor
push
jns
fwait
dec
mov
loopne
dec
sbb
mov
addr16
cmp
into
xor
aad
jb
enter
out
xchg
std
jo
fistpll
mov
loope
ljmp
sbbb
sbb
shlb
jnp
fwait
cmp
fs
popw
pop
ds
stc
aam
add
jge
sbb
popf
loopne
mov
inc
js
imul
aad
jae
lds
aad
adc
cmp
jnp
pushf
loop
sbb
stos
pop
mov
notb
or
push
loopne
rcl
ret
cmp
adc
loop
push
mov
sti
sbb
mov
cltd
mov
jge
enter
fs
and
rcr
jbe
int3
push
mov
cmp
jbe
cmp
pop
add
sbb
xor
rolb
and
xor
hlt
cmp
std
mov
jl
out
xchg
xchg
sbb
std
jbe
jne
add
or
ds
outsl
nop
or
popf
and
nop
mov
sbb
cmp
cmp
pop
jno
lahf
dec
and
in
andl
and
xchg
sti
add
xor
div
and
lods
aas
subl
cmp
lods
adc
orb
and
cmc
int
ljmp
test
add
push
cltd
mov
vphaddbq
sub
mov
faddp
add
and
xchg
rcl
hlt
ficoml
add
adc
mov
test
jg
xchg
jae
into
sarl
or
stc
jp
cmp
addr16
out
push
inc
les
inc
jg
stos
push
pop
add
cmp
stc
xchg
dec
test
fpatan
inc
and
movsl
jg
jmp
sbb
dec
dec
loopne
sub
pmulhw
in
ss
pop
cmp
and
cmp
cmpsl
and
mov
iret
mov
adc
push
mov
jbe
dec
bound
mov
jnp
rolb
aaa
or
mov
dec
sbb
and
dec
hlt
inc
lds
mov
imul
or
in
outsl
sbb
addl
aad
repnz
jl
xchg
movsb
add
addr16
nop
into
dec
cs
ja
or
mov
addr16
repnz
mov
inc
popf
add
cld
lds
movsl
sti
loop
fcmovu
aam
jmp
push
shll
cltd
fisttpl
add
mov
arpl
subb
sti
icebp
testb
add
outsl
cld
loopne
inc
jmp
dec
push
sbbl
imul
jns
push
lods
movsb
xchg
sbb
fbld
or
xchg
sbb
mov
jnp
outsb
adc
nop
pop
movsl
xchg
test
push
test
cld
sub
test
jecxz
dec
jno
lret
dec
mov
mul
or
imul
pop
into
xchg
std
and
lods
xor
dec
shr
movsl
fwait
dec
cmpsb
push
jb
ljmp
lret
push
inc
sbb
xor
stc
mov
ficoml
dec
imul
in
xorl
nop
repnz
cmpsl
cwtl
in
mov
js
shr
pop
xchg
lock
nop
outsb
je
mov
arpl
xor
clc
ret
arpl
sti
lret
inc
push
mov
cmp
faddp
ss
outsl
icebp
xor
mov
sti
int
sti
xor
mov
idiv
and
loope
fwait
lods
push
push
jnp
jns
xchg
dec
pop
js
pusha
popf
xchg
lcall
dec
cmpl
mov
lds
and
mov
adc
je
pop
or
mull
fbstp
xchg
movntps
mov
mov
mov
xor
lods
arpl
sbb
test
imul
ja
inc
xchg
inc
call
ljmp
aas
cmp
aad
jmp
call
pop
push
push
mov
addps
adc
inc
dec
push
les
and
jecxz
lods
shll
jno
mov
jl
js
dec
jle
inc
pop
scas
push
add
xchg
or
js
sub
pop
mov
movsl
jo
std
cmpsl
repnz
lock
cmpsl
pop
adc
lcall
mov
test
jge
and
xor
pusha
outsl
sub
cmpsl
xor
cmp
addr16
loopne
xchg
and
daa
pop
mov
dec
mov
jns
andb
pop
jecxz
test
inc
push
mov
cmp
add
popf
lea
jge
push
add
lods
pop
ds
stos
sbb
xchg
inc
lcall
std
scas
push
xchg
stc
ror
fwait
call
mulb
icebp
fnstsw
sub
push
out
idivb
es
inc
cmp
add
sub
sbb
loope
lahf
es
and
sub
add
dec
lea
xor
dec
cmp
aas
mov
or
lcall
add
ficomps
dec
mov
mov
cmpsl
rcrl
out
jp
imulb
mov
fwait
xor
rolb
into
int
jge
daa
test
stos
mov
icebp
popl
jae
pop
sub
arpl
push
mov
and
push
or
mov
mov
in
push
push
inc
mov
clc
push
xchg
add
jne
cmp
sub
aam
xor
push
das
mov
or
jl
mov
lock
or
mov
add
mov
cmpsl
shll
lcall
cmc
xchg
test
outsb
andl
mov
popf
mov
dec
add
dec
mov
mov
mov
adc
mov
pushf
popa
inc
jmp
nop
xchg
lock
and
push
int3
jbe
mov
mov
cmpsl
arpl
dec
mov
into
pop
push
rcrb
sbb
imul
jnp
and
mov
xor
fcompl
jbe
jne
inc
gs
dec
lock
jl
dec
rcll
stos
mov
xchg
repnz
pop
cmp
cmp
mov
adc
push
pop
dec
adc
add
push
push
stos
cmc
jp
dec
pop
cmp
pop
pop
xor
dec
xchg
xor
test
fists
push
out
push
sub
inc
mov
js
push
inc
in
sahf
movsl
das
mov
aam
push
stc
pop
lret
jmp
cmp
adc
pop
pushf
sbb
pop
popa
arpl
fwait
push
test
jp
xor
adc
pop
jns
fstpl
jp
pop
into
mov
scas
push
inc
cmp
mov
movsb
fwait
icebp
pop
xor
popa
pop
insb
lock
xchg
adc
cmp
sbb
jb
dec
jl
sti
shlb
stc
gs
iret
rcll
and
sub
lock
and
push
divl
push
or
pop
shlb
lods
in
jb
and
iret
fwait
int3
xchg
jno
rolb
or
stc
sub
adc
add
mov
mov
loopne
mov
repz
dec
lods
sub
jnp
and
or
stc
bound
jb
imul
and
and
pop
dec
std
mov
cmp
add
jl
bound
mov
jle
in
call
insl
les
into
sub
pop
in
ror
lcall
in
mov
push
mov
out
lret
dec
mov
sbb
leave
and
ss
loopne
dec
in
dec
out
setne
xchg
orl
cwtl
dec
sub
addr16
mov
cmp
inc
mov
xorb
pop
mov
pop
andl
inc
sub
cmp
jp
dec
movsl
xor
mov
mov
cmpsb
sahf
jp
fs
push
aas
mov
mov
dec
dec
pushf
iret
and
xchg
out
jbe
sti
mov
add
xor
inc
or
xchg
popf
call
inc
inc
adc
idiv
aaa
dec
push
or
rol
shl
pop
test
mov
test
aad
shr
sub
aad
inc
dec
std
and
std
jg
sub
mov
push
ds
push
mov
or
mov
mov
sbb
cmp
lods
in
lahf
sub
push
imul
shr
scas
out
fs
push
in
roll
mov
jge
out
xor
aam
adcl
pop
jl
outsb
xor
jl
data16
enter
dec
faddp
xchg
xchg
sbb
lahf
mov
mov
fistpll
dec
pushf
popa
stos
pop
push
xchg
fiaddl
push
mov
xor
cltd
icebp
fldt
xlat
aad
js
and
and
sahf
adc
imul
mov
cwtl
ret
xor
jmp
xchg
add
orl
jno
mov
lea
jge
and
mov
lretw
push
enter
jbe
cltd
push
ds
sti
mov
test
stos
and
lret
jnp
loop
fimull
and
in
ret
adc
sbb
push
mov
dec
cmc
loopne
pop
adc
ds
mov
filds
std
loop
jns
inc
aam
stc
jne
mov
push
outsl
xchg
cmpsl
dec
iret
pop
pop
imul
and
in
xor
fnstcw
xchg
xchg
xor
xor
aam
xlat
cmp
test
enter
lock
jae
or
adc
cwtl
or
jmp
out
outsb
aam
xchg
inc
inc
mov
push
xor
fbld
seta
pop
sub
pop
outsl
sti
inc
jnp
inc
mov
pop
or
lods
sbb
shr
push
popa
mov
sbb
lods
mov
inc
fistpll
enter
and
inc
dec
mov
aad
lret
lea
or
push
cmp
add
mov
dec
shll
out
sub
inc
sbb
popa
jmp
inc
dec
sub
out
xchg
arpl
add
ljmp
repz
pushf
and
pop
and
mov
mov
movsbl
xchg
dec
pop
adc
pop
dec
jge
movsl
jbe
wbinvd
pop
jl
sub
sti
and
sub
cmc
sub
mov
mov
xor
dec
lods
mov
xor
cmp
sub
xchg
cmp
fwait
iret
jecxz
int
ret
adc
and
cltd
loop
stos
push
int3
mov
popa
mov
enter
stos
mov
movsb
jge,pn
mov
cmpsb
fistpl
inc
xor
jae
rcrb
pop
out
pop
rorb
dec
add
sahf
mov
sbb
call
mov
mov
insl
scas
mov
fs
or
mov
add
mov
cltd
xchg
inc
fnstcw
cmp
lods
out
nop
mov
mov
fsubs
in
out
jb
pusha
cmp
adc
push
dec
out
fildl
xorb
lret
imul
mov
sbb
roll
add
cmp
push
cli
jns
add
aam
stos
hlt
fisttpll
xchg
sbb
int3
cmp
jle
adc
mov
inc
repz
loope
subb
aam
lret
clc
cli
pop
ror
mov
in
stos
jns
adc
pop
rorb
test
lock
jno
push
scas
sbb
rcrl
in
lea
push
cld
adc
cmc
add
sub
repnz
stc
pop
movsl
sub
stos
xchg
push
xchg
push
sbb
in
clc
or
mov
hlt
push
mov
rorb
scas
lret
out
imul
push
xchg
gs
sbb
add
sahf
jae
sub
bnd
lret
stc
adc
mov
cmp
leave
fcmovnb
lock
cltd
cmpsb
in
add
dec
xor
ljmp
push
aam
bound
dec
mov
xchg
jno
sub
jge
je
pop
inc
dec
in
mov
add
sbb
mov
call
mov
mov
mov
add
jg
rorb
cmp
and
jmp
fs
popf
mov
stos
xchg
or
movsb
faddp
notb
cmpsl
mov
aad
sti
xlat
fistps
outsl
mov
enter
push
or
ljmp
or
xor
pop
add
les
dec
dec
icebp
xchg
negl
into
jl
packssdw
out
xchg
adc
movsb
fdivp
out
int
push
rclb
cmp
ret
sbb
testl
cmp
das
aaa
push
mov
inc
pop
iret
daa
out
fdivrl
cmp
mov
sub
xchg
mull
xchg
sbb
mov
lock
dec
jg
in
mov
movsb
stos
add
sub
add
loop
dec
pop
xchg
mov
loopne
pop
jnp
test
scas
xchg
stos
fnstsw
arpl
and
loop
pop
xor
sbb
popf
sbb
fnstsw
push
scas
cmp
loope
mov
inc
pop
imul
dec
xchg
jge
push
mov
pop
sub
test
xchg
cwtl
pop
lcall
xchg
jmp
adc
pop
or
cmp
add
test
setg
icebp
add
dec
cmp
mov
sub
xor
mov
inc
mov
xchg
push
jns
enter
imul
arpl
lods
mov
pop
or
jne
cmpsb
mov
pop
std
sarb
cmc
and
cld
nop
xor
rol
adc
lods
xor
and
test
push
iret
inc
mov
hlt
int3
or
pop
rcr
cmp
subl
pop
mov
cmp
adc
cmp
gs
xchg
lock
nop
push
in
cwtl
push
lcall
xor
ja
mov
aas
xor
sub
rclb
loop
cmp
xchg
sbb
jo
in
jge
mov
cmpsl
pop
out
lods
sarl
adc
push
sbb
test
push
and
jle
in
pop
sbb
pop
ds
push
inc
xor
pop
ljmp
stos
push
sub
orl
inc
add
test
lret
dec
in
pop
sub
test
test
gs
xchg
fstpl
pusha
inc
ficoml
xchg
mov
pop
lcall
xchg
mov
and
sub
jo
jl
sub
xchg
stos
jbe
testl
repnz
sbb
in
subl
in
mov
sub
ljmp
rolb
cmp
sub
jns
or
shll
push
rorb
stc
jmp
xlat
das
and
sbb
inc
or
addr16
sub
jle
dec
mov
scas
ret
cmp
or
int3
rclb
dec
test
jecxz
xchg
mov
push
adc
fwait
jl
xchg
add
icebp
sub
pop
sbb
lea
lcall
cmp
filds
stos
lock
push
cmp
pusha
frstor
xor
je
cmp
enter
rclb
push
sti
aad
je
loope
cmpsb
out
in
leave
mov
mov
lret
xchg
outsl
jnp
lret
roll
pop
dec
push
daa
movsl
ja
orl
inc
stos
out
jp
dec
std
inc
out
jecxz
loopne
sahf
or
imul
outsl
dec
xor
aas
mov
insl
jo
pop
xchg
lahf
flds
sbb
adc
sbb
in
scas
pop
lea
int
sub
in
popl
sub
pop
fldt
lret
cltd
jo
jecxz
adc
cmpsb
cmp
fldcw
dec
in
lret
sub
xchg
bound
test
push
in
fstpt
sub
lea
test
aaa
iret
cs
jg
cmp
xlat
mov
cltd
and
xchg
dec
fbld
inc
jl
cmpsl
fstpt
idivb
xchg
arpl
jmp
popf
adc
jne
arpl
adc
and
add
jo
sti
add
sub
and
cwtl
int
mov
xchg
leave
xor
or
rorb
mov
or
sub
rolb
sub
jne
cmp
fbstp
insb
ds
cmp
cld
lret
push
insl
cltd
incl
int3
adc
pushf
jmp
movb
dec
movsl
or
cmp
sbb
or
xor
incb
fcmovu
push
xor
cmpl
push
std
cmpsb
fwait
aad
sti
sub
jge
xchg
lods
jbe
push
mov
pushf
jo
mov
add
pop
xor
das
dec
add
pop
and
cs
cmpsb
cmp
shr
in
add
lret
mov
rcrl
imul
dec
ds
sbb
ret
andl
mov
enter
pop
in
inc
xor
in
adc
test
adc
lods
pop
ja
lahf
jno
fsubrs
loop
xchg
sub
fistpl
out
cmp
cmp
xor
das
lds
adc
repnz
lret
push
adc
dec
sysret
sub
push
or
das
cmpsl
mov
adc
ljmp
and
sahf
mov
js
and
mov
cmp
pop
lret
das
inc
jbe
popf
jbe
mov
fidivrl
imul
mov
cld
add
mov
xor
xchg
stc
test
dec
pop
lock
fiadds
mov
out
dec
mov
ds
mov
mov
or
push
lock
push
jge
pop
xor
iret
inc
xor
int3
cmp
mov
adc
jae
mov
xlat
sarb
bound
xlat
lret
out
jno
sub
mov
test
call
add
mov
or
or
or
jl
insl
fsub
fldcw
xor
mov
mov
out
leave
lods
sbb
leave
sbb
mov
xor
mov
icebp
mov
mov
jmp
stc
outsl
lock
idivl
xchg
and
sbb
pusha
fisubs
fwait
inc
push
ja
out
cmp
jle
js
loopne
sbb
iret
xor
mov
cs
outsb
fmull
decl
xor
call
lods
xor
xchg
ret
jle
fdivrl
stos
clc
int3
call
push
push
or
inc
aaa
sti
out
sbb
or
fiaddl
cltd
movsb
xor
cmp
addr16
cmpsb
roll
add
js
adc
inc
or
push
addr16
nop
pop
test
dec
mov
sub
js
push
das
test
lods
jg
xchg
jb
roll
push
fs
mov
mov
insl
sbb
ret
imul
mov
and
and
pop
out
js
leave
icebp
scas
inc
mov
lods
js
mov
or
jecxz
push
subb
movsb
sbb
icebp
mov
mov
or
push
inc
test
icebp
xor
push
or
push
jle
jno
popa
xchg
dec
or
scas
subl
pop
jae
pop
inc
mov
mov
lods
std
scas
rolb
pop
cmc
xor
out
mov
test
or
into
insl
movsb
jb
mov
xor
push
ret
jmp
jno
rolb
fstp
cmp
ret
out
push
inc
mov
xor
mov
xor
ja
xchg
lahf
imul
fidivl
sbb
xchg
and
push
mov
dec
sub
gs
aad
and
sti
scas
sahf
and
jb
pop
mov
pop
icebp
scas
and
shll
push
push
out
xchg
add
cmpsb
cmp
cwtl
xchg
out
mov
mov
dec
out
mov
loopne
dec
and
sbb
lods
jp
adc
fisttps
push
arpl
test
test
mov
fs
xchg
and
aad
mov
jb
lea
mov
dec
jne
xchg
sahf
scas
aad
xor
push
sbb
pusha
adc
std
mov
arpl
pop
xor
and
mov
sub
test
jae
cmp
ret
xor
das
lea
push
or
dec
mov
mov
fcomps
ljmp
outsb
and
out
fstpl
aam
incb
test
or
iret
lds
jb
push
cmp
adc
lret
add
into
cld
add
test
mov
mov
sahf
lahf
lock
jo
loop
push
enter
cmp
mov
fisttpll
and
test
fisubl
sub
pusha
into
call
cmp
scas
out
aad
fidivs
pop
xchg
mov
inc
or
or
mov
int3
sbb
in
pop
mov
inc
andl
pop
mov
and
cmp
mov
adc
movl
daa
ret
mov
ljmp
fs
stos
call
bound
mov
add
push
adc
push
in
pop
in
shrb
ffreep
dec
inc
push
andl
push
mov
inc
stos
mov
mov
push
or
add
xor
dec
hlt
jp
test
fcomip
lds
mov
xor
outsl
xchg
imul
xchg
push
jg
bound
into
jno
add
movzwl
lahf
in
or
cmp
sbbl
data16
es
outsb
subb
sub
mov
gs
fnstenv
jp
xor
xchg
aaa
scas
mov
dec
jbe
repnz
es
pop
leave
cmpsl
in
test
push
into
repz
inc
fnsave
mov
pusha
xchg
je
jnp
mov
push
dec
movsb
test
out
sbb
xor
xchg
pop
push
xchg
sbb
jno
clc
js
lcall
aad
inc
test
mov
pop
dec
lret
dec
test
fcompl
mov
inc
out
bnd
adc
jge
and
insb
hlt
popa
mov
sub
ret
jo
fwait
pop
jnp
mov
xor
repz
mov
push
ds
sahf
adc
pop
or
pop
fdivp
xor
cmp
fists
pop
scas
cmpsl
ret
sub
sub
jle
cmpsb
sahf
dec
lds
in
int3
out
or
mov
xor
or
imul
loope
loope
stos
jecxz
pushf
ss
mov
lret
mov
gs
movsl
xchg
add
mov
mov
scas
je
sbb
je
fs
inc
mov
pop
les
push
stos
fs
dec
inc
lahf
push
and
xchg
loop
cltd
stos
jg
pop
sbb
pop
cmp
nop
and
or
cld
dec
sbb
push
inc
xor
sub
test
lock
ret
mov
cmp
filds
sub
or
inc
push
aam
in
and
dec
pop
js
cltd
cmp
inc
push
lahf
pop
push
sub
mov
js
cmp
dec
pushf
xchg
inc
lods
test
add
xlat
je
cmp
fistps
fdivrl
faddl
insl
pop
in
add
sbb
add
faddl
dec
lahf
icebp
adc
popl
adc
movsl
push
cmpsl
movsb
imul
mov
andb
iret
les
out
add
lds
mov
call
sub
jb
mov
mov
mov
adc
xor
subl
cmp
mov
fs
addr16
xor
sbb
xchg
test
loop
lds
jbe
std
mov
pop
fmull
stc
push
push
cs
sub
test
cltd
daa
scas
xchg
mov
mov
inc
test
std
hlt
idivb
aad
sbb
dec
cli
out
andb
subl
and
jl
out
push
push
or
cli
int3
jne
push
xor
lods
scas
cbtw
sub
jno
cmc
xor
testb
dec
ds
inc
movsl
jmp
mov
lds
mov
aas
std
mov
dec
in
inc
push
cmp
add
sub
fwait
adc
jo
mov
mov
add
lret
arpl
sub
dec
pop
pusha
inc
lahf
into
jl
mov
inc
fdiv
lret
leave
pop
imul
and
mov
imul
or
jb
xor
out
jmp
pushf
cvtps2pd
imul
subl
xor
out
sub
add
cs
add
popf
rcl
imul
enter
dec
add
in
fdivs
mov
jmp
in
cmp
cltd
out
and
insl
sub
popf
or
pop
pop
das
stos
cmpsb
and
hlt
sub
les
inc
pop
and
shl
aam
xor
popf
outsl
cld
pop
outsl
jo
fisubrl
das
add
mov
pushf
pop
mov
xor
cwtl
pop
pop
bound
push
add
aad
pop
mov
loope
inc
js
dec
adc
or
mov
in
in
mov
pop
pop
out
fcomps
adc
mov
jmp
mov
xchg
cli
push
mov
xchg
and
mov
mov
rolb
adc
mov
jbe
cmp
jmp
gs
scas
xchg
push
mov
das
xchg
rorb
rclb
xchg
aaa
mov
js
mov
jl
sti
mov
xor
loopne
xchg
xor
pop
mov
xchg
jecxz
addr16
rolb
xor
xlat
pop
push
sbb
lods
and
dec
out
mov
push
push
jg
enter
test
cli
mov
les
ffreep
mov
cli
and
and
inc
xchg
out
mov
dec
dec
ret
dec
into
jnp
cld
sbb
loope
adc
sub
das
jle
mov
out
sti
flds
and
mov
xchg
std
inc
mov
imul
jge
daa
clc
xor
mov
mov
fstps
in
and
movsb
lret
adc
loop
push
push
sub
push
cmp
jge
inc
xchg
push
xor
mov
mov
inc
add
jg
shll
dec
fisubs
lea
and
fistpl
aad
inc
out
clc
mov
mov
cmp
mov
xchg
ds
ss
int
push
clc
pusha
inc
mov
jb
mov
fidivrl
fs
jb
xchg
jecxz
and
fxtract
jb
fdivrl
xchg
pop
loop
cmp
or
add
inc
mov
aad
ss
pop
adc
push
scas
ror
lahf
sahf
jae
inc
sarl
xor
sub
add
pop
jb
sbb
sti
mov
sub
mov
xor
sbb
dec
mov
and
outsl
add
mov
iret
imul
insb
mov
fcmovu
imul
mov
push
adc
shlb
mov
int
dec
mov
xchg
dec
mov
test
sbb
ds
mov
ret
sub
inc
push
fadd
lods
stos
adc
gs
push
and
push
jae
sbb
into
out
movsb
jnp
xchg
loop
shlb
dec
pop
cmpsl
mov
mov
das
adc
sarb
aam
insl
icebp
mov
dec
xchg
inc
sarl
aas
dec
out
loopne
adc
lret
je
add
xor
ja
adc
out
push
jae
sbb
pop
xor
mov
pop
add
rorl
test
out
fcmove
jmp
fiadds
inc
cmp
push
mov
xlat
out
lret
andl
jmp
scas
hlt
in
jg
inc
fcomp
pop
dec
ja
adc
adc
cmpsb
ja
lods
lock
ljmp
ret
sub
fildl
inc
mov
popf
inc
sub
rcr
pop
fcomps
mov
cmp
push
sub
or
xor
sbb
lret
inc
popa
xor
pop
ja
push
imul
aas
and
mov
push
je
jb
mov
ljmp
jnp
xchg
push
or
xchg
outsl
roll
call
inc
pop
push
repz
adc
add
jp
add
mov
sub
xchg
add
mov
js
cld
fidivrl
js
add
mov
cmpsl
mov
ljmp
sub
adc
lahf
xorl
mov
aad
out
addr16
sbb
aas
iret
mov
push
pop
mov
dec
test
lea
lahf
or
push
imul
in
arpl
mov
daa
fs
inc
pop
sarb
jno,pn
bound
mov
ja
cmp
push
sbb
xor
dec
cmpl
ret
sahf
xor
data16
pop
push
pop
jge
pop
mov
cmpsl
xlat
push
push
add
sahf
xchg
inc
mov
push
testl
jge
xor
sti
addb
repnz
mov
mov
push
in
clc
inc
sti
add
negb
movl
jle
lcall
ss
xor
int
enter
inc
loopne
jg
and
rol
ret
xchg
xor
leave
arpl
sub
or
mov
mov
mov
pop
orb
or
jns
pop
sub
fistpll
mov
adc
xchg
pushl
pop
adc
insl
inc
js
cwtl
sbb
cmp
sbb
aaa
lahf
das
cmp
push
push
xacquire
xchg
arpl
mov
cltd
nop
sbb
ds
lret
cmp
jno
fnstsw
dec
cmp
xorl
shrl
icebp
call
jbe
cli
int3
hlt
fistpl
sti
xchg
js
ret
sbb
jnp
pusha
or
jecxz
jge
test
hlt
aad
xor
jmp
pop
dec
pop
andb
sub
cmp
std
sub
into
data16
nop
pop
stc
in
inc
dec
cmp
pop
out
mov
ret
clc
cmp
cs
push
sbb
mov
rorl
cwtl
xchg
lods
lock
stc
lea
xchg
pusha
mov
jnp
fwait
jmp
stos
addl
xchg
push
jo
sub
mov
inc
in
fwait
lds
inc
testl
pop
cmp
popa
jge
jb
add
or
fstl
add
ja
adcb
xchg
mov
cmp
sub
xchg
imul
xor
jo
into
out
sub
xor
mov
fwait
sbb
fistl
pop
scas
iret
mov
cmp
js
clc
jbe
jmp
into
push
sahf
add
push
movsb
fldl
sti
add
stos
cmp
stos
int3
and
test
jns
nop
mov
sbbb
pop
outsl
jnp
aas
ret
icebp
mov
repnz
mov
pop
ja
lock
out
and
xchg
je
insl
int3
jb
aad
int
pop
cmp
pop
cltd
cmp
push
int
and
dec
popf
and
dec
cmp
out
sub
lahf
sbbb
sbb
jno
shll
xchg
sub
jbe
hlt
out
int
sarb
push
fwait
push
in
cmp
ss
and
out
push
ss
or
push
sbb
push
out
out
fisubl
js
add
adc
mov
push
or
lods
sbb
decb
js
mov
repz
ret
mov
iret
pop
lods
bound
int
test
jno
dec
jl
cld
dec
in
xchg
adc
xchg
lahf
jno
call
sbbl
adc
cltd
xlat
mov
outsl
jp
mov
mov
push
push
shrl
or
arpl
pop
xor
pop
pop
dec
rcrl
rcrl
fdivrs
scas
dec
add
mov
daa
jle
add
sbb
mov
sbb
jne
sahf
inc
push
push
cmc
mov
sbb
cmpsb
je
insb
mov
test
in
aad
push
leave
push
ja
and
mov
push
cmp
push
push
push
cmp
std
sub
mov
sbb
push
call
fcompl
adc
mov
ss
sahf
jne
pop
das
bnd
pop
mov
aad
dec
jb
addb
phsubd
arpl
in
loop
pop
push
cmpl
pop
mov
xlat
enter
mov
mov
push
gs
inc
test
les
dec
mov
push
xor
xlat
dec
orl
test
push
mov
andl
imul
xchg
mov
in
out
add
andl
arpl
jne
lds
hlt
js
dec
imul
leave
fidivs
orb
sub
dec
arpl
sub
hlt
and
lret
test
or
inc
sub
iret
pop
dec
shrl
movsl
xlat
inc
cs
inc
fcom
cmpsl
jl
and
sbb
lahf
stc
enterw
and
test
repnz
xchg
ret
fwait
test
adc
inc
xor
jno
out
pop
mov
ja
jmp
imul
jbe
out
push
pusha
test
sahf
add
pop
or
enter
sbb
xchg
mov
sbb
out
imul
neg
xchg
leave
aas
fisttpl
fstl
or
rsqrtps
inc
push
sbb
pop
negb
push
push
mov
je
push
add
add
ficompl
adc
negb
out
mov
mov
mov
fldenv
lahf
mov
xchg
dec
out
loope
mov
cld
ret
mov
dec
xlat
out
aaa
inc
push
or
cmp
push
int3
sub
mov
lret
icebp
sbb
cmp
in
jb
push
adcb
out
sub
aad
mov
xor
sub
dec
int
jbe
xchg
inc
int
xor
mov
fidivl
xchg
scas
aad
cmp
xchg
mov
gs
mov
mov
or
mov
cld
adc
jge
out
xchg
pop
sbb
dec
bound
fs
in
xor
mov
push
ret
int3
jp
pushf
fwait
aad
mov
push
inc
int
jbe
add
xchg
shrl
push
add
lods
pop
out
cld
or
xchg
loop
lret
scas
pop
sbb
ds
movsl
outsb
adc
insb
jge
iret
sub
cmp
fsubs
inc
hlt
adc
push
xchg
mov
shll
rorb
ss
in
jbe
in
leave
clc
test
test
xchg
adc
sbb
dec
movsb
shl
frstor
cmpsb
adc
dec
or
push
push
dec
or
mov
rcrb
adc
push
xor
dec
lret
mov
cmp
mov
insl
out
inc
bound
repz
xchg
imul
cli
sub
adc
adc
xchg
xlat
mov
popa
adc
push
notl
and
popf
mov
hlt
or
and
sub
xchg
cmpsl
lods
addb
mov
sti
std
int
js
repz
jecxz
adc
pop
ds
repnz
imul
or
xor
loop
add
icebp
incb
fbld
xor
or
jl
lret
cmp
sub
pop
stc
cmp
js
gs
cmpsb
xor
cwtl
pop
jp
adc
xor
jmp
cmp
cmpsb
cmpsb
mov
shl
mov
cmpsl
mov
outsl
mov
add
push
ja
mov
cmp
xchg
test
push
mov
push
sub
repnz
imul
cmp
sub
xor
jb
jns
jo
loopne
in
add
and
xor
lret
xchg
loopne
xor
daa
sbb
dec
test
inc
mov
sbb
lock
es
imul
insl
mov
jbe
jo
fs
inc
loope
je
test
jmp
mov
outsl
aad
cli
xor
cmpsl
aas
xchg
xchg
decl
cld
std
push
mov
pop
bound
fsub
jle
add
pop
clc
dec
cmc
std
jp
mov
lds
insl
or
jne
lcall
loope
sub
bound
outsl
sub
popa
pop
sub
inc
mov
or
push
pop
leave
das
subb
adc
mov
int3
xor
mov
aad
clc
inc
stos
add
shrb
imul
mov
clc
push
inc
mov
psadbw
dec
mov
xchg
push
xor
push
movsb
rol
shrb
bound
cmpsl
xchg
mov
out
nop
in
xchg
xchg
lret
jo
inc
into
in
movsl
mov
cmc
fldenv
mov
push
pop
sub
jnp
adc
dec
push
jle
xchg
jns
xchg
imul
inc
push
icebp
dec
xchg
cltd
mov
inc
sbb
cmp
jns
sub
inc
jmp
mov
out
insb
out
shrl
lret
int
pop
mov
daa
adc
ficoms
cmpsb
pop
jge
xchg
dec
stos
ljmp
jle
ljmp
cmp
sub
ds
movsb
xor
lret
fldenv
mov
adc
les
mov
or
mov
sahf
xchg
shll
inc
pop
in
je
or
add
pusha
leave
popf
add
push
dec
inc
out
mov
xchg
cltd
push
lret
jo
jbe
lret
cld
adc
fiaddl
or
rcrl
out
add
cmp
mov
sbb
das
ds
pop
je
mov
pushf
stos
popa
rcl
roll
push
cs
or
add
xor
int
fbstp
push
cli
dec
ljmp
mov
inc
imul
mov
xorl
ds
lahf
cltd
or
jge
push
dec
mov
inc
xchg
mov
aas
and
xchg
movsb
fldcw
shrl
xchg
dec
or
popa
add
sti
loope
and
cwtl
sbb
inc
das
cmp
nop
aam
bound
fs
pop
and
gs
gs
jge
es
jmp
sbb
mov
jne
lret
sub
sbb
iret
or
cmp
ret
mov
adc
push
jae
adc
cmp
enter
pop
mov
jl
jb
in
aam
adc
sbb
scas
cmp
shll
cmp
outsl
jne
jmp
pop
test
leave
bound
inc
je
rcrb
mov
or
or
dec
bound
pop
or
stos
test
data16
mov
addr16
pusha
pop
adc
push
jns
int
addr16
lret
fnstsw
or
jo
aaa
out
enter
or
fists
pop
sbb
sub
rclb
stos
mov
lock
pop
ljmp
xor
fwait
mov
in
insb
ljmp
aad
xor
shr
add
popl
out
mov
lret
rcll
mov
movsb
pop
lcall
rcr
jge
pop
shlb
adc
push
out
xor
xchg
clc
fwait
jnp
call
fstps
push
mov
xchg
sub
sbb
sbb
sub
loopne
push
jl
push
subl
add
mov
push
dec
sub
sub
add
rorl
jbe
test
out
mov
sbb
subl
stos
shrb
jmp
into
cmc
mov
push
cmp
dec
push
mov
subb
mov
mov
sub
ds
jl
jmp
dec
rcll
or
mov
xchg
cmp
imull
cmp
push
lahf
cmp
jle
adcb
pushf
pop
fbld
popf
add
dec
pop
jge
inc
out
or
test
xchg
call
or
ret
xchg
sbb
nop
jcxz
or
iret
les
sbb
call
outsb
mov
lahf
lret
lds
push
pusha
adc
out
pop
push
add
pop
mov
cwtl
jg
or
das
or
movsl
fs
cmp
mov
lods
mov
cltd
sarb
pop
jno
adc
jno
outsl
mov
loope
out
outsl
dec
loope
ss
xor
and
and
jb
xor
js
sbb
dec
out
dec
push
repz
mov
mov
fdivp
and
mov
sbb
fldl
mov
xchg
mov
push
add
js
imul
mov
loopne
adc
adc
sub
sub
push
daa
call
arpl
xor
jle
lock
jl
cmpb
pop
push
adc
mov
gs
idivl
lods
xchg
jg
and
orl
mov
imul
aad
mov
subb
js
xchg
std
call
jo
out
outsb
push
shrb
or
push
mov
enter
mov
push
push
mov
xchg
repnz
push
push
pop
iret
sbb
and
jp
sbb
adc
arpl
imul
popf
push
sub
nop
scas
cltd
add
inc
roll
add
jno
lret
lcall
or
scas
int3
sbb
cmpsb
mov
push
and
xchg
int3
mov
add
fptan
xlat
push
sbb
lret
in
nop
push
sbb
adc
jmp
in
lock
icebp
pop
test
shll
ds
pop
lds
cmp
div
dec
loope
push
addr16
or
je
mov
or
pop
inc
push
inc
mov
mov
int
inc
rcr
mov
xor
out
idivb
out
pop
shll
mov
add
cmp
rcl
and
inc
and
or
je
xchg
xor
push
push
jo
add
push
push
icebp
mov
jnp
insb
leave
fcomps
out
sti
cmpsb
cli
in
ljmp
sub
cmp
stos
add
push
inc
call
mov
lret
outsl
mov
pop
test
xor
add
and
fcompl
sbb
popa
sbb
mov
mov
pop
mov
pop
mov
and
jnp
xchg
rorb
popf
add
sbb
jb
call
pop
rol
loop
shlb
das
out
pop
pop
inc
push
push
scas
pop
out
push
or
iret
aad
adc
cs
int3
pusha
mov
ljmp
outsb
dec
cmpsl
push
dec
add
fcoml
ror
mov
fimuls
xchg
mov
div
scas
mov
dec
aam
psrlq
lret
xor
or
or
jae
fwait
sbb
or
cli
ljmp
jmp
hlt
fcmovnu
sub
out
or
adc
daa
adc
fisttpll
sub
dec
mov
loope
js
lret
and
dec
cmpsl
mov
in
sti
addr16
fsubl
mov
add
stos
jge
movsl
dec
pop
rcrb
sbb
into
test
push
mov
cmp
cwtl
or
sub
sbb
dec
fistpll
lahf
ret
cld
and
or
clc
cmp
aaa
jb
mov
ficompl
mov
lret
js
test
push
jnp
jae
loop
mov
repnz
out
push
and
ret
pusha
inc
xor
leave
lods
rolb
mov
mov
mov
xor
sub
fnstcw
call
test
gs
jmp
sub
push
out
push
adc
bound
test
push
inc
pop
pop
lcall
push
fidivrl
loope
js
lcall
pop
dec
aas
xchg
inc
data16
mov
rorl
cmp
ljmp
push
mov
xchg
jo
fcmovb
outsb
mov
sbb
sub
add
mov
cltd
adc
cmp
fucom
or
push
adc
push
push
push
jns
aas
dec
inc
lcall
pop
push
push
outsl
or
jb
push
fnstcw
and
dec
jae
sbb
and
imul
cmp
jno
cld
jno
jle
jl
les
add
imul
stos
push
cmp
dec
and
pushl
jo
call
jg
jbe
fsubs
in
imul
add
sub
adc
mov
xchg
push
stc
pop
pop
pop
mov
movsl
push
test
cli
aaa
ret
test
push
jmp
fists
movsb
add
testl
and
jmp
ja
xchg
shlb
push
add
jle
xor
divb
xor
xor
adc
imul
stos
cmpsl
sbb
scas
cmpsl
xchg
in
inc
addr16
mov
in
mov
pop
aam
out
lods
sarl
jl
das
push
ja
insl
adc
jl
js
filds
mov
ret
mov
sbb
cmpsb
int3
mov
aaa
xor
xlat
fsubs
nop
dec
dec
ret
imul
out
imulb
and
push
fistpll
inc
mov
cmc
es
sbb
sub
or
sub
add
push
es
fdivrl
insb
outsb
xchg
ret
sub
inc
sub
cli
movsb
pop
js
push
shlb
in
sbb
mov
sahf
jbe
aad
mov
nop
rcrb
mov
pop
inc
fmuls
jmp
sub
dec
adc
jl
xor
xor
pop
ficomps
popf
loopne
cld
adc
and
push
sub
imul
fistl
sub
mov
ss
pusha
ja
gs
outsl
mov
outsl
add
and
int3
dec
aaa
js
test
imul
mov
mov
fidivrs
sub
and
cmp
mov
enter
sbbl
loope
add
inc
and
ret
popa
mov
sub
mov
xchg
mov
repnz
bound
push
scas
and
xor
ds
sahf
push
imul
out
movb
mov
pop
pop
xchg
mov
xor
mov
lds
ja
hlt
xchg
sub
pop
push
cmp
fldenv
mov
mov
fdivrl
data16
les
dec
pop
push
adc
fmuls
cmc
mov
in
fs
xor
xor
mov
int
xor
add
sbb
js
sub
inc
mov
inc
mov
imul
stos
push
lret
out
xchg
cmp
xor
lods
dec
mov
mov
push
jnp
jae
pop
sub
jp
mov
into
movsb
sbb
push
xchg
icebp
sbb
pop
and
xchg
testl
jae
icebp
lret
push
cld
push
fwait
mov
jnp
int3
pusha
jo
call
inc
sub
fisubl
gs
inc
or
push
jns
js
cli
sbb
nop
outsl
xchg
mov
movsl
mov
pop
sbb
fs
dec
adc
in
dec
xor
sbb
dec
xlat
in
sub
scas
adc
or
dec
inc
fimuls
sbb
lods
mov
pop
loopne
dec
xor
rclb
roll
hlt
test
xchg
xchg
nop
cmp
ret
inc
pop
hlt
lahf
dec
or
mov
mov
mov
mov
testb
arpl
pop
aaa
pushl
dec
iret
stc
stos
mov
in
rclb
dec
inc
jmp
push
pop
in
jmp
lret
clc
xchg
mov
sbb
out
xor
pop
sbb
add
inc
js
test
mov
jecxz
sub
les
es
xchg
inc
adc
jnp
aaa
cmp
arpl
cmp
and
jmp
xor
sub
sub
push
push
fs
call
dec
ud1
xchg
je
stos
repz
jns
jle
out
or
out
mov
std
aaa
cmp
das
mov
push
imulb
xor
pusha
pop
cmp
push
mov
ljmp
xor
jns
imul
jbe
mov
popf
adc
inc
push
int3
add
mov
out
and
lcall
stos
in
dec
and
add
inc
cltd
adc
xor
xor
gs
out
frstpm(287
inc
mov
imul
inc
test
sbb
stc
cmc
cs
cmp
xor
push
or
mov
aad
jge
jmp
pop
xor
push
or
daa
repnz
push
sbb
movsl
les
or
loop
out
data16
push
xchg
cmpsb
push
mov
push
cmp
xor
pushf
fidivrs
arpl
sbb
pop
decb
call
pushf
inc
xor
ffreep
lahf
imul
outsl
xor
inc
int3
shlb
push
xlat
in
out
cs
xor
enter
sbb
lods
push
xor
mov
arpl
roll
sub
sarb
pop
sub
lock
adc
arpl
ficoml
adc
pop
jge
daa
cmp
push
push
rorb
fs
test
mov
fcomip
mov
loope
and
or
dec
mov
or
add
pop
iret
xorl
mov
outsl
sub
jb
push
inc
jb
add
not
enter
loopne
loope
test
loopne
not
sub
hlt
mov
mov
sub
push
test
aaa
inc
imul
pop
shrb
movsb
out
push
jmp
jg
cwtl
mov
adc
enter
inc
xor
ret
mov
enter
inc
mov
test
dec
sbb
lock
or
add
pop
lods
imul
cmc
mov
pop
adc
iret
cmp
sbb
adc
add
adc
mov
sbb
aad
pop
outsb
sub
cmp
lcall
pop
ss
mov
jmp
fsubl
iret
push
syscall
push
das
inc
add
mov
pop
push
mov
pop
test
loopne
popa
aas
test
pop
mov
mov
push
mov
add
in
cmp
push
adc
ficompl
bound
pop
fcomip
dec
push
outsl
inc
push
int
add
or
test
into
and
and
mov
shll
or
xor
mov
adc
popa
cmp
dec
fdivrp
das
imul
push
push
fistpll
std
mov
in
xor
push
popa
adc
xor
and
sbb
out
in
push
and
or
inc
aas
xchg
push
mov
dec
push
shrb
fadds
pop
frstpm(287
add
add
inc
dec
mov
inc
shrl
cvttps2pi
inc
hlt
push
inc
movsb
orl
aad
in
lcall
iret
lcall
mov
mov
in
in
or
bound
dec
xchg
push
mov
les
mov
push
fbstp
mov
pushf
movsw
cltd
cld
sbb
xor
mov
push
dec
mov
aad
cmc
and
loop
dec
scas
mov
mov
sbb
cmp
stos
push
hlt
pop
or
fisubl
cli
mov
dec
stos
pop
out
sbb
sbb
into
fstl
xor
mov
bound
cmp
push
mov
sbb
scas
arpl
xchg
add
xorl
mov
xlat
sbb
mov
jl
and
xchg
push
xor
out
insb
fucomp
mov
mov
mov
or
pop
dec
push
movsl
sub
loope
cwtl
hlt
shl
mov
fstpt
add
in
pop
test
fisubs
imulb
mov
lret
cmp
cli
test
fcomps
jp
jg
les
rcr
scas
push
int3
cmp
iret
lds
cmp
mov
mov
push
icebp
jo
js
lcall
xchg
cmp
sbb
insl
adc
dec
inc
jge
lahf
mov
adc
arpl
pop
movsb
test
inc
sub
mov
sbb
mov
nop
push
daa
sbb
in
int3
cmp
sub
and
stos
sub
lcall
loop
leave
push
adc
or
xchg
popa
dec
lcall
out
imul
scas
int
jns
fucom
and
push
rcrb
sub
jecxz
xchg
sub
rcl
gs
loopne
loop
push
xor
shlb
aad
std
repnz
jno
push
xchg
nop
es
mov
sbb
js
jb
xor
fidivrs
jns
fucompp
fisttps
cld
push
fnstsw
mov
inc
push
lds
mov
cs
adc
and
addr16
loop
add
nop
test
fistps
fnstcw
fadds
sub
jle
sub
jecxz
imul
popa
mov
cmp
dec
push
xchg
and
cmp
pushf
arpl
in
adc
push
inc
cltd
clc
push
push
out
adc
push
push
jnp
jg
mov
add
cli
pop
fsubr
jp
cmpb
fdivr
cmpsb
std
lods
or
push
mov
cmp
pop
lcall
fiadds
or
je
dec
imul
dec
jp
mov
cmp
or
xlat
push
mov
sbb
mov
out
xchg
jo
jge
adc
lods
loope
sti
xor
jne
fsubs
ja
std
and
mov
push
int
shrl
std
shll
mov
in
cmp
mov
or
in
sbb
xor
dec
mov
sbbl
int
iret
jp
in
jns
loope
aaa
or
aad
data16
dec
jbe
int
dec
imul
sbb
loopne
push
pop
sub
es
cmp
mov
outsl
push
push
leave
cmp
gs
and
mov
popa
mov
sbb
mov
jb
cmc
or
jp
lahf
mov
imul
cmpsb
in
incb
je
aam
or
ljmp
pop
add
popf
cmp
lock
es
adc
scas
cs
lea
movsb
sbb
jns
pop
xor
jp
push
test
jp
xchg
cmc
xchg
int
idiv
enter
mov
sub
lock
xchg
scas
dec
jp
pop
mov
jl
add
jmp
dec
lret
push
sub
jnp
rclb
push
mov
and
lcall
mov
inc
scas
aad
adc
xchg
push
mov
mov
fistpll
pop
pop
loope
xchg
jns
lock
addb
adc
sub
xchg
cmp
cmpsl
mov
mov
scas
shrl
lret
test
xchg
push
nop
leave
dec
inc
mov
or
mov
mov
loopne
mov
sbb
or
sbbl
cmp
imul
ror
daa
sbb
push
mov
or
jp
fldl
fimull
pop
inc
shll
maxps
pusha
and
push
rorl
mov
sub
cwtl
js
lods
test
sub
push
add
subl
adc
fdivs
mov
add
inc
scas
or
fcoml
and
or
test
jle
pop
mov
push
sbb
sbb
ljmp
cmc
push
in
imul
mov
fcomi
fmul
imull
test
test
aas
jbe
pop
loopne
add
jbe
mov
scas
xchg
push
outsl
and
jmp
imul
lahf
ftst
out
or
xchg
insb
popl
movsb
mov
fidivs
mov
cmp
pop
jae
dec
sub
leave
push
xor
popa
insl
xlat
inc
push
fsubrs
adc
loop
push
pushf
xor
adc
mov
pop
xor
mov
test
sub
jae
loope
les
sub
ret
ds
add
adc
dec
imul
aas
push
xor
imulb
int3
insb
add
stos
pop
stc
fisttpll
icebp
popf
xor
rcrb
adc
cmpsb
dec
cmc
addl
xor
cmc
sub
notb
pop
push
pop
scas
cmpsl
arpl
jb
aaa
jno
cmp
leave
sub
arpl
repnz
aas
mov
dec
jg
fs
sub
cmp
stos
xor
adc
dec
xchg
pop
cmpsl
test
mov
notl
loopne
sub
ss
push
mov
fwait
dec
insb
fisttps
js
add
lret
and
xchg
aad
dec
dec
or
and
js
into
xchg
into
icebp
mov
push
sahf
adc
xchg
je
mov
or
cs
ljmp
jns
les
adcl
fmull
push
xlat
xchg
clc
push
or
sub
in
jnp
push
pop
insl
fidivrs
jb
mov
scas
stos
test
adc
xchg
pop
jno
icebp
sub
push
and
movsb
push
filds
or
movsl
mov
out
sub
push
or
les
adc
xchg
repnz
dec
rclb
or
push
arpl
aas
mov
stc
mov
cld
js
lock
sub
cmp
sbb
clc
lret
sub
lods
into
cmc
xchg
les
and
insl
dec
daa
in
pop
jmp
hlt
mov
dec
sub
sbbl
sbb
xchg
fcmovnu
imul
pop
nop
adc
gs
mov
cld
test
sub
es
mov
inc
mov
mov
int
sbb
cwtl
xchg
push
lock
lret
loopne
xlat
cmp
mov
ljmp
or
sub
inc
popa
leave
jecxz
mov
sbb
stos
xor
addr16
movsl
push
mov
and
push
jbe
xchg
hlt
fstpt
jg
sbb
push
pushf
xchg
arpl
in
inc
jae
mov
and
inc
or
and
jl
sahf
fisttpll
push
pop
aam
bound
inc
mov
lcall
or
mov
push
movsbl
add
fwait
dec
fimull
mov
fcmove
cmpsl
dec
out
test
pop
add
mov
test
mov
ds
sub
xor
jl
adc
lahf
in
ret
xor
lret
jg
test
jl
inc
and
push
inc
cwtl
sbb
xor
cltd
aas
xchg
inc
add
cmc
int
sbb
stos
push
sbb
xor
adc
mov
stos
adc
push
add
and
xchg
xchg
cmp
jmp
jo
imul
popf
inc
out
out
fsubs
or
psadbw
sbb
hlt
mov
imul
fimull
sbb
cli
scas
inc
cwtl
cld
push
jmp
sbb
icebp
cmp
test
inc
or
push
rorl
int3
data16
and
int
flds
outsb
inc
sub
jge
int3
and
loopne
adc
mov
mov
fwait
loope
popa
xchg
add
mov
ret
stc
stos
sbb
popa
xchg
sti
inc
pop
jnp
push
mov
stos
and
lods
jg
adc
fldcw
adc
lret
insl
flds
out
je
inc
out
daa
test
add
mov
mov
outsl
or
cwtl
pusha
hlt
incb
xor
push
in
je
mov
pop
mov
mov
jp
push
aaa
add
cld
pusha
or
cmp
sub
cld
mov
xor
add
ret
dec
adc
xchg
push
or
xchg
mov
mov
xchg
push
arpl
xorl
mov
jno
ss
push
inc
movsb
clc
mov
push
loopne
push
inc
mov
bound
fsubl
leave
sbb
inc
and
jg
mov
aaa
push
rcrb
jmp
ret
jle
and
and
addr16
addr16
push
push
push
sbbb
mov
pop
push
xchg
aas
jle
in
dec
rcll
outsl
fwait
pop
popf
sbb
push
push
jle
jg
or
mov
mov
mov
movl
xor
call
mov
xchg
cli
loopne
jns
int
dec
lahf
test
inc
fwait
xchg
adc
jg
jne
femms
sub
push
lock
jp,pn
fistps
push
xor
mov
pop
test
adc
fisttpl
ja,pn
rclb
cltd
cld
hlt
jmp
frstor
dec
inc
dec
xor
repz
inc
mov
mov
rol
push
inc
pop
xor
adc
lock
lret
mov
sahf
ss
inc
ljmp
mov
idivl
lock
or
adc
ret
jne
jp
xchg
cld
lods
inc
mov
loopne
out
ss
into
sbb
daa
mov
and
pop
or
nop
lods
mov
out
push
adc
stos
stos
lahf
stos
loop
jne
xchg
jbe
pop
dec
xor
popa
and
mov
ss
adcb
lret
popf
rorl
ret
fst
mov
sub
jne
pushf
jge
push
ds
clc
xchg
cmp
sub
out
fisubl
inc
daa
inc
mov
xor
aaa
jae
subl
inc
in
mov
popa
adc
jle
ss
jp
sub
jmp
inc
mov
leave
push
clc
inc
lret
stos
in
test
sbb
scas
pop
mov
push
push
lret
sub
lahf
xchg
pop
sub
jle
jb
cmp
pop
mov
xor
and
xor
cmp
jne
cmpsb
std
das
andl
dec
pop
ja
or
adc
insb
cmp
pushf
xlat
pop
movsb
push
pop
call
inc
mov
jl
xor
fwait
jle
inc
mov
jmp
adc
adc
aas
scas
pop
loopne
pop
xchg
pop
fisttps
outsl
sub
add
ja
fbstp
push
or
nop
les
cld
xchg
andps
xor
lret
ror
repnz
jnp
daa
mov
lcall
int
adc
xor
lock
and
inc
ljmp
push
sbb
aas
sub
and
rorb
pushf
sub
mov
xor
ret
mov
jbe
das
rorl
xchg
scas
in
in
rep
rcl
xor
pop
lcall
pop
xor
jp
or
ja
pop
notl
inc
cmpsb
or
aam
xorb
inc
pop
jp
mov
ljmp
pusha
outsb
outsb
adc
pop
mov
cwtl
mov
xchg
pop
xor
mov
jecxz
mov
jge
popa
loope
in
inc
jne
in
insb
out
jg
popf
mov
sub
stos
or
movsl
sbb
sbb
sub
fcmovu
xor
push
xlat
push
add
in
push
scas
xor
sbb
sbb
insb
outsb
lcall
mov
adc
in
mov
mov
dec
fbstp
aaa
lret
sub
mov
std
imul
push
sbb
dec
inc
push
inc
clc
inc
inc
call
add
jge
ret
inc
clc
and
add
movsl
addb
std
mov
inc
push
mov
push
add
add
push
xchg
insb
jbe
ss
out
push
repnz
imul
aas
push
in
xchg
push
es
daa
inc
imul
cltd
loop
xchg
inc
jmp
loop
pop
ss
mov
icebp
fidivrs
cli
das
shlb
jae
lods
pop
or
xchg
inc
imul
adc
rcrl
mov
in
ss
mov
inc
andb
push
call
add
xchg
int
mov
sub
xor
pop
das
insb
lahf
xchg
sti
cmp
dec
mov
lret
jl
sti
pop
xchg
mov
dec
movsb
cmp
inc
lea
xor
das
push
cwtl
jb
xor
jmp
dec
outsl
inc
in
xchg
js
roll
push
sub
push
mov
out
dec
pop
cs
push
lds
sti
enter
cmp
xor
stos
xchg
inc
popa
icebp
andb
xchg
cmp
rcll
mov
ja
and
mov
push
cmpl
xor
ret
pop
jns
cmp
in
nop
pusha
sbb
xchg
push
add
in
or
ss
mov
xchg
inc
iret
dec
inc
dec
mov
mov
cli
es
test
imul
mov
xlat
mov
cmp
mov
adc
cmp
mov
icebp
je
pop
jp
adc
sub
xchg
in
into
fnstsw
mov
nop
xchg
clc
mov
cmp
and
cwtl
cmp
mov
xor
jae
jne
cltd
pushfw
push
jp
mov
mov
cmp
push
outsl
shll
and
xor
iret
mov
int
lahf
jmp
std
stos
cwtl
xchg
jbe
add
popf
hlt
outsb
nop
mull
dec
inc
ds
out
jmp
in
jns
sub
test
pusha
rcll
mov
in
dec
sbb
jp
imul
or
popa
jb
loop
and
jo
leave
ret
push
loope
sti
in
cmp
cmp
outsb
lcall
pushf
sub
sahf
mov
cltd
xor
push
jne
in
sti
shll
mov
push
jne
jo
addr16
and
negb
scas
push
sbb
insb
sub
and
or
mov
addr16
xor
imul
jecxz
imul
fs
inc
enter
xlat
sub
pop
xchg
mov
mov
fwait
cs
inc
repz
add
hlt
xchg
gs
cmc
adc
xchg
xchg
dec
pop
clc
iret
daa
fidivs
mov
fildl
pop
test
test
jp
shll
xchg
jg
dec
mov
sbb
dec
pop
mov
pop
lea
imul
rcll
push
adc
and
in
stc
daa
icebp
int3
push
gs
fnsave
sbb
or
cmp
sub
fisttps
bound
fbld
inc
and
shrl
sbb
outsb
dec
mov
int
and
fimull
call
jp
xchg
testl
clc
or
jb
jecxz
int
in
or
sbb
xchg
mov
faddl
insl
push
sub
dec
ret
movl
adc
mov
mov
cld
insl
aad
jmp
fldenv
jnp
loop
push
es
sbb
ds
dec
add
push
decb
stos
sub
ja
test
mov
punpckhdq
ss
cmp
inc
mov
cld
aas
mov
jns
lods
cmp
insb
fdivrl
or
xchg
loop
movsb
outsb
in
xchg
je
cld
mov
pop
inc
into
dec
jmp
or
into
jmp
jbe
ljmp
mov
jnp
dec
jno
stos
sarl
lcall
mov
faddl
and
adc
jo
arpl
cmp
test
sete
adc
push
push
daa
pop
rcr
push
leave
jb
xchg
cwtl
aaa
orl
lret
jp
dec
push
cmp
icebp
loope
inc
mov
jmp
into
cmp
mov
mov
push
les
mov
sub
dec
inc
enter
inc
leave
ja
shll
jbe
sub
cmpsb
xor
insb
dec
xchg
lcall
std
ret
sub
jp
outsl
lods
mov
idivl
xor
out
arpl
jmp
mov
dec
adc
xor
add
jns
or
dec
add
xchg
ss
repz
es
adc
xor
jg
sar
push
mov
ds
mov
daa
ret
push
add
inc
je
scas
pop
outsb
cld
push
pusha
and
xchg
xchg
cwtl
out
jp
pop
fs
push
in
aam
sbb
jno
dec
fmuls
mov
push
orb
ljmp
sub
push
dec
and
add
dec
test
es
in
pop
sahf
ljmp
pop
xchg
adc
out
cwtl
into
xchg
adc
inc
pushf
das
stos
lea
sbb
cld
lcall
cld
test
jne
mov
leave
xor
mov
jbe
out
cmp
popa
mov
or
cli
mov
loopne
mov
inc
jp
push
mov
mov
xchg
push
mov
imul
adc
cmp
sbb
pop
mov
lcall
test
inc
sbb
xor
sub
sbb
repz
shrb
sbb
mov
insb
pop
sbb
es
out
add
out
or
test
lret
divb
adc
outsb
lahf
es
bound
lret
adc
scas
inc
mov
hlt
ja
int
cmpsb
shr
aam
movsb
in
out
or
popf
js
sbb
xchg
cmp
mov
lock
jl
shrb
cli
stos
shl
and
les
call
or
ljmp
aas
fdivr
pop
in
testb
lock
sub
sbb
sub
jg
cwtl
fcoml
sub
ficoml
mov
test
inc
mov
fcmovne
sbb
repnz
mov
sub
cmpsb
int3
cs
inc
pushf
pop
aaa
je
clc
cmpsl
psraw
loope
hlt
popf
das
push
hlt
jns
or
mov
push
cwtl
xchg
sbb
jge,pt
jl
sub
jne
clc
jge
pop
sub
icebp
pop
in
fdivp
adc
push
pop
rclb
int
lret
xlat
pushf
out
out
clc
imul
daa
lcall
out
push
out
mov
jnp
mov
iret
pop
lods
push
jp
stc
mov
jnp
pushf
test
mov
les
lahf
sbb
clc
aaa
sub
jl
dec
xchg
out
cwtl
push
cs
fcomp
jo
add
and
jb
jle
cli
cmp
ret
sub
rclb
sbb
ret
cmp
inc
push
pop
mov
cmp
cmpsl
aam
mov
hlt
loop
jmp
pop
sbb
adc
or
sbb
into
nopl
hlt
mov
mov
testb
jl
and
push
ret
rcrl
mov
xchg
ds
push
jl
pop
cmp
and
add
rcl
inc
subb
inc
add
cld
sbb
push
test
push
hlt
inc
sub
fidivl
std
jbe
sub
roll
adc
test
loopne
mov
sub
sub
mov
jmp
scas
push
out
inc
into
roll
imul
aas
dec
xor
sbb
push
lret
arpl
sbb
mov
mov
push
push
inc
push
and
nop
enter
fimull
pop
mov
shll
dec
cltd
jge
int3
imulb
mov
inc
dec
push
inc
xchg
adc
xchg
cmp
pop
mov
mov
dec
flds
sub
mov
mov
scas
stos
repz
insl
dec
movsl
in
push
push
cmp
std
pop
push
cld
cli
stc
cmp
xor
fcmovbe
mov
or
pop
aas
sub
inc
inc
cmpsl
sahf
jmp
push
int
shrl
fisttpll
jne
pop
pop
orb
jg
dec
and
mov
push
das
daa
jge
aas
push
pusha
fldt
mov
inc
sbb
mov
cmp
lds
or
lret
pop
lock
and
pushl
jg
mov
add
sbb
lods
jp
xchg
cmc
sub
mov
push
sub
adc
push
in
das
pop
popa
push
push
push
cmpsb
adc
jecxz
rorl
mov
std
xlat
out
int3
out
pop
pop
mov
inc
mov
iret
outsb
xor
add
mov
icebp
out
std
xor
scas
or
mov
cmpsl
movsb
loop
and
scas
cwtl
and
add
xlat
xchg
or
dec
and
push
push
mov
pop
fs
mov
jge
ljmp
push
lock
out
in
movsb
rorl
dec
rcll
repz
fiaddl
xchg
mov
mov
les
outsb
jle
xchg
lcall
fs
jns
push
sub
jo
add
mov
add
loopne
push
insl
xorl
sub
push
jecxz
add
insl
pop
mov
mov
arpl
jbe
mov
add
into
mov
jg
in
adc
bound
jmp
push
cltd
lahf
pop
rorl
or
xchg
hlt
sub
mov
xchg
inc
lcall
imul
jge
push
out
dec
js
lret
cltd
jae
mov
and
pop
push
jp
sub
push
fsubs
sbb
js
cltd
cmp
testb
pop
push
inc
out
cs
xchg
sub
or
scas
sub
icebp
imul
pop
mov
cld
fmul
mov
mov
mov
lret
popa
sbb
xchg
push
and
mov
xor
add
in
jbe
cmp
xchg
inc
inc
sub
xor
jbe
icebp
sbb
call
push
ud2
popa
mov
cmp
imul
jbe
imul
sub
jp
jg
cvtpi2ps
movsb
out
lock
sbb
xlat
cwtl
imul
push
mov
inc
stos
ret
adc
lods
cmp
and
add
xchg
adc
mov
jl
int
inc
bound
mov
xor
sahf
fldl
xorb
cmp
mov
lahf
lret
adc
out
mov
stos
xorl
adc
test
int3
jl
jo
sub
enter
shlb
stc
je,pt
decl
lds
mov
add
dec
xchg
push
fsub
imul
frndint
int
sub
orb
mov
aam
out
repnz
adc
or
adc
out
sbb
push
fisttpll
imul
jno
mov
lret
and
mov
sub
lret
jno
cmc
mov
arpl
ja
lock
cld
cmp
outsl
pusha
gs
insb
sub
pop
es
iret
mov
push
movsb
sbb
clc
xchg
int
rcll
int
lcall
fmul
adc
jg
aam
or
lret
add
loope
leave
mov
je
orb
mov
cwtl
fs
mov
cmpsl
ret
mov
pop
adc
xor
and
and
adc
stos
cli
mov
bound
popa
xor
dec
mov
cmp
jp
hlt
scas
mov
test
sub
sbb
adcl
cmp
jbe
xlat
sub
insl
mov
neg
nop
enter
mov
and
sahf
test
dec
shll
and
mov
mov
cmp
jge
outsl
xlat
xlat
clc
or
pop
push
xor
cmp
xor
outsl
arpl
mov
repz
lcall
ret
daa
in
movsl
test
inc
push
outsl
inc
xchg
mov
daa
and
js
daa
in
test
jbe
outsb
and
pop
lock
shll
loopne
sub
clc
jecxz
sbb
cmpsb
out
arpl
dec
or
cltd
leave
adc
lock
xor
out
mov
mov
cmp
mov
adc
daa
lea
sbbb
fdiv
out
jbe
test
pop
ret
dec
rorb
dec
mov
adcl
dec
je
fdivr
cmp
jbe
mov
sarl
outsb
and
addr16
xlat
daa
pop
ja
mov
cld
shr
adc
inc
ja
subb
rorl
pop
dec
fnstsw
xor
icebp
mulb
push
shrl
sbb
fstpt
lds
mov
inc
push
xchg
sub
int
fistpll
push
pop
gs
shll
lret
ret
cs
lock
arpl
addr16
pop
sub
ret
push
jl
dec
daa
mov
jo
mov
pop
xchg
xchg
bound
in
mov
xor
dec
notb
or
push
pop
dec
and
sbb
les
pop
inc
cmp
xor
mov
adc
dec
push
je
mov
leave
jg
mov
fldcw
imul
push
xor
cmp
out
push
hlt
dec
insb
sbb
xchg
arpl
dec
repz
insb
cmpsl
xchg
mov
push
push
test
enter
pushf
jp
fxam
push
inc
cwtl
pop
pop
popa
jns
mov
lods
icebp
bnd
lret
fisttps
adc
test
sbb
or
mov
imul
add
push
loope
jns
mov
test
pandn
add
gs
mov
or
jle
pop
mov
push
inc
and
gs
mov
clc
lcall
jno
jp
xchg
mov
adc
mov
sbb
sarl
scas
pminub
mov
lock
jecxz
and
pop
mov
lahf
stc
call
add
in
in
sbb
add
pushf
sbb
hlt
cmpsl
sbb
fimuls
cwtl
loop
mov
rorb
in
aad
movsb
stos
fiaddl
jae
push
or
enter
test
dec
sbb
and
out
shl
js
int
mov
in
fs
and
popf
sbb
xchg
adc
out
sahf
ret
loop
aam
fs
pop
js
inc
mov
incl
das
lahf
enter
pop
and
shlb
pop
test
adc
ja
scas
mov
out
push
push
imul
add
icebp
sbb
push
addr16
scas
pop
outsb
clc
pop
adc
or
sbb
cmp
inc
sbb
jmp
stc
movsb
xchg
mov
test
je
mov
shrl
icebp
call
mov
call
and
imul
fidivrl
out
pop
stos
ss
xchg
xor
xchg
dec
mov
incl
cltd
pop
pop
jg
sbb
push
mov
sub
fcoml
out
push
pusha
mov
mov
mov
jae
sbb
jmp
fimull
addr16
adc
and
mov
mov
ds
data16
imul
sub
push
cmp
xchg
es
push
jo
adc
clc
xchg
xchg
dec
cmp
jp
mov
data16
sbb
test
inc
decb
mov
adc
shr
je
xchg
cwtl
cmpsb
and
and
mov
daa
fs
add
xlat
dec
stc
je
or
stos
mov
xchg
test
in
fmuls
push
ret
xchg
mov
imul
mov
stos
jns
cmp
enter
dec
int
lret
outsb
jle
add
stos
jae
leave
xchg
add
ret
call
movl
adc
sahf
shll
sub
stos
je
jb
out
roll
add
das
mov
cmc
push
sti
push
jg
jo
repz
mov
andb
pop
inc
push
add
mov
aam
scas
aam
movsb
cmpsl
push
push
cmp
call
add
sbb
inc
lea
out
je
out
add
push
mov
les
sub
xor
daa
mov
and
popa
sti
in
enter
loopne
inc
test
or
and
xor
aas
out
scas
pop
fadds
and
imulb
push
jo
or
mov
lahf
xchg
stos
cmp
sub
jg
and
mov
daa
dec
popf
sbb
push
test
jnp
leave
divb
mov
lods
js
xor
sbb
mov
lock
push
or
jnp
pop
popa
pop
xchg
es
scas
mov
test
push
push
push
adc
jns
xor
xchg
inc
or
nop
inc
sub
lds
out
xchg
test
xor
out
mov
adc
mov
fnstcw
pop
out
add
nop
frstor
xchg
daa
mov
dec
pop
leave
subb
call
cmp
shr
fmull
test
sub
aam
fidivrl
xchg
pop
ljmp
jmp
and
pushf
enter
sub
std
cwtl
shlb
sub
scas
sub
fnstsw
outsl
pop
adc
enter
bnd
jmp
popf
pop
dec
aaa
mov
mov
das
fstpl
mov
push
jg
sti
mov
mov
jp
sarl
adc
insb
sub
cmp
mov
into
es
mov
xlat
pop
repnz
inc
es
fdivrs
mov
jecxz
pop
js
cmpsb
mov
es
movsl
lcall
pop
xchg
ja
add
cmp
mov
inc
lods
xchg
pop
sbb
cmp
mov
into
cmp
or
pop
and
mov
cli
rcrb
mov
jle
imul
repz
push
or
xlat
jl
add
mov
mov
sar
cwtl
sbb
xchg
jo
sti
or
or
icebp
dec
cli
fidivl
gs
adc
and
mov
call
pop
insb
jo
lret
push
ds
inc
mov
rcrb
leave
adc
js
mov
adc
mov
cmpsl
and
mov
dec
movsb
cli
clc
aam
inc
shll
cltd
nop
ja
mov
gs
mov
cmp
in
out
mov
ud0
mov
jecxz
add
int
ja
inc
dec
xlat
inc
pop
in
push
jp
movsb
xchg
hlt
xor
repnz
add
and
dec
pushf
add
pusha
inc
fldenv
addl
lock
mov
iret
movl
mov
bnd
clc
jl
and
test
loope
idiv
dec
std
push
xor
push
and
int3
and
pop
pop
fdivl
dec
fmuls
push
js
lret
sbb
leave
dec
aam
inc
repnz
dec
jbe
hlt
test
or
ficomps
cmp
lock
fdivrs
lret
inc
repz
cmp
xchg
jmp
pop
push
data16
ja
push
mov
push
add
xor
stos
jmp
fists
add
mov
push
push
sbb
lds
fwait
icebp
insl
scas
imul
jae
bound
mov
jae
pop
adc
dec
adc
add
and
jle
fisubrs
mov
in
xor
pushf
adc
outsl
and
imul
add
fs
jge
jnp
mov
mov
xchg
ljmp
fistpl
add
or
xchg
cmp
imul
jecxz
subb
dec
sarb
mov
xchg
push
inc
aas
inc
add
cmpsb
cmp
pop
lret
mov
mov
push
or
fldenv
dec
xchg
mov
push
pop
adc
pop
jmp
inc
mov
test
xor
lods
pop
lcall
shrb
out
pop
add
mov
pop
scas
or
lock
mov
sub
sbb
add
jns
es
popa
xchg
rcrl
push
test
aad
jb
js
pop
adc
cmp
mov
int
mov
lock
scas
sub
pop
cmpsl
and
cmp
das
addb
aaa
dec
mov
cmpsb
inc
pushf
fsubl
fnstsw
or
std
pop
sub
mov
rcrb
popf
or
mov
pop
mov
and
scas
mov
xor
gs
xchg
xchg
push
cmp
dec
shll
mov
adc
out
loope
rorb
loope
cwtl
inc
decb
or
ret
cli
inc
in
enter
dec
xor
adc
shlb
cld
sub
shll
pop
xor
mov
xchg
fstl
mov
xchg
cltd
sbb
jmp
sbb
and
dec
add
jl
mov
leave
add
pusha
cmp
push
xchg
or
lret
add
jbe
xorb
and
pusha
cld
jb
ficoms
mov
cmp
dec
mov
decl
jl
loop
cltd
mov
xor
imul
repz
into
insl
hlt
fs
sub
dec
call
xor
push
sbb
ljmp
pop
aaa
frstor
sti
xchg
xchg
aad
test
icebp
lret
imul
jne
cmp
popa
jecxz
mov
movl
andb
clc
mov
cmpsl
nop
push
addr16
jg
out
or
mov
adc
adc
test
push
fnstsw
push
xchg
clc
mov
jmp
arpl
mov
iret
mov
mov
pop
sub
daa
jbe
inc
es
jle
repz
shll
inc
repz
add
out
push
loope
jno
outsb
fsubrs
push
sub
sub
test
sbb
mov
repnz
enter
sti
or
fdivr
add
cli
insb
adc
mov
leave
pop
adc
movsl
mov
add
iret
mov
dec
push
cmp
dec
and
les
je
sub
jns
mov
ret
xchg
xchg
mov
mov
movsb
sub
push
adc
cmp
ss
jp
icebp
addr16
aam
ja
pop
aaa
outsl
test
in
cmpsl
add
mov
addr16
xchg
jp
aad
iret
push
sub
mov
jecxz
xchg
jecxz
into
sbb
pop
push
dec
jecxz
out
push
sti
sbb
or
lea
mov
sub
popf
sub
jg
pop
push
push
xchg
ljmpw
adc
out
inc
lcall
movsl
mov
cmpl
pop
js
add
xor
sbb
cli
mov
out
bound
mov
add
outsl
ds
aaa
loope
mov
js
nop
aaa
je
stos
pop
jbe
es
stc
insb
pop
jl
icebp
movsb
xchg
es
lods
repnz
scas
mov
jae
mov
sub
lock
in
cmp
leave
mov
adc
ds
daa
imul
les
jg
movsl
inc
mov
repnz
fsubl
jp
pop
negb
or
sti
mov
iret
fcmovu
add
xchg
jne
inc
jne
or
gs
pop
mov
pusha
pop
int
out
cltd
mov
mov
fldcw
shlb
rcl
scas
pop
std
inc
popa
and
xchg
insl
push
shlb
mov
cmp
fcoms
jecxz
pop
push
mov
cltd
rorb
cwtl
movsl
in
and
out
out
xchg
jno
mov
insb
ss
sbb
imul
loope
pushf
pop
mov
dec
push
insl
call
aas
sub
repz
add
movsl
fsubrl
dec
test
adc
pop
nop
sub
push
cltd
incb
inc
leave
enter
and
adc
cmp
and
into
mov
mov
scas
popa
into
push
jp
in
gs
mov
icebp
ret
daa
rorb
push
std
add
in
xorl
outsl
andb
mov
rorl
cltd
add
inc
test
std
clc
xor
mov
pop
lods
icebp
cmc
sbb
cmpsb
and
mov
mov
sar
enter
adc
pop
xchg
int
into
dec
scas
and
dec
xchg
loope
jge
cmp
mov
push
cmp
xorl
test
leave
push
jg
dec
enter
or
sbb
shlb
mov
in
in
inc
rcrl
scas
incl
mov
imul
out
out
ds
sbb
mov
ret
push
fsubrl
push
sti
pusha
stos
int
add
popa
outsb
push
inc
mov
inc
jne
out
inc
adc
and
sti
push
ret
ret
shrl
mov
test
cmpsb
int
imul
pusha
pop
ja
aas
xchg
jns
enter
mulb
test
mov
and
iret
mov
jnp
push
mov
pop
mov
js
xor
jnp
das
das
daa
adc
cmp
imul
xchg
sbb
movsl
out
xor
sahf
xchg
or
jge
loop
sub
pop
add
daa
pop
add
das
lret
test
and
mov
addl
orb
dec
pop
aaa
or
mov
in
pop
jbe
push
push
cmpb
int
call
and
xchg
sarb
insb
mov
fdivr
sbb
in
and
stos
and
jp
add
or
xchg
mov
ljmp
xlat
mov
lods
and
mov
and
aaa
mov
xchg
icebp
or
fisubl
daa
pop
fdivp
daa
jns
enter
mov
fbld
dec
inc
mov
mov
imul
sbb
int
cli
test
rorl
xor
cmp
add
shr
mov
lods
outsl
lea
sbb
aaa
or
mov
xor
into
adc
loop
roll
mov
adc
jg
jg
repz
xor
rorb
sbb
mov
loopne
xor
mov
int
dec
aas
loopne
leave
cmc
gs
push
jg
pop
add
and
aaa
inc
in
jae
pop
jbe
fisttpl
dec
push
pop
and
jecxz
adc
lock
mov
fwait
data16
dec
pop
mov
push
push
add
and
jns
stos
push
aam
xchg
fiadds
scas
out
lret
mov
cmp
mov
push
ss
pop
data16
enter
lret
xchg
mov
mov
mov
sub
notb
xchg
lods
shrb
imul
mov
loopne
mov
jne
add
aaa
sbb
stc
pop
xchg
sbb
lock
icebp
xorl
or
dec
out
out
loop
movsl
mov
or
out
xor
jge
adc
out
das
xor
in
or
mov
in
ja
nop
adc
fs
insb
repz
sub
lods
shlb
lret
xor
sub
sbb
or
popa
jnp
add
cmp
fstpt
jp
inc
cmp
dec
jg
rolb
push
jmp
xchg
int
jae
lea
push
popf
pop
int3
mov
popf
or
movsl
push
pop
hlt
lahf
or
in
aas
into
pop
xor
push
cs
mov
mov
fisttpll
xchg
clc
call
adc
inc
fisubrl
js
push
test
test
sub
or
mov
pushf
xchg
lods
fbld
fwait
xor
jnp
orb
mov
cltd
dec
popf
into
mov
xchg
test
dec
and
mov
fstpt
add
cltd
xchg
jns
je
ret
mov
idivb
imul
inc
out
dec
push
or
add
jne
push
scas
jl
iret
and
lret
pop
sbb
cmpsb
pop
inc
and
fidivrl
push
lahf
dec
pop
mov
pop
movsb
cmp
adc
fwait
add
mov
xor
es
sarb
nopl
mov
jge
and
and
jp
mov
or
pop
add
mov
jge
inc
push
xor
cvtps2pi
mov
cld
inc
icebp
js
push
test
add
push
jmp
jne
xor
pop
push
mov
cmp
mov
loop
or
mov
movsb
jb
or
call
lcall
frstor
sub
dec
xchg
lods
sub
fstpl
test
push
jg
in
jno
sub
xor
mov
or
or
js
dec
push
push
and
test
mov
or
dec
push
adc
inc
repz
dec
fwait
and
mov
xor
push
inc
lahf
in
fistpll
or
js
mov
sarl
jle
cwtl
push
mov
repz
mov
jge
jmp
adcl
fwait
lret
movsl
orl
es
pop
je
add
dec
push
xor
in
xor
adc
jmp
enter
lock
sti
test
lock
sbb
es
out
or
inc
daa
out
or
mov
and
and
or
lea
imul
xchg
mov
mov
xor
mov
inc
mov
xchg
mov
je
dec
jecxz
cmpl
loope
aas
aad
cmc
mov
je
jo
mov
jmp
dec
xchg
pusha
inc
insb
fistps
cltd
mov
push
cmc
sahf
add
cmp
mov
fcomip
push
addr16
sbb
cmp
and
push
mov
dec
scas
cmp
into
stos
adc
adc
pop
lock
inc
sbb
and
mov
inc
loop
dec
andb
inc
pusha
dec
jb
hlt
aam
and
sbb
lock
and
inc
lods
daa
add
xchg
aam
jbe
push
pop
push
movsb
dec
sub
test
adc
daa
cmpsl
mov
and
call
imulb
xchg
out
xor
mov
xchg
mov
in
mov
insl
dec
push
xchg
jo
out
pop
push
ret
or
test
fists
push
call
pop
stc
icebp
and
jecxz
mov
in
add
dec
jmp
cmpb
xchg
int
jmp
mov
mov
mov
or
test
xor
fidivrl
push
mov
bound
arpl
sbb
mov
mov
clc
aaa
divl
mov
stc
push
pop
out
sahf
lock
ljmp
push
mov
scas
dec
adc
push
fwait
lahf
rorb
idivl
sbb
xor
clc
sbbl
and
jmp
xchg
push
push
movsl
ss
mov
mov
push
arpl
dec
dec
mov
sbb
pop
xor
out
repnz
int
imul
jno
pusha
jo
or
nop
mov
pminsw
hlt
jp
fildl
or
loope
fs
fisubs
incl
inc
mov
add
dec
std
out
sbb
or
scas
push
data16
leave
fwait
in
pop
jp
hlt
cli
test
add
dec
inc
jl
out
xor
pusha
ja
push
mov
fnstenv
add
cmp
push
xchg
pushf
jns
and
aam
pushl
enter
mov
out
lea
jp
xchg
vsqrtss
xlat
jno
std
ljmp
or
pop
add
and
fnstcw
inc
xchg
adc
mov
and
fdivl
arpl
sbb
pop
stc
test
les
ljmp
or
push
mov
push
sbb
inc
add
and
jge
test
push
out
adc
xchg
adc
pop
lods
mov
sub
popf
testl
repnz
aad
cmpsb
xor
xor
enter
pop
stos
sbb
sbb
pop
mov
clc
test
es
cmp
aas
mov
xor
pop
pushf
insb
hlt
mov
jno
sahf
enter
subb
jnp
mov
or
fisttpl
cmpsb
sarb
nop
jo
fwait
in
mov
js
mov
addb
xor
divb
or
pushf
lret
sahf
sub
fst
push
out
push
test
sub
lcall
or
je
and
cli
testl
jb
ficoms
push
icebp
pop
scas
sub
jnp
pop
xor
xchg
xor
arpl
mov
inc
das
push
stc
inc
jb
icebp
sarl
cmp
dec
jae
cld
movsb
stos
sub
shll
mov
dec
adc
add
sub
mov
sub
adc
stos
fisttpll
xchg
adc
and
lcall
pop
out
cs
pop
sbbl
sub
jle
xchg
xchg
add
or
mov
inc
mov
inc
out
push
movsl
outsl
daa
xchg
adc
jmp
jp
cmp
lcall
sbb
hlt
mov
int3
clc
jmp
and
sti
fsubrs
in
cmc
dec
scas
lcall
mov
testb
push
ss
insb
cmp
pop
and
or
insl
pushf
pusha
xchg
sub
sbbb
jg
cmp
pop
pop
inc
sub
add
inc
fldcw
sbb
cmpsb
lea
xchg
test
loopne
adc
sub
adc
pop
std
pop
push
pop
fldl
mov
sub
test
scas
scas
mov
pop
pop
xor
mulb
mov
stos
add
push
dec
ljmp
mov
fs
rcl
lods
mov
ja
fistpl
jo
test
ljmp
xor
inc
sbb
sub
pop
mov
gs
mov
or
test
xor
jns
out
sar
dec
je
mov
add
gs
inc
cmpsb
outsb
and
dec
call
jno
mov
adc
xchg
popf
add
mov
pop
pop
cmp
pop
ljmp
dec
push
sbb
int
sbb
inc
jnp
cmp
sub
xor
pop
dec
xlat
inc
adc
mov
mov
mov
mov
xchg
fstl
adc
xchg
xor
scas
shlb
pop
pusha
xorl
std
leave
dec
aam
test
jle
mov
in
inc
imul
add
mov
mov
mov
sub
test
shrb
mov
pop
pop
lcall
dec
inc
sub
mov
jecxz
xchg
mov
les
ficomps
xor
or
adc
lahf
outsl
mov
stc
stos
mov
push
lock
test
int3
mov
xor
mulb
cmp
sbb
adc
push
fcoml
adc
xchg
jecxz
hlt
xchg
ror
jle
and
leave
adc
fsts
cmp
in
test
insb
fnsave
jne
cs
into
cmpsb
dec
xchg
dec
insl
mov
stc
dec
mov
xor
pusha
add
jno
mov
jge
pop
xor
jl
rcr
add
test
mov
adc
mov
test
enter
add
mov
and
jge
and
and
mov
cmp
jmp
mov
lahf
sbb
add
jae
push
je
sub
test
adc
popf
mov
or
out
xor
test
cld
scas
bound
adc
sbb
xor
adc
xchg
xor
jmp
call
sbb
jmp
dec
jns
pop
sub
test
add
rcr
test
in
push
aad
loop
div
nop
cmpsl
loope
inc
fadds
dec
iret
jecxz
sub
jbe
into
test
sub
sbb
aad
inc
mov
pop
lds
push
push
xlat
add
fists
ds
sbb
ficomps
pop
lcall
aam
popl
jle
xor
sti
lods
pusha
neg
cwtl
scas
int
lock
out
mov
and
fsubs
loop
inc
ja
lods
sub
pushf
adc
pop
ljmp
pop
ljmp
pop
or
lahf
imul
faddl
or
xorb
mov
pushf
fsts
cmpsb
dec
or
sti
push
xor
or
pop
lret
jmp
je
xchg
sti
loopne,pn
in
dec
and
out
or
fs
mov
in
or
push
mov
dec
pop
jle
lods
mov
xchg
stc
das
int3
das
inc
cmp
scas
cmp
pop
syscall
or
stc
pslld
pushl
pusha
xor
imul
lret
add
andl
xchg
hlt
xor
cs
pop
arpl
outsb
sbb
jae
and
xor
sbb
jnp
pop
sarl
dec
xor
das
pop
sub
push
mov
xor
stos
jne
les
fcoml
test
cltd
jnp
mov
jns
push
mov
sub
jo
dec
jl
mov
mov
out
fidivrs
std
stos
jb
stos
loop
push
les
pop
in
aad
int
cmp
int
mov
inc
mov
adc
add
dec
cmp
adc
repz
es
insl
add
lock
cmp
mov
pushf
es
mov
neg
daa
aaa
dec
or
xchg
inc
pop
cli
lods
outsl
nop
inc
push
cmp
into
sub
addr16
mov
aas
repz
or
mov
aad
sbb
lds
adc
mov
dec
aad
sub
sahf
xchg
mov
cmpsl
mov
xlat
push
sti
sub
aas
push
sarl
pushf
xchg
icebp
mov
mov
fucomp
leave
push
movsb
dec
push
mov
push
cwtl
jns
mov
dec
mov
sahf
shr
dec
push
ds
and
sub
testb
xor
data16
lahf
test
adc
ffree
hlt
sbb
lods
sti
sahf
cli
loop
dec
mov
je
pop
cmp
std
mov
push
pop
and
dec
push
cltd
sub
cmc
ja
lods
sbb
sub
in
scas
xlat
mov
dec
and
jecxz
cmp
cmp
fwait
add
xchg
adc
add
stos
sbb
dec
into
stos
repz
fdivr
pop
data16
inc
sbb
pop
sbb
clc
push
outsl
or
push
ja
outsl
seta
movsb
out
fcmovnb
mov
ja
and
push
inc
mov
mov
adcl
sub
dec
or
fldcw
ja
dec
std
jmp
push
je
inc
adc
insl
jecxz
xor
aaa
pop
bound
jmp
lock
ret
call
push
fldl
push
lods
loope
push
xor
add
pushl
aaa
sub
xchg
hlt
fldcw
dec
les
scas
scas
sti
xor
inc
sub
les
xor
imul
aam
sahf
in
sbb
add
mov
shlb
leave
and
adc
or
in
cmp
lret
nop
out
mov
insl
and
pop
in
inc
dec
fwait
mov
xchg
mov
hlt
mov
into
lret
sbb
adc
pop
dec
das
loopne
stc
xor
mov
in
mov
fnstenv
arpl
scas
cmp
or
pop
dec
popa
out
mov
dec
rcr
mov
xor
cwtl
mov
test
imul
pushf
daa
cmp
movsb
pop
push
and
or
pop
aaa
inc
out
xchg
jmp
jecxz
arpl
iret
rcll
repnz
lret
cmp
mov
jl
int3
xchg
mul
pop
aad
jnp
out
stos
add
aas
in
fwait
jb
adc
iret
incb
lods
sbb
lahf
or
bound
or
sbb
and
and
jbe
pop
inc
push
aad
pushf
mov
cmp
jmp
lahf
inc
or
nop
xchg
cmc
call
or
mov
pop
cmp
out
fldenv
scas
sti
bound
push
aaa
pop
jl
jmp
jb
inc
jmp
xlat
imul
mov
inc
fmulp
jmp
xchg
xchg
add
pop
imul
pop
jns
xchg
outsl
sbb
sbb
mov
mov
mov
sbb
ds
jl
sub
jmp
xchg
sub
stc
inc
repnz
hlt
push
test
jmp
cs
insb
add
adc
test
das
mov
mov
out
mov
popa
cli
add
cmp
repnz
jae
out
mull
aaa
aas
mov
ja
push
add
sbbl
pop
or
dec
mov
cmp
add
dec
mov
pop
repz
aam
std
xchg
mov
cmp
add
dec
xlat
pusha
mov
push
sbb
jo
dec
cltd
jg
inc
push
pushf
les
daa
and
stos
cmc
add
adc
jmp
adc
ficoml
cwtl
divb
imul
imul
into
sub
mov
or
lahf
or
movsl
xor
or
mov
or
loopne
push
jne
pop
push
out
cli
pusha
mov
mov
xchg
mov
adc
int3
inc
inc
xor
idiv
mov
xchg
outsb
sub
lock
imul
jmp
cli
leave
add
or
call
xor
subl
lock
xor
push
shll
cmpl
ffree
xchg
clc
imul
xchg
dec
arpl
sbb
fs
xchg
lods
mov
jg
rcrb
pop
lds
inc
push
cmp
lods
or
jbe
fnstsw
iret
cmp
lds
movsl
daa
xor
shlb
xchg
pop
xchg
mov
and
out
aaa
cld
xor
scas
and
in
mov
in
ja
out
mov
into
imul
popa
fisubl
lret
push
stos
mov
mov
sub
mov
dec
mov
or
xchg
in
sarl
sub
jbe
imul
or
jl
test
jae
imul
popaw
jb
negb
jne
jmp
rclb
scas
incl
mov
in
mov
jecxz
sub
jns
roll
sti
pusha
jns
mov
cltd
pop
hlt
inc
push
xlat
lea
jo
sub
lcall
subl
adc
dec
fidivl
mov
je
sbb
xchg
ja
in
mov
lods
push
mov
ret
or
inc
and
pop
lods
sbb
dec
inc
xor
push
out
imul
pop
mov
mov
cmp
jle
les
sub
lock
cmp
and
xor
jno
xor
dec
stos
cli
cmp
popa
pop
pop
xor
push
ret
xchg
call
pop
push
sbb
inc
xorl
and
sti
xchg
testl
or
lcall
xlat
jbe
jb
nop
mov
push
xchg
jp
sub
push
addr16
sahf
dec
and
bound
mov
sub
iret
and
add
ficompl
mov
push
mov
daa
adc
xorl
and
cmpsl
or
fldt
sbb
and
cmc
scas
xchg
iret
int
xchg
sbb
fwait
xor
jns
into
cld
fsubrs
ret
pop
scas
lock
sbb
das
push
push
add
mov
pop
loop
xchg
sub
lahf
push
test
or
mov
mov
and
decl
sub
lea
insb
pop
test
cmpsl
xchg
xlat
div
test
sub
push
jne
es
push
adc
in
pop
or
mov
xor
fisttpl
sti
or
sbb
mov
inc
rcrb
mov
lcall
stos
outsb
add
mov
mov
mov
leave
dec
fmull
aam
add
ljmp
fisttpll
fistl
popf
notl
pop
dec
xor
and
xchg
or
xchg
sbb
push
sub
adc
fsts
lods
ret
add
leave
mov
sbb
cwtl
push
push
movsb
loope
call
and
sahf
jecxz
dec
cmp
jp
push
or
sub
dec
pop
cmp
add
push
mov
stos
into
adcb
pop
mov
test
mov
add
int
xchg
imul
loop
add
or
adc
sti
mov
mov
ret
dec
das
mov
or
mov
js
mov
aad
loopne
xchg
enter
insl
rol
and
mov
lods
ja
and
lds
jb
sahf
out
aas
mov
inc
or
mov
aaa
imul
dec
cli
call
inc
lret
popf
add
jp
call
xor
xchg
int
add
cmp
packuswb
add
mov
in
loope
jl
inc
mov
push
inc
test
les
xor
sarb
loope
lods
inc
dec
push
test
add
xchg
cmpsl
mov
pusha
xchg
cmp
push
sarl
inc
xor
das
daa
pop
push
dec
std
fwait
xor
jle
xchg
mov
jmp
push
daa
imul
xchg
mov
push
push
add
out
xchg
movsb
add
xchg
sahf
adc
adc
fs
pop
cmp
dec
push
ja
imul
add
sti
int3
dec
mov
sbb
cmp
push
insl
sbb
imul
inc
mov
xchg
pop
hlt
jl
jp
push
imul
std
xor
adcb
or
jmp
or
xlat
mov
mov
out
adc
shrb
out
sub
xchg
lods
andb
rolb
mov
jno
divl
stc
scas
ret
xchg
leave
popa
adcb
xchg
loop
in
mov
test
sar
into
inc
outsl
push
jo
lret
mov
cltd
jp
xchg
dec
add
stc
dec
gs
lods
icebp
in
add
mov
mov
in
mov
mov
xchg
add
jl
inc
pusha
dec
out
sub
scas
inc
cwtl
mov
cmpsl
insl
xor
fstpt
dec
pusha
insb
imul
mov
add
shrl
lret
mov
mov
jg
out
fildll
pop
mov
jecxz
je
inc
sub
gs
insl
fcomi
daa
mov
jecxz
pusha
sti
test
outsb
in
lods
outsb
and
pop
outsb
nop
int
dec
cmp
push
xchg
pop
xor
mov
rol
push
lods
dec
and
clc
scas
jmp
mov
push
scas
sbb
lods
xor
mov
jge
xchg
fwait
out
mov
insb
lods
inc
cmpsl
inc
daa
sbb
sub
daa
sar
xor
dec
xor
xchg
aam
cmp
out
test
cmp
cwtl
cmp
jge
ret
mov
das
add
cmpsb
dec
out
stos
pop
dec
lahf
adc
loopne
sbb
jle
js
dec
dec
bound
cwtl
jne
jo
dec
cmp
leave
addr16
and
xor
neg
mov
jns
dec
jb
lcall
icebp
insb
lahf
pop
jae
ret
popf
das
jmp
jb
sub
push
mov
out
and
inc
mov
test
in
push
pushf
clc
mov
cltd
pushf
adc
fsubr
mov
sub
ffree
dec
fiaddl
mov
call
arpl
xchg
mov
in
mov
test
push
mov
dec
cmp
cmpxchg
mov
inc
lret
cli
adc
push
insl
cld
sarb
adc
out
dec
xor
mov
push
jns
and
jp
add
jle
jecxz
dec
pop
fistl
insb
sbb
stc
add
pop
add
sahf
sub
add
lods
sub
leave
bound
fimuls
cmp
in
sub
pusha
aad
stos
sub
out
imul
and
xchg
pop
add
cmp
repnz
mov
mov
adc
sub
pop
and
movsl
xchg
add
lcall
das
seta
jp
xchg
sub
ljmp
testl
out
cmp
xor
mov
xor
fimuls
pop
rcl
push
pop
fiaddl
cli
mov
stos
nop
mov
mov
or
cmp
sbbb
in
pop
push
bound
mov
out
mov
sub
and
or
pop
lods
aad
sbb
scas
inc
mov
test
lahf
insb
push
xchg
sahf
icebp
sbb
out
testb
std
iret
popa
out
out
dec
mov
dec
mov
rorb
ds
aad
xor
sub
fcompl
and
mov
ja
sbb
cmp
bound
fs
sub
sub
mov
add
dec
mov
cmp
jne
push
inc
or
pushf
sarl
and
mov
mov
inc
test
notl
in
js
push
int3
push
fcmovb
js
outsb
cmc
int
stc
mov
stos
stos
push
adc
sti
push
dec
mov
cmpsb
sub
ja
enter
repnz
mov
lock
pop
add
or
push
cltd
push
clc
test
into
neg
rcl
lods
push
cmp
xchg
cmpsl
test
cli
insb
mov
inc
push
inc
out
cli
adc
sub
jg
xor
mov
clc
ds
repnz
dec
sub
sbb
cwtl
testl
xchg
addr16
out
dec
fwait
call
inc
or
sbb
aas
cmp
push
daa
push
sbb
stos
sti
mov
push
mov
rcl
cmp
loope
adc
dec
repz
mov
cmp
xchg
pop
push
cmp
es
xchg
adc
pop
roll
outsl
bound
cmp
lock
into
out
mov
mov
mov
mov
xor
pop
call
xchg
das
mov
in
je
xor
inc
add
jecxz
insb
and
or
data16
cld
push
jmp
leave
in
jmp
lock
int
shll
sub
push
shl
call
fistpll
out
iret
sbb
and
rolb
inc
cmovnp
push
xchg
into
and
and
adcb
ljmp
add
cmp
sahf
sarl
jmp
ja
inc
sbb
pusha
push
add
inc
lea
pop
mov
cmc
push
loopne
out
aam
push
xchg
add
out
adc
pop
inc
insl
xchg
jg
jl
shrb
dec
std
imul
bnd
jno
dec
leave
or
xor
adc
mov
mov
roll
rolb
jne
mov
cwtl
fdivrs
mov
xchg
jnp
add
inc
mov
and
nop
cmp
cwtl
cmp
ds
pop
jle
sub
in
data16
sub
cmp
xchg
mov
mov
stc
mov
ret
out
cmp
xor
sub
imulb
mov
sahf
xchg
and
daa
loop
insl
push
ljmp
loopne
adc
xlat
movsl
sbb
add
sbb
idiv
leave
sbb
sbb
or
push
inc
test
outsl
mov
add
pop
dec
mov
in
shl
xorl
pop
shlb
repnz
add
sbb
xchg
pop
or
mov
lock
dec
hlt
mov
lcall
adc
cwtl
push
outsb
and
clc
jnp
je
cld
mov
imul
pop
popf
lock
xorb
out
and
mov
test
test
and
fists
dec
imul
pop
mov
leave
fs
call
mov
mov
jmp
addr16
mov
out
mov
cmpsl
inc
movl
add
out
and
add
inc
xchg
sub
jns
cmp
mov
xor
sub
mov
and
or
shll
mov
sub
cmp
jp
das
cmp
fadd
push
test
rorb
push
loope
jnp
mov
add
sbb
xchg
adc
inc
scas
push
jl
cmp
dec
mov
push
push
adc
inc
jno
xchg
mov
or
sub
xor
data16
lahf
pop
test
test
or
push
jge
in
cltd
sub
imul
fcoml
sti
ljmp
xchg
add
cmp
jge
int3
xlat
mov
gs
je
adc
push
lcall
sbb
push
dec
dec
sbb
out
push
test
xchg
lcall
iret
adc
mov
push
xor
insl
lcall
dec
fmuls
jg
inc
jne
in
ljmp
call
incb
or
out
ds
mov
mov
imul
adc
and
fiaddl
inc
out
adc
inc
repnz
div
sub
fldl
scas
push
pop
lods
adc
loope
mov
jno
xchg
jg
enter
addl
xchg
int3
arpl
pop
mov
cmp
cmp
inc
and
cs
aaa
adc
jnp
jne
mov
jae
jbe
pop
shll
out
cwtl
mov
xchg
notl
repnz
cwtl
push
xchg
into
jno
int3
push
out
cmp
pop
pop
and
jns
add
cmp
fs
in
add
loope
mov
inc
pop
lahf
leave
sub
lahf
and
mov
lods
or
cmp
pushf
clc
sbb
push
aam
mov
pop
push
jns
sarl
pop
sbb
popa
cmpsb
xchg
pop
mov
movsl
scas
out
mov
icebp
sbb
push
fmulp
dec
fbstp
add
scas
les
jle
mov
mov
cmp
cs
aam
xor
cs
fistl
inc
xor
cmp
sub
pop
add
sbb
add
out
push
add
imul
lods
sub
jp
push
cld
mov
push
dec
sbb
mov
mov
mov
mov
fistpll
mov
mov
out
aas
jae
fidivrs
in
mov
bound
add
cld
pop
popa
xchg
adc
out
sub
popa
in
stos
pop
mov
imul
sbbb
jo
sbb
stc
in
mov
inc
mov
cmp
or
xchg
pop
frstor
mov
ja
cmc
insb
push
cmp
scas
push
imulb
dec
shll
out
fiaddl
scas
mov
idiv
sbb
mov
jo
xor
jl
pop
filds
arpl
mov
push
jge
mov
mov
aaa
lock
int3
addb
xchg
mov
fisttps
ds
xchg
les
pop
sbb
aam
xor
push
cmp
add
inc
cmp
mov
inc
and
dec
dec
inc
idivl
jmp
popf
mov
movsl
jp
or
mov
push
andb
cmpsb
out
push
mov
sub
push
cmp
aas
das
cmp
adc
arpl
push
ds
sarb
data16
pop
jecxz
nop
rorl
fildl
jne
sbb
xchg
sbb
xchg
in
lea
ja
test
jns
pop
aam
movsl
cs
cmp
and
stos
push
xchg
xchg
mov
jp
mov
dec
aam
push
int3
lock
push
push
add
push
dec
sbb
popa
imul
cmp
mov
rol
jns
push
mov
cmpsl
fwait
mov
xor
fnstcw
mov
or
outsb
into
lret
les
sub
cld
pop
xor
ror
iret
sbb
hlt
int
daa
and
dec
adc
aad
adc
mov
fadd
jns
lret
nop
xchg
jo
aad
mov
inc
call
inc
ss
push
xchg
cld
or
pop
ret
xor
hlt
jecxz
imul
jbe
cmc
sub
mov
xor
lcall
inc
sbb
lahf
je
int
insb
push
xchg
xchg
ja
xchg
fsubl
mov
das
inc
dec
scas
xchg
sub
mov
std
jmp
inc
pushf
es
pop
repnz
inc
mov
mov
xchg
lret
imulb
xchg
xchg
jns
push
add
push
or
movsb
push
test
push
add
pop
adc
addr16
int3
adcl
mov
xchg
xchg
sub
aaa
sbb
imul
int
mov
jne
arpl
fcomps
jle
aam
lahf
filds
mov
push
dec
or
inc
jge
sub
jp
leave
popf
sub
dec
pmulhuw
push
ret
push
sbb
shlb
outsb
fldt
jecxz
std
push
in
iret
sub
sbb
sub
pop
addr16
xlat
push
adc
test
outsb
lret
push
cmpsl
push
push
jecxz
cltd
stos
xchg
int
fsubrl
gs
arpl
outsl
dec
add
popf
stos
xlat
pop
and
or
psubq
mov
out
into
jge
popf
js
out
cmpsb
jb
mov
sti
pop
mov
mov
call
scas
jae
add
pop
add
test
cmp
repz
insl
fwait
movsl
cld
push
sub
shlb
jae
sub
push
mov
inc
pop
xor
cltd
adc
push
repz
ds
push
or
or
out
ss
cmp
inc
adc
jnp
addr16
pusha
xor
and
fildll
cmp
cmp
in
sbb
xchg
nop
jmp
jnp
mov
mov
push
sahf
sub
addb
test
xchg
mov
or
cmp
pusha
xor
jl
mov
imul
push
int
jae
out
jns
aam
bound
dec
or
xor
fldl
push
gs
inc
jne
out
push
dec
ljmp
push
clc
or
mov
loope
inc
mov
adc
xchg
insl
js
lcall
test
add
sahf
pusha
mov
mov
arpl
std
push
outsl
jp
int3
sbb
cmp
mov
or
jmp
push
cmp
jbe
xchg
loopne
imul
mov
push
ss
dec
push
cmp
inc
lcall
cs
mov
popa
in
add
pop
addl
push
test
into
js
out
xchg
xchg
es
sbb
gs
pushf
repz
mov
call
jae
dec
jns
ret
in
inc
outsb
mov
fnstsw
rcll
pop
lock
mov
cmp
mov
sub
xchg
mov
and
or
scas
notl
cmp
pop
out
movsb
das
outsl
ja
jae
adc
mov
and
fimull
dec
fnsave
les
pop
pop
fistl
dec
lahf
dec
dec
int3
imul
jno
call
mov
dec
pop
mov
push
aad
sub
pushf
test
das
push
xchg
sbb
sti
paddw
data16
stc
push
pop
es
add
or
pop
lret
and
test
leave
aam
xchg
jno
mov
sti
mov
jge
sub
popf
pop
cltd
cs
aam
jle
jl
rorl
jmp
mov
sbb
add
sub
jbe
mov
xor
jge
repnz
lahf
aam
inc
shrb
aam
jne
xor
enter
pop
mulb
push
rolb
cmp
pop
dec
shrl
cmp
test
out
inc
pop
cld
push
daa
cmp
and
dec
pop
int
mov
jl
data16
ja
inc
mov
and
testl
jg
lea
sub
stos
out
sti
lcall
test
or
out
es
push
aad
push
adc
imul
sub
aas
mov
movsl
add
into
pop
pop
mov
push
ds
dec
push
dec
jo
jo
sub
mov
mov
sbb
sbb
pop
bound
jnp
js
add
enter
inc
orl
div
insb
pushf
popa
adc
lahf
or
aaa
jg
shlb
fidivrs
int
and
xor
jo
sbb
cs
sub
std
clc
aad
jo
sub
int3
enter
mov
xlat
adcb
hlt
xchg
popa
mov
lock
jecxz
jecxz
dec
lock
imul
pop
in
fs
out
pop
dec
lret
mov
rcl
cld
xor
inc
push
xor
xchg
or
xor
mov
push
pop
xor
xchg
mov
dec
addr16
fisttps
icebp
or
stc
lock
sbb
push
mov
shlb
pop
test
sbb
and
adc
movsl
push
test
in
mov
js
lgs
cmc
mov
mov
adc
mov
mov
gs
push
xchg
adc
fistpl
orl
jmp
rcll
jp
cwtl
xchg
push
pop
pop
add
dec
imul
je
mov
cmp
cwtl
dec
pushl
inc
mov
je
mov
cmp
cmp
loopne
mov
mov
jge
loope
cld
notb
adc
mov
loop
xlat
dec
test
push
mov
add
add
push
insb
int3
stos
adc
or
lods
out
aas
mov
cli
cmp
popa
xchg
dec
inc
cs
nop
mov
mov
dec
mov
movsb
pop
mov
inc
sar
addl
mov
xchg
mov
iret
jno
pop
pop
dec
mov
clc
shlb
lds
pusha
pop
sbb
add
mov
loopne
push
mov
push
mov
xchg
pushf
ds
jns
cmp
in
pop
xchg
jge
sbb
icebp
push
or
jmp
in
int
xchg
pop
fidivl
mov
jmp
xchg
add
push
shl
mov
popf
fcompl
popf
subb
lcall
gs
xchg
sub
pop
and
pop
test
gs
aas
cmp
mov
jnp
sub
loop
pusha
in
sub
xchg
out
out
mov
xchg
push
xor
shrb
xchg
fwait
ja
mov
test
pop
dec
lcall
cmp
das
inc
outsb
xor
jbe
roll
mov
cli
sub
ret
iret
dec
lea
xor
cs
or
xchg
sub
fdivrs
fsts
sti
call
push
loope
add
mov
insl
inc
cmpsl
lret
sbb
sub
adc
shll
and
daa
arpl
pop
xchg
test
rcl
subb
ja
jle
rcl
mov
mov
ficoms
gs
or
lea
roll
cli
lret
or
xchg
int3
aad
scas
sbb
mov
cmc
call
inc
mov
ret
ds
cs
sbb
ds
push
inc
sbb
or
imul
cmc
jl
inc
pop
push
pop
adc
cmp
dec
pop
test
scas
loope
stos
push
das
pusha
rcrb
jae
mov
jae
popa
bound
mov
lds
adc
out
movsb
call
ss
mov
xchg
sbb
inc
jne
pop
push
ljmp
add
insb
sbb
das
lret
insl
mov
pushf
stos
mov
loope
dec
inc
je
rcr
mov
insl
int3
loope
out
iret
cs
jo
mov
dec
out
xchg
stos
dec
sbbl
and
jae
mov
and
cmp
arpl
lds
shll
mov
sub
outsl
push
push
and
mov
sub
in
or
fcoml
pop
cmp
movsb
cmpsb
test
or
sahf
test
ficompl
jbe
mov
xor
insb
push
test
das
mov
sub
jns
push
lahf
out
gs
and
xor
jnp
mov
or
cmp
sarb
pop
nop
fstpl
in
rep
and
mov
arpl
popa
mov
dec
and
jno
cmp
pusha
inc
pop
or
xchg
cmpsb
xlat
inc
pop
add
sub
pop
mov
lods
fs
mov
dec
push
cmpsl
cli
icebp
xchg
jne
xor
cmpb
mov
pop
lret
imul
xchg
adc
fldt
mov
stos
push
pop
mov
icebp
sbb
mov
ss
mov
dec
in
sub
push
dec
sti
jmp
pop
out
pusha
push
ret
div
mov
mov
rcrb
lock
testl
inc
pop
adc
test
movsl
adc
xlat
pop
inc
pop
xchg
pop
int3
jae
dec
jae
inc
fmull
xchg
test
aad
jle
add
in
pop
push
pop
int3
mov
or
xor
xor
cmp
jle
lds
jge
repz
mov
lods
add
test
nop
pop
push
pop
mov
lock
sub
lcall
sbb
push
sbb
mov
cli
inc
dec
xchg
or
add
add
ja
enter
jecxz
stos
stos
sub
add
stos
sbb
ss
fwait
mov
push
push
push
inc
cwtl
lods
inc
stos
xchg
addr16
iret
jne
lret
fidivl
add
xor
jno
mov
testl
mov
les
or
mov
jb
pop
clc
xor
mov
mov
jae
out
add
mov
xchg
pop
enter
pushf
push
sub
adc
fwait
inc
and
jae
push
rcl
push
aas
add
movsb
aaa
call
and
sbb
mov
fldenv
xor
outsl
loop
mov
and
push
imul
xor
in
cmpsb
mov
xchg
xchg
lock
ss
or
mov
out
inc
adc
popa
cwtl
push
mov
mov
clc
sti
scas
jge
jecxz
sbb
or
fdivrl
arpl
outsl
orb
fcomip
insl
pop
cmpl
adc
pop
les
sub
push
addb
mov
push
inc
cmpsl
cmp
mov
or
xchg
pop
pop
fcomps
es
aas
mov
cwtl
gs
cmpsl
xchg
fwait
push
insb
push
add
scas
cmp
clc
xchg
cmc
cmp
sbb
xchg
or
in
dec
cmpsl
in
in
mov
adc
cmc
rcl
pop
hlt
outsl
xor
cmpsl
lret
rcrl
inc
add
and
pop
mov
jg
mov
xchg
into
xor
imul
push
gs
pop
cli
or
mov
adc
push
fistps
sub
pop
dec
aad
idiv
adc
test
inc
add
cmpsb
dec
xor
call
mov
adc
lods
daa
mov
mul
xor
inc
cmp
push
inc
xchg
xor
test
pushf
cmp
lock
push
mov
mov
sub
xor
dec
jae
shll
mov
fstps
jno
outsb
mov
inc
mov
pop
das
mov
js
or
outsb
adc
stc
fsubrs
dec
shrl
and
push
cmp
mov
insb
lcall
mov
pop
or
cmpsl
cli
mov
mov
sub
arpl
and
insl
mov
mov
cld
movsb
out
into
dec
pushf
sub
push
movlps
mov
xchg
int
mov
or
add
testl
neg
fcmovne
aad
push
adc
shl
adc
sbb
outsb
and
dec
push
in
orl
int3
xor
xor
in
loop
push
mov
movsl
outsb
xor
adc
cltd
aas
negl
push
addl
cld
int
and
adc
xchg
adc
pop
mov
sti
add
lods
xor
xor
inc
scas
cmpsb
pop
movsl
adc
mov
movsl
jl
add
mov
out
push
mov
movsb
xor
or
outsl
sbbl
lds
scas
insl
jmp
and
rcr
out
push
or
or
dec
inc
mov
sbb
or
stc
fyl2xp1
and
mov
push
or
inc
push
dec
ja
aad
xchg
add
jns
mov
jbe
sub
stc
push
jecxz
pop
mov
in
jecxz
jge
mov
xor
add
jge
ljmp
mov
cmp
inc
sbb
icebp
adc
push
test
cmp
and
jns
jae
sub
outsb
sbb
pop
add
fldt
movsl
sahf
dec
pop
or
pop
sub
xlat
into
xlat
inc
data16
inc
dec
fldenv
js
sbb
push
fstpt
push
insl
pushf
cmc
test
mov
dec
stc
jae
rolb
push
mov
xchg
jg
and
mov
outsl
es
loopne
aaa
lods
loopne
dec
sbb
js
popf
xchg
push
std
inc
push
xchg
mov
les
or
pop
ret
hlt
push
or
dec
mov
fcompl
mov
pop
arpl
jle
and
fimuls
sbb
cmp
pop
adc
push
std
lock
push
ss
xlat
scas
or
decl
xchg
pop
cwtl
pop
dec
loopne
loopne
pop
fistl
icebp
shrl
cli
xor
pop
clc
les
sub
adc
sub
sub
xor
sbb
inc
xchg
xor
fildl
xlat
add
sarl
insl
aaa
stos
mov
xor
mov
mov
ficoms
div
xchg
repnz
jge
dec
int3
cmp
mov
movsb
leave
inc
aaa
shll
std
iret
enter
xor
and
or
pop
loope
sub
and
mov
jno
fcompl
js
add
fcmove
addr16
xchg
ljmp
in
subb
xchg
outsb
jecxz
faddl
pushf
test
xor
xor
insl
add
dec
bound
in
call
push
lret
adc
shrb
sbb
jp
loopne
jecxz
mov
xorl
and
jbe
cltd
or
mov
movsl
xlat
sbb
push
nop
fldt
repz
int3
insl
push
adc
cld
push
inc
pop
inc
test
bound
add
jo
bound
movsl
ss
jecxz
lods
lea
add
aas
pop
lods
mov
dec
and
push
mov
outsb
ljmp
pop
mov
adc
sub
out
subb
xchg
loopne
cwtl
mov
xchg
fistps
icebp
insl
dec
sbb
jge
inc
xlat
mov
inc
loop
pusha
inc
mov
inc
fsubrs
or
lods
xor
and
push
arpl
mov
cmc
pop
fidivs
jo
dec
and
pop
outsl
int
lret
mov
add
stc
enter
sahf
icebp
jl
dec
sarb
fldl
mov
xchg
and
testb
das
adc
jp
fldl
data16
mov
dec
cmp
aam
sar
dec
ljmp
loop
lahf
xchg
popa
int3
sbb
jno
mov
mov
fs
or
jl
lea
aaa
das
mov
std
popa
outsl
xchg
xchg
fwait
push
adc
movsb
pop
int
pusha
lahf
mov
into
and
sti
pushf
mov
aam
push
sub
dec
lds
lods
shr
popa
mov
into
insb
sbb
inc
push
fistl
lcall
sahf
loopne
gs
push
rcrb
mov
push
pop
je
sbb
std
push
leave
ss
mov
cwtl
xchg
lds
ds
cmp
fs
jo
sub
add
pop
pop
jg
popf
xchg
dec
daa
aaa
daa
sbbb
push
add
loopne
mov
inc
inc
jno
leave
cwtl
ljmp
xor
push
pop
cmp
sbb
pop
popf
mov
mov
repnz
test
shlb
fsts
add
xchg
pop
test
pop
out
adc
dec
call
and
xlat
das
pop
cltd
popf
cmp
data16
add
mov
scas
loope
sti
cwtl
testb
aas
mov
rcll
mull
stc
js
sub
fdiv
rorb
subb
mov
mov
fcomps
push
sub
mov
sub
loop
xchg
mov
add
mov
push
mov
push
mov
dec
out
sub
popa
dec
push
mov
stc
or
bound
ficompl
jp
testl
push
jmp
stos
out
jle
mov
jne
mov
ds
cmp
pop
test
inc
aad
mov
cmp
xchg
cmpw
pop
cltd
xlat
icebp
jmp
clc
sbb
jbe
mov
sub
andl
stos
std
xor
popf
dec
fisubrs
mull
pusha
sbb
or
adc
movsb
loope
js
mov
push
xchg
jp
mov
xchg
mov
jb
mov
cli
sbbb
pop
jmp
inc
loop
lods
xchg
dec
cmp
das
repnz
test
pop
dec
mov
push
pusha
push
insb
lea
jae
push
xlat
subl
icebp
scas
sub
mov
imul
dec
mulb
int
pop
inc
cmp
pop
jno
cmp
dec
cmpsb
xor
frstor
rol
xchg
sbb
dec
clc
sbb
rcll
and
ja
das
mov
fimuls
int
test
shlb
rcrb
sbb
xchg
rclb
ret
repnz
sub
test
arpl
hlt
test
inc
lods
rcrl
jge
mov
xor
and
in
jmp
mov
test
lret
add
pop
movsl
mov
jp
fs
in
lea
pop
push
push
and
jns
push
jbe
xchg
repz
xchg
stc
cld
iret
fwait
lret
add
push
pop
dec
dec
scas
sub
dec
int3
mov
ds
aas
ds
dec
inc
repnz
mov
adc
aad
outsl
pop
movsb
pop
dec
xchg
pusha
jle
fwait
add
js
push
push
mov
pusha
add
or
les
call
xor
lret
in
mov
or
push
pop
pop
je
xor
mov
leave
sub
arpl
lock
cli
sahf
or
shrl
push
in
loope
jb
cmp
bound
mov
aaa
inc
lret
mov
jecxz
and
xor
cmpsb
or
jno
test
jle
loopne
and
ficompl
xor
mov
test
jmp
loope
push
xchg
push
shll
jp
inc
dec
jae
mov
mov
negl
in
repnz
pop
xor
jnp
addb
inc
pop
ret
ljmp
xchg
pop
cmp
jecxz
gs
xor
fs
dec
in
jp
lret
xlat
dec
aaa
ds
and
jmp
push
gs
leave
into
mov
das
out
movsb
adc
nop
aam
cmp
test
mov
lock
cmpsb
ficomps
push
sti
iret
popf
xchg
sbb
cmp
out
push
and
fistl
test
pop
in
pusha
inc
loope
push
lds
nop
push
inc
pop
movsb
in
xchg
mov
pmullw
neg
cmc
ljmp
cmpsb
lret
push
ret
sbb
mov
ret
dec
in
or
es
jl
pop
push
addb
imul
shlb
cmp
or
dec
and
jnp
dec
leave
clc
mov
jg
cltd
enter
add
xchg
cmp
js
sbb
inc
jg
lret
inc
shr
dec
shlb
pop
sbb
pop
rcr
adc
fisubs
push
std
outsl
ja
int3
ja,pt
pop
dec
jb
xlat
pop
xor
push
mov
mov
es
push
xor
jg
es
dec
mov
out
mov
sub
lods
nop
adc
mov
mov
or
jnp
mov
mov
loopne
mov
sub
and
repz
repz
aam
in
adc
pop
orl
loop
sysenter
adc
and
fcoml
in
orb
and
cmp
add
movsl
rcll
popa
mov
aad
adc
cmp
in
pop
cmp
xlat
jne
pop
lock
xchg
jb
lcall
and
scas
mov
out
aas
std
popa
addr16
cmp
sahf
inc
mov
fld1
rcll
dec
xchg
dec
cmp
inc
test
or
jnp
add
push
jo
aam
insl
sbbl
ficompl
adc
inc
jbe
jl
mov
lahf
sub
sti
mov
in
fiaddl
xchg
xchg
jl
aad
popa
jns
iret
outsl
push
xor
push
add
dec
xchg
jno
maskmovq
notl
add
negl
icebp
push
adc
push
pop
mov
arpl
pop
bnd
imul
xchg
js
test
sub
dec
push
je
incl
jns
fwait
cltd
jno
xor
jge
mov
sub
cs
out
push
stos
pushf
imul
movsb
cmpsb
sub
loope
dec
cli
aam
xchg
dec
repnz
or
sub
dec
xchg
xlat
mov
jge
adc
outsb
in
push
pop
icebp
je
aaa
fs
xchg
fnstenv
and
adc
les
loop
add
inc
sub
xchg
lea
gs
sbb
les
mov
pop
mov
jbe
dec
lahf
xor
inc
out
inc
mov
jl
adc
dec
sbb
pusha
cs
int3
cli
movsb
ljmp
out
sub
jae
cmp
cwtl
pop
jp
lods
sub
push
or
std
dec
pusha
fs
dec
mov
inc
push
ds
shlb
dec
je
adc
test
mov
jnp
and
popa
sbb
mov
or
fs
and
in
mov
mov
and
jge
or
lea
add
and
loope
out
mov
pop
and
mov
daa
jbe
das
cs
dec
shrl
in
xchg
int
sub
sbb
jl
fildl
hlt
adc
mov
xchg
in
daa
xor
jb
mov
push
sub
xchg
push
ljmp
jle
add
xor
or
cmp
pop
jecxz
pop
in
ja
notb
inc
xor
addr16
les
xchg
sub
es
sub
js
cwtl
push
dec
rcl
mov
scas
insl
loopne
outsb
mov
lret
mov
sbb
add
loop
rcr
insb
mov
imul
enter
mov
xchg
fistl
mov
arpl
jmp
xor
dec
les
mov
repz
mov
pop
xor
cmp
sbb
test
sub
ljmp
mov
sarl
sbbb
sbb
shlb
xor
jg
test
aas
cld
pop
movsl
stos
adc
not
int
mov
mov
lcall
insl
mov
mov
dec
imul
mov
sahf
rcr
call
xchg
int
adcl
mov
cmpsl
sub
mov
sbb
mov
sub
mov
mov
push
or
or
add
and
pop
out
mov
in
sbb
mov
mov
imul
xchg
lea
sbb
mov
daa
pop
in
mov
jle
lods
pushf
mov
iret
iret
cmpsb
jns
imul
sahf
jb
lock
sub
orb
jecxz
sbb
push
negl
mov
push
sbb
fcmove
pop
in
push
push
xor
mov
push
insl
mov
or
dec
popa
call
and
pop
xor
xorb
mov
xchg
jge
fisubrl
int
lcall
or
adc
mov
and
in
gs
cmp
pop
sub
in
repz
into
rolb
call
subl
mov
movb
int
movsl
xchg
sahf
add
mov
cmpsb
and
je
and
test
rcrb
jmp
sti
iret
push
sar
lahf
and
lock
lcall
mov
xchg
lods
cmp
or
adc
hlt
jmp
mov
xor
add
cmp
pop
nop
adc
dec
sahf
enter
fnstenv
std
shll
inc
cli
popa
mov
cmp
shrl
cmp
rorl
lock
fiaddl
in
push
sbb
jle
lcall
inc
mov
das
cmp
ficomps
lret
je
inc
jno
xor
or
mov
xor
xchg
sbb
dec
arpl
lahf
dec
mov
out
int3
mov
rcll
adcl
sahf
fcomp
fsubrl
and
jae
jecxz
in
out
cmp
ficompl
iret
cltd
mov
popa
mov
loope
jp
inc
adc
pop
ds
and
and
xchg
sbbl
mov
push
mov
add
push
sub
ret
and
movsb
pop
clc
mov
aaa
inc
lcall
push
sub
daa
or
and
push
sahf
mov
movl
xchg
sub
idivb
dec
popa
and
out
movsb
lods
jp
ljmp
xchg
aaa
into
jp
sbb
xor
movsb
imul
cld
scas
sub
fldl
jne
popf
xchg
gs
nop
enter
popf
jo
pop
xor
mov
push
add
mov
jmp
movl
adc
cmp
jno
adc
into
dec
lock
inc
fstpt
push
add
jg
cmp
rcr
sbb
and
movsb
sti
xchg
into
dec
xchg
sub
rcll
add
push
out
fisubrs
mov
test
leave
inc
and
xchg
mov
aas
pop
je
mov
cmovle
lds
sahf
mov
fcmove
and
mov
sub
and
jb
xor
mov
inc
daa
mov
xchg
mov
push
xor
cmpsl
dec
inc
lds
sbb
int3
mov
ret
loop
je
dec
fisttpll
xchg
in
stos
in
jl
out
cmp
push
lock
jg
loopne
push
test
cmp
dec
inc
icebp
pushf
lret
inc
inc
cld
xor
negb
loopne
and
add
push
push
cmpb
cs
fcmove
jbe
push
dec
sahf
lea
or
mov
ds
aam
sti
loop
stos
outsl
cli
push
xchg
icebp
movsb
mov
mov
jp
mov
out
push
xchg
mov
jns
sbb
xchg
rorb
mov
insb
push
jb
jle
shlb
aaa
mov
clc
inc
mov
push
frstor
daa
sub
shrl
cli
leave
add
inc
pop
inc
lods
dec
mov
xchg
insb
and
add
and
daa
out
pop
sbb
es
orb
cmp
fnstcw
mov
mov
jp
push
push
jne
subl
scas
add
das
fbstp
or
mov
lods
es
and
push
cmp
es
or
add
cmp
cli
add
cmp
sbb
in
mov
pop
mov
mov
xor
add
test
jg
sub
lock
xor
dec
dec
addl
mov
fisttpll
sbb
jae
cwtl
cmp
or
ds
aam
aam
lock
jle
stc
movsb
mov
popf
stos
aaa
cmc
jg
out
shl
dec
rcrb
add
mov
fistps
or
pop
loop
frstor
add
ret
push
sti
sub
pop
cltd
adc
sbb
into
mov
mov
pop
pop
jne
mov
outsl
sbb
xchg
dec
add
and
out
mov
lcall
cmp
add
cwtl
out
mov
das
xor
push
cmp
push
mov
or
mov
test
pop
add
push
movsb
xchg
cmp
pop
lcall
in
out
jno
cmp
lret
cmp
mov
add
dec
pop
push
adc
lcall
mov
push
mov
ret
jb
mov
push
push
or
jbe
push
nop
mov
jne
ljmp
inc
mov
or
jg
xchg
pop
or
popf
ds
inc
roll
and
roll
hlt
mov
jb
inc
or
pop
cmp
daa
mov
jno
push
je
addr16
push
sbb
divb
adc
movsl
push
sub
push
sahf
pusha
and
adc
lods
movsb
adc
jmp
pop
leave
sbb
and
in
adc
lock
xchg
fst
xor
and
pop
sbb
mov
and
lods
mov
mov
jo
or
or
and
inc
add
push
sahf
mov
ljmp
mov
jl
das
or
add
mov
and
pop
hlt
insb
aaa
les
add
lods
pop
adc
jne
mov
or
push
fidivs
aas
jno
mov
lds
add
daa
inc
pop
cltd
xor
jp
cwtl
fcom
popa
mov
sbb
pop
enter
xchg
repnz
sub
lret
imul
enter
sbb
mov
mov
xchg
scas
jg
pop
cs
mov
mov
aaa
mov
add
ja
xorb
mov
lret
ss
xchg
std
sbb
jp
ret
jae
add
jno
popa
pop
jbe,pt
sti
adcl
dec
lock
repnz
rclb
add
mov
push
xchg
loope
leave
pop
popa
push
sbb
ljmp
push
adc
cmpb
sub
ret
jmp
inc
mov
std
fsubrl
push
xchg
mov
sub
shlb
or
pop
outsb
lret
lret
inc
iret
icebp
push
push
mov
mov
mov
scas
xor
jne
and
fisubl
or
ret
sbbl
insl
lret
shl
fdivrl
or
push
adc
and
sub
fs
push
inc
les
fdivr
enter
jo
sub
test
sbb
sti
push
aaa
arpl
aad
jo
xchg
xchg
cmp
ds
mov
pop
sub
imul
cmp
jmp
push
cmpsb
fistps
std
test
jo
pop
jnp
mov
cli
and
out
adc
cmp
rclb
push
inc
xchg
push
adc
into
test
stos
int3
sti
std
sub
or
mov
enter
lcall
mov
cltd
andl
out
adc
pop
out
and
nop
jmp
out
mov
cmpsl
fs
mov
sub
xor
faddl
stos
pop
dec
mov
jmp
outsb
out
pusha
jmp
lea
adc
sarb
xchg
or
sbb
xchg
mov
bound
push
sub
add
push
xchg
push
fcmovnbe
push
xchg
insb
pop
in
push
adc
sbb
sti
xor
mov
cmp
inc
inc
daa
mov
rolb
into
sub
cs
shlb
adc
fcmovu
out
pop
jno
lds
pushf
or
inc
in
pop
xor
mov
aad
pop
lahf
dec
or
add
sbb
call
jne
xlat
das
shrb
dec
or
inc
and
out
call
adc
adc
dec
popf
mov
sbb
pop
in
rcrb
push
mov
mov
leave
aam
movsl
test
jl
scas
outsl
sbb
inc
js
in
push
cmpsb
sbb
repz
xor
pop
xchg
jmp
les
ss
adc
out
mov
adc
fldl
call
insb
sub
insb
or
shll
out
ja
lcall
imul
cmp
inc
loope
int3
jmp
push
scas
push
or
push
addr16
push
movsb
push
mov
in
adc
mov
jmp
es
in
repz
int3
mov
jp
loope
ljmp
add
and
in
in
daa
jae
out
xchg
jmp
adc
lcall
xor
test
aas
ret
cmp
arpl
aam
jp
mov
icebp
jmp
je
popa
and
xor
out
dec
sub
cli
pushl
push
idivb
jae
sub
jle
lahf
xlat
adc
add
scas
dec
je
ljmp
rcl
pop
outsb
dec
cmp
xchg
fcmovnbe
and
mov
xor
xchg
out
xchg
xchg
add
jne
leave
push
stos
aad
cli
cmp
sbb
dec
testl
mov
sbb
ss
cmp
or
mov
mov
hlt
add
push
insl
mov
in
test
in
jae
roll
fstl
mov
and
mov
pop
push
fwait
sti
pop
or
movsb
loope
test
push
repnz
imul
js
mov
orb
mov
sbb
ffree
pushf
out
lods
aas
adc
cmp
sub
dec
cwtl
stos
mov
addr16
call
arpl
mov
mov
std
fnstcw
dec
test
outsl
notl
imul
pop
and
inc
jne
mov
mov
ror
sbb
lods
test
jnp
scas
mov
cmp
ss
pushf
or
or
mov
pop
test
in
dec
jp
mov
test
mov
sbb
cwtl
movsl
mov
adc
add
add
rcrl
mov
test
mov
sbb
xlat
cmp
ja
mov
lods
arpl
mov
aad
jmp
ss
jg
call
ljmp
aaa
ja
mov
pop
mov
cmpsb
loope
xor
or
pop
mov
mov
sbbl
enter
in
repnz
sub
adc
jae
xchg
icebp
dec
iret
sub
cmpsl
fwait
mov
or
and
dec
inc
sar
push
xchg
xorl
call
xchg
lods
test
xchg
jg
stc
mov
add
pop
ficoml
push
shrb
or
sub
add
push
jg
mov
add
lock
and
test
xchg
loope
pusha
inc
xchg
fdiv
icebp
shrl
xchg
jo
or
or
iret
ss
sub
cwtl
into
xchg
mov
call
jle
sbb
js
sbb
mov
das
pushf
mov
xchg
jb
rolb
jnp
hlt
ja
scas
mov
ss
xchg
and
push
pop
push
mov
lcall
fs
sbb
leave
stos
data16
dec
sbb
daa
jb
stos
lds
or
cli
andl
sub
fdivrs
loop
pop
mov
daa
xor
pushf
adc
fst
or
cld
xor
mov
push
sbb
fisttpll
xchg
lea
clc
mov
or
mov
and
adc
repz
leave
pop
scas
dec
xchg
lret
and
das
fistpll
add
pop
mov
pop
mov
and
sub
std
xor
push
push
fdivrs
stc
fsubs
add
xlat
sbb
cmpsl
pop
xchg
fsubs
pop
lret
in
addb
cs
nop
push
push
decl
pop
mov
movl
dec
jno
sbb
iret
and
cmp
lcall
popa
lds
mov
cmp
movsb
sub
mov
dec
dec
test
push
das
insb
xchg
adc
mov
ret
adc
int3
daa
in
imul
mov
sub
js
insb
test
xchg
cld
mov
and
cmp
fxch
les
in
add
cmc
sbb
sahf
jmp
sub
push
loope
test
dec
pop
shl
dec
aam
sub
subb
insl
popa
push
pop
pop
push
push
mov
mov
repnz
jg
pop
mov
hlt
fs
hlt
stc
sahf
mov
jno
cmp
mov
pop
push
mov
outsb
outsb
cli
jae
push
mov
xor
inc
sbbb
mov
mull
pop
outsb
sahf
cmp
loope
mov
pop
or
jl
stos
addl
out
popf
lods
inc
mov
imul
push
popf
jge
adc
es
test
lods
push
cmp
cmp
sbb
mov
std
lret
add
decl
les
ds
jae
cld
dec
xor
xchg
xchg
dec
fwait
cmpsl
mov
lret
xor
aaa
and
loop
pushf
in
and
mov
mov
movsl
jo
sub
and
jp
xchg
dec
add
pushl
inc
push
call
xorl
test
stos
jmp
jns
mov
cmpsl
mov
dec
mov
icebp
or
mov
jo
add
stos
js
lods
pop
data16
ljmp
push
push
popa
pop
aam
xchg
daa
in
xchg
jp
imul
es
sbbb
sub
or
jo
decl
xchg
sti
dec
push
inc
push
xchg
mov
or
fdivs
inc
out
push
sub
arpl
sbb
ja
dec
xlat
jo
ret
int3
mov
push
cwtl
sub
mov
jge
movsl
mov
add
lcall
aas
mov
sbb
gs
cltd
jp
sub
int3
stos
in
and
cmp
lods
ret
xchg
xchg
std
rcll
rclb
fimuls
ds
jns
sub
mov
scas
dec
and
fidivl
daa
sahf
mov
pop
cwtl
out
xchg
pop
sti
add
subl
dec
sarb
xchg
out
mov
lret
add
fdivr
add
fwait
push
adc
stos
fnstcw
xchg
imul
cmp
into
mov
adc
cwtl
loope
mov
inc
andl
push
and
fstpl
lcall
mov
mov
adc
cltd
push
or
mov
push
dec
dec
ret
or
cmp
sub
repz
fsubrs
std
push
inc
sbbb
sub
movsb
fwait
test
push
cmp
mov
divb
dec
aas
in
dec
mov
out
daa
add
movsl
shlb
inc
pop
aad
cmp
inc
out
cmp
jns
pop
sub
add
push
jno
and
in
hlt
fistps
cmpsb
pop
fnstsw
or
ret
push
cli
in
test
lahf
sarb
pop
out
in
xor
cltd
loop
in
push
mov
aas
addl
sub
cmp
addb
inc
or
scas
mov
stos
adc
jae
dec
arpl
pushf
popa
sbb
xchg
fmuls
mov
pop
iret
cmpsb
mov
jne
lcall
add
imul
loopne
jno
into
add
test
incb
cmpsb
and
mov
stos
testl
in
inc
test
test
mov
xchg
cmp
cmc
fisttpll
sbb
insb
dec
mov
test
lea
xchg
pop
sbb
sti
clc
int
mov
enter
jl
inc
push
outsl
mov
stos
cs
mov
sub
pop
mov
idiv
sbb
loopne
jmp
outsl
test
xor
pusha
sbb
xchg
ret
or
sub
lods
pushf
pushf
out
in
jp
sahf
xor
out
cld
or
jecxz
pushf
push
mov
jnp
out
mov
lods
jge
out
lods
cwtl
pop
adc
mov
mov
pop
sub
push
aas
xlat
dec
lahf
das
mov
fildl
repz
clc
test
int
push
mov
mull
sbb
rorl
popa
xor
adc
cmp
insb
inc
dec
negb
pop
fildll
repz
xchg
dec
out
mov
mov
add
scas
mov
test
mov
dec
lds
inc
cwtl
push
aam
adc
arpl
sbb
mov
adc
repz
insb
mov
adc
dec
lret
js
out
mov
sub
cli
mov
jl
xchg
das
in
dec
imul
and
mov
cmp
repnz
mov
mov
jecxz
call
xchg
mov
push
in
mov
push
add
incb
popa
push
popa
sub
out
or
fwait
in
cmp
lret
pop
frstor
push
inc
das
push
subps
mov
fmul
daa
push
imul
iret
pop
and
adc
xor
addr16
pop
jae
dec
mov
addr16
imul
iret
aas
fnstenv
sbbb
xchg
lods
aam
sub
jno
inc
pop
pusha
ucomiss
loopne
sub
ljmp
or
and
sbb
popf
and
popa
mov
dec
repz
mul
mov
out
lahf
jae
mov
push
mov
subl
mov
cmc
lahf
push
mov
xor
push
push
mov
pop
xchg
int3
loopne
and
adc
push
dec
mov
repnz
lcall
adc
in
push
xchg
testb
out
add
jns
jecxz
pop
push
pop
ret
or
or
das
pop
mov
out
lea
pop
pop
out
xor
xchg
dec
mov
dec
loop
xlat
xchg
pop
pusha
xor
cmc
mov
xchg
mov
cld
sub
pop
or
loope
or
add
lods
cmp
in
rcll
popf
xor
scas
add
add
mov
and
fs
in
es
adc
dec
test
lcall
adc
cld
hlt
sub
push
mov
xchg
and
mov
imull
cs
out
cli
cmp
mov
push
inc
imul
mov
scas
sbb
rorl
imul
push
gs
and
add
adc
je
xchg
aad
mov
dec
cwtl
sub
or
mov
sbb
fdivl
imul
jl
repz
dec
cmc
sub
cmpsb
fdivs
sahf
cmp
add
sub
jb
mov
insb
mov
inc
orl
dec
loope
mov
and
jo
test
cwtl
lret
xor
lret
jns
in
loope
movsb
imul
push
lcall
movsb
mov
fstpl
mov
mov
ret
js
xchg
scas
mov
or
out
fstpt
cltd
gs
pop
mov
push
inc
insl
in
push
addb
fdivl
xchg
aad
push
xor
aam
xchg
lock
insb
call
xchg
dec
mov
pushf
add
sbb
add
mov
ss
idivl
sahf
cs
mov
push
aad
xor
push
mov
cmp
leave
int
cli
xchg
push
inc
lds
pop
stc
insl
or
add
and
sub
sti
xor
or
sub
dec
pusha
cli
adc
pop
mov
cmp
mov
mul
and
inc
adc
or
nop
xor
sti
enter
mov
pushf
iret
insl
push
xchg
xchg
sahf
das
push
shlb
cmp
outsl
dec
cli
sbb
loopne
aaa
jmp
pop
mulb
fistps
mov
jae
cs
idivb
mov
decl
dec
xor
mov
mov
push
xchg
mov
pop
push
inc
dec
dec
mov
or
jb
scas
push
arpl
repnz
adc
shrb
addr16
repz
out
int3
cwtl
lea
shlb
add
dec
inc
lcall
lods
or
mov
aad
mov
push
dec
gs
insb
push
adc
mov
cmp
add
mov
xchg
inc
nop
test
popf
test
xchg
push
or
jnp
notl
es
add
push
mov
push
mov
jecxz
mov
insl
pop
jmp
push
mov
mov
adc
dec
test
sbb
pusha
dec
push
xchg
adc
shlb
repnz
int3
mov
stos
test
mov
das
jo
adc
mov
cmp
and
xor
loop
jbe
mov
inc
out
and
mov
add
adc
push
test
lret
jne
and
mov
filds
cmp
add
jns
into
xor
cltd
mov
loope
add
js
jecxz
mov
cmp
or
ljmp
pop
lock
fsubs
fs
push
cmpb
pop
into
insl
subl
fcomps
dec
xor
in
mov
out
jmp
fs
faddl
dec
js
sub
inc
cmpb
arpl
in
frstor
or
push
push
jp
xor
imul
mov
cmp
push
inc
mov
call
nop
insl
inc
aaa
ret
xchg
lcall
outsl
scas
xchg
stos
imul
cld
xchg
jmp
loop
xor
icebp
jmp
xor
sbb
enter
jmp
js
mov
test
lcall
in
sub
stos
cmp
mov
sub
shrl
gs
orl
scas
ret
imul
sti
push
mov
mov
aas
pop
or
sub
mov
or
adc
mov
movsb
cmpsb
mov
sub
inc
test
sbb
call
xchg
call
inc
and
stos
lret
xor
and
mov
lea
es
and
inc
jle
ret
fnstenv
jb
sar
mov
shrl
incb
adc
jo
idivb
push
add
sbb
push
mov
pushf
dec
leave
or
out
fisttpll
aam
icebp
flds
and
pop
adc
notl
mov
xor
outsb
fs
jecxz
xchg
cld
test
pop
nop
push
out
cli
hlt
insb
ljmp
push
dec
add
cmc
fildll
push
insb
sti
imul
push
not
fs
sub
sahf
into
add
xchg
xchg
movsl
push
dec
and
shll
cli
push
cmpsl
in
and
cmp
jb
ja
pop
cmp
mov
popa
test
nop
xor
inc
std
ficoml
mov
cmp
pop
cmp
mov
decl
arpl
push
icebp
test
ljmp
movsb
addl
adc
lea
daa
dec
dec
jbe
leave
add
stos
out
dec
mov
and
out
in
std
push
jo
jp
aad
xchg
mov
and
orl
gs
div
mov
push
lahf
adcl
adc
mov
and
test
mov
int
mov
std
mov
out
sub
daa
adc
hlt
loop
fwait
push
cmpsb
add
fldenv
adc
push
sarl
add
mov
iret
pop
das
or
push
dec
cmc
mov
xor
xor
jno
dec
jae
lret
jecxz
xchg
lods
jne
mov
sti
add
jge
push
cmp
mov
mov
rcrl
push
ret
incb
jmp
rcrb
push
or
lret
pop
cmpsl
int
rorb
in
rcrb
push
cmpl
or
mov
jecxz
sbb
push
arpl
inc
popa
inc
push
cli
scas
jl
mov
sub
cmp
cltd
aam
cmp
insb
dec
movsb
jns
jb
push
stc
filds
js
push
dec
sub
cmp
jmp
negb
in
inc
jl
and
push
arpl
cmpsb
dec
xchg
movsb
add
dec
arpl
xchg
fstpl
pop
insl
rorb
into
cmpl
repz
push
mov
sub
xchg
and
dec
or
mov
push
push
ja
mov
ja
inc
cmp
xor
sbb
adc
clc
mov
sbb
mov
sbb
arpl
fcmovb
adc
mov
xchg
inc
aam
jne
insl
scas
inc
pop
push
pop
and
dec
out
hlt
scas
pop
inc
xlat
jmp
int3
sub
jnp
pop
sbb
shll
cmp
adc
push
dec
fsubr
cmp
dec
rclb
mov
xor
shrl
imul
test
inc
jae
pop
add
pop
pop
repz
mov
imul
cmc
scas
jg
inc
cwtl
fmul
roll
xor
cld
in
dec
pop
mov
inc
jns
rcr
jo
xor
and
rorb
inc
in
adc
mov
add
push
inc
pop
clc
ds
or
mov
mov
pop
dec
and
je
fs
in
cli
mov
dec
jg
add
popf
lret
mov
mov
xchg
cmp
lahf
rorl
push
stos
mov
jae
cld
test
cmp
sub
and
ret
in
jecxz
ffree
sub
mov
mov
or
dec
pop
dec
lret
test
jnp
sbb
jg
pop
lcall
jo
popf
mov
pusha
loope
adc
aas
pop
cmp
xchg
jmp
jl
inc
lcall
or
add
shrl
movsb
push
mov
fsubr
in
add
fdivr
ljmp
pop
mov
jno
add
les
out
add
call
out
mov
nop
xchg
das
sbb
add
js
inc
out
shlb
in
xchg
xchg
push
in
inc
out
xchg
xorl
pusha
jae
dec
mov
push
mov
dec
xchg
xchg
xor
dec
test
decl
pop
mov
cmpsb
add
pop
push
clc
lret
into
out
out
xor
popf
sarb
pop
aam
out
pop
scas
stos
sbbl
sbb
mov
out
pop
je
mov
sub
sub
dec
add
orl
jbe
inc
ljmp
test
js
loopne
cmpsl
xchg
push
push
mov
sub
add
lcall
pop
lock
imul
and
lods
lahf
jp
cmp
test
clc
mov
rcrb
lcall
out
lret
nop
mov
cmp
stc
cmpsl
pop
hlt
and
test
cltd
inc
mov
and
mov
lods
xor
das
jecxz
pop
sbb
test
js
addr16
addl
out
pop
and
push
inc
xchg
mov
xchg
stos
xchg
outsl
jno
mov
mov
fsubp
mov
dec
mov
call
stc
bound
in
adc
in
pop
jo
mov
aas
outsb
sbb
stc
mov
cmpsl
lock
inc
cmp
jb
add
jae
int
jp
adc
fdivl
mov
ret
test
mov
mov
inc
jnp
outsb
mov
loop
pop
jge
lret
and
imul
or
xchg
mov
sub
push
insb
imul
jae
or
fisttpll
lcall
cmp
filds
out
mov
xlat
cli
push
insb
inc
inc
push
or
and
mov
imul
pushf
and
push
loopne
xor
xor
sub
or
and
fstpl
rcr
stos
xor
pop
into
in
popf
lahf
add
mov
sti
lret
push
rorb
into
push
int3
and
stos
in
outsb
jl
lods
outsb
xor
adc
fldl
cmpb
dec
xchg
scas
or
mov
cmp
cmp
icebp
addr16
mov
dec
test
icebp
das
jnp
push
in
pop
pop
aam
imull
push
aaa
notl
test
adc
bnd
xor
xchg
push
sbb
jecxz
mov
sub
test
xchg
pop
or
add
call
out
cmp
ret
cmp
and
in
jbe
xor
or
dec
sbb
pop
mov
push
inc
lret
roll
fildll
dec
mov
push
xchg
or
jmp
jecxz
xchg
cmpsl
push
pop
add
jno
xchg
pop
jae
mov
hlt
lods
in
int3
iret
dec
mov
mov
out
loop
inc
pop
orl
shl
pop
outsl
pop
data16
cli
rorb
outsb
dec
notl
rorl
cmp
cmp
lahf
push
pop
mov
jle
mov
pop
repz
inc
sbb
pop
mov
je
dec
xor
xor
outsb
mov
cmp
int3
enter
adcb
cmc
pop
xlat
mov
pop
or
cmpsb
sbb
xlat
mov
imul
lds
jno
mov
out
dec
out
insb
and
sbb
out
add
and
fadds
pop
rclb
mov
in
push
test
int
bound
add
mov
sub
mov
pop
sub
inc
add
fsts
outsb
or
mov
jecxz
pop
dec
dec
in
clc
int3
lds
outsb
jae
mov
dec
lahf
pop
adc
test
and
sbb
cs
and
cli
xor
xchg
std
mov
xor
daa
push
inc
adc
icebp
mov
push
and
rcll
sub
sbb
das
add
cmp
and
mov
ja
cmpl
jl
test
adc
sub
pop
gs
cwtl
mov
xchg
pop
sub
dec
mov
js
shlb
loope
mov
and
mov
add
xor
cmpl
stos
test
imul
inc
mov
jg
add
inc
and
sbb
push
xchg
inc
mov
test
cmpsb
push
int3
in
push
jp
cmp
dec
add
out
jmp
adc
jmp
sbb
mov
clc
clc
mov
aas
add
and
jbe
das
mov
push
mov
cmp
ret
pop
outsl
sub
lods
pop
mov
jns
jae
dec
into
adcb
jae
xor
push
out
jnp
loop
xchg
addr16
mov
out
icebp
jmp
or
dec
mov
or
pop
popa
pop
jae
pusha
pop
xor
or
and
in
or
decl
push
lcall
gs
scas
xchg
inc
mov
inc
mov
fists
inc
pop
out
rcrl
rep
or
andb
add
and
xchg
divb
aam
lret
in
test
jne
sub
inc
out
out
and
sbb
aam
pop
fucom
push
shlb
fiadds
js
ret
in
leave
push
fstp
pop
ds
aaa
mov
repnz
jae
sub
pop
lahf
or
sub
mov
jns
adcl
pop
decl
leave
xor
mov
push
cs
pop
and
inc
push
sahf
addr16
cmc
dec
insb
and
pushl
sub
or
add
cltd
mov
xchg
cmp
pusha
notb
or
out
or
dec
aaa
jo
and
and
jecxz
clc
inc
inc
movsl
enter
mov
pop
js
in
or
or
pop
call
xchg
pop
jne
js
clc
icebp
xchg
ss
loopne
or
fstenv
das
dec
sbb
fstl
xabort
lcall
fcom
leave
mov
or
rorb
mov
mov
pop
sub
or
test
fnstcw
add
clc
lret
mov
scas
lret
or
dec
es
dec
cwtl
adc
push
jne
dec
mov
push
xor
jns
sbb
jmp
das
out
cmp
xchg
dec
fsubrs
sub
jns
mov
xor
testl
sub
add
sub
sahf
jno
cli
dec
nop
pop
lcall
jge
push
or
pop
nop
inc
rclb
or
inc
or
mov
cmp
cmc
subb
inc
test
lds
adc
sub
and
vmwrite
fmull
push
or
ds
adc
fisttps
and
in
add
cmc
in
xchg
mov
mov
jne
jbe
xchg
syscall
inc
cwtl
pop
je
fdivrl
mov
cmc
add
cmp
adcb
dec
or
and
dec
xor
outsl
lcall
jo
out
adc
inc
loopne
mov
jne
movsb
out
fcomip
pop
out
hlt
jl
mov
add
test
mov
add
jno
clc
cmpsb
jnp
in
rsm
lds
mov
xchg
pop
jae
jo
imul
adc
fisttpl
stos
xor
inc
mov
sub
pop
inc
or
call
push
sbb
les
shlb
dec
jne
icebp
xchg
xchg
mov
jmp
in
cmp
scas
push
pop
cwtl
scas
sub
dec
and
popa
mov
popa
stos
insl
outsb
jb
mov
leave
in
enter
sub
imul
sub
fnsave
xchg
mov
pop
sahf
adc
add
lcall
rolb
mov
je
pop
push
ret
xlat
mov
enter
pop
fildl
and
push
sub
cmp
add
cmp
pop
repz
mov
imul
adcl
jmp
outsb
sub
rcr
data16
inc
pop
call
subl
lock
jbe
xchg
xchg
mov
nop
pop
adc
ret
movsb
lea
adc
push
xchg
fistl
jne
dec
xchg
enter
pop
lcall
lods
je
out
cld
aam
loop
push
and
sub
flds
mov
jle
aaa
movsb
xorb
gs
test
jns
adc
iret
fwait
inc
movsb
ret
sub
es
sub
sbb
sbb
stos
cs
lea
sub
call
cli
jb
cmp
pop
push
dec
scas
adc
pusha
lret
dec
xor
jl
lret
sbb
dec
sbb
jmp
movsb
mov
or
add
dec
mov
iret
daa
dec
jle
inc
out
jns
xor
cmpsb
xchg
ss
cltd
xchg
mov
mov
sysexit
add
das
inc
jno
mov
push
shlb
sbb
rcrl
leave
mov
push
sub
jb
movsb
add
fs
cmpsb
jmp
or
xor
movsl
xor
dec
inc
mov
in
mov
push
fidivrs
lea
cmp
loopne
into
or
push
add
dec
adcb
mov
push
mov
push
push
pusha
icebp
mov
popa
xor
loope
dec
lcall
mov
roll
xchg
andl
mov
mov
push
scas
sub
fwait
sbb
testl
jbe
add
aas
int
fldt
cld
push
inc
sbb
insb
ret
in
sahf
in
push
xor
sub
adc
int
xor
js
push
and
les
cmp
repz
call
iret
and
je
jbe
jle
rcr
cmpsl
scas
movsb
mov
add
push
mov
into
adc
jecxz
movsl
mov
inc
pusha
imul
or
sub
inc
jae
or
and
push
xchg
rorb
and
ja
dec
adc
mov
shrb
mov
add
xlat
adc
into
mov
xchg
mov
clc
jo
adc
popa
push
sub
sysexit
pop
sub
xor
adc
pop
loopne
xchg
daa
lahf
ja
test
je
xor
std
aas
push
lock
insb
inc
data16
jbe
fisubs
pop
es
pop
in
ficoms
cld
stc
push
fdivs
in
test
or
xor
stos
movsl
test
movsb
mov
jne
mov
inc
xchg
and
push
daa
out
mov
cmp
push
into
cwtl
push
rcll
or
imulb
mov
mov
icebp
push
fwait
xchg
jl
fcoml
lret
pop
lods
mov
adc
nop
aas
cli
sub
leave
es
add
sbb
test
fxch
cld
js
repnz
imul
leave
xor
pop
add
and
sub
pop
popf
enter
ss
test
sub
leave
out
mov
out
push
xchg
popf
dec
cmp
movsb
mov
push
jl
pusha
les
sbb
and
loope
pop
ret
rorb
inc
in
fidivrs
arpl
xorb
jecxz
popf
movsb
mov
push
adc
sub
or
mov
mov
lea
xchg
jecxz
vpshlq
mov
mov
js
fbld
imul
mov
jecxz
pop
push
data16
std
out
adc
loop
int3
ljmp
div
out
stos
adc
rorl
push
xorb
pop
clc
pushf
xorl
xor
mov
bound
push
pop
push
bound
dec
jb
lock
test
pop
jmp
xchg
xor
outsb
int3
sbb
or
add
add
sbbb
fiaddl
in
jae,pt
orl
xor
sahf
test
xor
cmp
std
sbb
inc
mov
mov
hlt
add
cmp
cs
in
mov
mov
lea
dec
dec
movsb
add
repnz
dec
rol
pop
dec
or
push
sahf
and
jb
popf
imul
sbb
xchg
pop
imul
sbb
add
dec
jmp
inc
sti
pop
daa
dec
daa
cmpb
adc
insl
scas
xlat
mov
mov
pop
adc
int3
imull
or
inc
stc
dec
jne
outsl
push
cmc
fmul
push
scas
jae
mov
push
jno
mov
pop
insb
repz
es
pop
in
les
xor
cwtl
mov
gs
lods
inc
inc
addb
cwtl
movsb
or
lods
xor
inc
mov
adc
shlb
add
into
push
add
jns
repnz
xor
sbb
ret
pop
jbe
in
imulb
insb
inc
mov
jae
dec
ss
inc
mov
mov
inc
rorb
inc
add
jg
imul
xorb
rorb
mov
repnz
and
insb
jnp
insl
insb
xchg
into
out
adc
push
or
rolb
or
sub
movsl
jge
jle
push
mov
ljmp
jnp,pn
gs
inc
and
xor
mov
ljmp
in
enter
mov
inc
mov
cmp
in
xchg
inc
arpl
mov
call
mov
add
sub
shl
sub
imul
arpl
jecxz
rcll
sbb
mov
bound
adc
jae
inc
insb
adc
out
jnp
ret
in
push
sbb
dec
jecxz
jnp
mov
cli
xchg
std
adc
aad
cmp
shlb
cli
and
out
jns
dec
and
loopne
gs
xlat
insl
sub
popf
xor
into
xor
push
sbb
fcoml
jl
xchg
xchg
fmull
rcll
inc
push
push
cmp
pop
sub
ja
xchg
pop
cmc
daa
inc
in
or
pop
mov
mov
dec
loop
out
or
lds
mov
xchg
sbb
sub
sbb
pop
xor
jle
xchg
lods
adc
xchg
gs
adc
and
ds
or
aam
inc
stos
mov
out
jns
movb
xor
loopne
push
clc
cmc
mov
aam
cli
pop
stc
mov
iret
andl
mov
scas
outsb
or
or
rclb
xchg
jno
mov
push
jae
sbb
xchg
leave
lds
out
sbbl
xchg
arpl
add
push
lret
pop
pop
loopne
ss
xor
insl
int3
inc
cmp
cmp
mov
mov
xchg
outsb
xor
loop
sub
shr
inc
sub
adc
enter
push
or
dec
call
js
adc
pop
stc
adc
adc
xor
push
add
popl
sti
jo
rorl
aad
dec
pop
cmp
pop
test
jae
mov
daa
shll
cwtl
imul
xor
cltd
nop
cmp
dec
inc
mov
adc
and
jo
out
scas
scas
jle
movsl
dec
std
fstpt
sbb
mov
xlat
fcomps
divl
sbb
push
ja
lea
cs
aas
xchg
dec
mov
xor
pop
adc
mov
cmpsb
mov
dec
test
adc
test
pop
push
mov
scas
addb
inc
das
dec
cmp
rep
inc
cmp
jno
lahf
xchg
adc
and
mov
mov
mov
sub
in
dec
std
imul
push
in
out
sbb
jbe
jae
or
pop
sbbl
out
rcll
lahf
jge
or
test
adc
mov
out
dec
xchg
js
and
sbb
adc
lock
outsb
popa
movsl
repz
push
lock
add
sti
stos
call
inc
roll
ficoml
rorb
sbb
jo
mov
mov
mov
mov
push
aaa
jnp
xor
jb
sbb
sub
lret
and
cld
cld
cmp
cli
jg
shlb
jb
add
es
and
adc
in
jmp
cmp
sub
sbb
cld
or
mov
lods
pop
add
call
movsl
mov
pop
inc
outsl
mov
mov
dec
cli
fs
fistpll
iret
xor
shll
jno
sub
mov
pop
inc
outsl
or
cmp
dec
and
fmuls
fcomi
hlt
out
mov
adc
sbb
and
sbb
mov
in
mov
jbe
ja
sbb
jecxz
cwtl
jle
sub
cmp
ja
mov
and
or
ds
cmp
cmp
sbb
stos
pop
xchg
loopne
outsb
cmp
add
movsb
xchg
cwtl
jp
adc
or
push
mov
mov
add
inc
jecxz
test
cmp
jp
shld
cli
mov
in
fistps
sbb
je
mov
testb
sbb
jae
xor
stos
dec
cmpsb
add
aad
add
inc
in
jle
adc
mov
lcall
fsubrs
test
jg
outsl
xchg
repnz
push
add
xor
push
ds
add
adcb
push
mov
mov
cltd
xchg
xchg
popf
add
push
scas
xchg
cwtl
jle
xchg
xchg
dec
arpl
cwtl
mov
orb
fwait
inc
mov
inc
mov
lods
outsl
stc
dec
in
mov
imul
repnz
inc
cmpsb
lock
adcb
pop
je
lea
xchg
imul
lods
es
retw
sbb
or
fldcw
adc
xor
jb
jmp
leave
test
inc
lods
jl,pt
scas
push
hlt
sub
push
or
sub
push
cmp
sti
mov
inc
js
xchg
push
and
xchg
pop
lret
rcl
lret
or
sbb
lods
mov
push
ds
popa
pushl
sbb
cli
jne
push
inc
cmpsb
sbb
mov
into
dec
into
pop
or
mov
lock
add
push
cltd
sbb
xor
mov
lret
fs
cmpsb
push
out
or
enter
subb
ror
andb
sbb
loop
xor
mov
push
inc
cmp
fistl
or
mov
shll
cld
cmpsl
nop
mov
mov
rol
and
ja
xor
sub
jmp
cwtl
icebp
or
aam
hlt
or
cmp
push
lcall
mov
shl
jne
test
mov
in
loop
cli
sub
fucom
mov
fwait
mov
push
or
push
pop
lcall
sub
pop
jnp
lds
insb
cltd
fisubrl
lahf
bound
pop
mov
pop
mov
sub
mov
pop
xchg
add
add
jb
outsl
push
mov
jle,pn
adc
leave
push
daa
mov
adc
ret
push
mov
out
jecxz
dec
pop
pusha
ret
arpl
xchg
dec
les
jge
mov
push
mov
loop
shrb
mov
pop
sub
stos
mov
mov
shrb
ljmp
cmpsb
xor
in
push
and
xor
incb
call
mov
call
dec
in
jns
ja
rcr
mov
sub
inc
push
aaa
out
inc
jmp
pop
nop
femms
std
add
outsl
int
mov
and
sub
int3
cmp
in
lahf
ret
sub
mov
mov
cmp
mov
movsl
dec
insb
cmc
loope
ficompl
loop
mov
popl
push
in
xchg
stos
in
xchg
dec
mov
pop
lock
lods
adcl
movsb
sti
test
inc
mov
jb,pn
mov
xor
insb
xchg
std
sar
jecxz
pushf
icebp
jno
aad
xchg
jbe
jo
adc
mov
add
stos
sub
and
outsl
fdivrp
pop
je
imul
jg
mov
repz
mov
iret
sbb
push
cmp
call
fisttps
mov
test
push
xchg
cmc
cmovge
mov
dec
std
aad
jl
rcll
ds
sbb
addb
inc
mov
test
xor
xlat
in
pushf
sub
push
mov
push
cmp
loopne
ljmp
mov
shl
lcall
std
jb
inc
xor
pop
sub
and
hlt
xchg
pusha
pop
and
dec
jle
cmp
clc
push
call
dec
cmp
adc
lock
xchg
xchg
xchg
insb
pushf
repz
xor
test
adc
addr16
dec
adc
cli
nop
push
fcomps
out
stos
and
and
repnz
das
daa
arpl
out
xor
xchg
pop
sub
xor
adc
ret
cmpsb
mov
mov
push
aas
jmp
test
pop
dec
pop
push
push
clc
movsb
call
std
and
loop
mov
cmp
pop
fnsave
bound
jecxz
add
or
pop
push
loop
pop
sub
fxtract
lock
mov
mov
shrl
sti
aaa
in
push
push
das
icebp
inc
faddl
out
push
pusha
shll
inc
push
js
scas
in
pop
and
fldt
dec
out
gs
popa
inc
cmp
fcoml
pop
mov
xlat
push
cmpsl
test
dec
test
ret
mov
jo
or
mov
and
xor
xchg
mov
cmpsb
and
sub
add
mov
lods
inc
pop
mov
sub
add
xchg
in
mov
movsl
inc
or
xor
dec
adc
addr16
sbb
xchg
aam
or
ret
mov
fnsave
lds
call
les
push
push
out
lods
repnz
movsb
xlat
add
dec
das
enter
in
fildl
dec
and
int3
pop
rcr
arpl
cmp
inc
jne
mov
cmp
jecxz
xor
scas
xor
stos
mov
stos
scas
nop
loop
stos
pushf
pusha
loop
fs
sbb
jbe
inc
mov
lahf
insb
shll
daa
or
jne
push
push
decl
and
vmread
fbstp
imul
or
jnp
ficomps
gs
dec
inc
enter
pushf
dec
inc
test
pop
cmp
cmpsl
sub
mov
outsb
lret
test
adc
pop
dec
repz
xor
test
insb
cmp
jno
jno
fisubrs
or
jb
aad
pop
out
dec
jge
inc
rcr
mull
fisttpl
adc
cmp
sub
test
int
push
xor
sub
push
jp
int3
pushf
pop
ss
popa
jl
cmpsb
mov
or
loop
add
daa
lods
xchg
jne
movsl
mov
inc
imul
pop
inc
dec
mov
cmp
adc
and
adc
ss
negb
test
inc
pop
punpckhdq
inc
outsl
fisubrl
xchg
cmpsb
fisubrl
sbb
push
dec
pop
in
push
call
pop
cmpsl
push
dec
test
push
inc
das
shl
cmp
or
sti
in
inc
loopne
inc
loope
cltd
xlat
aas
sbb
inc
adc
sti
sub
ss
or
push
add
repz
xchg
add
movsb
inc
cmp
cs
lods
cmp
aas
mov
push
in
rcrb
push
xor
and
inc
xor
sbb
pop
shll
idivl
mov
mov
xor
lods
das
dec
mov
xor
stos
cmp
lock
fdivrl
lea
add
je
clc
out
or
push
xor
int3
sub
adc
xchg
adc
push
cmc
insl
outsb
cmp
dec
out
scas
out
pusha
push
sti
fcompl
adc
sub
sbb
adc
divb
gs
aas
in
push
iret
stos
add
das
repnz
sbb
jecxz
add
dec
sbb
push
mov
sbb
bound
std
pop
adc
cmp
lcall
adc
in
adc
pop
rcll
pop
dec
xchg
mov
pop
mov
mov
imul
cmp
xor
lcall
sub
xchg
subb
std
lock
and
in
ret
xor
or
mov
rolb
add
mov
aad
cmp
xchg
aas
popa
xchg
scas
inc
sub
out
push
rclb
add
addl
jmp
adc
cmc
xchg
in
lods
xor
movl
iret
xor
push
pop
gs
popf
cmc
mov
aad
movsb
stos
or
or
in
push
xchg
cmc
cltd
pop
mov
fmulp
jl
jb
cmp
pop
sbb
push
inc
cmp
jge
nop
xor
xor
iret
into
pop
pusha
in
ret
int
xchg
pop
shlb
mov
mov
lock
shrl
cmp
xchg
adc
pushl
jae
into
rcr
xchg
cli
inc
pop
out
psllw
and
mov
fisubl
loop
jle
sti
out
lds
test
sti
or
test
movl
sbb
repz
or
fwait
test
cs
es
and
inc
dec
lret
hlt
out
daa
adc
sarl
mov
lcall
mov
js
push
outsl
lock
mov
jmp
adcb
add
push
incl
jb
cmp
js
ret
and
jne
push
pop
push
mov
mov
aas
aas
or
aam
xor
pop
mov
pop
sbb
and
fimull
push
dec
mov
and
inc
adc
imull
cld
flds
and
mov
jmp
outsb
ficoml
dec
mov
cld
sub
fnstsw
lret
subb
bnd
out
xor
sar
mov
or
xlat
jnp
adc
sbb
aam
bound
pop
xchg
lahf
or
inc
adc
push
in
mov
bound
call
loopne
adc
add
dec
mov
and
xchg
inc
jne
sub
jecxz
and
adc
push
notb
adc
push
cli
mov
in
pop
xor
in
dec
dec
dec
cmp
nop
or
and
es
ljmp
enter
push
inc
or
out
mov
ss
dec
loope
xor
pop
pop
out
mov
dec
jb
les
xchg
add
out
push
enter
and
cmp
xor
repnz
imul
lret
pop
xor
ficomps
adc
sbb
aas
jbe
push
movsb
dec
flds
in
leave
and
das
lret
dec
cmp
mov
jnp
sahf
ja
push
je
js
cmp
ret
mov
pop
push
lock
mov
xchg
mov
sti
mov
xor
mov
sbb
flds
dec
xor
daa
mov
xor
cmc
ficoml
jle
pop
imul
xor
pop
imul
xor
ja
shlb
and
out
jns
mov
sbb
je
pop
negb
dec
jo
xor
push
bound
int3
enter
cltd
loopne
repnz
enter
scas
or
arpl
or
divb
pop
sbb
mov
xor
aas
cs
les
adc
xchg
je
cmp
mov
rclb
mov
test
sahf
movsb
sbb
dec
icebp
shl
fnstcw
dec
fldenv
mov
pop
push
lahf
stos
sbb
jge
fmul
xchg
lds
and
lahf
sbb
mov
pop
push
sbb
push
ret
sbb
inc
xchg
icebp
fisubs
cmp
inc
cmpb
jbe
xor
dec
inc
mov
sarb
test
xchg
arpl
and
repnz
mov
rorb
jmp
push
out
push
repz
sbb
pushl
jecxz
sbb
mov
jb
or
push
cmp
loop
pop
or
cmp
lods
test
fcoml
out
mov
ret
adc
adc
in
adc
pop
cmpl
pushf
dec
shlb
aam
ss
fmull
movsl
mov
inc
incb
inc
xor
stos
pop
pop
jl
lea
inc
and
fisubs
pop
dec
push
dec
or
sbb
xchg
xchg
mov
add
iret
jp
xchg
mov
jnp
pushf
call
dec
mov
das
popf
cmp
adc
cmp
test
stc
orb
repnz
ret
int3
pop
sub
cmp
inc
arpl
in
cld
mov
sahf
sub
hlt
dec
dec
cmp
xchg
movnti
sbb
xchg
lock
shll
add
cmpsb
inc
adc
mov
xchg
jle
xchg
in
inc
mov
cli
shrl
fdiv
fsubl
sbb
sbb
ss
mov
sub
outsl
mov
fcoml
pusha
inc
icebp
dec
add
adc
les
push
push
sub
jns
mov
or
inc
fisttps
enter
cmp
ret
push
jnp
and
ficomps
hlt
mov
inc
out
xchg
pop
incl
sahf
xchg
pop
add
sbb
enter
out
mov
pop
jnp
sub
pop
loop
fidivrl
stos
loopne
dec
pop
rorl
mov
add
pop
fimull
test
divb
fisttpl
cltd
loope
adcl
sub
daa
adc
fwait
ja
xor
mov
outsl
push
fidivrs
cmp
rcrb
lret
loopne
or
push
inc
xor
js
adc
cmp
jmp
iret
or
mov
enter
insl
push
aad
cld
adc
fcmovnb
inc
nop
push
in
add
ljmp
or
pop
pusha
lea
cmp
loope
or
shl
sbb
push
xchg
mov
fs
pop
add
test
out
hlt
ds
pop
lea
in
xchg
ficoms
xlat
test
pop
or
int3
push
push
mov
cmp
sbb
negb
sbb
out
xchg
data16
pop
das
cli
add
push
int3
fmulp
in
test
mov
inc
adc
inc
add
adc
xlat
mov
or
incb
jne
dec
sti
sar
js
cli
push
xor
pop
jl
jns
add
test
pop
mov
fbld
les
jle
cmp
dec
test
aaa
sub
jne
test
dec
pop
or
inc
inc
mov
jle
jmp
xchg
lret
or
cli
xrstor
fdivl
push
and
lea
repz
rcrl
mov
cli
sub
push
roll
xor
or
add
fwait
adc
sahf
ficoml
mov
jge
cmp
roll
insb
dec
xorl
fstl
stos
out
pop
ret
ljmp
stc
ret
into
clc
imul
push
pop
test
inc
dec
jb
insl
sub
or
adc
ljmp
pop
cmp
sbb
xchg
jecxz
ja
out
aas
xorl
push
push
repnz
daa
test
jl
add
push
jo
imul
fmul
push
xor
xor
xchg
inc
sbb
gs
sbb
and
popa
mov
add
inc
scas
lock
fsubr
xchg
jp
sbb
ficoml
jnp
push
jecxz
xlat
push
inc
das
and
fwait
add
sbb
inc
ljmp
push
inc
add
add
jae
stc
cmpsb
sub
push
mov
mov
push
cmp
xchg
push
pushf
cltd
ja
fwait
jmp
cmc
mov
lods
mov
mov
mov
cmp
clc
test
nop
rorb
push
data16
lahf
stos
iret
test
mov
aas
stos
movsb
add
shlb
and
dec
xchg
test
aam
cli
cmp
jns
movsl
rcl
push
mov
int
inc
mov
jb
ljmp
cmpsb
sbb
inc
hlt
cmp
sub
jmp
cli
imul
je
enter
and
cmp
push
sub
popf
pushf
imul
imul
inc
gs
xor
xor
pushf
mov
inc
pushf
jp
fbstp
cmpb
adc
imul
cmp
or
pop
sti
inc
cmp
loope
sarl
aad
mov
or
and
and
int
outsl
aad
scas
mov
nop
into
pop
mov
mov
xchg
mov
arpl
mov
cli
mov
aam
ja
dec
add
aam
xor
push
push
push
das
divb
jecxz
pop
leave
movsl
mov
incl
insb
sbb
dec
fcmovbe
lods
jno
pusha
dec
dec
mov
outsl
mov
adc
or
in
das
mov
test
mov
enter
loopne
and
in
inc
inc
scas
loopne
add
fdivs
loope
jmp
loope
orl
lods
loop
xchg
ror
sbb
jb
test
dec
scas
aaa
mov
fidivs
xchg
sub
popa
ljmp
jnp
scas
jbe
cmp
ret
adc
daa
or
mov
pop
dec
add
lcall
dec
orl
sub
out
andb
mov
adc
mov
push
notl
cwtl
mov
cmp
arpl
mov
xlat
mov
mov
xor
add
lcall
mov
push
in
push
pop
sub
in
imul
dec
outsb
in
adc
sbb
movsl
add
movsl
arpl
mov
enter
addb
ljmp
enter
cwtl
adc
push
push
stos
push
mov
pop
pop
shl
push
movsl
call
insb
js
test
or
pop
xor
mov
fcoms
cmp
and
pushf
mulb
iret
push
into
scas
xlat
cmp
fsubl
inc
mov
out
lcall
and
stos
cs
mov
aaa
inc
or
out
adc
sahf
xor
pop
inc
inc
inc
lods
imul
iret
aam
pop
lea
sub
push
aad
test
out
mov
sbb
mov
cmp
jo
dec
adc
or
data16
bound
out
adc
loop
jno
sbb
repnz
adc
gs
cmp
dec
fs
push
pop
lcall
mov
push
jg
pop
mov
sub
push
mov
repz
cs
xor
push
or
lods
lods
mov
jns
out
cmp
mov
fwait
xchg
push
push
ret
inc
push
loop
cmpl
jmp
push
pop
repz
inc
push
inc
mov
xor
test
mov
daa
stos
call
stos
daa
ret
inc
or
add
movsl
adc
es
fcmove
inc
test
leave
pop
xchg
lods
fs
outsl
sbb
insb
mov
xchg
out
mov
jle
addr16
stos
jge
adc
xchg
cwtl
jp
cmp
and
adc
inc
lret
sbb
adc
sub
out
in
mov
and
scas
enter
xchg
shll
in
push
arpl
mov
lods
xchg
scas
pushf
mov
pop
icebp
roll
dec
dec
inc
popa
pop
cmp
xor
jno
mov
add
stos
inc
jp
cmpsl
out
imul
and
scas
movsb
inc
xchg
out
and
es
xchg
or
lock
pop
cs
scas
mov
scas
mov
int
push
pop
or
cmp
lock
jae
add
pop
leave
jmp
sahf
mov
jp
xchg
or
sbb
dec
notl
mov
mov
movsb
jle
or
sti
sub
rcrl
pop
iret
movsb
shll
xlat
mov
push
push
lret
mov
mov
mov
jnp
pop
push
push
mov
mov
xchg
leave
ss
das
lds
test
in
sub
pushf
mov
aas
jmp
test
rolb
fistps
adc
js
aaa
idiv
sbb
add
jg
aam
mov
outsl
jp
mov
pop
pslld
push
das
popf
fidivrs
mov
adc
imul
dec
pushf
fldt
jne
jae
push
jl
and
push
jmp
mov
xlat
mov
js
mov
cmp
ljmp
xor
das
dec
sub
arpl
adc
pop
mov
jnp
push
dec
xor
push
pushf
movb
mov
mov
push
jo
pop
frstor
cld
sarb
pushf
push
cmp
mov
push
cwtl
sub
daa
outsl
pusha
lds
xchg
fxch
xor
fs
or
or
outsb
or
call
add
cmp
jmp
inc
popa
mov
sbb
fcomp
pop
jp
mov
mov
mov
dec
sahf
movsl
xchg
in
shll
scas
xor
cmp
or
cmp
imul
push
or
sub
xchg
sbb
pusha
stos
xchg
dec
leave
shll
aaa
mov
mov
mov
stos
nop
adc
or
es
adc
dec
push
mov
enter
dec
pop
dec
mov
jo
bnd
mov
daa
cmp
out
pop
fstpt
cmp
call
enter
loop
fmul
popf
add
addsubpd
aam
cmpsb
rcl
cwtl
xor
push
bound
fst
mov
inc
imul
xchg
and
pop
outsl
inc
sbb
pop
cmp
repz
subb
shll
fadd
pop
adc
adc
aad
or
add
clc
jmp
sub
lock
rcrb
sub
inc
or
cltd
adcb
xchg
ss
mov
and
out
inc
je
xchg
jl
mov
add
or
jle
mov
jae
into
mov
out
data16
cmp
sbb
jns
mov
aad
fsubr
cmp
stos
fcomps
cmp
cmc
xorl
dec
add
insl
repnz
xchg
inc
and
jmp
into
mov
stos
mov
xor
push
mov
push
push
inc
cmp
mov
xchg
cmp
and
add
out
add
mov
call
mov
adc
cli
xor
mov
sbb
fldl
xor
cltd
push
popf
shrb
push
lret
push
int3
sarb
sbb
leave
add
sbb
push
mov
add
leave
nop
or
sbb
je
pcmpeqw
add
lret
call
fwait
push
aas
in
lods
arpl
dec
mov
cltd
repnz
aaa
arpl
jmp
push
sahf
int
pop
ds
int3
cmp
data16
stos
out
test
not
and
fidivs
mov
rclb
add
mov
daa
into
enter
and
push
sbbb
xor
dec
or
jne
aas
aam
nop
jp
mov
ds
sahf
push
outsb
cmp
lods
jp
inc
outsl
add
nop
lods
ret
push
jns
roll
lea
sbb
in
insl
dec
dec
inc
mov
jno
test
xchg
cmp
sub
add
lret
xchg
xor
rcr
mov
pop
adc
xchg
mov
jg
mov
adc
fisttpll
adc
mov
adcb
testl
shlb
outsl
xchg
pop
repz
incl
xchg
push
fadds
fstpl
mov
sub
mov
mov
mov
mov
push
pop
cmpsl
mov
das
jl
popf
cld
jae
stos
mov
jne
cmp
inc
xchg
sahf
inc
adc
and
dec
xor
xlat
test
pop
xor
dec
lock
outsl
aaa
subb
cwtl
mov
mov
pop
mov
clc
xor
sbb
dec
jecxz
pusha
adc
push
xchg
cmc
jnp
mov
std
mov
cmc
ds
adc
jnp
fisttpll
and
in
sbb
mov
xor
mov
inc
je
mov
pop
test
std
mov
or
dec
imul
pop
push
dec
xchg
loope
lock
pop
mov
push
in
popaw
inc
cld
xor
fcompl
cmpsl
add
test
insl
sbb
fst
jmp
xchg
push
cmp
jle
xlat
push
std
jo
clc
popa
jl
xchg
mov
hlt
ja
test
jmp
lds
push
scas
je
stos
add
aam
clc
add
popf
pop
movb
adc
add
sub
jg
pusha
mov
adcl
dec
das
out
add
js
dec
mov
pop
jae
cmc
subl
decb
pop
sub
repz
push
fidivrl
xor
xor
mov
shrb
jecxz
mov
movsl
dec
push
cs
push
cmp
mov
sub
push
and
pop
popa
and
cmc
xchg
faddl
aam
push
push
rclb
mov
repz
scas
add
inc
dec
xor
push
pop
inc
mov
lods
adc
sub
add
outsl
in
pushf
xorl
add
cmp
sbb
popa
out
sbb
divl
bound
mov
sbb
ljmp
lahf
jecxz
test
lea
mov
mov
sub
jp
pop
imul
out
sahf
lods
sbb
outsl
aas
jge
aad
jecxz
les
out
scas
rcrl
enter
jl,pt
ss
lds
lods
icebp
sbb
pushf
sub
inc
inc
aad
push
out
fsubrs
inc
and
xchg
pop
rclb
int
subl
inc
push
test
mov
js
es
aaa
inc
and
sbb
outsb
imull
jae
or
adc
js
imul
or
in
jne
xchg
stos
mov
pushf
iret
push
insb
jnp
push
or
decb
push
jp
cmpsl
imul
jmp
daa
movsl
stc
stos
mov
xor
jbe
loopne
pop
and
mov
pop
divb
js
xor
adc
sub
es
daa
stc
sub
xchg
or
pop
push
dec
jae
jne
adc
and
push
sahf
test
jne
push
xor
fsts
push
arpl
mov
mov
out
or
cmc
inc
iret
dec
stos
popf
inc
push
jnp
test
cli
adc
add
ljmp
jl
hlt
add
dec
rcr
daa
xchg
add
repnz
adc
sbb
jg
cmovo
xchg
xchg
mov
loopne
aad
adc
cmpsb
inc
push
mov
dec
pusha
mov
jmp
push
icebp
aam
or
dec
out
subl
mov
testl
stc
repnz
clc
mov
insl
jb
push
mov
movsb
sbb
cmpsb
dec
stc
int
dec
pop
xlat
sbb
mov
jle
lcall
xchg
out
pop
es
xor
cmp
jl
inc
in
push
jmp
pop
sbb
outsl
xchg
xorl
pop
lock
pop
mov
ja
out
jae
push
jle
or
mov
hlt
dec
sbb
rcrl
cltd
fnstcw
sbb
inc
xlat
and
sub
pusha
mov
xchg
or
xchg
icebp
sbb
mov
mov
xor
mov
cs
jmp
and
mov
dec
fisttpl
icebp
mov
jle
cmp
cmp
loop
data16
movsl
xchg
lea
adc
rcll
mov
mov
pop
std
lret
and
cmp
xchg
out
imul
loopne
mov
jno
out
push
add
or
pop
xor
out
ljmp
adc
pushf
adc
rorl
or
addr16
daa
testl
or
lea
data16
ret
jne
test
adc
and
xlat
lods
je
mov
std
add
mov
push
mov
gs
xorb
jmp
div
lcall
push
repnz
mov
sbb
outsb
dec
add
lods
gs
or
lcall
in
push
mov
cmpsl
xor
es
frstor
pushf
inc
xor
or
imul
xchg
jecxz
clc
adc
cmp
and
jl
sub
fwait
mov
testl
jmp
cwtl
js
shlb
bswap
cmpsb
aas
xor
clc
sbb
cltd
mov
cli
and
fcmove
mov
adc
mov
sbb
or
data16
outsl
jo
or
dec
cld
pop
mov
jle
cmp
stos
sbb
inc
mov
aad
ljmp
fsub
jo
dec
jbe
lea
sub
jg
ficoml
mov
mov
push
mov
ret
outsb
popf
cli
and
mov
fsubr
sbbl
push
insl
add
mov
lret
xchg
outsb
dec
add
mov
addl
fcoms
jns
int
or
outsb
push
pop
mov
sbb
pusha
mov
data16
push
mov
sarb
and
icebp
or
cmp
push
push
lods
roll
shll
in
mov
lods
test
sarl
popf
mov
adc
inc
popa
sub
or
lcall
mulb
mov
ljmp
or
leave
negl
pop
dec
je
jae
mov
xchg
repz
repnz
push
scas
lds
mov
cli
cmp
pop
or
sub
inc
jl
insb
fwait
dec
xor
movsl
js
in
fwait
jb
jb
xor
dec
ss
xor
addr16
cld
les
cmp
xchg
sub
mov
movsb
xor
xchg
xor
inc
dec
outsl
pop
sbb
xor
xor
inc
sbb
and
scas
push
nop
pop
xor
fcoms
adc
jmp
mov
fs
sbb
cmp
stos
jp
inc
push
testl
jno
push
inc
rcrl
lcall
mov
into
loop
fcompl
es
push
jle
outsb
scas
fisubrs
idivb
mov
dec
notl
rorl
outsb
push
fistps
das
and
imul
repz
stos
push
push
or
gs
adc
xor
sbb
mov
fstpl
adc
sbb
xor
in
and
pop
xor
dec
enter
and
push
mov
sub
iret
aam
dec
pop
rcll
sbb
pop
sub
mov
jnp
and
mov
push
popf
out
int3
adc
mov
aas
daa
lret
cltd
test
push
xor
sub
mov
pop
fnstcw
arpl
arpl
call
popa
push
inc
dec
mov
nop
mov
and
movb
stos
xorb
int3
xchg
sbb
jmp
movsb
mov
push
in
insb
aam
add
daa
data16
mov
cmc
mov
notl
mov
imul
dec
mov
jns
es
movsb
mov
mov
lea
adc
std
gs
scas
or
mov
lahf
xchg
fistl
jno
sbb
fs
mov
cmp
xchg
xchg
jmp
fildl
enter
adc
xchg
add
fimuls
andl
fldcw
iret
add
xor
and
mov
adc
cmp
lret
xchg
lret
outsb
ss
sub
or
or
arpl
insb
les
sub
and
outsb
ss
xor
push
xor
js
test
sbb
mov
and
jmp
add
mov
inc
movsb
and
sub
cmp
std
cmp
xor
and
addb
in
imul
pop
jne
bound
aaa
jnp
jp
adc
cmp
and
bnd
sarb
outsl
adc
test
jb
dec
pop
sbb
pop
xchg
add
sbb
in
js
mov
stos
iret
push
cmpb
in
pop
push
popa
out
inc
repz
xchg
push
adc
inc
inc
ds
push
mov
sub
xor
mov
mov
xlat
fidivs
arpl
push
push
cmpsb
repnz
dec
stc
roll
mov
mov
mov
dec
dec
fisttpl
lahf
and
add
lcall
in
aam
cwtl
in
mov
dec
pop
or
sub
xchg
aaa
rcll
push
adc
add
mov
cmp
int3
xchg
cld
gs
xor
inc
jns
mov
fcomip
shlb
mov
cmp
mov
or
aas
xchg
lahf
push
fistps
repz
popf
pop
pop
jl
add
int
leave
lock
inc
and
xor
imull
aaa
add
mov
ret
adc
mov
int
jnp
inc
aad
addr16
repz
addr16
push
push
push
cli
cli
push
pop
fidivs
inc
cmp
lret
in
data16
jo
jbe
pusha
sti
jle
cs
jmp
dec
mov
cli
clc
adc
jne
add
mov
mov
xor
or
mov
test
subl
cmpsb
mov
xor
dec
stos
repnz
sbb
call
shrl
add
sub
or
imul
hlt
icebp
mov
in
rcr
mov
pop
dec
or
jns
les
pop
push
fnsave
add
mov
jl
mov
xchg
pop
mov
xchg
push
out
mov
xor
or
xor
xchg
outsb
jno
out
fisttps
add
into
fs
xchg
out
add
ret
cmp
pop
sbb
or
push
cmp
movsl
push
lods
mov
jb
mov
int
xchg
fisttpll
add
push
mov
repnz
outsb
mov
loope
es
ret
gs
mov
in
movsb
aam
stc
jl
add
sub
popa
mov
jae
lret
xor
scas
and
push
xchg
cmp
pop
mov
cmp
pop
repz
mov
or
js
cmpsl
push
ja
in
and
or
cld
or
mov
and
scas
sub
mov
lock
insb
insb
adc
xchg
fsub
xor
or
dec
fistpll
loop
pushf
lret
inc
inc
in
mov
inc
jle
adc
mov
dec
int
fsubrs
and
lods
cltd
cmp
cmc
xchg
lret
adc
cmp
lock
adc
iret
fwait
ss
mov
out
inc
stc
jno
dec
aad
mov
or
test
test
and
mov
inc
jl
in
mov
out
mov
jbe
push
and
sub
adc
dec
push
testb
iret
adc
shlb
cmp
mov
add
cmc
jl
sbb
lods
cltd
jg
cmp
repz
push
fidivrs
xchg
lcall
addr16
inc
loope
pop
xor
xchg
push
mov
inc
das
inc
mov
divl
mov
xor
stos
outsl
adc
data16
aam
mulb
xchg
add
add
in
jae
sbb
jbe
out
pop
dec
mov
cltd
mov
or
movsl
cld
cwtl
lds
sbb
into
test
or
das
ficomps
cltd
or
icebp
mov
dec
mov
insb
mov
arpl
jne
sub
add
or
dec
fs
mov
or
movb
hlt
xchg
das
mov
jmp
ljmp
pushf
movb
popa
vpgatherqd
sarb
testb
sbb
pop
push
rorb
xor
push
pop
add
aad
movsb
mov
ljmp
xchg
dec
imul
lock
sub
jae
push
iret
test
mov
add
mov
iret
mov
push
xchg
sub
lea
push
sub
imul
data16
cmc
mov
mov
sbbl
sub
test
mov
stos
mov
js
dec
ds
ret
inc
imul
cmc
xchg
mov
add
sub
sub
sbb
push
push
leave
std
test
push
and
dec
movsl
lods
and
test
and
hlt
add
lret
gs
cmp
mov
mov
mov
fcoml
into
sbb
push
xlat
movsl
or
dec
je
dec
sub
push
lds
jnp
std
out
loop
jp
mov
std
cmc
adc
bound
mov
out
pop
xchg
shlb
jae
mov
sbb
imul
rcrb
sbb
adc
jo
pop
das
jmp
xchg
jle
mov
outsb
or
sahf
lea
xchg
ss
inc
scas
mov
jne
dec
adc
stos
xorl
scas
pop
nop
imul
fisubl
push
adc
mov
enter
imulb
sbb
jnp
loope
pushf
add
fbstp
ficoms
pushf
jge
aaa
mov
fs
add
mov
adc
call
add
stos
movsl
lea
mov
je
dec
mov
xchg
mov
dec
outsb
mov
sbb
icebp
inc
bound
sti
xorl
ds
int3
mov
pop
and
xor
jnp
and
fmuls
cmp
movsl
dec
loop
insl
movsl
mov
sub
movsb
or
das
in
cmc
inc
jecxz
push
add
push
pop
xor
adc
daa
or
xchg
xor
push
push
subb
gs
fcomps
cmpsl
aam
in
aad
scas
in
subb
out
int3
jne
sarl
or
jmp
stos
popf
push
add
mov
sub
sbb
dec
push
loopne
or
out
lds
mov
adc
arpl
sahf
out
bound
pop
loopne
lret
and
sbb
gs
xchg
pop
daa
mov
test
in
sub
cmpsl
movl
aad
fisubs
mov
idivb
push
xchg
fisttpll
andb
adc
add
ret
jl
sbb
nop
call
xorb
mov
sbb
mov
ret
into
and
push
pop
dec
in
jne
rorl
mov
scas
rcrb
xorl
or
mov
lcall
fcmove
aad
test
lret
addr16
lret
loopne
outsb
dec
adc
dec
add
test
repnz
leave
sbb
push
sbb
enter
and
pop
sub
aam
pop
data16
incl
in
stos
push
mov
sbb
pop
adc
jecxz
std
and
test
adc
out
out
loop
ds
mov
out
out
ss
leave
adc
roll
arpl
mov
dec
mov
mov
daa
out
dec
adc
adc
mov
mov
pop
enter
xchg
gs
xor
or
mov
push
insb
jl
adc
pop
xchg
push
rcrb
ret
and
inc
sbbl
add
loop
movsb
int
outsb
shl
loopne
dec
lods
mov
cmp
or
push
outsl
rcrb
stos
imul
call
inc
lahf
sbb
jo
jns
sbb
xchg
or
outsb
call
testl
cltd
incl
test
mov
add
test
ret
aam
sub
mov
stos
fbstp
fptan
mov
int3
or
rcll
add
jecxz
aad
xchg
jb
push
mov
test
push
fcomp
mov
or
mov
adc
inc
sahf
repnz
inc
fcoms
jno
cmp
sbb
cmp
push
push
adc
add
scas
popf
xchg
inc
cld
mov
lds
lods
xchg
iret
lret
repz
loopne
ret
sbb
adc
jns
mov
cmpsb
mov
inc
scas
cmp
test
or
int3
mov
int3
dec
stos
add
std
sub
ljmp
sbb
jg
xor
mov
int
psubusw
xchg
call
push
cmp
push
or
or
addl
out
and
mov
nop
out
mov
add
push
xor
imul
jne
popf
mov
jb
or
push
mov
push
push
ret
pop
mov
jne
push
lods
aad
int3
mov
mov
xor
mov
in
pop
pop
sub
ljmp
rcll
sbb
lcall
loopne
xchg
sbb
or
rcll
dec
add
mov
insl
push
gs
push
adc
scas
xchg
mov
cmpsb
push
out
inc
dec
xchg
push
les
inc
push
aam
xchg
movsb
xchg
or
lcall
cwtl
stos
daa
lods
jae
std
fisubs
xor
or
lds
pop
das
jns
mov
shrb
rorb
ret
aaa
repnz
out
ficompl
inc
dec
cwtl
add
add
movsb
xor
sbb
xchg
insb
dec
cmp
daa
add
push
inc
jge
mov
or
out
inc
fwait
add
mov
roll
xor
cmpl
in
divl
pop
notl
mov
jg
hlt
jle
cwtl
xchg
dec
pop
loopne
xchg
insl
jno
or
lods
pop
mov
sub
rcrb
sbb
cld
rcrb
xchg
clc
inc
jno
movsl
into
jns
call
arpl
cmp
loopne
pop
mov
xor
add
push
push
xchg
dec
out
mov
movlps
mov
adc
sbb
ret
adc
dec
out
cmc
xchg
aas
or
aad
movsb
cmpsl
incl
xor
jge
mov
call
stos
clc
mov
fldenv
into
test
call
pop
mov
cltd
cli
lahf
cli
loop
icebp
data16
or
loope
push
inc
push
jl
dec
xor
mov
ret
xor
out
push
or
jne
push
jae
mov
movsb
jmp
std
rorb
leave
push
test
mov
pmulhuw
or
sbb
rol
adc
add
nop
and
and
mov
mov
and
push
lock
sub
cli
out
loope
and
popl
loopne
adc
and
in
add
stos
sub
inc
pop
popa
dec
xchg
popa
fxtract
test
mov
push
lret
sbb
in
mov
xchg
fidivl
sub
ret
mov
imul
movsl
push
insl
sbb
test
or
adc
outsb
jge
and
jg
repnz
popa
sahf
push
ret
ficoml
in
notl
and
mov
pop
inc
mov
jge,pn
ja
ss
inc
fiaddl
or
mov
sub
adc
pop
mov
jle
jle
test
lret
iret
and
out
ficompl
inc
cmp
and
leave
sub
xchg
imul
or
std
inc
mov
mov
dec
cmp
sub
jae
popf
cmp
insl
mov
push
or
inc
and
leave
mov
mov
jg
cli
mov
sub
stc
iret
mov
xchg
xchg
inc
xor
divb
mov
scas
rorb
xor
pop
sbb
inc
sarb
mov
mov
dec
fs
and
fdivl
add
sub
add
mov
cmp
sbb
popa
push
js
xor
call
test
sub
rol
js
jl
loope
mov
out
ret
arpl
pop
add
pop
cld
push
scas
and
pop
das
shrb
mov
jns,pn
shlb
jg
push
or
push
push
out
dec
adc
mov
inc
pushf
test
lret
lds
stos
mov
daa
cmpsl
lret
std
push
nop
out
cli
sub
fwait
or
leave
call
les
cs
push
mov
std
das
and
xchg
sub
cli
data16
jno
pop
jge
loop
int3
fwait
cltd
data16
mov
rcll
lahf
lret
sbb
and
sbb
das
fsubrl
fstpt
scas
dec
push
mov
fistps
inc
rolb
popf
add
push
and
dec
mov
lds
scas
out
outsl
xor
sbb
xchg
mov
cld
ljmp
stos
push
cs
stc
aaa
push
dec
jns
push
inc
pusha
and
xchg
push
shll
insl
sub
lret
xchg
pop
sub
enter
je
mov
sub
fiadds
rcll
popf
pusha
xor
inc
popa
jnp
shlb
fmuls
orb
stc
mov
dec
rorb
inc
pop
pusha
sbb
inc
mov
or
mov
ljmp
jne
mov
mov
pop
and
fcoml
out
sti
nop
in
add
mov
xlat
popa
loopne
push
dec
inc
or
inc
dec
pop
mov
ds
mov
fcomps
pop
sbb
mov
jge
or
mov
cmp
inc
push
dec
push
push
mov
rol
sbb
mov
scas
incl
outsb
shld
movsb
ss
int3
je
popf
stc
mov
jmp
ds
ss
dec
dec
adc
loopne
dec
fcmovnb
mov
les
mov
fwait
lea
xchg
hlt
ret
push
xchg
inc
mov
mov
popf
enter
sbb
adc
adc
sbb
stos
nop
imul
and
xor
dec
cli
movsl
cltd
mov
mov
out
fiaddl
inc
repnz
push
ja
fisttps
sub
fildll
shrl
mov
pop
jp
and
mov
mov
cmp
cmpsl
jecxz
jb
decl
cmp
fsubr
jae
push
hlt
clc
cmp
call
ja
xchg
mov
jmp
xchg
daa
fsubrs
add
push
sub
cwtl
sti
sbb
out
mov
sbbb
xor
mov
xchg
lods
movsl
mov
jnp
aas
push
mov
inc
inc
scas
or
jo
stos
in
inc
loope
stos
xchg
sbb
push
rcll
pop
xor
push
dec
lret
cmpsb
sar
test
cmpsb
test
fucompp
leave
mov
cmpsb
movsb
xchg
es
les
lods
xchg
insl
dec
ja
sub
lahf
pop
leave
movl
rcll
mov
pop
mul
inc
sbb
imul
out
cwtl
jle
jno
sub
idivb
jg
sub
mov
loopne
ret
hlt
mov
jp
out
outsb
xor
and
iret
sbbb
mov
push
push
sub
fwait
jb
mov
lret
lret
clc
std
pop
jge
sbb
lret
in
adc
jl
and
cmp
jo
or
or
or
or
xor
pop
mov
mov
jge
cmp
sbb
add
bound
test
cmp
insb
std
insb
imul
sbb
int3
mov
and
lds
rcl
adc
lret
jle
dec
scas
test
ret
and
loop
in
jae
sbb
cwtl
inc
shr
fistpll
ret
or
push
je
xor
insb
mov
add
das
fisubrl
test
stos
mov
xlat
lock
lds
fadds
sub
iret
lods
jmp
cmpb
enter
jg
mov
xchg
neg
cmpl
jge
stc
ja
xchg
xchg
jnp
mov
mov
pop
mov
aaa
pushf
mov
push
push
sbb
das
add
sarl
xchg
int3
cmp
dec
inc
xor
ret
les
jge
cmpsl
outsl
pop
icebp
cmp
addl
mov
add
adcb
fprem1
xor
ret
mov
je
jb
inc
dec
mov
mov
pushf
pop
pop
into
cwtl
popa
mov
pop
xchg
mov
insb
data16
es
pop
shll
in
push
mov
push
mov
insb
jl
sarb
stos
cmp
insl
aas
test
mov
cmp
or
xchg
dec
scas
aam
or
mov
jmp
mov
mov
sub
fwait
call
sti
shlb
mov
enter
and
push
int3
inc
sbb
pop
fiaddl
in
pop
pop
imul
or
lock
cmpsl
push
add
pop
cmc
xor
cmp
xchg
mov
mov
mov
repz
rcrl
cs
push
push
mov
mov
in
rorl
pop
inc
push
push
fucomip
ljmp
push
xchg
aaa
movsl
cltd
adc
sbbb
inc
fistpl
inc
push
inc
xchg
test
in
jae
mov
das
inc
loopne
and
push
iret
sbb
jb
adc
cmp
pusha
test
inc
pop
call
lret
cmp
out
xchg
lock
popa
or
xor
int
pop
fs
pop
data16
xor
js
lea
ds
enter
jmp
stos
jno
inc
aam
icebp
into
in
sub
inc
std
mov
xchg
ds
dec
mov
mov
cmc
sbb
pusha
jl,pt
adc
inc
push
icebp
mov
mov
xchg
mov
repnz
cmc
lods
mov
add
sbb
repnz
gs
aad
mov
or
call
ror
add
mov
iret
int
mov
jmp
pop
push
in
dec
push
mov
mov
add
pop
push
dec
aas
ficompl
std
or
xor
dec
pop
sub
push
sbb
into
ss
xchg
jle
les
and
sub
push
mov
mov
into
fistl
sub
jmp
or
xor
aas
pop
xchg
fistpl
jbe
data16
jb
or
xchg
rorb
xchg
inc
ret
jnp
sub
add
inc
fmuls
jns
shll
xor
iret
mov
lods
mov
push
pop
xchg
mov
lahf
cs
stos
addl
xchg
lret
sbb
aas
scas
movsb
sti
fistl
dec
xchg
ss
push
dec
mov
data16
jo
stos
into
in
xlat
jge
lahf
dec
lcall
sar
movsl
and
repnz
dec
or
roll
pop
popa
loope
aad
mov
jmp
bound
or
push
mov
jae
lds
fisubrs
int
jle
push
lods
inc
mov
mov
sub
push
in
jae
xlat
or
jno
mov
mov
mov
add
mov
and
adc
cmpsb
xchg
lahf
and
xor
test
push
loopne
mov
insb
rcrb
xchg
mov
icebp
int
inc
dec
dec
mov
movsb
cmpl
cmp
and
fnsave
shll
sbb
dec
xchg
adcb
repnz
fdivr
sub
fs
adc
mov
dec
out
shrl
mov
push
jmp
mov
packuswb
add
in
pop
or
xor
inc
pop
xchg
or
fstl
mov
aad
cltd
aam
sahf
loopne
test
lahf
sahf
inc
sbb
push
movsl
pop
mov
pop
jle
mov
pop
push
add
adc
test
or
scas
test
xchg
movsl
mov
rcr
xor
mov
dec
sub
fucomip
push
xchg
jne
mov
mov
xchg
idivl
das
inc
add
mov
les
addr16
cmp
mov
add
xchg
repz
add
sahf
mov
jecxz
subl
mov
cmp
std
xor
mov
call
mov
pusha
push
sub
bswap
call
inc
repz
xor
inc
js
mov
popa
push
jb
dec
jo
notb
in
adc
dec
pop
cli
lret
mov
cmp
in
xchg
or
jo
out
push
jl
pushf
mov
es
push
fs
in
stos
mov
push
adc
ljmp
cmpsb
outsb
jns
mov
adc
push
popa
jns
add
imul
inc
pop
out
jmp
dec
loope
shll
ds
out
arpl
or
jg
sbb
mov
sbb
aam
push
inc
dec
mov
jns
lret
pop
xchg
mov
movsb
cmp
shll
andl
out
lods
mov
mov
mov
adc
into
std
mov
outsb
mov
jp
test
or
inc
mov
ljmp
sarl
jg
push
inc
in
outsl
in
xchg
mov
adc
mov
lret
dec
fiaddl
jecxz
gs
stos
int3
call
xchg
out
sahf
sbb
push
xor
or
mov
idivb
out
adc
mov
aas
dec
xchg
test
push
sbb
cltd
inc
cltd
ljmp
mov
xor
adcb
les
or
bound
add
sub
hlt
xor
ljmp
aad
iret
shll
pop
or
fldl
sub
rcrb
pushf
inc
insl
and
gs
dec
xchg
stc
outsb
cmp
pusha
jge
mov
sub
gs
mov
push
pop
cmp
lds
nop/reserved
and
inc
rcr
add
mov
fwait
cmpb
mov
out
rcl
out
gs
sahf
test
push
push
mov
adc
in
out
mov
or
adc
out
add
icebp
and
cmp
sbb
ret
shlb
dec
pop
push
xchg
cmc
outsb
dec
or
sbb
mov
mov
push
loope
inc
daa
fcomp
cmp
lods
mov
mov
or
lcall
scas
lods
pop
jns
jb
std
int3
xchg
roll
adc
js
aaa
sub
in
clc
inc
cmp
xor
jbe
pop
sahf
xchg
and
and
test
sti
push
push
or
hlt
fstl
bound
arpl
mov
sahf
pop
jae
xor
xchg
adc
dec
sub
int
outsl
cmp
jo
or
in
in
aas
mov
jbe
add
lahf
mov
popf
jnp
jns
push
or
dec
inc
aaa
pop
dec
inc
sub
in
hlt
mov
mov
aas
push
xchg
cltd
push
call
pop
xlat
outsl
inc
in
dec
aaa
xor
lock
sub
and
jge
icebp
sub
scas
jle
clc
dec
scas
pop
mov
nop
cwtl
int3
ss
js
dec
sbb
mov
adc
ds
negl
xchg
inc
and
ds
das
pop
cltd
int
int3
pop
mov
daa
inc
ret
inc
xchg
mov
cli
mov
dec
sub
xor
insb
mov
adc
jl
jnp
imul
adc
pusha
sub
lret
cwtl
jbe
push
mov
aaa
in
sub
xchg
or
and
fs
or
mov
xor
popf
cmp
and
pop
out
lret
xchg
fmuls
subl
cli
or
and
mov
sbbb
mov
jl
shrb
iret
sub
mov
add
xchg
push
adc
dec
mov
fdivrl
xchg
cwtl
and
hlt
lret
fcomps
push
dec
adc
lcall
xchg
dec
and
test
fidivrl
dec
inc
or
aad
inc
cmp
mov
clc
push
arpl
jne
mov
lahf
mov
pushl
push
mov
mov
insl
inc
mov
sub
add
mov
pop
jns
std
mov
sbb
scas
cmp
outsb
jae
test
in
mov
mov
cmpl
outsb
dec
ja
inc
mov
out
dec
outsb
dec
sub
jne
jbe
dec
imul
fiaddl
and
out
out
and
arpl
popf
push
or
xor
jge
and
sub
movsb
cmp
xchg
xor
mov
cld
call
inc
repz
dec
xchg
fwait
aas
mov
and
sysenter
ret
ds
inc
repnz
pop
out
pusha
in
cmp
fistpl
sub
adc
inc
sbb
push
test
jmp
adc
push
icebp
sbb
inc
jl
pop
sub
ljmp
sbb
push
icebp
xor
adc
ljmp
movsl
or
xchg
mov
mov
dec
ljmp
adc
sbb
fcmove
cmc
dec
bound
mov
ror
ret
js
inc
std
mov
popf
mov
jl
loope
ror
jno
pop
xchg
dec
push
xchg
lea
pushf
out
movsl
insb
sub
add
addr16
jno
sub
mov
pop
cmp
push
xchg
pop
shlb
adc
mov
sub
in
add
popl
inc
mov
jno
mov
test
insl
push
mov
into
jae
movsb
inc
rep
dec
outsb
mov
stos
dec
cmpsl
int3
mov
cmp
or
ss
lret
jb
mov
sub
mov
jnp
es
sbb
sub
lock
inc
cmc
shlb
shrl
fwait
mov
lahf
xor
lahf
shrb
mov
cmpsl
test
scas
xchg
aaa
es
lds
cmp
movsb
dec
shl
pop
int
fmulp
dec
push
xchg
push
inc
cld
sbb
stc
jnp
sub
pop
sub
mov
lock
and
inc
stc
aas
gs
jecxz
push
sbb
mov
jmp
es
adc
int
xchg
jle
pusha
cs
aam
cli
jo
mov
push
orb
jbe
cli
dec
xchg
mov
repz
sbb
aam
xor
pushl
jo
lods
ret
icebp
mov
and
pop
sbb
push
arpl
mov
js
and
iret
mov
add
das
push
push
sub
sbb
sub
push
jl
pop
jnp
push
insl
sbb
cmp
mov
iret
dec
lods
nop
sub
icebp
dec
lahf
xchg
dec
scas
in
stos
enter
outsb
mov
pop
mov
test
shll
daa
adc
inc
dec
sbbb
mov
mov
out
mov
in
mov
and
fcoms
loope
jge,pt
in
xor
fwait
xchg
lea
int3
lahf
lcall
inc
ja
inc
mov
dec
mov
cmp
andl
push
xor
mov
push
lcall
jge
xchg
push
cli
and
testl
mov
ja
sbb
xlat
lods
int3
xchg
insl
rcrb
sti
sub
xor
xlat
inc
test
fst
jo
cmp
add
out
mov
je
filds
sub
cmp
rorb
mov
sub
mov
subb
mov
push
cmc
add
les
jns
or
arpl
rorb
js
cmc
mov
insl
cmp
and
mov
imul
ret
pop
cmpsl
push
dec
out
ljmp
ret
jno
scas
lods
and
dec
faddl
or
mov
or
out
or
out
mov
je
push
aas
jecxz
xorb
mov
sub
fisubs
loopne
cmp
xchg
xor
jbe
or
inc
cmp
jns
xor
jbe
pushf
pop
jo
push
jle
and
lret
jmp
sbb
sbb
ja
mov
mov
cmp
clc
cmp
aam
mov
dec
out
loop
cltd
lret
repnz
mov
mov
ror
je
mov
xchg
sub
cmpsl
mov
rcr
aas
mov
pop
int3
shll
das
or
mov
pop
cwtl
sbb
jmp
insl
sub
ficoml
cmpsl
push
jbe
enter
inc
or
or
lods
push
test
lds
adc
cltd
push
adc
cwtl
repz
jae
int
aam
rorl
call
jecxz,pt
and
push
loopne
mov
cs
jnp
aam
ffreep
or
in
mov
sbb
push
icebp
mov
jbe
fcoml
inc
stos
push
aam
xorb
mov
ret
sub
xor
adc
fcompl
push
mov
mov
leave
bound
pop
sub
pop
mov
adc
out
jg
push
sahf
mov
cld
addb
test
fsubl
lods
movsb
xchg
aaa
jnp
outsb
int3
sbb
sub
jp
mov
cwtl
or
add
xchg
outsb
into
jecxz
xchg
mov
movb
divb
mov
aam
rcrl
loop
test
aas
shl
xor
ret
into
lret
cld
add
jns
in
adc
dec
daa
fwait
out
or
add
cmp
pop
nop
imul
jbe
enter
in
jge
repz
mov
sub
adc
sbb
dec
mov
xchg
loope
arpl
xchg
and
fwait
add
xchg
imul
call
and
and
out
in
cmpl
jnp
lcall
hlt
xor
jbe
dec
mov
mov
int3
in
xorl
into
xor
test
dec
in
je
xchg
sub
xchg
loop
enter
cltd
pusha
push
sub
sub
dec
push
push
jle
xlat
movsb
pop
push
stc
add
pop
add
out
lahf
mov
pop
test
call
cmp
sbb
mov
or
pop
inc
out
push
push
or
sub
xlat
insb
adc
sbb
enter
cs
cld
jnp
stc
mov
divl
loope
add
clc
daa
push
out
xchg
js
cmp
lock
mov
sbb
lock
and
mov
shrl
lea
sbb
jns
xchg
out
loope
push
hlt
and
cmp
or
jecxz
call
mov
inc
mov
and
ds
add
cmc
aas
xor
lods
xor
lcall
cs
lods
xlat
or
fidivl
sbb
std
fld
insb
aas
mov
xor
and
or
cmp
add
sbb
data16
dec
loop
pusha
dec
fildl
lods
mov
sub
mov
sub
mov
lahf
mov
jecxz
mov
cmp
adc
test
mov
mov
adc
cmp
dec
jge
faddl
add
arpl
jb
and
or
jge
xchg
xor
sub
sub
dec
mov
mov
test
adc
loope
push
xchg
push
push
daa
cmpsl
pop
shlb
push
pop
daa
lods
idivl
mov
ljmp
out
fbld
orl
sub
stos
mov
data16
subl
mov
in
hlt
lea
sub
data16
adc
dec
mov
add
jmp
and
lahf
or
push
mov
shll
test
jmp
pop
cli
mov
aam
push
pop
sbb
mov
pop
enter
out
cmp
insb
push
addr16
mov
and
testl
fwait
mov
jno
sbb
call
push
rcrb
mov
cli
mov
scas
je
xor
lea
mov
fdivs
cli
mov
cmc
mov
jp
loop
lret
cmpsl
rclb
mov
hlt
mov
xchg
fsubrl
cmc
mov
inc
mov
nop
cmp
shll
roll
xor
aam
sbb
or
mov
test
push
cmp
sub
add
dec
sub
sub
mov
dec
fs
xchg
cmp
sarb
mov
cmpb
fnstenv
flds
or
repz
dec
push
push
scas
arpl
mov
push
scas
sbb
aas
fcoms
lods
pop
adc
jecxz
out
fldl
jbe
inc
shlb
into
xor
or
mov
sbb
pop
out
cmpl
call
add
scas
gs
push
leave
and
cmp
stos
pop
xchg
jge
inc
add
lods
daa
stc
arpl
cmp
stc
mov
lods
ja
hlt
dec
outsb
cmp
or
js
rcll
push
fsubrl
inc
clc
stc
lods
inc
or
sbb
test
adcb
movsl
cltd
xchg
in
sub
lods
roll
mov
addr16
jl
aas
mov
pop
loope
repnz
fldcw
daa
lret
test
sets
fucomi
cmp
rcl
or
push
es
stc
add
lds
jne
xchg
mov
xchg
cs
or
orl
or
inc
fistpl
ret
cmp
jge
les
cmp
mov
js
mov
mov
mov
xchg
mov
mov
loope
shlb
rcrl
add
xchg
mov
popf
mov
cmp
mov
js
nop
add
adc
roll
cmpsb
or
clc
jnp
mov
dec
imul
call
dec
das
aad
cs
cwtl
pop
mov
add
xchg
xchg
mov
mov
stos
add
jp
mov
or
mov
pop
bound
movsl
or
cmp
mov
inc
and
lods
cltd
sub
fdivrl
pop
sar
roll
subb
ljmp
mov
lahf
lods
mov
lcall
or
orb
ret
aas
cld
popf
inc
xchg
outsb
add
cmp
pop
jns
sbb
ret
lods
outsb
sub
cltd
mov
icebp
xor
pop
xchg
insl
and
add
mov
stos
fldl
scas
sbb
mul
push
in
jo
ret
cmc
lret
mulb
lods
daa
inc
cmpb
mov
and
cmp
popa
rcll
jb
out
sub
xchg
js
sbb
dec
arpl
nop
jle
es
fstpt
push
rcrb
add
push
ds
pop
mov
and
mov
fisubs
rolb
gs
dec
scas
addl
and
subb
adc
mov
fcmovbe
jne
rcr
aad
mov
cs
leave
ds
nop
in
mov
mov
pop
pusha
sub
dec
shll
dec
fistl
and
mov
xchg
stos
idivb
pop
mov
jg
cmp
int
cmp
xor
ret
pop
mov
add
adc
cltd
xchg
fs
jg
mov
adc
adc
pop
sbb
cli
mov
and
or
pop
cwtl
adc
push
pusha
mov
js
xchg
leave
mov
add
mov
dec
out
sbb
lock
fwait
push
mov
and
jae
int3
xlat
insl
push
sub
jecxz
mov
inc
gs
inc
fcmove
cld
dec
sahf
xchg
jbe
stos
fimull
push
inc
adc
mov
adc
inc
scas
adc
data16
ja
mov
cld
and
imul
xor
pushf
out
jno
mov
in
jb
outsb
and
xor
adc
mov
sub
cli
fstl
dec
mov
gs
gs
sub
test
mov
add
decb
clc
xchg
mov
ficoml
mov
add
push
or
ljmp
dec
fdivrs
scas
cmpl
or
pusha
outsb
call
test
sbb
or
xchg
fsubr
inc
sbb
inc
pop
mov
xor
test
out
xor
test
jp
inc
mov
pusha
mov
popa
cmp
popa
ljmp
mov
xchg
and
add
jo
mov
push
nop
mov
sbb
addr16
pushf
ret
cmpsl
cmp
mov
mov
in
xor
roll
add
aad
jne
test
ss
inc
push
fstpl
mov
sub
jae
daa
xchg
popa
mov
sti
mov
sub
xor
sahf
scas
jl
adc
aaa
adc
inc
aad
xlat
jmp
sti
inc
lea
lock
imul
scas
xchg
out
fcomps
fcomps
jmp
push
js
nop
dec
xchg
int3
ss
push
loop
mov
mov
fs
loop
iret
mov
pop
jmp
inc
mov
xor
gs
add
or
jl
loop
fisubs
sub
cmpsb
dec
loope
lret
iret
mov
and
fnsave
push
lods
int3
cmp
and
les
dec
ds
dec
xchg
jne
xorl
cmpsl
add
xor
subb
dec
ss
add
imul
cmp
adc
adc
in
cld
sub
and
movsl
jne
dec
pop
or
pop
out
loop
repnz
cltd
mov
cwtl
iret
cmp
mov
mov
inc
lea
ror
je
in
pop
dec
loop
inc
hlt
xchg
lret
in
sbb
fisubrl
aad
pop
xchg
arpl
es
sbb
insb
mov
jecxz
ljmp
rcl
and
inc
dec
pop
and
inc
jbe
outsb
test
daa
or
mov
fcmovnbe
aaa
lcall
xchg
jl
mov
fisubs
sub
out
sbb
mov
mov
pop
adc
sbb
cwtl
lea
es
pop
or
movb
xor
push
in
sbb
mov
mov
sti
js
add
pop
xchg
and
lahf
xchg
nop
adc
push
aaa
or
out
int3
rcll
sti
das
out
sbb
sahf
jns
rorl
andl
cmp
mov
imul
sbb
pop
lods
loopne
in
push
jne
mov
or
xor
mov
hlt
icebp
or
pop
leave
cmp
lods
std
xor
into
xchg
popa
pop
cmpb
cld
xor
xchg
and
inc
negl
addb
mov
rcrl
mov
in
adc
push
pop
fdiv
mov
leave
mov
sbb
pop
shl
lahf
dec
jle
xor
add
add
cmp
addr16
lcall
gs
mov
cmp
inc
jnp
xchg
in
xor
mov
mov
mov
adc
shrb
std
mov
icebp
test
into
andb
movsb
xor
jecxz
fadds
sub
push
pop
inc
sbb
js
xchg
add
mov
jmp
mov
mov
call
or
mov
pop
mov
lock
push
loope
fbld
lret
push
push
ljmp
adc
mov
or
adc
rolb
push
xchg
xlat
mov
cmp
out
push
lret
addr16
and
andb
or
aaa
lock
in
dec
pusha
and
addr16
pop
lret
shlb
iret
and
jg
addr16
and
cs
orb
push
mov
fwait
push
roll
fsin
in
aam
mov
mov
bound
jne
sub
dec
daa
adc
js
out
adc
jmp
push
into
lods
fistpl
inc
xchg
xchg
pusha
rol
mov
loop
imul
sub
adc
clc
negl
adc
pop
xor
fwait
in
jl
es
and
aad
dec
push
mov
jecxz
xor
shrl
lock
xor
cmp
jge
and
mov
adc
out
hlt
adcb
jecxz
xchg
or
jl
push
cld
sub
fdivs
add
inc
sub
push
sub
flds
movsb
es
nop
aas
scas
rclb
lods
popf
adc
rcrl
js
imul
cwtl
shrl
and
xor
addr16
inc
sbb
stos
push
ss
pop
fcoml
into
enter
mov
mov
lods
pop
and
sbb
pop
jecxz
subl
gs
outsb
test
jo
push
outsb
sub
xchg
fucomi
imull
ss
push
ret
sarl
or
jo
mov
out
lcall
inc
mov
int
pushf
sbb
inc
add
outsb
jno
jnp
imulb
ret
loop
cmc
jmp
cmp
shll
jae
enter
stos
out
sbb
adc
inc
jne
add
cmpsb
in
incl
shrb
mov
cs
or
in
inc
cli
mov
imul
insb
repz
mov
rcl
sbb
sub
mov
in
lods
cmp
cs
add
mov
data16
scas
aad
or
mov
out
mov
mov
pop
inc
test
out
sub
rcl
pop
mov
xor
stos
sti
pop
xchg
add
cmp
xchg
aad
inc
std
cli
cli
jne
sbb
sbb
push
rcll
inc
inc
mov
mov
inc
and
dec
std
icebp
lock
sub
rolb
and
fldenv
jae
cmp
xor
xchg
xchg
js
test
push
mov
cmp
xor
outsl
daa
aad
add
outsb
cmp
add
loop
adc
and
cmp
imul
mov
aas
test
add
inc
inc
mov
mov
inc
dec
adc
adc
std
daa
pop
out
pop
imul
popl
shr
pop
popa
ficompl
andb
adc
add
pop
mov
ret
sbb
and
stc
testb
ss
jge
fnstsw
jp
aaa
xchg
inc
adc
inc
pop
and
or
add
xor
xor
dec
pop
pop
fidivrl
cld
xor
scas
aad
xlat
lods
sbb
mov
cmc
shll
inc
pop
mov
mov
arpl
mov
jg,pn
and
push
jp
icebp
jae
lahf
loop
jmp
test
add
in
insl
lret
adc
dec
jg
into
scas
test
scas
jne
jns
dec
incl
mov
loope
fdivs
mov
xchg
lahf
xor
push
add
setns
cmc
in
ss
andl
loop
push
leave
jnp
or
xorl
dec
pop
stos
lods
movsl
dec
in
jmp
jl
lods
int
mov
rol
popf
out
fdivrs
cmovbe
xlat
pop
in
add
test
lods
mov
jle
add
cs
fs
mov
mov
rclb
cmpb
mov
push
xor
cmp
push
dec
pop
addr16
jbe
out
scas
nop
inc
cmp
mov
adcb
je
mov
stc
fimull
cmpb
xor
xor
mov
push
xchg
sbb
test
lods
xchg
fmuls
popa
adc
bound
movsl
es
mov
popf
mov
sub
dec
out
sub
push
mov
shlb
xchg
adc
push
xchg
not
in
dec
fucom
pop
test
pop
mov
test
lahf
das
mov
push
das
push
stos
jo
pop
mov
adc
leave
scas
jnp
aaa
mov
enter
push
enter
sti
and
cld
mov
sub
jnp
inc
dec
mov
dec
xchg
cmc
fwait
jle
add
cld
mov
js
mov
mov
out
out
jo
cmp
data16
adc
inc
push
lret
sti
push
adc
adc
out
mov
je
pop
push
and
mov
test
dec
push
push
add
sbbl
dec
or
add
stos
in
push
loop
mov
addr16
lock
sbb
lods
divb
jns
jne
arpl
rcrl
push
loope
push
dec
push
adc
mov
push
jno
push
lcall
add
mov
or
ret
cmp
jae
mov
fldcw
pop
out
jl
xchg
insb
sbbl
adcl
jo
pop
shl
jnp
ds
faddl
loopne
cmp
mul
ds
stos
mov
aas
sub
stos
mov
data16
xor
xchg
cmp
mov
js
outsl
sub
rolb
mov
and
pop
push
mov
mov
mov
mov
mov
lahf
sub
ljmp
arpl
into
sub
pop
cmp
roll
out
fistpl
and
decl
sbb
lock
jns
mov
jmp
sbb
aas
push
adc
sub
sbbl
hlt
jae
dec
aad
xor
mov
pop
or
dec
rcrb
xor
js
out
push
pop
rcr
cmp
fbld
ss
adc
pusha
or
aas
in
mov
mov
in
jbe
jne
jae
mov
lds
movsb
xchg
neg
rorl
jmp
pop
in
andl
scas
stos
mov
mov
jecxz
fwait
mov
popa
js
gs
inc
out
popa
sub
loopne
addr16
or
cmp
addr16
aaa
pop
aas
les
mov
loopne
aas
adc
leave
push
jle
xchg
cmp
and
mov
sub
push
js
lret
adc
jecxz
js
or
sahf
popl
sub
push
mov
mov
and
jne
or
pop
xchg
and
pusha
mov
lock
xchg
inc
mov
lret
lret
orl
shr
inc
jg
lea
pop
testb
push
int
cs
addr16
push
repnz
push
imul
xchg
cs
hlt
gs
mov
idivl
sbbl
imul
push
mov
es
pop
out
inc
fnstenv
sti
push
test
scas
mov
xor
xchg
fstps
loop
xor
sbb
inc
sbb
dec
std
clc
or
xchg
mov
xchg
adc
arpl
decl
sbb
lds
mov
imul
dec
lret
fsub
in
mov
adcl
mov
xchg
cmp
fsubrl
xor
mov
push
adc
mov
jae
in
in
cmc
add
andl
repnz
stos
pop
rcrl
in
dec
pusha
std
into
iret
arpl
xchg
inc
xorb
add
mov
adcl
xchg
sub
pusha
ret
mov
xor
add
ret
idiv
sarl
inc
lea
mov
orb
sub
scas
lods
mov
add
dec
jmp
mov
push
adc
arpl
ja
fidivl
fidivrs
cmp
push
movsl
sub
mov
mov
sbb
xlat
fs
pop
pusha
mov
pop
mov
lcall
lods
cmpb
xor
mov
in
movsl
lock
sahf
enter
jecxz
mov
cwtl
adc
jg
mov
ljmp
insl
in
scas
mov
rcll
adc
gs
clc
cltd
mov
and
dec
xchg
in
dec
cltd
mov
mov
xchg
inc
inc
add
cmp
enter
rolb
inc
push
cwtl
pop
xchg
in
mov
fbld
jnp
cmc
mov
lcall
and
jb
movsb
dec
je
jne
mov
and
sbb
mov
xor
sbb
adc
or
sbb
aas
lahf
aad
inc
les
sub
imul
mov
or
lahf
and
xchg
incl
pop
xchg
dec
rolb
inc
cmp
and
popa
xchg
shlb
lcall
mov
div
shlb
loop
dec
xchg
daa
pop
sahf
lods
push
adc
movsl
incb
rorl
hlt
loopne
dec
sub
jo
and
and
inc
dec
subl
mov
inc
cli
fmul
vpunpckhqdq
fld
fbld
sub
scas
xor
and
popf
xchg
mov
insl
inc
insl
negl
mov
int3
pop
add
dec
mov
mov
push
mov
pop
sti
pop
add
mov
sbb
pop
jg
pop
lea
ret
mov
jb
pusha
sub
cmp
fldt
xchg
mov
mov
bound
in
xchg
cld
xchg
cmp
mov
addr16
jmp
testl
push
inc
bound
push
jge
inc
dec
push
adc
push
inc
pop
stos
mov
pusha
lahf
dec
into
scas
aad
lock
cld
cwtl
mov
insl
push
les
aas
imul
xor
fidivl
hlt
adcb
subb
mov
or
inc
orl
adc
daa
xor
sub
movsb
or
es
insl
popa
addr16
jp
jno
inc
aam
mov
es
dec
inc
jne
clc
cmc
sub
mov
adc
mov
dec
mov
popa
mov
xor
sbbl
fdivs
lods
push
lods
mov
jb
sbb
inc
js
mov
icebp
jns
loope
add
pop
or
int3
arpl
dec
fldt
stos
and
cmp
popl
and
push
cmc
cwtl
lea
sbb
mov
int
mov
movsl
das
test
cmp
push
sub
and
test
repnz
dec
pushf
mov
or
push
push
mov
push
push
rcr
push
inc
lcall
cli
sarb
mov
mov
mov
mov
cmp
jge
mov
sub
pop
rcrb
fs
lea
aam
cmp
repz
mov
mov
jb
notb
pop
pop
sahf
dec
subb
inc
or
adcl
or
jns
xchg
xlat
out
xchg
mov
jg
push
pusha
cs
mov
add
sub
or
mov
jl
cli
and
lret
cmp
xchg
mov
add
imul
mov
add
dec
into
out
fcmove
mov
sub
jnp
out
outsb
dec
or
sbb
inc
sub
and
adc
call
add
jl
inc
sbb
or
jbe
add
mov
pushf
repnz
add
sbb
xor
mov
mov
inc
jle
or
jge
into
jmp
jns
sbbl
add
outsb
rep
insl
aam
rcrb
dec
add
rorb
pop
jnp
es
mov
cmp
mov
dec
out
add
dec
push
sub
scas
inc
cmc
sarb
cmp
leave
cmpsb
cs
hlt
adcb
sub
iret
xor
pop
stos
xor
lret
add
push
xchg
leave
out
inc
push
xchg
or
pusha
insb
popf
out
sbb
and
xor
xor
movsl
push
scas
mov
inc
fcomps
cltd
or
dec
push
adc
jns
in
insb
scas
pop
xchg
popa
popf
sub
jge
movsl
lock
push
mov
sarl
enter
out
dec
aaa
inc
imul
xchg
xor
lahf
cli
and
stos
imul
js
int
mov
mov
cmp
jecxz
pop
repnz
pop
xor
dec
pop
mov
jb
cli
mov
adc
sbb
jae
mov
mov
rcrb
and
pop
adc
jo
ljmp
jg
shll
xchg
dec
add
les
jg
shrb
lret
pop
insl
fcmovnu
inc
ljmp
stos
pop
rcrl
inc
cmpsl
out
mov
dec
dec
popa
popf
dec
adc
addb
and
and
fldcw
jl
lods
fisttpll
pusha
call
jno
iret
xchg
test
hlt
push
pop
add
ljmp
mov
iret
dec
das
inc
fsubl
mov
jg
or
aam
enter
mov
push
pmulhw
clc
inc
or
fcmove
inc
out
enter
fisubrs
cmp
mov
repz
adc
pushf
cmp
inc
push
xlat
push
aad
sbb
or
hlt
and
xor
mov
push
cmpsb
push
adc
mov
jae
sbb
rcll
inc
jne
jl
mov
mov
mov
xor
push
dec
ret
push
jp
insl
mov
test
cmpsb
adc
adc
mov
sub
inc
push
lret
shll
in
rorl
loop
jp
iret
shl
jno
andl
mov
xchg
jecxz
push
sub
adc
cld
push
std
dec
push
stos
test
xchg
pop
cmpsb
fucomi
inc
jo
mov
rcll
pushf
andb
ljmp
adc
push
push
adc
push
jae
pop
jmp
and
sbb
fldcw
or
fildl
pusha
icebp
dec
xor
jbe
fisttps
and
or
out
cmc
pushf
sbb
sub
or
stc
rcrl
dec
fisttpll
cmpsl
stc
pop
or
or
jge
fstpl
outsl
dec
jecxz
push
cmc
push
mov
fwait
imul
jne
xlat
push
cmp
incl
jbe
cli
dec
shl
nop
test
or
mov
and
mov
mov
mov
push
and
dec
and
ret
xor
out
push
inc
sub
jmp
test
inc
pop
movsb
cmc
adc
xchg
mov
dec
sbb
sbb
inc
daa
cmp
loopne
mov
or
inc
jb
xchg
xchg
mov
out
xlat
mov
stos
mov
cmc
in
cwtl
pop
jae
lock
mov
stos
out
cmpsb
xor
pop
loop
lret
lock
sub
cmp
outsl
int
and
in
out
out
mov
das
jb
add
push
scas
negb
test
add
jb
int3
sahf
dec
xchg
cmp
sbb
imul
cmp
out
inc
and
jmp
in
adc
sti
jns
scas
jne
adc
scas
lahf
daa
stc
ret
aad
jle
inc
in
cltd
adc
pop
push
push
jle
call
inc
mov
sub
xchg
mov
dec
popf
fdivrl
sbb
loop
sbb
loopne
out
ret
mov
dec
push
std
push
pushf
hlt
outsb
xchg
rcl
sub
rclb
negb
andb
flds
je
push
lods
lods
or
shrb
inc
ss
movsl
pop
insl
jnp
pop
mov
mov
fstl
push
cmp
push
inc
adc
aam
movsl
fmul
ljmp
pop
push
shll
jmp
fadds
repz
jp
or
inc
push
mov
enter
jno
std
adc
sub
orb
inc
mov
lcall
mov
jnp
lock
dec
sbb
push
push
mov
push
inc
sub
aaa
cmp
loope
orb
xchg
or
ja
lock
mov
push
out
jl
stc
or
popa
cmpsb
aaa
int3
add
shlb
test
adc
fcompl
sub
fcomps
sub
fdivl
hlt
cltd
push
inc
das
jle
shl
and
and
add
ret
loopne
stc
sub
out
testb
shrb
or
jge
cs
xor
xor
data16
mov
ljmp
mov
adc
mov
lcall
daa
sbb
shlb
mov
addr16
in
les
mov
mov
stos
out
or
sbb
ss
mov
push
dec
repz
add
xchg
xchg
xlat
and
fistl
int
flds
ljmp
fstl
in
cmp
out
pop
pop
push
sbb
add
cmp
jmp
push
adc
pop
js
mov
sbb
mov
jmp
inc
sub
mov
mov
lea
rcrb
insb
std
and
ljmp
loope
sti
inc
stos
leave
pop
dec
bound
loopne
test
mov
sbb
xlat
call
push
enter
in
idiv
mov
mov
xchg
push
add
dec
lods
mov
sub
mov
push
mov
mov
xchg
mov
mov
xchg
mov
loope
xchg
out
mov
dec
pop
mov
imul
xchg
push
add
jge
pop
and
test
and
dec
inc
adc
cli
fs
dec
out
bound
lcall
xchg
ret
mov
mov
clc
cld
das
lock
push
jbe
add
sbb
pop
outsb
jbe
xchg
add
test
xchg
jecxz
sub
das
emms
shlb
adc
push
out
scas
cmpsl
arpl
mov
and
loop
mov
lcall
sub
mov
cmp
fisubrl
sti
xchg
pusha
gs
imul
rcll
mov
push
push
jmp
test
cmp
out
arpl
mov
in
pop
sbb
mov
xor
ret
xchg
pop
cmp
dec
popf
test
mov
pop
je
fdivrs
scas
jmp
lret
dec
or
aas
lea
cmpsb
in
jecxz
mov
mov
dec
sarl
adc
hlt
push
pop
fwait
test
ja
push
mov
mov
push
test
js,pt
les
xor
or
xor
ret
sti
rorb
adc
pop
push
mov
cmp
ret
mov
jg
fcoms
sbb
rcll
into
imul
in
and
cmpb
pop
js
mov
icebp
or
mov
dec
adc
mov
pop
pop
bound
aaa
mov
pop
int3
int
leave
int
jnp
or
xchg
xor
dec
repnz
cmp
push
push
push
call
mov
sbb
inc
mov
js
adc
out
push
xor
jp
adc
inc
imul
push
std
pop
jno
aad
mov
insb
jbe
in
sbb
adc
ljmp
rep
ret
stos
adc
add
pop
out
inc
int3
mov
xchg
incl
inc
dec
shlb
rcrb
pop
repz
stc
xchg
mov
out
dec
dec
mov
ljmp
pusha
add
and
neg
out
and
mov
or
test
pushf
sub
mov
dec
dec
repnz
enter
hlt
jae
or
jecxz
movsl
xchg
loopne
imul
dec
sbb
or
stos
sub
test
push
xchg
movsl
pop
cltd
adc
lock
push
fwait
lcall
lock
faddl
enter
out
push
sub
or
pop
aad
and
sbb
shll
rcll
mov
add
imul
int
inc
rorl
inc
add
sbb
roll
push
in
ds
xor
dec
stos
shll
mov
mov
testl
or
outsb
cmp
mov
mov
cmp
and
pushf
mov
push
adc
pop
jno
inc
jp
mov
mov
xchg
imul
add
mov
mov
cld
lds
xchg
pop
mov
jg
out
or
jb
mov
jg
sbb
pop
adc
std
movsl
jns
xor
push
movsl
cmp
sub
popf
sbb
flds
stos
rcll
pushl
pop
dec
pop
mov
cwtl
jecxz
cmpsb
shrb
add
neg
jo
test
orb
cmc
xchg
into
xchg
stc
mov
imul
or
outsb
mov
xor
inc
pop
mov
popa
in
in
mov
jnp
outsl
mov
lret
or
jno
xor
add
mov
jnp
pop
sub
lods
push
xchg
idiv
std
xor
mov
sub
testl
aad
mov
add
jo
push
fldenv
fcomp
jg
push
mov
leave
mov
xlat
push
rcl
add
lds
xor
and
adc
es
push
push
mov
adc
imul
fnstcw
sahf
dec
idivl
orl
or
add
into
fisttpll
out
mov
mov
or
mov
hlt
mov
mov
imul
lods
imul
xor
jle
jl
repnz
arpl
mov
mov
dec
mov
imul
inc
push
int
stos
xchg
mov
shlb
push
xchg
scas
call
nop
loope
cmp
sub
push
mov
jl
cld
nop
jmp
ss
cmc
addr16
js
add
fld
repz
mov
sbb
test
xchg
add
hlt
in
mov
repnz
daa
sbb
xchg
sub
mov
test
mov
sub
mov
shl
scas
mov
iret
pop
xchg
dec
clc
mov
mov
or
aas
imul
in
cmpsl
adcl
adc
dec
fisttpll
scas
add
sub
cmp
mov
jecxz
stos
pop
sar
cmpsb
dec
fidivrs
push
sbb
mov
call
les
insb
jns
divl
pop
cmpsl
push
xchg
xlat
cmovne
sub
mov
jge
ror
pop
pop
xor
or
sub
shlb
movsl
lods
jb
adc
jecxz
sarl
add
lret
call
ja
jnp
test
cld
enter
daa
xor
sbbl
jne
jmp
movsl
cmp
sub
add
mov
pop
and
or
aam
stos
sub
faddl
xor
pop
fwait
sbb
or
in
xchg
mov
xchg
adc
xor
pop
or
xchg
xchg
lods
xchg
push
push
popf
lahf
adc
movsl
mov
dec
movsb
mov
out
jnp
fsubrs
sbb
popf
andl
xchg
out
push
dec
les
cmpsl
sub
lods
adc
mov
lods
jno
add
and
jb
stc
lret
js
lahf
in
fwait
sbb
ljmp
inc
mov
sub
jbe
js
fistpll
lds
fcomi
push
ja
mov
daa
push
cmp
mov
das
pusha
sub
and
mov
cmpsb
iret
pop
repz
in
leave
cmp
lcall
adc
fmull
mov
mov
add
outsl
les
dec
cs
adc
xchg
pop
xchg
andb
or
adc
adcb
aaa
mov
cmp
sbb
jbe
nop
lods
inc
jecxz
flds
pop
adc
icebp
arpl
loope
push
jl
addr16
jno
sub
arpl
fdivs
push
pop
fs
iret
pop
js
sbb
leave
push
mov
fsubl
cwtl
sbb
or
or
flds
aad
dec
adc
jle
inc
mov
movsb
int
addr16
fldcw
xor
sub
pop
jo
incl
add
jle
in
push
cmp
sbb
fiadds
mov
adc
mov
test
or
fcmovnb
scas
hlt
imul
data16
ret
cmp
mov
mov
inc
aaa
movsl
or
ljmp
daa
push
pop
mov
aam
mov
out
mov
ret
add
mov
lcall
outsl
xchg
xlat
sub
popf
lcall
mov
pop
idivl
das
or
push
insl
mov
ljmp
sub
push
pop
out
mov
test
mov
push
test
test
aas
jmp
in
push
or
stos
pop
or
push
lret
insb
rcrb
jp
xor
xchg
push
or
push
or
xchg
adc
cmc
bound
sbb
frstor
insl
ret
push
mov
or
or
scas
test
pop
fcmovbe
push
adc
or
fwait
aaa
sub
mov
push
dec
pop
pop
mov
sti
lds
push
mov
adc
push
and
push
stos
fsub
sub
fcmovnb
xor
lods
popa
jecxz
cmp
test
lods
repz
jle
or
or
push
aam
mov
mull
nop
imul
stc
or
sub
xchg
aad
mov
popa
push
sbb
mov
mov
leave
in
sub
push
adc
add
sub
inc
loopne
shll
jb
sbb
xchg
dec
or
loopne
sub
test
es
mov
aaa
out
cmp
lods
and
pop
mov
ret
jne
aaa
popf
insb
nop
and
fimull
mov
xor
lcall
les
mov
mov
idivl
lahf
and
ljmp
fs
lcall
nop
shlb
icebp
imul
mov
inc
testb
add
imul
call
xchg
adc
imul
fldl
inc
ret
mov
sahf
jbe
incl
aaa
popf
insb
mov
cltd
xchg
jmp
int3
in
pop
test
lret
push
in
push
into
push
ret
cld
movl
sbb
pop
mov
lret
std
adcb
pop
mov
insl
or
mov
and
lret
jp
fldcw
add
adc
inc
pop
outsb
xchg
xchg
cmp
add
xor
inc
mov
and
jmp
test
rorb
sub
xchg
in
sub
jo
jae
js
dec
mov
shlb
adc
mov
ja
sbb
ret
push
xor
cmp
int3
adc
out
ror
dec
jmp
in
in
mov
mov
pop
pop
leave
out
fadd
outsl
std
das
ja
xchg
mov
es
pop
mov
inc
sub
xchg
mov
sub
mov
fs
out
push
or
mov
lods
xchg
mov
scas
xchg
or
mov
mov
push
fiadds
or
sub
loope
xlat
fdivrl
push
pushf
lcall
mov
mov
mov
inc
mov
mov
and
mov
test
outsl
movsl
aaa
rorb
out
lcall
cmp
repnz
imul
inc
fstps
jl
call
cmp
mov
mov
mov
inc
aaa
pop
orb
cs
into
xchg
push
roll
ljmp
xchg
leave
sub
xor
loop
mov
cmp
movsb
inc
sbb
icebp
inc
aas
repz
icebp
xchg
fisttpl
js
bound
adc
scas
add
in
add
imul
inc
in
push
aaa
and
int3
orb
decb
inc
mov
mov
push
mov
ja
sbb
fwait
loope
inc
mov
subl
xchg
cmc
jmp
lahf
mov
mov
cmp
shll
xor
xor
xor
sahf
aas
and
notl
popf
jecxz
fidivs
cwtl
xor
in
enter
push
mov
and
cld
cwtl
out
inc
out
mov
lcall
pop
cmpsb
inc
or
push
in
dec
aam
mov
divl
mov
adc
push
call
mov
test
test
lods
pop
sarb
and
test
cwtl
adc
clc
imul
jmp
jae
add
sub
cmp
adc
push
xchg
jl
adc
mov
mov
mov
ffree
sub
add
jno
gs
insb
std
cmp
test
arpl
cmp
pop
decb
cmp
lock
sahf
dec
xor
xor
cli
int
cs
xchg
mov
inc
and
loopne
xchg
and
sarl
add
ds
pop
cmp
out
clc
pop
int3
out
push
insb
jmp
mov
pop
scas
or
add
mov
adc
rcrb
push
sbb
ja
push
pushf
add
dec
mov
jl
into
lret
cmp
xor
fldenv
cmpsb
jge
rorb
pop
out
mov
mov
ja
imul
and
outsb
dec
and
mov
cmp
sbb
push
and
xor
popa
jno
push
add
in
mov
adc
or
sub
fimull
rcll
jecxz
xchg
inc
out
ja
fcmovnu
mov
push
cmp
data16
sub
jo
insb
mov
mov
push
scas
adc
pop
mov
cmp
mov
mov
cli
dec
or
push
fstpl
xchg
roll
dec
out
mov
pop
shrb
insl
test
dec
je
jp
pop
xlat
stos
jo
push
sub
mov
pop
insb
mov
adc
test
shl
mov
push
sbb
jno
sub
lods
pushf
ds
bound
js
sbb
push
test
jle
daa
xor
shll
ja
icebp
and
mov
leave
adc
inc
mov
ljmp
mov
mov
std
arpl
icebp
scas
das
repz
call
bound
and
jbe
mov
test
pop
fsubrs
je
mov
sbb
loope
nop
std
js
cmp
xchg
push
lret
out
std
nop
enter
in
cmp
push
xchg
sti
or
fstp
ret
mov
sub
xchg
pusha
xchg
insl
sbb
in
lret
pop
add
mov
movsl
xchg
push
add
jle
adc
sti
stos
pop
and
pop
mov
cmp
bound
push
cmpsl
xchg
pop
test
cmpsb
inc
cmp
bound
xchg
push
pop
lret
sbb
inc
jno
loope
lret
daa
dec
scas
lcall
jne
dec
cli
js
sub
pusha
lds
dec
inc
add
cmp
leave
jne
out
ret
loopne
sub
cwtl
xchg
dec
xchg
sub
or
mov
sbb
enter
pop
lret
orl
sbb
imul
cmp
ljmp
in
mov
test
add
and
test
lret
xor
jle
mov
add
push
cwtl
jb
iret
insb
xchg
jecxz
adc
insl
sbb
pop
sub
fnsave
jo
out
inc
aaa
stc
aad
cmp
jmp
dec
imul
and
pushf
test
insl
jb
sarl
pop
fcmovu
negb
dec
xchg
loopne
aaa
orb
fs
in
push
push
adc
cltd
inc
in
add
jno
xchg
add
test
xchg
push
mov
and
push
adc
xchg
idivb
adc
ret
das
cmpl
sbb
notl
jl
pop
mov
push
adc
xor
pop
ja
out
cmp
push
dec
mov
psubw
lds
pop
pop
or
shll
add
lss
stos
imul
shlb
loope
jno
mov
jbe
jle
mov
or
mov
jmp
gs
push
lret
mov
in
xor
enter
mov
andb
push
inc
in
inc
pop
scas
hlt
add
adc
jmp
push
sbb
push
push
inc
js
push
mov
inc
dec
aaa
jns
adc
imul
push
outsb
jo
adc
dec
and
xor
pusha
loope
in
sbb
mov
mov
and
xor
sub
sti
mov
lds
dec
fwait
push
fcomi
adc
adc
les
cmpsb
adc
cmp
mov
ljmp
popf
loope
sbb
popf
inc
clc
jmp
decl
jo
stos
add
std
aad
and
daa
push
add
pop
and
fstpl
or
jmp
sub
aaa
or
and
cs
mov
lret
dec
in
lds
jae
in
pop
lea
pushf
or
pop
xor
scas
mov
jb
xchg
dec
into
leave
xchg
incl
sub
cmp
or
in
icebp
leave
mov
mov
mov
push
add
js
es
inc
outsb
fstpl
divw
movsl
popf
ljmp
dec
mov
mov
lret
sbb
push
sar
aam
rol
push
ss
xor
push
push
test
pop
fcomps
sbbb
insl
pop
push
and
push
lret
fdivrs
or
inc
or
cmc
fcomi
inc
adc
pop
sbb
push
dec
mov
fmuls
test
arpl
andl
mov
daa
mov
cmp
lods
dec
mov
aas
loop
adc
rcrl
mov
inc
call
shl
xchg
jecxz
rclb
iret
pop
popa
out
fdivr
and
sub
iret
in
xchg
mov
sbb
movsb
popa
cwtl
lcall
adcb
in
hlt
push
or
fwait
daa
push
add
daa
iret
rorl
leave
sub
cmp
jmp
sahf
jno
sbb
or
ret
inc
cld
je
insb
xchg
adc
ss
pop
hlt
xor
rclb
cmp
hlt
pushf
ficomps
mov
bound
mov
or
repnz
push
jnp
icebp
daa
sti
mov
jl
sti
push
or
and
push
push
jno
adc
aas
fidivs
fs
int
out
xchg
jbe
add
mov
mov
por
dec
cmp
sub
xchg
test
ret
lea
movsl
push
xchg
les
or
js
pop
gs
movsl
aaa
jg
out
mov
or
jo
sti
aam
loope
push
aas
xchg
stos
popa
jmp
inc
push
sub
jl
lea
xor
lret
out
xor
stos
mov
aad
lods
shll
sub
jecxz
mov
outsb
divl
call
data16
sbb
repz
sub
mov
xchg
shll
aad
mov
xor
mov
xchg
jae
add
cmp
out
cmc
jne
imul
aas
or
and
pusha
push
add
mov
insb
daa
dec
pop
ffreep
dec
sub
mov
mov
data16
xchg
mov
aas
hlt
aas
pop
cli
mov
cmp
dec
scas
xchg
dec
mov
mov
lods
jbe
cmpsl
jg
mov
mov
pop
test
insb
das
ficompl
aad
mov
xor
pusha
mov
insb
add
cld
sahf
ret
mov
mov
inc
movsb
lock
int
pusha
pop
in
into
popa
cs
sbb
dec
inc
jmp
adc
js
pop
inc
xchg
dec
dec
add
lea
xchg
mov
out
and
pop
mov
outsl
adc
cltd
test
outsl
push
sbb
xor
sbb
or
push
pop
xchg
shll
adc
mov
popa
push
ds
bnd
pop
inc
mov
sub
loopne
push
cmp
gs
rol
fwait
xor
mov
stos
aas
insb
dec
add
cmp
sbb
cmp
dec
aas
push
repnz
clc
jbe
cmp
and
push
mov
std
sbb
testb
andb
data16
call
mov
pushf
inc
add
data16
jnp
iret
insb
dec
mov
add
mov
mov
jmp
push
sub
ljmp
cltd
movsb
jns
dec
pop
int3
sub
pushfw
or
adc
pop
divl
inc
out
push
xchg
or
inc
sbb
jle
pusha
pop
sub
dec
pop
cmp
push
aas
icebp
shrl
xchg
xor
or
clc
jmp
xor
pop
mov
clc
sbb
mov
sbb
pxor
and
pop
cltd
test
cmc
push
inc
dec
inc
ss
xor
push
clc
fwait
adc
mov
mov
sbb
icebp
sub
les
sahf
or
mov
sub
cmc
ss
sbb
neg
sbb
mov
repnz
push
xchg
imul
inc
cmp
dec
ret
sbbb
cwtl
fdivrs
cld
inc
daa
in
add
push
hlt
iret
mov
xor
jne
and
gs
sbb
pop
mov
enter
mov
push
and
scas
sub
lock
mov
arpl
cli
adc
jae
xchg
ror
daa
or
nop
xchg
clc
jne
int3
nop
inc
sub
cmp
fstpl
in
mov
in
sbb
loopne
cmp
jb
pushf
cmp
sub
nop
mov
xor
jae
push
cli
ret
int
mov
insl
fmul
andb
aad
aas
jns
pushf
dec
nop
inc
loop
jmp
lock
ds
adc
or
fsubrs
in
insb
push
loop
mov
xor
or
inc
int3
sub
sbb
stc
imull
push
mov
mov
fimuls
or
iret
push
add
lret
int3
or
or
mov
push
dec
movsl
stc
imul
xor
icebp
insb
jb
or
aaa
jo
xlat
push
test
mov
push
stc
adc
les
dec
inc
sub
in
sub
inc
fisubs
sub
mov
inc
adc
mov
add
mov
es
movsl
loop
lods
test
inc
lods
mov
in
test
xor
mov
sbb
cmpsl
or
mov
or
jle
cmp
fbld
push
push
outsl
hlt
sbb
scas
test
adc
inc
jle
mov
push
loope
sbb
jp
mov
fcompl
add
cmc
cmp
sub
enter
mov
inc
dec
pop
pop
int3
xor
sub
pushf
addr16
in
adcl
ss
incb
mov
test
jae
lret
mov
xor
and
dec
mov
cmpsb
ret
imul
dec
mov
jne
mov
adc
jnp
hlt
into
into
mov
xor
cld
pop
lahf
lods
std
into
dec
add
inc
cmp
repz
fcoml
pop
mov
sub
adc
out
or
orb
mov
popa
mov
dec
js
xor
jle
xor
xchg
std
sti
sbb
incb
sub
push
nop
pushw
sub
leave
int
or
mov
push
cs
pop
cmpsl
out
push
lea
sarl
xchg
push
stc
mov
dec
adc
test
repnz
lret
gs
sbb
iret
insb
inc
shlw
and
inc
xor
lock
jl
cmpsb
cmp
xchg
push
ret
sub
mov
push
int
jae
les
movsl
xchg
adc
test
adcl
push
fmull
push
push
test
inc
sbb
mov
scas
out
bnd
pop
xor
fwait
inc
lock
fcoml
movsl
push
fldenv
cltd
xchg
mov
fldln2
jne
outsb
mov
xor
popa
daa
outsl
test
jbe
jg
call
fiaddl
or
sub
dec
jle
xchg
mov
push
outsl
jns
sbb
dec
adc
mov
push
in
pop
shll
xchg
icebp
add
fbld
sbb
fnsave
cmovl
push
ljmp
fwait
adc
xor
push
xchg
imul
add
enter
pop
arpl
jmp
pop
mov
adc
xchg
dec
mov
fwait
sub
mov
cmp
sahf
shrb
jle
xlat
sbb
enter
pop
xchg
jge
jmp
mov
mov
xor
rcl
in
fisubrs
call
mov
pop
int3
aaa
add
lds
test
les
movsb
sbb
pop
add
sub
xchg
addb
inc
dec
mov
les
imul
addr16
les
addb
in
push
sbb
mov
ss
outsl
leave
in
js
push
xlat
ds
fadd
les
arpl
sub
pop
test
or
jae
mov
aam
mov
jae
mov
xchg
aaa
jne
into
push
sahf
ljmp
jp
mov
push
inc
cmp
inc
scas
push
jae
test
adc
or
leave
and
or
jns
cwtl
je
ret
shlb
addr16
nop
fisubrs
stos
test
loop
aaa
pop
gs
mov
xchg
loope
mov
push
sub
mov
shrb
pop
jl
imul
pop
mov
movsl
arpl
das
in
pushf
add
mov
data16
cld
mov
xchg
aaa
pusha
jns
pop
enter
push
daa
lahf
mov
mov
dec
notb
ja
in
test
cmpl
test
mov
leave
cmp
jo
loop
xchg
stos
shlb
and
mov
jl
mov
test
fwait
repz
push
pusha
decb
xchg
std
mov
lds
mov
jne
movsb
jecxz
xor
xor
popa
fisttpll
mov
dec
push
je
int3
add
and
ret
inc
mov
dec
pop
jmp
xchg
fldt
xchg
add
sub
sti
push
je
bsr
xor
push
lahf
data16
mov
xorb
fs
out
mov
popa
mov
call
ficompl
add
mov
mov
sbb
inc
xor
pop
xlat
push
adc
iret
aas
daa
mov
push
lds
lock
int
fdivp
and
mov
pop
out
sahf
pop
sbb
arpl
and
cmpsb
fneni(8087
or
sahf
mov
pusha
sub
jecxz
adc
add
cwtl
insl
je
inc
dec
push
cmp
cld
xchg
fcmovu
popl
mov
and
or
inc
repz
mov
loopne
jp
pushw
jl
jo
mov
bndldx
out
or
push
loop,pn
add
idivl
lahf
ret
lods
shll
roll
jno
jg
and
iret
and
fiaddl
ljmp
pop
jns
xchg
pop
inc
idivl
pop
jg
dec
lret
sarb
inc
lret
addr16
out
lea
or
in
lods
adc
fst
fistps
jp
xor
pop
js
loop
push
mov
test
jecxz,pt
mov
mov
xor
or
sbb
cmpsl
fimuls
mov
int
in
stos
lock
inc
fimull
stos
ljmp
popa
cmc
mov
jbe
add
xor
fwait
stos
pop
push
scas
xorb
or
dec
add
int3
adc
ljmp
inc
inc
or
push
xchg
out
inc
sarb
adc
outsl
xor
ds
adc
dec
sub
cs
add
push
inc
sub
insb
or
add
jp
pop
fdivs
sub
ffreep
add
leave
dec
rolb
ds
testb
jne
dec
xlat
gs
mov
inc
xor
lods
jne
sbb
jp
mov
pop
lods
test
gs
push
sub
pop
adc
xor
ljmp
push
push
cltd
add
xor
or
sbb
bound
mov
fistl
fnsave
scas
sbb
and
xor
sbb
je
addr16
cmp
cs
nop
mov
pushf
enter
pop
enter
xor
xchg
mov
test
stos
xor
xchg
push
mov
fistl
push
jmp
decb
mov
cmp
fsts
add
lcall
mov
mov
stos
xchg
add
jno
icebp
lea
push
push
cmp
cwtl
in
shrl
mov
pop
mov
lock
xor
push
repz
xor
loopne
dec
mov
sbb
xor
aaa
int
sub
push
and
sbbl
xchg
add
mov
cltd
inc
inc
test
popa
inc
scas
jnp
xchg
mov
or
inc
push
addr16
inc
lds
push
imul
out
pop
mov
mov
jp
jge
xlat
or
mov
jb
adc
jle
scas
lahf
jmp
mov
xchg
mov
inc
arpl
and
xlat
insl
and
mov
pop
es
jmp
fcmove
or
mov
outsl
mov
jmp
mov
int3
push
jmp
inc
and
pop
push
insl
scas
pop
jns
cmp
cmp
mov
daa
dec
dec
pop
shlb
sarl
cltd
sub
add
lods
lock
mov
mov
js
xchg
push
sub
in
mov
outsb
xor
out
or
xor
sbb
in
rolb
ficoml
insl
vpsubq
nop
sbb
pop
in
test
imul
jl
mov
adc
mov
and
lods
mov
lret
jle
sbb
or
push
and
cmp
mov
mov
or
push
mov
adc
test
jo
jl
mov
idivl
xchg
pop
add
mov
stc
jno
subl
adc
scas
mov
cwtl
lods
dec
inc
jge
popa
ds
out
xor
jle
enter
aas
addr16
mov
cmp
mov
out
mov
lds
fs
push
cmp
andl
add
fldcw
stc
test
xor
lds
inc
xchg
es
dec
mov
xor
xchg
mov
xchg
xor
lods
in
push
mov
bound
adcb
fwait
sbb
scas
arpl
xchg
xorb
clc
sarb
fsubr
arpl
mov
mov
inc
test
divb
sti
sub
leave
sub
pusha
fistl
shll
lret
jnp
sbb
and
jecxz
jle
inc
cwtl
xchg
xchg
push
mov
popa
fcmovbe
fsubrp
add
pop
fsub
shrl
lret
popf
mov
in
fistps
clc
iret
lret
inc
inc
add
aad
add
lods
lret
xchg
and
into
in
dec
push
and
verw
out
push
mov
inc
ja
fwait
cmp
int
sub
cmp
fidivrl
sbb
and
cmp
xor
int3
mov
pop
clc
jecxz
inc
pop
inc
cmpsb
mov
sub
xchg
xchg
and
and
pusha
insl
fs
aaa
bound
test
insb
testl
pop
rclb
lds
fbld
jle
jecxz
cmp
xor
jno
xchg
sub
fstpl
mov
aaa
xor
sahf
icebp
inc
je
fwait
mov
out
mov
mov
negb
pop
push
leave
mov
mov
mov
test
sub
hlt
aam
jg
jle
inc
mov
aad
into
pop
mov
out
pop
arpl
jmp
sbb
sub
xchg
repz
mov
call
inc
out
shlb
out
shrl
or
mov
add
int
jle
scas
sub
add
jae
pop
push
sub
dec
jno
sub
xchg
shl
jg
pop
scas
push
sbb
in
pop
cmp
adc
daa
rcll
jecxz
and
int
jae
push
dec
inc
mov
xor
fimuls
sti
sub
or
cmpsb
idivl
xchg
sahf
dec
mov
mov
pushf
out
flds
mov
test
movd
fdivr
in
adc
jmp
int
clc
lods
stos
add
fdivrs
adc
dec
andl
ret
test
or
mov
cld
mov
xlat
movsl
loopne
xchg
insl
sahf
mov
cmp
fsubr
cli
aam
aas
push
sbbl
cmp
xor
dec
pop
xor
bound
and
inc
jl
pop
js
cmp
push
sub
mov
scas
mov
out
in
cmp
adc
enter
jle
mov
jp
sub
sub
jo
scas
pmullw
cld
mov
outsb
and
das
cld
shlb
dec
adc
mov
lds
ja
xor
out
pop
leave
mov
pop
adc
test
jns
cmp
stos
or
icebp
adc
mov
jmp
pop
arpl
dec
pop
cld
mov
lods
lea
and
and
mov
add
lods
lods
out
add
pop
push
test
push
in
sub
cmp
sub
lcall
jecxz
sub
jne,pn
dec
cld
xchg
adc
cmpsl
out
int3
data16
mov
push
pop
adc
mov
fcompl
cwtl
pop
mov
test
sarb
mov
mov
sub
push
cmpsb
pop
add
scas
ret
pop
stc
jno
mov
jmp
shl
add
and
xchg
sub
fildll
lock
fidivrs
aas
arpl
mov
xor
gs
fiaddl
push
push
mov
xor
sbb
iret
leave
dec
fstpl
mov
sbb
jns
add
xchg
cmpsb
bound
aad
divl
stos
mov
jno
jp
cli
xor
xchg
into
mov
ljmp
out
fildll
push
imull
pop
dec
jo
mov
xchg
out
push
sbb
or
mov
cmpl
pop
test
je
fbld
arpl
movsl
cltd
adc
cmpsb
int3
in
push
jno
sti
rol
pusha
icebp
sub
or
pop
fmulp
loop
stos
dec
mov
inc
iret
loope
mov
imul
lret
jmp
sahf
arpl
jne
icebp
inc
iret
pop
xchg
xor
adc
dec
popa
sub
mov
push
cltd
jmp
repnz
sarl
jae
and
pop
fldt
cmp
iret
addr16
adc
mov
xchg
ljmp
mov
loop
inc
sbb
add
es
inc
insl
cmp
sbb
xor
ljmp
leave
sub
jecxz
push
cmp
rolb
sbb
hlt
push
in
jae
cvtps2pd
xchg
sbbb
xor
stc
fdivrl
inc
jg
out
mov
add
mov
mov
add
out
pop
xchg
outsb
and
lret
add
in
dec
sbb
insb
nop
je
and
bswap
rorl
xor
cwtl
mov
mov
repnz
lds
sub
push
cmpsb
out
mov
pop
lahf
loop
jecxz
shll
test
sub
adc
fs
dec
cltd
out
xchg
inc
dec
or
mov
mov
imul
lds
lock
insl
lret
out
sbb
inc
and
cmp
bnd
in
js
mov
es
adc
js
andb
cs
cmp
mov
mov
loop
mov
int
cmp
test
push
sbbl
imulb
rorb
mov
cli
mov
add
lret
out
mov
int3
inc
rolb
dec
lea
sub
aam
inc
test
hlt
jae
inc
lods
and
imul
in
movsl
adc
std
adc
je
push
pop
xchg
sub
adc
sahf
xchg
sbb
unpcklps
adc
dec
fdivl
mov
xchg
jb
repnz
lret
and
or
jecxz
addr16
mov
dec
mov
sub
inc
loop
add
les
popf
fwait
xchg
push
xchg
cld
insb
in
mov
adc
adc
sbb
and
mov
adc
lea
idivb
dec
xchg
push
scas
jmp
ret
mov
out
mov
fcoms
adc
daa
and
repz
sub
repnz
xchg
int3
jnp
jmp
cmp
add
fimuls
cmc
adc
cwtl
or
ja
orb
xchg
and
jb
cmp
jl
jle
push
xchg
pop
hlt
sbb
adc
fldcw
popf
adc
jo
insb
adc
cmp
es
and
push
dec
mov
incl
das
outsb
cmpsl
scas
lods
nop
cmp
stos
ret
shrl
xchg
in
sub
in
and
pop
inc
stos
xchg
stos
sbb
in
out
adc
push
and
and
push
push
int
pushf
dec
and
in
loop
add
shlb
scas
test
es
loopne
ss
add
mov
dec
xor
xor
or
pop
cltd
add
xchg
xor
and
or
pop
out
in
jmp
sbb
xchg
aad
mov
fdivrs
xchg
jbe
dec
or
adc
sbb
int
ret
xor
pop
jmp
mov
xor
or
mov
cmp
push
fcomps
jae
nop
aaa
call
add
outsl
xor
ret
mov
sbb
sbb
sub
shl
mov
pusha
popf
jg
pop
fwait
aam
pop
jno
test
jg
iret
cmp
into
jg
imul
xchg
mov
out
inc
stos
mov
adc
and
sub
inc
je
test
lock
mov
dec
insb
cmpb
sar
imul
into
mov
mov
inc
stc
jp
enter
xor
in
sbb
scas
sbb
jg
stos
and
test
cmp
dec
adc
pop
les
jge
fnstsw
stos
lahf
adc
test
xchg
jle
and
cmp
inc
lds
into
jo
and
mov
sbb
jmp
xchg
adc
sub
mov
xor
cmp
xchg
mov
stos
rorl
test
popa
test
leave
push
add
adc
sub
pop
out
xor
inc
leave
sarb
mov
in
fdiv
iret
out
lock
fs
push
cs
inc
ljmp
std
add
adc
lahf
popf
mov
pop
pushf
add
xchg
out
in
insb
dec
mov
or
xlat
lea
xchg
es
aad
lahf
lods
and
cmpsl
dec
mov
jbe
es
aad
mov
out
sahf
or
add
fisubl
sbb
jo
xchg
add
rcr
orl
sbb
pop
jno
es
in
leave
stc
int3
sub
push
lock
ljmp
shl
cmc
jno
dec
mov
dec
cmp
dec
pop
ja
out
inc
dec
fildll
movsb
fcmovne
daa
test
push
push
cli
cmp
mov
xor
add
mov
imul
ret
jecxz
push
pushf
gs
dec
movb
cmp
pop
hlt
xor
cwtl
mov
or
dec
dec
outsl
in
popa
dec
xor
stos
pop
xchg
outsl
lcall
jecxz
cwtl
rcrl
test
push
aaa
gs
xchg
into
xor
shrb
aas
ja
xchg
jp
loope
push
ss
sahf
sbb
adc
push
popa
mov
jmp
mov
mov
arpl
rclb
test
inc
mov
inc
rorl
or
inc
push
stc
pusha
lds
cmc
or
int3
hlt
pop
testb
mov
loopne
push
or
mov
xor
and
inc
sbb
movsb
shlb
movsl
jnp
in
jle
cmpsl
dec
ljmp
fstps
dec
cmp
and
xor
push
inc
adc
rcrb
push
fistl
push
xchg
out
jne
or
adc
add
hlt
out
mov
mov
mov
mov
inc
clc
das
adc
daa
mov
arpl
xchg
cmp
xor
rorl
gs
aaa
mov
ljmp
jge
popl
andl
pushf
enter
out
mov
inc
pop
fsubrs
mov
in
aad
pop
xor
jp
shll
jns
inc
mov
addr16
jbe
cmp
dec
dec
mov
outsb
rcll
scas
in
enter
pop
stos
inc
inc
adc
xorl
or
daa
jmp
xchg
ret
cltd
xor
mov
fcmovu
lahf
rcrl
out
imul
fcmovnbe
popf
xchg
lods
mov
pusha
aad
pusha
sarb
cmpsb
xchg
mov
into
in
jb
mov
std
jnp
jns
fwait
jae
inc
push
mov
das
push
test
jb
insb
cmpsb
fsubrl
sahf
in
data16
and
int
sbb
and
pop
stos
fwait
aad
in
lods
and
adc
pop
cmpsl
add
fwait
testb
je
aad
stos
jg
jb
mov
jl
icebp
xchg
add
and
pushf
outsb
jno
mov
push
movsl
stos
and
daa
dec
ss
ret
dec
jg
sub
xchg
mov
in
sub
ret
lds
cltd
mov
cld
mov
rolb
test
mov
mov
push
out
and
addb
push
in
movsl
dec
xorl
jmp
bound
arpl
ljmp
sub
pop
test
aam
aaa
test
lds
jne
and
cs
enter
nop
cmpsl
sub
dec
lea
in
mov
sub
repnz
sbb
in
and
mov
sub
ljmp
cmp
pop
xor
mov
scas
divl
sbbl
bound
rcrl
xor
loope
and
push
sub
inc
neg
xor
mov
mov
or
xorl
push
cmpl
stos
sti
mov
test
xor
jmp
cld
mov
out
add
mov
lods
sub
and
pop
push
in
popa
lea
subb
xor
inc
jmp
add
xchg
add
mov
andb
sub
call
fwait
sti
cmpsb
mov
adc
loop
pushf
insl
lock
les
mov
xchg
adc
sub
movsl
ror
mov
lahf
aas
mov
xorb
mov
push
cwtl
ret
into
jae
cltd
icebp
inc
cmp
rclb
jae
jge
and
loopne
fadd
in
inc
xchg
stos
dec
push
push
push
push
jge
mov
stos
fisubrl
addr16
ja
lea
ja
cwtl
dec
icebp
jne
ds
pop
icebp
hlt
in
fucomip
mov
cmc
ret
stc
mov
jo
cmpl
sbb
cltd
jge
add
out
das
inc
insl
dec
xor
jmp
popa
adc
jg
loope
notb
orl
aad
psubd
data16
test
xchg
dec
lea
or
pop
stc
notl
out
repnz
clc
repnz
mov
lret
xchg
les
scas
int
mov
fidivrs
mov
mov
push
ss
sub
rclb
jl
cs
lds
test
call
inc
push
push
mov
xor
xor
shrl
mov
stos
adc
push
into
out
pop
roll
mov
insl
sbb
icebp
adc
fnsave
into
sub
enter
sub
icebp
push
cmp
mov
pop
xchg
or
push
push
outsb
addr16
dec
pop
mov
and
jns
mov
xor
mov
jge
fbld
subb
rcll
add
push
sti
addr16
xchg
fstps
cli
push
xchg
divb
shlb
in
inc
xchg
arpl
pop
fcoms
pop
push
xchg
insl
lret
mov
mov
sbb
xchg
mov
fisubs
jae
push
ror
push
lcall
sbb
inc
dec
mov
xchg
cmp
push
test
sahf
fcomps
mov
lcall
or
pop
nop
xchg
sub
push
and
repz
pusha
divps
int
jb
sub
mov
push
lea
imul
loope
and
stc
jno
test
push
xchg
dec
movsl
inc
cmp
jnp
popf
xchg
loope
inc
movsb
push
push
xor
xor
jg
ljmp
addr16
mov
mov
fwait
decb
mov
movsb
pop
pop
adc
jb
aas
and
adc
push
insl
jl
and
in
push
mov
mov
inc
xorb
xchg
fisttps
pop
pop
push
and
xchg
imul
inc
lret
adc
xchg
sbb
into
stos
mov
repz
mov
sbb
outsl
dec
in
mov
into
or
bt
cltd
popaw
aad
jmp
dec
cmp
fdivrl
in
pop
loop
inc
mov
lret
int3
ficoml
daa
adc
dec
mov
mov
test
cmp
and
sahf
sbb
dec
pop
inc
or
movsl
pop
mov
cli
sbb
add
dec
ja
hlt
cmp
jnp
xchg
pop
or
xchg
hlt
mov
imul
outsb
scas
push
std
iret
and
add
pop
sub
test
or
mov
xchg
je
sarb
in
or
hlt
lock
fisttpl
pop
jae
fnstenv
fdivrl
in
or
data16
test
sub
adc
scas
loop
inc
jbe
push
sub
xor
jmp
icebp
jb
push
xor
inc
and
je
fwait
xor
or
stos
xchg
jae
cmp
into
and
push
or
fwait
test
or
jb
fidivrl
sbbl
sub
and
punpcklbw
jge
in
mov
jmp
movsl
stos
aas
sbbl
mov
add
jae,pn
add
mov
shr
pop
decl
daa
out
mov
cmpsl
ret
stos
adc
mov
sbb
xor
sbb
dec
mov
xchg
mov
in
xchg
loop
pop
in
mov
fisttpll
in
shrl
jbe
xor
jbe
adc
pop
into
mov
or
int3
pop
sbb
push
enter
ret
pusha
sub
adc
push
sahf
sbb
sub
add
lods
xor
mov
pop
mov
or
dec
popf
lods
andb
jno
and
lds
sub
sub
scas
rolb
dec
and
push
adcb
jg
movsl
aaa
push
out
repz
sbbb
jecxz
imul
sarb
inc
inc
mov
and
ficoml
fstl
aaa
into
inc
mov
loope
sub
mov
into
stos
push
ret
push
loope
fwait
aas
mov
pop
aam
rorl
lods
xchg
es
and
xbegin
subb
cmp
or
mov
int
mov
xorl
and
jp
mov
clc
and
adc
stos
lock
jnp
mov
call
call
add
sub
add
xchg
inc
add
fcmovnbe
int
sahf
dec
sub
mov
jns
fsubrl
and
bound
pop
out
mov
push
dec
test
add
pop
push
insl
aas
xchg
aam
sub
cmc
cwtl
cmpsl
xor
jp
pop
daa
mov
and
ja
int
sbb
bound
xchg
ds
sub
inc
jg
iret
dec
inc
mov
cltd
loop
call
lock
stc
fs
sarb
das
lds
pop
leave
shrb
ret
dec
ja
push
jp
rcrb
sahf
mov
pop
mov
outsb
mulb
imul
adc
sbb
pusha
ds
jmp
scas
addb
and
dec
pop
shlb
mov
jecxz
movsb
push
mov
jge
je
xchg
loop
cmpb
pop
cld
dec
adc
out
pop
pop
mov
test
adc
dec
pop
dec
jmp
incb
mov
xlat
fstp
aad
xor
das
mov
out
shlb
pusha
dec
inc
test
mov
jle
sub
ret
push
insl
dec
add
cli
popf
lock
stos
imul
lcall
sub
adc
mov
mov
sahf
addl
sarb
adc
repz
push
nop
or
push
xor
pushf
bound
push
mov
xlat
adcl
or
push
inc
test
add
pop
lock
sub
sahf
xchg
xchg
cmp
ret
mov
je
ja
pop
mov
push
jns
inc
pop
loopne
sub
mov
push
jb
sub
ret
push
xchg
mov
lds
and
mov
fcomi
cli
imul
mov
jns
lods
push
mov
push
imul
lcall
sub
mov
sub
mov
jecxz
scas
dec
rcrb
out
imul
jo
xor
xor
jmp
or
fistpl
aas
mov
leave
insb
inc
fisubl
iret
test
mov
xchg
aaa
inc
loop
lock
jnp
stos
imul
push
std
mov
mov
or
mov
inc
mov
adc
pop
xchg
jne
adc
movsl
fs
add
movsb
push
mov
lods
testl
repnz
test
fildll
push
xor
fistps
test
das
js
mov
loopne
dec
mov
dec
cmc
or
imul
cmp
xor
cmp
test
in
push
leave
xchg
mov
fwait
cmpsl
or
cmp
cmp
xlat
or
outsb
aad
mov
cltd
push
dec
testb
adc
sbb
mov
xchg
mull
add
leave
dec
jne
jnp
mov
xlat
mov
lcall
outsb
lods
imul
dec
push
or
movsb
mov
idiv
or
xor
or
lret
xor
lock
and
sbbb
ret
jmp
dec
push
add
adc
in
fwait
test
xor
dec
ret
jmp
mov
mov
js
or
leave
frstor
fwait
dec
mov
jge
pop
outsb
aas
loope
aad
xchg
fisttpl
mov
bound
xchg
je
cmp
add
popf
fs
je
imull
test
jo
push
xorb
cmp
sub
inc
inc
inc
mov
sbb
repnz
mov
mov
jo
cmp
mov
and
sbb
stos
adc
xchg
xchg
lds
out
push
loopne
scas
xchg
nop
fdivrs
xor
xchg
fwait
mov
sbb
dec
mov
ret
or
bound
negb
mov
mov
call
sbb
call
or
loope
jg
inc
add
xlat
or
std
das
adc
lods
xchg
ljmp
sub
lock
test
sub
js
and
cmp
std
rcrb
call
add
pop
pop
das
fmull
jl
lcall
and
mov
popa
xchg
push
dec
loop
dec
dec
cmp
lods
xchg
jne
mov
popf
fs
sbb
add
test
sub
mov
push
mov
xchg
mov
imul
loope
hlt
mov
sub
fildll
loope
xchg
sbb
inc
pop
rorl
into
mov
cmp
inc
mov
xlat
and
mov
stos
mov
dec
pop
push
ss
clc
repz
jno
outsl
jp
xor
mov
sbb
push
prefetch
jnp
sub
movsl
pop
movd
popa
or
pop
and
add
std
movsl
adc
shll
cmp
call
lea
daa
ja
shlb
notb
aas
dec
and
jnp
arpl
mov
cs
jo
lahf
lret
std
das
mov
mov
jbe
push
pop
cmp
jmp
leave
dec
mov
int3
je
cltd
mov
test
loopne
mov
mov
out
mov
cltd
xor
adc
adc
dec
lock
imul
sub
xlat
xchg
fimuls
fidivl
lcall
mov
add
cmp
call
mov
cs
push
clc
in
clc
push
aaa
das
adcl
jnp
mov
mov
cwtl
xchg
int
mov
movl
shr
xchg
jmp
xor
dec
add
lahf
adc
add
push
jo
outsl
pop
cmp
int
push
mov
hlt
insl
addr16
data16
int3
aam
pop
enter
and
push
icebp
dec
movsl
fmul
cmp
loop
mov
sub
add
pop
hlt
lods
data16
enter
jp
testb
dec
stc
add
mov
mov
enter
scas
or
out
and
gs
add
sbb
or
aam
dec
loop
dec
adc
cmpsb
sbb
dec
mov
pop
aaa
das
xchg
dec
xorb
jle
or
popa
cltd
sub
dec
dec
xor
sub
push
mov
mov
test
or
mov
dec
add
gs
aaa
sbb
sbb
je
xor
dec
mov
sbb
pop
mov
aad
mov
hlt
cmp
jmp
push
or
mov
pop
sahf
aaa
add
jmp
outsb
out
jl
xchg
cmp
pop
sbbb
out
lea
inc
dec
out
out
xchg
pop
mov
and
push
mov
dec
xor
je
aaa
jecxz
mov
mov
bound
jecxz
mov
mov
fisubs
xchg
jnp
inc
jne
sbb
xchg
in
mov
cwtl
pushf
mov
jl
adc
imul
mov
lds
int3
or
sahf
jge
mov
cwtl
into
pop
mov
out
pop
dec
push
les
or
inc
setns
mov
mov
push
push
sub
cmp
loope
xor
mov
shll
fdivp
pop
arpl
fidivrl
int
adc
popa
push
dec
stos
pop
adc
outsb
and
ss
dec
clc
push
push
cli
sbb
out
js
inc
enter
in
mov
cmp
jbe
pop
dec
mov
out
push
cmpb
jmp
or
loopne
mov
icebp
in
bound
lods
mov
or
and
mov
and
ds
jne
fmull
mov
dec
out
push
imul
lea
xor
and
pop
aad
pusha
add
ds
cmp
andl
cltd
inc
mov
sub
mov
fstpt
cmpsb
fildl
pop
in
sbb
in
mov
sbb
jns
imul
mov
scas
push
repnz
in
push
add
nop
sbb
les
pop
pop
add
cmp
pop
ficomps
dec
rorl
mov
insb
in
dec
xchg
sub
or
or
fsubrs
and
add
neg
sbb
daa
and
mov
dec
pop
inc
push
push
sub
add
ljmp
shll
jge
movl
fnsetpm(287
sub
mov
sub
cs
fwait
fs
mov
sbb
mov
jne
and
inc
jge
add
nop
sub
mov
insl
cwtl
or
cmp
bound
mov
shlb
sbb
ret
xor
das
enter
mov
push
or
scas
out
dec
inc
and
push
in
ja
mov
int
nop
push
add
jle
inc
outsb
xchg
push
test
and
inc
add
lret
cwtl
mov
mov
vmovaps
test
cld
loop
pusha
mov
sti
sub
sti
iret
sub
icebp
flds
mov
popa
lahf
lcall
icebp
adc
push
repnz
xchg
pop
sbb
jo
xchg
fnstenv
in
adc
pop
jge
dec
ljmp
aaa
shrl
andb
cmp
push
jnp
xor
loopne
jle
mov
pop
or
push
addr16
cmp
gs
pop
iret
dec
pop
sbb
popl
sbb
addr16
mov
mov
xor
test
mov
arpl
xor
into
xor
xchg
pop
aad
adc
ss
push
push
lods
cli
andl
cli
and
cmp
fs
mov
sar
loop
add
iret
and
pop
xchg
vshufpd
mov
mov
sahf
lcall
es
mov
pop
and
inc
outsb
sbb
add
das
fistpl
fsub
jo
clc
call
inc
pop
xchg
into
inc
out
adc
xor
adc
and
xchg
dec
xor
and
xchg
xchg
sahf
xchg
lock
bnd
jecxz
mov
sbb
jmp
xlat
xor
push
mov
aaa
or
test
aas
inc
decb
lahf
jne
and
fisttps
lret
je
sahf
mov
inc
cmp
mov
dec
rcl
fcompl
mov
adc
repnz
push
mov
cmp
pop
out
lret
pop
mov
add
jecxz
out
movsb
add
sub
jecxz
ja
mov
mov
jb
movsl
sub
jle
outsb
adc
xchg
adc
addr16
pop
cli
or
inc
gs
imul
mov
xchg
jle
push
stc
jg
and
sbb
outsb
mov
sbb
aad
imul
ljmp
push
mov
mov
or
cmp
sbb
xor
xchg
mov
arpl
stos
inc
mov
mov
push
insb
lea
int
int
sahf
xor
je
inc
into
rcrb
or
pop
cld
add
iret
fists
popf
push
imul
push
push
and
ret
into
das
loope
fcmovnu
int3
shll
and
mov
fimuls
nop
cmpsb
lds
shlb
add
jecxz
std
mov
and
push
lret
lods
fstps
aam
test
lods
dec
push
sti
out
js
pcmpgtb
scas
in
addl
bound
movsb
pusha
jns
subl
mov
dec
lret
add
push
pop
jo
mov
xlat
xor
pop
cmp
push
popa
decb
cmpsb
mov
loop
pop
and
in
jl
fcoms
mov
in
sbb
push
inc
sub
pop
hlt
dec
sbb
test
mov
mov
test
mov
pusha
fbstp
xchg
inc
pop
inc
insl
ja
cwtl
aaa
sub
test
dec
arpl
js
xor
mov
scas
iret
cmp
pop
out
ds
inc
mov
in
stc
das
push
rcrb
mov
lret
mov
mov
test
add
mov
mov
mov
loop
mov
imul
sbbb
mov
out
adc
xor
sbb
jo
mov
jne
jne
push
fwait
lahf
dec
mov
xor
adc
and
movsl
sahf
dec
fwait
push
sbb
pop
ret
orl
shll
lcall
cwtl
jae
add
mov
hlt
mov
dec
inc
call
daa
sub
je
cs
fldenv
cmp
lds
pop
sahf
sub
rcrl
cmpsb
test
push
inc
ret
das
sbb
pop
cli
shl
xchg
sub
xchg
cmp
and
sti
xchg
inc
sub
adc
dec
fnstsw
push
or
ret
mov
pop
mov
popa
sub
or
mov
sub
or
adc
clc
add
jbe
fptan
and
pop
push
sbb
lods
repz
call
jg
int3
inc
dec
pop
enter
inc
fsubrs
sahf
dec
int
fcoms
je
andb
inc
mov
movsb
divb
mov
push
sub
rcrb
aas
dec
mov
scas
mov
cld
ljmp
push
pop
cmp
lret
xchg
in
out
loopne
mov
out
mov
push
popf
pusha
movsb
repnz
cmp
jp
mov
mov
add
pop
js
jnp
mov
fwait
pop
push
adc
rcrl
or
ja
je
push
inc
cs
ret
dec
sub
cmp
mov
fdivrl
loopne
test
jmp
push
cmpsl
xchg
and
and
sbb
lock
fwait
mov
loopne
sbb
in
sub
insl
mov
cmc
xlat
fisttps
js
fldcw
mov
scas
sti
sub
and
jae
inc
outsl
je
addb
push
cmpsb
mov
push
mov
int3
inc
popf
out
popa
add
push
pop
cmc
data16
add
mov
popa
ret
inc
sbb
dec
inc
lods
xorl
iret
shr
sub
repnz
cmpl
mov
int
jmp
into
xchg
adc
cmp
xorl
les
repz
pop
sbb
push
xlat
jg
mov
xchg
mov
xchg
enter
xchg
idivl
int3
movsl
dec
jo
pop
push
into
fs
nop
and
pop
orb
xchg
cmp
push
jne
mov
xchg
rclb
jbe
ret
dec
xchg
test
pop
mov
push
jae
mov
lahf
mov
cmpsb
cli
sbb
dec
inc
sub
mov
popa
inc
subl
ja
push
out
insl
mov
push
jne
or
mov
pop
rorb
imul
jg
mov
xor
cmp
sti
leave
mov
mov
nop
into
lret
pop
xchg
cmc
dec
lock
fcomip
movsb
mov
pop
inc
push
data16
nop
imull
rorl
xlat
test
pop
xchg
add
sub
arpl
icebp
scas
incl
mov
xlat
jmp
and
adc
shll
icebp
outsl
lret
pop
xor
and
jbe
pushf
adcl
lock
fs
cmc
inc
and
inc
iret
mov
int3
popa
mov
fcmovnb
repnz
xor
pusha
movsl
jmp
loop
inc
pop
enter
sbb
dec
das
sbb
dec
stos
inc
jb
mov
mov
inc
enter
mov
cmp
dec
xchg
push
adc
cmp
fsubrs
cs
ljmp
leave
outsb
jl
clc
lcall
je
lahf
or
jp
stos
push
das
negl
dec
mov
fiadds
or
sub
fst
gs
adc
cmp
push
jae
insb
in
sahf
xlat
ja
cmp
cmp
mov
notl
ror
shrb
inc
sbb
sub
inc
popa
xor
lea
in
cmp
mov
mov
push
adc
xchg
push
movsb
inc
cmpl
mov
ficoms
cmp
jno
pop
lods
or
inc
jne
loop
add
pop
jo
mov
or
pop
xor
push
push
gs
mov
adc
int3
incl
inc
push
pop
fcoml
or
in
pop
jae
loop
test
cli
dec
bnd
stos
jb
push
cli
mov
xchg
cld
inc
xor
push
lcall
jmp
ret
out
stos
push
fsubl
mov
mov
roll
pop
or
scas
inc
int3
or
clc
dec
ljmp
pop
cltd
xchg
and
sbb
sbb
loop
shrl
nop
lret
fldenv
in
pop
mov
ret
jge
clc
lea
outsb
and
repnz
movsb
popf
inc
mov
push
lcall
mov
add
xor
pop
test
or
inc
ds
mov
push
adc
sbb
jo,pt
pop
mov
add
inc
mov
lds
mov
mov
mov
adc
cmp
dec
shl
xor
cmp
add
orl
mov
js
cmp
data16
cmp
pushf
hlt
repz
jne
call
and
gs
rcl
adc
lret
lea
pop
inc
aaa
mov
dec
rcrb
jmp
or
mov
stos
insl
xor
mov
mov
mov
mov
dec
sahf
add
das
mov
aam
test
in
lds
leave
fistps
ja
rcll
jle
sarb
sar
cmp
mov
scas
sbb
call
pop
cmp
push
negl
jmp
mov
jae
jo
test
push
bnd
xchg
jle
pop
fdivrp
iret
push
imul
in
stos
dec
push
inc
push
mov
test
jge
popa
and
push
xor
sbb
mov
pop
mov
imul
mov
push
and
mov
mov
popa
sub
pop
enter
jmp
lock
push
or
or
adc
test
xchg
aaa
fimuls
push
test
or
fcmove
sub
add
mov
decl
lods
mov
mov
mov
mov
les
dec
add
sbb
popa
je,pt
inc
cmp
push
icebp
movsb
out
push
js
imul
imul
hlt
or
cmpsl
ja
ret
or
lds
cld
call
mov
arpl
dec
adcl
or
push
imul
popa
sub
or
sbb
pop
les
push
mov
mov
js
sub
movsl
mov
sbb
das
rcrl
imull
daa
rcrl
xchg
in
mov
dec
stos
dec
das
imul
inc
movsb
mov
xor
jmp
inc
xor
div
and
pop
lods
clts
sbb
lret
cld
mov
out
push
add
push
mov
inc
das
dec
mov
aad
mov
insl
subb
lods
stos
popa
xchg
cmp
shll
xchg
jg
fisubs
mov
loop
push
stos
jg
dec
les
fsubs
dec
xchg
jmp
faddl
adc
arpl
cld
and
xor
sub
xchg
adc
sbb
xor
inc
push
inc
sub
jg
sbb
dec
or
fnstenv
prefetch
mov
push
ja
and
push
xchg
inc
int
sub
dec
lret
sub
cmpsb
rorl
dec
cmc
push
pushf
dec
xchg
cmc
push
push
mov
int3
mov
sbb
arpl
sbb
ja
pushf
jg
leave
fbld
in
insb
sbb
sbbl
push
popf
cltd
mov
divl
outsb
mov
gs
inc
insb
sub
outsl
ds
mov
hlt
push
xchg
lods
xchg
outsb
into
and
pop
xchg
decl
lahf
jae
jg
push
std
push
pop
cmpb
movsl
mov
in
lock
push
mov
test
jnp
idivl
jge
inc
push
inc
int
ss
cmc
mov
add
jno
ret
xor
push
sbb
fnstcw
jae
jmp
mov
dec
dec
add
cwtl
lret
sub
sub
push
and
std
scas
scas
dec
push
dec
sbb
xchg
and
push
movsb
outsl
push
jo
in
test
sub
mulb
push
gs
sub
jb
repnz
imul
mov
cld
test
dec
mov
in
mov
cmp
adc
icebp
add
aas
sbb
imul
cli
push
out
cmpsl
jmp
in
sub
and
cmpsb
lock
push
loope
dec
sub
in
hlt
pop
inc
mov
sti
andl
mov
leave
push
outsb
std
in
dec
cmp
das
mov
sub
pop
jnp
stos
xor
popa
sbb
xchg
idivl
mov
cli
xchg
cmc
sbb
jp
out
insb
ja
inc
imul
imul
stc
repnz
xor
loopne
push
pop
add
fdivr
hlt
xor
sarb
das
das
and
mov
addl
cmp
jns
nop
sub
repz
int3
or
adc
popf
mov
cmp
scas
push
ret
or
hlt
xor
into
repnz
push
cli
xchg
insl
sti
hlt
cld
ds
mov
push
pop
mov
addr16
sub
cltd
or
add
adc
mov
mov
lret
adc
cmp
stos
pop
cli
push
in
push
dec
rcrl
lods
ljmp
sbb
aam
mov
mov
es
adc
leave
push
sub
adc
mov
adc
mov
rclb
push
into
mov
and
and
push
inc
in
mov
xlat
scas
lods
hlt
mov
shl
push
lea
mov
adc
int3
add
xchg
data16
test
in
sbbb
sub
lret
jp
cmp
sti
pop
add
out
in
inc
inc
dec
add
in
mov
pop
in
mov
insl
sub
adc
lea
sub
jl
cmp
mov
xor
mov
aas
popf
leave
sbb
or
pop
inc
add
sbb
ja
jg
test
cmp
add
xor
mov
and
dec
testb
mov
sbb
je
int3
lcall
shll
int
xchg
jmp
outsb
jmp
ficoml
push
jge
mov
pop
add
cwtl
out
fisubrl
stos
iret
cmpsl
mov
out
or
shll
shlb
lock
popa
int3
jecxz
xor
arpl
test
imul
int3
sbb
in
or
lcall
mov
cwtl
or
arpl
dec
or
adc
fildll
in
ficomps
push
push
lock
pop
pop
dec
sbb
mov
xor
mov
and
fildll
rol
shlb
cmpsl
xor
je
ret
mov
xchg
lea
sub
das
xchg
mov
shrb
cmp
gs
cmp
test
jle
pop
ret
pop
into
mov
push
sbbl
lret
cmp
cmp
fisubl
sbb
or
cs
mov
and
loope
xchg
clc
sbb
pop
mov
lahf
ret
jne
insl
inc
jmp
xor
cs
int
shll
ret
pop
repz
testl
pop
jp
enter
jg
lods
jbe
jle
leave
stc
in
jmp
inc
push
les
mov
jl
lock
sub
imul
test
pop
rorl
jle
std
call
and
das
mov
cmp
push
movsb
fdivs
mov
in
outsl
not
pop
fucom
xlat
cs
je
jle
andl
fisubrs
stos
mov
sbb
or
pop
lds
inc
inc
outsl
int3
xchg
ret
or
cmp
and
add
inc
movsl
arpl
dec
rorl
mov
ret
insl
mov
or
dec
movsb
lret
les
xor
shll
inc
mov
xorb
dec
in
pop
or
adc
sub
and
insl
push
into
dec
mov
jmp
mov
sbb
pop
and
pop
pop
or
adc
or
cmp
and
mov
push
or
jmp
movsb
js
mov
push
xor
cwtl
mov
and
roll
pop
xor
int
mov
or
aaa
jno
or
mov
adcl
mov
pop
sbb
inc
shl
sub
out
and
mov
cwtl
fstl
mov
cmpsb
jne
xchg
xchg
xchg
lahf
hlt
vhsubps
inc
jmp
pop
stc
adc
cmpb
mov
movsl
sub
repz
out
xchg
and
jge
pop
pop
mov
decl
inc
or
pushf
repz
lea
lcall
in
and
mov
and
mov
leave
cmp
or
xor
or
mov
outsb
mov
lock
lcall
enter
cmpsl
push
adc
push
and
call
ret
push
mov
sub
pop
dec
push
aam
ret
outsl
fldl
call
stos
mov
fidivl
push
pop
push
inc
cmp
imul
lock
sbb
xor
mov
sti
mov
xchg
stos
decl
jb
sbbb
hlt
cmp
sub
xor
repz
je
adc
out
push
sbb
ret
test
sbb
insl
popa
adc
sub
xchg
mov
mov
test
addl
int
or
sbb
cld
jnp
sbb
xchg
lret
iret
stos
cmp
lds
rcrb
movsl
sbb
sub
jp
mov
in
jbe
jns
int3
push
fidivs
stos
lcall
add
in
stos
xchg
xchg
jge
fists
out
push
mov
xchg
mov
push
adc
pop
addr16
push
lret
in
add
in
ret
jne
fisubrs
les
mul
pop
inc
leave
jb
sahf
inc
cld
add
nop
mov
mov
imul
mov
ljmp
shrl
nop
mov
pusha
rol
rorb
pop
es
xchg
cli
out
cltd
rorb
cmp
sub
subb
pop
out
jmp
mov
jg
xchg
popf
jae
cwtl
adc
add
dec
mov
sbb
mov
les
xor
ja
fldt
dec
fcomps
and
mov
sbb
or
sbb
xchg
stos
scas
les
iret
jnp
mov
inc
add
mov
stos
stos
outsb
inc
lea
xchg
add
sbb
mov
rcrl
std
mov
adc
popf
rorb
outsb
xor
pop
xor
lods
jbe
roll
call
aaa
xlat
pop
rclb
jnp
add
pop
cmpsw
stos
adc
inc
scas
out
push
mov
cmp
inc
std
and
loope
pop
mov
dec
aad
lcall
test
xchg
sbb
imul
dec
out
lahf
std
sbb
sub
mov
lret
mov
sbb
sub
xor
imul
xor
data16
clc
lahf
jne
rorl
dec
jge
sub
xchg
cwtl
sbb
inc
xlat
xchg
shr
push
xor
inc
xor
icebp
call
push
xor
fistl
mov
fsubs
fldl
jno
mov
into
and
jb
loope
pusha
xchg
mov
adc
subl
bswap
xchg
pop
enter
jns
dec
mov
or
mov
add
sbb
ret
and
jmp
je
clc
fwait
mov
loop
lret
mov
stos
xchg
sbb
fs
jmp
cltd
fisubl
adc
iret
shll
andl
xor
mov
dec
hlt
xchg
push
xchg
cmpsl
add
repnz
aad
fs
xchg
in
hlt
div
jle
push
jbe
jmp
dec
test
xor
xchg
mov
rcr
sbb
or
fmull
xchg
hlt
cmp
pop
dec
push
pop
add
dec
mov
jae
cmp
xchg
icebp
sub
test
mov
cmp
jae
loopne
sub
fisubrl
adc
push
test
dec
mov
repnz
mov
jbe
insb
mov
jb
out
test
adc
insl
push
lcall
inc
pop
cmp
mov
mov
push
inc
dec
dec
xor
mov
fidivl
cmpsl
stos
sub
jl
add
rolb
push
stos
sub
dec
mov
mov
sub
xchg
pop
and
inc
mov
scas
fwait
push
scas
mov
test
push
jbe
rcrb
in
cmc
mov
mov
add
sub
and
mov
sub
jnp
jns
jo
or
enter
jmp
pop
push
roll
jbe
jb
add
repnz
popw
fnstenv
mov
sbb
in
inc
shr
or
inc
sti
dec
ss
xchg
aaa
push
and
xchg
push
lcall
add
pop
cmc
test
dec
jmp
and
shlb
scas
jg
repz
subb
push
rol
cmpsb
inc
loope
mov
aas
mov
and
add
mov
int3
cmp
push
test
insl
mov
push
mov
movsb
iret
xchg
push
movsb
and
sbb
fwait
sub
out
or
jbe
fists
enter
shr
aas
out
stos
sti
shl
cmp
inc
sbb
int
push
cwtl
jnp
or
xor
rcrl
mov
sbb
and
jg
push
shrd
xchg
mov
es
xchg
repz
ja
orl
das
insl
mov
sar
mov
jns
xchg
popa
idiv
stos
jle
fnstenv
lock
dec
push
jnp
mull
loop
and
stos
or
or
jnp
inc
push
ss
push
push
decb
mov
or
sarb
mov
xor
lods
pushf
mov
sbb
pop
testl
dec
data16
mov
inc
jno
jno
popl
pop
pusha
aad
aad
pop
dec
inc
inc
cli
aas
jl
or
pop
loopne
cmp
sar
fs
mov
push
ret
pop
add
scas
add
sbb
cmp
test
mov
std
adc
xor
xchg
cltd
and
cmp
mov
mov
imul
addr16
mov
jb
xchg
inc
pop
mov
sub
out
mov
sahf
adc
pushl
cwtl
dec
push
orb
fsubl
push
fsubrs
and
adc
add
cmpl
xchg
inc
add
je
insb
shlb
push
daa
jae
leave
shlb
pop
shlb
mov
popa
push
movsl
or
les
push
inc
imul
out
aam
into
inc
lea
cmpsb
jg
adc
pop
arpl
push
xchg
lret
push
mov
push
xchg
arpl
pop
jl
daa
popa
sti
mov
call
xchg
mov
jmp
nop
mov
test
push
test
ja
pop
xlat
mov
cwtl
jmp
adc
fnstsw
negb
out
sbbl
lods
xchg
ljmp
stos
mov
inc
push
pop
call
xchg
movsb
jnp
int
mov
stc
adc
repz
fldl
test
mov
out
in
mov
jl
cmp
or
popf
pop
mov
mov
xchg
or
or
cltd
sub
movsb
pop
fwait
adc
and
cltd
lcall
sub
sub
xchg
shlb
mov
fmul
subl
xchg
pop
jae
pop
push
cmp
inc
and
xchg
int3
ja
fcomps
mov
orl
jmp
fmull
scas
insb
sbb
in
dec
das
jne
jge
loope
xchg
mov
in
push
inc
out
and
pop
and
rolb
jne
pop
movsl
bound
pop
adc
and
dec
pop
dec
aaa
push
das
or
jg
mov
xor
clc
rcrl
pop
sub
push
adc
and
or
mov
sti
addl
lret
add
fnstcw
ret
sub
cltd
sbb
int
jo
and
ds
adc
dec
pop
arpl
jo
sbb
icebp
pop
cvtdq2ps
fildl
mov
roll
sbb
cmp
sbb
and
jo
xchg
popa
movsl
aaa
jns
sahf
aam
add
popf
cmp
mov
fimuls
mov
ss
xchg
shrb
and
xchg
cmp
fists
or
xchg
add
arpl
xchg
insl
in
sub
sbb
nop
in
aad
push
add
pop
mov
and
sub
mov
cli
add
mov
xchg
mov
cmc
mov
fs
insb
mov
jmp
ret
mov
aad
jl
push
push
aad
repz
aaa
daa
jno
in
loope
imul
jno
add
inc
mov
in
mov
inc
mov
xchg
jae
inc
add
dec
mov
dec
xor
inc
inc
mov
fidivrl
push
push
outsb
lods
jae
add
lahf
xor
fwait
cmp
xchg
rcl
arpl
addl
jg
lods
jnp
and
cld
fdiv
les
daa
add
rcl
dec
test
and
mov
addr16
add
and
mov
xchg
push
inc
and
fchs
in
in
pop
cmpb
jl
add
pop
mov
ret
cld
andb
push
cltd
push
imul
adc
sbb
data16
repz
inc
in
push
outsb
loope
mov
outsl
in
loop
mov
loop
es
cwtl
pusha
xor
mov
jecxz
jbe
ficompl
add
inc
and
jg
pop
pop
sbb
xor
sbb
push
outsb
cmp
and
in
push
ja
push
movsb
addr16
dec
divl
lods
dec
push
frstpm(287
popf
arpl
inc
xlat
push
iret
sub
les
pop
xchg
xchg
in
fisttpll
push
daa
test
lcall
lret
arpl
adc
fcomp
dec
jb
mov
psubw
pop
sbb
dec
sbbb
sbb
jg
int3
stos
ret
jl
sub
loopne
dec
mov
jo
dec
mov
sbbl
gs
adc
pop
and
xor
sahf
sub
sti
mov
cmpb
in
pop
bound
mov
sbb
inc
add
xor
sub
adc
adc
in
lea
rol
or
faddl
jmp
es
push
sbb
test
test
scas
jnp
cmp
scas
push
xchg
jno
stos
loopne
sbbl
lahf
rclb
push
mov
pop
mov
and
insb
scas
or
sbb
jge
xchg
and
dec
adc
ja
movsl
pop
jle
push
push
pop
movsl
mov
mov
or
pop
jb
inc
pop
cltd
sbb
aaa
jmp
jmp
xchg
stos
adc
iret
shll
gs
inc
bound
add
idivl
cmpsl
jmp
push
addr16
or
inc
out
daa
pop
pop
inc
and
jne
sbb
push
and
push
bound
sub
xchg
lock
pop
stc
fmul
dec
stos
jb
jno
xchg
iret
movsl
scas
lds
clc
movsb
cmpsb
xchg
mov
loopne
jbe
sub
fs
or
ret
pop
lret
in
dec
jge
aad
xchg
inc
mov
inc
out
push
push
cli
xchg
jecxz
and
inc
jl
or
sub
mov
jle
pop
sbb
incl
fadds
mov
stc
cmpsl
jle
inc
pop
mov
insl
xchg
cmp
push
push
push
cmpsl
in
sub
xchg
xor
orb
aas
inc
setge
sub
loope
testl
inc
inc
add
xchg
mov
xchg
ja
fwait
rolb
or
test
push
or
and
cmp
loop
imul
das
mov
mov
xchg
add
aas
mov
testl
out
inc
iret
mov
scas
das
and
das
je
mov
cli
in
fisttpll
push
lock
test
ret
mov
lahf
jmp
xchg
stos
inc
cli
movsb
loope
mov
lds
lret
push
pop
pusha
icebp
cli
dec
mov
stc
cmc
aas
add
and
sub
mov
push
xor
adcl
add
stos
sbb
push
in
fcoml
ja
push
mov
aas
or
jecxz
test
xchg
sub
in
bound
or
xchg
pushw
mov
jae
dec
mov
xchg
sbb
mov
jb
and
add
hlt
enter
fstpt
aam
push
sbb
imul
ret
sahf
cmp
loop
push
mov
push
push
popa
lods
ja
testb
cmp
fimull
daa
in
lods
out
fidivl
imul
pop
in
pop
jns
or
dec
int
je
jmp
repnz
popa
pop
xlat
es
popf
or
dec
dec
mov
and
mov
lret
pusha
mov
add
sub
or
mov
pop
leave
inc
ret
add
mov
xchg
shrb
mov
jge
mov
pop
ds
add
cs
out
fbstp
sub
arpl
lds
xor
jne
ljmp
push
sbb
lahf
xchg
scas
nop
mov
lret
mov
sub
push
test
fnsave
sub
pop
ljmp
inc
add
dec
mov
cmp
sub
insb
outsb
or
mov
or
pop
add
movsl
fisubrl
fiaddl
sub
pop
pop
lcall
adc
push
aad
es
out
sub
pushl
stc
xchg
test
mov
and
dec
mov
out
ss
sub
push
xlat
enter
push
cmp
lret
daa
lea
shlb
stos
sbb
lret
adc
mov
push
push
lods
sub
cmc
fidivs
lahf
dec
cmp
jne
xchg
scas
add
cmc
push
cmc
ret
or
mov
mov
sub
test
pop
jle
jns
inc
or
push
out
insl
loopne
imul
sub
in
adc
jle
pop
bound
fstpl
in
or
stc
and
stc
lcall
stos
jge
lds
in
ss
leave
das
test
data16
xor
imul
add
ret
xchg
xor
hlt
pop
lea
aas
repz
scas
inc
xlat
mov
daa
pop
lea
out
mov
test
jo
in
jb
mov
push
inc
lcall
or
push
getsec
inc
mov
pop
and
adc
sub
ss
fst
push
xchg
stc
mov
mov
addb
mov
ja
cmc
rclb
sbb
sub
cwtl
push
popf
mov
jo
repnz
bound
rcll
fmul
imul
xor
add
sarl
xchg
cmp
pop
int3
sbb
dec
and
ss
lea
daa
pop
pop
inc
pop
in
sub
stc
movsl
inc
int
jbe
xchg
jb
imul
rolb
cmp
mov
popa
sub
and
es
pushf
repnz
mov
mov
arpl
xchg
fwait
xchg
sbb
cli
jnp
ja
jo
xor
ficompl
dec
push
es
lods
pusha
fstps
jnp
mov
fistl
add
fldt
insl
in
adc
xchg
bound
adc
adc
hlt
pop
jns
sub
clc
test
and
mov
jns
adc
sub
add
in
push
mov
lret
add
outsl
pop
xor
arpl
inc
push
cmp
call
and
out
pusha
and
hlt
ds
or
lret
into
imul
mov
mov
test
fisttps
xor
mov
dec
fistpl
push
push
jb
movsb
ret
cmc
sbbb
pop
mov
lret
mov
cmp
adcb
fsubr
or
das
xor
push
enter
mov
or
mov
movsl
incb
xchg
push
mov
fsubs
je
cltd
jae
dec
mov
ffreep
addl
add
lret
sti
sbb
js
pop
sub
mov
bound
xchg
movsl
loop
sub
out
lock
insw
mov
dec
jb
imull
nop
xchg
rorb
pop
cmpsl
lahf
xchg
adc
and
hlt
faddl
insl
addb
pop
scas
and
shll
mul
mov
mov
scas
pop
or
negb
and
pop
mov
jge
xor
ja
xchg
in
cld
popa
mov
push
push
and
push
mov
das
and
les
mov
incl
mov
es
test
push
aaa
sahf
inc
fistps
cmp
lds
jnp
imul
sub
inc
add
push
add
cwtl
mov
xchg
push
repnz
test
dec
sahf
inc
sub
stos
ss
in
fdivl
fistpl
inc
jns
mov
push
ja
lods
cmp
lds
clc
int3
cld
cltd
cs
movsb
cs
mov
bound
testb
mov
jg
test
adc
lds
xchg
xchg
bound
and
out
out
pop
add
je
pop
cmp
mov
xor
pop
adc
in
sbb
sbb
mov
rcr
lret
xor
xor
je
lods
fwait
adc
adc
rclb
mov
xor
mov
popf
xchg
loope
lahf
sahf
xchg
jnp
stc
jo
mov
sbb
shrb
add
fxch
add
movsl
data16
lret
dec
ljmp
jle
mov
test
dec
cwtl
dec
loope
sub
cmp
cwtl
movsl
push
adc
sub
push
adc
dec
insb
cmp
mov
jnp
xchg
mov
out
rcr
sub
movhps
jae
iret
loop
fldl
cmp
pop
adc
clc
mov
mov
loopne
xor
loopne
dec
mov
push
imul
nop
pop
rolb
mov
pop
sbb
and
xchg
les
call
xchg
mov
push
insb
jo
cltd
add
bound
cmp
mov
cmp
out
xchg
inc
mov
mov
lahf
ficoml
cld
inc
jle
jg
adc
mov
imul
inc
jg
into
pop
ljmp
ffree
push
mov
dec
xchg
sbb
pop
push
mov
fwait
dec
or
les
jp
pop
cmc
popa
call
or
sbb
in
xor
ljmp
xor
ja
sbb
sub
push
dec
mov
mov
imul
mov
out
shr
pop
mov
dec
mov
push
jb
add
ss
push
adc
je
pusha
in
outsl
mov
dec
mov
adc
std
sbb
xor
cmpsb
mov
adc
call
cmp
ret
mov
cmpsl
loope
cmp
mov
je
or
pop
sahf
xor
shl
repnz
jno
dec
and
cli
sbb
int3
or
xor
sahf
lock
ljmp
dec
push
and
aam
cmp
sbb
xor
clc
jg
dec
cmpsb
jb
mov
push
mov
daa
mov
mov
xchg
repz
pop
xchg
in
dec
js
pop
jo
mov
push
jp
xchg
sti
je
pop
ljmp
aad
inc
repnz
jmp
mov
cmpsl
and
aas
mov
mov
inc
or
mov
dec
flds
insb
mov
cld
sub
xchg
mov
mov
ss
or
mov
dec
mov
sysret
shll
mov
cmovle
stc
icebp
sub
xor
xchg
pop
mov
mov
mov
jp
ret
divb
in
or
push
adc
fs
xchg
mov
enter
scas
insb
push
jbe
jae
lea
jb
mov
or
fs
push
movsl
and
cmc
cmp
push
notl
mov
cmp
jmp
add
cld
rorb
insl
pop
sub
push
jb
loope
cli
cmpsb
testl
jge
je
add
out
fnstsw
cmp
push
sub
mov
xor
sti
pusha
mov
dec
mov
orl
cld
jno
dec
push
stc
repz
stos
inc
and
or
and
xchg
mov
popf
and
inc
push
push
subb
les
je
jecxz
leave
pop
mov
dec
inc
pop
jae
dec
push
mov
pop
and
outsl
and
les
mov
adc
push
xor
ret
or
pop
js
mov
sbb
dec
jns
xchg
cwtl
cmpl
xor
fs
pop
repz
cmp
lret
jb
jge
pop
scas
dec
and
push
bnd
or
sub
outsl
cmp
add
or
jns
lods
imul
cmpsb
lds
movsb
iret
sbb
jp
insb
mov
mov
jmp
pop
es
push
adc
cmp
adc
mov
sbb
sarb
lcall
aam
push
js
mov
mov
mov
jp
stos
mov
in
hlt
or
out
xchg
fisubrs
push
sub
test
scas
inc
adc
mov
addr16
push
out
add
dec
pop
jmp
mov
sarl
cmpsl
fs
pop
out
scas
movsb
cli
push
dec
push
and
ret
scas
xchg
pop
push
or
jmp
test
push
mov
lcall
xchg
inc
hlt
push
insl
cmp
or
cmc
push
xor
dec
dec
cli
dec
and
ret
mov
dec
cmp
mov
or
mov
jne
lcall
xor
in
cmpsb
aam
rorl
jmp
jns
mov
rcll
jge
mov
sub
sbb
cmp
inc
inc
cld
adc
sti
dec
mov
inc
jmp
jl
dec
xor
out
jbe
out
fsub
subb
cmp
cltd
leave
jp
push
in
fldenv
out
push
add
lock
cwtl
push
inc
stos
add
xchg
mov
scas
or
mov
cld
imulb
cli
cwtl
int3
or
test
lock
and
aas
push
or
ss
stc
inc
pushl
loope
xchg
cli
fucomi
idivb
int
adc
inc
dec
push
leave
lods
fstp
sub
dec
lret
cltd
jb
data16
inc
mov
and
jae
add
dec
jge
mov
insl
scas
test
ret
xchg
shrl
test
imul
jns
aas
mov
popa
and
popa
les
jp
inc
imul
adc
gs
lcall
les
lds
xor
xchg
lcall
dec
and
inc
lods
push
popf
mov
xor
out
mov
pop
jmp
cmp
push
push
xchg
scas
rorb
aas
imul
or
sub
aaa
mov
sbb
idivl
loopne
sub
decb
aad
repnz
loope
dec
xchg
adc
or
fdivl
cmp
shll
jne
mov
xchg
mov
ljmp
stos
sub
jo
adc
push
and
or
push
out
in
leave
pop
push
das
lret
lds
pop
sbbl
in
sbb
xor
inc
cmp
fldcw
or
or
dec
jns
imul
xor
mov
out
jo
dec
rcl
fimull
lret
jle
adc
rcr
mov
fs
cwtl
rcr
fsubs
mov
pushf
jbe
xor
lcall
add
xchg
call
dec
int3
aam
test
popf
or
cvtps2pd
shll
inc
pushf
test
in
inc
iret
mov
sub
and
push
mov
lock
jmp
dec
and
or
pop
aam
hlt
test
jb
test
loop
adc
fbstp
jmp
lea
int
cmp
or
xchg
mov
pop
repnz
fs
ljmp
jo
fwait
dec
lods
pop
ljmp
sarl
push
jae
nop
dec
addl
mov
cmp
xor
out
pusha
pop
push
leave
pop
adc
pop
std
sbb
sub
push
cmp
pop
fbstp
inc
insw
mov
xor
arpl
sub
scas
mov
cli
pop
cmpsb
lds
mov
add
das
je
push
cmp
push
rcl
sub
int
js
mov
jae
dec
cmpl
jae
test
icebp
cld
shll
cli
inc
mov
jae
pop
lods
dec
sar
mov
loopne
out
lea
cmp
rcrb
sbb
aad
lcall
ficoml
les
sub
dec
lods
js
adc
xchg
jge
adc
outsb
xchg
pusha
jg
mov
jne
out
cli
imul
pop
test
stos
jl
int3
xchg
xor
xor
sti
jbe
popf
cwtl
data16
jp
xchg
inc
orb
inc
lcall
repz
push
add
popa
test
push
jns
fimull
das
xchg
in
xchg
pusha
xor
lret
or
xchg
into
int
ficoms
sub
lahf
mov
sbb
mov
mov
mov
xor
jg
push
and
xchg
inc
sahf
loopne
in
pop
mov
aaa
dec
inc
and
cmp
adc
push
fdivp
popf
fisubl
iret
test
adc
bound
or
lahf
inc
xchg
dec
imul
aam
pusha
xchg
xlat
mov
inc
xlat
jg
sub
cmpsb
pop
mov
add
cld
stos
mov
dec
cli
scas
ss
adcl
cs
in
pusha
pop
mov
sbb
cmp
clc
sbb
nop
add
rcll
fucom
cmp
test
xchg
aaa
dec
out
popa
inc
and
cmpsb
outsb
mov
push
mov
mov
mov
mov
mov
mov
scas
mov
jb
fcoms
cmp
add
jbe
stos
jno
pusha
bound
mov
dec
jmp
loope
add
shr
jb
add
gs
cmc
or
mov
cmpsb
movsb
sub
clc
push
or
icebp
fists
jmp
pop
add
jge
adc
ljmp
pop
sbb
pop
out
xor
cmc
jl
fists
xchg
test
xchg
push
adc
pusha
data16
idivb
sbb
push
or
sbbl
pop
sub
imul
adc
lcall
and
cli
clc
xor
adc
mov
shrl
add
pop
sub
jg
jnp
test
rorl
mov
lret
add
push
mov
sbb
sub
loopne
gs
mov
mov
pop
add
xchg
stos
mov
sahf
inc
out
push
mov
xchg
xor
mov
test
es
push
inc
xor
inc
mov
fsts
ja
lahf
sub
mov
cmpsl
ljmp
movsb
lret
cli
aaa
cmpsb
xchg
testb
mov
daa
pop
mov
rclb
add
loop
out
push
data16
imul
les
ret
loopne
popa
or
loope
popa
test
push
jnp
cmp
jnp
mov
sbb
sbb
frndint
push
cmp
cltd
xchg
push
loopne
ds
call
xor
push
lods
or
mov
mov
mov
lahf
xchg
leave
pusha
loop
push
dec
jp
sbb
xor
push
loope
lods
imul
lahf
enter
xor
sub
pushf
xchg
xchg
outsl
out
sbb
pop
push
andl
test
sub
pop
inc
jl
dec
adcb
jmp
mov
in
gs
jo
or
insl
test
xchg
test
call
mov
jae
hlt
mov
fstl
pushf
adc
pushf
dec
push
add
add
lock
cs
repz
jmp
test
nop
gs
cmovb
inc
out
data16
or
xchg
pushf
popf
xchg
or
cmp
or
dec
jl
addr16
sub
or
lods
adc
repz
in
ret
pop
iret
push
insl
mov
push
push
mov
add
lret
adc
fwait
lahf
mov
xor
lahf
pop
pop
and
add
pop
adc
lret
xlat
ljmp
adc
inc
mov
mov
mov
addr16
xorb
pusha
gs
dec
inc
je
pushl
les
icebp
xor
sub
int3
pop
cmp
ljmp
vmovhps
sbb
test
test
mov
xor
jg
sbb
fists
xchg
mov
testb
jg
push
nop
pop
or
insl
mov
gs
cli
aas
dec
or
std
lahf
adc
outsl
jnp
divb
sbb
lods
mov
imul
ret
ss
mov
push
mov
or
sti
in
dec
xchg
outsb
shrl
jle
in
std
pusha
test
and
cmp
lcall
jmp
jae
push
mov
outsb
push
sub
jge
sub
mov
lods
push
into
cmpsl
add
jmp
jbe
in
sbb
push
andl
lods
lock
fucomip
fnsave
fs
pop
scas
aad
lahf
jnp
xchg
jecxz
clc
pop
or
daa
clc
xchg
out
data16
pushf
mov
inc
and
adc
cs
test
es
fisttps
push
push
lret
lret
mov
aad
dec
ds
sbb
pop
nop
addb
sahf
inc
das
stos
out
repnz
repnz
test
lahf
push
mov
and
push
outsl
push
out
push
iret
mov
jg
scas
add
or
fimuls
mov
cld
mov
rorl
loopne
cmc
or
test
bound
mov
dec
mov
cmpsl
xchg
orb
ljmp
sub
adc
xor
repz
cwtl
dec
arpl
aaa
or
pop
pusha
sbb
sub
test
cltd
insb
push
stc
or
incl
sarb
int3
dec
dec
inc
stc
inc
aam
mov
pushf
sub
cmpb
pop
xor
adc
aaa
jmp
inc
adc
jno
shrb
frstor
sbb
movsl
push
dec
lock
adc
mov
xorl
pop
mov
pop
sbb
fwait
sti
out
dec
xor
imul
ret
push
ds
scas
mov
dec
mov
jno
or
jbe
outsb
aas
les
jmp
push
bound
pop
xchg
mov
movsb
inc
or
mov
xchg
jecxz
int
push
fidivrs
pop
sbb
sbb
aad
aad
jb
sub
pop
loope
mov
mov
sbb
in
jmp
jns
repnz
sub
lcall
das
mov
clc
push
fisubl
aaa
pop
add
setle
mov
imul
xlat
ljmp
jae
sbb
mov
insb
enter
pop
jnp
fistl
xchg
sub
stos
cmp
int
aas
int
mov
fdivl
ficoms
cs
mov
jle
mov
ss
popa
push
ret
in
lods
movsb
cmp
shrb
mov
movsb
jmp
or
stos
enter
mov
movsl
mov
push
idivb
mov
pop
and
addr16
cmp
add
cs
jae
and
out
inc
shll
and
pop
and
movsl
inc
cmc
or
daa
dec
fistpll
sub
movsl
or
pop
xchg
call
imul
push
js
icebp
jl
mov
cmp
pop
xor
sarb
or
jecxz
xor
push
test
int
std
int
jecxz
sar
icebp
mov
xchg
les
mov
mov
mul
jmp
xor
or
test
adc
stos
xchg
cli
or
jmp
pop
mov
xor
jae
jg
iret
sub
dec
cmpsl
test
add
mov
repz
pop
hlt
popa
fidivl
lods
sbb
push
addr16
clc
cmpsb
lcall
inc
and
ficoms
in
popa
bnd
push
sbb
stos
scas
cmc
loopne
jno
addr16
rol
adc
test
jg
imull
fimull
xchg
sbb
xor
add
jle
lcall
pop
push
dec
cmpsb
aaa
jno
jno
push
and
ja
jecxz
cwtl
cltd
pop
leave
dec
xchg
iret
xchg
imul
mov
sub
sub
and
adc
sub
and
adc
call
fsubrs
dec
mov
lds
mov
inc
mov
adc
test
notb
mov
jbe
mov
jmp
stos
jne
decl
ss
jmp
cltd
or
cmp
stos
jmp
mov
or
jmp
mov
out
sti
xchg
lahf
jb
insb
jne
dec
imul
loop
cmc
mov
lret
pop
and
add
cli
jne
or
stos
lods
xchg
mov
pop
ljmp
xor
nop
sbb
push
lock
cmpsl
aas
dec
xchg
jg
adc
xorb
lock
xchg
icebp
shl
mov
mov
divl
lret
aas
push
notb
ficoms
push
stc
out
jnp
jp
mov
data16
lcall
add
mov
icebp
pop
pusha
lcall
push
add
out
loope
enter
ljmp
cwtl
add
in
dec
xor
daa
mov
inc
pop
xchg
movsl
dec
jns
testb
jae
dec
xor
pop
adc
push
push
popf
adc
fstps
pop
dec
fsubr
jecxz
pop
pop
dec
sub
gs
jmp
mov
xchg
jae
mov
stos
jo
push
add
icebp
cwtl
lods
mov
cltd
mov
shl
fadd
pop
inc
jno
and
cli
mov
sub
xor
dec
pop
jnp
dec
lods
inc
xchg
sub
jle
pop
mull
fadd
xchg
mov
jecxz
out
push
xlat
int3
call
push
in
pop
sbb
or
fists
dec
bnd
stc
push
mov
add
cmc
into
imul
sbb
sbb
in
or
shl
pop
int
adc
maskmovq
testl
fdivrs
cmp
push
mov
sub
mov
adc
xchg
and
fnstenv
jge
jno
loopne
cmpsl
mov
inc
lods
call
mov
jg
jmp
xchg
daa
movsl
pop
mov
mov
jno
pop
jp
rol
adc
mov
jne
lea
aam
sar
shll
xlat
adc
rorl
cli
loop
sti
into
cmp
int
inc
iret
jbe
gs
jg
dec
fs
movsb
int3
ss
bound
jae
addr16
mov
push
adc
xchg
sbb
jnp
lahf
push
sbb
stc
jbe
ficomps
hlt
or
add
gs
cmp
vpmaddwd
pushf
push
xchg
pusha
loop
scas
mov
lahf
xor
jo
and
lahf
sbb
jne
lods
lods
xchg
xchg
es
mov
lea
push
pop
push
scas
scas
cmpsb
cmc
in
lods
adc
xchg
adc
rcr
add
mov
sets
sub
imulb
pop
xchg
outsb
or
xor
fwait
fwait
aas
inc
xchg
push
jno
cs
test
inc
movsl
jle
pop
lret
mov
mov
dec
push
lret
jl
out
dec
mov
mov
adc
fildll
cmp
mov
into
dec
lcall
jb
ss
int
or
loopne
stos
insl
fld
ss
cmp
add
inc
mov
and
pop
hlt
pop
mov
sbb
stos
movsl
xor
pop
xor
aas
sub
sbb
and
sbb
les
arpl
cmp
dec
pop
and
push
pop
incb
mov
mov
fcomps
add
out
jmp
push
or
cmp
lret
decb
arpl
in
imul
nop
and
lret
sar
inc
or
mov
test
cmpsb
das
push
or
cmp
xchg
js
xor
inc
mov
test
iret
ja
push
add
insl
jl
push
scas
movsl
dec
cs
cmp
xchg
sahf
pop
mov
add
mov
ret
and
test
xor
mov
jo
mov
into
scas
lods
pop
lea
ss
and
push
mov
mov
jnp
inc
push
sbb
fadd
xchg
jae
outsb
cmp
daa
xchg
jg
test
arpl
xchg
aad
cmp
pop
xlat
fisubrs
flds
sub
jo
sbb
jae
and
mov
push
mov
jp
push
sub
rorl
out
fidivs
jp
push
jns
fwait
sub
jg
add
fdivrs
jp
push
lea
jge
mov
jle
pop
push
into
xor
cmpsb
lods
sub
iret
sub
ret
stc
sub
cmp
jne
jns
push
adc
adc
push
insb
adc
loope
cwtl
xor
push
xchg
not
inc
iret
insl
test
jb
xchg
es
arpl
or
and
outsl
popa
cli
or
push
sub
add
dec
xchg
mov
fildl
lcall
aas
popa
shll
pop
dec
fwait
js
ret
out
mov
xor
scas
std
test
addr16
push
sbb
fldcw
adc
adc
ret
adc
sub
xchg
mov
std
pop
ret
inc
imul
add
inc
fimuls
inc
pop
adc
scas
sbb
or
xchg
inc
adc
test
sub
fwait
movsb
pop
vmwrite
jns
mov
sahf
jecxz
mov
mov
gs
jnp
push
mov
sarl
adc
aad
frstor
cmp
push
jo
cwtl
out
lods
jle
jae
xor
out
or
ret
and
sbb
inc
cmp
test
icebp
mov
je
je
xor
rcr
cmp
repnz
jmp
sub
std
cmp
sbb
jb
pop
out
mov
data16
mov
fimull
int3
outsb
cmpsl
fsts
inc
and
in
sub
movsb
repz
sbb
loop
fistps
mov
dec
mov
add
in
or
fs
or
sahf
jmp
lods
xorl
ds
xor
push
cltd
or
add
adc
das
push
xor
loop
daa
ds
std
inc
pop
and
loopne
stos
not
push
inc
jp
mov
mov
mov
or
mov
jle
add
clc
pop
mov
dec
mov
in
js
xchg
ljmp
icebp
sub
mov
sub
add
or
cld
xor
insb
fistpl
lds
dec
cmpsb
pop
mov
inc
lret
iret
pushf
dec
fidivl
mov
jbe
gs
lds
mov
insl
jmp
inc
testb
mov
nop
push
mov
push
pop
in
pop
fadds
leave
out
mov
xchg
cltd
in
in
in
ljmp
mov
jecxz
mov
pop
stos
push
sahf
mov
test
or
dec
fisttpl
movsb
adc
add
jb
outsl
cwtl
xor
mov
imul
add
sub
xor
jo
pop
jo
push
or
mov
movl
jmp
mov
out
and
dec
sarl
in
mov
xor
test
fbstp
push
xchg
enter
xchg
mov
dec
push
adc
adc
mov
mov
and
ret
fstsw
dec
ja
lods
int3
out
negb
lock
xchg
jo
aad
out
cmpsl
push
sbb
xlat
or
gs
in
aas
ret
and
mov
or
in
ret
jle
jecxz
loope
ret
mov
aad
pop
inc
ret
inc
dec
mov
nop
pusha
rcll
clc
push
pop
in
in
je
mov
int
mov
notb
stos
hlt
mov
cmpsb
dec
push
jmp
out
scas
mov
ljmp
jo
xor
cs
movl
inc
fstpl
xchg
in
filds
mov
cmpsb
sub
mov
xchg
xchg
cltd
cmp
cmp
add
ret
data16
sarl
mov
jp
add
out
imul
testl
mov
aaa
idivl
mov
and
add
jbe
push
add
cmp
sbb
lahf
add
xor
dec
xor
ja
add
mov
out
jns
xchg
xchg
imul
lds
cli
rolb
jg
leave
push
mov
mov
hlt
sub
adc
push
jno
je
in
int
mov
pop
pop
test
jg
push
sbb
js
xchg
fldenv
ret
mov
aas
aaa
mov
fcmovnu
in
in
das
add
orb
and
inc
les
sbb
xlat
arpl
xchg
cwtl
aad
xchg
cmp
lods
cli
je
subb
dec
stc
cmc
xchg
adc
xor
icebp
sub
call
sub
mov
sub
fsub
pop
or
gs
outsb
xchg
cmp
mov
cmp
mov
cmp
addr16
cmc
xchg
pop
pop
je
hlt
ror
mov
sarb
jge
hlt
push
arpl
mov
daa
lods
mov
pop
mov
vpshaq
imul
js
or
insl
xor
out
movsl
ja
add
or
pop
xlat
jmp
pop
out
imul
and
pop
xchg
fs
sbb
insb
insb
push
test
inc
jg
test
mov
push
test
mov
or
gs
dec
nop
pop
out
jbe
mov
sub
mov
enter
xchg
fdivl
inc
fmul
xor
jl
negb
mov
mov
and
or
sub
sarl
sub
insl
jecxz
pop
imul
fisttpl
jl
lret
sub
or
sub
push
sar
adc
stc
mov
aam
ja
cwtl
adc
in
push
lods
xor
push
movsb
push
loopne,pt
cmp
cmp
dec
add
add
sub
add
xchg
fwait
lds
xlat
aaa
shll
or
es
into
insb
xchg
cmpsb
movsb
es
inc
repnz
cmpsl
jae
test
mov
fdivrs
jne
jp
xlat
adc
mov
jle
cmpsb
mov
adc
pop
jo
inc
shlb
pop
cltd
dec
icebp
lods
into
cs
shlb
xchg
lock
mov
negb
jl
test
lret
jno
fld
dec
imul
mov
adc
xor
jle
out
emms
shll
cmc
xchg
mov
pushf
mov
pop
addr16
dec
or
jb
frstor
prefetchnta
dec
test
jle
pop
pop
pop
adc
data16
and
daa
push
das
shrl
jbe
dec
mov
scas
cwtl
mov
add
addr16
add
int
jnp
inc
iret
arpl
and
sub
xchg
cs
pop
outsl
int3
int3
loop
pop
add
scas
aad
pop
add
or
lods
sbb
hlt
stos
shlb
rcrl
jae
cld
mov
cmp
dec
push
in
add
popf
fisubl
arpl
and
jge
pop
push
jnp
xchg
int3
or
arpl
imul
xchg
cmpsl
mov
add
shrl
xchg
dec
orl
or
push
std
lods
clc
outsl
jmp
stos
and
inc
sub
shlb
jle
roll
sar
cmp
mov
jmp
jge
cwtl
loopne
mov
call
inc
jo
mov
cwtl
push
jnp
cs
andl
pop
and
rcr
cld
outsl
ret
test
popa
mov
push
xor
je
dec
adcl
movsb
lcall
sbb
in
mov
pusha
xchg
rcr
std
stos
repz
std
cmp
cld
ror
push
pop
fisttps
inc
imul
push
jne
bound
hlt
hlt
imul
repz
and
jmp
int3
call
mov
xor
hlt
push
sbb
repnz
jo
ljmp
sbb
mov
push
test
adc
gs
mov
pop
cmpsl
xchg
pushf
dec
push
xor
mov
sbb
imul
lock
dec
call
or
sbb
movsb
loopnew
jno
jo
cmpsl
inc
xchg
in
fmuls
test
out
repz
ret
fucomi
cwtl
sbbb
xor
and
or
and
sub
int
leave
gs
cmp
dec
test
inc
cs
lods
std
push
xchg
pop
repz
sti
std
inc
rcr
test
add
gs
adc
lods
mov
stos
ja
jno
cmpsb
in
mov
stos
test
mov
xor
sbb
pop
inc
mov
jl
cmpl
lock
or
mov
jmp
lods
mov
jmp
loopne
pop
insl
mov
push
xor
cmpsl
stos
xchg
mov
inc
cli
inc
es
ja
sub
adc
jne
dec
push
cwtl
pop
or
sub
cmpsb
mov
jl
lds
sbb
lret
and
sub
push
cwtl
mov
inc
sub
pop
pop
cmp
dec
xchg
js
xchg
daa
inc
sub
adc
adc
in
mov
push
outsl
sahf
mov
add
rcrl
js
test
cltd
mov
inc
aad
subb
aam
gs
outsb
and
add
cmp
sbbb
stos
and
or
daa
sbb
sub
dec
xchg
pop
aam
cmp
pop
mov
sub
cmp
ja
ss
mov
das
sbbb
lahf
dec
jne
jle
inc
push
lock
popa
cmp
pop
add
fs
jl
ja
cmp
mov
cmpsl
hlt
loopne
inc
mov
bound
dec
pop
xchg
mov
push
out
inc
inc
sar
dec
jns
pop
mov
push
and
xor
es
ror
ljmp
or
repz
fnstcw
imul
icebp
or
lahf
add
xchg
adc
shll
adc
mov
in
xchg
das
das
push
add
pop
jg
mov
mov
addr16
fwait
jle
pop
repnz
or
iret
xchg
sbb
js
aas
loopne
bnd
sub
std
popa
mov
pop
xchg
mov
inc
cmp
add
fs
xor
call
sarl
jns
scas
adc
and
sti
or
sub
xchg
shlb
lea
push
push
int
push
xor
pop
dec
sbb
add
mov
jne
movsl
int
add
rcrl
out
pop
hlt
pop
ss
int3
xchg
mov
pusha
inc
pop
dec
data16
jl
out
loopne
adc
xorl
sbb
push
jb
insl
sbb
shlb
mov
stc
scas
inc
pop
pop
mov
inc
adc
mov
pop
adc
loop
ror
mov
inc
mov
addr16
cld
ja
test
test
fmull
cmpsb
scas
sub
dec
xchg
pop
or
icebp
push
adc
insb
jne
push
pop
xlat
sub
dec
je
sti
xchg
mov
lods
jg
dec
insl
shll
dec
dec
orb
cmc
mov
cmp
int
push
add
nop
clc
stos
push
push
call
loop
outsl
cmc
mov
jns
test
cwtl
push
mov
pusha
nop
daa
sbb
in
xlat
das
xor
gs
push
nop
mov
int3
test
das
aas
sub
mov
and
cmc
fs
lret
pop
inc
xor
mov
push
ss
ret
jmp
dec
loop
xchg
jmp
and
andb
mov
sub
pop
cmp
inc
dec
lea
xchg
popf
dec
enter
iret
nop
xchg
or
popa
lock
and
sub
fimuls
inc
leave
or
imul
and
xchg
test
cltd
jmp
mov
mov
sbb
in
bound
mov
out
gs
in
pusha
js
iret
ja
jae
rolb
ret
fwait
push
xor
mov
adc
test
testb
sti
lods
or
fadds
cmp
mov
mov
push
in
xchg
stc
jnp
out
mov
je
jle
mov
aad
mov
sbb
inc
cmp
fdivl
xchg
lods
push
movsl
cli
pop
mov
xchg
adc
cs
mov
cmp
push
xchg
lahf
cli
fbld
fmul
dec
int3
ja
and
dec
sti
jo
ljmp
cmp
aaa
popw
pop
push
pop
ss
xor
es
pop
jle
cmp
xchg
inc
push
pop
adc
int
and
mov
and
ljmp
add
sbb
popf
lods
mov
push
mov
into
cmpsb
js
insl
dec
jg
decl
into
pop
fstps
and
xchg
xchg
imul
sti
insl
dec
and
faddl
sti
jge
stc
loope
adc
mov
mov
lods
jns
push
xor
enter
mov
fsubl
inc
inc
jne
sti
add
mov
dec
aaa
testl
out
fnstenv
and
sub
jl
cli
jne
pop
pop
xor
ret
nop
nopl
push
inc
es
inc
mov
iret
jecxz
lods
and
mov
jo
test
inc
int3
hlt
or
sub
pushf
add
and
int3
sbb
pop
xchg
pop
or
adc
pop
jae
imul
leave
pop
mov
jg
and
mov
test
daa
or
lods
mov
pusha
pusha
adc
icebp
or
stos
push
xchg
out
inc
sti
aaa
stos
fwait
addr16
test
add
pop
loop
insl
lods
push
movsb
leave
imul
jmp
xchg
jne
aam
in
jae
mov
mov
out
mov
in
lods
inc
call
push
fistl
imul
mov
or
jae
push
lahf
inc
shl
or
sahf
add
in
movsb
loopne
ja
cli
mov
inc
fldenv
xchg
mov
sbb
xorb
es
pop
inc
xchg
mov
fstps
pop
cld
ret
add
and
cmp
xchg
es
pusha
nop
xchg
cli
ljmp
or
xor
mov
jbe
out
sub
dec
push
adc
cmp
hlt
inc
int3
rcl
or
sbb
insb
inc
lds
and
inc
or
sahf
repz
push
repnz
stos
mov
stos
xor
sar
mov
into
pop
pop
aas
dec
inc
pusha
sbb
mov
push
pop
les
mov
decl
sbb
jg
cmpl
mov
cmp
inc
inc
lds
stc
inc
rclb
dec
int3
mov
jae
mov
lds
and
jo
mov
pop
mov
outsb
cmpsl
jle
dec
cmp
mov
cltd
mov
cmp
test
inc
dec
outsb
gs
add
jmp
sar
dec
fadd
outsb
aas
lret
xor
xlat
adc
cmp
inc
mov
aad
enter
pop
and
or
dec
adcb
insl
cmpsl
aam
cmp
btc
out
fwait
inc
enter
aam
jecxz
pop
mov
dec
nop
pop
push
add
sub
mov
fadds
xchg
popf
out
mov
mov
cmp
dec
fcmovnbe
aam
jo
pop
sbb
rcrl
mov
lret
xor
popa
insb
stc
scas
jecxz
les
mov
or
aaa
repz
lret
sub
push
orb
inc
mov
lock
cmp
xchg
pushf
out
outsl
imul
xchg
les
js
sub
pushf
push
xchg
jne
jns
ficompl
pusha
adc
push
xchg
test
insl
xor
iret
mov
push
adc
cmp
pop
stos
ds
in
inc
pop
xchg
inc
adc
jne
jl
movswl
in
sub
jmp
not
insb
div
pop
maskmovq
xchg
dec
std
pop
sbb
push
or
cmp
and
pop
sahf
xchg
out
xor
push
divl
cwtl
cmp
movsl
cmp
jbe
pop
inc
aaa
and
mov
inc
data16
jle
movsl
mov
movsb
mov
inc
xchg
xchg
sbb
pushl
mov
xchg
lret
or
inc
shld
dec
in
in
mov
in
push
aad
jo
pop
lock
mov
or
jne
and
jnp
mov
nop
popa
or
push
cltd
adc
aaa
in
sub
pop
in
adc
xchg
cmc
in
sub
push
push
rcl
test
dec
mov
jl
fdivrl
xchg
add
fsts
fs
adc
fcoms
xor
jne
mov
inc
adc
xor
pop
shrl
lcall
pop
int3
out
out
into
repnz
inc
adcb
xchg
xchg
or
stc
adc
lahf
jnp
cmc
jp
inc
lret
ja
ss
test
mov
mov
popa
jle
or
lds
mov
shrl
lea
sub
test
shll
cltd
push
adc
and
and
movsb
testl
inc
fsubrl
jne
dec
inc
push
xchg
mov
je
xchg
icebp
aaa
insb
pop
je
jno
add
mov
in
mov
cli
pusha
jmp
mov
ljmp
movsb
cmp
outsl
pop
ret
lret
mov
xor
test
leave
add
mov
inc
jle
cmp
sub
mov
jne
mov
adc
mov
and
mov
call
lahf
repz
shrb
into
ret
fcomps
stc
adc
inc
testl
xchg
dec
popf
out
pop
scas
dec
xchg
sub
mov
popf
mov
in
push
sbb
jmp
cmp
lret
fstp
cmp
push
mov
or
sub
adc
mov
loope
sub
push
mov
leave
rcrl
xor
sbb
mov
and
jno
jo
sbb
push
loop
pop
scas
loope,pn
mov
mov
cld
jecxz
mov
inc
pop
je
add
dec
and
cmp
mov
sub
je
push
cmpsl
jecxz
outsb
pop
dec
adc
xor
adc
jb
jle
mov
dec
inc
int
inc
gs
adcl
into
sbb
jae
fistpll
int3
in
xchg
jae
xchg
add
mov
pop
sbb
push
popf
mov
icebp
in
and
adc
push
xchg
ss
add
mov
mov
add
or
or
push
aas
fisttpl
rcrb
push
inc
outsb
lock
adc
gs
xor
adc
test
lds
inc
mov
or
add
jp
cwtl
pop
and
mov
dec
jb
xchg
shlb
mov
imul
jno
dec
icebp
mov
stos
negb
lret
mov
out
icebp
aad
pop
clc
inc
xchg
cmp
xchg
shlb
cmp
loope
inc
jns
mov
cmp
adc
dec
fsubl
sahf
or
in
mov
add
into
mov
mov
in
pop
out
rcrb
jg
es
adc
cmpsb
jne
test
popa
cmpsl
lods
mov
lahf
pop
fcmovne
push
jl
call
divb
mov
xchg
jle
mov
cs
outsb
cmp
in
sbb
inc
or
int
pop
pop
aas
adc
pop
addl
dec
add
insl
aaa
dec
mov
jmp
stos
jp
push
fdivl
es
xchg
dec
jo
call
mov
rcrb
mov
test
andl
pop
fnstenv
out
sbb
and
and
jg
loopne
dec
int
lock
push
mov
add
mov
mov
ret
jl
mov
ficomps
in
ja
ret
andb
jmp
add
out
cmpsb
add
les
pop
xor
ss
xchg
dec
sbb
xchg
sbb
push
mov
mov
addr16
xor
mov
cwtl
xchg
sbb
adc
pop
cld
pop
fwait
imul
and
pop
dec
sti
lock
xor
call
loopne
push
movsb
nop
aam
mov
push
sbb
push
jmp
pop
arpl
popf
sbbl
xor
call
lcall
jnp
sbb
movsl
xchg
xchg
push
push
icebp
sbb
adc
jne
pop
inc
mov
pop
pop
adcl
jge
pop
jb
inc
mov
pop
or
call
cmp
stos
into
ja
and
iret
push
lock
sub
popf
enter
cld
pushf
and
fneni(8087
jae
sbb
xchg
or
mov
sbb
outsb
add
movsb
clc
mov
fwait
or
xor
and
add
sbb
call
lret
xchg
adc
pop
rcrl
xsha256
cmpsb
adc
push
mov
push
fildl
xlat
dec
mov
popa
adc
jno
hlt
cwtl
sarb
xor
and
mov
subb
sahf
add
sub
out
pcmpeqw
ss
jecxz
sub
faddp
pushf
out
cmp
jae
adc
addb
fistl
std
sub
decl
cmp
das
add
inc
inc
cmc
push
push
xchg
mov
add
mov
pop
jbe
mov
xor
in
out
jae
dec
fisttps
lods
xor
ljmp
mov
out
jbe
sub
jg
insb
mov
mov
out
test
lcall
data16
cmp
imul
sbb
fst
sbbl
test
push
and
lock
test
aam
pop
into
xor
outsl
cmp
adc
xchg
jp
aam
sub
cmpsb
addb
mov
mov
popa
call
xor
dec
or
cwtl
pop
lock
scas
out
and
mov
add
jmp
js
sub
mov
xor
ss
xor
inc
mov
cld
inc
cwtl
jno
lahf
jp
subb
test
les
loopne
ss
movsl
mov
imul
gs
push
std
or
cltd
dec
adc
js
cmp
fwait
push
cmp
stc
cmp
out
test
adc
xchg
jno
lods
jl
push
jge
push
dec
lret
and
adc
int3
push
adc
sbb
pushf
cli
pop
cli
xchg
sub
aaa
idivl
push
xchg
pusha
fisubl
aad
cmp
jno
outsb
addr16
cmp
sbb
pop
out
mov
lods
add
ss
mov
mov
ret
lds
mov
xchg
push
or
test
cld
rcrl
sti
xor
mov
or
mov
std
xlat
ja
mov
or
inc
shrb
notl
mov
jbe
iret
fisubs
or
imulb
movsb
push
xlat
mov
mov
cmpsb
gs
rolb
out
into
shll
adc
jle
in
and
pop
mov
lret
adc
insb
ret
lret
adc
xchg
mov
jg
pop
pop
mov
cltd
fwait
movsl
popa
inc
add
cmc
call
add
sbb
jmp
cwtl
push
jmp
ror
mov
test
or
pop
jge
cmpsl
dec
scas
jb
push
and
das
in
jg
fistl
and
addr16
jns
xchg
inc
jg
jne
mov
add
push
xchg
es
xlat
fs
mov
mov
lahf
and
mov
rolb
lods
ss
jg
pop
test
lds
enter
jmp
ud1
and
mov
sub
cltd
int3
es
adc
rcrb
and
cmpb
cmpsb
cmpl
mov
daa
dec
test
sub
mov
mov
and
je
mov
movsb
xchg
test
pop
jmp
jno
sbb
lahf
push
lock
dec
pushf
test
negl
xchg
jne
into
lret
adc
pop
out
sbb
divl
daa
jge
jmp
rclb
add
in
or
pop
je
sbb
adc
jle
sbb
js
dec
scas
jmp
das
jl
orl
aas
pusha
movsl
movsb
fcoml
and
jne
insb
inc
xchg
dec
fdivrl
loop
mov
movsb
loope
out
imulb
sti
xlat
je
cmpsb
cmpsb
mov
in
mov
lret
xor
pusha
xor
mov
cmpsl
adc
mov
jmp
mov
sbb
xchg
test
push
xor
ja
addb
lret
das
mov
mov
and
push
out
mov
xor
ret
xchg
mov
adc
sahf
loopne
push
movsb
and
sahf
outsl
std
out
push
jae
test
sub
xchg
les
mov
fwait
popa
cmp
jp
test
imul
push
dec
push
cmpsl
sbbb
sti
inc
cli
jecxz
mov
in
mov
stos
loop
xchg
sarl
xchg
mov
test
mov
inc
fisttps
cmp
dec
lock
in
and
ljmp
pop
cmp
push
in
push
sbbb
jne
sub
bnd
cmp
js
xlat
sbb
sub
inc
xchg
adc
dec
stos
or
cli
addr16
jb
sub
mov
bound
ljmp
or
stc
insl
jb
mov
inc
mov
std
xchg
loop
pop
push
pop
cmpsl
popa
cmp
mov
xchg
mov
in
mov
aam
xor
leave
xor
and
jbe
mov
movsl
lds
or
xor
fwait
push
es
mov
add
push
push
xchg
jecxz
imul
sbb
repnz
sbb
push
ret
jmp
in
pop
dec
jge
xchg
push
cmp
insl
das
movb
adc
mov
sub
inc
clc
and
das
repnz
out
dec
xchg
adc
push
mov
daa
rcrb
and
ss
sbb
xor
adc
sub
push
mov
mov
add
jns
xor
pop
test
lods
iret
xor
and
cmp
cmp
push
in
fbld
cmpsl
cld
push
sbb
xchg
sbb
jno
and
add
lods
rcrb
popa
jbe
scas
mov
pop
shrl
pop
arpl
jo
cmpb
pusha
ss
or
jge
cld
dec
adc
jg
clc
adc
test
fdivr
inc
loope
orb
adc
pop
mov
test
into
sub
jmp
fwait
inc
mov
movsb
inc
fwait
je
xor
dec
sub
mov
or
stc
lds
mov
jge
push
push
inc
fwait
or
loop
xor
stos
aas
stos
mov
pop
lods
popa
stos
test
jno
jmp
std
sbb
dec
inc
jmp
or
and
les
jp
mov
cmpsl
sbbb
adc
pusha
jne
and
and
nop
push
bound
sub
lds
fistpl
dec
cmp
add
cs
fstl
xor
ds
mov
xor
sarb
sbb
ljmp
sarb
mov
xchg
adc
adc
addr16
enter
jne
outsb
les
hlt
rcrb
add
mov
add
jns
mov
int
stos
inc
mov
or
mov
mov
xchg
cltd
inc
ficoms
or
push
mov
out
fsub
jmp
cmp
jecxz
pop
orl
and
sbb
cltd
inc
add
test
push
mov
dec
xchg
and
popf
mov
mov
push
dec
shlb
xchg
ret
movb
sbb
ret
aas
fidivl
or
cmp
cltd
fcompl
scas
daa
popa
js
outsl
jle
lahf
inc
out
lea
xchg
fistps
out
adc
mov
or
push
pop
dec
clc
push
stos
lcall
scas
jl
sub
jno
adc
dec
fwait
push
inc
shl
enter
test
and
push
mov
ss
loop
xlat
out
das
add
mov
test
repz
jmp
push
mov
or
cltd
jg
mov
stos
inc
cmpsb
std
mov
imul
sbb
call
xchg
into
mov
xor
mov
sbb
mov
push
mov
into
sub
mov
mov
mov
mov
shlb
sarb
mov
pop
pop
xchg
sub
sub
and
mov
pop
lods
pop
adc
nop
add
int3
push
add
pop
lret
fiaddl
mov
pop
push
lea
inc
jo
adc
pop
loop
sub
and
jp
xchg
push
or
jl
xchg
push
test
dec
repz
into
jp
dec
es
jo
sub
int3
jmp
fcomi
aam
mov
test
lret
xchg
lods
inc
add
das
xlat
adcl
and
jp
test
popf
test
fcoml
sbb
cltd
dec
and
out
mov
push
enter
push
sbb
enter
adc
int3
fisubs
mov
aaa
cli
movsl
or
sub
aad
mov
fildll
inc
push
js
rcl
sub
cmp
and
cmpsb
in
and
gs
dec
and
jle
pop
sti
repz
stc
lods
lods
fbld
out
outsb
jl
jnp
lcall
xchg
or
xor
mov
mov
jb
pushf
enter
sarb
xchg
and
rorl
ret
daa
jge
add
jne
jmp
cmp
lret
push
repz
test
je
inc
push
aam
je
jae
push
cltd
jnp
lea
in
cmp
icebp
int
dec
xchg
lret
mov
repnz
lahf
clc
xchg
sbb
mov
mov
inc
sbb
and
les
adc
cmp
sub
or
sub
dec
movaps
mov
ficoms
movsl
cs
inc
dec
sub
fadd
lcall
in
cs
andb
mov
mov
fnstcw
sub
lret
mov
into
movsl
or
xor
test
push
inc
cmc
xchg
lds
aaa
pop
ds
adc
dec
mov
cs
mov
cmovnp
dec
cwtl
sarl
imulb
mov
sti
pop
sub
pusha
out
sub
pushf
subl
popa
lods
fldenv
iret
xlat
dec
cmp
sbb
fistpl
in
adc
ja
mov
fsubrs
popf
lret
loope
movsl
mov
pop
jbe
lcall
jmp
aas
test
cwtl
and
fiaddl
mov
outsb
loope
push
sbb
mov
imull
xchg
repnz
and
push
fisttpl
movsb
gs
dec
and
dec
insb
addr16
dec
cs
flds
aam
inc
int
outsb
pop
out
jg
repz
xchg
ret
jae
out
dec
cmp
xchg
mov
cmp
js
pop
fnstcw
adc
sbb
into
add
lcall
sbb
inc
mov
cwtl
mov
and
pop
mov
outsb
push
mov
mov
das
sahf
cltd
sbb
pop
cmpsl
and
pop
popa
xor
xchg
push
push
das
insl
lcall
xchg
popf
scas
ja
cmp
fnstenv
movsl
cmpsb
dec
out
in
imul
arpl
push
jno
jmp
dec
push
sarb
jae
fimuls
outsb
ds
fimuls
aaa
pushf
inc
loop
inc
enter
and
jbe
cmpsl
push
mov
push
ret
or
bound
jg
arpl
xor
iret
sbb
inc
cwtl
xchg
pop
lds
bnd
lods
orb
mov
fisttpll
mov
cmpsb
sahf
xor
subl
mov
pop
jno
mov
pop
jne
ljmp
sahf
cmpsb
test
ss
pop
js
cmc
addr16
jbe
lahf
or
out
push
adc
outsb
sahf
push
mov
push
mov
cli
push
fsub
in
jno
cld
jmp
aad
mov
ret
push
xchg
sub
jmp
xor
adc
sbb
inc
cmp
sbb
fsubrp
sbb
aam
push
lret
cmp
mov
fsubrs
dec
lcall
sub
es
lds
rcl
leave
les
stc
into
push
sti
inc
jae
ljmp
add
mov
lcall
lods
movsb
push
xor
dec
daa
mov
test
dec
std
test
dec
leave
in
mov
jle
das
add
jnp
shlb
aad
fptan
or
push
or
ja
push
pop
xchg
lret
push
mov
xchg
dec
cmp
test
rolb
sub
les
andb
sub
sbb
enter
aam
push
sub
mov
or
stos
xchg
jmp
inc
and
jle
sub
or
sub
sbb
mov
fists
sbb
sub
lds
mov
popa
push
movsb
push
jno
popa
mov
subl
adc
push
fistpll
sti
add
jno
lods
int3
mov
sbb
cmpsl
ret
subb
pop
lahf
bound
jno
add
clc
rolb
sti
leave
arpl
and
repz
out
sbb
jge
in
gs
mov
sahf
in
mov
lds
scas
mov
imul
test
int3
mov
ss
ds
sub
and
loopne
rcrl
xor
push
sahf
mov
movsb
stos
iret
xchg
cmpsb
cmp
mov
jnp
push
lret
out
and
sbb
inc
loope
das
pop
inc
shlb
in
xchg
mov
xchg
lock
pop
pop
test
xor
or
fildll
or
insb
pop
mov
dec
ds
lahf
dec
arpl
fwait
xchg
aam
movl
testl
fidivrs
jmp
fsubl
daa
dec
cltd
les
mov
push
or
adc
jecxz
push
sbb
push
pop
cmp
imul
sub
and
add
sti
pop
mov
lods
mov
out
xchg
enter
je
jl
lea
lea
sbb
cmp
dec
bound
jl
or
loop
mov
jns
cltd
xor
lahf
or
pop
sub
xor
push
jo
cmc
dec
test
arpl
in
imul
pop
test
addb
shll
insl
pop
adc
sbb
xlat
lret
push
icebp
dec
hlt
sbb
adc
mov
fistpl
repz
adc
out
leave
pushf
xchg
ja
push
mov
push
and
sbb
xchg
dec
outsl
ja
mov
orl
sbb
fmuls
pop
inc
js
cmc
mov
inc
into
sub
sti
jle
dec
inc
inc
mov
mov
jne
lods
loop
xlat
mov
loop
push
push
std
loop
xchg
and
fimuls
arpl
pop
subb
outsl
adc
push
inc
inc
mov
add
imul
call
pushf
out
repnz
lea
mov
sbb
stos
xor
adcl
loopne
sbb
add
stos
popf
fsubr
lea
or
mov
enter
das
imul
das
loope
iret
cmp
aam
push
xor
gs
shll
cmp
pop
clc
pop
push
xlat
ret
icebp
pop
inc
and
movsl
xorl
adc
cmp
roll
lret
mov
icebp
lahf
and
sbb
xchg
lock
cli
int3
fs
xor
adc
aad
mov
cmp
in
scas
mov
rcrl
inc
in
aad
mov
hlt
and
inc
xor
call
cmp
cmc
clc
push
xchg
in
aam
mov
sarb
add
xchg
aas
mov
inc
fs
sbb
out
jmp
test
fbstp
mov
lea
xchg
test
pop
adc
push
xchg
std
test
and
out
and
adc
mov
jp
mov
mov
adcl
mov
jecxz
sbb
adc
sub
shl
mov
repnz
movsl
sbb
adc
pop
cmc
jnp
lret
pusha
sbb
sbb
cmp
loopne
cli
xchg
sbb
or
enter
inc
inc
adc
pop
cmpsb
xor
mov
out
enter
rol
scas
bound
push
repnz
mov
mov
mov
aas
mov
test
ret
dec
lods
dec
sahf
in
xor
mov
mov
les
xor
hlt
mov
and
mov
xchg
dec
imul
mov
cmc
sti
rcrb
int
xchg
cmc
add
pusha
loope
in
jp
dec
dec
les
sarb
or
stos
int
jmp
cmp
enter
jnp
loope
test
xor
mov
sbbb
in
mov
add
and
xor
pop
jl
or
stc
js
daa
xlat
jnp
stc
fsubrl
xchg
lcall
jg
test
push
xor
and
fidivs
adc
fcomps
jp
sub
or
sbb
lds
inc
sub
enter
pop
sbb
push
inc
jno
lock
inc
and
jne
outsb
comiss
mov
outsb
push
jecxz
aam
out
mov
ljmp
xchg
int3
add
daa
frstor
dec
sbb
xchg
push
adc
sbb
cmp
mov
xchg
imul
test
mov
xchg
flds
add
test
sub
shrl
icebp
lods
lahf
sbb
jnp
sbb
xchg
cld
test
rclb
imul
call
in
mov
xor
movsb
mov
add
jnp
jbe
add
sbbb
hlt
dec
push
das
add
int3
push
insl
ror
incb
nop
hlt
or
imul
ljmp
mov
mov
adc
xchg
lahf
xchg
pushf
js
adc
and
xchg
xor
dec
jge
movsl
lods
fdivs
mov
das
add
mov
xchg
pushl
and
pusha
jge
shlb
xor
push
stos
mov
pop
push
pop
mov
sbb
fldenv
or
in
fcmovb
mov
jbe
insb
stos
repz
es
dec
addr16
les
les
mov
jl
dec
mov
incb
icebp
sub
cmp
xorl
pop
ss
pop
dec
in
xchg
pop
push
cld
test
out
insl
int
insb
roll
je
xor
cmc
xchg
mov
cli
sbb
xor
scas
xorl
loopne
sbb
sbbl
jmp
push
push
push
lock
jns
pop
push
test
cmc
mov
lret
jns
adcl
mov
mov
jne
cmp
notl
lea
sub
xchg
loop
sbbb
cs
loopne
data16
out
jno
cmp
test
jge
std
fcomps
scas
sub
fsubrs
sub
aam
test
dec
mov
adc
movsl
mov
jl
jno
jo
and
popf
sbb
insl
pop
punpckhdq
data16
xchg
dec
inc
loop
popf
repz
fldenv
mov
leave
sub
daa
cs
push
ret
mov
push
pop
inc
daa
or
jl
outsb
xchg
mov
add
push
jbe
xchg
shrb
je
ret
cmc
inc
and
pop
out
shrb
pop
outsl
xchg
add
lock
fisttpll
lcall
inc
fstpt
mov
xchg
sbb
xchg
push
jecxz
shll
pop
add
pop
sar
clc
testl
mov
icebp
ljmp
push
das
add
and
out
lea
loope
or
jge
adc
inc
lods
sbbl
mov
fldcw
std
lds
test
mov
sbb
sub
pop
cli
outsb
in
ret
or
sbb
mov
ds
enter
int3
push
mov
pop
movsl
push
insl
mov
push
mov
call
push
fistps
ret
fcoms
lea
fistps
into
xorl
or
fmull
push
xor
lret
adc
sbb
push
hlt
sbb
in
jb
cs
mov
repz
cmp
dec
mov
aad
push
sbb
int
outsb
lds
sub
inc
out
aas
aas
aas
xor
sbb
dec
rcl
adc
popa
xor
int3
int3
lea
dec
xchg
add
inc
or
test
and
push
subb
adc
xchg
adc
nop
mov
sub
jecxz
ljmp
jl
mov
inc
push
sbb
sarb
adc
lahf
cwtl
dec
flds
jl
icebp
fs
hlt
call
xchg
addr16
mov
dec
jp
imul
xlat
and
out
mov
fldz
push
and
aam
or
leave
addl
and
mov
xchg
adc
or
jo
add
xchg
addl
mov
scas
mov
mov
sti
pop
pushf
adc
es
scas
loop
pop
repnz
xchg
cmp
xchg
int3
mov
push
in
jge
cmp
mov
idivl
pop
rorb
jl
push
insl
mov
cwtl
outsl
adc
adc
jae
test
ja
mov
mov
cmp
std
inc
xchg
mov
clc
movsb
cmc
dec
xor
sub
push
lahf
or
jecxz
cmc
jnp
xlat
inc
movswl
cmc
or
je
hlt
push
and
sbb
mov
outsl
stos
xchg
mov
test
jecxz
repnz
inc
mov
fisubrl
dec
mull
pop
nop
ss
jns
pop
mov
lret
xchg
cmp
pop
fsts
test
sub
rcr
sub
dec
inc
inc
push
aad
insl
ffree
cwtl
orl
daa
pop
mov
fwait
cmp
shrb
clc
mov
dec
push
mov
mov
jp
inc
jp
test
push
xchg
jnp
sbb
inc
adc
xchg
stc
adc
cmp
fucom
ror
movsl
sub
test
mov
arpl
mov
mov
mov
cmpl
in
push
jp
fisubrl
cmp
pushl
hlt
pop
nop
push
enter
mov
inc
jns
mov
fnsave
arpl
sar
addr16
xchg
flds
mov
xor
bound
loopne
and
cld
sbb
adc
sub
sbb
lcall
mov
int
movsl
inc
ss
fisttps
pop
cmpsl
stos
sti
xor
inc
jno
sub
sub
add
cmpsl
lods
inc
fstpl
inc
xchg
mov
or
xor
mov
dec
and
gs
loopne
push
mov
sbb
jmp
jae
loop
inc
subl
ja
adc
inc
mov
jno
rolb
dec
out
jl
sahf
lcall
sahf
in
xchg
cmp
aam
icebp
pop
push
movsl
repnz
imul
pusha
xchg
in
push
enter
aad
dec
mov
sahf
jg
pop
mov
adc
ds
cmp
rorb
test
mov
add
cmp
fisubrl
jp
jmp
push
outsl
cmp
fcompl
inc
inc
cmc
rorb
xlat
mov
testb
out
cmpsl
push
add
addr16
xor
jo
xchg
push
add
and
fcomip
xchg
xchg
mov
dec
out
fldcw
dec
and
pop
outsl
xor
or
outsl
pop
push
icebp
jp
jle
inc
push
call
addl
push
scas
insb
mov
add
fstps
dec
popa
sub
mov
mov
pop
bound
pop
sahf
gs
mov
sub
cmp
inc
daa
pop
cltd
leave
jmp
inc
sahf
jne
xor
pop
push
ret
test
or
mov
call
jae
in
ret
icebp
bound
cmc
cld
ds
lods
dec
mov
out
push
addr16
mov
popf
inc
jae
mov
sub
jg
add
in
cmp
pop
divb
cmp
ljmp
jl
imul
mov
push
cltd
repnz
push
scas
pop
push
cs
and
pop
cmpsb
jl
aaa
jne
sbb
add
sahf
addb
sbb
mov
cmp
sub
ja
jnp
dec
aam
pop
xor
mov
sbb
repnz
int3
jne
movsl
and
xor
icebp
mov
stos
orl
pop
or
mov
in
jne
mov
add
mov
xchg
add
dec
cld
cwtl
rorb
lods
int3
sbbl
scas
xchg
shll
cmc
pop
adc
cld
adc
and
fdivrp
pop
negb
gs
faddl
or
hlt
mov
cmp
popf
sub
fbstp
in
out
test
cmp
aas
jb
jecxz
push
cs
movsl
test
xchg
repz
push
push
lret
cli
push
jns
fucomp
mov
dec
mov
mov
outsl
outsb
sahf
das
jle
aam
xor
sub
in
inc
pop
es
test
inc
jns
cmp
xlat
pop
std
mov
fistps
dec
jne
xor
arpl
cmp
xchg
inc
fs
pop
xor
inc
lods
lahf
xchg
cld
xor
test
ud1
fsubrs
adc
fwait
mov
dec
repz
aad
int3
fsts
and
and
xor
sti
fdivrl
loop
xchg
jnp
icebp
mov
fldenv
fdiv
jle
or
push
mov
pusha
xor
out
jns
dec
cs
shl
test
push
push
and
sbb
xor
jbe
mov
xor
xchg
sub
add
cltd
sbb
push
lcall
and
xor
inc
xor
and
mov
xor
sbb
cld
fwait
push
jg
cmp
gs
scas
mov
push
call
push
addb
push
jge
dec
mov
gs
dec
out
shll
or
fnsave
pop
cmpsb
sub
stc
and
push
cmp
mov
jg
pop
rep
insl
cld
imul
jmp
shrl
in
rol
mov
xchg
jb
mov
lds
jne
rorb
sbb
call
cmp
test
int3
push
js
aaa
jo
xchg
xor
fmull
and
loopne
ret
xchg
dec
xchg
jns
cmc
fs
je
sub
movsb
lahf
sbb
pushl
or
nop
int
cmpsb
cli
lea
ja
or
xchg
lret
cmc
mov
mov
cmp
mov
shlb
pop
ja
test
push
sbb
pushf
js
ds
and
lret
lds
push
sub
cmp
jle
fs
test
mov
iret
mov
ret
or
and
or
lea
imul
jge
jg
dec
cs
fwait
pop
jg
add
scas
jb
lods
lods
std
cmp
roll
cmp
dec
and
int3
sub
repz
pop
loop
dec
std
inc
mov
sub
and
mov
jle
sub
mov
mov
int3
adc
mov
out
xchg
xchg
int3
sbb
dec
stos
mov
xchg
jl
push
adc
negb
cmp
mov
push
and
cmp
bnd
scas
mov
imulb
movd
sbb
sbb
cmp
adc
xchg
xor
mov
lahf
push
xchg
je
ficomps
mov
lock
bound
xor
mov
in
jecxz
fists
int
xorl
call
inc
repz
dec
inc
inc
pop
xor
fcomps
pop
shll
movsb
xchg
jle
hlt
pop
call
imul
jae
imulb
mov
add
les
int3
mov
xor
pop
mov
push
nop
xor
sub
adc
dec
hlt
in
mov
shlb
xor
mov
jge
mov
lea
mov
jbe
mov
into
cmp
jge
stc
inc
and
add
adc
data16
bound
inc
xor
sub
int
ficomps
insl
out
add
mov
in
fcoml
dec
or
add
inc
xchg
mov
inc
inc
sub
xor
jb
pop
and
sub
ret
xor
dec
sub
and
xchg
mov
in
mov
sbb
je
cmpb
enter
mov
repz
xchg
enter
xor
or
push
dec
lahf
shlb
mov
addr16
mov
dec
arpl
std
test
sarb
cmp
push
xchg
xchg
push
cmc
js
insb
pop
mov
mov
push
repnz
add
cwtl
mov
jne
sub
cmp
in
dec
shl
int
mov
push
jo
loope
subl
fsubrl
in
lds
in
rcll
mov
push
imul
xor
add
rcrb
in
jp
andb
mov
jne
xor
int3
pop
cwtl
cld
cltd
daa
rcl
scas
sub
fldl
psllq
movb
push
icebp
mov
mov
call
movsl
pop
dec
mov
mov
push
insl
mov
jns
lcall
pushf
into
push
push
mov
repz
enter
subl
push
mov
test
adc
xlat
jmp
xor
in
sub
pop
and
add
aas
sub
xchg
push
dec
and
cmp
imul
notl
lret
mov
fsubrl
inc
nop
lds
jae
hlt
fsubs
ljmp
int
jne
lea
jns
out
mov
mov
ret
int3
xchg
fidivl
add
scas
jo
inc
push
cmc
pushf
mov
imul
sub
rolb
jo
cltd
push
hlt
rcll
or
aas
subb
repnz
xchg
cmp
add
movsl
pop
push
das
adc
mov
or
cmp
pop
mov
push
fs
outsl
inc
pop
xlat
into
jecxz
outsl
movsb
mov
mov
push
insb
decl
mov
arpl
test
out
jmp
shll
add
sti
mov
fisubrs
into
inc
loope
push
aad
pop
sbb
sub
pop
lcall
mov
nop
mov
cmp
in
cmc
and
subb
movsb
mov
and
out
mov
dec
pop
dec
aas
cmp
shll
int3
stos
mov
jg
pop
sbb
repz
fisttps
mov
cmp
lcall
rcrb
divb
xchg
xchg
shll
jbe
cmpsl
cmp
jge
sub
insl
push
cmc
test
mov
add
adc
jae
cmpsl
gs
or
repnz
mov
pop
adc
inc
stos
movsb
cmpsb
sbb
sbb
and
add
mov
imul
movsb
push
push
mov
adcl
rol
cmpsb
push
xchg
divl
xchg
add
jno
lea
iret
fsubrl
movsl
popa
sub
and
push
pop
stos
mov
lds
mov
jbe
les
or
testl
hlt
sbb
outsb
in
xchg
fwait
pop
jg
das
addr16
test
into
xor
and
add
icebp
jnp
dec
mov
dec
push
mov
std
out
mov
out
ljmp
test
in
dec
and
les
pusha
cmp
int3
and
jne
loop
cs
adc
lret
imul
daa
push
mov
imul
push
imul
jg
ret
adc
insl
lahf
int
mov
clc
jle
cmp
push
inc
insb
popa
jmp
loopne
cmp
mov
dec
jae
push
pop
mov
jecxz
add
adc
cmp
mov
or
mov
adcl
sarb
in
test
pop
subb
dec
orl
int3
add
ficoms
adc
or
fsubrl
xchg
daa
add
xchg
mov
jae
sub
decl
in
cmpsb
loop
lret
pop
aas
arpl
insl
fcmovb
mov
int3
cmpsb
jge
rcrl
adc
lock
or
push
push
into
sbb
sbb
push
pop
mov
jmp
in
xor
daa
dec
aaa
lock
incb
cmp
adc
mov
or
mov
cmp
dec
into
mov
lret
mov
xor
dec
xchg
add
push
imul
fidivl
pusha
push
aas
daa
lcall
lods
pop
jns
dec
jle
imul
fwait
in
mov
sbb
insb
jno
sti
addl
push
xchg
jge
cs
xor
add
push
stos
out
clc
inc
jl
stos
push
cmp
add
mov
in
push
enter
jne
cmpsl
loop
lahf
cmpsl
mov
cltd
cmp
xchg
ja
lret
int
push
xor
adc
push
push
clc
mov
repz
jb
fiaddl
pop
and
pop
rclb
movsl
pop
inc
push
and
das
add
dec
hlt
dec
iret
fcoml
inc
pop
mov
daa
mov
xchg
pop
inc
in
ret
sbb
dec
pop
adc
mov
mov
pushf
incb
push
shrb
inc
lea
mov
movsb
movsb
leave
fbstp
dec
or
loope
neg
scas
in
cmp
add
pop
xor
repz
pop
lds
xchg
push
shrl
test
sbb
pop
outsb
pop
ss
cmp
lahf
sbb
inc
jno
mov
inc
and
xchg
dec
lods
mov
jb
push
mov
push
fisubl
lea
nop
xchg
mov
xchg
sub
sub
ja
adc
jno
mov
clc
js
mov
ficomps
in
adc
push
out
mov
sub
sub
mov
outsb
mov
fsubrl
pop
push
popa
cmp
jns
fstpl
cmc
mov
ficomps
ljmp
cmc
sbb
cmovb
adc
xor
xchg
cld
lods
pop
and
filds
mov
pop
rcrb
pop
sbb
xchg
sbb
loopne
out
incl
adc
add
imul
pmullw
out
cli
je,pn
loop
or
test
daa
js
cmp
out
sbb
adc
lods
pushf
mov
sub
lods
pop
or
and
pop
inc
fucom
adc
lahf
dec
jl
dec
pushf
mov
sub
ret
mov
dec
cmp
xchg
pcmpeqw
test
add
dec
jmp
cmpsl
mov
sbb
out
lea
jne
ljmp
les
je
fnstsw
xlat
mov
xlat
dec
int3
and
mov
fldcw
bound
pop
notb
xchg
and
jle
lcall
or
cs
and
in
cwtl
loope
and
xor
inc
nop
inc
mov
pusha
int
addr16
dec
ficoms
popa
aas
pop
dec
insl
xchg
push
std
call
mov
cmpsb
inc
lahf
shl
xor
jns
out
jecxz
test
jnp
mov
xchg
mov
lret
mov
mov
ljmp
loope
stos
fcmovnb
cmp
or
push
call
test
mov
xor
adc
inc
sbb
ret
jbe
sub
cmc
jns
call
test
push
cmp
shll
add
outsb
sub
jge
xor
insb
lret
mov
jg
jecxz
ja
add
rcrl
adc
mov
fmul
fistpll
push
dec
inc
mov
adc
sub
in
mov
cmp
sub
mov
and
lods
icebp
xor
dec
pop
cmp
mov
sbb
cmp
out
dec
data16
loope
inc
push
mov
hlt
pop
inc
sub
cmp
push
test
jmp
inc
push
dec
pushf
pusha
clc
sbb
nop
iret
push
dec
mov
mov
hlt
sbb
std
ds
and
mov
lods
push
iret
mov
insl
sbb
push
inc
sub
push
popf
or
cmp
xor
jecxz
sti
xor
clc
je
or
popf
pop
mov
popf
xor
enter
je
lock
mov
or
mov
mov
add
lods
inc
push
inc
pop
adc
dec
lock
push
shll
jg
aas
add
aas
cli
fistl
push
jnp
in
jecxz
sarb
test
mov
fwait
xchg
jo
into
shlb
jge
sti
and
cmp
stc
es
fst
push
test
outsl
and
cli
out
mov
or
nop
adc
inc
mov
mov
push
xlat
push
sub
and
mov
cmp
cmpsl
stc
jmp
out
sbb
or
xor
shll
and
jbe
popa
pop
push
lahf
int3
push
jbe
add
jl
cmp
mov
shrb
aad
popa
dec
shrl
jcxz
movb
add
inc
jmp
dec
nop
inc
sbb
loope
sub
lcall
fxch
sbb
sti
fsubl
jae
test
dec
lock
pop
mov
fisubs
nop
pop
test
and
mov
mov
hlt
in
mov
mov
lcall
addb
lahf
mov
mov
pop
mov
incl
test
mov
fs
xor
cwtl
leave
pop
fldt
or
shll
rorb
push
mov
mov
jmp
xor
aas
add
scas
ja
inc
inc
cmpsb
imul
imul
pop
cmpsl
out
dec
pop
xor
xor
mov
dec
xlat
jecxz
mov
inc
sub
jle
in
jg
unpckhps
xlat
dec
mov
leave
mov
lret
lea
ja
andb
mov
xorb
jge
fnstcw
loope
gs
pop
pop
inc
loope
mov
pushaw
aas
jnp
scas
push
les
push
jle
mov
adc
dec
jns
lret
push
dec
add
ljmp
outsl
pop
aas
adc
fst
cwtl
dec
pop
pusha
lret
inc
add
lret
lea
sub
sahf
push
mov
sub
mov
or
push
scas
xlat
push
je
scas
mov
jnp
aad
test
push
aaa
add
lret
or
adc
jne
and
dec
ficompl
test
subb
outsl
adc
cmpsl
jbe
jle
loop
cmp
sbb
mov
repz
adc
or
dec
xor
and
dec
idiv
cld
lock
mov
movsl
mov
cltd
mov
pushl
in
jl
cmpb
mov
push
jmp
mov
daa
or
adc
imul
add
out
es
mov
sar
bound
inc
dec
js
inc
add
inc
lds
addl
sbb
mov
in
lock
inc
out
popf
push
aad
mov
rcll
ficoml
mov
arpl
fxch
pop
push
cmp
fs
mov
lret
or
outsl
pop
inc
mov
mov
idiv
push
jg
popf
jp
lahf
in
ja
or
mov
push
mov
insb
jo
loopne
pop
popf
dec
aaa
outsb
inc
mov
xchg
std
xor
add
imul
xchg
shrl
pop
dec
imul
std
iret
mov
cmp
xor
xor
push
dec
daa
jle
imul
pop
or
loope
repnz
aam
sub
movsb
inc
lock
and
add
pop
lods
jnp
imul
stos
idivl
movsl
imul
fmull
push
ljmp
movsl
pusha
mov
rcrl
ds
out
xlat
iret
test
ljmp
adc
mov
mov
sub
cmpl
fbld
test
dec
les
add
js
and
out
incb
sbb
ljmp
sahf
pop
filds
cmp
mov
sub
shlb
cltd
pop
xor
call
xchg
sahf
or
cmc
outsl
movsb
mov
adc
xchg
add
xchg
push
insb
pop
pop
outsb
mov
shll
add
xor
mov
and
inc
jmp
mov
xchg
daa
je
mov
int
lods
or
data16
insb
fsubl
into
aas
insl
popf
xchg
or
or
adc
es
into
adc
xchg
fcomps
sbb
rorl
lea
adcl
js
ljmp
les
xor
aaa
adc
popa
adc
add
hlt
repnz
jno
dec
push
lea
mov
lock
sbb
outsl
xor
or
mov
loope
repnz
jae
pop
loop
inc
push
mov
movb
ljmp
inc
pop
xor
in
lcall
ljmp
aad
push
jmp
mov
ds
daa
lea
sub
xchg
mov
jnp
lea
pop
mov
mov
fistpl
fmull
dec
mov
int
and
mov
mov
xchg
push
daa
inc
clc
mov
sahf
mov
xchg
sahf
sbb
loope
imul
inc
es
iret
cmc
jmpw
dec
xor
sub
xchg
cmpsl
mov
movsb
jmp
jmp
cltd
push
aad
mov
xlat
cmpsb
mov
shll
add
leave
imul
aas
sbb
sbb
enter
ljmp
lods
and
mov
and
push
and
xchg
lret
jne
pop
mov
mov
in
shl
fcoms
repz
dec
adc
in
xor
subb
std
cmp
push
negb
lods
dec
idivb
mov
or
pop
push
xchg
mov
xchg
ds
or
cmpsb
jae
dec
xor
loop
lret
out
and
push
imul
xor
dec
or
daa
aam
jne
jns
sub
push
inc
call
push
or
jmp
sub
add
scas
mov
ret
xchg
lock
in
jecxz
mov
lret
stos
je
js
xor
jo
and
lds
mov
adc
add
cmp
pop
jg
push
or
xchg
cmp
fisubrl
jmp
mov
imul
fildl
cmp
push
jae
enter
mov
je
bound
stc
sub
xchg
and
fadds
repz
add
pop
dec
cmpsb
pop
add
cld
push
adc
push
xlat
cwtl
cltd
imul
lods
mov
xor
es
pop
or
mov
jle
push
xor
mov
and
leave
in
hlt
xchg
jnp
sbb
xchg
cmp
test
fnsave
adc
in
cmc
mov
xor
scas
xchg
adc
sub
lret
lret
out
mov
pusha
subb
lock
inc
pop
lret
cld
lods
outsb
into
sub
inc
stos
mov
sub
xchg
mov
mov
inc
cmc
mov
in
aaa
lods
imul
xchg
xor
fmull
scas
pop
cmp
dec
or
jne
out
sbb
jl
jl
shll
rorl
into
idivb
adc
sbb
int
mov
sub
jb
fnstsw
jmp
outsb
cmp
leave
loopne
in
addr16
mov
add
adc
adc
ds
sbb
lods
inc
dec
out
xchg
imul
pmuludq
icebp
mov
push
repz
add
add
pop
xor
ljmp
cmp
push
popa
fldenv
test
in
inc
inc
push
inc
in
sbb
pusha
mov
roll
mov
dec
aam
pop
ret
sbb
dec
sbb
rcrb
loope
mov
sbb
or
lcall
imul
dec
dec
jmp
out
and
pop
daa
lret
movsl
cmc
mov
push
imulb
data16
xchg
sub
orl
jp
mov
and
lcall
adc
mov
dec
push
xor
fwait
pop
ret
inc
or
int3
pop
xor
scas
les
in
aad
addr16
or
lods
mov
scas
lods
push
and
int3
incl
in
jmp
add
fistps
dec
sbb
test
xchg
es
js
iret
xor
xor
js
and
iret
inc
mov
movsb
ja
push
cmpsl
imul
iret
xor
mov
sbb
adc
xchg
and
test
add
jl
pop
xor
es
sbb
or
out
add
loopne
sub
xchg
movsl
aad
stos
fisttps
out
notl
mov
jmp
push
cmp
mov
ret
rcll
hlt
popf
jbe
rcr
add
shlb
out
pop
shrb
sub
into
std
loope
aad
lret
rcrl
fistl
mov
sti
lret
insl
enter
ret
jp
adc
jmp
jbe
mov
lds
adc
mov
or
scas
loope
cmp
xor
std
pusha
fwait
jb
das
cmp
push
xchg
je
cmp
test
and
cmp
fcoml
and
fisubrl
push
jmp
and
push
insb
xor
jmp
mov
dec
mov
dec
and
sub
iret
xchg
pushf
into
xlat
das
xchg
fnstenv
and
lds
jne
test
int3
mov
inc
test
mov
pop
lret
addr16
cmp
mov
repnz
in
je
xor
mov
ffreep
mov
push
aaa
hlt
mov
add
xchg
out
push
nop
mov
mov
mov
bswap
mov
jnp
mov
in
roll
push
in
es
xchg
rep
cltd
push
orl
jmp
fnstsw
jmp
not
jns
xlat
adcl
leave
mov
in
std
ja
xchg
cld
das
repz
fnstenv
icebp
jecxz
sbb
idivb
call
sub
xchg
je
es
daa
ljmp
imul
and
out
mov
cmp
scas
mov
pmulhw
xor
int3
add
mov
mov
lret
push
cmp
sbb
mov
xchg
push
fildll
mov
fstps
addr16
inc
mov
mov
sbb
gs
jo
outsb
shlb
dec
test
mov
fdivrp
in
and
es
push
pop
sub
pop
jno
jle
mov
inc
cmp
push
nop
loop
jnp
popf
and
xchg
pusha
sub
sbb
test
xorl
loop
es
inc
mov
sbbl
xor
or
push
in
out
inc
push
filds
or
or
ds
arpl
cwtl
popf
test
inc
jle
push
stos
cs
ja
es
add
adc
stc
xchg
repnz
push
sub
mov
shll
cmp
and
int3
int
ljmp
mov
lret
cmpl
push
lds
jle
dec
insl
lods
sbbl
ljmp
adc
mov
repz
jge
hlt
xchg
xchg
xchg
pop
ljmp
cli
sub
push
jl
lods
adc
shll
push
mov
cmp
bound
add
or
fwait
pop
in
into
jp
xchg
sbbb
push
pop
cmp
xchg
or
adc
sbb
loope
arpl
xor
lods
push
arpl
adc
stos
ds
pop
or
gs
imul
ds
push
icebp
sub
xchg
xor
pop
adc
add
sub
adc
mov
pop
gs
outsb
pop
outsb
roll
mov
pop
xchg
fisubrs
pop
testl
js
dec
mov
fs
cmp
lahf
lret
pop
push
hlt
adc
dec
mov
or
jle
aaa
andb
fwait
sbb
adc
pop
inc
loopne
lds
arpl
fistpl
testl
jae
pop
shlb
test
sbb
pop
pop
rcr
sbb
sarl
dec
pop
lods
leave
mov
sahf
mov
sti
xchg
loope
fwait
je
mov
inc
aad
adcb
push
lcall
aam
mov
imul
mov
jl
idivl
or
push
jae
dec
or
mov
adc
sub
and
loope
jecxz
bound
lods
sti
mov
ret
jno
or
adc
push
mov
dec
sbb
fsubrl
push
inc
fcmovbe
cli
dec
lods
sbb
push
bound
cmc
rolb
arpl
into
pop
or
popa
jae
test
addr16
fistpll
test
mov
cld
and
and
inc
cmpb
iret
xor
shlb
daa
mov
movsb
cmp
or
jnp
xchg
ja
sbb
rclb
cmp
sub
rcrb
pop
hlt
mov
mov
cmpsb
inc
push
sbb
jp
mov
and
jecxz
jo
cmpsb
cs
xor
popw
pushf
xor
imul
popf
xor
fs
stos
cmp
shr
xor
decb
mov
sbb
cmp
mov
push
or
mov
enter
pop
sub
mov
or
sbb
mov
je
fwait
add
scas
mov
dec
test
xor
int
aam
ljmp
ret
xor
sahf
and
jmp
fstl
jmp
daa
pop
stos
mov
imul
fwait
shll
pushf
mov
addb
lock
pop
out
and
int
sub
or
out
outsl
and
gs
and
lods
dec
flds
mov
lea
pop
xor
xlat
call
loop
inc
stos
pop
pushf
add
test
ret
out
dec
repnz
sub
fcoms
dec
daa
rcll
ljmp
and
cmpl
loopne
xor
mov
xchg
cmp
xor
maxps
iret
pop
jcxz
jo
pop
pop
in
aaa
push
aas
nop
add
sbb
mov
cmp
gs
xor
sub
lock
stos
dec
cmp
jmp
or
std
mov
pushf
imul
pop
mov
xchg
gs
mov
ja
jne
loopne
adc
sbb
rcr
sub
push
data16
xchg
mov
call
mov
cmp
fst
or
pop
out
jle
rcrl
adc
sub
into
fldenv
xchg
mov
jge
or
clc
xchg
enter
dec
inc
insl
add
dec
dec
idivb
push
sahf
mov
fwait
xlat
mov
mov
pop
xor
inc
pop
mov
xchg
popa
ljmp
icebp
mov
and
or
cwtl
add
cli
das
gs
mov
shlb
mov
add
inc
fs
test
outsb
ret
lcall
mov
add
mov
pop
cli
cmp
ret
lahf
cltd
mov
pop
jp
lea
aaa
or
in
cmp
movsb
mov
notl
push
imul
int
mov
add
cmp
pop
and
aam
mov
and
sbb
pop
adc
cli
jo
inc
imul
adc
lock
adcb
dec
pusha
adcl
pop
inc
jnp
stos
stc
lret
mov
dec
bound
cmpsb
mov
xchg
in
ss
inc
fsubrs
add
mov
nop
das
add
hlt
mov
sub
lret
push
mov
lds
xchg
cmp
xlat
aam
or
popf
aaa
sbb
mov
mov
mov
xchg
add
in
movsl
push
and
pop
iret
pop
fsts
adc
ss
loopne
data16
dec
js
adc
subl
in
push
mov
test
xlat
es
aam
call
adc
addl
sub
cld
and
movsl
test
xor
int
or
loop
leave
int
xor
orl
cltd
outsb
stos
mov
das
dec
mov
mov
hlt
xchg
bound
add
mov
ja
stc
mov
add
gs
pusha
rcl
mov
fwait
inc
push
jg
mov
stc
sarl
fldcw
push
cmp
je
cwtl
xlat
imul
add
and
mov
mov
push
mulb
mov
push
mov
in
xchg
test
pusha
iret
cmc
loop
pop
test
sbbb
cmpsb
lahf
aas
xchg
stos
testb
push
push
outsb
xchg
push
lahf
mov
adc
dec
or
xchg
test
inc
bound
fisubrs
cmp
addr16
js
daa
sub
out
lods
adc
imul
in
ss
dec
lret
jmp
sar
xchg
mov
pop
push
push
sar
adc
mov
add
leave
cli
mov
mov
sbb
or
pop
pop
inc
insl
or
cltd
cld
mov
and
or
aas
push
iret
cmp
lret
or
outsb
cmpsl
xorl
lcall
enter
popf
or
cmp
jge
push
out
mov
xchg
inc
dec
sbb
gs
pop
repnz
std
aad
shl
setns
in
iret
sti
inc
mov
push
mov
shl
and
sbb
imul
pop
xchg
mov
pop
adc
dec
pop
push
mov
mov
xchg
mov
sub
push
sarb
add
adc
or
rcl
sub
jmp
shr
adc
test
jnp
dec
xchg
stos
cmp
jle
jle
mov
sbb
sahf
into
mov
mov
scas
imul
js
sahf
mov
pushf
push
mov
sub
dec
mov
ss
pop
outsl
or
inc
adc
push
jge
test
sahf
in
cmp
lock
pop
add
sahf
jns
mov
add
or
push
sub
cmpsb
xchg
jmp
inc
data16
fmull
es
scas
sbbb
shrl
inc
shrl
mov
push
or
or
addr16
leave
bound
jne
dec
dec
xchg
cld
jmp
in
je
aad
fwait
cmp
mov
xchg
out
das
xchg
ret
cltd
pop
lock
stos
push
mov
cmp
aaa
inc
js
lret
adc
fwait
pop
or
subb
testl
andl
mov
mov
aad
xor
add
inc
mov
mov
pusha
sbb
push
shll
ss
push
clc
cmpsl
mov
cmpsl
push
jp
hlt
ljmp
push
xchg
inc
xchg
nop
push
lret
inc
jae
mov
sbb
mov
sub
aas
daa
std
mov
loope
std
test
ror
fmulp
pop
fisttpll
pop
mov
outsl
mov
add
repz
dec
pop
inc
dec
adc
in
repnz
adc
push
ret
fnstsw
jns
jb
mov
insl
xor
inc
or
cltd
test
addl
repnz
mov
shl
enter
add
cmp
jne
xchg
fwait
sub
jge
mov
pop
je
mov
jl
xor
dec
add
minps
dec
sbb
icebp
lds
cmpsb
mov
adc
jmp
push
or
or
mov
rol
mov
xchg
or
es
xor
repz
pusha
jg
rdpmc
lds
inc
inc
aas
push
jmp
mov
or
out
mov
adc
rcl
enter
sub
jecxz
pop
stos
cmp
ss
out
hlt
jecxz
mov
pop
jle
add
and
xor
loope
adc
push
rcrl
pop
jno
jge
jp
orb
out
pop
cmp
mov
addr16
pop
inc
bound
je
push
int3
out
jnp
mov
inc
xor
in
pop
push
mulb
pop
lsl
sub
sbb
add
mov
push
mov
jae
repnz
loope
jge
cmp
fnstsw
xchg
pop
mov
inc
decb
xchg
xchg
ss
in
adc
lcall
aaa
inc
das
arpl
fdivs
xchg
jns
gs
add
jne
add
mov
cmpsb
or
jo
hlt
mov
jmp
lret
push
jae
sub
aas
lods
cmp
pop
jg
in
dec
jne
inc
jns
and
in
jmp
xchg
xabort
xor
lods
mov
mov
int
lock
xchg
or
sub
outsb
add
mov
mov
int3
mov
add
adc
lcall
mov
mov
scas
mov
inc
in
cmpsb
dec
stc
or
or
cli
int
inc
pop
xor
mov
cmc
pop
push
and
sbb
dec
or
mov
jb
or
dec
lret
add
pushf
ss
in
insb
jmp
in
stos
insl
cmpsl
movsb
frstor
sub
test
mov
fistl
cmc
cs
jmp
in
ljmp
bound
cmp
xchg
rclb
cmp
push
fucomip
fadd
cmp
ja
sub
jmp
icebp
mov
in
aas
xor
repnz
add
dec
jmp
cmp
sbbb
xor
xchg
adc
xor
sbbb
xor
popf
ljmp
pop
dec
push
sti
mov
sub
pushf
mov
jecxz
stc
pop
pop
dec
cmc
repz
xor
fisubs
inc
cmpsb
cmp
sub
dec
push
and
cmc
test
jle
nop
pushf
sub
imul
pop
aad
leave
cmp
pop
xor
cmp
xor
insb
out
imul
sub
inc
dec
dec
orl
mov
xchg
mov
xorb
insl
jl
ljmp
shrb
pop
xor
cwtl
lret
inc
in
jo
dec
mov
outsb
imull
cmc
push
imul
test
mov
xlat
lahf
push
inc
inc
js,pt
sti
fsub
pminsw
cmpsl
mov
out
and
enter
adc
cltd
pop
add
cmp
inc
mov
stos
lds
test
adc
pop
dec
aam
add
sub
adc
adc
inc
cmp
mov
sbb
jno
in
add
fstps
imul
mov
jle
pop
aaa
rcrb
hlt
or
sub
or
icebp
pop
or
pop
data16
lret
push
push
movsb
loop
lahf
imul
ja
mov
sub
shl
or
push
cmp
pusha
xchg
dec
test
cwtl
cmp
ffree
mov
pop
jnp
jo
jnp
lock
int3
pop
jmp
insb
xor
ljmp
insb
lea
push
dec
cmpsl
xor
mov
dec
cli
cltd
clc
into
orb
jl
inc
sahf
push
xor
inc
or
cwtl
scas
mov
adc
cmp
out
ficomps
xchg
ja
clc
lahf
pop
and
mov
cmp
js
dec
fwait
push
mov
aad
outsl
push
mov
rcll
adc
mov
dec
outsl
jp
inc
outsl
rorl
dec
sti
call
iret
or
outsb
adc
sar
or
add
cltd
adc
jbe
pop
pop
fdivrp
add
inc
and
stos
cmc
mov
adc
enter
and
rolb
add
xchg
add
imul
mov
sub
xor
pop
jmp
sub
cmp
icebp
sub
roll
ljmp
iret
js
mov
inc
xor
addr16
jns
adc
cmp
inc
jmp
sbb
popl
and
pop
insl
adc
int
out
and
cmp
aas
clc
into
xorb
mov
cld
jmp
scas
iret
pop
add
adc
outsl
dec
sub
jns
mov
aad
mov
push
push
mov
sub
push
push
and
jae
in
and
ffree
dec
pop
dec
jmp
push
push
loop
enter
adcl
push
fisttps
add
mov
jnp
jl
out
cmp
and
jecxz
and
fcmovu
pop
pushf
add
pop
fs
mov
roll
mov
mov
lods
call
xchg
and
push
test
mov
call
cld
sbb
arpl
sbb
xor
sub
insl
dec
lds
dec
push
push
lea
cmp
popf
mov
je
mov
mov
mov
cwtl
mov
mov
mov
pop
and
and
jg
cmp
jmp
call
fiaddl
pop
adc
inc
stos
test
cmpsb
inc
loope
cmp
fidivrs
and
in
adc
cmp
adc
aaa
cmc
lcall
repz
add
sbb
mov
into
xchg
adc
fwait
dec
out
imul
hlt
jae
dec
aas
bswap
bound
lods
outsb
xchg
mov
movsl
xor
sub
jno
clc
icebp
cwtl
sahf
mov
jmp
mov
sub
pop
inc
xchg
inc
imul
xchg
fisubs
xor
and
ja
and
xchg
mov
dec
xor
sti
lods
sahf
mov
dec
cld
mov
xor
fpatan
and
mov
dec
mov
ljmp
fstpt
push
fstl
xchg
repz
or
fcomp
sub
xlat
stos
arpl
pop
out
or
pop
push
shr
bound
je
or
and
call
sub
cmp
pop
stc
dec
scas
push
out
mov
xchg
popf
dec
pop
stos
sub
adc
leave
mov
and
adc
cmp
aaa
pop
dec
push
inc
je
push
cmp
jle
imul
push
fidivs
lods
push
icebp
mov
xchg
xchg
call
jle
lret
add
rcrl
push
xchg
adc
xlat
fcoml
xor
sbb
aam
ljmp
sbb
mov
mov
dec
outsl
adc
divl
jno
enter
arpl
push
jae
sub
test
nop
fs
jbe
cmc
jno
mov
loopne
or
sarb
and
outsl
stc
movsl
push
mov
sub
cwtl
fldenv
ficomps
push
mov
repnz
icebp
movsl
xchg
lcall
sbb
gs
jecxz
pop
sbb
xor
xchg
fwait
sarl
pop
insl
jl
jge
neg
jmp
loopne
cld
mov
insl
test
movb
jl
addr16
pop
sub
mov
test
xor
sbbb
inc
sbb
cmpsb
mov
sub
inc
icebp
scas
or
inc
outsb
aaa
mov
mov
jmp
repnz
fs
ret
outsb
test
and
fwait
xor
mov
mov
mov
dec
adc
fsubr
xor
push
inc
lretw
sub
sub
xor
mov
scas
mov
inc
mov
or
jg
leave
in
mov
pop
loope
outsb
inc
dec
or
jnp
in
push
mov
lret
sbb
not
out
xor
sub
loop
clc
sbb
daa
fs
or
stc
lods
aad
popf
dec
xchg
xchg
daa
inc
dec
mov
mov
inc
add
cmp
pop
clc
add
loope
in
sbb
mov
stos
stos
hlt
aaa
pop
and
adc
ljmp
inc
push
push
mov
xor
cmpsl
mov
fwait
and
rclb
inc
mov
aaa
jo
jae
outsb
ds
divb
repnz
adc
cmp
inc
pop
jmp
push
orb
fistps
add
pushf
scas
lds
pop
aas
push
roll
mov
sbb
push
popf
addr16
push
pop
adc
add
xor
add
sub
mov
xor
test
cld
push
int
enter
rorl
stos
inc
dec
xlat
movsb
mov
pop
outsl
arpl
in
fidivrl
or
pop
icebp
push
jp
lods
jg
xorb
xor
repnz
les
std
sub
add
adc
push
ret
sbbl
fiaddl
push
xchg
pop
das
mov
stos
mov
mov
xchg
or
add
addl
xlat
lret
push
lods
inc
add
test
mov
fsubl
pop
outsl
mov
fsts
and
push
cmp
pop
fsubs
rcrl
aam
pop
dec
lcall
mov
mov
xchg
les
jg
pop
into
into
push
push
push
call
mov
lahf
cmpl
icebp
xor
pop
and
aaa
out
adc
stos
rcll
xor
ljmp
decb
inc
or
lods
in
cmc
jmp
sbb
cld
sbb
jecxz
xor
les
mov
sti
xor
int
pop
in
or
inc
ljmp
scas
or
dec
imul
fiadds
pop
shll
dec
les
and
orl
push
enter
inc
movsl
mov
icebp
insb
xor
lret
add
ret
jmp
jae
xchg
mov
stc
mov
in
bound
mov
jp
icebp
adc
adcb
cmp
pop
loop
aad
xor
mov
lcall
aaa
cs
in
jno
add
aaa
mov
ret
repz
add
and
xlat
lcall
sti
cmp
lret
test
xchg
hlt
out
loop
ljmp
fsubs
and
and
ja
loopne
out
mov
pop
pop
inc
cs
or
jne
cmpl
or
xchg
and
mov
ss
loope
mov
fst
cld
xchg
repnz
mov
repnz
dec
lea
mov
shl
jbe
jo
inc
lcall
fs
aas
ja
adc
jl
in
or
addl
jg
inc
push
in
adc
js
pop
stos
inc
faddl
mov
and
pop
fisubs
in
scas
test
outsb
iret
push
pop
dec
stos
testl
inc
add
rcrb
sbb
cmp
mov
inc
cmp
and
fmul
shl
cmp
clc
xchg
fldcw
cwtl
movsb
jnp
jno,pt
sahf
or
lods
adc
subb
shll
out
fdivrl
lret
dec
bound
and
inc
aaa
cmp
call
test
jbe
leave
mov
dec
aam
xchg
inc
stos
dec
cmp
adc
mov
es
cmp
sub
rorl
jbe
in
xor
fsubrs
mov
lods
icebp
sub
sub
mulb
jecxz
sbb
movsb
aaa
mov
in
mov
hlt
push
add
xor
and
adc
add
jns
dec
xor
sbb
orb
inc
or
sub
pop
push
jecxz
mov
push
fimull
and
add
fbld
addr16
nop
push
push
outsb
cwtl
push
mov
lahf
cmp
xor
push
ljmp
mov
fistps
xchg
imul
cmpsl
fcom
or
daa
inc
bound
add
xchg
jnp
jl
pop
jmp
lods
outsl
cmpsl
adc
inc
inc
test
outsl
push
sub
neg
pop
dec
ds
sub
dec
and
add
leave
sahf
lret
lods
jbe
add
sbb
jmp
das
loope
jns
sbb
fdivl
inc
push
out
dec
push
test
mov
inc
jo
adc
and
add
iret
sbb
and
cltd
cwtl
incl
sub
mov
lretw
lds
shrb
mov
mov
mov
xchg
pop
mov
fs
jns
testl
and
adc
les
jne
into
xor
inc
rolb
jae
pop
mov
ss
int
push
xor
lods
adc
mov
adcl
lea
pushf
xchg
mov
cs
inc
fwait
or
jbe
jb
push
sbb
jl
jnp
dec
push
dec
movsl
fidivs
inc
les
push
add
xor
xchg
xchg
mov
sarl
jl
xchg
or
or
xor
test
mov
int3
pop
mov
adc
jge
in
pop
sub
ja
xor
iret
icebp
and
cmp
sub
loop
sbb
mov
mov
sbb
xchg
add
inc
xchg
dec
scas
adc
or
adc
mov
adc
insl
sbb
ja
jp
pop
push
mov
jp
pop
adc
xchg
push
push
lret
das
or
xchg
xchg
jp
push
popa
xor
dec
pushf
outsl
aad
das
add
adc
std
shrl
add
jp
jmp
mov
movsl
bound
jp
test
lcall
push
jecxz
mov
push
pop
mov
push
sbb
repz
fwait
sub
pop
dec
mov
adc
sbb
sets
or
testb
das
cmp
daa
stc
inc
outsl
nop
scas
dec
mov
jb
push
jbe
mov
pop
jecxz
xchg
imul
int
cli
cli
cmp
rorb
or
insl
das
lods
pop
out
rcl
sbb
sbb
sub
mov
jae
add
sysret
lods
dec
xchg
mov
mov
jns
adc
test
iret
fmull
icebp
cmpsl
dec
fcmovb
test
lcall
sub
add
stos
popa
inc
out
and
or
mov
pop
shll
icebp
rolb
xchg
mov
xchg
cmc
pop
ja
scas
xchg
pop
sbb
push
aad
subl
adc
ljmp
dec
sub
xor
out
xor
cmp
jno
push
les
sub
in
testl
cmp
lods
movl
sti
or
adc
test
add
sub
sub
xor
push
psllw
mov
in
fadds
and
sub
push
fildl
lcall
jg
pop
xchg
out
cwtl
and
jle
lret
shr
xchg
push
mov
cmpsl
lods
ja
fucomp
mov
jecxz
and
push
sub
imul
sub
xor
pop
js
stos
mov
sbb
push
mov
sub
pminub
cwtl
cmpsl
imul
mov
ficompl
and
test
push
sub
jg
cmp
add
cmp
std
insb
and
push
scas
inc
jae
push
sbb
imul
dec
pop
sahf
xchg
add
dec
in
mov
fmul
sti
jl
ret
push
fdivrs
pop
jge
aaa
inc
lods
inc
test
push
out
adc
rclb
mov
cmpsb
xchg
mov
gs
aam
or
in
stc
pop
fadds
fistps
insb
in
xchg
mov
std
or
adc
into
subl
mov
sub
fcompl
pop
mov
jb
push
cltd
ljmp
outsb
cmc
pushf
movsb
mov
fildl
xor
ret
scas
inc
sub
scas
jmp
pop
jg
mov
sub
scas
mov
dec
sbb
add
insb
push
in
jge
repz
popa
or
pop
adc
inc
or
lret
sub
xchg
sub
mov
or
iret
adcb
push
cmp
sbb
push
jno
mov
xchg
mov
mov
or
xchg
and
push
mov
mov
daa
lds
xchg
jecxz
sbb
jle
jg
push
lcall
dec
das
scas
and
jmp
loop
inc
rclb
mov
roll
loop
out
psubsw
pop
adc
stos
mov
clc
mov
in
notl
cmpsb
mov
pop
mull
scas
xor
movsb
pop
dec
setnp
rcr
or
idiv
sbb
loope
mov
test
xor
add
add
xorl
hlt
in
mov
inc
mov
in
sbb
scas
pushf
scas
rdtsc
mov
cmpsb
mov
or
xchg
addr16
add
mov
inc
fwait
icebp
jbe
inc
mov
jp
sti
dec
xlat
cld
fbstp
fwait
mov
xor
int3
sub
mov
dec
aad
data16
roll
arpl
sbb
jp,pt
cmp
lret
adc
inc
fists
jns
aad
movl
je
pop
fisubrs
lcall
push
mov
mov
call
pushf
and
mov
jmp
mov
inc
cld
dec
les
sbb
add
mov
xchg
orb
dec
cmc
in
into
icebp
and
pusha
insb
out
push
test
out
mov
mov
cmovg
or
pushf
cld
mov
and
insw
nop
push
dec
lahf
lahf
inc
sbb
pop
lret
shrb
lcall
pop
inc
ja
rolb
insb
out
xor
push
stos
movsb
iret
cmpsl
sar
ret
lock
movsb
adc
xor
cmpsb
xchg
or
loop
sahf
xor
out
mov
lods
and
mov
pop
add
push
push
push
mov
mov
clc
xorl
xor
mov
idiv
shl
add
stos
dec
ret
sub
push
leave
push
stc
dec
and
imul
jne
push
imul
lock
jecxz
jb
jle
xor
js
lcall
jl
subb
jo
pop
sti
addr16
mov
xchg
jo
je
mov
andl
lods
imul
outsl
outsl
mov
in
or
mov
data16
aad
inc
cmp
pusha
inc
xor
lahf
push
push
movsb
and
arpl
push
aaa
fldl
push
jecxz
pop
push
cmp
lods
jnp
inc
lock
cwtl
adc
in
pop
push
out
lcall
dec
mov
notb
in
jge
lcall
mov
stc
jge
das
pop
xor
jbe
rcrl
push
sub
test
cmp
outsb
shrl
and
pop
aas
fs
shll
sub
fxch
sarl
pop
int
mov
lock
ret
dec
pop
xchg
xor
gs
mov
int3
std
mov
loopne
cmp
lock
mov
mov
pop
out
mov
xchg
pop
cmp
insb
push
mov
scas
int3
pop
nop
xchg
testl
adcl
and
sbb
dec
push
mov
outsl
push
sub
incb
test
clc
hlt
imul
mov
std
je
loope
or
dec
xor
pop
sub
sub
out
subl
cmp
outsb
imul
cld
ret
jb
xor
sbb
cmc
out
call
xchg
inc
call
xor
adc
sahf
lret
xchg
and
lock
lods
or
or
jecxz
aad
xlat
jnp
into
cmp
rclb
roll
mov
mov
dec
inc
mov
movaps
mov
leave
adc
lock
loop
cmp
fimuls
cmpl
mov
pop
xorl
pop
rorb
xor
movb
push
ljmp
loope
cmp
and
jb
ret
pusha
scas
push
cld
in
leave
or
sub
je
or
jmp
inc
nop
in
test
loopne
xor
pop
mov
sbbl
xor
sti
loopne
psrlq
jmp
cmp
push
mov
icebp
lods
cmp
mov
and
andl
push
push
clc
icebp
in
aad
cld
inc
mov
mov
pop
xorb
lock
mov
ss
pop
jge
popf
dec
stc
imulb
ljmp
cli
cmp
sub
pop
loop
push
xor
insl
in
mov
dec
mov
cld
pop
sti
adc
xchg
loopne
jae
or
mov
pushf
inc
xchg
inc
ret
xchg
ret
stc
jo
jge
dec
push
adc
rcrl
mov
cmc
xchg
sti
xchg
add
int3
dec
shrb
sbb
stos
rolb
add
in
sbb
js
inc
fnstenv
out
fsubr
dec
inc
ret
mov
mov
aaa
fs
jbe
push
hlt
lock
lds
outsb
inc
faddl
xchg
jo
movsl
insl
popa
ret
xchg
loope
adc
mov
in
stos
repz
int
aaa
or
int3
test
sub
int
lds
inc
scas
and
aas
xchg
sub
mov
add
pop
inc
out
nop
mov
sbb
repz
pop
dec
cmp
mov
cltd
loop
adc
pop
jae
sbb
cmpb
jl
out
sub
shl
dec
shll
mov
enter
mov
mov
lods
pop
or
shl
mov
loop
or
outsb
dec
dec
pusha
bound
sbb
xor
mov
mov
xorl
adc
mov
inc
or
adc
lock
and
jae
adc
push
loopne
mov
cmp
and
push
and
pop
push
mov
xchg
sbb
xlat
aas
fisubs
inc
outsb
fs
nop
sbb
pop
or
lcall
jns
inc
jp
xchg
inc
lds
roll
xor
mov
lahf
cmpsl
push
ret
or
inc
mov
test
fdiv
inc
mov
adc
loop
orl
out
shrl
dec
dec
das
cmpsb
mov
pop
xor
mov
ds
add
sbb
and
ret
push
int
in
fists
pop
push
mov
fbld
leave
lret
sbb
jo
pop
mov
dec
std
lret
mov
cmp
mov
lret
jg
stos
js
out
cwtl
dec
jmp
rcll
shll
ss
lea
sbb
int
cmp
cmpsl
in
in
rcll
lods
sub
enter
jnp
or
adc
jecxz
mov
pop
jno
roll
mov
pop
adc
jo
stos
jb
subl
pop
scas
or
mov
jbe
dec
inc
jno
pop
mov
das
pop
push
jbe
pop
jnp
push
lock
out
mov
dec
cmc
or
and
xchg
iret
rorb
loop
ret
in
fwait
mov
adc
xchg
and
cmp
ffree
cli
push
jle
into
rcrb
outsl
outsb
pushf
jnp
mov
add
lds
ja
imul
adc
push
push
sbb
and
sbbb
or
push
jne
inc
imul
int3
jae
fwait
cmp
mov
cmp
cmp
sbb
sahf
lods
jp
xchg
push
mov
xor
rolb
mov
movsb
lret
dec
rorl
sbb
lcall
mov
sbbb
in
pop
lcall
mov
shll
jl
icebp
je
cmc
pop
sbb
pop
lock
adc
sbb
mov
jnp
pop
or
push
push
out
cmp
iret
fwait
xchg
xor
pop
flds
push
test
mov
push
repnz
cli
and
add
or
add
call
adc
inc
jle
xchg
xchg
fsubl
mov
add
and
cmpsb
lea
mov
loope
xlat
inc
sbb
lcall
mov
sahf
outsl
adc
cltd
daa
fsts
and
decb
cmc
jne
mov
or
and
icebp
out
add
sub
ret
pop
cld
fstps
int3
dec
int3
dec
jmp
xor
push
ret
sub
dec
stos
sub
xor
adc
pop
shrb
ja
pop
fdivrl
jnp
xchg
ret
pop
mov
xchg
dec
cwtl
call
jg
push
setnp
popl
xchg
pop
outsl
icebp
js
push
xchg
mov
sbb
je
mov
cmp
lcall
mov
lret
cmp
push
cmpsl
mov
xor
lds
cmpsl
cmc
cmp
test
movb
jmp
inc
iret
pop
int
add
loope
jg
fdivrl
adc
mov
roll
jb
sbb
sti
in
or
push
lahf
xchg
imul
xchg
jae
push
pop
in
cli
pop
adcb
les
jbe
call
fmuls
dec
dec
mov
imul
sub
in
shrl
mov
jp
push
in
sub
mov
movsb
test
xor
mov
and
ret
inc
into
dec
idivl
sbb
xor
mov
mov
cmpsb
popa
mov
mov
xor
insl
or
in
ljmp
rcrl
addl
loope
data16
xchg
es
ret
iret
popa
fadds
mov
sbb
jg
icebp
pop
pop
repz
mov
rorl
sbb
mov
pop
fwait
movsb
es
insb
sub
jle
jnp
jnp
fwait
lock
sarb
fdivl
push
lret
pushf
ds
dec
mov
pop
push
push
mov
xchg
jle
in
mov
lds
inc
ljmp
dec
sbb
or
or
mov
div
xchg
aaa
add
adc
insl
test
mov
jge
ss
dec
icebp
cmpsb
cwtl
test
pand
insl
push
roll
push
scas
outsb
cmp
das
xor
pop
push
jg
sub
imul
inc
adc
test
dec
dec
mov
mov
xchg
outsb
xchg
hlt
dec
add
push
sub
and
jp
mov
jnp
test
xlat
or
movsl
das
ljmp
out
xchg
inc
aam
icebp
add
repnz
loope
repnz
cli
dec
pcmpeqw
lret
test
cmp
jnp
jb
or
out
out
shll
sti
out
cmp
add
call
popf
fdivrs
jle
testl
ret
shrl
int3
lock
outsl
xor
fucomip
sahf
in
mov
cltd
sub
jnp
push
lahf
sbb
mov
loopne
loope
xchg
pop
adc
and
icebp
jo
xor
jg
mov
icebp
add
mov
stc
int
fisttps
add
or
aaa
inc
xor
push
mov
add
out
xchg
mov
out
or
jge
jecxz
or
aad
js
dec
sahf
es
fldcw
xlat
xlat
jnp
popf
js
mov
out
fs
out
xchg
call
or
pop
push
mov
pushf
popf
add
lahf
jns
into
sbb
or
in
sub
cmpsl
push
adc
leave
xor
ret
int3
inc
imul
insl
lret
mov
or
push
and
pop
insw
xchg
pop
in
inc
lahf
pop
loope
aam
popa
sub
adc
lcall
xlat
shrb
popa
loopne
repnz
mov
decb
push
push
ja
bound
call
and
imul
push
inc
xchg
or
mov
int
dec
or
mov
mov
stc
and
movl
fs
sbb
movsb
rcrl
mov
jbe
jb
adc
cmp
iret
mov
sub
imul
maskmovq
and
cmpsl
rcrb
cmp
lcall
jmp
xor
mov
test
aas
aas
outsl
popf
sbb
outsb
bnd
pushf
cli
es
or
aam
and
push
out
add
mov
movsb
dec
int
jge
jecxz
bound
mov
inc
mov
dec
icebp
test
add
sbb
pop
les
out
loopne
mov
arpl
scas
add
mov
enter
pop
cmc
dec
xor
pop
jg
sahf
cld
or
add
loopne
cmp
or
cltd
faddp
stc
daa
pop
call
sarb
insl
gs
fwait
enter
pusha
adc
jne
push
cmp
push
test
stos
push
jno
mov
cmp
sub
cs
gs
push
inc
xlat
mov
or
addb
mov
ljmp
imul
pop
sub
add
test
add
mov
test
jmp
loopne
push
pop
dec
push
sub
mov
mov
stos
dec
call
mov
movb
imul
xchg
adc
shr
dec
aad
xchg
addb
add
pop
push
mull
inc
xchg
repnz
fwait
adc
cmp
mov
sbb
cwtl
cwtl
jmp
dec
lods
push
lods
dec
push
les
jl
faddl
dec
enter
jge
mov
pop
adc
mov
sbb
cli
les
cmp
test
add
jae
push
rorl
or
bound
pop
stos
sub
daa
mov
mov
lret
mov
mov
sbb
fimuls
sub
adc
sahf
mov
dec
les
sub
jb
aaa
jge
aas
cmp
lahf
hlt
nop
into
call
or
pop
test
mov
cwtl
or
popl
lock
mov
xlat
sti
decb
test
push
or
sbb
mov
dec
call
cwtl
imul
mov
pop
sub
jns
dec
lds
cld
cmp
add
inc
cmp
ja
jnp
pop
mov
cmpl
test
xor
add
jmp
pop
sub
mov
stc
out
lods
push
fistps
dec
pop
jmp
outsl
sub
and
xchg
mov
jbe
pop
sbbb
insl
bound
aaa
outsl
test
aad
sub
stos
add
or
in
adc
cltd
xor
scas
sbb
mov
int3
aas
fsubr
repnz
test
test
mov
pop
lods
or
hlt
mov
fnstcw
icebp
imul
lods
and
mov
push
adc
lds
nop
xchg
push
inc
mov
shr
lea
and
add
inc
inc
cmpl
xchg
adc
addr16
pop
and
sub
gs
arpl
dec
inc
push
nop
inc
inc
sub
adc
ficomps
add
sub
pop
icebp
add
mov
and
fldt
sbb
insl
adc
fisubl
jne
fistl
call
pop
pushf
in
cmc
mov
xchg
push
lcall
out
inc
out
aam
lret
push
loop
fwait
imul
and
mul
cmp
jnp
cmp
add
test
lea
sbb
pop
and
push
enter
daa
dec
sahf
divl
jl
and
adc
aas
sub
cmp
xor
mov
push
dec
jl
mov
adc
test
cmp
pop
cltd
sub
dec
pop
int3
mov
push
lcall
inc
adc
and
mov
int
push
mov
push
push
inc
mov
inc
or
cmp
jns
push
sub
xchg
test
mov
jge
fnstsw
pop
rcrb
xchg
or
sbb
aaa
pop
stc
pusha
push
mov
adc
out
in
mov
or
clc
xchg
or
pop
ljmp
loope
stos
fistpll
and
pop
pop
in
daa
aas
cmp
sahf
ret
loopne
cmp
or
xchg
mov
sahf
sub
iret
sub
cmp
xchg
popa
call
int3
jo
push
cmpsb
dec
sarl
dec
cmc
mov
adc
lret
into
jge
fbstp
incb
hlt
cmp
fiadds
dec
xchg
popa
stos
push
ret
js
and
xchg
mov
jg
add
pop
pop
dec
push
shll
pop
add
test
out
stos
int3
sahf
loopne
flds
sti
out
popf
mov
inc
and
fldl2t
jge
das
xchg
and
imul
fs
in
inc
lods
bswap
loope
insb
les
cmp
incl
and
shll
bound
das
dec
mov
pop
imul
and
xchg
push
sbb
leave
adcb
cmp
mov
pmuludq
xor
jns
and
jns
andb
dec
sar
fadd
in
into
fst
push
adc
adc
lcall
movsl
ljmp
or
das
fs
push
dec
sub
dec
pushf
mov
cmp
mov
outsb
add
sbb
aam
mov
repz
sbb
and
pop
push
repnz
sbb
mov
jmp
jbe
inc
xchg
jae
shlb
fisubl
and
gs
lret
mov
hlt
scas
shll
and
jecxz
in
xlat
cwtl
js
fildl
push
push
add
outsb
xor
push
shll
sub
add
das
mov
pop
xchg
aaa
xor
jmp
ljmp
aad
and
js
jnp
stos
and
cld
insb
ljmp
push
jae
pushf
mov
addr16
scas
inc
mov
sub
outsl
dec
fcmovnb
filds
cmc
push
not
and
mov
jae
sbb
fwait
jae
pop
add
mov
lcall
movsl
pushf
cli
adc
push
cmpsb
and
aad
mov
push
subl
and
xor
mov
ret
insb
jecxz
adc
push
wrmsr
mov
sub
sbb
sbb
mov
cltd
cmpb
pop
push
sarb
rorb
jl
cmpsb
pushf
xchg
sub
cmpsb
jge
mov
sarl
sbb
or
mov
rol
add
cmp
pusha
gs
fwait
rolb
and
xor
sbb
fistpl
dec
push
or
xor
aam
imull
shr
fldt
nop
xchg
insb
mov
sbb
xchg
sbb
add
xchg
cmpsb
jmp
lret
cmp
repz
dec
cltd
pusha
fs
add
xorl
jl
xchg
es
jnp
or
icebp
jle
dec
out
lahf
cmp
pop
pop
adc
dec
cmp
popf
mov
enter
jecxz
popa
dec
divl
and
inc
or
mov
mov
mov
repnz
imul
dec
dec
mov
mov
or
std
test
push
rcrb
ss
test
popf
adc
push
xchg
push
adc
push
es
push
loop,pn
aad
subps
popa
aad
jle,pt
lods
lods
mov
aam
cmc
xchg
in
aas
dec
push
or
mov
or
cli
xchg
and
fsubl
mov
dec
xlat
popa
push
mov
iret
in
out
lea
test
sti
icebp
add
test
or
mov
sub
sbb
outsb
push
jne
int
inc
mov
mulb
es
push
or
jge
mov
pop
or
fisubs
ret
cmp
xchg
pusha
insb
dec
in
movsl
test
cmp
ss
jl
jmp
sub
arpl
mov
push
dec
addl
fnstsw
xor
jmp
cwtl
xchg
and
cmp
fisubl
and
jmp
push
push
pop
jno
xor
movl
fsubrl
pop
daa
and
int3
pop
xchg
jno
inc
cmpsl
shll
xor
and
xchg
adc
xchg
cmpsb
dec
test
sbb
pop
xor
je
or
in
or
jnp
addr16
je
and
nop
cmpsb
dec
aaa
mov
shlb
add
fs
jecxz
or
adc
xchg
lods
jle
out
imul
pop
cmc
rorb
sbb
add
ja
movsl
xorb
jle
sahf
cmpsb
cs
dec
repz
push
sbb
ss
fsts
addr16
adcb
jge
pushf
loope
mov
jle
shr
cmp
lret
pusha
cmp
jmp
insb
cwtl
daa
inc
inc
jp
leave
mov
or
pop
imull
adc
xchg
sub
push
dec
test
and
jecxz
xchg
xor
out
dec
jno
sub
fwait
decl
jae
stos
mov
ja
dec
inc
cmc
push
pop
sahf
jp
and
jmp
mov
add
pop
daa
push
nop
push
decl
cli
sub
or
dec
mov
xor
lods
div
push
mov
xor
xor
insl
out
ret
ret
mov
cltd
or
push
pop
lahf
xor
inc
inc
nop
xor
dec
aam
pop
sbb
rcrl
les
or
rep
jbe
ljmp
movsl
jo
jmp
shll
jno
inc
pop
jmp
bound
stos
mov
testb
test
sbb
push
lcall
inc
popf
mov
jg
es
sti
mov
sbb
bound
jl
mov
js
xchg
aas
sbb
fldt
lods
mov
and
sahf
mov
mov
clc
xchg
cmp
mov
dec
push
add
adc
sahf
sub
rorl
sahf
rcrb
xlat
mov
cmp
xor
inc
ljmp
or
cld
cld
jmp
in
lods
int3
mov
adc
lcall
push
mov
xchg
mov
test
mov
push
std
cmp
mov
aaa
mov
or
aaa
aaa
mov
rorl
add
negl
mov
xchg
test
jmp
idivb
shll
pop
in
shl
int3
sbb
int
adc
and
je
cmp
inc
sub
pop
mov
push
cltd
stos
in
in
add
mov
shll
push
xchg
xor
aam
push
mov
pop
mov
mov
or
pop
cld
jnp
es
push
xor
xchg
mov
aad
push
xchg
jg
ror
xchg
push
in
sub
mull
stos
or
lret
jo
push
neg
push
add
inc
loopne
dec
adc
fwait
or
pop
cwtl
sbb
insl
and
push
inc
pop
int3
mov
sub
test
ret
adc
popa
jge
fwait
mov
mov
je
pop
mov
iret
inc
sbb
dec
cmp
or
cmpsl
adc
nop
pop
ja
hlt
dec
cmpsb
or
pop
mov
cmpsb
lahf
shlb
sub
sbb
jo
cmp
inc
or
adcb
jb
pop
sbb
sbb
cmc
bound
fldenv
imulb
sub
adc
aaa
sbb
rcrb
inc
xchg
cmp
jb
mov
mov
call
inc
jge
or
adc
in
and
mov
clc
movsb
sarb
out
je
decl
sbb
shrb
mov
pusha
sub
ret
daa
cli
push
jo
loope
loope
jbe
dec
outsb
jmp
icebp
addr16
push
ja
data16
pushf
adc
and
mov
ror
ror
push
inc
sub
es
jae
lahf
cmp
lret
imul
call
xor
fs
stos
or
mov
notl
xor
les
inc
mov
jmp
xor
call
outsl
add
cmc
lods
std
sbb
stc
ficoms
test
and
lahf
popa
sub
out
addl
sub
loope
xor
add
and
xor
iret
dec
and
sbbb
mov
adc
das
std
dec
iret
xchg
insb
jge
mov
jge
mov
jmp
pop
inc
std
lret
rep
push
add
adc
pushf
mov
aad
fmul
pop
pushfw
push
lods
mov
mov
in
push
xchg
sbb
stos
sarb
xlat
sub
out
aaa
dec
mov
ds
pop
and
pop
pop
hlt
inc
mov
and
push
shll
arpl
cmp
add
mov
negl
shrl
arpl
enter
int3
or
cs
push
out
adc
ljmp
mov
into
jno
or
adc
jae
ljmp
mov
sub
push
mov
lods
dec
jno
xor
lods
test
dec
jae
xor
sahf
jnp
out
lret
lods
bound
mov
jns
notl
jo
sahf
cmp
inc
jnp
mov
loop
scas
stc
sbbb
repz
jp
imul
gs
mov
in
loop
popa
jp
rclb
mov
jmp
loop
imul
dec
arpl
pop
fistpl
xor
fisubrl
sbb
xlat
sub
fadd
push
add
cmc
sti
mov
je
inc
outsl
xor
dec
gs
clc
push
aad
and
test
cmp
inc
jmp
jae
in
mov
inc
xchg
cli
ret
in
stos
cmp
jae
inc
jno
fdivs
popf
xor
in
adc
xchg
arpl
stos
aaa
popa
addr16
xchg
idivl
push
dec
in
mov
rsqrtps
insb
scas
push
out
popf
insb
iret
cli
dec
fimuls
push
mov
mov
push
ds
and
push
lcall
sbb
lods
js
aaa
imul
scas
mov
dec
inc
pop
add
mov
lea
test
enter
sarb
fsts
cmpl
add
jns
or
iret
incb
pop
adc
cmp
jae
orl
xor
inc
push
ss
aaa
push
add
mov
xchg
mov
scas
xchg
jae
into
xlat
popf
push
out
ljmp
sub
inc
lea
push
imul
je
jne
inc
mov
sti
lret
pop
sbb
je
and
dec
incl
jnp
or
into
mov
fsts
jno
cltd
adc
xchg
push
aam
mov
fs
in
sbbb
lock
std
adc
xchg
mov
dec
movsl
cmp
push
fists
adc
in
push
xlat
jp
andb
xor
iret
push
pop
pop
mov
and
leave
mov
lret
outsl
push
std
enter
insl
add
mov
push
stos
fcompl
popf
mov
mov
in
xchg
xchg
stos
sbb
inc
into
inc
sub
cld
dec
mov
cmp
ror
push
int
out
adc
shlb
jnp
push
dec
mov
ljmp
cltd
mov
hlt
inc
fwait
xor
nop
mov
aaa
jmp
stos
sbb
mov
xlat
das
test
fld
mov
arpl
mov
movsl
into
mov
jae
cmp
scas
in
mov
sbbl
sbb
adc
jne
scas
enter
outsl
cmp
fistl
pop
xor
fdivrs
rcrl
fcomps
loop
ficoms
inc
lock
xchg
add
push
into
rorb
inc
adc
jno
mov
punpcklbw
jecxz
iret
adc
mov
test
adc
xor
mov
push
add
xchg
cmp
stos
outsb
jne
mov
adc
shr
int3
push
popf
iret
sbb
in
ds
out
add
test
aas
push
fwait
inc
lahf
imul
fdivrs
loop
inc
or
mov
xchg
bound
imul
add
pop
mov
mov
xor
mov
ret
mov
jle
xorl
adc
mov
notl
push
dec
lds
movsl
and
repnz
sbb
lcall
cmp
push
inc
sub
rcrl
popa
mov
popf
fmuls
stc
push
outsl
push
mov
cmp
inc
cmp
sbb
mov
sarb
mov
imul
push
sub
loope
push
frstor
jle
lods
in
test
fadd
aaa
leave
ret
enter
mov
mov
lahf
mov
cld
out
mov
dec
mov
xorb
cld
in
in
dec
dec
cli
lret
mov
dec
mov
es
int3
rcl
and
sbb
hlt
lock
in
adc
jb
insb
jno
outsb
lret
test
hlt
leave
xchg
mov
pop
push
pop
outsl
pop
rolb
add
xchg
inc
inc
rclb
mov
xor
roll
adc
mov
jno
push
pop
ja
pop
jl
jmp
ljmp
jg
ror
sbb
inc
fwait
sbbb
fdivrl
les
nop
adc
or
inc
icebp
dec
inc
pop
lock
leave
inc
jmp
push
fcompl
add
stos
xchg
mov
fsubr
dec
mov
in
ret
and
push
lcall
xchg
outsl
clc
xor
in
imul
cwtl
fcomps
les
cmp
enter
add
mov
lret
loopne
jp
dec
insb
xchg
in
scas
cwtl
mov
sbb
push
pop
cmp
cmp
cmpsl
ljmp
shl
jl
arpl
adc
hlt
jns
and
sub
arpl
mov
sti
in
lea
loopne
arpl
inc
mov
cmc
mov
pop
and
movsl
or
adc
inc
pop
outsb
lods
loope
mov
dec
jae
pop
aad
shll
lret
pop
or
lds
or
pop
dec
dec
out
mov
ss
inc
mov
mov
icebp
notb
mov
jg
ret
daa
and
les
dec
jb
loope
test
or
fdiv
popa
rolb
ficoms
jmp
cmpsb
inc
inc
fnsave
jp
mov
inc
test
inc
jnp
push
sarb
dec
mov
mov
jecxz
les
movsl
cmpsl
aaa
fs
je
xor
das
stos
mov
sbb
adc
fldl
and
xor
and
push
les
and
iret
arpl
jo
jo
mov
fstps
sbb
sbb
fiaddl
xchg
pop
adc
sahf
fldcw
xchg
enter
dec
mov
xchg
sbb
cli
ret
jbe
jecxz
fsubrl
or
pop
das
std
ja
in
jb
mov
push
cmp
push
cmp
mov
cmp
or
xor
lret
int3
and
mov
mov
enter
xchg
cwtl
popf
sbb
adc
inc
sbb
popf
sub
add
repnz
fcmove
cmpl
inc
inc
outsl
sbb
js
movsl
insb
push
iret
jmp
xorb
cmp
pushf
pop
jb
sub
jae
mov
in
mov
cmp
popf
sub
cmp
mov
aam
push
ljmp
mov
dec
rorb
fldcw
rorl
add
mov
mov
dec
sub
sti
dec
bound
in
es
out
aam
sbb
sti
xchg
adc
jno
mov
mov
cmp
sub
cld
and
adc
pop
mov
fwait
icebp
push
push
mov
lock
or
addr16
fs
push
jnp
sbb
sbb
inc
add
mov
fistpll
mov
fwait
out
into
xchg
xchg
in
push
cmc
xchg
sti
mov
stos
pop
jle
orl
aad
shl
nop
cmp
sub
inc
jmp
sti
sub
insl
insb
bound
iret
mov
adc
insb
jnp
pop
dec
and
gs
cmp
out
int3
ljmp
divl
mov
cmc
scas
add
test
lock
in
xchg
lahf
jge
dec
sahf
cmp
pop
lret
lea
dec
loop
lds
lods
mov
sbb
dec
xchg
inc
repz
and
dec
dec
mov
insl
into
scas
pop
jns
mov
loopne
push
arpl
dec
inc
mov
xchg
mull
clc
sbb
or
imul
aam
leave
mov
lods
mov
dec
and
int
jecxz
push
fwait
out
xor
sub
dec
pop
dec
dec
and
jne
lods
aad
mov
and
das
fistl
jle
shrl
clc
decb
xor
dec
imul
fs
jb
cmpsl
dec
jl
cmc
or
xchg
divl
imul
sahf
mov
ja
in
sbb
jo
jle
js
loope
sbb
cld
jbe
mov
lcall
rorb
mov
call
dec
mov
mov
push
fidivrl
jno
xor
and
push
push
mov
dec
push
sbb
in
pop
lods
ffree
mov
sub
adc
in
xchg
pop
xor
adc
imul
jne
pop
movsb
popf
adc
mov
test
sahf
push
ljmp
ja
ror
pop
push
arpl
nop
mov
adc
push
xchg
xor
popf
aam
xor
loopne
xchg
das
fcmovu
dec
sub
xchg
es
and
xrelease
pop
push
add
adc
test
push
leave
push
out
int3
mov
xchg
cld
inc
mov
adc
cmp
mov
outsl
cmp
stc
call
push
imul
adc
jge
and
sbbb
icebp
aas
adcb
repz
cmpl
jmp
add
inc
je
mov
aad
psubusb
mov
adc
ficompl
call
sub
int
or
movsl
add
fs
mov
stos
mov
jecxz
pop
cli
cmpsl
mov
push
and
cmpsl
je
jmp
xchg
movsl
add
fs
in
imul
xor
and
cmc
out
aaa
dec
rcrb
mul
mov
fsts
cs
aaa
outsb
adcb
mov
inc
call
scas
push
sbb
cmp
lds
fistpl
xorb
add
test
lods
stos
cmp
int
loop
dec
into
xchg
mov
sbb
inc
mov
mov
mov
sti
jle
cs
jge
cmp
pop
shll
jge
inc
mov
test
bound
inc
ljmp
xchg
cmp
add
push
shll
mov
cmp
inc
fwait
inc
xchg
out
ja
xchg
mov
jne
das
in
mov
les
imul
xor
jecxz
je
sbb
mov
rolb
insb
xchg
pop
mov
pop
jo
out
xchg
fstps
pushf
inc
mov
es
push
ret
add
push
sysenter
sub
movsl
cmp
dec
cmpsl
fs
jbe
adc
test
or
push
add
cmp
and
les
insl
cmp
jne
pop
fwait
dec
outsl
jns
push
push
inc
dec
ror
clc
into
out
jp
mov
rclb
daa
lret
jae
sbb
inc
lods
fldl
pushf
xchg
inc
xchg
pop
scas
xor
push
inc
jne
movsb
and
aam
inc
mov
cmpb
jecxz
icebp
xchg
rcl
sub
jo
sahf
mov
in
cmc
mov
lock
dec
pop
jb
out
in
scas
mov
inc
mov
xchg
mov
int3
aam
out
or
lds
pusha
out
jle
pop
fmulp
sub
or
sti
sbb
push
popa
aaa
stos
push
pop
movsb
test
mov
lret
jb
adc
mov
loope
inc
jge
test
pop
cs
call
dec
jnp
mov
add
or
sub
repz
pushl
imull
sub
hlt
loop,pt
mov
movsb
push
lea
mov
sub
mov
mov
cmp
outsb
ror
xchg
mov
xchg
mov
mov
sub
test
gs
rorl
dec
icebp
jae
nop
pop
jle
xchg
je
iret
pusha
dec
pop
pop
in
movsl
inc
xor
sub
mov
and
hlt
sbb
fidivs
dec
adc
lock
mov
aas
outsb
or
test
popa
push
jl
mov
ljmp
jl
mov
fsubrs
mov
add
scas
lret
inc
aas
pop
push
call
das
mov
adc
mov
push
orb
mov
lds
adc
add
mov
mulb
mov
lods
mov
jb
into
in
jo
adc
sbb
fldt
adc
xor
adc
pop
xchg
outsl
inc
and
push
or
mov
das
jne
sub
scas
icebp
jp
xchg
sub
ljmp
pop
pop
xchg
iret
xchg
cmpsl
mov
das
incl
inc
xchg
inc
fisttpll
and
dec
aam
jp
iret
cltd
ficoms
push
sbbl
nop
cmp
mov
xchg
inc
add
insl
fdiv
mov
ljmp
mov
in
cmp
adc
xchg
cmpl
cmpsl
in
cmp
pop
push
xchg
pusha
push
sbb
cmc
jbe
inc
imul
add
jo
cld
jp
outsl
or
imul
outsl
xlat
push
push
lods
aad
dec
into
adc
inc
fldl
aad
or
daa
sub
jno
insl
mov
xchg
sub
mov
xor
push
ficomps
jb
iret
ficoms
xlat
andl
jb
pusha
and
mov
ficoms
out
adc
sbb
test
pop
aam
mov
inc
bound
mov
addl
cld
repnz
xchg
mov
mov
push
xlat
flds
in
div
pop
aas
outsb
and
lret
mov
add
push
ljmp
repnz
fistpll
dec
addr16
aaa
popf
hlt
jmp
inc
iret
and
inc
mov
jno
cmp
lret
cld
adc
leave
dec
mov
mov
and
leave
cmp
and
inc
add
add
mov
cs
in
rcrl
xchg
mov
push
cmp
xchg
jmp
in
or
aad
or
sbb
scas
into
cli
xchg
or
notl
push
inc
cmp
imul
cwtl
dec
mov
test
lret
push
sub
std
dec
enter
movsl
pop
xchg
mov
pop
inc
xchg
mov
push
xchg
call
xchg
out
push
push
sub
es
lods
rolb
mov
dec
mov
in
add
sub
cmp
mov
aad
cmpsl
cmp
lds
inc
jnp
add
in
ss
lods
adc
sbb
lcall
xchg
movsl
cmc
mov
outsb
mov
test
aas
popf
bound
call
pop
je
std
sub
adc
dec
test
imul
and
and
sarb
jge
bound
mov
pop
out
fstps
insb
sub
sti
popa
cmovo
jb
inc
mov
movsl
cmc
mov
lea
dec
insb
lcall
js
cmpsl
movsl
jmp
cmp
jno
or
rol
add
push
ret
xchg
push
mov
imul
jnp
pop
cmpb
or
xor
in
mov
std
cltd
aaa
scas
test
cmp
inc
inc
jp
insl
test
jno
es
aaa
xor
or
or
loopne
inc
dec
cli
jae
sub
or
outsb
fsubr
or
pusha
inc
adc
xor
cmp
and
pushf
and
dec
mov
jle
push
enter
gs
insl
rolb
in
pop
xor
jae
test
frstor
incb
xchg
test
and
das
fs
int3
pop
xchg
push
and
add
fwait
cmpsl
inc
mull
and
int
dec
inc
fs
and
bound
out
fisttpll
mov
push
data16
lcall
pop
aaa
test
mov
jmp
loope
movsb
shl
ret
sbb
jb
cmp
popa
and
pop
stc
mov
jle
movsb
in
ss
arpl
cmp
xchg
movsl
pop
dec
fwait
adc
or
stos
pop
popa
stos
push
dec
jecxz
cmp
and
and
xor
pop
std
inc
lods
xor
rol
mov
pop
adc
fidivl
cs
pop
sub
pop
js
lret
andb
pushaw
sarb
les
sub
rcrb
or
shrb
sub
adc
mov
pop
sub
imul
or
mov
cmpl
mov
xor
aaa
sub
sub
jno
iret
leave
jne
ja
mov
fstpl
xchg
in
mov
test
cmpsl
and
xor
add
cmp
addr16
push
bound
sbb
add
cli
imul
aaa
test
rcrb
mov
inc
and
das
call
inc
lret
call
mov
in
aam
or
loopne
lds
xor
adc
jae
sub
pushf
cmpl
mov
jnp
icebp
cmpl
sbb
sub
dec
repnz
lret
movsl
adc
sub
adc
mov
movsb
mov
into
popa
sub
mov
dec
ret
jle
mov
pop
daa
imul
les
or
jo
pop
xlat
movsb
pop
adc
pop
adc
jne
xchg
stos
pop
dec
cmp
mov
push
fldt
and
sbb
fcoml
in
mov
incb
pop
stc
push
lock
pop
push
cs
jg
inc
std
gs
repnz
sub
in
cld
cwtl
lods
and
xlat
push
mov
testb
push
xchg
mov
mov
in
cmc
ja
and
pushf
xor
ss
jb
outsl
pop
ds
pop
sub
popa
inc
and
adc
sbb
lret
addr16
cmp
add
cmpsl
sub
jbe
sahf
add
cmp
adc
pop
sub
std
cmpsl
push
test
fcomi
jle
out
mov
adc
dec
iret
push
jno
xchg
xlat
imul
jle
push
pop
inc
out
push
cmp
popa
xchg
popa
arpl
leave
and
mov
sbb
les
adc
out
repz
pop
aaa
push
pop
jmp
test
sti
fucom
int3
inc
jmp
ss
and
cmp
sub
mov
jne
mov
testb
and
sub
dec
je
fwait
andl
and
mov
out
stos
cmc
pop
lcall
sbb
push
pusha
mov
inc
inc
add
int3
mov
and
pop
mov
or
cmpsb
xor
jle
cmp
add
addr16
push
mov
cmp
in
fbld
clc
pop
lds
leave
push
cmp
cmp
add
loop
push
add
jb
push
sub
add
mov
lret
cmc
ljmp
jp
and
dec
mov
push
inc
lahf
and
sbb
pop
mov
dec
xchg
dec
mov
imulb
js
aas
jmp
sbb
add
cmp
std
mov
testb
mov
ret
int3
mov
adc
push
gs
sub
xchg
jno
test
dec
xlat
add
in
mov
and
jle
cmpsb
repz
push
dec
cmp
daa
addr16
xchg
inc
out
cmp
aas
push
sbb
add
leave
imul
ljmp
and
sbb
xchg
pop
add
inc
pop
adc
testb
js
and
insb
pop
xor
xchg
cmpsb
pop
ds
jb
repz
rol
mov
hlt
and
sub
mov
mov
jb
sub
cmc
sub
cmpsb
out
lods
mov
jle
push
test
pop
sbb
pop
push
pop
fisubs
inc
pop
push
bound
adcl
mov
mov
pop
jno
rcll
ret
mov
in
in
xor
es
icebp
mov
fwait
jp
addb
adc
out
dec
or
inc
mov
adc
fldenv
cmp
mov
mov
xchg
lret
xor
mov
mov
ss
mov
xchg
in
pop
aam
add
inc
stos
xchg
scas
dec
xchg
inc
push
xchg
dec
push
push
lcall
cmp
scas
add
pop
pop
cmp
sub
call
ret
sbb
xor
pop
xchg
cmp
fisttpll
insl
enter
and
push
dec
pop
push
inc
inc
jecxz
add
fisubs
push
ljmp
jle
sub
insb
iret
int
lahf
insl
and
push
out
xor
call
lods
xchg
add
ds
mov
jecxz
ret
and
das
bound
out
test
lods
outsb
jmp
fsubrl
fistl
push
lods
mov
inc
cmpsb
sbb
mov
sti
cmp
xorl
inc
shlb
mov
dec
mov
stos
and
and
adc
aaa
out
jb
add
add
imul
mov
test
inc
repz
dec
orb
shlb
cmp
mov
jno
add
aam
jnp
out
fdivl
lret
jo
mov
dec
pop
lret
lock
nop
ja
jo
xlat
inc
cmp
mov
rcl
mov
loopne
push
and
ja
cmpl
push
xchg
dec
dec
mov
in
lea
daa
and
sbb
sti
mov
cs
call
imul
xor
push
inc
push
stc
push
sbb
cmp
dec
stc
or
pop
arpl
imul
sahf
faddl
repnz
jnp
cltd
imul
or
ds
mov
cmpsb
mov
loop
dec
jp
outsb
ret
aaa
mov
and
and
jbe
fildll
leave
push
inc
loopne
inc
push
mov
pop
inc
aaa
ja
out
loope
dec
fwait
mov
adc
fildl
fists
loop
fsubs
mov
data16
shr
shll
dec
ja
mov
lods
adc
pushf
sbb
sub
push
push
movsl
fs
adc
lcall
mull
push
mov
movsl
inc
pushf
ds
rcrl
mov
dec
xor
sub
clc
or
xchg
push
push
daa
loopne
sub
aaa
jno
icebp
arpl
pop
sub
pop
hlt
pop
push
daa
fsubrl
cmc
inc
addr16
xchg
cmp
add
xchg
insb
cmp
js
imul
ret
jnp
sub
sub
and
mov
in
sbbb
divb
scas
and
xchg
lret
stos
test
in
or
pop
lcall
shlb
adc
xchg
sub
nop
mov
cli
jle
clc
mov
adc
pop
dec
rol
stos
cmp
push
aad
jb
push
ljmp
push
mov
in
pop
pop
cmp
in
mov
stc
cltd
mov
ret
stc
repnz
into
jmp
rol
push
mov
xchg
mov
xor
mov
jns
ret
ds
cmpsl
push
cs
mov
ljmp
pop
sub
xor
pushf
lahf
jo
mov
dec
in
mov
or
movsl
pusha
aas
dec
loope
inc
je
stc
sub
adc
mov
fwait
xchg
fimuls
dec
xor
into
and
in
insl
ljmp
mov
mov
inc
insl
and
push
sbb
daa
adc
test
call
int3
call
push
push
stos
inc
mov
mov
push
ficomps
sbbl
mov
sub
std
sub
mov
daa
and
mov
popa
sub
jb
adc
inc
stc
and
jno
nop
or
or
mov
dec
or
loopne
xchg
fwait
mov
jl
jmp
lds
rorl
loope
or
cmpsb
adc
cwtl
fdivl
out
xchg
out
cmp
mov
out
outsb
or
leave
fs
adc
jbe
gs
dec
fcoml
movsl
sub
xor
frstor
pop
ret
jb
add
rol
imul
test
rclb
cltd
xor
fs
aaa
cmp
mov
and
inc
pop
iret
xor
idivl
std
xor
stos
lret
mov
or
push
xchg
adc
jmp
int
lahf
popa
lret
mov
xchg
xor
insl
adc
fisubl
mov
sbbl
xlat
vucomiss
pop
jb
and
mov
sub
ja
push
dec
gs
arpl
cld
pop
sub
or
xchg
imulb
cmp
rcrl
fnstenv
sbb
pop
ficompl
mov
repnz
fidivl
scas
sub
dec
pop
jo
pop
xchg
outsb
xchg
cmp
test
into
lods
push
lret
aaa
push
ds
icebp
and
add
inc
and
movsl
shrl
int
test
jge
jnp
out
in
jno
mov
pop
cmpl
aam
sub
fstpt
mov
push
mov
sahf
dec
andl
movsb
mov
out
xor
ret
cmp
and
data16
mov
shrb
test
imulb
nop
pop
testb
push
stos
scas
jmp
cmp
xchg
sahf
cmp
or
call
scas
sbb
pop
mov
ja
not
mov
add
das
loop
jmp
cld
js
lahf
stos
inc
sub
push
cmp
aam
pop
pop
retw
sbb
jp
pop
leave
push
rorl
sbb
mov
fcomps
fcoml
stos
dec
sbb
xor
int
movsl
fstl
xchg
fisubs
movsb
hlt
popf
or
mov
jmp
sub
aad
cmp
push
fwait
mov
jno,pn
fdivs
jnp
inc
cs
arpl
adc
jge
push
mov
or
xchg
in
jo
popf
pushf
in
addr16
sub
jp
jg
jns
movsl
test
sbb
xchg
aam
rorb
nop
add
repz
push
mov
lea
mov
push
mov
lods
insl
cmp
ja
cmp
stos
mov
pop
sub
lret
insl
mov
jo
jge
and
orl
cli
xor
std
test
push
mov
push
jbe
daa
and
lods
sbb
test
fucomp
ret
pop
sbb
add
cmp
cld
inc
out
les
xchg
push
inc
nop
scas
cmp
dec
add
pop
das
mov
fldenv
xadd
scas
das
mov
sub
subb
ja
sbb
addl
daa
xchg
push
dec
gs
jbe
sbb
mov
push
in
testb
rcr
stc
andl
or
mov
rcrl
aad
loope
mov
cld
xchg
inc
enter
nop
hlt
jns
cwtl
mov
jb
push
mov
push
insl
cmp
rcll
aam
sub
and
std
paddb
gs
imul
insl
or
sub
lods
cli
add
jno
or
xchg
imul
mov
add
sub
cs
fcomps
fistpll
jmp
add
dec
xchg
xchg
sub
in
stc
or
and
ja
mulb
pop
pop
in
mov
sub
mov
xchg
scas
sub
arpl
fs
movsb
andb
in
clc
aad
sar
frstor
sub
dec
jl
mov
jle
ficoms
inc
xlat
clc
gs
lret
or
mov
pop
mov
and
jae
mov
daa
imul
stos
out
or
out
inc
test
sbb
daa
sub
xchg
das
cli
xor
call
nop
or
imul
jbe
jg
js
mov
testl
popa
out
icebp
sbb
xchg
leave
cmp
cmp
test
sub
dec
add
cltd
sub
xor
enter
gs
xor
fldcw
cmp
inc
icebp
sarl
lret
les
stos
or
sbb
nop
cltd
aaa
in
pop
pop
mov
fnstenv
mov
cmpsb
inc
jbe
or
stos
push
ds
pop
das
xchg
mov
mov
loop
in
aad
pusha
popa
and
ffreep
iret
jl
push
mov
or
loop
or
mov
inc
adc
push
add
repz
inc
jge
lahf
mov
sahf
cmp
push
push
inc
pop
jae
cwtl
call
call
add
adc
lahf
pop
dec
mov
cmp
sub
in
aas
std
dec
pushf
inc
rorl
les
push
jecxz
mov
push
clc
ficoms
xchg
fimuls
adc
pop
jl
xor
cmp
fstl
pop
shll
mov
orb
mov
aam
lods
pushf
lret
dec
cld
out
push
js
xor
mov
ds
repz
sub
gs
mov
mov
js
loopne
add
and
into
inc
shlb
pop
cmpl
out
dec
jne
dec
and
out
lret
dec
mov
add
or
call
lret
mov
jmp
sub
movsl
cmp
insb
mov
xlat
arpl
mov
xor
sahf
mov
ss
mov
sub
cmp
adc
shll
jg
fildll
mov
mov
aas
push
fisubs
cmp
mov
jmp
in
mov
movsl
repz
mov
and
dec
test
mov
pop
jno
aaa
dec
inc
aad
jmp
add
into
push
jmp
dec
xor
add
cmp
int3
jae
jae
int
xor
call
leave
pop
arpl
imul
loopne
aas
call
pop
add
dec
roll
ret
cmp
sbb
push
scas
sbb
push
dec
cli
mov
dec
push
or
xchg
push
es
mov
mov
mov
into
inc
rcrb
dec
std
sub
push
mov
push
mov
les
push
add
sbbl
ja
fildl
push
add
pop
push
lret
push
adc
imul
push
mov
adc
sub
into
outsb
inc
scas
scas
fistps
push
aas
jmp
xchg
cmc
aad
repz
or
push
mov
lods
sub
outsl
xor
dec
lahf
cmpb
and
outsl
push
xchg
xchg
jb
loop
addr16
xor
in
outsb
add
push
pusha
cmp
sub
mov
daa
pop
jp
fwait
decl
pop
pusha
popf
loop
rcr
sarb
cmp
add
mov
insb
decl
mov
loop
xor
lcall
enter
jne
cltd
mov
in
js
inc
jbe
mov
inc
mov
stos
mov
loopne
push
sbb
inc
xchg
rorb
mov
dec
jp
les
outsl
daa
lcall
add
inc
outsl
arpl
cmp
sbb
inc
fwait
mov
insb
and
lret
add
lss
and
les
mov
es
mov
xor
xor
pop
gs
lret
jo
je
rclb
adc
cltd
or
test
outsb
adc
inc
int
lahf
popf
imul
stos
movsl
mov
sub
addr16
int3
int3
lret
out
adcb
push
popf
pop
push
inc
dec
xchg
adc
icebp
fsubp
rorb
in
dec
enter
scas
scas
rcll
dec
pop
cmc
jge
stos
jmp
arpl
pop
jg
pop
adc
sti
sbb
cmp
xchg
ds
xor
push
int3
cmp
add
pop
out
out
outsl
movsl
push
cmpsl
hlt
fmul
dec
into
out
scas
mov
fwait
dec
ljmp
movsb
cmp
adc
sub
int
inc
cmp
fisubl
xor
adc
mov
loop
inc
cmp
popa
mov
idivb
inc
or
xlat
mov
push
inc
ficoms
mov
sbb
ret
lods
mov
mov
outsl
pop
loop
lret
daa
in
jae
mov
xchg
das
fwait
pop
test
xchg
add
scas
lcall
in
xchg
imulb
add
aas
mov
or
cmpsl
jne
cmp
pushf
dec
adc
mov
divb
mov
cmp
xorb
jb
pop
push
ret
xchg
lahf
aad
sbb
js
dec
xchg
and
rclb
lods
int
push
jae
adc
orl
orb
ret
nop
jmp
dec
test
faddl
mov
push
add
mov
or
xchg
fcmove
add
fnsave
and
bound
fisttps
xchg
mov
stc
ds
idivl
mov
xchg
cltd
lods
mov
adc
pop
loope
mov
bound
cmp
sti
or
jp
mov
xor
mov
push
mov
dec
xor
mov
jno
xchg
cmp
sub
sbb
sub
les
loopne
cmpsb
xchg
and
aas
gs
daa
fisubrl
mov
out
enter
les
nop
push
dec
lea
scas
das
nop
pop
test
psrlw
xlat
push
ja
push
xchg
ja
lock
clc
push
sbb
add
pop
fidivrs
data16
es
out
or
fdivrs
jo
lock
inc
push
gs
jmp
addr16
jno
adc
push
js
aam
cmpsb
je
lds
js
jae
scas
mov
pop
lock
bound
or
and
xor
jnp
in
es
dec
stos
js
dec
mov
loope
lret
inc
out
jae
loopne
lcall
leave
push
shl
pop
push
sub
sub
call
dec
pop
or
cwtl
rorb
and
jge
in
and
mov
test
fdivr
cmpsl
loope
cmp
xor
adc
adc
adc
clc
out
adc
push
in
fisubl
je
sub
aas
ret
mov
sub
in
sub
jae
xchg
imul
test
pop
or
add
int3
adc
sub
cmp
push
pusha
dec
sbb
inc
xor
xor
mov
fstp
xor
nop
and
fwait
mov
hlt
jnp
test
mov
xlat
ds
icebp
mov
or
xchg
in
ficoms
pop
mov
leave
test
adc
push
sbb
push
push
out
lret
das
adc
in
fwait
scas
dec
idiv
mov
hlt
mov
movsl
int
pop
or
imul
xchg
jle
jge
pop
mov
adc
xchg
sub
fistps
sbb
pushf
aas
inc
push
pop
jno
mov
aad
cmp
dec
adcl
stos
icebp
repnz
xor
jmp
lds
xchg
cmp
cmpsl
leave
push
leave
les
imul
xchg
mov
jge
cs
push
repz
mov
mov
xchg
push
lods
lock
or
inc
lret
xchg
xor
ss
orl
in
int3
arpl
or
push
pop
push
bound
push
aas
cli
or
and
lahf
sbbl
sti
mov
les
cmp
cmp
and
push
lds
lahf
nop
cmc
outsl
js
add
and
pop
icebp
mov
mov
cmp
into
int
gs
inc
and
mov
inc
jl
or
int
push
pop
in
or
daa
das
cmpsl
in
adc
notl
pop
inc
cmp
fldl2t
cwtl
int3
push
mov
and
and
xchg
and
icebp
in
xor
popa
stos
shl
ljmp
xor
jbe
inc
cmp
mov
lret
xchg
cld
fidivl
inc
mov
xchg
sbb
and
fnstsw
xlat
jae
out
test
xchg
mov
add
mov
into
cmp
frstor
insl
movsb
inc
inc
bound
mov
cmp
ret
insb
enter
jb
xchg
in
fldcw
mov
xchg
std
std
jnp
into
sub
icebp
into
imul
mov
jl
es
cld
mov
mov
test
ret
sub
dec
or
mov
xor
and
xchg
mov
test
push
cld
in
jae
add
adc
aas
dec
pushf
leave
jmp
test
and
push
mov
push
fbld
adc
jl
ja
pop
sti
cmp
insb
jbe
xchg
addr16
orl
adc
mov
scas
pop
inc
lcall
aaa
inc
adc
jo
add
andb
mov
ljmp
out
fisubrs
mov
sbb
sbb
adc
push
popf
mov
call
jg
cmpsb
mov
sub
shr
pop
sub
int
cmp
push
mov
sbb
lret
subl
dec
lock
mov
sbb
jmp
sub
lcall
outsb
adc
cmpsl
sub
pushf
testb
push
jle
push
in
pop
push
xchg
stos
leave
push
popa
scas
fcomps
scas
daa
push
mov
in
stos
mov
inc
jle
mov
repz
sub
test
scas
daa
dec
xor
push
pop
addb
adc
addps
pop
xchg
pop
jno
xchg
inc
pop
cmp
dec
xor
gs
lds
lods
stc
cmc
or
das
adc
ficoms
add
add
xchg
push
mov
movsb
and
bound
push
jne
sub
and
mov
mov
cmp
jae
xlat
or
dec
xchg
pop
loopne
ljmp
insb
xchg
repnz
or
xchg
test
or
mov
test
shl
addl
jne
jb
jnp
fmul
mov
or
in
xor
insb
cmp
loop
es
add
ja
xchg
ja
push
mov
push
popa
cmp
jge
fs
sbb
insl
cli
push
subl
mov
adc
cli
popf
push
jl
insl
jp
pop
dec
iret
enter
dec
in
pop
pop
divl
fimuls
lcall
dec
and
xorb
jmp
jle
insb
and
xlat
mov
js
xor
cs
loop
lahf
aaa
push
mov
add
mov
aas
ds
cmp
lods
xor
lock
mov
sub
subb
and
mov
jno
sbb
repz
xor
mov
aad
rol
add
mov
fbstp
ljmp
fstl
lock
xor
cmc
test
and
sbb
or
mov
test
xchg
cs
outsl
push
fs
iret
fmuls
out
adc
jo
and
jne
out
mov
add
cli
jecxz
movsb
rcrl
mov
rcr
inc
cmpb
sub
sub
push
add
jae
inc
rorl
mov
fisubl
stos
or
sub
dec
js
aas
in
out
sub
stos
push
mov
lods
cmp
or
sub
mov
mov
lock
sti
insb
fsubrs
bound
out
mov
and
add
push
jg
fdivp
das
test
psrlw
mov
enter
sub
out
bound
xchg
js
sbb
pop
jp
loopne
lea
sub
jl
fs
rorl
cltd
cs
sub
fnstcw
mov
sub
sub
push
mov
sbb
sar
mov
or
cmpl
push
and
cmp
dec
fxch
das
sbb
push
sbb
dec
inc
or
aam
outsl
mov
jp
cltd
sbb
sbb
lahf
jb
push
loope
sbb
fdivrl
mov
xchg
pop
mov
lock
mov
inc
incb
pop
and
cmc
cli
data16
scas
insb
cmp
add
xchg
sbb
add
insb
push
cli
xchg
and
inc
push
int3
add
mov
call
adc
imul
push
es
stos
pop
push
ficomps
pop
sarl
adc
or
sahf
into
mov
cmp
cmp
insl
or
int
mov
sub
mov
mov
xchg
aas
mov
pop
lods
dec
mov
test
push
in
mov
cmp
push
mov
sub
sub
test
enter
cmp
push
xchg
js
mov
mov
cmp
pop
push
push
in
out
push
add
sub
fildl
lahf
clc
icebp
decb
adc
mov
jb
sub
adc
inc
inc
cmpsb
jmp
xchg
mov
mov
js
ret
push
xchg
and
pop
mov
mov
lahf
push
jg
inc
lods
xor
jp
xchg
xchg
mov
xchg
dec
in
add
andb
mov
or
sbb
adc
in
or
pop
stc
cmpsb
fwait
pop
daa
mov
clc
cs
push
or
pop
adc
rcl
ret
xchg
les
test
or
add
inc
test
sbb
cmp
sub
out
pop
addl
mov
call
mov
and
cwtl
add
push
push
mov
into
or
xchg
in
and
inc
pop
movsl
or
jo
push
xchg
fisttpll
xlat
adc
js
dec
xchg
jno
or
jne
jl
mov
and
xchg
pop
adc
sub
fstps
dec
inc
outsl
push
pop
mov
lods
or
mov
inc
xor
cmp
pop
inc
or
pop
mov
decb
pop
mov
pop
sub
jmp
xor
sbb
or
lret
jbe
pop
cmp
dec
sbb
fsubr
mov
dec
scas
mov
incb
les
je
cld
mov
mov
cmc
jle
sbbl
jg
shl
adc
movsl
xchg
movsb
add
lock
nop
xchg
je
ss
lock
out
sub
ljmp
and
add
lcall
adc
mov
inc
lds
jg
cmc
arpl
es
insl
pop
xor
je
mov
repz
jle
sub
push
fbld
xor
lea
ret
addr16
mov
pop
add
and
cli
scas
iret
ss
idivb
stc
idivl
and
inc
call
aam
mov
xchg
sub
xor
add
out
push
xchg
loope
adc
mov
movsb
pop
sub
adc
push
out
cmp
in
int3
xor
xchg
sbb
pop
out
mov
push
jnp
cli
lds
push
xchg
gs
mov
pop
jo
pop
jae
clc
lds
mov
or
movsl
adc
into
ss
xor
add
add
mov
call
sub
add
fcmove
mov
mov
rorl
inc
mov
mov
inc
mov
pop
in
pop
sbb
frstor
cwtl
sub
insl
pushf
push
popf
push
adc
sbb
jns
or
and
xlat
ret
arpl
stos
je
xlat
std
add
out
loop
int
das
mov
loopne
fsubs
movsb
jg
push
jo
push
out
inc
or
es
negb
pop
xstore-rng
cmpsl
xchg
mov
fwait
outsb
ret
clc
outsb
mov
loop
idivb
stos
dec
leave
xchg
sub
popa
shl
mov
std
dec
rclb
jb
push
mov
adc
jne
test
loopne
mov
sbb
push
lcall
iret
dec
add
popa
imul
dec
xchg
idivl
out
lcall
out
jns
ss
test
jb
aam
mov
cmp
inc
mov
daa
decl
je
sbb
pushf
dec
inc
jge
in
clc
imul
stos
lea
pushf
push
mov
andb
inc
push
shl
insl
sbb
js
fiaddl
scas
push
fcmovne
fwait
push
enter
push
pusha
cltd
loop
inc
pop
fldenv
pop
lahf
into
aam
add
fsubr
xor
xor
or
fstl
lock
cmp
mov
jl
pop
xchg
and
out
repnz
sbb
fdivrl
cli
dec
scas
loope
mov
jmp
cli
sbb
aaa
mov
dec
adc
xchg
out
fxch
lods
in
and
mov
mov
pop
cmp
pusha
and
dec
dec
xor
aaa
jl
and
loope
mov
mov
add
mov
int3
pop
stc
xor
rorb
xor
test
xor
out
mov
mov
dec
push
or
ljmp
pop
inc
orl
or
sbb
xchg
pop
xor
cmc
jle
mov
out
xchg
subb
divl
mov
sub
daa
xchg
or
fnstsw
shl
adc
mov
nop
add
sti
stos
scas
les
xlat
xchg
fs
add
fs
pushf
je
pop
push
daa
mov
scas
xchg
shll
push
outsl
jbe
insb
cmp
pop
cld
sub
les
jns
and
or
repnz
sbb
add
sub
push
and
lahf
push
push
loop
std
fs
call
fsub
jp
pop
jne
pop
mov
les
bound
pop
mov
mov
rcrl
bound
push
shll
shrl
jae
mov
iret
incb
out
jno
ficoms
sbb
and
test
xchg
push
rcr
inc
and
movsl
push
mov
push
cmpsb
stos
push
in
test
fcomip
push
daa
imul
sarl
loop
test
jbe
sub
mov
cmp
push
and
js
mov
mov
push
xchg
leave
jecxz
stc
inc
xor
jo
xor
das
ret
mov
aaa
imul
pop
iret
xlat
jmp
push
insl
sub
mov
and
mov
aaa
das
sbb
jo
cmp
fidivs
jp
int3
andb
jge
aad
dec
cmp
and
ds
mov
ja
addr16
pushf
inc
movsb
mov
mov
inc
loop
sub
adc
sub
mov
push
xchg
pushf
sbb
insl
jecxz
fwait
mov
sbb
bound
ret
and
cmp
cltd
push
jo
xlat
ds
mov
add
ficoml
add
icebp
push
xor
pop
ja
rorl
cld
mov
jl
stc
int3
je
stos
jae
fidivl
stos
and
xchg
mov
scas
mov
mov
lret
xchg
xlat
mov
popf
push
fisttps
jmp
or
shll
cwtl
out
sahf
dec
cli
lds
cltd
push
iret
mov
mov
subb
mov
imul
inc
sub
dec
out
pop
mov
sbb
aaa
mov
cld
imul
dec
stc
inc
icebp
and
sub
and
jnp
and
andl
inc
pushf
sahf
les
push
test
jp
and
in
jle
das
cmpsb
cs
jle
sbb
adc
and
imul
sbb
ja
sbb
dec
pop
mov
add
out
xor
pop
popa
mov
repnz
push
mov
fisubrs
pop
inc
add
push
cmp
push
jmp
pop
xor
ljmp
add
cmp
mov
ljmp
or
sub
mov
add
outsl
nop
or
add
test
rcll
repz
cmpsl
repnz
es
push
loop
lods
shlb
cmpsl
enter
inc
xor
test
movsb
cwtl
leave
jnp
mov
inc
xchg
mov
out
cmc
ljmp
roll
adc
xchg
mov
outsb
push
out
xchg
std
adcb
mov
xor
popa
outsb
inc
jp
push
jg
mov
mov
and
cmp
shll
mov
das
outsl
mov
fdiv
xchg
ret
and
out
jno
out
ja
push
out
lea
ja
in
popf
sub
adc
popa
pop
scas
and
mov
dec
jecxz
sub
fiaddl
push
jecxz
notb
int
shll
sbb
leave
mov
xchg
dec
jp
leave
or
pop
pop
add
adc
in
aad
mov
dec
fsubr
mov
das
adc
test
xlat
negl
out
gs
or
push
push
and
movsb
xchg
sub
mov
pop
insl
dec
dec
lahf
lods
or
jnp
pop
xchg
in
sbb
xchg
pop
int3
cmpb
xor
jnp
daa
not
sbb
push
fistpl
stc
jecxz
insl
jne
jno
mov
std
mov
mov
push
xor
stc
ret
push
arpl
cmc
stc
add
add
mov
insb
ja
or
int3
inc
stos
dec
mov
xchg
jns
cmpsl
decl
push
sub
sti
popa
mov
pushf
insl
bound
arpl
insb
leave
jnp
mov
and
fists
mov
xchg
int3
scas
xor
mov
and
addr16
aam
mov
mov
stos
mov
and
xchg
add
dec
adc
adc
lret
sub
or
sub
xor
push
inc
push
scas
ja
rcrb
loope
lods
stos
jne
ss
mov
jle
add
xchg
mov
daa
mov
jge
dec
xor
addr16
push
cmp
jne
pop
cltd
imull
pusha
mov
int3
out
mov
das
in
jp
sbb
cmp
aas
jbe
leave
xchg
insl
out
sahf
mov
xchg
xor
bound
fisttps
fdivp
inc
cwtl
popa
dec
addr16
push
insb
loope
and
lock
daa
out
add
cmp
into
popf
negl
dec
lock
cli
xchg
adc
loopne
xor
and
aas
pusha
sahf
inc
push
cmpsl
ss
insb
es
fldl
xchg
jge
push
dec
or
mov
cltd
icebp
jge
aaa
in
shrl
and
ljmp
insb
sub
dec
inc
pop
inc
scas
lods
jo
cmp
inc
in
xor
xor
mov
imul
or
stc
pop
add
into
sarb
jecxz
and
mov
fstps
sbb
mov
lock
int
data16
insb
pop
ret
scas
idivb
loop
mov
aaa
or
shrb
rclb
dec
mov
push
jnp
jmp
mov
incl
fsubl
mov
call
sti
mov
fimuls
movl
lock
xor
mov
jecxz
inc
sbb
cmp
xchg
arpl
xlat
mov
or
cmp
adc
daa
push
mov
or
rcll
es
std
sahf
jno
aas
and
jecxz
jmp
jbe
adc
or
faddl
cmpsb
push
lds
sub
mov
mov
xor
ljmp
or
mov
jg
pmuludq
pop
and
pushl
xchg
out
push
into
inc
push
sti
lock
xlat
pop
lret
push
lcall
cmp
cmp
cld
sub
sbb
int
ss
into
adc
jl
loope
ja
cli
sti
push
in
lret
inc
push
push
dec
push
cltd
or
stos
test
jnp
adc
jo
jmp
jo
cmc
xchg
mov
lds
or
leave
inc
aas
add
outsb
insb
popa
rcrl
outsb
add
jo
mov
xchg
inc
xchg
jbe
loope
adc
fs
xchg
rsqrtps
jno
das
ss
imul
add
adc
test
cwtl
jp
push
and
fdivp
fs
xor
dec
gs
aad
addl
pushf
push
cmp
xchg
xchg
mov
pop
imul
repnz
enter
mov
test
adc
mov
jle
jp
out
loope
pop
pushf
or
or
cltd
mov
cmp
ljmp
imul
push
data16
and
test
jg
imul
lods
mov
scas
cmp
mov
fstpt
mov
mov
dec
mov
ds
movsb
inc
and
xor
lods
xchg
test
mov
rcrb
aad
cmp
shrl
je
push
jb
sbb
sarl
fwait
mov
lock
adc
pop
cmp
or
dec
fdivrl
push
dec
or
fwait
mov
and
sub
pop
mov
lcall
pop
push
clc
lods
stos
push
mov
int
sub
xchg
stos
dec
in
or
into
jle
fs
movsl
adc
cmp
std
gs
sub
lds
sbb
dec
es
pop
push
or
pop
orl
aas
or
xchg
pop
dec
test
jmp
rcrb
push
cli
and
in
sahf
xchg
outsb
mov
aad
dec
ficoml
mov
pop
aas
test
sbb
cmp
cmp
mov
dec
xchg
inc
mov
sub
mov
cmp
add
rclb
aaa
inc
xor
insl
es
pop
lock
daa
adc
jnp
out
ss
bound
push
pop
rcr
dec
test
cmp
and
lock
ljmp
jno
lock
or
mov
lock
movsl
xchg
sub
inc
cmpsl
mov
ja
sub
arpl
sarl
adc
mov
jbe
sub
arpl
int
xchg
sub
bnd
out
repz
fwait
in
cmpsl
sub
mov
push
mov
dec
or
inc
adc
adc
jbe
push
and
or
fsubl
xchg
aaa
fxch
jle
movsl
add
in
sub
pop
aas
pop
repnz
fstpt
or
int3
sbb
dec
fiadds
leave
ret
daa
call
inc
aam
pushf
push
daa
popa
add
lds
addr16
cs
rolb
and
or
fsubrl
adc
outsb
idivl
icebp
push
sbb
jns
lret
in
xor
shrb
jle
sbb
push
or
mov
iret
js
cs
sub
cmp
inc
pop
mov
mov
pop
xchg
fwait
pushf
sub
mov
ficoms
push
and
mov
cmp
adcl
loope
in
in
mov
sti
aaa
mov
lret
addb
pop
mov
hlt
jmp
inc
insl
adc
cmp
push
dec
cmpsl
out
mov
or
mov
xchg
shlb
push
out
test
xchg
mov
add
sbb
pop
in
pushf
jg
aaa
dec
mov
jns
push
fcomps
push
cmpsb
mov
fisubrs
lret
push
pop
jg
repnz
gs
mov
stos
insl
cmpsb
pushf
je
mov
je
and
inc
neg
push
push
or
dec
sub
mov
gs
jle
inc
mov
adc
roll
inc
icebp
dec
lar
sti
test
sub
inc
mov
mov
movsb
mov
sub
sub
sub
and
leave
fwait
stos
jnp
cmc
mov
cs
push
lcall
sub
push
pushf
enter
scas
jbe
push
and
pop
rcl
rcr
mov
das
xchg
push
aad
inc
mov
cmpsl
add
mov
or
inc
add
ds
xor
orl
cmp
scas
lods
xchg
cmpsb
mov
sbb
jne
popa
xor
lea
push
mov
adc
jg
pop
mov
xor
xor
mov
aas
stos
lahf
xchg
and
adc
dec
sub
dec
out
xor
push
das
insb
cmp
pop
adc
adc
lea
add
sub
and
fstpt
push
push
aam
jae
mov
mov
jae
sbb
hlt
in
fcom
cmc
dec
push
xchg
testl
adc
lds
lahf
adc
mov
nop
mov
adc
cli
inc
mov
and
out
pushf
jnp
pop
push
inc
xor
arpl
mov
or
cmpsl
xor
xchg
cwtl
sarb
push
aas
pushl
hlt
add
insb
icebp
ret
fmull
loope
ds
inc
gs
fldenv
fmuls
adc
xor
ret
into
popl
out
sti
rolb
negl
sbb
dec
es
int3
lret
fs
and
cmp
dec
push
daa
and
jp
ljmp
push
fstl
loopne
or
and
dec
leave
xchg
shll
lods
mov
out
inc
xor
xor
les
adcl
pop
loop
mov
and
mov
sbb
mov
orb
jnp
xchg
cmpsl
in
mov
adc
std
ja
mov
or
push
push
or
mov
xor
ret
xchg
and
cmp
movsb
mov
cld
loope
or
outsl
mov
xor
loopne
ret
dec
aam
paddw
mov
xor
xchg
call
pop
jo
into
xchg
or
jnp
cmp
and
xor
movsl
faddl
out
sub
notl
mov
pop
mov
ja
mov
xlat
scas
and
mov
nop
mov
shrb
cli
xor
dec
enter
fmulp
lods
fistpl
pop
pop
cmp
cmp
stos
repnz
repz
ficoml
pop
repnz
fcompl
jg
cmp
out
dec
push
xchg
dec
cmp
lret
sub
mov
in
inc
adc
jbe
cmp
pop
dec
ss
xchg
sbb
push
xor
insl
dec
dec
fnstcw
jbe
pop
xchg
xor
pop
mov
jb
aam
inc
rolb
sbb
and
test
cli
xor
mov
call
inc
testl
and
test
mov
jg
mov
cmp
sub
adc
repz
lock
cmc
andb
push
cmp
jmp
pop
mov
fcmovbe
jge
cmp
pop
out
jp
movsb
mov
mov
cmp
daa
mov
dec
sub
and
mov
push
test
pop
jl
mov
cs
imul
jge
sub
jl
mov
sbb
in
jle
push
movsl
push
push
cld
jecxz
jbe
add
sub
mov
sahf
inc
pop
fisttpl
or
addr16
dec
ret
push
popf
sarl
scas
dec
sbb
pusha
pop
xor
icebp
enter
xchg
mov
sahf
or
ja
lds
cmp
pushf
in
xchg
in
pinsrw
out
dec
fwait
ret
dec
mov
arpl
push
jae
rcrl
add
rclb
cmp
mov
xchg
out
mov
jnp
scas
mov
lss
xor
sub
dec
mov
insb
popa
inc
lock
pop
fstpl
repz
shlb
cmp
lea
jmp
repnz
sub
adc
mov
lahf
mov
cmc
cmpsb
ret
das
jnp
xchg
hlt
add
icebp
mov
jle
adc
lea
rorb
inc
pop
cmpsb
jp
adc
pop
pop
push
adc
pop
jmp
shll
in
scas
add
insb
inc
add
jge
cld
inc
cltd
xlat
cmp
enter
mov
jle
jbe
pushf
std
inc
das
sbb
mov
das
mov
cmp
sub
loopne
movsl
mov
push
gs
push
xchg
lret
imul
sahf
aad
pusha
cwtl
stos
ja
adc
adc
insb
push
sarb
mov
xor
xchg
mov
scas
in
repz
or
pusha
and
das
and
xor
jnp
inc
aad
inc
sub
mov
push
leave
fsts
cs
add
out
and
cmp
lds
lahf
test
dec
rcl
loope
jge
pop
inc
jge
push
push
mov
sbb
lahf
jmp
xor
pop
in
push
or
arpl
cmp
mov
xor
rcrl
std
inc
pop
jl
adc
scas
repnz
stos
ret
inc
sub
sahf
js
pop
sbb
aas
fldcw
pop
xchg
add
movsl
mov
icebp
jmp
inc
cwtl
fstpl
lods
int3
pop
sbb
testl
jl
sub
mov
cs
popf
sbb
dec
jb
xor
stos
and
lahf
push
rolb
push
or
jnp
cmp
shlb
or
test
lret
lcall
pop
rorl
inc
mov
aaa
pusha
aas
push
inc
test
aad
loopne
in
and
cmp
test
daa
add
xor
jl
ljmp
xor
fnstsw
jbe
push
popa
mov
roll
leave
loopne
cmp
push
sahf
leave
inc
repz
inc
adc
push
jbe
push
sub
out
fadd
inc
test
jnp
inc
and
leave
and
jg
xor
xor
ja
mov
pop
gs
add
dec
push
loope
repnz
sbb
mov
push
xor
mov
stc
cmpsb
pop
push
lcall
xor
and
mov
xor
jbe
add
or
loop
jb
cli
and
cmp
mov
jle
arpl
stc
fnsave
mov
dec
out
aam
xchg
adc
push
inc
push
xchg
loope
shr
mov
adc
daa
sti
cmc
stos
dec
sub
jle
pop
lock
mov
cli
sub
ljmp
or
or
into
pop
xor
repnz
xor
xchg
xor
les
jecxz
in
mov
mov
lcall
cli
xorl
sbb
incl
inc
cmpsb
test
push
sub
negb
push
sbb
stos
mov
dec
call
adcb
push
cld
es
roll
das
clc
cmc
jo
iret
xchg
stc
daa
bound
mov
push
jae
hlt
ret
xlat
movl
jns
add
mov
lea
cmp
dec
rclb
std
fldl
or
imull
fildl
or
popa
dec
int3
daa
mov
insl
xchg
pop
cmp
cli
arpl
in
movsb
ja
lds
mov
inc
jg
dec
lods
outsl
push
and
jae
sbb
mov
clc
or
call
and
je
cmp
jns
push
adc
aam
mov
fwait
pushf
inc
sbb
cmp
mov
mov
fiaddl
cltd
fidivrs
popf
cmp
jne
mov
gs
or
scas
test
scas
add
pop
xchg
ret
aam
mov
aas
mov
imul
insl
stc
mov
insl
dec
hlt
inc
out
dec
pop
fnsave
fimuls
jmp
aaa
in
popf
mov
rcll
xor
sti
pop
sub
pusha
out
faddl
jnp
mov
pop
into
fcom
inc
int3
jbe
daa
aas
adc
jp
dec
adc
out
out
repnz
shr
mov
mov
lret
inc
mov
or
xor
pop
mov
inc
test
into
inc
out
pop
or
cltd
adc
fdivrp
insl
mov
xchg
icebp
xor
dec
dec
aam
repz
nop
or
vmread
aaa
ljmp
xchg
popa
sbb
xchg
fdivrl
mov
stos
xchg
inc
aam
sbb
inc
push
ret
mov
mov
fs
push
add
out
cmp
mov
ljmp
aaa
rolb
or
call
xchg
or
dec
mov
xor
lds
xor
xchg
fsubs
pop
rol
cmpsb
cmp
dec
jmp
mov
jb
and
aaa
mov
push
mov
sub
enter
xchg
jne
cmp
xor
push
pusha
repz
xor
outsl
pop
pop
pop
iret
jmp
jmp
cltd
cmpsl
cltd
jae
sub
inc
pusha
cmpsb
ficoml
adc
xchg
mov
pop
je
pop
mov
or
arpl
aam
push
adc
mov
mov
scas
jle
cmp
int3
jle
in
sub
mov
dec
cmp
or
call
es
jge
scas
adc
or
nop
repz
xchg
arpl
shll
shll
nop
andl
adc
push
cld
add
test
mov
pusha
xor
and
ss
dec
cmovb
jae
movsb
hlt
cmc
cmp
shrb
mov
sub
les
out
jg
mov
stos
fsubrs
adc
add
in
and
cmp
dec
imul
sub
nop
lret
in
jnp
rep
pop
stc
es
add
cmp
shlb
push
sub
add
mov
fwait
aam
sub
cwtl
lds
pop
loopne
into
movsl
mov
xorl
imul
mov
sbb
add
push
mov
and
and
jno
out
push
jb
mov
jg
pop
js
aad
mov
mul
dec
jnp
adc
inc
pop
pop
aam
sbb
add
xchg
clc
xchg
mov
xor
je
aam
mov
movsb
push
or
gs
ja
jmp
pop
clc
jns
imul
fdivrs
clc
push
mov
je
mov
and
xor
jno
mov
add
cmp
push
mov
shlb
xchg
decb
xor
push
sub
xor
movsl
mov
je
in
rcrb
aaa
movsb
jle
popf
aad
jo
arpl
add
int
call
inc
in
cmp
pushl
shll
cmpsl
enter
mov
inc
jl
xchg
out
inc
dec
std
popf
ljmp
out
inc
shr
inc
test
or
add
pop
push
push
aaa
xor
xor
scas
popf
jnp
inc
loopne
aam
dec
shlb
cmpsb
dec
jle
sub
push
lcall
sti
into
push
pop
fmuls
adc
push
loope
into
jg
test
stos
jl
out
sti
lret
mov
or
add
aad
and
cmp
lret
rcrl
lea
xchg
inc
mov
aam
sub
mov
test
outsb
out
adc
das
jno
in
arpl
mov
test
jl
sarb
ficoms
inc
jl
xchg
xor
mov
sub
sbb
sbb
mov
test
in
addr16
stc
jb
mov
in
mov
std
dec
dec
jnp
cmp
dec
ds
dec
push
xor
dec
xor
pop
call
popa
lds
pop
movsl
testl
loopne
rclw
fadds
dec
and
mov
rolb
cmp
cmp
insb
imul
jbe
hlt
pop
push
and
inc
cld
jmp
inc
adc
mov
jge
pop
scas
mov
jno
mov
cltd
es
jmp
pop
rcr
xlat
sub
cli
sub
sub
mov
hlt
sahf
xlat
daa
scas
or
test
mov
mov
dec
push
mov
fistps
push
fisubrs
aaa
xor
adc
pop
rcrb
pop
sub
adc
and
mov
pop
lahf
fildl
and
mov
jl
lock
dec
xchg
mov
xchg
out
rolb
mov
xchg
jno
ljmp
sbb
adc
mov
xlat
push
imul
aaa
iret
outsl
dec
pop
aas
xchg
les
out
mov
imul
ficompl
je
mov
pop
fsubl
cwtl
fiaddl
jae
jle
xorb
imul
mov
rorl
loop
mov
lods
notb
pop
std
lahf
sahf
in
call
cmp
es
jnp
jmp
je
rcl
or
insl
jo
mov
add
cmpsb
jne
inc
dec
mov
xchg
mov
sub
rcll
idivb
mov
mov
add
mov
inc
out
cmpsb
cwtl
sbb
repnz
in
mov
fwait
add
sub
int
fwait
or
mov
jl
in
jge
push
dec
jns
inc
xchg
sub
jle
sbbl
cltd
push
push
enter
out
pop
push
dec
lea
js
jae
xor
leave
sub
mov
push
repz
mov
dec
lret
pop
loop
jne
pop
mov
lahf
in
ljmp
and
jbe
dec
and
pop
in
fstps
mov
and
pop
adc
dec
fdivrs
sti
and
sub
cmpsl
andl
push
dec
mov
jne
out
loop
fxch
cltd
push
inc
pop
mov
cwtl
xor
sahf
inc
add
dec
lods
shll
adc
pop
movsb
mov
mov
andl
sbb
mov
xchg
loopne
jmp
push
push
imul
addr16
pop
in
jp
shr
andl
test
repnz
fs
movl
mov
xchg
mov
fmuls
dec
inc
and
sub
cvtdq2ps
dec
ds
add
iret
sbb
pop
addr16
test
pop
dec
andb
lret
xor
ljmp
cmc
or
test
int3
xor
fsubs
push
sbb
sahf
xchg
lds
pop
test
push
xor
mov
out
add
push
pop
rcrl
dec
mov
xchg
and
mov
sub
jns
mov
negl
push
loop
add
repnz
add
or
pop
cmp
mov
inc
int3
add
xorb
out
lret
add
xchg
int
test
sub
popa
iret
sbb
push
sbb
lret
jno
repnz
shlb
lret
outsl
inc
fstl
pop
mov
pop
jl
sbb
ss
sbb
mov
pop
incb
ret
adc
ficomps
jecxz
je
sbb
dec
jl
in
dec
in
cwtl
shl
rolb
adc
test
and
jmp
or
nop
mov
cmpsl
imul
mov
sub
lds
std
cmc
mov
cmp
push
push
ficomps
jnp
dec
data16
adc
insb
test
add
ljmp
pop
jmp
xor
insb
fdivr
cltd
inc
or
mov
pop
call
jg
inc
add
pop
dec
fiaddl
loope
dec
movsl
mulb
jge
mov
aas
sbb
xchg
pusha
sbb
fdivrs
xor
and
std
pushf
or
push
test
ja
cmp
dec
imul
mov
cmp
cmp
adc
mov
cmp
mov
adc
and
popf
or
aas
test
pop
mov
mov
inc
push
rolb
jmp
loope
pop
mov
mov
xor
xorl
mov
pop
and
cmp
dec
jle
aam
push
mov
inc
cmpsl
es
and
in
or
add
mov
pop
push
hlt
sbb
orl
nop
dec
je
push
jne
xchg
les
shrb
lock
cli
std
xchg
lds
cltd
pop
or
inc
fucomi
jl
mov
and
fsubs
and
push
xor
add
inc
cli
xadd
pop
shr
scas
aad
sbbb
loopne
xchg
jne
imul
jb
push
sti
lods
sub
push
lods
or
stos
inc
or
push
mov
in
lock
push
xor
push
repz
clc
jg
push
add
popa
push
pop
insb
jecxz
mov
xchg
and
mov
stos
push
sbb
inc
repnz
and
fistps
push
xor
arpl
repnz
push
dec
and
mov
out
pop
sub
clc
pop
dec
and
mov
cmp
ftst
ficomps
push
ficompl
add
faddp
and
pop
mov
cmpl
insb
mov
popa
xchg
iret
lahf
sbb
jecxz
add
loop
aad
loopne
faddl
dec
sub
int
nop
loop
or
and
xchg
dec
xchg
fcmovnu
adc
sub
add
rorb
push
cmpsb
adcl
fxch
jl
addl
push
call
sbb
in
mov
jb
sub
sub
and
dec
rclb
cmpsb
fwait
out
loop
inc
xchg
pop
sbb
sahf
icebp
sub
mov
pushf
add
mov
sub
xor
shl
mov
adc
cld
int3
xchg
add
inc
pop
outsb
ja
xor
and
scas
popf
aas
xor
in
pop
addr16
pop
bound
subl
repz
outsb
and
pusha
out
in
adc
scas
jb
andl
dec
jle
xchg
mov
mov
adc
das
and
out
mov
xor
mov
sti
sbb
sbbl
sbb
pushf
cli
sub
daa
punpcklwd
pushf
jmp
or
loope
loopw
mov
mov
push
push
data16
popf
xor
pop
sbb
out
push
movsb
xchg
pop
sub
ljmp
push
add
mov
dec
inc
stos
xchg
xchg
add
lcall
jmp
inc
mov
mov
add
outsl
aad
jl
fiadds
jg
loope
cmpsb
mov
mov
rcl
pop
inc
addr16
push
lahf
push
arpl
mov
fcmovne
mov
xchg
mov
sarl
push
jne
aaa
push
sbb
in
jle
ret
inc
js
ret
adc
inc
or
xchg
mov
in
push
pusha
xlat
pusha
in
ds
push
pop
adc
push
adc
add
push
clc
xor
cmp
in
sub
dec
mov
and
or
mov
jp
cmpsb
je
aas
stos
pop
pop
fs
sti
jp
lds
in
jo
add
les
jns
movsb
lret
mov
mov
pop
loop
sub
repz
and
mov
lock
xchg
mov
lock
adc
sub
test
add
sahf
dec
sbb
insb
mov
fldpi
sbb
sub
loop
xchg
subl
lods
fisttpll
popf
ror
xchg
xchg
arpl
popa
pop
cld
push
in
mov
mov
adc
adc
cwtl
sbb
jo
movsb
dec
popw
int
mov
insl
or
adc
fiaddl
cmpsb
fnstcw
push
add
imul
iret
mov
dec
sub
mov
xchg
sahf
test
lea
xor
xchg
iret
add
jmp
mov
in
hlt
fistpl
rep
mov
in
cmp
fs
pop
cltd
fsub
jle
add
cmp
jne
sarl
inc
xor
or
mov
shrb
mov
ljmp
in
adc
jge
adc
mov
push
xchg
push
sahf
inc
fcoml
mulb
dec
cmpl
sbb
dec
xor
pop
das
int3
dec
aam
mov
inc
sbb
cwtl
lret
repnz
aad
mov
pushf
fsubl
mov
repnz
scas
and
clc
push
in
or
xchg
xchg
aad
jb
dec
ret
push
jl
mov
sti
dec
add
aam
lods
ljmp
fists
jmp
add
lods
popl
and
jl
add
inc
mov
fildll
push
jp
mov
push
xor
adc
dec
popf
inc
mov
insl
lock
adc
or
mov
std
inc
push
jp
sbb
bnd
jp
ror
xchg
in
outsl
shl
lods
into
push
shll
aaa
xor
ror
ret
pop
pop
or
mov
xchg
rcll
ficoms
jbe
mov
pop
push
addr16
cmp
clc
push
mov
xchg
or
xor
jmp
adc
xor
aas
adc
xchg
mov
test
es
fucomip
insl
repnz
rorb
or
adc
in
adc
mov
push
rcrb
pop
in
jl
pushf
push
mov
int3
jne
xchg
popf
pop
test
imul
xchg
fmuls
inc
jge
cmp
test
sbb
gs
fisubrl
mov
das
jns
mov
sbb
jmp
adc
cmp
and
cmp
insb
xor
xor
sub
aas
shrd
push
ret
dec
jnp
and
fldl
rep
push
push
cmp
xor
push
mov
scas
or
fimull
or
xchg
adcl
lock
mov
inc
add
and
push
cmp
fbld
pop
hlt
push
inc
pop
jb
add
or
es
repz
add
js
push
sbb
xlat
rcll
cmc
scas
data16
stos
les
sbb
add
xor
cs
rcr
je
lret
dec
sbb
adc
push
std
push
movsl
or
fildl
test
ficompl
add
aas
adc
ret
mov
jne
pop
hlt
sub
icebp
fildll
pop
ljmp
lahf
push
fsubrp
imul
mov
cmpl
pop
add
pop
decb
inc
xor
je
push
test
jo
pop
sbb
orl
sbb
or
lcall
pop
scas
push
and
inc
je
pop
addr16
scas
jl
push
out
jle
dec
in
addl
es
cmp
sbb
cs
cmc
popf
sub
mov
lcall
in
xor
ficompl
aas
jecxz
js
add
int3
cmc
scas
sub
mov
jns
dec
data16
mov
hlt
inc
xchg
and
push
push
sbb
lods
lret
sub
cmp
scas
sahf
or
dec
icebp
in
dec
sub
mov
xchg
addr16
pop
lds
cli
jns
adc
fistps
cmp
notb
add
ret
lret
movsl
jle
test
sbb
inc
lret
pop
ljmp
int
inc
jle
aam
mov
addr16
call
jl
and
add
jo
sbb
clc
add
xchg
lock
sub
and
out
cmpsl
test
int3
lds
out
std
sti
fisubrs
testb
adc
in
lcall
out
out
in
sbb
fcoml
xchg
dec
pop
xor
xorb
pushf
test
lret
sahf
inc
hlt
xchg
cltd
add
shll
cmc
or
cmp
adc
mov
jns
inc
rcr
push
daa
call
test
movsl
jnp
insb
out
push
fisubs
mov
add
jmp
ret
push
pop
icebp
inc
adc
test
inc
add
test
addr16
mov
je
mov
adc
shll
mov
mov
in
lret
mov
and
inc
push
mov
nop
in
xchg
icebp
gs
mov
sti
sbb
in
outsl
xlat
pusha
imul
dec
push
pop
xchg
test
mov
cmpsb
js
cli
xchg
out
xchg
dec
test
lea
es
or
push
sub
cmp
xchg
mov
inc
and
mov
fmuls
repnz
ss
in
jne
xor
cli
jge
sub
iret
shll
test
pop
push
mov
xor
pop
sbb
pop
and
push
cs
and
js
lods
pushf
fcmovb
cmp
lods
jbe
and
enter
mov
in
inc
das
add
sar
imul
adc
pop
adc
out
sbb
iret
shlb
add
add
or
jl
lods
sbb
xor
xchg
mov
ror
fstps
mov
mov
ret
mov
and
fwait
and
mov
in
xorb
outsb
adc
mov
jbe
mov
pushf
lret
iret
sbb
ror
dec
xor
jmp
outsb
xchg
dec
popa
pushf
or
aam
decb
dec
pop
sub
push
ja
jp
xor
stc
fwait
cs
movsl
sbb
bound
push
pop
mov
cmp
jne
lods
in
adc
pop
jne
mov
aas
push
cli
jge
bound
xchg
ficoms
mov
fwait
sarl
add
lahf
push
dec
mov
scas
insb
or
enter
mov
jle
sti
inc
cmpsl
or
cmpsb
out
sbb
sbb
je
fnstenv
aas
push
add
dec
pop
mov
loope
jne
jmp
push
pop
jo
xlat
movsl
mov
add
lahf
insl
leave
les
push
mov
leave
pop
or
jl
into
jecxz
mov
mov
mov
lds
test
xchg
mov
and
or
fwait
pop
and
inc
cmc
xchg
test
sub
or
dec
push
mov
or
cmpsl
add
adc
add
jae
int
mov
in
cmp
push
mov
mov
sbb
mov
ds
fldcw
xchg
out
test
ret
or
cld
push
lret
lea
lds
add
movsl
inc
xchg
loopne
icebp
call
cmpsb
cmpsl
dec
mov
jae
rclb
daa
addr16
dec
sub
adc
js
push
std
add
push
testb
xor
fldl
insl
mov
insb
into
mov
cmp
cmp
mov
cli
mov
push
fildll
and
mov
mov
jnp
mov
mov
popf
call
insb
inc
and
and
repnz
leave
push
dec
pop
push
dec
adc
daa
pop
cmp
sti
add
repnz
mov
jl
sti
in
sbb
repz
int
popa
fwait
inc
jmp
test
shll
int3
push
popf
shll
xchg
loop
daa
call
or
int
fdivs
push
xor
fimull
or
or
enter
in
nop
repnz
mov
jb
pop
jg
xchg
into
insl
mov
nop
xchg
xor
jge,pn
enter
push
mov
xchg
cmp
int
adc
inc
sub
and
or
mov
idiv
stos
mov
loop
orl
les
jp
fimuls
jb
and
xchg
sahf
cmp
inc
jge
movsl
sbb
add
adc
adc
jle
loop
mov
les
lret
jne,pn
pop
cmp
adc
dec
inc
mov
test
pop
and
lcall
js
jbe
pop
in
sar
push
cmp
cwtl
ljmp
and
fistl
mov
pop
sub
fwait
loop
jae
popf
fcoms
stos
mov
mov
std
shll
shll
test
and
pop
divl
fs
inc
push
mov
push
sbb
adc
mov
inc
arpl
fwait
pop
sarl
xlat
inc
xor
outsb
jge
dec
inc
insb
es
or
cli
xchg
imul
jae
ret
xchg
in
pextrw
inc
jp
insl
mov
sbb
insb
and
data16
add
jp
jo
pop
inc
inc
mov
aas
fidivrl
stc
call
and
mov
daa
into
xor
popa
sub
out
xchg
jo
fs
mov
loopne
xchg
cmp
pop
mov
jo
icebp
xchg
iret
pop
cmp
mov
movsl
pop
inc
fimuls
adc
iret
mov
dec
pop
pop
lret
lods
repz
mov
xor
js
icebp
sub
mov
fdivrp
js
xor
push
les
les
fisubrs
mov
out
xchg
sti
mov
jne
mov
dec
sbb
std
das
out
sub
lahf
jb
or
dec
lret
push
and
daa
and
xor
int
outsb
inc
mov
pop
js
out
in
dec
movsb
in
mov
in
push
xchg
xchg
nop
jmp
inc
clc
push
repnz
outsb
inc
mov
std
mov
mov
lods
jae
and
sub
add
fldt
sbbl
jbe
adc
test
test
pop
add
fdivr
in
subb
jl
dec
jecxz
xor
into
shl
xchg
cmp
inc
filds
and
pushf
imul
loop
and
add
cmp
mov
jns
stc
test
movsb
arpl
scas
pushf
inc
clc
xor
rcll
inc
mov
icebp
mov
mov
push
cmpsb
push
popa
mov
mov
mov
push
or
fs
push
call
mov
push
jb
dec
cli
in
and
xchg
scas
vpxor
cs
in
lds
fcompl
test
sahf
and
xor
movsl
xor
orb
popf
jns
arpl
mov
sbbl
or
mov
pop
jno
push
cs
push
andl
mov
xorl
and
xchg
xchg
xchg
inc
adc
add
cmpsl
mov
fsubl
sub
aaa
clc
jge,pt
xchg
fs
mov
add
mov
lds
mov
jnp
in
add
or
rcrb
lcall
call
mov
inc
xchg
pop
inc
repnz
aaa
adc
addb
jmp
jge
inc
shll
mov
or
push
adc
xor
push
std
jbe
cmpsl
pop
scas
out
sti
cmp
dec
sub
fidivl
sbb
add
pop
shl
ficompl
mov
xchg
mov
sub
or
popf
lds
cld
inc
cmc
jmp
mov
cmp
rcr
mov
jp
leave
lret
dec
pop
out
imul
jae
inc
int
add
xchg
sub
xor
cmp
xchg
lcall
xchg
mov
outsb
decl
sahf
stos
mov
lods
fwait
jmp
push
add
jg
daa
testl
push
add
hlt
aas
aam
shll
nop
mov
cs
xor
out
in
cmp
add
mov
icebp
xchg
cmpsl
xchg
push
sbb
call
xor
xor
scas
and
shlb
jg
sbb
rcrl
fdiv
mov
push
sbb
or
or
aam
sub
je
ds
fwait
in
pop
fucom
push
or
xchg
pushf
xchg
lea
cwtl
xor
and
scas
mov
mov
outsb
sub
out
mov
push
mov
mov
lret
push
shlb
inc
mov
pop
push
xchg
pusha
pop
loop
in
stos
sub
push
inc
push
imul
pusha
roll
cmp
xlat
pop
aaa
addr16
adcb
push
jns
adc
push
mov
stos
or
pop
push
shll
imul
mull
sahf
icebp
sbb
sub
cmp
fwait
or
popw
dec
xor
mov
mov
inc
inc
mov
int3
pop
xchg
dec
push
mov
mov
mov
jno
inc
fimuls
loope
inc
dec
or
mov
test
sbb
mov
out
iret
jnp
or
mov
outsb
test
sub
mov
ljmp
pusha
out
lea
cwtl
and
pop
pop
arpl
cmpsb
jge
sahf
jge
mov
int
mov
loop
pop
outsl
and
cmc
jp
movsb
xchg
scas
in
pop
xchg
jle
push
sub
iret
icebp
ss
pop
xchg
ret
lret
mov
out
jmp
dec
dec
call
jbe
adc
test
push
or
cmp
cmp
jle
cmp
lea
sub
lahf
mov
push
mov
js
pop
jne
jae
jmp
cmp
mov
pop
nop
add
jbe,pt
xchg
inc
gs
xor
pop
test
mov
jne
jmp
pop
jp
imul
mov
pop
call
push
adc
push
lret
rclb
jnp
cmp
mov
adc
add
out
sahf
ds
or
dec
loope
cmpsb
dec
sub
out
jb
push
aam
cmpsl
int3
movsl
loope
dec
push
mov
andl
cmp
jecxz
xor
ss
rcl
push
sbb
repnz
je
lods
mov
dec
jge
push
addb
jl
pushl
sbb
cmpsl
xor
test
repnz
jmp
pop
dec
pop
lret
xor
popf
jnp
and
jbe
imul
mov
aas
fwait
mov
mov
aad
je
ds
mov
fmuls
das
or
loope
inc
jmp
sub
or
enter
pop
push
pop
mov
hlt
xchg
push
mov
imul
adc
std
nop
pop
push
adc
push
sahf
rcll
mov
add
push
shlb
sub
xchg
cs
enter
popa
push
dec
das
mov
dec
mov
sub
and
cmpsl
ss
push
mov
jmp
xchg
aaa
out
shll
push
and
mov
dec
jnp
enter
dec
aad
jle
addr16
cltd
outsb
add
mov
mov
incl
fwait
aam
out
pop
test
and
lcall
add
mov
daa
or
stos
negl
cmpsb
ds
shrl
pop
cmp
mov
push
loope
mov
push
sti
lds
imul
jb
and
insb
push
mov
and
out
aas
shll
pop
mul
pusha
mov
and
gs
movd
mov
mov
fnstenv
sub
loopne
loope
dec
in
mov
cmpsb
xchg
jmp
push
mov
jecxz
or
movsb
sub
ss
jno
xchg
lret
lcall
cmp
pop
imul
and
dec
and
fsubrp
cmp
mov
repz
ljmp
xor
jbe
leave
or
push
sahf
outsb
lods
clc
pop
insl
ficoml
adc
mov
cmp
pop
xchg
movsl
mov
and
lret
ds
lods
and
mov
negl
dec
xchg
jae
sbb
lock
cmp
mov
clc
fistpl
fs
mov
pusha
cmp
lods
pop
int3
ret
int3
sub
xor
pop
cltd
clc
xchg
repz
movsb
pop
push
stos
ret
shll
sbb
adc
or
push
aam
or
add
aad
in
in
push
jbe
bound
cltd
das
mov
mulb
roll
movsb
ds
add
out
inc
cmp
cltd
jmp
adc
stos
xor
jecxz
mov
mov
lret
aaa
outsb
das
and
shrl
shr
push
push
rcl
jmp
add
lret
cmc
fmulp
jg
sahf
inc
mov
xchg
outsb
add
rcr
daa
ret
shll
stc
jo
dec
pushf
sub
rcrb
sbb
mov
cmp
mov
fwait
mov
daa
popa
sub
test
mov
pushf
mov
std
push
iret
xchg
mov
icebp
jns
mov
add
je
push
jecxz
rclb
js
dec
data16
pop
mov
mov
repnz
popa
jmp
pop
add
push
in
sbb
cs
hlt
mov
repz
sub
xchg
or
mov
pop
xor
pusha
insl
arpl
sbb
lock
sahf
addb
push
push
leave
cmp
inc
lock
fisubl
stc
rorb
inc
lds
push
cmpsb
enter
movsl
les
mov
icebp
adc
out
mov
sbb
and
test
pop
shrl
cmp
stos
sub
jo
sahf
xor
xor
jl
fdivrp
push
outsl
sahf
aaa
mov
stc
cmp
icebp
mov
add
jns
out
ljmp
pcmpeqb
adc
pop
das
mov
or
xor
mov
out
xor
mov
cmp
inc
push
mov
xchg
add
mov
or
xchg
popf
sbb
dec
add
repnz
sbb
repz
repz
lret
inc
adc
clc
sbb
pop
inc
or
sub
mov
jmp
sub
rclb
scas
pusha
cld
xchg
dec
add
cmp
rorb
lods
dec
xchg
and
sub
jo
pop
addl
ficompl
dec
lea
cmp
setle
sub
repz
in
or
mov
lds
mov
push
out
cmp
adc
mov
divb
adc
dec
in
xchg
es
cmp
in
xchg
inc
mov
ret
call
xor
or
frstor
sub
aas
pop
mov
call
das
cmpsb
scas
mov
sbb
or
sbb
test
rclb
jle
xchg
sbb
and
imulb
clc
cmpsl
adc
ret
sub
sub
add
lea
sbb
stos
adc
xchg
lret
mov
imul
inc
gs
pop
or
cmp
or
mov
cli
pop
jmp
aad
push
inc
cmp
dec
add
outsl
push
and
in
cwtl
stos
fistps
cmpsb
test
xor
cs
fisttps
mov
pop
or
and
shll
mov
sub
cmp
dec
dec
mov
out
stc
ret
ret
lret
andb
popf
loop
inc
sbb
inc
lds
inc
out
add
aaa
imull
movsb
imul
cld
xor
adc
push
mov
pop
mov
jno
cmp
into
mov
popf
in
pop
ret
adc
sub
lcall
cs
sbb
popf
out
push
fbld
or
push
dec
mov
dec
les
or
in
sub
jecxz
ljmp
ljmp
lods
std
lods
cli
xchg
je
push
mov
in
push
sub
movsb
addr16
add
cmc
xor
adc
leave
faddl
shrl
and
xchg
out
inc
je
test
jb
pop
xor
sub
jmp
mov
aaa
adc
xor
push
movsl
in
or
es
xchg
shrl
cmp
xchg
frstor
dec
sbb
pop
lock
mov
and
push
repnz
push
push
adc
pop
cs
data16
jns
fistpll
pop
fstpl
decl
hlt
negl
test
mov
imull
out
sbb
pop
or
mov
fimuls
es
cmpsb
inc
divl
xor
dec
subb
push
sbb
sub
pop
mov
sahf
mov
testl
push
shl
data16
dec
add
lods
sub
stc
sbb
dec
fnstcw
push
rclb
cld
aam
jmp
inc
sbb
cmp
sar
ja
jae
sbb
popf
jne
mov
jno
cmp
aam
cmp
add
xor
adc
adc
imull
cltd
mov
dec
pop
pop
pop
scas
dec
dec
divl
test
subl
xlat
inc
add
xchg
lret
insl
fnsave
push
setle
sidtl
les
xchg
iret
adc
push
pop
add
xor
mov
jg
out
add
jp
sbb
push
xor
lds
sub
pop
dec
popa
ss
lods
shll
mov
mov
mov
xor
in
ret
imul
andl
or
into
imul
or
sbb
pop
inc
xchg
jne
cmp
fisubs
in
arpl
and
push
fcoml
arpl
adc
add
fucom
sub
cmpsb
adc
pop
pop
push
clc
pop
sbb
nop
add
adcl
rdmsr
cmp
jae
loop
shrl
cmp
adc
cmp
ds
jns
icebp
mov
sbb
in
dec
mov
push
lock
mov
add
je
hlt
incb
cmp
xor
shrl
or
jp
push
cmpsb
fisubl
sub
push
jb
jp
or
add
jmp
mov
mov
movsl
and
sub
adc
mov
adc
push
sub
in
shlb
lea
aad
mov
cmp
cmp
dec
idiv
push
ror
rclb
loop
pop
or
subl
jecxz
push
or
xor
add
sti
les
movsl
loope
cmp
popa
mov
add
das
fbld
cmp
and
fsubrp
mov
js
mov
mov
and
scas
ret
cmp
adc
pop
filds
jbe
pop
mov
push
pop
xor
mov
mov
faddl
mov
cmp
push
clc
xchg
call
adc
sbb
mov
xor
clc
jge
dec
cld
mov
cmp
jb
cmp
int3
clc
cltd
fsubl
fidivrl
add
jge
push
cmp
pusha
inc
aad
mov
xor
test
mov
imul
out
mov
jo
cmpsb
jl
pop
insb
mov
cld
inc
into
pusha
ret
mov
cli
push
pop
push
push
sbb
repnz
lahf
pop
mov
rcll
push
gs
dec
xchg
test
push
fbstp
cmpsl
lcall
xlat
cmp
dec
jno
mov
cmp
xor
aam
test
inc
stos
xchg
icebp
aam
jecxz
cli
jge
cmp
sub
jge
jb
fcomi
mov
in
cmpsl
sbbl
ret
ret
dec
out
sbb
outsb
cld
adc
xor
mov
dec
imul
je
adc
dec
mov
push
sub
xchg
mov
shl
add
jle
in
lahf
mov
ficomps
inc
js
dec
cmp
test
gs
and
cmp
inc
sub
sti
mov
movsb
mov
pop
sub
jo
insb
pushf
jmp
clc
aad
xlat
pop
sbb
test
fistpl
mov
push
inc
adc
loope
in
icebp
ss
sbb
data16
mov
mov
jmp
fiaddl
in
fiaddl
fdivrl
clc
into
inc
pushf
ficompl
shrl
or
movsb
push
shlb
mov
mov
and
and
inc
faddl
fimuls
test
ret
and
rorb
repnz
xchg
repz
test
aas
andb
add
ja
loopne
outsb
fwait
push
rol
clc
pop
insl
repnz
shr
test
mov
push
push
ficomps
out
push
jge
push
mov
push
and
dec
das
sahf
or
xchg
pop
adc
imul
imul
mov
dec
sub
dec
aam
lds
cltd
pop
pop
dec
sti
push
cwtl
mov
divl
ror
xor
push
lahf
mov
pushf
or
push
mov
or
inc
aaa
lret
cmc
mov
and
mov
lcall
sahf
xor
or
pop
push
sub
je
fisttps
shl
addr16
cmpb
int
push
and
adc
das
add
imul
inc
scas
call
sbbb
int3
shlb
inc
clc
leave
in
mov
push
pop
mov
jb
mov
repnz
add
pop
cmpsb
imul
cmpsb
and
or
data16
cmp
out
in
int3
movsb
iret
mov
mov
mov
les
sub
or
add
aas
add
push
jns
and
mov
dec
push
das
icebp
fisubrs
movsl
fimull
adc
popf
int
lahf
sbb
enter
insl
push
fistpl
lods
cs
xor
jae
xchg
mov
add
mov
lret
or
sub
sbb
das
add
aam
rdmsr
pop
cmp
test
fdivrl
leave
fnstsw
repnz
aas
cli
xchg
dec
and
push
fisubrl
xchg
les
cmpsl
daa
adc
jb
jb
jp
xor
cmc
and
sbb
leave
rcll
movsb
rolb
add
ret
push
je
int3
jl
mov
out
or
dec
adc
test
nop
jmp
xor
insl
push
xor
push
inc
jae
out
mov
sbb
push
scas
fstl
inc
in
mov
shrl
jle
cmp
mov
js
dec
icebp
testl
aas
cmp
fnstsw
lcall
sbb
push
iret
or
dec
or
cmp
xchg
mov
std
in
in
pop
cmpsb
popa
imul
inc
push
mul
sub
inc
in
add
adc
cmp
xlat
jbe
in
shll
jnp
sub
mov
jecxz
cmc
imul
insl
or
mov
cmp
lret
das
xchg
leave
test
pusha
adc
mov
sti
xorb
xlat
insl
nop
sbbb
jbe
inc
jmp
dec
xor
dec
pusha
push
cmpsb
shlb
pop
mov
add
cmp
push
mov
and
and
cmp
in
int
imulb
test
push
cld
sbb
cs
aad
push
push
scas
xchg
or
icebp
dec
and
jno
shll
mov
push
scas
jns
cmp
rol
aas
mov
mov
enter
int
out
imulb
sbb
out
loop
mov
out
int
je
and
jecxz
jp
push
pop
ficomps
xchg
stc
xchg
dec
pop
push
and
mov
std
inc
adc
mov
ja
sbb
sub
lds
xor
sub
cmpsb
xchg
in
jmp
fdivrl
mov
sbb
jns
pop
leave
sub
shrb
je
xchg
adc
aas
or
xor
cld
push
movsl
dec
mov
mov
cld
pushl
xor
jne
mov
ljmp
cmp
popf
fwait
xorb
cmp
xchg
test
jmp
and
fsubl
or
push
add
push
adc
shrl
jl
negb
fadds
cmp
mov
push
mov
push
in
jmp
negl
mov
pop
inc
push
mov
mov
stc
js
or
mov
inc
ja
jl
push
rcrl
xchg
and
lock
stos
add
xchg
lret
adc
lea
push
iret
js
add
mov
adc
inc
dec
and
mov
push
mov
movsb
rol
lock
sbb
fstl
outsb
fistps
flds
cli
push
imul
and
bound
cmp
iret
jp
insl
test
xor
add
or
test
es
mov
mov
stos
addr16
inc
in
and
test
xorb
lahf
dec
movsb
stos
adc
aam
movl
xor
insl
pop
xor
out
pop
ja
sbb
and
mov
outsb
push
adc
add
mov
nop
add
jne
cwtl
sub
pop
sub
push
xor
mov
lods
jne
aam
or
shlb
mov
fiadds
adc
dec
jmp
das
fadd
call
add
and
adc
out
data16
cltd
fsubl
xor
std
je
pop
movsl
repnz
daa
sahf
nop
or
jmp
fsubp
xchg
mov
lds
stos
popf
push
jno
sbb
insb
adc
or
out
leave
daa
mov
push
push
or
push
lcall
pushf
pop
sbb
mov
jp
cmp
sub
cmp
or
sub
jl
add
js
jns
repnz
mov
pop
rcll
dec
mov
aaa
mov
push
cmp
js
test
sub
cs
insb
das
pop
fwait
icebp
sbb
nop
inc
out
xchg
scas
mov
subb
fidivl
mov
sub
cmp
imul
daa
jp
cmpsb
movsl
or
adc
in
xlat
sub
pop
push
xlat
xchg
inc
inc
data16
pop
mov
inc
dec
mov
pop
notl
insl
adc
xor
lret
mov
adc
mov
sbb
test
test
xchg
out
mov
sub
test
andb
jbe
aam
pushf
fs
sub
or
mov
sarl
sti
dec
movsl
jmp
out
pusha
cmp
cmpsl
add
in
jns
xor
push
out
insb
push
cli
outsb
jns
shr
addr16
shl
xor
out
pop
fbld
pop
shrl
push
leave
hlt
fstps
adc
and
lret
jb
pop
mov
mov
test
out
sbb
xor
into
and
xlat
es
lock
pushf
xchg
jp
mov
dec
nop
data16
adc
and
sub
and
pop
mov
sbb
sub
fstl
repz
jecxz
mov
test
outsl
test
sub
or
dec
sub
sbb
imul
or
dec
sbb
sbb
lods
sti
daa
push
fsts
push
mov
das
cli
jno
daa
inc
dec
adc
cmp
cld
adc
push
in
mov
outsl
push
leave
rcll
mov
sbb
pop
arpl
pop
movsl
pushl
and
pop
int
clc
orb
adc
inc
andl
or
pop
je
insb
faddl
mov
dec
pop
es
xlat
test
mov
dec
jnp
push
stos
inc
enter
or
test
sbb
sub
mov
stos
and
aas
call
mov
std
jg
std
mov
sub
ror
jecxz
cmp
mov
test
clc
xor
push
adc
out
cli
push
lea
gs
pop
pushl
pop
loope
inc
sub
testb
andb
out
xchg
mov
lods
jl
sub
cwtl
in
cltd
jno
and
cld
dec
dec
mulb
dec
ret
cwtl
adc
jne
lsl
jl
dec
adc
andb
lret
hlt
push
mov
lahf
cmpsl
pop
fbstp
jl
mov
xor
pushf
mov
subl
xchg
push
jno
and
push
and
cmp
mov
pop
inc
aam
mov
xchg
test
add
jge
mov
jb
xchg
or
mov
lods
movsl
decb
repnz
mov
jmp
sbb
mov
mov
mov
cmpsb
sub
push
mov
je
inc
xor
mov
fs
and
shl
fldt
push
sbb
xacquire
dec
incl
jp
bnd
imul
rcr
popl
pop
xchg
dec
mov
add
mov
filds
pushf
outsl
lahf
sarb
in
dec
jp
lods
mov
cmpsb
hlt
xor
push
or
xorb
imul
int
arpl
push
aam
das
mov
xchg
cltd
es
xchg
cltd
mov
lods
add
testl
inc
and
push
imul
push
sbb
paddusw
in
sub
ret
ficomps
inc
scas
xor
dec
fwait
jl
aam
xchg
inc
rcr
in
je
lret
or
cmpsl
test
jl
jo
xor
push
orl
and
sub
repz
scas
inc
and
push
nop
test
pushf
int
arpl
rcr
push
int3
jmp
adc
rclb
xchg
inc
lret
pop
mov
pop
push
mov
mov
push
into
mov
mov
jle
cmp
push
add
outsb
negl
pop
mov
jmp
add
cmp
scas
dec
test
pop
cmp
mov
xor
rolb
and
jbe
lods
push
jae
add
sbbl
add
xorl
jno
add
or
and
leavew
lock
or
lret
fsubrs
or
repnz
sbb
into
mov
jo
jmp
mov
push
in
mov
mov
pop
xor
outsb
lea
cmp
decb
cmpsb
xchg
sbb
dec
shr
cmpsl
xchg
mov
lcall
scas
dec
dec
mov
mov
cmp
orl
es
aas
cmp
lods
adcl
test
leave
pop
shll
ss
xchg
je
leave
lret
push
push
add
push
movsb
pusha
fisubs
push
stos
add
sbb
mov
stos
jge
fidivs
push
push
or
jecxz
cmp
inc
xor
xor
cli
pushl
rcll
orl
fistpl
out
stos
jb
jno
mov
mov
or
push
js
sbb
mov
addr16
in
ds
pop
pushf
mov
lahf
mov
sbb
scas
lret
vdivps
push
imul
mov
xlat
fs
xor
repz
mov
and
xlat
jp
push
shrb
js
inc
lret
mov
push
xchg
addb
or
push
sub
jp
add
stos
fcomp
xchg
push
data16
stc
cli
xchg
push
push
mov
xchg
fdivrl
add
jb
loope
xor
aaa
out
xor
hlt
lahf
aad
push
and
xor
in
out
and
shlb
inc
pop
mov
das
xor
jle
jg
dec
pop
push
pop
and
adc
mov
push
in
push
add
jge
mov
or
mov
add
dec
dec
xchg
iret
jg
xor
mov
test
xchg
lods
scas
stc
add
sub
ret
imul
add
inc
sti
mov
jmp
frstor
cmpsb
stos
or
pop
call
aaa
imul
fwait
adc
xchg
sub
icebp
push
aas
pop
pusha
and
jmp
push
insb
std
pop
out
js
cli
cmpsb
aad
lahf
push
mov
dec
jge
mov
jb
dec
movb
mov
addr16
or
sbb
aam
jnp
ja
jmp
lret
cld
ljmp
cmpsl
push
jg
xor
jge
mov
sbb
nop
out
dec
add
out
mov
push
insb
push
xchg
out
rolb
pushf
int
pop
pop
xchg
and
dec
pop
push
rcll
and
push
lret
mov
pop
mov
aam
mov
in
jmp
insb
test
aad
lods
and
cwtl
clc
in
dec
pop
mov
inc
add
pop
mov
jns
push
push
mov
sbb
sub
aas
cld
cli
push
pop
or
cmpsb
into
repz
or
int
js
aas
sub
ficomps
shlb
popa
dec
mov
pop
fidivs
inc
mov
repnz
mov
xchg
pop
adc
push
cmp
test
addl
test
xlat
mov
lret
xor
sarl
cmpsb
or
mov
insb
out
fldenv
lock
mov
out
fsubs
lcall
jb
je
jmp
mov
jmp
fimuls
xorb
jae
pop
sub
add
pusha
in
test
xor
into
out
jmp
sbb
sub
cmpsb
insl
rcll
out
add
jl
cmpsl
dec
sbb
movsb
scas
clc
mov
push
mov
lahf
pop
dec
xchg
push
sarb
add
jae
lods
out
or
das
mov
add
xchg
enter
lcall
fiaddl
imul
sbb
aaa
and
test
xchg
aam
gs
out
ds
mov
or
sbb
pop
ficoms
popa
aas
lock
cmc
daa
cwtl
in
inc
xor
lret
adc
enter
inc
sbb
or
xlat
test
sar
mov
cmp
std
mov
out
pusha
pop
sbb
out
adc
mov
data16
lcall
insl
push
jl
add
loope
out
repnz
lcall
cmpsl
std
mov
cs
xchg
xchg
stos
inc
pop
test
and
inc
int
push
shrl
mov
sbb
inc
lcall
in
pop
imul
pop
stc
add
negl
dec
add
pusha
lret
imul
enter
outsb
inc
pushf
jp
and
dec
and
jb
faddl
mov
jle
aam
and
mov
test
mov
insb
test
or
mov
jo
adc
ja
fs
mov
jp
cmp
fs
mov
jl
mov
in
pusha
gs
in
push
out
mov
adc
mov
outsb
les
adc
push
mov
ds
and
cmp
add
leave
stos
sbb
stos
dec
lahf
jl
xchg
daa
xchg
push
cli
mov
in
cmp
mov
dec
fistl
xor
inc
out
xchg
mov
mov
jge
int
les
sub
loopne
shll
mov
sub
out
les
cmpsl
adc
ret
and
in
xchg
dec
movsb
ljmp
jmp
iret
xchg
xor
mov
je
adc
or
fisttpl
imull
mov
aam
aad
inc
jge
jecxz
jle
xchg
inc
jecxz
repnz
in
cmpsb
js
les
or
xchg
inc
lds
scas
outsb
push
addr16
xchg
lods
sbb
imull
inc
dec
icebp
cmp
cmp
rcll
sub
sti
cmp
daa
test
or
or
mov
sti
ret
scas
je
jmp
mov
adc
std
sahf
jp
insb
or
addr16
in
popf
sti
test
mov
mov
xchg
jmp
shrl
scas
fimull
shr
mov
mov
shl
xor
test
inc
dec
ret
mov
imul
pushf
std
bound
push
ljmp
and
decl
ljmp
cltd
sbb
push
aas
bound
data16
imul
lret
cwtl
fsubl
movsb
pop
aaa
jl
rolb
addr16
stos
negb
rorb
push
fldcw
faddl
or
fucomi
cmp
mov
rcrl
insl
xchg
int
lret
or
push
movsb
xchg
pushf
sub
sub
xchg
data16
stc
insl
mov
ja
jae
add
lret
add
xor
jo
test
inc
aaa
fwait
mov
fisubrs
fimull
arpl
xor
mov
adc
dec
dec
inc
cmp
push
rol
mov
addr16
lea
sbb
dec
jl
stos
add
jge
test
out
jge
sub
adc
dec
adc
mov
insb
pop
in
jns
shll
xchg
adcl
push
mov
outsb
xchg
dec
into
jb
sbb
mull
push
pop
mov
push
cmpl
rcrb
jg
and
out
xchg
and
lret
cs
hlt
hlt
in
jge
pop
or
pop
cmp
call
scas
xor
imul
outsb
cmc
xor
xchg
adc
inc
ja
out
into
xor
punpckhwd
testl
scas
dec
mov
sbb
cmp
sbb
jbe
xchg
sub
or
sti
cmp
in
mov
rclb
jl
pop
fnstcw
add
mov
aas
mov
daa
adc
mov
and
pop
lds
pop
lds
outsl
lea
adc
sti
push
es
repnz
dec
xchg
jle
lea
jnp
or
push
in
mov
jle
cmp
inc
fwait
pop
cmpsl
addl
cmovp
mov
ficompl
js
je
or
imul
dec
jl
mov
mov
pop
xor
shlb
dec
cltd
ss
out
popf
inc
adc
or
cwtl
out
pop
scas
push
xchg
stos
cmp
outsb
aam
out
rorb
cmpl
sbb
movsb
cltd
add
adc
out
repnz
mov
bound
into
stos
out
xchg
push
cltd
pop
pop
sub
adc
fdivl
das
cmp
add
inc
shrl
nop
mov
jbe
shrl
sbb
cld
add
adc
sbb
insb
push
mov
or
and
loope
add
pop
pusha
xchg
adc
sbb
pop
jns
popa
lods
addl
scas
mov
adc
xchg
and
lock
ss
ljmp
push
sub
add
repnz
cmp
jecxz
jl
out
xor
mov
adc
mov
es
cli
push
sbb
and
xchg
xor
add
add
pop
pop
cmpsb
and
je
jmp
xchg
mov
out
scas
lahf
or
mov
gs
cmpsl
pop
int3
into
push
mov
cld
cmovae
xchg
inc
xor
fldt
bswap
icebp
rorl
aam
or
das
jns
push
sub
gs
lret
sbb
sbb
adc
fisubrl
jge
js
adc
push
sub
aaa
jno
push
lds
sbb
mov
div
mov
and
push
lret
jg
and
push
pop
ljmp
dec
es
mov
sarl
inc
jmp
mov
int
or
int
orb
xchg
cmp
int
imul
lcall
add
rol
sub
int
fnsave
xchg
sbb
jl
popa
icebp
repnz
loop
fwait
mul
xchg
out
rcll
xchg
jmp
clc
ja
mov
cltd
sub
jbe
daa
dec
or
mov
and
cmp
dec
dec
cld
sub
fwait
pop
lods
ja
daa
mov
addr16
sbb
sarl
xchg
adc
ret
call
push
mov
sbb
pop
or
les
loopne
shlb
in
jns
fildl
dec
jmp
lret
cmpsb
lcall
in
xor
mov
aas
and
dec
mov
popl
sbb
pusha
shl
mov
push
rol
or
cwtl
mov
pop
pop
push
push
mov
mov
and
pop
mov
and
es
stos
mov
insl
sahf
ja
and
ja
push
inc
adcb
js
lret
sbb
nop
or
ljmp
push
es
adc
push
loope
push
add
xor
mov
adc
in
loop
xor
mov
sbb
cmp
pop
push
mov
hlt
pop
mov
inc
aad
addl
cs
les
xor
popf
popa
dec
adc
and
mov
loop
dec
scas
in
sub
outsl
sub
and
pop
imul
push
cmp
or
jae
mov
add
fcmove
and
push
push
push
std
popf
and
and
inc
push
cmp
pop
push
mov
push
mov
xchg
repz
mov
ss
fidivrl
insb
pop
sbb
mov
das
popf
sbb
inc
mov
imulb
xchg
and
push
xchg
cs
mov
gs
out
push
cmc
sub
mov
xor
mov
clc
push
loopne
cld
add
adc
add
jae
sbb
push
repnz
aaa
das
adc
lret
stos
lods
cmp
add
jg
mov
mov
mov
lcall
push
push
mov
call
sub
push
pushl
xchg
ret
jne
push
dec
xor
fcmovnu
imul
pushf
mov
ja
and
lock
sub
cmp
roll
mov
sti
jo
push
mov
xchg
xor
aad
aad
jae
xchg
adc
cmp
lods
xchg
jg
jmp
cmp
lea
mov
jae
push
pop
inc
gs
mov
and
xor
add
into
or
pop
imul
pop
mov
jg
inc
mov
add
fisubrs
jae
or
sti
mov
popf
add
aaa
inc
jl
icebp
outsb
adc
jo
fwait
dec
sbb
adc
dec
dec
rorb
mov
mov
or
jg
add
mov
lods
jbe
mov
shlb
xchg
sub
xchg
and
xchg
dec
xchg
jo
pop
xor
add
loopne
stc
cmpsl
shrb
sbb
dec
nop
fdivrs
pop
mov
jne
or
dec
sbb
xchg
xor
jne
sar
xlat
enter
icebp
ss
push
mov
mov
mov
cmp
and
lock
mov
push
mov
cltd
mov
scas
jns
or
sub
jmp
call
and
cmc
mov
sbb
mov
inc
xor
xlat
add
das
arpl
out
idivb
gs
lea
and
adc
jnp
ror
stos
shr
sbb
push
popa
in
and
xchg
sti
mov
xchg
pop
jle
subl
in
lock
int3
xchg
cmpsl
pop
imul
adc
jbe
test
xchg
fwait
xlat
mov
adc
cmp
or
stos
sub
inc
xchg
cmp
sub
mov
push
out
pop
xor
call
jle
out
adc
push
push
jbe
sub
mov
adc
xor
loop
aam
lods
mov
jns
pushf
aas
sbb
pop
xor
fisubs
dec
in
cmp
fsubrs
jbe
add
jge
mov
ds
inc
inc
push
add
pop
mov
ds
push
cmpsl
xor
cmp
push
ljmp
sarb
jb
test
or
pop
fisubl
and
aaa
ret
add
push
divb
cmovge
movsb
xchg
inc
inc
rolb
mov
inc
cmpsl
aam
xor
bound
jns
push
xchg
shrb
jmp
pop
jecxz
xor
mov
icebp
cmc
loopne
sub
adc
mov
inc
flds
stos
jp
ret
aam
scas
rcl
sbb
cmp
stos
mov
daa
or
pushf
movsb
jle
mov
sarl
movsb
adc
adc
jg
and
push
fisubrl
xchg
or
xlat
lahf
add
fiadds
mov
scas
add
ja
or
lahf
sti
lock
pop
mov
fldt
sbb
idivl
orb
lods
lea
lods
xchg
add
jns
stc
dec
jno
movsb
aaa
in
mov
inc
in
test
inc
test
out
inc
call
pusha
sbb
pop
mov
fildll
mov
in
jmp
enter
mov
adc
sbb
sbb
push
sbb
push
mov
test
fildl
inc
fucom
ja
fs
testl
fstl
add
data16
adc
mov
aad
pop
rol
scas
js
push
fdivrs
sarb
stos
mov
je
sub
shll
movsl
add
push
cwtl
jecxz
bound
inc
movsb
mov
push
leave
repnz
add
aad
cmpsl
jmp
movsl
insb
stos
addr16
fucom
cli
push
aaa
out
inc
fneni(8087
insl
movsb
into
sub
dec
push
cmp
btr
add
sbb
mov
push
push
out
mov
xor
mov
sbb
xor
aam
bound
repz
add
xor
xor
mov
ret
lret
dec
pushf
addr16
aam
mov
mov
mov
push
or
lock
lahf
mov
inc
jecxz
dec
mov
std
jb
cltd
add
stc
ja
xchg
ljmp
jecxz
inc
jbe
add
cmp
out
insl
or
dec
inc
iret
mov
fsubs
out
cmp
add
lds
inc
adc
and
push
and
lcall
cli
push
int3
enter
repnz
xor
iret
dec
ds
rolb
fstpt
xor
out
in
sub
repz
and
and
push
aam
icebp
adc
adc
stos
jle
loope
add
orb
push
lret
inc
push
aaa
pop
imull
test
cwtl
cwtl
jbe
shrl
addb
scas
popa
aam
push
out
cmp
pop
fwait
std
cwtl
fdivrl
xchg
repz
dec
imul
loopne
popa
inc
icebp
ret
js
xchg
fxch
mov
jo
fs
mov
inc
pop
loop
out
neg
push
ss
into
enter
cld
mov
ret
and
or
dec
push
aad
js
xorw
sbb
cld
popf
scas
or
loop
cli
dec
push
stos
nop
cld
fldt
rdpmc
dec
and
push
loope
cmp
inc
sarb
inc
into
lahf
popf
sub
inc
mov
add
adc
shlb
fldcw
out
jb
cmc
movsl
out
mov
jae
xlat
mov
cli
call
and
mov
lods
in
test
add
cmp
stos
imul
in
pushf
loopne
mov
jae
jmp
push
das
pushf
mov
mov
outsb
sbb
popa
and
imul
xchg
sub
mov
fisttpl
add
stc
movsb
and
push
add
pop
jno
imul
push
jno
push
fisttpl
jo
pop
mov
and
les
add
ja
push
pop
arpl
cmp
mov
fadds
stos
cmp
loopne
dec
insl
movsl
push
and
mov
dec
inc
ficoms
xor
dec
cltd
sub
test
or
and
insl
daa
dec
ljmp
pop
test
jge
pop
int
scas
mov
inc
fidivs
and
lret
stos
mov
jbe
xor
stc
jecxz
xchg
adc
mov
jge
or
dec
add
aaa
cmp
jl
scas
das
and
out
cltd
pop
ds
sbb
das
testl
out
mov
das
pop
lahf
mov
stos
push
leave
push
fndisi(8087
outsl
jle
sub
and
and
push
jecxz
or
gs
adc
sub
mov
sub
mov
add
imul
cmp
add
int3
add
into
fisttpll
mov
lock
inc
rol
jo
mov
xchg
xor
insl
das
inc
xor
and
inc
adc
mov
arpl
scas
xchg
js
and
addr16
or
or
repz
jmp
loope
push
ss
fs
jge
sub
into
lahf
fwait
xchg
fidivrl
in
rcrb
nop
xchg
mov
arpl
das
test
ljmp
inc
insl
mov
xchg
jge
cmp
xor
pop
mov
inc
in
and
dec
or
push
test
mov
xor
imul
loop
xor
mov
mov
sub
push
jle
xchg
push
add
in
bound
adcl
fistpl
jbe
test
xor
hlt
add
pusha
adc
outsb
aam
loope
sub
and
test
sbb
or
fldt
int3
fldenv
filds
jno
jmp
sub
mov
and
xchg
xchg
sbb
adc
mov
in
lock
std
les
jbe
xchg
cmpl
pop
and
mov
sbb
lds
popa
pusha
mov
dec
loopne
sub
jmp
stc
ret
dec
lea
clc
out
xchg
out
inc
stc
adc
daa
inc
insl
mov
dec
adc
dec
mov
sbb
hlt
mov
sub
aas
loop
into
ja
aas
lret
iret
enter
lret
mov
ja
xor
bound
mov
push
push
cmc
inc
xchg
adc
sub
cmpl
jle
int
fdivs
and
mov
popa
iret
outsl
filds
push
insl
ljmp
mov
bound
jne
in
cld
mov
icebp
jg
sub
sarb
lret
lods
xchg
xor
iret
adc
push
sub
push
jbe
xor
sbbb
aad
or
subl
adc
ljmp
and
ret
ja
lods
lret
xor
and
sbb
pusha
out
jns
push
jl
mov
test
mov
push
es
mov
inc
and
push
add
popf
sub
fwait
out
leave
movsb
arpl
add
mov
dec
add
mov
movl
stos
mov
popa
jmp
push
jle
aas
or
ror
mov
sbb
rorl
jno
inc
fsts
dec
imul
movsl
push
shr
fstps
iret
dec
imul
jb,pt
and
mov
dec
movsb
push
mov
test
or
scas
or
fildl
stos
stos
ret
mov
mov
popf
int
adc
jp
sub
inc
jbe
or
leave
sbb
sub
xor
add
mov
rorl
ret
stos
sub
mov
dec
loope
imul
lcall
mov
ss
push
imul
pop
mov
and
imul
inc
dec
pop
pop
inc
and
ficoms
insl
notl
jne
ds
inc
or
fwait
cmp
and
jb
mov
mov
outsl
out
std
testl
lods
in
sti
popa
jmp
push
pop
xchg
xor
cs
ds
enterw
push
dec
sub
dec
es
sbb
aas
xchg
xor
pop
cmpsb
xchg
pop
out
rcr
test
sahf
mov
xor
aaa
scas
sbb
into
mov
fildll
lods
repnz
scas
mov
mov
xor
lock
jp
jns
or
mov
pop
push
scas
pop
rolb
fcmovbe
ja
in
dec
popa
shrl
push
test
iret
fwait
add
clc
popf
je
push
shlb
xor
test
xor
movl
cld
pop
fst
push
inc
sbbl
ds
and
cmc
xchg
mov
push
es
ja
fidivl
adc
stos
push
loopne
out
inc
dec
xor
dec
push
xchg
popaw
xor
mov
stc
dec
cltd
adc
out
or
and
test
sbb
mov
sti
test
out
stos
stos
les
cmp
ja
dec
mov
or
ret
jbe
xlat
sti
push
mov
jo
cmpsb
add
mov
xchg
ret
fs
subl
add
js
jge
in
mov
scas
repz
rorb
inc
push
sbb
and
adc
rolb
push
ror
inc
addl
outsl
lahf
inc
sub
or
movsb
cmp
jge
arpl
outsl
jae
ljmp
fsts
pop
rolb
mov
insl
shrb
aad
nop
xlat
inc
jge
push
mov
xor
jmp
in
test
aaa
lods
mov
mov
push
aas
sbb
or
jl
aad
ds
fcomps
loop
sbb
add
lods
mov
mov
loopne
push
push
addl
jl
sbb
nop
addl
adc
cmp
add
adc
cmp
test
pop
out
fdivl
inc
jmp
xchg
stc
ret
xchg
mov
jae
filds
filds
loope
add
cmp
popa
inc
fisubs
fistpll
test
jns
ret
pop
pop
shlb
pusha
shl
xor
mov
xor
pop
sti
ret
push
inc
fildl
popf
andl
xchg
ficoml
pop
and
xchg
adc
adc
insb
cwtl
loop
jo
addr16
loop
adc
inc
inc
xchg
insb
push
jns
mov
inc
shl
cmp
frstor
cld
xchg
xor
inc
ficoms
push
adc
sbb
or
jl
pusha
mov
stos
dec
gs
xor
sub
sbb
mov
xchg
pop
mov
gs
mov
sbb
sub
sbb
xchg
inc
icebp
fwait
pop
loop
stc
fdivr
mov
push
je
cmc
push
addr16
out
scas
sub
imul
cmc
sbbb
inc
mov
xchg
leave
movsb
fidivs
xchg
jae
clc
popf
cltd
xchg
imul
pop
adc
sub
in
xchg
jb
xor
ret
scas
movsb
test
in
and
mov
sbb
fmul
scas
fcmovbe
xchg
push
pop
cltd
and
jecxz
movsl
dec
imul
hlt
in
mov
mov
adc
cmc
in
pop
cmovno
data16
mov
movl
mov
divps
xor
popf
je
add
stos
data16
and
ret
mov
sbbb
push
ljmp
sahf
lea
jnp
fisubl
adc
into
adc
fldcw
shll
cmp
mov
cmc
pop
mov
jmp
mov
mov
ds
mov
repz
mov
in
loop
fidivs
mov
js
cmpsl
cmpsb
movsl
ret
repz
xchg
fxsave
out
icebp
push
jl
adc
inc
jne
mov
push
out
enter
int3
sbb
addr16
pop
sbb
adc
inc
push
push
jle
and
sub
adc
jp
push
add
jnp
addr16
shl
idiv
adc
cmp
shrl
push
fmuls
popa
mov
idivl
ljmp
dec
shlb
xor
mov
xlat
inc
push
int3
xor
adc
mov
jo
mov
mov
xor
xor
xchg
std
stc
insl
mov
or
jo
xlat
incb
fiadds
sbb
push
dec
flds
mov
push
push
xchg
rorl
int3
fidivl
in
cltd
inc
pop
push
pop
mov
and
daa
adc
ljmp
pop
cmp
scas
inc
push
and
cmp
aam
cmpsb
xor
pop
in
cs
adc
ljmp
repz
outsb
mov
decb
ret
daa
add
fisubrs
insb
push
sub
or
push
arpl
int
jmp
fs
ds
add
mov
jo
hlt
daa
loop
cmp
loope
in
stc
in
mulb
loopew
int
jmp
cltd
call
mov
ss
or
jno
and
and
outsb
mov
je
movsl
sbb
insb
arpl
jnp
stc
mov
aas
inc
ljmp
xchg
add
xchg
mov
test
fsubs
inc
pop
sbb
xchg
iret
loope
fistpll
mulb
addr16
sbb
es
sbb
jbe
outsw
in
add
in
stos
insl
mov
mov
jo,pn
pop
out
sbb
pop
les
in
sub
shlb
push
cmp
fists
outsb
js
shlb
je
call
scas
sahf
jg
int
cltd
addr16
cmp
fs
cmp
repz
mov
test
or
in
pop
out
cmp
xor
stos
xor
sbb
mov
sti
stos
adc
push
aaa
and
shl
or
inc
jmp
les
mov
add
sub
pop
ljmp
pop
loop
xor
shll
imull
mov
mov
or
insb
out
lret
inc
fwait
xchg
xor
push
xchg
add
les
mov
stos
lret
std
mov
outsl
xchg
cmp
pop
into
lds
out
jmp
les
pop
shrl
adc
pop
repnz
mov
out
mov
add
sbb
cld
mov
mov
pop
or
mov
sbb
test
push
lahf
or
outsl
aas
sub
mov
dec
repnz
cli
xor
outsl
outsb
pushf
mov
mov
cmpsl
add
sbb
inc
ret
fcomps
mov
push
loopne
addr16
add
imul
jg
hlt
lods
xor
test
bt
rcl
sub
ss
mov
outsl
sub
bound
jl
hlt
xchg
fiadds
mov
stos
fnsave
fsubrp
loope
shll
jnp
sub
ret
push
mov
cmp
xor
daa
or
xor
inc
add
call
pop
xchg
mov
arpl
mov
mov
inc
insl
lea
mov
repnz
std
inc
push
imul
adc
jecxz
cmp
sub
dec
push
stc
lds
adc
inc
andb
cmc
xchg
test
fmul
std
pushf
aas
dec
pusha
xchg
push
jo
adc
cmpsb
aam
popf
fdivrs
mov
and
out
loop
pop
ficoml
jle
inc
insb
call
lods
or
repnz
mov
out
adc
test
std
mov
lcall
and
add
sbb
pop
scas
push
add
sti
mov
sub
jp
jns
popf
push
and
scas
adc
mov
mov
push
test
cmpsl
in
inc
push
jno
push
jo
add
jmp
push
xchg
cmpsl
jle
or
rorb
ret
cs
mov
sub
cmp
mov
xchg
ljmp
in
test
mov
push
xchg
cmp
gs
adc
push
cltd
inc
mov
lods
fwait
out
pop
xor
and
ret
movsl
sub
cmp
je
jp
pop
lahf
and
mov
push
sar
shlb
cmp
xor
lret
shlb
add
xchg
sub
movsb
jle
pop
push
pop
fcoms
push
add
push
out
rcll
xor
in
push
jo
mov
sub
pop
negb
jge
leave
arpl
fnstcw
imul
cmpsb
adc
push
cs
cld
daa
int
in
or
cmpsb
inc
xchg
fsubrs
das
cmp
lahf
and
ds
faddl
jecxz
inc
or
loopne
addr16
sub
xchg
sbb
enter
dec
fs
sarl
push
add
dec
rcl
inc
into
popf
pop
or
adc
leave
stc
push
jbe
sub
xor
jg
dec
push
cs
mov
add
xchg
mov
pop
xchg
or
mov
push
mov
sbb
subl
mov
pop
xchg
xchg
mov
leave
sub
lahf
lods
in
sbb
imul
jmp
jle
sbb
pop
iret
arpl
push
movsb
mov
cli
rcr
xchg
scas
aas
test
lcall
mov
or
es
mov
cld
stos
push
mov
fsubrs
fs
mov
sbb
add
mov
pop
insb
jb
sarb
cld
add
inc
repnz
jmp
lock
mov
fdivrp
add
lret
lods
into
imul
or
jb
jo
or
insl
call
fcmovnbe
push
shll
or
cwtl
push
dec
mov
lcall
mov
out
in
fsub
xor
hlt
insl
xchg
sbb
out
sub
cmpsb
insl
xor
in
lcall
and
loope
shll
std
jmp
lods
mov
or
cmp
mov
cmpsb
adc
jecxz
stos
sub
mov
rol
int3
aad
out
sbb
jns
data16
add
mov
pushf
mov
es
es
outsl
lret
cmp
out
or
fs
jl
inc
pop
fldt
roll
jmp
out
mov
lods
ds
jmp
mov
enter
adc
jnp
cmc
repz
or
cld
roll
and
ljmp
inc
fs
shll
fistpll
popa
sarl
pop
add
and
xchg
repz
fstpl
test
pop
sahf
mov
jns
xchg
jecxz
sub
lds
push
popf
loop
jnp
cmp
sub
addr16
enter
addr16
cmovnp
insb
sub
push
xchg
rcrb
ret
fildll
xor
stc
jecxz
imul
daa
clc
sbb
or
adc
or
xor
xor
aas
or
mov
cmp
imul
ret
fwait
push
test
mov
lahf
cmp
xchg
jecxz
dec
cltd
cmp
or
leave
and
dec
aaa
call
dec
xchg
pop
push
ljmp
sbb
xor
aaa
and
push
add
subb
push
lock
xchg
xor
outsl
pop
lds
mov
testl
push
rcll
jmp
js
fidivrl
jge
les
addr16
sub
jns
jo
sbb
loop
push
xor
mov
push
xlat
faddl
dec
jb
push
iret
test
ret
jmp
pop
mov
xor
mov
xchg
cs
dec
xchg
mov
daa
jecxz
mov
mov
cmpsl
fwait
into
leave
xor
scas
adc
test
aam
mov
icebp
jo
rcrb
test
mov
mov
dec
and
fincstp
shrb
mov
xchg
pop
add
testl
imul
push
lods
mov
cmp
gs
roll
or
aaa
mulb
call
bnd
nop
jecxz
inc
movd
jmp
mov
ret
gs
pop
test
inc
pop
in
orl
test
jle
pcmpeqd
stos
enter
add
lcall
cmpsl
fsubl
mov
std
fxtract
dec
adc
jns
xchg
movsb
cmp
repnz
xchg
dec
pop
cltd
fdivl
xor
mov
pop
mov
shlb
jnp
xor
les
mov
jns
in
je
insb
sbb
xchg
jge
mov
jae
ljmp
dec
roll
cltd
or
repnz
rorb
lret
cld
pop
mov
add
add
xor
lods
fcos
repnz
in
imul
mov
lret
das
outsb
jbe
pop
gs
cmp
lock
lcall
inc
ret
sbb
mov
xor
jbe
pop
in
jae
push
loop
cmp
mov
adc
popl
jl,pt
stos
or
adc
clc
ljmp
je
mov
je
pop
lock
lods
mov
test
outsb
xor
push
adc
popa
mov
frstor
pop
adc
adc
jmp
sbb
push
push
jne
cmpsb
call
dec
pop
outsl
pop
nop
inc
in
int3
push
xor
xchg
inc
in
fsubs
add
or
out
das
jle
lock
inc
mov
pop
sti
xchg
push
cs
sbb
je
add
aas
dec
push
imul
adc
mov
loope
out
sub
aas
dec
call
inc
imul
ja
xchg
mov
mov
mov
fisubrl
mov
sbbl
in
mov
inc
cmpsl
lahf
faddl
call
jo
pop
adc
in
aam
sub
lock
mov
sti
popf
dec
add
pop
fucomip
adc
cltd
dec
adc
jp
jbe
addr16
scas
push
int
push
shr
xchg
and
aaa
pop
cltd
ret
test
inc
out
aad
and
inc
popf
pop
std
aaa
cs
or
and
icebp
ret
sbb
shll
mov
lahf
jge
es
push
icebp
pop
sbb
sarb
arpl
negl
and
push
es
cli
pusha
pop
jle
mov
adc
test
mov
test
xor
js
addl
jecxz
push
ljmp
aam
ja
imul
sbb
jge
adc
xchg
inc
hlt
dec
sarb
fwait
add
jns
push
push
pop
sbb
adcb
jle
mov
movl
adc
xor
cmpsb
bound
add
pop
pop
pop
xor
sbb
adc
inc
xchg
mov
aam
es
nop
and
inc
lret
fwait
lock
mov
cmp
cmpsb
push
incb
out
lods
sbb
dec
test
adc
mov
cmpsl
test
jo
outsl
lods
push
jge
imul
fsubl
loope
rorl
sub
adc
mov
push
nop
and
mov
adc
inc
sub
push
pop
add
iret
stc
cmp
add
les
inc
movsb
jno
sarl
repz
mov
imul
rolb
xchg
push
xchg
or
sub
adc
aad
push
jb
pusha
aad
jg
mull
les
dec
shlb
in
out
dec
and
enter
cwtl
pushl
adc
or
cmp
sub
cld
inc
mov
aam
sar
pop
xor
adc
dec
adc
movl
lods
jne
imul
addr16
fists
jno
adc
dec
aad
jb
fstpt
aas
fcomps
xchg
adc
or
mov
out
or
mov
mov
popf
in
mov
push
adc
inc
bound
call
sti
mov
mov
clc
icebp
mov
or
add
popf
jae
sbb
sbb
jb
and
cmpsb
fsubl
push
push
cltd
lret
lods
jbe
popf
push
ret
lret
push
jp
fistl
jns
cmp
shrl
cld
inc
xchg
pop
xorl
push
int3
or
push
jb
mov
popa
cmpsl
lods
insl
and
mov
addr16
popf
lcall
xchg
leave
and
movsb
adc
jnp
mov
je
jle
ret
in
push
filds
push
out
mov
popf
lock
mov
push
inc
push
add
idivl
cld
inc
mov
fidivl
adc
ret
inc
sub
mov
int
fwait
add
lea
jae
ss
in
adc
lods
and
pop
orb
addr16
inc
in
hlt
outsl
fiadds
decb
neg
loop
jl
xchg
pop
lods
push
pop
and
adc
push
sbb
jmp
imul
xor
nop
add
divb
inc
xchg
xor
adc
dec
mov
or
rcr
cwtl
repnz
aam
je
jmp
inc
lods
mov
fisttpl
pop
dec
negl
jno
in
mov
add
outsl
sarb
sub
sahf
lret
jg
jp
cmpl
xor
hlt
sub
mov
jno
mov
aam
gs
nop
mov
daa
jl
inc
push
test
and
repz
push
mov
test
xchg
test
and
inc
inc
lea
sub
xor
shrb
or
sbb
xchg
mull
and
xchg
cmp
push
adc
or
add
mov
xchg
jl
adc
into
mov
lcall
pop
mov
cmpsl
push
add
repnz
hlt
adc
int
fimull
sub
jg
dec
lret
cmp
pop
jo
mov
jle
sti
cmp
jnp
xchg
sbb
cmp
ss
push
xchg
inc
or
jo
daa
roll
sbb
inc
xchg
jmp
cmp
in
ljmp
adc
mov
imulb
cmp
cmp
pop
mov
leave
sahf
test
cmp
or
pusha
movsb
sub
shll
cmp
notb
or
sbb
nop
roll
pushf
addl
je
movsb
mov
push
ljmp
push
pop
mov
jo
mov
or
dec
stos
shrl
inc
lret
repnz
or
cmp
lret
and
xchg
fwait
xchg
sarl
mov
in
inc
sub
mov
insl
lahf
jecxz
push
addr16
shll
mov
mov
pop
enter
mov
mov
imul
adc
stc
mov
and
dec
and
mov
and
aad
jo
mov
ret
add
dec
push
ds
or
xchg
mov
adc
pop
insl
fsubl
push
or
ljmp
notl
xor
mov
pusha
sarl
pop
inc
or
outsl
inc
out
enter
fs
pop
pop
lods
push
fistpl
cmp
inc
jge
jae
cmc
jl
mov
xchg
into
pminub
mov
dec
pop
fistpll
mov
stc
insb
fs
ds
adc
movsb
xor
jmp
xchg
orl
fdivs
add
mov
rorl
cmc
push
push
iret
ss
mov
cmpsl
dec
int
sbbb
mov
add
xchg
add
lret
sysret
fmuls
add
pushf
add
inc
stc
mov
xor
adc
xchg
sbb
in
jecxz
shlb
mov
fildl
push
test
pop
inc
mov
mov
lock
ret
push
xchg
dec
mov
push
ret
pop
mov
adc
shlb
imul
daa
ja
add
rorl
out
mov
daa
dec
inc
push
jbe
jns
pop
fmull
fcoms
outsl
or
jne
inc
scas
insb
cli
pop
bnd
movsb
loopne
mov
jns
aam
push
jno
cmc
cwtl
rcr
and
popa
and
mov
les
in
mov
int3
leave
pop
jne
cmc
adc
sub
push
xchg
mov
es
xchg
outsw
test
shlb
and
mov
imul
xchg
adc
fdivr
add
outsb
cmp
and
dec
push
data16
lock
into
es
les
sbb
inc
repnz
shlb
inc
sub
mov
fisubl
pop
push
jle,pt
fstpt
cmp
mov
cmp
and
rorb
jmp
data16
adc
xor
mov
cmp
popa
lds
mov
lods
iret
pushf
push
pop
daa
xor
mov
inc
and
mov
hlt
sti
or
popa
vmovntpd
pop
cltd
fucom
iret
xchg
xchg
insl
es
pop
adc
add
push
inc
int
dec
popa
xor
imulb
cld
sarb
cmp
hlt
insl
dec
pop
and
lahf
enter
inc
je
cmc
jnp
pop
out
adc
xor
cmp
in
mov
inc
testl
jle
xchg
mov
jg
adc
rorl
and
mov
mov
add
imul
pop
and
jecxz
loopne
cld
cmpsb
adc
pop
aam
repz
dec
movsl
outsb
imul
jl
adc
les
inc
fisttpll
mov
mov
dec
bound
push
add
jmp
xchg
lds
cmc
imul
jp
push
lahf
flds
push
in
test
icebp
jle
in
xor
jge
clc
xor
into
mov
les
mov
addb
pop
jbe
dec
inc
sub
pop
push
clc
stos
shrb
xor
pop
dec
mov
jo
dec
jno
test
lods
leave
pop
dec
pop
jo,pt
ja
rcll
mov
mov
cwtl
push
jmp
mov
movd
ljmp
push
ret
popa
xor
scas
ss
daa
pop
mov
or
dec
lods
inc
fldenv
mov
or
mov
push
push
jae
loopne
mov
iret
outsb
popf
jmp
int3
sub
mov
leave
adc
cmp
jns
mov
mov
cwtl
sti
sahf
loop
and
mov
sub
js
dec
sub
mov
popf
and
xchg
aad
test
push
fsts
xchg
imul
out
pop
fiadds
push
into
insb
jo
mov
movsb
nop
out
dec
cmp
mov
sahf
push
iret
jge
cmp
shrl
mov
mov
outsb
ficoms
jno
cmp
xchg
repz
call
mov
loopne
fwait
into
sbb
adc
mov
test
adc
jb
push
bound
bound
push
sarb
xchg
ret
movsl
adc
pop
mov
pop
data16
add
not
sub
outsl
fdivl
lock
pop
push
mov
subl
xor
fldlg2
rclb
cld
daa
dec
cltd
imull
movsl
adc
jge
dec
das
out
rcr
lods
jns
ss
aam
es
xchg
push
clc
mov
mul
sub
pop
jne
rolb
dec
lock
push
addr16
pop
pop
adc
mov
pop
ds
in
push
jno
jae
daa
dec
jo
inc
movsb
add
pop
dec
xor
cmp
in
xchg
and
arpl
xor
ljmp
mov
pop
test
sbb
xchg
mov
shll
xchg
lock
fisubs
ret
popa
das
push
mov
aad
cmpb
outsb
sub
in
sub
int
daa
nop
sbb
shr
test
scas
cmp
xchg
pop
clc
ja
xlat
movsb
adcb
movsb
std
shll
xor
insb
mov
xor
adc
pop
mov
sbb
or
jl
sbb
and
mov
adc
mov
add
xor
inc
das
xor
jo
lret
push
mov
int
rcrb
aam
test
jmp
pop
ljmp
inc
in
sbb
repnz
and
fcmovbe
jb
pop
mov
or
out
cmp
leave
test
sub
mov
sub
and
enter
stos
lcall
sbb
enter
xchg
jno
ja
cmp
ljmp
stos
das
mov
xchg
dec
xor
push
push
outsl
add
ds
pop
sarl
push
mov
test
or
jp
jl
inc
loopne
jecxz
test
push
jnp
scas
or
push
sbb
jo
iret
je
imul
leave
fsts
push
jecxz
cmp
sbb
int
or
and
gs
push
push
push
mov
mov
jecxz
sub
ret
mov
out
pop
jno
jno
sar
xchg
ss
frstor
jb
sub
in
pop
sub
sbb
fcomip
add
push
or
pop
shll
aaa
test
movsl
movsl
cld
ficomps
mov
cltd
sbbb
pop
and
adc
insl
bound
ret
push
mov
cwtl
les
lret
adc
les
fucom
cmp
adc
jge
add
sti
xchg
decb
mov
mov
sub
mov
adc
cmp
sbb
decb
lds
out
mul
inc
int3
cmp
test
rcl
inc
sbb
ja
or
test
adc
pop
popa
mov
pop
dec
and
jns
or
lds
fsubrs
addb
or
xchg
pop
sub
clc
mov
xchg
add
out
jbe
lock
inc
mov
out
fisttpll
fstl
pop
outsl
xchg
add
adc
repz
das
pop
sti
stos
mov
loope
ret
cmp
xorb
inc
adc
ljmp
sub
in
pusha
aam
cltd
cmpsb
adc
fnsave
adc
cmp
in
mov
sarb
pop
push
int3
push
cmpsl
push
mov
ret
pop
popf
jno
xchg
ret
fimuls
adc
pop
push
jbe
fstl
xchg
or
mov
jp
int
cld
push
mov
mull
push
xchg
sbb
xchg
mov
mov
push
lock
gs
mov
scas
pop
cwtl
push
add
push
iret
dec
sub
cmpsl
bound
bound
mov
aas
xor
cmp
nop
lcall
sbb
and
fdivp
fistl
xchg
push
jg
mov
push
aas
adc
inc
pop
jb
mov
mov
sbb
cs
dec
aad
xchg
ror
or
xor
adc
testb
dec
mov
jae
push
ret
push
test
lret
jb
je
pop
loop
mov
push
push
sbbb
loopne
fxch
les
pop
movsb
and
stc
mov
jo
fidivrl
sub
addb
adc
jle
cmc
mov
out
inc
mov
dec
clc
sub
jne
test
jb
pop
add
mov
mulb
cwtl
or
sub
inc
push
pop
xlat
fdivl
insl
dec
ficomps
inc
sub
jne
scas
scas
lret
inc
cmc
add
push
dec
push
mov
fadd
lock
stos
push
in
fs
inc
addl
fs
jns
dec
int3
test
add
jns
lahf
sbb
repnz
ds
xor
ret
clc
in
bound
and
call
loopne
stc
out
sub
popw
push
dec
cwtl
leave
push
mov
into
push
adc
popa
or
sti
pop
push
mov
fwait
cmpsl
and
je
or
pop
pop
addb
or
push
popf
and
mov
sub
pop
outsb
fisttps
jno
adc
push
aas
push
ret
inc
jno
in
cmp
mov
movb
sub
mov
cs
dec
cmp
and
sbb
xchg
mov
sti
sbb
pop
sub
lcall
xchg
and
inc
xlat
rolb
xchg
rorb
cmpsb
cmp
and
sub
test
dec
pusha
aad
xchg
jbe
dec
test
jb
xchg
mov
out
pop
mov
cwtl
ja
xchg
ror
pop
mov
push
jp
pop
rcl
push
jbe
gs
dec
imul
mov
add
jno
xor
cmpsl
jge
icebp
xchg
sub
enter
adc
mov
jecxz
mov
shll
add
pop
lods
dec
xchg
inc
movsl
mov
jbe
or
push
inc
dec
sub
je
stos
sbb
jmp
cwtl
fs
inc
pushf
xchg
subb
aam
and
test
pop
enter
imul
test
inc
push
inc
pop
test
lcall
repnz
xor
adc
adc
jns
mov
loop
loope
cmp
bound
and
cmpsl
inc
scas
or
adc
stos
mov
fadds
add
sarl
int
jnp
jle
js
je
xor
push
or
xchg
sbb
jmp
movb
stc
in
lods
push
stos
xchg
or
mov
sbb
dec
pop
incl
cwtl
push
popa
mov
xchg
sub
test
or
dec
sahf
and
sbb
or
loopne
inc
push
call
les
mov
je
in
cmpsb
add
jle
mov
mov
lret
push
sub
sub
mov
aaa
ss
stc
dec
imulb
out
leave
adc
cmpsl
push
aad
scas
add
jae
xchg
push
xchg
adc
hlt
sbb
cltd
add
lea
fmuls
mov
push
nop
gs
mov
xor
cmc
pop
jae
aam
push
lcall
loopne
fidivrl
sbb
ljmp
inc
fwait
sbb
shll
push
in
mov
out
daa
pop
push
jmp
loop
repz
jle
js
mov
sub
lcall
xor
sbbb
pop
bound
fbld
xor
notb
xchg
ljmp
es
inc
sbb
dec
scas
movsl
hlt
in
mov
js
stos
sbb
xchg
jg
and
jnp
jmp
aad
xlat
mov
jmp
push
cwtl
neg
lods
jbe
out
push
xor
ret
call
xchg
xchg
in
lods
inc
mov
iret
add
xorb
lahf
daa
xor
dec
add
xor
outsl
stc
insl
fisubrs
cmp
inc
push
popf
ja
cmpsl
jae
jb
dec
xor
loopne
inc
and
adc
mov
or
add
std
test
cmovo
push
or
cmp
popf
sbb
adc
nop
into
mov
sbb
out
mull
pop
int3
movsb
clc
jns
loop
add
pushf
sti
push
cmp
add
add
mov
add
das
and
popf
imul
jns
jg
sbb
mov
fcoms
fsubs
push
mov
scas
or
int3
dec
iret
popa
jno
sub
mov
lea
sbb
adc
push
cwtl
cli
dec
dec
jbe
inc
dec
lods
repnz
jb
sbb
cwtl
das
pop
es
push
movsb
out
clc
cmp
in
push
out
arpl
pusha
cmp
loope
icebp
lds
mov
pop
outsl
inc
xchg
adc
add
push
jp
std
imulb
call
jp
cvtdq2ps
std
ja
sarb
rcrb
stos
dec
shll
stc
stc
hlt
mov
imulb
adc
cmpsb
pop
insb
rcr
lock
xlat
aam
fistl
test
xor
pop
push
cmpl
pop
xchg
pop
sbbb
sahf
gs
jmp
push
and
call
cmp
ds
mov
xor
dec
jge
sbb
jns
push
ret
mov
test
lock
cmp
pop
jo
sub
ret
cli
xor
adc
out
xchg
sbb
adc
adc
jno
ds
loopne
mov
sahf
mov
cmpsl
pushf
jmp
inc
lret
pop
pop
add
and
cs
ret
addr16
sub
xor
sub
sti
daa
outsl
aaa
int3
sub
mov
jl
int3
push
test
lea
adc
pop
fsubr
cmpb
sbb
shr
test
mov
sbb
adc
pop
or
xchg
pop
icebp
mov
sub
cli
xchg
pop
lock
in
cmp
jo
mov
xlat
aam
insb
sub
fnstsw
sbb
push
xchg
mov
fbld
jne
cmp
cs
test
ret
sahf
xlat
adcl
out
jge
push
jmp
outsb
mov
out
lock
mov
push
sub
int
popf
dec
inc
dec
inc
and
test
mov
xor
add
inc
jl
gs
or
test
int
fadds
lcall
rclb
mov
iret
inc
add
aam
test
arpl
add
out
jmp
mov
lahf
and
adc
rolb
and
lea
andb
xchg
fdivl
inc
mov
cs
movsb
aad
fcomp
lcall
ss
std
sbb
adc
push
add
inc
lods
push
popa
movsl
dec
xchg
call
lret
insb
pop
mov
xor
ja
mov
rolb
jle
jmp
mov
or
imul
and
jae
sbb
push
imul
adc
fisubrs
sub
fdivl
mov
aas
mov
stc
mov
add
lret
jmp
mov
cs
and
icebp
adc
mov
mov
or
fdivrp
sahf
cmp
and
push
orl
loope
pop
mov
bound
int3
fcomi
adc
sub
inc
cmc
ficoms
hlt
xchg
jmp
sbb
push
mov
and
mov
xor
aam
flds
mov
dec
xor
mov
adc
mov
add
xor
adc
and
sub
loopne
sti
jecxz
out
cwtl
int
popf
jno
shlb
adc
jno
add
test
mov
stc
int3
cs
mov
xor
jns
movsl
scas
inc
dec
test
dec
xor
inc
dec
lods
int3
cmp
or
imul
inc
lret
sub
jle
ss
sub
xor
inc
cli
nop
scas
mov
cmpsl
xor
mov
pop
mov
aas
rcrb
adc
jno
into
or
and
cmp
or
mov
mulb
aaa
cmp
repnz
cwtl
dec
insl
xchg
ja
out
adc
cmp
dec
push
cmp
insl
adc
sub
aam
aas
mov
xchg
push
or
ljmp
out
fcomps
fdivl
add
dec
push
or
cmpb
in
sub
xor
dec
movsb
movsb
sub
and
sub
cmpsl
or
in
mov
jmp
andl
lods
push
and
add
and
aas
mov
or
pusha
mov
inc
fnstcw
inc
jno
push
pop
dec
scas
imul
aad
xor
inc
push
out
xor
cmp
inc
scas
jl
sub
or
push
push
nop
inc
push
mov
pop
sbbl
fdivs
pop
cs
aaa
cmpsb
cmp
icebp
addr16
mov
decb
ljmp
push
sub
faddl
std
in
inc
mov
repz
bswap
lret
inc
mov
iret
test
jle
push
xchg
dec
movsl
je
imul
lods
cmpsl
dec
or
cld
lret
jns
out
and
loope
pop
dec
sbb
mov
adc
fiaddl
inc
std
clc
stc
imull
adc
fimuls
insb
jno
jle
out
inc
adc
or
inc
pop
pop
dec
dec
out
mov
jg
shl
adc
jo
sbb
aad
imul
dec
xor
mov
lock
fldt
jae
int
add
pushf
sub
out
dec
in
mulb
andl
push
and
bound
out
cmp
and
or
loopne
push
inc
mov
lret
lock
pop
push
inc
mov
mov
sar
mov
fisubrs
and
in
jp
mov
mov
ss
stc
inc
fidivl
xchg
clc
xchg
xchg
push
cld
cltd
cmp
push
sub
stc
addr16
push
xlat
loop
lcall
mov
lea
or
rol
mov
mov
xchg
mov
push
cmovle
sbb
mov
sub
jmp
inc
or
out
jecxz
fwait
cmpsl
jb
cvtdq2ps
xchg
push
sub
xchg
movsb
jecxz
cmc
loopne
popa
jno
pop
dec
test
mov
jns
aaa
cmp
dec
fwait
and
sub
repnz
adc
shrl
divl
inc
test
into
fiaddl
pop
enter
jge
repnz
xchg
into
lods
aaa
xchg
xchg
xor
dec
mov
loope
popf
int3
pop
mov
in
mov
pop
dec
aas
bound
mov
xchg
ljmp
pop
fdivl
inc
rcll
ficoml
aaa
xchg
inc
es
loop
xor
sbb
lret
mov
mov
fstp
pop
repnz
or
adc
mov
pop
movsl
fisubrl
push
jbe
stos
repnz
inc
dec
mov
sub
cmp
pushf
and
sub
arpl
jno
lods
enter
lahf
aas
add
mov
ds
cmp
inc
cli
dec
adc
mov
or
pop
and
push
subl
rclb
fwait
push
mov
dec
inc
arpl
add
sbb
lret
fwait
scas
insb
fstpl
lods
push
mov
and
rcll
push
inc
fidivrl
xchg
sarl
test
hlt
std
rcll
repz
jge
inc
xchg
push
mov
jb
in
pusha
jmp
outsb
inc
inc
cs
xor
and
push
cmp
xor
push
sbb
cmp
mov
push
sbb
pop
mov
out
mov
sbb
dec
test
lcall
add
sub
cmp
pop
dec
dec
nop
int
jp
dec
subl
push
ficoml
jbe
adc
xchg
mov
fiadds
jae
inc
cltd
stc
loope
adcb
add
pop
and
push
hlt
add
subl
into
add
in
mov
ljmp
pop
mov
add
sbb
movsb
mov
cmp
out
cs
and
xchg
and
cmpsb
pop
cmpsl
aas
into
cmpl
add
dec
xchg
pop
loope
es
shll
fistps
ljmp
pop
jno
movl
jb
sub
push
push
neg
sub
adc
adc
xchg
shlb
pop
or
bound
ss
pop
push
xor
dec
sub
movsl
add
scas
movsb
pusha
xor
mov
dec
popa
adc
xor
mov
sub
add
sub
std
shl
mov
mov
out
sbb
cmp
cltd
mov
psubusb
jp
jno
add
mov
ljmp
jb
ja
adc
fisubrl
mov
lret
xor
lds
test
int
fistpl
push
and
dec
fildl
cmpsb
jmp
adc
xchg
loop
lea
cmpsb
and
loopne
and
lods
ror
sar
cmp
movsb
fsubrp
sbb
inc
mov
subl
pop
fidivl
xchg
xor
outsb
rcll
pop
jno
dec
dec
sbb
jecxz
fildl
in
icebp
mov
xor
hlt
jns
ss
pop
ret
lds
sti
enter
mov
movsl
fwait
cli
sbb
int3
adc
pop
mov
pop
lea
mov
outsb
inc
xor
mov
sub
decl
jmp
inc
jae
pop
cmp
rdpmc
inc
xchg
and
imul
movsl
xlat
cwtl
jnp
mov
fidivrs
mov
cmpsl
or
repnz
sub
pop
push
lahf
mov
out
dec
ljmp
fsubs
call
je
mov
aad
mov
pusha
pop
rcrb
daa
mov
mov
cld
enter
sahf
xor
dec
adc
pusha
push
mov
and
shll
sbb
sti
mov
int
outsl
mov
xor
js
je
and
mov
imul
add
fst
aas
pop
insb
xchg
push
outsl
mov
lods
inc
xor
lods
cmc
negb
fisubrs
push
add
mov
andl
push
dec
xchg
pop
mov
inc
sbb
sub
push
cmc
fsubrl
push
xchg
fs
enter
mov
sbb
jbe
jo
mov
test
shlb
ret
inc
scas
ljmp
inc
lods
or
dec
or
icebp
and
loope
pop
roll
jne
stos
test
lea
rolb
add
jl
push
jecxz
cmp
lds
mov
adc
cmp
test
jb
and
dec
mov
insl
into
icebp
and
add
das
shl
ret
fisubl
push
adcb
dec
push
fdivs
mov
inc
mov
stos
jg
mov
nop
jmp
push
jbe
lahf
fmuls
es
enter
lock
lahf
sub
add
adc
imul
rcr
and
ds
xchg
imul
cltd
push
insb
jb
adc
pop
add
cmp
test
stos
xchg
mov
jb
ds
push
cmp
repnz
movsl
call
fimuls
jle
fistpll
jnp
gs
iret
cmp
mov
push
lods
ficompl
bound
jmp
inc
or
ja
es
movsl
cmp
outsl
movsb
scas
mov
movl
mov
cmp
cmp
inc
jge
loope
cmp
or
xchg
mov
cs
arpl
mov
sbbb
adc
movsl
mov
mov
pop
stc
cmp
sahf
xor
push
cmp
dec
cwtl
jle
mov
add
and
dec
inc
imul
int3
jp
jl
sub
add
cmp
sub
sub
ljmp
pop
sbb
add
mov
js
cmp
rorl
or
cmp
loopne
push
add
jp
adc
mov
cmpsb
dec
daa
punpckhdq
mov
gs
xchg
sbb
dec
jb
push
adc
cmp
call
mov
pop
aad
pop
push
xor
xor
and
mov
xchg
orl
jl
in
mov
pop
js
pop
out
enter
or
push
jmp
in
mov
nop
mov
cld
fisubrl
xchg
shll
dec
test
gs
sbb
repnz
xchg
rcll
mov
std
cwtl
fmul
xchg
or
jnp
fwait
jb
inc
mov
in
inc
stos
stc
xor
mov
cwtl
dec
cwtl
or
stc
add
mov
or
orl
pop
mov
jl
icebp
testb
test
cmp
dec
mov
cld
push
push
cs
out
out
push
movsb
add
xchg
and
je
fimull
int3
leave
shr
inc
dec
jp
iret
fmulp
push
fcmovne
xchg
outsb
push
push
sub
jg
push
xlat
in
jae
outsb
xchg
gs
inc
loopne
lods
pop
aam
rolb
mov
mov
mov
sbb
sahf
cli
mov
or
xchg
call
mov
inc
jns
ficoms
sbb
adc
test
call
add
add
dec
loop
outsb
push
dec
hlt
pop
xchg
cwtl
cld
popf
sahf
fwait
aaa
shlb
aam
adc
leave
mull
loopne
dec
sbb
pop
push
inc
test
cwtl
mov
xor
and
scas
sbb
dec
lods
inc
ljmp
lea
call
jo
int3
pop
sbb
add
inc
test
jo
jmp
call
mov
iret
jp
sub
xchg
sbb
xchg
daa
xchg
std
and
and
scas
es
pop
dec
add
add
jg
scas
popa
in
aaa
mov
sbb
int3
mov
and
mov
lea
dec
mov
sub
jbe
jbe
push
hlt
addr16
jge
cmp
aam
push
scas
loope
outsl
stos
scas
mov
in
pop
pop
lds
or
cmc
jecxz
add
les
xor
adc
out
cwtl
or
in
lcall
pop
mov
jo
sahf
test
lods
fsubrl
ret
stos
sbb
cld
lods
cwtl
dec
add
push
jmp
add
imull
sub
push
sti
pushf
mov
cmp
pop
les
pop
pop
mov
mov
add
ja
xchg
dec
mov
dec
jl
roll
pop
std
fmuls
add
insl
fwait
test
in
dec
insb
mov
in
dec
mov
dec
push
repnz
adc
into
push
outsb
shlb
cmpsb
dec
push
sarb
mov
mov
sbb
jle
les
push
xor
jo
mov
pop
and
xchg
mov
jecxz
rolb
push
in
inc
mov
test
movsb
xor
inc
jl
sahf
jle
arpl
mov
inc
sti
mov
and
sub
xchg
or
mov
jno
jns
lods
pop
out
fldenv
js
sub
das
cmp
sbb
lcall
xchg
rclb
dec
cltd
rolb
in
jbe
xchg
sarb
and
pop
ds
mov
inc
xchg
xor
mov
and
out
mov
mov
or
sub
cmp
xchg
into
pop
cmp
sahf
clc
sub
xchg
fwait
dec
test
addr16
stos
cmc
repz
adc
cmp
lea
stc
lods
add
sbb
out
lcall
rcrb
mov
nop
xor
sbb
aam
adc
xor
sbb
push
xor
pusha
pop
test
push
pop
clc
ja
xor
or
fwait
sti
rol
jae
divl
int
mov
dec
adc
jae
aaa
or
out
inc
outsl
fiaddl
jbe
imul
or
mov
push
dec
and
xchg
and
adc
inc
cmp
fcoml
push
je
push
add
mov
int3
xchg
sub
cs
adc
xor
or
lcall
jle
in
jle
jnp
xchg
xchg
aaa
jns
scas
sub
stos
mov
lea
testl
aam
and
lods
jb
xchg
fwait
or
mov
fs
sbbb
push
rolb
in
adc
pop
ja
jecxz
int
or
jb,pt
xor
loope
repz
push
cld
mov
or
and
jbe,pn
dec
test
in
sub
adc
lret
repnz
cld
pop
xchg
cmp
mov
shrb
jne
sbb
cmp
arpl
lock
cmpsb
jno
aad
xor
and
sbb
inc
xchg
pop
les
mov
dec
push
int3
add
mov
add
or
stos
jmp
jle
xchg
push
aaa
cmpsl
jmp
popf
dec
or
jnp
xor
sbb
xor
dec
dec
popf
xor
mov
cld
mov
push
jae
or
sub
add
adc
in
xchg
pop
popa
jg
fadds
pop
and
lret
sbb
push
mov
adc
test
xchg
add
clc
push
or
add
jg
leave
imul
pop
fisubl
sbb
and
xchg
mov
stc
fiaddl
sbb
ja
cli
int
pop
movsl
xchg
inc
mov
xchg
jo
mov
lods
js
lods
fildll
loop
lods
pop
xchg
jnp
pop
fldcw
add
and
jle
push
sbb
sub
pop
gs
inc
sbb
leave
mov
add
orl
adc
pop
pop
shlb
aad
inc
fisubl
mov
push
xor
push
push
adc
sbb
shlb
push
shl
push
adc
pop
sub
or
sub
sbb
xor
gs
jl
lret
pop
jp
test
xor
pusha
fldl
lahf
fsubs
mov
cmp
fcmovnu
mov
jecxz
add
jbe
mov
dec
mov
lcall
enter
fdivl
xchg
xchg
test
repz
add
push
cmpsb
xchg
xchg
fwait
sub
mov
movsl
fldt
fisubl
cwtl
popf
aas
cs
aam
mov
mov
cmp
test
dec
adc
jge
clc
and
sub
stos
dec
cmpsb
sub
jae
and
sbb
xor
jg
push
mov
cwtd
xor
lock
gs
push
mov
mov
push
inc
jecxz
test
lods
or
and
test
xchg
inc
out
in
lea
rcrl
sti
pop
or
mov
aam
mov
adc
daa
pop
xor
clc
test
dec
loop
stos
adc
adc
sti
stos
cmpsb
repz
in
push
pusha
in
fdivrs
cs
jg
push
mov
pop
mov
fidivl
cmpsl
pop
insl
push
sub
xchg
filds
and
or
sbb
or
std
sarb
inc
and
inc
cmp
test
inc
cmpsb
test
dec
pop
mov
cld
test
adc
xor
inc
inc
and
icebp
dec
jge
mov
andb
rorb
add
fld
xchg
loope,pn
add
cmp
cmpsl
repz
imul
ret
pusha
ds
xchg
add
in
adc
lock
outsl
fsubl
fcmove
ret
xchg
outsl
add
jle
fisttpl
inc
pop
jge
jbe
filds
adc
mov
hlt
loope
imull
int3
loopne
jmp
cmpl
stos
mov
jle
mov
stos
pop
je
notb
or
jne
lcall
mov
mov
adc
cmp
sbbl
test
inc
repz
loopne
sbb
loope
fwait
inc
xor
or
out
outsl
inc
sbb
sbb
bound
fbstp
mov
out
mov
popa
fcompl
or
arpl
or
leave
jno
int
add
inc
cmpsb
add
xchg
je
out
cltd
add
pop
call
popf
xchg
mov
je
jne
xor
cld
dec
fldl2e
movsb
jmp
int
cmc
dec
mov
push
in
stos
stos
sar
mov
inc
push
gs
push
imul
std
insl
xor
dec
mov
imul
pcmpgtd
pop
sub
icebp
mov
mov
clc
jmp
jge
adc
scas
or
mov
mov
xchg
jg
loop
jne
pop
jne
shlb
stc
sbb
loop
inc
xchg
inc
mov
xlat
pop
xor
ffree
adc
cmpsb
or
jbe
pop
iret
sub
mov
out
cmc
roll
xor
jp
lods
mov
and
pop
or
out
dec
xor
xchg
jecxz
iret
mov
inc
sahf
or
pop
mov
cmp
jne
inc
cmp
sub
aad
stos
bound
jnp
into
das
movsb
mov
icebp
xchg
in
cmc
pop
xchg
jp
mov
cwtl
xor
and
ja
adc
movb
cmpsb
lods
lods
and
ds
dec
push
lock
addr16
daa
xchg
jbe
xlat
mov
cmpsb
sub
and
add
pop
push
in
sub
orb
jno
aas
into
add
add
mov
lds
out
jmp
pop
sbb
dec
adc
ja
nop
push
or
inc
push
dec
loop
in
imul
xchg
test
inc
stc
das
mov
mov
xchg
jbe
xchg
or
in
pop
in
or
push
sub
cmp
cmp
and
test
fdivl
mov
jmp
or
popf
shrb
fists
cmp
mov
sub
xchg
shrb
bound
flds
lret
push
jbe
mov
icebp
lods
pop
out
dec
xor
jp
adc
cmp
hlt
mov
lahf
pop
dec
xchg
dec
cmp
xor
add
jl
fistps
mov
loop
iret
arpl
jne
mov
pop
inc
dec
jg
inc
cmpsb
sbb
push
cs
xchg
pop
in
mov
ret
lock
pop
movb
mov
sbb
xchg
mov
insb
shl
int
mov
and
outsb
jb
into
insl
mov
aam
into
enter
push
xchg
cmp
pop
cmp
arpl
push
lret
xor
and
add
mov
xlat
cmp
xchg
cld
inc
repz
push
addr16
scas
leave
stos
cld
sub
inc
fsubs
mov
sub
mov
mov
sti
cmp
pop
or
mov
fsubrs
xchg
movsl
cmp
sbbl
sub
out
adc
movsb
xorb
xchg
iret
mov
push
inc
in
push
movsl
mov
jl
test
and
jle
sar
mov
das
cmc
lock
push
add
mov
pusha
stos
cwtl
sub
nop
push
adc
adc
mov
inc
aaa
push
dec
cmp
call
mov
xchg
and
xor
scas
outsl
adc
or
sahf
and
cs
pop
mov
inc
std
ss
test
ss
cli
or
mov
es
lahf
push
and
mov
sarb
push
data16
test
in
cmp
jae
cmp
jns
xchg
mov
push
out
mov
lcall
dec
sbb
sbb
xchg
imul
or
loop
pop
inc
rcrb
xor
lret
and
add
pop
ret
pop
rclb
xchg
out
fsts
cmpsl
jnp
jno
sti
add
loope
ficoms
jne
es
push
flds
adc
or
jge
xchg
add
int3
xor
add
dec
jecxz
lret
push
jge
cld
jns
movsb
arpl
add
add
popa
repnz
mov
rolb
out
lock
shll
or
js
test
sub
mov
and
data16
or
sbb
lahf
int
adc
inc
idiv
sub
adc
add
ds
mov
test
sbb
das
nop
les
in
sti
adc
sbb
dec
sbb
js
jne
inc
into
fcoms
adc
jns
icebp
test
fldcw
std
adc
rcrb
mov
shl
fst
pop
mov
mov
ffree
dec
xor
faddl
cmp
push
cmpsl
mov
sub
adc
sub
jae
dec
cmpsl
sub
repnz
mov
cmp
add
popa
jge
stos
dec
inc
mov
sbb
mov
inc
or
cmp
mov
xor
shlb
rcrb
popf
adc
into
or
dec
pop
mov
sub
lods
call
or
bound
inc
ljmp
shr
add
dec
insb
cmp
ret
sbb
sub
cmp
pushf
stos
shlb
pop
je
xchg
xorb
jl
cli
and
jne
fimuls
jo
push
jg
ja
stc
and
adc
sbb
aaa
fs
add
mov
movsb
push
dec
in
jbe
push
int
or
lods
mov
jge
insl
insb
pop
cmc
jg
cmp
push
test
and
mov
dec
lock
aas
xchg
repnz
into
add
lret
mov
dec
popa
dec
dec
scas
aad
daa
mov
scas
flds
push
mov
icebp
add
flds
out
popa
jo
or
mov
fistpl
mov
adc
sbb
xchg
pop
dec
pop
push
jg
outsl
sbb
imul
xlat
pop
aaa
jo
push
imull
sbb
lcall
jns
push
and
xchg
nop
stc
push
enter
aaa
fwait
into
push
daa
dec
xchg
mov
mov
dec
ja
lea
in
push
ds
aam
clc
mov
in
pop
xlat
push
fildll
xchg
mov
movsl
int3
push
fldt
mov
dec
mov
cmpsb
bound
pop
das
xor
add
cmc
sub
jmp
inc
movsl
cld
or
out
pop
jno
inc
test
dec
in
xchg
xchg
into
cmpsb
pop
mov
lds
fcomps
inc
mov
lret
xchg
dec
jl
and
jecxz
sbbb
dec
aad
jp
adc
sub
push
xchg
mov
mov
push
and
or
mov
cmpsb
mov
push
movsl
icebp
mov
sub
adc
loopne
fadds
lods
inc
dec
push
call
fimull
mov
dec
jnp
out
add
jmp
add
sub
jle
sbb
nop
mov
movsw
ss
or
ljmp
pop
pop
js
mov
push
mov
add
cwtl
clc
out
out
ss
sbb
mov
call
xlat
les
call
sahf
push
add
stos
xlat
aas
cmp
out
xchg
js
jge
pop
sub
xchg
insb
das
sbb
jno
push
insb
cli
cmp
ret
pop
sahf
sbb
lret
bound
push
out
lock
adc
fidivrs
into
xor
add
cmp
jns
mov
xchg
jo
hlt
inc
andb
push
ja
push
push
push
ficoml
aad
sub
xchg
lods
xchg
or
nop
or
lahf
and
test
push
or
in
sbb
pop
mov
bound
aas
popl
jae
pushf
push
fcompl
ret
inc
cltd
xchg
fcom
sbb
nop
xor
dec
into
scas
xchg
mov
inc
daa
jl
cmp
cmp
test
movsb
inc
addr16
or
xchg
mov
xchg
aas
sub
mov
int3
jp
cmp
lods
popf
stos
push
push
xlat
mov
cmp
jno
in
cwtl
and
aaa
pusha
ret
xchg
or
insl
and
adc
cmp
out
add
nop
mov
push
xor
adc
fstpt
shrb
dec
or
jne
pusha
test
or
ret
ja
mov
cmpsb
push
fucomp
dec
mov
xchg
jge
xchg
dec
xchg
mov
in
imul
cmpsl
xchg
dec
aaa
dec
mov
stc
ss
fs
mov
jae
ret
cld
mov
sarl
ss
in
sub
and
push
sarb
js
add
daa
xor
dec
inc
mov
psllw
std
sbb
xchg
lea
sbb
xchg
sub
insb
addr16
dec
jmp
xchg
dec
pop
adc
mov
cli
inc
jae
es
stc
stc
jns
adcl
sbb
in
xlat
std
adcb
mov
jnp
stc
aam
mov
xchg
cmp
movsl
dec
mov
jns
or
adc
jl
aas
push
ja
push
jb
push
cmp
adc
ror
pop
out
ja
pop
mov
mov
nop
inc
mov
in
in
dec
xchg
xchg
push
popf
or
imul
mov
sub
subl
je
clc
sub
mov
loopne
mov
dec
mov
add
push
push
and
dec
repz
shl
movsl
mov
push
cmpsb
mov
testb
push
addr16
cld
fidivl
dec
into
in
push
add
and
bound
rolb
jl
das
adcl
jge
xchg
ja
sbb
sahf
cmp
mov
or
test
mov
scas
sub
int3
adc
imul
leave
cmpsb
jmp
and
in
pop
cwtl
add
and
pusha
or
mov
push
dec
inc
call
sarl
jb
fs
clc
test
mov
mov
sub
sub
ret
daa
rcrl
test
and
outsl
pop
lods
mov
mov
je
jo
into
mov
ficoml
bnd
lods
pop
movsb
dec
inc
jns
xchg
rcl
add
sbb
popf
push
movsb
dec
push
mov
xchg
sub
and
jns
dec
xor
scas
push
xchg
dec
pop
add
mov
cwtl
cmp
or
daa
dec
inc
jae
adc
loop
sub
test
mov
loop
push
xor
adcl
fdivrl
sti
and
mov
lcall
ficoml
xchg
mov
prefetch
xor
dec
imulb
or
mov
addr16
push
out
jnp
adcb
xlat
sti
data16
push
imul
inc
add
decl
insl
dec
jne
push
push
ret
addl
push
sub
mov
fistps
loopne
jno
mov
shrl
loopne
dec
jp
repnz
mov
outsl
inc
jo
mov
loop
lret
imul
stos
cs
imul
jb
sbb
rorl
push
icebp
cltd
cmp
movsl
dec
fwait
jl
je
sbbb
mov
mov
xchg
nop
lods
bound
xor
cli
jne
jnp
sub
dec
mov
movsb
aas
cmp
push
or
inc
pop
push
insb
mov
icebp
rclb
cmp
js
and
ds
pop
sar
lock
je
sbb
sub
into
adcb
push
adc
loope
xor
xchg
rorl
lds
xor
cmp
addr16
push
lock
in
outsb
or
pop
outsl
outsb
mov
arpl
pop
push
dec
in
lds
dec
sbb
cli
mov
dec
nop
sti
repnz
mov
cmc
aam
shll
sbb
scas
mov
out
mov
repnz
roll
pop
inc
xor
dec
out
sbb
sub
xchg
shlb
cmpsb
jo
daa
mov
sub
inc
repnz
cs
rorb
inc
movsl
jae
mov
sti
aad
add
out
dec
in
dec
movsb
popa
out
stc
rcrl
test
repz
push
push
push
aam
inc
mov
pop
enter
and
adcb
out
adc
mul
jb
sub
lcall
clc
cmpsb
jo
hlt
rclb
xchg
dec
pop
neg
js
stos
dec
or
shlb
sub
movsl
out
mov
fnclex
jg
jno
sbb
in
lds
test
pop
jbe
mov
pop
daa
mov
jle
out
lahf
enter
push
jbe
add
cmp
xchg
pop
mov
pusha
dec
push
fs
lock
fwait
cmc
xor
in
out
ret
mov
jnp
add
or
push
sbb
adc
fs
lea
inc
jae
jae
in
out
testl
jl
jl
adc
jp
loopne
jl
fsubl
pop
rcrl
jb
adcb
jp
sub
lret
xor
lds
cmp
shl
and
stos
mov
int
test
mov
xchg
xlat
mov
pmaxub
adc
xor
mov
loopne
movsl
and
test
imul
nop
xchg
outsl
stc
gs
mov
pminub
test
stc
fiaddl
leave
and
pop
mov
repz
popaw
outsb
lock
sbb
add
xchg
cwtl
rclb
rclb
imulb
sbb
dec
sti
xor
addl
sub
xchg
addr16
dec
iret
jmp
nop
mov
icebp
das
xchg
lea
xchg
lea
or
jp
cmpsb
mov
ret
insl
cld
push
cmp
enter
xchg
push
inc
pusha
ret
mov
pop
mov
push
inc
iret
cwtl
fwait
dec
mov
rcll
push
enter
add
inc
pop
lcall
jmp
mov
int
cwtl
lock
sahf
add
add
add
adc
mov
jne
lea
and
dec
ja
mov
xchg
jnp
pusha
or
add
sub
aam
mul
orl
and
stos
add
call
jo
dec
push
cmc
mov
pop
fisubl
loope
loop
std
imul
mov
push
fwait
jmp
call
pop
fsubr
pushf
inc
mov
push
jge
mov
xchg
push
lcall
or
arpl
das
jb
sub
in
arpl
test
out
lea
inc
in
jle
test
xchg
test
dec
shrl
lret
fstpt
push
out
jbe
incl
das
jg
test
or
cmp
stos
insb
mov
push
cmp
mov
jge
and
loopne
xchg
cmc
add
aaa
xor
xor
iret
xor
out
sbb
dec
or
arpl
push
xchg
cs
icebp
adc
jns,pn
outsl
cltd
nop
push
pop
int
cmovp
xor
jp
arpl
bound
imul
mov
add
rorb
orl
in
jne
dec
test
repnz
pop
fsubr
clc
aaa
adc
lret
adc
mov
and
imul
push
test
lcall
mov
cmp
xchg
popa
in
pop
pop
movsb
decb
js
push
push
outsb
jnp
mov
iret
mov
mov
push
sbb
mov
stos
pop
roll
aaa
xchg
inc
insl
ror
in
je
pusha
xchg
sub
push
andl
outsl
int
aad
jecxz
movsl
es
sub
mov
enter
daa
jb
out
cmpsb
sub
shlb
push
mov
aam
jno
cltd
pop
jge
pop
outsl
bound
push
outsl
vcvtss2sd
push
mov
mov
enter
movsb
fcoml
or
stc
mov
push
sub
addl
sub
adc
enter
pop
xchg
or
xchg
add
jno
out
and
xor
or
fsubl
hlt
xchg
movsl
gs
pop
push
sbb
push
insl
adc
sbb
bnd
pushf
addr16
adc
mov
cmp
or
jns
mov
divl
adc
dec
xchg
outsb
mov
pusha
test
jge
gs
jge
stos
adc
fisttpl
mov
inc
loope
ret
sub
scas
movsl
pop
insl
xlat
in
enter
rcr
mov
cmp
jecxz
sbb
adc
jecxz
mov
and
or
stos
xchg
or
dec
shrl
jnp
mov
sbb
int3
arpl
push
insb
aaa
sub
xchg
dec
add
popa
adc
enter
xchg
xor
lea
sbb
leave
push
xchg
std
je
hlt
outsb
jnp
test
ss
dec
popa
mov
or
cmp
jmp
sbb
dec
ret
pop
and
lock
xchg
mov
fnsetpm(287
test
sbb
cld
xchg
bound
notb
jge
icebp
ret
stos
cld
pushf
mov
mov
dec
or
pop
js
add
sbb
outsl
cmpsl
sbb
and
inc
push
imul
faddl
shrb
rcrb
add
push
adc
testb
xor
jle
push
push
adc
dec
jl
xor
cmp
add
out
add
repz
jge
call
popf
sub
push
sub
ljmp
xchg
cwtl
cmp
or
mov
jb
mov
push
insb
iret
mov
cmp
movsl
jl
mov
jbe
mov
mov
pop
inc
or
push
adc
cwtl
jb
xchg
sbbl
arpl
subb
sub
int3
pop
bsf
add
dec
idiv
adc
sbb
inc
stc
push
xlat
sbbl
mov
das
or
ret
push
pushf
test
push
mov
push
test
aad
icebp
pop
in
xchg
aaa
cmpsl
insb
ljmp
inc
fisttpll
subl
and
mov
cmpsl
mulps
pop
mov
test
xor
add
mov
jb
inc
adc
dec
inc
cs
dec
sbb
add
dec
or
pop
jmp
inc
imul
xlat
add
js
add
insl
std
lock
loop
mov
dec
loopne
or
xor
adc
cmp
cmp
xor
ja
or
sub
mov
xchg
mov
xor
xchg
inc
mov
out
xor
xchg
movl
mov
leave
mov
pop
jae
add
cmp
mov
inc
scas
xor
adc
mov
jle
test
cmpsb
pop
xchg
jo
aaa
mov
cltd
cmp
enter
xor
stos
xor
add
int
mov
movsl
je
fnsave
add
mov
idivb
cmp
jg
dec
dec
push
sub
rorl
xchg
lock
or
jb
into
outsb
sbb
das
inc
mov
cmpsb
jb
inc
cmp
add
jae
orb
std
cmp
out
cli
out
sahf
gs
outsl
xor
mov
and
lds
in
adc
cmp
rclb
pop
loope
fcmovnb
xchg
sub
and
mov
rorb
movsb
pop
sub
cmp
and
lcall
mov
sahf
and
mov
push
test
pop
lea
mov
jl
imul
xchg
movsl
jne
mov
outsl
xlat
sub
xor
testb
mov
xlat
hlt
xor
inc
imul
lret
lret
and
cmc
aad
mov
cmp
roll
test
mov
dec
xchg
xor
mov
popa
out
test
xchg
lret
and
sbb
cld
fildl
push
and
jo
jne
push
in
xchg
into
pusha
faddl
push
lcall
idivb
jae
mov
or
jb
rclb
inc
xchg
repz
das
inc
iret
inc
mov
add
and
xchg
mov
ja
mov
out
test
leave
rolb
mov
xchg
add
fdiv
sub
outsb
imul
movsl
dec
leave
mov
pop
pop
jno
in
imul
push
pop
jecxz
imul
lock
aam
clc
pusha
or
repnz
inc
cmp
test
out
int
lock
les
loop
sbb
shll
pop
fidivs
pop
mov
in
push
insl
ret
mov
xor
lahf
pop
push
jbe
out
mov
xchg
xorb
hlt
out
fwait
hlt
inc
mov
pop
push
xchg
dec
mov
inc
and
gs
rcr
in
mov
add
ja
jo
mov
push
out
shrb
sahf
out
push
fdivs
mov
sti
adc
ret
push
cmc
adc
add
mov
jmp
scas
bound
sahf
ss
push
push
jge
or
xor
cs
push
pop
pop
pop
out
adcb
mov
insl
xor
mov
mov
jns
ljmp
inc
mov
stos
and
sub
nop
xor
jmp
fidivl
xor
es
inc
test
push
jmp
jo
or
les
data16
mov
add
sub
cmpsl
gs
mov
cmpsb
movsl
and
cmp
mov
rcrl
fdivrs
in
mov
test
pop
push
xlat
out
cmp
and
inc
dec
xchg
add
sub
ficompl
jmp
jno
fiaddl
mov
int
aas
jns
es
ss
in
jno
into
rcrl
roll
mov
push
aad
test
pop
ret
pop
push
leave
sar
in
cmp
sbb
cmp
push
pop
js
dec
sahf
std
sbbl
mov
push
out
imul
pusha
pop
mov
enter
js
xchg
scas
xchg
mov
xor
mov
mov
adc
in
sahf
shrl
lock
jge
sbb
pop
outsb
adcb
sahf
aad
cmpsb
enter
push
aaa
fcoms
out
rcll
cmp
ds
cmp
out
mov
dec
cmc
fs
add
add
cmpsl
jbe
fsubs
lret
pusha
pop
or
or
pushl
pushf
cmp
out
sbb
mov
gs
int
ret
fwait
int
loope
mov
in
daa
xchg
std
rcl
mov
incb
hlt
pcmpgtb
push
add
mov
jmp
lret
adc
scas
mov
cmp
in
in
ss
into
fcomps
leave
or
das
cmp
cmp
movsb
inc
adc
out
cmp
mov
xchg
dec
pop
movsl
push
mov
pop
sub
xchg
jmp
adc
dec
sub
jl
sbb
and
jno
stc
pop
leave
insb
mov
aaa
cmp
gs
loopne
jb
test
scas
sbb
jns
test
add
enter
imul
or
and
sarl
sub
adc
daa
sbb
pop
cmp
mov
sbb
push
fidivrs
es
xchg
lret
sahf
mov
xor
mov
xor
cwtl
pop
inc
dec
pop
push
cmpsb
mov
adc
adc
test
dec
stc
dec
jnp
push
adc
or
pusha
cmpsb
mov
aaa
sbbb
lds
loop
push
dec
xor
scas
mov
xchg
dec
jge
pop
xchg
stos
pop
nop
mov
mov
xchg
or
shrb
outsb
sbb
test
dec
jno
inc
cmp
sarb
mov
jnp
addl
jns
outsb
test
scas
imul
inc
std
pop
xor
shlb
xor
pop
popf
mov
jmp
fistl
icebp
out
xor
fldcw
lahf
push
rolb
pop
daa
movsl
js
ret
lret
push
ja
pop
cld
fwait
xor
dec
bnd
fiadds
pop
xchg
mov
jns
pusha
cmp
sbb
out
inc
xor
pop
sbb
xor
scas
dec
aam
add
mov
scas
dec
adc
cmpsb
dec
ds
sbb
jle
outsl
daa
adc
mov
sbb
push
pop
xchg
jo
sub
and
push
add
pop
cmp
aaa
cmp
sub
loop
fwait
cltd
pushf
pusha
sub
lock
inc
pop
das
cmp
mov
sbbb
xchg
mov
imul
cwtl
cld
stos
not
jecxz
stc
mov
add
sarb
ret
call
jge
dec
sbb
outsb
add
loopne
outsl
pop
clc
jge
outsb
dec
shlb
push
jg
dec
mov
pop
pop
jo
movsb
push
jge
mov
adc
adc
dec
pop
push
movsl
mov
add
pushf
arpl
add
cmp
pusha
flds
insl
dec
fs
mov
or
pop
pop
mov
mov
hlt
mov
mov
icebp
mov
pop
stc
cmp
test
push
fldcw
imul
fsubs
adc
add
xchg
pop
or
pop
lods
testl
sbbb
lret
gs
sub
neg
xchg
mov
mov
cli
aam
lcall
inc
inc
mov
in
jmp
fcoml
dec
cmpsl
mov
jbe
addl
imul
test
daa
sbb
scas
adc
push
stos
cmp
sbb
mov
or
cmp
jp
pop
aam
mov
cmp
dec
xchg
adc
lock
xlat
daa
sub
fwait
fwait
and
pusha
jno
sbb
out
xchg
inc
das
inc
jnp
dec
test
mov
cmp
daa
push
imul
jb
mov
faddl
shlb
inc
pushf
movsb
ds
push
push
pop
push
inc
xchg
lods
icebp
shlb
pop
mov
adc
cwtl
xchg
sbb
int3
sbb
jecxz
add
mov
pop
movsl
adc
jb
dec
jbe
or
inc
inc
in
add
psadbw
and
sbbl
int
mov
xchg
fists
ja
mov
ret
cwtl
idivl
jl
test
xor
or
xlat
test
fisttpl
adcl
xlat
repnz
mov
cld
outsb
adc
push
add
pop
pop
add
pop
xchg
mov
mov
push
icebp
icebp
mov
insb
call
xchg
fwait
mov
sub
xchg
inc
fmull
scas
fmull
xor
lock
fbld
xchg
pop
add
pop
fmulp
mov
in
cmpsb
in
lcall
ja
punpcklbw
pop
sbb
mov
inc
int3
in
or
or
xchg
push
pusha
mov
mov
inc
cmp
mov
xchg
fnstsw
in
call
cmpsb
and
loope
inc
bound
or
xor
imul
inc
mov
pop
mov
rol
and
sbb
outsb
mov
inc
gs
adc
loope
shlb
sahf
movsb
mov
sti
cmp
sbb
outsb
fdivrs
stos
sbb
mov
fldcw
incl
push
ja
mov
dec
int3
mov
jg
ficoml
cmp
sub
mov
sbb
insl
jg
arpl
push
ja
pop
mov
jae
cwtl
push
nop
in
jge
sub
adc
gs
jbe
xlat
pop
repz
sarb
jb
mov
and
add
mov
faddl
lods
data16
call
test
stc
es
jne
scas
mov
movsl
call
xchg
loop
fimuls
lods
es
mov
dec
pop
lret
negl
mov
int3
jmp
push
in
fwait
mov
or
outsl
setg
into
or
jnp
cmp
inc
cltd
daa
shlb
das
adc
shll
repz
push
mov
movb
jae
repz
add
call
lds
cmp
xchg
ds
sbb
lds
lods
sub
loop
jcxz
out
lret
and
and
es
jge
repz
jne
mov
pop
mov
and
in
cmp
sub
fstps
rcl
mov
xchg
cmpsl
sub
inc
loope
fnstenv
and
popa
xor
scas
xchg
scas
nop
in
dec
aas
push
pop
call
xor
or
pop
xor
into
and
lock
out
pusha
push
pop
sarl
mov
int
test
into
aaa
xor
sbb
mov
testb
dec
ffreep
sbb
mov
adc
lcall
jmp
nop
pop
pop
inc
fxch
push
insb
push
mov
stos
sbb
aam
ja
and
dec
jns
jne
data16
or
test
dec
jge
or
jne
inc
adc
or
test
jo
rorl
std
pusha
xchg
sahf
or
rolb
jae
mov
lods
adc
aaa
out
cmp
or
pop
int
int
dec
mov
inc
sub
dec
out
jmp
in
mov
iret
out
dec
xchg
incb
test
lret
pop
add
stos
inc
dec
stc
mov
testb
rolb
cmpsb
push
xchg
mov
sarl
mov
in
das
loope
jno
leave
jg
push
push
out
scas
ret
mov
cmp
sbb
das
and
sbb
ficompl
mov
out
xorb
xor
adc
negb
ja
xadd
inc
mov
stos
notb
dec
scas
call
cltd
or
rorl
cld
xchg
xchg
xor
ss
aaa
inc
shrl
pop
out
ret
or
fdivrl
out
jbe
hlt
sahf
sub
frstor
popf
jle
or
and
int
flds
gs
push
scas
adc
pop
fsubrl
orb
stos
xchg
bound
mov
push
pop
jno
je
cmc
aas
ss
or
adc
popf
push
ftst
cltd
push
or
xchg
lahf
sub
fbstp
fiaddl
xor
test
mov
sti
test
fldt
aaa
jae
jns
cmp
xor
sbb
push
xor
mov
adc
jae
mov
test
jmp
lret
mov
push
fisttpl
dec
sahf
jo
sbb
insb
xchg
or
dec
xchg
lods
in
shll
push
sub
pop
xchg
data16
mov
lcall
int
cmp
adc
daa
add
lods
jb
nop
rol
subl
dec
sarl
mov
xor
push
xlat
mov
and
test
pop
lods
movsl
or
jecxz
or
add
pop
movsb
jmp
lcall
enter
push
dec
out
xor
inc
pop
xor
sbb
subl
sbb
inc
aaa
inc
xchg
fucomp
mov
pushf
enter
aas
dec
fcomi
and
inc
insl
inc
jbe
test
inc
jmp
adc
daa
add
push
int3
adc
push
xlat
enter
mov
insl
mov
mov
out
fists
xchg
push
xchg
cwtl
incb
mov
dec
icebp
inc
gs
adc
ds
pop
loopne
fistl
pop
sub
mov
iret
out
mov
inc
sbb
pop
mov
sub
rep
stos
cmc
sbb
je
loop
std
mov
jg
pushf
xchg
sbb
outsl
fnsave
jmp
sbb
scas
sahf
gs
mov
adc
sbb
je
jbe
mov
dec
shlb
popf
cmp
and
loopne
sti
popa
cld
or
into
fstpt
xor
mov
adc
arpl
or
dec
outsl
mov
pop
jl
ret
sahf
or
cmc
cmpsb
fwait
inc
imul
sbb
push
mov
jecxz
fsubs
adc
mov
int
insl
fimull
jle
dec
popa
cld
adcb
mov
pop
cli
add
adc
popa
push
inc
mov
iret
pop
clc
mov
inc
mov
add
jne
les
int
push
pushf
into
xor
mov
lahf
movsb
xchg
fidivrl
jg
sbb
cmp
jp
mov
icebp
scas
sub
mov
lahf
pop
mov
mov
mov
stos
sub
push
sbb
popf
jge
cmp
rcrl
jne
mov
decb
push
and
pop
and
loopne
cwtl
pusha
rcll
fs
in
inc
jns
mov
out
daa
fdivrs
sub
fdivl
fsts
loop
loopne
mov
repnz
jne
mov
sub
push
shlb
xchg
test
data16
outsb
and
dec
cmp
sahf
adc
pop
push
filds
repnz
xor
mov
ret
lods
les
leave
xchg
mov
and
add
cmpsl
sub
adc
dec
push
aam
add
or
dec
inc
push
iret
jne
sub
stos
sub
dec
xor
daa
sub
loopne
insl
cmp
xor
or
iret
test
sub
fsubr
sbb
mov
jecxz
xorb
jae
cmp
pop
insl
loop
lcall
mov
ja
xchg
or
out
outsb
jge
fsubrs
shrl
incb
jle
ret
cmp
push
inc
rorl
jne
xor
rorl
in
cmpsb
push
push
jnp
pop
or
shlb
mov
repnz
or
adc
mov
ljmp
testb
cmp
stc
fadd
lret
lret
cmpb
dec
mov
cltd
shll
pop
cld
loope
out
dec
aaa
sbb
aad
ds
cmp
add
pop
insb
xorb
jmp
pop
cld
push
shll
ss
std
or
enter
insb
and
insb
sbb
cli
sub
fdivr
mov
jg
movsl
sbb
leave
pop
mov
bound
loope
dec
or
add
pusha
cmp
sub
cmp
pop
jle
cmpsb
ficomps
mov
and
jmp
js
mov
clc
outsb
stc
sub
out
pop
jno
adc
push
add
dec
mov
outsl
xor
dec
in
fs
cmpsl
int
out
xor
add
arpl
mov
xorl
dec
or
push
pushf
push
movsb
mov
cmp
pop
sub
pop
out
jl
sbb
in
iret
js
shll
add
sub
and
arpl
ficoml
rcr
mov
in
pop
jns
jo
pop
call
and
xor
mov
sbb
cmp
sbb
adc
adc
inc
mov
inc
sub
inc
xchg
mov
lds
jg
cmc
add
loop
loopne
jmp
xor
push
sbb
and
js
ja
insl
mov
push
add
inc
out
adc
mov
scas
push
jmp
std
rol
mov
in
ret
xlat
sahf
fisubs
insb
xor
jle
sub
dec
push
out
movsb
push
ret
jo
fistl
dec
ds
stc
leave
mov
xor
xchg
aas
cmp
frstor
je
and
jecxz
jo
popf
push
aas
add
push
ror
inc
pop
arpl
aam
sub
shrl
xlat
cmpsb
or
pop
mov
pop
xacquire
or
gs
in
pop
repz
inc
push
bound
cmp
xor
bsr
add
xchg
xor
add
dec
loopne
arpl
pop
lods
nop
es
bnd
mov
push
je
orb
add
loope
cs
outsb
das
shl
stc
pop
imul
call
in
jl
add
push
cmc
cmpsl
icebp
xlat
filds
in
fdivrl
imulb
scas
pop
cmp
mov
push
push
and
jle
push
xchg
out
and
popa
xchg
cltd
enter
xor
insb
fcomps
loopne
out
jno
mov
sub
cmp
pop
xchg
sbb
adc
xlat
sub
add
leave
add
gs
outsl
mov
std
cs
js
cltd
fildll
sub
testb
inc
test
cmc
xchg
dec
addl
arpl
adc
testl
cmp
arpl
inc
lahf
jae
pop
dec
insb
mov
dec
push
clc
or
dec
push
xchg
xor
out
adc
sub
fiaddl
dec
adc
hlt
mov
mov
out
cmp
rolb
sub
pop
aad
iret
faddl
sub
adc
cwtl
adc
imul
test
orl
ss
mov
xchg
adc
mov
push
sbb
adc
pop
inc
inc
ficomps
cmp
jne
in
int3
jmp
aam
imul
std
mov
dec
or
sbb
cmp
ret
push
sbb
pop
test
in
inc
jecxz
sub
fdivl
movsl
xchg
inc
divl
arpl
xor
bound
rcll
sub
cmpsl
or
sarl
mov
jle
stos
xchg
lret
dec
mov
out
icebp
outsb
pop
arpl
aam
xor
gs
xchg
mov
dec
ljmp
cmpb
and
scas
pop
and
sbb
sub
pushf
inc
divb
xor
sbb
sub
dec
jnp
sbb
add
loopne
cltd
push
xor
addr16
jae
xor
dec
cs
not
sub
aam
mov
or
in
mov
mov
test
shr
pop
push
lods
mov
call
pop
gs
gs
mov
inc
imul
jp
lahf
fbld
add
addr16
out
outsb
rcl
ret
movsb
sub
pop
push
mov
pop
pop
jmp
pop
je
addb
inc
sbb
test
pop
pop
mov
loop
xchg
lahf
jbe
dec
nop
call
push
sbb
xchg
orb
lcall
hlt
push
rcl
rolb
xchg
dec
mov
cmp
sbb
cld
xor
ret
mov
ficomps
jl
js
sub
ljmp
cmp
loope
or
dec
pop
and
test
ror
aas
sub
xchg
mov
int3
leave
or
dec
mov
scas
std
mov
push
cltd
rolb
mov
and
inc
fcompl
and
addr16
shll
adc
das
inc
push
rcl
add
loopne
sub
lods
leave
dec
cmp
xchg
adc
js
mov
pusha
loop
and
enter
inc
mov
jo
iret
push
das
aam
divl
popf
aad
ss
inc
testl
mov
mov
test
mov
adc
add
divl
sbb
adc
xchg
aas
mov
mov
mov
pop
push
sti
add
mov
jne
and
lret
mov
xor
sbb
sbb
shrl
sbb
sub
lcall
int3
dec
icebp
pop
xchg
inc
popa
iret
jns
mov
lret
push
mov
in
imul
adc
adc
lret
push
pop
insl
and
popa
imul
mov
inc
jb
fs
loop
xchg
and
out
lcall
cmp
subb
xchg
add
adc
ds
xor
jp
aaa
imul
sub
or
call
xor
shr
adc
sub
cld
inc
int3
popa
ret
push
mov
cmp
dec
jp
scas
imul
mov
mov
jle
jge
mov
stos
pushf
sbb
fisttps
xchg
cmpl
imul
cmpxchg
and
sbbl
incl
mov
sti
clc
xor
jmp
insb
out
push
sahf
out
jp
jo
add
shrl
mov
push
fsub
lods
adc
je
jae
movsl
shll
lahf
pop
xchg
icebp
cltd
add
mov
add
dec
jg
stc
andb
xor
xor
xor
sbb
fisubs
jnp
imul
outsb
add
loopne
in
pusha
dec
out
sub
push
inc
in
ss
stos
jle,pn
adc
sbb
lret
test
ljmp
aam
sarl
jp
scas
jecxz
dec
bnd
dec
adc
ja
xor
popa
jnp
popa
pusha
jp
cmp
cs
cmpsl
jmp
dec
inc
sub
and
jae
mov
jle
loopne
outsb
jmp
repz
fwait
cmp
movsb
rcrb
addr16
add
jb
iret
xor
loop
jno
stos
inc
push
xor
js
mov
stc
arpl
popa
cld
push
add
notb
int3
inc
xor
lret
dec
xchg
push
sub
adc
cs
inc
lock
aaa
imul
or
fldt
sub
sbbb
xchg
das
mov
fsubl
dec
jp
xchg
lahf
mov
daa
add
push
mov
imull
jge
data16
jg
adc
fs
les
imul
out
addr16
cmp
lock
cmpsl
jb
je
cld
xor
cld
adc
dec
fwait
or
push
dec
je
adc
cmp
or
jp
cld
cmpsb
and
mov
pop
std
je
xor
shl
mov
jle
jg
sbb
out
scas
popf
test
loopne
js
mov
add
fildl
mov
push
loop
lret
loop
in
addb
stos
push
or
push
mov
mov
jno
jns
jb
mov
sbb
mov
inc
pop
std
push
cltd
andb
dec
adc
imul
mov
lret
in
movsb
xchg
and
mov
pop
cmp
enter
hlt
shl
movsl
inc
add
addr16
push
gs
mov
pop
fwait
inc
mov
push
dec
imul
ss
inc
ljmp
into
mov
xor
stos
rcr
sub
mov
clc
imul
and
or
fisubrl
lds
outsb
mov
xor
sti
cs
cmp
mov
shrb
pop
insl
imul
cwtl
sbb
nop
jl
lea
ss
shrb
popa
xchg
movsl
dec
shlb
pop
lret
jo
daa
or
cmp
mov
in
cltd
jp
mov
mov
pushf
push
push
mov
ficompl
xlat
inc
fdivl
pusha
into
jno
mov
aad
sbb
loop
xor
mov
jmp
inc
sub
jo
inc
pop
call
pop
mov
jae
pop
out
fildl
adc
mov
mov
lock
mov
fsin
mov
test
test
lcall
mov
negl
lods
leave
movsb
mov
lret
and
repnz
push
xchg
scas
add
rorb
jmp
movsb
or
popf
mov
xor
xlat
add
xacquire
sub
mov
or
outsl
jmp
mov
dec
stc
jns
jge
mov
inc
or
cmpsb
cld
xchg
adc
fisttpll
out
adc
and
push
insb
push
loope
and
ds
or
cmc
inc
jmp
scas
cmpsl
inc
mov
pop
sub
mov
jbe
push
pop
es
push
orl
nop
inc
fwait
push
daa
or
fcomip
out
sub
jbe
lods
outsb
leave
jae
and
fidivrs
arpl
insb
stos
dec
js
sbb
mov
iret
testb
push
sbb
nop
add
out
sbb
gs
subb
push
xchg
push
push
pop
ret
test
jne
icebp
or
fsubp
xor
clc
cs
dec
add
jae
iret
xor
jne
push
cltd
sbbl
pop
mov
xchg
dec
dec
mov
daa
ror
hlt
or
dec
ja
or
push
fmuls
bound
movsb
mov
outsl
mov
or
cmp
pop
sbb
testl
jb
insb
dec
flds
cwtl
popl
or
lcall
mov
jg
mov
mov
inc
sbb
call
addr16
adc
xchg
push
movsb
movsb
in
fidivs
xor
repnz
cmpsb
test
int3
push
inc
mov
or
xor
mov
es
mov
imul
call
push
out
push
gs
stos
ret
xchg
divb
lds
enter
aas
adc
in
push
je
cli
int3
sub
xor
addl
cmpsb
hlt
cs
enter
pop
js
inc
sbb
push
dec
or
dec
test
fisubrs
clc
sarb
outsl
jo,pt
out
stos
inc
cmp
sbb
dec
sbb
pop
int3
mov
jnp
popf
mov
out
xor
add
rorl
in
es
pop
pop
aad
xchg
add
or
push
pop
push
mov
inc
adc
cs
jp
pop
aaa
and
lahf
push
xor
dec
pop
test
idivl
sbb
mov
cmp
hlt
loope
insb
insb
fdivr
jne
or
mov
mov
in
push
xlat
cmp
cmpsb
mov
or
into
add
fwait
lods
jae
dec
mov
lea
pop
lea
int3
push
add
mov
pop
xchg
adc
test
shrb
dec
int3
mov
repnz
pop
fisttps
or
mov
pop
call
lods
or
cmp
mov
mov
les
pop
popa
push
test
jb
add
lret
aad
imul
mov
in
ret
fwait
ret
xchg
sahf
lret
xchg
adc
outsb
inc
ficoms
mov
dec
ds
movsb
sahf
insl
call
sub
sub
in
xchg
data16
jp
je
test
stos
int3
out
cs
lock
pop
leave
inc
push
and
out
inc
pop
adc
mov
repnz
jnp
adc
xchg
pop
pop
sbb
lret
xchg
negl
and
jo
cltd
mov
sahf
ljmp
adc
or
inc
cmp
fstpt
mov
cmp
icebp
or
out
insl
push
movsl
movsb
jbe
pop
cmp
pause
mov
aas
bound
loop
jmp
fsts
push
loope
jns
test
subb
sub
pop
lds
mov
sub
gs
push
pop
out
push
jns
push
lods
data16
data16
and
sub
mov
loop
push
mov
adc
loope
aam
ljmp
pop
std
sub
cmp
fcompl
jmp
sub
jp
sahf
dec
loopne
je
sbb
call
loopne
xor
inc
cmp
or
sub
ljmp
pop
xlat
int
jne
pop
xlat
cmp
and
adc
or
insb
pop
jne
in
sbb
mov
pop
mov
xor
gs
pop
mov
or
xor
fdivrs
test
dec
stos
mov
lea
lret
and
stos
xor
pusha
mov
or
enter
lcall
ret
push
mov
xor
ret
mov
push
sahf
or
adc
insl
leave
sahf
movb
sbb
int3
fcoml
hlt
mov
ds
mov
cmc
xlat
or
test
call
pusha
rorl
mov
es
fstl
jne
fldt
push
xchg
pop
ja
lret
ret
pop
sbb
inc
mov
leave
and
mov
push
mov
inc
and
pop
and
insb
mov
pop
lret
push
mov
push
jns
mov
jp
cmp
jnp
cmp
in
enter
jecxz
sub
lods
rcrl
cmp
decb
add
fldcw
xor
mov
and
inc
loop
orb
dec
mov
mov
popa
imul
cmpsl
dec
jae
into
cmp
addb
je
pop
mov
test
cmp
test
dec
repz
sarl
in
add
gs
or
sbb
in
sbb
lea
das
mov
xchg
rolb
cmp
jl
pop
lods
cmc
lahf
sub
xchg
into
insb
sub
mov
into
loop
je
pop
movsb
jge
cmp
xor
jo
jns
xor
data16
bound
push
pop
cmp
dec
jbe
mov
sbb
sbb
in
cld
mov
pop
fistpll
lock
jno
icebp
nop
cmp
loop
out
pop
lcall
shlb
inc
scas
inc
fisubrl
rorl
ljmp
push
outsb
sarb
mov
lret
mov
repnz
std
scas
mov
push
sub
out
cmpsl
mov
jp
and
fstpl
or
fwait
pop
mov
cmpb
dec
cli
fs
nop
testb
idivl
shl
shl
push
sub
and
mov
insb
arpl
and
mov
mov
mov
or
mov
add
insl
xlat
cs
sub
or
mulb
pop
xchg
out
aad
push
add
add
push
pop
ljmp
xchg
cmp
cmpsl
mov
mov
icebp
mov
mov
jb
push
stos
xor
lahf
adcb
in
xchg
fildl
mov
adc
popf
or
sbb
xor
dec
ret
mov
cmp
push
addr16
push
es
adc
xchg
sub
and
push
mov
loop
es
test
mov
cmp
xchg
pushf
loop
jmp
fnstenv
arpl
adc
mov
dec
push
push
lahf
mov
pop
lret
fucomi
cmp
jbe
sbb
adc
pop
pop
insl
cmp
int
adc
into
ss
incl
mov
pop
das
dec
test
xchg
jno
sub
movsl
xchg
mov
fisubs
sar
shrl
sbb
push
pop
inc
mov
cli
ds
sbb
lea
cmp
in
add
jbe
pop
pusha
ss
adc
pop
movsl
xor
mov
lds
sub
mov
pop
in
xchg
scas
or
rolb
jg
lods
pop
ret
sbb
sub
jno
mov
xchg
dec
mov
pop
or
and
inc
mov
call
cmp
pop
loop
push
or
scas
adc
adc
jmp
clc
gs
loop
xor
sub
and
pop
test
rorl
inc
loope
push
mov
ljmp
out
inc
push
jecxz
push
in
push
imul
pop
push
mov
in
dec
dec
dec
or
mov
or
ret
leave
hlt
inc
add
in
pop
dec
mov
sbb
cmp
aad
and
stos
repnz
mov
xchg
jg
je
jb
mov
ds
enter
daa
dec
pop
testl
mov
mov
ss
push
dec
inc
and
jmp
test
jmp
cmpsl
mov
mov
dec
fnstcw
daa
lods
je
lds
lods
add
xchg
add
mov
inc
stc
inc
inc
popf
vandps
push
movsl
mov
add
test
xchg
sub
push
or
insb
cmp
push
fdivrs
hlt
scas
mov
adc
test
enter
pop
ret
cmpb
push
adc
xchg
sar
pop
jmp
divb
mov
aam
add
xchg
ds
ret
sbb
sub
inc
adc
push
dec
mov
cmpsl
cld
adc
fxch
iret
pop
xlat
enter
sub
popa
jmp
fldenv
xor
xchg
pop
push
repz
loope
cmc
fsubl
sub
xor
scas
pop
sub
jo
int
xor
and
int3
cmp
loop
insl
or
dec
rorb
pop
pop
rclb
mov
dec
inc
into
pop
imul
aaa
rcrb
push
in
out
rolb
out
ret
jne
sbb
push
gs
xchg
mov
enter
lcall
pop
sbb
sbb
lods
jo
push
jns
mov
push
out
cmc
and
jge
dec
push
cmp
les
pop
int3
xor
test
push
lahf
mov
mov
pop
popf
dec
out
rorl
sub
clc
int3
addr16
arpl
dec
test
pop
pop
mov
dec
pusha
mov
test
mov
lret
loope
pop
out
sbb
push
add
pop
fs
xchg
mov
or
out
jle
repnz
sub
aas
xchg
jno
xchg
out
gs
insl
aad
push
jnp
lods
sub
mov
lds
xchg
jnp
adc
jo
mov
cmc
push
xchg
jne
sub
ljmp
rcl
xchg
push
test
push
xchg
sbb
or
pop
je
and
ss
jge
aaa
pop
adc
test
or
cmc
jnp
mov
push
or
add
stos
add
xchg
sub
mov
mov
push
push
out
dec
cli
or
jns
xchg
add
pop
inc
inc
cli
pusha
cmpsl
mov
fisubrs
lock
or
cmp
insb
sub
xor
pop
stos
sar
xorl
cmpsb
stos
nop
inc
sub
ret
gs
and
add
jg
popa
aas
test
push
push
inc
fs
xor
ror
push
add
and
xchg
sub
inc
sub
outsl
xor
sub
ds
sbb
repz
mov
or
rcr
push
dec
in
pop
in
inc
adc
test
pusha
xor
js
adc
mov
or
mov
test
or
sub
les
jne
ds
pop
mov
jmpw
pop
jb
pushf
inc
and
sub
mov
push
dec
xor
cwtl
cmp
sub
mov
out
sbb
inc
imul
mov
enter
pop
or
push
cmp
mov
xor
popa
inc
sbb
in
lret
and
sbb
cld
push
xchg
js
xor
je
mov
cwtl
out
test
ficompl
jns
xor
mov
mov
and
mov
lods
mov
ljmp
xchg
adcl
cli
je
movsl
fsub
pop
xlat
jge
jp
jns
jne
out
and
cmp
sub
leave
mov
jp
mov
mov
mov
sbb
cmp
mov
cmp
jb
scas
xor
add
out
mov
xor
mov
into
cmp
adc
push
popf
inc
jle
iret
int3
negl
fcmovb
sti
repz
fidivrs
mov
push
mov
sub
cwtl
sbb
push
pop
pushl
sti
pop
adc
roll
es
sti
nop
sub
std
pop
arpl
repnz
call
js
pop
jle
cmpsl
inc
mov
pop
rcrl
sbb
shrl
mov
enter
out
mov
aas
pusha
popl
jl
mov
mov
fdivs
and
loopne
cmp
loope
ljmp
mov
push
inc
mov
pop
xchg
lods
dec
mov
fadds
mov
push
fcmovu
call
aad
into
mov
mov
sub
dec
jns
pop
cltd
mov
mov
lods
inc
dec
xchg
mov
adc
pushw
lods
popf
push
cltd
xor
mov
sbb
pop
cmpsb
sbb
or
out
das
mov
xor
and
cmpsb
inc
pop
add
out
in
std
sbb
jb
push
in
cmp
cltd
pop
dec
iret
push
sub
andl
mov
xchg
in
nop
cmp
mov
dec
cmpsb
orl
xchg
cwtl
mov
xor
std
iret
jg
insb
sar
mov
scas
in
mov
stos
pushf
lcall
dec
mov
mov
push
sbb
shlb
xchg
xchg
adc
jbe
in
add
addl
mov
pop
in
sbb
dec
mov
aam
mov
lret
sub
fsubrp
fnstenv
icebp
pop
pop
repnz
pop
cld
cli
or
jge
adcb
xor
adc
icebp
jae
std
xorb
dec
scas
jmp
mov
outsb
mov
lods
ret
fwait
push
arpl
cmc
andb
adc
or
loopne
xor
addr16
mov
push
mov
stos
cmp
adc
imul
cvtpi2ps
xor
pop
rcrl
jb
aaa
mov
icebp
je
pop
popw
insb
sarb
xor
mov
call
lds
or
call
es
adc
mov
or
or
cmc
jns
mov
jl
inc
xchg
xor
ds
out
stos
pop
dec
cwtl
arpl
icebp
orb
aam
inc
lea
fbstp
dec
sti
dec
popa
xor
cmpsl
mov
paddw
popl
rcrb
outsb
fst
ret
xchg
out
sarl
dec
mov
call
cs
lock
pop
in
ret
icebp
sbb
jg
int
xchg
mov
mov
pusha
jmp
les
ret
arpl
mov
ss
cmc
mov
sub
pop
or
cmp
mov
jecxz
icebp
das
fistpll
pop
pop
std
and
push
add
adc
sub
push
or
out
add
pop
jp
mov
or
sub
jne
push
loop
push
sbb
cmp
pop
mov
adc
test
pop
out
out
outsl
push
xor
aas
pusha
or
sub
pop
nop
iret
psrad
in
ds
and
aad
xor
push
sbb
mov
mov
lahf
in
add
cmpsl
sbb
jb
fimuls
inc
ss
js
int
push
push
xor
cmp
leave
daa
xchg
cmp
pop
mov
sub
mov
push
sahf
cld
out
adc
pop
jecxz
mov
cs
sub
push
pop
gs
xchg
out
xchg
inc
shll
adc
iret
popf
xor
cmc
sub
xchg
or
ret
fsubl
pop
popa
pusha
jge
sbb
cmp
push
sbb
and
pop
and
andb
fdivrl
pop
enter
cs
je
popl
dec
sub
sbb
cmp
movl
adc
sbb
push
cwtl
mov
cmp
inc
jne
adc
sti
and
xor
call
int3
pop
add
push
cmpsb
mov
jmp
jmp
mov
aam
fistpl
push
jle
fsubs
mov
and
mov
loop
mov
fcom
into
insl
mov
push
pop
mov
es
iret
mov
fwait
sub
insl
push
in
fidivs
mov
imul
lds
add
fcompl
or
mov
push
sbb
dec
aam
gs
jge
ret
jbe
or
popa
lret
and
outsl
in
ss
scas
dec
mov
sub
test
pop
std
lods
pop
out
jp
ljmp
bound
pop
or
jecxz
push
mov
and
inc
out
mov
inc
imul
in
push
je
and
lahf
movl
test
inc
stc
dec
xchg
jg
pop
sbb
push
imul
imulb
pop
pusha
pop
dec
ret
or
xchg
int3
addr16
mov
imul
rcll
pop
mov
pop
mov
es
call
add
cs
ret
add
adc
pop
pushf
mov
add
sbbl
push
push
subb
ret
jl
inc
shrb
fdivr
fildl
popa
push
out
call
or
sub
sbb
std
out
int
adc
push
test
sbb
sbb
je
cmp
dec
mov
bound
sub
test
in
iret
xor
pop
sub
mov
xchg
aam
or
xchg
mov
test
sbb
push
fsubrs
cwtl
push
jg
mov
and
add
test
xchg
fnstenv
pop
aad
pop
ss
jb
sbb
dec
ret
pop
shr
pop
clc
in
cld
cwtl
and
mov
mov
hlt
sbb
mov
jmp
add
mov
loop
cwtl
push
shr
and
repz
int3
fsts
xchg
xor
pop
movsb
inc
sub
outsl
adc
repnz
and
clc
in
inc
addr16
repz
loope
out
fldcw
addr16
lcall
mov
mov
xchg
sbb
xor
sbb
inc
jne
jbe
mov
cmpsl
dec
aad
into
mov
mov
xchg
or
cwtl
xchg
inc
mov
jo
xor
test
jp
lret
cwtl
sub
cmp
loop
lods
jns
insl
idiv
arpl
movsl
test
and
test
dec
push
add
jno
mov
adc
sub
sbb
and
ficomps
jo
shl
mov
nop
mov
dec
bound
ret
xor
arpl
nop
mov
into
pop
push
adc
or
ret
cwtl
xchg
push
aam
movsb
push
addb
in
aaa
call
pop
popa
aas
jb
sbb
mov
jns
push
imul
pop
and
insb
ljmp
out
mov
mov
push
loopne
sbb
shll
pop
fisubl
or
pop
pop
xlat
or
push
or
cmp
xor
sarl
adc
out
sub
mov
in
or
mov
rolb
decl
adc
cmp
lds
dec
insb
push
mov
test
xlat
outsb
fwait
popa
icebp
or
test
xchg
mov
cmp
pop
push
into
inc
jecxz
int3
popf
push
jns
movsl
mov
fisubs
dec
add
lcall
jae
out
mov
sbb
lret
cmp
push
push
push
add
jae
out
fbld
and
lret
sub
jecxz
fidivrl
push
xchg
faddl
and
xor
pusha
pop
mov
lret
js
push
leave
or
repnz
fidivs
inc
enter
pop
and
popa
lcall
adc
daa
push
inc
pop
mov
xlat
dec
or
ss
push
mov
and
jo
cwtl
sub
cmp
xchg
ss
aas
push
xchg
adc
enter
mov
test
pop
jo
mov
sbb
jecxz
dec
lods
ja
cmp
aas
pop
iret
adc
cmp
test
add
pop
mov
mov
xor
lret
mov
inc
sub
in
xchg
ret
inc
push
pop
lea
cld
bnd
aas
js
pop
fistl
out
cmp
nop
cmp
push
pop
stos
mov
and
int3
and
push
loope
nop
data16
xchg
es
sbb
lret
xchg
ljmp
lcall
out
mov
xchg
push
jge
pop
add
cmp
jno
push
iret
xchg
pop
mov
pop
or
add
mov
cltd
mov
xchg
jg
orb
xchg
fstpl
aam
push
cmp
jge
ja
sahf
and
adc
shl
adc
stos
cmp
cmpsl
pusha
cmp
enter
or
fxch
cli
pop
sbb
test
mov
rcrl
sar
jbe
xor
jb
adcl
pop
xchg
dec
sub
fdivrs
and
sub
sbb
sbb
mov
add
mov
popa
jbe
add
and
mov
add
loop
punpckldq
aad
out
pop
ja
into
stos
jp
jl
movsl
faddp
pop
aad
sub
mov
mov
rorb
hlt
ficompl
push
push
pop
mov
dec
jg
orb
push
hlt
ljmp
inc
dec
testl
lds
loopne
sub
push
inc
sub
popf
outsl
or
dec
fistpl
je
sbb
pop
and
sub
xchg
inc
inc
lods
pop
inc
push
jl
push
push
movsl
cs
xchg
sbb
outsl
pusha
repz
mov
inc
insb
xor
lret
mov
push
adc
inc
cmp
out
lods
sti
test
mov
dec
aam
idivb
dec
lods
mov
jmp
or
das
push
adc
inc
lea
dec
jno
jle
decb
movsl
adc
jae
cmpsl
imul
pop
sub
aas
xchg
pusha
in
xor
fidivrs
and
in
push
or
adc
sbb
aad
int
pop
add
mov
mov
inc
mov
jge
sub
into
push
xor
mov
pop
or
ja
mov
dec
mov
xchg
pusha
add
cmc
dec
jmp
ds
inc
retw
out
and
or
jg
dec
cmpsl
xchg
not
pop
in
and
cli
mov
nop
xchg
adc
add
and
or
in
shrl
jno
mov
mov
loope
mov
outsl
or
outsl
dec
clc
test
or
mov
fdivrs
nop
repz
jb
mov
dec
push
leave
daa
inc
stos
cld
sbb
shll
lds
arpl
les
enter
in
addl
scas
hlt
and
add
stc
mov
push
aas
xor
pop
sbb
inc
les
xchg
fwait
add
nop
xor
inc
ret
nop
aad
pop
mov
daa
fstp
std
pop
add
and
and
fnstcw
mov
stos
push
add
xor
enter
data16
out
rol
or
fidivl
push
int3
fdiv
ficoms
aad
or
adc
dec
int
jo
mov
xchg
push
stos
dec
xchg
pop
jmp
je
sbb
or
test
mov
fdivs
cmpsb
insl
icebp
dec
dec
and
pop
sbb
jno
pop
xchg
mov
jns
or
sbb
fdivrp
push
jmp
sub
loop
jo
lods
loope
mov
sub
pop
cmp
cmpsb
xor
or
bound
adc
in
mov
pop
mov
je
mov
and
out
fwait
xor
sarb
out
lods
outsb
dec
sub
hlt
ret
lock
test
lcall
mov
add
or
sub
xor
ljmp
outsl
fwait
xor
fs
ljmp
mov
mov
inc
sahf
and
mov
dec
sub
jae
fcmovnbe
stos
mov
cmp
aam
pop
jmp
cmp
mov
repz
mov
xchg
loop
inc
int3
shll
sahf
cmpsb
lods
inc
call
repnz
mov
or
mov
mov
jns
lahf
test
jbe
mov
movsb
leave
idiv
pop
daa
sbb
push
jle
sbb
jl
pop
pop
sub
sub
and
mov
roll
and
pop
into
or
add
mov
cld
push
sahf
mov
cmpsb
fldcw
push
pop
dec
adc
adc
dec
shld
pop
dec
adc
loop
cmp
xchg
add
pop
js
jge
movb
sub
xchg
pop
pushf
jb
incl
andl
xchg
sub
iret
mov
das
sub
lea
loope
inc
flds
xchg
jmp
push
inc
push
push
sti
mov
inc
cmp
scas
daa
fcoml
lea
xlat
call
dec
mov
jbe
mov
pop
dec
fucomp
jbe
loop
test
mov
repnz
and
pop
in
jp
xchg
xor
sub
lcall
cs
and
dec
inc
scas
mov
fldenv
mov
loopne
cmp
inc
sbb
lds
add
push
test
ss
cmp
out
bound
mov
dec
push
ss
inc
mov
repz
daa
divl
ret
cmp
int
xor
addb
cmp
xchg
pop
repnz
inc
and
scas
rcrb
sahf
xor
test
inc
pop
icebp
adc
push
loope
jp
les
cmp
aad
dec
movsb
in
fldt
icebp
push
test
pusha
jmp
sti
lds
loope
daa
jle
xor
push
xor
push
sbb
ret
jnp
call
jno,pt
cmp
adc
ljmp
js
jge
movsl
inc
cld
mov
dec
clc
sbbl
or
insb
jbe
jp
mov
xchg
popf
aas
sub
inc
loop
shl
xor
inc
push
iret
cmpsb
fnstsw
jmp
adc
cmp
push
sbb
xchg
push
jecxz
sub
popf
add
or
adc
dec
dec
push
cwtl
test
mov
mov
loop
dec
in
jb
xchg
call
add
and
int
int3
ljmp
je
and
int3
gs
dec
clc
les
in
pop
and
dec
test
and
iret
aad
mov
xchg
sub
loopne
add
mov
popa
movsb
lds
adc
cmp
in
mov
adc
inc
stc
or
xor
and
adc
lock
aad
js
imul
add
pop
movsb
xchg
mov
scas
outsl
leave
mov
cmp
cs
or
fldl
daa
jne
push
dec
sahf
mov
sub
into
or
mov
cmp
loope
aas
out
out
lods
call
test
mov
out
lahf
fsubrl
and
dec
add
or
rcr
ret
out
pop
jmp
or
aad
or
insl
mov
fldcw
test
fidivs
in
shll
adc
xor
mov
pop
sbb
es
mov
mov
dec
jnp
in
out
push
push
push
mov
out
xlat
pop
and
jnp
insb
jg
and
sub
lret
clc
dec
lcall
pop
cltd
dec
jnp
push
xchg
cmp
push
xchg
sub
jbe
out
cmc
adc
mov
jle
aam
mov
lods
cmpsb
stc
pop
mov
pop
sbb
mov
sub
push
sub
sbb
lds
scas
or
in
mov
pop
pop
rorl
call
ss
js
adc
mov
repnz
stos
push
cmp
movsl
cmp
rcll
shll
xor
arpl
push
push
scas
push
std
mov
mov
jb
and
rorl
lods
popf
sbb
jmp
mov
pop
ds
les
aam
test
sub
jno
ss
std
and
movsb
rorl
jne
pop
push
sbb
out
call
inc
pop
jno
lea
popa
sub
cmp
add
adc
jno
or
xchg
icebp
sbb
mov
jp
fisubs
loop
in
xor
shrb
pushf
sbb
repz
adc
add
stos
adc
or
ss
daa
test
fwait
ret
inc
mov
add
cwtl
xlat
or
or
mov
jle
jns,pn
mov
pusha
pop
mov
insl
enter
aam
gs
sbb
ret
cwtl
mov
xchg
sbb
cli
inc
xor
sbb
add
nop
push
jnp
push
mov
pushf
enter
enter
jp
loopne
xchg
shlb
ja
fisubrs
mov
cmp
pop
fimull
mov
push
jbe
mov
adc
enter
les
adc
pop
mov
fmulp
dec
scas
jmp
ret
or
les
add
jmp
sbb
jno
pop
inc
sti
aaa
fsubs
cmp
shlb
scas
xlat
add
ds
scas
ret
xlat
cmc
es
sub
lock
mov
aas
outsl
in
inc
and
int
es
fwait
ss
pop
sub
lcall
fsubs
rcll
fisubl
iret
mov
scas
mov
dec
insb
scas
cmp
adc
add
les
mov
je
push
inc
shlb
inc
mov
xchg
out
jnp
inc
adc
pop
mov
arpl
test
mov
pusha
cmc
and
test
cmpsb
std
xchg
push
ds
sti
and
mov
aaa
add
aas
jg
stc
movsl
lahf
or
lds
jmp
jl
ret
jnp
out
cli
inc
mov
arpl
sar
sub
dec
lods
lahf
rclb
ret
add
mov
xlat
add
out
scas
xchg
test
mov
cmp
aad
mov
into
test
aad
adc
inc
jle
adc
push
cmpsl
sti
jnp
jg
jle
and
sar
sbb
std
xor
cld
inc
mov
cmpsl
xchg
fldenv
sub
std
fwait
adcl
mov
xor
in
inc
rorb
mov
popl
cltd
mov
sbb
subb
int3
cmp
scas
push
cmp
in
add
or
mov
imul
hlt
add
imul
mov
fdivrs
aaa
adc
sarl
leave
cmp
shrl
lock
dec
push
dec
sub
outsl
and
mov
outsb
cltd
in
in
int3
inc
adc
jle
rcr
jns
mov
cld
pop
sub
ret
ret
xchg
lcall
cmp
or
ficoml
mov
pop
jnp
enter
fiaddl
daa
jo
or
cmp
enter
cwtl
aad
bound
fwait
add
addr16
in
sti
outsb
pushf
jae
into
rorb
ja
fs
sub
inc
xchg
mov
scas
fisttpll
adcb
das
popa
mov
das
lahf
lods
adc
ss
adc
jmp
hlt
inc
mov
adc
cld
int3
mov
cmp
js
cmp
jo
or
mov
mov
inc
pop
inc
in
fwait
je
lret
sbb
jle
daa
jle
cmp
roll
xchg
das
xchg
and
xchg
outsb
dec
rolb
inc
xor
pop
and
push
adc
repnz
repz
out
and
pusha
dec
mov
int
add
jle
dec
addr16
adc
enter
ficomps
movsl
sbb
pop
fisttps
stos
outsl
sbbb
pusha
jne
test
test
iret
mov
push
fidivl
jle
ja
test
push
jb
xor
stc
mov
xor
jno
cli
cmp
out
mov
fists
inc
leave
stos
lret
adc
mov
insb
dec
in
mov
push
lods
jge
adc
sbb
gs
jo
fnstenv
dec
dec
into
jb
or
push
in
dec
add
les
test
sbb
mov
sbb
mov
jmp
mov
popf
adc
mov
test
or
loope
test
add
or
rcl
xor
leave
and
lret
sbb
out
dec
mov
add
fisubs
adc
call
mov
jb
jne
mov
mov
sbb
push
cmp
xchg
inc
cli
xor
fistps
movb
stc
adc
mov
pushl
in
pop
sbb
mov
push
ljmp
mov
xchg
pop
arpl
mov
repz
dec
fisttpl
iret
insb
adc
outsl
loope
mov
jno
cmpsl
insl
mov
cwtl
and
and
push
push
push
pop
inc
jecxz
stos
stos
scas
mov
or
loope
dec
push
aam
adc
stos
sub
or
mov
test
jecxz
aas
call
arpl
adc
jp
xchg
int
pop
or
sub
sbb
pop
repz
sbbb
jge
out
sbb
pop
fldt
icebp
pushl
mov
push
subl
lcall
dec
ret
rorb
and
es
mov
xor
xor
push
fnsave
pop
test
and
xchg
aam
pop
mov
adc
loope
dec
cmp
stos
testl
ficoml
lcall
lret
cmp
push
dec
inc
pop
adc
jle
in
scas
test
sbb
clc
dec
dec
sbb
dec
movsb
lea
mov
xchg
clc
add
rcrb
jl
dec
lods
lods
mov
jp
adc
jmp
pop
aas
sub
loope
int3
pop
cmp
rorb
sbb
push
test
out
push
lods
xor
xchg
fwait
or
jmp
ret
div
mov
inc
ret
xchg
addr16
ja
xor
xchg
add
dec
pop
jmp
jbe
xor
pop
mov
mov
xor
loop
xor
pop
mov
xor
lret
pusha
push
xor
or
loop
jae
mov
inc
insb
pop
rorl
cmpsl
shll
mov
out
inc
or
in
stos
out
xor
stc
mov
pop
cmp
sbb
dec
rorl
pop
pop
add
addr16
cmp
xor
xchg
cld
ds
add
mov
jmp
in
lods
lea
push
or
fs
or
or
pop
cmpsl
and
adc
pushf
mov
loop
jbe
mov
sti
insb
cmpsb
lock
test
popf
sbb
pop
pop
fildl
div
mov
pop
imul
hlt
cltd
jl
dec
cli
ficompl
add
push
mov
cmp
push
jbe
push
inc
ds
add
cmpsb
mov
mov
shrd
popf
dec
ljmp
test
xor
ds
sub
out
jge
data16
mov
jmp
cli
sbb
in
push
aaa
sub
xchg
jmp
xchg
pop
loop
sbb
pop
mov
out
in
mov
xchg
call
push
in
movsb
add
and
fs
dec
xor
push
sbb
loope
mov
mov
xchg
xchg
addr16
push
outsb
cmpsb
dec
mov
mov
inc
popa
pop
push
lret
push
sbb
mov
push
lea
mov
aad
stos
push
mov
cmp
mov
jg
jae
std
and
rolb
jecxz
push
jecxz
popa
in
int
cmp
push
sbb
cld
movsb
adc
pop
xchg
cld
call
xor
icebp
sbb
mov
pop
pop
std
pop
testl
pop
das
jmp
push
jbe
ss
loopne
or
in
add
pop
mov
aad
sahf
outsl
inc
mov
or
pop
jecxz
adc
ret
add
jo
addl
add
ss
pop
repz
xchg
mov
pop
and
mov
dec
insl
jmp
push
fdivrl
mov
addr16
mov
sahf
fwait
jg
aad
stc
add
ja
lock
fnstcw
ljmp
cwtl
leave
adc
push
mov
roll
loope
add
and
in
mov
mov
sbb
fwait
jae
test
push
clc
bound
lds
out
fsubrs
lcall
mov
mov
inc
mov
movsl
xchg
cmc
mov
sbbb
or
xchg
out
insl
sar
adc
mov
or
lret
add
call
incb
std
outsb
sub
jae
mov
jbe
notl
jae
bswap
mov
out
into
stos
fmull
addb
sbb
mov
lret
mov
push
xor
jle
sub
push
adc
mov
and
pusha
sbb
aam
jle
push
push
or
inc
pusha
xchg
add
jmp
je
imul
loopne
adc
icebp
push
or
xor
loop
mov
pop
lret
imul
insl
inc
sub
ja
mov
es
mov
sub
pop
repz
dec
cmp
mov
mov
ss
or
rcll
xor
dec
pop
divl
lcall
jns
lret
or
jno
fdivrp
in
cs
clc
insb
sbb
xor
add
test
fistpll
lea
pusha
out
ss
enter
jae
popa
in
lods
lret
and
std
enter
mov
and
sbb
mov
inc
sub
or
je
sbb
pushf
out
loopne
sar
ret
dec
mov
adc
dec
pop
and
sahf
enter
cmp
cld
pop
sub
fs
das
insl
clc
jo
mov
push
data16
adc
push
aaa
fmulp
dec
int3
lret
repz
aam
cld
jge
mov
mov
arpl
push
stc
andl
or
aam
mov
xchg
outsb
aam
ja
push
adc
jmp
popf
mov
and
push
push
cmpsl
xor
sub
jb
jns
call
mov
and
dec
lods
sbb
jns
ja
dec
pusha
push
add
xchg
sub
cltd
cmp
push
or
clc
and
pcmpgtb
leave
mov
cwtl
lods
xchg
cwtl
cmc
call
inc
push
rclb
mov
sti
push
sbb
mov
ret
add
and
xrelease
inc
pop
fs
cmp
xor
xchg
imul
add
jp
xor
fwait
mov
fwait
or
negl
loop
clc
sbbb
mov
lahf
and
xor
stos
rclb
inc
push
or
iret
sbb
xor
in
aas
adc
les
roll
fwait
pop
push
adc
cmpsl
xor
loopne
xchg
negb
xchg
cmp
in
rcl
ficoms
mov
nop
mov
sub
outsb
adc
dec
cmpsl
and
mov
and
pop
push
push
jmp
mov
fdivrl
or
pop
rcll
inc
add
fstpl
aam
vpsrld
adc
rcrl
sub
data16
mov
inc
pop
xchg
dec
lds
mov
sahf
sti
cmp
loopne
sub
xchg
fbld
mov
pop
rcr
pop
push
xchg
jg
cli
dec
adc
fsubp
pop
cwtl
sub
out
jle
push
vmovntps
mov
aas
cli
cwtl
cmpsl
sarl
aam
push
cwtl
scas
popf
push
xor
mov
je
mov
mov
mov
lods
mov
xor
outsb
or
fisubrs
add
xchg
arpl
add
sbb
dec
xchg
in
stos
mov
push
sbb
sub
inc
or
ds
jmp
jbe
scas
es
stc
nop
jg
mov
push
or
loopne
mov
pop
sub
jno
jb
les
or
inc
inc
in
sbb
or
loopne
ret
nop
rcll
and
dec
or
das
pop
mov
repnz
lret
mov
fwait
or
push
mov
jae
or
int3
fisubrl
mov
lods
and
pushf
pop
mov
rcll
sub
mov
nop
or
push
je
andb
jnp
or
xchg
outsl
inc
or
xor
and
mov
in
inc
jl
mov
sbb
js
call
mov
and
or
sahf
push
in
adc
in
scas
mov
mov
aam
xlat
push
test
data16
repnz
jp
call
out
dec
outsl
lret
hlt
xorb
stc
sbb
cmpsb
lock
dec
sbb
sbb
pop
add
mov
pop
jo
es
push
dec
imul
and
in
and
xchg
and
push
ja
insb
aam
mull
out
clc
test
sbb
push
cld
push
cmp
fidivrl
dec
cmpsl
testl
lock
jbe,pt
in
lcall
push
jne
sub
sbb
lret
imulb
aam
mov
push
lahf
orl
and
add
sti
push
nop
or
mov
pop
and
jp
xchg
lret
cmp
adc
dec
pop
xor
dec
cmp
loopne
in
pushf
jns
fs
stc
addb
mov
movsl
out
cmpsl
xchg
mov
and
add
or
jp
xorb
dec
pop
xchg
xlat
inc
lods
fwait
pop
inc
pop
fistps
or
pushf
movb
jne
gs
cmp
rcll
jl
pop
mov
std
xchg
into
imul
les
roll
jne
out
mov
sbb
and
icebp
adc
mov
das
push
or
cmp
inc
cmp
ret
add
out
out
xor
pop
aad
sahf
and
xchg
mov
inc
popf
mov
xchg
add
mov
pop
in
inc
int
jmp
fists
jne
lds
out
sub
popf
mov
cmp
xchg
dec
sub
ds
mov
arpl
lods
sub
push
mov
hlt
in
pop
fdivs
mov
push
outsb
or
addr16
into
jae
std
out
inc
pop
cwtl
cmp
sahf
mov
add
loopne
aas
jl
cmpsb
cmp
jg
out
push
push
pop
cld
sbb
pop
cmp
cs
psubsb
je
mov
ficomps
xor
std
fcoms
jmp
pop
stos
adc
leave
xchg
dec
test
arpl
out
repz
les
and
sbb
mov
shrl
and
jo
test
dec
mov
mov
jae
fstps
or
bound
inc
fisubrs
scas
xor
mov
inc
or
mov
subps
insl
sahf
xor
adc
xlat
icebp
or
in
mov
cmp
push
add
scas
lds
pop
sub
lret
lret
add
mov
test
lock
sub
mov
imul
dec
inc
jp
shll
cmpl
out
ljmp
add
lods
js
leave
add
stos
mov
int3
clc
cmp
sbb
sbb
mov
push
add
push
cmc
pop
jo
mov
mov
mov
arpl
and
and
movsl
cmp
jp
nop
iret
imul
imul
sarb
mov
cmpsb
fwait
dec
data16
je
mov
sbbb
pushf
jns
mov
fildll
mov
in
icebp
enter
es
shlb
dec
in
imul
mov
dec
sahf
push
pminub
or
mov
lds
jnp
or
cmpsl
icebp
repz
or
push
push
movsl
cmp
sahf
leave
in
mov
bnd
pop
xor
scas
or
mov
fyl2x
imul
ja
sub
pop
outsl
xlat
fldcw
popa
push
or
lods
push
les
arpl
sub
add
mov
into
add
pop
js
push
mov
dec
das
or
iret
mov
cmc
les
mov
mov
cmpsb
addl
sar
jb
xor
pop
xchg
jo
rorl
mov
call
cmp
pushl
mov
fidivl
in
mov
popa
mov
dec
jae
ret
add
or
xlat
mov
cmp
inc
mov
call
jns
pop
loope
adc
cmpb
or
fdivs
cmc
es
mov
sub
ret
fists
outsl
mov
cmp
sbb
out
xlat
sbb
stc
leave
fildl
aad
add
xchg
jl
push
cmpsb
pop
aas
repnz
cmpsl
dec
sub
aam
sub
jp
xchg
cmp
add
dec
pop
mov
mov
stos
imull
ss
hlt
add
enter
mov
xor
push
aas
mov
pop
cld
mov
push
mov
push
std
jb
js
and
xor
outsl
dec
xchg
gs
inc
and
dec
sbb
and
pushf
idivb
or
incb
add
cld
movsl
xchg
sub
stc
movsl
test
fs
sbb
pop
iret
jle
mov
fadds
and
outsb
mov
jbe
loop
scas
jge
cwtl
punpckldq
jo
mov
jmp
dec
push
or
or
push
mov
or
insl
popa
push
fcos
int3
sahf
cmp
ljmp
xor
fildl
and
jae
ficompl
aam
sarl
xor
addr16
ret
fnstenv
dec
and
mov
lea
mov
mov
cmpsl
ficompl
push
nop
fcomps
sub
mov
pop
mov
add
add
les
or
jg
rorb
jmp
dec
in
daa
mov
add
inc
fsts
popf
jmp
mov
enter
jns
push
iret
push
add
inc
dec
mov
add
shrb
xorb
add
loop
pop
jno
inc
dec
add
rcrb
in
mov
in
test
pop
mov
fbstp
and
enter
or
bswap
sti
movsl
cmc
jmp
loope
shl
xchg
and
xchg
and
iret
lock
mov
dec
insb
xchg
push
xchg
scas
push
int
out
fistpll
cmpsb
pop
dec
push
cmp
loopne
lock
pop
std
int3
fs
and
fcompl
rorl
and
xor
push
inc
dec
pop
lods
inc
aaa
imul
stos
and
decb
dec
xor
rol
lret
mov
sub
mov
cmp
mov
inc
arpl
loop
lock
xchg
jg
loope
cmpsb
push
testb
pop
and
mov
mov
sub
repnz
ror
cwtl
jnp
enter
enter
push
mov
mov
dec
test
jo
pop
push
pop
adc
lret
ja
fisttps
call
push
push
lret
fs
imul
xorb
sbb
adc
mov
and
mov
rcll
jns
xchg
outsb
fisttps
dec
jnp
sbb
scas
and
sub
add
mov
xchg
addb
out
pop
pop
int3
cmp
sbb
push
loopne
or
orl
std
xor
and
cmpsb
push
jmp
mov
ja
out
inc
fstps
fcomps
mov
or
dec
or
push
es
test
ret
xchg
mov
fmuls
bound
cld
sbb
push
push
add
jle
sbb
push
imul
loop
ljmp
sub
test
adc
cmpsb
test
jp
ret
xor
push
jmp
jno
xlat
jae
lcall
icebp
push
das
imul
cli
mov
and
jo
test
outsb
popf
add
cs
scas
outsb
or
sub
jge
jl
movsb
sub
data16
dec
mov
jae
scas
iret
mov
ds
xchg
mov
sub
sbb
mov
push
lcall
sub
orl
outsb
inc
shlb
xlat
sub
setae
pop
adc
mov
add
ret
out
dec
push
lods
cs
adc
or
call
push
cmp
add
xchg
in
fwait
dec
pop
push
xchg
dec
mov
rep
movsb
mov
mov
ret
sbb
enter
popf
call
mov
xchg
pop
push
sbb
mov
lahf
add
sbb
sbb
in
xchg
adc
aas
test
xor
push
leave
xor
outsl
mov
cmpsl
pushf
mov
stos
sub
push
outsl
or
mov
sbbb
lock
hlt
push
aas
cmpsb
cs
movsb
push
dec
mov
mov
pop
sub
pushf
loop
inc
outsb
xor
sbb
mov
add
dec
cli
push
addr16
xor
imul
push
lret
test
mov
sub
mov
lcall
cmpsl
test
jmp
cld
and
shrl
ljmp
insl
mov
mov
add
jmp
inc
movsb
stos
aam
sub
sahf
cmp
bound
mov
mov
cltd
out
test
ficomps
inc
inc
in
inc
pop
push
aam
add
pop
call
sub
pop
in
outsb
pop
iret
mov
push
push
push
and
mov
push
mov
push
cmp
sarl
bound
iret
or
and
pop
fwait
int
mov
cmp
test
imul
cmpsl
mov
into
ret
in
ret
addr16
mov
or
inc
fwait
rcl
dec
aam
cmp
clc
leave
jbe
push
cmp
pusha
cmp
inc
lock
sub
insl
cmpb
push
sti
mov
out
movsb
pushf
mov
mov
cs
ret
push
scas
leave
jle
js
enter
xorl
sub
jg
mov
sub
mov
pop
push
subl
jnp
imul
mov
insl
ret
adc
mov
fistpl
dec
les
rol
inc
mov
mov
lds
push
gs
pushf
cwtl
mov
adc
mov
leave
or
push
lahf
stos
sub
jmp
pop
dec
or
jg
test
jmp
dec
cmp
fildll
shrb
mov
ss
stos
jnp
aam
inc
icebp
test
inc
je
xchg
and
lea
xor
inc
xlat
dec
xchg
lcall
imul
jns
out
mov
pop
ds
idivl
cltd
mov
inc
les
add
cmpsl
fdivp
mov
scas
int
in
or
shl
cmpsl
mov
dec
incl
lds
fyl2xp1
pop
outsb
dec
lahf
dec
xchg
mov
outsl
test
cs
sbb
call
xchg
addl
dec
lds
mov
sbb
jae
push
loop
jmp
xor
push
add
mov
push
mov
mov
pop
pop
imul
lahf
mov
and
jnp
cmp
sub
xchg
dec
adc
cli
and
mov
xchg
or
adc
loope
sub
push
mov
or
fadd
inc
nop
mov
cs
stc
rcrb
or
movsl
jno
mov
jg
mov
push
out
sub
adc
test
mov
repz
xor
dec
mov
mov
test
sub
xchg
test
push
sub
mov
or
push
inc
xchg
mov
je
sub
sub
call
sbb
sahf
stos
xlat
lret
cltd
push
and
test
pop
or
shrl
jno
in
and
and
mov
inc
addr16
cmp
mov
sbb
ret
call
sbb
push
std
jecxz
lret
push
movsb
xorl
pop
dec
add
roll
stc
push
call
inc
flds
sbb
jl
iret
mov
daa
xchg
mov
in
lcall
and
icebp
int
outsl
xor
in
iret
inc
int3
mov
mov
sti
out
cmp
lds
cli
jmp
mov
rorl
mov
in
mov
push
fs
add
jge
outsb
test
push
into
jp
dec
add
push
lds
and
clc
cs
inc
mov
xchg
ja
sub
out
clc
insb
insl
mov
pop
cwtl
mov
int3
pop
inc
test
imul
fiaddl
jns,pn
xchg
add
mov
imul
pop
adc
rcr
sbb
int
or
fisttpl
dec
int3
imul
push
cmp
pop
gs
sbb
aam
fistps
cwtl
mov
sub
shrb
das
mov
sub
sahf
cmp
jle
sti
jmp
xchg
in
and
adc
dec
mov
das
sbb
fsubrs
inc
test
xchg
or
add
cmp
jg
xor
aas
jae
fisubl
jp
pop
pop
push
test
std
jbe
scas
sub
inc
or
fisttps
test
nop
add
push
mov
xor
test
lock
and
mov
iret
mov
adc
orl
lea
mov
shl
stc
leave
subl
or
mov
cmc
fmull
fadds
outsl
rcrb
outsl
cmp
mov
or
cmp
pop
or
sub
lds
and
scas
xchg
pop
jne
dec
pop
out
inc
jb
mov
icebp
scas
sbb
xchg
pop
lea
adc
mov
xor
negb
pop
jg
jnp
mov
lahf
add
in
or
movl
testl
pop
cmp
outsb
daa
xchg
adc
mov
dec
and
cmpsl
jne
popl
and
sub
repz
push
mov
mov
and
js
test
mov
fs
leave
ret
push
cli
sbb
addr16
lds
push
iret
pop
pop
loopne
ret
xchg
cmp
xor
jne
xchg
incb
out
xchg
int
stc
and
jge
dec
jg
mov
jp
push
rclb
int3
lret
fwait
mov
outsl
jmp
shl
dec
test
ljmp
push
in
or
mov
scas
insl
add
inc
fistpl
mov
outsl
sbb
js
mov
pop
in
mov
icebp
sub
pop
mov
in
loop
jae
pop
push
add
and
mov
sbb
xor
fcoms
outsl
cmp
sahf
cmp
mov
push
dec
push
jge
movsl
notb
mov
and
inc
sbb
mov
jmp
sbb
mov
enter
or
adc
jg
mov
and
jns
aaa
pop
in
lahf
rep
pop
daa
loop
lret
push
xchg
push
mov
xchg
mov
jl
dec
dec
lcall
popa
mov
xchg
shrb
pop
sbb
mov
pusha
cs
xor
jle
dec
mov
outsl
jnp
loopne
mov
adc
sub
jb
mov
popa
lods
outsb
and
mov
lds
fsts
sti
xor
push
jo
daa
out
testl
mov
fbld
sub
test
lods
in
movsl
pop
movsl
inc
dec
rorb
xor
imul
add
dec
and
sub
loop
mov
das
enter
incl
sbb
mov
mov
repz
pop
outsl
and
mov
jp
sub
mov
mov
ret
dec
fndisi(8087
xlat
adc
mov
add
out
aam
sbb
jno
mov
add
ljmp
and
imul
notl
data16
sub
sub
dec
mov
sahf
iret
scas
arpl
inc
mov
dec
push
or
adc
push
xchg
daa
pop
jmp
test
push
insl
pop
lds
insl
test
jb
mov
inc
cmp
xchg
lcall
out
cmp
mull
sub
stc
daa
adc
inc
pop
pop
aam
push
sbb
xor
outsb
cwtl
cvttps2pi
pop
outsb
sbb
push
loope
aaa
movsl
test
sbb
or
push
push
sub
xchg
hlt
cmp
hlt
aam
loopne
xchg
hlt
cmp
and
add
jmp
shrl
mov
pushf
xor
push
call
out
sbb
and
pop
and
jp
pop
and
jbe
shrl
stos
mov
rcrb
sbb
mov
arpl
mov
mov
mov
popa
out
ror
pop
fnstenv
or
fistl
adc
push
mov
jbe
sbb
sub
sbb
jb
test
aas
test
inc
adc
xor
out
in
push
decl
test
scas
mov
or
sbbb
mov
add
cmp
adc
xor
ja
pop
fisttpll
xor
repz
test
mov
cmp
testb
lock
insb
test
push
or
jl
stc
or
aam
jne
mov
xchg
fwait
mov
mov
cltd
pop
jp
pop
push
mov
ja
frstor
sbb
inc
shl
mov
cmp
mov
xlat
fmul
sub
jne
cmpsb
push
jecxz
mov
jno
mov
inc
sbb
jmp
inc
addr16
push
icebp
rorl
jne
out
int3
and
out
out
cs
mov
xor
pusha
imul
test
stos
pusha
xchg
insb
mov
addr16
push
test
in
push
pop
lret
cmp
je
repz
xchg
sub
sbb
lods
js
mov
out
fdivs
popa
cmp
jg
pop
and
dec
sub
fsubl
mov
dec
stos
cs
mov
aaa
push
pop
or
scas
dec
cmp
and
xchg
inc
sub
pop
jne
and
orb
in
inc
arpl
jle
xor
and
movsl
scas
jmp
xchg
sub
push
in
xchg
push
xchg
pop
ficoml
jmp
icebp
add
lahf
xchg
sbb
jno
sahf
jns
hlt
test
or
jno
adc
cmp
lcall
lock
in
add
lods
fnstsw
mov
sti
iret
mov
lock
test
mov
inc
imul
sbb
jne
dec
add
xchg
popa
pop
mov
in
aam
cmp
xadd
push
repz
adc
gs
xchg
adc
ror
add
ljmp
push
lock
scas
loop
xlat
pop
ret
sbb
in
leave
or
dec
sti
in
jp
loop
xor
mov
outsl
sbb
test
xchg
imul
leave
cld
xor
icebp
into
ret
mov
adc
add
sti
popa
stos
mov
or
push
aas
push
dec
and
cltd
loope
push
jbe
mov
cs
add
loop
cmp
mov
pop
pop
rolb
jo
enter
lahf
cwtl
inc
test
loop
push
push
adc
pushf
inc
pop
sub
fisubs
pushf
cmp
adc
divb
lock
repnz
fildl
jp
jmp
or
pop
loopne
xor
and
or
xchg
pushf
leave
arpl
lcall
icebp
gs
mov
push
mov
xchg
pop
mov
pushf
mov
aam
ret
dec
mov
dec
jbe
pop
mov
xsavec
xor
push
mov
mov
fidivrs
cltd
sbb
in
fwait
movsb
enter
adc
cmp
jl
dec
and
pop
fs
adc
test
cmp
dec
pop
andl
push
jb
cmp
ja
aad
arpl
mov
fwait
aaa
adc
dec
mov
rcl
push
add
shrb
stc
and
int
int3
push
adc
pop
adc
stos
sbb
sbb
xchg
sbbl
xchg
mov
pop
fsts
and
sti
fmulp
sub
xorl
jmp
sub
push
adc
pop
shl
and
or
or
push
enter
sti
or
int
dec
sarl
outsl
sbb
scas
push
cli
inc
dec
mov
and
pop
popa
aas
rcr
inc
mov
inc
aas
jnp
shrb
addr16
jb
sbb
xchg
arpl
pop
outsb
cld
jbe
aaa
pushf
jae
mov
inc
xchg
cmpsb
xor
mov
adc
out
gs
ja
jo
ds
int
cmp
iret
mov
in
or
mov
cmc
imul
clc
notl
roll
lds
nop
aad
hlt
inc
in
mov
imul
les
rorb
mov
xor
movsb
pop
es
add
mov
mov
push
movsl
cmp
loop
shl
xchg
das
ljmp
mov
xchg
xchg
add
addl
lcall
jecxz
aas
jns
mov
xor
jo
jnp
cwtl
jae
or
or
pop
jne
hlt
fimuls
xor
mov
add
in
cmpsb
xor
cmpsl
add
fmuls
call
repz
dec
repz
fiaddl
adc
mov
jae
into
xor
lock
enter
and
shrl
inc
sarl
outsl
mov
pop
test
cmc
neg
jp
sub
movsl
dec
loope
and
dec
fsub
arpl
xor
test
out
stos
jnp
mov
mov
insl
ss
dec
lds
ja
rcll
arpl
pop
shl
gs
push
dec
nop
lahf
rorl
icebp
sub
ds
gs
sahf
mov
test
and
add
cld
dec
mov
and
jge
adc
inc
sub
add
loopne
test
data16
sbb
repz
cmp
sbb
jb
mov
lcall
les
stos
aad
add
sub
push
mov
xchg
and
jns
popf
mov
push
test
inc
jno
xchg
xchg
xlat
ja
sbb
rcll
lods
pop
gs
jb
mov
xchg
pop
ds
add
jecxz
mov
lock
dec
mov
cmp
xchg
xchg
in
pop
in
mov
aas
fsub
popf
xchg
ret
push
push
cmp
cmp
call
cmc
add
dec
les
das
rorb
xor
mov
scas
stos
mov
in
dec
inc
or
dec
mov
nop
xchg
dec
lea
mov
xchg
and
outsl
daa
add
aaa
lret
xchg
std
enter
jno
pop
add
addr16
fidivl
xor
fucomi
cmpsl
push
mov
push
mov
or
pop
inc
into
pusha
adc
adc
fadds
and
es
pop
xchg
push
cmp
jo
mov
sbb
mov
adc
xor
push
push
push
pop
xor
jnp
inc
mov
or
xor
add
mov
rcrl
out
push
and
bound
adc
cmc
mov
repz
lret
enter
push
jmp
out
mov
xorb
daa
pop
push
enter
loope
push
mov
jp
mov
fldt
adc
pusha
aaa
mov
aam
xor
inc
jmp
out
stos
ret
cli
pop
cmp
cmp
xor
mov
andb
fistpl
push
es
loop
loope
lret
out
pop
push
mov
and
andb
jecxz
sub
or
mov
shrd
dec
hlt
cld
adc
lret
mov
cltd
or
cmpsl
dec
in
cmp
mov
or
stos
test
or
gs
push
mov
mov
lock
lods
jg
cs
inc
sbb
adc
bound
lea
cmp
pop
push
mov
push
add
lahf
sbb
ret
popf
push
jbe
pop
insl
xchg
rolb
push
iret
mov
popf
mov
jno
call
notl
bound
js
lret
cvtps2pd
push
arpl
mov
subb
loop
mov
fwait
pop
push
mov
ficoml
or
stc
adc
jecxz
jmp
cld
insb
cli
push
lahf
push
mov
shll
cwtl
loope
adc
cltd
popf
add
fstp
cmp
mov
cmp
or
mov
or
mov
cli
pop
scas
jno
daa
cmc
cli
arpl
les
mov
cmpsb
jnp
xor
andb
add
decb
arpl
mov
scas
outsb
fiadds
mov
fidivl
jb
adc
daa
xchg
add
jmp
push
dec
xor
sub
dec
cmp
jge
xor
ret
jns
cltd
and
push
ds
loop
pop
mov
push
inc
sub
aas
mov
adc
es
mov
dec
sbb
add
arpl
cmpsl
and
xlat
jmp
jb
mov
repz
in
adc
in
rcrb
fmuls
sbb
inc
xchg
or
out
lods
jae
or
sahf
pop
imul
xchg
insb
cwtl
pusha
mov
sub
add
fwait
push
push
jnp
lods
sbb
fiaddl
in
jnp
pop
mov
fidivs
pop
inc
outsl
das
cmpsb
add
cmp
cmp
int3
jno
inc
mov
xor
addb
fs
repz
jle
pop
mul
test
rcrl
pop
sarb
or
out
int
fcmovnb
mov
fidivs
data16
sbb
cwtl
cmp
mov
es
enter
bound
push
fsubrl
loop
cli
add
loope
dec
insb
cld
push
popa
in
xor
mov
mov
insl
lahf
popa
outsl
gs
sub
arpl
dec
pop
xchg
in
push
ja
fs
fiaddl
ds
xchg
mov
mov
ret
outsb
xchg
xor
pop
pop
fabs
in
lret
xor
pop
lret
mov
out
xor
push
pop
push
push
and
pop
pop
jne
push
cmp
out
xchg
ret
sahf
xchg
and
mov
sar
je
and
les
jno
adc
int3
and
push
cmp
and
mov
shll
mov
cmc
popf
cmpsb
movsb
enter
adc
xchg
pop
mov
jle
test
aad
xchg
rolb
mul
xlat
stos
mov
cltd
push
int3
lds
mov
inc
out
pop
add
adcb
add
cmpsb
jp
fists
dec
fildl
pop
push
adc
adcb
xlat
and
mov
jecxz
mov
xchg
mov
fadd
mov
addr16
lret
out
into
test
test
dec
add
cmp
pop
jb
pushf
mov
aam
xchg
daa
ret
pop
inc
mov
push
mov
leave
sbb
cmpsl
push
mov
insl
pop
loopne
fwait
aam
jbe
add
jae
shlb
add
sbb
mov
cli
popa
push
test
dec
fwait
mov
or
add
into
insl
sarb
int
adc
xor
fsubr
dec
call
xor
sbb
sahf
shlb
cmp
inc
cmp
jmp
push
cmp
xchg
dec
pushf
cwtl
xor
rol
aam
mov
pop
cmp
shlb
and
addr16
or
andl
adc
fcomp
sub
pop
pop
test
xchg
add
inc
aas
popl
dec
or
lea
nop
mov
in
lret
pop
adc
jb
in
cmp
and
insb
xchg
mov
inc
or
xchg
or
push
ljmp
test
je
rclb
sbb
insl
ss
ret
or
xchg
aam
lcall
xor
lahf
mov
rclb
sahf
imul
pop
lods
mov
mov
cwtl
movsb
xchg
adc
lods
mov
adc
shll
shrb
stos
push
sbb
hlt
lods
je
out
lea
int3
pop
sub
jnp,pn
js
shrl
cmc
fiaddl
int
popf
bound
and
fwait
cmp
hlt
aaa
push
icebp
into
bound
inc
mov
mov
jle
xor
scas
and
xor
lahf
xor
data16
dec
pop
pop
dec
jecxz
inc
cmp
insl
mov
scas
rorl
sbb
jge
adc
inc
fldcw
and
in
int
jae
wrmsr
fcoml
adc
push
mov
sub
mov
js
add
out
mov
inc
and
push
push
jmp
jmp
sub
mov
hlt
mov
fs
xchg
aaa
pop
mov
fiadds
xorl
inc
dec
push
in
jbe
inc
adc
adc
icebp
cli
dec
sti
and
hlt
mov
loop
inc
mov
pop
mov
sub
int3
mov
pop
lcall
cmc
and
js
pop
test
inc
ds
xchg
std
nop
jno
movsl
mov
or
add
xchg
adc
nop
js
xchg
lret
push
mov
pop
int
mov
push
popf
les
pop
daa
rorb
inc
es
mov
jbe
add
add
push
mov
ret
sub
adc
jge
nop
jbe
push
add
inc
test
mov
inc
lret
xchg
add
and
sub
cli
jp
adc
int
cmc
fcoml
lds
in
add
das
mov
dec
addr16
in
iret
pop
in
jnp
divb
cmpsb
das
mov
jge
sbb
inc
mov
std
pop
loope
sub
pop
xor
ja
inc
push
sbb
pop
fsubr
jae
mov
repz
and
inc
nop
out
clc
gs
push
mov
xor
sub
xchg
hlt
stos
push
push
sub
dec
test
xchg
push
and
sub
jle
jae
dec
in
inc
add
stc
dec
out
sub
sub
arpl
fxch
dec
idivb
ss
mov
mov
pop
or
pop
pop
rcl
cmc
out
shll
dec
iret
inc
or
sti
adc
loope
dec
jg
mov
pop
cmp
adc
mov
ja
mov
push
lods
aaa
mov
out
test
mov
sarb
js
mov
and
lds
cmp
rcl
imul
pop
divl
sahf
sahf
jg
in
leave
les
jg
add
scas
sbb
cld
rcll
cmp
out
je
lods
cmp
pop
pop
add
outsl
imul
ds
inc
xor
out
fcomps
jg
addr16
imulb
jge
mov
and
out
stc
mov
sbb
adc
xor
shlb
repz
or
rorl
cmpsb
mov
pop
mov
xchg
out
lret
rcll
mov
dec
outsl
add
push
testb
repnz
fcmovne
fimull
pop
mov
mov
mov
mov
jl
mov
push
out
mov
stos
and
push
out
dec
mulb
cld
aas
pop
cmp
dec
cmp
outsb
or
test
popf
push
rorb
xchg
aad
rcrb
dec
cwtl
mov
mov
clc
push
lods
fdivr
mov
jecxz
push
add
sub
int
movsb
ja
dec
or
rol
jl
or
ret
lret
or
xor
ret
add
mov
adc
call
aaa
mov
imulb
adc
or
xchg
mov
add
in
adc
popf
int
push
lahf
adc
pop
push
add
int
dec
rcl
push
jle
pushaw
arpl
push
testb
cmp
xchg
cmp
mov
jp
in
gs
jmp
inc
stc
xchg
lcall
cmp
orps
dec
or
push
lcall
mul
mov
lods
mov
xlat
mov
shr
adc
or
xchg
pop
movsl
cmp
jecxz
xor
pop
cltd
dec
jl
mov
pop
cmpsl
or
call
scas
lds
mov
aas
bswap
xor
arpl
cmpsb
pusha
divb
sbb
scas
sbb
arpl
in
fcmovnbe
lods
mov
ret
aaa
lcall
and
push
sbb
add
inc
iret
dec
lahf
cmp
test
mov
dec
pusha
cmp
je
mov
clc
movsl
push
fistpl
xorl
ss
xchg
cmpsb
ret
jne
sub
in
mov
shl
paddsw
jge
mov
sub
sti
inc
pop
sub
dec
arpl
test
nop
xor
sub
or
bound
orb
cmpsl
jb
pop
xlat
xchg
repz
xor
js
fsubl
xor
add
fiadds
mov
mov
icebp
loopne
add
int3
sarl
clc
fwait
mov
mov
clc
lcall
pop
dec
stos
fstl
jp
ret
into
pop
out
push
lods
push
and
loopne
insl
push
int3
bound
jne
imul
ds
mov
iret
push
jae
sbb
mov
movsl
shrb
and
rcr
mov
arpl
into
fstpt
dec
sbb
lods
pop
stc
fldenv
in
mov
flds
push
outsb
fisttpl
and
adc
mov
insb
test
testl
adc
outsl
jp
nop
loopne
xchg
jl
rcl
mov
jmp
out
push
push
push
adcb
sbb
lcall
sub
roll
rclb
adc
mov
xchg
xor
mov
push
fdivp
adc
jno
cmp
mov
imul
mov
lss
lahf
adcl
int
ljmp
add
sub
imul
jae
mov
insb
jbe
pop
mov
nop
push
sbb
scas
xor
out
cmp
xchg
xor
xor
fdivrl
ss
mov
stc
orb
sbb
outsb
addr16
pop
pop
adc
popa
les
divb
mov
clc
or
imull
arpl
mov
mov
pop
jp
gs
imul
hlt
cld
pop
fwait
push
inc
xor
cs
stos
push
jmp
js
dec
sub
shrb
pop
outsb
jno
dec
sbb
inc
jo
mov
insl
jge
fcoms
dec
sbb
push
stos
je
aas
sub
dec
push
and
push
push
dec
imul
repz
cli
dec
out
push
std
movsl
dec
inc
imul
das
lds
int3
das
lcall
les
add
sbb
sbb
jge
mov
or
fcomps
inc
add
mov
push
mov
xor
jecxz
shrb
push
inc
adc
mov
int
or
pop
adc
imul
out
mov
inc
test
mov
mov
sahf
negl
inc
mov
hlt
call
xor
test
cmpsl
outsl
sub
mov
jecxz
sbb
insb
and
fstps
lock
push
xor
ret
das
xor
xchg
in
or
sub
push
cli
insb
inc
xchg
xchg
jmp
subb
pop
bound
ja
dec
push
cs
fistpl
xchg
push
cmpl
mov
loopne
sbb
mov
jg
sbb
shll
dec
sub
mov
mov
rolb
xchg
int
add
sbb
pop
mov
adc
push
sbb
pop
adc
test
xor
lret
sbb
inc
enter
addr16
sub
mov
pushf
jb
mov
imul
pop
sub
mov
cmp
adc
lret
in
and
xor
filds
in
cld
dec
insl
out
mov
push
repnz
jl
js
call
js
pop
xlat
pop
repnz
js
mov
sub
mov
push
inc
popa
fwait
inc
mov
arpl
mov
shlb
leave
xchg
mov
sbb
int
jl
or
pop
add
sbb
and
xchg
movsb
cmp
andb
dec
loop
cmc
mov
dec
lock
cmp
dec
sub
mov
out
adc
mov
lret
in
push
pushf
sbb
lock
pusha
dec
es
mov
sarl
rcr
push
xchg
mov
aas
pop
jno
pop
pusha
int
popf
dec
mov
ret
jmp
addb
mov
mov
sbb
inc
cltd
and
aam
lods
sub
and
fsubl
cmp
xchg
jge
pop
out
in
cmp
shrb
leave
xchg
pop
insb
cmpsl
jecxz
out
or
out
out
sub
fwait
xchg
cmp
xchg
mov
sbb
jo
inc
imul
cmp
fisubs
sbb
sbb
mov
adc
dec
cmp
outsl
pushf
and
jg
jb
sub
jbe
stos
mov
add
sub
movsl
out
mov
push
bound
mov
bound
jle
mov
pop
inc
lret
inc
pop
xor
xor
dec
cwtl
leave
iret
push
movsb
pop
outsl
pop
roll
mov
test
and
jns
aas
loop
xchg
stc
in
int
jmp
and
repnz
dec
xlat
divb
jbe
lods
cld
sbb
out
lret
stos
adc
jne
inc
sub
pop
add
inc
jmp
or
and
inc
cmp
xchg
hlt
mov
andl
push
into
cli
or
and
adc
leave
adc
scas
dec
scas
mov
and
push
sbb
lcall
cmp
popa
andl
jb
out
mov
add
pop
inc
loopne
enter
mov
mov
daa
fidivl
add
sbb
and
jle
sbb
subl
mov
hlt
mov
add
daa
loope
outsb
daa
stc
mov
add
cli
inc
ret
cmp
xchg
jnp
sub
jnp
int
cld
mov
lods
pop
push
imul
mov
lea
int3
fimull
movsl
adc
pop
hlt
movsl
jnp
mov
xchg
inc
push
clc
mov
dec
repnz
mov
dec
push
scas
test
jg
adc
push
sub
jnp
jl
push
xor
jne
adcl
cmp
xor
fdivr
add
mov
push
mov
std
hlt
ja
mov
shl
mov
sub
mov
pop
or
lock
shll
dec
cmpsb
lahf
sbb
dec
inc
cmp
and
popa
dec
dec
insw
faddl
ss
and
mov
clc
jecxz
cli
or
stc
mov
mov
or
jle
rorl
adc
and
test
pushl
mov
pop
adc
push
lods
lods
mov
jg
lods
jo
jbe
gs
sahf
out
mov
mov
or
inc
inc
lds
in
sarb
adc
push
loope
push
mov
enter
hlt
adc
ret
xor
and
sti
lock
int
addl
push
rolb
cmpsb
daa
sbb
data16
ljmp
mov
stos
mov
jno
xchg
mov
cmpsb
jg
mov
movsb
test
enter
fdivl
push
lret
test
pop
mov
addl
or
movsl
push
adc
fmuls
push
aaa
sbb
mov
sti
and
scas
add
ljmp
push
mov
imul
loope
fs
sahf
rorb
mov
fldt
pop
sub
mov
flds
pop
gs
push
scas
xor
xchg
mov
loop
daa
fbstp
aaa
mov
jle
jle
xor
cmp
in
stos
daa
adc
loop
outsl
cmp
mov
repnz
into
adc
roll
jmp
loop
lahf
dec
scas
sub
xchg
jecxz
dec
repz
ret
out
xchg
int
pop
inc
insb
mov
mov
notb
lods
andb
nop
ret
inc
cmp
pop
jecxz
lcall
mov
inc
inc
mov
ret
es
sub
iret
xchg
insl
ja
push
sub
test
popf
pop
push
fdivp
addr16
lahf
jecxz
add
jo
mov
bound
xchg
pop
nop
inc
cmp
pop
sti
jg
inc
mov
daa
fcmovu
jae
mov
pop
out
cmp
and
pop
addl
lea
lret
orl
std
int
mov
and
xchg
out
add
dec
mov
fldenv
ror
es
lcall
push
jmp
xor
ret
cmp
xlat
roll
sti
icebp
add
ja
inc
or
xchg
mulb
mov
in
scas
arpl
dec
sub
nop
cmp
sbb
cmp
push
jmp
pushf
cmc
cmc
dec
mov
mov
out
mov
mov
jg
int
outsb
aad
jo
sbb
xchg
movsl
fwait
or
xor
insl
test
insl
das
sbb
mov
in
rorl
xor
adc
or
fisttpll
rcrl
mov
mov
xchg
mov
cmpsb
clc
hlt
outsb
adc
push
int3
xchg
fdivp
and
aaa
imul
bound
mov
xchg
cmp
mov
fcoml
cmpsl
add
add
sarb
stos
jecxz
sbb
lahf
pop
mov
not
cmp
inc
fwait
leave
outsb
mov
into
push
fs
mov
hlt
xchg
sahf
lcall
addb
loopne
lods
test
rolb
push
cmpsb
inc
lds
and
aaa
orb
jl
jae
dec
outsl
cmp
dec
imul
jle
lods
das
adc
js
mov
push
aad
and
dec
test
outsb
ss
dec
in
and
jg
jp
pop
mulb
repz
cwtl
cmpsl
fistpll
outsb
sub
dec
fmull
sar
and
and
push
les
push
iret
jbe
repnz
push
fsubs
mov
aaa
jl
xor
lea
stc
mov
je
cmp
and
mov
scas
pushl
xor
imul
mov
fldenv
push
adc
pop
adc
adc
xchg
pop
pop
stos
nop
jle
mov
js
and
mov
pop
data16
cmp
fsqrt
les
and
push
cmc
dec
mov
into
sbb
sbb
popf
out
jnp
push
mov
shr
push
sbb
cs
stc
jge
aad
mov
in
jecxz
sarl
ficomps
std
and
or
xchg
add
xchg
jp
push
sti
addr16
push
push
insl
push
and
mov
in
mov
and
mov
ljmp
fimuls
mov
loop
pop
xchg
inc
cmp
shlb
dec
or
mov
les
push
mov
adc
es
imul
or
adc
stos
mov
jbe
cli
add
test
lahf
mov
das
rolb
inc
cltd
pusha
in
sbb
in
iret
mov
icebp
mov
imul
rorb
daa
add
pop
lods
sbbb
add
mov
xchg
inc
and
jns
dec
ret
xchg
fmuls
lods
sbb
push
xchg
in
push
gs
out
arpl
loopne
fcoms
out
cld
in
jnp
xor
push
push
fs
inc
and
adc
js
jmp
insb
fnsave
jno
and
faddl
call
arpl
sbb
mov
rcrb
xchg
mov
clc
cmp
pop
mov
and
mov
cwtl
in
outsb
xorl
xchg
fstl
add
adc
orb
cmp
and
rol
mov
xor
xchg
adc
sub
sbb
sub
hlt
divb
mov
pop
or
call
mov
cld
xchg
xor
or
inc
lahf
fwait
test
and
rcl
pop
loop
or
dec
movsb
jg
mov
rclb
inc
cmc
push
dec
sbb
les
movsl
adc
arpl
cmp
insb
das
push
fistl
pusha
mov
fsubrp
sbb
rcrb
or
lret
out
and
test
rcr
fwait
cmpsl
insb
je
ret
jo
jl
xor
repz
iret
and
or
lret
lidtl
aad
sub
xchg
test
pusha
xor
jbe
add
fcomps
push
in
insb
loopne
push
mov
insl
ja
jmp
push
pop
sahf
out
and
into
sbb
outsl
in
inc
mov
sbb
and
push
jae
int3
add
or
cmp
jbe
addr16
arpl
repnz
ret
cwtl
fcmovnb
mov
pop
add
shlb
dec
in
notb
jmp
jl
lods
or
jae
mov
and
inc
dec
xor
sub
mov
push
xor
dec
ss
pop
pusha
fisubs
lahf
or
shll
es
xchg
bound
dec
insb
cmp
dec
push
jnp
cwtl
test
js
std
or
ret
fidivl
jge
clc
cmovb
xor
fisubrs
out
push
pop
inc
lock
mov
mov
jg
adc
xchg
aad
imul
mov
or
mov
lods
test
mov
jmp
mov
adc
sbbl
mov
jo
jecxz
push
leave
inc
sahf
outsl
rcll
and
iret
cmp
cwtl
gs
pop
mov
dec
call
mov
adc
sub
dec
popl
adc
xchg
mov
sti
add
jecxz
fisubl
jle
out
js
addl
jo
out
test
jmp
cltd
setg
sub
cltd
and
jno
sti
and
mov
jo
push
mov
add
nop
test
dec
xchg
mov
and
mov
imul
and
add
sbb
cmp
xor
test
push
mov
movsl
scas
out
sbb
xchg
push
pop
insl
mov
adcl
jae
cmp
ss
loopne
ret
jae
mulb
adc
iret
mov
xchg
lcall
in
and
daa
xchg
jbe
pop
jnp
inc
sub
fadds
lcall
fidivl
fcoml
mov
mov
mov
cmc
dec
sub
js
stos
jmp
jg
popf
mov
pop
rcrb
fwait
cwtl
popa
stc
mov
lods
int3
sbb
pop
ja
pop
sub
repz
adc
dec
push
or
mov
pop
cmp
xchg
adc
adc
mov
loopne
inc
mov
mov
cmp
pop
xchg
xchg
ljmp
loope
and
lock
mov
jmp
inc
lahf
cmp
xchg
push
in
in
cltd
cmp
stc
in
lods
dec
mov
mov
xor
scas
mov
and
cmp
fwait
pop
daa
sub
push
scas
xor
daa
or
xchg
jle
push
imul
and
in
jae
sarb
ljmp
arpl
clc
decb
or
fistpl
mov
mov
inc
fimull
mov
lcall
shll
ljmp
enter
mov
xor
in
or
insl
mov
xbegin
mov
jg
dec
cmp
jecxz
aam
jae
xor
xchg
test
sbb
lcall
ljmp
add
jp
xchg
adcl
loopne
jno
xchg
pop
arpl
mov
mov
push
mov
xor
daa
push
or
std
lret
and
subb
stos
sarb
xor
jb
push
pushf
and
out
clc
mov
ja
test
or
dec
xor
sbb
cli
mov
dec
ret
sbb
push
jp
push
imul
int
leave
shlb
mov
js
daa
push
fnstsw
mov
roll
movsl
push
push
in
mov
cld
dec
xor
aam
enter
adc
xlat
mov
test
and
insl
in
mov
fwait
xchg
icebp
jno
clc
pushf
mov
mov
aad
cld
inc
xor
dec
push
pop
push
mov
lahf
rolb
cld
add
scas
iret
sbb
add
test
test
mov
addr16
lds
aad
push
pusha
inc
dec
xchg
shrl
push
fcoms
imul
push
and
out
stos
pop
mov
mov
sub
fidivrl
xchg
cmp
stc
fisubs
sahf
sti
mov
mov
shlb
push
lds
dec
divl
xchg
in
out
cmpsl
jmp
shr
ljmp
mov
rorl
jno
pusha
jg
fadds
inc
or
cmpsl
ss
mov
subl
and
jae
loopne
sub
add
adc
enter
addr16
sbbl
pop
in
fistpl
ret
push
aad
jb
dec
fistpll
fstp
mov
imul
ret
pop
add
push
jo
data16
movsl
mov
aad
mov
test
add
scas
lret
sbbl
xchg
and
mov
inc
mov
inc
sub
jno
sub
and
shl
imul
xor
test
lds
xchg
iret
or
mov
lret
orl
mov
in
xchg
adc
jb
aaa
adc
adc
fwait
ret
subb
cli
fbstp
inc
inc
dec
xor
jnp
outsb
mov
lcall
test
adc
xor
sbb
icebp
cwtl
add
jge
std
mov
pop
ljmp
in
sub
int3
leave
or
ss
mov
mov
cld
out
and
xor
push
pop
imul
lock
inc
daa
lds
dec
lret
pop
mov
and
sub
sti
es
adc
or
jns
int3
cs
inc
in
inc
dec
out
mov
sti
rorl
or
cmp
lock
jne
push
xor
or
je
sub
mov
mov
mov
xor
fwait
mov
xor
enter
sysret
into
hlt
test
sbb
mov
pop
in
pop
ret
add
jae
push
aaa
mov
getsec
push
sbb
mov
inc
test
imul
dec
movsb
and
movsl
xchg
fisubrl
cmp
xor
xchg
insb
lahf
xor
push
aad
sub
daa
pusha
jle
add
test
jne
mov
push
ret
adc
add
xor
jmp
sbb
stos
pop
push
inc
mov
testb
mov
repnz
mov
lock
push
mov
jmp
mov
scas
adc
rorb
xor
or
out
sahf
iret
or
ljmp
loopne
xchg
jbe
xor
mov
cmpsl
mov
les
sbb
add
nop
shll
aad
lods
jp
les
flds
cmp
sbb
dec
jns
aaa
dec
or
xchg
push
fistpl
xor
imul
pop
jge
ficompl
dec
mov
icebp
in
popa
subl
sub
mov
jno
or
cld
dec
xor
dec
cwtl
imul
mov
cmc
rcrl
nop
or
jl
lret
hlt
fdivrl
mov
mov
fnstsw
lret
lock
cmp
push
shrl
mov
push
dec
nop
lret
fsubrl
sti
mov
sub
xchg
js
inc
dec
sar
daa
stc
rol
fisubs
repnz
lds
mov
mov
jae
cmp
int
mov
or
pop
mov
loop
mov
or
cmpsl
data16
pusha
pusha
rolb
daa
movsl
cmp
inc
in
fidivl
loopne
imul
mulb
arpl
cld
adc
mov
enter
inc
aaa
call
pop
jge
push
ss
sub
or
pop
lods
sub
je
pop
sbb
dec
repz
mov
addb
xchg
adc
cs
test
loopne
dec
adc
mov
xchg
or
sub
pop
mov
lods
add
mov
pusha
pop
sub
lock
lret
jae
imul
fldenv
jmp
push
cmp
fldenv
mov
decb
loope
out
leave
cmpsl
in
ss
mov
lds
imul
ret
enter
mov
test
lcall
inc
outsb
lock
stos
mov
cwtl
fldcw
xchg
jge
aas
mov
ds
pusha
adc
loope
xor
inc
sub
insl
and
fldenv
or
mov
xchg
mov
cltd
cld
cmp
xchg
mov
pop
push
mov
push
cmp
dec
aaa
sbb
ds
js
filds
and
cltd
outsl
add
fdivs
das
push
pop
sarb
cwtl
sti
sub
and
sub
pop
push
outsl
pop
lret
jl
mov
stos
jle
sbb
mov
shll
cltd
arpl
lahf
test
pop
js
and
add
pop
xor
xlat
mov
and
pop
rclb
jl
js
mov
push
pushf
cmpsl
and
mov
sti
cmp
or
loopne
add
push
push
jg
pop
add
cmp
push
call
push
mov
ficoml
pop
int
enter
in
jbe
mov
outsb
lods
shr
sub
das
push
sbb
je
roll
pop
lahf
xchg
mov
outsl
sahf
xchg
or
loope
dec
mov
adc
popa
jle
std
jns
icebp
in
add
cmc
outsl
and
in
push
ret
cmc
dec
mov
scas
pop
int3
jno
repz
adc
insl
push
loop
mov
aaa
sbb
cs
ret
pop
mov
stos
fnsave
jle
pusha
mov
clc
or
inc
repnz
imul
into
fs
cli
push
mov
jle
jnp
mov
mov
jp
je
xor
inc
jns
pop
inc
cmp
aaa
add
cli
adc
ds
push
cmc
adc
dec
stc
adc
sar
out
sbb
add
cmc
mov
dec
fimull
aas
sub
jae
ljmp
mov
xchg
bnd
jl
and
imul
test
and
jnp
and
orl
ficoms
or
xchg
add
insb
ret
jmp
push
cmpsl
adc
sbb
ret
and
cli
in
ja
mov
xchg
adc
in
mov
push
dec
insb
pop
xchg
cmpsl
mov
in
lds
jne
es
mov
iret
cmp
pushf
pop
pop
push
cmp
mov
inc
xchg
lock
cmp
inc
add
xadd
push
fwait
xchg
out
sub
loopne
out
push
clc
pop
in
cs
or
sbb
and
add
int
cwtl
cmc
iret
scas
enter
in
ds
cmpsl
push
in
data16
pop
test
pop
inc
cmp
push
xor
andl
sbb
aad
dec
add
and
jno
lcall
or
cli
mov
cmpsb
rcll
inc
cmp
inc
loop
inc
xor
aas
cmpb
ret
add
pop
iret
sub
in
mov
cwtl
lods
jbe
jl,pn
in
jnp
pop
es
std
xor
ja
mov
add
push
loope
or
pusha
xchg
sub
rorl
or
js
repnz
dec
add
push
or
out
cld
sarl
out
cmp
enter
insb
inc
loop
mov
out
dec
xor
jp
fdivrl
mov
jo
loope
adc
sbb
fildl
subl
stos
movsb
sub
clc
lods
add
subl
idiv
cli
dec
sbb
sbb
mov
js
xor
fistps
xchg
inc
mov
imul
stos
lods
pop
nop
aam
jmp
ja
push
push
je
push
in
shrl
repnz
das
pop
mov
bound
aas
and
mov
push
pop
adc
adc
movsb
jns
lock
mov
xchg
push
pusha
popf
mov
test
mov
or
out
inc
cmp
les
cli
jnp
repz
sub
xchg
lock
outsb
pop
mov
stc
push
imul
push
push
cmp
jbe
push
sbb
stc
sbb
cmp
and
push
fmuls
fisubs
fldenv
or
notb
mov
insb
outsl
in
mov
jo
pop
rolb
fisttpl
popf
pop
inc
js
xor
leave
jae
in
iret
inc
mov
sbb
or
push
js
ss
sti
mov
and
rorl
xchg
outsb
or
aad
lods
mov
and
fwait
xor
cmpsl
jmp
jp
sub
insl
mov
push
ficoml
js
loopne
fsubrl
pushl
cld
lahf
xorb
insl
nop
jns
sbb
mov
push
jmp
inc
jg
call
cmpsb
add
cmpsb
dec
dec
sti
sbb
arpl
jl
inc
pop
icebp
in
xor
dec
mov
cs
outsb
insl
sub
ret
add
cmpsl
lcall
jb
xor
lds
lods
xchg
xchg
sbb
aam
out
sarb
xor
jne
js
loopne
fwait
pushf
stos
push
test
cld
in
sub
push
adc
jo
cld
xor
push
jmp
ljmp
bound
mov
inc
nop
xchg
add
pop
fiaddl
add
mov
and
aaa
js
or
sbb
and
xchg
je
outsl
ja
jecxz
pop
inc
lea
pop
cmpsb
push
add
mov
stc
and
pop
loope
orb
or
sub
jmp
es
dec
sarb
mov
jno
sub
dec
shll
or
jecxz
mov
fwait
jno
mov
xchg
xlat
pop
push
jno
add
shl
push
and
mov
ret
push
pushf
lahf
push
or
jo
push
or
enter
lods
inc
sbb
stc
mov
nop
sub
pop
add
fwait
inc
xchg
data16
mov
data16
testl
cmp
jno
cmp
pop
bswap
repz
dec
fwait
cmp
and
mov
dec
ja
imul
sub
xchg
ror
push
cs
and
lret
jbe
mov
sbb
shlb
xchg
xor
jp
test
ret
mulb
stc
pop
push
sbb
stc
aaa
adc
add
out
cmpl
test
ja
or
mov
pop
loope
push
stos
inc
mov
rcl
test
test
sbb
jp
push
mov
leave
mov
aam
roll
lods
cwtl
ljmp
iret
lea
push
mov
jmp
xchg
or
mov
inc
sub
js
out
dec
xchg
mov
mov
xchg
mov
jnp
xor
jecxz
daa
mov
faddl
lods
mov
push
jle
sbb
pop
cltd
pop
jne
add
mov
and
in
pushf
mov
xchg
mov
mov
adc
push
lret
call
jnp
ja
negl
xlat
testb
pushf
or
xchg
das
mov
int
xchg
mov
or
repnz
mov
jns,pn
or
call
jno
mov
mov
push
jle
mov
cmpsb
or
fsubl
scas
imul
shrb
cmc
mov
fcoml
inc
cmp
jbe
outsb
cmp
shlb
push
inc
push
adc
cmpsl
imull
jmp
sub
bound
movsl
es
std
inc
pop
sbb
pusha
cmp
pop
cmpb
mov
push
mov
and
mov
cwtl
pop
in
out
ficoms
add
lds
repnz
and
push
xchg
jb
push
sub
jb
cld
cmp
cld
push
add
mov
or
mov
mov
or
int3
js
lods
insl
test
mov
mov
fistps
aam
xor
movsb
loopne
pop
or
xor
pop
rcr
test
fnstenv
push
icebp
sub
inc
fs
sbb
or
inc
push
pop
movsb
sbb
iret
mov
add
gs
and
sbb
in
fists
xlat
inc
xchg
daa
mov
es
fcmovb
add
in
jb
into
ret
aas
nop
adc
jno
or
push
cmp
cmp
xlat
roll
pop
mov
arpl
idiv
add
or
mov
stc
rcl
or
aad
cs
sahf
sub
repz
test
adc
xchg
sub
sub
arpl
testl
aam
fcomp
or
adcl
adc
movsb
cmpsb
bound
xchg
and
ja
and
push
xchg
sbb
pusha
and
mov
xchg
inc
xor
les
xor
fs
aad
push
mov
mov
xchg
sub
in
mov
xchg
adc
sbb
inc
jnp
insl
and
inc
fwait
pop
jae
push
sti
pop
pop
sub
pop
mov
mov
out
mov
fsubs
pop
out
jns
sar
fstpl
jl
cmp
inc
pop
nop
or
mov
dec
sub
cmp
xchg
insb
cli
popa
mov
sarl
pushf
mov
popa
imul
imul
jg
push
pop
add
scas
and
mov
adc
mov
dec
sti
push
xor
aas
inc
cli
std
xchg
aaa
andb
jge
repz
test
and
mov
enter
add
stc
rcr
imul
dec
lea
mov
inc
lcall
enter
push
mov
sti
ds
test
in
xchg
mov
cmp
fwait
dec
xor
sbbb
mov
fstpt
rol
jae
jns
dec
add
or
xchg
outsb
push
pop
mov
clc
pop
setl
push
jne
jmp
dec
mov
ret
xchg
lea
scas
mov
mov
inc
dec
aad
fdivl
gs
aad
push
mov
mov
testl
pop
cmp
push
pop
mov
sub
int
daa
ljmp
or
cmp
mov
push
shlb
rcrl
cmpsl
xor
jmp
in
mov
sbb
out
mov
fwait
push
pop
cmp
jno
idivb
leave
fisttpl
cli
out
sbb
push
movsl
pop
je
lahf
es
push
dec
cmp
pop
sbb
dec
sub
and
inc
xchg
daa
setp
mov
sbb
adcb
out
fcmovnbe
mov
or
adc
pop
fadd
and
push
mov
pop
xor
mov
nop
push
iret
add
pop
xor
fcmovnbe
stc
mov
lods
lds
mov
push
ss
xchg
xchg
lcall
popa
lret
inc
mov
push
outsb
sbb
stc
repnz
push
pop
jo
pop
sub
dec
pusha
and
out
andb
and
cmp
inc
adc
jmp
shlb
xchg
lds
mov
lock
repnz
cs
or
aas
cmp
jle
sub
push
stos
aad
sbb
outsb
mov
mov
scas
add
or
xchg
dec
aas
outsb
mov
push
push
and
lods
dec
or
sub
pushf
call
sub
int
nop
xchg
test
cmc
test
add
xchg
jg
iret
sbb
dec
and
fnstenv
call
mov
pushf
push
xor
mov
sub
jo
adc
sbb
xchg
sbb
lods
adc
sbb
or
das
test
cwtl
add
testl
fwait
add
out
mov
cmp
popf
mov
jnp
or
xchg
nop
dec
sub
inc
data16
repnz
out
and
cmp
aas
das
mov
sti
pop
lock
loope
mov
and
fucomi
inc
inc
mov
push
fisttps
lds
sub
cmp
mov
sbb
mov
in
jmp
add
jmp
xor
dec
xor
and
sbb
addr16
lods
out
mov
and
loopne
xchg
ficoml
movsl
fwait
cwtl
add
inc
out
scas
fs
call
dec
add
cmpl
jg
dec
dec
mov
ret
test
push
fisubs
sub
xchg
pop
mov
pop
shll
lret
stos
sbb
push
push
lods
stos
outsb
loope
jmp
cmp
bound
jg
les
ret
pushl
jg
popf
push
imull
jnp
cmp
mov
mov
cld
adc
xor
xchg
movsb
aaa
incl
inc
jb
lret
cs
arpl
stc
mov
jmp
scas
imul
fs
xor
xor
out
pusha
into
xchg
inc
cmp
popa
pop
sub
daa
jbe
aas
sub
mov
addl
mov
fxch
xchg
and
loope
sub
jge
cmp
aaa
xchg
dec
or
xchg
out
or
add
adc
decl
dec
or
sahf
popf
xor
cmc
xchg
pop
lods
sarl
pop
mov
cmp
xchg
jnp
dec
das
cmp
sbb
stos
int3
jns
mov
out
mov
sahf
xchg
test
ds
jae
add
adc
pop
mov
pop
mov
push
mov
nop
mov
iret
or
push
ss
mov
aas
adc
xchg
sahf
hlt
pop
andb
mov
loopne
push
push
aam
xchg
cmc
sbb
dec
fistpll
sarl
rcrb
int3
push
lret
xor
adc
pop
or
sbb
popa
fwait
nop
sbb
cmpb
mov
jg
pandn
inc
scas
imul
nop
loope
adc
lock
sub
mov
push
xchg
push
aas
iret
jl
pop
sub
lds
mov
hlt
add
hlt
mov
cmp
loopne
bound
pop
lret
cli
inc
cmc
sbb
roll
xor
xchg
inc
incb
enter
pop
mov
and
test
jge
out
inc
aaa
or
pusha
std
icebp
in
pop
into
fwait
into
rcr
pop
daa
sub
ja
lea
test
cmc
add
dec
mov
or
jbe
addl
jmp
jmp
dec
mov
enter
mov
rcrl
int3
dec
mov
dec
lds
jbe
jmp
dec
ljmp
xlat
lea
clc
adc
push
enter
hlt
cmp
mov
lahf
xor
mov
out
cmp
jmp
outsl
test
add
cld
push
push
jno
out
or
fbstp
lea
pop
das
jns
xor
pop
jg
sarb
push
cmc
call
and
cmp
push
cld
sub
mov
int3
movb
xor
xchg
push
jp
adc
adc
aaa
jmp
lods
pop
push
pop
mov
out
lods
imul
jns
mov
push
clc
mov
dec
xlat
gs
ja
xchg
fcompl
pop
insl
fldt
enter
push
add
movsl
push
jbe
aam
mov
lret
cmc
mov
cwtl
mov
sub
xor
movsb
insb
sbb
pop
stos
lods
pop
cli
mov
pop
push
in
orl
test
xchg
and
fwait
add
ret
fs
xchg
inc
mov
lret
stc
addr16
sbb
stos
testl
mov
push
adc
mov
loope
rcl
iret
and
pop
arpl
xor
add
jo
xor
add
xor
jno
rorb
hlt
repnz
jnp
xorl
ret
jle
mov
mov
shl
mov
cmp
test
mov
lea
test
aas
ljmp
shlb
xor
dec
mov
or
ficompl
jp
enter
and
repz
pop
mov
pop
addb
ss
bound
pop
lods
lahf
cmp
leave
insb
dec
das
xchg
push
outsl
sbb
cmp
lods
lret
imul
imul
mov
outsl
sti
cld
lcall
or
cmc
enter
jo
out
push
insb
pusha
jae
clc
xor
add
into
das
cmp
in
xchg
push
lods
jno
and
movsl
jno
jns
cld
pop
mov
or
fmul
mov
push
mov
out
pop
test
sub
mov
aad
push
push
cmovp
jp
inc
jecxz
and
ja
shlb
and
leave
cmpsl
fistps
rcr
sub
or
out
add
sub
sub
insb
test
insl
das
cmp
negl
add
dec
out
add
stos
rorb
jae
dec
cmp
mov
out
inc
inc
or
add
adc
jmp
lret
push
outsb
add
aam
and
loopne
popa
jae
push
repnz
push
jb
bts
inc
out
fwait
jae
aaa
ds
ds
pop
gs
int3
xchg
xchg
mov
fdivrs
sbb
xchg
call
iret
cld
jb
mov
jecxz
das
push
lret
pop
bound
jmp
mov
sti
fsubl
xchg
dec
movsb
xor
push
mov
loop
arpl
jmp
adc
inc
and
pop
cmp
rolb
push
fadds
lahf
sarl
sub
dec
push
xchg
push
dec
test
jmp
jae
fst
adc
pop
daa
xor
cmp
push
cmp
andb
mov
mov
mov
jp
xor
jl
out
insb
cmc
jle
sub
inc
fistpl
or
xor
add
jb
stos
sub
add
fstpl
cmp
add
xchg
inc
outsb
xor
sbb
in
into
std
mov
inc
sbb
jnp
das
mov
add
push
stos
mov
cmp
loopne
mov
dec
imul
pushf
lds
xchg
sti
out
xor
inc
out
mov
xor
jg
mov
cmp
bound
ss
add
in
xchg
movsl
adc
pop
push
mov
fyl2x
cs
aas
mov
mov
or
in
subl
js
stc
cli
rcl
mov
fsubl
les
stc
dec
pop
int
add
ficomps
mov
push
pop
shrl
cmpsb
mov
loope
out
pusha
int3
iret
cmp
and
cmpsb
dec
imul
lods
xor
jl
outsl
or
fmuls
add
dec
js
and
lret
mov
scas
gs
daa
jecxz
cmp
loope
ror
mov
inc
mov
fsts
adc
sub
scas
imul
add
call
add
mov
negl
repz
pop
loop
repz
jecxz
outsl
dec
add
dec
fmul
fmull
jmp
or
inc
testl
aas
repnz
mov
scas
cmc
sahf
inc
shll
bnd
push
mov
fsub
dec
ljmp
jns
mov
pop
adc
lcall
pop
aas
jge
cmpsb
lret
or
sti
and
aas
xor
fists
icebp
add
sbb
pop
cmc
mov
inc
jecxz
aad
mov
mov
mov
aam
dec
adc
imul
sub
cltd
pusha
jnp
push
mov
xor
fwait
jae
cld
fld
ljmp
dec
push
dec
push
fwait
xchg
pop
aad
push
jge
and
out
movsb
mov
adc
loope,pn
lret
aas
xchg
insb
sbb
dec
arpl
fistps
daa
mov
repz
pop
cs
shll
lret
cmpsb
sub
cmpsb
mov
push
dec
add
jns
mov
mov
inc
rolb
jl
in
xor
aaa
js
inc
bound
mov
ss
sub
cmp
out
jb
jo
jbe
ljmp
dec
aad
loop
es
cmp
mov
fidivrl
iret
fwait
and
and
add
outsl
lea
pop
in
lcall
mov
scas
nop
xchg
mov
inc
xchg
mov
pop
popf
jle
loope
test
ret
notl
out
mov
push
mov
push
jg
cmpsl
std
pop
cmc
scas
ss
nop
fmul
or
inc
jnp
or
jo
iret
pop
and
fsubs
mov
nop
and
cmpsl
jns
sbb
push
out
pop
cmpsb
rclb
xchg
sbb
and
pop
pop
cmp
add
stc
popa
adc
dec
mov
inc
sbb
cltd
xchg
iret
incb
inc
neg
dec
sub
ret
cmpsl
jecxz
les
lods
pop
jae
dec
test
adc
dec
rorl
inc
jp
iret
sub
mov
lea
xchg
adc
cmp
clc
xchg
sub
jns
aaa
outsl
ret
dec
add
das
loop
jnp
cmp
adc
mov
jecxz
inc
push
mov
test
push
ja
push
sbb
dec
add
sub
stc
sub
fstpl
jns
jl
jp
hlt
dec
mov
out
orb
lcall
shlb
fs
idivl
stos
and
lret
sbb
out
or
sbb
cli
ret
divl
andb
sbb
fidivs
jne
aas
pop
ljmp
xor
mov
pop
and
lods
push
jmp
iret
loop
push
in
jle
lods
ljmp
sub
lret
inc
out
scas
dec
iret
nop
lcall
mov
cmc
jno
push
jno
hlt
outsl
push
enter
loop
aam
mov
xor
pop
cmc
arpl
jl
mov
sub
cmc
sbb
cmpsb
mov
dec
jae
xorl
repnz
jecxz
xor
pushf
inc
push
adc
dec
inc
cmp
subl
xor
pop
jb
fmul
ss
sub
cmp
add
js
sbb
dec
dec
out
movsb
les
lret
hlt
mov
jnp
mov
pop
xchg
sub
ret
sub
mov
fcomps
pop
repz
fs
cmp
xchg
mov
pusha
xor
xor
inc
out
das
cmp
push
addl
int3
lea
mov
add
inc
add
les
mov
push
scas
or
cmp
test
js
dec
inc
fs
outsl
mov
aam
mov
ds
in
cmp
dec
iret
cld
add
push
xchg
aam
dec
xchg
out
aad
dec
cli
jmp
shll
jno
jno
or
jl
cmp
xchg
movsb
sub
jo
mov
icebp
jns
mov
push
cs
out
sbbl
aaa
out
and
rorl
insb
arpl
push
inc
hlt
movsl
popa
rcrb
pop
nop
sub
in
mov
xor
adc
iret
dec
or
test
adc
push
adc
es
repz
out
adcl
adc
jno
out
pop
outsl
mov
sbb
mov
pop
mov
dec
jg
insb
pop
add
jle
sbb
repz
movsb
pop
pop
dec
mov
inc
scas
mov
pop
sub
jne
imul
adc
jmp
sub
push
lret
cmp
mov
mov
mov
sub
jnp
aaa
lahf
mov
into
pushf
xchg
xor
push
aam
fldl
test
inc
sbb
cli
adc
jne
adc
pushf
mov
int
jb
inc
mov
push
add
pop
lret
pop
mov
lret
mov
js
int3
pop
out
mov
insb
mov
xchg
jo
jo
dec
fimull
inc
add
jl
adc
aad
mov
inc
mov
add
jl
push
aad
add
sbb
jo
or
xchg
ret
fcoms
mov
pop
xchg
ljmp
sub
cli
mov
jg
mov
xor
xor
outsl
je
xchg
aam
aad
addl
mov
dec
mulb
pop
adc
dec
testb
sub
aaa
aaa
mov
stos
cld
or
hlt
js
mov
xchg
jecxz
sti
out
lods
sbb
xor
cs
push
gs
cmp
leave
lret
jnp
out
mov
das
nop
cmp
push
ffreep
push
or
addl
fsubl
daa
add
push
enter
repnz
sbb
data16
aas
fs
add
push
mov
fsubrl
insl
ret
xchg
push
or
cld
cs
scas
mov
xor
cmp
sar
xchg
sahf
mov
or
ret
add
inc
sti
out
cwtl
les
testl
push
add
andl
push
sbb
and
push
outsl
and
outsb
aam
inc
es
imul
cmpsb
push
loope
pushf
push
push
hlt
je
ljmp
out
adc
aas
pop
lock
dec
xorb
mov
xor
jmp
cmc
hlt
inc
popa
mov
test
dec
xor
cmpsb
sbb
in
test
scas
dec
adc
aad
sarl
push
mov
xchg
cmc
int3
mov
inc
mov
insl
add
push
push
sub
mov
daa
push
sub
cs
dec
es
and
xor
jg
out
repz
add
or
das
scas
xchg
nop
mov
xor
lret
jl
add
push
outsb
divb
rcpps
mov
je
loope
pop
adc
ja
pop
pop
hlt
lret
imul
lret
popf
roll
divl
scas
add
mov
jg
xchg
or
push
clc
mov
ds
fistpl
cmp
inc
mov
pusha
sti
shl
add
lahf
pop
lcall
loopne
popa
fldcw
mov
into
xchg
cmp
sub
cltd
lret
cli
dec
xchg
testl
pop
mov
out
loopne
add
es
fldl
outsl
push
inc
sub
push
dec
shrb
ret
lock
xor
dec
cmpsl
inc
inc
das
xor
adc
bound
aas
in
mov
call
push
mov
mov
pop
sahf
add
xor
push
and
jmp
into
cmp
xchg
jne
mov
jg
adc
lahf
test
mov
or
inc
add
aam
jge
das
das
mov
and
inc
push
loopne
inc
pusha
aam
jle
ljmp
mov
adc
xor
ja
fwait
stc
mov
fwait
mov
ds
inc
add
adc
ja
imul
xchg
dec
xor
mov
jb
cmp
movsl
and
pop
leave
sub
xchg
test
sub
mov
xchg
xor
jno
lds
jp
and
mov
xchg
sbb
lcall
in
mov
pop
jg
movsl
push
clc
scas
movsb
aam
repz
or
jne
aaa
jp
stc
adc
fcomp
das
xor
test
cmp
sti
mov
inc
push
loopne
daa
lret
in
cmpl
lcall
test
insb
xchg
mov
lret
or
push
rclb
test
pop
icebp
xor
push
xor
cmp
ds
or
mov
jecxz
popa
test
rorl
xor
jmp
movb
lret
jmp
outsl
data16
mov
dec
jb
movsb
lea
addr16
add
or
sub
jbe
out
xchg
ja
enter
pop
ret
std
add
add
xchg
pop
sub
nop
xor
data16
xchg
fiaddl
pop
pop
pusha
out
pop
addr16
sbbl
out
test
int3
fstpl
loope
inc
cmpsb
bound
popf
jne
mov
pop
sahf
and
fsubs
xchg
mov
cmp
cld
jge
mov
or
sub
mov
mov
add
aad
sub
push
xchg
scas
hlt
adc
ja
pop
sbb
sub
dec
ja
mov
adc
iret
flds
pusha
lods
outsb
into
stos
jl
mull
cwtl
fldt
cmp
add
mov
pop
xchg
add
stos
add
rcrl
xchg
in
stc
mov
and
lock
jns
lods
mov
mov
add
stos
cmp
aam
cmp
xlat
pusha
stc
test
or
cltd
icebp
mov
push
mov
pop
mov
les
jecxz
mov
sbb
cli
clc
adcl
cmp
pop
shll
and
inc
roll
dec
sbb
in
rcr
sub
push
loope
clc
mov
daa
fwait
ret
sbb
cwtl
pop
dec
mov
ss
aas
and
popa
dec
punpckhbw
fbstp
lahf
cmpb
xlat
pop
mov
lret
adc
aam
add
and
enter
add
ja
dec
arpl
and
jge
jbe
mov
stos
pmulhuw
das
pop
mov
mov
sub
sbb
cmp
lcall
bound
leave
jns
pop
enter
fstpt
push
cmp
add
in
pop
xchg
stos
loop
cmp
mov
cwtl
push
lea
mov
pop
and
mov
mov
xchg
sbb
pop
cld
dec
xchg
pop
jl
mov
popa
xchg
lcall
sbb
pop
hlt
push
and
mov
stos
int3
ss
xchg
jecxz
mov
sar
adc
in
jno
dec
mov
mov
lcall
or
ja
sbbl
push
leave
cmp
xchg
fisubl
mov
ja
mov
mov
xor
jb
mov
push
xor
sub
or
xchg
imul
jno
cmp
loopw
incl
mov
push
or
fmuls
sahf
jge
push
idivb
stos
cmc
popa
inc
mov
xor
aad
mov
cmp
lahf
rcll
sbb
pusha
jae
lods
movl
push
sbb
insl
lret
cmpb
loop
popf
mov
adc
adc
mov
xchg
hlt
call
es
xchg
lret
push
or
dec
fldcw
sbb
adc
inc
pushf
xchg
add
push
stc
test
adc
addb
in
mov
aaa
sbb
mov
outsl
pop
test
add
add
sahf
rorb
push
call
jge
dec
push
imul
arpl
inc
out
jmp
enter
dec
in
arpl
sbb
or
inc
pop
shlb
sbb
sub
rolb
and
jnp
jge
test
jne
cmpsb
add
sbb
add
loope
sbb
adc
adc
push
mov
inc
outsl
cmc
je
push
call
dec
in
insl
cmpsl
ret
mov
roll
div
inc
test
loope
inc
int
lret
stc
arpl
je
shl
mov
inc
stc
inc
hlt
pop
lret
pop
into
ds
adc
lods
push
cmp
stos
lods
loope
xchg
add
mov
ljmp
jle
inc
xchg
hlt
mov
mov
js
sbb
mov
or
fsubrl
in
jns
xlat
rorb
pop
push
jbe
or
adc
xchg
cmpb
inc
xor
addl
add
xchg
mov
push
rcrb
orb
or
orb
mov
orl
imul
inc
xchg
movsl
or
push
mov
and
insb
ret
mov
cmp
lahf
cltd
adc
dec
mov
fildl
dec
mov
inc
adc
mov
push
mov
rcrl
and
fisubl
ret
push
sub
ljmp
sbbb
test
imul
imul
roll
test
mov
mov
outsl
mov
and
ljmp
ss
stc
jb
cmc
arpl
mov
xchg
mov
mov
mov
pop
scas
inc
jecxz
xlat
subb
lods
adc
int
les
pop
lret
std
js
stos
or
xor
xchg
leave
jno
call
fistpll
or
enter
idivb
je
xchg
loop
imul
or
sub
insl
cmp
roll
daa
out
popa
inc
in
fiaddl
ljmp
push
lret
leave
aam
rcl
sbb
mov
add
mov
jbe
jmp
movsl
lds
push
mov
jle
imul
jl
test
pop
xor
sbb
mov
filds
js
push
loope
pop
out
jecxz
mov
sbb
mov
movl
xchg
jge
movsb
cmpsl
adc
pop
test
je,pn
fs
add
push
std
cmp
rorb
add
pop
lods
or
and
outsb
push
cld
ljmp
stos
stos
jmp
pop
shlb
adc
movsl
div
or
fldl
rcl
adc
dec
mov
jg
mov
lock
or
push
mov
pop
mov
xor
push
add
xor
add
sub
jl
xchg
lock
xor
sti
mulb
fisubrl
mov
call
add
xor
lods
in
or
mov
cmpsb
push
iret
arpl
xchg
jmp
cli
in
lock
or
add
mov
ja
popf
sbb
fbld
outsl
push
movsl
jmp
movb
shlb
xor
push
jb
pop
cmp
xor
sub
sbb
lret
sti
daa
scas
jp
dec
movsb
in
rcll
stc
dec
stos
ss
and
out
and
xchg
aam
xlat
imulb
mov
dec
jno
fimuls
pop
aaa
pushf
xchg
test
or
mov
lret
xlat
xor
bound
or
mov
sbb
pop
sbb
push
xor
mov
push
mov
mov
xor
mov
mov
and
fisubrs
lcall
xchg
mov
mov
mov
popa
mov
mov
test
das
movzbl
rclb
dec
subl
inc
adc
adc
adc
int
mov
mov
mov
out
arpl
cmpsl
dec
xor
and
shll
bound
pop
lret
or
shrb
out
mov
xor
in
dec
mov
ror
lods
loop
mov
mov
xor
test
adc
data16
adc
push
insb
fdiv
sub
sbb
jne
push
mov
rclb
bound
imul
shl
mov
xchg
aas
cmp
xchg
lahf
cmp
inc
xchg
inc
popf
xor
xor
or
lods
lods
fnstsw
jb
adc
and
mov
rcrl
out
iret
xchg
jae
or
xor
cmpsb
mov
cmc
aam
jne
lods
pop
mov
pop
iret
fdivr
xor
lods
push
stos
push
cwtl
je
scas
jne
pop
and
lret
pop
popa
in
push
cmovb
clc
sbb
sub
js
mov
scas
fcmovbe
cmp
xor
inc
scas
hlt
pop
mov
lea
pop
repnz
inc
cmpsl
movsw
loopne
push
bound
rclb
cli
popf
icebp
jle
pop
bound
aas
push
test
int3
jns
jmp
dec
scas
dec
ret
lret
sub
and
out
mov
inc
test
mov
mov
lock
xor
pop
int3
pop
lahf
das
sbb
xchg
pxor
cmpsb
pusha
xchg
xchg
adc
ficoml
adc
hlt
into
mov
scas
lcall
lret
int
jbe
std
stos
and
cs
les
and
divb
fmul
fldcw
or
out
stos
aam
ret
lret
nop
js
lcall
jp
mov
or
test
inc
push
popa
sub
lds
inc
shrl
xchg
jg
mov
sbb
adc
in
test
ss
lds
cs
stc
int
sub
ds
xor
test
jns
lahf
dec
stos
sbb
pop
jp
lea
cmp
fdivrs
or
and
repz
jo
xor
fldt
rolb
jae
daa
jl
int
mov
int3
xor
pop
repnz
negl
sahf
and
pop
cmp
sub
les
xor
xchg
jle
mov
and
jne
frstor
fnsave
adc
out
adc
in
sti
and
push
scas
pushf
push
dec
aas
adc
gs
mov
push
add
scas
jge
aam
pop
daa
out
into
add
cmp
mov
cmc
adc
icebp
outsl
scas
stos
test
loopne
mov
leave
xor
cmp
daa
adc
out
jmp
notb
cmp
cs
loope
inc
mov
sub
adc
in
fdivr
inc
pop
sbb
push
mov
mov
fs
out
push
stc
xor
mov
ret
push
inc
sti
and
jl
lret
jecxz
aam
addb
jb
dec
data16
xchg
push
lahf
aas
cmc
cltd
and
insb
cmp
push
jno
dec
cmc
sub
data16
and
aam
xchg
jge
or
jmp
add
push
pop
ret
push
inc
mov
dec
sbb
in
mulb
in
lret
sbb
or
adc
dec
inc
rorb
into
icebp
sti
loop
out
insb
jo
sahf
cmpsl
add
out
xor
xor
lret
sub
jmp
push
mov
push
roll
add
sub
adc
mov
inc
ja
mov
inc
or
mov
mov
cmp
les
jnp
icebp
repnz
xor
in
imul
add
jno
mov
sub
test
cld
add
sbb
dec
addr16
call
mov
insl
sbb
pop
mov
jae
sub
inc
mov
xchg
adc
popa
les
cli
and
pop
pop
inc
js
jp
imul
das
xor
xchg
cmp
mov
pop
mov
mov
jns
pop
adc
sub
jp
popa
out
outsl
cmp
hlt
cmpb
mov
mov
pcmpgtw
mov
and
fwait
mov
adc
out
cs
inc
mov
aad
xchg
jg
sub
mov
leave
mov
adc
cmpsl
stos
cmp
aas
leave
call
lahf
add
mov
sbb
lock
cmp
imul
dec
aad
or
rorl
and
push
sub
adc
frstor
fcoms
shl
jns
jne
dec
xchg
dec
aas
pop
fcompl
pmulhuw
jbe
mov
orl
cwtl
inc
mov
xchg
add
add
cmp
imul
sub
insb
fdivrl
nop
sbb
pusha
fidivl
pop
mov
add
dec
fimuls
push
mov
jnp
pop
and
scas
cld
iret
dec
add
test
and
test
inc
scas
xchg
popf
inc
adc
sub
loopne
jge
xor
pop
test
push
jb
xor
xlat
outsl
in
add
mov
in
push
jg
ret
incb
loope
insb
orb
les
aaa
mov
stos
mov
mov
jp
jnp
movsl
or
sti
outsl
leave
jo
and
std
orl
cmp
sub
clc
mov
aam
es
test
fildll
leave
or
sub
loope
cmp
cltd
rcr
xlat
mov
sbb
adc
push
cmp
cmp
call
mov
mov
flds
divl
inc
daa
js
xor
stos
sahf
leave
arpl
mov
popf
shlb
cmp
les
jbe
das
es
lods
mov
xchg
int
dec
sbb
movsl
xchg
sub
push
pop
aas
outsb
adc
add
lret
or
das
mov
pop
aad
stc
outsb
addr16
sub
lds
faddl
je
inc
imul
adc
daa
xchg
xorl
data16
jle
ficompl
cmp
lcall
sbb
loop
sub
movsb
out
inc
push
mov
iret
scas
outsb
js
lds
enter
leave
mull
push
mov
jmp
pop
mov
mov
nop
and
mov
sarl
into
adc
call
out
push
je
or
inc
and
sbb
mov
inc
cld
ss
push
pop
pop
sub
inc
mov
adc
and
dec
xor
mov
mov
adc
and
pop
movsb
or
data16
push
pop
jp
mov
rcr
jecxz
sbb
dec
lret
shrd
xor
in
mov
mov
pop
fisttps
ret
data16
pop
outsb
mov
sti
dec
pop
sbb
ret
push
xchg
jo
je
and
dec
mov
mov
xor
pop
xchg
push
out
push
xchg
adc
add
lret
add
cmpsb
mov
add
movsb
faddl
or
mov
jno
mov
aas
pop
push
imul
jmp
mov
push
mov
lods
cmp
xchg
cmc
pushf
rcpps
out
pop
movsb
movsl
dec
mov
fcompl
add
mov
sub
pop
scas
xchg
icebp
xor
push
fisttpll
xlat
fxch
dec
push
xchg
out
test
fiaddl
test
push
clc
xor
sub
dec
in
or
mov
es
rcrb
cmpsb
and
shl
sbb
mov
mov
jl
pop
fsubs
fucomip
sbb
test
cmp
mov
or
sahf
out
dec
outsl
adc
cmpsb
fiadds
sub
mov
and
jle
push
inc
xchg
arpl
dec
cmp
and
sub
push
xor
lds
add
dec
es
inc
dec
mov
fisubl
cmpsb
cmp
dec
push
stc
dec
fwait
jnp
out
jnp
int
in
sbb
jp
push
dec
xorb
out
subb
dec
in
mov
addr16
dec
pop
add
or
sub
cmc
inc
lods
lret
in
or
ficomps
mov
repz
aas
sbb
lds
repnz
push
mov
fldcw
pop
dec
add
test
out
inc
dec
arpl
lock
sub
sbb
aas
and
scas
cmp
int
int3
inc
aad
fadds
std
sub
jb
and
sbb
push
incl
mov
cmp
or
adc
xchg
stos
pusha
inc
sbb
repnz
or
add
loop
pop
in
lahf
mov
xor
test
xchg
add
out
mov
movsl
ss
mov
fisttps
jne
fldl
stos
jne
xchg
test
popa
jae
dec
push
ljmp
jmp
cmp
stos
inc
insb
push
lcall
add
and
or
cwtl
cs
xchg
dec
add
pop
jnp
jno
fimull
popa
lahf
mov
mov
mov
push
into
push
cmp
dec
mov
xor
mov
sub
inc
push
lea
fs
clc
dec
pop
cmpsb
xchg
out
dec
mov
adc
test
xchg
cmpsb
ja
add
sahf
adcb
push
das
stc
pop
mov
out
cmp
jae
cmp
mov
scas
xor
pusha
xor
push
inc
mov
or
rcll
mov
fsubs
out
mov
mov
insl
mov
add
dec
cmpsb
mov
mov
adcb
out
scas
movsb
dec
mov
add
movsl
stos
or
or
inc
mov
adc
mov
add
testl
dec
lea
xchg
dec
jo
fidivrl
ds
mov
mov
push
inc
scas
add
inc
sub
jp
or
adc
cld
les
shll
sbb
sub
dec
les
loopne
cmpl
add
add
xor
mov
popf
clc
sbb
cmp
pop
sbb
xlat
mov
lahf
mov
push
add
adc
dec
fisttpll
inc
mov
mov
xor
jno
lret
xchg
cld
lret
std
cmpsl
inc
sub
mov
xor
cmpsl
addr16
inc
pop
out
repnz
dec
lds
sbb
jae
les
mov
mov
cmc
movsl
sti
cltd
sbb
mov
arpl
cmpsl
dec
cltd
repnz
and
sub
xor
jge
nop
rorb
std
mov
clc
in
ds
es
xor
popf
mov
inc
int3
arpl
enter
inc
mov
loope
sarl
xchg
jne
push
jns
inc
aad
cmpsl
add
push
or
pusha
iret
push
and
push
push
adc
enter
ret
into
mov
mov
jg
addl
aaa
icebp
mov
inc
fimull
add
pop
jl
repz
scas
pop
inc
push
pushf
and
xor
jns
lea
out
mov
or
movb
or
push
cmp
mov
dec
popf
mov
aas
stos
push
cld
jle
cmp
cmp
stos
pop
in
ss
clc
sub
pop
movsb
lret
cmp
cmp
add
inc
jb
fdivs
ja
scas
les
dec
push
cmp
jg
pop
sbbb
and
xor
aas
mov
jmp
sti
lcall
push
lret
jb
lods
ljmp
xor
pop
jle
pusha
pop
fwait
inc
enter
lock
mov
cmp
dec
cmpsl
leave
cwtl
add
or
push
cli
add
mov
loop
or
pop
cmp
xchg
insb
dec
ds
add
mov
or
mov
rcr
sbb
cwtl
cmp
xchg
cmpsl
sub
or
sub
es
cmp
jne
ficoml
adc
push
mov
pop
sub
in
jmp
push
cmp
fcmovnbe
jp
pop
out
push
xchg
pop
xchg
jg
out
arpl
loope
lcall
icebp
enter
into
cli
mov
cmpsb
into
mov
mov
inc
movsb
sbb
add
mov
sti
mov
cmpsl
sub
cli
aad
das
adc
mov
jg
out
iret
pop
jb
adc
imul
iret
push
cwtl
lret
pop
lcall
das
call
les
rorl
fdivl
sbb
xor
mov
dec
cld
push
mov
fidivrl
inc
xlat
push
fisttps
mov
enter
inc
xchg
sub
xchg
lcall
shll
sbb
shl
jbe
and
out
cli
mov
stos
adc
int3
pushl
mov
lock
sbb
push
in
scas
pop
dec
pop
in
sahf
call
xor
push
lret
xor
inc
jp
adc
imul
push
repz
dec
jp
xor
sbb
aas
test
in
lret
leave
sub
insb
sbb
mov
xor
jne
shrb
test
fcompl
int3
sub
sub
lret
je
cmc
int3
adc
nop
mov
dec
xor
jmp
inc
fmuls
add
jne
mov
add
sahf
mov
add
or
movsb
cmp
push
mov
in
fbld
cmp
sbb
sahf
sbb
gs
jno
mov
xchg
sar
bnd
pop
mov
push
adcb
push
stos
dec
dec
repnz
cmpsl
mov
or
xchg
in
push
sbb
or
or
dec
push
call
xor
push
inc
lahf
stc
fists
or
jno
clc
and
lea
xor
test
inc
cli
push
jle
dec
xchg
push
lahf
cltd
rorb
insb
jne
dec
shll
adcl
sub
mov
jae
pop
jl
cs
fcomip
mov
lods
icebp
out
pop
add
daa
inc
pushf
jne
push
aaa
loopne
sahf
jne
aas
in
fxam
add
fmull
pop
dec
je
ljmp
jne
lcall
in
sbb
mov
out
imul
inc
dec
mov
stos
add
sbb
cli
es
add
pop
mov
dec
push
pop
mov
pusha
inc
xchg
lds
jle
mov
xor
mov
xor
lret
call
call
xchg
pop
sbb
pop
sarb
imul
fmull
cmp
or
stos
movaps
sub
add
xor
dec
daa
jno
nop
xor
mov
inc
loop
push
cmp
jbe
stos
lea
push
int
jae
repz
test
and
xchg
and
xor
pushf
push
mov
dec
ljmp
out
pushf
jns
ljmp
daa
scas
cwtl
sti
pop
incl
ja
fnstcw
pop
push
fs
inc
idivl
es
xchg
je
js
out
daa
push
adc
leave
out
in
mov
sub
aas
enter
xor
push
mov
into
hlt
inc
enter
add
mov
push
stos
lock
jno
outsl
jecxz
mov
ja
mov
or
ljmp
ds
xchg
sbb
adc
push
pop
stos
mov
cld
add
cmp
adc
lock
add
xor
mov
or
test
movsb
jae
and
shl
xor
xor
loope
mov
lret
lret
dec
sbb
cmp
gs
push
sbb
mov
sub
paddd
sub
loopne
mov
jmp
clc
fimuls
movsb
ljmp
xchg
fstps
repnz
jp
fwait
xchg
inc
movsb
cmc
jae
dec
mov
sub
pop
lret
js
xor
fnsave
mov
mov
in
imul
cwtl
xchg
mov
and
adc
push
and
repz
sbb
mov
mov
cmp
out
ret
mov
adc
loop
lods
fistpl
jle
ret
xchg
cmc
sbb
les
mov
popf
or
jg
ret
out
repz
hlt
push
cs
sub
bnd
hlt
inc
dec
add
sbb
in
pop
pop
lods
add
adc
jle
fsubrs
inc
aam
rcr
dec
and
ss
mov
loopne
sbb
fistl
in
loope
cli
cmp
into
fiaddl
pop
int3
push
dec
loopne
insb
outsb
jb
mov
jecxz
in
fwait
loope
sub
jno
push
inc
sbb
xchg
js
and
push
sub
popa
xchg
cltd
out
lods
out
jmp
outsl
lret
fdiv
pop
push
sbb
add
insl
out
repnz
xor
in
iret
mov
cmc
lea
es
jo
jnp
xor
pop
pop
or
movsl
andb
sbb
pop
mov
icebp
out
xchg
dec
insb
inc
pop
mov
pop
pop
mov
ljmp
mov
xor
push
lock
pop
jae
adc
pop
pop
cwtl
xchg
inc
inc
xchg
fsqrt
jo
loope
push
jge
and
pop
cmp
aam
in
das
sahf
dec
add
push
sbb
out
idivb
pop
jne
cmp
nop
cmp
xor
add
pop
out
jno
shll
add
adc
das
stc
leave
pop
mov
loopne
and
push
or
mov
dec
mov
push
xor
sbb
xor
adc
cmp
and
movsl
fistl
push
mov
dec
lds
lods
pusha
xor
fcmovnbe
push
jb
je
or
mov
testb
dec
dec
movsb
adc
add
cmp
add
fwait
inc
mov
fwait
add
mov
xchg
sub
jne
mov
pop
std
stc
shrb
add
pop
loopne
xor
sahf
sahf
jmp
push
add
xor
out
inc
mov
lods
cwtl
fs
in
ds
ljmp
outsb
lds
pop
cmp
jbe
lea
xor
dec
add
mov
push
insb
js
mov
inc
lahf
jp
cmp
popf
int3
fisubl
mov
es
xor
mov
call
or
adc
jne
adc
in
enter
xchg
das
lds
add
pushf
dec
jl
cltd
and
pusha
sub
adc
add
push
sbb
ret
push
jmp
cmp
xchg
xor
xor
pop
dec
lods
and
dec
aam
clc
fisttpl
shrl
lods
mov
xlat
cmp
sub
or
ss
jl
adc
push
test
mov
and
das
cmp
shrl
loope
aam
jmp
test
dec
jge
rorl
sub
sbb
xor
shr
shl
shld
inc
add
xchg
das
out
inc
or
inc
cmp
aas
or
adc
dec
ljmp
data16
sarl
int3
test
movsb
sub
aam
push
and
gs
cltd
push
pusha
lea
mov
xor
adc
push
push
imul
and
in
ljmp
dec
loope
data16
mov
cmp
jmp
inc
lods
les
movntps
pop
inc
jge
or
or
push
push
push
mov
in
repz
stos
movsl
push
xchg
call
out
xor
or
ds
popa
fidivl
mov
cmpl
cmp
cmp
add
push
push
jmp
pop
push
add
jmp
fisubrs
mov
pop
jg
push
mov
outsb
arpl
push
push
or
gs
ds
int
cmp
jg
sbb
jecxz
pop
or
das
mov
dec
stc
inc
xor
pop
or
inc
mov
scas
aam
mov
jns
daa
enter
in
mov
loopne
lods
enter
scas
inc
jmp
test
pop
pop
push
mov
sub
inc
lea
mov
or
gs
rcll
mov
mov
mov
cmp
dec
xchg
sub
xor
add
out
adc
addr16
in
dec
cmp
push
call
loope
filds
push
cmp
cmp
inc
sti
lods
mov
movsb
cld
js
ljmp
adc
pop
and
lock
or
dec
in
pop
sbb
mov
nop
outsl
mov
push
cwtl
into
ljmp
pop
adc
mov
sarb
sub
lock
cld
add
ljmp
sahf
addr16
in
cmp
js
std
jg
or
enter
xor
mov
iret
int
or
popf
data16
jne
pop
sbb
scas
cltd
mov
roll
int3
testb
push
out
and
adc
push
xchg
outsb
adc
mov
out
decb
in
addb
or
push
xchg
jae
and
cmp
mov
arpl
or
outsl
pop
push
movsb
test
mov
add
pop
mov
add
in
pop
out
mov
out
cmp
in
xchg
push
lcall
pop
push
rclb
sbb
lret
fsubs
cmp
das
jnp
jbe
out
dec
insb
pop
outsb
jecxz
add
pop
cwtl
inc
adc
stos
push
mov
fcmovnu
xor
inc
inc
out
repz
mov
dec
mov
push
adc
lods
arpl
sub
jbe
ret
pop
cld
add
lret
adc
out
sub
lret
cmp
or
les
pop
cmpl
jmp
or
pop
mov
les
test
inc
xchg
fdivrp
dec
fidivl
into
fcmovb
and
jp
pop
loopne
mov
or
xchg
mov
sbb
sti
adc
loope
cmp
sub
jge
sbb
shll
add
fs
repnz
sub
call
push
loopne
pushf
nop
and
and
dec
add
outsl
shrb
add
lahf
shl
pop
inc
jo
into
lahf
sub
or
jo
pop
or
fldl
mov
rcl
lods
mov
ss
sahf
push
pop
les
push
movsb
ljmp
pop
cmp
xchg
fcompl
test
arpl
sub
mov
jno
inc
pop
sbb
push
iret
loopne
push
test
push
jb
mov
je
jg
insb
nop
pop
cli
mov
lret
ljmp
sbb
fstpl
adc
daa
and
mov
adc
push
fdivrl
aas
test
fcomps
mov
mov
test
mov
lods
lea
cmp
pop
add
lock
into
or
fnstenv
xor
pop
ljmp
cld
aad
and
jl
inc
xchg
inc
lea
sbb
aas
adc
aad
sub
xchg
movsl
mov
inc
xchg
push
push
add
hlt
xchg
repnz
testl
jl
dec
stc
decl
movsl
sub
mov
repnz
pop
out
fists
inc
addr16
test
scas
mov
fidivs
clc
mov
pop
push
sbb
mov
cmpsl
xchg
push
sbb
pop
imul
xor
std
ffree
iret
in
fstps
xchg
mov
les
icebp
xor
and
je
cltd
jl
jl
cmp
sbb
mov
or
arpl
and
mov
gs
test
aaa
loopne
incb
scas
fsubrl
outsl
push
jno
jnp
out
rcrl
mov
fnstcw
fdivl
inc
sbb
pop
jecxz
lret
cli
dec
icebp
inc
mov
dec
lods
pop
dec
or
xchg
sub
pop
xor
lds
mov
popl
inc
mov
xchg
test
xor
inc
jae
rcrl
les
jno
inc
std
stos
cld
push
xlat
gs
xchg
bound
mov
jo
xor
out
lahf
iret
adc
xor
pop
mov
das
mov
lods
out
xor
cltd
cmpsb
cmc
test
dec
sub
pop
jg
jge
pop
int
mov
inc
cmp
push
stos
sahf
inc
mov
je
adc
dec
mov
es
xchg
fldl
xchg
ds
xchg
int
stos
pop
or
pop
pop
push
hlt
icebp
xchg
addb
mulb
xor
push
clc
adc
into
mov
incl
inc
dec
xor
inc
jmp
lahf
outsb
inc
dec
ret
int
inc
mov
inc
sbbl
out
inc
pop
sub
and
jae
mov
dec
inc
sahf
xchg
lcall
sub
add
out
cmc
jg
pusha
xor
adc
aam
jo
push
leave
fsubs
fisubs
pop
sbb
cmp
xor
xchg
xor
dec
sbb
outsl
lock
mov
in
cmp
es
sbb
loop
mov
or
and
inc
mov
pop
mov
sub
xchg
adc
shlb
test
insl
mov
mov
iret
xchg
adc
cld
add
add
cmp
xor
dec
xor
rcll
sbbl
cmp
das
mov
add
adc
push
mov
cmp
sbb
nop
or
scas
out
dec
lahf
rol
pop
rorl
add
inc
push
hlt
jnp
test
jo
movsl
push
xlat
testb
add
int
in
ficoms
mov
aam
sahf
and
push
mov
or
aas
loopne
xor
xchg
pop
stos
enter
and
and
mov
pop
lods
push
mov
das
or
inc
sbb
test
mov
cld
fs
mov
jmp
pop
inc
add
fiaddl
fmuls
lods
lcall
cli
shlb
dec
mov
cmp
xor
xchg
inc
or
mov
sub
lahf
lcall
or
mov
adc
xor
in
mov
fdivl
mov
and
add
data16
les
sbb
dec
sub
push
xchg
xchg
rcr
mov
inc
push
cltd
inc
cmpsb
jmp
cmp
sub
std
shl
sbb
dec
mov
mov
add
aas
sub
aam
xlat
mov
in
xchg
jl
xor
rorb
test
xchg
lea
outsl
out
push
mov
enter
mov
adc
arpl
pop
ljmp
mov
loopne
push
cld
inc
jno
inc
arpl
hlt
loope
inc
xor
sub
out
jle
cld
inc
jmp
imul
adc
xor
pop
mov
xchg
ja,pn
sub
dec
xchg
jno
xchg
in
pop
pop
sub
std
in
or
lret
dec
in
xlat
mov
ja
adc
outsl
scas
shlb
push
add
inc
enter
add
mov
in
decb
mov
movsbl
adc
fisttps
stos
jge
sub
push
sub
sub
xchg
shrb
sub
and
xor
shll
add
cmp
mov
icebp
scas
out
fs
jo
mov
jae
movsl
inc
popf
dec
mov
es
mov
pop
lods
into
push
faddl
push
pause
push
and
stc
in
pop
out
sarb
scas
and
and
orl
scas
adc
test
push
and
and
rep
imul
jge
dec
icebp
leave
pop
adc
sar
test
or
sub
jnp
mov
out
loopne
cmp
testl
in
sbb
ljmp
lcall
mov
xor
or
or
cmp
add
arpl
fcompl
je
int
stos
sbb
jecxz
mov
mov
rcrb
cmp
fs
xor
jnp
lret
xlat
les
cmpsb
dec
nop
sbb
pop
mov
arpl
fwait
pop
test
loope
test
push
jo
pop
add
rcr
in
ja
daa
scas
push
push
cmpb
adc
std
and
fwait
lea
push
loopne
repnz
test
cmp
add
sub
xorb
imul
into
xchg
push
iret
out
and
scas
gs
cmp
out
enter
dec
adc
sub
add
aas
cmp
add
aad
pushf
fisubrl
pop
lret
xor
shlb
jl
cs
sti
xchg
jno
inc
and
and
pop
repz
stc
sahf
push
gs
dec
sbb
and
dec
add
int3
pop
in
and
mov
jno
and
sbb
xchg
sbb
ljmp
push
test
or
pcmpgtd
je
jnp
leave
push
push
jno
mov
in
mov
inc
scas
mov
push
xchg
dec
mov
sub
sbb
popf
push
inc
add
ss
pop
insb
mov
loopne
mov
jge
js
call
int3
data16
inc
popf
mov
sbb
mov
sub
mov
jb
mov
inc
sahf
jne
stc
gs
scas
cwtl
xor
das
mov
or
xchg
popa
push
jg
sahf
mov
xor
js
add
fiaddl
fstpl
and
jp
cmp
insl
pop
filds
fsubl
or
stos
rorb
ret
cli
xchg
scas
clc
aam
sahf
jb
je
cmpl
mov
es
pushf
jp
lcall
jbe
push
mov
pop
push
xchg
rorb
scas
xchg
dec
pusha
addr16
push
ret
clc
mov
mov
out
cmpsl
lods
dec
repnz
mov
rolb
dec
orb
jmp
rep
add
mov
jae
inc
pop
scas
aas
in
call
cmp
outsb
or
push
add
mov
mov
int
add
jmp
pop
inc
js
jge
fsub
pop
enter
pop
lahf
or
mov
cltd
cmpsl
cmp
push
mov
add
xchg
repnz
xor
movsb
mov
sbb
nop
xchg
js
sbb
je
dec
pop
in
jae
rcl
push
movsb
js
mov
call
test
pusha
loope
pusha
je
inc
insl
ret
xchg
call
mov
movsb
and
std
leave
enter
dec
stos
mov
add
sahf
push
add
outsb
mov
jnp
pop
cld
gs
and
aas
xorl
inc
push
and
mul
mov
out
addr16
sub
pop
adc
inc
sub
loopne
outsl
jge
decb
push
lret
push
xor
daa
dec
emms
mov
fs
pop
dec
out
hlt
loope
cmpsl
jae
rcll
jg
insb
mov
sub
pop
insb
and
cmp
sub
jge
imul
adc
shll
pop
push
inc
mov
xor
enter
testb
add
cld
std
or
out
fidivl
shll
pop
add
jns
jge
punpckhwd
pop
insl
dec
ljmp
and
jne
movsb
dec
or
out
je
dec
out
dec
add
pop
pusha
dec
xor
sahf
lahf
push
dec
jb
xor
pop
mov
mov
pop
inc
fidivrs
data16
mov
pop
ljmp
imul
add
pop
xor
pop
jbe
add
scas
or
inc
jp
push
lods
mov
pop
cld
jmp
push
jp
insb
mov
push
ss
in
lcall
or
data16
push
dec
add
pop
sub
mov
mov
je
in
lods
ds
scas
sub
addr16
in
xor
mov
ficoml
xchg
test
pop
push
addl
add
mov
cmp
inc
repnz
mov
nop
xor
xchg
fstpt
xchg
shll
call
aad
addb
add
es
mov
xor
mov
xor
sub
lea
aam
loope
dec
stos
sub
movsl
mov
mov
in
mov
add
out
shlb
sahf
mov
xchg
repnz
pop
add
pusha
dec
into
rcrl
in
mov
sbb
mov
pop
xorb
ja
cmp
cmpsl
enter
mov
pop
push
lock
ret
sub
xlat
add
orb
test
ror
add
and
mov
and
inc
iret
jecxz,pn
aad
movsb
mov
mov
push
sub
std
adc
out
das
sbb
push
divb
stos
xor
mov
sub
xlat
or
shll
rclb
ja
add
mov
and
or
ds
xchg
je
mov
push
mov
idivl
sbb
pop
add
icebp
xor
mov
leave
ds
not
xchg
inc
sub
mov
dec
pop
adc
mov
or
and
cld
mov
and
cmc
bnd
das
sub
outsl
sti
imul
cmp
loopne
jnp
idivb
push
roll
and
inc
cmp
imul
js
mov
inc
push
les
int
popf
repnz
cmpb
sarb
cmp
loope
gs
repnz
mov
xlat
mov
into
lods
adc
pop
call
and
sbb
cmp
test
xchg
lahf
cli
lds
mov
pop
addb
sbb
sbb
inc
nop
adc
les
inc
sahf
sub
out
xchg
dec
adc
addr16
lock
xor
push
mov
jecxz
or
mov
push
jae
xor
aam
sbb
cmpsl
decb
sarb
ss
jae
aas
cltd
mov
push
test
pop
subl
dec
iret
insb
add
jp
jb
or
sbbl
icebp
clc
aaa
int
decl
ss
dec
mov
add
cmpsl
sbb
xor
jnp
lea
std
cmp
cmp
in
xor
adcl
je
add
push
add
jo
repz
clc
or
sub
xchg
iret
stos
movsl
add
cmp
sarb
xchg
xchg
adc
iret
xchg
jnp
ret
pop
push
aam
xor
cmpsb
mov
push
fisttps
cmp
or
mov
jae
ret
dec
mov
repz
xchg
mov
subb
sub
cmpsb
bound
xlat
fldcw
insl
push
xchg
add
or
mov
dec
out
adcl
adc
and
ja
push
and
ljmp
pop
xchg
xchg
js
cmc
out
ffreep
mov
adc
sahf
leave
jp
ds
repnz
jge
scas
xchg
adc
fmuls
and
cmp
aaa
xor
adc
mov
jl
ds
aam
popf
int3
pop
mov
xchg
rolb
sbb
mov
repnz
add
subl
push
xchg
int
insb
xlat
sbb
mov
pop
inc
add
test
xor
pop
inc
orl
ret
aas
notb
aaa
sahf
lret
js
sub
pop
mov
mov
or
pop
lret
aas
fwait
push
fcompl
pop
je
jne
pop
test
mov
inc
push
dec
inc
imul
push
cmpsl
xor
movsl
leave
fnstenv
pop
fsubl
mov
dec
adc
add
xchg
xor
cwtl
fcomps
cwtl
inc
aam
mov
ret
pop
scas
into
paddw
jae
push
xor
jmp
push
inc
jge
xchg
sbb
sub
push
loop
mov
cmp
lret
xor
dec
jl
loopne
out
xorb
fnsave
mov
imul
sbb
push
shl
or
fisttpll
call
js
push
mov
mov
jne
bound
in
mov
inc
push
lods
jp
push
mov
jmp
repz
add
or
aas
xchg
pop
stc
cmp
jno
cmp
pop
pop
or
or
vmovupd
or
cli
lods
push
in
mov
fldcw
subl
in
jb
jl
shlb
vunpcklps
test
mov
sub
sbbl
mov
nop
in
addr16
push
stos
dec
loopne
rorl
cmp
jp
xchg
jne
pop
clc
mov
jle
mov
jbe
jmp
testb
sti
cwtl
cmp
mov
adc
jmp
fidivl
adc
xchg
lcall
cld
push
fwait
daa
jne
iret
ret
mov
ja
mov
jae
jnp
xlat
pop
stc
imul
bound
jb
pusha
jno
mov
jmp
push
and
fistpl
into
cmp
scas
test
mov
and
mov
xchg
mov
mov
push
jno
cmp
jmp
mov
adc
fisttpll
cmpsl
lds
sbb
sbb
add
xchg
inc
cmp
ret
and
addr16
fwait
rcll
and
lds
dec
cs
cmp
jle
jnp
inc
adc
or
mov
out
mov
lcall
inc
inc
mov
add
lock
sub
jecxz
in
dec
inc
add
xor
dec
inc
adc
pop
outsl
inc
insb
jp
stos
sub
sar
mov
stos
roll
pop
out
xor
insl
sbb
jecxz
cwtl
mov
lret
lods
mov
nop
jnp
jp
cmovb
dec
in
insb
pop
mov
aam
test
das
or
sub
pop
push
adc
mov
cmpsb
xchg
vandnpd
sub
and
cltd
dec
mov
push
cli
gs
xchg
lds
xchg
aaa
dec
push
and
lods
push
test
lcall
rorl
cli
lea
mov
pop
xchg
mov
out
insb
lock
xor
rcrb
cmp
loopne
shl
aam
ljmp
stos
mov
sub
add
into
cmc
and
ret
xchg
push
dec
out
mov
sub
xchg
jae
dec
pop
xchg
mov
cmp
adc
cmp
cli
xchg
or
wbinvd
push
jge
or
cltd
dec
adc
sbb
push
xchg
mov
add
cmp
push
gs
insb
jmp
push
insl
fisubs
loopne
iret
cmp
inc
mov
ret
jno
mov
pop
rcrb
cltd
ds
sub
call
push
fnstsw
cmpsb
lods
or
jecxz
xchg
shll
sarb
dec
fadds
or
mov
out
jnp
stc
lret
loope
cmp
cs
in
push
subb
xchg
dec
ret
mov
xlat
xorb
lcall
adc
test
add
mov
and
mov
mov
into
fsts
xor
sub
add
mov
lds
loopne
mov
inc
pop
adc
shll
in
jnp
movsl
popa
insl
or
adc
iret
push
ljmp
sbb
into
cmc
ljmp
adc
aas
push
and
push
add
stos
and
outsl
jle
dec
not
jns
jno
mov
inc
mov
outsb
fwait
ss
dec
rcrb
dec
mov
cmp
sbb
sub
sbb
ljmp
push
inc
mov
repz
xor
fcmovnbe
fs
shr
cmc
int3
ljmp
sub
mov
cmp
sbb
fnstsw
xor
and
mov
lds
aad
push
push
adcl
mov
mov
mov
js
jno
sahf
jne
loop
cli
or
in
jle
in
das
add
or
mov
mov
pop
xchg
testb
pop
xchg
or
in
aaa
mov
daa
dec
insb
pop
pushf
xchg
mov
xchg
or
sub
xchg
inc
sub
and
mov
pusha
out
shl
mov
daa
movsl
sbb
das
fidivrl
jecxz
negl
inc
pop
mov
add
jle
inc
aaa
jp
and
inc
fmuls
cs
lret
ljmp
xor
iret
xchg
jbe
loope
push
and
add
mov
add
push
rcll
fiaddl
imul
cmp
push
dec
fwait
je
les
lret
xor
lcall
or
xor
icebp
cmc
das
mov
push
push
adc
popf
fwait
push
testb
hlt
mov
sub
and
cmc
es
jbe
xor
xor
repz
enter
adc
popf
movsb
or
ret
and
cmpsl
test
xchg
rcr
stos
data16
mov
inc
xchg
xchg
mov
push
lea
aam
inc
cmp
outsb
jg
mov
cmp
pusha
pusha
pusha
jl
xchg
add
je
push
icebp
dec
cmp
push
mov
mov
ficompl
mov
inc
in
add
and
mov
jle
xchg
dec
or
pop
mov
and
mov
in
mov
push
iret
push
push
fwait
fwait
lods
jbe
lea
cs
inc
bt
out
xchg
mov
pop
xchg
jne
sbbl
adc
jnp
mov
in
mov
fwait
pushf
xor
inc
mov
and
push
or
ss
cmp
xchg
aam
dec
lock
mov
mov
push
inc
lahf
jae
stos
data16
sub
sti
js
lods
xor
lock
fildll
leave
pop
xlat
pop
repz
inc
add
test
cmp
mov
popl
fwait
js
or
aam
pushf
mov
das
push
out
lods
inc
and
cltd
lods
inc
push
mov
jl
icebp
add
jae
lcall
jno
xchg
das
test
mov
jns
loopne
xorb
hlt
or
or
push
out
sub
lretw
jns
lret
inc
pop
test
aas
mov
pop
fwait
sbb
add
push
adc
jno
scas
xchg
mov
cmp
cmpsl
jnp
push
xchg
ret
mov
out
dec
out
cvtdq2ps
jge
out
jb
repz
mov
push
and
outsb
fsubs
xchg
repnz
inc
adc
dec
inc
mov
push
dec
mov
fstpl
das
fidivrl
gs
fidivl
cwtl
xorl
sbb
cwtl
outsb
jno
push
mov
daa
outsl
inc
or
jo
mov
out
xchg
outsb
lock
add
jl
fsubs
dec
rcrb
cwtl
call
cmp
repnz
cmovg
push
test
loopne
in
mov
add
aad
fs
xchg
xchg
cmpb
jmp
push
mov
insb
xor
add
add
xlat
lds
pop
iret
pop
ret
stos
add
sub
push
in
pop
int3
push
mov
push
imul
mov
fbld
cwtl
test
and
lds
ret
fldcw
in
or
out
imul
sub
pop
lcall
test
pop
aaa
cld
xchg
or
lock
xor
mov
pop
adc
mov
clc
mov
cmp
inc
loop
mov
jns
scas
lock
cltd
adc
mov
lods
nop
aad
ret
pop
mov
negw
xchg
loop,pt
ljmp
in
inc
fwait
scas
test
or
dec
sub
aam
xor
xlat
inc
add
push
int3
int
add
push
xchg
mov
push
mov
in
push
repnz
xor
je
popa
test
mov
ds
and
pop
dec
add
pop
and
mov
int
mov
xchg
xor
xor
ficompl
sti
call
in
punpckhdq
mov
lods
xchg
out
adc
lods
cmp
fdivrl
icebp
into
scas
inc
dec
pop
mov
das
xor
repnz
mov
xchg
loope
xor
lods
and
mov
fcmovbe
pop
push
sub
jmp
nop
in
sbb
fcoms
and
sbb
sbb
pop
jg
mov
clc
cmc
mov
orb
adc
and
xor
lcall
jmp
fwait
cltd
stos
ret
insl
xorl
orb
ds
stc
cli
cs
pop
ljmp
aaa
xor
cli
dec
mov
inc
mov
adc
inc
sub
into
xchg
and
inc
jl
xchg
ret
cli
push
shrb
dec
pop
jl
pushf
jle
adc
dec
scas
or
dec
stos
decl
pop
cld
stos
popa
sbb
stos
cmp
mov
or
pop
test
and
jg
xorl
cmc
fdivl
xor
mov
mov
stc
adc
rclb
add
stos
mov
mov
addr16
jp
cmpsl
outsl
in
sub
lret
cmp
test
mov
adc
rorl
lods
stos
push
into
jge
notl
sub
mov
cmp
outsl
mov
movsb
inc
je
incl
daa
shlb
jge
test
jle
sbb
push
js
mov
int3
rclb
outsb
adc
test
sub
lock
popa
fdivrl
imul
test
pushf
jge
js
stos
mov
divps
das
imull
jns
mov
test
jg
push
dec
loopne
stos
pushf
push
push
mov
push
mov
pop
and
mov
fldcw
pop
add
mov
int
mov
push
test
out
mov
xor
inc
insb
and
inc
cmp
jnp
loope
es
ds
outsb
adc
lret
ja
xchg
xchg
jge
push
mov
aaa
inc
pop
pop
or
jg
lods
mov
jmp
push
testl
pop
push
fsubl
mov
popf
data16
jmp
ds
in
mov
mov
fwait
dec
xchg
jo
insb
outsb
sub
jmp
sbb
les
mov
fmul
jns
xchg
fdivl
test
dec
inc
mov
inc
cmp
loopne
scas
adc
mov
or
ss
dec
mov
adcb
cli
call
clc
xchg
push
out
jne
push
inc
mov
sbb
xchg
pop
mov
xlat
and
jnp
inc
lcall
adc
ret
sbb
js
ljmp
mov
call
sarb
fnsave
mov
mov
in
imul
mov
sub
fisubl
mov
cltd
cmp
icebp
and
test
cmp
fwait
and
ficompl
adcl
push
xchg
arpl
in
push
push
ret
lret
mov
in
or
mov
dec
mov
cmc
mov
jge
push
sub
scas
flds
sbb
ficoml
ret
cld
scas
or
sbb
cltd
mov
icebp
mov
outsb
push
push
ret
jge
inc
sub
div
in
push
xchg
test
repz
xchg
ljmp
popf
mov
push
mov
xchg
imul
dec
xlat
mov
sub
fstpt
lahf
jb
adc
mov
mov
das
cmp
movd
ficomps
mov
push
fistl
mov
sahf
repz
lods
jmp
and
addr16
adc
test
stos
add
add
pop
mov
test
aad
inc
sbb
push
popf
cmp
js
cmp
popa
mov
and
jp
aaa
mov
packsswb
sbb
sbb
in
mov
push
rcr
sbb
aas
and
popf
pop
fs
add
xor
mov
loop
mov
in
adc
adc
ljmp
sbbl
sbb
orb
adc
mov
pop
leave
sub
add
ja
test
or
mov
pop
and
lret
sar
sub
inc
mov
test
loopne
divl
pop
jl
rcrl
add
xchg
lcall
ret
and
fisttpll
mov
jbe
and
sbb
dec
pushw
push
pushf
mov
xor
mov
js
or
jmp
stc
mov
pop
repnz
pop
scas
pop
adc
int3
in
fnsave
mov
adc
push
pop
loope
aam
pusha
rcrl
xor
pop
mov
xchg
jae
mov
ljmp
pop
int
data16
mov
jns
cmp
call
inc
jne
mov
sar
out
mov
fdivr
adc
daa
jbe
into
lret
and
stos
push
sub
and
pop
lea
jae
pop
xor
push
mov
xor
or
add
jle
ja
in
pushf
sbb
xchg
call
sub
adc
sub
jg
outsb
jbe
xchg
mov
js
pop
add
outsb
xchg
add
pop
int
jmp
xchg
jbe
aam
call
mov
rcrb
and
mov
sub
ja
cmp
inc
sub
mov
stc
fmull
and
loopne
jge
xchg
inc
icebp
aaa
dec
in
inc
or
jns
outsb
lahf
popa
push
or
lock
lcall
pop
into
jmp
out
insb
jmp
push
and
pop
testb
mov
push
loopne
cmp
cmp
adc
idivb
mov
cmc
mov
es
push
imul
cltd
mov
dec
int
mov
jae
into
sub
daa
mov
negl
cmp
sub
mov
push
sub
xor
mov
sub
lret
loopne
cmpsb
orl
mov
xchg
sub
shrb
lods
push
outsb
mov
fbld
jge
int
jp
outsl
or
ret
mov
or
mov
jno
sbb
rorb
outsb
xlat
push
pushf
xor
cmp
mov
sarl
movsl
leave
lahf
in
jns
fstl
or
pop
lahf
sbb
test
sbb
mov
cmp
leave
sti
mov
dec
cltd
cmpsb
arpl
mov
bound
out
popf
test
test
and
xor
sub
dec
std
loop
xchg
mov
lret
out
outsb
sahf
xor
out
out
dec
sbb
scas
fwait
push
in
sub
incb
sbb
push
flds
dec
xlat
fbstp
xchg
icebp
cmc
shlb
jle
aad
cmpsb
dec
adcb
push
fisubs
mov
ja
xchg
or
inc
ja
xchg
xchg
inc
or
in
or
faddl
jae
cmp
aas
mov
jb
mov
inc
fsubs
sbb
es
cltd
adc
xor
sbb
mov
movsl
dec
test
mov
nop
or
mov
into
mov
cmc
sbb
push
add
mov
cmpsb
xor
movsb
loop
rcrl
dec
mov
xor
sbb
cmp
stos
ss
aaa
mov
xchg
mov
xchg
jg
popa
xor
fidivrl
cmpsl
shlb
fcoml
mov
lret
sub
xchg
dec
pop
aad
ja
mov
inc
shlb
movsl
je
std
cwtl
das
cmp
call
jae
mov
xchg
mov
adc
adc
jae
lods
xor
push
in
pop
jae
popf
fs
dec
ret
shrl
push
rol
or
insb
mov
mov
inc
ret
imul
fnsave
out
cmpsl
mov
ss
out
ja
adc
push
jecxz
jp
mov
ja
mov
push
xor
xchg
inc
imul
sub
pop
cmp
lods
push
and
xor
push
test
sub
in
rcrb
je
fidivrs
into
inc
pop
in
add
loope
gs
cmp
mov
leave
ljmp
xchg
test
fwait
xchg
ss
sbb
fisttps
outsb
fnsave
mov
aaa
pop
mov
xchg
cmp
jbe
or
mov
mov
in
cmp
scas
stos
inc
adc
mov
xor
or
pop
roll
decb
daa
gs
cmp
adc
fstpt
dec
or
ficoml
adc
mov
dec
push
add
in
mov
push
in
add
ljmp
dec
mov
add
mov
pop
mov
scas
xor
rclb
pop
sbb
lcall
loope
pop
sbb
subb
jbe
jo
fidivrs
mov
and
and
cmp
xchg
pusha
shlb
add
bound
sub
cmc
cmp
in
cmp
in
push
or
sbb
imul
xor
js
sbb
push
into
in
flds
add
jge
arpl
push
sahf
push
pop
testb
imul
out
and
pop
add
loope
mov
sti
xor
push
enter
push
insl
nop
adc
add
sbb
loop
rclb
out
nop
ja
decb
xchg
pop
or
jge
mov
pop
and
iret
test
jg
movsl
add
std
js
inc
outsl
sub
jne
movsl
add
push
jo
sbbb
dec
push
scas
stc
insl
nop
xchg
and
fisubs
pusha
pop
adc
int
nop
repz
sarb
out
jl
rorl
pop
leave
and
fbld
cmp
scas
dec
js
or
push
shlb
cltd
cmp
enter
pop
cmp
jae
jnp
ja
mov
je
cs
inc
add
adc
addb
int
jg
insl
and
scas
push
mov
pop
fidivs
pop
aaa
pop
or
xchg
cmpsb
jo
and
dec
lods
test
call
gs
and
xchg
xchg
mov
mov
lds
test
xor
mov
inc
push
xchg
ja
and
outsl
std
sub
inc
leave
call
test
adc
push
test
das
lods
cwtl
repz
mov
sbb
jae
lahf
add
pop
cmc
leave
push
adc
idivl
and
xor
push
or
std
push
sub
fwait
imul
sbb
add
mov
or
insb
movsl
pushf
xchg
push
mov
lcall
inc
xchg
xchg
jb
fsubl
jp
in
es
push
sub
subb
pop
xchg
mov
aam
dec
ds
shll
enter
push
leave
push
jmp
lock
jg
loopne
lcall
sub
mov
arpl
sub
movl
or
ss
add
sbb
sti
sarl
int
pushf
push
dec
xor
nop
ret
inc
int3
lods
xchg
aas
imul
imul
push
fcoml
fistps
sbb
outsl
icebp
or
inc
mov
leave
fists
adc
ljmp
jo
adc
cmpsl
nop
popf
in
scas
sbb
cpuid
or
mov
pusha
pusha
fdivrp
repz
psrad
jnp
ret
push
je
dec
bound
fsubp
ljmp
in
addr16
add
mov
mov
das
dec
addr16
pusha
shll
xor
sbb
std
iret
movsb
push
and
aad
mov
inc
adc
xchg
iret
xchg
adc
add
jns
mov
movsb
or
add
dec
mov
jge
int
mov
jl
pop
rorl
rcrl
shl
int
in
or
xchg
in
int
mov
cmpsb
sbb
xchg
adc
mov
sahf
rclb
mov
xlat
test
rcrl
aaa
jae
in
mov
or
lret
cmp
cmpsl
adc
ljmp
mov
fnstenv
out
imul
es
jp
xchg
cmp
cld
aad
addl
xchg
or
cmp
mov
out
xchg
push
dec
jo
pop
repnz
adc
cmp
mov
cmp
repnz
xor
push
js
adc
fs
dec
sub
cltd
shrb
addr16
adc
sarb
push
mov
les
pop
cmc
sbb
or
mov
daa
and
xor
xor
cmpsl
fidivrs
pusha
shlb
pop
sti
mov
leave
push
nop
fadds
and
shlb
cmp
xchg
fsts
xchg
push
or
std
rorl
negl
jae
push
inc
addl
jns
loop
pop
add
mov
xor
cmp
scas
lret
pop
or
std
and
fcompl
in
enterw
jl
lret
xchg
and
je
out
sti
cmp
push
mov
mov
cld
dec
jge
adc
inc
notl
mov
mov
int
sub
repnz
mov
daa
pusha
dec
sub
outsb
outsl
invd
mov
mov
and
nop
xchg
cmpsb
jnp
lds
cmc
jl
push
push
sub
jno
imul
jmp
mov
add
xlat
insl
scas
cmp
sarl
and
jle
adc
ja
adc
stos
dec
roll
test
push
xchg
add
jmp
js
pop
mov
push
adc
imul
and
inc
adc
cmc
imul
inc
dec
cmova
mov
mov
sbb
or
das
sbb
jns
es
lds
jns
fcmovnbe
imul
adc
dec
ss
fs
int
stos
mov
add
insl
adc
ljmp
adc
jne
in
js
insb
lcall
test
mov
cmp
and
imul
notl
lcall
dec
mov
pop
mov
jnp
pop
and
loope
ffreep
loope
cmp
mov
dec
sub
ss
sub
into
bound
add
cmp
cli
pop
dec
dec
pop
ret
sub
pop
xor
xor
inc
pslld
cmp
jnp
arpl
push
mov
movsl
cmp
pcmpgtd
loop
and
cmp
xchg
cs
ficoml
dec
jl
test
xchg
xchg
sbb
mov
movsl
inc
mov
int3
hlt
mov
or
mov
js
sub
or
fmul
and
sub
adc
mov
sub
cmpsl
xor
push
mov
out
dec
pushf
sub
xchg
xchg
je
pop
rol
push
mov
mov
jbe
fnstenv
mov
out
call
jnp
mov
sub
sub
es
xchg
sub
daa
pop
cltd
sbb
stos
dec
xlat
dec
pop
push
test
add
and
jne
ja
loop
jb
cwtl
dec
into
idiv
cld
mov
xchg
daa
shrl
xchg
pusha
es
imul
sub
jge
xchg
jp
and
cs
adc
adc
or
and
cs
jl
cmp
push
and
repnz
xchg
or
ficomps
jg
or
push
fs
xchg
iret
in
add
push
adc
inc
sbb
aam
popa
lret
imul
dec
add
and
jmp
fxch
cmp
or
jb
in
je
add
dec
das
hlt
test
sub
inc
inc
mov
es
aam
mov
jecxz
push
jge
mov
sbb
cwtl
scas
enter
dec
jnp
inc
dec
lahf
stos
ds
je
addl
into
xchg
mov
mov
outsl
sub
les
or
loopne
fcomip
loopne
pslld
dec
push
fwait
cmpsl
movsl
addr16
jg
and
ss
push
bound
mov
subl
leave
mov
pusha
aas
jmp
mov
insb
adc
nop
hlt
mov
jo
call
mov
sbb
pop
pop
roll
out
and
jecxz
adc
ss
mov
sbb
adc
xor
pop
out
sub
andl
or
data16
bound
mov
call
mov
test
aas
scas
or
mov
xchg
cwtl
sbb
rol
cmc
ljmp
flds
pop
dec
icebp
mov
xor
lds
sbb
push
stos
arpl
mov
fsubs
mov
pop
push
in
mov
cld
in
push
push
in
insb
out
sbb
push
dec
dec
fdivs
aam
arpl
repnz
mov
lods
fmull
call
jg
out
cmp
sbb
jo
jae
test
adc
jle
aaa
push
mov
loop
sbb
jmp
push
xchg
sbb
bound
stc
jp
dec
aad
rorb
int3
ss
mov
lahf
jne
sbb
mov
add
sbbl
xchg
les
movb
lret
out
mov
lds
and
mov
enter
test
scas
push
mov
bound
jnp
jbe
mov
inc
fnsave
dec
movsl
dec
dec
jecxz
dec
sbb
push
lds
movsb
fisttpl
lds
in
test
jne
cli
mov
mov
lahf
mov
popa
sub
cmp
and
cltd
icebp
xor
add
jne
aam
sti
jle
jns
lock
push
enter
je
leave
int
das
inc
subb
push
dec
cmp
imul
mov
jno
roll
dec
jl
inc
xchg
cs
call
add
stc
std
insl
fisttpll
mov
cltd
jnp
cs
insl
adc
cwtl
add
sbb
mov
or
stos
jg
fucomp
xchg
xor
jmp
sbbb
les
xor
int3
dec
lcall
add
add
lock
std
mov
inc
cmp
lahf
jecxz
xchg
enter
insb
lea
test
jmp
js
int3
adc
pop
dec
cli
sub
sub
arpl
pop
pop
repnz
sub
mov
adc
fwait
out
pop
and
in
jmp
add
mov
pop
cld
mov
lea
out
jecxz
loop
cs
nop
dec
push
out
add
pop
daa
dec
aaa
sub
test
or
adc
lret
es
xor
and
repnz
popa
and
clc
outsb
int3
sub
mov
incb
out
fstpt
repnz
dec
es
lret
cwtl
or
push
fwait
mov
or
cwtl
xchg
jb
xchg
subb
mov
sbb
rcrl
cmpsb
addr16
into
dec
lods
sbb
insb
lcall
and
std
or
or
in
decb
adcl
icebp
in
fnstenv
test
stc
cmpsl
push
std
sub
dec
adc
mov
pop
ds
test
jecxz
mov
pop
adcl
adc
add
fst
or
push
int
and
fistps
sbb
outsl
xchg
ja
sbbb
or
js
movsl
mov
bound
push
lret
ss
out
rclb
mov
std
and
push
and
and
jecxz
mov
pop
push
and
out
mov
mov
add
add
xchg
push
mov
pop
adc
and
push
mov
xor
scas
jecxz
sbb
mov
psubusb
and
ss
xchg
mov
and
sbb
mov
add
push
lcall
sti
or
adc
loopne
and
mov
fsubrl
mov
cmp
mov
orl
xchg
lods
push
shlb
loopne
inc
inc
mov
repz
mov
leave
call
cmpsb
pop
ret
ja
mov
cmp
daa
adc
scas
and
es
inc
or
cmp
sbb
xchg
cmc
fimull
in
test
lcall
fsts
fidivrl
push
push
adc
push
int3
xor
pop
addl
sahf
mov
cmp
add
lret
sbb
andb
sub
adc
jp
jge
negb
mov
and
stos
lcall
ja
arpl
mov
sbb
imul
and
xchg
pop
scas
mov
mov
push
or
outsb
sar
jns
sbb
shl
pop
data16
cmp
repz
pop
pushf
imul
ljmp
pop
mov
pop
stos
dec
test
daa
and
les
mov
mov
mov
cmp
subb
jns
fdivr
dec
sarl
in
push
jge
mov
loope
out
cmp
cld
addr16
xor
bound
cmpsb
loop
addb
loope
fdivr
ret
jl
lcall
std
mov
test
cmovnp
cmp
inc
popf
daa
pop
fsubl
push
push
push
cwtl
push
adc
ds
push
rcr
cmp
aam
std
and
clc
loop
sbb
fidivs
in
test
divl
movsl
pop
xor
jmp
cs
pusha
mov
loop
or
xchg
jmp
hlt
cmp
xchg
inc
inc
scas
sbb
adc
push
push
inc
or
popf
push
ror
cmpb
imul
fucompp
repnz
sbb
sbb
dec
mov
shl
push
adc
inc
dec
push
lods
push
divl
mov
jae
mov
cwtl
pop
jmp
ret
addr16
inc
xor
loope
lock
dec
and
lcall
dec
cld
sub
aam
push
enter
and
addr16
mov
mov
decl
andl
inc
bound
push
pop
dec
cmp
jbe
jnp
jne
sub
lods
xchg
dec
outsb
push
sub
mov
popf
loopne
dec
in
je
cmp
sub
lea
ds
sbb
and
sbb
lahf
or
test
repz
mov
jne
jno
movsb
orl
es
mov
les
inc
sub
jne
enter
shl
popa
inc
psllw
xor
push
xlat
test
lret
dec
gs
jne
outsl
cmp
push
adc
xchg
fcmovnu
loope
mov
dec
inc
sbb
cmp
ror
aam
add
iret
sub
push
repnz
lods
pop
cmp
movsb
mov
cs
leave
push
pusha
pop
mov
xor
test
movsb
inc
jae
test
push
cmpsb
fldenv
or
rolb
int
aam
xor
mov
xor
fcomps
cltd
lea
mov
in
pop
mov
xor
sahf
pop
inc
loop
out
cmpsl
inc
fisubrl
test
or
mov
cmc
insl
push
inc
rcrl
sbb
inc
in
cld
cmp
movsl
dec
adc
popa
xor
loop
push
fldenv
ret
ja
pop
fbstp
lret
mov
cltd
loope
les
sub
cs
cwtl
hlt
sbb
cmp
xchg
push
xor
test
sub
sti
fnsave
out
out
add
dec
xlat
fldcw
lods
aaa
scas
jg
mov
popf
test
adc
mov
or
cmp
fimuls
mov
je
sbb
insl
lods
jge
loop
push
jne
inc
mov
test
cmpsl
cmp
mov
insb
sub
and
sub
mov
mov
dec
outsb
dec
jp
shll
and
push
repz
xchg
js
lods
nop
dec
xchg
cli
pop
and
popf
mov
add
bound
and
pop
call
adc
pusha
inc
scas
cltd
repnz
in
loopw
mov
sub
cmp
jle
push
jbe
arpl
into
loope
pop
pop
rorb
adc
mov
jg
outsl
or
xor
push
aam
lret
sbb
sbb
push
lcall
inc
sbb
lcall
lcall
notl
inc
out
mov
out
push
cltd
jmp
lods
add
mov
fnstcw
push
adc
jo
inc
or
insl
jae
cmp
jecxz
jl
mov
into
sti
aaa
mov
add
dec
pop
out
xor
pop
mov
pop
aad
lds
cmp
dec
and
pop
xor
mov
mov
ss
inc
fwait
mov
inc
bound
push
into
add
mov
push
mov
push
jo
jecxz
sub
xchg
rcr
hlt
es
mov
jge
jge
mov
add
into
cmp
ficomps
and
in
jmp
stc
je
rorl
or
aas
call
xor
fcoml
lock
push
cmc
mov
fs
pop
sbb
test
shll
aas
orl
jnp
mov
adc
adc
xchg
dec
fs
ss
insl
fsts
push
mov
push
hlt
lcall
mov
addl
cltd
mov
repz
or
fisubrl
pop
mov
aas
jb
addr16
movsl
dec
pop
repz
and
jecxz
mov
xchg
int
inc
in
mov
mov
dec
pop
scas
in
movsb
outsl
mov
mov
adc
popa
cmc
or
push
or
popa
xchg
je
insb
sbb
outsl
xor
fcmovb
sub
scas
aam
inc
add
jo
lcall
cs
mov
imul
ret
mov
mov
sub
add
or
push
dec
fcompl
or
dec
adc
hlt
adcb
push
inc
movsb
adc
mov
das
cmc
int3
fiadds
inc
test
sub
push
cmp
addb
dec
popf
fimuls
idivl
movsb
inc
jmp
andl
inc
pop
movsb
dec
xor
lock
sub
sbb
inc
cmp
sbb
push
lcall
lock
and
in
mov
add
xchg
sbb
inc
inc
and
pop
inc
lcall
sbb
mov
or
fsubrp
pop
mov
outsb
push
adc
xor
add
adc
dec
lock
daa
int
inc
sbb
int
or
jge
sub
adc
mov
mov
add
pop
xor
xor
pop
cmc
mov
cmp
push
rcr
andb
out
cmp
stos
das
dec
push
sahf
mov
rorb
add
lock
sbb
push
pop
popf
mov
and
clc
outsb
mov
scas
xor
lock
rep
mov
rolb
movsb
into
xchg
xor
je
mov
loopne
or
out
sbb
fcmovb
pusha
jo
xchg
repnz
ret
or
aaa
fsubrp
add
inc
jne
iret
pop
sbb
push
popa
pop
fwait
xor
xchg
cld
xor
push
lret
add
pop
adc
adc
mov
ficoml
rcr
cmp
sub
iret
jo
loop
scas
mov
xor
xor
mov
lret
daa
daa
mov
fisubrs
shlb
xchg
ret
into
or
adc
and
rclb
fists
cmp
jo
dec
lcall
adc
xchg
insl
lods
sbb
or
in
fs
sbb
xor
loopne
jno
fsubrp
outsl
fimull
test
ror
push
pusha
sub
jge
and
and
jmp
cmp
inc
add
xchg
ror
sub
mov
jne
iret
test
hlt
sub
push
in
lahf
popf
clc
add
in
stos
pop
add
sbbl
rcrb
and
pop
leave
mov
mov
aaa
jbe
add
adc
push
push
mov
pusha
in
jmp
insl
cli
int3
in
fwait
adc
sti
mov
or
loope
cli
pop
jae
pop
cmp
jbe
imul
andb
fadd
outsb
inc
dec
xchg
movsb
rol
push
fcmovne
jmp
push
pop
mov
les
xor
test
lods
push
nop
inc
mov
fcom
jb
dec
js
cli
pop
repz
mov
addr16
dec
dec
jg
scas
and
fmull
dec
sbb
sub
rorl
mov
sub
dec
and
cmc
shr
add
out
pop
xor
imul
add
mov
inc
ljmp
push
ret
mov
repnz
test
out
out
mov
cmp
movsb
pop
mov
pop
out
ja
sti
xchg
andb
in
cmp
sarb
notl
cmp
cs
pop
sbb
into
arpl
xlat
xchg
ret
adc
ds
jp
insb
out
mov
jle
lds
test
push
insb
mov
sub
xlat
add
ljmp
je
aam
aas
pop
add
push
lret
push
push
jns
adc
fcomp
mov
dec
lahf
xchg
testl
mov
pop
fwait
loop
rolb
mov
lret
inc
loopne
test
mov
cmp
sub
fstpl
mov
mov
dec
int
inc
insb
in
mov
ljmp
shrb
pop
test
test
xchg
dec
xor
cmp
xchg
pop
repz
add
cld
sarl
pop
dec
cmc
mov
mov
mov
test
ss
pop
fcoml
imul
xchg
scas
pop
dec
sbb
mov
pushf
incb
stos
fdivr
jg
insb
add
jle
ret
jne
dec
mov
jb
push
test
push
repnz
js
dec
xor
leave
insb
adc
scas
adc
xor
aad
pop
mov
xchg
sbb
mov
sbb
dec
out
lahf
add
pop
push
jle
pop
xor
imul
es
pop
mov
loop
mov
mov
push
pop
jmp
adc
ret
loop
cmpsl
jnp
pop
call
test
mov
dec
add
mov
sub
fisttps
inc
push
sahf
fistpll
shl
lcall
pop
lcall
jl
ss
jmp
push
shrb
in
mov
lea
int
dec
notb
std
cmp
pop
push
lods
sub
into
inc
repnz
inc
dec
fwait
xchg
pop
mov
sbb
sbb
fimull
mov
mov
movsl
push
push
lcall
xor
jle
test
or
rcrb
lods
dec
adc
pushf
cmp
dec
or
pop
xchg
sub
bound
xchg
aam
jmp
jmp
outsb
mov
mov
stc
jle
fisttpll
rcll
adc
pop
push
xchg
outsl
and
sbb
cmp
ret
sbb
xchg
nop
fmul
std
jl
je
test
and
push
cmp
or
daa
clc
add
push
adc
sub
push
movsb
and
ds
jns
sti
mov
stos
fcompl
and
pop
push
jmp
loope
inc
adc
mov
xchg
cwtl
pop
mov
sub
push
adc
psadbw
cmp
add
daa
xor
dec
aaa
mov
xchg
pop
adc
ja
jg
stos
or
mov
ljmp
inc
scas
fisubs
mov
dec
inc
je
mov
aas
mov
push
pushf
stos
cwtl
mov
stc
scas
xor
push
mov
cld
xor
xor
lcall
ret
int
mov
cmp
and
lret
dec
jno
out
pop
cmc
insl
lret
insb
and
mov
lcall
jno
mov
fidivrs
in
insb
push
inc
inc
insl
mov
inc
stos
add
insb
pop
mov
mov
xlat
dec
pop
aaa
mov
push
xor
add
cwtl
stos
dec
xchg
adc
ja
and
scas
mov
mov
imul
dec
cmp
cmp
test
rclb
fnstsw
cld
pop
sbb
fbld
cltd
xchg
and
sahf
ljmp
arpl
xor
inc
xor
lock
push
xor
outsl
ret
fsubr
sbb
mov
sub
orl
pop
js
lods
test
movsl
dec
pop
test
xchg
jle
ja
test
out
fnstcw
stc
dec
jns
cld
bswap
mov
xorb
cmp
je
jl
sub
jae
push
pop
mov
xchg
cmpsl
fwait
xor
mov
mov
mov
pop
in
popf
adc
dec
hlt
popa
lock
popf
enter
aaa
and
or
lock
fistps
loop
loop
loope
stos
aaa
add
xchg
cwtl
stos
pop
sub
adc
stos
xor
and
lahf
sbb
lods
fistpl
pop
mov
aad
sub
lretw
xchg
popf
sbbl
jg
adc
movb
insl
lret
and
mov
inc
sbb
mov
or
rolb
lret
jmp
xor
pop
and
nop
fcmovnbe
loope
sahf
sbb
lds
sahf
aad
arpl
pop
not
std
movsb
ljmp
sub
pop
movsl
daa
push
sub
inc
ret
dec
in
push
add
std
std
outsb
sub
mov
xchg
hlt
xor
imul
fstpl
and
fwait
scas
hlt
push
jp
mov
mov
dec
jecxz
ret
pushf
xor
idivb
xor
and
pop
mov
push
lahf
lahf
jle
out
insb
lcall
mov
hlt
push
sbb
shll
mov
mov
add
mov
sbb
shlb
imul
es
inc
sub
jmp
inc
jnp
test
inc
inc
in
add
fisubl
push
popf
xchg
sbb
addr16
mov
mov
into
shrb
idiv
dec
jae
ja
fidivrs
dec
pop
insl
jno
pop
add
pushf
push
js
mov
popf
pusha
arpl
adc
inc
and
repz
pushl
insb
mov
shll
lcall
ficoms
call
rcll
and
mov
pop
std
mov
clc
fcmovnb
push
sbb
fsubl
sbb
cmp
push
repz
movsb
inc
lcall
pop
ja
jnp
sub
mov
jb
fs
test
dec
insl
mov
add
or
inc
adc
movl
into
fadds
loop
test
cld
jge
enter
jnp
jmp
mov
stc
jne
enter
out
call
xor
jecxz
sub
pop
jae
aas
stc
add
cmp
dec
push
outsb
jle
fidivrl
mov
sbb
pop
scas
cmc
popa
sbb
add
push
out
dec
sbb
or
aam
jl
js
add
mov
jg
lds
int3
adc
mov
pop
xor
adc
imul
hlt
aaa
ficomps
or
push
out
les
jecxz
test
cwtl
in
mov
jge
jns
fadd
je
mov
sbb
cld
dec
pop
pop
inc
in
cmp
bound
sti
sarb
cmpsl
dec
or
pusha
dec
in
repz
inc
cmpsl
frstor
mov
movsl
adc
cmp
stos
pusha
fadds
lret
dec
subl
jo
loope
push
mov
orl
out
arpl
xlat
mov
adc
into
loope
xchg
xchg
mov
jg
test
loop
adc
movsl
mov
into
fstl
dec
mov
push
mov
sub
pop
pop
pop
jnp
mov
jo
jp
mov
add
jecxz
loop
lcall
pop
ret
scas
pop
movsl
mov
and
push
dec
sbb
hlt
push
push
jmp
dec
out
xchg
sbb
sbb
or
dec
gs
in
out
rol
push
insl
repnz
xor
in
daa
inc
iret
test
shll
fiaddl
dec
aam
push
mov
in
inc
call
cmpsl
or
mov
loope
or
mov
sbb
xor
pushf
js
pop
cmp
mov
sti
out
mov
add
sti
and
pop
ret
ja
dec
add
or
push
cmp
rclb
psubusw
ljmp
pop
xor
int3
in
mov
loop
cltd
movsl
inc
repz
adc
movsl
fwait
mov
and
into
jg
fucom
outsl
popa
dec
push
aam
mov
das
adc
aad
test
xor
iret
mov
lods
and
add
adc
aam
xchg
sub
daa
ss
push
aad
and
imul
fisttpll
pop
cmpsb
je
mov
push
jo
inc
push
insb
out
lods
or
outsl
xchg
jmp
or
movsb
stos
js
cmpsl
or
movsl
loopne
dec
jo
cld
add
loope
out
push
icebp
inc
lds
pop
rorb
ja
fiaddl
jo
fildll
add
test
daa
jb
xor
pop
dec
cmp
add
shlb
je
jb
sbb
inc
pop
sub
scas
fistpl
add
and
fdivrs
fadd
addr16
scas
inc
sub
sti
bound
sbb
cli
xchg
xor
or
mov
ljmp
scas
addl
push
mov
add
pop
mov
push
inc
cmc
imul
mov
out
cmp
sbbb
mov
mov
xchg
dec
mov
frstor
pop
int3
mov
mov
dec
add
outsl
lret
cld
ljmp
jb
cmp
ds
xchg
insb
in
sub
fdivs
add
clc
xchg
call
inc
jmp
test
or
push
into
and
leave
loop
js
mov
ret
mov
je
cltd
repz
mov
ds
in
cmpsb
mov
je
leave
js
push
dec
test
daa
sbb
hlt
lds
or
pop
mov
shrb
test
cltd
iret
in
psadbw
loopne
shl
adcl
mov
jg
fadds
xchg
xor
pushf
inc
jecxz
xchg
xchg
popf
and
jno
fildl
in
push
xor
xbegin
subb
in
lds
mov
pop
inc
lods
adc
lea
mov
sub
jle
xchg
inc
sbb
cmp
and
lds
pop
ret
aaa
ret
and
sti
and
sub
repnz
xchg
sub
cltd
adc
cmp
pop
enter
nop
neg
sahf
mov
out
mov
decb
out
ss
push
cmc
push
push
subl
pop
sarb
insb
cltd
xchg
adc
loope
pop
and
pop
movl
shl
xchg
hlt
cwtl
es
lea
add
adc
xchg
sub
push
jnp
or
mov
repnz
stc
es
int
pop
lret
inc
xchg
insb
jne
push
push
or
ficoml
mov
lock
call
fists
xchg
push
out
mov
addl
fwait
adc
sbb
and
lcall
mov
insb
adc
fs
push
cmp
dec
xlat
pop
adc
push
xlat
pop
sub
sub
jmp
jmp
popa
adc
stos
mov
mov
pusha
dec
mov
idivb
ret
iret
mov
adc
into
cmp
lcall
mov
inc
adc
lea
adc
rcll
xchg
and
in
pop
dec
mov
ficoms
inc
repnz
and
shlb
jo
jl
mov
iret
add
dec
repnz
push
lret
sub
dec
mov
and
ja
js
and
lcall
aam
clc
sahf
loop
mov
sub
cmp
lds
mov
ja
cmp
mov
lret
std
dec
cmp
sub
mov
pusha
je
ss
lcall
mov
xchg
mov
mov
orl
pop
les
stos
add
rclb
call
hlt
add
mov
jns
insl
jmp
lahf
inc
sub
mov
rclb
lds
push
mov
dec
xchg
cld
sbb
xlat
mov
leave
and
test
jg
adc
jmp
loopne
inc
pop
mov
and
push
sbb
mov
dec
pop
in
push
mov
inc
lods
cs
xchg
pop
cmp
divb
stos
mov
imul
cwtl
push
pop
sbb
xchg
out
test
es
in
in
popf
imul
mov
mov
cmp
pop
data16
fistl
pop
ja
push
insb
push
leave
std
nop
lahf
iret
sub
aad
jg
testb
stc
jo
out
stos
repz
mov
decb
sbb
adc
fisttps
cli
arpl
fs
scas
dec
adc
fists
imul
imull
cmp
pop
sti
insb
and
scas
insl
outsb
js
int3
jecxz
mov
lret
jbe
push
dec
sub
ret
mov
es
mov
psubsb
roll
dec
sti
movsl
pop
nop
and
mov
loop
sub
call
test
add
pop
pop
inc
jle
popa
jmp
repnz
lods
mov
mov
ret
js
sahf
push
rep
sbb
cmp
pop
jl
mov
loopne
es
mov
jge
imul
push
testl
scas
cmc
cltd
int
loop
pop
das
bound
aaa
xchg
pop
xchg
test
mov
lahf
jle
mov
jne
adc
mov
push
aad
cltd
and
dec
push
in
sbb
add
test
lcall
daa
cmp
sarb
repnz
add
in
scas
sbb
arpl
fidivrs
aas
fdivs
das
jae
stc
out
jecxz
test
inc
and
inc
repz
sub
subl
cmp
pop
xchg
adc
push
jecxz
mov
mov
pop
shrl
imul
cs
mov
jb
xchg
out
push
idivb
xchg
std
add
cli
sbb
inc
and
in
push
jge
rcrl
sbb
and
mov
sbb
inc
xor
xchg
mov
push
pusha
cmpsl
mov
sub
sbbl
dec
cs
jl
sub
pop
and
mov
push
aad
and
push
leave
sbb
push
inc
out
push
xor
shl
lret
jno
popa
lret
mov
int3
fs
or
push
cli
aam
jnp
pop
cmp
sbb
cmp
ss
mov
sbb
cmp
cmpsl
out
jecxz
cmpsb
push
mov
push
fcoms
sub
popa
pop
ljmp
adc
std
dec
imul
mov
sahf
add
push
test
insb
pop
adcl
sub
outsl
flds
out
xlat
jne
cltd
aas
cmp
jp
xorl
pop
jmp
inc
outsl
loopne
jmp
jns
sbb
cmp
imul
roll
push
in
jmp
out
je
mov
cmp
fsubl
xchg
aas
cmp
dec
loop
or
incb
sti
fcmovne
pop
arpl
jg
xchg
dec
ljmp
mov
push
subb
mov
repz
test
mov
dec
lret
mov
test
or
mov
xchg
xor
xor
mov
pop
sti
xchg
sub
jmp
adcl
shr
aad
mov
sub
push
lods
enter
ret
xor
lds
adc
scas
pop
call
mov
mov
sti
xor
aad
mov
cmpsb
mov
dec
in
push
dec
mov
mov
int
bound
hlt
shl
pop
jg
out
cmp
insl
test
lods
add
push
add
mov
mov
mov
fisubrs
loope
dec
dec
lcall
sarb
xlat
push
dec
fistps
jl
enter
in
mov
xor
or
push
xor
mov
pop
mov
push
ja
outsl
cmp
aaa
sbb
lea
xchg
shlb
add
addr16
xor
xlat
insl
insb
sbb
jae
cmp
mov
leave
inc
mov
and
aaa
cmc
or
fwait
dec
mov
or
add
push
test
test
cmp
scas
push
or
aam
mov
inc
mov
lcall
push
jae
in
cmp
gs
imul
jmp
ja
vcmpss
push
shl
mov
mov
notb
xor
mov
pop
out
test
pop
iret
pop
jecxz
push
scas
mov
push
pop
movzbl
dec
xchg
lret
shr
aam
cmp
dec
and
in
sub
cmpsb
xchg
xor
fstpl
mov
ja
in
sub
aam
pop
js
push
dec
jo
loopne
mov
jle
rorb
js
inc
cwtl
or
insb
cs
and
in
loop
push
movb
push
and
add
bound
pop
ret
dec
mov
mov
pop
mov
mov
rcrb
gs
jge
lods
inc
push
divb
icebp
inc
mov
in
pop
jmp
sub
sub
jbe
shrb
xor
or
shll
push
ret
lfs
ja
movsl
sub
mov
push
mov
pop
cwtl
xchg
fs
mov
das
lret
xchg
mov
outsl
mov
sarb
out
aas
pop
in
push
inc
adc
and
addr16
mov
aad
clc
push
dec
rorl
sub
xor
push
fisubrs
cmc
fidivrl
push
jg
pushf
pop
xor
jecxz
psubusb
adc
imul
sbb
dec
ljmp
out
test
es
cmc
mov
push
sbb
test
pusha
lods
and
ficoml
mov
mov
mov
stos
xor
pop
push
xor
lret
sub
pop
cmp
std
movsl
lcall
pop
mov
xlat
int3
clc
fadd
nop
or
mull
cli
mov
dec
mov
pop
cmc
sub
fcmove
arpl
mov
push
aam
out
outsb
sub
in
and
cmpsb
pushw
inc
cmc
jge
dec
inc
dec
popw
in
pop
and
in
sbb
dec
cmp
mov
cmp
je
adc
sbb
lock
fwait
and
jne
aam
mov
xchg
mov
mov
pop
aas
inc
cmc
adc
cmpsl
add
je
clc
aad
xor
lock
push
fldcw
adc
imull
mov
jb
out
shlb
cmp
pop
fwait
inc
dec
push
cmp
popf
stc
pusha
pop
and
mov
inc
testl
aam
mov
adc
push
push
bound
ja
jp
xchg
mov
xchg
push
pusha
pop
pop
and
jl
fs
add
mov
addr16
mov
insl
and
push
and
and
add
fsubr
enter
xchg
bound
inc
mov
push
das
add
fdivr
fsubp
mov
mov
push
daa
fidivl
rclb
xchg
cmp
rorl
add
pop
pop
movsl
or
dec
mov
js
loope
jo
mov
pop
inc
fwait
jmp
jle
cmp
outsl
icebp
into
je
ss
dec
cmp
dec
jno
pop
pushf
movsl
in
subb
sbb
pop
out
push
fidivl
testb
out
cmpsl
pop
sahf
rolb
and
adc
inc
xor
aam
mov
dec
pusha
push
xlat
sub
aad
test
pop
ret
pop
xchg
adc
fcomp
push
ret
test
rorl
jb
xor
jnp
push
or
mov
xchg
inc
insl
cmp
sbb
daa
fstl
fisubrl
inc
xor
int3
lods
fistpl
mov
xor
int3
pop
sub
inc
cmp
sbb
lds
jmp
mov
mov
inc
mov
loopne
sarl
cli
cltd
push
inc
scas
mov
fcomps
lods
push
cmp
push
scas
pop
lds
dec
xchg
fs
pop
ret
cmp
je
jno
outsl
stos
xchg
mov
and
mov
out
out
jp
shll
dec
test
and
imulb
adc
out
dec
fsubrs
repz
aad
in
and
test
pop
aam
mov
mov
xchg
mov
jg
cltd
sub
mov
popf
push
je
scas
por
subb
aaa
sahf
mov
repz
mov
into
mov
or
mov
cmp
xor
shll
jmp
loop
xchg
lret
sbb
jno
mov
insb
jmp
inc
pop
push
mov
mov
rcrl
mov
sub
aaa
stos
lcall
dec
sbb
aam
sub
and
nop
jle
xchg
push
in
filds
add
xor
sahf
lahf
jb
xor
add
out
cltd
pop
out
faddl
lock
and
jns
push
imul
inc
dec
inc
pop
inc
sub
test
popf
repnz
lret
and
dec
dec
or
imul
xchg
nop
daa
sub
push
scas
loope
lods
jge
mov
jnp
arpl
popf
push
ficomps
or
adc
stos
in
jmp
sbb
adcl
adc
xlat
daa
das
dec
cmp
movsb
sahf
test
loope
jle
loope
push
pusha
add
filds
jno
sbb
ja
lea
pop
ret
lods
sub
xor
mov
mov
and
sbb
and
push
add
mov
inc
mov
ret
adc
xor
mov
rcrl
ret
imul
pop
cmp
pop
cmp
jp
cmp
fildll
das
sahf
out
insb
fdiv
or
xor
iret
insl
call
push
and
mov
cmc
xchg
adc
fwait
ja
andl
push
rorl
or
je
in
repnz
fwait
cmpsb
mov
loop
iret
inc
sti
adc
cmp
loopne
adc
add
xor
data16
addb
ljmp
int3
fdiv
xor
mov
add
inc
rorl
mov
mov
lock
cli
xchg
hlt
imulb
or
and
adc
sbb
repnz
pop
sbb
sub
cmp
movsb
jmp
movsb
shlb
cli
add
jo
cli
mov
mov
bound
loopne
xchg
mov
jb
arpl
repnz
push
je
aaa
xor
movsl
push
or
aaa
pop
xlat
fildll
xor
loop
pushf
xchg
fdivs
adc
inc
pop
mov
frstor
stc
mov
or
addb
mov
lcall
addr16
pop
ret
es
std
mov
or
mov
jmp
add
inc
aas
into
add
xchg
dec
and
fs
or
mov
fidivl
jb
out
lock
repz
inc
inc
std
and
xchg
push
and
cmp
test
push
shl
or
fdivr
outsl
add
iret
leave
movsb
incl
lcall
cmpsb
sub
mov
arpl
movsb
and
call
vpsllw
pop
and
fnstcw
out
cltd
pop
fsubl
scas
fsubrs
xlat
insl
fmuls
inc
and
mov
fstps
dec
jp
dec
mov
addr16
dec
and
xchg
fstl
movsb
adc
push
ljmp
rclb
xlat
cli
xor
bound
das
shl
cmpsl
inc
push
pop
popa
ret
and
mov
mulb
sub
xchg
das
in
pushf
jl
xor
stc
cmp
xor
aaa
jno
mov
imul
inc
jb
cmp
test
mov
mov
clc
jl
or
jge,pn
movsl
jl
into
ret
inc
inc
xor
lahf
loope
es
testb
jae
adc
inc
data16
repz
sahf
lcall
in
xchg
gs
insb
xchg
add
in
jmp
pop
add
pushf
dec
cld
and
shlb
jle
sbb
das
aad
jl
inc
mov
push
jne
cs
and
add
jne
negb
mov
hlt
cmp
cmp
adc
pop
lea
sbb
je
sub
mov
push
cmpsl
jnp
fimuls
test
aaa
mov
sub
iret
fbstp
adc
rorb
mov
enter
sbb
add
jne
repz
lret
out
out
fldenv
cmp
stc
mov
sub
cmp
mov
adc
icebp
mov
mov
lahf
cli
movsl
es
push
pusha
pop
mov
lock
or
or
fcoms
pop
mov
fiaddl
mov
in
sub
ret
xchg
pop
js
call
mov
arpl
sub
mov
sbbl
xor
adc
mov
bound
cmp
and
sti
clc
outsb
pop
shrb
je
mov
mov
test
lds
mov
fwait
adc
or
ja
sub
mov
jecxz
inc
push
or
or
in
xchg
dec
stos
in
mov
ret
push
pop
fildl
xchg
daa
xchg
mov
sbb
sbb
sub
xchg
out
mov
fidivl
cmp
push
sub
ja
stc
jmp
mov
icebp
dec
xchg
je
pop
daa
and
xchg
sarb
fsubrs
dec
fists
pop
add
popa
dec
leave
lret
aad
jo
stc
movsb
or
push
mov
mov
call
js
lock
xor
pop
mov
fwait
cmp
jnp
xor
inc
repz
jge
loopne
scas
add
sub
dec
mov
lods
mov
push
or
mov
cmp
xchg
mov
and
cmp
stos
pop
add
mov
aad
fcomp
pop
outsb
cwtl
dec
je
adc
iret
ds
scas
sbb
cmp
mov
test
jne
and
imul
mov
jno
mov
aaa
repnz
inc
mov
arpl
jbe
xor
pop
aas
and
rol
dec
dec
enter
in
lret
shrb
push
imul
jecxz
popf
dec
and
subb
push
and
dec
mov
inc
sbb
jns
push
fisubl
iret
mov
popa
ret
mov
jge
fsubs
jl
hlt
pusha
xchg
or
push
lods
mov
mov
dec
insb
aad
clc
fisubs
sbb
leave
aad
sbb
rclb
xchg
sbb
jbe
and
out
inc
push
dec
push
in
bound
pop
push
orps
aad
xor
jmp
xor
int
or
fisubs
out
adc
leave
lock
pop
fistl
rolb
fistl
mov
dec
adc
das
testb
aad
fimull
decl
clc
sbb
mov
mov
or
leave
dec
jp
jae
mov
test
push
lock
out
xchg
dec
cmpsb
xchg
cmp
int
into
push
fcomip
and
pop
loopne
sahf
cld
into
data16
movsl
ds
dec
sbb
cmc
push
mov
out
dec
dec
inc
sub
jb
push
scas
movsl
inc
add
push
ja
mov
iret
in
inc
sbb
pusha
sbb
jno
subb
orl
int
movsl
push
sbb
pop
pop
mov
daa
rcrl
inc
cltd
jb
or
pop
mov
inc
incb
in
mov
jmp
out
mov
sub
repz
iret
dec
dec
mov
mov
or
into
enter
xor
outsb
lret
call
ds
jge
call
lcall
pop
lods
insb
in
in
sub
cmp
orb
fisttps
jl
and
dec
xorl
xor
mov
shlb
dec
fidivrl
mov
dec
mov
or
lret
sub
xchg
mov
stos
xor
lock
fistps
fs
sbb
add
movsl
jmp
add
add
and
sub
sub
subl
imul
xor
int
push
inc
push
and
leave
imul
fimuls
mov
out
xchg
sub
test
rcrb
aas
jne
ret
jmp
or
mov
dec
test
add
or
push
insl
cmp
enter
outsb
aad
aas
mov
mov
sbb
repnz
dec
xchg
jno
push
insb
andl
sub
fcmovu
or
aaa
insb
movb
add
fistpl
sahf
pop
fsubrs
jecxz
pop
xor
and
aad
cmp
jb
pushf
jp
fdiv
dec
sub
shlb
jb
push
enter
into
xchg
rolb
ret
notl
add
mov
dec
ret
int
lods
loopne
and
cmpb
xchg
xor
dec
sbb
fisubrs
mov
mov
cmp
push
push
or
adc
inc
inc
in
jge
cmp
push
out
pop
xchg
jnp
inc
xchg
or
ss
lds
sub
idivl
outsl
lahf
sarl
out
cld
cmpsl
inc
or
dec
scas
push
in
jae
jbe
mov
lahf
inc
mov
lods
push
push
mov
pop
mov
mov
cmc
or
out
repnz
adc
outsl
int
daa
into
setne
and
push
ja
das
sbb
rcl
mov
push
mov
lea
rcrl
inc
sub
or
out
jns
pop
push
mov
insl
xchg
pop
and
sarl
xchg
or
add
mov
adc
adc
add
aad
xor
fstpt
xor
icebp
int
addr16
jns
inc
jo
insl
filds
loop
jne
xor
in
sub
stc
mov
push
push
add
out
and
popa
lret
lods
xchg
lds
std
loop
out
add
inc
das
stos
pop
add
ljmp
pusha
pushf
add
adc
xor
ja
test
add
not
jg
aad
cmpsl
dec
mov
data16
push
insb
sub
pusha
cmp
test
imul
fimuls
cmp
and
je
or
jo
test
jg
inc
ljmp
adc
clc
ret
xchg
rclb
out
xor
mov
mov
daa
add
jp
out
fisttpll
or
and
xchg
xor
and
pop
jb
xchg
in
stc
repnz
movsl
popf
repnz
jae
test
cmp
cmpb
test
stos
jmp
out
in
leave
test
jne
pop
clc
pop
sub
pop
or
lret
add
mov
fidivrl
inc
mov
je
xor
movd
mov
cmp
nop
aaa
iret
cmp
ljmp
inc
mov
lock
insb
aas
jnp
jne
cmp
inc
in
jmp
dec
shrb
std
sti
mov
loop
bound
and
les
out
xor
movb
aas
pop
sbbb
ret
jno
cmp
jo
mov
xor
loope
lds
inc
cmpsb
popf
insl
popa
nop
and
push
cmp
or
pop
sbb
mov
andb
mov
aaa
add
add
fcmovu
mov
in
std
mov
jnp
cmp
mov
or
push
mov
lds
fs
fwait
jg
mov
mov
dec
or
mov
inc
and
shll
aam
mov
sahf
or
cmpsb
loope
hlt
fists
sahf
inc
lcall
pop
mov
bound
push
push
enter
shll
mov
nop
xchg
shlb
sub
pop
test
lea
test
inc
mov
mov
mov
sbb
xchg
fiadds
jno
lcall
push
jl
inc
out
mov
cmpsl
mov
je
pop
mov
fisttps
mov
inc
pushf
add
cmp
test
mov
cmpl
repnz
pop
fistl
jecxz
repnz
xor
dec
lds
push
sub
xor
xchg
and
test
aad
push
xor
or
mov
jp
orl
jge
and
add
mov
jle
out
in
push
enter
icebp
push
push
push
jns
hlt
inc
xor
popf
daa
jle
or
mov
pop
push
push
je
es
lret
inc
outsb
dec
movsbl
xor
mov
and
enter
sub
insb
adc
test
gs
clc
jbe
add
dec
sti
cmp
leave
gs
sub
mov
insl
in
es
pop
add
add
jp
lods
lret
insl
cwtl
cmp
fnsave
add
mov
in
pop
cmp
scas
dec
mov
aad
repnz
adc
arpl
sub
push
aas
test
aaa
aad
fstpl
dec
sbb
inc
movsb
pusha
outsb
imul
cmp
loop
mov
jecxz
pop
sti
into
push
push
subb
testb
stos
adc
lahf
scas
sbb
jle
push
xor
repnz
int3
inc
xor
aam
dec
cli
icebp
cmpsb
xchg
iret
cmp
cmp
cmc
add
lock
jmp
lds
in
push
or
pop
and
sub
insl
sub
mov
int3
sbb
test
sub
inc
inc
mov
cwtl
lret
inc
sbb
jno
ret
movsb
shlb
ds
ret
and
mov
inc
out
mov
popa
loope
imul
shrl
aam
rolb
dec
cmp
mov
cltd
add
dec
loope
xchg
popl
mov
jl
push
mov
shlb
mov
daa
mov
aam
sub
inc
test
xchg
lcall
mov
gs
xor
popf
push
mov
outsb
rcrb
cmpsb
mov
enter
mov
inc
jo
lods
push
fnstsw
xchg
push
ret
add
xlat
bound
addr16
ret
fwait
cmp
pop
es
sbb
xor
insl
mov
testl
hlt
xchg
cmp
fistl
jmp
scas
cmp
push
dec
and
cmpsl
cmp
scas
lcall
add
push
repnz
lcall
fimull
in
inc
rorb
loope
mov
jae
lret
inc
inc
and
add
inc
cmp
in
xor
or
fcoms
or
xchg
iret
cmpsl
adc
adc
insb
or
or
xor
jg
iret
inc
enter
jmp
data16
inc
xor
aad
aaa
cmp
inc
pop
pop
dec
xor
pushf
sahf
mov
pop
stos
mov
jp
js
inc
shr
icebp
xor
pop
out
stos
subl
in
pop
insb
lcall
outsb
xor
xchg
xor
pshufw
jl
test
mov
loop
sub
dec
call
pop
mov
shll
insb
and
int
jo,pt
or
ror
sahf
mov
fcoml
lret
inc
inc
xchg
mov
ja
pop
jae
adc
decb
add
shrl
fwait
pop
cmp
lahf
push
imul
aam
shll
clc
leave
mov
pop
lcall
push
or
in
divb
or
mov
push
test
test
sbb
shll
jno
stc
cmc
sub
out
mov
cltd
pop
ds
rolb
nop
repz
nop
fisubrl
outsl
ss
cli
add
and
and
out
dec
fbld
sub
xchg
int
stc
mov
add
das
cmpsb
jg
add
push
mov
fldcw
ret
mov
add
mov
bound
mov
pop
adc
add
pop
in
sub
jmp
fucomp
xchg
test
gs
int3
sti
int
xchg
aaa
jcxz
out
movsl
add
push
fwait
xchg
dec
xchg
hlt
push
dec
sub
mov
icebp
xor
inc
and
fdivrp
fimuls
adc
mov
repz
sbb
loopne
xchg
mov
rclb
int3
pop
pop
mov
fs
imul
fnsave
xchg
push
jl
adc
jb
sbb
mov
jg
sub
push
fdivl
cmp
lret
pop
mov
push
adc
nop
pop
out
out
loop
std
in
pop
inc
mov
and
sub
mov
cmp
daa
in
inc
data16
call
popa
xchg
pop
xorb
cmp
pusha
xor
das
inc
lods
jg
out
mov
pushf
mov
ja
jno
cmpsb
shll
cmp
jp
add
and
enter
lahf
outsl
nop
insl
inc
out
mov
sti
inc
push
je
jmp
inc
es
jl
mov
sarb
mov
and
fwait
jg
test
xchg
in
push
insb
out
pop
or
mov
jl
insb
mov
scas
lahf
nop
arpl
arpl
cmpsb
arpl
mulb
rolb
aaa
mov
pusha
sub
lcall
test
xchg
sub
sub
pop
push
ljmp
call
and
and
inc
pop
popf
jle
lea
mov
fcmovnb
mov
mov
hlt
das
int
jb
jg
cmp
inc
rol
icebp
std
cmovns
dec
pop
cli
movsl
andl
inc
outsb
loope
in
cli
movups
call
cli
sbbb
xor
lret
ret
dec
sub
add
pop
xor
in
lahf
test
add
adc
sub
xlat
leave
mov
and
sbb
clc
pushf
jo
adc
mov
into
lcall
in
cmp
pushf
aad
adc
and
cmp
push
bound
sbb
daa
leave
orl
ficompl
sub
js
jns
lock
pop
sbb
sbb
pop
add
mov
test
subl
insb
cmp
frstor
ljmp
sbb
shlb
mov
inc
cmp
lods
ss
aad
mov
inc
sbb
dec
cmp
lods
mov
pop
popa
aaa
sub
push
repz
inc
repnz
mov
imul
stos
pushf
jbe
cmp
imul
xor
cmp
jne
add
xchg
repnz
xchg
movsb
jl
inc
outsl
cmp
add
mov
loopne
clc
js
pop
inc
pusha
pop
mov
cmpsl
jns
mov
cmp
push
and
mov
pop
negl
ds
mov
and
add
mov
outsb
lods
ljmp
jae
push
outsb
inc
movsl
sbb
or
ljmp
push
jg
filds
paddw
mov
out
push
into
cmp
jle
cmp
lahf
mov
ret
mov
mov
jecxz
pushf
add
dec
lret
loope
cs
xchg
inc
or
pop
aas
sub
jecxz
push
and
pushf
loope
jp
lock
leave
push
mov
stc
mov
jno
jne
pop
pop
pop
lds
fcomp
adc
jae
pusha
add
cld
sahf
adc
or
or
test
jo
mov
in
enter
xor
inc
fistps
loop
xor
cld
mov
xchg
ret
shrl
inc
cmp
jae
or
mov
mov
xchg
loopne
mov
mov
jns
testl
mov
rclb
push
inc
sub
mov
iret
push
cmpsb
movsb
xor
loopne
mov
cvtps2pd
and
pop
out
mov
in
dec
mov
aam
xchg
adc
into
fisubrl
add
jp
cmp
ljmp
jne
ss
mov
popf
je
lret
hlt
sbb
cltd
sub
das
pop
les
push
lea
addl
test
in
icebp
cs
ret
mov
popa
popa
bound
shll
cmp
lcall
es
jnp
pop
dec
mov
aad
js
dec
aas
shll
and
rolb
pop
psrad
sahf
pop
fdivp
mov
pop
sbb
mov
adc
lcall
sbb
mov
push
pushaw
clc
mov
mov
js
pop
or
das
lods
sbb
xor
mov
push
cli
cli
sbb
sbb
sub
ss
mov
sub
push
fsubs
xchg
call
lahf
cld
mov
adc
cmp
stos
das
mov
jo
popa
push
pop
test
mov
inc
cmp
out
jb
mov
lret
insb
in
pop
add
adc
push
inc
and
or
or
jns
dec
fstps
push
inc
sbb
andl
mov
sub
in
aam
cmpsb
lods
mov
leave
jnp
xor
scas
sub
fsubl
cmp
rcrl
jbe
jbe
lods
and
fcoml
xchg
dec
out
loopne
xchg
jbe
out
add
lret
jl
mov
lret
cmc
test
ljmp
add
dec
stos
xor
pop
mov
pop
cmp
push
sub
enter
jbe
and
push
pop
xchg
jb
ret
call
xchg
and
pusha
pop
jbe
cmp
add
jge
inc
push
icebp
xor
or
mul
clc
shll
sub
enter
je
xchg
fisubrs
cmp
cmp
movsl
hlt
jbe
pop
and
lea
inc
xlat
cmova
jo
leave
dec
or
ljmp
add
ljmp
dec
mov
into
push
jo
test
mov
pop
mov
and
mov
cltd
mov
in
popf
ficoml
or
dec
add
out
mov
scas
pop
in
mov
ja
cs
repnz
std
dec
xchg
xorl
icebp
xchg
xor
shr
mov
repz
daa
inc
dec
sub
jle
dec
aaa
mov
mov
and
int
sbb
ds
aam
cmp
pushf
sub
stc
outsb
jo
es
jmp
and
mov
adc
fistps
sub
push
mov
inc
js
mov
pop
dec
fucom
jle
jge
push
leave
inc
jmp
movsl
jae
mov
inc
sbb
jge
cltd
outsl
pop
int3
cmp
sub
dec
ficoms
mov
cmp
test
mov
bound
add
cmc
push
stos
push
bound
push
inc
addr16
mov
pusha
popf
clc
repnz
lret
push
mov
sti
movb
pop
and
fstl
cmp
popf
fimull
sbb
xor
cmp
enter
or
mov
mov
mov
aam
addr16
lcall
adc
and
lcall
rolb
xchg
add
stos
lret
dec
insl
or
cwtl
ret
cmc
data16
cmpsb
jns
leave
adc
mov
or
aam
sbb
and
jno
je
jl
mov
mov
loop
jno
in
mov
dec
or
xchg
addr16
inc
subb
xor
fdivr
loope
outsb
rolb
mov
mov
sub
cmpsb
and
enter
stos
and
pop
lea
and
subw
push
add
mov
xchg
daa
jno
pop
not
jg
pusha
pop
mov
push
and
sahf
imul
hlt
add
push
lods
je
ja
insb
pop
outsl
dec
sbb
out
mov
add
fiadds
sbb
add
dec
push
scas
popf
lret
xor
xchg
xchg
inc
ss
push
mov
mov
or
stos
sub
test
data16
sbb
outsl
inc
fadds
xchg
xor
sbbl
mov
mov
and
xor
cli
add
sbb
mov
enter
mov
mov
dec
mov
scas
cld
aam
jae
dec
arpl
cmp
jnp
push
loop
sbb
sbbb
fimull
in
movsb
test
add
mov
dec
push
call
sub
je
aaa
aaa
in
jg
ss
inc
jo
cmpsb
lret
sarb
push
mov
cmp
loopne
call
sub
stos
das
and
popf
lcall
test
cmp
mov
or
subl
dec
xchg
mov
and
xchg
sbb
pop
movsl
inc
incb
inc
fisubl
lods
mov
mov
push
nop
insb
push
mov
add
xor
je
mov
or
jne
and
cmp
inc
mov
xlat
dec
pop
call
stc
aam
jnp
lret
jne
xor
inc
cmpl
scas
mov
test
adcl
les
sub
pop
add
xor
inc
repz
test
xor
pop
cmp
sarb
out
jnp
xchg
add
lods
jno
sbb
loopne
test
das
sub
add
pop
inc
sub
mov
pop
pop
fistpl
imul
fidivs
dec
fdivrs
jmp
scas
pushaw
out
sub
mov
pop
jae
jmp
xchg
mov
ljmp
jae
adc
jae
outsb
shl
lret
sub
mov
sbb
pop
cmp
mov
mov
cmc
jns
cli
sarl
out
xor
nop
dec
dec
xchg
push
sub
out
sbb
das
sar
mov
jg
nop
cmp
mov
or
sub
lcall
loopne
bound
inc
cli
push
sti
scas
mov
cld
iret
adc
xchg
ss
jae
or
das
js
mov
fistpll
add
inc
mov
jmp
lock
jmp
inc
mov
in
pop
cli
jecxz
rcrl
xchg
int
jp
xor
mov
enter
sub
mov
adc
xor
ss
test
bound
mov
adc
mov
cmpsl
add
push
mov
bound
addb
dec
xchg
push
jp
xchg
hlt
aas
lahf
jnp
xor
mov
or
mov
inc
xchg
ljmp
lret
aaa
adc
incb
pop
into
push
in
cmp
xor
sarl
lods
mov
les
lods
loop
push
mull
insl
repnz
movsb
push
test
mov
lods
jno
pusha
es
out
sarb
push
cltd
add
inc
int3
sub
sti
xchg
mov
push
mov
and
cmp
adcl
out
cmc
pop
repnz
xchg
dec
push
scas
xchg
aas
xchg
rcll
mov
ja
sub
add
jle
mov
jne
out
pop
mov
mov
sbb
sub
add
addr16
mov
and
inc
mov
jno
push
lods
cltd
es
das
sub
mov
fistpll
jecxz
int
in
mov
testl
add
cmp
pop
ds
mov
sarl
sub
divl
sbb
in
mov
mov
xlat
sub
cld
and
mov
ds
xchg
or
cmp
jle
inc
pop
lds
mov
adc
lret
and
cmp
shll
push
and
mov
mov
push
dec
pop
lock
jp
xchg
nop
lea
cli
cld
xchg
testl
jns
aam
xchg
das
sti
push
dec
movsl
dec
xchg
shrl
mov
or
and
push
adc
add
lcall
fldt
into
stos
sarb
jp
out
lahf
fimull
cli
mov
aad
jo
sub
cmp
mov
or
ss
pusha
sarl
clc
fisttps
lret
js
cmp
pop
sub
jne
push
aad
sub
cwtl
pop
bound
test
jae
sbbb
pop
cmpsl
pop
inc
push
jb
jbe
pop
jo
jbe
xchg
xlat
jg
xchg
xor
cmc
jg
js
or
xchg
fmull
mov
adc
sbb
dec
dec
ret
out
jbe
mov
push
ret
jg
add
fs
addr16
int
or
or
mov
clc
pop
stc
test
push
orb
out
gs
dec
and
dec
inc
add
pop
push
push
xor
or
lds
fcompl
test
test
inc
mov
sarl
lahf
push
out
addb
sbb
mov
mov
jl
adc
pop
sbb
xchg
fnstcw
loope
sub
test
dec
xor
hlt
and
xor
mov
in
xor
jle
jecxz
push
stos
pop
pop
mov
fldenv
xchg
sar
push
xor
mov
push
test
dec
aas
mov
dec
dec
imul
aad
xchg
pop
lret
leave
mov
push
push
or
and
jae
dec
jecxz
idivl
cwtl
mov
repz
outsb
mov
clc
fisubl
icebp
inc
int
ret
xchg
cld
push
aad
repnz
add
das
dec
ja
scas
mov
inc
cmp
adc
xchg
and
push
cmp
rclb
pop
cmpsb
lds
subb
mov
cmp
adc
and
dec
dec
mov
in
cltd
mov
mov
in
dec
fistl
sbb
or
arpl
pushf
push
outsl
clc
jo
push
std
stos
shl
shl
fsubrp
xchg
rcll
sub
and
cmpsl
scas
xchg
jo
imull
aad
pop
jge
cmpb
aad
je
and
xor
adc
popl
dec
scas
loope
mov
pop
cmove
add
outsl
pop
imul
mov
adc
adc
add
in
mov
mov
inc
sbb
ljmp
pop
insb
int3
inc
mov
paddusb
fs
mov
or
sahf
mov
xor
dec
aaa
mov
out
mov
mov
mov
imul
dec
insb
dec
sbb
adc
mov
adc
popl
xor
imul
push
lods
test
aam
xor
insb
pop
push
faddl
fmull
mov
in
shlb
xchg
test
cmp
pop
addr16
or
idivl
mov
lods
fisttpll
cmpl
lret
sbb
xor
inc
sbb
push
cltd
movsl
xorb
dec
test
gs
test
negb
pop
mov
xchg
jb
mov
fwait
inc
dec
push
or
add
adcb
sbb
clc
lcall
mov
repz
imul
adc
repz
shl
push
pop
or
mov
xchg
add
into
adcb
in
xchg
mov
xchg
pop
sub
push
aad
adc
lcall
or
sti
xchg
pop
movl
mov
and
insb
sub
xor
mov
ds
rcrl
out
fisubrs
shl
pop
mov
mov
fcoms
mov
shlb
or
stos
mov
fs
int
test
sub
sub
xor
insl
mov
mov
ret
mov
mov
pop
inc
out
cmp
in
mov
sti
jg
inc
aam
pushf
pop
push
sbb
inc
cmp
cmp
cmpsb
push
mov
or
xchg
sub
sub
add
push
fmuls
dec
inc
jmp
and
rclb
mov
ror
jecxz
push
movsl
jns
fmul
mov
mov
idivl
add
adc
inc
mov
jo
sbb
jo
movsb
xchg
mov
pop
es
jecxz
add
mov
test
fldl
sub
xchg
inc
lahf
iret
leave
push
inc
addr16
jge
dec
in
pusha
pop
or
xor
xchg
mov
mov
out
cmp
push
push
leave
scas
js
sub
inc
jmp
or
push
roll
xchg
lods
int3
repz
je
push
or
std
inc
xor
mov
and
push
mov
dec
adc
sbb
jno
mov
sbb
and
sarl
xchg
dec
inc
pop
inc
xchg
outsl
fisubl
ret
ret
sub
mov
lds
cmpsl
dec
dec
mov
shl
rcrb
in
mov
mov
jne
push
pop
pushf
jg
lds
in
dec
mov
and
test
jle
lcall
sub
and
mov
int
pop
xchg
js
add
pop
mov
xchg
fs
inc
dec
cltd
push
cmpsb
sbb
pop
xor
cmpsb
jmp
xor
rolb
add
pop
fidivrl
lds
aaa
aam
adc
xor
mov
aas
popw
mov
repz
ds
lret
jl
fs
sbb
outsl
dec
int3
jns
mov
dec
mov
mov
js
xchg
push
loop
addb
sahf
sbb
lcall
and
sbb
out
aad
aaa
dec
rorl
frstor
cmp
and
fs
adc
aaa
push
jp
test
and
sbb
inc
icebp
sub
addr16
notl
mov
test
aam
js
addr16
ror
loop
xchg
pop
sbb
lods
ret
pop
mov
hlt
mov
jp
lret
jp,pn
push
ret
add
leave
imul
mov
daa
fsubr
aaa
sub
jl
pop
lock
cld
addl
xor
sbb
sbb
stos
lahf
cmp
xchg
inc
aam
cmp
xchg
mov
add
mov
cli
inc
sub
cwtl
pushf
xchg
sbb
aas
push
dec
dec
sub
adcb
push
divl
cmpsl
jns
sub
int
pop
xor
fwait
jp
in
fnstenv
xchg
dec
or
test
cmp
add
test
hlt
or
sti
pushf
pop
sbb
cs
pop
sti
sbb
jge
data16
cmp
sub
popa
aas
xchg
mov
mov
add
lds
add
outsl
lods
data16
xor
jno
mov
jb
jbe
mov
and
sub
add
inc
aaa
jecxz
xchg
ljmp
leave
or
adc
icebp
inc
pop
je
or
dec
shll
and
lahf
arpl
and
hlt
popa
adc
push
test
inc
cmp
rol
xchg
cmp
mov
push
std
push
nop
fistpll
or
jmp
dec
push
and
pop
ret
test
out
push
idivb
fdivrl
mov
rorl
jecxz,pn
lods
loop
jecxz
ret
hlt
loopne
or
iret
sub
das
xchg
clc
ret
fistpll
cmc
sbb
and
nop
xchg
jg
lcall
dec
or
out
mov
or
add
mov
inc
inc
cld
push
dec
jo
lahf
jae
mov
bound
and
jne
inc
incl
jecxz
pop
mov
popf
insl
int3
mov
mov
bound
jle
push
sahf
out
jb
xor
inc
lcall
repnz
mov
xor
push
push
clc
adc
mov
jp
clc
daa
mov
push
adc
in
push
shr
jne
or
stc
mov
xor
aaa
jno
movsl
scas
bound
mov
mov
cli
das
add
push
or
flds
xchg
add
pop
pushf
cltd
popf
bound
pushf
test
addr16
dec
loop
mov
cs
imul
jo
cmp
clc
cs
aas
popa
jle
cmp
cmp
pop
lahf
dec
mov
fnstcw
imul
pop
loope
sbb
mov
les
mov
gs
jae
mov
pushf
popa
inc
push
loopne
dec
clc
ret
loopne
or
dec
and
lcall
or
add
mov
cli
mov
add
jno
xor
jl
sti
cld
jnp
pusha
insb
adc
xchg
push
in
sti
loopne
bound
into
popa
inc
sub
test
outsb
and
jmp
mov
push
xchg
xorl
call
inc
sub
mov
or
cmpsb
mov
scas
ds
enter
add
cmp
mov
in
sub
inc
out
rolb
mov
mov
pop
cld
enter
dec
adc
repz
pop
js
js
aad
mov
sub
inc
es
and
ret
sahf
mov
cltd
jecxz
test
and
push
mov
scas
test
clc
pop
add
and
imul
insb
inc
outsb
js
popa
xchg
test
cmp
mov
repz
imul
sub
cwtl
cli
lods
cmp
cmpsl
adc
inc
pop
dec
icebp
pushf
xor
fsts
test
cli
jno
and
adc
adc
cmp
fildl
or
fwait
xchg
lret
iret
dec
mov
push
xchg
insb
dec
mov
or
aaa
stos
cmpsl
pop
mov
sub
jo
xchg
rorl
lret
sbb
xor
push
push
pop
dec
imul
cmpb
and
mov
mov
sbb
ret
popf
repnz
dec
cmp
das
fsubrs
cmp
push
sbb
rolb
cmp
pushf
push
inc
lock
adc
aas
jnp
scas
adc
cmc
fwait
pop
outsb
push
ja
xchg
iret
inc
pop
add
ret
sbb
push
incb
aaa
cmp
mov
mov
roll
mov
stos
cltd
push
iret
ds
xchg
stos
add
ljmp
jmp
mov
pop
mov
mov
and
les
out
jb
aas
leave
add
and
aaa
aad
or
sub
xor
push
into
popa
ds
arpl
jl
and
arpl
sub
test
sbb
xchg
pop
minps
fiadds
mov
xor
outsl
and
sbb
int
sub
cli
notb
ror
sbb
pop
addr16
cmp
mov
cli
sub
and
cmp
bound
xchg
out
sahf
test
ret
mov
aam
cli
jecxz
jbe
cmp
sti
xchg
fsubrl
mov
movb
js
shll
loop
sub
inc
in
or
push
push
mov
mov
sub
adc
and
pop
daa
push
addr16
shll
out
sub
mov
jg
xlat
mov
mov
adc
popl
cmp
mov
sbb
mov
call
or
psubusb
mov
xchg
push
jae
xor
pop
cmp
test
repnz
subl
xchg
std
adc
ljmp
inc
mov
and
add
orl
or
pop
inc
loop
loop
sub
dec
das
scas
repnz
dec
jae
jle
and
lock
lret
jnp
push
push
js
pushf
sbb
inc
inc
test
pop
mov
lcall
daa
xchg
idiv
mov
loope
push
push
cwtl
push
in
test
fidivrl
shr
ret
in
pop
xchg
stos
fsubrl
and
outsl
or
and
or
mov
out
outsl
fdivrl
addr16
ja
shlb
lcall
rol
inc
lcall
iret
inc
xchg
xchg
in
loope
cmp
ja
mov
bound
cmp
sbb
mov
xor
mov
or
xor
outsb
test
mov
xchg
shlb
scas
mov
sahf
pop
add
xor
ficompl
jmp
cmpl
mov
cli
xchg
sar
test
daa
fcmovu
add
xchg
mov
push
mov
add
cmp
xchg
hlt
addl
dec
push
mov
sbb
mov
dec
fadd
push
push
in
notl
jecxz
test
daa
sub
lock
lahf
idivb
push
cld
aaa
shrb
sbb
sbb
pop
cmpsb
lock
fldenv
inc
xchg
mov
je
lods
cmp
cmp
xor
cld
inc
movsl
mov
sbb
pop
ja
movsl
aaa
test
xor
cld
test
test
repz
scas
fistps
and
mov
sub
sahf
nop
add
rsm
mov
sub
ret
xchg
mov
notl
jl
add
std
adc
dec
loopne
mov
in
add
mov
lods
dec
sahf
mov
add
pop
dec
inc
pause
fisubrl
and
shl
int
pcmpgtb
and
xor
lea
das
xor
sti
sub
pop
jmp
negb
inc
aam
test
push
or
adc
daa
enter
push
stc
jno
inc
mov
fs
mov
inc
xchg
adc
addr16
cli
xlat
adc
or
aaa
xchg
std
jge
loop
mov
mov
es
push
ds
add
mov
movsl
push
mov
enter
test
mov
cmpsl
adc
fnstcw
repnz
lock
or
pop
sbb
ss
mov
scas
cltd
fcmove
mov
dec
xor
mov
movsl
in
xlat
ljmp
lret
ds
ss
mov
fsts
lahf
push
jecxz
xor
mov
push
mov
mov
call
test
sub
stos
rorl
xchg
add
jo
lds
scas
xor
cs
pop
stos
lods
lret
mov
mov
add
xorb
aad
pop
pop
jns
lods
repz
xchg
xlat
test
test
rolb
sub
xchg
push
lret
sub
popf
mov
ss
sub
test
int3
inc
or
inc
sbb
xchg
push
jge
sub
pop
scas
lret
rcrl
sbb
insl
xchg
adc
out
sub
push
fwait
popf
inc
ss
dec
enter
cld
mov
stos
loope
nop
mov
rcrb
cmpb
xor
stc
add
lds
je
add
int
and
push
outsb
inc
adc
push
fstps
mov
frstor
inc
mov
pop
jg
mov
push
sub
and
outsl
lret
ljmp
push
int
xor
and
and
push
pop
mov
jns
mov
inc
push
daa
jg
mov
pop
outsl
ret
mov
leave
lds
mov
xchg
xor
push
xor
out
xor
xchg
ret
call
popa
int3
lret
mov
in
jo
inc
leave
xor
xor
mov
mov
add
shrb
push
mov
movsb
push
xlat
add
xor
fdivl
in
ljmp
icebp
adc
sbb
andb
pop
push
not
xchg
xor
loopne
jbe
es
aas
push
dec
scas
rorb
jnp
sub
inc
es
jge
mov
jle
movsl
mov
add
repnz
insl
ss
test
inc
add
xor
cli
or
cmp
dec
es
loope
push
mov
pop
jae
imul
loop
lods
popf
and
pushf
inc
fs
dec
ja
jns
nop
stos
aas
jg
add
push
adc
cmc
xor
mov
shll
repz
mov
outsl
cltd
push
outsl
aaa
neg
push
mov
popa
lods
pop
inc
daa
pop
inc
test
fdivp
ficompl
jae
je
dec
stc
mov
int3
inc
and
out
rolb
out
dec
inc
pop
sub
push
arpl
icebp
comiss
lret
or
sbb
inc
call
loop
jecxz
cli
push
jl
ds
and
fwait
xchg
pop
stos
mov
jmp
xchg
xchg
dec
mov
andb
push
cmpsb
inc
stos
dec
jne
push
hlt
icebp
sbb
mov
push
fsubrs
cmpsl
adcl
int
cmp
adc
xor
fcomps
cmp
add
nop
mov
mov
xlat
sbb
clc
out
pop
movsb
sbb
and
push
les
jecxz,pt
xchg
imulb
mov
xlat
push
mov
outsb
fisubs
inc
mov
mov
sub
dec
or
mov
push
pop
inc
inc
int3
add
jne
jnp
pushf
les
and
xchg
movsb
or
out
addb
inc
add
insb
sub
cmpsb
dec
repnz
push
popa
bound
pop
icebp
xchg
andl
sbb
inc
and
sub
push
xor
xorb
inc
adc
push
rorl
add
xor
int
shll
mov
shl
pushf
scas
pop
lods
pushw
lahf
dec
mov
cmpsb
jp
addr16
ret
xchg
push
xor
arpl
mov
cmp
sbb
ljmp
in
jno
and
int
cld
clc
adc
and
mov
mov
mov
shll
sar
pop
mov
in
push
inc
out
fcmove
stos
jne
pop
mov
mov
mov
cmp
push
test
adc
dec
pop
cli
int3
outsb
cmp
xor
popf
sub
mov
shrl
cmpl
andb
pop
jl
mov
cmp
jge
cmp
dec
xchg
pop
fdivr
jle
add
push
cmc
mov
jbe
pop
je
cmp
imul
in
mov
aas
daa
push
sub
push
add
push
adc
cltd
pop
loopne
popf
push
adc
mov
ljmp
sub
pop
or
mov
adc
dec
out
data16
shrl
dec
adc
push
xor
outsl
sahf
rolb
cltd
pop
add
das
outsb
cmp
orb
adc
arpl
jbe
test
sbb
mov
or
aad
jmp
sti
aas
rorb
sub
xchg
inc
mov
mov
shrl
addr16
les
ret
cmp
cld
xchg
jne
insl
insb
lea
enter
movsb
cmp
push
fcoms
or
pop
bound
inc
test
add
jp
icebp
jge
mov
or
xor
mov
jmp
mov
xor
pop
andb
addl
and
lock
or
or
fisubrl
outsb
xchg
pop
xor
and
shrb
inc
sub
inc
rclb
jns
sub
xchg
cmp
inc
or
fadds
xlat
std
insl
sbb
cmp
dec
jl
add
mov
cmp
mov
push
cmp
loopne
lds
cmp
pop
sbb
cmp
idivb
mov
lcall
fs
mov
ficoml
push
icebp
aas
aam
push
add
lahf
cmp
pop
push
xchg
addb
in
ret
mov
test
mov
arpl
xchg
into
jl
lcall
mov
sub
cmp
cs
cli
xchg
push
das
mov
xor
out
out
inc
scas
imull
stos
or
fiaddl
mov
or
push
add
aaa
out
jo
sahf
testb
enter
or
or
jp
ret
mov
and
mov
lret
or
inc
imulb
mov
mov
imul
les
out
addr16
adc
lcall
xchg
loop
lret
pop
sbb
scas
mov
dec
xor
cmp
cmp
loope
xchg
jge
dec
mov
ficoms
or
nop
aas
out
js
inc
testb
cltd
xchg
push
aas
inc
test
dec
cmp
inc
pop
and
cwtl
mov
in
and
shrl
mov
xlat
fnstenv
add
lds
mov
cmp
lea
call
pop
jge
test
cmc
repnz
scas
mov
mov
inc
lret
in
mov
cltd
fcompl
pop
xor
cmp
push
roll
icebp
mov
stos
sbb
inc
xor
lock
ljmp
mov
mov
addr16
scas
ljmp
sub
sbb
mov
xor
test
xor
push
cld
mov
xor
xchg
dec
cmpsb
in
pop
imul
push
jge
arpl
jg
test
in
dec
inc
or
ficompl
arpl
dec
jl
and
stos
adc
lock
inc
add
pop
mov
add
lea
adc
cmp
cld
mov
sbb
sub
lock
xor
adc
fldl
out
iret
mov
sbb
mov
or
adc
add
add
ret
aad
ljmp
std
push
mov
jge
testb
pop
lcall
ficoms
popf
cmc
repnz
mul
pop
fisubrl
mov
leave
fldenv
loopne
sbb
jno
mov
dec
or
les
mov
orps
mov
lcall
cli
push
aad
stc
pop
es
aad
mov
lret
mov
scas
cmp
add
stos
sub
jecxz
mov
adc
aad
sbb
leave
add
roll
popa
sub
mov
sar
jno
mov
push
sub
ja
push
or
push
test
add
testb
mov
mov
out
into
or
pop
mov
ret
fldcw
sub
repz
adc
fsubs
or
xchg
popa
ljmp
mov
mov
into
mov
xchg
pop
out
roll
ss
push
test
cmpsb
test
ljmp
cmp
pop
cli
push
pop
jno
mov
jge
mov
lahf
loopne
in
add
adc
scas
bound
xlat
ficoml
nop
nop
repz
bound
xchg
adc
int3
jmp
dec
lods
arpl
jns
mov
mov
scas
test
pop
pop
mov
pop
enter
fisttpl
test
lock
push
mov
les
repnz
mov
xor
jle
lea
aaa
xchg
cs
addb
in
mov
aaa
out
es
or
aaa
mov
clc
pop
pop
daa
push
or
cmp
sbb
fst
mov
jae
xor
sbbl
cmpsl
clc
test
mov
mov
outsl
std
jle
psubw
negl
mov
mov
scas
mov
add
in
cmp
pop
pushf
jecxz
test
cmc
dec
xchg
xor
push
arpl
enter
out
mov
or
cmpsb
mov
pop
nop
xchg
mov
mov
loope
push
push
test
inc
addb
adc
lds
iret
sbb
add
mov
inc
mov
stos
mov
mov
mov
insb
aad
pop
jl
mov
dec
sahf
and
pop
leave
mov
pushf
shlb
mov
test
stc
adc
jb
jmp
scas
or
or
cmpsl
aaa
jp
pop
in
shlb
out
adc
loopne
lods
aad
pop
data16
xor
mov
inc
pusha
mov
fst
icebp
or
jg
lret
scas
jge
loop
or
test
or
adc
fwait
or
mov
sbb
jg
mov
or
aas
pop
jmp
jb
fstpt
rolb
mov
neg
test
xchg
mov
sub
cmp
lea
bound
or
xchg
iret
and
push
add
jbe
jge
cmp
push
push
cmc
add
aaa
enter
dec
cmp
or
mov
dec
movl
ds
sub
cmp
pop
ret
mov
lret
out
add
repnz
scas
int3
mov
sub
popf
and
push
je
insl
arpl
call
xor
cwtl
fists
push
sub
fiadds
in
add
jle
loopne
cli
jg
pop
push
jns
and
popf
push
mov
xor
sahf
hlt
scas
insb
rol
push
rcrl
adc
inc
lea
jge
cwtl
jbe
jno
lahf
mov
pop
insb
sbb
xchg
ss
inc
mov
mov
sub
dec
jecxz
arpl
lods
cltd
shll
mov
imul
inc
sub
push
lds
call
mov
incb
jnp
sub
lahf
pop
jg
xchg
pop
inc
inc
movsl
push
cmp
sbb
mov
gs
sub
cmp
xlat
or
mov
add
addr16
mov
lahf
hlt
sub
mov
ret
arpl
inc
dec
out
xchg
pop
add
mov
mov
and
test
popa
dec
and
cmp
sarb
xchg
add
ret
add
xor
adc
mov
pop
mov
pop
dec
lea
cmp
pop
test
lods
ljmp
mov
mov
mov
lods
xor
jg
jle
sub
push
out
and
cmp
repz
out
sub
mov
hlt
stc
cmc
or
push
jl
sub
push
pushf
imul
call
mov
daa
arpl
adc
cmp
xor
mov
inc
jnp
test
push
jae
jns
sti
push
push
cmp
inc
bound
lods
movsb
daa
shll
in
stos
dec
sbb
sbb
into
les
mov
dec
or
test
pushf
lock
xor
mov
pop
add
je
es
or
aas
movq
ljmp
je
jnp
jnp
movsl
xchg
lcall
push
mov
add
sahf
cld
icebp
inc
mov
das
mov
cmpl
mov
std
fdivrl
aas
sti
je
sub
popa
dec
pop
pop
lea
or
or
mov
ror
fidivrs
lock
cld
inc
into
int
negb
sub
popa
push
push
mov
test
icebp
lock
rclb
add
sub
pop
fucomip
jg
sub
imul
or
bound
mov
out
daa
ja
mov
stos
sub
jp
xchg
addr16
and
and
and
test
sahf
xor
or
lods
sub
cmovo
xor
xchg
in
fmuls
inc
jmp
xor
repnz
ror
pop
push
and
or
les
cld
outsb
stc
aam
popa
mov
push
test
or
pop
push
xlat
iret
mov
push
out
xchg
popl
cwtl
sbb
push
adc
ss
push
push
popf
nop
in
push
mov
cmp
add
insl
mov
push
scas
pop
cmpsb
sbb
pushf
outsl
xor
mov
icebp
push
insb
mov
sub
out
and
fs
int
dec
pusha
mov
movsl
fimull
negl
xchg
mov
or
or
in
arpl
jmp
lret
pop
xchg
jecxz
dec
jne
lcall
push
jo
lods
stos
outsl
out
inc
sub
jge
in
pop
int
jnp
sub
sub
jb
stos
mov
mov
adc
pusha
and
test
mov
bound
mov
rcl
popf
cmp
xor
mov
enter
mov
loope
push
test
test
lret
addl
loop
inc
pop
leave
aad
fistpl
mov
cmp
mov
arpl
mov
jno
pop
and
add
mov
aaa
test
in
cmc
notb
pushf
faddp
out
mov
lret
data16
mov
fstpl
dec
add
mov
mov
push
cmp
sbb
lret
jge
sbb
fisubrl
cli
int3
jbe
scas
sub
fisubrl
out
xchg
push
ljmp
lea
lds
out
mov
adc
xchg
int
mov
or
mov
lcall
add
xor
pop
cmc
jl
push
stos
push
cwtl
xchg
das
sub
mov
mov
enter
mov
mov
std
jg
mov
mov
mov
pop
mov
jae
pushf
idivb
pop
popf
xor
pop
pop
fdivr
rolb
inc
mov
sub
ss
xchg
inc
sbb
lods
enter
or
jae
xchg
sub
fadds
and
shll
pop
lods
jns
push
and
xchg
loop
fsubrs
pop
cmp
or
scas
test
in
jne
mov
dec
popa
mov
mov
or
xor
jg
and
cli
cmp
pop
lret
andl
add
xor
stc
ss
stos
in
mov
jne
jl
das
push
sub
cltd
adc
jb
mov
sub
add
sbb
dec
sarb
jecxz
mov
mov
test
cmp
mov
xor
adc
es
cwtl
xor
mov
and
xchg
push
scas
sub
xorl
insb
in
nop
lods
das
insl
adc
xor
pop
cmp
jg
mov
sbb
xlat
and
jmp
push
xor
int3
xor
xchg
sbb
outsb
lret
cli
stc
inc
sbb
dec
int3
test
stos
xor
fstpt
iret
mov
shrl
es
pop
inc
dec
cmpsb
js
cmp
out
jnp
imul
cmp
inc
jne
out
movsl
aad
mov
rolb
les
mov
pop
mov
jo
inc
lods
popf
sti
repnz
pop
mov
loope
inc
sbb
sbb
sbb
out
mov
sbb
mov
adc
xlat
cld
loope
lods
add
dec
in
rcrb
std
jmp
popf
pop
jp
inc
fs
rolb
arpl
pop
inc
xor
fisttpl
fdivs
mov
pop
jbe
xor
and
pop
push
ret
test
movb
push
pop
cmpsl
jno
xchg
push
push
jne
daa
popa
call
inc
pop
adc
idivb
xchg
push
je
push
adc
mov
or
leave
push
lret
mov
and
and
movb
jb
mov
cmp
jnp
popf
jmp
xchg
inc
add
jl
mov
jle
jns
mov
out
out
pushf
in
into
and
ja
and
or
xchg
lret
lds
shlb
lcall
sbbb
int
push
xor
push
push
inc
fisttps
mov
jns
jp
inc
xor
push
lea
je
inc
xchg
cmpl
mov
arpl
arpl
jmp
popf
jno
in
adc
sbb
aad
xchg
push
das
add
lea
mov
add
push
daa
and
push
je
sbb
test
repz
lahf
or
addl
mov
test
push
ljmp
les
cmpsb
testb
jecxz
inc
std
xchg
fs
mov
aam
fdivrl
les
cmp
stc
push
popf
sub
cmpsl
leave
mov
lahf
mov
cltd
cmp
lods
pop
aas
popa
pop
or
gs
xor
out
int3
mov
xlat
dec
xor
jmp
mov
xor
dec
inc
jnp
pusha
sub
ss
add
adc
shll
cwtl
notl
pop
bound
pop
pop
dec
aaa
fidivl
cmp
int
mov
xor
rcll
xor
sbb
pop
xor
ljmp
ret
call
jbe
sub
and
iret
push
pop
mov
in
mov
call
notb
mov
into
jb
jnp
xor
pushf
mov
jne
pop
add
out
gs
jmp
push
cltd
jb
rcll
lock
lahf
sbb
enter
xchg
fidivs
mov
adc
gs
mov
ljmp
es
inc
in
subb
leave
pusha
mov
mov
sub
cmp
in
push
int
js
fwait
mov
leave
add
mov
inc
out
or
sub
add
or
daa
push
dec
jle
movlps
enter
add
cmp
xor
adc
xchg
test
adc
test
cltd
cmpsb
jb
hlt
or
andl
mov
leave
sub
or
filds
pop
inc
sbb
xor
test
push
push
test
adc
adc
ret
addr16
xchg
mov
push
outsb
jp
add
rclb
pop
mov
sbb
mov
dec
pop
repnz
or
scas
into
mov
ds
cltd
xchg
inc
mov
js
sub
repz
xchg
clc
jl
mov
cltd
inc
and
mov
mov
xchg
fistpl
pop
adc
lods
mov
je
mov
sub
pop
fmuls
insb
mov
push
aad
jl
push
aam
push
roll
in
repz
pop
push
mov
out
lahf
mov
insb
cs
je
or
dec
fbld
pop
sbb
test
out
xchg
xchg
mov
push
inc
pusha
fucomi
in
add
jnp
xor
not
sbb
push
ljmp
adc
shll
testb
outsl
pop
jnp
jge
push
push
mov
inc
xor
xor
cs
pop
or
scas
xor
and
inc
sub
push
add
sbb
fiaddl
pop
pop
add
loopne
sbb
in
jg
pop
push
outsb
in
cwtl
jae
lds
xchg
cmp
mov
cmc
out
lret
pop
mov
lret
push
mov
mov
cli
into
movsl
mov
sbbl
xchg
fld
and
sub
xor
test
xor
out
incb
mov
lahf
outsb
movsb
cmp
xchg
cmpsl
pop
cld
clc
ja
mov
iret
es
push
das
lds
aad
dec
and
or
sub
cmp
mov
mov
popa
sub
ljmp
dec
xor
mov
mov
adc
jno
les
rol
ficomps
shlb
mov
arpl
orl
jecxz
xor
jns
sbb
cwtl
std
mov
push
adc
push
in
jo
out
and
stc
inc
fdiv
mov
in
fmuls
adc
inc
js
lds
ds
ret
mov
mov
inc
sub
push
xchg
or
aad
jecxz
ret
cli
popa
fstpt
dec
mov
xchg
mov
lahf
js
cmp
pop
mov
jno
imul
dec
inc
and
add
jns
pop
ss
int
pop
push
push
dec
or
inc
lods
jb
jmp
cli
adc
jl
pushf
mov
xlat
cmp
nop
dec
mov
jno
pushf
imul
push
adc
aam
clc
or
mov
ret
mov
test
mov
or
lds
xchg
jle
inc
dec
das
stos
cmp
mov
push
cmp
daa
lret
mov
xchg
sahf
xchg
pusha
call
addr16
inc
adc
mov
int
int3
jo,pn
vpcomud
sti
and
lret
ret
into
pop
jb
mov
in
dec
dec
lock
fistpll
imul
mov
aam
add
xlat
cltd
pop
dec
push
jl
cli
cltd
xchg
dec
pop
loopne
popf
cmp
or
sub
call
dec
pop
popl
call
pop
and
pop
pop
out
xor
out
lds
jge
pusha
in
mov
dec
in
lcall
fs
xor
repz
cld
sbb
or
fwait
sti
ret
add
mov
and
or
cmpb
cmp
mov
push
dec
cmp
repnz
loopne
out
mov
sbb
sarb
sbb
lock
adc
into
dec
xchg
scas
or
dec
cltd
js
rcr
lahf
jg
pop
and
mov
lock
dec
xchg
out
mov
cmc
dec
shll
test
inc
push
std
jbe
mov
add
je
ljmp
fistps
dec
loop
rcrb
rcrl
aas
xor
aaa
sub
xchg
fdivrs
push
sti
into
addr16
jmp
bnd
sub
in
cmp
pop
out
and
xor
push
out
das
xor
loop
push
jo
push
push
add
mov
pushf
sub
xor
sbb
xchg
mov
testl
addr16
cld
xor
arpl
and
cmp
xor
mov
cld
and
sub
or
mov
xchg
and
stos
sbb
out
andl
es
or
xchg
lret
daa
mov
pop
and
aaa
and
cmp
js
mov
xor
xchg
ret
sbb
or
stc
cmpsb
add
adc
mov
stos
sub
xchg
ret
xchg
xchg
lock
sub
lds
xor
js
cmpsb
cmp
arpl
icebp
pop
cmp
sbb
xor
cmp
xor
popf
adc
in
lods
aas
pop
mov
in
adc
mov
and
sub
pop
push
adc
cmpsb
push
push
fnstcw
leave
ret
sbb
fs
pushf
xor
add
lock
cwtl
mov
pop
push
mov
adc
jb
push
pop
add
jb
movsl
cmp
shrl
cwtl
sbb
movb
add
xor
push
loope
ffreep
sub
bound
push
mov
stos
mov
movsb
cmp
jno
imul
jecxz
fidivrl
push
outsl
and
dec
sub
mov
movsl
popf
pop
sbb
shl
sub
jbe
inc
xchg
cmc
or
adc
or
inc
loop
int3
add
es
pop
add
lret
pop
js
fiadds
fstpt
and
dec
inc
subl
dec
jne
xchg
pop
outsl
sti
and
ja
mov
jmp
in
mov
dec
jb
lret
lcall
ss
add
enter
cltd
lret
fnstenv
lods
fmuls
out
jae
sbb
cmp
mov
out
sub
xor
inc
shlb
repz
rcrb
sub
sub
jne
dec
jecxz
mov
aam
mov
jno
lret
sbb
cmp
fidivrs
and
dec
dec
in
dec
rorb
ss
insl
push
and
fnsave
mov
in
test
int3
mov
sbb
add
shll
jae
mov
pop
inc
adc
sarl
sbb
pop
pop
leave
shr
mov
leave
fistpll
idivb
inc
push
jmp
popa
mov
mov
out
dec
sbb
push
hlt
xor
pop
fldenv
in
sub
hlt
mov
pop
push
fwait
add
mov
mov
stc
fwait
push
pop
sbb
ret
jb
dec
inc
push
pop
adc
pushf
cli
cmp
jnp
lods
fistps
shr
cmp
pop
test
jp
jmp
fidivrl
jge
xchg
mov
xchg
std
stc
jb
inc
sbbl
arpl
out
dec
loopne
jnp
cltd
lods
cmpsb
fsubl
xor
adc
mov
dec
pusha
xor
fwait
mov
cmp
rorl
stos
dec
mov
jl
mov
xor
fsubr
inc
mov
push
adc
js
inc
cli
aam
out
sti
sbb
push
jo
mov
mov
jo
jl
cmp
add
jns
cmp
pusha
jg
dec
ror
test
sahf
cli
nop
or
mov
jge
inc
sbb
data16
icebp
out
xchg
adc
leave
push
jmp
pop
jmp
and
xor
idivb
adc
sbb
cld
xlat
sti
dec
cmp
cmp
and
inc
dec
dec
inc
xchg
mov
rorl
mov
data16
or
or
rcll
dec
aam
ljmp
fsubl
dec
sbb
test
mov
insl
pushf
into
jb
sub
xchg
sarb
bound
inc
lea
movsb
inc
call
xchg
mov
cmp
pop
rorl
bound
push
fstpt
repnz
jne
mov
xor
push
lcall
stos
aas
imul
pop
fnsave
test
pop
dec
fdivs
rcr
dec
jo
mov
ds
mov
std
mov
cs
xchg
ss
in
lret
xor
out
mov
add
pop
jge
daa
jp
sbb
popa
rcl
jno
xchg
sub
xchg
pop
or
push
or
dec
mov
out
test
movsl
ret
ret
mov
ss
cmp
cmpb
xor
orw
or
jb
dec
push
das
pop
and
sbb
and
xor
pop
push
jge
cmpsb
out
or
shrb
cmc
outsl
cmp
mov
rolb
xor
subl
mov
jp
orl
jl
je
adc
repnz
loope
mov
push
inc
sub
fcmovnu
and
das
or
mov
daa
jl
in
ljmp
dec
push
popf
out
test
push
out
fisttpl
mov
mov
mov
mov
push
jnp
mov
test
push
loopne
icebp
loopne
push
in
pop
xchg
or
inc
test
push
movsl
jle
adc
adc
aaa
push
and
mov
xchg
sub
ret
add
cmp
cmp
or
jnp
movsb
loope
inc
adc
pop
lcall
cltd
lret
xor
pushf
andb
test
jb
inc
fstl
js
or
inc
movsl
stc
inc
imul
js
insb
lea
jg
xchg
dec
inc
test
push
dec
pop
jne
aam
push
pushl
xchg
enter
jecxz
insl
pusha
fidivs
aad
shll
leave
sbb
and
push
cmp
push
mov
xchg
std
test
mov
inc
shlb
into
scas
call
dec
je
dec
mov
movsl
cwtl
pop
adc
adc
pop
out
ja
jbe
inc
sbb
aad
fcompl
lods
or
test
jae
es
adc
or
leave
out
movsl
movmskps
jae
mov
jge
jge
sbbb
adc
push
xor
bound
push
xor
pop
pop
pop
movsl
or
jg
mov
sbb
push
leave
aam
xor
call
cmpl
jbe
pushf
lcall
mov
or
and
fwait
cmpsb
inc
lods
pop
and
aas
mov
mov
pusha
icebp
test
or
sbb
dec
adc
mov
add
jmp
in
xlat
jmp
or
mov
sub
mov
push
stos
xchg
lea
inc
leave
sar
sub
jae
mov
lahf
mul
adc
xchg
fs
sub
pop
loopne
jle
sbb
inc
inc
sub
xor
aam
sbb
jle
pop
xchg
popw
cmpsl
jmp
push
push
mov
in
xor
out
pop
fsubrs
push
hlt
lds
mov
out
sub
pusha
inc
cs
test
data16
push
out
mov
in
lods
repz
enter
mov
jp
mov
aam
enter
adc
jnp
cmp
sub
dec
aad
xchg
mov
pushf
mov
insl
into
rorl
movsl
mov
subl
inc
ljmp
cmp
orb
mov
repnz
inc
lahf
dec
ficomps
mov
insb
or
cmovae
and
xchg
lock
cmp
adc
and
repnz
cmpsl
scas
xor
imul
sti
iret
jmp
inc
jecxz
data16
xchg
clc
clc
xchg
dec
out
add
jp
push
and
xor
cmp
xchg
adc
out
popa
and
dec
mov
mov
int3
inc
test
out
lahf
mov
jns
test
stos
jb
lds
cli
mov
xchg
ss
in
out
ja
dec
mov
add
jecxz
leave
mov
inc
or
ss
sar
push
loope,pt
test
cwtl
das
mov
hlt
inc
jg
xchg
and
jb
xchg
jmp
cs
sub
xchg
cmc
sbb
dec
out
cltd
repz
xchg
xor
lgs
outsl
pushl
add
mov
push
test
push
lahf
hlt
cltd
jl
cmpsl
cltd
notl
dec
xor
sub
cmpsl
fmul
call
xor
mov
mov
sub
loopne
bound
cld
lret
inc
mov
outsb
sti
mov
dec
aad
stos
pop
in
in
out
mov
rcrb
rolb
xor
pop
push
xor
imul
adc
push
sahf
inc
push
inc
inc
and
adc
testl
pop
cmp
pop
int3
mov
sbb
out
jbe
mov
sub
fcomps
add
lahf
add
sub
adc
push
cmp
ja
cs
pop
test
mov
add
add
pop
xchg
or
add
push
and
into
aad
daa
arpl
fiaddl
cltd
xchg
push
pop
inc
add
pop
cmp
jb
enter
dec
std
ds
inc
les
scas
fwait
dec
fidivrs
jb
xchg
jns
test
push
hlt
jne
mov
ds
dec
adc
hlt
xor
fstps
shll
icebp
dec
js
mov
mov
dec
icebp
jno
shl
inc
decl
mov
sub
clc
sarb
test
sub
push
or
push
sbb
xchg
dec
jle
xor
cmp
repnz
cmp
cmc
fiaddl
fs
cli
out
icebp
lock
pop
shll
cs
aam
jl
outsl
bound
fildll
add
fildl
pop
imull
iret
or
ja
xor
aas
pop
pop
sub
mov
push
xchg
xor
nop
sub
mov
add
jnp
fildl
loopne
shrb
into
mov
jne
mov
xchg
lods
sub
popf
inc
push
add
sub
and
push
cltd
push
shl
jmp
mov
xchg
aas
inc
pop
jge
popf
cmp
js
jno
xchg
ds
mov
sbb
xor
pop
xchg
shl
dec
cmp
jb
faddl
jge
pop
mov
jmp
daa
push
cli
pushf
jbe
push
mov
xchg
cmp
lahf
mov
jp
in
push
cmp
fstp
movsb
test
push
jge
sbb
outsl
daa
nop
fwait
inc
loope
push
sub
imul
in
cmp
js
jmp
out
push
insl
jb,pt
std
jp
fbstp
cmp
cmp
jl
mov
shlb
in
or
js
dec
xchg
push
mov
repz
jno
xlat
les
fstpt
popf
mov
enter
xchg
dec
xchg
btr
xor
add
loop
mov
in
sub
loop
jmp
cmp
insl
imull
lock
roll
cmpl
stos
mov
aam
jg
mov
xor
mov
scas
inc
imul
xchg
notl
mov
mov
aas
in
xor
sbb
pop
shll
cmpsb
dec
push
push
adc
adc
insb
sub
inc
xchg
pop
ret
or
lds
ss
xorl
adc
cld
lods
pop
mov
or
test
jnp
mov
andl
ret
nop
jns
movsl
test
out
cmp
cs
jg
mov
mov
xchg
hlt
std
mov
add
jge
rorb
xchg
mov
and
push
in
scas
or
push
jl
nop
mov
push
aas
cli
out
int3
push
popf
xor
xor
jle
or
in
jmp
shl
lahf
aaa
inc
dec
xchg
xor
cld
pop
test
std
or
iret
add
insb
push
rcrb
mov
pop
xor
cmp
xchg
cwtl
in
cmpsb
push
dec
std
or
movsb
or
insb
dec
inc
push
into
cwtl
push
cmp
sbb
push
mov
cltd
sti
cmc
dec
es
lcall
inc
sbb
cmp
pop
in
sbb
int3
mov
sub
inc
mov
pop
fisttpl
inc
jmp
mov
test
dec
scas
ljmp
or
pushf
xchg
and
insb
cmp
adc
cmpsb
scas
xchg
popf
fcoml
push
lea
loope
cli
pop
dec
jl
sbb
fistpl
pop
and
mov
push
cltd
test
cltd
stos
jo
hlt
cwtl
inc
pop
cmp
jp
dec
adc
pop
sahf
daa
lcall
xchg
shr
scas
or
call
jo
aaa
mov
stc
cmpsl
push
fisubrl
out
jbe
movsb
sbbb
add
ret
mov
sub
shll
je
and
xor
adcl
fcoml
mov
stos
jle
cs
jns
fstl
ss
dec
mov
mov
mov
mov
push
std
lahf
fs
pop
sbb
and
mov
scas
fs
adc
fildll
push
jae
pop
mov
ficompl
das
adc
push
ret
rol
jl
jb
jb
test
and
lret
adc
push
fs
pop
sub
add
jmp
mov
das
vmread
popf
inc
jae
xlat
pop
std
mov
sti
cwtl
ret
and
popf
fistps
out
push
mov
call
jmp
mov
mov
faddp
test
push
movb
xchg
push
mov
push
cmp
fwait
push
movsb
lret
mov
ds
cld
cli
test
mov
orb
jg
insl
push
jae
mov
movsl
ficoml
push
popf
movsl
xlat
popa
lahf
jbe
mov
out
movsl
cmp
add
sbb
inc
rorb
mov
mov
inc
adc
push
and
push
inc
inc
xchg
cmp
js
jecxz
enter
jno
xchg
and
in
jae
inc
ret
jb
fsaves
and
bound
lds
sti
adc
push
pusha
aas
test
popa
lahf
cs
iret
inc
pop
scas
jne
xor
scas
aad
jecxz
dec
in
idivb
rcll
js
push
out
xor
push
mov
mov
adc
fiaddl
outsb
inc
stos
popf
sub
fwait
lea
dec
xchg
es
mov
mov
xchg
arpl
push
xlat
sub
mov
movsl
and
sbb
int
xlat
arpl
popf
in
outsb
orl
sub
pusha
jae
insl
xchg
xchg
or
out
inc
or
cmp
pushf
pop
enter
push
out
push
inc
cmc
or
out
in
jmp
ret
test
mov
and
dec
dec
cmp
push
lcall
sub
or
dec
stc
jnp
xor
inc
dec
add
pop
xchg
je
cwtl
mov
filds
hlt
inc
call
mov
inc
mov
stos
vmread
inc
jp
enter
jo
xchg
popf
lret
inc
clc
aad
fisttpl
inc
cmpsl
rolb
fsubrs
and
cmp
lahf
mov
int
out
cwtl
adc
and
lods
dec
xor
addl
lret
xor
fwait
mov
xchg
inc
add
je
adc
cli
mov
inc
pop
add
or
cmp
movsl
or
scas
lahf
cmp
mov
inc
add
testl
jle
pop
out
arpl
inc
movsb
test
mov
cmc
jg
pop
les
fisubrs
fwait
cmpsl
in
mov
add
and
sbb
push
fwait
xor
cld
jmp
pop
sub
and
sub
cmp
dec
test
in
sti
mov
bound
sub
fdivrl
adc
push
adc
cmp
inc
fstpt
roll
sbb
add
aaa
xor
out
jl
jo
shl
clc
cmp
xchg
data16
into
or
sbb
data16
mov
push
movb
adc
enter
sub
xor
pop
mov
imull
sub
filds
std
add
imull
inc
frstor
inc
std
lahf
mov
pop
and
dec
jecxz
daa
rclb
jo
xchg
fistpll
push
stc
dec
or
scas
sbb
add
and
loop
js
popa
jl
out
in
push
jae
xchg
nop
push
les
xlat
movb
jne
xor
xor
xor
int
sbb
cmp
stos
jno
mov
shl
popa
andl
or
inc
xchg
mov
ds
fmulp
rcrl
shrl
outsb
mov
and
add
jnp
das
mov
sub
jmp
fstpl
cmp
inc
test
jp
mov
ret
mov
out
fcomps
and
and
lahf
or
jg
inc
gs
nop
adc
xor
push
xor
lds
pop
lock
xchg
test
mov
loope
dec
lcall
adc
adc
std
xchg
pop
jnp
dec
scas
jns
sub
out
int
jnp
aaa
inc
std
mov
mov
pusha
lods
cmp
add
add
push
repnz
jno
inc
lods
xor
sbb
mov
and
xor
out
pusha
hlt
xor
adc
sbb
cmp
jg
jb
daa
cs
sbb
jno
mov
jmp
mov
xchg
outsb
jne
dec
mov
je
lds
or
add
test
leave
sbb
dec
in
fcmovnbe
shrb
iret
pop
rclb
cmp
jno
mov
jno
mov
cmp
pusha
mov
in
cmp
fsubrl
push
clc
mov
mov
jmp
jecxz
loopne
cmp
fiadds
cli
or
lock
mov
cmp
push
xor
pop
repz
jge
or
outsl
scas
mov
and
sub
fdivrs
add
pop
mov
mov
stos
mov
outsb
sub
in
push
fdivrl
inc
test
rclb
jb
jecxz
xlat
sub
cli
pop
mov
mov
fnstcw
mov
push
insl
xor
push
int
in
jbe
das
adc
xor
cltd
mov
xchg
sbb
in
imul
mov
int3
inc
pop
pop
xor
in
out
mov
push
lds
sub
cmpsb
je
call
aam
sub
pushf
push
jecxz
xchg
sarb
int3
jno
jae
bound
jae
mov
mov
mov
mov
sub
rcrl
or
and
jmp
cmp
jecxz
subb
movsl
xchg
xchg
jno
in
xchg
inc
push
cmp
out
mov
mov
fld
push
cmp
out
cli
push
mov
adc
stos
outsl
inc
ret
mov
arpl
dec
inc
push
sbb
jge
aaa
mov
add
das
push
mov
rcrl
dec
push
xor
cmp
mov
lods
enter
jmp
nop
aaa
xchg
add
scas
ljmp
bnd
lea
mov
or
adc
fadds
mov
es
xchg
pop
int3
dec
js
fidivl
push
sahf
pop
xchg
inc
and
in
inc
jbe
mov
adc
frstor
lret
mov
inc
pop
in
add
jl
xor
subl
mov
and
cmp
ret
clc
lock
and
sbb
dec
jecxz
lret
rclb
mov
xchg
add
pop
sub
js
sub
mov
push
inc
fs
mov
aam
jne
add
test
xlat
in
adc
clc
insb
movsl
adc
and
mov
xchg
fimuls
jle
cmpsb
repz
push
push
xchg
repz
jnp
xor
pop
push
xor
inc
xchg
fdivrs
subl
int3
dec
mov
pop
jno
pop
push
insl
ss
mov
sub
incb
push
add
es
jbe
push
and
mov
test
jns
insl
rcrb
add
adc
mov
jecxz
andl
xor
es
pop
mov
sub
out
je
scas
lahf
cmpsb
add
test
mov
mov
cld
inc
loop
rcrl
jb
add
add
xor
aam
or
xchg
call
and
xor
sub
cmc
sbb
movswl
je
and
jmp
jns
xchg
aam
leave
pop
add
js
pop
ret
cmp
getsec
xor
lret
adc
out
jo
data16
or
scas
xor
daa
fildl
arpl
rcrb
cmpsl
pop
dec
aas
lods
iret
xchg
mov
inc
adc
xchg
cmc
mov
insl
add
add
loope
fists
sub
inc
test
repnz
test
jecxz
add
hlt
out
jmp
sar
cmpsb
lods
lods
and
out
mov
outsl
xchg
xor
mov
or
out
inc
jge
push
sub
hlt
adc
jle
fldln2
roll
mov
sahf
in
test
fstl
inc
jb
lds
xchg
mov
push
mov
mull
test
xor
inc
aas
test
ja
mov
loope
pop
push
test
or
movsb
stos
jbe
and
inc
push
adc
mov
ret
mov
mov
lea
xor
ljmp
xchg
pop
mov
lods
loopne
xorl
movsb
dec
cmp
xchg
dec
cld
jno
fidivrs
je
pop
cli
or
shrl
dec
push
push
inc
in
outsb
adc
sub
sti
popa
test
aad
sub
sub
sbb
std
adc
dec
imul
mov
aad
inc
xchg
mov
xlat
mov
push
icebp
mov
xchg
sti
xchg
push
bound
insl
fimuls
enter
movsb
mov
xchg
xchg
sahf
xchg
scas
mov
or
jbe
xor
mov
xchg
mov
jno
loopne
mov
add
in
or
and
jno
pop
ss
push
outsl
arpl
out
sbb
popa
in
out
sbb
push
enter
sub
adc
dec
testl
xor
mov
sub
jle
xlat
sbb
arpl
into
lret
pop
out
cmp
cmp
lods
das
movsl
mov
data16
jbe
fsubrl
jl
mov
sub
xor
insb
aam
jnp
lock
popa
adc
dec
adc
ds
push
push
nop
mov
push
and
jl
in
aam
ret
adc
call
xchg
push
and
pop
push
loope
inc
sbb
add
pop
dec
mov
nop
mov
push
mov
insl
adc
mov
imul
adc
push
in
cmp
add
fneni(8087
popa
out
push
jbe
imul
imul
xchg
andl
testl
jae
pop
push
cmp
or
dec
sub
mov
popf
int3
xor
clc
pop
fistps
addr16
cmp
mov
or
adc
fwait
movsl
add
fcmove
adc
mov
idivb
incb
sub
into
jmp
mov
aam
cmp
mov
and
addl
add
adc
cmp
inc
lahf
aad
jns
adc
test
jle
push
mov
mov
in
mov
fidivrl
je
mov
ss
inc
test
rorl
jae
mov
ret
push
xchg
lahf
jl
ficomps
or
fisttpll
pushf
inc
out
push
mov
mov
clc
in
in
and
outsb
adc
pop
iret
es
out
pop
je
mov
pop
xor
aaa
cmc
sbb
loop
xor
scas
xor
mov
mov
adc
repz
icebp
xor
xchg
sti
and
mov
into
push
push
addb
dec
push
insb
add
pop
out
push
roll
pop
mov
push
icebp
das
xchg
mov
es
cmpsb
or
mov
in
lea
scas
insl
sbb
mov
adc
push
imul
subb
cmp
mov
dec
push
sbb
cld
inc
cmp
ret
push
push
jg
enter
in
pop
mov
sbb
sbb
in
out
push
inc
sub
les
push
leave
push
sub
cmp
scas
stos
sub
sbb
mov
ret
cmp
xor
out
jp
xchg
bound
addr16
pop
dec
xchg
movsb
repnz
pop
mov
insb
inc
fldz
xor
xchg
push
faddl
xchg
data16
xor
sub
jo
movups
jne
int
test
pop
rclb
lea
cli
jge
and
or
and
pop
mov
aad
repz
xchg
ds
int3
xor
push
pop
js
dec
adc
inc
add
mov
test
push
pop
lret
notb
enter
cltd
int
pop
pop
popa
sbb
sbb
fisttpl
mov
dec
sub
add
pusha
push
push
dec
fadds
pmaxub
adc
dec
xor
xchg
les
in
leave
mov
ja
pop
xor
inc
push
fwait
mov
xlat
insl
lds
sub
mov
outsl
inc
add
and
ja
lds
ds
cmc
mov
in
stos
ljmp
lea
dec
adc
mov
out
imul
lods
mov
jno
xchg
sub
mov
push
sub
xchg
aad
xchg
es
popf
and
dec
jp
scas
negl
dec
lock
aaa
inc
jnp
cwtl
je
aaa
movsb
dec
test
cmpb
pop
mov
xor
pop
xor
pop
fucomi
arpl
jns
jmp
scas
sysexit
sbb
or
mov
cmp
jo
sub
mov
push
inc
je
mov
testb
jge
xlat
push
cmp
jne
loopne
popa
adc
or
fadds
aaa
movsb
mov
test
pop
add
cmp
stc
jne
xor
jnp
andb
inc
inc
lcall
pop
and
cwtl
ds
jmp
push
cmc
jle
lret
lret
jmp
stc
pop
adc
cld
cli
push
loopne
fsub
pop
loop
repnz
cmpsl
mov
inc
shlb
fcompl
fsubrp
popf
jge
jo
dec
and
lret
and
clc
pop
inc
inc
xor
movsl
iret
out
addr16
push
xchg
pusha
subb
shrl
xchg
test
out
scas
xchg
int
pop
inc
xchg
add
mov
paddw
sti
push
jge
xor
cmpsl
push
aaa
or
sub
jg
push
std
and
or
cmp
mov
jmp
out
cmp
fldt
out
arpl
jmp
enter
fstpl
or
clc
gs
fst
cmp
cmpsl
ffree
dec
fcompl
fdivrl
leave
cmp
test
push
mov
addr16
dec
adcb
push
jb
stos
or
repz
mov
cmp
mov
and
mov
sub
jle
pop
stos
push
push
mov
es
pop
dec
jno
cs
xor
add
xor
pmuludq
sub
adc
out
mov
add
inc
lods
fdivp
fstps
mov
cmp
inc
push
dec
xchg
mov
loopne
popf
imul
add
sahf
cld
adc
js
out
sub
pop
pop
aad
mov
imul
inc
mov
mov
pop
inc
movsl
lcall
addr16
jne
lock
mov
xchg
xlat
mov
jno
gs
push
outsl
push
sub
mov
lahf
xchg
push
dec
insl
mov
and
mov
fcoml
insb
in
rcrb
fmul
mov
subl
fidivs
les
push
xchg
out
iret
lods
ret
js
push
or
nop
dec
sarl
nop
mov
add
or
outsb
int3
lods
sbb
xchg
add
cmpl
add
outsb
vmwrite
mov
or
jl
push
loope,pn
sti
inc
inc
cmp
rcl
aam
xchg
mov
sahf
mov
pop
pop
js
loope
mov
jmp
gs
test
jbe
data16
or
rcll
pop
jle
mov
scas
jg
adc
lahf
push
incb
inc
aaa
pop
push
dec
ja
int
pop
push
inc
subb
adc
orb
enter
xor
jg
inc
insb
cmc
jg
es
arpl
stos
sub
sub
test
lods
pop
fwait
jbe
stos
sub
std
mov
outsl
mov
pop
frstor
push
fwait
mov
jl
push
jl
call
sar
xchg
cmp
mov
cmp
call
popa
sbb
lret
ret
jg
sarl
push
sti
aaa
out
pop
mov
pop
cmp
loop
mov
fnstcw
sub
sub
push
and
sbb
lret
pushw
popa
push
bound
repnz
fnstsw
jg
add
jle
lea
nop
push
pop
outsl
and
aaa
add
fidivrl
mov
lcall
sub
cmp
ret
popf
mov
dec
pop
cmpsb
dec
mov
push
jg
pop
andl
mov
shl
fmull
pop
fmuls
mov
in
pop
daa
hlt
mov
inc
stos
repnz
into
push
arpl
adc
adc
adc
inc
fcmovb
stos
and
movsb
xchg
pop
lahf
mov
adc
lock
lods
addb
call
dec
cmp
and
pop
js
testb
and
mov
mov
mov
gs
and
iret
test
aad
mov
scas
sbb
dec
adc
pop
out
or
daa
add
call
cwtl
sbb
jg
daa
pop
jne
adc
inc
xor
lods
pop
mov
jo
adc
nop
adc
lods
mov
shrb
maskmovq
testl
mov
leave
in
out
mov
lods
popa
outsb
xor
push
jl
into
rcl
lret
and
dec
neg
pop
das
adc
imul
rorl
inc
aas
pop
fimuls
push
jns
mov
aas
ja
movsl
or
stos
mov
mov
sbb
popa
sbb
cmpl
inc
lods
jb
orb
dec
pop
pushf
js
fstps
push
repz
loopne
lods
or
lret
mov
xchg
aas
sub
rcr
leave
shll
mov
adc
jmp
pop
in
xchg
pop
popa
sub
xor
pop
cli
push
xlat
add
sbb
jno
in
and
lods
js
fsubs
pop
jns
cs
call
sbb
rcr
fldt
jbe
push
dec
cs
lods
das
lret
movsl
adc
fdivs
cmpsl
icebp
pop
outsl
lock
fldt
mov
mov
jle
nop
xor
lahf
stc
inc
jge
mov
or
jno
mov
pop
testl
push
adc
jp
pop
cmp
mov
cmpsb
mov
stc
push
pop
lcall
shr
insb
add
ret
inc
xchg
cld
push
jle
lock
gs
or
push
xlat
clc
out
aaa
int
daa
int
loopne
pop
addr16
lret
stos
pop
and
lods
arpl
ret
lret
shr
js
inc
mov
iret
nop
daa
mov
mov
mov
dec
sub
inc
aam
and
fwait
push
inc
mov
inc
adc
dec
test
outsl
lock
mov
mov
iretw
aam
loop
dec
dec
push
pop
pop
stc
xor
xor
jmp
in
pusha
outsb
pop
lods
xor
fnstcw
cmpb
ljmp
negl
adc
add
aam
lock
imul
push
sub
mov
sub
or
jecxz
test
jg
push
hlt
add
adcb
xlat
pop
mov
and
je
cmpsb
cmp
push
clc
jns
je
dec
in
push
jg
sbb
lcall
mull
sub
mov
xchg
pushf
ret
sbbl
fwait
aam
and
inc
inc
xchg
dec
cmp
cmp
adc
jnp
or
fucomi
xchg
ret
popa
add
pop
fcmove
mov
xor
pop
mov
jle
jbe
mov
add
jae
test
test
and
jge
cmp
adc
pop
negl
inc
cs
andl
dec
xor
loope
xchg
sbb
pop
pop
pop
nop
lahf
inc
adc
xorl
cwtl
pop
fsubrl
pop
dec
add
lods
add
jmp
add
or
mov
loopne
jmp
and
jb
xor
and
pusha
dec
hlt
mov
mov
movsb
fiaddl
mov
ret
add
fcompl
mov
clc
rcrl
popa
add
inc
add
sub
cmpsb
mov
rorb
or
mov
mov
mov
lods
in
adc
jmp
dec
push
cmpps
dec
subb
mov
fwait
mov
push
aad
and
push
scas
fcmovbe
jne
nop
jno
cmp
pop
sbb
ret
lea
push
test
out
pop
push
mov
inc
stos
xchg
and
ss
xchg
andb
jbe
sbb
or
xchg
lahf
ret
push
sub
out
mov
subb
xor
xchg
int
mov
daa
pop
push
add
push
sbb
add
mov
rcr
pop
or
jns
lret
fnstenv
mov
dec
in
adc
and
add
call
sti
xchg
and
sub
mov
int3
inc
push
stos
lcall
shlb
dec
sti
add
sbb
xchg
divb
and
sub
and
stos
push
pop
jmp
mov
jns
lock
jecxz
pop
dec
adc
inc
cmp
dec
mov
jle
shll
ret
aam
pop
pop
notl
jb
iret
lahf
sbb
add
xor
adc
mov
mov
push
lock
ds
jb
cmp
cmp
scas
jle
add
jb
scas
mov
sbb
shlb
cmp
inc
cmp
and
aaa
adc
jo
push
or
mov
cmp
push
insb
sub
inc
push
gs
jbe
cmp
dec
and
adc
mov
daa
xorb
xchg
int3
scas
xchg
jg
cmp
fistl
xor
fs
pop
jp
ja
sub
repz
sbb
jbe
test
push
jg
test
pop
and
dec
and
iret
sbb
cmpsb
sub
roll
xchg
adc
lods
mov
pop
sbbl
mov
pop
jp
sbb
sub
mov
repnz
jo
jmp
jb
mov
inc
lret
inc
rcrb
jg
or
xlat
xor
dec
repnz
ljmp
cmp
bound
lods
iret
mov
stc
cmpl
pop
cs
jbe
xchg
ljmp
and
mov
fsub
or
pop
xchg
push
les
sub
aam
mov
pop
sub
and
pop
add
mov
sub
stc
mov
pusha
cmp
adc
fnstenv
jle
xor
dec
adc
pop
fs
daa
int
xchg
push
sarl
add
dec
push
xchg
imulb
push
xchg
lret
push
mov
je
cmp
dec
xchg
or
xchg
dec
dec
orb
andb
sub
popa
cld
mov
sahf
cltd
ja
cli
push
mov
movsl
inc
mov
xchg
mov
mov
add
fldt
push
in
sbb
pop
pop
dec
xor
sbb
jne
lret
xor
cmp
enter
pop
in
lods
push
push
lods
aad
jb
xchg
cmp
push
xchg
dec
or
lock
lcall
jmp
push
push
or
mov
imul
inc
repnz
and
or
ret
mov
pop
pop
scas
jne
jns,pn
jo
loop
jle
fstpt
ss
and
in
and
dec
mov
test
xor
arpl
fcompl
sbb
push
test
outsl
jl
inc
fnstsw
mov
and
or
dec
or
push
fnstenv
push
pop
jmp
loopne
ret
sub
cmpl
add
in
mov
or
mov
hlt
mov
je
sub
inc
js
jb
push
xchg
aad
cmp
and
xchg
adc
test
sahf
xor
inc
icebp
es
addr16
pushf
in
cmpsl
mov
dec
mov
int3
call
cmp
stos
fwait
les
adc
jecxz
out
xchg
adc
cs
int3
inc
leave
jmp
pop
pushf
or
mov
xor
data16
testl
cmp
sub
ror
std
lcall
cmp
mov
or
pop
repz
cmp
test
loop
ret
mov
scas
jns
mov
mov
xor
jp
fsubrs
mov
icebp
fsts
aad
pop
ss
js
sbb
mov
loope
orb
lock
fstps
pop
push
xor
cmc
test
xchg
subl
and
std
jg
sbb
pop
add
mov
pop
cltd
add
jmp
cmpsl
movsb
outsl
sub
subb
dec
dec
mov
rcrl
aam
popf
xor
dec
mov
sub
mov
shll
jl
inc
sub
hlt
push
push
mov
lcall
addb
xlat
jp
test
enter
lock
jne
mov
mov
jp
push
push
and
loop
xchg
inc
push
mov
xchg
dec
cmp
dec
sbb
insl
add
hlt
fisubl
shll
sub
mov
pusha
sahf
sbb
xor
repnz
cmc
add
loope
cmc
jb
mov
test
mov
inc
or
and
push
ss
jo
add
adc
add
fistl
xchg
mov
cmp
jmp
lcall
dec
arpl
inc
mov
dec
test
add
xchg
add
mov
dec
fstl
fsincos
js
incl
add
scas
dec
pop
sub
mov
es
push
outsb
pop
jg
and
inc
pop
cmp
mov
pop
dec
jnp
lock
xchg
shlb
mov
xchg
xchg
jmp
push
icebp
or
add
fdivr
mov
cmpb
mov
andl
test
inc
dec
and
scas
movsl
insb
xchg
loop
or
and
mov
les
ret
insl
pop
sbbl
repnz
push
out
das
out
addr16
add
int3
inc
jecxz
sub
shrb
cmp
mov
shrb
add
xor
inc
cmp
add
inc
or
jmp
mov
daa
gs
mov
pop
lds
cmp
cli
cltd
dec
push
push
leave
xor
cwtl
ret
fstl
cmc
push
jne
hlt
mov
pop
in
jmp
mov
mov
cltd
test
add
in
insl
aam
jmp
leave
arpl
cwtl
rorb
int3
rcrb
lcall
negb
mov
mov
das
jmp
sub
shll
adc
or
and
mov
or
sti
xchg
scas
ret
lret
lret
pop
lahf
xchg
fwait
mov
dec
sbb
mov
xor
xchg
pushf
ror
pop
icebp
test
xlat
arpl
jns
jbe
daa
sti
dec
in
push
outsl
in
stos
dec
mov
fadd
pop
fwait
sub
fs
mov
sub
out
jle
inc
mov
xchg
test
sbb
cmp
shll
sbb
and
ret
push
or
jmp
push
xor
ljmp
xchg
or
and
mov
mov
cmp
xchg
imul
mov
loope
dec
inc
and
repnz
xchg
pop
pop
scas
andb
mov
cld
test
pop
mov
or
stos
jl
adc
and
rcll
out
repz
xchg
test
fisubs
pop
dec
mov
rorb
add
test
in
cmpsl
mov
and
fcompl
movsl
mov
rcr
dec
push
aas
sar
pop
mov
sbb
insb
add
imul
outsl
ja
lock
and
into
add
fisubs
jge
lods
sbb
push
jge
insb
lods
or
add
aaa
mov
inc
jns
jb
and
adc
fildl
icebp
loop
je
cmp
jecxz
pop
cmp
ret
lods
sub
lcall
jae
xchg
mov
push
mov
pop
mov
push
loopne
add
vorps
int3
jnp
cmp
jb
or
loop
push
mov
cmp
cmp
add
jne
mov
fprem1
out
lds
mov
cmpsb
xlat
movsl
popa
lds
fwait
aas
xor
gs
mov
cmp
out
in
jne
xchg
sub
pusha
sahf
xor
std
sbb
ljmp
lock
or
mov
jae
rcll
sbb
push
jp
pop
cltd
cmp
pop
dec
into
hlt
mov
ljmp
pop
cmpsl
jne
popf
aam
out
into
mov
add
filds
imul
scas
mov
push
insl
and
xor
cmp
aad
sub
inc
icebp
ss
sbb
lds
dec
lock
sbb
sbb
loope
cmpsl
and
out
ret
out
enter
inc
sbb
pop
int
mov
inc
fisttps
add
enter
xorb
mov
push
mov
xchg
dec
and
and
arpl
xor
inc
xorb
mov
and
xchg
inc
jg
lock
xchg
mov
push
add
cmp
inc
lods
inc
xchg
scas
inc
jb
mov
aam
push
xlat
cltd
inc
insb
in
mov
insl
pop
dec
test
push
fnstsw
fadd
fistpll
orl
pop
inc
movsl
lock
pop
pop
mov
sub
adc
pop
popa
ss
and
enter
stc
adc
aam
fcoms
xor
shrb
js
mov
pushf
les
js
sbb
mov
pop
mov
pop
or
sub
cld
or
jle
xchg
cmpsb
ret
mov
mov
push
cmc
pop
fadds
unpcklps
cmpsb
outsb
sti
in
pop
insb
sahf
dec
sub
adc
jge
push
hlt
inc
inc
in
jecxz
dec
cmp
sahf
aaa
or
sub
pop
ss
mov
inc
cmp
movsb
cli
ds
xor
mov
mov
cmp
cmp
xor
mov
fidivrl
jle
cmp
in
mov
loope
and
xor
lret
stc
or
sub
ljmp
roll
jbe
aad
leave
dec
inc
jbe
shlb
or
jo
outsb
shll
mov
movsb
ficoms
and
xchg
pop
aas
push
mov
mov
mov
pop
sub
ficompl
pop
cmp
adc
je
rorl
adc
pop
inc
mov
dec
ficoml
loop
and
jns
xchg
xchg
push
jp
jno
daa
outsl
mov
jnp
lea
lcall
jne
jge
mov
in
pop
sub
mov
mov
adc
mov
add
and
scas
daa
xor
and
into
sub
inc
inc
bound
stos
shl
sbb
or
pop
out
call
xchg
pop
xchg
push
je
or
out
dec
addr16
enter
xchg
popf
cmpsl
test
outsl
add
push
lds
sub
leave
stos
mov
rolb
mov
out
mov
dec
cmp
movsl
dec
daa
pop
adc
mov
and
in
cmpsb
cmp
mov
mov
loopne
mov
aad
adc
icebp
outsb
push
popf
xor
xor
sbb
cld
inc
inc
pop
repz
lds
pminub
pop
or
movl
xchg
test
cmp
test
pop
sbb
jmp
lahf
das
mov
xor
mov
fsts
sti
stc
inc
add
gs
in
pop
mov
repnz
lret
aaa
pop
jb
sbb
and
std
fmul
or
pushf
aaa
mov
es
mov
hlt
stc
jnp
xchg
pop
cmpsb
mov
insb
cs
pusha
mov
orl
xchg
lea
cmp
shrl
repz
cmp
adc
lock
aas
in
in
pop
push
mov
sub
cmpsb
pushf
out
dec
inc
les
pop
xchg
and
std
fisttpl
push
push
sub
and
cli
xchg
cmp
xchg
mov
cli
sti
int
mov
addb
out
mov
or
pop
jno,pn
pop
pop
cmc
pushf
jns
add
out
sub
cltd
pmulhw
push
xor
stos
sub
shrb
aas
and
or
call
int3
inc
clc
fldenv
xor
cwtl
inc
es
xchg
cwtl
fwait
das
sub
mov
mov
pop
je
aas
in
mov
andb
inc
in
jp
icebp
pop
sbb
pop
repz
push
sbb
or
insb
and
cmpsb
outsb
or
pop
mov
nop
mov
push
mov
in
mov
stos
pop
adc
les
xor
jp
dec
push
xchg
or
shrl
test
mov
xchg
xchg
jns
jno
xor
jg
fcomip
or
push
jle
dec
nop
cs
stos
pop
out
adc
inc
xor
adc
fnstcw
popa
loope
sub
and
les
das
xchg
pop
mov
jae
mov
clc
and
cld
xchg
cmc
dec
pusha
xchg
inc
adc
jg
dec
sti
fsts
push
out
pop
adc
ret
cmp
adc
mov
mov
shll
int3
sbb
pop
scas
lret
sbb
daa
fdivs
mov
cmp
and
or
inc
pop
inc
mov
xchg
xor
test
pop
clc
in
and
jecxz
lock
dec
cmp
cmp
sti
xchg
jle
insl
enter
xchg
negb
je
mov
add
cmp
xchg
scas
sbb
cmp
xchg
test
jo
pop
cmp
pop
xchg
pop
sub
mov
cli
outsl
cmpsl
fstps
stos
inc
into
or
sub
push
dec
dec
loopne
setp
cwtl
adc
sahf
push
mov
cmp
xor
mov
sub
imul
jne
dec
ret
pcmpgtd
data16
xor
imul
sbb
in
push
loope
adc
cmp
mov
decl
sbb
cmp
es
push
push
mov
cmc
jp
jg
decb
mov
inc
add
dec
push
push
push
in
jg
les
mov
cmp
loop
xchg
ds
inc
mov
ficomps
xchg
jmp
in
and
dec
push
pop
out
je
dec
lret
fsubrl
cmpsb
clc
and
shrl
shrb
sbb
mov
mov
xchg
leave
jnp
adc
pop
inc
xchg
int3
fisubrl
xchg
cld
fdivr
pushf
sbb
sbb
sub
mov
xor
cmp
rcrl
test
imul
jmp
push
adc
xor
pop
jbe
mov
and
push
mov
sahf
mov
dec
jno
bound
jge
sub
ret
lods
outsb
fadds
aam
into
mov
jne
lcall
xor
mov
jo
push
outsb
or
pushf
push
je
hlt
mov
sbb
mov
push
mov
std
clc
xchg
loop
lcall
mov
int
pop
xchg
xor
outsl
inc
pop
dec
arpl
lcall
es
xor
cmp
and
mov
stc
cmp
loop
sti
addr16
ret
ss
mov
imul
stc
add
xchg
push
inc
repz
cmc
fsubl
xchg
rorb
je
xchg
mov
fcmovnu
lds
pop
add
cmp
mov
sub
rcll
push
subl
rol
lret
call
mov
lods
pusha
cmp
movsl
shlb
cld
xor
push
push
frstor
les
adc
or
call
dec
dec
scas
jmp
stc
into
cs
int
sub
in
or
adc
mov
jecxz
dec
mov
mov
cmp
aam
daa
or
leave
pop
ret
jmp
push
mov
lea
aad
pop
mov
dec
add
dec
xor
dec
leave
jne
jg
decl
mov
fnstcw
jmp
lret
arpl
dec
mov
xlat
mov
lock
das
jb
mov
ss
or
cmp
lret
in
shrl
shrb
jnp
loopne
add
movsl
sbb
push
fisttps
mov
lcall
cwtl
mov
or
daa
imul
stos
cmpsb
lret
inc
sbb
mov
aad
cmp
sub
int3
push
cmpsl
cld
sbb
addb
ds
jbe
mov
add
push
fdivrs
push
xchg
outsl
cli
aas
sub
mov
mov
cmc
sub
fwait
mov
test
inc
cmp
pop
or
inc
pop
popf
test
les
cli
sub
or
inc
shrl
loop
mov
and
loop
sub
jae
addb
xorb
jp
adc
jae
fstpt
push
cmpsl
fnstcw
aaa
lods
loopne
xchg
movsl
and
shlb
mov
mov
jnp
stos
xor
inc
je
xchg
xor
imul
xchg
mov
in
out
bound
push
pushf
push
call
mov
xor
fcmovu
pop
xor
sar
push
dec
add
roll
clc
repnz
adc
dec
mov
push
mov
sti
jmp
push
inc
jno
inc
fstpl
jb
leave
dec
mov
in
inc
pop
jl
add
popa
or
pushf
xor
imul
sub
add
push
xchg
scas
jnp
stc
dec
sarb
imul
sbb
inc
sbb
push
pop
fildl
jg
ret
inc
stos
in
ret
push
jecxz
js
in
test
push
cmp
jmp
jp
in
jb,pn
arpl
adc
outsl
sbb
scas
mov
inc
rorb
mov
jecxz
mov
imul
push
add
dec
xor
or
pop
mov
dec
mov
movsb
mov
push
cmpsb
mov
mov
loopne
sti
lret
rcl
inc
jle
lret
fwait
xchg
daa
add
push
jns
cltd
pop
and
sbb
or
add
push
test
push
jbe
and
clc
dec
jb
out
jge
pop
jns
movsb
push
cmpsb
mov
or
mov
in
daa
jbe
imul
repnz
pop
push
clc
andl
insb
jecxz
inc
lods
out
in
sti
shr
lret
cmp
mov
jle
pop
jbe
push
rorl
lds
jnp
gs
inc
hlt
scas
frndint
cmp
idivb
addr16
push
fisttpll
ret
sbb
add
mov
xor
stc
sbb
dec
cmp
sbb
sub
cwtl
mov
jns
test
je
imul
push
push
testl
adc
cmp
lret
inc
push
and
cwtl
jb
push
sbb
outsl
jmp
push
std
jle
adc
sarb
js
jl
ret
test
mov
inc
das
adc
das
inc
push
es
arpl
ficoml
lret
into
lds
fdivl
xchg
pusha
jg
gs
xor
stos
mov
in
xchg
sbb
lret
cmpl
xchg
push
mov
inc
in
inc
mov
adc
jp
and
sbb
popa
jp
cltd
sahf
mov
imulb
jmp
and
fs
cmp
leave
mov
dec
mov
popl
or
mov
jecxz
pop
ds
jg
in
lea
or
sarl
jge
add
fisubrs
clc
out
jp
sub
out
cmp
repz
mov
mov
imul
adc
cmp
inc
imul
mov
sub
xchg
sti
or
jl
push
outsb
lods
jg
and
insb
movsb
out
or
push
or
mov
mov
bound
popl
and
inc
mov
pop
mov
jg
inc
xchg
aaa
imul
jl
mov
movsl
mov
shrl
stos
sub
jns
aad
cmp
ficompl
insl
mov
jb
inc
fisttps
sbb
test
loope
sub
aad
or
pop
mov
setg
rolb
sub
push
mov
loop
xor
or
mov
ds
xor
pop
sahf
pop
dec
pop
lods
and
sub
mov
push
mov
andl
icebp
aaa
push
adc
pop
dec
addr16
inc
mov
inc
add
mov
dec
aam
sbb
aas
jb
add
insb
std
sub
das
data16
mov
jns
mov
sub
mov
push
inc
lea
xor
lret
ja
mov
maskmovq
push
jae
in
dec
inc
mov
mov
dec
mov
pop
add
out
cmc
or
mov
rcrb
pop
pop
int
mov
xor
pop
push
adc
pushl
icebp
cmp
cmp
adcl
fisubrs
pop
aad
push
xor
dec
add
in
shr
aad
xchg
sub
mov
outsb
xor
fldcw
cmp
test
or
mov
jge
sti
lods
pop
cmpsb
repz
fcmovb
ret
pop
les
or
push
lret
test
pushf
mov
mov
addr16
add
or
mov
fdivp
xorl
mov
scas
dec
mov
push
flds
xchg
int3
adc
leave
push
aas
pop
mov
pop
sbbb
cmc
clc
scas
insb
lahf
sub
test
mov
inc
xchg
test
add
stos
dec
fldt
pop
jne
push
pushf
sar
movsb
jnp
add
xchg
inc
mov
nop
jbe
fs
stc
rcrl
add
out
mov
cmc
in
push
imul
out
cmp
ljmp
sub
inc
out
push
pop
add
mulb
std
push
dec
mov
dec
ret
imul
std
or
out
sbb
sub
mov
fs
and
in
mov
insb
cmp
add
xor
mov
mov
mov
mov
dec
pop
dec
leave
push
push
xchg
icebp
lock
dec
sbb
push
ret
rclb
iret
pusha
and
pop
push
and
cmp
fldcw
mov
inc
divb
fdivrl
lods
addr16
adc
jge
mov
cwtl
push
mov
adc
push
jno
sub
add
aam
ljmp
lods
movaps
inc
iret
dec
jge
push
notb
sti
jae
pop
jns
pop
fcmovnu
pop
pop
adc
rcl
pop
scas
xor
inc
pop
ljmp
push
jmp
xchg
mov
jne
call
and
inc
test
pushf
daa
dec
lods
dec
add
fcmovnbe
popa
pop
xchg
push
jmp
add
sub
lods
xchg
sbb
out
mov
mov
popf
lods
loop
jns
test
in
sub
das
dec
jns
aas
mov
pop
aaa
hlt
inc
adc
mov
mov
decb
pop
cmovb
shll
add
pop
jnp
adc
cmp
pop
xchg
or
or
fldt
mov
xchg
add
jmp
xchg
cmp
push
ss
enter
mov
gs
fdivs
data16
mov
popa
inc
movb
int
fcomps
cmp
cmp
aad
scas
and
aad
adc
cmp
scas
cld
xchg
sub
aaa
push
adc
push
pop
sub
jne
inc
pushf
fstps
sub
cmp
insl
loop
cmp
stos
ret
mov
lcall
int
push
popa
xchg
xchg
scas
mov
pop
mov
mov
popf
cmpsb
rorb
dec
cmp
inc
xor
mov
scas
test
jne
in
ficoms
lods
test
jae
xchg
cmp
xchg
push
pushf
in
sbb
leave
int
push
jae
addr16
stos
mov
imul
dec
aad
or
leave
inc
mov
bound
push
lods
mov
pop
adc
aaa
mov
jp
addr16
popf
cmp
cmp
dec
inc
pop
jns
add
jnp
nop
lea
push
mov
xor
xchg
faddp
fisttpll
mov
aas
mov
dec
or
stos
les
inc
ffreep
add
push
pushf
or
pop
out
aas
or
push
push
xchg
js
jno
scas
mov
cmpb
pop
ficompl
inc
inc
fwait
cmpsb
mov
xlat
lock
adc
mov
adc
fcompl
sub
mov
nop
in
cmpsb
dec
stc
pushf
test
xor
inc
fidivrs
cmc
cmp
pop
pop
sbb
dec
loope
sbb
jmp
in
je
aad
or
dec
aaa
and
dec
repz
testb
cmpsb
testl
aam
leave
cld
repnz
push
dec
fstpt
movsb
movsb
int3
mov
enter
and
push
mov
test
lret
sub
popf
xorb
cmp
mov
iret
pop
dec
sahf
cltd
dec
lods
sbb
push
pushf
xor
mov
jp
mov
pop
ds
lret
push
sub
test
sub
pusha
ja
pop
ret
in
sbb
invd
and
stc
mov
fwait
ss
lock
dec
into
mov
mov
xchg
into
inc
adc
jle
jnp
xchg
mov
mov
fnstcw
mov
dec
das
rcl
int3
dec
adc
movsl
scas
scas
aas
push
dec
jle
cmc
push
push
add
jmp
call
stc
mov
test
xchg
test
mov
bound
sub
jnp
sbb
cs
xor
mov
xchg
dec
inc
sub
sti
or
push
pop
pop
dec
hlt
cwtl
stc
enter
addr16
enter
jge
cmp
add
mov
cmpsb
and
push
xchg
out
cmp
adc
pop
daa
push
pop
scas
scas
aad
sbb
adc
loope
rorl
daa
inc
inc
cmp
js
lahf
mov
test
faddp
mov
mov
mov
bound
sbb
in
dec
mov
out
xchg
movsb
imul
roll
inc
sub
mov
xchg
outsl
adc
cld
mov
and
sub
jg
mov
enter
jmp
lea
cli
mov
jg
ret
lock
lahf
hlt
add
sub
daa
xor
popf
pusha
out
lcall
lret
add
aas
pop
xchg
les
add
xchg
cmp
fildll
in
inc
cmp
adc
mov
mov
repnz
lds
lds
jo
test
or
and
sbb
pop
xor
mov
pop
je
jae
cmp
or
push
pop
xor
jb
inc
in
insb
xchg
or
push
push
mov
pop
xchg
sbb
in
arpl
sbb
hlt
xlat
jp
add
loope
mov
test
clc
dec
and
enter
mov
adc
arpl
repz
push
push
inc
mov
add
jl
loopne
repnz
or
aad
dec
push
or
out
sbb
sub
lods
aas
jae
xchg
jge
cmp
popf
mov
lds
out
in
das
xor
cld
popa
add
xchg
ja
and
aam
jmp
in
lret
lret
dec
loopne
sarb
xchg
inc
dec
mov
push
cmp
cmp
sahf
push
adc
sahf
icebp
test
mov
loope
xchg
std
test
out
das
sub
stos
push
test
push
mov
push
dec
mov
call
sahf
and
cmpsb
cwtl
dec
sbb
in
test
sbb
lret
test
jl
enter
mov
cmpsl
ljmp
loope
push
push
call
push
pop
fstpl
and
bnd
lahf
clc
push
jecxz
adc
mov
jl
add
sbb
fldlg2
mov
leave
lret
adcl
mov
jbe
adc
push
shl
shlb
pop
stos
xor
push
mov
xor
inc
xchg
and
ret
pop
mov
loopne
aam
aam
arpl
cmp
pop
popa
and
dec
aam
aaa
dec
inc
pop
xchg
mov
adc
pop
fwait
aas
cmpsl
dec
cld
daa
inc
lret
outsb
jmp
repnz
mov
test
imul
xchg
add
push
xlat
dec
push
jp
jecxz
cmpsb
or
dec
adc
push
cmp
arpl
sbb
add
in
repz
call
ljmp
test
sub
mov
sbb
sbb
rcrb
and
sarl
je
xchg
xor
mov
lods
nop
in
popa
sbb
sub
subb
ljmp
scas
imul
or
mov
mov
mov
inc
pop
push
scas
shr
daa
cwtl
jns
dec
arpl
sub
sub
and
lock
cmp
add
aaa
jae
add
int
out
lahf
fs
pop
and
pop
dec
cwtl
shr
in
lods
enter
dec
add
mov
pop
mov
ret
pop
es
jns
int
lahf
imul
fsubrl
in
mov
cld
adc
out
mov
mov
mov
sub
enter
outsl
imul
into
dec
mov
adc
cltd
stos
lds
fildl
xchg
scas
mov
ret
pushf
adcb
xchg
mov
icebp
add
std
and
fildll
test
xor
inc
push
fstpt
push
mov
add
jg
fmull
fwait
dec
daa
sbb
mov
mov
repz
pop
shl
jae
cmpsb
push
int3
movsb
fdiv
pop
lds
arpl
mov
jge
out
mov
rorb
fwait
scas
fistpll
xor
mov
repz
lods
das
pop
mov
imul
scas
lcall
call
jnp
bound
mov
ds
push
lret
clc
es
xchg
adc
repz
xchg
cmpsl
sub
fldt
push
dec
xor
ds
jnp
sbb
bswap
aam
iret
out
mov
sbb
imul
push
dec
ss
pop
sub
jb
ja
mov
dec
xchg
leave
dec
repnz
rclb
push
loop
lds
xchg
cli
iret
pushf
ljmp
adc
addb
push
pop
lret
movsl
mov
push
ret
cwtl
cld
in
cmc
or
ret
sub
mov
jecxz
xor
cmp
mov
xorl
cs
sub
pop
mov
xor
enter
fsubrs
insb
xor
xchg
xchg
insl
test
cmp
pop
into
imul
cmp
fs
inc
add
pusha
xchg
sbb
mov
jne
out
shr
nop
mov
jecxz
rcr
sub
xor
sbb
adc
int
hlt
orb
ja
inc
ret
or
jmp
test
pop
int3
sbb
xchg
js
inc
push
jnp
incl
pop
mov
hlt
push
pop
in
das
xchg
cmp
rolb
cltd
xchg
jle
inc
add
inc
fcmovb
je
negb
inc
mov
cltd
mov
pop
dec
loopne
fs
add
pop
movsb
pop
frstor
roll
pop
add
mov
pop
scas
icebp
mov
mov
sbb
mov
xchg
dec
arpl
cmp
jns
addl
lods
xchg
loopne
stos
mov
xor
pop
fmuls
sub
fimuls
stos
or
mov
roll
daa
cmp
das
dec
jb
sarl
andb
iret
cmpsb
jle
sbb
rclb
xchg
jl
ret
jb
out
repnz
jmp
add
enter
orb
mov
std
pop
and
xor
push
adc
cmp
fwait
test
imul
or
sarl
sub
movb
into
stos
scas
inc
fucomi
mov
testl
jns
cmpsb
cmc
ss
push
dec
pusha
adc
cli
xor
bound
in
test
int
mov
sub
xor
cmpsl
push
or
mov
int
rcl
dec
leave
test
out
mov
jecxz
stos
fisubrs
js
push
iret
rcrb
in
adc
js
cltd
mov
cld
loop
js
mov
mov
test
shrl
sti
imul
ret
and
lret
add
rclb
fdivrp
fs
adc
mov
fdivrl
je
mov
cmp
dec
jae
mov
cmpsb
xchg
icebp
sub
pop
fmuls
pushf
jg
or
push
insl
pop
mov
jne
mov
fxch
cmp
jp
and
fdivrl
shl
je
hlt
outsb
fcoms
pushf
test
push
clc
sarl
adc
lret
mov
cmp
pop
negl
ljmp
gs
repnz
pop
out
dec
xchg
imul
cmpsl
mov
sbb
push
adc
icebp
cs
ret
xor
sbb
inc
fldl
dec
popf
popl
lcall
jne
and
pop
pop
push
add
mov
mov
add
int3
out
mov
push
and
jp
adc
sub
sarb
jecxz
jecxz
outsb
fwait
aad
in
cmp
inc
add
sub
dec
or
ja
add
movsb
xchg
or
sahf
push
mov
in
in
mov
fsts
xchg
ja
cmpsb
sahf
and
nop
fisubrl
push
pusha
push
imul
int3
stos
xchg
loope
aad
les
cmp
mov
stos
lods
mov
fcoml
xchg
mov
cwtl
mov
dec
int
insl
cmp
mov
int3
push
call
and
jno
int3
push
xor
mov
or
cmpsl
loopne
ds
jns
js
push
lea
out
imul
cmp
and
test
cs
push
mov
jge
add
xor
punpckhwd
cmp
test
add
add
out
pushf
push
stos
mov
xor
push
filds
jb
jno
les
sbb
maskmovq
sub
dec
lahf
adc
or
jl
xchg
adc
test
or
scas
mov
mov
or
add
stos
mov
xchg
aad
fwait
jo
cmp
cwtl
jecxz
sub
pop
rclb
ss
loop
push
cli
jge
cwtl
or
xor
pop
adcl
cmp
test
push
inc
orb
in
sub
insb
push
stos
jmp
cwtl
outsl
cmp
push
cmp
test
mov
in
xadd
addr16
aam
rclb
into
jo
cmc
dec
mov
push
mov
and
and
hlt
add
push
sbb
pop
loope
arpl
add
arpl
cmp
or
fstl
push
hlt
aas
and
in
push
push
jnp
out
sbb
cmpsb
xor
movsl
adc
sarb
rorb
push
scas
inc
cmp
xchg
mov
push
add
xchg
lock
pop
mov
xchg
repz
pop
jae
mov
ljmp
inc
mov
stos
faddl
xchg
and
mov
add
sub
fcmovu
xlat
mov
scas
ds
pop
iret
or
sub
xor
cwtl
fsubl
dec
mull
ljmp
xor
pop
in
sbb
mov
jl
fsubs
out
mov
int
dec
jns
hlt
pop
mov
mov
lahf
jp
in
sub
insb
inc
sub
add
ljmp
frstor
xchg
sub
xchg
pop
sbb
mov
sub
push
stos
outsb
aas
xlat
mov
fdivr
outsl
mov
int3
dec
mov
in
xor
jno
cs
adc
xchg
inc
sub
sub
dec
mov
sub
int
loop
lahf
shll
xchg
loopne
push
das
mov
bound
inc
out
leave
or
stos
movsb
stos
adc
mov
xchg
dec
subl
dec
in
iret
insb
fcoml
pop
movsb
sub
dec
mov
cmpsl
pop
push
aaa
push
mov
repz
dec
mov
mov
pop
int
push
outsb
xchg
xchg
mov
inc
adc
fcoml
mov
daa
loope
sbbb
lahf
and
sub
les
jmp
addr16
je
out
mov
mov
scas
push
or
inc
xlat
mov
inc
je
insl
add
push
jge
adc
in
sbb
dec
cwtl
shrl
xor
icebp
test
push
out
mov
fnstsw
ljmp
std
test
mov
xchg
inc
inc
xchg
mov
mov
inc
mov
sbb
and
xchg
out
shll
mov
mov
data16
popa
add
sbbl
repz
mov
inc
bound
loope
pushf
loope
sub
out
mov
mov
mov
fstps
xchg
mov
mov
xchg
cmpsl
pop
pusha
xchg
xchg
lds
in
and
ficoms
divb
insl
and
or
mov
or
cli
into
or
daa
adc
test
lea
ja
fsubs
xchg
add
jmp
adc
in
lds
inc
dec
inc
or
push
popf
adc
je
xchg
xchg
mov
repz
pop
push
clc
jno
sub
inc
mov
mov
inc
cmp
shrl
jl
movsl
or
jmp
lret
aam
lahf
out
mov
mov
lret
pop
js
jnp
push
test
xor
jp
mov
sahf
pop
test
and
fcom
out
cltd
fsubl
dec
rcrl
push
ficoml
int3
leave
aaa
mov
xchg
out
push
adc
push
dec
outsb
cmc
pop
and
sbbb
scas
jb
sar
pop
stos
mov
or
shr
inc
adc
sbb
push
add
jp
xchg
stc
in
movsl
mov
add
inc
pop
sahf
xor
cli
arpl
cmp
scas
shl
ficoml
add
cltd
lods
imul
outsb
ds
ret
xchg
and
mov
pop
pop
bound
inc
mov
in
imul
xchg
mov
xchg
xchg
cmpsl
sub
sbb
xchg
or
adc
test
pop
pop
test
and
inc
enter
or
sbb
mov
sub
jge
adc
scas
xor
pop
sbb
sub
mov
dec
in
dec
dec
lea
jno
pushl
testl
pop
pushf
jnp
in
xor
pop
jne
ds
adc
sub
cmovl
sti
push
xlat
cld
inc
scas
cmp
xchg
pop
mov
jge
popa
insb
mov
jge
pop
add
lds
pop
sbb
mov
jnp
test
xchg
iret
mov
sbb
fimull
dec
rorb
push
cmp
dec
xlat
and
lock
lock
ds
loop
inc
sub
mov
sub
lret
test
mov
jp
fldenv
jge
dec
cli
ljmp
mov
push
je
jle
fisttps
imul
cli
cmc
sbb
icebp
lret
add
jg
mov
aaa
fidivs
and
in
jmp
cmp
scas
nop
rcl
and
inc
test
or
jmp
pop
cmpsb
mov
scas
inc
jo
insb
lea
and
bound
mov
fstps
add
in
xor
jle
enter
adc
ljmp
pop
xchg
rcrb
push
cmp
pop
dec
inc
les
mov
or
or
or
int3
and
and
xlat
ret
cmc
jl
aad
pop
push
cmp
cmpsl
mov
dec
adc
lahf
dec
pop
push
shr
cmc
sbb
icebp
add
mov
sub
je
push
jae
jno
adc
jnp
and
jbe
sbb
cmpl
sub
mov
les
and
dec
sbb
enter
sar
cmp
bnd
inc
popf
mov
xor
mov
or
jp
adc
cmpsl
mov
clc
adcl
pop
mov
sub
out
jb
xor
int3
dec
mov
cmp
test
cmp
shll
or
mov
nop
add
inc
push
push
cmpsb
lret
ds
jmp
fisttpl
ss
stos
adc
scas
xchg
cmp
add
push
cwtl
or
mov
inc
call
adcl
ljmp
push
and
jb
jnp
and
out
gs
pushf
inc
frstpm(287
inc
xor
mov
arpl
aam
mov
pop
or
add
jb
xchg
or
adc
and
inc
loope
fwait
or
gs
rorl
cltd
sarl
inc
cmc
mov
push
mov
into
mov
xchg
inc
and
mov
cmp
xor
arpl
aad
aaa
loopne
sub
out
xchg
hlt
bound
sbb
iret
insl
jno
fsubl
ljmp
jns,pn
popf
testb
mov
mov
xchg
push
clc
lret
jg
dec
aaa
pop
mov
sub
xchg
std
insl
repnz
cmpsb
scas
sti
aas
jg
imul
lret
jo
insb
in
ja
adc
cmp
push
ljmp
or
cmpsb
xlat
mov
ja
enter
sbb
dec
sbb
in
mov
inc
inc
fiadds
mov
lods
mov
mov
cmpsb
lahf
sbb
adc
sub
clc
pop
mov
testl
insl
rolb
lret
ljmp
pusha
cli
or
jnp
sub
test
jb
mov
mov
arpl
dec
add
ja
leave
fadds
adcb
inc
xchg
call
xor
sarb
shll
mov
daa
mov
je
cld
ss
pusha
das
mov
dec
add
xchg
or
cs
pusha
push
pop
fstpl
inc
into
mov
clc
dec
mov
pop
lret
adc
xor
repz
xchg
jb
aas
lods
fldt
cmp
nop
jle
xchg
pop
push
scas
inc
xchg
jne
mov
ret
test
aam
clc
jns
or
cs
popl
test
fiadds
out
stos
or
and
pop
push
adc
les
rcrl
lods
xchg
aam
js
mov
add
or
mov
cmp
pop
adc
pop
outsb
xor
cmp
ret
test
aas
jne
jmp
dec
jecxz
das
adc
clc
mov
ficoms
push
xor
insl
pop
stc
add
pop
sbb
shll
andnps
xchg
repnz
inc
xchg
xchg
mov
cmp
repnz
add
out
push
cmpsl
push
cwtl
xor
xchg
cmp
xchg
outsl
or
adc
sti
incl
lea
cld
leave
jns
xchg
insl
arpl
xchg
mov
jg
add
test
pop
mov
fcoms
xchg
jle
and
mov
cmp
out
xchg
push
pop
dec
stos
push
sbb
out
xchg
pop
dec
cmp
xor
xor
sbb
aas
fstps
sub
ds
adc
pop
mov
dec
lcall
mov
sbb
out
cmp
jg
sahf
mov
pop
inc
sub
js
pop
cmpsl
lret
test
aad
fildl
sbb
jb
in
pusha
pop
fwait
and
push
scas
sub
stc
cmp
ret
mov
inc
jbe
mov
push
dec
and
dec
mov
mov
push
movsb
add
lahf
in
loop
es
cli
pushl
lahf
and
loope
xor
sbb
stc
insl
outsl
aas
aad
xor
add
enter
xor
in
lahf
push
into
mov
fldlg2
adc
pop
and
sbb
xor
mov
and
cs
add
cmc
adc
std
inc
jecxz
xor
jle
cmp
leave
xchg
hlt
mov
xchg
add
inc
fsubrs
ret
xor
mov
lds
adc
cmp
pop
push
into
jle
or
mov
cld
adcl
daa
test
ds
fnstenv
sbb
pushf
fadds
aas
lods
stos
dec
int
imul
xor
aam
pop
cmpsl
stos
ret
int3
stos
fstpt
fldcw
lods
dec
and
xchg
push
fstpt
jnp
add
into
xor
lahf
outsl
inc
xor
sbb
push
dec
loopne
xor
imul
inc
lds
insb
or
pop
insb
cmc
push
mov
adc
inc
adc
xchg
pop
stos
cmpsb
sar
cmc
loop
imul
xor
mov
pop
test
inc
ja
mov
in
push
shlb
je
push
call
pop
pop
aaa
and
stc
lods
dec
in
xchg
xchg
adc
xchg
ficomps
int
xor
out
test
cli
lods
aam
push
lahf
or
incl
add
ja
pop
xor
popf
fcoml
jp
stc
nop
jns
outsb
mov
xchg
lods
pop
jl
mov
add
jo
pop
push
mov
out
push
sub
bound
lret
cmp
daa
ror
xor
movsb
leave
xcrypt-ctr
cmpsl
pop
fs
lcall
xchg
jb
lahf
fistps
rcr
sahf
xchg
inc
sbb
jbe
push
insl
cld
inc
mov
addr16
or
movsl
pop
test
push
pop
push
jmp
xlat
daa
inc
test
fs
pextrw
jbe
sbb
inc
cmp
sbb
stc
mulb
movsl
es
fwait
push
int3
and
fs
sub
shrl
ret
add
pop
inc
add
imul
xchg
fsubr
lds
sbb
mov
orb
cmp
mov
mov
and
pop
push
insl
aaa
xor
xor
xchg
mov
repz
cld
mov
std
ds
fsubrs
xor
cmp
add
pop
push
xor
sbb
hlt
add
mov
mov
sbb
jge
stos
mov
add
ficoms
pop
jnp
push
sbb
inc
in
movsb
cmc
enter
loopne
push
xchg
adc
push
ljmp
mov
clc
dec
call
xchg
dec
dec
push
mov
pop
leave
xchg
pop
stos
jb
jbe
jle
dec
push
sarb
dec
stc
inc
xor
xchg
pop
dec
push
push
out
sbb
add
movsb
pop
pop
inc
movsl
ljmp
or
ficoms
lcall
xchg
mov
out
in
mov
mov
cmc
cmpsl
fiadds
sub
fs
and
inc
cmc
xor
idivb
mov
mov
lcall
mov
aam
into
cmp
dec
repnz
adc
xchg
or
dec
xor
orl
ret
scas
adc
repnz
fisubrs
inc
xchg
lods
adc
add
xor
push
mov
jae
add
out
je
adc
xchg
mov
jecxz
dec
push
jg
sbb
rcrl
pusha
sbb
in
cli
xchg
inc
xchg
mov
ds
xor
lret
xchg
outsb
lret
inc
pop
push
leave
mov
les
aas
sti
in
daa
andl
and
push
xchg
dec
sahf
sub
shrl
stos
jg
mov
aad
imul
xor
jge
xor
or
mov
cmc
popf
dec
sbb
fdivl
pop
lahf
push
pop
jne
outsl
mov
ret
jge
je
push
out
inc
orl
pop
and
dec
movsb
pop
lcall
int
mov
xchg
jne
gs
mov
pop
jl
mov
adc
popa
cmpsb
mov
add
into
ljmp
pop
fiadds
mov
push
inc
scas
in
xchg
aaa
test
gs
roll
fcomp
push
hlt
pop
aam
lcall
mov
add
mov
cmpsb
dec
push
mov
fsubr
fdivrs
les
dec
cmc
sub
pop
or
adc
jne
sub
jo
and
mov
sub
out
inc
xchg
pop
xchg
sbb
fildll
fistps
fsts
push
xchg
cmp
push
push
loopne
ds
punpckhdq
test
mov
adc
pop
mov
call
movsb
mov
dec
lock
jge
in
pop
mov
lcall
mov
cmp
test
sahf
mov
loop
pop
dec
pop
add
cmp
dec
arpl
nop
test
lock
fcmovbe
xchg
dec
loope
int3
call
pop
xor
int
out
pop
pop
jnp
lods
ficompl
std
shrb
int
out
fwait
outsb
outsl
mov
xor
int
movsb
add
sbb
mulb
mov
bound
cmp
sub
pop
xchg
fnstsw
popf
movl
cltd
mov
repnz
dec
and
jno
adcl
or
outsb
inc
cli
and
xchg
sub
cli
xchg
aaa
loop
test
sub
cmp
push
pushf
add
push
lret
push
and
imulb
sub
xchg
dec
sti
mov
stos
adc
aaa
fsubs
sar
mov
rcr
stos
jnp
and
push
or
enter
mov
fnsave
pop
jmp
push
and
jb
mul
pop
add
or
imul
pop
out
sbb
inc
movsl
and
stos
icebp
jno
cwtl
int
mov
or
jmp
es
outsl
cs
mov
imul
dec
ljmp
sbb
sarb
mov
xor
cmp
ds
testb
jbe
xor
push
xor
dec
cmp
ljmp
mov
ret
and
adc
add
data16
daa
outsb
cmpsl
mov
pusha
xchg
dec
leave
lods
adc
hlt
ja
aam
or
movsb
push
sub
mov
jo
jmp
xor
pop
nop
jp
out
add
jae
fxch
imull
dec
pushf
ret
jp
inc
ficoml
leave
insl
push
lcall
fisubl
jo
cmp
subb
fisubrs
jecxz
scas
scas
push
and
sub
test
fisttpl
sub
dec
push
loop
xor
fstpl
out
mov
outsl
or
push
push
cmp
pop
sub
nop
jbe
sub
stc
in
pop
in
sar
cmc
cmp
out
mov
addl
cwtl
arpl
add
shll
sbb
les
and
jle
sti
iret
sub
pop
and
push
jno
clc
xor
mov
call
dec
jl
mov
sbb
daa
mov
sbb
fstps
and
and
adc
out
jg
cwtl
aas
pop
insl
ror
add
xorb
push
data16
nop
das
shll
xlat
repz
jp
in
mov
dec
jne
hlt
insb
xor
or
mov
xor
bound
mov
xchg
rcrl
mov
shlb
cli
xor
jnp
xchg
pop
mov
std
mov
jb
shl
fs
pop
inc
jecxz
push
bound
call
push
dec
mov
push
stc
int3
mov
mov
inc
xor
xor
add
inc
push
loope
add
xchg
dec
sbb
loopne
or
scas
std
lret
xlat
lods
call
and
testb
std
enter
dec
pop
jae
mov
sub
repz
jp
cmpsl
aam
cli
into
notb
adc
mov
or
mov
aaa
jl
in
xchg
scas
and
push
jle
imulb
sbb
ljmp
add
and
jnp
stos
stos
pop
outsl
jnp
pushf
xor
add
repz
into
inc
enter
sbb
mov
adc
stos
mov
dec
stc
fisttps
jns
out
imul
jle
add
mov
pushf
pushf
cmp
je
pop
sub
stc
xor
cmpsb
xor
dec
adc
pop
xchg
ficomps
sub
cltd
ss
xor
jns
jg
adc
les
jl
rcrl
or
dec
insl
sti
and
jbe
sbb
jmp
and
and
inc
push
leave
popf
hlt
mov
inc
xchg
in
sbb
pop
ja
lods
and
mov
andl
stc
jb
xor
cmp
mov
test
and
sbb
cmpsl
ljmp
xor
nop
test
insl
pop
call
movsb
mov
push
pop
int3
pop
or
lock
dec
nop
movsl
and
fidivrl
mov
push
or
imul
mov
stos
or
pop
into
incb
xor
outsl
pop
aad
or
cltd
cld
repz
testl
xlat
cmpsl
out
rcrl
xchg
jnp
lret
mov
jmp
testb
dec
scas
push
xor
insl
and
jmp
jno
jmp
mov
movsb
lods
out
sub
imul
cli
lcall
mov
mov
jb
dec
lret
imul
sbb
push
mov
xor
mull
jb
jae
cltd
jp
in
mov
stc
cld
icebp
sub
xor
gs
mov
xchg
ljmp
push
jno
xchg
pushf
fwait
mov
aaa
push
aam
mov
lds
mov
jmp
rcrl
or
in
sbbb
jae
gs
cmc
lcall
mov
fstpt
jecxz
push
jns
dec
mov
pop
add
cmp
ret
or
sbb
jl
dec
mov
insb
arpl
xchg
push
pusha
dec
xchg
pop
jno
popa
nop
in
shll
xlat
mov
fistps
sarb
pop
pop
outsl
nop
cld
std
leave
pop
jb
addr16
imul
outsb
and
fcmovb
and
xor
sbb
jbe
enter
jmp
push
sbb
imul
mov
mov
mov
xchg
je
rolb
xchg
inc
add
xor
bound
pop
push
xor
in
in
orb
test
jge
pop
cli
in
enter
flds
stc
arpl
shrb
aam
icebp
jb
ja
mov
adcb
cmp
rorl
in
jns
jne
jbe
mov
or
xlat
jp
je
ljmp
cld
jg
out
mov
mov
push
mov
es
or
push
ret
lods
push
mov
jecxz
ret
lea
pop
lret
fistps
pop
loope
scas
pop
idiv
mov
mov
repz
mov
leave
subb
push
test
lods
push
cmp
xchg
std
cmp
xor
cltd
out
mov
lcall
shl
adc
push
sahf
imul
dec
lds
shll
add
pop
and
pop
ret
and
adc
loope
adc
leave
dec
jb
fmull
add
xchg
movsb
or
mov
subb
pop
mov
jbe
ljmp
in
lods
jns
out
push
xor
jb
jns
adc
jle
xorl
jle
imul
mov
rorl
and
cwtl
adc
sahf
daa
fs
jmp
cli
mov
fsubp
das
dec
dec
int
clc
adc
test
shl
mov
cmc
pop
rcrb
pop
loop
sbb
addb
movsb
out
repz
inc
std
mov
jne
mov
and
mov
test
jecxz
dec
inc
mov
fdivrl
adc
jno
cld
adc
cltd
adcb
insb
pop
in
rclb
mov
sub
mov
daa
or
fidivrs
cmp
cs
or
mov
fcompl
cmp
mov
add
sub
sub
jl
popf
fcomps
sti
mov
push
or
jae
mov
sub
cld
in
mov
and
push
pop
arpl
xchg
icebp
cmc
push
mov
subb
scas
into
mov
jne
cmpsb
mov
mov
cmp
lret
aad
dec
hlt
dec
repz
or
stos
inc
mov
and
pop
jle
xor
leave
into
push
sar
push
cmp
jg
or
xor
int3
loopne
xchg
jo
mov
add
jl
xor
inc
push
sarb
cmp
adc
lret
cld
addl
push
mov
mov
fnstsw
fistl
outsl
inc
pop
cmp
and
mov
ss
pop
push
loopne
mov
pop
cwtl
mov
popf
push
or
and
mov
or
pushl
and
sub
xor
adc
into
xor
jae
das
cmp
pop
mov
xor
sti
int
cmc
movsb
sbb
in
ds
fs
hlt
dec
cltd
mov
popfw
mov
xchg
mov
jecxz
adc
or
xor
repz
mov
adc
fldenv
pop
ret
fcmovne
int
mov
and
aaa
dec
xor
add
sti
cmp
mov
je
add
cmpb
mov
mov
inc
int3
push
cmc
rorb
xchg
sti
mov
clc
push
xchg
pop
roll
cmpsb
call
sbb
stc
mov
push
sahf
in
andl
sub
ret
jae
mov
and
xchg
das
or
add
pop
add
mov
lds
mov
xor
mov
cmp
idivb
sub
icebp
int
pop
shl
jge
push
xor
shll
adc
lret
xor
test
insl
add
pop
push
mov
sarl
mov
dec
sahf
push
scas
ljmp
push
out
push
lret
and
mov
xchg
cmpsb
daa
mov
shlb
test
sar
imul
cli
xchg
xor
push
pop
jo
bound
stos
mov
pusha
xchg
fsub
aam
mov
lds
dec
jl
sub
adc
pop
xor
jmp
mov
fdivr
lea
fidivrl
mov
mov
call
sbb
pusha
dec
imul
add
sar
and
inc
je
xchg
aam
jl
sbb
dec
iret
push
and
push
or
fcmovnbe
js
fnstenv
jmp
test
add
in
test
inc
pop
lds
daa
xchg
das
mov
xchg
lahf
outsb
xchg
sbb
repz
lahf
pop
or
test
rcll
push
lea
mov
enter
push
sub
lahf
or
rcr
into
gs
das
sahf
rolb
push
fldcw
bound
mov
cmp
and
lock
test
jns
inc
pusha
xor
daa
xlat
cltd
pop
sub
in
aam
jg
jg
mov
mov
mov
bound
xlat
sar
and
adc
mov
test
sbbl
push
jge
adcl
push
inc
push
scas
insb
mov
test
test
cmp
fists
fs
mov
in
fwait
insb
movsl
push
stos
outsl
fdivl
push
jbe
insb
lock
push
je
les
mov
pop
mov
fwait
aas
pop
icebp
jns
aaa
xor
insb
das
and
fucomi
subb
aad
leave
imul
test
gs
inc
lret
popa
mulb
xchg
inc
ljmp
mov
dec
lods
iret
lcall
fisubs
movsb
cwtl
flds
xchg
data16
add
cmpsl
sub
or
test
or
mov
test
pushf
inc
cmp
loope
sub
jnp
and
fidivrs
lahf
out
mov
jmp
clts
fistpl
pop
xchg
pop
outsb
stos
ficoms
add
testb
data16
jne
push
nop
lret
add
repnz
std
lret
movsb
cmp
mov
jb
cmp
push
icebp
xchg
push
movsl
lret
movsl
sub
pusha
mov
jg
pop
mov
or
dec
and
pop
es
data16
jae
xchg
dec
imul
jae
inc
outsl
lret
out
repz
sub
fidivrl
cmp
mov
mov
aam
mov
popf
pop
mov
inc
sub
scas
cmp
rorl
adc
insb
std
jb
sbb
je
adc
rcrb
in
push
mov
push
mov
das
fmuls
pop
nop
movsb
les
pusha
mov
cli
mov
dec
lret
ret
int3
lds
fs
sub
or
lods
sub
and
mov
cmc
or
cvtps2pi
fs
jnp
mov
and
repnz
daa
cwtl
loop
xor
or
push
jle
xchg
pop
push
add
aaa
mov
gs
dec
mov
lret
adcb
nop
add
shlb
and
cld
mov
repz
mov
enter
mov
inc
jns
out
ds
push
fildl
dec
push
sbb
in
inc
aaa
xor
call
jecxz
jp
dec
push
mov
jmp
je
aad
fcomps
mov
fcoms
xor
mov
repnz
push
ja
xchg
or
testl
in
lock
cmpsb
cmc
add
int3
outsl
or
jno
push
mov
leave
mov
pop
inc
daa
adc
xchg
adc
in
testb
or
dec
mov
bnd
mov
dec
inc
sbb
xor
inc
pusha
in
std
popf
lods
push
mov
mov
enter
mov
jl
shll
stc
js
or
aad
mov
aaa
mov
mov
out
mov
pop
pop
pop
repz
andl
out
and
sahf
push
in
and
cmp
pop
mov
push
cmp
sub
pop
imul
lret
xchg
sub
adc
imul
popa
cmpb
es
or
loop
fimuls
es
mov
loope
pop
stc
int3
cmpsl
inc
sahf
in
sub
fmuls
add
cmp
lahf
fnstcw
jmp
in
fs
roll
test
pop
insl
dec
xor
pop
or
jne
lcall
add
and
xchg
add
sti
in
imul
jnp
cmpsl
or
dec
pop
mov
or
and
imul
xchg
mov
test
popf
cmp
xchg
rcrl
imul
outsb
fildll
out
ret
push
or
dec
int3
mov
in
sbb
mov
mov
add
dec
loop
push
jbe
xorb
loope
push
nop
repz
sbbl
jne
shlb
sti
jg
lock
imul
sarl
inc
push
imul
mov
call
nop
xchg
sub
fdivrl
jno
cld
mov
shlb
fabs
xchg
jo
repnz
inc
adc
adc
mov
shrl
sub
or
int3
mov
icebp
outsl
dec
xlat
cld
or
int3
dec
imul
jo
idivb
push
or
int3
enter
pop
adc
lcall
out
ficompl
mov
mov
sub
mov
adc
in
mov
sbb
mov
arpl
cli
jecxz
ret
adc
mov
jae
jnp
mov
cmc
dec
or
dec
hlt
fisubrl
call
mov
xor
inc
test
mov
shlb
jno
push
pop
pop
push
lods
jmp
adc
dec
push
sti
fstpl
outsb
jle
frstor
cmp
jl
arpl
mov
xor
call
pop
lea
icebp
pop
clc
mov
arpl
js
sbb
lret
jle
mov
incb
ror
imul
jle
mov
ror
test
or
jecxz
pop
mov
or
into
loopne
outsl
test
push
cli
ret
xor
flds
or
in
and
ss
mov
sbb
push
xchg
es
bound
jae
sbb
xor
enter
cmc
popa
aam
push
xor
inc
or
sbb
mov
mov
lahf
iret
aad
das
in
inc
jbe
or
cmp
cwtl
lret
cli
in
inc
xchg
je
mov
mov
push
iret
sub
imul
cmpsb
in
mov
mov
push
lods
in
ret
jb
test
sbb
leave
aam
jnp
pop
cmc
pop
or
sub
inc
je
dec
clc
ljmp
xchg
push
notl
pop
ss
push
dec
inc
shrl
lret
push
mov
mov
jge
sub
adc
push
std
stc
lcall
cltd
pusha
aad
mov
mov
fcmovb
addps
orb
scas
adc
stos
ss
xor
xlat
push
sub
jne
mov
pop
xchg
mov
sbb
xchg
daa
stc
aad
mov
imul
cmc
add
mov
xlat
adc
test
pop
adc
or
imul
int3
lods
or
xchg
inc
or
and
pop
cmovp
mov
or
cmp
jp
mov
fnstenv
pushf
pop
repz
pushf
add
je
aas
and
data16
jle
push
repz
push
mov
cmp
xchg
lods
mov
test
aam
stc
xchg
inc
dec
mov
test
mov
cmp
ljmp
in
mov
mov
imul
and
adc
or
and
subl
aam
ss
lock
jl
and
fnstsw
xchg
stc
dec
pop
or
cmp
cmp
daa
push
fimull
out
adc
jnp
add
lods
mov
sahf
les
in
lea
xor
rorb
orb
sarl
or
pop
or
lds
inc
shrb
jbe
fnstenv
fldenv
jl
stos
in
stos
mov
push
pop
mov
sbb
jge
bnd
dec
cmpl
and
xor
fwait
adc
mov
lods
addr16
popf
pop
pop
xchg
sbb
arpl
adc
test
jns
outsl
pop
dec
divb
dec
sub
adc
orl
cmpsl
add
stc
in
out
adc
into
dec
sub
adc
call
rol
aad
call
mov
aad
lret
pop
rclb
ljmp
and
mov
sbb
gs
cltd
jge
mov
repnz
int
sahf
orl
cmp
pop
insl
and
push
inc
test
ljmp
jmp
mov
fimuls
ret
mov
push
cmpsb
and
loop
inc
xor
or
xlat
cmp
call
dec
into
out
jnp
es
mov
int
xor
lret
dec
clc
sub
lahf
sub
mov
aas
mov
int3
mov
mov
addb
xchg
out
xor
push
in
adc
insb
add
xchg
push
fwait
xchg
movsb
outsb
rclb
sbb
mov
call
fsubr
cmpl
pop
cmp
scas
daa
repz
out
loope
pop
inc
pop
pushf
dec
jno
inc
mov
jnp
cmp
es
imul
orb
sbb
pop
or
mov
jno
xchg
paddq
fimuls
out
ljmp
ds
mov
sub
cmpsl
jae
das
or
mov
outsl
mov
xchg
cmpb
cmp
sub
sub
xchg
outsl
je
shr
loope
aas
aam
aas
inc
and
outsl
repnz
cmp
mov
xchg
mov
pop
mov
repz
das
add
scas
divb
outsl
pop
sahf
dec
lea
fisttpll
mov
sahf
xor
cld
xchg
int
xor
cmc
cmpsb
sub
imul
mov
cmpb
std
pop
xor
xchg
adc
sub
xchg
dec
icebp
jp
js
dec
adc
jbe
das
cmpsl
mov
or
lods
pop
mov
pop
xchg
mov
pusha
sub
cs
jg
inc
lods
pusha
fucomp
dec
adcl
pushf
mov
sub
fdiv
gs
in
cmpsl
adc
lock
aad
adc
out
iret
aad
xor
js
and
gs
roll
mov
sahf
shrl
cltd
icebp
cmpsb
stos
xor
jge
cwtl
std
arpl
jl
dec
push
mov
js
test
sti
movsl
mov
xchg
addl
fwait
inc
jmp
jle
insl
cmpsb
lea
jae
cmpsb
add
jmp
aaa
mov
mov
mov
add
outsb
lret
dec
cmp
rcrl
cmc
push
mov
push
mov
jnp
aad
sti
inc
inc
sbb
or
imul
cltd
push
sub
push
xchg
mov
dec
les
sub
mov
and
mov
sarl
icebp
fdivs
pop
jmp
xchg
repnz
pop
xchg
jmp
sbb
stos
or
adc
push
sub
jg
arpl
imul
sub
das
sbb
rcrl
xor
mov
xlat
jge
and
push
insl
dec
inc
mov
in
movsl
stos
inc
cmp
fwait
dec
ja
pop
dec
mov
dec
out
in
jae
dec
sbb
push
lea
sub
push
insb
sarl
dec
push
dec
cmp
push
push
jl
insl
xchg
sbb
mov
or
mov
mov
adc
xor
pop
adc
xchg
jbe
aad
xchg
fiadds
xchg
mov
test
pop
outsb
xchg
jp
out
lret
mov
testb
int3
and
jle
in
xchg
stc
aas
sub
test
js
lea
arpl
dec
lods
push
loop
call
movsl
xchg
xchg
jge
test
pop
lods
jle
int
test
jecxz
jne
jb
mov
movsb
icebp
mov
push
shll
mov
pushf
scas
mov
pop
mov
jecxz
and
jmp
xchg
mov
sti
jge
sub
inc
jb
dec
lahf
out
insl
and
inc
cmp
fadds
std
mov
enter
dec
mov
sar
test
jle
pmulhuw
or
les
sbb
add
sbb
repnz
dec
shl
popf
jnp
stc
mov
push
sbb
mov
mov
call
mov
int
pop
sub
push
pop
cltd
enter
or
adc
or
lock
and
test
aas
xchg
shl
mov
and
sahf
mov
ret
ret
xor
and
add
jno
stc
jno
cmpsb
or
inc
xchg
in
push
mov
shll
xchg
xchg
cmpsb
push
lahf
cmp
cmp
lcall
enter
xchg
fsubl
andl
mov
adc
in
popf
scas
subl
adc
dec
mov
mov
call
xchg
in
fidivl
mov
cmp
lret
int
cmpsl
test
dec
aas
pop
shrl
adc
cwtl
cltd
and
mov
cmpsb
cwtl
xchg
rorb
xor
lcall
les
xor
jne
not
xorb
mov
push
mov
iret
int
adc
fdivs
test
ds
mov
je
inc
out
mov
inc
addr16
dec
ljmp
in
sub
aam
sbb
cmpsl
jl
mov
cwtl
lods
mov
mov
add
ret
mov
jge
fnsave
arpl
push
jae
cmp
lock
out
das
out
sbb
test
and
out
out
imulb
cmpsl
pop
ss
mov
sbb
iret
das
and
lea
loop
mov
js
sbbl
imul
jecxz
dec
mov
into
insl
cmp
push
lea
xchg
mov
int3
fwait
xchg
lods
sbb
push
pop
std
sarb
mull
inc
stos
jle
mov
ljmp
sub
subl
jnp
mov
ret
jle
cmc
sbb
add
es
mov
es
or
add
insl
rcll
ja
stos
ret
dec
add
stos
xor
sarb
in
or
iret
inc
scas
icebp
scas
pop
out
mov
jg
mov
push
push
stc
rclb
and
cmp
aaa
int
loopne
add
sahf
xchg
sbb
loopne
pop
mov
mov
push
jbe
leave
inc
fwait
xlat
dec
mov
sarb
dec
loopne
mov
xchg
mov
fldcw
push
add
adc
pop
jmp
add
jnp
cmp
adc
adc
stos
js
enter
lea
add
test
and
mov
add
cmp
pop
cld
xchg
push
je
iret
lea
adc
outsl
pmullw
ljmp
dec
mov
shll
movsl
push
push
dec
test
xor
xor
mov
jae
push
or
jecxz
inc
ret
sbb
std
mov
cmp
addb
iret
and
or
and
repnz
aaa
pop
pushf
add
ret
mov
ljmp
jnp
mov
maskmovq
divl
add
mov
or
mov
imul
mov
cs
sbb
testb
daa
mov
les
xlat
lds
push
mov
mov
xor
ljmp
and
stos
aam
cltd
stos
mov
sub
mov
lahf
and
jl
sbb
imull
test
mov
jns
mov
sbb
add
pop
lods
ljmp
adc
add
lock
jg
dec
and
inc
mov
loopne
dec
and
into
xor
adc
xor
inc
cld
push
sub
movsl
lods
out
iret
subb
hlt
pop
rorl
xor
pop
pop
sub
mov
out
or
andl
iret
or
sbb
cmp
rcrb
in
pop
mov
pop
cmpsb
mov
jecxz
dec
in
adc
mov
daa
aas
fsts
inc
jp
jae
testl
lcall
push
adc
in
and
dec
loop
or
fildl
fildll
adc
cmp
movsl
mov
dec
dec
pop
jb
jne
iret
push
rcrb
arpl
pushl
push
test
pushf
push
mov
jns
pop
cmp
ret
fcoms
mov
mov
scas
pop
outsb
popf
aad
mov
rcrl
loopne
insl
imul
mov
lcall
lcall
call
loope
ja
movsb
or
fsub
loope
repz
icebp
dec
loop
sbb
or
add
pop
push
inc
mov
std
pusha
into
mov
or
outsb
cmp
jnp
push
sbb
lock
mov
sub
ljmp
lret
sti
decl
das
sbb
add
ja
fcomip
push
jle
mov
mov
mov
mov
jbe
sub
shl
aaa
sbb
sbb
sbb
rcrb
int3
dec
int3
test
pop
xchg
test
pop
jnp
fs
and
inc
jns,pt
rcr
into
outsb
sarl
sbb
jne
and
jg
mov
mov
cld
add
lret
es
lds
xor
xorl
pop
sbb
xchg
or
add
adc
rcll
sbb
fldenv
sbb
mov
add
imul
icebp
mov
push
subb
shr
sbb
movsl
mov
sbbl
sub
add
add
ss
pop
xor
fdivp
in
mov
loop
pop
into
fsubl
cld
daa
pop
adc
push
jl
insb
pop
inc
loope
lret
or
fdivl
mov
cmp
neg
shlb
test
jno
jmp
cli
call
and
xchg
mov
xchg
cmp
and
mov
add
cmp
push
inc
rcll
es
fldcw
pop
out
sub
in
mov
scas
shrl
adc
or
lds
outsb
sarl
cmp
loop
int3
out
aam
fwait
pop
cld
stos
inc
sahf
xor
pop
ret
in
and
jmp
sti
sub
shll
test
in
test
aaa
mov
lcall
sbb
jp
cmpsl
mov
loop
hlt
in
repz
lret
insb
stos
xor
jno
fwait
xlat
jno
cmp
adc
testl
sub
cmp
pop
lods
scas
popw
mov
add
leave
out
xor
lods
outsl
lods
cmp
mov
or
inc
and
rorb
dec
popf
xor
mov
movsb
cwtl
je
inc
lea
mul
out
push
call
mov
add
mov
nop
push
or
add
cmp
js
jne
xchg
sbb
dec
pop
adc
jle
mov
enter
test
aad
cmp
pop
bound
push
jnp
and
xor
ret
mov
push
dec
in
mov
adcb
pop
add
add
popa
adc
inc
xor
sbbl
sbb
xor
mov
sub
push
push
xor
nop
inc
inc
vmovlpd
cmp
jp
icebp
pop
cli
andb
xchg
mov
andl
pop
int
add
sbb
je
xchg
rcrb
push
jg
lods
imul
mov
rcrb
pop
mov
fidivrs
push
dec
cmp
jg
ds
nop
mov
inc
xor
lea
or
movsl
rcrb
dec
rcrb
push
pusha
adcl
in
xchg
xor
jl
clc
pusha
loop
sbb
aaa
xchg
in
lea
push
test
sub
pop
ret
aad
and
and
fcmovu
leave
fildl
ss
bound
je
dec
repz
mov
sbb
int
sbb
jns
cmc
cmp
sub
push
push
mov
and
xor
xchg
sahf
mov
sub
lcall
or
enter
add
or
nop
mov
lret
cs
ret
xor
addr16
jae,pt
movl
mov
and
ret
lcall
adc
cmp
mov
divl
testl
xchg
xchg
sbb
dec
fimull
rcrl
lret
pushf
cs
sbb
mov
push
test
daa
enter
cmp
inc
fwait
enter
pop
sub
outsb
imul
inc
test
sbb
adc
aaa
xor
imul
lods
sub
bound
js
dec
mov
pop
fdiv
cmp
popa
add
xchg
call
sub
daa
fisubs
mov
das
repz
or
decl
xchg
adc
inc
es
pop
push
xor
rclb
stos
lcall
cmpsl
hlt
cmp
push
out
push
push
jp
scas
pop
mov
and
test
jl
out
punpcklbw
gs
sbb
lock
enter
jge
adc
and
or
jns
push
adc
push
adc
fdivp
fcmovu
mov
cmpsl
cmp
cmpsb
jl
loopne
pop
imul
pop
popa
sub
cmp
dec
pop
notb
loopne
std
or
jl
sub
sub
push
lahf
std
fildl
aam
insb
popa
aam
ds
adc
mov
aas
xlat
das
xchg
mov
cmpsb
xor
adcl
mov
scas
jns
pop
jo
aad
add
repz
sub
popa
cmpsl
sbb
jb
addb
gs
scas
sbb
mov
loopne
push
mov
push
push
repz
pop
xor
ja
xchg
adc
sbbl
ret
inc
insb
psubb
jg
push
sbb
test
mov
std
dec
pop
mov
adc
fwait
rcr
insb
jecxz
aam
add
into
pop
jl
pop
jno
cltd
xor
dec
in
xchg
stos
cmp
xorb
andl
mov
pop
movsb
sbb
cmp
aaa
out
ljmp
inc
push
aad
inc
inc
pop
das
inc
pop
nop
lods
mov
sub
mov
cmc
fildll
mov
jecxz
popa
pop
xchg
push
or
or
xchg
fnstcw
push
pop
cmp
repnz
sub
dec
loopne
xor
lahf
mov
shrw
inc
scas
aaa
pop
les
loopne
dec
outsl
jg
sti
push
fmuls
or
orb
xchg
adc
xchg
jno
stos
dec
jno
jmp
push
jecxz
add
out
test
sub
lea
push
sbb
btc
imul
ret
call
gs
and
enter
or
scas
clc
sub
daa
inc
pop
loop
fisttpl
cli
mov
out
js
adc
add
sub
mov
cld
adc
fcoml
dec
cs
pop
test
dec
ds
std
loopne
mov
push
or
cmp
jo
or
push
imul
mov
dec
jno
jmp
add
sbb
push
mov
mov
mov
sahf
mov
aaa
stc
mov
mov
addr16
mov
dec
fistpll
lret
sbbl
mov
pop
in
pop
fcompl
push
mov
add
cmp
jo
xor
movsbl
jecxz
push
xlat
xor
das
loope
mov
nop
jg
push
fst
mov
dec
stc
pop
jl
lea
inc
xchg
mov
out
ss
mov
lcall
inc
add
out
cli
fstpt
mov
stc
repz
aad
je
jecxz
stc
and
push
cmp
adc
fwait
pop
fdivl
pusha
out
sub
mov
fnstcw
movsb
jg
xchg
sbb
adc
popa
inc
out
jb
add
dec
inc
mov
call
xchg
mov
sti
test
xchg
outsb
filds
mov
je
or
stc
nop
jne
out
insb
dec
movsb
cmpsl
push
inc
addb
jmp
mov
inc
sbb
roll
ret
stos
fs
adc
jb
mov
ljmp
repnz
and
out
lret
mov
sbb
shl
cltd
leave
icebp
cmp
mov
inc
imul
cmp
add
lods
aam
jb
push
xchg
add
jge
orb
jae
loop
jge
cli
pop
jge
ljmp
pop
jg
jo
pop
mov
cltd
dec
add
arpl
aaa
fnsave
dec
mov
int3
repnz
xor
leave
mov
movb
mov
rolb
push
xchg
cmp
addl
mov
hlt
fwait
das
into
adc
ja
fsubs
aas
pushf
xchg
sub
out
mov
lods
lea
and
sbb
cmpsb
out
xchg
sbb
fidivs
adc
cmc
clc
ret
mov
jnp
add
roll
push
or
imul
cmp
dec
jo
add
in
sub
mov
scas
aas
adc
pushw
outsb
xchg
loop
lods
js
ja
ficoms
iret
xchg
push
xor
bound
mov
test
mov
inc
cld
sbb
dec
jp
and
sarl
ja
add
in
cmpsl
cmpsl
sub
test
cmp
ss
loop
jmp
pop
int3
add
fstl
xchg
test
cs
ret
sbb
jns
mov
cmp
enter
fcompl
add
out
jecxz
sbb
sub
aas
push
sbb
or
iret
xchg
stos
mov
in
in
or
push
inc
inc
add
push
cmc
shll
lret
adc
cmpsl
leave
iret
pusha
pop
andl
sbb
and
add
addr16
inc
movsl
pop
das
sbb
sub
imull
mov
adcl
lcall
call
jge
jnp
push
pop
jno
iret
sub
pop
stos
jns
sbb
test
inc
test
lea
push
scas
inc
in
inc
and
inc
mov
cmp
pop
add
leave
fisubl
xchg
shrl
jle
push
loope
call
scas
mov
insl
daa
jle
lock
nop
outsb
mov
or
mov
lcall
cli
aam
xchg
movsl
adc
mov
adc
sub
mov
cmp
fnstcw
ret
orpd
andb
mov
rcr
and
xchg
push
cmp
ljmp
pop
jle
adc
je
outsl
jb
push
ja
mov
push
mov
xorb
shrl
and
pop
xchg
pop
iret
movsb
pop
and
or
pop
or
sbb
and
lret
and
cmp
es
aad
aad
pop
sub
rclb
popf
adc
test
jae
js
call
add
out
adc
pop
push
pop
mov
jecxz
aad
and
nop
fistps
addb
add
push
arpl
inc
lcall
mov
out
aaa
jnp
hlt
popf
push
xor
inc
sbb
sub
popf
pop
and
and
jb
inc
sub
mov
nop
or
mov
cltd
test
inc
or
dec
lret
sbb
push
xchg
lock
jg
jno
pop
mov
push
xchg
sbb
mov
movsb
ss
test
add
mov
jge
std
adc
or
xor
mov
pop
adc
jle
rcll
xchg
mov
or
mov
sarl
inc
add
sbb
sbb
ret
sbb
jbe
add
xchg
sbb
xchg
cwtl
clc
int
ljmp
mov
dec
arpl
sub
jae
cli
mov
cmp
ret
dec
and
outsb
cmc
push
loopne
ljmp
push
dec
movsl
in
fstpt
psubusw
ss
jno
repnz
mov
and
dec
mov
xchg
jmp
fcmovu
rcrl
fidivrs
cmpsl
lds
pop
std
out
mov
in
clc
mov
adc
mov
push
sub
nop
iret
addr16
faddl
cmp
pusha
shlb
cmp
bound
xor
dec
ret
sbb
inc
mov
mov
add
bound
scas
fmuls
leave
aas
fldt
cmpsl
sub
shr
jle
lock
fnstsw
inc
cwtl
in
push
add
lock
mov
sahf
add
imul
mov
out
data16
jg
sbb
push
xchg
push
loope
jl
imul
cmp
push
addr16
ljmp
insl
sub
mov
mov
cmp
jb
ficompl
icebp
mov
les
inc
mov
icebp
in
ljmp
jle
cltd
cmp
shll
and
lea
cmpsb
lahf
mov
pop
lahf
inc
mov
mov
sti
cmp
cmp
adc
and
adc
cmpl
xorb
je
mov
mov
xchg
adc
fisubrl
inc
mov
pop
cmp
dec
nop
dec
or
pop
push
xor
ds
and
shl
or
aaa
shrb
add
dec
cmpsb
sbb
xor
jle
xor
out
lea
add
cld
insb
pop
cvtps2pd
lods
or
ja
dec
enter
mov
repnz
cmp
addr16
call
mov
out
mov
jne
cwtl
rcrb
inc
adc
dec
cmp
sub
mov
es
or
sub
sti
nop
sub
inc
and
insb
jbe
mov
mov
shll
cwtl
dec
xorb
js
push
insl
lret
cwtl
mov
imul
push
fisubrs
lds
fnsave
lods
lea
sbb
xor
sbb
stc
and
test
xorl
fisubrs
add
mov
scas
sti
aam
stos
call
jmp
push
adc
scas
mov
mov
add
xor
xor
adc
jl
leave
xlat
cmp
repz
arpl
pop
mov
jae
pop
sbb
cld
stos
jmp
ret
daa
into
push
push
shlb
inc
fs
inc
out
popf
push
jnp
cmpsl
insl
mov
clc
gs
cmp
inc
jle
test
aas
lods
jae
push
add
cltd
rorl
jge
sub
mov
out
sub
das
add
pop
mov
mov
sub
popa
sbb
mov
scas
rcll
test
mov
pop
or
adc
int
jo
jle
ljmp
data16
leave
xchg
ja
sbb
les
cwtl
out
mov
and
mov
push
add
stc
rcr
mov
pop
mov
fnsave
pop
mov
cmc
std
out
mov
push
jne
xchg
inc
aas
nop
sbbb
pop
testb
cli
add
mov
inc
inc
or
loop
push
movzwl
mov
test
aas
rcr
std
ljmp
push
cmp
loopne
or
push
mov
xchg
or
lods
sub
arpl
repnz
jnp
ss
rolb
cmpb
push
jg
adc
iret
orl
movsl
out
add
sub
sub
test
push
test
and
mov
test
in
pop
ror
jp
mov
int
pop
adc
orb
dec
out
mov
rclb
mov
enter
aam
test
fmull
xchg
xchg
inc
fisubl
bound
lcall
inc
mov
or
iret
push
sti
pop
mov
mov
mov
mov
pop
mov
lock
dec
or
xchg
aaa
mov
or
mov
negb
daa
pop
sbb
push
adc
pop
xchg
and
out
pop
out
and
push
mov
cli
inc
or
mov
loop
fsubrl
push
xor
mov
inc
or
xchg
ja
bound
or
mov
movsb
or
pop
outsl
and
lea
inc
cltd
pop
mov
xchg
adc
stc
or
enter
cltd
gs
ljmp
add
xchg
andb
loopne
in
dec
mov
add
xchg
clc
rcr
test
insl
sar
push
cmc
stos
sbb
mov
jmp
fwait
or
scas
aaa
orl
dec
fwait
lcall
in
inc
call
add
ljmp
scas
test
in
fcmove
mov
adc
pushf
addr16
cmpsb
js
push
sbb
lret
push
popf
int3
ljmp
fnstsw
pop
lock
aam
inc
stos
test
je
sub
mov
jne
gs
nop
gs
add
scas
push
jge
push
popa
mov
add
cmp
mov
inc
mov
pop
fdivr
and
sbb
out
jg
stos
lock
adc
les
dec
fcmovbe
push
xor
idivl
jecxz
sub
push
mov
ret
das
jae
xchg
lds
lret
sub
add
daa
divb
mov
inc
jmp
rcrl
sbb
das
cli
and
jae
dec
dec
scas
dec
jmp
in
ss
stos
cltd
xor
ret
outsl
sbbl
stos
fs
icebp
add
mov
cmpsl
mov
cmp
inc
out
cmpsl
gs
mov
and
mov
cmp
ficoms
and
or
cs
push
or
mov
ja
ds
test
pop
enter
jo
in
out
sub
insb
icebp
imul
sub
test
clc
mov
add
or
shll
push
sub
mov
lar
shlb
inc
mov
sub
xorl
jl
fildll
mov
adc
sbb
mov
adcb
sbb
mov
loopne
fdivrl
sarl
jp
jle
add
xlat
call
jecxz
sub
add
imul
cs
pop
cmp
or
pop
cli
cltd
movsb
mov
sbb
xchg
or
stos
dec
and
jo
or
cmp
inc
ss
sysret
shrl
scas
aam
lcall
andb
xor
inc
sbb
pusha
movsb
testl
loopne
test
cld
mov
jmp
or
mov
mov
pop
push
sbb
pop
into
fnstenv
cs
stc
xor
pop
pop
nop
jmp
popa
xor
mov
or
sub
dec
sbbb
ss
sahf
or
jg
shll
jo
subl
lcall
push
and
mov
insl
loope
insl
adc
mov
in
sbb
leave
pop
jecxz
adc
jno
scas
jno
rol
int
jl
fcompl
sub
add
adc
cmp
push
mov
inc
cld
pop
xchg
mov
xchg
loopne
push
mov
ret
mov
push
jo
out
xorb
dec
adc
jg
jo
mov
insl
cmpsb
sti
mov
jecxz
dec
mov
dec
lret
dec
gs
xor
in
jp
jg
jg
arpl
dec
jl
pop
lret
insb
aam
sub
mov
mov
clc
or
mov
rclb
out
dec
xor
shl
sbb
outsb
loop
lods
inc
idivl
divl
cld
or
cmp
inc
bound
loope
adc
lcall
mov
xchg
jge
adc
ficompl
lods
imul
cmp
mov
push
dec
lret
jbe
and
mov
sub
cli
les
dec
mov
bound
lds
fdivrl
shrw
sub
jp
mov
jns
mov
je
adc
or
push
cmpsb
cmpsb
add
fiaddl
addr16
movl
test
mov
jae
bound
das
cltd
loope
xchg
jae
icebp
inc
js
clc
or
lret
xor
inc
or
hlt
aam
xchg
test
movsl
push
icebp
mov
cmp
sbb
mov
lods
jnp
fxch
adc
add
or
nop
fnsave
js
movsb
mov
repz
cmp
and
addb
adc
lds
jl
mov
flds
inc
sub
lds
lock
fisubrs
jl
push
insb
inc
orb
shlb
movsb
adc
pop
dec
add
rclb
sub
test
or
and
inc
inc
push
mov
mov
mov
push
lea
inc
adc
jb
mov
mov
out
xchg
dec
fwait
imul
adc
jle
push
lret
mov
jge
mov
repnz
rcr
loop
or
leave
inc
scas
mov
cmpsl
mov
cwtl
push
jo
dec
xchg
xchg
pop
cli
nop
test
lcall
icebp
scas
lds
xchg
addr16
out
cmp
adc
jle
push
ret
push
scas
sub
imul
cmp
loopne
sti
push
cmp
pop
push
stos
xchg
ror
mov
cmp
out
dec
gs
sub
mov
and
pushf
inc
lahf
pop
mov
and
arpl
adc
les
inc
push
into
aam
adc
push
jecxz
subb
jne
and
lahf
push
jae
movsl
xlat
fiaddl
mov
stc
sub
xchg
sbb
pop
bound
and
test
push
cmp
mov
test
mov
push
outsb
lea
rcrl
pop
mov
or
xchg
lods
mov
mov
bound
out
jecxz
clc
insl
mov
mov
and
fcomps
mov
jl
ja
fildl
js
sub
sbb
shlb
mov
and
clc
out
jmp
stos
mov
jecxz
clc
rcrl
mov
pop
xchg
imul
sbb
test
ds
popf
mov
adc
push
bound
adc
mov
xchg
in
js
xor
pop
loop
push
add
jbe
push
xchg
in
mov
test
push
lcall
cmc
in
pop
dec
pop
mov
cltd
xchg
ret
sub
add
fisttps
pushf
ret
movsb
sub
test
loope
mov
jae
rcrl
dec
mov
and
inc
and
mov
insl
pop
xlat
push
lret
shlb
inc
mov
inc
rcll
and
adc
movb
lret
pushf
je
jno
test
mov
mov
imull
inc
dec
or
inc
into
out
xchg
sub
push
nop
inc
into
inc
ljmp
daa
enter
inc
cwtl
push
test
pop
test
adc
xor
pop
je
xchg
cmpsb
and
sbb
xchg
lods
sub
push
jns
mov
mov
cmc
jge
mov
sarb
cli
add
cmp
mov
arpl
stc
and
rcrb
lods
sbb
and
xor
dec
loope
xchg
aaa
or
lods
pop
mov
inc
or
addr16
cmpsb
xlat
xchg
and
xchg
arpl
aas
adc
cli
ffree
adcb
aas
mov
add
dec
dec
lds
cwtl
mov
xor
aaa
nop
daa
popf
mov
notb
sti
push
shl
in
leave
test
xor
enter
int3
scas
add
mov
es
pop
jae
jmp
leave
and
jle
sbb
jle
mov
sbb
adc
push
push
dec
add
rcr
stos
mov
call
push
movsl
or
cmp
rol
rorb
push
jle
cmp
pushf
andb
pop
test
fistpll
pop
out
xchg
ret
xor
mov
and
sub
sbb
mov
insl
push
xchg
fmul
movsb
add
jge
orl
fwait
inc
fiaddl
and
loop
xchg
cmp
sbb
mov
push
andb
rcrl
imulb
pop
push
shll
pop
dec
mov
jno
and
pop
cmp
sbb
cs
jbe
inc
sti
dec
and
and
jbe
shlb
dec
enter
xor
fnstcw
les
stos
gs
das
sbb
cmc
adc
in
fimull
dec
sub
add
outsb
cld
les
pop
sub
add
mov
cltd
fstl
xchg
cmc
imul
or
ficoms
add
sbb
and
dec
stos
push
mov
dec
cmp
das
adcl
or
jecxz
cltd
add
int
test
mov
lods
mov
insb
xchg
adc
adc
xorl
sarb
cld
sub
hlt
cltd
adc
and
pop
repz
lret
mov
inc
jle
push
xchg
jg
or
into
xor
mov
xchg
dec
out
dec
or
jae
or
arpl
shll
sub
stc
insl
push
or
scas
popf
pushf
mov
sbb
nop
dec
aaa
enter
dec
fildl
pop
add
inc
xorl
ret
cmpsb
and
jnp
xchg
cld
test
out
sub
stc
or
fimull
scas
xor
xchg
mov
xor
in
push
push
data16
jmp
mov
sub
out
jg
rcrl
mov
jg
aas
add
scas
int
cmp
icebp
test
xor
sarl
mov
fcoms
sub
das
inc
subb
mov
aam
and
je
push
popa
cmpsl
cmp
lods
lret
ljmp
jecxz
inc
cmpsl
pop
inc
stos
jne
lods
add
xor
push
jae
sti
mov
push
sbb
xchg
cmp
add
mov
pop
decl
and
stos
mov
jno
inc
dec
xor
fimull
dec
sbb
mov
mov
add
jns
rolb
and
xor
push
ljmp
daa
mov
aas
aaa
jmp
cmp
test
cmpsb
push
inc
frstor
insl
lcall
sub
xchg
mov
test
fistpll
jo
mov
push
ljmp
clc
xor
std
rcrb
lods
outsl
dec
xor
aam
fnstcw
lret
gs
sub
loope
js
cmp
cmc
data16
mov
xor
fwait
stos
or
jnp
std
ret
inc
xorb
loop
mov
mov
and
mov
enter
outsb
insb
fdivs
add
jmp
fdivrl
add
sarl
mov
dec
add
lock
andb
icebp
out
das
aas
mov
push
push
sahf
fsts
pop
pushf
fildl
sahf
test
repnz
sub
and
lock
push
jp
add
push
push
xor
dec
or
push
cmp
and
dec
add
lret
xchg
jg
add
mov
out
aam
outsl
pop
pop
lcall
mov
es
sbb
sub
xchg
mov
stos
jno
jne
push
sbb
psllq
cli
ror
mov
push
sub
popf
ljmp
push
mov
jne
movl
ret
movsl
or
mov
jo
mov
xchg
cmp
pop
out
ljmp
in
jne
inc
bound
pop
repnz
xchg
ljmp
xor
jmp
call
cmp
dec
shll
andl
das
test
cmp
sbb
cs
and
setno
adc
cmp
lret
pop
mov
lea
das
xor
popf
dec
flds
or
out
mov
hlt
mov
fs
push
dec
sub
xorb
stc
pop
scas
cmc
ja
jae
stos
mov
xchg
lods
pop
push
xor
inc
addl
js
lret
imull
mov
movsl
mov
fsubs
nop
adc
and
jl
sub
testl
sbb
test
push
ret
adc
inc
aaa
call
cmp
in
cmp
or
nop
add
or
mov
mov
xchg
cld
cmp
xchg
mov
scas
ljmp
mov
fs
sub
mov
in
or
mov
mov
mov
inc
lcall
cmp
xlat
xor
jle
mov
jg
push
inc
mov
leave
mov
lahf
call
popa
sub
in
gs
dec
fisubrl
repz
jne
clc
mov
add
inc
into
loop
mov
push
mov
inc
dec
jmp
mov
pop
adc
ds
pusha
cwtl
mov
lfs
out
movsb
stos
xor
cmp
inc
aas
les
test
in
icebp
xchg
mov
out
mov
xchg
xor
or
mov
jno
outsl
pop
movsb
xorl
pop
mov
xchg
pop
in
fimull
sbb
sbb
fisttpl
push
push
adc
fwait
adc
insl
fstpt
lea
insl
loope
in
outsb
adcb
loope
sbb
std
lahf
push
test
ljmp
popf
dec
mov
dec
pop
mov
fsubrl
fwait
imul
jp
insb
lods
fistpll
int3
test
sub
adc
adc
cmpsb
mov
mov
sub
cmp
push
xchg
mov
xor
aas
sbb
iret
dec
int3
pop
icebp
sbb
cli
or
mov
pop
mov
cwtl
add
mov
fstpl
xor
mov
pop
pop
inc
mov
repnz
and
pop
andb
lahf
repz
addr16
or
pop
and
mov
sarl
push
mov
out
xchg
mov
int3
pop
mov
mov
scas
mov
xchg
pop
fcomps
xchg
pop
push
imul
out
dec
movsl
daa
xor
inc
pop
and
aaa
es
adc
adc
push
push
push
into
xchg
popa
push
pop
cmp
scas
dec
xor
pop
pop
enter
int
in
es
and
test
push
loopne
fimull
sub
outsl
popf
inc
adc
mov
inc
cs
orb
add
jo
push
fnstenv
cmp
cmp
cmp
subl
cmpsb
jo
in
fnstsw
lret
push
test
xchg
push
loopne
orb
stc
and
repz
imul
push
or
insl
rcll
pushf
cmp
mov
ja
lock
push
cmp
jl
fnstenv
pusha
sbb
int3
inc
fcmovu
das
sub
pusha
xor
inc
in
stos
fwait
mov
xor
outsl
xchg
lcall
ret
cli
fiadds
movsl
or
ret
and
xchg
pop
mov
repnz
pop
push
fstps
lcall
outsb
bound
xchg
fwait
out
mov
popf
and
inc
pushf
icebp
shl
mov
inc
dec
lret
sub
cmp
ljmp
stc
out
enter
jae
jno
jmp
mov
push
rcll
lds
xorb
push
js
lods
movsb
mov
testl
xor
push
pop
xorl
fwait
arpl
and
in
jb
mov
mov
push
testb
add
jns
lcall
or
jl
jbe
mov
sbb
int
mov
mov
sbb
sbbb
cmp
xor
adc
pushf
sub
stc
mov
and
pop
mov
jb
clc
xor
inc
or
fcompl
jae
mov
mov
sbb
pop
lods
jp
push
mov
mov
lea
jmp
mov
pop
int
xchg
xchg
mov
and
xorl
cltd
and
xor
ja
add
push
xchg
add
in
std
adc
inc
bound
inc
adc
jl
push
cmp
ret
mov
mov
lret
ljmp
sti
das
xchg
das
adc
mov
movsb
add
inc
jmp
lret
push
orb
jmp
mov
les
out
cltd
into
das
sub
jne
jl
sbb
fbld
pop
mov
xlat
ljmp
inc
je
fisubl
jl
test
dec
inc
mov
movsl
adc
mov
sub
lds
stc
stc
add
es
push
or
add
ds
mov
xorb
cwtl
add
fisubrl
int3
push
add
cwtl
xchg
or
inc
mov
out
imul
xchg
sbb
and
dec
into
sub
repnz
sti
mov
sub
test
daa
fcompl
jge
adc
jecxz
clc
stc
lock
test
lods
mov
repz
jae
sbb
cwtl
jecxz
xor
pop
je
inc
or
dec
add
gs
lock
imul
dec
dec
add
mov
add
pop
cmp
clc
bound
addr16
addb
inc
out
or
sub
adc
add
fcoms
jmp
or
xchg
mov
or
or
das
dec
sub
aam
es
sahf
add
push
fimuls
daa
cld
xchg
imul
or
jb
mov
xchg
sub
xchg
mov
xchg
or
adc
into
dec
fbld
bound
test
mov
add
push
mov
fsts
out
xchg
repnz
test
enter
cltd
cmp
idivl
xchg
mov
mov
cmpsl
scas
insl
mov
fsubrs
sbb
and
mov
insb
fs
inc
adc
lods
xchg
cli
jmp
inc
jns
addl
idivl
jbe
in
mov
ljmp
add
fld
addr16
popf
jp
loop
arpl
fdivrp
stos
subl
out
cmp
and
pop
or
mov
fst
jo
push
data16
daa
out
data16
cmpsl
lret
in
mov
lock
jno
test
mov
les
mov
or
pop
ret
ret
in
insl
test
jne
pop
jae
call
cmpsl
push
jae
insl
sbb
fldl
cmpsb
loop
lret
xchg
hlt
jne
jae
lahf
jnp
iret
pop
fcompp
or
jbe
dec
or
mov
pop
pop
adc
or
pop
push
repz
sub
mov
cmpsl
and
rcrl
cmpsl
push
icebp
inc
cld
or
adc
cmp
push
push
push
adc
xchg
enter
mov
cmp
hlt
push
scas
mov
std
and
in
es
in
insl
fcompl
ss
xchg
lret
aaa
sub
pop
push
ds
and
test
sbbb
mov
sahf
fnstsw
dec
movsb
sub
arpl
xchg
xor
xchg
cmp
jae
rol
xchg
pop
insl
mov
jecxz
add
sub
int
jbe
push
ret
popf
push
add
rol
jp
cmp
pop
xlat
fiadds
jmp
sahf
les
pop
int
daa
in
jne
push
adc
sub
inc
jecxz
orb
add
loopne
icebp
add
lds
and
lods
sbb
imul
sar
cmp
test
mov
jae
movsb
shl
int3
or
dec
dec
insb
xchg
mov
cmp
and
push
jp
xor
outsl
xchg
sub
mov
ret
cmp
mov
xor
daa
sarl
in
adc
or
rorl
jge
and
mov
xchg
sub
push
push
xor
sub
insb
fldl
fidivrs
pop
aaa
int3
push
push
sbb
lock
out
inc
dec
jo
cmp
gs
and
fwait
sub
push
pushf
iret
mov
lret
xor
xor
and
leave
pop
dec
add
xchg
pop
jne
les
jp
loope
jg
mulb
in
mov
daa
pop
xchg
sbb
mov
xor
cmpsl
xchg
and
lahf
outsb
imul
xchg
cli
mov
add
pusha
and
dec
xorb
out
push
insl
sbb
xor
inc
pop
mov
ja
mov
jbe
adc
dec
pop
ret
xchg
cmp
ljmp
lret
lret
and
push
xor
ljmp
or
aam
jbe
ljmp
push
xchg
loope
xchg
sbb
lds
sub
and
es
nop
jae
paddsb
jmp
inc
into
fwait
inc
mov
adc
add
outsb
imul
jne
in
in
es
arpl
pop
inc
jo
adc
or
lock
outsb
test
out
sbb
and
jae
jbe
or
lret
jp
dec
inc
les
inc
leave
jo
ret
inc
mov
outsl
cmp
in
add
and
adc
dec
pop
add
xchg
stos
andb
jb
js
mov
inc
sbb
mov
aaa
mov
sub
lret
test
repnz
pop
xor
aam
add
ss
js
adc
adcb
cmp
xchg
cmp
sub
nop
rol
sbb
loope
xchg
cmp
pop
loope
and
rcrl
std
inc
jo
xlat
sti
lahf
shrl
push
pop
pop
mov
cmpsb
jl
jb
xlat
and
negl
cmp
cmpsb
xor
shlb
xor
es
stos
test
rclb
sbb
aas
ljmp
mov
mov
and
mov
cmp
scas
cld
repnz
xchg
movsl
fsubp
fsubrs
or
fs
and
addl
test
pop
jno
mov
xchg
dec
jl
mov
lea
jbe
cltd
xchg
jae
xchg
loop
loop
mov
lahf
mov
pop
pop
mov
iret
pop
outsb
stc
or
jb
leave
lcall
xchg
out
add
inc
repz
fbstp
xor
movsl
pushf
or
aam
out
pop
add
aas
cmp
fdivrs
inc
mov
sbb
loope
sbb
push
xchg
popa
loope
push
inc
clc
stc
mov
cmc
cs
rcrb
sbb
mov
adc
jns
into
add
add
jmp
idivl
pop
xor
scas
ffree
mov
jns
stc
imul
loopne
cmpsb
cli
dec
mov
loopne
xchg
leave
push
aas
icebp
shrl
mov
mov
inc
pop
cmpsl
lret
adc
pop
jnp
fldt
into
or
into
xor
jp
jmp
push
ret
dec
mov
in
sti
enter
mov
push
inc
and
repz
push
inc
jl
lds
sahf
mov
lcall
jg
into
pushl
ret
mov
es
cmp
js
inc
test
inc
int3
dec
dec
fs
sub
xchg
movsb
inc
mov
add
or
xor
push
in
les
xor
mov
jno
icebp
fcomi
lahf
mov
xor
mov
dec
out
push
cmp
lods
loopne
sarl
icebp
push
inc
popa
cmp
in
scas
xchg
rorb
sti
xchg
or
pop
add
pop
push
push
ja
dec
inc
lock
push
add
in
orl
sahf
cli
mov
lret
add
cmp
sub
mov
xchg
jmp
test
mov
pop
xchg
and
in
cli
mov
out
sub
or
jns
jae
addr16
jne
stc
and
out
mov
mov
sbb
cltd
xor
and
push
push
jge
dec
aad
std
iret
sub
inc
mov
or
inc
test
mov
dec
mov
shrl
in
dec
dec
and
sarl
push
pop
or
and
cmpsl
imul
fisubrs
or
das
mov
push
push
test
fisubl
xor
fdivp
inc
shrl
inc
shll
movsl
push
adcl
adc
mov
cmp
xchg
or
ljmp
dec
jg
jb
stos
jae
addr16
leave
stc
aam
call
push
or
jmp
popf
and
xlat
ror
test
and
scas
imul
xchg
ret
adc
mov
dec
js
in
out
into
ds
add
nop
mov
and
popa
mov
andb
int
xlat
outsl
push
in
iret
pusha
cmpsb
int3
outsb
outsb
inc
mov
shr
and
sub
mov
leave
inc
push
incb
aas
jle
maxps
stos
insb
test
sti
andl
mov
int3
jae
mov
or
pushf
cli
outsb
cmp
push
in
test
lds
pop
popa
lret
mov
fs
mov
pop
addr16
ja
pusha
rcrl
call
pop
sbb
pop
xor
fcomp
and
jge
dec
mov
inc
inc
orl
fsubr
ds
pop
aas
push
pushf
sub
add
push
adc
sbb
insb
jg
or
xchg
in
fadds
lds
and
dec
gs
dec
loop
stos
xchg
pop
push
aaa
dec
outsb
sarl
nop
fsubrl
popa
movsb
lar
jb
add
push
pop
test
fisubrs
ret
sbb
nop
aad
cmpsb
xor
fnsave
int3
inc
sbb
repnz
int3
sti
or
adc
out
push
fucom
push
hlt
jne
mov
jmp
or
cmp
cmpsl
iret
pop
fnsave
push
clc
sti
and
imul
outsl
cmp
out
mov
lock
pop
call
dec
pop
lds
or
jecxz
mov
out
fimull
mov
arpl
jecxz
inc
mov
xor
out
int
push
test
out
dec
jns
inc
dec
xchg
jo
cltd
mov
xor
or
lret
aas
sarb
loop
mov
jo
jge
fwait
lds
ror
pop
test
add
mov
aam
test
mov
loopne
js
mov
inc
xchg
push
cmpsl
inc
pop
bound
sar
jbe
jns
cmp
popf
mov
mov
movsl
orb
test
shlb
loope
lcall
cs
xchg
mov
cmp
addb
imul
lods
ret
xchg
cmpsl
jp
stos
jb
xor
into
in
xchg
popf
fistl
xchg
jb
mov
lret
jns
and
call
push
clc
push
sbb
pop
and
popf
ret
mov
in
dec
imul
int
outsb
int
push
out
or
sbb
add
or
push
fisttpl
shlb
pop
movsl
pop
js
sub
lcall
jnp
xchg
stos
xor
or
push
mov
dec
movsb
push
pop
mov
clc
sbb
push
test
mov
iret
add
addl
outsl
mov
fistl
stos
sub
xor
loop
dec
push
lods
rolb
in
stos
lods
dec
sub
inc
fimuls
add
dec
ss
xchg
shl
repz
std
mov
movsb
mov
and
add
scas
sti
xchg
inc
imul
add
inc
hlt
fcmovne
sbb
sbb
cmp
or
sub
lds
mov
push
and
popf
push
loope
or
cmp
mov
fidivrl
stos
les
add
cmp
fisttpl
arpl
fisttpl
push
push
adc
fisubrl
mov
sub
repnz
mov
sub
dec
decb
cmc
sbb
outsb
stos
repz
das
push
cmp
mov
imul
sbb
notl
cmp
out
out
movsb
ds
and
pop
arpl
pop
int3
push
mov
add
jl
add
adc
fadd
jl
mov
mov
pop
les
adc
mov
rcll
inc
daa
stos
fiadds
sti
stc
dec
sahf
or
cltd
or
mov
imul
or
aad
cmpsb
div
imul
sbb
int
sbbl
inc
lret
roll
mov
imul
mov
fnstenv
ds
cmp
in
xchg
daa
test
jg
sbb
mov
push
fwait
mov
incb
pop
and
push
fwait
add
inc
and
insb
or
in
or
shll
dec
push
dec
out
adc
cmp
lock
dec
fidivs
adc
push
sub
out
mov
in
jo
flds
push
and
jo
or
push
cld
jl
lret
dec
stos
mov
mov
xchg
mov
arpl
adc
lea
mov
mov
mov
out
mull
out
mov
callw
and
testl
cmp
sbb
int
xor
int3
inc
inc
jae
mov
popa
call
cmp
outsb
loop
int
jg
xchg
filds
sar
jne
loop
adc
test
divl
int
test
pushl
push
ret
outsb
or
sub
and
roll
mov
xor
jne
mov
outsb
pushf
shr
test
out
cltd
mov
ret
aad
scas
cmp
cmp
aaa
or
xchg
fisttpll
movsl
fsubrs
aaa
je
or
inc
push
loope
lods
rclb
mov
mov
in
push
jmp
and
repnz
jmp
pop
sahf
nop
push
xchg
sub
push
jg
adc
mov
inc
out
jg
or
movsl
push
inc
fwait
cmp
pop
jge
xlat
xlat
and
aad
cmp
ret
bound
push
pop
fcompl
and
shll
jo
jo
mov
pop
push
xchg
dec
aas
jp
lret
je
push
sub
test
ljmp
push
aam
test
sbb
insb
adc
subl
mov
dec
mov
mov
adc
test
enter
sbb
mov
cmpb
add
bound
pop
xor
push
imul
jno
dec
imull
dec
cmp
or
nop
dec
repnz
dec
out
test
pop
xor
lock
pop
enter
or
fwait
push
lods
sbb
pop
fcoml
adc
aad
fildll
fistps
sub
pop
inc
mov
dec
and
adc
mov
jmp
xchg
mov
push
mov
test
cmp
stc
out
gs
ror
inc
xchg
fs
mov
push
dec
and
jae
push
jne
cmp
sbb
out
sbb
loopne
mov
xchg
mov
pusha
xchg
push
pop
jns
cmp
pop
push
xor
push
inc
and
push
or
out
aaa
lret
lods
repnz
loopne
int
and
pop
adc
push
bound
fbstp
pop
test
out
ret
mov
loope
cmp
cwtl
xchg
repz
gs
js
in
in
in
mov
std
testl
push
mov
fdiv
push
insb
mov
push
cmpsl
push
dec
jno
lea
sub
sbb
fs
cmp
movsl
push
addr16
add
cmpsl
imul
jns
pop
sub
mov
mul
push
jno
out
xchg
and
int3
aam
lods
xor
lar
push
sbb
lcall
inc
add
idivl
mov
cld
mov
jae
jnp
mov
pop
divb
dec
hlt
aaa
enter
and
jb
and
in
fnstcw
mov
mov
mov
mov
and
fwait
mov
xchg
mov
aaa
imul
pop
push
fnstsw
sbb
inc
pop
stc
jae
jg
add
sahf
into
mov
mov
scas
cmpsb
fmull
xchg
cmp
add
push
pop
in
mov
jbe
lea
outsl
aad
cmpsl
sar
and
sti
pushf
and
sbb
test
fmul
outsb
in
sbb
in
int
arpl
jnp
test
jns
mov
jne
fcompl
clc
cmpsl
call
cmpsl
xchg
add
fcmovnbe
fistl
out
movsl
rolb
test
xor
jno
pop
sbb
filds
mov
mov
orb
adc
ja
push
out
ret
sarl
out
sub
out
fstl
or
fldcw
addr16
dec
call
mov
push
dec
jge
mov
fwait
pop
and
fs
inc
out
addb
popa
pusha
mov
xor
jo
fisubs
pop
sub
sbb
mov
push
adc
mov
cmp
jmp
aam
out
sahf
jmp
rorl
imul
mov
xorb
jne
jbe
fwait
pop
mov
or
sbb
sub
xchg
jno
xlat
lret
out
or
sub
adc
divb
ja
add
pop
mov
fcmovu
lock
pop
les
mov
ds
cltd
cltd
outsl
es
lods
mov
push
aas
sub
scas
nop
sub
xchg
loope
pop
pop
stos
xor
test
shl
mov
add
into
test
outsb
dec
cmp
mov
imul
fptan
fists
ficoml
jge
into
fldl
into
es
sbb
adc
or
sbb
xchg
ret
xor
sbb
mov
or
sub
rcl
push
dec
dec
mov
dec
fsts
rcl
adc
pop
jmp
mov
sbb
imul
dec
or
js
xor
mov
das
frstor
sarb
push
push
stc
into
cmpsb
push
cs
test
daa
push
fldenv
movsl
jbe
leave
fadds
cmpsb
lods
insl
cmp
jg
outsb
jmp
sbb
sub
shl
int3
leave
int3
mov
inc
ja
psubusb
scas
pop
fidivrl
dec
sbb
insb
mov
icebp
sub
ret
ss
add
out
adc
xchg
fdivs
adc
add
sub
xchg
add
inc
movsl
data16
xchg
sbb
scas
sbbl
rcrb
sbb
add
cltd
mov
out
adcb
sbb
arpl
and
sbb
xchg
and
daa
push
add
out
xchg
pop
mov
xor
and
popa
sbb
xorb
and
mov
sbb
ret
add
push
lods
mov
push
xchg
ljmp
cmp
test
mov
int
sahf
popa
jle
loope
pushf
fidivs
adc
jmp
mov
mov
jmp
movsl
and
leave
cmpsl
je
fdivrs
idivb
or
xor
fdivr
push
add
arpl
or
hlt
xchg
out
or
lahf
dec
and
cli
add
xor
cwtl
es
pop
adc
lea
fistpl
stc
scas
fxch
fmuls
xchg
scas
jnp
mov
mov
arpl
out
or
mulb
loope
sti
ret
pop
push
stos
mov
dec
ret
lahf
or
mov
in
gs
scas
icebp
jl
inc
and
dec
add
daa
test
and
lret
pminub
pop
cmp
adc
xchg
cmpsb
xorl
cmc
mov
iret
jecxz
mov
xchg
mov
sbb
and
mov
call
xchg
leave
test
xchg
rorb
lods
cmp
add
ret
cmp
or
jg
loop
movsb
xor
jb
or
ss
fs
sbb
and
inc
das
idivb
sbbb
inc
xor
fwait
mov
mov
or
push
in
mov
push
pushf
shl
cmpb
mov
pop
out
dec
aam
add
mov
lret
notb
mov
or
sub
test
xlat
dec
adc
push
icebp
lods
in
adc
cmp
push
mov
mov
mov
cmpsl
out
push
cmp
dec
stos
cmp
sub
jg
add
and
aas
mov
mov
fisttpll
mov
or
sub
lea
add
jmp
dec
inc
out
iret
adc
int3
aad
lds
cwtl
push
std
sub
dec
divb
stos
cmp
cmpsl
leave
adc
jno
pop
xchg
mov
xchg
subl
sub
lcall
icebp
call
stc
test
daa
lret
pop
push
sbbl
lock
nop
cmp
pop
xor
fidivrl
xchg
shll
dec
je
pop
aam
outsl
shll
mov
in
jns
sarl
mov
sub
or
adc
insl
inc
insl
out
clc
lods
jp
test
and
negb
imul
xor
push
cmp
and
mov
sub
mov
cld
pop
and
cmpsb
cld
mov
int
lds
pusha
sti
cli
rcrl
add
mov
pop
and
mov
cs
push
daa
imul
push
out
out
ds
mov
or
sub
js
jo
mov
mov
xor
mov
ja
pushf
call
out
popa
mov
outsl
sbb
xlat
pusha
mov
push
inc
int
add
sub
push
cmpsb
sbb
ret
xchg
mov
xor
sbb
popa
mov
inc
out
or
mov
xchg
lahf
push
or
or
js
sub
fildl
inc
lock
sub
cmpsb
xchg
pop
pop
repz
enter
cmp
ret
dec
pmulhuw
lcall
dec
sbb
sub
lret
jns
push
cli
push
mov
adc
and
jl
sub
and
stos
adc
inc
jo
sub
nop
dec
in
dec
movsl
xchg
xor
int3
inc
mov
adc
jae
sbb
jle
jbe
outsb
xor
mov
pop
push
mov
fsin
pop
subb
xchg
jae
push
fsubrl
dec
jg
shl
call
sbb
hlt
int3
std
fsubrp
jecxz
sti
mov
add
and
inc
add
pop
sbb
std
movb
mov
imul
xor
loope
jo
cmpsl
or
scas
xor
imul
and
pop
sub
inc
popf
inc
sbb
mov
aam
pop
subb
in
inc
mov
bnd
xor
in
mov
jg
stos
lcall
dec
xchg
sub
push
imul
adc
mov
test
in
lret
in
mov
out
or
das
mov
es
adc
pop
jbe
dec
pop
lock
imul
icebp
lahf
movsb
pop
arpl
cmpl
je
mov
repnz
je
fdivrs
xor
push
jnp
jne
lods
cmpsl
out
pop
ret
add
aad
sub
aad
and
xchg
mov
mov
mov
and
shrb
xchg
arpl
pop
aad
mov
movsl
push
dec
clc
add
imul
leave
insl
sahf
mov
in
fisubl
je
mov
sahf
add
push
xor
xchg
int
mov
pushf
fs
cmp
and
push
testb
sarb
xor
lcall
dec
add
call
icebp
int3
mov
ret
addr16
adc
ljmp
cmp
inc
pop
mov
sub
fs
push
add
repnz
mov
sub
inc
jne
add
dec
movb
ret
xchg
jmp
push
fsubl
sbb
andb
push
ljmp
dec
mov
xchg
pop
xchg
out
dec
push
call
cwtl
int3
jbe
inc
lea
jnp
rcrl
xchg
jae
into
mov
call
sbb
adc
rcrl
jbe
xchg
push
je
bound
xor
and
sub
aam
ror
imul
rolb
pop
jecxz
fwait
mov
sub
cmc
jno
fcoms
fadd
mov
fisttpl
adc
scas
gs
jl
inc
xor
icebp
jbe
sub
pop
pop
and
scas
fistps
mov
push
lea
lret
sub
inc
xchg
mov
je
sub
aam
add
adc
adc
roll
push
inc
addr16
fbld
fdivl
mov
jmp
into
rorl
push
pop
out
filds
ret
xchg
enter
scas
cmp
cmc
test
sub
mov
sbb
shr
push
adc
test
fmuls
sbb
and
mov
push
push
outsb
cs
xor
xor
scas
mov
imul
mov
hlt
add
int
inc
in
or
sub
mov
repz
iret
icebp
js
inc
lcall
scas
cmp
or
std
out
sub
mov
fidivrs
aas
inc
sub
iret
mov
xor
xchg
cmp
jl
mov
jl
jnp
adc
cmc
dec
sbb
test
adc
sub
jne
loope
iret
push
jbe
and
sub
pop
int
sbb
dec
sbb
mov
cmp
sbb
arpl
and
insl
push
sbbl
das
sub
sbb
lods
mov
fisubl
sbb
sub
xor
jno
outsb
nop
in
imul
mov
inc
cltd
xor
adc
daa
fstpl
pushl
mov
iret
in
sbb
cltd
notl
adc
les
fidivl
aas
leave
or
inc
jle
das
lahf
mov
mov
ret
xor
push
or
mov
fadd
imul
xor
popa
imul
repnz
stc
das
dec
pop
inc
lock
lcall
ja
mov
movsl
adc
mov
and
pop
std
and
dec
test
mov
orl
ljmp
rclb
xchg
xchg
js
xor
loopne
add
icebp
sub
nop
cmp
rcl
sbb
xchg
xchg
enter
adc
or
and
pop
or
inc
mov
or
je
cmpb
dec
xor
pusha
jns
pop
aam
mov
xor
sub
cld
pop
loopne
mov
aas
rep
fldenv
inc
mov
ds
pop
add
inc
pop
mov
dec
scas
jns
test
push
adc
or
dec
mov
and
push
cli
xchg
shll
cld
mov
inc
sti
cmpsb
sub
les
stc
push
into
mov
idivl
in
push
aad
jae
xchg
and
xchg
cld
push
fwait
mov
add
mov
shl
xor
ret
sahf
popf
mov
inc
xchg
adc
cmp
das
inc
cli
sbb
dec
sub
std
das
jno
xchg
jmp
insb
and
xchg
js
fmuls
inc
shlb
ficompl
pop
popa
sahf
mov
xchg
in
aad
lcall
daa
outsb
cltd
mov
insb
adc
adc
sub
aad
sub
inc
fstpl
es
je
inc
mov
jbe
mov
xchg
sub
cmp
pop
xchg
pop
add
shlb
inc
jp
push
daa
add
pop
rcrb
ss
cmc
fs
fsub
sub
or
jecxz
imul
fstl
dec
push
cmp
insb
jmp
or
jbe
dec
popa
fsubrl
fcomps
mov
dec
sbb
adc
mov
jecxz
iret
and
popf
add
dec
and
pop
mov
test
daa
inc
fistpll
xor
or
and
mov
imul
loop
mov
sti
mov
pop
inc
sahf
lods
jle
pop
push
loope
push
cld
aas
dec
mov
lods
mov
test
popa
and
inc
jle
nop
inc
shll
stos
pop
push
pop
clc
adcb
imul
cmpsl
lahf
xor
rclb
push
pop
jle
out
jbe
adc
mov
sub
in
xchg
xchg
shll
xabort
jnp
bound
jns
pop
pushf
cmp
sbb
insb
pop
pushf
das
mov
decl
inc
test
fbstp
loope
fwait
sbb
popf
popa
aaa
ja
adc
arpl
jae
mov
daa
insl
fcmove
call
push
add
add
xchg
rcll
mov
inc
ficompl
push
dec
dec
mov
test
dec
mov
sbb
xchg
hlt
push
inc
jbe
inc
or
or
mov
fdivl
scas
movsb
mov
dec
ret
xchg
out
loopne
add
out
aas
arpl
rorl
ljmp
inc
dec
fsubrl
dec
mov
data16
push
xchg
jae
mov
or
repnz
sbb
pop
imul
sub
lods
mov
jae
je
mov
jecxz
es
ss
pop
dec
rclb
cmp
sar
jmp
insb
inc
shll
pop
cs
jge
xchg
xchg
jo
mov
xor
fadds
pop
sbb
loop
add
je
jb
xorl
sbb
add
movsl
xor
ret
lret
mov
loope
fcompl
dec
aaa
push
adc
pop
icebp
xchg
pop
xchg
stos
lods
pop
jb
and
mov
test
add
test
std
inc
or
adc
mov
sar
stc
test
pop
rorb
int3
fwait
mov
popf
ja
and
jge
ret
mov
fidivl
into
aas
data16
aaa
je
cmp
ss
xor
mov
push
mov
lret
mov
cmpl
sti
push
pop
int
pop
mov
mov
pusha
cwtl
jb
mov
scas
add
stos
and
jbe
pushf
hlt
ret
out
cli
jmp
out
xchg
imul
cltd
sub
mov
pop
cmpl
rcll
fcomi
repnz
inc
pushl
add
mov
mov
xlat
cli
xchg
in
mov
imul
xor
lds
daa
cwtl
fidivs
lea
mov
xchg
rolb
scas
xor
add
inc
das
ss
xor
dec
loope
aam
pop
and
hlt
or
mov
cmp
test
sbb
jg
fldt
ja
vmwrite
cs
test
dec
jne
imul
add
jl
jo
neg
fdiv
xchg
add
lret
pop
lret
mov
sbb
mov
and
loopne
cmp
movsl
cmp
mov
pop
pop
ror
lock
sar
out
dec
fdivrl
mov
ret
mov
stos
xorb
popa
sub
call
int3
lea
xchg
xchg
hlt
mov
scas
mov
xor
pop
ret
shr
in
in
imul
sbb
out
popf
adc
jae
mov
lcall
test
cwtl
inc
int3
pop
inc
or
rorl
sbb
aaa
or
loop
movsl
movsb
push
sub
jns
addb
and
pop
mov
clc
imul
loopne
mov
mov
and
fiaddl
dec
mov
les
cmp
stos
mov
jp
pop
ljmp
lods
or
push
sbb
pop
enter
adc
mov
mov
test
adc
pop
mov
inc
jp
test
dec
lret
push
add
xchg
mov
inc
out
sub
nop
aam
pop
les
push
out
push
cmp
popa
dec
push
mov
sub
pop
push
daa
ret
cmp
fidivs
xlat
addr16
xchg
scas
xchg
cmpsb
cmp
inc
jo
lcall
shlb
popf
orb
aas
xchg
or
inc
popa
leave
push
pop
jg
and
mov
lahf
fst
xchg
push
push
xchg
xorb
ds
xchg
cmp
aaa
or
jb
sub
mov
inc
cmp
mov
or
jp
enter
add
dec
stos
pushf
out
pop
push
mov
jp
jns
pop
lea
push
cli
mov
mov
fwait
push
decb
subb
cmp
mov
aam
cld
in
jge
and
scas
cld
sub
push
mov
daa
les
and
pushf
mov
das
loope
xor
shl
jecxz
cmp
pop
mov
adc
push
pop
out
out
movsl
bound
mov
add
inc
cmc
and
loope
and
mov
ret
fstpt
and
xchg
push
lcall
sbb
jno
dec
outsl
leave
aaa
xchg
push
rorb
fs
aaa
dec
stos
daa
push
add
xlat
push
mov
icebp
pop
enter
nop
pop
lds
shr
or
push
push
mov
sbb
push
fcomi
dec
push
cmp
mov
xchg
in
or
stos
and
jb
jge
lods
repnz
popaw
dec
inc
xor
sub
lods
xor
push
das
mov
loope
pop
push
xor
cs
and
data16
xor
jge
xchg
mov
in
jg
sub
xchg
js
stos
lea
dec
sub
test
adc
jne
and
imul
call
cmp
int3
iret
dec
pop
mov
jae
xlat
mov
mov
adc
or
pop
gs
negb
lea
xlat
jbe
adc
and
enter
and
nop
pusha
out
push
add
test
dec
lds
xchg
or
nop
jg
add
cmp
aaa
or
imul
xor
cmp
adc
insb
mov
sub
mov
inc
xor
cmp
pop
lds
daa
dec
cli
scas
repz
jp
dec
xlat
mov
xchg
rolb
jp
and
add
les
jae
call
and
jnp
jge
push
xchg
add
xchg
aas
mov
cmp
jecxz
fcompl
outsb
cmpl
add
sbbl
sbb
jae
dec
push
push
or
pop
mov
push
inc
insl
inc
cmpl
xchg
shrb
jae
add
pop
cmp
repnz
pop
gs
popf
jp
sub
jns
fs
push
mov
pop
out
xor
fsubs
inc
mov
cli
jle
addr16
jecxz
lock
mov
add
push
out
cld
mov
scas
cs
hlt
lods
das
jne
fnstsw
lock
and
mov
fldenv
pusha
jb
mov
cmpl
movsb
shll
sub
mov
ljmp
popf
dec
jg
pop
lods
cmpsb
inc
adc
or
rorl
and
imul
imul
inc
jns
aad
punpckhbw
mov
add
and
xchg
mov
push
xchg
or
js
push
cmp
fildll
push
pushf
mov
xchg
fidivrs
add
pop
fbstp
in
outsb
mov
fwait
add
or
lret
dec
xlat
mov
repz
test
adc
mov
sbb
mov
push
sbb
jo
imul
mov
jne
sub
and
xchg
jns
inc
aam
mov
mov
sub
push
es
fcoml
xchg
mov
sti
out
sub
xchg
mov
cmpl
fwait
sbb
inc
inc
cmp
sub
ss
fsubl
fidivrl
les
xchg
std
dec
push
shlb
test
rcr
loop
mov
in
push
mov
das
xchg
add
out
cmp
mov
lods
mov
push
push
scas
inc
mov
sar
jo
clc
push
pop
jns
int
cmp
pop
jb
sahf
mov
in
dec
fimull
std
loop
lds
mov
insl
repnz
lods
mov
xor
and
xchg
jg
adc
dec
adc
jle
xlat
leave
aaa
jbe
in
dec
add
imulb
adc
inc
das
imul
and
inc
cmpsl
or
or
daa
and
fisttpll
shl
add
pop
or
arpl
leave
push
adc
lds
cmovp
notl
js
loopne
xor
adc
xchg
xchg
movsb
pop
sti
mov
addl
xor
or
pop
sub
dec
xorb
and
sbb
dec
es
sub
sub
inc
jnp
push
aas
push
cmpsb
mov
mov
in
add
imul
xchg
outsb
in
fidivs
sbb
adc
arpl
mov
loop
or
clc
cmpl
out
sub
iret
dec
int3
mov
dec
and
repz
in
jb
sbb
inc
sub
sbb
ret
inc
sbb
adc
cmp
sbb
rolb
ss
inc
mov
jnp
sti
mov
xor
or
jge
xchg
cld
repz
int3
sub
je
xchg
sub
nop
pop
out
stos
mov
pop
adc
imul
repz
add
popa
mov
xchg
dec
inc
dec
xor
loop
iret
jne
mov
icebp
out
loop
add
mov
popf
inc
int
insl
inc
cmp
sti
scas
cmpsl
je
lock
add
out
pop
mov
sahf
repnz
ljmp
enter
and
shlb
jae
mov
cmp
cmp
sbb
adc
sbb
cmpb
mov
add
stos
lock
mov
insl
cld
scas
in
lock
pop
pop
adc
pause
xor
pop
cs
in
xchg
movsb
cli
xchg
mov
rcl
add
cmp
nop
xorb
stos
cmpsl
fdivrl
in
clc
les
arpl
inc
xchg
jb
ret
scas
fcompl
pop
fdivrs
movsb
adc
rcl
add
cmp
lcall
test
xchg
pop
fs
mov
mov
xorl
aaa
fistpl
sbb
mov
push
and
mov
in
inc
cmc
cld
or
call
mov
pop
add
in
jle
cs
inc
cmpsl
cmp
in
cltd
lea
call
mov
out
lcall
js
dec
jnp
ret
jae
cs
adc
std
add
cmp
mov
icebp
push
lea
cmpsl
mov
aaa
lea
popf
subb
inc
out
fwait
mov
lods
xor
mov
lahf
in
mov
jp
add
rcl
fwait
push
and
fnstcw
andl
dec
xchg
dec
xchg
push
pop
cmp
xchg
fisttpl
cli
or
popl
jbe
scas
leave
mov
inc
xor
mov
cmc
xchg
jg
push
js
data16
and
stc
in
mov
fldln2
push
mov
jle
cmc
popa
lahf
sbb
cld
lds
mov
or
add
lea
inc
mov
dec
ss
dec
xor
lea
and
arpl
ret
stos
rcr
repnz
arpl
push
jmp
pop
inc
paddb
aaa
aas
or
popf
jae
mov
sbb
jle
or
outsl
cltd
pop
out
push
dec
call
nop
or
xor
mov
xor
mov
rcrb
adcb
ret
lahf
clc
cs
in
shr
dec
mov
inc
out
xchg
push
aas
aaa
rcrb
popa
fisubrl
dec
xor
nop
mov
incb
or
xor
insl
mov
out
pop
push
mulb
dec
in
in
and
ljmp
stos
and
mov
mov
call
jmp
jo
dec
hlt
adc
addr16
fsubs
sahf
fcomp
out
fdivr
mov
push
movsb
mov
push
and
mov
xchg
pop
idiv
je
imul
cmp
std
rcrb
cmp
ds
mov
mov
jae
int
mov
cmpsb
and
mov
sub
xchg
and
in
gs
test
lcall
lret
push
or
leave
mov
std
cmp
in
pop
rcl
inc
sbb
popa
mov
adc
push
and
mov
data16
cmovge
out
cmc
movsb
sbb
dec
out
test
sbb
sarl
mov
add
push
sarl
adc
shlb
pop
pop
lret
push
cmp
cmc
hlt
or
in
scas
adc
fs
mov
cmpsb
jp
sbb
mov
mov
stos
fnstcw
push
lcall
mov
pop
jle
dec
arpl
xor
inc
fnstenv
sbb
pop
push
jbe
xchg
push
stc
mov
push
fcmove
mov
outsb
popa
loope,pn
mov
cld
aaa
test
ret
ficompl
cmpsb
jb
adc
jl
xor
bound
push
imull
decb
dec
jge
in
cmp
and
mov
in
xchg
andb
fwait
push
and
in
push
or
inc
cmpsb
push
add
insl
call
or
mov
cli
push
cs
push
test
xor
dec
test
jp
stos
mov
jg
into
jne
test
dec
mov
sub
dec
xor
js
push
mov
cmp
pop
or
repnz
pop
xor
loope
dec
pop
es
ds
and
fwait
sti
jns
pop
int
fisttpll
aad
cmpsb
inc
jmp
andb
testl
cmpl
and
lret
mov
mov
fwait
aam
mov
lea
mov
push
or
pop
sub
ds
pop
arpl
pusha
pushf
mov
je
fdivrs
and
leave
xchg
xchg
cmpsb
sub
call
push
std
subl
jnp
cmp
testl
mov
add
mov
mov
push
aad
dec
repnz
and
cmp
sbb
dec
cld
js
inc
mov
cmp
fadd
and
cwtl
pop
mov
mov
pop
lock
xor
push
cld
adc
stc
cli
mov
inc
add
scas
mov
std
ljmp
mov
cmp
jl
andl
repnz
mov
inc
adc
pop
into
mov
inc
inc
sub
or
dec
mov
out
lock
sbb
pop
outsb
xlat
mov
andl
fmuls
dec
hlt
xchg
pop
rcll
iret
lds
mov
jb
jmp
sbb
add
mov
cmp
push
xor
stc
repz
jb
jno
or
loopne
pop
cs
push
mov
push
dec
pop
das
aas
pop
adc
and
xchg
scas
sub
mov
push
jmp
lret
cs
adc
pop
int
xor
adc
xor
add
inc
dec
push
pop
daa
int3
in
jae
shl
mov
jp
push
insl
and
jae
jae
aad
test
sbb
inc
shlb
jge
pop
int3
jae
push
inc
in
fcoml
jns
mov
jns
popl
loope
pop
std
dec
sub
ret
add
xchg
test
mov
mov
cmp
iret
adc
and
jmp
out
and
mov
add
repnz
mov
and
inc
lods
bound
das
loop
cld
mov
mov
mov
xor
jns
fs
jne
sub
dec
jnp
push
mov
mov
dec
popf
dec
sahf
rcrl
jns
cmp
pop
pop
or
cmpsb
in
push
stos
stos
mov
int
rcr
jge
fcoms
dec
inc
fimull
fsubl
mov
cmpsl
daa
aaa
lock
or
inc
dec
or
andb
enter
inc
add
xchg
push
pop
stos
test
addl
or
sarb
jl
sub
testb
adc
xor
mov
andb
movsl
jg
icebp
ret
stos
fwait
sub
push
out
or
jmp
daa
xlat
push
imul
or
inc
add
add
call
pop
dec
lock
notl
adc
sbbb
push
aas
data16
rorb
sub
adcl
jnp
and
xchg
shlb
sub
stc
lcall
sub
data16
pop
ret
shll
mov
pop
dec
xchg
sbbb
dec
xor
jb
movsb
cmp
xor
xor
cmp
mov
mov
inc
icebp
inc
xchg
loopne
arpl
adc
cmp
outsl
mov
es
mov
stos
loop
add
fldl
cvtdq2ps
jge
mov
or
mov
mov
xchg
mov
cmp
mov
push
xor
ljmp
add
cs
data16
mov
stos
flds
inc
sbb
and
ret
sbb
push
push
call
mov
loop
sti
xchg
add
and
enter
loop
jmp
sbb
mov
mov
add
out
cwtl
sbb
in
and
lods
and
call
and
les
loope
pop
jmp
ljmp
xor
sahf
cs
add
cmc
aas
jbe
into
dec
hlt
adc
xor
pop
or
int3
popa
pop
and
outsl
shll
sbb
data16
pop
mov
adc
jo
inc
mov
xchg
inc
fwait
push
push
sub
mov
xlat
jo
mov
xor
xor
sbb
pop
or
cwtl
jmp
loope
sti
push
or
das
push
jl
inc
popa
imul
push
bound
mov
hlt
pop
mov
repz
lds
push
cld
xchg
cmp
mov
sar
dec
cmp
daa
scas
enter
ret
mov
filds
or
es
add
out
mov
xor
cmp
xchg
aas
or
mov
cwtl
in
nop
dec
inc
jb
sub
push
inc
daa
das
pop
xor
sub
ds
or
fdivl
movsl
jmp
dec
out
xor
sub
leave
xorl
mul
inc
cmc
dec
pop
add
mov
out
lock
dec
stc
pusha
jl
scas
andb
inc
mov
sub
rcr
sub
and
les
xchg
jecxz
xchg
xchg
push
pop
xor
push
jl
inc
jp
call
push
in
hlt
lahf
sub
add
jle
adcl
imul
pop
loopne
pop
sub
les
mov
adc
jecxz
sar
pop
shrl
sbb
aaa
pop
leave
mov
int
jle
in
lahf
xchg
inc
cmp
stos
xlat
mov
and
lret
or
cmp
xchg
mov
xchg
fldt
pop
adc
pop
and
inc
xor
shll
sub
and
stos
sbb
cmpsb
lock
jns
incb
jne
outsb
sbb
jne
push
push
mov
xchg
out
repz
shrl
adc
mov
mov
jo
add
cmp
arpl
sbb
lea
sahf
rorb
mov
pop
pop
mov
sub
mov
inc
dec
cld
push
ficompl
pop
jmp
mov
mov
idivb
fwait
addr16
lret
lds
adc
fstp
push
cmpsl
sti
xchg
mov
clc
add
fcmovnb
andb
pop
sbb
cmp
xor
and
outsl
clc
ljmp
jecxz
push
xchg
pop
cwtl
lret
cmp
addr16
push
outsb
adc
cli
dec
testl
pushf
int3
mov
or
call
jg
sbb
mov
out
pop
icebp
xchg
sahf
lds
jne
ret
testb
jmp
aad
or
jo
aad
mov
imul
push
mov
or
popl
pop
scas
stos
push
sub
sbb
adc
fdivs
inc
fs
std
pop
push
cmc
pop
push
cmp
pop
mov
fidivrl
xlat
and
pop
sar
hlt
out
jmp
jae
adc
xor
push
sar
ret
cmpsl
mov
adc
popa
fstl
pushf
and
dec
push
mov
cmp
mov
into
xor
repnz
push
fisttps
mov
sbb
adc
inc
push
cmpsl
jge
mov
outsb
jae
popa
or
add
dec
jecxz
adc
mov
add
or
test
inc
mov
xor
add
fwait
mov
cmp
movsl
shl
push
add
mov
aaa
daa
pop
cwtl
cs
lods
fldl
or
mov
out
subb
inc
test
cli
adcl
sub
xchg
sbb
cmp
cmp
es
and
or
and
jl
jp
pop
enter
mov
enter
int3
cmp
and
push
cld
stos
mov
stos
push
sub
rclb
or
pop
dec
popa
out
jge
mov
shrl
mov
gs
sbb
mov
fistpl
xchg
sbb
jbe
shrb
xchg
mov
add
in
scas
notl
andnps
arpl
add
push
xchg
cmp
mov
emms
or
lcall
loopne
and
xor
mov
into
dec
push
shll
mov
lahf
subb
sysenter
jge
in
in
jo
js
lcall
ljmp
cmpsl
lds
paddb
test
shll
popf
adc
and
rcrb
cmpsl
inc
enter
xchg
gs
repz
inc
jne
adc
sbb
fisubrs
cmp
xchg
pop
sbb
add
test
mov
cwtl
rorb
lds
ds
cli
mul
and
jo
mov
mul
push
lods
and
std
and
fs
in
ret
ljmp
ret
and
in
jecxz
mov
pop
inc
daa
xchg
out
adc
xor
lods
or
cltd
inc
jo
jnp
or
xchg
dec
fcomip
fisubrs
xor
jl
insl
je
adc
cmp
or
xchg
adc
xor
push
push
lret
mov
jns
and
mov
nop
add
aam
iret
insb
mov
or
push
cmp
pop
call
pop
out
lea
push
or
sbb
or
outsl
or
cmpsb
scas
das
rcrl
mov
dec
lea
mov
movl
sub
mov
hlt
xchg
push
jecxz
popa
lret
fyl2xp1
cmpl
loop
jmp
lods
pop
xchg
xor
mov
data16
in
push
xchg
sbb
clc
jne
mov
xchg
pop
das
sti
xchg
lds
rclb
test
inc
stos
cmp
inc
inc
stos
adc
dec
jae
inc
lahf
mov
mov
shlb
sub
jg
adcl
fwait
mov
dec
mov
inc
enter
popf
sbbb
add
push
addl
and
add
cmpsb
pop
pop
sbb
mov
stos
lcall
sbb
or
mov
into
mov
xor
into
aas
imul
adc
sub
sbb
dec
sbb
inc
or
or
pop
leave
mov
subb
inc
leave
stos
xchg
lods
das
es
in
sbb
and
jo
sbb
pop
dec
mov
imul
pop
xlat
pop
pop
xor
adc
scas
int3
jmp
icebp
mov
clc
pop
xor
fs
rcrb
sub
mov
pop
imul
std
imul
hlt
mov
mov
lahf
iret
xchg
inc
ljmp
inc
dec
fwait
mov
xor
dec
jbe,pt
leave
call
rcr
test
sbb
lret
xor
movsl
mov
dec
stos
lods
lcall
pop
push
inc
clc
shrb
test
and
fildl
add
add
and
cli
lret
das
jnp
test
ds
daa
jg
ja
jmp
dec
popf
loopne
xchg
pushf
push
push
push
sub
mov
xchg
and
push
imul
out
push
adc
adc
inc
cmp
inc
or
test
cmp
jg
in
mov
lds
xor
mov
sahf
sar
lahf
cmpsb
jns
pusha
pop
mov
xor
ja
xchg
in
negb
mov
in
lret
jge,pn
pop
adc
sub
adc
inc
xlat
cmp
pop
push
jns
jnp
loope
fstl
push
mov
dec
dec
int
dec
and
xchg
jp
lock
dec
mov
adc
cmp
scas
xor
add
cs
mov
or
adc
movsb
push
sahf
adc
nop
mov
std
scas
jb
int3
cltd
push
jmp
mov
dec
fwait
jae
sub
imul
adc
adc
mov
rclb
push
mov
and
mov
mov
xchg
cmp
insl
push
cmp
clc
sti
inc
and
push
insb
jns
test
loope
pop
testb
sbb
or
out
inc
idiv
lcall
mov
iret
mov
xchg
mov
sbb
dec
test
out
lock
les
add
mov
adc
divb
test
stos
xchg
popf
mov
push
jle
in
jg
push
cmpl
jne
loop
sbb
cld
push
lods
loope
add
lcall
test
dec
sub
sar
data16
lahf
sarb
jp
out
rorb
lahf
xor
shlb
cltd
mov
sub
pusha
dec
pop
push
add
loope
lret
daa
xor
push
xchg
rorb
subl
gs
sbb
iret
push
fldcw
jne
mov
push
mov
nop
inc
or
insb
dec
and
pop
movsbl
test
xor
aaa
push
jge
in
jbe
sub
inc
adc
add
mov
popf
bound
daa
in
bound
or
inc
mov
xor
inc
pop
mov
inc
inc
in
pop
into
pusha
add
cs
aam
mov
pop
das
idivb
xchg
stc
jbe
dec
sub
mov
sbb
jbe
lcall
movsl
push
push
push
insb
sbb
sbb
into
inc
mov
xchg
sbb
push
cmp
lock
lods
ja
push
frstor
rcll
mov
ljmp
xchg
sub
mov
fcomi
roll
in
dec
sub
cmp
out
pop
lcall
adc
outsl
sub
and
ja
xchg
mov
pop
mov
test
es
std
adc
push
cmpsb
dec
xchg
fidivs
pop
insb
js
insl
jo
std
jns
xchg
les
stos
imul
mov
aam
lret
pushaw
mov
out
test
jp
lock
jb
les
xchg
cs
pushf
xchg
mov
div
lods
stc
mov
mov
sub
aam
sub
jg
adc
mov
shll
rclb
test
lret
in
subl
jne
lods
repz
notl
popf
mov
and
push
push
or
and
daa
test
cmc
insb
pop
mov
xor
lds
shlb
dec
imul
int3
and
mov
dec
lcall
repz
lcall
mov
stc
addb
rorb
les
stc
pop
shll
outsl
outsl
in
fcmovnu
bound
mov
cmp
das
loope
nop
pop
xlat
xor
test
fdivrs
cmp
inc
fidivrl
jnp
or
arpl
popa
xchg
je
push
mov
pop
adc
testb
sahf
xor
add
adc
pop
xor
fidivs
pop
lods
int3
xchg
fucomp
push
jp
sti
jnp
or
xor
gs
adc
add
mov
insb
test
push
xor
and
das
mov
pop
mov
cmp
or
out
mov
adc
pop
adc
dec
test
push
les
shrb
add
lock
int3
cmp
jbe
add
rcrl
fidivrl
push
gs
insb
adc
loop
movsl
and
fmuls
and
pop
xchg
xor
sub
add
jp
int3
clc
push
and
push
into
mov
aad
jmp
add
sub
mov
mulb
pop
push
stos
lahf
js
cmp
xorl
rol
adc
jp
jne
pop
inc
jl
imul
push
test
dec
int
push
inc
xor
mov
xlat
sbbb
into
xor
mov
mov
imul
or
inc
xchg
hlt
ret
or
mov
push
outsb
add
les
cltd
iret
cs
sar
jge
std
sub
adc
aaa
sbb
fdivrp
sbb
bound
das
int3
mov
das
cmpsb
test
xor
mov
mov
mov
inc
pop
push
mov
popf
aas
aam
inc
arpl
push
out
in
clc
and
push
fwait
jo
and
mov
mov
imul
loop
inc
add
inc
mov
gs
cmp
mov
loope
jg
xchg
xchg
push
adc
fsubl
xor
mov
cmpb
aad
sbb
push
arpl
jno,pn
push
or
cld
dec
xlat
out
int3
fwait
cmp
fisubs
aam
inc
out
mov
popa
adc
xchg
out
mov
mov
adc
fsubrs
cmc
fdivrl
ret
sahf
mov
icebp
fmul
sbb
pop
dec
mov
push
rorb
or
insl
add
popa
popf
stc
idivl
fcompl
xchg
jb
mov
xchg
loope
cmpsl
sub
dec
loop
sub
push
or
xchg
pushf
pop
sbb
mov
adc
dec
in
xor
cmpsb
imul
add
push
repnz
sbb
imul
or
mov
das
aam
xchg
rorl
push
mov
inc
popa
sbb
cmpsb
fwait
jg
loop
or
xor
dec
xor
sub
cmp
dec
dec
push
adc
pop
les
xchg
cmp
jg
mov
mov
jbe
push
push
das
pop
fmul
aas
inc
rcll
adc
test
mov
imul
push
aas
cs
cmc
dec
push
push
xor
mov
mov
jno
xchg
cmp
cmp
loope
in
xor
xchg
nop
xchg
and
cmp
add
add
lret
sahf
mov
xchg
xchg
testl
loop
stc
std
pop
push
mov
pop
sbb
ljmp
add
cwtl
push
pop
in
sub
mov
stc
and
add
outsb
ret
mov
fnstsw
dec
dec
scas
fidivrl
jnp
pop
mov
sub
cmpsl
lret
int
mov
lahf
xchg
addr16
add
jne
sbb
inc
jl
and
cmp
pop
ljmp
sti
pop
mov
imul
andl
mov
add
mov
mov
je
insl
sahf
js
inc
stos
rclb
mov
mov
push
test
mov
jo
ret
push
sub
arpl
mov
mov
repz
mov
shlb
xchg
mov
pop
or
push
or
sti
movsb
and
adc
mov
xlat
jne
fnstenv
mov
popa
inc
xlat
mov
inc
mov
xchg
lret
aaa
cmp
cmp
adc
loopne
xchg
sbb
popf
fimuls
and
xchg
sbbl
stc
sub
xor
mov
jl
shl
test
or
sbb
leave
xchg
adc
and
push
mov
cwtl
mov
test
shlb
insl
cmp
mov
push
popf
fwait
shl
push
jmp
sahf
fmuls
push
jo
jb
dec
loopne
mov
jg
pop
dec
jmp
mov
scas
ds
push
jp
xor
xchg
popf
mov
out
stos
lods
push
js
jae
and
outsl
add
inc
imul
dec
call
gs
imul
scas
shlb
cmpsl
push
or
jg
repnz
jnp
jl
enter
pop
push
insb
adc
leave
dec
fdivr
jno
add
mov
cwtl
lds
mov
jbe
jp
push
out
or
pusha
sti
mov
ret
test
adc
push
sub
cmp
lret
jno
je
ret
leave
sbb
sti
ret
movsb
xchg
push
push
inc
jp
xchg
inc
into
push
int
roll
sub
dec
out
call
jno
mov
mov
and
xchg
imul
push
sbb
ss
sti
or
lock
xor
roll
sahf
mov
mov
adc
add
lcall
stos
je
inc
xor
sbb
sub
jmp
xchg
imul
aam
lret
jmp
pusha
das
iret
testb
dec
xor
sub
jg
mov
mov
xchg
jp
mov
or
add
arpl
inc
mov
call
idivl
enter
cmp
daa
popa
out
and
mov
ret
xchg
lret
cwtl
rol
cmp
mov
push
jmp
insl
mov
imull
push
pop
dec
movb
sbb
mov
jl
cs
fistps
push
movl
sub
and
fs
lods
adcb
mov
test
cld
aaa
cmc
int
mov
idivb
pusha
and
stos
ss
adc
cmp
pop
mov
sub
shll
fcmovnbe
sti
sub
jecxz
pop
mov
or
mov
and
aam
mov
sub
lret
shrb
jge
dec
xchg
mov
sub
or
mov
stos
iret
ljmp
movsb
pop
xor
xlat
imulb
sub
cmove
xlat
orl
xorb
xor
sub
xor
cmp
xchg
jbe
sub
sets
rol
lock
add
cmc
addl
jl
jge
leave
jae
ret
inc
and
mov
repnz
inc
test
sub
outsl
in
mov
int3
cltd
adc
shrb
rorb
mov
jno
sbb
push
or
push
mov
and
xchg
push
mov
mov
fmull
cwtl
jae
hlt
push
cmp
out
mov
mov
ret
aad
aam
push
adc
repz
testl
inc
rcr
mov
ret
repnz
ja
push
sub
loop
imul
add
mov
and
jnp
loop
dec
xlat
in
pushf
stos
subl
push
mov
arpl
cmp
jle
das
jbe
jae
movsb
add
stos
out
pop
pop
pop
xor
popa
pop
inc
ja
sub
jno
lcall
xchg
xlat
pop
daa
pop
scas
mov
pop
fidivrl
fs
sbb
mov
pop
pop
or
sbb
jg
mov
push
sbb
into
xchg
pop
mov
push
aam
popf
sbb
es
pextrw
mov
sti
push
loope
xchg
je
dec
cmp
xor
repz
movsl
pop
test
lahf
xor
nop
enter
ret
dec
jmp
adc
pop
cli
xchg
subl
clc
adc
add
mov
iret
cltd
addr16
mov
sub
hlt
into
add
movl
dec
jns
pop
mov
jle
fsubl
aam
xchg
cmp
es
outsl
mov
cs
push
pushf
xor
lods
dec
loop
pop
cmp
outsl
lods
mov
aas
out
add
mov
movsb
repz
out
lock
bound
jl
dec
enter
ja
xchg
popf
push
add
mov
sbb
pusha
mov
stc
jo
pop
nop
out
mov
addb
insl
pop
movsb
push
lahf
pop
mov
cmc
cmp
outsb
inc
xchg
jns
or
sub
mov
inc
jae
out
stos
lds
xor
lahf
lds
pop
sbb
sbbb
rcrl
sbb
sub
pop
les
cli
jl
xchg
dec
fwait
jns
stc
mov
js
fisttpll
jmp
pop
fistpl
rcr
or
jl
sbb
pop
add
aaa
push
jno
jne
test
in
lret
fsts
fdivs
fstpl
dec
scas
push
pop
insb
push
mov
into
jmp
insl
add
adc
and
mov
sub
hlt
push
cltd
shll
fs
test
stc
jo
or
jns
or
scas
fcoms
xlat
ficoml
and
shll
mov
xchg
jno,pt
inc
leave
rolb
jmp
into
mov
ds
jae
ret
es
and
ficoml
pop
test
pop
in
mov
and
es
pop
xor
movsl
push
mov
or
sbb
mov
adc
lahf
call
xchg
outsb
out
das
or
ds
lods
sbb
dec
jns
subb
clc
pushf
sbb
mov
sahf
pop
and
mov
jno
subl
adc
cltd
rcrb
mov
faddl
ljmp
cmp
fwait
jns
repnz
daa
jae
adc
mov
push
mov
ljmp
fwait
sbb
or
cld
inc
int3
repz
mov
xchg
push
cli
test
ja
mov
stos
lcall
cmc
xor
mov
or
and
add
push
xor
mov
dec
mov
xchg
sbb
cmp
cmpsb
movsb
lods
and
pop
pop
test
sub
sub
roll
add
stos
inc
mov
rorl
scas
stc
rcrb
in
out
loop
mov
out
and
shll
pop
aad
frstor
outsl
cmp
fdivs
fucomip
inc
dec
ja
and
clc
imul
mov
mov
inc
inc
fiaddl
mov
mov
ljmp
inc
out
jns
cmp
adc
dec
sti
cmpsb
mov
sbb
jns
sahf
push
je
shrl
fisttps
in
fdivp
xor
movswl
dec
adc
xchg
test
xchg
ja
loope
pop
mov
xchg
dec
mov
in
mov
push
adc
testb
nop
arpl
aad
push
sub
sub
cmp
xor
jns
jo
sub
mov
inc
sete
jo
sub
test
sbb
imul
loop
mov
dec
ret
sahf
outsb
dec
add
testb
cmp
pop
cmpsb
pusha
jbe
dec
sub
jecxz
push
inc
ja
cmp
dec
mov
dec
inc
push
into
or
xor
popa
lea
or
dec
xchg
iret
push
inc
inc
imul
adc
inc
mov
sti
push
cltd
or
out
sbbb
gs
ja
push
sbb
js
sti
xchg
cld
stos
sub
test
clc
pop
insb
lahf
bound
pop
mov
or
cmp
push
iret
bound
adc
popa
cltd
and
cli
xchg
aad
mov
xchg
test
lods
imul
mov
mov
repnz
xor
daa
cmp
xchg
clc
sub
cmpl
out
mov
in
xchg
in
sar
int3
add
and
sub
test
sbb
inc
les
fistl
adc
enter
ss
and
mov
fimull
dec
fnstenv
test
js
addr16
jb
mov
sar
sbb
inc
pop
ja
fiadds
int3
pop
loop
fcmovnu
jle
fisubrs
xchg
jecxz
sti
daa
lock
jle
jbe
daa
dec
or
cmp
dec
sahf
push
push
mov
ss
jae
xor
push
lods
cmc
mov
cmp
call
jmp
loope
jo
out
fsub
mov
cmp
xchg
xchg
adc
stos
xor
dec
mov
mov
pop
inc
and
lret
sub
and
fisubrl
pop
add
sub
push
sbb
es
movsb
jnp
xor
jns
sbb
jne
mov
mov
fmull
out
xchg
xchg
insl
je
ja
mov
cli
movsl
ljmp
jne
sbb
mov
pop
mov
or
addl
js
in
push
cmp
sbb
mov
xchg
lahf
les
and
icebp
lret
sbb
jb
pop
pop
dec
cmc
cmp
xchg
daa
push
mov
lds
dec
mov
fistps
movsb
adc
loopne
pop
daa
cmp
xor
mov
xorl
in
pushf
cmp
lods
cmp
push
mov
stc
adc
sbb
jecxz
or
jns
mov
mov
jg
inc
stos
cmpb
sbb
adc
call
dec
shll
test
xchg
or
sub
inc
sti
sub
fmul
mov
shrb
lods
or
lock
xor
sub
and
loop
call
into
dec
or
fs
push
push
inc
lcall
dec
insl
cmp
mov
ja
imul
test
jo
imul
adc
popa
sub
dec
push
xchg
cld
movsb
setne
xor
or
das
or
push
push
cltd
arpl
push
stc
adc
hlt
insl
jl
push
dec
or
sub
pop
and
pop
imul
loopne
clc
lea
add
or
cmpsl
and
add
xchg
pop
pop
inc
clc
cwtl
inc
mov
and
add
out
push
sbb
repz
jge
cwtl
dec
or
mov
dec
pusha
add
fstl
mul
arpl
es
jmp
stc
inc
push
mov
push
cli
mov
xor
jae
testb
scas
and
sub
add
bound
std
xor
andl
popf
loop
cmp
cli
test
and
out
inc
lret
aas
or
stos
jge
adc
xlat
aam
cmp
aaa
xchg
adcl
enter
push
shr
mov
xlat
mov
dec
fdivrl
pop
not
lock
or
sbb
sbb
or
adc
jo
sar
xor
push
fs
popa
lret
jae
gs
cmp
imul
mov
cli
popf
mov
xchg
leavew
fbld
xchg
test
lcallw
cmp
dec
negl
and
test
xchg
jbe
mov
ror
push
adc
adc
push
pop
jmp
subl
push
sbb
pop
cmp
out
jae
or
cltd
cld
dec
clc
iret
das
mov
es
and
loopne
xchg
insl
push
jmp
jnp
xchg
pop
cmpsb
adc
fs
mov
jbe
in
das
inc
mov
data16
jge
push
inc
mov
add
mov
xchg
and
xchg
std
nop
sub
mov
aas
jecxz
xlat
mov
lods
dec
ret
leave
lahf
add
fcmovnu
fnstsw
lret
insb
fadds
fdiv
insl
add
cld
pop
mov
and
push
fwait
popf
cmpsb
mov
fdivrl
jp
jno
mov
add
push
sbb
or
adc
adc
jmp
mov
repnz
lea
mov
mov
in
sbb
pop
ljmp
dec
lahf
in
push
sti
rclb
fcmove
andl
aam
out
and
mov
push
pop
negb
cwtl
inc
sti
pop
rclb
pop
mov
sub
or
clc
sub
push
sub
shll
ret
fwait
mov
push
adc
inc
in
push
xor
loop
rcrl
mov
imulb
data16
xor
jge
iret
in
pop
ljmp
and
data16
mov
inc
cwtl
inc
sbb
fs
mov
aas
enter
mov
iret
push
inc
lcall
bound
and
inc
repz
push
xchg
cmp
mov
rolb
jbe
pop
js
or
xor
xor
jp
out
cli
cmp
cmc
xchg
add
mov
cli
sbb
jmp
addr16
sub
sar
stos
push
nop
loope
sbb
inc
shrb
addl
sahf
int3
hlt
xchg
scas
clc
in
or
jle
pop
or
xchg
and
out
shll
hlt
inc
or
jnp
icebp
movsl
or
jno
sub
mov
out
outsl
repz
jecxz
daa
xchg
aaa
cltd
pop
das
mov
xchg
sub
cmp
lea
inc
je
mov
lret
call
pop
andl
push
pop
push
xchg
mulb
arpl
xchg
push
cmpsb
xor
shrl
lret
lock
call
mov
jmp
popa
flds
into
sub
faddl
push
lahf
movsl
out
sbb
jmp
pop
push
mov
sub
ja
lods
adcl
jl
aaa
aaa
dec
jo
push
leave
xchg
roll
jnp
jp
or
fcompl
daa
xchg
imul
mov
inc
jbe
pop
cltd
push
pop
mov
into
sti
ljmp
lret
pop
add
or
mov
outsb
mov
clc
cmp
inc
xor
test
cmp
push
jne
dec
aam
dec
or
push
mov
xchg
clc
xchg
push
mov
cmpsb
fnsave
sbb
dec
sub
or
pop
hlt
and
xor
push
xchg
sbb
fcmovu
push
xchg
jp
add
push
cmp
inc
mov
testl
adc
call
xor
vunpckhps
add
scas
pop
mov
shlb
inc
jb
dec
pop
sbb
add
pop
and
push
test
mov
imul
pop
dec
das
mov
stos
aam
std
adc
xorl
push
dec
out
push
out
cltd
imul
sub
sbb
pop
push
in
push
dec
out
add
sar
jae
cmp
mov
lret
fadd
jae
outsb
popa
mov
fucom
insl
jno
adc
cmp
push
add
sbbb
shll
in
cmp
mov
cmp
pop
xchg
xlat
in
push
sbb
push
dec
test
cmp
cld
test
popf
jns
push
insl
fisttpll
roll
in
and
pop
sbbl
rolb
dec
mov
mov
gs
lret
cld
or
out
push
mov
jns
mov
jbe
ret
mov
mov
aam
jecxz
and
int3
cmp
and
shll
imul
int
adc
jnp
mov
push
popf
mov
fwait
insl
and
lods
push
imul
out
jnp
add
nop
xor
inc
mov
add
dec
mov
cmc
push
ret
pushf
push
inc
scas
jmp
sbb
mov
sbb
rcrb
sub
pop
jp
aas
jo
xorb
and
int
or
pop
leave
clc
pop
in
add
in
add
mov
sahf
adc
fs
out
shrl
pop
sbb
xchg
dec
pop
jp
cmp
pop
fcmovnu
sub
cmp
lret
out
idivb
and
test
imul
sub
pop
jae
inc
mov
or
pop
in
jg
mov
push
loop
loope
mov
jp
push
mov
cmp
push
xchg
loopne
andl
mov
inc
test
pop
mov
add
mov
sub
mov
fsubrs
dec
aad
outsb
outsl
xor
lods
adc
xor
push
add
aad
mov
jp
sti
push
push
mov
mov
iret
js
outsb
adc
inc
imul
fdiv
dec
mov
ja
sarb
ja
fsubrs
fldenv
movsl
add
mov
stc
fdiv
dec
mov
xor
and
lcall
push
ret
or
jmp
jns
lea
pop
orb
rcrb
outsb
inc
sarb
mov
in
lea
xchg
js
pop
outsb
and
mov
loop
in
les
lock
shlb
out
fwait
xor
je
cld
pop
daa
fidivrs
pop
adcl
push
adc
int
repnz
mov
cmpb
pop
nop
jnp
mov
arpl
adc
mov
outsl
dec
mov
idivb
pusha
lcall
mov
mov
shll
cmp
jbe
inc
jmp
js
cmp
ds
ljmp
adc
pushf
pushl
popf
aam
rolb
mov
icebp
lret
pop
xchg
divl
or
xchg
and
fildl
fadd
jns
mov
sbb
mov
out
pushf
add
ret
cwtl
bound
lods
push
xorb
aaa
pop
loop
je
test
pusha
ljmp
pop
inc
lods
jmp
daa
popf
aad
lods
mov
sbb
push
aas
movsl
push
push
mov
inc
sub
fld
pop
adc
sbb
push
das
and
push
mov
pop
int
or
cltd
lret
and
mov
jb
and
cltd
or
add
iret
popf
pop
mov
leave
scas
dec
aaa
add
inc
sbb
fsubrl
or
sub
cmp
cmp
push
stc
in
xor
sbb
imul
ror
adc
in
and
pushf
add
test
xchg
or
stos
ss
mov
lods
add
nop
dec
sub
ret
loopne
idivl
ret
loop
lret
xlat
or
inc
lds
js
ds
xor
sbb
jmp
pop
or
xchg
lret
ret
icebp
inc
orl
out
das
mov
lahf
jbe
sar
movsl
cmpsb
cmp
vfmadd213ps
addr16
dec
add
fimull
clc
xchg
mov
jle
jmp
jecxz
xor
mov
mov
sahf
jbe
aas
insl
insl
pop
jl
cmp
mov
push
in
xlat
lret
and
adc
sahf
lods
push
mov
or
sbb
sub
in
xlat
jnp
sar
mov
mov
xchg
out
arpl
pop
inc
cmp
lahf
dec
outsl
lcall
pop
sti
pushf
pop
fsts
mov
dec
cmpl
stos
mov
fldcw
lea
pop
jne
out
fmull
lret
dec
cmp
pop
add
pop
pop
stc
arpl
data16
and
jns
popf
xchg
pop
lods
mov
ds
pop
mov
pop
mov
fisttpll
mov
jg
mov
icebp
jne
mov
and
dec
pop
or
dec
sbb
incb
push
xor
loope
mov
push
jle
inc
jg
ret
mov
fcmove
les
and
push
fstpl
cmc
iret
je
je
shrl
out
or
inc
add
and
xchg
lahf
ss
hlt
lock
xchg
repnz
out
dec
fs
js
test
or
outsl
xchg
pop
inc
lret
andb
stos
sarl
jg
xchg
or
das
test
xor
popa
cwtl
mov
pop
xchg
add
mov
out
pop
cmc
add
or
add
arpl
fstpl
leave
in
jge
enter
inc
daa
push
push
cmp
aad
mov
scas
movsb
loop
xchg
xor
hlt
iret
enter
imul
loopne
stos
test
push
xor
push
xchg
adc
add
in
insl
and
adc
pop
jmp
dec
or
mov
in
sub
cmovnp
lods
cmpsl
and
jne
dec
or
jge
out
push
lret
mov
inc
jbe
jl
shr
dec
rol
pushf
ss
adc
add
mov
xor
lret
decl
mov
inc
cmp
aaa
aas
call
cmp
loop
add
jmp
push
into
imul
loope
adc
add
mov
mov
ja
hlt
dec
or
mov
mov
xchg
cmp
outsb
mov
pop
add
fidivrs
add
dec
inc
fwait
sub
lods
and
adc
leave
adc
pop
inc
iret
mov
fwait
mov
ret
loop
push
push
enterw
inc
movsl
vmwrite
fisttpl
aaa
push
and
and
sti
pop
mov
add
cs
out
jmp
pop
call
add
jne
or
jg
xor
sub
jnp
fwait
gs
scas
mov
fadd
cmp
leave
clc
mov
xchg
jg
lea
out
pop
mov
cmp
dec
inc
das
jo
pop
inc
out
lods
in
sub
xor
pusha
cmp
dec
jmp
ficompl
out
cli
jo
je
test
push
fidivl
pop
fninit
mov
xchg
ficoml
mov
aaa
mov
popa
outsb
cmpb
lret
cwtl
lahf
movsl
push
je
loopne
cmp
sarb
jl
inc
stos
sbb
xchg
mov
xor
movsb
insl
push
lods
push
sti
xor
cmp
xchg
inc
add
aas
sahf
fists
sbbb
push
xor
cmp
sub
cmc
xchg
sub
mov
mov
push
out
ret
adc
in
mov
pop
jnp
jbe
lret
jl
push
sbb
inc
inc
call
jns
or
aaa
rcl
movsb
push
lret
mov
push
outsl
sbb
out
jl
ds
inc
mov
adc
fcmovne
mov
pop
xchg
push
mov
mov
jbe
push
cmp
adc
out
movsb
loop
out
cmpsb
lods
push
jnp
sub
push
push
push
fcom
movsl
and
and
shl
pusha
clc
push
pop
lods
sbb
xadd
cmp
and
loope
movsl
test
mov
mov
mov
sbb
clc
es
xchg
andl
xor
popf
lods
scas
int3
pushl
jp
mov
dec
dec
ss
call
js
mov
sub
inc
xchg
mov
loop
mov
leave
and
xchg
cmpsl
fnstenv
mov
icebp
cmpsl
adc
in
jp
lea
dec
lahf
popf
cmp
and
push
loopne
filds
scas
in
mov
negb
loop
jbe
pop
cmpl
pop
imul
cmpsb
mov
mov
dec
fsubl
cmp
mov
outsl
lds
movsb
jmp
scas
ljmp
push
jbe
adc
into
loopne
aaa
cmp
ljmp
xor
xlat
pop
ficomps
fisttps
jno
dec
jge
icebp
jge
jle
xchg
jmp
or
imul
mov
push
out
jo
insl
cmpsb
sarl
sbb
sub
adc
push
movb
add
aam
add
xor
es
fldenv
ja
incl
cwtl
pop
fiadds
fimull
and
fimuls
ja
push
inc
add
mov
loopne
loop
add
stos
pop
les
xchg
scas
rorl
push
push
inc
or
jle
fildl
sbb
push
cmc
xor
add
lcall
mov
pop
xchg
mov
push
push
roll
jecxz
leave
adc
enter
stc
add
and
out
mov
push
push
in
adc
mov
cltd
adc
sbb
push
lcall
xchg
or
js
push
inc
jg
loop
loop
dec
push
xor
fst
rorb
add
xor
ficoml
sbb
in
inc
add
lock
sub
jo
dec
scas
xor
mov
sub
xor
mov
pop
add
andl
add
test
js
rcrb
or
mov
jmp
popf
add
and
xchg
and
popa
sahf
scas
mov
sbb
cs
cmp
mov
add
lahf
ss
mov
testl
cwtl
push
sub
jne
lret
ss
lods
gs
movsb
sub
popf
outsl
enter
fwait
sub
hlt
sbb
aaa
add
cmp
pop
sbb
inc
and
into
sbb
xchg
outsl
lret
xor
mov
out
cli
ret
push
cwtl
ss
mov
jmp
and
jecxz
xchg
enter
divl
call
lds
sub
addr16
imul
ret
les
addr16
enter
sbb
sbb
push
cmp
pop
ljmp
shlb
das
or
sbb
icebp
mov
les
jne
mov
mov
push
or
and
in
sahf
lcall
xchg
cmp
movb
lret
rorl
adc
out
xor
inc
fildll
ljmp
testl
ljmp
xor
out
push
pop
mov
jecxz
sub
cmp
jecxz
push
dec
sub
mov
loopne
mov
les
js
in
xchg
iret
stos
cmc
stc
jp
pop
jmp
fnclex
arpl
js
sbb
aam
pop
adc
inc
and
data16
mov
lahf
adc
dec
fisubs
js
push
lods
mov
jo
inc
xchg
pop
leave
cmpsb
and
mov
add
mov
ljmp
pop
sbb
xchg
cmp
stc
test
movsb
lods
dec
inc
push
rcr
or
and
fs
lock
test
xor
add
mov
push
loop
inc
mov
aad
and
bound
rcrl
push
xchg
cld
xlat
lret
jle
mov
mov
xchg
data16
cmpsl
cmp
add
push
cltd
clc
rol
fmuls
ds
cmp
mov
and
dec
mov
inc
xchg
cli
jb
inc
lods
add
sahf
sbb
in
in
pop
inc
jecxz
test
repz
enter
mov
addr16
fbld
lock
ror
push
aam
inc
daa
mov
in
movd
imul
jne
out
mov
negb
dec
comiss
int
addr16
pop
in
xchg
mov
loopne
lea
jb
dec
inc
cltd
mov
dec
pop
push
add
xchg
shll
repz
and
and
mov
add
pop
inc
push
les
adc
mov
out
mov
loop
fildll
mov
int
fcmovu
cwtl
or
inc
ret
ja
mov
push
mov
pop
arpl
pop
movsb
int3
ret
push
int3
jmp
lods
clc
int3
mov
cmpb
mov
rclb
xlat
pop
lret
call
lods
push
xchg
lea
data16
cli
push
sub
xchg
sbbl
out
es
pusha
nop
push
cmp
dec
sbb
call
dec
sahf
aam
insb
pushf
push
test
ss
xor
hlt
test
fnsave
mov
push
nop
int
imul
mov
xor
ss
cmp
mov
call
pop
int3
int3
loopne
add
adc
xchg
add
pop
xchg
xor
mov
mov
jge
out
aaa
push
std
lock
data16
push
jle
cltd
fcoms
movsl
push
mov
jbe
mov
int
cmpsl
call
lods
pusha
hlt
inc
sbb
sbb
ss
xor
sub
enter
push
push
push
sbb
pop
seta
loopne
push
mov
push
fcoml
mov
xor
pop
scas
xorb
add
iret
icebp
xchg
xchg
mov
mov
ja
mov
ret
dec
mov
shll
je
lock
xorl
xor
cmp
aad
ja
mov
pop
xor
cmp
adc
fimuls
je
sbb
nop
pop
inc
bound
fwait
shrl
add
jle
outsb
icebp
sub
or
push
push
cmpsb
sbb
mov
xchg
sub
xchg
dec
in
inc
and
iret
fimull
rcrl
add
sub
xor
xchg
mov
imul
or
sbb
pushf
adc
lods
jae
jle
mov
fyl2xp1
sub
xchg
mov
adc
out
sbb
scas
mov
cwtl
popf
das
imul
scas
or
daa
icebp
sub
mov
mov
in
jecxz
or
into
push
pop
add
test
mov
push
add
pop
jmp
push
inc
scas
rcrl
inc
aaa
xor
imul
movsb
shlb
cmp
push
aaa
mov
call
stos
xor
dec
lcall
or
jge
lods
or
lret
fucomi
cmp
and
adc
cmpsl
scas
test
dec
sbb
xor
ss
jns
mov
jno
in
pusha
and
les
and
aaa
in
lcall
shlb
pop
std
jne
in
cmp
daa
out
cmpsb
fbstp
inc
subl
xor
imul
or
dec
adc
jp
sbbb
push
cmp
and
inc
ds
call
fldt
sbb
push
and
adc
dec
jmp
jb
test
test
out
orb
xchg
pop
data16
je
in
aad
cmpsb
mov
mov
cld
mov
mov
mov
xchg
cmpsl
cld
arpl
mov
pop
adc
jno
loopne
mov
jo
or
cs
andl
mov
or
loopne
rcr
sbb
pop
sbb
shlb
outsl
pop
push
stos
cmp
and
rcrb
or
jnp
loopne
sub
sub
clc
shll
or
push
mov
cmpsb
dec
push
popa
call
or
or
or
mov
mov
or
pop
push
lahf
shr
scas
fsts
repz
lret
pop
cmp
pop
aas
in
or
stos
cmp
push
cwtl
push
push
shrb
into
xchg
adc
jbe
out
xor
xchg
adc
or
push
fcomi
sahf
daa
outsb
mov
pop
inc
sub
scas
stos
dec
adc
lret
jge
mov
or
inc
push
dec
int
cld
lret
mov
cmp
jl
or
repz
stc
adc
movsb
cmc
sbb
addr16
pop
int3
cmc
jmp
sti
out
xchg
jl
shll
loopne
sub
pop
add
movsl
mov
mov
and
and
dec
inc
xlat
fidivrl
pop
ss
scas
xchg
sbb
mov
xchg
and
inc
inc
js
and
push
icebp
inc
repnz
mov
jns
mov
xor
push
cmp
pop
inc
pop
insl
pop
jno
dec
xchg
ja
fimull
sbb
pop
mov
dec
cmpsb
xlat
sbb
gs
cwtl
fsubrl
cmpsl
cmp
pop
sbb
xchg
add
xchg
or
cmpl
sbb
mov
loop
inc
in
ds
mov
daa
sbb
xchg
jne
mov
and
cmp
movsb
lret
adc
int
pop
sbb
push
inc
add
dec
imul
adc
lds
mov
testl
adc
fwait
inc
sbb
outsl
jl
in
pusha
push
or
sub
lahf
push
add
pop
std
insl
in
aas
push
or
xchg
sbb
lcall
jg
mov
jo
pop
xchg
push
xor
jns
cmpsl
cmp
sbb
push
cmp
gs
bound
ret
mov
jae
cli
lcall
arpl
in
jns
xchg
mov
popf
xchg
out
hlt
push
popf
inc
mov
sbb
mov
mov
sub
adc
or
fs
xor
add
outsl
out
push
outsb
dec
cli
dec
xchg
std
add
mov
iret
mov
hlt
xchg
push
cmc
sub
mov
call
dec
push
aam
sbb
out
idivb
or
sub
jns
ljmp
mov
mov
push
pushf
cmp
or
sti
call
pushf
adc
mov
pop
and
lcall
movsb
les
xor
push
mov
push
es
xlat
pop
mov
out
lea
sti
adc
sub
loope
push
jmp
and
and
pushf
mov
lcall
mov
imul
loopne
mov
xchg
pop
push
sbb
lret
into
cmp
adc
push
lods
cmpsl
das
dec
movsl
xor
call
jl
sahf
cmp
out
jb
mov
stos
movsl
in
sub
adc
mov
das
xchg
inc
sub
cmpsb
loop
mov
mov
pop
pushf
outsl
pop
in
mov
stos
movsl
inc
in
pop
lods
fldt
xor
push
popa
test
mov
xchg
adc
jae
adc
sbb
inc
xchg
sub
mov
dec
jnp
xor
sub
cltd
iret
outsl
jecxz
and
dec
negl
cs
inc
or
sbb
std
fs
sbb
dec
daa
sti
lret
lahf
sbb
cs
aam
mov
xchg
shlb
aad
jl
inc
js
leave
adc
repnz
pop
scas
inc
push
rorb
pop
test
sbbl
repnz
iret
cld
adc
mov
sbb
ja
cli
lahf
mov
movb
fisubs
lret
iret
push
add
icebp
inc
test
mov
dec
add
mov
iret
ja
add
pushf
adc
repnz
mov
xchg
push
div
ja
jmp
or
mov
mov
dec
outsb
rcll
mov
roll
int
lock
mov
ja
inc
sti
lods
cmp
push
stos
out
sbb
ds
es
pop
adc
dec
das
pop
jg
dec
sbb
inc
or
scas
sub
jno
es
push
mov
or
fcoms
xor
push
loop
xor
mov
sbb
hlt
scas
lret
sbb
test
ret
imul
pushf
jns
cmp
stc
cmp
or
inc
jg
xor
cmc
rep
hlt
inc
loopne
fidivrs
std
cmp
dec
sbb
xchg
push
out
mov
dec
jns
addb
lret
loope
outsl
ret
in
cmp
test
xchg
mov
cmc
mov
pop
lods
es
test
and
lock
shlb
nop
sub
das
jecxz
ret
orl
lret
fadds
les
mov
adc
insl
aas
cmp
sub
inc
rcrl
sub
fwait
and
dec
pop
and
push
int
jno
jo
jmp
std
add
xchg
dec
out
add
mov
pushf
sub
test
mov
push
jb
mov
sbb
sub
mov
pusha
and
inc
ret
push
fwait
xchg
mov
jecxz
cmp
std
jbe
es
jmp
fcomps
dec
adc
gs
iret
adc
shrb
daa
je
jg
push
leave
test
out
pop
or
mov
sti
xor
pop
add
jge
push
lock
loopne
push
je
or
andl
dec
and
sub
mov
xchg
js
dec
popa
mov
in
aad
enter
fadds
jbe
inc
out
daa
xlat
xor
inc
cmp
jbe
and
or
pop
xor
sti
and
cli
sbb
push
fidivl
jae
mov
xor
lds
aad
sahf
jbe
push
xchg
or
out
icebp
fscale
pop
mov
jns
and
loope
or
sub
fidivl
cmp
loopne
testl
adc
mov
stos
aas
pop
mov
loop
inc
or
dec
nop
stos
adc
inc
popf
push
cmpsl
inc
and
js
inc
js
in
sti
imul
pop
inc
mov
into
jbe
xor
add
push
xchg
fsubl
lahf
pop
or
sarb
cld
adc
lock
fistpll
push
xchg
test
outsb
push
sbb
je
jmp
pop
mov
shll
or
outsb
js
jle
popl
push
imul
jbe
daa
sub
pop
push
pop
out
es
shll
mov
xor
jns
inc
jns
aaa
cltd
aad
push
les
sbb
mov
xchg
inc
pop
sbb
adc
call
lds
mov
mov
and
scas
test
mov
dec
lahf
inc
xchg
ds
addl
xchg
dec
arpl
pop
mov
xchg
pop
push
aad
mov
dec
daa
dec
andb
lds
leave
rorb
movsb
mov
mov
call
cld
dec
out
mov
outsl
adc
mov
out
xchg
mov
sbb
jg
fisubrs
adcb
push
lock
loop
fcoml
outsl
or
push
pop
mov
add
mov
sbb
testl
sub
pop
cmp
sti
outsl
lcall
lahf
cmp
loopne
cli
jmp
outsl
or
idivl
push
daa
xor
dec
cltd
addr16
ljmp
shrl
push
sub
ja
xchg
fwait
mov
jl
lea
enter
xchg
sbb
push
idivl
adc
mov
fdivrp
cmpsb
push
jae
push
pop
insl
fmull
sub
out
cld
xchg
rcrb
adc
inc
xor
pusha
mov
push
add
sbb
dec
push
js
jle
ret
stos
inc
movsl
das
shlb
push
pop
shrl
push
out
cwtl
int3
sub
xor
addl
ja
and
xlat
movsl
fdivr
fcompl
test
sti
test
cmp
out
dec
or
arpl
jp
loope
lea
mov
add
mov
inc
loope
lret
hlt
pop
pushf
xor
das
mov
cmp
or
pop
jp
mov
mov
inc
push
lds
enter
jp
mov
mov
mov
inc
std
xchg
xchg
cmp
xchg
inc
or
xchg
add
jl
test
loope
jo
fimull
jp
stos
jbe
pop
pop
sub
mov
out
push
adc
scas
mov
iret
sbb
lahf
push
aas
dec
mov
jno
push
jle
std
lea
or
adc
mov
cs
mov
jecxz
pop
or
test
jecxz
sti
pushf
dec
lcall
lcall
mov
dec
lret
jecxz
mov
mov
out
add
scas
scas
pushf
ds
stos
sub
jo
loopne
rcrb
add
dec
push
inc
mov
gs
jo
ja
cli
gs
mov
aam
push
sbb
and
pop
jb
push
sarl
lcall
nop
pop
test
cmpsl
xchg
sbb
test
fldenv
in
aam
or
mov
jb
and
jp
mov
add
daa
or
or
and
mov
insb
mov
cmc
cmp
shll
pusha
sti
je
xchg
repz
cmpb
fnstsw
jbe
mov
dec
jnp
js,pt
in
dec
add
sahf
mov
mov
xor
xor
pop
xchg
jnp
inc
cmp
scas
cli
jge
push
jle
pushf
dec
cli
sbb
mov
mov
jae
pop
dec
sbb
scas
and
lahf
mov
xor
test
int3
fbld
rcr
jmp
sub
int
push
adc
in
mov
jno
js
out
and
pop
data16
arpl
mov
dec
sbb
pusha
out
cmp
xchg
cli
mov
daa
add
xorl
aam
addr16
mov
popa
movsb
mov
rcll
and
lods
jmp
dec
fs
and
sahf
xor
rolb
jno
inc
loope
mov
mov
adc
aaa
lock
cmp
imul
cs
jle
pop
cs
pusha
ret
sbb
sti
adc
inc
jl
popf
xchg
or
cs
cmp
pop
dec
mov
mov
dec
push
or
lcall
call
xor
in
xchg
and
clc
sub
ret
inc
xchg
pop
int
jp
ljmp
jmp
dec
das
jbe
cltd
clc
or
dec
adc
add
push
lods
push
scas
cmp
xor
and
xor
movsb
adc
and
push
adc
pop
test
inc
mov
dec
test
stc
fcoms
icebp
pop
xor
push
push
xchg
pop
popf
xor
mov
dec
jg
dec
inc
or
lods
jns
xor
sub
daa
cmp
loop
push
pop
in
sbb
jmp
and
pop
or
pop
cmpsb
jmp
hlt
xchg
leave
psubd
dec
adc
in
out
cwtl
jecxz
mul
insl
jns
pop
mov
xor
loop,pn
fst
cmp
inc
sti
lods
aas
sub
sub
or
sbb
xchg
dec
call
aad
mov
cld
movsb
popf
xchg
mov
pop
dec
and
test
fcoms
enter
pop
lret
imul
cmp
cmp
pop
inc
push
aad
pop
inc
mov
xchg
xchg
outsl
add
mov
out
iret
push
outsl
shll
sub
or
lret
outsl
jmp
mov
dec
cltd
mov
adc
cmpsl
je
lods
dec
xchg
cld
icebp
bound
out
adc
fwait
gs
pop
jno
dec
incb
nop
pusha
repz
rolb
test
jno
push
jmp
into
xchg
jle
leave
add
sahf
dec
inc
sub
mov
push
or
push
or
lea
pop
or
or
pop
push
sub
dec
sub
cli
and
dec
das
push
imul
std
add
test
ljmp
xchg
adc
dec
sub
inc
add
imul
loopne
sub
cmp
in
xor
sahf
jge
mov
mov
arpl
pop
jecxz
add
mov
push
xchg
cmp
fs
xchg
shlb
ficoml
sub
pushf
pushf
testl
or
pop
cmp
test
jg
pop
push
push
not
cmp
call
insb
rol
xchg
or
add
notb
inc
pop
es
cld
fcoml
lahf
data16
aas
mov
fsubrl
mov
movsl
xor
fisubl
dec
inc
fildll
xchg
data16
inc
icebp
cltd
ss
push
fs
lods
mov
push
mov
push
adc
sub
xchg
mov
jae
iret
loop
ret
roll
shrb
sbb
cwtl
loopne
daa
adc
lea
jmp
insl
xchg
ja
add
hlt
mov
cmp
pop
mov
cmp
add
mov
dec
xchg
inc
adc
sbb
fldcw
inc
inc
or
dec
pop
pushf
outsl
pushf
jp
dec
imul
ret
sub
or
pop
in
fxch
test
mov
js
sarb
jle
cmpsb
int
or
dec
or
cmp
fldt
jo
adc
outsl
xor
or
outsl
rol
add
mov
in
or
cltd
idivl
out
pop
shrl
int
incl
mov
or
mov
addl
iret
xor
cmp
fldenv
push
jle
add
addr16
rcrb
xchg
mov
pop
xor
xor
inc
aam
and
cmpsl
negl
fwait
clc
test
shr
jo
mov
in
xor
xor
xchg
push
xor
imul
iret
hlt
mov
lahf
pop
pop
push
xchg
in
jae
gs
scas
jno
push
or
jp
mov
ret
jmp
push
pop
xchg
pop
rcl
sahf
sahf
dec
mov
rcrb
mov
lods
in
or
pop
lods
mov
das
cmp
and
xchg
mov
js
loop
and
pop
mov
lock
repnz
sub
jbe
adc
push
adc
lcall
clc
mov
jno
clc
sahf
outsl
or
jle
add
enter
xchg
cmp
xchg
jb
and
adc
movsb
add
sbb
inc
pop
mov
daa
es
pop
test
sbb
fwait
jbe
lcall
sbb
fsubrs
or
jns
pop
lahf
lds
data16
loope
sub
aaa
and
fisttpl
aam
pop
dec
push
dec
jns
js
mov
aad
iret
jae
loop
pop
lds
sbb
shlb
cmp
jmp
in
xor
call
in
xor
sub
push
sub
dec
pop
cli
adc
nop
lret
adc
ja
imul
xchg
or
pop
pop
addb
js
cs
xor
push
rclb
mov
in
iret
pop
iret
jge
into
fcmovnb
push
pop
fwait
nop
mov
push
jecxz
das
in
dec
imul
and
out
add
jmp
mov
leave
mov
loopne
push
into
or
add
jno
es
daa
and
lcall
mov
popa
add
in
mov
bound
jl
cs
mov
bound
mov
fldt
in
stos
sbb
xchg
dec
xor
pop
enter
sbb
insb
mov
lea
jne
jle
lret
inc
mov
jb
add
imul
push
xchg
cmpsl
int3
jns
push
cmpsl
fpatan
rcrl
cmp
pop
push
popl
mov
insb
sahf
into
xchg
jno
cwtl
aam
xchg
ljmp
dec
mov
adc
das
cs
ljmp
pop
jmp
xlat
jnp
mov
dec
fldenv
push
std
mov
mov
xor
out
test
lods
shll
lds
xchg
jns
or
data16
mov
aad
mulb
inc
lahf
fiaddl
cmpb
jle
adc
sbb
xchg
lcall
cmpsb
outsl
cmp
loop
xchg
rolb
add
push
mov
cmp
icebp
xchg
pop
cmp
push
mov
gs
add
fidivrs
shrl
or
addr16
cmc
and
lret
outsb
lcall
mov
lret
adc
lds
sti
or
push
or
les
jns
jbe
shl
push
dec
push
xchg
cmpsb
dec
mov
cli
xchg
fildl
mov
sub
xchg
and
aam
fdivrl
scas
pop
es
dec
mov
test
loope
push
mov
inc
aas
orb
dec
ja
mov
lock
leave
into
jbe
cmp
ss
dec
std
arpl
push
mov
sub
lea
mov
pop
sahf
lahf
ffreep
sbb
fwait
into
pop
push
dec
pusha
icebp
fstl
decb
addr16
add
insb
jns
cmpb
nop
repnz
sahf
aam
push
lret
lock
xchg
mov
dec
jns
dec
out
outsb
sub
and
cmpsl
mov
sub
enter
jnp
add
mov
lea
xor
mov
fiadds
push
jl
pop
push
xchg
push
fistpl
aaa
mov
ds
add
testb
mov
sub
cmp
fadds
and
dec
fnstcw
sbb
fdivrs
xor
or
orb
pop
adc
xchg
dec
testb
inc
jg
pop
pop
jnp
push
cli
push
sahf
adc
and
sub
es
hlt
jg
or
inc
psadbw
xchg
cli
jns
jo
xchg
cmc
loop
sbb
lret
insl
sbb
sti
xchg
xchg
aad
test
popf
dec
push
inc
ret
jae
or
paddsw
mov
and
adc
push
adc
add
xlat
hlt
movsb
cmc
les
nop
imul
lods
divl
rcrl
out
xchg
cmp
add
in
mov
test
je
lods
xchg
loope
arpl
movsl
or
ror
outsl
andb
cmp
lods
stos
cmp
mov
lret
push
sub
cltd
xchg
popf
pop
and
or
pop
test
rolb
push
rcr
outsb
out
jae
push
jle
in
sahf
adc
dec
and
rclb
xor
fbstp
iret
clc
jmp
push
xorl
jle
inc
pop
outsb
mov
inc
les
leave
mov
sub
mov
and
adc
push
into
lcall
call
lret
nop
mov
inc
repnz
int
jg
movsb
inc
xchg
cmp
add
mov
jmp
sarb
push
and
sub
xorl
sbb
or
inc
xor
sub
aas
xchg
adc
in
addr16
xor
or
adc
out
dec
sarb
cmpsb
xchg
pop
sbb
mov
shrl
dec
xchg
ret
push
cli
imul
or
mov
test
lcall
mov
sti
xor
div
lods
loopne
push
shl
lret
and
xchg
jne
add
push
xorl
je
sub
dec
mov
mov
hlt
sarl
dec
nop
jge
cwtl
mov
iret
push
inc
push
pop
jno
hlt
adc
sbb
mov
adc
call
lcall
std
movsb
sub
sbb
sbb
mov
lret
jg
ret
adc
incl
push
push
in
jne
or
or
sub
cli
or
or
cmpsl
ss
adc
xchg
mov
mov
or
push
je
sahf
out
push
sbb
and
jmp
ljmp
jae
loope
mov
dec
push
inc
imul
mov
add
loope
into
mov
aam
ja
pop
inc
sbb
jle
imul
js
in
ds
data16
je
and
fcmovnb
add
fldenv
lret
nop
cmc
cs
adc
out
push
dec
loope
xchg
inc
lea
xor
call
mov
ja
inc
out
into
add
adc
dec
stos
ss
fwait
lods
lods
add
sub
adc
shl
xlat
add
test
daa
sbb
into
inc
mov
dec
push
sbb
add
stos
mov
out
and
adc
sbb
inc
sbb
push
repnz
push
mov
les
stos
loop
sub
jge
call
cli
xchg
test
push
out
cmc
lock
xor
mov
outsl
nop
push
cmpsb
jae
push
jp
add
xchg
cmpsl
sti
jmp
mov
and
sub
pop
daa
out
jp
sub
sbbb
cmp
xchg
push
pushf
stos
outsb
mov
sub
mov
test
mov
pop
aaa
push
cmpsl
xor
jle
in
dec
and
dec
or
addr16
int
testb
cld
and
cmp
mov
push
xor
cmpsl
push
sub
sar
loope
repz
out
clc
mov
rclb
aas
pop
dec
aam
add
mov
js
outsl
adc
jae
rcrb
nop
pop
xchg
adc
xchg
shlb
test
fsubr
cmp
rcr
mov
out
stos
hlt
xchg
mov
imul
movsb
dec
dec
rcrb
sbb
sub
cltd
add
clc
push
cli
das
int
cltd
stc
jg
dec
mov
and
das
adcb
xchg
addr16
sub
sub
lea
stos
xor
sub
inc
mov
add
lea
aad
push
test
arpl
aaa
insl
in
lds
cmp
loopne
ffree
ss
insb
xchg
cmp
inc
inc
lret
pop
orb
xlat
sbb
adc
push
mov
outsl
insl
pop
into
sub
and
in
cltd
add
and
mov
movl
fisttps
sub
movsb
cmp
rcrb
push
push
xchg
and
enter
pop
in
subl
decl
aas
lret
rorl
push
jne
mulb
rorl
mov
cs
test
data16
push
mov
in
les
mov
push
sysenter
jmp
jmp
idivb
xchg
addb
mov
imul
xlat
sbb
popf
popa
jp
inc
cwtl
and
sbb
jl
or
xor
push
cltd
repnz
loope
dec
cs
imul
scas
jns
test
addb
cmc
mov
ja
lea
sub
inc
data16
imul
outsb
mov
out
popf
movsb
xlat
xchg
cmp
mov
and
mov
mov
hlt
pop
inc
cmp
cltd
mov
std
xor
insl
sbb
pop
xchg
sbb
xor
add
jbe
mov
sub
cmpsl
lea
mov
dec
jl
jmp
and
xor
cli
cmpsb
lea
and
sahf
fs
iret
xorl
fistl
cmpsl
cld
jmp
xor
adc
push
getsec
pop
sti
cmp
xor
andb
sub
mov
jae
dec
jns
mov
sub
out
xor
sbb
sub
xchg
sub
and
pop
cmpsb
adc
inc
inc
stos
daa
xchg
xor
divl
movsb
adc
push
inc
dec
or
iret
pop
rcl
jns
push
lea
jb
adc
rol
mov
jns
js
xor
or
addr16
push
cmc
ffree
cld
daa
mov
xlat
xor
xchg
and
sbb
daa
xlat
mov
mov
cli
mov
inc
sbbb
xchg
lcall
mov
repnz
mov
test
dec
and
jg
shr
ss
idivl
push
xor
sub
test
fisttpll
sti
mov
sbb
push
push
dec
push
or
sub
xorb
test
dec
or
out
jns
nop
cld
or
cmp
arpl
nop
pop
jp
jmp
in
shll
dec
jmp
insb
or
call
aas
sbb
out
pop
insl
push
jecxz
daa
je
adc
xchg
in
lcall
dec
cwtl
sub
ljmp
rorl
sbb
pop
cwtl
mov
call
add
push
movsb
ret
mov
push
in
je
faddp
adc
ljmp
mov
or
lret
lods
sub
das
js
dec
andl
xchg
mov
cmpsb
jge
std
hlt
push
aaa
dec
arpl
mov
or
dec
xchg
cmp
out
hlt
lea
mov
mov
push
repz
push
xlat
xchg
fstpt
and
push
out
push
insb
xchg
inc
cwtl
dec
outsl
add
outsl
cmp
adc
subb
cwtl
cmp
scas
lret
jnp
mov
mov
sub
and
cmp
aaa
or
test
fdivrs
dec
pusha
lock
sbbb
out
add
imul
popf
sahf
mov
and
push
pop
pop
xchg
sub
shll
jo
xchg
imul
scas
adc
in
adc
push
vshufps
jnp
and
and
sub
js
call
push
dec
nop
mov
cmp
inc
inc
cmp
int
pop
pop
sub
iret
adc
mov
and
ffree
lcall
lret
call
xlat
js
ret
and
add
pop
jmp
in
xor
jl
mov
adc
pusha
inc
ja
popa
sbb
mov
test
call
stc
stc
push
add
and
pcmpgtw
adc
sub
mov
insb
rorb
xchg
mov
sbb
dec
sbb
popf
cwtl
lods
mov
cmp
add
jne
test
data16
das
dec
xor
mov
imul
in
push
or
mov
popf
mov
sti
jns
cmpsb
flds
pushf
cltd
sub
fidivl
xor
mov
jl
xor
in
pop
cmp
mov
mov
fldt
xor
sti
push
inc
cwtl
enter
shll
cmc
xor
jecxz
xor
mov
cmpsl
cltd
push
in
fs
or
les
cmc
dec
lds
shlb
sub
or
mov
adc
daa
stc
mov
mov
cmp
sbb
xor
or
sar
and
xchg
movsw
push
lock
scas
mov
fdivl
mov
jns
push
out
std
mov
mov
mov
dec
dec
lret
stos
jb
shrb
inc
push
mov
aam
xorl
or
push
xor
int
jmp
sub
jne
enter
test
mov
test
sbb
negb
leave
dec
pop
popa
sub
clc
repz
mov
std
jne
pop
inc
mov
mov
jmp
adc
nop
sbb
ds
aas
aad
daa
adc
push
inc
inc
mov
jmp
xor
sub
xor
idivb
dec
adc
lret
pop
shl
int3
sub
mov
aam
lahf
jg
adc
mov
jg
pushf
adc
xor
xlat
addr16
aaa
inc
in
xor
sbb
sub
dec
inc
fnstenv
mov
mov
stc
dec
pop
jl
ficomps
addr16
mov
xchg
mov
nop
pop
inc
in
ss
push
push
sarl
lock
js
mov
push
mov
mov
push
jg
cmp
lret
push
sub
xchg
ret
les
xlat
ljmp
mov
lcall
push
cmp
dec
test
push
push
lods
rcrl
lea
inc
mov
pop
ret
mov
xor
aad
popa
movb
icebp
daa
aaa
adc
inc
lea
notl
xchg
and
cmp
int3
or
push
testl
push
ss
ret
in
xorb
jp
xchg
xor
iret
scas
and
inc
dec
inc
cmpsl
test
mov
adc
aam
push
sub
mov
ret
icebp
into
cmp
push
les
insb
mov
sub
cmp
sbb
lcall
dec
iret
adc
stc
push
xor
test
jnp
jl
aad
popf
add
mov
cmp
decb
push
hlt
cmp
jae
imul
xchg
testb
sbb
mov
das
cmp
repz
out
call
sub
out
sahf
or
add
scas
cwtl
inc
jb
ror
sbb
pushl
shll
inc
icebp
enter
pop
imul
pop
jae
mov
daa
bound
xor
js
not
push
mov
aam
adc
out
add
sti
or
shll
pushf
cwtl
adc
push
cmp
push
and
sbb
jge
or
inc
mov
cld
out
mov
xor
and
sub
jge
jnp
addr16
scas
dec
out
mov
add
dec
or
mov
cmpsb
mov
inc
jae
out
shlb
pusha
into
xchg
out
inc
addr16
out
loopne
test
xchg
ret
ja
addr16
ljmp
or
pop
jg
out
cmp
loop
push
and
lea
mov
xor
cmc
aam
mov
jecxz
test
cltd
dec
add
dec
movb
loope
dec
sub
ficoml
hlt
mov
bound
pop
stos
dec
pop
orl
or
test
jno
ret
adc
repz
jne
and
ja
lret
fwait
mov
xor
mov
pop
dec
jb
add
xchg
push
dec
sbb
mov
ljmp
push
push
int
insb
lahf
sbb
rorl
push
cmp
fs
add
cmp
and
push
icebp
pushf
mov
sub
dec
mov
bnd
in
test
in
rcr
stos
mov
mov
xor
movq
sbb
aas
mov
fs
dec
lods
add
push
push
pop
add
mov
cmp
hlt
add
aam
dec
mov
jne
jbe
fcoms
dec
test
leave
push
shlb
js
out
mov
inc
xor
mov
inc
xor
dec
xchg
aam
icebp
pop
mov
xchg
add
addr16
mov
lock
rolb
push
add
and
push
pushl
psrlw
push
cmp
mov
mov
test
loope
jmp
insb
fnstcw
fsubs
das
or
divb
mov
dec
test
sbb
and
xchg
adc
out
xabort
rdtsc
rcl
xor
lods
cmp
mov
mov
pusha
addb
fs
lock
test
xchg
repz
jmp
aad
push
sahf
popf
mov
mov
xor
fdivl
or
popf
and
adcb
fcom
arpl
add
push
sub
jle
repnz
inc
sbb
pop
xor
mov
ss
add
push
xchg
sahf
mov
aas
sahf
dec
fisubrs
fistl
jns
adc
or
pop
and
pop
sbb
cs
hlt
sbb
xlat
xor
popf
push
out
scas
imul
xchg
xor
insb
hlt
xor
jg
jp
into
cwtl
push
push
dec
push
cmp
inc
cmp
push
pop
ret
test
mov
adc
xchg
fwait
or
jecxz
add
in
mov
xchg
aam
gs
insb
jecxz
adc
mov
pop
addr16
in
dec
mov
pop
shl
lock
adc
in
mov
inc
outsl
sbb
jmp
sub
lcall
inc
sub
orb
pop
add
inc
ja
sub
mov
jnp
mov
xor
sbb
mov
cld
test
sbb
jg
jl
xchg
adc
adc
test
inc
in
fidivrl
jne,pn
mov
and
dec
movlps
mov
mov
das
adc
iret
subl
mov
add
sbb
push
sub
mov
cmp
sbb
mov
neg
mov
push
mov
inc
mov
ds
shrl
lcall
repz
jmp
xor
imul
sar
je
enter
rcr
fisubrs
or
lret
gs
inc
mov
mov
mov
xchg
cmp
int
test
shr
xor
cmpl
into
repnz
mov
mov
outsl
lods
jb
push
std
sbb
jg
add
pop
push
je
aam
fs
push
lea
pop
adc
addr16
popa
push
mov
test
mov
loop
stos
ljmp
cs
ss
cmpb
das
jb
cld
out
and
aas
fcoml
xor
cmp
pop
testb
decb
into
add
fisubrl
rcll
sbb
cmp
or
lock
add
mov
pop
xchg
adc
xchg
out
fwait
sbb
or
dec
pop
pop
ret
into
leave
outsb
je
mov
cmp
orl
lahf
pop
in
sahf
lods
int
call
xchg
mov
bound
dec
arpl
mov
mov
testb
fmul
inc
sahf
add
leave
push
stos
jo
in
fisubrs
test
lods
xchg
pop
lods
push
cmc
jge
lahf
xchg
push
out
in
xor
push
inc
ds
cmpsl
les
push
jle,pt
lret
stc
dec
jg
lret
inc
es
fwait
les
in
clc
add
adc
push
in
inc
mov
mov
or
lods
mov
and
mov
jg
scas
push
sysret
jae
ja
pop
sbb
inc
jne
popf
orb
mov
aam
lahf
mov
jge
push
cmp
xchg
cmp
cmp
push
repnz
test
mov
pop
or
out
xor
adc
dec
es
sub
in
push
jecxz
mov
inc
add
cmc
aad
mov
test
and
xor
inc
stc
pop
loope
std
pop
in
shll
sub
lahf
adc
push
repz
add
push
sub
push
adc
xor
sbb
and
int
sti
adc
mov
xchg
aaa
lahf
stos
pusha
jae
adc
push
test
jle
inc
in
mov
mov
insb
push
and
daa
out
out
and
adc
sbb
in
and
mov
cmc
dec
and
fstpl
sub
dec
pop
lahf
pop
pop
test
sub
loopne
push
or
loope
xor
adc
not
pop
jmp
sbb
push
pusha
jne
adcl
movsl
ret
test
cmp
fcoms
int
scas
sti
loope
sub
jnp
cwtl
idiv
je
daa
shlb
out
or
xor
push
inc
lcall
dec
add
jle
mov
pushl
sahf
add
xor
icebp
cli
rclb
and
lods
fcoms
xrelease
mov
jbe
mov
vmovhps
cmp
in
adc
mov
mov
dec
les
mov
in
mov
push
push
repnz
dec
xor
mov
cltd
xchg
fdivr
cwtl
data16
fldt
mov
rcrl
pop
roll
js
rcrb
xchg
or
lock
xor
leave
loopne
sbb
shll
and
and
sub
aam
jns
dec
push
mov
ljmp
call
popa
fstl
and
pop
aas
loope
push
ljmp
mov
stos
pop
test
jle
cmp
xchg
aaa
mov
push
stos
mov
mov
or
lock
pop
ficoml
rcll
enter
int
js
pop
stc
and
ret
lods
or
push
adc
test
or
pushf
mov
cmp
dec
dec
lret
popa
sbb
pop
mov
inc
push
iret
dec
inc
pusha
pop
sub
in
dec
mov
jne
pop
mov
mov
sti
sub
sbb
shll
adc
sub
cmp
pop
xlat
into
out
ljmp
adc
int3
sub
xchg
and
or
xchg
in
cmp
jmp
fwait
test
in
and
add
jmp
imul
or
xchg
push
minps
fidivrl
push
lcall
inc
jbe
xchg
loop
mov
push
pop
and
mov
jb
popf
andl
inc
shlb
nop
mov
aaa
jnp
xor
enter
roll
jns
stos
ret
notb
adc
test
mov
ret
lea
mov
sub
std
std
sub
xor
scas
pop
inc
cmp
shr
pop
xor
les
lds
adc
xchg
fisubrs
rcl
test
popw
in
mov
add
mov
outsl
js
push
jecxz
lods
je
icebp
popa
sub
in
adc
repz
movsl
fnstsw
test
jle
or
cmp
xchg
xorb
ret
in
lods
mov
inc
stos
out
xor
sub
jae
mov
sbb
lods
adc
cmp
aaa
loope
sbb
xor
mov
outsb
dec
lea
in
data16
aad
jo
pushf
ds
dec
mov
popf
pop
add
push
out
xor
jbe
sti
rorl
mov
stos
stos
xchg
add
cwtl
hlt
imulb
push
xchg
nop
idivl
push
scas
cmp
arpl
sbb
xchg
add
xor
and
push
popa
fildll
mov
dec
mov
cmp
inc
inc
sti
test
cmp
rorb
rcl
mov
dec
mov
pop
lds
fcomps
lea
std
and
inc
fcomip
dec
test
test
enter
mov
or
and
mov
iret
add
decl
inc
repz
push
inc
test
mov
les
xlat
ds
push
mov
mov
dec
inc
lcall
mov
outsb
aam
dec
sahf
loop
mov
inc
je
popf
push
mov
lea
aaa
int3
mov
popa
push
gs
fcmovb
aaa
pop
or
das
sarb
cmp
mov
adcb
outsl
adc
or
dec
xor
sub
xchg
fldenv
push
xchg
mov
xchg
outsb
xchg
arpl
cs
lea
aam
cmc
scas
mov
push
fists
outsl
xchg
ljmp
mov
sub
pop
cli
push
push
incl
cltd
outsb
mov
aaa
imul
sbb
xor
inc
cmp
jbe
add
mov
jae
pop
adc
shr
adc
jl
jmp
aas
ja
xor
mov
cmp
in
sub
and
push
pop
mov
pop
inc
cmp
hlt
mov
sub
frstor
pop
jnp
std
and
call
lahf
pop
clc
cmp
pusha
test
fmulp
hlt
inc
inc
adcl
adc
jl
push
not
pop
xor
or
or
add
pop
jbe
ja
movsl
subl
cmp
arpl
and
mov
in
pop
and
arpl
scas
incl
xor
adc
loope
push
out
and
fstpt
push
xchg
dec
sub
imul
in
leave
xchg
test
les
ret
clc
cmc
xor
push
sbb
ret
or
pop
mov
mov
iret
lods
cmp
mov
add
push
xchg
xor
int
xchg
xlat
and
add
xor
fstl
mov
rcrb
mov
in
bound
add
repnz
and
out
ja
popf
sbb
addb
inc
test
pop
ror
fnstcw
fwait
push
sub
addl
mov
adc
movups
and
mov
test
aaa
sbb
sbb
sub
enter
inc
sub
sbb
insl
popa
test
xchg
imul
enter
sbb
fistps
insl
shlb
je
mov
into
mov
test
add
jg
cs
add
and
dec
pusha
filds
mov
push
loopne
mov
xor
xor
cmp
outsl
andl
adc
hlt
pop
aaa
int
adc
aas
mov
jne
dec
sbb
arpl
jecxz
and
fldl
in
mov
add
int3
adc
sahf
loope
stc
add
cmp
out
into
mov
mov
ss
jns
sub
jecxz
inc
push
jo
nop
nop
push
addr16
jg
int3
stos
adc
pop
and
dec
fs
arpl
pop
fisttps
outsb
xor
call
cmc
repnz
out
mov
out
jo
lcall
push
es
sbb
call
xchg
inc
lret
cmc
cmc
cmp
add
xchg
inc
sbb
jb
push
pop
sbb
bound
cli
jp
sarl
lret
lea
mov
push
pusha
inc
pop
mov
sbb
mov
or
outsl
xor
std
js
dec
std
shrl
dec
pushf
push
dec
cltd
mov
mov
xchg
addr16
mov
pop
outsb
daa
iret
adc
arpl
enter
xchg
enter
subl
enter
fldt
and
mov
pop
inc
loopne
sahf
jp
imul
mov
inc
jb
aas
lret
rclb
jp
scas
inc
sub
pop
mov
add
inc
lock
loopne
adc
addr16
adc
jp
cwtl
jb
push
mov
or
mov
sub
bndstx
jmp
push
scas
and
mov
test
mov
mov
cmp
add
adc
jb
in
stos
call
pushf
jle
std
pop
jg
aad
cs
jecxz
push
or
mov
or
es
stos
mov
out
fs
movsl
rep
or
push
and
cmp
adc
mov
scas
cwtl
push
and
mov
mov
lret
xchg
aas
xchg
jl
enter
cmpsb
add
cmp
fincstp
sbb
lods
dec
mov
and
iret
pop
jge
xor
or
insb
popf
sub
mov
mov
mov
in
or
leave
mov
decb
aam
decl
inc
lcall
out
out
push
dec
inc
mov
mov
xorb
std
xchg
dec
inc
dec
and
mov
sub
sbbb
inc
out
push
out
pop
cmc
or
clc
jno
fstps
push
je
jmp
sub
mov
inc
jo
clc
negb
mov
cmpsl
mov
inc
fcom
aas
xor
insb
iret
mov
lcall
sub
jbe
xchg
cmp
cmp
scas
fildll
lods
or
cmp
out
dec
nop
jmp
stos
sub
hlt
pop
push
dec
mov
jae
outsb
pop
add
sbb
mov
cmp
fidivs
mov
lret
jno
cmp
mov
test
inc
in
mov
push
out
or
mov
in
add
test
xor
xchg
lret
push
daa
jns
mov
fwait
in
jg
cmp
or
addr16
pop
in
shrb
mov
sti
or
mov
inc
or
cmp
sbb
add
aad
aaa
and
mov
lahf
std
cli
sbb
mov
lahf
mov
out
sbb
jbe
push
mov
andl
xchg
cmc
pusha
or
or
fwait
adc
mov
push
ret
test
push
dec
and
add
push
xchg
fisubl
pop
popa
mov
jmp
int3
push
sarb
cmpsb
xchg
xchg
adc
test
ror
in
adc
cmp
stos
and
xor
daa
pop
jb
pop
dec
xchg
scas
fwait
pop
mov
das
xlat
jmp
push
and
out
mov
aas
jg
call
call
push
sar
mov
out
fs
cltd
aaa
cmp
add
leave
ds
inc
into
mov
xchg
add
inc
xor
lahf
std
in
cs
jl
js
filds
cli
out
or
jmp
lcall
mulb
xchg
sub
xlat
mov
pop
movsb
addr16
aam
das
sbb
push
shlb
iret
lock
mov
adc
ss
jne
push
mov
mov
aaa
push
jecxz
hlt
xor
scas
outsl
sbb
sub
dec
inc
xchg
cmp
inc
or
jp
rorl
mov
cmp
rolb
cmpsl
dec
cwtl
xor
fisttps
jno
sub
xchg
fiadds
mov
pop
out
lahf
sub
shll
int3
adc
dec
xchg
and
aaa
mov
sub
push
ds
mov
test
push
cli
mov
and
jg
push
cwtl
xchg
out
push
lea
mov
jg
scas
lret
pop
daa
int3
xor
add
push
jo
in
and
repnz
inc
ret
testb
xchg
mov
cmpsl
inc
loop
ficompl
sbb
popa
pop
jg
adc
hlt
mov
mov
cmp
popf
outsb
adc
inc
adc
sbb
dec
lods
adc
js
mov
pop
imul
outsb
or
imul
mov
aam
xchg
and
ror
push
xchg
addr16
out
pop
cltd
cmpsb
xchg
rcl
nop
bound
lret
incb
push
mov
push
int
or
push
call
addb
push
pop
fstpt
xchg
sahf
adc
in
imul
pushf
jno
mov
cmpsl
mov
xchg
dec
xchg
pop
push
pop
bound
push
mov
out
aaa
xchg
lea
jp
pop
mov
test
adc
loop
xchg
jns
or
test
sub
pushf
mov
xchg
negb
movb
iret
push
les
pusha
dec
mov
or
dec
jb
xchg
jnp
sbbb
fwait
push
in
push
cmp
or
mov
cmp
xchg
aam
jne
or
pusha
mov
clc
mov
pop
pop
mov
sub
aaa
sarl
call
stos
test
xchg
fcomps
into
ja
sub
mov
mov
mov
test
jne
fdiv
mov
sbb
stos
aad
imul
mov
cmpsb
push
outsl
mov
cld
xchg
pop
jge
cs
xor
outsl
ljmp
lock
pop
adc
sbb
sarl
pop
mov
cmp
lods
les
out
shrb
popa
sbb
mov
outsb
jno
movsl
in
push
ror
mov
scas
gs
les
push
ficompl
pushf
mov
adc
cmp
add
ds
subl
mov
shll
add
sbb
nop
iret
cmp
jl
sub
jp
inc
jns
and
clc
jo
dec
aas
cmpb
ficompl
and
outsl
inc
mov
cmp
ret
iret
or
out
sub
repz
push
ret
push
mov
xor
scas
pop
jg
ljmp
and
push
mov
inc
ret
das
rorb
jo
cmpsl
inc
mov
jno
pop
sti
mov
nop
dec
xchg
mov
test
mov
insl
mov
xchg
adc
jo
or
loope
out
in
jge
stos
mov
jne
mov
jns
mov
mov
sub
pop
mov
cmp
jbe
cmp
into
pop
fwait
or
int3
mov
mov
push
iret
in
lea
test
inc
fadds
aas
adc
mov
je
lods
sub
sbb
repnz
mov
loopne
add
das
pop
lahf
push
cmc
add
adc
adc
lock
outsb
or
push
pop
shrb
add
cmp
ds
pop
or
xor
and
or
inc
test
ret
push
add
data16
popf
adc
inc
mov
pop
dec
inc
push
stos
cld
les
pop
sub
scas
and
add
dec
ljmp
mov
inc
in
mov
gs
loope
sub
dec
ret
cltd
adc
shl
sbb
leave
or
in
inc
jp
jno
sub
xchg
push
arpl
cwtl
inc
movsl
pop
or
fistl
test
and
xchg
lcall
movl
cs
mov
cmpsl
arpl
mov
xor
ret
and
sub
sub
mov
pop
stos
cld
into
jno
mov
outsl
mov
adc
outsl
and
ret
loopne
mov
push
adc
or
ss
add
sub
vaesenc
xor
ds
mov
adc
and
pop
stos
filds
ja
stc
push
mov
jp
lods
mov
decl
jno
nop
jp
in
xor
stos
inc
mov
xor
lret
rol
sub
fnstsw
and
lret
mov
push
cld
push
iret
test
or
xor
xchg
in
and
sbb
sub
add
lds
imul
mov
mov
lods
add
stos
mov
dec
add
shr
fcompl
push
pusha
jbe
cmp
iret
dec
mov
fs
sub
cld
jmp
xchg
js
imul
xlat
xor
dec
dec
and
xor
je
and
jmp
xchg
into
movsb
repnz
jmp
lea
cmp
and
in
mov
fs
sbb
andl
inc
lcall
mov
imul
sbb
mov
lods
fcom
lock
adc
lds
flds
sbb
xchg
push
jno
and
xchg
fldt
adc
jl
inc
ret
incl
pop
cmp
iret
fistpl
insb
ficoml
inc
jnp
gs
pushf
sub
scas
or
mov
and
sbb
addr16
test
aad
jl
sbb
mov
insb
or
daa
inc
mov
jmp
sbb
push
rcrb
rcll
aam
fcomps
ss
pop
and
mov
push
push
std
push
cs
xor
xor
mov
pop
push
mov
jmp
mov
pop
mov
cmp
mov
rcr
jne
inc
lahf
cmp
lret
xlat
shlb
iret
mov
sub
call
fwait
js
add
cmp
jns
pop
insb
xchg
in
cmp
hlt
incl
xor
shll
and
cmp
stos
cmp
push
outsb
inc
jmp
cmc
repnz
scas
arpl
movsl
jo
xchg
add
jge
mov
xchg
and
push
push
xor
sbb
sub
xor
adc
mov
pop
pop
loopne
add
testl
adc
pop
js
gs
mov
push
jne
nop
repz
add
test
das
ja
sub
xor
loopne
icebp
cmp
loop
jnp
mov
rcrb
mov
xlat
adc
fsubl
jecxz
cmpsb
mov
cmp
pop
adc
leave
sbb
add
fistps
dec
mov
outsl
icebp
and
fdivp
lahf
mov
mov
les
sbb
xchg
jns
add
xchg
mov
add
mov
fidivrl
aad
jecxz
or
jae
leave
jns
pop
cmp
and
sbb
xchg
or
in
cwtl
imul
mov
xchg
mov
inc
push
sub
stc
js
das
mov
push
mov
ffreep
repnz
das
or
in
pop
mov
or
xchg
dec
imul
hlt
pop
inc
mov
in
push
shrl
sbb
leave
lods
sub
cmp
loope
cli
sub
sti
stos
fstl
pop
scas
or
jns
jmp
addr16
jle
jae
flds
xchg
mov
dec
mov
pop
and
paddsb
mov
pop
push
fistpll
lahf
test
xchg
xchg
js
and
and
xchg
pusha
dec
fisttps
and
in
movsb
mov
int3
shlb
adc
loope
mov
pop
inc
and
adc
hlt
mov
or
pop
hlt
ret
xor
stos
jne
inc
js
push
xchg
in
cmpb
enter
mov
sarb
int
pop
fcomi
xor
and
mov
nop
sub
call
xchg
or
dec
aad
pop
pop
jae
lahf
dec
out
or
mov
sti
les
sub
js
pop
xchg
or
mov
cmp
pop
push
pop
inc
mov
in
pop
adc
sbb
shrl
jno
push
popa
and
mov
clc
scas
cmp
inc
push
ret
ljmp
sbb
mul
ss
jno
in
pop
mov
and
movsl
add
testb
and
call
xchg
mov
lcall
test
pop
fisttps
cmp
sbb
ret
mov
adc
xor
rcrl
jmp
sbb
xchg
mov
fldenv
fidivl
or
pusha
sub
rorb
int
rclb
jns
test
pop
sti
lods
or
jmp
push
sub
mov
stos
out
sbb
lcall
dec
xor
inc
xlat
in
iret
mov
pushf
xor
jle
dec
test
fiadds
outsb
scas
stos
scas
test
push
xor
jno
ja
call
mov
insb
leave
nop
shlb
jl
ja
movsb
daa
repnz
sub
jno
inc
pop
jae
in
jge
cmpsl
push
adcb
arpl
test
ja
inc
and
jg
outsb
xor
add
lret
mov
les
rcll
or
inc
dec
in
inc
pop
lcall
xchg
pushf
insb
sbb
rep
mov
sbb
xor
inc
push
mov
and
cmpsb
data16
dec
push
test
pushf
dec
mov
sbb
test
mov
rcll
jmp
inc
andb
mov
mov
xchg
popf
push
ja
into
xor
out
int
add
pop
ret
mov
repnz
cmp
xchg
add
cmc
std
xchg
xchg
xchg
push
out
daa
pushf
xchg
mov
cmpsb
test
cmp
mov
dec
lahf
mov
inc
fdivl
nop
loopne
cmp
lods
inc
adc
out
call
mov
add
jae
pusha
paddusb
push
dec
repnz
jns
mov
mov
push
pop
mov
xchg
sahf
outsb
or
cmp
mov
or
test
shrl
in
push
mov
mov
cmc
mov
push
pop
insl
test
add
xor
pop
push
ret
imull
jo
popf
mov
jg
cltd
xlat
fisttpl
cmpl
or
dec
mov
arpl
xchg
push
lods
push
in
pop
mov
out
push
in
add
clc
out
out
sti
or
mov
xlat
stos
mov
inc
insl
dec
push
dec
insl
stc
jne
insb
xchg
add
scas
or
and
mov
stos
mov
dec
push
mov
push
ljmp
inc
xlat
adc
cmp
mov
inc
cmc
pop
add
cmp
mov
aas
xor
xor
rdmsr
pusha
mov
mov
inc
loope
push
ret
lods
stc
cmpl
xchg
adc
stos
cmp
pop
mov
and
mov
imul
cmp
xchg
adc
adc
mov
push
add
push
js
repz
dec
mov
shr
add
movsl
stos
pop
xchg
dec
ljmp
dec
or
sub
xchg
mov
mov
xchg
mov
lret
fwait
pop
movsl
lock
scas
scas
jae
test
pop
inc
inc
sbb
inc
sub
and
ljmp
fwait
test
sub
xchg
jns
inc
pop
sbb
jle
clc
cli
popa
xor
mov
iret
dec
mov
andb
dec
pop
mov
inc
inc
or
sbb
inc
push
jmp
xchg
pop
xchg
pop
sbb
call
addr16
pop
dec
scas
nop
pop
rcrl
stos
vphaddubw
imul
dec
mov
mov
aas
je
fwait
test
jo
adc
jae
dec
in
jae
aaa
sbb
out
cmpsl
data16
test
mov
mov
or
cmpsb
adc
movsb
or
cmp
cmpsl
scas
lods
push
push
orl
in
xlat
push
dec
mov
lret
into
and
xchg
subb
aaa
int3
aam
sbb
out
jl
jno
je
cmp
add
add
cmp
push
pop
lods
xchg
jo
out
fwait
xlat
out
cwtl
sbb
jge
mov
popf
lock
cld
into
push
rorl
fcomi
arpl
aaa
mov
jmp
inc
lea
dec
mov
adc
lret
adcb
leave
imul
pop
arpl
lret
add
mov
mov
pop
std
and
inc
xor
mov
stos
add
add
dec
lahf
add
dec
jb
outsl
test
mov
lods
and
adc
adc
xor
xor
scas
les
fadds
loop
and
ss
pop
repnz
mov
jl
or
clc
hlt
xchg
lret
js
cmp
cmp
mov
inc
das
push
cmp
jg
sahf
pop
sbb
pop
jno
push
scas
sti
mov
mov
or
cs
dec
cmpsl
dec
sub
fmuls
and
call
into
xchg
aaa
loopne
add
mov
jb
outsb
sub
pop
lret
jbe
xchg
dec
subb
dec
jle
jecxz
jnp
mov
push
clc
sbb
xchg
xor
xor
out
out
inc
sbb
mov
mov
pop
xchg
dec
popf
add
adc
or
ds
or
adc
mov
adc
aam
bound
sub
mov
push
mov
gs
sti
mov
and
insl
int
ljmp
fbld
pop
pusha
push
pop
scas
inc
jmp
shl
pusha
cwtl
add
pusha
call
std
ficoms
lahf
iret
repz
add
mov
jns
mov
or
jnp
mov
cltd
jne
mov
mov
test
test
sar
sub
int3
add
cmpsb
mov
enter
pop
add
les
mov
xlat
adc
jmp
sub
call
dec
stc
mov
xor
jecxz
add
hlt
popa
jne
or
lods
add
icebp
fldt
aam
insl
outsl
add
arpl
popf
lock
sbb
push
adc
and
and
iret
mov
xchg
lea
push
movsb
fsubrl
and
and
cmpl
dec
in
cmpsb
cli
pushf
outsb
cmpsl
iret
popf
and
pop
ret
stc
lods
mov
hlt
xchg
scas
aaa
xor
push
jp
dec
mov
jne
jb
or
ret
in
cli
add
sbb
insl
xor
xchg
ror
xchg
movsb
xor
push
es
test
pop
mov
cwtl
enter
dec
push
or
nop
pop
push
roll
mov
pusha
ja
pop
mov
shll
jmp
jnp
cmp
cmpsb
mov
push
psubsb
bnd
scas
push
inc
pop
pop
dec
rol
rclb
and
mov
clc
dec
test
pop
mov
hlt
xor
mov
mov
add
cltd
ficoml
mov
insl
lods
aaa
out
add
sbb
popf
sub
mov
sbb
loop
rcll
sahf
xor
inc
push
out
dec
popa
fld
cltd
loop,pn
sarl
dec
in
mov
mov
ret
aaa
test
push
and
cmpsl
mov
ss
stos
cwtl
sahf
xchg
push
jmp
mov
push
js
mov
and
arpl
sahf
jmp
ss
andl
sub
mov
dec
pop
cmp
mov
sbb
and
cmpl
sbb
mov
push
adc
lahf
hlt
push
lock
out
push
loope
fadd
add
test
mov
cmp
jne
xchg
fisubs
out
dec
add
out
aaa
clc
mov
and
dec
cmp
ljmp
daa
scas
pop
jl
push
and
adc
cltd
mov
fadds
cmp
push
cli
loope
bound
dec
xchg
sbb
pusha
idiv
sub
jg
sbb
fs
orb
or
test
sub
dec
add
lock
mov
push
sbb
xchg
cmpsb
mov
mov
lret
lea
dec
mov
aad
shlb
in
fcoml
gs
movsb
and
or
inc
dec
out
ja
lea
lock
mov
xchg
mov
mov
clc
fsubrs
jae
add
sbb
fistpll
les
mov
mov
dec
mov
mov
arpl
icebp
pop
push
aas
shrb
sub
ret
shrb
ret
pop
fcmovnb
and
jo
mov
test
in
nop
pop
dec
pop
pop
inc
mov
stc
repz
ljmp
dec
add
push
add
xchg
and
jb
cmp
dec
cmp
push
enter
mov
lock
lcall
data16
mov
divb
mov
pushf
out
inc
inc
jb
add
das
fwait
insl
cmc
mov
mov
xchg
xchg
cmpsb
sbb
sti
fwait
dec
pop
and
lds
sub
jmp
pop
test
out
add
sub
pushf
clc
clc
mov
push
sbb
add
inc
pop
adc
inc
fwait
cwtl
mov
cmpsb
inc
xor
xor
lods
insb
inc
jbe
and
iret
jae
mov
insl
bsf
in
in
cli
out
clc
in
dec
outsb
sub
in
sub
iret
lret
daa
or
inc
arpl
pop
fsubl
sbb
xchg
add
mov
sbb
mov
jg
cmp
sbb
push
lret
pop
lret
mov
daa
inc
jl
and
and
add
or
cli
into
jne
lock
ss
dec
xor
push
pop
sbb
mov
sbb
jecxz
adc
andb
loopne
cld
and
push
in
jmp
imul
jecxz
in
addr16
sub
test
clc
jb
das
fcoml
sbb
daa
sarb
mov
stos
ja
add
jae
add
xadd
pushf
sbb
pop
fistpl
rclb
aam
jno
jae
out
outsl
xchg
mov
call
ja
cmp
out
cmp
and
mov
cwtl
stos
call
stos
mov
cltd
push
movsb
mov
dec
or
push
outsl
ljmp
in
sti
xchg
xor
xlat
add
cmp
push
mov
adc
or
daa
mov
mov
movsb
data16
icebp
cltd
dec
mov
cmp
es
loope
nop
popl
mov
bound
nop
dec
outsb
mov
mov
fldenv
loopne
shlb
and
fs
xor
inc
push
dec
ss
jb
aam
push
cmp
loop
xor
aam
mov
das
or
clc
loopne
lock
insl
jne
mov
and
sbb
fwait
jl
lock
div
pop
neg
dec
std
cmp
xor
out
push
gs
cs
or
ja
pop
jnp
cmp
xchg
pusha
jae
jae
test
mov
pop
mov
push
enter
test
push
bound
add
movsb
fwait
in
rcll
push
add
dec
daa
cld
dec
jo
add
and
jge
sub
fsubrl
adc
xor
aas
dec
dec
repz
push
push
movsl
aad
add
xor
push
ret
and
pop
adcl
in
inc
and
dec
mov
test
cltd
push
fbstp
lahf
mov
xor
push
jmp
xchg
jmp
aad
imul
repz
fdivs
hlt
ja
int
xchg
inc
mov
aaa
mov
shr
fs
sbb
jne
and
add
xchg
or
xor
jl
fsubr
clc
clc
les
mov
out
test
imul
shlb
inc
add
lea
adc
mov
and
imul
roll
shrl
pop
jb
jecxz
hlt
mov
out
ljmp
jg
mov
dec
and
mov
out
mov
rorl
adc
xchg
enter
rclb
xchg
push
test
xchg
jno
aaa
pextrw
rorb
pop
cmp
test
mov
out
pop
dec
scas
xchg
out
mov
sahf
cmpsb
rorb
mov
pop
mov
push
inc
cmovge
mov
push
imul
dec
out
jmp
imul
iret
mov
xchg
rcll
pop
add
xor
nopl
xlat
fwait
jb
cmp
dec
pop
xor
jbe
xchg
push
imul
mov
xchg
fs
push
andb
insl
ret
adc
cmpsb
fmulp
dec
jb
pop
add
ljmp
jg
sub
mov
aad
pop
pusha
pop
fstps
mov
mov
adc
dec
clc
and
bound
xor
pop
std
mov
loope
lods
dec
cmpsl
dec
lods
mov
jp
cmpsl
ss
and
stos
test
inc
sbb
fdivrl
inc
xor
add
lcall
inc
pop
and
and
fmull
jmp
ret
stc
jo
pop
xchg
sarb
les
mov
jp
xchg
test
adc
outsb
xlat
adcb
ja
es
push
lea
sbb
fisubrs
es
loop
inc
mov
in
xchg
mov
stos
mov
mov
cmpsl
in
xchg
sub
cmp
scas
fucomi
call
sbb
and
les
add
aas
scas
into
pop
insl
xor
inc
inc
mov
pop
fbld
pop
sub
mov
lret
pop
cs
testl
mov
pop
adc
cmp
add
adc
leave
daa
ret
mov
ds
outsb
cmp
add
lret
popl
inc
in
daa
xchg
test
mov
adc
jl
adc
test
aaa
xor
pop
push
and
test
and
pop
xor
insl
gs
jbe
aam
hlt
lods
pop
inc
jmp
insb
xchg
fstl
mov
dec
jmp
in
daa
stos
mov
cmp
or
lock
lds
pop
pop
dec
lret
mov
movsb
adc
insl
jne
in
enter
mov
jno
rorl
and
aas
out
pop
pop
fildl
xor
jo
rcll
out
push
jl
and
mov
lea
iret
add
sbb
mov
adc
inc
cs
sub
add
dec
sahf
mov
mov
shll
mov
or
mov
aas
xchg
aad
es
add
mov
mov
insb
sbb
xchg
xchg
pushf
pop
pusha
sub
lea
xchg
mov
js
or
mov
push
and
dec
or
addr16
js
outsb
or
mov
lods
jns
ss
sub
mov
repnz
push
fucomip
mov
mov
adc
adc
lods
inc
sub
inc
mov
in
jb
push
cld
popf
out
or
mov
lcall
cmp
std
stos
mov
mov
push
adc
stos
sti
jmp
repnz
stos
nop
mov
dec
lods
adc
cmp
outsl
je
inc
mov
cli
or
mov
stos
popa
xchg
adc
sub
rcr
push
aam
cwtl
test
sarb
or
rcrb
jne
jb
ret
sub
jl
enter
sub
in
dec
xchg
sub
imul
cmp
push
outsb
sbb
inc
outsl
cmc
adc
pop
sbb
pop
cmp
dec
jne
adc
int3
and
mov
or
xchg
and
movsl
adc
jno
mov
je
insl
daa
movsb
cmpsb
jb
cltd
icebp
repz
ja
je
testb
cmp
or
jl
jbe
loope
cmpsb
andb
inc
lock
into
aas
lock
dec
xchg
movnti
mov
mov
sbb
add
xchg
in
jns
inc
data16
inc
addps
cmp
inc
test
cmp
or
cmpsl
stos
cmc
inc
push
test
and
lea
in
loope
iret
je
dec
loopne
dec
cmpb
out
dec
fld
jg
sub
popa
cs
popf
sbb
pop
in
xchg
aam
sbb
xchg
or
jnp
jbe
jbe
and
mov
dec
lods
outsl
add
pop
push
out
inc
fsubl
adc
jmp
and
stos
dec
push
addr16
shlb
push
sub
sbb
rcll
mov
inc
popf
sub
decl
push
pop
into
in
and
shl
in
xor
cwtl
dec
hlt
repnz
outsl
icebp
fwait
movsl
sbb
arpl
out
shlb
int
in
inc
loopne
adc
sbb
lret
loopne
mov
adcl
mov
jno
xlat
loop
in
rolb
int3
cltd
aad
mov
sbbl
jns
pop
add
pusha
cld
lcall
jmp
scas
pop
mov
cmp
sti
dec
mov
popa
push
stos
or
cmp
test
mov
pop
and
and
sbb
insl
sbb
mov
loopne
fisubrs
sub
cmp
sti
jno
jle
add
pop
inc
pop
push
cld
mov
clc
push
mov
add
pop
pusha
fldt
pop
fwait
rcll
bound
iret
jp
mov
das
aam
and
push
loopne
in
std
inc
in
lea
add
cld
pop
cwtl
xchg
xchg
mov
and
or
jnp
add
inc
insl
mov
mov
pop
add
cmc
jmp
aaa
mov
mov
pusha
xchg
mov
lea
sbb
movsb
popf
out
fnstcw
in
push
pop
scas
dec
insl
add
in
out
sub
cmp
mov
xchg
negl
or
sbb
stos
inc
pop
sbb
sub
and
ret
loope
aam
movsb
lret
ss
jb
fisubs
jmp
nop
xchg
and
addl
push
out
idiv
lds
xor
ficoms
ljmp
std
push
stos
sbb
mov
nop
rcrl
add
cwtl
pop
bound
xchg
movsb
ret
loop
and
lret
inc
test
pop
mov
cmpsb
cmp
mov
adc
push
mov
clc
xor
xor
mov
lcall
insl
mov
add
dec
xorl
test
xor
push
push
pop
jbe
sarb
fwait
es
rcll
outsb
sbb
jo
call
in
cmpl
adc
out
out
les
sbb
mov
mov
fisttps
mov
fidivrl
pop
jnp
call
pop
iret
or
pusha
stc
and
push
mov
jge
push
add
incl
or
pop
int
mov
in
outsb
sbb
sub
cmp
cs
jecxz
mov
and
or
mov
dec
add
jecxz
std
iret
push
insl
mov
mov
sub
cmp
rcll
inc
jb
mov
sub
sbb
xchg
sub
mov
sub
and
mov
add
xchg
dec
out
lahf
ljmp
push
dec
movsb
xchg
jge
sti
outsl
mov
sbb
sbb
rclb
inc
add
sbb
clc
sub
xor
stos
rol
scas
push
inc
inc
inc
mov
fcoms
inc
imul
in
js
pop
xchg
sub
cld
push
xorl
jp
mov
cmp
mov
or
daa
rolb
push
push
mov
fcoml
jge
sti
push
dec
push
xor
gs
ss
and
sub
lret
insl
adc
adc
mov
push
inc
xor
xor
inc
adc
push
in
xchg
mov
cmpsl
xor
lods
inc
sub
ret
imul
enter
push
add
mov
dec
push
push
imul
test
dec
add
lcall
inc
aad
fs
pusha
jnp
pop
xor
in
pop
sbb
cmp
je
hlt
fmull
push
dec
xor
push
mov
outsl
out
daa
test
pop
adc
jo
arpl
jno
orb
pushf
pop
push
xchg
add
movsb
add
repz
pop
or
adc
fwait
dec
arpl
jbe
add
mov
fistpl
adc
xchg
int3
out
mov
fwait
aaa
push
sbbb
gs
lret
movsl
jmp
xor
shlb
test
fs
addb
mov
or
lahf
xchg
andb
cld
pop
ds
repz
fsubr
jo
push
mov
pusha
inc
dec
jle
push
stos
out
push
sbb
fucomp
inc
adc
mov
rorl
inc
cmp
sub
cwtl
jge
push
das
pop
in
iret
jo
push
jae
stos
mov
pop
subl
movsb
adc
int3
xchg
popa
sub
or
push
ja
cld
mov
pushf
arpl
cmp
jecxz
adc
jo
aam
pop
cmp
popa
mov
js
pop
xchg
mov
fnstsw
mov
in
xor
lea
lea
jbe
sub
sbb
jle
sub
dec
test
xor
hlt
lcall
cwtl
xor
dec
pusha
repz
popa
pop
adcb
and
mov
sbbl
lds
pop
inc
mov
adc
and
sub
stos
popf
and
cmp
leave
into
ja
cmp
xor
gs
iret
lods
imul
pop
cld
insl
loope
clc
pop
pop
je
imul
outsl
jg
je
pmaddwd
std
jmp
jl
xchg
das
adc
sub
mov
push
jl
mov
jae
enter
sbb
and
or
xor
sub
sar
mov
stc
aad
push
clc
scas
scas
insb
lock
pop
lods
fstpl
stos
test
mov
jns
xchg
jmpw
out
test
jecxz
add
insb
sbb
loopne
inc
mov
insl
cmc
xchg
rcll
jbe
jns
popl
test
inc
je
addb
jge
or
inc
cmp
push
es
cmp
cmp
adc
push
xchg
in
loopne
dec
mov
in
movsb
xchg
jg
mov
cli
xor
jp
mov
shrb
add
cmp
mov
adc
push
cmpsb
cs
adc
in
xchg
mov
data16
andb
jg
fimuls
divl
push
xchg
xchg
sbb
adc
icebp
dec
xchg
pop
jne
sbb
stc
sar
iret
mov
imul
in
fnstenv
repnz
adc
or
std
push
xchg
xchg
test
call
nop
adc
pop
add
iret
jne
enter
lret
add
testl
jno
and
mov
and
add
and
sub
push
mov
xor
mov
sti
adc
or
adc
pushf
loope
movb
pop
fwait
push
gs
push
cld
push
add
push
in
inc
daa
cwtl
pop
sti
je
fdivrp
sub
int
btc
insb
into
xchg
and
xorl
cmp
sub
and
das
cmp
je
push
in
xor
call
push
aad
out
js
adc
jnp
icebp
xor
jb
outsl
lods
or
mov
xor
fadds
mov
sub
pop
std
inc
mov
push
stos
xchg
mov
popf
xchg
sbb
dec
loope
dec
pop
cs
cmp
add
or
xchg
inc
dec
arpl
and
jg
aaa
mov
xchg
aam
lods
sub
push
adc
dec
jge
je
icebp
cld
jbe
aad
icebp
fwait
mov
inc
mov
andl
arpl
iret
fxch
adc
outsl
jle
xor
cmp
inc
inc
inc
mov
mov
lea
cli
lahf
mov
or
jg
lahf
dec
test
insl
outsb
data16
jmp
loope
pop
mov
dec
sbb
push
mov
mov
lods
sarb
imull
ficomps
mov
pop
cmp
aaa
mov
and
in
out
jg
xor
and
dec
les
stos
stos
imul
jns
sub
std
push
cmc
fwait
pop
cltd
mov
jnp
iret
dec
js
dec
jo
daa
mov
jge
adc
data16
out
lods
ret
lret
sub
lahf
enter
dec
je
faddl
sbb
push
cmp
movb
aas
sbb
and
daa
pop
fstpt
inc
icebp
stos
pop
inc
pop
dec
shrl
and
mov
out
cltd
ja
inc
loopne
fiaddl
out
int
movsl
xor
xor
add
fcmovbe
mov
aaa
dec
push
cmp
gs
idivb
sbb
fildll
shrb
add
int
icebp
xor
cs
ret
data16
and
les
mov
xlat
dec
adc
pop
hlt
ljmp
jl
pop
sbb
xor
dec
inc
fxch
xor
xchg
inc
in
mov
pop
loop
jae
imul
pop
sbb
cs
gs
xchg
pop
aad
xchg
mov
mov
jmp
cmp
int
cmp
mov
jns
push
sub
dec
and
js
mov
mov
fcmovnb
dec
out
cmpb
scas
cmp
sub
jno
subb
idivb
pop
add
xchg
fdivrs
lds
sbb
or
shll
mulb
mov
sub
add
sbb
mov
mov
cmp
jge
in
jp
std
mov
pop
jno
fiaddl
pop
xchg
inc
ret
stc
mov
fldt
dec
add
add
mov
mov
or
sti
es
inc
loope
outsb
lret
xchg
pop
fists
xchg
fmul
add
mov
jp
pop
mov
mov
inc
shlb
movl
xchg
pop
sbb
test
adc
cmc
sub
enter
mov
push
mov
jmp
popf
cmpb
mov
jle
adc
mov
aad
fisttpl
faddl
into
mov
add
push
cmp
in
cmc
repnz
and
sbb
mov
pushaw
jmpw
pushf
pop
jg
mov
rcrb
push
and
pushf
inc
push
outsb
out
pop
cmc
popf
xor
and
adc
xchg
inc
ss
lahf
adc
mov
sti
jecxz
int
pusha
in
popa
push
rolb
sub
dec
ret
add
xor
and
in
jae
addr16
loop
xchg
mov
in
or
fs
in
aaa
jge
sbb
mul
ror
gs
mov
and
jnp
mov
add
cmp
stos
out
adc
inc
rol
adc
inc
hlt
sub
sahf
pop
jge
movnti
mov
insl
xor
sahf
mov
inc
jae
xchg
xchg
dec
mov
in
fidivrs
stos
aas
sub
cmpsl
adc
sbb
lahf
pop
fldt
mov
outsb
mov
or
cmp
enter
test
in
jb
loop
nop
xchg
mov
fistps
in
mov
jl
loop
mov
sub
pusha
mov
repnz
loope
loop
cld
sahf
js
inc
mov
xchg
dec
lds
enter
jbe
or
enter
setg
add
in
mov
repnz
out
cmp
adc
and
lcall
in
aas
adc
sbb
stos
pop
cmp
and
ret
mov
cli
pop
mov
sub
jne
xchg
lea
pop
mov
movsl
mov
bound
fisubs
gs
addl
add
test
fs
insb
cmpsl
push
into
sbb
mov
hlt
push
ja
adc
movb
loopne
inc
jns
push
mov
mov
cld
mov
adc
pop
push
lahf
insl
mov
int3
js
ret
jbe
jnp
cmp
aaa
adc
xlat
rcrb
cmp
and
testl
lods
cltd
call
clc
bound
add
pushf
jl
and
lods
sbb
sti
fsub
std
and
aad
lds
jl
xchg
loop
mov
pop
ljmp
mov
jbe
dec
or
or
inc
dec
in
shrb
fscale
push
lcall
inc
sub
cwtl
or
cmpsb
fwait
cmp
cmp
sbb
sti
mov
ss
adc
popa
gs
fbstp
arpl
jno
std
inc
xchg
mov
add
sarl
and
or
bnd
stc
cmpsl
mov
nop
push
in
fcmovne
rcl
push
sbb
mov
add
push
out
xchg
outsb
or
cmp
rcrl
push
push
mov
rcl
pop
shll
dec
xor
in
sti
mov
fwait
cmp
jg
movsl
fs
fsubs
adc
jle
push
add
sub
ret
or
cmovno
lods
cli
push
dec
cmp
lahf
popf
jg
dec
mov
pop
es
cwtl
mov
lret
pop
xchg
leave
push
xchg
push
mov
outsl
and
in
int3
adc
inc
test
subl
jle
and
mov
sti
std
dec
xor
fs
mov
pavgw
int
aam
insl
addr16
cli
cs
push
adc
repnz
adc
pop
pushf
sub
imul
adc
adc
xor
dec
repnz
sbb
xchg
jg
add
mov
dec
push
xchg
in
mov
inc
in
dec
cmpsl
adc
pop
push
inc
test
test
mov
push
lahf
cmp
daa
jl
fnstenv
xor
sub
mov
add
xchg
xor
pop
fadds
jns
sbb
mov
out
inc
je
jne
or
push
js
pop
daa
je
cmpsl
sbb
stos
mov
int
cmpsl
and
pop
dec
cltd
arpl
xchg
lahf
popa
in
inc
sub
mov
test
daa
stc
sahf
mov
rclb
loop
sbb
xchg
lret
stc
jle
sbb
inc
pop
stos
dec
sbb
xor
dec
pop
mov
pop
pusha
testl
and
push
pop
loop
xchg
dec
cwtl
mov
repnz
gs
sar
push
lahf
lods
adc
lods
out
popa
icebp
jl
clc
rolb
mov
lret
sub
leave
xor
sbb
fisttps
add
jge
jle
jmp
mov
inc
add
fidivrs
sbb
in
xchg
push
roll
pop
push
push
mov
lret
je
lods
scas
rcrl
fnstenv
adc
xchg
clc
jg
iret
xchg
fiadds
lret
dec
mov
lret
decl
mov
add
xchg
enter
pop
leave
cmpsb
in
xor
ret
jl
mov
mov
mov
gs
pop
notb
add
jle
dec
push
push
cmp
mov
mov
and
and
sbb
call
sbb
push
dec
je
jo
test
mov
bound
test
in
sahf
out
adc
lret
add
popa
decb
and
outsl
jo
test
pusha
mov
xlat
mov
pusha
leave
andb
fiaddl
dec
fcoms
adc
pop
pop
lock
pop
push
repz
push
je
popf
fldl
scas
sbb
pop
push
add
scas
fcomps
orb
repnz
dec
mov
mov
lcall
adc
adc
xor
lock
cmp
xchg
xchg
mov
pop
in
dec
sbbb
fs
es
inc
jns
mov
rcl
ss
cld
gs
pop
lcall
sbb
mov
repz
pop
repz
test
or
ficompl
rcrl
mov
mov
adc
xor
shr
sub
adc
or
js
cmp
xchg
imul
mov
push
subb
dec
in
mov
add
lds
ficomps
fimuls
dec
pop
fs
enter
mov
sbb
ret
inc
dec
in
scas
mov
lea
scas
test
sbb
mov
xorb
add
fnstenv
pop
sub
pop
lods
fcompl
loopne
dec
push
mov
sbb
sbb
adc
adc
ljmp
bound
ss
dec
lret
js
mov
mov
lods
mov
call
jnp
incb
in
enter
decl
subl
aam
cmpsb
insb
aad
adc
cmpsb
xor
std
ret
push
mov
cmp
cs
popa
vcmpps
sub
cmpsl
jno
push
pop
push
shr
popf
stc
das
int
mov
push
jmp
push
testl
mov
mov
mov
frstor
or
fnstenv
hlt
into
and
mov
outsl
cmp
xchg
xchg
call
ds
jle
dec
sbb
pop
mov
xchg
xor
fyl2xp1
in
lods
je
cmp
bound
repz
pop
push
fdivl
insl
loope
sub
lock
das
add
xchg
fwait
or
ficompl
inc
cmpsb
pop
adcl
les
in
or
mov
xchg
and
cmpsl
jp
stos
sbb
incl
dec
push
or
ss
pushf
xor
xlat
scas
out
xchg
inc
and
mov
in
jl
lock
cwtl
xchg
cmp
inc
and
xor
pop
sbb
push
test
mov
fiadds
repz
enter
shlb
lods
mov
xchg
cmp
arpl
imul
dec
ljmp
stos
aad
adc
out
mov
into
hlt
das
arpl
inc
imul
movsb
mov
push
add
shl
adc
jg
or
cmp
bound
fldl2t
mov
cmp
adc
jne
push
stos
mov
mov
data16
mov
cmpsb
hlt
adc
cwtl
movsl
pushf
repnz
push
fidivl
push
cwtl
cmp
loope
pop
inc
out
jb
inc
cltd
mov
rclb
std
mov
hlt
sub
or
nop
adc
cld
sub
inc
inc
jae
inc
sbb
shr
or
cltd
push
cmp
or
das
cmp
sbb
adc
push
pop
jmp
ret
xor
cmp
fs
sub
notb
aas
popf
jle
cmp
inc
pop
sub
test
xchg
cmpsl
mov
cltd
mov
sarb
mov
push
pop
push
xchg
cmpsl
adc
sub
ja
fisttpl
pop
push
fimull
sbb
jl
shrl
in
cli
mulb
sub
mov
push
mov
ss
pop
mov
mov
lds
aas
loopne
sbb
das
into
pop
jge
mov
pop
sbb
scas
mov
icebp
imul
notl
mov
lret
ret
ret
dec
jg
jo
clc
xor
sub
ret
lret
int
add
mov
pop
mov
and
aaa
nop
popf
mov
dec
cli
xchg
mov
cmp
fildl
cs
jne
jp
aad
orl
repz
cmp
inc
or
mov
jp
sub
adc
xchg
sbb
fs
inc
ds
xchg
or
adcb
pop
mov
cmp
stos
ret
sub
or
int
jae
loope
push
out
icebp
inc
lret
inc
gs
mov
and
mov
mov
inc
movsl
or
push
out
into
cmp
inc
push
hlt
pop
and
jecxz
jge
push
xor
lods
sub
fdivs
xor
adc
xor
ja
ds
jmp
push
jnp
adc
scas
push
inc
fsubs
test
xor
jo
pop
xchg
rolb
sbb
rcr
cmp
cmp
lods
ljmp
cmp
mov
decl
in
shl
ja
lret
shl
pop
sbb
pusha
mov
dec
insl
pop
xchg
scas
pop
fprem1
mov
in
jp
dec
jp
lret
cwtl
sub
sbb
out
enter
lea
inc
mov
adc
fisubl
fldt
mov
fstpl
cmp
scas
or
outsl
add
lahf
test
or
sbb
ds
or
xchg
cmpsl
cmp
xchg
jo
xchg
push
test
push
cmp
sahf
or
mov
inc
sahf
add
pop
rol
pop
pop
mov
loopne
aam
dec
jp
repz
int
repnz
or
fdivr
push
hlt
jecxz
xchg
pop
push
movsl
cmp
fsubr
testl
jbe
jb
dec
and
roll
jo
movsl
mov
pop
push
fsub
and
fdivrl
push
mov
mov
jo
pop
pop
clc
cmp
fnsave
or
icebp
xchg
aaa
stos
lods
add
push
xlat
lock
jne
xchg
lahf
call
xor
enter
cmp
push
pop
bnd
pop
push
xor
add
xor
fucomip
cmpsb
stos
jae
daa
ja
jno
ds
adc
in
xor
pop
mov
mov
dec
fs
in
subl
addr16
enter
push
fldcw
je
scas
das
leave
loop
addr16
pop
xchg
xor
xlat
push
pusha
out
cmpsl
out
push
fsubp
push
push
xor
fucomip
insb
or
sysenter
xor
pop
mov
aas
jb
xor
arpl
sbb
lret
les
popa
mov
mov
aaa
data16
sub
or
mov
jge
stos
int3
cmpsl
mov
inc
sub
das
fsubl
xchg
and
xchg
std
mov
mov
push
sahf
jg
out
stos
or
aas
jo
ja
dec
dec
arpl
add
inc
notb
cmpsl
jns
aas
mov
out
loope
and
dec
dec
fiadds
test
test
push
mov
pop
mov
add
push
adc
in
push
jbe
jge
imul
or
fbstp
dec
inc
daa
testb
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
pusha
std
mov
push
lahf
mov
fldenv
jne
cld
push
mov
subl
sub
mov
scas
hlt
inc
add
jnp
test
mov
mov
cmp
jb
lret
xchg
ror
sbb
mov
nop
in
repz
aaa
and
push
std
push
cmc
call
test
pop
mov
aam
xchg
je
jo
fsubrs
mov
sbb
xor
jae
mov
mov
dec
hlt
stos
mov
and
icebp
negb
in
je
mov
stos
mov
loop
dec
and
jb
cmpsb
inc
cmp
sbb
je
xchg
arpl
mov
push
fsts
enter
sbb
nop
xor
andl
mov
data16
add
sbb
mov
pop
mov
in
xchg
pop
or
mov
cmp
sahf
mov
push
pusha
pop
xlat
jmp
inc
inc
sub
or
in
je
push
mov
dec
and
pop
test
xchg
mov
pop
lods
fs
test
fwait
bound
dec
push
scas
in
jbe
inc
andl
xchg
pusha
cmp
and
add
cli
jae
adc
push
jmp
lds
movsb
je
lret
mov
mov
dec
pusha
pop
xchg
mov
and
push
xor
xlat
lahf
data16
in
push
jae
dec
rcl
sbb
sti
call
cmp
les
clc
adc
xor
es
nop
jg
xchg
dec
pop
scas
cmpsl
aas
mov
add
cmp
dec
push
stos
mov
gs
out
mov
lea
mov
push
sarl
sarl
xchg
xchg
add
sbb
loopne
test
test
push
sbb
mov
in
xor
repnz
enter
or
sahf
in
loop
sahf
mov
xor
shll
pushf
pushw
leave
insb
aam
mov
jmp
add
imul
xor
cwtl
xchg
loop
inc
mov
testl
jo
xchg
inc
imul
scas
test
cmp
mov
orl
push
sbb
dec
push
in
push
sub
faddl
in
int3
into
aas
test
sbb
adc
push
pop
jb
pop
or
lods
push
out
jecxz
xor
sbb
outsb
push
inc
test
pop
xor
dec
in
fsubs
fs
jp
xchg
mov
subb
pop
negl
xchg
ljmp
dec
add
jno
inc
mov
adc
pop
mov
adc
aaa
pop
sub
xor
js
les
or
or
dec
ss
mov
loope
fcmovne
je
jge
popf
mov
js
dec
nop
and
cmp
pushf
roll
push
mov
cltd
jmp
jo
sub
dec
out
adc
add
call
xlat
ja
sti
dec
ret
mov
sbb
mov
dec
outsl
xchg
jne
mov
in
rcrl
movsl
inc
mov
clc
fstl
cli
adc
dec
jb
lahf
xor
dec
leave
mov
pop
aaa
jb
sub
sub
adc
adc
mov
mov
jne
xchg
sub
jb
pop
cltd
sbb
sub
leave
sahf
sub
xchg
ds
xor
in
mov
push
test
dec
int
jmp
fistps
movsl
test
xchg
add
cmp
adc
mov
pop
shll
sub
mov
add
enter
js
scas
pop
sarb
inc
adc
push
icebp
cltd
arpl
add
mov
data16
jnp
aaa
in
xchg
xchg
or
rorb
sub
dec
mov
cmpb
pop
repnz
jmp
sbb
adc
xchg
cmp
clc
subl
jmp
sub
pop
inc
jne
push
cltd
mov
xor
je
jne
fs
and
test
push
cmpsb
pushf
push
out
pushl
dec
cmpsl
or
mov
pop
push
in
pop
bsf
adc
sbb
mov
mov
addl
aas
lods
lods
or
insb
mov
bnd
fldenv
test
pushf
sbb
insb
add
push
leave
in
mov
dec
and
imul
inc
enter
or
xchg
ss
sbb
jge
movsb
jo
push
ret
mov
out
in
jp,pn
dec
xchg
pop
mov
movb
rorb
pop
mov
mov
scas
in
dec
cmp
mov
mov
shlb
lods
mov
lahf
pop
lods
jae
and
aas
mov
testb
call
dec
xchg
incl
jb
out
and
add
loop
wrmsr
mov
jae
xchg
inc
insl
pop
cmp
dec
pushf
inc
dec
inc
mov
subl
xchg
xchg
dec
jbe
xchg
repnz
iret
or
lock
sbb
std
les
jle
mov
and
sbb
xchg
rclb
add
mov
and
push
xchg
cmc
or
testl
inc
dec
push
dec
dec
daa
pop
lea
xor
jl
inc
add
mov
dec
sbb
jp
popf
adc
sub
push
stos
cmovg
inc
push
jmp
imul
lock
icebp
iret
add
and
add
pop
bound
hlt
pop
fbstp
sti
fwait
mov
mov
jge
and
lret
lret
cltd
icebp
mov
mov
lods
mov
xor
arpl
out
xlat
int
lods
ja
jb
mov
jbe
xchg
lods
mov
cmp
sub
pop
or
pop
adc
imul
negl
mov
fucomp
das
jmp
stc
std
popa
sub
sbb
cli
arpl
aam
pop
lcall
jl
out
push
push
std
push
in
jo
xchg
daa
mov
in
jb
or
mov
adc
mov
xlat
es
sbb
mov
jge
lahf
aas
xchg
add
push
mov
cmp
fnstenv
xlat
pop
jge
sbbl
xlat
movsl
and
inc
int
pop
add
xchg
sub
mov
xchg
insl
fcmovnb
xor
push
push
sahf
loop
mov
sub
pop
jge
repnz
and
test
ficoml
or
stos
jecxz
je
push
cli
sbb
js
dec
popa
jl
movsb
or
cmp
mov
hlt
mov
jne
pushf
sub
mov
inc
jns
or
cmp
ret
inc
push
jno
cmp
push
push
sub
add
inc
dec
pop
fstps
pop
lahf
fwait
mov
push
or
cmpsb
int3
dec
and
xor
push
xchg
inc
das
xchg
test
je
push
push
lds
jmp
mov
push
push
xchg
mov
lret
addl
inc
cmc
or
pop
cmpsl
and
loop
lods
js
and
sahf
xor
idiv
pop
push
or
inc
xor
sub
cmp
lods
int
cltd
test
pop
sub
adcl
stos
push
fdivl
xchg
imul
fisttpll
out
or
jo
out
outsl
fcomi
outsb
push
cwtl
jbe
add
lods
adc
jl
ficoml
or
cli
mov
in
and
push
hlt
or
push
dec
and
sbb
dec
jg
arpl
jb
sarb
dec
push
jb
xchg
mov
outsl
adc
ja
and
cmp
jne
xor
rorb
jmp
mov
lods
jge
push
jecxz
sub
imul
fsubrs
push
jecxz
inc
cmp
imul
push
pop
add
adc
jns
lcall
lock
aaa
jb
mov
mov
fcmovu
popa
ret
lods
lcall
out
pop
inc
jmp
jmp
xor
lcall
dec
cmp
lods
and
lret
adc
lods
cs
dec
sbb
xlat
mov
ljmp
inc
dec
jo
cs
mov
pop
lods
scas
mov
arpl
and
jo
lahf
jmp
sbb
cmpb
dec
inc
mov
fmul
sbb
adc
movsb
cmp
pop
adc
cmp
testl
mov
negb
jno
and
add
or
js
cmp
enter
xchg
outsb
mov
fistpl
sub
gs
neg
ret
pusha
aas
jb
frstor
pusha
xor
movsl
test
sub
pop
ret
sub
lds
or
fdiv
sub
fs
cmpl
lock
jb
push
push
rcrb
inc
test
mov
cmp
inc
sbb
outsl
scas
std
mov
hlt
out
or
lock
push
pop
pop
push
stos
fbld
pop
jo
push
mov
rep
xchg
pop
cld
push
rolb
pop
std
lock
lret
pop
jge
daa
addr16
loop
dec
and
jae
sub
push
push
cmc
ficompl
mov
aad
lods
fldl
push
out
xor
fcoml
sub
aad
jmp
and
adc
jg
fwait
mov
enter
call
cmp
sub
mov
icebp
add
push
aas
pop
nop
cld
cwtl
or
adc
hlt
aas
shr
mov
cmp
popa
pop
ljmp
push
xchg
mov
loopne
cmc
nop
cltd
mov
pop
mov
jnp
negl
inc
repz
inc
mov
aam
mov
inc
adc
sahf
stos
cmpsb
mov
jbe
sbb
mov
xchg
std
push
movb
clc
push
jg
cmp
aad
jno
mov
adc
xchg
fwait
mov
jbe
scas
inc
xchg
mov
fstl
sahf
xchg
hlt
adc
aam
xchg
jle
dec
cmpsl
and
fldl
pushf
xchg
sub
or
mov
dec
or
sbb
lods
fildl
jb
scas
and
pop
pop
adc
mov
push
adc
out
arpl
sbb
jecxz
mov
mov
add
xor
ja
pop
arpl
in
arpl
test
sbb
arpl
sti
push
in
xchg
sbb
ror
rclb
or
fs
jp
je
add
stos
les
scas
movsb
popf
sub
jb
and
cmpsl
jbe
dec
add
scas
js
jle
dec
test
or
xchg
fwait
xchg
mov
sti
enter
pop
jge
cmc
out
popf
pop
jg
inc
xor
sub
push
push
push
or
or
inc
adc
pop
sbb
pop
sar
iret
inc
jb
imul
jp
out
int3
xchg
sbb
fnstcw
mov
scas
jl
mov
fnstcw
jecxz
shlb
jb
mov
cwtl
repnz
stos
lods
test
inc
mov
ss
adc
imul
sub
jmp
mov
data16
inc
adc
or
in
loop
imul
nopl
xchg
lret
andl
std
outsb
std
cmp
rcrl
cmp
jmp
mov
stc
fincstp
xor
jbe
pop
pop
and
out
or
ja
sub
mov
ja
popa
cmp
jl
mov
lods
mull
pusha
cmpsl
inc
mov
aaa
stos
loope
lods
adc
lahf
xchg
mov
ret
mov
fstpt
add
lret
ljmp
inc
cli
push
sub
les
roll
lock
lods
shlb
bound
es
cmp
push
test
or
jmp
and
push
fisubrl
clc
add
mov
add
mov
cwtl
mov
adc
scas
in
stos
jnp
fcomps
enter
and
mov
or
cltd
inc
repz
pop
icebp
test
xchg
inc
fmull
lock
dec
popa
int3
cmc
and
test
shll
push
and
ret
inc
add
dec
shlb
mov
cmpb
lock
shlb
in
addr16
das
cs
sbb
in
jnp
cmp
mov
mov
repz
jle
xchg
dec
xorb
rcrb
roll
test
ret
mov
dec
pop
clc
loopne
jg
fs
stc
int
mov
in
iret
test
imul
dec
dec
aam
adc
or
lahf
iret
mov
scas
cmp
mov
cmpsb
dec
mov
in
cmpl
test
imul
test
orl
lahf
fadds
aas
lea
pop
cs
or
in
cmpsb
sti
fdivs
in
test
or
cmp
pop
jp
xchg
sub
push
sti
inc
lods
jae
test
inc
push
fmuls
mov
jo
cmp
cwtl
stos
lahf
xchg
inc
repz
popa
inc
mov
mov
xchg
or
in
xor
cli
dec
pusha
inc
xchg
xchg
sbb
pop
pop
xor
push
daa
cmpsb
push
cmpsb
dec
aam
inc
mov
push
in
data16
jmp
xor
push
xchg
lret
cmpb
pop
xchg
add
es
jl
js
addr16
fisubrl
dec
adc
rclb
mov
jbe
jnp
fcmovnbe
dec
lds
iret
sbb
loope
xchg
cmpsb
adc
out
jne
xlat
vprotd
sub
popf
lahf
ja
andb
push
out
xor
inc
divl
sbbb
add
mov
sbb
out
push
jg
xchg
sub
test
jo
jo
push
std
jl
fsub
pop
stos
in
lea
pop
mov
add
rclb
mov
int3
sti
or
mov
test
cmpsl
ret
push
mov
or
mov
and
dec
clc
outsl
fcoms
add
add
adc
in
idivl
pop
ret
mov
mov
and
or
frstor
fwait
sbbl
sub
inc
fdivr
lea
stc
xchg
ds
adc
daa
push
and
aaa
or
out
pusha
mov
cmp
add
pop
jne
dec
xchg
clc
sbb
sahf
rol
lahf
mov
test
adc
add
jns
and
fsubs
gs
out
std
mov
pop
insl
mov
and
dec
jo
xor
mov
push
pop
inc
testl
mov
mov
shrb
mov
mov
imul
daa
push
adc
xchg
sub
dec
outsl
ficoml
iret
fdivrs
mov
hlt
das
sahf
push
sub
ss
leave
leave
in
xchg
call
repnz
pop
mov
mulb
jp
out
mov
add
vpcmpeqd
fwait
shlb
into
dec
mov
adc
jnp
sahf
sahf
dec
inc
lods
inc
jg
sub
sahf
das
pop
cs
pop
xchg
cli
xchg
or
push
ret
daa
pop
sti
daa
jns
fidivs
popa
xchg
imul
push
xorl
pop
clc
mov
sbb
dec
scas
mov
popa
sbb
loopne
lret
jns
push
dec
mov
cmp
xorb
cmp
xor
mov
outsl
add
popf
addr16
or
or
je
adc
ja
fbld
jp
dec
pop
inc
jae
inc
out
pop
cli
cli
xchg
push
das
pop
and
dec
push
sub
movsb
ljmp
ja
inc
sbb
pop
sub
lds
out
sbb
int
orb
or
add
in
pop
sahf
xchg
int3
das
mov
mov
les
scas
xchg
inc
lahf
dec
xchg
mov
test
push
push
or
push
or
daa
cld
out
mov
lds
lahf
xor
push
movsb
mov
inc
shl
cs
add
rclb
or
xor
push
mov
cld
jge
mov
negl
out
sbb
lods
sbb
cs
mov
inc
sub
fiadds
or
inc
outsb
and
int
jmp
sbb
jns
inc
bound
inc
mov
dec
dec
filds
cmp
sub
divb
in
mov
test
adc
sbb
pop
loop
lahf
jae
ret
add
imul
fs
sub
addl
ud0
mov
jnp
xchg
cmpsb
test
or
fistpll
ss
adc
mov
fimuls
add
rorb
jle
cmp
inc
xchg
fstl
mov
mov
insb
jle
dec
repz
daa
jge
fisttpll
data16
int
jbe
inc
test
add
and
add
inc
xchg
pop
inc
mov
je
stc
int3
mov
xor
and
ja
movsb
fdivrs
out
cmpsb
les
arpl
jno
shrl
xchg
sbb
cmp
fstl
mov
cmpsb
imul
and
mov
rcrb
xor
idivb
fiadds
ret
inc
inc
popf
movsl
test
loopne
insb
daa
inc
mov
aaa
jecxz
shlb
dec
fwait
dec
and
inc
imul
insb
xor
out
jnp
mov
jo
ss
addr16
mov
test
jle
add
clc
mov
or
std
out
sub
sub
mov
pop
sbb
out
jae
in
add
test
mov
enter
inc
aas
dec
neg
jnp
sar
xchg
outsb
pop
pop
or
push
pusha
dec
in
push
adc
push
push
sbb
cmp
vcvttpd2dqy
and
xorl
fistl
in
mov
aas
cmc
pusha
adc
push
repnz
scas
add
sbb
add
or
loop
xchg
dec
inc
enter
inc
xchg
dec
mov
inc
aad
aas
mov
push
jl
pop
out
rcrl
test
test
push
sub
add
dec
add
jp
std
mov
lods
lea
in
inc
mov
jbe
or
aaa
jae
jp
ljmp
cli
or
push
pop
and
pop
sbb
cmpl
fldl
and
dec
outsb
pop
add
mov
testl
lods
lcall
out
dec
dec
arpl
mov
jecxz
ud1
or
dec
dec
ja
adc
push
dec
popl
decl
loope
push
lods
bnd
mov
pusha
adc
xor
icebp
test
inc
arpl
hlt
or
jmp
dec
test
jle
aaa
ljmp
mov
ss
cltd
sti
mov
mov
fistpll
inc
push
insl
and
in
add
hlt
push
insl
cmp
pop
lds
aam
pop
testb
shll
and
in
cld
or
ds
daa
arpl
pop
dec
rorb
fcomp
mov
addb
ljmp
daa
push
jecxz
lret
pusha
mov
lea
mov
push
loope
pusha
mov
aaa
xchg
xor
imul
mov
sbb
xor
cmpsl
fidivl
aaa
mov
mov
adc
fstps
mov
push
in
dec
pop
loopne
daa
into
shll
push
cld
pop
es
adc
push
pusha
mov
xor
push
sahf
outsb
stc
mov
dec
rclb
iret
cmpsb
ja
test
inc
or
test
mov
xor
and
movsb
fs
xlat
mov
sbb
aad
daa
lock
mov
icebp
lods
clc
cwtl
mov
add
cmp
rorl
pop
dec
shlb
xchg
js
lods
rorb
or
sbb
jge
orb
sahf
dec
xor
test
dec
lds
push
pop
mov
jno
clc
vprotb
insl
in
dec
pusha
out
das
aaa
jae
jp
adc
xor
ljmp
pop
cmc
jecxz
push
cmc
sbb
mov
in
or
mov
mov
je
or
dec
push
jb
imul
aam
mov
xchg
loopne
sbb
push
int3
cwtl
loope
cmp
inc
sub
push
push
jns
rolb
jg
xchg
call
mov
sbb
aaa
xor
jge
pusha
cmp
negl
pushf
add
ja
xor
pusha
std
cmp
sti
cltd
jge
outsl
iret
pushl
popf
adc
adc
push
inc
mov
xchg
jmp
stos
pop
aaa
pop
add
mov
xchg
stos
push
popa
or
test
jns
pop
js
hlt
enter
mov
popa
pop
sbb
xchg
sbb
sub
ret
daa
cmpsl
imul
push
outsl
xchg
jge
fstps
test
xor
test
es
inc
pop
xlat
sbb
pop
js
nop
sub
into
adc
mov
xchg
mov
dec
js
arpl
subb
sbb
xchg
clc
aaa
rcrl
js
ljmp
vpsrad
aas
mov
stos
xchg
jmp
and
inc
push
fstl
jecxz
and
nop
cmp
rcrb
int
inc
mov
mov
pop
aas
jns
sbb
cmpsl
in
add
out
ss
cltd
dec
adc
loope
icebp
xchg
ds
lret
scas
pushf
mov
sbb
mov
jecxz
pop
mov
insb
pop
mov
sbbb
xor
or
mov
rclb
jb
adc
pop
inc
or
outsb
popa
in
icebp
jmp
stos
mov
mov
fldenv
cwtl
les
mov
mov
mov
jg
in
dec
ljmp
cmp
push
sbbb
mov
daa
rol
sub
cltd
test
mov
push
xor
sti
dec
ss
xlat
aaa
cmc
jno
jo
aam
int3
sbb
inc
xchg
clc
jnp
loopne
jns
mov
sub
or
jmp
pop
sub
fldt
cmp
add
lods
pop
in
and
pop
jnp
popl
ficoml
dec
add
ret
fmul
adc
jmp
xchg
enter
sbb
ds
pop
sub
lea
int
jge
jmp
cmp
scas
inc
xchg
std
mov
jl
mov
inc
sub
push
cmp
fcomps
lcall
sub
lret
rcl
ffree
test
dec
adcb
lea
fidivrl
push
xchg
jo
inc
dec
dec
pop
push
cs
icebp
lahf
repz
jnp
jno
aaa
dec
push
add
mov
mov
and
mov
adc
sbb
sub
mov
xor
jne
fidivrs
xor
mov
mov
cmp
call
loope
jns
imul
pushf
jmp
pusha
stos
cmp
jle
jl
int
nop
xchg
fisubl
jno
mov
neg
jmp
push
or
repnz
jo
clc
inc
bound
popa
call
push
adc
scas
out
repnz
adc
shll
xor
dec
jg
sbb
rcl
cli
push
push
out
push
inc
mov
lods
cmp
xchg
dec
dec
lahf
sub
push
iret
sbb
jl
xor
fimull
pop
mov
out
sub
testb
mov
xor
add
mov
fiaddl
jo
lret
iret
or
pop
and
jo
pop
pop
mov
and
lea
lahf
xchg
pushl
jno
outsl
lcall
or
xchg
mov
in
jle
std
movsbl
push
nop
testl
lock
mov
adc
mov
ret
fldt
movsb
cmp
mov
fisubl
jae
insb
lea
push
nop
mov
pop
and
ja
lret
scas
cmp
es
sbb
mov
cmpb
pop
clc
ds
jno
cs
jmp
shll
movsl
ljmp
mov
fcomps
popa
sbb
clc
or
sbb
or
icebp
sbb
mov
and
sub
shlb
mov
dec
arpl
push
movsl
push
outsb
jb
js
aas
aas
sbb
xor
clc
or
or
inc
pop
dec
pop
mov
sbb
clc
xchg
sub
xor
push
sbb
lcall
mov
fmuls
and
mov
pop
mov
or
sbb
clc
iret
stos
pusha
pop
fsub
test
rcll
push
add
mov
aas
jp
jecxz
pop
std
push
jnp
icebp
mov
sub
out
into
xlat
fwait
das
incb
scas
sarl
or
xchg
imul
movsl
loop
lcall
nop
push
cs
sub
and
jno
inc
insb
add
xchg
mov
add
or
insl
mov
testb
shlb
fs
push
and
movsb
mov
in
and
push
lds
testb
sub
add
adc
jmp
or
push
adc
imul
rcl
aad
and
push
mov
mov
pop
push
jge
and
ret
mov
iret
cwtl
hlt
mov
add
loopne
sbb
imul
fiaddl
insl
xor
mov
sbb
mov
jecxz
mov
mov
and
or
push
outsl
add
ja
fldenv
aam
xchg
std
jp
pop
push
mov
mov
ss
mov
insb
xor
push
xchg
and
outsb
int3
enter
fnstcw
push
push
xor
and
or
cli
stos
add
call
arpl
repnz
mov
into
push
adc
mov
push
push
mov
jl
xlat
inc
or
jb
and
mov
fsubr
jb
adc
repnz
subl
insl
inc
sbb
cwtl
add
hlt
xor
movsl
xchg
mov
or
imul
inc
lds
cmp
mov
jg
int
out
hlt
lret
mov
ret
test
xchg
dec
and
lods
repz
andl
cmp
test
push
mov
push
fst
inc
pop
enter
xchg
push
imul
cmp
push
fnsave
arpl
mov
jle
rolb
or
cmpsl
inc
outsl
movsl
jg
mov
das
mov
int3
mov
stos
mov
and
push
ret
leave
into
xor
jbe
lret
es
loope
movsb
xor
mov
rcrl
cmp
jg
out
outsb
jg
add
std
btr
and
fmuls
fildl
and
sahf
push
pop
imul
xchg
fsubrp
test
ljmp
loope
pop
push
dec
in
push
mov
jb
and
in
shll
mov
icebp
call
dec
jns
push
xchg
fwait
sbb
call
and
cmpsb
xchg
pop
jo
sub
jecxz
cmpsl
mov
xor
dec
daa
jge
inc
pop
xlat
push
jmp
loop
add
negl
add
push
xor
or
fcom
add
dec
call
xor
cmpsl
mov
faddl
dec
fldenv
out
mov
xor
cs
rcrb
js
jmp
mov
jge
xchg
jge
pop
notl
sub
mov
xor
adc
pop
cmp
into
inc
and
xchg
call
or
mov
jg
repnz
fadds
pop
sbb
test
loopne
push
xchg
dec
mov
sub
repz
mov
push
jns
adc
sbb
push
xchg
cmpsb
or
clc
mov
lcall
scas
call
xor
icebp
pop
mov
ror
mov
les
dec
test
push
fiadds
sub
add
sar
or
cwtl
iret
call
jle
leave
int
or
cmp
in
data16
mov
mov
cld
push
cmp
push
sub
ds
movsl
jns
pop
lcall
inc
adc
push
popf
xlat
or
stc
je
daa
mov
fsubrp
xchg
add
fisubrl
arpl
adcb
cmp
mov
sub
sub
or
ret
subb
mov
sbb
stos
stos
pop
mov
subl
lahf
outsb
sbb
add
mov
bnd
and
das
and
cmp
jb
pop
add
adc
inc
cltd
pop
mov
loopne
pop
xchg
imul
adc
jbe
sub
mov
sub
ret
add
add
cmp
aas
pop
mov
mov
adc
lock
dec
sbb
aad
jo
into
push
mov
scas
jmp
aas
fisttpl
adc
dec
addb
sbb
dec
shlb
jb
xor
or
add
cmp
sbb
cmpsl
xchg
lahf
hlt
xlat
out
and
in
sarb
dec
rol
or
mov
pop
inc
xlat
lods
add
adc
test
dec
inc
cmc
push
cld
cmp
and
lcall
push
lods
mov
jge
test
sarl
scas
inc
ss
push
mov
sub
jne
cmpsb
inc
xor
cmpsl
fsubrs
out
addr16
push
out
push
lcall
mov
adc
out
testl
push
fists
cmp
mov
adcl
hlt
mov
lahf
incb
nopl
jle
ds
lcall
aad
pop
je
adc
int3
das
adc
repz
push
xor
lock
inc
push
dec
mov
mov
push
push
aas
sbb
in
xchg
sti
pop
addr16
fisubs
adc
mov
int3
lea
inc
out
stc
mov
inc
xchg
xlat
movsl
fcoms
lret
dec
sti
sarl
mov
mov
push
push
pop
aas
mov
shll
and
cmp
out
or
cmp
jnp
enter
arpl
cmp
mov
lcall
cmp
sub
sbb
iret
ret
in
lods
js
adc
pop
mov
ret
jns
mov
sbb
cmp
jge
sub
cmp
inc
sub
jo
ljmp
iret
outsl
xor
inc
or
pop
movsl
arpl
push
testb
ds
mov
shll
mov
add
dec
push
jecxz
push
test
daa
jae
push
sub
pushf
lret
add
mov
lret
inc
js
lea
jg
stos
inc
roll
lea
fidivl
aam
inc
cmc
loopne
adc
ds
rcrb
lea
std
lahf
xchg
repnz
mov
inc
hlt
mov
gs
ja
ljmp
pop
inc
dec
xchg
js
xchg
outsb
ret
cwtl
inc
cmpsb
pop
pop
stc
jae
dec
std
and
js
gs
int3
fnstenv
int
push
adc
and
sbb
dec
jbe
shl
rcrb
outsb
jle
mov
outsl
stos
js
sub
dec
xor
push
cmp
lods
mov
jo
xchg
cli
adc
xlat
mov
mov
lock
jp
and
cmp
sbb
sbb
insb
sub
icebp
mov
scas
sub
inc
clc
xor
out
push
ret
push
sub
loope
xchg
adc
jo
scas
push
neg
enter
pop
push
inc
ja
or
add
xchg
out
jg
aaa
and
je
push
jns
pop
sub
sub
or
jae
push
jecxz
mov
dec
rcrl
xor
sahf
sahf
stc
and
sub
movsl
mov
add
add
pusha
add
inc
xchg
int
cld
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sub
outsb
add
outsb
add
