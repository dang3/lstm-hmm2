or
mov
lea
imul
movzbl
inc
dec
add
dec
sub
and
add
lea
movzbl
mov
inc
xor
add
inc
inc
dec
add
lea
movzbl
inc
inc
inc
dec
or
lea
dec
jne
mov
mov
sub
dec
pop
sub
dec
pop
sub
lea
pop
mov
inc
dec
dec
inc
sub
lea
mov
inc
inc
inc
add
ret
push
inc
xor
lea
mov
add
dec
inc
inc
push
push
push
push
sub
lea
mov
push
add
dec
sub
dec
and
lea
mov
dec
dec
mov
dec
push
sub
sub
xor
lea
imul
push
sub
sub
push
dec
dec
pushl
and
call
lea
add
mov
inc
sub
inc
dec
and
lea
pop
ret
mov
inc
idivb
and
xchg
cmp
cmc
sti
inc
cli
js
mov
adc
shlb
imul
mov
mov
pop
cmp
mov
jbe
out
cmp
add
xor
mov
sbb
and
rorl
insb
sub
push
scas
shlb
add
mov
adc
xchg
loope
popf
xor
ret
loopne
mov
insl
incl
scas
mov
xchg
inc
or
inc
insb
stos
sbb
cli
sti
lahf
scas
out
daa
mov
add
or
repnz
adc
and
mov
xor
xorl
cmp
pusha
fcoms
and
ret
ljmp
cwtl
mov
jo
sub
cmp
jg
and
cltd
lahf
fsubrs
or
test
lds
dec
outsb
xchg
or
pop
clc
enter
lcall
ss
or
cmp
pusha
cltd
iret
fldcw
add
mov
fdivl
repnz
call
jmp
dec
xchg
test
xchg
pusha
and
outsl
cmp
enter
fwait
add
ss
ds
mov
sbb
mov
mov
mov
loope
leave
popa
jnp
add
cmpb
sub
out
xchg
dec
mov
push
arpl
out
push
sub
xchg
into
sub
sbb
sbb
es
mov
xchg
mov
push
mov
loop
scas
test
sbb
int
pop
or
add
cli
mov
mov
fidivrl
add
push
sub
push
mov
nop
stos
pushf
lds
ja
ret
sub
jbe
dec
stos
mov
out
aaa
in
fst
sub
mov
or
mov
icebp
rcrb
adc
xchg
mov
pop
mov
or
and
add
loope
outsl
sbb
into
outsl
pop
dec
push
or
pusha
xlat
mov
sbb
push
or
ret
or
rcr
pop
nop
xchg
aas
ss
xchg
adc
outsb
mov
dec
repnz
int
movl
lret
adc
cmp
loop
inc
lahf
movsb
stos
lea
pop
push
out
andb
aad
inc
data16
lret
xlat
mov
popa
pop
mov
push
inc
cmpsl
loop
fdivrs
mov
movsl
scas
jnp
loopne
mov
sub
sbb
adc
mov
or
outsl
dec
jge
sar
and
or
loope
ljmp
xor
dec
push
mov
bound
pop
inc
out
adc
mov
in
xchg
cmp
add
mov
in
push
cmpsl
cmp
rorl
mov
enter
or
mov
mov
push
mov
xor
or
pushw
fisubrs
cs
xchg
mov
aas
movsl
mov
rep
add
xorb
clc
mov
mov
movsl
pop
pop
in
xchg
push
addr16
cmpsl
cld
sbb
or
jno
leave
jmp
lcall
mov
arpl
iret
mov
and
jns
sbb
xchg
in
sbb
add
cmpsl
and
xchg
pop
ds
adc
mov
fwait
dec
icebp
into
xor
fcmovbe
or
dec
stos
sti
push
lds
arpl
leave
sbb
ds
xor
lret
lea
ds
fisubrl
ljmp
cmp
mov
cmp
xlat
dec
xchg
mov
cwtl
and
mov
movlhps
and
into
fisubrl
xchg
pop
adc
fcoml
je
jecxz
mov
inc
push
cwtl
pop
test
outsl
scas
cltd
lods
jmp
add
lret
stos
xchg
push
inc
push
xchg
inc
mov
dec
ss
or
mov
mov
cmp
outsl
and
pop
cmc
xchg
ja
xchg
mov
outsl
imul
cmp
popa
orl
push
mov
mov
lods
jae
in
imul
out
add
stos
and
xchg
mov
out
push
mov
adcb
xchg
push
push
out
lahf
jp
insb
inc
push
cltd
mov
mov
or
sub
inc
lock
cmp
xchg
daa
dec
dec
test
cld
xchg
adc
cmp
in
cli
cltd
shll
xlat
push
mov
aaa
cltd
jecxz
mov
loope
cmp
iret
lods
es
dec
js
aad
shll
xchg
arpl
push
stos
mov
sbb
out
push
mov
daa
mov
push
or
or
push
inc
mov
and
int3
or
leave
pop
adc
jns
dec
sahf
lods
gs
add
iret
test
push
mov
lahf
push
fidivrs
mov
adc
inc
or
test
mov
pop
lea
mov
idiv
pop
dec
pop
fld
push
sahf
int3
std
xchg
insb
pop
mov
and
jbe
pop
repnz
xor
cmp
push
insl
inc
fst
jmp
push
mov
roll
jo
out
adcb
or
test
scas
add
sti
stos
rcrl
test
or
inc
out
dec
push
les
add
sahf
mov
call
cmp
cmc
bound
mov
insb
jns
insb
sbb
ja
dec
pop
imul
jge
xchg
add
or
lock
push
ficoml
cltd
xor
add
icebp
std
popf
in
jb
push
fs
lcall
add
add
and
mov
adc
gs
arpl
pop
fnstsw
add
dec
mov
mov
inc
mov
popf
rcr
fs
dec
inc
pop
shlb
stos
mov
popa
jbe
insl
mov
cmp
cmp
sbb
or
std
dec
fwait
das
into
je
adc
xor
pop
mov
loop
mov
inc
enter
jb
test
out
inc
mov
pop
dec
leave
aas
shr
xor
imul
cli
jp
jecxz
outsl
rorl
mov
dec
xchg
add
adc
xchg
jle
movsb
adc
mov
xor
or
jae
ljmp
jno
sbbb
mov
dec
or
xor
or
addr16
xchg
lock
cmovns
call
arpl
ret
cli
jmp
pop
pop
into
or
sahf
adc
jecxz
adc
andl
ljmp
or
std
loop
cmp
inc
andl
add
repz
jbe
aam
inc
and
loope
fcompl
es
push
hlt
std
pusha
mov
call
adc
pop
mov
or
lds
lods
or
sub
jae
xchg
mov
or
je
into
push
jge
cmp
outsb
xor
aaa
adc
jno
jne
rcl
push
cmp
pop
add
mov
cmp
mov
xchg
sub
push
and
subb
imul
mov
jae
pushf
cmp
mov
pop
test
cmpsb
cs
dec
cld
aad
dec
dec
in
sbb
ret
push
dec
adc
std
lods
jmp
dec
lcall
data16
cld
sub
mov
mov
cs
or
push
inc
xchg
jecxz
inc
mov
mov
sub
loopne
dec
pusha
lds
sub
mov
mov
pop
mov
outsl
in
daa
fwait
pop
dec
clc
sbb
icebp
daa
inc
out
ds
add
jbe
les
stos
cmp
hlt
test
bound
push
ljmp
cmpsl
push
inc
or
test
scas
aad
inc
mov
add
mov
push
nop
mov
scas
bound
or
mov
mov
push
jge
lret
addr16
hlt
mov
sub
sbb
sub
mov
adc
cmpsl
fsts
in
mov
push
or
sbb
test
shrl
jns
cmp
pusha
fstpt
sbb
pop
les
fdivl
nop
push
bound
loop
mov
repz
jnp
inc
dec
mov
ds
jg
cmp
into
mov
inc
xchg
add
jo
xchg
rorb
xchg
adcb
outsl
mov
outsl
mov
aaa
mov
pop
adc
xor
push
push
out
ss
scas
jbe
aas
shlb
adc
repz
outsl
repnz
fcomip
jne
je
in
sub
leave
mov
mov
rorb
mov
jp
inc
xchg
neg
pop
ret
and
das
xor
dec
leave
or
adc
int
dec
es
mov
mov
cmpl
js
add
in
int
and
bound
adc
shlb
rorb
cltd
fisttpl
mov
cmp
mov
jmp
pop
sub
sub
ret
push
xchg
outsl
mov
jbe
cli
xchg
out
xchg
sti
arpl
xchg
push
pop
mov
xchg
pop
jl
pop
into
or
dec
cmpl
cmc
jg
push
psubusb
dec
sbb
jl
jecxz
les
inc
mov
jns
adc
mov
int3
mov
ss
push
je
scas
xchg
cwtl
xchg
mov
dec
or
into
pusha
hlt
enter
or
bnd
push
inc
dec
mov
and
cmp
or
jnp
addb
rorl
lea
mov
xor
push
pop
movb
popa
daa
lret
jl
pop
cmp
iret
fidivs
mov
je
xlat
pop
lcall
sbb
es
cld
test
fwait
dec
push
inc
adc
or
daa
push
lods
test
subb
in
mov
out
notl
lret
pushf
mov
mov
gs
jns
ljmp
jbe
cld
pop
aaa
and
sub
xor
out
jne
add
push
cmp
inc
addr16
test
ror
add
push
movsb
or
cmp
fstl
decb
and
mov
xor
data16
ljmp
out
lcall
push
push
jae
nop
and
adc
pop
cmp
sub
lret
sbb
aas
loopne
pop
lods
xchg
pop
dec
pop
out
and
dec
pushl
mov
dec
pushf
pop
mov
mov
addr16
mov
dec
jno
jb
cmpsl
inc
cmp
std
hlt
or
or
sub
andl
sub
test
les
mov
enter
cmc
sub
shr
shll
xchg
loope
pop
sub
es
test
inc
xor
lcall
jmp
imul
mov
iret
iret
mov
ror
test
cmpsb
adc
sbb
testl
les
test
jne
movsl
add
ja
aas
jl
cltd
daa
sub
int3
ljmp
scas
jae
loop
inc
popf
fcmovnbe
add
mov
xchg
aas
lea
pop
out
in
add
lahf
cld
lds
sbb
fdivp
test
cmp
les
stos
jbe
jo
repz
inc
mov
test
int
adc
push
pusha
cs
inc
inc
jnp
mov
aad
inc
adc
aas
mov
ljmp
inc
shrl
rolb
sbbb
jg
fiadds
addr16
js
push
sbb
sub
push
push
aam
in
mov
scas
sub
test
or
mov
repnz
imul
in
loope
push
movsb
add
popa
inc
popa
add
int
add
cltd
cmc
or
lret
ret
pop
mov
shll
sbb
shrl
cmp
cmp
repnz
xchg
test
pop
add
mov
xchg
in
dec
pop
fnstenv
adc
cmpsl
ficoml
jo
add
adc
lock
adc
cld
adc
mov
or
cwtl
jno
mov
pop
inc
xor
repz
cmp
dec
push
sbb
enter
test
mov
scas
lods
in
mov
push
les
lds
cmp
inc
stos
inc
pop
outsb
cmovno
ret
shlb
ss
orb
mov
ret
push
repz
add
das
mov
or
xchg
sahf
loopne
push
push
lcall
pop
adc
cld
xorb
cmp
icebp
aad
jnp
loopne
loop
cs
sub
roll
mov
ficoms
mov
mov
pusha
iret
dec
ret
sbb
inc
pop
jo
fimull
sti
sbb
or
sbb
cmp
mov
addb
xchg
mov
cld
xchg
sub
push
daa
addr16
pusha
inc
mov
aas
aad
cmpsl
cmp
insl
add
cmp
in
fisubl
loopne
push
jae
inc
ret
and
repz
hlt
xchg
push
repz
mov
loope
add
insb
repnz
cwtl
add
jns
fs
repnz
scas
xchg
adc
shl
es
std
ds
iret
xchg
js
cmp
cmp
aam
sbb
jnp
cmpsb
and
stc
jmp
adc
faddl
ret
inc
sub
mov
mov
movsbl
pop
repnz
sub
fdivl
push
and
cld
cmp
mov
dec
fisttpll
insl
pop
mov
sub
test
es
cli
outsb
pop
push
jnp
hlt
fmull
sub
add
sbb
and
leave
push
jl
divb
aad
xchg
mov
cli
inc
es
lahf
jle
fs
xchg
jle
push
pop
add
inc
fimull
xor
or
cmp
xor
or
dec
push
xor
mov
or
xchg
cmp
jo
or
fwait
shlb
out
ret
jmp
int3
movsb
sub
pop
add
mov
push
pop
in
notl
or
into
dec
cmpsb
cmp
enter
sub
lcall
ret
arpl
mov
das
adc
das
and
call
sbbb
dec
rolb
loope
popf
out
push
fsub
js
loope
mov
mov
in
pop
ds
cmpsb
and
adc
aaa
xor
fisubrl
popa
mov
lds
in
enter
mov
push
mov
mov
xor
inc
jns
daa
mov
xchg
mov
loope
insl
call
xchg
std
mov
xor
adc
dec
movsb
fdivr
test
stc
roll
push
in
rol
popa
jno
in
into
cltd
lea
sbb
or
repz
xchg
cmp
int3
push
fs
dec
mov
sbb
ljmp
add
out
sbbb
and
xchg
inc
clc
mov
adc
sub
shlb
js
sbbb
push
xchg
cld
popf
mov
int
mov
xor
popf
int
xor
movsl
in
daa
pop
scas
cmp
imul
sbb
ja
or
in
mov
push
pop
add
xorl
ds
or
cmp
cmp
sbb
cld
decl
out
in
ds
cmpsl
dec
push
cmpsb
lods
push
or
adc
dec
in
repz
cmpsb
fs
xlat
ds
iret
pop
lock
and
xor
jmp
sbb
push
gs
jecxz
push
push
and
ret
popf
rcrl
arpl
sbb
imul
js
push
test
ja
mov
xchg
gs
pushf
push
lods
ds
cli
fiadds
sub
or
and
pop
stos
andb
jmp
fadd
les
ds
sub
and
aas
fwait
jns
mov
jae
xchg
mov
dec
dec
movsl
mov
sub
mov
push
scas
into
mov
popf
push
xor
cwtl
jns
adc
inc
inc
push
or
js
pushf
aad
inc
adc
les
pop
lret
test
xor
shr
outsl
dec
xchg
sub
popa
pop
fwait
mov
xor
push
rolb
sub
fcmovnu
jecxz
or
and
daa
icebp
inc
and
test
pop
cmpsl
fdivrs
or
pop
inc
rcrl
xchg
popa
sahf
adc
stos
cmp
jl
sbb
xchg
js
popf
in
imul
cmpsb
cwtl
inc
and
lahf
cmp
push
jns
pusha
lods
cmp
test
pop
cld
repnz
arpl
hlt
cmp
jmp
mov
loop
sbbl
in
scas
xchg
sbb
xchg
ret
add
adc
mov
jne
mov
jbe
or
popf
dec
test
or
xor
andb
push
call
push
xchg
lret
ret
nop
or
jmp
push
into
xchg
iret
aaa
pop
push
test
push
ficompl
fsubl
out
sti
stc
xchg
test
in
adc
dec
bswap
pop
fcmovu
cmp
sub
outsl
nop
inc
jmp
mov
mov
cmpl
lea
cmpl
xor
mov
xor
push
orb
cwtl
push
xrelease
jo
shll
ret
pop
imul
xchg
fcoml
cmpsb
jns
mov
cli
adc
dec
mov
lods
sub
out
mov
mov
and
adc
push
sbb
mov
call
icebp
jo
loop
adc
das
sbb
movsb
call
xlat
adc
cmp
rcll
enter
mov
push
cmpsb
orb
mov
adc
adc
xor
or
mov
push
jp
iret
or
shl
mov
push
out
leave
sbb
imul
dec
stos
leave
adc
mov
es
sbb
sub
inc
leave
clc
mov
dec
movsl
mov
jmp
ret
add
xchg
lret
cmp
int
fdivrl
mov
loopne
jae
pusha
lret
stc
std
push
lods
sub
push
in
ficoml
mov
lret
mov
stos
and
sarb
xchg
jg
imul
mov
lcall
sbb
lcall
cmc
imull
out
jno
xor
inc
lock
dec
or
stc
iret
inc
push
push
bound
inc
sub
gs
into
ja
aaa
pop
jmp
adc
mov
dec
sbb
adc
sbb
out
aas
shlb
mov
or
mov
dec
loope
mov
pop
jecxz
cmc
lea
leave
xchg
xchg
sbb
cmc
dec
push
push
nop
les
decl
add
arpl
sbbl
jo
pop
xchg
cmp
int3
dec
fucom
inc
or
mov
fstps
movl
lcall
leave
push
aam
pop
jnp
mov
dec
orl
enter
das
and
ret
mov
fstpl
in
push
add
or
aaa
lahf
jne
sbb
loopne
loopne
imul
mov
insb
or
insl
fnstcw
and
mov
repz
stc
mul
lea
sbb
mov
andb
lods
jl
dec
xchg
cmp
addr16
lret
sub
mov
daa
mov
mov
es
mov
ja
in
clc
inc
xlat
scas
inc
repnz
fucomi
out
push
add
or
pusha
aaa
push
cmp
xor
jbe
mov
jns
movsb
inc
pop
je
mov
sub
xor
bound
mov
xchg
out
into
adc
mov
cwtl
or
mov
arpl
xlat
jg
test
adc
mov
xchg
stos
out
les
mov
outsb
xor
pop
jnp
test
stc
push
push
data16
xor
pushf
sbb
mov
and
mov
mov
aam
mov
mov
sbb
cwtl
xchg
add
ret
hlt
jb
mov
movsl
dec
cmpsb
std
stc
hlt
ret
repnz
outsb
imul
or
xor
pop
aad
idivb
loope
pop
faddl
adc
lds
imul
fcmovnu
sbb
into
sub
push
xchg
loop
lret
dec
sub
cmp
shll
jl
xchg
out
mov
cli
mov
imul
dec
fwait
mov
mov
xchg
mov
push
out
or
mov
loopne
scas
xlat
adc
pushf
insl
arpl
mov
outsb
sbb
lods
push
sbb
insl
je
sbb
mov
jge
pop
das
pushf
or
sbb
jnp
inc
cmpsl
cmc
xor
daa
cmp
push
movsl
xchg
and
inc
xor
xor
xchg
xchg
jp
loope
add
mov
mov
loope
dec
cmpsl
insl
mov
clc
jl
xor
cmp
jbe
daa
xorb
in
out
sbb
cmpsb
call
lret
mov
and
mov
xchg
or
cmp
ja
xor
push
xor
xor
cwtl
ret
repnz
mov
cld
lds
mov
rorl
stos
scas
jnp
xchg
inc
ss
adc
scas
xchg
jecxz
jno
dec
dec
push
jne
pop
inc
cltd
lods
pop
cmp
push
dec
xchg
mov
ss
sahf
cmp
cmp
jns
ret
idivl
loope
jno
pop
cltd
and
loope
cmc
and
mov
fisubrl
cld
cmp
adc
fldt
iret
lock
arpl
cld
in
adc
xchg
je
int
xlat
test
mov
pushf
sub
fidivl
lods
in
lods
bswap
xor
je
das
in
add
faddl
sahf
shlb
call
int3
loop
in
xchg
imul
scas
cli
sbb
clc
cmp
or
lcall
jecxz
pop
jae
push
mov
inc
pop
fst
sbb
pop
loopne
sub
mov
rcrl
imul
xor
mov
adc
xchg
mov
stos
inc
pop
cmpl
xor
cmp
jge
mov
xor
push
int3
stos
cmp
add
roll
add
ret
sub
data16
mov
imul
jns
jle
sub
mov
jmp
sahf
repnz
outsb
mov
fs
mov
or
rorb
negb
xor
push
icebp
push
out
ret
adc
iret
lock
in
xor
push
mov
sub
jp
divb
mov
lahf
jl
cmp
mov
sbb
nop
adc
inc
and
nop
mov
cli
push
pop
out
jecxz
lods
lret
inc
push
cmp
pop
cmpsb
jecxz
add
or
je
cmp
insl
sub
aam
inc
daa
push
mull
sub
loope
or
inc
mov
stos
mov
or
aam
lods
mov
lock
movsb
sbb
and
fcomps
lods
lods
insb
cmpsl
xchg
mov
inc
je
push
add
xchg
sbb
jo
jbe
xchg
aam
inc
sti
xchg
xor
xor
xchg
jne
mov
push
jbe
sub
mov
mov
cmpsl
inc
pop
add
fs
jae
push
mov
dec
repz
add
fwait
lret
je
loope
sub
dec
dec
sub
xchg
dec
pop
mov
mov
imul
mov
dec
shlb
sbb
divl
call
stc
jg
adcl
lahf
mov
push
mov
mov
jno
jmp
and
dec
jle
jecxz
insl
lock
stc
popf
ret
lahf
mov
pop
call
daa
pop
fs
xor
dec
inc
xor
sbb
outsb
cli
pushf
std
and
xor
adc
push
insl
fistps
es
pop
lret
repz
cs
popa
enter
mov
mov
shll
xchg
addr16
mov
dec
dec
or
test
jns
dec
test
std
pop
fldt
insb
push
xorb
sub
loopne
cmpsb
dec
out
aas
stos
or
out
es
or
sbb
inc
xchg
xlat
addr16
aad
push
pushf
xchg
adc
mov
mov
cli
in
adc
int3
bound
aaa
shrb
test
sub
aam
fsub
aas
pop
add
push
or
jb
and
push
mov
and
je
loope
mov
mov
sub
call
daa
enter
dec
mov
jl
mov
adc
pop
adc
movsl
movsb
clc
jb
ss
mov
clc
call
xchg
aad
pop
push
dec
iret
sbb
xchg
loope
ds
push
outsl
pop
lods
fs
add
inc
stos
pop
add
dec
push
leave
dec
cmc
loop
mov
mov
imul
clc
addr16
lds
cwtl
and
lret
ficomps
xchg
in
mov
loope
cmp
sbb
vorps
ret
push
mov
pusha
cwtl
or
xchg
aam
ss
inc
daa
lock
cmp
sub
outsl
loopne
mov
xchg
mov
xor
test
cmp
jne
fucomp
sub
inc
fistpll
pop
dec
jp
rclb
idivl
jnp
dec
out
fisttpll
xchg
repnz
cmp
outsl
data16
fdivs
leave
sub
mov
scas
frstor
adcb
jnp
out
mov
mov
mov
or
mov
and
lods
test
imul
sub
xor
and
pop
xchg
orb
ljmp
std
cmovs
sub
daa
xorl
or
jecxz
ja
push
fxch
adc
push
aad
scas
push
adc
je
in
popf
nop
fs
mov
push
in
nop
lock
and
push
imul
cmp
sti
or
or
adc
out
adc
fcmovne
push
dec
int
inc
jp
sub
inc
test
add
cmp
fstl
adc
into
imul
push
jbe
aam
outsb
rcl
fdivl
or
xchg
push
mov
dec
xchg
pop
mov
dec
adc
sbb
jge
push
pop
sbb
sub
xor
dec
mov
inc
repnz
mov
insb
shlb
cmpl
outsb
les
js
outsl
jle
sub
pop
mov
adc
sbb
insb
mov
xchg
mov
dec
dec
push
jbe
stos
cltd
stos
sub
aam
cwtl
lret
sbb
or
mov
scas
ror
add
arpl
aad
loope
mov
inc
sub
je
jmp
xor
cltd
sub
sbb
add
push
inc
mov
in
and
mov
pop
pop
popl
imul
cwtl
cmpsl
lret
push
dec
mov
xchg
lock
add
push
loope
leave
or
add
sbb
sarl
mov
inc
popa
loopne
bnd
ret
icebp
xorl
clc
lret
test
enter
rep
xchg
stos
jae
cmpsb
sahf
xor
lock
addb
add
lcall
mov
pop
pop
inc
icebp
aaa
lock
jne
outsl
fs
push
cmpsl
cmp
inc
adc
add
cmpl
dec
jo
pop
mov
pop
pop
sbb
mov
add
loopne
mov
jb
repnz
pushf
aad
xchg
lea
popa
test
mov
fisubrl
int
and
adc
outsb
push
stos
mov
mov
lock
and
call
inc
cld
gs
movsl
pop
or
mov
sub
cmp
sbb
mov
popf
dec
inc
dec
std
or
cmp
ljmp
lcall
sub
out
fstpl
fs
out
outsl
mov
inc
ret
std
mov
cmp
pop
mov
or
jle
movsb
xor
dec
xchg
xchg
jnp
rcrl
pop
pop
insl
dec
jge
in
mov
cli
shlb
cltd
lds
ds
daa
ret
adc
scas
adc
lock
mov
gs
inc
inc
jmp
xor
or
mov
xchg
loope
fistpll
mov
xchg
fs
inc
sbb
mov
and
pop
out
jp
jno
xlat
ljmp
jb
lock
mov
out
xchg
popf
xor
sbb
sbb
cmp
mov
add
jp
call
dec
or
lret
jmp
add
cld
or
pop
je
and
jle
adc
loope
adc
aaa
bound
adc
push
adc
or
adc
loop
xchg
leave
int
sti
xlat
loop
mov
mov
iret
shll
das
in
inc
sti
push
push
out
jl
cmp
jge
das
pop
xor
pop
movsl
decl
xchg
adc
and
and
dec
gs
mov
cmc
inc
in
dec
stos
sub
or
and
mov
repz
mov
lds
es
icebp
jmp
in
hlt
mov
pop
mov
inc
ret
gs
dec
addr16
inc
push
pushf
rcrb
dec
dec
sub
mov
movb
imul
into
out
dec
adc
fwait
xlat
pusha
push
mov
out
sahf
mov
call
into
iret
inc
push
pop
int
sub
es
aaa
mov
loope
sbb
adc
inc
add
jne
popa
fimull
cmp
pop
add
leave
and
or
adc
xor
dec
sarl
xchg
scas
insl
push
push
scas
xchg
test
xor
sarb
pusha
ss
jp
push
ljmp
mov
loop
mov
pop
xchg
or
je
lea
std
les
xchg
lret
add
pop
sbb
cmpsl
jmp
repnz
xchg
xchg
pusha
inc
mov
nop
pop
dec
xor
jno
daa
lods
jne
stos
fdivrs
cmpsl
adc
movsl
outsl
and
lea
aas
lret
push
inc
mov
icebp
test
cld
add
mov
cwtl
pop
mov
sti
jne
inc
sbb
or
inc
add
xchg
sbb
sub
cwtl
ror
xor
cmp
dec
pop
enter
insb
in
push
pop
out
sbb
xor
sbb
pop
mov
and
dec
ret
insb
enter
cmp
ljmp
sbb
dec
loope
inc
push
int3
loope
adc
cld
fisttps
or
pusha
xchg
js
iret
dec
and
ss
cmp
leave
test
fnsave
add
push
mov
imul
mov
lock
push
adc
mov
xor
adc
mov
mov
dec
fs
cmp
push
icebp
das
out
xchg
andl
mov
movsb
popa
psrad
jmp
jne
mov
mov
mov
cs
or
and
subb
cmc
cmp
lds
fbstp
insb
call
mov
and
rolb
push
xor
dec
inc
sti
pop
not
inc
push
xlat
lret
pop
dec
sbb
fcoml
push
psubsw
sub
lea
mov
out
shrb
fiadds
jge
xchg
stos
scas
and
add
cmp
test
jb
sbb
adc
rcl
pop
mov
xor
sub
in
loope
in
fs
or
jecxz
or
shl
or
mov
add
jmp
in
stos
cmp
lret
push
push
inc
lods
call
dec
cmc
push
inc
js
adc
cld
mov
mov
lcall
mov
ds
push
inc
fcomip
adc
inc
or
popa
int
fdivrl
mov
pop
aaa
mov
cli
and
pushf
shll
pop
lea
and
test
sbb
adc
arpl
or
jge
cwtl
jg
lret
add
inc
repz
mov
repz
pop
aam
cmc
jne
inc
push
xor
xor
push
cltd
xchg
sub
popa
inc
into
pop
push
xchg
cmp
rorb
xor
cmp
into
loope
repnz
cmp
ljmp
loop
and
push
mov
inc
call
scas
or
and
push
hlt
add
mov
push
test
jmp
ret
adc
jb
fistps
xor
cltd
adc
dec
jne
out
push
int3
push
lahf
adc
loope
bound
cmp
outsl
or
push
stos
jae
ret
testb
and
add
pop
ss
add
scas
inc
lock
nop
jmp
push
sbb
sub
sahf
lea
mov
sub
pop
xchg
sub
test
idivb
xor
loope
add
popa
xor
adc
int3
cmp
mov
cmpsb
cmpsb
daa
add
xor
lea
lea
push
dec
and
jnp
sti
imul
sub
adc
xchg
and
xchg
daa
or
xor
test
and
push
xor
mov
int3
push
ret
clc
pushf
ss
or
es
sbb
pushl
dec
jns
ds
in
loopne
aaa
mov
lcall
inc
jl
dec
addl
mov
stc
ret
dec
and
dec
stos
cld
adc
cmp
push
cmp
add
or
sar
push
gs
mov
sbb
xorl
or
mov
mov
xchg
lea
call
ret
sbb
divb
xor
jmp
inc
pop
ljmp
dec
add
pop
mov
adc
ret
ja
jg
hlt
lods
fidivrl
or
test
xchg
in
cmpsl
enter
inc
push
jge
push
lahf
shll
shlb
in
gs
in
cs
mov
push
and
ret
mov
ficoms
sub
in
jmp
cmpb
jl
mov
xchg
sbb
pop
cmp
cli
bswap
mov
jne
loopne
bound
push
andl
leave
ss
arpl
loop
push
or
mov
jmp
sub
xchg
popa
fs
adc
jb
in
add
inc
rol
adc
outsl
test
jl
mov
lret
jle
fsubr
ret
or
shll
out
add
movsl
decl
movsb
jae
push
cltd
and
addr16
and
adc
xchg
sbb
data16
outsb
mov
pop
sub
testb
mov
das
js
cmpsb
add
adc
mov
cmp
or
in
sub
cmc
push
add
lea
mov
add
mov
je
sbbl
push
stos
pop
xchg
orps
outsl
sbb
mov
mov
orb
cli
jg
orl
es
dec
popf
pop
shll
pop
out
fiadds
or
clc
outsl
push
sub
dec
repnz
xchg
pop
dec
sar
ficompl
xor
xchg
gs
sub
enter
lret
out
xor
inc
nop
xor
mov
adc
movsb
mov
cltd
and
and
movsl
movsl
push
ffreep
dec
push
xor
sti
rolb
lcall
adc
jae
dec
cli
inc
xor
test
push
popa
dec
jno
scas
pop
inc
cmp
out
sub
fisubs
cmpl
jne
lret
mov
in
mov
push
sbb
lahf
xchg
xchg
pop
sub
clc
fldenv
push
xchg
out
or
cmc
pusha
xchg
sar
aad
sbb
scas
mov
loopne
inc
push
cwtl
into
sbb
mov
mov
sbb
jnp
loop
addr16
data16
mov
daa
fadd
nop
icebp
dec
jae
add
push
dec
xchg
inc
and
shlb
ljmp
xor
ror
sarl
mov
xchg
outsb
shlb
adc
aad
dec
fnstsw
and
cld
movsl
and
les
xor
movsl
mov
je
test
adc
xchg
push
lret
jo
push
int
es
xor
fwait
jmp
xor
subl
xchg
out
or
shrb
hlt
pop
adc
test
or
mov
sbb
sbb
imul
or
mov
and
into
adc
ret
sarl
mov
test
repnz
mov
paddw
xchg
test
outsl
inc
bound
leave
rcll
xchg
imul
cmp
mov
xor
and
cmpsl
shrl
and
inc
stos
jae
stos
pop
testb
and
xchg
jo
outsb
pop
sub
lea
loop
ret
imul
mov
rcll
das
imul
xchg
xor
lea
lods
xchg
int
es
cwtl
add
movsb
es
and
js
lret
shrb
jo
popf
lods
adc
and
jne
dec
leave
dec
sub
xor
out
mov
adc
push
lods
mov
inc
and
out
popf
and
notb
fldenv
cmp
dec
fwait
ds
dec
jg
pop
dec
adc
mov
push
adc
xchg
or
rcll
cmp
or
out
sbb
pushf
test
sbb
jno
nop
pop
test
lahf
add
ja
add
inc
sub
movsb
xchg
mov
mov
add
mov
mov
mov
cmp
push
out
push
xor
or
cmp
repnz
cli
ror
mov
fwait
test
xor
sub
negl
sub
mov
sbb
cmp
lret
xor
mov
cltd
inc
cmp
and
aam
xchg
jae
dec
fsubrp
ret
loope
icebp
outsb
inc
jae
into
mov
jne
lret
xor
and
adc
xor
jbe
leave
fisttpll
fildl
imul
inc
adc
cs
sti
xchg
loopne
mov
cmp
pop
xchg
rcrb
pop
in
and
rorl
mov
ss
loope
aas
adc
lods
mov
pop
and
enter
sahf
inc
pop
add
sub
stos
add
pop
inc
jb
aad
or
mov
lret
mov
adc
leave
push
mov
xorb
cmp
xor
cmc
fstps
mov
repz
mov
push
fcoms
sti
cwtl
stc
outsl
data16
or
push
sub
sub
cltd
cwtl
sar
iret
mov
fwait
outsl
es
arpl
pushf
out
lahf
push
test
push
xor
adc
rorl
std
xorb
cmc
or
push
lcall
mov
push
lret
loop
xchg
fistl
mov
loop
mov
arpl
loopne
es
pop
add
clc
aam
lret
push
enter
call
scas
push
jo
or
jo
hlt
movsl
pop
das
rcll
int
icebp
xchg
mov
pop
jne
push
mov
xchg
push
jmp
pop
dec
pop
into
aas
xlat
xchg
mov
sub
jnp
push
jno
xchg
fwait
xchg
and
loopne
jg
aas
xchg
dec
add
sbb
fists
pop
push
ja
sub
cmp
outsl
mov
push
clc
jl,pn
sbb
and
ret
lret
sbb
cltd
adc
push
nop
sub
es
loop
aas
fildl
ret
dec
push
mov
test
test
test
inc
pop
jp
stos
lds
int3
jo
pop
test
pusha
inc
jae
mov
mov
or
fidivrl
pop
and
adc
add
fs
shrl
and
lods
subb
adc
add
mov
lcall
test
mov
jp
pop
in
jae,pn
fdivrl
mov
inc
jae
addr16
or
adc
data16
push
push
out
adc
sbb
loopne
rcrb
enter
imul
jnp
pop
mov
lret
repnz
adc
adc
cmc
fadds
mov
mov
lods
hlt
in
leave
inc
and
nop
and
shr
sbb
mov
inc
cld
sub
push
cmp
sub
enter
lds
xlat
mov
and
das
jae
push
jp
xchg
fstps
incl
rorl
outsl
cmp
jns
cltd
mov
mov
xor
xchg
jne
rolb
mov
sbb
fwait
lock
scas
imul
sbb
cmp
shll
add
xor
notl
enter
ficoms
xchg
push
loopne
cmp
push
jg
xor
fdivs
sahf
cmp
mov
xor
xor
adc
addr16
in
jnp
push
and
fldenv
popf
cmp
jb
ljmp
test
inc
stos
fbstp
test
insl
out
fmuls
iret
insb
lret
aaa
lea
fcmovb
fdivrl
ror
lcall
popa
xor
mov
fsubl
adc
stos
cmp
ljmp
aas
pop
jmp
and
fnstenv
out
inc
pop
mov
das
xor
xchg
add
shll
out
pop
daa
push
sahf
sub
mov
andl
or
test
fimull
movsl
movsl
or
shlb
filds
lret
jbe
adc
insl
aam
rcl
sbb
pushf
lahf
cwtl
push
mov
mov
mov
jns
sub
push
or
jmp
data16
mov
or
jl
addb
pop
cmp
sub
inc
xor
jnp
adc
shlb
aas
adc
out
sub
subb
in
pop
pusha
std
sbb
mov
dec
outsl
stc
push
sub
cltd
adcb
divl
int
sub
cld
adc
mov
mov
popf
mov
and
add
or
movsl
int
rorb
dec
push
shll
xchg
mov
pop
mov
inc
or
xchg
repz
mov
enter
div
lret
adc
mov
add
test
aas
idivb
into
push
iret
pop
lods
jae
push
test
pop
enter
xor
cmp
stos
jp
lds
sub
lret
sti
sarb
adc
scas
test
js
daa
and
movsl
sbb
lea
push
mov
xor
imul
mov
cmp
mov
mov
cmpsb
pop
std
sbb
iret
mov
xchg
jle
mov
adc
cli
aaa
aad
sbb
jno
out
and
ret
mov
push
xchg
mov
aam
mov
or
add
lcall
push
mov
gs
clc
neg
push
cmp
jmp
ret
outsb
out
popf
dec
dec
cmp
cmp
imul
loop
inc
and
jle
inc
sbb
add
fwait
jb
dec
jp
adc
stc
mov
jmp
mov
jecxz
adc
mov
clc
rolb
xor
adc
shl
fnstsw
cmpsl
and
ret
cmpsl
pop
inc
mov
sbb
ffreep
daa
stc
mov
and
dec
mov
daa
inc
lahf
lds
adc
cmp
in
jb
cltd
push
inc
cmpsb
mov
sbb
pop
test
mov
insb
cli
nop
dec
stos
hlt
pop
mov
and
sbb
pop
sub
arpl
mov
out
sbb
aas
adc
mov
sti
jmp
adc
push
sub
jmp
shr
outsb
add
dec
outsb
hlt
sub
mov
jo
adc
incb
shld
pop
mov
std
lods
push
orb
xchg
mov
stc
int
fucomip
xchg
sub
lock
jge
mov
cmp
fdivrl
sbb
hlt
gs
pop
push
sub
jmp
inc
adc
movsl
repnz
mov
jge
loopne
inc
mov
or
ret
loop
cmp
and
jb
shlb
imul
mov
fsts
js
pop
mov
xchg
jnp
sahf
ss
sub
push
les
xchg
cli
add
jne
fstp
add
dec
dec
mov
fbld
cmp
in
jns
adc
movsb
push
xchg
xlat
sub
and
inc
fcmove
cmp
jl
loop
mov
pop
fs
lret
not
rcll
int
xor
pop
pop
push
and
icebp
int
int3
ret
mov
shr
xchg
inc
es
xchg
rclb
shrl
int3
xchg
ret
test
mov
fstl
pop
adc
or
loopne
sti
lock
inc
arpl
cwtl
push
inc
in
outsb
and
sbb
mov
mov
arpl
sub
mov
es
mov
push
cmpsb
fsubl
add
push
popf
dec
pop
ja
xor
push
shlb
cld
xchg
mov
aas
sbb
or
mov
out
inc
dec
ret
push
stc
pop
mov
push
movl
fs
xchg
lret
ds
and
jns
mov
dec
mov
cwtl
push
pop
jecxz
aam
push
clc
xlat
ds
sbb
adc
pop
push
out
popa
adc
incb
cmpsl
js
repz
sahf
pop
xor
sbb
insl
jbe
es
sbb
in
sbb
sti
jp
or
mov
aaa
lock
pop
ret
or
iret
or
js
and
or
add
jmp
or
sar
and
or
mov
mov
bound
push
ret
cmp
popf
leave
in
or
in
fstps
dec
int3
or
and
or
mov
adc
jmp
inc
cwtl
push
cmp
and
inc
lods
dec
push
test
ljmp
mov
xchg
cli
dec
push
dec
movsb
lods
std
sbb
fildll
adc
fadds
js
jmp
sahf
neg
push
cwtl
cmpb
ljmp
and
int
out
popa
movsb
dec
inc
mov
loop
fcomps
movsb
jno
enter
imul
pop
rol
pop
test
scas
push
ret
xlat
fmuls
fisubrl
cmpsb
push
jns
sbb
or
in
jmp
or
jb
jbe
or
test
sub
push
xchg
xor
mov
sub
mov
adc
dec
push
or
fwait
ds
fstl
icebp
in
hlt
stos
mov
inc
push
mov
movsb
dec
int3
pusha
insl
sti
mov
repz
mov
roll
sbb
push
stc
and
cmc
cmp
jnp
adc
or
imul
sahf
mov
sahf
dec
cmp
mov
rclb
mov
addr16
fcomps
loope
scas
scas
and
popa
fwait
push
push
ja
loope
mov
cmpsb
and
inc
inc
push
cmp
mov
dec
sub
pop
cwtl
xor
adc
cmpsl
and
and
sbb
test
cli
mov
sahf
sahf
das
mov
scas
repnz
fwait
sti
pop
jo
imul
lods
push
add
push
sbb
dec
insl
test
jg
mov
jge
idivb
outsb
jmp
pop
int
cmp
loop
inc
cmpsb
adc
add
je
hlt
loop
cltd
inc
or
lock
sti
or
mov
jp
add
mov
mov
sbb
outsb
ret
xchg
loope
push
cltd
sbb
addl
addr16
in
xchg
pop
cltd
fstpl
insl
clc
add
mov
mov
loope
xlat
lods
push
mov
aaa
sbbl
pop
aaa
stos
push
jns
test
and
jae
and
mov
rcl
mov
push
fnstsw
push
leave
mov
pop
xchg
mov
bound
loop
icebp
out
out
xor
sub
jle
lea
or
push
loope
lcall
clc
adc
dec
push
cmp
jnp
xor
jp
jne
mov
xor
xor
xchg
sub
mov
sub
aam
ret
mov
push
jnp
in
bound
ror
out
out
shrb
hlt
cwtl
lds
das
jmp
sub
ss
dec
cli
icebp
dec
xchg
arpl
xor
fisttps
mov
sbb
xor
inc
and
jp
dec
and
adc
cwtl
cmp
sarb
aam
pop
cltd
outsl
pop
and
div
adc
dec
movsl
in
xchg
xchg
cltd
mov
adc
popf
mov
popa
xchg
fwait
popa
bound
call
sysret
xchg
shlb
sbb
cltd
mov
sbb
and
int3
gs
push
out
lods
sti
out
jnp
mov
jns
outsl
das
lret
aaa
out
aam
outsl
popf
sbb
mov
test
sub
push
dec
lcall
mov
insl
push
aad
popf
popa
sbb
cwtl
sub
fiaddl
rcrl
sarl
testb
lret
leave
lahf
rcll
fsubl
out
aam
or
gs
test
jo
popf
xchg
push
ret
movsl
fdivrl
inc
adc
arpl
int3
ret
add
adc
ja
xchg
push
data16
cmp
dec
inc
cwtl
cmpsb
cltd
xor
or
xchg
outsb
mov
inc
mov
sbb
adc
popa
jmp
jp
inc
push
idivb
out
pop
std
pop
push
add
mov
subb
pop
push
adc
out
hlt
mov
leave
inc
fstl
iret
cmp
or
xor
rolb
andl
adc
inc
mov
lret
leave
dec
cwtl
inc
lret
push
fnstcw
fs
clc
dec
in
cwtl
and
adc
dec
push
push
rol
mov
push
test
loope
xor
ja
or
inc
jnp
mov
adc
lods
imul
rcrb
xchg
ffree
fldl
cmp
sub
cmpsb
out
sbb
cwtl
fcmovnbe
pop
ret
pop
addr16
shrb
pop
imul
repz
jbe
mov
and
jns
repz
mov
push
or
dec
xchg
cmp
ds
pop
dec
fdivrs
leave
mov
pop
inc
adc
xlat
shll
push
pop
dec
xchg
shlb
and
xor
insl
or
mov
cmpsb
std
adc
mov
iret
jb
jl
js
add
bound
stc
call
enter
aam
daa
cmc
dec
out
sub
mov
cmpsb
dec
stc
inc
mov
mov
jb
in
not
jge
addr16
jmp
mov
pop
addl
testl
das
inc
lahf
mov
mov
std
aam
cmp
or
push
adc
jle
push
xchg
inc
push
jg
and
mov
repz
cwtl
lea
cmp
xor
inc
sbb
sbb
pop
cmpsb
cmp
ret
adc
xchg
cld
std
icebp
push
pop
xor
push
xor
mov
jno
fdivrs
in
in
data16
xchg
lret
pop
mov
dec
repz
jle
rcrb
ljmp
rolb
cmp
add
test
outsl
or
stc
vmwrite
mov
mov
sbb
adc
cltd
addb
pop
hlt
call
sub
aam
mov
jns
mov
loope
cli
mov
sbb
mov
xchg
addr16
fstpt
xchg
lret
mov
sub
imul
bound
and
fucomip
outsb
enter
jb
lret
inc
mov
loopne
fldenv
fisubs
cmp
or
inc
bound
cmc
jmp
mov
lds
push
and
xchg
test
inc
notl
jne
sub
jb
loop
out
rorl
inc
test
movsl
shll
int
pop
inc
iret
jbe
dec
cmpsl
pop
mov
jne
mov
pop
xor
xor
pusha
stc
int3
lcall
xchg
ret
jecxz
cltd
cmp
movsb
push
repnz
inc
enter
sub
sbb
push
dec
nop
add
adc
mov
movsl
sub
out
sbb
inc
or
cli
in
out
lods
and
xchg
inc
inc
push
inc
xor
xor
sub
je
dec
push
lret
sahf
push
push
pop
or
in
lock
mov
xchg
lea
mov
sbb
sbb
cmovp
mov
sub
das
gs
adc
push
cmpsb
dec
lods
add
andl
dec
xchg
xchg
cmp
dec
mov
cmpsb
push
cwtl
mov
addb
int3
add
jae
mov
sti
imul
xor
xchg
cmp
cmp
push
jmp
stos
xchg
adc
and
sub
push
lock
jecxz
push
and
add
xor
pop
lahf
sbb
and
push
inc
adc
jecxz
pushf
cmp
push
jbe
jmp
mov
inc
std
pop
loopne
mov
call
enter
test
outsb
mov
ljmp
cmp
fstpl
mov
mov
add
dec
pop
inc
loop
sub
test
lcall
mov
xchg
stc
and
sbb
dec
popf
mov
imul
out
out
mov
dec
sub
xchg
sub
or
movsl
sub
fdivp
jae
mov
sahf
aaa
cmp
int3
jb
hlt
adc
fiaddl
hlt
imul
add
ret
xchg
fiaddl
mov
sub
mov
sbb
mov
fs
mov
xchg
jo
cli
outsb
divb
jae
mov
adc
push
fmulp
flds
cs
out
pushfw
xchg
dec
jl
daa
adc
inc
pushf
mov
leave
add
in
add
in
add
adc
insl
mov
lods
addr16
call
insb
fwait
lret
test
pop
push
clc
sbb
adc
ret
movsl
ficompl
jb
pop
jecxz
mov
call
mov
mov
adc
mov
mov
shrl
jp
and
lods
stos
imul
inc
insb
mov
dec
pop
cli
mov
pop
out
push
orl
aam
add
mov
out
xor
inc
sub
cmp
pop
xchg
filds
and
bound
pop
sbb
jp
cld
out
pop
push
add
scas
jg
mov
xchg
sub
sub
scas
jo
xchg
sysret
sar
cltd
gs
ficomps
push
scas
out
test
mov
andb
add
cmp
push
rorb
fmul
pop
inc
cmc
test
leave
out
mov
sbb
jecxz
xchg
test
jecxz
or
stos
sub
adc
int3
dec
cmp
inc
push
movsb
dec
jno
mov
or
movsl
pop
fcoms
insb
push
int
lret
mov
test
shll
cmc
insb
inc
push
lock
push
add
push
jp
mov
lea
xor
fucomp
jne
in
adc
push
outsb
adc
test
sub
lcall
jp
xrelease
out
push
mov
pop
xor
xchg
paddsw
addr16
shll
mov
pusha
sub
pop
test
pop
shl
mov
or
add
addl
push
out
rcrl
cmc
fimull
je
scas
js
jl
cmp
dec
into
and
or
jmp
aam
sub
idiv
pop
push
scas
hlt
sbb
out
pop
push
push
in
mov
adc
es
popf
pushf
sub
pusha
ss
cld
je
push
insb
fiadds
xchg
inc
clc
loope
cmp
sub
ret
adc
outsl
sub
pop
daa
scas
test
xchg
lahf
stos
xor
out
mov
adc
or
jbe
arpl
push
sbb
cmc
mov
rcll
je
add
in
les
imul
fldt
icebp
scas
lods
test
in
cwtl
aas
and
daa
fcomps
push
repnz
inc
js
add
jbe
sahf
mov
out
pop
fcomip
dec
and
cmpsb
pop
call
testl
xor
fdivl
mov
pop
out
in
mov
push
nop
adc
mov
loop
imul
cltd
fadd
aam
xor
inc
cltd
xchg
ja
cmpsl
push
scas
or
cmp
scas
sbb
mov
sbb
fistps
test
mov
jle
lds
cmp
or
fiadds
out
cltd
xchg
sbb
mov
mov
cld
stos
pop
loop
cmpsl
add
pop
mov
sti
cwtl
dec
and
push
mov
lods
test
push
pop
ss
adc
pop
mov
cli
mov
jmp
ret
scas
insl
xchg
out
xor
ret
dec
inc
out
mov
or
add
xchg
mov
hlt
mov
pop
in
sti
shll
mov
dec
imul
xchg
fs
mov
repz
push
cwtl
js
cld
xchg
movsb
inc
stc
es
fldt
xchg
cmp
mov
lret
pop
jl
jp
daa
add
out
rcrl
sbb
lods
mov
jg
fs
inc
js
movsb
or
push
dec
push
mov
outsl
fidivrs
pop
adc
adc
xchg
lea
mov
xchg
lds
rcrl
loop
mov
stos
sbb
int3
sub
icebp
lcall
xchg
test
push
cs
shlb
push
cli
out
inc
pusha
pop
sub
xchg
inc
lock
fucompp
jg
mov
sub
fwait
fwait
lods
sbb
mov
pop
scas
test
sbb
dec
jno
mov
push
int3
divb
test
jnp
cmp
xchg
adc
dec
lahf
xor
push
mov
std
scas
or
iret
repz
rolb
jae
jae
cs
addr16
dec
movsl
js
arpl
push
jp
ret
shlb
sbb
sbb
and
repz
cltd
stos
ret
bnd
pop
into
mov
sbb
sub
adc
js
jo
cmpl
mov
fidivrl
std
leave
pushf
cmp
test
aam
xlat
stc
popa
lret
jnp
addr16
loope
xor
loop
negl
nop
out
dec
push
dec
aaa
clc
in
or
fwait
mov
jmp
mov
test
dec
mov
inc
cmp
fadds
mov
insl
fiadds
bound
adc
mov
leave
sub
jge
add
mov
xor
fst
in
fsub
aaa
loopne
sahf
nop
jl
stos
xchg
add
cmpsl
je
lahf
jnp
clc
in
sub
adc
inc
mov
mov
add
dec
push
xchg
jae
mov
sub
and
sub
dec
flds
fwait
mov
out
imull
or
out
loope
jl
out
lea
mov
add
adc
push
add
hlt
jno
mov
xor
aaa
xchg
inc
mov
xchg
mov
mov
push
imul
or
arpl
test
push
aaa
sub
adc
add
mov
dec
and
push
cmp
sarb
cmp
or
or
lods
pusha
insl
cmp
daa
push
xlat
dec
loopew
faddp
lods
xchg
mov
sbb
pop
movsb
push
test
jge
lahf
roll
and
sahf
cmpsl
addr16
cmp
mov
or
out
sbb
stos
jle
sbb
and
jmp
popw
out
lret
ja
testl
cli
lods
dec
mov
sbb
inc
bound
xchg
gs
test
inc
cmp
lahf
push
jo
movsb
add
sbb
repz
push
imul
in
mov
pop
pop
sbb
adc
xchg
sbb
lcall
scas
fnstcw
jb
jbe
inc
std
iret
sbb
insb
imul
mov
sbb
fldl
leave
in
rcl
adc
test
mov
jge
jno
add
mov
ss
fiadds
xlat
dec
sub
imul
enter
clc
sbb
addr16
sub
test
stc
fidivrl
adc
xchg
fdivs
cwtl
fcomps
lea
movsl
adc
sarl
outsb
fdivr
mov
xchg
push
insb
ret
cmpsb
adc
addr16
or
insb
jle
je
cmc
imul
pop
ds
int3
mov
xor
mov
mov
adc
xor
jnp
sbb
inc
int
gs
lock
xchg
sub
std
js
repz
sbb
mov
xchg
cmp
sbb
setb
cs
fcoml
jmp
adcb
cmpsb
dec
cmc
sbb
mov
adc
addr16
lahf
sub
ficoms
call
xchg
lea
out
cld
and
pushf
xchg
push
adc
mov
mov
pop
jle
cmp
push
jns
repnz
add
add
adc
push
jp
add
jb
out
pop
mov
faddl
push
jmp
int
mov
aas
sbb
mov
push
add
mov
inc
and
xor
pop
xchg
std
sub
sub
inc
jle
and
mov
shll
pusha
fiaddl
cmp
mov
push
xor
mov
dec
or
sahf
jg
fistpl
shrl
adcl
push
sbb
sahf
cmp
test
mov
shl
outsb
roll
ljmp
xlat
inc
imul
push
arpl
shl
push
fwait
lahf
call
insb
jmp
out
cmp
enter
mov
jg
mov
or
call
stos
shlb
shll
cmp
shll
shll
cmpsb
adcb
mov
pop
bound
add
outsb
cld
stc
je
mov
ss
sub
cmpsb
outsb
iret
aaa
xchg
dec
xor
pusha
jecxz
ret
xchg
imulb
pop
out
mov
mov
dec
stc
sub
ret
cmpsb
inc
es
idiv
fistpll
xchg
sarl
sahf
mov
inc
rorb
in
test
inc
js
pop
add
mov
pop
mov
loope
iret
mov
lods
sbb
push
dec
or
bound
mov
xchg
inc
push
push
ret
fidivrs
test
mov
pop
aas
stos
stos
or
cmp
xchg
jb
popf
mov
lret
sbb
sub
adc
cmp
or
out
fs
jb
xchg
daa
pop
and
ret
sub
in
jno
sbbb
movsb
in
popf
je
addb
push
mov
scas
jl
test
cmpsl
push
jb
repnz
pop
push
xchg
std
jbe
dec
jbe
jb
scas
mov
dec
call
lock
daa
cmp
ds
inc
jl
and
pop
inc
push
xchg
adc
jno
lret
dec
dec
add
push
mov
ss
fstps
pop
shl
mov
pcmpeqb
sti
ficomps
lcall
mov
xor
or
bound
popf
pop
mov
iret
mov
cltd
mov
or
dec
sbb
int
mov
mov
adcb
in
fsubrs
insl
in
loop
sbb
fisubl
lea
push
testl
push
not
out
outsl
stc
cltd
mov
test
loop
xor
mov
pop
rcrb
js
xor
xor
sub
test
mov
adc
pop
loop
jae
pusha
add
mov
cltd
dec
sahf
inc
push
fs
cmp
ret
dec
arpl
cmp
adc
lods
lret
add
ret
and
lcall
test
mov
sub
popf
or
and
test
rolb
push
mov
sbb
fdivp
stc
sub
mov
mov
pusha
dec
xor
pop
mov
adc
push
xor
xor
stos
dec
or
adc
sbb
xchg
and
push
inc
pop
pop
cmp
icebp
mul
mov
mov
scas
xorl
adc
scas
mov
cmp
inc
in
xchg
or
popf
mov
in
lsl
push
dec
inc
imul
insl
mov
sub
movsb
or
lds
loopne
jmp
push
fcom
imul
stos
sbb
cmpsb
cmp
mov
ja
mov
mov
or
cmp
fidivrs
sub
mov
add
xchg
sub
pop
sub
test
cwtl
sbb
insb
pop
sub
add
mov
lds
outsb
popl
pop
jge
in
arpl
jp
call
jmp
mull
cmp
jg
popf
mov
sub
mov
xchg
cmpsl
pop
sub
dec
inc
in
lret
adc
mov
or
jmp
adc
xchg
pop
jns
jae
stos
ficoms
stc
rcr
aam
mov
test
test
cmp
xchg
pusha
jmp
mulb
push
mov
adc
cld
mov
mov
jmp
fbld
pop
lods
mov
psubsb
xchg
push
fldenv
or
stos
mov
in
mov
add
mov
ljmp
nop
dec
scas
push
pop
stos
lock
sub
gs
sub
outsb
aad
sub
test
gs
sub
sbb
mov
push
sarb
pop
rcrl
cld
mov
ret
lret
lret
cmc
push
add
add
mov
push
xchg
stc
je
add
lret
stc
push
mov
inc
pop
jge
mov
mov
adc
sbb
enter
pop
int
push
and
testl
mov
in
or
mov
inc
int3
ds
subb
and
mov
out
andb
fdivl
lahf
cwtl
hlt
pop
xor
xchg
imul
xchg
dec
mov
mov
in
fisttpll
and
dec
dec
lock
adc
sbb
or
lea
mov
mov
mov
adc
jmp
les
lret
pusha
in
xchg
inc
or
mov
inc
pop
xor
cmc
outsb
shl
sbbb
add
add
cltd
mov
jmp
mov
dec
pop
enter
dec
xor
xchg
addr16
xor
rorb
dec
and
and
push
inc
inc
insl
fsubl
push
cs
test
push
jecxz
shrl
mov
imul
sub
xor
sub
dec
mov
sbb
out
pop
dec
xchg
jecxz
gs
andb
scas
nop
mov
and
je
sub
movl
inc
lahf
daa
jl
stc
xor
stc
sbb
stc
mov
mov
mov
mov
lret
cli
sub
xchg
out
jp
push
jns
lods
jle
out
dec
sbb
and
sub
jge
jb
dec
mov
xchg
rcrl
iret
outsl
loopne
sub
in
sbb
icebp
fldt
call
jp
arpl
insb
mov
scas
dec
aad
ret
xor
jns
sbb
xchg
jecxz
xchg
mov
bound
and
dec
fwait
ja
cwtl
jmp
test
call
push
call
dec
dec
ret
js
inc
sbb
mov
fiadds
jns
mov
lcall
enter
aam
add
in
mov
fsubs
pop
test
push
adc
lds
mov
pop
push
and
fsubl
mov
out
jle
hlt
insl
push
inc
xor
inc
testb
push
sbbl
mov
pop
cmp
inc
jle
mov
scas
sarl
jae
push
add
in
data16
and
test
push
daa
mov
out
andb
push
out
filds
test
imul
cwtl
jno
fmuls
mov
sti
rol
int3
mov
scas
sub
xor
jge
lods
mov
mov
push
add
mov
insl
inc
sub
or
jno
sbb
and
fbld
sbb
pop
mov
nop
mov
insb
repz
or
dec
andb
sbb
adc
xlat
in
push
push
shrl
cmc
pusha
xor
mov
and
push
push
pop
mov
movsb
push
mov
mov
xor
pusha
add
dec
pop
jmp
mov
outsb
dec
sarb
push
insb
mov
mov
jns
fcompl
mov
leave
pushf
flds
enter
lcall
xor
ret
fcmovnb
stc
nop
cs
aad
mov
sti
jmp
imul
pop
out
xor
pop
out
push
decb
les
loope
and
sub
xchg
push
cmp
das
aas
iret
xorb
clc
xorl
and
or
add
mov
cmp
scas
push
jnp
in
sub
add
push
xchg
fwait
lea
push
add
mov
shrl
and
lea
pop
outsb
xor
loop
inc
pop
cs
lock
inc
or
adcb
aas
movsb
fldt
stc
arpl
int3
cmpsl
les
xor
sub
lods
popa
dec
cmpsl
fwait
insb
fbstp
sub
push
push
cmp
mov
sarb
rorb
int
mov
mov
push
nop
pop
loopne
xchg
movsb
sub
lds
adc
push
test
push
sti
in
adc
pop
add
pop
gs
and
or
insb
cs
ret
sarb
lods
sub
push
js
dec
or
loop
and
inc
out
cld
je
in
sbb
push
stos
cltd
xchg
pop
loopne,pn
stos
mov
out
cmp
mov
lea
xchg
jecxz
shl
repnz
clc
shll
jl
pop
ljmp
dec
and
adc
push
ja
fbstp
popa
jmp
adc
es
repnz
sbb
stos
mov
subb
fdivs
out
sbb
cld
clc
push
lods
cmpsb
pop
jle
fs
cmp
mov
mov
iret
sub
sub
sbb
adc
adc
loope
mov
cmovb
out
pop
scas
outsl
pcmpgtd
lds
jl
mov
fidivrs
add
out
out
adc
adc
inc
ds
js
out
test
mov
mov
cmp
aam
or
pop
push
out
jo
and
push
jbe
mov
jmp
pop
sub
mov
mov
cwtl
adc
int
inc
adc
dec
movsl
dec
nop
stc
test
pop
cmp
push
jle
cmp
pop
stc
int
mov
push
sbbb
mov
sub
fldenv
pop
push
scas
mov
ss
push
inc
push
jo
jo
mov
inc
jle
stos
out
icebp
in
add
les
push
inc
lahf
xchg
es
nop
mov
pop
sbb
addr16
push
pop
jecxz
adc
pop
jge
hlt
xor
out
insb
mov
xorb
jbe
loope
sahf
sub
mov
pop
lahf
dec
fnstsw
inc
ffreep
int
jmp
pop
xchg
fimull
dec
mov
scas
lea
mov
fdiv
pop
and
push
jge
mov
dec
xchg
mov
sub
xchg
sbb
xor
sahf
fidivl
push
sub
aam
mov
inc
sub
inc
ljmp
ficomps
into
push
loopne
je
pop
pop
adc
xor
popf
push
jecxz
mov
das
bound
inc
jg
jno
mov
fmull
and
les
fnstsw
test
inc
and
movsl
push
sbb
rorb
shrl
ret
sub
or
lahf
enter
in
stc
mov
pop
mov
sbb
aas
lods
lods
inc
invd
rclb
es
pop
data16
shlb
and
icebp
cmp
mov
dec
cs
pop
xchg
jne
ljmp
pushf
push
push
mov
insb
pop
jno
pop
push
les
push
out
hlt
push
out
mov
pop
or
sub
out
sub
fadd
test
mov
in
add
idiv
jmp
jo
pop
testb
aad
sub
xchg
cld
and
test
test
shlb
inc
mov
inc
mov
or
cmp
mov
inc
outsl
clc
add
shrb
lahf
push
mov
xor
or
mov
pop
inc
pop
xor
not
lahf
xor
ret
scas
ret
in
xchg
sub
mov
add
push
pop
in
das
jb
cmpsb
push
insl
mov
mov
gs
jmp
or
mov
test
mov
shrb
jle,pt
mov
mov
push
push
cmp
cmp
adc
fcmovnbe
sahf
sub
daa
ret
aas
xchg
pop
add
cmp
test
mov
fsubs
pop
pusha
lea
repz
push
inc
lea
loope
and
jae
mov
mov
and
jl
add
arpl
lods
out
or
add
xchg
mov
daa
sub
psubusw
orb
jbe
mov
repnz
repnz
sub
test
xor
mulb
cld
mov
aad
enter
pop
xor
or
fs
pop
sbb
lcall
bnd
cli
jnp,pn
iret
jne
lds
and
out
xchg
push
xchg
subps
scas
imul
jg
push
jno
pop
mov
xchg
fs
xlat
addr16
lret
xor
enter
rcl
insl
cmp
pop
xor
jmp
fucomp
xor
div
lock
incl
and
xchg
cltd
sub
cmp
and
ret
ret
pop
cld
stc
sbb
inc
xor
mov
sub
or
in
imul
imul
fistl
movsl
arpl
repz
test
inc
push
mov
cmp
push
jl
jl
inc
movsb
rcr
dec
jne
test
xor
and
das
jmp
mov
and
ds
mov
arpl
out
dec
push
or
sub
ret
pop
jns
sarb
loopne
out
jno
cmpsb
icebp
and
outsb
push
cmpsb
push
lods
adc
shll
pop
test
xchg
xchg
jmp
daa
mov
aas
call
pop
jmp
pushf
popl
xchg
push
scas
mov
arpl
orl
or
ret
jecxz
mov
stos
jbe
lret
das
xchg
popl
mov
cmc
or
mov
push
pop
jmp
loope
cld
cld
dec
insl
mov
ds
mov
push
ljmp
daa
ja
shll
mov
iret
jo
or
jle
cmp
xchg
push
mov
mov
inc
jae
ljmp
cmc
sbb
add
cli
mov
call
mov
loope
hlt
cmpsb
cli
insb
or
xor
cmp
lcall
xchg
mov
int3
fcoms
cmp
or
inc
jl
cmpb
stos
xor
in
jle
xorb
into
imul
fbstp
clc
std
xchg
push
ljmp
icebp
fwait
or
aad
lahf
jo
mov
push
add
jns
in
cltd
pop
scas
mov
sub
loop
sub
pop
cmc
sbb
rep
fdivs
insl
cltd
lcall
in
cmp
testl
mov
cmpsl
jae
jecxz
push
icebp
inc
jge
inc
and
mov
sub
push
cmp
push
popa
and
les
adc
xchg
jns
and
outsl
repz
mov
and
pop
push
cwtl
xlat
xchg
out
and
into
cmp
push
stos
add
fiadds
pop
jno
ret
add
xor
movl
sub
pop
sarb
int
gs
movsl
cmc
pop
fwait
or
cmpsb
mov
outsl
adc
scas
mov
lret
cmp
mov
xchg
sti
cmc
xchg
sbb
fs
xchg
mov
fwait
jbe
adc
outsb
orb
cld
cmp
xor
sbb
sbb
dec
adc
inc
aas
lahf
push
mov
jbe
mov
stos
lods
dec
shll
or
jmp
lods
inc
shlb
stos
push
jnp
enter
sub
repnz
outsl
pop
scas
or
nop
jno
or
mov
das
sbb
adc
add
sub
pop
dec
jb
jne
movsl
iret
cld
ja
mov
loope
mov
fimull
aad
xor
dec
mov
aaa
enter
mov
adc
lock
or
lret
push
movsb
xor
lcall
iret
mov
dec
lods
ss
lahf
jmp
sti
int
and
outsb
push
ljmp
push
inc
jnp
sbb
repnz
test
add
push
push
les
inc
add
jns
mov
sub
loop
ret
lods
lahf
mov
gs
dec
incl
sarb
aaa
adc
gs
outsl
sti
rcrb
rcl
mov
jmp
xchg
xchg
push
xchg
cmp
js
and
aad
pop
daa
ds
icebp
fcoml
sub
cmp
cld
pop
mov
xor
push
xchg
lods
fldt
xor
mov
arpl
in
add
lahf
dec
imulb
ljmp
jns
in
fisttpll
sbb
and
adc
cmp
mov
jmp
inc
mov
mov
push
dec
into
cli
or
add
add
lods
imul
nop
mov
dec
mov
or
pop
jecxz
jmp
lret
add
add
mov
in
movsl
mov
cmp
mov
fildl
mov
cwtl
mov
leave
inc
push
xor
jne
addb
mov
ret
and
cmc
iret
add
pop
jmp
push
je
loop
xchg
mov
sbb
imul
push
sub
shll
in
inc
sub
sti
cmp
dec
cs
xchg
out
mov
nop
cmp
mov
shl
nop
int
xor
xor
mov
test
mov
inc
push
xor
cwtl
bound
sbb
xlat
dec
cmp
mov
dec
or
in
push
mov
cmc
js
pushf
pop
arpl
icebp
or
call
sub
jle
cmpl
inc
das
pop
xchg
nopl
mov
xchg
push
gs
rcl
testl
lods
clc
aam
shll
shrb
push
pop
movsl
loope
mov
and
fcmovnbe
out
inc
jbe
mov
mov
xor
ficompl
fsubrl
sbb
mov
cwtl
push
dec
ljmp
cmc
in
mov
inc
jbe
aaa
mov
fildl
jb
push
cs
push
jp
scas
inc
mov
je
ds
jp
and
mov
pop
enter
ret
inc
jo
aad
iret
in
cmpsb
roll
mov
add
js
notl
dec
pop
mov
cli
mov
jg
hlt
sbb
loopne
into
lret
clc
shll
stc
pop
and
xchg
daa
insb
push
std
pop
fsubr
int3
sbb
push
jp
cmp
mov
rorb
push
fwait
lea
sbb
mov
stos
lret
test
mov
jno
fdivr
nop
outsl
dec
mov
shll
sbb
inc
sbbl
jp,pt
cli
out
and
sub
rcrb
push
mov
ret
notl
repz
inc
sub
insl
dec
cli
pop
dec
insl
repz
outsb
add
and
mov
out
fdivr
jns
lock
and
mov
or
push
out
jp
out
fildll
mov
inc
cld
js
nop
or
sub
jno
adc
mov
decb
sbb
aad
mov
icebp
push
dec
inc
mov
loop
rclb
inc
push
xchg
add
rcll
jbe
loope
cmp
das
movsb
mov
lock
outsl
outsb
jb
jecxz
lods
jb
cmp
nop
xchg
xchg
loope
dec
pop
xchg
test
scas
cmp
mov
adc
int3
xchg
mov
cmp
mov
adc
and
mov
je
mull
xor
cwtl
inc
rcl
xor
lahf
in
push
jge
jne
add
mov
jnp,pn
stos
andl
sbb
or
lcall
pop
mov
out
mov
pop
inc
mov
filds
mov
cltd
dec
pop
add
faddl
hlt
data16
add
cld
jle
push
cmp
jecxz
dec
pop
rclb
pop
push
mov
xchg
or
imul
cli
mov
jg
jle
mov
hlt
inc
movsb
or
dec
pop
mov
ss
jle
sbb
jle
or
mov
jmp
pop
mov
dec
or
fmull
pushf
adc
imul
xchg
xchg
xor
adc
pop
stc
cld
push
jle
incl
jl
push
out
inc
mov
mov
pop
dec
bound
and
iret
movsb
mov
into
adc
jns
clc
xor
mov
aas
flds
fs
shrl
sbb
mov
xor
aam
xchg
pop
mov
jmp
sub
aaa
mul
mov
mov
clc
mov
mov
jp
rol
xchg
or
pop
xchg
je
add
movsb
jge
lahf
xchg
sub
pop
inc
test
mov
hlt
mov
mov
mov
cmp
xchg
sahf
cwtl
and
xor
adc
ljmp
stos
xor
pavgb
std
mov
cs
adc
adc
dec
xchg
cmp
mov
sbb
test
pop
xchg
xlat
dec
sub
pop
imul
adc
cwtl
ret
xor
push
rcrl
out
mov
mov
add
imul
loope
cld
cmc
lock
pop
mov
push
or
mov
sbb
fwait
push
cmp
xchg
sbb
dec
aas
or
outsb
dec
shr
movl
imul
dec
mov
mov
dec
mov
lret
sbb
xlat
das
mov
sti
or
and
das
ret
int3
outsb
aaa
add
mov
hlt
sub
leave
hlt
cmp
pop
mov
xchg
sub
sbbb
mov
insl
adc
jle
enter
incl
mov
repz
and
pushl
sbb
out
fisubrs
pop
sub
ljmp
cmp
mov
mov
mov
push
add
sub
xchg
sbb
sub
adc
push
aas
mov
jge
cltd
jae
mov
inc
ret
loopne
pop
cmpsl
cld
out
lea
push
data16
arpl
lcall
lods
add
jae
rol
sbb
cmp
clc
push
xchg
aaa
jne
leave
divb
push
dec
pop
divl
jmp
loope
dec
jo
pushf
cli
lds
adc
mov
and
jae
lret
gs
fwait
ljmp
imul
sbb
sub
aam
insb
gs
lret
imulb
int3
into
inc
ds
cmp
sbb
lea
pop
add
or
lods
and
add
and
in
outsl
mov
xor
cmp
xchg
push
mov
push
push
lods
aam
or
popl
dec
fstpl
cld
gs
fcmovne
fistpl
movsl
add
inc
clc
in
mov
shlb
outsl
stc
out
sbb
sub
xchg
push
xor
sub
mov
ja
sub
jge
mov
in
xor
sbbb
pop
lea
push
movsb
jne
dec
dec
sbb
xchg
stc
iret
add
dec
fildl
mov
cltd
gs
xchg
stos
push
shlb
cmp
and
jle
shlb
lods
add
and
stc
pushf
xchg
or
or
rep
js
mov
jmp
lock
lahf
je
ret
mov
imul
call
cli
push
mov
lahf
mov
pop
jne
mov
imul
xor
ret
fnsave
mov
test
mov
orb
xor
cltd
dec
jg
dec
lods
fcoml
mov
mov
and
ffree
call
sbb
sarl
add
xchg
addl
push
mov
mov
andb
mov
ja
sub
in
xlat
sbb
lea
and
cmp
or
jp
popa
loop
imul
jae
jb
add
sti
aas
mov
gs
lods
push
orb
rcll
jecxz
outsl
mov
mull
add
mov
pop
dec
mov
add
mov
fisttpll
aam
insl
jae
xchg
loope
sbb
test
repz
jle
jl
push
inc
out
jg
enter
mov
push
mov
jne
ja
pop
movsb
dec
cmp
test
lods
push
icebp
lds
push
daa
adc
adcl
push
out
mov
daa
jle
mov
icebp
sbb
test
daa
cmpsl
aas
ljmp
call
add
adc
jnp
jp
movsl
repnz
xor
sub
emms
lods
dec
clc
mov
mov
push
jmp
pop
fs
sub
xchg
pop
add
ja
jecxz
insl
mov
push
loop
xchg
pop
sub
mov
movsb
ret
jae
sbb
fisttpl
inc
pop
daa
mov
lds
lods
sub
sub
loopne
ljmp
inc
aaa
mov
icebp
and
and
mov
xchg
push
adc
fisubrl
mov
mov
mov
cmp
ja
cmpsb
pop
or
mov
sub
fcmovbe
in
jae
aad
lods
in
int3
sub
push
shl
lods
mov
push
in
jae
push
push
jns
fistpl
inc
pop
cmp
inc
sub
push
inc
daa
fdiv
adc
and
outsb
inc
int
insb
xor
jnp
mov
add
ret
mov
mov
or
test
cmp
pushl
push
testb
dec
imul
cltd
pop
insl
sub
xchg
mov
jle
out
adc
lcall
js
scas
add
xchg
and
add
xor
mov
pop
and
fs
jo
pop
mov
rcl
and
pusha
sub
fcom
movsb
lahf
jns
pop
dec
mov
sbb
push
and
mov
mov
xor
aad
sahf
push
inc
xchg
dec
mov
fucomip
out
mov
sub
mov
test
in
ret
data16
add
adc
lret
scas
xor
int3
push
push
mov
cmp
icebp
sbb
ret
lods
cmpsb
dec
or
pop
fs
sahf
push
in
push
xor
pop
xchg
cld
aam
jae
or
loop
fildl
lds
mov
jb
sbb
rolb
xor
add
loope
sbbb
mov
mov
sbb
pop
aam
or
pop
arpl
mov
and
lods
or
mov
stos
sub
push
outsb
mull
shlb
hlt
jbe
loope
cwtl
testl
xchg
adc
hlt
int3
ret
jl
mov
adc
push
imul
lock
pop
jmp
add
sbb
subb
sub
pop
incl
popf
jno
into
pop
push
movsl
lds
mov
add
repnz
inc
in
cld
push
add
jo
arpl
aad
xor
sbbw
cwtl
cld
xor
xchg
jb
fs
cmc
xor
ljmp
pop
and
cld
insl
jns
sbb
mov
popf
dec
mov
mov
nop
xchg
cmp
add
hlt
shr
mov
inc
mov
dec
sbb
sarl
cmp
adc
out
mov
jne
lahf
ficoms
mov
hlt
xor
scas
aam
sub
mov
jno
jns
sub
or
xchg
add
pop
fwait
mov
lret
xor
je
jge
dec
jae
pop
int3
loope
clc
fcmove
sbb
push
pop
test
test
add
sbb
push
sbb
out
push
addr16
mov
cmpsb
bound
mov
push
and
mov
mov
loope
test
push
mov
ja
fsts
push
push
mov
in
jmp
sub
rcrb
bound
xor
or
push
and
popf
insl
popf
into
xor
xor
push
lcall
adc
inc
repnz
push
xchg
lods
hlt
orl
mov
jmp
lock
xlat
inc
testl
movsl
sub
bound
mov
ja
mov
and
fidivs
fwait
scas
mov
lods
sbb
pop
jl
fadd
xor
sarb
mov
inc
xlat
pop
sbb
stos
test
in
leave
in
and
xor
add
ds
mov
cmc
mov
or
rcll
inc
xchg
mov
push
sub
push
daa
jecxz
orl
insb
push
mov
sti
and
lret
sub
loop
pop
nop
test
loopne
sarb
mov
adc
xchg
dec
ret
loopne
xor
outsb
pop
sti
sbb
xorl
movsl
adc
pop
daa
js
mov
int
stc
enter
adc
bound
xchg
pop
dec
stos
pop
icebp
inc
mov
inc
nop
xchg
gs
jge
cmp
lea
lcall
test
incl
cld
or
xchg
or
mov
lds
xchg
adc
pop
inc
dec
xchg
movsl
or
adc
adc
sbb
add
into
mov
push
fstpt
shlb
mov
lcall
sub
or
xchg
jp
add
out
jbe
mov
out
fstp
popa
loopne
inc
adc
lahf
mov
pop
lea
xchg
adc
pop
cld
mov
cmp
jp
push
push
mov
movzbl
pop
inc
sub
push
inc
sub
mov
sub
lea
mov
inc
dec
inc
inc
and
lea
mov
inc
call
inc
inc
dec
and
lea
mov
inc
inc
dec
dec
xor
lea
imul
inc
dec
inc
dec
or
lea
mov
inc
inc
dec
inc
call
or
lea
movzbl
inc
dec
sub
inc
add
call
call
lea
push
movzbl
call
sub
sub
call
add
sub
sub
lea
imul
inc
inc
add
dec
pop
sub
lea
mov
add
inc
pop
dec
dec
pop
dec
add
lea
mov
pop
dec
inc
dec
inc
or
lea
mov
inc
pop
dec
dec
pop
inc
sub
mov
lea
mov
call
inc
inc
dec
add
ret
add
lea
push
movswl
inc
push
dec
dec
push
add
and
push
lea
imul
push
dec
inc
mov
dec
inc
push
and
ret
push
lea
mov
dec
dec
dec
push
dec
sub
push
lea
call
mov
sub
sub
inc
inc
xor
lea
mov
inc
inc
jmp
lea
mov
inc
dec
inc
inc
add
sub
mov
lea
inc
add
inc
inc
cmp
jb
xor
xor
lea
imul
mov
inc
inc
mov
dec
add
inc
or
lea
inc
sub
inc
mov
sub
add
cmp
jb
lea
mov
movzwl
sub
xor
add
inc
xor
dec
and
pop
lea
movswl
test
jbe
inc
add
sub
dec
or
lea
movswl
add
dec
inc
add
add
lea
dec
add
inc
inc
sub
xor
lea
mov
inc
add
and
inc
inc
mov
sub
lea
movzbl
mov
inc
add
sub
add
and
inc
and
mov
lea
mov
mov
inc
dec
mov
sub
add
mov
xor
lea
mov
inc
dec
dec
dec
jne
dec
mov
and
lea
mov
dec
sub
add
inc
or
lea
mov
mov
inc
dec
sub
inc
xor
lea
imul
dec
mov
dec
inc
test
jbe
inc
and
lea
mov
inc
inc
inc
dec
and
lea
imul
inc
sub
inc
inc
inc
or
lea
mov
add
dec
dec
and
inc
xor
mov
lea
mov
movzbl
sub
dec
add
inc
inc
and
and
lea
mov
imul
inc
movzbl
inc
dec
mov
dec
jmp
inc
dec
sub
lea
imul
add
dec
inc
sub
xor
pop
ret
push
lea
mov
dec
inc
inc
add
xor
lea
sub
mov
dec
sub
add
dec
add
lea
mov
dec
inc
inc
inc
or
lea
mov
inc
inc
dec
inc
or
lea
mov
inc
inc
dec
push
dec
or
push
lea
call
imul
push
dec
dec
pop
inc
sub
mov
sub
lea
push
mov
add
pop
add
inc
movzbl
add
sub
cmp
je
lea
mov
sub
dec
dec
dec
or
push
lea
mov
dec
inc
push
sub
sub
push
or
lea
push
mov
call
dec
dec
add
inc
add
lea
movsbl
sub
inc
inc
add
or
lea
mov
inc
iret
dec
inc
pop
dec
ret
push
add
push
lea
movzbl
mov
inc
add
push
sub
add
or
push
lea
push
mov
call
add
push
dec
dec
xor
add
and
lea
add
mov
mov
dec
dec
mov
sub
inc
test
je
or
lea
imul
inc
dec
sub
inc
add
jmp
lea
mov
mov
add
add
add
inc
sub
lea
mov
repnz
add
add
add
inc
jmp
dec
or
lea
movzwl
sub
inc
dec
dec
add
lea
mov
inc
pop
pop
ret
push
sub
add
add
and
lea
mov
dec
dec
add
inc
or
lea
movzbl
inc
sub
inc
inc
add
lea
movzbl
dec
inc
inc
inc
add
lea
mov
inc
pop
ret
sub
dec
mov
dec
inc
mov
sub
lea
mov
imul
dec
mov
inc
add
xor
add
xor
mov
lea
mov
inc
inc
dec
inc
dec
or
lea
cmp
jb
mov
push
add
sub
push
inc
add
push
xor
lea
mov
mov
add
xor
sub
dec
xor
inc
or
xor
lea
movswl
push
dec
inc
xor
inc
dec
mov
xor
lea
mov
add
movzbl
sub
dec
dec
or
add
lea
add
dec
add
movzbl
inc
sub
and
jmp
cwtl
push
jne
sbb
repz
fisttps
in
std
cmpsb
negl
in
bound
dec
sahf
adc
inc
cmpsb
repnz
jb
add
js
mov
jmp
fistpll
or
jge
push
das
ret
icebp
jge
mov
sub
cwtl
mov
rorb
push
cmp
popa
cmpl
repnz
ds
add
out
fdivs
test
sbb
loop
sub
into
cwtl
cmp
pop
out
out
add
rorl
not
in
add
jne
adc
je
hlt
pop
mov
pusha
js
repz
push
sub
pushf
scas
cmovbe
dec
loopne
int
inc
rol
out
add
xor
push
rcll
jnp
iret
cmp
pop
out
in
inc
out
popf
mov
and
lahf
or
pusha
inc
push
sub
mov
jecxz
lds
pop
cmpsl
ret
into
inc
jnp
dec
push
push
cmp
cs
mov
sarl
push
ja
lret
ror
and
mov
xchg
je
lea
into
sbb
adc
rorb
aas
inc
out
lds
mov
shll
stos
xchg
inc
aam
and
inc
dec
pop
imul
cmpb
mov
mov
push
nop
mov
mov
add
xchg
lret
imul
sub
es
fbld
xor
and
adc
loopne
xchg
and
or
adc
repnz
add
adc
fsts
ja
popa
js
inc
mov
std
lahf
sbb
dec
push
icebp
mov
out
fbstp
xor
dec
adc
jle
xchg
loope
inc
xlat
pop
movsl
out
inc
jb
bswap
inc
mov
push
dec
stc
je
dec
cltd
ljmp
das
fldln2
into
ja
stos
adc
insl
cmpsb
fistl
aas
outsl
les
rolb
out
push
outsb
mov
int
lahf
push
mov
mov
pop
les
or
scas
pop
jo
lret
dec
dec
sub
mov
int
in
cmp
add
jl
dec
cmp
es
aaa
xchg
inc
push
push
sbbb
jge
inc
call
dec
nop
lret
inc
push
nop
xor
push
fnstcw
mov
ret
fstpt
test
sar
pop
pop
call
rorl
xor
cwtl
stos
add
pop
lea
mov
out
xor
pop
mov
jb
mov
enter
jbe
sbb
cli
je
punpckhdq
or
stc
arpl
movsl
jmp
mov
push
clc
mov
pop
adc
dec
add
test
jp
stos
inc
sub
das
sti
aad
das
lcall
add
cwtl
jne
push
adc
dec
out
sbb
cmpsb
jmp
cmp
jecxz
add
mov
iret
xor
leave
xchg
mov
jno
mov
rcrl
push
cmp
int
jo
push
mov
icebp
test
rcr
push
dec
fucompp
cmp
loopne
sub
xchg
inc
out
daa
jno
lret
mov
mov
dec
aad
jae
fisttpll
enter
push
scas
sub
icebp
aaa
jg
cmp
pop
xor
pop
rol
cmp
sbb
mov
xor
adc
dec
and
sbb
push
jl
int
stos
push
jg
push
movsl
rcrl
push
inc
loop
outsb
pushf
cmp
xchg
add
jge
mov
cltd
push
mov
inc
cwtl
xor
jmp
ret
dec
add
mov
xchg
shll
test
jmp
out
mov
cs
out
jle
testb
mov
mov
add
pop
lahf
cmp
fidivl
sub
jle
cmp
jge
dec
ret
and
sbb
pop
sbb
fldcw
push
jle
scas
push
dec
inc
or
xchg
loopne
pushf
jns
loop
push
pop
popa
xchg
xor
pop
ret
arpl
mov
jns
push
ret
mov
mov
adc
cmp
cmpb
push
movsl
loope
mov
push
xchg
imul
cmpsl
adc
inc
popa
aam
inc
mov
ljmp
xchg
mov
hlt
stc
and
mov
jecxz
mov
and
dec
push
or
cld
sarb
lock
js
stos
lods
push
pcmpgtb
loope
push
test
cmpsb
sub
mov
shl
xchg
push
inc
ss
pop
and
aas
inc
js
pop
inc
in
pop
sti
mov
les
pop
mov
mov
adc
xchg
mov
cmp
xchg
in
or
mov
pop
push
inc
inc
int3
loope
mov
pushf
movsb
xlat
sub
loop
cmpsl
cmpsl
push
sbb
ror
push
ficomps
adc
xchg
gs
mov
or
xchg
ret
idivb
push
cmp
leave
rcrl
push
lods
pop
sbb
lds
enter
es
pop
or
into
jl
cmp
ds
in
lahf
push
repz
sub
lock
sti
stos
cltd
cmpsl
mov
push
inc
arpl
inc
leave
jmp
xchg
imul
into
inc
repz
scas
push
and
adc
mov
fwait
push
movl
lret
mov
in
stos
insl
out
sub
imul
and
arpl
xor
popa
rcll
cli
mov
and
cmpsl
sub
test
int
icebp
sbb
out
out
movsl
imul
cmc
mov
or
adc
imul
bound
adc
cmp
stc
push
addr16
cli
add
cmp
and
scas
xchg
push
xorl
pop
data16
pusha
jbe
sbb
inc
mov
orb
in
in
clc
aaa
push
fdivl
addr16
jge
dec
inc
fidivl
mov
cmp
cmpl
jp
adc
test
mov
xlat
pop
add
test
push
mov
or
sub
sbb
push
push
and
jge
stos
sysenter
lods
aad
xlat
sbb
pop
push
cmp
jmp
clc
rcr
push
lods
cmp
das
push
xor
out
push
mov
jecxz
xchg
loop
push
addr16
push
sti
mov
ret
in
arpl
insb
lret
int
or
inc
cmp
push
inc
or
or
sub
sub
fistpll
ret
fwait
pop
ret
push
sti
xor
jg
pusha
negb
lea
adc
call
jo
dec
or
sub
mov
clc
shlb
popf
xor
xchg
outsl
outsb
mov
ficoml
inc
jp
fnstsw
popa
cmc
sbb
ret
xor
adc
xchg
mull
push
pop
mov
sub
out
cmp
inc
inc
jns
out
out
jo
imul
shrl
jle
pavgw
mov
aas
push
insb
jo
mov
xchg
push
dec
and
outsb
les
imul
inc
fistps
pop
pop
inc
pop
sahf
movsl
or
outsl
addr16
cmpl
add
xchg
stos
out
and
xchg
or
test
dec
xor
jns
push
popf
xchg
cmc
push
je
mov
dec
sub
sub
cmp
sbb
or
scas
push
cmp
pop
fildll
or
jb
mov
out
js
dec
fdivp
stc
pushf
cmp
jnp
xor
test
fwait
adcb
leave
xchg
fistpl
push
lret
fs
sarb
stc
cmpsb
cmp
jg
mov
adc
aas
jo
leave
or
lahf
cli
mov
loopne
sbb
decb
xchg
addb
push
cmp
lea
mov
mov
xor
cmp
inc
scas
lret
stos
daa
dec
nop
push
hlt
ret
rclb
dec
mov
call
mov
je
outsl
sub
mov
hlt
add
inc
fbstp
adc
roll
inc
sub
dec
mov
stos
mov
jl
scas
cmpsb
fmull
ljmp
xchg
ficoml
sbb
push
push
jg
sub
jno
mov
or
xor
loope
dec
jecxz
clc
cmpsl
or
loopne
std
mov
out
cmp
mov
add
pushf
shlb
fdivrs
cmp
fstl
and
pusha
idivl
scas
enter
or
mov
testl
mov
jg
cli
ljmp
pop
shlb
pop
adc
jl
cmp
mov
pop
stos
aaa
mov
mov
call
mov
cmp
xchg
lods
movsl
popf
je
adc
sbb
test
add
or
iret
int
push
pop
stc
mov
sub
jnp
cmpsb
xchg
add
push
fildl
jmp
insb
jecxz
inc
jns
std
dec
out
xchg
in
in
push
cmpl
subb
inc
mov
add
xchg
push
push
jmp
sub
in
icebp
push
je
mov
jo
mov
or
mov
inc
mov
add
mov
cld
pop
mov
or
shrb
in
outsl
pop
ljmp
scas
jne
xorl
or
push
ret
xor
pop
lods
cs
pop
push
out
mov
pop
jnp
inc
rcl
push
lods
pop
fsub
pop
jb
fwait
scas
lret
or
push
push
mov
fwait
push
sbb
into
adc
sbb
mov
lcall
ret
mov
and
push
repz
cs
xor
jno
add
fwait
cmp
lret
insl
cmp
lcall
testl
push
shll
negl
mov
sbb
mov
stc
xor
inc
cwtl
push
arpl
out
pop
sbb
push
mov
clc
and
test
dec
adc
xchg
xor
lods
fdivs
ds
and
jg
call
jp
iret
and
or
jl
jge
mov
and
cmpsb
xor
cld
clc
jb
shll
jae
xabort
jmp
lcall
int
rorb
push
test
mov
cmc
rclb
lock
adc
mov
sub
cwtl
in
fbstp
push
inc
push
mov
adcl
out
ret
out
sub
jne
in
and
addr16
scas
xchg
xchg
ss
mov
lea
mov
cmp
pop
mov
sub
daa
push
and
jmp
test
repz
movsl
xor
push
mov
jns
dec
in
ljmp
flds
sub
jbe
sbb
loope
sub
jno
arpl
jle
dec
in
das
jle
adc
mov
jl
mov
adc
mov
divb
xchg
push
mov
or
subps
mov
pop
and
mov
push
push
inc
xchg
mov
repnz
subl
push
mov
and
add
in
push
push
cmp
rorl
cmp
daa
mov
shlb
inc
mov
sbb
inc
stc
fucom
or
in
jl
fidivs
cmpsl
out
mov
sbb
cmp
mov
dec
xchg
jle
dec
stos
dec
mov
mov
sub
in
jo
les
in
lcall
out
jle
aaa
lcall
lods
sahf
mov
pop
out
sar
xchg
inc
aam
nop
xchg
outsb
iret
inc
xchg
je
cli
je
notl
aas
jg
cli
cmc
mov
clc
cltd
fld
push
fisubl
js
mov
subb
adc
push
leave
dec
aas
test
sub
clc
jns
and
sub
mov
sub
sub
lds
into
pusha
sbb
fistl
bound
setge
jbe
arpl
lret
lahf
scas
mov
sub
adc
pop
clc
fdivl
xchg
jae
cmp
test
call
pop
fistl
cld
mov
test
repnz
daa
dec
pop
xor
cli
addr16
fnstsw
and
lock
iret
xchg
cmp
fwait
cmpsl
ds
dec
mov
xchg
lret
inc
cmp
cmp
add
dec
bound
adc
xor
adc
dec
shrl
xchg
scas
inc
sub
in
outsl
mov
test
fiadds
popf
jp
leave
lods
subb
outsl
stos
dec
in
add
mov
pop
cmp
xor
pop
xchg
scas
sarl
not
mov
mov
pop
in
fcmovb
call
lret
pop
inc
mov
cmp
aaa
addr16
stos
hlt
ljmp
mov
dec
shll
jb
sbbb
jae
mov
loope
stc
cmpsb
pop
and
fiaddl
bound
cmp
fucompp
in
inc
jmp
cmp
sti
fdivrl
lcall
filds
inc
popf
or
cmc
mov
sub
mov
or
in
xor
mov
push
insl
pop
imul
mov
mov
adc
and
ljmp
mov
pop
dec
inc
ret
dec
dec
sarl
nop
ljmp
movsb
js
shrl
call
fstl
or
daa
sub
mov
xchg
pop
xchg
pop
test
lods
aad
insl
scas
sub
dec
sbb
fldt
adc
outsl
int
sub
in
jecxz
xor
push
rorl
dec
fsubl
loope
inc
sbb
adc
daa
loope
mov
imul
aaa
and
add
ret
lds
add
xchg
cmc
ret
adc
mov
xchg
xchg
and
add
rolb
je
push
fwait
mov
xor
daa
xchg
jecxz
push
in
fnsave
insl
aad
mov
pop
dec
and
test
repz
mov
jne
sets
lds
stos
xlat
sub
jl
pop
loope
and
push
xor
andb
pusha
insl
sub
test
ljmp
push
or
or
or
icebp
mov
jno
xor
xchg
gs
js
test
sbb
dec
sbb
sub
sub
ror
mov
int3
stos
test
mov
jo
push
xchg
mov
cli
out
std
lcall
cmpsb
loope
push
aaa
pop
xchg
jno
cltd
testl
scas
adc
lea
mov
and
xor
test
dec
mov
loope
inc
dec
test
out
sahf
rcll
test
test
mov
aas
or
imul
aad
xchg
push
nop
mov
das
repz
insl
loopne
mov
pop
imul
push
jo
inc
xor
andb
movsl
fs
adc
inc
fcomp
xor
jb
push
ficomps
pop
xchg
imul
je
lds
cld
pop
lods
rorl
iret
dec
pop
inc
or
sbb
fisubs
dec
inc
jb
sub
sub
movsl
inc
jae
mov
or
outsl
ds
inc
cmp
and
mov
fwait
lret
lea
xchg
fxch
adc
add
insl
dec
imul
xor
xchg
jp
cmp
jb
jmp
pop
mov
cs
xor
or
cmp
jns
sbb
loop
mov
mov
sbb
rolb
add
pop
push
mov
jp
test
stos
jno
loope
js
movsl
lret
jge
movb
outsb
addb
xchg
lds
cs
and
pop
push
in
jnp
cmp
lret
cmp
fs
fs
cli
sti
sahf
mov
out
fbld
icebp
mov
or
inc
xchg
addb
sbb
xor
test
test
sbb
imul
ret
sbbb
push
mov
mov
pop
ror
mov
mov
add
out
jbe
cmp
mov
pop
mov
and
sti
jecxz
xchg
inc
andb
xchg
js
stos
mov
sti
das
xchg
cmpsl
adc
adc
xchg
mov
int3
xchg
aas
test
scas
inc
jne
stos
test
stc
in
pop
repz
jle
das
loopne
push
jmp
dec
push
or
inc
sahf
inc
movsb
pop
ss
mov
rcr
mov
es
popf
sbb
and
and
pop
mov
mov
pusha
jno
xor
outsl
pusha
mov
test
mov
sub
outsl
mov
nop
sub
push
sbb
fistl
mov
mov
sahf
mov
shrb
bound
out
incb
into
pop
jo
inc
cmp
cmp
into
adc
xchg
xor
lods
aas
jb
cmc
sbb
xchg
mov
push
lcall
data16
scas
jo
and
test
add
push
mov
lods
arpl
cmp
leave
inc
xor
ficompl
je
cmp
aam
scas
sbbb
test
xor
push
dec
inc
aaa
mov
ds
and
std
push
pop
gs
pop
lahf
mov
jp
cld
cli
pusha
scas
adc
cmp
add
bound
scas
push
xor
mov
das
dec
insb
movsl
cmp
movsl
add
or
push
cltd
mov
xchg
pop
push
pop
test
xor
int
push
dec
push
imul
stos
or
or
shrl
stos
jmp
push
sub
sub
cs
pop
scas
and
adc
and
mov
mov
faddl
loop
jae
adc
inc
push
lahf
lods
and
jmp
dec
pop
jle
pop
mov
fidivrl
xor
and
push
sbb
pop
adc
out
repnz
mov
rcrb
add
add
mov
mov
dec
inc
movsb
cmp
add
add
loope
mov
xor
std
and
loop
out
std
ficompl
sarb
lret
jno
stos
lret
jbe
cmp
sbb
dec
icebp
in
jne
mov
outsl
mov
lret
fstl
fiaddl
mov
addr16
jg
mov
add
adc
adc
cmpl
and
rcll
sbb
cltd
pushl
jb
movsb
xlat
loop
push
out
xchg
and
jnp
xchg
mov
push
and
mov
cmpb
stc
mov
xor
pusha
dec
or
mov
mov
popa
adc
xchg
sub
nop
gs
jp
sbb
daa
cmp
jle
popf
mulb
mov
push
test
mov
js
clc
xchg
faddl
loope
sbb
mov
xor
jp
pop
pop
daa
adcl
sbb
test
jno
push
and
testb
jmp
or
mov
mov
push
popa
jp
cmp
out
mov
jecxz
xchg
les
or
aaa
fs
dec
cmp
movsl
dec
and
mov
dec
xor
ss
pushf
aam
enter
and
into
mov
push
mov
adc
and
push
xor
xchg
dec
sti
cmp
stc
adc
in
mull
fwait
icebp
lock
lea
cwtl
out
lahf
mov
loopne
sub
mov
sbb
scas
push
ficomps
les
mov
je
push
enter
mov
pop
dec
into
call
arpl
adc
sbb
adc
sub
mov
addb
lods
aad
xchg
loop
scas
push
jmp
test
bound
add
push
push
and
test
xchg
push
daa
xchg
pushf
mov
shrb
jmp
xchg
or
push
imul
fwait
jo
sbb
dec
add
mov
cwtl
scas
push
loop
in
data16
push
ffree
cltd
sbb
insb
hlt
inc
mov
aad
insl
cmp
and
jp
shrb
mov
arpl
aad
sub
repnz
stos
mov
mov
or
and
inc
ret
or
out
test
pop
xor
push
and
push
add
lcall
push
js
fbld
jno
sub
addr16
dec
and
orb
mov
jo
xchg
and
push
je
dec
cmp
in
pop
test
add
xor
in
sub
push
fwait
xchg
aad
adc
inc
or
xchg
or
lods
jecxz
pop
dec
int3
or
mov
sbb
and
add
hlt
sbb
mov
push
push
mov
fmul
mov
inc
push
imul
cmp
cmpsl
jg,pn
mov
xlat
inc
into
sarb
xor
sbb
and
jmp
repnz
lods
cmpsl
enter
xchg
ficomps
sbb
xchg
pop
insl
popa
mov
xchg
cmpl
push
mov
shlb
divb
rorb
data16
add
xor
mov
push
mov
xor
test
cmp
movntq
cld
jbe
scas
int3
test
lock
sub
dec
ret
xor
sub
dec
add
cmpb
int3
stos
outsb
mov
jle
ret
es
fwait
xor
adcl
sbb
mov
or
cmp
push
xor
in
in
adc
scas
rolb
iret
bound
js
lods
bound
dec
fs
xchg
stos
inc
cli
js
inc
mov
jb
shr
bound
sub
sar
loope
and
jecxz
or
icebp
out
fbstp
or
daa
pop
je
pop
push
push
arpl
ljmp
stos
popf
lods
and
in
inc
mov
cmpsl
adc
jns
outsb
and
aad
das
cwtl
movsb
add
out
movsb
lock
push
roll
cmp
cmc
push
add
dec
sbb
test
das
sub
dec
push
jmp
sub
insb
xchg
sti
xor
out
jo
sbb
test
incb
jo
int
mov
add
rcrb
or
push
and
pusha
xchg
dec
popl
ret
sti
cmp
repnz
inc
mov
js
ja
inc
pop
stc
addr16
clc
mov
rolb
pop
pushf
cli
cli
sbb
pop
pop
or
adc
popa
data16
dec
pop
push
cwtl
dec
clc
std
jl
inc
mov
popa
pop
test
pop
lret
adc
ret
cmp
push
fwait
lcall
sub
push
loope
xchg
pusha
rolb
jmp
ficoms
cmp
or
mov
sti
int
dec
sub
inc
adc
add
xchg
or
adc
jmp
imul
sub
fsubrs
sbb
mov
mov
push
cld
cmp
lret
call
pop
adc
test
add
cli
mov
xchg
add
jle
movsl
test
divl
mov
push
mov
pop
stos
push
in
into
std
and
lods
shll
inc
and
pop
inc
nop
movsl
cmp
mov
add
dec
and
mov
mov
jns
lret
scas
mov
addb
xchg
imul
or
push
movntq
das
nop
mov
add
cltd
dec
sbb
mov
xor
lahf
pop
les
sbb
push
inc
cmpb
sub
outsl
ljmp
data16
and
push
and
popa
or
pushf
aad
int
dec
mov
mov
cmc
mov
fwait
jecxz
push
lods
in
add
cmp
sub
xor
sub
int3
pop
aaa
stos
jmp
dec
mov
lods
mov
jp
icebp
sub
push
test
pop
add
gs
and
sbb
aas
mov
push
pop
inc
and
sbb
lcall
shlb
xchg
lea
mov
aad
cld
cmpsl
push
xor
call
sub
into
pop
push
mov
movsb
daa
mov
scas
mov
mov
mov
and
fs
inc
sub
dec
adc
sub
stc
add
out
inc
dec
mov
sti
cmp
sub
popa
push
and
mov
roll
adc
xor
jnp
movsl
dec
test
cli
sbb
into
ljmp
cmp
ror
cmpsl
push
sahf
cmp
pushf
cmp
push
cmp
enter
push
nop
push
imul
insb
pop
pop
push
push
jbe
dec
cld
lahf
loop
cmp
mov
insb
jns
push
ror
xlat
mov
xchg
inc
adc
push
sbb
inc
push
mov
adc
jmp
hlt
bound
jns
push
rcll
add
in
outsl
and
or
cmp
sub
jg
xor
out
pop
je
xor
jbe
jo
mov
pop
jb
popf
cs
popf
fsubrl
pop
jo
imulb
dec
es
cwtl
or
xchg
sub
data16
xor
aas
or
repz
iret
or
mov
pusha
xchg
mov
xor
mov
lds
xor
pop
mov
jb
add
or
gs
mov
xor
ljmp
xchg
inc
adc
movsb
stc
xchg
out
pop
push
std
and
sbb
pop
clc
mov
cld
lods
call
sbb
xchg
mov
fildl
or
cmpsb
ror
loopne
sti
pop
pop
arpl
dec
mov
mov
sbb
movsl
dec
js
ljmp
jne
xchg
mov
and
inc
mov
xchg
push
je
lock
push
arpl
push
inc
xor
dec
xchg
cltd
dec
in
jge
mov
pusha
cmpps
popa
mov
and
shrb
adc
jbe
cli
arpl
jmp
or
fcoml
lret
push
inc
push
pop
and
pushf
pop
out
jle
into
cmp
xchg
xor
lret
inc
clc
sub
and
call
out
pop
dec
pusha
push
fldenv
sti
mov
ja
or
push
mov
mov
inc
or
out
xor
out
nop
cmp
adcl
mov
sub
mov
xor
add
std
test
push
test
mov
adc
mov
ret
call
insl
mov
test
das
push
test
add
pop
addb
lds
inc
addr16
sub
push
nop
inc
lds
xor
mov
fcomps
push
cmp
cmp
xor
dec
popa
in
fs
jno
lds
jle
data16
daa
popa
sub
aad
jb
aam
mul
jns
ds
mov
imulb
lods
sahf
outsb
test
inc
ret
adc
into
jge
adc
jb
shrl
jmp
lds
in
inc
dec
daa
push
enter
lods
push
daa
stos
xchg
mov
imul
xchg
lret
decl
cltd
xchg
dec
mov
jb
sub
sbb
bound
sarb
mov
idivl
inc
call
in
sub
jae
fistpl
scas
pop
sbb
mov
xchg
insl
push
aaa
shl
in
cwtl
jae
pop
or
popf
mov
adcl
jp
or
sbb
mov
or
dec
mov
in
pop
lds
scas
cmp
int
std
adc
pop
sbb
clc
or
in
cmpsb
push
mov
icebp
sub
andb
lret
std
xchg
cmp
scas
push
pop
push
push
and
lods
clc
sbb
cs
jbe
test
cld
xor
cmpsb
fcomi
lods
jae
out
rcl
cmpsb
loopne
sbb
adc
sub
cld
std
xchg
rclb
inc
cs
movsl
xchg
ds
shll
cli
lea
add
pushf
adc
outsl
mov
jae
repnz
dec
insl
and
imul
clc
scas
xorl
addl
xchg
rclb
pusha
sbb
adcl
xchg
lock
jns
pop
inc
dec
aas
xchg
mov
and
mov
mov
imul
xor
arpl
push
sub
nop
outsl
lahf
mov
shr
mov
out
idivb
and
insl
add
ljmp
popa
jb
jne
sub
fwait
cli
jae
dec
or
jl
fistpll
cmovae
dec
gs
jg
aaa
mov
pop
divb
xor
fcompl
mov
xchg
lea
shr
call
cmp
std
mov
fdivs
push
lret
xadd
dec
xchg
mov
sbb
xlat
orb
xor
dec
or
ljmp
je
and
xor
dec
cmp
je
mull
xchg
sub
cmp
inc
sbb
or
inc
sbb
inc
repz
mov
imul
mov
subb
push
cmp
mov
nop
daa
xchg
pop
movsb
xchg
and
sahf
ja
fisttps
in
and
inc
lock
cld
xor
pop
int
push
jns
lds
out
jl
add
rcr
inc
loop
cmpsb
mov
jne
das
or
out
scas
imul
sbb
sbb
mov
adc
imul
fiaddl
pop
out
repnz
sahf
mov
xor
push
inc
cmpsl
repnz
pop
sbb
jge
mov
lret
sahf
decl
or
xchg
xchg
jmp
sti
mov
inc
sbb
mov
or
push
sbb
cld
add
inc
into
popf
cmp
int
psubsb
stc
add
jo
fisubrs
loopne
cmpsl
nop
cmp
xor
sbb
ss
icebp
lea
ss
pop
divb
mov
testb
jae,pn
outsl
jecxz,pn
cmp
loopne
cltd
in
mov
or
aad
inc
and
aam
lret
pop
mov
mov
test
lods
push
std
cmp
xor
aaa
push
in
mov
popf
xchg
mov
or
cmp
push
stos
fucomi
sbb
mov
in
dec
pushl
aad
iret
imul
xchg
cmpsb
imull
imul
sbb
add
aam
aam
arpl
push
inc
outsl
mov
adc
js
inc
les
out
nop
push
sbbl
pop
push
cmp
test
push
push
add
cmc
pop
test
outsl
add
inc
fimull
aad
ret
out
push
fmuls
inc
std
xor
cmp
test
cmpsl
pop
mov
imul
xor
loopne
cltd
or
xor
pop
jg
aam
leave
mov
insl
mov
jg
aad
cld
inc
adc
mov
push
loop
sahf
ljmp
cmp
jb
gs
push
jmp
loopne
fcmove
cmp
fmull
mov
fsubrl
insl
inc
pop
ljmp
mov
xor
sahf
ja
cmp
mov
mov
imul
sub
add
es
das
and
cld
adc
push
bswap
adcb
cs
cmp
mov
dec
fistl
nop
loopne
dec
cmp
push
ret
dec
adc
push
and
hlt
cmp
daa
push
add
jns
inc
nop
loopne
lahf
mov
test
xchg
ds
mov
mov
in
push
lea
sbb
pushf
mov
add
cmpsl
je
data16
enter
ret
les
lods
push
adc
dec
sbb
outsl
pop
push
cmp
or
xor
arpl
sahf
rcrb
dec
jg
jno
in
test
mov
dec
or
push
or
sub
push
push
arpl
repnz
jg
pushl
and
loopne
in
push
addr16
mov
aaa
sub
inc
push
adc
inc
sub
push
test
fmull
push
fwait
sbb
xchg
adc
outsl
pop
jp
jmp
mov
jo
sbb
cmpb
xor
lret
pop
into
into
add
cwtl
xchg
data16
xchg
in
in
push
xorl
cwtl
xor
inc
das
aas
dec
xchg
push
mov
mov
jmp
adc
cs
add
popl
or
in
lea
and
mov
inc
sbb
fcomps
insl
sbb
lret
push
mov
in
add
test
in
xor
and
mov
lret
pusha
add
ret
in
cld
sbb
mov
push
adcb
xchg
cmpsl
repnz
push
call
jbe
and
push
in
push
adc
shrl
pop
cmp
pop
sub
cmp
repz
jle
repnz
shll
push
push
movsb
shlb
cmp
mov
jno
int
leave
rorb
dec
loopne
sub
arpl
jle
leave
clc
pop
pop
mov
loop
cmp
stos
mov
jl
xor
jo
lock
jae
arpl
push
inc
sbb
lret
inc
iret
daa
adc
cmpsl
xor
mov
inc
jp
pop
arpl
enter
fistpl
ret
fcompl
jo
pop
sarl
out
sbb
aad
inc
push
xchg
mov
fnstenv
push
jnp
pop
or
setl
flds
popa
aad
mov
flds
das
rorb
sbb
xchg
and
push
add
test
mov
in
mov
and
jo
xchg
add
adc
and
and
ret
or
daa
xchg
call
jae
mov
inc
pop
in
jno
repnz
and
inc
pop
dec
int
repz
mov
aam
cld
xchg
xchg
imul
push
aad
push
sub
es
sti
scas
out
or
pop
cmp
fcmove
fdivs
mov
imul
in
mov
aad
pop
ss
and
jge
and
push
ficomps
xchg
imul
jg
push
or
lahf
jno
ret
cld
test
je
in
xor
jns
sti
mov
sub
mov
jl
aad
nop
bnd
lds
cmp
fcoml
mov
cmp
test
cmp
and
sbb
cmc
inc
pop
or
popa
out
arpl
xchg
xor
iret
insl
lods
xchg
addr16
sarl
jns
xchg
lret
xor
jmp
jecxz
ljmp
aas
jmp
mov
js
jbe
hlt
lds
out
fcomi
je
pusha
movsl
or
ja
xchg
aam
pushf
pop
outsl
and
fidivs
inc
mov
clc
cmp
sub
daa
shlb
into
je
mov
push
cmpsl
ret
mov
inc
adc
dec
gs
rorb
mov
lock
inc
pop
pop
pop
pop
mov
fcom
add
gs
xor
fldenv
ds
push
mov
push
cmp
gs
mov
mov
cltd
movsl
xlat
subb
adc
clc
mov
cmp
xor
dec
push
pusha
adc
add
in
outsb
fcmove
adc
xor
xchg
leave
lcall
es
sub
cmp
adc
cmp
ja
mov
fstl
icebp
in
xchg
mov
sub
rorb
cltd
out
mov
in
add
mov
aad
or
inc
xchg
in
mov
jmp
fucomip
jnp
shrl
or
xor
mov
mov
repz
js
or
xchg
pop
push
pop
cmp
push
mov
and
sbb
dec
cmpsl
fs
aam
pop
arpl
mov
or
insb
or
movsl
cli
mov
addr16
rorl
lods
xchg
mov
out
mov
mov
mov
movsb
out
shlb
movsl
mov
mov
inc
xchg
inc
lods
sbb
jp
jns
shlb
mov
adc
pushf
pop
ficompl
or
movsb
pop
pop
xchg
in
xor
mov
int3
inc
push
or
icebp
xor
scas
or
repnz
xchg
push
jae
das
out
mov
and
xor
lcall
or
popf
rorb
ljmp
inc
lds
test
andb
and
push
dec
fnop
popf
mov
sub
negb
mov
lock
test
xor
outsb
mov
mov
ficoml
int
negl
jno
xchg
test
shrb
mov
xor
push
xor
and
scas
cmp
sbb
dec
dec
fwait
mov
ficoms
repz
or
lahf
iret
fildl
or
mov
adc
mov
xchg
mov
sbbb
fidivrs
addr16
insb
call
mov
insl
dec
and
int3
movsb
push
movsl
scas
aaa
insb
sub
bound
lock
repnz
or
push
fidivrs
jg
xor
push
sub
dec
nop
mov
outsb
lods
pop
clc
iret
and
push
xor
mov
test
aad
fcoms
xor
bound
lock
or
add
out
xchg
addb
lahf
sahf
test
xchg
mov
push
mov
fidivrs
dec
push
ljmp
add
inc
xchg
cmpsl
lods
sbb
andl
jno
leave
in
rol
mov
ret
mov
cmp
test
shlb
and
insb
push
jle
xchg
dec
cmp
jecxz,pt
nop
insl
aad
or
mov
xchg
xor
pop
std
add
jno
push
add
push
and
sbb
insl
pop
int3
cmp
in
lahf
push
in
loopne
sbb
mov
mov
gs
dec
mov
faddl
sub
mov
dec
mov
in
pop
cmp
addr16
xor
out
ljmp
lea
add
mov
fxch
test
mov
push
out
or
pop
xchg
ret
push
pop
clc
or
mov
scas
add
pop
sbb
mov
cli
xchg
mov
into
sub
push
mov
call
push
rorl
or
add
ret
inc
out
sub
sti
jns
je
xchg
dec
inc
jb
into
pop
add
jns
in
jp
popa
jo
adc
sahf
lcall
sub
nop
xchg
sub
verr
out
popf
icebp
pop
mov
outsl
lahf
cmpb
subl
pusha
mov
out
mov
jmp
push
push
in
stos
adc
jmp
xlat
movsl
ret
pop
rsm
cmc
jmp
mov
sbbb
pop
jns
xchg
pop
scas
imulb
push
addl
xchg
jbe
sub
xor
in
sub
xor
pop
xchg
sbb
cmp
cmp
mov
data16
int
cmc
inc
inc
sub
pusha
les
or
push
stos
xor
movsb
cli
dec
add
inc
inc
adc
insb
out
mov
pop
aad
xor
xlat
adc
jecxz
aaa
ds
iret
popf
das
inc
insb
push
loope
adc
das
mov
add
lods
jmp
js
lods
cmp
xor
and
cmp
xchg
imul
mov
inc
lds
xor
xor
push
lret
jns
lock
imulb
les
adc
pusha
popa
ret
pop
adc
dec
es
shlb
pop
xlat
inc
add
test
mov
fisttpl
cmp
push
sbb
sub
xor
adc
int3
mov
pop
xor
stos
mov
or
es
and
pushl
cmp
push
int3
cmp
pop
adcb
outsb
test
dec
xor
leave
fwait
xchg
ficomps
ret
push
jns
popf
repnz
pop
xchg
je
cmp
sti
loop
in
aad
adc
dec
movsb
mov
es
mov
mov
sub
inc
sarl
gs
es
data16
mov
dec
xor
paddb
les
cmp
mov
addr16
ror
adc
or
lret
xlat
and
xchg
scas
jb
pop
cwtl
pusha
cmp
mov
scas
sbb
xchg
cmpsl
in
mov
jne
je
cs
imul
mov
inc
rclb
insl
sub
jns
jb
loopne
test
push
jb
xchg
shlb
and
xor
call
inc
rcrl
sub
dec
mov
inc
jbe
jne
fldenv
inc
cmpsb
jb
pop
outsb
daa
int3
fisubrs
mov
bound
sahf
test
aam
lods
imul
mov
inc
cmp
cmp
xor
inc
in
and
push
adc
push
jg
call
es
int
mov
insb
mov
fdivr
mov
cmp
outsb
fiaddl
and
adc
add
lcall
push
add
shll
push
ja
fdivl
jmp
cmp
cmpb
xor
sbb
fsubs
clc
jne
loopne
adc
and
movsb
mov
sbb
xchg
push
mov
les
cwtl
or
pusha
mov
loop
cmp
xor
daa
sbb
call
imul
jle
cmpsb
jno
hlt
xor
and
mov
addr16
imul
aad
xorb
out
insl
lahf
or
cmpb
mov
ficompl
mov
daa
rcrb
cmp
push
mov
pop
cmp
jne
cmp
mov
add
jmp
mov
adc
dec
sbb
mov
and
cld
orb
popf
fiadds
insb
xchg
aam
fldcw
outsl
adc
inc
in
jnp
push
and
or
mov
xor
jl
xchg
push
cmp
fdivp
rcr
jmp
and
das
sub
stos
cmp
jnp
mov
scas
aas
and
cmc
pop
test
leave
test
outsb
push
and
or
xor
aad
stos
scas
mov
daa
adc
jge
inc
mov
testl
dec
repz
flds
movsb
aad
lods
xor
mov
dec
adc
mov
into
and
stos
sbb
enter
shl
push
cmp
out
cmc
lds
sar
cmpsl
and
mov
xchg
shll
mov
clc
mov
xchg
mov
sub
xor
xor
cmp
insb
daa
mov
lods
orl
jecxz
dec
sahf
test
jno
repnz
xchg
xchg
lcall
pop
sbb
jo
push
fsts
mov
ret
lret
mov
add
xor
pop
adc
fnsave
enter
mov
sub
and
inc
cmc
int
fidivrs
add
scas
xchg
xchg
mov
and
jecxz
adc
js
sti
icebp
scas
imul
or
xor
cmpsl
fidivrs
pop
lret
pop
ret
leave
loop
mov
pop
adc
xchg
jge
jns
jmp
iret
je
push
lea
jno
push
mov
dec
mov
jp
push
je
mov
popa
dec
push
fldl
cs
fsubs
ret
push
pop
push
sti
cmp
movsl
sbb
ljmp
fildl
loopne
scas
lret
lcall
aas
add
sbb
ss
lret
in
lahf
push
mov
movsl
xchg
loope
lahf
mov
jo
in
ja
mov
mov
in
fldenv
push
or
mov
mov
int
sub
xor
loope
call
push
ret
cld
xor
xor
pop
mov
icebp
mov
mov
aam
sub
mov
cmc
mov
pushf
xchg
int3
daa
sbb
repz
inc
adc
dec
mov
dec
in
push
lock
outsb
repz
hlt
out
out
imul
push
xor
imul
cmp
loop
pop
sarl
cmc
adc
xchg
mov
lcall
inc
addb
dec
push
mov
popa
mov
test
cmpl
orl
shrl
test
dec
push
jns
or
pop
aaa
push
out
bound
xlat
leave
insb
aas
add
gs
js
call
cltd
or
test
add
or
mov
fsts
lahf
sub
fs
lahf
stos
fwait
inc
mov
and
adc
mov
mov
or
scas
cmp
shlb
aaa
sub
and
add
mov
inc
rcll
mov
push
jno
or
out
out
sub
ret
xchg
adc
inc
dec
mov
sti
nop
jb
sub
mov
dec
sub
call
cmp
lret
jo
movsl
bnd
xor
xchg
dec
and
ds
mov
insb
and
jo
mov
shlb
sbb
clc
in
out
jmp
int3
push
pusha
insl
mov
dec
mov
cltd
cli
jp
stc
rorl
int3
pop
mov
jne
xchg
or
dec
push
sbb
add
mov
lods
or
xor
pop
sub
bnd
pop
mov
mov
notb
out
pusha
mov
mov
xlat
addr16
jo
push
push
xlat
mov
cltd
and
pop
add
pop
ret
adc
pop
pop
mov
inc
aas
mov
dec
jl
or
or
jmp
jns
cltd
dec
fcmovbe
out
mov
pop
arpl
mov
insb
or
cmovs
fdivrs
iret
sub
or
je
adc
jle
add
xchg
push
fimull
enter
xchg
rorb
es
mov
addb
scas
mov
test
arpl
lea
or
adc
ror
arpl
pop
and
scas
enter
inc
and
mov
mov
cmpsb
xor
icebp
mov
aad
mov
dec
fstl
jge
jne
clc
xor
or
lods
jnp
adc
pop
mov
in
aam
mov
cmc
dec
or
imul
out
push
jns
push
mov
inc
push
loopne
add
adc
fimull
sbb
pop
mov
lods
cltd
fwait
aaa
out
hlt
adc
pop
fcmovu
push
sbb
dec
jle
mov
data16
and
mov
sbb
lcall
jae
jo
sbb
fld1
cmpsl
arpl
xchg
xor
xor
push
dec
es
mov
sbb
cmc
ret
xor
pop
movsb
add
sub
call
movsl
jne
jns
cmp
or
xchg
push
cli
fs
xor
or
xchg
cmp
dec
push
jb
push
fsubs
push
push
jbe
ror
cmpl
out
mov
dec
in
fwait
sub
pop
aas
jge
mov
jno
jno
cs
pop
roll
nop
push
rolb
jecxz
xchg
ret
bswap
rolb
in
nop
ljmp
lods
sbb
daa
mov
xchg
jge
xor
pop
hlt
into
ja
mov
std
inc
inc
sub
stos
sbb
andl
xor
jae
aas
adc
leave
negb
adc
out
mov
sbb
iret
mov
pushf
dec
xor
xor
dec
sar
cpuid
in
cs
xchg
pop
jns
popa
xlat
out
into
dec
xchg
xchg
into
lods
cmpsl
fmuls
xor
das
cmp
adc
lret
adc
ja
sub
inc
inc
and
ret
mov
jb
mov
jne
stos
es
pop
dec
and
out
cmpsb
cmp
add
and
jecxz
cmp
or
xchg
dec
jle
test
out
ss
imul
dec
jno
jle
rcll
push
mov
out
pop
or
insb
push
lds
jb
jnp
push
mov
jne
mov
push
mov
sbb
into
mov
outsl
xchg
movb
xchg
fstp
mov
mov
lret
je
jns
jnp
dec
das
cmp
push
test
pop
push
or
js
dec
cmc
xchg
pop
dec
mov
xchg
fstpt
ja
xchg
xchg
dec
rorl
mov
or
or
xor
cmp
popf
lret
mov
jo
xchg
fstps
insb
mov
push
and
push
jg
xor
adc
mov
loop
icebp
and
mov
mov
xor
mov
dec
test
jp
lret
in
test
into
popf
xor
ret
pusha
mov
mov
adc
in
adc
fisubl
adc
dec
mov
pop
sub
mov
out
xor
adc
push
loop
sbb
int
and
mov
cld
push
ret
inc
push
repnz
fidivs
jmp
xchg
or
mov
repnz
lea
in
lock
push
cmp
ud0
sbbl
adc
push
push
aam
mov
lods
xor
icebp
push
sbb
shl
ss
lock
hlt
arpl
in
xlat
test
sub
gs
xchg
in
mov
dec
cld
lcall
leave
pop
jne
push
adc
jg
sbb
mov
push
imul
and
clc
cmp
stos
aad
imul
mov
into
sahf
xchg
jmp
loope
testl
sbb
outsb
fdivl
movb
xchg
push
jne
push
pop
icebp
cmp
push
je
mov
jmp
mov
xor
stos
mov
cmpl
mov
lcall
clc
adc
testl
mov
and
subl
leave
iret
fildll
insb
inc
lods
rcrb
sub
ljmp
js
lahf
push
pop
inc
in
ror
lcall
insl
xchg
push
xchg
add
icebp
fdivrs
and
push
mov
sbb
imul
dec
inc
std
xor
mov
jb
pop
sbbl
push
shrl
pop
xchg
sar
jp
dec
sbb
aam
lds
sub
sub
xchg
fimuls
fwait
xchg
mov
or
nop
cltd
inc
movsl
sahf
xchg
mov
cmpsl
jb
orl
push
lock
daa
xor
in
jmp
inc
jns
fists
cmp
xor
fistpl
insl
mov
mov
lcall
cli
xchg
mov
iret
subb
mov
jecxz
jnp
fmuls
mov
pusha
sbb
fs
mov
jae
xchg
out
cmp
push
imul
test
je
pop
pop
push
inc
in
jae
rorb
mov
xor
lret
loopne
pop
les
adc
jle
sub
mul
ret
lret
fiaddl
jl
sbb
xchg
mov
test
xor
cwtl
fists
inc
addb
dec
pop
pop
jp
mov
sti
sub
andl
or
imul
xlat
and
and
into
mov
lret
xor
or
inc
add
stc
inc
popa
in
cmp
mov
fpatan
or
popf
mov
add
pop
imulb
jo
sbb
jnp
cmp
data16
lock
cmp
and
mov
push
lret
jns
sbb
inc
add
push
dec
pop
push
adc
bound
pop
mov
pusha
sub
out
dec
call
fnsave
jns
rolb
xor
push
add
les
inc
sbb
mov
pop
insl
mov
xor
sahf
pop
jae
mov
add
dec
mov
fists
sub
cmp
int3
mov
aam
mov
cmp
das
imul
push
mov
inc
or
xor
jno
mov
in
scas
lcall
mov
push
fwait
lea
popf
repz
orb
xchg
flds
ret
mov
mov
cmp
bound
loope
adc
pop
test
test
mov
pusha
pop
jp
mov
xchg
inc
dec
push
add
push
cltd
lahf
addb
frstor
mov
xor
or
push
mov
stos
inc
nop
or
dec
xchg
push
mov
in
mov
movsl
jns
push
cmp
cli
and
outsb
push
subb
mov
cs
fnsave
sub
xchg
mov
mov
xchg
repz
dec
pusha
insl
mov
mov
std
add
jns
jno
push
pop
inc
xchg
imul
push
fnsave
xchg
jns
jmp
cmp
mov
loope
inc
dec
pop
aam
rclb
dec
pop
out
sub
push
lahf
mov
out
stos
jbe
clc
enter
mov
pushf
pop
sbb
inc
sahf
ret
inc
lcall
int3
dec
jnp
xor
aam
push
xchg
cmp
inc
jmp
js
ror
sti
cmp
push
mov
mov
out
loopne
ja
movsl
cmpb
xor
sbb
adc
int
enter
xchg
outsb
lods
data16
cmpsl
dec
dec
aaa
and
xchg
aaa
fdivrs
repnz
daa
xor
shlb
push
xor
andl
inc
lcall
ss
insb
out
mov
xchg
push
inc
lret
xor
outsl
shll
push
push
jae
ds
jmp
mov
push
arpl
or
mov
in
insl
lea
pop
dec
in
jl
ret
inc
lods
cmc
aaa
mov
iret
dec
cmc
push
mov
jecxz
dec
mov
imul
mov
xor
out
pusha
push
xchg
clc
add
shlb
cmpsb
xchg
push
xchg
call
fwait
std
js
dec
push
cmp
xchg
xchg
or
ljmp
mov
adc
jg
fdivrs
lret
xor
sub
adc
inc
scas
loopne
mov
jae
mov
mul
loopne
scas
and
mov
jecxz
scas
dec
mov
inc
xor
or
jno
cmp
ficompl
inc
mov
popf
cmp
mov
sub
lea
push
xor
mov
mov
mov
stos
in
mov
in
daa
scas
mov
das
stos
scas
stos
mov
push
push
testb
jbe
ficoms
imul
in
cmpsb
mov
sub
pop
pop
pop
sbb
mov
sub
inc
nop
pop
push
out
dec
ret
inc
xor
mov
int
push
decb
cs
xor
loope
mov
into
dec
or
inc
out
movsb
xor
push
fidivrl
jg
insb
out
sbb
dec
loop
icebp
sbb
sbb
mov
stos
dec
push
or
mov
xor
in
add
push
mov
and
add
test
pop
jbe
sbb
xor
adc
sub
or
push
outsb
pop
pop
cld
jp
decl
pop
sbb
and
fnsave
and
and
pop
in
ret
inc
das
out
hlt
fsubrs
sub
and
or
enter
push
pop
cmp
jb
arpl
lcall
inc
test
mov
loop
jl
mov
sub
and
lea
and
mov
push
pop
push
sar
xchg
call
sbb
and
jnp
shr
add
jns
js
jg
xor
jmp
bound
data16
or
or
sub
jbe
xor
or
push
lret
arpl
movsl
ret
sub
xor
push
dec
jae
fucomi
gs
cmp
mov
hlt
scas
inc
das
mov
aas
popa
push
adc
push
adcl
loope
cmp
or
stos
mov
adc
sbb
ljmp
mov
push
incl
mov
sub
jnp
xor
je
mov
outsl
adc
mov
sbb
inc
jp
mov
sbb
mov
cld
dec
in
mov
fimuls
jne
cmpb
push
pop
mov
je
cmpsl
rcll
sbb
scas
pop
outsl
dec
xchg
push
push
shl
add
dec
jg
cwtl
aad
add
add
shlb
cli
div
sub
adc
das
enter
aam
xor
inc
pop
lods
js
mov
mov
cmp
and
and
fbld
iret
sbb
cmp
xchg
loop
push
lods
inc
shl
sti
xchg
xlat
push
lcall
xor
mov
or
rorl
test
scas
cmp
ret
adc
jl
jle
sub
pop
push
or
iret
jnp
cmpsb
fdivrp
cmpsb
movsb
jp
sbb
adc
xor
jmp
xchg
mov
xor
jae
popa
or
gs
jl
sti
mov
call
mov
arpl
jae
outsl
or
lret
and
add
jbe
shlb
xor
in
int3
dec
enter
mov
push
sub
sub
fisubrs
xor
or
add
out
or
into
ret
mov
cmp
or
dec
lea
shr
pop
lods
orl
pushf
stos
dec
inc
jge
lods
or
adc
nop
sbb
dec
rol
lret
cmp
shrb
xor
sub
mov
or
inc
into
ret
fnstcw
dec
fs
push
stos
rcrb
mov
stos
pusha
and
cmp
mov
es
push
rcrb
les
shr
or
lock
xchg
push
ljmp
push
xor
je
mov
push
clc
sub
sahf
aaa
xchg
xchg
psubq
jmp
pop
imull
jp
ljmp
cmc
outsl
stos
lret
addb
xchg
cmp
out
dec
cmp
sbb
add
outsb
add
pop
jg
imul
ss
outsb
or
xchg
jne
outsb
cmpsl
push
aam
mov
jle
xchg
aad
lds
or
sbb
scas
icebp
pop
sub
dec
aam
aam
mov
lret
jecxz
lret
dec
mov
jl
inc
andb
jb
iret
cld
pop
outsb
js
sub
mov
jp
add
test
daa
mov
call
mov
pop
add
sub
fadds
out
adc
sub
dec
ret
mov
add
pop
out
inc
dec
and
xor
xchg
sub
nop
sbb
adc
push
repz
clc
inc
or
push
test
ljmp
mov
inc
xor
call
push
dec
fsts
dec
leave
mov
scas
mov
fsubrl
add
cld
out
and
push
sub
xchg
add
outsb
gs
adc
dec
rolb
fcompl
mov
inc
mov
stc
iret
xchg
push
pop
fisubs
and
sub
pop
or
mov
std
cmp
xor
pop
inc
lea
mov
xor
pop
mov
inc
add
iret
or
pushf
lcall
movsl
in
ds
jnp
pop
sub
scas
ret
sub
push
sub
lods
ds
dec
sub
push
into
stc
or
das
mov
fwait
leave
inc
adc
daa
test
ret
shrb
jmp
ror
outsb
sub
push
and
push
mov
cmpsl
icebp
mov
ja
push
idivb
mov
cli
stc
add
jecxz
in
aaa
jp
aam
xor
testb
shll
jne
add
adc
push
movsl
rorl
das
xchg
into
sbb
pop
xor
jne
insb
mov
mov
xchg
dec
fldcw
push
sbb
icebp
aas
ficompl
ss
jae
pop
in
add
fistpl
add
mov
or
popa
xchg
mov
xchg
leave
add
push
fwait
je
std
xor
push
inc
add
cmpsb
pop
pop
out
mov
lahf
jne
xor
add
testl
or
cli
push
jne
xchg
fmuls
adc
fldcw
popf
in
push
es
inc
aam
andl
lock
dec
das
push
test
popa
divps
ret
cmpsl
pop
and
lret
imul
into
sahf
pusha
jl
inc
sub
in
inc
repnz
add
adc
xchg
fdivl
inc
cmp
dec
xchg
cli
jle
and
xlat
popa
pop
xor
sbb
push
addr16
inc
gs
cmp
sbb
push
in
dec
les
je
add
ret
push
mov
jp
scas
mov
mov
adc
je
and
les
jle
or
mov
cmp
cs
sbb
mov
jl
out
int3
scas
ja
add
xor
in
xchg
aas
xor
fsubrl
cwtl
inc
scas
fwait
or
lds
add
xchg
push
fistpl
xchg
inc
mov
inc
mov
imul
pop
outsb
pop
and
xchg
cli
ret
loope
xor
dec
adc
sti
int3
pop
rclb
scas
cmp
movsb
hlt
loopne
jne
pop
and
stc
sub
repz
mov
mov
pushf
cmp
mov
push
int3
sbb
cli
cmp
aam
lock
dec
je
jne
clc
or
mov
mov
cmp
dec
mov
fstps
outsb
or
mov
push
data16
mov
movsl
inc
les
mov
pop
adc
jmp
push
mov
push
notl
mov
imul
push
aad
lret
bound
sbb
mov
bound
or
std
popf
or
loopne
imul
scas
out
or
mov
cmp
pop
cmp
mov
mov
mov
sti
xchg
ret
mov
inc
dec
fcoml
jbe
mov
adc
es
push
add
shll
mov
leave
daa
les
lds
loope
push
ja
stos
addr16
scas
pop
daa
add
sbb
aaa
scas
pop
out
pop
repz
and
mov
out
adc
movsl
test
adc
fucom
in
addr16
mov
inc
popf
add
idivl
jge
inc
push
cmp
test
rclb
lcall
xor
add
sbb
insl
in
xor
pop
or
enter
jmp
sub
dec
ret
in
add
hlt
cmp
cmp
lahf
jne
sbb
mov
add
cmpsl
inc
and
cwtl
mov
sbb
rorb
divl
mov
inc
mov
cwtl
mov
dec
data16
pop
int3
std
xchg
stc
push
xchg
inc
add
and
or
mov
and
inc
sbb
lret
ja
pushf
or
mov
out
sbb
cmp
mov
adc
stc
jl
sbb
cmp
xor
cmc
shlb
jle
ja
jnp
stos
or
data16
fcom
cmp
imul
fnsave
cmpsl
cltd
fwait
jecxz
cwtl
sub
add
mov
adc
mov
fsub
mov
notl
fists
repz
sub
and
adc
pop
jo
cld
dec
scas
popf
mov
pop
xor
push
add
fildl
fbstp
mov
in
or
stc
outsb
leave
rcrl
push
int
ds
cmpsl
sbb
stos
dec
rclb
pop
sbb
cmp
pop
das
xchg
or
popf
dec
lret
add
pop
imul
sub
or
xchg
fsts
sti
pop
or
sbb
or
inc
xchg
jecxz
fbld
shrl
push
fimull
xlat
jnp
adc
lods
and
push
into
in
xor
ja
and
mov
cwtl
mov
add
shrl
shl
push
xchg
or
scas
cmc
rclb
pop
movl
popf
sub
call
dec
xchg
bound
lcall
ja
dec
and
push
sbb
mov
mov
ss
test
and
fstps
mov
popa
jns
ljmp
jo
into
iret
sub
in
mov
stos
imul
adc
mov
jg
xor
je
subl
repz
jecxz
mov
popa
imul
xchg
push
jno
dec
insb
push
and
sbb
in
test
sarb
enter
mov
add
fcom
inc
inc
int
out
rorb
lds
mov
jecxz
shll
cmc
out
pop
and
xchg
in
mov
inc
dec
stc
das
aad
mov
inc
xlat
imul
and
into
jb
loop
mov
lods
es
mov
and
add
sub
andl
push
int3
icebp
jbe
dec
mov
addl
inc
fstpt
scas
xchg
xlat
fs
dec
aaa
push
adc
sub
fisubrl
jae
js
adc
ljmp
scas
fidivrl
adc
not
repz
mov
adc
mov
lods
loopne
jecxz
cmove
dec
xchg
xchg
sub
xchg
inc
fdivr
or
xor
test
mov
cld
pop
in
add
mov
stos
pop
jnp
fisttpl
jbe
cmpsl
mov
ret
xor
aaa
xchg
push
mov
out
clc
or
mov
jne
pop
jle
sbb
xchg
int3
add
gs
pop
int
dec
in
loopne
outsb
push
call
jns
add
cs
jl
cltd
xchg
push
cmpsb
jbe
fisubl
pop
push
sbb
xchg
insl
dec
gs
outsl
inc
sbb
fwait
sti
ljmp
inc
jmp
jle
idivl
shll
fstpt
xor
sub
data16
pushf
shrl
cmp
pusha
jbe
cmc
adc
or
push
mov
pop
and
pop
cmc
or
fs
add
aad
repnz
cmp
outsl
xchg
mov
mov
shr
push
mov
lds
add
pusha
jmp
std
outsl
stos
mov
sti
std
or
arpl
xchg
mov
jmp
and
aad
inc
jbe
xchg
int3
add
jle
push
aad
mov
gs
shlb
sub
and
xor
adc
add
sub
sbb
inc
mov
jae
mov
inc
jbe
inc
mov
lahf
daa
dec
cmp
jle
pushf
mov
and
lret
dec
lret
xor
dec
repz
inc
cmpsb
xchg
daa
and
push
lahf
lea
arpl
jg
arpl
mov
stos
or
stos
push
push
pop
prefetch
aam
fldcw
cwtl
xor
mov
adc
mov
or
test
mov
cwtl
rcrl
mov
fisttps
lds
out
push
imul
test
push
repnz
mov
xchg
mov
xor
insb
mov
xchg
testb
sub
jp
inc
sarl
sub
mov
xor
pop
dec
xor
dec
dec
pushf
jg
loope
mov
sub
fidivrs
xchg
mov
pop
int3
push
jb
mov
and
imul
cmp
mov
mov
rcrb
ret
mov
add
lcall
dec
and
inc
je
mov
data16
cltd
and
push
insl
sbb
jmp
jp
xor
pusha
out
inc
adc
xchg
sar
jb
dec
aas
pop
pop
in
inc
push
mov
and
ret
in
jg
js
jmp
push
hlt
mov
cmc
add
imul
mov
sbb
stos
or
and
call
mov
cld
loopne
test
cmpsb
fdivrl
cmpsl
lcall
and
mov
sub
int3
adc
popf
pop
fs
jmp
pusha
iret
sbb
inc
and
dec
or
inc
in
call
insb
add
or
cmc
jp
dec
dec
xchg
cmp
mov
lds
mov
mov
lcall
arpl
sbb
fsubrs
cmp
mov
insl
adc
icebp
add
cmpsl
int3
ret
jae
cli
fdiv
lods
jp
mov
in
pop
inc
ljmp
pop
jne
ss
inc
lock
jmp
cmc
cltd
imul
inc
and
xor
inc
push
aam
or
inc
xchg
mov
icebp
cmp
test
add
lods
mov
sub
inc
rorl
cld
pop
aas
mov
pop
imul
mov
push
xchg
add
xor
iret
push
xchg
leave
inc
movsl
xor
push
pop
push
xchg
jle
sar
xchg
add
fstl
jbe
and
addb
mov
pop
push
hlt
popf
cld
xor
push
rcll
push
adc
mov
lcall
xchg
cmp
mov
nop
cmc
xchg
pushf
je
mov
hlt
pushf
cmp
std
das
rcrb
cmpsl
fucomi
and
push
icebp
pusha
stc
inc
mov
int
jg
aaa
add
ret
cmpsb
leave
icebp
dec
jnp
js
mov
loopne
cli
sub
dec
scas
xchg
loop
push
mov
mov
push
repz
adc
adc
jae
or
hlt
insl
pop
shrb
inc
loopne
popl
sub
cmp
insl
xlat
inc
cs
mov
cld
ljmp
mov
xchg
mov
insl
and
sub
add
cmpsl
pushf
hlt
push
or
ja
nop
xchg
xchg
jo
mov
jns
loope
aas
mov
loopne
inc
insl
inc
xor
mov
xor
add
andb
test
add
sub
cld
mov
out
push
lods
cmp
hlt
add
sub
test
pop
mov
and
mov
ljmp
dec
popa
lret
mov
arpl
outsb
jo
jecxz
lea
mov
cmp
mov
cmp
dec
mov
sti
xchg
dec
fdivs
jmp
push
mov
xchg
test
ss
mov
cld
xor
imul
scas
ja
xchg
bound
pop
aaa
data16
sahf
push
cmc
push
xchg
shl
outsb
sbb
cld
shrl
sub
or
sub
jge
movsb
adc
loopne
mov
inc
rcrb
mov
loope
push
xchg
mov
dec
or
mov
pop
mov
sub
xor
loope
cmp
push
lahf
lcall
out
cmp
xchg
push
push
jbe
popf
fidivl
xchg
fldenv
jmp
out
jae
or
and
xor
mov
cltd
and
cltd
pop
outsb
lahf
mov
cli
mov
mov
sub
sub
scas
fistpll
sar
sub
push
xlat
mov
or
fildl
scas
adc
add
daa
into
mov
sub
mov
test
mov
mov
push
and
int3
out
lret
lret
stc
stos
or
loopne
iret
push
cli
mov
push
lret
cmp
mov
cltd
dec
pop
mov
adc
cmp
dec
cmc
out
and
fildll
mov
in
mov
jmp
jmp
pop
test
cmpsb
lahf
test
jp
xor
and
outsl
movsl
in
xchg
push
and
dec
je
adc
lock
jbe
out
arpl
les
and
loop
test
aad
xor
out
fmuls
shll
push
sahf
inc
mulb
mov
stos
pop
jae
cmp
push
cmp
xchg
scas
jnp
inc
fdivrl
loop
push
push
jno
js
outsl
stc
mov
xchg
cmp
lods
or
mov
sbb
js
jg
ljmp
movsb
int3
inc
pop
push
data16
les
sbb
das
xlat
mov
cmc
movsl
xchg
iret
and
push
mov
es
sub
xor
inc
mov
imul
mov
sub
in
xor
lods
push
jmp
nop
sub
lahf
nop
faddl
mov
jb
add
xchg
mov
mov
push
mov
dec
cmpsl
push
sbb
aad
sub
out
sub
fdivrl
mov
jno
test
mov
mov
jbe
xchg
push
lret
inc
xchg
pop
add
mov
mov
scas
fcomp
xor
mov
clc
out
in
cmpsl
dec
inc
inc
add
scas
scas
inc
mov
out
mov
and
pop
bound
inc
es
add
inc
sbb
insl
xor
fsubrs
add
push
and
xchg
mov
inc
xor
je
sbb
push
jmp
loopne
sbb
aad
aas
push
pop
push
or
cli
mov
and
mov
sti
xchg
call
cld
mov
push
xor
std
or
pop
mov
and
clc
cltd
mov
aaa
adc
bound
and
and
jmp
mov
ds
mov
inc
call
lret
mov
add
mov
arpl
or
std
and
popa
stos
push
flds
ss
adc
shll
stos
daa
cltd
jb
leave
pop
adc
aaa
fstpl
pop
dec
daa
mov
inc
fbstp
xor
loopne
xchg
xor
cwtl
pushl
sub
push
aas
fisttpll
call
sub
jne
and
sub
mov
iret
out
daa
mov
in
inc
cmpsw
xchg
mov
push
sub
in
test
jns
add
xor
cmpsb
popf
mov
cmp
inc
fsubp
mov
jl
mov
jbe
jmp
cmp
mov
imul
mov
cmp
outsb
enter
lcall
inc
jo
add
mov
push
xchg
roll
lcall
test
xchg
jge
nop
or
pop
lock
inc
mov
es
mov
ret
inc
push
aam
leave
push
es
fiadds
xchg
cmp
pusha
mulb
add
push
jl
mov
jbe
mov
add
xchg
fwait
sub
push
mov
fsubl
out
adc
mov
cli
push
xchg
shlb
or
mov
sub
shlb
ljmp
cmpsl
cwtl
push
xchg
xchg
cmc
xchg
inc
fstl
jnp
pop
mov
dec
jbe
dec
mov
jns
aad
clc
add
out
ret
sub
dec
push
jo
sub
mov
xchg
popa
in
cmp
test
pop
sarb
pop
mov
sub
dec
push
fs
pop
test
jae
loopne
pushf
std
test
rorb
rdmsr
inc
cli
pop
divl
adc
xchg
cmc
lcall
das
inc
and
xor
mov
pop
rclb
cs
repz
testb
mov
stos
popf
push
cltd
add
shlb
push
mov
repnz
mov
lahf
rclb
mov
fidivrs
and
andl
dec
mov
ret
rolb
js
lcall
data16
sbb
jp
adc
xchg
imul
push
imul
rcrl
cmp
cmpsl
push
or
imulb
inc
movsb
sbb
inc
pusha
imul
cmp
lods
icebp
dec
idivl
xor
imul
daa
xchg
cmc
ja
jge
mov
in
mov
jbe
not
cmp
cmp
lds
movd
sub
mov
ja
inc
dec
leave
mov
mov
nop
lcall
pop
insb
int
dec
push
cmp
and
mov
flds
mov
std
lock
sub
push
push
or
jns
movsl
orb
cmp
testb
inc
jne
cltd
test
mov
push
js
cmp
out
xor
shll
rcl
sbb
adc
or
ret
xchg
repnz
add
rcrl
imul
dec
add
sbb
cld
loope
stc
lea
sbb
call
or
mov
push
add
loope
xchg
pop
push
gs
adcb
rcl
shrl
imul
cmp
call
pop
popf
sbb
icebp
cmp
jg
loop
jge
fidivs
in
inc
imul
sarl
mov
and
pop
pusha
cmp
jmp
jecxz
cvtps2pd
push
add
movsb
leave
repnz
xor
xor
ret
jg
std
mov
mov
xchg
cmp
test
adc
mov
mov
mov
out
movsl
mov
loop
dec
orb
fisubs
outsb
rol
and
lds
mov
xlat
cmp
sarb
imul
bound
jp
les
je
jns
xorl
movsl
mov
hlt
push
test
push
adc
jp
jb
ljmp
fimuls
lock
int
rcrl
daa
push
stos
inc
xchg
jmp
cmp
sti
pop
test
out
stos
xor
mov
add
shll
gs
adc
ds
jbe
out
test
sub
push
add
cmp
fsubl
push
and
xlat
xchg
pop
jle
xchg
repnz
pop
add
int3
push
push
cli
pop
cltd
sub
add
inc
push
and
cli
cli
lahf
fwait
sub
sbb
sbb
fisubl
push
test
jmp
adc
aad
sbb
push
pop
outsl
xchg
pop
cld
testl
loope
stos
dec
jg
xlat
out
ret
push
add
bound
jne
loopne
cmp
and
cmp
xchg
sbb
mov
and
jmp
dec
pop
inc
or
cmpb
inc
xchg
push
icebp
mov
mov
mov
mov
mov
adc
adc
jae
and
or
mov
xor
xor
cmp
mov
pop
out
mov
sub
arpl
imul
adc
jo
pop
xchg
sub
sub
adc
sbb
jae
lock
add
push
pop
sbb
xor
fildll
jne
dec
movsb
fsubrp
mov
mov
aad
or
add
jb
inc
sbb
enter
insb
xchg
movsl
adc
popf
mov
sub
in
jno
hlt
sub
fwait
ret
test
int3
shrb
adc
loopne
cmp
xor
loopne
mov
mov
nop
in
cltd
test
jns
lea
mov
mov
out
sar
push
lods
lods
fmuls
mov
repnz
call
and
iret
rcll
dec
out
xchg
popf
sub
out
aad
ret
sub
fdivrs
cmpsb
push
xchg
and
aad
dec
cwtl
lcall
arpl
dec
push
pop
orb
mov
insl
lret
sbb
mov
lock
push
adc
or
cmp
lahf
test
incl
mov
aaa
xorb
xchg
jbe
mov
push
cmp
sbb
push
cmp
pop
push
add
xchg
add
lods
iret
das
xor
lea
pop
int3
and
push
mov
inc
pop
mov
jnp
lods
cltd
rcrb
jp
mov
testl
popa
xor
test
addb
jno
mov
or
lret
sbb
aam
mov
repz
xchg
aad
cmpsl
pop
dec
pop
cmp
out
pop
mov
mov
pop
dec
and
movsl
push
arpl
xchg
sub
mov
xchg
enter
xor
mov
shrl
push
scas
inc
or
outsb
xor
mov
ds
std
sub
fsubl
out
dec
dec
lds
xorb
fstpl
lds
adc
mov
mov
add
lea
lds
shll
sub
mov
pop
ficomps
mov
call
xor
in
loope
and
dec
lea
mov
shrb
imul
pop
clc
xchg
push
cmp
mov
nop
pushf
xchg
sbb
pop
xchg
loope
jnp
dec
leave
or
push
cmp
xchg
cmpsb
pushf
mov
and
xchg
imul
inc
xlat
loop
fwait
lret
inc
mov
xor
and
jg
xor
fs
mov
ficompl
mov
cmpsb
scas
mov
inc
fs
lods
dec
fwait
pop
popf
cmp
mov
push
mov
andl
cmpl
add
in
and
push
es
outsb
data16
loopne
sub
std
jp
jns
shl
and
dec
nop
in
pop
jmp
pusha
jb
xor
iret
mov
imul
sti
mov
mov
push
movsl
cwtl
gs
subb
cmpsb
sub
insb
sbb
stos
sbb
into
xor
cmp
je
and
and
mov
aam
push
and
lock
mov
popf
mov
or
movsl
push
lret
out
push
cli
fcom
and
or
arpl
scas
daa
ja,pn
sti
aad
push
xor
xor
mov
jl
test
pop
jecxz
les
xor
fdivrl
xchg
shr
out
ss
jle
cmpsb
movsb
and
cli
sti
into
cmp
ljmp
sbb
or
sbb
xor
test
push
rorl
sub
adc
nop
jo
cld
dec
cli
aad
push
imul
loope
lock
out
js
nop
xlat
inc
or
push
out
rclb
push
stos
fidivs
sbb
xchg
add
lret
test
fs
data16
arpl
iret
and
sbb
cli
iret
sar
or
das
call
pop
sub
pop
inc
mov
notl
mov
dec
addr16
clc
arpl
and
add
inc
pop
imul
enter
jge
out
jnp
dec
cwtl
cmpsl
mov
inc
mov
int
pop
adc
stos
mov
pop
push
inc
jle
sbb
bound
sub
stos
stc
mov
cmc
fwait
dec
jg
push
lea
mov
xchg
arpl
and
push
or
fcoml
mov
dec
sbb
mull
out
imul
int3
xchg
dec
and
stc
cmpsl
pop
jbe
hlt
xor
jno
subb
xchg
pop
xchg
stc
clc
and
xor
mov
mov
test
test
xor
fsubrs
pusha
sbb
cwtl
jae
mov
jmp
shlb
or
and
cmp
pop
aaa
std
cld
hlt
mov
jmp
xchg
fwait
mov
xchg
adc
push
push
add
in
jns
cmp
mov
cmp
push
insb
fisttpl
or
arpl
fprem1
cmp
xchg
iret
xchg
mov
cmp
mov
test
mov
mov
aas
fcompl
fdivp
inc
dec
enter
int
push
and
scas
pop
divss
stc
in
popa
lods
push
outsb
mov
mov
push
mov
in
rcrb
jge
mov
push
stos
inc
outsl
es
int3
jne
shlb
sub
cmpsl
cmp
call
jo
add
pop
inc
nop
mov
push
xorb
sbb
push
add
adc
mov
cmp
ja
pop
mov
add
mov
mov
add
data16
cmp
rolb
test
stc
sub
xor
mov
enter
test
in
sub
insl
xor
icebp
jecxz
jno
mov
int3
and
rcr
call
push
mov
xchg
adc
cmp
aam
negl
inc
bound
lods
aaa
not
insl
xchg
fdivs
xchg
cmpsb
push
iret
push
mov
into
and
das
mov
imul
jle
xchg
dec
sub
xorb
lea
mov
cmp
mov
inc
mov
lods
sub
loope
jmp
into
jmp
loop
jecxz
ja
js
pushf
arpl
or
aas
mov
out
cmp
add
adc
jo
sbb
pop
xor
pop
arpl
xchg
sti
rol
inc
cmc
shrl
out
jecxz
jmp
arpl
mov
xor
and
mov
mov
pop
adc
add
push
and
mov
mov
fsubl
xchg
xchg
movsl
sub
shll
fildl
jnp
jne
sbb
dec
adcl
mov
dec
arpl
adc
pop
push
pop
das
add
pop
pop
ds
test
dec
movsl
sbb
inc
cmp
aas
xchg
or
xor
dec
enter
test
movsb
iret
sar
into
out
adc
call
pop
sub
pop
ss
inc
sar
loopne
mov
inc
xlat
inc
rcr
jge
rorl
popa
sbb
push
push
xchg
jnp
frstor
push
dec
imul
test
xor
and
fwait
cmp
mov
add
add
shlb
inc
hlt
sti
outsb
int3
loop
pushf
sbb
dec
adc
fstps
ficomps
mov
imul
imul
stos
repnz
and
shlb
cmp
pop
cmpsb
jns
popf
sbb
inc
push
je
outsb
fs
fwait
call
dec
mov
ret
jg
mov
mov
pop
xchg
sarb
jne
sub
pop
inc
jns
aas
in
sub
out
std
movsl
dec
jge
lods
shlw
ds
push
repnz
sub
bound
sub
aaa
add
out
fisttpll
test
pop
pushf
es
pop
fimuls
dec
repnz
jnp
lods
lcall
rorl
shl
xchg
test
jge
stos
dec
mov
shll
fiaddl
in
jg
in
inc
mov
jg
jge
adcl
js
adc
pop
fsubr
clc
rorb
insb
negb
jne
mov
mov
mov
push
outsl
outsb
mov
push
lret
scas
lcall
mov
mov
jge
iret
adc
nop
cld
nop
pushf
insl
and
sub
bound
cmpsl
push
lock
repnz
mov
xor
movsl
dec
repz
cmpsl
jne
pop
mov
clc
cs
out
sub
mov
inc
mov
dec
xchg
mov
fldcw
lret
dec
mov
xchg
out
icebp
out
xor
push
jp
shll
add
jmp
mov
fs
add
lcall
dec
jmp
cwtl
stos
jle
daa
ss
inc
jnp
mov
in
lea
mov
dec
popf
xor
jl
daa
xchg
inc
int
and
out
insl
xchg
jp
push
movsl
insb
ret
scas
pop
scas
lret
xchg
ret
xchg
push
jne
cmp
push
cwtl
adc
loopne
sub
gs
sti
ljmp
stc
lods
dec
cmp
sub
jne
and
sbb
daa
push
sahf
sub
je
jge
imul
addr16
jns
daa
adc
adc
or
in
loop
push
scas
sbb
loop
mov
add
and
rclb
mov
jae
loope
lret
sbb
iret
out
sti
sarl
jg
lcall
mov
add
pushf
scas
inc
fmuls
mov
sub
stc
xor
loope
sbb
aaa
and
sbbb
xchg
loop
adc
push
add
scas
fs
cmp
pop
out
in
jge
sub
das
out
in
pushl
mov
jb
test
clc
mov
subl
jo
pushf
or
mov
mov
mov
and
push
push
jb
push
adc
shlb
aas
pop
jle
in
aam
mov
cli
pop
sbb
in
sub
push
cmpl
andb
inc
mov
clc
dec
pop
or
scas
pop
or
pop
xchg
imul
sub
or
aam
xor
mov
stos
movb
sbbl
mov
sbb
aaa
popf
sub
sbb
mov
jp
test
jg
mov
mov
mov
insl
mov
sbb
xchg
je
stos
les
push
ss
add
pop
xchg
sbb
std
sub
jo
mov
xchg
mov
or
push
fisubs
es
pop
dec
fwait
test
mov
sub
sti
sbb
das
adc
pop
imul
dec
jge
dec
pop
in
mov
lahf
das
pushf
add
test
js
adc
cmp
cmp
sub
loope
subl
in
lcall
fcmovne
mov
negb
and
pop
loope
test
dec
jno
mov
repz
test
or
popl
cmp
pop
insb
push
mov
pop
cltd
sbb
mov
nop
repnz
ja
or
jp
aas
aad
test
iret
mov
mov
gs
and
inc
movsb
push
or
sbbb
cmp
pusha
std
pop
repnz
add
dec
arpl
inc
inc
sbb
xor
mov
mov
xchg
adc
mov
rolb
add
and
pusha
arpl
push
loop
in
rorb
enter
push
push
lcall
sub
popa
popf
sbb
cmp
cmpsb
sbb
xchg
or
aad
out
adc
sbb
pop
imul
orl
ffreep
sub
mov
adc
addr16
fs
mov
xor
sti
dec
je
adc
movsb
xchg
fsubrl
mov
mov
pop
pop
loop
adc
pop
and
pop
pop
das
data16
sti
in
xlat
daa
addl
pop
fisttps
pushf
ret
fwait
sbb
clc
mov
adc
aad
int3
fstpl
add
push
ret
mov
pop
inc
push
add
scas
and
bound
fisubrl
ret
xchg
rorb
xor
cmp
or
add
std
lods
mov
mov
lret
rorl
push
add
movsl
lahf
pop
pop
shrl
pop
fimuls
and
xchg
bound
imul
ss
dec
lds
cmp
or
add
in
inc
sub
jle
push
fisttpl
pop
and
adc
movsl
cmp
out
fcmovnu
pop
fidivrs
fldenv
xchg
pusha
test
in
fmull
dec
pusha
add
pusha
push
jecxz
mov
scas
call
decl
and
push
push
dec
movsl
and
mov
jmp
push
push
jge
and
shll
or
pop
outsb
cld
sub
adc
sub
sbb
and
push
jbe
and
imul
xchg
es
nop
inc
sti
jns
adc
xchg
lods
loop
setle
dec
testl
inc
das
int3
jge
repz
out
pop
jae
lods
aaa
add
sub
mov
mov
xchg
adc
gs
jae
jle
popf
out
in
push
clc
out
pop
loope
mov
cmp
push
addr16
nop
xchg
mov
iret
push
insl
jp
in
dec
pushf
inc
sub
sbb
mov
popf
sub
xchg
pop
subb
es
movl
shll
clc
scas
stos
sub
adc
ja
movsb
lcall
in
movl
xchg
xchg
jmp
gs
push
fisubrl
pop
inc
jle
cmpsl
js
pop
test
sbb
mov
lret
inc
add
push
fistps
pop
mov
cwtl
xlat
filds
xchg
loop
fistpl
je
sub
or
mov
inc
xor
adc
dec
fnstenv
dec
pop
stos
sbb
inc
dec
mov
sbb
mov
sarl
mov
add
inc
insb
adc
dec
xor
pop
aam
pop
stc
mov
shrb
and
sbb
mov
and
or
movsl
call
cltd
popf
lret
sub
ljmp
outsl
cltd
pop
leave
aam
pop
addr16
rcrl
in
adc
jmp
lods
in
jle
jae
ss
subl
pop
mov
shlb
or
cmp
mov
aaa
cmpsb
insb
adc
and
jns
dec
add
aam
fistl
movsb
add
adc
push
mov
cmc
mov
mov
pop
xchg
ljmp
mov
mov
push
xchg
call
or
adc
jae
mov
sbb
and
add
loopne
test
fs
adc
fwait
mov
scas
in
add
push
dec
clc
xor
dec
pushf
imul
out
mov
push
icebp
int3
outsb
in
add
gs
cmp
add
lret
cmc
add
mov
lret
fldenv
sub
negb
jp
adc
jecxz
icebp
xor
sub
sbbb
lods
pop
sar
movsb
jecxz
mov
inc
icebp
stc
pop
stc
lret
in
adc
add
mov
imul
xchg
mov
xchg
test
pop
dec
pop
push
mov
xchg
or
out
in
add
mov
push
std
mov
in
jae
push
rorb
pushf
xchg
xchg
mov
lds
and
dec
pop
xchg
xchg
bound
enter
push
jp
decb
clc
repz
jb
mov
push
mov
jp
cli
sbb
cmp
repz
fxch
add
pop
xor
pusha
inc
cmp
movsl
and
call
jno
fsubrl
mov
mulb
fst
add
sti
adc
mov
or
mov
aaa
daa
xor
adc
stc
in
adc
daa
xchg
fadds
mov
fsubrl
ret
sub
int3
js
clc
mov
shl
dec
sarb
push
test
adc
lcall
mov
fcomps
or
and
loopne
lahf
int3
inc
int
test
mov
lods
movsb
mov
rcll
out
xlat
iret
xlat
loopne
ja
mov
repnz
fsubrp
xchg
int3
push
cmp
pop
clc
jg
push
inc
cmpsb
loope
cmpsb
cmp
jle
aad
sub
mov
stos
sahf
hlt
repnz
mov
adc
pushl
sbbb
xchg
iret
lock
clc
fwait
adc
mov
push
push
xchg
jbe
cmp
cmp
mov
pmulhuw
inc
out
or
out
mov
push
mov
sbb
int3
jecxz
adc
loop
mov
bound
dec
mov
movsl
mov
leave
inc
xchg
jnp
es
rorl
fidivrs
sub
js
and
sti
aam
adc
cmp
ficomps
or
or
aad
xor
daa
adc
push
jecxz
mov
sbb
mov
bound
mov
stos
sbb
insl
lods
pop
mov
xchg
out
into
daa
xchg
sub
lds
add
cmp
std
repnz
dec
pop
and
inc
cmp
sahf
js
pop
inc
jmp
mov
jbe
mov
sub
add
jg
imul
jecxz
push
lret
js
add
ja
mov
iret
xor
stc
mov
sub
inc
cmc
ret
sub
std
mov
sti
fs
xlat
jo
mov
jl
add
push
arpl
divl
les
fdivrl
dec
mov
pop
mov
add
dec
push
mov
mov
cmpsl
cmpsb
and
iret
mov
push
pop
and
jno
push
jl
aaa
fwait
iret
pop
fs
xor
sub
sub
pusha
imul
sub
aam
jl
sub
inc
ficoml
or
pop
cmpsb
scas
sbb
jo
push
dec
adc
xor
cmpsl
lret
in
pop
jecxz
pop
loope
xchg
pop
lahf
adc
or
mov
aam
mov
fs
popf
add
or
mov
xor
pop
in
xor
add
adc
stos
pop
adcl
pop
adcb
cmp
jbe
fisubrl
mov
cmc
int3
out
mov
sub
pushf
popf
mov
shrl
sbb
cmp
in
pop
es
push
adc
scas
add
rorb
jnp
mov
aad
lret
outsb
mov
mov
int3
xor
add
xchg
in
xchg
outsl
jns
jmp
sub
outsb
insl
ljmp
call
mov
mov
test
js
sub
push
mov
mov
or
dec
js
fistpl
data16
sbb
cld
movsb
sbb
imul
iret
outsl
add
adc
loopne
sub
sub
mov
inc
out
in
jg
das
inc
imul
mov
pop
mov
mov
xor
xchg
call
cmp
adc
mov
jb
jb
pop
sti
js
mov
adc
lret
hlt
push
or
sbb
cs
cs
sahf
mov
adc
loop
sub
mov
lret
dec
in
shrb
sub
pop
adcb
cmp
inc
cld
lret
push
xchg
ret
insb
jnp
jg
sub
cmp
mov
popa
xchg
xchg
testl
out
je
pop
sub
sbb
cmpsl
std
mov
mov
stc
jo
fwait
inc
cs
imul
dec
bound
mov
push
in
in
mulb
aam
cmp
orb
jp
clc
inc
and
dec
and
imul
mov
add
mov
popf
mov
mov
adc
push
add
dec
sub
sub
jp
mov
orl
and
pop
mov
sbb
xorl
popf
jle
push
jb
push
mov
or
mov
lods
push
dec
xchg
push
cmp
lods
rorl
mov
adc
js
lds
mov
into
lret
jbe
fsubrp
sub
mov
xchg
lock
push
jne
xor
add
lahf
jl
add
pop
mov
dec
xor
fs
adc
test
pop
mov
pusha
dec
repnz
test
pop
repnz
sbb
std
outsl
and
push
iret
repnz
fisubrl
imulb
inc
ja
enter
jg
lcall
xchg
cli
add
mov
pop
fsubrl
and
test
sbb
pop
sub
insb
xor
and
cmpsl
xor
adc
movsb
jl
cs
ret
leave
rcrl
lret
in
inc
test
add
popa
aaa
int
or
subb
xchg
ror
xor
popf
ljmp
xchg
movsb
jle
popw
bound
leavew
fisubrl
or
pusha
mov
fnsave
getsec
jle
cmp
and
and
xor
mov
fs
mov
mov
jl
mov
imul
adc
sbb
adc
pop
mov
in
lea
lcall
je
in
and
notb
inc
jnp
inc
lods
lahf
icebp
adc
cmp
sub
lds
xor
int3
shl
and
jmp
dec
lret
insb
jo
and
scas
ljmp
les
mov
inc
adc
mov
pop
sbb
pop
stc
adc
in
sub
in
jne
aaa
call
mov
out
xchg
gs
fs
mov
jmp
pop
add
cltd
jecxz
repz
sbb
dec
or
and
mov
cmp
insl
imul
ret
ja
fidivs
sub
stos
push
lret
ja
in
stos
adc
cli
addl
cmpsl
int3
ljmp
nop
mov
stos
mov
cli
adc
fldl
bound
scas
cmpsl
inc
and
adc
out
xchg
pop
insl
inc
adcl
mov
add
jae
xor
xor
mov
jmp
fisttps
inc
enter
insl
sub
mov
mov
or
fimuls
insb
in
lret
inc
adc
xchg
nop
fldl
loop
out
add
cmpb
lods
daa
xor
mov
push
in
jmp
and
jb
xor
pop
jbe
stos
fwait
loope
dec
mov
cmpsb
fistpll
pop
filds
and
mov
cmp
rcr
sti
dec
mov
push
dec
xor
inc
push
int3
sbb
hlt
xchg
jbe
adc
pop
or
dec
jp
and
jne
cmp
mov
pop
and
test
cltd
jl
lahf
mov
mov
imul
mov
fwait
pop
inc
dec
inc
inc
imul
jmp
sub
adc
mov
icebp
adc
or
ja
das
outsb
fs
scas
push
jecxz
dec
or
fs
addr16
frstor
adc
cltd
adc
or
jg
jns
inc
int3
and
cltd
xchg
dec
insl
icebp
outsb
xchg
xchg
xorb
xchg
pop
xchg
mov
sahf
xchg
inc
add
mov
scas
mov
lcall
mov
loop
fisttpl
or
sahf
shlb
call
ret
dec
mov
test
jo
popa
daa
stos
dec
dec
add
mov
or
jecxz
es
mov
sub
fldl
lds
mov
loop
iret
push
pop
and
cmpsb
push
jg
xchg
fcomps
mov
mov
shl
lahf
xor
fsubrl
ds
imul
stc
loopne
mov
fcoms
std
cli
add
dec
cmpsl
adc
cltd
mov
fisubrl
insl
sub
idiv
sub
lods
jmp
xchg
mov
jns
andl
in
cmpsb
cmp
sbb
jecxz
popf
fists
xlat
dec
add
pop
jae
sbb
xchg
mov
adc
fmuls
inc
loop
mov
jl
rclb
cmp
cmp
push
jg
sbb
shrb
mov
push
std
cld
addr16
fists
repz
into
je
int3
insl
dec
or
dec
xor
xorl
das
inc
mov
roll
add
pop
cmpsb
gs
push
sub
jo
call
stos
scas
mov
xchg
xchg
stos
and
mov
dec
pop
out
or
add
add
sub
movsb
repnz
push
jno
testl
mov
jbe
lds
out
dec
add
lret
fsubs
push
and
fmull
sub
pop
ljmp
push
mov
pop
pop
mov
mov
lods
inc
stos
scas
test
imul
mov
xchg
mov
pop
inc
jne
push
andb
out
scas
mov
push
out
aam
sbb
xor
dec
and
mov
xchg
es
rcrb
mov
addr16
xchg
push
fs
ja
adc
add
mov
inc
xlat
sarb
decl
xor
cli
sub
fdivl
jns
imul
imul
aaa
cmpsl
or
push
ljmp
dec
inc
push
rep
or
pop
add
stos
xor
mov
repz
shlb
pop
push
in
xor
push
and
push
jo
movsb
adc
add
sbb
jge
icebp
rcll
outsb
and
xor
cvtdq2ps
mov
fistl
std
sub
fldenv
dec
lods
xchg
xor
test
out
push
cwtl
push
and
mov
stos
pop
dec
mov
mov
mov
cmp
dec
mov
sar
push
scas
orb
adc
jbe
ds
loop
add
scas
std
pop
push
mov
jb
adc
xchg
lahf
out
adc
inc
popa
lods
ja
or
dec
mov
xchg
jo
push
ja
inc
loop
pusha
or
imul
ljmp
inc
idivl
or
fs
dec
lahf
mov
fstl
mov
or
in
jecxz
aaa
jno
push
adc
lds
and
cmpsl
mov
mov
pop
lds
mov
mov
in
aas
cmc
mov
and
mov
bound
adc
cmp
mov
lret
dec
lcall
lock
int
xchg
dec
ror
push
adc
cmp
xor
adc
fcomps
dec
mov
mov
movsb
or
out
adc
jl
out
pushf
rcrb
jge
xor
adc
rcr
es
push
andb
mov
mul
or
inc
aam
jbe
dec
in
pop
or
push
and
mov
cmp
ret
and
jbe
ret
out
call
ret
out
mov
sar
xchg
sub
add
cmp
stos
mov
mov
and
pop
mov
imul
pop
out
in
and
fucomi
fs
mov
add
aad
stos
jns
insb
mov
pop
outsb
movsl
sti
inc
cmc
out
mov
add
push
xchg
pop
js
ret
push
sub
jne
mov
call
les
cld
mov
cmpsb
xchg
cmp
and
mov
sbb
mov
push
aam
cwtl
mov
out
mov
arpl
or
test
sbb
xor
addr16
dec
outsl
xor
dec
test
sarl
cmp
inc
push
gs
sub
dec
mov
rep
mov
and
pop
js
pop
xlat
sbb
neg
nop
sub
iret
ret
pop
xchg
push
pop
loope
lret
add
push
mov
inc
in
icebp
pop
xor
sub
cmp
fxch
add
enter
sub
mov
add
cmp
sbb
test
add
sbb
mov
insb
and
adcb
cmpsl
mov
es
pop
xchg
dec
jbe
std
add
mov
xchg
xchg
or
xchg
pop
push
or
pop
std
pop
or
into
sub
sub
loop
sub
insb
into
pop
in
fs
inc
decl
or
sub
mov
xchg
fistps
sbb
cmp
pusha
mov
test
sub
xchg
inc
movsb
inc
xor
xor
inc
xor
sub
lcall
jmp
or
sub
sbb
mov
frstor
pop
stos
fwait
xchg
std
dec
mov
and
rorl
add
subb
test
xchg
divl
inc
fisttpl
pop
jp
push
add
sti
push
sub
testb
xor
xor
lahf
lcall
movl
jl
push
mov
pop
in
les
adc
pop
ficoml
loop
mov
js
cmc
dec
decb
js
jb
mov
xchg
jno
stos
cltd
loop
mov
and
xor
mov
outsl
jnp
or
aaa
es
sbb
test
aas
dec
aaa
dec
pop
fisubl
popa
and
setl
pusha
repz
ljmp
cmp
aaa
fistps
arpl
pop
mov
add
mov
sub
cmp
arpl
in
inc
mov
pop
aam
int3
or
js
inc
pop
pop
iret
pop
shll
push
test
push
pop
lods
mov
in
pop
test
sbb
and
iret
xchg
and
fistps
pusha
mov
adc
dec
jnp
pushf
cmp
iret
xchg
test
sub
jb
cmp
sbb
es
out
mov
push
leave
addr16
in
and
aad
sbb
imul
jns
test
sbb
xor
push
bound
jg
adc
outsl
nop
xchg
mov
neg
rorl
add
mov
popa
sbb
xchg
jnp
fistps
enter
nop
mov
xchg
les
lahf
mov
cwtl
add
xchg
pop
jg
xchg
shll
adc
cmc
pushf
dec
push
cmp
ljmp
or
loope
inc
mov
loop
loop
imul
add
orl
adc
fwait
mov
lahf
jmp
push
leave
int3
pop
mov
xchg
jae
stc
fiadds
mov
push
push
xchg
and
mul
xor
lahf
mov
ss
push
sahf
arpl
test
fwait
adc
jne
adc
jecxz
jnp
mov
pop
das
mov
push
lret
jl
jb
repz
sub
movsb
rcll
cmpsb
mov
stc
xchg
mov
cs
push
ret
js
outsb
or
jl
pusha
xorl
and
rcll
sbb
idivl
out
xchg
sub
sbb
xlat
pop
xor
add
mov
dec
popa
mov
in
ds
cmpb
cmpsl
add
dec
xchg
or
dec
es
add
mov
xor
pop
in
loop
ja
sbb
lock
std
and
in
jl
cwtl
rcll
and
std
hlt
xchg
repnz
push
mov
cmpsb
jo
push
pop
sti
ret
mov
inc
mov
cmp
dec
daa
cmp
xchg
cwtl
outsl
stc
inc
fsts
add
faddl
lret
adc
aam
add
ffree
pop
push
sete
sbb
mov
jp
mov
adc
xlat
das
sub
mov
mov
jle
lret
sbb
repz
shlb
ds
insl
dec
bound
mov
cmp
shll
fisttps
fdivrs
mov
jne
insl
dec
stos
and
test
push
pusha
std
ret
xlat
lcall
std
je
xor
mov
xor
push
push
xor
sarb
xchg
enter
adc
stos
out
xchg
push
add
mov
arpl
inc
jecxz
iret
push
iret
mov
imul
aas
lds
push
adc
test
dec
mov
sbb
jo
push
cld
cld
jne
in
loop
into
daa
es
mov
call
icebp
pop
xchg
sub
insb
cwtl
add
add
loope
dec
sar
jo
mov
out
pop
scas
pop
out
call
outsl
ret
jbe
mov
sub
xchg
add
pop
icebp
icebp
fidivs
ret
in
dec
sub
xor
xchg
jnp
shll
loop
es
and
mov
loop
loope
mov
pop
jecxz
pop
lds
cmp
push
in
jo
jne
push
push
movsl
mov
aam
test
xlat
mov
mov
scas
loopne
fstpt
dec
nop
mov
push
jb
mov
and
enter
fdivs
xor
lds
test
fs
cmp
iret
add
lret
lods
push
sbb
or
mov
pop
inc
sub
cmpsl
sub
xor
jo
dec
xchg
cmpsb
cwtl
lods
mov
aam
rcr
iret
pop
mov
loopne
arpl
adc
in
aaa
mov
and
in
push
inc
lods
mov
mov
add
clc
sbb
xchg
xorl
mov
adc
inc
pusha
out
mov
loope
pushf
sbb
inc
lea
rcrb
or
daa
adc
int
stc
sub
iret
je
push
or
cmp
fdivs
xlat
call
sub
popa
xchg
pop
jno
hlt
push
xlat
dec
jecxz
addr16
ret
sub
xor
test
xchg
mov
dec
cmp
shl
outsl
xor
jp
push
xchg
mov
jae
aam
lods
adc
push
xor
adc
lea
push
jmp
sub
in
xchg
cmovo
pop
mov
or
push
jae
jbe
fwait
sbb
lahf
mov
cmc
adc
push
imul
aas
sub
insb
or
lea
pop
pop
mov
lock
push
lcall
xor
pop
or
and
xchg
out
jb
push
dec
repnz
outsb
repnz
jo
mov
sbb
adc
mov
cmp
nop
xchg
dec
subb
lods
shlb
mov
hlt
jge
xchg
push
mov
or
mov
je
mov
and
mov
in
jmp
fs
fstp
movsb
sarb
xchg
push
xchg
xor
cmpsb
mov
enter
adc
rclb
frndint
adc
adc
pop
outsl
stos
lea
dec
iret
outsl
sahf
push
arpl
push
pop
out
popa
loopne
mov
xchg
insb
sbb
cmp
lds
pop
int3
stc
js
cmc
outsb
pop
sti
mov
and
fcmovnbe
orl
or
lods
mov
fidivl
aam
add
hlt
dec
dec
inc
fisubl
test
xor
imul
lret
shrl
ljmp
divb
xor
ret
mov
cmp
shll
into
dec
popa
mov
fsubrs
xchg
and
jnp
jnp
out
leave
aas
add
ficompl
outsb
imul
sub
jnp
sbb
rorb
dec
add
sub
fsubr
or
inc
out
je
test
mov
in
mov
ljmp
and
pushf
jne
inc
leave
test
frstor
cmpsb
shrl
in
fwait
mov
jmp
jl
inc
inc
dec
in
pop
xor
xchg
outsl
rorb
sbb
xor
cmpsl
dec
push
pop
aaa
sbb
fwait
or
int3
scas
push
fs
mov
pusha
out
jns
push
test
xchg
movsb
and
shrb
mov
sbb
cltd
js
xchg
mov
test
imul
jecxz
arpl
addr16
push
imul
mov
add
insb
call
mov
rol
mov
xchg
aad
in
xchg
jg
cmpl
mov
mov
pushf
jmp
cmp
movlps
cmc
shrl
out
negb
jecxz
add
hlt
cmp
sbb
adc
ds
enter
pop
cld
fbstp
jecxz
jl
mov
cld
cld
jmp
jecxz
pushf
add
jno
cli
int
dec
test
loopne
test
add
push
pushf
inc
icebp
mov
add
test
das
sub
lock
sub
mov
cmp
adc
lret
arpl
outsl
orb
outsl
imul
lea
cmpsl
or
adc
cmc
sbb
loope
addl
push
repnz
or
sub
lret
mov
les
mov
mov
cmpsl
mov
or
adc
test
and
pushf
scas
fidivrs
enter
fimull
daa
push
mov
nop
mov
fsubp
push
lret
inc
gs
or
das
gs
mov
cmpl
mov
xchg
mov
jb
cwtl
mov
out
inc
jg
inc
lds
push
xorb
scas
fdiv
sbb
xor
into
ss
pop
clc
dec
dec
stos
lahf
mov
pop
or
pop
mov
out
mov
add
xchg
aas
jb
ljmp
cmp
add
or
aad
inc
push
jno
call
xor
mov
mov
mov
notl
mov
es
scas
push
roll
jecxz
mull
pop
mov
mov
loop
sbb
faddp
nop
mov
xlat
test
jl
test
jg
loopne
mov
pushf
int
push
dec
shlb
movsl
popf
in
inc
out
add
out
repnz
adc
pushf
push
xor
mov
and
pusha
lock
add
dec
stos
xchg
cwtl
bound
adc
mov
push
push
sbb
sub
adc
pop
movsl
jbe
in
pop
pop
sbb
ja
fldcw
int
push
xlat
xor
mov
movsb
test
jp
dec
adc
dec
inc
and
out
syscall
xor
xchg
push
mov
pop
jecxz
xchg
adc
sbb
inc
and
test
mov
push
lods
sti
fucomip
out
xchg
inc
jo
fdivrs
xchg
and
js
fdivrs
mov
push
call
ljmp
pop
lret
shl
push
ds
dec
or
xchg
push
test
or
sbb
pop
adc
js
aam
out
lcall
jp
mov
push
dec
xor
sbb
icebp
jne
dec
jns
ljmp
out
lret
pop
cli
push
shrl
sub
sbb
or
xor
push
fs
xor
cmp
jle
mov
sub
popf
bound
push
movsl
movsb
jge
shll
jnp
push
or
sub
dec
adc
add
pop
fwait
pop
push
xlat
or
dec
adc
and
ja
negb
fwait
imull
pop
or
fiadds
stos
sub
lret
xchg
popa
int
inc
cmp
into
jbe
adc
push
icebp
dec
ja
in
shlb
jp
mov
je
inc
cs
sti
test
mov
cld
xor
fdivr
jb
inc
adc
hlt
pop
push
sbb
les
lahf
xchg
lcall
push
push
mov
adc
pop
pcmpgtw
das
xchg
fs
cmp
xchg
add
or
cmc
out
inc
rolb
adc
dec
out
enter
xlat
mov
popf
jp
stos
mov
into
or
add
add
popf
insl
mov
lahf
dec
inc
scas
lea
and
arpl
loopne
loop
cmp
cmpsl
pop
int3
and
out
leave
cld
mov
in
movsl
or
cwtl
iret
pop
gs
cmp
lea
and
cmp
mov
popa
pop
jo
jnp
mov
sti
mov
or
mov
jbe
cmp
mov
movsl
icebp
inc
push
icebp
sahf
pop
insl
and
outsb
push
mov
iret
out
mov
xchg
mov
pop
inc
cvtpi2ps
or
mov
pop
call
mov
pop
pop
dec
xchg
mov
cli
std
pusha
pop
or
push
or
sbb
cld
dec
dec
sub
lock
sbb
fucomi
mov
push
xor
addr16
xchg
sbb
aad
sub
fmull
lea
cmp
stos
sub
pop
pushl
pushf
and
enter
and
loope
cld
mov
xchg
fsub
cmp
out
fisubs
jecxz
rol
jl
jmp
loope
loope
fwait
mov
jle
jl
aam
ljmp
out
aas
hlt
jge
cmp
sbb
fwait
dec
in
inc
sub
ret
push
movsb
pop
inc
jae
loop
pop
lods
mov
loop
je
movsb
mov
stos
out
sbb
mov
add
xchg
nop
mov
stc
xchg
jp
arpl
jl
imul
sub
mov
mov
lea
cmc
loope
add
adc
jnp
test
es
add
add
sbb
iret
sbb
xchg
mov
in
and
inc
jp
add
mov
jno
or
out
andb
mov
inc
push
xchg
jmp
jl
push
sbb
test
out
mov
pushl
adc
xchg
adc
fstl
mov
test
cwtl
aad
or
push
add
leave
mov
sbb
imul
outsb
mov
pop
aam
lcall
shl
arpl
imul
iret
mov
dec
and
pop
subb
dec
sub
imul
pop
push
adcl
push
lods
movsb
subb
xchg
rclb
xchg
test
popl
jmp
xor
scas
jnp
push
shll
push
fimuls
lret
lahf
cmpsl
sbb
dec
stc
sbb
repz
movsl
jnp
cmp
xlat
cmp
sub
pop
test
sarl
fisubs
inc
adc
lret
popa
xchg
cmp
inc
pop
jecxz
repz
ficoml
pop
aas
inc
fldln2
pushf
rcr
das
add
ss
aas
xor
es
jge
or
xor
lock
cli
or
push
jecxz
mov
test
test
push
inc
inc
pop
xor
xchg
aaa
or
cmp
icebp
fmull
inc
mov
cmc
imul
push
stos
lcall
xor
mov
pusha
mov
adc
jne
arpl
rolb
mov
aad
lahf
aam
cmp
cmc
arpl
in
mov
xor
fnstsw
ret
cmp
loopne
push
push
mov
mov
cmovb
fimuls
inc
mov
dec
in
adc
jmp
xor
pop
bound
int3
stos
jmp
out
mov
daa
movsb
sbb
or
popa
add
subb
scas
ds
jae
adc
insl
hlt
push
rcrl
xchg
pop
mov
sahf
lock
jmp
test
sbb
loopne
pop
lcall
jg
in
or
stc
std
cmp
push
mov
inc
fldl
xor
inc
in
out
inc
xor
outsb
fcmove
lret
inc
and
push
ds
xor
jae
or
jg
and
jl
sti
and
pop
iret
xchg
popl
out
aas
or
negb
or
xchg
mov
cmp
bound
xchg
fstpt
pop
xor
xchg
jmp
and
mov
jl
xchg
stos
sub
mov
subb
cmp
dec
cld
test
mov
sti
cmpsb
jnp
jo
mov
and
xorl
xchg
pop
call
mov
push
pop
xchg
lret
cmpsb
xor
pop
push
loope
cmp
mov
stos
lock
adc
mov
in
fisubl
cmp
inc
jge
sub
pop
rcrb
pop
stos
dec
pop
mov
add
jle
test
or
mov
inc
jno
mov
andb
jb
jo
sbb
in
js
push
jne
sub
clc
xchg
outsb
stos
xchg
subb
sbb
insl
mov
inc
mov
pushf
mov
ret
push
mov
lret
or
adc
or
negl
fcompl
out
fdivs
lods
dec
sbb
sbb
pop
inc
cmp
mov
sahf
repnz
sahf
insl
pop
shlb
es
pop
jae
push
dec
test
sbb
push
cmp
or
bound
xchg
and
popa
cs
out
out
dec
scas
jne
add
cmp
jg
pop
push
popf
push
jbe
outsb
xchg
out
mov
adc
dec
mov
xor
popa
mov
int
mov
lock
push
xchg
enter
jge
mov
mov
push
pop
mov
out
push
or
or
or
imul
jae
add
inc
push
dec
push
insb
in
rclb
jns
sub
int3
lcall
mov
mov
dec
ret
or
sahf
mov
out
cmp
imul
repz
sbb
ja
cmp
cmp
pop
stos
fbstp
loope
push
push
lahf
inc
shrb
dec
dec
xor
cwtl
shl
mov
gs
scas
cmp
cltd
dec
jge
dec
inc
dec
pusha
xor
fwait
add
cmp
inc
stc
std
subl
insb
adc
adc
in
rolb
ja
dec
mov
mov
sub
lahf
dec
add
xchg
and
cmpsl
outsl
pop
popa
loopne
test
pop
dec
sbb
xorl
mov
cmpsl
adc
pusha
lcall
mov
jmp
jecxz
dec
or
pop
pusha
daa
mov
dec
rcl
icebp
push
lcall
jecxz
jo
loopne
idivl
add
jg
rcr
xor
mov
jge
sbb
enter
inc
aam
xor
xor
out
fadds
push
cwtl
call
bound
push
neg
nop
or
add
leave
fimull
je
popf
cltd
xchg
sbb
mov
cmpsb
adc
clc
mov
test
mov
fistpll
rol
jns
icebp
mov
push
daa
or
xchg
icebp
ss
popf
ficoms
jp
jl
mov
lock
ja
adc
stc
inc
clc
pusha
xchg
sti
bound
jle
in
jge
mov
mov
fidivrs
faddl
btc
and
sbb
or
inc
push
aad
loop
mov
rcrl
pop
mov
or
cltd
jp
pop
push
andb
or
out
hlt
repnz
int
stos
fbld
dec
test
notl
mov
inc
sahf
jae
add
sub
fldl
cmpsb
xor
cmp
cmp
es
stos
sub
stc
sti
cmp
xchg
xchg
mov
or
insb
neg
in
cwtl
ficoml
icebp
out
bound
dec
sti
or
pop
leave
push
mov
or
pop
push
out
add
add
insl
or
push
test
inc
mov
sub
insb
and
nop
loope
cmp
es
lcall
fsts
push
aad
jae
mov
nop
sub
pop
mov
inc
push
mov
mov
pushf
call
jbe
outsb
adc
movsb
lods
mov
je
or
sahf
movsb
int3
inc
push
clc
fs
imul
mov
je
push
add
test
hlt
mov
mov
dec
xor
scas
mov
outsl
inc
add
cmp
mov
rorl
nop
fidivl
dec
add
faddl
sti
aad
icebp
fwait
in
inc
imul
iret
jno
and
test
sbb
mov
testb
and
or
addb
inc
mov
jne
pandn
bnd
inc
xchg
jb
jge
movb
sub
dec
sti
fwait
out
out
lret
js
fistps
lock
mov
sub
jno
ja
montmul
cmpsb
inc
int3
lahf
inc
pop
jge
cmp
cmpl
mov
xchg
fildl
xlat
test
stc
or
fists
xchg
xchg
jle
lcall
insb
adc
or
nop
call
cmp
sub
imul
scas
bound
or
test
cmpsb
aam
or
fldln2
arpl
leave
mov
movsl
cmp
aaa
xchg
mov
out
lahf
xor
mov
clc
fisttps
sbb
testb
xor
push
xchg
bound
arpl
addr16
push
fdivs
lcall
jo
sbb
pop
mov
mov
and
testb
dec
lods
mov
fidivl
repnz
repnz
mov
xor
or
enter
call
out
aad
sbb
stos
mov
icebp
sbb
jae
mov
pusha
iret
dec
mov
aad
push
stc
test
push
pop
subl
ss
sbb
test
mov
out
in
in
test
fstps
xchg
sbbl
jb
cmp
mov
fwait
mov
outsb
imul
ljmp
in
mov
es
ljmp
cmp
mov
or
add
fimull
or
std
stos
xchg
loopne
loop
or
sarb
add
in
xlat
cmc
add
fists
xor
js
int3
cli
fcompl
xor
test
fldcw
ss
fs
cltd
shl
pop
mov
sarb
inc
testb
xor
pusha
ss
in
sub
fisubrl
je
dec
jne
mov
jl
pop
bound
les
stos
movsl
fwait
mov
xchg
scas
gs
shufps
cmp
addr16
in
xchg
lret
pop
popa
sub
sbb
loop
jmp
jae
loop
popf
out
mov
nop
mov
pop
lock
add
call
int3
lret
inc
adcb
mov
lods
pop
mov
cmp
out
sub
sbb
test
in
mov
xor
cmp
add
mov
push
push
pop
jae
sti
sbb
scas
and
add
loop
adc
adc
mov
push
pusha
mov
fstsw
je
mov
fucomi
js
adc
int3
leave
aas
mov
push
xor
ds
sub
mov
mov
xlat
test
pop
iret
sbb
add
negl
mov
jmp
jge
pop
mov
pop
mov
int3
fst
jge
cwtl
sbb
jb
pop
cld
sub
adc
xchg
xorl
pop
xchg
inc
mov
mov
int3
loop
loopne
decb
jle
sub
xor
imul
inc
shrb
into
shrb
mov
sarb
fidivl
pop
adc
sub
jae
les
dec
xor
lock
insl
mov
ret
rep
nop
in
pop
pusha
loop
or
cmpsb
loop
mov
jg
js
push
dec
adc
sub
or
test
andl
jge
imul
inc
jne
aam
cmpl
cmp
add
test
mov
xchg
lea
push
int3
sbb
fldl
sarl
hlt
cmp
stc
stos
shll
mov
lods
gs
bound
and
sub
mov
jle
inc
inc
or
iret
sub
and
inc
adcb
cltd
loopne
insb
or
push
mov
gs
mull
fistps
mov
push
push
jae
rcll
aam
cmp
fwait
inc
mov
loop
std
inc
dec
xor
in
es
sbbb
fcmovne
mov
mov
mov
das
loop
movsb
out
in
add
out
fcompl
jge
jbe
mov
std
or
je
sarl
add
xchg
clc
cmpsb
int3
cmpsl
cltd
jmp
mov
push
jns
inc
sti
add
pop
cmp
lds
push
test
movsb
mov
pop
aad
sub
sarl
dec
pop
sahf
out
xlat
call
lea
sbb
fcoms
movsl
mov
das
test
in
xor
fdivrl
mov
stos
test
push
jge
lret
test
fcmovb
lods
jno
or
pop
mov
mov
movsb
lods
xchg
mov
lods
xchg
mov
lcall
roll
mov
icebp
pop
imul
sbb
push
enter
push
mov
push
sahf
hlt
sub
mov
and
ljmp
arpl
lret
int
xchg
stc
mov
xor
sbb
insl
imull
stos
insb
cmpsl
rorl
test
gs
push
inc
mov
fdivrs
cmpsb
fwait
sbb
clc
push
aad
and
jmp
mov
stc
testl
insb
inc
cld
gs
mov
mov
mov
fsts
dec
enter
int
xchg
sahf
scas
jae
xchg
rorl
cmc
loope
cmp
dec
in
xor
push
jbe
add
or
and
call
mov
push
lock
push
push
sbb
out
jb
mov
lret
gs
arpl
jl
jae
pop
inc
in
sbb
or
cld
repnz
shlb
mov
xor
fiaddl
sbb
cltd
xchg
cmpsl
leave
iret
ud1
xchg
lret
dec
push
jl
sub
sub
jmp
fcom
mov
cmp
cs
loop
shlb
outsb
sarb
call
sub
shrb
mov
xchg
das
cmpsl
mov
pop
ljmp
xchg
adcl
data16
pop
shll
sbb
inc
mov
dec
and
inc
imul
addr16
test
pop
addr16
xchg
movsl
cmpsl
add
cltd
lahf
or
push
ljmp
inc
mov
movb
aam
aaa
xchg
and
sub
aaa
xor
fcompl
cmp
cmp
jle
out
dec
mov
pop
ja
cli
push
dec
mov
outsl
dec
inc
sub
rolb
daa
cmpsl
shlb
daa
mov
or
outsb
js
jge
sbb
ljmp
je
jns
stc
hlt
imul
sbb
adc
mov
in
pusha
bnd
cs
xchg
mov
ja
adc
mov
jbe
mov
call
sahf
inc
xor
lret
inc
sbb
loop
jle
or
and
cmpsl
and
mov
fsubrs
mov
push
xchg
loop
cli
jnp
dec
std
xchg
cmp
movsl
mov
iret
ljmp
ljmp
dec
aas
xor
pop
dec
or
ds
pop
cltd
add
xchg
or
push
cmp
aad
popa
rol
inc
jb
mov
cmp
repz
mov
xchg
and
mov
add
bound
iret
jmp
inc
notb
outsb
ja
and
into
mov
mov
sahf
push
das
push
pop
mov
mov
rorb
fdivs
stos
push
add
mov
or
push
stos
fstpt
iret
pop
aam
jl
out
and
pushf
daa
inc
and
pop
push
jle
cmc
sbb
addb
push
sbb
cmp
cmpsb
cmp
push
mov
in
jns
scas
pop
aad
clc
mov
adc
movsl
or
pop
or
aad
sar
cmp
mov
fisttps
addr16
imul
xchg
cwtl
dec
lds
mov
push
jge
je
inc
adc
sub
imul
dec
and
xchg
push
loop
lret
mov
pushf
mov
or
and
add
jae
inc
push
mov
jmp
aad
pop
push
ret
push
jmp
sahf
test
push
mov
lret
push
int
sbb
jo
mov
mov
pop
jecxz
mov
arpl
cmp
in
repz
mov
ja
inc
and
pop
push
out
dec
and
mov
push
pop
mov
xlat
lods
pop
rclb
lret
jl,pt
lea
cltd
ds
inc
int3
mov
fisubl
mov
inc
sbb
xchg
cmp
lock
mov
gs
out
cwtl
mov
loop
dec
jnp
lret
sub
scas
or
lods
cli
sarb
add
bound
sahf
imulb
cs
mov
jge
arpl
iret
sbb
sbb
jo
mov
adc
icebp
stos
fs
or
mov
jg
mov
pop
inc
add
in
cmpsl
add
xchg
sub
lea
sub
inc
subb
mov
sbb
sbb
mov
loop
sbb
pop
test
sbb
jae
inc
in
fldt
adc
pusha
pop
add
push
cmpsl
dec
mov
sti
std
mov
in
cld
fs
fwait
xchg
jb
adc
mov
cmp
mov
jae
mov
and
and
adc
sbb
cld
xchg
mov
mov
and
xor
sti
dec
cmp
add
inc
sub
ljmp
pop
pop
adc
mov
in
inc
mov
pop
sbb
fs
add
fnstsw
inc
xchg
loope
mov
pushf
ss
xchg
pop
in
fiaddl
jbe
xor
add
filds
in
xor
jge
add
lods
frndint
push
loopne
ds
imul
rolb
xlat
fs
and
cld
das
call
les
jnp
jo
mov
adc
jle
inc
inc
gs
cltd
shrl
pop
scas
mov
mov
jo
xlat
cmc
pop
mov
divb
and
sub
pop
jle
jmp
adc
cmp
lods
add
outsb
pop
dec
inc
rclb
adc
mov
push
jl
out
cmp
gs
fistpl
jbe
add
jp
pop
popf
xor
std
inc
or
inc
push
push
dec
mov
push
fsubl
jo
and
out
xchg
test
adc
jae
bound
or
inc
cld
dec
mov
mov
sub
jbe
test
xor
xchg
mov
xchg
push
ljmp
fwait
push
inc
inc
xchg
popa
fidivrl
or
cmc
sarb
test
movsl
push
dec
push
stc
push
and
push
sbb
jbe
push
push
sbb
outsl
leave
outsl
fmull
daa
das
imul
dec
lret
cmpsb
in
nop
aam
mov
add
lods
stos
xchg
and
mov
sub
incb
dec
lods
out
test
or
cmpsl
add
pushf
jle
jmp
lahf
std
and
sahf
cmpsl
sbb
dec
cltd
ficoml
and
out
or
js
hlt
ret
cmp
add
outsb
fs
pop
in
xchg
mov
cs
out
adc
mov
dec
dec
push
das
sar
std
push
test
push
inc
lcall
iret
in
dec
mov
mov
sti
xlat
dec
jg
jae
test
jo
dec
jecxz
jb
cwtl
jb
rsqrtps
or
sbb
jg
jge
cli
mov
cli
clc
pop
dec
jno
daa
outsb
mov
mov
sarb
push
fwait
daa
adc
xor
push
xor
int
push
mov
jg
mov
push
mov
mov
ret
shll
push
xchg
pusha
das
xor
cmpsb
sbb
pop
and
je
sbb
jns
movsb
cltd
xchg
ds
dec
inc
es
mov
in
int3
jg
inc
mov
add
pop
es
inc
stos
cs
dec
xchg
mov
sub
push
pushf
mov
cwtl
adc
pop
inc
in
cmpsb
ja
xchg
mov
lods
and
fsubrs
pushl
add
pop
notl
pop
xor
pop
ret
stc
cmpsb
lcall
gs
mov
std
decw
lds
xorl
lods
mov
or
stos
mov
arpl
cld
push
xchg
or
or
pop
jb
xorl
js
popa
sub
jmp
test
repnz
and
jno
pop
mov
loope
pop
ret
js
mov
jne
mov
insl
mov
jg
mov
and
rorl
mov
dec
leave
xchg
aaa
jg
adc
jno
push
inc
test
pushf
ljmp
test
popa
pusha
and
sub
rcll
mov
pop
addb
jmp
fildl
stc
ja
dec
cmp
adc
xchg
iret
imul
into
jg
inc
sbb
repz
mov
out
loope
aaa
movsl
push
inc
push
cltd
push
dec
es
dec
cmpsl
int3
and
scas
sbb
jmp
dec
or
shlb
and
xchg
push
das
jb
sbb
mov
sub
or
jmp
and
dec
pmaxsw
jne
movsl
mov
loope
dec
adcl
mov
or
push
pusha
jecxz
inc
insl
cmpsb
pop
mov
sti
sub
nop
dec
sbb
adc
inc
arpl
push
shll
add
pop
add
icebp
aas
fisttps
dec
stc
and
dec
sub
pop
cmc
lret
leave
dec
sbb
lcall
ja
mov
ljmp
lret
scas
xchg
dec
loop
mov
and
sbb
push
popf
es
arpl
es
jns
dec
insb
push
push
lods
rcl
lcall
add
jge
outsb
test
scas
push
sub
cli
arpl
sbb
pop
cmp
mov
enter
stc
xor
jnp
xchg
dec
push
mov
loop
ss
inc
test
repz
adc
mov
jnp
dec
pop
pop
cltd
mov
push
inc
push
fiadds
push
test
push
cmp
mov
cmp
movsl
push
lret
lret
test
mov
jnp
aas
inc
flds
jno
push
aad
rcr
push
sub
sbb
adc
in
jo
xchg
xor
xlat
daa
pop
cmp
sub
xchg
pusha
dec
int3
inc
addr16
lcall
jno
push
mov
and
mov
stos
ret
sbb
nop
shlb
outsl
andb
nop
mul
lar
mov
mov
xchg
stc
ja
pop
or
xor
add
mov
add
mov
pop
fimuls
mov
std
mov
cmpsl
bsr
iret
or
cmp
lods
add
add
fsub
jo
jnp
in
pop
aad
adc
loop
in
jne
mov
and
int3
xchg
or
roll
sub
mov
fistpl
mov
lahf
rorl
mov
push
stos
sarb
push
or
adc
xchg
push
or
lea
push
aad
popf
sbb
cmpsb
sub
mov
pop
jb
sahf
test
test
adc
cmp
sub
into
pop
xchg
cmp
pop
adc
frstor
movsb
push
xchg
hlt
das
fistl
jle
mov
cmpsl
bound
adc
sbb
jl
mov
pop
adc
iret
fwait
push
or
das
inc
iret
sahf
or
mov
sbb
adc
ret
and
in
jb
repnz
ss
mov
cwtl
cmp
ficomps
sbbb
jnp
sahf
test
mov
mov
in
adc
pop
inc
jg
add
addr16
push
inc
inc
test
mov
dec
fwait
jns
movsl
outsb
repz
sub
adc
sbbb
mov
sbb
mov
jae
pop
jno
cmpsb
xor
cs
mov
out
enter
ja
andl
inc
out
adc
std
and
roll
lret
mov
stc
mov
cld
hlt
std
sahf
rorl
cld
or
sbb
js
pop
cmp
jns
adc
cmp
mov
cmp
lcall
or
xchg
adc
adc
inc
adc
lds
push
andl
lock
push
pop
pop
xchg
fdivrl
sbbl
roll
mov
fisubl
add
sub
aam
pop
push
jecxz
jge
roll
imul
pop
and
cmp
inc
add
les
les
in
scas
fcomps
movsb
cmp
xchg
push
sub
nop
movsb
inc
mov
cmpsl
mov
push
mov
fnstenv
pop
scas
pop
inc
xchg
mov
leave
push
inc
pop
insl
pop
cli
dec
dec
pop
fdivrs
inc
xor
ds
out
sub
mov
cmpsb
and
fdivs
jae
push
bound
ret
sbb
das
push
daa
pop
dec
xchg
pushf
arpl
rorb
mov
loope
pop
lds
into
mov
stos
lea
scas
xchg
pop
lret
xchg
xchg
scas
ret
mov
call
mov
adcb
lds
fmull
mov
lret
xor
call
jne
pusha
inc
xchg
mov
test
cwtl
mov
or
jb
or
jp
loop
sti
mov
inc
notl
dec
nop
cmp
push
cld
popf
cmp
xchg
lods
out
movsl
loopne
in
addr16
popf
and
ljmp
mov
mov
adc
fs
out
testl
ror
scas
pop
loope
vminps
cmp
leave
ds
iret
inc
cmp
pusha
icebp
aad
and
bound
mov
fsts
push
and
cmc
mov
ret
adc
push
mov
test
ss
and
push
out
mov
add
nop
jnp
mov
fisubl
cmp
sti
lods
repnz
mov
lea
ljmp
xlat
push
or
xchg
into
sub
cmp
add
jns
popf
or
xor
or
ss
jno
push
push
xlat
adc
and
movsb
jbe
inc
jnp
fimuls
adc
sub
sbbl
call
adc
lret
or
ja
mov
mov
pop
outsb
sub
sbb
cltd
repz
lods
fdiv
jb
jg
pushf
dec
and
jp
push
push
imul
ret
mov
cli
scas
shll
pop
xor
outsl
pop
loop
xchg
jmp
mov
pop
cltd
adcb
dec
push
cmp
pop
lcall
int
addr16
gs
mov
dec
rol
adc
sahf
or
cmpsl
inc
inc
shrl
fistps
mov
and
outsb
mov
or
sbb
rclb
sbb
mov
jno
pop
mov
les
aas
inc
dec
mov
icebp
push
rep
lods
cmpsl
repnz
dec
adc
sbb
mov
xchg
sub
add
cli
test
rcrl
cli
mov
inc
mov
loopne
xlat
sbb
in
nop
xor
fdivs
or
mov
aaa
adc
xlat
mov
cmpsb
push
lcall
push
sub
test
mov
add
cmp
fmul
adc
test
shll
sub
lcall
gs
or
inc
mov
pop
mov
int3
sub
jae
mov
mov
add
leave
adcl
xor
ret
lds
xchg
adc
mov
xor
fs
sti
test
mov
add
jnp
xor
add
int3
outsl
rcll
out
mov
mov
add
mov
mov
mov
mov
cmp
es
jmp
lock
mov
pop
or
xchg
nop
ffree
add
es
dec
dec
nop
mov
ret
xchg
aad
out
subb
jne
mov
testb
nop
pop
stc
call
push
add
aam
sbb
adc
ret
mov
call
mov
mov
xchg
in
xor
and
mov
cli
stc
fidivl
mov
ss
rorl
or
out
addr16
test
jne
jne
dec
mov
loope
mov
add
xchg
fldt
cmp
fwait
cmp
div
ret
xchg
mov
cmp
xor
sbb
add
or
dec
xchg
stc
setae
arpl
xor
pop
sbb
in
cmp
in
dec
jg
sarl
pop
callw
imul
adc
mov
in
xor
sub
mov
add
hlt
mov
lret
push
sbb
add
outsb
jne
loopne
mov
ljmp
mov
cmpsb
mov
roll
pusha
push
negl
jmp
xchg
inc
leave
mov
mov
mov
or
mov
push
mov
ds
icebp
mov
mov
fbld
mov
shll
fwait
cvtps2pd
mov
xorl
cmpsb
movsb
ja
jno
mov
sbb
mov
notb
js
jg
sarb
jg
mov
mov
mov
mov
movsl
add
and
int3
mov
or
popf
xor
lods
sub
pop
mov
dec
movsl
pushf
and
jae
jne
bound
push
push
xchg
mov
xor
fcoml
cmc
sti
adc
mov
lods
cmpsl
int3
cwtl
scas
push
shl
mov
cmpsb
js
nop
xlat
mov
add
rcr
jecxz
out
out
test
fisubrl
cmp
insl
mov
add
jbe
pop
nop
insb
cld
cmpsb
std
outsb
lods
jae
jo
lret
mov
pop
js
push
hlt
data16
push
push
pop
xchg
mov
inc
cmp
add
aaa
pop
inc
subb
adc
push
out
addb
jns
and
xchg
mov
cmp
enter
inc
iret
loop
rclb
das
cmpsl
pop
fwait
jno
push
xor
fiaddl
test
mov
sub
push
jmp
sbb
mov
popa
mov
clc
mov
mov
div
insl
inc
xchg
js
mov
lcall
and
scas
in
mov
or
sbb
mov
sbb
lods
loop
mov
pop
addl
jo
pop
inc
imul
mov
add
cmpsl
xor
cmp
ja
pop
mull
jle
inc
add
or
mov
ret
pop
jle
xchg
xor
je
cmpl
test
adc
hlt
add
mov
fnsave
cs
loop
mov
cltd
in
sbb
add
xor
mov
and
cwtl
cwtl
lret
insb
lea
mov
insl
imull
cmovae
mov
std
scas
pop
jecxz
cmp
sub
pusha
inc
fisttpl
mov
inc
cmp
add
loope
push
dec
aad
pop
fwait
mov
incb
int3
ret
ss
cmp
mov
inc
adc
or
aad
stos
dec
sub
or
xchg
and
xchg
and
aaa
xchg
mov
lret
scas
repnz
bound
nop
mov
sub
pushf
ja
daa
xorl
mov
repnz
fsubr
rcrl
xchg
fxch
call
xorl
push
sbb
inc
daa
push
mov
getsec
mov
ds
lcall
xor
sub
in
aad
xor
popa
nop
push
xchg
and
xchg
adc
and
push
jnp
pop
mov
clc
mov
out
add
in
das
sti
adcb
sub
or
movsb
dec
movsl
frstor
outsb
adc
ficomps
imul
pop
dec
sti
mov
inc
pop
pusha
cmp
adc
not
dec
pop
ja
jle
and
scas
jb
push
cld
and
mov
push
out
mov
jg
or
dec
push
leave
pop
loope
jle
pop
lret
sub
xchg
mov
lods
jge
pop
mov
cmpsb
mov
jo
xor
movsl
cmpsb
fcoms
xchg
xor
lea
in
test
dec
sbb
push
cld
hlt
inc
jmp
mov
jae
xchg
rcrb
lahf
sbbb
cmp
lea
std
mov
clc
jae
or
mov
inc
mov
and
enter
fists
mov
mov
and
cmp
inc
arpl
addr16
xchg
rolb
lret
jnp
adc
shrl
daa
mov
int3
mov
xor
jno
inc
jg
dec
xchg
pop
pop
in
in
repnz
dec
inc
mov
sbb
insb
jl
mov
jae
imul
mov
sbb
and
mov
add
cmp
or
punpcklbw
xchg
inc
les
jecxz
adc
xorb
call
lock
flds
mov
push
adc
or
mull
inc
push
add
xor
arpl
mov
mov
gs
stos
sub
repz
fistl
icebp
xchg
push
je
inc
jb
pop
pop
push
cmpsl
jo
mov
test
js
das
fnstsw
scas
loop
mov
mov
loope
inc
test
lds
pusha
cmp
dec
dec
sbb
aas
icebp
cmp
sub
or
rol
mov
mov
pop
cmp
or
mov
test
inc
inc
dec
aam
add
rcll
mov
sub
add
imul
cmp
in
lock
xchg
pop
clc
dec
adc
add
imull
inc
pushl
js
stos
add
xchg
inc
push
mov
clc
bswap
push
push
add
lods
jae
jg
mov
push
test
daa
add
repnz
xchg
pop
or
sarb
scas
cltd
xor
xchg
pop
into
inc
rcrl
loope
mov
mov
add
dec
in
popf
cmc
mov
loopne
fdivl
inc
or
mov
je
push
pushw
in
das
sbb
out
fmuls
leave
pop
int
and
out
iret
push
pop
xchg
cmp
inc
rcrb
sub
mov
hlt
fbld
adc
sti
sub
repz
and
imul
out
push
scas
push
or
cltd
sbb
or
sbb
sub
fcoml
in
and
ret
or
pushf
or
pop
xor
cmp
cmpsb
xchg
add
inc
out
inc
std
xor
movsl
add
loope
insb
ljmp
adc
xlat
dec
jmp
and
rcrb
dec
loop
test
sub
ljmp
insl
sbb
popa
rclb
or
pop
dec
outsb
or
push
dec
mov
jno
lock
outsl
fcoml
dec
cmpsl
pop
or
push
sub
adc
jg
gs
push
mov
lods
pop
mov
or
bound
cmp
lcall
and
xor
hlt
scas
out
ret
pop
cwtl
out
call
cmpsb
ficoml
fidivs
cmpsb
loope
cwtl
insb
sahf
or
rcrl
push
or
in
xchg
sarl
mov
push
mov
cld
lods
andb
cmp
into
pop
test
pop
lods
mov
mov
or
lea
ja
pop
push
test
cli
lods
pop
out
jbe
adc
jg
scas
mov
jmp
imul
push
rol
out
test
ficompl
push
rol
lret
push
jle
inc
jne
sbbl
adc
xchg
mov
leave
xor
stos
inc
in
dec
push
or
mov
out
ds
roll
pop
push
scas
mov
xchg
cltd
hlt
fsubrl
inc
and
jno
inc
aas
mov
sbb
in
mov
nop
jecxz
cmp
das
inc
outsb
movsb
adc
into
or
adc
jae
add
mov
imul
mov
out
add
in
lea
mov
or
mov
iret
cmp
pop
dec
and
adc
popf
inc
sarl
add
mov
inc
pusha
add
jmp
sbb
add
sarl
subb
jo
mov
sbb
push
orl
jbe
jecxz
and
loopne
cli
pop
out
mov
in
or
add
adc
inc
and
xor
test
push
or
pop
icebp
repz
arpl
fstps
test
dec
sbb
mov
pop
sbb
push
shlb
pop
pushf
dec
mov
jnp
cmp
xlat
pop
mov
les
loope
cmp
nop
scas
stos
inc
clc
inc
adc
jecxz
lcall
sbb
int
pusha
pop
dec
stc
push
mov
ljmp
adc
pop
xor
or
aad
mov
push
add
mov
pop
or
imul
icebp
adc
mov
xchg
gs
xchg
int
dec
cmpsl
divb
sahf
fwait
sbb
jmp
mov
lret
ja
ret
mov
xor
add
lea
cmp
jge
inc
fcmovb
push
shrb
xchg
or
xchg
xchg
es
jmp
push
xlat
xor
insb
mov
mov
cmp
shrb
ret
pop
mov
daa
xchg
dec
lods
mov
mov
mov
inc
clc
mov
add
sbb
out
rcl
lock
pop
xlat
scas
pop
jmp
mov
imul
ss
in
ret
rcll
inc
jge
je
lahf
xchg
push
filds
or
lea
fdivr
mov
cli
jmp
xor
loopne
jp
test
cmp
icebp
jecxz
push
pop
pop
mov
lods
mov
lods
popa
push
push
pop
add
lcall
out
cmp
rclb
jg
pop
lcall
jne
mov
pushf
add
mov
ds
test
cmpsl
fiaddl
les
mov
xchg
data16
out
aad
lea
sbb
jle
pop
or
ret
loope
and
jbe
sub
dec
and
fdivrl
mov
lock
push
push
sbb
adc
mov
scas
loope
nop
fimuls
pop
or
jno
lahf
shr
cmc
push
movsl
adc
lret
test
in
xor
mov
mov
cmpsl
push
or
cmp
lret
jo
scas
in
ret
cmp
pop
int
jne
xor
movsb
cmp
cmova
sub
inc
sub
lahf
mov
fcoms
ss
cmp
mov
cmp
mov
pop
push
imul
insb
cmp
xor
test
mov
call
and
lods
cmpl
or
data16
xchg
mov
jp
sti
add
mov
pop
inc
adc
push
and
pop
sarb
xor
js
mov
ret
xchg
lret
jmp
ss
sbb
and
jnp
rolb
and
or
and
mov
jle
mov
push
dec
fbld
xchg
sub
sti
sarl
mov
push
mov
add
sub
mov
xor
into
push
xchg
test
mov
mov
inc
rcrb
or
insl
dec
rorl
mov
enter
mov
sub
fsubs
push
outsl
cmpsl
hlt
inc
imul
rcl
jge
or
addr16
stc
ja
movsl
dec
shrb
sub
add
ret
push
daa
cltd
repz
subl
jbe
stos
or
mov
xchg
add
test
pop
pop
mov
add
pop
int
mov
add
rol
cmp
rorl
or
inc
xor
movl
outsb
inc
or
xchg
js
push
jns
incb
pop
clc
mov
jmp
orb
push
push
adc
out
ds
aad
and
lods
or
jo
dec
push
jbe
cmp
push
cmp
jno
and
dec
sub
sub
mov
or
bound
enter
insb
adc
mov
pop
pushf
aaa
das
xchg
pushf
dec
cli
mov
adc
add
jle
movsl
loopne
mov
sub
pop
adc
cmpsb
stc
jge
push
dec
push
popa
pop
mov
imul
and
std
mov
faddp
les
lea
aas
ret
or
sbb
les
repnz
addl
jnp
adc
push
loopne
jbe
inc
inc
pusha
dec
fisttpl
subb
sbb
cmpsb
cmc
mov
sub
jo
cwtl
call
aam
xor
movsb
faddl
add
sub
or
cmc
sbb
in
jo
or
lds
test
fs
mov
sbb
negl
cmp
andl
mov
imul
lock
add
fstl
pushw
ds
sbb
mov
jb
jp
outsl
dec
movsb
retw
cmp
mov
es
sbb
sti
jbe
adc
push
cld
imul
dec
mov
lret
push
push
fcoml
fisttpll
lds
xchg
dec
call
mov
inc
test
pop
sar
jno
test
outsl
bound
aad
lahf
adc
or
pusha
aam
xor
cmpsb
scas
pushl
xor
cmp
sbb
sub
testl
inc
out
mov
and
js
pop
adc
jb
repnz
fdiv
push
lea
dec
enter
cmp
xor
sbb
xchg
cmpsb
cmpsl
mov
sub
dec
cld
std
jl
jg
sub
jb
inc
sub
ja
lock
stos
cmp
popa
movsl
dec
sahf
and
mov
and
push
jl
jecxz
fld
dec
das
and
pop
ret
clc
inc
sbb
lcall
lods
dec
jo
push
mov
jo
mov
mov
cmp
mov
and
rcl
adc
rcr
pop
mov
das
lahf
pop
mov
ret
popa
mov
inc
nop
ljmp
push
cmp
sbbl
mov
loope
and
xor
loop
loop
jg
xlat
rcrb
adc
gs
pop
fsts
data16
push
and
je
and
inc
mov
or
sub
mov
pop
insl
adc
jecxz
in
cltd
pop
lods
add
jo
xor
movsb
xor
adc
mov
call
stc
mov
push
scas
mov
xor
inc
scas
lock
xchg
enter
add
in
dec
fldenv
cwtl
jge
jo
pop
push
shl
and
or
xchg
jb
daa
mov
fsubp
stc
mov
movsb
push
mov
imulb
iret
xchg
mov
pusha
dec
cmp
out
ror
push
out
xchg
and
outsl
stos
inc
inc
mov
jbe
repnz
add
jmp
or
nop
movsl
pop
inc
arpl
push
icebp
mov
test
out
icebp
sbb
mov
and
dec
loope
loopne
xchg
cmpsl
popa
sub
in
in
jle
and
js
jb
sub
mov
in
clc
adc
hlt
movsb
and
xor
mov
fiaddl
stos
hlt
arpl
or
sbb
pop
mov
into
imul
jo
fildll
imul
sub
rcrl
sarl
jge
sbb
and
adcl
ret
xchg
xchg
xor
dec
popf
cmpsb
jge
arpl
xor
lret
cmpsl
jecxz
push
icebp
jl
fdivrs
mov
in
xor
cmpsb
dec
dec
imulb
fucomp
cmp
sbb
or
leave
lret
mov
dec
in
adc
add
dec
pop
bound
xor
adc
fwait
lods
lret
pop
dec
ss
push
scas
mov
rol
sbb
dec
sbb
fnstsw
sub
ss
fwait
and
into
movsl
daa
cli
xchg
push
icebp
push
push
sub
sbb
leave
jl
lock
les
inc
mov
xchg
rclb
in
call
imul
pop
mov
call
fstpl
inc
out
mov
outsl
shll
xor
add
and
dec
lea
jbe
clc
inc
mov
jmp
fstps
xor
addr16
fwait
out
andb
or
sbb
repnz
jl
xchg
enter
pop
sahf
movsb
fmul
into
inc
jg
mov
mov
jmp
pop
mov
lea
out
jg
and
jne
mov
nop
call
clc
lods
pop
ja
fistpll
and
enter
sbb
and
cli
leave
xchg
scas
fsts
dec
sbb
mov
mov
jp
icebp
repnz
ficoml
insb
stos
cmp
mov
add
pop
adc
and
xor
stos
sub
sbb
mov
xchg
sbb
mov
inc
mov
inc
jle
movsl
lcall
xor
push
push
in
insb
lea
loope
jb
sarl
jmp
or
jo
cld
and
test
add
sub
ss
xor
les
jl
addr16
mov
test
add
mov
iret
fisubrl
cld
in
clc
imul
aaa
xor
aaa
loopne
jae
leave
xlat
fadd
add
into
mov
mov
into
or
sub
cmpsb
mov
in
jb
pop
jmp
scas
test
pop
mov
subb
lea
nop
sub
cmc
adc
mov
push
sbb
pop
cltd
rcrb
sbb
pusha
fiadds
mov
xchg
in
sbb
xchg
roll
lods
xchg
jbe
into
cmp
adc
mov
lahf
mov
xchg
or
jae
mov
jbe
and
jmp
cld
in
or
pop
push
ret
imul
dec
lea
mov
jne
dec
dec
cmp
mov
cmp
stc
lahf
inc
cld
pop
mov
mov
lock
and
jle
push
mov
pop
scas
push
ss
in
xchg
bound
pop
es
inc
push
loopne
mov
inc
ljmp
and
sarl
xchg
sbb
insl
clc
shrl
daa
icebp
ficoml
xacquire
in
pop
push
loopne
xchg
insl
mov
or
mov
lock
cli
frstpm(287
aam
mov
xchg
mov
xor
jg,pt
jbe
mov
jne
jne
lods
sub
popa
daa
mov
sahf
fnstenv
cmp
shl
jne
insl
retw
ficoms
mov
mov
ja
aad
ja
dec
ja
imul
xchg
jns
loop
cmp
dec
insb
pop
lods
inc
mov
repz
mov
jg
sbb
add
mov
and
jecxz
stc
xchg
mov
adc
sub
cmp
or
xor
orl
xor
jo
fisttpl
jmp
repnz
imul
pusha
mov
fdivs
xchg
jp
mov
mov
ja
enter
xor
loop
inc
std
pop
cmp
ss
sub
aad
xchg
nop
or
cli
push
in
dec
je
rorl
adc
mov
sbbb
jp
xchg
mov
rorb
call
mov
aam
dec
inc
pop
les
xor
int
fnstcw
in
xchg
sahf
cmpsl
push
inc
pop
int3
gs
mov
in
xchg
inc
add
jl
xchg
cmpsl
adc
lds
iret
mov
pushf
ror
scas
rclb
or
push
call
lahf
xchg
cmp
and
roll
push
popf
cmp
aas
shr
sbb
andb
mov
add
jbe
adc
sbb
mov
movsl
dec
jl
leave
inc
sbb
cmc
mov
int3
adc
popa
cltd
dec
mov
fcomp
sti
or
rorb
lcall
lcall
sbbl
ss
and
xor
icebp
jl
pop
xchg
xchg
cmp
orl
pop
movsl
shlb
sti
sub
jns
into
push
sbb
repnz
ret
push
adcb
mov
out
ljmp
enter
push
cltd
int3
sti
inc
pushl
or
mov
clc
cmp
inc
ljmp
cmpsb
pop
push
leave
dec
stc
mov
inc
fstps
leave
jno
sub
mov
aad
cmp
add
inc
jo,pn
fisttpll
ss
ja
nop
fwait
jnp
xchg
das
scas
sbb
push
or
mov
stc
or
xchg
fisttpl
pop
mov
mov
push
cmp
js
shll
or
das
je
xor
scas
xor
icebp
in
inc
dec
inc
iret
test
pop
testb
xor
call
dec
sahf
icebp
les
add
in
inc
negl
fisubl
fwait
inc
inc
lods
fwait
in
lcall
mov
xchg
fldcw
cld
jno
add
pmaxub
cmp
push
lcall
in
mov
mov
adc
stos
mov
mov
dec
call
mov
xor
push
ja
xchg
lds
mov
adc
std
popl
and
arpl
stos
dec
aaa
sahf
or
pop
or
mov
pop
cmp
adc
pop
mov
js
cmpsl
dec
push
cmc
pop
xor
dec
dec
enter
aam
jnp
jno
push
cmc
loop
mov
int3
or
loope,pn
xchg
mov
mov
inc
xlat
mov
fiaddl
aaa
inc
add
loope
inc
loopne
sahf
ss
aaa
cmc
fwait
mov
xchg
repnz
push
pop
pop
dec
push
sub
imul
insb
repz
inc
cmc
sbb
cmp
fildl
in
dec
inc
add
adc
adc
js
call
inc
mov
xchg
pop
xchg
movsb
mov
adc
ds
adc
pop
mov
sub
mov
sub
mov
xchg
cmp
or
mov
or
mov
out
pop
rorl
sub
cmpsb
xor
dec
insl
pop
aas
or
mov
into
inc
jno
cmp
lret
xchg
das
fs
lock
iret
mov
jo
xlat
and
xchg
in
dec
add
cmp
test
jbe
jae
gs
ficoml
mov
pushf
dec
popf
mov
push
jle
push
xchg
or
inc
scas
pop
dec
pop
cmp
push
push
mov
aam
adc
std
loope
clc
jne
cmp
bnd
outsl
sub
inc
in
mov
fcoms
adc
gs
insb
cmpsb
xor
jl
cs
aas
mov
dec
lock
shr
sbb
and
iret
fidivrs
push
mov
adc
push
mov
inc
loop
ret
xchg
hlt
jnp
out
test
les
mov
push
jo
adc
aam
jle
imul
or
xchg
imul
mov
fstpl
jbe
outsb
in
std
in
push
push
cmp
add
hlt
aas
xor
inc
sti
xchg
or
cmp
pushf
arpl
push
and
fcoms
push
and
ljmp
cmp
pusha
sbb
sbb
xor
mov
mov
mov
adc
out
outsl
push
inc
mov
sbb
inc
test
arpl
ja
jp
insb
pop
mov
es
fdivrl
cmp
repz
xchg
aas
inc
mov
lret
out
out
cmc
stc
push
adc
push
mov
jbe
iret
int
insb
fistl
jno
mov
nop
shrl
adc
push
and
divb
pop
push
jo
les
rorl
popf
insl
push
fwait
push
inc
imul
imull
mov
pop
push
test
cmp
daa
push
add
mov
ret
jp
xchg
pop
dec
xchg
mov
adc
lret
mov
inc
push
lcall
or
cmpb
movzwl
and
out
aaa
mov
sbb
xchg
add
js
insb
call
lcall
adc
adc
and
jp
inc
cs
call
daa
sbb
test
scas
les
leave
lret
inc
scas
and
mov
lret
js
or
push
jg
lods
jne
jp
lods
pop
test
cmp
pop
aam
sub
enter
in
jbe
into
das
sbb
jmp
jo
addr16
cmp
cmc
xchg
ret
adcb
and
inc
mov
fwait
mov
sub
mov
mov
insb
sbb
out
mov
push
xorb
hlt
test
push
rcrl
jg
mov
adc
pushf
pushf
mov
clc
add
xchg
cmpsl
stos
test
xor
and
aaa
imul
mov
cmp
in
adc
sub
mov
push
mov
inc
rcll
jb
dec
cltd
pop
cld
jmp
adc
pop
notb
sti
pop
dec
mov
push
pop
rclb
pop
cmp
mov
mov
dec
and
clc
add
sub
mov
push
sub
mov
or
jno
push
aas
in
ss
scas
pop
ds
sti
lahf
sub
adc
xchg
push
mov
mov
xchg
test
sbb
int
and
push
shl
jnp
icebp
pminsw
jb
adc
inc
scas
nop
pop
ss
jecxz
xchg
adc
adc
sbb
dec
push
mov
outsb
xchg
frstor
xchg
jb
jno,pn
test
fistl
in
add
mov
mov
test
test
cli
inc
jbe
cwtl
pop
cld
push
mov
xchg
xchg
sub
arpl
xor
push
aas
and
adc
test
imull
cmp
pop
sub
stc
inc
jnp
int
xchg
sbbb
sbb
mov
jle
and
dec
cltd
mov
push
iret
jge
in
push
sbb
mov
roll
jl
js
fwait
enter
inc
xor
neg
jecxz
and
mov
dec
les
cltd
dec
add
int
mov
leave
sbb
pop
loopne
mov
dec
popa
xor
mov
pop
adc
sub
sub
test
inc
insb
cmp
xchg
pop
jp
cs
packsswb
push
rclb
call
out
lahf
cli
add
dec
push
or
fdivrl
pop
hlt
inc
sbb
jno
pop
xor
mov
jns
jo
or
mov
dec
mov
into
add
filds
pop
insl
cmp
pop
xlat
cli
inc
mov
and
popa
pop
push
jmp
xchg
cli
pop
test
push
adc
inc
mov
push
xchg
xchg
jle
js
xor
js
fdivrl
in
xor
aam
push
int3
inc
cwtl
add
dec
call
or
enter
jl
cld
repz
cmc
inc
inc
and
sub
fidivl
push
and
mov
sub
sub
frstor
cmpsl
call
cmp
stc
dec
jge
les
nop
shll
fists
orl
lock
jne
out
mov
inc
adc
pop
mov
out
mov
test
ret
push
out
jb
push
adc
inc
sub
sbb
mov
xor
inc
addl
jge
add
push
and
inc
mov
sbb
jmp
inc
movsl
mov
scas
aam
faddl
cltd
sub
ljmp
pop
mov
and
out
mov
leave
sub
cmpl
jnp
stc
imul
cmp
lods
lret
ss
std
repz
in
bound
addb
and
into
je
inc
mov
xchg
fcoms
push
imul
mov
popa
mov
call
outsl
leave
jecxz
fs
fwait
pop
jae
push
mov
andl
sub
out
or
ljmp
movsb
push
subl
fisubrs
xchg
rcr
xchg
jnp
adc
and
test
pop
or
inc
jb
and
push
xchg
dec
jno
daa
enter
lret
add
lods
aam
repnz
pop
pop
adc
faddp
pop
enter
sahf
xor
imul
loopne
ljmp
mov
sbb
clc
dec
push
daa
testb
arpl
mov
std
push
lahf
jnp
xor
mov
adc
mov
adc
lods
mov
add
lahf
pop
out
test
push
cltd
data16
out
cmp
cwtl
jp
jno
nop
mull
addr16
lahf
inc
test
aaa
jle
pushf
imul
cmovb
nop
and
dec
roll
flds
lods
push
ljmp
jl
pop
sbb
lods
insb
lret
lret
pop
xchg
je
adc
dec
jg
aam
add
mov
fisttps
jp
enter
in
shlb
addr16
mov
push
fldl
mov
nop
lods
out
shl
mov
mov
into
or
cmp
mov
imul
cli
jecxz
cmpsb
sub
jae
stos
sub
leave
addr16
bound
push
inc
adc
not
xchg
or
xchg
fldt
pop
pop
jp
pop
push
pop
push
es
inc
xchg
push
cmp
mov
add
movsb
mov
fildll
cmp
adc
mov
clc
lret
xor
push
inc
pop
frstor
in
and
pop
nop
daa
dec
push
shrb
inc
mov
push
mov
int
cmp
cmp
push
out
jge
mov
push
mov
mov
lock
xchg
xchg
jecxz
les
push
push
mov
stos
pop
add
sbb
repnz
loopne
lret
dec
mov
cmp
push
je
push
arpl
and
push
jge
out
movsb
push
jmp
sbb
jmp
or
js
dec
mov
out
popf
sbb
mov
push
mov
cmp
pop
dec
insl
pusha
jp
and
sub
mov
pop
cs
fwait
pop
aam
lods
enter
mov
or
movq
or
test
movsb
fadds
cmp
push
adc
add
int
cmp
and
inc
lcall
jmp
dec
je
repz
xlat
vpmulhuw
lahf
or
xor
xor
mov
das
add
sbb
das
add
jbe
out
movsb
mov
test
xchg
enter
pop
test
sub
jnp
dec
cltd
outsl
adc
or
cmp
pop
xchg
pop
xchg
out
or
cmp
mov
dec
dec
push
fsubrl
ja
mov
mov
xchg
cmp
inc
add
add
inc
lea
out
mov
test
sbb
fwait
lds
mov
inc
or
repz
fildl
gs
dec
lods
mov
inc
inc
pop
mov
and
mov
sbb
xchg
push
jmp
ffreep
inc
aas
and
sbb
jne
fistps
lds
mov
mov
jae
cmp
jle
rcll
in
add
adc
sub
mov
mov
xchg
xchg
xor
add
fbstp
aad
loopne
or
pop
dec
bound
int3
jp
xchg
xor
push
sti
inc
jbe
je
mov
mov
xchg
lods
or
dec
xchg
and
xchg
je
dec
adc
adc
mov
fstpl
gs
shrl
mov
jp
in
push
pop
mov
repnz
stos
mov
and
and
aaa
iret
ja
pop
mov
in
and
add
mov
outsl
iret
pop
mov
push
xchg
int
repnz
hlt
adc
fisubrl
sbb
xchg
mov
es
jb
rclb
cli
add
cld
ds
nop
add
out
adc
sbb
inc
addr16
loop
test
sahf
push
cmp
jns
pushf
test
mov
mov
cmp
mov
mov
xor
aas
in
xchg
repz
jns
cmp
ljmp
xchg
push
cwtl
xor
inc
and
inc
push
sub
aas
dec
arpl
inc
xchg
cltd
iret
lret
or
inc
cmpl
adc
pop
cmpl
sub
notb
push
mov
fildll
adc
lods
cmpsl
int
je
inc
mov
dec
int
push
shrb
shl
xor
lcall
lret
outsb
sbb
xor
rorl
cmp
dec
lahf
ja
enter
aam
jbe
fs
rsm
movsb
inc
cs
inc
mov
cmp
pop
cmpsb
dec
mov
jo
cmpsb
mov
gs
mov
fsubl
jns
or
fldcw
sbb
or
cs
addr16
std
sub
out
popf
mov
mov
mov
xchg
insl
dec
xchg
sbb
movsb
lods
dec
imul
fs
outsb
jmp
sbb
fiaddl
add
sub
pop
insb
mov
push
pop
jp
loop
neg
cmpsl
nop
cmpsb
pop
jmp
ss
sbbb
lds
pop
lahf
and
mov
mov
in
xlat
xchg
mov
or
push
repz
inc
loope
sbb
imul
arpl
cmp
and
and
adc
std
or
test
sub
aad
xor
test
jmp
dec
inc
mov
int
cmc
push
adc
dec
xchg
shrb
inc
adc
mov
sbb
sub
aam
xchg
pop
aad
popl
rolb
sahf
and
or
fisubrs
dec
in
lret
arpl
mov
mov
fwait
cmp
xchg
inc
ja
pop
leave
pop
push
jo
jmp
jmp
or
mov
push
jb
cmp
aas
push
pop
pop
mov
lock
les
movsl
ret
cli
dec
mov
stc
pop
inc
mov
mov
insb
push
jl
pop
cli
xchg
mov
outsb
adc
mov
in
pop
stc
mov
push
sbb
xchg
sbb
shlb
jle
imul
cld
outsl
jmp
out
jnp
filds
gs
je
fsubrl
arpl
xchg
xlat
sbb
xor
jo
outsb
popl
cmpsl
cmp
xchg
fwait
pop
pop
cmc
sub
cmp
inc
xor
cwtl
cld
mov
push
adc
test
jp
xor
jle
mov
jmp
sub
faddp
inc
fdivr
xchg
pop
mov
rclb
cmpsl
popf
dec
sbb
jno
inc
cltd
mov
movups
sub
mov
cmp
cld
cmp
pop
iret
leave
in
xor
jbe
or
or
outsb
fwait
pop
aam
xchg
mov
adc
inc
orb
in
jno
xor
jmp
lods
les
mov
lods
mov
out
add
or
mov
out
int
insb
pop
push
icebp
lds
xchg
hlt
loope
add
add
aam
and
mov
xchg
int3
ljmp
ret
push
cmp
push
or
pushf
sbb
mov
les
pop
pusha
andb
add
imul
mov
test
imul
outsl
addr16
roll
cmpsl
movsbl
repnz
stos
adc
dec
jg
inc
mov
cmpsl
js
repz
jle
xor
shl
jne
ret
aas
test
test
mov
unpcklps
push
pop
sbb
rol
sub
xchg
or
ljmp
inc
cmpb
pop
stos
jno
lret
and
xchg
sarl
js
mov
xlat
movsl
call
mov
jb
iret
in
jp
sub
mov
rcrb
popf
xor
lahf
mov
adc
outsl
fisubs
push
sbb
cwtl
and
push
rcpps
xor
cmp
sub
inc
aaa
incl
jmp
push
add
loope
lahf
popf
mov
mov
lods
push
push
and
mov
mov
inc
fwait
or
mov
jno
mov
sub
and
or
leave
jb
lcall
loopne
test
ljmp
add
sbb
movsb
mov
test
movsl
out
popa
pop
or
and
movl
ss
xor
rorb
stos
les
push
fmuls
inc
notb
leave
fildll
out
in
je
insb
mov
inc
fs
dec
fmuls
adc
repz
or
sahf
add
dec
negb
je
rol
int3
cmp
sbb
mov
movsb
into
cmp
bound
jge
mov
jne
stc
inc
inc
push
into
int
jno
divb
orb
dec
out
add
test
add
cmc
lods
mov
fmull
std
ret
fbstp
jl
xchg
push
push
sub
jne
sub
and
push
pop
or
cmp
jp
or
cmp
pop
mov
sub
jb
lahf
fisttps
and
lret
lods
and
loope
mov
add
out
adc
mov
cs
mov
adc
scas
outsb
jl
cld
cmp
hlt
lock
pusha
shll
sub
fcomps
dec
int
push
pop
sti
xchg
mov
popf
mul
aas
push
pop
mov
rclb
push
inc
test
loopne
je
cmpsb
cld
test
orl
sahf
mov
lea
div
push
arpl
pop
jmp
fisubrs
pop
cmp
ljmp
ds
and
mov
pop
sbb
insl
inc
mov
scas
add
loope
sar
aaa
addr16
mov
int3
stos
push
jl
adc
or
in
jmp
inc
cmp
fstpt
cwtl
aaa
xor
mov
in
sbb
inc
cmp
enter
into
push
je
and
mov
pop
iret
enter
gs
or
in
push
lea
push
or
xlat
push
mov
in
pop
js
icebp
cmpsl
mov
xchg
mov
out
shll
rcrl
movsb
es
stos
push
ds
into
xor
mov
out
lods
or
adc
jae
push
imul
jne
xchg
add
or
mov
xor
imul
lds
cld
sub
inc
cmp
and
mov
push
dec
cmp
mov
scas
mov
add
dec
sar
sbb
call
out
jne
addr16
adc
les
and
int
cli
je
xchg
or
and
lods
cmp
pop
hlt
sub
mov
jo
loope
mov
dec
je
mov
inc
mov
cmp
call
sub
daa
fnsave
jecxz
dec
dec
hlt
xchg
push
insb
xlat
test
les
lods
mov
testl
jbe
sub
lcall
scas
into
mov
add
je
inc
lret
pop
je
inc
lods
lret
cwtl
pop
fbld
nop
int3
call
es
xchg
mov
xor
mov
push
mov
and
lret
ja
fcomps
in
xchg
inc
jnp,pt
scas
movsb
inc
jb
jne
inc
mov
ficompl
cld
mov
aas
adc
int3
jmp
mov
int
push
adc
mov
cmp
push
xor
adc
scas
inc
pop
mov
fwait
xlat
push
sarb
dec
push
or
push
cmp
push
jg
int
into
xchg
imul
negl
cld
add
jb
hlt
movsb
jae
fsubs
js
mov
jmp
sub
jp
add
jp
ret
sub
push
setbe
mov
jo
jns
in
xchg
mov
and
orl
fldt
jne
movsb
stc
cld
lds
cmp
add
mov
ds
stos
iret
je
int3
daa
data16
mov
ja
adc
cmpsb
outsl
sbb
jns
adc
cmp
cltd
xchg
push
push
aaa
cmp
jl
inc
cmp
dec
lods
inc
out
imul
or
mov
adc
adc
adc
lret
mov
adc
ja
imul
xchg
idivb
inc
ds
pop
sub
adc
lret
dec
das
jmp
icebp
xchg
mov
add
or
mov
int
test
xor
pop
pop
pop
push
push
insl
xorb
jne
pop
popf
ret
cmp
psrlq
dec
and
test
cmp
jo
aam
pop
imull
cmpsl
and
push
add
test
inc
clc
adc
and
fisttpl
xchg
mov
inc
xor
adc
sbb
nop
or
rcr
or
inc
das
inc
lret
mov
into
push
pop
lds
cmp
jnp
out
stos
xchg
arpl
or
cmp
add
dec
pushf
xor
nop
sbb
xchg
scas
mov
mov
mov
orb
daa
jl
mov
stos
test
and
aas
dec
out
pop
cmpsl
aad
stos
inc
stos
inc
xchg
xchg
addr16
imul
cmp
inc
fwait
ror
mov
jp
mov
or
bound
mov
push
jg
sub
xor
xor
lea
and
cmp
sub
es
dec
aaa
or
cmp
leave
pop
xor
dec
pop
xchg
xor
jmp
pop
stos
pop
pmovmskb
stc
mov
pusha
pop
pop
psllq
jbe
lds
addr16
hlt
add
repz
pop
ret
loop
loop
popl
out
inc
incb
xchg
push
inc
pop
cmp
inc
mov
rorl
add
lods
mov
cmpl
lcall
int
dec
add
std
fistpll
jp
fbstp
sub
outsb
jno
lock
stc
mov
shrl
stos
cmpb
pop
push
lods
adcl
lea
lods
dec
iret
mov
cli
jg
test
jnp
in
sti
in
cmove
xor
mov
icebp
imul
sub
dec
cwtl
out
lret
insb
clc
ret
sub
sbb
ds
shrb
lods
xchg
jns
cli
or
cmp
inc
mov
lret
repnz
inc
and
xchg
mov
xrelease
push
lret
popa
out
cmpsb
xchg
xchg
ret
push
and
mov
pop
mov
je
add
mov
cmp
clc
insl
cwtl
fnstenv
insb
movsb
shlb
out
or
lods
xchg
fiaddl
test
shlb
sbb
imull
outsb
adc
insb
push
mov
pop
xor
pusha
daa
push
imul
mov
jle
sub
mov
push
sbb
add
jb
and
cmc
call
fstpt
push
add
mov
or
inc
push
mov
push
int3
fidivrl
out
call
lcall
xchg
lods
pop
mov
out
icebp
jg
pop
xchg
inc
into
and
out
aam
notl
cli
dec
cli
mov
ja
push
fsub
jo
fdivs
arpl
push
cmpsb
icebp
xor
dec
pop
ret
or
xchg
insl
int
or
clc
mov
cmp
jl
bound
xor
pop
loopne
inc
repz
arpl
sbb
sub
xor
cmp
or
jle
xchg
mov
inc
xchg
icebp
mov
cmpsb
dec
mov
repnz
sub
add
lock
hlt
adc
rorb
js
or
jae
xchg
sub
cmp
pop
imull
push
cmpsb
cmp
adc
dec
fdivs
cmp
icebp
push
mov
inc
in
sahf
add
insl
in
xchg
xchg
jg
or
mov
xchg
test
ficomps
addl
ror
popf
dec
cmpsb
cmc
dec
xchg
mov
cli
xchg
out
mov
cmp
jecxz
stos
sbb
jp
fadd
mov
jmp
xor
mov
jg
insb
xor
cmp
jp
bound
aas
or
xor
cmp
iret
fcomp
in
scas
nop
aam
mov
add
sar
outsb
fldt
cltd
push
scas
mov
push
dec
test
leave
pop
dec
sbb
xchg
and
aad
sbb
movsl
jmp
xchg
xorl
aad
lds
and
daa
push
xor
mov
loop
mov
imul
loope
xchg
aaa
jb
lods
into
inc
inc
xlat
or
jbe
bound
mov
int
mov
stos
pop
jno
fs
jge
aam
and
loope
ret
sarb
add
pop
pop
push
xor
xchg
notb
rorl
dec
push
xchg
add
cmp
pop
dec
pop
lcall
out
push
cli
xor
pop
addr16
mov
inc
lahf
pusha
or
push
add
shlb
loopne
pop
movsl
adc
or
movsl
stos
repnz
in
sarl
je
outsl
enter
fcompl
jmp
ljmp
pop
cld
ret
inc
and
fcompl
mov
lods
xchg
xor
outsb
icebp
aad
in
mov
outsb
in
pushf
imul
lcall
adc
sub
loopne
push
sub
push
lock
and
sub
popf
rcrb
push
mov
lods
movsl
sbb
mov
loopne
addr16
sti
nopl
xorb
mov
pop
addr16
icebp
jg
sub
cltd
lods
in
cmp
and
adc
jo
fildll
cmpsl
sbb
adc
cmp
in
push
add
outsb
rcll
mov
and
jl
imulb
test
imul
scas
jae
hlt
xor
push
jbe
xchg
orl
push
dec
dec
js
jp
xchg
aaa
lock
cltd
jns
aaa
int
aaa
fiadds
xchg
mov
xor
pusha
int3
inc
popa
lret
pusha
out
xor
aad
mov
fsubr
cmpsl
mov
stos
lahf
and
call
stc
test
mov
sbb
mov
data16
add
pop
cmpb
daa
mov
aas
addr16
stc
js
imul
pusha
cld
daa
mov
test
ds
iret
xchg
bound
sub
nop
add
add
mul
xor
subb
sti
push
jns
ret
and
out
mov
imul
pop
cltd
and
and
in
push
lods
add
popa
in
jns
xchg
push
pusha
mov
dec
lret
jne
sub
xor
jno
cwtl
push
in
jg
mov
cli
jo
push
push
pop
push
xchg
insb
push
add
int
into
int
xchg
mov
pushf
pop
sahf
pop
hlt
and
rorb
shlb
cmp
and
ds
sbb
outsb
mov
sbb
insb
xor
or
push
push
sbb
jp
pop
mov
push
adcl
cmpl
adc
sbb
test
adc
stos
xor
push
xor
cmp
out
repnz
je
pop
xlat
mov
cmpsl
data16
sahf
or
roll
fwait
sub
dec
or
inc
push
ja
cmc
jne
mov
rcrl
cmp
frstor
push
pop
into
loop
xchg
jae
mov
lock
fwait
cmp
std
sub
cltd
incb
xchg
lcall
add
add
pop
pusha
add
jge
add
xchg
pusha
add
mov
pusha
add
ret
add
pusha
add
repz
add
add
add
popa
add
xor
add
add
dec
popa
add
bound
add
add
xchg
add
