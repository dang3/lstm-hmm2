push
mov
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
inc
mov
loope
mov
fs
lea
lods
xor
jp
inc
orb
cmc
xchg
mov
pop
jno
xchg
roll
int3
dec
jmp
jb
add
cmp
cmp
pop
je
scas
bound
push
imul
scas
ljmp
fbstp
sbb
mov
sub
sub
pushf
clc
mov
jg
fcmovu
out
sub
dec
test
cltd
cmc
sbb
xchg
fildl
lds
cmp
push
stos
leave
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
lcall
hlt
mov
sbb
and
dec
imul
xchg
sti
rcrb
call
lods
pop
dec
lods
push
mov
rol
insl
pop
sbb
push
cmp
clc
or
cwtl
jg
xor
je
dec
out
mov
repz
scas
bound
std
test
shlb
lock
push
inc
jecxz
aam
cmp
insl
adc
fisttpl
sahf
filds
es
push
bound
popa
sub
and
mov
cmp
adcb
xchg
add
mov
jmp
xor
stos
adc
pusha
fimull
lcall
das
inc
add
push
pop
rep
push
push
pop
sub
mov
shl
mov
ror
add
add
xor
add
test
je
pop
push
sub
jl
pop
sbb
ja
jmp
mov
call
push
pop
loop
icebp
and
int3
push
xchg
mov
cmc
push
out
mov
sbb
mov
cmpsl
jbe
adc
mov
push
fbstp
mov
in
sub
push
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
mov
jmp
shrl
js
jl
movsb
mov
imul
cmp
sub
mov
sub
jmp
hlt
jbe
xorb
in
mov
in
jmp
in
or
in
sbb
jae
dec
movsb
jmp
cs
push
jge
shrb
jecxz
das
aas
movsl
fidivrl
rolb
repnz
xchg
stc
fcmovnu
loopne
mov
adc
fsubrl
mov
or
popf
and
or
jle
mov
pop
imul
add
addps
dec
rclb
nop
push
daa
push
mov
jno
out
lods
call
lods
inc
rclb
dec
add
xchg
aad
xor
leave
lahf
loop
and
pop
xlat
insb
cmpl
xor
sbb
lret
popa
push
std
mov
push
xchg
mov
sub
adcb
movsb
loope
loope
test
mov
in
adc
xchg
xor
fwait
jp
leave
xchg
je
lds
sbbl
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
outsb
pop
pushf
orl
cmp
repnz
stos
xor
sti
pop
mov
and
xlat
jg
push
sbb
and
xor
mov
xorb
push
mov
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
cmp
aam
xor
or
cmpl
mov
or
push
gs
cwtl
push
repz
stos
cmp
mov
cmpsl
out
jns
xchg
mov
and
fnstenv
aas
push
movl
lret
fdivrs
loop
cmp
mov
sbb
repz
rorb
jo
jne
or
in
jb
pop
test
inc
scas
popl
mov
jo
arpl
sti
out
in
mul
jo
cmc
sbb
dec
rcrl
js
push
mov
sub
push
sbb
lock
adc
in
dec
mov
iret
divl
jno
xor
cmp
sahf
rorl
test
and
sahf
addb
ds
sbb
cmovge
repnz
repz
xlat
addl
pusha
xchg
loopne
ds
iret
dec
ret
dec
ss
dec
push
mulb
push
shlb
lock
fsubp
fbstp
lock
test
daa
jle
cmp
lods
mov
cmp
mov
xor
push
push
inc
and
xor
negb
pop
xchg
adc
lods
mov
xchg
das
loop
inc
je
lcall
pop
arpl
les
lock
add
mov
or
sub
jl
or
xor
pop
sub
dec
and
cmp
mov
push
jae
adc
xchg
mov
cmpsl
loop
cmp
out
sub
cwtl
lods
cmpsl
mov
in
mov
xor
jl
fwait
leave
lahf
stos
popf
or
mov
ucomiss
frstor
jg
cli
lsl
insb
mov
aad
push
mov
xchg
jae
xor
sub
jno
push
cmc
jbe
sbb
or
mov
cli
movsl
fiaddl
out
xor
mov
and
loopne
sub
jnp
cli
leave
arpl
pushf
filds
fimuls
or
push
subb
push
dec
inc
loopne
fwait
test
xor
fisubl
insb
pop
aam
xchg
mov
fdiv
fistl
cli
xor
lea
dec
adcl
adc
jne
pusha
cmp
movsl
outsl
rolb
bnd
mov
dec
fst
push
inc
inc
cmpsb
iret
fdivrp
out
or
add
lahf
jae
nop
pop
jae
jno
cmpsl
dec
in
xchg
add
fcoms
clc
push
nop
mov
mov
sub
mov
push
push
subl
push
subl
mov
inc
mov
call
sub
mov
pop
mov
mov
mov
lea
mov
mov
xor
sbb
sbb
lea
xor
cmp
je
sub
sub
or
sbb
add
mov
pushl
sub
sub
pop
bswap
jmp
xor
push
xor
mov
nop
call
sub
ret
add
pop
out
mov
sar
stos
int
sbbl
ds
inc
cmp
clc
ds
push
xchg
incb
pop
nop
or
stc
jbe
xor
jp
xchg
mov
aam
cmp
out
add
repnz
add
aad
je
cltd
add
lahf
shll
insb
fistl
sub
and
or
icebp
lods
push
andb
jo
xor
jl
mov
sbb
ljmp
subb
loopne
ret
clc
enter
aaa
sub
sub
addr16
aas
insl
sub
mov
add
and
xchg
ss
push
sbb
xchg
adc
aas
xor
loopne
jp
cmp
mov
rcl
jae
dec
dec
mov
pusha
stos
xchg
xchg
xchg
aas
jl
jp
adc
lcall
jne
popf
lods
xor
aaa
jmp
or
mov
mov
mov
divb
icebp
ret
aas
es
cmp
dec
test
xor
nop
cmp
imul
xchg
leave
imul
es
stc
adc
lea
adc
mov
ret
push
mov
sub
ljmp
mov
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
pop
xor
push
lods
cwtl
inc
jmp
mov
inc
out
outsl
sbb
fwait
and
and
sti
aad
and
push
pop
adc
jnp
xchg
mov
mov
push
outsb
rolb
mov
push
les
cmp
cmp
std
mov
inc
cwtl
or
add
lret
jg
cwtl
add
sti
inc
imul
pop
icebp
cwtl
adc
es
rorb
int
mov
in
sub
push
push
push
call
add
pop
sub
mov
add
ret
data16
pop
cmp
rorb
cs
movsl
fisttpll
js
movsb
hlt
mov
fsubs
sub
xchg
or
cmpsl
jbe
mov
sbb
out
or
mov
imul
mov
in
pop
mov
inc
pushf
cmp
imull
popf
cs
push
lret
sub
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
dec
sbb
and
push
repz
data16
xor
andb
or
leave
popa
addl
or
jbe
adcb
sub
in
cmp
pushl
push
call
add
pop
sub
mov
add
ret
add
add
xlat
push
add
add
out
out
mov
pop
jg
sahf
aam
sub
nop
test
scas
aaa
pusha
pop
imul
jl
sub
push
mov
sub
push
push
push
push
push
call
add
pop
sub
mov
add
ret
add
imul
inc
push
jnp
rcl
or
and
ret
enter
sbb
xor
jae
pop
out
push
adc
outsb
push
jp
lock
rcr
lcall
leave
movsb
fstpt
jge
sar
repz
andb
dec
or
rcr
jo
jo
jle
cmp
stos
jo
orb
and
icebp
adc
cvtps2pd
mov
cmp
xlat
pop
test
mov
cli
fwait
mov
xor
dec
xor
es
push
cmp
adc
lahf
daa
ds
or
daa
push
mov
fcoms
rorb
insl
jmp
jmp
int
sub
sbbl
test
outsl
push
fbld
mov
jge
xorb
jg
lcall
testb
testb
pop
popa
lahf
stc
mov
pusha
cmc
out
mov
pusha
clc
xchg
ss
in
and
mov
cmp
mov
sub
inc
lret
xlat
aam
mov
les
dec
inc
push
sbb
jle
adc
dec
mov
push
dec
or
or
jle
hlt
es
pop
clc
mov
xchg
cmp
xchg
inc
dec
jecxz
push
push
fldt
imul
daa
icebp
pop
popa
xor
mov
push
jle
add
into
jae
imul
cmp
push
cmp
scas
and
push
test
xorb
jno
inc
mov
daa
mov
lret
mov
add
xchg
dec
or
jg
bound
sbb
into
xor
mov
jl
lret
stos
loop
cld
add
dec
jmp
aas
pop
cmpsl
rorb
icebp
dec
jecxz
rolb
sub
sub
cmpsb
lret
fistps
jae
sbb
fstpl
imul
stos
push
or
add
push
repnz
fists
test
jl
scas
scas
cltd
fdivr
jl
xorb
div
loopne
jno
mov
add
add
dec
mov
add
mov
cmpsb
jne
and
popf
add
aad
iret
pushl
out
outsl
cwtl
push
xchg
imul
insl
mov
loop
xchg
in
and
sahf
sbb
cmp
and
mov
push
jmp
into
cltd
ljmp
mov
and
daa
cmc
jo
cmp
mov
popa
cmp
popf
mov
xchg
cmp
sbb
enter
fucomp
ljmp
adc
mulb
push
mov
pusha
sub
aad
lahf
mov
lret
xor
dec
sub
mov
adc
in
daa
sub
in
mov
inc
push
cmpsl
or
cld
shl
aas
add
addl
sarl
sbb
jnp
or
pop
divb
rcrb
fcoml
xchg
cmp
out
pusha
add
sti
cli
scas
in
push
sbb
fcom
or
sbb
js
and
pop
or
data16
jmp
es
xor
out
aaa
out
shrl
pop
outsb
aam
out
sub
insb
jo
jb
adc
xchg
sbb
mov
cmp
jno
lds
xchg
mov
popf
fs
iret
dec
mov
outsb
repnz
mov
ds
leave
shll
shll
popf
ds
pop
mov
sbb
jne
lcall
and
fsubs
jle
mov
xchg
iret
mov
mov
cmp
ror
imulb
in
cmp
sti
gs
add
push
push
ret
addr16
testb
xor
cmc
or
sub
in
xor
call
add
sbb
out
cmp
pop
inc
sbb
mov
pusha
scas
push
lahf
je
movsb
js
filds
mov
sub
mov
cmp
xchg
mov
pop
xchg
aad
data16
test
imul
mov
nop
outsb
aaa
dec
icebp
jno
sub
and
adc
ljmp
push
cmp
add
sbb
xchg
andb
pop
cli
addl
jbe
sub
mov
add
xor
fdivrl
cmp
pop
hlt
aad
inc
push
insb
arpl
adc
fisubs
push
xchg
ficompl
push
inc
daa
mov
sti
and
and
jnp
inc
hlt
adc
popa
pop
or
adc
add
xlat
inc
sarb
cmp
out
hlt
inc
xorb
xchg
outsl
jne
mov
fwait
push
pop
push
in
xor
pop
orl
or
cmp
mov
ja
xlat
repz
inc
mov
hlt
inc
inc
sbb
sti
xchg
xor
pop
inc
cmpsb
pop
das
or
ja
outsl
cmpsb
insl
cmp
jecxz
mul
lret
loopne
icebp
adc
jecxz
arpl
adc
pushf
xchg
xlat
push
dec
sbb
mov
mov
cmp
mov
pop
mov
jne
dec
cmc
fdiv
jns
jle
dec
call
addr16
mov
push
stos
stos
sbb
mov
arpl
out
arpl
push
pushf
gs
sub
sbb
lcall
and
inc
push
in
repnz
mov
mov
adc
adc
iret
xorb
jns
mov
mov
imul
xchg
jo
add
in
xchg
xor
jl
jmp
mov
jns
inc
scas
mov
fiadds
sarb
xchg
mov
xchg
and
cmpsl
sub
es
adc
decl
push
jno
xor
xchg
ja
dec
lock
push
xchg
data16
cwtl
rolb
xor
add
sbb
je
sub
sarb
push
sub
cmp
lds
shlb
sub
sub
xchg
cmp
js
pop
movsl
pop
mov
movsl
sbb
fld
std
sbb
jge
dec
add
cmp
mov
sub
out
repz
jmp
arpl
dec
imul
inc
fadds
repnz
push
push
ja
cmp
fmulp
mov
inc
test
and
mov
imul
lea
dec
mov
adcl
adcl
jl
dec
mov
movsl
adc
pop
xchg
dec
mov
cmpsl
push
repz
rcl
or
repz
or
and
sub
pop
mov
mov
cmp
arpl
xchg
cwtl
mov
xchg
in
.byte
lahf
pop
