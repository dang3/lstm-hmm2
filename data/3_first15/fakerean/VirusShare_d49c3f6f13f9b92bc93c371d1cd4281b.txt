mov
mov
xchg
shr
xchg
mov
mov
rcl
lea
movl
mov
xor
movl
and
cmp
jne
push
mov
sub
pusha
and
lea
rcr
xchg
xor
xchg
push
mov
cmp
jae
neg
xor
mov
mov
xor
xor
and
mov
neg
cmp
jne
xor
mov
lea
mov
xchg
xchg
lea
push
push
pushl
pushl
call
cmp
jae
xchg
and
movzwl
not
not
not
xor
lea
cmp
je
cmp
jae
lea
mov
xor
adc
and
shrl
xchg
mov
adc
xor
xchg
mov
cmp
jne
mov
mov
and
decl
jne
add
and
not
xchg
xor
mov
cmp
jae
not
xor
xor
xor
ror
rcr
mov
rcr
xor
mov
add
not
neg
lea
mov
cmp
jne
mov
mov
sub
xor
and
cmp
jae
cmp
jne
xor
xchg
mov
xor
lea
rol
xor
xor
mov
rcl
shl
mov
add
mov
push
rcl
xchg
lea
add
adc
mov
mov
cmp
jne
mov
mov
mov
add
lea
mov
xor
push
adc
mov
cmp
jne
adc
lea
and
and
shl
lea
neg
lea
rol
xchg
cmp
jne
ror
lea
shl
rcr
mov
not
cmp
jne
lea
mov
adc
xor
xor
rcr
not
and
mov
mov
cmp
jae
xor
neg
add
mov
rcl
mov
mov
mov
cmp
jae
and
lea
lea
lea
shr
mov
add
neg
neg
xor
lea
cmp
jae
mov
lea
not
shr
mov
mov
rol
push
push
call
lea
cmp
jne
xor
xor
xor
xor
xor
rol
not
neg
cmp
jne
mov
popa
leave
call
call
not
xor
mov
cmp
jne
xchg
mov
xor
mov
ret
mov
xchg
xchg
mov
xor
ror
mov
cmp
jae
and
and
mov
not
xor
xor
mov
neg
xor
cmp
jae
xor
mov
adc
shl
neg
adc
add
cmp
jae
lea
mov
rol
lea
or
je
cmp
jae
xor
adc
not
xor
call
lea
cmp
jae
movzbl
xchg
shr
xchg
xor
cmp
jne
neg
xor
rcl
adc
lea
cmp
jne
mov
xor
lea
mov
mov
mov
popl
and
rcr
mov
mov
add
not
xor
neg
cmp
jne
lea
rcr
xor
pop
xor
rcr
mov
xor
rcr
cmp
je
cmp
jne
mov
xor
mov
mov
mov
pushl
neg
xor
mov
cmp
jae
jge
cmp
mov
dec
push
mov
sbb
in
sbb
lock
mov
and
xor
cs
jnp
sbb
dec
inc
das
inc
xchg
cmp
mov
jno
sahf
xchg
mov
sarb
sbb
movb
imul
data16
sbb
push
mov
lds
xor
das
jmp
inc
test
test
push
xchg
sub
dec
addl
pop
mov
inc
pop
add
mov
cmp
push
pop
lret
pop
push
sub
aad
mov
mov
cmp
cmp
mov
push
and
push
mov
loope
stc
and
jl
js
das
sti
inc
dec
addr16
push
sub
int3
mull
mov
mov
pop
add
mov
inc
jp
cmpsl
js
dec
hlt
push
push
mov
inc
add
lods
into
xlat
lahf
inc
mov
cmp
push
xor
dec
xor
mov
mov
dec
inc
dec
test
mov
jb
dec
cmpb
mov
cmp
mov
xor
cmpl
dec
dec
in
push
leave
loope
rorb
mov
mov
in
arpl
daa
lock
push
movsb
mov
cmp
loope
push
push
int3
mov
dec
mov
mov
xor
sub
inc
mov
xchg
lcall
in
lret
ljmp
mov
mov
aaa
clc
daa
call
ret
xor
ret
pop
out
daa
push
movsb
ljmp
add
dec
lods
das
cmp
in
add
arpl
dec
pop
lock
push
movsb
xor
mov
mov
inc
mov
pop
jp
dec
xchg
mov
jge
cmpsl
cmp
in
mov
mov
lahf
adc
call
movsb
mov
dec
pop
xlat
push
mov
pop
xlat
hlt
fnstenv
enter
popf
divb
add
adc
repz
fldl
lock
jecxz
test
shrb
jo
mov
cmp
lods
xlat
xchg
in
popa
aas
push
or
addb
adc
pop
xlat
enter
inc
das
push
pop
and
inc
movd
jge
xlat
scas
shl
mov
mov
out
enter
mov
shll
mov
jg
mull
lods
push
mov
xor
adc
mov
movsb
dec
insb
mov
out
xor
cmp
js
aas
inc
pop
adc
jmp
cmp
cs
inc
add
xlat
gs
jl
xchg
mov
aaa
sbbb
mov
jo
aaa
andb
or
sub
lret
sub
xchg
cmp
pop
aam
hlt
sbb
aam
xchg
adc
and
sub
and
sub
mov
shr
cli
sbb
int3
mov
aad
mulb
fbstp
fsubp
adc
in
aad
adc
enter
add
sub
mov
jge
movsb
jmp
pop
xchg
js
mov
enter
or
test
add
xor
enter
fcoms
mov
lods
mov
test
cmp
in
push
push
sub
aas
in
pop
xlat
cmc
jge
xlat
enter
xor
sub
mov
inc
mov
test
mov
repz
add
mov
adc
mov
aas
andb
aaa
andb
in
push
xlat
stos
in
popa
aas
push
or
addb
adc
pop
daa
aaa
cmpb
lock
lret
xor
push
aas
enter
dec
push
jp
sarl
pop
xlat
enter
sarl
xor
mov
sub
xlat
mov
xchg
stos
sub
adc
xor
in
mov
cmp
aad
xor
cld
push
mov
pop
dec
faddl
enter
jnp
inc
xchg
enter
sarl
mov
mov
dec
inc
pop
xlat
enter
sarl
outsl
mov
andb
stc
inc
aad
jge
das
sahf
sub
in
dec
pop
inc
xchg
enter
lret
xchg
andb
fs
xlat
xbegin
aad
shl
aam
inc
pop
sahf
hlt
sbb
xchg
ficomps
xlat
xchg
fdivp
adc
lret
xor
mov
aaa
or
sub
jnp
aas
mov
and
inc
or
jmp
xor
and
testb
lret
es
fdivrs
pop
fdivrs
dec
pop
mov
mulb
add
xchg
xchg
lock
jge
or
pop
xchg
test
lret
or
jae
and
adc
lahf
xchg
sub
push
cmp
sub
fcmovbe
enter
inc
out
xlat
enter
shl
fcmovnb
mov
or
or
loop
aaa
adcb
jbe
mov
and
mov
pop
mov
aad
ret
mov
aad
mov
sarb
gs
mov
xlat
cvtdq2ps
lea
xchg
lcall
push
and
mov
cmp
popf
ret
and
aad
shl
es
cld
fwait
dec
sub
fidivrs
lahf
dec
cli
xlat
enter
div
sub
lret
into
xlat
enter
lret
add
xchg
shrb
gs
xlat
clc
or
aaa
jb
xlat
leave
imul
lret
xlat
enter
insb
jge
xlat
repz
enter
inc
into
sahf
xlat
enter
shl
shl
jae
push
int3
sub
xchg
mov
xchg
scas
sub
adc
int3
push
push
pop
xor
xlat
out
lods
fidivs
enter
sarb
pop
imul
pop
enter
mov
jbe
mov
mov
sbb
mov
mov
xchg
cmp
jge
xlat
inc
cmp
aad
shl
or
icebp
sub
pop
out
andb
inc
es
xchg
jne
aam
add
test
jns
mov
fcomps
movsb
xor
mov
out
lret
ror
jb
sub
insl
out
cmpb
pushf
push
fs
popa
pop
insl
fdivrs
enter
divb
in
dec
andl
sub
scas
dec
aas
mov
mov
adcb
jnp
xor
scas
or
aam
jp
loope
or
jl
shll
sbb
nop
imul
shl
xor
jnp
insb
dec
nop
stc
hlt
inc
leave
out
jno
call
sub
sti
ret
pop
inc
fwait
cmp
push
int
dec
mov
xabort
mov
fldt
adc
xor
xchg
dec
lods
movsl
adc
shll
sbb
add
out
mov
push
mov
dec
mov
aam
shrb
notl
jne
or
aas
mov
xor
push
inc
loopne
push
push
mov
xor
imul
push
or
mov
adc
mov
cmp
fwait
jg
xchg
loopne
sub
dec
pop
clc
jbe
flds
fwait
cwtl
aas
scas
mov
in
pop
insl
jns
dec
xchg
outsb
ja
test
or
sbb
je
aam
mov
cmp
in
sbb
js
sbb
hlt
repnz
mov
fstpl
rcrb
cmp
fiaddl
sbb
rorb
lahf
cld
lods
adc
lds
pop
out
ss
aad
add
xor
cli
out
push
in
inc
pop
in
xchg
pop
sub
sub
icebp
mov
inc
stos
inc
cmp
hlt
mov
cltd
movsl
lods
inc
ds
xchg
repz
add
mov
xchg
aam
rclb
mov
sub
popa
push
int
fstl
je
mov
test
enter
mov
lea
inc
mov
jb
cld
dec
xchg
out
sbb
loopne
jp
call
filds
outsl
fucomp
enter
mov
cpuid
jnp
jg
jge
pop
dec
mov
sar
mov
mov
inc
lds
in
negb
or
leave
inc
gs
mov
movsb
enter
jmp
add
fisubs
mov
imul
dec
pop
ljmp
inc
sub
pop
fcmovnb
lret
stos
and
pop
js
inc
mov
fists
ret
fstps
ficoms
or
or
popf
sub
es
imul
jns
dec
mov
and
es
jne
mov
fdivrl
out
mov
jb
les
int3
xchg
dec
aam
push
idivl
fisttpll
pop
fs
lahf
mov
or
stc
push
dec
int3
dec
lea
or
sub
xor
sub
xor
mov
mov
pop
jp
mov
ljmp
into
data16
popa
cli
push
mov
inc
mov
and
lea
pop
aam
dec
jno
xor
mov
cmp
dec
hlt
les
lods
lock
call
add
test
fcomp
and
ficoml
inc
in
mov
cmp
and
inc
pop
fmulp
pop
adc
scas
push
ss
loopne
iret
sub
dec
sbb
pop
mov
mov
xlat
in
dec
push
sub
or
ja
movsb
sbb
cmp
xor
negb
and
mov
notb
push
jl
mov
mov
mov
test
mov
lahf
fmuls
xor
mov
push
inc
popa
rclb
xchg
cmp
lods
andb
mov
test
xor
pop
xor
sbbb
xchg
sub
daa
jle
and
dec
add
xor
xor
movsb
leave
jmp
cwtl
aam
push
movsl
push
andl
inc
jo
ret
mov
andl
sbb
mov
jl
mov
dec
xchg
mov
jns
dec
add
fsubs
ds
mov
ljmp
fsub
jbe
cmp
inc
pop
sbb
mov
sub
jle
stc
or
mov
push
push
jne
mov
sbb
addb
hlt
add
xor
cmpl
test
xlat
mov
inc
popl
inc
cld
or
or
ret
outsb
sbb
in
rcr
les
adc
into
jne
lcall
hlt
and
xchg
into
das
lods
push
push
xchg
loopne
push
dec
popa
jp
cmpsl
push
adc
rclb
jecxz
dec
cmp
sbb
lret
push
or
clc
int
sub
jmp
cmp
subl
dec
or
add
out
dec
gs
add
jmp
imul
sub
adc
xchg
movsl
pushf
std
pop
push
or
xchg
test
mul
mov
mov
ds
push
hlt
pop
add
pop
push
push
into
xchg
out
push
xchg
fwait
pushf
loopne
insl
iret
mov
add
int
lret
mov
mov
aad
fadds
enter
test
push
das
mov
ror
andl
lret
sti
inc
imul
dec
and
sti
or
jbe
idivb
rcll
jnp
in
lock
pop
fnsave
pop
cmp
jecxz
imul
clc
cmp
xor
jo
scas
outsb
xor
in
mov
lret
mov
inc
idiv
jne
cli
xchg
xchg
dec
xchg
push
xchg
adcb
pop
std
div
inc
test
adc
lock
lret
lods
sahf
push
jle
cmp
cmp
and
scas
aad
imul
enter
int
fisttpl
bound
or
out
jno
cmp
pop
fnstenv
pop
fmull
pop
cmp
push
pop
addl
push
dec
xchg
rorb
adc
cmp
mov
aad
call
inc
adc
fsubrp
and
fcomi
jo
test
xor
push
ret
add
jb
sbb
pop
je
push
jbe
cmc
jnp
push
out
pop
mov
sub
xchg
pop
lret
xchg
cmc
jl
and
les
imul
push
push
push
icebp
dec
mov
dec
dec
icebp
insb
or
xor
ja
or
or
fmuls
push
sbb
cmpb
fcompl
shrb
iret
xchg
dec
test
cs
sbb
dec
mov
in
imul
inc
lret
jne
das
cltd
add
jo
jmp
mov
gs
test
loope
mov
stos
sbb
ret
or
xor
push
pop
test
js
lret
push
popf
dec
push
push
fisttps
out
roll
pop
inc
push
rolb
add
push
or
cs
pop
add
aaa
dec
xchg
adc
sti
cmp
lea
rcll
pushf
xor
mov
out
aaa
mov
or
pop
aam
jno
fcomp
ja
push
xor
mov
fcompl
xchg
push
iret
xchg
pop
pop
aam
ds
movd
dec
testb
fdivrs
push
jno
xchg
dec
mov
cli
inc
orps
jl
fistps
mov
pop
mov
loope
out
lds
fnstcw
add
cld
sub
insb
adc
ret
adc
fdivs
push
sti
pushf
push
xchg
shll
push
sbb
in
or
lods
sbb
dec
and
mov
push
pop
jl,pt
add
cmp
jo
jp
cld
push
inc
cs
mov
aas
sti
lret
mov
xchg
sti
dec
pop
aam
aam
mov
pop
std
lea
test
aad
outsb
cmp
sbb
test
push
sbb
fiadds
hlt
mov
cltd
out
js
push
adc
mov
xadd
pop
jo
sub
mov
ss
aas
inc
inc
rcr
call
sub
jmp
lcall
addl
repnz
jl
sarb
adc
mov
insb
dec
sub
ja
into
pop
in
lock
fwait
cmc
dec
nop
cltd
or
test
add
cmp
shlb
lock
push
jbe
mov
std
iret
push
cltd
leave
xor
test
fistpl
cs
cmp
in
ret
jle
push
and
adc
sar
dec
scas
dec
pop
pop
dec
scas
push
or
movsb
loope
and
adc
fdivs
pop
xchg
inc
js
push
jns
cmp
scas
movsl
xchg
in
dec
push
bound
and
in
bound
jo
xchg
push
iret
sti
outsb
inc
jecxz
push
jo
inc
sbb
and
ficoms
push
out
pop
and
jbe
adc
sbb
jle
lea
vsubsd
xor
fstl
pop
in
ss
inc
inc
jp
xlat
lahf
mov
ja
and
bound
jne
pop
push
arpl
cmp
iret
inc
xchg
stc
outsb
adc
adc
add
pop
fdivrl
xchg
sub
fbstp
daa
sti
fs
mov
negb
cmpsb
xchg
xchg
std
ljmp
pop
idiv
cwtl
addr16
adcl
test
std
xor
test
sbb
adc
cltd
inc
mov
sbb
mov
movsl
add
inc
loope
jnp
std
out
pop
movsb
lds
xchg
xor
ljmp
in
pushf
lcall
or
mov
dec
ret
ret
jne
out
push
insl
push
popl
push
pop
dec
pop
cmc
push
test
pop
dec
aas
aas
sub
xchg
inc
push
inc
mov
stos
cmovs
mov
test
mov
push
cmp
iret
in
fs
stos
outsl
outsb
pop
stc
shlb
imul
shrl
cmp
shrl
xchg
adc
jg
aaa
jmp
fimuls
aam
outsl
int3
aas
pushf
fidivrl
or
xor
inc
pop
sbb
inc
jbe
xor
addb
fisubs
xchg
xor
je
test
and
or
mov
xchg
andb
fstl
mov
push
and
adc
sub
jae
fsts
imul
xchg
or
or
inc
sbb
rclb
xchg
nop
ja
mov
rcrl
and
pop
mov
ljmp
adc
jnp
cltd
jge
out
push
cmp
mul
out
xor
jp
inc
jne
push
inc
inc
inc
and
adc
loope
insb
mov
pop
leave
push
dec
xchg
dec
or
insb
add
sub
mov
leave
mov
pop
or
xor
fs
pop
bound
aam
sahf
and
insb
in
pcmpeqb
lret
xchg
cmp
xchg
out
jne
jp
jl
ds
pop
mov
xor
pop
leave
ds
sbb
pop
ret
adcb
aaa
popf
repz
jecxz
int
mov
jl
xchg
inc
cltd
scas
cmp
dec
sub
call
nop
xor
sbb
mov
dec
aam
push
jp
fadds
mov
pop
orb
sti
mov
and
or
dec
test
pop
pop
lods
cli
jo
inc
dec
pop
aad
ds
cmc
xor
pop
sub
dec
loopne
inc
push
inc
push
aad
and
and
into
imul
pop
je
or
sarb
add
sbb
or
call
ljmp
rol
add
sbb
aam
push
in
xchg
cs
shl
aas
adcb
es
mov
sub
xor
jae
imul
pop
mov
push
lret
mov
add
mov
mov
jl
pop
mov
sarl
xlat
sbb
pop
mov
and
ss
add
mov
cltd
jae
jle
data16
lret
mov
xlat
mov
pusha
xchg
scas
pop
leave
dec
adc
push
scas
and
jmp
cmp
test
decl
inc
jp
cwtl
jl
loopne
push
fdiv
lods
pop
push
fdivrl
hlt
sub
xor
and
fisttpll
adc
push
jge
jb
shl
jg
stos
sub
jmp
sub
bound
pop
jae
pushf
fldcw
inc
cmp
arpl
sub
addl
push
mov
adc
dec
sbb
dec
lcall
mov
inc
and
mov
cli
sbb
fdivs
aas
and
iret
imul
inc
cmp
cmc
test
scas
mov
sub
xchg
push
faddl
xor
lret
repz
insb
push
xchg
add
popa
aas
out
ss
sarb
movsl
pop
test
shll
pop
push
adc
jg
frstor
xchg
pushf
clc
sahf
test
mov
sub
jp
test
or
xchg
mov
push
pop
xor
pop
dec
pop
add
repnz
sub
sbb
je
into
xor
pushf
xchg
test
int
pop
insb
cmp
out
xchg
jb
das
mov
mov
cmp
in
inc
aas
rorl
push
mov
pop
push
out
mov
fsubrp
ret
adc
pop
fildll
ljmp
addr16
pop
add
xor
sbb
jmp
mov
out
fwait
repz
shlb
dec
xor
push
mov
pop
and
dec
jo
push
aaa
imul
int3
jl
fmuls
inc
mov
or
lahf
dec
gs
mov
rol
negb
ficoml
mov
lret
xchg
sbb
jle
nop
sub
sahf
adc
mov
mov
cmc
mov
dec
or
shll
mov
cwtl
mov
ret
mov
rolb
shrl
pop
mov
stos
fmul
lahf
imul
pop
and
xchg
dec
insl
in
xor
mov
cmp
lahf
lds
cmc
pop
fiaddl
mov
mov
add
push
adc
or
lret
lods
out
mov
inc
inc
test
clc
leave
insb
es
cmp
fcomps
pushf
pop
addr16
sbb
mov
push
into
fldcw
mov
rorl
cmp
stc
push
lea
lock
pop
addr16
test
pop
cltd
out
fwait
push
pop
xlat
les
adc
xchg
mov
sub
ds
leave
stc
mov
stc
pop
pop
jecxz
pop
cmp
and
mov
and
jg
incl
fstl
adcl
das
out
lcall
div
mov
dec
pop
fmull
xchg
inc
imul
test
jb
stc
add
sub
sbb
push
std
mov
aas
push
or
and
subb
xchg
fstps
add
push
mov
mov
mov
mov
jae
mov
push
outsl
call
inc
sbb
dec
mov
xchg
jle
cmp
mov
ds
cvtpi2ps
int3
pop
sub
in
fisubrs
dec
xchg
push
mov
lret
nop
daa
outsl
negl
fcomps
jo
mov
loopne
cmp
inc
push
ljmp
fldenv
sbb
dec
mov
lret
jb
sub
rcrl
and
mov
adc
and
ss
fists
or
insl
jp
mov
mov
insl
pop
inc
sahf
cmp
sub
dec
les
js
cwtl
das
cmc
push
fnstcw
or
xor
adc
daa
push
sub
xor
add
out
pop
adc
sahf
sub
xor
clc
jbe
mov
rcrb
push
dec
mov
push
in
jmp
cmp
and
mov
xchg
dec
shufps
mov
out
dec
push
rcr
sbb
dec
push
out
add
pop
lahf
shl
xchg
cmp
loop
pop
push
jns
int3
outsb
sub
cltd
fisttpll
ja
lock
sti
lret
fdivrl
push
repz
mov
push
out
add
xchg
ror
dec
fcompl
dec
test
xchg
lea
hlt
pop
mov
test
clc
popf
pushf
or
push
xchg
stc
cmp
fdivrl
ljmp
xchg
lock
xor
pop
inc
mov
xchg
xor
xor
sbb
xor
lret
pop
xchg
lds
aas
cld
lret
in
inc
inc
movsb
inc
xor
arpl
insl
jae
fdivl
or
xchg
cmp
dec
jle
xchg
pause
pop
pminsw
aad
push
pop
cmpsl
insl
iret
cmp
ret
sub
fisttpll
sbb
adc
or
lods
xor
mov
pop
dec
pop
sbbl
popf
int
dec
xlat
mov
pop
lock
adc
cmp
xor
int
adc
dec
xchg
test
inc
aas
nop
jbe
push
push
pop
mov
sbb
adc
xlat
pop
sub
jge
lret
and
ret
xor
stos
xchg
mull
xchg
mov
jle
ret
enter
data16
jmp
push
pop
aaa
cmpsl
mov
int3
sti
cmpsb
ffreep
cmc
popa
mov
andl
sbb
shlb
clc
add
lahf
add
adc
lds
iret
call
sub
notb
insl
jno
mov
cmp
rorb
out
popa
out
pop
sbb
mov
mov
xor
das
push
xor
push
outsl
mov
and
cmpsl
adc
fstpl
aaa
pop
adcl
jg
jmp
outsl
lods
dec
sahf
ret
xchg
rorl
icebp
enter
cld
push
or
pop
xchg
insb
sub
adc
mov
in
mov
push
insb
lods
push
loop
dec
push
and
add
and
dec
insl
repz
xlat
mov
add
cli
jnp
jg
aas
loopne
dec
mov
adc
inc
outsl
lods
mov
aad
lds
mov
popf
ficomps
pop
icebp
cmpl
inc
lods
jle
aaa
push
mov
add
and
pop
ret
pop
fmuls
lods
jge
out
pop
sbb
movsl
sbb
shrb
in
shll
xchg
inc
mov
jg
mov
pop
sahf
pop
fnsave
std
enter
or
cmp
js
fnstsw
fidivrs
idiv
mov
mov
xor
fwait
push
push
lds
ja
sbb
mov
clc
inc
cld
gs
fcmovnb
mov
sbb
and
rep
push
ja
ficompl
ficoms
inc
pop
mov
dec
loopne
hlt
lahf
fdivrs
push
dec
pop
cmp
shr
mov
movsl
cld
outsl
aas
pop
pushf
cmp
js
sbb
add
into
out
sub
movsl
shlb
aam
cmp
sub
or
cli
adc
push
cld
cmp
pop
repz
movsb
or
fisubl
jp
sarb
push
adc
cmp
jo
sub
or
xor
pop
int3
test
sub
xchg
ss
ficomps
andl
mov
test
loope
or
sbbl
or
std
cld
mov
bsr
and
push
mov
js
mov
jns
outsb
movsb
int3
rorl
xchg
sbb
and
and
mov
enter
fistl
push
fidivrl
sub
lods
lcall
fstl
mov
xchg
mov
inc
fidivl
es
inc
cs
out
inc
scas
mov
add
and
das
movsl
addr16
push
sub
rclb
cmpb
xchg
and
sub
loope
ror
xor
into
xchg
jb
outsb
inc
cmp
cmpsl
sti
mov
push
jmp
sbb
or
popa
in
jbe
sbb
adc
call
mov
pop
cld
jmp
inc
clc
imul
cmpsb
add
mov
mov
iret
pop
inc
xchg
push
lcall
mov
cmp
ljmp
dec
and
jmp
outsl
lock
pop
cwtl
cld
inc
ficoml
or
out
jmp
leave
shll
hlt
push
adc
lret
out
test
outsb
insb
repz
mov
sub
les
sahf
sti
sbb
push
ljmp
or
xchg
cmp
fmuls
cs
ds
pop
xor
cmc
mov
fsubl
dec
orb
ret
push
push
js
xor
pop
push
jno
xchg
jb
repz
dec
aad
jmp
sar
loop
jbe
pop
jmp
ror
mull
cmpsb
pusha
mov
sbb
add
pop
inc
std
das
inc
fiaddl
jl
and
fwait
jmp
rcr
out
and
push
fsubs
jecxz
mov
sbb
cmp
fs
xor
xchg
xlat
shr
mov
repnz
xchg
es
jge
lods
js
call
shll
in
sti
fstps
ret
mov
and
mov
fcmovb
cmp
mov
stos
pop
fadds
jno
xor
popf
cmp
jns
inc
mov
inc
xor
add
pop
jb
pop
imul
pop
sbb
mov
ljmp
scas
stos
cmpsl
cmpl
cmpsl
jecxz
repz
mov
sub
jge
ret
push
mov
pop
ljmp
sbb
jb
notb
push
test
fcompl
jle
sbb
popf
pop
rolb
cs
mov
outsb
push
hlt
sahf
pop
sub
aam
insb
repz
xchg
xchg
inc
push
xor
iret
mov
mov
loope
ficoml
cmp
fstpl
pop
lock
loop
ja
xlat
cmpsb
jns
insl
mov
mov
mov
lods
cmp
addb
sbb
cld
jg
mov
addr16
paddsb
iret
sar
into
sub
inc
les
fbld
xor
in
std
fwait
cwtl
add
cmc
mov
int3
lea
push
lret
mov
aas
and
jge
repnz
hlt
cmpsl
xlat
adc
cmpsb
and
ret
mov
leave
testl
jnp
cmp
das
stos
insb
pop
loop
mov
adc
out
push
gs
or
in
cmp
jp
das
iret
or
leave
mov
mov
cli
mov
out
fs
sub
inc
xor
fisubs
lret
xchg
xchg
sub
sbb
imul
push
mov
pop
into
adc
orl
clc
jge
adc
sbb
cmpsb
arpl
icebp
ss
testb
inc
sub
sbb
push
mov
mov
cmp
sbb
cmpsb
and
adc
iret
mov
das
and
call
imul
pop
dec
je
fstpl
sub
lea
sbb
mov
sbb
lods
sahf
cs
test
adc
movsb
or
lret
dec
adc
in
push
adc
es
pop
dec
add
or
aam
mov
filds
mov
mov
jp
add
dec
add
dec
ret
inc
std
lret
dec
mov
pop
je
outsb
fiaddl
fisttpl
inc
in
jp
call
xor
imul
das
stos
cmc
aaa
andl
ds
xor
inc
lods
adc
sarl
xchg
mov
and
test
pop
aam
dec
xchg
aam
scas
lods
fsubl
jecxz
pop
inc
sahf
cmpsb
or
sub
fisubs
popf
loope
repnz
sub
jnp
sbb
xchg
scas
or
push
xor
imul
sub
mov
aad
mov
mov
ja
pop
sub
push
sbb
pop
bound
ss
sub
scas
dec
aas
fprem1
lcall
jle
int3
jbe
out
lret
fstpt
pop
addb
aam
push
and
cmp
jmp
mov
sub
or
fnsave
bound
mov
ljmp
aas
mov
cli
pop
jns
pop
mov
dec
cltd
xchg
adc
test
sub
cli
inc
insl
out
fldt
mov
insl
push
push
push
repz
test
aam
or
aaa
aad
or
xor
pop
pop
aas
sbb
push
aas
lds
leave
movsl
dec
inc
in
xchg
pop
popf
inc
add
cmp
jl
push
movq
pop
es
and
mov
sub
xchg
mov
stos
xchg
hlt
dec
and
je
outsl
out
cs
dec
sub
in
je,pn
adc
push
push
add
mov
pop
jae
mov
hlt
sub
scas
fldt
je
dec
dec
stos
out
mov
fcomps
aad
inc
fs
xchg
int3
je
stos
inc
xchg
push
inc
jecxz
push
jg
sbb
add
xchg
les
aas
filds
js
jmp
pusha
jg
sbb
dec
sub
jo
scas
aam
xchg
test
xlat
push
cmp
nop
lea
cmc
pop
pop
ret
dec
mov
pop
xchg
scas
dec
cmp
sbb
inc
stos
sub
xchg
mov
push
dec
fists
sbb
pop
nop
or
fwait
testl
out
and
sub
inc
mulb
lods
test
xchg
push
gs
push
enter
flds
xchg
sub
dec
test
daa
test
fcomps
stos
aam
push
push
inc
addb
push
subl
xchg
inc
xor
or
dec
mov
push
dec
rol
fcomps
xchg
dec
fisubl
cltd
xchg
inc
inc
and
or
fucomip
push
jge
cmp
or
adc
push
pop
mov
or
loope
ja
mov
cmp
adc
and
outsb
fmull
shll
fucomp
fcmovnu
shlb
and
jmp
or
jns
xchg
cmp
int3
cs
inc
repnz
push
mov
enter
xchg
rolb
iret
loopne
pop
sbb
andl
pop
push
cmp
rclb
addr16
sahf
mov
icebp
cld
loop
pop
ds
lock
inc
sar
fbld
cmp
sub
sbb
in
mov
mov
aaa
rorl
cli
cltd
inc
lcall
mov
jns
mov
mov
cmp
dec
js
lea
sbb
iret
and
in
repnz
popf
pop
or
outsl
xlat
pop
gs
xor
pop
clc
sti
push
pop
fs
xchg
shll
adcl
fidivl
add
mov
leave
xchg
lahf
clc
push
dec
loopne
pop
and
popf
andl
mov
xchg
xchg
jmp
cmpsb
cmp
stc
add
dec
sbb
sub
push
bound
icebp
fwait
clc
jg
ljmp
add
sub
jae
int
jle
dec
lret
subb
cmpsb
pop
inc
fnstsw
xlat
jg
loope
dec
fildl
flds
xchg
jo
mov
repz
cmp
cwtl
inc
mov
pop
sbb
push
sub
cltd
sbb
arpl
rolb
mov
push
xor
inc
movsb
rcl
inc
mov
lods
loopne
ljmp
and
cmpsb
sbb
cmp
pop
sbb
push
and
mov
loope
mov
dec
or
dec
outsb
add
imul
adc
sysexit
mov
mov
fcmove
outsb
jl
add
adc
dec
lds
lods
int3
add
inc
enter
lea
or
and
orb
pop
dec
jbe
and
out
xor
loopne
add
test
mov
mov
adc
out
mov
insb
nop
shlb
mov
sbb
cld
cli
testb
dec
cmpsb
and
addl
xchg
cld
mov
mov
mov
mov
stos
xchg
dec
ds
js
stc
out
rorl
add
add
imul
mov
cmp
fmulp
int3
mov
sbb
movsb
mov
adc
push
xchg
cltd
shlb
ds
lods
in
iret
xorb
push
xchg
dec
test
pop
outsb
ljmp
xor
fbld
sbb
mov
aad
shl
sub
pop
insl
imul
jl
aas
jns
sbb
dec
mov
add
loopne
pop
fadd
hlt
repnz
jno
cmp
insl
mov
inc
sub
sub
push
aas
pushf
lcall
pop
ret
test
xchg
aas
call
fdivl
mov
push
pop
pop
rorl
ljmp
jnp
sbb
xor
icebp
mov
fdivr
pop
add
xchg
inc
cmp
out
les
mov
jmp
out
std
mov
inc
xchg
mov
mov
sbb
xchg
hlt
scas
pop
roll
push
call
mov
jg
je
jo
mov
cmovo
rcr
call
sarl
sbb
jmp
daa
popf
pop
in
jge
mov
dec
sub
mov
adc
pop
inc
push
pop
es
insb
or
jae
push
loope
push
fisubrs
inc
inc
pop
pushf
roll
mov
xchg
mov
cmp
sbb
out
cmc
in
jne
je
pop
push
pushf
mov
xchg
clc
fistpll
pop
mov
mov
jmp
fimuls
test
ret
repz
ret
jbe
dec
dec
test
jle
fbld
push
lcall
nop
bound
fbld
cltd
xor
push
pop
push
push
xor
jle
orl
push
add
push
cli
sbb
xchg
inc
xchg
hlt
push
rcl
imul
dec
push
inc
adc
pop
stos
fmuls
sub
jle
xchg
mov
sti
inc
dec
pop
or
stos
aad
popf
addr16
lret
sbb
sar
fstpl
cmpsl
insl
add
jp
lea
int
and
mov
and
pop
xor
add
dec
js
imul
shrl
fstp
add
test
fldl
pop
mov
cld
xchg
sbb
mov
roll
mov
sub
jb
pop
rolb
std
ret
pop
xchg
movsl
ficoms
aaa
mov
xor
aas
cmp
mov
in
ja
out
dec
repnz
scas
cmp
cmp
jbe
or
lods
sbb
mov
or
mov
mov
mov
add
les
push
and
pop
cmpsb
jl
adc
ret
pop
mov
push
or
jb
mov
scas
mov
in
xlat
mov
jns
and
cmpsl
scas
cmpsb
inc
add
mov
fs
in
pusha
or
add
bound
xchg
and
pushf
test
sub
lods
xchg
subb
test
inc
push
insl
fildll
sarl
pop
aam
mov
mov
lret
out
xchg
push
xlat
ds
insb
mov
dec
jae
scas
inc
xchg
mov
ja
mov
jo
addr16
jmp
push
cmp
ja
jae
mulb
sub
xchg
and
push
ficomps
xchg
cmp
out
cmp
popa
push
or
inc
mov
js
into
xor
lcall
push
mov
jecxz
jb
jne
cmp
adc
and
pop
sub
and
pushf
inc
sar
cmpsb
cltd
lcall
repz
mov
inc
out
dec
xchg
sub
xchg
loopne
sbb
test
and
mov
inc
movsl
sbb
pop
and
xor
scas
jnp
and
push
sub
cmp
jle
dec
into
int3
pop
push
cmovae
inc
es
movsb
xchg
lahf
imul
xor
sahf
ret
cmp
aam
xchg
loopne,pt
nop
flds
popa
cmp
std
fwait
pop
imul
mov
popf
and
aam
inc
xchg
mov
jnp
sti
rolb
xchg
jnp
cmp
aaa
dec
pop
pop
adcl
dec
push
jae
xchg
push
gs
and
cwtl
jl
aas
pushf
sub
pushf
loopne
mov
adc
push
pop
negl
dec
lret
int
lock
pop
popf
nop
jbe
das
mov
mov
sub
nop
lret
outsl
adcl
mov
popf
mov
addr16
sbb
and
shll
test
jl
jbe
xchg
add
adc
pop
mov
mov
or
xor
scas
shrl
rorl
in
mov
inc
mov
in
out
mov
pop
iret
clc
mov
xchg
jge
add
in
mov
dec
sub
je
dec
mov
fsubrs
imul
jp
mov
test
popf
sub
add
cmp
cwtl
sarb
xchg
jbe
sbb
sbb
pop
scas
movsb
xchg
filds
stos
sti
aas
repz
out
pop
inc
movsl
cmpsl
sti
mov
movsb
les
cmp
push
mov
loope
push
imul
xchg
pop
mov
add
inc
mov
insb
or
sbb
cltd
mov
iret
pop
jnp
shll
xchg
and
cmp
fs
dec
fildl
idivb
xchg
mov
xlat
cmpsb
push
and
loop
jns
xor
jns
jne
mov
push
adc
dec
cmpb
jp
xor
push
fiadds
loop
adc
loope
stc
subb
hlt
mov
jno
mov
adc
push
incl
ds
jg
rcrl
dec
mov
dec
mov
repz
jae
ds
sbb
pusha
jecxz
jl
sbb
popa
popf
xor
cmp
push
xchg
stos
insb
dec
push
mov
ss
cmp
sub
bound
mov
mov
popf
aam
cwtl
jle
test
inc
pop
imul
inc
add
xorb
push
insl
rcll
ljmp
mov
mov
pop
sti
xchg
aam
cmc
lcall
stos
mov
rcrl
les
mov
cmpsl
lds
cmpsl
lock
out
add
jmp
idivl
inc
pop
or
mov
in
bound
std
fsubrl
popf
fisttpl
pop
mov
fldcw
xor
lret
out
aad
push
mov
push
aam
add
and
and
mov
xchg
rol
fs
icebp
fdivrs
cmp
add
rcrl
mov
fldcw
xlat
rol
fidivl
mov
sbb
inc
xlat
inc
mov
aam
lcall
jmp
push
mov
out
dec
pop
and
dec
test
fildll
popf
lret
aam
aaa
in
pop
pusha
lahf
cltd
in
add
mov
cltd
jl
inc
push
mov
mov
add
sbb
ja
pop
push
adc
mov
clc
inc
cmp
les
push
mov
scas
fisttpl
fisubs
pop
fcmovnb
mov
push
xor
int3
xchg
fisttpl
arpl
fsts
push
incb
xor
push
fwait
aad
adc
insb
test
outsl
adc
mov
pop
pop
inc
cmp
pop
mov
into
mov
adc
xchg
pop
decb
add
adc
jl
daa
lds
sahf
loop
jl
pop
ret
mul
dec
mov
in
arpl
les
ffree
orl
dec
dec
fldl
outsl
dec
filds
int3
jae
gs
adc
dec
out
into
jno
mov
icebp
or
mov
pop
insb
shrb
cmpsb
inc
fdiv
add
test
dec
pop
adc
je
repz
inc
pop
idiv
jg
fisubs
mov
insb
cmc
xchg
hlt
test
es
mov
dec
aaa
into
repz
cltd
rol
xor
fcompl
or
rclb
repz
jo
insb
hlt
sbb
jb
and
ds
test
sbb
push
stc
lock
pushf
jle
and
push
jb
xor
cmp
repz
xchg
fildll
sub
sbb
mov
imul
sub
int3
dec
loopne
pop
lret
push
sub
into
addr16
dec
imul
sti
sub
adc
inc
pop
int3
mov
xchg
jbe
pop
test
dec
je
inc
cmp
cmp
ss
pop
in
adc
push
and
push
push
sub
aam
outsl
dec
mov
test
pop
aaa
repnz
cmpxchg
jns
xchg
sbb
sub
push
hlt
inc
repz
xchg
inc
scas
mov
jo
outsb
add
mov
mov
movsl
push
clc
je
negl
movsb
test
xchg
aad
fldcw
mov
jno
jp
das
lods
xlat
push
pop
in
sbb
and
push
out
add
adc
xchg
pop
dec
icebp
cmp
scas
xchg
sti
subb
fnstenv
fidivl
mov
lret
push
mov
mov
pusha
sub
mov
rolb
mov
lea
rcr
aad
ret
in
or
fistl
push
add
je
out
push
test
pop
inc
and
mov
mov
int3
cmpsb
push
push
mov
mov
mov
add
ficompl
xor
mov
cmp
xlat
inc
ficompl
jo
sbbb
cwtl
movsl
xchg
pop
sub
leave
fcmovb
cmp
pop
shll
dec
and
inc
mov
mov
jae
and
aam
lahf
lret
rclb
ds
mov
sbb
add
mulb
and
cmpsl
je
and
jcxz
push
sub
push
subl
mov
and
push
cmpsb
pop
lcall
inc
cwtl
fcomi
xchg
push
int3
mov
test
sub
js
pop
dec
jae
jb
pop
repnz
pop
insl
push
int
add
jl
inc
dec
dec
jbe
xor
and
pop
mov
push
iret
lea
ss
leave
dec
aas
cmp
lahf
sbb
bound
enter
xor
dec
les
cmpsb
cmpsl
jg
hlt
mov
jns
xor
in
jle
mov
and
pop
jb
ja
clc
mov
stos
iret
int
inc
push
stos
fistps
mov
addr16
mov
jp
cmp
inc
pop
lret
fs
loopne
sbb
or
sub
push
rcll
insb
jmp
or
ds
jnp
movsl
xchg
xchg
cltd
sub
nop
mov
or
xchg
movsl
xchg
repz
fcomip
jl
fscale
hlt
add
das
add
lock
push
mov
jmp
adc
pushf
mov
in
inc
lock
ja
or
sbb
repz
imull
and
xor
push
or
inc
adc
add
jb
ljmp
stos
outsl
nop
aas
sbb
mov
jae
scas
sbb
fistl
adc
imul
ret
in
dec
cld
popf
lea
xchg
or
push
or
bnd
stos
xor
mov
adc
clc
ljmp
dec
jne
clc
pop
xlat
dec
pushf
das
outsb
mov
jle
mov
gs
in
cwtl
ret
xchg
pushf
sbb
dec
outsb
xor
pusha
out
mov
inc
dec
cmp
lret
sahf
xor
jns
inc
rcrl
fsubr
sub
lea
mov
cmp
xchg
jne
pusha
xor
cmpsl
stos
pusha
out
adc
out
nop
imul
lcall
aas
imul
les
in
ljmp
mov
cmp
aas
test
pop
sbb
out
aaa
sub
stos
push
sub
mov
cmc
mov
sub
inc
pop
mov
push
fistps
jns
sub
pushf
aas
and
xor
lods
xor
xchg
sub
ror
roll
fimull
xchg
or
addr16
sub
jge
pusha
pop
mov
cld
scas
add
out
cltd
mov
and
clc
jnp
lea
or
mov
xchg
lea
fs
test
and
lret
xor
inc
scas
leave
adc
sub
jg
mov
js
push
imulb
lahf
adc
sub
ljmp
orl
jl
pop
mov
stc
adc
decl
gs
xchg
sub
lods
pop
aam
aas
fildll
push
mov
int3
in
dec
jl
loopne
inc
popa
loopne
push
xor
decb
cwtl
push
and
test
fcomps
or
xchg
cmc
xor
mov
add
jb
adc
jmp
loopne
sbb
xchg
sti
mov
in
aas
lods
xlat
push
lahf
push
shl
pushf
sub
lods
mov
pop
or
mov
adc
mov
and
pop
mov
cwtl
sbb
mov
mov
dec
dec
jo
mov
pop
sub
xor
outsb
pushf
dec
push
cmp
mov
dec
dec
or
inc
and
inc
and
ljmp
jp
sbb
jne
je
ret
push
adc
icebp
fildl
xor
jns
jge
lea
jbe
xorb
call
outsl
inc
gs
