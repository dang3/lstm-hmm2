add
push
push
push
call
pop
pop
ret
push
mov
mov
test
je
mov
xor
test
setne
mov
mov
xor
push
test
setne
mov
mov
xor
test
setne
mov
jecxz
inc
add
test
setne
mov
mov
xor
test
setne
mov
mov
xor
test
setne
mov
mov
xor
test
setne
mov
mov
xor
test
setne
mov
mov
mov
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
neg
inc
add
add
xchg
rorl
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
shr
cmp
jne
cmp
jae
mov
mov
push
push
call
mov
call
pop
ret
xor
mov
push
push
call
mov
call
pop
ret
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
mov
mov
shr
cmp
jne
cmp
jae
inc
and
and
shl
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
xor
mov
mov
mov
mov
js
inc
jl
xchg
push
rcr
and
mov
mov
mov
mov
pop
ret
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
bnd
xchg
add
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
mov
test
je
mov
push
mov
mov
mov
mov
mov
mov
insb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
add
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
movl
lea
movb
mov
call
push
mov
movb
movl
call
mov
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
jne
mov
mov
push
push
push
push
call
mov
test
je
lea
lea
add
add
add
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
lea
add
push
push
mov
add
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
add
pop
ret
nop
nop
mov
mov
ret
nop
nop
nop
lea
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
call
mov
lea
push
push
call
mov
mov
sub
push
push
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
or
push
push
push
push
call
mov
call
mov
call
pop
mov
pop
add
ret
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
call
mov
mov
xor
push
test
push
push
setne
push
mov
call
push
push
mov
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
test
je
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
jne
push
lea
call
push
push
mov
call
mov
call
push
push
jmp
push
lea
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
push
push
mov
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
mov
push
push
push
push
call
mov
push
push
push
push
lea
push
push
push
mov
call
push
push
push
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
mov
call
xor
lea
mov
call
mov
mov
push
push
push
push
movb
call
lea
cmp
je
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
lea
push
push
lea
movb
call
lea
movb
call
test
jne
xor
mov
push
call
lea
push
mov
mov
call
push
mov
mov
call
mov
mov
push
push
push
push
call
mov
lea
push
lea
push
push
mov
push
push
lea
push
push
mov
add
push
push
mov
lea
push
push
lea
push
push
mov
mov
call
mov
mov
add
mov
mov
mov
push
call
mov
movl
test
jle
mov
push
lea
call
lea
mov
mov
push
push
push
push
call
cmp
je
push
push
push
mov
call
mov
inc
cmp
jl
lea
push
push
push
mov
call
mov
mov
sub
mov
imul
push
mov
push
push
push
call
mov
test
je
push
call
mov
call
mov
call
lea
movb
call
movl
call
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
push
test
jne
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
mov
jne
test
push
je
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
test
je
lea
push
lea
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
call
mov
add
add
add
jb
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
push
lea
call
lea
movl
call
cmp
je
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
lea
push
push
lea
call
mov
movb
test
jne
lea
push
lea
push
mov
push
lea
push
push
lea
push
push
call
add
jmp
mov
push
push
call
add
test
je
mov
lea
push
lea
push
push
push
call
add
push
mov
call
mov
mov
xor
push
push
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
push
lea
movl
call
lea
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
call
push
push
push
lea
call
mov
call
lea
movb
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
push
push
push
mov
push
call
lea
test
je
push
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
movl
test
jne
lea
push
lea
push
lea
add
xchg
lea
push
push
call
add
jmp
mov
lea
lea
push
push
push
call
add
lea
movl
call
test
jne
pop
mov
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
push
lea
mov
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
mov
add
mov
call
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
fldl
and
mov
mov
mov
test
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
mov
inc
add
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
ret
in
inc
add
ret
add
aam
inc
add
mov
add
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
mov
test
setne
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
imul
add
setne
mov
mov
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
pop
fiaddl
test
je
mov
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
add
inc
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
xchg
lock
add
add
inc
jp
add
cltd
out
add
fidivrl
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
in
les
cmp
add
cmpl
filds
pop
mov
test
jne
movl
push
mov
call
add
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
aas
repnz
add
add
insb
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xchg
iret
inc
add
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
cmp
jo
inc
add
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
roll
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
and
inc
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
add
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
add
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
out
add
stos
add
mov
call
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
push
push
call
mov
add
add
add
add
xchg
movb
mov
add
push
add
add
add
add
add
add
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xlat
stc
add
lods
sti
repnz
fcomps
popa
ror
jmp
cmc
add
popf
fiadds
int3
add
add
add
add
mov
add
mov
jmp
add
jmp
sahf
fadds
hlt
push
jmp
add
lea
fistl
fdivr
lcall
inc
in
push
lea
push
push
push
push
push
push
push
push
push
call
ljmp
mov
mov
add
pop
cmc
add
test
pop
add
add
add
stos
pop
xchg
pusha
imul
fdivr
lcall
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
mov
add
add
add
scas
mov
movl
xchg
roll
mov
jp
mov
addb
add
out
aam
add
pop
js
push
fisubrl
mov
sub
pop
push
push
push
push
push
push
push
push
call
push
add
push
lret
fs
mov
insb
popf
add
pop
add
testb
add
add
add
xlat
cltd
lcall
push
push
pop
xchg
add
add
add
ljmp
add
add
inc
sub
add
roll
add
cltd
pop
sub
lea
push
push
lea
push
push
call
arpl
call
mov
add
arpl
add
xchg
xchg
pop
cli
add
xchg
lds
add
pop
test
scas
xchg
jbe
je
add
add
add
xchg
jnp
add
add
mulb
in
in
sub
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
jo
mov
faddl
rcll
mov
sti
add
push
add
push
addl
ljmp
push
mov
add
xlat
add
leave
lret
std
je
loope
call
add
mov
xchg
popa
add
add
sub
pop
call
push
push
push
push
push
lea
push
call
add
repnz
jp
add
push
mov
mov
fldcw
cmpsl
add
fmulp
mov
fwait
ja
add
les
add
mov
add
add
jne
add
pop
loopne
ljmp
in
movsb
stos
aad
add
in
call
add
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
out
subb
add
outsl
loope
clc
mov
incb
repnz
add
add
add
xchg
jns
mov
mov
ja
popf
subb
fcompl
push
push
lea
push
push
push
lea
push
push
push
push
push
call
stos
add
lcall
sbbl
mov
add
rclb
xchg
add
pop
mov
mov
push
lea
push
call
add
fiaddl
shrl
cwtl
jno
test
popa
mov
add
stos
add
out
loopne
mov
add
cmc
popf
add
lcall
add
cli
mov
add
mov
push
xchg
mov
mov
push
scas
ja
shlb
jbe
pop
jecxz
in
add
lcall
pop
in
push
push
push
push
call
lret
add
jns
add
push
add
mov
arpl
mov
lret
add
fisubl
push
out
add
add
add
arpl
add
push
clc
mov
mov
sub
pop
add
push
push
lea
push
push
call
lds
movsl
add
mov
imul
add
mov
lock
jb
mov
add
add
add
sub
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
mov
fsubl
int
add
cwtl
mov
add
add
jge
std
add
mov
add
fadd
mov
add
in
fcomps
pop
add
repz
adc
cmp
add
mov
dec
push
sub
add
add
inc
sub
shl
sub
pop
dec
pop
push
push
push
lea
push
push
lea
push
call
shll
add
mov
mov
out
mov
xchg
add
aam
add
add
add
jb
outsl
lret
sti
pop
push
add
sub
pop
pushl
push
push
push
push
lea
push
call
add
push
movsl
lret
mov
add
add
add
push
add
repnz
clc
add
xchg
lret
xor
add
nop
faddl
scas
enter
add
pop
mov
scas
mov
add
sub
pop
call
push
push
push
push
lea
push
lea
push
call
subl
jnp
lret
push
out
add
add
jne
ficoml
add
into
pop
aad
add
add
add
add
mov
xchg
js
add
rclb
add
push
mov
mov
add
lahf
mov
add
add
hlt
sub
pop
mov
push
lea
push
call
add
fisubrl
lcall
insb
push
add
out
movsl
add
jge
cmpsl
mov
out
add
mov
test
xchg
icebp
cmpsb
rorl
add
add
lea
xlat
incb
add
in
clc
lcall
inc
call
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
mov
push
fildl
fcoml
add
lods
popf
add
fdivrl
cmpsl
add
fstpt
rolb
ljmp
jo
jecxz
add
add
in
add
push
add
add
mov
in
mov
add
push
add
add
add
add
fiadds
inc
call
je
cmp
mov
push
cld
popa
add
mov
xlat
insb
xor
push
push
call
into
pop
xchg
add
mov
notl
add
add
jb
int
push
add
mov
cld
add
call
xchg
je
add
imul
in
in
lcall
push
push
push
call
addr16
jmp
add
addb
add
nop
add
jno
loopne
imul
rcrb
sti
imull
popl
add
push
lock
test
lds
pushf
add
push
sti
add
jo
bound
call
add
sub
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
jle
add
add
repnz
add
lods
mov
xlat
movsb
pop
add
mov
cmpsb
lea
in
mov
add
mov
mov
lret
lret
add
sub
pop
pushl
push
push
call
gs
in
stc
lock
add
lods
xchg
jle
cwtl
add
flds
icebp
jmp
cmc
xchg
mov
ja
add
fiadds
add
clc
push
add
jo
sub
pop
call
pushl
push
push
lea
push
push
lea
push
push
call
mov
stos
rclb
add
mul
pop
add
jae
add
ljmp
push
jne
add
fwait
push
lds
jno
test
adcb
add
mov
sti
cwtl
cmpsb
add
bound
add
mov
add
sub
pop
pushl
call
push
push
push
and
add
add
shl
sub
pop
ror
rol
pop
push
push
push
push
call
pop
fldl
loopne
subl
imul
in
sub
add
mov
add
xlat
filds
jb
xchg
add
mov
call
sti
loop
push
add
mov
pop
add
jmp
iret
push
xlat
rolb
rolb
out
lahf
add
lock
pushl
push
push
push
push
call
lods
mov
add
mov
add
add
add
jge
add
add
xchg
lods
mov
imul
add
rclb
outsl
push
add
imul
cmpsl
xchg
mov
lcall
push
arpl
add
push
push
lea
shl
add
push
or
not
add
ror
sub
add
add
sub
rol
sub
sub
shr
pop
xor
inc
shl
pop
push
push
push
push
push
call
add
loopne
add
call
mov
add
rcl
lods
fidivrl
out
mov
pop
lret
mov
push
enter
add
add
int
add
in
add
loope
cmpl
add
lds
add
testb
in
pop
push
push
push
push
call
mov
add
add
mov
int3
xchg
add
cmc
add
xlat
add
sbb
push
add
js
add
push
pushf
jecxz
icebp
jecxz
gs
pop
iret
add
add
mov
jne
add
repnz
lcall
add
xor
dec
add
add
mov
loope
add
pushf
in
fwait
add
add
add
scas
sti
add
jno
add
cmpsl
add
mov
pusha
pop
add
movl
add
add
add
hlt
aad
lods
cmc
push
cltd
sub
pop
call
push
push
lea
push
push
push
push
lea
push
call
add
add
add
add
mov
pushf
mov
loope
mov
mov
add
add
les
mov
ljmp
lds
xchg
enter
in
mov
push
push
push
push
push
lea
push
push
push
lea
push
push
call
loopne
mov
in
add
jp
mov
add
leave
jle
mov
push
sahf
xchg
clc
scas
add
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
imul
xlat
int
mov
stc
add
pop
les
jecxz
add
push
loope
xchg
add
adc
faddl
movl
add
add
add
mov
add
add
add
add
add
add
push
aam
push
lcall
pop
hlt
push
push
push
push
lea
push
call
lret
shlb
add
insb
movsl
popf
fildl
cld
out
repnz
popf
add
add
add
add
out
mov
data16
mov
cmc
lea
out
je
fstpl
add
sub
pop
add
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
mov
test
mov
push
add
jno
add
mov
xchg
mov
loope
add
pop
data16
add
lret
add
out
mov
add
add
add
loop
int3
jne
add
push
fiadds
shlb
repnz
clc
pop
add
ret
add
add
push
push
push
lea
push
push
push
push
push
call
stc
mov
mov
jnp
add
add
lret
imul
mov
add
add
pop
mov
test
sub
pop
add
push
push
lea
push
push
lea
push
call
mov
jge
push
add
popa
mov
add
test
loope
add
mov
leave
testl
mov
add
stos
mov
lcall
loope
pop
rcr
mov
in
in
pop
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
push
jns
mov
add
lahf
jmp
add
xchg
add
add
hlt
add
add
add
test
add
push
add
js
add
jmp
push
pop
push
in
jo
mov
add
jp
les
jne
aad
test
les
fcomps
xor
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
loopne
add
add
add
xchg
hlt
add
mov
add
addl
add
loop
mov
add
jbe
data16
add
push
lea
push
push
push
lea
push
push
push
call
cmpsb
popf
roll
leave
add
shrb
add
insb
out
ret
add
add
add
lods
test
arpl
add
enter
add
jle
add
add
add
add
add
jmp
add
jle
add
add
mov
add
push
push
lea
push
push
push
lea
push
push
push
call
fimuls
add
add
imul
add
add
nop
cwtl
pop
lret
pop
add
add
lcall
push
push
lea
push
call
faddl
jno
int
add
movsl
add
in
add
xchg
cmpsl
add
fsts
add
mov
add
mov
xlat
out
fstpl
in
hlt
pop
mov
push
push
lea
push
push
push
lea
push
push
call
data16
in
stos
add
add
jl
scas
mov
fsubp
mov
add
add
add
add
call
push
lea
push
lea
push
push
push
push
push
push
push
call
hlt
test
xchg
pop
add
outsl
xor
mov
mov
loope
mov
add
pop
fcoml
xchg
xlat
int
pushf
add
pop
add
les
push
push
lea
push
lea
push
call
push
aam
js
push
add
pop
add
add
ljmp
xchg
subl
add
mov
sub
pop
add
pop
push
push
push
call
notb
add
iret
add
in
je
imul
add
add
add
jbe
add
shl
add
dec
add
icebp
xor
adc
lea
push
call
data16
add
add
bound
arpl
mov
pusha
iret
add
xchg
push
add
ret
pop
incb
lods
stos
into
shll
in
mov
add
gs
add
into
add
sahf
movl
rcrb
ljmp
test
mov
addb
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
sti
add
movsl
jne
add
add
mov
mov
jbe
add
add
mov
add
add
stc
lret
scas
lods
mov
icebp
filds
arpl
push
push
add
jae
mov
add
add
mov
cli
out
jle
add
imull
sub
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
push
call
add
add
xchg
add
int
lret
add
ljmp
test
add
lcall
cltd
mov
cmc
add
cli
call
add
add
loope
loope
mov
addr16
fdivp
add
add
test
fadds
xchg
mov
add
lea
add
add
scas
stos
add
sub
pop
sub
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
add
sahf
stos
imul
hlt
out
mov
add
add
push
add
in
cwtl
add
mov
add
add
push
add
add
cmc
leave
leave
loop
int3
xchg
add
call
jmp
mov
arpl
movsl
jae
fisubrl
in
fcomps
push
push
lea
push
lea
push
push
push
call
add
fwait
int
push
in
lcall
add
add
pop
lods
fnstsw
mov
mov
mov
in
aam
add
add
mov
add
lcall
add
jmp
add
add
add
mov
add
mov
cmpsl
add
add
gs
pop
rep
pop
push
push
lea
push
push
lea
push
push
call
push
add
pop
mov
add
mov
add
mov
add
add
addr16
add
xchg
lcall
pop
hlt
push
push
push
push
push
push
call
add
xchg
add
add
pop
movsl
add
add
add
add
lcall
add
push
cmpsb
mov
outsl
add
sub
pop
add
push
push
push
call
add
jbe
add
add
mov
sub
mov
add
add
test
add
ret
add
add
push
lea
push
push
push
push
push
push
push
call
jp
pop
loop
stc
test
push
imul
add
movsl
add
add
pushf
testb
add
mov
add
add
add
xchg
mov
mov
add
lcall
ret
push
inc
add
push
sub
pop
mov
xor
push
sub
pop
mov
push
push
push
push
lea
push
lea
push
call
add
jl
ljmp
mov
add
add
add
in
jmp
shll
pusha
jns
lock
add
data16
add
roll
sti
mov
add
mov
mov
add
add
in
in
pop
xor
push
lea
push
push
call
cmpsb
add
add
scas
jbe
add
in
test
add
pusha
add
stos
mov
add
add
outsl
rcl
cmpsl
mov
add
jo
mov
add
push
lea
pop
mov
xor
push
lea
add
shl
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
roll
fimull
push
pop
push
addl
add
add
add
add
add
jecxz
cltd
add
cmc
push
arpl
std
add
fiaddl
js
sbbl
jge
xchg
nop
jecxz
add
add
xchg
add
push
xchg
test
clc
sub
pop
add
mov
push
push
lea
ror
dec
lea
push
and
add
sub
xor
sub
sub
pop
sub
not
shr
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
cmc
add
add
xchg
clc
stos
fldcw
add
stos
pusha
lods
add
xchg
cmc
push
xchg
fwait
in
mov
add
cmpsb
add
add
push
add
shrb
lods
test
in
loopne
lcall
jne
push
inc
sub
add
pop
call
push
push
push
shr
inc
add
push
push
pop
add
add
add
sub
inc
not
add
pop
lea
pop
push
sub
shr
pop
push
push
pop
push
call
push
push
call
xchg
jbe
add
mov
faddl
mov
add
roll
mov
roll
addb
int3
mov
roll
lcall
clc
push
push
push
push
call
cli
add
add
add
push
stos
testl
add
add
add
mov
add
xchg
lret
sub
pop
push
push
push
push
call
jne
push
add
push
repnz
jo
jecxz
push
int
test
mov
out
sahf
ja
popf
leave
in
add
add
mov
add
scas
push
test
push
lcall
mov
push
add
pop
add
add
push
push
push
push
push
push
push
lea
push
push
call
jbe
add
add
add
jne
pop
pop
mov
push
add
stc
in
addl
mov
add
imul
repnz
cwtl
ja
add
mov
add
lock
movsl
pusha
sahf
add
and
add
add
add
add
mov
jo
add
add
jmp
test
lcall
ret
push
inc
add
push
shr
rol
pop
mov
push
push
push
push
push
push
lea
push
push
call
adcb
add
sarb
lea
add
mov
add
jns
xchg
add
add
adc
flds
lods
mov
clc
add
cld
xlat
fadds
add
mov
add
add
add
add
mov
add
std
pop
mov
add
roll
nop
sub
pop
xor
push
push
push
push
push
call
jle
add
add
movsl
outsl
pop
bound
jmp
bound
jnp
fisubl
jmp
fiadds
add
iret
imul
add
lahf
pop
mov
xchg
in
enter
mov
add
in
add
mov
arpl
roll
cmpsl
add
in
mov
in
lcall
les
lea
push
push
push
push
push
push
push
push
push
call
je
add
fimuls
jp
add
add
cld
add
in
fisubrs
add
jmp
jo
loope
stos
mov
add
pop
add
mov
mov
mov
pop
xchg
mov
sub
pop
add
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
add
pop
xchg
decb
add
add
xchg
add
mov
add
add
push
je
push
add
add
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
push
mov
add
add
imul
add
add
add
mov
add
movb
rcll
add
sti
add
cmpsb
add
lods
add
pop
add
cmc
stos
cmpsl
add
int
fistpll
stos
add
add
in
fcomps
add
push
lea
push
push
call
add
push
mov
add
add
add
outsl
add
jbe
add
add
add
test
add
fcmovnb
add
pushf
out
add
add
movsb
sahf
add
add
in
hlt
pop
add
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
rcrl
mov
add
add
cmpsl
add
in
popf
xchg
les
fwait
mov
mov
add
mov
sahf
lods
int
cwtl
insb
cld
pop
lahf
sti
add
loope
add
rcr
int
cli
add
add
negb
in
fcomps
lock
push
not
pop
mov
xor
push
push
lea
push
call
jne
test
fdivrs
push
insb
xor
shll
cmpsl
mov
imul
jge
leave
stos
xchg
mov
lock
fbstp
add
add
add
add
mov
sub
pop
rep
mov
xor
push
lea
push
call
outsl
shr
pushf
pop
filds
mov
add
mov
xlat
add
add
fsubs
xchg
mov
data16
xchg
test
ja
mov
mov
insb
addb
add
ljmp
clc
lcall
leave
je
mov
xor
push
push
call
xchg
out
add
add
push
push
add
addl
add
add
push
jp
add
add
sub
pop
mov
xor
push
lea
push
lea
push
call
add
bound
pushf
add
popf
lods
int
vpermq
add
icebp
add
lret
arpl
hlt
pop
add
push
not
lea
pop
add
push
push
lea
push
call
cmpsb
add
add
test
arpl
add
add
add
int3
insb
fcomps
loopne
clc
lds
flds
lahf
pushf
add
test
add
mov
incb
jecxz
fdivl
jns
add
add
in
clc
pop
mov
xor
push
push
push
lea
push
push
push
push
call
js
aad
mov
loopne
mov
hlt
jns
int
add
aam
mov
out
pop
push
add
mov
rcrl
add
push
addr16
arpl
stos
xchg
in
mov
add
add
sub
pop
add
push
shl
sub
pop
pop
rep
push
push
push
call
add
test
add
sar
add
add
jae
mov
add
movsl
data16
xchg
jns
fs
mov
add
add
add
add
lods
ja
add
add
add
add
mov
out
loopne
mov
in
hlt
pop
mov
xor
push
lea
push
push
push
push
push
call
jne
add
mov
jnp
enter
fldl
rolb
add
mov
add
lea
add
xchg
pop
add
add
arpl
xchg
add
jns
add
add
mov
add
mov
lds
add
add
jl
add
pop
pop
add
call
test
add
add
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
add
pop
in
add
add
repnz
mov
aam
lds
mov
cwtl
lock
add
sub
pop
add
push
rol
pop
add
push
push
lea
push
push
push
call
add
add
push
mov
loop
xchg
push
add
jns
add
jle
mov
in
fistpll
add
jmp
jp
push
test
xchg
jns
in
in
lcall
movsb
push
lea
push
push
push
push
call
add
jnp
sti
add
mov
lcall
pop
mov
add
nop
incb
imulb
les
mov
mov
call
mov
add
in
lcall
push
push
shr
push
and
add
xor
sub
dec
pop
add
rol
pop
push
shl
not
pop
pop
mov
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
mov
add
add
std
push
xchg
add
add
pop
xchg
cmpsb
imul
addr16
add
mov
mov
pushf
fiadds
add
fdivrp
sub
pop
mov
mov
push
push
lea
push
lea
push
push
push
call
add
add
addb
mov
add
popf
mov
xchg
jne
pop
add
add
in
mov
jmp
sti
loopne
add
adcb
out
add
mov
add
mov
addb
add
stos
arpl
xchg
mov
outsl
jae
idivl
sub
pop
jmp
push
ror
sub
pop
push
mov
push
shr
pop
add
push
push
xor
pop
push
push
xor
not
add
pop
push
push
lea
push
push
call
test
cmpsb
out
add
lret
scas
popa
push
mov
aam
movl
add
ret
mov
ret
add
hlt
pop
push
push
ror
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
jmp
add
jno
add
shlb
nop
pusha
add
fidivrs
add
add
add
test
add
roll
xchg
jno
roll
add
add
add
fwait
mov
js
sti
add
push
pop
mov
jge
fadds
lret
jmp
rcr
cwtl
add
movsb
loop
icebp
sub
pop
pop
push
pop
pop
pop
push
ror
sub
pop
pop
leave
push
rol
xor
pop
ret
push
push
push
lea
push
push
push
push
call
out
mov
add
push
cli
mov
pop
add
add
add
add
test
add
xchg
push
data16
lret
jno
add
push
lret
icebp
add
jbe
fisubrl
mov
add
in
push
dec
pop
add
push
ror
ror
pop
push
push
lea
push
push
lea
push
push
push
push
call
repnz
mov
pop
test
add
test
mov
add
add
jbe
add
fdiv
arpl
scas
pop
jnp
ja
mov
in
in
lcall
push
push
lea
push
push
call
in
add
push
popa
jmp
add
stc
roll
add
jbe
fwait
mov
nop
popa
outsl
mov
pop
add
jbe
add
les
push
rol
pop
push
push
lea
push
call
idiv
gs
mov
jle
nop
push
lcall
add
fstps
outsl
popf
add
in
pushf
loope
hlt
add
mov
enter
add
in
shlb
lret
mov
lcall
inc
cld
add
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
lcall
add
movsb
add
add
ljmp
add
push
add
pop
mov
xchg
lcall
inc
clc
call
ret
test
je
push
push
push
push
push
call
push
testl
imul
add
pop
stos
add
addl
test
pop
cmpsl
aam
arpl
add
add
pop
lret
aad
shl
xchg
ret
cwtl
add
add
mov
mov
push
sub
pop
mov
pop
push
push
push
push
lea
push
push
lea
push
push
call
xchg
scas
in
add
add
add
in
add
push
andl
add
add
out
add
addb
imul
cmpsl
int3
jle
add
add
add
add
in
loopne
lcall
push
inc
shl
pop
pop
push
ror
lea
not
pop
pop
push
push
lea
push
push
push
push
lea
push
call
movsl
lahf
cli
add
add
fisubs
data16
add
add
fcmovu
in
mov
scas
enter
add
ljmp
fcmovbe
sub
pop
leave
push
sub
sub
add
shl
pop
ret
push
inc
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
lea
fucom
add
add
aam
add
add
add
add
add
add
jne
add
insb
leave
test
add
add
pop
xchg
add
icebp
add
sahf
pop
add
iret
mov
jl
push
add
add
mov
addr16
data16
mov
mov
in
loopne
mov
push
push
push
push
lea
push
push
push
push
call
xchg
add
rcr
add
mov
xchg
add
cltd
out
add
aad
gs
add
xchg
add
add
fnstenv
imul
add
subl
jns
add
movl
ficompl
in
loopne
add
push
push
inc
ror
pop
push
push
push
lea
push
push
call
mov
add
mov
cmpl
lods
ljmpw
rcrb
add
add
jb
add
mov
into
mov
fnstsw
jp
mov
add
add
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
aad
push
movsb
bnd
add
movsl
pop
add
mov
push
testb
xorl
call
add
mov
je
add
xchg
add
add
push
add
mov
add
loope
in
add
push
testl
push
lea
push
push
push
push
push
call
add
test
mov
xchg
push
cld
add
add
add
out
add
jge
push
popl
lahf
pushf
imul
lcall
inc
or
push
lea
add
lea
shr
pop
push
push
sub
pop
call
mov
push
rol
not
pop
pushl
push
rol
add
shr
sub
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
add
call
fstl
add
add
xchg
imul
repnz
jmp
rorb
add
jo
cli
jo
cmpsl
movsb
sub
pop
call
cmpl
jne
push
rol
rol
pop
pop
pop
push
sub
xor
shr
pop
pop
pop
push
push
lea
push
push
push
call
mov
out
addr16
mov
in
add
pop
add
mov
add
mov
add
lret
iret
jmp
in
pop
lea
cwtl
pop
mov
xchg
push
stos
add
jno
jge
add
testl
add
mov
add
add
push
lahf
mov
add
in
in
in
pop
leave
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
pop
stos
add
hlt
in
bound
lods
rclb
ret
add
add
add
add
std
lahf
leave
add
mov
add
mov
ja
add
xchg
test
push
in
stos
sti
cwtl
jecxz
mov
add
cltd
imul
in
fdivr
lcall
add
push
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
mov
add
enter
add
mov
mov
jb
push
add
add
in
add
add
test
mov
cltd
add
sub
pop
mov
push
inc
pop
add
push
lea
push
push
push
call
jb
mov
mov
add
add
add
out
fcompl
std
stos
mov
add
stos
rorb
add
add
jle
add
push
push
shl
not
inc
pop
push
push
add
xor
not
pop
push
push
push
lea
push
push
push
push
call
add
add
mov
add
test
add
mov
pop
lea
cltd
xorl
call
movl
push
push
add
pop
call
push
push
push
push
call
fiadds
add
mov
in
jmp
pop
clc
in
add
add
stos
add
stos
mul
add
repnz
xchg
clc
mov
out
loop
add
nop
mov
add
add
add
into
xlat
add
add
mov
add
jno
push
mov
sub
pop
call
push
ror
pop
subl
cmpl
jne
push
sub
lea
pop
pop
push
dec
not
sub
pop
pop
push
inc
pop
pop
push
lea
pop
pop
push
shr
add
pop
leave
push
ror
pop
ret
push
push
push
push
call
jns
stc
add
clc
xlat
add
mov
add
add
mov
out
add
les
add
imul
xchg
add
test
add
div
into
fists
mov
add
jne
popl
popa
add
enter
add
roll
cmpsl
add
add
lcall
in
push
push
lea
push
call
fadds
add
add
filds
add
add
cltd
add
push
arpl
mov
cmc
xchg
incb
mov
add
add
push
add
fiaddl
add
add
popf
add
mov
mov
add
lahf
add
mov
add
out
add
lcall
cld
push
push
push
push
lea
push
push
push
push
call
notb
lock
add
add
add
xchg
add
adcb
lods
add
out
mov
cld
aad
testb
xchg
leave
scas
add
orl
stc
jne
add
or
add
je
bound
add
lcall
cmpsb
loop
out
loope
add
add
lcall
push
shl
dec
inc
pop
push
push
push
sub
dec
pop
mov
lea
push
lea
lea
pop
sub
push
push
lea
push
push
call
fdivr
iret
stc
push
add
mov
mov
add
cmc
add
mov
add
add
xchg
jp
add
add
ficomps
insb
imul
pop
add
mov
add
rolb
add
lret
clc
frstor
mov
pop
shr
add
push
push
push
push
lea
push
push
lea
push
push
call
add
in
out
test
add
mov
popf
mov
add
push
in
add
add
shlb
add
int
mov
mov
loopne
mov
push
push
push
push
push
push
push
push
call
add
push
loope
add
jns
add
xchg
add
add
add
ja
je
mov
jl
jo
mov
scas
pop
add
add
lret
gs
sahf
repnz
add
imul
add
add
jae
push
rolb
insb
int3
into
call
sti
add
andb
inc
xor
push
lea
push
push
push
lea
push
push
push
call
out
sti
jae
lahf
mov
outsl
test
add
add
mov
add
push
add
mov
pushf
add
data16
push
int3
add
push
add
add
insb
xchg
add
inc
or
shlb
ror
not
pop
mov
mov
push
shl
xor
rol
pop
cmp
jne
cmp
jne
push
shl
add
ror
pop
mov
movl
push
ror
pop
jmp
push
pop
mov
mov
push
add
shl
lea
sub
pop
sub
jne
push
inc
shl
sub
shl
pop
mov
movl
push
push
lea
push
call
test
outsl
mov
add
jl
push
xchg
add
add
lea
lds
stc
add
lcall
hlt
test
arpl
cmpsl
jnp
loope
xchg
add
cltd
mov
add
idivb
pop
add
scas
xchg
mov
add
add
in
hlt
lcall
clc
sldt
push
lea
push
call
pop
rcll
jno
mov
jecxz
add
int3
hlt
cmpsl
add
mov
clc
movsb
add
cwtl
loop
push
shl
add
add
mov
xchg
addl
sti
popl
lcall
inc
cld
push
pop
mov
push
shl
add
shr
ror
pop
cmp
jne
push
lea
push
push
lea
push
call
data16
mov
movsl
fsub
sar
push
roll
add
ja
lret
sahf
add
add
add
sub
pop
mov
push
sub
xor
xor
shr
pop
movl
push
inc
lea
pop
jmp
mov
push
push
push
push
lea
push
call
mov
jbe
add
cmpb
add
add
out
std
add
bound
add
fildl
add
add
movb
pusha
fldl
lcall
cmpl
jne
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
xlat
mov
add
mov
add
roll
add
add
scas
iret
test
xchg
lret
bound
stc
ljmp
mov
add
add
add
mov
add
pop
loop
mul
mov
jp
pop
mov
in
lea
lcall
sub
pop
mov
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
lock
mov
lock
js
addb
fcmovne
arpl
add
add
xchg
pop
cltd
add
jge
add
fstpl
sub
pop
movl
push
push
push
push
push
call
add
mov
iret
loopne
add
mov
andl
add
add
add
pop
imul
lds
std
sub
pop
jmp
push
ror
dec
ror
not
pop
pushl
push
lea
add
sub
lea
pop
pop
push
dec
pop
mov
mov
push
not
pop
mov
push
push
not
dec
shr
push
or
not
add
xor
xor
sub
add
pop
sub
ror
ror
pop
push
push
lea
push
lea
push
push
call
pop
popa
fadd
jmp
in
add
in
sti
sti
ret
mov
jmp
hlt
add
roll
add
repnz
test
mov
add
lcall
push
sub
shr
shr
pop
call
push
inc
add
lea
pop
cmpl
je
push
push
lea
not
push
sub
add
lea
not
xor
ror
sub
not
add
sub
pop
shl
pop
push
push
push
push
call
add
sarl
neg
xchg
add
imul
add
ja
mov
fnstsw
pop
add
fs
add
add
add
enter
add
add
add
jge
add
in
lock
lcall
push
lea
push
call
pop
lea
add
add
pushf
mov
add
add
jl
jae
jge
add
imul
add
jle
add
add
add
lcall
add
sahf
negb
rolb
add
add
in
pop
test
cltd
movsl
add
add
pop
sub
pop
call
cmpl
je
push
push
push
sub
add
sub
ror
add
ror
lea
pop
lea
sub
not
pop
push
xor
dec
pop
push
call
push
lea
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
mov
add
add
add
add
pusha
stc
add
add
fildll
xchg
add
add
hlt
add
aam
popa
call
shl
jl
clc
je
jmp
mov
add
les
mov
sub
pop
cmpl
je
push
push
not
push
push
pop
add
shr
sub
sub
lea
pop
add
inc
pop
push
push
push
push
call
scas
jmp
add
push
add
cmpsl
add
mov
mov
add
add
add
hlt
movsl
mov
jmp
add
mov
in
lock
lcall
push
pop
call
push
ror
pop
cmpl
je
push
push
dec
sub
lea
push
sub
add
shl
sub
sub
shl
lea
pop
not
pop
push
shr
pop
push
push
rol
pop
call
push
xor
lea
pop
cmpl
je
push
push
add
shr
push
or
not
add
rol
ror
sub
not
xor
not
pop
ror
dec
add
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
push
std
cld
imul
lret
xchg
add
add
int
xchg
add
gs
add
nop
add
xchg
add
pop
cmpsl
add
cltd
movsl
fsubp
hlt
mov
movb
pop
push
push
push
call
imul
jo
lret
add
les
sarl
enter
fmul
mov
rolb
pushf
iret
int3
jns
add
sub
pop
call
cmpl
je
push
push
inc
rol
add
push
or
not
add
lea
xor
ror
sub
sub
pop
ror
add
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
add
add
mov
leave
add
add
les
mov
jb
add
fiadds
out
mov
mov
jl
xchg
add
jmp
mov
add
movsl
nop
push
pop
jmp
hlt
pushf
add
std
add
lcall
push
push
push
push
push
push
push
call
rcr
add
add
lret
jmp
add
lahf
test
add
push
add
add
sahf
add
cmpsb
add
out
pop
add
in
call
push
ror
add
sub
lea
pop
cmpl
je
push
push
sub
inc
rol
push
and
add
add
shr
sub
sub
pop
rol
shl
pop
push
lea
push
lea
push
push
call
add
mov
add
fldt
add
cwtl
movsl
add
in
into
pop
mov
ficoml
leave
add
jge
mov
lret
push
pushf
xchg
add
xchg
pop
test
push
add
movsb
push
mov
lcall
push
add
dec
shr
rol
pop
call
push
lea
push
lea
push
push
push
push
push
call
add
add
enter
addb
jle
cld
xchg
rcr
add
lret
push
mov
jae
outsl
jp
ret
pop
add
pop
scas
mov
mov
xchg
stos
arpl
test
add
jbe
add
fnsave
add
add
in
in
lcall
js
int3
fldz
ret
push
add
and
shl
push
sub
add
shr
dec
xor
sub
ror
lea
pop
add
ror
dec
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
fs
add
pop
leave
cltd
fildl
bound
imul
add
pop
mov
in
mov
cwtl
sub
pop
push
push
push
call
add
xchg
hlt
add
push
mov
xchg
push
lock
rcll
add
add
mov
lcall
lock
jge
aam
add
cmpsl
add
mov
lock
fs
mov
push
fwait
mov
add
add
sub
pop
call
cmpl
je
push
push
add
add
inc
push
or
not
add
add
sub
shl
inc
lea
add
pop
add
shl
sub
lea
pop
push
push
push
push
call
in
popl
add
add
bound
add
xchg
in
mov
fwait
ja
mov
add
loope
shll
add
mov
in
rcrl
test
add
add
lods
jne
add
pop
sub
pop
push
push
push
call
add
add
add
out
clc
out
arpl
jno
ljmp
mov
enter
loopne
in
add
test
in
clc
pop
call
push
sub
ror
pop
cmpl
je
push
push
add
add
rol
push
xor
add
rol
sub
sub
rol
pop
pop
push
push
push
call
xlat
jmp
fwait
add
cmpsb
pop
jp
fcom
je
add
imul
xchg
int
jb
pop
pushf
jmp
push
add
rorl
rol
lret
add
jne
nop
test
sub
jo
add
add
jns
jge
mov
pop
xlat
jb
test
add
pusha
add
cmpsl
popa
shll
push
call
push
push
push
push
push
push
push
call
fdivl
ljmp
add
add
add
ljmp
mov
add
ja
les
pop
mov
pop
loope
addb
add
xchg
mov
or
lock
filds
add
add
add
add
add
js
sub
pop
cmpl
je
push
push
rol
sub
push
xor
add
inc
sub
inc
lea
pop
not
sub
pop
push
lea
push
push
push
push
push
lea
push
push
call
add
stos
icebp
scas
add
repnz
clc
je
xchg
cwtl
cltd
cmpsb
lret
add
add
pop
add
stc
lret
cmpsl
testl
scas
xchg
rorb
add
add
add
mov
push
ljmp
neg
nop
ja
sub
pop
push
push
sub
not
inc
pop
call
push
lea
push
lea
push
push
lea
push
push
call
add
repnz
mov
pop
add
add
icebp
push
add
add
stc
lcall
enter
add
clc
cli
xchg
mov
mov
arpl
add
add
movsl
mov
lcall
test
sub
pop
cmpl
je
push
push
sub
shr
push
sub
add
rol
sub
shl
rol
shl
pop
shr
lea
dec
shr
pop
push
inc
sub
dec
pop
push
push
shl
add
pop
call
push
push
lea
push
push
call
lds
add
lds
mov
rolb
lods
add
pop
lods
pop
add
pop
add
add
enter
in
add
add
xlat
add
pop
movsb
add
add
ret
pushf
mov
push
iret
add
push
add
mov
add
int
popf
add
add
add
sub
pop
cmpl
jne
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
std
filds
rorl
jle
cmpsl
movsb
cwtl
push
add
addl
in
mov
add
mov
jmp
lea
shl
testl
ljmp
rolb
lcall
inc
adc
sbbb
mov
push
push
push
lea
push
push
push
call
xchg
fs
add
push
mov
add
push
in
add
xchg
add
add
into
add
rcrb
add
add
jbe
test
ret
fldenv
add
into
add
mov
add
cmpsl
popf
xchg
in
xchg
pop
add
pop
jge
add
add
lret
mov
movl
push
lea
push
lea
push
push
push
push
lea
push
call
add
cmpsb
add
flds
add
stc
movsb
push
add
add
pushf
clc
add
add
ficoml
add
add
jne
loop
movb
mov
roll
add
aam
in
in
lcall
mov
push
push
push
push
call
mov
add
in
jns
mov
add
lahf
add
xchg
xchg
add
mov
ja
mov
filds
ljmp
cmpsb
lods
xchg
movsl
jle
bound
mov
jecxz
mov
add
sar
lret
add
lret
mov
mov
push
sub
pop
xor
push
push
push
push
push
push
lea
push
call
mov
mov
add
mov
add
pop
push
ret
jae
mov
aad
into
add
jecxz
pop
data16
xchg
xchg
jae
add
in
pop
push
ror
xor
shl
pop
pop
push
shl
dec
pop
pop
push
lea
push
push
push
push
call
push
cmc
jno
nop
push
add
leave
mov
jecxz
add
clc
test
add
testl
pusha
pusha
add
add
push
je
mov
into
add
add
xchg
add
test
cli
add
add
sub
pop
pop
push
xor
pop
leave
push
sub
pop
ret
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
mov
incb
add
outsl
lods
mov
add
add
fadds
add
add
xchg
add
call
sarl
add
add
add
add
int
mov
in
lds
jl
jo
add
pop
push
push
sub
pop
mov
push
sub
pop
add
cmpl
jne
push
push
add
xor
push
or
not
add
ror
shr
ror
sub
inc
shr
pop
not
ror
sub
pop
push
push
push
push
call
data16
loopne
outsl
in
icebp
add
mov
je
stos
lock
add
add
add
sub
nop
fldcw
mov
xchg
add
add
in
lock
pushl
call
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
test
xchg
add
add
add
add
add
add
add
movl
add
aam
add
call
in
fcompl
call
push
lea
dec
pop
jmp
push
sub
pop
cmpl
je
cmpl
jne
push
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
call
jnp
fldl
test
roll
jmp
add
mov
in
fiadds
xchg
jmp
add
add
push
fcomps
add
add
fs
sub
pop
call
push
push
not
add
inc
push
and
add
add
sub
sub
add
not
dec
pop
sub
inc
pop
push
add
pop
pushl
push
lea
rol
sub
add
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
cmpsb
add
mov
fcoms
add
add
pop
add
add
lds
sarl
add
ljmp
add
test
mov
scas
add
jge
pop
jo
add
add
bound
int
push
imul
mov
ja
xlat
sub
pop
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
xlat
cmc
add
addb
filds
add
popa
add
scas
add
add
add
add
jnp
in
lock
add
testb
add
add
mov
add
jns
jno
sub
pop
push
push
push
push
call
ret
add
add
mov
jno
fmulp
ljmp
jmp
rolb
add
lret
mov
mov
sub
pop
push
push
push
dec
add
sub
pop
push
call
push
not
pop
ret
push
lea
push
push
lea
push
push
push
push
push
push
push
call
aad
push
add
js
pop
ljmp
add
loop
add
add
icebp
add
add
fstps
add
fcomps
jg
add
push
push
push
push
push
push
push
call
add
roll
je
add
push
cmpsl
push
mov
add
add
loop
mov
add
mov
mov
add
js
pop
ja
jb
mov
add
jge
add
test
add
in
int
push
ror
push
or
not
add
add
inc
ror
sub
sub
pop
sub
lea
add
pop
push
shr
not
pop
pushl
push
push
push
push
push
lea
push
push
call
add
into
add
add
xchg
add
outsl
iret
js
add
add
fildll
cmpsb
test
mov
add
mov
mov
add
add
sub
pop
call
push
push
push
lea
push
push
push
call
insb
add
add
add
add
bnd
add
add
aad
arpl
out
movsl
add
add
add
add
add
mov
add
lret
add
jne
imulb
mov
lcall
rclb
inc
not
pop
jmp
push
push
call
add
cwtl
add
xchg
jmp
add
add
rcll
movsl
push
nop
add
jno
add
lret
add
add
lods
add
jo
ret
add
enter
add
sahf
jmp
movsb
sub
pop
cmpl
jne
mov
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
mov
add
je
add
mov
lcall
add
add
xlat
mov
popa
xchg
add
movsb
fnstcw
lahf
add
fs
fildl
ja
jmp
cmp
fldenv
shrl
jbe
repnz
out
pusha
sub
pop
mov
push
push
push
push
push
push
call
shl
add
orb
add
add
rol
pop
add
popf
add
popl
gs
mov
add
in
les
movsl
add
iret
mov
add
mov
push
sti
add
add
std
enter
add
aad
add
pop
add
pushf
sub
pop
push
push
add
shr
ror
xor
pop
jmp
push
push
rol
push
or
inc
add
ror
sub
xor
rol
pop
not
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
loope
cmc
fbld
bound
add
into
incb
stos
add
add
mov
add
aad
push
fadds
divb
push
test
in
imul
add
lret
add
add
add
jecxz
add
mov
push
lods
outsl
add
lea
ja
fucomip
jecxz
add
jne
push
add
pop
call
push
add
pop
call
push
push
add
sub
shl
lea
push
and
add
lea
ror
sub
dec
sub
sub
shl
dec
pop
add
sub
add
dec
pop
push
not
shl
inc
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
add
pop
add
xor
mov
out
jge
push
add
cwtl
add
js
add
loope
lcall
in
xchg
cli
add
mov
testl
fdivr
lcall
or
push
push
inc
add
lea
push
and
add
shl
rol
ror
sub
rol
pop
add
pop
push
sub
dec
shr
pop
pushl
call
push
push
push
push
push
push
call
testl
leave
test
add
xchg
ja
add
lods
jp
jmp
lods
add
stc
mov
mov
add
cld
mov
add
add
pushf
cli
into
mov
mov
add
push
add
lcall
shrb
mov
mov
sub
sub
push
xor
add
shl
ror
sub
sub
sub
add
add
pop
rol
pop
push
lea
push
lea
push
call
pop
add
add
add
add
add
add
jp
scas
iret
mov
pop
add
add
mov
add
mov
out
pop
cld
add
in
hlt
pop
pushl
push
push
call
add
add
add
add
fstpl
imul
add
push
push
mov
popf
jle
std
add
js
add
mov
add
add
shll
add
add
lret
mov
cmc
out
aad
jle
popf
popf
stc
xchg
add
add
add
sub
pop
call
lea
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
push
add
xchg
mov
out
testl
add
je
push
xchg
fdivr
add
shll
add
addl
add
add
add
add
popf
cwtl
mov
lock
add
add
add
shl
xchg
cmpsb
sub
pop
push
push
shl
inc
pop
call
push
push
add
not
push
push
pop
add
add
sub
sub
sub
ror
ror
pop
not
add
not
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
lcall
lret
mov
xchg
aam
pop
lds
add
add
add
add
lock
add
mov
mov
ljmp
xchg
add
jmp
mov
testl
sub
pop
pushl
push
ror
pop
call
push
push
push
push
call
pushf
jb
stos
pop
add
add
add
mov
jne
sahf
add
add
jp
mov
movl
insb
add
mov
add
add
add
push
icebp
bound
movl
sub
sarb
in
lock
lcall
shrb
push
cltd
out
ror
sub
dec
dec
push
or
inc
add
add
inc
sub
inc
pop
add
add
rol
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
push
mov
fptan
push
iret
add
test
push
mov
add
jecxz
jp
add
mov
add
cmpsb
xchg
add
lea
mov
testb
fldl
pop
in
mov
add
add
add
pop
out
xchg
add
add
lcall
jne
push
lea
push
call
add
add
add
cmc
cltd
fldl
add
pop
in
loopne
int3
pop
in
add
lcall
test
add
pop
cmc
mov
push
scas
add
add
xchg
vcmpss
add
aad
add
push
not
add
pop
call
push
push
dec
push
xor
add
xor
rol
sub
add
pop
pop
push
inc
sub
pop
pushl
call
push
pop
call
push
push
push
push
push
lea
push
lea
push
call
add
mov
add
lret
mov
add
cld
add
add
push
add
mov
add
add
add
int
add
xchg
push
fiaddl
pop
add
add
lea
push
push
dec
inc
push
or
inc
add
lea
dec
inc
sub
add
lea
pop
add
dec
not
sub
pop
push
add
sub
shr
ror
pop
pushl
push
push
push
push
call
add
pusha
mov
mov
add
jo
add
add
add
jo
sti
add
flds
xchg
pop
push
data16
add
mov
push
add
cltd
add
jnp
in
lock
lcall
mov
add
pop
push
push
lea
push
push
call
mov
imul
in
clc
sarl
call
test
push
in
scas
add
add
fildl
add
mov
hlt
lcall
shrb
or
push
push
dec
dec
push
xor
add
ror
sub
rol
shl
not
add
pop
shl
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
xchg
les
jp
stos
add
mov
add
into
add
add
lret
aam
stos
js
xchg
pop
data16
jno
mov
add
add
hlt
mov
add
jne
mov
add
push
add
aam
les
lcall
jne
push
push
push
push
push
call
add
addb
in
add
jl
fidivrl
add
add
fildl
add
jns
add
popf
add
add
push
out
jnp
pop
rolb
les
into
mov
xor
add
xchg
jbe
stc
push
add
add
imul
add
add
add
cs
add
call
push
push
push
push
push
push
push
call
pop
addl
fcmovnb
out
add
mov
add
xchg
notb
add
outsl
jl
add
add
mov
push
push
shr
push
xor
add
xor
inc
sub
xor
rol
pop
shl
pop
push
shr
pop
pushl
call
push
rol
pop
push
push
add
add
not
pop
pushl
push
ror
add
rol
pop
call
push
push
sub
shl
dec
lea
push
and
add
sub
sub
rol
ror
add
pop
shr
ror
shl
pop
push
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
lcall
pusha
ror
movsl
push
add
mov
add
sti
add
mov
in
fdivr
lcall
add
addr16
push
inc
push
sub
add
dec
sub
sub
inc
sub
pop
sub
pop
push
push
shl
push
push
pop
add
rol
sub
add
sub
sub
pop
lea
add
pop
push
push
push
lea
push
push
push
call
jge
add
mov
add
fbld
mov
mov
add
int3
push
leave
add
orb
cmc
lcall
js
int3
movsl
add
enter
sti
movsl
add
lret
call
call
push
push
inc
push
sub
add
lea
sub
xor
xor
ror
sub
pop
lea
add
dec
pop
push
push
push
push
push
push
push
push
call
jle
jns
add
add
add
leave
add
add
outsl
mov
mov
add
add
iret
mov
stc
add
push
xchg
mov
mov
add
imul
movsb
add
imul
add
mov
xchg
add
sub
pop
pushl
call
push
push
lea
push
push
push
push
call
add
lea
add
add
test
add
data16
add
xchg
mov
push
add
xchg
add
add
pop
add
add
lcall
inc
hlt
push
add
add
pop
lea
push
shr
pop
lea
push
sub
add
add
pop
push
push
inc
lea
pop
push
push
push
push
push
push
push
push
push
call
xchg
mov
add
repnz
fildll
leave
jbe
pushf
sti
jge
add
mov
jp
jns
scas
mov
push
nop
mov
movsl
ret
mov
rolb
add
add
jae
push
push
push
push
lea
push
push
push
push
push
call
std
xchg
mov
add
imul
add
std
add
add
fadds
jge
add
jne
add
iret
fcmovu
add
test
test
pop
push
lds
stc
bound
add
xchg
les
hlt
std
add
add
pop
rolb
lcall
add
ljmp
lret
jle
fistpl
add
push
push
ss
push
push
push
push
push
call
add
mov
mov
stc
push
insb
cld
pop
testb
movb
iret
stos
nop
mov
roll
sti
addr16
add
add
rclb
icebp
jmp
add
add
push
enter
sti
dec
sub
pop
push
push
inc
pop
pushl
push
push
inc
not
pop
call
push
push
push
or
not
add
add
not
sub
lea
add
pop
lea
pop
push
rol
pop
pushl
push
inc
sub
sub
pop
call
push
pop
call
mov
push
lea
pop
pop
push
lea
push
push
push
push
push
push
call
add
mov
mov
add
loop
add
lcall
add
mov
test
add
mov
rcr
filds
in
fwait
stos
add
add
repnz
lods
push
mov
add
add
sti
sarl
in
in
dec
jne
push
inc
shl
not
dec
pop
jmp
push
add
shr
lea
pop
call
push
push
ror
dec
push
sub
add
shr
sub
add
sub
shr
pop
sub
inc
ror
sub
pop
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
addb
add
add
add
out
shrb
add
add
add
mov
add
ficompl
in
idivl
add
add
add
jno
add
sub
pop
pushl
call
push
push
push
push
push
push
call
mov
add
or
jmp
flds
jno
push
pop
mov
rolb
add
pop
clc
add
jl
mov
lods
shr
add
mov
add
fistpll
sub
pop
push
push
push
push
push
push
push
push
push
call
jnp
pop
lods
stos
cmpsb
push
data16
movsl
add
lcall
data16
pop
in
mov
add
sarb
in
add
sub
pop
call
push
lea
push
push
push
push
lea
push
call
add
rclb
add
lret
add
add
in
movsl
jge
add
add
add
add
lcall
add
add
push
push
push
lea
push
lea
push
push
push
call
addb
sbbl
lcall
push
mov
arpl
mov
stos
add
push
jnp
add
xchg
hlt
js
push
lahf
mov
cmpsl
mov
fisubl
sub
pop
lea
push
push
sub
push
or
not
add
ror
shl
sub
dec
ror
shr
ror
pop
rol
lea
pop
push
lea
push
push
lea
push
push
call
xchg
push
hlt
add
add
add
insb
xchg
add
fs
add
mov
push
xchg
mov
add
add
mov
add
mov
in
imul
out
add
add
sub
pop
pushl
push
push
push
call
call
movb
xchg
enter
scas
add
rol
jnp
add
popa
insb
add
mov
pop
jl
addl
mov
push
jno
aad
cmpsb
pop
add
scas
add
ret
add
jmp
jns
pop
ret
hlt
lcall
icebp
adc
push
push
push
push
push
push
push
push
push
call
push
fcomip
add
out
aad
shrb
add
call
loope
scas
mov
addb
add
add
add
loopne
mov
add
fidivrs
add
shrb
sub
push
push
sub
push
sub
add
sub
sub
pop
sub
shl
add
rol
pop
push
push
push
push
call
imul
jnp
push
add
int3
push
mov
add
add
adcb
mov
pop
pop
ret
filds
mov
in
pop
add
mov
ljmp
in
std
pop
add
pushf
add
mov
rolb
or
dec
shl
push
lea
push
push
call
add
add
fdivs
hlt
add
add
je
pusha
idivb
or
mov
add
je
add
push
shlb
push
addl
shr
add
mov
add
roll
in
add
pop
sub
pop
call
call
push
inc
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
push
add
hlt
int
add
add
add
add
mov
pushf
lock
add
jns
stc
ret
add
add
xlat
lods
divl
lret
pop
add
movsl
aad
add
add
loope
push
mov
mov
add
add
add
cmpsb
add
pop
xlat
add
add
sub
pop
lea
push
push
sub
inc
push
sub
add
lea
shl
sub
rol
add
pop
sub
rol
rol
xor
pop
push
xor
dec
pop
pushl
push
lea
sub
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
add
imul
add
add
lcall
lret
add
add
fiadds
fidivs
push
out
loopne
filds
xchg
cmpsl
roll
add
push
faddl
in
test
js
add
aad
lods
lret
add
loopne
lea
push
shl
not
pop
push
push
push
add
inc
add
pop
push
pushl
push
push
push
xor
add
sub
xor
lea
add
sub
sub
lea
lea
pop
not
pop
push
sub
not
inc
pop
push
call
push
push
push
or
inc
add
rol
sub
sub
inc
pop
lea
not
inc
pop
push
push
push
push
push
push
push
call
add
leave
mov
lcall
push
cli
ret
add
outsl
xchg
test
add
add
xlat
lahf
out
in
mov
add
jge
loope
pop
add
add
xchg
add
in
out
add
add
mov
sahf
push
lcall
jne
push
push
push
push
push
call
add
scas
add
fildll
js
lcall
les
int
jns
add
shlb
movsb
jp
jl
roll
add
pusha
repnz
add
repnz
mov
cwtl
iret
mul
in
mov
mov
int3
add
push
add
add
add
add
sub
pop
call
push
push
lea
push
lea
push
push
call
add
add
insb
addl
movsl
add
add
fbld
mov
add
push
test
mov
leave
sub
pop
push
push
shl
sub
shl
sub
pop
call
push
push
ror
sub
xor
sub
push
or
not
add
not
sub
sub
sub
rol
pop
pop
push
push
push
call
push
add
into
mov
les
call
test
ficomps
test
mov
add
add
mov
call
push
mov
nop
push
add
add
add
add
sub
pop
pushl
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
loope
rolb
add
mov
add
mov
add
jp
std
je
mov
scas
fxch
fsub
stc
fadds
sahf
adc
add
rclb
shl
shl
rol
ret
jmp
pushl
push
add
inc
pop
mov
jmp
push
push
not
push
or
inc
add
inc
add
sub
ror
shl
pop
add
pop
push
rol
pop
pushl
push
add
inc
pop
call
push
dec
pop
push
push
lea
push
push
push
push
lea
push
call
stc
popf
xchg
scas
pop
add
filds
add
jp
pop
jno
add
scas
imul
add
les
add
add
add
mov
pop
add
call
call
push
push
lea
not
not
push
or
inc
add
not
sub
add
dec
pop
ror
pop
push
push
push
push
call
add
sti
add
push
loopne
fcomi
add
movb
jmp
add
add
add
mov
sar
rcll
add
lods
add
jo
loope
push
xchg
test
add
xchg
jno
rolb
xchg
add
add
add
shll
leave
call
in
lock
lcall
jne
push
lea
push
lea
push
push
push
push
push
call
add
xchg
pop
pusha
pop
add
rorl
mov
lret
test
loop
add
add
push
rolb
add
pop
sahf
add
mov
jo
out
mov
mov
add
add
lcall
test
add
cmpsb
add
lcall
lods
push
add
push
push
not
pop
call
push
inc
inc
shr
pop
leave
push
push
push
push
call
add
add
out
add
jbe
leave
add
arpl
add
xchg
add
mov
add
push
jne
stos
leave
add
sub
pop
add
pop
push
sub
sub
pop
pop
pop
push
lea
ror
inc
pop
pop
push
rol
pop
leave
add
push
push
lea
push
push
push
push
push
call
mov
hlt
test
add
add
add
xchg
in
add
sbbl
fldl
aad
pop
add
addl
cltd
int
jae
add
add
jns
popf
movsl
add
cld
add
xchg
lods
leave
jge
sub
pop
ret
leave
push
pop
ret
push
dec
dec
pop
push
mov
push
push
push
call
xchg
add
mov
roll
add
xchg
imul
rcl
add
mov
aad
add
jne
pop
mov
repnz
add
fs
push
pop
add
mov
mov
fmull
add
mov
addr16
add
add
hlt
lcall
jge
add
test
add
mov
push
push
lea
push
push
push
push
call
lock
xchg
mov
add
add
xchg
lock
xchg
pop
add
push
add
mov
pushf
add
fiadds
add
add
add
flds
add
fldenv
aam
sub
pop
jmp
push
not
shr
rol
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
addr16
add
add
ljmp
add
add
mov
push
add
je
jne
fwait
add
mov
into
testb
mov
cmc
imul
mov
mov
insb
mov
mov
add
push
add
mov
mov
lcall
and
push
push
push
push
push
push
push
call
lcall
jno
add
jmp
jns
add
cli
popf
xchg
fadd
lret
out
ljmp
nop
add
arpl
fiadds
jmp
add
scas
lods
mov
add
movsl
push
gs
in
add
jns
add
add
add
pop
mov
into
add
lcall
leave
push
lea
push
call
add
xchg
lds
lret
push
test
add
add
mov
jnp
mov
cmpsb
add
add
call
add
shr
add
mov
sub
pop
xor
push
add
xor
shr
xor
pop
add
push
sub
not
ror
pop
xor
push
dec
not
lea
shl
pop
dec
push
add
pop
sub
push
pop
jmp
push
sub
rol
xor
inc
pop
sub
push
add
pop
pushl
push
push
lea
push
call
add
enter
jae
add
add
scas
insb
xchg
add
add
add
imul
add
iret
add
sub
pop
pop
push
sub
lea
pop
sub
push
add
pop
cmp
jne
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
cltd
jns
pop
cld
mov
lea
add
add
add
popa
add
scas
test
lods
sarl
add
out
je
fdivrl
add
xchg
push
imul
scas
mov
in
fdivr
lcall
enter
lea
push
call
add
add
add
mov
cld
bnd
xchg
add
add
add
arpl
add
push
aam
popf
add
popf
add
add
add
jns
xchg
mov
movsl
out
sarb
mov
mov
leave
add
jge
in
lock
lea
push
ror
sub
sub
pop
sub
push
add
dec
shr
pop
mov
push
push
push
push
call
imul
imul
js
push
add
add
add
in
lods
add
add
out
jns
jecxz
add
add
mov
lcall
jmp
test
inc
add
add
mov
add
stc
mov
pop
pusha
push
lock
add
scas
add
addb
add
add
add
jne
pop
add
pop
jmp
mov
pop
add
mov
push
jno
ja
pushf
lods
add
mov
lcall
enter
push
push
push
push
push
lea
push
push
push
call
lcall
movb
push
loope
sahf
mov
add
add
xchg
add
scas
pop
add
enter
stos
mov
pop
jns
add
add
popa
add
xchg
pop
add
xchg
mov
cltd
faddl
xchg
add
sub
pop
sub
pushl
push
push
lea
push
push
call
add
mov
mov
add
int
mov
pop
clc
arpl
imul
lods
mov
push
add
mov
mov
stc
mov
insb
push
sub
pop
pop
push
dec
dec
ror
shr
pop
shr
push
add
ror
pop
and
sub
push
xor
pop
cmp
jne
leave
push
inc
ror
pop
ret
push
push
xor
pop
mov
add
push
push
call
add
xchg
add
call
add
mov
addr16
ja
add
in
add
pusha
out
imul
lret
mov
add
add
mul
lds
add
sub
pop
push
push
add
pop
push
push
push
add
xor
dec
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
arpl
out
add
add
movl
pushf
push
add
test
stos
add
push
imul
add
add
cld
push
add
mov
outsl
into
add
jmp
stos
xchg
stos
pusha
add
lds
add
mov
imul
push
mov
les
mov
lea
push
push
push
lea
push
call
mov
aam
add
lret
xchg
mov
ja
lods
add
mov
add
add
lahf
insb
add
out
mov
add
jle
nop
xchg
add
cmpsl
fldl
add
add
add
popf
jb
in
imul
sub
pop
sub
push
push
push
push
lea
push
push
push
call
cwtl
jo
add
push
add
enter
add
addl
add
add
add
add
mov
sub
pop
mov
push
xor
pop
shr
add
push
push
call
add
mov
add
in
flds
shrb
xchg
add
add
js
add
lock
leave
add
stos
test
nop
jecxz
mov
add
add
cwtl
mov
pop
add
push
fsub
add
and
add
lcall
fwait
addb
add
ljmp
push
push
push
push
push
push
push
call
movb
add
mov
fiaddl
pop
add
out
outsl
add
mov
lcall
pop
add
mov
add
in
loopne
lcall
jnp
push
lea
push
push
push
call
sti
add
add
add
push
out
fiaddl
in
scas
cmpsb
mov
je
add
add
imul
mov
sub
add
pushf
xlat
clc
pop
add
in
add
clc
stos
mov
mov
add
int
ror
mov
stc
add
mov
xchg
sub
pop
add
xor
push
push
call
add
addr16
mov
pop
add
push
mov
mov
int3
addl
add
add
add
popl
sub
pop
mov
push
xor
ror
add
pop
and
rol
push
inc
xor
rol
pop
rol
push
dec
shr
add
dec
pop
xor
inc
push
dec
xor
pop
cmpb
jne
push
dec
shr
dec
dec
pop
add
push
pop
cmp
je
push
lea
push
call
test
in
roll
add
popa
imul
fnstsw
idivl
lahf
add
movsl
add
push
out
pop
jno
int
mov
in
clc
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
pusha
add
pop
push
in
add
fs
outsl
shr
add
add
jmp
add
loop
add
nop
in
outsl
sub
pop
cmpl
jne
xor
push
push
push
push
lea
push
call
rolb
js
add
int3
les
add
into
popl
add
sti
out
add
add
add
add
out
add
add
outsl
add
stc
add
fisubs
xchg
loopne
add
mov
add
test
fcomp
movl
add
pop
pop
push
push
push
push
call
add
jecxz
je
jmp
pop
pop
pop
pop
jmp
add
nop
add
add
add
insb
mov
sarl
push
mov
aam
add
add
roll
add
fildl
pop
push
pop
pop
push
ror
ror
dec
pop
pop
leave
push
lea
push
lea
push
push
lea
push
lea
push
call
mov
mov
mov
clc
nop
add
je
add
jb
add
iret
add
sahf
popf
add
ja
loopne
clc
mov
loope
cli
je
out
sti
add
add
add
fs
add
les
add
cli
loop
fucomi
add
lcall
or
mov
push
rol
pop
add
push
inc
pop
push
push
lea
pop
push
add
push
shr
add
pop
mov
push
add
shl
pop
testw
push
lea
push
push
lea
push
push
push
push
push
call
mul
push
add
add
mov
leave
gs
mov
movsl
les
addl
mov
add
addr16
add
pop
cmpsb
movsb
ja
add
addr16
pop
jle
add
in
loopne
pop
pop
push
rol
add
dec
pop
mov
push
push
push
push
push
lea
push
push
call
lret
fs
add
mov
add
jmp
add
add
jl
add
clc
gs
je
fiaddl
mov
add
ret
add
mov
lcall
add
mov
add
test
movl
call
leave
push
add
pop
xor
push
push
push
call
pop
lea
add
add
cmc
add
imul
imul
test
cld
add
add
icebp
adc
add
sti
add
sti
call
in
pop
roll
jae
add
rcrl
mov
cmpsl
cmpsb
test
stos
add
add
sub
pop
pop
push
push
call
lods
add
jmp
lock
fisubs
pushw
add
xchg
cmpsl
push
lcall
add
cltd
add
add
stos
out
mov
add
mov
lcall
push
sub
shr
sub
pop
pop
push
shl
dec
inc
shr
pop
pop
push
ror
shl
add
pop
pop
push
push
push
call
pop
test
add
addb
add
sti
stc
aad
add
jb
mov
add
testl
call
add
add
add
je
add
add
pop
add
xor
outsl
mov
lods
jnp
in
hlt
pop
leave
push
lea
push
call
push
mov
pop
ja
add
push
mov
add
add
push
add
push
add
stos
add
push
mov
add
add
pop
mov
add
pop
in
mov
jle
pop
pop
pusha
into
add
fildl
add
scas
sub
pop
ret
push
shr
shr
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
jp
add
add
jecxz
add
rolb
bound
mov
call
push
in
add
pop
scas
jb
add
add
add
mov
add
lcall
in
add
push
push
push
push
lea
push
push
push
call
jmp
ror
out
sti
add
add
insb
aad
add
add
add
mov
int3
add
mov
loope
add
add
in
cli
sub
pop
push
push
push
call
popa
mov
je
add
sahf
sar
fistpl
add
int
test
add
add
push
jo
add
orb
popl
mov
clc
lcall
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
int3
cmpsl
jnp
pop
cld
test
mov
lahf
jb
out
xchg
mov
mov
xchg
arpl
add
add
add
scas
add
add
in
fdivr
lcall
push
push
push
push
push
push
push
push
call
add
mov
push
add
pop
xchg
adc
add
loop
cltd
loop
mov
add
icebp
int
add
mov
xchg
add
add
cli
retw
in
loopne
mov
push
dec
dec
pop
push
pop
push
push
push
push
call
xchg
push
add
ficoml
fwait
roll
add
cli
orb
je
sti
add
mov
xchg
sub
pop
lea
push
sub
sub
pop
sub
push
push
push
push
push
push
push
lea
push
call
add
stos
mov
movsb
xchg
pop
mov
xorl
imul
movsl
push
movsb
into
icebp
pop
add
flds
pop
add
in
add
rcrl
ror
pop
int3
add
add
add
lcall
adc
ljmp
add
rol
sub
pop
mov
push
not
pop
add
push
inc
shl
sub
pop
pushl
push
sub
dec
pop
popl
mov
push
add
add
sub
rol
pop
add
xor
push
add
sub
pop
lea
mov
push
push
push
call
push
push
in
add
add
popa
xchg
aad
addr16
xlat
add
mov
lods
xlat
push
add
mov
add
mov
lods
mov
pop
mov
jno
push
add
mov
add
add
insb
lods
add
add
mov
test
fadds
push
add
add
lcall
rcll
call
push
pop
rol
push
push
push
lea
push
push
push
push
lea
push
call
xchg
test
arpl
enter
mov
insb
add
ljmp
shr
add
add
push
roll
rolb
mov
add
mov
jp
add
sub
pop
nop
push
add
pop
nop
xor
push
inc
pop
nop
push
shl
sub
pop
nop
push
add
dec
add
pop
inc
nop
push
lea
push
push
call
lods
add
add
mov
jns
sti
pop
add
fwait
mov
add
add
adcb
jmp
mov
cltd
mov
enter
add
ljmp
mov
test
jge
pop
push
fsub
outsl
aad
add
movsb
mov
in
hlt
lcall
cmpb
jne
push
push
call
add
add
pop
mov
add
icebp
jae
add
scas
add
mov
jmp
call
fadds
add
xchg
je
pusha
pop
test
lret
add
lcall
inc
pop
ss
nop
push
push
push
lea
push
push
push
call
pop
add
mov
out
aam
add
mov
add
pop
add
jo
leave
loop
cmc
add
add
fwait
leave
push
add
addb
test
nop
push
push
push
push
push
lea
push
call
aad
pop
fs
xchg
add
add
add
jnp
add
add
ja
pop
add
add
add
mov
leave
testb
add
pop
add
add
sahf
cld
lock
rolb
add
add
gs
cltd
les
lcall
inc
or
test
shl
pop
nop
nop
push
sub
xor
ror
pop
inc
push
rol
ror
xor
not
pop
nop
push
shr
not
pop
nop
push
push
call
stc
add
mov
jmp
push
test
shlb
jne
add
mov
add
mov
add
jae
jae
pop
add
add
add
out
pop
add
scas
rorl
flds
js
add
mov
add
cltd
add
add
add
leave
mov
add
sub
pop
cmp
jb
push
shr
ror
shl
pop
xor
push
dec
sub
pop
jmp
mov
push
dec
not
rol
pop
add
push
push
push
push
push
push
push
call
add
pushf
cwtl
mov
add
add
add
mov
pop
clc
push
add
push
add
jae
add
out
shl
add
jnp
in
in
lcall
mov
jb
push
call
add
notb
add
mov
cltd
test
xchg
loop
icebp
add
add
add
mov
test
ret
cltd
ret
push
add
mov
sahf
mov
int
into
mov
cwtl
add
loopne
sbbb
in
clc
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
push
subl
add
add
stos
loop
push
push
enter
add
add
roll
mov
add
add
test
rcll
aaa
scas
mov
pop
adc
push
push
push
call
mov
add
add
stc
add
testl
mov
roll
out
add
add
add
add
mov
outsl
std
fcomi
leave
shr
je
cltd
into
jae
cmpsl
mov
in
in
lcall
dec
hlt
xor
push
dec
pop
xor
shl
push
pop
xor
push
lea
pop
shl
push
sub
add
pop
xor
push
add
ror
shl
pop
shl
xor
push
push
push
push
push
push
call
bound
add
push
add
add
add
add
add
roll
add
add
add
jno
jnp
shrb
add
jns
sub
pop
mov
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
test
add
loop
add
jo
ljmp
stos
lea
cmpsb
mov
jge
add
stos
ljmp
fsts
add
not
add
pusha
jmp
xchg
pusha
push
mov
lret
add
add
mov
out
push
addl
pop
add
pop
push
push
push
push
push
push
push
lea
push
push
push
call
int
ljmp
add
add
pop
fistps
clc
fiadds
jb
in
jle
jl
hlt
ja
add
test
add
js
mov
add
add
add
imul
rorl
adcb
iret
mov
add
jno
jp
icebp
add
leave
add
pop
push
dec
inc
sub
pop
pop
push
dec
add
pop
pop
push
shl
xor
pop
leave
push
lea
push
lea
push
push
push
call
flds
mov
leave
hlt
gs
add
add
pushf
add
mull
fnstcw
pop
jge
enter
add
stos
rcl
add
add
pusha
inc
jb
lods
popf
add
add
push
add
add
xlat
in
add
add
add
lcall
or
push
xor
pop
push
mov
push
shl
inc
shl
not
pop
push
push
lea
push
push
call
jo
add
add
add
add
mov
add
pop
fiaddl
jge
mov
out
add
add
add
out
add
jne
fs
add
xchg
add
lcall
push
push
sub
pop
push
push
push
push
call
push
fcom
movsl
add
popf
pop
cmpsl
xchg
pop
add
sbb
add
cmc
addl
cmpsl
scas
enter
mov
add
cmc
add
mov
add
lret
imul
add
lcall
dec
or
push
call
negb
ficompl
add
lds
add
add
insb
mov
add
add
add
add
ljmp
loope
add
icebp
add
in
xchg
jb
fcomp
add
std
add
cmpsl
mov
xchg
loop
add
mov
pusha
test
push
xchg
sub
pop
mov
push
push
push
call
lods
jns
push
add
fldl
pop
addb
movl
add
out
outsl
bound
push
add
push
loopne
push
clc
call
mov
lcall
jge
push
push
push
push
push
push
call
jp
jmp
mov
addr16
add
cwtl
hlt
push
jbe
add
ja
rolb
add
in
push
cltd
add
add
testl
add
ljmp
mov
jae
add
rorb
test
or
add
ret
pop
jecxz
scas
not
shl
pop
test
je
push
not
inc
lea
shr
pop
mov
push
add
lea
shl
pop
mov
push
add
pop
mov
inc
push
push
push
push
push
call
add
fdivrl
add
ljmp
add
mov
add
scas
pop
cmpsb
push
push
loopne
loopne
add
jle
movsb
add
add
in
roll
lock
mov
add
mov
add
add
aam
mov
cmp
je
push
not
not
pop
test
je
push
xor
pop
mov
inc
push
push
push
push
lea
push
push
push
push
call
mov
push
mov
mov
mov
jle
into
movl
mov
add
add
push
mov
jge
add
xchg
add
sahf
outsl
add
mov
out
lret
aam
in
loopne
lcall
rorb
test
testb
jne
push
push
push
push
call
in
nop
add
jle
rolb
jne
mul
pop
ror
add
jno
std
add
add
jb
jle
in
icebp
mov
lods
add
push
incb
in
add
scas
add
rclb
sbb
add
add
loope
add
ja
aam
out
mov
imul
add
mov
push
add
add
pop
fs
pushf
push
mov
add
add
clc
pop
pop
push
not
xor
pop
pop
push
shr
add
pop
pop
push
push
push
push
lea
push
push
call
xchg
add
add
lcall
lret
add
push
hlt
faddl
add
add
cwtl
fwait
push
xchg
fst
jo
add
xchg
mov
fsubs
pop
add
into
add
add
add
gs
sub
pop
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
popa
add
lea
add
add
add
ja
jns
add
add
je
add
add
xchg
mov
std
push
push
testl
add
hlt
rol
pop
mov
inc
push
push
lea
push
push
push
push
call
add
jl
push
aad
add
xchg
fiaddl
push
in
add
mov
add
leave
out
jo
mov
add
xchg
je
mov
pop
add
xchg
xchg
xchg
in
mov
add
bound
shlb
lea
lock
push
add
shr
pop
lea
mov
push
dec
pop
test
je
push
sub
sub
pop
mov
push
push
push
lea
push
push
call
imul
fiadds
insb
add
test
xchg
call
add
std
test
adcb
add
jne
xchg
cwtl
jae
cltd
pushf
fisubrs
leave
push
mov
filds
mov
mov
testl
add
add
xlat
test
add
movb
loopne
test
call
das
push
push
push
push
call
add
xchg
cmpsb
hlt
in
movsb
imul
incb
mov
fiadds
jecxz
add
jbe
out
test
loopne
add
pop
cld
add
add
add
add
add
add
push
fucom
add
pop
arpl
add
add
pop
jmp
xchg
add
sub
pop
mov
test
je
push
not
dec
pop
mov
add
push
push
lea
push
push
push
push
call
incb
add
loop
pushf
mov
scas
out
add
push
jmp
jmp
add
jmp
mov
fisttpll
add
add
jns
ret
into
lret
roll
add
add
lret
jp
pop
mov
add
mov
enter
add
xchg
out
mov
push
push
lods
incb
cmp
je
jmp
push
sub
pop
xor
push
push
call
xchg
mov
add
mov
mov
subl
add
aam
sahf
add
fwait
add
add
enter
xchg
add
cld
add
cltd
add
xchg
add
sub
pop
pop
push
dec
dec
pop
pop
push
sub
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
mov
jno
test
outsl
add
jmp
je
add
add
les
pop
add
add
add
mov
cmpsb
sub
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
jae
add
arpl
add
add
add
mov
mov
out
out
movl
add
cmpsb
sub
pop
leave
push
push
push
push
lea
push
lea
push
push
push
call
add
int
repnz
lret
mov
jl
add
cmc
movsb
icebp
xchg
jmp
add
add
add
sub
pop
ret
push
shr
dec
pop
lea
pop
push
push
push
push
call
add
add
outsl
add
in
mov
xchg
add
gs
pop
cmpsl
adcl
nop
std
pushf
scas
int
sub
pop
pop
push
lea
push
push
push
call
add
mov
fs
add
mov
push
fimuls
ljmp
mov
scas
add
jnp
add
add
add
add
sub
pop
pop
push
push
lea
push
push
call
cld
mov
jbe
loope
add
add
add
js
bound
push
add
lods
add
add
cmc
aam
add
mov
add
add
insb
clc
int3
out
in
lock
lcall
push
push
push
push
call
xchg
mov
addb
mov
mov
pop
cmc
imul
aad
mov
cltd
mov
add
rol
add
push
mov
xchg
in
add
add
mov
lock
add
shr
les
jecxz
add
pusha
add
add
add
je
add
jne
mov
aad
in
lock
lcall
push
push
push
push
push
push
push
call
fstl
data16
iret
mov
mov
loope
mov
add
pop
mov
mov
pop
out
pushf
push
mov
cmpb
add
sahf
leave
roll
add
add
add
push
les
pop
jl
mov
cltd
add
or
mov
push
shl
pop
pop
push
lea
inc
pop
pop
push
push
lea
push
call
cli
add
add
hlt
xchg
mov
add
add
push
mov
add
popa
add
add
xchg
iret
cli
push
add
cli
add
mov
incb
add
add
pop
xchg
popf
mov
jbe
sahf
notl
in
hlt
lcall
push
sub
not
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
xchg
add
add
scas
cltd
add
jle
add
fldl
fiadds
mov
out
sahf
add
add
add
cmc
lcall
add
jno
add
add
add
add
outsl
add
lahf
out
mov
push
add
mov
sub
pop
leave
push
lea
push
push
lea
push
push
push
call
add
add
lret
shlb
add
mov
pop
faddl
outsl
in
cmpsb
xlat
ret
xchg
lahf
add
xlat
jnp
rolb
add
add
add
ja
popf
add
out
sbbl
pop
ret
xor
cmp
dec
cmp
xor
adc
and
adc
inc
cmp
gs
adc
popa
cmp
xor
adc
mov
add
jmp
jo
inc
jne
pushf
in
jecxz
aas
stc
cmp
lods
arpl
outsl
test
xchg
jo
mov
or
adc
push
add
xorl
push
lret
xlat
sub
cmp
jnp
or
mov
pop
pushf
xchg
cmp
adc
and
mov
test
nop
pop
and
in
lcall
les
cmp
cli
inc
jb
insl
and
movsl
jae
je
shlb
data16
sbb
cltd
test
pop
inc
js
add
xor
sbb
dec
jnp
pop
std
test
lret
ss
notl
jb
popa
cmpsb
mov
pop
arpl
data16
cli
xchg
out
loope
clc
mov
ret
in
shlb
subb
sub
test
mov
add
dec
lcall
push
push
xor
dec
fnsave
ret
addl
adc
sub
add
adc
push
stos
or
push
mov
or
insl
scas
out
pop
push
push
sbb
clc
scas
cld
mov
jmp
fldenv
cmpsb
mov
mov
stos
loopne
dec
test
mov
jp
jle
cmpsl
xchg
lock
inc
push
adc
enter
clc
pop
lods
inc
sbb
ljmp
mov
arpl
xor
fwait
xor
sub
aas
mov
rcr
adc
mov
lret
jle
lock
lcall
add
inc
jecxz
cmc
test
lret
sub
dec
aad
popa
rcrb
add
lods
faddp
pop
lea
push
fnstenv
sub
push
scas
rolb
jl
dec
xchg
jmp
lahf
stos
fnstsw
or
ret
cltd
push
jb
mov
inc
in
xchg
adc
daa
dec
fpatan
sbb
bound
fmul
or
mov
xchg
pop
or
lcall
inc
pop
jb
sar
outsb
shr
leave
and
mov
repz
and
ret
inc
aam
sar
push
call
push
pop
cmp
shlb
pop
aaa
scas
pusha
std
stos
filds
call
ss
or
dec
inc
je
fidivs
pop
test
dec
movb
fst
xrelease
adc
mov
pop
jno
add
in
ja
mov
int3
ffreep
jo
test
jnp
or
jmp
sbb
add
mov
add
jecxz
cmp
sbb
lock
sbb
pop
lods
xchg
xchg
shlb
or
mov
imul
es
mov
or
push
hlt
shl
aaa
pop
aas
bound
out
mov
inc
adc
jg
xchg
mov
inc
xchg
push
in
addr16
push
sti
sub
fdivr
cmp
mov
cs
aam
fmull
xor
add
into
jp
test
xchg
xchg
mov
sbbl
cmc
iret
cmp
cmp
imul
aas
dec
inc
mov
add
xchg
mov
pop
inc
add
push
pop
movsl
loope
jns
or
sub
int3
dec
sbb
je
xchg
jl
adc
mov
div
paddw
int
and
loopne
lret
add
mov
fnstcw
outsl
insb
jae
cs
xchg
pop
mov
jns
mov
lret
mov
icebp
pop
daa
imul
mov
push
ds
push
pop
add
mov
test
adc
repnz
mov
push
xor
leave
or
lretw
mov
adc
orb
ljmp
orl
ret
mov
cltd
insl
aad
in
xor
lea
lock
and
leavew
jbe
xchg
mov
in
outsb
cmpsl
xor
mov
ret
jb
cltd
ja
jecxz
push
xchg
and
imul
nop
and
push
fcmovnb
cld
cmc
jae
mov
in
divb
push
jns
lds
popw
mov
add
pushf
mov
mov
je
shll
xor
enter
inc
inc
cs
pusha
fcmovb
mov
loopne
cmp
dec
mov
push
dec
rclb
ret
cmp
sahf
jns
les
cli
inc
dec
xor
sub
and
xor
xchg
sbb
in
pop
cmp
test
fs
adc
subl
dec
adc
pop
jnp
out
mov
call
jp
pop
jb
iret
cwtl
add
or
adc
test
sbb
inc
repnz
imul
pushf
sbbb
pop
lods
xlat
mov
cmp
mov
out
pop
xlat
or
aaa
hlt
jnp
adc
push
mov
repnz
pop
stos
out
adc
pop
cwtl
push
ret
test
decb
and
push
lret
push
les
mov
jae
mov
cmc
fadd
jg
mov
stos
sbb
and
cmc
in
adc
mov
sub
repz
jge
insl
mov
cmp
inc
xor
mov
xchg
mov
shrb
lahf
jb
iret
sbb
ficompl
mov
outsb
sti
ret
cmpsl
rcl
fs
cmpsb
push
gs
loopne
push
push
outsb
jl
stos
dec
xor
in
add
mov
cltd
ss
jnp
aaa
andb
cmp
adc
adc
lcall
mov
fbld
leave
jns
cmp
and
sub
stc
testl
and
dec
sub
jmp
es
xor
mov
push
setne
mov
xlat
repnz
imul
pop
mov
stos
sahf
fnstcw
sbb
mov
daa
dec
sub
cld
das
pop
xchg
push
clc
loop
int
sub
pop
inc
mov
push
push
out
or
xor
or
mov
xchg
mov
jmp
in
pushf
adc
jbe
enter
orb
gs
test
xchg
outsb
fnstcw
lahf
mov
aaa
pop
push
cmc
imul
mov
lea
lcall
cmp
movsl
jmp
fsubl
sbb
fnstenv
sub
mov
mov
dec
pop
lds
xor
mov
and
aaa
pop
int
testl
inc
sahf
fnstenv
outsl
clc
lret
and
pop
in
stos
adc
pop
cmp
pop
movsb
adc
xchg
and
dec
je
insb
sbb
sbb
dec
mov
jb
mov
leave
jno
call
in
xchg
jbe
je
fstps
mov
lods
leave
pop
mov
pusha
pop
jno
lahf
dec
adc
mov
or
jno
scas
mov
int
inc
pop
out
push
nop
stos
sarb
push
sbb
jns
xchg
cmc
jmp
sbb
bound
inc
push
pop
add
repz
add
ss
jo
out
andb
xchg
cld
fisubrl
dec
mov
ljmp
or
cld
pop
repz
movsl
xchg
shll
shll
mov
in
icebp
mov
push
or
pop
stos
push
pop
jp
jo
pop
inc
in
xchg
popa
mov
inc
mov
mov
mov
sti
xchg
jle
pushf
pop
int
dec
jmp
pop
add
neg
and
pop
pop
xor
add
call
decb
cli
test
add
mov
sarl
xor
dec
pop
subl
jl
in
popa
cmp
sub
sub
scas
ds
sub
pop
adc
sub
and
ret
sub
mov
xchg
xor
push
imul
cmp
ret
mov
xor
jno
and
push
sbb
inc
jg,pt
shlb
fistps
fs
das
bound
rolb
push
push
repnz
mov
jp
sub
xchg
add
add
shrb
xchg
and
std
insl
scas
xor
add
sbb
scas
pop
xchg
jge
aam
outsl
rorl
jmp
aam
pop
or
xor
or
xchg
fs
push
ret
and
mov
push
icebp
jmp
sarl
dec
xor
rolb
imul
mov
stos
add
je
stos
das
xchg
aam
addl
xchg
inc
push
ljmp
loop
test
mov
pop
pop
push
lcall
pusha
mov
in
mov
and
sub
xchg
jb
jo
es
mov
sub
inc
xchg
pop
imul
sub
in
cmp
leave
adc
push
mov
cmp
nop
mov
push
frstor
sar
mov
jp
push
inc
push
xchg
popf
into
icebp
sub
or
mov
shl
data16
xlat
fsubr
inc
notl
test
repnz
mov
stc
cmp
je
aam
sbb
xor
mov
xchg
jle
addb
mov
int3
call
push
xor
in
jmp
cmp
data16
les
jle
jmp
push
mov
lahf
add
lret
cmp
in
stc
divl
pop
xor
sbb
lds
mov
xor
pop
lock
aas
insb
js
dec
outsl
adcl
arpl
mov
cmp
xor
sbb
mov
jg
int
ljmp
push
aam
add
mov
js
xor
lds
or
test
pop
sbb
xor
push
jl
jo
out
sar
ja
ljmp
pop
loopne
mov
out
lret
loopne
add
dec
and
and
and
shll
dec
inc
roll
cmp
xchg
sub
enter
jo
mov
ja
ja
xorb
icebp
pushf
testl
inc
ljmp
inc
ss
dec
push
mov
mov
stc
add
fs
add
mov
int
sbb
lahf
stc
out
hlt
test
scas
or
add
sahf
xor
in
inc
psubq
andl
inc
lret
sub
xor
xchg
mov
and
sbb
sbb
out
xchg
or
ljmp
and
lock
inc
inc
bound
cmp
push
jb
mov
stos
pop
test
mov
repnz
mov
arpl
aas
mov
or
decl
xchg
xchg
pop
cwtl
pushf
push
mov
mov
int
loope
adc
fxtract
fildl
adc
leave
mov
add
xchg
mov
sbb
mov
adc
cli
aas
add
cmp
movsl
je
mov
xor
dec
sub
fdivp
lahf
xchg
mov
pop
mov
fdivrs
push
mov
adc
dec
cmp
inc
movsl
shlb
pop
mov
mov
mov
mov
outsl
fsubrl
or
push
pop
jne
out
xchg
xor
mov
sub
push
xchg
mov
push
lahf
imul
xlat
and
push
lret
or
mov
rorb
test
mov
sub
sahf
in
stc
xor
test
out
in
and
and
cmp
cmp
sbb
fcmovu
mov
mov
cmpsl
sub
ret
es
leave
shll
inc
enter
jb
dec
mov
mov
pop
mov
push
jecxz
cmp
cld
int3
adc
icebp
and
ret
loopne
or
jb
repnz
xor
inc
fcomps
jp
out
pop
arpl
pop
mov
ds
repz
mov
or
xor
ret
fwait
les
push
mov
mov
cmp
ja
push
xchg
int3
outsb
cmp
cmp
mov
jne
lea
out
push
int3
cs
mov
jle
push
pop
pop
xchg
xchg
push
mov
pop
or
xacquire
ret
pop
loopne
sarb
fmull
pop
jo
xchg
jmp
mov
fdivrl
cmpsl
lock
movsb
subb
xchg
dec
xchg
mov
fistpl
pop
mov
scas
inc
mov
or
inc
add
orl
sarb
adc
dec
inc
pop
pushf
mov
orl
or
das
outsl
or
cmp
clc
ja
jmp
pop
idivl
xchg
add
inc
mov
jg
je
test
fistps
dec
mov
out
insl
adc
ja
pusha
aam
jnp
or
in
cmc
cmc
sub
mov
lret
mov
jns
fs
outsb
adc
sti
sbb
fadd
xor
xchg
sti
jno
idivl
dec
dec
les
mov
pusha
xchg
sub
scas
fcoms
mov
sbb
inc
cmp
enter
sar
fimull
lock
xchg
pop
pop
xchg
jae
mov
or
data16
mov
mov
rorl
cmc
arpl
out
lds
add
data16
jne
ret
xor
mov
push
sbb
sbb
js
push
dec
cmpsl
es
mov
push
pop
jo
in
and
pop
mov
stos
dec
mov
inc
lret
and
icebp
inc
pop
jno
fsin
jae
push
roll
push
jge
xlat
dec
lock
stos
dec
cmp
push
pop
out
jb
fimull
sarl
divl
push
out
test
mov
iret
mov
adc
xor
pop
sub
cmp
es
mov
push
scas
aad
and
jmp
out
ss
jne
and
cli
push
push
mov
add
scas
pop
gs
xchg
in
push
stos
push
shlb
push
movsl
clc
jmp
mov
push
sbb
ljmp
imull
inc
push
jp
sbb
lods
sub
and
xor
cli
movsb
insb
mov
inc
add
ss
lret
or
cmp
add
movsl
mov
enter
pop
xor
add
jne
frstor
icebp
push
add
in
xchg
push
ja
and
xchg
and
sbb
or
xchg
fdivs
clc
sub
pushf
adc
xchg
ffreep
sar
sub
fsubrl
or
loop
ljmp
and
push
mov
int3
loope
in
xor
xor
cmp
adc
lret
mov
jp
xchg
jne
inc
testb
jp
in
call
jnp
jl
loop
and
xor
pop
ds
lret
mov
lcall
jns
movsb
mov
lds
mov
dec
or
aad
or
pop
scas
or
ror
negb
jmp
mov
jmp
rolb
push
mov
loopne
push
jae
pop
cli
push
lock
sub
rcl
mov
data16
mov
and
push
xchg
aas
imul
loopne
sbb
push
and
jns
lods
mov
mov
gs
inc
stos
fistl
push
push
sbb
pop
mov
cltd
adc
adc
cltd
negb
jo
fs
pusha
adc
int3
dec
inc
pop
cmc
xor
dec
push
lcall
or
movsl
js
mov
fcoml
fistpl
mov
shlb
xchg
cmp
mov
int3
sub
push
divb
mov
push
inc
xchg
xchg
sahf
xor
popf
clc
jecxz
xchg
ss
gs
imul
and
repnz
popa
shrl
shll
je
out
das
push
enter
inc
add
or
cmp
cwtl
or
loopne
jbe
xor
dec
jnp
jg
jno
push
cwtd
jp
xchg
aaa
mov
test
sahf
mov
adc
imul
arpl
cmp
test
add
xchg
fildll
addl
jmp
xor
sbb
pop
cmp
test
pop
cltd
aaa
das
test
push
xchg
or
icebp
shll
lret
ja
ja
fimull
test
fldl
xor
cmp
mov
mov
add
je
inc
jmp
xchg
or
loop
push
movsb
and
and
xchg
lret
adcb
sub
push
push
push
fmull
sbb
cmp
bound
pop
fwait
test
pop
imul
lods
push
fs
dec
mov
loopne
mov
cmpsl
daa
dec
jmp
inc
inc
pop
add
fcomps
pop
aad
je
das
scas
mov
mov
push
pop
ss
cmpsb
pop
pop
out
cmpsb
xchg
int
mov
cltd
mov
xchg
imul
jae
jge
xlat
xor
push
adc
mov
mov
or
insl
out
xchg
out
fstpt
mov
or
or
xchg
adc
mov
cwtl
ficompl
and
jne
movsb
jg
sub
push
or
nop
ficomps
iret
cs
fnstcw
xor
push
mov
sub
push
push
addr16
cli
or
push
xor
inc
cs
aaa
enter
dec
fs
mov
jge
cld
cmpsb
add
inc
xchg
xchg
cltd
sbb
cmpsl
dec
popa
xor
push
into
aaa
mov
mov
sub
das
les
jbe
lea
xchg
sub
push
ret
test
inc
push
push
scas
xchg
inc
sarb
mov
sub
dec
sub
shll
sbbl
pop
push
lods
fs
es
insl
xchg
pop
out
cmp
fucomi
push
aad
bound
js
decb
lret
sahf
adc
xor
xchg
dec
cld
inc
inc
outsb
in
jns
les
sbbb
or
cmp
in
push
pop
fs
pop
loop
popf
ret
cmp
lds
pop
in
pop
or
pop
adc
stos
jle
repz
lea
and
pop
out
dec
push
jl
jge
test
imul
sbbl
adc
lea
or
mov
jno
pushf
imul
mull
xchg
repnz
add
ljmp
pop
insl
outsl
fcom
outsb
adc
inc
insb
pop
movsb
inc
int
cmp
push
mov
xchg
jb
adc
xchg
adc
loop
sbbl
dec
xchg
fmull
dec
mov
inc
ret
sbb
mov
rcrb
iret
xchg
fsub
mov
aad
mov
hlt
pop
ret
enter
imul
arpl
mov
dec
cmp
int3
out
pushf
inc
xor
fcom
jle
clc
aas
pop
pop
pop
xor
inc
inc
out
cmc
stc
leave
movsb
push
idivl
rclb
mov
mov
fdivs
xchg
inc
push
cmp
jmp
ja
imul
push
and
mov
pop
cld
imul
or
push
cltd
jge
jno
dec
bound
mov
jns
add
imul
and
dec
loope
int3
in
cmc
cwtl
out
mov
dec
andb
jne
jae
mov
idiv
fwait
xor
nop
test
lock
clc
push
inc
mov
rorl
lock
jno
sub
fists
sarl
jne
loop
std
jp
cli
push
pop
adc
and
ja
enter
mov
lea
fldcw
inc
adc
cs
repz
dec
fcmovnu
sti
pop
jmp
lods
push
push
pushf
adc
mov
clc
pop
out
int
mov
clc
test
mov
fwait
in
pushf
pop
cmpsl
movsl
in
and
fcomi
add
outsb
jecxz
cmp
cwtl
sub
sub
aad
cld
lock
sub
xor
xchg
adc
pushf
jb
and
cmc
pop
mov
lods
rcrl
orb
sbb
sub
pop
or
cmp
addr16
pop
sub
xchg
sbb
out
add
out
lock
add
or
mov
sbb
es
dec
cld
loopne
cmp
cmp
inc
scas
add
inc
cmp
mov
popf
dec
jns
push
sub
mov
cmp
sbb
stc
jo
dec
adc
push
fwait
sbb
jns,pt
or
fwait
das
out
mov
sbb
popa
clc
jp
je
cs
lods
xchg
mov
mov
sarb
or
testl
jl
adc
jb
out
test
loope
bound
xor
push
aad
lahf
xor
push
pushf
adc
inc
xor
ja
repnz
jmp
fidivrl
orb
mov
mov
lods
and
sub
push
loopne
xchg
pop
push
popa
clc
enter
popf
adc
incb
decl
xor
xchg
hlt
das
arpl
xchg
lahf
mov
xchg
mov
cli
cs
imul
cltd
inc
lret
xchg
lcall
stos
dec
push
sub
rclb
shr
ja
add
insl
push
xor
and
fwait
popa
das
out
xchg
stc
mov
dec
pusha
mov
fs
mov
pop
mov
leave
mov
xor
mov
mov
imull
dec
add
repnz
mov
inc
mov
mov
pop
xor
mov
setp
jle
mov
inc
jge
outsl
inc
inc
into
sbb
inc
fisubl
pop
repz
push
cmp
and
jbe
xor
in
mov
sbb
cmp
outsl
mov
or
out
mov
out
pop
sbb
mov
xchg
xchg
or
sbb
cmpsl
push
or
jecxz
dec
or
xchg
test
imul
test
dec
mov
shll
rcrb
mov
add
cmpsb
or
subb
jge
mov
sbbb
sbb
lds
lret
xchg
popf
out
sbb
popf
or
sub
adc
clc
popf
dec
iret
lahf
pushf
inc
fcoml
sbb
ss
cld
shrl
rorl
dec
cmp
xor
cmp
insb
dec
mov
dec
jp
jbe
adc
dec
cwtl
arpl
and
pusha
aas
icebp
sub
mov
ds
ret
sub
insb
movsb
push
mov
push
cs
rorl
shll
xor
sbb
jge
mov
cmpsb
xchg
mov
adc
or
stc
xor
mov
push
mov
jmp
mov
ja
je
cmp
add
mov
and
and
in
das
pushl
sub
outsb
popf
fbstp
lea
mov
pop
add
jecxz
jl
ljmp
notl
mov
push
ret
mov
mov
lahf
dec
xchg
sbb
cltd
mov
aas
movsb
pop
fstp
lods
into
ds
fcmovnb
cmp
push
push
enter
lods
dec
push
into
mov
loope
dec
fdivs
js
movsl
movsb
sub
cltd
dec
cmc
aas
fnstsw
push
clc
rorb
aam
popf
push
push
lods
inc
mov
mov
cmp
jle
lcall
das
push
daa
mov
mov
mov
mov
jae
les
decl
daa
xchg
sub
inc
jns
xchg
jns
ds
adc
je
mov
push
popa
or
enter
mov
mov
je
test
push
sbb
ret
mov
inc
mov
sti
mov
clc
cld
test
mov
std
push
lahf
repnz
and
dec
or
andl
sub
mov
mov
push
ficoml
xchg
ss
mov
sbb
addr16
scas
push
push
dec
fisttps
ss
test
aad
outsb
adc
xchg
cmp
negb
jl
dec
sbb
inc
cwtl
xor
ret
leave
enter
insl
sub
add
mov
insl
mov
bound
rolb
push
pop
jecxz
pop
arpl
dec
inc
cmp
and
loopne
iret
dec
add
xchg
dec
xchg
mov
sub
adc
mov
xor
mov
test
add
xor
fmul
xorb
add
sub
test
jle
ror
jne
dec
lcall
fadds
mov
cwtl
arpl
and
xor
cwtl
mov
inc
stos
cltd
sahf
sub
shrb
add
dec
ror
cmp
jne
sub
push
adc
push
stos
pop
dec
outsb
cmp
frstor
out
add
jge,pn
ss
pop
shrl
and
adc
add
add
pop
ja
je
fucomip
das
add
fsubp
lcall
sub
mov
lret
adc
mov
push
sti
std
jmp
jbe
clc
lcall
ret
into
ljmp
sbb
push
inc
cmp
add
jl
mov
stos
adc
push
cmp
push
cmpsl
jns
fiadds
ret
in
out
ljmp
add
sub
fistps
and
and
jbe
fimull
out
jle
es
inc
cld
test
xchg
insb
or
dec
test
push
test
sbb
sub
xchg
add
loope
test
fstpt
lret
xchg
lcall
test
and
dec
push
and
inc
push
push
std
xchg
cwtl
pop
xchg
test
or
adc
and
test
mov
and
out
pop
sbb
jns
addr16
test
inc
outsl
cmc
or
push
aam
stos
jecxz
push
xor
lcall
inc
ljmp
jo
jno
shl
sbb
ss
add
cmp
dec
xor
std
jecxz
shl
pop
mov
xor
sub
ret
push
lock
cmp
iret
int
add
daa
dec
sub
push
and
jns
enter
xor
cltd
mov
in
int3
dec
repnz
inc
fwait
or
xor
insb
or
icebp
test
dec
pop
sbb
pop
mov
adcl
or
mov
cmp
aaa
mov
mov
adcb
inc
inc
dec
testb
insl
iret
call
aad
leave
mov
test
and
cmp
std
xchg
lcall
sub
xchg
xchg
leave
imul
js
rol
leave
and
fwait
lahf
cli
mov
dec
jo
add
mov
mov
fistps
adc
fs
sbb
xor
mov
mov
mov
aad
fisttpll
dec
js
adc
push
push
mov
loope
into
loope
lods
clc
or
orb
inc
push
orb
push
push
lret
lret
lret
daa
dec
cwtl
sub
xchg
mov
cmp
and
nop
pop
or
mov
jae
mov
pop
mov
mov
cmpsl
out
mov
sub
add
mov
int
mov
dec
dec
rcll
cltd
data16
popw
in
mov
dec
mov
jns
or
xchg
mov
pop
mov
xor
sub
or
dec
inc
pop
xchg
ja
xor
dec
xchg
xor
mov
scas
pop
cmp
dec
mov
stos
inc
call
dec
pusha
mov
jecxz
aaa
cltd
leave
cltd
sbbl
pop
repz
xchg
mov
cld
mov
push
xchg
cmp
fldenv
mov
popf
sub
pop
sbb
push
into
or
lret
jge
bound
lret
ds
icebp
and
cltd
imul
push
pop
lds
jne
mov
xor
jmp
sbb
add
add
cmpsb
int3
and
mov
les
nop
and
jae
add
xchg
push
sbb
sub
test
sub
repnz
ja
loopne
lcall
sub
into
dec
jge
daa
dec
add
xor
orl
lret
insb
xchg
rorl
mov
mov
addr16
push
lcall
aas
mov
lcall
pop
jae
add
mov
std
cmpsb
jo
sbb
movsb
mov
mov
inc
repz
cld
mov
out
aas
lret
data16
rcrl
mov
arpl
xchg
xchg
adc
in
daa
pop
cmc
cmp
xchg
sub
ja
sub
sub
scas
lock
dec
xchg
push
lcall
loopne
sahf
pop
mov
out
into
xchg
outsl
lret
lret
fistpll
rcll
out
cmp
icebp
dec
push
lods
mov
sub
sub
or
sbb
in
lret
and
notl
jl
jns
lock
mov
cs
mov
test
push
pop
mov
call
outsl
ffree
in
pop
nop
jne
adc
outsl
lds
lret
fdivs
fisttpll
dec
sarl
adc
dec
scas
loopne
xchg
sub
pop
out
pop
sub
ret
ljmp
jno
mov
mov
inc
jae
and
push
jg
ret
pop
sub
dec
and
lods
popa
inc
rcrl
or
inc
call
faddl
fldt
lock
jge
cmc
stos
aad
scas
lock
xchg
mov
push
lcall
mov
xchg
jmp
std
int
dec
loope
push
fnstenv
cmp
rorb
inc
jmp
aam
mov
in
call
decb
and
xchg
pop
cltd
cwtl
std
clc
sub
leave
dec
pminsw
out
cmpsb
push
ret
cld
and
and
adc
pop
gs
hlt
xor
andl
arpl
ret
in
lcall
repz
mov
sbb
adc
iret
dec
jg
jb
rolb
test
and
lret
xor
mov
xchg
mov
daa
cmp
inc
scas
sbb
or
lds
mov
in
test
mov
sbb
add
jg
fst
std
rorl
mov
test
pop
push
and
push
push
jne
mov
jo
add
xchg
lods
shlb
test
loope
nop
dec
ja
cmp
add
movl
mov
pop
xchg
fnsave
pop
or
rcll
or
cmp
jl
inc
mov
xchg
rolb
es
fidivl
push
and
add
mul
fwait
mov
fsubrl
and
jl
stos
ljmp
andb
xor
int
add
fwait
xchg
mov
adc
inc
leave
pop
cmpsb
movsl
iret
andl
xor
aam
enter
mov
stos
add
mov
pop
inc
pop
sahf
in
push
cmp
ficoms
or
shll
add
js
jae
movsb
fistpl
adc
outsl
dec
movsl
mov
sub
xchg
out
ja
dec
cwtl
rcll
decl
xor
mov
xchg
out
es
adc
lcall
imul
pop
cmp
lds
lcall
pop
xor
cltd
mov
in
pop
stos
add
leave
sbb
rcl
adcl
dec
sbb
cmp
inc
nop
pop
add
pushf
add
repnz
iret
cmp
inc
jge
mov
push
and
xor
jo,pt
sbb
leave
xchg
xor
jmp
sbb
mov
or
cmpsb
stos
rcrl
jmp
jge
pop
rclb
xor
pop
jg
popf
add
les
sbb
xor
les
or
cmp
fwait
jg
pop
mov
fnstsw
cmp
jb
sbb
push
cmp
mov
lds
sbb
cmc
and
test
js
testb
out
and
sbbl
mov
jae
lods
pop
mov
push
xor
inc
popa
jmp
fstpl
and
lret
sub
test
mov
jns
dec
inc
lret
das
es
inc
jns
xchg
push
fdivr
pop
test
or
xorl
push
jmp
pop
imul
xchg
outsb
jbe
add
das
cli
xchg
movsb
fidivrl
cli
ret
xor
test
dec
stos
or
call
inc
jnp
popa
cmp
inc
mov
lock
sub
shrb
enter
mov
popf
mov
sub
ja
and
dec
stc
mov
iret
mov
pop
hlt
arpl
mov
mov
lahf
or
push
cmp
adc
inc
dec
pop
fidivrl
jns
fsubrl
xor
negl
bnd
into
ds
aaa
inc
jmp
das
push
mov
jo
rcrb
fbld
push
xor
and
add
sub
sub
stos
mov
pop
cld
dec
in
andb
sub
or
adc
cmpsb
mov
fsubl
or
pop
cmp
out
xlat
std
insb
ja
clc
fisubl
or
and
int
out
test
ja
sub
pop
test
jbe
dec
fdivrs
loop
test
imul
out
pop
or
out
les
bound
sbb
xchg
cmp
in
fildl
xor
stos
cmp
push
mov
popa
std
mov
test
cmp
inc
jne
or
or
push
cld
or
dec
decb
cwtl
cld
sbb
jg
jl
pushf
lods
adc
mov
xorl
xchg
syscall
mov
and
bound
push
addr16
adc
stc
ds
ror
ljmp
jb
jg
mov
daa
jbe
jl
loop
test
movb
inc
notl
imul
inc
mov
fisttpll
xchg
mov
dec
lds
mov
dec
mov
sub
push
in
pop
stos
jg
push
jge
mov
in
cmc
pop
mov
inc
dec
stos
outsl
push
mov
jbe
xchg
aaa
cmp
inc
jge
push
ljmp
into
adc
incl
dec
fs
js,pt
test
jge
sub
cs
cltd
out
movsb
and
and
pusha
or
lods
cmc
add
adc
cmpsb
shll
push
cmp
push
aas
push
fidivl
loope
insl
int3
lds
mov
daa
and
pop
mov
jmp
ret
imul
sbb
mov
testl
insl
ret
xchg
cltd
dec
sub
cs
movl
sbb
jmp
fmull
mov
xchg
mov
in
cltd
sbbl
jns
lret
or
lahf
loope
test
inc
jo
mov
lret
or
mov
daa
inc
xchg
add
jle
fnstcw
push
push
ror
sti
js
shlb
insl
cmp
xor
xchg
pushf
je
xlat
ss
fwait
cmp
jbe
and
xchg
pop
outsb
std
sbb
cli
add
cmp
insl
insl
movsb
test
stos
adc
mov
cmp
sti
cltd
cmovne
cli
fldl
lret
sbb
movl
sub
ret
outsl
jp
inc
outsl
js
cmp
push
xor
jo
add
daa
daa
pop
das
xchg
gs
push
cmp
add
lock
nop
imul
fisttps
stc
lret
mov
cli
mov
or
outsl
sti
pusha
xchg
cmpsl
adc
jg
xor
outsl
in
mov
xchg
adc
cmpsl
cmp
inc
pop
or
test
test
and
scas
jecxz
pop
push
iret
sub
andb
bound
add
dec
cmpsb
test
pop
mov
add
cmpsl
lods
jp
and
add
out
decl
sbbl
loopne
cmp
idivl
and
mov
sti
sbb
loop
ret
cmp
fidivrl
jns
int
pop
ds
mov
out
loop
xor
xchg
ja
int3
and
sub
int
mov
jo
or
fwait
fs
pop
out
xchg
aam
cmpsb
sub
inc
cmp
das
mov
cmp
lock
xor
imul
sub
xchg
cmp
push
jns
adc
test
mov
xlat
hlt
mov
fwait
inc
sbb
xchg
cmp
add
lcall
jo
push
sub
stc
sbb
pop
mov
mov
mov
sbb
imul
pop
jmp
pcmpeqd
pop
cltd
xor
cmc
leave
fcompl
add
outsb
xchg
sbb
xchg
mov
sbb
mov
jle
nop
xor
test
xchg
sbb
cmp
bound
mov
shll
cli
int3
aad
mov
jo
push
dec
dec
ljmp
mov
enter
mov
and
adc
rcr
mov
jnp
movsl
jb
daa
fdivrl
int3
mov
call
jae
das
sar
sti
imul
xorb
push
and
fmull
mov
hlt
in
call
dec
or
mov
add
xor
aad
sbb
lods
addr16
out
leave
bsr
mov
std
dec
add
pop
xchg
adc
xchg
cbtw
sub
sub
jmp
jg
pop
mov
sbb
cmp
test
mov
jecxz
push
sbb
js
and
dec
lret
push
and
or
sub
roll
inc
ret
pop
mov
lds
mov
and
loopne
mov
cmpb
lock
fwait
xor
xchg
push
lods
pop
jbe
jmp
mov
cmp
cld
mov
mov
push
ficoms
in
into
lods
popa
jnp
pop
or
sbb
jmp
aad
call
lods
ret
addr16
lret
xchg
testb
xor
add
xchg
mov
cmpsb
sub
xchg
adc
fs
lods
cmp
and
or
repz
jl
mov
inc
xor
push
scas
sahf
dec
pop
test
jg
xchg
fscale
add
push
shll
cmc
xor
sbb
mov
pushf
pop
in
subb
loop
fistpll
adc
test
xor
cmp
outsl
and
mov
pop
pop
lcall
popf
xchg
jo
imul
push
loop
in
push
pop
dec
mov
leave
or
xor
sbb
jne
dec
sar
dec
add
mov
imulb
lret
adc
and
dec
notb
mov
stos
cli
es
cmp
imul
loope
in
cmpsl
fucomi
inc
outsl
sbb
or
inc
cmc
pop
push
fisubrs
nop
add
mov
neg
test
xchg
cmp
inc
jnp
adc
in
or
pop
xchg
enter
pop
pusha
test
clc
add
ret
aaa
adc
sub
hlt
xchg
dec
pop
in
inc
mov
mov
sub
mov
add
test
xor
mov
add
loop
aad
imul
xlat
push
jg
lods
movsl
jecxz
imul
testl
sbb
mov
mov
push
xchg
cmpl
push
orb
and
shlb
mov
push
pushf
popa
ret
jno
push
mov
shrl
iret
jae
push
cmpsl
mov
mov
ljmp
jmp
bound
cld
sbb
shll
mov
mov
sahf
ss
or
mov
leave
aad
lahf
std
fmull
pop
inc
or
imul
mov
jge
clc
lock
shr
fisubs
sbb
daa
push
xor
mov
or
out
mov
mov
adc
shll
pop
sbb
lret
mov
enter
xchg
insl
sub
cmp
sub
push
sub
cmp
xchg
or
cmp
popa
mov
mov
xchg
out
push
hlt
es
repz
push
push
addr16
cli
push
call
jns
sbb
xorl
xor
ret
das
xchg
fnsave
mov
ret
arpl
xchg
btc
lret
das
ret
aas
inc
repnz
sti
lret
pop
or
fdivrl
mov
or
outsb
push
xchg
xchg
adc
mov
pop
dec
sub
into
daa
jle
jmp
jo
repz
dec
icebp
sbb
and
jl
mov
jo
and
or
xor
dec
inc
std
ret
ficoml
inc
mov
in
insl
js
mov
ss
pop
push
inc
or
push
cmp
cmc
sbb
lret
jo
loopne
or
movsl
push
repnz
icebp
xorl
push
cmp
sti
sahf
testb
dec
mov
out
pop
orb
mov
nop
lret
pusha
sub
xchg
dec
mov
sbb
mov
andb
sub
adcl
lret
pop
sub
sbb
frstor
cmpb
xor
or
xor
add
pop
hlt
mov
icebp
pushf
sahf
lret
test
aam
dec
mov
or
or
jns
aad
scas
hlt
add
pop
inc
inc
adc
xchg
jmp
imul
stos
test
mov
or
mov
inc
jg
sub
out
subl
sub
gs
repnz
cmp
jne
lods
lahf
aaa
or
push
adc
and
push
mov
pop
call
int
xlat
cmpsl
dec
jnp
mov
xchg
lret
add
aaa
ret
sbbb
jle
and
nop
popf
xchg
jb
je
in
xchg
cs
cmp
std
mov
mov
or
stos
cmp
repnz
dec
jae
xorb
popa
aas
in
dec
int3
xor
js
push
shrd
icebp
cmp
lods
imul
pop
mov
out
addr16
sbb
scas
lcall
popf
jle
gs
and
mov
cmpsb
push
jecxz
ljmp
stos
mov
jbe
xchg
test
mov
lret
mov
adc
in
pop
loope
imul
xor
mov
xchg
repz
xor
or
cmpb
fwait
inc
inc
and
shlb
pop
iret
lret
xlat
pop
lret
xchg
cmp
cltd
add
cmpsl
dec
jae
stos
in
scas
mov
mov
gs
cmp
jno
inc
pushl
cld
cmpsb
jns
mov
jge
inc
fisttps
push
dec
push
sub
int3
push
mov
push
in
sub
pop
fisubrl
sbb
xor
mov
mov
adc
in
mov
xchg
sub
loop
loopne
dec
jmp
paddsw
push
ret
cltd
inc
dec
mov
mov
inc
in
mov
shll
mov
push
loope
into
fisttps
mov
fildll
fists
xlat
in
push
es
dec
aas
add
je
aaa
es
mov
gs
xchg
ss
xchg
sbb
sub
loope
jns
fnsave
jp
jno
and
in
jle
pop
fimull
and
mov
outsl
jns
fsubs
or
xchg
mov
xor
dec
xlat
jmp
pop
in
push
lods
sbb
xchg
xchg
mov
inc
pop
xchg
and
ficompl
out
and
mov
mov
mov
jp
xlat
mov
adc
inc
xor
and
cmpb
push
pop
or
test
inc
test
cmpsb
clc
test
loope
mov
push
int3
test
cld
mov
test
dec
out
push
aam
icebp
jg
push
xchg
filds
and
inc
imul
mov
and
cmc
cwtl
rorl
movsl
imul
in
inc
int3
ss
stos
enter
loope
add
inc
pop
imul
mov
sub
stos
sub
bnd
punpcklwd
dec
inc
popl
fmuls
inc
lahf
pop
xchg
or
movsb
xchg
push
lahf
mov
add
rolb
std
pop
cmp
or
mov
arpl
dec
mov
push
subb
xor
cmp
sbb
ret
hlt
dec
pop
aaa
and
cmp
push
and
dec
data16
sbb
out
rorb
outsb
mov
jecxz
repnz
or
or
shll
testl
add
lds
sbb
lret
dec
add
mov
pushf
sub
lods
inc
mov
call
mov
adc
mov
aaa
insb
sahf
sbb
shlb
ds
or
imul
pop
into
adc
cmpsl
int3
subl
or
es
jge
jmp
dec
inc
pop
mov
jo
lahf
dec
mov
inc
fdivr
movsl
xchg
ds
andl
adc
testl
fstl
dec
inc
dec
inc
leave
enter
dec
fists
ljmp
mov
pusha
push
cmc
sub
movsb
sahf
adc
dec
ret
mov
fsubr
inc
ret
dec
dec
jb
xchg
or
push
cmpl
push
dec
push
leave
cli
aaa
mov
stc
inc
enter
pop
push
or
shr
bound
mov
pop
lahf
mov
in
test
mov
mov
ds
pop
int
and
sub
or
hlt
lods
mov
sub
jmp
ficomps
fwait
push
add
lcall
dec
test
lcall
inc
movl
jae
cmp
out
push
dec
sub
data16
xchg
lahf
ret
out
mov
pop
shll
push
mov
fwait
xlat
pop
inc
jns
push
jae
lret
out
out
inc
mov
add
pop
lcall
and
fwait
mov
inc
push
repnz
or
mov
and
lret
pop
pop
outsb
pop
mov
dec
xchg
dec
outsl
and
cmpsb
int3
cs
lret
mov
mov
jno
sahf
popl
int
push
push
mov
mov
push
out
fcom
scas
add
adc
and
movsl
sbb
mov
pop
iret
cmp
mov
mov
mov
and
repz
clc
mov
imul
or
push
dec
lret
jmp
pop
dec
ret
lret
arpl
xchg
ret
xor
mov
lret
lcall
xchg
pop
iret
insb
test
mov
and
shll
loope
and
xchg
dec
xchg
out
mov
jne
pushf
testl
mov
sub
pop
mov
xchg
add
sbb
push
insl
repz
mov
cmp
lahf
push
mov
jl
push
inc
clc
xor
jp
jmp
xor
sub
mov
lods
cltd
sub
jle
pushf
sub
xor
push
dec
mov
stc
in
mov
adc
int
stc
decl
les
xchg
xchg
jo
imul
repz
mov
stos
test
pop
lret
lods
inc
fs
lahf
mov
gs
test
rcrb
inc
xor
push
xor
xlat
xchg
sti
mov
outsl
push
test
cmpsl
cltd
and
push
and
aas
cli
inc
mov
push
mov
test
add
push
jo
mov
in
sbb
gs
aas
je
shlb
hlt
rcr
and
test
pop
inc
xchg
nop
and
xchg
mov
dec
lahf
jbe
jbe
out
movsb
xchg
mov
stos
mov
sub
mov
dec
mov
inc
xchg
cmp
xchg
sub
out
pop
sub
add
loope
roll
sbb
int
dec
cmp
adc
pop
push
lods
rolb
add
jecxz
loopne
rcrb
int3
pusha
add
jmp
lea
enter
in
insb
shrl
loope
push
js
cld
mov
sub
imul
mov
cmc
imul
andb
adc
inc
pop
cmp
xchg
mov
mov
inc
mov
loop
push
inc
mov
dec
sbb
push
arpl
adc
popf
xor
jbe
cmc
cltd
push
sub
enter
mov
iret
cmp
cmp
inc
test
call
adc
mov
loop
cmpsb
fsubl
lret
lret
mov
add
xchg
pop
cwtl
lock
sbb
mov
inc
inc
loop
and
cmp
aas
fsts
loope
fsts
or
jae
icebp
pop
test
mov
bound
std
out
imul
repz
lahf
mov
fcom
enter
cwtl
add
shll
jge
test
mov
daa
out
mov
cmp
fidivs
sbb
ret
sub
push
sub
rcrb
jnp
loop
aaa
mov
inc
mov
stc
xchg
push
ret
stos
leave
dec
or
test
mov
in
xor
outsl
leave
mov
cld
cmpsb
pop
pop
push
pop
cmp
in
in
xor
leave
out
aam
xchg
xchg
push
pop
outsl
xchg
xlat
sub
mov
fsubs
xor
ror
pushfw
xlat
xchg
sbb
adc
es
notb
xchg
xchg
sti
xor
daa
sub
or
int
adc
inc
dec
cmp
movsb
add
nop
ja
fisttpl
inc
cli
out
fiadds
jb
push
outsb
mov
fs
xorl
leave
fnstsw
mov
sbb
ja
push
fisttpll
mov
les
movsb
sbb
push
push
fs
imul
mov
xchg
arpl
mov
push
and
out
dec
inc
push
adc
cmp
push
add
lret
out
mov
fistl
cmpsb
out
mov
sbb
lods
int
fwait
cli
into
fwait
pop
jns
decl
mov
pop
icebp
aas
aad
inc
jns
les
ror
sti
stc
mov
in
pushf
sbb
xchg
dec
sbb
xor
sub
inc
cwtl
inc
xor
js
pop
cmp
sub
push
out
cli
in
cwtl
pop
out
insl
popa
inc
cwtl
xchg
xchg
jmp
dec
pop
xor
imul
push
fcoml
lods
jecxz
push
sahf
push
dec
inc
call
cmp
push
xchg
arpl
and
iret
inc
bnd
sbb
inc
lret
out
inc
push
push
sarl
xor
cli
imul
in
xchg
ret
out
and
push
test
leave
sbb
xor
inc
xchg
xor
das
cmc
inc
mov
out
sbb
cmp
fwait
hlt
mov
or
xor
inc
xchg
dec
adc
jp
lock
and
arpl
js
stc
pop
push
push
sub
cwtl
xor
stc
xor
jne,pn
xor
ds
lds
mov
fisubrl
dec
inc
sbb
adc
jl
fwait
lea
pop
hlt
mov
aas
cs
movsl
loopnew
and
pextrw
xor
mov
jp
repz
std
test
pusha
out
je
mov
mov
mov
mov
imul
insl
aas
mov
push
inc
jge
sub
jno
pshufw
fcom
scas
popa
push
pop
pop
jae
pop
pop
pop
mov
adc
xor
sbbl
xchg
cmp
aas
mov
inc
xor
or
xchg
push
xchg
mov
jne
xlat
jae
pop
outsl
aas
cmp
xchg
or
push
cmp
and
outsb
push
sahf
fidivrl
mov
pusha
sti
int
pop
mov
mov
pop
and
in
adc
push
shll
cwtl
adcb
and
outsl
mov
cltd
jmp
sub
push
sub
imul
push
push
popa
hlt
and
push
test
pop
inc
cmp
adcl
sbbl
xchg
cmp
sbb
or
stos
loop
popf
leave
and
add
movsb
pop
ja
inc
addr16
mov
ds
inc
negl
dec
insb
fnsave
lret
les
xchg
mov
sbbl
je
add
ret
cmpl
lahf
std
or
ljmp
pop
add
in
inc
adc
jl
mov
mov
in
mov
fwait
or
xorb
daa
shll
mov
addb
aam
aas
aam
idiv
mov
lds
and
jne
xor
insb
hlt
sub
pop
jne
mov
and
xor
movsl
mov
jo
mov
fldlg2
jmp
dec
test
andl
call
test
jmp
inc
fiadds
repnz
fsubs
xchg
adc
pop
adc
or
mov
test
adc
stos
movsb
notb
icebp
aaa
test
jae
push
push
add
test
adc
xor
cs
pop
push
mov
mov
call
pop
loope
mov
gs
xchg
div
cmp
inc
push
inc
pop
xor
test
movsl
inc
ja
ret
mov
ret
sub
push
daa
sbb
lahf
pop
outsb
test
popf
adc
push
and
mov
loope
pop
aaa
addr16
mov
inc
jb
inc
xchg
clc
inc
arpl
and
cmpsb
xchg
xor
ljmp
arpl
lcall
addl
or
adcl
outsb
jp
imul
aad
repz
frstor
jb
popw
mov
repnz
iret
and
dec
ret
popa
and
dec
hlt
jecxz
push
cmp
aad
and
out
ds
push
or
mov
mov
mov
fldt
test
stos
cmp
lret
add
fs
jp
jbe
aas
mov
movsl
add
into
adc
fists
cltd
rorl
push
iret
cmp
mov
mov
adc
imul
mov
mov
pop
mov
mov
jle
repz
mov
push
fcomp
push
test
inc
push
shr
mov
mov
sub
les
xchg
mov
fcomi
movl
movl
or
and
daa
iret
or
clc
sub
xchg
outsb
adc
notl
sub
testl
loopne
xchg
setb
adc
loop
pop
xor
jno
jp
repz
dec
sub
sarl
push
mov
sbb
ret
inc
push
std
jbe
mov
pushw
cld
lret
outsl
outsl
inc
xlat
xor
dec
jae
pusha
stc
xchg
das
aad
gs
pop
cmp
in
shrb
mov
mov
call
mov
daa
push
jbe
stc
cwtl
xchg
test
bound
cmpsb
lods
lods
stc
cltd
ljmp
jae
mov
sub
pop
or
test
adc
loopne
add
lret
iret
sub
in
mov
xchg
mov
mov
insb
movsl
xor
cmpl
jae
popf
mov
jge
cmp
add
xlat
xchg
or
and
lds
fidivrl
outsb
outsl
sbb
jl
lds
xor
cmp
jle
ja
sti
xor
push
icebp
insb
ret
pop
pushf
in
sbb
aas
dec
and
arpl
dec
jecxz
fiaddl
cmc
xor
ljmp
es
xchg
cli
shll
inc
and
sbb
jae
out
sub
stos
roll
jae
mov
inc
dec
clc
inc
and
lahf
jmp
xor
std
out
stc
mov
sub
and
dec
push
sbb
cld
or
stc
cs
test
or
pop
mov
ljmp
mov
cmp
and
shll
add
inc
loop
mov
faddl
lea
insb
mov
lods
xchg
shll
hlt
mov
jp
out
sub
sub
xlat
cmpsl
jle
aaa
les
jae
test
nop
lahf
jbe
xor
jmp
fmul
jl
inc
js
push
inc
or
sbb
clc
cmp
inc
out
dec
imul
fsubp
icebp
loope
fbstp
or
jmp
lock
and
stos
lods
or
cmpb
adc
pop
push
ret
imull
out
mov
jmp
addr16
jbe
xchg
test
repz
adc
cli
lcall
nop
pop
sbb
ljmp
mov
bound
push
stos
data16
cmp
insb
mov
sbb
inc
and
dec
cmpsl
cld
lret
jbe
outsb
shrb
sub
outsb
popf
rcrl
scas
cmp
cmp
pop
and
dec
cmp
pop
imull
das
mov
imul
mov
test
sub
imul
xor
stos
adc
data16
enter
and
mov
xchg
lea
nop
shl
andb
shrl
hlt
test
bound
pop
in
leave
arpl
dec
dec
int3
cmp
pop
jmp
push
xlat
add
cmp
jmp
sub
xchg
fucom
popa
lahf
jno
pop
ret
movsl
xor
cwtl
add
or
jg
int3
mov
repnz
adc
test
push
inc
sub
dec
cmp
xor
loop
cwtl
subb
push
jo
xchg
or
and
outsl
outsb
int3
mov
push
sar
lock
mov
subl
fcompl
or
or
shrl
imul
xchg
jp
sub
int
shlb
nop
mov
cmp
xor
clc
int
bound
mov
insl
lcall
xor
or
sti
loopne
pop
jo
dec
outsl
repnz
lret
sbb
cmp
loopne
cmp
std
icebp
nop
ret
push
sbb
and
pop
add
jge
sahf
scas
roll
xorl
inc
scas
dec
clc
ja
xlat
pop
fidivs
jecxz
fidivl
aaa
mov
aas
inc
mov
test
sbb
mov
mov
and
pop
pop
mov
call
fstpt
arpl
fmull
adc
in
cld
aad
scas
mov
inc
lds
imul
jb
scas
into
sub
push
xor
sbb
push
fnstcw
icebp
jg
cli
daa
sub
sub
nop
aam
push
or
pop
sbb
xor
stos
out
mov
and
or
add
push
and
out
sbb
pop
repnz
mov
fwait
xor
jge
loopne
mov
mov
mov
push
xor
xor
adc
dec
xchg
pop
fsubrs
dec
pop
loop
xor
mov
push
cmp
and
out
mov
jns
fldt
mov
dec
ss
sub
repnz
popa
pop
mov
add
push
incl
in
pop
mov
inc
jle
pop
mov
ret
sub
fcmovb
sub
mov
shlb
into
mov
movsl
lret
jmp
in
jno
sarl
adc
lahf
scas
mov
inc
sti
and
mov
out
shlb
stc
mov
fcmovnbe
movsl
add
adc
push
aas
sub
scas
push
dec
jl
lods
lea
mov
movsb
mov
mov
push
arpl
dec
xchg
xchg
mov
popf
add
mov
ja
in
test
inc
xor
pop
pop
jecxz
fnsave
int3
fisttpl
inc
xor
pusha
sti
mov
cmpsb
pop
xchg
test
or
mov
add
pusha
sbb
cmpsl
mov
mov
fidivs
call
jns
jns
mov
pop
fisubl
mov
mov
in
pop
imul
shr
cmp
push
fmuls
lds
sub
adc
pushf
fcmovnbe
mov
cli
xchg
clc
pop
nop
imulb
add
js
push
jno
stos
aam
add
loop
or
pop
pop
stos
inc
js
lahf
ljmp
or
loop
and
sub
sbb
xor
lret
cmp
or
mov
xlat
inc
jno
fst
fiadds
mov
aaa
scas
sahf
in
punpcklbw
dec
loope
jge
fistl
mov
xor
data16
shll
cmp
lcall
jp
scas
xchg
mov
push
leave
xor
fldcw
add
jmp
sbb
lret
popa
inc
scas
ja
pop
mov
pop
fstp
jecxz
and
ret
ja
mov
sub
stos
mov
test
adc
cs
mov
divb
cmp
rorb
aad
jnp
jge
mov
pop
and
sbb
cltd
jge
shlb
roll
dec
test
ds
or
or
cmp
jmp
inc
add
cmp
shr
mov
dec
imul
mov
ficoms
fnstcw
add
push
sarl
pop
out
enter
out
movsl
sub
and
and
cmp
bnd
fs
fadd
jo
mov
mov
jae
lahf
and
js
jno
std
mov
mov
xor
cmp
cld
mov
inc
pushf
mov
mov
jo
mov
fwait
pushf
cs
jg
cwtl
aam
jb
inc
out
outsl
lock
vinsertf32x8
jp
push
or
cmpsl
fwait
sub
pop
daa
adc
dec
push
sarb
cmp
dec
and
xor
das
out
popf
pop
push
fists
cmpsl
cmpsl
sbb
mov
fcomi
repz
sub
push
bnd
hlt
insb
xor
jns
sub
out
pop
inc
sbb
fstpt
ret
push
frstor
jl
dec
xor
into
arpl
outsb
movsl
lcall
cmp
sti
repnz
test
jmp
mov
popf
cmpb
lret
push
dec
cld
repz
stos
dec
popa
dec
cld
lock
mov
mov
xchg
mov
or
dec
inc
gs
xor
inc
out
mov
incl
xchg
mov
and
mov
cmp
into
sbb
xor
leave
dec
dec
jno
and
sub
das
loope
enter
xchg
push
pop
cmp
clc
daa
inc
or
lcall
sbb
push
pop
xor
mov
mov
pusha
into
inc
xchg
sbbb
inc
aas
stc
adc
call
add
aad
adc
inc
and
inc
orl
sarb
xor
push
jecxz
xchg
mov
cmp
das
xchg
data16
cmpsl
push
loope
adc
in
cmp
xchg
ret
gs
cmp
or
or
adc
mov
repnz
xchg
and
mov
sub
mov
aam
xor
sub
mov
addb
sbb
fimuls
test
dec
xchg
mov
xchg
and
inc
pop
pop
fsubl
sub
shl
popa
add
add
ficoml
add
pop
arpl
loopne
mov
jl
out
js
and
adc
jb
inc
add
lods
lldt
add
out
clc
mov
xchg
enter
push
mov
mov
daa
lock
imul
fwait
cmp
cmp
mov
ror
mov
fs
push
adc
pusha
push
sbbl
out
push
push
sbb
movsl
sahf
add
mov
arpl
cmp
fptan
pop
pop
loop
insb
mov
out
dec
iret
adcl
pop
fmull
sub
leave
mov
sbb
aas
shll
gs
arpl
stos
stc
movsl
pop
hlt
lea
cmp
clc
add
outsb
jne
cltd
clc
mov
pop
rclb
mov
inc
xchg
jecxz
xchg
int
add
ret
add
nop
inc
sti
push
pop
jnp
and
popa
xor
ret
pop
cmp
push
pop
mov
imul
inc
pop
inc
mov
adc
outsb
xchg
push
mov
pop
add
inc
mov
addr16
push
cmp
inc
imul
lahf
or
repz
push
dec
mov
push
es
adc
bound
sub
aam
aad
mov
popf
fsubs
in
inc
sbb
sbbb
jg
aaa
push
ljmp
out
popf
and
ljmp
lea
sbb
lea
mov
lea
mov
cmpsl
cmp
and
faddl
test
or
movsl
push
xor
stos
ss
shl
ss
shrl
jbe
lahf
or
les
jge
inc
or
test
mov
clc
cmp
mov
push
adc
call
movsl
push
mov
inc
pop
push
cwtl
lods
lods
dec
dec
adc
xor
mov
or
cld
ret
and
aam
or
mov
cmp
outsl
pop
adc
fcoms
sub
jno
test
adc
dec
insl
jnp
push
and
cs
iret
nop
ret
xor
mov
add
icebp
xlat
pop
cld
xchg
adc
lods
iret
pop
pop
shl
cmp
pushf
and
push
outsl
inc
add
and
int
arpl
cmp
xor
mov
mov
mov
sbb
ljmp
rcrb
add
aam
adc
lea
sub
js
xchg
in
mov
dec
cmp
dec
dec
cmpsl
cmp
pusha
hlt
cmp
push
mov
xor
arpl
into
adc
in
lock
pop
rcrl
cld
cmpsl
dec
adc
shrl
aaa
adc
mov
sub
push
xor
cmpsb
push
int3
sahf
sbb
cld
pop
sahf
mov
pop
mov
ret
pushf
lods
sub
ss
dec
pop
mov
xchg
dec
xchg
sub
pop
cmp
lea
xchg
in
xor
add
das
mov
enter
fists
dec
movsl
dec
ljmp
cmp
sbb
push
std
stc
std
loop
ss
popl
orb
sub
mov
push
cmp
mov
rcr
add
fwait
or
mov
mov
fs
stos
mov
fsubrs
adc
fwait
mov
lahf
addb
inc
in
add
sbb
sarb
sbb
jecxz
das
scas
test
jbe
inc
flds
dec
jge
add
test
lcall
mov
rcrl
subl
mov
mov
jecxz
adc
push
int3
mov
add
jns
sub
push
adc
movb
push
inc
push
inc
dec
cwtl
inc
loop
mov
mov
sbb
into
adc
out
dec
pop
cmc
stos
inc
mov
mov
loop
popf
loop
incb
mov
jle
addr16
cmp
dec
out
sub
jno
cmp
inc
adc
add
mov
mov
es
pop
inc
mov
inc
dec
sbb
push
and
push
xor
sbb
mov
jne
or
adc
add
mov
mov
jo
test
inc
ss
jl
xor
xchg
jne
ss
shll
push
jnp
xor
adc
sbb
mov
pop
mov
xor
loop
jl
aaa
adc
fcoms
sti
sbb
out
das
inc
jae
sub
hlt
enter
jno
test
sub
lret
dec
add
negl
inc
mov
sub
dec
ds
iret
cmp
push
sbb
mov
out
dec
daa
add
in
inc
and
jne
push
in
fstpl
nop
xor
mov
push
popf
mov
sarb
pop
adc
loopne
addr16
jp
push
lods
jp
inc
inc
and
dec
push
mov
xor
ja
mov
test
jmp
or
addl
leave
or
add
cmp
mov
lahf
loope
popf
lock
mov
lods
add
cmpsb
clc
int3
cmp
outsb
jle
lret
push
in
out
sub
notl
lcall
in
jnp
sahf
test
pop
fcomps
test
or
ds
add
and
movsb
and
cmp
test
push
in
lods
dec
and
ds
mov
lret
adc
inc
inc
mov
enter
push
lret
adc
in
pushf
pop
mov
loopne
repnz
sbb
fstl
outsb
adc
inc
xor
lret
adc
sbb
cmp
xlat
pop
push
dec
xchg
xor
or
cmp
sbbb
ljmp
rcll
push
or
das
jle
lcall
lds
fadd
ja
dec
xchg
repz
dec
incb
inc
cmp
add
xor
adc
incl
adc
inc
and
or
lret
push
lret
pusha
dec
mov
outsb
mov
int
out
xchg
fsubrl
jmp
dec
xchg
xchg
jecxz
rolb
fisubrl
jns
subl
mov
cmp
add
inc
dec
xor
pop
mov
outsl
mov
xchg
stc
sub
stos
divl
xchg
jo
pop
popa
sti
fcoml
jno
mov
inc
adc
xor
add
ljmp
enter
sbb
ss
mov
int
mov
sbb
pop
inc
lret
mov
add
hlt
cmp
and
ja
jg
pushf
adcl
sbb
jne
adc
and
rorl
mov
out
mov
mov
dec
sub
popa
push
add
pushf
and
mov
push
andl
pop
pop
movsb
int
dec
pop
addl
fisttpl
sbb
pop
fstpl
mov
aam
add
xor
movsl
mov
push
test
neg
stos
test
adcb
dec
testl
push
adc
cmc
xor
xchg
test
rcrl
cs
aas
incl
mov
fisubrs
popf
shrb
sahf
cmp
and
cmpsb
clc
xor
jbe
out
fsts
xor
out
add
push
dec
clc
cli
xchg
push
lret
pushf
push
fsub
inc
addb
sub
mov
jmp
fptan
dec
jno
push
jne
inc
fimuls
je
push
mov
scas
sbb
sub
push
mov
hlt
xchg
mov
pop
sub
ud0
mov
cmp
sbb
cmp
xor
mov
loope
mov
jp
sub
or
xchg
inc
popf
test
pop
inc
jp
mov
cmc
test
xchg
pop
outsb
inc
pop
popa
mov
ljmp
jl
push
cmpb
cwtl
jnp
sub
pop
and
stos
push
mov
dec
push
xchg
inc
jg
xchg
pushf
mov
aaa
push
push
sub
es
mov
mov
fdivs
ss
mov
xor
inc
push
mov
into
pushf
jge
lock
push
sbb
push
or
lret
jge
insb
jp
cmc
cmpsb
aas
inc
icebp
dec
sahf
sbb
mov
dec
data16
out
inc
adc
inc
mov
jne
push
jb
fistl
mov
inc
cmpsb
lret
mov
sbb
mov
xor
lods
mov
inc
dec
fcmove
add
std
arpl
mov
or
ss
dec
arpl
lcall
jmp
test
push
sbb
bound
rcrb
sub
or
jno
inc
add
mov
lret
and
inc
xchg
out
adc
in
inc
adc
and
mov
stc
aad
lea
lock
daa
pop
pop
fst
cmp
mov
push
jge
mov
push
in
mov
ja
mov
cli
jae
shl
mov
xor
outsb
sbb
add
cmpsb
jnp,pn
sbb
jbe
hlt
sub
or
push
lods
inc
jne
int3
mov
js
cmp
jb
into
push
xchg
push
in
sarl
adc
or
adc
scas
cli
ffreep
cltd
cmp
mov
outsb
or
adc
push
mov
sub
stos
or
mov
fldenv
cmp
jmp
andb
jne
mov
cmpsb
arpl
movsl
outsl
sbb
dec
sub
xor
js
and
inc
daa
in
loopne
add
jl
stc
cmp
std
and
movsb
repz
inc
push
in
push
sub
loopne
movsl
dec
push
cmp
sbb
gs
sbb
clc
aad
push
dec
loopne
pop
roll
xchg
lcall
pop
and
push
dec
out
xchg
nop
jbe
mov
jmp
add
int
xchg
gs
pop
call
jno
cmpsb
fiadds
jle
fidivrl
ds
jb
sbb
js
or
out
decl
adc
push
fs
mov
or
inc
xchg
mov
insl
xchg
loop,pt
lret
xchg
cmp
dec
fsts
mov
and
xor
fwait
or
sti
stos
mov
mov
sbb
xchg
loope
add
jle
xchg
pop
cmpl
sbbb
and
lret
jl
add
pop
jnp
popf
test
lods
out
ja
adc
imul
pusha
add
mov
test
test
in
outsb
add
inc
push
std
pushf
adc
or
push
jge
stc
in
addr16
fisubrs
or
push
into
jns
imul
push
inc
push
lahf
push
mov
mull
mov
out
enter
sbb
insb
cmpsl
loope
mov
enter
lds
das
xchg
enter
xchg
mov
sbb
vmwrite
dec
int
movsl
cmc
adc
fisubl
jg
pop
cld
es
mov
inc
sub
mov
rcll
adc
inc
inc
scas
in
movsb
aam
hlt
xor
cmc
jge
in
add
fcomi
inc
mov
jnp
dec
push
dec
mov
std
imul
iret
xchg
inc
lcall
leave
fisubs
inc
sbb
fnstcw
ja
cmp
iret
xchg
ds
call
mov
repnz
pop
mov
negb
push
add
push
sub
popf
dec
testb
out
dec
jg
dec
push
add
jbe
dec
xor
outsl
push
aad
icebp
lea
pushf
ret
push
xchg
add
cmp
add
sbb
adc
movsl
fsubrl
mov
xor
out
aaa
data16
imul
add
test
pop
mov
jp
push
rol
dec
mov
xchg
inc
cld
sbb
cmp
sbb
push
test
cltd
inc
insl
jl
cmp
lahf
dec
std
movsl
mov
jge
xor
lea
test
nop
push
pop
cmp
fcomip
cld
adc
cltd
ret
stc
into
xor
fldenv
lods
sarl
cmp
cmp
mov
adc
cld
lret
inc
les
jl
dec
push
sub
arpl
lods
and
lock
adc
mov
cmp
add
out
test
leave
fisubrs
and
add
add
cmc
jmp
fwait
adc
pop
inc
jo
in
int3
sub
gs
icebp
loope
jp
rolb
or
mov
jmp
inc
in
xchg
mov
inc
es
icebp
push
inc
into
jo
lret
cmp
push
lods
xor
mov
cmp
jnp
ds
repnz
sti
int3
sub
clc
xchg
add
add
sbb
popa
mov
fcoms
cmp
scas
fimuls
sahf
add
pop
lret
and
sti
ljmp
rclb
pop
adc
out
shlb
popa
mov
inc
cmp
dec
xor
xor
mov
imul
outsb
dec
adc
add
mov
pop
test
adc
cs
jo
pop
mov
dec
pop
cmpsl
mov
sbb
inc
jno
stos
stos
outsb
lock
je
lret
ror
jg
push
mov
cli
push
les
adc
mov
fistpl
mov
jmp
adc
or
push
divl
pop
stc
mov
int
int3
pop
mov
shll
sub
outsl
sahf
lock
faddp
xor
je
rcrb
aaa
dec
and
pop
scas
xchg
sbb
xor
jmp
shlb
int3
or
je
jge
lea
ja
mov
ficomps
cs
xchg
repz
pop
pop
jp
jecxz
shl
in
repz
mov
adc
ja
insb
shll
das
inc
pop
cmp
cmp
lods
loopne
ljmp
push
cli
jae
aam
aaa
sahf
add
mov
aaa
cld
or
lahf
and
dec
jp
nop
inc
cmp
mov
cld
enter
pop
dec
lods
pop
pop
sub
xchg
ljmp
dec
inc
cmc
aaa
je,pn
jl
push
or
test
jg
adc
pop
aaa
push
dec
int3
rcrl
and
adc
sbb
adc
das
mov
imul
xchg
in
cwtl
push
nop
lret
sarl
mov
lds
sahf
in
jbe
add
lock
fucomp
test
inc
sbb
add
and
push
in
sub
shl
adc
je
pop
cmpsb
dec
push
lock
inc
arpl
mov
mov
stos
fildl
fildll
ljmp
mov
stos
inc
or
adc
sbb
jle
int3
mov
adc
inc
pop
out
pop
inc
mov
repz
xchg
cmp
test
adc
pop
push
push
out
shlb
jmp
inc
in
cmc
addr16
mov
stc
out
lds
lcall
popf
sti
add
xchg
movsl
cld
filds
hlt
push
lock
xor
je
arpl
inc
jb
andl
or
cmp
aam
iret
mov
repnz
xchg
loopne
push
inc
orb
and
iret
ret
imul
mov
add
ret
inc
arpl
dec
lods
cmpsl
and
pushf
inc
leave
xor
jb
aas
mov
cmp
loopne
outsb
mov
jmp
inc
out
out
lods
popl
mov
ret
pusha
mov
hlt
mov
aam
dec
push
add
addr16
inc
mov
inc
sbb
dec
pop
jmp
sbb
mov
call
lret
in
ret
test
mov
jns
shr
sbb
xchg
pushf
iret
mov
mov
pop
stos
mov
xlat
lcall
push
jns
dec
test
or
scas
dec
push
pop
mov
xor
daa
and
pop
add
out
rep
into
aas
push
dec
gs
or
lret
popf
inc
adc
cltd
lcall
cld
pushl
loopne
das
ret
cmp
int3
leave
fmuls
mov
mov
out
push
mov
and
lret
xchg
fdivrs
push
jmp
lea
and
mov
mov
jmp
fisubs
mov
in
sbb
xlat
stos
dec
std
mov
fnsave
rcll
pop
out
arpl
fidivl
cmp
cmp
fwait
les
sbb
push
je
fists
sbb
push
movb
xor
orb
lds
jno
and
mov
jnp
sub
in
mov
jb
sub
arpl
fnstenv
pop
push
cmp
cmpsl
pop
jmp
sub
push
rcll
lcall
leave
mov
dec
cwtl
test
xchg
inc
adc
inc
mov
ret
negl
aas
mov
push
decb
mov
cmp
pushl
lods
jp
sahf
xor
and
scas
daa
mov
and
sbb
lock
xlat
icebp
pop
lret
mov
cmp
adc
add
dec
push
mov
and
data16
sub
rolb
and
cmp
out
clc
adcb
mov
add
cmpsb
push
xor
in
stc
fnstenv
in
xor
je
add
jge
jbe
cmp
in
xchg
pop
mov
push
int3
fs
cmp
add
jp
add
enter
movsl
ja
mov
fimull
cli
sti
test
push
arpl
sarb
scas
subb
sbb
pop
repnz
popl
fcmovnbe
popa
adc
fs
or
mov
or
pop
inc
repz
rorb
movsl
xor
jmp
loop
jns
fldcw
dec
cmpsb
ret
mov
sbb
lcall
xorb
jae
test
inc
xor
jmp
insb
xchg
cmp
jnp
nop
insl
out
dec
rcr
js
dec
test
jl
inc
int
xor
pop
out
sub
popa
push
or
mov
lock
lods
dec
sbb
fs
repz
and
stc
frstpm(287
jno
mov
xchg
jmp
xchg
cmp
stc
notb
or
in
add
clc
scas
adc
jg
adc
inc
in
add
jns
mov
pushf
push
xchg
jne
cmp
jmp
das
and
xchg
or
adc
and
and
xor
hlt
stc
aas
lret
aad
jnp
sub
xchg
pop
mov
lds
ja
int
loopne
pop
jg
bound
call
shl
mov
fdivrp
jbe
nop
xchg
test
gs
daa
pop
scas
jno
jae
rcrb
xor
fisubl
loopne
jae
cmp
jmp
leave
nop
js
xor
mov
imul
mov
loope
ss
mov
ja
sti
jle
xor
xchg
cld
in
pop
leave
inc
push
imulb
ja,pt
js
cwtl
movsb
dec
add
mov
ja
cli
lcall
andl
stos
xchg
pop
inc
cmc
jle
cli
sbb
shrl
inc
add
cmp
in
inc
xorl
and
mov
dec
into
lea
lret
or
stos
lcall
and
mov
and
loopnew
xor
inc
push
xchg
lret
shll
cs
bound
ds
mov
adc
fstps
loop
cmp
sub
js
imul
dec
jne
inc
mov
repnz
lods
mov
ss
pop
mov
cld
jle
pusha
xor
push
rcl
rcrb
icebp
sub
icebp
roll
mov
cmp
push
xor
rclb
inc
ss
js
jg
cmp
mov
stos
stos
in
ja
inc
jecxz
test
inc
and
lret
bound
iret
add
mov
or
mov
cld
cltd
push
mov
xchg
inc
mov
clc
das
call
repnz
mov
imul
scas
js
arpl
ss
out
daa
call
cld
in
xlat
or
sbb
push
fcmovne
push
rcrb
sbb
negl
xlat
pop
test
scas
dec
outsb
mov
arpl
sub
add
push
sti
insl
stos
aam
ljmp
lcall
push
and
mov
or
mov
jmp
cmpsl
ret
or
inc
adcb
cmc
mov
popa
loopne
gs
stos
stos
sub
push
ja
stos
mov
jne
cmp
jp
and
loop
inc
or
xchg
cmpsl
fcmovnb
fidivrl
cltd
ds
pop
mov
ss
ds
call
adc
jge
or
leave
fisttps
repz
xchg
hlt
out
and
sbb
mov
dec
mov
jno
jmp
pusha
push
aad
mov
jb
inc
ja
push
push
loop
hlt
jp
sbb
add
xchg
inc
cmpsb
jmp
sub
push
pusha
pushf
push
in
in
test
cwtl
sub
push
jo
sbb
dec
xor
jne
push
pop
cmp
push
pop
js
mov
or
jp
sbb
push
mov
mov
push
insb
rcrl
add
mov
shr
or
test
lcall
das
pop
mov
shl
cwtl
push
lret
xchg
and
push
inc
or
adc
rorb
test
xor
push
call
mov
hlt
cwtl
or
test
lods
imul
mov
jge
adc
ret
subl
jne
dec
jb
xlat
add
fdiv
mov
add
cmp
aam
int3
ds
xchg
fs
dec
in
es
lret
in
jo
popf
cmc
inc
push
or
scas
jnp
pop
jb
pop
aam
loope
add
addr16
aad
movsl
adc
test
jno
in
cmp
stos
xchg
mov
cli
shll
cmp
and
cmp
pusha
addr16
pop
jl
dec
adc
or
jp
out
pop
mov
cmp
pop
dec
dec
pushf
flds
jnp
mov
sbb
and
fistpll
pop
sti
fadd
out
xchg
ljmp
icebp
in
mov
add
imul
stos
fildl
sbb
mov
icebp
cmp
adc
add
xor
dec
xchg
fstps
in
mov
pop
and
push
mov
scas
jg
and
xchg
adc
iret
sub
push
add
push
push
imull
adc
and
mov
mov
xor
mov
das
sub
dec
mov
sti
iret
sub
out
or
rcr
fistl
sub
xchg
into
mov
test
in
adc
adc
fstpl
add
pop
cmp
aas
scas
idivb
add
pop
xchg
mov
clc
push
xchg
test
hlt
pop
xchg
lock
xchg
push
shrb
hlt
inc
xor
pop
shlb
pushf
sbb
xchg
fcmovnu
subb
popl
or
outsl
mov
xchg
lret
pop
rclb
xchg
and
in
ret
std
test
push
sarb
addr16
fs
fistpll
and
call
mov
pop
pop
jns
jno
sub
mov
cmp
mov
in
and
push
adc
push
cmp
ret
std
les
push
sub
pop
push
fwait
pop
popf
lock
or
dec
pop
jp
mov
pushf
and
rorb
push
xor
pushf
inc
cmp
xchg
movq
cmp
lret
outsb
cmp
ljmp
inc
push
add
inc
ja
xor
repnz
jl
stc
xlat
jmp
sub
xor
dec
loop
add
daa
pop
mov
addb
push
ret
xlat
jge
pop
std
ds
push
pop
out
sbb
ja
incb
jno
add
bound
movsl
and
push
pop
sbb
xor
adc
in
rolb
loopne
aad
adc
fcmovbe
fdivs
jns
mov
or
push
inc
mov
pop
pop
push
jge
push
inc
int
stos
enter
sbb
les
add
xchg
dec
mov
fnsetpm(287
movsl
and
mov
xor
fstps
in
arpl
lret
xchg
cs
les
push
mov
jae
cltd
mov
xchg
cmp
pop
in
pushf
inc
inc
mov
enter
xchg
aaa
call
and
dec
call
lods
xlat
inc
xorl
lret
loopne
dec
stos
mov
add
or
dec
lds
dec
movsl
clc
mov
xchg
push
push
mov
scas
aam
and
pop
sbb
add
or
out
dec
arpl
lods
in
cmp
cmp
mov
out
pop
pop
aaa
push
add
notl
dec
push
mov
test
mov
lods
or
pushf
push
gs
lock
daa
cwtl
out
pusha
mov
mov
jg
add
xlat
dec
repz
shll
sub
mov
test
xor
lcall
push
scas
ss
arpl
inc
imul
inc
ffreep
out
push
cmp
fldenv
in
add
cmc
loopne
je
dec
xorb
push
adc
xlat
jmp
rorb
xchg
cmp
imull
out
adc
push
xchg
mov
adc
clc
sahf
ss
repz
and
inc
ret
dec
ss
inc
into
out
es
aaa
leave
cmp
and
mov
decb
pop
hlt
rcr
lods
dec
xor
push
xor
lcall
fldcw
or
inc
in
mov
minps
loop
jo
addl
add
jno
adc
mov
das
je
jnp
clc
mov
sahf
fstl
fs
inc
subl
call
pop
ret
inc
and
xor
sahf
iret
repz
es
mov
dec
push
outsb
enter
ds
dec
fisubrs
rcrb
pop
jb
sbb
cmp
dec
push
jnp
and
test
lea
or
int
jne
sbb
movsl
and
xchg
testl
lds
mov
sub
out
xchg
out
cmp
std
jp
negl
mov
pop
jl
shlb
push
push
mov
mov
loopne
pop
inc
and
inc
jmp
xchg
rorl
cmp
mov
adc
or
aas
mov
lds
pop
inc
mov
sub
scas
lahf
cmc
jecxz
mov
cwtl
xchg
out
pop
js
push
mov
mov
int
and
sub
test
test
xchg
or
stos
stos
mov
fisubrl
lcall
xchg
icebp
pop
cmp
push
inc
pusha
xor
inc
ss
call
or
and
fistpl
mov
inc
frstor
xor
adc
adc
test
cmp
rcl
call
pusha
aad
dec
loop
in
jo
cld
adc
repz
popl
mov
sahf
or
push
or
or
sub
ret
fsubrp
jno
mov
dec
mov
mov
and
pop
sahf
andl
into
repnz
out
outsl
xchg
or
imul
cmp
or
inc
add
inc
lds
lods
not
aam
popf
jge
pop
lldt
jns
data16
and
hlt
js
cmpl
int3
aas
add
fnstcw
mov
dec
es
cld
jecxz
mov
pop
add
jno
lds
and
fbstp
cmp
mov
test
xchg
dec
dec
ds
dec
mov
leave
push
inc
stos
test
repnz
sub
sub
mov
clc
loop
xlat
ficomps
push
jge
lret
sub
and
fucom
mov
call
sbb
int3
or
clc
push
push
cmp
pop
lods
mov
inc
jmp
rcr
and
adc
mov
int
jge
loope
lods
ficomps
out
jo
push
mov
test
sbb
lret
out
or
xor
mov
push
loop
daa
xchg
out
sub
push
pop
test
lret
push
sub
jno
pop
incb
or
clc
cmp
push
stc
icebp
jmp
ror
mov
xchg
sarb
pop
and
jg
test
stc
fwait
incl
xor
addl
xchg
jmp
add
orb
imul
xchg
xchg
lret
shl
outsl
adc
js
mov
adc
mov
popa
inc
and
mov
push
das
sbb
sti
sub
iret
dec
fsubrl
ret
cli
fsubrl
and
movsl
jb
pop
shll
loopne
in
add
add
add
inc
adc
xchg
add
fcmovu
repz
fnstsw
add
dec
push
push
daa
outsl
lret
adc
in
xchg
insl
and
dec
jo
cltd
adc
insb
or
inc
mov
rep
mov
jb
mov
fiaddl
jae
rcrl
sarl
dec
or
icebp
pop
mov
push
mov
pop
pop
mov
add
jno
push
xchg
pop
shll
jmp
imul
mulb
gs
or
cmp
daa
adc
add
mov
push
lret
adc
sbb
bnd
out
sbb
pop
arpl
stc
in
iret
jns
mov
jl
sub
in
out
and
in
inc
cs
jb
dec
pop
arpl
xchg
aas
pop
jb
push
loope
push
lds
repnz
xorb
cli
iret
cmp
repnz
xor
jo
das
xchg
popf
cmpsl
std
sbb
inc
out
fwait
sbb
neg
cld
sbb
adc
inc
icebp
popf
xorl
lret
sbb
stos
mov
ljmp
repnz
add
add
aam
pop
out
fsubrl
sbb
lods
rorb
popf
jmp
popa
or
xchg
insl
addl
jno
clc
into
mov
std
cmc
negl
mov
pop
imul
jmp
cld
pop
insl
loope
push
es
xchg
and
mov
es
pusha
fistps
cmp
or
sub
jg
push
sub
and
jmp
daa
adc
jnp
sbb
mov
mov
shrb
sahf
add
push
jo
mov
mov
adc
mov
cmp
lret
rolb
aas
xchg
and
loop
repnz
mov
sub
insl
mov
inc
ret
and
jle
roll
dec
addl
pushf
push
pop
es
mov
in
icebp
sub
leave
pop
adc
or
xorl
cli
pop
mov
movsl
mov
inc
call
mov
or
movsl
lcall
ds
sti
shlb
mov
cwtl
push
sbb
push
jb
pop
stos
sub
add
std
clc
jg
iret
adc
lea
push
out
repnz
fdivrs
jmp
cmp
push
jmp
push
add
sub
cmp
pushf
push
call
fmulp
outsl
pusha
cs
pop
dec
jg
lret
test
or
mov
pusha
dec
mov
push
leave
xorl
pop
lods
in
mov
nop
mov
pop
push
push
loope
daa
movsb
adc
jnp
rorb
push
push
jl
out
imul
bnd
dec
sub
lret
xor
adc
ja
bound
adc
lods
cmpsl
enter
enter
pop
test
xchg
pop
loopne
sarb
jbe
ja
mov
push
into
cmp
cmpl
outsl
xor
lock
jns
mov
imul
std
or
inc
cs
inc
pop
or
pop
sbb
mov
cltd
outsb
mov
xor
cmp
or
sub
cmpsl
pop
mov
dec
cmc
mov
add
ljmp
imul
and
out
fildll
push
shl
xchg
xchg
stc
rclb
push
aaa
adc
shl
jmp
inc
adc
push
lea
dec
sbb
mov
idivl
jge
cmpsb
sub
mov
xorl
int3
xchg
js
fcoms
lock
test
cmc
pop
fstps
test
call
inc
es
jge
mov
push
stos
enter
lea
das
call
popf
std
inc
cmpsl
stc
or
bound
push
and
xchg
test
dec
mov
enter
or
pop
cmp
pop
ss
cmpsl
push
scas
or
mov
jg
jne
out
enter
lods
mov
cmpl
mov
inc
js
xchg
inc
xchg
sub
andb
repnz
jnp
inc
lock
lods
sbb
or
lret
push
scas
mov
fidivl
div
cltd
je
lock
cmpb
mull
xchg
iret
and
push
enter
dec
cwtl
sbb
push
in
lds
out
cmp
andb
push
push
shlb
add
or
cli
xor
or
dec
add
jnp
lea
rcr
jo
loop
inc
imul
fmuls
fincstp
sub
cltd
fs
adc
shl
push
arpl
push
sbb
and
cli
ljmp
lods
jp
test
xchg
push
jo
mov
fimull
sbb
pop
sub
jg
std
sbb
das
inc
hlt
adc
adc
inc
mul
and
xchg
cli
lcall
ljmp
cs
mov
cld
aad
leave
sbb
fisttpll
shll
fistpll
dec
cmp
add
pop
adc
mov
push
cmp
subl
add
in
movsl
rcrb
push
mov
cmpsl
cmp
pusha
fs
push
pop
or
add
jl
adc
dec
xchg
or
sub
inc
mov
popa
push
pop
cltd
je
push
fbstp
into
mov
rol
enter
jl
inc
aam
mov
lods
push
push
lcall
or
mov
pop
stc
in
das
test
shrb
mov
jae
fisttps
ret
xor
fs
sub
cmpsb
inc
push
call
sbb
scas
arpl
rcll
fcompl
adc
cwtl
jge
ds
mov
or
mov
xorb
out
aaa
les
add
jmp
arpl
lods
add
ror
and
inc
aad
test
lahf
test
inc
mov
scas
dec
mov
cmp
sbb
push
mov
ds
push
or
xor
cmc
inc
test
movsl
loope
add
dec
jbe
or
dec
and
insl
scas
fildll
mov
mov
adc
dec
mov
iret
push
clc
cmp
movsb
fwait
out
arpl
roll
mov
iret
add
movsl
inc
orl
call
ss
jnp
ds
xorl
xor
nop
jb
bound
xor
cld
fnstcw
adc
iret
cmp
mov
ret
shlb
or
cld
cmp
std
push
inc
jle
and
lea
add
movsb
popa
movsl
aaa
sbb
mov
mov
push
stos
addr16
xchg
dec
clc
mov
fwait
jp
lret
adc
xchg
ficompl
rorl
pop
pop
adc
cvtps2pd
rcl
xchg
jge
xchg
add
xchg
enter
dec
push
ret
in
repz
pop
mov
stc
out
mov
sahf
cs
mov
adc
or
lret
lea
or
xor
andb
push
mov
push
leave
pop
imul
fwait
xor
mov
sar
lcall
xchg
xor
data16
cmp
sbb
in
mov
popa
or
outsl
popa
loopne
mov
test
mov
stc
mov
cld
dec
pop
adc
scas
adc
sbb
inc
test
lret
int
pop
pop
imul
push
inc
dec
stc
movnti
call
pop
ficoml
push
xchg
std
aad
adc
mov
in
mov
int3
xor
xchg
cmp
jmp
jnp
arpl
int
push
jnp
in
mov
push
notl
lahf
lods
sbb
and
xchg
sub
outsl
mov
and
jecxz
addb
sbb
stc
pop
mov
sbb
mov
cltd
popa
mov
and
aas
dec
inc
mov
daa
lods
xor
push
test
fbld
incb
or
add
push
lods
out
rclb
lods
loop
inc
movsl
pusha
scas
jmp
data16
pop
leave
mov
movsb
stc
pusha
lds
jb
mov
repnz
ljmp
into
std
dec
dec
aas
lret
scas
mov
std
sti
loop
je
sti
out
fbld
inc
frstor
daa
cmp
xor
push
xchg
cli
fistl
mov
cltd
jg
or
shlb
push
scas
jns
popa
insl
fs
push
mov
xor
and
iret
popa
int3
test
mov
idivb
gs
arpl
add
mov
fs
sub
inc
scas
mov
add
mov
xadd
cmp
xorl
pop
push
aad
and
fldl
fnstsw
xlat
shll
test
js
mov
outsl
pop
sub
icebp
mov
cmp
lret
pop
stos
pop
pop
out
or
cmc
dec
testb
push
dec
cmc
mov
mov
and
jae
jns
test
cmp
sub
int3
mov
adc
pop
pop
sub
dec
jmp
jle
mov
addr16
pop
cmp
shlb
cmpsl
dec
mov
or
mov
and
jle
scas
mov
pop
and
iret
jecxz
fld
jo
rclb
adc
add
mov
lods
shlb
mov
pop
insb
int
mov
xchg
movb
sbb
push
push
testb
sbb
fcoml
ret
aas
cmp
les
dec
ret
xchg
inc
mov
bound
leave
jp
inc
dec
xor
sbb
int3
mov
sub
cmp
mov
mov
jb,pn
jo
enter
mov
jecxz
mov
adc
xchg
adc
jo
dec
dec
cmp
imul
sar
jmp
call
jp
and
pop
rcrl
testb
test
jg
ret
push
mov
xchg
mov
sbb
cwtl
loope
loope
lcall
lea
and
inc
popa
sarb
aaa
pop
cmp
dec
xchg
mov
int
ficoms
dec
jge
or
dec
lods
inc
pop
in
test
in
orb
incl
mov
push
cmp
xchg
mov
mov
adc
xor
popa
push
push
and
cs
and
pop
and
add
mov
push
sub
jb
cld
sahf
sarb
pop
jae
add
out
call
xchg
adc
adc
movb
negb
mov
ret
out
shl
push
push
testl
dec
push
mov
mov
jecxz
int
jmp
xchg
and
in
push
jle
clc
addl
lock
inc
or
test
mov
in
ret
aad
fistpl
loop
outsl
shrl
popf
inc
aas
push
shrb
mov
jo
lock
mov
jnp
xor
or
jne
and
pop
lret
push
lcall
push
inc
pop
sub
xchg
inc
in
hlt
or
inc
push
pop
push
cmpsl
shr
fsubs
cmpsb
sbb
popl
loope
pop
jmp
xchg
cmp
inc
mov
mov
test
fimuls
cmp
out
sbb
pop
jmp
incb
andps
data16
push
outsl
jbe
mov
out
fmuls
bound
dec
xchg
mov
mov
xorl
les
clc
je
mov
or
jnp
out
dec
jns
out
in
test
lcall
sarb
xchg
add
cmp
repz
mov
cmp
sbb
out
jl
ljmp
lret
jae
nop
shlb
mov
xchg
out
out
inc
ss
jl
mulb
sti
hlt
pop
jb
lock
sahf
push
cmp
int
push
sub
fcompl
out
jmp
sub
xor
lock
and
leave
pop
push
inc
imul
jae
mov
ss
sbb
subl
inc
sub
mov
inc
pop
xor
loop
mov
sbb
xor
test
mov
les
jae
mov
std
jle
scas
popf
add
dec
ljmp
or
xchg
inc
inc
imul
insl
rol
lcall
lcall
mov
lret
push
das
xchg
fwait
and
fucomi
mov
mov
into
xor
out
lcall
insl
rorb
sti
aad
push
lcall
std
xlat
in
push
mov
push
push
jns
mov
jecxz
rclb
mov
jg
movsb
mov
int
mov
adc
cli
test
stos
pop
lcall
es
stos
ret
out
pop
mov
test
push
xchg
xchg
enter
iret
mov
xor
fwait
stc
cmp
addr16
push
dec
mov
int3
call
push
pop
aas
or
ficoms
push
cmc
or
dec
push
pop
ret
add
or
dec
out
test
mov
out
loopne
push
in
clc
fcmovu
cwtl
mov
inc
insl
fildl
push
out
addr16
ror
xor
push
hlt
and
or
sbb
mov
call
push
das
dec
sar
push
pop
mov
or
jp
xor
shll
mov
in
or
pop
into
enter
and
popl
cld
daa
loope
mov
mov
cmpsb
fbstp
inc
mov
es
lock
mov
scas
sub
ljmp
jecxz
mov
xlat
jg
mov
or
testb
xor
rcrb
mov
jo
mov
push
loop
sbb
add
movsl
mov
pop
daa
cmp
add
mov
and
cmp
push
sub
pop
xchg
ljmp
and
add
fisttpll
notb
insb
ja
shlb
das
cmp
dec
dec
cmpl
sbb
rorl
pop
add
das
mov
pop
scas
xor
sub
fstps
add
loop
aas
pop
inc
cmp
addr16
sub
dec
fucom
xor
lret
push
sarb
xor
stos
divb
fisttpl
ja
cli
andl
mov
xchg
ss
ret
dec
add
sti
loop
xor
xchg
std
stos
mov
xlat
popf
inc
mov
cmp
imul
rcl
lcall
xchg
or
cld
xor
xchg
stos
fisubrl
or
sbb
dec
add
add
gs
xor
push
rcl
ljmp
stos
adc
jne
je
dec
mov
pop
int3
repnz
or
frstor
add
sub
jge
loope
jo
xor
cmp
insb
dec
mov
cmp
shlb
imul
jne
loopne
cmp
xor
gs
call
cmp
fld
lds
sub
mov
mov
lret
mov
push
cmp
popf
xchg
inc
pop
xchg
lods
and
cmp
clc
push
inc
mov
in
mov
sbbl
es
pop
mov
mov
jb
or
xchg
lock
adc
lods
adc
lock
push
mov
add
clc
aam
frstpm(287
and
adc
dec
in
sub
popa
lods
sti
icebp
mov
decb
fstl
dec
sbb
mov
mov
iret
cmp
mov
xchg
xlat
adc
or
push
sbb
mov
loopne
daa
sub
cmp
jne
or
sbbl
add
jp
xor
iret
mull
test
or
push
icebp
cmpb
or
test
add
fistpll
test
das
lods
or
int3
icebp
orl
rolb
lock
and
mov
sahf
xchg
add
and
mov
mov
xor
ret
sbb
push
outsb
sahf
movsb
add
ds
dec
fs
add
lods
cmc
cmp
inc
fwait
and
call
pop
js
jp
rclb
cmpsl
loope
das
jbe
xor
and
inc
jns
es
xchg
movsl
fnstsw
add
cld
sahf
push
imul
add
xchg
adc
aam
cmpsb
cmp
jmp
push
adc
or
push
andl
inc
test
jl
xchg
cmc
and
pop
scas
test
insb
adc
and
fsubrs
test
shr
fwait
jge
roll
in
aam
add
sub
mov
insl
mov
test
cmp
jbe
les
aaa
xchg
dec
in
adc
insb
sub
adcl
pop
xor
or
push
xlat
xchg
jecxz
sbb
aaa
jbe
into
and
fcoml
sub
sbb
ficompl
mov
jns
and
in
outsb
cld
sub
std
jnp
fisubrs
push
lea
adcb
loope
imul
mov
sub
subl
add
aam
imull
fstpl
nop
sbb
cmp
mov
mov
insb
pop
movsl
pop
xor
cmp
fisubrs
xchg
fisttpl
mov
xor
out
dec
outsb
pushf
xchg
dec
xchg
dec
imul
es
add
and
push
aad
sub
mov
lret
mov
add
dec
aaa
test
test
sbb
add
subb
testb
aaa
lods
jo
sub
jo
sub
nop
sbb
insl
sbb
inc
xchg
xchg
dec
dec
rolb
sub
ss
dec
pop
and
mov
aam
push
push
xor
jbe
mov
xchg
adc
jns
sub
sahf
popf
shll
push
les
and
pop
or
cmp
adc
mov
into
mov
cld
fstps
les
inc
fisubs
pop
sbb
sti
jl
out
add
mov
aad
jns
sbb
add
cli
scas
aam
and
dec
mov
sbb
and
xor
jnp
xchg
mov
ret
push
jb
add
xchg
imul
addl
ret
test
sbb
inc
testl
push
jmp
mov
mov
pop
or
into
addr16
add
xchg
leave
mov
cmpsb
cli
cs
leave
shrl
rorl
xchg
pop
fbstp
test
in
xchg
push
jnp
outsb
xlat
clc
mov
mov
ret
xchg
sahf
inc
xor
jmp
push
sti
push
adc
xor
xchg
outsl
jo
andb
lret
mov
mov
test
xlat
jnp
push
xchg
and
cltd
rcrl
mov
outsl
setp
sbb
adc
cltd
enter
ljmp
adc
mov
hlt
inc
out
pop
mov
test
mov
inc
popa
in
movsb
dec
xor
mov
in
mov
fbstp
inc
mov
xchg
mov
mov
sarb
movl
xchg
pushf
jne
scas
cwtl
sbbl
mov
mov
mov
fsts
mov
dec
mov
xor
int
out
subb
pop
lret
inc
sub
mov
mov
pop
push
subl
repz
jno
mov
jg
pop
mov
out
sub
sub
add
je
cmp
jmp
cmp
or
add
xchg
xor
dec
stos
cmpsb
xchg
xchg
push
outsb
sahf
sbb
or
daa
int3
mov
fldln2
clc
repz
adc
imul
mov
push
in
dec
je
dec
lret
sub
dec
or
jo
dec
add
mov
pmuludq
adcl
cmc
cmp
or
lret
cltd
ret
xchg
jb
xor
inc
test
sub
mov
scas
incl
jns
outsl
sbb
out
in
and
stc
mov
mov
push
and
sub
adc
imul
pop
mov
stc
mov
and
add
inc
mov
mov
xchg
xchg
mov
cltd
sub
jmp
loope
sbb
adc
inc
sbb
or
pop
data16
jne
mov
dec
fbstp
mov
mov
jl
cmc
les
enter
dec
and
cmp
mov
dec
mov
out
push
scas
adc
daa
scas
jae
xchg
stos
push
jge
xchg
inc
or
cmp
lret
and
sub
clc
loopne
or
and
jecxz
lret
add
xchg
jge
mov
pushf
xorl
xorl
sahf
xor
and
lahf
lods
inc
mov
add
pop
xchg
add
iret
test
hlt
pop
xchg
cmc
cmp
icebp
xchg
cmp
push
pop
incl
push
shlb
and
nop
shr
pushf
push
shl
mov
inc
inc
pop
jle
dec
and
mov
dec
ja
andb
rorb
xchg
dec
push
pushf
movsl
cwtl
mov
or
data16
inc
add
sub
and
push
push
or
xchg
adc
insl
pop
mov
cmp
in
in
adc
sub
jb
or
and
into
xchg
jnp
cmp
mov
out
mov
mov
pop
adc
arpl
push
xor
mov
outsl
inc
push
and
cmp
sub
and
lahf
stos
dec
sbb
pusha
js
jb
jbe
push
sub
call
pop
pop
iret
dec
into
leave
rcl
mov
adc
jno
and
sub
add
movsb
addr16
sub
adc
sbb
push
xor
lahf
mov
jecxz
inc
aaa
movsl
call
shrl
lds
frstor
mov
dec
dec
dec
lock
shrb
dec
push
rolb
repnz
fs
dec
push
jno
pop
mov
mov
push
jae
rol
cmp
rorb
adc
out
pop
fisubl
imul
aas
push
xor
inc
outsl
xor
lods
xchg
and
pop
sbb
test
js
sub
movb
mov
mov
inc
push
addr16
xchg
mov
int
mov
leave
stc
loop
jle
repz
mov
cmp
cld
mov
add
xor
sbb
in
sbbb
inc
cli
lods
loope
pop
cltd
sbb
mov
mov
aam
pop
mov
xor
cmc
out
pushf
mov
stc
aam
leave
div
fimuls
lcall
mov
cmpsb
daa
repnz
inc
jmp
adc
sbb
adc
add
jno
or
adc
and
adc
movsl
add
push
movsb
sub
add
out
test
xchg
sbb
fistps
fidivs
xor
sub
mov
add
rcrw
and
movb
mov
and
negl
add
mov
push
fwait
xorl
jno
idivb
lahf
sub
adc
insb
pop
cmp
xchg
lods
or
sbb
dec
push
mov
int
arpl
stos
fdivp
pop
push
inc
sbb
or
test
stos
jne
ja
arpl
jecxz
or
imul
cli
aas
sbb
mov
mov
inc
add
push
lods
fistpl
rcr
mov
leave
in
mov
pop
call
mov
addb
push
arpl
iret
adc
xchg
push
inc
cmp
pop
das
jne
jo
cs
lcall
outsb
repz
ja
popf
inc
cmp
mov
sub
repnz
cmpb
mov
imul
add
ss
imul
hlt
in
sbb
and
data16
lods
ficomps
sbb
inc
je
jns
es
sbb
inc
loop
cs
inc
inc
jne
pop
add
lea
and
adc
push
aam
mov
jbe
dec
les
push
fwait
lea
inc
popa
fstl
mov
cmc
out
stos
out
add
cmc
gs
cli
pushf
adc
out
inc
test
ret
pusha
ret
stc
cmc
cmp
outsb
iret
jno
lret
in
push
sbbb
out
inc
loope
dec
mov
mov
sub
cld
jmp
das
add
and
dec
sahf
cwtl
push
pusha
mov
or
mov
dec
push
pop
rcrb
idivb
data16
mov
or
add
in
leave
push
pop
lcall
mov
xchg
mov
xor
sub
push
inc
push
rcl
int3
adc
add
jb
pop
push
ljmp
es
dec
orb
fcoml
out
ds
shl
les
jecxz
adc
outsb
ja
mov
jp
test
sub
stos
in
push
fsts
mov
lahf
pop
in
xor
cmp
in
xor
pusha
fdivrs
mov
push
xlat
rclb
cmc
sub
xchg
lret
cmp
mov
test
lahf
mov
inc
rcrb
jle
lahf
xchg
imul
lret
orl
xchg
sub
fdivs
xchg
bound
call
push
sbb
xor
fcompl
dec
mov
scas
fstpl
push
cmpb
inc
jae
clc
pop
add
add
aas
dec
push
pop
fs
fsubs
rcrb
adc
lret
orps
adc
xor
cs
test
fistps
iret
xor
ljmp
into
popl
xchg
subb
mov
and
xlat
and
add
push
inc
inc
loope
test
push
xchg
sub
outsl
mov
jno
leave
sarb
and
add
adc
xchg
test
cld
sub
inc
dec
push
dec
pop
push
push
xor
inc
push
stos
gs
icebp
push
pop
jne
ret
xlat
or
xor
addr16
or
inc
and
inc
push
dec
imul
mov
cmpsl
mov
push
fwait
psubw
divl
mov
test
jle
aas
iret
adc
out
cmp
xchg
sbb
xchg
sbb
add
mov
sbb
or
xchg
test
adc
aad
jg
adc
mov
jge
jno
push
or
shl
pop
insl
nop
pop
addb
xchg
xchg
xor
mov
sbb
mov
sahf
mov
fadds
mov
pop
push
lret
jne
call
ljmp
mov
nop
clc
xchg
sarl
mov
int
cmp
adc
movsb
test
scas
cmpl
inc
pop
or
ja
jb
xor
jmp
add
or
aaa
cmpl
push
loop
mov
loope
mov
ljmp
mov
mov
test
shrd
idivb
aas
push
inc
lcall
fwait
cmp
mov
sbb
call
pop
inc
and
cmp
lock
inc
inc
addr16
mov
movlps
fcoml
int3
mov
das
and
addr16
inc
in
xchg
cmp
cmpps
scas
cmc
add
mov
mov
push
sub
sub
sti
jle
aaa
jge
sbb
movsb
out
cld
cmp
pop
cmp
dec
or
pop
dec
cmpsb
pusha
push
iret
and
sbb
hlt
aad
adc
add
outsb
xchg
mov
xchg
je
mov
xchg
push
imul
or
jmp
jo
push
insl
in
fisubrl
adc
aaa
xlat
mov
sbb
mov
ret
popa
adc
test
stc
call
jb
rorl
fwait
scas
int
add
push
aaa
and
mov
jl
add
cmp
xchg
cli
pushf
jle
xor
adc
adc
xor
xchg
popa
inc
stc
xor
popf
ret
clc
sub
inc
adc
insl
push
add
dec
cmp
jae
cmpsl
add
adc
cmp
and
sub
sarb
mov
or
out
inc
mul
pop
call
xor
xchg
test
dec
ds
ds
js
cmp
cmpsl
pop
jo
subl
xlat
ret
push
xchg
icebp
sar
popl
mov
in
xchg
aam
int3
test
les
inc
mov
pop
fs
jae
add
out
push
aas
inc
scas
pop
hlt
pop
jo
pop
cmpb
int3
adc
lret
out
ret
lds
lret
pop
sbb
mov
dec
roll
ljmp
inc
sub
fldenv
cmp
pushl
cmpsl
aas
fdivrl
cmp
jne
jnp
and
lret
seta
and
cmp
mov
pop
mov
lret
xchg
or
pop
lods
adc
sub
pop
loopne
int3
xor
rcll
imul
inc
insb
mov
sbb
fs
gs
insb
jne
mov
cmp
je
int3
push
gs
xlat
mov
jge
mov
dec
dec
clc
jns
data16
push
inc
push
pop
mov
xor
and
mov
adc
movl
sub
push
scas
fldt
arpl
sbb
test
pop
ret
std
add
xchg
ds
fldln2
idiv
jge
fistpll
call
mov
xchg
xchg
cs
imul
pushf
adc
and
lret
loopne
stos
loope
mov
or
xchg
roll
movsl
fptan
sbb
inc
scas
bound
scas
sub
orb
pop
cmpsl
sub
lahf
scas
stc
or
leave
pushf
and
and
mov
pop
hlt
push
into
mov
mov
inc
cltd
inc
dec
jmp
les
arpl
mov
movsb
das
ja
cmp
insl
nop
add
std
or
outsb
xchg
inc
call
out
outsl
aam
loopne
push
mov
movsl
jb
in
dec
leave
enter
ja
sbb
loop
push
arpl
adc
sti
mov
rorb
stos
lcall
cmc
or
push
lea
dec
and
xor
shrb
sbb
xchg
dec
ffreep
or
cmp
or
dec
andl
cmpl
aam
mov
push
adc
sbb
popf
and
push
jl
test
adc
pop
es
fldcw
and
into
in
int
pushf
adc
gs
fbld
jbe
shlb
cmp
inc
in
sub
push
pop
faddl
mov
incb
pop
scas
rorb
jp
mov
adc
adc
push
imul
and
nop
mov
pop
mulb
jg
adc
xlat
cwtl
insl
loop
mov
cltd
push
mov
jl
push
in
arpl
or
in
pop
push
lret
fsubp
scas
push
sub
bound
shll
and
std
loopne
sub
mov
xchg
scas
out
scas
nop
fdivr
or
inc
scas
fdivrs
ja
in
scas
xchg
push
inc
and
sub
xchg
adc
or
sub
dec
aad
dec
cmp
push
pop
cmp
cmp
mov
inc
sub
adcb
nop
dec
mov
cmpsb
gs
pop
insb
cmp
and
push
push
push
xorb
jbe
and
jo
inc
test
fidivs
pusha
push
cmp
push
ret
fildl
sub
das
jecxz
js
pusha
gs
aaa
decb
mov
xchg
outsl
and
jae
inc
and
sub
sub
mov
inc
cli
and
cli
and
stos
mov
mov
dec
mov
imul
mov
adc
adc
divps
lcall
addr16
or
mov
inc
hlt
adc
pop
loope
loope
mov
test
dec
mov
push
shrl
imul
jle
aas
scas
inc
fidivs
pop
dec
jno
dec
jns
rcrl
cmpsb
repz
xor
mov
shl
es
scas
mov
aam
add
push
mov
or
loopne
push
dec
adc
pop
jge
pop
ret
pop
jo
push
js
inc
popa
pop
ja
dec
iret
inc
outsl
mov
in
mov
jne
cwtl
aas
lea
pop
mov
dec
inc
ss
lcall
popf
xchg
mov
dec
test
cmp
test
push
or
in
push
pop
out
daa
jg
fmuls
dec
stos
inc
cltd
inc
jbe
inc
popa
adc
cmp
mov
outsl
pushf
adc
cmp
or
lar
leave
push
lea
pop
sbb
push
iret
mov
stc
or
mov
pop
lods
fucomip
pop
outsl
fisubrl
out
pop
push
mov
cmc
loopne
cmc
adc
scas
cmpl
push
push
sahf
mov
out
xorl
in
int
xor
xor
or
lods
call
mov
jg
lods
cmp
cltd
mov
sub
cmp
clc
cmp
sti
dec
mov
lcall
sbb
dec
std
insb
in
cmp
insb
add
mov
ret
pop
mov
lea
push
mov
pop
push
mov
xchg
cld
fiadds
inc
fcomps
loope
push
sub
sub
mov
les
mov
xor
cmp
sahf
repnz
sbb
xchg
mov
movsl
aas
pop
pop
inc
jne
pop
and
rcr
stc
std
xchg
push
in
scas
add
mov
lods
cli
sti
mov
test
pop
dec
outsb
fcomps
leave
rolb
xchg
addr16
add
shll
test
push
sub
mov
bnd
ss
cltd
mov
dec
pop
and
sahf
lea
mov
out
jmp
jb
loopne
sbb
mov
inc
repz
gs
push
mov
lds
fsubr
cmp
aad
scas
orb
fld
and
movsl
setge
ds
jae
pop
cmp
lcall
dec
int
fnstenv
inc
repz
leave
movzbl
push
inc
test
mov
pop
dec
mov
out
fmul
mov
cmc
in
pop
add
mov
iret
dec
pop
nop
scas
mov
sbb
std
into
aam
out
loope
xchg
mov
sahf
and
mov
lock
adc
mov
jns
iret
cmpsl
das
fcomip
mov
adc
pop
pminsw
xor
mov
rcll
push
dec
sahf
mov
xchg
aas
stos
das
jmp
aad
imul
sbb
arpl
or
popa
addr16
jne
shr
scas
clc
out
push
dec
jmp
nop
fists
in
cmp
jno
fisubrl
jle
jno
in
das
fstp
pop
imulb
push
dec
or
stos
mov
bound
pop
jecxz
stc
mov
jle
jno
push
scas
int
sub
ret
scas
mov
xor
ficompl
jle
mov
icebp
xchg
dec
sbb
lods
xor
sbb
outsl
push
imul
inc
dec
xchg
dec
icebp
xchg
mov
cmpsl
jl
and
jbe
xor
dec
loopne
pusha
dec
xor
jge
test
mov
push
jno
jns
pop
sub
cmp
jns
xchg
adc
aam
sti
imul
daa
sub
scas
fdiv
sbb
dec
cs
and
sbb
jge
jb
idiv
xchg
cmp
push
or
call
hlt
sub
xlat
leave
fistps
and
stc
shl
adc
xchg
sbb
paddsb
xlat
xchg
or
mov
loope
out
std
in
adc
or
mov
push
mov
cltd
inc
mov
dec
push
hlt
or
cs
lea
cmpsl
mov
dec
mov
mov
push
pusha
popf
xchg
cwtl
daa
lea
push
xchg
cmp
mov
testb
or
xchg
xchg
pop
push
lret
xchg
shll
sub
test
test
and
inc
or
loope
jp
je
cltd
shl
mov
jp
jo
adc
mov
sti
cmp
outsb
test
cmpsl
xchg
lret
adc
clc
je
hlt
inc
and
mov
int
pop
push
jo
inc
out
inc
cmpsb
mov
push
lret
mov
sarb
add
leave
mov
lods
mov
cmp
inc
aam
in
lods
and
rclb
sbb
dec
jge
movsl
xchg
adc
popf
das
lcall
xlat
outsl
ds
into
fadd
mov
shll
sbb
shr
pop
xchg
bound
mov
aam
lods
fisubrl
xchg
cli
mov
xchg
mov
xchg
xorl
dec
sbb
push
add
add
sahf
cli
loopne
push
pusha
cmp
xor
push
sub
ds
in
cmp
jae
cs
pop
jmp
or
inc
pop
std
orl
loope
mov
cmp
outsb
rcrb
inc
sti
ljmp
out
ss
push
or
xchg
push
push
xlat
lahf
push
jmp
inc
lock
mov
sub
jns
ss
shr
xchg
lahf
sbb
jecxz
jno
dec
jb
push
or
into
inc
sahf
cltd
xchg
icebp
pop
mov
cld
test
push
fstps
cmpsb
dec
repz
add
nop
xchg
mov
ss
and
nop
fdivrl
xor
out
pop
insl
popf
sbb
jl
push
jnp
push
hlt
dec
mov
sub
inc
das
shrl
cmp
inc
cmc
aaa
cmp
inc
sbb
aaa
cmp
mov
mov
repnz
test
ja
fildll
cld
xchg
adc
outsl
lcall
jbe
sub
sbb
cli
int
mov
lods
outsb
xor
jecxz
es
sbb
sahf
mov
loop
add
lods
imul
push
leave
out
sbb
ret
pop
stos
jp
shrb
scas
cmp
fistl
jecxz
xor
and
pop
sub
fsubl
push
xor
inc
fldt
movsb
scas
cmp
push
jecxz
rdpmc
sbb
jnp
mov
imul
lcall
lods
jp
adc
xchg
ljmp
lds
or
pop
dec
inc
xchg
fdivr
dec
mov
pusha
xchg
add
jae
adc
sbb
pop
lret
js
add
xchg
cmpb
sub
ds
mov
dec
loope
sbb
iret
mov
insb
mov
cmp
xor
inc
mov
sub
std
push
add
fimull
xchg
subb
xor
adc
rorl
jl
inc
add
pop
pushf
jg
daa
or
inc
push
xchg
mov
sub
scas
cmpsl
push
cmp
les
inc
mov
push
movsb
dec
lock
cmp
cmovl
inc
lret
and
insl
lcall
pop
jle
lss
icebp
fs
lret
mov
push
bound
xchg
lret
outsl
decb
mov
dec
insl
dec
pop
lods
mov
mov
mov
rol
sub
stc
mov
out
movsl
jle
sub
pop
push
xor
lahf
test
add
inc
mov
jp
lcall
cwtl
mov
mov
jl
cmp
inc
xlat
gs
rcrb
stos
mov
les
dec
mov
xor
inc
mov
mov
cltd
add
mov
or
sbb
cs
jle
dec
dec
leave
lds
xchg
and
add
dec
icebp
mov
ficoms
flds
mov
and
push
cli
pop
xor
popf
subb
mov
cmp
insl
jg
adc
jg
mov
lahf
xor
jmp
push
or
push
pop
adc
push
rorb
testl
addr16
dec
test
aaa
sti
mov
jne
sbb
jmp
test
push
ss
into
add
scas
jo
sbb
cmp
out
enter
cwtl
sar
clc
scas
movsl
mov
xchg
mov
stc
xor
jecxz
jg
and
lret
cmp
jge
or
add
mov
cwtl
bound
sbb
inc
push
test
mov
xor
shlb
rolb
sub
cmpsb
or
jo
or
adc
mov
call
in
or
and
sub
hlt
frstor
xchg
lds
movsl
lret
pop
inc
mov
mov
rcrb
out
das
popa
das
mov
je
imul
mov
mov
sub
call
fisubl
je
and
sbb
inc
jae
push
ja
out
xchg
mov
aad
repz
fmuls
popa
pop
bound
movsb
mov
fadds
std
xor
lods
inc
cmp
fists
lods
sub
sar
insb
push
or
sbb
pop
mov
jns
pop
std
dec
push
sub
cmp
jmp
sub
call
push
adc
jne
js
pop
add
arpl
xchg
pop
loop
mov
adc
ret
push
popf
sub
xor
add
xlat
pop
sub
out
es
adc
sti
decb
sub
out
push
cmpsb
lea
loope
sbb
addl
dec
and
xor
add
sbb
shll
aaa
testb
inc
cli
mov
stos
cltd
sbb
addr16
xor
dec
andl
jle
or
out
aam
inc
jmp
push
pop
and
ficomps
hlt
stc
push
iret
sbb
insb
rorb
fimull
pop
and
mov
sub
jmp
dec
sub
mov
ss
ds
sub
ds
jle
clc
idivl
or
inc
mov
mov
mov
jb
mov
xlat
sub
fdivs
lcall
gs
aas
pop
mov
jl
cmp
jecxz
cltd
lret
inc
and
cmpsl
xchg
jp
bound
shl
cmp
in
movsl
push
mov
pop
inc
test
daa
mov
sbb
imul
stc
shr
sbb
cmp
movsb
mov
push
dec
mov
add
pop
lods
and
out
clc
push
push
pop
insb
sub
cmpsb
insb
sbbl
mov
inc
add
inc
push
jno
inc
inc
mov
and
aam
mov
in
inc
jg
jecxz
dec
sbb
xchg
mov
sub
jnp
and
xchg
pop
gs
mov
jns
adc
ret
cltd
icebp
fcom
fstpt
inc
push
clc
lret
push
pop
mov
mov
sub
insb
nop
xor
imul
jl
cs
xchg
sub
push
mov
cmp
or
movsb
popf
int
mov
mov
gs
in
add
cli
int3
inc
dec
mov
mov
pop
rorl
ret
loopne
repz
pop
sub
xchg
xor
fwait
lods
roll
dec
stos
cmp
adcl
adc
enter
dec
ja
insb
mov
insb
and
mov
je
and
aaa
fdivrl
xchg
data16
add
popf
mov
cmpsb
fisubrl
movsl
pusha
out
aas
mov
out
gs
add
cmp
orl
addl
pop
addr16
inc
mov
dec
lret
loopne
mov
insl
jl
repz
imul
les
neg
push
jo
sbb
adc
arpl
imul
jo
orl
repz
bound
mov
outsb
mov
and
mov
sbb
arpl
outsb
outsl
inc
mov
xor
je
push
pop
jle
sub
leave
mov
push
popf
aad
daa
icebp
icebp
std
mov
push
mov
mov
xchg
gs
test
xor
fdiv
and
arpl
add
std
xchg
jl
or
fimull
outsb
fwait
and
insl
xor
loop
jbe
imul
test
outsl
sub
in
xor
into
lret
dec
cli
fs
insl
sarl
fdivs
and
push
call
ss
ja
vrsqrtps
inc
mov
repz
xchg
and
mov
cmp
or
repnz
es
sub
insl
adc
daa
std
in
mov
add
mov
jo
adc
xchg
push
out
xorb
std
xor
sub
push
push
sahf
pushf
and
stc
push
ljmp
pop
notb
int3
and
cmp
push
push
lock
js
scas
out
rclb
aam
ds
nop
test
cmp
je
sub
in
push
jns
adc
and
fdivs
lods
stos
add
pop
cmp
push
sub
pop
outsb
mov
cmp
mov
lret
in
mov
test
sbb
mov
mov
xor
and
and
jbe
mov
nop
xor
inc
in
xlat
push
add
shr
jp
rcll
jnp,pt
add
xlat
fcomps
int
jae,pn
xchg
test
insl
repnz
mov
std
rol
mov
lahf
sub
pop
pop
test
jb
or
push
test
xor
xchg
and
sar
fcoms
cmp
fldenv
jae
decl
iret
test
mov
mov
sub
mov
int3
jg
pop
xchg
pop
mov
push
pop
cmp
ret
in
imul
ljmp
mov
movsl
xchg
add
rcll
icebp
movntq
into
cmp
or
sub
jle
sub
jp
push
pop
ljmp
lods
cwtl
add
sub
pop
xchg
dec
lds
out
push
icebp
lds
aad
push
sbb
sub
push
mov
insb
fstpl
dec
leave
sub
jle
or
push
sub
test
xchg
pop
jl
xchg
dec
and
rorl
push
into
mov
mov
fstps
mov
dec
mov
jmp
aaa
jp
jno
push
pop
daa
scas
fxch
fists
aaa
jle
mov
andb
lea
pop
out
and
pop
fchs
dec
shll
gs
idivb
sub
push
popf
xor
out
dec
repnz
mov
mov
push
sub
xchg
test
push
es
push
cmp
dec
pop
and
pop
loop
lock
mov
nop
in
bound
les
and
cli
mov
data16
movsl
ds
xchg
das
mov
pop
xchg
cwtl
dec
cmpsl
or
add
imul
sbb
lock
inc
fucomp
pop
jne
pop
or
jo
lds
mov
test
mov
adc
pusha
outsb
lret
fldenv
adc
xchg
jge
add
mov
mov
mov
insl
push
add
mov
lock
in
jno
sub
cmp
add
mov
cmpsl
into
xchg
icebp
mov
mov
push
sbb
pusha
in
movsl
add
scas
pop
jne
shlb
add
incb
ret
and
ja
dec
sub
test
push
push
sbb
add
sub
adcb
inc
xor
dec
fisubrs
xor
xor
loopne
mov
mov
xchg
arpl
push
aad
rcll
aad
push
cld
cltd
cmp
repz
lods
neg
js
lahf
xor
iret
arpl
push
push
lods
test
inc
mov
std
ds
jmp
loop
popl
jno
ss
stc
cld
or
int3
inc
ja
and
jo
sti
cwtl
pop
jp
cmp
dec
scas
push
std
pop
and
add
dec
dec
test
sbb
and
stos
clc
push
push
in
cmpb
mov
jle
add
and
and
sub
rcl
gs
cltd
mov
or
mov
adc
adc
ljmp
add
push
inc
fcomps
loop
stos
inc
fmull
mov
fisttpll
or
mov
mov
inc
mov
add
jp
push
loop
mov
jg
clc
push
iret
push
jae
je
enter
ss
and
in
shrb
outsl
lods
outsl
pop
cmp
inc
mov
js
mov
cmpsl
xchg
xchg
movl
aam
or
push
add
ds
es
fistpl
sarb
mov
cwtl
lods
test
jmp
xor
and
xlat
add
cwtl
adc
mov
adc
lea
out
lcall
jno
fisubrl
mov
xchg
pop
in
ss
sub
mov
movsb
pushf
pop
int
xchg
sub
adc
aaa
or
mov
cmp
loope
jb
test
das
add
mov
jnp
jo
lods
jge
cli
jge
mov
or
cltd
iret
lcall
sbb
cmp
inc
out
mov
jo
jge
and
xor
mov
insb
dec
shl
fists
sahf
shr
data16
push
pushf
sub
enter
cmp
mov
in
dec
clc
or
sub
mov
rep
push
mov
add
ror
into
mulb
scas
jae
scas
repz
pop
sub
jno
xchg
add
xor
ret
cmp
push
inc
xor
lea
lret
adc
cmpsb
jns
push
mull
pop
sbb
movsb
nop
sub
jb
test
adc
addr16
aaa
aam
mov
add
cmp
mov
jmp
test
pop
imul
push
or
mov
in
fisttpll
into
add
or
mov
pushf
testl
pop
cmc
sahf
xchg
or
fidivs
js
pop
rdtsc
movsl
pop
leave
addb
or
call
repnz
sbb
mov
push
xchg
mov
cld
adc
push
push
scas
incl
cs
ss
leave
rolb
add
int
fildll
jno
jno
xor
mov
push
icebp
adc
sbb
movsl
or
and
mov
and
push
cmp
xor
pop
test
lahf
cmp
xor
xor
jge
test
push
loope
and
mov
gs
sub
loope
pop
cmpsb
pop
mov
xchg
stos
nop
push
cmc
inc
cmpb
add
push
jnp
in
inc
out
ficompl
roll
adc
faddp
xchg
ret
cs
and
cmpsb
jg
stos
adc
test
fistps
aas
sub
adc
mov
lret
pop
fdivrl
xchg
cmp
or
push
incb
jecxz
cs
inc
div
push
add
pop
movsb
adc
imul
and
enter
rorb
mov
sbb
leave
sub
mov
stos
mov
rolb
ljmp
sar
scas
inc
xor
cwtl
xchg
lret
call
pop
fs
mov
iret
dec
sub
jnp
pop
mov
add
mov
xchg
mov
sub
xlat
or
xor
add
mov
pop
repnz
and
rorb
push
sub
push
push
stc
cmp
pop
mov
xchg
fstpt
mov
test
shll
insl
lahf
pop
xchg
fisttpll
mov
mov
mov
fcmovu
imull
hlt
pop
sbb
shrl
fsts
dec
jne
xlat
popf
ret
and
shr
adc
ljmp
add
mov
icebp
mov
inc
or
cwtl
jb
daa
jns
mov
push
movsb
arpl
push
das
fwait
jle
mov
or
mov
and
xchg
sbb
ret
lock
mov
mov
jmp
and
int3
inc
xor
add
mov
pop
push
in
inc
fldenv
ja
sub
xor
addb
int3
xorb
out
pop
aaa
mov
mov
jae
mov
dec
push
xchg
mov
clc
aam
loop
scas
push
leave
outsl
pop
std
testb
inc
xchg
js
mov
and
inc
pushf
idivl
cmp
xor
insb
call
jmp
mov
in
lcall
push
out
repnz
cmpsb
xor
dec
xorb
xchg
xor
enter
dec
repz
xor
cmp
test
or
movsl
lea
jbe
shlb
test
popf
sbb
xchg
es
out
ss
and
jl
xchg
add
je
fadds
daa
cmpsl
leave
rorl
and
add
xorb
inc
pop
int3
sub
aad
xchg
jp
sbb
sbb
and
ret
pop
test
loop
mov
pop
inc
cwtl
add
jne
jle
mov
mov
rcrl
stos
xor
in
and
enter
sbb
adc
dec
jg
popl
or
push
cs
test
test
clc
cmp
cmp
jnp
inc
rorb
dec
out
incl
mov
in
test
mov
scas
fmuls
mov
adc
mov
out
mov
fs
cmp
lds
mov
rol
xor
cli
dec
sbb
sahf
imul
adc
mov
xlat
stos
cmp
fimull
xor
scas
push
xchg
xchg
cmp
jne
arpl
jmp
bound
out
push
and
cmp
mov
jns
clc
sbb
xchg
fstps
pop
cltd
push
call
adc
adcb
mov
push
scas
jo
pop
jo
add
dec
ret
lock
cld
inc
cmp
filds
and
lods
mov
inc
xchg
aam
inc
pop
subb
sub
stos
mov
pop
inc
push
and
mov
icebp
imul
icebp
push
mov
sbbl
adc
dec
sbb
xor
and
mov
fadds
aaa
out
stc
in
jnp
stc
loop
or
or
mov
xchg
test
filds
fsubrl
xchg
inc
pusha
lds
into
xchg
insb
enter
inc
mov
lret
dec
je
pop
pusha
sbb
flds
imul
js
bnd
out
cmp
data16
xchg
sbb
jmp
cmpsb
cwtl
lds
sahf
das
leave
push
mov
push
mov
push
icebp
fwait
mov
cld
add
sbb
nop
shr
cld
stos
fwait
mov
mov
pop
adc
adc
pop
dec
mov
jmp
jg
mov
imul
cmpsb
sub
nop
xchg
pop
dec
jmp
fwait
in
jl
ret
lock
or
push
inc
jae
in
xchg
lcall
sbb
cld
push
pop
lret
cmpsl
sub
xchg
adc
mov
fsubrs
inc
pop
mov
fdivl
jecxz
dec
movsl
bound
ret
adc
lods
gs
add
add
lods
inc
mov
xchg
adc
pop
icebp
sub
cmp
shll
adc
int
jmp
and
lahf
hlt
rclb
and
stos
or
dec
mov
popa
xor
test
fs
cmp
es
jns
add
push
fadd
pop
jmp
fnstsw
or
sbb
add
repz
mov
xchg
shll
pop
jbe
rcrl
or
jg
cmp
inc
ret
jmp
pop
jge
mov
movsb
mov
push
mov
xor
stos
idivb
jge
inc
xor
xchg
mov
fdivs
mov
cmp
ret
repz
pusha
xorb
lds
stos
inc
pop
jp
cmp
ret
stos
pop
jne
push
sbbb
xchg
pop
shll
mov
bound
mov
testl
fimuls
dec
enter
pop
sarb
addr16
dec
push
mulb
pushf
xchg
push
sbb
jbe
lds
out
in
inc
rolb
mov
cmp
mov
add
xchg
adc
push
ljmp
filds
inc
adc
or
sub
or
iret
bound
mov
cmp
lods
loopne
add
or
test
cmp
aas
std
jbe
mov
pop
jns
adc
pusha
ret
insl
or
lahf
jp
add
jns
lods
std
enter
hlt
cmp
insl
xchg
push
or
rolb
orb
dec
mov
pinsrw
int
sub
push
popa
cmp
jns
mov
cmp
test
jne
icebp
mov
test
aam
push
or
lds
lcall
cmp
call
pusha
popa
imul
cli
and
adc
popl
jns
aad
cmp
mov
cmp
xchg
mov
cmp
stos
loope
int3
and
lds
xor
dec
xchg
jge
imul
push
aas
and
pop
xor
inc
push
lea
dec
mov
mov
inc
fs
mov
inc
cld
or
test
roll
xchg
xchg
sub
out
es
lret
addr16
shrb
mov
sbbb
and
enter
push
sub
sub
and
movsb
adc
popf
xchg
insl
sub
or
popf
outsb
cmp
data16
adc
fwait
mov
fs
xchg
test
fnstenv
cmc
sbb
stc
mov
negl
cmp
jp
sub
rcrl
inc
xchg
push
dec
add
dec
fsubs
es
aaa
xchg
push
loop
mov
int
out
pop
and
or
dec
ret
xor
push
mov
test
enter
pop
es
daa
mov
mov
jle
jns
jle
mov
call
and
mov
mov
inc
fwait
push
ret
das
add
sbb
fisubl
sbb
mov
xor
ret
lock
adc
test
add
lcall
sub
jecxz
pop
loopne
sub
mov
push
notl
outsl
mov
mov
xchg
loopne
mov
or
psllw
lds
cmp
jmp
shll
cmp
pushf
mov
pop
cwtl
decb
mov
ja
pop
cmp
arpl
movsb
lret
in
dec
add
cmovbe
sbbb
stos
fadds
push
rol
mov
bound
iret
enter
les
mov
pop
jp
cmp
cld
enter
addl
iret
sbb
sub
js
sti
xchg
push
cmp
sarb
mov
ret
pop
push
sbb
push
rclb
pop
pop
clc
clc
pop
add
pop
push
push
push
dec
pop
lahf
dec
sahf
add
loopne
push
movsl
fs
outsb
sub
xchg
in
xor
popf
sbb
mov
stos
push
mov
inc
sti
icebp
adc
dec
loop
dec
sbb
mov
mov
xchg
out
and
xorb
mov
sbb
lcall
mov
cmp
mov
mov
nop
je
int3
test
mov
ja
pop
scas
pop
mov
sub
adc
loop
movsb
aam
out
jecxz
sbb
lcall
notb
dec
insl
dec
test
stc
stos
int
adc
cli
mov
sbb
and
iret
adc
loopne
sub
and
icebp
adc
mov
cmpsl
es
outsb
cmpsl
fdivs
cmpsl
mov
inc
mov
out
stc
dec
jae
pop
adc
arpl
je
lret
jecxz
xchg
pop
test
sti
lahf
xchg
inc
add
ja
and
test
sub
int
into
dec
mov
or
mov
or
mov
mov
arpl
nop
lea
dec
mov
or
jmp
adc
movsl
mov
inc
ds
add
cld
lret
sti
jmp
inc
xor
insl
add
pop
cmp
gs
dec
mov
and
or
pusha
fistpl
scas
mov
call
jmp
mov
inc
fs
cli
call
or
inc
pop
sbb
dec
mov
call
mov
jmp
adc
adc
scas
lock
sahf
cmc
fwait
je
ret
cmp
stc
test
cmpsb
jecxz
sub
shll
jnp
repz
lret
int3
enter
and
or
sahf
dec
sbb
mov
jmp
push
rcrl
sub
or
gs
fbld
es
jnp
jo
pop
xchg
and
lcall
mov
inc
jae
call
sub
mov
xor
sub
or
mov
popf
mov
sbb
popf
cwtl
fisttpll
aas
adc
dec
jo
test
mov
mov
dec
pop
and
inc
jne
mov
lcall
mov
push
inc
or
test
push
adcl
push
adc
cmp
test
test
lods
ds
xchg
fcomps
jne
aas
lea
insb
inc
addr16
outsb
add
lcall
add
in
xchg
clc
mov
xor
test
push
mov
xchg
jmp
cmp
lcall
lea
adc
mov
ret
jne
iret
or
fcom
pop
loopne
or
in
in
or
sbbl
rorl
jecxz
dec
pushf
mov
mov
sub
or
neg
mov
jb
dec
pop
test
inc
test
cmp
lcall
xchg
mov
pop
hlt
jp
sbb
fcom
dec
xchg
loopne
adc
ret
xor
push
xchg
icebp
cmp
or
pop
pop
add
ds
and
dec
call
sbb
dec
and
jbe
out
ror
ljmp
std
subl
add
sbb
pop
cmp
xchg
bound
lret
fiaddl
in
idivl
dec
mov
xor
mov
stos
jo
pusha
arpl
cmp
mov
dec
cmp
fistl
test
hlt
mov
jbe
lods
daa
sbb
mov
dec
jb
out
adc
inc
mov
lds
mov
clc
xchg
cmp
and
and
fstl
lock
std
xor
test
jecxz
jmp
fimuls
mov
int
cmpsb
into
sarb
les
inc
in
jecxz
fdivr
loop
stos
pop
jmp
sarl
aad
push
repz
mov
movsb
and
adc
push
outsl
xor
ret
push
dec
aaa
push
add
sbb
outsl
test
or
xchg
pop
in
push
adc
sub
pop
fisubrs
xor
pop
fldl
bound
pop
inc
ffree
mov
dec
cmp
mov
test
xor
and
in
out
sub
cli
orl
xchg
mov
mov
sahf
push
cmp
nop
mov
aas
dec
xchg
cld
xor
mov
ret
mov
lods
xchg
test
sarb
aam
mov
sub
push
icebp
fiaddl
jg
cli
data16
mov
lahf
loop
iret
sarl
jo
out
cmp
mov
pop
nop
ficompl
pop
push
mov
mov
mov
sti
test
push
sbb
push
test
cld
insl
pop
call
in
cmp
jo
leave
sub
ret
jbe
pusha
mov
jne
xchg
dec
mov
push
orl
in
pop
scas
and
cwtl
call
sub
add
aaa
adc
divl
test
and
fs
out
xchg
or
adc
lahf
adc
cmp
rcrb
mov
ficoms
repz
mov
xor
adc
mov
arpl
mov
filds
stos
cmp
jmp
notb
dec
enter
loope
addr16
dec
adc
fxch
and
sub
jp
outsb
pop
and
loop
sub
mov
push
jns
inc
fwait
int
leave
add
sbb
mov
out
fs
mov
lahf
inc
jbe
loopne
cmc
xor
add
cwtl
into
stc
jl
js
pop
mov
mov
sti
mov
mov
movsb
lods
sub
out
adc
sarb
inc
sbb
cld
xlat
and
popf
xchg
push
imul
mov
andb
adc
and
adc
pop
repz
jp,pn
push
aad
rol
hlt
dec
cmp
xchg
mov
xchg
add
or
adc
mov
inc
leave
mov
ret
stos
cmp
or
inc
in
mov
xchg
pop
adc
adc
mov
roll
sbb
mov
pop
or
jge
jmp
add
dec
mov
pop
jbe
fyl2xp1
aas
mov
fisubl
ja
push
iret
pop
sbb
mov
mov
popf
sub
xchg
out
pop
popl
fmull
jae
push
and
push
outsl
dec
mov
mov
cwtl
dec
jg
xchg
jmp
pop
pop
popf
addb
cmp
je
mov
sbb
and
cli
adc
pop
out
imul
add
jbe
pop
iret
fstl
fcompl
fwait
in
mov
das
jne
cs
out
xchg
adc
mov
out
daa
outsl
dec
mov
rorl
and
fcmovbe
or
jmp
pop
and
pop
dec
je
int3
adc
test
cmp
jecxz
xchg
mov
outsb
sub
mov
push
aad
jne
fdivrs
stos
xchg
in
push
fstl
leave
push
sub
popa
hlt
cmc
add
inc
and
jp
fidivs
aas
out
pop
pop
ljmp
or
xchg
test
adc
js
test
stos
ds
xchg
mov
rcrl
xor
adc
xchg
fbld
and
aas
or
xor
xchg
inc
jecxz
inc
int
fmulp
inc
mov
pop
jne
sbbl
jmp
fwait
push
jb
push
pop
das
or
dec
cmp
mov
lcall
int
sub
and
mov
outsb
xor
in
push
mov
and
adc
sbb
cmpsl
bound
xchg
xor
or
adc
sub
dec
mov
out
scas
xchg
xchg
add
jl
addl
subb
xor
dec
push
add
jge
xor
outsl
out
xor
leave
and
or
cmp
ds
mov
ljmp
ret
mov
fstpt
jnp
loope
ja
dec
mov
out
mov
fsubrl
push
add
mov
call
imul
popf
insb
mov
cwtl
mov
mov
je
repnz
pop
cltd
arpl
adc
mov
test
adc
inc
mov
mov
repnz
pop
cltd
ljmp
lcall
test
testb
or
mov
cmp
xor
push
scas
into
into
cmp
fcmovbe
cmp
stos
insl
loop
sahf
daa
repnz
jb
jmp
push
stos
nop
aas
out
jmp
insl
out
gs
aas
lock
fs
sub
mov
add
outsb
push
sub
dec
movsb
jg
andl
mov
hlt
push
jmp
pop
addr16
adc
test
cmp
adc
adc
xchg
fwait
dec
add
out
out
rorb
shlb
add
adc
or
daa
xor
lcall
cwtl
add
jmp
data16
iret
sub
inc
sbb
ret
ds
call
or
cmp
sahf
mov
push
or
js
ffree
add
jns
out
add
cmp
sbb
int
movsb
cmpsl
enter
jnp
and
lds
cmp
pop
sub
ret
out
add
cmp
jl
cmp
jb
adc
cmp
mov
mov
push
jmp
cmp
adc
sarl
push
mov
movsl
test
lcall
outsb
mov
js
mov
out
mov
push
imul
call
mov
insl
imul
dec
testb
lcall
loop
dec
mov
cmp
fnstcw
fmull
lods
test
adc
repnz
sarb
jno
push
popa
sub
sbb
or
adcl
adc
or
mov
bound
popf
xchg
or
lahf
and
arpl
leave
ret
clc
loope
ret
aas
xchg
fcomps
aaa
push
mov
flds
xchg
mov
mov
cli
mov
pop
and
mov
jp
jne
aas
xchg
sub
unpcklps
or
and
test
scas
xor
or
push
xchg
pusha
mov
xchg
shll
mov
cmp
sub
fbld
push
mov
cli
je
rcl
mov
lock
push
pop
inc
pop
cmc
ljmpw
pop
add
add
or
pop
pop
sbb
jbe
jp
xchg
sub
xchg
mov
mov
cmpsl
cmp
inc
inc
xchg
lahf
fs
lods
jne
imul
xchg
pop
iret
lret
std
xor
inc
dec
cmp
inc
lret
mov
mov
and
nop
or
mov
adc
pop
and
mov
pop
loope
or
das
repz
insl
add
rorb
and
leave
pop
arpl
adc
pusha
jge
mov
dec
out
lcall
repz
mov
jecxz
push
push
imul
pop
add
mov
int3
xchg
mov
push
hlt
popf
pop
test
pop
push
fiadds
cltd
mov
pop
and
sbb
mov
jl
mov
mov
in
ds
in
jno
or
cld
mov
in
and
push
or
aam
rol
and
sbb
sub
or
mov
leave
sub
arpl
xchg
push
mov
cmp
xchg
push
sub
shlw
ljmp
pop
mov
movsl
add
adc
adc
lea
inc
cmc
mov
rolb
mov
cmp
in
sbb
pop
clc
lret
cmc
test
repnz
pop
inc
xor
lea
mov
mov
dec
cmp
sahf
fsubr
movsl
les
test
scas
pushf
mov
jge
push
cmp
fisttps
fstpt
test
repnz
stos
xchg
pop
xor
add
sbb
cmp
and
ljmp
fs
adc
ficoms
imul
andb
inc
pop
pop
push
xchg
mov
xor
int3
mov
push
je
rclb
cmpsl
push
pop
and
jp
in
dec
inc
add
sub
imul
bound
lcall
out
mov
cmc
leave
sahf
adc
mov
xorb
push
inc
stos
push
aas
or
push
lcall
daa
mov
sarb
xchg
mov
mul
fcmovnu
xor
cs
das
dec
out
pop
mov
xchg
out
adc
les
jne
int3
pop
adcl
pop
mov
push
shll
xor
xor
mov
icebp
iret
cmp
js
lahf
fldt
int
clc
cmp
shlb
push
dec
data16
testl
add
mov
jne
mov
lcall
cmp
fptan
mov
mov
test
jo
xchg
sbb
inc
mov
or
jecxz
cmp
or
imul
imul
out
lret
jmp
add
xor
lods
add
sbb
andl
mov
dec
repnz
cmp
out
rcrb
xor
pop
mov
notl
out
arpl
cli
dec
testb
push
add
jmp
ret
in
ret
hlt
jl
cmp
aas
divl
or
insb
inc
cmp
ficoms
mov
push
in
loope
cmc
jns
out
jbe
gs
notb
push
jmp
addr16
sbb
push
cld
inc
hlt
inc
lahf
sbb
in
sub
mov
insb
popa
cs
and
je
pop
and
test
in
dec
push
lahf
test
cli
pop
xchg
sti
sbb
lret
rol
test
lahf
inc
pusha
pop
ljmp
ja
mov
lret
dec
and
subl
ljmp
cmp
mov
pop
call
adc
jne
clc
jp
cmp
rorl
dec
and
cli
into
rcl
add
cltd
push
std
movnti
mov
push
icebp
sub
iret
aaa
xchg
popa
hlt
mov
xchg
mov
jge
push
and
jl
stc
insb
ror
dec
loope
js
and
push
lds
lods
pop
lahf
xchg
imul
push
jne
out
out
add
cmpb
dec
pop
test
fidivrs
mov
mov
add
sbbb
nop
je
enter
add
movl
and
jle
mov
dec
mov
push
mov
cmp
jl
in
or
jp
and
dec
scas
jnp
or
ror
outsb
ret
ja
fimull
popf
push
pop
or
jb
cmp
cmp
mov
fldl
or
and
mov
mov
jb
push
xchg
test
shl
subb
in
mov
pop
fstl
jns
cmc
dec
or
mov
data16
dec
or
adc
adc
jg
cwtl
and
rorl
loop
xorb
xchg
addb
and
daa
mov
insb
repz
sbb
jge
lods
sub
sbb
xchg
and
mov
scas
dec
cltd
cmp
xlat
in
jbe
ljmp
in
ret
decb
push
and
insl
xchg
movsl
sub
mov
cmp
je
stos
js
addr16
push
push
jg
pop
mov
fsubs
jne
or
and
psadbw
repnz
rcrb
je
hlt
jbe
std
into
inc
push
xchg
cmp
loope
jb
in
in
lds
and
jecxz
push
xchg
xor
xchg
cmp
int3
cmp
push
popf
ss
sarb
push
outsl
push
out
cmpsb
jmp
lock
or
mov
rcll
lea
lahf
jo
sub
mov
pop
dec
mov
ret
ss
adc
xchg
pusha
adc
xor
jle
stos
jae
jnp
mov
mov
lcall
cmp
scas
lds
jo
movsl
outsb
add
push
stc
test
test
sarl
dec
ret
nop
aad
sbb
cmpsl
or
mov
dec
fnstsw
pop
aaa
cmpsl
push
enter
adc
shr
adc
lret
pop
sbb
idiv
xchg
add
cld
jbe
es
add
and
inc
dec
mov
cmp
mov
jno
mov
movsb
neg
and
div
out
mov
cmp
and
xchg
mov
xchg
push
ffree
push
mov
inc
enter
pop
test
mov
lock
or
mov
in
dec
mov
popa
insl
lea
ja
pushf
cld
sbb
mov
xorl
jl
fdivrl
test
xchg
mov
insb
pop
jnp,pt
aam
mov
aas
test
sub
push
sub
std
xchg
push
adc
mov
repnz
mov
clc
ss
pop
iret
mov
fs
add
sahf
das
icebp
popf
mov
cmp
sub
jecxz
or
push
ret
mov
mov
es
adc
sub
dec
jl
out
out
and
sub
dec
adc
shlb
imul
xlat
sbb
sub
std
xlat
test
jg
dec
or
lock
scas
and
xchg
popf
jb
cmp
add
dec
popf
call
mov
lods
ffree
dec
scas
adc
push
repz
xchg
fiaddl
and
ret
adc
mov
sbb
repz
adc
sbb
out
push
add
mov
pop
and
mov
shrl
shl
push
call
inc
sub
loop
stos
into
and
pop
pop
sti
out
fidivl
cmpsb
mov
jge
xor
push
scas
adc
lods
inc
pop
fcoml
jge
loop
shrl
inc
pushl
or
cltd
les
mov
dec
dec
jmp
aaa
cmp
mov
cmpsl
cmp
stos
sarl
sbb
push
ret
adcb
outsl
loope
sub
xchg
fwait
or
dec
es
push
mov
adcb
bound
inc
je
rcrl
sub
pop
stos
jge
int
pop
jp
scas
icebp
cmc
inc
addr16
adc
inc
test
add
pop
and
arpl
jb
or
push
jne
dec
push
add
jae
outsb
ds
push
push
mov
dec
sbb
push
xor
daa
mov
adc
sub
push
pop
xchg
fstp
rcrl
sbb
or
adc
add
mov
mov
ss
xor
in
inc
stc
icebp
xchg
cmpsl
icebp
je
mov
les
in
adc
sub
insl
fisubrl
int
xlat
in
aam
sbb
pop
adc
cld
lcall
xchg
push
xlat
aas
mov
bound
in
cld
aad
pop
fcom
movsl
pusha
lock
add
cwtl
fnstsw
test
in
repz
mov
xchg
and
push
dec
xor
push
pop
ret
bound
call
mov
cmc
int
icebp
xor
popf
aaa
outsb
or
mov
jp
mov
pop
pop
iret
or
or
rcrl
and
fisubrl
jl
mov
outsb
cs
iret
mov
inc
lea
fisubl
mov
pusha
push
jno
outsl
sub
jb
jge
clc
xchg
je
imul
ljmp
gs
pop
fsts
cmpsl
leave
jne
mov
lods
mov
jne
arpl
cmp
and
jb
mov
stos
xchg
fadds
ret
inc
stos
mov
pop
jg
icebp
pushf
sbb
pusha
xor
cmp
testl
mov
and
mov
pop
inc
popl
and
pop
ja
imul
into
jno
aas
push
xor
dec
leave
dec
mov
add
push
les
jmp
sbb
inc
aas
sub
jne
add
xchg
lret
ljmp
aad
adc
sub
fs
adc
or
cmp
shll
and
pop
sbb
fs
das
add
mov
push
dec
xchg
sub
inc
xchg
icebp
repnz
orl
test
js
cld
jne
mov
mov
cli
push
mov
push
arpl
and
sbb
lahf
and
movsl
cltd
dec
mov
mov
movsl
mov
enter
add
mov
arpl
lahf
mov
aam
pop
inc
insb
sbb
mov
push
ret
daa
int
mov
pop
pusha
lock
mov
fwait
pop
movsb
inc
push
push
leave
and
cmc
jle
cwtl
xlat
leave
mov
push
fsts
aas
lods
popf
xor
and
sarb
jne
lcall
xchg
and
daa
daa
in
test
xchg
mov
adc
mov
inc
dec
dec
js
test
push
push
pop
mov
cmc
mov
mov
insb
and
jecxz
xor
mov
jmp
mov
inc
rcr
shll
in
or
sub
nop
inc
pop
in
and
popf
ret
jno
das
mov
mov
mov
lea
lahf
jl
clc
icebp
hlt
pushf
and
imul
clc
lcall
jp
push
push
mov
movsb
stc
imul
adc
loop
cmp
mov
add
fidivrl
mov
icebp
jno
lret
sbb
popa
mov
push
sbb
or
out
mov
ds
lods
lods
or
sbb
adc
xchg
cli
ljmp
dec
jb
pop
imul
out
test
lods
jecxz
mov
dec
push
push
xchg
outsl
pop
xchg
add
pop
adc
pushf
hlt
outsb
push
add
enter
mov
orl
xchg
jl
sbb
adc
push
add
pop
rorl
int3
mov
daa
es
adc
mov
mov
int3
dec
sbb
sub
test
adc
inc
mov
test
or
sbb
int3
sbb
cmp
sarb
jbe
push
aad
dec
mov
aad
cmp
jo
out
inc
mov
jnp
mov
cmc
push
mov
mov
mov
jge
add
outsl
andb
sbb
adc
dec
stc
cmpsl
and
sbb
arpl
mov
int
lods
popf
orl
cmp
js
pop
mov
imul
pop
dec
adc
push
inc
fistpll
dec
pop
mov
sub
xchg
jle
xor
mov
lds
cli
mov
jg
les
test
xor
pop
aas
scas
mov
ss
js
sub
out
cltd
mov
mov
dec
dec
in
mov
push
mov
push
les
jp
cltd
int
pop
sub
dec
sbb
jge
mulb
aas
stc
out
mov
adc
mov
sbb
push
jo
push
outsb
jecxz
cmp
orb
jbe
dec
imul
jns
das
ljmp
push
jae
xor
jnp
pop
dec
or
push
lds
fwait
mov
mov
rolb
arpl
add
push
add
in
xor
xor
push
std
cmpsb
mov
xchg
mov
push
push
add
jno
xlat
pop
aam
mov
outsb
jo
rorl
sbb
mov
shl
sub
jmp
xor
jmp
das
pop
add
mov
sub
pop
mov
xor
inc
pop
cmp
push
into
mov
push
lret
sub
push
cmp
mov
in
hlt
xchg
mov
sbb
sub
inc
inc
test
xchg
fnstsw
fld
rcrl
xor
loope
testl
into
loope
in
pop
sbb
inc
lcall
dec
xchg
stc
mov
jne
xor
pop
sub
insl
dec
dec
or
hlt
jl
mov
cmpsb
aam
lret
push
popa
and
sbb
sbb
movsl
fidivrs
mov
adc
outsl
imul
leave
xchg
push
push
xor
aam
jp
lock
out
push
cs
lret
jmp
imul
dec
cwtl
dec
sbbl
cmp
imul
je
cmc
in
or
add
out
dec
xchg
inc
dec
ficomps
sub
sti
inc
popa
neg
scas
ss
xchg
xchg
into
mov
mov
add
repz
mov
mov
aam
andb
sub
sti
outsb
int3
sub
popa
xchg
mov
jo
adc
xor
or
sbb
add
lahf
cmpsl
cmpsl
sbb
xchg
fistl
add
sar
xor
rorb
or
pop
cli
or
sub
fwait
jl
fldenv
xchg
mov
xor
icebp
add
insb
jmp
movsl
adc
imul
imul
out
adc
adcb
mov
das
push
ds
jae
adc
xchg
xor
push
orb
inc
sub
mov
fildl
xchg
push
addr16
and
mov
cmp
es
inc
mov
jo
and
pop
mov
lahf
cmp
sbb
call
mov
jbe
sbb
cmp
and
mov
xchg
dec
mov
test
icebp
cmp
lret
push
clc
mov
sbb
mov
push
je
xor
lahf
lahf
jo
outsb
lods
adc
bound
mov
or
add
jg
or
icebp
push
inc
pop
adc
and
adc
mul
xchg
int
clc
stos
cmp
imul
movsb
fwait
push
mov
repz
mov
jo
cltd
cli
cmp
arpl
jecxz
bound
loope
xchg
push
lods
mov
sub
sbb
adc
xor
cmp
int
and
pop
loopne
nop
addl
or
lcall
xchg
mov
test
loop
lret
dec
lcall
sti
data16
sbb
mov
gs
adc
mov
cwtl
outsb
in
and
fidivs
daa
jmp
mulb
xchg
notb
filds
sbb
xchg
or
out
sub
mov
std
jg
jae
fidivrl
cmp
mov
fldcw
inc
fnstenv
mov
inc
in
lock
add
test
les
aam
push
inc
ljmp
mov
dec
mov
lods
adc
les
andb
xlat
inc
ficompl
leave
shlb
iret
fstpt
dec
std
cmp
mov
pop
xchg
ljmp
adc
push
cmp
xchg
insl
jmp
mov
mov
sub
mov
jg
xchg
ss
stos
mov
outsl
jo
jle
xchg
lcall
mov
dec
mov
mov
in
in
in
lret
sbb
loop
aaa
out
add
out
push
subb
xchg
jecxz
faddl
mov
pusha
mov
xchg
mov
shr
cmp
adc
aaa
sbb
into
add
lods
sbb
shlb
xor
mov
mov
or
ret
andl
out
fcmovnb
xchg
and
xchg
test
insb
lret
pop
gs
cmp
fwait
in
inc
imul
or
or
test
fidivrl
sarl
iret
sbb
loop
adc
int3
sbb
jle
or
jmp
mov
mov
push
sub
dec
hlt
xor
sub
mov
enter
sub
cmpsl
notl
cmp
inc
mov
rcll
imul
flds
push
add
adc
out
aaa
xchg
inc
and
push
xor
sub
or
push
lods
fistpll
sub
out
mov
push
sub
ret
add
scas
mov
dec
dec
lds
fstps
pop
bswap
mov
lock
and
fwait
icebp
test
hlt
sbb
fsubl
int
imul
or
iret
pop
push
syscall
aad
mov
or
push
xchg
inc
mov
mov
and
cmp
xor
mov
icebp
push
ret
jb
test
dec
in
inc
fcoml
push
xlat
sbb
movsl
cmp
jmp
jno
xchg
sbb
add
xchg
add
cmp
or
cmpsb
mov
insl
cltd
pop
fs
aas
hlt
stc
lahf
pop
jp
or
push
bound
mov
push
mov
cmp
xor
push
sub
das
add
cwtl
mov
or
jo
xchg
jp
jmp
lea
cmp
sub
rcll
insl
lea
fld
jge
fidivrl
loopne
imul
mov
ja
lods
lcall
in
mov
mov
or
es
js
into
repz
jmp
xor
repz
push
push
cmp
mov
arpl
outsl
sub
pushl
pop
adc
push
aas
mov
jae
faddl
testb
inc
inc
fimuls
leave
jne
cmpsb
jl
nop
xchg
hlt
and
pop
jge
flds
mov
js
pushf
add
mov
cld
daa
ret
shr
out
dec
xor
loope
inc
dec
into
cli
cld
lcall
idiv
cmp
jg
lods
jl
shll
jnp
bound
and
call
cmp
fcompl
aad
cltd
nop
aad
adc
ret
fcoml
push
push
repnz
sub
mov
xlat
shl
lods
sub
cld
and
and
cmp
icebp
push
and
call
adc
push
roll
adc
loop
lods
pop
sub
pop
xor
inc
jle
out
in
jns
jne
movsl
mov
int
mov
in
mov
adc
xor
leave
dec
sti
and
nop
in
sbb
aam
outsb
sub
fs
fisttpl
mov
scas
cs
push
daa
jge
test
lods
pop
movsb
hlt
xchg
mov
ja
sbb
pop
adc
repz
adc
mov
sti
test
xchg
jmp
ror
arpl
cli
push
stos
add
das
sbb
into
xchg
hlt
pop
sahf
popf
bound
sub
andl
dec
jp
mov
icebp
sbb
mov
add
out
xchg
mov
in
xor
push
cmc
les
inc
add
movsb
pushf
loop
mov
or
in
xchg
loope
jno
inc
sahf
jge
xor
int3
add
add
xchg
addb
neg
and
hlt
push
shll
push
adc
stos
leave
iret
cmp
ret
xchg
fcmovnbe
rolb
jmp
in
icebp
ret
shrb
sbb
mov
cmp
lds
or
daa
es
cmp
fs
shr
ja
roll
mov
mov
das
or
in
call
fs
lods
aas
lods
dec
push
in
imul
xor
xchg
mov
ljmp
adc
xchg
in
dec
arpl
rolb
dec
loopne
pop
inc
test
fst
mov
je
dec
aam
das
add
mov
push
adc
cwtl
mov
movswl
out
aad
and
add
in
test
enter
lahf
mov
rcrl
test
stc
sarl
les
clc
fisttps
jo
and
jge
stc
sarb
sub
cmpsb
sub
mov
jmp
add
arpl
cmc
js
push
popa
mov
stos
mov
test
leave
sbb
stos
mov
aam
mov
cmp
push
ret
mov
cmpsb
mov
jp
mov
in
lods
lcall
fucomip
pop
ret
lods
jbe
cmpsb
mov
push
inc
push
popf
mov
sbb
in
loope
add
sbb
insl
jnp
mov
enter
pop
mov
jg
adc
push
subb
out
cmp
mov
dec
xchg
int
test
in
mov
js
nop
imul
mov
xchg
cmp
fsubrp
add
cmp
fucompp
out
sbb
xchg
pushf
mov
rcll
inc
push
cli
dec
cs
iret
adc
add
cli
out
js
arpl
push
cli
mov
outsb
sbb
insl
xor
daa
test
cli
push
mov
jbe
add
imul
bound
loop
xchg
lea
add
je
mov
push
jmp
mov
dec
inc
push
mov
dec
fcoms
ret
fcompl
jecxz
mov
outsb
ds
lea
lods
fsubs
rcrl
js
cmc
mov
or
repz
dec
mov
cmpsl
ffreep
mov
js
aas
dec
lock
cmp
call
test
in
fdiv
stos
xor
stos
lret
mov
pop
and
mov
xchg
add
adc
sbb
mov
movsb
mov
mov
aas
add
xchg
or
add
add
inc
mov
addr16
in
or
ror
mov
ss
mov
rolb
pop
and
or
xor
xchg
out
lods
ret
xchg
int
xor
fnstsw
subb
std
pop
dec
and
mov
out
or
push
imul
inc
incb
out
inc
xchg
mov
mov
loope
pop
jae
xchg
imul
lea
push
push
lret
sub
lret
sar
imul
lods
scas
dec
mov
adc
or
inc
popa
test
sbb
lods
in
mov
out
push
ss
icebp
jb
dec
loopne
cmp
cmp
lods
inc
ficomps
pop
mov
sub
pop
sahf
jno
in
cmp
mov
test
xor
adc
mov
fcoms
cmp
lea
sub
pop
mov
ret
dec
fildll
xlat
dec
jl
and
mov
adcl
cmp
icebp
sbb
push
mov
mov
xchg
mov
addb
dec
pop
shrl
imulb
int
mov
push
push
inc
shll
pusha
adc
daa
dec
inc
dec
xchg
push
aam
lds
iret
aas
xor
mov
pop
enter
lea
or
mov
push
push
and
fmuls
add
decb
cmp
mov
loop
scas
mov
arpl
in
cmp
outsb
inc
mov
out
sbb
dec
adc
push
test
ret
in
inc
lock
and
jl
mov
or
loope
aaa
repnz
mov
adc
adc
xlat
call
aas
loop
aam
pop
jns
scas
pop
jmp
fucomp
add
out
sub
or
xchg
cmpsl
mov
ret
and
aas
stc
push
adc
out
inc
out
sbb
pop
lahf
add
push
lret
mov
out
out
out
loopne
pop
add
pop
shrb
mov
insl
test
dec
adc
movsl
stos
loopne
xchg
movsl
pop
insb
inc
sub
movsb
pusha
dec
push
out
sarb
cmp
jb
mov
jge
sti
xchg
mov
sbb
les
daa
pop
sub
sbb
fs
and
inc
or
and
dec
push
jge
ja
fs
push
cltd
dec
add
fs
mov
lea
negl
sub
inc
pop
int3
mov
mov
xlat
xchg
or
enter
fsubr
lods
xchg
jge
mov
dec
sub
lods
push
popf
xchg
mov
jb
movsl
inc
jge
test
inc
pop
jg
xchg
cmpsb
lret
nop
das
testl
mov
pop
sbb
outsl
lods
test
cli
xchg
push
scas
aaa
mov
pop
pop
xorl
inc
mov
and
test
aad
push
adcl
jno
cs
mov
xchg
dec
inc
push
or
xor
in
and
movsb
cmp
outsb
xlat
leave
or
push
js
xchg
faddl
pop
jno
sub
xchg
je
sbb
stc
push
shl
bound
icebp
ja
sbb
pop
ds
mov
pop
es
das
cs
xor
and
out
mov
cmp
and
aas
fstl
mov
or
mov
out
in
jecxz
mov
pop
mov
xchg
add
out
sti
aad
jecxz
sbb
push
les
inc
rcr
rclb
sbb
sbb
fistl
xor
mov
test
repnz
test
pop
mov
mov
pop
dec
jb
pop
out
or
inc
and
mov
mov
imul
or
jecxz
sub
mov
add
lcall
cmp
cwtl
mov
sbb
mov
imul
adc
addr16
pop
ss
mov
ja
outsl
int3
jle
js
dec
add
lock
cmc
or
fstp
pop
mov
out
rcll
std
js
mov
lret
test
jle
daa
xchg
xchg
inc
xor
cld
enter
sub
scas
in
out
setae
pop
sti
test
adc
push
rcll
xchg
lds
jl
or
add
or
push
clc
movsb
adc
addb
mov
ds
addr16
out
ds
inc
jmp
push
jmp
stos
mov
sahf
xchg
sbb
mov
sbb
and
cmpsl
mov
bnd
lret
jns
adc
popf
mov
ret
add
arpl
mov
mov
in
jnp
inc
cmp
mov
inc
repnz
sub
mov
cmp
dec
xor
push
enter
pop
js
or
mov
cmp
xor
xor
rorb
fimuls
mov
arpl
and
pop
jp
jbe
jp
mov
and
mov
cmp
scas
call
mov
cmp
das
popf
cmp
add
arpl
arpl
je
jb
sub
cmp
leave
out
mov
jae
mov
mov
je
mov
fwait
push
into
adc
ss
cmp
xchg
cld
mov
and
ret
mov
hlt
stos
daa
rcrb
stos
xchg
repz
loope
xchg
mov
and
xchg
or
push
push
push
pop
sbb
lock
mov
xlat
sbb
pop
test
push
or
xchg
sub
jbe
mov
subb
outsl
into
or
xor
sub
mov
addr16
outsl
mov
and
jnp
loopne
cmp
mov
repnz
dec
or
jmp
mov
jg
bound
in
repnz
mov
push
lock
scas
mov
mov
loopne
shll
clc
out
dec
imul
iret
push
jp
inc
inc
xchg
clc
mov
push
push
call
jb
dec
xchg
xchg
cwtl
mov
addr16
int
in
dec
repz
lods
jns
push
cwtl
mov
faddl
cmpsb
cmp
push
rolb
and
stos
pusha
hlt
arpl
popa
pop
xchg
jge
mov
cmp
jb
xorl
movsb
aas
jnp
das
jns
xchg
repz
sub
adc
dec
and
jmp
pop
adc
fildl
ret
cmc
adc
stos
roll
or
mov
or
mov
push
xchg
shl
scas
cmpsb
mov
fwait
or
mov
adc
call
repz
scas
jnp
xor
lret
cmpsl
fists
jg
shrb
cmc
pop
test
adc
jnp
scas
add
inc
es
imul
repnz
lahf
repnz
aas
cmpsb
rol
jp
push
arpl
lock
mov
rcl
std
sub
xchg
js
std
lods
adc
xor
jge
and
out
mov
sahf
adc
repz
inc
mov
xor
mov
dec
lods
mov
push
cltd
adcb
xchg
fmuls
fdivl
xchg
adc
push
pop
push
push
in
sbb
adc
dec
call
sub
cmp
arpl
or
loope
lds
inc
cmp
mov
mov
jns
sbb
in
mov
sbb
mov
in
les
lds
dec
stos
hlt
mov
je
xchg
stos
sti
xchg
lret
lock
mov
inc
pop
jns
push
jp
adc
add
les
sub
imul
adc
dec
adc
xor
lods
mov
inc
xchg
aaa
lods
jns
outsb
dec
add
ficomps
push
cmp
outsb
imul
cmp
popa
xchg
aad
xor
test
cltd
xor
lahf
sub
repnz
fisubrl
aam
inc
lahf
xlat
adc
int
add
rcrl
cmpb
aaa
xor
lock
and
in
jg
add
xchg
aaa
add
inc
mov
inc
add
jp
fs
inc
add
dec
mov
into
notl
mov
les
and
loopne
rcll
adc
or
sti
outsb
fidivs
xchg
mov
cltd
jp
cmpsb
les
leave
dec
jge
inc
fwait
ds
inc
sub
out
sbb
inc
sar
cmp
aad
std
imul
jecxz
dec
enter
imul
mov
jmp
adc
hlt
inc
fildll
add
test
inc
push
hlt
push
dec
cmp
rcll
pop
out
cmp
mov
clc
clc
scas
loop
or
flds
notb
xlat
jnp
xchg
movsb
incl
cmpsb
push
loopne
jge
mov
psubusw
sub
rol
clc
and
cs
fidivrs
fsubrp
mov
call
int3
fmuls
push
test
add
and
mov
add
xchg
dec
cmp
xlat
rcrl
mov
sbb
cwtl
mov
dec
in
fdivs
sbb
jnp
dec
jbe
jnp
or
sbb
addr16
gs
lds
xor
inc
mov
xlat
test
js
bound
mov
movsl
outsl
adc
push
mov
cmp
pop
push
gs
lea
ret
cmp
leave
add
push
cmp
dec
sub
pushf
in
stos
cmp
mov
mov
sbb
ret
or
jns
push
sub
mov
pop
in
inc
sar
lock
js
shl
bound
mov
push
andb
add
adc
js
cmp
inc
push
dec
int
outsb
xchg
dec
lret
lods
jnp
outsl
nop
pop
jns
repnz
mov
repnz
pusha
mov
popa
movsl
adc
fildll
pusha
cwtl
inc
nop
mov
jne
scas
test
fdivrs
sbb
fsubp
enter
pop
popa
jb
and
clc
mov
inc
mov
ret
pop
push
stos
das
xchg
jns
push
push
loop
fxtract
mov
rclb
int3
or
mov
jae
es
add
out
daa
push
inc
mov
inc
std
cltd
sbb
mov
xor
testb
daa
and
jecxz
inc
push
xadd
outsb
pusha
sahf
and
hlt
sub
out
mov
sti
decb
xor
jae
out
mov
fs
scas
pop
cmp
xchg
sub
scas
mov
push
sbb
adc
sbb
cltd
mov
test
shrl
daa
sub
or
dec
shr
jb
clc
pop
fdivr
pop
cltd
cmp
fiaddl
xchg
mov
push
jp
mov
sahf
idivb
jp
lds
sbb
testb
dec
add
sarl
jle
flds
or
clc
sarl
stos
fldt
loop
arpl
sbb
xor
push
in
adc
dec
je
imul
movsl
test
icebp
lods
cmp
add
gs
movsl
jle
pop
mov
and
gs
xchg
jno
and
sbb
outsl
repz
jle
jmp
add
inc
push
ss
in
push
pop
sbb
jle
lods
or
xor
sbb
xchg
mov
sti
rolb
in
data16
mov
test
mulps
iret
rcll
sub
xor
mov
xchg
xor
add
pop
jp
adc
movsl
push
jge
stos
xor
fcos
jg
neg
std
mov
jecxz
pop
cmc
clc
xor
js
cmp
cmpsl
push
imul
add
inc
dec
fdivrl
mov
and
mov
xor
rorb
pop
pop
xchg
cltd
gs
and
cmp
inc
inc
fldcw
mov
or
and
mov
mulb
mov
sbb
pusha
cli
add
divb
mov
inc
pop
lds
inc
int
cltd
enter
push
fstl
in
mov
dec
mov
cmpsb
xchg
js
jg
xchg
dec
push
xor
xor
fisubrl
and
dec
jae
dec
sub
mov
mov
xor
adc
jl
jno
out
adc
xchg
aaa
inc
popa
jnp
les
add
and
push
jnp
add
sub
imul
mov
mov
cmpsb
sub
in
inc
rorl
sbb
xlat
xchg
mov
and
adc
mov
inc
das
loope
lods
push
js
adc
inc
andb
mov
or
fwait
cs
and
mov
test
in
cwtl
stos
mov
std
inc
mov
xchg
fildl
icebp
out
gs
jno
scas
subl
push
jnp
inc
loop
inc
mov
rol
fstl
mov
jbe
repnz
cmpsl
push
test
imul
mov
sarl
ja
lods
int3
mov
adc
cmovnp
add
push
pop
aam
add
mov
js
fxch
pop
stos
sub
mov
int
sti
lea
inc
pop
inc
enter
xor
testb
cltd
insb
sti
xor
enter
xchg
decb
adc
mov
dec
fadd
rorl
pushf
sahf
lahf
sub
and
jne
sub
push
mov
xor
ljmp
dec
adc
jnp
idivl
mov
xchg
pop
add
xlat
inc
jns
cmp
loopne
mov
pop
loopne
call
lea
das
loopne
mov
icebp
add
je
jns
rorb
cmp
leave
jp
sbb
in
loopne
sbb
movsb
mov
jb
std
cmp
aaa
xlat
xor
lcall
scas
jnp
or
xchg
and
ss
dec
xchg
mov
scas
xchg
pop
ficomps
jg
xchg
xchg
xor
popa
loopne
mov
sbb
sub
jne
daa
mov
movsb
popa
add
xor
scas
adc
repz
lret
ret
mov
xchg
sbb
sti
pop
mov
and
xor
out
js
pop
and
mov
das
mov
jns
sub
push
popf
fadds
push
mov
sahf
int
ret
notl
adc
nop
push
xchg
ja
xchg
hlt
mov
sbb
push
xchg
sub
stos
inc
das
icebp
cs
sub
and
sbb
jmp
inc
push
mov
add
mov
push
mov
pop
jnp
les
lods
out
adc
filds
loopne
pop
inc
scas
or
fwait
cwtl
insl
add
pop
fwait
sbb
sub
hlt
xlat
std
cld
repz
cmp
mov
ja
stc
jae
jge
aad
cs
ja
loope
das
movl
inc
dec
or
add
jae
out
or
jb
add
mov
in
into
cmp
les
push
lret
fnstenv
arpl
push
push
dec
mov
mov
shll
insl
rorb
je
xchg
jo
xchg
adc
mov
imul
in
jl
cmp
aad
std
push
out
ds
xchg
les
mov
loope
mov
in
out
pop
aad
sub
dec
test
sti
sbb
cmp
jle
ror
mov
pusha
sbb
lahf
mov
ja
cmpsb
cmpsb
push
push
bound
sub
xchg
jo
xchg
stc
scas
jae
jne
dec
xor
int3
add
pushf
idivb
xchg
adc
mov
mov
inc
dec
lret
out
ljmp
push
or
cmpsb
lds
aas
inc
dec
mov
hlt
xor
xchg
xorb
test
in
jl
cltd
fidivs
ja
std
popf
or
data16
lock
xchg
int
lahf
std
push
and
lods
popf
add
push
or
mov
js
mov
mov
je
jno
into
xor
hlt
add
mov
mov
fbstp
lods
push
jmp
or
mov
mov
cmc
xchg
push
std
shl
push
clc
hlt
fwait
or
pop
jo
rcr
push
pop
and
sahf
jmp
mov
repnz
cmp
pop
les
fs
and
lds
cmp
call
xor
dec
negl
es
stos
idivl
jecxz
cmp
sbb
imul
lods
orl
idivb
inc
fistpll
inc
sbb
or
fwait
outsl
aaa
test
loop
xlat
push
dec
cwtl
aad
xor
iret
mov
iret
pop
sbb
cmc
stos
lret
sbb
cmp
jns
jge
jecxz
out
xor
xchg
mov
mov
cmpsb
inc
sbb
ljmp
pop
jle
outsb
ret
or
shl
out
rorb
dec
sbb
sbb
es
or
xchg
outsb
jecxz
inc
es
inc
aam
ret
out
jecxz
add
filds
push
popl
stos
add
pop
cld
cld
xchg
mov
mov
mov
or
mov
xorb
rolb
cmp
mov
dec
mov
cmp
decl
das
cltd
imul
addr16
sub
addr16
add
pop
ljmp
dec
ljmp
fidivs
dec
push
std
or
mov
mov
and
xor
out
cmpsl
cmp
jnp
cmp
adc
xchg
sbb
adcl
fnstcw
insl
mov
inc
pop
mov
mov
jp
sub
xchg
loope
mov
jb
adc
sbb
shl
shrl
xchg
mov
leave
sub
inc
call
dec
cmp
ss
xchg
xchg
adc
cmp
xchg
mov
xlat
in
xor
lea
dec
and
mov
jp
xor
xor
pop
mov
imul
mulb
je
gs
mov
and
scas
enter
stos
pop
int3
sar
call
sub
inc
mov
jns
jb
negl
icebp
adc
cmp
jecxz
dec
out
js
in
movsl
and
cmp
mov
jns
push
clc
scas
andl
int3
fistpll
jo
popf
dec
add
or
and
lods
cmp
lahf
dec
lahf
and
inc
scas
outsb
push
loope
lret
sbb
add
stos
aas
stc
jo
jmp
or
ljmp
or
xchg
fldcw
roll
lds
pushf
cmp
push
popf
add
ret
std
lret
pop
push
rcrb
fsubl
fdiv
sarl
mov
lods
cltd
cmp
adc
icebp
insb
sahf
and
or
sarb
jle
mov
fisubs
and
mov
test
addl
iret
inc
sahf
sbb
pop
pop
lods
push
cmpsl
push
sbb
jno
xchg
ficoms
mov
scas
mov
movsb
mov
in
into
pop
cmp
adc
mov
nop
iret
mov
inc
mov
pop
jns
add
push
inc
dec
xor
sbb
sub
inc
arpl
fdivrs
sbb
icebp
mov
inc
mov
and
adc
dec
jecxz
jno
pop
sub
in
rol
pop
mov
xchg
sbb
lret
inc
sub
dec
push
imulb
iret
xor
or
xor
lret
push
or
in
inc
push
addb
cmpsl
mov
mov
cmp
sbb
ja
jo
ret
push
push
pop
xchg
pop
and
xor
sub
adcb
pop
adc
fs
ret
dec
test
insb
testl
adc
mov
lods
or
mov
add
mov
cmp
scas
adc
add
cmp
push
cltd
jbe
shrl
cmp
leave
adc
xor
addr16
sub
scas
inc
fld
fwait
stos
enter
mov
loopne
mov
sub
sub
mov
mov
inc
imul
push
test
lcall
shll
jnp
pusha
fwait
pop
sbb
cmp
push
sarb
mov
leave
sub
xchg
mov
mov
in
arpl
cmp
ror
ffreep
les
mov
std
lods
mov
stc
sbb
cmp
addr16
pop
push
lods
cld
pop
xchg
fwait
xchg
pop
dec
test
jge
mov
add
in
adc
sub
xchg
test
jmp
pushf
mov
add
fdivl
fwait
sub
gs
push
inc
aam
ret
xlat
sub
xchg
push
cmp
es
shll
loopne
xchg
faddp
icebp
mov
sbbl
push
dec
pop
mov
inc
nop
aaa
rcr
out
fistps
aas
pop
xor
sarb
push
pop
aad
testl
cmc
out
imul
mov
outsb
sbb
insb
push
lock
ret
pushf
xchg
and
sub
ds
test
mov
jno
mov
mov
push
push
xchg
jno
cmp
sar
pop
sub
and
movsb
imulb
inc
ja
sti
sub
rcrl
xor
dec
dec
xchg
les
add
mov
push
xor
push
insb
mov
movsl
imul
cmp
outsl
push
mov
push
mov
outsb
fidivrs
add
int3
loopnew
xchg
sbb
cmp
dec
push
inc
xchg
or
das
inc
pop
cs
dec
mov
js
mov
mov
xor
test
clc
gs
jne
and
xchg
pop
inc
mov
insl
cmc
cmp
loope
les
mov
jno
sahf
xlat
cmpsb
cli
xchg
jl
adc
stc
lock
mov
xchg
aas
xor
insb
jbe
cli
and
loope
xchg
iret
bound
mov
inc
and
add
pop
lds
popa
loop
call
ljmp
out
test
jge
add
pop
cmp
mov
xlat
xchg
ss
insb
mov
out
dec
dec
cmp
dec
lcall
xor
cmpsl
mov
inc
mov
jno
pop
into
fildl
push
sbb
ret
arpl
fstl
sbb
sub
imul
rcll
outsb
adc
adc
test
fistpl
cmpsl
inc
sarl
xchg
inc
xor
sti
jle
sbb
jecxz
push
hlt
divl
pop
mov
pmullw
ficoms
insb
aad
nop
int3
mov
xlat
filds
xor
enter
out
xchg
and
mov
clc
and
mov
sub
xchg
fidivl
fildll
loopne
xorl
cmp
mov
mov
loope
adc
cmpps
mov
sbb
xor
loop
adc
jns
ljmp
pop
push
stos
inc
popa
lret
test
into
in
testb
xchg
dec
push
mov
scas
mov
inc
xchg
lds
cmpsb
xchg
lcall
push
xchg
xchg
daa
aam
jbe
imul
cmp
vpmaxsd
lahf
cmpsb
fmull
aaa
or
out
push
aaa
inc
xchg
add
push
pop
pop
enter
mov
pusha
adc
add
mov
aaa
popf
scas
fwait
jbe
xor
scas
fadds
push
pop
lods
push
mov
aaa
jo
aas
mov
rolb
xchg
mull
sub
mov
pop
out
outsl
ss
rcrb
ss
xchg
cmpsl
fstpl
or
scas
xchg
inc
test
xchg
dec
cmp
sbb
push
dec
sbb
mov
jns
mov
inc
mov
dec
pop
sub
int
mov
sbb
aaa
mov
rcl
lock
mov
inc
xor
outsl
xor
loopne
xlat
and
mov
shrl
and
cmp
js
dec
adc
jno
loope
lock
dec
jnp
push
pushf
or
add
pop
fcmovne
xchg
adc
data16
loop
cld
push
rorl
ja
and
jbe
addr16
and
mov
fadds
in
and
filds
add
bound
cmp
and
push
cmp
sub
cmp
sbb
aad
xchg
mov
outsb
ret
out
mov
outsb
xchg
push
jb
pop
push
xchg
mov
ljmp
mov
iret
aam
cmpb
insl
enter
mov
in
mov
push
out
insl
pop
or
dec
cmc
dec
jmp
fdivrs
jns
inc
mov
lcall
movsl
add
dec
push
or
adc
push
mov
lret
lret
loopne
or
jge
xor
jne
sub
inc
lret
loop
shrl
in
iret
sbb
xchg
dec
xchg
loopne
xor
pop
sahf
cmp
inc
addb
cwtl
movb
adc
flds
cmpl
xor
mov
add
pop
std
xchg
out
iret
fidivrl
fidivrl
in
es
dec
pop
mov
dec
pop
push
addr16
pop
cltd
std
inc
rolb
and
pushf
mov
mov
push
cmpsl
push
xor
nop
sarb
push
cli
cli
cli
in
jp
pushf
mov
mov
add
hlt
scas
jl
mov
les
xchg
gs
sti
mov
lcall
push
outsl
imul
dec
inc
jo
repnz
rclb
mov
mov
dec
push
jle
sbb
hlt
stos
std
popf
mov
aam
mov
sbb
pop
loopne
xor
xorl
je
mov
jnp
jno
inc
lcall
mov
out
fldl
adc
pop
sti
outsl
xchg
cli
fcoms
sti
icebp
inc
xchg
call
cli
mov
xchg
or
test
ss
push
mov
pop
mov
movsl
dec
aaa
outsb
push
gs
add
cwtl
jo
push
loopne
inc
jno
xchg
pusha
pop
aas
adc
pop
jbe
inc
addr16
lods
and
push
dec
ret
data16
push
push
cmc
jb
notl
cmp
pop
pusha
mov
mov
pop
ljmp
add
lods
push
inc
xor
inc
fs
mov
sbb
ds
push
dec
iret
pop
adc
popf
jns
cmp
mov
cs
dec
test
sub
outsl
clc
lods
xor
mov
sub
incl
lods
xchg
pop
fnstenv
repnz
sbb
rclb
int
aas
cmp
das
subl
cmp
subl
sar
dec
dec
mov
std
dec
inc
nop
fbstp
and
gs
lcall
sub
mov
int
cltd
outsb
push
xchg
cs
andb
or
mov
ret
out
mov
fildll
stos
mov
and
lods
fstl
jno
mov
ja
mov
test
andb
stos
shl
push
and
xor
mov
cmpsl
push
das
mov
lahf
sbb
scas
int3
into
sbb
in
dec
adc
mov
icebp
dec
cli
add
movsl
iret
xorb
rcrb
mov
and
jne
stos
xchg
es
adc
dec
pop
mov
rorl
push
pop
rorb
adcb
shlb
jnp
mov
mull
pop
stos
call
sub
cli
icebp
call
pop
mov
ror
xchg
frstor
pushf
mov
das
ja
js
lods
jmp
adc
inc
push
je
mov
into
bound
aam
and
jmp
inc
lock
fwait
popa
dec
out
inc
push
lock
cmp
mov
pop
or
pop
push
dec
gs
mov
adc
jmp
mov
out
movntq
into
dec
testl
fisttps
jp
and
mov
adc
xchg
add
jbe
stc
stc
pop
push
push
xor
dec
mov
icebp
les
or
inc
sbb
push
jge
xchg
mov
or
dec
push
push
jne
fimull
stos
push
jge
mov
inc
loop
js
jo
rcrb
mov
jne
push
pop
xchg
es
mov
gs
sbb
or
cs
inc
repz
push
pop
cmp
lahf
lret
and
pop
in
xchg
adc
jb
std
sbb
mov
mull
fmuls
enter
int
lds
pop
dec
loopne
fs
xchg
stos
jb
push
js
mov
xchg
cmpsl
jne
jbe
inc
cmp
dec
mov
fistps
loop
push
imul
add
mov
sub
nop
addr16
les
lcall
fsubl
test
outsl
movsl
lock
loop
sbb
mov
outsl
dec
pop
sbb
cmp
iret
pop
mov
xor
repz
shlb
pop
js
cmp
inc
lods
enter
jecxz
mov
add
and
ficomps
or
dec
stc
or
scas
sub
jno
pop
dec
xchg
clc
xor
ret
jp
pop
js
cmp
mov
je
bnd
jnp
pushf
xor
xchg
fldcw
jb
imul
sbbl
jmp
jae
inc
and
dec
dec
jo
and
sbb
fsts
repnz
sbb
and
sub
mov
cwtl
mov
cmpsl
mov
int3
hlt
out
imul
orl
sbb
inc
inc
jp
jnp
dec
mov
mov
pop
jmp
pop
movsl
int
ret
cld
pop
mov
leave
or
ret
mov
icebp
es
ficoms
jbe
flds
mov
xor
sub
jo
and
leave
mov
push
into
mov
cmpsb
movsl
pop
mov
sahf
xchg
test
sub
sbbb
les
loope
stos
mov
push
add
mov
insb
adc
rcrb
xchg
movsl
pmaddwd
cmp
cmp
ja
xor
mov
pop
dec
push
gs
cmp
in
sub
dec
push
pop
sub
cmp
ret
mov
jg
out
mov
repnz
std
sarb
imul
cmp
pop
test
push
sti
sbb
sbb
in
in
pop
pop
xchg
mov
xorl
lea
fisubs
and
vpacksswb
sbb
imul
aas
mov
mov
push
clc
lods
push
xchg
mov
xlat
loop
xchg
mov
sub
mov
testl
or
ds
repz
popf
rorb
jg
lcall
fimuls
mov
push
xor
xchg
mov
decb
and
js
push
fldl
loop
stc
cmp
cmp
xlat
push
std
repz
idivl
in
push
aam
cmc
add
dec
mov
shl
jno
call
cld
pop
lahf
adc
subl
push
or
sbb
and
cmpsb
dec
xchg
sub
add
into
lods
mov
push
add
ds
mov
aaa
test
mov
mov
incb
jae
gs
sti
push
and
out
daa
xor
hlt
xor
pop
adc
cmp
cmp
sbb
andb
xlat
fimull
mov
mov
fstp
aaa
lahf
idiv
rcrl
xchg
jb
rcll
out
cmp
int3
mov
aam
dec
dec
jg
stc
stos
aaa
insl
mov
xor
jne
cltd
ret
loop
mov
lds
dec
cmp
lcall
push
mov
pop
roll
push
jle
or
cs
testb
or
add
and
lds
pop
aaa
fiadds
sbb
rcrb
or
fs
mov
dec
push
in
js
pop
xor
pop
addr16
push
inc
daa
mov
mov
jge
arpl
pop
shlb
into
add
mov
inc
jge
cltd
loopne
sub
sub
out
into
xlat
jbe
arpl
rcr
cmp
inc
inc
cltd
pop
stc
testb
stos
inc
cwtl
lret
or
dec
push
mov
add
aas
push
je
fs
dec
cltd
adc
pop
adc
aas
push
ja
addr16
jl
adc
cmp
ret
js
int3
enter
or
js
mov
mov
imul
dec
cmp
aaa
xor
sbb
repz
mov
add
cmpsl
ljmp
jo
sti
xor
insl
movsb
loope
mov
out
pop
add
adc
push
mov
imul
mov
pop
and
push
xchg
xchg
enter
or
adc
out
pop
sub
push
inc
dec
and
int
dec
test
test
or
lret
mov
cli
sbb
inc
clc
aam
cmp
dec
dec
int
outsb
les
pop
shll
js
lods
jne
sahf
mov
imul
dec
lods
loope
std
je
adc
mov
xor
mov
mov
dec
fstpt
inc
mov
cli
sub
inc
xchg
iret
dec
test
movsl
stc
dec
dec
call
sbb
call
in
mov
lret
flds
xorl
outsb
or
cmc
in
mov
push
fnstcw
sub
xor
cmp
hlt
mov
mov
mov
fdivrs
xor
divb
dec
out
mov
and
loopne
xchg
lret
xchg
lret
and
subb
add
shll
das
arpl
cld
test
xor
push
pop
and
loopne
lcall
repnz
lods
imul
and
push
inc
push
cmp
jmp
add
lods
and
popf
cmpsl
in
sbb
movsb
xor
cld
ss
and
inc
test
sar
sbb
push
fnsave
jl
rolb
add
jb
xchg
pop
push
pop
jl
movsl
cmp
in
mov
push
loope
sub
cmp
jle
lret
dec
jecxz
cmp
fsubl
test
roll
push
push
into
push
sahf
sub
fiadds
mov
xlat
adc
int
jg
mov
push
cmpsl
cs
imul
sub
jle
sbb
fincstp
dec
les
int
xor
ficoml
mov
or
xor
pop
sub
aam
cmp
dec
and
dec
jl
adc
sti
pop
jo
test
stc
jle
xchg
cmp
je
hlt
repnz
mov
test
dec
add
xchg
and
mov
pop
xchg
jnp
xchg
outsb
jne
sub
push
dec
lods
lcall
ss
cld
fsts
xchg
in
lea
mov
pop
aaa
and
out
fst
mov
and
jo
loop
testl
xlat
pop
xchg
push
pop
enter
mov
aas
push
push
pop
sti
stos
xchg
dec
leave
cmp
js
test
sti
femms
movsb
mov
sub
repnz
push
js
mov
sbb
mov
inc
add
adc
xchg
shr
dec
mov
xor
je
fisubs
mov
push
cmp
xor
pop
inc
aam
adc
fwait
xrelease
push
js
nop
pop
lcall
pop
jp
pusha
dec
lcall
in
stc
test
inc
aas
adc
xchg
mov
cmp
adc
adc
pop
and
ret
aad
mov
jg
inc
push
xor
mov
add
aaa
loopne
pop
mov
gs
movsb
mov
sbb
mov
out
sub
fcoml
sbb
xchg
adc
popf
scas
cli
movsl
pusha
lahf
and
pop
pop
rolb
xor
mov
roll
jb
fbld
push
inc
das
push
pop
push
imul
pop
dec
jl
xchg
push
dec
mov
aas
pusha
pop
xchg
cmp
adc
sbb
nop
test
jle
sbb
mov
call
in
pop
and
mov
aas
fsubs
mov
sbb
sub
push
mov
xor
sbb
data16
adc
add
mov
jb
adcl
mul
mov
out
xchg
imul
pop
int
pop
mov
jmp
inc
lahf
mov
je
dec
fisubl
in
arpl
cmpsb
xchg
adc
sub
or
scas
xor
int
cmp
ret
aad
inc
jecxz
jbe
inc
stos
je
repz
xor
sbbb
mov
fisttpll
jg
pop
add
pop
int3
jne
pop
push
cmp
push
lret
out
icebp
xor
or
sub
fdivl
cmp
jecxz
jae
insb
pop
int3
std
and
pop
xchg
les
lods
lret
cld
aas
or
lods
push
fs
mov
idivb
jne
lds
inc
push
mov
rcl
movsb
xchg
pop
out
mov
in
jae
rcll
fwait
push
pop
daa
jl
push
test
cmp
dec
mov
insl
and
ret
add
test
cmp
and
mov
shl
pop
jg
mov
insl
mov
iret
ret
inc
fst
daa
mov
push
pop
jg
jbe
jp
mov
orl
in
lds
pop
adc
out
jo
xchg
mov
outsl
repnz
inc
fsts
pop
out
and
sub
lahf
cmp
adc
mov
push
inc
pop
ds
enter
inc
and
divb
dec
stos
cmp
fisubl
xlat
push
cmp
mov
movsl
mov
fstl
ret
int
mov
and
imul
cmpsb
movsb
mov
insl
std
fcoml
pop
ja
ja
sti
mov
mov
mov
mov
outsl
out
popa
dec
dec
sbb
or
sbb
xchg
ss
mov
mov
xor
int3
repnz
inc
push
roll
scas
test
inc
pusha
stos
or
adc
out
out
rcr
sub
cmpb
incb
sbb
or
mov
jg
vmaxpd
adc
mov
xchg
es
sti
outsl
in
lret
adc
mov
mov
cwtl
or
rolb
scas
mov
fs
push
dec
ljmp
cmc
roll
cmpsb
sub
xchg
test
hlt
data16
mov
ret
lret
or
fdivr
fcomps
jnp
repnz
mov
jo
xchg
popf
fs
adc
push
aas
and
jle
inc
dec
shrb
fwait
loope
ja
fnsave
mov
pop
push
cmpsl
test
mov
mov
test
add
xchg
adc
mov
insl
cltd
gs
std
adc
cs
cmp
out
daa
pop
cmpsl
cmp
push
mov
lret
xor
vmaxss
sbb
mov
nop
or
push
mov
mull
out
inc
xchg
adc
cld
pop
dec
sti
fsubrp
lret
lock
aad
pushf
push
mov
lds
movsl
loopne
sub
ror
les
sarb
xorl
jle
int
or
mov
fwait
adc
and
mov
xchg
stc
add
pop
push
in
fistl
adc
fdivs
sahf
daa
ja
sbb
clc
ss
fnstenv
and
jno
loopne
xor
fidivrl
sbb
dec
mov
mov
js
mov
call
cmp
fcmovnbe
mov
or
repnz
dec
sarl
cmp
sub
sbb
sbb
scas
shll
out
adc
dec
shlb
xchg
ret
ficoms
dec
test
or
mov
inc
lods
nop
dec
mov
mov
inc
js
xchg
xor
hlt
nop
or
inc
icebp
mov
add
adcl
bound
xchg
push
in
fiadds
adc
cs
outsb
aaa
add
xor
pop
popf
jg
xchg
cs
inc
adc
js
in
push
fsubrs
dec
adc
orl
cld
xchg
jl
outsb
cmp
sbb
or
repz
shl
arpl
or
fwait
loop
add
or
movsb
mov
shlb
loope
test
negb
jns
xchg
mov
inc
sbb
fsubrl
in
inc
int3
repz
psubsw
mov
mov
or
enter
aaa
stos
fmuls
and
cld
adc
cmp
int3
pop
xor
ret
ss
dec
sub
xor
fiadds
psrlq
ds
jp
ljmp
out
leave
mov
mov
dec
or
dec
out
fldcw
cs
imul
cs
imul
fs
pop
xchg
daa
insb
cli
cmp
or
jbe
mov
add
mov
int3
sbb
sub
andb
sub
shlb
inc
pop
dec
xlat
aad
shlb
mov
fsubrs
jg
jle
shll
bound
out
cld
pop
jl
xchg
pop
push
rclb
ds
fstpt
hlt
lahf
cmpsb
int
mov
stos
adc
dec
or
testl
dec
xchg
divl
mov
push
pop
pop
cmp
mov
out
xor
sarl
jmp
clc
dec
cwtl
pop
rcrb
ds
xlat
loopne
sub
cli
xor
sbb
fnstcw
sub
subl
jp
add
push
lods
pop
sub
aam
fistl
jns
ja
inc
dec
or
mov
pop
rcr
int3
push
pushf
mov
sub
mov
cmp
inc
mov
scas
call
jecxz
mov
popa
std
daa
xor
and
fstpt
stc
sbb
in
lds
pop
insl
push
std
adc
jno
bound
inc
jae
sbb
nop
mov
into
sbb
push
push
sub
cmpsl
mov
mov
inc
cmpsb
adc
jle
adc
out
pop
outsb
or
outsl
mov
test
dec
adcl
inc
rcrb
cwtl
sub
push
arpl
aas
mov
ss
jecxz
xchg
push
or
sub
icebp
popl
nop
dec
mov
out
movsl
xchg
jle
mov
imul
push
inc
addb
dec
push
test
mov
add
cmp
outsl
cs
gs
nop
inc
ljmp
cmp
sub
cmc
out
test
add
dec
pop
fnstenv
das
clc
mov
mov
add
mov
outsb
mov
xchg
mov
nop
jnp
std
mov
cs
cld
cmp
mull
or
outsl
rol
xchg
add
sub
mov
xchg
adc
mov
pop
pop
daa
or
jmp
sahf
xchg
test
xor
cmpsb
and
frstor
lods
movlps
int
jns
sar
push
jecxz
xchg
imul
scas
mov
out
and
nop
pop
adc
add
add
int
mov
enter
inc
stos
dec
inc
push
dec
pop
sbb
cmpsb
mov
xchg
push
nop
imul
mov
lahf
xchg
cmp
or
inc
xchg
inc
pop
sub
push
adc
pop
ss
cmp
out
push
mov
sub
mov
xchg
pop
mulb
daa
pop
and
xor
clc
mov
dec
rcl
ffreep
add
sbb
out
jbe
and
pop
popa
cltd
sub
shl
xchg
shlb
pop
cmc
xor
sbb
and
bound
mov
ljmp
orb
mov
lea
call
inc
fidivl
lcall
je
xchg
enter
lahf
stc
xchg
cmp
sub
cmp
fwait
je
jae
jecxz
pop
mov
shr
outsl
test
xchg
test
ds
jle
dec
dec
mov
cmp
mov
jno
push
loope
sub
dec
cmpsl
stc
lcall
or
jl
xchg
push
jno
rclb
mov
popf
cld
mov
or
mov
adc
push
cmp
sub
ret
xchg
outsb
mov
loop
mul
aad
inc
cmp
xchg
inc
xlat
cmp
pushl
popf
add
or
or
pop
popf
adc
adc
sub
outsl
push
test
mov
push
idivl
mov
aas
jl
aam
jb
mov
mov
adc
mov
sbb
lods
repz
scas
int3
stc
xchg
gs
pusha
pop
mov
sbb
lods
adc
stc
lock
cld
add
cmc
fs
jge
jo
mov
and
cmp
push
add
push
in
mov
sub
mov
push
push
mov
pop
cmpb
adc
sub
out
add
dec
jecxz
movsb
sub
mov
scas
dec
cmp
fstl
outsl
xchg
shr
in
mov
or
cmp
mov
hlt
incl
sbb
mov
ret
jmp
aam
xor
fwait
sub
mov
movsl
dec
xchg
in
pop
fisubrl
cld
es
add
mov
aaa
mov
movsl
bswap
inc
inc
cmp
movsb
gs
jns
inc
pop
pop
mov
pop
aad
imul
jne
pop
push
out
rcl
sub
jg
popf
iret
pop
lods
int3
mov
fdivs
mov
andb
nop
or
xchg
leave
test
nop
andb
sbb
iret
mov
push
paddd
sbb
test
ja
js
ljmp
div
pushf
mov
fwait
dec
adc
mov
test
movsl
daa
xchg
imul
mov
in
jp
jno
subl
in
lret
push
pop
cmp
dec
add
pop
and
fwait
sbb
roll
ret
mov
clc
add
push
lcall
mov
pop
aam
sbb
inc
imulb
inc
imull
add
xchg
sahf
test
mov
mov
xor
mov
pcmpgtd
sbb
dec
inc
cmpsb
sahf
push
dec
push
out
cmp
dec
dec
or
push
out
loope
loop
jmp
and
mov
or
pop
bnd
sbbl
mov
ljmp
pop
lods
dec
or
jmp
pop
cwtl
int3
and
mov
cmp
mov
push
mov
cmp
pop
nop
test
lods
imul
pop
inc
int3
iret
mov
cmpsl
call
mov
rclb
out
push
mov
jle
clc
inc
negb
shll
and
lock
sbb
inc
xor
gs
sbb
rcrl
iret
clc
cmp
out
jl
mov
dec
mov
cmpsb
cmp
je
dec
inc
inc
mov
int3
loopne
jns
in
jo
es
fldl
repnz
xchg
ret
in
and
cwtl
adc
adc
push
lock
inc
fists
and
aaa
adc
mov
test
leave
jnp
cmp
loope
xchg
add
cmp
push
or
mov
repz
push
daa
mov
cmpsl
push
cmc
xchg
adc
mov
fidivrl
fidivrs
mov
int3
clc
pushf
pop
xchg
jnp
mov
aam
out
cwtl
jo
pop
mov
xchg
arpl
mov
mov
int
inc
jl
fsubrs
sbb
dec
rcll
dec
push
push
outsl
xchg
mov
xchg
push
into
xchg
xlat
mov
inc
call
mov
dec
jecxz
out
pop
adc
int3
jno
iret
dec
nop
push
and
out
or
sbb
mov
cmc
mov
inc
mov
cmp
sbb
jge
jmp
add
aaa
fs
and
fwait
in
push
push
lods
int3
loop
pop
mov
xor
push
out
pop
sub
mov
dec
scas
xchg
popf
mov
xor
out
cmc
mov
pop
sbb
rcll
std
sub
push
pop
pop
into
mulb
lahf
mov
pop
xor
call
dec
loopne
sbb
jns
pop
mov
or
imul
icebp
mov
add
out
and
mov
xchg
xchg
adc
inc
xlat
pop
fcompl
scas
pop
loopne
shl
sbb
adc
test
push
ret
mov
xor
mov
lds
sbb
xchg
in
dec
pop
push
mov
mov
or
jp
xor
sub
inc
shrb
adcb
add
xor
into
cli
in
daa
leave
fidivs
bound
int3
xor
add
jne
sti
push
cmp
scas
icebp
mov
out
out
cmc
andl
lock
das
sbb
push
es
lret
and
jne
cmpl
push
pop
dec
pop
pop
cmc
sbb
fwait
hlt
jnp
insb
add
sahf
sbb
movsb
lcall
adc
or
jb
dec
mov
fisubl
mov
sbb
cmp
push
mov
addr16
sbb
lods
pusha
mov
sarb
out
mov
popa
mov
out
push
push
push
push
xor
repz
ret
xchg
xor
addr16
mov
cmc
mov
pop
sahf
ljmp
xchg
mov
cltd
orb
dec
int3
lret
push
test
ds
fs
enter
cmp
out
inc
or
inc
push
jbe
nopl
jl
outsl
je
dec
mov
test
pushf
pop
lods
ficomps
test
and
and
and
push
jle
push
inc
rcll
push
jge
add
push
mov
out
sar
push
dec
cmpsb
adc
pop
xchg
shrb
ret
inc
repz
xchg
jmp
mov
addl
xor
and
add
jo
sub
push
push
fs
jo
packssdw
movsb
xchg
push
es
lods
ror
dec
mov
fildl
pop
imul
enter
fs
in
jg
mov
cmc
inc
loopne
mov
sub
add
lods
mov
add
fistpl
repnz
inc
arpl
add
cmpb
test
or
jae
mov
fcomip
inc
mov
popf
pop
add
in
mov
rcl
and
sbb
fdivr
mov
jne
notl
in
jl
mov
dec
inc
jecxz
sub
lret
arpl
xlat
rorl
jnp
sahf
adcl
cmpsb
fwait
test
xor
inc
and
dec
lret
xchg
std
stos
push
lods
loop
push
or
jl
adc
inc
repnz
push
lcall
imul
jecxz
add
jle
push
test
cs
sarb
lock
inc
fs
stos
cmp
or
fstl
and
sbb
adc
jmp
por
pop
pop
fsin
shll
int
mov
mov
mov
xchg
enter
enter
scas
ja
fsubrl
push
pop
movsl
insl
mov
ret
jo
jb
std
add
in
mov
xchg
sbb
xor
repz
jne
push
ret
adc
popf
mov
or
in
xchg
adc
fbstp
mov
imul
pop
lods
incb
loopne
push
inc
repz
ficompl
stos
dec
push
dec
aam
jge
inc
sub
leave
add
lock
rcll
cli
inc
outsl
sbb
out
movsb
xchg
mull
aam
and
es
neg
imul
add
sarb
adcb
fsts
out
in
pop
mov
mov
fmul
in
imul
jecxz
test
jb
lds
mov
sbb
clc
xor
mov
mov
int
andl
jmp
movsbl
fisubrs
mov
xor
aad
mov
ja
test
les
push
iret
cmc
push
lret
jl
cmp
jnp
aam
push
and
inc
or
cmp
ret
cmp
iret
ljmp
jb
dec
fistpl
cmpsb
cmp
sbb
andl
push
aad
ds
fstps
dec
rcr
mov
aas
movsl
or
or
out
ja
pushw
mov
sub
loope
aad
xor
cmp
mov
adcl
jg
sbb
adc
add
adc
adc
cmp
negb
scas
insb
adc
pushf
cld
addr16
test
mov
sub
jl
sub
jo
xchg
xchg
mov
mov
lea
jno
repnz
dec
mov
pop
hlt
mov
sub
pop
in
jge
adc
jmp
fmuls
loop
xchg
mov
shr
sub
inc
jg
jnp
mov
mov
inc
dec
or
shrl
mov
imul
push
pushf
scas
cmp
lds
push
mov
insl
test
mov
out
ljmp
stos
ret
xchg
orb
dec
adc
jle
xor
dec
sahf
mov
cli
jne
sub
cli
inc
stos
push
and
add
mov
inc
pop
mov
push
or
push
sbb
mov
pop
mov
dec
fwait
lods
fildll
adc
mov
pop
xor
mov
lock
outsb
sbb
adc
imul
inc
sahf
inc
cmp
push
mov
sub
mov
popa
dec
movb
rcl
mov
sub
in
stc
mov
pop
cs
and
sbb
mov
push
push
enter
sub
push
push
xor
cmc
insl
push
sbb
loopne
ret
loop
push
cmp
inc
aaa
push
fstl
negb
cld
insl
lods
aas
xchg
mov
hlt
cld
xor
aad
pop
cltd
dec
js
scas
jle
push
mov
fiadds
mov
in
comiss
mov
mov
and
pop
addb
jne
adc
mov
iret
xchg
push
xchg
push
xchg
mov
stos
pop
push
sub
sub
ret
lea
lock
insl
xchg
scas
rcr
cs
cltd
cmpsl
inc
daa
cmpsb
out
cmc
pop
int
mov
xchg
xorb
inc
outsl
adc
xchg
icebp
int3
xor
in
loopne
xchg
push
scas
xlat
add
xlat
ja
scas
push
sub
and
sbb
cmc
incl
push
test
cmp
adc
iret
and
add
jne
test
pushf
pushf
fdivr
mov
lods
sbb
out
mov
icebp
or
cmp
lahf
stos
imul
fs
leave
insb
je
pop
cs
out
es
bound
mov
push
push
rolb
dec
add
mov
addr16
loopne
aad
mov
imul
in
aad
dec
jge
cld
inc
aam
cmp
pop
jbe
xlat
mov
mov
inc
std
jecxz
repnz
xor
sbb
stos
daa
xlat
imul
lock
xchg
lret
out
out
scas
dec
cmp
push
in
pop
leave
stos
lahf
enter
arpl
imulb
inc
nop
cwtl
jno
clc
sbb
or
repz
mov
add
cltd
cmp
pop
rcl
hlt
ja
les
pop
popf
xor
lahf
xlat
jge
orb
mov
leave
pop
dec
imul
sbb
ret
and
and
jb
nop
adc
push
jnp
xor
out
inc
mov
inc
mov
pop
repz
inc
cmp
movsb
clc
cltd
scas
or
xor
stos
sbb
pop
adc
fwait
mov
sub
jne
lods
add
jl
scas
jl
adc
mov
xchg
xchg
mov
cmp
sub
into
cmp
pop
xchg
mov
and
ja
popa
rcrb
stc
out
out
sbb
dec
decl
inc
sub
add
xor
cmp
inc
inc
cld
sub
xchg
add
rcrl
mov
push
or
insb
cld
ds
hlt
xchg
adcl
and
stc
pop
mov
fwait
pop
mov
sarb
daa
xor
dec
xor
push
mov
sub
xchg
sbb
loopne
and
ja
lcall
je
add
xor
fidivs
mov
jg
xor
test
stos
orl
packuswb
jp
mov
int
sti
loop
lcall
pushf
xchg
adc
push
andl
stos
lcall
daa
jl
pop
lods
loope
sbb
test
mov
jecxz
pop
shlb
div
mov
shlb
cmp
outsb
idivb
inc
xchg
pop
cmpsl
inc
sarl
aas
pop
jmp
jae
jnp
jecxz
out
xchg
outsl
sub
xor
or
push
icebp
xor
out
inc
push
push
testb
sub
js
repz
and
repz
add
mov
shr
mov
push
jo
add
aam
fistpll
orb
subb
out
lods
inc
jbe
and
sbb
add
negb
into
mov
daa
push
add
inc
stc
and
pop
dec
cltd
je
jecxz
mov
pop
mov
in
mov
aad
sub
dec
push
lahf
scas
je
call
rorb
add
sahf
and
lea
lds
das
cmpsl
sbb
arpl
inc
fidivs
test
dec
rcrb
add
cmp
xor
and
add
loope
sub
xchg
test
pop
and
out
dec
lcall
push
sub
mov
jnp
fstps
xlat
xlat
jl
and
hlt
ds
jae
sbb
cwtl
cmpb
mov
mov
dec
lock
std
jnp
sub
sub
mov
push
icebp
nop
sub
jg
sbb
jge
xchg
mov
lods
or
cmp
int3
imul
jae
cmp
mov
jb
lods
xchg
lods
das
mov
mov
xchg
pop
pop
in
xchg
add
xchg
push
sti
cmp
jno
stos
push
cmp
mov
mov
xor
dec
jnp
xchg
pop
add
xchg
daa
roll
dec
mov
add
stos
stos
or
jns
inc
lret
shr
test
mov
leave
cmpb
outsl
push
test
or
out
mov
rcll
ljmp
or
pop
or
pop
scas
fcmovnb
cmp
dec
pop
xchg
into
adc
aas
or
incl
icebp
sub
push
out
lock
push
and
fcmovnu
adc
mov
pushf
pop
sbb
test
push
add
stos
shrl
pop
stc
je
fstpt
push
roll
ss
test
sbb
xor
inc
inc
stos
mov
insl
fimuls
lret
aas
pushf
cwtl
stos
cs
enter
cmp
fstps
add
es
mov
fdivrl
aad
dec
or
and
pop
popa
push
adc
sahf
push
jo
mov
insl
jmp
xor
inc
lret
std
rcr
bound
cmp
mov
sahf
shr
adc
ds
sub
mov
mov
stos
xor
sub
inc
lret
sub
roll
fcoml
icebp
push
sbb
int
mov
adc
jl
loope
pop
xor
push
ja
mov
add
pusha
lds
inc
mov
lahf
sbbl
arpl
adc
push
sub
pop
jnp
mov
test
iret
mov
loope
sahf
inc
fxam
into
dec
pop
popa
cmc
cmp
xor
test
into
test
mov
pushf
push
shrl
jae
push
cmp
mov
stos
addl
addr16
jb
scas
daa
pop
js
cwtl
dec
xchg
cmp
call
scas
sar
sti
stos
push
xchg
insb
mov
adc
and
adc
push
xchg
leave
enter
jmp
xchg
fdiv
and
or
pop
pop
mov
scas
xchg
test
pop
fs
mov
icebp
jg
sbb
pop
movsl
push
push
mov
mov
mov
mov
sbbb
pop
stc
xor
popa
xchg
lahf
add
adc
insl
mov
cmp
aam
pop
lods
es
mov
std
push
sub
sbb
jle
dec
clc
mov
sahf
jl
pusha
mov
add
das
dec
int3
ja
xlat
test
aas
xchg
out
gs
das
cld
cli
cli
cmove
repz
lods
xchg
in
and
inc
jge
and
test
stos
adc
divb
and
adc
ret
xchg
cmp
icebp
lods
out
loope
test
cmpsl
imul
scas
hlt
fucomi
add
ljmp
imul
scas
je
push
or
sti
fistps
cmpl
xrelease
mov
xchg
inc
sar
fwait
rcl
imul
xchg
popl
sbb
std
add
add
dec
mov
test
mov
jbe
sub
inc
les
fdivrs
push
ficompl
xchg
inc
xor
inc
push
cld
js
pop
stos
stos
aam
divb
sub
sub
inc
test
push
es
lret
cltd
mov
ret
in
xchg
cmp
xchg
nopl
nop
inc
clc
mov
es
sbb
jg
fadds
mov
mov
cwtl
ffree
or
jl
xor
pop
sub
jle
insb
cmp
inc
sbb
and
pop
gs
jp
dec
mov
int3
mov
inc
jmp
stc
dec
fs
adc
cmp
lods
cmp
push
imul
push
push
push
les
mov
test
addr16
sbb
movsb
dec
and
call
cmpl
push
sub
xchg
mov
lods
and
sub
jne
scas
xor
lods
movsl
mov
jno
scas
pop
push
imul
jbe
test
test
adc
cmc
rorb
mov
inc
jb
mov
push
cli
and
call
ljmp
xor
pop
mov
ss
adc
movsl
call
xlat
stc
out
fs
pop
ja
addr16
dec
jle
popa
pop
cwtl
sub
je
mov
mov
pop
ss
add
jnp
fs
lret
aad
adc
dec
les
in
sub
jmp
sar
shrl
jl
and
or
or
dec
rcl
or
es
mov
incb
loope
ds
cwtl
lock
adc
pop
dec
sti
mov
out
out
lcall
and
outsl
and
shll
xchg
sbb
cld
and
stc
adc
int
sub
jmp
cmc
iret
sti
mov
jmp
dec
cmpsb
sub
xchg
sub
cli
jno
dec
and
lds
add
enter
push
repnz
scas
ds
imul
mov
inc
sub
popa
roll
mov
push
repnz
sub
pop
cmp
and
jb
sub
fnstsw
xchg
xor
pop
fcoms
sbb
imul
ret
and
cmp
adc
shrl
mov
outsl
pop
add
in
mov
cmpsb
lret
and
vdivpd
andb
push
xchg
inc
addr16
jo
mov
and
cmc
jnp
pop
arpl
lea
lret
daa
mov
int3
mov
out
lds
push
mov
rcll
cwtl
pop
dec
gs
dec
push
adc
jp
addr16
mov
dec
in
lret
mov
xchg
dec
sti
into
mov
in
push
movsl
lahf
mov
ret
imul
push
xor
pop
fwait
movl
sbb
or
pop
mov
jns
test
push
cwtl
imul
test
lock
xchg
cmp
pop
ret
mov
and
mov
outsb
add
and
mov
dec
test
les
and
or
mov
mov
or
icebp
daa
mov
insb
out
jnp
push
mov
push
inc
sbb
xchg
fmul
jns
jb
dec
push
rorl
sub
push
subl
xchg
fwait
jecxz
lock
pop
cmp
mov
mov
popa
jg
andb
xchg
cmp
pop
jae
or
mov
inc
sahf
out
cli
out
pop
adc
adc
push
lods
or
push
mov
ffreep
mov
bound
je
sti
xor
cs
or
jp
test
enter
dec
and
push
enter
insb
cwtl
xor
bound
inc
sbb
stos
mov
fadd
imul
pop
jecxz
in
lods
notb
adcb
sahf
mov
push
adc
stos
sbb
push
and
fcmovnu
mov
cmc
sub
jecxz
pushl
mov
jmp
inc
int3
add
lret
sub
insl
insb
cmp
xchg
es
xor
insb
loopne
jle
mov
push
push
rclb
or
jp
ljmp
pop
add
pop
jp
push
and
imul
in
sub
pop
aas
daa
xlat
dec
and
push
inc
test
add
ret
xchg
cmp
cld
jb
push
lods
add
pop
fldpi
jns
int
mov
aad
mov
nop
xchg
fbld
jmp
push
jmp
repnz
or
fs
daa
sub
fwait
jns
hlt
push
mov
aam
xor
mov
test
pop
push
sbb
mov
xchg
xchg
jmp
xchg
mov
inc
imul
int
mov
adc
inc
stc
jg
cmp
cmp
fs
jns
jae
cmpsl
or
jb
das
repnz
lods
ss
jp
pop
aas
xchg
inc
mov
pop
cmp
stos
in
mov
inc
jle
lea
popa
dec
jb
cmpsb
adc
mov
mov
lret
jbe
rorb
mov
and
push
sbb
jmp
xchg
out
std
fwait
or
je
dec
xor
add
addr16
dec
jns
in
nop
jecxz
aas
cmp
enter
push
sarl
xchg
cli
xchg
dec
fidivrs
mov
test
push
js
je
pop
js
cmp
stos
jge
les
ja
std
mov
addr16
xchg
cld
call
adc
mov
jnp
incl
jnp
leave
jbe
std
addr16
sbb
xchg
mov
mov
sub
dec
mov
sti
test
lods
push
sub
rcrb
and
mov
leave
xchg
lds
imul
aam
jecxz
add
or
adc
orl
push
out
mov
dec
out
out
xchg
jns
adc
out
xor
cmp
imul
loopne
jle
jno
jp
or
andb
inc
and
lret
or
or
sub
mov
nop
or
inc
mov
outsl
xor
das
mov
ja
jo
push
sbb
inc
or
xchg
andl
adc
icebp
movsb
divl
inc
rclb
loopne
pop
and
cmp
inc
scas
dec
fcmovu
popa
out
sbb
test
fwait
outsb
pop
cwtl
hlt
popf
xor
xor
insb
lea
mov
test
xor
test
sub
hlt
add
xor
scas
xor
aaa
jbe
jl
pop
sti
xchg
jns
jno
lods
mov
lcall
jo
cmp
pop
nop
sahf
out
sbb
scas
push
jne
or
push
cmc
mov
xor
sbb
fwait
dec
call
outsl
pop
test
aaa
sub
notb
push
jp
cmp
fs
sarb
pusha
insb
and
mov
lods
adc
in
insb
clc
das
aaa
mov
sbb
inc
or
mull
ja
jg
adc
or
inc
dec
xchg
sbb
cld
jb
loopne
mov
out
out
add
insb
xor
pop
in
lahf
jae
jle
outsb
push
mov
lcall
lcall
loope
in
cwtl
sub
sub
xor
inc
or
clc
jne
inc
aaa
aam
mov
clc
mov
jmp
nop
mov
pop
and
cmpsb
push
mulb
add
sub
dec
jnp
jl
cmpsb
or
jg
daa
test
push
enter
es
stos
mov
jp
add
sti
es
sub
out
mov
mov
or
cmp
sbb
cs
fldenv
outsl
jns
test
fisttpl
add
js
stos
lods
push
das
call
mov
dec
test
stc
inc
add
mov
andb
xor
inc
fsub
sub
mov
inc
cmp
sbb
lret
mov
mov
jl
pop
cwtl
stos
push
mov
and
ficoms
mov
sbb
lock
leave
mov
in
sub
jae
imul
jno
sub
cmp
or
jge
or
pop
lods
in
and
fisttpl
or
dec
xchg
cmp
and
fbld
sti
mov
adc
push
sbb
sbb
mov
sbb
add
subb
neg
mov
fwait
lds
insb
mov
mov
xchg
and
jb
cmp
aam
xor
imull
mov
ljmp
cmp
bound
daa
inc
sarl
xchg
mov
fidivrl
into
cmp
add
mov
push
stc
fildll
pusha
cs
inc
ret
mov
xchg
dec
sbb
addr16
pop
xor
dec
lret
adc
mov
gs
int3
jne
enter
push
inc
subl
cmp
imul
les
data16
jbe
sbb
rorl
mov
mov
std
push
mov
test
dec
dec
mov
dec
ficoms
sbb
pop
fcoms
daa
in
xlat
adc
sub
ds
and
adc
cld
lods
pop
xbegin
mov
mov
leave
hlt
and
sub
jno
lea
daa
push
inc
insb
inc
sti
stc
out
or
filds
or
mov
jl
jae
aas
sub
outsl
pop
out
adc
pop
loope
xchg
pop
sbb
call
cmp
inc
movsl
loope
jae
imul
mov
out
loopne
add
mov
out
or
jg
inc
shrl
mov
insl
xchg
jns
mov
mov
sarw
sbb
fidivl
fwait
mov
xor
inc
fdiv
in
stos
fnsave
test
push
sub
inc
test
enter
in
scas
fisubrs
xchg
dec
cmp
test
stos
es
jle
lret
testb
pop
cli
and
ret
mov
ficoms
pop
es
lods
or
jge
in
mov
pop
inc
in
or
clc
sub
in
mov
sbb
fldt
cmpsb
inc
stos
mov
sub
enter
add
fidivrs
sub
sub
ret
orb
inc
push
insb
inc
jnp
insb
loopne
dec
jge
dec
mov
das
in
fcmovne
add
adc
sub
mov
les
nop
arpl
pop
dec
push
mov
fsubp
pop
subb
int
push
mov
jne
pop
jae
pusha
mov
ss
ss
jmp
sub
adc
adc
pop
subl
aas
mov
lahf
mov
push
pop
cmp
sub
jns
jecxz
lock
add
aam
ljmp
or
test
push
std
and
sbb
ffree
shll
jae
sub
jecxz
pop
sbb
or
sbb
push
push
daa
lods
push
roll
push
xchg
push
jg
pop
cmp
pop
cli
pop
mov
fisubrs
lea
mov
mov
pop
sbb
cmpsb
sbb
shl
insl
and
das
test
ja
shrl
fwait
xchg
jo
or
nop
and
sar
invd
aas
pop
daa
test
js
loop
pop
or
popa
xchg
mov
int3
push
lds
xlat
in
aam
jecxz
xchg
in
mov
aas
add
ret
add
adc
push
mov
in
fldenv
pop
sbb
and
into
rorb
or
mov
bound
loop
fnstsw
push
iret
push
sbbb
dec
or
aas
std
jno
push
dec
arpl
int3
adc
mov
loop
int3
jne
cmp
fdivl
adc
repz
xchg
into
dec
stc
add
mov
mov
push
inc
in
adc
xchg
mov
aam
cmpb
fldl
fcom
faddp
pop
lods
lods
sahf
notl
jp
aas
stc
mov
aas
mov
push
faddl
jmp
insb
xor
mov
add
add
lds
jns
and
cltd
lahf
push
jge
sbbl
fstl
xlat
mov
leave
test
xor
icebp
mov
pop
fcoms
sub
dec
shrl
xchg
outsl
xor
ds
decl
out
sbb
je
ss
mov
pop
cmp
adc
mov
and
mov
and
jne
xorb
js
mov
pop
lds
call
cmp
xchg
adc
xchg
push
or
inc
xlat
sub
scas
in
push
push
pop
inc
jecxz
mov
lds
icebp
push
pushf
pop
cmp
mov
inc
cmp
pusha
push
cmpsb
pushf
xchg
inc
bound
push
pop
inc
cmpsb
xor
pop
data16
cwtl
jbe
sahf
out
dec
inc
and
outsb
mov
sar
mov
mov
loop
loope
mov
dec
lcall
fcoml
pop
mov
pop
xchg
int
xchg
out
mov
push
in
sub
add
gs
mov
add
jp
adc
sub
or
dec
push
push
shrl
aaa
push
sbb
scas
dec
psubq
in
aad
dec
cmp
or
xchg
sbb
sbb
ja
jg
daa
stos
mov
xor
mov
sar
and
fwait
sbb
arpl
mov
popf
movsb
rcrl
hlt
or
aas
or
pop
and
jecxz
fs
jl
ret
clc
bound
leave
jge
dec
xchg
xorb
imul
ljmp
pushf
jns
pop
push
mov
mov
sar
sub
cmp
xchg
sbb
les
add
scas
jno
scas
fadd
jb
movsl
into
jl
xchg
xchg
pop
repz
mov
ja
ljmp
fwait
fs
dec
fnstenv
adc
xor
cwtl
movsl
xor
lock
mov
jbe
xchg
in
and
and
rcrl
testl
mov
xor
push
fwait
les
loope
or
pop
and
loop
ss
int
test
fistl
mov
rorl
stc
or
popa
dec
stos
xchg
scas
mov
sbb
dec
aaa
stos
mov
fwait
push
out
xchg
mov
int3
je
ljmp
inc
stos
mov
jl
mul
dec
mov
push
push
mov
jns
fists
call
jge
push
sbb
scas
xor
test
sar
inc
pop
mov
sbb
mov
notb
adc
jge
xchg
insb
das
mov
jne
add
je
ret
pop
mov
push
mov
scas
imul
paddusb
inc
repnz
jns
cmp
jb
stc
leave
and
adc
lds
adc
mov
push
jecxz
enter
fdivrs
fidivs
or
ja
sbb
dec
mov
xor
addr16
out
lcall
dec
ds
or
loopne
pusha
ss
jg
cmpsb
fcoms
rcll
daa
std
fiadds
dec
and
insl
xor
insl
add
aad
leave
in
jne
shl
mov
mov
jecxz
jge
xchg
jo
daa
std
xchg
cmc
outsb
push
inc
mov
sbb
push
xchg
aas
es
push
outsl
outsl
icebp
fsubs
push
mov
les
test
cmp
cmp
push
rorl
mov
test
sti
pop
xchg
xchg
pop
pushf
imul
xor
cmp
scas
dec
sbb
xor
mov
aad
mov
imul
mov
aaa
insb
sub
fwait
cmp
push
xchg
sti
cmp
mov
pop
mov
fcmovu
movsl
mov
push
sbb
gs
daa
into
mov
add
sub
rcpps
popf
inc
loop
aam
push
insl
sub
int
movsl
pop
repnz
lods
mov
pop
outsb
shrl
adc
dec
inc
rcrb
and
imull
hlt
mov
outsl
sahf
xor
loope
inc
into
cmpsl
out
in
mov
insb
cmp
mov
ljmp
cmpsb
cli
push
pop
push
pop
loopne
jne
ds
rcl
mov
mov
push
dec
add
loopne
mulb
shl
ss
inc
popa
pop
dec
stos
or
shll
outsb
inc
mov
xchg
mov
andb
jne
inc
xor
insb
fmul
js
and
or
out
scas
orl
inc
test
inc
fmuls
adc
sar
out
outsl
leave
into
add
mov
out
mov
mov
mov
or
cmpl
es
and
test
fistpll
mov
int
pop
test
jecxz
roll
fnstsw
and
inc
sbb
and
adc
jp
add
fisttps
jl
out
pop
repnz
cli
cmp
mov
inc
xchg
fmuls
aad
xchg
xor
shll
fldcw
xlat
lahf
xor
adc
jp
jmp
pop
cmpsl
fdivrs
cmc
in
push
int
cmc
in
fsubrl
sbb
pop
jle
mov
lds
and
xchg
fisubs
jae
fnstenv
out
mov
mov
sub
dec
push
jns
or
inc
outsl
scas
sbb
cltd
pop
mov
and
lock
movb
sub
ja
sbb
adc
fcomps
cmpsl
ds
lcall
ret
gs
jmp
pop
push
cltd
sub
fwait
std
xorl
fistps
movsb
lea
pop
ret
and
jne
repz
adc
mov
jnp
fidivl
daa
mov
addb
cld
ljmp
or
dec
cmpsl
pop
sbb
mov
dec
aam
xchg
pop
pop
dec
jno
cs
push
cwtl
mov
aad
xchg
int
cmpsl
adc
cmp
sub
sub
and
dec
sbb
or
cltd
jnp
movsl
push
loope
scas
cwtl
inc
and
pop
pop
lock
cmpsb
inc
push
daa
stos
in
stc
test
mov
push
and
pushf
cmp
pop
std
sar
xchg
iret
push
inc
sub
mov
and
addr16
adc
cmp
fistl
xchg
ljmp
lds
sub
orl
push
sti
fwait
shl
adc
sbb
lret
lea
adc
adc
push
add
xchg
adc
and
adc
inc
and
icebp
push
pop
mov
push
inc
jns
add
and
int3
das
jmp
mov
sbb
sarb
inc
fisubs
add
jmp
pop
fisubs
adc
ljmp
shll
mov
sub
xor
movsb
mov
ja
pop
cwtl
mov
mov
psrlw
mov
sbb
xor
cld
jmp
aas
jp
inc
mov
roll
cmp
lock
shlb
push
mov
cmpsb
stos
test
in
mov
xchg
dec
rorb
or
fcompl
jbe
push
shll
mov
popa
jecxz
dec
lea
xchg
mov
cmp
xor
popf
cmp
rcrl
cld
mov
in
jg
ja
rcl
out
sub
in
xchg
jae
jg
iret
mov
push
jp
daa
xor
or
arpl
jmp
push
or
popf
jae
daa
sub
pop
ds
adc
icebp
movsl
bound
pop
daa
addr16
cmp
and
pop
and
xlat
sbbb
sub
xor
push
push
mov
push
in
jb
cmp
in
iret
clc
push
push
and
in
ja
push
cmc
pop
mov
test
loopne
in
out
rcl
jne
int3
push
add
cmc
pop
dec
sub
lret
inc
vpavgw
dec
push
sbb
add
and
push
or
stos
sub
mov
lea
add
mov
push
lcall
mov
inc
repnz
fimuls
lods
leave
test
mov
sbb
sub
mov
jne
ja
mov
stos
jecxz
mov
jecxz
shlb
sub
ss
fs
mov
dec
es
test
pop
pop
lea
loope
pop
adc
adc
cmpl
sub
pop
add
lods
and
jbe
imul
lea
ss
mov
lods
adc
inc
inc
int3
repz
push
pop
lods
dec
pushf
imul
ds
cmp
sbb
pop
mov
mov
jae
clc
push
jae
cmp
lahf
movsl
xchg
data16
inc
jmp
mov
push
inc
xlat
cmp
int
js
jecxz
loope
sarl
test
xor
jge
xchg
dec
mov
fsubr
ljmp
add
aad
adc
nop
dec
push
jg
xchg
dec
or
les
in
js
dec
iret
test
and
add
push
adc
add
pop
cmpl
arpl
pop
cld
mov
das
add
cmp
out
pop
cltd
out
aaa
fadd
orl
sbb
push
xchg
movsb
movsl
adc
lahf
std
mov
sahf
push
inc
lods
mov
xchg
xor
rorl
or
dec
rcl
mov
nop
mov
ljmp
xchg
aas
push
pop
arpl
fwait
invd
lds
or
imul
sbb
movsb
movsb
rorl
cmc
testl
repz
push
or
fstl
scas
push
cmp
push
push
in
jge
xor
xchg
jno
mov
out
testl
xchg
shll
sub
imul
les
pop
nop
ss
addr16
pusha
or
mov
lods
jae
push
loop
sub
dec
cwtl
or
sub
add
retw
pop
and
lds
sub
movsb
cmp
scas
mov
sbb
js
jbe
scas
sub
lods
popa
mov
sub
jmp
add
loop
daa
adc
or
push
add
sarl
mov
dec
shlb
jo
inc
xor
nop
call
pusha
stos
sub
negl
mov
in
inc
fld
mov
lret
jbe
int
jae
push
xor
cmp
sub
repnz
mov
pusha
icebp
incb
or
sbb
sub
aam
icebp
xchg
cld
icebp
adcb
jo
or
inc
scas
loopne
popf
push
ljmp
sub
jne
mov
mov
xor
pop
cmp
mov
jae
adc
shrl
sti
push
lcall
add
push
pop
arpl
dec
shlb
mov
pop
push
in
mulb
cld
es
cmpsb
pop
icebp
jne
sub
xchg
lods
adc
push
adc
jmp
gs
mov
jo
push
mov
adc
leave
fwait
adc
ljmp
push
mov
dec
jg
mov
xor
adc
and
mov
enter
mov
call
adc
sbb
jecxz
lods
dec
jl
xchg
mov
push
out
scas
movsb
pusha
adc
mov
bswap
mov
or
push
in
mov
aas
add
aas
divb
es
push
ret
adc
mov
mov
and
stos
cmp
leave
cmpsb
aad
lahf
xor
inc
ss
scas
stc
push
jb
repnz
loopne
mov
out
js
lcall
jne
nop
push
xor
xchg
or
dec
mov
mov
or
push
sub
psubusb
jb
aad
dec
ret
pop
xchg
inc
and
sub
mov
adc
arpl
lock
das
rcl
fsubrp
sub
jge
inc
jmp
adc
mov
xor
pop
push
cwtl
lods
add
mov
fstps
enter
jge
rol
dec
popa
stc
xor
push
shll
xor
fmul
jmp
xlat
or
rolb
mov
ljmp
jg
sbb
fldl
or
xor
into
add
xchg
or
adc
int3
in
sbb
fmul
mull
or
jae
dec
xchg
pop
cmp
push
hlt
lret
or
adcb
sub
push
adc
outsl
fld
xor
sbb
out
bound
pop
xchg
mov
xlat
push
fsincos
sti
andl
inc
adc
out
aam
subl
outsl
or
push
lret
xchg
fwait
and
xchg
cs
andb
xor
cmpsl
in
jb
pop
xor
imul
adc
add
mov
into
mov
sbb
aad
add
jmp
testl
das
sbb
es
sub
xchg
mov
imul
inc
addr16
or
cli
adc
push
cltd
pop
cld
outsb
pop
clc
cli
shl
out
xor
adc
pop
je
and
mov
cmc
lea
fdivl
pop
aaa
cmp
mov
bound
insb
xchg
sbb
mov
xor
and
inc
orb
leave
shrb
cmp
mov
add
cs
push
sbb
aas
sub
daa
xor
sbb
test
iret
cmpsl
jb
je
scas
idivl
cwtl
repz
sbb
sub
sub
push
mov
out
mov
stos
popf
and
inc
inc
xor
and
jo
add
lock
or
loopne
in
push
mov
xchg
cmc
sbb
xchg
jmp
popa
jno
sbb
lret
sti
sbbb
cs
adc
add
pop
mov
jge
shrb
push
mov
rol
xchg
inc
lods
push
gs
cmpsl
loope
mov
shl
movsl
xchg
xor
mov
aam
push
mov
roll
mov
mov
cmp
pop
mov
in
leave
pop
les
lret
call
imul
shl
fmuls
fdivl
pop
lret
mov
jp
fimull
inc
jle
or
jmp
mov
adc
gs
cmc
jmp
sub
dec
sbb
jg
gs
mov
int
jmp
jne
or
sbb
jae
fidivrl
insl
sub
pop
enter
fcoml
aad
fsubl
or
nop
loopne
mov
add
fisttps
mov
fidivrl
inc
daa
inc
inc
mov
nop
cltd
mov
mov
mov
dec
mov
jge
fsubrs
stos
mov
mov
mov
imulb
loop
cmpsl
into
insb
movsl
daa
leave
push
mov
mov
jecxz
cmp
movb
mov
mov
mov
sub
cmp
dec
aam
ficoml
mov
cwtl
push
popf
faddl
call
push
mov
lods
push
fidivrs
popf
inc
mov
or
dec
je
push
or
xor
gs
out
xchg
stc
push
ret
push
fstpt
adc
int3
in
loopne
out
sub
fsts
adc
adc
sub
pop
mov
enter
cmp
aas
aad
sbb
adc
fistpl
sbb
popf
mov
decl
jnp
add
sub
mov
jmp
inc
mov
sar
dec
rcrb
orb
clc
sub
rclb
ret
call
xor
into
enter
pop
mov
adc
and
cmp
sub
pop
or
mov
sbbb
outsl
jmp
cmp
stos
push
es
sbb
or
fisubrl
sub
jb
nop
dec
lea
mov
stos
pushf
or
lds
or
sti
stos
mov
aam
aas
movsl
add
xchg
nop
xlat
fcompp
iret
or
sbb
and
add
inc
stc
add
push
xor
mov
mov
dec
pop
and
xchg
das
clc
add
dec
dec
sub
cmpsl
ljmp
mov
push
bound
out
ljmp
ja
pop
cld
sti
in
pop
leave
cli
and
jp
sti
and
outsb
outsb
test
aas
jecxz
or
mov
pop
or
mov
dec
addr16
aad
mov
and
xlat
dec
subl
mov
ror
out
movsb
loop
pop
sbb
std
push
dec
clc
lahf
sub
inc
daa
sub
leave
dec
fsubrl
add
test
and
mov
lock
push
aam
xor
xor
mov
jbe
cld
mov
mov
je
xchg
aaa
or
mov
mov
bound
push
adc
test
jae
ja
xor
in
mov
mov
sbb
push
pop
add
adc
outsb
mov
push
scas
xchg
sbbb
jns
pusha
sbb
scas
xchg
xor
mov
stos
mov
ret
sub
pop
mov
add
pop
les
inc
mov
push
xlat
jmp
arpl
repz
push
in
loope
xchg
fistps
loope
jbe
xchg
sbb
int
mov
dec
sti
xor
pop
shrl
inc
xor
inc
push
jns
rcll
icebp
je
imul
add
cs
scas
out
push
repz
arpl
push
push
pop
test
dec
mov
push
push
test
add
jbe
add
stc
or
ljmp
add
into
mov
outsb
sbb
jl
and
je
cli
xor
sbbl
lods
jg
xchg
and
and
lret
filds
dec
nop
mov
es
ljmp
add
mov
sub
sub
add
pusha
fiaddl
add
cmpsl
roll
mov
xor
and
mov
cs
mov
aaa
test
add
add
jns
mov
lods
mov
sub
out
out
sbb
dec
scas
rclb
repz
popf
xor
scas
push
outsl
xor
out
xchg
jns
xchg
nop
movsl
jle
or
fnsave
fnstcw
xor
sbb
push
incb
sti
movsl
pop
cli
jno
insb
and
je
xchg
jns
cmpsl
mov
jmp
xchg
das
sub
add
dec
jnp
mov
cmp
mov
dec
ljmp
outsb
lods
insl
orb
jl
xor
ret
adc
repz
bound
imul
pusha
lret
jecxz
enter
je
int3
out
xor
test
je
stos
cmpsb
out
divb
out
xlat
push
add
data16
mov
xchg
mov
pop
jge
dec
fildl
add
sahf
add
inc
iret
aad
sub
jg
cli
imul
lret
les
es
adc
imul
sub
fldt
mov
mov
inc
or
dec
cmp
je
ret
ret
movsb
inc
enter
test
and
ss
inc
bnd
test
imul
je
adc
mov
bound
sbb
dec
in
rcl
pop
lret
dec
imul
mov
xchg
mov
insl
fwait
loope
dec
loope
jecxz
push
jge
dec
fidivrl
sub
add
mov
push
adc
add
test
fistpl
sub
call
pop
xor
nop
mov
adc
dec
pop
dec
sbb
adc
enter
xor
mov
pop
mov
add
jecxz
iret
mov
mov
fists
mov
cmp
dec
xor
push
add
sbb
stc
addr16
ljmp
test
shll
inc
out
jge
pop
scas
sahf
lahf
dec
js
scas
fnstcw
test
inc
test
icebp
leave
out
inc
jo
cltd
aam
dec
and
insl
mov
std
dec
mov
pop
cmpsb
aas
xlat
into
pop
test
adc
mov
bound
sbb
les
test
divl
out
xor
and
fdivs
fwait
rolb
aaa
out
jo
jmp
clc
mov
roll
clc
aaa
jae
push
out
jnp
fnstsw
sbb
setae
shrl
xor
insl
jae
sbb
div
leave
pushf
xchg
xor
bound
mov
imul
xchg
fistps
sub
popa
out
aad
mov
push
jo
push
xor
imul
xor
cmp
idiv
fmulp
outsl
add
mov
mov
jno
addr16
popf
rolb
rorl
pop
icebp
mov
test
and
orl
mov
dec
pop
sbb
lahf
addr16
data16
mov
in
out
push
mov
popa
xchg
mov
push
arpl
gs
das
nop
pop
mov
push
push
clc
fstps
in
iret
stos
fldenv
xchg
xchg
adc
jb
gs
mov
pop
lahf
xchg
and
shll
inc
pop
mov
pushf
push
ret
cwtl
cwtl
jmp
cli
scas
jle
jl
jmp
addb
sbb
in
and
negl
jge
sbb
sub
sbb
sbb
aam
cmc
in
push
add
cmp
lret
adc
jb
xchg
divl
jp
cmpsb
mov
push
or
cmpsb
adc
and
jb
pushf
pop
cmp
and
jno
push
scas
xorl
push
mov
cmc
clc
push
shll
and
out
outsb
xlat
jecxz
cmp
mov
xor
jp
leave
ficoml
out
push
rorl
out
call
dec
pop
lock
loopne
sub
push
inc
cmpsl
push
dec
frstor
mov
js
adcb
lcall
incb
push
push
and
push
xchg
fsubr
xchg
nop
outsb
stc
shl
cli
pop
fs
sub
dec
sahf
sub
std
mov
mov
cmpsb
cmp
jg
test
in
shl
aam
out
fs
sbb
xchg
imul
mov
mov
sbb
mov
xchg
jmp
test
xchg
rcll
je
in
int3
rcrl
in
sbb
nop
pop
in
fidivrl
les
repnz
sbb
push
adc
orl
mov
pop
dec
cmpl
push
and
and
dec
push
mov
outsb
inc
inc
mov
in
fdivrs
fucomi
movsb
fistpl
dec
mov
cmp
cwtl
xlat
jg
ret
fsubrl
mov
inc
xchg
mov
mov
and
test
in
push
and
xchg
lret
js
mov
dec
in
ret
out
dec
dec
sbb
or
pop
pop
push
cmp
addr16
mov
and
inc
xchg
push
mov
arpl
pop
pop
mov
int3
roll
mov
cmp
loopne
aad
test
mov
push
push
cmp
js
xchg
loopne
pop
fstpt
mov
adc
sub
ret
xchg
inc
push
daa
lcallw
ret
out
movsl
das
ds
xchg
mov
push
cmpsl
adc
or
movsl
mov
and
xor
movsb
push
int
sub
or
or
in
dec
js
pusha
hlt
test
popa
mov
pop
test
sub
pop
mov
pop
into
out
jne
cmpb
bts
push
push
das
lock
je
ret
mov
sbb
or
ror
out
movsl
pop
lret
lea
fcomps
inc
xchg
cmc
movsl
add
sub
int
jno
nop
pop
mov
out
aad
out
fadds
mov
ds
pop
xor
cmc
mov
jp
cmc
bound
or
mov
ss
lahf
sbb
cmpsl
stos
dec
pop
int3
mov
scas
jne
mov
jae
test
bound
push
mov
and
add
push
inc
movsb
in
xlat
xor
push
push
add
pushl
test
lods
xchg
and
add
cmc
inc
pop
rolb
dec
pop
dec
rolb
sti
std
scas
mov
outsl
lahf
lods
fisttpl
bound
cmp
pop
lds
push
mov
scas
std
push
adc
cmp
in
mov
adc
add
add
and
cmp
xchg
in
jae
inc
ljmp
xchg
inc
jmp
stc
add
jmp
andl
xor
int3
xor
repnz
pusha
ret
repz
jne
leave
aas
repz
std
imul
ss
les
scas
cmpsl
leave
test
js
hlt
sbb
xchg
pop
mov
push
and
es
movsb
es
sbb
pop
jmp
mov
ja
ret
jl
pop
xchg
xchg
mov
xchg
sub
arpl
fisubrs
jns
movsb
sahf
jecxz
in
mov
inc
or
loop
adc
jge
pop
scas
ljmp
jp
and
inc
xor
pushf
inc
sbb
popf
loope
shll
mov
dec
insb
mov
testl
sbb
jg
lret
outsl
fstpt
mov
rol
enter
cmp
leave
push
xchg
sbb
xchg
test
xor
jecxz
xor
mov
cmp
pop
push
sahf
jg
insb
push
scas
mov
in
mov
lcall
loop
fists
adc
cli
jge
scas
mov
mov
stos
sahf
or
jecxz
mov
aaa
jge
hlt
jno
adc
sub
jb
ss
stos
fwait
pop
ja
pop
addr16
lods
arpl
and
sarl
in
sbb
fs
iret
jmp
fs
shll
mov
fsubrs
jne
dec
ljmp
aad
movsb
or
std
push
cmp
dec
sub
rcr
sub
sbb
add
xor
jge
cld
test
mov
aad
lock
stos
test
cs
stc
jle
cld
jo
js
out
fnstcw
ds
sbb
or
addr16
jae
push
ret
adc
fdivrl
jle
mov
jle
inc
pop
mov
or
xchg
movsb
xor
adc
jbe
cs
gs
add
imul
scas
pxor
test
daa
addr16
sbb
pop
and
fimuls
xor
jno
ret
cmc
dec
mov
repnz
call
jp
pushl
jns
pop
xchg
in
lds
push
or
sub
jecxz
push
inc
les
pop
sbb
cwtl
xor
or
adc
mov
xchg
data16
lds
push
and
insl
sub
dec
gs
xchg
lds
jbe
clc
or
ret
xchg
or
insb
rolb
addr16
dec
pop
scas
cmp
ljmp
jg
fs
cmp
roll
push
sbb
add
js
xchg
mov
mov
xor
sub
fstpt
mov
inc
lods
cmc
and
jnp
cmpb
fldt
sti
in
aad
ret
push
pop
popa
jae
pop
push
scas
loopne
inc
mov
cltd
shrl
mov
jecxz
xchg
jbe
ja
inc
lock
mov
xlat
orl
out
sbb
nop
or
pushf
xchg
ret
xchg
sbb
mov
enter
adc
pop
mov
das
aam
imul
ret
jecxz
push
lods
dec
mov
inc
dec
push
pop
aad
popa
mov
mov
mov
xor
lahf
cs
cltd
testl
inc
add
dec
enter
xchg
js
inc
jle
xchg
mov
mov
ja
loop
add
out
in
into
sbb
mov
aaa
mov
mov
jo
add
pusha
mov
shll
ret
xchg
js
out
movsb
push
xor
fsubs
sbb
dec
cmc
or
fidivrs
dec
sub
push
jne
imul
mov
lock
stos
in
mov
enter
mov
pop
mov
inc
xchg
lods
inc
adcb
jmp
inc
into
and
ja
lock
in
bnd
inc
adcl
int
clc
sahf
xlat
aad
mov
sub
clc
fnstsw
lods
inc
std
adc
subb
inc
xchg
es
xor
xlat
lods
aas
in
pop
insl
in
mov
ficompl
dec
outsl
inc
scas
decb
xchg
lods
inc
sub
mov
bound
xor
and
jb
pushf
jb
and
ljmp
sti
lock
flds
inc
sub
xchg
subb
jge
leave
mov
es
jae
sbb
cltd
insb
jp
pop
aas
mov
xchg
idiv
inc
mov
dec
xchg
outsb
cmp
aaa
fwait
int3
cmp
cmpsb
clc
push
in
arpl
rorl
lret
dec
sbb
mov
push
ja
lods
int3
sbb
mov
loopne
das
jle
repz
or
xchg
xchg
stos
sbbl
dec
mov
mov
clc
imul
push
ffreep
or
shl
icebp
push
lds
sbb
add
xchg
loope
mov
fsts
mov
dec
dec
mov
xor
test
fstpl
lahf
sub
mov
test
lahf
arpl
pop
mov
cmpsl
ret
test
ret
or
and
cmp
mov
popa
movsb
fildl
leave
jns
add
jle
cmc
sbb
in
sbb
into
mov
xlat
andb
xchg
arpl
into
iret
sbb
sub
sbb
lidtl
sahf
jo
pop
pop
cwtl
jmp
mov
mov
testb
aaa
daa
xorb
push
ds
cmpsb
push
xchg
push
jnp
cwtl
rorb
pop
pop
jne
aam
fwait
adc
stos
insl
pop
mulb
jl
xorb
movsb
jmp
sbbl
arpl
sub
lret
shlb
into
mov
jne
xlat
iret
cwtl
mov
mov
out
jnp
dec
popa
add
xchg
xchg
out
cmp
jb
data16
cmp
std
jp
mov
mov
jl
das
int
call
push
loopne
cmp
mov
and
inc
add
mov
lcall
jbe
iret
in
add
fdivr
leave
call
ficoml
orl
adc
call
test
jbe
pop
inc
lock
in
pop
inc
push
hlt
gs
pushf
test
or
dec
dec
lret
les
in
or
aaa
fcoml
das
je
sbb
and
imul
jne
cmp
addr16
mov
js
adc
dec
jp
jmp
lods
fsubrs
fsqrt
jae
std
je
aad
sub
pop
pop
arpl
in
cmp
sbb
and
add
jl
in
rcr
rorb
xchg
scas
pop
insb
xor
xchg
pushf
push
lret
leave
daa
jnp
scas
test
pop
push
push
lods
aam
mov
out
cli
movzwl
pop
sahf
jbe
and
into
stc
lcall
pop
ljmp
jecxz
inc
and
and
xor
xchg
divl
lret
sbb
stos
repz
lods
sub
sub
cmp
or
jno
pop
pop
jle
int3
popf
pop
ret
outsl
mov
cmp
push
and
es
pop
arpl
and
xorb
inc
insl
shll
mov
push
sbb
sbb
sub
hlt
addr16
lods
fmull
pusha
pop
mov
test
mov
mov
wrmsr
sub
pop
lds
loop
jnp
pushf
shlb
jge
lret
fmull
adc
push
mov
mov
xor
mov
or
je
dec
sbb
pop
ret
sbb
xchg
lods
call
fimuls
mov
cmpb
dec
sahf
add
daa
mov
hlt
mov
loop
mov
sub
repz
mov
adc
push
test
pop
push
and
test
inc
pop
lock
xorl
shrl
add
push
xchg
adc
and
mov
daa
enter
cwtl
push
cli
out
loopne
pop
mov
fldcw
cmp
aas
lea
jge
or
mov
xchg
mov
push
mov
gs
mov
dec
scas
dec
and
xchg
push
cwtl
jge
cmp
jno
dec
pop
icebp
cmp
or
popa
adcl
push
jge
cli
jp
adc
add
xchg
jne
sahf
or
jns
pop
insl
fwait
push
cmpl
sti
idiv
fs
call
cwtl
ret
movsl
xor
mov
paddusw
pop
out
add
shll
roll
lock
pop
or
xor
jle
fbld
xor
pop
hlt
iret
das
push
jae
pop
adc
mov
test
shll
sub
pop
ret
dec
mov
mov
mov
cmp
bound
ret
cmpxchg
jg
stc
lock
mov
adc
push
pop
jnp
fcmove
int
je
pop
test
mov
lret
inc
jbe
mov
leave
fisubl
sbb
sub
xchg
cmp
sahf
mov
jnp
sbb
outsb
or
je
inc
and
inc
stos
inc
push
xchg
fwait
outsl
sub
jmp
cld
hlt
push
pop
jo
shll
mov
rcrb
mov
sub
xchg
mov
sbb
cmpsb
sub
jb
cmpsb
cmpsl
iret
sahf
iret
das
cmpsb
sbb
adc
cld
mov
loop
aam
pop
addr16
fptan
gs
repz
ret
adc
sahf
add
je
shrb
ret
or
xor
xor
pop
jnp
movsl
xchg
mov
scas
loope
push
inc
fs
in
jmp
movsb
mov
cmp
stos
test
dec
loopne
into
in
fldcw
xor
test
in
and
sub
in
fmuls
push
roll
push
sbb
mov
pop
cmc
mov
xchg
or
mov
adc
into
faddp
xchg
in
test
jp
mov
out
inc
decl
dec
lea
negb
enter
push
jo
push
test
or
ret
adc
sub
xor
mov
test
sbb
pop
ljmp
cmc
jmp
xor
dec
in
xor
cmc
dec
jbe
and
jecxz
fucomip
cmc
loopne
cltd
mov
pop
loope
dec
add
ret
mov
fildll
fldl2e
int
fwait
mov
and
adc
inc
push
sub
pop
lret
insl
mov
movsb
stos
and
pop
xor
xchg
fbld
mov
xor
push
popf
inc
xor
fcoms
xor
dec
clc
mov
mov
mov
dec
or
cmp
enter
pop
decl
and
xorl
inc
orb
cmp
xor
jo
mov
adc
shl
add
xchg
pop
pop
and
imul
pop
mov
sub
fiadds
fildl
rcll
jge
mov
and
sub
mov
cltd
cltd
inc
mov
or
leave
sbb
cmp
scas
cltd
mov
shll
lret
jne
repz
dec
cmpl
xor
xchg
notb
daa
and
shlb
push
lods
stos
xor
stc
lea
sbb
or
imul
pop
xchg
dec
push
add
or
outsl
or
xchg
mov
xchg
test
mov
adc
loopne
xor
je
popl
cmpl
jmp
xchg
xor
mov
fst
iret
sbb
insb
xchg
xor
jae
adc
cmc
pop
pop
in
rcrl
ljmp
insb
sbbb
cld
or
inc
pop
lret
out
out
inc
mov
push
aaa
cltd
xchg
jbe
xchg
stc
fcoml
pop
les
jae
iret
jl
push
popa
popa
notl
out
push
mov
repnz
mov
push
ret
xchg
mov
pop
or
insl
loopne
jno
and
mov
cmp
imul
mov
mov
inc
pop
xchg
fadd
scas
push
inc
fwait
sub
daa
jo
insl
enter
jmp
add
cs
js
out
mov
out
jbe
fnstsw
add
pop
dec
jb
addl
insl
repz
sub
pop
ja
xchg
push
sub
inc
movb
cs
ljmp
and
pop
mov
ret
push
inc
lea
out
and
dec
add
stos
dec
or
movsb
mov
mov
nop
stos
mov
les
xor
mov
int
adc
fs
mov
push
xor
and
test
add
daa
jo
or
and
mov
inc
nop
xlat
push
out
or
xchg
cmp
sub
mov
stos
js
movsl
sub
fwait
push
gs
push
jp
adc
aad
push
js
stc
frstor
pop
insb
int
nop
jge
push
ffree
in
adc
dec
jge
sbb
lods
and
mov
inc
lods
loopne
data16
js
ljmp
xor
fcoms
mov
xlat
imul
iret
mov
add
sbb
sti
xchg
xchg
jp
cs
xchg
fstpt
adc
test
pop
add
incl
sbbb
notb
popa
jmp
hlt
jnp
mov
stc
adc
fsubl
cmp
adc
mov
fildl
fimuls
addb
mov
cs
shll
gs
and
fisubrs
loop
pop
jl
mov
jae
cmp
or
lahf
sbb
lahf
lods
mov
cmp
mov
pop
mov
jle
hlt
loop
scas
inc
adc
xchg
cwtl
dec
fnstenv
sub
lock
adc
or
arpl
movsb
adc
or
cwtl
ja
pop
inc
dec
fcmovne
cmpsb
loopne
jb
inc
mov
inc
sbb
mov
mov
xchg
in
mov
popf
in
cwtl
mov
xchg
rorl
das
mov
lcall
lahf
mov
fcompl
dec
inc
adc
or
jmp
subl
jge
sbb
mov
jecxz
lods
mov
dec
mov
sbb
shlb
clc
xor
xor
dec
jg
pusha
add
lock
insb
add
xchg
dec
inc
and
cmpsl
mov
push
jp
and
ror
add
loope
mov
dec
xor
or
push
sbb
inc
les
ret
cwtl
popa
push
mov
adc
push
inc
jne
adc
fcmove
xlat
pop
daa
mov
sbb
aam
mov
or
or
bound
jb
cmp
les
bound
sbbb
repz
clc
addr16
sbb
ret
ja
scas
and
into
mov
loopne
inc
rol
pop
gs
jg
sbb
adc
inc
jae
cltd
mov
call
pop
mov
jo
inc
gs
pop
adc
dec
pop
and
sbb
xor
fs
repnz
rcr
fistps
mov
in
nop
inc
push
add
bound
test
pop
and
fdivs
pop
daa
cmc
enter
push
lea
es
in
lea
jmp
ljmp
xchg
push
and
dec
lods
cs
jmp
lods
jnp
ja
repz
or
shrb
in
or
push
mov
push
and
xchg
aaa
mov
xchg
xlat
hlt
stos
inc
mov
dec
xor
push
cmpb
cmc
shlb
and
nop
sub
xor
push
cwtl
leave
int3
add
push
out
adc
lods
mov
push
js
push
nop
ljmp
cmpsl
outsb
aas
int
add
sbb
adc
push
sub
int3
cmp
pop
pop
or
scas
and
mov
sub
xchg
jecxz
inc
inc
lods
mov
xchg
inc
pop
rdtsc
ljmp
mov
xchg
pushf
jbe
lahf
inc
sub
adc
dec
rorb
add
mov
push
std
mov
jo
mov
push
mov
cmp
rolb
mov
cmp
dec
sub
xchg
mov
test
adc
xor
adc
or
imul
std
roll
add
ss
sub
push
ljmp
repz
jl
mov
insb
mov
ret
or
fbld
xchg
aam
push
ret
in
add
xor
ret
push
mov
mov
add
mov
scas
and
rcrb
outsb
xlat
aam
or
mov
cmp
inc
or
or
mov
gs
push
ja
pop
fistl
xlat
or
inc
pushf
inc
sub
cmp
mov
pop
xchg
xchg
testb
movsl
cmpsb
and
out
inc
mov
dec
ja
ljmp
sbb
je
xor
sahf
jns
das
enter
adc
cmp
rorb
cwtl
and
popf
inc
test
orb
mov
movl
fmull
js
xor
out
push
rcll
mov
imul
xchg
pop
xlat
lea
leave
xchg
movsl
stos
outsl
les
sbb
sbb
cmpsb
or
adc
sub
fcmovnu
cmp
sub
je
bound
mov
mov
jns
aad
cmpsb
in
mov
nop
pop
push
xchg
xchg
dec
add
outsb
xrelease
popa
and
je
ja
xchg
cmpb
fsubp
jg
ficoms
imul
mov
arpl
fdivl
cmp
loope
or
push
pop
pop
cmp
adc
sub
pop
and
jmp
cld
ret
xchg
loopne
movsl
stos
cmp
inc
imul
mov
sbb
dec
fadds
int3
jbe
das
sbb
loop
insl
mov
in
je
push
or
bound
lret
lcall
and
xorb
mov
mov
cld
mov
clc
imulb
push
jb
mov
xchg
fldcw
pop
add
jmp
or
and
test
rsm
inc
cmp
ud2
mov
add
or
dec
sbb
jl
inc
lods
cs
or
pop
bound
mov
and
and
push
js
add
test
adc
enter
add
dec
sahf
jo
jg
int3
out
and
adcl
aam
movl
inc
pop
mov
fldenv
test
das
shll
arpl
sub
test
mov
xchg
or
rcl
in
roll
mov
add
xchg
nop
pop
fdivrp
enter
mulb
roll
and
jle
xchg
stc
dec
adc
shll
iret
dec
pop
flds
adc
stos
iret
les
jbe
pop
leave
jbe
jle
stc
sbb
jl
aas
shll
push
bound
mov
xor
add
sbb
lock
lret
mov
cmc
jecxz
xor
daa
outsl
in
jecxz
arpl
inc
inc
popf
and
out
and
fists
scas
xchg
test
xlat
hlt
mov
mov
adc
dec
or
mov
lahf
xor
fisubs
decl
mov
and
mov
mov
xchg
aas
stos
out
loope
adc
mov
push
arpl
xor
and
mov
in
bound
xchg
pop
dec
sbb
adc
inc
fimull
sub
add
or
dec
loop
push
cmc
mov
pop
fcom
lea
push
shll
outsb
into
std
mov
dec
pop
out
inc
les
mov
arpl
add
popf
jae
pop
mov
cmp
push
pushf
mov
mov
jecxz
leave
lcall
and
sub
add
je
pcmpeqw
mov
and
arpl
adc
xor
sbb
nop
pop
ss
jge
int3
cmp
fistl
je
arpl
lea
icebp
push
mov
in
in
jg
jno
adc
jle
fwait
or
out
loop
in
inc
fists
dec
push
add
xchg
fiaddl
addr16
xor
pop
ret
movsl
js
jbe
xor
mov
cmp
pop
xor
call
jb
pop
cld
ljmp
adc
sub
lods
bound
fiadds
out
push
push
hlt
jp
push
pop
mov
inc
ljmp
stos
lret
ljmp
xchg
in
mov
sbb
lods
fnstenv
pop
repz
mov
add
push
sbb
dec
enter
mov
and
movsb
lcall
adc
adc
xor
jnp
je
dec
push
xor
xchg
imul
dec
icebp
push
ficompl
idivl
addl
enter
mov
xchg
push
mov
cmp
mov
sbb
ret
sbb
push
cmp
nop
mov
jo
repnz
sbb
push
jmp
or
xor
mov
popw
loop
inc
aam
dec
aam
cmp
adc
lahf
lret
movl
pop
mov
inc
inc
lret
dec
adc
lret
cs
push
adc
and
cmp
adcb
add
into
mov
and
jmp
xor
sub
pop
loopne
pop
add
dec
in
push
stos
mov
push
es
lcall
enter
sbb
inc
xchg
cmp
faddp
push
aas
imul
mov
xor
movsl
iret
xlat
sub
sub
stos
out
mov
sarb
cmp
xor
mov
popf
pop
push
movsb
and
aas
stc
bound
xor
adc
cmp
jo
lds
in
subl
addb
jg
and
repz
popa
mov
les
pushf
inc
bound
xchg
xchg
lock
sbb
or
cld
cmp
inc
loope
mov
into
sub
lods
mov
inc
xor
cmp
cld
mov
xor
shrb
and
cli
sbb
in
jb
cmc
popa
fdivl
dec
int3
aas
push
js
je
adc
leave
xor
ja
mov
xchg
sub
adcl
les
pop
jne
jns
xchg
push
or
ret
pop
fnstsw
pop
movsb
add
inc
movsl
push
pusha
imul
test
subl
test
pop
add
fiaddl
dec
out
or
rcll
and
adc
jge
shll
popa
test
shll
pop
xchg
add
and
jmp
jmp
adc
pusha
int
movsl
ret
icebp
scas
dec
pusha
fiadds
imul
dec
sbb
mov
loopne
ret
adc
inc
mov
cmpb
clc
push
push
adc
sub
sbb
outsb
lcall
cmp
leave
xchg
mov
jbe
mov
xchg
bound
std
push
sub
add
popf
shlb
nopl
fisubl
jmp
mov
jmp
jle
push
mov
mov
mov
xor
adcb
adc
or
js
insl
jo
jb
enter
sub
stc
dec
sbb
sbb
lock
loop
subb
mov
sbb
cmp
mov
xlat
lock
jmp
movsl
or
push
mov
mov
or
or
adc
lods
pop
sbb
or
int
lret
out
adc
mov
and
js
pop
pusha
mov
pop
call
xor
push
sbb
std
xlat
inc
cs
and
outsb
push
mov
xchg
jmp
fld
inc
jb
mov
cmpl
pop
in
psrld
or
add
pop
or
enter
mov
stos
pop
cmp
fisttpl
inc
or
loopne
and
lods
push
xor
mov
stc
pop
ljmp
lcall
push
jle
add
imul
sbb
jp
xchg
sub
fsub
lock
cmp
popa
addr16
inc
imulb
rorl
outsb
sub
jp
ret
or
les
xor
push
and
loop
stc
xchg
mov
jb
lods
sub
sbb
sub
shl
enter
pop
inc
je
shlb
adc
fcompl
mov
in
in
xor
pop
popa
fadd
push
adc
jbe
sarl
cmpsl
loop
outsb
in
dec
xor
out
loop
fs
stos
popf
repz
aad
xchg
and
push
jnp
ljmp
push
add
jl
add
xchg
cmp
std
sti
and
repnz
fdivs
int
jge
push
insl
ljmp
bound
and
ljmp
cmp
adc
adc
mov
inc
xchg
and
adc
rcrl
xchg
into
scas
and
mov
in
fwait
imul
gs
out
sub
fwait
pop
dec
and
dec
out
or
sbb
lods
fwait
jae
popa
adcl
or
inc
scas
scas
bound
or
rcrl
and
push
lea
imul
ret
mov
xchg
sub
sbb
or
int3
mov
push
call
imul
ret
sub
cmp
aad
jno
test
push
lods
or
mov
cmc
and
addr16
pop
lret
ja
outsl
xor
mov
mov
xor
loope
mov
jle
leave
sar
cmp
jmp
inc
dec
xchg
sub
mov
pop
rol
add
pop
and
sbb
call
inc
mov
inc
scas
mov
pushl
mov
scas
and
mov
xchg
in
iret
push
and
cmpsl
inc
jg
divl
stc
inc
cld
mov
cmp
xor
shlb
pop
or
std
xor
xor
je
pop
cmp
fsubrs
aaa
sarl
lahf
mov
and
insl
push
adc
pop
lret
jnp
fwait
int
mov
jns
aaa
xchg
mov
sub
out
adc
les
add
and
lock
enter
ljmp
push
mov
jge
sub
out
in
mov
cmp
sub
test
mov
add
in
xchg
jmp
repnz
cmp
push
mov
inc
gs
int
mov
push
mov
pop
push
insb
inc
inc
ret
in
int
packuswb
xchg
out
xor
jmp
shlb
add
pop
push
cltd
mov
int3
sbb
ss
pop
daa
push
mov
hlt
dec
mov
ds
pop
lods
sbb
cmp
push
insl
bound
js
sbb
xchg
jg
gs
cmp
push
popa
jnp
dec
cmc
in
ret
cwtl
sbb
dec
mov
dec
or
add
mov
scas
mov
and
inc
or
xchg
pushl
push
cmpl
rcrb
sbbl
xchg
fucom
imul
mov
sub
loopne
cltd
data16
jne
mov
mov
test
adc
je
inc
mov
dec
imulb
ficoml
jl
sub
jg
popa
jg
dec
mov
test
push
or
out
mov
mov
push
in
cmp
outsb
jnp
sbb
rclb
jmp
fdivr
cmp
xor
test
xchg
movsb
loopne
or
aaa
outsb
cmp
scas
push
mov
jb
out
xchg
dec
jecxz
addr16
enter
repnz
jmp
dec
shlb
test
push
pop
sbb
cmpsb
pop
sbb
sub
daa
int3
mov
arpl
addr16
in
leave
pop
cmpb
movsl
cmp
dec
imul
shlb
push
mov
jb
pop
addl
lret
sub
shlb
mov
xchg
movsl
lds
inc
pop
and
xor
dec
ds
lea
les
push
add
leave
cli
or
subb
or
cltd
pop
cwtl
stos
mov
lods
and
dec
cmp
das
push
inc
adc
cli
cli
cwtl
adc
jns
push
divl
mov
add
jnp
adc
jmp
nop
mov
jecxz
xchg
mov
adc
and
cs
popa
mov
sbb
imull
stc
mov
mov
mov
imul
xchg
js
push
mov
repnz
jge
mov
data16
loopne
inc
lcall
jmp
lea
sub
adc
pop
and
aas
sbb
push
lret
js
push
adc
sbb
movb
lret
push
add
out
xchg
jae
fs
and
pusha
pop
je
cmpl
dec
push
ret
mov
pop
loop
dec
lds
rcrb
xor
push
enter
addr16
mov
movsb
or
movsb
dec
lds
clc
ret
xchg
out
ret
jnp
jb
push
test
cmp
push
adc
in
pop
pop
mov
or
cmp
stos
addb
push
lods
mov
adc
push
popa
sahf
mov
mov
mov
push
enter
xchg
inc
sbb
mov
dec
add
pop
lods
sub
or
pop
jle
mov
jno
xchg
ja
test
repz
repz
and
sbb
in
mov
rclb
adc
test
mov
xchg
push
cli
stos
fwait
sbb
mov
aad
or
xchg
in
jne
mov
jb
andl
adc
sbb
push
and
mov
xchg
mov
mov
sbb
sahf
stos
hlt
mov
cmp
mov
jno
int
push
xor
pop
out
push
jge
nop
xchg
loopne
jne
mov
mov
scas
add
lods
inc
dec
or
shufps
pop
inc
cmp
in
loop
jle
out
mov
out
loopne
fwait
jne
xchg
inc
jge
jne
sub
jmp
sti
adc
add
imul
sub
hlt
pop
js
lcall
mov
jb
sub
mov
or
add
jmp
dec
rorl
pop
push
pusha
and
mov
inc
hlt
cmp
shrl
pop
add
into
cmpsl
iret
push
pop
lret
aam
das
shl
ljmp
sbb
fnstenv
les
inc
sti
dec
xor
loop
push
aam
cld
cli
fwait
fwait
push
iret
repnz
xchg
mov
lods
js
in
imul
mov
movsl
or
xchg
fstps
cmp
sbb
mov
sub
out
mov
je
inc
push
int3
enter
neg
mov
xchg
aam
mov
cmp
xchg
in
out
lock
push
test
loope
orl
push
fnstcw
sbb
addr16
mov
test
stos
xchg
enter
hlt
fists
cltd
aad
outsb
hlt
adc
and
and
mov
xor
rol
jge
in
insb
sub
jbe
and
jmp
xor
mov
loope
movsb
xor
outsb
add
mov
inc
stos
test
inc
gs
dec
pop
aad
mov
add
xor
xchg
lods
inc
js
mov
xchg
ljmp
cltd
jb
decl
jle
into
and
dec
pop
sbb
push
sbb
repz
faddl
add
pop
mov
aaa
test
add
out
or
jp
ljmp
clc
daa
lods
aad
adc
cld
sbbl
scas
and
ret
adc
int
cmpsb
mov
int
pop
int
aam
stc
enter
notl
mov
ljmp
stos
in
adc
cmp
ficoms
cltd
xchg
stc
xor
test
cmp
repz
rorb
jb
in
lret
rcl
int
lret
inc
mov
fmuls
pop
mov
inc
xchg
ss
jecxz
jb
sub
aaa
scas
cmc
outsl
adc
xor
in
call
and
xchg
pop
xchg
scas
les
mov
pop
mov
out
fdivs
xor
out
or
scas
mov
jnp
jns
xchg
cmp
outsb
adc
pop
out
dec
ror
xchg
push
scas
xorl
das
dec
int3
and
fwait
pusha
mov
stc
popf
dec
add
push
cmp
sahf
aas
jl
mov
movsb
jecxz
adc
pop
fcmovu
cwtl
lods
mov
adc
mov
inc
fimull
jl
lcall
outsl
xchg
mov
pushf
jecxz
sub
fisubrl
leave
jno
dec
test
xorl
movsb
popf
xor
sub
push
lahf
sub
movsl
add
pop
pop
ret
int3
lret
mov
sbb
sbb
jb
add
xchg
fsubrp
jne
xor
mov
dec
sub
ljmp
lds
imul
cmp
cmp
dec
aam
adc
aas
in
nop
xor
aam
mov
jle
sub
inc
adc
and
adc
cmp
fcomip
and
shll
fwait
xchg
add
dec
cmp
imull
mov
insb
dec
xorl
pop
imul
adc
mov
or
jl
xor
dec
mov
ljmp
popa
sub
call
insl
nop
xor
hlt
sahf
in
xchg
sub
js
mov
lods
pop
jo
jnp
call
ss
pop
addr16
and
cwtl
pop
mov
je
fsub
cmp
out
adc
outsl
insb
rolb
dec
dec
fimuls
push
aaa
jo
mov
mov
das
xchg
push
inc
stc
arpl
ror
jne
les
adcl
das
cli
sbb
or
mov
sub
adc
xorb
xchg
xor
test
mov
sbb
in
jne
adc
adc
dec
insb
cmp
xchg
shll
aad
loopne
subl
call
and
mov
insl
ja
dec
mov
push
or
popa
insb
and
or
mov
test
loope
repz
scas
sub
cmp
adc
dec
inc
and
add
ljmp
in
out
into
lea
mov
jmp
lcall
insl
mov
jno
fistl
xchg
xor
sub
aad
mov
mov
mov
lods
jle
lret
or
sbb
or
mov
pop
mov
loop
sbb
cmp
pop
jle
addr16
inc
and
ds
mov
jp
in
fdivrs
adc
sub
xor
push
or
sub
leave
loope
pop
enter
insb
adc
or
ret
sarb
mov
dec
jg
pop
mov
jp
jle
jb
ja
repnz
aaa
mov
or
dec
push
pop
inc
loope
shlb
or
lds
sub
loope
sub
fucom
push
lds
mov
js
xchg
jle
movsl
out
push
inc
icebp
stos
add
js
and
jmp
test
add
inc
sbb
xchg
lods
fldcw
test
popf
jns
add
push
mov
xchg
pop
cmp
les
sbb
data16
add
dec
inc
lock
into
jnp
fdiv
push
aaa
add
and
call
out
and
sub
js
pop
ja
outsl
xor
dec
xor
mov
push
shl
das
mov
jl
dec
and
jp
and
inc
adc
pop
test
xchg
xchg
push
test
clc
fcomip
mov
sti
ffreep
out
push
pop
test
mov
ret
loope
xchg
or
mov
inc
xor
loop
adc
dec
stos
pusha
cmpl
cmp
imul
ss
lods
jbe
divl
mov
inc
rcll
movsl
mov
jo
cmp
popf
clc
fildll
sub
ret
dec
testl
xor
orl
sbb
loop
jns
lods
movsl
cs
out
adc
roll
inc
sbb
jb
mov
inc
jmp
pop
add
adc
jle
stos
nop
push
fcompl
roll
mov
mov
lcall
movq
call
mov
in
cmpb
fistpll
cmp
pop
lock
xchg
or
xchg
and
mov
addr16
push
xlat
xchg
and
dec
loop
jecxz
imul
adc
push
push
and
enter
test
fisubrl
xlat
out
int
pop
or
push
cmc
leave
negb
mov
lods
fnstsw
aad
test
shl
pop
out
pushf
mov
mov
and
and
xchg
data16
call
xchg
out
cs
xchg
loop
jecxz
stc
mov
imul
nop
and
aam
rclb
stos
fxch
dec
dec
jp
je
push
mov
insl
rcl
outsl
shr
out
sbb
add
rorl
mov
lahf
test
lock
cli
aam
add
and
rclb
and
mov
cli
xchg
sub
push
mov
bound
test
js
shll
push
into
into
xchg
leave
mov
sub
popf
mov
push
dec
xor
shll
add
pop
test
and
adc
pop
and
scas
ja
ss
mov
fidivrs
bound
xor
xor
ret
pop
push
inc
repz
roll
adc
mov
mov
dec
sub
sbb
das
ret
les
cmp
mov
insl
je
or
loopne
push
outsb
mov
das
push
push
pop
xchg
push
aaa
dec
xchg
std
dec
mov
mov
sub
sbb
testb
divl
nopl
mov
mov
dec
lret
mov
int3
and
jbe
xchg
cmp
arpl
sub
xchg
sub
shll
mov
out
out
xor
xchg
jmp
insb
or
sahf
dec
add
rorl
push
mov
push
xchg
fwait
dec
cmp
add
in
push
xchg
mov
push
scas
into
jl
or
mov
insb
stos
and
arpl
xor
fdecstp
dec
mov
adc
leave
mov
jp
outsl
and
lret
mov
push
jmp
mov
sub
xor
outsl
lds
mov
push
pop
into
jns
cmpsl
mov
and
fucom
out
mov
sub
cmp
in
mov
shlb
test
adc
lock
adc
daa
xchg
ss
mov
mov
mull
inc
adc
jge
or
pop
mov
movsl
xor
clc
stos
and
sti
and
cmp
clc
popf
and
pop
jnp
bswap
xchg
not
fildl
arpl
adc
sbb
xchg
ret
push
or
add
mov
lea
jge
lods
fs
movsl
adc
dec
mov
sbb
ljmp
add
shll
stc
jbe
fists
pop
sub
shl
or
push
repz
and
aaa
filds
mov
cmp
cmp
cwtl
or
jno
dec
mov
jecxz
mov
sub
add
in
hlt
ss
sahf
jno
add
cmp
das
jns
push
pop
iret
fmull
repz
aaa
and
test
cmp
orl
jns
xor
or
mov
addr16
mov
imulb
dec
jbe
loope
sti
fwait
or
sub
int
cmp
xchg
mov
pop
xchg
xchg
sub
inc
aas
sbb
cmp
das
xchg
adc
and
and
sub
imul
push
push
mov
lret
push
pop
or
std
pusha
push
pop
addr16
xorb
xchg
inc
negl
sti
sub
or
loop
imulb
jge
and
loopne
imul
mov
sbb
xchg
aam
test
das
dec
xlat
rorb
inc
mov
dec
xchg
in
push
lret
add
orl
mov
mov
sbb
js,pn
mov
mov
in
mov
sub
sub
int3
fistpl
mov
xchg
call
and
outsb
push
arpl
mov
jg
dec
cld
cmp
inc
jnp
popa
or
data16
insl
dec
hlt
nop
inc
sub
xor
in
cmp
std
fbld
aam
cmp
negb
iret
call
int3
mov
out
imul
xor
in
jns
jno
aam
shll
cmp
or
out
jae
dec
sbb
fmull
cmp
xor
dec
aam
push
mov
sbb
es
dec
and
sub
fiaddl
ja
fadds
outsl
cld
push
push
mov
sbb
imul
sbb
sarb
stos
xor
adc
pop
or
dec
lret
pop
sbb
imul
addr16
test
scas
and
mov
xor
lret
lcall
sbb
jne
pop
mov
das
lahf
mov
adc
sbb
dec
xrelease
ljmp
aaa
add
add
mov
call
dec
xchg
popa
cld
fnstcw
arpl
push
out
mov
xor
lods
out
mov
mov
enter
adcb
inc
fcmovnbe
mov
jmp
xor
mov
popf
enter
dec
ret
dec
lret
sbb
sub
jg
dec
and
gs
ret
mov
cmpb
xor
mov
aam
mov
mov
fnstsw
outsb
out
pop
shrb
pop
dec
pop
adc
mull
or
shrl
loope
fdiv
mov
add
fildll
mov
subl
jg
outsl
sub
add
jb
mov
push
mov
cli
add
test
fcomps
mov
or
or
xor
push
hlt
cmpsb
sbb
push
sbb
inc
hlt
lods
les
fisttps
inc
clc
mov
fidivl
cs
cmpsb
in
das
push
and
out
adc
ss
cld
inc
lods
cld
rorb
shlb
addr16
loop
das
int
xor
out
xchg
fdivl
mov
sbb
rol
subb
cwtl
pop
int
and
std
fbld
hlt
dec
mov
xchg
ficoms
ret
inc
divl
sub
push
and
push
pushf
lret
stc
adc
jb
xchg
push
sbb
pop
cmp
aas
loope
leave
add
cmpsl
jge
push
std
sub
adc
xor
test
adc
mov
add
cmp
test
outsb
mov
pop
pop
fimull
int3
dec
jne
adc
lahf
test
inc
stc
xor
xchg
dec
test
cmp
addr16
dec
mov
daa
andb
xchg
add
push
sub
inc
icebp
or
and
jbe
jg
fwait
lods
or
jge
xchg
sbb
out
lahf
adc
mov
sub
or
pop
ljmp
pop
rcll
push
imul
lea
mov
insb
out
xorl
jne,pt
mov
stos
pavgw
add
adc
lahf
out
push
in
push
sbb
mov
cld
addr16
mov
cwtl
fwait
sbb
sub
int3
jecxz
dec
jbe
push
pop
idivb
xchg
shlb
and
or
test
mov
ja
adc
outsb
xchg
sub
pop
inc
lahf
jg
mov
jg
in
lods
inc
and
and
pop
mov
dec
inc
out
fisttpl
rcrb
push
int3
test
or
add
mov
xlat
ja
fdivs
loope
push
or
pushf
sub
sbbb
enter
test
xor
sbb
xchg
aad
lret
sbb
xor
cmp
jbe
das
add
ljmp
mov
or
sbb
popa
pop
jo
mov
test
shrb
jnp
aaa
test
aam
cmpsb
inc
js
aas
cs
int3
shll
enter
dec
push
cmp
inc
rcrb
stos
shrb
mov
out
jl
xchg
fists
and
xchg
mov
das
xchg
mov
int3
lahf
mov
sahf
jbe
fisubrs
out
cmp
dec
mov
mov
pop
in
popa
inc
in
jo
fbld
sub
jno
jns
hlt
aad
int3
or
xor
adc
mov
imul
lock
pop
and
cs
lahf
es
mov
lahf
shll
pusha
cmc
add
decb
inc
pop
loope
fcmove
pop
popf
mov
fcomps
ret
test
jmp
or
ss
mov
dec
insb
push
inc
jb
mov
mov
inc
arpl
insl
xor
push
pop
inc
dec
lar
inc
enter
cs
jno
dec
std
jae
inc
mov
ret
clc
and
mov
outsl
aas
idiv
mov
leave
jmp
mov
adc
aaa
mov
test
mov
xor
jmp
cli
pop
loopne
pop
sti
add
cmc
pop
addl
lret
inc
jnp
cwtl
push
jg
gs
aas
fwait
push
lods
aad
lret
pop
add
data16
mov
iret
lcall
or
jecxz
add
movsb
add
xchg
xchg
fabs
add
ret
or
or
test
push
jmp
xchg
pop
fcom
mov
cs
repnz
mov
stc
adc
orl
bound
ljmp
xchg
test
clc
scas
shrl
cli
repnz
pop
inc
enter
repnz
out
loopne
gs
popf
repz
cwtl
js
push
adc
popa
mov
pop
cmp
push
pop
je
or
ret
add
cmpsb
push
adc
gs
mov
cld
and
int3
lds
out
add
ret
ret
mov
sbb
pop
aas
mov
das
lea
gs
int3
xchg
lods
mov
movsl
fucom
jmp
mov
popf
sbb
stc
mov
and
push
push
xchg
imul
lret
arpl
cwtl
sbb
pop
pop
push
addr16
dec
sbb
outsl
fld
icebp
inc
pop
pop
pop
mov
std
jge
pop
or
test
pusha
scas
pushf
aad
aad
xor
aad
mov
fs
xor
or
push
idivl
sarl
mov
mov
push
and
aam
mov
push
pop
shlb
inc
dec
add
inc
std
cmp
inc
ja
cmpsb
or
push
sbb
sbb
xchg
pop
cbtw
xchg
sti
cmp
and
sub
rol
arpl
jo
xor
add
frstor
and
jnp
scas
and
repz
cld
mov
es
dec
cmc
or
lods
sbb
push
repz
lret
andb
pop
adc
call
sbb
push
scas
insl
cmp
jns
sbb
jns
loopne
xchg
push
jb
mov
pop
or
movsl
pop
pop
push
fisttps
mov
or
xchg
cld
dec
pop
mov
leave
cmp
jmp
icebp
aaa
stos
add
or
xchg
clc
jbe
rcr
and
lods
ret
in
mov
aad
hlt
xor
jge
mov
jmp
cmpsl
add
add
and
mov
out
dec
orl
or
cmp
ja
or
push
std
scas
arpl
fidivrl
and
mov
lods
or
inc
adc
icebp
movsb
inc
adc
mov
sub
and
push
pop
addr16
rcrl
pop
sbb
out
arpl
xor
pop
pop
sbb
xchg
addr16
or
insl
movsl
sbb
mov
xor
fcmovu
and
xor
jb
sbb
rcrl
xchg
jecxz
sub
ret
sbb
push
jae
ret
cmpsb
enter
sbb
cltd
xchg
sarb
decw
fcom
xlat
inc
shr
popa
stos
inc
cmp
mov
outsl
in
nop
inc
addb
outsb
and
popa
add
mov
movl
out
mov
jo
and
lahf
aaa
testl
scas
movsl
in
pop
mov
das
pop
or
cmp
add
pop
mov
mov
leave
jne
dec
mov
fwait
mov
imul
ret
and
scas
adc
ret
lret
xchg
pop
scas
cmp
dec
out
inc
inc
mov
movsb
mov
jnp
mov
add
add
popf
shlb
pusha
push
mov
dec
xchg
xor
test
lcall
stos
jae
sbb
xor
scas
andl
push
nop
pop
adc
and
push
stos
cmp
and
and
enter
adc
jae
jg
mov
adc
icebp
test
mov
imul
out
xor
sub
sbb
filds
sbb
sub
xor
mov
pop
movsb
mov
jno
rorl
mov
xor
outsb
sarb
call
and
xchg
jns
scas
jnp
lret
outsl
push
xor
mov
sbb
dec
jnp
inc
inc
xor
cmp
xlat
xor
push
lds
cli
enter
add
and
addr16
dec
dec
push
dec
adc
test
jae
jp
sub
test
mov
mov
jge
lds
and
flds
dec
add
add
sub
sbb
jne
repz
or
mov
rcr
push
dec
push
xchg
jl
imul
out
xchg
test
and
std
lods
mov
push
ret
inc
js
shrl
jbe
sbb
outsb
jl
ljmp
repnz
adc
mov
ret
movsb
add
pop
js
lea
dec
into
inc
mov
fstl
dec
into
ljmp
fiadds
add
and
sbb
ret
sti
adcl
adc
mov
push
inc
lds
mov
iret
jb
mov
and
loope
aad
or
inc
leave
pusha
pop
xor
and
push
es
popa
iret
stc
or
mov
into
fistpll
jae
out
push
stos
push
sbb
fistpl
imul
jb
jmp
xchg
xchg
jle
pop
inc
add
fs
fcomp
fwait
xchg
mov
push
mov
imul
dec
jge
xchg
setne
repz
scas
add
call
fnstenv
add
and
ljmp
and
out
sbb
cmp
jle
pop
adc
xlat
push
mov
xor
ss
outsb
in
push
lods
aas
xchg
lock
test
xor
enter
mov
push
lea
and
xchg
ret
dec
leave
jno
addl
sahf
leave
mov
pop
mov
or
pop
repz
leave
dec
sar
gs
dec
dec
ljmp
ja
sbb
int
iret
insl
pop
jns
test
xchg
aaa
call
push
orb
or
xor
mov
adc
andl
movsl
push
cmp
loope
pop
xor
mov
jbe
fidivrl
mov
jns
sbb
fucomip
mov
daa
cmpsl
insb
xchg
repnz
dec
or
lods
cmp
inc
andb
je
or
mov
enter
mov
je
jbe
jnp
sub
andl
outsl
xchg
mov
stc
subb
insb
lahf
push
test
in
cmp
sub
sub
xchg
cmpsl
iret
pop
push
inc
aad
sub
sbb
in
and
push
lea
sbb
push
mov
cmpsb
mov
sub
xor
ret
lea
stos
xchg
clc
adc
mov
daa
push
xchg
ljmp
dec
sub
int
cmp
dec
cmp
inc
int
sub
lret
jl
rorl
sbb
mov
fcoms
sbb
jge
sub
pop
mov
xchg
leave
cld
mov
mov
cmpsl
movsl
aaa
ret
mov
bound
leave
xchg
dec
sub
jge
vmwrite
mov
mov
xor
cwtl
adc
insl
incb
cmp
xchg
sub
jb
mov
add
mov
adc
mov
mov
test
pop
movsl
scas
pushf
movsl
sbb
daa
loop
cmc
loopne
adc
call
fiadds
out
outsb
cmp
mov
xlat
inc
lret
bound
je
push
ja
push
dec
cs
cli
push
fdivs
mov
pop
and
inc
dec
dec
inc
fisubs
les
in
fidivrl
popf
stc
adc
mov
loop
scas
mov
roll
test
popf
cltd
shrb
nop
and
jnp
ljmp
int
fiaddl
test
jge
push
xlat
sbb
adc
jl
and
mov
adc
xchg
cli
into
dec
je
fldl
sbb
sbb
xor
test
fs
mov
sti
sub
sti
jge
sbb
push
xchg
jb
adc
lock
leave
or
jne
adc
jge
out
inc
xor
rcl
jg
popf
sub
out
sub
sub
sbb
mov
aam
push
lahf
hlt
push
mov
fldcw
jl
cmpb
popf
sbb
sub
inc
in
sarb
scas
shrl
arpl
aad
lret
pop
inc
pusha
int3
ret
cmc
sub
mov
push
fcom
xchg
mov
iret
add
clc
sbb
cmp
cltd
daa
lock
push
xchg
aaa
lods
mov
adc
pop
and
in
sbb
cmp
xchg
jns
shrb
lret
mov
mov
cmp
cmpsb
repz
in
cs
out
jno
es
add
fcomps
cmp
inc
dec
sti
fbstp
movsl
jmp
lahf
jbe
dec
lock
pop
inc
cs
mov
jecxz
xchg
push
adc
adc
push
loopne
mov
lret
cld
and
push
lret
adc
daa
fcmovnb
lods
shlb
jnp
movsb
push
jnp
ss
xchg
adc
push
and
mov
push
es
ret
subb
out
push
adc
mov
dec
in
addb
in
aas
and
pop
push
out
xchg
ret
xchg
jae
xlat
push
scas
xchg
loop
outsb
mov
add
popf
pop
int
mov
mov
adc
out
decb
inc
cmp
icebp
dec
test
incl
mov
shll
popf
shlb
es
aam
jae
icebp
out
iret
dec
aas
ja
mov
mov
mov
je
xor
fwait
in
xor
xchg
fwait
inc
fildll
call
imul
mov
loopne
push
inc
xchg
inc
mov
stos
adc
pop
hlt
lret
daa
xor
xchg
in
adc
or
test
sub
lods
cmpsl
repz
pop
stos
xor
in
cmc
jb
idivl
scas
xor
into
add
inc
mov
add
push
pop
test
pop
mov
jg
inc
mov
outsl
dec
dec
jmp
lods
mov
pop
cmp
push
lahf
sub
mov
sbb
add
cmp
xchg
sub
adc
lods
sub
jne
jge
testb
sarb
mov
push
enter
push
xchg
loop
jnp
nop
xor
rorl
inc
and
and
movb
inc
lea
icebp
fcmovbe
xchg
push
idiv
pand
mov
cs
cli
mov
fwait
pop
mov
pop
mov
adc
outsb
lock
insb
iret
mov
fistl
lods
and
or
mov
sub
mov
rcrl
cmp
pop
add
jmp
pop
inc
fdivl
lds
and
fs
push
or
jl
xchg
enter
xchg
pop
mov
mov
sbb
dec
out
inc
adc
xor
fcoms
mov
add
adc
xchg
sbb
push
push
xchg
jmp
inc
push
lds
lock
sbb
pop
cmpl
xor
pusha
push
pop
stc
divb
push
push
mov
leave
pop
mov
fisubs
or
insb
hlt
pop
adc
test
repz
negl
or
cmp
icebp
ja
insl
in
mov
jns
cmp
lahf
sbb
xor
xlat
inc
xchg
fnstsw
mov
push
inc
into
adc
mov
lock
sub
xchg
push
mov
mov
rol
jo
or
sti
dec
sub
outsb
arpl
cmp
idivl
lock
sahf
fsubl
sti
lret
sbb
mov
push
fistpll
push
ret
mov
ja
push
mov
cmp
lcall
push
dec
test
bound
inc
push
add
mov
pop
push
idivl
push
fsub
movsb
mov
sub
xchg
ftst
andl
or
push
mov
int
nop
sbb
mov
sbb
in
pop
jp
inc
leave
push
cmpsb
xor
mov
ds
and
aas
push
push
mov
cli
sub
jg
xchg
fwait
xchg
push
push
dec
das
or
jmp
ja
pop
sub
xchg
hlt
pop
lahf
mov
jns
push
outsb
loope
xchg
aaa
push
daa
aam
cmpb
inc
lds
and
push
mov
shrl
bound
inc
jl
xchg
pop
mov
pusha
ss
pop
cmp
stos
pushf
insb
ud2
and
mov
fnsave
nop
cmp
and
sbb
js
test
or
push
test
push
push
inc
aas
add
adc
push
cmp
es
xor
lret
push
cmpsb
or
fldl
and
push
sbbl
test
cmc
sub
and
dec
mov
add
iret
push
flds
or
push
pop
pop
jnp
mov
into
lods
rorl
mov
pop
inc
div
fnsave
sahf
mov
push
or
cltd
dec
ljmp
or
dec
add
dec
and
dec
fsubrs
pop
and
mov
dec
cmp
std
in
shll
outsl
dec
lcall
mov
cmp
ds
xchg
hlt
dec
js
ret
xchg
loop
test
add
adc
cmc
adc
pop
insb
xchg
adc
dec
adc
push
adc
fstps
in
mov
and
inc
jnp
pop
addr16
fidivs
imul
insl
xchg
mov
dec
jno
push
in
xor
mov
lods
std
test
cmp
dec
mov
mov
push
inc
xchg
mov
xchg
insb
sbb
aaa
jno
inc
adc
pop
push
pop
mov
setae
scas
lcall
dec
dec
adc
sub
mov
mov
xchg
jg
pusha
std
out
stc
movsb
iret
stc
sbb
ret
mov
mov
mov
stos
adc
and
scas
xor
test
push
aad
insb
xor
les
jo
mov
inc
cmp
pop
cmp
push
fldenv
test
push
fs
adcl
fisttpll
loope
pushf
testb
pop
icebp
pop
jnp
cwtl
add
inc
loopne
add
inc
testb
and
out
and
int3
insb
lcall
testl
xor
inc
pop
test
push
in
push
pop
icebp
pop
push
and
cld
push
lea
mov
mov
repz
fwait
mov
aad
jbe
lods
stos
pushf
inc
jl
xchg
push
dec
xchg
shlb
cmp
jne
test
rorb
or
call
stos
xor
movsl
mov
in
push
pop
cmc
push
int3
sbb
jbe
fcmove
cmp
out
sub
or
inc
pop
je
sahf
mov
cmp
xlat
ret
jno
scas
fdivrl
imul
ret
std
adc
leave
ja
subb
or
jmp
jbe
mov
jg
sbb
les
scas
iret
repz
and
lds
sbb
ret
sarb
lea
loopne
iret
mov
sub
mov
pop
mov
jae
imul
and
fcmovnu
aaa
push
subl
mul
inc
and
mov
pop
cwtl
insl
push
xor
cmc
pop
fcomp
dec
addr16
enter
outsb
lods
inc
lcall
js
hlt
int
push
push
cmp
int3
rorl
xlat
imul
nop
in
and
add
out
mov
jno
adc
dec
push
pop
lds
decl
or
sub
fucomi
push
xchg
divl
xchg
shll
jp
jno
test
pop
pop
out
orb
xor
outsl
in
and
jge
jl
je
push
loopne
lret
das
outsb
mov
push
xor
xor
daa
lcall
icebp
or
fistl
sub
rclb
jbe
mov
mov
cld
in
xor
shlb
adc
out
add
shrb
mov
aad
jle
sti
push
cmp
jbe
in
mov
stos
es
mov
xchg
cld
mov
and
fs
sarb
in
jl
cld
ret
xor
jg
mov
imul
in
mov
test
rcr
mov
xchg
inc
icebp
jecxz
lock
fstps
mov
lods
movsl
pop
fmul
push
add
in
add
dec
cli
mov
or
lret
and
inc
jns
js
sbb
xchg
inc
insl
stos
sbb
mov
xchg
xor
or
mov
scas
jmp
mov
aaa
add
mov
lock
mov
lahf
cmpsl
lods
outsl
jb
and
mov
mov
sub
aam
dec
mov
xchg
fld
dec
and
fbld
sbb
pop
mov
cmp
jecxz
js
dec
pop
mov
lea
pusha
and
mov
int
xorb
mov
js
repz
pushf
add
imul
push
lret
lcall
in
adc
outsl
or
mov
repnz
stos
das
mov
adc
pop
adc
stc
sbb
dec
pushf
mov
lods
jl
or
arpl
sbb
or
sub
inc
sbb
fucomip
mov
dec
inc
mov
mov
loope
inc
dec
adc
cltd
inc
cli
rep
add
push
les
mov
lods
push
add
lret
inc
xchg
popf
fildl
lret
cltd
flds
pop
cmp
mov
arpl
lods
jmp
pop
xchg
ja
enter
ret
push
in
bound
cmp
mov
xchg
sbb
rsm
xor
dec
xchg
xchg
push
loopne
inc
repnz
or
mov
dec
inc
mov
aaa
loope
inc
enter
popa
sub
stos
xchg
out
push
sub
push
mov
adc
pop
imul
cmpb
icebp
xchg
sbb
add
inc
dec
push
loop
movsl
aad
jo
lcall
incb
dec
ss
xchg
sub
bnd
loopne
outsl
sub
jmp
adc
mov
test
cmpb
mov
jg
mov
into
out
fcmovnbe
mov
arpl
mov
sub
lods
call
sti
xchg
mov
xlat
movsl
xchg
push
fdivrl
out
hlt
cmp
scas
pop
mov
adc
add
sub
mov
sbb
dec
and
in
and
jb
sbb
sub
test
and
jns
mov
cld
add
add
jecxz
outsb
jmp
mov
movsb
mov
inc
jmp
push
repz
xchg
mov
fidivl
jle
mov
xor
jbe
push
mov
std
test
sub
and
cmpsl
and
cmp
pop
subb
lret
adc
inc
push
xor
or
lods
call
sbb
or
jne
lret
or
rorl
loope
mov
lock
int
inc
xchg
in
cmp
cs
fsubrp
or
xor
or
leave
ds
mov
in
lahf
dec
add
xchg
xor
sub
pushf
sbb
mov
cmp
int3
imul
dec
or
and
sbb
lret
xor
loop
mov
icebp
sbb
popa
push
ja
xor
in
shrb
mov
icebp
jae
xchg
mov
xor
lds
ss
push
push
cmp
mov
mov
mov
insb
add
adcl
test
mov
ss
in
lea
mov
call
xchg
mov
movsl
add
test
mov
pop
js
orl
popf
adcl
pop
mov
icebp
sub
add
js
cmp
adc
imul
sbb
mov
fisubrl
dec
jno
fnstsw
xchg
jp
dec
inc
lea
jbe
add
stos
mov
inc
cmpsl
sub
adcl
mov
pushf
aam
pop
in
cmp
xchg
xchg
adcb
mov
sub
jge
mov
and
pop
dec
call
into
addr16
xchg
dec
jno
rorl
inc
mov
inc
mul
call
jbe
loope
lds
jnp
push
mov
inc
int3
sub
lcall
and
mov
das
int
and
in
lock
ffreep
add
add
jg
jae
in
adc
dec
dec
lahf
inc
adc
dec
arpl
das
insb
mov
add
imul
sub
pop
mov
std
fwait
dec
out
jp
push
mov
imul
cmp
mov
fwait
sti
mov
stos
mov
sbb
mov
inc
enter
mov
hlt
sbb
nop
jp
std
xchg
dec
addb
mov
sub
pop
loop
jo
test
push
xor
stos
add
dec
xchg
andb
sbb
mov
or
or
inc
xchg
push
aas
pop
sbb
pushl
jge
stos
leave
inc
sub
adc
xor
cli
seta
mov
data16
out
xchg
sub
inc
hlt
jg
add
push
icebp
stos
gs
xchg
inc
push
ret
pop
lea
lcall
adcb
mov
ret
inc
xchg
popa
pop
ret
xor
test
arpl
lret
lret
cld
rol
shr
sub
sub
in
jo
je
outsl
and
fnstenv
faddl
xchg
fsubl
gs
xor
imul
pop
out
mov
push
adc
jmp
lods
popf
mov
add
mov
dec
mov
ret
inc
clc
les
icebp
dec
push
and
lods
mov
dec
sbb
imull
mov
aad
arpl
das
adc
ljmp
add
aas
xchg
sbb
pop
dec
mov
pusha
ds
sub
repnz
cld
clc
cwtl
pushf
mov
dec
xlat
add
data16
mov
fcompp
aaa
sub
and
adc
stc
mov
cwtl
inc
sbb
cltd
shll
push
insl
lds
xor
mov
ret
inc
enter
cmc
inc
adc
aaa
mov
ffreep
pusha
mov
mov
jmp
fwait
jb
lret
jecxz
jg
mov
xor
ret
jecxz
mov
inc
loop
cltd
mov
leave
aas
jp
xor
inc
inc
ss
fwait
mov
inc
fistpll
inc
ljmp
jecxz
cmp
mov
push
pop
mov
jo
test
jns
cwtl
xor
and
std
lahf
cmpsl
jae
push
xor
xchg
pop
outsb
in
out
fs
inc
mov
push
inc
jo
pop
js
mov
out
push
sarb
add
adc
sbb
pop
sbb
mov
add
outsb
sbb
out
jne
push
adc
xchg
cmp
push
arpl
adc
sbb
repz
xchg
mov
inc
adc
xchg
xchg
fldcw
adc
lret
shlb
mov
cmc
lea
cwtl
ds
int
test
xchg
iret
cld
pop
clc
jae
or
push
lds
xor
insl
dec
jo
ret
pop
stos
int
push
out
insb
fnstsw
sbb
fwait
xlat
inc
in
fidivrl
xor
in
das
popa
pop
data16
mov
loope
arpl
cmp
adc
cli
adc
lret
iret
loop
cmp
das
pop
pop
add
mov
push
and
icebp
test
pusha
push
aad
repnz
sar
xchg
push
popf
xchg
xchg
leave
stos
inc
stos
push
repz
adc
mov
out
xor
xor
lcall
sbb
pop
ret
cmpsb
xor
inc
mov
out
mov
adc
xchg
mov
sub
xor
scas
dec
jno
ss
sti
lds
xchg
sub
repnz
test
mov
mov
hlt
jbe
mov
cs
clc
aam
movsl
lret
mov
push
push
mov
push
adcl
outsb
inc
pusha
mov
mov
xor
adc
shll
sbb
lcall
xchg
mov
clc
mov
push
addl
mov
jmp
lock
xorb
ljmp
mov
push
jmp
dec
xor
push
scas
mov
lcall
dec
std
xor
sti
mov
sub
sub
cli
sarl
xchg
jl
mov
push
jnp
cmp
mov
nop
lds
and
andb
mov
test
fcompl
pop
sub
mov
push
movsl
in
fisubl
xchg
add
sti
in
push
mov
inc
mov
in
mov
mov
xchg
pop
or
mov
mov
inc
cmp
fbstp
call
enter
xlat
pop
orb
cmpsl
add
push
adc
les
xor
mov
in
jle
or
sub
add
out
xchg
fstpt
je
ss
or
or
adc
mov
gs
popa
sbb
mov
xchg
adc
dec
lods
arpl
es
mov
add
or
or
js
bound
popf
sbb
scas
xchg
ja
fsubp
negl
push
or
mov
lods
insl
adc
jo
fimuls
push
xchg
icebp
cmp
outsb
lods
sub
hlt
mov
movsl
pop
or
push
ss
inc
push
nop
xlat
mov
sub
push
pushf
push
dec
mov
int3
sarl
mov
jle
sub
xchg
mov
inc
push
cmpsb
mov
mov
jbe
inc
lret
mov
add
mov
das
aas
inc
in
xor
scas
inc
mov
aas
mov
fdivrl
sbb
fdivrp
aad
or
pop
jae
ror
je
cmp
adc
and
mov
inc
int
hlt
mov
pusha
and
cmp
cli
xor
rorb
scas
mov
icebp
mov
aad
and
in
sahf
push
outsb
cmpsb
mov
mov
jno
mov
movsb
xor
push
jecxz
popa
dec
push
cld
xor
xor
push
stos
jl
fstps
mov
pop
cmp
sub
cld
into
sahf
jge
sbb
orb
sub
je
stc
xor
fcompl
stos
inc
mov
mov
jecxz
shll
popl
std
movb
add
aam
inc
adc
pop
push
push
sub
lods
dec
test
xor
lret
in
and
xor
shlb
mov
mov
dec
cmp
xchg
jae
mov
cwtl
mov
rcl
fs
cmpsb
dec
or
lods
mov
pop
cwtl
shll
test
in
hlt
movsl
inc
out
scas
outsl
mov
out
dec
call
aad
push
jne
repz
sbb
sbb
adc
mov
and
mov
add
addr16
les
dec
js
cmp
pop
lea
cs
lods
fstpl
add
or
mov
and
mov
add
addr16
int3
loope
push
insl
push
in
and
add
jg
test
mov
js
and
jae
sbb
fildl
test
pop
and
lods
rcrb
and
out
sub
les
hlt
hlt
ss
mov
jg
pop
adc
cmp
cmp
pushf
in
xchg
dec
loop
cmc
xor
rcll
sub
rcll
mov
jl
ss
push
jo
mov
cs
and
push
rorl
inc
and
lods
jl
fs
sarl
mov
adc
mov
jmp
and
pop
rclb
fsts
data16
shl
outsl
add
dec
add
lcall
push
jb
outsl
lock
cmp
aaa
jmp
minps
dec
enter
cmpl
jl
outsl
insl
pusha
lods
sbb
lahf
lahf
mov
mov
jae
rorb
out
or
mov
iret
jnp
adcb
adc
adc
mov
mov
mov
pop
jnp
mov
test
ljmp
out
mov
and
push
or
in
xor
lahf
addr16
imul
cld
out
sbb
jne
fidivl
pop
int3
stos
mov
movsb
gs
mov
aaa
cmp
xchg
pop
imul
jl
xchg
orb
xchg
daa
sbb
dec
sub
mov
insl
fldt
add
cmp
sbb
sub
stos
mov
pop
dec
mov
jecxz
mov
lret
scas
xchg
ja
pop
testl
nop
xlat
jl
repz
mov
int3
aas
or
cmp
or
ja
and
js
movsb
inc
and
in
mov
jbe
or
inc
push
lcall
hlt
popf
mov
inc
jge
mov
loop
mov
das
lods
xchg
jle
repnz
xchg
mov
sbb
cmpsb
fisubrl
jbe
lds
add
aaa
cmpl
bound
mov
cmp
rolb
xchg
pop
inc
int3
push
fadd
jmp
jecxz
mov
or
mov
and
ret
adc
fdivrl
mov
and
mov
lret
lea
lock
mov
pusha
icebp
mov
popa
std
leave
mov
xor
push
xchg
jo
mov
mov
mov
add
jle
jp
ss
adc
stc
xor
cwtl
xchg
loope
rolb
mov
jb
repnz
popa
gs
or
mov
clc
push
sbb
imul
jae
movsb
or
and
pushf
cmp
cmpsb
inc
shlb
lret
push
dec
sub
jbe
jge
xor
icebp
clc
cmp
shl
cmpsl
aaa
sbb
mul
rorb
mov
dec
arpl
or
xor
pop
mov
call
in
mov
imul
shlb
sti
jne
popa
outsl
cmc
mov
sub
lahf
push
adc
add
paddusb
pop
movsb
xchg
fcmovnbe
add
rclb
test
test
arpl
out
je
mov
jnp
ljmp
cs
daa
das
mov
es
and
or
pop
or
in
sbb
inc
sbb
xor
push
shlb
jns
daa
push
mov
popa
in
dec
pop
call
mov
loope
and
jo
inc
in
int3
push
fs
adc
in
fucom
mov
add
xchg
fidivrl
outsb
push
jmp
arpl
adc
mov
sahf
cmp
cwtl
dec
mov
pusha
sub
sub
ss
fs
scas
addl
xor
sub
std
stc
shrb
xchg
fs
push
pop
scas
mov
mov
mov
and
fwait
aaa
dec
pop
mov
loope
fwait
mov
pop
inc
out
aaa
ja
sub
mov
lret
adc
dec
and
cmp
mov
xchg
sbb
pop
scas
je
add
jp
sbb
mov
push
ds
mov
sub
fwait
call
rcl
mov
fadds
fildll
call
or
mov
dec
add
push
mov
jg
adc
mov
cmp
aad
add
stos
xor
push
inc
jo
push
cmp
hlt
lods
sahf
shlb
loopne
mov
mov
dec
fbld
pop
push
sahf
call
fidivrl
mov
inc
sbbb
cmc
test
fsubl
lods
scas
les
mov
add
test
dec
loopne
aam
addr16
sbb
aas
fmul
sarl
mov
cmp
mov
orb
das
cmp
cmp
les
dec
test
push
or
ret
cmp
mov
cmpl
cmp
sbb
test
lods
sbb
add
jne
stos
fcomps
sahf
das
pushf
loopne
mov
pop
scas
out
repz
cmp
sub
jle
setae
adcl
div
iret
test
jmp
fsubl
lret
lea
and
inc
mov
addr16
add
mov
pushf
adc
cmp
inc
xchg
cmp
mov
lahf
cltd
cmp
push
xchg
fcoml
out
imul
mov
sbb
stos
cmp
lea
insb
insl
dec
test
int
test
jae
mov
inc
inc
in
test
aas
cltd
mov
xor
out
dec
or
push
clc
sbb
iret
pop
pop
std
sub
rcrl
fimuls
dec
rclb
ret
jne
xchg
mov
jae
jae
dec
pop
lret
stc
out
mov
jl
leave
mov
add
js
fidivrs
mov
mov
pop
jo
mov
cmp
cmp
push
mov
xor
adc
int3
mov
scas
jecxz
sti
in
mov
inc
mov
jl
jno
cmpsl
mov
pop
sub
cltd
pop
cmp
lds
jecxz
cmp
popf
pop
decb
outsb
pop
mov
cmp
loope
pushf
cld
es
mov
add
add
and
pop
mov
dec
xor
or
mov
shrl
mov
lods
jb
xor
sub
daa
fadds
add
lds
xchg
push
cmp
rcrl
icebp
mov
dec
fsub
shrb
pop
or
sarl
cmpsl
rcr
nop
les
inc
clc
stos
cmpsb
shlb
shll
jl
dec
bound
push
pop
jmp
mov
jbe
lods
mov
mov
gs
sahf
jg
jbe
fsqrt
dec
pop
scas
jmp
ret
rclb
movl
pop
cmpsl
adc
cmpl
repz
or
mov
out
mov
push
pop
push
mov
jecxz
lock
shrb
dec
shlb
mov
scas
cmc
cld
adc
jo
push
ja
lods
pop
and
jle
mov
sub
arpl
inc
mov
out
inc
pusha
pop
pop
sbb
in
clc
sbb
jne
mov
sti
cmp
jl
fiadds
js
mov
sbb
pushf
and
sahf
adc
cld
imul
dec
mov
mov
outsb
and
inc
iret
mov
pushf
arpl
xchg
adc
jns
loop
hlt
fadds
sub
daa
cmp
das
sahf
fsubrs
lods
imull
xchg
push
aaa
loop
inc
daa
dec
mov
fidivl
addl
and
mov
sbb
adc
js
pop
lock
imull
mov
mov
fs
pop
inc
jb
fwait
add
sbb
iret
add
add
inc
aam
iret
mov
xchg
in
push
jecxz
outsb
dec
test
mov
fmull
scas
jae
cmp
inc
or
rol
push
sub
outsl
mov
insl
test
push
cmpsl
push
and
aaa
adc
fwait
cmpsb
shl
pop
inc
les
xchg
popl
add
movsl
popf
mov
and
repnz
xchg
dec
mov
sbb
lods
ret
xchg
inc
test
cwtl
fmuls
in
push
inc
sbb
fisttpll
lret
scas
test
enter
lods
scas
mov
lods
mov
push
mov
adc
test
out
pop
test
test
jge
test
push
aad
test
adc
or
push
xchg
pop
push
or
test
cmp
je
pop
test
icebp
jecxz
gs
push
pop
setne
mov
add
test
mov
je
add
add
rcrl
lock
adcl
cs
lods
pop
cmp
loop
sbb
jb
sbb
jae
ret
add
sbb
sarl
js
out
cmp
or
jmp
dec
xor
call
mov
mov
inc
cltd
push
xchg
jns
push
sarl
test
jecxz
add
jb
adc
rorl
mov
push
test
fwait
cli
inc
outsb
adc
pop
inc
ljmp
push
and
das
mov
ret
inc
aaa
or
sbb
adc
xor
scas
lret
shl
loop
push
jl
sub
addl
mov
das
fs
mov
pushf
xchg
call
inc
stos
insl
push
xchg
mov
cmovp
dec
push
repz
sarl
ja
jecxz
dec
inc
repz
lock
lret
scas
xlat
outsb
jnp
pop
pop
mov
scas
fcmove
xor
icebp
mov
inc
fs
and
cmpsb
adc
mov
jo
pop
cmp
cmpsl
inc
into
popf
outsl
push
jnp
dec
movl
in
cmp
out
xor
int3
cs
push
mov
outsl
adc
dec
xor
fisttpll
xabort
sub
rorb
jl
mov
arpl
sub
push
xchg
ja
test
and
add
rcrl
xchg
enter
xor
sub
inc
mov
seto
jmp
push
push
mov
jle
jb
test
test
lahf
mov
stc
or
xchg
fcomi
jb
mov
jecxz
cmc
ja
ds
sbbl
jns
push
inc
addr16
add
push
or
xchg
push
pop
jg
jg
sub
out
cmp
cs
les
scas
js
imul
pop
or
out
xchg
outsb
add
pop
jecxz
jne
add
sbb
in
int3
ja
sub
cmp
das
iret
jno
push
xchg
jmp
out
call
inc
cmp
or
sub
leave
inc
and
movl
add
or
push
call
inc
pop
lods
lods
test
xor
roll
roll
in
mov
insb
sub
das
jl
cmpsl
sar
js
jbe
pop
mov
enter
jmp
lea
pop
out
xor
movl
push
xor
insl
out
add
inc
xchg
sti
ljmp
fidivs
clc
fnstcw
divb
xor
imull
pop
push
ficompl
ficoms
jbe
and
xor
imul
add
aas
in
fisubrl
cmpsb
push
sub
scas
inc
insl
mov
inc
lcall
bound
and
mov
adc
aas
mov
in
inc
imul
into
js
mov
lahf
cmpsl
ret
aaa
mov
scas
cld
sbb
xor
out
fisubs
pop
sbb
pop
add
add
or
or
insl
out
mov
das
mov
inc
mov
mov
aaa
insb
outsb
dec
lods
jb
hlt
adc
das
stc
mov
push
popf
je
push
push
sub
dec
test
ds
ja
and
dec
or
cmp
push
adc
lock
xor
inc
sti
cmp
sbb
mov
jg
bound
pop
jge
mov
and
sti
and
push
mov
add
in
out
cmp
call
loop
or
jo
or
sbb
cmp
test
mov
push
cld
fcmovne
loopne
repz
gs
sahf
dec
mov
mov
add
das
subb
stc
imul
sbb
adc
jle
out
cmc
push
lds
adc
jge
inc
xor
imulb
mov
movsl
push
pop
jnp
repz
and
jnp
hlt
ret
popa
inc
pop
inc
stos
test
inc
loope
idivl
and
cmp
pop
out
push
mov
inc
cwtl
and
sbb
les
pop
inc
in
mov
test
push
push
and
sub
cwtl
lcall
jp
pop
and
imul
insl
lret
fdivl
in
nop
pop
inc
les
rcrl
ret
dec
movsl
sub
out
push
xchg
mov
mov
xor
jecxz
addr16
xor
repnz
call
test
fbld
push
or
adc
pop
mov
dec
jnp
pop
aaa
movsb
out
ss
pop
fs
aaa
lcall
lret
add
rcll
dec
daa
push
or
sbb
xor
pop
add
jp
dec
pop
pop
fcompl
lret
std
test
cmp
xchg
and
test
push
push
mov
in
stc
xchg
jl
lret
outsb
push
stos
movsl
push
loopne
inc
xchg
bound
fimuls
leave
je
and
mov
shrl
mov
xor
pop
push
insb
or
aam
push
gs
addr16
lret
lret
xor
imul
aas
outsb
stc
inc
mov
cmp
ja
aam
mov
jl
xchg
call
and
out
add
dec
nop
aam
xchg
pop
push
ds
pop
pop
fidivl
and
xchg
add
cmp
aas
ret
push
shl
adc
dec
and
inc
mov
mov
or
int
lds
push
stos
in
adc
inc
loope
jbe
xor
in
out
out
or
sbb
or
sub
out
push
add
pop
in
push
loopne
jb
push
aam
adc
fcomp
push
mov
jecxz
stc
jns
call
movsl
mov
outsl
inc
xor
sub
and
push
leave
add
xor
loope
push
push
movsb
xchg
adc
inc
test
mov
test
cmpsb
adc
or
xor
or
mov
rorb
xchg
sbb
popa
and
jns
into
jmp
sub
outsb
ret
cmp
mov
std
jecxz
stos
cmp
mov
fldcw
sbb
arpl
jo
jb
ret
pop
jb
inc
lahf
and
stc
pop
lret
repnz
test
lret
push
shrl
repnz
aad
push
or
lds
push
rcrl
dec
xor
mov
mov
push
jb
out
stc
fsubrp
repnz
pop
jno
cld
aaa
test
loope
decl
mov
jbe
adc
repnz
js
jo
fwait
jecxz
sti
sub
push
or
xor
cmp
ret
or
xchg
pop
add
xor
or
lock
xchg
dec
jecxz
mov
int3
out
or
xor
out
mov
in
test
sub
inc
cli
lods
jge
scas
pop
push
out
sahf
loopne
sbb
sbb
jne
gs
mov
adc
lret
lods
mov
adc
xchg
rorl
les
jbe
fsubrl
fidivrl
sub
out
cli
out
or
enter
mov
cmp
mov
pushf
pusha
xchg
lret
mov
mov
negb
fwait
xorb
sbb
push
sub
xor
mov
outsl
dec
loopne
lods
pusha
mov
and
mov
mov
inc
arpl
push
test
sbbw
sbb
adc
xor
es
and
ss
jo
out
pop
iret
jbe
ret
sahf
add
scas
mov
push
iretw
mov
imul
stc
mov
stc
pop
pop
addr16
mov
sub
cvtps2pi
data16
cmpsb
leave
or
mov
or
xchg
outsb
cmpsl
jns
push
test
adc
sub
aas
mov
xor
aaa
push
push
lods
idivb
and
jnp
xchg
cmp
scas
in
add
inc
push
jmp
insb
adc
rcrl
mov
xchg
aas
in
int
sti
cli
loop
sub
popf
dec
in
mov
stos
mov
aas
sahf
dec
pop
imul
int3
and
ret
adc
cmpl
xor
mov
sti
loope
jecxz
inc
xor
in
xchg
popa
call
mov
decb
call
pop
inc
xor
push
jecxz
cmc
dec
lahf
aas
imul
nop
pop
push
pop
and
jbe
icebp
mov
cmp
dec
xor
xor
push
rcrl
nop
bound
fidivrl
dec
in
jle
inc
out
add
mov
rcll
cmp
repz
cmpsl
pop
inc
fmuls
cmp
fildl
int3
fsubs
push
sub
sbb
xor
cltd
jne
mov
xchg
cmc
pop
mov
cwtl
repz
fists
pop
pop
faddp
aam
jb
sahf
add
and
mov
cmc
dec
pop
in
mov
outsl
movsl
imul
push
shr
nop
pop
mov
push
dec
jmp
mov
sub
dec
fcmovnb
ljmp
mov
sbb
lds
shll
popf
into
mov
pop
fdivrs
pop
pop
pop
or
push
aam
sbb
repz
imul
pop
mov
sbb
filds
dec
leavew
out
xchg
xor
cwtl
aad
jge
dec
dec
xchg
mov
lods
xor
aas
mov
repnz
sbb
faddl
repz
or
repnz
inc
ror
ja
test
jne
cltd
das
mov
enter
adc
xchg
sub
mov
into
cld
js
popf
movsl
aad
or
cli
addb
and
sbbl
pop
sbb
icebp
mov
imul
dec
adc
icebp
out
test
mov
arpl
cmpsb
and
cld
or
jo
jb
ret
loope
pop
mov
pop
inc
or
pop
arpl
jbe
mov
je
jae
jmp
and
push
lret
shll
xor
push
hlt
jb
jle
insl
jno
test
jne
or
decb
push
add
mov
in
test
inc
mov
call
sbb
out
pop
js
add
cmpsb
loope
xchg
adc
and
push
xchg
sbb
jb
dec
or
js
push
jecxz
shrl
push
imul
sub
ret
mov
cmp
in
fstps
iret
fucomp
push
push
jmp
or
ret
mov
jmp
cmpsl
icebp
das
cld
push
arpl
dec
or
mov
std
xchg
xchg
adc
stc
sbb
insl
sbb
ficompl
jg
push
add
fildll
xor
lret
movsl
cmc
js
addl
jg
cmp
sbb
out
int3
pushl
xor
out
fbstp
mov
dec
sbb
jmp
mov
jb
sti
mov
xor
jg
mov
mov
mov
jb
mov
or
movsb
out
mov
push
sub
sbb
push
pop
adc
mov
xchg
mov
addr16
lret
push
clc
ss
cmp
cltd
mov
mulb
fisttpl
mov
adc
cmc
outsb
dec
sbb
sbb
cmp
ljmp
or
pop
inc
cmp
and
jno
mov
adc
dec
inc
cli
sbb
mov
cld
push
addr16
lods
and
xor
dec
outsl
es
je
xor
int
daa
cmp
in
imull
stos
rclb
repnz
notb
xlat
pop
cmp
jnp
or
dec
cmp
dec
repnz
mov
dec
push
lss
sbb
push
fcoml
cmpsl
fdivrs
sub
sahf
je
mov
push
repnz
orb
fmul
gs
repnz
or
out
loop
movsl
pusha
jb
dec
shl
shl
or
addr16
xor
imul
jge
stos
movsb
sbb
enter
outsl
sbb
inc
pop
rcl
sbb
or
cmpsl
inc
int
inc
mov
inc
sbb
fidivs
add
sub
aam
icebp
inc
shl
push
inc
pop
or
in
jmp
jno
shrb
push
xchg
pop
imul
adc
or
jl
and
add
xchg
lds
mov
jno
je
pusha
mov
mov
push
cwtl
repnz
lahf
call
rcrb
out
dec
sub
orb
fs
std
mov
mov
sbb
and
mov
pop
jne
jae
push
xor
iret
mov
pop
ficomps
pushf
dec
mov
push
xchg
push
cmp
mov
cmp
mov
pushf
incl
inc
cmp
aam
xchg
test
jg
leave
into
push
fisubrs
sahf
add
xchg
and
lcall
cmp
mov
sbbl
dec
mov
dec
or
iret
and
pop
mov
xchg
lcall
imul
cmp
loope
mov
insb
test
dec
in
imul
push
idiv
in
cmp
or
sbb
adc
inc
sbb
or
jl
xchg
mov
data16
dec
sbb
lea
aaa
faddp
mov
cmc
rcrb
std
fists
pusha
daa
and
jecxz
sti
or
push
push
ss
mov
xchg
sub
push
jp
cld
inc
pushf
popa
stos
push
inc
pop
jmp
jp
lret
cmp
jg
popf
and
or
sub
xchg
dec
dec
repz
dec
jbe
jecxz
clc
push
stos
mov
mov
mov
mov
xchg
mov
aam
sub
les
nop
test
pop
xchg
das
addr16
xchg
jle
add
pop
pusha
in
xor
fadd
push
xchg
mov
fstpt
xchg
fistpl
add
and
jecxz
scas
sub
aam
test
cmp
lds
or
pop
hlt
push
jecxz
lcall
and
cmp
cmc
je
xchg
xor
aad
je
mov
dec
lret
mov
xchg
pop
mov
dec
mov
and
mov
jmp
rcrb
dec
jns
nop
aam
cmp
sahf
dec
add
int3
jp
addr16
pop
outsl
mov
sub
insb
cmp
jb
push
stos
xchg
getsec
scas
lea
sbb
pop
dec
mov
aaa
add
push
outsb
gs
imulb
insl
leave
jmp
adc
scas
sub
mov
and
mov
cs
cmc
pop
xchg
subl
jmp
jne
push
mov
adc
aaa
jns
fwait
mov
fistl
fdivr
loopne
aam
xor
or
cmp
push
mov
lods
insl
adc
aas
aaa
fdiv
in
scas
nop
daa
aas
add
cs
ljmp
pop
dec
cmpl
outsb
inc
pop
mov
mov
scas
inc
addr16
sub
or
insb
jecxz
cmp
rorl
jns
fldpi
dec
outsl
movl
into
and
mov
rcr
clc
fsts
push
addr16
nop
cmpsb
sarb
push
insb
mov
es
dec
popa
and
lret
cmp
or
push
jb
cmp
mov
ljmp
in
xorl
dec
push
sub
aad
pushf
into
gs
mov
lods
jge
loope
imul
cmp
leave
sbbb
and
iret
movsb
xlat
jecxz
mov
dec
adc
sbb
adc
inc
jmp
and
push
sub
lea
mov
aas
mov
insl
rcll
cmp
and
rolb
out
call
dec
sbb
push
in
jns
aas
jne
mov
push
in
cmp
and
enter
in
lcall
sbb
mov
add
movsl
inc
clc
inc
xor
and
push
sbb
aaa
add
add
pop
dec
push
inc
fsubs
iret
into
test
out
jne
movl
stos
pop
dec
ret
stc
iret
imul
and
out
dec
add
outsl
into
rcl
push
pop
sub
fbld
outsb
pop
pop
xor
jns
mov
ret
aad
jecxz
sbbb
mov
nop
sub
inc
inc
ljmp
xor
adc
ss
push
mov
adc
stos
fs
add
pop
cwtl
cmpsb
jl
adc
fcmove
sahf
inc
mov
xchg
cwtl
push
xchg
sbb
xor
jle
cmp
rsqrtps
pusha
mov
mov
mov
push
ja
mov
xor
jns
push
jle
repz
push
sbb
sbb
mov
les
or
jl
add
movsb
fwait
xor
mov
pop
cld
sahf
aad
push
int3
lcall
cmp
cli
dec
push
into
mov
inc
or
cmp
aaa
jne
into
adc
dec
nop
lahf
or
xor
inc
jbe
push
and
xor
mov
daa
or
dec
adc
out
mov
xchg
dec
inc
push
mov
mov
add
test
inc
sbb
ja,pn
fldl
jns
jecxz
into
fs
xchg
lods
and
ror
jl
xchg
pop
enter
cmc
iret
cmc
repz
loopne
mov
ljmp
jmp
leave
mov
inc
aas
loopne
push
fdivl
pop
loope
fs
push
pusha
push
xor
push
sub
mov
cwtl
fs
dec
lcall
aam
ljmp
dec
push
cmp
ret
pop
das
pop
xorb
clc
mov
inc
int3
in
xor
ror
rclb
mov
adc
ror
push
cld
cmpsl
lret
das
std
adc
lock
repnz
adc
je
inc
mov
rclb
dec
push
cltd
lods
mov
rcrl
pop
repz
mov
push
outsl
xchg
hlt
sub
sbb
dec
sahf
pop
xchg
fs
int3
imul
orb
jmp
into
sub
pusha
sub
sbb
mov
pop
or
outsb
pop
add
loop
fiadds
pop
xor
ficompl
aam
pop
inc
ljmp
decb
lcall
es
les
add
out
fldcw
xor
pop
jb
insl
pushf
mov
data16
mov
jg
jne
lret
cmp
or
jmp
jns
mov
mov
add
jns
lods
cld
fs
ljmp
cmpsb
lret
jge
mov
insb
pop
mov
sti
fdiv
jns
pop
enter
cmp
xchg
push
push
lds
lods
mov
fwait
lods
idivl
inc
std
or
cs
jns
data16
pop
outsl
outsb
or
ljmp
dec
cmp
xchg
sub
pop
out
inc
in
lods
sub
mov
xor
neg
shll
loope
lahf
cmc
add
imul
cmp
test
cmp
mov
add
or
jp
inc
mov
cli
xor
dec
bound
in
jge
enter
shll
mov
loop
push
cmp
xor
mov
lret
repz
aam
enter
jbe
xchg
insl
lret
xlat
fdivrs
jns
cmc
int3
les
sti
mov
in
pop
adc
xlat
mov
cmp
in
ja
inc
pushf
jp
mov
adc
mulb
fs
dec
mov
mov
jmp
adc
mov
xchg
daa
repnz
ds
mov
inc
mov
stc
mov
jo
cld
ss
lahf
inc
cs
adc
or
mov
mov
mov
and
iret
mov
rolb
lock
popf
cmpsb
ret
ret
js
or
rcrb
add
das
mov
cmp
nop
or
roll
sub
dec
and
cmp
fcmovnb
xchg
mov
je
sti
sbb
popf
pop
daa
and
pop
lahf
lret
pop
pop
dec
jo
pop
adcl
inc
ret
lods
in
dec
inc
jo
dec
push
cmp
lock
movsb
sbb
mov
inc
shll
dec
sub
int
inc
xor
mov
or
pop
dec
jmp
std
xor
stos
push
mov
rcl
insb
outsb
jae
sub
ja
into
scas
pop
xor
jns
mov
fwait
xorl
or
into
mov
mov
mov
repz
movsl
and
or
cwtl
icebp
rclb
jp
mov
insb
lds
jmp
xchg
jmp
xor
aas
or
adc
sub
sbb
cmpsl
inc
xor
push
cmp
scas
daa
in
adc
je
mov
xlat
sbb
push
sbb
jge
jg
mov
es
stos
xlat
pop
mov
mov
push
cmpsl
int
adc
insb
out
mov
scas
je
int3
push
out
cmp
and
xlat
cmpsb
test
iret
lret
sub
jbe
pop
gs
add
mov
pop
xor
or
lcall
andl
mov
pop
enter
sbbl
sub
insb
dec
repnz
aad
repz
mov
cltd
in
icebp
adc
cmp
push
into
sub
std
out
in
adc
fisubl
xchg
test
mov
sbb
mov
adc
out
and
xor
jl
push
dec
and
or
push
pcmpgtb
sbb
mov
out
mov
insb
jmp
pop
repz
je
data16
mov
test
ja
mov
stc
imul
imul
sub
out
lcall
fdivrl
scas
dec
pop
cltd
or
daa
ret
negb
adc
jmp
lods
add
call
ret
repz
and
mov
sub
cmpsl
xchg
fiadds
loopne
sbb
shlb
lea
into
mov
and
xchg
mov
or
les
mov
mov
dec
xlat
pop
in
mov
in
outsl
addl
and
es
xchg
sub
lds
int
adc
ljmp
mov
pop
and
mov
pop
pushf
cmpsl
xor
pop
lock
insl
fsts
call
dec
adc
xor
mov
pop
stos
icebp
add
xor
xor
lea
pop
pop
sbb
loopne
or
out
sarb
sub
cli
lret
push
sbb
std
loop
cmc
sub
jae
sbb
in
mov
add
pop
push
or
xor
fimull
or
add
sub
stos
dec
pop
lahf
ret
inc
out
push
aam
jae
ja
add
cmp
addl
adc
mov
push
cmp
fistpll
push
cld
clc
pusha
ljmp
sbb
mov
push
int3
dec
sbb
test
aas
movsl
inc
cld
push
jmp
or
clc
es
add
jle
test
add
js
test
inc
mov
bound
iret
mov
sbb
mov
mov
mov
push
and
int3
mov
mov
out
adcl
dec
cmc
jne
sbb
xor
enter
fsubl
xor
loope
mov
enter
push
ljmp
clc
xchg
add
rolb
mov
mov
sub
test
testl
ret
lret
out
xor
and
dec
loopne
mov
jns
cs
xor
rcrb
cwtl
stc
cltd
loope
dec
mov
loope
rcrl
dec
es
jg
mov
lds
pushf
push
mov
and
cmp
leave
jb
bound
mov
inc
shl
mov
ljmp
in
adc
out
loopne,pt
push
pop
fcmovnbe
icebp
mov
loopne
aas
ja
loop
pop
cli
mov
mov
jb
sub
push
nop
mov
stos
xor
dec
jl
inc
movsb
push
divb
pushf
icebp
cmpsb
inc
sub
mov
sbb
out
adc
mull
cmp
lret
xchg
sub
dec
adc
xor
mov
inc
jb
or
popf
pop
inc
das
int3
bound
daa
add
shlb
sbbb
mov
push
jecxz
shrb
stos
jg
orl
insb
pop
jmp
stos
add
mov
or
sbb
sbb
or
adc
pusha
jbe
adc
push
cmp
push
inc
add
movl
jmp
stos
pop
dec
xlat
es
pop
int3
or
or
sbb
sbb
jl
push
pop
out
dec
lea
add
jnp
or
xchg
push
push
jnp
add
xor
loopne
test
adc
pop
movsb
push
fwait
ret
pop
dec
jb
std
pop
loop
or
js
movsl
push
shrb
add
test
iret
mulb
movsl
adc
fldenv
or
lcall
loopne
shl
mov
das
xchg
es
stos
mov
js
stos
iret
dec
dec
ja
popa
cmpsb
lcall
stos
fidivl
xchg
ljmp
popa
fidivrs
adcb
lds
ljmp
ss
mov
add
sbb
xchg
xlat
mov
arpl
bound
jae
xchg
lock
and
scas
push
and
rorb
aaa
add
mov
and
shlb
or
xor
push
xchg
push
cmp
js
xchg
aas
inc
scas
push
and
testl
nop
sub
aam
add
lods
sbb
jge,pt
stos
enter
lret
hlt
out
cmpsl
jo
loope
add
and
js
clc
xor
stos
sbb
out
nop
mov
adc
out
in
pop
push
test
push
test
fists
jno
jne
fbld
enter
aas
insl
ja
movsb
fs
xchg
sbb
push
inc
call
cmc
in
shll
sub
xor
push
stc
pop
mov
mov
or
lea
fstl
jmp
in
decl
and
gs
inc
mov
or
adc
in
xchg
loop
push
jmp
les
data16
aas
fdivr
inc
das
fldcw
jae
out
add
jb
arpl
test
mov
and
mov
enter
jns
push
adc
shlb
movsl
js
push
in
repz
ret
divl
sub
jae
enter
pop
scas
mov
xchg
ret
mov
jp
sbb
in
pop
mov
add
or
sbb
jmp
cmp
scas
fs
lahf
sbb
mov
aam
xchg
movsl
push
fnstcw
pop
lock
insb
scas
push
and
cmp
adcl
sub
test
sarl
aad
ja
fs
lods
jge
into
dec
fldenv
jp
mov
daa
pop
inc
cmp
loopne
ficomps
lods
enter
mov
int
repnz
sub
imul
out
push
or
push
jmp
and
mov
push
pop
mov
or
je
and
lock
daa
dec
xlat
das
fisttpl
adc
aam
mov
add
jmp
jo
es
mov
lock
push
daa
inc
scas
mov
pop
call
into
dec
enter
mov
cwtl
and
pop
ds
hlt
mov
movb
fidivl
jbe
sub
cmpsb
mov
xchg
test
xchg
inc
pop
dec
push
add
jae
leave
outsb
xor
or
sub
sahf
or
out
ss
dec
in
add
pop
fildl
mov
mov
dec
and
insl
dec
jb,pn
inc
inc
lahf
pop
dec
icebp
jb
out
jmp
clc
mov
ficoms
inc
sbb
lods
jnp
jbe
pop
jne
insl
aas
or
lods
pop
or
iret
xchg
push
mov
mov
jle
clc
test
rorl
push
and
push
cld
nop
add
cmp
mov
jg
inc
jl
insb
jnp,pt
es
sbb
loope
stos
sbb
sbb
sub
cmpsb
xchg
mov
cmp
cwtl
push
add
addb
jo
add
mov
loope
loopne
xchg
test
pop
jg
aad
mov
sub
lret
mov
mov
sahf
jecxz
jae
mull
mov
mov
adc
lods
ret
pop
push
sti
movsl
mov
jp
cwtl
dec
sbb
inc
dec
push
jp
sar
into
stc
arpl
mov
in
movsb
and
inc
hlt
clc
push
jb
lret
ficoml
jg
mov
sub
fists
inc
or
lcall
jns
mov
enter
lcall
adc
aam
sub
pop
popf
adcb
jbe
pop
sub
pushf
mov
jle
jno
xchg
xor
pusha
dec
or
fstps
shrl
mov
xchg
pop
xchg
mov
cmp
jmp
dec
mov
push
adc
and
arpl
sti
push
xchg
jmp
dec
stc
cmp
push
inc
push
jl
daa
lods
lret
nop
test
and
repz
or
or
fsts
sbb
cmp
cmp
or
cmp
enter
je
push
dec
fs
cmp
test
mov
rorb
scas
push
sti
adc
mov
dec
or
jecxz
sbb
aad
jge
or
enter
popf
mov
and
shrl
pop
ret
ret
cwtl
fnstenv
out
subb
inc
lock
add
pop
and
mov
sahf
dec
imul
cld
push
pop
in
pop
push
pop
les
push
or
negl
mov
ds
xor
dec
inc
adc
sub
bound
add
loope
popf
xorb
mov
enter
mov
cltd
int3
fsubr
adcl
sbb
xchg
dec
pop
ljmp
sub
scas
in
fiadds
test
or
jmp
sbb
popa
jne
stos
pop
pop
inc
comiss
shl
fsubrs
call
push
push
cld
pushf
loope
data16
sti
mov
sbb
fimull
in
pop
test
pop
or
cmpsb
loop
dec
stos
test
xchg
mov
jge
jns
loope
inc
mov
data16
mov
and
ja
stc
sub
inc
shll
add
rcr
stc
sub
xchg
les
cmc
shrb
dec
sahf
enter
cmpsb
adc
or
and
ret
push
cwtl
sbb
push
cmpsb
add
imulb
shrl
adc
add
xchg
int3
dec
and
cmp
rolb
add
add
or
test
in
dec
aas
aad
cmc
xor
or
rcll
psignb
and
pop
test
cmp
nop
mov
rcrl
ja
jg
fildl
loope
cltd
les
xchg
insb
enter
bound
mov
ret
sbb
push
jbe
pop
out
mov
cmpsb
rep
or
xor
adc
das
xchg
inc
jne
or
stos
fmuls
shlb
inc
dec
and
adc
mov
clc
mov
mov
imul
ret
push
cmp
rorl
shr
sub
sbbl
dec
fwait
cmp
call
inc
nop
push
out
call
sbb
mov
icebp
jge
movsb
scas
ficoml
xchg
nop
popa
jno
jmp
in
or
xchg
jmp
jl
add
xchg
insb
outsb
lahf
push
out
adc
or
inc
push
xchg
je
fistps
loop
adc
cwtl
push
xorb
dec
push
test
daa
mov
push
test
ds
inc
cmp
fistps
jo
mov
mov
ror
jne
xor
inc
ds
fiaddl
pushl
ljmp
adc
and
in
push
fdivrl
push
pop
xlat
mov
testb
cmpsl
jp
das
dec
or
imulb
in
imul
jecxz
into
pop
jbe
and
decl
lea
jae
loop
cmp
or
push
sbbl
fwait
jge
hlt
adc
jbe
xchg
movsl
jne
xchg
pmullw
push
ja
jae
push
pop
jne
outsl
lahf
sub
in
and
and
ss
xor
lret
lods
aam
sbb
lret
movsb
cmp
dec
jbe
inc
pop
sbb
pusha
adc
mov
xor
push
arpl
rorb
addr16
adc
dec
adc
xchg
addr16
pop
dec
imul
mov
ljmp
mov
dec
sbb
popa
sub
lret
inc
jl
or
cmp
mov
pushf
adc
fstpl
clc
mov
adc
push
repz
and
aam
jmp
ror
mov
out
pop
pop
xchg
repnz
test
push
pusha
mov
and
sub
out
or
out
fstpl
mov
or
cmp
cmpsl
arpl
rcrl
inc
xchg
mov
sbb
js
pop
jge
mov
sarb
js
adc
test
add
dec
sub
das
test
lods
aad
int3
or
fisubl
outsl
insb
mov
movsb
add
mov
sbb
push
js
das
push
fistpll
mov
adc
xor
adc
imul
aas
and
and
xchg
int3
pop
mov
inc
xchg
push
sti
adcb
adc
mov
sbb
sbb
xchg
push
mov
mov
mov
imul
rcll
xchg
jle
mov
ljmp
aam
aad
les
cli
shlb
or
jmp
mov
jle
pusha
adc
shl
lea
popa
jns
in
shll
mov
hlt
pushf
and
push
xor
push
mov
jns
mov
ret
push
cmpl
mov
rolb
mov
jmp
pop
xchg
out
xchg
pop
push
inc
mov
ja
repz
test
mov
xor
movsb
test
mov
adc
or
mull
int
loop
sbb
jne
test
dec
push
mov
xchg
rclb
and
arpl
testb
sbb
call
inc
xchg
adc
cmp
std
lret
jecxz
in
out
lods
call
bound
sub
add
mov
push
lcall
jno
aas
mov
mov
nop
push
adc
push
push
nop
pushf
fadds
and
mov
scas
lock
movsb
xor
call
out
xor
xor
or
mov
mov
ja,pt
sub
iret
ljmp
mov
mov
jp
cmpsb
pusha
repnz
pop
mov
push
stos
sub
js
movsb
jbe
bnd
pop
xorb
out
jae
mov
inc
sbbl
and
scas
inc
adc
test
xor
jl
mov
cmp
inc
pop
add
fistpl
xor
sti
cmpsl
and
or
jae
and
mov
fmul
stos
mov
or
sub
std
faddl
inc
adc
lods
or
jno
mov
in
cwtl
add
mov
push
xchg
out
inc
test
xchg
jmp
mov
sahf
jp
and
push
pusha
dec
inc
adc
and
sbb
cmp
stos
xor
cmp
sub
fcoms
and
mov
xchg
cmp
into
sbb
ret
jecxz
or
das
repnz
cmp
pop
mov
cld
jne
mov
mov
pop
add
dec
jb
insl
out
mov
lock
adc
jno
clc
add
add
push
sub
pop
daa
xchg
fdivs
mov
pop
lahf
imul
xchg
add
bound
jnp
sbb
fs
rorb
cmpsb
push
mov
push
adc
leave
inc
mull
pop
mov
sti
adc
adc
xor
adc
je
into
scas
mov
fidivrs
hlt
outsb
ds
test
idivb
mov
sub
cltd
push
fimull
mov
cmp
sbb
fwait
mov
add
or
mov
cli
mov
adc
jo
lods
xor
std
push
and
les
fldcw
fimuls
fimuls
sub
lea
or
test
xorb
sbb
jnp
push
xor
sub
fmuls
adc
inc
sahf
scas
daa
push
mov
sbb
mov
mov
imul
xchg
add
out
inc
gs
sbb
mov
ficomps
fcoms
aas
sbb
lea
out
fcompl
jge
cmpsl
daa
fistl
add
pop
inc
mov
jle
rorl
test
pop
not
jae
inc
repz
mov
push
stc
xor
sbb
or
push
mov
push
stos
and
mov
cmp
mov
xchg
mov
lods
scas
and
and
xor
dec
adc
xchg
push
iret
adc
cld
push
sti
out
mov
dec
je
fildl
fcompl
shlb
es
xchg
cmp
pushf
cmp
jge
mov
adc
idivb
adc
lret
mov
pop
les
or
repnz
lret
jge
shr
jnp
xchg
aas
popf
xchg
sub
pop
add
faddl
sub
xor
fnsave
lcall
shrb
leave
cmpsb
cmpsl
mov
adc
push
and
repnz
pop
xchg
sub
js
rcl
aad
sbb
aam
or
loope
es
sti
pushf
xor
push
das
fidivl
dec
popa
xchg
push
notb
xchg
mov
bound
or
add
fcomi
stos
adc
mov
xchg
ljmp
les
sbb
cmc
push
es
shlb
and
xor
ljmp
xchg
xlat
int3
sbb
jbe
sbb
pusha
or
push
cs
movsb
jge
je
aas
data16
mov
das
fisubrl
push
dec
sub
fsubrs
sbb
sbb
pop
adc
mov
push
les
out
cs
les
movsl
cmp
dec
mov
repnz
ds
pop
int3
xor
adc
aaa
pop
es
gs
mov
sub
jp
into
push
test
fs
iretw
int
cmpsl
or
jae
cwtl
mov
xor
int3
or
pop
or
outsb
sbb
in
lods
enter
stc
int3
xor
xor
fdiv
inc
pop
push
mov
rcrb
mov
dec
mov
mov
es
mov
dec
add
adc
sbb
inc
xor
mov
in
pop
jmp
pop
lock
xchg
imul
and
icebp
push
in
pop
fcomi
cmp
mov
inc
clc
lock
cli
dec
ja
sbb
fscale
jae
ja
inc
and
mov
int3
mov
gs
mov
jp
test
push
mov
push
sub
out
sbb
mov
stos
lahf
jbe
sarl
jle
jecxz
adc
inc
sbb
mov
in
xchg
fiaddl
cmpsl
cwtl
xor
inc
xchg
in
jge
pop
mov
xchg
and
dec
xor
adcb
adc
pop
mov
push
js
fnsave
sarb
test
sub
out
stos
fcoml
push
pop
push
mov
stos
or
push
fs
loopne
das
and
cmpl
out
mov
popf
cmpsb
add
mov
pop
sub
andb
xchg
inc
push
push
mov
in
and
dec
cmpsl
pop
jge
mov
push
subb
inc
add
aad
push
les
cmp
push
inc
fsubs
dec
cmpsb
sbb
jae
cmpsl
xchg
add
mov
and
in
inc
pop
push
mov
cmc
pop
je
xchg
fcoml
cmp
loop
or
adc
movsb
std
mov
ja
xlat
fwait
push
pushf
jmp
add
add
es
cmc
sbb
stos
aam
adc
cmp
sub
jne
popa
sub
mov
js
mov
lcall
aad
jl
sarb
lcall
popa
lock
fisttpll
int
sti
out
outsb
mov
mov
call
mov
jecxz
bound
sub
imul
lret
add
ljmp
add
stos
mov
leave
dec
dec
arpl
mov
cmp
sbb
mov
mov
add
jp
and
xor
shrb
and
sbb
push
cmp
aaa
out
out
divl
sbb
adc
out
dec
jl
popf
icebp
data16
push
push
ss
mov
jne
fstps
push
adc
add
fisubrl
pop
jbe
mov
aas
or
push
pop
xor
addb
mov
rorl
std
mov
pop
ret
shlb
sbb
push
mov
push
ret
int
xchg
jns
repnz
js
cmpsb
push
les
dec
rorb
iret
aaa
popf
loop
jae
in
iret
push
xchg
pop
dec
fistpll
jg
not
decb
mov
cli
fwait
dec
adc
testb
es
pop
sahf
movsl
add
pusha
cmp
mov
out
mov
jnp
inc
mov
lret
push
iret
aam
adc
dec
sub
imulb
lods
sub
push
in
cmpsb
enter
fsubp
cmp
jne
enter
sbb
add
jnp
stos
sub
or
inc
push
xorl
mov
jno
fstps
into
cmp
xor
fnsave
push
inc
sbb
ret
mov
or
pusha
add
stos
lods
mov
cltd
js
jmp
cmpsl
cmp
jge
sbb
rclb
mov
xchg
mov
pop
and
repnz
dec
jle
aaa
cmp
push
xchg
ja
adc
out
sar
push
imul
lock
push
movd
or
or
sub
and
inc
and
sbb
jb
jecxz
shlb
xor
insb
pop
xchg
in
mov
ja
ljmp
cmp
aaa
adc
jno
push
es
inc
push
dec
call
sub
sub
mov
mov
rcrl
mov
arpl
sbb
rclb
ss
cmp
pop
inc
lcall
xchg
cmp
stos
cmp
push
stc
imul
and
stos
insl
cs
push
mov
fwait
inc
dec
sbb
jecxz
rclb
cmp
aaa
xchg
xchg
insl
mov
mov
imul
dec
mov
test
xchg
mov
dec
push
loopne
adcb
sub
dec
add
fdivs
pushf
xchg
adc
dec
or
jl
sbb
fldl
pop
rol
imul
lods
jns
fidivl
and
es
sub
orb
jmp
out
rcr
mov
jl
push
outsb
push
inc
inc
outsl
sub
push
js
aaa
enter
xor
sbb
cwtl
ljmp
push
pop
adc
in
push
or
push
fisttpl
inc
or
xchg
add
xchg
add
mov
cli
aaa
sahf
jnp
mov
and
mov
inc
mov
shlb
js
push
mov
scas
loopne
or
mov
jo
sbb
cmp
or
adc
dec
inc
xchg
fdivr
mov
in
push
mov
nop
mov
mov
je
stc
mov
lds
ret
inc
dec
jb
xchg
dec
pop
stc
aam
dec
pop
pop
aam
fsts
lahf
adc
mov
ja
and
imul
mov
loope
mov
sbb
imul
and
pop
mov
jbe
mov
movsl
sub
divb
push
xor
push
pushf
sbb
push
dec
xchg
lret
test
sarl
outsb
mov
addr16
stos
adc
lcall
and
inc
inc
sub
xchg
aam
push
movups
mov
imul
lods
xchg
inc
fsubrs
addr16
and
cwtl
out
mov
lea
push
xor
pop
cli
std
mov
or
inc
shlb
out
push
xor
mov
push
inc
bound
push
gs
inc
or
add
orb
or
lcall
or
inc
xchg
rcrl
mov
nop
xor
ror
and
xchg
je
sub
inc
xor
sbb
sub
pop
mov
push
fnstsw
test
sub
out
dec
enter
in
cmpsb
push
jae
and
pop
loop
lcall
enter
dec
mov
repz
fistl
dec
mov
xchg
xor
sbb
or
mov
cli
push
subb
test
pop
aaa
lcall
adc
pop
jno
test
jle
lock
notb
add
data16
call
xchg
fisubs
es
push
in
lret
subl
sbb
sub
or
leave
inc
mov
lea
in
je
pop
arpl
jp
xor
pop
dec
mov
cmp
jecxz
xchg
movsl
sub
lcall
cmp
ret
scas
xchg
push
jbe
outsl
sbb
out
mov
arpl
imul
push
sub
stos
aaa
hlt
lds
mov
int
lret
mov
xchg
pmaddwd
cmc
pop
jle
mov
mov
sbb
addb
mov
sub
inc
mov
jp
shll
orl
pop
push
xchg
and
pop
sbbb
mov
dec
adc
cltd
cmc
adc
arpl
mov
dec
inc
mov
add
lods
sub
scas
add
cwtl
mov
lods
xor
js
push
insl
xor
fsubrs
xchg
mov
int
inc
xchg
push
and
fnstenv
pop
xchg
les
aam
mov
cwtl
and
loopne
inc
lods
mov
ret
divb
testb
dec
mov
mov
adc
add
daa
cmpsl
xchg
out
ret
aam
lds
scas
test
inc
push
or
inc
rorl
pop
aas
lret
mov
sub
lea
data16
mov
test
xchg
jno
jb
sub
xchg
das
pop
mov
call
or
cmp
out
xchg
notb
push
mov
mov
inc
ret
inc
je
lods
iret
insb
stos
push
test
or
push
xchg
sbb
mov
and
mov
xchg
cmp
add
push
mov
xchg
rclb
sbb
add
or
mov
jns
mov
sti
jg
pop
pop
call
in
mov
int3
into
add
and
xlat
mov
mov
and
sub
mov
cmpb
jnp
mov
notb
mov
jge
mov
pop
jbe
add
inc
cmp
fbld
xchg
mov
in
lods
mov
mov
sub
inc
movsb
mov
mov
and
inc
dec
cs
gs
cwtl
stos
jnp
data16
sbb
mov
mov
xor
test
int3
hlt
mov
ljmp
mov
icebp
mov
pop
sbb
dec
mov
int3
push
lret
fistl
repnz
push
shl
or
sbb
gs
lods
mov
lea
pusha
popl
push
ds
add
fstp
test
xor
and
mov
in
lock
xchg
mov
cmp
iret
push
test
pop
inc
ss
add
stos
idivl
mov
fnsave
repnz
push
aas
add
dec
pop
imul
fwait
and
negb
mov
sub
adcl
stos
aad
pop
push
mov
in
mov
mov
loop
stos
adc
sub
sbb
in
mov
enter
cmc
mov
movsl
pop
xlat
push
rol
dec
clc
jbe
push
js
pop
mov
jo
mov
jns
enter
aad
cmp
mov
or
movsl
and
sbb
cmpsl
fld
push
inc
jp
mov
aaa
cmp
mov
popa
push
jae
data16
push
xor
imul
in
pop
js
pop
jp
insb
leave
idiv
cmc
pop
mov
aad
xchg
pop
push
stos
inc
or
shll
hlt
add
test
shl
stc
push
out
dec
pop
add
test
cmp
insb
aas
jge
adc
and
sub
scas
hlt
lcall
shrb
push
fsubr
aaa
xchg
iret
repnz
aas
enter
out
or
jle
addr16
jmp
sub
mov
out
xchg
fimull
mov
cmc
int
mov
mov
dec
sbb
lea
mov
je
pop
scas
xor
mov
dec
adc
jno
dec
in
test
cmpsb
add
mov
and
imull
cmc
stos
shrb
loope
out
pop
loope
mov
cs
push
jp
cmp
insl
pop
mov
ljmp
push
push
mov
pop
rcll
dec
adc
push
les
mov
dec
sub
mov
daa
mov
mov
xchg
sub
jmp
andps
cmp
dec
mov
insb
push
mov
sbbl
mov
inc
bound
popa
mov
xor
dec
mov
in
nop
sbb
mov
out
xchg
sub
and
push
push
insb
sti
js
push
imul
icebp
add
xlat
lea
aam
fisubs
or
mov
loope
or
pop
add
push
rolb
cmpsl
out
or
je
cmp
loop
xlat
stos
data16
mov
adc
pop
sub
pop
repnz
jmp
insb
jp
popf
push
cmc
popf
fistl
mov
fwait
jge
test
mov
push
adc
rcl
fimull
lock
push
jge
arpl
mov
jge
adc
mov
pop
pop
mov
std
in
mov
dec
adc
subb
jbe
mov
push
cmpl
or
sahf
mov
sub
push
fcmovb
sub
xchg
or
xlat
cld
jns
inc
aad
mov
ret
sbb
or
jb
pop
loopne
mov
push
mov
mov
aam
mov
xor
dec
lcall
xchg
push
xchg
sub
js
sub
mov
sub
incb
xor
call
int
in
dec
ss
jne
cmp
or
cmpb
aaa
arpl
rcrl
call
int
sti
rcll
and
les
test
sub
ret
aaa
jbe
jbe
mov
arpl
test
push
push
push
cmpsb
stos
or
push
and
lahf
lahf
mov
sub
loope
hlt
arpl
xchg
sub
std
sbb
cmp
popf
repnz
arpl
leave
or
sub
ljmp
movd
mov
pop
xchg
xor
dec
filds
pushf
push
sbb
je
je
shrb
lret
adc
xor
imul
std
cli
sbb
add
inc
pop
or
popw
jge
les
push
mov
xor
maskmovq
mov
pop
ss
hlt
shl
sub
sub
push
sub
jp
idivb
xchg
sbb
das
out
cld
mov
jo
inc
std
fmuls
flds
fs
arpl
and
push
mov
cmp
cwtl
jmp
adc
sub
and
jns
xchg
rol
ret
xor
cmc
mov
xchg
lret
pop
mov
sarl
jmp
pop
pop
test
shlb
cmc
mov
inc
std
inc
out
loopne
inc
rorb
pop
dec
mov
outsl
dec
stos
lret
pop
or
fildll
imul
push
pop
push
mov
out
dec
push
jbe
pop
cmp
ds
das
sbb
or
stc
into
jnp
cmp
jecxz
sub
inc
pusha
outsl
cwtl
movsb
mov
das
push
mov
inc
add
in
mov
or
jbe
lret
fs
sub
mov
fstl
inc
cmp
ljmp
sbb
lods
ljmp
mov
xor
and
jle
sarb
jmp
in
jle
popa
and
shrb
test
jo
xor
add
and
cmp
mov
out
add
lock
sbb
jecxz
lea
fldl
es
sbb
adc
iret
lcall
xor
inc
mov
popf
add
xor
dec
xchg
and
jge
dec
test
stos
mov
jbe
lds
lahf
xchg
mov
mov
insb
fstpl
mov
mov
sub
sub
pop
lods
mov
fnstcw
repz
sbb
test
add
les
cmp
sahf
movsl
xor
or
mov
loopne
mov
stc
cs
jmp
ds
dec
gs
test
fcompl
fcoms
cltd
jo
cmpsl
sub
test
hlt
push
in
lods
mov
mov
rclb
test
xchg
mov
shr
addr16
xchg
xor
xlat
lahf
add
sbb
nop
and
mov
subb
je
movsl
xor
jl
sbb
stos
rcll
fs
adc
cwtl
cmp
jge
pop
aam
jno
pop
outsb
xchg
mov
test
xor
arpl
sbb
mov
enter
test
pop
add
xor
mov
pop
jg
sbb
mov
jae
mov
lret
movsl
inc
jle
sbb
push
aaa
xor
push
push
imul
pusha
pop
add
cvttps2pi
mov
imul
adc
lods
push
lea
pop
push
sub
adcb
inc
cli
scas
aam
xor
loope
or
testl
sbb
stos
and
mov
aaa
push
cmc
aad
jg
mov
scas
mov
cli
rclb
lock
jl
movb
test
sbb
sbb
pop
push
pop
mov
xor
dec
mov
inc
jle
pop
addr16
mov
inc
cmp
pop
addr16
stc
cmpsb
xor
jmpw
xor
rol
pop
cmp
lahf
aam
subl
xor
jb
in
pop
push
leave
ja
cmp
in
jnp
bswap
add
notl
lcall
add
imul
psllq
add
notb
xchg
cwtl
fucomp
notb
sbb
mov
add
loopne
push
and
sub
in
inc
inc
dec
jl
in
movsb
fistl
leave
xchg
mov
sub
jno
jo
test
or
add
adc
les
pop
stos
push
lds
call
dec
cmp
inc
add
jb
rcr
fsts
sub
mov
lock
repz
cwtl
xor
mov
flds
test
fwait
inc
mov
jp
jns
fldl
repnz
dec
test
dec
dec
jbe
inc
push
xlat
pushf
dec
adc
jns
xchg
lock
mov
mov
cmp
or
ljmp
mov
out
rol
test
daa
or
icebp
imul
sti
rcr
xchg
rclb
mov
shl
cli
test
push
xor
not
popf
ret
mov
sarl
sbb
jae
scas
xchg
mov
scas
pop
adc
ja
stos
daa
aam
cmpsb
inc
jnp
nop
fdivrl
gs
inc
adc
sbb
jg
popa
pop
js
push
bound
popf
cmp
sub
pop
sbb
cmp
rol
xor
mov
fldcw
lods
jl
adc
in
je
add
movsl
xor
ret
push
xor
mov
lock
and
das
les
sub
mov
lods
or
ja
call
pop
push
es
scas
sub
inc
aas
jg
je
inc
mov
jmp
icebp
adc
in
shll
fcoms
outsl
aad
jp
push
xchg
or
sub
sbbl
mov
out
add
pop
lahf
push
rcrl
movb
mov
cmpsb
sti
pop
mov
adc
sub
sbbl
test
movsb
inc
repnz
pushf
adc
push
dec
adc
pushf
les
imul
adc
inc
jns
inc
push
dec
icebp
push
ffreep
out
mov
jo
push
in
sub
icebp
inc
sub
mov
mov
nop
pop
mov
es
jg
repz
cmp
call
arpl
mov
movsb
test
push
je
lods
lds
popa
xor
xor
sub
jns
aas
jno
sahf
js
xchg
std
cmpsl
push
cltd
sbb
xchg
rcll
xchg
call
clc
mov
add
sbb
cs
xchg
fs
pop
fnstenv
pop
sub
loopne
xlat
mov
mov
ja
and
stos
adcl
sub
out
inc
sub
or
adc
in
iret
xchg
cbtw
popf
shl
mov
push
movsl
and
faddl
xchg
xchg
xor
sbb
loopne
xchg
push
sti
sub
into
adc
je
popa
mov
pop
bnd
push
test
incl
add
adc
rorl
and
sbb
movsl
shlb
inc
fsincos
cmp
push
shr
add
mov
daa
push
insl
fucomi
aas
inc
aaa
sub
sub
mov
mov
cs
xchg
mov
sub
jae
insb
push
idivl
lret
dec
cmp
loope
push
cmpsl
iret
inc
adc
jle
jo
mov
nop
js
movsb
in
xchg
mov
jg
mov
or
push
ss
aaa
aad
add
jle
cltd
lea
bound
adc
cmp
or
adc
shll
lret
mov
mov
mov
ret
push
cmc
pop
out
push
jmp
xchg
push
mov
cld
cmp
adc
cwtl
cmp
adc
add
or
stos
pop
mov
xor
leave
cmp
test
js
dec
jecxz
jns
sbb
mov
xor
cmp
ret
inc
testl
das
imul
push
mov
dec
push
ja
mov
pusha
ds
or
push
mov
cmp
hlt
int
xchg
daa
push
and
sbb
imul
push
lock
push
pop
cltd
push
sbb
insl
and
fisubrs
imul
nop
jbe
popf
insb
push
repz
mov
add
repnz
sbb
fdivr
ficomps
pop
push
out
pop
jnp
movsb
jmp
pop
cmc
hlt
push
mov
dec
mov
cld
out
out
push
push
xorb
daa
imul
adc
mov
mov
outsb
add
xchg
mov
nop
or
sub
jle
aaa
add
xchg
popa
jg
push
aas
in
pop
inc
nop
clc
add
or
xchg
jp
test
negl
loopne
xor
inc
fstpt
or
arpl
xor
loope
inc
pop
shrb
insl
sub
subb
repz
sbb
mov
push
dec
sbb
hlt
dec
insb
inc
cmp
mov
je
out
mov
dec
inc
jb
cmp
dec
xorb
pushf
sub
jmp
adc
dec
xchg
fcmovnb
movsb
mov
dec
jbe
mov
and
add
out
mov
mov
or
push
push
rolb
lret
mov
loop,pn
mov
dec
adc
add
mov
sub
push
fwait
mov
xchg
aaa
xchg
xchg
pop
insb
movb
or
xor
rcll
pop
mov
jb
sub
pop
repnz
xchg
fmull
int
std
inc
js
xor
xchg
sbb
movsb
in
js
mov
cmpsb
js
daa
lods
adc
shufps
push
out
xor
mov
cmp
sub
mov
jmp
fsubr
sub
roll
xchg
jae
int
cli
cmp
in
jmp
push
push
enter
adc
dec
lret
inc
lahf
or
or
xchg
fdivrp
lock
rcll
paddd
ja
push
call
insl
out
add
lea
push
push
out
jmp
push
inc
cmc
pushf
js
inc
aam
fmul
cli
cmc
frstor
inc
out
pop
fwait
nop
in
xchg
cltd
pop
mov
xor
out
inc
mov
insl
out
out
inc
lock
out
xor
nop
vpackssdw
mov
enter
push
bnd
add
mov
sbb
add
arpl
loope
out
fwait
adc
mov
jg
cmp
pop
popa
xchg
mov
scas
add
scas
add
mov
leave
in
inc
loopne
stos
addl
call
mov
ret
in
pop
lods
aam
sti
outsb
mov
jno
mov
pop
sbb
pop
mov
ret
adc
or
lea
stos
push
xchg
sbb
es
shll
nopl
fiadds
add
fldcw
xchg
mov
jge
dec
add
mov
rcll
xchg
ss
js
add
cmp
mov
out
rorl
lea
add
xchg
pop
xchg
ror
cwtl
push
rcrl
push
dec
xchg
call
aaa
xchg
xor
cs
cmp
adcl
inc
xor
inc
mov
xchg
pop
bound
imul
pushf
inc
jo
arpl
faddp
xchg
mov
cmc
cmpsb
into
mov
jne
pop
jne
aaa
cmp
cmp
ljmp
loopne
xchg
mov
imul
dec
pop
xor
rcrl
bound
in
repnz
lds
mov
jp
lcall
mov
pusha
fst
call
mov
mov
out
inc
test
push
cmp
or
jg
pop
dec
lods
adc
adc
testb
pop
pop
cmc
push
dec
or
stos
into
push
sahf
shrl
xor
dec
mov
out
ret
cmpsb
in
xchg
pop
xchg
imul
hlt
xorb
dec
xchg
repnz
xor
sub
sub
ss
cmp
cltd
test
notl
pop
mov
repnz
daa
sub
int3
adc
bnd
mov
xor
push
dec
xor
ss
push
pop
popa
test
or
mov
stos
adc
insl
les
adc
cmpsb
lock
sub
cs
adc
enter
and
mov
mov
pushf
sub
mov
add
jne
or
push
dec
outsl
mov
inc
cli
cmpsb
cld
arpl
cli
dec
ret
xlat
roll
subb
test
mov
cmc
ret
jg
mov
ret
mov
xor
adc
xchg
testl
sbb
or
iret
push
lret
or
mov
das
and
cmc
pop
add
loopne
outsl
sub
mov
dec
xchg
xor
jbe
shlb
adc
inc
xor
and
pusha
add
notl
iret
dec
fs
mov
jo
add
pop
xchg
add
mov
out
lcall
insl
push
mull
dec
jg
test
fnstsw
or
mov
fwait
jne
mov
and
scas
cmp
inc
add
mov
jmp
adcl
xchg
loopne
push
stos
imul
nop
js
out
xorl
hlt
das
jbe
mov
push
push
jmp
mov
filds
mov
xchg
ss
xor
jp
mov
mov
mov
inc
xchg
fdivr
dec
pushf
imul
repz
sbb
xchg
adc
xchg
push
mov
mov
lock
test
push
lret
imul
mov
icebp
xchg
repz
leave
push
xchg
adc
lcall
and
imul
sahf
push
mov
jmp
dec
pushf
mov
std
jb
mov
sbb
aad
jns
sub
leave
jp
dec
sub
aaa
sbb
scas
push
mov
xchg
loop
lods
loop
fadds
xchg
js
movb
in
or
out
add
add
cmc
loopne
stc
mov
cmpb
jl
aas
inc
test
ret
sbb
inc
jmp
mov
mov
inc
pop
hlt
inc
div
aaa
cmpb
pop
inc
cmc
mul
faddp
andb
ds
cli
mov
faddl
not
push
mov
jo
negb
jo
jne
in
in
mov
incb
std
in
adc
mov
inc
imul
ret
push
sub
sbb
test
mov
xchg
jmp
mov
push
or
push
negb
ja
sbb
cmpsl
xlat
mov
je
pop
inc
call
outsl
push
shlb
xchg
xlat
dec
sbb
jnp
lahf
int
and
repz
pushf
mov
insb
daa
push
and
cmp
lcall
sahf
shlb
mov
pop
and
inc
xor
lock
sahf
cmp
jo
lods
push
cli
or
movsl
lods
arpl
xchg
cld
cmp
testl
adc
inc
idivl
xchg
leave
adc
xchg
cld
nop
out
aad
sub
fsubl
xor
push
ja
mul
outsb
sahf
mov
cmp
fistps
jp
lahf
ret
sbb
repz
mov
mov
sbb
cmpsb
ret
sub
mov
sbb
add
stc
sbb
call
cld
cmp
xchg
js
push
dec
lods
pop
mov
pop
pusha
leave
and
mull
mov
cmc
nop
mov
mov
movl
jne
cmc
adc
cmp
inc
pusha
movsb
push
mov
movsb
mov
jb
adc
lea
sub
sub
adc
sahf
inc
fwait
out
hlt
pop
inc
stos
negl
xor
mov
loop
cmp
cmp
mov
adc
cmp
incb
mov
and
xlat
mov
test
ret
inc
ffree
orl
push
adc
jbe
scas
and
sahf
push
cli
arpl
iret
popf
mov
or
outsb
xchg
sub
xchg
clc
mov
inc
mov
inc
stc
stos
mov
outsb
jmp
adc
fsubrp
or
mov
das
push
dec
imulb
mov
add
cmp
int3
adc
pop
add
movsl
out
push
out
push
inc
in
inc
mov
fisttpl
inc
movsl
mov
sub
test
add
shrl
inc
lea
lcall
mov
mov
stos
aam
sbb
test
and
adc
adc
jge
not
cmp
and
fdivs
imul
xchg
enter
imul
or
hlt
shrb
mov
aaa
lret
dec
imul
nop
js
xchg
xlat
sbb
clc
js
or
imul
mov
sub
push
and
sub
lret
xor
call
popa
inc
pop
mov
xor
out
ja
mov
sbb
jle
cmp
inc
push
loop
inc
push
sbb
xchg
jnp
mov
mov
int
xchg
leave
mov
xchg
push
dec
sahf
mov
or
mov
push
leave
mov
xchg
fdivp
dec
xchg
sbb
mov
adc
push
imul
neg
cmpsl
adcl
push
cwtl
adc
iret
xor
ffreep
xor
mov
icebp
fnstenv
push
in
sbb
cmp
fidivrl
in
mov
inc
sarl
jbe
insb
xchg
fldenv
dec
dec
ds
adc
mov
jbe
push
mov
jl
cmpsb
sarb
fs
jb
test
out
mov
cli
dec
xor
jecxz
int
leave
mov
xchg
push
lods
jnp
les
cmp
imul
inc
jnp
push
inc
adc
jge
cld
pop
pop
leave
and
fwait
push
cs
lret
inc
inc
rcll
cwtl
add
out
shr
call
inc
xchg
addr16
inc
adc
mov
icebp
sbb
pop
loopne
testb
sbb
or
and
fwait
dec
jle
inc
lret
cmc
ficomps
push
out
mov
adc
popa
leave
inc
roll
xor
mov
sbb
enter
cld
dec
sbb
cs
jp
mov
push
lds
hlt
mov
xor
cmp
int
cmpsb
lods
mov
addr16
sbb
aas
inc
jp
jno
sub
aad
idivb
mov
repz
push
arpl
icebp
lea
adc
out
data16
lods
push
dec
jmp
stos
xor
adc
sub
pop
js
ja
sti
in
outsl
and
mov
ss
adc
loopne
jmp
out
cltd
cli
nop
jae
pop
clc
mov
sub
push
or
cmp
and
cld
mov
sbb
jns
dec
dec
jbe
inc
icebp
mov
fisubrs
shll
incb
scas
pop
or
and
jae
push
cld
int
imul
in
aam
mov
mov
shll
arpl
adcb
dec
cli
sub
mov
ss
adc
cmc
in
lods
xor
and
sbb
aad
jmp
pop
data16
loop
xorl
outsb
adc
daa
mov
jbe
pop
jle
pop
push
adc
stos
enter
xor
jnp
stos
jp
loopne
ljmp
adc
add
lds
adcb
adc
cli
es
adc
sub
xchg
or
and
pop
lds
pop
mov
sub
jne
mov
ss
shll
dec
jg
add
jno
sar
fmuls
mov
jecxz
xchg
dec
mov
fucomp
mov
fwait
sub
mov
push
lds
in
fmul
xchg
int
sub
nop
sbb
jns
add
jecxz
push
lahf
xor
daa
lahf
and
aad
mov
add
ss
sub
insl
sub
lods
fbstp
pop
loopne
inc
jp
xchg
ja
jecxz
outsl
push
enter
mov
push
adc
sub
pop
ljmp
fnsave
dec
nop
inc
cmp
or
in
pop
divl
dec
cmp
dec
insl
inc
jl
add
xchg
stos
xchg
or
imul
mov
aaa
adcb
mov
jmp
fadds
lea
sarb
stos
pushf
adc
std
loope
jl
xchg
jmp
pop
sbb
aad
sub
stos
out
mov
repz
test
cwtl
push
lret
and
and
xor
jnp
pop
push
jbe
test
add
push
dec
popf
mov
leave
repz
pop
xchg
rcll
aas
lods
mov
gs
orb
add
out
aad
insb
movsb
fstps
sbb
adc
js
xlat
popf
ret
outsl
dec
mov
adc
gs
stos
stos
sti
fldenv
inc
test
pop
lods
hlt
cmp
sbbl
ficompl
out
sub
lock
pop
movsl
stos
xchg
ljmp
xlat
insb
mov
inc
cmp
adc
aaa
fcoms
cmpsl
imull
shrl
or
push
fildl
jne
ds
pop
and
pop
arpl
jmp
dec
and
xchg
push
jo
gs
xor
aad
sbb
and
lds
fs
hlt
aam
jae
lahf
dec
xchg
loop
aaa
push
mov
popl
sub
inc
fidivrs
adc
push
push
pushf
outsl
test
popa
add
jg
jbe
cli
mov
cli
cmc
sti
fimull
loopne
fildll
gs
repnz
dec
cwtl
repnz
sbb
fists
xchg
lods
cwtl
mov
test
push
inc
xor
xor
std
pushf
aaa
inc
sbb
inc
cmp
and
out
mov
or
fcom
rol
enter
cmc
inc
and
mul
cwtl
rcr
push
icebp
aaa
sub
icebp
mov
xlat
ss
pop
and
jmp
mov
inc
fsubs
push
jmp
pop
scas
or
or
icebp
mov
xchg
pop
test
imul
aas
jmp
repnz
jne
push
xor
js
hlt
xor
and
jno
or
and
mov
or
mov
shl
mov
popa
jg
stos
xchg
jo
gs
dec
add
and
lds
sbb
rclb
std
test
mov
mov
and
fs
aad
sbb
ret
rol
xchg
mov
jmp
add
fs
push
loopne
mov
xchg
xchg
mov
or
jo
ja
and
ds
sarl
and
ja
fdivl
inc
cli
divb
imul
jecxz
or
lods
insb
imul
icebp
mov
jge
test
dec
daa
mov
andb
xchg
arpl
sti
int3
dec
sahf
es
push
clc
pop
lea
out
not
mov
jle
mov
or
xchg
xlat
loop
inc
aam
mov
adc
das
sub
roll
mov
mov
mov
ret
mov
add
add
mov
cmp
icebp
scas
dec
pop
cmp
add
sub
push
mov
jp
cmp
jge
mov
out
fwait
shr
imul
lea
push
leave
in
cwtl
cmp
arpl
ds
out
movsb
and
movb
daa
lret
xor
rcrb
fdivs
mov
dec
aaa
pop
pop
mov
dec
aas
test
add
out
ljmp
leave
cmp
push
cmc
aam
insl
out
sbb
lock
out
push
jbe
push
and
adc
addb
push
xchg
jbe
dec
sub
scas
adc
adc
mov
lret
pop
rolb
insl
jecxz
add
repnz
or
inc
or
clc
mov
int
jno
pusha
or
cli
dec
inc
bound
cmp
cmp
jl
enter
mov
inc
and
rorb
adc
insb
cmpb
pop
enter
fbstp
stos
cmp
jo
lds
cmp
xor
mov
sub
fimull
cmpsb
into
adc
pop
adc
test
and
adc
aaa
mov
inc
add
jb
sub
loope
loope
adc
lds
add
pushf
inc
ljmp
pop
push
fisubrs
sahf
add
daa
aam
aad
mov
mov
fists
fisttpll
pop
fstl
mov
and
mov
pop
jbe
jne
push
xchg
ljmp
cmp
loop
out
fnstsw
ret
push
lret
movsb
add
jbe
mov
test
push
cltd
mov
aaa
mov
xor
call
xor
jl
or
gs
out
cltd
movsl
jg
dec
dec
insb
bound
mov
std
pop
mov
mov
frstor
xchg
lds
lock
faddl
das
xor
pop
adc
cs
mov
push
imul
stc
sub
bound
insl
jmp
push
adc
xor
pop
test
dec
cwtl
mov
loopne
das
push
lret
xchg
ljmp
fstpl
ret
lea
sbb
shr
loope
push
pop
and
std
and
repz
ljmp
lret
lret
ja
mov
repnz
testl
sti
mov
cwtl
add
ja
insl
in
movsb
mov
sub
xor
inc
pop
jb
sbb
aas
xor
call
out
xchg
push
mov
dec
push
popf
aam
jo
icebp
adc
loop
mov
mov
and
into
out
push
jl
mov
push
mov
push
stos
aam
decb
push
xor
shlb
in
mov
nop
xchg
dec
add
mov
fwait
mov
jecxz
mov
xor
mov
sbb
xchg
adc
int
cwtl
push
ret
jbe
iret
fldt
stc
jge
mov
aaa
daa
dec
into
mov
popa
mull
jb
dec
cs
shrb
cmp
add
mov
roll
mov
cmp
je
push
fldenv
lea
int
and
int3
jae
ss
outsl
fwait
pop
js
xchg
lret
rcrl
push
rorl
insb
mov
mov
push
xchg
divl
adc
mov
sub
test
xchg
xchg
icebp
mov
aad
lods
pop
lcall
add
in
call
rcrl
mov
jae
stos
xchg
cmp
cmpsb
xor
dec
ds
popf
pop
xor
sub
test
ret
or
jecxz
notl
lods
push
and
inc
mov
movsl
call
push
pop
xchg
in
push
div
jbe
sbb
push
pop
xor
jle
jecxz
shrl
dec
push
or
xor
cmp
add
lret
lea
sub
add
rcrl
or
lret
xchg
and
lret
inc
out
inc
push
jbe
inc
out
cld
orb
or
push
lea
cmpsb
jg
mov
push
out
aaa
out
mov
ror
das
jl
inc
push
lcall
pop
and
mov
sub
mov
cmp
xor
and
scas
cmpsl
arpl
jecxz
loopne
jne
xor
cmp
cwtl
negb
faddl
adc
mov
call
and
sbb
mov
push
popa
or
mov
into
outsl
cmp
pop
add
lahf
mov
popa
cmp
ljmp
hlt
std
insb
or
stc
mov
arpl
xor
dec
pop
movsl
fistl
pop
inc
lcall
ret
scas
in
dec
xor
js
sbb
out
test
enter
push
inc
fdivrs
jmp
in
xor
mov
nop
sbb
pop
or
sub
xor
adc
popf
push
pusha
cmpsl
cli
shrb
bound
and
fldl
pushf
outsl
test
mov
cmp
sbb
mov
cmc
fwait
loop
jmp
push
shld
sahf
fcompl
dec
in
int3
addb
movsb
lods
jmp
inc
lods
xchg
fst
outsb
cmp
jge
xchg
jecxz,pt
loopne
rclb
loop
bound
std
mov
fnstsw
stos
or
mov
xchg
xchg
scas
das
pop
jg
or
cmp
mov
add
test
jge
lds
cmpsb
push
fcoms
es
mov
sub
mov
cmp
ret
outsl
xor
test
mov
jle
add
pop
mov
test
repnz
add
movsb
cmp
cwtl
jg
xor
call
test
loopne
push
js
xchg
jne
mov
lods
fsubrs
in
cmp
fs
stc
shlb
pop
movsl
xchg
sub
jl
xchg
mov
mov
in
lret
scas
je
cmp
push
mov
in
sbb
in
orb
test
push
pop
jp
mov
rcll
in
ss
xorb
jle
pop
push
mov
scas
insl
push
icebp
cmp
aam
in
das
sbb
mov
outsb
pop
mov
jge
arpl
mov
inc
or
mov
fsubrp
mov
xchg
sub
add
pop
je
andl
sbb
outsb
call
ja
cltd
or
dec
or
fmulp
or
sub
add
lret
mov
mov
subb
xor
adc
pop
arpl
cmp
and
xor
inc
push
outsb
imul
dec
cmp
jb
push
shrl
xchg
pop
repnz
lea
ret
rorb
inc
out
dec
adc
andl
aas
dec
sbb
cs
ds
hlt
mov
sti
lahf
inc
inc
push
test
cmp
xchg
mov
imul
push
shlb
sbb
sbb
daa
jbe
cmp
add
idivl
xchg
scas
faddp
sbb
inc
out
jae
movb
les
push
jle
mov
pop
sahf
sar
push
jae
test
jle
xlat
sub
rol
jb
mov
shlb
imul
mov
ret
sbb
ds
cmp
sahf
stos
loope
filds
fimuls
mov
mov
addr16
or
imul
cs
mov
inc
std
pop
dec
jp
adc
js
sbb
in
push
loope
pop
add
dec
cmp
jmp
imul
and
or
and
add
cmp
lods
push
outsb
mov
mov
ds
sarl
sbb
sbbl
xlat
jl
clc
mov
dec
jno
movsl
xchg
xchg
mov
dec
inc
std
pop
sub
je
jbe
popa
mov
and
rclb
popf
lcall
sbb
mov
arpl
jmp
in
in
pop
mov
push
jnp
xchg
push
repnz
gs
and
sarl
push
push
clc
sub
xor
std
enter
xchg
fbstp
jbe
inc
inc
in
testl
popf
or
mov
sub
fisubrl
push
insb
into
jecxz
adc
lods
xor
jne
xor
dec
rcrb
into
mov
fucomip
cmpsl
adc
repnz
mov
push
fistpl
jo
jae
mov
or
push
mov
call
push
push
or
lret
stc
repz
lahf
add
cmp
or
push
mov
popf
mov
scas
dec
push
inc
fstpl
sub
daa
jo
mov
loop
das
imul
ret
in
cmp
sub
ret
cli
lret
and
jmp
rcl
xor
pop
sub
cmp
sbb
ss
sahf
cmp
sbbb
repz
iret
adc
xlat
addr16
and
shrb
push
adcb
xorb
cld
sbb
jecxz
popa
rorl
fsubs
lahf
jmp
xchg
popf
mov
fmulp
inc
mov
fld
pusha
kmovd
lods
iret
inc
xor
sub
adc
and
adc
pop
movsb
shll
in
enter
lret
add
inc
repz
out
or
add
xchg
dec
inc
lret
iret
test
push
mov
mov
mov
lcall
lret
test
ljmp
call
jae
dec
and
imul
in
lret
sbb
addr16
out
mov
jne
mov
mov
ds
add
call
push
cmc
cmpl
fadds
addr16
js
leave
in
mov
rcll
jl
xchg
pop
jle
in
pushf
pushf
stc
jne
insb
and
pop
notb
and
lret
xor
popl
dec
mov
or
mov
inc
xchg
bound
or
movsb
mov
dec
cmp
mov
adc
fidivrs
mov
pop
dec
pop
mov
fadds
out
scas
clc
hlt
pop
mov
test
xor
inc
jecxz
inc
dec
jbe
mov
and
lods
lods
jbe
fwait
test
pop
push
addr16
std
push
push
adc
mov
adc
mov
inc
jle
test
mov
push
stos
fnsave
pushf
pusha
movsb
scas
sbb
push
mov
push
and
pop
inc
imul
loopne
mov
adc
inc
sbb
jbe
mov
arpl
cmp
sbb
mov
mov
and
and
lods
movl
loope
sub
xlat
mov
pop
insb
test
add
faddl
cmp
mov
cmpsb
movsl
lea
out
xchg
jae
mov
fdivrs
xlat
sub
aaa
mov
sbb
xor
cld
lcall
movsb
cltd
clc
cmpb
das
pop
jmp
out
dec
imul
insb
movsl
mov
sbb
pop
xchg
add
pop
movsb
pushf
repz
jo
mov
xchg
hlt
lds
jecxz
cmp
in
mov
aad
aas
int
cmp
scas
sbb
pop
and
lahf
mov
sbb
inc
aam
loop
inc
jno
inc
movsl
idivl
dec
sahf
pop
cld
mov
gs
push
clc
aaa
mov
scas
movsb
ret
lock
shll
adcb
pop
cmc
dec
lods
les
xchg
call
mov
daa
test
add
and
xor
add
std
mov
and
jp
push
jecxz
adc
cli
movsl
jmp
sar
pushf
test
iret
std
in
sub
mov
ror
cmp
outsb
test
imul
nop
imul
daa
lcall
rcr
ja
add
ljmp
add
push
lcall
xor
jae
pop
sub
mov
push
xlat
aas
gs
gs
pop
imul
pop
and
xor
pop
inc
add
or
mov
rolw
jb
roll
sbb
push
test
outsb
out
push
out
xchg
loope
pop
push
stc
xchg
les
cwtl
inc
stos
cmpb
jle
pop
and
cmp
cld
pusha
aam
filds
inc
stc
and
inc
lods
jge
insl
loopne
xchg
sbb
orb
fisttps
mov
enter
aam
shrl
daa
jg
mov
mov
data16
shll
mov
outsb
cmp
aas
sbb
or
js
lret
mov
ljmp
push
add
mov
cltd
add
cmp
mov
movsl
xchg
jecxz
mov
ljmp
sub
xchg
in
int
shlb
shlb
ret
fisubl
inc
test
xchg
sti
jnp
sahf
or
xor
xchg
lock
or
dec
adc
in
outsb
fcom
mov
jl
push
sbb
adc
test
and
sbb
sub
repnz
add
rcrl
sub
inc
aaa
es
push
pop
scas
push
mov
test
push
call
push
cmc
int3
sahf
inc
xlat
sbb
sbb
cmp
in
jnp
jl
xchg
nop
inc
pop
pusha
mov
xchg
out
dec
rorb
lret
push
cld
jne
and
pop
imul
push
mov
mov
test
and
jl
mov
sub
lea
out
nop
xor
push
lahf
sbb
data16
and
inc
inc
in
call
daa
insb
outsl
cld
sub
or
fs
in
jg
add
dec
mov
inc
pop
mov
cltd
fsts
ljmp
jp
mov
mov
inc
jbe
pop
aaa
xchg
add
out
orl
fsubrl
push
test
adc
outsb
cld
pop
call
into
xchg
mov
test
shrb
cmp
xchg
dec
or
xchg
dec
add
dec
sti
pop
fwait
and
jge
mov
daa
mov
xlat
leave
pop
dec
mov
mov
adc
aas
es
and
and
jae
sahf
dec
enter
inc
mov
jb
xor
xor
aas
sahf
sbb
lods
les
or
adc
sbb
dec
mov
sbb
jle
cld
push
daa
jns
xchg
push
popf
inc
jbe
lock
add
lds
fwait
das
xlat
outsb
popa
cmp
push
or
mov
push
adc
xor
add
fdivrs
gs
jmp
pop
out
push
je
cld
sub
pop
sbb
cmp
sbb
cmp
insl
out
inc
cmp
int
push
mov
popa
dec
pop
and
adc
stos
daa
pop
jae
ja
jge
shlb
xchg
shlb
mov
xor
movsb
iret
push
add
or
dec
xchg
out
arpl
sub
aas
pop
and
add
pop
insb
test
adc
lcall
adc
sahf
popa
xor
dec
xor
rcr
adc
adcl
loope
leave
jmp
sti
jb
xchg
jb
lods
int3
outsl
out
pop
jnp
test
ret
sub
sub
mov
adc
daa
mov
push
sbb
fsubl
stos
mov
leave
inc
mov
out
rcrl
shr
jns
out
loopne
inc
or
push
add
gs
push
leave
nop
out
sbb
int3
sbb
mov
mov
mov
jo
pop
lea
or
and
loope
jg
gs
aaa
iret
movsl
mulb
ret
mov
cld
aad
and
push
mov
loop
cmp
mov
test
popa
sbb
mov
shr
shlb
fwait
push
jp
dec
pop
add
loop
add
std
add
inc
mov
add
iret
push
cmpsb
shlb
add
lret
arpl
jmp
pop
out
inc
jle
push
jb
std
lock
dec
call
xchg
push
pop
or
jg
sub
loopne
lods
or
jge
mov
adc
push
add
adc
out
xchg
xor
xor
outsb
arpl
sbb
in
int3
push
mov
xchg
jae
xchg
and
or
aaa
push
subb
and
jle
xchg
inc
les
mov
lahf
jle
cmp
mov
sub
jge
mov
clc
mov
jb
jl
push
cmc
out
fcoml
xchg
mov
sbb
cwtl
pop
jnp
leave
lcall
add
das
pop
call
jmp
outsb
cmc
ret
mov
inc
mov
fwait
mov
dec
daa
and
in
mov
ljmp
adc
lock
fstpl
divb
mov
adc
out
xor
inc
xchg
out
lods
xchg
xor
mov
xchg
push
lea
rorl
cmc
jecxz
fstps
imul
movsl
shlb
mov
imul
push
mov
sbb
decl
test
sbb
insl
xor
mov
mov
mov
cmp
cmpsb
push
mov
adc
in
outsb
mov
mov
xor
sub
outsb
movsb
icebp
mov
cmc
cmp
bound
mov
pop
fwait
scas
push
imul
sub
out
mov
lret
fwait
std
hlt
push
iret
pusha
mov
aad
cmp
inc
insl
or
dec
jae
mov
sbb
jg
mov
les
and
shlb
jo
jg
inc
sub
jg
pop
lret
mov
jne
int3
mov
imulb
and
je
and
icebp
jmp
xchg
mov
out
xchg
pop
in
cmp
xchg
iret
cmp
add
sbb
aaa
xchg
cli
jmp
mov
addr16
sbb
insl
test
hlt
subl
xchg
std
decl
pop
fcmovnu
pop
sub
outsb
mov
insb
and
lahf
sub
negb
js
bsf
in
or
xor
or
or
and
ss
sub
stos
and
or
inc
xchg
xchg
pop
mov
leave
pop
push
nop
xor
jp
mov
pop
mov
negb
lock
mov
pushf
jae
jmp
lret
out
pushf
sub
lock
sub
inc
xchg
stc
mov
sbb
js
inc
mov
in
testl
popa
js
pop
xor
xor
inc
jge
jle
mov
pop
push
insl
scas
cmp
aas
mov
dec
fcmove
pop
testl
pop
loopne
out
mov
out
ret
sub
or
scas
pop
cmpsl
mov
mov
adc
lock
dec
flds
scas
sub
cmp
popa
ja
mov
jg
out
insb
data16
pop
or
cli
cmp
mov
dec
testl
mov
sbb
or
push
stc
popa
arpl
xor
aaa
lret
fidivrs
loopne
test
mov
test
add
pop
xor
sub
insl
pop
jb
adc
movsb
int3
and
mov
outsb
in
jno
xchg
lea
xchg
inc
xchg
lock
mov
sbb
push
or
cmp
popa
mov
bound
icebp
sub
out
or
cmpsl
ljmp
cmp
xchg
lret
sbb
int
lock
imul
loope
movsb
dec
aaa
or
in
mov
lods
pop
or
push
ss
jb
adc
and
test
lea
push
cmp
aaa
sbb
jl
loop
ss
add
mov
imul
out
mov
in
mov
xchg
outsb
popf
mov
sub
lcall
pop
add
dec
mov
mov
and
sbb
mov
push
test
jbe
stc
adc
mull
in
cmc
inc
mov
cmp
or
cmpsl
ret
dec
repnz
jo
add
fadds
clc
cs
aam
movq
xchg
ljmp
daa
mov
dec
hlt
dec
add
mov
add
scas
add
sub
rorl
mov
pop
xlat
mov
outsl
inc
or
inc
inc
lcall
sub
or
xchg
sub
arpl
stos
popf
and
xor
or
outsl
movsl
testl
mov
rcl
cmp
xchg
in
and
adc
sub
aas
jnp
and
mov
cmp
lret
and
cmp
jp
ret
daa
push
lea
jo
lret
icebp
iret
sti
pusha
mov
ds
shll
push
outsl
xchg
lret
and
cli
mov
add
jae
lods
sbb
sub
jecxz
and
pop
lret
sti
lret
fisubrs
push
addr16
xchg
sti
pop
push
mov
test
inc
pop
fwait
add
jb
imul
mov
or
out
insl
movsb
lock
xlat
xchg
data16
and
pop
sub
lods
les
mov
push
pop
sub
jg
dec
pop
pop
mov
xchg
mov
aam
adc
fs
xchg
mov
aam
js
and
ror
push
cmp
pop
mov
fiaddl
mov
jae
adc
jb
iret
and
dec
mull
mov
add
mov
inc
push
in
popa
out
sbb
je
stos
xchg
call
mov
fs
aam
stos
repnz
outsl
and
cmp
sbb
xchg
dec
das
mov
insl
mov
and
jmp
push
fidivrs
and
pop
cltd
mov
xchg
cmp
roll
sub
test
cmc
sub
sub
jg
adc
push
iret
std
mov
inc
loope
nop
add
sti
repz
inc
sti
push
sarl
sub
push
cmp
enter
dec
lods
mov
and
pop
mov
imul
roll
jnp
jp,pt
mov
lods
repz
mov
sub
jns
mov
add
cltd
pop
and
outsb
js
xchg
pop
sub
add
xchg
xchg
clc
enter
mov
sbb
dec
mov
movl
adc
sahf
daa
add
sub
shll
push
mov
push
movl
mov
fiaddl
sub
dec
sbb
je
add
sbb
ret
xor
in
shrb
cmp
imul
sbb
lahf
push
movsb
adc
rcl
fdivrs
cmpsl
int3
ss
mov
sub
xchg
mov
in
xchg
cmp
les
mov
inc
pop
and
pushf
inc
dec
addr16
loop
filds
push
inc
scas
jb
sub
dec
push
imul
xchg
out
mov
adc
push
push
lcall
fld
push
cltd
outsb
add
xor
enter
xchg
mulb
orb
call
push
repnz
enter
repz
sub
mov
inc
inc
pushf
hlt
sbb
sub
dec
into
jmp
mov
sbb
jl
jo
cmp
sub
xor
mov
clc
cmp
loope
or
leave
jbe
push
ss
mov
or
jne
dec
int
add
aaa
sti
lcall
loope
xchg
loope
sbb
aaa
dec
xorl
sub
and
mov
stos
cmp
dec
mov
pop
jecxz
inc
nop
push
xchg
aam
xchg
loop,pn
mov
cmp
in
push
push
imul
and
push
cmp
lret
in
ss
mov
andb
lret
inc
push
lahf
ja
xchg
push
inc
sub
int
pop
mov
mov
add
mov
and
outsl
cmp
mov
dec
sub
cmp
iret
aad
add
pop
lret
hlt
pop
pop
inc
mov
nop
add
cmp
aad
shll
test
sbb
push
insl
shrb
sub
insb
inc
insl
sbb
loop
push
push
and
into
cs
stos
rorb
loop
push
sbb
mov
lret
lret
xor
cmpsl
adc
xchg
and
es
cltd
push
decb
sbb
xor
nop
testb
std
push
cmp
movsb
pop
pop
push
xlat
stos
cmp
mov
gs
mov
xchg
inc
jg
add
add
shrl
popf
fsubp
and
movsb
hlt
dec
inc
or
ja
xchg
orb
mov
mov
mov
dec
fidivrs
jnp
repz
jp
inc
dec
and
popa
xchg
jo
adc
xor
js
cmpsl
mov
imul
xchg
add
testb
ret
mov
es
iret
jmp
mov
test
push
ja
popa
movsl
or
cld
test
std
sarl
xchg
xor
dec
pop
dec
inc
xchg
es
call
aas
inc
xchg
inc
mov
adc
stos
inc
rcr
in
jge
pop
dec
aad
sarl
mov
in
lret
outsl
or
sub
ficoml
xor
nop
and
cmp
fidivrl
loop
add
cmp
adc
pop
ret
xor
dec
xor
xchg
shrl
ja
ja
push
daa
jnp
pop
adc
jne
stc
je
arpl
add
icebp
fs
loope
push
scas
shrb
sub
loope
stc
je
dec
adc
xor
loope
sub
and
inc
fcmovu
fcoms
inc
imul
mov
les
fsubs
add
loope
ja
inc
popa
mov
mov
lods
popa
stc
movsl
mov
dec
js
xor
out
cmpsb
push
sbb
cmp
in
dec
inc
mov
xchg
jnp
loop
jl
sub
je
mov
sub
fidivl
dec
sbb
push
jg
cmp
jae
mov
mov
fsts
insb
sar
aaa
push
xchg
and
pop
int
push
je
imul
sbb
push
mov
sub
shr
mov
data16
xchg
rorb
push
outsl
insl
aas
pop
testl
fnstsw
push
fs
outsb
mov
sbbl
inc
xchg
push
cmp
out
dec
inc
and
mov
std
repnz
shrl
pushf
rolb
xchg
mov
jns
jns
call
jae
shl
and
lcall
sub
lds
into
cltd
sbb
pcmpgtd
mov
inc
cmc
and
adc
or
inc
orl
xor
or
shlb
scas
lods
xchg
sbb
add
sti
dec
and
test
push
add
pop
xchg
push
cmc
mov
and
rolb
or
sbb
xchg
xchg
jnp
ss
jae
cwtl
push
xor
hlt
pusha
dec
out
test
pushf
or
dec
or
jno
lahf
andl
xchg
mull
cmp
push
mov
adc
out
mov
lahf
jno
nop
movsl
cld
fs
lds
push
xorl
and
sbb
xchg
mov
clc
aam
jo
mov
cltd
out
adc
cmp
loopne
push
insb
int
pop
inc
repz
xor
pop
jle
aaa
and
lret
shrl
push
xchg
repz
cmc
out
popf
std
mov
orb
xor
cmpsb
shll
pop
xor
and
mov
hlt
iret
shl
mov
xchg
sbb
or
or
fdivrl
or
sub
adc
pop
lret
shrl
push
jns
movsb
test
inc
out
mov
sub
xchg
addb
and
mov
add
lock
sub
fsubs
jne
lds
test
pop
sbb
lahf
call
enter
pushf
movsb
lock
stos
lock
jne
adc
sbb
mov
test
test
add
or
mov
addb
fldcw
add
add
loopne
shrl
subb
in
rcrb
jg
enter
sbb
push
push
xchg
jecxz
fdivs
loope
mov
stc
push
mov
lret
add
jmp
lahf
lock
add
fldenv
movsb
push
xor
or
icebp
pop
sub
sub
inc
enter
pop
adc
ja
jo
imul
xor
xchg
inc
sahf
ja
fcmovnu
pop
rolb
shrb
xchg
push
mov
jo
fldl
mov
cli
cmp
insb
or
push
push
ss
ficomps
decl
jle
mov
mov
loop
iret
inc
push
popa
int3
pop
sbb
ret
iret
mov
insl
out
enter
sub
pop
cmp
mov
cli
fidivs
mov
fcmovbe
icebp
mov
fisttpl
hlt
xor
insb
popa
dec
cmpsb
fcos
cmp
divl
sbb
mov
or
inc
dec
mov
sub
dec
push
scas
popa
fldl
pop
pop
imul
cmp
xor
jne
scas
pop
aam
and
movsb
pushf
pop
sbb
aad
ret
cld
push
aaa
icebp
fcmove
test
pop
out
enter
xchg
adc
jo
int3
das
pushf
mov
aam
adc
mov
or
sbb
icebp
xadd
pop
es
ljmp
mov
lret
pop
push
cmp
add
sbb
add
pop
stos
mov
and
and
mov
dec
enterw
out
pop
jge
mov
shlb
test
xchg
jle
lret
lea
ja
aas
jg
cmpsb
jl
int3
pop
push
push
and
mov
jge
hlt
lahf
mov
mov
push
lods
outsb
dec
push
push
aad
loopne
mov
fildll
xchg
cmc
data16
out
adc
or
mov
push
mov
popa
incb
push
enter
mov
pusha
xchg
or
sbb
hlt
enter
les
cmpsl
loope
mov
jmp
xchg
lods
xlat
mov
mov
inc
dec
cld
dec
mov
mov
test
shr
out
mov
aad
mov
test
jbe
inc
stc
outsb
lret
or
addr16
mov
ret
andl
jge
inc
outsl
mov
jne
movups
inc
adc
lret
push
ficoml
mov
inc
sub
push
xorl
inc
mov
stc
fst
pop
xchg
pop
out
pop
inc
jle
push
out
xor
test
lret
push
hlt
out
cmp
dec
adc
jne
in
cltd
fs
push
and
stos
sbb
dec
je
xchg
rclb
sahf
add
mov
mov
dec
daa
fwait
mov
push
jmp
inc
push
cmp
rolb
loope
adc
stc
jl
xor
pop
xchg
push
pop
mov
cmpsb
in
dec
dec
pop
cmpsl
mov
xchg
xchg
pop
sub
xlat
sbb
shlb
loop
sub
sbb
or
fnstsw
dec
call
pushl
movsl
xchg
sub
mov
xchg
mov
insl
sbb
cmp
insb
loop
sub
fwait
push
push
push
xchg
imul
repz
test
push
shl
shll
f2xm1
pop
push
lock
subl
repnz
mov
icebp
sub
pop
repnz
mov
testb
insb
jecxz
jbe
lahf
sbb
in
jbe
mov
subl
imul
cmp
sub
out
leave
mov
or
push
pushf
push
fcomi
dec
jmp
mov
movsb
mov
int3
push
lock
ljmp
mov
imulb
call
inc
push
lods
roll
fisubrs
incb
ds
adc
and
ja
mov
mov
sbb
cld
mov
lahf
cmp
sub
xchg
outsb
xor
pop
or
jp
in
lahf
push
pop
mov
bound
sbb
sub
xor
lret
push
push
fadd
adc
xchg
imul
jl
fdivrs
imul
ja
jecxz
leave
sub
shrb
ljmp
mov
adc
or
mov
or
test
fcos
stc
popf
in
jle
add
iret
push
or
sahf
mov
fimull
inc
mov
jecxz
fnstsw
dec
inc
mov
addb
mov
ffree
mov
icebp
add
pop
into
add
shll
cmpsl
mov
loop
jmp
push
daa
push
in
scas
insl
in
pushl
roll
sahf
xlat
ja
cmpsb
into
sub
rcll
les
scas
stos
loopne
inc
xlat
push
mov
sub
mov
mov
in
push
mov
ljmp
mov
xchg
push
test
je
fisubl
lahf
xchg
mov
ja
dec
mov
lods
into
sub
mov
pop
in
and
scas
cmp
push
fdivl
pop
js
cmp
fcmovne
mov
fs
mov
xor
jo
mov
cmp
adc
lea
daa
mov
xchg
adcl
xchg
cmp
jecxz
fwait
adc
or
enter
xor
fs
imul
sbb
jo
fisubl
mov
ljmp
pop
adc
sub
std
aam
pop
dec
mov
scas
dec
mov
jp
cli
lds
xor
fidivrs
lcall
fstpt
dec
push
mov
adc
out
adc
negl
xlat
adc
jecxz
push
dec
mov
les
dec
lret
sarl
jl
lds
mov
cmp
xor
mov
cmp
icebp
xchg
test
push
cmp
adc
lock
xchg
call
sub
outsb
js
cmc
push
enter
call
in
push
cltd
adc
jle
call
js
jns
dec
mov
in
add
arpl
jle
cmp
jns
lcall
stos
mov
dec
mov
sub
mov
sbb
daa
lods
loopew
ficomps
xorl
out
es
es
repz
and
je
add
rol
out
iret
xchg
mov
jge
int3
and
aaa
pop
loope
jp
les
aam
cli
mov
dec
js
lods
int3
jecxz
sub
push
push
pop
push
shlb
fiaddl
adc
psllw
test
pop
or
fs
inc
aam
insl
cmp
imul
nop
add
imul
mov
add
or
subb
add
adc
gs
scas
push
scas
mov
adc
and
push
test
fs
sbb
out
mov
pop
bnd
icebp
or
sbb
sti
mov
pop
lcall
fdivrl
out
clc
stos
xor
cmp
fsts
mov
lds
test
cmpl
jmp
pop
pop
sbb
icebp
push
shlb
lds
or
movsb
cmpsb
sub
daa
xchg
ret
push
pop
aad
dec
pop
sub
pushf
xor
les
mov
mov
adc
pop
dec
sub
sbb
clc
lret
adc
xchg
dec
push
hlt
jle
lcall
repz
das
nop
push
mov
cmpsl
shl
push
pop
jle
mov
adcb
push
imul
in
lods
pushf
mov
mov
ret
pop
jp
movb
fdivrp
mov
push
push
inc
inc
jle
push
xchg
test
sti
movsb
jae
clc
lea
movl
fcmovnbe
ljmp
pusha
mov
mov
ds
fsubl
ja
jns
mov
xor
outsl
scas
jbe
out
mov
inc
leave
pop
mov
out
cltd
aas
add
fists
repz
push
je
xor
mov
lahf
sub
mov
and
stc
mov
dec
call
adc
sbb
les
and
aaa
orl
repnz
sbb
and
hlt
pop
lods
adc
mov
and
rcl
or
addr16
xor
imul
shll
sub
int3
mov
jp
fldl
cmp
fidivl
push
inc
add
and
or
fnstcw
in
int3
adc
insb
lds
sub
shlb
mov
lds
mov
jg
shl
ljmp
loop
mov
mov
inc
push
das
pop
js
inc
add
scas
xor
es
mov
insl
mov
repnz
push
ja
xchg
xor
add
xchg
add
lock
test
sub
pop
xor
xchg
jb
and
and
inc
lahf
cwtl
stos
add
aad
or
mov
cmp
insl
jg
jns
and
mov
mov
int
fisttps
push
std
xchg
or
sti
out
sbb
lret
loop
inc
jae,pt
lods
and
leave
fisttps
mov
cmpsb
loopne
scas
dec
cld
jl
int
daa
hlt
shlb
pop
fnstenv
and
pop
inc
es
mov
xchg
jmp
jo
add
adc
xchg
arpl
cmpsb
pusha
inc
ja
gs
jecxz
mov
lods
mov
fs
cltd
inc
shll
jb
sbb
dec
icebp
nop
clc
popa
ds
aad
mov
push
imul
and
xor
outsb
cmp
imul
mov
rorb
pusha
mov
lahf
das
or
or
mov
sub
into
scas
mov
enter
out
jb
adc
cmp
in
add
xchg
loope
icebp
jmp
mov
pop
std
adc
push
popf
shlb
sbb
cmp
sbb
pop
mov
pop
lcall
arpl
or
pusha
or
xchg
loop
pop
sub
std
xchg
mov
jle
mov
insb
ljmp
movsb
cli
fs
mov
movsb
pushf
or
test
inc
xchg
fstp
and
add
jae
loopne
imul
imul
dec
ljmp
inc
jnp
fisubs
push
fdivp
ds
jp
fwait
int
pop
inc
adc
xchg
jp
or
loopne
les
mov
fs
decb
sti
ljmp
add
je
sub
adc
bnd
lea
mov
in
pushf
lret
add
rclb
popf
lret
icebp
cmp
out
cld
gs
std
arpl
xchg
arpl
lret
sti
repnz
aad
pop
pusha
dec
and
je
sbbl
pop
pop
cmp
movsl
dec
dec
ret
sub
lret
cmc
mov
mov
cmp
sbb
fbstp
mov
xchg
pop
push
lea
adc
xor
dec
xchg
fdivr
jle
repnz
adc
cmp
test
pop
mov
add
call
cmp
add
or
je
cld
add
stos
push
sub
cltd
jae
cs
mov
cmc
lret
repnz
cmc
push
and
mov
insb
dec
pop
xchg
mov
lods
or
lcall
xchg
insl
and
lods
cmp
popa
sbb
outsl
lods
jnp
jb
test
push
push
test
aaa
lahf
lods
in
cld
add
or
iret
pop
push
or
scas
add
or
xor
cmp
loope
mov
mov
aam
mov
lret
daa
sub
inc
xchg
or
cltd
lea
sbb
pop
cltd
mov
jge
jge
popf
jge
cli
xlat
and
xchg
add
loop
inc
xor
adc
add
imul
add
add
ret
cmc
mov
std
popf
pop
sti
inc
into
lods
or
dec
aas
xor
imul
mov
lahf
xorb
jae
insb
clc
lock
xor
daa
push
cmp
scas
loopne
leave
ret
rcrl
in
jmp
addb
das
sub
adc
addr16
stos
xor
or
sarb
sub
ljmp
mov
int
stos
inc
cltd
gs
scas
mov
test
arpl
pushf
aaa
sub
mov
jnp
push
and
sub
out
in
xchg
lret
xor
scas
add
xor
mov
cli
in
jo
rcrl
and
movsb
and
pop
shrb
imul
mov
sbb
fmuls
or
pop
mov
xchg
cmpsl
faddl
lret
scas
fiaddl
push
and
dec
pusha
mov
sub
jnp
dec
bound
pop
push
lods
out
jo
add
fisubl
adc
mov
insl
mov
and
cmpsl
lahf
inc
cmp
incl
ss
adc
lret
cmp
mov
xchg
loop
mov
addb
pop
ss
push
fisubl
cld
and
jecxz
lret
push
incl
bound
mov
adc
js
js
movsb
cmp
in
lcall
cmp
or
cltd
dec
lock
sbb
mov
pushf
and
push
jmp
js
push
inc
int
jb
push
inc
popa
test
jl
sbb
jge
push
sub
inc
cltd
cmp
mov
mov
push
push
xchg
or
xor
mov
fs
imul
dec
push
rolb
xor
inc
into
out
cmp
xchg
sbb
movsl
push
repz
and
inc
clc
testb
int
cmpsb
outsb
in
inc
or
in
enter
cmpsl
push
pop
adc
push
in
pop
sahf
sbb
cmp
and
fisttpl
icebp
cmp
aad
shlb
out
mov
push
push
jmp
call
push
sub
addr16
jl
out
adc
stos
sbb
ficomps
out
mov
lret
cltd
lret
das
decb
jo
lret
mov
fdivl
imul
sbb
das
add
xor
add
mov
dec
js
fisubl
mov
test
xchg
clc
dec
shrb
je
push
jo
mov
lret
adc
lock
cmp
sub
pusha
notl
sub
andl
pop
les
cld
mov
xor
push
jmp
or
loope
mov
ja
cs
jmp
orl
pop
inc
test
shl
adc
cmp
movsb
and
xchg
je
push
scas
jecxz
fsts
cmpsl
shlb
lea
mov
in
mov
xchg
or
jo
xor
adc
jge
les
mov
push
pop
push
sbb
cmp
jbe
cld
jae
insb
and
cli
jge
in
mov
sub
iret
cmp
sbb
mov
addr16
jb
ja
mov
pop
aad
adc
sub
rcrb
bndldx
or
outsb
sarl
aam
or
mov
xchg
call
cmpl
push
fwait
int3
inc
inc
add
pusha
push
popa
lds
jne
and
push
inc
jbe
xor
push
clc
jnp
test
sub
cli
es
or
ds
jle
jae
and
nop
popa
add
jp
imul
cli
or
arpl
aam
cmp
sbb
pop
mov
sbb
incl
cli
cmpsb
add
adcl
cmp
push
mov
push
xchg
aaa
popa
push
jmp
ljmp
sbb
les
sub
lods
xor
mov
push
dec
sbb
cs
push
adc
dec
inc
pop
jecxz
mov
int3
cltd
shrb
push
imul
jl
jbe
and
sar
rorl
test
jno
mov
xchg
xor
rorl
jmp
mov
sbb
xchg
adc
mov
outsl
sbb
inc
shlb
in
or
loop
mov
jo
sarb
out
clc
dec
cmp
sub
lret
mov
jecxz
jnp
jg
mov
push
adc
mov
inc
aam
sub
adc
add
pop
mov
int3
jp
insb
int
es
jl
mov
push
pop
cmp
js
inc
or
cmp
cmpsl
push
xchg
add
sahf
in
lret
jbe
ret
mov
out
jge
cmp
and
and
mov
gs
push
push
dec
push
cmpsb
rorb
loopne
xor
sbb
ret
fisubs
fmul
xor
sbb
jb
pusha
sbbb
scas
fildll
xchg
leave
mov
insb
cmp
mov
int3
or
test
mov
lods
mov
push
push
dec
xor
mov
daa
xchg
shr
cld
daa
lahf
inc
popf
and
test
dec
out
pop
aaa
jno
scas
arpl
pusha
pop
mov
scas
add
clc
dec
ljmp
cmp
or
mov
mov
clc
or
mov
push
lock
pusha
mov
gs
gs
fadds
mov
pop
jecxz
xorb
mov
mov
mov
ljmp
arpl
clc
std
call
push
shrb
cmpl
add
pop
or
push
cs
adc
outsb
pop
ljmp
outsl
in
pop
adcb
push
xor
stos
push
mov
jle
nop
imul
int
pop
hlt
inc
std
int
push
mov
fdivrs
loope
pusha
mov
add
and
push
and
gs
sbb
sbb
push
lret
inc
sbb
push
imul
mov
sub
std
or
add
fwait
jae
lods
jb
mov
repz
xchg
in
dec
sbb
test
mov
push
and
pop
mov
pushf
inc
repz
dec
inc
repz
xchg
aad
dec
lret
in
pushf
lock
test
cmpsb
movsb
jnp
adc
xchg
jbe
and
std
addr16
popa
popa
mov
aaa
xlat
enter
mov
testb
inc
push
in
aad
jp
fcmovbe
in
or
ror
scas
mov
sbb
and
pop
test
mov
or
nop
rcr
mov
or
push
jmp
dec
loopne
ret
jb
pop
sub
out
inc
dec
xchg
mov
mov
jmp
pop
mov
mov
imul
mov
pop
into
shlb
add
mov
adc
push
ss
cmpsb
cmp
fisubrs
cmpsb
fbstp
popa
xchg
sub
loop
push
pop
mov
lods
push
pushf
inc
cmp
pop
aas
inc
pminsw
and
mov
into
imul
jge
push
push
jmp
mov
aaa
imul
add
popa
jb
fbld
xchg
lcall
push
push
repz
jne
fistps
out
jecxz
out
adc
xor
pop
orb
lea
xlat
sahf
pop
fildl
js
push
or
pop
lret
lahf
inc
hlt
inc
in
mov
or
xlat
xor
cli
mov
daa
or
mov
jmp
subl
and
jno
add
sub
mov
stos
aad
or
cs
inc
bound
out
push
jl
out
cmp
ret
and
daa
outsb
arpl
jb
stc
outsl
inc
xlat
push
mov
int3
mulb
lret
xor
stos
pop
pop
mov
add
fildll
or
or
or
mov
sub
mov
getsec
imul
mov
stc
xor
rolb
sub
add
fisttpl
ja
add
in
inc
add
xchg
mov
movlps
push
divb
in
leave
pop
in
and
movzwl
lret
sahf
pop
adc
scas
xor
sbb
sbb
pusha
push
cmp
and
mov
and
pop
xchg
push
scas
jns
pushf
pop
mov
ret
add
sub
sbb
cmp
jmp
scas
pop
sti
fsubrl
mov
nop
loop
pop
cli
xor
mov
jno
and
cmp
xchg
sahf
pushf
je
les
insl
cmp
rcrb
mov
in
aas
mov
out
dec
push
cli
orl
lods
pop
jmp
mov
inc
lahf
pop
xor
fcomps
ljmp
pop
ss
incb
pop
sub
mov
aad
icebp
mov
push
mov
mov
jbe
imul
jnp
mov
dec
iret
fisubs
jl
sub
inc
loop
ror
js
pop
mov
mov
and
imul
outsb
push
and
and
xchg
jns
sub
cmp
sar
loopne
fimull
mov
pop
add
test
jge
int3
jp
mov
movsb
repnz
addr16
outsl
xchg
mov
mov
add
fisttpll
fldenv
rcrb
mov
ficoms
lahf
lret
xchg
aas
pop
adc
iret
pop
outsl
xor
jecxz
mov
add
fs
add
xor
sbb
cmp
dec
or
imul
cs
aas
xchg
push
jg
shl
fldz
fimuls
sbb
and
hlt
dec
mov
or
mov
divb
mov
jle
dec
fcmovnb
nop
xor
cwtl
int3
loope
mov
out
orl
push
mov
jmp
outsb
fsubs
mov
fimuls
xchg
mov
push
call
jl
push
mov
cmp
imul
adc
or
and
fwait
scas
addl
gs
xchg
gs
pusha
xorl
cmpl
outsl
decl
adc
jb
adc
add
jno
clc
divb
pop
inc
mov
jbe
push
xchg
jl
aad
in
mov
jmp
lret
mov
push
pop
mov
sub
aam
add
out
xor
dec
add
push
test
push
in
aaa
jnp
and
test
xchg
add
mov
inc
inc
movsl
sub
lcall
cltd
out
jl
inc
loop
loope
adc
mulb
imull
jbe,pn
dec
push
cmc
out
push
incl
mov
cwtl
sbb
xor
pop
call
lock
pop
and
mov
cmc
pop
dec
and
int3
loopne
dec
stos
les
and
xchg
cmp
enter
inc
cmpsl
out
jo
mov
int3
int
loop
loopne
sub
mov
and
jecxz
cmp
es
cmp
movb
inc
mov
mov
or
xor
ficomps
pop
ja
push
andl
imul
icebp
enter
xchg
out
xchg
pop
mov
lret
mov
and
jne
stc
jne
cmp
std
mov
pop
inc
or
pop
mov
jmp
fisttpll
sarl
lret
loopne
jl
mov
mov
and
aaa
dec
xchg
clc
scas
je
aad
dec
daa
sbb
test
lods
add
cli
jp
mov
inc
dec
imul
mov
adc
ds
dec
rcrl
out
popf
mov
sbb
jnp
pop
lret
jbe
xchg
push
mov
or
hlt
sub
xchg
outsl
xchg
push
es
mov
push
dec
xor
daa
shl
mov
enter
aam
jne
filds
xor
jmp
es
adcb
xchg
inc
adc
das
lea
addr16
push
pop
dec
sbb
or
arpl
cmp
sub
push
imul
xorl
imul
push
movsl
int
cli
cmp
cmp
popa
and
loope
and
push
cmp
fcompl
and
gs
dec
lret
ret
xor
lcall
xchg
std
outsl
aaa
repz
das
sbb
cs
fistl
pop
add
jl
push
iret
push
shrl
std
push
and
lea
negl
mov
cmc
dec
movsl
mov
push
pop
sub
push
adc
adc
adc
sbb
dec
fdivrs
cmp
ljmp
sbb
mov
mov
inc
xchg
movsl
shr
bound
xchg
adc
leave
jg
inc
fidivrs
cmp
mov
xchg
movsb
or
enter
cs
lret
pop
andl
divb
cmp
jne
mov
in
cwtl
mov
xchg
cmp
fiaddl
jno
jg
cltd
dec
jae
cs
or
dec
inc
lahf
cltd
repz
cmp
dec
push
roll
das
into
test
cmc
xchg
fisubl
frstor
lea
test
fmul
pop
jge
mov
mov
scas
cmp
icebp
shll
stos
jmp
pop
nop
dec
mov
add
mov
jg
xchg
push
inc
xsaves
mov
shll
sbb
bnd
add
pop
and
int3
cmp
scas
cmpsb
adcl
push
jmp
sti
add
cmp
push
sub
mov
mov
add
inc
pop
mov
xchg
roll
mov
jb
test
or
shll
ret
sarb
inc
push
bound
mov
cltd
add
outsl
jmp
jmp
pop
insb
imull
lret
out
add
lock
sbb
cmpsb
push
stc
outsl
ss
lea
adcl
pop
dec
jp
imul
jbe
cmp
sub
sub
jno
add
push
out
sbb
dec
adc
icebp
aam
cmp
jnp
insb
adc
ret
inc
fisubl
cs
test
in
addr16
jb
pop
ret
mov
cmpsl
imul
nop
sbb
mov
inc
lahf
push
sti
mov
push
test
nop
mov
mov
adc
and
sub
mov
cltd
jl
add
fwait
jb
cmp
mov
adc
movsl
ja
aad
mov
sub
andb
aas
jecxz
shlb
push
hlt
cmp
decl
mov
test
mov
push
adc
cmc
push
or
sbb
popf
movb
add
test
and
aaa
sbb
or
jmp
dec
scas
fs
push
push
in
cmp
mov
in
fs
push
cmp
mov
imul
in
push
jns
pop
pop
xor
or
jb
js
into
cmpsb
jns
movsb
or
or
mov
dec
push
jns
out
xchg
rcl
pop
mov
sub
xor
jge
dec
mov
iret
sbb
and
jp
add
sub
fwait
out
hlt
sbb
int
call
ja
xchg
icebp
cmp
dec
lahf
xchg
or
ret
adc
xchg
sbb
dec
pop
into
pop
mov
cmp
lcall
movsb
jg
enter
push
xchg
and
dec
dec
fwait
hlt
sub
push
out
mov
sbb
repnz
testb
ss
out
add
repz
test
mov
call
fstpt
pushf
daa
mov
nop
fwait
daa
jno
xor
cmp
rorb
mov
mov
adcb
aad
arpl
loop
xchg
jl
mov
sub
sub
pop
ljmp
adc
mov
cld
xchg
lods
cmp
int3
cmp
cmc
bound
inc
fidivl
adc
insl
add
jno
stos
and
fnstsw
push
xchg
shl
add
nop
mov
sbb
filds
mov
xor
and
addr16
movsb
rorb
pusha
cmp
jmp
fdivr
sub
mov
subl
push
xor
lds
xchg
jmp
push
icebp
cs
xchg
in
cmc
mov
adc
or
repnz
jg
pushf
adc
js
sub
dec
inc
jp
out
insb
rorb
mov
or
xchg
pop
xchg
pop
sub
dec
lock
mov
pop
jge
xor
adc
sbb
mov
pop
sub
dec
aad
adc
push
ja
lds
lods
adcb
push
ss
sub
push
out
ss
stos
mov
fnstsw
cmpsb
inc
pop
push
stc
adc
rcr
dec
bnd
dec
jg
loope
jb
adc
mov
movsb
or
mov
push
sbb
nop
repnz
sbb
sbb
cmpsb
testl
or
cld
popl
add
leave
js
sbb
loop
and
mov
lods
loop
mov
repz
subb
ljmp
imul
pop
and
out
jns
es
daa
lea
xchg
jmp
inc
nop
xor
dec
xor
movsb
xor
add
push
mov
addl
jae
add
popa
mov
pop
xchg
mov
aam
cmc
jns
pop
into
and
outsl
sub
mov
mov
jmp
cmp
icebp
adc
mov
dec
xor
xchg
lret
xor
adc
push
jp
dec
loope
cmpsb
sub
mov
add
rorb
or
push
adc
xlat
sub
insb
fldenv
fwait
xor
and
movsl
adc
iret
dec
popa
push
mov
das
push
jg
pushf
popa
inc
jge
mov
cwtl
popa
xchg
icebp
pusha
sbb
out
push
mov
inc
xchg
or
pop
xor
pop
sub
loop
in
fldcw
outsb
mov
mov
es
leave
insl
iret
xchg
mov
cmpsb
sub
xchg
loope
sub
or
cltd
sbb
jge
repnz
sub
jmp
or
bound
add
iret
cltd
sub
xor
mov
stos
cld
mov
jecxz
loopne
or
dec
pop
mov
and
call
xchg
xchg
addr16
int3
xor
inc
inc
push
dec
mov
in
pop
push
mov
mov
xchg
aam
adc
ds
push
idivl
outsb
pop
in
movsl
push
mov
arpl
ret
testb
scas
push
inc
jnp
xor
adcb
xchg
adc
je
outsl
mov
jb
jmp
out
add
mov
inc
push
ljmp
out
mov
add
sub
idivb
mov
dec
mov
mov
cmp
add
xor
push
je
rcll
repnz
mov
cmp
push
push
repnz
sahf
idivw
lahf
test
shl
gs
repz
and
daa
pop
loopne
inc
push
cwtl
push
jne
cltd
xor
mov
in
fildll
cmp
outsl
dec
lret
test
and
lcall
add
or
lret
fsubrl
js
sbb
scas
sub
in
lods
xchg
and
lret
inc
rclb
sbb
sbb
mov
add
pop
push
stc
lods
es
cmp
push
sbb
pop
mov
ss
inc
sub
cmp
dec
adc
popa
adc
outsb
cmp
mov
mov
les
mov
sbb
adc
enter
sbb
add
repnz
mov
pop
out
je
lods
inc
cmp
stos
and
xor
mov
and
push
pushf
push
xor
in
out
inc
scas
mov
lcall
dec
adc
xchg
xor
call
sbb
mov
xchg
mov
mov
clc
test
into
push
sbb
push
pushl
xlat
mov
or
pop
lret
mov
popa
and
test
fdiv
cli
orl
ljmp
subl
push
xor
sub
pop
dec
pop
mov
out
cmp
mov
leave
nop
pop
fsubl
and
xchg
xor
in
xchg
bound
dec
lret
mov
push
loop
mov
xchg
add
les
xchg
icebp
mov
push
or
mov
fdivs
rcrl
repz
in
jae
mov
cmp
xchg
pop
stos
push
aad
mov
lea
pop
mov
mov
jo
lret
adc
inc
scas
pop
jle
jb
sub
jno
pushf
cwtl
inc
negb
push
ss
stc
cmp
mov
push
loop
cli
push
sbb
push
jmp
jmp
test
scas
sbb
xor
xor
std
cld
or
mulb
mov
xchg
pop
in
call
mov
lcall
or
idiv
xor
pop
movsb
or
inc
outsl
mov
addr16
pop
ja
gs
xor
push
mov
and
mov
insl
push
add
xlat
push
out
pop
xor
dec
into
shr
leave
insb
in
or
push
rorl
dec
mov
into
orw
mov
mov
sahf
stc
or
ja
dec
fs
fcmovnu
aas
adc
mov
push
cmpsb
and
adc
out
jno
js
data16
out
imul
popa
adc
dec
push
fprem
jmp
and
dec
or
cs
aad
loop
ror
shrb
hlt
jmp
jge
dec
mov
sub
cmp
sub
leave
inc
or
xchg
popa
jnp
iret
adc
and
rclb
mov
cli
jp
pop
mov
sbb
sti
xchg
or
mov
sti
ret
inc
aaa
loope
push
nop
xor
add
push
dec
out
inc
xor
mov
outsl
cld
ret
mov
lods
arpl
shlb
add
ja
incl
dec
push
scas
imul
xlat
inc
or
sbb
xor
addr16
sub
insl
cwtl
adc
push
jecxz
lret
shll
adc
cmp
sub
add
inc
add
outsl
jbe
inc
mov
adc
repnz
push
rorb
ret
cltd
xchg
ljmp
add
mov
aad
in
mov
shrl
jecxz
leave
loop
test
inc
out
andb
leave
lock
addr16
mov
jb
fisubl
pop
inc
pop
sub
rcrb
cmp
sti
maxps
add
pop
and
dec
sbbb
pop
aad
mov
rorb
push
pop
lea
mov
and
mov
push
cwtl
repnz
lods
loopne
and
push
push
xor
sub
sub
es
insl
mov
es
xchg
dec
jns
pop
jg
xor
outsl
pusha
rcr
das
pop
sbb
ret
mov
jge
mov
mov
stos
sub
add
add
lcall
mov
insb
repnz
xchg
dec
imull
add
cmp
jb
roll
imul
or
lods
pop
out
adc
sub
push
mov
pop
inc
push
mov
xor
cmpsl
stc
outsb
sbb
stc
and
sub
shll
mov
ss
cmpsb
pop
dec
out
mov
xor
pop
pushf
adc
fdivrl
test
lods
add
sbb
cmpsb
cmpsl
xor
fwait
and
mov
fwait
cli
cvtdq2ps
gs
fcmovnu
dec
inc
std
and
mov
pop
in
scas
push
test
test
pushf
outsl
push
lea
cmp
out
cmpsl
les
mov
pop
fisttpll
js
or
pop
dec
xchg
mov
into
xor
ja
sub
aaa
es
movsb
cltd
xchg
pop
sahf
dec
mov
pop
andb
jp
pop
movsb
jno
iret
test
divb
sbb
and
cmpsl
mov
addb
negb
sbb
xlat
add
inc
add
push
fnsave
jae
pop
lods
mov
mov
arpl
insb
loop
push
rolb
sbb
repnz
or
int3
cld
push
mov
push
xchg
scas
push
loop
inc
loopne
cs
lcall
test
loope
les
pop
mov
push
pushf
push
xchg
insb
xchg
and
sub
inc
or
jmp
pushf
xchg
out
cmpsl
jo
cmp
cmp
add
xlat
dec
mov
add
dec
lea
popf
push
hlt
mov
mov
jne
mov
pop
das
bound
jl
push
push
mov
cmc
cmp
into
fbstp
outsb
cmp
dec
and
jmp
pop
outsl
sub
fmul
mov
in
jg
sti
add
cmp
pushf
pushw
mov
test
push
xchg
and
or
stos
pushf
ret
xchg
pop
enter
idivl
jge
out
cwtl
aam
mov
sub
cli
lcall
sbb
loope
mov
cltd
clc
add
cs
lcall
pop
cmp
sub
add
push
cmp
pop
mov
cmp
jg
xor
daa
std
rcr
sub
xchg
into
mov
mov
adc
mov
cwtl
adc
pop
inc
jg
sub
pop
mov
subl
into
sbb
inc
iret
movsb
mov
ss
pop
test
dec
je
jle
imul
stc
cmpb
xchg
or
or
add
jp
push
cwtl
sbb
lret
icebp
sti
adc
xor
cmp
imul
mov
adc
and
mov
or
enter
cmp
xchg
stos
flds
adc
leave
cmpsl
loopne
fcoml
test
data16
cmp
into
movsl
xor
pop
lcall
and
pop
dec
xor
int3
lds
lock
rorb
cmp
mov
and
push
lcall
rorl
push
pop
std
pushf
or
andb
push
mov
vshufps
mov
mov
bound
push
bound
lds
mov
ret
mov
adc
and
mov
loopne
aad
dec
add
jns
or
pop
jg
insl
pop
mov
ja
in
and
add
stc
dec
and
lret
popa
movsb
sub
call
rcll
inc
dec
pop
mov
push
in
int
xchg
inc
data16
push
movsb
sub
loop
test
pop
js
jmp
xor
into
pop
push
out
jp
repz
dec
out
fcmovb
lock
aad
add
fs
mov
jne
loopne
std
adc
push
mov
jns
inc
popf
push
xchg
addr16
mov
mov
inc
ja
lods
andb
add
cmp
test
dec
pop
cwtl
and
jae
bswap
fwait
lods
lock
popf
and
mov
push
and
add
fnstsw
sbb
jb
shr
jp
push
nop
in
testl
fsubl
outsl
cld
dec
out
inc
adc
mov
std
add
jns
push
xchg
movsl
cmp
sbb
xchg
and
mov
int
loop
sbb
movsb
pushf
in
jle
xor
jg
frstor
lahf
mov
sbb
orl
inc
and
lret
push
jecxz
inc
mov
je,pn
pop
push
divb
or
jbe
lcall
jnp
sub
sbb
out
mov
xor
mov
scas
sub
dec
dec
mov
mov
inc
xor
test
mov
icebp
addr16
adc
xorl
inc
dec
scas
stc
das
mov
mov
xchg
clc
and
sar
into
mov
std
aad
aas
mov
jp
mov
push
mov
sbb
fucomi
mov
andb
test
mov
xchg
dec
xchg
jle
xor
imul
addr16
and
mov
adc
sub
xchg
es
xchg
add
dec
scas
test
sub
ljmp
gs
shrl
push
cli
es
xor
sbb
push
idivb
jo
mov
xor
mov
xchg
mov
aad
fs
bound
aaa
sti
or
iret
xor
test
adc
adc
jns
jae
cmp
xchg
pusha
cmp
out
int
out
sub
dec
inc
movsb
dec
xchg
inc
popa
out
mov
aas
adcb
jecxz
dec
add
mov
fisttpll
push
lcall
scas
faddl
pop
jle
rclb
adc
fs
xchg
andl
xor
push
pop
add
sub
test
imul
outsl
inc
jge
inc
test
mov
iret
xor
mov
sarb
int3
leave
fsts
or
mov
out
clc
lock
shlb
lcall
mov
inc
fwait
lock
dec
xor
push
adc
adc
mov
hlt
ss
mov
jge
inc
cmpsb
fwait
sbb
jg
jnp
cmpsb
push
mov
pop
pop
cmp
scas
in
addr16
movsl
das
cmp
es
mov
iret
sahf
divl
xor
test
pop
xchg
mov
stos
adc
sbb
add
out
and
mov
fstl
or
mov
and
out
lock
jnp
mov
pop
int
push
cli
js
or
push
and
push
imul
mov
ja
int
xor
xor
sbb
xchg
sub
cmp
cwtl
cs
mov
test
push
mov
mov
xor
push
xor
pop
bound
dec
push
stos
imul
mov
mov
ds
dec
daa
fwait
xor
jl
addl
lret
cmp
push
cld
cltd
pop
call
or
sub
add
add
test
lods
push
push
push
aad
in
ss
int3
pop
add
inc
test
or
jge
sbb
fildll
or
lea
mov
push
xchg
mov
push
nopl
add
push
stos
nop
mov
lds
les
int3
jae
add
push
nop
mov
loopne
lock
pop
adc
xor
or
or
cs
mul
sbb
mov
js
lods
lahf
mov
add
js
push
sbbl
jl
xlat
lods
jge
cmpsb
and
aam
popf
pop
lcall
dec
js
dec
subl
fisttpll
cmpsl
je
mov
pop
ja
jns
lods
insl
clc
iret
cli
or
aad
test
in
push
scas
nop
and
scas
icebp
cmp
in
aas
xlat
lret
ljmp
andb
decb
xchg
cmpb
jg
xor
xchg
push
fs
cmpsb
loope
sbb
dec
arpl
or
adc
movsb
xor
movsb
xchg
jle
shlb
insl
dec
sub
popa
push
mov
mov
cmp
dec
inc
out
arpl
adcl
and
sub
xor
cmp
ds
pop
mov
in
dec
hlt
lret
lret
inc
out
push
jmp
call
push
mov
stc
xlat
aad
add
inc
add
sbb
cld
xor
sbb
in
and
or
outsb
push
orb
in
xor
mov
ljmp
jle
push
dec
mov
mov
jecxz
lods
mov
mov
push
enter
insl
dec
cmp
fldenv
ljmp
xor
ja
dec
jle
addl
jp
pop
add
roll
test
test
sub
jecxz
dec
enter
push
push
mov
xor
xchg
and
sbb
or
cld
jp
orb
fisubs
lret
test
mov
adc
xor
xchg
jb
lahf
icebp
mov
pop
fwait
push
ss
xchg
ljmp
or
jge
aaa
cmpsl
scas
dec
xchg
jnp
and
clc
mov
adc
jb
shl
aam
and
insl
xchg
mov
xor
clc
ljmp
jge,pt
jge
adc
push
or
pop
out
test
iret
xor
inc
cmp
push
mov
pop
stos
icebp
mov
jmp
inc
ds
je
or
sbb
and
lret
mov
mov
push
fcmovu
cmpsb
enter
or
xor
pop
xlat
sahf
test
inc
icebp
push
imul
or
push
cmp
cwtl
fdivs
arpl
icebp
sbb
sub
and
lods
out
sbb
inc
and
or
mov
and
xor
cmp
ja
sbb
fstps
dec
fs
adc
imulb
lods
or
add
jns
xlat
cltd
pop
outsl
test
outsl
adc
int
add
xchg
inc
ret
push
sbb
sarb
mov
mov
mov
or
loopne
aam
dec
orb
stos
mov
and
filds
pop
jbe
push
and
mov
and
xchg
push
mov
cmp
inc
dec
leave
mov
rolb
out
jno
ret
dec
rolb
push
jecxz
push
jne
jnp
add
addr16
jle
in
cltd
lods
andb
add
lock
push
pcmpeqw
inc
rcr
sarb
mov
nop
jo
dec
pop
pushl
add
xchg
cli
pop
push
in
iret
inc
or
push
jb
pop
movsb
out
sub
push
jl
int3
aad
mov
subb
sbb
je
xor
or
pop
addr16
add
arpl
sahf
jae
lahf
and
es
in
mov
repz
dec
xchg
pushf
sub
mov
clc
push
adc
test
test
mov
mov
dec
dec
incb
or
push
sbbl
mov
cmp
into
cmp
ret
mov
sbbl
dec
push
sbb
fwait
cmp
shrl
sbb
xchg
add
inc
cltd
jo
push
inc
xor
cwtl
repnz
xor
mov
or
enter
aam
rcll
loop
je
or
and
jmp
jno
nop
and
pop
jnp
cmpsb
mov
jbe
mov
mov
in
jp
pop
int
jmp
mov
jmp
xchg
in
add
pushf
test
ret
and
je,pn
in
xchg
dec
in
mov
or
dec
popf
or
js,pn
ljmp
cmp
or
and
lds
sti
loopne
scas
jl
pusha
push
push
xor
add
xchg
pushf
sub
adc
std
adc
push
inc
std
adc
fdivrs
mov
shlb
sbb
xor
adc
and
push
jp
jb
push
inc
jno
xor
mov
iret
shll
ror
jb
mov
mov
jb
adc
test
repnz
cwtl
das
dec
aam
inc
stos
andl
inc
jg
lret
lock
ret
xor
xor
daa
fcmovnb
loop
movsl
movsb
decb
cmp
out
mov
jg
mov
je
cmp
daa
test
mov
push
push
imul
cmc
lret
clc
or
mov
inc
jbe
mov
inc
pop
lahf
jg
cmp
and
xchg
dec
sbb
jns
rorb
jae
das
jno
and
xchg
dec
cmpsl
inc
mov
xor
xor
and
xor
jne
push
repz
imul
adc
sbbl
xchg
jo
ss
loopne
sub
ljmp
test
test
stc
mov
cmp
add
pusha
mov
enter
mov
insb
and
dec
sbb
push
xlat
in
mov
cld
xlat
out
mov
scas
and
dec
fists
xchg
lahf
pop
clc
pop
xchg
dec
scas
mov
pop
jg
dec
fdivrl
leave
cmp
push
xchg
xchg
or
sbb
scas
push
cmp
sbb
hlt
test
xor
aaa
mov
jp
dec
pushf
nop
lock
ret
std
hlt
inc
cs
fidivrs
or
xor
in
fwait
ret
mov
icebp
shll
hlt
add
and
mov
ret
mov
in
sbb
popf
das
iret
cmc
inc
lods
scas
mov
cmpsl
jae
mov
outsb
in
and
dec
mov
xor
nop
add
or
add
sti
int
jno
push
int3
mov
ds
ret
imull
dec
mov
add
add
stc
adc
int
imul
xchg
pop
mov
and
lahf
pop
pop
add
adc
mov
and
xor
push
xchg
leave
popa
test
xchg
push
mov
mov
jae
mov
ja
mov
icebp
out
and
cmc
inc
ret
test
jo
pushf
add
mov
push
jle
out
ljmp
sti
pop
inc
outsb
mul
sbb
rcrw
inc
xchg
dec
lods
test
mov
jae
les
call
out
jmp
push
mov
test
mov
adc
sub
lods
jl
out
mov
jnp
dec
popf
mov
or
ficoml
sarb
bound
loope
aas
pop
pop
and
mov
loope
cwtl
inc
add
pop
sahf
enter
sbb
mov
lcall
inc
adc
xor
xorl
andw
movsb
push
cmp
or
mov
aad
sub
xchg
insb
jp
aam
fisubrl
xlat
cli
mov
mov
sahf
pusha
rcrl
jp
xchg
imul
sarb
ret
mov
jae
dec
sbb
xor
dec
xor
jae,pn
fwait
repz
lods
push
stos
pop
dec
aaa
fdivr
inc
push
data16
rcll
sub
mov
pushl
xor
cmp
mov
pop
fcomip
into
push
push
jnp
adc
sub
pop
xchg
mov
pop
imulb
ret
ljmp
adc
dec
mov
inc
cs
stc
incl
aad
lods
sub
popf
movsb
mov
bnd
inc
lods
cli
insl
movsb
in
jmp
mov
add
out
adc
test
int3
sub
adc
das
sbb
lock
in
dec
cwtl
stos
push
push
fwait
mov
arpl
or
mov
cs
pop
testb
mov
jmp
adc
dec
scas
out
xchg
and
lret
jecxz
or
xor
insl
and
sti
sub
mov
gs
pop
sbb
std
test
lods
cmpsb
addr16
movsb
pop
xchg
add
fstpt
add
inc
repnz
jae
sbb
cmp
inc
or
lcall
sti
fwait
cmp
or
xor
imul
mov
ljmp
push
lods
sub
push
repz
xor
add
sub
es
int
xchg
sub
pop
jae
jp
hlt
out
enter
sbb
push
mov
shll
stc
xchg
push
lock
jo
mov
imul
or
inc
mov
push
push
lods
rcrl
es
xchg
lds
out
mov
adc
xchg
ja
cwtl
fdivr
xchg
loop
add
add
repnz
lods
jns
and
cmp
ficoms
mov
stos
xor
push
mov
push
js
bound
addb
imul
xor
ror
inc
test
push
adc
jbe
test
aas
in
mov
incl
loop
or
fcomi
pop
xor
push
sub
negb
push
lock
lcall
add
shll
test
inc
call
sub
mov
xor
sbb
std
mov
push
push
sub
movsl
and
jmp
sti
pop
repnz
sbb
lock
and
jg,pt
push
jl
inc
xlat
pop
adc
xchg
popf
in
pop
lock
or
xchg
pop
sbb
mov
dec
sbb
ljmp
jns
or
add
jno
add
je
inc
or
addr16
pop
jecxz
inc
in
fbstp
inc
mov
fs
push
dec
inc
push
pop
leave
sub
insl
mov
sbb
dec
add
sub
scas
aas
sbb
push
or
xor
push
fs
daa
outsb
dec
dec
pop
std
pop
fldpi
popf
mov
inc
imulb
int
sti
mov
lds
pop
dec
das
ss
stos
repz
hlt
pop
aas
sub
sbb
inc
jmp
pop
jl
nop
xchg
sub
into
into
and
test
jno
gs
cs
popf
mov
in
mov
pop
mov
scas
inc
inc
repz
test
push
mov
push
sub
inc
mov
pop
xchg
adc
sahf
subl
and
imul
mov
iret
test
mov
mov
adc
mov
fcompl
arpl
mov
jge
push
sub
or
aad
sub
mov
bound
daa
clc
repnz
pop
lret
xor
pop
jg
and
test
adc
jnp
inc
iret
mov
gs
push
push
xchg
sbb
jecxz
pusha
push
sbb
sbb
das
sbb
push
lods
gs
dec
mov
gs
push
cld
stc
dec
dec
aam
je
fstp
adc
cwtl
sbb
pop
imul
mov
mov
mov
imul
jl
ja
arpl
mov
enter
fucomip
jl
rclb
jns
mov
cmpsl
iret
testl
cli
xor
push
repnz
aas
aad
aad
repnz
push
xchg
lods
xchg
xchg
out
dec
std
add
fisubs
cmpsb
nop
stc
shll
pop
sbb
pop
dec
fbstp
testl
out
sbb
pop
aas
cmp
loop
jg
dec
push
pop
dec
dec
arpl
mov
imul
xchg
add
roll
lcall
ds
out
lock
add
jnp
xor
add
repz
mov
in
sahf
lods
pushf
dec
addr16
or
test
mull
mov
out
out
cmp
sub
sbb
jnp
inc
jle
pop
and
popf
push
mov
xchg
jne
outsl
repnz
lahf
fcomps
rolb
loopne
lods
mov
push
movsl
std
mov
mov
int3
cmpsl
push
fldl
cmp
dec
pop
cmpsb
jl
push
or
lock
mov
dec
xlat
mov
jae
mov
in
and
add
dec
aaa
add
mov
rcl
sub
loope
shll
popa
inc
add
pop
push
test
shl
jnp,pt
fcmovbe
iret
xchg
arpl
mov
sti
and
push
fsubl
jns
mov
or
scas
lret
test
mov
ss
cmp
mov
and
inc
mov
xchg
jne
jmp
stc
jp
loope
fisubl
pushl
inc
lcall
cmpsl
movsb
fimull
sub
popa
mov
gs
xchg
xchg
idivb
fldl
jne
jg
inc
xor
sahf
mov
jecxz
popf
loope
iret
dec
mov
lcall
out
xlat
bnd
jb
movsl
mov
leave
lahf
sti
sbb
mov
mov
inc
mov
cwtl
imul
repnz
mov
adc
es
shll
adc
mov
mov
xor
pop
mov
xchg
out
cmp
pop
fsubp
lret
ss
lret
ficomps
xorl
push
ss
ret
jl
pop
or
int
cmpsl
push
repnz
arpl
les
push
adc
in
call
sub
subb
iret
jb
and
adc
std
xchg
gs
out
cwtl
out
push
sub
inc
push
or
sbb
shlb
fsts
adc
inc
rorb
fisubl
cmc
and
mov
mov
je
cmp
mov
push
xor
mov
jb
xchg
mov
aad
bound
scas
scas
push
icebp
push
dec
cmp
sbb
cmp
test
jmp
cmc
testl
nop
aas
pop
sarb
das
xchg
mov
nop
mov
mov
out
sbb
test
inc
dec
mov
adc
cmp
inc
mov
cmp
loopne
mov
cmp
loopne
lcall
sub
out
gs
cltd
mov
xor
insb
mov
xorb
mov
push
adc
out
adc
idivl
dec
fs
xor
xchg
and
xor
add
add
mov
cmp
cltd
push
movsl
sbb
int
insb
cld
rorl
jnp
out
fnstenv
cltd
cltd
sub
push
and
ss
loopne
outsb
push
sub
out
add
xchg
adc
push
mov
cltd
ja
repz
in
add
cmpsl
and
xchg
xchg
pop
or
add
insb
xchg
xchg
repz
fwait
pop
mov
dec
push
data16
pop
js
pop
or
or
mov
add
outsl
mov
or
movsl
xchg
cmpsl
cmp
mov
in
aaa
clc
push
daa
dec
rcr
loopne
push
popf
push
in
jle
iret
dec
lret
in
and
and
dec
out
in
imul
mov
ret
ret
and
cmpl
sbb
mov
fcmovnbe
adc
lret
mov
mov
fs
add
cmp
jno
out
jp
jbe
jo
test
sbb
imul
std
inc
jo
sbb
fwait
shl
ljmp
adc
mov
loope
add
dec
xor
repnz
insl
pop
sbb
and
outsl
push
es
inc
aad
lret
push
out
cmp
sub
and
jae
stc
pushf
fmul
nop
push
out
nop
xchg
js
pop
jp
mov
js
mov
lea
pop
clc
cmpsl
addr16
test
push
mov
and
pop
loope
pop
ljmp
leave
outsl
andl
das
lock
nop
lret
arpl
push
std
sub
sub
gs
movsl
fldl
xchg
jb
mov
adc
xchg
lods
in
jge
cmp
sbb
mov
inc
mov
scas
pop
lock
dec
inc
dec
or
test
scas
call
scas
and
inc
out
or
mov
gs
dec
jbe
sbb
jmp
jo
loopne
outsb
lods
aaa
scas
xchg
fistpl
mov
pop
pop
jp
mov
push
movsb
mov
sbb
pop
out
jle
fcmovnb
popf
loopne
xor
lock
cmp
js
movsb
sbb
pusha
mov
push
inc
mov
aad
jae
add
rcr
rcll
movsl
jecxz
rorb
bound
adc
xor
jg
jno
leave
or
mov
fcomps
mov
cwtl
xor
sub
mov
and
sarb
sub
add
shl
stos
and
scas
incb
pop
in
fbstp
pop
dec
cmc
adcb
or
mov
loope
hlt
push
mov
add
push
ja
es
leave
ja
and
adc
or
pop
sub
pop
or
mov
inc
enter
dec
mov
mov
aas
adc
fisubl
test
cmpsl
imul
stos
stc
mov
mov
out
sbb
jne
nop
mov
jmp
jnp
lods
je
icebp
stos
adc
add
leave
scas
jmp
xor
imul
xchg
icebp
ficoms
lret
cmpb
jns
aad
cmp
int3
xchg
mov
mov
xor
mov
sbb
in
scas
add
into
stc
sbb
inc
outsb
sub
sbb
subl
adc
pop
mov
sub
movsl
iret
xchg
pop
in
mov
and
mov
dec
jecxz
call
je
pop
int3
xchg
std
ja
mov
or
pop
add
xchg
mov
or
shlb
lcall
jg
call
rcll
hlt
cmc
mov
adcb
adc
push
loopne
aas
movsb
sbb
push
jb
pop
dec
stos
ljmp
sub
inc
xorb
fisttps
cmp
test
mov
and
mov
aam
or
pop
stos
insl
jecxz
pmaxub
or
lahf
pop
loopne
sub
insl
mov
movsl
popf
pop
addl
imull
or
test
std
jmp
dec
sub
xchg
mov
mov
mov
push
or
iret
cmp
fldl
shll
sti
test
mov
dec
jae
out
lods
iret
mov
je
rcll
inc
int3
xchg
push
push
fistl
pop
or
add
pop
fnstcw
dec
data16
mov
ficoms
es
push
xchg
jne
shlb
xlat
repz
jmp
imul
xor
rcrl
aaa
stos
aad
cmp
andl
push
insb
sub
shr
mov
popa
out
mov
sbb
sub
je
or
cmp
cmp
sarb
pop
adc
jmp
leave
adc
xchg
lret
sbb
cmp
lds
sbb
or
xchg
fisubs
push
xor
lret
nop
jle
aad
xchg
mov
jecxz
xorb
cmp
lock
add
or
or
xchg
push
popf
ret
dec
loopne
in
clc
and
leave
xchg
add
push
lahf
les
test
dec
mov
pop
push
add
adc
dec
add
repnz
into
cmp
sbb
das
fnstsw
sbb
xchg
rorl
pop
xchg
sbb
mov
or
xlat
ficoml
cmpsl
pop
cwtl
lret
fildll
push
repz
rcrb
cli
es
xor
lock
ficoml
add
pop
pusha
das
sub
mov
pop
fnsave
xor
stos
push
fdivs
mov
mov
int
pop
mov
cltd
xchg
xchg
jo
cmpsb
add
jmp
xchg
loopne
xor
lds
jae
loope
je
pop
inc
and
push
pop
xlat
mov
add
mov
dec
addr16
cmc
mov
jecxz
mov
push
rcrl
mov
psubw
cltd
fbstp
or
mov
filds
out
or
add
fnstenv
int
aam
dec
add
mov
ljmp
push
xor
xchg
and
decl
jnp
movsb
push
cmp
jns
popf
andl
stos
mov
int3
fisttpll
or
ficomps
xchg
jns
jae
pushf
lcall
out
mov
les
lret
int3
mov
test
xor
fidivrs
dec
imul
mov
pop
imul
shll
rorb
aam
mov
push
sub
in
lods
or
or
in
dec
xchg
in
insb
pusha
testb
jg
pop
imul
test
cmc
nop
ret
adc
fs
xchg
dec
jno
fldl
push
mov
std
and
sbb
mov
dec
sub
jo
add
adc
mov
push
hlt
test
and
mov
push
lcall
dec
scas
aam
fdivr
cwtl
pop
or
inc
ficompl
sbb
sub
sub
and
sub
loope
pop
mov
xorb
mov
iret
xchg
sub
inc
shlb
stos
adc
xchg
das
sub
dec
rclb
loope
mov
pop
shr
fiaddl
mov
insl
adc
cmpsb
add
inc
and
leave
out
cli
xorb
cli
stos
incb
in
sbb
and
add
fcmovnbe
jne
jbe
cmp
outsl
jo
cmc
lods
in
mov
xchg
rclb
add
and
or
sbbb
ss
push
push
stc
addr16
jl
jo
incb
push
mov
mov
call
fbld
xchg
loopne
cld
add
fucomp
mov
pop
dec
lea
xchg
pop
sbb
jg
add
lds
dec
xchg
and
jp
cmp
ds
sub
int3
mov
iret
je
xchg
clc
outsl
and
daa
xor
xchg
pop
pop
add
mov
int3
gs
lahf
scas
test
or
fwait
nop
pop
in
call
js
mov
lock
sbb
mov
add
lock
ficoml
jmp
pop
xchg
pop
pusha
arpl
dec
insb
mov
test
dec
popa
mov
lcall
mov
adc
insb
sarb
xlat
jmp
mov
out
leave
push
jmp
push
outsl
pop
push
or
ret
xor
in
fisubl
push
lret
aad
jno
ja
js
push
cs
pop
bound
bnd
test
pop
cmp
jbe
xchg
rcll
test
and
inc
ds
jae
sbb
aas
xchg
push
jmp
or
mov
mov
inc
jmp
and
or
or
adc
repnz
and
and
adc
jno
pusha
shll
daa
inc
lret
and
mov
in
in
jge
cld
mov
sti
nop
pushf
sbb
jno
mov
clc
int
fsubl
jnp
dec
sub
cwtl
mov
movsl
lea
inc
add
shr
test
lea
jge
out
dec
cld
sti
popa
sti
outsb
jnp
dec
addr16
cmp
sbbb
xchg
bound
add
or
push
and
jo
lock
in
xor
cltd
dec
or
andb
in
sbb
fwait
xchg
push
loop
pushf
xorb
aaa
xchg
mov
sub
jg
and
dec
imul
test
int
rcrb
push
fisttpl
cltd
mov
lret
push
test
sbb
and
add
and
jne
in
rcrl
jl
stc
lea
jbe
xchg
lret
sbb
inc
dec
enter
adc
or
push
mov
jo
fistpl
mov
push
push
cmp
inc
daa
and
mov
xlat
mov
sub
cmp
movl
xor
xchg
stos
sbb
push
mov
or
cld
sti
add
das
sbb
push
hlt
adc
adc
and
std
sub
test
dec
or
mov
pop
mov
test
and
fucomi
and
aad
in
shrb
xor
scas
loope
xchg
in
into
in
int
pushf
add
xchg
icebp
jmp
mov
fiadds
pop
cltd
addb
inc
jae
lcall
ljmp
dec
xor
inc
jg
mov
xchg
adc
and
xchg
mov
aaa
cmp
mov
jne
xchg
add
in
adc
push
jb
mov
into
cmpsl
bound
cmp
in
dec
add
jmp
mov
scas
das
inc
adc
sbb
cmp
in
stos
mov
adc
insb
xor
or
dec
sub
pop
push
xchg
outsl
xor
push
and
pop
mov
insl
mov
xor
or
and
ja
mov
rclb
cltd
sarb
add
fmul
jmp
in
scas
out
mov
cmp
mov
adcl
push
lds
or
dec
mov
repz
sub
jnp
incb
iret
inc
xchg
jmp
dec
addl
push
mov
add
movsl
loopne
insb
lods
or
loop
push
shlb
cld
mov
xchg
rorb
or
xchg
dec
mov
std
test
rcl
test
inc
xor
lods
xor
mov
push
xchg
fs
cs
movsb
aad
fdivrl
fnsave
push
xchg
loope
ficoms
fld1
notl
jg
cmpsl
dec
mov
lods
bound
sbb
add
fwait
imul
jle
xchg
mov
cwtl
fwait
fs
adc
clc
push
xchg
hlt
fwait
fldenv
mov
fnstsw
jle
jbe
das
dec
sbb
push
adc
sbb
js
cltd
adc
mov
hlt
xor
jecxz
test
inc
repnz
jns
add
cmpsl
ret
add
into
cmp
ret
or
in
test
pusha
je
push
push
gs
cmpsl
loop
inc
sub
mov
pop
push
xchg
push
jo
sbb
lds
xor
sub
sub
mov
loop
pop
fs
aas
mov
mov
arpl
pop
testb
xlat
outsb
lret
pop
pop
cmp
sbb
loopne
mov
sbb
cmpsb
sub
sbb
jbe
icebp
adc
clc
scas
lods
lcall
loopne
push
out
pop
loop
fs
or
mov
pop
int
gs
nop
fdivrl
fistpll
aaa
mov
mov
xlat
or
cmpsl
aam
sbb
bound
pop
ja
lock
in
test
push
xchg
add
pop
nop
xchg
jne
imul
movsl
mov
push
scas
pop
mov
mov
js
mov
sub
bound
outsl
xchg
cmp
mov
push
loope
dec
push
dec
or
mov
push
inc
xor
loope
cltd
pop
pop
in
xor
sub
cld
sbb
inc
ficomps
adc
mov
inc
add
xor
cltd
push
faddl
sbb
inc
jno
jecxz
push
mov
insl
stos
sub
mov
aas
loop
xchg
cmpsb
imul
imul
cmp
or
fs
test
push
rcrb
aaa
adc
push
rolb
loopne
sbb
sbb
sub
jle
ljmp
xchg
mov
dec
mov
int3
insl
cs
out
mov
gs
xchg
lret
es
dec
mov
arpl
mov
and
cmp
fadd
popa
inc
ss
jmp
cmp
push
movsl
rorl
xchg
enter
sbb
scas
push
sbb
nop
cwtl
out
push
xor
mov
pop
add
pushf
xor
mov
cwtl
pop
push
ds
js
adc
xchg
xor
lock
xor
xchg
ret
lcall
sahf
aaa
mov
cmpsb
fdivrp
subps
dec
cwtl
ds
mov
or
xor
adc
cltd
or
push
out
mov
mov
inc
outsl
call
add
in
cmp
mov
xchg
sahf
mov
push
mov
mov
mov
rcr
rcll
leave
dec
cmp
fidivrs
in
in
jle
mov
sbb
pushf
sbb
pop
add
lret
lret
pop
std
dec
jge
cmp
lock
push
push
js
mov
shrb
data16
cmc
jo
pop
sbb
std
sbb
add
and
jne
xchg
sbb
push
mov
lods
mov
aad
or
sub
mov
sub
shrb
test
sub
aaa
daa
cmpsb
inc
add
dec
xchg
orl
dec
inc
fsub
mov
rcll
enter
pop
out
addb
xchg
xor
and
jo
dec
dec
sub
shrb
jmp
adc
popl
mov
add
insl
xchg
mov
into
cmp
stc
lods
movsb
push
fisttps
jns
loope
idivl
fistpll
dec
cs
shl
inc
push
bound
out
xor
sub
cmp
mov
dec
into
pop
sub
xlat
in
out
adc
mov
jo
mov
pop
push
mov
mov
sarb
pop
xchg
les
inc
sbb
inc
sub
add
cld
mov
dec
das
frstor
je
or
int3
xlat
orb
cld
mov
jnp
test
jmp
mov
daa
in
insb
dec
jg
ficomps
xor
mov
cmpsb
sub
mov
out
add
out
clc
jecxz
lcall
fisttpl
stos
loopne
orb
insl
sbb
mov
stos
xchg
mov
insl
stc
mov
repnz
lret
sbb
in
fisttpll
repnz
outsb
sub
inc
sbb
push
lds
push
inc
es
fisubrs
mov
or
pop
outsl
lret
sbb
inc
mov
imul
sbb
jge
or
mov
lret
add
xor
mov
and
and
mov
leave
ss
bound
cmp
push
push
xchg
int3
inc
icebp
jo
mov
inc
mov
imul
mov
subl
and
js
aad
add
xor
fsts
imul
adc
mov
ja
sbb
test
lds
cld
sti
lcall
popa
fldt
xchg
and
push
lea
divb
sbb
or
dec
mov
and
push
add
call
movsl
es
in
pop
sti
loop
stos
and
adc
cli
rorl
loop
pop
mov
and
and
jl
dec
push
imul
lcall
add
mov
lods
cs
loope
push
scas
int3
jo
leave
sahf
popf
roll
jle
jg
inc
into
fwait
shrl
pop
rorb
dec
push
sbb
xchg
xlat
fwait
xor
outsb
add
ja
pop
pushf
insl
cmp
popa
cs
push
jae
pop
mov
jae
mov
aam
stos
fisubrl
addr16
dec
scas
jno
inc
sub
fs
scas
fwait
shlb
sub
push
aam
orb
data16
sbb
sub
sbb
dec
jg
lods
push
xor
mov
ret
lea
int
lods
mov
ret
xor
add
or
scas
call
jnp
inc
lcall
insl
pop
adc
stc
lock
popf
loope
sar
gs
cs
xchg
xchg
loopne
or
leave
cmpsb
stc
mov
inc
jne
xchg
mov
sub
ds
insl
in
push
mov
sbb
and
shl
sub
ficoml
mov
sub
jmp
fdivr
cmp
repnz
pop
ja
sbb
das
lahf
call
je
push
lods
cmp
sbb
sub
add
rcl
pusha
sub
inc
aad
or
imul
xor
and
or
jnp
add
lret
and
jnp
or
fxch
mov
add
inc
mov
cwtl
sbb
dec
test
jl
jae
push
xchg
loopne
mov
pop
std
and
mov
lret
into
pop
fimuls
sbb
dec
in
ljmp
mov
lcall
add
ret
push
dec
sub
loopne
clc
add
fwait
out
push
adc
repz
shrb
push
out
mov
xchg
dec
sahf
cwtl
or
pop
inc
xchg
sub
hlt
lods
xlat
cmp
sbb
aaa
cmpsl
jge
sub
inc
mov
jle
mov
mov
ss
inc
or
ljmp
ret
pop
add
fwait
add
movsl
cmp
insl
icebp
adc
jge
add
mov
push
ja
popl
data16
mov
sti
cwtl
jg
jns
push
ljmp
repz
mov
das
idivl
dec
cmpsb
div
nop
clc
movsb
mov
jb
das
aas
pop
out
loopne
cmpsb
imul
push
ret
scas
xor
lods
xchg
dec
mov
adc
jb
xchg
aam
jne
clc
dec
sbb
pop
leave
scas
pop
jge
repz
jne
sarl
sbb
data16
and
lret
inc
sub
bound
xor
mov
xchg
mov
jnp
lret
sub
pushf
pushf
mov
andl
and
sbb
adc
mov
jg
jb
cltd
mov
insl
lods
movsb
movsb
pop
inc
push
mov
jmp
movl
stc
adc
add
dec
mov
ljmp
inc
js
add
aas
jns
pop
arpl
int
out
push
and
mov
push
outsb
fmuls
or
sub
rol
add
pop
lahf
add
lods
shrb
push
dec
cmc
arpl
cmp
faddl
stc
adcl
loop
scas
movsb
xor
pop
jg
nop
fucom
cmp
test
imul
jo
iret
pushf
inc
inc
xor
gs
pop
fwait
xorb
or
mov
pusha
xor
sub
add
outsl
fcmovne
cli
xchg
imul
das
je
int3
xlat
or
dec
and
pop
lods
movsb
nop
ss
rcll
mov
mov
in
orl
pop
rorl
loopne
mov
sbb
mov
rcll
lcall
inc
cs
mov
lcall
add
inc
out
push
out
mov
cmpb
lods
dec
mov
cmpsb
jne
adc
stc
push
push
pop
mov
movsl
pop
ds
lret
call
mov
mov
int3
cmp
bound
in
cmpsb
adc
mov
mov
dec
inc
pushf
pop
leave
scas
pusha
push
popf
movsb
rcl
dec
mov
or
test
push
mov
xor
push
jecxz
test
lret
out
jbe
adc
movsb
leave
das
add
mov
jae
hlt
jbe
push
fists
rcrb
daa
sbb
mov
lret
pop
nop
dec
in
popa
xchg
stos
jl
cltd
jp
mov
movsl
and
out
lcall
inc
add
push
out
xor
xor
cmpsb
mov
dec
push
xchg
les
cmp
and
xlat
pop
push
sub
dec
adc
int3
cld
shlb
js
ja
push
aam
xchg
sbb
iret
add
rcrb
xchg
in
stos
sbb
lock
pop
mov
cs
repnz
or
xchg
daa
mov
push
cmp
ja
cltd
in
jge
or
das
cmp
and
shlb
mov
arpl
mov
jne
ljmp
dec
loopne
xor
pop
nop
pop
sbb
xor
jbe
inc
xchg
xlat
clc
repnz
pop
sahf
iret
and
and
xor
out
jno
pushf
stos
dec
or
mov
mov
jnp
cs
mov
adcb
das
aas
dec
in
mulb
cld
xlat
sbb
mov
fidivrl
pop
ljmp
cmp
add
mov
mov
sub
jmp
rcrb
test
rclb
xor
pop
cs
repz
jne
pop
cmp
mov
ret
bnd
jle
mov
dec
into
js
adc
cmp
inc
pop
mov
call
stos
stos
flds
rorl
mov
xchg
dec
sbb
psadbw
pusha
cli
jb
aad
add
fidivs
cmp
mov
mov
dec
mov
insb
dec
out
xor
inc
mov
jo
jg
mov
fs
imul
adc
mov
inc
shrl
add
xchg
ficoml
pop
repnz
stos
call
aam
std
imul
add
jns
push
adc
xchg
mov
cltd
sub
int
insl
cmp
push
jnp
jae
pop
inc
loopne
mov
mov
popa
xorb
adc
push
nop
pminsw
je
sbb
data16
adc
pop
push
leave
addb
test
mov
mov
ret
popa
in
ds
xor
mov
mov
xor
cltd
cwtl
sbb
xor
sub
push
xchg
mov
fstp
pop
lods
inc
xor
std
imul
dec
negb
mov
bound
jl
test
mov
xor
movsb
mov
pop
sub
push
cmp
repnz
addb
and
push
xchg
cltd
inc
cmpsb
imul
sbb
das
mov
mov
rorb
dec
insb
mov
sbb
jmp
in
jbe
push
ljmp
pop
int
adc
inc
popa
pusha
pop
xor
or
xor
pusha
and
mov
ret
push
xor
inc
pop
cmp
iret
repnz
sahf
in
sbb
mov
push
idiv
ds
sub
push
cld
lcall
sti
dec
mov
mov
and
sarl
shlb
in
aaa
add
mov
lock
aas
aam
xchg
out
out
or
xchg
ds
add
dec
aad
jne
inc
aam
aam
repz
popf
icebp
addb
lret
inc
or
xchg
popa
in
sub
loopne
mov
sbb
ljmp
mov
cmpsl
hlt
movsl
fisttpl
int3
push
out
lods
cmp
xchg
scas
aam
clc
jl
nop
aam
or
and
enter
repnz
fistpll
mov
jno
mov
cli
cmp
pop
add
add
ret
jne
ss
mov
jmp
out
fdivr
dec
fnstcw
sub
jns
push
mov
shl
addr16
sbb
pop
pop
adc
push
xchg
loopne
mull
arpl
add
das
dec
lods
sub
ret
inc
cwtl
lret
dec
ficomps
push
jb
or
jl
or
add
dec
adc
rcll
mov
out
cltd
mov
ja
mov
pop
push
testb
adc
bound
lock
dec
inc
cs
add
pop
adc
xchg
ss
jo
clc
clc
sbb
dec
mov
jmp
sub
mov
xor
es
nop
sbb
lock
loop
cli
mov
push
push
mov
sub
inc
iretw
xor
cli
xor
lods
inc
in
dec
sub
aas
and
mov
cmp
cmp
xor
push
pop
mov
xchg
das
dec
aad
fidivl
daa
dec
rclb
xchg
adc
cmpsb
es
add
jp
jo
cmp
aad
test
pop
pop
mov
jmp
mov
jmp
mov
nop
and
xchg
adc
outsl
push
cli
jl
fsts
insl
insb
adc
add
mov
lock
sub
mov
aam
mov
pop
push
outsl
sbb
popf
jbe
pop
mov
jns
xlat
ljmp
leave
mov
dec
ret
fpatan
lret
inc
dec
jg
bound
hlt
mov
addr16
mov
cltd
push
inc
adc
adc
cmp
adc
push
cmp
sbb
mov
sbb
jae
ja
loope
pusha
cmpsl
lahf
jle
or
mov
jae
xchg
scas
dec
stc
sti
mov
or
dec
mov
aam
jle
aaa
subl
dec
push
arpl
lods
nop
push
sub
ss
cmp
decb
ret
inc
inc
cmp
xchg
lods
xchg
ja
and
pop
sbb
mov
insb
dec
daa
fldl
repz
aas
dec
pop
mov
jns
scas
xor
lods
outsb
push
xchg
inc
outsl
js
xor
ret
gs
mov
cmp
shll
cmp
and
ds
lods
insl
xchg
cmp
stc
sub
imul
cmp
inc
mov
xchg
fdiv
push
outsb
cmp
lods
addb
pop
arpl
cld
lods
repnz
dec
sub
lock
dec
sub
stos
mov
in
xchg
push
dec
sbb
pop
loop
sbb
mov
jl
ret
inc
cmp
in
jge
mov
push
sub
call
jmp
and
scas
incl
and
pusha
pop
add
aad
adc
sbb
mov
mov
adc
pop
ret
sub
bound
sahf
xchg
adc
ljmp
add
das
cltd
stos
lods
ljmp
cltd
mov
jne
and
ljmp
cmp
or
sbb
mov
push
dec
arpl
stos
xor
jb
mov
pop
lcall
stos
mov
hlt
add
mov
popf
push
sub
xchg
fdivl
pop
xchg
insl
jae
cld
sarb
cli
push
out
and
lahf
push
js
icebp
ljmp
gs
mov
pop
dec
sarb
icebp
xchg
test
fcoms
loope
pusha
pop
mov
jae
add
or
in
hlt
repnz
inc
cld
out
not
std
iret
subb
movsl
gs
inc
xlat
pop
lcall
stos
ja
mov
and
xchg
mov
xchg
xchg
inc
or
push
shl
mov
jns
les
dec
xor
cmp
and
fs
jne
inc
lock
mov
stos
fisttpll
lcall
and
fildll
sbbb
pop
inc
flds
ja
jae
and
or
push
cltd
or
in
ret
jno
cltd
imul
adc
sbb
cmp
xor
mov
and
push
mov
and
cmp
aas
inc
pop
inc
int3
clc
pusha
ffree
stc
loopne
cmp
es
and
sbb
int
nop
xor
mov
outsb
and
icebp
cwtl
or
mov
repnz
lods
and
jge
cmpl
jl
or
inc
xor
dec
scas
hlt
sarl
aas
daa
lods
push
sub
loop
inc
repz
push
lahf
test
mov
xchg
stc
mov
andl
push
cmpsb
nop
es
js
testb
dec
rol
mov
jg
pop
fs
pop
jl
jnp
pop
xchg
inc
cli
lods
dec
loope
aaa
mov
xor
jmp
pop
jns
ds
call
test
int3
xor
es
inc
ds
je
or
popa
mov
mov
jg
div
call
jbe
jno
mov
ficomps
push
xor
dec
inc
push
lods
push
sub
insb
jge
mov
add
clc
test
adc
test
je
cs
xchg
add
push
cmp
pop
add
repnz
testb
dec
cmp
lock
rol
inc
inc
repz
jb
test
pop
push
pop
pop
push
xlat
fwait
sbb
or
sbb
mov
rcl
cmp
jae
push
mov
std
push
sbb
cmp
je
daa
int
rolb
mov
rorb
push
cld
mov
pop
or
ljmp
insl
pop
and
ljmp
and
mov
movsl
movsb
out
jo
jo
bound
jmp
push
in
dec
pop
pop
jo
dec
pop
mov
pop
mov
push
push
inc
cmp
xchg
adc
dec
subb
addr16
leave
lds
cld
mov
adc
pop
add
loop
shlb
dec
aam
pop
aaa
int
jp
mov
push
rcr
lahf
jle
add
dec
sbb
jo
push
xor
cmp
cld
rcrl
dec
inc
push
fldl
pop
mov
stc
xor
das
fdiv
and
adc
xchg
pusha
mov
jne
ret
sub
adc
inc
mov
sarb
and
lods
mov
ret
fwait
or
roll
add
sub
sbb
mov
je
call
pop
push
jnp
out
repz
sub
cmp
push
sbb
and
clc
lret
adc
and
ja
mov
xor
or
sbb
or
mov
inc
cmpsl
cmp
xor
pop
dec
xor
fstpt
add
jbe
test
jae
hlt
cmpsb
hlt
or
test
ds
xchg
push
nop
mov
mov
andb
and
mov
dec
xchg
addl
cmp
push
push
loope
jae
pop
aam
mov
add
cmp
xchg
inc
push
mov
mov
jle
xchg
push
jno
and
stos
push
cmc
mov
addr16
test
cmc
adc
sbbl
test
ret
xchg
mov
adc
lods
ja
cmp
lcall
nop
cmp
mov
mov
fs
fwait
adc
sar
addr16
inc
mov
fbstp
or
test
fidivl
cli
xor
movl
or
push
xchg
sbb
inc
test
shl
xchg
add
push
jl
hlt
aas
scas
sti
roll
and
divb
pop
dec
insl
pop
fwait
add
mov
bound
enter
jle
out
sub
rol
push
ljmp
stos
mov
add
inc
adc
ljmp
add
mov
ret
fdivs
pusha
sub
pop
inc
das
adc
aad
pop
aam
insb
cld
jle
mov
xchg
into
fisubrl
loopne
cmp
jecxz
push
xchg
xchg
pusha
mov
jecxz
mov
mov
pop
cld
inc
pop
ja
clc
and
movsb
xchg
arpl
cmp
xchg
fisubs
and
pop
sti
shrl
ljmp
cwtl
xchg
pop
fs
xchg
flds
lock
lock
jno
push
insb
cmp
add
loope
push
inc
bound
inc
jge
fisttpll
dec
imul
cmp
pop
mov
adc
mov
fnstsw
mov
outsb
pop
hlt
loopne
jns
aam
add
jecxz
xor
inc
in
lock
push
cwtl
call
stos
inc
addr16
dec
insl
mov
clc
pop
mov
mov
in
xchg
mov
cmp
sbb
pminub
lods
in
and
mov
test
dec
movsb
fstl
xchg
push
cmp
scas
sbb
fidivrl
pop
inc
mov
add
rcll
xor
enter
xchg
mov
das
cmp
mov
pop
movsb
push
rcr
push
loope
cmp
ljmp
es
jge
mov
push
fadd
mov
or
mov
std
sbb
fdivrl
loop
jp
int3
mov
mov
ljmp
ja
mov
push
jb
or
fistl
aam
inc
push
push
les
add
inc
in
jge
pushf
out
adc
scas
stos
movsl
fildl
and
cmc
call
mov
xor
jne
xchg
xchg
movb
into
popf
mov
ja
xor
int3
sbb
xchg
daa
xor
sub
adc
xchg
fdivl
or
adc
or
or
dec
shlb
pop
addr16
divl
pop
nop
dec
push
lock
or
sub
lahf
mov
sub
xchg
adc
jle
loope
rcrb
iret
mov
sbb
mov
lods
xor
lods
fnsave
fbld
mov
mov
mov
cld
repnz
mov
ss
cli
mov
andl
push
mov
dec
add
cmp
fmuls
sub
xchg
fnstenv
fisttpl
or
nop
daa
test
jo
ror
jg
clc
sarl
mov
lods
jo
in
pop
aaa
pop
daa
sbb
sbb
xchg
push
pushf
adc
iret
js
icebp
cwtl
arpl
insl
aad
mov
ss
rcr
dec
sbb
xchg
out
aas
jb
pop
xchg
mov
jg
es
movsl
insl
pop
dec
push
add
sbb
loope
test
sbb
insl
repnz
mov
lock
mov
sbb
aas
sarb
jmp
imul
push
test
jmp
mov
or
sub
sar
pop
sbb
dec
sbb
int
jecxz
lods
add
and
push
insl
jl
mov
adc
push
jbe
push
int3
call
or
push
out
out
lods
xchg
rcll
push
pop
mov
insb
ja
cli
mov
nop
fstps
testl
incb
push
mulb
mov
add
andl
shll
pop
cs
or
sahf
mov
add
dec
dec
xchg
jp
mov
mov
jmp
out
nop
jle
in
jmp
or
xchg
pop
test
lds
dec
mov
mov
sub
mov
or
shl
dec
mov
xchg
imul
jne
sub
movsb
or
xchg
and
mov
rorl
aas
sub
cltd
hlt
sub
cli
movsb
subl
pushfw
sbbb
gs
int3
pop
jp
push
jae
lcall
dec
movsl
out
or
je
pop
mov
cmp
in
shll
lods
adc
cmp
leave
movsb
xchg
inc
pop
sbbl
add
cmc
pop
aam
cmc
aas
lods
repnz
orl
out
dec
add
add
dec
and
xlat
movsb
adc
mov
fistps
dec
and
adc
insb
sahf
or
xchg
jo
mov
cwtl
jbe
sti
aam
pop
rcrb
lods
adc
test
ret
pop
mov
bound
ss
incl
iret
dec
pop
fimull
mov
jo
push
stc
mov
icebp
sbb
scas
in
lods
cli
xchg
cwtl
loope
leave
lds
mov
test
ljmp
mov
jmp
out
inc
mov
js
rolb
xchg
fsts
mov
arpl
outsb
ljmp
or
cmp
lret
punpckhbw
jle
pushf
popw
jg
inc
add
and
push
xor
ror
mov
mov
das
movsl
ret
mov
xchg
cld
mulb
lock
xchg
fwait
jnp
xchg
cmp
sub
push
loopne
shlb
lea
mov
sub
mov
scas
sahf
in
pop
push
sti
inc
icebp
enter
mov
add
iret
mov
xor
or
cmc
inc
dec
enter
adc
cmp
and
add
mov
xchg
pusha
or
test
sub
imul
jae
aas
loop
rcrl
insb
dec
mov
add
xchg
stc
fisttpl
mov
dec
mov
test
sub
cmp
ret
sbb
jmp
stos
mov
xchg
dec
sbb
fs
cmpsl
aam
dec
xchg
aas
mov
cwtl
push
lods
xorb
sbb
roll
ljmp
pop
lock
jo
shll
test
push
iret
das
xchg
push
aaa
lcall
and
mov
xchg
fs
stos
push
sbb
iret
stos
fcmovnbe
imul
jl
add
fs
scas
pop
flds
cmp
xchg
fucom
shrl
push
cli
inc
aas
movsb
mov
cmp
lahf
stos
std
sbb
pmaddwd
push
fisttps
stc
scas
stos
outsl
sahf
popf
shll
pop
push
add
lock
out
xchg
push
push
test
out
sbb
test
sbb
cmc
sub
scas
ja
add
jno
mov
loope
aas
fidivs
jle
cmpsl
inc
jns
mov
daa
jno
fcom
cmp
cmp
enter
mov
pop
pop
repz
sbb
jns
mull
cmp
xlat
test
mov
mov
and
jnp
fildl
rcl
adc
jge
jno
push
pop
mov
int3
ficomps
jg
call
sbb
cmp
mov
lcall
jle
pop
bswap
cmp
iret
xchg
fdiv
xchg
adcb
cmp
xchg
mov
add
in
fst
sbbl
es
xor
mov
call
cmc
add
imul
inc
or
lret
addr16
test
inc
in
fnsave
dec
test
jle
les
jmp
or
mov
rcrl
xor
sub
movsb
fistps
inc
inc
or
scas
rorb
scas
aad
pop
stc
daa
mov
xchg
push
ficoml
jmp
cltd
arpl
mov
sbb
push
adc
add
and
sahf
dec
mov
mov
jb
inc
xor
xor
cmc
test
popf
loopne
scas
xchg
leave
sbb
lret
jmp
movsb
pushf
mov
outsb
pop
mov
jb
neg
icebp
pushf
insb
loop
gs
in
push
mov
adc
ds
sub
inc
cmpsb
das
pop
push
fisubrl
shrb
fisttpl
pop
outsb
rol
push
adc
and
mov
push
and
xchg
push
cmp
or
xor
sub
jg
clc
lea
add
dec
int
and
cmc
insl
call
rorb
jns
lock
push
sbb
cmp
xchg
sub
mov
shrb
fmuls
push
add
or
je
std
mov
popf
dec
jp
imul
loop
push
icebp
xchg
or
outsl
lret
jge
int
inc
rorl
pusha
push
cmpsb
lahf
dec
fadds
inc
int
clc
sbb
lds
push
add
fstp
repnz
push
movsl
addr16
fcomp
ja
adc
std
mov
inc
gs
rclb
mov
orl
repz
ds
inc
mov
stos
mov
outsl
jbe
std
adc
mov
mov
xorl
pop
mov
jecxz
cltd
pop
out
pusha
fsts
insb
lods
in
push
jo
sub
data16
pop
aas
into
push
or
xor
add
cwtl
das
nop
inc
adc
and
add
sbb
ficompl
scas
aad
sahf
dec
jge
daa
xor
push
pop
or
in
pop
push
or
out
jmp
outsb
cmp
pusha
sti
inc
rol
or
and
add
outsb
push
outsl
fistps
cs
jbe
fcomps
dec
xchg
in
adc
dec
bound
arpl
shll
and
scas
orl
mov
push
jae
fmulp
scas
insb
mov
mov
cmp
xorl
jle
hlt
adc
pop
test
and
jle
push
inc
notb
loop
push
sub
ret
inc
neg
xchg
ss
lods
out
or
jg
fisttps
hlt
aad
mov
lods
out
dec
test
flds
push
sbb
jle
jnp
daa
inc
dec
les
cmp
cmc
fdivrl
push
inc
in
cmc
jl
mov
push
xor
cmp
jge
popa
fsubl
sub
sub
push
adc
inc
pop
adc
repnz
in
rclb
xchg
call
mov
and
shl
loop
xchg
xlat
lock
sub
mov
dec
jl
mov
sub
lods
and
rorb
inc
mov
inc
or
mov
cld
mov
nop
aas
mov
cmp
adc
mov
mov
mov
ljmp
inc
xor
scas
cmpsl
sbb
xchg
xor
pop
dec
call
adc
xchg
leave
lds
jne
out
movsl
cmovb
mov
mov
xor
cmp
out
test
mov
fildl
aad
stos
mov
mov
push
inc
jnp
pop
cmp
push
dec
push
cmpsb
jbe
dec
das
repz
mov
cmc
and
outsl
addr16
mov
cmp
pop
test
mov
push
repnz
or
stos
inc
enter
mov
in
mov
xor
xlat
mov
inc
or
stc
jb
add
and
cmpsl
xchg
cmp
adc
popf
and
push
pop
or
sub
sub
loopne
into
jecxz
push
dec
loope
addr16
adc
cmc
cwtl
test
cs
push
mov
jns
fsubs
fbstp
out
out
jle
push
cmp
cmp
push
xchg
inc
pusha
cmp
and
or
movsl
insb
sub
jg
rorl
pop
fstpt
dec
add
gs
and
pop
pop
cltd
jle
jno
jge
push
call
mov
adc
fcomi
mov
mov
mov
movsl
ja
rolb
xchg
ret
test
hlt
shlw
sub
xor
or
pop
pushf
push
inc
pop
das
aad
and
loopne
xor
push
sbb
inc
jnp
stos
mov
xlat
push
mulb
pop
xchg
dec
and
lds
fxch
push
push
xor
idivl
daa
jg
lahf
cltd
scas
outsl
mov
inc
push
and
pop
jge
adc
outsb
shll
in
or
xchg
iret
out
shll
or
xorb
inc
int3
out
repnz
adcb
popf
mov
cmp
popa
mov
inc
jnp
xlat
or
lahf
jae
add
push
jne
shrl
in
aas
arpl
sbbb
hlt
jae
cld
popa
mov
push
enter
jne
scas
mov
es
iret
ret
fisttps
daa
xor
or
bound
pushf
jg
mov
mov
mov
mov
adc
and
mov
push
adc
and
push
scas
pop
or
push
jmp
imul
shrb
xor
test
mov
clc
fimull
inc
xchg
xchg
repz
or
xor
test
inc
push
cltd
or
fisubrl
sub
divb
xor
lods
push
push
pop
loop
gs
jno
stc
push
dec
int
sub
sub
loope
in
sbb
pop
jbe
jb
enter
ja
aad
and
subl
mov
dec
lret
xor
repz
push
fisttps
test
in
popf
jmp
or
repnz
mov
mov
dec
sbb
nop
aam
punpckldq
mov
dec
xor
pop
test
and
dec
iret
bound
out
adc
mov
mov
push
cs
testl
bound
and
ffreep
and
xor
xchg
mov
div
mov
push
pop
push
mov
mov
fldl
inc
mull
je
pusha
mov
insb
mov
fwait
dec
lea
inc
ljmp
aad
jl
scas
test
hlt
hlt
dec
sarb
fisubrl
gs
sbb
xchg
and
aam
mov
cmp
lret
bound
push
mov
inc
bt
movsb
push
and
adcl
sbb
sbb
outsb
add
gs
push
pop
or
jecxz
fadds
in
popa
sbb
cwtl
mov
lds
xor
sbb
das
xchg
sbb
add
sub
movsb
cli
dec
rclb
xchg
orl
xlat
incb
pushf
in
adc
shll
movsl
and
xor
cmpsl
push
stc
and
clc
mov
outsb
mov
xchg
outsl
or
pop
and
push
inc
or
mov
popa
dec
cltd
xor
jg
out
test
rclb
mov
lds
and
bound
in
out
dec
sbb
mov
sub
outsb
js
testb
out
loopne
je
adc
mov
dec
add
ljmp
lds
push
mov
add
fsubrl
mov
inc
mov
fidivl
leave
out
lret
out
mulb
mov
inc
jmp
repz
sahf
sahf
jge
sbb
stos
sub
out
cmpsl
push
movsl
and
mov
mov
jne
leave
xchg
std
out
mov
jp
ja
rcr
adcl
pop
cld
imul
outsb
notb
mov
inc
or
mov
fcoms
inc
jge
int
xor
aas
sbb
inc
mov
into
dec
pop
shll
pushf
fs
nop
jmp
inc
add
ss
bound
sub
outsl
lock
sbb
push
shlb
aaa
leave
cli
push
xchg
repz
ret
xchg
sbb
or
push
xor
cmpsb
outsb
jmp
enter
ficompl
pop
lret
fstl
jmp
mov
outsb
rorl
cmc
fnstenv
scas
es
or
mov
cld
mov
add
or
dec
push
movsl
shlb
fdiv
adc
sbb
dec
lds
xlat
loopne
pusha
cli
ss
cmp
ds
sub
mov
ja
lcall
pop
in
fucompp
and
adc
pop
dec
fstpl
int
daa
and
fstl
rorb
mov
or
call
loopne
and
out
pusha
sahf
dec
mov
push
cmp
mov
push
call
xor
ret
pop
scas
inc
or
mov
and
jnp
mov
aaa
mov
popa
cmp
in
mov
daa
cmp
jne
dec
push
jae
mov
xchg
push
rcrb
push
ljmp
mov
divb
js
arpl
and
cmp
mov
add
mov
shlb
adc
mov
mov
and
pop
and
clc
push
jp
loope
lods
stos
outsb
test
pop
scas
inc
dec
test
data16
js
cmc
sbb
es
dec
pop
cmp
insb
les
cmp
leave
fistpl
and
addl
outsl
jb
fimuls
jecxz
scas
sbb
pop
mov
fwait
mov
out
pop
clc
sbb
bound
xor
adc
mov
sub
sbb
or
mov
cmp
push
sub
int
out
xchg
cmp
subb
inc
scas
xchg
mov
pop
enter
xchg
test
cmp
jp
pushf
inc
loope
lods
push
push
movsb
mov
mov
scas
cmp
jnp
push
jmp
pop
mov
jb
repnz
clc
cmpsb
mov
xchg
movsl
lcall
cld
ja
loop
test
xor
cs
stos
std
push
cs
sbb
push
mov
arpl
loope
mov
lret
loope
fsubs
xchg
jno
test
add
add
js
pusha
mov
pop
mov
pop
and
test
xchg
dec
hlt
loopne
and
subb
lahf
pop
add
lock
loop
mov
xchg
inc
hlt
cmpsb
hlt
enter
leave
inc
xor
cmpsl
inc
mov
push
repz
jge
push
scas
popf
lret
test
pop
or
mov
cmpsl
jge
subl
push
sbb
or
lods
push
cli
sub
xchg
sbb
rclb
iret
shll
je
mov
xchg
xchg
xchg
rclb
popa
sbb
xchg
xchg
enter
js
and
lds
pop
cwtl
int
xchg
outsl
xchg
mov
push
lods
lock
mov
add
xor
sbb
and
int3
rcr
xor
xchg
fldl
ret
add
xchg
jno
in
test
jle
or
sarb
daa
cs
push
mov
into
je
mov
xchg
jp
and
or
add
pop
sbb
xor
js
dec
or
test
popa
adc
pop
jns
or
cmp
adc
pop
jo
ss
jge
mov
jmp
stos
jmp
shll
jmp
aad
movsb
mov
lock
rorb
gs
adc
add
sbb
inc
adc
fwait
hlt
lods
mov
inc
out
pop
mov
inc
les
mov
ficoml
inc
insl
decb
jge
ss
les
push
pop
pop
loope
fists
jns
inc
or
adc
out
xlat
pop
lret
popf
add
stos
movsb
add
je
push
jno
in
in
es
movsb
mov
and
rcrb
popf
pop
and
pushf
inc
hlt
mov
int
les
stc
xor
push
es
push
xor
cmp
mov
negl
adc
pushf
inc
mov
push
stos
ja
inc
rorb
lret
aad
xchg
cmpb
int
decb
jle
push
sbb
push
sti
jo
xor
push
add
outsb
arpl
push
jno
stos
mov
aad
inc
in
inc
inc
repz
pop
icebp
adc
cmp
pop
sbb
test
cmp
xchg
pop
mov
dec
add
jo
jbe
xchg
rcrl
fldt
mov
lret
and
inc
push
push
sub
sti
add
enter
mov
icebp
testb
cltd
xchg
inc
shlb
xor
por
jnp
in
popf
aaa
mov
fldcw
fsubrs
push
xchg
xchg
xchg
mov
adc
xor
mov
jne
or
insl
mov
inc
push
dec
xchg
stc
push
rol
test
push
outsl
push
les
lret
out
stc
mov
pop
push
and
sub
fdivr
popf
ror
and
and
push
icebp
pop
bound
ss
incl
add
jo
mov
imul
cmp
adcb
add
iret
int3
popa
and
mov
enter
push
jmp
mov
dec
sub
cmp
out
stc
scas
cli
jge
push
movsl
dec
out
push
rorb
fwait
pop
sbb
and
inc
aaa
movb
cmp
mov
xchg
pop
out
loope
cs
int3
bound
add
inc
add
mov
dec
xchg
jb
sbb
cmp
fwait
sahf
mov
int3
rcrl
lcall
xchg
mov
xor
sbb
mov
ss
push
in
jmp
das
jns
andl
outsb
xor
daa
out
out
add
inc
daa
inc
sub
cmp
xor
xchg
shrb
movsb
jle
faddl
scas
mov
filds
lods
cmpb
mov
in
cmp
jne
stc
push
inc
xor
dec
xlat
xchg
add
adc
loope
pushf
push
inc
xor
mov
push
xor
outsl
add
sbb
popa
out
iret
jae
test
loopne
sti
mov
lods
cmp
call
inc
push
daa
and
lahf
mov
pop
mov
or
sbb
dec
shl
mov
les
jmp
aam
icebp
inc
xor
repnz
stos
add
pop
lcall
cmpsb
add
stos
jmp
stos
mov
movsb
in
push
int
jp
enter
ja
stc
in
cmp
mov
xchg
scas
ficompl
adc
push
cwtl
arpl
in
push
mov
pusha
cli
gs
xchg
mov
sbb
lods
aam
roll
jo
sub
pop
or
or
arpl
push
push
and
push
cltd
mov
mov
xchg
sub
push
enter
adc
enter
cmpsl
imul
lahf
push
and
cmp
mov
test
push
in
scas
data16
stc
pusha
xchg
addb
lods
inc
addr16
test
mov
movsl
adc
notl
adc
push
add
cmp
mov
test
and
pop
adc
xchg
arpl
popa
ret
insb
xchg
pop
xor
outsl
popf
outsl
test
mov
xchg
lret
jae
mov
lcall
cmp
push
mov
icebp
add
popa
repnz
arpl
xchg
gs
stc
aad
rorl
add
jp
mov
add
push
into
and
xor
mov
ss
shlb
in
mov
lods
sub
data16
mov
fwait
adc
xchg
and
icebp
leave
mov
fstpt
adc
xor
push
xchg
pop
andl
mov
lahf
lea
mov
jns
cmc
arpl
scas
imul
dec
mov
mov
inc
jb
aam
test
pop
mov
add
in
gs
push
add
push
in
sbb
push
aam
lods
cmpsl
add
cmp
hlt
out
or
lret
bound
pop
lods
arpl
into
inc
jle
jo
dec
cmp
leave
pusha
sub
xchg
mov
jnp
sbb
icebp
and
roll
cmpsb
sub
lods
outsl
aaa
xchg
fisubrs
or
aad
dec
jb,pt
or
cmpsl
insl
lret
inc
mov
call
fs
dec
sbb
lods
ss
out
out
fistpl
outsl
jo
sti
gs
cmp
shrl
lock
lahf
clc
inc
fidivrl
iret
fstpl
jecxz
jecxz
and
outsb
outsl
xor
into
sub
xor
jge
adc
add
int
nop
or
in
subb
jg
push
mov
xchg
mov
push
mov
jae
jb
or
loope
mov
addr16
add
mov
jne
notb
add
ror
es
xlat
gs
sub
test
push
lcall
pop
mov
add
cli
enter
shl
aad
stos
lock
mov
lahf
xchg
cmp
xlat
xchg
call
bswap
loopne
fistpll
and
sahf
hlt
jmp
inc
fwait
je
sarl
push
dec
cwtl
inc
testl
inc
or
xchg
jmp
int
test
jb
lahf
jp
aad
adc
xchg
mov
pop
mov
mov
jns
push
ljmp
lret
and
pop
nop
mov
jne
dec
call
dec
and
mov
ret
jge
gs
into
idiv
or
or
push
sbb
mov
aam
cmpsl
addr16
movsb
mov
xor
dec
les
push
jb
or
enter
inc
scas
test
pop
arpl
bound
fistpll
xor
lds
jnp
sub
mov
pushf
xchg
ljmp
pop
mov
imul
lods
cmp
test
add
inc
push
fstpt
and
fisubrs
inc
sbb
mov
push
bound
rorb
xor
push
add
in
mov
cmp
jbe
scas
push
int
sub
xor
cmp
fcomi
std
mov
bound
inc
cli
es
lahf
ficompl
enter
pop
mov
data16
scas
mov
sub
and
mov
fcoml
lods
cmp
popa
ljmp
mov
les
insl
jp
jns
pop
shrl
or
fcompl
and
mov
lret
sbb
fadds
loop
xchg
out
shl
inc
fidivrl
mull
orb
mov
xor
add
cmpsb
dec
lcall
or
inc
cmp
vpminsw
adc
and
jge
mov
adc
xchg
xor
js
in
aaa
pusha
scas
xorb
sub
pop
in
gs
mov
sub
sub
gs
out
mov
cltd
fwait
inc
ljmp
pop
fnstenv
xor
in
push
scas
repz
fsubr
fdivrl
cmp
cmpb
outsl
or
or
loope
addr16
pop
add
dec
repz
jae
ljmp
dec
stos
movsl
sub
addr16
and
mov
pop
dec
mov
mov
push
sti
ja
cmpsb
sbb
popa
mov
pop
or
add
shr
outsb
loop
xchg
test
test
xor
cli
lods
inc
sbb
xor
icebp
adc
inc
jns,pn
loopne
test
mov
adc
out
in
jl
mov
fwait
andb
dec
and
cmp
xor
and
iret
adc
and
pop
sbbl
add
mov
fwait
inc
xlat
and
das
fadds
cmp
fistps
test
sub
sbb
and
xor
mov
ret
jl
les
and
mov
push
jae
add
mov
adc
xor
aad
inc
cmpsb
int3
mov
lret
xchg
push
test
nop
adc
pop
pop
dec
xchg
or
cmp
mov
test
negl
ret
out
mov
adc
add
adc
jg
iret
pusha
dec
stos
call
fsub
aas
jp
out
mov
mov
test
adc
sahf
pop
pusha
jo
les
dec
push
arpl
scas
cli
jp
test
movlps
js
mov
jne
xchg
add
push
icebp
lret
mov
into
mov
jae
js
je
jne
xchg
mov
lcall
and
pop
ret
mov
sbb
addr16
std
push
add
xor
xor
mov
sbb
out
ss
inc
push
fsts
das
jge
test
pop
std
fistl
dec
push
aad
xchg
mov
fcomps
lods
dec
jno
pop
lret
and
adc
sub
fldt
mov
stos
loopne
or
cmp
lret
pop
out
cmp
xchg
sub
pop
fsts
sbb
stc
mov
push
pop
mov
flds
mov
cmp
dec
inc
aad
outsl
ja
dec
pop
sti
and
in
out
scas
fistps
cmpsb
loop
popf
cld
adc
and
fwait
or
popf
repz
pushf
xor
outsb
pop
imul
adc
inc
clc
push
ds
outsl
fucomip
mov
jno
mov
push
addr16
int3
and
push
mov
xchg
sub
cmp
xchg
jmp
cmp
dec
loop
cwtl
mov
pop
fdiv
lret
ja
mov
lods
pop
stos
test
jge
push
add
mov
dec
adcb
mov
jge
sub
incl
add
psllq
pop
rclb
lods
sahf
mov
jge
pop
mov
loope
xor
adc
jle
int
js
push
pop
aam
popa
sarb
test
leave
mov
adc
dec
jae
or
mov
dec
inc
fsubrl
mov
lahf
into
xchg
aad
into
jae
repz
push
xor
out
jge
stos
xor
lret
xchg
xchg
add
inc
mov
stos
sub
fstpt
daa
mov
daa
pop
sbb
aam
gs
cmp
jle
cmpsl
cwtl
inc
neg
loop
push
mov
cwtl
ss
pusha
out
jl
mov
test
dec
dec
mov
ret
fdivr
outsl
out
sub
sub
mov
push
or
or
test
fsubrs
ret
push
xor
and
inc
imul
daa
xchg
test
jmp
jbe
xchg
inc
aaa
xchg
inc
out
cmp
or
pop
mov
test
gs
pop
mov
in
cld
jecxz
out
rol
sub
cmpsl
loope
inc
jecxz
test
cmpsb
xchg
repnz
lods
sub
lods
inc
xchg
add
mov
dec
rolb
sahf
add
sahf
add
adc
test
stos
subl
sarb
or
adcb
scas
push
mov
lods
imul
sub
and
iret
mov
addr16
das
push
pop
inc
add
and
add
pusha
test
pop
aas
mov
lcall
sbb
shl
mov
idivb
cmpsl
adc
adc
icebp
jp
jne
mov
je
cmp
dec
push
or
mov
roll
jmp
xor
jno
outsl
add
dec
push
sahf
dec
push
pop
fwait
dec
jbe
or
and
cltd
add
pop
adc
out
xor
push
sbb
clc
jne
inc
and
dec
mov
nop
movsb
xchg
pop
lea
lods
mov
pop
cmp
jne
addr16
test
test
sub
out
std
test
pop
jge
mov
xchg
nop
aas
popf
test
pop
icebp
lahf
call
ds
push
push
push
loopne
or
push
cmp
imul
movsl
xor
popl
je
insb
mov
ss
mov
imul
lret
movhps
xchg
push
jp
xor
push
mov
mov
negb
cmp
mov
or
add
sub
andb
fs
mov
mov
aam
cmp
in
jmp
dec
lcall
dec
mulb
pop
daa
scas
cmp
xor
out
outsb
pop
out
int
push
stos
pop
fidivrs
inc
mov
push
fst
fstl
insb
subl
call
cmp
cs
dec
lock
je
sub
nop
mov
test
xor
inc
les
stc
jp
popf
outsb
adc
cmpsb
bnd
sub
or
xchg
jno
loopne
mov
aad
inc
es
xchg
aad
mov
das
pop
xor
popf
mov
jb
js
stc
sahf
iret
mov
adc
loop
sub
rorb
ja
mov
jo
in
test
or
daa
push
lods
inc
and
push
imul
adc
jmp
adcl
mov
or
mov
scas
std
aas
in
sbbl
into
inc
push
xchg
inc
ret
inc
test
mov
dec
imulb
mov
xchg
lahf
inc
adc
int
dec
cmpb
out
sti
hlt
divl
jl
or
ljmp
adc
out
sub
mov
mov
dec
mov
mov
pop
mov
push
xchg
pop
sbb
sub
add
inc
mov
int
pushf
inc
jmp
addr16
jbe
jns
push
jg
inc
shl
pop
mov
in
cs
mov
mov
or
cmp
sub
jl
negl
imul
aas
xchg
dec
orl
cli
dec
lret
ja
jp
stos
addl
ret
arpl
sub
fisubrl
testb
lret
movl
mov
inc
mov
iret
bswap
and
adc
inc
inc
jb
pop
cs
into
or
inc
jmp
cmp
cmpsl
or
mov
push
iret
xchg
sarl
cmp
vmovlps
pushf
pop
cwtl
push
stc
insl
jg
test
out
xorb
adc
loope
leave
lock
jecxz
rolb
cmp
and
inc
mov
sahf
mov
ss
inc
movsl
adc
dec
and
sbb
push
sbb
inc
rorb
push
aaa
xchg
out
or
mov
into
sub
dec
pop
lret
aam
mov
addl
jle
call
clc
stos
xor
rcr
xlat
mov
cmp
fucomip
xchg
add
jnp
or
lock
imul
fbstp
orb
fimuls
sbbb
inc
inc
into
and
data16
xor
add
jbe
sbb
dec
xchg
fcompl
lea
gs
incb
mov
out
adc
sti
divl
stos
fdivrs
pop
leave
cmpsb
rorl
cmp
aad
scas
lea
cld
or
repz
xchg
pop
add
sbb
adc
ja
movl
cwtl
or
stc
lea
test
enter
dec
addl
push
and
dec
outsl
mov
push
test
mov
cmpsb
loopne
lea
in
mov
dec
loope
add
mov
sahf
mov
leave
jbe
dec
jle
jbe
mov
movsl
mov
add
test
add
or
sub
das
popf
dec
or
fcoms
test
dec
jmp
xchg
popa
fs
jne
sbb
mov
scas
or
hlt
pushf
pop
dec
xor
push
lahf
push
mov
mov
lret
into
push
cmp
sahf
dec
subl
cmp
pop
push
lods
push
aaa
pop
ljmp
push
xor
test
ds
jns
add
arpl
mov
nop
dec
hlt
mov
dec
jg
adcl
aad
pusha
pop
sbb
push
xlat
mov
jmp
bound
mov
mov
cwtl
pop
fwait
or
xchg
xchg
jne
mov
loope
outsl
xchg
in
xor
std
test
gs
dec
sbb
out
mov
lret
je
xor
cltd
pop
hlt
inc
push
mov
clc
enter
sarb
xchg
inc
sahf
fdivrl
enter
aam
test
out
in
pop
loopne
movsl
xor
push
scas
ljmp
pop
dec
outsb
out
loop
loope
and
ret
out
cli
inc
cmpsb
loop
mov
pop
movsl
cli
lds
push
sti
or
sbb
jmp
mov
mov
testb
xor
mov
ss
aam
and
jo
iret
cmpsl
pusha
inc
xchg
cld
sbb
mov
jbe
and
inc
popa
mov
dec
cmp
in
dec
push
sbb
pop
push
push
jbe
out
sbb
mov
pop
int3
mov
fbstp
out
mov
add
pop
xor
fwait
mov
repz
jecxz
push
add
gs
cmp
andb
adc
sub
jg
push
sar
cmp
movb
jb
pusha
or
cmp
mov
fwait
lret
fcoms
jne
pop
lock
popf
cli
add
push
lahf
outsl
jo
sbb
mov
sbb
sub
xor
sarl
cmp
cmpsl
inc
aas
mov
mov
insl
sub
adc
lods
sbb
dec
out
and
mov
insl
in
jnp
bound
and
or
push
add
mov
cmc
mov
lods
lret
adc
js
jl
pop
insb
or
jge
push
ja
push
mov
inc
repz
icebp
int
clc
and
fadds
loop
std
add
movsl
jmp
rolb
cmpsl
xor
sbb
mov
push
add
dec
loope
ss
or
pop
mov
pop
inc
cmp
mov
mov
push
cld
mov
cmp
push
mov
or
mov
pushf
arpl
testb
mov
loope
int
and
je
mov
aad
loopne
pop
jnp
inc
fbstp
sti
ja
int3
jne
pop
jbe
sarb
and
lret
xlat
jl
adc
shlb
mov
xchg
out
andb
pop
mov
push
sbb
add
jmp
fcom
mov
data16
or
inc
fldcw
int3
ret
test
pop
sbb
les
sarb
dec
inc
je
dec
into
ret
cmp
cltd
leave
movsb
add
sub
adcl
inc
mov
mov
in
dec
int
fstl
jns
enter
pop
aas
xor
lock
mov
out
and
rcl
sarl
lret
cmp
xchg
ss
insb
aad
xchg
push
ljmp
mov
or
fsub
mov
int3
movsb
repnz
inc
pop
fsts
faddl
notl
jge
jg
mov
push
cmp
insb
dec
in
lods
mov
adc
sbb
mov
jge
pushf
ds
cld
stc
mov
jno
add
out
or
inc
cmp
pop
pop
and
adc
mov
mov
in
jge
inc
aas
pop
out
nop
adcl
rorl
sti
es
xlat
aad
pushf
push
adc
fstl
ss
and
jmp
push
inc
jne
xlat
dec
js
push
sbb
adc
ds
xchg
ret
pop
xchg
dec
outsb
hlt
cli
jnp
pusha
ds
cwtl
pop
idivl
mov
jns
jnp
push
inc
or
sub
or
scas
subb
push
inc
insl
mov
gs
xor
mov
sbb
and
push
icebp
jge
mov
hlt
inc
clc
xchg
push
or
dec
sbb
jmp
loope
xchg
shr
ror
rcl
popf
xchg
roll
mov
fisttps
adc
addr16
dec
pop
sub
lods
xor
and
dec
mov
add
rcll
faddl
mov
lahf
mov
lods
test
lock
rorl
aad
cmp
leave
push
repz
mov
mov
cmc
outsb
or
lock
aas
je
add
enter
pop
mov
add
cwtl
dec
cmpsb
loope
mov
lock
cltd
dec
push
lret
cltd
mov
cltd
mov
ja
repnz
out
dec
repz
cmpsl
bound
adc
sahf
into
mov
mov
push
mov
imul
mov
add
cmp
cwtl
cmp
or
lods
inc
ret
iret
sub
jno,pn
pop
test
loopne
add
cmp
inc
out
shl
or
xchg
push
sub
movsl
jle
jl
sbb
sub
pop
lcall
pop
add
xchg
loop
cwtl
lahf
js
dec
aad
cmp
fstps
fidivl
mov
inc
out
insl
ficoml
iret
cmp
imul
or
pushf
int
jl
push
cmp
popa
mov
les
mov
push
subb
mov
or
pusha
and
push
mov
jle
in
das
ds
xchg
jno
sbb
push
test
movsl
stos
scas
cmp
je
mov
adc
test
and
adc
dec
mov
inc
lock
mov
sub
xor
jg
fmul
and
push
test
insb
loop
xlat
xor
daa
jp
or
es
and
cmp
test
adc
sbb
aaa
insl
cmp
lcall
mov
adc
inc
idivl
test
sub
cmpl
faddl
xchg
repnz
adc
xchg
mov
addl
adc
adc
jle
cmpsb
pop
lahf
sub
push
cmp
push
sub
leave
out
and
push
aas
push
xchg
mov
je
mov
sub
or
and
mov
loopne
pop
or
pop
loop
shrb
cwtl
sarl
mov
loopne
sbb
cwtl
sub
lds
dec
xor
push
aam
mov
and
or
mov
jle
fisttpl
imul
mulb
inc
int3
fwait
testl
push
je
sub
cli
xchg
fistps
push
sub
cmp
sbb
int
and
mov
in
es
push
jp
xor
fs
and
in
inc
sub
mov
push
hlt
mov
movsl
fwait
or
lods
fmull
inc
mov
sbb
sbb
bound
mov
test
in
mov
xchg
push
mov
test
cmpsl
loopne
xchg
std
and
movsl
movsb
mov
lods
loope
sbb
and
push
add
mov
sub
cmc
xchg
lods
ljmp
arpl
scas
aam
jmp
addr16
mov
adc
xchg
xchg
int
xorb
pop
imul
jl
mov
push
sbb
divl
sbb
cli
daa
or
movsl
stos
xchg
lret
pop
mov
and
mov
wbinvd
pushl
xchg
jl
inc
lods
rcrb
repz
xor
rol
movsb
dec
loope
insb
push
iret
mov
and
pop
notb
pop
cmpsb
inc
test
pop
aas
xchg
and
clc
testb
push
std
ror
xor
lods
mov
xchg
jg
rorb
mov
test
dec
fidivl
arpl
movsl
cvtdq2ps
movsl
or
mov
pop
sbbb
push
fs
bound
inc
cli
cmp
dec
lcall
cmpsb
jno
rorb
xlat
inc
sub
or
xchg
mov
fidivrs
leave
inc
fimuls
notb
mov
popf
inc
inc
sub
enter
mov
cmpl
inc
mov
add
jg
pop
movsl
repz
sub
mov
push
out
sbb
inc
and
std
repz
inc
push
push
cmp
jp
insb
pushf
neg
ljmp
cmp
lret
dec
arpl
movsl
inc
test
loopne
xor
ret
add
cmp
jns
and
hlt
xchg
or
mov
push
mov
sbb
pop
inc
cmp
jae
xor
jne
mov
adc
jne
scas
cmp
push
lds
lret
loop
jmp
inc
or
cmpsb
xchg
rorl
push
cld
cmp
inc
add
mov
sub
divl
dec
testl
aad
orl
pop
stos
movb
mov
sbb
in
cwtl
pop
mov
xchg
pushf
lret
cmp
call
sarb
cli
mov
sbb
pop
inc
and
cmp
test
mov
mov
push
push
xlat
scas
or
jb
sbb
fcmovbe
call
nop
out
fwait
adc
or
mov
ljmp
and
cs
xchg
cli
lea
mov
jecxz
ss
mov
xchg
in
addr16
pop
mov
and
in
loopne
mov
aas
ja
push
mov
xor
cmp
push
ror
push
xchg
lcall
pop
dec
stc
fisubs
add
dec
jns
insl
movsb
lahf
jecxz
aas
add
sbb
pop
cli
xchg
adc
je
scas
stos
push
shr
adc
xchg
repnz
jbe
out
aas
mov
pop
cli
scas
shll
out
jle
stos
shrl
repz
mov
push
push
int3
adc
fisubl
xchg
adcl
cld
mov
sti
fwait
addr16
lea
pop
out
dec
sbb
push
jge
mov
rorb
xchg
push
lahf
mov
aaa
ret
clc
or
inc
mov
cwtl
bound
cwtl
add
push
fwait
push
out
arpl
bound
jg
add
push
mov
adc
jno
pop
jns
inc
jmp
jo
popa
jecxz
pusha
insb
js
leave
addr16
cli
xchg
push
adc
add
mov
pusha
popl
leave
jge
add
inc
lahf
andb
ror
mov
xchg
aas
dec
cs
mov
cmc
xor
adcb
mov
stos
cmp
pop
xchg
pop
mov
mov
adc
scas
inc
mov
lcallw
mulb
aaa
das
or
xor
mov
jle
mov
arpl
ret
daa
in
sbb
inc
sub
inc
xlat
insl
out
das
mov
sbbl
mov
inc
inc
mov
aam
mov
shll
scas
xlat
test
imul
sbb
cmp
or
add
jg
cld
cmp
adc
dec
push
add
add
and
bnd
sub
jnp
sub
xor
sti
aas
cwtl
mov
and
or
pop
in
mov
sbbl
and
adc
inc
lods
and
pushf
std
sub
aaa
xor
scas
rorl
fsubrl
jb
jge
push
inc
loopne
lds
add
push
mov
cwtl
xor
pushf
mov
mov
adcl
jb
and
rcll
sbb
cmp
mov
outsl
xor
jns
rcll
into
adc
dec
push
or
cmp
int
inc
cmpsl
pop
cmc
or
dec
test
sub
filds
or
lods
or
xor
pop
enter
addr16
shrb
add
rcll
xchg
inc
stc
add
lret
cmc
lds
clc
dec
sti
adc
pushf
mov
mov
add
das
push
outsb
jne
lahf
adc
divb
js
xchg
mov
cmp
dec
dec
out
adc
je
popa
into
js
jmp
out
rolb
iret
push
push
cmp
mov
sub
inc
sti
mov
cmp
inc
push
mov
lock
mov
pop
jl
adc
pop
jo
ds
jae
jns
int
mov
push
lds
popf
outsl
jmp
movsl
mov
add
jmp
hlt
adc
sti
cmpsb
nop
mov
call
pop
cmc
or
out
ja
ret
cmp
std
add
mov
add
ret
rol
ljmp
inc
divl
sub
push
push
and
je
mov
sub
jb
loopne
lods
mov
jmp
imul
into
dec
cwtl
mov
fucomip
notb
adc
adc
lods
imul
cmpl
sahf
jp,pn
outsl
divb
inc
lods
push
add
movsl
shll
jae
js
mov
lahf
ljmp
push
mov
lahf
xchg
lds
mov
mov
aas
inc
insb
sub
das
xchg
int3
jbe
inc
mov
pop
xor
aas
les
and
add
push
xchg
es
jno
xchg
adc
or
pushf
pop
push
mov
inc
inc
adc
xchg
and
jp
push
pop
popf
adc
xor
xor
popa
dec
add
out
insl
add
test
pop
ljmp
int
loop
loope
sub
cwtl
fdivrs
xlat
shrb
sbb
popf
mov
and
rorl
into
mov
roll
jno
cmp
xchg
into
push
sub
pop
movsb
rcrb
outsl
mov
int3
test
adc
dec
adc
push
or
out
xor
lret
jne
repnz
aad
and
jmp
aas
mov
daa
add
out
xchg
je,pt
xchg
out
es
add
pop
pop
fnstenv
mov
xorl
or
push
pop
jl
mov
sbb
push
xchg
jge
push
or
add
js
icebp
imul
ljmp
fdivrl
fsubp
sbb
push
jbe
fcmovnu
sbb
xchg
dec
mov
ljmp
shrl
inc
xor
lcall
aaa
js
mov
popa
out
shrl
dec
xchg
call
call
repz
test
loope
inc
shl
test
fidivl
push
shlb
les
ret
loop
jbe
outsl
fst
and
lret
sub
icebp
mov
push
or
xchg
adc
js
jb
push
gs
sub
cmp
push
pop
push
lcall
jae
jbe
dec
repnz
ljmp
sti
pop
sub
jno,pn
sbb
lcall
jg
pop
insl
lods
jae
jecxz
mov
icebp
shll
mov
out
popa
dec
mov
dec
jecxz
ds
lret
or
call
push
sub
mov
lahf
dec
mov
sahf
jns
mov
push
test
inc
or
inc
xor
jmp
cmp
test
sub
mov
fimull
mov
ljmp
imul
fistps
sbb
popa
inc
xchg
xor
mov
fistl
dec
sbb
xchg
cmp
dec
in
stc
and
stos
mov
movsl
movsb
pop
in
mov
pop
mov
test
adc
inc
xchg
fsub
add
insb
xchg
inc
inc
adc
mov
inc
out
repnz
stos
mov
sbb
movsb
les
mov
xchg
and
xor
fnstenv
xchg
inc
mov
int3
pop
mov
mov
jnp
out
mov
iret
dec
and
jle
dec
jmp
mov
push
mov
aam
mull
xchg
inc
idiv
sbbl
mov
into
ret
outsb
out
aas
xchg
fldt
inc
outsl
push
out
fwait
sbb
sub
adc
stos
and
into
jnp
lret
repz
hlt
bound
cmp
push
arpl
dec
sub
sbb
inc
lret
xor
sub
push
push
xor
inc
adc
shrl
and
push
hlt
rolb
fnsave
push
push
xchg
sbb
mov
out
ss
test
dec
inc
cmp
mov
ja
add
mov
inc
jmp
push
bound
scas
sti
mov
insl
xor
test
fs
movsb
fwait
push
fdivrl
mov
mov
sbb
fdivs
sbb
xlat
lea
xchg
adc
pusha
adc
push
test
lds
mov
jl
test
mov
repnz
mov
jg
jne
cmp
sbb
sbb
xor
mull
movsl
xor
xor
push
leave
xchg
out
cld
cmpsl
and
xchg
daa
test
dec
call
dec
pop
adc
xchg
pop
jb
pop
cmc
mov
mov
leave
mov
icebp
fistps
xchg
cli
and
fidivs
push
mov
cmp
std
shr
or
aas
mov
inc
dec
jle
ficoml
stos
mov
repnz
sbb
xor
jbe
sbb
insl
add
cmp
lret
jne
mov
inc
jg
repz
out
in
js
xchg
jnp
xor
xor
or
mov
push
sbb
and
shl
test
pop
int3
into
and
mov
lret
inc
std
fmul
pop
subb
pusha
in
or
out
cs
movsb
mov
pusha
stos
andl
je
xor
cltd
in
in
shrb
mov
rcrl
mov
push
dec
repz
in
lcall
pusha
ret
mov
out
lock
imul
or
push
xorl
dec
sub
inc
out
rorb
inc
data16
cs
push
lret
scas
xor
movsb
fldcw
sahf
or
js
mov
mov
pop
cmp
sub
dec
adc
ljmp
dec
cli
or
mov
pop
enter
mov
adc
adc
out
in
mov
scas
ror
xchg
xchg
lret
fisubrl
sti
sub
sahf
dec
sbbl
mov
pop
push
loop
add
sarl
scas
push
clc
rclb
or
loop
cmp
jne
int3
jnp
xorb
addl
and
pusha
push
inc
pop
mov
pushf
sbb
push
push
rorb
int
xorb
mov
cs
dec
lods
pop
dec
mov
mov
push
pop
mov
movsl
mov
cmp
ss
sti
shlb
lock
adc
mov
rolb
in
fsubl
cmp
jl
adc
dec
cmpsb
loop
das
arpl
mov
in
loope
xchg
in
xchg
cmp
mov
pop
insb
jne
fisubrs
push
jb
xchg
loope
aaa
pop
inc
jle
lods
rolb
pop
gs
dec
adc
xor
loope
mov
cs
push
and
xchg
sbb
movsl
ret
fcmovnu
pop
jecxz
mov
shrb
add
mov
es
and
jno
xorl
mov
sub
push
jnp
xchg
pop
std
mov
and
cmpsl
sahf
pop
in
or
add
add
popf
pop
xchg
test
jg
xor
xor
cwtl
out
pop
rcrb
in
pop
lret
je
shrl
insb
cmp
cmp
mov
mov
leave
subl
mov
rcrl
pop
jns
mov
lcall
jo
ret
pop
push
notl
int3
adc
std
std
add
int3
mov
aad
data16
movsb
stos
xchg
into
or
std
xchg
inc
cmovs
int
lods
or
mov
fildl
sub
adc
pushf
mov
leave
lods
pop
xor
mov
push
push
cmpsb
out
mov
push
rcr
int
cmp
add
jnp
adc
dec
mov
inc
lds
test
ret
sub
jmp
int
andl
push
sbb
addr16
sbb
or
push
inc
mov
ljmp
test
sub
mov
adc
mov
pop
add
or
mov
pop
rcr
and
xlat
adc
push
dec
ss
outsb
xor
inc
xchg
insl
addr16
nop
push
enter
shrb
pop
sub
jg
inc
cmp
adc
add
mov
inc
mov
mov
add
jle
in
xor
inc
or
adc
jmp
mov
mov
cltd
cwtl
xorl
or
call
adc
leave
jne
out
fildl
out
daa
inc
dec
xor
pop
aam
cmpsb
daa
mov
sub
addr16
int3
cmp
ret
pop
adc
hlt
add
testl
scas
jbe
sbb
jbe
je
sub
sbb
jae
pop
test
jge
or
cmpsl
imul
in
add
loopne
enter
adc
sbb
mov
mov
inc
mov
jns
cltd
cmp
inc
push
into
jb
out
stos
ja
out
xchg
mov
mov
push
in
das
mov
push
xchg
or
sub
dec
mov
dec
jmp
add
outsb
sbb
cmp
dec
or
cs
stos
out
ljmp
mov
test
sbb
scas
nop
pop
sub
pop
cmp
ljmp
fcoml
ds
int3
jo
mov
cwtl
pop
fwait
shrl
mul
inc
movsb
mov
clc
std
jmp
mov
dec
fisubl
or
jmp
jnp
daa
outsb
cmpb
fimull
imul
pop
jg
mov
add
or
pop
int3
push
sbb
add
mov
loop
test
loope
insb
pop
pop
fdivrs
inc
test
shlb
mov
push
out
dec
popf
in
dec
cltd
jae
inc
test
arpl
ljmp
loope
je
or
mov
or
lret
mov
or
int3
push
lock
mov
jne
cli
mov
aas
outsl
js
push
rcl
pop
out
add
dec
stc
popf
xchg
adcb
xchg
hlt
mov
push
or
incb
mov
clc
gs
mov
mov
mov
shl
jae
aas
push
add
pop
cmp
fucomip
or
out
js
gs
mov
add
mov
sub
cmpsb
lods
sub
mov
push
push
or
jle
and
add
les
dec
addr16
cwtl
inc
stos
and
cwtl
std
call
mov
jne
mov
xor
into
movsl
mov
daa
dec
mov
adc
inc
pushf
push
cmp
mov
ret
mov
mov
mov
sbb
xlat
fisttps
jns
mov
out
ljmp
adc
test
out
mov
cmc
out
mov
adc
jo
shlb
ret
mov
pop
movl
cmc
jno
in
sub
and
lods
sbb
lahf
mov
add
out
add
dec
pop
insl
sub
repnz
mov
mov
or
in
add
jg
push
mov
int
mov
shll
and
push
leave
mov
sub
test
mov
cmpb
insb
adc
or
iret
out
orb
stos
cmp
setnp
push
xorb
push
mov
flds
movsl
inc
cwtl
fistps
sbb
loopne
sub
xorl
flds
mov
pop
out
lahf
shr
dec
adc
push
fidivrl
lds
push
clc
cmp
or
clc
test
bound
or
add
jnp
and
call
xor
sbb
push
test
popf
dec
hlt
pop
lea
cmpsl
inc
in
repnz
loopne
ret
push
sbb
pop
sub
adc
add
push
add
in
cmp
sub
mov
mov
std
or
test
sub
push
gs
sub
push
add
cltd
fwait
not
stos
xor
lds
lea
in
or
andl
scas
orb
das
stos
out
dec
sbb
mov
aaa
xor
cmpl
sbb
pop
adc
cld
aaa
inc
out
sbb
popf
scas
mov
ss
fnstcw
cmp
xor
int
push
mov
ss
xchg
mov
jmp
stos
adc
sahf
rorl
enter
movsb
insb
pop
iret
mov
loope
push
stos
push
mov
scas
into
aaa
scas
dec
or
shl
fcmovnb
sbb
sti
pop
add
test
or
pop
int3
dec
push
or
test
insl
pop
cs
out
xchg
imul
lods
mov
clc
mov
sti
or
rol
dec
mov
int3
fsubp
inc
subb
pop
je
adc
out
mov
push
push
push
mov
xchg
ss
loope
jp
jl
scas
and
xchg
aaa
pusha
sbb
fildll
out
iret
sbb
rorb
sub
mov
mov
shrl
mov
es
xchg
or
lods
mov
xor
mov
pushf
les
sub
adc
xchg
or
out
or
into
ds
and
sub
jbe
sbb
sti
jg
mov
std
popl
aad
vmwrite
pop
push
jl
adc
mov
lret
xchg
sub
mov
or
loopne
and
cmp
shll
lds
or
adc
hlt
stos
cmp
xor
aad
inc
mov
jl
adc
aas
sbb
in
adc
insl
sbb
ja
jo
pop
sbb
dec
xor
popf
repz
inc
cli
cmc
dec
sub
or
xchg
add
arpl
int3
xchg
cmp
or
scas
int3
stos
test
push
idivl
push
push
int3
std
andnps
iret
frstor
ss
inc
cmp
ja,pn
faddl
fsubs
cs
popl
ret
mov
jecxz
mull
sbb
cmp
dec
jo
std
aad
cld
cmp
and
and
nop
push
dec
push
in
std
mov
xchg
aad
push
cmpb
ds
fsubs
mov
test
dec
or
push
xchg
xor
scas
lret
and
push
lds
call
fdivl
out
js
out
idivl
pop
sub
mov
or
or
mov
pop
iret
sub
xchg
clc
sub
and
mov
xor
xor
shlb
push
scas
fstl
adc
sub
inc
ret
jo
inc
dec
and
mov
mov
cmc
icebp
and
aaa
jg
mov
push
mov
dec
lret
sub
push
ds
loop
dec
jle
push
xchg
movsb
in
cmp
mov
mov
inc
call
jg
dec
pop
jae
sbbb
sbb
mov
cmp
in
dec
int3
xchg
daa
sbb
shll
iret
dec
das
lret
cwtl
cwtl
mov
fsubl
outsb
imul
pop
es
in
rorb
stc
daa
inc
sbb
or
cmpsb
push
or
jmp
xlat
sarl
add
xchg
fcompl
sub
xchg
std
icebp
xchg
pop
das
pop
cmp
hlt
ret
mov
bound
mov
imul
dec
push
cmp
xchg
orb
ret
sbb
ss
arpl
xchg
shr
mov
pop
fisttpll
jno
jb
sahf
mov
out
sub
lods
outsl
push
scas
xchg
mov
les
pop
daa
std
adcb
gs
leave
xlat
out
pop
push
push
cmp
mov
add
xchg
push
add
aas
mov
push
add
aad
cmp
cwtl
fsubrl
xor
mov
push
outsb
fsubr
fstp
test
jl
pop
push
mov
xor
xchg
clc
mov
call
inc
lret
fldenv
or
mov
mov
dec
sbb
movsl
fisttpl
pop
mov
push
sbb
mov
rcr
cld
stos
faddp
xlat
adc
fs
adc
sbb
stos
xchg
jnp
mov
shlb
cli
or
loopnew
bound
cmc
push
cmp
lods
shl
sub
out
mov
ja
in
dec
jmp
inc
ja
in
cli
fisttpl
pop
dec
jns
lock
or
insb
mov
xor
aam
xchg
xchg
dec
hlt
sub
outsb
jns
and
movsb
push
mov
fistps
clc
push
data16
scas
push
adc
add
xchg
sub
xor
aaa
pop
out
pop
xor
js
add
xchg
enter
xchg
pop
xchg
ds
sub
movsl
aam
xor
mov
test
roll
loope
pop
sub
dec
xor
popfw
inc
and
add
leave
scas
dec
js
inc
movl
stos
push
fwait
movsb
in
stos
cli
outsb
inc
push
jb
fnstenv
aad
cli
sbb
cmp
call
in
xchg
movsb
jmp
xchg
je
sbb
push
xor
aaa
outsb
pop
adc
cli
mov
mov
gs
xor
xor
adc
cmpsb
mov
inc
jecxz
mov
and
cmp
mov
mov
pop
add
rcll
xorl
test
mov
mov
adc
es
pusha
bound
inc
je
mov
insb
lock
or
add
mov
cmp
mov
inc
mov
int
fidivrl
hlt
loop
daa
push
or
or
mov
ret
je
daa
push
add
cmpsb
push
dec
das
jl
jae
in
inc
jo
xor
pop
pop
mov
dec
cmpsl
sbb
sub
sub
sar
push
mov
adc
loop
rcll
xchg
aas
shll
pushf
jl
adc
sub
xor
lds
movsb
mov
dec
add
fdivs
push
jnp
js
test
enter
push
insb
sbb
subl
pop
out
insb
lods
negl
roll
lock
test
int
aad
sbb
push
mov
xchg
mov
jl
jmp
add
insb
lahf
adc
cmp
shll
ret
mov
sub
jmp
cmpsl
dec
ret
pop
push
jl
mov
call
je
cvtdq2ps
clc
aam
fwait
pop
mov
aaa
mov
in
pop
cltd
xchg
jae
ret
xchg
int
or
inc
lcall
inc
jmp
inc
push
fcoml
xchg
and
or
fcompl
popa
jl
lret
sbb
jne
fdivs
sbb
test
jecxz
lods
in
test
pop
adc
dec
pushw
lods
cmp
mov
sbb
mov
test
mov
pop
jo
sbb
dec
int
int3
pop
insl
ret
sub
in
movsl
xchg
adc
cwtl
rorl
xor
jbe
xchg
lret
jno
add
sbb
in
mov
cwtl
cmp
xchg
mov
jno
movsb
add
mov
dec
xchg
movsl
nop
repnz
adc
ds
fmull
jo
sbb
enter
adc
mov
or
test
data16
add
cli
xor
aam
sbb
cmc
jmp
icebp
mov
jg
xchg
out
xchg
lret
or
out
sti
popa
sbb
bound
sbb
add
fstps
loop
enter
mov
fldl
cmp
arpl
mov
pop
ret
out
enter
daa
inc
ds
adc
jae
ret
daa
mov
shll
and
adc
out
adc
cmp
adc
mov
subb
je
jle
mov
cltd
xor
xchg
sub
in
dec
jb
ret
sbb
fs
inc
mov
lock
jno
ljmp
sbb
loopne
sahf
jl
pushf
sbb
mov
dec
sbb
shl
lcall
iret
mov
aad
xor
push
push
dec
arpl
jo
push
xor
in
pusha
faddp
das
out
sti
or
inc
popf
dec
popa
xor
movsl
adc
mov
pop
mov
mov
sub
scas
or
jo
push
inc
ret
inc
std
les
popa
pop
stos
mov
fstpt
mov
cmp
mov
roll
rorl
xor
mov
enter
pop
fwait
and
adc
cs
dec
iret
push
mov
pop
jnp
dec
sarl
cmpsb
xchg
push
outsb
fildl
xor
leave
cld
xchg
or
add
cmp
and
adc
roll
mov
sbb
pop
inc
fisttpl
sbbb
or
insb
sbb
push
hlt
sbb
pop
jg
int3
pop
jecxz
push
out
xor
jmp
and
xor
inc
cltd
repz
push
pop
outsb
clc
sub
out
cmp
ljmp
adc
out
cmp
shll
xor
hlt
shll
mov
out
push
push
mov
cmp
jo
mov
ss
sbb
stos
movsb
ret
adc
test
shl
lock
lds
cmp
repnz
sub
sub
ds
pop
cmp
aaa
insb
shrl
jg
xchg
or
popa
iret
sub
inc
ljmp
jl
sbb
push
orb
push
jbe
or
pop
inc
mov
mov
mov
cwtl
xchg
sub
outsb
sub
mov
mov
imul
cmp
dec
nop
pop
pop
jo
push
nop
jo
lcall
jp
mov
jne
fidivl
movsl
insb
enter
js
ret
mov
aaa
and
out
push
jge
int3
insl
aam
inc
add
orl
call
ljmp
fcomip
jbe
das
test
aam
add
mov
mov
cli
and
data16
jl
xchg
mov
es
stos
pushf
bound
mov
fldl
addr16
mov
push
dec
add
call
aas
pop
xchg
inc
andl
iret
adc
dec
mov
sbb
pop
das
xchg
rcrl
pop
mov
and
insl
add
mov
add
loopne
or
fidivs
cmp
pop
int3
sub
xchg
rolb
gs
clc
pop
rclb
fcom
out
in
pushf
cmp
or
pop
int3
cwtl
movb
inc
push
xchg
sbb
mov
insb
inc
sub
xor
jno
push
pop
add
jl
and
sub
lds
fwait
add
ret
pushaw
sub
adc
cs
inc
in
adc
pop
and
jbe
push
out
or
jge
stos
adc
sbb
sar
fstps
decb
xlat
xor
ja
dec
outsl
mov
xor
unpckhps
daa
hlt
add
fdivrl
gs
pusha
xor
cmpb
adc
cld
jle
lods
in
es
pop
push
cld
cs
in
aaa
jno
jp
cwtl
pop
jo
outsl
xchg
stos
lret
clc
dec
jp
push
mov
mov
in
cmp
insl
js
mov
std
stos
jne
nop
jne
enter
js
or
maxps
aam
pop
clc
mov
jbe
jnp
push
mov
add
jecxz
add
mov
inc
or
imul
bound
loop
ljmp
aaa
cli
ret
add
in
ss
cmc
jo
cmp
mov
ret
adc
mov
sub
add
imul
xchg
mov
adc
inc
test
outsl
sti
inc
stos
xchg
jg
sbbb
nop
mov
cwtl
adc
adc
jg
xchg
push
ds
jmp
inc
push
imul
shlb
add
fstl
jb
and
inc
in
cmp
ds
xchg
vshufpd
or
jo
arpl
je
add
in
push
popa
cltd
cwtl
shll
mov
mov
mov
pop
jno
pop
cld
les
mov
jge
out
cld
lods
push
js
inc
pushf
mov
sub
movsl
fiadds
loopne
scas
lret
test
adc
imul
aad
sti
lahf
inc
push
popa
stos
loop
mov
xor
pop
lret
pop
fists
int
cmc
mov
pop
sub
daa
call
pushw
cmp
int
sbb
push
fsubrp
pop
mov
ret
shl
adc
add
ss
sbb
pop
push
nop
mov
xlat
lock
fsubs
enter
push
push
adcl
stos
inc
rorb
pushf
or
sub
std
and
subl
sub
jmp
cmp
pop
aad
mov
mov
push
scas
sahf
inc
push
test
bnd
fisubrl
dec
aaa
jns
incl
les
jge
add
push
hlt
repz
fbld
jb
or
outsb
and
cltd
lret
shlb
jae
aaa
push
fmull
adc
dec
aaa
jns
pop
mov
adc
jbe
testl
dec
xchg
adc
mov
cmpsb
jns
sbb
das
dec
roll
iret
xchg
mov
sbb
sub
in
and
orl
pop
mov
mov
imul
call
aaa
inc
inc
out
outsb
popl
mov
pop
cli
pop
and
adc
hlt
mov
cli
in
stc
adc
pop
mov
mov
ds
pop
cmp
in
fisttpl
xor
fxch
push
dec
inc
lea
sub
push
cmp
adc
ja
lock
xor
lcall
cmp
subl
lock
bound
enter
cmp
das
stos
sbb
aas
inc
xor
clc
sbb
ret
jg
xorb
add
adc
add
insl
pop
andb
call
orl
xchg
xchg
adc
std
pop
cmpsb
leave
or
stos
std
mov
xor
add
or
pop
out
dec
loope
jne
lret
popa
fstps
stc
stos
or
jb
test
mov
mov
das
pop
gs
and
push
xorb
ret
jbe
aaa
inc
mov
test
mov
push
mov
push
sbb
push
repz
call
or
int
cmc
and
or
popfw
mov
mov
mov
ss
dec
std
aas
fcmovnbe
in
cld
cmp
cwtl
xchg
sub
movsb
dec
sbb
dec
insb
shrb
add
imul
jmp
addr16
sub
pop
push
adc
scas
das
xlat
jge
jb
add
and
and
and
cwtl
in
or
call
cmp
inc
insb
mov
es
out
xor
insb
sbb
shll
pop
dec
add
and
xchg
loope
mov
xchg
add
imul
mov
pop
or
out
push
loope
cwtl
pop
pop
mov
xchg
mov
sbb
inc
jmp
inc
test
add
filds
mov
cmp
out
cmp
imul
ret
in
clc
adc
mov
das
out
push
inc
mov
and
or
and
insl
jae
aad
or
leave
scas
push
pop
mov
xchg
mov
mov
sub
mov
xor
jl
test
mov
adc
aad
push
int
lahf
cs
adc
sbb
mov
pop
scas
movsb
out
add
popf
movsb
scas
nop
ret
mov
xor
dec
mov
fadd
loopne
stos
mov
xorb
ror
mov
arpl
xchg
sub
fwait
mov
mov
push
out
mov
sub
push
xor
cli
cmc
jne
lea
cmp
in
cmpsb
stos
adc
out
xchg
fcomps
fsts
mov
xchg
int
aaa
clc
dec
stos
dec
push
rcl
sub
push
iret
xchg
or
adc
scas
mov
fisubl
cmp
jbe
mov
stc
push
push
loope
mov
xchg
inc
rcrb
sti
inc
adc
pop
orw
sub
out
pop
and
fidivl
push
aad
jno
mov
insb
sbb
in
loope
inc
dec
pushf
fdivl
scas
rorb
or
push
xchg
aaa
sahf
cltd
xchg
adcl
test
das
jo
jg
shr
add
xchg
dec
adc
inc
push
jge
fwait
aam
or
or
pushf
and
jo
icebp
or
movsl
leave
adc
adcb
pop
adc
loop
mov
frstor
iret
rcrb
bound
jbe
pushf
rcll
aas
xchg
std
fisttpl
add
jl
roll
xchg
and
mov
sbb
insb
dec
cli
insb
xchg
inc
fldenv
cmp
xchg
add
lods
and
cltd
or
mov
lret
fdivrl
arpl
repnz
push
or
pop
mov
fisubrl
popa
lret
push
aas
xchg
adc
inc
imul
push
ret
lret
xchg
cltd
pop
fistpll
daa
lahf
add
mov
ja
sub
ljmp
cmc
jle
mov
sbb
cmp
mov
pop
mov
aam
jl
pop
nop
test
les
push
sti
mov
scas
sub
or
std
cld
xor
mov
repnz
xor
movsl
push
aas
dec
shrb
std
jne
pop
mov
pop
stos
sub
mov
jge
addb
xchg
push
and
loopne
scas
loopne
dec
sbb
loop
aas
lock
pop
nop
fwait
orb
xchg
sbb
pop
pop
pushl
imul
push
mov
int
jp
or
mov
ds
lods
adc
xchg
xchg
lods
imul
pop
popf
repz
scas
aad
push
aam
aaa
jmp
lods
in
xchg
and
aas
stos
mov
pop
es
scas
xor
pusha
leave
mov
jl
out
in
aaa
sub
nop
lea
test
push
and
stos
enter
ds
pop
mov
adc
sub
ljmp
addr16
jge
dec
shlb
add
jle
movsb
inc
sub
xchg
inc
xchg
xor
mov
stc
sub
and
inc
xchg
imul
and
mov
movsb
push
loop
mov
imul
repnz
orb
ss
jns
negb
addb
fidivs
scas
xchg
cltd
mov
repnz
push
cmp
jnp
les
mov
pop
inc
inc
mov
mov
sbb
ja
in
in
pop
cltd
jns
cmp
lods
push
gs
test
clc
mov
mov
repz
xchg
jmp
ret
sub
push
out
push
out
stos
pop
sbb
movsb
cmp
jnp
mov
sub
mov
fdiv
sub
push
lahf
mov
test
shl
sub
and
lods
jle
sub
sub
int
adc
pop
test
inc
or
or
pop
mov
fnsave
outsl
dec
dec
jmp
sbb
push
cmovne
out
xchg
jp
or
sbb
sub
fstpl
mov
dec
xor
test
in
xchg
movsl
test
mov
out
imul
jp
loopne
mov
mov
shll
popf
ljmp
scas
mov
mov
inc
cmp
jg
push
mov
push
adc
sarl
movsl
out
aaa
mull
scas
stos
dec
cmp
or
xor
repnz
mov
loop
jle
test
jae
adc
lods
mov
test
lcall
and
mov
lods
xlat
inc
sbb
add
cmp
stos
negl
and
int
cmp
stos
mov
insl
xor
test
ror
pop
shrl
adc
add
fldenv
cmc
mov
dec
ds
lock
lods
mov
cmp
pop
mov
cmc
std
enter
pop
popa
add
mov
add
mov
xlat
pop
stos
lahf
popa
je
imul
add
lret
cwtl
xor
push
jmp
xor
mov
adc
push
push
xor
push
jo
mov
and
loope
or
test
in
push
and
int3
dec
xlat
mov
ret
les
sub
cmp
clc
sub
jo
fdivrl
mov
inc
sti
stos
leave
or
test
stos
cmp
mov
or
jb
mov
inc
sti
repz
hlt
test
movl
out
int
push
mov
push
loope
cmp
iret
popf
pop
cwtl
jmp
inc
and
pushw
xor
lahf
mov
dec
test
aaa
je
dec
sub
mov
pop
jl
dec
fmulp
shll
cli
nop
jns
or
xor
lret
mov
adc
xchg
test
and
sbb
gs
sti
into
call
cmp
cmp
lret
xor
sub
dec
les
sbb
sbb
push
mov
inc
jmp
cmp
mov
jae
dec
js
in
pop
pop
sti
dec
pop
xor
push
mov
into
repnz
adc
xchg
dec
sbbb
push
loope
push
shl
jg
dec
dec
mov
inc
push
in
inc
sbb
xchg
pusha
cld
out
jno
sbb
cli
jo
outsl
arpl
je
mov
push
mov
int3
mov
cmp
cmp
enter
aas
insb
sbb
pop
int3
mov
shll
dec
roll
xor
push
int
das
lods
pop
aaa
sub
sub
xorb
xor
fstpl
stc
in
loopne
mov
in
outsb
inc
outsl
add
pop
in
add
sarb
jbe
mov
and
lods
popf
pop
or
jae
or
andb
or
mov
sahf
frstor
lea
push
and
push
fsts
mov
jae
mov
xchg
enter
dec
or
pop
cmp
cmc
mov
insb
ret
push
mov
dec
mov
test
and
lods
pop
or
iret
ljmp
fdivrs
lods
insb
in
sbb
jno
std
cmp
pushf
sub
jb
test
in
sahf
xor
lea
adc
inc
xchg
repz
lods
test
inc
mov
xor
sbb
shlb
and
cli
or
cmp
mov
cmp
mov
mul
and
pop
loopne
dec
cmc
mov
fstpl
mov
hlt
into
add
aam
enter
push
lahf
test
sub
fcmovne
cmp
imul
pop
es
xor
cmp
inc
dec
sub
movsl
stos
call
and
fwait
push
jl
mov
lcall
pop
xchg
fstpt
add
sbb
out
jne
mov
addb
mov
inc
sub
dec
or
push
mov
pop
xor
xchg
out
jle
sub
sbb
mov
mov
xchg
xor
xor
outsb
adc
imulb
adc
sbb
and
js
mov
push
arpl
ja
rorb
repz
in
mov
pop
dec
sbb
movsl
pop
sbb
je
aam
and
sub
icebp
inc
jno
sbb
mov
push
pop
dec
dec
shll
mov
hlt
jmp
sbb
xchg
xchg
or
das
int3
cld
rorb
cmp
push
adc
cli
outsb
jmp
sbb
inc
mov
fiadds
cmc
adc
aad
cmc
or
cli
popf
or
fidivrl
cmc
sbb
cltd
push
or
and
hlt
repz
js
cmp
popa
les
adc
pop
test
mov
xchg
js
popa
mov
ja
out
arpl
pop
inc
lahf
xchg
sti
nop
stos
cwtl
dec
mov
mov
das
sbb
ljmp
sbb
sbb
loope
add
in
push
stos
dec
adc
lods
mov
es
fbstp
in
mov
xchg
jmp
dec
cmp
cmpsl
fildl
mov
pushf
test
shlb
xchg
es
int
mov
movsb
inc
insl
popa
dec
loop
sub
nop
cmp
push
sbb
adcb
or
nop
stos
jnp
leave
iret
xor
imul
test
mov
sub
mov
mov
jo
jmp
jns
sbb
lcall
std
dec
ja
jg
mov
dec
cltd
add
mov
sub
pop
push
sbb
dec
or
xor
mov
cmpsl
mull
into
lcall
daa
inc
repz
xor
add
sub
and
cmp
repnz
push
repz
aam
xchg
xor
imul
xchg
outsb
scas
push
std
bound
popl
mov
pop
jno
jae
fmuls
lds
mov
or
mov
add
mov
dec
fdivs
sub
popa
xor
ficomps
xchg
out
pushf
add
int3
les
repz
sbb
mov
dec
shrl
les
icebp
cmc
sbbl
rep
dec
dec
sub
add
sub
xchg
cmp
push
aam
cli
add
mov
sbb
inc
fistpl
sbb
sub
rorl
inc
add
jne
daa
sbb
pop
or
in
imul
jo
in
push
xchg
pushf
or
divb
data16
or
aaa
pusha
mov
jmp
add
or
loopne
mov
mov
sub
cmp
imul
ds
xchg
cli
popa
jg
das
loopne
adc
ja
add
dec
inc
jp
in
lds
cwtl
scas
sub
cli
aaa
js
repz
movsl
pop
mov
rorb
jle
cmp
jl
push
sub
sbb
mov
sub
fadd
jo
xchg
ficoms
popa
xchg
rcrb
cltd
xorl
dec
and
fadd
aaa
pop
dec
imul
mov
jl
stos
je
mov
out
cmpsl
pop
lock
popf
imul
movsl
mov
push
in
inc
les
lret
or
jno
pop
or
scas
adc
fnstenv
push
push
inc
adc
lahf
cltd
fucom
xor
sbb
xchg
lods
cmpsb
test
in
out
ret
xchg
xchg
and
rorl
sub
repnz
mov
or
pop
adc
ret
fs
pop
dec
std
dec
cmp
roll
bound
jnp
adcl
into
cmpl
sub
lea
jl
sub
out
mov
adc
and
in
cmpsl
es
ss
ret
and
adc
adc
in
dec
mov
mov
ljmp
addb
inc
movsl
shl
mov
ljmp
aam
test
dec
jl
xchg
fmul
push
cmp
jbe
or
xorl
shl
cwtl
xchg
xor
sbb
hlt
enter
cmp
sub
or
add
xchg
roll
xchg
or
out
xchg
aas
call
dec
movsl
sub
dec
mov
aam
or
shll
mov
sub
mov
test
cmp
adc
mov
sbb
mov
nop
cmp
mov
sub
cmc
sbb
xchg
iret
xchg
xchg
and
jl
movsb
sbb
xor
cmc
jecxz
mov
xchg
xor
cmp
push
aam
jne
lea
adc
xchg
int
repnz
das
pop
jmp
xchg
lahf
je
into
outsb
mov
sbb
xor
lods
jecxz
cmpsl
bound
mov
and
adc
in
and
ds
push
dec
inc
fwait
add
rol
data16
adc
inc
mov
add
add
clc
xchg
fs
and
lret
pop
pop
pusha
xchg
sti
lahf
mov
scas
pop
movsl
cmpsb
mov
das
aam
sub
pop
ljmp
psrlw
xchg
adc
mov
loope
mov
cmp
lods
hlt
xchg
pop
les
mov
pop
push
aad
int3
imul
cmp
sbb
imul
pop
lea
rcrl
loopne
dec
jl
shl
add
cmpps
repnz
xchg
mov
and
js
or
jb
mov
or
dec
adc
sbb
xchg
jno
movsb
xor
cwtl
adc
arpl
in
add
