jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
test
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
mov
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
je
lea
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
mov
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
mov
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
lea
mov
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
cmpl
ja
mov
mov
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
pushl
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
xor
mov
call
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
pop
pop
lea
pop
add
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
testb
jne
push
lea
push
call
test
je
mov
andb
test
je
cmp
je
mov
or
mov
xor
inc
pop
pop
pop
mov
pop
ret
cmp
jne
movzwl
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
mov
mov
push
call
lea
call
lea
call
lea
call
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
inc
cmpl
push
mov
jl
jg
cmpl
jbe
mov
mov
lea
push
call
test
je
push
mov
mov
mov
push
mov
call
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
push
call
test
jne
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
pushl
mov
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
test
pop
pop
jne
cmpb
je
pushl
mov
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
mov
mov
lea
push
push
call
test
jne
xor
cmp
je
lea
push
mov
mov
mov
mov
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
cmpl
jl
jg
cmpl
ja
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
mov
call
push
push
lea
push
pushl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
call
push
push
lea
push
pushl
call
pushl
mov
pushl
call
test
pop
pop
jne
xor
lea
call
mov
test
jne
lea
call
mov
test
je
mov
push
call
lea
call
mov
test
je
mov
push
call
lea
call
xor
pop
pop
pop
leave
ret
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
xor
push
mov
call
mov
add
cmp
jne
push
call
xor
add
cmp
je
mov
mov
movl
mov
mov
mov
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
test
je
mov
push
call
add
test
je
mov
mov
push
push
push
mov
call
mov
test
js
mov
mov
push
call
pop
pop
mov
pop
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
cmpl
je
push
mov
test
push
jne
cmpl
jne
pop
pop
pop
leave
ret
cmpl
je
xor
xor
mov
mov
mov
xor
push
pushl
push
push
pushl
push
push
call
jmp
testw
je
jmp
mov
cmpl
je
pushl
mov
pushl
mov
pushl
call
xor
ret
mov
add
jmp
push
mov
mov
test
jg
push
mov
call
test
jne
pushl
call
pop
ret
cmp
jle
jmp
mov
jmp
mov
mov
mov
push
push
call
xor
ret
push
mov
mov
sub
test
push
push
push
je
push
lea
xor
call
mov
cmp
ja
mov
push
push
push
lea
push
call
cmpl
jne
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
mov
lea
rep
xor
cmp
mov
mov
je
push
lea
call
push
push
lea
push
push
call
add
test
lea
js
mov
push
call
push
lea
push
push
call
add
test
js
mov
push
push
call
add
cmp
je
mov
lea
push
push
push
mov
movl
call
mov
push
push
push
push
push
call
mov
mov
mov
add
lea
push
push
lea
push
push
call
mov
test
jbe
mov
mov
xor
jmp
lea
mov
test
jne
add
add
cmp
jb
mov
push
call
mov
add
push
xor
mov
lea
mov
call
mov
cmp
je
mov
push
mov
call
test
js
lea
mov
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
mov
lea
push
push
add
call
mov
mov
add
push
mov
push
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
call
mov
add
jmp
push
mov
push
push
push
mov
mov
test
jne
cmp
je
incl
pop
leave
ret
cmpl
je
cmpl
jne
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
pushl
push
call
lea
call
jmp
incl
cmpl
jne
xor
push
mov
push
push
call
push
call
add
jmp
push
mov
and
sub
push
push
mov
xor
cmp
push
jne
mov
pushl
call
mov
call
cmp
jne
pop
pop
xor
pop
mov
pop
ret
push
call
cmp
pop
je
mov
lea
movl
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
lea
push
mov
mov
mov
call
push
lea
push
lea
push
mov
call
add
lea
push
mov
lea
call
mov
push
push
mov
mov
mov
lea
push
push
call
jmp
int3
int3
int3
sub
mov
mov
push
mov
push
push
mov
lea
push
push
call
sub
mov
sub
mov
mov
js
mov
sub
sub
js
mov
mov
mov
push
push
mov
call
push
mov
call
mov
call
mov
mov
call
mov
cmp
je
cmp
je
test
jne
cmpb
je
cmp
je
mov
mov
mov
pop
mov
mov
pop
mov
pop
add
ret
mov
sub
cltd
sub
sar
add
jmp
mov
sub
add
jmp
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
sub
push
push
push
xor
mov
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
mov
mov
lea
call
mov
mov
xor
push
lea
lea
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
cmp
jne
xor
inc
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
jmp
push
mov
sub
push
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
cmp
je
mov
mov
lea
call
mov
mov
lea
pushl
call
test
je
mov
mov
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
call
mov
cmp
je
mov
mov
push
push
movl
mov
mov
mov
push
call
lea
xor
call
push
call
mov
cmp
pop
je
pushl
xor
call
pop
push
push
pushl
call
mov
mov
mov
cmp
jne
mov
cmp
mov
je
mov
push
call
mov
mov
lea
push
push
call
cmp
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
test
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
call
mov
mov
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
js
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
mov
call
test
jne
mov
mov
call
test
je
mov
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
test
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
xor
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
add
dec
cld
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
pusha
push
call
mov
lret
jge
add
xlat
add
cmpsb
mov
nop
data16
jmp
add
pushf
mov
add
pop
les
add
add
jno
into
mov
xchg
mov
mov
sub
push
mov
add
push
push
push
push
push
call
add
add
lahf
add
add
mov
les
add
xorl
push
sub
pop
popl
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
mov
push
add
mov
add
fiadds
jne
addr16
mull
pop
cmc
pusha
add
add
push
add
add
lods
icebp
add
subb
icebp
add
lcall
push
push
push
push
call
push
jge
ja
add
divb
movsl
add
add
mov
mov
add
gs
add
imul
add
add
test
add
je
out
add
jnp
neg
add
pop
add
mov
in
hlt
lcall
push
push
lea
push
push
push
push
push
push
push
call
test
mov
xchg
add
test
add
scas
add
clc
add
pushf
add
int
stc
leave
std
push
pop
add
add
add
jmp
add
aam
pop
cmpl
mov
sub
pop
call
push
push
call
iret
cmpsb
add
add
add
scas
ret
test
push
push
add
add
mov
imul
mov
add
bnd
add
aam
add
lret
push
add
add
mov
loop
add
mov
add
xchg
fcoml
sub
pop
push
push
push
push
lea
push
lea
push
push
call
add
in
movsb
out
add
pop
push
jae
std
add
add
add
lods
iret
add
out
mov
add
lods
addb
cli
jb
add
mov
add
pop
push
add
add
call
call
push
push
push
lea
push
push
call
jno
addr16
js
in
mov
lods
div
mov
add
out
cwtl
add
mov
add
add
ret
add
mov
pusha
xlat
add
jle
mov
add
add
test
add
in
xchg
add
add
movsl
add
lock
rolb
jecxz
in
in
lcall
ret
add
add
push
push
push
push
push
call
insb
add
fninit
in
push
jl
sarb
push
repnz
pop
add
add
add
add
mov
xchg
lahf
add
loop
pop
add
add
out
sarl
mov
add
add
je
pusha
in
add
rolb
sub
pop
ret
push
push
call
shr
pop
aad
cld
pusha
xchg
scas
mov
pusha
fiadds
add
push
mov
add
mov
test
mov
lcall
push
push
lds
out
add
add
test
pop
add
add
incb
push
add
inc
hlt
mov
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
fidivs
mov
add
cld
xchg
xchg
pusha
pushf
mov
lret
add
lea
mov
jge
mov
cmpsl
add
add
add
mov
add
add
add
lods
imul
mov
add
pop
mov
sub
pop
add
push
push
push
push
call
xchg
leave
xchg
incb
iret
add
filds
add
scas
add
xchg
mov
push
add
imul
pop
add
add
stc
add
push
xchg
mov
cmpsb
add
fildl
add
in
lock
lcall
ret
add
add
push
push
push
push
push
lea
push
call
clc
add
fsub
push
data16
add
mov
faddl
cwtl
filds
add
jne
add
add
add
add
loop
mov
cwtl
add
ret
xor
push
push
push
lea
push
push
call
add
movsl
shlw
add
lret
divb
add
jo
rcll
ja
add
lock
je
stc
mov
popa
gs
nop
loop
sub
pop
mov
xor
push
push
sub
inc
push
push
pop
add
shr
ror
sub
xor
pop
pop
push
lea
push
push
push
push
push
lea
push
call
push
mov
mov
aam
add
add
clc
add
ljmp
lahf
roll
add
pop
testb
add
add
cld
test
into
stos
add
mov
xchg
xorl
insb
pusha
add
jle
add
jne
push
push
lea
push
lea
push
call
out
lds
jge
out
add
jl
mov
mov
out
mov
add
add
add
std
movsl
mov
addl
add
add
add
add
movsb
xchg
pop
add
push
add
repnz
add
push
push
push
call
leave
add
jno
jne
xlat
jp
add
add
add
mov
outsl
add
add
in
std
add
xchg
cmc
lock
jne
into
add
add
mov
mov
lcall
hlt
add
add
jns
mov
push
add
push
sub
pop
mov
movl
push
push
push
push
push
push
push
call
add
icebp
sahf
loopne
data16
int
cli
add
out
add
add
xchg
add
add
pop
std
movsb
loop
mov
in
push
cld
add
ljmp
xchg
add
inc
call
add
add
add
in
mov
mov
call
into
pop
lods
add
mov
add
leave
add
add
pop
add
mov
lcall
push
push
push
lea
push
push
push
push
lea
push
call
arpl
mov
mov
xchg
add
mov
add
sti
cwtl
lds
xchg
pop
add
mov
scas
push
stos
rcrb
jge
loop
mov
add
test
mov
push
pushf
add
sub
pop
pushl
pushl
push
push
lea
push
push
push
push
push
push
push
push
call
mov
js
add
scas
roll
jmp
add
mov
add
add
add
scas
in
mov
mov
imul
sub
pop
call
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
ja
lds
jecxz
mov
add
movsb
mov
add
cmpsl
add
add
into
lret
push
add
lods
add
pop
jne
mov
add
add
xchg
add
fsub
je
test
add
add
mov
add
addr16
pushf
add
push
sub
pop
pushl
push
push
push
push
lea
push
push
call
sahf
in
mov
sti
mov
add
popf
add
mov
add
xchg
add
clc
mov
rolb
shlb
sub
pop
pushl
call
push
push
sub
push
or
inc
add
shr
sub
shl
dec
pop
xor
pop
push
push
push
call
jb
add
add
add
leave
xchg
mov
cwtl
pop
add
rcr
imul
push
movl
hlt
pop
pushl
call
push
lea
push
push
call
add
sahf
cli
add
mov
add
xchg
mov
add
jne
add
xchg
add
out
in
add
add
push
rorl
add
std
rol
pop
mov
gs
xlat
add
popf
in
adc
sbbl
testb
add
data16
in
hlt
pop
push
push
push
ror
add
push
sub
add
shl
sub
rol
shr
not
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
sbb
add
add
add
je
add
add
int
lock
add
push
mov
jnp
add
add
jmp
add
mov
pop
divb
data16
mov
add
push
add
lcall
push
push
push
push
call
add
add
add
stos
push
fwait
mov
jmp
shl
xchg
fidivrl
nop
jns
add
mov
xchg
add
lea
mov
fldl
jl
pop
cltd
mov
mov
add
add
int
add
out
cmpsl
add
lcall
add
adc
cmp
add
lret
stos
add
fs
add
xlat
mov
add
mov
add
out
xchg
gs
lea
jno
add
addr16
add
mov
add
lcall
rorb
scas
sub
lea
push
push
lea
push
push
push
push
call
popf
ficomps
int3
mov
add
lahf
add
jl
mov
add
mov
jno
test
mov
imul
mov
hlt
mov
lods
xchg
gs
add
pop
cmpsl
mov
fbstp
loope
fs
fiadds
push
push
push
push
push
push
lea
push
lea
push
call
push
add
mov
cmc
popf
add
mov
add
pop
rolb
fsubrs
jge
add
adcb
fildl
add
outsl
add
add
lahf
cld
push
arpl
outsl
jne
add
cwtl
add
add
out
jns
iret
mov
mov
add
add
in
mov
push
lea
push
push
push
push
push
push
push
push
call
add
mov
add
mov
arpl
add
mov
repnz
add
test
add
aad
mov
jle
fldt
icebp
xchg
arpl
scas
add
mov
sub
pop
add
add
push
push
push
push
lea
push
call
add
add
fs
fidivrl
add
add
pushf
test
add
bound
push
add
cwtl
mov
xchg
add
lds
pop
mov
add
push
add
add
stc
mov
xchg
add
lods
pusha
xchg
notl
add
clc
lods
shr
add
lods
add
push
add
mov
add
sub
pop
add
push
push
push
push
push
call
add
pushf
add
xchg
mov
push
lret
jns
add
addr16
add
add
jbe
xchg
arpl
jo
imul
add
jnp
add
std
add
add
nop
in
testl
add
sub
pop
mov
push
push
lea
push
push
push
call
xchg
push
mov
pop
into
add
xchg
imul
test
out
xchg
add
mov
sub
pop
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
rcr
pop
les
add
xchg
sti
add
jl
addl
lea
je
add
idiv
into
add
add
std
add
add
sti
lds
add
add
test
add
add
lcall
add
add
push
in
fcompl
les
push
call
ja
fwait
in
add
scas
sahf
add
add
je
imulb
add
mov
fs
mov
loope
add
add
add
leave
out
mov
add
rclb
pop
add
push
push
lea
push
push
push
push
call
add
add
add
add
imul
add
xchg
mov
out
add
hlt
jnp
out
xchg
roll
shll
js
loopne
jmp
mov
addb
aam
flds
sub
pop
push
push
push
lea
push
call
movsb
mov
add
mov
add
stc
enter
fld
jno
add
add
out
add
cmpsb
imul
add
mov
aam
add
in
arpl
fildl
lcall
inc
or
adc
out
push
lea
push
push
push
push
push
lea
push
call
lods
stos
add
lea
jne
jl
loope
iret
rolb
add
lahf
jp
add
add
add
add
scas
add
roll
add
add
inc
loopne
add
cmpsl
hlt
xchg
add
add
add
jbe
add
mov
add
add
sub
pop
add
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
lcall
mov
add
cli
add
add
mov
add
std
pop
add
add
mov
add
sahf
popf
ljmp
popa
fdiv
cltd
cli
scas
add
in
fcompl
dec
add
icebp
xor
adc
or
outsl
push
lea
push
push
push
push
push
call
add
mov
mov
jo
add
cmc
add
fs
add
iret
xchg
add
in
xchg
mov
stos
add
in
fcompl
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
icebp
push
add
pop
add
fldcw
add
jmp
xchg
add
jecxz
push
arpl
add
add
imul
xchg
js
push
add
jmp
in
loopne
mov
xor
push
lea
push
lea
push
push
push
push
push
lea
push
call
fldt
cwtl
add
mov
add
add
add
add
add
out
iret
aam
add
add
pusha
push
jbe
pop
lods
push
popf
xchg
mov
add
mov
add
xchg
outsl
arpl
xchg
add
nop
filds
jl
pop
test
mov
push
int3
arpl
add
popa
popf
ja
mov
add
enter
jl
jge
push
push
push
lea
push
call
lods
add
push
add
roll
add
add
pusha
mov
add
add
cmpsl
add
add
sub
pop
pop
push
push
push
call
jbe
cli
test
into
pop
sti
add
add
add
mov
add
fiaddl
add
add
xchg
add
mov
push
aad
bound
xchg
fwait
cli
add
popa
push
movsl
mov
xchg
mov
add
add
mov
push
xchg
movsb
push
push
push
push
lea
push
call
add
xchg
mov
lods
pop
mov
mov
fildl
insb
jb
les
mov
gs
cmp
add
jecxz
add
sub
pop
pop
push
push
lea
push
push
push
push
push
push
call
add
roll
add
add
jp
add
lea
roll
bound
nop
add
add
arpl
mov
add
add
add
lcall
pop
hlt
push
lea
push
call
mov
mov
xchg
add
out
jae
in
gs
mov
add
add
add
lea
roll
xchg
cmc
faddl
add
cmpsl
push
cmc
lcall
clc
pop
add
push
push
call
pop
add
cli
add
jne
add
add
jmp
jno
mov
mov
lods
out
lahf
add
add
scas
xchg
pop
test
mov
add
mov
icebp
mov
add
ret
add
add
push
push
call
add
mov
add
lcall
add
add
stc
add
lods
xchg
cmpl
sub
lcall
ret
xor
inc
and
adc
ficoml
push
push
call
lea
add
int
jb
add
add
add
add
push
arpl
cld
lcall
pop
xchg
enter
add
add
add
jl
mov
filds
div
jbe
rolb
mov
test
xchg
add
pop
mov
push
loop
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
aam
cmpsb
add
addl
in
mov
add
into
push
add
pop
mov
fisubs
add
add
mov
addr16
into
iret
add
scas
jmp
add
lea
add
lcall
adc
push
push
push
push
push
push
lea
push
push
call
mov
js
xchg
add
jae
add
test
add
add
mov
loope
add
mov
xchg
add
mov
add
test
add
les
incb
les
lea
pop
mov
push
push
push
push
lea
push
push
push
push
call
add
add
repnz
add
jecxz
lock
add
sub
add
mov
cltd
add
push
rcrb
jns
faddl
cltd
mov
add
fildl
in
add
xchg
std
arpl
mov
add
mov
in
in
xor
push
push
push
push
push
push
push
push
call
roll
mov
mov
out
jl
xchg
mov
outsl
test
popa
mov
or
popa
fs
mov
ja
filds
popf
add
mov
add
test
add
mov
sub
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
sahf
stos
test
add
jecxz
jl
add
data16
cli
mov
mov
add
add
neg
loope
in
testb
loopne
add
add
sub
pop
add
push
not
not
dec
pop
add
mov
push
push
not
rol
push
or
not
add
sub
xor
add
pop
add
add
pop
push
shl
pop
pushl
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
aam
testl
mov
js
xchg
lret
rcrb
add
jge
add
aam
mov
add
in
fdivr
lcall
lcall
push
call
leave
add
add
add
in
add
lret
add
pushf
add
pop
add
lret
add
shll
xlat
mov
add
add
add
clc
stos
mov
fstps
insb
add
add
and
add
ss
push
or
inc
add
ror
sub
xor
pop
add
add
add
shr
pop
push
lea
push
push
call
loope
lods
add
faddl
mov
lret
or
sti
pop
fs
push
in
ret
add
mov
add
mov
push
add
add
lock
int
cmpb
js
lahf
movsl
add
lcall
push
push
lea
push
push
push
push
call
sbb
add
int3
push
test
lret
into
pop
add
out
add
push
xchg
pusha
jge
add
add
add
add
add
add
cmpsb
mov
outsl
add
pop
add
pop
mov
add
fiaddl
jl
add
sub
pop
call
push
lea
push
call
mov
add
jmp
nop
loopne
outsl
cld
iret
add
push
add
push
mov
jnp
jmp
divl
add
scas
add
xchg
add
lock
out
mov
clc
push
lea
push
lea
push
push
push
push
lea
push
call
imul
out
pop
icebp
add
add
lret
jno
jge
icebp
stc
add
add
mov
fcomip
mov
add
add
add
push
push
lea
push
call
add
jne
add
xchg
lret
pushf
add
popf
cli
imul
std
popa
pushf
in
repnz
xlat
add
shrb
mov
pop
mov
add
add
out
scas
outsl
mov
add
mov
leave
xchg
loopne
lods
add
add
lea
add
lcall
push
push
push
push
push
push
push
push
push
call
add
add
mov
sti
add
add
hlt
mov
add
int
jle
add
lcall
pop
hlt
push
shr
rol
rol
pop
add
push
lea
push
lea
push
call
aam
add
add
push
add
push
lock
add
lcall
fadd
mov
scas
loop
fbld
add
jae
fiaddl
add
add
jae
jne
in
hlt
lcall
ret
add
add
add
push
push
push
push
push
lea
push
push
push
call
scas
pop
mov
mov
push
add
in
sbb
add
add
clc
mov
jnp
add
stos
cmpsb
add
add
cltd
loop
add
cwtl
add
mov
sbbl
add
add
add
notb
lcall
jae
push
push
push
push
lea
push
lea
push
call
add
add
pop
add
cmpsl
imul
cltd
js
jae
out
rolb
jno
repnz
add
add
in
stos
pop
push
add
enter
mov
sarb
add
add
add
ljmp
sub
pop
xor
push
push
push
push
push
push
push
push
call
cltd
aam
add
lea
out
add
cltd
mov
cmc
add
jbe
fmul
popa
cltd
stos
add
rcrb
add
add
fadds
shrb
add
add
add
add
scas
orl
stos
xchg
lds
scas
add
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
pop
add
add
add
scas
fistpll
int3
mov
add
pop
add
xchg
fisubrs
add
iret
out
mov
repnz
fwait
xchg
ljmp
mov
add
aam
xchg
add
rolb
insb
add
bound
fcomip
add
sub
pop
add
push
push
push
push
push
push
push
push
call
out
add
add
rcr
fs
test
roll
add
ficomps
enter
xorb
mov
leave
push
add
ljmp
mov
push
push
push
push
lea
push
push
push
push
push
push
call
ret
lret
addl
mov
test
loop
add
push
add
js
iret
add
add
stc
fwait
mov
add
push
mov
cmc
add
add
mov
lcall
add
push
push
push
push
lea
push
lea
push
push
push
push
push
call
jge
cld
jns
imul
push
iret
add
test
add
stc
imul
mov
add
out
faddl
gs
sar
std
add
add
je
add
add
jbe
add
jae
jecxz
pop
mov
add
sub
pop
add
push
push
push
lea
push
lea
push
push
push
call
cwtl
add
jno
add
icebp
outsl
xchg
cmpsl
add
mov
outsl
xchg
jl
testl
jnp
add
mov
add
jp
add
lock
icebp
add
cmpsb
roll
add
add
add
add
add
roll
mov
add
stos
sub
pop
add
push
add
ror
lea
dec
pop
pop
mov
xor
push
shl
not
pop
rep
mov
xor
push
push
push
push
push
push
push
push
push
call
loopne
mov
mov
add
xchg
movsl
add
les
add
pop
add
pop
ret
add
add
mov
out
mov
add
test
loopne
mov
add
cmpsb
add
add
enter
in
fdivr
lcall
leave
je
push
push
push
push
call
pop
add
ja
testl
mov
insb
fnsave
enter
imul
jae
add
fsincos
add
mov
stc
mov
add
aad
outsl
test
bound
call
in
add
in
lock
lcall
xor
jno
adc
mov
and
jmp
popa
add
add
pusha
add
jbe
sti
add
jns
add
add
add
hlt
pop
xor
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
je
mov
add
rolb
cld
lds
lds
add
pushf
cltd
js
xchg
movsb
popa
sahf
add
add
add
shll
arpl
push
xchg
cwtl
mov
andl
out
add
les
add
push
push
call
pop
add
pop
loope
mov
mov
std
push
pop
stc
rcrb
add
idiv
call
add
xchg
roll
je
sarb
mov
icebp
out
ja
out
nop
repnz
pop
add
push
movsl
loope
lds
clc
repnz
add
rorl
xchg
add
add
add
xchg
xchg
jno
add
push
sbb
jno
adc
hlt
aaa
push
cmp
push
call
stc
outsl
mov
mov
stc
add
mov
mov
scas
lahf
lret
add
fimull
sahf
in
add
add
add
test
jl
add
adc
push
push
push
call
add
add
add
pop
push
icebp
mov
add
add
pop
stos
add
pusha
add
mov
add
add
icebp
add
xchg
add
add
add
mov
loop
jb
mov
push
add
add
push
add
pop
add
push
sub
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
lods
faddl
jmp
insb
andb
jno
lahf
leave
iret
add
xchg
icebp
add
add
fwait
add
add
push
rol
pop
push
push
push
call
lods
pop
add
lds
roll
scas
aam
out
add
cld
nop
add
mov
add
pushf
lret
push
iret
fsubrs
add
add
add
add
gs
repnz
jmp
gs
add
add
mov
in
iret
xchg
pop
lcall
faddl
add
mov
add
sub
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
shll
mov
lock
jbe
pop
lret
add
xchg
cmc
mov
lea
add
add
les
movb
xchg
add
xchg
int
cmc
les
lcall
add
push
push
push
lea
push
call
add
test
mov
int
add
shl
add
add
add
lcall
lret
sub
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
call
add
rolb
add
lret
add
mov
jge
add
mov
add
lea
cmp
add
jge
insb
add
pop
add
add
push
push
lea
push
push
push
call
shr
add
xchg
add
loopne
ficoms
stc
fmul
mov
push
imul
fcmovnb
lock
mov
test
mov
jns
jns
add
add
add
mov
add
call
add
cmpsl
mov
sahf
ret
ljmp
pop
pop
push
ror
pop
rep
mov
xor
push
xor
sub
sub
pop
or
je
mov
push
push
lea
push
lea
push
push
call
add
push
add
sti
loope
jge
test
int
add
ja
into
jle
mov
loop
add
mov
add
sti
fildl
in
nop
mov
test
mov
movsb
xchg
push
add
fildl
mov
add
add
test
bound
lock
add
pop
lock
andb
add
sub
movb
add
push
shl
shr
sub
shl
pop
rep
push
shl
pop
pop
push
push
shr
sub
push
sub
add
inc
not
xor
sub
sub
sub
pop
ror
pop
push
lea
pop
pop
push
sub
pop
mov
mov
push
push
lea
push
push
lea
push
call
scas
add
jae
subl
add
jae
iret
rclb
jno
popa
add
add
add
add
testb
xchg
test
xchg
lock
jne
push
add
add
int3
add
add
lds
inc
and
jmp
push
ror
pop
push
push
lea
push
push
push
lea
push
push
call
fldcw
mov
into
fistpl
mov
pop
rcl
imull
leave
test
sarl
add
mov
addl
jbe
xchg
add
pop
push
add
pop
sub
pop
mov
add
push
push
push
call
mov
add
add
sti
stos
push
std
sar
lods
add
add
add
add
aam
add
int3
fcmovne
clc
sub
pop
push
push
push
not
pop
push
push
push
push
push
push
push
push
push
call
mov
add
add
lahf
mov
add
add
lds
stos
add
add
popa
addb
add
test
add
cmpsl
add
lcall
inc
cld
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
add
clc
addl
lds
lods
push
pop
int
pop
data16
xchg
mov
add
add
push
insb
test
enter
imul
add
sahf
and
add
jp
push
cld
add
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
jmp
jle
add
add
stos
add
addl
std
add
movsl
aad
add
pop
jne
add
add
add
xchg
add
mov
xchg
mov
addl
mov
out
mov
pop
add
add
pop
pop
pop
push
push
push
call
add
add
xchg
jl
sub
int3
add
add
scas
xchg
xchg
add
add
xlat
add
idivb
pop
xchg
cwtl
mov
add
out
sahf
lret
repnz
jbe
add
add
pop
sub
pop
pop
push
sub
shr
add
pop
leave
push
push
push
call
lcall
add
add
jmp
incb
pop
push
add
mov
xchg
lock
enter
add
add
add
scas
add
int
scas
jl
out
xchg
ljmp
xchg
pop
leave
add
in
gs
add
in
hlt
pop
ret
push
lea
push
push
lea
push
push
push
push
call
add
add
rcll
push
fwait
popa
jl
mov
loop
cmpsb
pop
stos
lret
ret
xchg
test
mov
cli
leave
fsubl
in
add
lcall
mov
push
dec
pop
add
push
add
shr
dec
sub
pop
push
push
dec
sub
pop
push
push
lea
xor
add
pop
push
push
push
lea
push
call
ljmp
add
add
add
push
add
mov
gs
add
int
out
mov
add
add
jecxz
pop
add
ret
clc
add
add
add
in
add
add
add
add
push
add
add
add
pop
push
push
add
lea
shr
pop
movl
addl
push
inc
add
pop
test
je
mov
push
dec
shr
shl
pop
pop
push
rol
pop
pop
push
push
push
lea
push
push
call
std
test
ljmp
xchg
add
in
add
add
mov
out
rcr
outsl
add
pop
mov
int3
loop
js
pop
jne
push
lock
add
add
out
add
add
add
add
add
add
push
add
idivl
test
xchg
add
lcall
push
lea
push
lea
push
call
add
jmp
addr16
add
leave
add
add
add
test
add
stos
mov
add
pop
mov
add
add
add
mov
push
sbb
mov
mov
add
loop
mov
data16
testl
pop
push
add
pop
leave
push
dec
inc
pop
ret
push
shr
add
shl
add
pop
push
push
ror
dec
ror
pop
mov
push
push
lea
push
push
lea
push
call
add
sar
xchg
testb
add
add
add
add
add
mov
movsl
pushf
mov
fdivs
lock
push
add
push
add
add
int
rcll
add
add
add
xchg
imul
in
lcall
cld
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
rolb
add
xchg
add
lock
mov
xchg
cli
stos
mul
jo
test
pushf
add
xlat
add
retw
jne
data16
sub
pop
push
push
push
dec
ror
shl
add
pop
push
push
push
push
push
push
push
push
call
test
add
xchg
add
jno
add
mov
fiaddl
movsl
add
mov
jb
add
data16
mov
mov
jns
aad
jle
jno
add
mov
sub
pop
testl
push
push
push
push
push
call
ja
add
hlt
mov
jmp
jle
mov
add
add
popl
mov
add
add
mov
cwtl
jno
add
mov
loope
lahf
add
mov
jbe
add
lcall
inc
or
push
push
xor
rol
inc
lea
pop
call
push
sub
xor
shl
sub
pop
mov
push
inc
xor
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
stc
popf
jle
out
add
imul
push
ja
pop
enter
add
add
add
add
mov
fsubl
bnd
loopne
ljmp
pop
jmp
mov
loop
mov
add
mov
testl
in
push
push
add
inc
pop
call
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
stos
fldt
mov
popf
enter
add
add
test
cwtl
in
add
add
lods
add
add
call
add
jle
pop
mov
mov
cmc
add
fwait
ror
mov
lods
add
add
roll
jge
add
test
lcall
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
mov
push
jb
add
into
add
icebp
push
lods
fiaddl
add
add
add
push
add
add
add
fldenv
ror
pop
pop
add
add
mov
xchg
jae
xchg
add
add
add
xchg
in
fcompl
pop
push
inc
add
lea
shr
pop
pop
push
inc
pop
leave
push
xor
rol
pop
ret
push
shr
xor
pop
push
push
sub
add
add
pop
mov
push
push
push
push
call
jmp
jo
call
aad
jne
xor
pop
add
add
sahf
ljmp
add
mov
lcall
cld
push
rol
add
pop
push
push
sub
pop
push
push
push
shr
sub
pop
push
push
sub
pop
movl
push
add
inc
pop
push
push
push
push
call
add
add
mov
fs
lahf
out
add
mov
idiv
add
add
hlt
push
repnz
push
add
mov
fldcw
shll
jl
jmp
pop
add
add
add
outsl
test
xchg
push
lock
push
push
movsb
mov
add
mov
pushf
add
sub
pop
call
push
push
lea
push
push
lea
push
lea
push
call
in
mov
jmp
mov
mov
loopne
stos
add
fistl
je
arpl
pop
add
shl
mov
rolb
sti
call
mov
mov
add
mov
jp
movsl
add
fists
fsubrs
stos
clc
lea
add
ja
lret
mov
in
ljmp
xchg
mov
jns
mov
fs
add
add
lret
lods
add
add
int
jle
movl
lcall
insl
cld
add
das
xchg
cltd
jns
inc
push
push
push
push
call
jne
testl
loop
mov
out
add
add
jbe
insb
lds
hlt
add
addl
leave
add
cltd
popf
add
mov
push
in
loopne
cmpl
jne
pop
push
xor
not
pop
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
call
pusha
flds
add
add
add
enter
cltd
add
cltd
stos
add
push
test
add
jbe
imul
andb
mov
pop
add
lods
pop
je
add
add
add
insb
lock
add
in
in
pop
push
push
push
lea
push
call
add
add
shlw
xchg
into
outsl
scas
add
push
mov
in
add
in
lock
lcall
push
inc
pop
ret
push
inc
pop
push
push
shl
sub
add
lea
pop
mov
push
push
lea
push
lea
push
lea
push
lea
push
call
rolb
add
fnstenv
scas
xchg
mov
cmpsl
stos
out
mov
insb
into
addb
add
orl
add
faddl
mov
iret
lods
add
std
idivb
push
outsl
call
int3
add
add
test
add
lcall
cld
push
push
xor
lea
pop
push
push
push
lea
push
push
lea
push
lea
push
call
push
add
add
add
jmp
jbe
add
add
add
add
out
mov
stos
mov
into
lret
pop
pushf
rolb
add
add
add
xchg
mov
sti
xlat
add
loopne
add
jno
mov
lcall
push
push
push
push
push
push
push
push
call
shlb
insb
add
lahf
roll
loop
je
xchg
add
mov
pop
add
fadds
test
out
push
ficompl
shlb
jmp
xchg
sub
pop
mov
push
rol
add
pop
lea
push
push
push
push
lea
push
call
add
add
lahf
mov
jbe
add
mov
roll
add
add
add
add
testl
stc
add
imul
push
jbe
test
jne
xchg
pop
in
aad
add
hlt
add
add
clc
add
add
xchg
jo
cmpl
jno
pop
add
hlt
add
call
pop
mov
shr
push
lea
push
push
push
push
push
push
call
divl
or
add
add
cli
add
lock
add
jne
add
jmp
insb
mov
add
push
lods
push
add
shlb
add
add
add
iret
imul
add
mov
add
gs
add
mov
inc
or
inc
cld
push
pop
mov
push
xor
pop
add
push
push
call
insb
movl
in
add
pop
add
icebp
mov
push
mov
add
push
add
outsl
roll
add
mov
ret
add
add
push
test
andl
ja
pop
add
pusha
add
fldl
jae
fiaddl
sub
pop
add
mov
push
add
shl
dec
sub
pop
mov
cmp
jne
push
lea
push
lea
push
call
jo
in
push
call
xchg
add
in
add
add
xchg
mov
add
xchg
add
pop
pop
fwait
add
add
add
lcall
cwtl
fadds
add
jne
push
xor
xor
sub
pop
mov
push
dec
rol
lea
add
pop
movl
push
push
call
add
fstpt
push
rclb
jnp
add
add
loope
add
mov
arpl
addl
add
stos
popf
add
add
gs
mov
add
test
add
mov
mov
jnp
in
clc
pop
jmp
push
add
inc
lea
pop
mov
mov
push
pop
sub
jne
push
rol
shl
pop
mov
push
push
call
jb
mov
push
stos
add
into
nop
jo
scas
add
add
out
into
mov
add
add
bound
add
add
mov
popl
add
add
pop
movl
jmp
push
add
sub
not
pop
mov
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
out
add
add
push
add
loopne
add
addl
add
add
mov
stos
add
scas
add
in
aam
add
mov
add
push
add
add
cmpsb
test
mov
add
pop
mov
push
out
add
xchg
mov
add
lcall
nop
mov
add
cmp
jne
push
push
lea
push
call
add
add
push
xchg
add
out
out
xchg
rcrb
add
add
add
fadds
test
test
aam
add
xchg
pop
mov
add
add
add
lods
sub
pop
mov
push
ror
dec
sub
pop
movl
jmp
push
lea
push
push
push
push
push
lea
push
call
lea
add
add
add
add
je
cmpsb
gs
nop
add
add
movl
mov
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
gs
loopne
sti
pop
mov
add
add
mov
lret
push
mov
add
pop
cmpw
jne
mov
push
push
push
push
lea
push
push
push
push
push
push
call
add
pop
movsl
nop
add
xchg
push
add
addl
stos
push
push
xchg
into
or
add
add
nop
in
add
push
sub
pop
movl
jmp
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
cmpsb
jl
scas
andb
jl
mov
pop
add
scas
add
loopne
add
fildl
mov
mov
rcrb
add
push
add
xchg
add
add
add
lret
in
mov
sti
mov
xchg
add
in
add
pop
add
rorl
add
out
push
mov
loop
mov
sub
pop
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
nop
leave
loope
add
int3
ljmp
add
mov
add
add
add
add
add
cwtl
jge
into
add
loop
xchg
into
movsb
xchg
xchg
mov
add
je
enter
jo
iret
add
mov
in
fdivr
lcall
mov
push
push
lea
push
push
push
push
push
call
aad
jne
pop
push
add
imul
mov
add
add
add
add
add
add
add
test
lcall
inc
sbb
lea
push
lea
push
push
push
push
call
push
add
xlat
mov
lds
add
add
add
jmp
addb
add
add
bound
add
test
add
cli
mov
add
rorb
add
in
add
add
aad
fcomps
pop
add
add
add
movsb
add
sub
pop
mov
push
push
lea
xor
add
push
push
pop
add
dec
add
not
sub
sub
shl
add
pop
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
call
in
mov
add
lds
push
fisubrl
filds
mov
pop
add
jge
add
enter
loop
ficoms
add
cltd
add
pop
add
push
not
shr
pop
call
push
inc
add
pop
cmpl
je
push
push
lea
inc
lea
push
xor
add
sub
lea
sub
pop
lea
shl
not
pop
push
shl
sub
ror
pop
push
push
push
push
lea
push
push
lea
push
push
call
mov
add
push
pop
roll
fcomip
add
ficomps
stos
cwtl
shll
pop
sti
popa
add
popl
lcall
and
lea
push
push
push
lea
push
lea
push
push
lea
push
call
jns
test
pop
jns
jo
add
int3
out
mov
mov
add
add
pop
mov
scas
push
lret
add
add
add
add
add
nop
mov
lods
add
mov
mov
in
loopne
lcall
js
int3
fldz
ret
ljmp
test
not
push
or
not
add
ror
inc
not
sub
sub
pop
ror
shr
shl
add
pop
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
xorb
mov
bound
add
leave
add
mov
add
ljmp
add
xchg
mov
sti
fiadds
xchg
outsl
add
sub
pop
push
push
push
lea
push
lea
push
push
call
mov
imul
add
arpl
jmp
cmpsl
mov
add
lahf
lock
add
addb
cld
push
pop
sti
lods
flds
aad
xlat
add
mov
jmp
xchg
add
jo
add
xchg
stc
add
add
add
lcall
test
cmp
add
int3
je
push
push
shl
push
and
add
inc
sub
dec
sub
sub
add
shr
pop
shl
pop
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
xchg
stos
add
add
clc
ret
sbb
add
add
test
mov
movsl
repnz
fiaddl
out
add
add
add
mov
add
add
flds
add
add
cwtl
jmp
call
lcall
call
push
push
push
lea
push
push
push
call
add
lds
mov
add
out
add
add
add
enter
lds
mov
xchg
roll
fstp
push
shrl
add
add
in
addb
nop
popa
add
add
lds
addr16
xlat
add
add
lahf
sub
pop
cmpl
je
push
push
inc
sub
push
and
add
shr
shr
ror
sub
pop
shr
shr
ror
pop
push
lea
sub
sub
pop
push
push
push
push
push
push
call
push
add
add
popf
add
add
add
bound
filds
add
add
je
out
out
add
js
js
test
add
add
movsb
push
add
movsl
bound
lcall
fsubrs
add
cmpl
je
push
push
not
inc
shl
ror
push
xor
add
ror
lea
sub
sub
sub
pop
sub
rol
pop
push
shl
pop
push
push
ror
add
rol
shl
pop
call
push
push
push
push
call
xchg
xchg
mov
add
add
mov
nop
add
push
stos
popa
add
add
mov
add
lock
cmpl
je
push
push
not
lea
rol
push
push
pop
add
lea
dec
sub
rol
shr
lea
pop
pop
push
push
push
push
push
call
add
jnp
add
add
mov
add
mov
lcall
add
lahf
fstp
scas
addr16
sahf
lret
lock
add
bound
scas
jle
test
call
in
in
lcall
call
push
add
ror
lea
pop
cmpl
je
push
push
xor
push
sub
add
lea
add
sub
sub
dec
add
pop
sub
pop
push
shl
lea
pop
push
call
push
add
rol
pop
cmpl
je
push
push
not
push
or
inc
add
lea
sub
sub
not
xor
pop
pop
push
ror
rol
pop
push
push
push
push
lea
push
push
push
push
call
add
pusha
in
add
add
cmc
loopne
insb
movsb
add
jp
mov
popa
add
jnp
add
testb
mov
add
add
fwait
lods
sti
xorb
pop
call
push
pop
cmpl
je
push
push
shr
xor
push
push
pop
add
lea
inc
sub
inc
add
pop
sub
shr
shl
pop
push
xor
pop
push
push
push
lea
push
push
push
push
push
push
call
cwtl
add
lods
popf
add
mov
add
add
add
add
mov
add
add
add
sti
adcl
lods
scas
add
movsb
add
xchg
add
cli
add
in
loopne
lcall
sbb
iret
lea
pop
cmpl
je
push
push
add
add
lea
push
push
pop
add
sub
ror
not
sub
xor
pop
pop
push
lea
pop
push
push
dec
not
sub
pop
call
push
sub
pop
cmpl
je
push
push
lea
push
and
add
shr
add
sub
rol
inc
pop
sub
rol
pop
push
push
push
lea
push
push
call
fmul
add
mov
pop
add
add
add
add
fs
jle
lret
add
fwait
mov
add
add
mov
incb
inc
push
mov
sti
mov
jl
add
add
add
insb
testb
pop
push
call
push
shr
sub
pop
cmpl
je
push
push
dec
push
or
inc
add
inc
xor
xor
shr
sub
shr
sub
pop
ror
shl
shr
pop
push
not
sub
pop
push
push
pop
call
cmpl
jne
push
shl
shl
ror
pop
mov
push
xor
pop
movl
jmp
push
rol
shr
not
dec
pop
xor
push
lea
push
push
call
mov
mov
ljmp
filds
add
test
add
add
sbb
pushf
add
push
ror
add
pop
pop
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
mov
xchg
xchg
add
mov
add
ljmp
fists
add
fwait
roll
mov
arpl
add
add
sub
pop
pop
push
shr
not
pop
pop
push
sub
dec
not
pop
leave
push
shl
lea
pop
ret
push
push
push
lea
push
push
lea
push
call
xchg
loopne
add
fnstsw
add
lcall
mov
jge
add
aam
add
push
add
mov
add
add
fiadds
add
add
add
lock
out
add
test
add
xchg
add
lcall
in
add
push
sub
ror
lea
pop
cmpl
jne
push
push
shr
inc
sub
push
or
not
add
shr
xor
rol
ror
sub
rol
pop
lea
lea
add
shr
pop
push
push
push
push
push
push
lea
push
push
push
call
add
xchg
std
push
add
roll
add
les
cwtl
push
lahf
add
out
add
lds
add
mov
jp
pop
add
add
into
int
add
add
add
insb
pop
add
add
into
pop
add
push
nop
rol
pop
add
lcall
jne
call
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
add
xor
aam
mov
add
jl
cmpl
mov
add
in
fdivr
lcall
call
pop
call
jmp
push
push
lea
push
push
push
lea
push
call
testl
test
mov
jno
lea
stc
xchg
sti
fbstp
pop
add
fisttpll
addb
push
js
add
cmpsl
mov
loopne
pop
arpl
xchg
js
cmpsb
mov
add
mov
add
out
scas
add
add
fcmovnbe
arpl
mov
push
add
add
jge
add
test
add
add
rolb
pop
lea
shl
pop
cmpl
jne
push
add
dec
ror
pop
mov
push
shl
inc
not
not
pop
call
push
push
push
call
add
jae
cld
add
popf
fwait
enter
add
outsl
stos
jmp
rolb
jae
xchg
mov
rol
rcrl
add
mov
add
add
insb
cmpsl
fiaddl
test
enter
int
mov
cmpsb
sub
pop
ret
jmp
push
lea
push
push
push
push
call
add
fmul
insb
stos
lods
add
js
movsl
add
gs
push
mov
xchg
add
add
mov
add
sahf
leave
int
cli
mov
in
pop
cmpl
jne
push
push
push
push
pop
add
sub
sub
lea
xor
inc
add
pop
sub
shl
pop
push
push
lea
push
push
call
fdivrp
cld
add
add
test
scas
out
mov
add
test
add
mov
jne
jb
add
add
pushf
loope
test
jl
add
je
rolb
lcall
jne
push
add
inc
pop
call
push
push
push
push
call
movsb
jl
filds
enter
add
add
jmp
xchg
add
lret
add
popl
shll
add
add
cltd
pushf
enter
add
lcall
add
call
enter
inc
pop
call
jmp
push
add
pop
cmpl
jne
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
mov
add
push
std
mov
xchg
mov
add
idivb
mov
popa
add
loope
add
data16
addb
add
leave
add
xorl
add
add
add
fcoml
in
add
add
pop
add
mov
lret
lods
add
add
lcall
add
add
push
push
push
push
call
add
jbe
cmp
addl
jmp
orl
add
mov
add
jo
mov
jo
mov
add
xchg
outsl
push
fstps
jl
scas
pop
add
add
mov
lock
mov
push
sub
pop
push
push
push
sub
add
inc
rol
push
and
add
add
sub
rol
inc
pop
shr
pop
push
pop
pushl
push
dec
pop
call
call
push
push
shr
shl
push
xor
add
not
not
sub
shr
dec
add
pop
ror
dec
pop
push
shl
add
pop
pushl
push
sub
inc
pop
call
push
shr
sub
sub
pop
call
push
push
rol
inc
push
push
pop
add
ror
sub
sub
shr
pop
lea
shl
add
pop
push
add
sub
inc
pop
pushl
call
push
lea
shl
inc
pop
call
push
push
add
push
sub
add
sub
sub
add
pop
xor
sub
pop
push
push
push
lea
push
push
push
lea
push
push
call
xchg
xchg
mov
push
add
ret
add
add
add
testl
jl
add
mov
sti
push
addr16
test
mov
test
add
add
lret
add
in
mov
lcall
jne
call
push
sub
pop
call
push
push
lea
add
push
xor
add
sub
ror
lea
add
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
pop
add
test
add
nop
xchg
int
call
loopne
mov
lods
pop
add
testl
jecxz
sub
pop
pushl
call
push
push
push
call
loopne
hlt
cmpsb
lret
add
pushf
add
filds
push
mov
add
movsl
add
imul
iret
push
xchg
add
aam
filds
add
add
popf
imul
in
hlt
pop
call
push
push
rol
add
push
or
inc
add
inc
sub
add
sub
shl
shr
pop
xor
sub
pop
push
push
push
push
push
push
push
push
call
xchg
cli
xorl
leave
add
mov
fidivrl
add
sarl
pop
les
add
ljmp
add
add
add
sahf
aad
xorl
jne
push
lea
push
lea
push
lea
push
call
add
hlt
push
add
jbe
add
js
cmpsb
adcb
pushf
jno
add
mov
add
int3
jno
in
lock
call
push
pop
call
push
push
add
push
or
not
add
sub
sub
add
rol
pop
ror
dec
ror
pop
push
dec
lea
pop
pushl
call
push
ror
shr
pop
call
push
push
add
add
ror
push
or
not
add
inc
sub
sub
shr
pop
sub
inc
pop
push
push
call
pop
add
xchg
lea
test
add
jle
add
mov
push
xchg
add
mov
add
add
add
add
add
repnz
fadd
add
cli
push
add
add
lcall
sub
pop
pushl
call
push
shr
add
shl
not
pop
call
push
push
shr
push
or
not
add
inc
sub
ror
pop
sub
not
lea
not
pop
push
shl
pop
pushl
call
push
sub
sub
pop
call
push
push
shr
rol
push
and
add
add
sub
rol
pop
ror
shr
pop
push
push
push
push
push
push
push
lea
push
push
call
aad
mov
add
cli
cli
pop
add
xchg
loop
cmpsl
int3
add
in
add
add
fldl
add
stos
add
aad
add
cmpsb
sahf
add
cltd
add
add
add
jne
lods
iret
add
add
popf
add
movsb
test
add
xchg
add
pop
sub
pop
pushl
call
push
push
push
lea
push
call
add
add
sahf
add
cwtl
add
fnstsw
ficoml
xchg
test
pop
add
clc
add
test
pop
push
add
jp
jle
push
out
jo
test
mov
pop
jp
add
jns
in
lock
lcall
pushf
and
call
push
lea
push
push
push
push
push
push
push
call
out
imul
jae
add
stc
xorb
add
add
add
mov
fidivl
lods
add
push
insb
iret
sub
pop
call
push
push
add
lea
push
push
pop
add
xor
sub
not
pop
lea
pop
push
push
push
push
push
push
push
lea
push
call
fcmove
sar
push
mov
rolb
mov
mov
insb
mov
mov
add
out
add
mov
iret
add
testl
js
add
imul
jp
pop
jo
xchg
mov
jl
flds
scas
popa
sub
pop
pushl
call
push
add
pop
call
push
push
ror
lea
add
push
or
inc
add
rol
sub
shr
xor
pop
add
shl
pop
push
ror
dec
pop
pushl
push
shl
ror
xor
ror
pop
call
call
push
push
not
shr
push
push
pop
add
sub
add
lea
shr
lea
pop
sub
rol
sub
pop
push
dec
lea
shr
pop
pushl
call
push
push
call
add
mov
add
insb
add
fiaddl
add
cmpsl
imul
add
mov
pop
cld
mov
ret
in
clc
pop
call
push
push
dec
shl
sub
push
xor
add
lea
xor
sub
inc
shl
not
pop
add
add
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
stos
add
push
rolb
add
nop
add
xchg
pop
add
movsl
add
jo
int
add
jo
add
push
jae
add
lds
add
add
push
clc
add
gs
add
lds
mov
pop
pushl
push
lea
push
push
lea
push
push
push
lea
push
call
jne
out
push
add
add
add
add
push
add
data16
add
stos
add
jbe
out
add
mov
add
cli
enter
rclb
add
popa
imul
add
add
jae
add
sub
pop
call
push
push
shl
shl
push
push
pop
add
sub
sub
shr
pop
sub
add
pop
push
push
shr
push
or
inc
add
add
sub
lea
sub
shr
pop
add
shl
pop
push
shl
lea
pop
call
push
lea
push
push
push
lea
push
call
add
add
add
add
arpl
add
add
data16
add
push
lret
push
lods
add
add
fildl
cltd
outsl
rcr
add
enter
fiaddl
xchg
add
add
jbe
popa
cmc
stc
xchg
add
add
jl
out
pusha
jo
push
lret
cli
cwtl
add
test
cmc
loopne
popa
add
jo
in
in
pop
pop
push
shr
pop
dec
jne
push
push
push
or
not
add
inc
add
sub
dec
xor
pop
lea
pop
push
shr
pop
pushl
push
add
pop
call
lea
push
sub
rol
shl
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
in
mov
in
stos
scas
int3
clc
add
add
lock
xchg
add
flds
pop
add
add
stos
push
scas
add
flds
add
lcall
lcall
add
rorb
test
dec
add
add
push
mov
add
add
movsl
loope
js
or
addl
add
in
add
add
jle
jecxz
mov
add
jb
mov
xchg
add
cli
add
lods
add
add
mov
sub
pop
push
push
push
push
call
int
aam
popl
js
xchg
mov
clc
xchg
leave
add
add
testl
flds
test
add
xchg
add
push
ret
push
cmpsl
fildl
mov
jp
add
add
cmpsl
add
ret
add
sub
pop
call
call
push
push
shl
sub
push
or
not
add
shr
sub
sub
not
pop
sub
pop
push
inc
pop
pushl
push
push
push
push
lea
push
push
push
call
add
mov
add
fcomps
arpl
mov
fsubr
cld
add
aam
faddl
pushf
mov
add
ja
add
idivb
jnp
add
add
mov
mov
lods
lods
loope
pushf
add
push
add
arpl
arpl
shl
add
incb
sbb
add
push
push
push
push
call
rolb
pop
cwtl
add
push
add
scas
leave
leave
mov
add
add
mov
add
add
add
add
ret
add
add
add
jl
xchg
add
sub
pop
push
call
push
lea
push
push
lea
push
push
push
push
call
xchg
out
add
add
add
jns
stos
test
add
out
xchg
add
cwtl
push
fisubs
int3
add
jl
nop
xchg
lcall
sbb
add
incb
add
add
sub
pop
mov
push
push
sub
sub
push
or
not
add
add
add
sub
sub
ror
pop
not
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
icebp
sbbb
mov
add
xchg
mov
movsb
stos
add
add
xchg
mov
in
filds
roll
add
cwtl
in
add
add
add
xchg
jns
add
stc
add
mov
lcall
jne
push
add
sub
pop
call
push
lea
pop
lea
push
push
push
call
add
mov
push
add
add
add
add
add
add
rolb
add
pop
add
pop
pop
add
icebp
imul
movsl
cmc
add
lcall
add
mov
enter
push
lea
push
push
push
push
push
push
call
mov
add
mulb
add
aad
in
add
add
mov
add
add
jecxz
add
add
roll
add
add
bound
sub
pop
push
push
ror
sub
pop
push
call
push
sub
pop
lea
push
push
inc
push
or
inc
add
shl
sub
pop
add
rol
pop
push
push
push
push
push
push
push
push
call
mov
mov
nop
roll
jne
push
fiadds
add
pusha
add
add
cmc
add
mov
xchg
add
ret
add
imul
add
ficoms
add
movsl
cltd
add
push
jecxz
sub
pop
pushl
push
dec
add
pop
call
push
push
push
push
push
push
push
push
lea
push
push
lea
push
call
xchg
testb
add
in
xchg
mov
clc
mov
orl
icebp
add
add
add
add
outsl
add
add
add
je
add
add
movsl
add
mov
lcall
shrb
dec
notb
dec
push
or
not
add
add
shl
not
sub
lea
rol
pop
sub
pop
push
xor
ror
pop
pushl
push
push
push
call
pop
cld
fadds
add
add
mov
add
mov
add
pop
add
ret
insb
ja
add
add
jnp
add
add
mov
add
add
scas
adcl
addb
pop
call
push
push
push
push
push
push
push
call
fimuls
mov
ficomps
add
enter
add
add
add
add
fbld
add
add
bound
add
pop
testb
lcall
rclb
ret
mov
lea
push
push
shl
push
sub
add
ror
sub
add
shr
pop
xor
inc
sub
pop
push
shr
inc
dec
pop
pushl
push
push
push
push
call
add
add
add
jb
xchg
add
lods
add
xchg
test
shll
notl
add
add
add
nop
loopne
add
add
jle
pop
fisubs
lock
lcall
jo
add
lea
push
dec
pop
push
push
push
push
push
call
decb
mov
add
ficompl
sahf
add
or
mov
add
loop
cwtl
add
arpl
pop
push
push
push
ror
not
not
pop
pushl
push
push
push
and
add
shl
sub
not
pop
add
pop
push
push
push
call
je
insb
cli
jo
ret
add
mov
add
fimull
add
int3
mov
cltd
call
add
repnz
add
jle
mov
add
add
mov
add
add
cld
popf
fwait
add
mov
roll
add
add
sub
pop
push
call
push
push
sub
push
xor
add
add
add
shl
sub
sub
pop
dec
pop
push
add
inc
xor
pop
pushl
call
push
push
push
push
call
add
out
add
pop
shlb
rclb
add
add
pop
xchg
add
mov
add
out
add
test
lret
movsb
movsl
test
push
int3
aad
add
fcompl
push
add
add
mov
mov
lock
lcall
call
mov
mov
push
push
push
push
push
push
call
cmpb
add
lret
movsl
rclb
fdivp
cmpl
cli
add
add
outsl
add
cli
icebp
mov
mov
js
clc
add
xchg
je
add
lods
int3
add
add
add
shrb
fmull
jmp
push
or
inc
add
add
lea
sub
pop
sub
sub
dec
dec
pop
push
push
lea
push
push
push
push
call
add
fwait
cltd
in
add
std
add
out
int
add
movsl
sti
push
mov
pushf
pop
add
add
add
movsl
add
pop
add
int3
add
mov
adc
add
add
mov
lcall
loopne
push
mov
lods
pop
xchg
add
lcall
jne
push
not
inc
inc
pop
call
push
inc
xor
lea
pop
call
push
shr
pop
jmp
push
push
push
push
push
lea
push
lea
push
call
xchg
loopne
aam
add
add
mov
push
push
add
scas
push
lds
clc
notl
hlt
leave
add
add
pop
add
cld
add
imul
cmc
cltd
adcl
icebp
sti
add
add
mov
add
xchg
sub
pop
pushl
mov
push
dec
pop
jmp
push
push
shr
not
add
push
sub
add
xor
dec
rol
sub
dec
add
pop
shr
pop
push
add
pop
pushl
call
push
sub
shr
add
pop
push
push
push
push
call
add
repnz
add
mov
add
jmp
push
aam
mov
mov
cmc
add
cli
push
add
add
fcomp
shlb
mov
cmpl
shrb
or
xlat
push
add
inc
shl
push
and
add
xor
rol
sub
not
sub
add
pop
sub
pop
push
push
push
call
add
jp
pop
add
lret
nop
add
add
add
sti
push
add
arpl
pop
add
mov
add
add
outsl
cmpsb
mov
call
cld
add
mov
lods
popf
xchg
cwtl
add
js
lock
movl
add
lcall
jne
call
push
push
call
je
add
add
addl
mov
add
xchg
outsl
mov
jo
stos
stos
mov
mov
popl
fs
testb
lahf
popf
xchg
pusha
mov
add
add
pop
push
call
push
shl
not
rol
pop
leave
push
ror
pop
add
pop
push
push
push
push
push
push
push
push
call
pop
ret
in
mov
add
aad
add
stc
push
mov
fadd
add
add
pop
pop
push
push
lea
push
push
lea
push
push
push
push
call
out
fcmovu
add
add
stos
cwtl
jo
xchg
jge
add
sbbb
fiadds
lcall
xchg
movb
jmp
add
add
je
insb
stos
test
hlt
rclb
scas
lret
test
pop
push
sub
shr
pop
xor
push
xor
pop
inc
push
push
push
push
lea
push
push
lea
push
call
je
add
aad
cli
lock
ror
fadds
xchg
pop
loope
add
shlb
mov
pop
enter
mov
add
add
lds
out
mov
pop
add
xchg
lds
add
or
push
lea
push
push
lea
push
push
push
call
add
add
add
pop
lds
icebp
add
push
fisubl
test
add
lea
add
jno
jecxz
repnz
add
add
add
add
cli
mov
add
add
fwait
add
jmp
scas
sub
pop
leave
ret
push
lea
push
push
push
push
push
push
push
call
add
push
mov
add
jnp
je
lahf
xchg
mov
ja
mov
add
loopne
add
add
add
test
jl
mov
jo
add
cld
mov
lcall
push
add
xor
pop
mov
push
shl
lea
pop
cmpl
jne
mov
push
dec
xor
pop
jmp
push
shl
pop
mov
and
push
lea
push
push
push
lea
push
push
push
push
call
add
aad
sti
jle
add
add
add
add
add
jno
stos
mov
je
sub
pop
xor
xor
push
ror
lea
pop
add
push
shl
pop
xor
push
push
push
push
push
push
lea
push
push
call
leave
add
jns
jl
addl
add
add
movsb
add
pusha
mov
add
test
mov
into
sub
pop
dec
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
pushf
in
add
add
scas
mov
ret
add
add
hlt
mov
stos
roll
mov
mov
pop
add
mov
add
roll
pop
sub
push
push
call
mov
call
cli
add
mov
ret
rolb
add
jo
add
loope
add
add
add
add
jb
add
lods
test
out
out
ror
flds
add
notl
xchg
add
add
add
mov
add
lcall
inc
add
add
push
add
pop
pushl
push
push
push
push
push
call
scas
add
add
xchg
add
scas
add
fiadds
test
add
add
add
fildl
xchg
push
add
loopne
add
sub
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
iret
mov
popl
mov
xchg
pop
jge
std
roll
lea
add
leave
add
lods
std
jnp
in
mov
mov
leave
adcb
rcl
mov
fcmovu
add
pop
sub
pop
sub
push
push
push
push
lea
push
lea
push
push
push
push
call
add
mov
mov
mov
xchg
loopne
addb
add
lcall
xchg
jo
mov
add
add
jns
add
loop
fcoml
push
push
add
xchg
incb
add
lcall
cmp
mov
decl
mov
lea
push
push
push
lea
push
push
push
push
call
add
add
xchg
sbbl
add
mov
mov
sahf
mov
pushf
add
insb
iret
mov
iret
cmc
add
add
push
call
int3
add
add
mov
add
jp
bound
jecxz
add
add
add
cmc
mov
add
in
fcompl
dec
cmp
jmp
or
add
add
add
movsb
pop
add
add
clc
testb
mov
jne
lcall
ret
add
insb
add
pop
popf
jnp
add
or
jmp
push
push
push
push
push
lea
push
lea
push
push
call
mov
arpl
add
add
add
loope
add
call
push
ljmp
gs
add
lret
jge
mov
xchg
cmc
mov
add
add
add
fiadds
add
icebp
mov
cmpsb
leave
ljmp
add
sarl
add
push
push
lea
push
push
push
call
add
faddp
leave
cmpsl
add
cld
mov
mov
rcrb
icebp
je
add
jmp
roll
add
popf
xchg
hlt
lret
add
movsl
add
add
pushf
jns
jmp
add
cmpsb
push
ret
add
js
pop
jnp
add
out
lock
add
test
add
push
add
in
in
pop
sub
pushl
push
sub
sub
not
pop
pop
shr
push
lea
push
lea
push
call
popa
cmpsl
mov
fadds
add
sub
add
lds
add
jl
mov
add
push
cli
xorb
add
pop
and
push
shl
dec
ror
pop
sub
push
pop
cmp
jne
push
shl
pop
leave
ret
push
push
push
call
ret
mov
push
add
push
mov
push
add
add
mov
iret
add
add
in
pushf
add
push
lds
je
icebp
into
push
add
hlt
shl
push
pop
out
sub
pop
push
push
add
add
add
pop
mov
push
rol
not
pop
add
push
push
push
lea
push
push
push
call
add
add
add
add
add
lods
loop
mov
out
push
lret
add
add
add
fisubs
pop
add
lcall
push
push
shr
pop
push
push
xor
xor
pop
push
push
push
push
push
push
push
push
push
push
call
scas
sbb
scas
add
in
jmp
add
add
add
xchg
fldl
aam
int3
loop
add
add
sub
pop
mov
lea
push
push
lea
push
push
call
add
xchg
push
mov
popf
aad
leave
shrl
ljmp
add
roll
add
lds
imul
add
js
add
push
lcall
add
push
add
jo
loope
add
add
out
fldl
stc
out
imull
notb
stos
mov
add
push
sub
pop
sub
mov
push
xor
pop
shr
add
push
not
xor
rol
pop
mov
add
push
push
call
add
rorb
add
jl
cltd
mov
push
mov
jo
mov
add
data16
out
mov
mov
in
clc
lcall
jnp
push
sub
xor
sub
not
pop
add
push
push
call
lcall
test
add
je
add
fiaddl
shl
jmp
mov
add
icebp
out
xorl
add
sti
fs
mov
lret
xchg
xchg
jbe
add
xchg
mov
jge
lret
mov
mov
add
fiaddl
add
in
clc
lcall
notb
aad
xchg
jg
mov
sub
pop
mov
push
push
push
push
lea
push
call
add
add
mov
notb
add
add
hlt
add
add
lock
add
mov
add
mov
add
xchg
add
push
push
add
push
add
sub
pop
and
push
pop
rol
push
shl
ror
not
pop
rol
xor
push
pop
inc
push
sub
pop
cmpb
jne
push
push
push
push
lea
push
lea
push
call
add
mov
add
push
out
add
imul
fldl
jmp
add
fwait
mov
jbe
jge
cwtl
add
add
repnz
add
incb
push
loop
pop
add
inc
pop
ss
cmp
je
push
ror
dec
xor
pop
add
push
push
lea
push
push
push
call
repnz
push
add
add
je
add
xlat
add
iret
add
add
add
aam
cld
lock
clc
sub
lds
sbbl
test
mov
movsb
add
lret
test
add
jnp
add
test
call
lsl
pop
xor
push
not
add
not
pop
pop
push
sub
shl
pop
pop
push
push
push
push
lea
push
call
add
lds
jb
mov
add
add
jle
repnz
add
jb
lock
gs
add
out
add
xchg
lret
mov
pop
test
add
stc
add
test
lret
test
in
in
pop
pop
push
lea
push
call
xchg
mov
jl
mov
stc
add
add
imul
in
sti
cld
add
mov
jmp
add
ljmp
test
stos
mov
out
add
add
loope
lcall
add
aad
mov
add
add
add
add
insb
shlb
loop
in
clc
lcall
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
mov
loope
add
rol
lea
add
xchg
fimull
mov
sahf
fistpl
add
add
rolb
lret
add
jp
ficoml
mov
add
ljmp
push
push
lea
push
lea
push
call
imul
mov
add
add
add
lret
jnp
lds
add
push
mov
test
in
lcall
or
push
push
push
call
add
movsl
enter
cmpsl
add
add
lods
icebp
add
add
add
push
add
addr16
repnz
fiaddl
lcall
push
adc
push
or
push
call
mov
add
push
add
fwait
add
add
add
add
in
add
in
add
jo
mov
add
jns
arpl
jecxz
fldl
mov
stos
mov
roll
cld
add
add
add
hlt
push
add
into
add
add
mov
ljmp
mov
push
sub
sub
inc
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
pop
add
enter
add
add
add
mov
jmp
enter
add
mov
stos
test
repnz
add
push
push
add
mull
push
lea
push
lea
push
push
push
push
lea
push
call
rclb
add
add
add
mov
enter
add
add
fsubl
add
loop
fwait
mov
xchg
jge
iret
add
add
scas
add
xchg
push
add
outsl
fnstenv
add
add
push
sti
cltd
add
add
mov
mul
lahf
imul
pop
pop
push
lea
push
lea
push
push
call
je
std
add
add
jmp
add
in
into
add
ja
mov
fistpl
ljmp
mov
add
add
sub
pop
call
push
push
push
lea
push
lea
push
push
call
leave
add
xchg
add
mov
iret
mov
hlt
mov
add
jno
lahf
lock
add
scas
outsl
add
add
add
jl
add
mov
in
call
push
push
add
shl
lea
pop
call
push
push
push
push
push
lea
push
lea
push
push
call
cmc
add
add
mov
push
lahf
mov
add
add
add
add
cwtl
mov
push
add
push
sarb
cli
pop
int
js
jo
add
roll
in
out
sbb
mov
negl
xchg
add
scas
push
mov
lcall
xor
push
push
push
push
call
add
mov
sti
pusha
addr16
jns
add
jp
add
add
aad
mov
add
add
pop
add
add
ret
add
lcall
push
shr
pop
pop
push
push
call
mov
xchg
bound
jns
pop
test
add
mov
add
add
add
jle
mov
in
add
shrb
xorb
in
clc
pop
pop
pop
push
inc
dec
dec
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
fs
shl
add
test
add
mov
add
add
add
add
sub
pop
leave
push
add
ror
add
pop
ret
push
push
lea
push
push
push
push
push
push
push
push
push
call
xchg
mov
pop
add
add
cmpsb
add
jae
add
xchg
loop
add
add
sti
add
add
shlb
in
fcomps
in
push
lea
push
lea
push
call
add
add
aam
rolb
insb
xchg
jne
add
jp
aam
arpl
ror
add
add
aam
add
add
idivl
into
mov
fiadds
mov
popf
arpl
loop
add
push
stos
arpl
add
add
add
arpl
lcall
hlt
push
lea
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
add
add
add
pushf
add
push
xchg
outsl
add
scas
add
scas
add
jmp
lea
push
add
aam
addl
flds
mov
mov
imul
add
add
add
xchg
pop
mov
push
add
std
shll
arpl
lcall
push
add
inc
shr
add
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
fisubs
fmuls
add
aad
add
outsl
xchg
addl
jbe
add
ljmp
add
fdivr
lcall
pop
or
sbb
cmpsl
arpl
imul
add
xchg
fmulp
xchg
flds
jb
jmp
mov
bound
add
cltd
test
jns
jp
add
loop
rcrl
test
add
sub
pop
push
pop
push
sub
inc
pop
lea
sub
push
push
push
lea
push
push
push
push
push
push
call
push
outsl
add
rcll
nop
fcom
fst
add
repnz
fimull
scas
add
jecxz
in
fwait
add
cld
push
loop
xchg
add
xlat
sub
pop
mov
shr
push
lea
push
push
lea
push
push
push
push
call
scas
fisubrs
leave
jecxz
add
mov
ret
add
sbb
popa
shll
add
add
enter
sub
pop
add
push
lea
push
push
push
lea
push
push
call
add
jl
add
stc
add
jp
add
add
mul
loope
add
popf
shl
add
test
mov
testb
xchg
jb
add
add
add
mov
jge
add
rolb
add
aad
add
add
mov
outsl
sahf
cwtl
cltd
add
sub
pop
mov
push
dec
shl
inc
pop
add
pushl
push
rol
xor
pop
popl
mov
push
lea
push
push
call
add
add
roll
add
arpl
in
add
pop
fiadds
add
pop
add
push
add
push
repnz
add
add
fildl
jl
add
pop
add
add
fists
jl
cmpsb
add
add
out
sahf
nop
add
add
lcall
stc
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
aad
mov
cli
stos
ficoms
add
mov
add
add
cli
lods
push
add
push
lds
add
lods
add
add
jbe
aad
add
jl
fcoms
add
ja
add
mov
in
add
add
add
sub
pop
xor
push
shl
pop
lea
push
xor
pop
mov
push
push
push
call
add
add
jns
cld
popf
mov
add
jns
fld
add
mov
mov
lcall
rcll
leave
lods
pop
xor
rol
push
lea
push
push
lea
push
push
push
push
call
test
fldcw
fldenv
popa
fldl
out
xchg
bound
add
add
add
lcall
jle
ljmp
lods
add
movsl
addb
mov
fldl
test
js
add
ja
sub
pop
nop
push
shr
add
pop
nop
push
add
rol
ror
rol
pop
xor
nop
push
lea
push
lea
push
lea
push
call
nop
jno
mov
mov
ja
push
xchg
add
xchg
cmc
aam
shlb
mov
cltd
lret
add
mov
jb
pop
add
pop
jbe
add
add
mov
lock
lcall
push
lea
push
lea
push
push
call
add
mov
loopne
jp
rolb
xorb
fidivrs
in
insb
addr16
test
add
stos
add
add
les
add
enter
mov
add
mov
xchg
add
push
lea
push
push
lea
push
lea
push
push
call
jnp
add
jns
add
pop
fsubrs
rolb
add
jp
push
add
pusha
add
jecxz
add
movb
add
data16
add
addb
sahf
mov
lret
jns
add
sar
add
mov
pop
nop
push
lea
push
push
push
call
pushf
fildl
pop
int
icebp
add
push
add
mov
add
imul
add
ret
add
js
add
sub
pop
nop
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
fwait
test
jle
add
mov
mov
pop
ret
add
incb
rcl
mov
add
mov
add
add
add
mov
outsl
filds
xchg
cld
scas
jmp
add
fdivl
in
add
add
add
lcall
cmp
jne
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
cltd
add
add
add
jae
jge
push
add
add
shrb
xchg
add
push
mov
add
imul
add
add
add
add
add
add
add
mov
cwtl
iret
cwtl
add
add
add
inc
pop
ss
push
add
sub
sub
pop
nop
push
rol
rol
pop
nop
cmp
je
push
pop
nop
push
push
call
pop
jmp
xchg
jecxz
pop
mov
mov
xchg
insb
enter
add
roll
xchg
enter
je
mov
jo
sub
pop
nop
inc
push
ror
shr
lea
lea
pop
nop
nop
push
lea
push
push
push
push
push
push
call
mov
fcomps
jae
sahf
add
xchg
add
cwtl
call
add
mov
add
lods
cmc
mov
repnz
add
add
aam
add
loope
add
inc
add
push
add
test
add
ret
lds
cmpsl
testl
mov
push
push
lea
push
push
push
push
push
call
pop
data16
je
jo
add
mov
les
test
push
mov
pusha
jmp
mov
mov
test
sahf
add
cwtl
add
add
icebp
sub
pop
xor
jmp
push
push
push
push
call
out
jns
lods
xchg
mov
gs
add
add
push
iret
add
add
xchg
add
les
cltd
jb
add
mov
mov
add
loop
add
push
xchg
add
add
fmul
xlat
mov
add
fadds
lcall
push
and
rcll
xlat
add
not
pop
movzwl
push
rol
pop
mov
add
push
add
sub
pop
mov
xor
push
add
shl
pop
xor
push
push
push
push
lea
push
call
mov
mov
push
push
lcall
mov
data16
add
cltd
mov
pop
stc
mov
jmp
loopne
test
insb
add
cwtl
loope
add
data16
mov
sub
pop
shl
push
sub
xor
shr
pop
xor
shl
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
flds
add
jecxz
add
mov
add
mov
nop
add
les
push
test
pop
ja
mov
add
js
filds
add
cmpsb
add
mov
fisubrl
pop
add
addr16
lcall
dec
nop
add
sqrtps
dec
cmp
sub
dec
adc
sub
add
add
imul
add
add
xchg
lret
add
stos
popl
add
clc
add
lret
sahf
mov
sub
pop
shl
push
add
ror
pop
xor
mov
push
lea
push
call
add
flds
add
add
mov
leave
add
add
ret
ret
jb
jb
add
loop
add
enter
add
repnz
lret
mov
mov
add
ret
pop
jb
popf
add
push
mov
sub
pop
add
push
push
lea
push
lea
push
push
push
push
call
gs
add
icebp
mov
add
adcl
rolb
add
fsts
add
gs
xchg
ret
lods
add
sub
pop
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
stos
fcmove
test
add
cmc
add
add
int3
loope
divb
push
scas
mov
movsb
add
jmp
mov
imul
add
in
fcomps
push
inc
rol
sub
pop
pop
push
xor
pop
pop
push
push
call
add
add
pop
icebp
incb
jnp
pop
lds
xchg
cmpsl
xchg
add
add
popl
fisubl
add
add
cld
push
addb
add
add
add
add
add
rolb
add
push
cmpl
in
clc
lcall
push
add
xor
pop
ret
push
push
add
pop
mov
push
lea
add
pop
push
push
push
shl
pop
push
push
push
sub
add
dec
pop
mov
mov
push
push
push
push
call
add
pop
pop
test
add
add
push
add
add
lret
add
add
test
mov
add
jbe
fisubs
lahf
jecxz
add
sub
pop
mov
push
sub
sub
pop
test
je
mov
push
push
call
bound
pop
add
test
add
add
in
in
insb
mov
add
add
test
add
add
add
xchg
outsl
push
jle
jbe
add
mov
xchg
lods
pushf
add
pop
lock
out
add
lcall
testb
scas
add
dec
pop
mov
mov
push
push
lea
push
push
push
push
call
addr16
push
scas
lods
js
add
push
push
add
mov
add
xchg
add
cltd
nop
add
push
xchg
add
out
push
mov
add
add
add
add
add
arpl
push
add
cltd
test
add
gs
add
add
in
call
lcall
pop
push
not
shl
pop
inc
cmp
je
push
push
lea
push
push
push
push
push
call
pushf
out
ror
addr16
jnp
add
popf
jmp
fisubl
add
xchg
mov
movsl
push
pusha
push
add
xchg
sarl
outsl
add
jne
loope
add
add
add
fildl
jecxz
ja
mov
add
aad
in
in
lcall
rorb
sbb
add
push
lea
push
lea
push
call
add
addl
jo
outsl
add
jns
add
add
js
sar
test
je
test
add
lock
pop
mov
inc
push
push
push
push
push
push
push
push
lea
push
push
call
push
mov
xlat
pop
iret
add
mov
add
mov
xlat
cmpsl
test
mov
xchg
add
fidivrs
out
jecxz
add
push
pusha
add
ror
loopne
out
add
arpl
nop
mov
popa
scas
shll
add
sub
pop
cmp
je
test
jne
push
push
push
lea
push
push
push
push
push
push
push
call
movb
testl
xchg
fcmovu
add
mov
add
push
cld
add
mov
add
add
lods
into
addb
pop
push
push
push
push
call
mov
add
add
add
mov
bound
cmpl
into
add
add
add
add
add
jle
mov
add
in
add
pop
std
icebp
popf
imul
stc
add
cwtl
test
add
jp
sub
pop
pop
pop
push
push
lea
push
push
call
int
clc
stc
js
add
push
movsb
add
in
loopne
add
lcall
movsl
movb
out
add
push
adc
lods
jle
ja
adc
add
jp
shrl
add
data16
mov
add
cltd
iret
xchg
sub
pop
pop
push
rol
rol
pop
leave
push
pop
ret
mov
push
pop
inc
push
dec
pop
cmp
jne
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
push
ficompl
add
add
filds
loopne
ret
add
add
int3
add
sbbl
cmpsb
add
add
mov
fs
divl
xchg
add
xchg
mov
loopne
mov
push
push
push
push
lea
push
call
pop
ja
push
add
mov
xchg
out
pop
mov
add
loop
xchg
add
mov
repnz
mov
xchg
imull
leave
mov
lcall
fldl
add
in
test
add
mov
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
jae
push
ja
out
out
pusha
sti
mov
add
add
add
ja
add
mov
add
int
add
popf
jmp
add
mov
mov
add
jno
mov
lcall
movb
push
call
jae
cmpsl
push
in
js
mov
mov
mov
add
xchg
add
fdivrl
ror
enter
xchg
push
lret
jno
cli
push
int
add
stc
jne
mov
add
add
jecxz
add
testb
pushf
mov
cwtl
sub
pop
cmp
jne
mov
push
lea
push
call
fwait
mov
flds
jb
add
std
push
xchg
add
movb
mov
aam
enter
lods
add
add
sub
pop
test
je
push
push
push
push
call
add
lds
pusha
mov
scas
cltd
add
jns
cwtl
loope
add
pop
js
pop
add
lock
add
add
add
add
stos
xlat
mov
outsl
nop
add
add
add
sub
pop
mov
push
sub
add
add
pop
add
push
dec
not
pop
cmp
je
jmp
push
dec
add
pop
xor
push
add
inc
xor
pop
pop
push
inc
pop
pop
push
push
push
push
push
push
lea
push
push
call
stc
stos
add
add
xchg
faddl
mov
js
rolb
insb
gs
fmulp
cltd
add
add
in
test
sbbb
add
add
stos
push
jns
add
addb
jb
lods
add
test
popf
add
test
push
into
mov
jb
sub
pop
pop
push
push
push
push
call
push
jmp
mov
add
add
mov
lds
mov
pop
arpl
add
pop
movsl
ja
jp
les
mov
add
jl
imul
out
add
add
into
xchg
push
pop
add
rolb
test
sti
pop
lea
add
mov
add
add
pop
rolb
cmpsl
lock
int3
add
mov
jp
sub
pop
pop
push
push
push
push
push
call
lret
add
in
add
push
add
aam
out
add
add
push
out
mov
popf
mov
call
mov
jp
jne
xchg
filds
shl
mov
jo
std
cwtl
add
lcall
shr
mov
add
add
add
mov
lcall
push
lea
push
push
push
push
push
push
push
call
add
test
fmul
jmp
scas
popa
jo
add
xchg
aad
cmpsb
xchg
mov
add
lods
add
jno
pop
cwtl
mov
push
outsl
jmp
mov
jae
fistpll
push
add
aam
jns
add
or
lea
push
push
lea
push
lea
push
lea
push
call
xchg
leave
pop
movl
loopne
leave
test
roll
add
add
jne
push
add
xchg
mov
add
je
clc
jge
neg
mov
add
add
add
add
push
mov
rcrb
add
add
fwait
out
jnp
cwtl
add
lcall
push
push
lea
push
lea
push
call
mov
add
add
scas
add
add
add
fdivp
mov
stc
push
add
pushf
jns
ret
les
std
add
test
lods
testl
pop
pop
push
push
push
push
push
push
push
push
call
add
add
add
add
push
addl
add
mov
sahf
jae
add
lds
ja
add
add
add
add
xchg
pop
mov
add
lods
mov
add
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
rcll
add
add
cli
lods
sahf
fisubrs
mov
pop
add
push
push
flds
add
add
push
xchg
stos
loop
loopne
mov
std
sub
pop
pop
leave
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
notl
pushf
in
add
cld
cwtl
fadds
pop
pop
add
imul
lret
jmp
mov
add
clc
add
pusha
lods
push
add
in
fcompl
or
mov
push
push
push
push
lea
push
push
call
add
add
ljmp
js
jp
add
pop
add
fwait
add
add
in
ja
test
add
add
add
fiadds
test
out
sub
pop
pop
pop
push
push
push
push
push
lea
push
push
push
call
xchg
jmp
jne
push
add
xchg
rcrl
addl
push
mov
add
mov
add
cltd
stc
add
fildl
sti
loop
mov
out
pop
movsb
roll
out
sub
pop
pop
pop
push
lea
ror
rol
pop
leave
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
mov
push
lds
hlt
int3
loopne
add
add
mov
roll
add
mov
add
add
add
add
pop
mov
sti
add
add
call
xor
cmp
mov
icebp
adc
and
adc
sbb
cmp
xor
adc
jb
adc
mov
add
pop
sub
aaa
cmp
and
mov
inc
mulb
ret
jb
iret
mov
push
out
addr16
fists
jmp
sbb
outsl
sbb
popa
jne
pop
mov
jne
xchg
inc
pop
lahf
inc
fiadds
adc
xchg
sbb
mov
xor
xor
jnp
pop
pop
push
inc
sbb
mov
lea
pop
fldl
xchg
jbe
mov
push
mov
or
adc
cmpsl
fidivrl
dec
push
ret
test
push
aas
imul
jb
dec
stos
add
mov
or
adc
sbb
push
divb
xlat
filds
jg
xlat
movsl
lods
cwtl
mov
add
notb
mov
sbb
dec
lea
fsubs
aad
adc
pop
cmp
repz
mov
sbb
dec
xchg
mov
and
push
mov
push
xor
sbb
jl
jno
push
lcall
fldl
icebp
xchg
test
xor
es
pop
das
popa
and
add
enter
xchg
je
cmp
xchg
sub
mov
cs
push
push
mov
cmpb
test
jmp
fcmove
cmpsb
arpl
pusha
insb
mov
mov
cltd
and
adc
call
jp
xor
je
xchg
test
inc
xor
adc
xchg
movb
aad
add
shll
xor
or
xor
loopne
cmc
cmp
test
sub
sub
xchg
out
inc
cmpsl
loop
nop
xor
xor
ret
sbb
inc
lcall
mov
cmp
inc
add
mov
fldl
mov
sub
and
repnz
and
add
pop
frstor
fcoms
mov
dec
push
mov
in
fxch
cwtl
mov
xchg
mov
dec
mov
outsl
pop
lock
add
in
es
xchg
inc
test
mov
xchg
jmp
pop
ficompl
clts
stc
sbb
pop
mov
add
push
aas
dec
xchg
push
adc
mov
push
adc
lcall
cmpsb
aad
repnz
sbb
xchg
mov
daa
sub
aam
hlt
sub
sub
icebp
iret
fsubl
pop
push
idivb
xor
cmp
mov
insl
inc
mov
mov
das
sbb
inc
push
imul
call
pop
mov
das
inc
push
dec
inc
or
icebp
xor
aad
or
mov
adcb
insb
cmc
cmpsb
mov
mov
sbb
aam
dec
jnp
mov
adc
inc
les
std
dec
rclb
pop
and
xchg
pop
push
imul
insb
pop
insb
int
js
mov
mov
cmpb
or
test
mov
jne
enter
shll
fs
xor
repnz
leave
inc
sbb
inc
push
xchg
inc
js
cltd
jp
enter
sbb
mov
mov
inc
mov
fidivrs
mov
push
push
push
push
or
fs
jle
ss
stos
in
and
jae
mov
cld
rcrb
call
mov
xchg
cmp
inc
jp
push
repnz
cmp
pop
and
add
pop
inc
imul
dec
lds
inc
dec
xor
push
rorl
js
sbb
dec
into
ds
test
popf
sahf
jl
lcall
gs
sub
int3
fdivrl
pop
jle
pop
aaa
sbb
xchg
push
subb
push
clc
jmp
jg
and
cmpsb
fcmovnb
jg
mov
adc
xor
jecxz
sbb
popf
sbb
insb
jnp
out
sar
popf
arpl
xchg
outsb
imul
inc
add
sub
in
mov
pusha
xor
aas
dec
sub
or
int
add
cmpsl
mov
push
outsl
or
mov
test
lcall
popa
sbb
es
testl
incb
ret
xchg
add
inc
les
jle
lret
mov
mov
mov
pop
pop
fwait
mov
pusha
dec
cs
scas
cwtl
lea
daa
test
and
inc
addr16
jmp
sub
dec
lds
or
cmp
or
jbe
pop
negl
testb
xor
loop
in
les
test
push
js
fwait
test
clc
jl
jg
inc
lea
loopne
and
std
mov
fiadds
or
push
ret
pusha
push
xchg
ja
xchg
clc
retw
in
mov
push
loop
add
push
cwtl
and
mov
shll
push
pop
inc
ds
jb
fsts
inc
daa
xchg
iret
mov
cld
or
pop
and
add
mov
repz
add
cmp
in
mov
mov
fs
xor
adc
or
inc
jns
xchg
or
lret
ret
push
fsubl
aam
mov
enter
xchg
repz
push
orl
jmp
movsl
push
cmp
fsts
sti
shll
rclb
fwait
or
jns
push
sbb
sahf
cmpsb
cmp
mov
sbb
out
loope
pop
pop
shll
or
jmp
jp
sbb
xchg
mov
in
jl
fwait
pop
in
add
fildll
sar
cmp
mov
cmc
out
ja
adc
sub
push
mov
repz
mov
pop
lcall
and
fsubrs
test
push
inc
mov
inc
inc
add
pop
lahf
xor
xchg
mov
jae
fsubs
fsubl
push
or
mov
and
mov
iret
sub
addl
ja
push
cmp
imulb
or
add
mov
pop
inc
push
jb
ret
inc
push
or
lods
rcr
jmp
movsb
mov
daa
inc
fs
je
je,pn
push
mov
addb
jecxz
jecxz
inc
ss
sbb
mov
fs
and
jae
in
mov
shll
xchg
fbld
test
lock
mov
xchg
dec
xor
pop
gs
dec
lds
pop
cld
lods
inc
dec
mov
sub
lods
hlt
jo
adc
push
or
repz
jae,pt
lods
mov
lcall
fwait
stc
ljmp
jb
jmp
imul
adc
jecxz
xchg
repnz
ljmp
aaa
lea
imul
icebp
lret
or
mov
or
int
add
int
pop
mov
dec
inc
xor
push
push
mov
add
shlb
mov
push
or
sti
cmp
sbb
aad
stc
cmp
ds
jb
dec
dec
pop
loopne
or
jge
pop
add
in
scas
mov
mul
pop
xchg
xor
repnz
nop
sub
push
fimuls
call
fstpl
ljmp
cltd
imul
jge
cmpsb
mov
outsl
and
sbb
push
adc
fucom
add
sarl
popf
mov
popa
add
and
push
adc
call
leave
or
stos
cmp
movsl
in
add
ja
pop
out
mov
in
stc
jns
cmp
out
test
and
outsl
dec
inc
sbb
ret
icebp
iret
ss
scas
add
xchg
push
arpl
into
mov
push
int
and
add
js
push
inc
fwait
jno
imul
sbb
ja
pushf
or
cmpsl
fiadds
lea
dec
and
cltd
cmpsl
std
xor
outsl
mov
push
push
pop
int
orl
and
inc
and
push
aam
jo
std
mov
or
sub
sahf
mov
cli
mov
mov
cmpsb
outsb
cs
fcomps
or
insl
mov
mov
jo
jl
dec
sbb
dec
stc
lea
jle
lods
ret
mov
and
nop
aas
sub
and
lret
or
push
xor
add
jmp
or
lret
cld
dec
scas
out
pushl
imul
dec
xorl
pop
repnz
xchg
pop
les
mov
lock
rolb
jmp
push
push
cld
sbb
push
enter
dec
dec
jge
jle
lods
pop
push
out
inc
mov
mov
mov
xchg
xor
pop
popf
cmp
lcall
sbbl
rcrb
adc
inc
mov
sub
inc
push
fmulp
scas
call
outsb
addl
xchg
test
ret
adc
xchg
out
inc
sub
roll
or
jbe
add
mov
shrb
ss
outsb
stc
aaa
es
rorl
incb
xchg
jmp
sbb
sti
outsl
lods
xchg
cmp
add
jle
push
jmp
mov
pop
lahf
sub
cwtl
iret
inc
sub
pushl
jp
scas
xchg
inc
shrl
push
mov
add
adc
push
insl
or
ret
test
push
lods
scas
insb
mov
dec
xchg
pop
leave
addr16
mov
adc
shrb
jb
jecxz
loopne
ds
dec
in
jo
pop
sub
xchg
ficoml
mov
pusha
repz
out
out
int3
test
std
dec
dec
xor
and
dec
xchg
les
mov
mov
dec
popl
and
jecxz
push
xor
les
test
sbb
adc
mov
shrb
sbb
inc
gs
lods
or
and
add
xchg
inc
mov
push
jae
dec
adc
xchg
pop
xchg
xchg
hlt
pusha
pop
cld
into
shll
inc
stos
fldl
mov
xor
push
cli
or
imul
out
add
sbb
cmpsl
sbbb
out
cmp
data16
push
or
lods
test
fwait
mov
bound
outsl
jl
into
add
mov
inc
and
les
lods
dec
adc
cmp
adc
cmp
cmp
pop
test
dec
push
cld
lret
fstl
clc
dec
iret
xor
clc
sbbb
jns
mov
insb
cmp
and
in
push
leave
stos
int
aaa
addl
inc
repz
outsb
mov
push
mov
sub
and
fwait
data16
shl
dec
fs
xchg
mov
jbe
pop
insl
push
push
lds
push
stc
xchg
mov
imul
insb
je
stos
outsl
mov
nop
add
pop
ljmp
and
shlb
outsl
jns
mov
or
iret
ret
mov
andl
pop
std
jb
mov
ret
xchg
and
push
jne
fsubrs
das
push
mov
sbb
mov
adc
adc
or
cld
bound
push
jl
div
packsswb
iret
add
cld
xor
test
inc
cmp
pop
xor
decb
mov
dec
mov
push
push
cltd
mov
jmp
sub
rorb
or
cltd
aad
rcrl
jno
pop
iret
pusha
jbe
inc
jb
lock
dec
xor
sbb
gs
add
andl
icebp
push
mov
sub
push
mov
add
mov
or
scas
pushf
dec
inc
jnp
mov
adc
cli
or
pop
jnp
jns
mov
in
xor
les
test
inc
rorl
lock
aad
jae
sbb
cli
movntps
repnz
add
xor
popf
pop
sti
popf
or
clc
js
cmpsl
ret
ss
outsb
lcall
inc
into
push
dec
and
xor
in
mov
inc
into
cmpsb
push
into
cmpsb
cwtl
gs
test
stos
adc
stos
sahf
lcall
sahf
add
and
push
inc
sbb
dec
jecxz
js
ja
add
test
outsl
pop
mov
mov
fdivrl
mov
lods
pop
push
adcl
jecxz
int3
js
mov
xchg
packsswb
jns
mov
xchg
hlt
repnz
sti
rep
cltd
imul
pop
sbb
es
mov
mov
faddl
gs
cltd
nop
lds
aas
jl
lods
and
loop
sahf
jo
inc
pop
mov
cld
xorb
ret
cmp
xchg
pop
and
dec
pop
or
fbstp
push
daa
movsb
xlat
sbb
push
dec
sub
xor
xchg
xchg
lods
roll
inc
subb
add
or
mov
add
xchg
subl
shl
fcompl
sar
mov
xor
sub
xchg
mov
arpl
or
and
push
rolb
test
xchg
mov
xchg
dec
cmp
sub
test
stos
dec
mov
mov
xor
sub
push
cmpsl
and
inc
fcompl
out
sarl
inc
xchg
jb
rcrl
fmuls
xor
repz
and
or
cmp
push
repnz
pop
leave
adc
rcl
outsl
shrl
and
and
pop
pop
push
xor
sbb
ret
mov
and
loope
jmp
test
sbb
push
push
icebp
icebp
cmpsb
xchg
pop
sub
je
jg
vmptrld
aaa
sub
fcmovnbe
fidivl
push
pop
dec
fdivs
pushf
cmp
sbb
loope
lret
movsb
xor
dec
fisttpl
cmp
fnstcw
int3
xchg
lds
pop
mov
add
and
stos
xchg
dec
jno
daa
and
or
push
jle
subb
ss
sar
rcrb
sub
std
dec
dec
shr
insl
inc
sub
scas
xor
push
jns
adc
add
jno
pop
push
pop
pop
xor
int
adc
sub
iret
repz
testl
pop
mov
ljmp
fbstp
int3
cs
arpl
in
aas
push
int
cmp
sbb
dec
sbb
inc
in
pop
adc
sbb
andl
xor
xchg
test
jae
out
push
test
loop
enter
or
aad
js
ss
add
lret
mov
in
ret
fcompl
jae
add
cld
lret
out
in
add
nop
add
aas
dec
inc
xchg
out
lea
mov
xchg
sub
mov
imul
cmp
adc
push
add
pop
pop
aas
outsl
dec
movsb
or
or
movsl
pop
sub
repz
fs
cmpsl
sahf
test
xchg
sti
mov
push
add
daa
mov
jmp
add
jns
add
pop
push
inc
cs
xchg
mov
out
xlat
xor
sub
mov
push
into
inc
jb
jmp
ljmp
shrb
dec
push
add
outsl
push
jg
cmp
push
sbb
pop
inc
movsb
enter
mov
aad
popa
pop
dec
mov
mov
cmc
mov
stc
dec
xor
test
and
rcrl
jnp
mov
dec
push
ljmp
roll
mov
jle
mov
cs
cmp
push
mov
mov
dec
inc
sub
lcall
pop
jge
push
mov
mov
inc
bound
sbbl
inc
xchg
jge
stos
mov
pushf
aaa
sbb
incl
jbe
scas
mov
loopne
test
mov
sahf
mov
pop
jmp
in
test
cmpsb
sub
adc
and
pop
dec
js
jne
adc
and
test
push
in
fwait
ds
daa
pop
cltd
jno
jo
xor
xor
stc
cltd
loopne
mov
dec
addl
les
sar
mov
pusha
mov
dec
scas
cmpsb
pop
cmp
dec
call
jns
sbb
test
pop
jmp
jb
pop
call
bound
jp
ror
jne
and
pop
dec
mov
dec
mov
add
xor
out
mov
xchg
mov
push
push
inc
shlb
es
mov
mov
pop
js
out
lock
shrl
push
mov
push
ret
call
mov
arpl
push
push
call
cmp
push
lret
iret
pop
pcmpeqw
mov
sbb
mov
rcr
mov
imul
lods
adc
mov
mov
scas
mov
pop
dec
cmp
ss
pop
adc
je
sti
push
xor
lea
sbb
mov
fnstcw
add
pop
jmp
jne
push
xchg
sbb
or
fyl2xp1
pop
inc
fidivrl
lock
mov
add
sbb
icebp
das
ljmp
sarb
jge
int3
lahf
xchg
and
vrsqrtps
mov
pop
add
les
sub
xlat
dec
sbb
jecxz
dec
push
aas
pop
imul
rcll
dec
sub
jns
lcall
mov
sub
cmc
arpl
stc
fwait
add
mov
mov
sbb
xor
mov
pop
lahf
aam
repz
inc
push
mov
and
jmp
mov
dec
jp
xchg
loopne
mov
or
adcb
or
outsl
bound
xlat
sbb
popf
sbb
push
sub
shlb
mov
pop
sahf
ljmp
push
inc
nop
xchg
push
ficomps
or
push
shrb
mov
or
pop
cwtl
mov
pop
adc
pop
and
adc
stos
stos
adc
or
pop
sti
gs
mov
xchg
scas
nop
jmp
adc
adc
jecxz
add
fstpl
jl
sbb
cmp
mul
cmc
cmp
and
loope
sub
and
mov
repnz
mov
add
test
and
pop
mov
into
jp
push
xchg
popf
test
arpl
cmp
and
mov
test
dec
or
xor
cmpsl
ret
mov
outsl
daa
jb
cs
enter
cs
mov
mov
rorl
and
mov
mov
mov
popa
pop
shll
adc
mov
cmp
xor
cld
loopne
jae
fs
adc
xor
dec
dec
mov
jmp
outsb
fwait
xchg
or
jo
lahf
outsl
andl
adc
pop
pop
clc
aas
dec
mov
push
dec
rcrb
cmp
xchg
mov
mov
enter
dec
scas
test
popa
xchg
add
in
jle
mov
test
pop
daa
pop
jno
mov
and
sbbl
movsb
sub
subb
or
jns
push
cmp
mov
in
push
pop
pop
jne
jmp
daa
xor
adc
dec
mov
ss
daa
inc
xlat
mov
and
inc
mov
dec
bound
jo
lret
cmc
cltd
add
xchg
mov
cmpl
dec
hlt
sahf
inc
cmp
push
push
fimull
scas
push
pop
mov
cmp
inc
aaa
lods
xchg
in
dec
test
gs
mov
enter
aam
insl
pop
out
cmp
mov
pop
movsb
push
dec
xor
add
test
je
rclb
sbb
jnp
xchg
fldcw
dec
xor
test
popf
inc
mov
cmp
adc
mov
aad
xchg
jb
cmp
dec
mov
sbb
jecxz
sbb
push
push
pop
add
jge
out
jnp
mov
int
push
inc
cli
mov
mov
mov
jb
orb
in
sar
push
jbe
movsl
sub
cmp
sbb
xchg
cmp
dec
popf
popf
mov
stos
imul
pop
sub
inc
in
xchg
jecxz
clc
cmpsl
add
sub
pop
or
mov
cwtl
loop
aaa
or
add
fdivs
ss
xchg
push
scas
inc
je
sbb
in
out
rorl
daa
ud1
add
jl
mov
pop
dec
push
in
lahf
cmc
mov
dec
push
lret
xchg
jge
lret
fimull
push
mov
jbe
or
cld
ret
jbe
jle
loope
lret
arpl
add
dec
mov
stos
inc
xor
jnp
test
fcompl
ljmp
xorb
lods
push
add
pop
cmc
sbb
leave
mov
int
or
mov
push
cli
push
outsb
pop
xor
jns
or
cmp
push
mov
push
push
cld
call
out
mov
fs
and
push
pop
dec
popf
mov
xchg
das
pop
fstpt
insl
rcr
pop
pusha
pusha
subb
out
insb
js
scas
pop
sub
push
mov
rolb
xlat
rclb
xchg
mov
sahf
scas
imull
cmove
ljmp
aaa
xor
jecxz,pt
jae
xor
nop
lea
daa
cmc
cmc
ret
mov
sub
push
stc
xchg
ret
sub
decb
push
xchg
in
rorl
popf
fs
cmp
inc
aam
in
xchg
and
add
push
mov
int
push
fnstsw
shlb
mov
xlat
ret
jno
loope
push
and
add
push
xor
das
test
outsb
addl
das
jo
add
or
dec
cmp
pop
dec
stc
push
push
xchg
and
addr16
sub
repz
in
rcl
call
lahf
dec
andl
cmpsb
sub
ret
stos
sub
lret
ret
sahf
pushl
dec
mov
xchg
push
dec
xor
test
add
push
add
pop
jl
inc
leave
lea
adc
rcrb
daa
xchg
mov
in
xor
mov
jmp
mov
and
call
repz
xor
es
mov
decb
leave
lcall
pop
xchg
shrl
mov
sub
and
lret
mov
fwait
call
push
aas
and
scas
cmpsb
pushl
sbb
push
cmc
mov
shrl
adc
je
push
out
inc
sbb
cltd
and
jmp
cld
fdivrs
xchg
lea
outsb
int
lea
cmp
and
ja
imul
jle
adc
fstpl
mov
adc
outsl
pop
adc
push
mov
xor
jns
test
fsubrl
push
lds
push
jnp
jo
je
xor
testl
ret
ds
xchg
xor
xchg
mov
xor
js
lret
push
mov
or
lea
int
sub
loopne
xlat
mov
scas
fwait
inc
cmp
fcmovnb
push
ljmp
ss
test
out
sahf
cwtl
dec
clc
inc
lcall
lods
aaa
xorb
cmpsb
jnp
and
lahf
popa
cs
clc
outsl
inc
aas
push
dec
pop
js
pop
fidivrl
lahf
lods
dec
add
in
test
and
pusha
inc
lcall
xchg
mov
leave
mov
mov
xor
cmp
push
lret
repz
ret
pop
test
inc
popa
ret
push
xchg
fwait
ficoml
fidivrs
sub
add
mov
int3
xchg
or
xlat
inc
aas
mov
push
xchg
pop
push
and
js
xor
cmp
scas
add
push
call
arpl
popa
mov
and
rcrb
cmovae
inc
cmp
and
mov
popa
int3
jge
adc
xchg
out
add
jmp
pop
outsl
popf
sub
and
lahf
addr16
nop
mov
repz
mov
ret
enter
pop
pop
shrb
sub
fcomi
mov
inc
mov
clc
sbb
adc
jecxz
mov
lods
push
lds
nop
ljmp
mov
sbb
sub
sbbb
jg
repz
insb
testb
mov
les
inc
fs
hlt
push
stc
fidivrs
cs
pop
lea
rcll
lcall
popa
out
jg
lods
xor
push
mov
andl
mov
mov
xchg
xchg
daa
cmc
addr16
mov
adc
popa
sub
test
popa
push
test
ds
fidivl
or
sub
mov
rol
mov
jo
std
xchg
xlat
stos
imul
sbb
mov
leave
xchg
cmp
sbb
jl
rcll
cmpsb
and
aaa
xor
mov
pop
scas
pop
push
mov
in
ja
mov
mov
lret
lea
shl
in
fldcw
push
sti
push
fildll
jo
aam
inc
push
mov
dec
movsb
jmp
push
lcall
sub
aam
xchg
jg
movups
push
adc
xchg
je
sbb
and
cmp
jg,pn
lcall
and
fucomp
ret
bound
cmpb
xlat
push
aaa
in
inc
xor
in
jmp
fildll
xor
dec
push
cld
aad
add
adc
xor
pop
data16
or
lcall
push
sub
insb
aas
loope
sub
shrb
pop
sbb
sub
adc
pop
in
stc
sbb
scas
xorb
sbb
xchg
les
jbe
aaa
cmp
ds
int3
mov
sub
out
mov
jns
push
xlat
dec
inc
ficoms
fildll
sahf
mov
stos
sbb
mov
lea
pop
xchg
mov
adc
push
sarb
jmp
fdivrs
inc
adc
sahf
mov
in
fmul
lods
jmp
fisttps
cmp
jmp
and
sub
test
test
cmp
inc
fsubl
loopne
test
in
rol
idivb
or
sub
push
cmp
jbe
jg
and
ficoms
frstor
andl
bound
adc
mov
cmp
out
xor
fisubs
add
lods
adc
lods
mov
or
xchg
and
js
xchg
mov
and
mov
push
inc
mov
push
aam
fdiv
fwait
das
inc
xchg
sbb
pop
les
push
fs
add
pop
sub
xchg
dec
outsb
mov
pushf
addl
scas
loope
and
fmuls
cmp
stos
push
inc
xor
int3
or
mov
and
pop
jecxz
sub
inc
mov
adc
add
mov
ja
xor
add
into
outsl
sbb
fsubrs
sub
enter
push
fdivr
pop
adc
cld
outsl
mov
out
mov
or
pop
push
nop
out
push
mov
jbe
jl
jo
fcoml
pushf
lret
lcall
mov
add
mov
mov
out
mov
inc
gs
insl
jmp
push
sub
and
les
jl
jb
out
inc
mov
mov
xor
gs
das
lock
jno
cmp
mov
mov
push
stc
test
mov
jg
int3
mov
xchg
dec
push
ja
add
mov
jo
iret
dec
imul
push
popf
loopne
fucomi
cs
and
xor
pusha
shrb
inc
mov
mov
xchg
adc
pushf
mov
lcall
stc
cmp
sub
ljmp
stos
push
pop
mov
and
mov
out
mov
movhlps
jecxz
std
int
cmp
inc
leave
dec
jno
fildll
push
movsb
xor
cmp
pop
fisubl
xor
insl
or
jne
mov
fdivrs
mov
mov
or
sub
sub
pop
jle
lret
push
inc
mov
jbe
popa
jl
test
xchg
sub
mov
sarl
pushf
cmp
cmp
mov
out
cmc
out
jne
jne
lea
out
das
mov
inc
pop
adc
pop
aas
shrl
sub
cltd
jns
push
mov
xchg
in
sub
sahf
stos
inc
imul
dec
sarb
and
dec
jo
gs
sbb
outsl
fisubl
mov
pop
leave
andb
enter
dec
jmp
inc
inc
mov
push
push
xor
cmp
lods
xchg
mov
int3
push
mov
in
mov
pop
mov
icebp
gs
sub
jg
ss
mov
icebp
push
mov
adc
jmp
ja
clc
int3
lret
push
test
stos
adc
fdivrs
int3
nop
call
xchg
inc
dec
add
push
xor
xchg
in
andl
dec
in
dec
or
loopne
lret
jmp
fnsave
lods
add
mov
test
mov
test
js
inc
pop
or
mov
mov
push
cmp
scas
pop
jmp
push
pop
fiaddl
scas
mov
adc
scas
mov
or
pop
pop
mov
cwtl
sbbl
mulb
xchg
cli
push
repnz
stc
movsb
dec
pop
test
cli
xchg
in
fadds
loopne
ficoml
mov
mov
fsubrs
mov
adc
movsb
ror
cmp
dec
enter
aaa
dec
les
add
cmpsb
push
cmp
xchg
xchg
pop
push
call
leave
cld
pusha
loopne
or
jnp
cltd
cmp
sub
es
inc
push
mov
add
clc
hlt
rorb
or
cmpb
xor
imulb
xchg
mov
pop
ss
inc
outsl
lea
test
add
jne
dec
push
or
ficompl
mov
push
cmp
aam
and
mov
or
rol
mov
imul
cmp
pop
loopne
arpl
adc
dec
lods
imul
add
xchg
pop
mov
jbe
enter
pop
and
pop
lret
pop
inc
and
mov
dec
arpl
shl
jl
rorl
jle
mov
inc
inc
lods
push
xor
cwtl
sbb
scas
jle
xchg
ds
dec
push
adc
hlt
add
cmp
add
loopne
or
jmp
cmp
inc
add
dec
gs
xlat
mov
enter
mov
test
cmp
mov
sub
xchg
jnp
xchg
ss
jecxz
jne
rcl
in
fdivrs
or
lahf
sbb
loopne
sbb
sub
add
fnstsw
enter
insb
mov
cwtl
jge
gs
aaa
fadds
std
das
inc
sahf
sub
lret
jbe
stc
scas
pop
ja
cmp
sbb
xchg
sahf
or
sub
mov
daa
sbb
rcll
enter
in
sub
inc
add
stc
push
cpuid
test
pop
adc
push
stos
aas
ss
les
mov
aas
test
leave
xchg
pop
xchg
jne
jno
mov
sub
pop
mov
lret
popf
js
pop
loop
mov
lret
hlt
dec
adc
inc
mov
dec
adc
dec
cmp
jle
rcrb
mov
add
gs
mov
iret
shll
xor
rdtsc
int
dec
inc
sbb
jl
fsub
loope
das
inc
out
xchg
dec
mov
cmp
rorl
loop
mov
adc
inc
push
sub
or
lods
jbe
jno
and
mov
mov
mov
xchg
jns
xchg
clc
mov
in
or
pushf
fstl
jg
cmp
imul
mov
lret
out
mov
mov
ss
repz
xor
cmp
mov
mov
lahf
std
clc
push
sbb
sub
xchg
je
cmpsb
rcrl
repnz
out
jnp
ljmp
scas
ret
cld
loopne
xchg
out
sbb
cli
icebp
das
icebp
mov
test
shr
mov
mov
jecxz
icebp
xchg
xor
mov
inc
xchg
jmp
insl
jne
stos
push
subb
push
add
mov
lods
and
addr16
ret
inc
push
push
cmpsb
test
fsubl
xor
fs
sti
sbb
sub
cli
fnstsw
and
js
mov
fisttpll
jno
adc
je
push
lock
mov
ss
xor
dec
ja
xchg
push
adc
loopne
inc
and
call
shr
mov
fs
pop
sahf
rclb
fsubl
addr16
ljmp
es
pop
cmp
fnstcw
jge
push
aaa
test
fcomp
pop
cmp
sub
or
fcomip
fmuls
cltd
out
add
out
push
bound
enter
cmp
clc
add
mov
cmp
jg
inc
lcall
push
mov
out
sbb
mov
jg
loope
mov
xlat
fists
push
sbbl
mov
notl
inc
xor
push
stc
imul
and
and
lock
repz
call
jnp
movsl
mov
lret
pushf
testb
outsl
xor
insb
mov
mov
call
lock
clc
fs
dec
popf
mov
repz
iret
pop
in
test
mov
push
shl
movsb
inc
xor
push
lds
mov
ljmp
add
scas
movsb
jbe
movsl
mov
lahf
outsb
mov
pusha
rcrb
fidivs
lods
adc
jo
pop
loope
mov
jbe
adc
xor
mov
dec
mov
insb
dec
rcrl
jl
popa
mov
jae
mov
hlt
jle
or
mov
movsl
repz
xchg
xchg
pusha
adc
inc
or
xchg
sub
pop
repnz
in
and
mov
loope
sti
cmp
sub
sub
or
jecxz
pop
int3
jo
das
push
inc
and
or
sub
es
add
pop
push
fisubrs
add
orl
loop
dec
adc
arpl
outsb
cmp
pop
jecxz
in
lret
jo
xor
push
fnstenv
scas
jl
das
xchg
imul
xchg
mov
mov
pop
divb
roll
daa
pop
xor
pop
outsb
adc
push
adc
popf
sarl
pop
lahf
pushf
sbb
mov
pop
cwtl
fsubrp
aad
in
mov
cmp
outsl
loop
test
jg
jno
insb
mov
hlt
and
dec
stc
popa
test
xlat
inc
pop
loope
ficompl
adc
es
cmp
fistpl
popf
idivb
xchg
dec
fwait
dec
cmpsl
lods
aaa
adc
movsb
sbb
xor
enter
xlat
push
and
mov
xor
ss
push
sbb
xchg
sahf
lds
lret
adc
sbb
popa
cmpl
fs
fistpl
addr16
dec
inc
jns
xchg
out
adc
push
jbe
inc
lahf
test
dec
jg
push
nop
stos
xchg
push
add
add
inc
iret
lahf
sbb
mov
mov
mov
xor
mov
test
subl
jle
fistl
jae
mov
pop
orb
pop
aaa
sub
cmp
cmp
aas
pop
jb
sub
out
push
mov
xchg
hlt
mov
add
lods
mov
jbe
stos
push
mov
es
inc
sbbb
stc
push
xor
and
aaa
cmpsl
pop
inc
jl
push
xor
es
add
sbb
sub
js
lods
cmp
dec
out
mov
mov
lock
sub
pop
push
movsb
jnp
inc
in
jmp
in
jne
lea
lods
je
faddl
int3
int3
inc
std
mov
pop
xlat
xlat
add
xchg
push
sub
mov
dec
ret
bound
cmp
rolb
and
sub
insl
inc
adc
inc
dec
lea
mov
add
xchg
push
push
out
insl
dec
call
dec
into
mov
inc
lea
outsl
repz
add
mov
dec
sbb
dec
add
xor
cltd
test
stc
popl
adc
stc
jp
push
push
shl
xor
movsb
xchg
js
and
pop
push
add
in
inc
insl
jo
cmp
adc
std
gs
mov
ja
lahf
lcall
add
loopne
add
jg
lds
pushf
dec
cmp
inc
and
jnp
add
mov
aam
outsb
cmp
adc
loope
push
xchg
test
xlat
xlat
daa
addr16
outsb
jle
movsl
jl
inc
lds
add
hlt
iret
inc
lods
aaa
dec
mov
mov
mov
xchg
lahf
push
push
lret
and
jo
xchg
enter
lret
dec
in
inc
mov
repz
pop
xor
cmc
jno
call
sahf
inc
stc
add
leave
roll
mov
mov
jp
mov
imul
insb
dec
repz
add
aas
popl
sbb
mov
xor
in
lods
inc
or
int
shll
cmp
add
rolb
jo
push
test
pushf
sub
push
push
ret
xor
cmp
push
add
inc
notl
inc
jg
or
fstpl
sbb
add
mov
fcomps
xchg
inc
and
or
inc
gs
lahf
sub
mov
xor
sub
push
out
mov
cmp
lods
stos
repnz
and
push
jns
lods
lods
imul
lahf
xchg
sub
shll
lret
push
leave
aad
sub
adc
push
lahf
sbb
push
xchg
dec
pushf
mov
std
jo
fadds
andl
and
fldenv
or
scas
aas
xchg
and
mov
hlt
jbe
mov
add
popf
cmp
stos
mov
jne
mov
push
mov
inc
mov
sub
shl
imul
mov
cmpsb
or
mov
push
mov
fldt
and
movhps
lea
xchg
mov
dec
jmp
adc
ficoml
jo
pop
leave
popl
inc
pop
lret
scas
subl
imul
inc
lds
leave
movsl
xchg
sbb
lods
int
push
lods
xchg
adc
movsb
dec
sbb
in
fwait
and
push
stos
sub
stos
mov
mov
xchg
pusha
mov
xor
jae
and
in
xchg
sub
push
test
or
insl
imul
notl
bound
mov
cmp
and
fucomp
pop
dec
cmp
inc
icebp
in
sti
dec
push
imul
xchg
test
jge
repz
mov
sti
mov
dec
leave
xor
test
ljmp
out
hlt
or
es
mov
dec
shlb
fs
fidivs
jne
call
movsl
mov
inc
js
adc
xchg
rcrb
xchg
cmp
jbe
cmp
stc
bound
test
in
or
rcrb
inc
mov
enter
jns
xchg
mov
mov
jecxz
push
scas
aam
scas
stos
imul
xchg
xor
idivb
inc
jae
rcrl
inc
push
ficoml
imul
lock
fnstsw
pop
cmp
dec
mov
fwait
mov
mov
dec
mov
out
test
xchg
mul
adc
hlt
mov
out
fs
jno
push
lods
xor
adc
fucomp
pushf
in
iret
pushf
lret
xorb
xchg
divb
fmull
stos
jge
jl
out
adc
xor
sbb
aas
jb
mov
jae
pop
mov
inc
cwtl
js
mov
inc
insl
cmovs
dec
jne
rdtsc
sbb
jmp
lods
mov
xchg
lds
repz
movsb
andl
rclb
or
sub
push
mov
repnz
aaa
dec
pop
push
je
sbb
popf
ds
jo
mov
lods
int3
pop
mov
and
hlt
sbb
cmc
and
es
inc
add
jecxz
iret
ret
loope
out
sbb
jl
imul
mov
mov
sub
jecxz
lods
or
mov
xor
xor
jns
js
dec
dec
inc
cli
or
pop
lock
aam
mov
shll
cld
dec
movsb
xlat
insb
inc
ret
mov
sbb
stos
addb
and
inc
and
mov
subb
out
inc
hlt
in
je
and
jg
cmp
fisubs
xchg
or
out
cwtl
mov
cmp
xor
mov
mov
pop
and
cli
popf
mov
sub
inc
mov
fstl
mov
xchg
xor
sbb
or
das
pop
mov
pop
fildll
mov
xchg
inc
adc
jl
adc
jno
push
xor
mov
or
bound
iret
outsl
cs
lahf
loope
xchg
aaa
bound
pop
mov
dec
xchg
xchg
xchg
stos
rcll
push
pop
lret
inc
ficompl
pop
inc
or
cltd
mov
and
in
ss
ljmp
push
push
stc
push
int3
andl
call
or
mov
aas
add
in
js
into
imul
mov
add
test
mov
and
std
sub
out
leave
ss
sub
fwait
lret
iret
out
ret
gs
daa
sub
imull
mov
mov
mov
mov
mov
pop
lret
sub
mov
or
vpsrlq
lods
cwtl
mov
xchg
xchg
data16
mov
repz
popa
dec
call
outsl
pop
xchg
jmp
xor
sahf
mov
or
add
pushf
bound
cmp
jnp
fdivr
shlb
xchg
mov
inc
hlt
xchg
mov
or
push
mov
xchg
cmp
xchg
insl
adc
and
loop
push
test
pushf
testl
push
pop
inc
sbb
je
lods
mov
cmp
ja
popf
mov
add
stos
mov
sub
lahf
lcall
or
and
fdivs
mov
enter
push
les
cmp
mov
jb
add
imul
inc
fistps
add
clc
cmp
jg
mov
jae
mov
sub
leave
pop
pop
int3
icebp
pop
xchg
adc
out
pop
nop
dec
insb
and
push
and
adc
add
daa
push
je
shl
in
js,pn
mov
mov
dec
and
xchg
xor
cld
mov
loop
mov
mov
mov
divps
cmp
mov
enter
mov
and
adc
dec
push
jl
inc
xor
call
mov
push
es
les
cmp
scas
ret
test
or
mov
loope
jmp
cmc
cld
rcll
sbb
cwtl
and
lahf
mov
adc
imul
cld
mov
mov
or
addl
pop
mov
fldl
fsts
ret
movsl
add
sub
push
out
or
imul
fidivs
fstl
push
fucom
push
pop
mov
lret
add
mov
jns
in
out
inc
adc
test
int3
dec
add
jmp
jp
pop
and
test
jl
push
push
popf
mov
cmp
jle
sti
push
in
cmc
push
xchg
movsl
push
insl
push
xchg
push
fisttpl
mov
lds
add
and
loope
pop
fs
lahf
add
mov
imul
or
dec
xchg
dec
popf
pop
jnp
jp
shrb
into
dec
push
out
mov
loope
dec
sub
test
test
idivl
sub
add
pop
movsb
add
mov
sti
dec
dec
sub
lods
jae
add
jbe
xlat
ret
or
pop
add
maxps
pushf
addl
pop
repnz
inc
jg
jg
fldl
aam
and
mov
aam
inc
ret
inc
addl
aam
nop
inc
sahf
cmp
add
add
cli
or
mov
mov
dec
xchg
pop
mov
mov
push
inc
sarl
in
les
cmpl
sub
jnp
mov
inc
pop
mov
nop
je
mov
push
push
test
out
mov
and
clc
stc
pop
loope
out
add
dec
adc
add
cmp
loope
xchg
repz
dec
xor
jge
aam
lahf
add
cltd
xchg
sub
movsb
loopne
mov
cmpsl
stos
fisttpll
pop
push
fsub
cld
cmp
sbb
dec
sub
mov
jl
aas
sub
jae
jg
aad
sbb
repnz
imul
lods
dec
pop
adc
test
inc
push
mov
bswap
enter
shll
mov
rclb
test
sub
std
inc
stos
dec
pop
xor
mov
movsl
inc
mov
inc
dec
pop
std
hlt
sti
fisttpl
cmpsl
or
mov
mov
mov
imul
cmp
mov
sahf
lock
pushf
test
dec
mov
add
jmp
sbb
out
xlat
cmp
fimuls
and
jp
pop
adc
test
sahf
cmp
nop
andb
mov
mov
dec
dec
aaa
jecxz
inc
or
hlt
int3
and
mov
movsl
mov
outsb
cmp
fdivrp
mov
movsb
int
insl
inc
sub
enter
movsb
jns
roll
aas
dec
arpl
maxps
test
sbb
scas
in
lock
mov
pop
lahf
jnp
jne
daa
pop
cwtl
data16
push
push
call
inc
jnp
outsl
bound
movl
ljmp
mov
cmp
cmc
iret
pop
ret
push
in
xchg
call
out
insb
fnop
adc
ja
push
cwtl
rcr
les
ja
rorl
adc
mov
pusha
dec
mov
stc
jb
sbb
mov
dec
std
out
stc
sbb
es
adc
stos
push
push
jb
mov
or
jb
jp
mov
mov
cwtl
movsl
jp
int
in
cmp
out
adc
and
inc
sub
xchg
fstl
in
scas
sbb
into
lea
inc
out
sub
stos
xor
inc
adc
mov
mov
aaa
lcall
sub
out
xor
sub
mov
lahf
lea
dec
sbb
sub
push
rcll
push
fwait
imul
out
sbb
cmp
sti
and
int
outsl
das
sbb
and
fwait
sahf
inc
fxch
mov
jecxz
xchg
sbb
std
jbe
in
mov
mov
sbb
sbb
sub
into
iret
dec
outsb
adc
mov
cmp
or
and
test
fcoml
lret
cs
sahf
pop
stc
dec
lahf
call
or
push
sbb
jecxz
pushf
lds
xor
je
loop
sub
inc
xchg
in
fbld
dec
jge
pop
push
movsb
dec
bound
dec
dec
inc
sub
cmp
gs
cltd
push
push
pop
faddl
mov
rcrb
jno
jns
cmp
adc
dec
ud0
sub
shlb
sub
scas
sub
xchg
add
cli
mov
xchg
sbbb
std
mov
mov
sub
push
xchg
sub
test
cmp
addl
push
push
rcl
ficoms
int3
sbb
cmp
sbb
arpl
jp
mov
cmp
sbb
push
test
mov
scas
outsb
mov
divl
mov
ja
mov
jp
std
and
ret
stc
cli
adc
stc
mov
push
pop
mov
fmul
mov
pop
or
jecxz
xor
test
in
orl
lods
clc
or
ss
js
scas
outsb
push
fistpll
in
clc
ds
inc
xor
inc
fstl
mov
unpcklps
ljmp
inc
les
leave
cli
jne
or
adc
add
lea
jmp
cltd
jb
shll
enter
mov
clc
dec
push
les
push
and
in
lahf
cmpsb
lcall
jnp
xchg
out
repz
add
push
sbb
adc
int
pushfw
adc
jns
iret
repz
mov
mov
ds
shrl
shll
dec
adc
sub
and
out
mov
push
and
jo
in
dec
outsb
xor
stos
inc
lea
mov
cmp
push
push
imul
pop
call
or
cmp
leave
inc
xor
jnp
outsl
or
dec
and
fmull
and
pop
cmp
sbb
hlt
outsl
dec
loopne
sub
xchg
xor
data16
or
mov
arpl
out
adc
mov
add
mov
or
mov
sbb
and
dec
or
in
mov
and
xchg
pop
jnp
lea
mov
daa
push
daa
in
loop
push
xchg
nop
pop
ficompl
outsb
cmc
push
mov
mov
popa
cmp
mov
mov
int3
aas
and
sub
xchg
mov
cmp
fmulp
jo
cmp
les
sub
fstpl
mov
fucom
pusha
out
push
mov
fs
mov
or
add
push
and
jae
jbe
shlb
jecxz
filds
cmp
test
sub
cmpsb
push
pop
pop
sub
and
aaa
aas
icebp
call
mov
jl
jae
clc
jbe
nop
xchg
add
pop
fmul
lcall
xchg
inc
dec
pop
jno
jge
aad
fmuls
xchg
push
test
fists
dec
iret
stc
mov
fdiv
mov
xor
popf
sub
xor
sti
adc
xchg
shll
xor
jmp
loop
out
insl
nop
testb
mov
xchg
lds
into
dec
cmc
inc
xchg
xchg
pop
dec
ret
std
and
sbb
mov
call
aam
xchg
rorb
imul
loop
jecxz
pop
leave
mov
jl
xchg
cli
packssdw
jnp
pop
mov
push
xchg
dec
movsl
mov
mov
mov
lods
mov
push
outsb
or
inc
mov
pop
inc
xor
mov
lds
inc
popf
loope
aam
movl
jo
rclb
loope
mov
cli
sub
rep
cmp
cmpb
jl
sbb
or
cmp
loopne
jecxz
mov
das
insb
gs
lock
pop
mov
in
xchg
mov
repz
inc
push
lahf
test
arpl
pop
shr
inc
jmp
scas
nop
orl
mov
adc
pop
mov
mov
xchg
and
outsl
and
inc
xor
into
movsb
xor
into
dec
push
cwtl
in
push
inc
cmp
or
mov
fnsave
rolb
add
sub
repnz
out
xlat
testb
mov
mov
adc
jno
and
or
and
cmpsl
std
cmpsb
popa
dec
mov
sub
add
or
aas
iret
test
insb
mov
mov
cmp
pop
sbb
repnz
xor
std
mov
sbb
loopne
add
xor
in
xor
lret
call
cmpb
cmp
mov
sarb
cmp
outsl
pushf
loop
lds
and
js
ljmp
mov
test
pusha
dec
adcl
fbld
les
sub
push
jle
push
sarb
or
push
inc
sbb
daa
cltd
pop
cmc
frstor
mov
inc
je
jnp
lock
and
cmp
ds
sub
mov
cmp
out
int3
ret
push
pop
mov
jge
loopne
cmp
data16
jmp
into
xchg
fldenv
in
or
cmp
in
jno
out
dec
sub
int
outsb
jge
inc
test
daa
fistl
adc
jnp
xlat
mov
pop
int
lods
xor
cwtl
push
sbb
sub
inc
and
clc
sbb
fidivrs
ret
shlb
inc
int3
dec
jl
mov
inc
ss
shrl
push
add
mov
adc
mov
mov
xlat
stos
aaa
xchg
jb
lret
sub
pop
cwtl
jns
and
out
negb
jmp
sbb
add
or
push
push
mov
xchg
scas
enter
inc
mov
push
mov
ljmp
test
jge
sub
mov
inc
cmc
and
push
mov
aad
scas
fdiv
push
jecxz
notl
pop
mov
ficompl
stc
test
mov
jnp
leave
scas
and
mov
gs
jg
test
cmp
mov
rorb
js
cmpsb
sub
xor
lds
imul
cmp
sbb
and
cmp
xchg
ret
jmp
stos
mov
lods
aam
out
lcall
sub
jge
fdivs
and
movsb
push
ret
mov
cltd
sbb
notl
cmp
call
cltd
mov
and
leave
pop
pop
or
mov
add
push
aad
cmp
mov
add
aaa
call
sbb
ss
or
outsb
push
aad
movsl
ret
add
cmpb
mov
add
jno
mov
dec
test
and
imul
ficoms
xchg
sbb
push
lds
jae
inc
cmp
in
cmpsl
xchg
data16
in
mov
dec
out
stos
or
sub
xchg
cmp
or
push
sbb
gs
lcall
pmovmskb
jl
jb
add
pusha
cli
lea
push
cmc
pop
lahf
inc
mov
sahf
enter
xchg
call
push
inc
mulb
sbb
lods
lods
xor
out
mov
mov
addr16
inc
cmpsb
int
lea
enter
sbb
in
out
pop
cmp
jo
xchg
mov
scas
shlb
push
jne
daa
call
xorb
outsl
popf
pop
lea
cli
js
or
jne
jnp
push
aaa
jecxz
sub
das
jno
scas
jo
xchg
lods
cmp
movl
cltd
stc
xor
push
out
insb
loopne
jns
cmpb
addr16
hlt
in
mov
xor
xlat
cwtl
sub
pop
adc
xchg
popa
test
push
outsb
add
fs
add
pop
sbb
and
ljmp
push
jno
testb
shlb
xchg
inc
call
mov
andl
jno
sub
insl
and
jecxz
sub
popf
jno
xor
repz
scas
js
inc
jo
or
add
lods
stc
aam
out
add
pop
sub
int3
mov
sbb
add
cmc
inc
jae
test
dec
mov
mov
mov
jnp
pop
dec
xchg
dec
aas
shlb
sub
out
sbb
and
es
test
cltd
subb
mov
ret
daa
push
mov
leave
jge
mov
sbb
cmpsl
mov
cmp
stos
push
mov
ret
push
mov
jo
and
dec
push
ja
daa
mov
push
ror
mov
xor
jle
insb
lds
or
les
and
cli
mov
ss
and
mov
xchg
push
push
shrb
mov
adc
lea
imul
xor
sub
and
stc
sbbl
out
sahf
outsb
push
and
lret
xchg
sbb
stos
jmp
mov
add
fldl
dec
sbb
paddd
aam
xchg
aas
inc
xchg
pop
in
dec
sbb
test
jns
inc
out
sbb
das
lahf
cmc
cmp
push
lahf
xor
aam
in
cmpb
mov
idiv
shrb
mov
push
or
lods
cmp
int3
sub
das
fcmovnb
es
sbb
jmp
cmp
out
add
aad
addb
sbb
and
aas
mov
pop
cmp
pop
aaa
add
fidivrs
fsubr
adc
ds
leave
mov
xor
mov
sub
cvtps2pd
cmp
in
push
sbb
mov
in
lret
and
enter
lods
mov
xor
and
gs
sub
mov
fsubrp
roll
lahf
es
add
cmpsl
sbb
out
add
add
mov
jns
sbb
sbb
mov
or
cmp
sbb
mov
adc
inc
jbe
lods
cmpsb
or
or
xor
subb
sbb
addr16
mov
mov
and
jne
and
fcompl
jb
or
xor
pop
popf
fstl
outsl
dec
sbbb
clc
fwait
enter
cmpsb
imul
mov
mov
sub
cmp
jmp
mov
xorb
pushf
push
gs
jo
jg
fsubrl
sub
and
pop
stos
cltd
dec
jbe,pt
enter
dec
xchg
mov
cmp
and
stos
mov
insl
adcb
and
insb
cmp
pusha
and
mov
adc
ljmp
cmc
push
mov
lods
push
pop
xor
int
loope
sub
dec
xor
push
mov
push
mov
push
xlat
sbb
pop
pusha
mov
push
cltd
dec
outsl
ret
aam
cmp
cltd
lcall
sub
fidivrs
int
mov
aad
jno
ljmp
dec
cs
xchg
decl
outsb
in
loope
pop
aaa
loope
sbb
movsb
pop
call
cmp
or
sbb
cltd
imul
jge
xchg
inc
add
fildl
bound
mov
xchg
mov
mov
add
ds
cmpsl
inc
fcompl
dec
dec
inc
mov
sbb
sub
push
dec
mov
mov
test
cmp
inc
std
push
idivb
or
pop
rcll
out
loope
mov
or
out
fimuls
jecxz
push
pop
add
repz
mov
fwait
pop
jmp
mov
jmp
push
sti
cmp
iret
aaa
bound
mov
movsl
fwait
cmp
data16
out
and
sbb
sub
and
cwtl
aas
xor
lret
lods
sti
pop
fcoml
add
sbb
pushf
bound
icebp
sbb
movsl
mov
out
aam
pop
out
xchg
sub
dec
xchg
adc
inc
jp
push
mov
push
gs
and
sbb
dec
movsl
pop
cmpsb
fnstsw
or
ret
addb
sbbl
js
lret
jecxz
sbb
imul
hlt
cli
xor
sub
or
icebp
popf
jb
add
pop
pusha
xchg
mov
int
jbe
inc
pop
dec
add
jbe
dec
fwait
mov
jge
push
jecxz
mov
in
fistpl
stos
lods
test
mov
scas
insl
xchg
in
mov
mov
xchg
and
xchg
push
lods
test
jbe
push
lock
jae
xchg
rorl
pop
or
xor
leave
lcall
popa
orl
aaa
jge
lock
sti
sbb
popa
seto
sub
nop
cmp
fs
mov
ljmp
adc
stc
dec
jmp
adc
and
push
push
ds
jg
aaa
push
fstl
sbb
jnp
negb
pop
out
and
popf
cmp
decl
xchg
mov
nop
pop
iret
movsl
inc
rcl
je
xchg
pop
iret
inc
insl
xchg
nop
gs
jnp
mov
sbb
sbb
loopne
es
fdivr
mov
pushf
sbb
data16
fstl
xor
ljmp
cmpsl
lret
push
mov
faddp
and
std
lcall
dec
inc
idivl
push
popf
mov
dec
or
mov
fcoml
cmp
pop
addr16
jae
mov
jle
call
aad
scas
mov
sub
mov
push
divl
clc
test
lock
inc
cmp
jmp
xchg
imul
sbb
sub
dec
fwait
mov
sbb
inc
les
xchg
idivb
roll
pop
ds
xchg
cmp
pop
sbb
outsl
jecxz
ss
in
lds
div
lret
test
dec
pop
inc
mov
dec
jecxz
std
xor
iret
das
and
xchg
push
movb
jno
pop
inc
aas
mov
in
mov
add
sbbb
mov
mov
pop
push
out
lods
xor
jecxz
inc
inc
inc
lds
sbb
frstor
addr16
jne
or
or
mov
jo
sub
je
pop
push
mov
out
push
and
call
pop
sarl
imul
cwtl
jmp
cwtl
cmc
or
add
cmpsb
mov
pop
clc
mov
push
mov
sub
xor
rorl
das
inc
jge
sub
pop
push
mov
jnp
aaa
mov
adc
jo
jg
pusha
cwtl
lods
rclb
into
into
cli
das
sbbb
mov
outsb
mov
je
push
movsb
jmp
or
cmp
cli
stos
mov
nop
xor
aam
mov
mov
push
or
push
adc
dec
mov
cmp
cmpb
xchg
in
loop
aad
add
xchg
in
movsl
cltd
jo
shlb
pop
lcall
pop
sbb
xchg
add
sub
jmp
mov
sub
loop
cmc
jg
stos
mov
xchg
pop
pushf
mov
jns
in
nop
mov
mov
dec
cmp
pushf
xor
mov
push
inc
push
repz
push
sub
loopne
mov
push
cmp
scas
add
mov
sub
test
sub
test
int
mov
aaa
sub
pop
jbe
jg
push
es
mov
and
ret
sbb
pop
movsb
cmp
test
stos
insl
adc
in
push
dec
adc
xchg
jecxz
fwait
xor
hlt
mov
rcrb
out
mov
sub
in
in
cs
out
push
cmp
inc
pop
data16
inc
adc
bound
add
jecxz
ret
or
sbb
into
test
dec
bound
jg
push
push
cs
cmp
cmp
test
pop
in
mov
xor
or
pop
daa
push
xor
out
xchg
jl
push
fistl
dec
jb
ds
sub
lds
popa
roll
mov
mov
in
les
aam
jg
ret
jne
dec
and
xor
mov
jnp
xchg
mov
adc
sbb
and
or
mov
sbb
ret
inc
movb
popf
add
inc
cmp
mov
push
inc
js
daa
xchg
call
push
xor
shll
pushf
dec
sbb
fcmovne
jo
je
mov
outsb
mov
mov
inc
ja
pop
fidivs
mov
sub
out
sbb
push
sarb
test
and
mov
outsl
stos
sub
inc
out
dec
lods
push
insl
adc
icebp
cs
bound
push
mov
out
or
cli
xor
cli
or
pop
shl
push
add
shll
gs
fs
lods
fistpll
dec
jno
cmp
in
mov
dec
adc
mov
sub
cwtl
aaa
rcrb
out
cmp
out
push
aam
out
cmp
lds
jne
jae
jge
cmp
movsl
xchg
xor
jmp
imul
repnz
stos
pop
mov
or
movsb
xor
mov
lahf
cmp
je
lds
lods
jp
xor
je
xchg
iret
mov
rcrl
ja
outsl
pop
aam
out
aaa
cmp
pusha
and
lahf
aaa
mov
cli
mov
test
sub
dec
movsb
or
fcompl
add
push
xchg
fsubrl
scas
push
jle
adc
mov
jle
sub
daa
mov
jmp
divb
adc
cmp
mov
and
xchg
gs
cmc
fwait
sbb
insl
stos
clc
jns
pop
dec
psubsb
rorl
mov
jmp
std
mov
in
dec
inc
out
inc
and
into
lahf
insb
mov
out
sbb
mov
lret
cmpb
in
ja
push
rol
nop
cmp
xchg
fstpl
sahf
push
movsl
jmp
arpl
loop
test
xor
in
ja
jecxz
fidivrl
in
es
ret
test
add
mov
addb
mov
out
outsb
sar
jecxz
es
popa
push
lods
mov
ja
int
dec
push
fdivp
jmp
push
daa
fs
das
xchg
fldl
cltd
lret
mov
push
inc
pop
mov
addr16
lahf
jl
shrb
pop
sub
in
dec
add
lea
sub
fucomip
cld
pushf
std
filds
repz
aad
sbb
sub
jl
cli
xor
insl
xchg
jns
and
lods
nop
sub
ds
dec
stos
push
loopne
cmp
mov
shrb
mov
pop
testl
pushf
repnz
sub
sub
shrl
sbb
aad
jnp
scas
adc
xor
xchg
jae
mov
scas
mov
adc
and
sbb
or
bound
subl
sub
cs
and
popf
js
pop
push
fsubrl
dec
lods
rcr
daa
dec
push
jle
push
cmpb
or
div
cmp
push
aaa
loop
push
xchg
and
test
js
insb
pusha
shll
cmp
aam
icebp
cmp
and
and
lods
das
test
mov
and
cltd
aas
cmp
lret
jg
dec
xchg
sbb
stc
lea
sub
out
out
push
push
pop
sub
int3
xchg
xchg
cmp
imul
cmp
fbstp
adc
mov
ret
fildll
lcall
rcl
push
scas
std
mov
sub
xor
iret
mov
int
lahf
mov
outsl
es
sbb
outsb
lods
gs
xor
cmp
lds
sbb
jecxz
add
jo
sbb
lock
filds
stc
jecxz
pop
es
adc
fadds
stos
xchg
lods
lods
lcall
mov
in
ljmp
jb
fnstsw
or
xchg
or
adc
adc
notl
rorl
nop
insb
and
andb
outsb
pop
push
lds
stc
lods
and
popa
add
in
fadd
and
xor
clc
adc
sub
push
out
lods
push
imul
fwait
mov
inc
sub
mov
es
dec
jns
add
imul
js
iret
movsl
sbb
push
and
jb
insl
dec
xchg
jae
popa
pop
sub
sarl
mov
outsl
imul
ret
in
xchg
adc
stos
xchg
pop
dec
pop
jne
mov
push
bound
mov
push
inc
arpl
xchg
adc
stos
lahf
loope
inc
jnp
cltd
cmpsl
jle
shlb
rclb
inc
xor
sti
xchg
pop
cli
rcll
xchg
or
incl
call
sar
fisttpll
addr16
mov
cli
sbb
sbb
xor
mov
cmp
dec
jmp
xor
sbb
xchg
pop
enter
arpl
movzbl
push
clc
arpl
lea
rorb
add
insb
in
xchg
jecxz
lcall
push
nop
xchg
jae
pop
mov
scas
rcll
inc
pop
lahf
cmpsl
mov
xchg
xchg
cltd
sub
inc
scas
dec
out
or
cwtl
mov
sbb
aad
enter
inc
and
into
dec
inc
xchg
icebp
sbb
push
push
ret
inc
xchg
dec
stc
lea
inc
jbe
dec
shrl
nop
pop
stos
adc
cmp
aad
jge
push
mov
shl
push
inc
adc
lods
scas
sti
clc
mov
fadds
insl
aas
xorl
ret
jo
adc
push
mov
xchg
call
and
push
loopne
sub
and
jge
dec
or
ret
sub
insb
xor
jo
ljmp
pop
mov
dec
pop
jo
cmp
sub
rcr
lret
in
mov
cmpps
loop
inc
adc
dec
dec
rorl
xlat
ret
lods
ffreep
mov
sbb
out
lds
dec
lods
fldenv
push
pusha
jge
loope
pop
cwtl
testb
adc
inc
fsubl
push
jno
mov
push
bound
insl
xchg
sub
cmp
mov
mov
clc
adc
fchs
int3
scas
add
divb
test
mov
jl
loop
adc
repnz
mov
jmp
icebp
hlt
rorb
scas
lret
mov
sub
lock
jae
jle
xchg
rcll
cmpsb
inc
decl
mov
lea
out
fcmovbe
jno
or
cld
cs
mov
cmp
xchg
das
jne
and
inc
push
adc
mov
push
inc
cs
ds
iret
lret
stos
inc
movsl
pop
out
data16
icebp
adcl
ret
xor
cld
lock
pop
xchg
sbb
stos
loopne
mov
pop
ret
js
out
jno
clc
cmp
ficoml
xor
pop
pop
decb
nop
jo
dec
and
pop
jg
dec
add
and
cmp
fldenv
inc
jmp
shl
fs
int
rcr
leave
pop
xchg
imulb
jne
repz
pop
add
push
pop
pop
leave
iret
imul
gs
es
test
push
pusha
call
popf
das
or
lds
dec
mov
pop
push
data16
add
loop
arpl
and
lret
sub
mov
int
shr
cld
aas
outsl
xchg
sub
hlt
std
in
aas
jae
cmp
lahf
lds
lds
xor
push
lds
and
mov
lock
bound
fstps
sbb
add
sub
dec
outsl
repz
mov
test
in
push
or
testb
xor
es
repz
add
lds
sti
dec
xchg
adc
scas
outsl
add
inc
lcall
jp
movsb
aaa
inc
and
cmp
emms
push
out
push
push
out
jbe
roll
cmp
pop
lret
mov
ja
push
push
inc
test
inc
push
stos
sbb
add
adc
or
push
stc
mov
push
dec
or
jl
scas
xchg
stc
mov
push
jno
sbb
add
cld
pop
shrb
nop/reserved
jle
mov
or
les
in
inc
sbb
in
mov
out
inc
in
ljmp
mov
mov
call
xor
call
mov
cmp
jmp
std
xor
xchg
stos
adc
sub
cmp
fdivl
in
pop
int3
or
das
pusha
jno
mov
sub
addr16
or
mov
mov
and
ljmp
xchg
push
cmp
or
scas
mov
insl
mov
cmc
decb
mov
mov
add
js
shr
stc
rcr
in
sbb
mov
add
or
sbb
mov
push
push
and
jmp
pop
int
dec
mov
int
pop
je
cmpsb
sbb
cmp
push
xlat
and
add
sbb
and
mov
ss
sarl
or
in
rclb
mov
outsl
mov
les
arpl
ret
andb
xchg
mov
repz
mov
in
stc
out
ljmp
adcl
mov
pop
notb
sub
ret
inc
rcr
cli
loopne
repnz
mov
sti
xor
cli
popf
add
jp
repnz
jne
xchg
insb
jge
call
dec
in
aam
cmpsl
inc
movsb
add
cmp
imul
aas
cmp
icebp
xor
notl
cmp
push
sub
ds
adc
rcrl
fldl
clc
nop
xchg
dec
mov
lret
or
or
push
std
dec
xor
fbstp
insl
out
out
xor
int
add
rol
add
push
leave
out
incl
sub
cmp
aam
xor
cli
pop
cmp
leave
in
dec
xor
cmp
ret
xchg
sbb
mulb
in
in
xor
sub
addl
sbb
or
sub
cmp
outsl
outsl
testl
xchg
and
add
and
and
mov
push
pop
lahf
fsubs
mov
xchg
dec
xor
loopne
xor
or
out
cmp
and
jp
add
cwtl
dec
sub
leave
call
aad
xchg
ror
sahf
xor
xchg
ljmp
sub
xchg
rorb
repz
add
push
std
stc
and
dec
dec
sbb
sbbl
xchg
jno
pop
cltd
ds
daa
insb
fucomi
sub
jns
fsubl
sbb
push
jb
inc
stos
inc
unpckhps
xchg
adc
in
lea
cmpsl
ret
pop
imul
loope
clc
dec
add
test
in
pushl
lock
ljmp
loopne
jnp
jle
sub
sub
jmp
mov
inc
jg
lds
inc
int
movsb
jmp
pop
pop
xchg
clc
add
inc
mov
push
xchg
xor
repz
sbb
jg
sbb
jecxz
push
add
test
sbb
push
fsubs
xor
push
movsl
lods
subb
lcall
inc
lds
mov
shrl
pushf
push
push
lcall
xor
testb
mov
cmpsb
fdivrs
in
and
cmp
lret
mov
mov
adc
sub
pop
cmp
adc
mov
data16
push
mov
mov
adc
mov
xor
jne
cli
adc
pop
lcall
add
aad
pop
and
les
stc
movsl
and
sbb
inc
and
pop
pop
jbe
mov
dec
bound
lcall
insl
push
mov
sub
mov
fidivl
mov
or
push
sahf
in
fistpll
in
jb
mov
dec
or
pop
sub
mov
push
adc
pop
aaa
jns
xchg
adc
adc
pop
push
push
cwtl
mov
jmp
jl
fnstcw
or
ret
stos
push
cmp
fstpl
cmp
push
sub
shrl
rcrl
push
lods
push
ja
loopne
test
leave
call
xchg
pushf
movb
ljmp
cmpsb
inc
dec
mov
add
popf
or
mov
cs
dec
sub
mov
mov
dec
and
fdivrl
loope
daa
or
mov
mov
push
ds
cli
in
decl
mov
push
hlt
mov
shl
int
mov
notl
idiv
dec
jl
loopne
sti
jge
push
add
negb
or
mov
loop
xor
pop
xchg
mov
lods
mov
in
rclb
inc
mov
or
cmp
mov
xchg
xor
in
add
cmpsb
mov
add
repz
ljmp
pop
loopne
jne
les
xchg
add
mov
mov
mov
mov
xchg
cmp
xchg
imul
testl
aad
or
int3
jne
cli
scas
mov
push
dec
js
hlt
pop
fimuls
data16
xor
xor
movsl
mov
sub
cmp
lea
aaa
or
daa
rcrl
stc
add
mov
ds
xor
subb
mov
cli
cmp
mov
lahf
inc
in
repnz
leave
fmulp
push
or
mov
push
mov
mov
test
fisubrl
aaa
add
xchg
inc
imul
dec
incl
push
rcl
inc
outsl
addr16
mov
mov
flds
add
lret
sbb
repnz
popf
sbb
cmc
mov
imul
es
aad
inc
inc
in
cmp
xchg
loop
xlat
fwait
sti
test
clc
mov
shll
mov
mov
repnz
push
mov
xor
jae
aas
jmp
dec
adc
sti
dec
sub
out
push
jl
jns
lods
cmp
hlt
mov
pop
push
pop
cmpsb
jno
sbb
pop
mov
mov
inc
lret
push
xchg
dec
cmp
cmp
jmp
out
mov
sub
loop
xchg
xchg
xchg
imul
pop
push
loop
mov
outsl
adc
add
stos
mov
mov
cwtl
les
or
mov
inc
sarb
inc
pop
xor
mov
push
dec
int3
mov
std
lcall
fidivrl
dec
cmpsb
pop
mov
std
mov
sbb
xchg
daa
dec
inc
xchg
and
xlat
rorl
scas
lds
das
adc
adc
shlb
ds
adc
mov
ljmp
add
ret
insb
jl
xchg
scas
mov
xchg
insl
dec
mov
xchg
leave
fldenv
call
add
into
jo
xchg
leave
fwait
rcll
jnp
sub
imul
jb
jmp
mov
pop
data16
adc
pop
das
xchg
mov
jecxz
cmp
insb
test
ja
idivb
push
popa
adc
mov
cmp
and
cmp
mov
lret
cmc
or
adc
jo
leave
mov
repnz
jle
mov
rcll
jae
add
test
rolb
jg
test
ds
test
pop
sub
repnz
cmpsl
lret
push
mov
mov
decb
dec
insl
loop
adc
adc
pop
filds
test
outsl
fstpl
movsb
push
stos
and
cs
test
pusha
push
mov
and
dec
jo
fldcw
ss
and
push
pusha
loope
fiadds
inc
cld
cmp
dec
add
push
or
cmp
insb
aad
jb
shlb
pusha
call
subb
or
lods
mov
cmpsl
mov
sbb
fmull
shll
and
lods
jno
xor
popa
adc
lret
jns
daa
dec
lcall
dec
cld
fs
pop
fisttpl
mov
mov
or
sub
adc
ficompl
and
mov
orb
add
stc
dec
sbb
mov
mov
fstl
mov
xor
xorb
push
cmp
idivl
xchg
xchg
in
sbb
jns
sbb
pop
outsb
test
out
mov
popl
incb
in
aaa
cltd
mov
mov
mov
lahf
pushf
divl
jns
icebp
scas
mov
inc
insb
push
mov
in
lds
jb
mov
sub
cmp
addb
es
fs
pop
xchg
mov
dec
das
out
inc
scas
cmp
enter
cmpsl
mov
xchg
jp
cli
inc
sbb
mov
xor
mov
adc
fstps
cmp
andl
jb
testb
sbb
ret
adc
out
fs
jo
mov
int
stos
mov
jmp
fbld
cld
or
cmp
sbb
pushf
daa
shll
dec
xchg
jns
cs
inc
mov
sbb
fs
pop
or
lock
sbb
jno
and
add
or
shll
outsl
sub
push
jb
sbb
and
jo
nop
les
out
xor
jne
mov
insb
or
pop
mov
sar
rolb
jecxz
fstpl
int3
or
stos
jle
push
mov
mov
pop
mov
sbb
jbe
loope
mov
jg
or
xor
sahf
leave
sub
mov
jecxz
xchg
push
cwtl
ja
cmp
fsubs
mov
imul
dec
inc
movsb
enter
out
scas
loope
fmul
sbb
push
and
inc
enter
sbb
dec
divb
and
jno
or
sbb
inc
cld
fnstenv
fsubrs
sub
add
add
cmpsb
or
cmp
lcall
mov
jae
hlt
adc
jb
adc
repz
sbb
xchg
pop
int
push
inc
dec
and
hlt
stos
outsl
mov
test
mov
pop
jae
cmp
ss
mov
inc
sarb
mov
xchg
mov
in
inc
std
stos
mov
cmpsb
fs
push
mov
leave
push
rorb
mov
xchg
xor
insb
rclb
movsb
jle
test
jns
push
ds
mov
lret
mov
movsb
movsl
or
shlb
js
hlt
dec
mov
xchg
push
mov
call
push
jns
inc
in
mov
std
mov
lds
sbb
fnsave
push
mov
mov
int3
mov
push
or
pop
or
imul
add
pop
das
xchg
adc
pop
sub
lods
mov
rcr
dec
sub
stc
xchg
inc
mov
aaa
das
dec
fdiv
fsts
mov
dec
imul
jae
lds
cltd
xchg
adc
daa
aam
arpl
push
sbb
mov
mov
icebp
xor
adc
insb
jae
xor
pop
or
jle
push
jo
pop
nop
mov
xor
cmp
cwtl
mov
daa
ret
xor
gs
adc
mov
jno
dec
add
push
cltd
cmp
call
and
cmp
pop
in
scas
mov
shr
sarl
cltd
mov
sbb
push
xor
push
aad
and
push
daa
ret
jl
push
mov
ljmp
push
cmpsb
lods
inc
pusha
add
mov
mov
push
js
mov
or
pop
lock
mov
ret
insl
cmp
xchg
adc
or
popf
xchg
sbb
cwtl
imul
arpl
mov
push
shlb
in
negb
das
fcoms
xor
cmc
xor
adc
testl
fmul
inc
xchg
in
stc
inc
add
push
adcb
cmp
push
jno
sbb
xchg
popf
fildll
sub
xchg
sahf
and
push
xchg
mov
mov
and
mov
insb
mov
jno
xor
inc
dec
aam
add
fsub
xlat
add
push
stos
add
mov
mov
jb
xor
inc
inc
cmp
add
or
xchg
sub
mov
mov
jmp
out
bound
inc
mov
pushf
out
xor
fdivl
jp
inc
xchg
fs
sbb
mov
jb
xchg
addr16
pop
imul
jae
and
rclb
lret
jns
push
push
mov
in
call
cmp
es
push
lret
dec
xor
mov
inc
mov
popf
push
add
ds
out
adc
jnp
xchg
lret
sarl
sbb
adc
mov
jle
inc
dec
pop
xchg
dec
cmp
jnp
ja
int
inc
xchg
rcrl
popa
pop
data16
in
cld
ficompl
jns
mov
aas
pop
mov
add
mov
cld
aaa
outsl
mov
push
rol
pop
xor
sbbl
pop
shlb
mov
mov
lock
sbb
fld
xchg
es
jge
ja
loope
add
outsb
ss
outsl
lcall
movsl
cmpsl
cmp
xchg
out
mov
jb
sub
fmuls
lea
in
mov
sti
sahf
test
roll
xchg
xor
inc
fs
fstpl
hlt
adc
sub
je
cld
xchg
fdivrs
into
xor
in
daa
mov
fcomi
jp
or
scas
sub
xor
pop
int3
sbb
aad
mov
cmc
pop
ret
pop
pop
jno
add
je
lds
mov
arpl
xchg
cmpsl
cmp
mov
add
adc
das
inc
gs
dec
push
push
ljmp
f2xm1
mov
scas
lods
lret
sub
pop
imul
push
and
int
push
pop
into
inc
inc
loopne
shrb
push
icebp
lods
lds
add
sub
mov
lcall
dec
hlt
pop
cmp
pushf
pop
subb
stc
xor
sahf
xchg
hlt
sub
ja
aad
test
repnz
aam
pushf
inc
mov
add
out
testl
scas
ret
jecxz
mov
scas
stc
lods
lahf
insb
inc
pop
movsb
in
ja
pop
mov
dec
pop
and
ja
es
cmp
scas
jnp
push
rorl
faddp
dec
pusha
in
sub
xor
retw
mov
xor
mov
pop
cmp
sbb
mov
adc
jo
jns
cs
out
mov
mov
sub
add
daa
dec
inc
enter
repnz
push
es
addl
dec
or
push
outsl
cli
hlt
cmp
sub
jp
push
sub
jp
pop
add
push
add
clc
mov
xchg
cmp
add
cld
mov
or
push
loope
in
mov
dec
pusha
push
cwtl
adc
enter
popf
pop
lods
adc
inc
xor
or
pop
dec
dec
cwtl
sub
bound
sar
pop
adc
inc
and
ret
es
cmp
mov
das
mov
lahf
hlt
fists
mov
xlat
nop
xchg
popa
rcrl
xchg
adc
rorl
jg
mov
repz
sbb
pop
jecxz
or
jp
fisubrs
fdivs
out
sub
mov
aad
lods
clc
adc
ret
sbb
stos
mov
out
test
adc
dec
fnsave
fwait
mull
loop
pop
push
fdivs
mov
xchg
push
push
jecxz
or
mov
jmp
sub
cmp
pushf
scas
cmp
pop
lret
lret
cli
insl
cli
push
test
cmpsl
xorb
xchg
sbb
arpl
inc
repz
xchg
aas
mov
push
mov
jecxz
xor
stc
push
adcb
mov
sbb
pop
stos
lret
cmp
aas
dec
mov
fildll
jae
inc
add
outsl
mov
jo
enter
dec
xchg
add
push
gs
out
or
xchg
rolb
push
adc
arpl
lahf
stos
in
and
xor
sbb
out
cli
adc
mov
orb
xor
mov
and
je
inc
mov
into
xor
fidivl
pop
lods
imul
adc
xor
in
mov
inc
mov
pop
test
jno
aaa
int3
xor
mov
xorl
stos
sub
call
ret
insb
push
test
cltd
xor
inc
enter
rcll
popf
push
pop
add
jnp
mov
cmp
xchg
mov
sbb
xor
rcrb
sbb
jae
push
outsb
sbb
iret
fldcw
sub
repnz
cmpsl
adc
repnz
adc
adc
nop
sbb
pop
out
cmpsl
push
ret
jecxz
ret
jno
paddusw
ja
xchg
push
pop
js
xchg
jg
fwait
out
push
loopne
cs
add
or
insl
in
aam
mov
std
fsubl
cmp
bound
fstps
pop
nop
inc
outsb
stos
jbe
scas
cmpsl
xor
sbb
movsl
mov
mov
shl
xor
sbb
iret
sarl
xor
frstor
stos
xchg
jl
cmpsb
sarl
icebp
lock
sub
mov
push
push
push
daa
dec
stos
jns
add
xchg
xchg
push
mov
inc
sub
fidivrs
xlat
scas
xor
jmp
inc
fs
xor
cmp
imul
cmp
scas
mov
xor
jl
jb
bound
sub
hlt
mull
sub
xor
xchg
fwait
xchg
lret
cmp
cs
orb
jne
mov
add
imul
sbb
push
add
rorl
add
jae
jns
mov
adc
scas
xor
sub
std
xlat
adc
cmp
fcomi
repnz
push
push
out
mov
cltd
mov
adc
jmp
fisubrl
inc
push
pop
ret
dec
pop
add
js
repz
sbb
pushf
call
aam
mov
sbbl
xchg
inc
add
push
inc
xchg
nop
xchg
mov
adc
add
lds
mov
push
stos
cli
pop
jnp
and
push
ds
insl
dec
int3
and
push
imul
addl
sbb
push
in
adc
pusha
and
mov
xchg
push
fcmovnu
jbe
ss
xor
dec
mov
sub
gs
lahf
xor
jg
iret
xchg
jecxz
or
jecxz
dec
push
xor
push
adc
jno
int
cwtl
sbb
rcll
mov
insl
cli
adc
mov
jo
jno
repnz
scas
inc
inc
xchg
inc
imul
pop
sbbl
fs
mov
orl
icebp
pop
mov
dec
push
lea
ret
das
dec
inc
mov
mov
push
pop
sub
fisubrs
xchg
fwait
cs
dec
imul
aad
or
xor
push
jne
sbb
test
xchg
enter
fisttpl
push
lret
mov
jnp
rcll
mov
xchg
adc
adc
dec
pop
test
dec
cli
mov
adc
xchg
stos
inc
mov
fs
test
scas
rorb
and
rolb
outsl
imul
add
int
sub
xchg
enter
std
test
mov
scas
xchg
in
mov
mov
jae
xchg
mov
sub
and
mov
dec
cli
sbb
sti
and
in
sahf
push
int
jns
fwait
scas
nop
xchg
outsl
lock
test
push
leave
fcomps
jmp
and
leave
lcall
les
out
adc
std
in
pop
incl
adc
sub
pop
push
pandn
and
mov
add
jne
fwait
in
cmp
mov
push
cmpsb
xor
or
test
xor
outsb
test
jnp
mov
mov
fbstp
in
adc
addr16
addb
gs
pop
pop
das
push
dec
int3
jl
divl
cmpsl
mov
je
adc
test
and
mov
jge
inc
adc
mov
in
scas
loop
adc
mov
in
outsl
fsubl
or
jb
xchg
inc
out
jnp
inc
push
push
dec
icebp
xchg
out
movsb
mov
sbb
sbb
push
sbb
mov
repz
cli
arpl
cmp
mov
or
xor
into
mov
addb
lods
xor
xchg
mov
jmp
xlat
addr16
xchg
mov
or
mov
sub
or
mov
jb
mov
fwait
bound
ja
js
loopne
in
lds
push
imul
sub
mov
aaa
lcall
sahf
mov
arpl
out
xchg
imul
inc
xor
test
repnz
arpl
data16
in
shrl
pop
aam
jmp
sbb
call
jle
add
int3
ss
mov
roll
arpl
push
mov
outsl
mov
xchg
pusha
repnz
sub
adc
in
out
adc
fs
hlt
mov
dec
dec
lcall
ret
push
mov
xor
aas
gs
lret
inc
mov
xchg
in
nop
push
fldcw
cld
ss
pop
jns
sub
outsl
xor
jl
and
cmc
xor
mov
mov
out
mov
je
or
add
push
and
cmp
fadds
mov
and
ret
out
insl
push
sarl
loope
add
test
sub
cmp
jns
and
addl
add
addr16
sbb
out
mov
sbb
mov
cwtl
jl
push
mov
mov
cmpsl
adc
aaa
adc
lahf
popf
mov
inc
sub
pop
and
loop
sub
xchg
ds
sahf
sub
pop
mov
call
addr16
pop
cmc
push
lock
adc
sub
jns
loope
sbb
pop
test
push
add
cmpsb
xchg
mov
in
movsl
lahf
pop
data16
sbb
inc
xchg
incb
into
mov
push
out
xchg
sarb
pushf
outsl
push
pop
repz
test
cmp
xor
lahf
cmpsl
dec
nop
xchg
sbb
fdivs
stc
movsb
mov
inc
push
pop
ret
aad
out
jge
outsb
push
inc
shl
pop
cld
mov
ja
mov
add
sahf
je
pushf
mov
xchg
xor
add
mov
cmp
sbb
sub
daa
das
addr16
mov
mov
and
rclb
xor
push
daa
cmp
fcomp
aaa
pop
mov
out
jne
cli
adc
sbb
jmp
bound
in
lock
jecxz
sub
enter
mov
call
push
sarl
in
hlt
sub
cmpsl
inc
mov
xor
clc
movb
cwtl
sub
jbe
jl
sub
xchg
fnsave
sbb
jno
mov
faddl
decl
imul
ljmp
fdivr
xchg
jl
mov
rolb
add
das
pop
sbb
mulb
in
out
xor
and
filds
jno
and
pop
inc
pop
jle
jle
shlb
call
inc
add
loope
int3
and
cmp
aaa
or
jnp
mov
pop
loopne
ds
jecxz
inc
lock
jle
xor
push
sbb
dec
add
imul
sti
pushf
mov
lods
jmp
dec
int
inc
gs
sub
mov
in
stos
pop
push
dec
ja
xchg
push
icebp
out
in
fstpt
je
adc
sbb
inc
jl
and
icebp
dec
test
test
push
xchg
insl
lahf
pop
or
lcall
insl
daa
fs
rcll
pop
push
mov
inc
push
ds
ss
mov
push
inc
lret
out
call
or
enter
mov
mov
inc
mov
sub
pop
xor
test
mov
adc
jbe
cmc
mov
jne
xor
out
mov
mov
inc
lock
push
or
sub
loop
add
ja
std
repnz
dec
clc
push
inc
orb
es
inc
sbb
inc
mov
loopne
aas
cmp
daa
push
nop
cwtl
pop
es
gs
xor
push
pop
out
push
lahf
inc
jg
arpl
inc
and
hlt
mov
mov
cmp
pop
jbe
sbb
xchg
mov
imul
cmpsb
in
icebp
pop
mov
pop
les
popa
inc
lock
dec
outsb
pop
pusha
aaa
pop
sbb
push
xchg
jo
xchg
mov
gs
push
loope
rdpmc
imulb
sti
mov
mov
mov
or
ret
pushf
adc
mov
add
sbbl
mov
dec
outsb
dec
out
cwtl
xchg
addl
outsl
jl
mov
scas
insl
rcl
sub
sub
fcmovu
mov
inc
fsubl
bound
test
das
aad
insb
xor
push
push
or
and
divl
xchg
fucomip
mov
movsl
and
ja
rorl
movsb
fdivrs
mov
dec
xor
and
pop
icebp
and
cmc
xchg
xchg
adc
rorl
pop
push
inc
rcr
sub
xor
mov
jae
jbe
lea
jns
adc
nop
imul
ss
inc
add
mov
data16
cmpsl
sti
arpl
or
or
insl
mov
jle
push
inc
push
ja
cmc
mov
repz
add
jnp
leave
arpl
pusha
cmp
push
push
cmp
xchg
add
ss
lahf
scas
pop
mov
clc
pop
pop
test
mov
dec
dec
into
test
inc
cltd
push
sbb
repnz
push
inc
push
test
or
add
int3
push
sbb
inc
cltd
dec
ja
sbb
repnz
xchg
bound
cmc
movsb
sub
sbb
fucomip
dec
sub
cmc
pop
push
mov
addb
mov
mov
fldl
dec
std
pusha
fwait
loop
sub
les
jns
insb
and
lods
lahf
dec
arpl
leave
jecxz
jecxz
inc
inc
mov
fwait
daa
cmc
notb
mov
add
lods
pop
aas
arpl
mov
icebp
cmp
sbb
repnz
enter
shll
jmp
in
mov
mul
into
leave
ja
mov
mov
cmp
inc
std
and
call
dec
outsb
out
icebp
fiadds
pop
push
pop
data16
mov
lods
enter
xchg
xchg
mov
sub
pop
mov
scas
lea
test
arpl
das
loope
popa
pusha
jno
outsl
bound
icebp
lret
out
push
test
cli
dec
popa
loope
hlt
jns
jns
inc
dec
in
sysret
adc
xor
es
push
lds
xlat
subl
sub
xchg
adc
and
dec
sub
js
cmp
fistpll
cwtl
and
mov
in
jge
in
xor
movsb
dec
outsb
loop
daa
or
fnstcw
pop
lret
or
dec
in
jae
mov
xor
push
scas
rolb
mov
cmp
sarl
cwtl
xor
mov
xor
rcrl
adc
jl
loopne
cwtl
in
jae
xor
inc
movsl
sbb
xor
aam
movsb
test
outsl
xor
xchg
movsb
loop
inc
pop
mov
aad
xchg
icebp
out
cmc
insl
mov
clc
rorb
push
hlt
push
stos
sbb
push
lea
fwait
dec
xorl
cltd
imul
push
adc
and
aaa
xor
mov
out
es
mov
mov
push
jb
mov
std
add
mov
negb
in
addr16
dec
xchg
imul
call
jmp
stos
movsb
jecxz
sbb
mov
dec
inc
cltd
add
das
scas
insl
sti
mov
test
mull
enter
push
jle
cld
cs
cmp
imul
repnz
adc
mull
out
andb
aaa
lret
pop
cli
movsb
sub
add
rcl
fdivs
sub
xchg
andl
mov
mov
cmpsl
shr
out
or
cmpsb
adc
and
pop
bound
dec
leave
push
aad
mov
lahf
jg
xchg
jno
pop
xchg
rcrb
lret
aam
dec
cmp
icebp
imul
mov
js
jle
pop
popa
out
push
repnz
jns
scas
push
dec
addr16
fwait
jle
iret
scas
xchg
imull
xchg
add
xor
mov
mov
xchg
das
and
and
hlt
test
mov
push
lods
cmp
push
addr16
cmpsl
out
cmp
je
in
cli
or
ret
sbb
inc
sbb
out
addr16
mov
ja
sbb
movsb
cltd
mov
outsb
ds
mov
jb
outsl
out
xchg
icebp
jmp
pop
sbb
loope
adc
es
cmp
pop
mov
jl
popf
popa
outsb
xor
mov
rcrb
in
and
mov
xor
hlt
mov
les
test
inc
push
int
dec
cmpsl
add
gs
jge
mov
mov
lods
scas
imul
test
sub
and
mov
inc
fcompl
addb
pop
fdivl
lods
cmpsl
jl
or
pop
or
ret
js
jo
addr16
jns
adc
sbbb
dec
mov
or
cmc
mov
hlt
inc
enter
adc
imul
pop
xchg
push
movsl
pusha
xchg
enter
into
notl
mov
mov
lea
or
dec
cmc
adc
aas
sti
aad
arpl
int3
xchg
adc
jo
jo
dec
mov
ret
ds
xchg
in
xor
les
movsl
sbb
pop
mov
cmp
push
fnsave
push
out
insb
cmp
mov
rclb
adc
inc
mov
pop
pushf
fdivl
shrb
jmp
mov
mov
enter
dec
jne
pop
push
std
fidivs
mov
adc
in
jle
jg
jo
mov
clc
add
add
ret
dec
cmp
stos
fstpl
call
inc
inc
subl
ret
cltd
cmp
mov
out
mov
dec
aaa
sbb
push
push
push
lret
inc
pop
dec
loope
mov
pop
fldenv
xchg
imull
jg
push
mov
and
push
or
xchg
cltd
xchg
cs
clc
rclb
ss
inc
in
int3
enter
adc
pop
es
sub
or
mov
sti
adc
inc
cmpsl
insl
xor
xchg
repz
popa
shl
push
or
push
bound
sub
mov
cld
call
hlt
test
mov
dec
dec
pop
in
rorb
stc
and
mov
and
inc
xchg
out
push
ljmp
and
mov
sbb
sti
hlt
and
fcoml
rcr
inc
out
mov
mov
jbe
xor
stos
ds
mov
cmp
sbb
dec
aas
lret
dec
lods
ja
and
movsb
jnp
mov
mov
and
push
or
xor
cmp
cmp
push
das
pop
xor
push
fwait
jecxz
cmpsb
sar
repz
push
jge
mov
or
push
pusha
sbb
jmp
xchg
pop
fmuls
imul
fs
iret
aam
mov
pop
mov
xor
mov
pushf
bound
or
sub
pop
ficoml
xor
dec
icebp
enter
sbb
pop
or
ds
push
sub
mov
and
pop
mov
mov
dec
pmulhuw
xchg
mov
ss
int3
loope
das
cmp
or
js
in
sub
add
lds
ret
push
test
aas
push
add
aaa
dec
mov
xor
dec
xchg
cld
xor
mov
shlb
cld
mov
xchg
aaa
in
sbb
test
add
jecxz
repnz
nop
or
jns
add
daa
xor
pop
int3
add
sub
jmp
xchg
mov
stc
xor
and
xor
xor
jmp
xchg
cmc
or
xor
sub
int
inc
into
cmp
cmp
mov
loopne
rcrl
mov
xor
cmc
std
dec
mov
out
and
jbe
jo
sbb
adc
iret
shr
xor
jmp
andl
loopne
or
dec
movsb
mov
xor
or
sub
pop
cmpsl
add
sbb
inc
fcomps
loope
dec
jae
and
dec
cmp
adc
repz
lock
push
lea
jmp
push
jle
mov
or
stos
ljmp
sbb
shlb
data16
std
in
mov
cmp
dec
push
popa
rorl
sti
dec
xor
mov
call
add
testl
jp
and
stos
and
adc
xorb
adc
movzwl
xchg
mov
cmc
in
in
dec
push
imul
xor
inc
aaa
push
shlb
jecxz
lahf
cs
call
icebp
int
and
or
shrl
add
jnp
outsl
mov
or
jp
push
movsb
jo
fs
inc
fs
jns
jl
enter
aam
xor
mov
dec
xchg
test
jp
cmpsl
or
sub
sub
mov
xor
and
push
and
push
xchg
daa
decb
out
sti
clc
gs
jbe
or
dec
sub
add
adc
sbb
add
xor
jle
daa
xchg
sub
mov
and
cmp
xchg
arpl
rcl
dec
in
nop
xor
and
pop
fmuls
out
sbb
xor
pop
mov
loope
popa
outsl
stos
out
lock
pop
das
xor
dec
xchg
pop
lods
jbe
out
mov
aam
shl
push
cltd
mov
add
inc
lcall
jle
add
addl
fdivl
and
xor
mov
push
xchg
push
mov
popf
xchg
mov
pop
hlt
xchg
or
jnp
cmpsb
fdiv
imul
int3
push
xchg
adc
and
and
cs
push
jecxz
add
adc
xchg
cmovg
pop
outsb
mov
cwtl
mov
inc
popf
push
leave
cmp
addr16
sbb
stos
mov
xor
inc
push
dec
push
nop
test
imul
mov
inc
xchg
les
sbb
cmp
or
lds
push
enter
in
dec
das
or
pop
rolb
dec
mov
cmpsl
add
dec
iret
inc
movntq
jns
je
sub
jns
push
and
jg
adcl
jnp
fsubs
xchg
in
dec
icebp
sarl
cmp
sub
xchg
out
pop
cli
insl
lds
scas
icebp
and
lods
push
jbe
xor
in
dec
mov
std
imul
ds
mov
aad
sub
rorb
movsb
ret
mov
xor
mov
insl
sub
mov
dec
mov
jp
push
clc
nop
sub
push
inc
mov
jmp
rorl
pop
xor
lret
mov
ficoms
mov
cmpsl
cmp
scas
mov
out
dec
mov
pushf
pop
movsb
test
xchg
jbe
dec
in
les
mov
mov
mov
movsl
add
mov
sub
sbb
mov
es
cmp
mov
lret
jmp
xchg
jo
cld
push
int3
mov
popa
add
js
push
dec
jle
add
cld
xor
insb
pop
aaa
xchg
xor
call
inc
iret
decb
andl
push
mov
pop
call
and
roll
test
jmp
xchg
jo
or
adcb
insl
xlat
js
cmc
outsb
or
shrl
push
es
imul
add
mov
ja
lods
jl
loope
pop
adc
enter
jle
std
movsl
xchg
and
jmp
shrl
xchg
pop
popf
xchg
aas
and
mov
xchg
adc
cld
xor
xor
jnp
pushf
mov
cmpsb
jle
mov
shlb
or
rcrl
and
push
out
cwtl
cmp
mov
push
push
imul
cmpsb
sub
lock
sbbl
adc
sbb
push
jne
cmp
es
movsb
xor
ds
dec
mov
sub
dec
inc
push
mov
ret
leave
dec
push
inc
les
sbb
sahf
xor
int
fs
mov
int
repnz
and
mov
cltd
or
push
insb
jae
push
mov
or
pushf
orl
test
add
add
cltd
into
out
sbb
mov
ss
xor
jo
cli
aam
cs
stc
and
jmp
sarb
push
inc
test
sbb
xchg
add
mov
xchg
fldcw
adc
out
xorb
out
mov
iret
mov
mov
stos
test
sbb
mov
orb
pop
fisubrs
nop
pop
loop
roll
push
test
add
and
popa
cmpl
inc
inc
cli
push
sti
out
clc
ljmp
push
outsb
insb
fstpl
test
xchg
fistpl
xchg
mov
negl
daa
jge
jo
lahf
popf
test
cmp
out
test
mov
popf
push
xor
ret
stc
rcl
pop
or
inc
in
outsb
test
dec
aad
push
out
jne
mov
or
adc
negl
ret
pop
fildl
inc
jge
ret
imul
xchg
push
inc
clc
dec
xchg
lock
and
test
or
lds
push
and
jnp
cltd
in
cmpsb
imul
fiadds
sbb
xchg
int
dec
lods
xchg
scas
xchg
adc
cwtl
repz
into
ret
jae
out
test
pop
addr16
mov
push
push
pusha
lcall
test
jmp
jns
roll
adc
je
inc
aas
sub
into
jecxz
dec
enter
outsb
lret
andl
lcall
roll
mov
push
inc
sbb
ljmp
push
add
mov
adc
loope
add
stc
mov
test
pop
lahf
jbe
mov
cmpsl
or
push
or
mov
inc
add
pop
pushf
sar
mov
ja
lret
and
in
pop
jmp
inc
je
aam
adc
test
adc
adc
cmp
sbb
push
mov
bound
xor
das
out
sbb
enter
aam
lahf
push
dec
pop
clc
sub
adc
jge
xor
mov
pop
addl
movsl
addr16
icebp
and
dec
rol
xchg
xchg
aas
jmp
jnp
lret
inc
push
shlb
dec
loop
jmp
adc
mov
cmp
dec
cmp
cvtdq2ps
insb
sbb
std
cld
popa
arpl
data16
fimuls
movsb
push
mov
dec
pushl
xlat
cs
mov
fmuls
and
outsl
ficompl
cwtl
jle
add
sbb
mov
in
cmp
shlb
jbe
xchg
xor
xchg
inc
xchg
aas
fld
push
out
jmp
jnp
sbb
sub
adc
xor
fs
mov
mov
xor
jecxz
pop
outsl
nop
xor
mov
cmpb
sahf
ret
push
iret
add
lcall
sbb
ja
scas
xorl
lods
and
or
aam
leave
stos
outsl
mov
mov
ss
rolb
orl
xchg
rol
sti
or
push
mov
fistpll
dec
and
dec
xor
inc
mov
sbbl
pop
jo
jo
mov
adc
adc
lcall
mov
cmpsl
fmulp
inc
lret
or
adc
jp
jecxz
ret
fistl
sbb
stos
js
xorb
pop
ret
lods
jae
jge
mov
pop
lods
mov
nop
xchg
adc
dec
add
add
adc
push
popa
and
sub
jo
call
sub
jnp
lret
xchg
inc
filds
int
test
ret
add
ds
ret
mov
and
std
pop
xchg
das
xorl
jns
setnp
stc
mov
ss
push
push
push
or
push
dec
mov
xor
rclb
pushf
lea
sub
dec
add
psubusw
mov
rol
push
adc
xchg
pop
sahf
repnz
xchg
hlt
or
xor
jb
loope
int
jb
loop
popl
sbb
sbb
inc
push
mov
push
popf
fists
ror
movsb
mov
inc
fwait
aaa
idivl
pop
push
cli
movsl
pushf
and
shll
hlt
push
mov
mov
mov
in
loop
lret
mov
xchg
insl
and
inc
mov
pop
add
mov
push
pop
mov
test
aad
lcall
imul
adc
mov
fwait
push
ja
and
cmp
lods
out
adc
incb
xchg
pop
popa
inc
pop
aad
sbb
data16
subl
test
loopne
test
or
mov
jmp
bound
mov
add
xor
push
clc
cmc
ja
inc
and
jp
sub
cmpsl
les
orb
inc
lods
pop
xor
pop
inc
fisttpl
push
dec
jb
cmp
lret
fldenv
jecxz
nop
mov
and
pop
sub
insb
mov
fldenv
pop
repnz
fwait
dec
call
mov
mov
and
es
dec
push
xchg
cltd
sub
mov
add
das
mov
inc
xchg
pop
rol
loop
push
sbb
aaa
add
push
cs
mov
jo
push
cmpsl
in
dec
mov
mov
inc
repz
cmp
test
cmpb
adc
stos
fsubs
sarb
scas
xchg
inc
stc
pushf
adc
pop
insl
icebp
notb
adc
jns
cwtl
cli
pop
inc
cmp
filds
inc
es
dec
cmp
cmpsl
lods
inc
movb
mov
or
xor
lret
push
sub
xchg
in
xchg
mov
fbstp
roll
imul
aas
cmp
pop
and
xor
enter
std
bound
es
ss
insl
adc
lahf
call
fwait
mov
popf
xlat
cmpsb
jne
push
neg
ret
out
out
add
pop
outsb
pop
add
movsl
push
inc
imul
ret
cmp
mov
mov
rclb
adc
gs
leave
out
mov
add
lds
xlat
dec
jg
ss
test
sbb
inc
dec
cmp
in
mov
push
test
xchg
test
fnstcw
add
jb
ss
std
mov
pop
pop
push
aas
push
cs
int3
movsb
rolb
jge
pop
mov
pop
outsl
dec
and
mov
in
in
sahf
mov
int
fidivrs
sbb
ficompl
shrl
sbb
rcll
jmp
pop
push
shll
xchg
in
push
js
mov
jg
dec
out
popf
inc
cmpb
icebp
testb
adcl
loope
jo
addl
mov
or
dec
icebp
adc
mov
xchg
pop
inc
stc
push
xor
rcll
jl
nop
xchg
adcl
sbb
jb
negl
mov
ret
jmp
mov
mov
movsl
xor
mov
pop
faddp
add
add
add
or
xorl
pop
mov
or
lcall
push
xchg
lds
enter
jle
js
fwait
add
outsl
sbb
pop
rcrl
and
mov
or
mov
push
xchg
fdivl
enter
iret
dec
push
ss
hlt
xor
repz
out
jno
jno
movl
aad
or
out
sub
ljmp
sbb
daa
xor
cmp
cld
lea
mov
lcall
enter
mov
hlt
cmp
out
xor
cmpsl
mov
jp
jmp
mov
sbb
or
xchg
sub
mov
xchg
add
into
lock
dec
bound
and
sbbl
outsl
dec
cmp
ficoml
mov
mov
aas
shlb
testb
stos
sub
xlat
add
jp
mov
xlat
jne
sbb
push
jl
mov
movsb
mov
mov
push
or
mov
cmpsl
push
lret
stos
dec
loop
cmp
nop
jbe
pop
repnz
gs
and
addr16
ljmp
out
addl
insl
and
mov
sbb
pop
int3
gs
cwtl
rolw
das
ret
xchg
mov
or
or
sub
sub
xchg
adc
cmp
inc
mov
stc
imul
sbb
jno
xor
cmc
xchg
dec
add
pop
ret
push
mov
mov
lret
sub
lret
fildll
in
dec
push
hlt
cmpsb
fsts
fadds
adc
and
jle
shlb
inc
leave
adc
jmp
xor
iret
pop
into
cld
mov
pop
jl
xor
sub
popa
cltd
andl
incb
or
and
jne
pop
mov
rclb
pop
call
and
movsl
add
xchg
sbb
xor
dec
outsl
loopne
xchg
cwtl
adc
adc
shll
gs
push
dec
decb
out
sbb
cli
jg
mov
cmpsl
in
sub
es
addb
jo
scas
out
adc
and
pop
les
jp
repz
jne
mov
xchg
mov
ret
sbbb
daa
and
lods
or
mov
lcall
mov
inc
jp
adc
outsb
into
outsb
out
pop
jb
and
imul
fstps
je
into
aam
ss
rcr
pop
jo
push
push
mov
jnp
inc
and
jno
jle
or
rcr
lret
cmp
stos
faddl
lret
push
out
stc
mov
mov
jle
dec
rcl
cwtl
adc
sbb
in
movsl
push
repnz
loop
loop
sbb
cld
imul
pop
pushf
adc
jb,pn
xchg
ljmp
or
cmp
testl
scas
loope
fwait
js
inc
movsl
xchg
xor
nop
xor
popf
into
xor
mov
je
mov
xchg
in
adc
aas
sub
xchg
cmp
stc
mov
mov
pop
lods
dec
fstpt
rcll
push
jne
adcl
pop
fadds
sbb
adc
xchg
ficomps
std
sbbb
or
pusha
add
cmpsb
lea
test
sbb
sbb
in
mov
xchg
sti
adc
jne
or
push
inc
cmp
or
adc
shlb
push
xchg
pop
imul
sub
cmpsb
inc
loope
cmpsb
dec
je
mov
push
inc
fisttpll
cltd
mov
push
stos
cmp
push
stos
loope
cmpsb
push
fsts
inc
cmpsb
add
mov
and
adc
push
loopne
and
ss
fcoml
xchg
mov
movsb
iret
mov
fmul
xchg
lods
out
fcomip
fadds
xchg
xchg
imul
pop
cmp
and
pop
clc
popa
mov
cmpb
mov
add
test
mov
cs
cs
std
lret
adc
xchg
inc
arpl
and
pop
xchg
mov
pop
sub
add
mov
movsb
mov
test
inc
sahf
icebp
push
imul
mov
adc
mov
or
pusha
push
mov
add
dec
out
mov
push
int
xlat
and
mov
negl
rcll
xchg
cmp
adc
cmpsb
data16
xchg
add
push
cmpsb
out
pop
jp
mov
xor
sub
ljmp
xchg
inc
cmc
adc
push
mov
decl
shll
enter
fwait
and
mov
xor
lea
cmp
lea
add
jp
fwait
xlat
dec
jns
jle
sti
sub
mov
inc
cmp
shlb
xchg
insl
popf
sbb
mov
int
push
xchg
ljmp
scas
out
mov
xor
jae
pop
inc
or
push
lods
dec
sbb
dec
and
push
or
leave
test
xor
js
jb
push
inc
shlb
jae
call
push
inc
sub
mov
or
dec
aam
lret
lcall
mov
xchg
and
test
jne
push
clc
xor
xchg
or
out
mov
push
mov
sub
sbb
lcall
imul
cld
inc
cmp
inc
jecxz
rolb
repnz
ljmp
stc
divl
lods
out
inc
sbb
jle
or
pop
clc
jl
mov
add
testb
xchg
jne
or
lahf
and
test
ljmp
mov
std
add
test
call
or
sub
pop
lods
aam
dec
fsubr
pusha
jecxz
lcall
adc
lods
cmp
cmpsl
or
lds
clc
sbb
lock
mov
and
lcall
mov
push
test
add
scas
xchg
enter
sub
sbb
shlb
dec
call
xchg
inc
cmp
sub
adc
insb
test
cltd
cmpsb
pop
pop
mov
push
xor
xchg
push
mov
lcall
notb
pop
jnp
mov
div
and
pusha
lds
mov
imul
mov
fs
int
push
icebp
daa
cmpsb
xor
push
sarb
xor
fucomi
aam
xor
lret
aas
pop
add
xchg
cmpsl
mov
jo
cmp
pusha
or
sub
adc
mov
mov
fsubrl
outsb
popf
cmp
out
scas
or
scas
pushf
fs
test
js
addr16
xchg
pop
mov
shr
sub
gs
pusha
pop
dec
lods
neg
mulw
sub
adc
pop
cltd
aaa
jg
mov
xor
push
enter
dec
repz
mov
stos
adc
xchg
mov
lods
dec
repnz
hlt
sub
ret
data16
cltd
fsubrs
rcll
aam
and
jecxz
mov
int
mov
scas
sbb
inc
jg
jl
mov
insb
arpl
lahf
xchg
inc
stos
mov
adc
ficompl
inc
into
mov
pop
arpl
into
incb
test
jmp
out
adc
jge
test
test
sbb
out
scas
ret
add
pop
sbb
mov
or
sub
out
stc
loopne
pushf
jge
fucomi
lods
mov
test
ret
fisubs
enterw
inc
popf
mov
cmp
jns
mov
push
dec
adc
fildl
xor
add
loop
push
cmp
or
popf
inc
jecxz
cmp
mov
outsl
insb
cltd
arpl
push
outsl
outsl
dec
cmp
insb
pop
inc
arpl
mov
leave
rol
xchg
and
sub
adc
lret
arpl
cwtl
into
les
and
xor
adc
movsb
xor
sub
fmul
jns
dec
mov
pusha
pusha
xor
sbb
gs
stos
mov
iret
movsb
iret
or
test
mov
ss
jo
inc
nop
or
les
aas
jo
pop
or
loop
shlb
sahf
loop
std
lods
sub
sbb
mul
push
ds
lds
lds
in
inc
outsb
inc
test
push
aam
imul
xorb
cmp
in
mov
outsl
out
or
fnstsw
movb
jmp
out
arpl
out
call
scas
xchg
inc
in
call
test
mov
jecxz
sbb
jno
mov
adc
cmp
add
lds
lcall
inc
imull
jae
ds
mov
pop
pop
and
imul
jbe
jmp
pop
xchg
xor
mov
ret
lods
cmpb
xor
imulb
add
aaa
mov
pop
test
mov
sub
dec
jg
adc
mov
cmp
fs
inc
add
out
divl
popa
int
outsb
test
inc
rorb
shr
xchg
push
jne
xlat
jno
push
and
push
lock
in
jns
ljmp
mov
adc
cmp
lods
push
rcll
mov
lahf
movsb
stos
in
add
jg
stos
dec
sbb
push
fsubrs
cld
imul
sbb
push
push
or
sbb
cwtl
and
sub
pop
push
test
insb
into
lods
jns
out
es
adcb
lret
popa
test
adc
sub
mov
pushf
push
sbb
inc
sub
jmp
jg
adc
pop
iret
mov
repnz
pop
xor
fxam
lcall
pop
sbb
xchg
mov
add
push
test
push
ja
jb
popl
or
shrl
lods
cmp
std
push
cwtl
pop
mov
adcb
mov
shl
enter
or
mov
gs
mov
in
imul
xor
or
mov
jp
and
jle
pop
fucomp
in
fsubl
dec
lods
mov
sub
push
mov
shll
lcall
arpl
and
inc
pop
arpl
xchg
jecxz
popf
pop
ret
and
in
cs
scas
stc
test
aad
nop
daa
push
pop
sub
pusha
pop
cmpsb
leave
inc
call
mov
and
scas
repz
cltd
or
shrb
shr
aaa
pop
icebp
insl
xor
outsb
sbb
cmp
xor
out
mov
mov
push
sahf
pop
sub
pop
mov
cmp
sub
lret
ljmp
xor
aad
xor
jmp
sub
loope
push
mov
adc
xor
add
imul
aaa
jae
orl
or
and
push
out
push
dec
mov
ljmp
in
lea
sub
push
mov
popf
inc
in
test
and
pop
loopne
push
add
inc
pusha
pop
mov
mov
xchg
aas
pop
jno
call
add
push
pop
dec
sub
jg
dec
mov
jno
ret
pop
in
sbbl
sub
int3
inc
cwtl
ljmp
test
pushw
out
add
gs
andb
dec
out
mov
jge
es
in
sbb
xor
cwtl
mov
push
inc
adc
pop
outsb
dec
dec
dec
arpl
movsb
ret
adcb
jns
xchg
sub
mov
jl
inc
sbb
ljmp
xor
out
push
movsl
cmp
xchg
or
out
aam
dec
add
ret
shll
lahf
xchg
fwait
sbb
jne
outsb
xor
xchg
popf
stc
sub
ljmp
dec
jae
mov
add
out
out
enter
cmc
jg
aam
or
fdiv
stos
adc
movsb
in
adc
loopne
hlt
das
and
mov
fildll
jl
leave
or
cmp
daa
pop
xchg
mov
aaa
fldl
and
mov
inc
aaa
and
mov
inc
add
or
push
leave
data16
orl
cmp
ret
mov
outsb
mov
mov
je
mov
jg
scas
mov
sub
movsb
mov
sub
cwtl
push
xchg
in
addr16
and
mov
jne
js
sub
mov
mov
push
hlt
jb
lods
leave
dec
popf
adc
xor
add
mov
addb
sub
out
push
jl
dec
xor
insl
lock
mov
push
call
sbb
mov
out
aas
adc
lods
sahf
mov
cmp
nop
sbb
lahf
push
xchg
mov
xchg
outsb
cmpsl
cmp
lret
jge
jp
lods
mov
xlat
aas
shlb
cld
shll
and
mov
into
mov
push
and
sbb
and
adc
jge
xchg
dec
cwtl
icebp
xor
fsubl
cmpsb
xchg
testb
stc
movsb
jne
xor
movsb
sbb
scas
mov
pop
cmp
mov
pop
mov
and
fpatan
movsb
call
ds
and
das
cmp
cmp
cmpsb
sarb
xchg
mov
sub
jnp
cwtl
push
fstpt
pusha
pop
xchg
mov
inc
xor
cmpsl
mov
int3
jo
mov
inc
sub
icebp
shlb
ficompl
sub
in
out
mov
lods
push
sbb
xchg
push
dec
push
sub
hlt
stos
aaa
adc
sub
hlt
fstpt
xchg
lods
inc
pop
cmpsl
fs
mov
mov
adc
sahf
repz
xchg
pop
push
cmc
sti
inc
lods
add
mov
popa
shlb
idivl
inc
pop
jae
mov
sub
jmp
dec
push
pop
stos
adc
or
push
insb
inc
sbb
shll
js
in
jecxz
mov
les
mov
pop
sub
loopne
mov
clc
ds
lret
ss
mov
mov
je
mov
repz
adc
rolb
pop
call
fisubrl
pusha
pop
shll
push
xchg
inc
pop
adc
push
jbe
cli
dec
cmpsl
or
push
inc
ljmp
das
add
test
sbb
jg
pop
fs
mov
daa
test
fimull
cmp
push
mov
lret
cwtl
decl
xor
push
push
push
adc
stos
mov
sub
push
lods
lahf
das
xor
sub
jae
pusha
adc
loop
inc
mov
mov
fidivrl
lods
push
cmc
mov
rol
pop
out
pop
inc
in
pop
mov
mov
arpl
xor
and
fsubl
int3
jo
dec
xchg
mov
adc
clc
push
cmpsl
pop
ja
outsb
dec
mov
mov
ds
sbb
addr16
das
mov
and
adc
repz
addb
push
test
cwtl
or
add
out
add
aas
jae
mov
sub
insl
and
out
push
jp
pop
xor
adc
and
adc
test
and
mov
ds
dec
mov
inc
movl
out
mov
jge
jns
xorb
mov
push
gs
out
or
iret
pop
or
xorb
into
pop
pop
cltd
or
inc
add
cwtl
sub
insl
fucom
inc
into
test
push
popf
jecxz
ss
das
xchg
mov
ficompl
adc
imul
adc
and
outsl
fldl
sbb
pop
stos
push
mov
cmpsl
pusha
cmovno
lahf
xor
shr
sbb
mov
push
cmp
nop
repz
mov
mov
mov
xor
dec
mov
pop
into
fs
mov
xor
bound
pop
jmp
and
rcr
jg
adc
inc
push
dec
mov
sub
fistl
dec
dec
ret
clc
and
inc
sub
cld
or
icebp
sbb
fdivrs
add
xchg
cmp
mov
mov
fwait
ljmp
jp
dec
xchg
jnp
movsl
push
test
jmp
cmp
mov
sahf
adc
lea
dec
dec
cmp
fstpt
cmp
pop
mov
popa
bnd
xchg
push
bound
pop
lea
fstps
mov
cld
jp
imul
mov
sbb
stos
or
out
ret
xor
mov
push
inc
jae
jns
scas
add
mov
mov
jnp
stos
je
and
xchg
cmp
mov
mov
pushl
adc
jle
stos
mov
ss
fucomi
insl
fmull
arpl
mov
test
outsb
sub
aam
cmc
pop
mov
lds
jg
or
popa
or
jbe
lock
scas
aaa
and
stos
fildl
mov
sbb
push
mov
push
enter
add
rorb
in
cmpb
push
jns
adc
aas
popa
lahf
inc
sbb
add
jp
pop
lahf
pusha
jnp
xor
xchg
pop
pushf
sub
hlt
in
sbb
xor
fisubs
inc
push
cmp
push
mov
pop
xor
push
frstor
fs
fwait
orb
sarb
scas
lret
cmp
ja
jecxz
lea
ljmp
mov
xchg
aaa
xchg
pop
xlat
add
jecxz
sbb
repnz
dec
data16
enter
mov
fisubrs
pop
push
loope
fiaddl
icebp
push
popf
mov
and
mov
imul
rol
xor
and
sbb
cld
nop
sbb
mov
repnz
xor
cmovnp
or
imul
scas
mov
out
mov
sti
adc
pop
xchg
int3
sbb
ret
loopne
add
out
mov
leave
mov
push
outsl
and
or
xor
pop
outsl
inc
nop
pop
or
pop
in
adc
insl
lods
shr
insl
int
mov
loope
stos
lcallw
xor
sub
outsb
out
mov
repz
pop
cmp
dec
repnz
and
in
push
push
adc
dec
push
pushf
aas
jp
pop
aaa
incl
pop
or
outsl
sub
xlat
mov
lods
imul
movsl
mov
int3
mov
jl
insb
shlb
and
shll
ret
jns
or
xchg
ss
or
lods
lods
rorb
xor
fbld
scas
fsubl
aad
mov
push
in
idivl
into
stos
pop
push
mov
mov
aaa
data16
pop
jge
imul
xor
out
pop
icebp
jnp
xchg
pop
std
mov
mov
fldt
and
ds
or
mov
shll
mov
sub
loopne
xor
rcll
or
test
dec
lods
and
fidivrs
cmp
lahf
fsts
cmc
cltd
jecxz
hlt
push
dec
inc
es
lds
or
ljmp
xchg
push
arpl
test
inc
fstpt
cmp
lods
sarl
jmp
fldcw
pusha
cmc
mov
mov
mov
xorl
cmp
sbb
push
mov
sbb
int
outsb
jne
xlat
lods
movsl
pop
push
inc
out
jo
cltd
adcl
mov
push
sbb
sub
test
mov
mov
mov
sarb
sub
cmp
mov
shll
lds
cmp
clc
cld
mov
idivb
lahf
sub
xor
lahf
sub
rorl
inc
ds
jp
adc
or
jecxz
push
pop
jge
pop
mov
popa
push
andl
pop
or
test
incl
dec
int
ds
jecxz
sahf
je
in
mov
xor
xor
pop
jo
ja
mov
insb
mov
mov
mov
lds
fdivp
scas
push
xor
aaa
decw
cmp
jmp
or
dec
xchg
xor
lret
outsl
out
cmc
ss
repz
sub
mov
cmpsb
pop
es
into
out
insl
inc
nop
jbe
jle
pop
cltd
push
stc
cwtl
xchg
aaa
int
in
subb
jge
jmp
jbe
mov
dec
xchg
sub
inc
cmpsb
dec
adc
or
push
iret
out
das
stos
cmc
or
sbb
pop
movsl
rcrb
mov
adc
roll
fsubl
stos
fldt
or
inc
fwait
dec
fs
pop
cmp
push
test
arpl
lds
mov
test
iret
popa
adc
mov
int3
testl
shlb
dec
xorb
ljmp
sahf
das
decb
enter
mov
jo
inc
or
shr
push
mov
inc
in
xor
push
push
mov
mov
mov
jl
fldt
push
mov
push
adc
pushf
pop
adc
mov
jg
stc
mov
outsb
xor
or
andl
xchg
jo
mov
sub
xor
test
mov
cmp
cwtl
inc
jle
mov
mov
jp
dec
out
sub
imul
ja
rolb
push
ljmp
lds
pmaxsw
add
lret
cmc
outsl
mov
mov
add
mov
sbb
mov
pop
mov
inc
push
int3
push
imul
xchg
lock
sbbb
or
repnz
or
imul
adc
xchg
sbb
sub
pop
std
jno
push
mov
mov
add
mov
ret
pusha
xchg
inc
jl
data16
cwtl
nop
push
lret
cmpb
in
sahf
sti
and
inc
int
in
int3
stos
inc
ret
rorl
in
aam
aas
xchg
jae
push
jae
icebp
mov
pop
add
jg
mov
out
cwtl
test
pop
repz
iret
lock
adc
xchg
out
jp
pusha
push
ret
pop
mov
push
lcall
and
lods
enter
mull
push
xchg
pop
inc
and
sub
pop
jb
mov
adc
xor
mov
orb
push
pop
xor
arpl
sbb
push
nopl
mov
push
mov
lods
inc
xchg
test
aad
cmc
out
iret
and
inc
shrl
xor
fisttpll
popf
jno
jae
xchg
add
adc
scas
mov
enter
pop
pop
mov
lock
push
cmp
out
loope
jns
inc
jge
fwait
cmp
js
ret
sbb
xor
js
lahf
ss
mov
lods
sub
add
mov
dec
decb
aad
mov
testl
loop
adc
mov
mov
sbb
inc
pop
les
push
inc
movsl
sti
mov
fldenv
sub
loope
sub
or
mov
xchg
xchg
fs
fnstcw
decl
or
jle
jecxz
push
lcall
repz
push
sub
outsb
mov
mov
mov
mov
cwtl
cld
push
stos
or
xor
jg
pop
cld
lea
sub
int
xchg
mov
and
scas
arpl
ficompl
push
jb
inc
sar
cmpsb
fistpl
testl
xlat
or
outsl
mov
pop
sub
fdivp
dec
mov
mov
dec
push
push
arpl
adc
inc
inc
push
int3
notl
jb
fadds
adc
xchg
daa
hlt
stos
sbb
cmpsl
sarl
std
add
arpl
test
test
dec
lea
shl
pop
or
loopne
lahf
leave
das
xlat
dec
xchg
cmpsb
mov
sahf
mov
aad
repz
mov
add
xor
aad
outsb
jecxz
loope
push
pop
hlt
adc
dec
lock
fstpt
push
les
imul
and
pusha
in
loopne
jnp
or
out
aas
ds
xchg
xor
in
mov
and
adc
push
push
addr16
mov
in
cwtl
roll
jb
or
ds
fcoms
cmp
xchg
jbe
inc
mov
inc
mov
push
add
in
test
jg
mov
test
or
jns
pop
push
sub
jne
or
sbb
adc
jo
outsb
loopne
fcoms
in
xchg
cmp
mov
jmp
or
arpl
adc
cwtl
ds
fwait
mov
push
in
cmpsl
xchg
icebp
icebp
xor
rclb
ret
sbb
fucom
scas
mov
and
push
mov
pop
dec
mov
in
cld
pop
pusha
std
push
fmuls
cmp
pusha
pop
sti
and
loope
sub
js
out
push
in
fsubrs
jmp
out
imul
xor
int
cmp
cltd
dec
out
test
pop
add
nop
cmpsl
repnz
xorl
cmp
sarl
rcrb
fsubr
cmp
mov
out
xchg
or
pop
mov
movsb
test
and
xchg
inc
fstl
movsl
fstps
popa
scas
cmp
pop
int3
test
addr16
inc
mov
stc
mov
inc
and
adc
outsb
pop
sbb
xchg
adcb
xrelease
sub
arpl
lea
sahf
test
mov
xor
jg
sub
pop
jle
jmp
sbb
fwait
pop
lock
add
in
sbb
roll
out
fiaddl
cmp
popf
xchg
push
imul
test
pop
loop
mov
add
adc
dec
aas
mov
jg
loopne
cmp
push
aam
mov
mov
loope
fcoml
das
dec
js
aam
stos
hlt
jg
sub
lods
inc
in
iret
pop
mov
ja
test
gs
dec
andl
sbb
jle
pop
xor
adc
neg
cwtl
sub
jmp
loop
jo,pn
or
pop
movsb
stos
in
iret
cmpsl
fs
jl
xchg
and
push
je
cmp
dec
mov
dec
movsb
xchg
pop
icebp
es
xchg
lahf
data16
or
pop
aad
testb
outsl
jne
adc
leave
xorl
add
lahf
cmp
jae
leave
popf
jp
nop
iret
xchg
imul
pop
jl,pt
call
hlt
dec
mov
sti
aaa
iret
aaa
incl
andb
sub
adc
cld
ss
xor
inc
sub
cmovle
insb
pop
push
xor
arpl
daa
cli
movsb
jno
sub
jbe
es
mov
subb
jne
insl
movsl
popf
lods
xorb
idiv
sar
clc
push
sbb
sub
cmpb
jb
aam
je
test
mov
cmp
dec
insl
mov
or
pop
mov
pushl
and
arpl
sbb
or
cmc
and
sub
shlb
das
and
insb
and
mov
test
jmp
rcr
int
lahf
cmp
mov
aam
pop
xchg
aam
and
xchg
hlt
pop
adc
xlat
shl
sbb
fdiv
mov
and
int3
cmp
sub
ljmp
sarb
lods
xchg
cmpsl
cmpsb
sub
pop
sbb
xlat
pop
ud1
sub
lea
testl
xchg
inc
mov
push
inc
mov
pop
arpl
fcoml
in
push
in
xchg
dec
jge
adc
jecxz
test
js
rep
jnp
push
push
xchg
dec
sahf
pop
mov
jmp
adc
repz
mov
cltd
push
jle
cmpsb
xchg
dec
in
stc
add
pop
mov
inc
in
out
push
xchg
push
cwtd
xor
movsl
arpl
mov
dec
and
cs
loop
cld
data16
inc
mov
inc
push
imul
shlb
mov
test
daa
repnz
adc
xor
pop
adc
sub
sbb
jmp
jmp
mov
cs
dec
out
and
cld
mov
aad
loop
mov
mov
inc
cltd
out
cmp
mov
lahf
sub
add
push
in
push
out
jnp
or
test
mov
popa
mov
and
jo
adc
adc
addr16
xlat
ds
imul
in
out
nop
sbb
mov
xchg
pop
fucomi
mov
hlt
lahf
jg
and
ficompl
cli
pop
jbe
stc
mov
pushf
ja
in
in
mov
dec
fistl
ret
sysret
pop
movsl
mov
adc
inc
popa
mov
sti
testl
add
js
and
pop
ljmp
call
xabort
inc
push
or
mov
mov
callw
fiadds
xor
shl
xchg
inc
stc
cmp
lock
jmp
shlb
outsl
pop
enter
xor
icebp
dec
faddl
pop
popf
mov
leave
inc
ja
stos
cli
dec
push
aaa
sti
js
les
xor
mov
push
sbb
cli
pop
arpl
push
cwtl
mov
and
mov
sub
inc
in
fwait
scas
outsl
hlt
and
aad
xchg
test
xchg
xlat
ljmp
jnp
adc
nop
cmp
call
xor
push
ljmp
push
push
cmc
push
in
mov
push
rclb
jno
aas
stos
rcrb
ljmp
ds
js
ljmp
xor
adc
push
push
lea
add
ljmp
pop
pop
inc
in
lods
in
push
pop
scas
and
subb
and
out
sub
aas
mov
jb
dec
sbb
push
push
ret
lret
inc
dec
add
vmovdqa
sbb
jnp
push
pop
in
ljmp
mov
pop
fstl
adc
inc
incb
mov
mov
sub
xchg
loopne
pop
cmpb
jb
int
popf
int
add
mov
pop
xchg
add
sbb
push
test
adc
sub
pop
xor
nop
pop
popf
shll
clc
add
pushf
and
dec
test
adc
sub
dec
push
dec
inc
hlt
add
xchg
std
out
mov
xlat
jl
lock
pop
jg,pn
push
adc
repz
cwtd
cmp
test
pop
cmpsl
adc
adc
mov
hlt
cmp
cmp
fs
jo
mov
inc
mov
adc
pop
sti
add
stc
fimuls
mov
inc
roll
stc
jb
mov
inc
mov
xchg
shr
sbb
mov
mov
dec
mov
call
test
cwtl
fdivl
cmpb
aam
cld
jp
xchg
mov
sub
pop
push
xchg
xor
mov
cmp
mov
lods
leave
jne
lcall
mov
mov
cs
push
pop
pop
push
sbb
cld
add
jne
pop
xchg
pop
inc
mov
adc
cld
test
and
inc
mov
cs
pop
ret
in
sub
pop
clc
cld
fcmove
ja
adc
enter
sub
push
js
inc
pop
mov
push
and
dec
sahf
sub
inc
sbb
rclb
pop
fwait
fwait
repz
insl
push
jae
neg
aam
xlat
repz
loope
adc
dec
div
lret
sub
xor
call
inc
wrmsr
jge
dec
movsl
das
popa
mov
rorb
dec
lret
mov
mov
jae
push
pop
mov
pusha
jle
xor
adc
cli
adc
inc
cmc
arpl
sti
leave
filds
dec
adc
jmp
movsl
jp
or
clc
cld
inc
and
shl
or
sub
shlb
shr
mov
cmp
ret
fstpt
add
imul
pop
fidivrl
in
scas
mov
sbb
imul
xchg
dec
stos
jno
mov
and
out
cli
and
lds
mov
or
cmc
mov
ss
mov
out
push
out
inc
mov
pop
sub
push
rcrb
sbb
in
pop
jne
push
pop
fs
ja
cmpsl
lods
cli
jge
mov
aad
and
mov
jg
add
dec
cmp
mov
or
mov
rolb
jne
xor
and
addr16
jge
and
inc
inc
pop
and
js
cwtl
push
mov
dec
xor
nop
shrb
insl
stc
call
dec
shrb
mov
imul
pop
pusha
std
cmpsl
les
sub
fwait
lock
add
lds
sbbb
repnz
fmuls
sub
push
push
mov
pop
push
mov
std
xchg
bound
std
mov
lahf
or
imul
fisubs
push
loope
sbb
out
mov
mov
popf
jb
inc
addr16
aaa
or
sahf
fisubrs
insb
mov
aam
je
pop
pop
mov
adc
test
xchg
aad
adc
out
jo
jmp
or
lds
xor
push
mov
or
jb
stc
aam
leave
jb
xor
lock
insl
lods
test
adc
ljmp
inc
add
test
adc
mov
and
ds
xchg
xchg
outsb
popf
pop
jbe
ljmp
cmc
aaa
leave
push
ljmp
xchg
mov
sub
test
sub
subl
in
sbb
cli
mov
std
ljmp
icebp
or
pop
or
jns
movsb
jg
repz
clc
lcall
lea
jnp
aam
jmp
fists
pop
mov
in
sbb
push
std
stos
test
fistps
cmp
in
inc
lahf
js
xorl
jbe
xchg
das
fistpl
fcomps
pop
cmp
lods
insb
sbb
inc
fdivrs
fs
dec
or
or
fcmovnu
out
sub
mov
mov
jg
jo
push
bound
call
bound
jmp
jns
dec
movsb
or
enter
adc
mov
mov
xchg
and
shll
clc
jbe
lods
push
outsl
mov
mov
xor
mov
dec
sbb
push
jl
rcrl
insb
jbe
ss
shr
fwait
push
and
sbbb
pop
aaa
ss
xchg
pop
push
and
cmp
push
xor
repz
xchg
aas
jae
mov
jae
popa
cmp
in
lret
lret
inc
shrl
push
jns
es
test
jmp
fimull
xorb
jns
and
fldcw
mov
fcmovnu
or
adc
sub
iret
lods
cmpsl
orl
dec
enter
enter
fdivp
cltd
js
ds
test
and
xor
std
mov
pop
jl
stc
or
mov
mov
ret
adc
add
popa
jne
outsb
hlt
fidivrl
xor
aad
mov
and
sub
mov
sbb
popa
mov
sub
and
cmpl
push
and
cmp
lods
sub
pop
jg
cmpsl
inc
mov
in
ja
data16
movsb
fcomp
mov
push
sbb
lahf
inc
xor
pushf
xor
jbe
and
call
lds
mov
enter
inc
aaa
xor
into
loope
mov
adc
bound
jp
pop
dec
mov
push
sbb
loop
repz
mov
std
pop
xchg
hlt
mov
pop
movsb
adc
sbb
pop
scas
dec
pop
fisttpll
and
pop
inc
cmp
cmp
scas
shrl
jge
inc
rorb
jne
jo
negb
test
or
ljmp
repnz
pusha
rorb
adc
cmpsl
out
test
div
lods
int
sub
and
inc
mov
lds
shlb
imul
lea
jno
jmp
xchg
jno
xor
push
push
ljmp
and
sahf
test
pop
xchg
xor
pusha
in
cmp
gs
or
iret
subl
xchg
repnz
xor
inc
push
lea
fisttps
idivl
cmpsb
fstpl
call
mov
aas
loop
push
gs
jmp
in
dec
xchg
jne
push
fwait
divl
cs
xchg
and
mov
out
pop
push
repnz
mov
int
mov
int
imul
aam
jl
jl
ret
sbb
jg
cmp
sbb
pop
jmp
icebp
rorb
enter
stc
jno
jge
shlb
and
cmp
sub
movsb
push
jo
rclb
ljmp
lock
cmp
push
sbbb
scas
ja
pop
mov
dec
js
loope
mov
lock
iret
mov
mov
dec
mov
jle
fstpl
or
push
jnp
xor
lods
adc
fisubl
lret
xchg
out
je
push
pop
cwtl
js
call
repnz
mov
lret
int3
xchg
int3
or
sub
call
cmpsb
in
cmc
mov
mov
sahf
sub
add
sub
lods
mov
test
mov
stos
jmp
add
mov
test
sbb
xchg
jecxz
cmp
in
cmp
fdivrs
dec
and
cld
and
mov
lret
mov
loope
mov
jecxz
shlb
addr16
mov
mov
enter
fldt
lods
loop
test
sbb
jnp
repz
add
sub
cmp
adc
stos
mov
sbbl
sbb
cli
decb
xchg
dec
or
xor
cmp
fsubr
mov
or
iret
jl,pt
roll
mov
cmpb
adc
push
mov
gs
in
mov
cmpsl
jge
stos
test
pop
adc
dec
rcl
pop
mov
shrl
shll
dec
in
enter
je
xor
jl
xchg
addb
mov
cmp
xor
call
adc
outsl
jnp
and
xchg
jg
mov
les
test
sub
dec
dec
cmp
shlb
and
push
inc
mov
cmp
jg
inc
mov
sub
add
dec
xor
inc
jo
add
inc
adc
inc
mov
jge
das
rcrb
cld
mov
or
nop
imul
pop
insl
mov
test
dec
out
icebp
out
jnp
sub
xchg
jae
mov
rcll
xchg
xlat
and
push
sbb
adc
add
jo
sub
enter
out
dec
pop
mov
out
xor
xchg
enter
mov
inc
sti
jne
in
movsl
jmp
ds
mov
or
sarb
in
fstp
cmp
pop
and
fsubr
cmc
insl
orb
pop
inc
add
shlb
cmpsb
cmpsl
sub
fxch
sbb
inc
pop
cmc
xchg
enter
xchg
pushf
push
aaa
sub
jp
mov
call
and
or
ret
xorb
sbbl
clc
inc
cmp
mov
bound
in
and
push
imul
cmpsl
cld
jmp
sub
jne
and
push
jae
fwait
or
or
loop
push
pop
push
lea
mov
test
test
fstpl
pop
addb
mov
leave
xchg
cmpsb
out
stc
cld
movsl
push
jb
adc
fcmovbe
dec
out
mov
add
mov
pusha
fistpll
adc
adc
outsb
sbb
add
into
divb
push
sub
shll
aaa
cli
xchg
push
dec
mov
shlb
mov
js
sti
notb
aas
jp
and
scas
jecxz
rcl
xchg
sbb
push
mov
sub
xor
mov
xorl
aad
lahf
mov
sub
sarl
bound
mov
and
push
test
xchg
and
push
ja
mov
leave
cltd
inc
out
ja
pop
call
mov
mov
xchg
dec
xchg
jl
mov
inc
loopne
cwtl
pop
pop
clc
sub
mov
stc
mov
jle
in
jl
shl
push
add
inc
adc
add
fldenv
lcall
dec
add
push
cmp
jle
arpl
imul
nop
lcall
pushf
test
popf
fistpl
lods
sub
mov
or
insb
ret
test
sbb
jo
pop
clc
add
or
fdecstp
ljmp
test
insl
jg
or
sti
outsl
repnz
test
fdivrp
shl
mov
test
call
insl
das
les
cltd
pushf
repz
bound
in
iret
and
push
cld
mov
xlat
push
xor
ja
hlt
mov
pusha
jl
or
push
add
jl
adc
push
mov
jl
lods
mov
mov
sub
outsb
sub
mov
add
xor
aad
and
data16
mov
push
sub
das
imull
mov
cmp
inc
pop
and
xor
in
data16
add
add
mov
mov
lods
pop
rclb
lret
mov
mov
sbb
daa
stos
outsl
mov
aas
jp
fdivr
xchg
js
push
imul
out
leave
fwait
stos
mov
jnp
xor
add
int3
clc
mov
mov
mov
mov
push
je
inc
imul
fldl
xor
add
mov
lcall
ja
mov
fs
cmp
loop
mov
xchg
ret
sbb
and
mov
push
pop
inc
rorl
in
repnz
cwtl
sbb
rcrl
inc
imul
push
scas
lahf
pop
fsubrs
scas
add
add
mov
ret
push
cmp
cmp
pop
jno
mov
xchg
test
nop
fld
fs
pusha
popa
outsb
shlb
jecxz
mov
lds
ret
push
ret
inc
lcall
fadd
stos
push
push
movsb
cwtl
cmp
inc
jb
jle
popa
insb
jl
sub
and
xchg
sbb
in
icebp
cs
sbb
push
mov
mov
loop
jmp
jo
xor
pop
sub
sub
mov
adc
sub
sbb
repnz
adc
clc
mov
arpl
mov
pop
std
jb
enter
mov
dec
mov
sbb
mov
push
cmp
jl
mov
dec
xor
imul
movsb
jno
push
insl
jbe
adc
pop
faddl
fisttpll
test
and
les
cmc
lahf
cmpsl
adc
dec
sbb
cltd
pop
movsb
movsl
push
push
adc
push
shrb
xor
jno
inc
sbb
mov
inc
mov
push
sbb
cmp
inc
pushf
ljmp
fmulp
adc
iret
inc
les
es
sub
xchg
mov
jg
fistpl
cmp
pop
out
xchg
fbstp
shll
mov
daa
jo
lcall
sbb
pop
xlat
je
orb
loope,pt
adc
cmp
dec
stos
test
aas
xor
divb
mov
fxch
sbb
imul
fstl
gs
call
pop
sub
out
cmpsl
xor
loopne
cmc
cmp
sub
fildll
ljmp
pop
cmp
data16
imul
aad
mov
mov
shl
in
jle
out
daa
push
xor
aam
pop
cld
outsl
push
sbb
cmp
das
hlt
pop
std
lret
sbb
pop
cmpsb
mov
outsl
cmp
popf
ljmp
jno
std
lahf
int
mov
dec
xchg
lods
pop
lret
mov
rol
xor
fistpll
pop
mov
mov
fwait
xor
mov
fwait
push
push
fsubrl
rcl
cmpsb
sub
xor
pop
ret
pop
xchg
jg
pop
mov
mov
leave
cmpsb
jmp
inc
pop
mov
inc
shlb
pop
lcall
push
cli
xchg
lock
sbb
add
mov
into
in
dec
lods
inc
fs
data16
push
pop
cs
or
std
pop
adc
pusha
ret
push
dec
rorl
push
test
pop
or
xchg
nop
ja
adc
xor
movsl
clc
sub
roll
push
cmpsl
or
or
fsubl
cs
cmp
push
mov
orl
sub
mov
cmp
aam
bound
or
cmp
pushf
loopne
and
repnz
push
lea
bound
sub
mov
pusha
mov
pop
pop
cld
enter
cmp
int
sub
or
sti
mov
movsl
gs
int3
inc
je
fcmovb
mov
adc
dec
xchg
sbb
adc
adc
and
mov
roll
inc
sub
es
fwait
popf
pop
sarl
popf
jb
mov
cmc
fwait
fists
imul
das
push
push
int3
mov
out
test
push
push
jg
decl
cmpb
mov
mov
dec
call
adc
loop
xchg
pop
dec
imul
arpl
fwait
notb
cmp
and
cmpsl
mov
jae
xchg
pusha
rcll
pop
mov
ss
mov
hlt
jg
enter
mov
add
jmp
nop
andb
push
rcrb
lods
mov
cmp
xchg
pop
daa
xchg
fwait
idivl
es
and
cmp
push
mov
mov
in
and
cwtl
or
sbb
pop
fadd
mov
in
dec
hlt
cmp
out
push
jge
jae
jne
sbb
jo
notl
cli
cmpsb
mov
xchg
imul
cltd
outsb
outsl
jl
test
push
and
mov
dec
sub
mov
xchg
shlb
mov
movsl
sub
ret
jnp
js
and
mov
mov
jns
insl
insb
push
test
es
jnp
xor
and
out
xchg
les
jecxz
cmp
jo
push
sbb
fwait
cmp
mov
mov
out
clc
dec
pop
sub
stos
jge
icebp
mov
push
or
fmuls
js
cmpsb
movsb
syscall
or
shrb
sbb
nop
cwtl
adc
or
les
fwait
inc
mov
jno
mov
cmpsb
cltd
shrl
mov
push
dec
mov
or
lods
not
lods
mov
inc
push
mov
dec
mov
cld
add
int3
lahf
out
lret
sbb
adc
cmp
leave
and
jbe
cmp
repnz
jns
and
or
push
and
lret
mov
aaa
dec
fwait
and
inc
addr16
mov
xchg
pop
stos
jae
lret
lock
adc
push
push
arpl
cmp
cmp
jo
mov
inc
lcall
and
fsubl
sbb
mov
jle
popf
decl
loop
out
mov
mov
jecxz
pop
mov
mov
cmp
cmp
lods
repz
aad
cltd
fildll
push
out
cwtl
xchg
sbb
loope
and
dec
outsl
dec
arpl
inc
das
add
std
push
adc
push
test
jae
cltd
decb
sub
insb
push
sahf
lahf
mov
cmpsb
test
xor
shl
sub
adc
mov
hlt
adc
dec
push
bound
push
cmp
xchg
sbb
push
and
add
in
in
pop
mov
in
cmpsb
dec
fs
pop
mov
adc
or
ret
nop
aaa
daa
das
loope
addr16
inc
jmp
lahf
and
pop
aas
sti
mov
imul
jno
jmp
push
int3
inc
movsl
jg
fsubs
testb
push
dec
ret
cmpsb
push
dec
jecxz
jg
push
push
sub
dec
pop
inc
jns
pop
add
inc
ja
mov
int
sarl
jns
lds
jle
jmp
inc
or
pop
daa
xor
xchg
inc
in
mov
push
andl
rorl
mov
fistps
inc
cmp
stc
repz
sub
ss
scas
cs
je
subl
mov
mov
cs
or
jmp
mov
adcb
add
loope
dec
jp
mov
fmull
push
lock
js
and
addr16
enter
dec
mov
fdivrs
inc
je
add
ja
movsb
out
jecxz
stc
jl
in
enter
fdivrp
xor
mov
xor
push
lock
add
mov
movsl
jae
test
out
int3
adc
insl
fwait
mov
dec
lods
ss
enter
lods
repz
fstpl
movsl
jmp
int3
addr16
mov
jbe
aas
sbb
cltd
xor
sub
orb
xchg
ljmp
mov
aas
mov
daa
leave
adc
hlt
dec
scas
dec
sbb
movsl
pop
lret
dec
imul
sbb
in
sub
mov
cmp
inc
out
pop
and
je
mov
ljmp
pop
or
imul
xchg
xchg
xchg
imul
mov
divb
xchg
leave
mov
out
addb
mov
rcrl
test
popf
aad
cmp
cmp
cmpsl
iret
sbb
enter
sub
icebp
or
jmp
repz
xchg
cmp
bound
pop
into
daa
jg
add
mov
add
lods
pop
les
gs
bsf
insb
jecxz
out
adcl
in
pop
lcall
leave
stos
jbe
jae
pop
or
fstpl
mov
mov
test
repnz
inc
imul
aam
or
adc
fs
outsb
inc
or
lahf
push
push
out
inc
xor
aad
ficoml
mov
sbb
pop
push
jge
dec
sub
adc
cwtl
icebp
out
outsl
sti
mov
and
xchg
movsb
fnsave
xor
repz
ss
nop
mov
adc
loop
lcall
jmp
xchg
and
stc
and
enter
orb
mov
lods
cltd
and
pop
addl
or
add
fwait
outsb
xchg
dec
add
dec
popf
pop
mov
mov
adc
sbb
jmp
stos
mov
iret
mov
sti
xchg
imul
mov
pop
mov
add
push
push
sub
lret
xor
jno
fists
jne
aas
or
pop
cmpb
pushf
mov
test
jae
into
mov
sar
and
mov
out
fidivrs
add
cwtl
push
call
pop
stc
push
mov
in
lds
addr16
xor
jnp
and
mov
jmp
imul
cmp
mov
add
lea
je
mov
clc
aaa
cmpsl
cld
test
dec
out
ds
out
hlt
pop
jmp
ds
sub
push
popf
imul
imul
nop
and
sub
loope
push
push
pop
jl
retw
mov
sbb
shl
scas
scas
test
xor
iret
lret
inc
movsb
icebp
jle
push
insb
arpl
iret
and
imul
lret
push
test
mov
scas
xchg
xchg
adc
sbb
adc
dec
inc
ret
mov
loop
mov
scas
sub
and
leave
push
sub
scas
mov
mov
les
into
add
jecxz
aas
mov
xor
scas
les
js
out
cwtl
js
ret
or
repnz
and
imul
daa
sbb
cmp
shl
push
push
outsl
jb
cmp
jle
mov
lock
sar
or
insl
cmp
lock
jnp
and
inc
lock
dec
and
mov
jmp
fcmovnbe
clc
pop
ds
lahf
adc
addr16
inc
leave
pusha
mov
mov
dec
dec
sub
cmpsb
fdivr
inc
fcoms
popa
fists
or
mov
sarb
cmp
jecxz
loopne
lret
jbe
pop
mov
and
stos
gs
add
fsubs
ret
lods
adc
push
mov
in
sub
push
out
ret
imul
mov
jl
cmp
rorb
mov
sub
dec
cmpsb
mov
int
sbb
js
push
loope
sbb
lock
mov
dec
xor
insb
loopne
clc
mov
sahf
lahf
mov
outsl
lds
lcall
fsubrl
mov
sti
imul
and
mov
xor
cld
cmpsl
cld
push
jge
mov
je
pop
mov
or
dec
push
and
aas
lea
xor
pop
pop
aas
jo
sub
ret
cltd
cwtl
and
sarl
xchg
push
mov
adc
jecxz
dec
incl
mov
sbb
dec
adc
cwtl
mov
pop
nop
fsubr
push
adc
mov
ret
imul
fs
loopne
mov
icebp
pop
sub
push
jecxz
stos
add
sub
dec
inc
xchg
mov
aam
sbb
xor
popa
pop
and
jecxz
sbb
xchg
repz
mov
jl
out
add
or
pop
jns
ja
pop
enter
out
pop
movsb
pop
out
inc
jecxz
bound
jge
in
mov
push
test
mov
das
xor
inc
fwait
cli
add
lret
lea
aam
and
repz
imul
push
jp
and
jecxz
mov
in
cmp
cmp
rorb
lods
ljmp
add
leave
in
mov
dec
push
cli
out
inc
xor
dec
in
loopne
push
xchg
fisttps
inc
cs
movsl
es
cmp
xor
mov
xchg
stos
in
jbe
adc
and
aam
adc
push
xchg
enter
mov
and
push
imul
xor
sub
clc
xor
and
les
inc
cltd
mov
cmp
mov
outsl
das
movsb
mov
push
sti
aas
rcr
and
push
aaa
add
push
xchg
xchg
aaa
pop
add
mov
in
lea
push
faddp
sbb
inc
adc
and
dec
pop
outsl
sub
lret
adcl
stos
mov
sbb
icebp
repz
push
and
pop
push
push
inc
dec
or
dec
xchg
pop
inc
imul
arpl
sarb
mov
push
push
shl
adcl
sbb
lret
outsl
repnz
jae
pop
xor
mov
cmp
cltd
inc
fidivrl
mov
in
shl
cmc
shlb
pop
das
mov
aad
sbb
out
dec
and
lods
push
cmp
mov
dec
cmp
insl
jge
fs
pop
jnp
push
mov
nop
ret
mov
xor
pop
in
clc
push
je
push
mov
cmp
or
lods
jns
sahf
inc
rcll
test
inc
into
popa
sbb
inc
hlt
adcl
sbb
test
pop
scas
rcll
movsl
adc
inc
sub
insb
stos
das
dec
jl
fmuls
rorl
in
add
adc
add
cwtl
nop
idivl
movsb
das
ljmp
pop
and
or
jecxz
jns
xor
cli
mov
mov
subb
xor
pop
testb
sbb
cld
and
or
mov
cmpsl
test
xchg
xlat
push
sti
ljmp
scas
mov
inc
sub
mov
aad
rcr
pop
aam
cmp
xlat
push
aaa
pop
lret
xchg
and
mov
xchg
lods
sub
or
cmc
int
ficoms
adc
push
push
xchg
movsb
movsb
std
push
fistpll
ja
jb
add
mov
mov
xchg
cmpsl
xlat
mov
nop
pop
pushf
xor
jo
cmp
sbb
jg
push
mov
pusha
xor
lahf
mov
sub
aam
test
sbb
cs
push
adc
test
out
enter
hlt
test
xchg
test
insb
inc
adc
jge
nop
sub
inc
call
lcall
jne
dec
sub
pop
js
adc
sahf
cmpsl
shrb
push
sub
rcrl
inc
or
mov
lods
pop
les
xor
dec
jnp
sarl
rol
es
add
sti
out
dec
mov
lsl
std
xchg
add
out
cli
jo
stos
dec
pusha
dec
cmpsl
out
inc
sbb
push
div
repnz
or
sub
in
pop
adc
fstpl
sbb
call
les
lds
shrl
lods
mov
mov
push
fsts
pop
cmpsl
sub
lret
lret
pop
cmpsl
movsl
scas
add
lret
jb
mov
lds
cmp
xchg
aad
imul
call
mov
call
sbb
jmp
lret
cs
pusha
orb
loop
call
popl
stc
inc
dec
insl
stos
dec
popa
xlat
cmp
ret
add
je
jl
int
hlt
xchg
cmpsb
cmpsl
mov
clc
lret
sarb
and
cltd
cltd
pop
adc
xchg
mov
leave
add
pop
inc
xchg
push
leave
test
popf
out
lods
and
pushf
andl
test
sbb
mov
jmp
rcll
outsl
and
imull
daa
mov
cmpl
mov
mov
js
stos
ret
sahf
sbb
or
ret
daa
fildl
inc
jb,pt
lods
cmp
push
adcb
lods
mov
rorl
jge
mov
push
lahf
icebp
jp
push
fstpt
pop
cli
inc
jg
test
dec
mov
push
scas
sarb
inc
outsb
popf
cmp
aaa
shl
xchg
sbb
sti
iret
std
sub
add
add
movsb
jb
cwtl
insl
sub
xor
pop
pop
dec
daa
dec
sbb
adc
pop
test
pop
pop
aaa
in
mov
fsts
dec
das
xlat
leave
repz
push
ret
mov
cs
call
aaa
std
push
fstl
mov
popl
popa
mov
das
jae
and
fs
dec
pop
adc
mov
adc
fcompl
pusha
ss
push
nop
lret
and
adc
inc
sub
jge
dec
mov
xor
sbb
mov
rorb
dec
out
adc
xor
xchg
inc
xor
sub
cmpsl
fwait
aas
outsl
loopne
fldcw
xchg
or
vmovapd
stos
dec
adc
je
xor
adc
push
fnstsw
shll
pusha
pop
pop
push
pop
fldenv
cmc
inc
sub
adc
mov
fisttpll
cmp
stc
test
test
ret
mov
sar
shll
mov
insb
cmpsl
jo
push
jmp
cmp
iret
jl
es
ljmp
pop
jne
sti
sub
sti
xor
push
gs
sbb
js
rclb
jns
and
adc
cltd
ret
std
mov
mov
out
iret
pusha
std
stos
jne
jmp
test
aas
repnz
imul
add
sub
cmp
sbb
mov
mov
xor
adc
and
add
fnstenv
mov
sub
mov
lods
mov
xor
rcll
imul
lods
push
push
jmp
cmp
loop
insl
shll
daa
push
gs
roll
hlt
mov
movsb
cs
jb
sbb
test
push
incl
xchg
decb
fmull
jnp
jge
inc
sti
pushf
outsb
jbe
xor
xlat
push
mov
jb
jbe
out
rcll
stc
pop
clc
test
mov
xlat
lea
stos
mov
xor
ja
push
xor
mov
cld
adcl
cmpsb
add
outsl
fsubrl
cmp
fldl
or
jge
sub
daa
popa
aad
dec
sti
jg
push
arpl
lock
icebp
adc
dec
push
jecxz
movaps
pop
adc
mov
sub
sbb
dec
adc
push
gs
xor
push
xchg
shlb
loop
sub
fsts
adc
xchg
aam
add
sbb
jno
and
aaa
mov
inc
lods
popf
in
cmp
cmp
xor
or
fimull
mov
in
mov
dec
in
fmull
mov
inc
sbb
fisttpl
pop
fsub
sub
inc
mov
pop
in
inc
popf
lock
loop
icebp
filds
lods
flds
divb
jne
cmp
mov
xor
lahf
mov
push
stc
ret
mov
and
ret
lea
sbb
gs
lret
jmp
test
xchg
xchg
aaa
in
ret
xor
ja
cmpsl
in
xchg
stos
jns
mov
in
nop
in
jecxz
xor
xchg
xorl
lret
inc
stos
loopne,pt
mov
addl
or
sub
jb
sub
loope
mov
cld
mulb
into
das
mul
push
mov
mov
punpckhwd
movsl
inc
notb
pop
imul
fcomps
jne
dec
iret
cmpsb
adc
ret
das
inc
mov
pop
stc
sbb
jl
cltd
lds
lret
imul
outsb
and
pop
mov
sub
push
and
add
test
cwtl
push
add
add
popa
popf
mov
mov
xor
sub
and
mov
and
nop
mov
add
cmpsl
fs
into
loope
fsubrs
cwtl
popf
imul
dec
loopne
mov
cmp
int
push
imul
xor
stc
loopne
cmc
mov
mov
or
push
xor
insl
xchg
xor
andb
and
push
cmpsl
sbbl
xchg
xchg
popf
push
push
xchg
or
jp
sub
dec
add
jne
out
test
hlt
cld
xorb
xor
and
push
mov
repnz
ds
add
out
cwtl
fisttpll
scas
mul
sbb
adc
call
mov
xchg
xchg
test
mov
push
mov
repz
push
clc
popa
xor
cmpb
cld
aad
imul
js
ljmp
cmp
xor
mov
ds
data16
testb
mov
lods
and
cmpsl
inc
dec
add
dec
hlt
lret
push
add
cmp
mov
mov
sub
mov
and
xor
in
cmpb
js
sub
fwait
add
dec
fwait
mov
mov
mov
dec
mov
fiadds
imul
push
mov
mov
rorb
sar
push
divb
sub
lret
xchg
sub
add
adc
lcall
inc
fstpt
push
insl
lret
scas
fadds
lods
into
js
hlt
dec
bound
cli
in
sbb
pushf
mov
fstl
push
xor
cld
lods
fs
adc
push
dec
inc
cmpsb
xor
and
push
xor
cmp
cmc
fcmovnbe
or
xor
and
dec
ss
insb
js
xchg
xchg
in
sub
jbe
xchg
imulb
xchg
add
or
mov
jp
push
mov
stc
out
outsl
sub
lds
jbe
scas
dec
mov
cli
push
pop
out
out
sub
sahf
aam
cmp
jmp
es
mov
xor
add
xor
mov
add
mov
dec
fcmovnbe
sub
cmpsl
adc
hlt
fcoml
xor
mov
or
dec
push
mov
jmp
mov
mov
jno
dec
and
insb
imul
scas
imul
mov
test
xchg
cld
push
mov
pushf
mov
xlat
push
gs
arpl
add
sbb
push
sub
jg
jb
dec
inc
ficoml
repz
stos
das
scas
addb
mov
int
mov
hlt
aas
cmp
jmp
xor
mov
fcmovnbe
repnz
int3
lea
stos
jnp
adc
xor
dec
and
test
sub
or
or
lcall
fdivl
jl
call
sbb
stos
sub
xor
ss
xrstor
mov
sbb
dec
aam
mov
push
pop
push
add
lock
cld
add
and
stc
sarb
ret
add
mov
push
add
jg
incl
ret
cmp
sbb
cwtl
aaa
test
jmp
ss
roll
out
inc
int3
into
fisttpll
aaa
xor
cwtl
lret
aaa
push
cmp
arpl
dec
mov
jecxz
bndldx
add
mov
jae
add
lret
fcomps
adc
negl
movsl
dec
xchg
pop
jne
aam
test
adcb
rcrl
inc
cmp
outsb
iret
loop
repz
jmp
mov
movsb
adc
lea
aam
rorb
mov
mov
mov
jg
bound
popf
ss
add
pop
pop
inc
dec
cwtl
jbe
pop
and
icebp
mov
push
fldl
pop
mov
test
movsb
or
mov
stos
dec
add
imul
push
shl
mov
movsl
dec
dec
fidivs
mov
sbb
add
call
cld
std
lahf
and
and
cmpb
rolb
xchg
dec
shl
xchg
lods
fwait
aas
xor
cmp
inc
orb
xchg
pop
fwait
push
repz
incl
pushf
sub
jmp
divb
cmc
ds
lods
xchg
lahf
mov
adc
mov
mov
xor
ljmp
out
insl
xor
or
adc
xchg
shr
addr16
or
arpl
iret
sub
adc
sbb
inc
out
movsl
or
fnsave
add
repz
addb
push
fbstp
jns
add
or
or
sbb
mov
jge
pop
ret
cmp
sbb
aam
cltd
mov
xchg
fcmovbe
jp
sahf
mov
sub
lock
inc
imul
mov
or
fstpt
sbb
inc
mov
pusha
shl
mov
shlb
sbb
add
pop
shrb
jns
cmp
pushf
push
inc
cwtl
jl
jl
mov
add
je
scas
inc
pop
mov
pop
or
repz
repnz
pop
xchg
add
loopne
js
aad
je
int3
or
cld
int3
dec
insb
loope
cmpsl
adc
sahf
mov
or
fidivl
lea
sbb
xchg
imul
mov
rcrb
jns
mov
call
inc
in
rep
xor
push
out
aam
xchg
cli
popf
xchg
pop
xor
ret
lcall
pop
mov
push
push
pushl
lret
sub
or
clc
push
dec
scas
aas
push
int
and
mov
pop
adc
fnsave
pusha
push
sbb
mov
ja
out
mov
dec
test
scas
stos
sti
popa
xchg
add
mov
sarl
push
pop
dec
cwtl
sbb
leave
mov
xchg
xchg
push
imul
push
or
ret
mov
es
pop
or
clc
push
jb
outsl
arpl
jmp
pop
lret
sub
and
ljmp
pusha
repz
mov
sbb
aas
xor
sbb
and
bound
fadds
outsl
aas
or
sub
mov
push
sbb
xor
inc
jle
scas
rorb
dec
leave
lock
cmp
push
lfs
nop
mov
loope
mov
scas
adc
imul
call
in
aaa
mov
xor
je
xchg
mov
xor
rcrl
insb
ljmp
int3
ja
mov
shll
int
jb
cmp
pop
outsb
cmp
sbb
ja
push
or
out
lret
or
in
pop
mov
icebp
lret
dec
rolb
add
xor
sub
fidivl
mov
jns
xchg
test
imul
mov
push
push
ja
add
mov
insb
lcall
mov
insb
lods
repz
lods
std
rcll
out
mov
mov
sub
call
sub
mov
dec
mov
out
setl
enter
cld
jae
ljmp
in
ljmp
mov
mov
pop
test
fisubrl
ja
jne
imul
pop
mov
cmpsl
xchg
dec
push
cwtl
popa
or
lods
jnp
js
xlat
repnz
sub
sub
adc
daa
dec
test
jge
adc
orb
dec
mov
inc
jb
mov
mov
mov
and
mov
pop
xchg
lods
jns
cmp
or
jnp
sahf
mov
cmp
in
push
aaa
push
adcb
nop
gs
dec
insl
stos
adc
shll
push
sbb
pop
sbb
daa
sub
cmp
int3
mov
ficompl
repz
fs
outsb
fwait
sbb
jo
push
and
mov
mov
mov
test
aas
lahf
add
mov
mov
inc
mov
pusha
fsts
push
test
scas
test
or
lods
fimuls
int3
pop
dec
or
mull
out
fldl
xor
fwait
iret
add
jecxz
sti
jne
mov
lahf
insl
mov
jno
push
popf
mov
dec
mov
dec
repz
and
and
popf
push
pop
loopne
gs
sub
cmp
cwtl
cmp
cmp
push
lds
dec
ficoms
nop
dec
int3
dec
xlat
sub
sti
aaa
lcall
test
mov
push
fidivrl
xor
dec
notb
pop
loopne
pop
pop
pop
aas
movsb
outsl
fldt
push
lds
cmp
iret
mov
push
cmp
rorb
or
test
jbe
pushl
push
or
or
mov
bound
dec
sahf
ds
lds
dec
iret
fucomp
repnz
shlb
and
sbb
inc
out
cmc
scas
data16
scas
test
shrb
stos
mov
mov
pop
push
or
mov
cli
stos
push
push
xor
inc
sbb
pushf
jecxz
sti
inc
faddp
add
mov
scas
push
in
ds
or
adc
pop
push
cmp
jb
movsl
lods
push
sbb
jecxz
enter
or
nop
lahf
xchg
inc
stos
fstps
fs
jbe
shlb
jno
clc
mov
scas
fistpl
mov
lock
jo
rcrl
movsl
pop
or
sarl
inc
adc
sbb
inc
sbb
imul
or
xchg
test
inc
and
mov
jg
cmp
mov
xchg
sbb
sub
test
fwait
dec
pop
mov
sbb
mov
and
jmp
ret
xchg
adc
in
mov
fcom
mov
in
mov
cmp
and
fstps
mov
jecxz
xchg
fistl
mov
fistps
pushf
mov
adc
sub
dec
dec
fstpl
push
std
push
jno
jp
ret
inc
imul
cmpsb
push
in
push
lods
hlt
mov
sub
frstor
stc
cwtl
test
js
mov
mov
cli
enter
inc
pop
sub
mov
addl
in
jno
jecxz
out
mov
mov
dec
sub
rcr
into
sub
xchg
rorb
inc
pop
pushf
sub
clc
shr
add
mov
lock
das
or
and
cli
and
into
jmp
ret
outsl
cmp
out
jae
adc
cmpsl
fildll
mov
cmp
call
stos
repnz
out
idivb
adc
shl
inc
nop
test
lods
int
xchg
adc
or
sbb
adc
mov
pop
pusha
movsb
dec
push
movsb
mov
shlb
icebp
stos
loope
pop
cmp
inc
jbe
pushf
aad
jecxz
leave
dec
loopne
xor
rolb
xor
pop
rolb
add
add
testl
outsl
decb
push
mov
int3
clc
pop
dec
dec
inc
or
and
js
lds
adc
cmpsl
mov
adc
dec
sub
stc
rcrb
lcall
repnz
mov
mov
push
fdivrs
call
mov
xchg
jle
movsl
fwait
cmp
cmp
in
pop
ret
popa
pop
dec
repnz
push
adc
or
mov
ja
rclb
test
inc
xor
and
movb
pop
push
jmp
mulb
es
push
adc
and
adc
jle
dec
dec
cmp
mov
repnz
lret
pop
in
sbb
repz
jp
push
mov
movsl
mov
adc
pop
sbb
xor
mov
push
mulb
pop
xor
loop
add
mov
xchg
cmp
loopne
stos
sbb
stos
adc
xchg
scas
mov
pop
mov
jne
cmc
add
inc
cmpsb
cmp
sub
sbb
dec
popa
lret
ficoms
and
or
and
das
cmp
and
cmp
push
movsl
xchg
cmp
enter
inc
sub
push
sub
and
rcrb
call
maskmovq
divl
pushf
mov
dec
stos
out
mov
xor
out
int
xchg
movsl
cs
out
sbb
stc
sub
dec
mov
mov
bound
push
aas
aad
pop
jns
mov
pop
mov
add
mov
int
pop
sub
enter
call
jb
imul
mov
mov
pop
pop
mov
xchg
mov
test
sub
cwtl
mov
inc
std
push
inc
push
push
adc
xchg
push
push
xchg
adc
movsl
lods
pop
pushfw
movsl
imul
xchg
lea
jnp
xchg
pop
std
ret
or
adc
aad
in
ret
and
cmpsl
cmpsb
movsl
xchg
shl
cld
out
jo
je
out
xor
fwait
dec
iret
pushf
addb
and
mov
jo
scas
sub
shlb
pop
xchg
and
js
jo
and
push
add
xlat
lcall
push
int
add
outsb
in
add
popf
insl
nop
mov
pop
dec
clc
out
test
insb
pushf
mov
ja
outsl
or
jae
pop
jae
fisubs
lea
je
addb
pop
scas
movsb
mov
or
insb
push
iret
loope
mov
bound
cmp
sahf
in
lcall
pop
adc
jecxz
mov
xor
lahf
dec
add
adc
pop
mov
cmp
enter
mov
mov
cwtl
and
fcmovu
pop
ljmp
les
fcoms
imul
sbb
insb
arpl
mov
iret
and
pop
repz
mov
test
aaa
les
cmp
xchg
inc
popl
sbb
ss
pop
xchg
pop
or
sub
add
js
shll
adc
pusha
and
adc
loop
xchg
out
aaa
shlb
test
daa
mov
fbstp
outsl
mov
xchg
add
repz
xor
jne
aad
sahf
or
iret
jo
adcl
add
loope
adc
cmc
fdivrs
imul
loop
xchg
lods
xlat
pop
xchg
sbb
subl
add
jmp
xchg
sub
repz
pop
in
and
clc
lock
out
in
fmuls
iret
ds
mov
repnz
pop
dec
add
xor
out
les
jg
int
push
or
inc
mov
outsb
out
xor
fabs
and
cmc
pop
hlt
dec
mov
cld
cmp
jg
icebp
inc
push
push
xchg
and
add
and
jmp
popa
add
push
loope
mov
pop
call
aad
mov
test
or
imulb
adc
jg
icebp
xchg
popf
mov
fidivs
aam
std
fimuls
jle
dec
ds
addr16
rol
dec
push
ljmp
or
fidivs
lods
pop
mov
inc
bound
mov
movsb
lahf
push
dec
add
xor
cmp
jnp
sub
lret
data16
inc
filds
sub
aad
jno
or
gs
pop
pop
pop
push
in
push
jae
es
push
out
scas
add
xchg
add
jmp
hlt
jp
cmp
inc
jecxz
jae
mov
pop
pop
add
dec
cmp
test
loope
jnp
fwait
sbb
add
shll
cmp
movsl
jne
aad
in
add
dec
je
enter
and
push
jmp
sub
popf
inc
xchg
stos
add
add
mov
jl
dec
push
jne
ds
adc
mov
and
mov
dec
clc
or
data16
xor
std
mov
hlt
xchg
fdivrl
test
int
popf
jp
add
out
push
pmaxub
and
xchg
push
add
dec
and
lret
pushf
push
jge
sub
mov
shlb
mov
mov
mov
stos
mov
jno
jge
add
call
aad
push
out
js
fcmovbe
lret
or
nop
cmp
push
push
arpl
cmp
add
mov
pushf
ret
push
ljmp
cmpsl
pop
inc
jle
and
test
mov
or
lods
push
pop
lods
jo
add
jbe
pop
inc
hlt
adc
mov
ljmp
mov
push
stos
dec
adc
nop
cmp
mov
orl
jns
sbb
or
fists
add
and
aaa
sbb
mov
and
push
sbb
nop
mov
dec
dec
repnz
mov
inc
fwait
outsl
out
pop
xor
xor
and
aad
xchg
and
ret
imul
icebp
aaa
sbb
cmp
je
and
sbb
mov
pop
in
pop
and
pop
shl
mov
into
add
jns
loop
cmp
in
xchg
sub
mov
icebp
xchg
test
popf
mov
and
lea
nop
loop
push
cmp
je
rcrl
in
incl
stos
imul
push
leave
jne
repnz
pop
cs
sub
jecxz
xchg
cs
loope
push
cmp
cmpsb
arpl
sbbl
sarl
lock
lock
fdiv
cmp
add
mov
pusha
imull
iret
cltd
loopne
cmp
xor
push
xchg
lods
jecxz
xor
inc
in
les
lock
push
stos
lret
sub
mov
jns
leavew
cmp
lcall
repz
out
out
push
jb
cli
mov
mov
icebp
jnp
sub
pop
push
inc
adc
lcall
int
xor
inc
ss
mov
ror
addr16
mov
in
dec
in
add
mov
ds
out
call
or
xor
inc
add
popa
xor
push
mov
mov
xchg
pop
jle
adc
sbb
sahf
cli
and
pop
pop
pop
cwtl
test
fildl
dec
lods
add
add
inc
rclb
mov
js
cmp
push
or
sub
bound
xchg
jg
sub
sub
cli
jl
ret
test
and
or
outsb
orl
outsl
mov
enter
nop
or
verw
out
sub
ljmp
in
jmp
sahf
lret
fildll
cmp
fucom
sub
xchg
in
hlt
sub
scas
push
popa
aas
ret
and
fucomip
or
adc
fldenv
mov
inc
inc
outsl
scas
mov
dec
lods
imul
pop
xchg
ror
fisubrs
mov
imull
add
mov
je
push
fstpt
push
mov
push
je
int3
loope
rorl
pop
jb
push
scas
or
mov
das
hlt
lods
test
stos
mov
fmuls
mov
fst
rorl
test
jno
loop
loop
sub
data16
mov
cmp
jb
sahf
sbb
idivb
jge
test
or
pop
movsl
pop
imul
out
insb
rcrb
insl
enter
xchg
adc
movsl
push
mov
cs
xchg
pop
stos
jnp
sahf
fisttpll
sub
leave
mov
mov
call
in
pop
out
repz
scas
adc
add
stos
pop
xchg
lret
roll
cmp
jbe
inc
inc
inc
popa
xchg
rolb
aad
lret
out
mov
push
gs
shl
fsubs
add
andb
or
scas
sbb
jnp
out
pop
mov
dec
test
inc
imul
or
adc
scas
sub
pop
addr16
xchg
loopne
fwait
mov
push
push
in
sub
movsl
js
jmp
xor
insl
ja
sbb
jg
push
and
mov
or
mov
bound
mov
add
movsl
test
pop
jl
dec
fcomi
in
aam
fs
popf
cs
sbb
fsubl
xor
mov
sub
insl
stos
loopne
inc
ffreep
sbb
cmpsl
loope
dec
or
add
lahf
arpl
dec
rolb
xchg
or
fdivp
loope
fimuls
fsub
aad
mov
cwtl
dec
dec
into
dec
in
inc
iret
mov
insl
sbb
or
inc
test
mov
mov
repz
scas
popa
fisttpl
jg
jl
pop
loopne
jg
mov
and
jmp
movsb
dec
pop
sub
loop
xchg
jb
dec
jne
xchg
mov
push
adc
and
pop
sbb
test
imul
stc
mov
pop
pop
outsl
add
or
std
adc
arpl
cmpb
sbbb
jmp
sbb
add
mov
and
jne
sub
mov
lret
sti
jp
mov
push
pop
in
jns
mov
mov
sub
xor
mov
enter
or
sbb
scas
push
loope
loop
mov
push
gs
or
pop
xchg
push
jp
clc
cwtl
mov
popf
xchg
xchg
cmpsl
test
test
sub
mov
insl
fucom
xchg
scas
add
lret
popf
aam
data16
dec
push
mov
xlat
dec
clc
iret
and
ds
fs
adc
mov
leave
add
inc
repnz
clc
movsl
in
orb
ds
lods
push
repz
pop
es
sahf
aas
pop
xchg
outsl
dec
sbb
mov
jg
dec
arpl
jmp
jl
sti
xor
je
jmp
arpl
and
lock
inc
sbb
aad
fisubrs
push
fisttps
pop
out
add
push
sbb
std
dec
ret
shlb
insb
or
jo
pop
jae
mov
xor
jmp
adc
icebp
inc
movsb
jbe
popf
sub
cmp
adcl
mov
cltd
dec
ret
adc
dec
jg
inc
push
or
push
pusha
into
cs
iret
mov
cs
imul
rorl
sbb
mov
jl
push
andl
push
add
adc
or
arpl
mov
xor
enter
ja
pop
jge
cmpsl
sahf
jo
sbb
lahf
mov
sub
inc
sahf
mov
pop
mov
xchg
mov
cmp
test
shrl
mov
or
xor
mulb
test
xor
push
daa
fwait
jb
rclb
call
in
lret
mov
push
mov
movsl
xlat
fsts
jb
pushf
stos
lods
lret
sub
xchg
mov
mov
fmulp
mov
and
icebp
mov
pusha
dec
aam
sub
mov
fstpl
jne
and
inc
ljmp
mov
rcl
jge
aam
push
mov
movsl
dec
scas
cltd
inc
jl
mov
iret
push
test
fldl
and
sub
pop
movsb
xchg
loopne
nop
je
sub
push
sbb
adc
in
xlat
rcrb
dec
nop
iret
pop
popf
push
es
imulb
lcall
popf
mov
movb
push
les
cmp
xchg
inc
outsl
into
scas
or
pop
ret
test
adc
rcrl
lods
js
out
ja
call
or
xor
int
mov
enter
mov
push
xlat
pshufw
jp
mov
mov
ja
adc
enter
clc
push
pushf
das
shlb
dec
imul
mov
ss
mov
push
cld
mov
push
nop
test
push
push
jmp
cmp
fdiv
shll
daa
rcr
xor
xor
popa
jnp
dec
mov
mov
hlt
jecxz
daa
leave
cmpps
push
push
es
icebp
xor
and
lret
daa
in
jge
popf
pop
in
loopne
jno
add
popf
clc
nop
mov
sahf
aaa
addb
jmp
xchg
rcr
sub
or
jecxz
and
dec
push
cmpsl
push
mov
enter
cmp
adc
mov
dec
iret
pop
jp
sbb
mov
mov
xchg
into
fwait
cwtl
sbb
adc
and
mov
mov
movb
sub
hlt
les
insl
lock
fistps
xor
in
push
aam
cmpsl
ret
jmp
rorl
mov
xchg
sarl
leave
adc
int3
lahf
bound
das
fwait
inc
iret
xchg
outsl
jge
sub
out
cmc
outsb
pop
xchg
jo
mov
pop
fstpl
repz
loop
and
outsl
pop
js
xlat
cli
das
fstl
shlb
push
sub
sub
shrb
imul
push
xchg
in
out
imul
mov
addb
sbb
sbb
sub
test
push
aad
xchg
cli
aad
ret
jmp
add
iret
fs
or
xchg
roll
add
mov
adc
mov
or
jmp
test
push
cs
inc
pop
test
ret
out
stos
inc
inc
mov
movl
add
fadd
insl
mov
dec
push
aas
adc
bound
adc
jmp
sbb
pop
cmp
mov
mov
lcall
mov
mov
call
xchg
aad
imul
insl
mov
sbbb
nop
es
xor
loopne
xchg
or
pop
pop
xor
add
jge
sbb
dec
bnd
rorb
data16
adcl
mov
dec
test
arpl
sbb
sub
jp
xor
cltd
mov
insl
shlb
xor
ret
test
jb
or
cmp
int3
mov
add
xlat
dec
mov
xorl
pmulhuw
pushf
mov
and
outsl
mov
xor
es
out
sub
ret
loope
fldcw
leave
arpl
mov
inc
fsubp
mov
mov
stos
lock
push
cli
inc
mov
pop
mov
cli
out
dec
push
xor
push
ljmp
notl
xchg
iret
and
mov
add
sub
jne
jo
sarb
sbb
not
push
in
fbstp
bound
inc
arpl
repz
filds
cmp
nop
or
cmc
mov
pop
mov
test
js
sub
push
lods
ds
or
jp
fldcw
clc
gs
pop
adc
inc
out
dec
ret
imul
adc
std
repz
out
fsubrs
and
ficompl
sarb
mov
mov
bound
jnp
pop
jmp
sub
or
push
or
pop
out
sbb
ss
mov
notl
ret
aas
mov
push
mov
dec
ljmp
inc
inc
fistpl
xlat
mov
xor
xchg
mov
fcmovnbe
sbb
fbstp
mov
add
push
icebp
or
jb
loop
and
sub
jp
push
cmc
inc
push
outsl
mov
mov
xor
xchg
xor
jnp
xchg
int
cs
pop
dec
xchg
mov
scas
daa
lcall
push
je
in
js
and
scas
cli
mov
pop
rcll
insl
int3
ljmp
mov
subb
sub
call
dec
push
jle
aas
xchg
loope
cltd
dec
loope
pusha
xor
incl
mov
fcoml
lret
lcall
jne
or
stos
cltd
push
fwait
sub
out
push
add
sahf
push
int3
xlat
popa
imul
cmpsb
loope
shrb
inc
pop
aas
dec
js
sub
loop
adc
fildl
imul
das
std
imul
ja
and
pop
xchg
mov
mov
outsb
jo
loop
jb
repz
stos
fsubrs
cmp
sub
and
sbb
testl
stos
mov
fldl
mov
mov
mov
pop
inc
push
sub
mov
je
movsb
xor
clc
daa
cmp
push
iret
shll
inc
sahf
xchg
xor
sbb
lods
sbb
shlb
jo
add
mov
sub
mov
or
cmp
js
ss
andb
in
inc
in
in
mov
stc
push
xor
xlat
or
mov
xor
lods
imul
movsb
int3
je
sar
testl
orb
cmc
cmp
mov
test
leave
fcoms
iret
jecxz
std
add
nop
jl
mov
push
movsl
mov
pop
addr16
mov
flds
popf
and
filds
xchg
icebp
sbb
inc
pop
fdivr
add
ljmp
sub
jmp
lods
mov
mov
jns
and
adc
adc
mov
dec
add
xchg
dec
push
jle
mov
pushf
xchg
xor
push
adc
in
push
pop
loope
pusha
in
shl
push
lock
jnp
mov
pop
xchg
pop
mov
fisubl
add
adc
sbb
xchg
xor
mov
mov
lock
aam
jb
cmc
loope
icebp
ja
and
jae
leave
mov
dec
repz
call
dec
inc
sbb
mov
gs
lret
movb
inc
pop
mov
xor
scas
sub
outsb
rcr
or
jmp
adc
mov
daa
cmp
xchg
add
push
and
jae
out
lea
adc
xchg
out
outsb
fldt
nop
call
inc
mov
or
xchg
xchg
shlb
loop
ds
cmc
roll
clc
xchg
in
ret
outsb
aas
pop
xchg
pop
xor
or
and
scas
add
aam
fbld
cltd
ljmp
cmp
in
mov
mov
adc
call
xor
push
cmpsb
pushf
adc
pop
les
cmc
or
sub
inc
mov
dec
icebp
and
dec
int3
test
das
cs
jns
mov
es
sar
outsb
ror
ss
in
stos
loopne
nop
sub
jo
xor
test
sbb
cltd
sub
xchg
push
jo
bound
insb
loope
in
sbb
std
jmp
inc
xor
insl
in
cmpsb
push
mov
sbb
lods
jbe
popf
add
orb
addr16
negb
pop
xor
xchg
inc
or
cwtl
mov
dec
sarl
and
add
jno
lods
fisubrl
stc
dec
je
ja
shlb
ss
lret
in
test
mov
popa
icebp
mov
dec
lcall
dec
imul
adc
cmp
xchg
push
dec
mov
shl
pop
xchg
lret
pusha
inc
mov
pop
pop
adc
out
daa
loopne
mov
fsubl
cmp
arpl
adc
jle
mov
xchg
cmpsl
scas
xorb
cmp
enter
mov
mov
or
jmp
mov
test
cli
xchg
addr16
xchg
push
add
and
inc
jecxz
xchg
stc
and
pop
rorb
ror
mov
test
push
or
aaa
xorb
push
xlat
push
xor
cmp
mov
into
jmp
stos
in
shr
mov
mov
sbb
imul
mov
test
int
push
pop
cmp
xchg
mov
or
pushf
jl
push
xchg
mov
push
inc
fildl
jp
clc
enter
or
jb
mov
leave
add
aam
mov
and
dec
xchg
divps
rcrl
sbb
dec
fnstcw
jl
xor
scas
clc
ret
add
lods
fistps
sarl
mov
enter
outsb
pop
push
mov
mov
jmp
mov
in
mov
inc
add
inc
pop
push
aad
sbb
push
mov
shlb
mov
jne
mov
mov
cmp
pop
ljmp
imulb
mov
enter
push
inc
adc
mov
inc
xor
jbe
into
je
inc
inc
mov
jge
mov
in
lret
or
incb
mov
inc
push
lock
and
cmp
and
mov
xchg
mov
in
sub
pop
or
lea
push
mov
mov
ja
inc
fadds
lahf
add
push
or
aaa
outsl
xchg
shrl
lcall
and
jecxz
je
hlt
add
shlb
or
xchg
mov
mov
xor
and
popa
imul
mov
sbb
mov
mov
test
les
mov
mov
ret
xor
ret
inc
sub
inc
push
xor
fs
mov
adc
jne
cwtl
xchg
stc
and
andb
xchg
out
cmp
lret
sub
fisubs
dec
pop
xor
xchg
pminub
repnz
pop
mov
mov
fwait
ret
ss
pop
cmpsb
push
cs
mov
fisubs
outsl
jmp
enter
outsb
fsubl
mov
cmp
xorl
push
add
or
mov
mov
daa
cmp
xchg
pushf
and
lods
das
outsl
aas
out
and
xor
fnop
fs
sub
movsb
and
fcomps
hlt
mov
jmp
add
ss
insl
xor
push
mov
xchg
pop
cmp
sahf
stos
mov
in
push
xchg
loope
cmp
mulb
dec
loopne
test
fisttps
push
xor
sbb
adc
mov
ss
es
sub
sub
sahf
and
lock
arpl
xchg
or
inc
dec
scas
fsubr
add
jl
adc
xchg
pop
xchg
js
test
loope
in
xchg
sahf
and
push
push
mov
cmp
ficoml
mov
in
xor
xor
movsl
shlb
xchg
enter
or
pop
mov
movsb
add
add
xchg
test
rorl
outsb
sub
cmp
scas
push
and
xor
mov
or
and
pushf
cld
lcall
clc
cltd
add
mov
jnp
pop
sbb
push
push
test
xchg
mov
ss
in
pushf
jle
mov
jns
push
push
stc
jg
icebp
adc
push
fldl
loopne
mov
and
js
mov
cli
mov
cwtl
pop
xchg
pop
dec
lahf
inc
js
mov
inc
dec
mov
hlt
sarl
andb
pop
shrb
mov
or
adc
jb
dec
ret
outsb
pushf
imul
icebp
pop
adc
mov
push
mov
lods
lods
and
popa
sub
add
insl
ret
adc
or
xchg
push
xchg
inc
mov
dec
sub
fcmovnu
int
xor
test
cmc
int
push
lahf
stos
mov
or
mov
mov
sbb
ficomps
xchg
hlt
ja
mov
xor
jecxz
sahf
in
or
popa
cmc
aam
mov
dec
test
loop
push
pusha
inc
sub
mov
and
jns
ja
sbb
sahf
add
xlat
lock
cld
out
test
lret
shrl
or
mov
cmp
test
cmp
dec
bndldx
scas
les
testb
cmpsl
mov
sub
and
dec
jns
lcall
cmpsb
call
repnz
int3
pop
cmp
inc
mov
scas
movsl
lret
test
repz
xor
outsl
bound
mov
lock
outsb
mov
leave
or
mov
stos
sti
jge
rcll
dec
movsb
leave
imul
shll
adc
mov
mov
stc
or
rcll
push
pusha
int
jg
outsl
xchg
insb
ja
pop
repnz
shlb
lds
or
test
inc
lret
test
and
shll
xchg
dec
xchg
push
add
bound
out
mov
sub
nop
sbb
outsl
push
arpl
sub
dec
push
or
or
test
sub
aas
cmp
cmp
jmp
cmp
clc
call
sti
jle
sbb
cmp
xchg
in
adc
movsl
lods
mov
leave
push
inc
mov
sarl
cmpsb
mov
lods
cmp
testb
aaa
in
ficoms
xlat
adc
iret
add
cmpsl
loope
and
push
mov
dec
call
lret
jle
rcl
inc
jl
ret
cltd
pop
and
push
lods
xchg
xchg
lods
xchg
push
and
and
jmp
mov
mov
ss
popa
xchg
repz
loope
sub
test
push
mov
aad
lcall
aad
rcr
sub
jle
mov
ja
rclb
bound
jb
mov
mov
je
and
add
lret
sbbb
push
add
std
mulb
sti
xor
adc
insl
mov
dec
loope
jl
dec
add
jb
jnp
enter
sbb
sub
out
inc
mov
hlt
vpaddd
mov
pop
ds
push
test
les
mov
decb
out
sub
push
dec
xchg
pusha
decl
inc
scas
xor
inc
jl
xlat
in
mov
loopne
adc
hlt
insb
mov
in
sti
scas
xchg
nop
adc
repnz
mov
dec
imul
pop
jp
add
pusha
std
or
xor
jp
xchg
and
cltd
cmpl
inc
mov
inc
sub
push
adc
push
fiaddl
fbstp
insb
das
imul
mov
pop
sbb
adc
mov
inc
sbb
cs
xchg
mov
or
ret
pop
hlt
pop
jae
aad
inc
lds
mov
dec
loopne
fwait
int
ficoml
loope
cld
xchg
mov
nop
push
lea
adc
lahf
cmc
jmp
pop
push
fadd
loope
inc
in
and
clc
push
pop
dec
insl
and
rol
ja
jecxz
mov
inc
cli
bound
test
cmp
in
inc
mov
pop
jnp
lea
scas
cmp
xor
jo
mov
push
cmc
inc
loope
ljmp
lods
dec
lods
push
stc
mov
jo
pop
xchg
es
fldcw
scas
jnp
pop
cmp
mov
mov
pop
outsl
inc
shll
insb
popa
dec
movsb
dec
scas
mov
mov
dec
clc
jecxz
je
cmp
ja
dec
mov
pop
test
and
cmp
call
in
adc
outsb
mov
gs
dec
dec
pop
js
aam
popa
mov
cmc
arpl
mov
pop
sbb
mov
enter
outsl
inc
cld
sti
push
add
loop
mov
fidivrl
outsl
jns
lds
push
popa
xor
out
xlat
mov
jmp
adc
jbe
fcoms
test
adc
cmp
and
in
pop
and
xchg
jne
mov
ljmp
or
outsl
outsb
test
daa
cmp
inc
and
cli
test
scas
hlt
aaa
inc
sub
lea
scas
aad
je
xorl
sbb
gs
mov
ficoms
cwtl
pop
outsl
test
adc
jle
jge
repnz
mov
xor
xorb
stos
jb
imul
loope
dec
aad
mov
mov
mul
scas
push
mov
adc
sub
enter
outsb
jo
test
cmp
push
cmp
out
arpl
out
cmpsl
les
mov
adc
test
xor
cmpsl
int3
jg
sbb
idiv
mov
lret
dec
cmp
imul
add
mov
iret
cltd
jbe
xlat
jge
scas
push
add
xor
cmp
ficoms
in
sub
cli
mov
fcoms
inc
pop
test
daa
pop
ficomps
or
jge
outsb
xor
cmpsl
xor
jle
jge
fwait
movsl
sbb
fildll
sbbb
mov
inc
notb
mov
stos
nop
mov
cmp
out
adc
mov
repz
ret
ja
cmp
cmp
mov
cmpsl
nop
les
xchg
fsubl
pop
je
xor
push
jl
add
in
int
mov
fwait
test
icebp
xor
or
lock
xor
lcall
ficomps
pushf
and
stos
outsl
outsl
dec
xchg
pop
lret
mov
push
inc
push
mov
jb
test
mov
shll
mov
je
mov
sub
out
jb
sbb
cmc
jb
dec
adc
leave
pusha
das
push
or
divb
pop
push
dec
jle
pop
mov
jno
call
push
ljmp
test
push
ret
and
shl
or
lahf
jp
cwtl
in
inc
inc
je
jnp
les
sub
cmpsl
js
fstps
lods
xchg
sarl
pop
movsb
notb
and
mov
cli
sbb
inc
and
xchg
dec
fbstp
sub
movsl
enter
inc
movsl
mov
pop
cs
xchg
hlt
das
xlat
mov
data16
int
call
add
mov
iret
mov
pop
sbb
cmc
mov
add
or
xor
dec
cmp
test
push
loop
popa
jbe
into
shlb
xlat
repz
pushf
mov
ret
pop
jae
fnstenv
inc
cmpsb
lea
pop
mul
cmp
adc
jbe
mov
jo
stc
push
aas
mov
jae
cmp
dec
push
pushf
dec
inc
cmp
out
push
fldenv
xorl
xchg
cld
adc
xchg
in
and
mov
xor
push
add
aam
shll
xor
and
dec
ret
jecxz
pop
sub
inc
inc
popf
bound
push
pop
and
push
sti
mov
cmp
sub
pop
imul
repnz
xchg
dec
inc
jle
and
jecxz
ljmp
shll
fstpl
mov
push
addl
mov
lods
gs
out
in
gs
xchg
fcmovbe
cli
push
outsl
dec
cmc
cld
xor
mov
mov
mov
mov
shrl
mov
jo
adc
and
mov
notb
mov
mov
mov
mov
int
shr
loopne
mov
pusha
mov
inc
xor
pop
das
call
stos
and
sub
cltd
or
or
dec
jmp
sbb
arpl
cmpsl
xorl
push
push
fstps
adc
mov
mov
push
pop
jb
jo
push
popf
aas
jno
outsb
shll
lea
xlat
stos
ret
lock
mov
arpl
xorb
sbb
jo
mov
lahf
sti
mov
cmpsb
loop
inc
std
scas
lock
loopne
popf
xor
in
mov
ret
cmp
or
inc
inc
fldenv
les
xor
iret
sti
lcall
stos
imul
nop
mov
leave
jns
or
test
insb
add
insl
dec
dec
dec
xchg
push
cmp
jae
jae
pusha
std
fcoms
dec
xchg
cld
ds
fcomi
clc
pop
or
sub
or
cmp
popa
sbb
adc
cltd
dec
and
and
ss
aad
cmp
mov
in
ljmp
popa
pop
lret
fdivl
mov
incb
or
or
jle
mov
rcrb
decb
inc
pop
mov
pusha
pop
shll
ss
and
nop
fucom
mov
pop
test
xchg
int3
sub
in
cmpsl
loopne
loope
mov
dec
and
nop
out
movsl
inc
fbld
pop
je
out
xchg
inc
dec
popf
mov
mov
mov
dec
xlat
sbb
jne
or
ds
cmpsl
aad
sbb
push
loop
test
mov
icebp
lods
add
fisttps
sub
dec
movsb
in
into
cmp
push
cld
sti
pop
dec
inc
enter
dec
adc
das
mov
addr16
cmp
enter
and
les
jp
cwtl
pop
negl
fidivs
aas
aas
pop
inc
ja
mov
ds
jge,pt
jg
mov
cmpl
imul
inc
adc
aam
sbb
lock
fwait
or
jecxz
jge
inc
or
fwait
roll
xor
mov
jle
xor
and
data16
xor
rorl
call
stc
adc
sub
push
gs
call
cmp
xchg
lret
neg
add
das
imul
push
mov
sbb
mov
jp
imul
mov
fadds
mulb
mov
aaa
fwait
rcrb
je
lcall
negl
adc
stc
sbb
aam
lahf
icebp
dec
sub
mov
data16
add
mov
fisubrl
cmc
int
mov
mov
sub
std
testl
mov
je
jno
xchg
insl
adc
popa
xchg
cmpsw
aas
popa
loop
mov
mov
pop
mov
stos
sti
mov
mov
pop
fsts
mov
jnp
dec
leave
sbb
ds
push
sbbb
mov
jbe
fcom
push
test
xchg
sbb
test
lods
fwait
ss
outsl
xor
xor
push
dec
mov
aaa
aaa
add
lret
rolb
js
xor
jo
xchg
cmp
mov
lods
jae
push
daa
test
andl
cmp
inc
jge
jg
and
fisubrs
sbb
cld
jmp
inc
jge
cli
movsl
jl
adc
xchg
jbe
push
divb
repnz
cmp
push
outsb
sub
pop
mov
int
pop
pop
cwtl
sbb
int
cmpsb
aaa
scas
loope
xor
adc
addr16
adc
gs
addb
and
sahf
movb
loop
and
insl
mov
lds
jp
fwait
out
imul
imul
aad
push
iret
insl
into
jle
push
mov
push
adc
add
roll
push
xchg
push
sbb
push
loop
sbb
pop
mov
push
xchg
and
imul
movsl
into
lock
popa
pop
sub
xchg
add
add
xor
push
and
mov
dec
jecxz
xchg
xchg
xchg
and
add
mov
ret
cmp
std
or
jo
mov
mov
aam
sbb
cmp
sbb
pusha
out
icebp
inc
lock
add
pop
addr16
or
jg
inc
cld
mov
mov
lret
mov
dec
inc
leave
in
xor
cmp
hlt
dec
adc
ja
cmp
xor
jle
aam
aaa
jl
mov
js
and
xor
ss
pop
fisttps
mov
mov
dec
xor
aam
rol
mov
push
and
repnz
or
inc
int
idivb
jns
add
and
jae
add
loope
aad
rorb
sahf
mov
pop
fisttps
ss
jb
pop
push
fldl
jae
cmp
dec
sub
jmp
adc
push
and
call
xchg
jno
pop
inc
xor
in
cmpsl
repnz
or
pushf
sub
jecxz
cs
loop
dec
push
xchg
pop
lcall
mov
dec
jo
push
jmp
enter
mov
lea
outsb
add
mov
arpl
jo
mov
cmp
jmp
xor
movsb
in
das
adc
push
jl
and
adc
push
push
jle
into
aas
inc
xchg
sub
jne
mov
or
xchg
mov
ja
mov
js
cwtl
add
ror
ficompl
repz
xchg
cmc
cmp
inc
cmp
sbb
test
enter
mov
add
mov
iret
dec
lcall
inc
adc
sub
pusha
inc
fisubs
ficoms
es
inc
dec
repnz
adc
xchg
pop
mov
std
cld
jl
push
ror
xor
mov
outsl
outsb
mov
hlt
jl
lods
xchg
xchg
lcall
mov
add
cli
xchg
rcrl
fwait
sub
into
jae
or
push
mov
cld
lea
sub
mov
repnz
adc
mov
inc
mov
subl
mov
dec
out
push
or
adc
jnp
rcrl
lret
pop
ds
mov
adc
leave
or
daa
inc
fwait
cli
into
fldcw
jl
mov
nop
pop
ja
mov
je
sbb
cmp
xor
lahf
fbstp
fiaddl
mov
mov
push
ss
add
dec
loop
bound
cltd
movd
sub
mov
leave
sbb
push
out
adc
or
cmc
testl
pop
movsb
addr16
jecxz
xor
sub
inc
jno
add
outsb
mov
mov
test
sbbb
aaa
into
movsl
mov
icebp
mov
xor
es
dec
mov
lret
and
les
fwait
push
and
test
or
pop
loop
cmpb
or
sub
cmpsb
popf
ljmp
frstor
dec
loope
jbe
loop
adc
sub
and
inc
sub
add
pop
aam
dec
push
lock
mov
lahf
out
mov
cmpsb
lds
lea
mov
jge
and
mov
pop
xchg
daa
fs
clc
daa
inc
add
sbb
pop
jp
jge
sarl
and
xchg
adc
inc
and
push
aam
mov
cli
jge
lea
pop
push
dec
aad
outsl
cwtl
cmp
mov
daa
insb
in
jp
cltd
popf
lds
mov
aaa
fidivrl
cmpsl
adc
xor
unpcklps
je
jb
jbe
fbld
xchg
lret
add
mov
cmp
ds
jae
mov
push
inc
loopne
adc
and
mov
push
int
mov
enter
jle
in
fdivrl
xor
cmpsb
inc
jae
inc
ds
xor
test
xor
or
hlt
push
inc
pop
mov
movsl
xchg
shlb
mov
mov
andl
scas
inc
add
inc
push
mov
adc
and
or
call
mov
xorl
pusha
add
insl
jecxz
fs
jmp
jns
xchg
test
jnp
fidivs
bound
inc
and
mov
mov
rorl
fsts
and
xor
add
xchg
add
sbb
or
jnp
loope
pop
fisubs
dec
mov
adc
stc
in
out
les
mov
sarb
bound
mov
cwtl
inc
mov
es
lock
and
std
int3
pop
cmp
add
mov
jno
sub
dec
bound
xchg
into
rcr
sub
push
dec
out
fadds
fsubs
mov
push
push
in
test
jae
xchg
push
loop
outsl
sbb
fwait
icebp
and
push
subl
dec
out
pusha
lret
lea
push
pop
je
mov
inc
pusha
cld
out
mov
sahf
jl
xlat
jno
loope
jl
mov
icebp
push
xor
mov
xchg
test
xchg
movsb
std
mov
sarb
cmpsl
test
sub
bound
inc
ljmp
jns
ret
sbb
sub
xor
mov
aas
popf
das
add
mov
out
xor
adc
fdivl
pop
cltd
shr
inc
jo
ja
mov
fildll
fistl
loope
ret
push
xorb
or
xchg
pop
popa
mov
movsl
shrb
cld
pop
in
sbb
jge
push
jl
mov
loopne
dec
in
sbb
xchg
testl
push
in
in
jp
and
jp
stos
sub
adc
call
popa
sarb
mov
je
icebp
fwait
adc
sub
pushf
push
popf
xlat
dec
or
int3
or
popf
adc
dec
sub
lock
sbbl
cwtl
loopne
or
jae
clc
sbb
out
arpl
sbb
repnz
stc
subl
jmp
aam
mov
pop
mov
int
stos
xchg
cmp
clc
pop
jle
jo
repz
push
mov
xchg
sub
into
test
xchg
fimull
fwait
mov
lock
sahf
sbb
gs
repz
jmp
xchg
mov
outsb
sbb
enter
aad
leave
fildll
in
aaa
jo
or
popf
icebp
xor
mov
lret
lea
cmp
ret
push
sbb
fiadds
fists
cmp
pusha
ds
xchg
push
imul
out
adc
jle
mov
xchg
test
icebp
outsl
pop
stos
mov
cltd
in
sahf
jge
push
incb
in
sbb
insl
cltd
outsl
out
adc
out
push
inc
ja
sbb
jb
mov
mov
scas
push
push
mov
jp
or
lret
and
cli
out
adc
lods
insl
test
xchg
loopne
mov
xor
testb
dec
adc
scas
dec
stos
xor
in
hlt
or
loop
fcompl
js
adc
push
xchg
rcrl
xor
or
scas
xchg
and
nop
and
ret
lret
les
addb
sbb
or
mov
mov
push
dec
adc
inc
or
dec
cmp
dec
sub
push
loop
or
mov
scas
push
mov
mov
das
cmp
jae
repz
fdivrs
jecxz
hlt
fcomps
add
add
subl
into
mov
cmpsb
adc
or
xor
insl
aam
mov
movsb
mov
add
movsl
adc
push
das
out
pop
lcall
outsl
pop
xor
lret
cli
fwait
lret
mov
xchg
dec
inc
jg
aaa
ss
testl
or
xchg
daa
sub
cmp
mov
lds
mov
andl
mov
in
adc
dec
sbb
sub
fsubl
imul
shlb
int3
xchg
stos
out
stc
and
push
enter
sub
ja
push
push
xor
sarl
add
xchg
mov
in
pop
gs
mov
ss
and
cmp
mov
sub
leave
lea
js
jae
jecxz
sti
pop
dec
fbld
dec
jbe
mov
sub
adc
mov
push
in
and
popa
lods
jnp
pop
call
mov
rcll
pop
adc
aas
dec
dec
out
xor
sub
orl
xchg
add
mov
mov
mov
outsb
fistl
loop
mov
push
ret
inc
push
jns
push
rol
jne
cltd
nop
dec
pop
ja
and
xor
inc
imul
jg
insl
pusha
imul
xor
pop
or
mov
push
xor
mov
mov
jae
sti
adc
sub
cmp
cmpsl
out
and
faddl
mov
jmp
rcl
int3
adc
shlb
jecxz
stos
inc
pop
push
jb
jle
hlt
mov
mov
in
mov
stos
xchg
repnz
das
adc
scas
and
xor
pop
dec
cmpsb
loope
jb
rcrb
ljmp
lds
popf
ds
and
add
dec
or
inc
mov
pop
push
jne
das
dec
fwait
jnp
fucomi
loop
pop
lcall
mul
push
into
movsb
ret
push
gs
das
pop
lods
push
dec
jmp
std
cmp
sub
push
cmpsl
inc
mov
test
cmp
push
movsb
cmpsb
xor
mov
loope
add
pop
cmp
and
loopne
push
xor
cmp
insb
jb
xor
sub
xor
push
mov
in
call
lods
lods
das
mov
jmp
das
mov
mov
inc
mov
ss
fstpt
xchg
lods
inc
cld
mov
sahf
nop
mov
frstor
xchg
pop
cmp
jns
cmpsb
inc
subl
and
and
and
popf
and
mov
jae
das
int
mov
ret
lea
jg
fsubrs
popa
jg
leave
int3
jnp
arpl
adc
push
sarl
and
lahf
and
jl
jmp
and
loopne
mov
pusha
pop
in
imul
jmp
aad
stc
addr16
mov
out
pop
xchg
jb
sbb
cmp
and
xor
mov
xchg
dec
adc
xlat
sbb
inc
inc
inc
rorl
push
shlb
out
ror
fisubl
jg
push
movsb
and
sub
push
jg
add
mov
and
nop
and
pushf
dec
cmc
pusha
outsl
addr16
sbbl
test
jbe
out
inc
pop
pop
mov
cmp
sub
jp
or
push
addr16
imul
mov
add
sbb
sbb
sub
xlat
jb
sbb
pop
out
idivl
xor
pop
hlt
fdivrs
les
mov
shlb
ljmp
mov
pop
scas
xchg
mov
out
aam
movsl
adc
mov
clc
imul
jne
push
ja
push
mov
mov
test
outsw
sbb
call
sub
pcmpgtb
scas
jecxz
xchg
les
repz
in
bound
sbb
ja
jmp
popf
jle
mov
mov
fwait
push
ds
add
or
cmp
test
mov
out
popf
mov
mov
xor
sbb
jl
or
sub
sahf
setg
fcmovnbe
movsb
into
icebp
jmp
add
mov
imull
dec
and
roll
aam
ja
mov
inc
dec
mov
sub
test
addr16
movsb
jmp
nop
inc
jge
add
cmp
sub
xor
mov
jne
jnp
addr16
out
push
pusha
pop
sti
push
ss
sub
push
popf
add
stos
add
jno
ds
adc
cmp
fistps
mov
xor
outsb
mov
inc
andb
repz
cmp
adc
mov
sub
adc
in
push
mov
fdivrs
dec
pop
js
scas
fsubrl
testb
sbb
adc
jl
outsl
repz
out
add
stos
cwtl
xchg
outsb
sbbb
cltd
mov
mov
popa
dec
mov
mov
fisttps
add
or
or
mov
insl
aaa
lahf
call
sub
fmull
inc
push
cmp
add
ss
icebp
imul
cmp
sub
add
les
loop
xlat
test
dec
and
xchg
adc
sbb
pop
rcrb
push
stc
aaa
dec
fldl
cwtl
in
adc
jg
cs
jbe
ja
in
cmp
gs
mov
and
jnp
sub
inc
push
adc
mov
insb
dec
inc
in
lea
adc
mov
cli
ret
xor
fisttpl
push
sub
ror
sbbl
push
insl
ret
push
dec
jg
mov
cmp
mov
xchg
in
popf
cmc
inc
shlb
fsubl
add
mov
sub
adc
fsubs
cmp
cmp
inc
mov
fstl
scas
mov
mov
in
lcall
sbb
and
pop
call
aam
pop
xor
popf
je
mov
mov
sub
cmpsl
dec
jns
test
pushf
insb
imul
loopne
pop
lahf
xchg
xor
add
add
rcll
sub
mov
cmc
decb
inc
and
aaa
loope
adc
pop
lcall
or
repnz
adc
scas
cmc
inc
aad
adcb
mov
pop
popa
icebp
mov
adc
pop
pop
dec
dec
mov
xchg
outsb
adc
jl
xchg
lret
inc
mov
repz
cmpsl
lock
or
testb
repz
ss
mov
jge
inc
pop
fnsave
mov
div
xchg
mov
xor
rcr
inc
arpl
mov
and
sbb
push
int
gs
or
pop
push
add
cmp
dec
dec
call
aaa
fs
mov
sbb
xor
adc
addr16
ss
cs
sarl
nop
xchg
jl
sbbb
adc
and
mov
xor
out
pop
jp
lock
in
imull
xchg
lods
les
shll
mov
dec
push
or
in
jp
add
lock
cmpsl
inc
mov
call
mov
in
adc
xchg
add
lret
nop
rol
xor
dec
cmc
aaa
push
jge
mulb
push
cs
xor
fcomps
outsl
xchg
mov
daa
out
inc
arpl
xchg
sbb
and
decl
xor
pop
add
out
sbb
jg
push
sbb
jns
imull
and
sti
jge
add
shrb
cmp
jl
js
cmp
in
mov
xor
ss
mov
or
andb
dec
insb
shll
cmpsb
outsb
hlt
adc
mov
cli
ret
scas
mov
sbb
imulb
outsb
cmp
pop
iret
inc
test
jo
inc
cmpb
test
add
jne
jne
sahf
imul
xor
xchg
movsl
rcl
shrb
mov
mov
rorl
cmp
ret
sbb
push
jmp
scas
ja
inc
and
fcmovbe
pop
fildll
out
xor
outsl
andb
mov
sub
jo
push
xchg
or
lods
lcall
ljmp
lods
xor
dec
clc
fmuls
enter
mov
dec
lock
icebp
leave
xlat
mov
jmp
mov
das
xchg
and
cmp
inc
lret
mov
stos
fs
insb
ljmp
mov
mov
mov
mov
dec
inc
and
lds
incb
cmpsl
fistps
sarl
sbb
dec
xchg
pushl
mov
mov
cwtl
insl
mov
and
cwtl
xchg
outsl
repz
fnstcw
mov
or
pop
adc
cmp
bndldx
movsb
pop
lods
mov
sahf
cmp
lea
xchg
inc
repz
add
mov
xchg
aas
xchg
mov
cs
sub
pop
add
fnsetpm(287
insl
push
mov
clc
jl
xor
pop
xchg
cmp
scas
xor
jmp
into
iret
dec
mov
sbb
mov
or
sbb
sub
repz
mov
fcoml
sbb
push
lcall
jge
sti
popa
xor
notb
out
nop
sub
mov
int
add
add
jmp
pop
repnz
adc
pop
dec
and
inc
jnp
je
jg
inc
clc
xchg
jb
xor
lret
mov
mov
add
push
fs
pop
add
bound
cmc
push
push
test
lahf
arpl
addr16
inc
sbb
popf
loope
pop
lods
push
mov
push
and
cmp
enter
cmp
dec
test
in
movl
mov
xchg
test
sbb
test
and
test
inc
aam
mov
int3
push
in
jns
push
dec
test
clc
xor
pop
cmp
scas
test
dec
add
inc
mov
mov
aaa
into
push
lods
cmp
sub
das
jno
icebp
sbb
mov
iret
repnz
jmp
repnz
xor
xor
mov
test
std
xor
lret
and
mulb
loope
lods
mov
fcomi
xchg
stos
test
arpl
pushf
push
popf
push
pop
sbbb
and
scas
aas
int
push
cmp
inc
xor
sub
pop
movsl
setle
jecxz
dec
jne
jp
in
fs
jmp
pop
inc
pop
loope
lcall
repnz
and
popl
pop
lahf
mov
loopne
cmp
cmp
inc
push
jmp
sub
pop
jg
push
out
pop
sbb
xor
xor
mov
or
sbb
pop
jl
stc
std
mov
lock
outsb
pop
push
popf
clc
xchg
xor
movsl
inc
cmpl
cli
adc
into
ret
aaa
adc
int
fs
inc
sti
loop
and
call
adc
aad
or
test
out
cmc
outsl
xor
ret
and
jno
push
sbb
or
clc
pop
jae
mov
xor
mov
repz
sbbb
mov
leave
rolb
lods
sbb
cltd
movsl
sar
sbb
jmp
sub
shll
mov
adc
nop
popf
notb
rolb
dec
test
nop
mov
push
dec
xor
and
mov
jb
mov
fisubrl
add
inc
or
push
lahf
push
jle
leave
dec
fs
pop
sub
pop
dec
in
push
cmc
das
push
scas
idivb
pop
pop
cmp
ja
mov
jle
in
xchg
gs
fstpt
xchg
loopne
cltd
adc
stos
adcb
into
ljmp
aas
stos
insb
xor
xchg
dec
aam
leave
dec
rolb
add
fnstsw
lds
dec
mov
imul
and
testl
ret
or
outsb
popf
das
fmull
jle
mov
add
call
pop
divl
inc
pusha
pop
lds
and
xor
lock
xlat
sub
mov
lcall
aaa
outsb
push
popf
rcr
stos
jbe
inc
inc
fucom
add
push
mov
xchg
jg
pop
jmp
std
xchg
push
mov
push
mov
addb
imul
cs
dec
mov
fmul
mov
lea
test
stos
adc
icebp
and
ret
loope
sbb
xor
cmp
jecxz
or
fucomi
and
imul
nop
je
ret
jp
lret
mov
mov
into
popa
ret
mov
xchg
pusha
std
xlat
pop
mov
cwtl
std
dec
jo
sub
sbb
pop
cmp
in
test
in
xor
sbb
inc
mov
xchg
adc
adc
sahf
flds
jp
aaa
in
jb
cmp
mov
aad
ja
loop
les
mov
lcall
lahf
jg
movsb
jmp
scas
push
cmp
cli
pop
add
dec
sahf
lret
dec
mov
mov
or
xchg
je
or
shr
stc
push
out
addr16
jmp
inc
sbb
lret
dec
xor
mov
pop
lock
push
popf
sahf
add
mov
pop
mov
out
jg
inc
lods
adc
outsl
stos
mov
test
mov
jle
fs
addr16
inc
push
xchg
pusha
cli
sub
jnp
mov
out
mov
gs
xlat
insl
vpunpckhwd
pop
xlat
int
bswap
pop
jno
or
xchg
xchg
push
xchg
inc
sbb
nop
mov
pop
dec
fsubrs
int3
jno
xor
cmp
jg
fs
lock
jp
test
xor
mov
jns
cmp
adc
and
push
pop
dec
inc
jecxz
fscale
inc
lret
jne
les
sbb
cwtl
adc
insl
ret
les
jmp
jo
mov
cld
shrl
jb
pop
mov
iret
sub
movsb
loopne
lea
decb
fs
ret
hlt
insl
push
pop
adc
rclb
fwait
xorb
lahf
jbe
into
mov
push
fdivl
mov
pop
subl
mov
xor
int3
push
lret
lret
pushf
hlt
mov
fbstp
pop
hlt
mov
mov
insb
and
shrl
dec
popl
movsl
pop
hlt
imul
frstor
idivl
jne
sub
mov
lods
mov
test
inc
mov
les
sub
inc
jg
push
xchg
out
mov
adc
xchg
xchg
test
fcmovnbe
jns
sbb
mov
inc
add
xchg
mov
mov
jns
imul
mov
cmpb
adc
fwait
dec
adc
sti
xor
insl
push
or
cmp
outsb
adc
pop
stos
sub
inc
jp
mov
xchg
arpl
xchg
push
push
int3
inc
ljmp
add
iret
xor
mov
lahf
das
cmpsl
push
cwtl
add
sub
lock
movsb
icebp
sub
pop
or
xchg
xor
pusha
push
insb
loope
daa
jae
push
test
test
mov
mov
mov
clc
inc
loop
and
pop
cmc
insb
ret
daa
mov
adc
push
ss
mov
ljmp
aas
inc
das
pushf
adc
scas
mov
pop
and
dec
push
test
aas
jl
rcr
fdivs
pop
bound
jle
jne
push
dec
lea
sbb
xlat
jecxz
hlt
fs
imulb
outsb
mov
dec
pop
ja
inc
sahf
mov
xor
movl
stc
mov
xchg
sbb
aam
mov
push
sub
lcall
add
push
mov
dec
ja
or
bound
insl
dec
shlb
sbb
jp
add
sbb
add
addr16
fsubl
dec
mov
ss
mov
mov
mov
out
cmp
or
sub
cmpsl
out
mov
push
xor
shll
xchg
adc
ret
add
imul
stc
pushf
jns
out
cmp
or
pop
mov
das
jg
iret
lds
aad
test
mov
popf
jb
loop
mov
out
in
cltd
outsl
aam
imul
pop
inc
les
addr16
sbb
and
in
xchg
out
jge
sub
jne
aad
jle
imul
in
in
fldenv
xor
test
mov
loopne
aas
in
pop
xlat
inc
je
add
clc
js
lahf
lods
mov
test
lahf
test
faddl
shr
pop
inc
ss
add
repnz
es
inc
sarb
pop
push
fldenv
std
xchg
pop
imul
rorl
mov
mov
mov
int
out
imul
into
rol
gs
lret
jae
dec
inc
lock
jnp
or
ret
sub
jmp
jnp
push
inc
xchg
stos
lock
test
jecxz
scas
movsl
les
jo
cmp
mov
sbb
cli
mov
fldenv
aad
inc
mov
loopne
bound
fs
push
sahf
movsl
xchg
or
and
sbb
shlb
scas
sub
mov
ja
dec
mov
cmp
repnz
int3
aam
adc
xor
dec
add
dec
movsb
loop
cs
ficompl
arpl
in
repz
jb
aas
inc
mov
popl
mov
mov
scas
mov
dec
xchg
pop
ds
xchg
jo
ds
pop
dec
and
ss
jge
movsl
push
out
push
jns
in
mov
ret
mov
fadds
push
sub
jb
and
xorb
jnp
mov
adc
mov
sub
push
call
cmpsb
insl
sub
cmp
lods
lcall
idiv
fnsave
mov
lods
add
cmp
dec
mov
xchg
pop
mov
dec
insl
lock
cmp
sbb
cld
sub
or
scas
push
sahf
push
sbb
xchg
jl
add
mov
inc
ss
ljmp
push
pop
addr16
ds
push
mov
push
xchg
stc
dec
pop
lods
mov
sti
hlt
movsl
push
pop
sub
out
xchg
xchg
mov
sbb
test
js
mov
sahf
xchg
test
in
out
in
outsb
push
mov
aaa
mov
jle
int3
lahf
adc
test
mov
jns
jo
push
into
xor
cmp
pop
aaa
flds
insl
mov
mov
ss
lret
or
imulb
popf
mov
loope
and
dec
pop
mov
mov
les
or
pop
pop
je
push
mov
xor
xchg
test
test
loop
dec
inc
repnz
ds
aad
xchg
sbb
test
mov
mov
dec
adc
in
push
push
jmp
dec
mov
stos
mov
repz
ds
xchg
mov
lods
mov
stos
aas
xchg
xchg
and
mov
mov
adc
in
dec
lds
inc
jb
fildll
sbb
fmuls
ret
cmp
test
push
int
pushf
outsb
into
sub
jnp
cmc
call
in
ret
inc
out
pop
adc
push
fdivrl
dec
sbb
outsb
and
cmp
inc
cltd
mov
and
push
in
mov
dec
add
clc
jne
xchg
out
jbe
fidivrs
dec
mov
scas
mov
mov
push
mov
cmp
mov
adc
lods
jno
and
out
jne
mov
shll
mov
and
jecxz
fsubrp
add
and
and
lods
cli
hlt
push
cmp
xor
and
subl
and
in
clc
fstl
xchg
adc
or
sub
in
js
cmp
add
jg
sub
cmc
je
and
push
movsl
inc
out
lock
jno
mov
cmp
inc
add
cmc
dec
or
cld
mov
movsl
outsl
dec
xlat
push
cs
xor
add
xor
js
dec
ficomps
mov
xchg
punpckhdq
shrb
inc
xchg
mov
imul
add
arpl
xor
mov
mov
inc
cmp
div
aam
stos
cmovg
jl
adc
fsubs
xchg
nop
sahf
dec
push
daa
xchg
inc
inc
push
pop
mov
sbb
xchg
adc
mov
xorb
rolb
inc
mov
mov
fldz
mov
faddp
add
adc
movsb
rolb
sub
arpl
push
inc
leave
lahf
mov
sub
leave
add
pop
stc
mov
inc
mov
dec
stos
mov
jo
push
in
out
vaddsubps
add
mov
push
daa
sbb
gs
lods
or
jp
insl
and
sbb
add
popf
loopne
adc
lret
shlb
inc
mov
xchg
int3
inc
rcrb
inc
std
rol
test
stc
nop
fstl
cwtl
sub
pop
xchg
or
pop
jbe
in
jbe
sbb
sbb
orl
subb
jns
mov
jae
sub
or
lcall
sub
adc
jne
cpuid
lods
adc
lods
sub
sub
pop
mov
mov
fwait
push
jle
out
pop
shrl
push
jle
test
mov
sub
fistps
cmp
inc
cltd
jbe
cs
icebp
in
pop
repnz
add
test
out
adc
and
fidivrl
sti
out
adc
mov
lcall
push
sbb
aas
jg
push
sub
sarb
sbb
shl
ds
ljmp
jns
idivl
shrl
inc
adc
mov
add
popa
xor
or
fiaddl
test
adc
imul
jae
fcmovnbe
ss
add
stc
inc
testl
addl
xchg
jae
icebp
sti
cmp
fidivs
idiv
lods
adc
ljmp
mov
inc
sub
cmpsb
and
fistl
or
mov
and
xchg
and
insl
ja
mov
lret
fdiv
jg
jnp
lods
popf
into
mov
repz
jge
sbb
sub
xor
das
test
mov
cli
dec
sarl
daa
shrl
and
add
pop
mov
inc
mov
inc
dec
mov
lret
sbb
push
rdpmc
pop
popa
cmp
mul
ja
fidivrs
imul
sub
int3
aam
sbb
xor
push
out
xchg
rcrb
enter
hlt
stos
popa
lret
dec
mov
or
adc
xchg
push
imul
jp
and
fadds
fwait
push
xchg
pop
push
sbb
sub
add
loope
data16
jno
ja
sbb
fld
jg
or
stc
and
stos
clc
in
push
ljmp
adc
or
int3
out
inc
fsubp
je
or
mov
xor
push
and
lahf
ficoms
lock
imul
adc
aad
jbe
int
xorl
mov
inc
mov
xchg
out
adc
movsl
mov
adc
or
mov
push
sti
testb
xchg
pop
push
or
pusha
adc
cmp
lcall
jl
mov
decl
pusha
sub
and
mov
aad
adc
pop
mov
mov
adc
out
shlb
jecxz
sbb
jle
pop
jl
add
iret
sbbb
sbb
adc
mov
xchg
pop
sub
aaa
les
andb
adc
sub
xchg
sbb
push
iret
and
sti
sub
cmp
push
int
jno
sub
loope
loop
imul
imul
pop
mov
xchg
jge
loopne
sbb
icebp
testl
push
cltd
repnz
xchg
lcall
cmp
and
or
loope
cs
push
flds
xchg
push
in
fimull
movsb
mov
mov
shlb
fcoml
push
insl
push
jnp
cwtl
dec
imul
jne
addr16
lock
mov
gs
dec
mov
out
inc
xorb
hlt
test
call
and
test
pop
arpl
xor
std
sbb
or
xchg
int3
in
mov
ret
pop
mov
lods
xchg
iret
mov
or
inc
xlat
inc
je
stc
mov
ljmp
xor
stos
lods
sahf
add
je
adc
xor
movsb
aad
jp
and
ret
movsb
leave
pop
outsl
inc
or
cmp
jnp
pop
std
or
clc
pop
sub
out
pop
mov
cmpl
cmp
cmp
sbb
jg
sbb
repnz
pop
mov
ja
adc
fistps
mov
jno
mov
push
dec
and
pusha
mov
lods
stos
and
popf
aas
or
inc
test
cld
or
mov
int3
xchg
bound
push
cmp
addr16
inc
pop
imull
scas
sbb
jge
and
insb
xlat
scas
leave
lds
shrb
mov
movsl
imul
mov
in
sbb
lret
imul
pop
pop
sub
stc
adc
and
mov
sub
jnp
fldcw
jns
lods
out
adc
out
mov
sbb
pop
pushf
iret
mov
inc
pop
mov
shl
test
cmpb
decb
inc
push
jp
and
and
cmp
scas
outsb
pop
ss
rol
xlat
mov
test
in
lds
or
in
or
inc
hlt
jns
xor
and
or
mov
rol
add
std
pop
lock
jno
jmp
arpl
cwtl
xor
insl
mov
insb
ljmp
pusha
jo
xchg
aas
cld
cs
cmp
out
popf
pop
fwait
pusha
rorl
dec
icebp
loop
and
mov
push
pop
cmp
xchg
rolb
xchg
jae
push
sbb
fwait
out
jl
add
adc
fildl
mov
adc
jbe
shr
sar
sub
or
mov
inc
cmp
les
inc
movsb
cs
popa
test
xor
pop
sub
pop
daa
in
mov
in
mov
inc
std
addb
push
movsl
mov
xchg
aas
inc
lock
jne
push
xor
lea
push
sub
xchg
lcall
jne
clc
out
repnz
imul
adc
sbb
int3
ja
push
mov
test
scas
dec
leave
fsubl
push
fs
dec
fildl
das
sbb
jo
xor
dec
fdivl
cmp
clc
aas
neg
lods
jbe
adc
stc
or
push
pop
dec
sbb
or
ss
int
push
fnstsw
ret
adc
loop
and
jne
push
fs
sub
mov
dec
and
lods
scas
inc
jo
dec
xor
dec
mov
jmp
and
out
sub
mov
movb
mov
pushf
xchg
xchg
jecxz
repz
xchg
cli
lea
push
mov
pop
sbb
test
jmp
ds
mov
mov
dec
nop
inc
mov
pop
mov
or
leave
push
sarb
shrb
mov
mov
sbb
dec
test
dec
mov
mov
stos
inc
xchg
fnstcw
or
sub
sbbl
sarb
movsb
dec
out
adc
xchg
sbb
insl
inc
or
test
inc
xchg
ret
fdivrl
pop
jp
fbld
jns
hlt
mov
into
cmp
andl
fwait
lret
in
xor
lret
addb
cwtl
jae
xlat
scas
pop
mov
mov
add
add
ds
mov
rep
xlat
fmulp
not
mov
fld1
sbb
aad
fistl
fwait
sbb
arpl
mov
unpckhps
fcomps
push
or
lcall
fiadds
in
js
jle
out
loop
xor
pop
stos
sub
jp
fistps
clc
mov
add
mov
shl
rsqrtps
sbb
lahf
cmp
and
or
ss
jmp
jne
rolb
jb
loopne
fistl
mov
call
loopne
mov
lret
nop
push
dec
push
loope
inc
or
jmp
sbb
ds
ffreep
cmp
and
lock
outsl
nop
mov
sahf
das
cwtl
aas
lahf
mov
or
sub
aas
fcomps
cmpb
or
inc
les
adc
ret
fs
hlt
cwtl
jmp
sub
cmc
xor
pop
cmpl
push
cld
push
arpl
shr
clc
mov
cmp
cmp
call
pushf
add
xchg
aas
out
cmpsb
nop
icebp
sbb
mov
pushf
and
add
sbb
sub
dec
mov
lock
int
adc
dec
and
jp
pop
dec
lock
int3
push
pop
mov
scas
test
push
push
sub
mov
add
popa
push
add
clc
shr
test
jns
push
pop
out
cmpsl
inc
pop
out
sarb
rorb
dec
and
or
push
jle
mov
adc
cltd
fldt
fnsave
decb
inc
sub
je
pop
in
call
je
add
add
dec
cld
mov
or
pop
inc
loop
cmp
mov
call
cmp
out
mov
js
fidivl
lret
mov
addr16
addr16
lret
pop
cmc
sbb
add
int3
xchg
adc
testl
xchg
xchg
iret
sub
aaa
pop
inc
lock
out
stos
xchg
and
sub
cmpsb
in
in
sub
and
mov
cmc
dec
inc
mov
ret
push
test
push
push
inc
arpl
sti
out
lret
hlt
cmc
mov
push
mov
mov
adc
and
hlt
and
pop
mov
or
test
cmp
inc
mov
or
push
dec
repnz
loopne
push
jecxz
mov
dec
mov
int
xchg
call
sbb
jae
push
jae
out
fldcw
sarl
inc
iret
addr16
repnz
add
hlt
push
je
insb
mov
imul
clc
jmp
xchg
lods
test
push
mov
lret
aaa
into
mov
jo
sbb
xlat
std
and
jbe
xor
nop
fs
sbb
push
or
mov
pop
mov
nop
mov
in
and
pop
add
or
out
aaa
mov
dec
xchg
js
mov
mov
pop
sarb
fdivrl
mov
mov
into
scas
pusha
mov
add
mov
int
fs
enter
inc
js
out
test
insb
loop
les
ficompl
xchg
inc
iret
mov
lock
shll
movsl
jp
inc
dec
std
fnstsw
cmc
xchg
mov
add
pop
clc
fstpt
out
cmp
shrb
xor
fmul
add
int3
xlat
dec
lcall
in
out
insl
rorb
fisubl
push
dec
mov
dec
sbb
test
mov
add
xor
cld
aad
sbb
addr16
xchg
enter
js
dec
cmpsl
enter
popf
sbb
xchg
sbb
and
cmpsb
dec
mov
dec
rclb
aas
aad
mov
and
lds
jl
adc
fsubr
xor
sarl
pop
leave
and
mov
js
sbb
push
push
and
imul
rorl
cmpb
mov
or
fcoms
jae
jo
add
adc
leave
mov
or
xchg
jp
mov
mov
hlt
xchg
shl
add
push
mov
sbb
push
fcomip
ss
leave
lret
mov
imul
jmp
add
cmc
dec
lock
mov
xor
xchg
movd
das
jns,pt
scas
sub
add
jns
lods
adc
sbb
lods
js
dec
aad
out
add
test
xor
mov
inc
xchg
mov
out
bound
sub
jl
adc
in
pop
out
cld
fsubr
fdivp
ljmp
fidivl
shll
inc
add
sub
xor
dec
clc
psrlq
aam
dec
dec
sti
in
test
sub
nop
xchg
pop
les
into
xor
xorb
jns
scas
jns
adc
repz
addr16
popl
sti
aas
sbb
mov
or
inc
xor
push
das
jnp
xchg
jnp
sbb
test
fwait
ja
in
mov
arpl
sbb
scas
adc
jg
pop
inc
sbb
jne
insb
sbb
sbb
mov
js
mov
mov
push
insl
push
popf
and
pop
dec
jle
imul
mov
fimuls
punpckldq
repz
or
in
sub
loopne
jl
adc
addr16
dec
sbb
dec
pop
jno
or
or
dec
xor
sub
push
subb
lret
mov
dec
add
std
lcall
pop
push
cmpsl
dec
mov
sbbb
or
pop
outsb
test
popf
imul
loope
add
xchg
add
push
xor
dec
and
cmc
cmp
ja
sbb
clc
in
repz
cmpsl
dec
call
movsl
mov
mov
fidivrs
icebp
insl
xchg
and
push
lea
mov
shlb
rcr
mov
pop
xchg
sub
xor
xor
cmp
inc
jns
add
arpl
sbb
inc
dec
jg
lcall
pop
xchg
out
bound
dec
xchg
dec
xchg
pusha
loopne
rcr
sbb
ds
iret
out
sbb
cmc
and
mov
cli
mov
call
aam
inc
lods
sub
or
mov
mov
dec
push
std
xor
mov
add
fistps
mov
outsl
pushf
int3
xor
scas
xor
fistpl
stos
jo
pop
call
jl
ljmp
icebp
mov
lods
ljmp
es
enter
fisttps
or
pusha
pop
stos
add
push
sar
pop
mov
pushf
mov
imul
pop
dec
nop
movsb
ljmp
xchg
push
enter
pop
mov
cmp
pusha
or
cmc
jp
popa
push
cwtl
insb
out
pop
gs
push
loop
mov
pop
jae
fdivs
roll
jae
aam
rcrb
data16
ds
insb
push
movsl
sbb
movsb
push
jbe
and
push
lods
jp
and
xchg
aas
inc
xchg
or
das
inc
mov
push
sbbl
jecxz
std
sub
inc
pop
frstor
push
pushf
push
daa
cmp
out
mov
pop
aad
push
fldcw
mov
mov
xchg
popa
and
fcoml
stos
lock
xchg
in
add
mov
pushf
js
pop
ja
in
lret
mov
idivb
push
xchg
pop
int3
rclb
jl
imul
movsl
das
mov
mov
scas
xor
lock
mov
push
or
jne
dec
mov
lcall
test
sbbl
clc
enter
and
insb
jp
addr16
iret
and
sub
mov
stc
iret
fwait
icebp
ljmp
repnz
ret
rcrl
inc
addr16
sti
push
dec
aaa
jmp
and
mov
rorb
sub
cmp
pop
test
test
xchg
jge
pop
int3
mov
sti
add
inc
push
jle
jg
clc
lods
rcll
inc
pop
lods
adc
push
repz
fs
daa
jae
jge
pop
or
or
lods
sbb
iret
inc
or
filds
andl
push
or
pop
sbbl
lret
jb
mov
mov
fsubrs
dec
and
jecxz
adc
xchg
sub
pop
mov
and
sub
or
shrl
icebp
or
xchg
xor
lret
test
inc
add
cwtl
inc
outsl
jmp
adcb
xor
jg
jl
aam
dec
lret
test
and
cmp
or
push
into
mov
sub
xlat
push
or
mov
insb
negl
popf
mov
rcr
mov
cli
cmp
loope
je
inc
mov
cmp
insl
js
lea
sbb
in
mov
aaa
sbb
sbb
cltd
aad
push
fld
sub
loope
loope
cmp
incb
repz
mov
icebp
pop
setg
or
sbb
dec
je
jecxz
sub
sub
jno
jbe
jp
sbb
sub
sub
pop
ss
cmp
dec
push
ret
push
sti
int3
int3
mov
into
mulps
push
or
jne
imul
ret
xor
xor
aaa
fcomps
and
mov
mov
push
dec
cmp
sarl
jae
cmpsb
pop
mov
sbb
or
in
insb
or
push
add
pop
mov
out
cmp
mov
pop
sarb
mov
push
pop
adc
ficoms
les
jbe
ret
push
mov
fnstsw
call
out
test
inc
addr16
ss
scas
out
adc
pop
xchg
fs
push
dec
aad
jl
bound
mov
pop
scas
inc
cmpsb
mov
rcr
xchg
aas
inc
pop
in
and
testl
sub
or
adc
into
aas
dec
cld
adc
adc
xchg
dec
jmp
movsb
inc
push
mov
mov
push
mov
lret
and
fidivrs
mov
dec
cmpsl
pop
xchg
fnstcw
xchg
xlat
ret
adc
push
scas
push
lock
pusha
sub
fisttpll
add
mov
push
jnp
fisttpl
test
xchg
out
pop
jl
xchg
popf
jp
dec
or
imull
push
cli
sub
xor
dec
out
and
repz
enter
loop
call
cld
ret
cwtl
lods
mov
rcr
inc
xchg
jo
ret
repz
jbe
sub
mov
fstps
xor
pop
outsl
cmp
xchg
jnp
cmp
xor
mov
adc
inc
cmp
ja
pop
ss
inc
stos
sub
dec
inc
decl
loope
sbb
rcll
notl
push
jg
insl
movsb
mov
and
ret
sbb
dec
jge
ss
and
pop
les
mov
rolb
mov
out
xchg
push
rcl
add
pop
out
addr16
mov
testl
insb
adc
pushf
arpl
inc
in
dec
push
jnp
mov
dec
and
enter
jns
lock
into
push
daa
pop
je
insb
jno
cmpsb
and
xchg
lcall
loope
fsts
and
and
or
addr16
cld
jle
pop
fs
cwtl
arpl
lds
imul
stos
dec
adc
outsl
ret
fadds
loopne
test
pop
sahf
rclb
rol
cmp
mov
inc
and
mov
mov
lahf
xchg
imul
lahf
push
mov
lcall
movsl
mov
enter
mov
add
stos
es
test
inc
ljmp
dec
jo
jle
xor
add
add
das
pop
adc
into
mov
push
mov
fisubs
js
in
inc
inc
pop
xchg
aaa
lock
bound
in
aaa
in
mov
mov
fucomip
shlb
lock
and
lret
mov
jmp
cmp
and
jmp
std
add
les
and
int3
outsl
xor
movsl
lock
pusha
or
push
pop
stos
push
rorl
dec
xor
mov
sbb
es
mov
aaa
jnp
mov
test
int
stos
lods
les
add
jg
xchg
inc
testb
lret
mov
es
out
out
fcomp
and
stos
into
cmp
adc
xor
adc
add
arpl
xchg
xorl
push
dec
xor
jecxz
cmp
outsb
cmp
mov
sub
jb
std
and
mov
jbe
daa
int
cmp
add
shlb
fnsave
jns
in
rcrl
xor
pusha
jb
fidivrs
dec
ljmp
sbb
les
lea
pop
and
xchg
lock
jns
or
stos
dec
jl
in
mov
xor
and
mov
adc
jg
add
stc
mov
sub
ret
rolb
inc
fisubrs
sbb
xchg
pop
clc
jle
divl
dec
sub
cwtl
cmpsb
push
xor
test
sub
push
xor
dec
xchg
pop
sub
mov
bound
pop
push
add
movsl
pop
es
inc
adc
mov
stos
pop
jb
pop
push
add
in
cmp
mov
fadds
ret
mov
clc
fstl
pop
cmpsb
push
add
xchg
inc
loope
push
push
add
add
ja
mov
mov
add
mov
lea
cmpsb
shlb
pop
dec
sub
aas
in
and
cmp
mull
je
outsl
repnz
mov
mov
sahf
int3
outsl
addr16
or
and
push
sti
pop
cmc
xor
dec
pop
xchg
cmp
or
imul
inc
xor
cmp
and
sbb
xchg
inc
clc
push
add
out
lds
ffreep
push
insb
das
push
pop
enter
rorb
stc
add
cmc
adc
fbld
out
xchg
mov
mov
stos
test
hlt
cs
ja
cwtl
inc
adc
xor
ret
cmp
in
ss
ljmp
movsl
lods
outsl
into
or
mov
ljmp
and
insl
ret
inc
or
xchg
shll
add
xchg
loop
sbb
dec
jo
sub
xor
pop
int3
fidivrs
ja
js
jecxz
insb
aas
pop
push
fcmovbe
mov
xor
jp
scas
mov
cmc
out
dec
cmpl
add
stos
inc
push
dec
cmpb
arpl
or
mov
ljmp
fiadds
dec
mov
mov
sbb
adc
cmp
mov
mov
inc
imul
mov
dec
das
push
pop
pop
std
ds
outsb
stc
bound
push
lods
cmc
iret
lret
pop
popa
sbb
jge
mov
movsl
clc
mov
ret
std
clc
push
icebp
pop
or
push
popa
das
sbb
push
sub
in
cwtl
ljmp
aas
add
scas
mov
or
gs
mov
cmp
push
inc
ror
in
pushf
fdivl
mov
pop
jb
mov
pop
dec
cli
ficomps
and
lcall
jnp
das
cli
stos
repz
lods
sbb
inc
roll
pop
nop
out
or
pop
adc
shlb
xlat
jae
sbb
dec
addr16
loope
push
out
adc
sub
repnz
jle
daa
les
lods
pushf
cmp
sbb
or
jno
sub
cs
xor
mov
je
test
sub
push
lret
sub
sbb
test
and
cli
push
pop
aam
and
iret
insb
or
pop
lret
adc
xchg
jmp
pop
xor
div
mov
inc
jns
andl
arpl
icebp
xor
pushf
xor
jbe
and
jne
les
ret
cmpsl
cmp
add
mov
sbb
cmpsl
shrb
pop
aaa
lret
dec
arpl
es
popf
std
sbb
cmc
dec
and
fsubp
jo
mov
cmp
or
and
loope
and
loopne
aas
je
mov
incb
cmp
inc
mov
jmp
pop
and
xchg
add
in
in
and
cmp
dec
xchg
push
jg
pop
jnp
cmc
sbb
fmulp
aad
adc
mov
hlt
push
mov
test
mov
stc
in
lods
call
into
enter
add
adc
dec
pop
pop
sbb
icebp
pop
jnp
ss
js
cli
inc
repnz
adc
xchg
xor
mov
sbb
sub
xor
outsb
testl
sbb
push
lret
pop
lahf
repnz
rcl
rolb
je,pn
xchg
repz
imul
js
das
fs
outsl
jno
mov
stc
pop
inc
mov
mov
sahf
in
fs
pop
into
xchg
inc
and
cmpsb
push
push
mov
int3
mov
push
dec
subb
fiadds
dec
or
add
data16
adc
shll
pop
loop
out
xor
inc
pop
arpl
fwait
out
data16
aaa
out
xlat
mov
sbb
or
pop
pop
xor
pushf
rcrl
fistl
add
dec
sbb
adc
inc
push
pop
sahf
rclb
and
cmc
mov
jo
cmpsl
lahf
push
xorb
mov
jle
jb
jb
xor
in
jl
imul
es
leave
ss
jne
mov
mov
sarl
ret
mov
movsb
jmp
dec
push
mov
outsb
push
add
mov
aaa
adc
jp
jl
push
mov
jbe
rorl
cmp
sti
inc
jo
push
out
loop
and
mov
lods
sbb
cld
jo
inc
xchg
call
jle
inc
pop
int
dec
xchg
xchg
pop
xor
clc
cs
jmp
dec
out
add
add
in
mov
sub
fisubrl
aad
pop
lret
add
inc
adc
cmc
push
cmp
mov
inc
adc
leave
xchg
data16
cwtl
jns
dec
mov
pop
push
clc
jg
mov
push
inc
loopne
ficoms
loop,pt
dec
dec
adc
xlat
idiv
leave
sti
in
sbbb
push
pop
or
mov
mov
cli
cmovp
std
dec
in
insl
jmp
cmp
aad
pop
sbb
add
and
xchg
in
imul
or
bound
test
jmp
or
rorl
les
mov
cmpsb
push
pop
add
movsb
xchg
jb
divb
imul
mov
lods
pop
cmp
insl
xor
inc
push
pop
imul
pop
lods
cmp
adc
pop
sbb
fwait
outsl
imul
fidivrl
mov
pop
xchg
aas
and
pop
in
cmp
mov
adc
aam
js
xchg
jne
fld
adc
rorl
fmull
mov
push
mov
mov
jg
pop
mov
lods
push
imul
pop
nop
mov
sbb
mov
push
pop
and
fiaddl
push
sahf
jns
sbb
mov
push
jns
fstpt
mov
add
lcall
pop
std
mov
int
leave
lods
sbb
aaa
loopne
sub
inc
dec
call
mov
lods
inc
movsb
stc
pop
mov
stos
cli
in
cmp
jle
das
mov
stos
lahf
add
inc
sub
aad
pop
xor
add
adc
and
add
sub
test
arpl
mov
jl
inc
fbstp
mov
dec
mov
add
mov
mov
xchg
cld
repz
fisttpll
repnz
mov
cltd
mov
mov
mov
push
xor
or
in
rol
dec
hlt
dec
mov
pop
mov
add
test
pop
pushf
lahf
jecxz
aam
popa
xor
sbb
dec
sub
into
test
xor
fsts
adc
popa
jo
out
push
xchg
imul
rcrb
and
sub
iret
sbb
fwait
cmp
mov
dec
cmp
je
sahf
lds
out
inc
sbb
scas
dec
subb
inc
addr16
jno
add
aaa
mov
movsb
cli
jno
or
add
mov
mov
jecxz
sbb
or
inc
lcall
imul
jle
dec
push
aas
push
mov
sti
jne
std
push
clc
inc
mov
ja
movsl
xlat
adc
cltd
inc
pop
in
aad
icebp
inc
or
mov
arpl
inc
and
mov
out
and
pusha
jnp
push
adc
mov
and
lahf
mov
xchg
xor
scas
push
pop
xor
xorl
jge
dec
and
xchg
mov
adc
je
ret
push
inc
test
hlt
or
addps
into
std
push
xchg
sbb
pop
pop
pop
adc
fisttpll
sbb
xor
xchg
fs
and
subl
xor
cmp
push
xchg
or
push
mov
nop
dec
addb
test
adc
inc
push
leave
enter
out
testb
ss
insl
sbb
xchg
fildl
inc
jle
mov
mov
arpl
daa
fdivrl
rcrb
mov
stos
movl
sti
push
nop
mov
inc
mov
fildl
call
jge
test
lcall
test
divb
movsl
leave
stos
xlat
push
adc
ret
lods
clc
repz
or
in
mov
ljmp
or
cmp
test
sub
xor
ret
sarb
or
loopne
jl
adc
jbe
mov
push
cwtl
and
cltd
sub
dec
adc
mov
mov
fisubrs
hlt
push
jno
xor
rcrb
movsb
shlb
leave
mov
shl
xchg
or
adc
dec
test
jle
popa
pop
mov
xor
push
sar
daa
xchg
mov
subl
aas
mov
imul
in
mov
sub
jnp
lcall
stos
fsts
addr16
shl
inc
ja
repz
cmp
jae
cmpsl
or
xor
fwait
adc
cmc
daa
out
imul
stos
lret
mov
jbe
into
lods
mov
mov
pushl
pop
push
and
dec
imul
arpl
repnz
mov
mov
icebp
movl
dec
stos
adc
je
loop
popf
cmp
scas
ds
jl
sbb
js
adc
cltd
pop
inc
fimuls
dec
xchg
stc
mov
adc
mov
xchg
clc
cmp
movsl
and
scas
mov
cmpsb
xor
sti
mov
fadds
bound
push
xchg
repz
and
lret
repz
pop
scas
ss
hlt
cs
iret
inc
sbbl
cwtl
dec
add
clc
or
into
inc
jge
cwtl
xchg
vpunpckhqdq
mov
and
jl
push
mov
insl
or
cwtl
mov
xor
movsb
fwait
test
loope
cwtl
add
sub
pop
mov
dec
sub
xchg
xor
stos
rcrl
sbb
pop
dec
or
cmp
xchg
fisttpl
add
mov
adc
inc
sub
enter
mov
rcrl
adc
stc
outsl
and
sbb
fistl
push
idivb
or
out
mov
ret
and
int3
xor
movd
shlb
sbb
je
in
pop
sahf
and
push
stos
xor
idiv
mov
insb
push
mov
mov
xor
sti
push
xchg
sahf
cmpsb
cmp
pop
and
cmp
enter
aam
in
xchg
fmull
fidivl
clc
push
dec
in
sbb
adc
into
mov
fwait
sbb
test
inc
push
loopne
sahf
ljmp
add
xor
mov
adc
push
mov
push
ljmp
pop
or
incl
and
sbb
test
out
movb
popa
xor
testb
jae
pop
out
stos
lock
push
aas
dec
cltd
stos
push
mov
mov
pop
mov
pushf
outsb
push
lods
lea
shrl
or
in
pop
cmc
sub
icebp
testl
cs
into
xor
aaa
mov
out
cmp
pop
je
mov
adc
popa
sub
adc
inc
test
jle
sbb
add
aaa
int
sbb
dec
mov
mov
mov
in
arpl
adc
jae
cld
sbb
or
lcall
dec
fdiv
jbe
inc
movsb
imul
lcall
mov
fistpl
lcall
pop
mov
lods
roll
pop
pop
inc
xchg
xchg
jmp
dec
mov
and
and
test
mov
sub
jp
jnp
lds
scas
sbb
push
adc
scas
stos
jg
push
orb
fldcw
sbb
and
xchg
insl
loop
or
jae
mov
push
lret
adc
stos
mov
pop
les
cwtl
ja
rclb
js
xor
dec
mov
xchg
scas
out
sti
in
dec
jg,pt
sahf
popa
test
out
xchg
cmp
sbbb
cs
cli
cmp
push
add
mov
mov
movsl
pop
xor
int3
cmp
jne
aam
movsl
aas
pop
pop
push
xchg
push
and
xor
iret
add
jge
in
xor
stos
outsb
sbb
rcrl
sub
push
add
jecxz
test
inc
jp
pushl
or
sahf
stc
sub
or
jnp
mov
rcll
or
cmc
scas
jmp
or
gs
es
js
stos
pushf
shrb
mov
lock
add
inc
sarb
popl
mov
xchg
add
or
pop
ds
and
ja
cli
mov
imul
pop
js
adc
sarl
lcall
xchg
sub
sub
pop
jl
dec
in
fwait
mov
adc
stos
sub
aaa
push
or
lds
mov
pop
loop
in
lret
fwait
lret
pushl
jnp
push
fldl
addr16
leave
sbb
popaw
xor
mov
mov
pop
ficomps
add
scas
mov
cwtl
iret
std
dec
clc
mov
fstl
mov
mov
lods
adc
push
mov
jmp
hlt
push
sub
rcrl
sbb
sub
clc
test
mov
pop
cmp
inc
fiaddl
dec
es
scas
pop
jmp
mov
push
mov
push
push
xchg
jne
enter
ja
or
push
add
orl
xor
insb
cmpsl
int3
sbb
fwait
lret
popf
fcoms
popf
inc
addl
mov
cld
test
pop
insb
lock
inc
jns
push
iret
addl
lods
out
sbb
imul
push
cltd
xor
lds
sub
into
cmp
xchg
add
out
xchg
inc
rorl
ret
sahf
mov
and
bound
fnsave
cmp
lret
std
lret
and
and
mov
xor
shlb
aas
add
in
add
sbb
cli
icebp
pop
stos
scas
or
push
add
push
adc
or
popf
mov
pop
ljmp
data16
push
inc
fnstsw
ficomps
int3
sbb
shrl
loop
jno
rclb
icebp
sarl
psubd
in
fwait
and
insb
sbb
shl
xchg
mov
mov
in
test
mov
mov
or
xor
pop
mov
mov
shlb
outsl
arpl
inc
mov
fwait
xchg
or
add
stc
push
imul
adc
std
push
push
mov
dec
mov
jo
mul
jl
pop
xorl
add
in
je
fildll
sbb
fnsave
sbb
lahf
pop
rsqrtps
sub
and
adc
lahf
lods
adc
pop
test
xchg
xchg
ret
cwtl
sbb
xor
jne
xchg
sbb
mov
out
lcall
repnz
adc
aaa
pop
cmc
adcl
xor
jle
movsb
roll
leave
xchg
xor
dec
inc
lret
mov
fmul
mov
add
jecxz
mov
mov
or
dec
ss
dec
clc
je
xchg
out
sub
adc
pop
iret
out
mov
cltd
lcall
cmpsl
sbb
xor
roll
icebp
es
add
mov
jl
adc
and
mov
into
xor
and
sbb
jns
lahf
mov
fwait
mov
shl
sub
cs
ljmp
adc
or
cmc
xor
mov
cltd
sub
push
leave
loope
ret
lods
fisubrl
xor
test
sarb
test
inc
dec
jbe
and
jmp
mov
test
roll
push
mov
jne
stos
push
loope
inc
jno
or
adc
stc
add
jne
adc
int3
ficompl
mov
pop
push
gs
dec
popa
or
push
pop
pop
mov
mov
dec
sbb
adc
sbb
movl
les
into
in
jne
push
push
jbe
jno
dec
cmp
sub
stc
dec
mov
hlt
and
and
push
sub
in
inc
jns
incl
fistl
popa
mov
mov
iret
xor
ja
data16
ss
add
sti
and
add
fbstp
iret
push
or
pop
loop
lods
rcll
test
out
enter
lret
or
arpl
out
aam
jbe
outsb
ficoms
jno
fbstp
arpl
pushf
jbe
mov
push
cmpps
push
icebp
mov
aam
out
cmp
xor
inc
mov
sub
add
adc
or
push
mov
xchg
jg
fiaddl
faddl
fwait
call
xor
jne
xor
sbb
and
shlb
pop
mov
add
or
dec
sub
inc
out
sub
xchg
dec
mov
cmp
in
fwait
or
jae
push
jnp
sub
in
push
inc
shl
aaa
sbb
mov
shrl
gs
jns
call
out
insl
pop
das
mov
push
add
out
fcompl
mov
cli
std
ficoml
loopne
mov
movb
sub
pushf
dec
cmp
xor
pop
test
dec
push
cmpsl
jne
out
hlt
mov
ret
aam
mov
iret
sbb
dec
jle
add
pop
scas
xchg
push
xchg
movsb
dec
inc
das
aam
add
cmc
stos
lock
sub
fisubl
xchg
loop
mov
xor
push
in
pop
xchg
mov
stos
addr16
jmp
test
sub
cmp
nop
adc
repnz
aam
stc
clc
inc
jg
fcoms
sbb
or
aas
cmp
cltd
cwtl
mov
xchg
icebp
popa
sub
fldcw
stos
cmp
jl
out
lock
clc
inc
cmp
or
sub
jg,pn
jb
mov
call
pop
or
mov
cmc
shld
cs
inc
xchg
sbb
mov
les
lds
sub
adcb
test
mov
rorl
out
repz
push
xor
sahf
cmpsl
loope
dec
add
sar
sahf
xor
push
pop
pop
push
cmpl
addr16
push
sbb
mov
aas
iret
xchg
or
cmp
scas
add
aaa
sti
repz
and
out
and
or
in
out
dec
aas
inc
sbb
xor
cmp
push
add
xor
sbb
ds
into
les
pusha
mov
inc
and
lahf
mov
ret
fst
pusha
aas
insl
aaa
loope
adc
dec
inc
psrlw
aam
stos
mov
subl
mov
cmp
push
cmp
cmp
cmp
fadd
out
jne
or
mov
fadds
pusha
shlb
fs
push
aad
inc
mov
inc
adc
fstps
sub
test
mov
pop
jns
pop
mov
jno
sbb
jo
rol
fisubs
pusha
and
lcall
adc
movsl
inc
push
jnp
movsl
ret
fcomi
popf
das
shrb
loopne
fsubs
inc
and
cli
sbb
and
add
adc
cmp
xchg
cli
sbb
push
in
xchg
push
pusha
dec
call
add
pcmpgtb
sub
dec
lea
scas
out
shlb
in
daa
roll
xor
enter
ss
mov
rorl
arpl
pop
mov
mov
mov
push
test
fdivs
es
pop
add
cmpsb
inc
push
aaa
mov
xor
call
add
adc
push
repz
xchg
test
cmp
lds
push
lahf
xor
pop
movsb
movsb
cmp
adc
push
rolb
pop
leave
cmp
mov
pop
push
sbb
cli
jae
icebp
and
negb
faddl
jb
mov
push
mul
push
or
test
xchg
neg
lahf
nop
inc
mov
sahf
adc
inc
stc
or
in
xor
push
lret
cmp
pop
cld
cmpb
adc
stos
mov
jb
ss
daa
jp
push
sbb
outsl
idivb
lods
sbb
dec
imul
aaa
inc
mov
cld
es
sub
add
cmp
and
imul
mov
fnstsw
mov
cmp
sbbl
cmc
in
push
jnp
push
sub
stc
cmp
nop
pop
mov
sub
fcoms
pop
xchg
out
shl
lods
cmp
shl
nop
or
jns
sub
cmp
mov
mov
xor
shl
jge
jp
fcmovb
dec
lods
or
lcall
add
xor
lods
aas
bound
ss
arpl
dec
xorb
jbe
push
inc
xor
jbe
xor
sub
dec
mov
mov
mov
mov
popf
jp
lea
xor
dec
bound
dec
sbb
adc
xlat
aam
or
jne
xchg
mov
xchg
imul
nop
jno
adc
int
and
int
mov
out
lods
loopne
push
inc
xchg
cmp
inc
in
push
shrb
ret
push
xchg
cld
mov
cmp
xchg
inc
jno
stos
inc
push
xor
sti
inc
pop
add
dec
mov
cmp
mov
adc
add
lret
push
mov
lds
sub
jbe
pop
push
add
jge
out
rolb
push
mov
pop
inc
lret
or
stos
mov
dec
sub
es
adc
je
xor
xchg
in
in
push
xor
add
pop
mov
stos
loop
xor
push
nop
sub
mov
adc
xchg
test
clc
mov
add
mov
repnz
int
in
push
jecxz
pop
test
xor
lret
movsb
jnp
movsl
and
imul
xor
pop
rolb
add
jle
xor
fldz
dec
mov
jg
rcrl
jg
aad
pop
xor
call
out
xchg
cltd
dec
nop
stos
and
jnp
shll
movsl
popa
pop
dec
push
add
jns
inc
push
cli
mov
scas
shld
or
sub
jl
ret
lock
push
jnp
and
arpl
insl
or
nop
scas
push
pop
in
push
push
in
in
mov
test
insl
adc
mov
pop
and
sub
js
sub
js
hlt
mov
loop
dec
arpl
fnstcw
push
fucomp
test
ljmp
push
dec
es
inc
xor
add
loop
ficompl
loope
mov
sub
popf
mov
add
dec
sahf
out
jbe
mov
jmp
std
mov
push
and
xchg
out
mov
mov
addb
or
sbb
mov
jb
aad
idivl
inc
mov
cltd
dec
enter
mov
or
dec
jmp
loop
dec
ficoms
or
pop
adc
push
fnsave
sub
outsb
inc
jae
int3
xchg
lcall
mov
sub
push
and
push
in
inc
sbb
mov
jns
movsl
cmp
jne
mov
jge
cmpsb
loop
jo
jbe
push
mov
xor
aas
mov
inc
xor
mov
mov
mov
into
movsl
into
inc
into
xchg
push
repz
and
outsb
out
loope
pop
lock
insl
cwtl
pop
in
loopne
fistpll
mov
test
mov
xchg
aad
xor
pushf
decb
xor
and
adc
lret
scas
push
hlt
sbb
fisubrl
fldl
mov
std
jno
popf
cmpsb
fidivrl
mov
lea
push
dec
fnstsw
movsl
rclb
jne
lret
xchg
xchg
inc
shrb
push
aad
inc
lock
nop
inc
decb
adc
dec
mov
insb
pop
std
mov
in
xor
out
shl
in
pusha
fiaddl
and
xchg
mov
fwait
mov
sbb
sbb
aam
fstl
ljmp
adc
stos
jns
jl
mov
lock
imul
shrb
cmc
sbb
pop
ficoms
mov
sbbb
fs
pop
ret
sti
jge
dec
cltd
ds
fldt
jnp
mov
add
mov
xlat
sbb
or
pusha
sbb
leave
and
mov
jbe
mov
pop
add
ret
mov
mov
inc
and
int
jns
leave
sbb
fwait
mov
push
mov
mov
mov
lods
mov
int3
shrb
ficoms
in
xor
jle
leave
dec
call
push
fsubs
push
and
nop
fldenv
pop
repnz
aas
cld
cmp
insl
add
movsb
xlat
mov
loop
xchg
pop
pop
or
out
xor
inc
icebp
mov
rcll
push
mov
add
mov
sbb
aam
cmpl
enter
mov
imul
fs
inc
aas
popf
sbb
negb
jo
pop
add
es
jge
sub
mov
fwait
repnz
nop
mov
pushf
inc
mov
jbe
cli
sahf
dec
mov
or
lcall
pop
inc
sbb
mov
stos
dec
stc
aaa
ret
stc
inc
lock
xchg
xorl
daa
aas
pop
mov
mov
jmp
divb
mov
jnp
stos
jle
inc
jae
and
and
sbb
and
cwtl
std
adc
push
push
adc
jo
jl
out
js
ffreep
jae
adc
movsl
push
daa
dec
leave
and
jbe
push
adc
jnp
fst
gs
lods
out
das
add
nop
idivl
enter
mov
sub
sti
dec
xchg
mov
sub
movsb
xor
das
push
xchg
adc
outsb
mov
push
adc
sar
add
xor
out
or
mov
shlb
loopne
fwait
push
rcrb
mov
push
push
mov
inc
aam
fnstenv
cltd
dec
xchg
pop
mov
out
jmp
test
ss
mov
xor
testb
mulb
inc
pop
dec
fcoms
cmp
repz
movsl
imul
dec
int3
bound
push
ret
inc
imul
cmp
imul
adc
mov
arpl
int3
cmp
test
call
or
jnp
sbb
xchg
test
add
sahf
movsb
push
mov
lsl
int3
xchg
out
and
stos
lds
jb
cmp
mov
adc
movsb
dec
push
xchg
dec
mov
fadd
jg
fists
inc
fwait
jl
lahf
and
mov
add
sub
mov
lock
add
pop
and
in
gs
mov
add
dec
fisubl
xchg
ss
push
popa
ss
mov
jbe
test
jg
mov
and
mov
repz
imulb
and
dec
and
push
lods
lods
push
or
mov
testl
js
dec
fs
cmp
subl
cld
pop
cmp
out
out
adc
mov
stc
sbbl
cmp
stos
jo
or
push
rolb
cmp
pop
cld
xchg
sbb
mov
and
push
mov
sub
adc
inc
out
push
subb
mov
out
mov
push
cmp
js
sub
lock
xchg
sbb
push
jp
rorl
xchg
lock
xor
xor
mov
xchg
push
push
pop
movsb
pop
sbb
xchg
pop
jle
cmpsl
or
pop
rolb
jns
in
add
cmc
xchg
loopne
addb
loope
push
inc
cmp
mov
cltd
jg
test
or
pop
xchg
and
xor
or
inc
int
jae
movl
cmp
mov
popa
fsubrs
decb
xor
arpl
adc
jmp
addr16
mov
push
sti
pop
mov
push
les
inc
jno
dec
jl
shl
mov
cmp
popf
fistl
fucomi
sarb
inc
mov
fldt
pusha
xor
das
ret
cmc
les
and
js
shll
or
dec
mov
inc
mov
xchg
aad
jb
lret
inc
mov
jae
arpl
jne
mov
push
fidivl
xor
call
lret
data16
or
add
out
sbbl
out
out
lret
mov
in
popa
ljmp
in
push
sbb
jle
cmpsl
jecxz
ficoml
sbb
fwait
mov
out
rolb
fst
fidivrs
mov
imul
and
pop
jne
cmp
pushf
les
or
mov
push
test
push
push
push
push
aas
jl
xor
sbb
loop
sti
dec
shll
lret
mov
adc
jns
movsl
pop
inc
addr16
pop
inc
xchg
or
stos
xor
sbb
das
sahf
xchg
loopne
mov
push
mov
lods
mov
movsb
test
xlat
xorb
pop
insl
sub
int
push
mov
pop
in
int3
and
cmpsb
fdivrl
and
xor
xchg
jbe
inc
das
mov
push
imul
and
test
inc
test
nop
enter
mov
sbb
jg
mov
test
mov
into
cmp
fwait
inc
xor
fdiv
icebp
fisubrs
rorl
add
dec
pop
cltd
mov
aas
jb
jb
sbb
js
fmull
int
es
and
jmp
fdivr
mov
cmpsl
enter
pop
fsts
aas
dec
imulb
cmp
iret
push
jnp
out
xor
mov
xchg
cmp
arpl
inc
inc
stos
mov
dec
and
sub
mov
jmp
mov
mov
xor
adc
lock
ja
rclb
push
je
std
je
aas
jae
sub
les
stos
enter
fldl
test
sub
cmp
loope
push
mulb
jae
cltd
clc
in
adc
cmp
or
cmpsl
adc
scas
jge
jbe
scas
insl
out
enter
ljmp
inc
sub
cmp
dec
addl
daa
jns
dec
mov
jecxz
mov
inc
mov
jg
adc
pop
dec
mov
inc
xor
iret
push
xchg
pop
aas
or
mov
lods
sarl
add
jns
xor
sub
sbb
enter
ljmp
sub
out
mov
sbb
push
cwtl
xchg
popf
sub
mov
addb
lahf
cld
add
mov
mov
mov
inc
mov
jnp
and
shrl
insl
dec
cmp
and
pop
movsl
mull
pop
aam
xchg
mov
loop,pt
outsl
lock
mov
dec
jecxz
push
mov
lahf
xchg
and
adc
mov
mov
clc
inc
dec
hlt
and
outsl
fimull
jmp
sub
and
ret
gs
cmp
rorl
jg
sti
addb
pop
jnp
shrb
mov
mov
enter
jne
xor
mov
fmul
testb
fsubrp
adc
pop
clc
cltd
aad
inc
add
int
loope
lahf
pop
lds
lods
arpl
aam
or
loope
or
adc
in
subb
inc
mov
scas
sub
add
add
push
sub
outsl
mov
mov
out
imul
incb
inc
fcompl
js
pop
xchg
push
xchg
fsts
mov
sarl
and
stos
popa
das
sub
lods
cli
xor
sti
push
push
nop
loop
mulb
pop
stc
scas
imul
rcrl
pop
dec
mov
sbb
or
mov
jecxz
in
adc
fnstcw
in
enter
and
nop
dec
cmp
adc
cmp
push
lods
pop
push
pop
add
jl
les
push
cmp
jmp
mov
fwait
sbbb
push
mov
mov
repnz
rorb
sbb
mov
mov
xchg
int
jmp
pop
pop
push
aaa
and
cld
xchg
push
push
test
aad
mov
xchg
push
add
jo
pusha
ss
adc
test
push
ret
sti
fldl
xchg
mov
mov
clc
xlat
test
mov
lods
cmp
pop
into
push
mov
dec
clc
mov
pop
mov
mov
sbbb
or
gs
inc
jno
aas
cmp
shrb
data16
cmp
hlt
gs
xchg
cld
in
mov
push
sub
je
negb
js
cmp
jae
cmc
into
cmp
inc
xor
cmpsl
ss
enter
cmp
xor
pop
push
or
mov
gs
mov
sub
nop
lock
icebp
in
xor
cmp
dec
mov
jb
sbb
roll
subb
mov
bound
push
les
stos
and
lahf
xchg
out
std
cmpsl
pop
sahf
mov
fmul
in
movsb
inc
adc
mov
in
into
jnp
jge
fmuls
adc
sub
push
fstl
cli
xor
pop
dec
pop
repnz
insb
pop
push
je
jne
dec
out
data16
ds
mov
insb
mov
mov
repz
sbb
sub
sbbl
aaa
jg
stc
and
or
cmpsb
pusha
add
test
add
mov
inc
or
add
imul
mov
mov
enter
cwtl
sbb
cli
popf
ljmp
mov
xor
daa
rorb
cmp
outsl
sbb
pop
lods
ljmp
add
jecxz
add
adc
mov
insl
data16
cmp
es
add
hlt
or
ret
jmp
pop
arpl
lock
repz
aaa
pop
lea
je
lcall
in
sub
mov
and
dec
xor
inc
out
popf
mov
xchg
xlat
outsb
or
andb
push
or
jne
push
jno
ljmp
push
xchg
into
xchg
xchg
into
out
inc
aaa
fnsave
inc
shr
mov
dec
push
addr16
jno
xor
hlt
leave
sahf
pop
cld
mov
pop
nop
push
stc
dec
imul
int
xchg
mov
clc
jmp
or
xchg
adc
inc
pop
dec
or
icebp
rcll
xor
iret
mov
sbb
cwtl
nop
push
jbe
sbb
push
mov
imul
or
push
sbb
daa
xor
or
or
divb
fldcw
out
pushl
fiaddl
sbbl
add
xchg
sub
bound
sahf
jnp
pop
std
fs
ja
jo
or
lds
ja
jecxz
out
out
jo
xor
shlb
push
sarb
sbb
outsl
iret
sahf
pop
loopne
ljmp
arpl
cli
sub
cmpl
inc
and
inc
shlb
mov
jnp
lahf
dec
fsubs
int3
xchg
cmp
push
orb
mov
dec
scas
jnp
shl
dec
and
js
sarl
insb
mov
jle
xor
xchg
push
les
outsl
push
lcall
cmp
push
call
fs
add
xchg
std
pop
aad
jns
test
sub
cmp
ja
push
int3
mov
bnd
fscale
inc
es
fmul
dec
fstl
pop
xchg
mov
mov
sbb
adc
int
ds
mov
mov
sub
pushf
aam
sub
mov
pop
push
pop
lahf
loope
jbe
adc
mov
bound
push
mov
pop
pusha
call
sbbl
xchg
push
lock
shlb
rolb
roll
iret
pop
sub
pop
inc
mov
mov
cmp
insl
inc
mov
js
xchg
xchg
xchg
add
push
xchg
xchg
sbb
inc
gs
dec
inc
sub
insl
inc
xlat
xchg
clc
fistl
into
imul
jb
pop
mov
cmp
cli
jns
xor
mov
fisttps
jo
mov
pop
or
inc
push
pop
loop
xchg
test
and
jge
mov
inc
dec
pop
pop
dec
or
mov
jmp
inc
test
pop
jns
in
fcmovnbe
xor
lahf
jp
shr
je
push
xor
addl
mulb
shll
add
push
imul
mov
mov
stc
repz
insb
stos
pop
cmp
je
rcl
or
roll
rcrb
add
mov
dec
addr16
inc
sbb
sbb
xchg
leave
imul
fsubl
into
je
or
xchg
pop
fcoms
lret
xor
inc
dec
popf
cmp
jb
mov
in
push
xchg
repnz
sbb
mov
or
xchg
xor
mov
scas
test
dec
fistl
mov
inc
mov
clc
mov
mov
mov
sbb
in
dec
jno
inc
enter
sbb
adc
push
add
inc
rcll
ficoml
pop
cmp
fimull
inc
std
mov
and
sbb
add
cmp
loopne
pop
xchg
add
jmp
sti
loop
sbb
dec
aam
ja
ficompl
shll
dec
jp
hlt
add
dec
lahf
testb
fildll
ret
or
xor
sbb
shl
sub
dec
or
test
mov
jne
enter
shll
sbb
cwtl
mov
and
mov
push
jmp
cmpl
gs
or
arpl
mov
inc
pop
add
call
jl
pop
push
loope
adc
out
adc
or
jo
fldl
sbb
push
shrb
and
mov
inc
sbb
loop
mov
inc
mov
nop
push
mov
test
cs
ficoml
add
mov
aad
jo
loop
xchg
fcompl
xlat
sub
push
lahf
scas
or
or
fldenv
adcb
mov
pushf
cmp
inc
push
insl
loop
push
xchg
jle
mov
mov
xchg
xor
push
fwait
xlat
mov
rdrand
push
icebp
test
fnstenv
dec
stos
or
mov
xor
cmp
push
jg
xchg
dec
or
mov
aam
cmpsl
lock
into
rcr
repz
loope
xchg
out
inc
nop
repnz
jno
add
dec
outsl
insb
sub
cmp
test
jl
and
pusha
hlt
sub
out
xor
int3
sub
sbb
xchg
mov
lods
xchg
jmp
stos
repz
js
bound
shlb
imul
call
jmp
lret
adc
ljmp
mov
popa
pusha
sbb
xor
mov
sbb
mov
mov
mov
push
push
aas
imull
rol
test
das
addl
adc
adc
and
xor
jns
lock
hlt
cwtl
andb
cld
shl
les
add
mov
lods
sub
mov
and
popf
sbb
lds
lahf
xchg
jle
adc
loopne
movsb
fstpl
dec
mov
dec
pop
mov
ret
dec
es
jnp
and
daa
mov
stc
ss
in
inc
and
loop
test
insl
loope
int3
insb
xor
lahf
jp
movsb
cmp
mov
ja
push
sub
jmp
pusha
sub
out
pop
jp
ljmp
sbb
dec
inc
jecxz
dec
fs
lret
testl
inc
pop
shl
add
and
add
sti
divl
out
shll
jmp
inc
sbb
lea
sub
mov
imul
fcmove
push
fstl
in
push
add
and
mov
test
push
dec
fiaddl
loop
jmp
cmp
push
cmc
mov
xor
push
rcrb
lret
ja
int
jns
rol
pop
shlb
jae
movsl
cmp
in
movsl
ret
inc
lahf
das
call
jb
fwait
inc
ret
inc
dec
mov
loope
push
mov
xchg
adc
sbb
aas
lcall
push
lds
cmc
les
xor
xorl
xor
jb
mov
mov
lods
popf
aaa
lret
rclb
pop
lret
scas
ror
lahf
sbb
push
in
jmp
jmp
inc
aaa
mov
xchg
mov
push
jecxz
cmpsb
sub
lahf
ljmp
jns
dec
sub
inc
jl
int
jle
stc
iret
jge
xor
in
adc
dec
rorl
push
fldenv
sbb
das
dec
pushf
scas
jb
and
dec
pop
pop
add
cld
dec
addr16
popf
push
pushl
test
adc
ret
jne
jae
ficoml
rcrl
repnz
in
sub
std
jne
psrad
mov
movsb
fsubrs
xchg
mov
into
stos
xchg
je
xchg
cwtl
dec
mov
push
pop
call
scas
hlt
xchg
fwait
dec
jno
cld
pusha
push
shrl
scas
mov
dec
cli
int
outsl
out
sahf
pop
into
and
int3
and
jge
jle
mov
clc
sbb
add
shll
xor
mov
shl
mov
push
pop
push
adc
inc
testb
dec
push
cmpb
pushf
xor
mov
ficompl
inc
je
pop
jb
jne
jg,pt
fists
cmc
int
add
mov
test
xchg
lds
mov
add
bound
add
cs
add
int
fldcw
cmc
or
pop
dec
pop
subb
adc
aaa
pusha
fwait
into
insl
xlat
shll
ss
or
pop
jmp
nop
in
dec
and
mov
push
lahf
mov
test
or
push
int
out
insl
cmpsl
inc
fcmovu
loope
lods
push
mov
jge
sub
or
imul
xchg
xor
pop
shl
push
pushf
jae
or
adc
inc
mov
shl
inc
std
outsb
mov
cmp
insb
dec
jecxz
push
and
rclb
lods
cmp
stos
icebp
in
or
xor
imul
cld
aad
xor
jmp
jmp
xchg
dec
sahf
cltd
ror
and
cmpsl
push
pop
pop
xor
call
inc
ret
or
outsb
cmp
dec
dec
test
dec
lret
popf
inc
dec
cmp
lock
lds
imul
xor
aad
jge
inc
arpl
cmp
mov
inc
sbb
sbb
sub
in
lock
popa
inc
lds
cmp
cmp
lds
sti
mov
inc
mov
data16
xchg
pop
pop
sub
xor
in
sub
xchg
ficompl
add
xor
gs
dec
adc
sbb
dec
pop
xchg
das
iret
mov
push
xlat
scas
cwtl
jmp
in
xor
fiadds
test
push
fwait
sub
push
imul
dec
fwait
mov
mov
aad
outsb
orl
cld
push
dec
cli
dec
jo
lret
sub
movsb
jmp
in
ss
in
push
inc
and
fcomps
mov
mov
daa
lahf
and
mov
xchg
das
fldl
inc
or
or
push
or
jp
pushf
xor
into
roll
push
dec
or
push
insb
repnz
cs
mov
adcb
sar
mov
dec
inc
jbe
push
mov
adc
inc
push
insl
scas
rcll
aas
pop
sub
mov
cmp
test
sub
add
xor
pop
repz
pop
xor
out
sbb
movsb
xor
loop
inc
fwait
lret
mov
adc
into
pop
dec
mov
mov
sub
xor
adc
sti
arpl
and
pop
xor
stc
cmp
cmpb
or
xor
imul
cmpsb
pop
test
cmpsl
or
in
cmpsb
fisubrs
mov
pop
xor
xor
mov
ffreep
aad
lea
xchg
dec
push
xchg
daa
lcall
loop
xchg
scas
or
js
xchg
jp
cmp
xchg
loop
movsb
jns
sub
inc
dec
dec
xchg
or
adc
pop
negb
pop
xchg
pop
int3
jmp
shlb
lahf
jno
push
inc
lods
mov
push
xchg
xor
jmp
xchg
mov
or
push
std
clc
fucomp
shl
out
push
mov
xor
push
ljmp
and
fsubrl
aad
dec
push
out
xchg
stos
fsubrs
pusha
in
jmp
jo
mov
add
outsl
pop
mov
inc
xchg
loopne
xor
xchg
outsl
and
sbb
cmpsl
fstl
xchg
subl
cmp
repz
push
cs
xchg
or
outsb
inc
dec
daa
outsl
ror
push
pop
mov
mov
mov
outsb
les
adc
ret
or
addr16
pop
inc
pop
jo
xchg
repnz
jp
push
testb
pushw
mov
pushf
enter
sbb
xchg
into
push
fisttpll
xchg
repz
dec
sub
push
shl
jbe
loopne
scas
mov
iret
out
roll
daa
inc
xor
fdivrs
lock
sbb
mov
rorb
xchg
push
adc
push
int3
mov
scas
enter
pop
mov
ljmp
test
call
aam
jne
adc
xchg
cmp
mov
negb
xor
push
clc
or
ret
ljmp
cmpsb
xchg
out
add
icebp
cmp
insl
repnz
sub
insl
aas
sub
mov
aad
jae
lods
nop
mov
inc
mov
sti
push
pop
sarl
sub
addr16
lcall
movsl
pop
and
les
sub
xchg
pop
jmp
sahf
in
push
xchg
sub
mov
sub
mov
pop
cmp
fs
clc
xlat
cli
into
stos
lahf
mov
push
repz
jmp
out
loope
cmpb
in
insl
xchg
popf
into
add
nop
clc
or
insb
adc
mov
pop
ss
aad
inc
jmp
xlat
mov
stos
sbb
cmc
pop
enter
dec
fs
and
and
xchg
and
clc
popa
pop
aas
mov
inc
mov
sbb
push
lock
mov
dec
addr16
sub
xchg
jnp
ja
push
push
and
daa
cs
add
adc
mov
lods
mov
cmpsl
enter
ja
ror
fneni(8087
movsb
call
lods
inc
adc
dec
lea
push
sbb
xor
adc
fdivrs
in
adc
scas
xor
addr16
xchg
popa
subl
test
dec
dec
pop
ret
adc
addr16
scas
jb
xchg
bound
inc
push
bound
fisubs
xor
outsb
arpl
shlb
cmp
dec
sar
xor
or
insb
sbb
xchg
jl
pop
iret
jp
xor
adc
repnz
jno
dec
dec
cmp
repz
dec
outsl
mov
jmp
push
mov
mov
popa
lret
lahf
mov
fucomp
cmp
inc
clc
mov
lea
push
aaa
inc
ljmp
ret
sub
fstps
xchg
push
sbb
mov
push
jmp
mov
push
aaa
push
mov
push
je
daa
popa
dec
lahf
xor
imul
and
push
js
or
jo
adc
xchg
jle
mov
xlat
or
inc
xchg
ss
push
imul
or
add
orb
shl
iret
mov
jnp
shl
inc
bound
or
int
xchg
das
loope
dec
mov
daa
or
outsl
mov
loopne
movsb
ret
out
adc
stc
bound
sbb
daa
mov
xor
out
movsb
ret
pop
or
lcall
enter
dec
sbb
aas
pop
pushf
mov
add
in
fwait
xchg
pop
add
cmp
xor
rcr
mov
leave
inc
xchg
divb
adc
mov
xchg
mov
cmp
jnp
iret
add
mov
pop
sub
pop
lea
sbb
ljmp
sub
cmp
pop
mov
aaa
and
inc
popf
pop
out
leave
pop
mov
and
mov
scas
cmp
push
out
jmp
stos
adc
int
test
jns
lds
adc
lods
aaa
add
pop
ljmp
jecxz
sbb
jg
mov
pop
stc
and
leave
mov
or
and
xor
sbb
mov
mov
stos
jg
loopne
and
out
fdivr
test
and
cmp
sub
sub
out
pop
push
xchg
mov
inc
pop
xchg
lret
sbb
and
insl
stc
dec
test
jb
inc
sbb
ja
mov
hlt
fisttpl
popf
xchg
mov
bound
dec
or
inc
fidivs
scas
mov
mov
adcl
popa
aam
mov
frstor
es
sbb
test
xchg
mov
stc
popf
cmp
xchg
rorl
add
fimuls
faddp
popa
add
jp
fwait
aas
mov
mov
out
jae
bound
ljmp
inc
push
stos
mov
cmc
repz
mov
mov
pop
mov
adc
jbe
int
pushf
in
out
std
sbb
mov
and
mov
lea
int
mov
cmp
jne
pop
mov
xchg
pop
test
mov
loop
jns
pop
xchg
dec
xchg
adc
jmp
or
cs
ret
and
xchg
mov
insb
xchg
sub
adc
jnp
fnstcw
and
mov
sbb
sar
cmp
hlt
sub
pushf
push
icebp
xlat
jmp
aas
mov
jl
push
adc
sti
push
das
adc
fstpt
in
pop
pop
pop
flds
xchg
nop
leave
loopne
pop
xchg
test
shrb
jmp
lahf
jbe
mov
xchg
aam
pop
outsl
adc
repz
add
lahf
lds
fisubs
fsubl
subb
sub
jge
mov
ja
jl
pop
jle
inc
sub
jb,pt
aam
cltd
pop
adcb
xchg
push
jns
stos
scas
lahf
imul
sub
push
fnsetpm(287
push
mov
dec
loop
dec
jno
dec
push
pop
jo
mov
jnp
shrb
push
push
dec
add
popa
mov
lods
mov
out
in
mov
adc
sahf
cmp
adcl
inc
das
add
mov
push
sub
fisttpll
pop
pop
mov
cmp
and
xchg
out
sub
call
dec
jl
stos
arpl
pop
sub
push
je
fistpll
push
jmp
in
sbb
lds
call
notb
and
leave
adc
sub
cld
xor
add
loopne
and
fstl
sub
xor
add
or
mov
jo
in
pop
jmp
mov
fwait
push
pop
push
call
out
nop
in
push
xchg
sbb
mov
and
int3
inc
push
mov
bound
fwait
movsl
cmp
pop
mov
aam
xchg
push
stc
icebp
popa
les
outsl
jmp
or
in
push
or
or
daa
popa
cmp
imul
sbb
mov
adcl
xchg
mov
iret
sbb
notb
lea
mov
lock
cwtl
inc
and
pop
sbb
or
mov
push
aad
add
and
dec
cmc
stos
xchg
ja
pop
dec
inc
popf
sbb
pop
lock
sbb
fisttpl
daa
inc
fisubrl
fistl
out
push
cmc
shlb
cmp
leave
cmp
ljmp
xchg
out
jmp
lea
or
shr
insb
pushw
jl
lea
push
mov
lcall
ret
cmp
mov
int
and
push
pop
in
adc
lretw
push
adc
cmp
mov
pusha
cltd
add
gs
lcall
lods
dec
addb
push
test
mov
sti
or
stc
and
fistl
push
xchg
xchg
popw
leave
pop
or
dec
inc
push
sbb
gs
adc
push
push
jge
ds
or
mov
mov
out
sti
daa
jne
mov
test
push
jb
shr
jbe
mov
sbb
pop
cmp
jb
xchg
adc
dec
shrb
repnz
mov
cmp
inc
movsb
in
dec
sbb
lods
pop
mov
xor
jno
mov
xor
pop
sbb
enter
and
push
and
lcall
or
mov
loopne
jl
cmc
sbb
mov
pop
adc
stc
mov
inc
push
test
jp
data16
xor
stos
dec
push
sub
bound
cmp
fcomps
aam
es
and
jecxz
aad
sti
xor
lcall
dec
mov
jo
cli
sarl
push
or
mov
inc
sub
mov
pop
loop
and
mov
fstpt
sahf
sbb
sub
into
sbb
popa
push
cmpsl
push
ret
push
in
out
scas
leave
cmp
xor
shlb
fpatan
mov
cmc
mov
inc
and
mov
mov
ret
cmp
xor
arpl
imul
test
or
mov
mov
iret
bound
cmp
jo
pop
in
enter
ja
dec
ljmp
push
stos
and
jns
and
xor
insl
sbbb
xchg
and
xchg
jne
cmp
shll
fistpl
daa
cmp
push
aaa
xor
jb
jne
js
adc
aas
pop
ja
fldcw
mov
enter
es
sbb
sbb
push
xchg
cmpl
or
jge
sti
pop
inc
dec
mov
imul
fwait
ret
pop
fbstp
cwtl
mov
imul
sbb
cmpsb
jae
sahf
push
or
adc
cli
add
lcall
popf
push
sbb
mov
shlb
daa
gs
mov
dec
sbb
ret
cmp
pop
fildl
in
mov
mov
inc
out
mov
out
lock
xor
arpl
aam
jmp
jge
pop
ret
loop
jb,pt
bound
aaa
out
dec
jle
jns
sbb
mov
loopne
push
add
dec
bound
jl
iret
inc
insl
inc
xorl
push
test
cmpb
insb
xchg
stos
or
add
pop
movl
jle
fs
into
pop
xor
jmp
or
mov
hlt
lds
ficoml
data16
fadds
or
dec
nop
jg
int
push
ret
xlat
adc
lock
or
add
mov
and
lds
aas
cmp
jg
fildl
aad
in
scas
cmp
in
fdivl
xorb
movsb
cltd
gs
scas
sti
add
push
les
xchg
pop
es
jbe
loopne
push
pop
mov
inc
sub
cwtl
rcr
adc
shrb
imul
cmp
hlt
imulb
fistps
sbb
mov
push
xchg
sbb
loope
add
and
les
jmp
sbb
aaa
push
push
cmpsb
pop
mov
cmp
dec
sarl
ffreep
cltd
popa
scas
add
das
pusha
pop
cmp
roll
fldt
inc
xchg
adc
or
ds
or
xorb
loopne
and
enter
rcrl
cmpsb
push
jb
pop
mov
jb
fistl
out
fcmovnu
dec
loope
cmc
push
fcoml
cltd
arpl
inc
jecxz
in
lds
std
mov
addr16
and
pop
cmp
lret
subb
mov
adc
add
cmpb
mov
adc
bound
test
jnp
pusha
out
cmp
iret
jb
insb
push
lods
jle
bound
cmpsb
iret
xor
pushf
push
lret
and
dec
pushf
cmp
sub
fcmove
sub
rcll
mov
or
pop
cmpsl
mov
mov
mov
sub
stc
inc
dec
in
pop
ret
pop
push
das
pop
rcr
xchg
shrb
test
push
adc
dec
pushf
hlt
ljmp
fnstenv
ljmp
call
repz
imul
cmpsl
cs
xchg
dec
cmp
shlb
subb
lea
dec
pusha
sbb
inc
daa
repz
sbb
sub
pop
pop
test
cmpsb
mov
inc
leave
sub
es
pop
pop
sbb
sbb
xchg
adc
push
cmp
leave
adc
ja
pop
sub
xor
mov
scas
add
mov
movsb
loope
xchg
jne
adc
inc
jbe
insl
mov
inc
fdivrl
dec
pushf
shll
xchg
cmp
sbb
mov
leave
ds
jmp
and
mov
sbb
ds
pop
imul
insl
loope
stos
or
push
mov
jg
and
xchg
push
dec
int
add
mov
imul
push
add
mov
cmp
push
jle
mov
int3
out
jno
mov
gs
cmp
loop
cwtl
mov
insl
ja
in
sub
mov
mov
pop
fadds
jg
jle,pn
test
pop
je
data16
or
ret
repnz
dec
xchg
test
lcall
enter
aam
bound
out
push
jle
mov
lock
scas
std
cmp
aaa
lcall
push
cmp
mov
pop
cmp
inc
xchg
or
test
push
inc
or
stos
insw
push
sub
pop
inc
xchg
xor
cmp
xor
movsl
mull
fidivrs
clc
adc
sub
adc
mov
cmp
xor
test
mov
push
arpl
xchg
out
int3
loope
call
mov
aaa
xor
enter
xor
cmp
xor
aaa
mov
movsb
shlb
jo
aad
test
ret
mov
dec
add
fstpt
leave
mov
lods
leave
movsl
adc
sbb
in
jge
mov
std
cli
mov
mov
insl
lea
sub
xchg
imul
into
add
push
inc
int
mov
mov
fwait
mov
xor
xchg
fwait
cmp
push
hlt
call
cmp
repnz
addr16
inc
dec
jbe
std
dec
and
test
cmp
test
sub
daa
or
imul
mov
pop
pusha
js
out
mov
mov
xor
inc
dec
mov
jecxz
in
fnsave
lahf
ret
in
lahf
pusha
lahf
gs
inc
adc
xchg
shlb
or
test
lock
sbb
xchg
insb
fisttpll
les
push
enter
pop
test
inc
push
enter
ljmp
xor
je
shlb
push
lods
cs
outsb
pop
cwtl
loopne
clc
outsb
jp
ss
fbstp
and
das
inc
aad
pop
and
cmpsb
mov
mov
movsl
lcall
repnz
or
inc
cmp
xlat
xchg
xchg
shrl
push
mov
out
loope
jmp
sub
insl
fidivrl
subl
notb
pushf
fstl
adcb
dec
push
es
in
mov
mov
sub
es
push
mov
or
imul
out
xchg
xchg
or
ret
push
ret
ss
adc
mov
aaa
std
add
test
adcl
mov
js
pop
mov
lret
xor
xchg
in
adc
xor
lea
cmp
imul
dec
nop
dec
push
jb
gs
es
add
push
lock
insb
ja
push
outsb
add
dec
mov
dec
sbb
push
sub
enter
out
ja
jne
out
add
rcrb
add
push
enter
sub
push
out
insb
ljmp
and
cld
scas
sarl
or
imul
test
ljmp
sub
dec
ss
ljmp
adc
ret
or
adc
cmp
int
mov
aaa
aam
aas
or
pop
call
iret
jb
or
mov
int3
outsb
cmc
inc
cmp
push
int
stos
sbb
sbb
pop
rep
xchg
rolb
rcr
shll
jge
aam
std
jmp
jmp
inc
mov
clc
or
dec
popa
dec
mov
repz
mov
iret
cli
cmp
dec
cwtl
sub
repnz
and
cld
jmp
xchg
lods
mov
imulb
movsb
pop
icebp
pop
cbtw
xchg
and
mov
adc
dec
adc
add
arpl
mov
mov
xchg
xor
stos
inc
setb
sbb
xchg
ja
std
inc
push
mov
jge
sbb
cwtl
mov
dec
int
js
add
adc
adc
scas
mov
inc
mov
push
icebp
xchg
jo
iret
sti
rorb
mov
and
pop
cmp
ds
jns
sub
mov
xor
cmp
test
dec
sti
cmp
fcmovbe
fisttpl
stc
int3
adc
and
xor
outsb
inc
pushf
sub
cmpsl
xor
sub
push
rcr
fs
mov
enter
daa
and
pop
xchg
cmp
test
sub
sub
push
push
dec
sahf
sub
ljmp
mov
and
pop
jl
iret
or
cltd
iret
pop
insl
ds
pop
push
mov
push
fbstp
orl
scas
mov
sbb
pop
cltd
sbb
dec
leave
andl
jnp
xor
lods
or
push
stc
cmp
ss
loop
adc
in
imul
stc
idivb
je
ss
ret
add
adc
popa
es
or
pop
rcrl
xchg
adcb
jbe
lods
popf
lds
jle
dec
leave
clc
cld
push
inc
ret
adcb
mov
mov
int
aaa
mov
push
rclb
fwait
jp
loopne
add
insl
inc
or
xchg
jnp
pop
movl
push
mov
add
push
sbb
dec
lret
stos
cltd
pop
inc
out
cmpb
arpl
cmp
cmpsb
stos
shll
mov
iret
imul
add
stos
int3
dec
int3
push
les
xchg
int3
call
mov
lods
orl
insl
sahf
push
fucomp
or
popa
mov
in
jmp
add
xor
or
pusha
push
sub
nop
lahf
pop
or
stos
rcrl
lret
jae
mov
fs
jge
push
call
xor
pop
inc
arpl
test
mov
push
pop
leave
xor
lock
in
and
in
jecxz
push
jbe
stos
out
in
xor
inc
repz
ret
mov
out
or
xchg
and
jae
sbb
cld
jne
cmc
xor
xlat
dec
mov
in
jnp
sbb
mov
adc
lods
les
xlat
adc
mov
cmpsl
out
cmp
flds
out
fistps
push
repz
das
mov
and
mov
or
lahf
imulb
cmp
fstpl
or
aad
mov
or
stos
cmp
jbe
subb
jmp
xor
xchg
and
jge
dec
nop
pop
dec
pop
jg
cmp
std
call
call
mov
mov
xchg
pop
cmp
mov
shr
iret
clc
or
mov
xor
jge
xchg
xchg
push
cmpsb
les
lods
popf
push
popa
push
inc
lods
or
in
push
in
xchg
push
mov
test
lret
xor
movsl
mov
push
push
xchg
sub
mov
daa
fwait
and
jne
sti
iret
cwtl
mov
sub
cmp
ss
hlt
ret
lcall
jo
add
pop
aaa
jl
mov
push
jno
mov
outsb
jae
mov
gs
xchg
sbb
pusha
mov
cmpsb
mov
jmp
and
push
mov
bnd
test
cld
cmp
ret
movsl
inc
ds
cmp
adc
xchg
mov
aas
mov
ljmp
dec
mov
fsts
das
sub
mov
fdiv
rclb
ljmp
out
ss
out
lret
imull
xor
data16
and
int3
jne
push
lret
pop
mov
idivb
sub
cmp
push
rcl
push
cld
mov
mov
and
mov
sub
mov
shrb
and
cmp
aaa
lret
fcompp
call
jp
cmp
icebp
xchg
filds
pusha
push
mov
and
xor
cmpsb
iret
push
xor
imul
test
mov
out
sahf
dec
ja
and
stos
fwait
sarl
lock
push
ljmp
jnp
add
movsb
pusha
add
jecxz
push
ja
mov
repnz
pop
cmpsl
aam
jae
popl
xor
insb
repnz
jbe
or
add
rclb
enter
lods
nop
mov
lock
mov
xor
add
pop
mov
sbbb
test
aas
das
imul
addl
cmc
mov
push
mov
repz
jne
mov
mov
fcompl
fcmovb
cltd
icebp
fwait
pushfw
arpl
fsubrl
push
es
mov
imul
fwait
gs
ret
jecxz
adc
in
pusha
ss
decl
insl
mov
pusha
sbb
lret
sub
lock
aaa
jne
pusha
dec
inc
aaa
and
ret
mov
push
ja
or
mov
out
push
lods
mov
ljmp
or
dec
fbld
sbbl
and
inc
sub
stos
sahf
movsl
dec
or
jno
aam
push
negb
xor
pop
jb
test
push
push
lds
aam
push
mov
jg
sti
flds
popf
mov
mov
cmp
xor
push
stc
and
jne
fisttps
mov
sbb
sbb
pop
rclb
popa
or
out
push
ss
ja
jmp
stos
xor
xchg
push
mov
mov
testl
push
xor
pop
test
push
adc
frstor
adc
pop
dec
adc
jle
iret
sbb
insl
cmp
jae
pop
add
xchg
pop
cmc
push
lea
popa
fwait
jp
xor
lds
xor
call
insl
mov
or
arpl
mov
lahf
or
outsl
mov
out
aad
faddl
cld
mov
and
imulb
mov
cmc
data16
fdivrl
cli
sahf
lea
les
dec
outsl
roll
and
dec
rcrb
lea
adc
je
dec
lock
insb
rorb
leave
jl
mov
push
push
icebp
test
sub
mov
push
lods
arpl
ret
ret
jp
stc
fwait
push
rcl
lahf
in
ss
mov
xchg
mov
mov
mov
int3
adc
push
push
pop
dec
stos
das
mov
jne
and
lea
call
push
mov
mov
into
ljmp
dec
lcall
sub
aad
cs
testl
clc
xchg
test
adc
and
jae
pusha
jnp
inc
je
adc
shrl
iret
repz
outsb
push
xor
or
cmpsl
dec
sub
fsubl
mov
sahf
daa
mov
fcompl
pop
pop
mov
or
vpunpckhwd
push
test
repz
test
lahf
inc
sbb
adc
xor
sbb
stc
xchg
fstp
nop
xor
test
sub
push
cmpsb
mov
outsl
outsl
in
cmp
lret
das
outsl
daa
nop
push
inc
xor
mov
dec
pop
push
aam
daa
pop
mov
xor
jle
jp
mov
data16
add
push
inc
fdivl
sti
push
cli
inc
sub
jns
jecxz
pop
dec
popa
shr
test
fldl
sbb
insl
jo
mov
daa
daa
sbb
pop
xor
je
ja
imul
xchg
ret
ffree
sbb
in
push
jmp
pop
push
add
sbb
popa
test
into
jmp
rcr
adc
jp
sbb
fstp
xchg
jle
add
push
fstpt
jns
loopne
les
jp
fwait
rcr
out
mov
push
test
adc
mov
adcl
cmp
and
mov
adc
jb
sbb
icebp
test
adc
adc
lock
rclb
pusha
leave
adc
xchg
mov
lret
mov
jno
ds
rclb
pop
mov
nop
daa
clc
adc
add
xchg
mov
test
mov
pop
push
stos
or
mov
ret
xchg
xor
push
dec
dec
movsb
sbb
inc
dec
mov
push
push
or
enter
pop
xchg
inc
adcb
icebp
out
dec
test
or
jle
test
push
push
sub
and
nop
repnz
hlt
jecxz
pop
mov
mov
adcl
and
lea
imul
enter
mov
inc
sbb
mov
rclb
xor
popf
fisttps
fwait
les
popf
inc
xlat
push
dec
push
lret
push
xor
mov
push
inc
adc
nop
in
or
ds
cs
call
pop
lds
dec
mov
mov
push
inc
nop
cmp
les
or
pop
scas
shl
stos
imul
lcall
in
das
add
lock
pop
add
pop
clc
mov
xor
push
mov
inc
adc
jnp
fnstenv
pop
aaa
push
frstor
mov
ds
inc
enter
sub
or
xor
lea
adc
xor
lahf
dec
xor
mov
pop
cmpsb
push
pop
cld
cs
jle
out
jnp
or
push
enter
scas
xchg
test
pop
jno
loopne
lock
mov
test
push
pop
xor
sub
fstps
popa
inc
adc
es
nop
push
les
ret
fmull
dec
aas
jbe
fiaddl
adc
cmp
loopne
stos
test
enter
fcmovbe
rorb
test
sahf
sub
mov
mov
push
mov
pushf
dec
mov
out
ret
push
xchg
cmp
in
fldenv
fsubs
movsl
insl
jnp
inc
clc
push
cmc
hlt
add
jne
mov
push
add
jmp
mov
inc
push
and
outsl
ret
ret
sbb
clc
imull
mov
stos
mov
cmpsl
pushf
lock
mov
inc
pop
out
lock
out
jmp
iret
mov
jl
mov
cmp
adc
pop
ljmp
test
adc
inc
push
cli
ja
jg
dec
mov
xchg
inc
cmp
cmp
push
and
andb
jnp
pop
mov
out
xor
xchg
aam
inc
dec
mov
xchg
addb
insl
jg
push
mov
jbe
mov
pop
push
push
divl
cltd
xchg
arpl
loope
test
ds
inc
ret
xor
test
push
mov
or
inc
arpl
adc
testb
and
inc
xchg
ret
cltd
rcrb
xchg
or
leave
add
mov
push
sbb
xor
outsb
and
inc
push
xchg
jb
mov
or
jge
movsl
mulb
mov
cwtl
addr16
mov
mov
push
mov
mov
ficompl
call
ret
ret
lock
sti
dec
insb
adc
stos
mov
mov
cs
jae
xchg
add
add
jbe
lods
mov
or
mov
fnsave
adc
or
sti
out
mov
or
cmp
cmp
mov
arpl
shl
out
or
cmp
mov
dec
mov
sbb
test
arpl
inc
mov
in
fwait
pop
mov
movsl
or
push
mov
lea
fidivrs
mov
xchg
push
xchg
add
shr
and
testl
xor
pop
xchg
loopne
cmp
jae
lds
and
xorb
lds
and
jo
lahf
inc
enter
hlt
das
lahf
mov
xor
mov
cmp
xor
imul
clc
icebp
sub
or
or
icebp
clc
into
arpl
pop
gs
inc
loop
fdivrp
dec
jae
push
mov
sbb
sub
adc
add
imul
adc
in
jle
jmp
lea
pop
cmp
shl
stos
push
adc
mov
scas
sbb
mov
mov
loopne
xor
mov
addr16
add
pushf
jecxz
jno
mov
idivb
sub
sbbl
dec
dec
addr16
popf
jecxz,pn
push
or
and
outsb
xor
in
scas
or
and
mov
in
jmp
jo
push
das
test
mov
jmp
cmp
and
and
cmpsl
sbb
lods
movsb
sbbl
mov
push
pop
xor
pushf
in
sbb
clc
xchg
hlt
decb
lods
dec
pusha
das
push
ljmp
or
out
pop
out
mov
outsl
jle
or
test
in
iret
cmp
cmpsb
rolb
pop
mov
cmp
sub
movsl
or
adc
pop
inc
jnp
leave
leave
leave
fadds
movsl
fimull
in
xor
ja
adc
mov
or
pop
dec
in
and
inc
add
push
lock
sub
dec
daa
xor
mov
dec
and
aad
mov
push
or
in
inc
mov
jecxz
sbb
enter
cmp
add
icebp
fisubs
and
fdivl
adc
xor
loope
pushf
movsl
int
outsl
mov
mov
and
in
sbb
scas
mov
in
adc
arpl
inc
push
enter
xor
pop
mov
out
inc
or
push
add
stos
bound
and
aam
cmp
leave
in
dec
pop
test
inc
icebp
adc
jae
daa
rol
sub
jno
inc
adc
xor
sbb
jl
les
sbb
xchg
iret
sti
inc
repnz
xchg
jmp
daa
inc
pushf
xchg
push
push
das
int3
test
push
xor
push
inc
stos
push
inc
jbe
xrelease
jl
cmpsl
jg,pn
or
and
imul
aad
mov
movsl
std
prefetcht0
std
inc
repz
dec
push
cmp
dec
in
jne
orb
ds
dec
mov
dec
daa
push
shlb
jb
ret
or
lods
mov
mov
mov
clc
mov
pusha
jo
mov
push
data16
jl
dec
push
jbe
xchg
sub
int
push
cmp
xchg
sub
add
or
push
jg
jmp
cmc
in
mov
mov
sub
xchg
enter
push
mov
push
xchg
and
xchg
adc
sub
negb
cmp
xchg
mov
and
in
inc
out
cmp
mov
adcl
aam
stos
dec
rorl
pop
push
imul
push
imul
fdivs
cs
addr16
xor
sti
push
ja
stc
sbb
adc
dec
push
rorb
cmc
jnp
push
mov
sbb
mov
sarl
outsl
popa
or
enter
sub
xchg
repz
xor
test
iret
mov
ret
cltd
outsb
xchg
in
aaa
gs
jecxz
jle
idivl
jge
sbb
mov
sbb
cmc
scas
add
sbb
and
add
int
lds
mov
cmc
mov
repnz
insl
jnp
sbb
out
stc
jmp
lret
loopne
sbb
dec
imul
push
les
out
jl
addl
push
enter
mov
inc
xor
imul
movsl
add
add
xor
adc
mov
inc
dec
enter
sub
mov
cs
lods
fisttps
mov
sub
call
inc
das
mov
outsl
xor
cmp
jl
pop
pop
imul
test
lods
push
push
jae
out
cwtl
lret
fwait
stc
dec
jmp
jge
inc
xchg
jnp
jecxz
inc
or
in
mov
sarl
jg
test
push
shl
and
test
mov
sbb
jge
pushf
data16
out
mov
scas
pop
pop
lea
cltd
pminsw
mov
imul
aad
dec
in
fstpl
stos
adc
out
fmul
ljmp
cmc
xor
pop
shl
jns
call
lods
iret
nop
gs
icebp
xor
jge
mov
ret
sbb
mov
sbb
or
ds
stc
pop
jmp
push
push
push
or
adc
loopne
int
xor
ret
out
adc
fnsave
mov
inc
mov
xchg
fwait
into
jno
mov
popa
jle
inc
pop
xor
sbbb
mov
stc
xchg
test
lock
dec
outsl
movsl
and
xchg
lock
shll
mov
std
jnp
xor
fs
js
stos
jne
subps
sbb
inc
data16
mov
dec
addr16
mov
or
xchg
adc
repz
movsl
mov
repnz
dec
xchg
pop
repnz
lcall
dec
cltd
sbb
adc
cmpsl
dec
sub
adc
sub
fcompl
inc
ret
jge
leave
xchg
test
sbb
out
stos
ja
insl
aam
fsubr
and
icebp
call
cld
or
xchg
loope
adcb
mov
push
leave
movsb
or
shl
aaa
in
sahf
inc
enter
lock
and
insl
fsubs
sbb
mov
xor
mov
xor
shrl
push
roll
xor
sahf
jns
cld
inc
fcmovne
insl
sub
das
pop
jecxz
loope
fistpll
adc
decb
mov
pop
jnp
inc
or
in
or
mov
pavgw
call
cmpsl
and
scas
xor
xchg
cmp
pop
push
loopne
mov
dec
out
lret
divl
inc
test
stos
add
rcrb
out
adc
adc
inc
les
jl
das
arpl
aas
lret
mov
mov
test
mov
and
lret
mov
mov
nop
or
mov
cltd
into
lds
popf
cmp
mov
add
mov
mov
cltd
dec
fldl
test
iret
add
sbb
pop
gs
leave
sub
mov
lcall
lods
int
mov
scas
bnd
dec
inc
in
ja
cltd
fcoms
jno
push
cmc
xor
lea
sub
pop
inc
ret
popa
cmpsl
fsubp
repz
xlat
cmpl
xchg
arpl
mov
push
cmc
stos
adc
cmpsl
hlt
mov
push
cld
jp
sarl
adc
scas
sub
gs
dec
mov
mov
stos
int3
js
xor
push
pop
notb
jmp
loop
mov
dec
sub
insl
and
dec
fdivs
outsl
aaa
jp
imulb
or
add
enter
mov
das
and
sub
mov
cli
or
mov
pusha
in
add
adc
mov
dec
xchg
mov
mov
lcall
and
mov
cmpsb
xlat
cld
mov
cmpsl
loop
iret
int
addr16
iret
mov
arpl
jnp
mov
stos
sti
mov
imul
pushf
mov
xlat
insb
ret
lods
pop
movb
jg
mov
adc
rcrb
ja
aam
gs
mov
and
adc
jle
and
sbb
fsubs
jle
push
rorl
in
or
shl
fs
mov
dec
adc
inc
cltd
xchg
int3
jmp
fdivrl
sub
cli
and
mov
test
gs
mov
jno
inc
aam
in
xchg
daa
inc
push
xchg
mov
repz
mov
fmuls
lods
mov
jge
pop
xor
push
sti
repnz
pushaw
adc
call
nop
inc
push
adc
sub
cli
xor
sbb
leave
adc
jo
add
mov
fwait
xchg
iret
mov
imul
inc
rcll
sti
add
iret
lcallw
inc
inc
push
call
sub
xchg
inc
mov
mov
pop
and
movsl
inc
fidivs
fwait
sub
test
aas
fsubrl
ret
sub
xchg
or
sbb
push
lahf
push
push
dec
push
int
xchg
movdq2q
mov
into
scas
xor
out
repnz
mov
add
bound
test
and
xor
and
cld
stc
out
pop
ljmp
loopne
idivl
ja
lds
mov
sub
push
dec
pop
dec
mov
mov
xchg
ds
fs
pop
sbb
movsl
xor
fisubl
adc
ret
lods
pop
or
xchg
xchg
popf
push
je
or
mov
pop
ljmp
jl
cltd
out
std
xchg
negl
and
jno
popf
and
lods
inc
outsl
pop
cld
cmpsb
add
adc
adc
ds
and
aaa
pop
adc
dec
add
adc
lret
push
xchg
les
xor
divl
cmpsb
pop
lods
pop
pop
bound
lea
add
cmp
stos
inc
call
cmp
nop
push
sub
pusha
enter
lahf
mov
cmpsb
dec
insl
xor
fdivrs
inc
xlat
mov
push
sub
into
in
subl
sti
daa
or
xor
outsl
jmp
sub
mov
fsubrl
test
sbb
inc
idivl
jbe
popa
pop
xor
dec
jbe
cmc
sbb
andl
out
adc
imul
jnp
mov
outsb
cmpsb
jl
jmp
pop
and
jmp
add
addr16
inc
in
inc
loop
ret
test
or
and
add
jns
xchg
xor
ror
rcrb
es
loopne
push
mov
inc
aad
fsubs
ret
xorl
hlt
mov
out
mov
jnp
mull
xor
adcl
cmp
loopne
fdiv
cmp
cmp
addr16
das
cmp
xchg
iret
pop
aad
push
and
rcl
mov
cmp
add
jp
fistpll
add
push
pop
jge
push
test
xlat
mov
sub
repnz
jg
pop
xchg
int3
nop
mov
lret
out
repz
lret
repz
sub
push
movlps
enter
inc
or
xor
pop
pop
jg
emms
inc
inc
repnz
das
in
dec
cli
dec
adc
xchg
jle
out
add
inc
xchg
xchg
xor
mov
and
imul
xor
xlat
inc
jae
sbb
xor
mov
call
push
nop
inc
sbb
in
lcall
xor
scas
movl
sub
push
mov
je
inc
iret
popf
fcmovnb
xchg
mov
hlt
rep
pop
push
fidivrs
test
stos
add
inc
inc
stos
icebp
dec
les
cltd
aam
xor
jmp
ljmp
add
adc
adc
adc
dec
scas
add
aaa
pop
sarb
push
mov
adc
jbe
dec
mov
lret
aad
push
pushf
hlt
lret
ja
push
jo
les
call
mov
push
add
out
xlat
es
and
push
stos
and
mov
push
and
push
and
ficoml
movsb
dec
dec
jecxz
aaa
movsb
fimuls
hlt
dec
imul
mov
fucom
ret
sbb
xor
adc
sbb
imul
insb
and
jae
jno
cltd
cmpsl
hlt
pop
data16
gs
fwait
cs
mov
mov
mov
cmc
mov
mov
ret
jbe
xchg
call
sbb
fisubrl
imul
inc
push
imul
pop
mov
xchg
femms
lcall
incb
cmp
add
movsl
and
inc
in
push
inc
in
arpl
jmp
fdiv
loop
mov
ss
sub
pop
cmp
sub
jns
aad
push
stos
dec
loop
inc
aad
cmp
repnz
mov
popf
mov
adc
or
sti
adc
into
add
dec
jge
pop
mov
mov
dec
sub
ret
mov
mov
sub
mov
test
pop
inc
cld
ss
inc
adc
jp
in
inc
in
mov
xor
fmull
jg
and
dec
sub
das
cmp
mov
add
ja
or
fs
cmp
std
sub
mov
rolb
add
mov
push
adc
mov
mov
and
in
add
xchg
fs
sbb
push
push
mov
dec
clc
loop
repnz
cmp
popa
es
pop
sbb
xchg
mov
insb
in
push
jp
sbb
hlt
notb
mov
xchg
mov
lahf
jle
sbb
mov
inc
mov
mov
shl
pop
cltd
cld
mov
es
pop
sbb
dec
jno
pop
sbb
into
subl
xor
lcall
mov
sbb
das
out
leave
mov
int
mov
sbb
fcmovne
mov
lcall
pop
push
and
bound
cmp
cmp
pop
add
ds
mov
insb
xchg
pop
loop
dec
or
scas
int3
sub
ret
in
decb
lcall
dec
scas
hlt
stos
sbb
mov
cmpsb
insb
add
rcrl
mov
les
loop
das
sub
xor
sub
daa
fdiv
clc
add
dec
lret
mov
mov
shlb
icebp
jge
stc
jp
mov
sub
jmp
loopne
add
int3
jg
ja
add
scas
enter
outsl
mov
mov
mov
test
xor
test
int3
mov
xchg
sub
mov
sarl
mov
imul
lods
push
dec
test
in
push
cmp
jne
pop
dec
mov
in
rcrb
fnstsw
cmp
sbb
lcall
or
fsubrp
leave
dec
sub
lock
adc
add
sub
inc
data16
pop
xchg
data16
inc
add
ds
cmovns
sub
sbbl
cmp
cmp
sti
decb
pop
adc
mov
jne
push
mov
mov
negb
xchg
and
inc
enter
inc
push
dec
jle
bound
cmpsl
jecxz
aas
adc
jns
cmc
sarb
int
loope
rcll
or
incl
inc
add
cmc
jae
mov
cmp
mov
outsl
je
mov
and
and
lods
addl
addb
pop
dec
mov
push
xor
loope
push
sbb
scas
mov
test
push
push
add
cli
adc
pop
gs
lcall
add
mov
leave
push
pushl
enter
or
inc
shlb
dec
dec
mov
daa
push
pop
mov
mov
sbb
mov
push
dec
pop
fisubl
insl
xor
loop
pop
cltd
fbstp
insl
xchg
out
or
inc
cmpsl
fstpl
or
sub
add
loopne
pop
pusha
dec
call
pop
and
data16
shrb
cmpsl
xor
mov
push
sbb
negl
cmp
idivl
insb
push
and
push
mov
mov
scas
addr16
arpl
rorb
xchg
ffreep
push
imull
mov
lea
xchg
jns
dec
pop
mov
insb
mov
bswap
shrl
sbbb
xchg
in
jnp
and
adc
or
aad
out
cmp
pop
or
push
xchg
dec
push
testl
mov
ret
or
xor
adc
ret
push
shrb
cmpsb
adc
in
inc
add
jno
xchg
pop
popf
sub
adc
out
roll
lods
jl
pmuludq
ss
int
nop
into
adc
and
lock
pmulhuw
xchg
mov
and
loope
ja
ljmp
mov
aad
jno
int3
fists
mov
loope
or
pusha
aad
outsb
pop
lcall
add
push
mov
rclb
sub
inc
idivl
xor
mov
mov
dec
shrb
sub
jnp
jmp
enter
mov
int
sbb
and
test
or
sahf
fildll
iret
xor
outsl
pushf
adc
pushf
pushf
cmp
sub
pop
xchg
sarb
stc
mov
mov
cmp
mov
out
psrlw
push
mov
int
add
push
ret
pushf
jmp
push
mov
aam
and
stos
adc
mov
lret
add
mov
jns
fnsave
mov
inc
add
mov
cmp
lds
jecxz
cld
push
shll
mov
bound
inc
fs
stos
mov
aaa
int3
mov
jle
les
imul
stos
pop
shlb
xor
push
mov
stos
aas
sti
movsb
inc
lcall
jno
sub
ret
mull
push
aaa
sti
mov
add
xlat
add
add
or
es
mov
sbb
scas
push
mov
jne
sbb
xor
lods
and
xchg
imul
push
xor
pop
dec
cmp
dec
pop
inc
dec
xchg
jl
fwait
pop
dec
iret
arpl
pop
or
sar
mov
ss
jge
cmpsl
sbb
xchg
or
leave
fsubp
jmp
stos
leave
dec
xor
push
mov
jne
ret
fwait
add
mov
cmp
lret
jae
cmpsb
je
aam
and
dec
cli
push
data16
add
pop
lds
and
dec
arpl
neg
push
out
jo
cmc
movsb
shll
push
pop
xchg
inc
inc
or
fdivrl
dec
lcall
loop
cmp
sahf
lock
decb
subb
call
out
outsl
push
mov
mov
sub
xchg
outsb
xchg
sub
mov
xor
movsb
mov
mov
push
test
sahf
sub
mov
jns
shrb
rorl
repz
dec
inc
fucomi
loop
addl
scas
push
mov
idivl
jmp
in
mov
lea
pop
mov
mov
cltd
add
xor
je
pop
xchg
les
xchg
fbstp
adc
ljmp
adc
push
xchg
movsl
adc
xchg
imul
cmc
mov
sbb
out
imul
jne
in
fidivs
xchg
add
mov
jl
pop
lods
push
push
imul
xchg
int3
iret
cmovge
xchg
lcall
xor
rcl
jmp
dec
mov
xlat
mov
scas
mov
jmp
pushf
out
js
adc
jp
lcall
adc
call
pop
cmp
jns
adc
add
and
jp
sbb
dec
sub
cs
fst
cltd
jle
push
jnp
outsb
push
jns
adcb
and
and
adc
xchg
mov
ja
mov
xchg
dec
jne
ja
fsubs
pop
pushf
setge
cmp
push
sub
out
lret
sub
push
push
cli
out
xlat
cmpsl
fisubrl
lods
lret
inc
movsb
lods
mov
stos
push
pop
lahf
test
push
enter
pop
cmpsb
xlat
or
push
ret
jp
xchg
push
shll
sub
insb
xchg
aas
adc
das
push
movsb
aas
xor
push
dec
mov
inc
mov
jp
lcall
idiv
cld
iret
sub
outsb
push
ret
aas
mov
pop
cmp
cmp
add
ja
cmpsl
jmp
mov
push
mov
aas
shrl
mov
leave
dec
or
dec
or
pop
and
and
pop
fiadds
jle
loop
test
mov
pop
push
push
mov
jbe
sub
hlt
jmp
fnsave
in
push
mov
jno
int3
mov
sub
stos
mov
jle
mov
dec
push
les
inc
stos
and
add
adc
ss
or
andb
sahf
call
dec
or
fwait
pop
inc
outsb
mov
fdivr
inc
stos
imul
leave
dec
xchg
or
mov
test
les
mov
out
lahf
pop
push
in
das
cmp
cmp
movsb
orl
mov
fs
inc
mov
repnz
sarl
outsl
minps
cmp
lahf
ss
sub
imul
in
lea
inc
pop
or
pop
decl
ret
es
jge
add
subb
jmp
sub
push
xchg
sub
adc
xchg
xchg
icebp
call
mov
fistpll
mov
ss
pop
fdiv
add
lahf
jecxz
loope
add
adc
push
and
and
sub
cmc
lds
rclb
out
fldt
cwtl
dec
push
xor
fistps
mov
out
jns
push
xchg
mov
out
fildl
in
add
int
out
xchg
inc
mov
jae
adc
in
mov
dec
push
push
aam
cmc
add
int
xchg
jmp
das
push
jmp
rcl
sub
sub
std
nop
mov
repnz
or
jae
ret
scas
and
out
insl
mov
aas
orb
and
cmp
sbb
dec
jb
fadds
add
adc
rcr
xchg
dec
adc
mov
test
or
mov
pusha
dec
loopne
imul
xchg
fisttpll
mov
push
ljmp
cld
cmp
mov
imul
sub
adc
movsb
and
fdivrs
enter
sbbb
sub
aaa
fcompl
invd
stos
ss
pushf
pop
or
mov
out
rol
popa
mov
mov
adc
hlt
repz
sub
orb
add
fwait
xor
test
cld
repnz
mov
mov
add
arpl
clc
inc
mov
loope
sbb
js
and
xchg
lods
movsb
add
xor
or
insl
andl
movsb
in
lahf
cmp
add
cmp
into
sbb
inc
pop
lock
push
mov
les
out
push
or
enter
push
pop
cmpsl
dec
mov
sbb
and
xchg
sar
pop
lods
xor
push
xlat
inc
jg
lock
pushf
adc
fimuls
and
xor
cmpsl
arpl
mov
and
mov
ret
popl
mov
mov
in
sarb
or
add
es
sub
xchg
xlat
lods
xchg
leave
inc
cmc
xchg
dec
call
dec
sbb
fsub
das
jl
cs
xchg
cmp
invd
test
push
imul
movsb
push
in
pop
fcompl
in
pop
test
insl
fmul
sub
dec
imull
mov
xchg
and
pushf
cld
xchg
ljmp
push
dec
or
push
ds
popf
push
stos
fistpl
or
pop
jecxz
addr16
flds
divl
in
cmp
xor
imul
xchg
sahf
outsl
jae
lods
fimull
in
mov
xor
sbb
out
lcall
xchg
cwtl
and
into
mov
xchg
jle
xchg
lds
dec
jle
hlt
jbe
or
jb
pop
xorl
scas
adc
out
out
sbb
mov
xchg
movsl
lods
or
cmpsb
test
lods
sbb
jecxz
pop
cwtl
fisttpll
pop
dec
cmp
adc
or
jns
scas
pushf
repz
mov
cmpsl
andl
push
dec
lods
sub
shlb
test
mov
in
pop
sub
jmp
imul
pop
pop
cmp
and
rcl
cli
insb
mov
call
test
pop
shrl
enter
cs
clc
inc
inc
jge
or
rolb
in
xchg
pop
push
ret
and
adc
inc
loopne
sbb
pop
fwait
adc
add
stc
test
or
push
out
mov
adc
enter
sbb
out
call
in
mov
sbb
dec
int
xor
push
fwait
xor
and
std
jnp
bound
xorb
in
aaa
jge
cltd
cs
add
addb
cmpsb
das
je
adc
dec
inc
pop
sbb
dec
scas
sbb
push
icebp
clc
jg
and
jbe
mov
mov
add
cmp
in
fucomp
cmpsl
ljmp
lds
sbb
dec
mov
or
scas
push
inc
sub
mov
cltd
mov
pop
sub
cwtl
fwait
inc
into
sbb
sahf
inc
mov
dec
xchg
pop
divl
loopne
xor
rcrb
cmp
pushf
decl
sub
xchg
imul
mov
clc
gs
sbb
dec
std
lods
sahf
or
imul
pop
shll
insl
jecxz
xlat
pop
faddp
or
push
mov
sahf
fdivrl
mov
sbb
wbinvd
test
and
add
addl
jmp
out
ret
pop
pop
mov
and
dec
mov
iret
sahf
mov
push
std
xchg
dec
int3
xchg
mov
imul
mov
xchg
loopne
mov
incb
cltd
fs
ds
and
fidivrs
cmpsb
pop
xor
mov
push
je
push
je
arpl
lods
leave
int3
push
scas
add
aaa
int3
test
loope
stc
out
in
and
push
inc
dec
mov
in
aas
mov
fidivs
xlat
lcall
in
mov
leave
mov
push
mov
mov
push
icebp
add
sub
cmp
jl
lcall
sar
push
jmp
push
orl
mov
adc
sbb
pop
xchg
imul
stc
and
xor
add
cwtl
faddl
push
inc
lods
enter
xor
jle
andb
insl
imul
enter
pop
jno
lods
push
pop
or
xor
les
inc
inc
rcr
add
popa
pop
in
cmp
mov
data16
sbb
cmp
push
pmuludq
dec
test
je
lret
pushf
inc
lods
out
xchg
fs
mov
and
repnz
lock
and
fdivrp
cltd
sub
ret
mov
mov
aaa
xchg
rcl
push
mov
out
cmp
xchg
mov
shlb
aas
call
hlt
lahf
push
or
cld
add
cli
mov
dec
cmpl
cltd
shll
push
xor
inc
fwait
ja
pop
sahf
int
out
cs
jmp
sbb
stos
push
repz
rorl
or
jns
out
jae
arpl
repnz
mov
pushf
xor
inc
out
insl
jge
xchg
mov
fiadds
mov
jecxz
loop
mov
fldl
lea
test
or
mov
shlb
ljmp
fnstsw
test
cmpsl
dec
pop
push
in
aaa
lret
in
test
out
xlat
sub
cmpsb
fisttps
movsb
js
in
out
xchg
imul
push
sti
repz
mov
push
adc
imul
and
out
mov
jge
out
stc
fs
pop
mov
mov
adc
push
dec
push
jbe
lods
stc
in
or
sub
js
adc
dec
test
xchg
adc
xor
in
mov
dec
sub
dec
inc
xchg
je
loope
es
loop
les
clc
in
xchg
push
imul
mov
jmp
clc
mov
mov
shrb
jno
inc
or
cmp
xchg
pop
dec
mov
fdivrl
rdtsc
dec
clc
sub
mov
call
cmp
mov
adc
pop
jg
les
hlt
pop
sahf
jmp
adc
in
xchg
add
loope
xor
mov
shll
dec
cmc
jmp
jns
in
dec
pop
or
xor
bound
and
push
dec
not
jp
adc
imul
data16
out
pop
mov
jo
fscale
jg
inc
mov
loope
ja
daa
insl
or
je
or
xor
stc
test
lock
xor
outsl
in
iret
xchg
in
icebp
in
sbb
movsb
ja
mov
jne
hlt
mov
adcl
jle
std
sbb
sbb
enter
loopne
lock
mov
icebp
ret
add
imul
mov
je
xor
rolb
lcall
push
inc
out
push
shr
cmp
subb
pop
pop
mov
xor
icebp
nop
jl
xlat
nop
inc
test
out
jne
lods
clc
inc
fs
lds
cltd
pop
cmp
add
loop
pop
pop
or
mov
shll
hlt
mov
test
and
mov
imul
fwait
pop
and
sub
popa
std
push
add
add
insb
pop
dec
xor
sbb
pop
add
pushf
cmpsl
jns
mov
mov
lret
add
push
mov
mov
adc
adcb
sbb
mov
mov
mov
pop
xlat
push
int3
inc
adcl
pop
cltd
lds
lret
dec
mov
mov
sbb
roll
jmp
dec
and
adc
push
inc
popf
mov
mov
cltd
xchg
out
xor
out
ret
xchg
mov
shrb
shl
sbb
xor
adcl
fbld
imul
jg
rcr
bound
movsl
pop
push
jp
lea
fidivl
pop
rorl
aam
test
jns
addb
rol
xor
ret
rcr
cmpsl
ret
test
out
fs
jne
dec
mov
int
in
add
fwait
inc
lret
imul
mov
or
inc
fdiv
mov
dec
inc
pop
ret
fcoms
mov
sbb
pop
pop
mov
cmp
and
cmpsl
js
xchg
sub
or
cwtl
pushf
fsubl
pop
cld
pushf
mov
ret
push
inc
push
dec
and
sbb
cltd
jmp
sti
cmp
iret
dec
jmp
cltd
and
mov
daa
and
adc
fdivr
jmp
dec
testl
mov
pop
lods
or
pop
sub
sub
test
or
outsl
loop
lea
lea
or
sub
fisubrl
mov
push
pop
test
push
mov
fwait
mov
lods
sti
mov
pop
out
sub
push
jmp
cmp
mov
push
push
push
mov
mov
hlt
enter
xchg
dec
cs
jecxz
jns
push
lahf
add
test
or
das
inc
hlt
jns
adc
icebp
dec
je
ss
xor
xchg
loope
aam
mov
mov
xchg
lds
dec
adc
sub
std
inc
movsb
and
subl
xlat
popf
adc
dec
ds
addr16
jle
mov
popf
inc
xchg
mov
dec
xor
pop
movsl
xchg
xchg
mov
dec
pop
dec
xor
fbstp
mov
mov
pop
mov
out
dec
jecxz
ret
mov
adc
fwait
jb
lret
sub
dec
inc
jmp
sbb
pop
rcrb
inc
mov
jnp
xor
rcrl
bound
xchg
repz
pop
div
dec
xlat
test
lock
pop
ss
sub
lret
fisubrs
xchg
or
pushf
inc
jb
cld
inc
xor
jbe
push
mov
enter
mov
gs
fs
sub
adc
movsb
jp
sbb
adc
ret
inc
aaa
and
add
mov
xchg
pop
xor
cmp
fsts
andb
hlt
jne
addr16
or
hlt
mov
fildll
adc
mov
in
cwtl
ds
pop
iret
jbe
xchg
les
jmp
pop
loop
jbe
lock
xor
out
sbb
dec
lods
fldt
mov
fisttpll
cltd
outsb
sahf
movb
mov
fcmove
jl
mov
icebp
sarb
xchg
push
inc
sbb
or
aad
ljmp
mov
sbb
or
add
sub
push
pop
dec
and
movsl
outsb
adc
and
xchg
jg
stos
incl
lret
xor
xor
cmp
aaa
xlat
sbb
cmpsb
call
pusha
loop
fs
jecxz
shll
ret
mov
xchg
push
or
pushf
mov
lock
imul
and
add
movsb
dec
lret
jl
pop
popf
cs
cli
ficoms
inc
inc
mov
repnz
out
adc
std
mov
out
jg
sti
dec
cltd
call
xchg
in
js
xchg
aam
nop
add
enter
add
adc
mull
stos
dec
or
int3
pop
mov
and
mov
in
jp
hlt
std
pop
pop
dec
movsl
test
mov
loopne
and
fdivrs
mov
xor
inc
mov
ror
mov
lret
filds
and
add
dec
jle
inc
sub
mov
into
inc
jp
cmpb
jno
adc
mov
or
jle
sbb
or
test
sub
mov
sbb
scas
cmp
cmp
mov
ret
sbb
pop
mov
fiaddl
mov
inc
mov
xchg
jb
pop
mov
ljmp
pop
and
sub
dec
je
or
pop
xchg
cmpsl
xchg
mov
mov
or
add
scas
push
pop
xor
or
cmpsb
sti
mov
dec
or
scas
aad
das
mov
and
xchg
push
cs
xchg
jmp
cmp
hlt
out
or
pop
cmp
mov
lods
mov
xor
dec
shl
or
decl
and
nop
std
add
jecxz
sbb
in
jne
int3
je
ja
insb
pop
or
ss
lods
lock
sbbl
insl
push
out
sbb
jbe
daa
aad
movsb
fwait
or
test
xorl
dec
insb
jae
and
push
int3
pop
jmp
cmp
cli
cmp
call
cmpsb
inc
repz
xor
xorb
ficoms
icebp
test
cld
int3
ss
lods
fcomps
jns
out
and
lcall
icebp
mov
lods
popl
test
popf
mov
cmpsb
inc
xchg
inc
xlat
cmpsb
cli
cmpsl
inc
addb
and
inc
leave
lods
add
push
add
jb
repz
dec
xchg
push
push
in
int3
movsb
or
and
add
fimull
loop
add
stos
subl
jecxz
sbb
insb
into
pop
fistl
lods
cmp
xchg
cli
insl
jns
inc
inc
fdivl
dec
es
mov
int3
lds
pop
fs
insl
jo
pop
lahf
push
jl
push
mov
jecxz
xor
lcall
popa
mov
push
jb
pop
xchg
and
cmp
sbb
in
aaa
out
add
mov
popa
data16
gs
and
dec
mov
jmp
jle
dec
icebp
popf
dec
and
out
adcl
inc
xchg
jbe
jmp
mov
fwait
jnp
test
push
mov
test
add
mov
adc
or
fmull
or
hlt
add
stos
cmp
or
and
jae
xchg
sbb
daa
pop
cmpsl
jg
in
cmp
nop
cmc
dec
pushf
and
sbb
ja
jne
sti
lods
push
mov
dec
mov
add
mov
add
insb
out
fs
lds
lock
jns
jne
in
add
dec
jmp
jnp
xchg
pusha
sahf
mov
shll
xor
dec
sub
pop
lock
fcomi
lcall
xchg
cmp
jp
jmp
dec
pop
push
je
dec
add
push
mov
repz
fs
lds
sbb
sub
cmp
pop
je
int3
pop
ffree
mov
xchg
pop
ficoml
das
or
ret
mov
pop
dec
int
ror
xchg
sbb
fcoml
mov
stos
and
jg
adc
mov
iret
pop
xchg
out
xor
or
dec
ss
rorl
ficomps
pop
cmp
imulb
in
jp
lret
lret
sbb
sysret
dec
mov
subl
jg
sub
pop
repz
in
xchg
cmp
loope
pop
lods
sub
mov
repz
out
loop
lahf
lret
pop
insl
divl
lcall
dec
and
xor
lahf
xchg
movsl
loop
daa
push
mov
sub
shlb
outsb
adc
lea
cmp
cmpsb
mov
imul
test
add
xchg
mov
mov
mov
rcrl
enter
adc
mov
stos
mov
mov
or
shlb
sarl
sub
and
jmp
f2xm1
sub
movsb
sbb
sub
out
mov
scas
add
sbb
and
cmp
insl
push
sbb
pop
xlat
aad
xor
scas
mov
sbb
fstps
push
pop
idivb
push
mov
loope
xor
xchg
pop
test
in
movsl
jl
aad
cmpsl
testb
jge
jae
sarb
fnstenv
dec
in
push
xor
xor
icebp
add
lret
sub
jnp
mov
adc
leave
or
dec
fildl
aaa
stos
outsb
xchg
inc
jno
js
jl
cmc
shlb
sahf
movsl
leave
push
fnstenv
push
lcall
inc
cmp
sub
idivl
rcrb
jecxz
pop
ficomps
jno
insl
aam
mov
repnz
mov
call
aaa
sub
add
aam
rcrl
lea
mov
lret
dec
and
popa
dec
sub
xchg
mov
pop
mov
enter
cwtl
into
or
lea
dec
ljmp
popa
cmp
push
out
push
xor
xlat
jmp
mov
leave
jle
das
int3
add
ret
jno
dec
sarb
mov
imulb
addr16
out
jbe
jle
aad
lods
imul
xor
pop
mov
scas
mov
or
ret
out
imul
arpl
je
jnp
mov
test
push
psrlq
adc
push
leave
add
aaa
cmp
and
mov
jp
cmpsb
pop
push
les
mov
clc
ss
dec
aad
jecxz
adc
push
scas
sbb
popa
push
les
outsb
and
mov
cmp
inc
mov
arpl
add
xchg
xchg
sub
sub
mov
mov
mov
test
jmp
and
pop
dec
std
push
and
mov
xor
je
dec
xchg
push
fimull
mov
inc
xor
push
clc
mov
mov
shll
adc
loopne
in
jne
push
push
inc
dec
popf
cmpb
scas
sahf
xchg
inc
call
mov
push
xchg
pusha
xchg
addb
ret
cmp
outsl
pop
sbb
aas
insl
pop
sub
cld
bound
das
adc
ljmp
push
pop
mov
push
addr16
xchg
push
xchg
and
int
sub
or
xchg
aaa
pop
int
push
push
sahf
cmp
je
dec
les
mov
popf
popf
in
xchg
loop
dec
cmp
push
pop
lcall
mov
dec
loopne
or
aam
pop
xor
jmp
in
cmpsb
push
jo
and
jecxz
jo
sub
jae
xor
push
mov
call
pop
xchg
xor
mov
sbb
cmpsb
add
dec
stc
aad
inc
xor
jp
pop
push
outsb
adc
nop
add
mov
fwait
mov
jle
mov
iret
push
mov
or
and
ss
ljmp
lret
mov
cli
xchg
mov
cmp
or
push
push
cmp
imul
shl
lods
js
dec
mov
dec
lock
inc
aam
xchg
dec
or
jno
or
in
ljmp
movsb
push
mov
adc
addr16
push
lds
cmp
push
out
pop
sbb
mov
dec
insl
adc
sarb
adc
aaa
mov
xchg
nop
lret
push
lret
js
dec
and
mov
cmp
std
loop
add
scas
jb
pop
cmc
xor
fcmovnbe
lock
mov
or
cltd
insb
pop
pop
test
push
jo
dec
ds
add
cld
sbb
adc
outsl
push
xor
and
sti
sahf
push
xor
sbb
push
mov
dec
outsl
out
xchg
in
clc
push
icebp
shl
je
cmp
pushf
dec
push
bound
lret
pop
aad
test
andb
cs
pop
rcrl
cmp
mov
xchg
out
lret
lcall
dec
mov
adc
fadds
orl
mov
push
imul
movsb
add
cmovg
add
push
push
adc
stc
lods
sahf
mov
push
inc
rcr
insl
or
mov
fadds
je
mov
and
cmp
lea
lea
je
jb
in
js
push
aad
pusha
xorl
xor
in
push
dec
inc
mov
cmp
in
daa
mov
fiadds
ret
jno
fs
xchg
xor
lea
aam
adc
dec
aam
adc
mov
jp
call
sub
jne
jecxz
inc
pop
jg
sbb
xchg
dec
xor
mov
dec
adc
lret
xor
shrb
and
sub
jmp
xchg
mov
cmp
add
insb
mov
jnp
std
jecxz
push
mov
lock
add
ss
adc
push
cwtl
fdivrs
pop
sahf
cmp
jg
daa
ss
fldcw
testb
jl
movl
sbb
inc
lret
mov
jns
push
jnp
cmp
repz
xor
push
popf
push
push
out
mov
push
movsl
xor
sub
mov
out
xor
das
sti
mov
sub
jae
dec
in
mov
sbb
mov
add
cmp
jno
test
or
adc
das
sub
mov
mov
sti
push
fdiv
pop
fcomps
loopne
push
outsb
jb
fidivrl
ja
push
movb
pop
cmpsl
pop
cmp
jmp
sbb
js
add
mov
xchg
int3
jecxz
inc
and
adc
jp
add
mov
and
inc
cmp
mov
gs
xchg
cmpsb
jns
dec
push
xchg
push
or
pop
leave
sbb
popa
push
cmc
mov
jecxz
mov
ds
or
lock
cvtps2pi
cmpsl
xchg
push
repz
jg
gs
into
je
imul
push
in
ljmp
pop
loop
lea
stos
xchg
lock
into
adc
push
ja
pop
mov
out
js
mov
xor
jge
out
xchg
inc
dec
adc
and
adc
push
mov
xlat
mov
pop
mov
shrb
das
push
sub
out
sbb
mov
les
inc
mov
push
pop
or
pop
in
add
and
test
repnz
jae
pop
dec
ljmp
or
sub
addr16
inc
jge
inc
mov
or
dec
xor
lcall
xchg
cltd
mov
sbb
xor
insl
out
test
iret
stc
das
fstps
mov
loopne
je
or
sarb
xor
adc
int3
jl
jbe
xor
mov
sbb
pop
inc
push
pop
imul
fidivrs
cmp
sbb
fisubl
in
cmp
ds
in
fisubs
addr16
dec
jmp
leave
pop
imul
sub
mov
add
sub
repz
jno
mov
mov
fs
mov
jbe
jmp
inc
jno
insb
inc
push
cmp
adc
cmpb
pushf
push
and
mov
adc
mov
xchg
arpl
fmull
or
vmovups
sub
popf
movsl
adc
cmpb
in
inc
loop
push
mov
fs
out
outsl
leave
or
mov
stos
aad
js
add
mov
mov
xchg
les
pop
aaa
cmpsb
leave
adc
or
jge
mov
jb
xchg
push
push
out
imul
loope
stos
fsubp
jmp
rcr
clc
je
sbb
scas
inc
mov
add
lret
cmp
js
pop
push
setb
lret
dec
roll
js
add
pop
and
scas
xchg
out
or
les
outsb
cmp
pop
inc
or
iret
or
push
jmp
iret
scas
sub
and
pop
pop
inc
dec
rcrl
sbb
pop
lsl
les
frstor
push
add
mov
xchg
or
fucomp
sbb
mov
xchg
inc
sbb
leave
lods
jno
pop
xor
jg
popa
xor
pop
jmp
adc
mov
mov
imul
pop
adc
inc
mov
bound
hlt
jecxz
lcall
and
incb
or
mov
out
addl
lret
and
icebp
mov
loopne
out
popf
push
iret
cs
cmc
les
daa
mov
pop
inc
or
mov
xchg
sbb
in
movsb
inc
scas
loopne
inc
dec
jae
divb
mov
outsl
and
int
scas
movsb
xor
pop
jg
xor
jecxz
lcall
pop
lea
inc
pop
sbb
insl
scas
movsb
sub
and
xor
ret
test
pop
jns
lret
pop
mov
pushf
cld
xor
aad
mov
out
sbb
pop
fwait
add
push
inc
push
fs
out
shl
insb
cmp
pop
inc
sbb
xor
inc
xor
push
inc
inc
push
pop
inc
lahf
les
test
add
jmp
inc
cmpsb
push
iret
push
cmp
cli
add
repnz
popf
cmp
jle
andl
sub
rorl
pop
movl
or
xchg
mov
popf
pop
adc
jge
mov
idivb
jmp
fistl
xlat
arpl
xchg
js
in
sub
int
popa
dec
iret
nop
mov
insb
mov
sbb
repnz
push
stos
daa
mov
jge
js
stc
arpl
xlat
mov
fisttpl
clc
or
test
roll
pushf
sbb
cmp
or
scas
jle
pop
das
xchg
icebp
data16
dec
in
cli
nop
aas
and
cmp
lds
jmp
rclb
lds
jle
stos
jo
add
sbb
sti
imul
mov
adc
sub
aad
cmpsb
int
dec
mov
xor
fdivr
mov
inc
mov
sbb
push
xchg
xor
adc
iret
mov
out
push
jbe
bound
mov
mov
cld
ds
cmp
notb
jl
mov
adc
jmp
xchg
cmp
in
insl
adc
stc
mov
fidivrl
mov
mov
pushf
push
adc
pusha
aad
shll
and
inc
lcall
xchg
sti
pop
xchg
add
loopne
cltd
imul
add
push
push
add
mov
push
and
test
fcmovu
mov
pop
insl
sub
inc
and
jb
push
sbb
xor
and
into
loopne
xor
gs
lret
stc
dec
xchg
lahf
push
addr16
jns
sahf
cmp
dec
test
stc
dec
test
xchg
mov
adc
push
test
lret
xchg
jle
in
cmp
jecxz
test
repz
or
sbbb
bound
jge
sub
or
in
mov
push
and
cwtl
arpl
xchg
loop
inc
in
mov
js
outsl
fsubl
pop
inc
jns
adc
jecxz
jmp
inc
cli
in
dec
sbb
xor
cmp
jmp
pop
inc
inc
in
jge
cmp
jle
icebp
popf
pop
mov
inc
call
cmp
xor
and
ljmp
sbb
out
jnp
sub
test
push
and
adc
addl
ret
ds
lea
fildll
rcrb
inc
popf
divl
in
cmpsl
pusha
rclb
xor
ss
jb
and
lds
push
outsl
sub
cmc
pop
enter
loope
xor
pop
testl
xchg
lret
mov
pop
aad
mov
dec
cli
and
push
insb
js
jl
sbb
cmp
sbb
inc
pop
ja
mov
shlb
inc
jbe
pop
push
push
jne
fwait
scas
sbb
xor
cmpsb
out
sub
cmp
dec
loop
pop
pop
sub
cld
pop
mov
add
dec
repz
aad
inc
cmpsb
mov
xchg
andl
pop
inc
daa
loopne
pop
sub
push
xor
adc
dec
pop
jae
adc
dec
inc
cmp
ljmp
adc
dec
fcompl
cmp
shrl
or
ret
push
mov
lret
jne
scas
out
arpl
outsl
adc
out
xor
dec
mov
vpsubusb
cltd
movsl
jae
call
dec
filds
mov
insl
xchg
dec
push
mov
xchg
dec
sub
mov
jg
shrl
push
cld
mov
adc
cmp
pop
and
xlat
pop
push
push
sbb
jmp
pop
mov
leave
jg
leave
cmpsl
sbb
loope
shl
cmc
or
jb
push
jb
sub
jns
enter
in
or
inc
xchg
test
cmpsb
mov
outsl
bound
jne
mov
mov
outsl
addr16
mov
ss
pop
or
cwtl
movsl
jbe
mov
xor
lea
dec
mov
inc
ficomps
inc
mov
mov
cmp
mov
stos
dec
pusha
sbb
and
repz
and
push
mov
repz
orb
lret
xchg
adc
insl
mov
inc
add
bound
mov
rcrb
mov
rcrb
stc
pop
sub
lahf
stos
call
xchg
jmp
cmp
iret
nop
jp
cltd
shrb
pop
xor
push
sbb
call
xchg
shrb
loopne
sbb
pop
adc
push
test
cmp
scas
mov
jns
xchg
cmp
pop
pop
mov
add
fldt
sbb
jg
add
or
mov
or
cld
in
loop
shlb
mov
bound
adc
in
push
jle
mov
cmp
enter
sbb
jg
js
mov
or
testl
movsl
and
out
divl
push
pop
push
inc
inc
mov
aas
loope
insb
cmpsb
mov
and
pop
rolb
add
jno
sub
push
int3
pop
sbb
aad
jbe
xlat
gs
mov
inc
or
mov
test
or
push
mov
lret
clc
pop
mov
out
inc
push
dec
add
lea
nop
adc
xor
adc
push
jae
mov
sbb
mov
add
imul
jo
xchg
pushf
push
sub
in
lds
dec
cmp
test
scas
sub
lahf
inc
mov
cmp
andl
jnp
mov
push
sbb
push
push
push
push
pop
out
mov
xor
adc
dec
adc
fsubr
loope
mov
xorl
pop
mov
cmpsl
gs
mov
aam
js
push
lds
in
test
mov
cmp
movsl
xlat
jo
sub
repnz
adc
pop
inc
add
pop
sub
xor
or
repnz
pop
and
sbb
inc
outsb
or
mov
lock
or
cld
sbb
jbe
loopne
push
xchg
jnp
stos
mov
adc
rcl
mov
xchg
add
sub
cwtl
pushf
pop
into
jbe
adc
pop
jp
or
hlt
cmpsl
pop
jmp
stc
mov
cli
lods
stos
xchg
xor
adc
pop
ljmp
aaa
push
inc
jae
loopne
or
cmp
push
adc
jge
pusha
imul
push
fiaddl
scas
mov
sbb
sbb
adc
imul
xorb
fdivrl
pop
pop
movsb
int
aas
push
cmpsb
jp
xchg
out
mov
addr16
inc
push
aaa
dec
push
filds
pop
lods
icebp
imul
add
in
pop
in
sub
inc
push
pop
xchg
loopne
sub
dec
mov
incl
movsb
in
pop
aam
shll
fidivl
inc
rorl
sub
jb
jns
lds
pop
push
scas
testl
sub
in
push
xor
jnp
add
inc
xchg
out
imull
outsb
cmpsl
pop
inc
rorl
sbb
inc
mov
cld
aaa
cltd
sbb
xor
popa
lcall
loopne
add
xor
sub
enter
pop
adc
mov
mov
idivl
xchg
std
ljmp
jb
imul
mov
fisubrl
scas
iret
data16
inc
inc
dec
push
movsl
dec
or
jle
mov
daa
cld
mov
mov
and
fistpl
jecxz
xorps
addr16
mov
and
xchg
outsb
mov
ja
divl
ret
aad
jae
pop
jecxz
incb
mov
in
sub
lods
arpl
and
and
shl
fdivr
cmpsl
mov
sub
in
or
mov
shrb
jmp
and
fistpll
xor
in
rcrl
push
jl
test
test
jae
inc
mov
imul
pop
call
cwtl
shlb
sub
popa
gs
or
in
and
mov
ja
es
inc
ds
push
xor
jp
jmp
ret
and
fiaddl
fmuls
cmp
rolb
pop
sub
pop
jne
lea
daa
sub
mov
xchg
imul
mov
cwtl
ds
scas
sbb
inc
aad
push
sub
sbb
dec
pop
pop
out
test
pop
add
out
lret
push
inc
imul
add
sub
jne
mov
pop
mov
addb
into
cs
int3
lret
jae
push
xor
xor
xchg
fldt
mov
subb
outsl
fdivrl
fs
aaa
icebp
dec
dec
std
mov
es
dec
icebp
push
xor
mov
fistps
push
cmp
dec
clc
mov
les
ret
inc
push
jb
cld
pop
xor
stos
push
mov
xor
xchg
popf
daa
xlat
xchg
mov
xchg
aad
adc
dec
mov
pop
add
cmpsb
mov
dec
aas
ret
mov
jnp
and
mov
into
jno
or
fildl
or
pop
jle
std
push
leave
sbb
scas
sub
jge
inc
push
out
fidivl
sarb
mov
jg
mov
insb
pop
pop
cmp
out
andb
xchg
movsb
sub
push
into
cmpsb
sbb
sbb
in
add
mov
dec
and
lret
push
inc
sub
arpl
inc
and
movsl
dec
test
stos
cmpsb
lret
xor
or
popa
lock
mov
lock
adcl
aad
pop
xchg
adc
notb
mov
xchg
jno
repnz
pop
addb
std
adc
cmp
sahf
push
cmc
loopne
add
outsl
pop
dec
lcall
cmp
insb
push
outsb
mov
clc
iret
mov
xor
inc
jmp
cmpsb
rol
mov
daa
add
addr16
ljmp
and
xor
lods
inc
sub
frstor
sub
aad
jmp
mov
sarl
arpl
xchg
daa
lcall
xchg
dec
cmp
leave
mov
sub
dec
scas
add
push
jp
cmc
andb
mov
pop
and
dec
lahf
dec
push
jmp
ret
cmp
das
push
and
dec
idiv
fnstenv
sahf
mov
sbb
imul
lret
inc
vmread
imul
cld
or
iret
fld
lds
loopne
sub
inc
mov
add
push
and
adc
dec
scas
shrl
fdiv
lret
xchg
inc
call
sub
cmp
sub
mov
clc
fldl
movsb
lcall
test
popa
movsl
adc
cwtl
mov
test
outsl
test
cmp
rorl
mov
or
mov
xchg
cltd
pop
fwait
xchg
xchg
into
add
jo
xor
inc
mov
xchg
mov
and
int
incb
arpl
pop
xchg
xlat
jp
xchg
and
fcmovnu
daa
out
xchg
xor
lods
xchg
rcrb
jns
out
add
push
aas
cmp
leave
pop
dec
movsb
ret
pop
out
or
or
sar
xor
clc
mov
out
sub
testl
out
pop
push
mov
jns
xor
fsubl
into
jl
pop
jp
adc
jle
stc
andb
repnz
pop
dec
push
mov
or
cmp
dec
mov
jo
stos
cmp
inc
or
cltd
je
xor
add
adc
lods
pusha
fistl
std
adc
lock
xchg
cmc
push
dec
lahf
enter
arpl
xchg
adc
inc
dec
fisubl
or
cld
push
clc
cs
dec
jle
push
dec
xchg
jno
pop
cwtl
inc
andb
and
jae
scas
fidivrl
jnp
into
push
out
push
dec
add
or
js
jle
mov
push
jge
sbb
cmc
imul
sahf
mov
daa
lret
stc
cmp
gs
push
inc
rcrb
mov
cmp
inc
or
ret
add
imul
inc
cmpsl
jg
inc
xorl
jmp
int3
and
les
inc
mov
lret
inc
sbb
dec
push
fldenv
pusha
dec
xorb
and
popf
orl
jae
inc
sti
div
push
sub
mov
inc
dec
out
xchg
jo
mov
or
call
push
jg
mov
adc
sub
scas
inc
jnp
in
add
jno
in
pusha
pop
pushf
push
push
hlt
push
jne
dec
pop
pop
jg
cmpsb
push
push
imul
pop
in
stc
mov
test
cs
add
mov
xlat
inc
add
mov
pop
jns
rolb
sub
push
sbb
cmp
or
faddp
nop
mov
movsl
jecxz
lods
mov
push
sub
pop
sub
and
push
popf
jnp
dec
and
imul
ficoml
mov
nop
rol
gs
lret
jg
ljmp
cmp
ficoms
ljmp
mov
push
std
les
fsubrs
add
shl
lods
push
test
out
lcall
leave
clc
mov
jbe
push
add
mov
les
and
or
cmp
jno
jnp
inc
push
pop
or
fucomp
jbe
into
inc
mov
xor
addr16
cs
dec
push
dec
sub
push
xchg
add
cld
stos
xchg
jle
arpl
push
pop
and
ss
adc
popa
cmpsb
icebp
imul
fisttpll
or
pop
jecxz
add
iret
fdiv
xor
inc
loope
mov
fwait
out
cwtl
pop
inc
pop
dec
mov
add
inc
jmp
js
mov
push
sub
mov
sahf
aad
xor
inc
add
cmp
jo
push
rcr
scas
or
adc
push
and
cmp
jmp
sub
adc
adc
stc
sbb
or
pop
pop
inc
fidivrl
ss
push
scas
xlat
in
dec
sar
pop
aad
out
out
stc
lods
push
lahf
shr
dec
lock
mov
aas
pop
jno
mov
scas
ds
mov
mov
jmp
stos
mov
pop
bound
mov
mov
pushf
aad
xchg
jmp
lcall
dec
xor
sub
sbb
test
pop
divb
aad
ss
adc
stos
xchg
xchg
stos
add
xor
xchg
or
or
sub
push
and
adc
adc
mov
mov
inc
jg
js
enter
mov
dec
xor
cwtl
xchg
jb
mov
mov
xchg
lret
mov
jmp
add
repnz
and
xor
inc
fimull
leave
enter
jl
pop
sub
sub
push
icebp
lea
test
push
lock
push
test
mov
add
shll
dec
lock
stos
xor
leave
xlat
jl
pop
imul
fs
mov
aas
mov
stc
bound
in
aam
test
lret
loopne
int
push
or
fcomps
je
push
cwtl
insb
int3
cwtl
adc
mov
sti
xor
and
adc
push
inc
sub
push
daa
shrl
stos
cmc
adc
dec
ja
call
das
inc
jmp
pop
push
jns
dec
jns
je
js
lods
fldcw
pop
cs
adc
adc
sub
hlt
push
shlb
and
popf
cmpsl
jl
stos
xorl
and
push
subb
dec
xor
daa
and
iret
mov
xor
dec
mov
and
cltd
pop
add
ret
jnp
insl
jle
adc
stos
mov
mov
jecxz
notb
mov
jae
lahf
push
in
jb
push
inc
mov
jmp
lahf
nop
or
pop
inc
sub
loopne
lds
mov
test
cmp
sahf
sub
push
and
fiaddl
or
mov
push
es
or
sub
aas
mov
mov
push
inc
xchg
add
dec
int
movsl
push
jae
aad
dec
mov
loop
and
icebp
pop
push
push
gs
xor
xor
dec
shlb
sub
jmp
std
xchg
inc
pusha
lahf
lods
int3
mov
sbb
and
adc
xchg
lods
adc
sbb
mov
addr16
ja
adc
cmp
sbb
std
and
stc
pop
lock
jae
cmp
jmp
mov
std
das
xorb
outsl
pop
xchg
outsl
test
sub
inc
jo
xchg
mov
mov
jo
push
jp
dec
loope
push
lock
xor
loop
add
icebp
or
popf
movsb
mov
ror
mov
lret
lcall
mov
out
mov
push
xchg
cmc
gs
push
sub
shll
jmp
sub
push
in
pusha
mov
add
mov
dec
das
mov
mov
pusha
outsl
add
and
lahf
add
jmp
add
add
movsl
xlat
jmp
shrb
frstor
rcll
jno
pop
aas
lret
push
inc
sbb
xchg
mov
std
xchg
jmp
or
xchg
add
fmuls
cli
lcall
subb
imul
icebp
cmp
mov
xor
xorl
fst
aas
cmp
push
sbb
hlt
out
sti
out
outsb
fnstcw
outsb
mov
push
ss
sbb
insl
stc
inc
xor
xorb
inc
hlt
dec
add
dec
add
jecxz
mov
flds
and
jle
push
mov
scas
fcompl
hlt
ds
inc
adc
lret
scas
jp,pn
pop
push
ja
push
and
sub
jo
cmp
jbe
shrb
adc
lahf
mul
aaa
push
inc
mov
xchg
int
lods
mov
xchg
ss
or
jb
pop
mov
push
or
sbb
push
pop
pusha
jecxz
stos
sbbb
mov
add
xchg
icebp
xchg
iret
loope
jle
stos
jnp
inc
mov
aaa
jmp
jno
push
lods
lock
std
dec
xor
dec
or
push
sbb
mov
inc
xchg
adc
and
pop
pop
mov
movsb
pusha
cmp
pop
mov
movsl
ret
dec
mov
jge
dec
cmp
cs
jmp
scas
in
pop
mov
cmpsl
adc
ffree
daa
scas
and
mov
inc
js
in
fsubrp
or
and
lret
ret
jnp
leave
sub
mov
iret
lods
jp
ret
mov
jg
arpl
call
stc
jae
dec
bound
xchg
call
sbb
sub
ret
mov
and
fidivrl
js
loope
scas
dec
in
iret
and
dec
je
popa
shlb
pusha
cmp
stos
and
add
xchg
sub
in
sahf
loope
movsb
jmp
sbb
xchg
sub
mov
lret
adc
ret
dec
adc
mov
jmp
shlb
xor
lcall
jnp
mov
adc
icebp
lret
test
dec
inc
ret
cld
push
pop
lcall
mov
xchg
ret
cli
cmp
cmp
insl
push
mov
jecxz
or
les
js
mov
xor
mov
cmp
in
stc
sbb
xchg
push
sub
jo
hlt
mov
and
add
inc
into
mov
jno
or
inc
std
iret
mov
aas
popa
add
inc
xchg
in
add
in
sbb
sahf
clc
fistps
inc
into
pusha
das
fildll
sti
mov
scas
jmp
popa
dec
cmp
push
sbb
dec
movb
sahf
test
xchg
push
fcompl
push
aas
sub
jg
test
loope
cmp
sbb
jnp
sub
loope
inc
push
sbb
push
mov
xchg
sbbb
or
shll
inc
filds
es
xor
cmp
cs
dec
xorb
in
push
andb
cwtl
wbinvd
add
mov
mov
mov
ja
adc
inc
and
xchg
fdiv
in
sbb
nop
jns
pop
pop
test
fwait
es
sub
add
pop
inc
mov
mov
mov
test
stc
fldcw
fstl
nop
cmovl
sub
xor
cmp
sub
mov
cltd
pop
push
mov
cwtl
mov
and
mov
out
sarb
fldenv
mov
fdivl
and
daa
mov
inc
cli
cmp
cmp
mov
xchg
cs
sbb
call
add
xlat
xchg
cmp
and
jp
push
push
mov
into
int3
add
sarb
iret
das
cmp
sbb
lds
mov
pop
xor
aaa
xor
roll
push
ljmp
fmull
je
inc
ja
xchg
dec
xchg
lcall
ret
mov
sbbl
add
add
sbb
pop
push
lahf
mov
mov
jl
sarb
sbb
pop
xchg
and
aaa
pextrw
cld
xchg
mov
push
cli
push
pop
shl
and
pop
das
fcmovne
mov
xor
test
movsb
stos
bound
test
cmc
fisubs
push
xor
adc
and
jge
mov
cmpsb
test
sub
fwait
jmp
mov
sbb
imul
into
mov
rdtsc
inc
std
xor
cmp
cmpsb
sbb
push
shrl
rdmsr
loopne
cwtl
imul
inc
cmpsl
lea
jl
in
sbb
adc
lock
sbb
fidivl
xor
loop
lds
daa
ror
lahf
lea
das
hlt
out
sbb
insb
sub
jge
lret
mov
dec
add
les
add
mov
adc
arpl
inc
mov
pop
sbb
lcall
pop
xchg
das
xchg
cmpl
mov
mov
sbb
mov
and
pop
inc
out
daa
mov
notl
negl
aam
or
fistpl
cmp
jae
addb
add
aad
push
add
mov
jne
rclb
leave
sbb
mov
pop
rcrl
das
xor
clc
add
jno
gs
rclb
ret
or
mov
addr16
add
inc
dec
andl
jg
push
scas
ja
and
sbb
cmp
mov
test
loop
js
jp
aad
into
out
pop
mov
in
pop
sbb
mov
movsb
and
sub
inc
sbb
out
not
clc
jbe
pop
adcl
inc
jp
add
sbb
fisubs
mov
mov
nop
mov
and
insb
popa
lods
dec
cli
mov
cmp
mov
es
cmp
push
sar
sub
push
pop
incl
clc
imul
iret
push
xchg
call
ret
xchg
flds
push
in
dec
lret
jae
jb
inc
push
jnp
fcomi
cmp
cmp
adc
imul
cmp
inc
jge
cmp
cs
push
jg
xchg
lods
dec
xor
aad
aad
jbe
popa
mov
xorl
cltd
js
movsb
mov
xor
mov
mov
xor
mov
dec
data16
dec
pop
outsb
insl
rorb
add
adc
rclb
leave
xor
popl
pop
lods
xor
xor
xor
jmp
pop
xor
sbbb
popl
jecxz
xor
and
ljmp
mov
inc
dec
mov
rol
js
and
arpl
mov
orl
bound
sbb
aad
repnz
dec
inc
cmp
out
cmp
push
loopne
imulb
sbb
insl
add
testl
pop
fwait
inc
vpsubw
dec
xor
fildl
mov
cmp
xchg
xor
daa
mov
addr16
push
push
adc
adc
rolb
cmpsb
sbb
nop
cmp
mov
add
push
sub
xchg
lret
ja
in
popf
sub
xchg
xchg
dec
out
lods
add
call
loopne
pop
xchg
loopne
mov
fisubrl
je
inc
sarb
cmp
pop
sub
rcr
inc
inc
arpl
push
enter
xor
or
dec
xchg
mov
and
mov
test
or
sarb
lret
add
aaa
mov
dec
add
aas
fdivrp
adc
or
lock
iret
dec
add
call
test
sahf
sub
rorb
inc
daa
sub
cmp
push
xlat
sbb
pop
mov
mov
scas
jmp
in
ret
jbe
popf
cmp
jne
lock
push
lock
jl
xchg
or
enter
or
sbb
aas
pop
rcrb
or
xchg
dec
dec
ja
cs
lock
jg
fs
dec
xor
adc
pop
or
cmp
outsl
cmpb
stos
push
xchg
jns
pushf
popa
push
xchg
push
lret
xor
pop
shr
addr16
loopne
test
scas
inc
leave
stos
nop
push
pop
addr16
je
mov
push
xchg
out
adc
mov
fnstcw
repz
cmp
pop
and
dec
add
rol
inc
fnstsw
dec
xchg
call
mov
sbb
cltd
or
sub
je
shlb
add
inc
cmp
xor
lods
imul
push
les
dec
adc
in
dec
lahf
xchg
test
je
sub
mov
pusha
adc
iret
add
in
xor
or
stc
mov
sarl
pop
push
mov
dec
dec
test
in
in
xchg
movsb
addl
xor
in
sbb
and
push
addr16
repnz
dec
rcl
jmp
in
ret
fisttps
aaa
arpl
into
xor
ret
xchg
adc
hlt
adc
insb
xor
sbb
push
idivb
lock
inc
xchg
popf
dec
sbb
sub
jg
jecxz
std
test
xorl
in
sub
fldenv
add
je
pop
jle
dec
iret
popf
repnz
jo
daa
mov
fnsave
in
fsts
sub
dec
je
sbb
xor
test
pushf
ja
ret
sahf
xor
ficoms
adc
call
or
lcall
gs
xchg
daa
pop
push
dec
inc
int
jp
fs
and
adc
outsl
xlat
mov
mov
sbb
mov
arpl
inc
xor
mov
or
xor
aad
push
negl
and
sbb
dec
push
movsb
mov
inc
call
getsec
xchg
aas
int3
cld
mov
cld
subl
popa
cmp
xchg
stc
loop
add
insb
ret
dec
lret
jge
jnp
sbb
je
jnp
xchg
cmp
aas
adc
aas
andb
mov
fs
mov
daa
mov
xchg
mov
jl
mov
sub
popa
and
push
subl
jecxz
in
xchg
outsb
in
sti
inc
xor
sahf
int
jmp
xchg
sti
loop
or
or
insl
movsl
in
inc
inc
mov
pop
adcl
xor
pop
clc
ffree
pushf
xchg
mov
inc
fs
dec
clc
in
adc
inc
cmp
and
xchg
push
loope
mov
js
enter
push
pusha
adc
imul
xlat
daa
pop
lahf
adc
ss
fistpll
repz
mov
insb
mov
fucomi
adc
add
popf
xor
arpl
xor
ljmp
xchg
mov
cs
push
xor
sbb
stc
jp
jp
ss
shl
mov
dec
pop
jnp
andb
xchg
ss
dec
cmp
push
pop
loope
jo
neg
cmpsb
call
and
mov
or
jo
xor
or
lea
fcmovu
cmpsb
bsr
fstl
loopne
fwait
inc
lods
in
shl
jae
jg
dec
add
dec
inc
xor
jecxz
dec
dec
lock
out
mov
mov
out
test
lods
adc
jp
sub
inc
push
pop
lret
pop
dec
push
loope
xchg
xchg
dec
bound
pushf
pop
dec
rol
cli
adc
dec
xor
test
cmp
mov
sub
and
stos
or
jmp
push
in
adc
js
sub
mov
add
lock
fisubrl
lcall
enter
cli
movsb
loope
in
testl
pop
add
lods
mov
or
mov
mov
fisubl
ret
inc
pushf
sahf
jle
pop
imul
sub
pop
leave
stos
js
xor
int
push
sahf
inc
aas
sbb
pop
jl
leave
inc
daa
fistps
into
adc
jg
sbb
int3
push
mov
jle
mov
daa
inc
insl
and
pop
aam
ja
sub
loop
xor
ja
add
test
repz
sub
in
cmp
out
add
jmp
sub
mov
pop
jge
insl
or
rcl
jmp
mov
xchg
pop
pop
shl
xchg
cmp
lret
cmp
sbb
inc
dec
adc
dec
aas
ret
mov
push
lcall
test
inc
mov
dec
dec
lea
xorb
js
ds
jge
sub
mov
dec
in
cmp
cmp
pop
cmp
jae
ja
xor
xchg
dec
es
iret
sbb
adc
mov
clc
push
adc
lcall
sub
jmp
lock
pop
pop
mov
test
hlt
punpckhdq
sub
mov
hlt
lea
daa
jle
out
outsb
or
cmp
mov
xchg
andl
adc
daa
pop
mov
sub
repz
jg
bound
push
mov
mov
push
mov
ja
inc
dec
cmp
cmp
xor
cmc
xor
movsb
dec
decl
popa
sahf
jo
xchg
out
mov
out
loop
mov
clc
add
push
add
and
shlb
arpl
cli
mov
sub
out
sahf
nop
sub
push
aas
lcall
sub
lock
mov
pop
mov
movsl
dec
sbb
dec
or
fnstsw
out
adc
cmpxchg
out
xchg
inc
inc
mov
pop
test
shlb
xchg
adc
pop
out
xchg
cmc
dec
jbe
mov
xor
and
testb
inc
pop
gs
pop
and
jae
aad
mov
data16
or
jno
lcall
je
movsb
cmpsl
sbb
scas
pushf
push
scas
movsl
loope
mov
fs
lds
sbb
jbe
xchg
sub
push
lea
popf
lret
push
test
gs
fldenv
dec
xchg
stos
ljmp
sub
das
mov
mov
cltd
sub
rcrb
and
and
xor
cmp
xor
mov
mov
xor
and
sub
dec
adc
mov
enter
add
mov
cs
jno
sub
decl
xlat
xlat
lock
sub
lods
pop
mov
clc
push
or
in
or
daa
sub
mov
inc
lret
sub
pop
add
and
ret
jecxz
sbb
stos
repnz
cltd
cmpsb
jno
loope
cmp
icebp
out
mov
cmc
fwait
shll
pop
pmulhw
jg
mov
push
addr16
pop
push
xchg
mov
fmuls
sbb
pop
jbe
xchg
pop
popa
cld
cmpsb
insl
xor
aad
add
and
scas
movsb
cmpsb
stc
push
aaa
xor
mov
mov
cmpsl
js
lret
in
repz
adc
xor
jmp
pop
mov
push
loop
pushf
adc
push
add
test
lret
mov
adc
and
ljmp
push
add
jecxz
jmp
lods
push
lcall
mov
aam
gs
push
jae
add
lret
push
rcrl
fdivrl
xlat
jl
xor
sbb
mov
dec
inc
das
lods
int
in
cmp
dec
adc
xchg
sub
leave
cmp
test
repz
pop
adc
cmp
cmp
jl
push
icebp
insl
cmp
xchg
fdivs
xor
mov
repz
push
arpl
out
out
cmpl
icebp
adc
in
loop
cmp
mov
xchg
cmp
das
or
movsb
dec
add
xor
sub
pusha
push
add
sar
and
mov
xchg
je
adc
adc
xor
cltd
cmp
in
clc
mov
shr
fistl
push
jmp
clc
test
or
pop
fisttpl
cmp
mov
add
test
sub
jb
xchg
adc
insl
add
sub
xchg
in
out
mov
sbb
adc
nop
sub
mov
add
jg
mov
jecxz
mov
cmp
sbb
jecxz
mov
int3
and
mov
in
sbb
jecxz
lods
lods
cmp
pop
test
add
repnz
jae
ljmp
pop
sbb
adc
dec
mov
jecxz
cmpsl
push
inc
aaa
or
add
andb
out
mov
mov
push
roll
sub
or
dec
fmull
mov
xchg
test
sbb
aas
xchg
mov
loope
or
xchg
in
xchg
ret
fdivl
pop
fdiv
lcall
ljmp
arpl
leave
mov
cmp
into
inc
das
out
cmp
pop
imul
mov
mov
mov
xchg
subb
jecxz
sub
insl
leave
imulb
mov
or
sahf
ret
gs
mov
lods
or
stos
mov
xor
clc
mov
jmp
insb
mov
push
xchg
aaa
paddd
shrb
pushf
push
inc
lret
test
in
cmc
and
lods
loope
push
add
dec
les
add
jb
fwait
cli
add
jno
lods
das
dec
cwtl
sub
shll
into
and
pop
iret
lods
stos
mov
fldenv
stc
sbb
aas
xchg
andb
push
cmpsb
inc
adc
ja
push
and
hlt
jnp
and
sbb
mov
lods
sbb
scas
cmc
lahf
sub
dec
shlb
imul
cmp
adc
clc
fs
cmpsb
adc
fidivrs
pop
sti
dec
rcr
out
sub
xchg
flds
jg
pop
icebp
adc
in
outsb
mov
pop
jle
scas
mov
and
into
add
mov
cwtl
or
stos
movsl
cmpsb
data16
sti
stos
jmp
xchg
mov
sub
inc
mov
out
test
out
pop
sahf
addb
and
mov
insb
iret
xchg
mov
sbb
movsb
not
inc
rclb
mov
push
cmp
bound
lods
fists
addr16
pop
mulb
xor
push
in
arpl
cmp
dec
dec
inc
andl
jbe
and
clc
enter
addr16
pop
icebp
cmpsb
cmpsb
jg
incl
xor
insb
fstl
outsb
xor
mov
pop
sub
adc
mov
repnz
push
stos
lock
xchg
mov
imull
in
dec
popf
enter
lods
sub
inc
jl
lods
dec
hlt
sub
das
xchg
pop
dec
push
xor
into
sub
imul
in
adc
cmp
je
cmp
mov
sbb
and
std
inc
int
xchg
arpl
xchg
or
std
popf
mov
push
fiadds
imull
fldl
aad
cmp
jp
daa
fwait
rcr
sub
aad
sahf
mov
insb
inc
sub
nop
xlat
fnstsw
or
call
jae
adc
inc
sub
jbe
lock
or
xor
cvtpi2ps
xor
sub
push
push
out
pop
data16
lret
out
popa
mov
mov
push
xchg
popa
lret
xchg
cmpsl
fdivrl
rcll
testl
incb
out
sub
jb
std
notb
cwtl
lcall
stc
mov
faddp
out
sub
xchg
inc
sti
adc
jb
rorl
pop
pop
ja
popw
add
call
in
out
mov
push
in
sbb
movsl
sub
xor
test
xchg
jmp
adc
bound
test
mov
in
or
in
fisubl
enter
movsb
std
inc
jmp
mov
shll
xchg
xor
jmp
cmc
jmp
fisubrl
xchg
clc
mov
mov
test
adc
xor
mov
out
inc
mov
ja
int
aaa
mov
fnstenv
adc
jecxz
stc
stc
inc
movl
cmpb
mov
cmc
popf
xor
pop
shlb
adc
sbb
mov
sbb
ja
rolb
fisttps
repnz
sub
dec
jne
mov
sub
pop
scas
mov
adc
pusha
cli
and
iret
scas
sub
outsl
shl
mov
ss
mov
adc
aad
mov
bound
xchg
mov
inc
popa
mov
rolb
push
mov
js
mov
in
push
stos
movsb
mov
cmp
outsb
popf
jge
fldl
addb
pop
cmp
pop
mov
inc
shl
push
jmp
push
jmp
aad
adc
daa
add
push
push
inc
cmp
jne
outsl
and
sti
ljmp
sub
ja
data16
add
jnp
imul
or
sbb
mov
test
dec
jbe
leave
stos
fld
fisttps
add
mov
sarl
add
pop
ficoml
mov
ja
inc
lods
bound
repz
fisttpl
outsl
adc
mov
push
inc
adcl
push
ficomps
mov
and
mov
cmp
sub
inc
sub
pop
add
push
inc
xchg
ss
jp
es
xchg
xchg
daa
lret
mov
adcl
xor
dec
sub
push
push
addb
jnp
stos
out
ja
shll
ljmp
cld
cltd
test
xlat
addr16
daa
jmp
test
inc
and
out
add
lcall
push
stos
push
cmp
add
scas
lret
and
sbb
js
cmp
ret
call
das
xor
out
dec
aad
lret
pop
sub
out
outsb
cmp
inc
lret
notl
add
nop
mov
push
mov
imul
movsb
ds
lods
mov
outsb
push
js
je
mov
inc
in
bound
lcall
mov
mov
int
xor
into
cs
lea
testl
dec
pop
dec
sbb
repz
insl
xor
mov
push
daa
or
test
stos
sbb
inc
or
outsb
mov
pop
out
mov
mov
push
mov
inc
inc
add
mov
xor
dec
cmp
xchg
arpl
mov
jb
mov
hlt
mov
es
add
out
mov
ds
enter
jo
outsl
adc
repz
jns
pop
orb
leave
imul
nop
sbb
jns
in
add
mov
ljmp
push
jl
movsl
shll
inc
js
sub
mov
cmp
or
jmp
mov
xor
sbb
notb
test
out
mov
cwtl
pop
dec
pop
add
inc
push
adc
movsl
add
lods
sbb
sahf
adc
dec
daa
sar
test
bound
ret
cmpb
cld
adc
daa
movsb
leave
and
push
cmc
xor
add
jp
jnp
out
imul
jo
mov
loope
shlb
mov
sbb
cwtl
mov
sbbb
adc
cmpsl
pop
and
cwtl
or
dec
xor
outsb
out
mov
lods
mov
ret
or
mov
mov
and
jle
push
jg
dec
stos
xchg
jnp
pop
xchg
jne
lds
les
jg
sub
mov
repnz
cmc
pop
das
and
aam
lea
and
mov
dec
aad
mov
fistpll
push
xchg
rcl
cmp
add
push
shll
nop
mov
movsl
int
aaa
test
cmc
xchg
fldenv
xchg
shl
mov
out
inc
cmp
iret
cld
xor
test
mov
andb
adc
aam
add
adc
out
addr16
lea
rolb
lcall
cli
int3
cld
xchg
cmp
xchg
fwait
cli
ja
adc
sbb
pop
hlt
stc
adc
pop
pop
icebp
jl
test
inc
hlt
or
test
mov
mov
adc
inc
stos
or
out
lret
shrl
or
jl
test
insb
sub
out
pushf
mov
mov
in
mov
adc
or
mov
cmpsb
inc
dec
aaa
cli
mov
mov
mov
popf
iret
pop
ds
adc
test
mov
add
fstl
in
ret
and
das
stos
inc
and
pop
in
shlb
pop
xchg
shlb
fdivrl
loopne
adc
jb
sbb
mov
lods
imul
jmp
pushf
enter
inc
push
cmp
sarl
dec
cs
mov
xchg
xor
ret
mov
arpl
idivb
mov
ja
add
cmc
xor
xor
js
xor
jcxz
pusha
or
scas
outsb
nop
roll
mov
repnz
mov
fldt
jno
enter
loope
push
xchg
xor
in
fdivr
jecxz
aad
inc
adc
xchg
cmp
sbb
imul
jns
mov
jo
jmp
pusha
cwtl
pusha
aaa
adcl
in
loop
mov
lret
mov
inc
dec
in
leave
pop
push
loop
xor
aam
inc
cmp
push
push
in
int3
hlt
ret
imul
mov
das
cli
inc
scas
int
adc
out
lahf
js
pop
adc
jmp
cmpsb
test
icebp
push
stos
xorb
cs
orb
dec
lahf
cltd
stos
inc
ja
xchg
lods
mov
sbb
inc
scas
cmp
js
mov
mov
mov
pop
call
lock
mov
cs
hlt
pop
sub
cmpsl
dec
jecxz
mov
dec
hlt
pop
les
sbb
pusha
aam
bound
mov
pop
mov
push
aam
fdivrl
icebp
in
les
lods
push
test
cmp
fnsetpm(287
sub
ljmp
cwtl
push
dec
adc
icebp
xor
mov
rcr
mov
sub
xor
mov
test
std
dec
cmpsb
sbb
jnp
xchg
pminsw
mov
jg
push
xchg
adc
dec
dec
pop
das
rcr
and
lret
std
in
xchg
test
out
test
xchg
cltd
icebp
lret
or
xchg
pop
push
aam
test
icebp
pop
fs
sbb
mov
sub
int3
sbb
fidivs
lret
mov
rcl
imul
adc
mov
mov
inc
adc
das
daa
js
std
fcmovnbe
iret
std
nop
loopne
xchg
push
jns
lods
xchg
dec
test
dec
mov
addr16
pop
lcall
fistpl
fsubl
jnp
mov
sbb
mov
jno
pop
xchg
mov
cmpsl
loope
cmp
stos
mov
adc
dec
or
mov
mov
jp
test
pop
pop
pop
sub
mov
mov
shl
pop
addl
mov
movsl
jne
mov
sti
popa
xchg
jae
push
cltd
repnz
lret
sub
add
jmp
fimuls
sub
or
inc
cmp
fnsave
aad
sbb
fisubs
inc
pop
add
cli
lahf
pop
stos
xchg
pop
xor
and
jae
push
fmul
jp
shrb
xor
loop
std
popl
mov
sub
out
aad
mov
pop
leave
xlat
std
daa
mov
mov
test
push
fwait
aas
mov
mov
add
adc
loop
inc
lods
xchg
push
iret
mov
xchg
pop
cmpsl
and
jno
push
or
popf
xchg
mov
mov
cmc
repnz
outsw
inc
stos
clc
cmc
mov
mov
in
leave
add
dec
aad
lret
daa
into
out
test
cmp
xchg
mov
xchg
enter
repz
lock
stos
ljmp
xor
push
stc
shlb
sbb
enter
nop
test
icebp
cmp
fcompl
addr16
rcr
push
in
int
scas
jecxz
dec
leave
jmp
mov
mov
or
test
cmp
out
add
add
popf
test
and
mov
sub
push
and
pop
and
mov
push
xor
mov
in
sbb
or
test
mov
and
fld
orb
sub
out
cmp
loope
popa
arpl
nop
pop
sbb
sbb
inc
pushf
fildl
jge
filds
xchg
adc
test
call
sub
or
mov
jno
jno
cmp
cmpsl
and
bound
adc
sbb
pop
pop
addr16
pop
dec
negb
and
std
or
outsb
cmpsl
insl
mov
or
les
cmpsb
pushf
test
mov
dec
cmc
lods
inc
cmpsl
shlb
add
loop
scas
aam
sarl
pushl
popa
xchg
shll
dec
shrl
cmp
or
xchg
rorl
push
popa
arpl
sbb
add
outsl
out
rcl
push
imul
icebp
insb
push
pop
jb
inc
addr16
ss
adc
jge
cld
pusha
pop
pop
in
aad
movsb
stos
test
xlat
pop
xchg
push
loop
test
cs
mov
xor
mov
lods
ljmp
mov
xor
sub
cmp
movl
jae
push
pop
sahf
xor
aad
or
cltd
jg
dec
jae
dec
lds
sbb
dec
and
rcrl
aas
adc
adc
out
and
mov
xlat
dec
ljmp
mov
test
sub
pusha
aaa
push
daa
mov
lret
out
daa
int
lret
inc
inc
sbb
insb
mov
inc
pop
lahf
out
cltd
pusha
mov
int3
dec
idivl
sub
aad
and
and
xchg
call
cld
mov
push
loope
repz
scas
pop
add
movsb
nop
and
push
mov
xlat
fdivrp
adc
jno
lods
or
mov
in
test
cli
lcall
call
loope
or
cmp
pop
lock
push
jae
pushf
adc
jp
add
dec
mov
and
push
dec
jno
cmp
shll
inc
je
imul
shlb
xor
sahf
dec
fsubrp
inc
jmp
jns
mov
sarb
cwtl
dec
lea
adc
pop
push
or
jbe
rol
ja
and
fstpt
lret
xchg
popf
adc
jmp
cmp
mov
or
inc
adc
js
js
jo
pusha
inc
sub
mov
pop
jo
fcomip
cmp
pusha
aam
lds
popa
in
lahf
addl
sub
lods
div
aad
add
int3
mov
xor
shlb
enter
mov
add
sti
gs
cmp
sub
sbb
xchg
jbe
adc
popf
jmp
xchg
jmp
loopne
sbb
add
and
add
je
mov
or
inc
add
addb
xchg
rcll
lret
dec
lock
sub
fsubs
push
push
stos
or
fwait
jae
add
and
add
cltd
adc
cmp
xor
fldl
add
jg
lock
xor
push
lcall
pusha
sahf
dec
dec
inc
xlat
mov
rcrl
sbb
aas
mov
inc
mov
mov
loopne
andl
cmp
pop
ds
sti
daa
addb
push
out
jo
sbb
leave
cs
jl
imul
dec
jg
xchg
sub
gs
and
loope
jmp
xchg
mov
sbb
stos
mov
lea
pop
xchg
or
mov
cli
mov
cwtl
xor
and
xor
mov
movsb
push
inc
xchg
test
jbe
outsl
test
push
outsl
pop
jmp
fildll
xorb
cmc
clc
add
in
sbb
inc
jno
in
cmp
and
push
and
push
pop
adc
dec
sub
inc
movsb
lea
mov
push
and
pop
cmp
adc
sub
nop
mov
insl
pop
push
dec
icebp
push
ss
fildl
add
mov
and
sub
or
push
pop
cmp
and
lsl
sbb
mov
ja
jns
imull
test
popf
cmp
push
xor
stos
aaa
sub
cmpb
in
mov
mov
fstps
daa
and
sbb
sbb
call
dec
test
clc
add
pop
mov
clc
fsub
ret
imul
mov
or
xchg
or
mov
rclb
fisttpll
loop
es
ret
fdivs
xor
lret
aam
jg
mov
jbe
cmp
in
lahf
push
cmp
mov
ljmp
addr16
lcall
ja
add
fs
aas
into
xor
ja
mov
sbb
mov
fistl
xchg
sbb
repnz
mov
push
mov
stc
push
clc
fidivs
xchg
mull
add
fisubrs
enter
clc
nop
xor
mov
xlat
jb
scas
pop
lahf
fstp
hlt
add
push
mov
add
das
mov
dec
out
leave
sbb
out
js
xor
mov
adc
or
iret
push
mov
sbb
add
flds
pop
adc
add
aaa
clc
sarb
xchg
ret
push
fsts
je
pop
mov
loope
jbe
cmp
sub
inc
mov
sub
mov
sub
push
ret
in
mov
sub
sub
shrb
daa
pop
fucom
fldcw
out
clc
and
xchg
ss
aam
lea
xchg
and
es
dec
add
gs
arpl
or
sub
divl
or
clc
jge
mov
test
pop
mov
fbld
shrl
neg
test
call
push
scas
pusha
dec
test
jg
arpl
jne
jo
jo
imul
xor
and
jae
jl
adc
xchg
das
push
lahf
test
mov
add
inc
mov
subb
enter
mov
lret
mov
jl
test
lods
outsb
mov
jns
xchg
addr16
pop
mov
mov
sbbb
cmp
jge
les
jecxz
inc
fistpll
movsl
mov
inc
mov
roll
int3
out
push
aas
mov
pushf
sbb
dec
test
mov
add
and
jb
and
add
out
add
xor
out
enter
es
fsub
cmpsl
mov
jmp
mov
in
dec
push
mov
mov
imul
jo
pop
clc
arpl
pop
jb
lahf
jae
xchg
xchg
adc
mov
je
push
ret
mov
popa
or
cmp
cmpsb
sub
cmpsb
loop
sbb
outsb
dec
xor
sub
imul
pop
pop
fnstsw
adc
sbb
test
cmp
inc
push
rclb
test
sbb
loop
mov
push
aam
mov
pop
aaa
jmp
ss
or
in
mov
lret
imul
dec
in
push
add
lds
mov
sbb
out
imull
jb
aaa
cmp
mov
pop
call
sbb
and
stos
sbb
jb
pop
add
cwtl
mov
test
cmpsl
jle
inc
pop
fcomip
rcrb
pop
inc
or
pmulhuw
inc
test
mov
xchg
decl
and
sbb
scas
sarl
jmp
std
jp
xor
xor
repnz
dec
cmove
stos
and
loope
roll
cmp
pop
cmc
xor
push
dec
inc
sub
cltd
mov
sbb
inc
test
int
lret
mov
in
rcll
sahf
ja
xor
inc
popa
xchg
sbb
sub
hlt
inc
pop
cmp
pusha
push
popa
adc
scas
and
adc
push
mov
insb
xlat
xchg
hlt
rcll
std
cli
xor
ljmp
push
pop
xor
int3
xchg
sbb
imul
pop
icebp
sbb
icebp
and
adc
add
mov
outsl
mov
mov
fs
fs
aas
insb
cltd
insl
loope
call
ds
lret
and
adc
dec
mov
test
sbb
adc
xor
outsl
sub
cld
push
ret
out
enter
insb
mov
xchg
or
sbb
stos
lds
outsb
mov
mov
out
dec
dec
int3
sti
fdivrp
sbb
sub
mov
sub
jl
mov
xchg
orb
and
mov
mov
mov
les
pop
inc
lods
mov
orb
addr16
out
mov
fcmovu
fwait
add
cwtl
mov
fisubl
and
mov
pop
or
ret
pop
aad
lcall
iret
lock
icebp
xor
push
fisubl
push
loop
fwait
mov
ss
xor
and
enter
ret
jb
fmuls
dec
adc
sbb
icebp
xlat
mov
addr16
scas
stos
daa
movntq
xor
loop
push
cmp
les
mov
xor
stos
sub
in
imul
xor
lahf
lds
cmp
roll
movsb
pop
jp
dec
hlt
pop
cmp
sub
push
movsl
mov
sub
adc
mov
fistpl
xor
icebp
jb
addr16
into
dec
shrl
out
or
pusha
cwtl
lret
pop
idiv
repz
cmp
fimull
cmc
jge
inc
push
cmp
push
pop
aad
dec
scas
in
cli
insw
bound
sbbb
fwait
push
ret
adcl
push
dec
mov
repz
movsl
repnz
and
jae
int
dec
pop
jns
inc
add
mov
push
in
xor
sbb
mov
pop
adc
popf
mul
test
fstps
inc
adc
shll
addr16
adcb
sbb
inc
and
lcall
cmp
ret
xor
out
or
adc
popa
xchg
into
inc
leave
fwait
test
cmp
out
icebp
jne
shl
fwait
js
and
fildll
addr16
sub
dec
mov
inc
rorb
sbb
repnz
inc
pop
test
lret
mov
arpl
movb
add
and
xor
mov
push
icebp
icebp
add
adc
jns
jecxz
mov
scas
fpatan
adc
adc
js
cli
leave
testl
or
mov
rcll
adc
push
inc
and
add
fst
movsb
sub
or
and
nop
sbb
and
mov
or
push
inc
mov
add
loop
addr16
jne
lret
adc
idiv
pop
and
ljmp
add
mov
pop
mov
cmp
and
and
cmc
js
loop
jbe
shrl
pop
ret
sbb
dec
and
push
addr16
das
sub
cmpsl
or
mov
pop
sub
ret
les
test
or
ret
xor
sbb
mov
loope
or
repz
and
inc
mov
and
addr16
call
mov
lods
inc
inc
shll
push
vsubpd
lcall
loope
add
xchg
psrad
fsubl
mov
push
jecxz
out
sbb
xchg
adc
les
push
jbe
aam
repz
into
or
xchg
pop
pop
pop
into
inc
fcoml
jne
and
andnps
adc
mov
fstpt
mov
rcrb
outsb
into
shl
fldcw
movsl
push
mov
adc
push
stc
sub
push
popa
das
fisttpll
add
je
subb
xchg
sti
adc
ljmp
ja
mov
mov
sbb
ljmp
int3
mov
add
push
addr16
push
jo
outsb
movsb
xchg
mov
adc
and
mov
add
add
pop
adc
addr16
int3
sbb
xor
xlat
int3
cmp
es
rcrl
jmp
xchg
pop
loope
mov
imul
jnp
pop
jmp
pop
cs
pop
lcall
popl
xor
push
and
xchg
dec
js
sbb
stos
jb
mov
mov
mov
lret
xor
movsb
add
sub
mov
mov
out
lahf
lock
fsubl
scas
stc
lret
or
ret
outsb
add
in
xchg
xor
daa
adc
xchg
jg
mov
ret
adc
mov
xchg
xchg
adc
out
int3
lcall
xchg
and
ja
adc
sbb
sahf
pop
sbb
lret
jg
sbb
or
aas
mov
mov
or
add
shll
out
rolb
jg
insl
les
mov
in
push
jp
inc
xor
out
jg
jmp
andl
andl
pop
testl
jb
sbbl
jmp
idivb
fidivl
not
adc
mov
sbb
mov
test
roll
push
cmc
shl
repz
pop
mov
mov
mov
lock
dec
rcrb
sbb
mov
out
aas
adc
scas
jl
out
sbb
daa
pusha
inc
cli
loope
pop
ds
cltd
cmp
dec
sbb
xchg
jle
jne
std
adc
or
adc
xchg
scas
push
aaa
and
shrl
sbb
sub
movsb
mov
inc
pushf
test
mov
inc
mov
push
fdivl
fldl
adc
adc
xchg
test
cld
mov
gs
adc
mov
adc
scas
mov
out
aad
or
shrb
mov
repnz
mov
inc
dec
dec
andb
mov
mov
xor
cwtl
negb
jmp
insl
mov
jo
stos
xor
jb
fsubrs
fisubl
imul
mov
mov
sbb
jecxz
lea
dec
fdivl
cmp
int3
andl
sbb
cltd
ds
jb
lea
clc
ds
or
mov
in
ficoml
and
enter
cmpsb
popa
mov
pop
fcompl
xchg
movsl
stos
fdivp
in
les
repnz
pop
xchg
sti
inc
jmp
mov
out
xchg
cld
outsl
insb
mov
and
sbb
xor
jo
flds
rcr
test
rcrl
cli
cmpsb
sbb
jge
lret
pop
xchg
sub
pop
sbb
xchg
adc
ds
clc
cmp
ret
xchg
pop
mov
xacquire
xor
sahf
das
and
xor
add
insl
fnstsw
fwait
test
jmp
jmp
cs
mov
test
ret
push
pushf
cltd
js
push
sbb
jle
jnp
mov
scas
sub
sbb
and
mov
pop
add
aad
jo
shlb
push
rolb
add
mov
xor
aam
xor
outsb
iret
and
aaa
jns
jae
jl
jecxz
out
js
cmp
and
leave
stc
add
out
or
sbb
mov
or
cmpsl
outsb
and
and
sbb
subb
pop
cmp
scas
cmp
std
icebp
lods
orl
cmp
in
lahf
bound
lahf
push
pushf
jp
mov
mov
cli
rolb
int3
repnz
outsb
mov
and
jnp
xchg
cmp
icebp
movsl
pop
fldenv
adc
mov
sarb
icebp
inc
addr16
stos
cmp
rcll
inc
imul
lahf
adc
jl
mov
imul
dec
xchg
pop
cmp
mov
fidivs
in
loop
and
data16
aaa
mov
xchg
pusha
loope
mov
ret
bound
scas
int3
rorb
and
int3
gs
cmp
add
dec
pop
and
shlb
ret
leave
call
out
xchg
std
stos
sub
adc
cmp
sti
inc
iret
push
adc
xchg
xor
pop
mov
movsb
popa
push
fsub
in
ss
jl
push
xor
cltd
add
adc
sub
in
test
xchg
outsb
xchg
fidivs
sbb
in
hlt
cs
lahf
and
out
stos
jl
cmp
mov
sub
pusha
clc
xchg
mov
inc
stos
rorb
cmc
sbb
inc
mov
xor
nop
out
stos
loopne
imul
cmp
sub
cmpsb
pop
into
bound
leave
ds
jae
dec
scas
fs
push
push
movhps
xor
mov
inc
inc
xchg
mov
push
cmpsl
mov
out
dec
inc
pop
insb
test
arpl
jbe
xor
jp
lea
mov
sub
jg
cmp
daa
aam
or
jne
iret
inc
xchg
xor
dec
fs
add
sbb
flds
mov
pop
mov
mov
push
adc
inc
xchg
clc
test
push
jl
mov
and
jge
lds
lahf
scas
pop
mov
cmpsb
push
mov
mov
xor
dec
adc
jbe
cs
cmp
sbb
xor
aas
sub
repnz
aad
mov
insl
push
int
data16
bound
test
lock
mov
xor
mov
faddl
enter
jle
mov
push
sub
gs
int3
pop
inc
shl
iret
xor
add
aas
pop
mov
and
mov
lock
jmp
fsubs
jge
xor
mov
cs
inc
pop
les
push
xor
imul
mov
lret
jl
mov
xor
xor
inc
mov
xor
cmp
stc
imul
mov
add
lcall
sub
mov
sti
push
cltd
out
jg
sub
scas
adc
shll
sub
and
pop
add
and
cltd
les
xchg
jecxz
xor
add
es
jge
lds
cmp
cmc
ret
and
mov
xchg
pop
pop
xor
lcall
xchg
sub
scas
or
sub
xchg
test
test
mov
hlt
js
push
f2xm1
adc
test
mov
add
adc
pop
push
push
dec
mov
dec
jbe
fistps
fildll
and
out
mov
idivb
scas
xchg
lcall
cwtl
sbb
push
cmp
jb
outsl
popf
out
movsl
mov
fcoml
inc
js
or
es
adc
jp
cmp
jne
cltd
sbbb
adc
enter
fistps
push
int
jg
push
and
pushf
mov
subb
rorb
arpl
loope
add
out
inc
cmp
nop
sti
pop
inc
xor
test
cmp
shlb
sbb
int3
rcl
and
sub
pop
or
mov
ja
andl
adc
adc
ret
hlt
cmp
jg
cmpsb
cmc
add
call
dec
dec
and
pop
cwtl
das
jae
pusha
outsl
nop
and
popf
mov
xchg
xchg
jle
adc
in
jns
adc
or
addb
call
sahf
movsl
int
fisubs
dec
fcmove
andl
jmp
mov
lea
mov
mov
mov
xchg
test
adc
fsubr
out
mov
push
jnp
stc
mov
out
mov
divb
and
push
sbb
fcoml
sti
push
pop
test
imul
enter
les
pop
dec
add
cmp
mov
inc
cmpsl
fidivrs
and
in
cmp
adcl
stos
out
add
pop
mov
dec
mov
ja
jne
mov
sti
mov
push
push
sahf
xchg
or
jge
fwait
jmp
pop
imul
xchg
pop
imul
jns
ret
scas
and
cmc
and
daa
insb
mul
or
or
sarb
lahf
jo
pop
dec
inc
sbb
cmp
fwait
pushl
push
popa
mov
fs
sar
adc
mov
xor
xor
inc
mov
jp
popa
push
xor
xchg
cmp
mov
addr16
cmc
xchg
jp
cld
adc
movl
xor
bound
out
jns
fcomps
lret
in
aaa
fisubrs
inc
pop
loopne
sbb
lahf
fs
popf
mov
dec
loop
mov
xchg
mov
lods
sbb
insb
push
sbb
pop
shlb
inc
sbb
xor
mov
cs
push
cmpsl
cmpsl
popw
adc
fs
das
out
rol
dec
lahf
mov
adcb
sub
and
fwait
insb
xchg
js
lret
mov
mov
test
outsl
aas
jg
movsb
dec
lret
push
mov
movsb
subl
addr16
nop
fldl
push
ror
jbe
jl
cmp
rcrl
and
cli
lds
lds
arpl
adcb
add
mov
idivl
dec
into
outsl
out
add
aad
ret
popf
int3
cmp
mov
mov
mov
add
test
push
andl
adc
out
jmp
ljmp
aam
fisubrl
add
sub
push
rorl
enter
adc
xor
loop
mov
jmp
mov
xor
dec
fidivl
fldt
fisttpl
jl
repnz
fstpt
fucomi
adc
rcrl
jbe
in
xchg
pop
pop
jle
sub
je
sbb
bound
pop
mov
jne
sub
test
call
xor
cmp
xchg
adc
and
jp
std
dec
sbb
cmp
adc
stos
or
or
in
xchg
cmpsb
push
pop
cmp
xlat
sbb
nopl
lock
jnp
dec
or
imul
test
jbe
movsb
mov
je
in
sbb
fidivs
out
push
pop
leave
mov
or
out
rcrl
clc
inc
sti
pop
mov
mov
jns
mov
das
cli
inc
sbb
lods
adc
jbe
xchg
movsb
mov
jnp
and
mov
mov
mov
push
cmc
adc
andb
xor
mov
sub
dec
jp
xor
repz
dec
jnp
or
in
sub
mov
jb
test
and
rol
push
or
add
insb
sbb
out
arpl
lret
xor
inc
popf
mov
mov
sub
mov
or
mov
pop
push
es
lock
sbbl
mov
ds
outsb
mov
pop
pop
dec
bound
or
jge
int3
jb
mov
sub
sbb
add
das
pop
jmp
mov
mov
add
jmp
int3
cs
sbb
stos
add
xchg
shlb
lds
push
xchg
imul
repz
into
pop
loope
fldl
sbb
icebp
adcl
add
add
enter
adc
stos
sbb
push
push
shrl
dec
add
push
aaa
pushf
stos
aaa
andb
ja
jae
mov
loope
mov
dec
lods
sub
inc
addr16
movsl
xor
jle
int3
filds
hlt
ret
pop
jmp
xor
dec
mov
cld
imul
das
popf
subl
pushf
mov
cmp
push
out
jbe
aas
mov
iret
lea
cmpsl
pushl
add
add
mov
mov
xchg
push
mov
add
cld
filds
xchg
ljmp
scas
xchg
dec
dec
in
xchg
push
pushf
fldl
push
mov
in
insb
das
pop
repz
mov
ds
dec
test
sbb
fisttpl
xchg
adc
pop
rcl
adc
pusha
cmpsb
outsb
sbb
ret
inc
mov
inc
in
inc
jge
xor
adc
cld
jbe
jns
xor
inc
loope
and
sub
pop
clc
ret
or
and
cs
data16
mov
inc
mov
dec
cmp
jbe
arpl
inc
dec
in
adc
leave
push
jle
xor
xchg
daa
movsb
cmp
push
enter
in
ljmp
sbb
test
mov
jmp
bound
pop
or
xchg
add
lods
test
and
mov
cwtl
ss
je
push
push
sar
test
adc
cmp
push
rorb
add
aam
mov
or
pushl
sub
add
aaa
pop
inc
push
lds
mov
add
aam
daa
je
fs
mov
push
imul
mov
pop
xchg
jno
sti
nop
bnd
stos
cmp
jp
out
mov
pop
repnz
in
ss
mov
and
and
jge
sub
cs
dec
xor
into
int3
sub
mov
sarl
int
mov
aas
or
dec
aas
lods
notl
pushl
dec
cmp
inc
into
push
mov
stos
ret
divl
or
xlat
stos
lds
and
cmp
or
out
or
into
incb
push
das
leave
jo
bound
mov
stos
inc
js
jl
dec
out
cmc
xchg
dec
ret
jp
popa
adc
or
data16
and
add
add
fsubrs
xor
in
sarb
push
aad
scas
iret
adc
mov
gs
mov
push
rclb
stos
xor
push
and
data16
adc
mov
ret
sub
fcomp
lahf
call
ret
fisubs
mov
rcrb
data16
jno
adc
cmp
in
andps
sti
pusha
in
stc
cmpsl
es
ds
xchg
sub
add
sub
sbb
push
mov
in
mov
push
pop
or
divb
pusha
mov
push
fisubs
orb
jecxz
xchg
mov
push
jle
ss
or
aaa
adc
cwtl
lock
out
aad
je
push
mov
out
or
loop
popf
stos
jge
push
and
out
out
lret
push
jne
push
jb
pop
call
aas
insb
jecxz
xor
xchg
pop
int
imul
push
cmp
and
loopne
xor
and
gs
sbb
jno
jle
in
lcall
inc
and
ret
and
loop
cmp
popa
insl
xor
xlat
in
movsb
cmp
adc
jno
in
out
mov
mov
mov
fidivrl
fwait
cmp
ret
je
in
sbb
out
jp
rorb
gs
sub
xchg
int3
sti
mov
add
in
shll
xchg
dec
or
and
mov
or
adc
adc
addb
push
jmp
clc
ret
ja
bound
enter
rcr
and
push
mov
and
add
xchg
adc
scas
movsl
mov
rclb
or
inc
in
jge
jle
fldcw
mov
xchg
push
pop
jbe
sti
out
ja
sbb
mov
jbe
jecxz
jp
and
inc
xor
sub
gs
out
pop
mov
fadd
mov
imul
push
loope
sub
and
jbe
push
add
in
cmp
in
or
mov
jmp
pop
pop
inc
inc
and
inc
add
xchg
xor
ljmp
xchg
sbb
or
push
lds
jne
pop
fnstcw
je
daa
push
jb
ret
dec
sbb
push
repnz
loop
add
mov
inc
xchg
enter
xchg
test
mov
nop
mov
inc
ja
cwtl
test
cwtl
movsb
addr16
fwait
lock
xchg
or
icebp
fisttpl
fisubrl
out
sub
rcll
or
inc
and
sahf
dec
rolb
or
add
and
mov
xlat
mov
fwait
pop
icebp
sbb
add
fdivs
in
fisttps
adc
adcb
cmp
mov
ss
push
dec
rcrb
sub
in
pop
sahf
daa
movsl
sti
cmp
stos
jp
push
pop
in
xchg
hlt
push
call
push
lret
xchg
xor
rcrl
mov
pop
jmp
movsb
push
dec
subb
mov
xchg
pop
xchg
lcall
push
shl
test
je
inc
sbb
cmp
subl
rclb
sbb
rorl
ret
imull
xchg
sbbl
mov
lahf
xor
pop
out
lret
jno
adc
icebp
gs
shrl
mov
lahf
jae
xchg
adc
repz
pop
mov
stos
fnstcw
ljmp
movsb
push
cmp
insl
test
and
jae
dec
outsl
xchg
int
or
add
data16
outsb
cld
lret
adc
sub
arpl
sbbb
adc
cmp
insl
mov
sbb
lods
jl
nop
fists
popf
scas
push
mov
loope
push
arpl
out
add
nop
or
sahf
mov
sbb
stos
int3
test
shrb
pushf
dec
add
and
push
sub
and
adcl
es
xchg
mov
pop
xchg
data16
scas
dec
or
mov
enter
test
ljmp
inc
push
dec
hlt
ret
xchg
loopne
push
pop
mov
aas
inc
xor
mov
adc
pop
addl
movsl
lods
jg
xchg
or
and
fisubs
mov
inc
cltd
mov
push
and
jnp
add
loopne
gs
mov
das
push
cli
lcall
je
cmc
xor
les
xchg
add
nop
cld
mov
xor
or
rorb
and
call
sbb
movsl
fwait
scas
sbb
arpl
out
fucomip
int3
insl
sub
imulb
mov
out
pop
and
popf
leave
mov
cmp
push
adc
xchg
aas
fistpl
loope
pop
andl
je
push
mov
jmp
xlat
adc
out
push
les
pop
aad
iret
or
testl
add
fistpl
bnd
pop
jecxz
insb
mov
add
mov
mov
or
or
dec
push
mov
fsts
test
push
add
cmp
mov
push
fnsave
cs
adc
mov
add
clc
lahf
xchg
mov
cmpsl
sub
mov
addr16
insb
mov
jl
enter
sub
aas
fsts
nop
mov
lea
adc
jl
faddl
mov
push
es
lret
mov
cmp
cmp
lods
sahf
dec
jmp
adc
or
push
bnd
push
dec
ret
mov
xor
mov
xlat
xor
loopne
lods
popf
arpl
rcr
pushf
repz
ds
or
xor
fsubrs
xchg
movsb
shr
push
int3
pop
mov
dec
cmp
out
xor
fdivrl
mov
push
or
imul
dec
or
insl
dec
cmpb
ret
jns
loop
sub
cmp
xor
mov
push
loopne
rolb
xor
dec
lcall
scas
sbbl
and
clc
adc
popa
fidivs
pop
inc
mov
scas
inc
sub
push
jmp
shlb
mov
imul
adc
scas
xor
push
jnp
push
aas
mov
dec
jge
leave
sbb
cmp
ss
jnp
sar
sub
icebp
xchg
in
add
inc
mov
ss
pop
push
cmc
cwtl
repnz
inc
dec
and
idiv
add
out
or
enterw
ret
lcall
stos
inc
aam
and
xor
pop
sbb
sub
xor
mov
icebp
xchg
xchg
pop
fistps
loop
sbb
cmp
into
mov
in
movsb
cwtl
cltd
mov
mov
aaa
shll
mov
je
cmp
shl
xchg
cli
xchg
nop
mov
int
xor
nop
jge
insb
sbb
mov
std
xchg
cmp
call
xchg
fisubs
enter
test
shrb
pusha
insb
mov
dec
fists
sahf
scas
mov
push
or
loope
shl
add
cwtl
pop
push
aaa
lahf
repnz
mov
rcl
add
daa
mov
bound
negb
cmc
jbe
dec
imul
or
ficomps
dec
ljmp
pop
daa
xchg
test
divl
xchg
out
ds
xchg
fimull
je
fisubs
xor
push
jmp
jns
jle
loope
sub
lret
pushf
out
mov
push
ret
mov
lret
insl
mov
std
cmp
and
jo
jnp
lcall
add
frstor
pop
pop
jbe
jo
mov
jge
aad
pop
scas
rorl
lret
fdivrp
stc
push
pop
aam
test
repz
sub
test
inc
dec
mov
xchg
testb
ss
rcr
outsl
data16
gs
sub
mov
js
push
sub
clc
push
lret
ljmp
pop
fnsave
mov
mov
mov
adc
les
xchg
lret
push
sahf
fiaddl
lahf
call
mov
adc
sbb
mov
push
cmp
pop
clc
jne
jmp
mov
outsl
bound
cmp
fwait
gs
sub
sbb
cltd
outsl
cmp
sbb
xor
test
inc
insb
and
cs
daa
sbb
mov
cmpl
jle
xchg
aaa
dec
jecxz
cmc
gs
sub
sbb
push
scas
inc
in
jmp
sub
sbb
repz
or
repnz
aas
loop
in
mov
mov
shll
testl
in
jne
ret
adc
icebp
sbb
enter
int
pop
rcll
cmp
cltd
push
adc
jb
mov
dec
dec
push
cmp
xor
cmp
xchg
icebp
xchg
inc
fwait
in
ret
pusha
scas
imul
inc
xor
and
jae
or
in
shll
neg
std
repz
subl
mul
cmp
jnp
test
sarl
movsb
popa
test
lret
xor
fwait
lcall
mov
iret
rol
xor
ljmp
mov
pop
insl
or
sahf
in
xchg
jno
cmp
xor
movsl
cld
aam
push
rol
xchg
fcomps
bound
mov
in
mov
mov
stos
dec
pop
pop
rcrl
xor
adc
xor
and
andb
adc
and
pushf
pop
movsl
cmp
aam
mov
out
mov
nop
add
mov
mov
mov
and
lret
jne
or
nop
push
cmc
mov
lea
mov
shll
lret
stos
cmp
dec
arpl
bound
inc
xlat
jo
jecxz
lods
shlb
jbe
dec
pop
outsl
adc
lods
dec
clc
pop
addl
iret
mov
repz
fwait
aam
xor
insb
idivb
lea
outsb
inc
popa
mov
jge
and
sti
jp
mov
jno
push
xlat
addr16
pusha
scas
inc
add
fsubs
sbb
arpl
mov
lods
pop
dec
sub
lods
xor
scas
jae
xchg
sarl
xor
push
xchg
jecxz
jg
inc
test
push
jbe
xchg
mov
push
mov
popa
jo
dec
jecxz
push
ret
dec
daa
stos
cli
lock
mov
and
loop
ja
inc
xchg
lods
cwtl
mov
insb
lods
ffree
aad
sbb
dec
insb
mov
pop
les
mov
fistps
pushf
lock
aaa
sub
mov
insl
rcrb
imul
cmp
loope
aam
lds
sahf
movsl
jecxz
push
je
inc
call
adc
add
mov
adc
jnp
test
cmp
in
adc
push
push
pop
daa
test
iret
das
adc
iret
cltd
movsb
fdivrp
xchg
scas
mov
fmull
pop
sub
loope
xchg
sbb
enter
stos
aas
lcall
mov
clc
clc
test
mov
stos
dec
js
outsb
cmpsl
faddl
outsl
inc
sub
xor
ss
fsubs
lock
xor
adc
and
push
loope
out
cld
cmp
repz
out
and
sub
or
xchg
cwtl
repnz
inc
jae
pop
mov
sub
lret
mov
mov
and
sub
add
lods
and
into
lea
xor
jo
rcl
arpl
jnp
outsl
shrl
jbe
syscall
jp
pop
jl
pop
cmp
fldcw
icebp
popf
dec
mov
or
icebp
outsl
daa
nop
inc
leave
rclb
jg
out
cmp
mov
mov
pop
insb
repz
cmc
xchg
and
stos
outsl
pop
cli
mov
insl
mov
jecxz
add
jl
out
and
pop
cmp
std
dec
and
push
sub
movsb
fiadds
jbe
inc
mov
pop
imul
sub
inc
mov
fidivs
jne
ret
jae
mov
mov
or
add
jnp
pop
sub
fldcw
cmpsb
sbb
push
and
lock
add
rcl
fbstp
testl
inc
push
in
outsb
xchg
aad
xor
sti
orb
fcmovne
out
jne
lret
push
jp
adc
mov
cld
lret
jb
push
fwait
lods
mov
add
cmp
fisubrl
shrl
push
add
scas
cmp
lods
stos
sub
daa
test
push
push
faddp
jns
shlb
inc
hlt
repz
jmp
xorb
lret
or
scas
lea
loope
or
pop
out
or
mov
dec
pop
xchg
dec
sbb
int
loopne
cmp
outsl
or
je
mov
ja
push
movsb
cmpsb
ss
cld
jae
int
int
add
add
mov
add
in
inc
mov
rolb
data16
shll
dec
std
pop
xchg
ds
cmp
pushf
mov
stos
xchg
enter
xor
out
movsb
in
scas
sbb
push
dec
fcoml
dec
mov
jo
or
lahf
movl
inc
sbb
push
pop
xlat
adc
jmp
cmp
mov
cmp
outsl
inc
sbb
inc
les
lods
repz
shl
jmp
imul
int
inc
jecxz
iret
mov
add
jno
stos
js
mov
pop
inc
sti
xchg
dec
dec
lret
mov
shl
out
dec
js
cltd
push
and
add
ret
cmp
mov
mov
imul
mov
sub
dec
pop
repz
jecxz
xchg
mov
insl
aas
insl
xchg
loope
fcom
jmp
and
int
cwtl
jns
enter
cwtl
xor
xor
adc
xchg
sbb
mov
fdivl
and
stos
jo
adc
mov
inc
mov
mov
int3
xchg
push
mov
cwtl
lcall
jb
loop
xchg
xchg
fstpl
and
inc
mov
push
and
dec
inc
ja
and
cmp
jmp
inc
aad
inc
push
and
mov
sti
fidivrl
out
mov
adc
fiaddl
mov
xchg
clc
add
xorb
xor
sti
je
jmp
sbb
addl
adc
dec
sub
add
je
arpl
inc
test
push
sbb
dec
into
aaa
mov
push
sub
popa
mov
jl
add
lods
mov
imul
lock
popa
pusha
outsl
pop
xor
pop
jb
push
adc
cld
mov
repnz
sub
popf
ds
aam
adc
dec
adc
mov
loope
jecxz
sahf
scas
mov
lods
in
sub
inc
pop
sbb
shl
adc
xor
mov
cmpsl
ljmp
or
fdivs
bound
fwait
sarl
iret
lock
leave
movsl
aad
insb
and
xlat
and
stos
add
sub
insb
mov
push
scas
cmp
movsb
cmp
fimuls
repz
loop
sbb
push
adc
push
push
pop
divl
clc
roll
lods
test
and
mov
imul
jmp
nop
bound
loopne
jmp
rolb
hlt
xor
xor
dec
andb
iret
mov
adc
push
sub
cmp
cld
stos
sbb
jle
mov
push
cmp
js
inc
mov
mov
xor
std
and
test
xchg
jp
sti
and
pop
fildl
jb
pop
jno
mov
jecxz
dec
inc
lods
xchg
xor
mov
addr16
push
fwait
cltd
iret
mov
bound
push
addb
mov
aad
dec
call
adc
mov
rcrl
arpl
clc
or
inc
add
add
imul
out
mov
inc
imul
insb
sbb
std
mov
adc
movsl
sbb
mov
lahf
stc
addl
inc
imul
in
push
mov
push
sbb
in
mov
mov
ficoml
rorb
out
xchg
js
jns
ds
pop
data16
or
xlat
jp
sub
dec
cmpsb
inc
xchg
enter
mov
es
ljmp
push
inc
mov
inc
sar
jmp
mov
jge
cs
int3
inc
int3
lock
xlat
or
sub
enter
mov
mov
and
in
pop
addb
lea
or
jb
jbe
cmpsl
stos
orb
ficoml
bnd
jb
aad
subl
add
pop
cmc
repz
sub
mov
repnz
insl
or
mov
lods
cwtl
adc
test
inc
enter
push
ret
xchg
jnp
xor
rorl
clc
inc
popf
imul
leave
lret
pop
leave
in
adc
inc
imul
shll
std
sahf
fdivrl
ds
pushf
out
pop
mov
jmp
inc
adc
and
add
dec
lret
in
ss
xor
ljmp
aaa
jle
fs
inc
mov
mov
sbb
dec
in
mov
cmp
subl
out
mov
pop
shll
sbb
out
mov
mov
mov
cmc
mov
fimuls
test
dec
adc
sbb
fldl
xchg
mov
gs
sahf
xor
lret
xchg
dec
js
lret
xor
arpl
leave
scas
cmc
pop
push
push
lret
std
cmpsb
orb
out
scas
iret
cmp
fdiv
mov
clc
movsl
add
sbb
cmp
jne
cmp
mov
lahf
pop
xor
mov
and
in
or
rorb
fld
jmp
leave
adc
lcall
lcall
mov
mov
mov
adc
lcall
jns
ss
cmp
dec
nop
jbe
push
add
pop
jb
dec
js
jl
or
xchg
sbb
mov
lock
pop
xchg
push
pop
jle
adcl
pop
rcll
popa
in
cmpsl
jb
jb
lret
push
mov
cli
push
cwtl
adc
inc
cmp
insb
inc
stos
stc
shrl
fnstenv
dec
adc
insl
scas
sbb
push
notb
add
pop
jge
sbb
ret
cmp
out
mov
mov
negl
inc
add
pop
and
out
test
cli
jl
stos
int
adc
repz
adc
cld
inc
test
or
daa
mov
shlb
test
mov
cmp
mov
inc
push
pop
adc
push
cmc
xchg
rolb
mov
js
sub
push
sbb
mov
iret
or
movsl
mov
add
pop
pop
stos
mov
test
test
bound
daa
and
out
out
out
pop
xor
ret
jb
orl
out
mov
push
add
mov
adc
push
into
add
mov
out
pop
dec
je
mov
xchg
int
fsub
push
xor
sbb
call
es
pop
ds
xchg
mov
add
mov
outsb
cmp
adc
hlt
addl
ret
add
test
cwtl
add
fbld
mov
imul
hlt
lcall
fcoms
pop
jecxz
inc
jmp
test
adc
push
lods
or
mov
pop
enter
push
insb
mov
sbb
lahf
aam
cwtl
es
xchg
adc
out
xchg
push
sahf
sub
out
sub
push
push
mov
sub
xor
mov
sub
sbb
icebp
daa
cwtl
dec
pop
mov
push
insl
popf
cs
inc
imul
mov
test
or
or
dec
jl
adc
test
cmp
mov
add
cltd
add
ret
mulb
inc
add
xor
inc
push
ret
jne
pop
xchg
xchg
jo
cmp
add
xchg
cli
mov
jne
lds
nop
mov
xor
fisubrs
hlt
or
cmpsb
cli
push
mov
push
jne
jle
dec
mov
sarl
jns
jmp
mov
mov
jnp
stos
lods
and
pop
movsl
sarb
lret
into
inc
xchg
test
fwait
xlat
dec
inc
jo
imul
cmp
out
int
pop
push
or
fld
mov
das
or
push
xor
shrl
sar
je
jp
pop
rolb
mov
in
jge
test
test
jle
add
jmp
sbb
daa
and
mov
mov
jnp
lret
xchg
scas
in
enter
pop
mov
sbb
scas
xchg
lret
movsl
jg
add
mov
insl
pushf
xlat
leave
jbe
roll
xchg
imul
cmp
movsb
jo
in
stos
xor
decl
dec
or
inc
cmp
mov
jb
xchg
mov
cmp
mov
cmp
mov
fstpt
push
push
popf
pop
push
mov
cmp
cwtl
mov
test
push
les
jge
jmp
jns
mov
xchg
sub
mov
mov
adc
dec
test
gs
dec
loope
mov
pop
pusha
das
ficomps
pushf
cwtl
bnd
sbb
movsb
pop
scas
lock
rolb
loop
jmp
fsubr
or
cmp
fmul
rcrl
insl
dec
cmp
icebp
test
cmpsb
mov
idivl
inc
enter
mov
jl
adc
mov
outsb
and
fucomp
push
inc
insb
mov
pop
cld
xor
jnp
mov
iret
pop
add
push
sahf
mov
mov
jmp
pop
xlat
mov
cmpsb
pop
subb
push
dec
sub
inc
loope
fwait
testb
sahf
fwait
stos
mov
and
clc
jmp
adc
in
xlat
rcl
imul
mov
addl
outsb
test
jnp
pop
adc
push
loop
sub
mov
outsb
xchg
int
sbb
jnp
dec
xor
ret
sbb
xor
xchg
jb
pop
and
clc
testb
cli
mov
dec
dec
sarb
iret
push
add
hlt
dec
sbb
adcb
or
mov
pop
inc
loop
xorb
xchg
mov
imul
ljmp
pushf
hlt
repz
js
aaa
cmp
push
test
fcomip
push
sub
xor
fcomip
inc
loope
jbe
push
pop
jb
aam
in
lock
lock
push
mov
ficompl
xchg
inc
push
adc
mov
jle
xchg
mov
insb
aas
in
cmp
xchg
fwait
repnz
js
xchg
popa
push
adc
adc
cmp
inc
inc
add
aam
xor
lea
inc
stos
sbb
inc
mov
pop
inc
xlat
test
sbb
push
lea
jne
into
fs
mov
xor
sub
push
add
aas
aas
stos
fwait
scas
sbb
fistpl
dec
test
mov
xchg
cwtl
sahf
clc
adc
inc
ja
dec
lret
mov
pop
dec
cmp
pop
jecxz
add
mov
jbe
pop
out
lods
insb
rcll
test
jmp
push
xchg
push
cltd
test
xor
shll
sbb
imul
and
dec
mov
push
ret
fldl
rdpmc
or
imul
jecxz
lret
loopne
pop
fsubrs
loopne
mov
in
imul
call
insb
lods
scas
out
xor
pop
in
inc
int3
and
push
mov
jp
shl
subb
aaa
shll
lods
dec
dec
cmp
adc
cmp
sbb
popf
sarb
jns
jg
xorl
mov
test
dec
leave
and
add
jne
xchg
lea
sub
fsubs
xchg
xchg
and
jp
or
jp
mov
iret
out
jno
mov
or
lret
cs
mov
adc
xlat
and
cmp
dec
or
popf
sub
and
xor
shll
jo
jecxz
aas
adc
inc
popf
movsb
cmp
dec
stc
sub
cmpsl
mov
mov
cmp
push
cli
cli
inc
xchg
fwait
or
push
roll
fmul
cmp
mov
adc
add
dec
xchg
sar
adc
fsts
mov
mov
rclb
nop
bound
popl
jp
insl
or
fcomps
ss
sbb
or
cwtl
mov
cmp
sbb
mov
push
xchg
std
jbe
daa
mov
push
adc
jge
mov
js
stc
scas
adc
mov
push
push
lods
lcall
sub
clc
mov
repnz
xlat
fxch
js
adc
ss
sub
into
aas
aad
add
mov
gs
nop
in
in
fwait
pushf
pop
imulb
shll
dec
scas
cmp
jbe
cltd
jle
inc
lods
dec
cli
fimull
in
pushf
test
jmp
mov
inc
iret
mov
out
idivb
aaa
mov
pusha
push
and
clc
adc
sbb
xchg
es
sub
rorb
pop
popf
std
out
pop
dec
je
shll
xchg
shr
dec
jle
fdivr
sub
cwtl
push
mov
jl
adc
ljmp
stos
loop
stos
pop
nop
xor
push
xchg
ret
mov
adc
xor
aas
mov
and
out
in
cmp
hlt
jne
es
sahf
pushf
ds
inc
outsl
mov
cmp
pushf
mov
xchg
inc
jbe
adc
iret
repz
and
paddsb
repz
pop
pop
adc
out
insb
push
jge
fsubrs
stc
inc
cwtl
cltd
xorl
dec
cmp
pusha
stos
push
push
pushf
fcom
pusha
push
fwait
pop
scas
popa
jge
scas
push
mov
sbbb
sub
les
loope
lcall
outsb
outsl
push
int3
out
data16
movsl
loopne
pop
aam
ja
or
icebp
enter
fwait
push
adc
mov
add
push
int3
mov
dec
imul
cmovl
aad
data16
je
sbb
dec
cwtl
jle
lods
add
les
fisubrl
inc
sarl
scas
jo
mov
fistpl
jle
xor
jge
push
cmpsb
add
xor
xor
xchg
mov
and
bound
adc
and
jne
fwait
inc
lea
std
xchg
scas
out
jb
mov
xlat
sub
scas
insl
cli
mov
mov
cmp
shrl
in
into
cmp
push
or
cmc
mov
mov
int
popf
add
neg
inc
lock
clc
sar
and
mov
add
mov
out
or
dec
mov
jbe
and
gs
jno
hlt
push
jae
imul
pop
inc
add
xor
rcrl
xor
das
jge
inc
pusha
imul
push
call
pop
jbe
jmp
std
je
xchg
fadd
popf
cmpsb
mov
sub
outsb
xlat
xor
mov
aam
loopne
mov
aaa
cwtl
mov
inc
or
push
and
rcr
adc
shl
jnp
pop
push
mov
ja
pop
out
mov
mov
push
mov
push
ja
pushf
xor
stos
mov
lret
xor
outsl
pop
out
ret
arpl
jmp
inc
add
pushf
inc
lret
outsb
lock
sbb
iret
and
xor
push
jns
inc
in
mov
imul
jae
pop
clc
xchg
enter
imulb
or
or
mov
cmp
mov
jnp
in
stos
rcl
push
sub
pop
icebp
shll
fsubl
iret
outsb
mov
inc
andl
push
fwait
pop
xchg
ret
daa
imul
ljmp
push
mov
cs
popf
gs
and
adc
cmpsb
sub
sub
dec
mov
repz
pop
sahf
arpl
xchg
sbb
inc
xchg
ja
nop
enter
xchg
addl
pop
xchg
push
imul
xor
pusha
arpl
dec
inc
cmp
jo
cmp
cwtl
or
push
mov
aam
test
notl
xor
push
or
inc
mov
push
xor
outsb
cwtl
das
lcall
cli
or
cmpsl
cs
push
nop
fcomip
sub
lock
dec
imul
push
ja
xor
not
lds
cld
pusha
dec
imul
push
aaa
lods
push
in
adc
jmp
in
mov
aas
xchg
jne
lret
addr16
out
out
adc
test
sbb
int3
push
xchg
fcomps
shrb
add
or
mov
imul
cld
addb
ljmp
ret
inc
daa
fst
jge
push
push
add
es
pop
lahf
lds
lahf
sub
jl
jns
addb
fists
out
mov
dec
xchg
subl
test
sub
add
lods
cmp
inc
stos
push
scas
mov
inc
jp
mov
push
shrb
mov
lret
outsl
push
dec
push
cmpsl
pop
mov
mov
leave
inc
fucom
push
push
mov
imul
pop
or
mov
or
mov
popf
nop
pop
ljmp
icebp
push
and
pop
mov
lods
loopne
ret
xor
xchg
iret
push
fwait
cmp
movsl
cmp
jo
pop
std
mov
test
fsub
into
xor
add
or
mov
cmp
add
sub
xchg
mov
outsb
fsubrs
pop
sub
pop
jl
ret
lock
mov
dec
mov
pop
in
dec
dec
test
mov
dec
or
testl
pop
mov
push
jb
sbb
pop
xor
insb
inc
inc
add
sub
jecxz
es
push
int3
cwtl
scas
cltd
in
rcrl
enter
idivl
add
sub
push
ljmp
repz
cmc
or
fldt
fldcw
push
mov
sbb
ja
popa
push
stos
sti
add
pop
jae
push
add
in
mov
mov
jnp
leave
sbb
adc
ljmp
out
mov
lods
xor
jbe
mov
rolb
lods
mov
test
pop
aas
jl
add
cld
ret
stc
fldt
jmp
inc
fidivrl
dec
je
and
jge
popf
or
push
push
mov
sbb
pushf
ja
xor
xor
jecxz
jbe
aaa
push
aas
enter
and
nop
inc
shrb
mov
mov
test
mov
data16
xor
sub
shl
repz
and
in
pop
sub
scas
andl
or
push
into
iret
addr16
xor
js
or
pop
test
dec
pop
jb
je
adc
sbb
mov
mov
or
sbbl
std
xor
ret
mov
ret
jmp
pop
ljmp
lods
adc
fisubs
pop
mov
xchg
mov
inc
stc
add
cwtl
xor
out
xor
mov
or
lods
sahf
fcoms
insl
pop
test
out
mov
std
out
outsl
xchg
and
rcr
scas
xchg
std
jmp
jne
pop
jmp
adcl
scas
in
aas
or
jbe
stos
out
xchg
mov
push
subb
xchg
shll
mov
xchg
inc
orl
clc
lret
push
cmp
int
push
je
mov
sbb
comiss
aaa
cmpsl
dec
add
inc
push
cmc
fldl
cmp
test
xchg
sub
pop
dec
adc
cmp
test
fstps
sub
out
insl
dec
fbld
lods
mov
fsubrs
mov
push
movsl
pop
xchg
xchg
mov
dec
jo
xor
cmp
add
scas
cmp
push
test
xchg
cmpsb
mov
mov
fistl
cld
or
jae
lds
xor
jmp
push
movsb
loop
in
das
cli
cwtl
pop
addr16
push
outsb
nop
lds
orl
mov
or
mov
das
push
mov
dec
aaa
mov
shll
xor
test
out
cmpsb
jae
shlb
cmpsl
data16
mov
and
outsl
lea
test
jl
fsubrl
cli
imul
mov
lahf
insl
dec
mov
imul
sti
xchg
jge
mov
xor
test
in
in
std
push
sbb
mov
movsb
mov
and
cmp
rolb
dec
stos
and
cwtl
inc
shrb
jns
mov
aam
fisubrs
movsl
hlt
cmp
test
lock
adc
push
pop
loop
or
or
inc
xchg
mov
mov
dec
fisttpll
add
cmpsb
fwait
lock
fstpl
cmp
mov
in
test
pop
xchg
mov
cltd
and
rclb
out
pause
out
sub
adc
inc
cmpsb
push
ss
xor
lock
test
repnz
xor
ficoml
lods
pop
std
movsb
xchg
rcll
movsb
sub
or
icebp
inc
inc
or
push
sub
push
out
pop
or
push
adc
jbe
dec
lret
out
xchg
push
xchg
test
mov
into
loopne
push
repnz
mov
movsb
adc
pop
sbbl
int3
lret
xchg
push
clc
cmp
jnp
out
xor
xor
lret
xchg
and
cltd
jecxz
xchg
loopne
mov
xchg
sub
sahf
and
cmp
xchg
push
pop
cmp
push
xor
lret
subb
idivb
push
xchg
dec
dec
roll
int
xor
cld
mov
mov
fldl
adc
insb
out
inc
xchg
lret
mov
js
or
enter
sarl
movsl
xor
mov
sbb
lret
fisubrs
clc
rcll
mov
push
std
xor
jecxz
dec
sbb
loope
test
mov
and
cmp
xor
rcrl
mov
adc
jl
jnp
push
add
test
addr16
test
push
fisttps
pusha
mov
cld
test
aas
dec
fcoms
lods
mov
adc
mov
jnp
aaa
les
sub
pop
jb
cmp
fs
xor
lds
jge
push
insl
mov
fs
mov
aam
xchg
xor
je
push
in
call
lods
stos
dec
mov
fwait
inc
mov
pop
aad
mov
mov
fsubp
and
pop
loopne
lret
insb
repnz
icebp
cmp
rcr
lahf
cs
arpl
mov
adc
and
or
jge
sbb
dec
cltd
leave
dec
inc
cmp
in
cwtl
sbb
popa
dec
popf
test
cmp
xor
lds
pusha
adc
lahf
into
cltd
scas
pop
enter
or
fcmovnbe
jbe
and
fildl
or
xor
sub
sbb
mov
mov
hlt
pop
sbb
js
pushf
mov
lds
addr16
adc
cmpsl
inc
mov
add
add
mov
rcrb
push
jge
outsl
lret
and
xor
xor
adc
invd
xchg
ret
popf
adc
cmc
in
push
jmp
mov
lret
or
pop
cmp
aas
cmpsl
sti
sbb
dec
and
add
mov
sbb
jmp
adc
pop
dec
adc
insl
out
pavgw
test
clc
and
in
mov
sbb
outsb
lea
dec
aaa
jae
mov
xor
imul
push
ds
jae
outsb
push
loope
or
dec
adc
iret
test
mov
jbe
les
mov
scas
push
dec
and
js
fs
or
pop
or
and
sarb
in
cmpb
mov
jb
xchg
inc
pusha
jmp
outsl
iret
jo
xor
or
lods
and
push
scas
xor
add
sti
add
cli
dec
dec
pushf
das
fwait
aas
add
rclb
jmp
or
notb
insl
jl
mov
dec
call
push
push
mov
mov
dec
scas
xchg
cmp
inc
lret
inc
cli
fidivs
sub
aam
cs
lret
push
mov
push
or
pusha
adc
mov
pop
aad
dec
xchg
cmp
sti
push
pop
xchg
loope
sub
aaa
ficomps
out
iret
aam
cld
xchg
shr
aas
xchg
stos
pop
aam
adc
imul
cmp
inc
pop
iret
insb
mov
jne
cs
das
sbb
sbb
aam
mov
je
popf
lcall
hlt
xchg
sarl
cli
mov
repnz
sbb
add
cmp
inc
lds
push
push
mov
lea
add
xchg
in
clc
sarb
mov
mov
mov
rorb
jo
pop
push
mov
rorb
sbb
hlt
cwtl
mov
fists
stc
cli
data16
mov
mov
fldz
stc
cmc
xor
and
fcoms
bound
imul
sbb
jle
std
ret
push
sub
inc
mov
addr16
ret
addr16
inc
lret
test
sahf
mov
mov
lea
pop
inc
sbb
pusha
cwtl
push
xchg
ja
mov
dec
orl
dec
xchg
cmc
cld
data16
and
dec
pop
sub
push
sarb
mov
in
in
pop
notb
enter
xor
adc
push
add
or
xchg
test
das
inc
cmc
jnp
mov
sbb
xchg
je
cmpsl
fadd
stos
cld
das
jl
xchg
ljmp
cmp
cmpb
dec
push
push
sbb
in
lcall
rcll
jg
ret
jnp
or
test
sbb
cmp
mov
jmp
cmp
pop
mov
stos
jle
xchg
inc
lret
fs
mov
into
cs
aad
mov
loope
movsb
jp
mov
pop
les
and
int3
outsb
ficoms
push
pop
ret
dec
test
jb
mov
dec
outsl
ja
insl
bswap
aas
xchg
fadds
aam
pop
or
sub
test
or
je
loope
or
jne
sti
je
push
les
mov
xor
add
mov
cmp
xchg
xor
pop
lds
in
sub
sub
pusha
clc
jae
jmp
in
test
push
jns
or
mov
dec
cmp
cltd
pop
adc
out
int3
or
sahf
push
mov
push
call
cli
mov
cmc
vpunpckhdq
stos
fidivrs
dec
daa
aam
pop
arpl
push
xchg
sbb
ja
adc
gs
inc
ss
push
jae
and
ret
xor
cmp
stos
addr16
sub
arpl
rcrl
pop
mov
arpl
push
inc
jge
cmc
jne
mov
cmp
push
outsl
repnz
xchg
dec
mov
mov
adc
mov
call
movsl
sub
test
mov
pop
mov
aaa
inc
xor
data16
pop
in
out
lock
fs
pop
ror
nop
out
sub
test
and
out
xor
inc
js
or
push
ret
gs
test
jmp
and
imul
aam
repnz
jg
sbbl
aam
lods
out
mov
mov
dec
lea
sar
cmpsl
pop
mov
aaa
dec
cmp
or
int
rorb
sarl
pop
repz
enter
push
mov
push
cmpsb
orl
and
push
cmp
add
insl
or
mov
in
sbb
insl
mov
ror
jle
das
pop
ljmp
jl
inc
sbb
cmc
jo
jge
js
mov
out
pop
loopne
jmp
mov
fnsave
out
in
enter
adc
outsb
xchg
and
add
aam
test
sub
and
lods
lahf
frstor
and
sbb
push
shrb
sub
pop
push
pop
pop
aad
and
push
ljmp
push
fwait
ds
fnstenv
aaa
imul
dec
or
or
repz
jl
aaa
pop
out
push
loope
in
xor
lret
push
push
push
pop
xchg
repz
xor
fsqrt
loop
push
mov
stos
fisubrs
mov
scas
xchg
imul
pusha
jge
xor
icebp
add
jb
nop
or
mov
popa
outsl
cmc
fcomps
repz
std
inc
xchg
cmp
test
pop
js
and
pop
bound
jp
pushf
inc
rcrb
sbb
mov
lock
jb
push
sub
cld
mov
std
jo
loop
mov
push
and
or
dec
xchg
jmp
sub
loop
and
mov
imul
clc
bound
in
mov
xor
lods
push
push
jl
loop
test
sub
and
adc
daa
loope
insl
or
loopne
cmp
mov
jmp
lret
call
xor
mov
repz
sti
loop
cmp
push
nop
out
in
push
out
pop
int3
adc
push
sbbb
hlt
ds
or
pop
insb
sub
in
aam
lods
mov
dec
add
imul
imulb
out
cld
nop
repnz
pop
lret
lods
mov
pop
addl
sbb
fildl
mov
inc
lock
pop
rcl
pop
pop
call
cli
mov
arpl
cltd
popa
push
jmp
lret
popw
add
sbb
adc
mov
call
cmp
lock
mov
sahf
fdivs
daa
fwait
sbb
dec
pop
cmpsl
sub
dec
in
fimuls
mov
sub
xor
mov
sarl
add
leave
pop
clc
pop
ret
les
das
pop
xchg
add
dec
inc
mov
in
or
cmp
ror
ja
int3
cmp
pop
push
xchg
ss
jmp
or
xlat
outsb
push
and
faddp
jae
add
jmp
pop
dec
lods
js
xor
imul
sbb
out
fisubs
in
cmpsl
inc
decl
or
sub
push
mov
outsb
push
mov
ljmp
addr16
cmp
cmp
sbb
imul
sbb
mov
leave
mov
adcb
jno
pop
stc
and
insl
insb
and
imul
out
dec
pop
pushf
inc
stos
cmp
xor
out
aaa
mov
push
and
or
sbb
enter
xor
mov
lds
das
mov
sbb
xor
cmp
inc
cltd
stc
lods
sti
jecxz
push
out
xchg
dec
jns
cmp
jp
sti
int3
sub
cwtl
push
xchg
cmp
loopne
mov
xchg
jnp
stc
cwtl
sbb
adc
fucomip
cmpsb
adc
inc
push
ljmp
jmp
lock
push
icebp
lret
push
loope
ds
or
enter
dec
xchg
add
adc
aaa
jno
add
xchg
xor
adc
mov
jp
outsb
mov
jbe
fdivl
test
pop
adc
lea
scas
out
inc
insb
xlat
pop
adc
mov
inc
negl
add
imul
out
xchg
mov
cwtl
cmpsl
mov
and
and
in
and
pusha
push
orl
hlt
ret
mov
inc
pop
add
stos
push
add
repz
sbb
xchg
or
mov
cmp
lock
hlt
cs
pop
insl
pop
mov
dec
rcll
xlat
pop
jmp
loope
pop
mov
push
in
mov
mov
orl
and
add
jle
inc
fsubrs
aas
cmp
sbb
xchg
inc
sahf
rorb
lods
adc
insl
dec
adc
aad
adc
pushfw
jle
push
push
fcmovb
add
je
popf
push
hlt
rcr
lret
cmp
pop
lods
scas
jecxz
dec
je
xor
icebp
sub
cmp
in
loop
gs
mov
xchg
adc
dec
adc
mov
mov
mov
xor
and
fs
push
call
pop
int3
pop
or
mov
daa
and
andb
and
imul
jns
bound
adc
iret
xor
stos
push
lds
popa
cmp
insl
shlb
mov
dec
testb
mov
fisubl
lds
andl
adc
add
mov
inc
mov
cwtl
lea
mov
push
popf
inc
xchg
out
outsb
aam
sub
movsl
arpl
in
test
sbb
sub
inc
hlt
mov
addr16
mov
int
sub
fldt
mov
mov
pusha
into
incb
and
pop
ret
sbbl
xor
mov
mov
mov
int
sbb
outsb
dec
imul
fimuls
xor
jb
cmp
lea
fisttpl
stos
lcall
es
push
and
mov
push
inc
push
out
subl
icebp
jae
xchg
dec
sub
mov
cwtl
clc
and
cld
cli
imul
push
and
lcall
pop
or
cmpsb
scas
test
dec
out
push
mov
ret
std
mov
sub
pop
jecxz
std
add
dec
mov
fwait
or
bnd
and
inc
mov
es
mov
data16
xchg
icebp
pushf
cmp
and
mov
or
xchg
sbb
andb
inc
imul
push
add
out
mov
mov
jle
stc
xor
ror
pop
addr16
xchg
insb
sbb
fists
inc
mov
inc
sub
sbb
sahf
adc
sub
mov
das
sub
cmp
push
sbb
icebp
pop
push
scas
ret
push
scas
shrb
push
push
and
stos
les
dec
push
mov
or
into
dec
hlt
xor
xor
outsb
jmp
insb
mov
adc
scas
pop
jle
cmp
sahf
sbb
clc
xor
xchg
mov
in
andl
enter
mov
or
push
xor
ja
icebp
aas
adc
popf
mov
test
fmuls
je
leave
out
fwait
xor
ljmp
inc
xchg
sub
out
add
mov
aam
aaa
call
paddb
loope
out
push
jmp
out
imul
jnp
sbb
xor
sbb
and
xchg
pop
fcoms
dec
cmpsl
das
movsb
xchg
adc
mov
dec
inc
pushf
repz
ljmp
outsb
cltd
enter
test
fmul
mov
pop
jae
lret
push
sub
aam
mov
jge
sbb
mov
in
fdivs
push
add
sbb
out
ret
mov
ret
orb
xchg
roll
clc
xsaves
xchg
jne
sbb
outsb
dec
into
sarl
mov
cmp
sub
add
pusha
jl
push
sarb
inc
lods
filds
push
mov
xchg
imul
fdivl
pop
or
mov
ret
out
ret
pop
sbb
mov
loope
jnp
pusha
sbb
out
inc
popa
jp
popf
adc
or
addr16
sbb
or
pop
call
lea
pop
jmp
xchg
cld
mov
out
sarl
clc
jp
mov
jge
mov
subl
movsb
cltd
xor
subb
push
test
inc
xchg
jge
xchg
sub
sub
dec
loopne
xorb
cltd
sbb
dec
movsb
pmovmskb
lods
pop
sbb
loopne
imul
jo
add
jo
or
mov
push
shrb
xor
mov
pop
jecxz
lods
xchg
test
xchg
mov
mov
cmc
cwtl
movsl
sti
pop
push
iret
aam
xchg
pop
mov
shlb
mov
out
adc
inc
rorb
sbbb
mov
lcall
pusha
adc
jb
negb
push
push
fcoms
lods
or
divb
insb
xchg
push
cmp
scas
push
jo
lcall
mov
or
sbb
inc
out
lds
add
sbb
add
jo
push
cmp
ja
stc
fistpll
inc
hlt
shr
jns
out
xor
mov
pop
jb
imul
sub
sbb
xor
sub
adc
sti
add
call
mov
pop
andb
ret
popa
movl
sub
repnz
cmc
adc
sbb
push
xchg
xchg
fdivrl
xchg
or
in
fiaddl
ljmp
mov
insl
daa
outsl
ja
mov
mov
mov
lahf
cld
rclb
orl
aam
dec
shlb
mov
loop
movsl
ja
mov
rol
cmp
loope
push
mov
sahf
mov
testl
ja
sub
jp
fidivrs
mov
cmp
mov
xchg
mov
scas
dec
mov
xor
xchg
jb
mov
cmp
jae
add
jae
sub
dec
sarl
mov
mov
push
adc
jl
sbb
scas
push
dec
out
insl
xlat
jecxz
fucom
cmpsb
in
add
sti
outsl
push
add
or
jno
lea
ja
loopne
add
into
push
and
cmp
jl
push
mov
push
sub
add
ja
sub
and
notl
bound
bnd
inc
mov
xor
mov
lods
icebp
dec
push
sarl
mov
mov
xor
in
rdmsr
pop
jg
je
mov
adc
nop
imul
xor
xor
cmp
dec
xor
or
clc
ja
pop
inc
repnz
sub
sbb
cmpsb
cmp
imul
jbe
repnz
insb
jne
int3
mov
int
cwtl
and
andb
std
mov
add
repz
fwait
xchg
shlb
jb
xchg
inc
jne
cmpsl
adc
jb
jecxz
pop
rcrl
mov
test
cmp
jg
pop
insl
mov
sub
sbb
mov
or
je
and
xchg
push
stos
icebp
pop
cs
dec
xchg
xor
jb
lods
xorb
shrb
call
pop
push
inc
push
cltd
cmpsb
add
push
incb
stos
xor
add
mov
icebp
mov
and
lret
xlat
dec
adc
into
or
mov
inc
iret
mov
pop
inc
imul
xchg
fstpl
jno
push
add
ja
or
mov
sbb
cmp
in
imul
mov
ret
imul
fwait
xchg
pop
cwtl
xchg
call
iret
jecxz
in
test
dec
sbb
fsubr
adc
and
sub
scas
adc
adc
xchg
lcall
xor
jbe
xchg
jmp
test
adc
jge
dec
jl
and
inc
imul
daa
daa
roll
adc
test
int3
adc
add
ss
mov
fimull
cltd
leave
lahf
xchg
into
push
movsb
push
sbb
insl
adc
xchg
pop
shll
pop
arpl
xchg
mov
sarl
sub
ds
ja
lock
stos
xor
ret
xadd
repz
push
fdivrl
and
fsubr
inc
out
iret
nop
cmc
adc
mov
pop
cmp
jnp
or
insb
xchg
jnp
mov
rol
lock
test
insl
or
pusha
loop
push
je
inc
mov
loope
mov
push
sbb
and
daa
in
cmp
cmp
mov
js
push
and
sti
add
mov
adc
mov
sub
in
add
scas
mov
loopne
inc
test
inc
hlt
bound
xlat
and
movsb
test
into
outsb
xor
movsl
orl
adc
int3
bound
or
jo
jp
leave
fisttpl
lret
inc
test
mov
xchg
into
cmp
or
ljmp
jle
stos
or
outsl
push
cmp
push
cli
xchg
test
xor
mov
test
add
xor
stos
sbb
imul
sub
mov
mulb
xchg
pop
dec
and
mov
pop
push
sub
rolb
push
icebp
je
pop
addb
rcll
frstpm(287
and
add
cmp
and
push
popa
push
mov
sbb
add
lcall
and
sub
push
pop
stos
sbb
pop
out
mov
push
jno
sbb
in
std
and
js
pop
int3
jecxz
dec
jmp
xor
xlat
dec
or
out
stc
aad
rclb
mov
out
lahf
repnz
inc
xor
andb
lods
es
push
lds
test
pop
scas
inc
mov
mov
hlt
lock
inc
xchg
mov
int3
ret
fisubs
sbb
adc
and
dec
test
fdivrl
sub
dec
ja
out
xor
pop
sarb
mov
mov
jg
fstp
push
popf
add
or
add
mov
pop
sub
push
popf
mov
scas
inc
mov
js
sub
es
jno
cmc
jns
daa
test
jnp
movsb
aam
in
sub
pop
aam
push
or
stc
test
ja
adc
push
push
dec
lahf
cld
test
mov
sti
ljmp
negl
jmp
enter
fstps
mov
popf
pop
xchg
pop
andl
or
and
insb
add
cmp
jl
out
out
popf
fildll
fnstcw
sub
cli
rclb
dec
movsb
jmp
sub
mov
inc
cld
mov
test
js
adc
pop
nop
dec
cmp
push
lods
adc
lods
outsl
xorl
push
andl
sub
push
loop
push
in
call
lods
aam
lea
cmp
xchg
mov
adc
fwait
hlt
hlt
sarb
dec
lcall
sub
push
aas
aaa
cli
sbb
fsubs
pop
call
fs
mov
scas
and
mov
js
pop
adc
or
xchg
push
xor
popa
stos
mov
sbb
je
sub
cmp
push
pop
adc
fwait
cmp
lock
cmpsl
mov
fldl
push
xor
sbb
mov
test
loope
pop
ret
movsb
dec
or
aaa
lock
test
xlat
push
or
stos
add
push
insl
decl
cltd
inc
cmp
cmpsb
push
pop
popf
sti
and
mov
or
mov
push
imul
fwait
mov
mov
pop
jge
pushf
mov
lea
lea
dec
dec
lods
dec
mov
insl
and
das
mov
pusha
test
int3
jl
mov
popf
or
pop
cmp
icebp
imull
adc
andl
cmpsb
mov
test
cmp
xchg
mov
jo
mov
sar
pop
call
fidivrs
lods
cmp
pop
pop
pop
cld
cmp
inc
mov
js
add
xor
addr16
loop
popf
into
sarl
hlt
test
mov
jbe
mov
in
xchg
or
push
jp
xchg
sub
or
mov
jp
jns
push
pop
mov
pop
cltd
sahf
fs
outsl
adc
scas
lock
pop
cld
cmc
and
lea
fcmovnu
cmpsl
or
int
popa
pop
xchg
mov
mov
mov
sub
mov
or
adc
in
inc
icebp
hlt
movsb
mov
inc
push
push
sub
sub
mov
pop
data16
inc
dec
jmp
mov
add
cmp
jns
out
push
jo
pop
ljmp
mov
aam
aam
jno
sub
and
add
jo
adc
xchg
push
pop
push
std
push
stc
addr16
shrb
and
cmc
mov
inc
pop
add
push
bound
iret
lretw
mov
mov
iret
jb
pop
sub
adc
int
jo
or
mov
and
xchg
test
cmc
mov
adcl
pop
loope
movsb
movsl
mov
mov
and
push
insb
lock
xor
int
mov
pop
pop
xchg
or
int3
jae
and
sbb
icebp
jmp
mov
jmp
mov
inc
xlat
dec
fimull
or
mov
push
pop
jecxz
mov
pop
aam
lods
add
mov
sti
imul
or
xor
mov
das
xchg
les
test
aaa
xor
xor
dec
sub
push
push
lea
push
push
stc
leave
sbbb
inc
cmp
insb
adc
pop
cmp
add
incb
fcompl
imul
xchg
ljmp
aas
add
inc
mov
sbb
jne
fiaddl
in
xchg
mov
cltd
test
shr
pop
mov
and
ret
cmpb
pop
test
fidivs
imul
fwait
mov
in
jnp
xorl
shlb
decb
dec
inc
pushf
adc
andb
jns
movsb
fldl
xor
xor
mov
lcall
ds
out
push
daa
imul
xor
adc
addr16
xor
in
std
add
mov
push
jmp
sbb
sbb
jl
lcall
fcoms
cmp
and
xor
add
pop
aas
popa
fwait
push
gs
cmp
sbb
test
jne
sbb
push
fdivs
mov
stc
cmpsb
lcall
dec
add
insb
ret
mov
stc
aam
mov
sub
sbb
mov
loopne
sbb
mulb
out
loop
aam
pop
out
sub
add
mov
cs
sbb
jbe
adc
arpl
xchg
ret
sub
sub
subb
mov
pop
jg
mov
xlat
ret
jl
sbb
jl
insb
rol
jno
pushf
mov
outsb
das
jbe
test
ret
jae
idivb
or
mov
cmc
aad
dec
mov
sub
xor
in
xchg
or
push
inc
test
in
por
mov
jmp
test
add
stos
test
icebp
jo
cmp
sti
mov
shll
mov
mov
or
cmc
test
out
push
sar
push
sbb
je
scas
inc
sbb
xor
int
in
add
sub
or
stos
xchg
movsb
xchg
std
jl
jbe
jecxz
insl
push
and
push
xor
nop
fs
fdivrs
xor
push
aaa
jb
leave
add
mov
mov
movsl
push
in
mov
jmp
jo
and
addr16
or
in
mov
xor
cmova
in
jp
subb
push
sub
popf
dec
popf
movsl
mov
lcall
mov
lret
aad
xchg
mov
ljmp
push
add
xor
sub
xchg
mov
lret
jno
xchg
or
or
scas
jp
pop
jl
add
ss
add
xchg
and
push
cmp
scas
jmp
adcl
mov
call
dec
mov
or
xchg
or
cmp
jb
rorb
fstps
data16
outsl
mov
iret
cmp
inc
pushl
movsb
lcall
mov
insb
mov
sub
xor
mov
xor
shr
mov
ljmp
inc
lret
mov
es
push
push
cltd
jns
fwait
insl
add
mov
and
or
jl
mov
jae
aam
xchg
xchg
sub
clc
and
mov
lret
xor
mov
das
xlat
lcall
imul
or
jp
or
mov
sti
punpckldq
push
movsl
scas
sbbb
mov
stos
xchg
aam
and
push
and
stos
dec
mulb
adc
cli
repnz
lea
mov
mov
cmpsb
xchg
pushf
push
loop
mov
icebp
xor
jns
push
imul
in
aam
mov
adcl
gs
sbb
cmp
push
cld
sahf
mov
cs
insb
shll
sub
push
sbb
dec
xlat
mov
sub
add
add
insl
dec
movsl
mov
mov
dec
and
lods
mov
adc
or
mov
pop
mov
fmul
adc
pusha
pop
ja
mov
adc
fcomps
mov
xlat
dec
icebp
bnd
add
mov
and
sub
cwtl
mov
lods
cwtl
lahf
insb
jmp
dec
xchg
pop
or
and
sbbl
dec
mov
dec
idivb
xor
rcr
jp
push
les
sbb
lcall
add
cmp
icebp
push
fiadds
adc
adc
sub
add
sbb
dec
mov
or
cmpsb
inc
loopne
inc
pop
ss
ss
cli
mov
popa
pop
cs
mov
mov
aad
test
sub
repnz
ja
clc
std
cmpl
test
hlt
mov
mov
jae
mov
arpl
cmp
lea
cmpsl
mov
and
adc
outsb
cmpsb
mov
xor
adcb
xchg
mov
pop
sbb
loop
imul
cmp
ficoms
sub
popa
icebp
test
testb
mov
dec
and
div
movsl
lock
test
nop
push
test
std
fsubrs
mov
aaa
mov
mov
test
sub
inc
jmp
sub
rorb
lea
sub
mov
and
dec
or
in
dec
lds
cli
xchg
or
adc
xor
loope
vpmacsdd
in
mov
push
cmp
push
jo
mov
push
out
ret
sarl
scas
cli
fsubp
push
xchg
movd
push
divb
cmp
imul
push
addr16
mov
loopne
pop
jmp
out
aad
out
and
push
in
mov
fnop
mov
shll
hlt
pop
and
dec
or
addr16
jmp
mov
sbb
arpl
dec
xlat
hlt
sub
inc
testb
out
incl
or
std
in
mov
scas
xchg
push
sub
stc
inc
loop
cmp
repz
adc
push
mov
jnp
jb
test
in
fs
jl
adc
leave
cmp
sarb
mov
lods
cmp
mov
and
or
cld
jmp
sbbb
bnd
pop
cmp
arpl
pop
adc
push
aaa
sub
fldt
in
stos
push
in
jo
pop
insl
pop
jne
les
jne
adc
sarl
stc
repnz
insb
lahf
push
pop
mov
fsts
addr16
inc
pop
fistpll
movsb
arpl
and
adc
pop
sti
in
lea
or
popf
adcl
shlb
loopne
test
jae
mov
adc
fs
cmc
sbb
fs
popf
pop
ffreep
mov
sahf
inc
mov
mov
cmp
cli
out
repnz
push
dec
aaa
dec
add
push
imul
mov
fidivrl
fsubrl
push
inc
pop
fidivrl
stos
sbb
scas
push
lods
xchg
icebp
je
mov
jge
js
or
push
mov
inc
mov
adc
sbb
in
push
adc
xchg
mov
adc
dec
or
scas
fcmovnbe
push
xchg
pop
cltd
repnz
movsb
pop
inc
adc
cmpsl
pop
jle
ljmp
outsb
or
in
cwtl
cmp
jmp
mov
cmp
cmpsl
out
test
roll
xchg
shr
or
mov
mov
or
les
jmp
aas
in
mov
fstpl
pop
lcall
popf
push
testb
dec
mov
jne
or
mov
jmp
and
xchg
push
mul
mov
adc
dec
add
pusha
push
cmpsl
leave
adc
fwait
inc
lret
aam
inc
dec
push
inc
out
dec
sub
mov
push
or
dec
les
cmpsl
lret
dec
icebp
xchg
jne
adc
out
ds
inc
lret
or
loope
aas
and
fimull
jecxz
mov
hlt
mov
cltd
addr16
mov
xchg
inc
xchg
adc
adc
mov
in
cs
or
fcos
dec
add
mov
sbb
cmpsl
pop
nop
ljmp
outsb
cmovnp
enter
adc
mov
js
std
jae,pn
inc
ss
xor
mov
les
int3
enter
xor
insl
andb
inc
pop
ljmp
clc
icebp
adc
mov
dec
push
mov
std
dec
xorb
push
fs
dec
and
fwait
dec
ret
clc
sub
and
jp
fcomp
in
pop
jge
xor
add
popf
popa
loop
xchg
les
bound
mov
jno
imul
cmp
ljmp
mov
xor
in
or
fisubs
daa
jns
dec
fwait
mov
xchg
push
sub
pop
adc
mov
pop
xchg
ror
and
sub
mov
jg
repz
sbb
xor
call
js
mov
or
xchg
std
mov
ja
cmc
jge
push
adc
dec
xchg
sarl
sahf
jl
and
cli
push
xorl
jl
jg
lahf
dec
push
nop
pop
sahf
in
mov
shll
mov
and
or
rcl
jae
pop
push
mov
xor
stc
fwait
pop
or
push
lods
lea
mov
les
loop
sub
pop
fwait
sbb
nop
aas
inc
mov
sbb
cmp
cmp
mov
pop
cltd
mov
push
mov
in
test
inc
sbb
mov
loope
movsl
lds
sahf
jmp
or
sbb
jmp
sar
push
adc
inc
fimull
out
popf
fdivr
push
lds
bound
mov
inc
fcmovnu
clc
jmp
mov
mov
lock
stos
jge
bound
test
sub
adc
rclb
mov
sub
inc
pop
cmp
push
aaa
dec
ss
push
jle
es
inc
jae
fmull
cmp
nop
mov
jle
sbb
nop
sbb
inc
repz
cmc
scas
scas
flds
outsl
mov
cmp
or
out
call
fiadds
push
cmp
pushf
fistpl
outsl
rclb
sbb
sub
stos
movsl
in
ljmp
fcomps
or
cli
sbb
lcall
push
sahf
arpl
stos
add
jg
icebp
lahf
call
or
push
mov
cmp
pop
std
inc
scas
dec
cld
pop
iret
sub
mov
lret
dec
lock
adc
movsb
mov
jae
outsl
ja
mov
jl
pop
pop
test
mov
push
scas
test
adc
mov
dec
enter
mulb
jno
test
mov
out
jns
into
in
push
sub
loope
sub
inc
sbb
ljmp
js
stc
in
inc
adc
lds
or
lds
ja
mov
or
xorl
push
xchg
faddl
push
pop
fs
cmp
cmp
push
mov
imul
jg
js
shl
scas
fstps
cmp
or
cmp
imulb
sarb
mov
int3
inc
adcb
jb
mov
mov
jl
mov
mov
ss
jecxz
sti
jo
divb
outsb
int
stos
and
pop
mov
jns
ds
aaa
lds
pop
or
cmpsb
xchg
out
sbb
adc
test
enter
mov
and
sub
std
fidivl
or
sub
bound
adc
lcall
mov
add
ljmp
push
mov
add
push
jg
fs
out
mov
sbb
mov
xor
inc
dec
movb
jb
mulb
test
pushf
clc
popf
jg
repz
dec
pop
cmp
push
je
pop
xor
mov
and
mov
dec
mov
nop
add
test
adc
loop
int3
outsl
dec
test
sub
jbe
dec
sti
add
addr16
cs
mov
out
xchg
add
xor
scas
je
lcall
dec
call
adc
xor
inc
adc
push
lcall
fildl
xchg
div
repz
or
add
repnz
mov
or
insb
and
push
sub
xchg
add
popa
das
inc
push
adc
scas
ds
lret
inc
push
inc
push
repz
pop
movsb
mov
xor
movsb
inc
sub
sti
divl
mov
rcrb
in
mov
xor
cwtl
fidivs
sub
iret
and
in
dec
lret
jle
mov
mov
out
inc
scas
aad
and
test
adc
push
xor
leave
mov
repz
les
xor
popa
lds
in
enter
sbb
das
jne
or
icebp
or
roll
jne
cltd
sub
fadds
mull
fcoms
inc
cmp
push
inc
out
or
jno
mov
cmc
cmp
inc
testl
pop
or
loopne
movsl
and
cmp
mov
pop
sbb
mov
dec
lock
mov
mov
add
popf
leave
sbb
sub
and
in
iret
mov
cmp
lds
loope
pop
sahf
mov
scas
push
lret
mov
jl
leave
jge
xor
mov
mov
jnp
xchg
mov
cmp
mov
push
inc
sub
scas
fldt
cltd
unpckhps
inc
mov
xor
lret
test
pop
scas
pop
xchg
pusha
jge
push
adcl
pop
add
leave
sarb
aas
mov
jne
xor
jne
fldl
mov
in
stc
lret
jnp
cmc
or
cmp
mov
outsb
mov
sub
pushf
jnp
and
ret
push
jae
in
test
sarl
int3
adc
cmp
dec
pushf
nop
lahf
enter
scas
mov
mov
ror
insl
pushf
je
mov
xor
cmp
push
sub
xchg
std
popa
mov
sarl
inc
jp
ja
shlb
stc
inc
pop
and
sbb
test
adcb
sub
enter
into
pop
xchg
or
lods
stos
inc
inc
cmpsl
into
insb
es
and
lds
mov
in
dec
fildl
dec
loop
stos
jge
test
scas
fstl
jns
repnz
fldenv
push
xchg
inc
sub
mov
test
or
lret
mov
sbb
xchg
jle
movsb
lea
cwtl
cli
xor
mov
jmp
int
inc
mov
push
sub
ret
mov
into
jecxz
push
pop
sbb
pop
lock
clc
cmpsb
int
xchg
repz
sbb
mov
hlt
mov
cwtl
pop
jmp
inc
rcll
inc
lea
iret
loope
inc
cmp
aam
inc
cmpsb
stc
mov
fwait
mov
pop
cmp
leave
pushf
xor
cmp
xor
test
scas
loope
inc
pop
leave
cld
sub
popa
or
adc
cmp
scas
adc
sub
sti
pop
mov
xor
stos
push
data16
push
daa
xchg
inc
pop
js
mov
into
lds
mov
jl
adc
jo
jg
sub
mov
xchg
lods
mov
add
aas
enter
orl
mov
sub
lcall
pop
bound
int3
iret
or
add
adc
push
cmpsl
pop
nop
addb
or
pop
sub
fwait
mov
adc
mov
cmpsb
cmp
mov
insl
lret
cmp
gs
test
jmp
mov
mov
mov
push
ja
fcmovnbe
xchg
rorl
mov
aam
xorl
mov
lods
mov
mov
push
mov
inc
cmp
popf
in
pop
push
lea
or
mov
sub
mov
cmpsb
ljmp
in
cmp
xchg
and
jbe
sub
lret
mov
pop
lock
gs
inc
adc
mov
stc
sbb
push
int
pop
sub
push
into
out
push
or
lods
cli
fnsave
out
pop
adc
lods
arpl
shll
mov
repz
jns
movsl
push
cmp
fstps
es
jle
fcoml
fiadds
or
int3
pop
test
mov
stos
mov
jp
js
je
xchg
mov
lahf
mov
outsl
fmul
cmp
lea
mov
lret
mov
out
xor
and
fistl
xor
popa
mov
mov
lea
jno
pop
sbb
push
add
xchg
and
test
mov
or
pop
push
adc
jb
scas
stc
cmc
mov
pop
gs
ret
add
sbb
outsl
rcll
nop
mov
jbe
pop
ficomps
inc
mov
mov
shll
push
fldl
cwtl
mov
enter
mulb
xor
xchg
sub
clc
and
iret
xlat
mov
mov
inc
adc
inc
test
aaa
adc
pop
movsb
xorl
lcall
int3
flds
mov
lea
jge
xchg
pop
arpl
add
add
stc
push
push
ficomps
jno
jg
data16
mov
daa
sub
xchg
aad
lds
or
addr16
lahf
push
jmp
insl
sbb
pusha
cmp
cli
cmp
sbb
mov
je
movsl
cmp
push
inc
xor
nop
bound
cmp
fisttpll
imul
in
insl
xchg
sti
lret
and
jo
idivb
das
mov
stos
jle
push
xchg
sub
jb
cmp
fiadds
push
ret
ret
ret
lods
xchg
cltd
fcoms
sub
sbb
inc
gs
adc
push
leave
mov
sbb
dec
inc
scas
jecxz
lock
nop
pop
aaa
test
rorl
imul
or
xchg
push
inc
cli
lret
incl
enter
or
insl
mov
rclb
push
sbb
lret
js
pushw
pop
imul
jge
sbb
add
mov
ljmp
jnp
mov
sti
or
ss
jo
mov
jbe
out
icebp
aaa
xchg
repnz
insl
jle
cld
jns
mov
repnz
gs
add
loope
xor
outsl
xor
test
icebp
test
shll
dec
fnsave
xlat
sbb
inc
aaa
es
xor
std
xorb
pop
pop
testb
jne
cmpsb
jnp
or
fsub
out
cmp
mov
push
sub
xchg
push
call
jne
in
faddl
mov
in
shll
push
idivl
inc
lret
fs
add
push
and
mov
jne
inc
cmpsl
out
push
or
lds
cmp
add
stc
cmp
inc
mov
stc
or
ret
out
out
cs
jmp
jae
jecxz
or
cmp
in
int
xor
shlb
inc
mov
sub
mov
cmp
pop
mov
ss
lea
and
cltd
cwtl
test
fld
stos
inc
pusha
pop
cmp
xlat
xchg
lahf
popa
mov
and
lcall
cmp
lds
mov
data16
inc
jle
cmp
jbe
and
shll
movsb
clc
movb
cs
es
xchg
dec
lods
pusha
rorb
cld
adc
jbe
sqrtps
push
cmpsb
inc
or
sbb
rcrl
xchg
lcall
out
mov
insb
mov
xor
fdivrs
lret
adc
mov
xor
nop
xchg
mov
popa
push
sbb
or
jp
add
aam
addr16
mov
dec
cli
stos
loope
fsubl
je
xchg
mov
shlb
xor
sbb
pop
dec
enter
inc
cmp
repz
adc
or
push
dec
stc
add
inc
das
and
outsl
inc
insl
test
mov
mov
lods
mov
mov
lret
stos
mov
call
insb
mov
pop
adc
jg
inc
mov
outsl
add
sub
dec
inc
mov
xor
outsb
stos
lock
jg
popa
push
scas
sub
sub
add
pop
outsl
inc
jecxz
ficoml
enter
fldcw
or
jp
push
movsb
or
push
and
fisttpll
mov
dec
adc
pop
xor
fs
fwait
xchg
andb
cmpsl
cmp
imul
je
roll
pop
xor
in
insb
push
lods
stos
movsb
out
and
gs
mov
out
adc
and
lret
fwait
cmc
sti
sub
dec
jnp
orl
mov
adc
adc
adc
cld
sbb
pop
jp
jp
pop
or
mov
inc
lea
adc
enter
pop
push
sarl
or
jns
sbb
addr16
mov
idiv
jp
push
sbb
cmc
arpl
int3
rcll
aad
xlat
into
mov
adc
das
dec
add
jae
pop
push
mov
cmp
cmp
scas
cs
jle
enter
leave
push
cmp
sbbb
loopne
xor
data16
ret
mov
into
add
xchg
inc
cmc
xor
ds
imul
mov
jmp
jle
and
push
jle
mov
std
lods
jmp
fwait
pop
popa
fstpl
popa
or
in
pop
arpl
mov
mov
push
out
xchg
sti
testl
div
push
fstl
jmp
jge
sbb
sahf
mov
add
inc
push
inc
push
in
outsb
adc
loope
loop
mov
stos
in
jae
inc
aas
or
cmp
clc
mov
xor
jnp
scas
lock
add
and
and
lret
xchg
inc
push
lds
mov
inc
push
scas
mov
lods
popa
xchg
insl
stos
fdivs
stos
sahf
push
or
jl
mov
xchg
mov
sbb
push
cmp
and
fwait
add
jg
mov
data16
aad
lcall
andl
aad
dec
scas
je
arpl
push
sbb
adc
jmp
fistl
push
shll
sbb
ret
jae
cmp
rorl
sbb
arpl
inc
stos
xchg
cmp
in
clc
repnz
lea
in
in
push
cmpl
inc
popf
mov
add
movsl
sbb
popa
mov
xlat
movsb
push
jle
push
sbb
add
stc
fwait
xchg
adc
and
push
mov
icebp
adc
enter
add
punpckldq
cli
out
in
ds
jl
orb
and
xchg
out
das
rcll
adc
js
ret
fsts
aaa
or
dec
jmp
repnz
add
addr16
adc
jnp
sbb
jne
in
fisttps
lea
add
xchg
js,pt
mov
lods
sahf
adc
int
push
xor
push
test
push
bound
movsb
test
lods
or
cmpsl
punpcklwd
mov
dec
cwtl
and
jl
cmpsb
dec
ds
es
cmp
xor
xchg
inc
cltd
jnp
aaa
stos
popf
bound
cmp
cmc
push
cltd
cmp
add
add
aad
pushf
xorl
cli
push
sbb
xchg
ret
pop
roll
std
rcrl
ja
pop
in
test
sbb
ljmp
inc
aaa
pop
xchg
cmc
add
aaa
popaw
fidivrl
sti
pop
fstpt
and
cwtl
jno
mov
mov
pop
mov
aas
adcb
fisttpl
repz
adc
xor
cmp
loop
mov
mov
add
or
sbb
in
fcompl
popa
pop
fcoms
loopne
out
fld
cmpsb
fnstsw
out
pop
imul
pop
sbb
sub
outsb
xchg
jo
pusha
out
lret
sub
push
fdivrl
stc
add
dec
movsb
jo
loop
jecxz
mov
arpl
mov
add
jb
xchg
ds
and
inc
add
negb
cmc
add
jb
add
rorl
popf
ljmp
insl
mov
insb
shlb
sbb
stc
mul
sbb
or
and
int3
ds
loopne
mov
inc
repnz
ret
inc
push
sub
mov
ds
int3
loop
loope
int
test
adc
adc
cwtl
or
mov
fsubrl
push
gs
loopne
jp
push
ror
jg
jnp
jmp
lock
mov
pop
inc
add
or
dec
jle
xor
mov
addr16
and
adc
sub
pop
movsb
xchg
inc
repnz
xchg
stos
notl
repnz
pusha
mov
fisubs
lods
dec
cmp
sahf
xchg
push
out
cmp
ret
cmc
cs
or
mov
test
xor
stc
or
lret
pop
test
inc
ljmp
aad
sti
push
cmpsl
ljmp
jl
mov
and
out
fmull
loop
jae
pop
inc
das
jnp
ljmp
xchg
mov
nop
outsb
vmwrite
pop
repnz
arpl
mov
or
inc
mov
add
sbb
rcrl
push
mov
cmp
mov
and
push
cmp
add
mov
push
loopne
rcrb
adc
aas
or
fcompl
add
ljmp
sub
rolb
in
ljmp
idivb
pop
cmp
mov
loope
and
mov
sbb
stc
pop
mov
pop
aad
add
push
pusha
jb
mov
fsubs
mov
add
add
shll
mov
fistpl
outsl
fmull
xor
mov
pop
mov
dec
gs
loope
gs
pushf
stos
adc
push
ret
xor
out
ficoml
divl
mov
sub
xor
mov
cmp
dec
lahf
xchg
jb
inc
mov
jno
cmc
and
test
lods
jg,pt
adc
lods
dec
imul
pop
popf
scas
and
fsts
jg
inc
fisubs
mov
push
insb
mov
xor
sub
cmovp
xchg
daa
mov
sub
pop
nop
mov
mov
inc
loopne
sub
movsl
sbb
out
gs
clc
into
push
imul
pusha
pusha
jno
jge
inc
lret
fildl
pop
pop
push
je
fwait
or
dec
mov
inc
xor
fisubs
pop
add
repz
scas
push
jno,pt
mov
push
adc
jp
lcall
das
int
xchg
dec
roll
sbb
popa
inc
fsub
pop
fpatan
xchg
mov
into
out
and
mov
sub
mov
mov
jecxz
push
push
inc
xchg
add
lds
add
dec
adc
flds
jle
mov
cmp
sbb
call
pop
test
xchg
jae
and
inc
icebp
bound
mov
xor
and
mov
and
add
das
in
mov
push
repz
testl
add
or
data16
inc
cmp
cmc
xlat
mov
stos
sbb
in
mov
ret
js
xchg
jmp
xorps
repz
push
xchg
jmp
mov
les
jns
sar
push
sbb
adc
js
xchg
fmul
jle
lret
cmp
push
pop
adc
inc
pop
xchg
mov
imul
and
call
mov
mov
rcl
imul
test
test
mov
fwait
lret
push
adc
outsb
push
adc
push
into
inc
pop
stc
scas
insl
sbb
hlt
sti
mov
into
clc
fucomi
jne
nop
int
mov
mov
and
out
xchg
mov
pop
lea
pop
loope
cs
test
std
xchg
push
pop
lahf
roll
pop
aas
shlb
cmpsl
xchg
shll
inc
popf
sbb
sub
sbb
leave
loope
jno
es
fdiv
push
mov
mov
je
mov
test
adc
cmc
mov
mov
incb
jbe
jg
jo
push
pop
and
dec
jno
fstpl
rol
mov
mov
ret
fwait
lods
or
nop
pusha
clc
sbb
rolb
mov
bound
adc
pop
sahf
mov
push
stos
sub
shrl
unpckhps
fstps
rcl
shlb
bound
repz
loope
cmp
jae
mov
xchg
push
les
lods
adc
sahf
dec
push
sbb
and
int
mov
iret
mov
imul
mov
pop
mov
xorb
iret
push
cmc
sbb
les
lcall
push
xchg
mov
std
mov
sub
int3
inc
clc
mov
sbb
mov
test
mov
aaa
lock
bnd
cltd
jmp
notl
xor
mov
ss
or
mov
sbb
in
cmp
mov
fmuls
mov
push
cmp
scas
dec
in
test
inc
or
call
fisttpll
js
cmp
int3
sarb
inc
ljmp
lods
ds
inc
lret
adc
jns
push
arpl
push
aam
add
xor
fildll
cwtl
pop
sarl
div
stc
sbb
sub
adc
push
arpl
pop
or
cmp
sahf
pop
xorb
fsub
cltd
repnz
rol
or
mov
sub
sub
jp
mov
shlb
and
and
and
jno
push
jno
pop
jno
mov
out
jmp
xor
xlat
sbb
dec
xor
dec
sbbb
add
insb
mov
inc
call
roll
gs
dec
push
cmpsb
adc
movsb
call
mov
dec
lock
cmpsl
jge
dec
xchg
fdivl
and
mov
xor
and
sahf
sub
aas
mov
mov
movsl
out
je
out
scas
out
xchg
rolb
leave
repz
sbb
test
adc
jno
dec
iret
inc
mov
icebp
mov
or
neg
test
bound
push
jbe
sub
sub
fisubs
pop
jb
add
clc
call
mov
rcll
xor
sti
ss
inc
push
cmp
stos
aas
inc
int
and
js
aad
popl
push
and
fsub
xor
sbb
dec
icebp
cwtl
mov
mov
jno
insb
jne
inc
aas
xor
repnz
jae
pop
sub
cltd
jne
mov
cwtl
sub
mov
push
mov
dec
pop
xlat
loop
rcrl
inc
jle
xor
jno
les
adc
push
ljmp
mov
mov
add
mov
aaa
iret
lods
scas
mov
push
loopne
mov
fsubs
aas
adc
aaa
mov
adc
pop
dec
add
push
pop
add
fucomip
push
xchg
pop
stos
fildll
enter
push
in
pop
cltd
nop
xor
mov
jl
ds
inc
push
popa
sub
jl
enter
push
xchg
sub
xchg
sbb
hlt
daa
cwtl
loope
repnz
jbe
pop
popa
iret
dec
es
ret
sub
imul
rolb
out
ljmp
mov
popa
movsb
push
lea
push
mov
inc
filds
lock
dec
mov
mov
fiadds
push
fisubs
aad
out
repnz
or
cld
stc
cmp
xlat
or
sbb
mov
orb
movsb
sarb
or
lock
fadds
cltd
insl
repnz
pop
nop
adc
leave
mov
into
push
sbb
xchg
and
xor
jge
or
xchg
dec
mov
repz
arpl
cmp
inc
inc
sub
cmp
inc
dec
and
fistps
je
pop
jp
xchg
mov
test
push
in
stos
enter
es
ljmp
cmp
adcb
push
es
or
leave
inc
out
push
inc
mov
push
cmpl
shll
cmc
push
adc
fildll
mov
negb
mov
cltd
mov
insl
lret
fcomp
lahf
shlb
inc
gs
aad
and
psadbw
jb
mov
inc
dec
add
movsl
jle
fs
shll
mov
mov
test
jns
cltd
int
icebp
popf
sbb
mov
sub
orb
adc
push
mov
adc
or
xor
int
dec
inc
pop
xor
mov
mov
dec
fisubs
aas
aas
in
add
and
pop
push
divb
movsl
cmp
pop
mov
fsubrs
aad
sbb
scas
movl
andb
pop
jecxz
cli
and
xchg
sub
dec
jle
push
test
mov
mov
scas
pop
push
test
gs
jge
ret
stc
scas
mov
fs
inc
xor
out
push
sub
push
lcall
mov
iret
add
dec
daa
mov
mov
outsb
adc
jno
js
aad
lock
sub
outsb
in
jae
push
mov
mov
or
sub
mov
dec
in
sbb
or
mov
test
aam
cmpsl
mov
and
xchg
cld
push
fwait
std
adc
in
shrb
aas
rol
adc
fsubrs
sub
inc
xchg
xor
push
and
add
inc
sahf
shlb
mov
xchg
clc
dec
cmpsb
jmp
jns
mov
push
cmp
and
inc
mov
int3
jno
inc
inc
aad
push
add
pop
push
pop
inc
out
loop
lock
test
or
movsb
scas
fwait
jo
pop
lret
adc
stc
in
sub
stos
xor
call
mov
roll
pop
mov
addr16
push
inc
das
sbb
repnz
and
jecxz
std
int3
jle
sahf
aas
mov
adc
mov
mov
mov
popa
das
jle
test
push
mov
pop
aaa
sbb
inc
xorb
inc
jne
or
sub
stos
xchg
inc
fwait
int
pop
add
pop
pop
jge
jne
mov
popa
add
ja
pop
add
inc
jno
enter
push
add
and
jo
xor
sub
pop
out
ljmp
cli
inc
xor
sbb
fldpi
in
pop
or
ret
adcb
ror
insb
sub
mov
popa
xor
push
pop
or
dec
pop
stos
lret
das
leave
adc
mov
bound
cltd
or
addr16
scas
or
ror
iret
push
pop
test
push
and
xorb
lahf
cmpsl
dec
iret
mov
dec
ja
push
loop
dec
addr16
dec
out
mov
inc
stos
js
push
adc
call
jns
or
pop
pusha
sbb
iret
gs
into
sbb
fidivs
adcb
cmp
mov
sbb
stc
das
ljmp
push
xchg
inc
push
hlt
jp
mov
pop
ret
push
xor
sub
xchg
mov
dec
add
dec
je
pop
jae
xchg
pusha
and
andb
cmp
icebp
add
gs
push
in
in
mov
not
or
mov
sbb
cmc
mov
adc
cmp
sbb
xchg
push
jmp
das
adc
xor
or
mov
dec
mov
ret
insl
and
aam
jns
in
lock
js
pop
push
jl
pop
jg
enterw
xor
mov
pusha
scas
fiadds
fcmovnb
pop
jnp
in
mov
jnp
dec
icebp
add
addr16
out
inc
sti
sub
leave
or
or
out
mov
add
adc
imul
mov
dec
sub
sahf
fisubrs
test
cwtl
push
inc
out
in
mov
gs
lcall
mov
mov
in
push
pop
xlat
inc
push
mov
jns
xchg
push
adc
adcl
ja
xchg
mov
push
mov
clc
es
loope
push
in
inc
push
cltd
aaa
lret
pop
rcr
pop
xor
outsl
jl
jl
add
or
imul
movsb
inc
enter
sub
push
jno
in
insb
gs
nop
jne
jmp
push
inc
inc
inc
pop
bound
loopne
mov
dec
and
fsub
jb
pop
xchg
mov
mov
pop
sbb
call
and
inc
test
ss
rcrb
pop
cmp
fwait
scas
popf
jmp
aaa
xchg
mov
in
push
imul
test
mov
test
aas
cmp
jle
gs
scas
cmp
data16
bound
sahf
push
loopne
mov
aam
loopne
add
dec
lds
fwait
test
or
jae
xchg
outsl
sub
fidivs
lea
scas
call
mov
ds
pop
int3
repz
filds
neg
mov
aaa
fdivs
sub
addr16
into
jns
or
adc
mov
arpl
fsubs
aad
fisttpl
jo
repz
sbb
jns
sub
rorb
call
jg
push
stc
popf
out
push
adc
pop
xchg
xchg
sbb
add
stos
add
xor
mov
loope,pn
stos
inc
stos
arpl
loopne
jecxz
test
out
add
xor
lret
les
cwtl
stos
jnp
mov
popf
fcompl
inc
pop
sbb
js
cld
add
or
lock
mov
xor
in
xchg
inc
cmp
pushf
popf
xchg
fildl
insb
xchg
fs
je
sub
add
je
sub
test
out
fwait
pushf
lret
push
pop
inc
mov
jmp
push
pop
add
dec
jbe
xlat
ljmp
outsl
push
inc
mov
pusha
and
fbld
lret
sub
mov
mov
sarb
aas
cwtl
jmp
or
adc
and
add
not
and
xchg
inc
shll
push
pop
adc
cld
lock
ja
insl
pop
dec
sti
bound
psubb
xor
push
and
xchg
pop
xchg
sbb
sti
aas
js
jb
and
data16
lahf
pop
andb
fs
push
sbb
shrb
and
js
xor
mov
mov
and
inc
and
jns
data16
insl
into
cmp
loope
shll
xchg
jbe
fnstcw
xor
cld
xchg
sub
lods
mov
js
dec
fcmove
lret
arpl
lret
cld
sub
mov
mov
shll
nop
sbb
mov
adc
int
ficoms
es
lea
sbb
mov
push
and
stos
and
mov
mov
sub
aam
imul
mov
lds
in
mov
sub
lret
add
xchg
sub
xchg
imul
dec
jb
mov
fdivs
mov
add
add
push
push
aam
inc
or
nop
popa
xchg
push
mov
xor
and
stos
jne
dec
jb
sbb
das
je
or
jmp
push
call
sbb
pop
sbb
mov
add
insl
jae
push
sub
sub
std
xor
add
xor
fsubrl
xor
dec
jns
pushf
fcmovnb
add
xchg
in
cmpsb
cmp
fdivrs
add
imul
fnstcw
paddusb
inc
fwait
or
inc
add
mov
out
sbb
aas
push
xchg
xchg
sti
aad
or
mov
loop
jge
sub
jmp
cmp
popa
stc
inc
ret
adc
ljmp
or
es
clc
cmp
add
fistl
dec
movsb
imull
sbb
add
xchg
mov
addr16
ljmp
movsb
sub
enter
lahf
ss
add
aad
mov
or
dec
scas
sbb
arpl
imul
jmp
sub
ja
mov
inc
loopne
mov
sbb
push
adc
adc
stc
loope
xor
test
or
iret
xchg
movsl
mov
mov
fildll
jp
dec
cmp
mov
imul
cltd
mov
shlb
add
jns
jge
pushf
mov
jg
movsb
sbb
mov
leave
sub
sub
xchg
mov
es
aas
daa
cmp
or
cmpsl
xchg
sub
lret
outsl
jle
inc
lods
adc
xchg
jmp
xor
xor
sbb
jle
aas
mov
das
pop
pushf
test
fisubrs
sbb
in
mov
mov
push
sub
mov
pop
sbb
fcmovnbe
scas
xlat
outsb
shll
cwtl
adc
jg
sti
mov
repnz
push
mov
adc
or
xchg
out
jbe
jecxz
lcall
popf
fisttps
pop
es
cmp
and
jbe
lock
fdivrs
xchg
fstps
pop
sub
icebp
sahf
pop
jne
sahf
cmpsb
xor
push
std
jg
sbb
dec
loopne
cmp
jno
andl
int
into
mov
adc
clc
ds
imul
loope
pushl
mov
inc
in
pop
ret
enter
cmp
shll
inc
repz
pop
push
fadds
adc
sti
or
int
and
loopne
jg
std
sbb
jnp
push
test
loopne
lea
shrl
cmp
mov
cmp
mov
xor
stos
je
adcl
mov
insl
cmp
dec
lcall
addr16
mov
dec
cmp
int
leave
test
das
inc
xchg
icebp
rcr
sub
rcrb
stc
xchg
loopne
push
lret
mov
jge
cmp
mov
dec
pop
push
movsb
js
jbe
xor
subb
add
sarb
stos
or
into
jbe
lret
cmp
add
dec
js
mov
push
xor
mov
xchg
xor
lds
cld
lods
mov
pushf
orl
push
mov
fs
xor
pop
or
push
lahf
repnz
dec
mov
push
mov
es
pop
loope
cmp
fisubrl
lahf
ja
and
and
sahf
push
pop
dec
clc
and
dec
add
nop
out
and
outsb
add
add
sarl
pop
daa
pop
xor
sub
movl
aas
adc
fisubrs
and
mov
mov
mov
call
pop
icebp
mov
fistl
push
test
sub
leave
pop
popa
loopne
je
jmp
add
mov
push
sbb
fwait
inc
mov
fdivrl
jge
divb
cmpsl
and
jno
xor
insb
sub
addb
cmpsb
pusha
cmp
ja
mov
aaa
add
movsb
mov
xchg
fdivrl
pop
pusha
ret
cld
filds
popa
call
or
pop
in
sub
and
test
cmp
or
cmpsl
fcomps
push
push
push
dec
push
iret
add
fisubrs
inc
cs
pop
ljmp
cmc
fdiv
pop
push
and
mov
and
addb
mov
mov
scas
sarl
push
in
sarb
aam
mov
dec
data16
imul
arpl
mov
jno
repnz
adc
mov
xchg
xor
jp
dec
and
insl
pop
repnz
inc
call
pop
iret
dec
scas
js
sbb
sbb
or
dec
pop
in
mov
outsb
jb
stos
sub
push
stos
cmp
mov
xchg
xchg
in
loope
cmpsl
movsl
dec
inc
dec
xor
jno
add
add
fnstcw
jae
xor
jmp
in
fcomip
and
or
std
scas
sbb
xchg
dec
pop
sarb
add
fisttpll
xchg
into
xchg
xor
lret
fwait
xchg
je
xchg
jg
dec
mov
rorb
inc
lcall
outsb
adc
fpatan
in
test
mov
cmp
popa
jno
mov
leave
scas
lock
rolb
loop
mov
fcoms
popl
outsb
inc
lds
cli
xlat
add
enter
adc
hlt
cmpsb
lods
pop
test
cmc
xchg
or
and
dec
xor
stos
sti
adc
stos
loopne
lahf
cli
adc
rolb
jo
adc
pop
mov
xor
insb
and
mov
sbb
jle
ss
jmp
dec
push
push
aaa
mov
push
pop
mov
stos
enter
lret
sub
pop
sub
xchg
iret
ja
shl
add
adc
pop
cmp
test
or
leave
mov
sbb
push
pushf
add
test
fisttpll
and
clc
cs
cs
gs
dec
cmp
and
flds
xor
dec
lret
sub
lret
inc
roll
faddl
xchg
or
punpckhbw
add
mov
add
push
xlat
shr
call
lods
cltd
sub
xchg
test
out
add
scas
dec
enter
sub
inc
xchg
scas
fldcw
or
push
loope
jns
xchg
repnz
dec
pop
and
and
push
jbe
in
mov
inc
and
mov
cmp
xchg
xchg
pop
mov
xor
mov
shlb
pop
clc
cs
jmp
pop
add
mov
or
xor
shrl
or
pushf
lods
stos
cld
pop
pop
psraw
mov
push
and
iret
pop
clc
pusha
clc
test
je
lea
stos
jo
cmp
add
lcall
cmp
stos
push
addb
out
xchg
aam
push
lcall
scas
dec
in
push
iret
das
loope
repnz
or
inc
pop
cmp
or
mov
mov
mov
aad
inc
mov
out
fldl
xchg
cmp
xor
inc
mov
ljmp
pop
mov
scas
dec
adc
flds
mov
push
xchg
lret
hlt
dec
mov
enter
nop
jns
jb
push
push
pop
imul
not
pop
xchg
and
rolb
sbb
mov
xchg
push
ret
pop
xor
jmp
mov
rclb
cmpsb
outsb
das
mov
dec
std
sbb
popa
std
or
mov
testb
ljmp
test
or
sub
pusha
xchg
or
and
mov
ss
pop
test
jecxz
mov
je
push
fcomps
adc
addl
inc
mov
jnp
aas
test
pop
roll
in
pusha
les
mov
fsubs
push
xchg
sub
cmp
pop
mov
xlat
loopne
mov
jle
insb
dec
bound
lea
xchg
inc
mov
adc
scas
fistl
or
jb
jne
scas
sub
mov
dec
leave
sub
inc
pop
push
xor
cmpsl
sbb
push
imulb
pop
or
movsb
jge
xchg
leave
outsb
or
push
mov
repz
addb
std
das
jb
sbb
sub
sbb
or
faddp
mov
jge
or
mov
or
aad
or
add
push
lock
iret
mov
adc
repnz
aas
mov
pop
rorb
lea
loop
sub
insl
adc
pop
mov
sti
lahf
cld
loopne
rcll
addr16
sbb
mov
mov
lret
mov
mov
dec
mov
cltd
clc
loope
mov
lods
int3
push
sar
mov
add
imul
pop
xchg
mov
iret
jb
setae
mov
out
mov
sub
push
pop
push
dec
jo
cwtl
dec
sub
in
scas
jnp
mov
movsb
rclb
fs
fidivrl
mov
sub
xchg
mov
repz
ljmp
cmp
sahf
popf
and
std
daa
adc
xabort
mov
and
je
ret
insl
lods
lret
add
mov
xchg
adcl
out
jbe
leave
rorl
mov
inc
hlt
mov
and
iret
adc
out
cmp
insb
orl
push
mov
out
jno
leave
test
add
push
pop
mov
xor
add
notb
orl
cmp
dec
mov
xchg
int
addr16
test
lods
rolb
dec
dec
arpl
push
push
ja
stos
andl
xor
loop
push
shrl
outsb
es
pushl
out
fadds
aas
or
shrb
aam
sub
rcrl
sahf
pop
cmp
mov
xchg
sub
or
pop
fs
cmpsl
sbb
xchg
insb
pop
inc
stos
adc
loopne
je
sahf
xchg
xchg
popa
js
ret
out
xchg
jne
mov
fwait
ret
and
sahf
xchg
mov
or
push
cmp
pop
push
mov
loopne
loop
adc
shrl
and
ja
jmp
push
js
push
ja
aam
sub
imul
fwait
rorl
addb
jecxz
mov
loopne
cltd
cli
jg
or
xchg
mov
outsb
outsb
pusha
scas
dec
outsb
sarb
ljmp
push
movsl
stos
fsubl
ljmp
xor
add
mov
lods
xor
xchg
fistpl
repz
orl
ror
imul
pop
adcl
movsl
das
shrb
sbb
or
stos
into
mov
pop
push
xchg
mov
imul
cwtl
dec
arpl
lds
jnp
mov
rclb
mov
add
mov
push
mov
out
and
rorb
xor
fimull
adc
insl
imul
cld
xchg
icebp
pop
or
pop
popa
push
and
das
inc
adc
pop
imul
mov
sbb
add
mov
adc
jo
and
push
andb
test
or
cmpsl
das
aam
stc
in
inc
push
loope
xchg
mulb
test
adc
scas
dec
test
mov
inc
push
andb
add
ds
ljmp
fidivl
jle
add
mov
test
xchg
in
jge
jb
ja
sbb
repnz
scas
and
push
adc
out
inc
and
or
arpl
pop
dec
mov
repz
dec
inc
or
mov
outsl
std
loope
testl
mov
xchg
divl
push
stc
sbb
fidivrl
repz
mov
test
mov
jg
sahf
ja
adc
pop
fcomps
mov
push
sbb
divb
xlat
cmp
jmp
and
sarl
sbb
sub
jl
out
jb
mov
xor
adc
je
stc
std
test
hlt
or
imul
or
pop
fwait
out
mov
imulb
push
dec
pop
test
lods
inc
push
cli
add
pusha
jnp
xor
test
dec
and
repz
mov
stc
and
mov
leave
and
inc
nop
iret
daa
test
call
mov
dec
and
and
xchg
jl
test
cmp
outsb
add
add
hlt
mov
push
data16
addr16
xorl
mov
cmp
sti
pop
dec
dec
lret
mov
sub
sub
pop
adc
push
mov
notl
cmc
dec
testb
lock
push
aas
xor
or
testl
mov
push
mov
xor
jmp
pop
and
and
and
ret
sbb
dec
call
in
cmpsl
dec
or
mov
icebp
fsubr
pushf
mov
inc
in
clc
call
arpl
push
inc
testl
fisttpll
ret
push
ja
loopne
ss
sub
xchg
mov
and
mov
sbb
sub
cmpsb
pushf
test
pop
jb
push
nop
pusha
pop
movsb
jbe
cmpb
push
sbb
icebp
dec
loopne
jae
push
mov
mul
mov
daa
inc
inc
mov
and
sbb
int3
rcll
sbbb
pop
insl
mov
push
incl
sti
and
scas
jecxz
xor
and
cmp
push
test
mov
jge
jge
xor
mov
xchg
je
call
outsl
mov
in
out
adc
int
mov
subl
xchg
aas
push
xchg
sbbb
and
mov
adc
cli
in
cs
lret
movsl
ret
fwait
dec
ret
and
stc
movsl
mov
insl
mov
fcmovnb
lret
mov
test
pop
or
aad
call
rcr
je
shll
or
ret
mov
mov
js
jl
lods
cwtl
mov
inc
int3
stc
mov
lods
pop
enter
mov
jo
add
fstl
cmpl
mov
xchg
insl
fs
mov
scas
mov
mov
pop
popf
mov
loopne
dec
xchg
xor
repnz
lods
pop
lods
cmp
enter
jle
push
adc
mov
pop
dec
fsub
cmp
int3
bound
push
pop
daa
mov
adc
rol
push
bound
mov
aaa
loopne
sbb
std
hlt
push
xchg
xorl
daa
jle
pop
shll
loop
test
shll
pop
popf
aad
movsb
clc
inc
push
ss
mov
rcll
arpl
aas
xor
mov
push
roll
in
mov
sub
hlt
sti
jno
inc
push
cmpsl
out
add
cmp
neg
sarl
cmp
or
arpl
mov
adc
aam
mov
jg
aaa
mov
and
sbb
test
xchg
xlat
in
pop
xor
jle
or
aam
cld
and
ja
or
add
mov
dec
sbb
cli
mov
pop
jle
imul
push
inc
mov
mov
repz
bound
loopne
addr16
mov
xchg
jle
add
xor
mov
shll
inc
cmp
stos
sub
sbb
adc
sbb
mov
lret
fwait
sub
add
hlt
stc
out
pop
inc
cld
cltd
jns
sbb
mov
sub
adc
je
loope
rorb
xor
lds
popf
and
orl
jb
inc
sub
xchg
mov
pop
mov
les
jno
dec
mov
mov
jbe
jb
mov
mov
sahf
cmp
or
pop
mov
mov
and
and
mov
pop
mov
inc
push
mov
test
jnp
call
test
mov
mov
daa
movsl
in
sub
jl
dec
gs
or
mov
push
adc
psubd
mov
shrb
pop
xor
add
pusha
fdivl
mov
mov
cmp
leave
inc
or
pusha
adc
js
or
nop
push
sbb
aam
cmp
aad
cmpsl
or
loop
rclb
xor
push
adc
rcrl
int3
xor
mov
pop
jno
or
loopne
ret
jmp
mov
testl
xchg
sbb
jb
jne
sti
inc
popf
jle
scas
in
xor
mov
sarb
xor
test
pop
das
nop
cs
test
dec
add
cmp
mov
sub
jecxz
leave
lds
sub
insl
int3
pushl
clc
or
scas
jmp
xchg
mov
mov
leave
push
mov
insb
into
test
ljmp
mov
mov
sub
testb
sti
lahf
mov
outsl
cmpsl
add
imul
stos
xor
mov
sbbb
mov
scas
dec
mov
mov
subb
dec
out
mov
mov
pop
dec
xchg
aas
mov
je
pop
push
add
in
pop
sub
fs
hlt
call
and
hlt
xchg
outsl
add
movsl
pop
cwtl
dec
fwait
cld
enter
jb
and
cmp
cmp
test
pop
daa
clc
movsb
scas
rorl
adc
divl
sahf
dec
mull
mov
inc
outsb
lcall
xor
nop
push
gs
movsb
aas
push
pop
sbb
push
push
pop
fidivrs
out
pop
pop
mov
mov
cmc
push
xor
inc
jnp
xchg
adc
push
inc
ds
pop
push
jp
lea
adcl
jecxz
xor
outsb
cwtl
xchg
notl
js
xchg
scas
gs
push
imull
mov
push
xor
xchg
sbb
inc
ja
pop
cmp
dec
sbb
lret
or
xor
and
lea
addb
adc
inc
lods
sub
mov
aaa
dec
lock
loopne
inc
fisttpll
jl
add
jb
arpl
xor
mov
std
shl
cmp
outsl
sbb
or
daa
add
push
test
lret
xor
mov
xchg
fnstsw
xor
xor
adc
dec
shll
cmp
push
adc
fdiv
xor
mov
push
adc
loopne
mov
imul
dec
into
shrl
xchg
xlat
pop
jne
add
add
xor
inc
hlt
in
adc
adc
cmpsl
jl
sub
xor
lods
aas
lods
xchg
sbb
xor
push
repz
gs
dec
pop
call
jnp
dec
push
mov
ffree
std
ja
mov
add
sub
mov
gs
jae
or
test
xor
add
les
repnz
dec
ret
dec
les
xchg
add
leave
dec
sub
jb
mov
aad
pop
cmp
inc
cmp
sub
push
stos
xlat
jne
call
push
jb
movsl
sahf
mov
pop
dec
in
in
pop
dec
out
ret
pop
xchg
pop
pop
mov
push
adc
pusha
repz
dec
inc
jb
gs
xorl
fcos
repnz
pcmpgtb
test
pushf
imul
mov
pop
fsubrl
push
fistps
jecxz
jne
xor
jae
jg
adc
jge
push
mov
shll
dec
and
and
cld
dec
xchg
and
insl
imul
xor
mov
mov
jno
iret
inc
cmc
adc
adc
ret
pop
aam
cmp
dec
lahf
xor
xchg
les
jg
mov
inc
jmp
insb
xchg
cmp
or
jno
stos
mov
dec
lret
cmp
lahf
insb
xor
adc
xchg
mov
movsb
mov
xor
dec
insl
int3
lods
dec
iret
xor
call
and
hlt
fimuls
sub
sub
xchg
rolb
cmp
fdivr
aam
fs
mov
data16
loopne
pop
sti
push
mov
and
sbb
je
pop
xchg
or
les
sub
xchg
push
push
push
shlb
xchg
xchg
lret
ja
xor
jo
mov
push
out
mov
jle
lods
stos
int
js
and
and
popf
arpl
lret
out
pop
ret
add
pusha
adc
inc
pop
aaa
inc
push
jp
inc
ror
setl
mov
movsb
push
bound
pop
push
mov
mov
sbb
int3
jnp
in
and
push
arpl
lcall
fistps
cli
and
adc
in
test
in
fiaddl
mov
mov
sbb
sub
add
adc
test
cmpsl
xor
xlat
jle
pop
rcr
xchg
icebp
xlat
data16
pop
pop
rcll
iret
fdivrl
divb
add
add
sub
push
lret
outsl
mov
testb
push
lcall
mov
mov
lds
ljmp
or
inc
add
in
push
arpl
out
mov
and
xor
or
adc
aaa
and
pop
push
mov
int
adc
dec
je
add
mov
fucomi
mov
pop
imulb
mov
rolb
sub
inc
fs
fsub
into
bound
add
xor
inc
dec
lds
pop
mov
out
mov
lods
outsl
int3
dec
dec
lock
pop
aad
test
lea
mov
push
xchg
cs
daa
lds
lods
clc
in
add
sbb
jae
mul
jae
adc
pop
push
in
cmc
vphaddwd
imul
test
in
pop
cmp
out
xchg
cmp
sub
movsl
jne
and
ds
inc
stos
cmp
pushf
cmp
jg
enter
push
push
movsb
mov
jno
andl
rolb
andl
aaa
outsl
xchg
roll
cltd
imul
fs
mov
sbb
jmp
out
mov
jns
js
jbe
inc
jge
mov
aaa
jmp
and
ret
lds
sahf
pop
mov
notl
mov
in
imul
rcr
or
mov
sbb
inc
das
test
aad
adc
das
cmp
fmull
pop
cmp
push
divb
push
adc
jb
xchg
ret
mov
jne
push
sbb
xchg
repnz
mov
int
add
das
fistps
lret
jmp
outsb
fwait
mov
fildll
test
sbb
push
cmpsb
mov
xchg
loope
xchg
pop
push
lock
sti
sbb
sbb
cmpsl
adc
fdivs
pop
inc
insb
jns
hlt
stos
stc
popf
xor
es
andl
ret
std
inc
mov
inc
popf
inc
push
pop
lods
cs
add
movsb
test
push
dec
fadds
testl
ret
call
mov
fcomi
imul
adc
and
fwait
and
dec
mov
out
test
mov
repnz
sub
push
push
mov
and
dec
lahf
shrl
pop
sbb
sub
mov
pop
adc
push
push
inc
xchg
pushf
xchg
xor
and
xor
xchg
or
negl
add
jg
mov
fwait
mov
shlb
push
xor
lahf
imul
cmp
cmpsb
xchg
stc
aam
dec
sub
fsubs
in
or
mov
adc
jae
jbe
mov
movsl
xchg
pop
mov
nop
add
or
jl
fists
sbb
adc
xor
lds
xor
test
xchg
rcrb
xchg
cmpsl
sub
ljmp
sahf
cli
adc
mov
or
cmp
jecxz
movsl
adc
cmc
andb
mov
add
sbb
sbb
xlat
js
adc
xchg
aam
imul
mov
decb
and
data16
stos
add
aam
lock
leave
outsl
iret
ja
aam
inc
xor
mov
mov
fs
xor
pop
cmpsb
frstor
nop
cmc
cwtl
outsl
ret
push
fcomip
orl
mov
xor
aas
jo
add
bound
jmp
xor
jle
arpl
pop
mov
xchg
inc
ja
add
into
test
mov
inc
aaa
iret
dec
ss
add
insl
xorb
inc
lods
mov
cmpsl
mov
push
in
popa
xor
repz
fldcw
cmpsb
push
jge
movsb
test
lock
sbb
roll
gs
mov
std
mov
frstor
mov
adc
dec
aaa
dec
lcall
push
fisttps
mov
and
jg
fwait
push
push
inc
repz
pop
pop
fnstenv
test
adc
mov
daa
and
dec
mull
shl
lods
mov
sbb
adc
sub
scas
or
lahf
ss
in
test
mov
xchg
leave
stc
sub
xchg
cli
add
shr
cmpb
lock
add
pop
xchg
sub
or
scas
mov
je
aad
xor
shrb
test
push
out
jmp
adc
mov
push
lods
pusha
push
pop
mov
mov
fcmovne
test
and
aad
mov
cmc
decl
adc
mov
scas
inc
mov
add
xchg
pushf
fdivr
shrw
je
je
mov
and
in
test
jle
pop
fistpl
int3
std
dec
outsb
push
ret
aad
lods
push
scas
loope
test
pop
nop
repnz
int3
dec
lea
mov
dec
in
and
std
mov
xor
and
push
inc
outsb
pusha
or
sbb
and
leave
push
mov
outsl
dec
xchg
sbb
repz
pop
mov
popa
mov
loope
movsb
outsb
cs
mulb
popf
sub
push
daa
sub
scas
outsb
and
mov
add
and
mov
sbb
lahf
inc
xchg
testb
pop
repnz
sbb
lret
loop
aam
push
orb
xchg
cld
xor
pop
dec
repz
mov
mov
cmpsb
in
and
mov
mov
bound
or
hlt
inc
mulb
movsl
jmp
xor
dec
xchg
cmc
jns
dec
cmpsb
pop
js
fildll
ja
mov
ret
add
std
mov
cmpsb
pop
aas
mov
rcr
inc
jbe
push
daa
jge
mov
cmp
ss
inc
into
ljmp
jp
mov
loope
mov
pop
mov
std
rclb
inc
out
into
int
push
cmp
test
mulb
test
sub
js
xchg
rcrl
mov
jnp
inc
out
inc
push
aas
or
push
mov
ss
fucomp
pusha
sub
in
mov
lock
mov
xor
xchg
loopne
push
aas
cmp
int3
sbb
hlt
adc
ds
idivl
sbb
imul
mov
jae
ja
pop
test
push
in
outsl
mov
test
pusha
daa
or
inc
add
out
jno
mov
mov
and
cs
fld
aaa
pop
xor
mov
loope
push
idivb
xchg
push
lret
aas
dec
mov
sbb
std
xchg
cmp
pusha
std
cmp
fdivl
dec
cmc
test
cmp
mov
ficoml
in
aad
iret
mov
sub
pop
fstpt
jp
inc
out
sub
outsb
sbbb
mov
mov
mov
mov
mov
lcall
pop
mov
cmpsb
out
jp
iret
cwtl
xchg
sub
jecxz
stc
dec
rolb
insl
pop
or
pop
sbb
sub
cld
fistpll
fmull
add
dec
sar
push
xchg
cmp
out
in
out
jbe
sub
test
scas
fdiv
nop
mov
icebp
lcall
or
push
xchg
and
fisubl
jl
push
loop
das
mov
stc
iret
stc
filds
lea
inc
clc
loop
inc
add
xor
mov
sub
inc
fnclex
jmp
jmp
clc
jnp
ret
inc
adc
push
je
mov
push
inc
sub
ret
inc
lock
inc
inc
adc
flds
fstpl
ficoms
jle
jl
mov
aaa
push
inc
xchg
mov
fimuls
fisubrs
das
push
repnz
ja
pop
and
push
cmp
inc
mov
dec
call
jg
pop
les
addr16
dec
pop
xchg
movb
icebp
repnz
mov
cmpb
outsb
repnz
dec
cltd
mov
adc
or
xchg
mov
lods
mov
and
inc
movsb
xor
jns
enter
fstps
sub
pop
cmp
xor
ja
dec
notl
mov
cmp
adc
and
sarl
outsl
inc
in
sti
cld
insl
je
pop
push
pop
lcall
in
mov
jmp
stos
jae
test
sbb
test
lahf
mov
mov
xchg
dec
push
int3
cmp
lret
xchg
mov
lret
push
xchg
addr16
or
shr
mov
pop
cmpsl
pop
pushf
and
enter
xchg
xchg
cmpsl
sbb
add
xchg
push
add
andl
jae
fdiv
jae
push
pop
jb
xchg
in
out
cmp
out
xchg
mov
aaa
or
int3
fcmovbe
pop
stos
jg
adc
test
push
loope
push
xor
ret
loopne
je
cltd
popl
sub
ds
sbb
ss
cmp
dec
pop
ss
jl
lods
jp
lret
jmp
sub
add
stos
lahf
fiadds
mov
jnp
xor
and
cwtl
add
sbb
mov
out
dec
add
mov
pop
fsubrp
loope
xchg
mov
cmp
nop
pop
mov
in
sub
mov
cmpl
or
jnp
mov
or
push
cmp
push
fsub
cltd
sub
cmpsl
fwait
mov
sub
popf
addb
rcrb
arpl
add
jecxz
fsubrl
ror
cmpsb
data16
or
jnp
cltd
sub
in
lds
dec
xor
je
xor
and
mov
mov
loopne
aas
addr16
add
mov
cs
add
andl
call
sarb
lret
clc
mov
sub
test
mov
subl
dec
jmp
out
lahf
in
cmpsb
dec
lds
inc
mov
xchg
or
repz
fwait
push
data16
dec
clc
fwait
inc
ficoms
movsb
or
sub
inc
cltd
jno
xor
and
cmp
ss
xchg
jns
xchg
xor
les
call
mov
mov
push
notb
jne
mov
scas
mov
cmp
rorb
fadds
shrb
test
loopne
xchg
adc
je
or
jo
xor
popf
clc
dec
inc
loope
or
rcll
jmp
or
subl
mov
mov
or
mov
aas
and
loope
ja
cmpsl
push
or
cmpb
jg
xlat
rcr
jnp
testb
cmpsl
jg
xor
adc
push
inc
insl
and
xor
jo
xor
jno
jecxz
xchg
or
rcrl
fwait
cs
or
dec
js
cmpsb
mov
push
aad
pop
xor
add
popf
mov
jns
pop
adc
xor
das
add
insb
adcl
sbb
imul
xor
push
cli
jle
jae
lods
lods
or
xor
inc
cmp
fidivs
and
dec
movsb
add
ljmp
mov
inc
sbb
sti
push
subl
cmpsl
sarl
mov
sbb
aam
jne
mov
mov
test
dec
pop
loopne
sub
push
xor
mov
ret
jecxz
lock
cmpsl
pop
jns
sahf
fcmovne
pop
mov
das
pop
pushf
pop
mov
push
adc
sub
testb
fdivrl
jne
out
jbe
nop
dec
adc
int
inc
stos
mov
add
pop
and
xchg
and
in
mov
std
jno
int
out
std
push
mov
adc
fs
fisubrs
in
gs
or
pushf
jo
pop
xor
iret
and
push
call
xchg
xor
xor
mov
xor
lcall
aaa
jge
and
outsb
ja
icebp
insl
jg
in
push
out
pop
and
push
xor
dec
js
pop
dec
inc
rorb
sub
sub
bound
sub
out
cmp
sbb
rorb
rcr
rcrb
pop
sti
and
xor
loop
cwtl
shrl
sarb
fldl
in
dec
cmp
scas
mov
inc
dec
push
int
mov
mov
adc
pusha
imul
fdivr
call
test
add
xchg
mov
jle
xor
push
mov
jns
pop
pushf
out
add
lret
sub
lret
negl
jecxz
and
roll
inc
loopne
bswap
movb
outsb
outsl
std
sbb
push
pop
cs
lahf
push
inc
adcb
mov
add
iret
sub
ja
nop
sbb
lret
mov
ljmp
testb
testl
bound
pusha
icebp
int
sbbb
add
mov
xor
mov
ss
je
imul
pop
mov
daa
cli
xchg
jmp
xchg
pop
push
sbb
scas
in
adc
push
pop
daa
call
test
inc
mov
repz
cmp
ret
cmpsb
cli
rorl
adc
adc
push
push
cmp
sbb
icebp
and
inc
inc
in
xor
int
ret
xchg
repnz
fisubrs
xchg
scas
imul
fcmovnbe
lahf
ljmp
xchg
adc
jne
sbb
mov
pop
mov
push
cmp
sbb
sbb
imul
jnp
and
xchg
dec
push
cmc
in
inc
mov
add
je
mov
inc
scas
xor
xchg
mov
xchg
lahf
cld
test
mov
mov
or
popf
imul
lods
and
lods
scas
repz
xchg
mov
sbb
js
popf
pop
adc
push
push
mov
push
dec
push
adc
fists
dec
xor
mov
lahf
out
loope
adc
sbb
in
mov
jnp
sub
cli
xor
leave
sbb
pop
jg
ja
cltd
mov
subl
iret
mov
xchg
cmp
mull
fistpl
mov
dec
sub
inc
sub
insl
push
out
arpl
cmp
popf
push
sahf
mov
in
fstpt
mov
or
leavew
mov
cmpsb
push
mov
fcoml
inc
sub
shl
test
andl
cmc
cwtl
mov
out
aad
jle
mov
fmull
lret
or
and
ja
fmuls
enter
pop
ja
pushf
sbb
lock
dec
mov
ret
mov
mov
push
sbb
loop
mov
mov
pop
cmpl
daa
push
and
jnp
sbb
fs
push
add
dec
sbb
dec
in
fsubrs
inc
mov
inc
sub
or
fdivrs
mov
addb
test
fistl
push
xchg
xor
fdivl
mov
data16
ljmp
cmp
cmpsb
jecxz
rcrl
insl
push
scas
cltd
in
hlt
pop
rol
sub
add
icebp
nop
hlt
into
idivl
lcall
inc
xchg
in
cwtl
and
test
pushl
or
repnz
xor
stc
add
jo
scas
cmp
dec
add
push
jnp
fsub
pop
mov
and
iret
mov
lahf
cltd
jmp
repz
push
cmp
sbb
jle
aas
dec
dec
iret
dec
add
ss
mov
sahf
out
fcompl
fisubl
loop
mov
lret
popf
jbe
and
xchg
push
jbe
nop
mov
mov
adc
inc
pusha
xchg
push
mov
jbe,pn
dec
xchg
pop
push
lods
pop
dec
pop
xor
stc
cmp
add
mov
mov
jl
scas
mov
in
dec
js
lds
push
ds
int3
test
insl
and
jmp
cltd
push
cmc
mov
mov
mov
mov
dec
xorb
inc
das
popf
lods
xchg
arpl
adc
out
push
cmp
mov
shlb
dec
xchg
cmpsb
cmp
cli
int
dec
jl
nop
int
mov
xlat
add
fstps
fstps
cwtl
stos
xchg
adc
pop
dec
icebp
mov
sbb
mov
out
stc
insb
subl
pop
adc
pop
std
pop
popa
rcrl
outsb
add
push
ja
inc
outsb
ds
movd
lahf
test
aad
loop
jp
jae
lret
repnz
fsubrs
mov
in
dec
dec
sbb
pusha
mov
imul
clc
outsl
ja
pop
mov
cmpsl
stc
cmc
jp
push
jle
out
mov
addr16
adc
pusha
lcall
or
sbb
enter
int
mov
fbstp
mov
mov
call
lods
inc
add
xor
shrb
pop
in
in
and
pushl
loopne
sahf
add
cmpsl
adcl
xor
popa
test
ficompl
leave
pop
pop
popf
add
pop
xchg
cmp
test
inc
adc
mov
sub
push
add
xchg
int
cltd
std
mov
das
dec
rcrl
shl
sub
sbb
nop
sahf
mov
or
mov
aam
jecxz
xor
mov
les
aas
loope
ljmp
lret
daa
rcrb
sbb
inc
add
mov
int
roll
scas
mov
cs
or
mov
mov
push
xor
sbb
fs
xchg
movl
cwtl
cmp
repz
or
push
popf
dec
sub
pushf
push
sti
out
sbb
mov
das
aaa
lea
popf
cli
aas
ss
inc
clc
pop
push
push
int3
jecxz
fcoms
adc
jae
pop
mov
xchg
test
sbb
pop
xchg
mov
negl
clc
sahf
push
mov
popf
xor
out
jno
mov
pushf
ds
jl
lret
mov
push
dec
subl
insl
jmp
jmp
sbb
addr16
pop
dec
dec
scas
add
dec
not
cmp
dec
test
push
push
inc
xchg
into
jae
test
cmp
dec
rol
push
sub
xlat
adc
cmp
not
rcll
paddsb
cwtl
fcmovbe
inc
mov
push
mov
test
jecxz
dec
or
pop
add
mov
cld
jg
xchg
jl
fildll
aad
cmp
mov
mov
call
ret
fsubrl
aam
rcll
xchg
cld
sbb
cmp
rcrb
mov
push
cmc
dec
test
and
pop
pop
dec
pop
leave
popa
dec
bound
cwtl
in
fisubs
shll
lahf
mov
rcll
mov
lods
outsb
insb
and
nop
clc
fistps
mov
push
xchg
xor
dec
je,pt
scas
mov
lret
test
les
scas
adc
pop
xchg
lods
add
cmc
ret
jmp
pop
in
arpl
pop
cli
or
sub
mov
cmpsb
pop
mov
jne
js
pop
or
or
sbb
ret
add
xchg
rcrl
mov
out
stos
or
cmp
lods
scas
pushf
mov
xchg
dec
loope
adc
mov
repnz
mov
sbb
adc
ss
jno
jp
daa
and
std
daa
jge
jno
jns
loop
loopne
das
fidivs
in
arpl
lods
das
rcl
lods
hlt
mov
insb
fiadds
int3
push
clc
into
push
push
mov
lahf
scas
pop
push
push
pop
loopne
mov
pop
sahf
jp
xchg
mov
sub
iret
pop
sub
jg
mov
das
jp
sbb
imul
mov
aam
bound
test
pop
jae
xor
jb
or
outsl
mov
and
add
cmp
arpl
stc
jecxz
jmp
jp
pop
gs
fstpt
sub
int3
test
sar
or
mov
dec
dec
mov
imul
or
pop
inc
insb
pop
stos
xchg
test
xchg
enter
or
outsb
xor
mov
mov
pushl
hlt
hlt
jno
or
push
cmp
mov
push
fstpl
mov
and
pop
jo
lahf
gs
jbe
fsubr
sub
xchg
mull
mov
cmp
dec
inc
ret
loopne
test
stos
into
das
and
sti
sarb
jb
cli
dec
jbe
popf
mov
jb
mov
adc
es
xor
push
add
lret
enter
loopne
mov
fldcw
pop
daa
xlat
or
push
add
idivl
mov
pop
int
sub
mov
jecxz
mov
ss
sub
lcall
loopne
das
mov
jnp
aad
xlat
cs
lds
xchg
and
add
jmp
ret
jns
popa
or
cmp
push
negb
rorb
cmovs
mov
push
cmc
xorb
sbb
and
das
sbb
out
clc
out
insl
test
scas
out
rolb
cmp
jle
add
cmp
lahf
stos
jge
les
mov
add
mov
pop
notl
adc
daa
fs
jecxz
fsubrl
inc
rclb
lret
mov
pusha
addr16
cli
fisubs
out
sti
or
mov
aas
and
mov
sti
nop
jbe
cmp
sub
jbe
mov
roll
movsb
cltd
inc
jp
mov
test
cmp
sti
fnstsw
lds
repnz
mov
fwait
repz
cmp
jp
lcall
sti
xchg
sbb
pop
mov
sub
scas
pop
pop
out
in
jecxz
cmp
dec
pop
imulb
lret
cmp
mov
pop
xor
mov
stc
pop
in
xchg
pop
fwait
negb
push
push
pop
jne
jnp
fisubrl
fs
add
hlt
enter
pop
cmp
and
andl
imul
int
ficoml
xor
pop
add
scas
cwtl
shrb
pop
ret
dec
jns
xchg
scas
push
push
pop
cld
mov
lock
push
je
push
or
add
mov
jmp
xor
mov
dec
add
subps
imul
pop
in
mov
stos
mov
test
xchg
adc
subl
imul
or
sbb
dec
in
aam
ficompl
inc
loope
hlt
inc
xchg
ja
lea
rcll
jae
das
mov
xor
inc
fs
or
xchg
lahf
fidivl
pop
fimuls
cmp
pop
imul
test
xor
repnz
cmp
mov
sub
lock
push
push
je
repnz
loope
push
add
in
js
xchg
iret
or
cmp
loopne
xchg
or
idivl
fldt
movsb
arpl
fcomip
adc
xchg
ss
shld
cli
std
addr16
mov
nop
inc
fwait
cmp
jge
sbb
xchg
and
fs
adc
outsb
adc
jg
ljmp
fstpl
and
loop
aam
and
dec
xor
fsts
out
lcall
ret
aas
or
bound
and
iret
mov
and
fstpt
bnd
xchg
push
sarl
pop
adc
and
andb
popa
cmp
fidivrl
or
lret
das
or
mov
call
ss
add
mov
in
sbb
outsb
fnsave
dec
mov
xchg
nop
push
and
int3
jne
dec
jle
loope
icebp
dec
mov
sbb
cmp
add
ja
or
jne
push
xor
adc
outsb
in
lds
test
and
outsl
xlat
add
in
xchg
mov
enter
or
leave
sbb
cwtl
js
or
aad
clc
push
cmc
jge
mov
mov
dec
iret
ss
xchg
jno
sub
lahf
xchg
dec
cmp
inc
fcompl
mov
dec
mov
mov
out
sbb
out
xchg
add
pushf
sub
and
call
and
cmpsl
cli
lods
ret
adc
pushl
jne
popa
push
adc
and
mov
mov
jnp
mov
xchg
inc
sub
sbb
and
ret
pop
daa
xor
or
aas
push
mov
and
bound
mov
cmp
test
pushf
mov
dec
push
adc
inc
cmpsb
dec
enter
mov
inc
int
andl
xchg
push
stos
add
insb
inc
pop
add
in
and
mov
mov
inc
loope
loop
cwtl
imul
ljmp
lcall
sbb
inc
push
and
lret
pop
sbb
popf
fcoml
call
dec
sub
and
push
mov
lods
jne
xchg
push
fwait
loop
dec
aam
fwait
mov
popf
call
xor
adc
xor
jbe
sbbl
jo
cmp
in
jae
or
mov
sub
iret
decl
dec
lret
dec
mov
add
out
out
mov
jmp
push
mov
or
sarl
mov
xor
xor
pop
subb
mov
pop
sub
or
cmpsl
out
pop
push
test
popa
push
push
fistps
adc
pop
mov
aam
and
inc
and
inc
dec
ljmp
mov
dec
test
inc
mov
dec
inc
jg
dec
andb
loope
movsl
das
sbb
orl
movsl
fcmovb
js
clc
pushf
mov
dec
or
mov
insb
daa
xor
in
dec
mov
xlat
mov
xchg
sahf
push
inc
fmuls
in
pop
loope
cs
iret
xchg
push
cltd
cmp
sbb
pop
lods
pop
xchg
pop
fildll
mov
mov
pause
fisubs
cld
mov
jecxz
insb
jl
xor
cmp
subb
out
arpl
sub
xor
mov
ret
out
dec
lcall
push
inc
mov
imul
sarb
xchg
inc
lock
cltd
xchg
push
les
jns
inc
test
icebp
loop
adc
push
jnp
jmp
pop
inc
pop
insb
repnz
test
xor
adc
dec
test
jg
scas
jmp
ds
test
movsb
mov
push
test
pop
lods
ret
cmp
std
lods
pop
shrl
mov
out
mov
mov
sbb
aam
or
mov
cmpxchg
aad
insl
rcll
sbb
loop
push
push
xchg
cli
and
test
push
popa
pop
or
dec
xor
mov
sbb
ret
pop
or
std
xor
lret
repz
lret
mov
xlat
leave
dec
repz
loop
scas
mov
sarl
dec
push
sub
mov
dec
clc
js
sub
das
insl
add
repz
repz
enter
xor
sahf
jmp
fcompl
xchg
pop
in
mov
sti
or
js
lods
mov
push
test
jecxz
jns
pop
push
and
imul
jle
xchg
jmp
aam
inc
or
inc
inc
adc
xchg
push
repz
cmp
pop
or
lret
inc
sbb
cmpl
sahf
sbb
xchg
js
test
sbb
inc
iret
int
mov
push
xchg
mov
mov
sarb
enter
jp
sbb
lret
aaa
cltd
add
inc
pop
popa
jno
stc
andb
leave
adc
inc
les
xor
loope
aad
jae
hlt
mov
lret
test
inc
imul
dec
adc
testl
leave
popa
fcomip
mov
decl
or
xor
cld
inc
out
mov
xchg
test
adc
sub
int3
xchg
mov
out
jge
scas
jmp
lret
sbb
repnz
iret
hlt
xchg
sbb
dec
shrb
inc
hlt
int3
repz
dec
ret
mov
fwait
cltd
mov
sub
loop
pop
mov
addb
lcall
imul
jns
mov
add
orb
mov
in
xchg
inc
jno
sbb
in
add
xchg
mov
cmp
xor
xor
lcall
push
in
jbe
shll
adc
push
pushf
dec
jl
out
adc
fnop
rorl
jmp
cwtl
sbb
push
pop
dec
adc
pop
pop
repnz
je
push
jmp
stos
shrb
test
and
fisttps
lcall
mov
mov
jno
shrb
aam
fs
aad
sahf
or
ret
cwtl
jg
xor
inc
and
rclb
push
lock
insb
and
sti
shrb
fyl2x
xor
adcb
and
push
insl
gs
idivl
insb
push
rorb
pop
mov
adc
jne
cmp
mov
pop
or
in
mov
or
inc
sbb
pop
add
xchg
add
jne
push
jmp
sbb
cmpb
xchg
sbb
push
dec
sub
cltd
cmp
pushl
mov
into
push
push
loope
pop
and
fisubrl
xchg
mov
mov
in
adc
mov
or
mov
add
faddp
push
mov
pop
inc
mov
sbb
mov
arpl
loopne
cmp
jbe
push
jg
xchg
push
mov
leave
sbb
jno
rorb
xor
sarb
daa
xchg
jae
pop
dec
repz
jg
daa
test
add
sahf
ret
movsb
sub
push
mov
mov
clc
adc
jmp
sbb
arpl
jecxz
dec
mov
sti
sahf
sub
out
insl
in
mov
sbb
testb
roll
in
std
es
cmp
sahf
jmp
mov
sub
cmp
mov
in
int3
rorb
jne
in
cs
fsubrs
negb
mov
and
jle
lahf
out
add
enter
sbb
jns
stos
or
jbe
jne
je
adc
mov
movsb
cmpsl
mov
imull
mov
sbb
addr16
arpl
test
jae
into
xchg
in
pop
mov
and
xchg
fsubrl
jae
ret
ss
scas
pop
dec
les
add
clc
fnsave
mov
xchg
int3
cmp
gs
add
lahf
ljmp
cmp
xlat
and
cmp
mov
lret
es
mov
mov
cmp
and
push
sbb
inc
xchg
xchg
rorb
int3
and
data16
push
and
mov
mov
add
ret
insl
sub
cmp
sub
into
push
adc
jle
inc
leave
and
repz
fstps
sub
shrl
and
es
shlb
adc
das
dec
pop
sub
or
mov
lock
push
mov
xchg
in
outsb
into
pop
lret
shl
js
xchg
mov
mov
mov
imul
pop
push
inc
inc
stc
fdiv
repz
stos
cli
aam
repz
dec
pop
jge
cmpxchg
subb
dec
push
ds
and
inc
jle
mov
adc
pop
mov
push
and
xchg
cli
jp
and
inc
lret
pop
adc
mov
inc
aas
fildll
jae,pt
in
adc
or
int
or
cli
sti
mov
lods
hlt
inc
mov
cmpsl
mov
outsl
movsl
add
dec
lods
mov
pop
pop
jne
jge
mov
mov
jecxz
mov
jne
push
mov
int3
lods
dec
adc
mov
pop
icebp
lods
or
test
jae
sbbb
ljmp
out
repnz
dec
ret
cld
mov
pop
xchg
mov
lods
mov
aad
sbb
inc
or
arpl
lods
jg
cwtl
test
cmp
shrl
insl
pop
or
mov
jb
das
xor
xchg
or
and
push
js
leave
mov
and
or
mov
nop
mov
fdivs
ja
xlat
mov
jl
bnd
shl
xor
jo
push
stos
push
sti
fcmovne
test
cmp
les
push
loope
or
push
add
mov
pop
cmp
les
push
mov
loopne
addr16
int3
int3
adcb
arpl
mov
cmp
rcrl
pop
add
jnp
insb
test
in
jns
jae
and
in
dec
jg
popa
jg
gs
lea
notb
rcrb
inc
xlat
in
dec
fildl
xor
xchg
lret
xchg
jge,pn
rclb
not
cmpsl
aaa
fistpll
icebp
jb
pop
or
or
pop
push
push
dec
pusha
cmp
mov
flds
movsb
mov
mulb
leave
pop
mov
inc
adc
jne
in
lret
in
loop
add
inc
xlat
xchg
pop
test
or
xchg
stos
add
scas
addl
pop
dec
loopne
adc
and
cmp
and
pop
in
mov
push
push
rolb
fnsave
mov
cmpb
mov
rorl
fucom
mov
jmp
sub
shll
jp
pop
andl
jecxz
cmc
inc
inc
pop
dec
rolb
push
clc
jnp
pop
xchg
jbe
aam
inc
and
xlat
adc
xor
shll
cld
cmp
dec
lea
jbe
cmp
mov
daa
aaa
mov
mov
dec
sbb
shrl
and
daa
mov
std
fs
mov
add
mov
mov
out
fldenv
imul
push
add
cmpsl
loop
icebp
lcall
xchg
or
hlt
add
xchg
out
cs
jns
or
lods
sbb
sub
sub
addb
dec
out
stos
sub
push
out
pop
sub
cmpsb
or
sub
icebp
shl
and
stos
stos
repnz
sbb
iret
iret
mov
sub
lret
push
cmp
ret
test
out
dec
insl
pop
jge
jl
or
pop
leave
mov
mov
xchg
cmp
jns
cltd
mov
mov
dec
and
arpl
testl
cmp
push
ljmp
ficoml
add
inc
js
jbe
sub
pop
int3
cmc
lods
das
pop
or
push
ja
hlt
add
pop
fisubrs
dec
xor
pop
xchg
xchg
insb
xlat
mov
in
mov
shll
dec
stc
inc
jge
dec
and
in
cwtl
and
push
pop
adc
enter
cmc
inc
inc
push
enter
dec
imul
pop
pop
in
mov
leave
aam
outsl
jmp
mov
xor
insb
jle
inc
inc
hlt
mov
push
lret
js
hlt
mov
aas
xchg
pop
mov
jl
pop
xchg
out
sub
and
xchg
and
adc
and
jg
addr16
lea
inc
daa
scas
scas
rol
mov
fstp
in
sub
mov
dec
outsb
dec
sbb
in
and
lea
push
fdivl
dec
dec
std
leave
aam
jmp
orl
fcmovbe
hlt
jae
push
mov
repnz
add
test
subl
stc
pop
ds
adc
sbbl
into
adc
inc
dec
mov
pushf
fildl
icebp
push
inc
sbb
jge
and
sbb
setnp
pop
lds
cmpsb
mov
mov
adc
jns
ja
les
push
sarl
daa
lret
sub
movsl
mov
or
or
sbb
in
mov
pop
inc
pop
or
push
rcr
js
lods
stc
lret
ss
cmp
ja
dec
push
insl
add
jnp
sub
pop
sub
lret
out
push
and
sbb
jle
out
icebp
aaa
xchg
xchg
xchg
fucomi
outsb
cmp
icebp
pop
stc
adcl
lret
ss
cmp
ret
and
std
mov
xchg
cmpsl
call
es
pop
lcall
cmpsl
setae
sbb
dec
shll
pop
push
jmp
negb
mov
push
movsl
mov
xchg
adc
push
std
lods
loope
and
daa
and
shrl
fldl2t
rcrb
rep
sub
jg
push
jo
push
push
dec
xchg
pop
jbe
dec
in
int3
int
pop
shlb
addb
ljmp
dec
inc
insb
pop
shll
xor
and
ret
adc
xchg
push
mov
inc
jecxz
fs
movsb
jnp
pop
sub
add
ret
sub
adc
jge
mov
ja
jl
or
ret
or
cld
and
lods
call
xor
cmpsl
jecxz
sub
xchg
lods
sarb
adc
sbb
lea
xchg
mov
roll
xchg
out
mov
cwtl
testl
add
sub
mov
push
mov
cmp
ficompl
inc
add
addr16
das
jbe
out
adc
and
movsb
mov
mov
aad
mov
out
pop
or
dec
inc
cmpsl
jp
test
push
leave
mov
iret
test
dec
jmp
push
sbb
add
and
add
out
ds
fistps
mov
in
push
mov
fbstp
testb
adcl
pop
lret
fidivs
popf
mov
xor
mul
push
lea
ja
sbb
sub
or
ret
mov
mov
pop
sbbl
adc
arpl
inc
insl
pop
call
lret
add
jbe
ljmp
or
pop
scas
pop
cmp
int
xchg
sub
mov
xchg
mov
or
call
jge
xor
mov
subl
jnp
rcrb
pmaddwd
fistps
push
hlt
mov
pop
cmp
dec
mov
xor
test
xchg
enter
lods
pop
shl
stc
mov
mov
scas
sbb
inc
insb
js
loopne
adc
arpl
mov
sahf
je
lock
ss
aad
dec
mov
xchg
xchg
mov
xor
jecxz
popl
out
mov
adc
push
mov
adc
fcoms
outsl
je
mov
jecxz
lods
out
imulb
sub
in
or
loop
mov
lds
mov
cltd
ljmp
xchg
mov
in
adc
fwait
jge
cld
outsl
imul
jp
push
test
jge
mov
mov
enter
cmp
or
int3
mov
addb
repz
and
gs
push
mov
les
rol
mov
add
das
cmp
pop
push
imul
stos
out
mov
scas
inc
adc
mov
mov
pop
push
ja
inc
jns
test
test
and
jecxz
cmp
daa
pop
inc
mov
xchg
test
repnz
xchg
ret
xor
add
and
mov
jmp
test
repz
mov
ds
add
sub
cltd
pop
cmp
aaa
and
aas
stc
addb
fsubrs
xor
or
xor
push
mov
lock
stc
test
sar
adc
push
and
pusha
xor
lret
mov
mov
xor
shrb
mov
les
xor
adc
mov
dec
push
xor
inc
in
cmp
dec
mov
aas
inc
mull
inc
sub
popa
rcll
pop
inc
sub
insl
push
dec
mov
sub
cs
xchg
inc
or
call
cmpsl
int3
jl
aaa
pop
sub
xchg
pop
mov
mov
in
adc
jge
and
addl
push
xchg
sbb
and
ret
adc
inc
lret
movsl
mov
cmpsb
jne
mov
mov
jbe
gs
cmp
pushf
push
fcoms
pop
dec
mov
int
mov
mov
cmp
aaa
mov
fs
idivl
ss
mov
push
jp
mov
pop
pop
pop
pop
lcall
mov
mov
leave
or
inc
lds
sahf
clc
mov
les
xchg
popf
pop
add
imul
fidivrs
cmpsb
jle
sbb
fldl
fmuls
adc
cmpl
cli
xor
xchg
push
ucomiss
sub
pop
mov
sbb
dec
jp
icebp
and
mov
fsubrp
dec
daa
lock
pop
aam
roll
in
jnp
dec
and
push
lods
sti
cli
mov
add
mov
aaa
arpl
rcll
jbe
inc
inc
pusha
add
faddl
add
andl
jle
mov
aam
repnz
bound
push
fdivs
cmp
push
shll
insl
or
fcomps
add
insb
push
xchg
push
hlt
sub
mov
xor
push
imul
lahf
jp
add
fildl
fwait
mov
mov
in
push
jg
out
jle
dec
loope
mov
fadd
xchg
mov
bound
inc
imul
iret
fisubrl
and
into
add
fwait
sbb
cmp
jo
rclb
jg
push
pop
mov
or
pop
jne
and
and
xchg
pop
and
insl
add
js
dec
and
mov
and
aas
test
das
sub
mov
idivb
ficompl
mov
mov
aaa
cli
inc
xchg
ror
clc
jno
mov
bound
in
mov
jnp
add
xlat
daa
mov
adc
ja
cltd
pusha
sbb
inc
sub
mov
lods
sbb
xor
imul
mov
adc
mov
push
lods
fs
and
hlt
cwtl
dec
into
pop
mov
and
xor
test
push
psubusb
xor
pop
and
inc
daa
xchg
and
stc
das
lea
hlt
adc
add
aaa
mov
sub
sbb
test
pop
loop
rcrb
fstl
dec
sarb
lods
and
imul
andb
pusha
subl
push
jmp
sub
cmove
dec
call
rol
addr16
adc
and
mov
sub
pop
sbb
je
add
std
repnz
mov
outsl
js
fisubs
in
adc
push
add
push
add
push
addb
movsb
adc
cmp
xchg
movsb
xor
lds
notl
inc
insl
das
flds
cli
cwtl
sbb
rcll
cmp
outsb
lcall
mov
cmp
cli
mov
add
insl
push
enter
mov
jle
aaa
movsl
repz
push
cmc
mov
add
jo
fcmovne
aad
hlt
or
jg
sbb
jnp
aam
pop
and
mov
jno
xchg
xor
shrl
daa
pop
adc
popf
mov
call
sbb
fwait
icebp
fcomps
stc
add
push
pop
cmp
add
inc
cmp
cmp
adc
loop
mov
jmp
and
das
push
in
xchg
xchg
or
xchg
dec
dec
fistps
jge
xor
cmpsb
cmp
push
mov
cmp
andl
scas
jl
daa
imull
dec
inc
xchg
add
ret
xchg
ja
fisttpll
adc
mov
leave
test
xchg
xor
mov
sub
sub
cmpsl
rcrl
lods
xchg
and
mov
mov
push
cmp
shll
cwtl
stos
push
jbe
push
sub
cmpsl
adc
xchg
mov
loop
mov
xor
jno
pop
sub
outsb
es
xlat
test
fists
mov
aad
add
sub
pop
leave
subb
mov
sarb
dec
add
pop
lcall
mov
jg
ret
daa
popa
push
mov
xor
ljmp
loop
lods
lds
xchg
lret
fs
dec
push
mov
fstps
xor
mov
sbb
mov
cmpb
sbb
add
in
push
cmpsl
enter
adc
mov
sbb
xchg
mov
sub
lahf
sahf
xor
sbbl
mov
call
ss
arpl
inc
adc
jl
in
push
test
dec
mov
mov
jmp
mov
lods
dec
enter
xchg
mov
or
js
pop
movb
sub
and
jmp
pop
ljmp
insb
sub
push
push
mov
mov
or
scas
push
gs
cmp
and
aam
push
lea
ret
bound
mov
cmp
inc
mov
mov
in
daa
sub
dec
xchg
shl
cmpsl
sub
xchg
jb
into
insl
xchg
mov
or
mov
sub
xor
mov
loopne
test
cmp
js
daa
and
xchg
js
mov
push
fcoml
sub
cs
mov
dec
mov
lods
sbb
cwtl
xchg
in
icebp
mull
sbb
sbb
loop
fildl
femms
fadd
jns
aam
repz
imul
push
mov
gs
ret
into
xor
add
ja
andb
inc
adc
gs
xchg
and
push
mov
lods
subb
ljmp
sbb
push
stos
mov
sbbl
adc
repnz
popa
leave
jnp
jno
stos
rorl
add
and
jb
xchg
inc
test
not
mov
int3
sub
cli
mov
mull
xlat
mov
cmp
insb
movsb
adc
inc
mov
daa
insb
or
dec
adc
add
hlt
stos
mov
iret
fs
jns
stc
daa
cs
leave
cli
js
je
out
ss
sub
fisttps
arpl
std
loopne
imul
mov
add
lret
ja
mov
dec
scas
aas
xchg
xchg
shrb
push
lea
lahf
mov
les
sbb
mov
data16
and
mov
mov
jmp
rorl
enter
aas
push
adc
enter
insb
loop
ds
add
cltd
rcrb
jmp
ljmp
scas
lds
rep
push
adc
or
jg
icebp
std
sub
mov
jnp
fidivs
pushf
push
pop
mov
xchg
into
es
pop
jle
js
sub
out
div
and
cltd
jl
xor
mov
sahf
sbb
jle
insl
pop
shll
repz
or
inc
cmpb
or
popa
add
out
add
jnp
cmp
mov
jmp
pop
xor
out
ret
pop
ret
fldl
rcr
and
stos
scas
xor
and
or
mov
push
inc
inc
mov
add
and
dec
xor
or
xchg
mov
aam
xorb
jge
or
sub
mov
jecxz
int
icebp
mov
mov
test
mov
mov
cmp
sbb
sarl
insb
mov
movl
cli
mov
hlt
push
inc
std
jge
aam
push
add
add
not
cmp
dec
push
outsl
dec
sbb
add
pop
inc
cmp
inc
insb
lea
sub
dec
cmpxchg
mov
mov
hlt
sbb
ret
in
fdivrs
pop
ficoms
xchg
ret
rcr
or
cmc
aas
adc
loop
mov
mov
das
sub
xor
jmp
and
bnd
mov
aaa
mov
pop
pop
shlb
arpl
ret
mull
stos
sahf
push
ljmp
push
jb
icebp
inc
out
leave
and
into
out
cmp
movsl
push
dec
and
sbb
sub
fstl
mov
out
clc
dec
aaa
or
lea
push
xor
les
cwtl
adc
inc
mov
xor
mov
mov
aas
lock
mov
leave
idiv
cmpsl
inc
nop
jae
cli
mov
push
daa
je
inc
jp
or
pop
mov
inc
push
jecxz
arpl
push
and
sbb
js
mov
add
scas
add
sbb
lds
push
dec
popf
pop
cmpsb
jb
mov
leave
adc
call
and
cmp
push
mov
inc
xchg
mov
cmp
mov
ljmp
xchg
or
lret
inc
repz
mov
ljmp
mov
push
aas
mov
add
ja
or
aam
pop
lret
stos
loope
xlat
inc
sahf
stos
push
lcall
mov
sbb
cmp
sbb
js
les
push
xchg
sbb
adc
inc
into
sbb
lods
addr16
loop
pop
cmpsb
or
js
adc
adc
dec
decb
imul
adc
in
arpl
or
jns
into
div
ja
xor
mov
lcall
ja
shl
pop
xor
pop
xchg
pop
sbb
out
adc
sbb
repnz
xor
add
scas
in
ficoms
lcall
sub
pop
inc
jge
and
enter
stos
mov
lods
std
cltd
data16
mov
cmp
nop
je
movsl
mov
repnz
cmpsb
pop
iret
sahf
test
xor
cld
jae
stos
or
push
or
mov
and
xchg
aam
adc
pop
lcall
mov
leave
inc
lahf
pop
loop
stc
push
in
loop
rcrl
xor
lcall
jg
xchg
dec
dec
pop
or
aas
push
daa
push
ficompl
xchg
sbb
mov
ds
dec
xor
test
jne
into
loop
push
mov
arpl
pop
imul
enter
loopne
lods
xchg
push
movsb
js
aam
sbb
push
ss
dec
mov
sub
push
push
aas
sub
cltd
pop
fs
dec
in
and
mov
scas
lcall
push
icebp
popa
in
sub
js
or
shrb
das
and
cld
dec
push
mov
clc
or
stos
dec
and
adc
adc
rolb
adcb
aas
call
loop
int3
test
dec
dec
sahf
mov
ljmp
pop
faddl
insb
cmovge
call
sbb
aas
test
arpl
sbb
and
repnz
mov
std
in
xchg
out
int3
push
stc
and
clc
mov
es
xor
adc
mov
imul
pop
xchg
pushf
mov
in
movsl
inc
jecxz
mov
jecxz
cmp
icebp
bnd
sub
das
push
and
les
push
outsl
fwait
push
cmp
aam
xchg
sub
jae
lea
cmpsl
mov
filds
cmp
insl
js
sub
mov
jecxz
outsb
sbb
inc
in
inc
push
pop
ret
lahf
pop
cmp
sbb
pusha
cmp
adc
lock
sub
aam
jg
jno
mov
lock
lds
rorl
iret
mov
pop
mov
iret
xor
loop
fwait
mov
fs
repnz
xchg
inc
imul
cli
and
mov
leave
cltd
jb
adc
xchg
push
push
mov
mov
shll
xchg
data16
sub
adcb
fisubl
push
mov
mov
mov
jl
shll
mov
fsubrs
fcomps
shr
int3
xlat
pushf
aad
push
scas
in
cmp
and
stos
test
pushf
jle
rclb
lods
imul
or
jmp
cmp
cs
xchg
push
aas
mov
xchg
push
or
imul
pusha
mov
push
or
dec
call
xlat
add
and
sbbl
icebp
out
jnp
pop
ret
fdivr
frstor
lcall
jae
mov
fwait
pop
lret
cmp
xor
or
sbb
adc
sbbb
sbb
fisttpl
pop
xlat
sbb
std
mov
pop
adc
loope
xchg
cltd
nopl
rorb
std
mov
outsb
jg
inc
fs
movsb
dec
adc
xchg
jmp
scas
in
arpl
sub
mov
mov
out
in
sbb
in
or
pop
in
sarl
pop
addr16
cmp
pushf
xor
movsl
stos
xor
inc
push
inc
imul
push
negb
xor
in
jns
iret
xorl
test
sub
sbb
push
xchg
cmc
scas
lods
cltd
loope
or
jne
xchg
add
les
mov
scas
mov
sub
pop
adc
xor
idiv
mov
push
stc
push
sbb
les
popa
imul
mov
jle
das
test
inc
inc
pop
mov
inc
cmp
loop
out
mov
and
push
out
jecxz
xor
ds
ds
inc
shlb
loope
dec
pop
push
mov
xorl
mov
ljmp
in
fstl
inc
dec
and
fnstenv
sahf
fnstsw
lods
jno
xor
pop
xchg
pop
testb
int3
pop
cmp
cld
nop
pop
adc
sbb
lds
enter
and
lret
cld
or
ljmp
icebp
mov
add
jp
pop
push
cli
and
mov
icebp
ja
jae
movsb
int3
xorl
stc
test
fiadds
loop
mov
cmc
int
fimuls
loop
and
pop
popf
cmp
mov
mov
push
nop
push
mov
ret
data16
mov
cmpsb
inc
inc
jg
inc
mov
addr16
sbb
xchg
test
lods
rcrb
ss
jb
xlat
xor
add
popa
mov
lds
sbb
data16
sub
jo
cmpsl
jg
test
repnz
pop
out
fwait
out
sti
lcall
xor
iret
mov
mov
iret
mov
enter
xor
int
push
scas
xor
orl
cwtl
popa
mov
cltd
push
mov
xchg
or
in
add
xchg
test
push
std
rorb
ret
pop
fwait
mov
lock
push
jns
cwtl
jo
pop
jb
mov
shrl
daa
sbb
loopne
stos
sbb
sahf
mov
mov
cmp
lds
jmp
hlt
sbb
mov
jp
loop
adc
popa
xchg
adc
push
movsl
xor
ret
xlat
insl
out
arpl
push
cmp
add
inc
dec
repz
jb
repz
mov
ljmp
insl
push
push
pop
sub
rorl
xchg
adc
ret
xchg
add
lods
sbb
ss
imul
into
cmp
cmp
pop
bnd
out
inc
test
call
dec
lcall
stos
cmp
mov
test
ljmp
mov
pop
lock
add
shll
cli
repz
sub
popf
fsubrs
and
pop
mov
in
jmp
adc
or
or
fmuls
mov
aad
pop
in
cmp
mov
add
test
pop
xchg
sahf
mov
subl
mov
cmpsb
lcall
jns
inc
mov
int
clc
jg
mov
jbe
ret
mov
xorl
cld
or
sbb
mov
inc
pop
enter
inc
bound
int
pop
fisubs
nop
pop
scas
into
fcoml
add
and
arpl
adc
sub
shll
addr16
add
lds
cmp
inc
and
jl
cmp
les
rorl
push
sbb
dec
in
mov
cmp
rcl
bound
jl
dec
stc
cmp
cmp
iret
add
je
test
or
mov
jle
mov
sbb
pop
test
loop
aam
orb
sub
popf
mov
int3
add
scas
loop
cmp
hlt
push
daa
pop
loop
cmp
xchg
in
cmp
dec
popf
dec
scas
push
rcrb
lods
add
xlat
adc
mov
stos
inc
jecxz
xor
or
sbb
rolb
dec
add
mov
cmpsl
cmp
arpl
adc
jmp
cmpsb
jl,pt
jg
mov
lods
mov
mov
lret
jl
xlat
or
int3
stc
dec
test
jno
cmpsb
jle
cmp
ret
in
push
test
insb
dec
sub
jmp
ss
mov
mov
push
gs
jns
fnstsw
pushf
xchg
das
enter
xchg
aam
cmp
sub
adc
dec
jns
sahf
xchg
aad
jmp
repz
xor
fbstp
or
in
dec
mov
insl
sbb
add
push
push
into
adc
or
aam
push
add
sbb
jmp
and
ljmp
loop
stos
sub
add
leave
sub
loope
mov
aas
adc
pop
outsb
sbb
clc
mov
pop
sub
adc
push
lods
mov
into
dec
mov
rcl
lcall
movsl
repnz
pop
xchg
es
lahf
out
mov
fstl
push
cltd
pop
pop
test
dec
sbb
dec
xchg
call
push
scas
in
sbb
add
nop
stos
sbb
nop
cmp
enter
addb
stos
in
int3
outsb
icebp
add
