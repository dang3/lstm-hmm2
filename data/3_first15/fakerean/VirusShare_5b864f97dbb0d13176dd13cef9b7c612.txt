and
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
sub
push
and
cmpl
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
jl
inc
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
dec
pop
inc
add
lea
push
mov
mov
pushf
push
inc
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
sbb
inc
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
adc
popf
xor
push
and
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
and
adc
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
es
add
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
sbb
push
adc
add
movl
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
push
sub
pop
xchg
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
inc
cmp
adc
lds
or
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
lcall
pop
jl
or
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
cs
add
out
je
add
or
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
iret
daa
inc
add
inc
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
jge
inc
add
adc
add
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
data16
add
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
js
inc
add
xchg
inc
lock
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
add
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
add
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
inc
add
or
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
inc
add
les
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
adc
add
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
testb
jne
push
lea
push
call
test
je
mov
andb
test
je
cmp
je
mov
or
mov
xor
inc
pop
pop
pop
mov
pop
ret
cmp
jne
movzwl
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
mov
mov
push
call
lea
call
lea
call
lea
call
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
inc
cmpl
push
mov
jl
jg
cmpl
jbe
mov
mov
lea
push
call
test
je
push
mov
mov
mov
push
mov
call
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
push
call
test
jne
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
pushl
mov
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
test
pop
pop
jne
cmpb
je
pushl
mov
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
mov
mov
lea
push
push
call
test
jne
xor
cmp
je
lea
push
mov
mov
mov
mov
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
add
sub
test
call
test
mov
je
mov
mov
push
call
cmpl
jl
jg
cmpl
ja
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
mov
call
push
push
lea
push
pushl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
pushl
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
add
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
inc
add
inc
add
add
add
jns
push
clc
add
xchg
jb
les
add
scas
sti
add
add
add
add
out
rolb
mov
jnp
add
push
jae
add
lcall
enterw
mov
add
push
push
push
push
push
lea
push
push
call
add
movsl
testb
in
add
xchg
cwtl
add
mov
stos
shll
popa
add
push
push
add
push
lds
add
push
push
leave
push
add
test
add
jle
test
add
add
in
addl
sahf
nop
rolb
pop
in
cltd
adc
mov
lea
pop
popl
push
push
push
push
push
call
add
jne
xchg
ficoml
push
in
add
add
imul
iret
lds
add
add
add
jp
add
add
in
lods
test
aad
in
add
add
gs
mov
add
outsl
jge
push
cltd
jae
add
sahf
popf
lcall
rolb
add
int
hlt
lea
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
jno
add
add
jecxz
add
add
in
out
rolb
mov
ja
rol
add
xchg
fwait
xchg
test
add
push
sar
add
out
in
lods
call
mov
hlt
je
add
pop
add
stc
add
loope
mov
push
test
ja
add
mov
in
mov
lea
pop
push
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
pusha
add
lahf
push
mov
test
jl
add
arpl
jne
test
push
out
mov
add
add
loopne
out
out
outsl
lea
push
int
add
rolb
add
enter
lcall
lea
pop
call
call
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
add
icebp
into
rcll
mov
sub
add
insb
std
fildl
add
jnp
cmpl
add
cli
cmpl
loop
add
mov
add
movsb
out
add
add
hlt
mov
lea
pop
push
call
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
mov
faddl
lods
pop
add
add
add
popa
cld
push
add
lock
scas
loopne
add
mov
stc
xchg
test
add
insb
mov
hlt
jno
aam
bound
pop
jmp
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
cmpsb
pusha
mov
lret
add
popf
add
popl
test
std
add
add
add
cmc
lock
add
hlt
add
add
fnstsw
add
roll
mov
mov
sbb
jp
add
jge
shl
popa
nop
jns
filds
stos
add
add
mov
and
add
sub
push
lea
push
lea
push
push
lea
push
push
call
js
add
mov
add
mov
add
jo
in
add
fs
add
add
xchg
xorl
add
add
mov
xchg
jl
add
pop
mov
jmp
add
out
pop
sbb
mov
rcl
add
add
add
xchg
add
pop
mov
push
add
add
add
mov
lea
pop
mov
mov
push
push
push
lea
push
push
push
push
call
add
xchg
lds
jae
loope
jno
add
jb
test
jae
add
mov
mov
mov
pusha
add
lds
add
jle
add
arpl
mov
lret
cwtl
add
jmp
insb
mov
add
jl
imul
add
add
push
add
add
roll
aam
bound
add
add
push
push
call
jp
add
add
mov
add
out
push
lahf
jns
test
arpl
add
add
cmpsl
mov
hlt
add
loop
hlt
push
cmpsl
leave
add
pop
cmc
jmp
add
pop
pop
add
stc
push
pop
je
push
jne
mov
je
loop
fsubrl
testb
mov
mov
fld
insb
add
push
jae
aam
bound
pop
add
push
push
push
push
push
push
lea
push
push
call
jb
add
stc
ljmp
push
add
ret
movsl
sarl
add
add
cmpsb
outsl
mov
add
jmp
decb
xlat
stc
mov
push
stc
fidivl
roll
mov
mov
lea
pop
mov
push
push
lea
push
call
add
add
add
iret
add
add
scas
add
leave
cwtl
loop
pop
add
pop
adcb
xchg
mov
int
mov
lea
pop
xor
push
push
push
push
lea
push
lea
push
call
add
cmpb
add
add
push
orb
add
fcomps
int
push
pop
aad
add
icebp
cmpb
add
ja
cltd
add
jno
leave
int
mov
xor
push
in
add
popf
xchg
add
add
cld
add
add
pop
add
push
push
not
push
or
inc
add
add
sub
shr
pop
not
ror
pop
push
push
push
push
push
push
push
push
call
mov
stos
add
push
leave
add
add
pushf
int3
ficoms
add
lods
add
add
enter
add
mov
popa
jp
pop
jbe
add
jge
lahf
into
pop
incb
add
add
mov
add
add
in
js
cmpb
add
outsl
mov
lea
pop
pushl
push
push
push
lea
push
push
push
lea
push
push
push
call
cli
mov
pop
sti
push
push
out
pop
jb
xchg
rcrl
pop
xchg
hlt
add
add
push
push
roll
std
into
add
xchg
pop
add
push
fimuls
add
fwait
in
xchg
jb
sahf
mov
add
data16
call
mov
push
push
push
push
push
push
push
push
call
add
mov
je
xchg
pop
cmpsb
add
jb
fwait
hlt
add
add
lcall
mov
add
add
loope
add
pusha
add
in
add
add
pop
out
add
pop
add
loopne
cld
lea
pop
movl
lea
push
push
push
push
push
push
push
push
push
call
add
mul
scas
add
add
mov
pop
ja
add
in
add
mov
add
hlt
add
add
jmp
int
rcl
fisttps
sahf
mov
jmp
add
push
fwait
add
neg
mov
lea
pop
push
push
push
call
shll
add
push
mov
add
lea
add
movb
adc
xlat
inc
mov
mov
cwtl
mov
add
add
std
jmp
mov
stos
add
mov
add
jns
mov
sti
mov
add
add
mov
lea
pop
pushl
push
lea
push
push
push
push
push
lea
push
call
pop
add
add
out
add
xchg
popa
push
add
lret
insb
add
test
add
mov
stos
nop
mull
imul
add
add
push
mov
xchg
add
xchg
lcall
jne
mov
push
in
out
add
ljmp
pushl
push
lea
push
call
call
imul
clc
cwtl
lods
mov
insb
stos
bound
lds
rcrl
mov
popf
ret
add
fsincos
mov
add
add
addr16
add
add
add
jo
mov
test
call
mov
mov
push
add
or
scas
sub
add
movswl
push
push
call
push
xchg
out
add
scas
add
data16
mov
in
add
in
pop
add
lret
cli
out
aam
arpl
fadd
add
notl
in
push
add
add
movsl
xchg
mov
push
jbe
add
js
cltd
add
cmpsb
popl
imul
add
add
jns
fwait
icebp
xchg
add
fbstp
xchg
mov
lea
pop
pushl
push
push
call
enter
add
cmpsl
arpl
add
xchg
aam
jp
push
add
cwtl
add
add
add
add
out
popf
cld
mov
add
gs
mov
jge
mov
push
add
xchg
leave
add
or
jne
push
push
push
lea
push
lea
push
push
lea
push
call
add
cli
add
add
add
jae
mov
jmp
add
jb
mov
add
repnz
fadds
sbbb
add
jle
fcomps
fists
xchg
fwait
add
fsubrl
jne
add
scas
mov
lea
pop
call
push
push
shr
xor
shl
push
and
add
add
dec
rol
sub
inc
pop
lea
sub
shr
pop
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
push
divb
add
sar
xchg
pop
nop
xchg
mov
add
add
into
fiadds
mov
add
filds
push
add
add
movsb
mov
mov
add
push
add
imul
mov
lea
pop
pushl
call
push
push
push
push
push
push
push
call
fdivrl
add
cmpsl
jno
cld
add
cmc
mov
add
pop
add
add
movl
filds
xchg
add
xchg
je
loop
cmpsb
call
mov
out
cld
lock
movsl
jecxz
stc
mov
jno
sbbl
xchg
add
xchg
in
test
pop
fwait
push
xchg
add
pop
push
push
push
dec
ror
sub
push
sub
add
not
sub
sub
pop
sub
sub
pop
push
push
call
mov
add
add
add
add
movsl
movsl
rol
add
addb
mov
lret
xchg
jo
hlt
add
add
mov
ret
mov
jns
add
sti
loopne
add
jns
add
popa
add
in
add
jns
add
fisubrl
mov
add
xchg
push
mov
lea
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
pushf
insb
add
adcl
cmc
enter
test
incb
addb
xchg
fiadds
add
loope
add
push
add
int3
cltd
mov
mov
push
mov
mov
mov
mov
lea
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
mov
mov
xchg
push
scas
scas
sti
in
push
xchg
fsubr
fucomip
rcrl
scas
add
testb
add
jno
mov
add
xorb
test
add
add
lea
stos
xchg
add
add
jecxz
lret
jo
out
mov
add
ljmp
add
add
std
add
mov
add
add
lahf
add
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
xchg
mov
popa
pop
lahf
jp
add
aam
xchg
add
add
mov
push
add
rcr
out
add
add
add
lret
mov
push
ficoms
aad
add
mov
lods
add
jecxz
add
cld
fldcw
add
jnp
jmp
test
mov
add
cmc
xchg
lods
add
imul
mov
in
xchg
add
mov
int3
lea
pop
mov
push
push
push
push
push
call
add
add
out
add
lcall
sti
push
cli
add
jp
fcoms
pop
cwtl
add
mov
add
pop
add
cmc
lcall
mov
add
cmpsl
add
add
bound
pop
push
push
push
call
mov
add
nop
jnp
add
pop
add
add
add
in
jge
add
add
ret
mov
add
mov
sti
add
cmc
clc
call
cmpsl
rcrl
add
addb
les
pop
add
popa
or
pop
in
push
push
lea
push
push
push
push
push
push
push
call
cld
mov
fldl
bound
fldenv
add
mov
add
mov
add
popf
mov
insb
push
loope
add
cld
cltd
cltd
movl
add
mov
popf
bound
pop
add
push
push
push
push
push
lea
push
call
add
pushf
outsl
add
js
jbe
xchg
add
sti
mov
mov
clc
add
add
add
add
lock
enter
clc
rorl
out
leave
clc
add
loop
lods
ja
out
fwait
arpl
cmpsb
add
pushf
stos
add
add
lahf
jge
mov
add
scas
add
lods
pop
add
pop
add
outsl
pop
add
mov
mov
mov
lea
pop
add
push
push
push
lea
push
push
call
mov
cltd
loopne
push
out
adc
add
mov
repnz
add
add
add
mov
pop
or
add
mov
add
xlat
mov
lcall
push
mov
pop
cltd
xchg
add
jl
add
lret
mov
fmull
ret
data16
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
addl
rcrl
add
add
pop
xchg
lret
add
stos
rorl
out
jbe
jle
add
push
cld
add
pop
mov
add
jp
flds
sahf
add
jb
flds
xlat
scas
add
fdivs
add
mov
lea
pop
mov
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
test
insb
lods
cmpsl
add
add
add
stos
data16
add
std
xlat
xchg
cld
mov
add
add
add
flds
xchg
add
xchg
add
mov
add
mov
rclb
add
cld
mov
add
out
add
xchg
add
mov
push
mov
je
push
test
lea
pop
xor
push
push
lea
push
push
call
mov
addb
add
add
shl
add
jl
xlat
mov
int3
add
add
pop
add
add
add
nop
pop
add
add
add
mov
adc
les
push
push
push
push
push
push
push
call
mov
pop
add
mov
add
cmc
out
xlat
add
mov
aad
lcall
mov
ljmp
testl
push
lea
push
push
push
lea
push
push
lea
push
push
call
insb
mov
xchg
add
test
jno
scas
lock
add
add
add
add
subl
jmp
lahf
xlat
add
mov
push
loop
testb
test
je
mov
mulb
lret
mov
lea
pop
push
push
lea
push
push
lea
push
call
jb
les
xchg
mov
fsubrp
les
testb
mov
insb
repnz
sti
add
xorl
jno
mov
add
add
add
jne
cli
jmp
mov
int3
scas
fwait
pushf
add
movsl
pop
add
xchg
mov
add
add
add
call
mov
mov
int3
lea
pop
mov
xor
push
push
lea
push
push
push
lea
push
push
call
scas
push
mov
iret
out
mov
mov
mov
xchg
int3
mov
cld
lods
loope
add
pusha
xchg
add
int
add
add
add
addr16
loop
mov
mov
int3
cmpsl
rcr
fdivp
add
ja
rorl
pop
add
pop
push
push
push
push
push
call
test
jae
cli
pop
push
add
jl
test
add
push
ret
cltd
rolb
add
add
mov
add
add
add
add
in
bound
mov
lea
pop
mov
push
push
push
push
lea
push
call
add
jo
repnz
in
pop
add
add
loop
add
mov
mov
cli
add
add
add
mov
add
les
add
outsl
mov
mov
les
or
push
push
push
call
mov
aam
add
jl
mov
push
jbe
jbe
push
jecxz
addb
add
add
stc
add
iret
add
mov
jae
xchg
add
add
add
mov
cli
cmpb
xchg
add
add
add
add
jo
jno
add
lea
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
neg
xchg
jo
push
lea
repnz
add
add
test
leave
add
mov
les
lods
in
cmpsl
add
add
xor
mov
fs
in
add
add
add
push
add
stc
add
out
add
add
imul
ja
add
pop
push
push
lea
push
push
push
push
push
lea
push
call
add
add
shr
fs
add
add
add
in
add
je
rcl
add
add
jmp
in
add
add
add
add
add
pop
mov
add
mov
add
add
mov
add
add
push
stos
add
rcl
add
mov
lea
pop
mov
push
push
push
push
push
call
filds
outsl
add
add
push
add
mul
jo
stos
add
clc
out
roll
add
add
out
mov
pushf
mov
add
push
test
add
imul
push
mov
add
add
mov
cmpsb
add
incb
push
add
add
test
ja
test
pop
xor
push
push
call
fwait
add
jp
rolb
aad
xchg
pop
icebp
mov
jb
push
push
push
outsl
stos
jle
jl
mov
add
lret
insb
mov
add
add
add
mov
out
add
add
add
mov
add
add
add
into
mov
xchg
frstor
stos
add
add
andb
test
lahf
add
pop
add
push
lea
push
call
add
pop
add
add
movb
add
add
add
pop
neg
lods
add
add
fnstsw
add
add
jmp
add
mov
add
in
add
add
add
aad
xchg
in
mov
lea
pop
sub
push
push
lea
push
push
push
push
push
push
call
jmp
add
mov
les
add
jbe
xchg
add
add
add
cwtl
xchg
stos
mov
add
add
fucompp
mov
cli
add
add
loope
add
sahf
lods
add
cli
popa
out
add
movsl
mov
adc
sahf
rcl
lods
xchg
imul
and
push
push
push
push
lea
push
lea
push
call
lods
add
add
add
mov
loop
les
mov
add
add
movsb
xchg
andb
cmc
jp
add
fstpt
data16
mov
imul
xchg
jp
ja
cld
add
add
add
add
mov
cld
lea
pop
rep
pop
push
push
push
push
call
xchg
loopne
add
add
add
add
movb
xchg
lds
sti
mov
xchg
rol
jmp
fadds
add
add
add
add
test
add
cwtl
pop
add
incb
scas
lea
loop
int
cltd
int3
push
add
add
add
add
std
shrb
push
call
fimuls
lea
pop
mov
add
push
push
push
call
xchg
pop
xchg
test
repnz
stc
cmp
mov
add
xchg
in
add
add
ja
add
adcl
add
icebp
out
jmp
add
add
add
add
add
repnz
cld
popf
mov
add
add
lcall
add
add
stos
add
roll
add
cmpsb
loop
mov
lea
pop
add
add
push
push
push
push
lea
push
push
push
push
call
add
data16
movsb
jo
popf
in
mov
jl
out
add
movsb
xchg
lods
jnp
mov
rorb
in
add
rcr
mov
mov
in
fcoms
test
call
push
jmp
add
add
mov
mov
int3
data16
cltd
mov
aad
mov
scas
lods
mov
lea
pop
mov
push
push
push
push
push
push
push
push
call
movsb
mov
mov
mov
xchg
push
add
and
add
sahf
push
add
test
add
add
jp
imul
rolb
add
mov
scas
mov
mov
mov
imul
add
test
test
add
clc
loopne
push
negb
add
insb
xchg
rolb
cld
lahf
add
add
add
lea
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
mov
add
mov
push
scas
add
add
mov
imul
loope
push
js
lahf
add
outsl
clc
push
add
add
stos
mov
gs
mov
pop
add
js
add
add
aam
bound
add
push
push
push
push
push
call
out
cltd
xchg
add
add
add
out
jno
hlt
add
std
add
jge
add
jmp
push
imul
addb
aam
in
iret
add
enter
add
pop
mov
push
push
lea
push
push
push
push
push
call
push
add
add
add
add
aad
mov
jl
jo
add
add
xchg
lds
ret
pop
addl
aad
mov
shll
lahf
add
add
add
add
mov
lea
pop
xor
push
push
push
push
push
lea
push
lea
push
push
call
outsl
add
xchg
add
cld
mov
mov
xchg
fstl
shlb
mov
mov
mov
add
int
add
enter
add
add
add
mov
stos
mov
cmc
mov
mov
pusha
roll
fwait
in
add
add
aad
les
les
push
push
call
hlt
ror
in
testb
mov
in
addb
add
jmp
add
outsl
jle
mov
fistl
xchg
sarb
add
add
gs
outsl
add
jecxz
xchg
ret
add
popa
add
addr16
add
mov
lea
pop
mov
xor
push
push
push
push
lea
push
push
call
jle
add
roll
add
add
je
int
mov
jl
out
negb
xlat
jns
add
js
add
addb
pop
jae
int3
add
add
add
mull
pushf
add
add
mov
aam
bound
pop
add
push
lea
push
push
push
lea
push
push
call
add
add
cwtl
frstor
add
add
push
sbbb
popa
add
add
jo
jmp
mov
add
add
mov
idiv
add
shrb
clc
add
add
add
add
xchg
jecxz
add
mov
add
nop
ret
mov
lea
pop
add
mov
push
push
inc
add
inc
push
push
pop
add
inc
ror
ror
sub
rol
pop
shl
pop
push
push
push
push
call
les
mov
cld
add
add
jp
add
mov
add
pop
imul
add
add
imul
loop
push
mov
lea
pop
pushl
push
rol
pop
call
push
push
push
add
sub
shr
push
or
inc
add
add
xor
dec
sub
dec
pop
add
not
pop
push
xor
add
pop
push
push
add
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
pop
faddl
add
add
add
add
xchg
in
add
add
negl
push
add
add
data16
add
lret
add
stos
sub
mov
add
andb
and
rclb
ret
ret
xor
ror
add
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
leave
add
mov
add
bound
add
rol
add
add
add
roll
add
add
jge
lods
int3
add
add
jb
shll
push
andl
add
add
add
add
jmp
popl
mov
lea
pop
push
push
not
pop
push
push
push
call
out
in
add
filds
add
mov
add
add
into
jecxz
add
sahf
add
add
cld
shrb
jae
add
std
add
mov
sti
cmpsl
pushf
add
add
add
cld
filds
addb
add
jge
add
in
shlb
add
add
jmp
add
orl
mov
add
push
inc
sub
shl
pop
add
push
sub
pop
add
push
xor
pop
mov
xor
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
jns
fwait
jge
mov
std
addb
test
jmp
add
add
sarb
int
stos
add
add
lock
jecxz
add
jno
insb
add
movsb
add
ja
imul
aam
aad
add
push
ret
ret
add
jbe
sti
xchg
sarb
addb
mov
add
mov
lea
pop
add
push
push
push
push
push
push
push
call
add
icebp
add
mov
imul
mov
test
fsubr
add
loope
push
fiaddl
test
add
add
test
add
jns
add
add
pop
push
push
rol
pop
mov
xor
push
push
call
pop
test
add
add
jp
push
test
jno
add
pop
mov
add
push
add
divl
mov
imul
add
iret
aam
push
imul
add
push
push
push
push
push
push
push
push
call
arpl
jmp
add
push
fwait
pop
add
addl
movsb
jne
out
add
pop
add
jo
mov
je
lods
je
scas
mov
jae
add
mov
lea
pop
pop
push
add
pop
mov
push
push
push
push
push
push
push
push
push
call
addl
pop
add
push
shlb
add
loop
add
shr
pop
jae
in
add
fdivr
lea
leave
in
add
lds
outsl
pop
add
addl
mov
lea
pop
xor
push
push
lea
push
push
call
popa
ficomps
lahf
push
add
add
shl
iret
mov
cmc
jmp
jb
add
mov
lods
add
jo
add
push
loop
jae
pusha
add
xchg
fdivrl
xchg
xchg
add
rcll
xchg
int3
add
popl
add
add
xlat
lods
adcb
fsubs
lock
add
mov
lea
pop
add
push
dec
add
pop
rep
mov
xor
push
push
push
push
push
push
push
call
fistl
int3
pop
add
add
add
add
popa
fldl
mov
arpl
lret
add
push
add
js
pop
test
add
imul
sti
xchg
add
add
mov
stos
xchg
add
fisubs
add
add
xchg
sarb
cltd
jmp
mov
add
cld
lea
pop
or
je
push
ror
not
pop
mov
xor
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
add
push
gs
mov
add
mov
out
mov
add
ja
icebp
leave
rclb
add
add
clc
insb
jp
add
add
add
add
add
add
in
mov
lea
pop
mov
push
push
push
lea
push
lea
push
lea
push
lea
push
call
scas
nop
in
add
add
and
add
orl
jl
lret
stos
add
add
add
add
add
push
popf
add
roll
add
je
add
push
add
lea
pop
xor
push
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
js
cwtl
xchg
call
cltd
into
js
mov
les
jnp
add
insb
add
std
cmc
add
push
test
outsl
int3
add
mov
add
mov
add
lea
pop
add
push
dec
add
pop
add
push
sub
ror
pop
add
push
push
push
push
push
push
lea
push
push
call
pop
add
mov
add
pushf
testl
add
xchg
cli
fsubrs
add
test
bound
std
jbe
ljmp
add
loope
into
arpl
pop
add
pusha
add
add
add
loop
lods
add
scas
out
mov
add
add
add
add
lcall
pop
mov
push
push
push
push
push
push
call
add
add
jne
add
add
add
je
roll
add
int3
popa
shll
cltd
jecxz
fnstenv
stc
pop
mov
add
mov
add
leave
mov
lea
pop
xor
push
push
push
lea
push
call
jecxz
add
rcll
add
pop
add
cld
iret
add
mov
add
push
add
in
jbe
add
add
add
add
mov
in
mov
push
add
push
add
loopne
push
iret
push
out
add
test
shrb
add
int3
jns
xchg
mov
lea
pop
add
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
fdiv
add
jmp
pop
add
mov
cmpsl
lods
add
call
add
add
add
mov
add
jno
mov
lea
pop
add
push
xor
ror
pop
pop
push
push
call
add
add
add
addl
rol
add
les
mov
add
mov
add
add
lahf
loop
test
add
pop
add
push
lea
add
add
jne
loop
add
add
mov
xchg
jge
pop
add
cld
lea
pop
rep
mov
xor
push
xor
add
sub
pop
or
je
mov
push
not
dec
pop
add
push
push
lea
push
push
push
call
cli
imul
out
aad
out
cmpsb
add
xchg
in
push
push
xchg
add
jae
jnp
iret
mov
add
cld
fwait
add
add
jae
add
add
pop
add
pushf
movsl
xchg
add
test
sarb
movsl
fists
add
add
fadds
lods
repnz
jae
mov
mov
bound
add
push
add
ror
pop
rep
push
lea
push
lea
push
call
nop
gs
add
sahf
add
push
addr16
add
mul
rolb
sahf
outsl
popa
out
fwait
testl
cmpsl
add
jge
xchg
mov
cltd
add
jle
add
mov
lea
pop
pop
push
push
add
push
push
pop
add
dec
inc
dec
sub
rol
pop
sub
add
pop
push
xor
inc
pop
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
pop
mov
mov
popa
jl
sahf
test
add
mov
add
lea
add
sahf
add
out
add
push
mov
add
fisttpl
pop
mov
mov
push
sub
pop
jmp
push
push
dec
sub
inc
pop
mov
add
push
push
push
push
push
push
lea
push
call
add
stos
lahf
scas
lods
add
lods
add
addb
lods
jns
add
outsl
add
je
add
jmp
add
mov
test
add
add
pop
addb
fwait
pop
add
xchg
lods
pushf
rolb
test
cmpsl
add
jo
mov
clc
add
xchg
loope
add
add
popa
sbb
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
std
mov
mov
pop
cltd
push
mov
movb
add
add
mov
hlt
testb
loope
add
add
xor
mov
pop
adcb
std
add
add
add
add
add
add
ljmp
add
add
out
add
rolb
sti
add
je
test
and
push
push
push
push
push
push
push
push
push
push
lea
push
call
fldl
mov
pop
add
pop
jbe
add
pushf
jbe
aam
add
test
jecxz
fiaddl
fwait
roll
add
fiadds
pop
testl
test
add
add
jo
imul
add
push
add
add
mov
outsl
add
add
out
add
cmpsb
int
aad
mov
sub
push
lea
push
push
push
push
call
out
fldl
push
add
add
add
push
xlat
add
add
add
add
add
addr16
xchg
rolb
pop
add
add
mov
stc
add
add
mov
add
lahf
repnz
jp
pop
test
add
data16
push
push
push
push
lea
push
call
icebp
mov
mov
cmc
gs
nop
add
scas
jo
arpl
std
data16
add
add
add
xchg
xchg
add
mov
cmpsl
push
insb
popa
test
push
addl
xchg
pop
imul
add
roll
js
fildl
add
pop
xchg
aad
negb
add
jle
push
add
mov
mov
push
add
mov
lea
pop
mov
pop
push
push
push
push
push
call
mov
xlat
add
mov
arpl
test
add
add
lret
mov
test
add
add
add
add
add
add
pusha
add
add
add
clc
xchg
add
cmc
outsl
lods
loop
mov
lea
pop
pop
push
push
push
lea
push
push
push
call
add
add
add
scas
add
filds
js
add
cld
add
loopne
addr16
add
into
in
popl
loopne
add
imull
add
add
jo
mov
lea
pop
pop
push
lea
pop
pop
push
add
sub
pop
leave
push
shr
rol
pop
ret
push
lea
push
push
push
push
call
cmpsb
aad
add
movsl
add
leave
ja
in
add
add
repnz
xchg
jl
add
add
jmp
add
add
add
add
mov
popf
add
loope
add
add
add
movl
mov
pushf
push
mov
lea
pop
push
push
ror
rol
pop
mov
push
inc
pop
add
push
push
call
addr16
jb
jmp
push
mov
add
lret
in
push
add
insb
add
sahf
add
add
mov
add
jmp
mov
into
add
test
mov
shl
fmull
push
not
pop
push
push
lea
push
push
call
add
add
xlat
clc
add
jns
enter
scas
add
ja
imul
add
push
gs
xchg
xlat
in
jne
add
xchg
jnp
jns
rcll
std
arpl
add
mov
add
fs
jne
add
les
push
add
rol
rol
pop
push
push
sub
shr
pop
movl
push
rol
inc
pop
addl
push
sub
not
pop
test
je
push
not
add
pop
mov
pop
push
rol
lea
pop
pop
push
not
inc
xor
pop
pop
push
ror
add
shl
pop
pop
push
push
push
lea
push
lea
push
push
push
call
add
stc
add
add
add
jb
je
outsl
out
push
add
shll
fwait
add
add
mov
mov
movsb
imul
js
add
popa
sbb
leave
push
sub
shr
pop
ret
push
push
lea
dec
dec
rol
pop
mov
add
push
push
call
add
movsb
ret
scas
add
pusha
jne
into
add
xchg
aad
jnp
add
mov
add
add
mov
add
lea
enter
add
add
add
mov
mov
jecxz
test
xchg
mov
add
fimuls
pop
push
push
dec
lea
pop
push
push
push
lea
push
lea
push
push
call
xchg
jp
add
add
add
xchg
jo
fwait
popl
ljmp
testb
out
int
push
stc
add
mov
lahf
add
cmc
hlt
stos
add
add
add
mov
add
add
mov
mov
bound
xchg
mov
lea
pop
push
testl
push
add
pop
addl
push
push
add
pop
call
mov
push
push
lea
push
call
mov
add
mov
cmpsl
out
add
test
lcall
mov
add
nop
jmp
jae
out
loop
mov
in
in
add
sarl
add
test
add
xchg
addl
jecxz
xchg
out
add
stos
mov
mov
add
xchg
push
fisttpll
pop
pushl
push
push
pop
push
push
sub
xor
shl
pop
call
push
push
push
push
push
push
push
lea
push
push
call
loop
stc
add
loope
rcll
add
fiadds
add
ror
add
cmpsb
xchg
ljmp
jge
mov
jae
add
add
xlat
les
std
out
mov
lea
pop
cmpl
jne
pop
push
rol
pop
pop
pop
push
xor
xor
add
dec
pop
pop
push
add
shr
add
pop
leave
push
shl
shr
add
pop
ret
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
push
add
hlt
sarl
js
add
add
data16
int3
imul
add
add
fldcw
mov
add
popl
jbe
jl
mov
arpl
jns
jl
add
add
add
push
xchg
js
jns
fwait
pop
test
nop
jno
hlt
lea
pop
mov
add
push
dec
ror
shr
add
pop
push
push
push
ror
rol
pop
push
push
ror
dec
rol
pop
push
movl
push
lea
push
push
push
push
push
push
push
push
call
movb
mov
in
cld
jl
incb
std
add
mov
add
xchg
add
fiaddl
cltd
fs
jl
xchg
push
add
mov
in
mov
add
pop
push
push
inc
pop
call
push
push
push
call
jbe
sahf
add
enter
pop
add
imul
into
add
js
jle
add
push
lahf
scas
flds
mov
add
fwait
jge
aad
mov
mov
add
sahf
add
int3
xchg
push
add
add
add
mov
xchg
add
popf
lret
add
add
bound
add
xchg
test
mov
lea
pop
push
call
push
push
push
call
lcall
add
data16
jmp
add
add
mov
add
add
jbe
pop
xchg
mov
add
je
popf
mov
add
mov
pop
add
mov
add
add
add
add
mov
insb
jae
mov
pop
xchg
mov
aam
out
add
add
lea
mov
lea
pop
subl
cmpl
jne
push
sub
pop
pop
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
cmc
add
js
add
jo
cmpsl
add
mov
movsl
add
add
add
stos
lret
mov
jae
add
cwtl
mov
add
mov
pop
add
movl
mov
add
mov
rolb
add
xchg
xchg
pushf
lods
mov
mov
pusha
popf
add
pop
pop
pop
push
lea
sub
pop
pop
push
lea
lea
pop
leave
ret
push
lea
pop
push
push
push
push
lea
push
push
push
push
push
push
call
arpl
jnp
add
in
add
mov
addl
add
mov
fisttpll
rolb
add
flds
faddl
cli
shr
xchg
add
add
jge
add
add
xchg
add
add
add
xchg
int3
leave
lahf
push
add
add
add
add
add
repnz
and
mov
push
rol
pop
add
push
push
inc
ror
pop
push
push
xor
shr
pop
push
push
add
pop
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
insb
add
add
add
jbe
cltd
push
mov
ljmp
add
lcall
add
add
add
imul
mov
lock
iret
iret
mov
lea
pop
mov
push
push
lea
push
push
push
push
call
add
mov
push
mov
in
add
popa
pop
fmuls
pop
add
add
add
add
mov
add
lods
add
jb
movsb
into
mov
add
jb
jecxz
mov
lea
pop
lea
push
rol
add
pop
sub
push
sub
sub
add
ror
pop
mov
push
push
push
push
push
lea
push
push
call
push
shrb
fsubrs
lcall
push
out
add
add
mov
in
pop
sahf
jmp
add
pop
add
add
add
mov
lea
pop
shr
push
ror
pop
add
mov
push
lea
push
push
push
push
push
call
add
pop
pop
add
push
add
ret
add
xchg
add
add
jecxz
add
add
add
shl
add
add
ljmp
add
add
jp
loop
add
pop
movl
mov
out
movsl
add
jae
push
jae
call
pop
sbbl
jbe
cwtl
push
add
pop
mov
add
push
push
push
push
push
lea
push
lea
push
push
call
sti
add
jmp
add
push
add
into
add
jmp
iret
fildl
mov
in
enter
mov
pushf
loope
ljmp
mov
lds
enter
leave
add
add
test
loop
pop
add
and
shlb
not
pop
mov
mov
push
add
rol
pop
cmp
jne
push
add
pop
cmp
jne
push
push
lea
push
push
push
call
lret
add
mov
hlt
pop
add
pop
fidivs
hlt
pop
add
add
add
add
add
add
add
add
fmulp
pop
lret
xchg
push
add
lds
repnz
stos
imul
rcrb
add
add
fucomi
push
test
add
pop
mov
movl
push
inc
shr
not
add
pop
jmp
mov
push
lea
push
push
push
push
call
stos
add
ljmp
add
addl
add
add
add
jnp
imul
scas
add
mov
scas
add
lret
xchg
add
add
int
add
loopne
add
mov
mov
pop
aad
or
shrl
cld
lea
pop
mov
push
xor
pop
sub
jne
mov
push
lea
push
push
push
push
push
push
lea
push
call
hlt
fwait
add
add
add
les
add
icebp
xchg
add
pop
xchg
loopne
cli
add
fadds
mov
sbb
mov
add
hlt
lret
push
mov
out
add
into
mov
add
into
add
cmpsb
mov
lea
pop
movl
push
lea
push
call
add
add
pop
loop
rolb
mov
add
add
add
aam
push
jns
roll
aam
push
add
add
add
xchg
add
filds
jbe
loopne
add
xchg
mov
add
mov
add
add
add
add
xchg
outsl
push
test
mov
lea
pop
jmp
push
push
lea
push
push
push
push
lea
push
push
push
call
add
pop
add
add
pop
into
arpl
cwtl
stc
pop
mov
add
jl
mov
scas
add
mov
ja
in
add
add
iret
jl
add
add
add
enter
add
bound
add
les
inc
cld
push
ror
lea
not
pop
mov
cmp
jne
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
mov
add
add
hlt
mov
andl
lods
add
jmp
cmp
pop
xchg
stc
pusha
test
test
scas
add
push
jge
fistpl
iret
add
add
loop
pop
mov
lea
pop
mov
movl
push
sub
sub
pop
jmp
push
lea
push
push
lea
push
lea
push
call
ljmp
test
add
xchg
scas
mov
lods
xlat
imul
fwait
add
addb
add
test
push
pop
andb
cltd
ret
add
mov
enter
lods
out
mov
in
mov
stos
push
add
insb
add
fmull
inc
cld
push
not
lea
sub
lea
pop
cmpw
jne
push
shl
add
sub
pop
mov
push
rol
xor
not
pop
movl
push
lea
push
push
push
push
call
add
jnp
out
push
mov
jnp
scas
pushf
imulb
fldl
iret
mov
add
xchg
fldl
aam
add
add
lods
pop
fstpl
add
mov
cwtl
stos
ret
mov
mov
lods
add
add
lds
test
add
stc
push
jo
add
mov
mov
lea
pop
jmp
pushl
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
out
sti
xchg
add
pop
jmp
add
add
movsb
gs
xchg
fadds
xchg
add
add
add
out
add
enter
out
add
fsubrl
add
std
push
xchg
mov
test
mov
push
add
add
add
movsl
add
mov
lea
pop
pop
push
xor
shl
sub
pop
mov
mov
push
add
ror
shl
pop
mov
push
push
shl
sub
push
or
inc
add
sub
shl
dec
sub
pop
not
dec
lea
pop
push
lea
push
lea
push
push
push
push
push
push
call
call
xchg
mov
lahf
add
add
xchg
add
add
into
nop
movl
add
pop
imul
add
add
add
xlat
js
imul
nop
add
pop
push
push
push
push
push
push
push
push
push
call
add
icebp
fs
jbe
add
xchg
cltd
add
fldl
add
add
data16
leave
jl
pop
add
add
add
jecxz
add
faddl
mov
ret
jp
add
push
jnp
mov
lret
push
add
jb
jmp
pop
add
add
add
std
fnstenv
fildll
mov
aam
bound
pop
call
cmpl
je
push
push
lea
push
xor
add
sub
shl
dec
pop
rol
shr
rol
pop
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
mov
add
add
add
stos
mov
add
mov
add
mov
fldl
test
nop
mov
stc
mov
jae
add
add
add
in
imul
jmp
cmpsl
gs
add
jo
pop
mov
jae
pop
mov
lea
pop
push
push
lea
push
lea
push
lea
push
call
shll
out
rolb
je
mov
add
fdivr
mov
add
add
jmp
add
shrl
xchg
push
mov
push
stos
add
mov
add
out
fsubl
add
add
enter
pusha
jns
roll
data16
cwtl
inc
add
push
push
push
push
push
push
lea
push
lea
push
call
add
out
cli
add
add
add
add
add
add
iret
add
lret
cld
lock
xchg
add
add
rcrb
add
mov
test
add
add
addr16
in
cli
pop
add
icebp
enter
mov
push
jge
mov
lea
pop
cmpl
je
push
push
ror
xor
push
xor
add
sub
sub
sub
add
pop
sub
ror
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
into
mov
jo
push
add
arpl
add
rolb
filds
pop
movb
jl
test
add
clc
add
clc
cld
add
insb
loope
add
mov
addr16
add
shr
testl
addl
sub
push
rol
lea
pop
call
push
push
push
push
call
pop
loopne
jge
lcall
imul
add
mov
add
add
add
ret
lret
insb
jb
mov
add
movsb
xchg
add
imul
insb
add
mov
lea
pop
cmpl
je
push
push
add
push
and
add
shr
lea
sub
lea
not
inc
pop
xor
lea
pop
push
push
lea
push
push
push
push
call
mov
mov
xchg
aad
shr
cld
pop
add
add
mov
add
call
add
push
xchg
mov
lds
mov
add
add
jne
sbb
loopne
add
xchg
mov
les
call
push
push
push
lea
push
push
push
call
in
jne
add
fnstcw
add
cmpsb
ret
add
pop
jns
movsl
add
pop
mov
iret
add
add
pop
cld
imull
add
lret
add
into
add
mov
push
pop
lcallw
insb
pop
in
out
addr16
aam
jge
add
pop
cmpl
je
push
push
dec
xor
push
or
not
add
lea
shl
sub
rol
shr
pop
dec
xor
pop
push
push
call
add
add
mov
mov
bound
push
lret
repnz
lock
movsl
add
add
add
add
mov
imul
add
add
add
add
add
add
add
rcll
add
add
add
mov
lea
pop
push
push
push
push
push
push
call
add
add
bnd
add
add
fisttpll
add
pushf
push
add
ljmp
add
rolb
add
mov
push
add
fldl
sar
add
add
loop
add
add
add
mov
pop
jecxz
jle
push
out
pusha
add
imul
lea
pop
call
cmpl
je
push
push
lea
shr
push
push
pop
add
add
sub
lea
ror
pop
dec
pop
push
push
call
mov
push
js
fiaddl
add
call
loopne
enter
scas
mov
sti
std
mov
add
fiaddl
ret
xchg
push
out
fiadds
jne
leave
add
pop
jnp
add
cmpsl
add
add
in
mov
xchg
add
in
lock
lods
arpl
movb
mov
sahf
ja
scas
fmul
mov
add
add
mov
lea
pop
push
push
sub
pop
call
push
push
call
add
add
add
popa
add
cmc
addl
enter
xlat
add
out
add
rcll
add
fldcw
out
add
iret
jmp
mov
pop
rcrb
fiadds
add
fadds
add
add
push
cli
cltd
jle
mov
in
add
mov
add
incb
rolb
lret
lea
pop
cmpl
je
push
push
add
inc
not
push
sub
add
lea
ror
sub
shr
dec
pop
sub
sub
xor
shl
pop
push
lea
push
push
call
xchg
lock
mov
ret
mov
add
std
pop
fiadds
mov
cli
fdiv
add
jb
addl
lods
add
cli
add
push
std
fstpl
rolb
add
test
add
sahf
add
loop
add
cmc
lods
pop
je
sarl
hlt
lea
pop
push
push
sub
pop
call
push
push
lea
push
push
push
push
push
call
add
in
fucomip
add
loope
pop
add
lret
add
fiaddl
mov
lcall
push
js
add
mov
mov
lods
insb
jbe
add
lea
pop
cmpl
je
push
push
rol
not
push
and
add
add
sub
ror
sub
add
pop
inc
sub
pop
push
lea
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
sti
test
lret
add
rolb
add
fs
xchg
rolb
fimull
add
jle
pop
jb
add
clc
jmp
add
sub
push
push
lea
push
push
push
call
nop
add
add
mov
add
mov
xchg
add
add
cmpsl
loop
lods
add
js
push
in
int
imul
mov
mov
xchg
mov
add
mov
add
mov
add
add
pop
call
cmpl
je
push
push
shl
shl
push
or
not
add
add
add
dec
sub
pop
sub
shl
add
add
pop
push
push
push
push
push
call
mov
add
int
add
add
add
add
repnz
add
fldl
mov
push
insb
data16
test
vphadduwq
add
cmpsb
addl
add
add
mov
test
jp
int3
jnp
add
sti
stos
int
lds
arpl
pop
out
mov
add
add
jmp
xlat
loopne
lods
mov
data16
push
push
lea
sub
pop
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
pop
rolb
test
mov
add
mov
leave
in
add
stos
mov
sti
add
jge
mov
add
jmp
jo
xchg
add
lods
add
lea
pop
cmpl
je
push
push
ror
shl
shr
push
and
add
dec
sub
add
not
lea
pop
lea
inc
pop
push
push
push
push
call
in
repnz
mov
neg
add
add
add
stos
add
sahf
jle
cld
loop
add
add
jo
data16
mov
add
loopne
fldcw
mov
rcrl
test
add
mov
lea
pop
push
call
push
add
pop
cmpl
je
push
push
ror
push
or
inc
add
xor
xor
inc
sub
inc
pop
sub
rol
pop
push
push
push
lea
push
push
push
push
push
call
add
push
jno
pop
cmpsb
mov
xorb
std
xchg
add
add
mov
imul
add
add
imul
add
mov
add
add
movsl
rclb
and
push
push
call
xchg
add
icebp
pusha
lods
add
sub
add
scas
mov
test
mov
jmp
add
mov
add
mov
xchg
add
arpl
jle
pusha
add
add
add
ret
mov
jnp
mov
jae
add
std
fmull
pop
call
push
rol
pop
cmpl
je
push
push
ror
inc
push
or
inc
add
shr
sub
inc
pop
shl
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
test
add
add
add
add
add
add
add
jne
mov
xchg
mov
jl
add
mov
lds
lods
mov
lea
pop
push
push
push
push
call
add
add
andb
out
fldl
add
add
pop
add
sahf
addr16
clc
add
add
jo
add
stc
mov
mov
test
mov
lods
add
jge
je
fmull
insl
cmp
add
sub
movsl
push
push
lea
push
push
push
call
add
aad
add
imul
mov
add
rol
add
add
push
add
in
mov
add
add
jae
add
mov
add
jno
addr16
push
add
add
xchg
sar
imul
add
jl
test
clc
cltd
add
in
std
add
add
cmc
iret
add
add
add
mov
lea
pop
cmpl
je
push
push
shl
dec
push
sub
add
dec
inc
not
sub
xor
pop
shl
pop
push
pop
push
push
not
sub
shr
pop
call
cmpl
jne
push
push
push
push
push
lea
push
push
push
push
push
call
add
pop
fcoms
sti
pop
jno
xchg
in
mov
push
lret
jne
mov
add
fcompl
add
add
leave
push
jecxz
test
add
add
push
add
shlb
add
cld
xchg
imul
mov
pushf
mov
mov
add
add
jle
hlt
lea
pop
mov
push
lea
add
add
sub
pop
movl
push
push
push
lea
push
lea
push
push
push
call
mov
out
cli
rolb
add
add
add
arpl
add
add
pop
add
js
add
push
icebp
sahf
xchg
iret
sahf
arpl
xchg
cli
mov
mov
divl
add
add
movsl
add
std
add
xchg
sbb
jmp
push
push
lea
push
push
lea
push
push
push
call
add
shrl
flds
rolb
add
addb
xchg
gs
add
test
add
add
mov
loope
add
cli
add
add
add
add
jb
mov
pop
in
mov
pop
add
arpl
add
add
mov
imul
pusha
jne
mov
pop
cmc
add
fimull
pop
xor
push
push
push
push
push
push
lea
push
push
lea
push
call
fmull
add
add
add
mov
test
fldl
cwtl
add
out
add
add
add
mov
add
add
add
popf
add
add
ret
jmp
add
xchg
sar
jp
fisttps
mov
mov
out
add
pop
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
lods
imul
out
popa
jnp
sarl
mov
pop
add
add
xchg
xchg
add
add
add
add
cld
add
mov
mov
push
push
clc
add
outsl
movsb
imul
adc
add
add
add
loopne
rcll
mov
popl
push
pop
xlat
lcall
add
add
add
sahf
add
popf
add
add
add
add
add
lret
xchg
add
cwtl
out
jne
add
add
mov
add
add
add
pop
pop
push
inc
inc
sub
pop
leave
push
sub
pop
ret
push
lea
push
lea
push
push
push
push
push
call
add
rclb
sarb
add
add
add
add
roll
push
out
add
cmpsb
imul
add
add
add
jne
add
scas
xchg
xchg
out
xchg
in
lret
mov
lea
pop
push
push
push
lea
push
push
lea
push
lea
push
call
mov
add
out
mov
mov
rolb
fstpt
add
add
add
add
add
add
add
add
ljmp
nop
add
add
push
leave
add
pop
add
lret
add
add
add
lock
mov
lea
pop
mov
add
push
push
push
call
ljmp
add
fidivs
xchg
pop
jbe
rolb
add
mov
lret
jle
add
push
add
add
mov
add
lock
add
pop
flds
mov
lret
xchg
add
pop
mov
les
jge
add
test
js
into
xlat
push
add
add
shr
push
or
not
add
shr
sub
shl
sub
shl
lea
pop
xor
pop
push
inc
xor
pop
pushl
push
push
call
addr16
xchg
popf
mov
loope
push
add
js
pop
mov
add
subl
test
add
ror
pop
je
add
add
add
mov
mov
jge
add
jle
xchg
rcr
out
mov
add
loope
ljmp
call
push
add
lea
pop
push
call
push
sub
pop
jmp
cmpl
je
push
add
pop
cmpl
jne
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
jge
add
add
add
mov
add
jecxz
add
add
add
add
xchg
mov
xchg
test
add
mov
int
lcall
mov
add
add
movsb
idivb
out
je
mov
mov
cltd
add
fistps
cmpsb
add
arpl
movsl
add
pop
leave
push
push
lea
push
push
push
call
jmp
je
jns
roll
jb
add
leave
ret
add
add
add
xchg
add
add
add
add
sahf
add
add
xchg
les
arpl
rolb
mov
cld
add
movb
les
les
push
inc
shl
shr
add
pop
pop
push
not
add
pop
pop
push
push
lea
push
push
push
push
push
call
add
stos
fs
push
add
js
icebp
pop
jb
insb
add
add
add
jne
add
popf
mov
add
iret
pop
add
ljmp
add
test
pop
pop
push
add
pop
pop
push
sub
not
inc
pop
leave
push
add
pop
add
ret
push
push
lea
push
call
ljmp
mov
push
xchg
pop
xlat
js
add
js
std
add
add
push
bound
test
test
int
nop
xchg
add
jnp
push
add
std
stos
add
pop
mov
lea
pop
jmp
push
push
push
push
call
add
add
add
movsl
sahf
hlt
cwtl
push
pop
out
add
xchg
mov
mov
cmc
add
add
mov
pop
test
xlat
lods
mov
adcb
add
aad
mov
lea
pop
cmpl
jne
push
push
add
shl
add
push
or
not
add
add
sub
add
not
pop
dec
lea
lea
pop
push
xor
sub
pop
pushl
call
push
pop
push
call
push
sub
rol
pop
jmp
cmpl
jne
push
push
call
add
jne
cmpsl
addr16
jmp
roll
push
push
jbe
add
add
loope
add
outsl
clc
add
test
pushf
std
add
add
add
xchg
addl
mov
add
test
add
add
add
add
add
ljmp
add
add
add
add
add
add
pop
shrb
jp
add
mov
lea
pop
mov
mov
push
push
lea
push
call
lcall
add
mov
add
add
add
lret
add
out
rcr
scas
stos
add
add
add
push
add
add
addr16
add
jle
add
fprem
add
sarl
add
mov
add
add
mov
lea
pop
push
push
push
push
xor
add
rol
shr
xor
shl
sub
ror
pop
ror
pop
push
dec
shr
ror
pop
pushl
push
shr
pop
call
push
push
sub
xor
push
and
add
add
shl
sub
inc
pop
dec
add
pop
push
rol
inc
pop
pushl
push
push
push
push
call
out
add
ljmp
add
and
lret
add
add
mov
mov
add
add
test
xchg
jo
mov
popa
add
add
add
add
ret
add
add
lret
mov
lea
ljmp
arpl
pop
call
push
lea
shr
pop
call
push
push
push
or
inc
add
lea
add
xor
add
sub
lea
sub
sub
pop
xor
shl
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
movsl
mov
sahf
add
xchg
cwtl
mov
pusha
xchg
lods
xchg
add
add
add
add
add
add
lods
imul
mov
add
in
mov
add
enter
je
call
shlb
mov
pusha
mov
jp
add
add
mov
add
mov
outsl
mov
int3
lea
pop
pushl
call
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
addl
add
add
push
std
add
jmp
hlt
add
mov
mov
rcl
addr16
in
or
add
pusha
add
clc
add
add
add
fcomi
loop
outsl
loop
add
mov
add
jp
xchg
cmp
mov
mov
out
not
lock
les
shrb
scas
iret
or
loop
add
add
add
lret
xor
inc
pop
sub
pop
push
xor
pop
pushl
push
xor
pop
call
push
add
pop
call
push
push
push
or
not
add
shl
sub
inc
shr
sub
rol
pop
shr
inc
xor
pop
push
sub
not
dec
pop
pushl
push
push
call
add
scas
add
add
add
add
mov
push
push
xorl
add
mov
stos
add
hlt
shrb
test
add
add
divb
cld
xchg
jmp
add
cltd
add
add
add
add
mov
jmp
jno
mov
lea
pop
call
push
push
push
push
push
call
add
push
imul
repnz
add
mov
add
xchg
fstl
lret
fdivrl
mov
lcall
fwait
add
ljmp
in
gs
incb
push
test
mov
mov
add
jmp
in
jecxz
lcall
pop
call
push
push
push
or
inc
add
xor
rol
ror
sub
not
pop
shr
pop
push
push
push
push
push
push
push
push
push
call
test
add
add
cmpsb
mov
mov
out
test
sti
cli
add
jmp
add
mov
add
mov
test
lcall
add
fildl
xchg
add
std
clc
add
add
mov
lods
add
mov
lea
pop
pushl
push
push
lea
push
push
push
lea
push
push
push
call
iret
enter
int3
add
jge
add
add
add
add
xorl
cld
lods
xchg
faddl
add
fdivrs
mov
add
stos
pop
stc
lcall
jle
add
add
call
add
add
add
jmp
loopne
add
fs
mov
xchg
jl
out
add
mov
arpl
pop
call
push
inc
pop
call
push
push
shl
push
or
inc
add
sub
ror
sub
pop
add
lea
pop
push
add
pop
pushl
call
push
not
pop
call
call
push
inc
sub
pop
lea
push
push
shr
add
push
xor
add
xor
sub
pop
inc
sub
pop
push
not
not
ror
xor
pop
pushl
push
push
push
push
lea
push
lea
push
call
add
lret
mov
lea
testb
cmpsl
shl
pop
mulb
add
add
add
rcll
addb
lcall
aam
bound
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
arpl
insb
ja
mov
add
addb
jecxz
mov
mov
roll
xchg
xchg
xchg
popf
fists
add
cmpsl
movsl
fnstsw
fbld
mov
lea
pop
push
push
push
push
lea
push
lea
push
call
ljmp
add
leave
add
aad
push
mov
add
rcll
add
ljmp
pop
add
push
pop
scas
add
add
addb
testl
test
addr16
call
push
push
shr
push
and
add
ror
not
sub
xor
ror
pop
xor
not
add
inc
pop
push
shr
add
pop
pushl
push
lea
push
push
push
push
call
out
add
mov
in
testb
add
fwait
add
lcall
add
add
jnp
add
cld
add
add
mov
add
mov
add
add
lods
rorb
call
push
inc
sub
inc
pop
call
mov
push
push
dec
push
xor
add
inc
ror
sub
sub
shr
pop
dec
dec
dec
lea
pop
push
push
push
lea
push
call
in
add
mov
jne
push
jecxz
sahf
pop
mov
xlat
add
add
jae
xchg
je
add
mov
pusha
xchg
xlat
xchg
shl
fcomps
movsl
add
mov
add
add
add
mov
lea
pop
pushl
push
push
push
call
add
add
nop
add
in
add
add
add
add
shll
movl
mov
nop
in
insb
popf
lods
add
add
jae
add
pushf
add
mov
jbe
movl
test
addr16
push
add
pusha
add
add
movsb
add
cmc
add
popa
or
call
push
rol
ror
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
xlat
fwait
add
add
add
test
add
ja
push
pop
mov
mov
testb
push
add
add
gs
add
add
add
add
push
clc
add
add
mov
lea
pop
pushl
push
push
push
call
incb
add
add
cld
add
stos
test
nop
push
xlat
shll
add
mov
add
push
fwait
test
popf
js
add
mov
push
add
jo
add
jo
rolb
movsb
ret
jae
mov
jle
jnp
add
add
mov
rolb
add
mov
roll
add
xchg
mov
lea
pop
call
push
push
add
xor
push
or
not
add
add
sub
sub
add
pop
xor
ror
pop
push
ror
pop
pushl
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
ljmp
add
jbe
stos
popa
add
add
add
mov
add
add
stos
std
xchg
add
mov
add
xchg
faddl
add
add
flds
push
orl
aad
mov
mov
add
add
mov
in
jge
fmull
in
add
push
push
shr
ror
add
add
push
xor
add
add
ror
rol
sub
not
pop
lea
not
shl
inc
pop
push
push
rol
sub
ror
push
sub
add
shr
add
lea
sub
sub
not
lea
pop
lea
inc
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
arpl
add
add
mov
jne
add
js
test
pop
add
add
add
add
mov
ret
add
add
xchg
add
push
xchg
flds
add
xchg
scas
xchg
pop
add
aad
xchg
add
add
mov
popf
enter
add
pop
movsb
add
jno
out
jle
in
mov
lea
pop
call
push
push
lea
lea
shl
add
push
push
pop
add
ror
sub
sub
shr
add
pop
rol
lea
pop
push
add
pop
pushl
push
push
push
call
mov
idivb
outsl
jbe
roll
in
fistpl
add
add
mov
push
fnsave
add
add
sar
add
add
add
jae
mov
hlt
cwtl
push
gs
mov
aam
add
bound
call
push
lea
push
push
push
push
push
call
mov
add
jbe
imul
add
movsl
push
pop
xchg
test
cmc
addb
out
mov
add
mov
add
mov
push
outsl
push
add
mov
mov
add
arpl
add
jle
add
popa
sbb
inc
hlt
push
rol
dec
shl
sub
pop
lea
push
push
push
push
call
push
jmp
push
shr
mov
add
mov
add
add
push
repnz
jns
mov
test
add
popf
add
add
xchg
in
add
mov
loop
mov
add
lahf
test
add
add
mov
add
mov
lea
pop
lea
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
jo
pop
mov
add
add
add
into
add
rol
pop
fs
out
stos
add
add
je
add
movsb
add
faddl
add
cltd
add
fwait
movsb
fildl
add
add
les
add
popf
movsb
add
add
lea
pop
push
push
push
lea
push
push
call
fs
outsl
stc
pop
test
xchg
je
pushf
pushf
add
add
add
movsb
add
pop
call
addl
idivl
stos
push
out
jns
add
pop
push
push
push
inc
shl
add
rol
pop
push
push
add
shr
lea
add
pop
push
push
push
push
push
push
call
add
add
test
add
jp
pop
js
ja
add
test
add
fucom
add
nop
in
add
mov
add
add
push
test
pop
jnp
add
scas
mov
lret
add
add
mov
addb
popa
add
faddl
fldl
out
ret
in
jle
push
add
cli
roll
add
pop
add
pop
push
push
push
lea
push
lea
push
call
add
lahf
mov
call
pusha
push
test
jb
push
mov
xchg
add
out
push
add
add
xchg
add
rolb
pop
add
cmpsl
add
add
andl
mov
add
mov
add
jae
mov
mov
add
int3
lea
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
test
mov
xorl
fsubp
add
movsl
add
xchg
xchg
cld
add
add
add
test
add
add
cmc
add
push
je
mov
ret
cmpl
cmpsb
movsb
push
les
jne
push
push
push
push
push
push
push
call
int
bound
add
pop
add
mov
mov
icebp
add
jmp
pop
add
add
pushf
jnp
add
lds
shll
add
jo
add
jae
add
into
addr16
add
add
mov
test
add
add
add
add
add
jnp
add
nop
mov
lea
pop
call
push
push
xor
ror
add
push
or
inc
add
not
shl
sub
inc
add
add
pop
dec
ror
shl
pop
push
pop
pushl
call
push
not
dec
pop
call
push
sub
sub
add
pop
mov
pop
push
push
push
push
push
push
push
push
call
iret
add
mov
add
clc
arpl
out
add
add
nop
add
pop
enter
add
popa
movsl
rcll
iret
add
lret
cmpl
push
add
add
arpl
cld
push
xchg
mov
mov
roll
add
pushf
incb
xchg
mov
add
mov
add
add
jae
hlt
lea
pop
dec
jne
jmp
push
sub
inc
xor
pop
call
push
push
rol
shl
push
xor
add
add
not
sub
sub
not
sub
pop
xor
rol
shr
pop
push
push
lea
push
push
lea
push
push
push
push
call
loope
iret
aam
jns
add
jne
mov
add
pop
add
add
call
repnz
jl
jo
pop
push
mov
add
lods
filds
shlb
in
fdivr
mov
mov
add
lahf
in
add
add
pop
pushl
push
push
lea
push
push
lea
push
call
lods
scas
insb
loop
cltd
roll
push
loopne
add
add
fwait
mov
add
mov
in
add
add
clc
push
faddl
jae
add
hlt
lea
pop
call
push
rol
xor
pop
push
push
lea
push
call
loop
jbe
add
add
stc
add
aam
push
pusha
push
add
lret
mov
pushf
pop
mov
xchg
add
mov
add
fs
fiadds
jecxz
in
push
test
push
add
lahf
add
add
fsub
add
add
add
add
push
in
pop
pop
xchg
mov
add
mov
lea
pop
call
push
push
push
push
push
lea
push
push
push
push
lea
push
call
icebp
push
xchg
mov
mov
add
iret
mov
jbe
enter
add
jmp
insb
xlat
add
xchg
add
icebp
enter
in
add
add
add
add
insb
testl
add
int
out
scas
add
fldl
pop
xchg
add
push
cmpsl
in
lds
add
jecxz
xchg
mov
out
add
pop
mov
lea
push
push
add
push
xor
add
lea
sub
not
lea
sub
rol
sub
pop
lea
pop
push
ror
shl
shl
pop
pushl
push
add
pop
call
push
push
push
call
mov
add
mov
pop
jo
xchg
ret
addl
test
fldl
sar
lock
mov
lahf
add
add
add
push
lcall
add
out
gs
fnstenv
cwtl
mov
lods
mov
jne
add
pop
testl
add
xchg
cli
jl
add
push
movb
add
pop
call
push
push
push
sub
add
shr
ror
sub
dec
xor
inc
pop
add
add
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
in
sar
xchg
mov
mov
add
pop
lret
sbbl
leave
lret
ljmp
xchg
add
push
add
add
les
cltd
pop
jmp
data16
pushl
call
push
shr
sub
pop
call
mov
push
push
push
push
lea
push
push
push
call
mov
xchg
add
call
rol
fnstenv
add
pushf
test
xchg
push
ror
jl
mov
rclb
cwtl
add
mov
movsb
ljmp
loope
add
add
call
add
roll
add
pop
add
stos
mov
lea
pop
lea
push
push
add
push
and
add
shl
shr
ror
sub
lea
pop
ror
rol
dec
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
ret
jl
icebp
mov
enter
pop
lods
add
add
mov
lock
fucom
add
push
lea
mov
fcomi
popf
xchg
xchg
fisttps
mov
mov
push
ja
pop
movsb
fsub
shl
test
scas
add
mov
lea
pop
pushl
call
push
push
push
push
call
add
add
add
test
add
lret
cld
add
movsb
push
movsl
mov
add
add
addb
outsl
sbbb
add
add
add
add
add
jne
add
push
add
add
loop
add
adc
add
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
rolb
jl
add
add
lods
add
test
add
add
test
add
lcall
stos
loope
add
jb
mov
out
lds
add
scas
push
add
fnstenv
push
add
sarb
scas
mov
add
lods
pushf
fcomps
out
add
lret
ret
mov
add
pop
push
push
push
push
push
call
andb
scas
add
add
cmc
pusha
add
test
pop
add
jno
add
scas
cwtl
sti
mov
add
sahf
add
jb
out
push
jmp
mov
push
lret
int3
lea
pop
push
pushl
push
push
dec
sub
push
push
pop
add
lea
shr
shr
sub
lea
ror
pop
not
inc
pop
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
jbe
add
mov
fiadds
add
sbb
in
mov
push
push
fadds
xchg
leave
add
in
fadds
movsl
rolb
js
add
arpl
add
add
push
add
adc
add
add
jbe
filds
mov
push
popf
stos
add
jae
add
jl
add
jmp
add
pop
push
push
lea
push
push
push
call
add
add
jmp
add
add
add
icebp
add
add
lahf
test
jb
add
stos
add
add
mov
push
pop
sti
add
push
int3
rcll
xchg
test
scas
out
add
aad
scas
pop
push
add
xchg
movl
add
add
imul
mov
lea
pop
call
push
push
xor
push
sub
add
shr
sub
ror
pop
rol
inc
lea
pop
push
shr
pop
pushl
push
shr
xor
pop
call
push
lea
push
call
add
push
jnp
add
nop
add
add
mov
add
jns
flds
cmpsl
hlt
mov
out
mov
add
xchg
jmp
ficoml
jmp
testl
not
add
xor
sub
pop
call
push
push
lea
xor
add
push
or
inc
add
inc
sub
shl
pop
not
lea
add
lea
pop
push
lea
inc
pop
pushl
call
push
shr
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
iret
aad
add
test
popf
movsl
pop
les
out
mov
fs
add
cld
fwait
int
add
testl
add
add
cmpsl
add
in
add
bound
pop
jmp
push
shr
ror
not
lea
pop
pushl
push
sub
not
pop
mov
jmp
push
push
lea
push
and
add
rol
sub
pop
add
not
sub
pop
push
push
push
push
lea
push
push
push
call
add
xchg
add
in
test
jne
roll
stc
mov
add
push
mov
in
push
add
xchg
jo
add
add
out
jo
add
test
test
add
add
lock
ja
push
xchg
add
add
xchg
add
mov
add
lahf
fildl
mov
negl
add
into
add
add
push
int3
lea
pop
pushl
push
dec
xor
shl
pop
call
push
push
push
push
push
push
call
loop
push
jp
add
jnp
xchg
testl
push
mov
add
push
add
add
leave
lea
std
xchg
jae
fiaddl
nop
add
add
add
add
fsubp
int
enter
add
add
lods
jl
add
mov
add
add
mov
add
add
fisubl
xchg
add
add
jle
mov
lea
pop
push
push
dec
sub
pop
call
push
push
xor
add
push
or
inc
add
inc
shl
sub
lea
pop
ror
not
pop
push
add
xor
pop
pushl
push
add
pop
call
push
push
shl
pop
call
push
push
push
lea
push
push
push
push
lea
push
call
orb
int3
add
mov
add
mov
xchg
addr16
into
imul
xor
cld
scas
add
test
movb
fwait
popf
add
lds
add
jge
xchg
add
mov
iret
cli
js
hlt
lea
pop
leave
push
push
push
push
lea
push
lea
push
push
call
mov
add
mov
fstps
in
in
lods
pop
add
mov
mov
jmp
push
jp
add
repnz
faddl
lea
repnz
push
cld
lea
pop
add
push
lea
push
call
rolb
add
fistpll
xchg
add
add
add
xchg
mov
ficompl
cmpsl
les
add
test
testl
add
add
xchg
ljmp
fsubrs
add
gs
mov
push
loopne
push
add
mov
add
add
add
add
stos
mov
add
insb
jp
cmc
xchg
mov
test
hlt
mov
lea
pop
pop
push
lea
xor
not
pop
pop
push
lea
push
push
push
lea
push
call
add
add
test
faddl
add
sub
pop
add
add
add
mov
pushf
push
nop
add
xorl
stos
adcb
add
add
mov
mov
mov
add
pop
pop
push
rol
sub
xor
xor
pop
pop
leave
push
shl
lea
pop
add
push
xor
pop
ret
push
shl
lea
pop
leave
push
not
add
pop
ret
push
lea
ror
rol
sub
pop
push
push
lea
rol
dec
pop
mov
push
add
inc
lea
not
pop
cmpl
jne
mov
push
push
push
lea
push
push
push
lea
push
push
call
add
fadds
scas
add
add
xlat
add
stc
add
add
lret
add
jns
add
mov
add
nop
mov
push
add
out
jbe
shlb
in
pop
add
add
mov
addl
iret
add
add
jle
bound
fwait
add
ret
in
add
add
pop
jmp
mov
push
not
sub
shl
pop
and
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
add
add
test
add
data16
fildll
stos
add
ja
add
add
mov
mov
movb
pushf
add
add
push
add
in
movsb
push
add
jge
call
arpl
add
add
add
iret
aad
outsl
mov
lea
pop
xor
push
push
push
push
lea
push
call
fmul
add
clc
leave
imul
ja
add
lods
add
rcl
leave
add
add
xchg
mov
pop
add
loopne
add
add
scas
add
add
add
add
sahf
xchg
lods
shl
add
add
mov
push
add
mov
mov
push
add
fmull
push
mov
push
call
fdiv
test
add
cli
xor
insb
add
add
or
push
pop
add
stos
push
add
add
pushf
iret
scas
add
mov
jp
mov
loope
add
je
add
lds
pop
add
push
lea
pop
xor
dec
push
push
push
push
push
push
push
call
mov
in
stos
mov
add
xchg
add
mov
add
mov
xchg
add
pop
add
lea
jp
add
out
mov
xchg
add
jo
mov
fmull
jmp
jmp
push
pop
sub
push
push
call
add
pushf
xchg
add
add
insb
in
push
test
add
add
add
add
add
add
leave
mov
out
add
mov
add
add
add
xchg
roll
je
push
add
mov
nop
shl
cwtl
add
mov
lea
pop
pushl
pop
push
ror
pop
sub
push
push
push
push
lea
push
call
add
add
add
nop
add
je
push
popl
mov
jp
test
add
in
lcall
add
add
in
jae
add
addr16
add
add
mov
mov
fsubl
add
testl
lea
pop
cmp
jne
push
push
push
lea
push
push
lea
push
push
call
enter
add
add
add
js
jae
mov
xchg
pop
xchg
cli
adcl
mov
add
jmp
jae
add
add
add
add
cmpsl
loope
mov
add
add
add
pop
shll
lea
pop
mov
lea
push
push
call
add
shlb
add
add
movsb
mov
mov
pop
add
icebp
pop
add
lods
icebp
lret
add
jnp
sahf
mov
imul
ret
add
shll
add
push
fadd
hlt
add
add
test
push
push
outsl
add
add
iret
mov
jae
pop
shl
out
mov
lea
pop
sub
push
sub
dec
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
sti
add
push
pop
add
fistpl
mov
add
in
add
call
lahf
ljmp
jb
lcall
add
addb
add
scas
add
mov
int
mov
insb
pop
aad
add
in
pop
std
add
ljmp
clc
mov
lea
pop
shr
push
lea
push
lea
push
lea
push
call
add
sahf
addr16
filds
data16
in
test
add
add
add
add
cmpsb
add
cltd
into
add
fwait
add
mov
lret
not
movsb
mov
lea
pop
add
sub
push
push
push
push
push
lea
push
push
call
faddp
mov
add
mov
add
mov
add
add
insb
pop
add
loopne
mov
add
add
testl
popl
lahf
xlat
push
cmc
insb
pusha
add
add
mov
ljmp
shlb
pop
add
add
jmp
flds
cltd
imul
mov
lea
pop
pushl
push
push
call
shll
pop
pop
test
test
movb
out
xorb
add
out
add
add
imul
xchg
add
mull
jo
add
fiaddl
movl
lea
pop
pop
shr
push
push
lea
push
call
mov
add
cld
lret
add
lret
add
pop
mov
lods
cli
mov
add
mov
mov
jl
xorb
mov
iret
int3
add
fnsave
add
js
je
fsubp
add
lea
pop
and
push
shr
pop
sub
push
inc
sub
ror
pop
cmp
jne
push
push
push
push
push
push
push
call
add
cmpsb
add
add
loope
mov
add
xchg
add
add
cltd
add
cwtl
cmp
movsl
mov
xor
bound
lret
arpl
lahf
add
ljmp
lea
pop
leave
push
xor
pop
ret
push
push
call
lods
add
testl
add
push
add
xlat
scas
add
add
int3
add
add
lret
jo
repnz
add
add
add
movsl
mov
mov
xchg
cltd
add
repnz
in
out
add
add
lods
push
add
shll
push
add
lea
push
lea
pop
push
push
push
push
push
lea
push
lea
push
push
call
lea
iret
add
bound
add
call
add
lahf
add
xlat
fisubs
pop
jnp
add
xchg
push
mov
jbe
add
lock
fwait
je
pop
in
lds
in
test
repnz
add
add
add
bound
mov
push
lea
add
pop
add
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
xchg
lods
iret
out
jae
add
mov
movsb
lock
pop
mov
add
lea
test
add
pop
mov
add
jge
addb
add
jne
jns
push
roll
clc
add
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
popf
add
add
mov
add
out
add
flds
je
add
mov
scas
mov
pop
lods
add
push
in
enter
add
sahf
movsb
mov
movsb
add
add
out
add
add
add
lea
pop
push
push
push
xor
pop
push
mov
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
out
mov
lods
mov
cltd
add
lahf
add
mov
jno
add
xchg
cwtl
into
jle
test
pop
jo
test
add
add
add
add
push
jno
int3
lea
pop
lea
push
pop
sub
push
shl
lea
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
les
lahf
arpl
mov
add
nop
test
add
icebp
add
arpl
outsl
addr16
add
mov
shlb
lock
add
jae
jl
push
pop
mov
add
in
add
cld
add
mov
rolb
pop
pop
loope
add
jl
mov
add
add
add
stos
jae
add
and
shr
add
push
dec
add
lea
pop
mov
add
push
push
lea
push
push
lea
push
call
std
mov
jne
movsl
add
push
loopne
add
cli
xorb
loope
mov
add
push
cmpsb
xchg
leave
ljmp
leave
mov
iret
loope
jno
in
mov
hlt
add
mov
mov
add
fmull
jnp
push
push
call
cmpsb
arpl
filds
cmc
lds
add
xchg
gs
mov
mov
push
mov
ficomps
add
mul
add
lcall
test
data16
add
add
add
jb
add
add
add
add
add
pop
lds
add
loopne
pop
add
push
lea
push
push
push
push
push
lea
push
call
int3
add
mov
push
loopne
imul
xchg
popa
out
add
fwait
add
add
movl
sarb
add
test
idiv
jne
pop
add
xchg
pop
add
add
mov
lea
pop
xor
mov
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
cli
jge
mov
imul
int
loopne
mov
add
mov
int3
add
pop
hlt
js
add
ror
mov
cmpsb
pop
xchg
movsl
cld
jp
flds
les
xchg
add
mov
lea
pop
and
rol
push
rol
sub
pop
rol
push
push
push
push
call
add
jnp
stos
mov
test
add
int3
mov
add
int
jmpw
add
test
scas
mov
mov
lea
pop
xor
push
shr
inc
pop
inc
push
push
push
lea
push
call
add
add
xchg
fwait
pop
add
in
add
lret
jae
add
add
movl
lret
mov
mov
fiadds
add
pusha
adc
cmp
jne
push
lea
push
lea
push
lea
push
lea
push
call
add
loop
add
add
fwait
mov
mov
mov
mov
jmp
add
fwait
add
addl
add
mov
clc
scas
add
jnp
add
icebp
add
add
xchg
mov
out
ficomps
add
jbe
add
rol
lock
add
loopne
sti
test
into
mov
fucom
fabs
mov
pop
mov
lea
pop
add
cmp
je
push
sub
sub
pop
add
push
xor
pop
cmpl
jne
push
push
push
push
push
lea
push
push
push
lea
push
call
jecxz
add
mov
flds
add
sahf
add
xorl
cwtl
add
add
add
call
add
add
add
imul
arpl
add
jle
ret
add
jge
add
xchg
into
out
addr16
test
ret
push
add
add
xchg
add
insb
mov
add
hlt
lea
pop
xor
pop
push
lea
push
push
push
push
push
lea
push
push
call
mov
sti
js
mov
test
icebp
in
test
add
out
je
jp
add
lcall
stc
pop
fldl
add
pop
out
mov
pop
xchg
int3
pushf
add
lds
add
imul
mov
add
add
add
mov
lea
pop
pop
pop
push
sub
xor
inc
rol
pop
pop
push
push
lea
push
lea
push
push
call
int
imul
xchg
add
add
add
add
add
lods
add
add
mov
icebp
fcoms
add
add
data16
mov
add
mov
add
add
jmp
add
add
pop
jnp
div
add
scas
xchg
lcall
lods
insb
add
mov
jp
test
add
lea
pop
pop
push
push
push
push
push
call
rclb
popa
outsl
add
rolb
rolb
pop
mov
mov
push
add
add
push
mov
add
add
lahf
ja
add
add
xchg
int
push
add
add
int3
add
pop
leave
push
pop
ret
push
sub
pop
mov
add
push
push
push
lea
push
push
push
push
call
mov
in
add
aad
imul
push
add
add
movsb
pop
add
in
mov
add
add
decb
cltd
ffree
filds
add
add
lds
fiaddl
add
sbb
push
push
shl
not
rol
pop
push
push
push
lea
push
call
addr16
sbbl
test
in
out
call
xchg
add
cwtl
add
mov
cld
jo
outsl
jmp
add
scas
stc
in
jle
mov
mov
lea
pop
add
xor
push
push
call
push
stc
jbe
add
xchg
js
je
add
jns
add
lods
add
pusha
add
mov
mov
mov
mov
add
add
js
out
add
aam
testb
add
add
pop
mov
movsb
mov
aam
bound
pop
add
push
sub
lea
add
not
pop
add
pop
push
push
push
lea
push
call
aam
arpl
add
add
scas
clc
jne
add
mov
jle
loope
add
hlt
add
add
pushf
add
cli
addl
shlb
add
mov
add
movsl
cltd
jmp
jnp
mov
jle
mov
pop
mov
add
add
in
add
rcrl
fsubl
cmc
pusha
pop
cmpsb
push
add
mov
cld
lea
pop
pop
mov
push
not
shl
pop
push
push
shl
pop
call
xor
push
lea
push
push
lea
push
push
push
push
call
hlt
clc
add
addr16
add
add
enter
add
add
loopne
add
jmp
rcll
scas
mov
mov
rcll
xchg
sahf
mov
add
add
jmp
addr16
ret
ret
mov
les
hlt
data16
add
jmp
call
add
add
add
mov
fiaddl
xchg
add
add
pop
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
jecxz
into
icebp
loopne
mov
add
add
push
mov
cmc
nop
imul
jbe
add
add
repnz
mov
add
add
mov
jae
add
add
add
mov
stos
add
add
add
pop
pop
pop
push
inc
dec
dec
rol
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
jo
mov
pop
push
pop
add
xchg
lret
add
outsl
into
roll
add
add
aad
push
repnz
addl
jle
scas
jne
add
add
cld
mov
add
pop
leave
push
sub
shr
sub
pop
ret
push
add
pop
push
mov
push
lea
push
call
xchg
bound
mov
cmpsl
mov
pop
out
xlat
addb
cli
add
cmpsl
out
add
and
popf
add
movb
mov
xchg
std
add
add
xchg
test
in
outsl
add
sti
add
test
std
add
add
push
add
cld
jecxz
addb
add
add
flds
lret
jecxz
jae
add
push
int3
lea
pop
add
push
sub
shl
not
pop
push
push
lea
push
push
push
lea
push
push
call
add
rcrb
pop
stos
stos
xchg
in
add
arpl
mov
lock
jo
std
insb
xchg
mov
cld
cmpsl
add
jae
fnstcw
faddl
mov
cwtl
out
add
add
add
fiaddl
add
add
add
pop
push
push
push
push
push
call
aad
nop
push
add
add
push
fistl
add
in
add
add
std
add
fildl
gs
mov
xchg
add
push
add
jp
add
mov
loopne
rorb
pop
push
push
lea
sub
shr
pop
push
mov
push
sub
add
add
sub
pop
push
pop
push
shr
pop
lea
sub
push
push
lea
push
call
in
push
bound
add
fldenv
hlt
add
arpl
add
add
add
pusha
lret
add
frstor
jns
cltd
pop
mov
lea
pop
mov
push
xor
pop
shr
add
push
inc
pop
mov
add
push
shl
pop
pushl
push
dec
pop
popl
mov
push
rol
pop
add
push
push
push
push
push
push
push
push
push
call
scas
add
add
std
add
popf
add
add
add
add
add
add
fcmovu
test
fisubrl
mov
add
add
mov
fs
add
lds
add
add
add
flds
add
hlt
lea
pop
xor
push
shl
inc
pop
lea
push
rol
pop
mov
push
shr
sub
sub
pop
add
push
lea
push
push
call
jle
add
jno
mov
add
push
into
add
loope
arpl
add
hlt
push
pushf
xchg
mov
test
xchg
loop
pop
cli
add
push
int
push
jnp
icebp
filds
add
push
nop
stos
mov
lea
pop
xor
push
rol
pop
rol
nop
push
push
push
push
push
push
push
push
push
call
add
add
add
lods
mov
cmpsl
add
jne
add
mov
add
add
push
jle
add
lods
jbe
push
add
pop
pop
add
icebp
mov
push
mov
add
lret
add
add
je
push
add
push
add
add
pop
mov
lea
pop
nop
push
push
lea
push
push
lea
push
lea
push
push
call
aad
add
fcoml
add
add
stc
push
add
mov
negb
push
add
add
add
add
rclb
add
add
mov
roll
add
xchg
mov
jnp
add
notb
xchg
push
add
add
add
pop
shll
jb
add
std
int3
pop
cmpsl
add
int3
stos
add
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
push
call
scas
add
cmc
int
aam
into
lock
addl
add
rcl
add
add
add
add
jae
les
add
add
movsl
scas
mov
mov
add
add
lret
fadds
add
loope
xchg
xchg
mov
lea
pop
nop
nop
push
lea
push
push
lea
push
push
lea
push
call
jle
mov
lods
je
mov
add
addb
repnz
mov
add
mov
loopne
stc
scas
js
cmpb
jl
add
popf
mov
je
hlt
lods
movsl
cmpsb
insb
push
push
add
add
fdivrp
mov
mov
add
jmp
push
gs
mov
lea
pop
inc
nop
push
rol
not
shr
pop
nop
cmpb
jne
push
inc
sub
shl
pop
add
nop
push
lea
ror
pop
nop
cmp
je
push
push
push
push
push
push
call
add
xchg
add
mov
lea
xchg
add
popa
jp
pop
ja
pop
add
jb
sahf
cwtl
add
add
push
addb
in
add
lahf
cld
add
xchg
add
pop
nop
nop
push
rol
pop
inc
push
not
shl
shr
pop
nop
push
xor
inc
pop
nop
cmp
jb
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
jae
push
sbbb
add
add
push
add
add
jbe
mov
je
add
std
add
push
xlat
ret
xchg
add
fildl
xchg
xchg
loop
jecxz
scas
push
test
push
aad
mov
lret
add
add
add
add
testb
add
mov
and
xor
jmp
push
push
call
push
add
jecxz
mov
addl
jb
jb
mov
add
add
pop
add
out
scas
enter
pop
lods
add
add
mov
add
push
add
pop
mov
push
add
pop
add
push
lea
push
push
lea
push
lea
push
push
push
call
pop
add
add
xchg
enter
add
mov
lds
lods
addr16
add
add
push
out
cli
push
mov
add
les
pop
add
push
testb
jle
fucomip
nop
in
add
pop
mov
call
add
add
xchg
jb
mov
add
imul
add
add
cwtl
add
pop
add
pop
movzwl
push
ror
pop
mov
push
push
push
call
test
add
rolb
insb
lret
add
mov
pop
stos
add
pop
add
jb
enter
sarb
imul
out
add
add
ret
fcmovnb
mov
hlt
add
test
push
add
xchg
add
test
xorb
out
flds
int
mov
fmull
rorl
adc
leave
xor
push
shl
add
pop
shl
push
ror
inc
pop
xor
push
lea
sub
shl
pop
shl
xor
push
sub
not
lea
pop
shl
push
rol
sub
lea
ror
pop
xor
push
inc
pop
mov
push
dec
shl
pop
add
push
shr
pop
pop
push
push
push
push
push
push
push
push
push
push
call
movsb
jne
jmp
std
add
push
add
add
push
add
add
xchg
fwait
add
add
fwait
add
imul
mov
add
imul
pop
add
add
add
add
jae
push
or
add
rorl
pop
push
push
push
lea
push
call
add
lret
add
add
add
lret
addl
lock
jo
add
jnp
addb
add
mov
xchg
add
mov
out
fldl
mov
mov
xchg
add
add
fmull
pop
push
pop
leave
ret
push
not
pop
push
mov
push
xor
xor
lea
shr
pop
push
push
sub
dec
sub
sub
pop
push
push
sub
pop
push
push
sub
pop
push
push
inc
pop
mov
mov
push
push
lea
push
call
add
add
pop
push
popl
add
mov
add
xchg
mov
testb
add
add
add
clc
add
scas
nop
movsb
add
jne
flds
int3
add
enter
leave
add
aad
add
mov
mov
filds
mov
mov
lea
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
arpl
pop
add
push
add
sti
movsl
add
add
ret
add
lret
add
call
pushf
cmc
fnstenv
pop
add
xlat
in
out
mov
add
fimull
into
mov
cmpsb
shl
enter
lcall
add
imul
hlt
lea
pop
test
je
mov
push
not
dec
pop
test
je
push
sub
ror
dec
inc
pop
mov
push
xor
shl
dec
pop
mov
mov
push
ror
add
pop
inc
push
push
push
push
call
add
and
add
mov
addl
add
add
call
add
loope
bound
jb
mov
stos
add
scas
or
add
imull
clc
jp
jns
loopne
movsb
pusha
pop
clc
jp
add
mov
add
add
adc
rorb
test
add
add
add
push
xor
pop
mov
push
not
sub
pop
inc
cmp
je
push
shr
pop
test
jne
xor
push
rol
not
pop
pop
push
add
pop
pop
push
inc
sub
shl
pop
pop
push
rol
inc
lea
xor
pop
pop
leave
push
push
push
call
add
mov
add
jno
popl
add
add
add
add
lcall
jbe
jnp
mov
imul
xlat
test
jae
add
add
incb
add
add
add
les
add
pop
ret
push
push
push
push
lea
push
push
push
call
fcomps
add
add
mov
addr16
mov
add
out
addb
shr
pushf
add
ret
insb
movsb
icebp
add
jle
add
xchg
mov
push
lds
push
add
aad
add
add
add
add
mov
lea
pop
mov
push
push
call
add
push
xchg
testl
add
repnz
push
sahf
pop
outsl
add
jo
popa
sti
filds
incb
roll
add
lea
push
jo
add
mov
rcrl
fsub
shrl
mov
lea
pop
inc
push
inc
shr
not
sub
pop
cmp
jne
push
xor
add
inc
pop
lea
push
rol
lea
pop
mov
push
push
push
call
out
add
mov
add
fisttps
sahf
jae
xchg
add
pop
call
add
add
mov
add
add
jecxz
add
popa
add
add
mov
aad
movsl
push
popa
mov
add
mov
xchg
mov
mov
lea
pop
test
je
mov
push
rol
not
not
pop
add
push
shr
pop
cmp
jne
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
pop
pop
incb
mov
lahf
sbbl
mov
mov
add
mov
add
add
add
fnsetpm(287
jge
jne
mov
add
add
xlat
pop
add
cwtl
lds
add
cmc
fcmovne
add
jp
add
add
add
add
push
sub
inc
add
jmp
test
je
push
push
lea
push
push
call
add
imul
add
xchg
popa
lock
ret
iret
xchg
rclb
add
pop
mov
jl
add
rol
add
add
mov
cld
lea
pop
mov
add
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
loopne
les
push
add
add
xchg
add
mov
jbe
fldl
cwtl
in
fstp
ret
add
add
mov
fsubrl
cli
je
add
testl
add
add
out
lcall
pop
cmp
je
jmp
push
push
push
lea
push
push
push
call
js
add
mov
test
jb
icebp
add
xlat
add
mov
mov
pusha
outsl
add
pop
mov
add
stos
add
add
push
add
add
add
stos
push
loopne
jae
movsb
jbe
add
add
add
add
add
jno
lods
add
push
lods
mov
loope
test
mov
lea
pop
xor
push
push
push
push
push
lea
push
push
call
add
movb
add
jae
mov
add
add
iret
pop
fldcw
add
in
jns
insb
mov
xlat
add
mov
jo
add
sti
add
arpl
cld
clc
add
jne
add
mov
lea
pop
pop
push
sub
shl
dec
add
pop
pop
pop
push
push
push
push
push
call
test
cmpb
add
add
mov
jp
add
insb
add
sahf
loope
add
add
movsb
insb
testl
test
out
cmpsb
add
pop
pop
push
lea
inc
shl
pop
leave
push
add
lea
rol
sub
pop
ret
push
push
push
push
push
push
lea
push
push
lea
push
call
push
add
jne
aad
add
jnp
mov
xchg
adcb
add
loope
mov
push
add
add
add
add
pusha
add
add
bound
lea
pop
push
shl
not
rol
pop
pop
push
dec
lea
sub
pop
pop
push
dec
sub
pop
pop
leave
push
sub
pop
ret
push
shl
ror
shr
pop
mov
push
rol
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
fsubrl
bound
add
addl
jo
add
add
scas
icebp
cmpsb
add
add
stc
add
fcomi
fadd
add
js
lahf
mov
lea
pop
pop
push
push
push
push
push
push
call
xchg
lds
test
aam
in
add
add
test
movl
je
jl
cld
lahf
xorb
out
add
rolb
add
mov
pop
addl
clc
into
add
out
add
add
fcomps
jb
mov
lea
pop
pop
pop
push
push
push
lea
push
push
call
add
out
out
mov
pop
add
mov
out
scas
fdiv
movsb
test
push
add
popa
cmpsb
jo
add
jecxz
add
mov
xlat
mov
in
lds
in
pop
add
loopne
arpl
mov
xchg
jecxz
mov
imul
leave
ret
xchg
and
xchg
icebp
je
mov
loope
imul
mov
imul
enter
xor
xlat
jne
scas
les
add
aas
movsl
inc
inc
mov
out
push
inc
rclb
push
pop
mov
and
std
pushf
ficoml
rcll
jno
mov
cltd
inc
mov
jle
sbb
ja
cmc
jg
sbb
int3
cmp
outsl
push
fists
mov
sub
test
or
jl
inc
and
pop
leave
stos
sbb
and
pop
in
fldln2
add
dec
mov
test
mov
xchg
pop
dec
xchg
shrl
mov
mov
imulb
decb
adc
mov
sbb
mov
or
pop
ss
jno
sbb
imul
sub
and
orb
mov
add
cmp
idivb
loop
sbb
loopw
movsl
test
mov
stos
and
mov
and
daa
sbbl
mov
inc
and
jbe
cmp
or
in
ljmp
fdivrl
cwtl
or
push
sarb
out
stos
cmpsl
push
mov
mov
or
pop
addl
std
out
cmpsl
push
sbb
jns
pop
fwait
mov
into
mov
pop
push
loop
mov
pop
pushf
ljmp
jo
mov
add
xlat
and
rcll
pusha
push
dec
add
daa
in
cmp
cli
mov
or
das
mov
push
cltd
or
or
decl
div
popf
rclb
xor
mov
cmp
mov
pop
jb
psubw
cmp
scas
mov
stos
jle
cmpsb
adc
adc
popa
loopne
push
into
icebp
scas
fxtract
pop
lret
push
enter
cmpb
add
pop
or
ljmp
stc
loope
add
add
push
popf
inc
clts
cmp
imul
cmpsl
lods
jae
push
in
jbe
nop
shlb
mov
mov
jns
pop
sub
cmp
pop
cwtl
loope
subl
sub
ss
int
xor
cmpsb
xor
xor
xor
add
loop
fidivs
cmc
mov
clc
sub
sbb
inc
dec
sub
ljmp
cli
roll
xchg
jns
or
clc
mov
cmp
jge
push
cmp
mov
push
and
out
mov
xchg
pop
xchg
xlat
push
ret
ds
in
cmc
and
dec
mov
faddp
or
mov
xlat
push
xlat
out
bnd
and
push
sub
add
or
call
jmp
mov
movsb
cmp
out
mov
lahf
sub
xchg
pusha
into
xchg
adcb
jb
push
ficoml
inc
aad
pop
movsl
pop
daa
filds
gs
mov
imul
inc
push
mov
popa
or
montmul
cmpsb
inc
adc
aas
push
jl
out
add
enter
and
movsb
imul
cmp
mov
cmpsl
sub
in
lcall
leave
push
xchg
inc
shrl
pop
sbb
push
not
cmp
mov
jbe
mov
scas
mov
jne
insl
adc
inc
fwait
jg
addl
hlt
test
out
js
das
pop
imul
fisttps
mov
les
push
in
mov
int3
mov
stc
mov
jnp
out
inc
dec
mov
xchg
jae
stc
imul
shlb
aad
lea
aad
xchg
ljmp
popf
sub
movsl
jne
fdivrs
sbb
adc
cmpb
push
cmp
movsb
mov
out
fisttpl
out
fistl
sub
mov
and
mov
cmp
lahf
imul
dec
sbb
cwtl
dec
mov
jbe
add
icebp
push
insb
push
mov
mov
lea
cli
pop
fistpl
mov
mov
xor
push
into
aas
movb
add
popf
inc
or
sub
pmuludq
rcrl
mov
ret
dec
inc
inc
push
sbb
bound
nop
push
call
lahf
mov
mov
test
call
lret
mov
pop
jmp
je
popa
div
mov
stos
cmp
adc
add
loopne
mov
test
aas
pop
pop
push
out
sub
loope
adc
shll
mov
pop
pop
push
adc
test
sbb
jl
scas
ret
int
ss
jg
arpl
fwait
mov
mov
or
add
les
daa
aam
xchg
iret
ljmp
or
xchg
push
stos
rcl
and
pop
mov
pushl
jae
addl
and
outsl
or
push
adc
adc
bound
bound
nop
mov
mov
mov
or
paddq
stos
add
jb
xor
cmp
in
and
ja
in
sub
push
or
cmp
ljmp
std
in
mov
xorl
scas
jp
fwait
pop
lods
add
popl
push
data16
mov
daa
mov
notl
mov
pushf
mov
sub
dec
pop
push
movsl
hlt
loop
adc
cs
mov
roll
lods
pop
inc
cltd
pop
and
pop
pop
dec
popf
lahf
loop
and
lret
and
push
sub
dec
lea
leave
das
sub
inc
lahf
lds
test
adc
xlat
std
mov
fwait
pop
dec
clc
rolb
adc
xor
push
xor
push
push
inc
cmp
cltd
dec
lret
jg
cmp
popf
inc
in
mov
call
jae
adc
movsb
mov
mov
cmp
jp
test
xlat
out
push
js
outsl
int3
in
mov
mov
xchg
sbb
insb
adc
aam
mov
scas
clc
xor
lahf
cmpsw
adc
inc
fisttpll
imulb
adc
lea
jo
jp
adc
fisttps
dec
icebp
sub
rcr
popa
rcrl
xchg
xchg
sbb
dec
cld
mov
ror
xor
cmpsl
add
inc
ficoml
add
pop
push
aaa
ljmp
sbb
mov
repnz
mov
add
xchg
addb
div
adc
jo
push
mov
psrlq
inc
and
aaa
imul
ljmp
leave
out
lods
xchg
pop
gs
stos
scas
sbb
je
js
xor
test
or
push
push
popa
xchg
jb
add
insb
xchg
jns
fldpi
jp
arpl
sbb
xor
loopne
fidivs
adc
pop
bound
xchg
mov
fucomi
add
push
dec
cmp
pop
push
and
or
push
fidivrl
mov
sti
insl
dec
imul
push
xchg
js
xchg
arpl
stos
int
into
cmp
inc
push
cmpb
lods
ret
arpl
pop
test
cmpl
stos
orl
stos
dec
fisttpl
xor
adc
cmpsb
push
adc
mov
xor
insb
dec
xchg
xchg
pop
pusha
adc
sti
loop
mov
and
or
sbb
mov
clc
ljmp
outsl
xor
mov
movsb
outsl
sbb
dec
jecxz
mov
and
sbb
int
popf
sbb
dec
jecxz
insb
out
out
js
sub
xchg
push
repz
or
addb
jp
sub
fs
in
xlat
notb
inc
xor
sub
xchg
xchg
jo
mov
or
pop
hlt
aaa
jle
imul
scas
fcomps
mov
mov
loopne
jecxz
or
dec
jge
ds
mov
leave
xchg
mov
fistl
jno
push
adc
mov
push
add
cmp
xchg
test
mov
int3
or
jecxz
lods
rep
dec
sahf
pop
jl
sbb
xor
lret
cmp
dec
pop
gs
in
adc
cmp
shrd
adc
je
xlat
lea
mov
aad
in
nop
lods
pop
ljmp
cwtl
push
mov
or
xlat
lahf
fwait
and
int3
shll
add
lock
mov
loop
lret
inc
adc
jo
fiadds
repnz
call
sbb
pop
rcll
cmp
add
sbb
pop
idivl
aad
cmp
mov
iret
ret
or
cs
or
inc
popf
push
mov
ljmp
outsl
pop
idivb
popa
shrb
insb
inc
fs
mov
fnstsw
stos
mov
push
jne
sbb
or
inc
lock
or
xchg
call
std
cli
adc
xor
sub
hlt
add
cmp
neg
mov
sbb
shrb
rol
mov
rcl
mov
shrl
cmp
aaa
and
in
cmp
aad
sbb
cmp
loope
cmpsl
push
sahf
cmp
iret
mov
aas
test
cld
fimuls
push
jle
hlt
aam
jp
popa
sub
shrl
sub
test
mov
nop
jbe
xchg
pop
ds
pop
xchg
or
pop
cmpsl
jne
and
shl
aas
inc
xlat
cmpsb
inc
jo
lods
sarl
data16
cli
jmp
inc
call
pop
mov
scas
and
rolb
inc
shlb
adc
insb
dec
bnd
push
dec
ss
adc
sarb
stos
dec
and
xor
scas
and
pushf
nop
mov
jle
add
xchg
sub
mov
and
movsb
les
mov
or
jp
push
pop
ds
int
jnp
lea
repz
jecxz
push
icebp
cwtl
adc
subb
js
push
mov
enter
cltd
push
inc
and
stos
mov
cmp
fs
andb
stos
mov
imulb
shll
and
push
mov
or
or
rcl
xchg
and
fcompl
jno
cmp
xor
xchg
fimuls
fisttpl
and
out
loop
cmp
in
xchg
inc
fcompl
dec
and
mov
push
inc
dec
out
mov
jecxz
mov
std
mov
jno
es
fiaddl
fnstsw
sub
stos
push
inc
mov
and
push
sub
rcrb
or
shll
pop
les
xlat
pop
jbe
mov
push
stc
adc
lahf
cmp
sub
scas
int
lea
ret
cld
popa
clc
jae
nop
test
dec
jne
es
jo
in
xchg
cli
pushf
jle
fimull
out
lret
or
mov
addr16
or
nop
jns
mov
sub
pop
add
cld
dec
add
loop
bound
iret
pop
sub
int
jno
cmc
jo
jecxz
lods
ror
stos
loop
push
pminsw
lahf
jecxz
pop
xchg
andl
mov
mov
lcall
fs
clc
fisubrs
int
push
addl
inc
inc
mov
mov
sbb
imul
into
push
in
daa
imul
pmaddwd
xor
fidivl
jbe
iret
jp
nop
repnz
xchg
aas
inc
jle
xchg
jmp
add
inc
fisttpl
jle
sbb
mov
push
out
es
xchg
mov
mov
aam
ljmp
mov
enter
insl
push
add
addr16
imul
xor
jns
ffree
push
flds
sub
js
cmpsb
popa
adc
insb
dec
icebp
jbe
lcall
adc
sbbl
or
lcall
test
stc
cmp
fldl
xchg
mov
xacquire
push
mov
xchg
jnp
mov
subl
cli
xor
jne
rclb
test
lods
into
mov
negb
in
fidivl
mov
nop
cmp
and
out
test
out
mov
imul
dec
dec
dec
cwtl
jge
lods
cs
lcall
inc
loopne
cwtl
lret
mov
pmullw
dec
cmp
je
add
push
les
das
push
sbb
bound
in
xchg
subl
test
ss
sbb
cmpsl
mov
push
mov
scas
mov
adc
sbb
sbb
mov
test
ds
add
xchg
cmpsl
sarl
mov
fs
outsb
adc
scas
ljmp
mov
scas
xchg
pop
outsb
cmp
or
jne
clc
mov
push
aad
lret
jae
and
leave
stos
test
popf
sti
shlb
aam
test
lods
and
aaa
sbb
xchg
mov
add
fcompl
lods
movsb
fnsave
mov
pop
cmp
mov
jp
add
cmp
test
test
aad
popa
pusha
arpl
out
mov
stos
push
jp
mov
mov
shll
mov
mov
loopne
sbb
outsb
in
xchg
pusha
mov
adcl
aam
ljmp
sbb
adc
jg
inc
mov
push
hlt
inc
push
push
lret
dec
sub
xchg
xchg
cmp
push
pop
mov
outsl
dec
xor
data16
fwait
ljmp
jl
cmc
lds
mov
inc
push
int
addr16
lcall
or
imull
sub
out
gs
icebp
mov
into
jno
pusha
inc
notl
pop
arpl
scas
dec
rorb
popf
cmp
jge
dec
fdivrs
cwtl
mov
mov
jle
sub
ja
mov
outsl
or
inc
inc
mov
ret
dec
ljmp
roll
icebp
in
arpl
adc
jae
push
test
inc
cmpsl
and
jne
adc
mov
enter
pop
enter
setle
pandn
in
pop
cmp
idivb
or
rorl
hlt
mov
dec
jb
cmp
lret
scas
jp
sub
xchg
sahf
rcl
xor
jne
out
jg
mov
mov
hlt
push
xchg
xor
mov
inc
jae
mov
jmp
into
pop
sub
out
mov
dec
in
push
mov
xlat
and
lcall
xor
in
lahf
inc
or
fmull
adc
lock
sub
shrl
jnp
push
mul
cmc
and
or
cli
xchg
decb
pop
cmp
mov
ret
cmp
fs
out
aam
arpl
jmp
imul
inc
lods
add
gs
and
pop
and
mov
pop
shll
lret
aaa
xchg
mov
aad
mov
outsb
add
lcall
sub
pop
popf
stc
addr16
lret
xor
add
fisttpl
dec
cld
cmp
je
fmuls
aad
or
lds
mov
cmpsb
scas
fbstp
mov
push
nop
adc
in
jmp
or
and
pop
ret
mov
mov
or
clc
fadd
int
aaa
add
xchg
jae
mov
jg
mov
sbb
xchg
insl
jmp
pop
fisubs
jl
pop
shl
sahf
mov
adc
mov
sub
rcl
daa
dec
aad
mov
lret
sub
pop
pushf
jmp
xchg
loopne
mov
test
push
jns
hlt
into
xlat
xchg
das
mov
cmp
push
jl
adc
mov
mov
add
daa
mov
mov
enter
ret
mov
dec
xchg
in
test
rcll
or
mov
push
daa
sbb
cmp
mov
cmp
pop
push
mov
int3
sbb
and
lds
inc
cmp
or
repz
pusha
add
lods
pop
cmpsb
rorb
mov
inc
push
mov
xor
jb
lahf
in
jns
jecxz
in
add
mov
mov
popa
out
scas
xor
mov
subl
pop
ja
imull
addr16
lret
mov
mov
imul
mov
lods
dec
mov
fistl
fisubrl
fs
dec
dec
call
xchg
mov
fistl
call
push
les
cmpsl
jne
out
dec
lcall
rorb
outsb
movsl
fcoml
jmp
add
and
popf
or
test
cmp
cs
push
nop
and
lds
movsb
jnp
mov
pusha
sbb
fisttpl
push
and
xchg
imul
xchg
push
hlt
outsb
xchg
inc
cmpsb
mov
fcom
ret
sahf
lret
out
cmovg
in
loopne
daa
stos
sub
cmp
push
fdivrs
ss
mov
push
add
push
in
mov
cld
fdivp
fnstcw
jg
outsl
mov
adc
mov
push
adc
and
mov
aad
jne
sbb
xchg
pop
xor
inc
in
popf
stos
add
cmp
inc
dec
rorb
fidivl
dec
cmp
mov
xor
enter
inc
dec
push
and
sub
lret
addr16
and
jp
push
pop
aas
roll
lcall
repnz
in
aas
push
shll
inc
adc
lock
pop
jno
cmp
aaa
xchg
mov
lret
push
roll
mov
pop
cmp
rcrl
push
adc
add
push
js
pop
mov
mov
and
in
pop
mov
loop
inc
or
loope
inc
ss
divl
in
cld
push
je
add
xchg
xorl
push
pusha
sbb
insb
xchg
inc
dec
addl
xor
mov
in
divb
cmpsb
mov
lock
das
sub
or
nop
loop
scas
inc
rcrl
ss
fdivp
adc
ja
in
xchg
pushf
daa
iret
mov
xchg
dec
mov
and
adc
jl
aaa
mov
idiv
and
rcll
out
sub
lods
xor
mov
in
cmp
cltd
lods
adc
inc
fucomi
mov
call
mov
mov
into
xor
add
mov
mov
or
cld
pop
cmp
pushf
dec
sub
mov
fldcw
or
gs
jns
int
pushf
mov
xor
adc
mov
lcall
call
loope
fidivl
bound
sbb
and
mov
ljmp
and
push
mov
stc
popf
pop
mov
gs
stc
sub
cmp
and
addr16
sahf
pusha
sarb
dec
push
shll
inc
dec
inc
or
stc
mov
iret
pop
dec
xor
adc
decl
mov
xor
fwait
or
mov
fidivrs
adc
in
enter
push
fdivp
or
jo
mov
test
ljmp
shrb
mov
sub
mov
sbb
xchg
or
dec
stc
rol
popa
cmp
inc
lock
xor
inc
je
fwait
iret
mov
fdivrl
mov
and
es
jbe
mov
cmp
mov
sti
jns
loopne
mov
cmp
dec
adc
stc
std
cltd
sbb
push
dec
je
xlat
cwtl
lcall
aas
jne
aaa
jp
sbb
popf
dec
std
sbb
pop
inc
push
lahf
sbb
test
push
ret
int
or
jbe
nop
mov
fnstenv
dec
lock
inc
sub
adc
cmpl
jle
lcall
and
and
fcomps
or
rol
add
or
cmp
add
fiaddl
les
sahf
pusha
and
xchg
sub
and
lock
dec
inc
mov
shlb
pop
adc
xor
and
xor
push
cmpsb
inc
mov
xlat
sbb
frstor
jnp
repz
aam
xchg
lret
push
push
loop
fwait
mov
xlat
xchg
pop
fnstcw
push
fstps
xor
fidivrs
loop
testl
test
cli
outsl
psraw
test
mov
pop
or
ljmp
fidivl
fisttpll
lock
ret
sarl
xor
jb
or
push
inc
adc
push
xchg
sahf
fnstenv
mov
or
mov
mov
loop
pop
cmp
in
in
sub
mov
mov
fimuls
lods
mov
xchg
sbb
fnsave
into
std
aas
std
and
jl
inc
and
in
inc
or
pop
dec
pop
xchg
aad
pushfw
xor
aas
lahf
lock
rcl
sbb
out
jo
outsb
fisubl
adc
mov
shrl
rolb
mov
dec
jo
call
and
bound
push
mov
not
sub
int
cli
loopne
xchg
cmpl
sub
jmp
sub
ret
dec
mov
rclb
test
lahf
sub
jmp
adc
mov
mov
stos
mov
mov
adc
mov
ljmp
sbb
mov
insb
and
cmp
movsb
std
push
dec
jl
adc
jo
jb
pop
scas
pop
fadds
push
pushf
add
jecxz
xchg
loopne
pusha
xchg
xchg
es
sbb
dec
adc
jl
nop
fsubl
int
mov
test
mov
and
in
repz
inc
sti
mov
sub
scas
out
mov
lds
mov
pop
sub
push
and
mov
mov
rcrl
outsb
mov
pushw
in
fcmove
ljmp
pop
sub
mov
cli
mov
fisttpl
push
or
and
push
je
sahf
mov
rolw
mov
mov
sbb
aaa
lcall
adc
jg
xor
xlat
mov
and
mov
add
push
adcb
sub
push
push
push
jl
adc
cmp
mov
sbb
push
fcoml
mov
in
repz
pop
or
inc
lock
sbb
ljmp
xor
add
addr16
pop
push
or
mov
test
or
mov
stos
sub
add
lcall
jnp
jne
inc
sbb
inc
adc
data16
xchg
lret
jbe
pop
repz
add
std
add
jno
add
pushf
movsb
test
push
arpl
pop
push
out
fistl
je
aam
shrb
iret
fldl
shl
mov
pop
mov
xor
mov
xor
push
pop
out
sbb
sub
adc
inc
inc
xor
rclb
mov
add
xchg
in
das
ret
inc
mov
adc
ljmp
repz
ljmp
xor
dec
int3
adc
sti
inc
sbb
push
cmp
cmpsb
cmpl
xchg
lods
fs
cli
and
jmp
fsubp
push
popl
mov
xchg
xchg
xlat
roll
loope
sub
addr16
jb
pushf
xchg
mov
insl
jae
pop
daa
andl
and
lods
repz
cmp
inc
mov
bound
outsl
scas
mov
push
outsl
loop
aas
out
jns
and
sub
fsubrs
add
mov
loop
xor
into
mov
mov
sub
pushf
jp
stos
or
mov
lea
mov
movsb
daa
mov
jno
lds
fisttpll
in
mov
imul
mov
rclb
pop
jns
mov
repz
repz
pextrw
cmp
and
insl
jne
jae
mov
mov
add
mov
fistpl
inc
dec
cwtl
inc
mov
mov
cmp
xchg
mov
mov
add
jb
cwtl
or
dec
test
cli
pop
fisttpl
mov
pop
sub
test
ret
out
loop
xorb
pop
dec
in
jmp
icebp
mov
xor
sbb
test
xor
stos
loop
out
add
jb
test
je
mov
js
mov
pushf
sahf
xchg
push
aam
pop
jp
jmp
pop
mov
mov
stos
fwait
xor
mov
fistpl
xchg
push
into
pusha
or
shlb
sub
aaa
dec
adcl
aas
cmc
fadds
add
and
sbb
add
dec
mov
push
shl
jno
std
negl
mov
adc
or
shll
xchg
mov
cmp
dec
out
out
gs
mov
inc
cmp
xchg
adc
jbe
cmc
cs
test
jnp
rcrb
adc
subb
imul
jle
or
and
cmp
jnp
sti
pop
pop
mov
jne
int3
adc
loope
loope
fistpl
adc
inc
inc
lcall
dec
loope
mov
je
or
cmp
inc
jmp
in
shrl
dec
shrb
pop
test
mov
test
dec
aaa
mov
insb
adc
dec
aas
gs
dec
or
mov
repz
mov
imul
cltd
addl
loopne
cld
fcomps
cmp
pop
push
jecxz
test
or
decl
popf
clc
nop
clc
insb
ds
jg
pop
cmp
jecxz
bound
lods
loopne
xchg
nop
sbb
sub
stc
pop
inc
adc
insb
outsl
adc
or
out
pop
sahf
out
mov
cmp
and
pop
mov
cli
push
and
cmp
adc
xor
dec
sbb
cli
adc
pop
imul
mov
cmp
sub
adc
mov
mov
es
jl
mov
jns
and
dec
xor
cmc
fs
jno
add
jb
mov
push
push
ja
test
shl
adc
shr
insl
mov
jb
push
into
cmp
scas
mov
xchg
pushf
repz
mov
mov
adc
aam
xorb
adc
ret
sbb
xchg
sub
push
dec
lahf
xchg
jg
mov
movsb
and
mov
leave
jecxz
and
lds
push
rclb
xchg
sub
shlb
mov
int3
fimull
ret
clc
or
push
iret
addl
push
mov
push
in
in
sub
aaa
nop
jecxz
fs
test
popa
in
mov
test
stos
lcall
lahf
mov
or
fdivp
imul
jo
iret
aas
cli
jecxz
test
or
jp
mov
inc
insb
ljmp
inc
shrl
loop
sbb
jae
and
jl
add
decb
xchg
pop
xor
rorb
adc
pop
popa
or
sbb
mov
addl
mov
dec
das
xchg
sarl
xlat
in
inc
sbb
lea
popl
pop
sti
xchg
shlb
push
ficompl
adc
dec
int3
jmp
ljmp
dec
pop
push
sub
divb
jg
pop
daa
inc
insb
push
xor
jecxz
insb
imul
fisttpll
jp
orl
rcll
push
push
sub
ds
sub
scas
mov
lret
push
imulb
hlt
and
fcmovne
sbbl
add
ja
call
dec
iret
ja
pop
jmp
add
push
mov
lcall
xchg
cmp
add
out
add
aam
dec
push
pop
or
mov
cmpsb
sbb
inc
or
pop
lcall
pop
gs
ret
sarb
jp
sbb
popa
ja
adc
mov
sbb
loope
out
pop
add
xchg
cmpsb
notl
xchg
in
and
andb
into
dec
ja
push
icebp
cmc
dec
dec
add
inc
out
divb
mov
push
mov
pusha
imul
push
test
scas
mov
imul
mov
or
inc
jge
negb
inc
std
fbstp
cmp
int
cmpsb
mov
push
mov
sbb
dec
sub
xor
adc
pop
fimuls
dec
icebp
dec
sbb
pop
jns
inc
adc
bound
out
mov
call
cmc
arpl
adc
das
bound
dec
jns
mov
subb
mov
jg
imul
dec
mov
mov
ret
pop
sub
mov
das
xchg
imul
popf
into
adc
adc
aaa
add
or
orb
lock
mov
cltd
sti
cmc
fmull
rcl
pop
inc
xchg
cmp
inc
pop
shlb
into
mov
ljmp
or
icebp
cmp
shrb
cmp
mov
sub
jae
out
nop
sbb
cmpsb
clc
pop
and
xor
dec
and
xchg
xchg
mov
cli
scas
testl
push
and
mov
test
call
mov
mov
out
test
aaa
pop
cmp
lock
into
mov
pop
pusha
inc
daa
subb
sahf
inc
pop
mov
movsl
add
dec
imulb
decb
jb
fstps
jp
cmpsl
ja
out
popa
mov
cmp
mov
mov
movsl
aam
inc
and
movb
jno
aas
cmpsl
icebp
shr
movsl
and
mov
jge
sub
push
ffreep
jle
or
adc
je
rclb
jg
pop
loop
sub
je
fmulp
in
push
rolb
loop
mov
jmp
aam
mov
adcl
sbb
dec
sub
adc
pop
test
dec
dec
sbb
loop
ljmp
jae
js
ficompl
xchg
cbtw
add
and
push
dec
sbb
leave
xchg
push
inc
scas
xor
repnz
fstpl
jg
rcrb
pop
int
xchg
and
mov
mov
sub
int3
mov
sbb
xchg
cmp
push
mov
add
mov
sbb
jecxz
or
rorl
fsubs
sub
pop
popa
push
ret
in
mov
lret
sbb
hlt
dec
push
jns
fnstcw
loop
repz
rolb
js
cwtl
shll
std
mov
aaa
pop
pop
lods
add
mov
sbb
pushf
cmpsb
imul
pop
or
fdivs
sub
cmpsb
hlt
or
int
into
shr
dec
scas
mov
jp
and
repz
pop
lahf
or
int3
nop
dec
movsb
xchg
cmp
adc
mov
push
out
and
mov
push
sbb
imul
les
shrb
mov
jae
ficomps
scas
stos
enter
or
int
enter
fucomi
js
stos
mov
xchg
in
push
inc
dec
jo
sbb
cmpsb
xchg
addr16
adc
adc
nop
jno
adc
mov
stc
jae
xor
in
es
pop
lcall
sbb
outsl
jno
push
sbb
inc
rcrb
rol
xchg
dec
dec
cmpsl
dec
mov
fstpl
adc
pop
mov
stos
lret
mov
mov
adc
add
mov
ret
push
out
sti
push
adcl
push
aam
mov
ljmp
int
lcall
fildll
xchg
sub
jb
stos
movsl
add
cmp
mov
mov
jbe
imul
jne
cli
mov
enter
adc
sbb
iret
rcr
daa
outsb
pop
filds
cmp
sbb
std
out
test
or
pushf
inc
mov
mov
lret
les
bound
fisubl
rol
daa
cmp
in
or
xchg
je
fistps
xor
add
rolb
ret
filds
cmc
jnp
out
sub
xlat
in
loope
call
xchg
std
inc
shrl
jb
pop
icebp
xchg
cmp
cmc
dec
xor
cmp
je
pop
and
or
inc
and
push
out
movsb
xchg
mov
test
mov
jb
daa
inc
add
cld
aas
push
scas
addr16
and
push
cmp
fstpt
or
lds
cld
les
jmp
outsl
lahf
xor
jne
jne
ret
sub
test
xor
and
jo
cmc
data16
xlat
data16
or
dec
xchg
push
push
xchg
lea
or
xor
dec
mov
fistps
xor
int3
sbb
pop
pop
xchg
adcl
pop
add
das
int3
xchg
xchg
push
and
sti
mov
or
ret
jbe
pop
movsb
iret
sets
jl
scas
aaa
pop
cmpsb
and
imul
inc
mov
inc
xor
mov
sub
add
mov
test
add
fyl2xp1
adc
push
testl
and
adc
jecxz
push
dec
or
add
mov
xchg
mov
pushf
mov
push
mov
xchg
out
dec
or
add
lock
mov
movsl
inc
dec
inc
ss
scas
loopne
push
scas
and
mov
stos
xchg
mov
rcrb
fs
dec
sub
dec
sub
popa
inc
fmuls
adc
cld
aas
loop
sub
add
xor
jg
ss
fiadds
mov
sbb
lea
lock
ficomps
push
mov
test
mov
jns
cmpsb
push
jg
notb
mov
outsb
or
add
jle
jl
xchg
jno
fnstcw
mov
xchg
flds
dec
jg
jmp
pop
jb
in
cmp
clc
sbb
pop
or
mov
out
lahf
inc
pop
cmp
fwait
mov
aad
or
paddq
int3
adc
das
lcall
sub
inc
cmp
ss
mov
mov
daa
push
ds
push
popf
inc
fisttpl
xchg
cpuid
dec
adc
mov
stos
fs
inc
pop
push
test
mov
push
shr
fistpll
sub
mov
sub
and
bound
sarl
ljmp
das
fisttpl
jnp
les
mov
push
jno
popf
mov
shrb
mov
inc
repz
lods
push
pusha
into
out
mov
rol
insl
dec
test
add
gs
cmpsl
int
test
fistl
mull
je
push
leave
js
outsl
rcll
inc
mov
mov
dec
jno
xchg
inc
or
push
popf
stc
stc
inc
xor
test
adc
xchg
je
sub
xor
mov
idivb
negb
leave
inc
dec
pop
ljmp
xor
cld
mov
sbb
adc
lcall
shll
mov
outsb
cmp
outsb
add
insl
aaa
cli
jge
jo
ljmp
mov
jge
mov
sub
pop
mov
in
out
dec
adc
sbb
arpl
inc
pop
inc
mov
rcrb
adc
inc
pop
add
ss
sub
fwait
daa
jge
out
xchg
lret
rcrb
fdivrs
stc
jno
gs
mov
dec
mov
test
pop
shlb
xchg
and
popf
pop
lret
or
dec
push
out
push
lret
or
out
pushf
xor
xchg
lret
mov
pop
or
cltd
lret
vmwrite
inc
je
sub
jo
pop
outsl
test
scas
cmp
dec
cs
xor
or
les
and
pop
xor
xchg
lods
fsubrl
sar
notb
mov
popa
jg
or
dec
mov
test
divl
dec
inc
lret
scas
dec
rolb
leave
test
sbb
inc
xor
adc
inc
cmp
add
mov
cmp
sbb
lret
push
mulb
movb
clc
fwait
adc
mov
mov
sbb
push
sti
fmull
addr16
ret
lcall
dec
out
ss
aas
push
jg
cmpl
lods
idivl
lock
int3
pop
out
js
mov
xchg
in
sahf
xchg
imul
fst
sub
mov
insl
lods
das
mov
in
repz
xchg
xchg
jecxz
dec
push
daa
into
cmp
ret
xlat
incb
stos
lds
ja
mov
lcall
sbb
stos
rcrb
lods
xchg
incl
push
and
cmpsb
das
cld
sub
ficompl
pop
out
shr
stc
cwtl
mov
stc
data16
mov
lret
or
sti
push
mov
ret
lea
adc
mov
sub
mov
push
pop
cmp
std
popa
adc
repz
mov
out
int
pop
aaa
roll
inc
or
push
mov
and
fdivp
loope
xor
xor
cld
pop
les
cmp
pop
cmp
adc
inc
jb
aad
mov
add
lock
movsb
cmp
or
sbb
test
mov
or
push
mov
or
rolb
mov
adc
das
int3
mov
lods
jns
clc
sbbl
add
mov
cmpsb
out
lds
cmp
xor
cmc
push
fldl
sub
push
push
repnz
push
sub
and
or
popf
leave
xlat
sbb
pushf
pop
sar
icebp
fs
cmp
hlt
shll
mov
stc
gs
repnz
mov
lea
xor
adc
popf
cmp
adc
mov
insb
xchg
mov
popa
sbb
fnsave
daa
fisubrl
jbe
xchg
mov
adc
sbb
mov
fs
clc
in
mov
pop
xchg
cmp
push
enter
inc
dec
mov
xchg
out
imul
and
mov
pop
pusha
push
loope
xchg
cmpsl
outsl
js
jnp
into
or
and
and
add
jb
push
xchg
adc
or
pop
popa
add
stos
test
lcall
inc
mov
sbb
out
dec
ret
dec
daa
mov
fisttps
das
fstps
xrelease
jns
sbbl
add
mov
sarb
mov
or
mov
fistpl
mov
jns
xchg
je
pop
loop
push
pop
jb
push
out
xor
jmp
test
or
icebp
adc
and
clc
push
nop
and
in
imul
test
sbb
cwtl
ffreep
or
scas
insl
push
enter
cmp
lret
adc
xchg
sarb
or
sbb
movsl
mov
ret
and
je
sar
in
xchg
lcall
rorl
test
fwait
xor
push
xchg
and
fwait
lods
mov
dec
and
in
pushf
ljmp
sub
adc
or
in
pop
fstpl
push
cmp
cld
pusha
icebp
out
mov
stos
push
push
dec
sbb
mov
sub
out
insb
aas
sbb
icebp
stos
adc
loop
in
xchg
sub
sbb
out
sbb
repnz
leave
test
sub
lret
subl
pop
repz
jge
popf
jge
cld
mov
mov
and
and
adc
dec
scas
cmp
add
loop
push
mov
cltd
imul
jecxz
aad
xlat
pop
inc
xor
or
mov
mov
mov
xor
pop
xchg
pop
jns
jge
xchg
outsb
jmp
jae
dec
iret
subb
sub
dec
dec
mov
dec
in
in
fistpl
pop
test
pop
dec
int
jle
dec
dec
dec
xchg
xchg
int
mov
int3
aas
add
cli
je
sbb
fwait
repz
jg
inc
xchg
push
cli
incl
fisubrl
dec
push
sbb
adc
pusha
sub
dec
ss
pop
push
or
bnd
pop
cmp
jecxz
cmp
insl
adc
cld
imul
dec
into
popf
in
adc
or
add
or
xchg
cmp
pop
cld
repz
out
mov
add
icebp
lcall
jecxz
or
jnp
loop
xchg
testb
stos
ds
sbb
fs
mov
xor
insb
fimull
dec
fsubs
mov
inc
xlat
or
stc
dec
cmp
xchg
dec
adc
rcrb
and
ret
je
das
pop
inc
popa
xchg
je
sub
ret
cmp
push
cmp
jp
gs
or
mov
mov
add
bound
loopne
jne
fwait
movl
xor
addr16
scas
xchg
scas
addr16
pop
out
pop
or
adc
inc
jle
push
js
int
pop
fdivrs
ret
jno
sbb
repz
int
aad
jp
dec
add
add
push
cli
out
cmp
mov
cmpsb
or
mov
out
das
jns
mov
pop
jbe
addb
pop
inc
int3
loop
cli
sub
mov
xorl
sbb
aaa
mov
mov
jae
pop
shll
push
cmp
aaa
in
mov
jo
lcall
in
into
icebp
mov
inc
mov
cmc
ljmp
xchg
lahf
aam
inc
cmp
ret
jo
sbbb
std
les
cmp
icebp
test
into
mov
jbe
scas
push
mov
cltd
jp
call
sub
and
movsb
jo
fcom
jb
mov
dec
test
cmc
mov
lret
dec
pusha
outsb
inc
lret
cmp
daa
call
mov
repnz
xor
pop
scas
dec
in
pop
and
jae
and
mov
cmp
imul
push
dec
dec
test
mov
leave
arpl
ds
cmp
push
aam
adc
lret
ret
sbb
push
es
ja
in
lods
add
dec
add
mov
fldl
jnp
or
cltd
enter
push
sub
push
inc
xchg
outsw
punpcklwd
pop
inc
mov
aad
decl
lahf
pop
pushl
cli
push
cmpb
ss
shll
and
dec
xchg
test
pop
jnp
cmpsb
push
arpl
rcrl
jle
pop
push
inc
xchg
repnz
mov
jp
jns
imul
jne
mov
es
daa
dec
fxam
dec
mov
leave
decb
jno
mov
call
xchg
mov
loop
add
add
repz
les
fcomip
push
popf
pop
jle
inc
mov
rorb
sbb
mov
xchg
or
movsl
int3
repnz
xor
dec
lock
dec
jmp
dec
xchg
or
lods
aam
push
jmp
ds
rorb
inc
hlt
out
sbb
pusha
mov
lea
lcall
mov
stc
jecxz
lods
daa
js
mov
jnp
mov
out
fcos
orl
jns
mov
cmpsl
jns,pt
mov
cli
push
js
aad
leave
sbb
imul
inc
xchg
sti
pop
test
mov
jecxz
pop
in
inc
jge
jl
push
fs
sti
dec
push
mov
xchg
or
scas
inc
test
bnd
fcmovne
pop
sbb
jle
std
fistps
rorl
sbb
push
popl
lcall
in
insl
jo
xor
out
insb
test
shrb
or
cmc
sub
pop
inc
mov
shll
pop
faddl
lods
jns
mov
push
sbb
xchg
loope
mov
mov
jp
repnz
or
les
testb
shlb
hlt
js
ror
dec
push
imul
mov
adc
lahf
out
sbb
popf
xor
mov
shl
neg
ss
mov
in
push
pop
push
or
punpckhwd
and
movsb
icebp
leave
out
push
sbb
fcomps
fstps
adc
pop
sti
or
xchg
or
dec
mov
insb
fstpt
aaa
nop
cmp
sbb
inc
push
adc
add
jno
sbb
arpl
cmp
mov
pop
cmc
je
jb
lea
divb
push
out
movsb
fistl
in
repz
movsb
std
adc
add
shlb
aam
jmp
adcb
jl
mov
jge
mov
push
pop
ja
mov
aam
loope
jo
inc
stos
mov
jae
jg
cmp
in
cltd
xchg
jo
mov
inc
clc
into
insl
pop
mov
std
push
inc
ss
das
sub
sub
inc
sti
int3
sbb
add
xchg
mov
cmpsl
mov
mov
loope
pop
adc
fldcw
cwtl
data16
mov
scas
les
mov
add
arpl
insb
cmp
jnp
mov
xchg
adc
xchg
jp
test
push
inc
pop
movl
cld
adc
cmc
rorb
cmp
fisttpll
cmpsl
or
popa
lds
ss
jne
jecxz
aam
decl
inc
mov
jnp
adc
mov
mov
pop
push
repz
sub
mov
aam
jge
fdiv
mov
sbb
pop
jmp
and
jg
sub
jmp
mov
cli
jne
dec
xor
loop
mov
add
mov
jo
aas
and
popa
dec
cli
and
cmpb
xchg
in
pop
sbb
cmp
adc
pop
or
push
mov
aas
mov
insl
cmpl
xor
mov
xchg
mov
xchg
test
or
cld
inc
mov
imul
fnstcw
sub
or
or
sbb
lea
jle
aad
mov
add
jmp
imul
fcmovbe
dec
js
iret
shrb
test
push
scas
push
and
sub
xor
add
out
mov
and
cwtl
push
push
insb
lock
aad
mov
jp
mov
into
mov
dec
or
xor
inc
push
jle
ret
sub
popf
repz
enter
pop
add
cmp
rol
aam
ja
push
ret
leave
and
cltd
lahf
mov
jno
repz
xchg
mov
rol
jnp
mov
jmp
std
fadd
aad
mov
int
mov
in
aam
pop
mov
inc
negb
sbb
push
xchg
pushf
je
sbb
push
pop
fwait
dec
or
cmpsl
sbb
aad
jmp
xor
mov
in
inc
mov
lock
out
movsl
inc
sub
push
scas
test
push
mov
ret
jnp
xchg
addb
int3
ret
rcrb
cltd
dec
mov
jle
fs
popf
aad
xchg
mov
orb
jne
out
data16
mov
out
add
lods
cltd
push
call
and
adcb
cmp
rcll
inc
rcrl
xchg
adc
ljmp
xor
push
cld
lahf
mov
fisttpll
mov
stos
stos
mov
fnstcw
frstor
xchg
jnp
ret
xor
daa
lcall
in
ja
add
pop
and
test
adc
fldl
jne
push
test
aam
dec
pop
pop
sbb
mov
adc
enter
mov
xor
negl
ja
jmp
sbb
mov
ljmp
and
mov
or
andb
dec
dec
ficoml
or
mov
push
add
test
xchg
shlb
push
cmpsl
shl
jae
sub
xor
sbb
fcoml
fnstcw
test
insl
and
popa
not
lods
ljmp
inc
add
cmp
in
call
mov
adc
inc
or
lds
jb
mov
jb
test
mov
in
push
leave
add
xchg
lods
mov
shrl
pop
adc
sub
cmpsl
es
sbb
sub
add
das
sbb
mov
call
xchg
push
adc
leave
jbe
je
push
push
movsb
cmp
mov
sub
jg
xor
fs
dec
lret
mov
adc
pushf
das
xchg
mov
mov
sbb
xorl
cli
adc
js
repz
sbb
xor
call
pop
lret
xchg
xchg
mov
and
xchg
cltd
mov
and
stc
data16
push
ds
ret
xor
push
mov
in
cmpl
and
xchg
arpl
xor
cmp
out
push
pop
push
xlat
xchg
int
movsl
mov
xchg
mov
loope
cmp
orl
pop
and
xor
fs
aad
popa
sbb
sbb
xor
adc
mov
jecxz
jg
aas
sti
popf
xor
push
sbb
xchg
inc
ficoms
lea
xor
mov
pushf
cmpb
out
cld
sub
and
lcall
sub
fisttpll
push
out
mov
mov
adc
xchg
push
xchg
out
sbb
ret
popa
sar
mov
lret
cmpsb
add
cmp
dec
add
cltd
lahf
mov
pop
bound
decb
int3
inc
lcall
mov
int3
sbb
cmc
test
sti
testb
xlat
xor
cmp
adc
cmc
jbe
cmpsl
ret
push
aas
rclb
ja
pop
sub
dec
loop
mov
dec
loope
cmp
andl
mov
or
push
push
pusha
mov
imul
adc
xchg
add
movsb
cmp
out
stc
mov
dec
test
ret
lods
add
mov
fadds
loope
adcb
jg
es
sti
in
mov
or
push
imul
push
mov
sarl
imul
push
mov
in
stos
cmc
pusha
add
fcmovu
call
out
inc
movsb
test
jo
mov
clc
pop
lods
aaa
cmp
fcmovu
xchg
dec
mov
cmp
add
orl
fucomp
aas
add
and
mov
lret
stos
loopne
ss
push
add
lcall
xor
stos
insl
mov
pop
in
pop
fisubs
mov
fwait
inc
push
sub
in
cmp
jl
inc
aas
xor
es
add
ret
push
lods
test
xor
stc
lahf
andl
aaa
sub
mov
mov
fists
adc
jmp
stos
mov
xchg
pop
mov
push
push
mov
mov
mov
clc
add
cli
xor
out
sub
mov
xchg
fidivl
mov
les
add
in
into
sahf
adc
mov
movsb
adc
mov
cmp
rolb
in
and
mov
cmp
and
mov
cmp
fnstenv
das
sbb
xchg
push
hlt
dec
ret
or
stos
dec
push
cmp
adc
fisubrs
sub
pop
daa
xor
jnp
lret
xchg
pushf
btc
dec
sti
cwtl
xor
mov
pop
lahf
xor
sbb
dec
sbb
xchg
push
test
fmul
add
lock
sbb
je
push
addr16
es
pop
xchg
dec
xor
cmp
cltd
and
xlat
in
loope
adc
je
pop
repnz
jmp
inc
pusha
int3
scas
mov
fmull
add
jl
mov
push
cwtl
dec
mov
fidivl
mov
mov
fwait
daa
outsl
int3
or
out
mov
mov
sub
add
or
dec
sbb
or
jle
push
enter
xchg
pop
cld
insb
lods
lahf
and
dec
inc
add
lret
lods
stos
loope
and
adc
jle
mulb
or
cmpsb
outsl
xchg
push
xchg
push
adc
out
mov
in
inc
scas
movsl
or
popa
push
pusha
filds
les
pop
popl
mov
mov
sbb
loop
add
mov
loopne
sbb
lcall
inc
xchg
xchg
push
gs
lds
mov
mov
aad
mov
mov
mov
test
fcomip
fldenv
scas
inc
loopne
xchg
push
xchg
and
imul
and
roll
ljmp
xchg
lea
pop
mov
mov
mov
dec
shll
pop
dec
sbb
xchg
daa
mov
jl
push
fistps
adcl
sbb
mov
add
test
dec
mov
test
jecxz
push
rcrb
and
dec
cmp
int3
repz
mov
lahf
jl
push
pop
jge
dec
dec
add
inc
cld
sbb
mov
mov
jo
es
fcompl
adc
dec
push
lahf
lock
cmp
adc
inc
pop
sub
or
lret
outsl
sbb
inc
dec
ljmp
xchg
and
adc
mov
mov
jno
scas
mov
ljmp
daa
into
popf
inc
xchg
sbb
mov
xor
clc
sbb
mov
stc
jbe
mov
mulb
pop
push
mov
lret
sti
adc
mov
leave
xlat
js
or
ss
fsubl
popa
scas
mov
dec
in
les
bound
pop
dec
clc
insl
pop
mov
cld
test
mov
insl
cli
dec
mov
and
add
in
jmp
enter
lret
sbb
cs
imul
mov
aad
push
mov
outsl
imull
jo
lock
pop
icebp
nop
or
jp
dec
clc
and
gs
xchg
cs
int
sub
outsl
ds
mov
push
movsb
cmp
xor
mov
je
xchg
sti
mov
pusha
mov
jecxz
fsubrs
js
sahf
dec
xor
push
gs
sar
das
xchg
fwait
sbb
daa
insb
test
fists
xchg
outsl
xchg
rcll
out
dec
mov
pop
sbb
insb
fiadds
lea
mov
shrb
test
movsb
in
fsub
cmp
jns
sar
js
scas
mov
lret
gs
mov
ja
lahf
sbb
fisubs
jp
xlat
push
and
adc
mov
mov
jns
dec
sbb
and
pop
jnp
ds
subl
fwait
xchg
lret
adc
mov
push
clc
push
inc
aam
xchg
pop
nop
or
jns
fwait
dec
xor
sub
repnz
cmpsb
jns
addl
sub
lods
inc
fiadds
pop
je
fs
mov
jl
sbb
popf
mov
mov
push
scas
das
push
ljmp
and
syscall
mov
outsb
pusha
add
addr16
and
in
add
rep
js
jp
mov
dec
in
push
les
out
or
sti
dec
adc
repz
xchg
mov
add
sti
scas
lahf
pop
lea
pushf
mov
shrb
push
dec
cmp
outsl
std
fistl
icebp
mov
push
cmp
sbb
loop
push
lahf
cmpb
daa
loopne
push
lods
and
push
outsb
in
or
movsb
bound
xchg
fdivrs
leave
lods
push
push
aam
rcrb
adc
xor
test
sbb
jmp
repz
sbb
adc
fcoml
pop
hlt
rcrb
xchg
test
xor
inc
or
stos
mov
repnz
std
es
cwtl
ljmp
int
push
lea
pop
add
jo
in
jb
mov
mov
sarl
test
jmp
xchg
xor
mov
roll
mov
lahf
pop
adc
inc
jp
mov
and
add
push
inc
jmp
mov
mov
pop
xorb
mull
js
loopne
rcr
out
rol
into
add
insb
pushl
mov
fisttpll
jge
scas
frstpm(287
cmp
mov
inc
xchg
inc
push
xor
mov
jns
xor
jb
add
popf
in
mov
and
cmp
mov
dec
imulb
je
arpl
inc
movsl
pushf
xlat
sub
lret
inc
add
mov
cmpsb
mov
inc
xlat
mov
je
pop
outsl
ljmp
dec
ds
stc
icebp
sbb
or
fwait
cmp
fs
mov
es
cmp
mov
inc
pop
sbb
jle
pop
mov
push
ja
sbb
dec
data16
add
mov
loop
aas
sbb
mov
cmp
daa
arpl
repz
mov
jecxz
into
xchg
mov
mov
adc
out
sub
mov
cmpsb
jl
imul
cmp
pop
mov
push
mov
jbe
repnz
fsubs
outsl
lcall
dec
test
aaa
lock
dec
mov
test
mov
fucomip
mov
mov
mov
mov
lock
cmp
jae
stos
lods
das
jne
mov
inc
mov
pusha
and
outsb
leave
add
xchg
mov
push
out
add
push
xorb
dec
mov
shlb
or
add
lea
pusha
or
add
fnsave
fdivr
das
sar
hlt
fisubs
mov
xchg
fwait
xchg
dec
ret
sub
inc
add
mov
add
rol
loop
dec
ret
pop
jge
pop
push
sbb
insb
or
pusha
lret
push
mov
sub
out
add
inc
jecxz
data16
daa
sbb
cmp
stos
fldl
and
clc
icebp
mov
adc
dec
mov
xorl
and
inc
dec
xlat
out
jge
jns
adc
sub
mov
lock
add
fistl
stos
inc
pop
out
ljmp
xor
repz
loopne
mov
sti
mov
or
pushf
dec
outsb
ret
mov
sub
mov
jle
or
jp
add
stos
xorl
shl
sti
pop
xor
xor
dec
mov
or
clc
jmp
push
lret
jmp
cmpsb
sti
test
pop
pop
popf
scas
jmp
test
dec
and
cltd
test
add
add
es
sbb
jbe
in
mov
out
lods
sub
pop
sbb
fmul
mov
lea
orb
jnp
add
sete
xchg
je
xor
fwait
mov
aam
inc
mov
mov
fnstenv
sahf
inc
enter
aad
aas
subl
pop
lods
cld
addr16
xlat
mov
inc
or
imul
out
mov
sarl
jp
repz
repnz
in
push
cmp
mov
movsb
daa
stc
or
mov
pop
add
and
fistpl
pop
or
shl
adc
enter
xor
cmpl
divl
push
adc
xor
out
je
addr16
xor
mov
js
out
or
imul
stc
gs
jl
icebp
in
lcall
pop
jmp
cld
jl
cli
cmp
cli
test
mov
rorb
mov
scas
inc
sub
sbb
shlb
mov
sbb
sbb
es
lcall
mov
and
mov
enter
adc
mov
stos
stos
pop
cmp
cmp
adc
xor
scas
lret
in
lods
and
inc
bound
mov
cld
mov
adc
sub
cmp
mov
jbe
adc
inc
into
or
mov
adc
sub
mov
test
or
mov
and
insb
mov
sahf
jl
mov
mov
push
fsubs
and
scas
shrl
stos
sti
scas
dec
add
scas
in
popa
in
idivl
mov
xor
add
adc
or
cli
and
dec
comiss
cmp
mov
shll
xchg
or
mov
mov
dec
in
dec
ret
cmp
scas
xchg
push
cld
mov
dec
push
pop
xchg
and
kmovw
hlt
xor
cmpsb
cmpsb
gs
mov
ds
mov
mov
cmp
cmpsb
xor
mov
mov
jb
dec
jg
push
lds
push
jno
mov
aam
ljmp
dec
inc
and
in
dec
jmp
lcall
lret
add
shrl
add
jp
lcall
pop
add
lret
pop
sub
shl
mov
arpl
addl
in
jnp
mov
xchg
call
push
inc
cmc
pop
inc
pop
mov
int3
pop
imul
stos
dec
push
roll
pop
mov
push
es
mov
and
test
aad
ds
stos
jmp
mov
jle
or
ret
push
xchg
in
dec
mov
dec
and
inc
addl
dec
aad
icebp
and
repz
sti
bound
fiadds
insb
jae
xor
in
xchg
inc
mov
gs
cmp
and
repnz
stos
and
pop
lock
pop
xchg
sbb
jl
push
and
aad
popf
mov
les
outsl
mov
pop
inc
dec
lods
and
sub
out
mov
sub
mov
mov
fistpll
cmp
sub
sub
loope
mov
xchg
icebp
sbb
aad
loopne
jae
notb
loope
sbb
and
sub
xlat
dec
js
mov
ljmp
rcl
inc
jge
mov
mov
and
inc
in
js
xor
jmp
shrb
fmuls
popa
and
in
lods
pop
xchg
fmull
inc
push
aad
lods
jp
addr16
push
jo
pop
rol
shl
sub
addl
mov
add
push
outsl
mov
lods
insl
sub
mov
cwtl
push
push
jecxz
insb
addr16
shr
ret
loope
inc
fs
xor
or
dec
cmp
gs
pop
cmpsl
jle
mov
rorl
test
add
cli
cmp
mov
sarb
pop
repz
inc
outsb
cmp
xor
stos
push
loop
scas
in
jge
dec
xor
push
xchg
shll
mov
mov
xor
dec
imul
movl
mov
sbb
repz
xor
mov
cmp
sbb
lret
and
out
sbb
xchg
sti
dec
loop
mov
pop
inc
push
stc
aad
cmp
jns
call
push
cmp
stc
and
in
aas
mov
sub
dec
push
xor
mov
shlb
jns
cmc
fistl
xor
fisubrs
push
mov
into
loop
xchg
movsl
fidivrl
enter
pushf
std
push
add
fnsave
aaa
mov
lret
cmp
repnz
clc
push
leave
mov
or
mov
test
test
and
cmp
fs
adc
ljmp
lea
or
dec
xor
imul
jl
das
push
xchg
xchg
jmp
dec
and
dec
imul
lret
xchg
fstpl
notl
jb
and
jbe
add
jo
add
scas
fnstsw
push
jbe
dec
jns
test
imul
or
and
adc
orl
mov
mov
xor
dec
mov
dec
mov
aad
loope
dec
stos
adc
xlat
xchg
mov
in
jo
xor
mov
cmp
mov
jecxz
mov
and
cltd
insb
scas
pop
aas
pushf
push
lret
aas
in
xchg
ja
dec
sbb
mov
aad
rol
pop
jle
ds
das
mov
fistpl
xchg
pop
mov
ret
xor
scas
dec
mov
pushf
jae
fnstenv
es
cmc
pop
sub
push
push
adc
sub
in
pop
movsb
js
xchg
sbb
mov
dec
add
cmp
jnp
out
push
adc
stos
jge
jp
jnp
sub
and
mov
dec
sbb
jae
pushf
loope
js
inc
test
jbe
mov
cmc
hlt
js
bnd
jo
or
js
dec
outsb
xchg
jg
and
sub
or
fs
and
cwtl
es
arpl
jno
push
jg
sahf
loope
mov
lds
mov
mul
xor
mov
in
xchg
out
inc
or
out
pushf
mov
or
addb
xchg
inc
xor
mull
xchg
insl
movsb
fwait
pop
xchg
adc
cwtl
add
imul
ds
in
enter
sbb
hlt
addb
stc
xor
jns
jns
cmpsb
outsl
out
or
test
adc
sbb
xchg
jg
mov
push
xor
das
sub
xchg
sub
dec
testl
nop
insl
js
sbb
lods
lcall
int3
dec
or
imul
cwtl
and
add
loopne
lods
fsub
lret
test
icebp
mov
mov
int3
outsl
std
fistps
cmc
inc
xchg
daa
repnz
xchg
inc
out
cli
cmpsl
mov
in
mov
leave
and
mov
nop
jb
dec
fwait
fs
mov
mov
ficomps
imul
adc
jno
inc
pushf
insb
mov
lods
fisttpll
lods
inc
mov
sbb
and
js
cwtl
movsb
mov
push
mov
cmp
jb
test
pop
sub
pop
incl
add
inc
orl
pop
pop
mov
or
mov
mov
cmp
sbb
cltd
cld
rolb
orb
push
push
xor
pop
sbb
mov
lcall
xchg
xor
mov
enter
icebp
mov
xor
ss
jl
icebp
bound
pop
jno
in
mov
ss
arpl
test
pop
or
negb
idivl
jl
inc
pop
out
clc
minps
and
xchg
xor
mov
and
sub
outsl
mov
out
loopne
xor
push
inc
cs
xchg
lds
lahf
mov
push
stc
mov
loopne
sub
movsl
fwait
int3
sbb
popf
jmp
lret
aad
xor
adc
jecxz
cmp
out
push
cwtl
dec
add
push
out
lds
lods
sarl
cwtl
lods
aad
ja
mov
add
bnd
arpl
adc
dec
fiadds
pop
repz
decl
xor
dec
cwtl
mov
xor
sub
mov
sub
out
sbb
outsb
outsl
push
cmp
out
mov
pop
test
inc
ds
xchg
ret
enter
adc
xor
je
sub
push
mov
ret
les
mov
jnp
pop
shr
inc
xchg
push
in
pop
mov
cwtl
cmpsl
aam
les
xchg
test
pushl
sbb
sarb
jl
test
rorl
in
gs
jbe
jo
testb
sub
aam
and
lahf
andb
mov
loope
mov
addr16
and
mov
and
mov
jno
xor
jmp
scas
dec
in
in
push
sbb
jge
stos
pop
lds
test
pop
cmp
add
fimuls
test
cmpsb
sbb
jae
aam
popa
stos
lret
mov
testl
test
inc
jge
mov
mov
inc
and
dec
cwtl
andb
mov
imul
cmp
mov
enter
mov
in
cmc
fwait
sahf
sbb
iret
adcb
jbe
ja
xchg
outsl
leave
cmc
negl
cs
lods
cmp
test
fnstsw
pusha
loopne
lahf
push
lock
aam
shl
ret
adc
les
mov
les
lret
dec
out
pop
cld
arpl
cmpsb
call
cmpsb
shrb
xor
dec
fsubrl
mov
mov
in
push
mov
mov
stos
xchg
pushl
inc
pop
pop
sbb
dec
dec
bound
inc
xor
aam
add
push
movsb
lds
sarb
cmp
cmp
sub
xor
dec
sahf
out
gs
push
hlt
pop
insl
dec
pop
je
or
ja
clc
xor
sbb
test
and
and
test
pop
rcrb
aas
push
pop
mov
xchg
xchg
push
pop
xor
call
jno
xchg
and
roll
dec
adc
mov
add
aas
jp
loope
mov
xor
std
adc
adc
out
out
sbbl
imulb
lret
das
shll
jns
dec
movsl
nop
push
int
mov
mov
xchg
mov
cmp
mov
testl
ss
mov
insb
adc
cmpsl
push
clc
sarb
in
mov
test
rol
js
mov
pop
jae
je
mov
push
inc
js
add
mov
adc
xchg
jo
xchg
stc
inc
jge
mov
shl
push
jg
push
xchg
popf
xchg
mov
in
mov
sbb
aaa
lret
test
or
mov
lea
hlt
mov
orb
test
cmpb
lea
gs
fiadds
leave
call
mov
pop
sti
repz
stos
cmpl
xlat
mov
and
dec
rcll
add
push
add
and
jg
and
rcr
sar
cld
xchg
gs
and
into
push
adcb
push
jns
nop
adc
cmp
mov
into
aad
es
mov
shrb
cwtl
pusha
pop
mov
and
test
imul
cli
lcall
mov
sub
xor
iret
test
and
aam
dec
hlt
aaa
out
mov
mov
push
push
insl
sar
scas
stos
out
sbb
pop
dec
dec
movsb
xchg
xchg
push
fidivrl
lods
sub
es
repz
std
sub
ret
subl
fidivrs
mov
mov
sub
das
jmp
adc
imul
mov
or
aaa
dec
lock
sbb
mov
jbe
xor
shrb
scas
aaa
lds
cld
fwait
pop
cmpl
inc
adc
out
or
dec
pop
stos
add
filds
and
int
leave
sub
sub
mov
fildl
xchg
push
out
cs
and
scas
arpl
jmp
push
movsl
loopne
xor
cli
pop
stos
iret
pop
pop
jne
push
les
sti
lret
jne
or
jl
dec
into
mov
rcrb
inc
lret
sahf
in
push
outsb
pop
out
dec
xor
mov
jne
fldenv
pushf
fwait
pushf
inc
xchg
xchg
dec
mov
inc
ror
into
push
into
push
jl
add
pop
lret
shll
mov
cwtl
enter
gs
push
arpl
lahf
and
icebp
sti
jmp
mov
aaa
test
mov
lds
out
daa
mov
pop
mull
push
and
jbe
ret
ret
lods
dec
mov
fwait
xor
data16
add
pop
mov
add
fistl
jne
push
xor
addr16
rcr
inc
lock
push
mov
call
out
jge
mov
imul
or
sub
movsl
stc
sbb
daa
sub
clc
mov
in
adc
test
shl
ss
lahf
pop
jnp
loop
lret
dec
repz
into
rolb
movsl
jle
adc
cmp
mov
sti
jp
fwait
mov
les
mov
lcall
pop
sti
jo
jmp
hlt
jb
push
ja
je
cltd
js
cmp
addr16
xchg
sahf
stc
dec
adcl
lds
pushf
dec
lds
ret
pop
std
add
stos
or
call
push
lea
lahf
mov
mov
push
addr16
xchg
jb
sbb
sub
or
push
stos
push
sti
xlat
mov
movsb
pusha
lret
repz
loope
mov
lahf
test
lea
mov
jbe
adc
imul
jge
xor
xor
cli
jae
pop
add
cmp
cld
xchg
aas
ret
cmp
xchg
pop
jns
sub
sti
out
stos
test
popa
jmp
ja
jne
jmp
vpmulhw
mov
jge
lods
xchg
xchg
or
jo
stos
test
xchg
in
jb
repz
lock
xchg
adc
sahf
xchg
ds
stos
in
mov
ss
jno
sbb
in
jb
adc
pop
cld
aaa
mov
xor
or
push
imul
sbb
cmpsl
fdivs
shrl
lcall
out
sbb
cmpps
add
add
mov
sbb
mov
stos
in
adc
xchg
mov
add
mov
mov
mov
int
cli
out
leave
jp
bnd
sbb
cmc
push
lods
repz
cmp
dec
or
cmp
cmpsl
add
mov
mov
jae
inc
xchg
adc
sub
aad
sbb
pusha
mov
subb
lret
out
iret
xchg
inc
sti
jne,pn
jg
ds
mov
shr
repnz
jno
sub
loop
jmp
ret
in
or
inc
call
cs
mov
sbb
lret
jne
imul
jo
push
ds
test
xchg
mov
add
inc
inc
xchg
and
jmp
mov
fdivr
notb
xor
aas
adc
shlb
xlat
sub
jb
scas
rcr
test
inc
cld
jae
pushaw
mov
dec
cmpsb
adcl
xor
or
mov
movsb
in
jl
xchg
lock
dec
jae
push
dec
pusha
push
add
les
push
dec
pop
or
mov
daa
cmpsb
adc
mov
cmp
pop
sub
incl
add
leave
inc
mov
push
sahf
inc
insb
fstl
cmp
cmp
mov
dec
insb
push
aaa
lret
sub
fdivr
push
pop
cmp
xchg
xlat
fistpll
dec
ds
imul
xchg
xchg
lods
mov
add
cmpsb
cmpsb
push
xchg
pop
and
ljmp
mov
adc
pop
jne
rcr
push
lods
or
dec
shl
adc
push
fs
xor
mov
ficoms
mov
nop
cmpsb
sub
add
mov
cmpl
mov
dec
xchg
loopne
pop
pop
mov
imul
and
sbb
inc
fs
xlat
testl
jecxz
dec
dec
push
sub
inc
jnp
dec
lret
push
push
xchg
mov
call
or
sbb
sub
rcll
sub
aas
cmpsb
aaa
leave
jnp
mov
xchg
in
lds
xlat
scas
mov
xor
ficompl
loope,pn
dec
fwait
jmp
jne
imul
xchg
fs
aad
nop
xchg
ret
push
ds
and
xchg
daa
hlt
push
ljmp
or
xor
in
inc
sbb
fnstsw
sti
sub
jg
sbb
leave
inc
cltd
mov
out
stos
gs
loop
ja
cld
fdiv
cmpsl
jae
mov
or
and
lahf
jno
aas
call
mov
fidivs
and
cli
inc
fwait
xor
xchg
cmp
and
lret
pushf
sbb
push
jg
xchg
dec
lcall
ljmp
nop
sbb
subps
jl
adc
mov
mov
jb
xchg
push
xor
adc
pop
dec
mov
icebp
lds
roll
sub
bound
or
pushf
jb
xchg
add
xchg
decl
sub
in
or
jae
mov
sub
loop
pop
dec
call
out
out
mov
dec
mov
test
sbb
je
into
jne
movsb
push
scas
xchg
test
mov
sub
adc
sbb
xchg
push
lods
pop
fs
mov
loopne
mov
dec
pop
test
cmpsb
inc
or
add
cltd
mov
bound
dec
hlt
sub
fbld
aas
cs
mov
sbbb
mov
dec
aas
arpl
test
inc
stc
push
iret
fucomp
enter
dec
test
inc
dec
incb
push
xchg
inc
xor
leave
daa
mov
test
insl
ljmp
hlt
aaa
jb
or
loope
cmc
js
inc
movsb
jp
dec
adc
or
push
insl
dec
aam
jmp
pop
ljmp
stos
mov
out
jecxz
pop
mov
add
push
fiadds
lret
add
pop
jo
paddb
xor
push
fcomi
add
into
jb
data16
and
inc
sti
jecxz
xchg
ljmp
lret
inc
jmp
xchg
loopne
mov
xor
xor
and
mov
push
or
jmp
or
dec
stos
sti
pop
pop
or
sbb
in
and
cmp
inc
sub
push
push
pop
push
aad
in
sbb
lahf
dec
iret
push
sub
inc
lret
xor
fists
or
cmpsb
pop
sti
jmp
inc
insl
mov
movb
and
cmpsl
test
scas
xor
dec
cltd
adc
daa
lods
or
and
test
repnz
iret
out
xor
xchg
rcrb
xchg
xor
sub
push
ret
mov
scas
jmp
cmpsl
jb
int
sub
in
xchg
sub
mov
pushf
dec
jl
jge
inc
fs
xchg
pusha
bound
lods
pop
xchg
jnp
leave
int3
out
sub
mov
gs
fs
jnp
mov
loopne
mov
fwait
movsl
shlb
inc
loop
and
lods
sub
hlt
imul
add
xor
jo
in
mov
lret
shll
insl
xor
jb
jle
subb
adc
movsl
cmpsl
pop
mov
les
sbb
repnz
jmp
int3
es
mov
scas
out
dec
lahf
scas
sti
out
ds
jns
adc
xchg
pop
les
iret
das
ja
cmp
addr16
push
imul
icebp
and
push
and
rcll
mov
mov
cwtl
les
popa
dec
add
adc
mov
loop
xor
inc
loopne
sbb
into
mov
xor
inc
adc
add
cmp
je
lds
pop
insb
pushf
mov
pop
movl
out
dec
rclb
xchg
push
adc
xchg
xchg
ss
inc
push
pusha
lret
arpl
adc
xchg
ljmp
or
insb
jmp
or
pop
add
ja
mov
cld
mov
or
xor
jns
lea
repz
xlat
rep
push
cmp
fcmove
mov
push
cli
inc
lahf
fisttpll
dec
pop
icebp
mov
pushf
inc
adc
add
add
stc
mov
testb
fnsave
mov
fs
lods
push
mov
jbe
fildl
inc
mov
and
repz
adc
shlb
add
pop
mov
pop
mov
and
inc
cmpsl
mov
push
xor
fistl
jecxz
push
jns
inc
jge
loop
adc
int3
push
out
sbb
jne
movsb
test
fistps
mov
lds
imul
pusha
bound
pushf
cmp
testl
mov
lods
fwait
sti
mov
jl
push
jge
jno
add
scas
insl
nop
sbb
mov
mov
jecxz
jae
test
xorl
cmp
pop
sub
mov
icebp
rcrb
lods
mov
and
stc
ret
repz
inc
pop
pop
pop
scas
cmp
pop
xchg
jge
adc
sbb
push
jmp
mov
dec
mov
sbb
add
loop
call
xchg
pop
and
inc
xor
test
mov
mov
rorb
jae
stos
daa
or
cwtl
push
sub
mov
cli
leave
sub
sub
adc
adc
add
loopne
jmp
dec
fwait
sub
and
xchg
jg
call
jle
jl
add
les
jno
sbb
test
leave
jmp
sbb
jno
mov
rcr
jecxz
xor
fstl
push
jb
sub
add
push
sub
int
out
mov
leave
mov
add
pop
insl
subl
sti
mov
mov
pop
jmp
or
xor
xchg
shrl
jb
push
and
dec
andb
sub
inc
cmp
mov
mov
pop
outsl
in
ljmp
mov
jl
or
in
and
jge
cmp
xor
cs
lds
ret
cmp
dec
jmp
jbe
ds
daa
ret
scas
es
mov
mov
xchg
into
sarl
cmpsb
arpl
fdivs
cmp
xchg
add
xchg
and
push
arpl
data16
aaa
clc
test
scas
and
sub
push
pop
ss
pop
pop
sub
aam
cmp
iret
add
ficomps
add
adc
dec
adc
dec
push
mov
mov
andb
sbb
adc
sbb
mov
rclb
loope
pushf
fidivrl
inc
call
add
in
mov
bound
inc
fs
cmp
adc
adc
and
jp
add
push
test
icebp
inc
outsb
shrl
in
arpl
xor
fs
lgdtl
roll
xlat
lods
sub
xchg
push
rorb
cmp
xor
sahf
sbb
cltd
je
cmp
pop
leave
cwtl
scas
mov
cwtl
add
fimull
jp
outsb
pop
mov
arpl
sub
fistpl
fsubrs
arpl
mov
mov
dec
nop
mov
ss
lcall
adcb
imul
sbbb
es
nop
mov
xor
mov
pop
inc
push
loop
roll
cmp
mov
push
cmp
pop
subb
pop
cmp
and
jae
dec
mov
or
dec
mov
add
xchg
xor
and
inc
add
add
fcoms
sbb
jmp
dec
cmpb
roll
cmpsb
mov
mov
mov
daa
xchg
rcll
xchg
negb
or
das
push
push
pop
jbe
ljmp
mov
notb
and
out
ret
fwait
or
out
ret
xor
test
cmp
push
rcrl
mov
stos
or
mov
lret
inc
push
lea
dec
out
pop
jg
or
xor
in
inc
push
add
scas
pop
inc
pop
add
cmp
cmpsl
and
adc
or
movsb
stc
push
sub
cmp
repz
cmp
cmp
mov
pop
lods
mov
add
jmp
mov
faddl
test
jo
out
cmp
aas
leave
sbb
mov
mov
out
jnp
fisttps
jle
ds
mov
cmp
push
jl
insl
pushf
lea
and
rorb
xchg
push
in
outsl
mov
cltd
push
cmp
and
mov
in
fcomps
ret
or
test
cmp
push
loope
clc
fadds
pop
mov
sbb
out
xorl
cmpsl
and
jle
mov
jne
push
lret
std
jg
in
out
xchg
adc
push
mov
mov
xor
mov
adc
out
dec
stc
mov
rcll
rol
lods
push
ret
lea
inc
jp
sti
insl
jno
jns
gs
mov
cmpsl
mov
aas
jmp
nop
cmp
dec
scas
hlt
daa
push
add
mov
notb
inc
cmp
and
cmp
mov
sbb
push
jmp
fcom
jp
insb
lds
and
mov
andb
xor
int
lret
es
stos
imul
inc
sbb
fldenv
mov
repz
fmull
pop
shrl
stc
nop
add
dec
or
mov
cmp
clc
jl
iret
and
in
xchg
fsubrl
das
aad
cmc
jge
xchg
test
out
jae
pop
int3
aam
mov
addl
ficompl
test
pop
jge
outsl
in
or
stos
mov
jg
pushf
or
lds
dec
jge
jne
into
adc
jb
push
mov
push
and
stos
pop
and
sub
xor
addr16
xor
inc
add
mov
pop
cmc
sarl
iret
adc
ret
xchg
cmpsb
or
xchg
mov
cmpsl
dec
cmpsb
xor
push
aam
shlb
and
insb
sub
outsl
daa
daa
sub
mov
push
arpl
iret
xchg
ret
insb
pop
adc
and
repz
mov
xchg
jno
std
lcall
push
sbb
insl
pop
pop
add
fs
pop
sub
hlt
xchg
xchg
cwtl
cmp
sbb
push
movsb
push
mov
pop
xor
out
les
jns
jb
aas
mov
int3
xor
sub
mov
xchg
rcr
push
enter
cmpsl
push
cmp
inc
push
xchg
in
sahf
repnz
xchg
xchg
mov
dec
insb
lss
je
lahf
int3
sbb
js
sbb
cltd
mov
inc
cli
pusha
xchg
out
mov
fmuls
aam
push
pop
int
xchg
dec
shll
xchg
cld
inc
dec
shr
inc
xchg
mov
in
pop
out
mov
lea
jno
mov
mov
jmp
xchg
mov
jl
or
mov
xor
sub
xor
call
jmp
dec
sub
lods
jle
or
scas
bnd
adc
jb
or
and
mov
pop
inc
adc
clc
or
xor
in
inc
push
mov
xor
addb
fwait
push
ret
addr16
out
int
adc
loopne
arpl
mov
lahf
xor
je
mov
lret
scas
mov
imulb
cmpsl
mov
xchg
in
call
pop
sbb
xchg
xchg
pushf
mov
inc
pop
sbb
roll
repz
daa
pop
mov
loope
lahf
mov
rolb
cli
in
test
mov
js
jae
dec
lods
mov
repz
jnp
test
add
sar
jbe
and
xor
sarl
add
dec
xchg
jne
and
mov
jne
data16
jno
out
jecxz
or
repz
xor
lret
loope
cmpsb
dec
ljmp
xchg
insl
jno
dec
loop
xchg
js
into
ret
cmp
popl
xchg
or
js
push
icebp
mov
push
inc
push
out
movsb
pop
xchg
jl
add
fsubrl
mov
outsl
sub
out
inc
rcl
movsl
xor
mov
cmpsl
xchg
mov
sbb
pop
addr16
in
xchg
mov
shr
pop
leave
fldt
loopne
jne
jp
call
dec
xor
mov
rcll
jne
push
fcomps
push
das
xorl
or
sti
hlt
loopne
call
sarb
ret
xlat
dec
inc
mov
pushf
xor
ficompl
mov
je
dec
out
jp
push
mov
mov
and
stos
leave
push
cmc
pushf
cmpsb
sar
mov
sbb
outsl
sbb
insl
fdivl
lods
mov
rorb
imul
cmc
dec
add
ret
int3
sahf
test
sub
jmp
jg
push
pusha
cmp
mov
aaa
fists
or
pop
ret
cmp
cld
mov
sbb
imul
and
inc
in
push
and
shrb
mov
xchg
pop
and
push
mov
push
popa
inc
mov
clc
xor
jg
push
xor
movsb
rcll
std
gs
cmp
dec
lods
push
movsl
xchg
rcrl
cmpsl
and
test
mov
dec
leave
dec
out
popf
pop
leave
cmp
jle
psrlq
xor
lcall
arpl
sbb
xor
mov
in
imul
inc
mov
pusha
iret
popf
or
jno
test
stos
nop
andl
mov
push
test
cmp
stos
out
outsb
out
rcll
or
adc
jmp
add
and
pop
fs
add
in
cltd
pop
addr16
roll
cmp
xor
popf
ja
xchg
pushf
jo
movb
adc
adc
mov
out
sarb
jns
mov
and
jmp
jle
ss
setae
pop
mov
xchg
das
stc
rolb
stos
shl
adcl
push
outsb
push
fisubs
int
mov
and
jmp
push
pop
push
sti
dec
aas
icebp
cld
xor
sub
xor
fsubl
fwait
xchg
ret
mov
dec
insb
mov
pop
paddq
adc
xchg
aad
sti
or
xor
push
jge
xchg
call
inc
mov
mov
mov
sarl
xchg
testb
pop
scas
mov
daa
repz
sbb
sbb
mov
and
xlat
pop
shll
xchg
mov
jns
adc
jbe
rcrb
repnz
inc
cmp
mov
pusha
inc
data16
test
pusha
dec
rcll
pop
sub
inc
add
push
stos
adc
mov
xchg
dec
int
adc
add
mov
repz
jg
scas
pop
cli
jg
and
jle
mov
mov
das
cmc
pmulhw
push
adcl
into
jmp
mov
inc
xor
sahf
jae
call
sbb
imul
jg
cld
cmovb
lods
mov
add
xor
sub
scas
and
scas
xchg
fwait
pop
mov
iret
cmp
pop
mov
xor
imul
pop
adc
stc
mov
sbb
mov
xchg
mov
daa
lcall
shl
pop
push
mov
dec
jbe
cmp
dec
push
int3
clc
js
popa
lret
cltd
jmp
imul
mov
push
lret
lret
imul
push
lcall
jae
add
pop
aaa
pop
data16
xor
push
mov
jno
out
pop
loop
add
add
inc
in
in
xchg
and
cmpsl
sbb
sahf
push
add
repz
sub
fldl2t
dec
xchg
pushl
lcall
nop
xchg
add
test
gs
pop
dec
inc
dec
fisttpll
xchg
int
aaa
push
adc
and
test
mov
mov
dec
or
int3
jg
inc
pop
cli
or
test
or
in
sub
ss
or
adc
ljmp
shlb
inc
in
add
das
xor
aaa
and
mov
cli
cwtl
sub
ficoms
adc
cwtl
push
pop
sub
pop
dec
xor
xchg
fidivrl
pop
mov
mov
dec
sub
mov
outsl
movsl
and
xor
out
fistps
cmpsl
je
repnz
test
push
js
jge
add
loop
dec
dec
or
sbb
fisttpl
test
pop
btc
xor
mov
sub
stc
mov
neg
gs
and
mov
arpl
sbb
or
jnp
cmp
cmp
sub
xchg
mov
popf
pop
pushf
loope
in
jle
mov
aad
jbe
aas
xchg
mov
je
pusha
and
ds
daa
push
add
ss
insl
mov
push
mov
test
push
das
insb
cmp
das
shrl
inc
mov
icebp
lret
add
sub
mov
out
add
dec
sbb
dec
sub
in
jg
jp
and
jmp
adc
repnz
stos
lea
mov
adc
jle
ja
inc
pop
inc
mov
test
call
mov
das
push
pop
pusha
repnz
aad
ja
rcrb
popf
push
jnp
or
cmp
pushf
outsb
loope
and
push
ja
mov
mov
adc
ja
xchg
adc
outsb
mov
push
arpl
shlb
jo
mov
inc
push
aad
js
pop
dec
and
inc
xchg
pop
mov
call
mov
sub
mov
push
sbb
mov
xor
idiv
inc
and
loopne
jo
jmp
icebp
push
negl
xlat
xchg
unpckhps
adc
into
shrb
punpcklwd
cmp
idiv
aas
fwait
push
or
int
jne
jb
pushf
shrb
cli
jno
test
jecxz
cs
mov
mov
jge
mov
dec
sbb
mov
sbb
pop
push
popf
lret
xchg
mov
mov
add
adc
push
cmp
loopw
cmpsl
adc
outsl
int3
lods
pop
mov
jle
jnp
mov
stc
lahf
or
addb
jnp
and
mov
cmp
iret
inc
dec
dec
adc
lcall
jge
pop
insb
fcoml
mov
cli
leave
sbb
sub
pop
addl
dec
inc
repz
fistpll
add
stos
int3
lods
ljmp
fisubl
dec
jg
test
mov
rol
popf
mov
in
xor
inc
fcmove
mov
hlt
pop
es
sbb
adc
jb
and
loop
repnz
movl
push
rcl
fisttpll
add
dec
lea
ficoms
lods
mov
jmp
push
xor
adc
and
shll
xlat
add
orl
jno
hlt
aaa
out
fbld
or
cmc
sub
cmc
cmp
loop
jae
outsb
mov
add
movsb
lret
push
add
or
jno
dec
mov
inc
mov
mov
into
mov
fnstsw
pop
add
inc
sub
mov
jmp
push
cwtl
sbb
pusha
insl
push
test
fimull
xor
test
pop
fwait
inc
mov
int
cmc
dec
and
arpl
jp
filds
sub
ss
data16
out
xor
inc
cmp
outsb
sbb
ds
sub
xor
adc
jmp
xchg
cltd
lahf
cld
jbe
mov
mov
push
dec
dec
in
pop
inc
inc
xchg
or
pop
cli
inc
arpl
xchg
mov
ror
js
outsl
adc
addr16
sbb
or
pop
imul
push
push
jno
leave
mov
sub
sbb
popa
push
jge
repnz
pop
nop
push
sub
test
mov
mov
add
dec
faddp
lahf
pop
jmp
cmc
sub
pushf
test
add
dec
loop
rcll
ss
inc
mov
mov
loop
aad
cmc
loope
lock
xor
andb
jmp
adc
mov
add
push
in
mov
test
rol
pop
adc
iret
fnstcw
inc
mov
rclb
pop
jae
das
or
fwait
dec
es
loopne
push
mov
addl
insl
inc
dec
push
lcall
xor
mov
mov
push
jmp
xor
std
fldenv
jbe
in
inc
jl
add
push
inc
and
lahf
pop
xlat
xchg
stos
mov
imul
lods
mov
lret
inc
insb
fimuls
add
mov
mov
ret
mulb
push
movsl
hlt
ficomps
mov
mov
fldt
adc
xchg
jmp
cltd
nop
mov
ficomps
repz
lods
mov
push
movsl
dec
xor
stc
mov
arpl
jb
scas
and
xchg
aas
sti
jge
enter
adc
mov
jmp
lahf
sbb
mov
and
mov
add
xchg
or
nop
jge
cmp
cli
in
adc
and
out
lret
dec
mov
mov
ljmp
cmp
repnz
mov
testl
dec
sbb
lds
arpl
cmp
push
mov
leave
xchg
dec
push
mov
pop
add
jle
stos
out
xchg
mov
mov
iret
pop
sahf
and
in
jl
fcmovnu
mov
pushf
add
pop
mov
mov
xor
pop
aaa
out
add
lcall
scas
jne
je
cli
xchg
jne
xor
dec
lcall
jle
das
add
in
pop
push
lods
push
push
inc
sbb
mov
cmc
pop
movsb
bound
scas
bound
sub
call
cwtl
shlb
addb
fisubs
adc
ds
pop
mov
or
data16
lret
hlt
sub
in
das
cmpb
mov
fmuls
movsb
and
mov
push
and
push
sub
js
adc
pop
iret
pop
add
imul
shlb
shl
dec
lcall
sbb
and
scas
les
insb
stc
lret
pop
xchg
mov
dec
pop
daa
scas
xor
mov
orl
into
xor
mov
and
call
mov
popl
testl
mov
out
test
pop
mov
dec
push
or
add
add
cmp
jns
lret
mov
ljmp
or
pop
pop
aad
shll
rorl
mov
lods
pop
jp
mov
mov
fiaddl
xor
jns
jmp
add
jge
xor
inc
mov
cli
cmp
jl
jmp
sbbl
pop
mov
or
shll
mov
daa
pop
dec
out
dec
mov
clc
ljmp
cmpb
lret
xchg
pop
xchg
rolb
mov
jnp
xor
popf
mov
cmpsb
sbb
dec
pop
sub
mov
cmp
sbb
into
jp
int3
test
lret
mul
add
mov
hlt
pop
push
push
jae
and
aaa
out
jne
mov
add
xchg
fiadds
cmp
jp
inc
push
frstor
push
xor
jne
ror
in
sub
cmp
push
clc
setg
dec
roll
mov
or
add
lock
leave
push
stos
add
push
add
and
xchg
sti
jp
jge
dec
ljmp
imul
stos
sbb
push
dec
or
js
add
and
jo
cmp
loope
sub
movsb
in
inc
fistpl
popf
jg
jp
and
push
push
mov
inc
fwait
cmpsb
cmp
es
fwait
xchg
lea
inc
daa
out
shl
sub
mov
loopne
cwtl
loopne
xor
jns
fsubs
adc
arpl
loopne
movsb
es
addb
mov
ljmp
pop
cmc
test
xor
les
addr16
sub
icebp
pop
icebp
push
int3
xor
loopne
int3
xlat
sbbb
xchg
andb
ljmp
sbb
rclb
shll
sub
mov
sub
push
xchg
jne
or
inc
stc
xchg
dec
add
push
mov
push
je
sbb
adc
sahf
dec
jge
mov
gs
into
mov
add
pop
mov
jae
pshufw
loope
in
das
imul
mov
popa
pop
xlat
dec
jg
mov
xor
lret
int
and
inc
push
mov
iret
mov
std
add
and
cmp
mov
lods
cmp
mov
inc
fnstenv
sahf
stos
mov
stc
add
jle
fwait
mov
fisubrl
push
fdivrs
stos
xchg
add
negl
iret
xchg
inc
stos
lea
roll
insb
mov
int3
cld
outsl
or
xchg
jmp
mov
std
mov
push
dec
lds
fbld
mov
xchg
outsb
xchg
mov
inc
or
sbb
inc
roll
imul
loope
jl
mov
ror
loop
push
ret
out
sub
fildl
push
dec
mov
lods
aam
sub
mov
add
add
sub
xchg
cmp
mov
pushf
xchg
outsb
add
test
jne
push
outsl
mov
inc
icebp
and
cmovg
adc
push
lret
fistps
pop
push
pop
jg
jo
in
mov
pop
inc
cmp
jle
push
mov
cmp
mov
in
sub
rcr
cmp
mov
and
push
mov
cwtl
and
add
pop
adc
mov
and
pusha
mov
add
pop
and
fucom
inc
xchg
hlt
int3
jmp
sbb
cltd
repnz
jp
pop
or
leave
cmc
pop
lea
testb
test
scas
pusha
inc
adc
arpl
jp
cmpsb
pusha
xor
mov
add
mov
adc
sbb
inc
addr16
out
push
lret
pop
aam
pop
mov
pop
sub
lea
sub
sub
mov
ss
mov
xchg
dec
jecxz
sahf
mov
in
loope
or
mov
xchg
jmp
sahf
enter
xchg
fildl
cld
xchg
push
sub
cmp
shr
lock
xlat
lcall
pusha
sbb
xchg
and
pop
xor
jae
inc
ja
repz
push
xchg
paddusw
loop
in
and
arpl
stc
repnz
sub
sti
movsl
fdivr
ret
outsb
sub
arpl
out
push
push
jge
adc
mov
pop
dec
cld
je
into
scas
inc
dec
outsl
aam
pop
filds
mov
push
xchg
lock
sbb
xchg
xor
adc
movsb
lea
ret
in
sahf
lahf
push
dec
cli
enter
mov
ret
mov
sbb
ja
fnstcw
xchg
xchg
jmp
ljmp
in
xchg
xchg
cmp
inc
into
pop
leave
xchg
cli
cmp
adc
mov
mov
push
pop
dec
out
inc
mov
roll
xor
dec
adc
jmp
mov
pop
lcall
xchg
xor
movsl
ret
or
cmp
imul
adc
mov
addr16
or
imull
adc
pop
cmp
aam
sbb
jmp
fnsave
mov
out
cmp
push
test
cmpsb
rcrl
jl
cmp
and
ja
xchg
xor
jmp
cli
movzbl
sbb
lods
sarb
or
fs
mov
sbb
loope
xor
dec
inc
decl
pop
out
push
dec
sub
lcall
std
cmpsb
fimuls
into
inc
nop
push
in
add
or
or
xchg
insl
mov
lret
xor
hlt
and
cld
pop
movsl
fdivrp
inc
xchg
ljmp
and
lods
dec
lahf
sbb
cmp
mov
and
sarb
inc
mov
mov
fidivrs
jecxz
cmp
ret
shll
dec
test
std
mov
iret
sub
adc
test
ljmp
or
movsb
jne
xchg
mov
std
cli
and
mov
inc
lcall
inc
mov
sbb
ja
and
aaa
xlat
xorb
jns
and
lcall
sbb
cmpsb
lock
jge
je
inc
shrl
xchg
out
test
notl
xor
int3
cld
daa
cld
or
mov
add
pop
jno
pusha
call
je
push
test
mov
mov
lock
xor
xchg
cmp
outsb
adc
pop
ljmp
xchg
jle
inc
mov
xchg
test
xchg
dec
aaa
sbb
mov
shrb
into
stos
loopne
movsl
sbbb
sar
sub
pop
cmp
jnp
sub
fisttps
adc
adc
repz
dec
iret
inc
dec
lock
adc
sbb
imul
adc
jle
or
insb
movsl
popa
movsb
and
imul
outsb
outsl
setle
mov
xchg
cmp
cmp
or
add
dec
jno
lds
mov
cltd
test
aad
jge
aaa
cmpsl
cmp
cmp
jb
ljmp
daa
imul
nop
addr16
jmp
in
out
xchg
sub
adc
jp
shrl
scas
cmp
inc
in
movhps
push
cmc
mov
lahf
scas
xchg
stc
pop
cmc
push
cmpsb
aaa
mov
subb
outsb
push
mov
repnz
sub
movsb
cmp
fldl
add
test
sub
shll
ja
gs
mov
repnz
cwtl
mov
mov
xorl
and
in
loopne
mov
jp
push
push
push
ljmp
dec
cmovg
outsl
add
push
xchg
fcompl
jge
push
sub
lret
out
sbb
jae
and
mov
mov
data16
arpl
push
mov
and
fisttpl
pop
xor
test
shlb
std
sarb
mov
mov
stos
jecxz
mov
jne
push
or
jbe
add
add
sbb
test
insb
or
in
jb
ds
loope
cmpsb
arpl
jecxz
xor
aas
fisubs
push
adc
int3
add
push
sbb
cmp
cli
adc
repz
jae
mov
outsb
dec
adc
dec
push
push
add
pop
sbb
inc
mov
aas
inc
gs
rclb
sahf
stos
insb
or
and
xchg
outsb
enter
mov
adc
sub
pop
stos
ja
les
dec
jge
adc
xchg
stc
stos
es
cwtl
aaa
lret
mov
lret
js
adc
push
scas
adc
or
andb
sahf
in
lcall
dec
fildll
fstl
sti
jl
movsl
mov
dec
pop
popa
dec
xorl
stc
add
xchg
movb
imul
jge
add
sbb
pop
lret
dec
movsb
mov
mov
loopne
aad
inc
addr16
cmpsl
pushf
pmuludq
sti
lret
push
fwait
int3
or
sar
int
jno
mov
int
pop
lret
mov
in
xor
mov
mov
mov
lds
lahf
es
mov
push
dec
out
sbb
imul
test
adc
shll
and
clc
out
xor
adc
arpl
shll
call
ret
subl
stos
fistpll
call
xchg
cmp
cwtl
ss
mov
adc
sub
push
cwtl
inc
jge
push
jle
imul
les
pop
dec
aad
mov
sub
mov
xchg
push
sub
xchg
push
sbb
cmp
jnp
add
adc
cmc
xlat
jmp
imul
aad
fmul
sub
les
rep
add
lods
add
add
cmp
fildll
gs
pushf
jns
push
inc
pop
pop
jge
mov
lret
pop
add
xor
or
dec
ljmp
stc
xchg
fisubrs
xchg
subl
lahf
cwtl
jns
cs
xchg
call
mov
or
cmpsb
cld
stc
loope
cmp
push
xchg
add
pop
and
mov
fldenv
mov
shlb
dec
faddl
pop
pop
pop
cmp
jae
mov
cmp
idivb
out
pop
jae
and
dec
scas
fxch
mov
push
sub
mov
lcall
lahf
stos
push
imul
enter
sub
mov
and
popa
rcll
inc
stos
mov
in
hlt
int3
int3
call
adc
pop
aad
inc
jne
loope
inc
xchg
sub
stc
not
imul
outsb
mov
add
inc
and
push
insb
test
gs
xor
dec
pop
test
aad
test
sar
bound
ja
js
mov
shrl
data16
jo
ds
iret
pushf
xor
mov
mov
sbb
shll
rep
pop
mov
femms
inc
test
test
movsl
clc
sub
push
or
or
sub
imul
add
cmpsl
add
cmp
dec
xor
mov
push
jg
test
repnz
cmc
cmp
jl
aam
dec
dec
dec
int3
out
jo
dec
js,pt
inc
add
mov
je
mov
outsb
dec
inc
js
cmp
or
mov
dec
mov
sub
leave
arpl
xor
and
push
sbb
mov
test
or
and
scas
lret
orb
push
lret
xchg
mov
mov
push
sub
in
cmpsl
unpckhps
sbb
or
jns
or
in
push
aaa
jae
jge
mov
insb
dec
mov
inc
addr16
add
mov
cld
ljmp
out
pusha
fcoms
loopne
adc
and
mov
inc
xchg
xor
jmp
lock
jbe
lds
jno
lret
jmp
sub
call
insl
leave
leave
xor
mov
hlt
mov
insb
lea
aam
subl
sbb
cli
cltd
daa
pop
or
inc
mov
aaa
inc
loop
in
inc
push
and
sbb
sub
jae
jg
push
mov
mov
icebp
mov
arpl
sbb
js
mov
stos
add
stos
data16
lds
inc
push
lock
sbb
adc
mov
push
mov
loopne
push
in
sub
inc
dec
xchg
xor
dec
inc
jns
push
jecxz
popa
sbb
movsw
fstps
int3
add
or
pop
cmp
xlat
xor
popa
cli
adc
movsl
fwait
mov
hlt
movsb
xor
sbb
test
jle
inc
mov
mov
clc
sbb
mov
cld
and
out
xchg
xor
xchg
test
xor
in
jmp
aas
cmp
sub
imul
mov
mov
test
loope
loop
cmpsb
xlat
sahf
dec
lret
sti
sbb
mov
pop
xchg
push
adc
fwait
xchg
inc
repz
ss
cld
clc
adc
mov
pusha
movsb
in
pushf
cmp
add
ljmp
pop
fwait
dec
inc
mov
xchg
push
xchg
int3
mov
mov
xchg
cmp
dec
out
xor
lods
out
cmpsb
pop
xor
push
adc
jp
icebp
aaa
mov
ror
lret
stos
into
addb
jle
mov
fldl
arpl
push
mov
add
bound
or
inc
int3
dec
outsl
jbe
fdivrp
adc
push
and
cmp
int
dec
cs
out
loopne
adc
out
pop
push
stos
pop
mov
je
aas
mov
stc
repz
push
repz
inc
aam
cld
out
or
inc
mov
dec
jl
int3
sub
test
xchg
sub
fiaddl
lret
sbb
mov
addr16
jbe
sbb
in
lods
test
sub
jl
fsubr
leave
jecxz
pusha
mov
cmc
fidivs
xlat
aas
mov
cli
cmp
sbb
stos
push
mov
sbb
cmpsb
push
lock
mov
xor
jae
and
inc
xchg
adc
jp
or
xchg
ret
cltd
test
mov
mov
xchg
dec
jge
jp
rorl
push
repz
mov
enter
pusha
sub
ja
insl
sbb
inc
inc
mov
push
icebp
addr16
adc
pusha
aas
les
xor
jmp
icebp
xchg
lret
xor
stos
arpl
inc
out
nop
popa
jns
add
pop
mov
pop
sub
push
sbb
xor
lods
push
mov
decl
lret
mov
cmp
push
imull
addr16
sbb
cld
lds
leave
call
popf
adc
mov
scas
cmp
sub
add
stc
and
stos
icebp
arpl
lea
push
jbe
jmp
btr
jmp
adc
mov
ret
mov
cld
push
loope
insl
xchg
xchg
and
ja
push
sarl
incl
pop
add
jno
xor
lds
mov
ret
scas
mov
cltd
shl
pusha
mov
ja
xor
adc
fisubl
mov
mov
psubq
repz
je
push
adc
inc
cmp
mov
add
mov
adc
xchg
lock
fs
rcrb
fsubl
jp
in
sbbb
mov
notb
scas
mov
stc
dec
push
xchg
nop
mov
mov
xor
cmp
push
daa
dec
pop
push
jmp
pusha
test
aaa
xchg
std
xchg
dec
aam
mov
xchg
xor
or
ja
popa
cld
out
inc
mov
imul
lret
out
mov
pop
adc
and
lret
loopne
xchg
jb
xchg
inc
push
xchg
out
arpl
cmp
sbb
mov
paddusb
and
js
xchg
out
ret
popf
sbbl
lods
gs
scas
cmpsl
fwait
mov
xor
insb
xchg
fwait
inc
adc
sbb
mov
push
test
jbe
inc
test
jno
xor
mov
inc
stc
xchg
data16
sbb
sub
adc
cli
lahf
cmovs
cmpsb
jge
lret
xchg
xchg
gs
inc
loop
stos
mov
jg
mov
xchg
in
inc
jns
mov
test
mov
mov
cwtl
das
inc
mov
jne
outsb
ficoms
rcrl
adc
push
cwtl
xchg
xor
call
mov
adc
outsl
into
or
cmp
dec
inc
mov
stc
mov
rcrl
sbb
mov
dec
mov
outsb
pop
test
mov
and
into
aam
ficoml
inc
dec
xor
fsubs
stc
push
ja
sbb
xor
popa
mov
jecxz
mov
imul
repz
push
inc
cwtl
rclb
dec
xlat
inc
push
or
in
xlat
test
jns
sbb
ret
aad
sub
ret
daa
push
push
adc
rol
cltd
adc
add
loopne
idiv
fdivl
pop
int
jmp
ljmp
cltd
imul
jg
push
mov
mov
pop
sbb
push
pop
ret
dec
and
mov
iret
repz
setle
lret
pusha
ja
pop
outsl
daa
aaa
aas
pop
xchg
bt
xor
or
cmp
cmpsl
cld
mov
fst
mov
clc
sub
lea
mov
mov
sub
fstps
xchg
fwait
ds
movsl
xor
xchg
push
add
xor
sbb
lods
sub
mov
add
xchg
lds
sub
cmp
pop
dec
inc
pop
es
cmp
lcall
pop
jno
add
pop
xchg
sbb
into
or
les
dec
cmp
cmpsl
rcrl
fstl
gs
xchg
inc
dec
call
les
mov
mov
push
add
inc
test
xchg
pop
mov
lods
sbb
scas
insb
sub
mov
cwtl
or
lcall
or
jge
xor
or
seta
in
ss
xchg
and
cli
psllw
rolb
mov
jno
and
scas
push
mov
cmpb
je
lods
sbb
inc
dec
adc
or
stc
adc
mov
mov
lock
rcrb
mov
cmp
or
fsts
mov
push
or
mov
mov
test
cmc
mov
pop
shll
decb
pop
ficoml
divl
xchg
cmpsl
xchg
outsl
push
ret
js
jb
imul
rcrb
dec
lea
and
push
pop
in
add
cld
add
ret
ud2
hlt
sub
shl
hlt
inc
scas
mov
push
push
push
mov
push
cmpsl
pop
xor
mov
mov
gs
aaa
jno
fcom
mov
sub
mov
mov
shlb
mov
outsl
in
dec
cmc
adc
jae
hlt
lods
xchg
fs
outsb
int3
cltd
sbb
jno
outsb
add
insl
in
pop
add
xchg
push
lds
inc
xor
popa
cmpsl
sti
pop
loopne
pop
hlt
jns
leave
mov
mov
popf
lret
jge
mov
stos
push
addr16
aam
add
sub
jmp
dec
sbb
out
dec
sbb
add
push
fwait
xor
lock
lock
push
mov
push
sbb
pop
fistps
movsb
jnp
fimull
lcall
sub
cmp
mov
lock
mov
xchg
scas
jnp
jb
dec
xor
nop
je
and
xor
lret
hlt
shl
jne
pop
xor
cmc
dec
fdivrl
mov
mov
leave
shr
jno
pop
bound
xor
sbb
cwtl
xchg
cli
dec
inc
xor
rorb
jb
adc
mov
in
pushf
pop
jl
mov
btc
and
rcll
xlat
mov
or
jle
pop
test
mov
pop
mov
fiadds
pop
in
lods
mov
mov
repz
add
xor
mov
pop
sub
inc
xchg
dec
fs
js
aam
mov
and
inc
lods
in
and
dec
push
repz
add
xchg
and
fisttpll
and
call
xchg
aaa
mov
ds
call
jo
fdivrs
or
mov
icebp
and
fwait
cmpsl
push
lods
pushf
sbb
loopne
sub
dec
jle
stc
cmp
scas
xor
ds
xchg
push
call
bound
lret
outsl
enter
cli
pop
xlat
loope
aam
sub
xor
sub
or
push
test
lret
stc
lock
popf
sbb
aam
addr16
sub
stos
adc
shlb
js
add
push
mov
xchg
dec
icebp
add
xchg
cmc
pop
negb
aam
or
adc
sahf
repnz
jg
leave
movsl
dec
mov
bsr
cltd
or
push
test
aaa
sub
dec
dec
pop
in
dec
xor
jmp
xchg
mov
pop
mov
inc
mov
pop
es
push
loope
mov
icebp
call
mov
lods
test
fmul
xchg
push
mov
xchg
aaa
mov
fwait
mov
cmp
ds
xor
daa
in
aam
test
mov
fstps
cmc
jp
sub
xor
mov
xor
mov
cmpsl
andl
xor
int
mov
fists
mov
adc
popf
popf
fstpt
mov
jno
es
mov
xchg
aad
sub
cld
fadds
push
dec
test
inc
add
repnz
xor
pop
and
or
jle
cmp
jmp
mov
mov
push
jl
pop
push
xor
cmp
jnp
imul
cmpb
ljmp
hlt
ret
xlat
cmp
mov
add
int3
sub
das
sbb
adc
rcrb
push
orb
fbld
out
jo
aaa
pop
loope
testl
cmp
dec
dec
in
pop
je
mov
inc
mov
sub
dec
inc
in
push
xor
dec
add
sbb
or
pop
cwtl
push
sbb
and
pop
repz
xchg
movsl
push
push
out
cmp
les
cmp
dec
outsl
divb
out
sub
sub
push
imul
shlb
sbb
out
sbb
inc
scas
cmpb
or
in
repnz
mov
pop
inc
dec
dec
incl
lea
std
sbb
sbb
popa
sbb
lret
pop
repz
movsb
inc
in
int3
fwait
cmpl
sbb
cmp
test
lods
dec
add
arpl
add
data16
and
imul
stc
jg
or
je
loope
and
jmp
push
testb
ss
mov
and
sysenter
sub
mov
fidivrs
mov
mov
or
iret
js
xorb
lahf
add
mov
movsl
daa
in
fiaddl
in
repnz
sti
pop
xor
pop
mov
mov
repz
es
scas
mov
and
insb
push
jecxz
les
mov
ja
and
js
dec
stos
shrl
add
cmp
dec
sbb
adc
les
or
test
mov
mov
rorb
stos
xchg
icebp
stos
xor
outsb
mov
mov
mov
pushf
adc
push
sub
test
ljmp
xchg
add
aas
jmp
inc
pop
sti
lock
leave
xor
push
pushf
negl
jae
cmp
sbb
pop
jmp
lea
jb
xchg
inc
xchg
xchg
lock
fyl2xp1
dec
pop
test
je
mov
arpl
in
enter
inc
and
inc
enter
jge
lods
clc
mov
sub
jb
and
sahf
loopne
sbb
jmp
push
cmp
setg
test
jne
divl
test
leave
adc
push
xor
add
xor
dec
mov
icebp
mov
hlt
xchg
cmp
push
mov
js
xchg
stc
fs
cmc
imul
scas
cmp
lahf
es
jg
repz
test
mov
jl
pop
inc
stc
outsb
shll
or
inc
int
bound
inc
stc
aam
mov
jecxz
test
inc
adc
adc
arpl
jns
mov
sbb
xor
shll
xchg
pop
mov
cwtl
andl
daa
cmp
out
mov
movsb
cmpsl
cmp
into
mov
jg
inc
inc
dec
inc
sbb
scas
dec
out
mov
lcall
es
mov
ds
out
sub
inc
cmp
inc
cld
inc
inc
and
sbb
dec
ljmp
loop
and
add
sbb
jl
or
adc
sub
mov
cmpsl
andb
pop
iret
cmp
push
sbb
ss
pop
jae
lods
pushf
out
adc
xchg
xlat
mov
movsl
sub
add
sbb
push
je
in
outsl
ds
push
inc
mov
inc
dec
fs
mov
jl
push
push
lahf
mov
jg
inc
inc
out
and
inc
add
mov
fmuls
xor
in
mov
fistps
ret
mov
ljmp
inc
sbb
arpl
in
sbb
mov
jp
inc
dec
and
mov
shll
or
inc
push
sbb
add
out
leave
mov
pop
or
sub
add
add
ret
mov
xchg
add
and
fstl
fdivrs
fnstcw
leave
into
into
push
inc
andl
sti
or
cmp
and
cltd
adcb
lock
test
and
xchg
push
cld
mov
sub
sub
imul
out
push
push
loop
mov
mov
scas
inc
xchg
popa
mov
sub
push
or
out
repnz
lcall
cmp
pop
or
mov
movsb
or
push
dec
mov
push
call
insb
fs
sub
mov
rorb
fabs
iret
pop
sub
mov
shll
int3
inc
jae
rcll
cmpsb
gs
jae
jecxz
and
add
add
add
push
inc
and
dec
icebp
roll
cmp
inc
dec
out
add
xchg
push
cmp
xor
xchg
jmp
ret
cmp
das
mov
into
sbb
imul
scas
cmpsb
push
and
js
adc
repz
mov
mov
mov
inc
movsb
xchg
xor
enter
dec
adc
dec
jae
mov
aaa
ret
fs
sub
rcr
insb
add
stos
aam
imul
insl
pop
jnp
dec
lock
test
sbb
pop
loopne
movl
aam
movsl
arpl
sbbl
mov
jnp
dec
cld
mov
add
or
mov
dec
cmp
xor
je
fiaddl
push
lret
xchg
sub
sbb
aam
addr16
sub
and
je
dec
mov
movsl
je
stos
inc
dec
sti
sti
jp
cmpsl
int3
jno
lea
sub
dec
mov
in
jmp
jg
movsb
lods
lcall
inc
pop
imul
out
shl
das
mov
and
lret
adc
gs
mov
ljmp
jecxz
cmc
and
add
cmp
cmpsl
sub
pop
add
jno
sub
mov
stos
mov
cmp
adc
jb
dec
mov
addl
jmp
xchg
push
jle
and
test
outsb
mov
loope
enter
adc
leave
jno
scas
sub
inc
xor
push
gs
adc
lret
sbb
shrb
test
daa
jae
dec
sbb
idivb
ss
movsl
mov
mov
hlt
movsb
xchg
repnz
pop
hlt
gs
pop
jae
int3
jb
lret
outsb
addl
mov
jge
ret
negl
xor
nop
dec
stos
jne
lods
out
mov
aam
andl
mov
inc
sahf
jno
cmpsl
push
mov
sub
fwait
test
add
loope
adc
incl
mov
pop
dec
sub
push
adc
xchg
fisubs
mov
mov
dec
xlat
bound
adc
adc
add
mov
fstps
fiaddl
mov
cmp
ss
fwait
cmp
shlb
mov
in
push
gs
sub
sbbl
xor
sbb
and
mov
fs
xchg
movsl
mov
in
mov
push
in
add
popf
ds
adc
testb
repz
cmp
sbb
push
int3
loope
scas
mov
and
test
ljmp
adc
xor
jge
daa
push
push
mov
jecxz
lds
jp
loopne
or
xchg
lret
fcompl
xor
shlb
xchg
sub
call
push
lods
fisubrs
ret
jp
sarl
inc
insl
sbbl
dec
push
mov
push
sub
imul
xorl
add
ja
sub
lds
in
cmp
testb
add
inc
addr16
xor
dec
push
fstpl
hlt
cltd
push
es
sahf
mov
cmpb
mov
add
mov
mov
test
jp
out
xor
and
add
movsb
mov
jnp
mov
mov
iret
xchg
cmp
scas
pop
or
xor
jle
push
cs
sbb
push
mov
sub
xchg
mov
pop
inc
add
push
lahf
sub
pusha
adc
repnz
cmp
clc
test
jg
push
push
cmpl
jno
mov
pop
adc
imul
imul
imul
jbe
lahf
push
mov
das
insb
or
addr16
add
nop
scas
sub
stc
jp
leave
mov
rol
and
lock
and
sbb
inc
jmp
xchg
cmp
jl
fadds
ss
call
xlat
mov
dec
jge
add
aas
inc
daa
jo
add
mov
negl
jl
and
add
xor
popa
mov
repz
mov
ss
jp
or
loop
faddl
orb
fiaddl
sti
sbb
xorl
or
js
jne
out
jns
inc
add
mov
pop
or
push
mov
jmp
or
icebp
mov
ss
mov
cmpsl
push
and
or
lahf
jb
mov
in
dec
sbb
call
je
addr16
cmpsb
scas
push
in
or
ret
test
jmp
aaa
mov
push
mov
cmp
adc
cmp
stc
push
push
out
test
stos
lret
mov
out
adc
das
push
adc
xchg
insb
xchg
mov
add
xor
or
lahf
pop
addb
sti
jne
cltd
inc
scas
inc
repz
ja
pop
mov
cli
dec
sbb
pop
jl
stc
and
lods
dec
adc
sbb
dec
pop
aam
out
push
jno
jmp
add
mov
ss
inc
dec
mov
scas
adc
jae
push
test
scas
push
mov
rol
std
into
jle
add
or
push
test
ret
lcall
lahf
xchg
loope
mov
adc
xchg
loopne
inc
scas
xchg
icebp
fwait
aas
xchg
in
sahf
test
mov
ret
sbb
xchg
lock
cs
jle
mull
push
sbb
in
aas
imul
dec
cmp
ret
lcall
push
push
mov
or
outsb
push
mov
clc
adc
pop
adc
push
xor
mov
fcmove
mov
cmp
nop
xchg
pop
gs
stc
fcomps
sbb
xchg
adc
shlb
mov
fwait
sbb
cmp
add
aas
xlat
add
push
add
jnp
and
xor
xchg
test
out
pop
clc
cs
lcall
test
lahf
stc
jge
inc
lds
ljmp
and
sub
call
aaa
int
sbb
adc
fildl
add
fnsave
add
adc
insl
pusha
ja
popf
cmp
iret
sbb
ret
sub
orb
leave
fnsave
jecxz
shll
inc
jns
mov
jmp
iret
mov
adc
dec
mov
sub
aam
jae
cwtl
pop
pop
hlt
jl
adc
sbb
out
ret
sub
enter
call
cwtl
adc
lahf
pusha
loopne
popa
imul
stos
cmc
clc
add
dec
push
or
jnp
xchg
and
loope
mov
jle
aaa
cli
sub
ja
cmpsb
mov
jne
push
mov
lea
lret
mov
jecxz
xchg
push
xor
outsl
pop
les
push
int
add
cmpsb
xor
lret
fwait
jnp
movsl
push
mov
ja
in
jp
fwait
adc
leave
inc
sub
test
mov
mov
push
inc
lds
push
and
stos
nop
orl
outsb
call
push
insl
pop
pop
repz
das
sub
mov
adc
je
mov
cmpsb
pop
mov
lods
mov
mov
xor
push
scas
pop
sbb
call
ja
js
aad
lea
xchg
mov
js
outsl
addb
or
cmp
repz
fwait
inc
into
in
sbb
leave
inc
test
xchg
xor
or
test
push
in
imul
pop
cmp
jg
sbb
jmp
mov
sub
inc
or
insb
jns
rorb
sbb
repnz
jb
stos
adc
sub
aas
ja
jb
jns
fldl
lret
scas
roll
sub
fs
inc
les
xor
imul
mov
inc
xchg
orb
rol
jbe
pushf
mov
sbb
bound
pusha
xor
mov
cmp
cmc
lea
dec
mov
inc
xor
mov
out
add
pusha
test
cmp
inc
xor
adc
jmp
inc
inc
mov
jb
cli
lcall
lods
mov
push
pop
push
pusha
les
pop
out
cmpl
adc
xlat
dec
cmp
adc
dec
mov
push
jg
xor
or
test
out
sbbl
cmp
sub
inc
push
jne
xlat
xchg
jae
out
inc
or
aas
in
in
fnstsw
into
out
lret
push
je
xor
dec
jb
xchg
sub
mov
jmp
mov
pusha
xchg
testl
sub
cmp
lret
mov
pop
sbb
out
addr16
fiadds
mov
xchg
int3
ret
sbb
shr
loop
lret
mov
add
popa
test
call
xorb
decb
scas
rolb
popa
sub
repnz
ljmp
cld
pop
gs
les
jp
adc
hlt
mov
mov
adc
aam
lods
clc
mov
ss
mov
jo
mov
out
rep
xchg
push
clc
iret
shrb
add
cmp
loopne
dec
sbb
fs
cmp
loope
in
jge
aas
push
and
inc
mov
les
cmp
je
out
shll
sarb
sbb
mov
pop
ljmp
pop
lcall
lods
jl
shr
daa
xchg
mov
sbb
icebp
loopne
repz
sbb
jno
gs
cwtl
loop
pop
sbb
mov
push
jns
xchg
dec
dec
int
jle
jae
jg
and
or
mov
adc
cli
mov
lods
das
out
mov
aaa
rclb
fistl
out
imul
out
mov
jnp
or
sub
jno
inc
out
test
es
and
push
lock
add
insl
mov
pop
arpl
add
and
loop
and
in
in
scas
jge
sbb
mov
les
xchg
mov
mov
cmpsl
mov
and
mov
imul
mov
cmp
aad
jns
push
lds
inc
call
add
xchg
mov
inc
push
fwait
xchg
pop
pop
out
mov
dec
shrl
mov
or
dec
adcl
mov
das
xchg
adc
push
js
repz
clc
imul
xchg
scas
xchg
mov
les
cmp
insb
cmc
mov
packuswb
sbb
sbb
test
addr16
adcb
push
test
xchg
and
outsl
mov
sbb
int3
push
addr16
stos
sbb
in
inc
shll
ret
push
out
stos
xor
xchg
inc
cmc
mov
jecxz
mov
cli
out
push
xor
shll
je
cmpsb
sti
in
mov
xor
or
dec
inc
mov
clc
mov
or
jae
xchg
je
pop
sub
sub
sahf
dec
jle
lds
lahf
mov
mov
dec
aad
xor
inc
notb
imul
mov
arpl
subl
mov
mov
jge
lret
out
loope
ror
scas
mov
ss
lods
inc
push
pop
sti
and
xor
add
xchg
inc
enter
lods
xchg
rclb
jp
adc
test
add
inc
sub
in
lods
push
cltd
adc
icebp
and
out
adc
xlat
cmp
mov
inc
movl
sbb
mov
or
xchg
inc
jns
nop
push
xchg
and
sbbl
mov
xchg
in
decb
dec
movsl
imul
mov
stc
fsubr
cmp
jp
popa
jae
jecxz
lea
mov
or
bound
js
adc
add
incl
lods
insb
enter
cmp
les
add
mov
pop
icebp
sub
mov
cld
stc
add
push
test
pop
cli
inc
aas
hlt
pushf
cmp
mov
sub
lds
xor
or
or
aad
and
jge
mov
loopne
inc
adc
jnp
ror
sti
imul
jge
push
addr16
sub
dec
rolb
sub
rcl
je
repz
inc
out
pushf
or
mov
pop
xchg
jno
lcall
sbb
gs
in
push
int3
in
popa
lcall
xorl
out
lock
stc
pop
xchg
cmp
mov
leave
cld
and
push
lret
repnz
fwait
repz
inc
add
jge
xor
pop
fs
mov
jo
adc
xor
cmp
sub
lret
inc
pop
test
and
dec
test
jae
push
push
les
ret
test
pushf
jno
inc
cwtl
mov
mov
or
fwait
ja
dec
pop
lods
imul
aaa
add
loop
and
mov
insl
pushf
aad
sub
push
sbb
jb
rcll
sar
mov
jg
into
mov
inc
mov
insb
push
mov
xor
push
mov
cmp
sub
push
idivb
fwait
cmp
and
and
outsb
sbb
sbb
mov
or
or
mov
mov
lcall
mov
sbbb
mov
jl
cmp
cmpsb
dec
in
mov
pop
fldt
out
inc
jge
lods
rolb
int3
lods
in
scas
push
shrb
pop
dec
mov
das
mov
cmp
mov
xchg
inc
adc
ret
imul
add
sbb
jge
sub
popf
add
jns,pt
fdivs
and
xchg
repz
test
push
insb
sbb
inc
mov
mov
in
aam
sub
mov
mov
xor
push
rcrl
loopne
jne
stc
shlb
dec
pop
adc
push
lret
dec
out
or
xchg
clc
fwait
jae
mov
sbb
lcall
test
adc
pusha
xlat
mov
sub
nop
xchg
jae
xor
popf
sti
cmp
movsb
jp
and
stos
mov
in
je
inc
es
pop
lret
mov
cmpsb
push
jns
dec
sti
or
mov
outsb
movsl
addl
jl
clc
vphaddbq
mov
fwait
xor
es
lock
xor
icebp
xchg
add
sbb
inc
sub
stc
mov
mov
dec
repnz
mov
das
push
pusha
jno
adc
cmp
dec
push
pushf
pop
cmpsb
cmpsb
mov
outsb
imul
cwtl
cmp
iret
es
xchg
repnz
cli
aas
push
ljmp
mov
pop
cmpsl
sub
sahf
rorb
xchg
rcr
cwtl
fisttpll
adc
push
enter
call
addr16
lea
mov
fdivl
mov
aaa
mov
repz
mov
pop
add
icebp
ds
js
mov
movsb
popaw
bound
add
les
dec
push
cmp
pop
jp
cmpsb
sbb
mov
aaa
imul
fsubl
or
xchg
scas
push
cmp
mov
popf
inc
std
adc
xor
xchg
nop
cs
pop
data16
lret
or
push
xchg
mov
iret
sbb
inc
dec
mov
push
scas
insb
aaa
ljmp
imull
enter
pop
inc
xchg
sub
xor
sbb
inc
sahf
jecxz
outsb
lret
xorl
lds
or
repnz
or
and
popa
jecxz
jnp
xchg
and
mov
cmpb
sbb
scas
std
xchg
aam
les
sahf
sbb
xor
adc
xchg
mov
div
xlat
push
inc
dec
repz
pop
dec
xorl
jno
jne
or
jmp
dec
inc
and
mov
icebp
or
fcmovu
add
jae
les
jl
sbb
adc
jno
fwait
jl
arpl
cld
daa
lea
loope
cmp
cltd
jne
rolb
fsts
dec
and
imul
xchg
movb
dec
repnz
loopne
mov
adc
in
jge
pop
inc
pop
mov
add
mov
out
push
inc
into
push
out
movsb
pop
inc
mov
or
mov
sbb
cmc
mulb
test
ss
scas
mov
mov
inc
xchg
pop
xchg
loopne
loope
pop
call
rorl
jae
adc
xor
or
mov
mov
xchg
xor
xchg
fsincos
sbb
cltd
inc
addl
sbb
ret
jbe
iret
pop
pop
ja
xchg
mov
repnz
fldenv
xchg
sbb
decb
xor
inc
lods
loope
mov
add
cs
fiaddl
insb
stos
clc
sarb
filds
mov
mov
lods
inc
in
jecxz
dec
loopne
clc
int
add
rol
push
and
cmpsl
sub
mov
jl
popa
insb
insb
sub
xchg
adc
jp
or
je
pop
pop
and
xchg
ja
or
orb
xor
movsl
outsb
js
in
xor
clc
sub
jge
jnp
mov
lcall
insb
adc
xor
add
fcompl
push
popf
jbe
mov
scas
xor
clc
lcall
cmp
les
xchg
xchg
push
or
lahf
xchg
sub
pop
lods
mov
mov
bound
leave
sbb
pop
adc
xchg
shr
or
ret
les
ret
pop
push
and
sti
loop
jg
adc
aaa
sbb
sbb
in
sahf
imul
fld
pop
or
mov
out
daa
mov
popl
xor
sub
jns
repnz
jns
mov
orl
sub
pop
mov
ja
sarb
xchg
ljmp
loope
or
in
mov
call
mov
sbb
shrb
xchg
and
inc
sbb
roll
dec
mov
mov
loope
sahf
and
rclb
cmpsb
lock
cmp
mov
lcall
out
dec
jnp
popf
shlb
cli
pop
push
fcmovnbe
ret
add
add
push
push
and
in
add
push
pop
leave
cmpsl
inc
mov
popa
cmc
inc
cltd
test
std
shl
push
fwait
push
and
dec
mov
mov
or
cmp
movsb
stos
mov
sub
movsl
adc
imul
ljmp
aam
outsb
sbb
mov
in
cmp
mov
movsl
int3
arpl
dec
bound
popf
call
pop
sarl
enter
xor
fcomi
loop
loop
mov
in
xchg
mov
cmp
mov
pop
push
mov
les
xor
sub
inc
add
mov
fbstp
outsb
repz
aad
in
push
sarb
or
cwtl
mov
and
clc
data16
mull
test
mov
js
cmc
mov
lret
shlb
mov
stc
push
shll
imul
cmp
push
cmp
insl
sub
jge
add
sahf
idiv
mov
popa
inc
xor
jae
iret
pusha
sbb
cltd
adc
fs
into
lods
inc
in
jmp
sub
stos
in
ss
std
dec
push
and
xor
andl
repz
lea
lret
and
lods
add
mov
sbb
pop
enter
subb
int3
add
and
aad
clc
setp
dec
jmp
inc
cmp
pushw
ljmp
xor
aaa
decl
jo
mov
fcompl
xchg
sub
push
in
fildll
out
outsl
out
xchg
xchg
dec
xlat
cltd
movsl
push
mov
mov
sub
pop
inc
adc
fs
outsb
imul
mov
loop
sbb
jmp
enter
aaa
mov
sub
stos
sbb
icebp
mov
in
notb
pop
lods
sbb
sub
stc
pop
ja
test
rcr
jmp
xchg
sbb
out
ds
jp
into
aad
movsb
pusha
movsb
cmp
stos
push
leave
dec
cmp
inc
jp
lods
jns
jp
fiadds
adc
pop
jns
movsb
loope
push
mov
jb
cmp
cwtl
stos
fistps
xor
into
into
into
cmc
xor
aaa
cmp
sti
sub
mov
pop
lods
jae
in
rorl
or
nop
ret
fmuls
or
jl
and
mov
or
jne
cmp
mov
mov
movsl
ficoml
fisubs
dec
xchg
cmp
xor
cmp
pusha
pusha
aaa
ljmp
adc
adc
negl
mov
jl
data16
mov
repz
sbb
fisttps
or
das
sahf
xchg
sti
pop
xchg
mov
mov
das
mov
in
in
xor
arpl
outsl
adc
inc
mov
inc
xor
inc
stos
imul
xbegin
pusha
sub
xor
cld
sbb
fwait
adc
or
insb
inc
test
mov
cmp
rcr
jns
stc
cmp
and
ljmpw
jnp
rcl
fs
in
test
shr
out
push
and
jnp
push
xor
out
pop
adc
stc
ss
testl
sarl
mov
dec
xchg
cmp
push
xor
loopne
xchg
or
fadd
sbb
mov
das
dec
dec
cld
aaa
xchg
mov
sar
push
lret
jecxz
sub
cmc
xchg
fsubrs
cmp
or
test
aaa
push
jb
xchg
inc
ss
sbb
push
jno
stc
test
xchg
sbb
or
mov
lods
adc
cld
cmc
sub
sub
inc
sub
cmpsb
stos
daa
ljmp
xchg
pop
pop
cmpb
repnz
dec
leave
das
cs
dec
mov
sub
cld
inc
or
mov
mov
adc
cltd
xchg
cmpb
jne
xchg
mov
lret
xor
lcall
add
jnp
push
loopne
out
bound
insb
out
xor
jae
repnz
pop
das
mov
rcrl
aam
mov
push
jbe
push
adc
sbb
adc
dec
ljmp
pop
mov
movsb
in
sub
push
insb
aas
aas
out
jmp
mov
add
add
sti
sub
inc
fwait
scas
and
mov
idiv
popa
loop
push
xchg
lds
lahf
inc
pop
es
rolb
movl
jae
movsl
sub
lret
loopne
sbb
dec
pop
xor
in
in
sbb
jno
cmc
sbb
sti
sbb
jg
xchg
cmp
out
lea
adc
inc
loopne
xchg
int3
fistpll
ja
mov
outsb
adc
inc
fs
jae
sbb
jnp
dec
xor
les
mov
test
insl
ja
push
clc
je
out
or
xchg
adc
ds
testb
xor
test
sbb
out
sub
das
sub
clc
mov
add
sub
jb
mov
mov
dec
pop
push
sub
pushf
mov
inc
adc
sub
xchg
or
scas
add
leave
dec
shll
jl
scas
xor
call
pop
jnp
xchg
push
sar
add
sub
pop
xchg
test
mov
pop
repnz
insb
push
nop
mov
fcomps
subl
mov
addr16
inc
mov
sbb
addl
sbb
mov
sbb
imul
mov
mov
mov
add
jno
lds
scas
cmc
push
sub
stc
repz
pop
jle
fsubrs
mov
test
andps
dec
cmpl
xchg
or
cmpsl
dec
gs
ljmp
push
mov
out
push
cmp
ficoms
sub
lods
xor
or
cmp
insl
or
ret
mov
repz
jb
pop
pop
arpl
inc
xchg
sub
mov
dec
bswap
cmp
xor
push
jg
push
and
or
sub
mov
mov
inc
xchg
mov
lods
rorb
and
dec
jne
cltd
popa
fs
dec
sbb
cmp
push
jb
insl
cmpsl
jp
call
sbb
in
call
fwait
test
iret
cmc
fs
in
mov
popf
mov
push
shrb
adc
mov
test
pop
imul
test
mov
mov
and
dec
scas
push
jb
into
test
nop
sbb
adc
test
or
push
out
cmp
insl
fstpl
imul
pop
cltd
xchg
jbe
test
jns
jae
call
cmp
mov
jmp
idiv
lods
fnstcw
pop
and
cmp
cmp
imul
jb
int
int
out
push
scas
push
or
rcrl
ret
fldenv
push
sub
mov
jae
mov
rcrb
mov
fisubl
pop
lods
enter
hlt
aas
jecxz
sub
mov
push
mov
mov
test
xchg
cwtl
test
out
adc
add
xlat
and
lods
pop
push
loope
xchg
and
or
stos
in
lds
divl
cwtl
and
push
adc
sbb
lock
int
ficoms
icebp
inc
cwtl
jmp
dec
push
pop
jle
ret
dec
loopne
or
dec
mov
push
dec
cmp
test
nop
mov
adc
gs
out
ja
iret
test
lods
xchg
imul
jl
xor
dec
out
cwtl
dec
or
adc
inc
and
sbb
sub
and
mov
pushf
cmovs
sub
insl
jl
add
adc
inc
sub
test
div
push
inc
pop
into
lods
inc
xchg
xchg
sti
mov
sub
sub
mov
and
dec
cwtl
adc
pusha
add
push
or
sub
inc
xchg
fmull
in
jne
jae
fsubrs
add
xchg
arpl
sbb
dec
jo
adc
add
adc
dec
inc
lret
sbb
sub
loopne
push
es
push
inc
mov
fisttps
mov
xor
jge
sbb
lea
mov
je
xchg
mov
xor
bound
jp
push
push
or
xlat
pop
jmp
cmp
jbe
push
push
dec
lcall
dec
dec
shrl
bound
mov
daa
push
bound
cmp
in
iret
stos
xchg
or
stos
pop
xor
test
js
push
lock
inc
bound
xchg
ret
repnz
fisttpl
sbb
mov
sti
or
int3
dec
inc
dec
outsb
cmpsb
fiadds
aam
repz
jmp
out
stos
aam
add
stc
sub
std
ret
mov
push
xlat
pop
mov
daa
sub
mov
and
push
daa
test
jle
dec
outsl
xchg
fsubrl
aam
sub
es
pop
cltd
add
loope
in
mov
cmp
pop
mov
sbb
mov
add
add
lods
or
mov
add
xchg
mov
add
add
fildl
push
rolb
cmp
test
imul
rcrb
je
or
adc
mov
lock
popa
ret
daa
test
lret
cmpsl
fwait
out
lock
jnp
jl
sbb
repz
test
sbb
outsb
aad
test
adc
mov
je
inc
movsl
mov
sbb
sbb
int3
cmp
sub
dec
push
pop
and
inc
ds
fbstp
sbb
push
lcall
adc
leave
imul
mov
out
aaa
mov
jae
xchg
ja
aad
sysret
rolb
xor
mov
mov
ret
adc
fstl
jo
push
dec
push
fcoml
mov
mov
out
loope
mov
jle
dec
fmuls
faddl
movsl
cwtl
push
jo
sbb
pushf
jg
mov
cwtl
cwtl
mov
in
inc
popa
jmp
cltd
das
dec
sbb
or
mov
mov
test
ret
aam
sbb
shlb
inc
xchg
loop
sub
cmp
lods
call
xchg
mov
push
and
and
sub
mov
push
push
mov
push
xor
or
call
bound
inc
cmp
rcl
sub
fldenv
pusha
in
mov
inc
sbb
hlt
cs
orb
outsl
pop
ss
fstps
ss
cwtl
inc
in
les
xlat
push
cmp
push
and
je
mov
rorb
dec
mov
in
pop
xor
or
cwtl
std
mov
mov
outsl
mov
lods
push
lcall
jp
out
aaa
in
sti
dec
mov
push
int
test
lahf
jp
inc
or
fstps
divb
sahf
xchg
cli
cmc
push
sub
aam
jmp
and
push
js
push
out
push
dec
and
mov
popl
mov
mov
inc
adc
pop
popf
mov
mov
rdmsr
pop
repnz
xor
xchg
sahf
and
fsubrl
pop
jns
jp
fsubl
hlt
push
pop
pop
jbe
jp
adc
enter
mov
sbb
sbb
inc
sbb
lock
xchg
mov
xchg
inc
int3
jg
clc
das
fcom
je
mov
and
xor
adc
icebp
cwtl
mov
cmp
nop
add
push
push
fstps
fdivs
and
push
shl
sbb
dec
test
cmp
pop
flds
sub
add
push
mov
repz
mov
mov
cmp
mov
cmc
inc
ret
addr16
jbe
push
lods
push
lock
or
cmc
xor
insl
shll
xor
loope
lods
push
call
adc
mov
or
mov
add
pop
hlt
adc
call
ret
imul
push
mov
mov
dec
adc
mov
into
pop
mov
xchg
mov
in
cwtl
or
xor
fwait
add
pushf
jmp
push
outsl
dec
mov
push
cli
xor
mov
rcrb
adc
mov
lock
cli
pop
cltd
cmp
mov
push
and
cmpsb
jo
aas
mov
or
addr16
jmp
and
dec
or
lcall
jmp
bound
and
jg
sub
pop
push
xor
or
ss
xchg
and
jle
stos
pop
xchg
aam
cltd
inc
push
mov
inc
imul
xchg
inc
push
into
mov
sub
mov
js
and
adc
lret
pop
jmp
mov
jbe
loop
lock
xlat
popl
je
push
and
lds
push
push
aad
rol
inc
mov
ja
fwait
mov
nop
test
cmp
mov
in
cmpsb
push
mov
sti
out
mov
mov
or
cwtl
jmp
sub
lahf
aad
leave
xlat
push
jnp
dec
and
int
in
out
sub
jl
add
jae
push
and
xchg
cmp
xchg
inc
gs
inc
notb
clc
push
mov
pushf
lret
icebp
dec
adc
sarb
sbb
into
cltd
fldl
sub
rclb
lock
repz
andb
cmp
and
pushf
xchg
test
fwait
data16
sub
bound
sbbl
add
lods
push
movsl
pop
stos
xchg
int
cmp
data16
mov
pushf
inc
dec
lahf
or
pop
or
in
mov
inc
in
pop
push
lcall
sbbl
mov
gs
dec
int3
or
pop
shll
ret
rolb
sub
icebp
repnz
icebp
mov
mov
push
lds
and
fiaddl
jmp
dec
fsubl
sbb
test
cmpsl
pop
adc
cmp
nop
bound
xor
rorb
andl
or
and
out
shll
mov
xchg
scas
ljmp
movb
jp
arpl
add
xor
jne
lods
lods
bound
jecxz
mov
add
xor
or
cmp
adc
push
xor
lret
push
mov
jg
inc
pop
shll
leave
jle
dec
mov
divl
inc
mov
and
ds
mov
and
push
and
ret
cmp
xor
test
push
test
stos
dec
adc
iret
push
clc
sbb
mov
cmpsb
inc
das
inc
jo
jb
cmp
sbb
mov
aas
xor
add
imul
jno
sub
sahf
test
inc
fldl
dec
mov
loopne
call
decb
ja
mov
cmp
lret
shll
or
addr16
xor
sub
outsl
jecxz
add
divl
lds
lock
sub
insb
inc
sub
ret
or
xorl
fnstenv
icebp
ret
inc
jl
call
out
pop
repz
sbb
dec
addl
jl
pop
or
mov
xor
mov
pop
test
notb
push
popf
fbld
mov
jp
lds
xchg
adc
inc
inc
ja
fildll
fs
es
in
gs
inc
lcall
shr
mov
adc
lret
dec
mov
dec
les
pop
aam
xor
push
sbb
stos
cmp
adc
mov
mov
push
icebp
outsl
test
pop
pop
into
stos
mov
into
clc
stos
dec
xor
push
pop
adc
and
arpl
ljmp
mov
fimuls
jno
xor
das
xor
sbb
into
add
dec
loopne
rcrb
mov
push
jne
xchg
ljmp
xchg
aam
mov
push
loope
mov
mov
mov
inc
test
inc
aas
test
inc
faddp
xlat
rep
dec
push
mov
xlat
int3
or
fsts
gs
notb
pusha
enter
or
test
mov
stos
or
mov
or
jb
nop
dec
push
jns
mov
or
negb
fdivl
dec
loop
sti
adc
xchg
push
jle
push
fbstp
pop
stos
cmp
push
xor
pop
mov
push
pop
in
sbb
and
dec
sub
pop
xchg
lret
and
pop
fnstenv
xchg
xchg
mov
pop
or
dec
scas
ret
fidivs
push
out
cs
popa
sub
and
imul
jmp
inc
fucomi
add
inc
cltd
into
rcrl
adc
jl
xchg
fdivrp
incb
jnp
mov
daa
jns
jb
cmp
into
push
pushl
mov
pushf
push
les
sbb
clc
aad
pop
pop
data16
inc
into
xchg
xchg
pop
cmp
loop
mov
sahf
adc
mov
pop
mov
dec
ror
rcll
sbb
and
lds
sar
cld
leave
cli
mov
xor
and
inc
fidivrs
cli
loopne
and
push
lods
pop
ljmp
test
repz
add
adc
clc
aam
fildl
xor
jo
leave
mov
imull
pushf
ss
sub
xor
jns
out
ss
aam
sti
sti
sahf
sub
jo
sub
sub
jb
fidivs
out
pop
mov
or
mov
lods
ret
push
loop
sbbl
xor
xor
lcall
sbb
xchg
ja
daa
bound
pop
pop
loopne
hlt
or
dec
jecxz
sub
mov
lock
xchg
dec
cmpsl
lahf
dec
push
adc
out
inc
sbb
cmp
int
sbb
xor
test
and
pop
sbb
add
outsl
mov
mov
sub
pop
adc
mov
cmc
push
push
inc
rcrl
aas
scas
movsb
lea
or
icebp
xchg
fwait
mov
shl
frstor
push
ret
jb
xor
mov
jle
out
ss
mov
add
push
pop
aad
into
or
pop
out
dec
mov
fwait
adc
add
out
cs
das
cmp
jmp
xchg
les
jno
leave
cmp
ret
sbb
scas
mov
xchg
xchg
fwait
loopne
lret
mov
std
dec
sbb
lock
adc
repz
ss
das
push
aad
xor
add
cld
mov
xchg
and
stos
inc
cmp
fsub
testl
push
jle
mov
pusha
lods
jle
mov
jne
cmp
div
faddl
inc
xor
icebp
dec
sbb
xchg
mov
dec
es
lds
push
push
jb
inc
push
mov
jne
mov
xor
sub
mov
das
push
jbe
xchg
and
idiv
cmpsl
jns
nop
xor
cmp
xlat
lret
adc
jl
dec
test
in
mov
sahf
mov
movsl
loope
mov
aad
mov
cli
adc
fdivrs
daa
pop
fwait
aaa
cmpsl
jmp
pop
fldt
or
dec
and
jnp
sbb
mov
and
pop
mov
push
dec
cld
xor
adc
ret
mov
into
dec
mov
sbb
arpl
enter
mov
sbb
jne
ja
stos
and
clc
cmpsb
test
mov
test
mov
rorl
out
aas
dec
mov
xor
mov
je
jae
add
popa
les
and
mul
dec
mov
cmc
fiaddl
xchg
leave
mov
mov
shrb
in
or
jo
movsb
sbb
xor
xchg
sub
mov
movsl
filds
mov
hlt
xor
pushf
je
das
out
jecxz
aam
shr
das
mov
lret
mov
mov
mov
loop
test
stos
pop
mov
rorb
fisttpll
ret
mov
pop
jne
out
sbb
cmpsb
in
mov
dec
sahf
popa
pop
cwtl
hlt
mov
push
dec
movsb
and
sbb
pop
inc
repz
ret
xor
hlt
mov
mov
jg
cwtl
or
sub
mov
aam
mov
in
data16
movsl
in
mov
ret
xchg
sahf
mov
subb
push
cmp
inc
and
xor
sub
add
popa
aas
inc
rcr
pop
incl
mov
lret
push
jmp
sahf
or
out
call
push
xchg
sub
jle
xchg
xor
fsubrs
ror
jg
adc
dec
enter
stos
lret
test
inc
stos
mov
xor
and
lock
scas
decb
inc
inc
pop
xchg
push
jge
sbb
mov
cmp
fisubrl
xlat
mov
out
ss
ret
or
shlb
mov
mov
mov
lcall
lahf
aas
pusha
sub
sbb
pop
cs
decb
mov
ja
push
push
push
jmp
repz
cmp
sub
out
push
pop
sub
jno
push
ret
stc
adcl
stos
ds
add
inc
insb
sub
divb
jnp
roll
dec
loopne
jo
stos
mov
mov
push
push
xor
mov
loope
jmp
ds
dec
cld
lret
dec
xor
cmp
sub
xchg
adc
or
pop
inc
sub
sbb
cld
jle
lods
pop
add
cmpsb
mov
sub
dec
ss
out
std
jl
nop
ja
cwtl
aam
mov
loope
pop
pusha
pop
mov
out
popf
mov
daa
lods
sbb
mov
aaa
xchg
mov
call
iret
call
inc
lods
pop
mov
ror
dec
sbb
iret
jl
and
andb
cmpb
mov
jmp
scas
lods
mov
hlt
jecxz
popa
shll
popa
mov
cltd
adc
fistps
adc
mov
mov
repz
or
addr16
mov
inc
jno
mov
enter
aad
shlb
pop
dec
mov
xchg
mov
in
or
loope
mov
f2xm1
inc
test
add
faddp
subb
or
xor
ja
test
jb
pop
mov
jg
dec
addr16
sbb
cmp
jmp
ss
push
out
xadd
pop
mov
cli
sub
pop
pop
sbb
leave
sbb
cmpsb
jmp
cmc
push
cmp
and
push
pop
into
in
pop
mov
pop
jge
pusha
ret
insb
inc
mov
or
pop
push
iret
dec
inc
dec
pop
xchg
pop
and
imul
dec
clc
mov
negl
and
nop
xor
xchg
xchg
cmpsb
mov
fimull
out
jne
adcl
std
loop
cmc
push
frstor
xchg
jns
ja
mov
ljmp
jmp
add
dec
and
lahf
mov
in
xchg
pop
jne
dec
outsb
rolb
adc
sub
outsl
arpl
jae
inc
cltd
or
jnp
adc
loope
pop
xor
jns
mov
test
add
xor
stos
add
shrw
sbb
push
jae
sub
mov
push
mov
stos
push
adc
ret
jecxz
push
xor
mov
cmp
insl
repnz
loop
es
xor
stos
int
sbb
stc
push
push
lods
dec
movsb
mov
pop
iret
push
pop
inc
xor
ret
in
nop
dec
inc
add
dec
enter
dec
jp
add
mov
push
loop
iret
inc
ficoml
push
out
ret
adc
add
jb
add
negl
fsubl
testb
xchg
sbb
jns
shl
sub
cmp
loop
mov
shrl
push
sarl
mov
in
call
pop
outsl
pop
xchg
mov
jp
repnz
mov
sub
frstor
fstps
jb
or
mov
andl
ret
fsubs
push
adc
mov
sbb
and
stos
adc
pop
ret
pop
xor
test
stos
mov
bound
je
xchg
add
in
sbb
xor
cmp
sbb
call
fistl
shlb
or
xchg
push
cmp
push
sarb
cmpsl
loope
and
pop
aas
push
inc
or
sbb
cmp
jl
xchg
scas
xor
shr
test
mov
daa
jbe
nop
dec
xchg
xchg
inc
push
and
fwait
sete
or
and
stc
inc
mov
clc
imul
xor
xor
pop
and
les
pop
dec
in
cwtl
inc
imul
rcll
pop
ja
and
addb
lcall
daa
add
add
add
sub
lods
decb
add
inc
mov
and
es
adc
cld
jle
cmc
xchg
stos
or
test
add
adc
xor
pop
mov
int3
jg
test
dec
xor
sti
test
test
addr16
fucomp
stc
lret
and
stos
mull
xor
pop
imul
pushf
cwtl
add
sbb
and
pushl
jne
inc
inc
push
cli
xchg
rcrl
mov
jl
sbb
inc
stos
adc
jbe
in
mov
inc
sub
movsb
outsb
xchg
mov
clc
mov
xchg
loop
daa
adc
test
cmc
cmp
pandn
sbb
jge
shl
push
xchg
xchg
ss
call
or
rol
icebp
int3
repnz
roll
shrl
lods
jp
roll
inc
sub
mov
lret
jg
repnz
test
pop
fsubrs
mov
jnp
push
mov
shlb
pop
or
lds
repnz
push
arpl
adc
pop
fs
xor
or
js
mov
inc
loop
cmpsb
cld
mov
push
pop
jno
pop
or
cmc
sub
in
dec
cmp
ffreep
jno
mov
fcomi
sub
lahf
rcrl
call
jnp
pop
rcll
lret
out
xchg
test
popf
jns
inc
inc
outsl
inc
lods
sub
cs
adc
dec
mov
or
jmp
xchg
and
dec
gs
jg
push
cmpsb
pop
data16
and
scas
jno
fists
mov
push
mov
cli
xlat
lea
in
and
aaa
push
mov
repz
or
leave
mov
inc
add
int
pop
icebp
lret
adc
outsb
shrl
incl
and
imul
and
cmp
adc
jne
sbb
leave
xchg
popa
test
andb
push
add
je
xchg
xor
mov
aas
in
ret
mov
mov
xchg
cmp
aaa
push
adc
orb
scas
add
out
push
push
fldcw
adc
xchg
je
movl
jl
dec
lods
je
cltd
loope
sub
cmp
adc
and
adc
mov
cmpsl
scas
arpl
sub
in
je
and
dec
lea
fistpll
jb
in
fdivrs
fcoml
jns
inc
xchg
mov
in
iret
pop
repz
mul
pusha
sub
daa
pushf
lock
lock
testl
push
pop
mov
lahf
xchg
fldl
jg
mov
out
pop
push
arpl
pop
mov
inc
add
icebp
lret
repnz
lods
mov
ret
sbb
add
repnz
out
cmp
or
cmp
lods
pop
aad
pop
jl
outsb
push
in
mov
es
and
hlt
dec
push
sbb
push
in
outsl
jnp
ljmp
and
add
xchg
int
sbb
jns
lea
sub
add
adc
xchg
lock
mov
sti
push
mov
adc
mov
xchg
sub
fistpl
outsl
ljmp
pop
and
test
imul
mov
cltd
mov
fcomps
jb
mov
dec
pop
icebp
aaa
jns
icebp
and
push
inc
fcompl
rorb
lods
punpckhbw
ror
pushf
inc
push
out
push
xchg
or
xlat
fsubrl
sbb
movsl
mov
pop
icebp
sub
adc
lods
adc
sub
test
stos
aam
jle
push
sub
xchg
xlat
les
cs
jbe
add
or
jecxz
cmpsb
and
insb
cli
jb
add
jbe
pop
leave
iret
pop
in
mov
popa
mov
dec
xchg
mov
pop
dec
lds
jne
xchg
inc
cmp
adc
xchg
das
insl
adc
out
sub
mov
pop
or
fisubrl
push
mov
or
test
jg
xchg
xlat
adc
movsb
push
test
xor
lods
cwtl
dec
lret
xchg
insl
ret
repz
aad
xor
and
mov
jmp
cwtl
sub
aam
xor
nop
jmp
push
jns
cmpsl
mov
jecxz
jp
fs
sub
or
js
into
jmp
mov
mov
adc
cwtl
xchg
cmpb
pop
idiv
adc
insl
dec
dec
filds
aam
sbb
pusha
mov
loop
xchg
scas
insl
movsl
add
xor
mov
and
cli
sti
orl
and
xlat
shl
dec
aad
push
imul
or
pop
fistpl
dec
cmp
pop
inc
icebp
shrl
shlb
mov
mov
js
std
push
lret
pop
loope
sahf
nop
popf
je
daa
add
pusha
adc
dec
and
mov
iret
add
mov
and
mov
out
push
sub
into
push
sbbl
pop
daa
sub
mov
sbb
cs
je
mov
xchg
das
or
scas
adc
or
dec
push
pop
test
and
cmp
negb
inc
js
flds
sub
sbb
cmp
lret
imul
fstpt
xchg
mov
lds
sub
pop
rcrl
ja
jecxz
add
xchg
loop
push
jnp
cmpsb
movsb
xor
dec
outsb
stc
push
dec
inc
pop
sbb
in
decl
cwtl
into
dec
mov
popa
lcall
xchg
mov
mov
js
mov
pop
dec
mov
fildll
fwait
into
mov
fcoms
js
cmpsl
and
sub
jg
cmpsb
mov
and
lea
xlat
nop
bound
inc
xchg
mov
jl
stos
dec
push
sub
or
insl
xchg
inc
lods
daa
sub
mov
sbb
sti
stos
sbb
movsb
mov
push
inc
mov
sbb
sbb
and
and
fstl
pop
js
sub
sbb
mov
das
icebp
inc
adc
in
sub
cltd
dec
pop
jns
xchg
call
test
xchg
in
jae
int
cmp
aas
xor
sahf
das
dec
jmp
sbb
in
pop
test
fisubrl
mov
test
cmp
ds
lods
pop
loop
popf
jnp
cmp
nop
push
lcall
pop
push
cli
lahf
xor
xchg
pushf
mov
icebp
mov
popf
jae
leave
rcrb
xor
jmp
imul
aas
dec
jae
out
cmp
push
cmp
mov
jmp
xchg
cmp
lea
mov
mov
cmpsl
dec
int
mov
sub
in
testl
lret
clc
add
mov
xor
jnp
push
daa
xchg
cmp
and
jb
call
cmc
inc
sub
sub
xchg
inc
arpl
dec
in
call
les
sub
out
mov
pushf
icebp
push
insl
pop
jns
xchg
mov
xchg
enter
out
aad
pushf
ss
mov
popf
pop
sbb
mov
jae
and
stc
adc
push
mov
sar
sbb
dec
xchg
sub
inc
stc
movsb
sub
xor
inc
mov
xchg
pushf
or
imul
ljmp
pop
push
pop
xchg
push
push
dec
cmp
cmp
sbb
inc
cmp
popa
or
and
jbe
lds
lds
cmpsl
scas
inc
mov
data16
pop
pop
jmp
sub
lcall
or
into
out
push
xchg
mov
pop
mov
sarl
mov
push
sbb
in
inc
mov
sbb
nop
imul
inc
push
out
pop
push
fidivs
adc
cmc
mov
test
icebp
rep
stc
sarl
dec
sti
movsl
pop
dec
dec
mov
rolb
xlat
inc
push
jecxz
dec
pop
js
or
push
inc
lods
sarl
iret
cs
sub
mov
movsl
dec
lahf
jno
xor
stc
dec
dec
xor
jno
push
std
scas
pop
jns
push
push
pop
cmp
mov
xchg
out
push
test
bound
loopne
inc
jae
dec
adcb
inc
sahf
mov
mov
push
clc
mov
cmp
shlb
lods
inc
pop
pop
mov
pop
mov
fidivl
icebp
push
fimull
js
sbb
add
push
out
ud1
mov
lea
rorl
cmp
clc
and
test
xchg
in
rcrb
jb
inc
in
ficoml
push
xor
movl
test
rorl
xchg
in
sub
das
cld
adc
es
imul
or
sbb
xlat
cltd
add
and
sbb
insb
mov
and
or
pop
outsb
sub
and
or
aam
jmp
jmp
adc
andb
sub
pop
mov
jbe
pop
jl
dec
in
mov
mov
push
pop
das
push
les
notl
andl
ds
and
add
roll
rcrl
add
lods
shr
push
dec
js
andb
sbb
pop
mov
pop
testl
out
mov
jge
push
jns
je
mov
xchg
rcrl
jbe
and
rcll
andl
outsl
test
fisttps
sahf
das
sub
sbb
sub
xchg
and
xchg
sahf
cmpsl
adc
dec
inc
jp
adc
xor
add
movsl
ss
fwait
jl
femms
loopne
pushf
movsb
adc
hlt
scas
roll
sahf
insb
or
imul
cmp
xchg
jmp
andb
rorb
std
sti
and
orl
test
push
sub
fidivrs
add
arpl
pop
shll
das
mov
out
cli
xchg
fdivrl
sti
xor
or
xchg
adc
lods
dec
ja
xor
sub
fstps
repnz
push
fcompl
movsl
and
adc
cmp
cmp
cltd
mov
pop
icebp
mov
cmpsl
xchg
rclb
and
xchg
lcall
test
mov
mov
int3
imul
xchg
push
push
and
mov
hlt
in
inc
push
pop
mov
mov
mov
pop
inc
inc
dec
and
jle
imul
sbb
repnz
cmp
and
jbe
jae
fmull
xchg
pusha
scas
enter
add
sub
test
imul
xchg
xor
cmp
xchg
iret
je
cmc
mov
dec
or
loopw
mov
dec
jno
dec
loope
inc
mov
jg
adc
pushf
aad
arpl
xchg
add
push
mov
test
dec
ret
jae
or
lock
out
out
add
sub
clc
pop
pop
xchg
mov
add
mov
inc
loope
es
xchg
ret
mov
and
test
or
rcrl
xchg
rcll
dec
scas
push
cmp
push
pop
ds
mov
adc
pop
lods
sub
sbb
push
dec
jl
pop
xchg
mov
jo
sarb
xchg
push
pop
push
popa
sub
test
stc
sub
xor
xchg
popa
push
push
movsl
int
jle
xchg
inc
sub
js
cmp
adc
push
pushw
lock
xchg
ja
or
xchg
cmp
mov
imul
lret
jne
andl
call
cmpsl
out
in
test
cld
popa
popf
sti
or
js
sbb
and
cmpsl
push
lea
pop
fildl
cmp
fnstcw
loope
test
xchg
imul
stc
sub
push
or
xor
in
fdivrs
in
inc
mov
bound
mov
dec
outsl
xlat
js
sub
sbb
lahf
and
aaa
ljmp
nop
lret
sbb
sub
mov
pop
lcall
int
negl
sub
jl
jp
test
xchg
cmpsl
insb
in
popf
lea
movsb
xor
jno
aam
jmp
popa
mov
bound
call
sti
mov
xchg
sahf
cmpsb
pusha
inc
gs
mov
xchg
xor
nop
dec
inc
pop
xlat
cld
rcll
or
shrl
xchg
cltd
insb
call
daa
adc
cmpsl
jno
scas
cmc
bound
ret
jb
pop
int
sub
ds
pusha
jmp
rcr
in
addr16
xlat
jp
rcrl
add
jmp
pop
add
mov
cmc
lods
xor
mov
dec
xchg
xchg
or
xor
or
cmp
rcr
and
rol
push
or
inc
shlb
ljmp
rcr
imulb
mov
jl
xchg
mov
fstpl
ja,pt
or
cs
lods
or
xchg
pushf
mov
push
mov
cmc
pop
fadds
ret
add
aad
sub
push
add
ret
mov
xchg
fnsave
fcomps
shlb
out
arpl
js
jnp
mov
dec
lods
add
mov
inc
cld
pop
in
imul
aaa
mov
daa
mov
jle
divps
cli
xchg
scas
icebp
add
mov
lds
mov
mov
jg
push
leave
push
cmp
mov
mov
scas
je
lods
int3
mov
ss
cmp
mov
pushf
or
out
xor
mov
cmp
xor
cmp
push
dec
clc
cwtl
outsb
cmp
out
fists
test
jmp
push
cmpsl
fcoml
testb
cli
ja,pt
loop
test
add
lock
inc
leave
mov
mov
cmp
adc
mov
mov
dec
sbb
xchg
or
dec
inc
cli
inc
leave
jle
js
fidivrs
icebp
sbb
fmuls
push
xor
das
insb
in
sub
mov
out
inc
sbb
iret
aam
and
fnstsw
inc
shrl
aam
inc
je
pop
cmp
data16
sub
add
add
sbb
fwait
aas
sub
jmp
xor
fucomip
fstpl
outsl
inc
sub
pop
sbb
xchg
adc
xchg
fdivrs
adc
jge
push
push
xor
or
lret
lret
cld
mov
push
loope
jp
out
jae
add
mov
adc
pop
adc
mov
fwait
sub
sub
ljmp
and
sbb
call
cs
add
add
lock
ds
aas
jns
out
mov
inc
jg
mov
incb
dec
pop
mov
out
mov
jl
ret
mov
push
pop
leave
push
dec
pop
cmpsb
movsb
lods
mov
lahf
or
leave
mov
adc
sahf
jge
aam
movsl
out
add
rcl
mov
rol
mov
dec
dec
notb
or
mov
jmp
mov
rol
daa
shll
push
pusha
in
fsts
in
and
clc
inc
xorl
cli
into
lahf
ds
cmp
inc
addr16
scas
xor
aas
call
fdivs
mov
outsl
test
jbe
adc
or
xor
or
stc
mov
sahf
fcmovnb
loope
insb
icebp
sub
je
adc
ljmp
int3
sahf
insb
cmpsb
mov
fdivr
ret
scas
adc
mov
aas
shrl
jae
and
loopne
aaa
idivl
stc
lock
inc
lods
pop
outsl
ficoms
inc
shlb
sub
jmp
or
lret
cmp
sub
push
sbb
popa
jbe
mov
add
or
movb
dec
add
push
add
pop
std
push
inc
inc
orl
mov
cmpsb
fnstsw
mov
imul
jecxz
divl
pop
xor
pusha
pop
iret
insl
ret
mov
pop
mov
dec
popa
bound
adc
jmp
sub
clc
xchg
rorb
fld
inc
pop
xchg
into
sub
sub
and
imul
fsts
add
mov
out
push
inc
addl
inc
sub
and
xor
mov
stc
in
fsubrl
fs
test
clc
add
add
divl
cmp
push
rcl
outsb
sarb
insb
rcl
fwait
or
fisubl
mov
aas
fldl
loop
imul
ret
dec
aad
aam
jmp
jae
fildl
rcrb
sahf
fstps
mov
ret
das
bound
loopne
je
inc
enter
mov
adc
mov
pop
push
pop
or
cwtl
sub
in
adc
and
stc
shr
bnd
das
aad
sbb
dec
dec
push
cli
call
test
pop
sub
sti
cltd
lcall
xor
lahf
jmp
mov
pop
jno
mov
movsb
mov
jle
sbb
movsl
lret
adc
rorl
xchg
push
aaa
xchg
imul
test
cmp
jmp
adc
xchg
in
call
sub
push
popa
aad
movsb
push
sbb
and
lods
clc
xchg
or
jecxz
cmp
ss
dec
mov
sbb
dec
mov
je
xchg
mov
dec
shll
mov
ss
gs
add
mov
sub
cwtl
in
pslld
sbb
int
or
hlt
push
xchg
cmp
cmp
es
cmpsl
jle
rorb
adc
xor
sub
movsb
cmpsl
jl
roll
mov
inc
xor
adcb
push
push
xchg
ja
pop
loopne
mov
cmp
rcll
adc
adc
lock
inc
lds
xchg
mov
rorb
jecxz
sti
repz
out
shll
pop
xchg
ds
cltd
inc
ljmp
push
rcll
movsl
shlb
cmp
pop
jo
pop
dec
jne
jbe
nop
stc
add
loopne
xchg
outsb
hlt
int3
adc
dec
pop
pop
lea
and
ja,pn
xchg
push
and
mov
push
mov
xchg
adc
xchg
pop
cmpsb
imull
fst
loopne
pop
adc
das
stos
movsb
loopne
add
jno
test
ret
jl
xor
jne
es
insb
mov
xchg
cld
dec
es
lret
hlt
in
fwait
xchg
popa
ljmp
fs
mov
js
mov
or
add
fwait
dec
xor
bound
inc
or
and
inc
test
testb
bound
repz
sub
or
and
out
stos
outsb
xchg
sbb
out
ja
and
and
cmp
cmpb
mov
cmp
lea
scas
adcb
call
and
ja
les
or
or
pop
xor
jle
cwtl
adc
test
sub
insl
dec
rcrb
push
stos
dec
add
in
dec
add
jae
ss
test
cltd
or
dec
jns
fwait
pop
iret
lret
lock
shrl
mov
fwait
push
addr16
adc
push
stos
jg
arpl
dec
dec
insl
lret
adc
add
pop
mov
sbb
loope
popf
add
adc
cmpsb
sahf
rorb
add
jae
insb
and
das
lods
jbe
jae
popa
pop
pusha
xlat
icebp
fucomp
outsb
mov
cmovg
adc
sub
mov
xchg
and
lret
mov
mov
ljmp
call
clc
mov
daa
rorl
xchg
jno
cmp
xor
ss
dec
push
stos
pusha
scas
jbe
std
jp
adc
xchg
adc
mov
jge
adc
mov
repnz
and
jns
data16
adc
mov
andl
and
mov
test
mov
daa
fldt
or
in
fwait
or
es
pushf
hlt
jg
xchg
or
push
pop
dec
out
je
or
push
or
insb
sbb
outsl
add
cmpsb
cltd
fcoms
mov
and
out
xor
je
ficoms
loop
dec
roll
inc
push
rcrb
pop
or
ret
out
adc
xchg
xor
mov
mov
movsl
shl
or
rcll
data16
cmp
and
cmp
xchg
inc
pop
sub
mov
mov
outsb
popw
fists
negb
in
mov
test
mov
xor
das
xchg
xchg
arpl
shl
insb
jns
xor
push
adc
dec
jp
pop
dec
push
lods
movsb
js
sub
xchg
out
xor
idivl
mov
sub
scas
clc
and
xor
push
push
out
pop
sbb
xor
sbb
jne
sbb
mov
push
mov
imul
pushf
mov
imul
xor
sub
iret
imul
sbb
outsl
cmp
test
adc
in
mov
push
out
pusha
es
mov
shl
lret
push
out
mov
or
sbb
ds
jle
lods
add
testb
bound
mov
out
js
in
jne
push
sbb
push
dec
aas
jmp
push
mov
xchg
fldt
dec
jle
vmread
mov
call
loopne
jmp
xchg
lret
mov
pop
add
mov
jle
lods
ljmp
sub
inc
fmuls
dec
jno
mov
xor
inc
pop
and
cltd
jmp
movsl
add
out
mov
mov
push
jne
cmp
jbe
stos
xchg
in
je
sub
mov
push
sub
dec
adc
andb
mov
xor
push
mov
out
cmp
mov
mov
mov
repz
lods
fidivrs
mov
xor
rclb
iret
call
cmpsl
icebp
fs
jg
push
mov
push
pop
sub
mov
add
addr16
cld
daa
mov
outsl
pop
loop
inc
je
loope
out
mov
push
push
and
cmp
xchg
repnz
xor
pop
dec
xor
mov
fnstcw
jnp
in
mov
or
les
push
mov
cmpsl
mov
lock
call
jnp
sbb
imul
scas
push
jo
into
pop
mov
jbe
push
rcl
pop
xchg
lcall
xlat
mov
andl
mov
cltd
push
sbb
pop
fisttpll
adcb
or
cmp
inc
sbb
or
in
imul
pop
xor
lods
pop
sub
inc
or
adc
mov
sub
rol
inc
jle
ret
push
sub
jo
into
xchg
daa
inc
mov
clc
icebp
pop
popa
xor
shlb
and
ljmp
lock
jbe
xchg
mov
rolb
cwtl
cmc
jno
jecxz
pop
rorl
scas
xchg
enter
loopne
shll
and
jge
sbb
leave
iret
out
arpl
mov
addb
lret
ret
out
in
cmp
dec
roll
jge
ja
test
add
aaa
cmp
xchg
sbb
push
int
pop
shll
bound
jno
cmp
and
dec
scas
xchg
xor
imul
add
pop
fsubs
mov
ret
fildll
add
mov
lcall
test
movsl
enter
adc
mov
pop
sub
jp
jbe
push
sub
mov
cli
mov
xchg
and
sbb
sbb
icebp
mov
dec
int3
pop
jecxz
sbb
repnz
and
mov
bound
adc
mov
cltd
push
out
out
mov
adc
pop
gs
push
js
inc
iret
jp
adc
mov
sti
addr16
shll
lods
xor
test
testb
aaa
imul
nop
imul
clc
sbb
and
adc
pop
inc
inc
push
push
xchg
cli
cld
add
into
pop
jae
ret
loopne
mov
stos
mov
inc
repz
lea
fs
add
pop
test
xor
sub
adc
orl
add
fwait
pop
insb
pop
imul
sbb
test
pop
push
push
mov
sbb
pop
push
xlat
dec
dec
fdivs
movsb
arpl
bound
sbb
pushl
xor
out
sub
cmpsb
movl
shlb
jae
jno
xchg
dec
cmp
insl
and
pop
movsl
rcr
xchg
jo
sbb
in
adc
adc
cmpsb
pushf
pop
and
incl
out
xchg
leave
xor
aas
sbb
mov
mov
mov
ljmp
xchg
inc
jecxz
out
or
pop
insb
mov
xchg
fisubs
sahf
das
sbb
pusha
jge
outsl
test
xor
add
fidivl
sub
adc
or
inc
or
int3
sbb
jo
movsl
ljmp
mov
and
xorb
sti
cmp
jecxz
push
adc
jl
fldcw
andb
insl
jb
lods
mov
fiaddl
or
out
inc
push
xchg
add
cmp
data16
cmp
push
sub
push
cmp
pop
out
ja
cli
js
orb
stos
push
push
mov
and
sub
ds
cwtl
test
icebp
ret
test
popf
dec
pop
popf
xor
imulb
sub
mov
shll
mov
cltd
stc
xlat
inc
xorl
mov
je
test
lret
scas
inc
dec
jne
or
clc
lahf
sub
jmp
and
loopne
xchg
cli
repnz
popa
aas
push
inc
sub
sub
imul
movsb
sub
mov
nop
sahf
imul
aas
mov
stc
sub
mov
sbb
rcr
inc
xchg
add
mov
popa
shlb
add
fstl
idiv
sub
cmpsl
sbb
pop
mov
scas
repz
jnp
xlat
sti
jge
sub
cli
out
mov
insl
xlat
mov
inc
imul
mov
jge
out
sbb
faddl
add
mov
mov
loopne
sbb
mov
jle
push
mov
in
mov
adc
cmp
int
cmpsl
xor
push
xchg
dec
test
lods
mov
pop
sbb
fmuls
shlb
add
movsl
notl
mov
adc
jae,pt
mov
pushl
stos
push
rclb
call
js
or
dec
je
mov
dec
fsubrs
fmul
cwtl
aad
push
loope
push
mov
jae
and
jne
push
mov
dec
mov
add
lahf
outsl
adc
xchg
lret
fidivrs
or
or
repz
pop
xor
aaa
data16
call
aas
push
push
iret
jl
mov
addl
adc
pop
pusha
or
push
xor
fiadds
pop
testl
inc
or
es
movsb
inc
mov
int3
jmp
hlt
jecxz
fwait
popf
mov
orb
fwait
sub
jae
clc
cltd
das
inc
clc
inc
in
clc
adc
incb
pop
stos
cld
shll
jp
xchg
in
mov
push
adc
dec
jbe
das
out
push
aad
imul
gs
push
test
dec
fildll
bound
jmp
xor
daa
adc
fxch
test
jl
xchg
push
mov
test
xlat
dec
mov
lea
aas
shlb
cmp
cmp
fwait
and
insb
lcall
xchg
mov
insb
inc
imul
fldt
mov
inc
jmp
push
inc
sbb
imul
xchg
rcll
mov
lds
lods
cmp
imulb
and
imul
cmpl
lock
mov
iret
sti
sbb
add
dec
and
adc
sub
cwtl
lods
pop
jb
je
inc
hlt
cmp
inc
cmp
enter
pop
les
imul
mov
add
roll
jno
mov
xlat
jne
scas
cwtl
rcl
shll
orb
jbe
stc
xor
mov
dec
jp
sbb
fwait
or
and
loope
inc
xor
pop
aas
sbb
pushf
mov
cwtl
or
and
mov
int3
cli
cmp
sbb
arpl
xorb
jb
insl
jae
in
aam
cli
jmp
xchg
shll
int3
fnstsw
xchg
aam
and
xchg
imul
dec
ficompl
xchg
movsl
pop
sti
xchg
ret
adc
xor
inc
popa
xchg
iret
cmpsl
int3
add
pop
push
mov
sub
push
ss
jecxz
in
cld
pop
nop
cmp
adc
cld
inc
loope
ss
push
lea
sub
ljmp
adc
and
ss
jle
jb
je
stos
daa
push
dec
mov
mov
sub
adc
scas
mov
push
loope
aaa
mov
pop
arpl
out
fcomps
mov
ucomiss
dec
cmpsl
imul
hlt
xchg
hlt
push
push
xor
inc
mov
cltd
stos
nop
clc
cli
insl
fcmove
sbb
mov
xor
pop
test
push
xor
shll
scas
adc
sub
lods
sahf
mov
leave
loopne
or
or
sub
and
icebp
pop
ror
aam
enter
enter
and
fsubrs
data16
jecxz
xchg
imul
add
add
mov
adc
and
sti
dec
adc
add
adc
and
push
cs
mov
add
lret
mov
xor
push
sbb
lds
pop
popa
movsb
mov
jns
mov
push
jmp
pop
test
scas
pop
jnp
sbb
inc
jbe
mov
das
icebp
jp
out
xor
imul
aad
out
sbb
out
mov
daa
fisttpll
or
dec
in
stos
ret
or
jno
ret
icebp
imul
lods
pop
sub
adc
inc
add
push
jns
pop
popf
xor
jle
xor
jmp
andb
xchg
mov
fidivl
mov
cwtl
sbb
fisubrs
add
lahf
cmp
or
aam
jmp
push
fidivrs
rorl
adc
cmp
int
outsl
loope
loop
mov
xchg
aas
outsb
sarl
ret
lds
cmp
loop
loope
xchg
inc
add
adc
ss
gs
push
mov
ja
lret
ret
xor
addb
mov
fnstenv
mov
subw
js
push
test
xchg
sbb
fwait
push
les
jb
xor
test
push
mov
icebp
or
sti
scas
sub
ret
std
sarb
int3
jg
pop
push
mov
push
pop
mov
mov
clc
clc
data16
addr16
mov
mov
mov
sub
xor
xchg
mov
enter
xchg
pusha
adc
hlt
ljmp
lea
mov
imul
mov
dec
loopne
jg
dec
int3
mov
xor
lret
or
shll
jecxz
pop
out
dec
sub
rcrl
or
daa
lret
movsl
int3
movsl
ss
cs
test
xchg
cmp
andl
ficoml
pop
dec
clc
enter
popa
mov
and
xor
lahf
cmpsl
fsubrs
repz
adcb
lcall
add
push
push
es
std
out
mov
adc
scas
jecxz
xor
pop
jne
mov
ret
or
mov
fmull
jnp
push
ss
popa
mov
push
push
push
inc
jp
popf
jb
loope
jl
divb
movsl
dec
or
fwait
repnz
inc
cmpsl
lds
push
scas
cli
int3
nop
iret
sbb
jns
stos
adcl
out
push
add
dec
add
icebp
movsb
lret
mov
pop
push
pop
lret
pusha
std
sbb
enter
dec
adc
add
fistl
and
das
mov
hlt
cmp
data16
imul
or
push
cmp
fwait
mov
cmp
into
sub
jno
dec
or
mov
pushf
int3
jo
inc
fdiv
outsb
add
add
imulb
push
push
stos
shll
add
rcrb
jnp
popl
test
xor
push
scas
mov
movsl
jl
adc
hlt
les
inc
pop
adc
out
push
aas
pop
xchg
mov
and
je
into
push
rorb
mov
mov
aas
dec
sbb
inc
fidivs
imul
mov
outsb
hlt
ja
sbb
push
cmp
shlb
int
push
fwait
inc
mov
mov
fldenv
bound
shlb
cmp
es
inc
icebp
inc
inc
out
dec
xchg
mov
out
test
fistps
pop
mov
insb
inc
mov
xor
fdivrl
filds
roll
mov
push
insb
or
add
loope
sar
mov
adc
repz
icebp
repz
pop
sbb
mov
pop
repnz
outsl
loope
push
pop
iret
pop
push
dec
ds
mov
aam
fsubl
into
stos
in
mov
ljmp
into
push
cmp
loop
inc
sbb
nop
sub
xchg
scas
mov
in
cmpsb
insb
ficoms
jecxz
ja
adc
jle
sub
or
shl
dec
cli
lods
add
jns
pop
pop
cld
ret
inc
or
cli
stc
xor
cmp
std
xchg
dec
in
cmp
rol
data16
and
mov
mov
inc
jns
sub
fcoms
xor
enter
pusha
push
addr16
std
fists
xchg
movsl
push
data16
pop
loopne
lret
pushf
xlat
ds
daa
push
hlt
sti
jno
jecxz
cli
jae
push
push
fsubr
and
xchg
mov
movsl
fbld
mov
dec
rcll
ss
jnp
lcall
pop
lods
mov
mov
dec
adc
add
aaa
jl
imul
imul
dec
mov
pushl
or
dec
das
add
popa
sub
sbb
adc
out
dec
pop
dec
jns
movsl
jae
loopne
icebp
inc
stos
adc
push
jae
or
ds
out
pop
xor
push
popf
adc
enter
inc
jo
int
push
push
mov
dec
fiaddl
icebp
stos
in
jno
pop
dec
sbb
dec
insl
ja
dec
push
push
or
and
or
test
cmp
insl
daa
insl
pushf
mov
or
jg
pushf
inc
xchg
in
cmp
sub
push
test
dec
pop
jge
jle
repz
les
pop
push
shll
data16
test
call
cmp
ficoms
stos
lock
cmp
je
daa
jge
popa
add
push
enter
xchg
mov
int3
adc
imul
lea
repz
lcall
rol
test
insb
loope
gs
andl
and
push
sbb
jecxz
push
push
pop
jle
in
mov
add
jle
loop
dec
adc
xchg
daa
mov
mov
loope
sub
inc
pop
fxch
sbbl
jo
sar
xchg
scas
mov
jl
push
cmp
mov
loope
out
notl
xchg
cmp
xor
cmp
scas
xor
fsub
test
adc
pushf
xor
and
jo
push
shll
cmp
xchg
jns
mov
sub
mov
insb
xchg
or
or
pop
jp
pop
cmpsb
push
sub
adc
imul
insl
inc
cmpsl
lods
push
lods
int
xor
jns
aas
test
cmp
jno
lock
ds
or
push
pop
xor
mov
jnp
rclb
in
mov
xor
fucompp
jge
mov
mov
mov
pop
mov
add
adc
mov
and
outsl
xchg
imul
xorl
jnp
cmp
repnz
xor
sbb
and
in
into
inc
cwtl
push
rcrb
movsb
xchg
shll
movsb
shll
sbb
dec
ds
sahf
pop
andb
outsl
jl
push
add
inc
out
mov
cmpsb
mov
ds
movsl
push
pusha
dec
pop
mov
push
sbb
jne
or
add
push
mov
js
sub
inc
mov
cmp
mov
int
jnp
into
js
jmp
insl
arpl
cmpsb
mov
lods
xchg
adc
rcr
and
dec
mov
pxor
mov
inc
sub
pop
iret
roll
aam
imul
int
xchg
cmp
mov
int
movsl
xchg
mov
inc
movsb
fnsave
iret
lock
or
int3
pop
or
arpl
mov
stos
add
orl
jp
movsb
inc
das
inc
fistps
fistpll
push
inc
xchg
lret
inc
xor
and
insl
xor
out
xor
pop
jne
ds
xchg
adc
ljmp
jl
or
and
fisttpl
leave
mov
out
js
addr16
jge
push
or
clc
add
std
rcrl
xchg
mov
movsb
in
mov
stos
dec
mov
ljmp
fildll
stos
jae
pusha
mov
ret
dec
xor
test
jns
insl
int
lcall
xor
jl
lds
imulb
push
and
sahf
jmp
xchg
enter
mov
subl
adc
lds
jmp
mov
bnd
bound
pop
jecxz
repz
dec
fldt
xchg
mov
jnp
cmp
push
loope
fdivr
xchg
mov
push
cmp
pop
xchg
pop
sub
rcl
rcl
dec
inc
pop
mov
addr16
mov
mov
mov
insb
scas
cmp
jnp
or
jl
jmp
mov
pop
sub
cmp
adc
ror
xor
stos
adc
out
jnp
and
mov
test
mov
adcl
aam
fsts
fldl
int
mov
sbb
cmpsb
das
xlat
cmc
addr16
in
mov
cmpsb
xchg
daa
mov
jmp
push
and
pop
add
jae
or
inc
push
mov
sub
xchg
in
xchg
jp
mov
sub
push
add
ret
mov
mov
xor
mov
daa
je
xor
mov
jb
call
pop
xchg
pop
mov
or
gs
mov
sbb
pop
sub
test
jg
out
inc
imul
mov
mov
aam
jae
adc
inc
push
jge
movsb
cwtl
cmpsb
mov
aad
aaa
cmp
inc
mov
and
add
aas
mov
adc
frstpm(287
out
fsub
sti
jle
fnstenv
mov
sub
mov
jecxz
jecxz
ret
mov
mov
or
dec
dec
inc
mov
xchg
pop
mov
iret
xor
sbb
mov
sbb
jne
mov
pop
adc
dec
sub
sti
dec
or
andl
adc
xor
jae
jmp
int
das
jmp
mov
fsubrs
stos
sbb
jo
clc
push
lcall
data16
and
lcall
push
idiv
jne
cmp
rcrl
mov
data16
pop
fldenv
ret
sbb
dec
mov
mov
jbe
adc
insl
pop
mov
imul
sub
mov
dec
or
data16
inc
in
cld
fwait
cli
push
mov
fldenv
int3
inc
andl
aas
lock
push
je
xor
and
repz
fcoml
mov
repz
add
repnz
push
inc
pop
jp
fsub
shrd
xorl
inc
pusha
lcall
cmp
mov
popa
mov
dec
clc
icebp
test
mov
cli
clc
adc
xchg
sub
cmp
adc
cmp
test
out
adc
je
roll
push
adc
add
pop
mov
cwtl
dec
ss
test
and
test
inc
lea
scas
add
add
inc
out
and
xchg
inc
inc
cwtl
addl
punpckhdq
mov
xlat
incb
jl
push
nop
mov
mov
pop
andl
inc
dec
cwtl
imul
mov
or
cmpsl
xchg
mov
and
inc
rorl
xlat
icebp
jl
pop
cmp
stos
pop
push
div
adc
fwait
sbb
fisubl
push
pop
jne
xor
stos
inc
and
pop
jecxz
or
out
mov
dec
and
aad
js
sahf
repz
imul
mov
push
mov
roll
adc
mov
or
cmpsb
aam
add
inc
push
push
lds
cli
adcb
in
call
mov
jg
sbb
fistpll
fbstp
inc
pop
adc
xchg
bound
iret
fdivs
in
std
mov
iret
or
andb
dec
into
inc
aas
dec
xor
push
jae
mov
sti
mov
je
mov
xchg
dec
repz
test
outsb
and
push
jecxz
and
cld
xchg
jmp
push
jb
mov
xchg
and
lcall
sbb
and
lods
push
and
xchg
sbb
dec
repnz
inc
stos
cwtl
jbe
divl
fwait
jmp
les
sub
scas
xchg
mov
and
fcmovb
push
xor
sub
push
orb
dec
lahf
loopne
mov
inc
inc
xchg
das
mov
mov
fstl
into
icebp
mov
and
adc
sarb
jne
jl
mov
cwtl
pop
dec
mov
adc
xlat
fcomip
fbstp
dec
pop
pop
dec
mov
ljmp
and
fs
xor
in
jl
test
push
stos
aam
out
stos
subb
movsb
cmpsl
push
dec
xorl
xchg
rcrb
xchg
leave
aaa
adc
xchg
lahf
and
xchg
push
cmp
lds
cld
ror
ja
pop
jle
sub
cmp
lret
or
data16
adc
pop
in
xor
mov
arpl
dec
xor
or
sar
lods
in
sub
lods
xor
cmp
xchg
add
in
adc
pop
mov
sub
imul
push
cmpsb
and
jle
iret
mov
and
out
loop
or
push
pop
xchg
ret
in
jecxz
mov
jnp
xor
mov
cmc
fwait
cmc
add
xchg
jns
addr16
adc
push
mov
mov
and
adc
pop
and
loopne
insb
mov
xchg
mov
xor
imul
adc
jl
cmp
add
sbb
mov
adc
fmul
arpl
stc
xor
rcr
ja
mov
xchg
dec
dec
outsb
aad
cmp
bnd
dec
mov
lods
fcom
fsubrs
int3
shrl
test
inc
test
mov
lds
dec
ja
and
pop
or
cmp
in
add
leave
mov
xor
and
push
add
jmp
mov
out
addr16
std
rclb
in
mov
leave
pop
cmp
or
and
out
test
pop
xor
mov
dec
lahf
insl
inc
jg
cli
pop
addr16
mov
mov
ds
mov
jg
hlt
mov
int3
add
mov
cmove
cmp
popf
sbb
imul
gs
jge
push
sub
push
or
sar
cld
mov
cmp
cld
mov
in
mov
xor
push
movsl
fnstsw
sti
inc
pop
sbb
pop
jae
aaa
xor
out
sbb
and
scas
add
test
xor
push
sub
out
outsl
lods
es
and
call
cmpsl
loop
pop
lahf
fisubl
rol
push
cmp
mov
lretw
push
adc
inc
mov
shll
inc
test
dec
pop
cli
fmuls
les
adc
sub
xchg
or
cwtl
mov
sbb
mov
loop
rcrl
imul
dec
ss
orb
or
sti
inc
inc
js
gs
movsb
imul
adc
sub
aas
or
mov
out
mov
fwait
dec
aam
fldl
jg,pt
sti
fldenv
dec
mov
loopne
cmpsl
pop
or
mov
std
push
rolb
pop
mov
enter
das
xchg
jo
ret
icebp
mov
or
mov
mov
cmpsl
rcll
jg
push
jnp
and
outsb
iret
lock
jne
pop
das
in
mov
add
lahf
add
mov
mov
cs
pop
inc
pop
push
loope
ds
in
adc
and
int
push
arpl
js
sbb
mov
hlt
fsubrl
dec
lea
adc
xchg
fidivs
mov
sub
mov
xchg
mov
vcvttps2dq
ljmp
sahf
sub
mov
xor
sbb
cmc
sarl
je
or
les
std
pop
test
movsl
rcrl
push
pop
push
imul
push
adc
sub
xchg
lahf
cmc
pop
mov
inc
push
and
das
mov
mov
loopne
jmp
stos
sahf
sub
sbb
sub
mov
neg
push
pop
movsl
nop
cld
aam
pushf
ret
call
push
xor
mov
test
jae
outsb
scas
sti
out
sub
adc
add
mov
jl
shll
add
out
pop
cmp
mov
mov
rclb
sub
jecxz
push
or
fwait
inc
lods
je
jnp
push
push
outsb
rol
pop
mov
and
subb
lahf
lods
daa
icebp
gs
scas
hlt
or
lret
loopnew
xor
stos
mov
sbbl
pushf
nop
push
push
xchg
xor
or
popa
xchg
mov
call
jbe
daa
dec
xchg
jl
addr16
mov
lds
lock
ja
test
and
imul
jl
jl
add
inc
cs
adc
jb
popf
xchg
addl
dec
lea
stc
push
pushl
or
xor
xchg
fcomi
dec
das
mov
sub
cwtl
lret
push
rcr
movsl
mov
xor
mov
and
rorl
sub
or
or
jae
mov
test
cltd
add
rol
pop
repnz
push
jle
jmp
in
aaa
and
sbb
jle
mov
jbe
mov
cwtl
ret
cmp
mov
cwtl
popa
jnp
adc
and
cmpsl
sub
hlt
pop
adc
jns
push
mov
ljmp
adc
insl
aam
sub
mov
loop
jne
das
or
mov
sub
dec
jbe
js
shll
cmp
faddl
test
mov
inc
sub
arpl
sbb
fcompl
xchg
imul
shlb
inc
dec
adc
lcall
idivl
or
sbb
and
dec
sbb
xchg
scas
inc
mov
leave
mov
int3
xor
out
mov
enter
mov
out
xor
fldenv
fmul
inc
mov
or
or
push
sarl
jg
repnz
xlat
cmp
andb
aas
push
lret
jo
lcall
into
cmp
sub
cmp
je
pop
sub
in
imul
pusha
mov
push
aam
iret
shll
mov
fsubrl
pusha
jmp
push
xor
push
mov
push
xor
lock
out
xor
xor
xchg
or
xchg
pop
sub
lret
or
sbb
cmpsb
jl
and
loopne
cli
pop
addr16
or
ljmp
sar
inc
add
mov
je
cs
neg
or
jo
jae
clc
push
ret
test
std
sbb
pop
mov
nop
ds
lcall
push
popa
dec
mov
gs
cmc
outsb
push
sbb
mov
hlt
icebp
xlat
repnz
add
out
sub
cmpsb
inc
popf
jne
pusha
stos
add
iret
lcall
or
jle
mov
and
mov
rol
popf
pop
mov
dec
movsl
jecxz
jle
lret
fucomp
add
inc
jo
pushf
fstp
ja
sub
mov
ja
and
mov
push
cmp
and
push
mov
outsl
sub
push
arpl
jge
loop
imul
pop
add
mov
mov
frndint
addr16
or
push
movsl
hlt
mov
sub
xor
jl
shlb
leave
jecxz
leave
xchg
flds
outsb
cmpsb
test
pop
cmpsb
insl
or
iret
sub
jne
sub
mov
sar
mov
sub
cmp
mov
push
fisubrs
mov
and
rorl
sbb
mov
add
sbb
cwtl
test
xor
sub
lods
mov
push
iret
and
sti
or
jns
lds
gs
sub
push
adc
stos
lods
in
dec
jb
imul
pop
sarl
insb
xor
inc
out
push
adc
mov
sbb
ret
in
cmp
cltd
push
or
test
jo
adc
add
popa
test
push
and
mov
pop
lock
je
push
add
mov
jbe
mov
xchg
dec
js
incl
inc
mov
fs
mov
mov
inc
ss
cmp
xor
ss
pusha
cmp
movsb
cld
mov
jl
mov
push
test
mov
fistpll
sahf
jl
push
inc
fdivl
cmpsl
mov
jle
cli
or
imul
nop
mov
mov
stos
imul
xor
outsb
pop
xor
sbb
scas
jge
dec
gs
and
dec
adc
fimull
shrb
xor
pop
and
cmp
movl
imul
dec
test
push
mov
jge
imull
pop
inc
push
call
pop
or
rdtsc
daa
ret
mov
std
jne
pop
outsl
or
pop
outsl
and
jno
orb
decb
pushl
lea
sub
pop
bound
pop
mov
imul
rol
insl
inc
pusha
mov
xchg
test
push
mov
sub
hlt
fstpl
popf
pop
ficompl
and
xlat
cmpsb
arpl
test
mov
test
ret
push
add
pop
sub
fbstp
repz
es
movsb
cmp
inc
ret
xor
pusha
cmp
cltd
ds
push
ficompl
addr16
imul
adc
cltd
mov
xlat
mov
fstp
enter
test
adcb
pop
adc
cmp
sahf
jl
cs
jle
xlat
pop
and
filds
test
xchg
and
xor
fcmove
mov
outsb
adc
sub
ucomiss
inc
in
out
push
stos
and
push
outsl
xchg
and
sarb
xorb
or
xor
adc
adc
and
xlat
popl
add
add
cmc
js
jg
pop
test
insb
xor
into
sbb
mov
es
sub
leave
in
pushf
adc
pushf
fs
shrb
pop
aad
shlb
pop
pop
rcrb
cmp
xchg
repnz
add
cltd
loopne
pop
icebp
mov
outsl
xor
jp
imul
inc
or
xchg
pop
push
cli
pop
mov
mov
or
adcl
and
popf
imulb
in
pop
xor
mov
dec
mov
iret
jg
rcr
jmp
inc
add
mov
mov
or
repz
jl
mov
xchg
xchg
movsl
icebp
loopne
fistpl
sub
or
jge
shlb
test
push
cs
fisttpll
mov
in
sahf
cwtl
mov
mov
fisubrl
xchg
pop
mov
rcll
daa
xchg
push
mov
mov
mov
rorb
addr16
mov
ds
scas
and
jno
cmp
lds
jno
inc
mov
and
aaa
pop
xor
test
dec
aad
adc
sub
iret
push
in
sbb
push
fwait
lret
xor
sbb
mov
or
xor
out
andl
dec
push
out
push
xchg
inc
or
inc
dec
xlat
add
cwtl
shlb
test
or
lret
cmp
sbb
test
fucom
arpl
hlt
sahf
pop
cwtl
xchg
int3
outsl
rorl
out
jmp
out
dec
and
mov
rclb
mov
out
in
hlt
inc
scas
sar
cmp
sub
dec
push
lret
pop
andb
dec
ficomps
xchg
add
or
fsubrl
cmp
nop
pop
arpl
sbb
cmp
repz
jp
adc
pop
and
mov
add
ret
push
shll
pop
into
out
sbb
push
mov
loop
xchg
mov
mov
or
mov
adc
pop
pop
movsb
mov
adc
cmp
insb
lods
pop
data16
pop
dec
repnz
movsl
adc
jo
lea
sub
sub
popa
xlat
and
fstps
stos
test
xor
push
push
fcomps
in
lcall
jno
movsb
xlat
sub
xchg
stc
arpl
int3
fbld
movsl
js
ljmp
pusha
addr16
les
pop
sahf
pop
arpl
rorl
insl
inc
in
push
pop
push
lock
xchg
ljmp
rcrb
pusha
out
sbb
xchg
and
lret
jle
icebp
stos
mov
addr16
neg
fisubl
or
cs
adc
mov
push
jge
add
addr16
fdiv
imul
enter
dec
or
xor
mov
jl
and
mov
rorl
push
xchg
ror
xlat
xchg
mov
mov
mov
push
into
shrl
xchg
pop
mov
ds
cwtl
xor
pop
into
push
xor
gs
sbb
and
ds
xchg
popa
and
mov
leave
pop
icebp
aam
ret
and
adc
cmp
sbb
jecxz
xor
xor
clc
jmp
hlt
imul
lret
or
hlt
xchg
mov
push
lret
lret
dec
in
jmp
call
or
sbb
mov
adc
nop
add
sub
lcall
std
mov
lds
pop
xchg
in
mov
out
pop
pop
push
cmpsb
pushf
sarb
lock
add
jg
test
ljmp
ficompl
jae
fucomip
pop
mov
loop
add
nop
pop
outsb
int
xorl
ja
fsubs
test
call
ret
aas
loope
mov
or
inc
mov
mov
sub
xchg
es
mov
stos
cmp
stos
icebp
dec
jne
pop
jbe
push
or
dec
inc
enter
rcrl
lods
shrl
nop
pop
and
xor
pop
add
inc
pusha
adc
pop
jns
adc
dec
lods
ffree
daa
inc
or
mov
out
bound
jle
mov
pop
xor
mov
fwait
xor
xor
cmp
jp
pop
imul
js
shl
loope
pop
call
lods
daa
pop
gs
xchg
test
pop
popf
jne
cli
inc
adc
xor
fsts
rcrl
add
xor
mov
fstl
pop
jp
mov
mov
mov
dec
push
sub
pop
ss
faddl
jne
jnp
xchg
and
rcll
clc
mov
jp
stc
and
or
int3
bnd
xchg
cmpb
loopne
inc
inc
mov
stos
out
jnp
push
xchg
aas
dec
insl
jl
sbb
inc
dec
xor
fcomi
jnp
add
dec
pop
or
dec
jae
jg
addb
mov
push
pop
or
mov
fildll
xorl
push
mov
out
ljmp
je
jno
cwtl
and
test
leave
out
es
pop
mov
dec
mov
aaa
cmp
mov
int
jb
ds
jb
push
enter
hlt
aaa
lcall
xor
dec
pop
cmp
or
cmpsb
xchg
jl
and
test
insl
sub
daa
daa
pop
or
sti
and
lods
adcb
out
lahf
inc
dec
mov
sbb
or
cs
or
les
notb
mov
insl
repnz
sbb
lods
push
adc
xrelease
mov
insb
bound
mov
adc
mov
inc
inc
std
mov
xor
add
mov
xor
shlb
pop
shrb
int3
cmpl
push
ds
insl
es
pop
cmpsl
push
mov
or
mov
push
insb
or
push
push
scas
rcl
bound
jge
ret
jnp
xchg
test
sub
loop
inc
mov
ljmp
es
sahf
xor
adc
ret
pop
filds
cmp
xchg
sbb
inc
lahf
lea
lds
mov
xor
filds
scas
push
out
cmp
cmp
mov
rol
js
push
add
out
mov
adc
jmp
les
mov
xchg
pop
mov
cmp
sbb
or
mov
inc
imulb
lahf
out
pushf
xor
pop
fwait
scas
add
data16
xor
dec
mov
imulb
sbb
gs
xchg
nop
pop
popa
out
popa
mov
and
cmp
repnz
lods
pusha
pop
nop
add
stos
std
jae
dec
stos
jbe
cmc
add
xor
pop
mov
xorl
push
or
mov
mov
loope
push
fmuls
jns
add
popf
sub
loope
mov
lcall
mov
jl
lret
lahf
rorl
test
cmp
jnp
cmp
pop
add
inc
ss
scas
pop
aad
mov
mov
and
ss
bound
decl
in
sub
xchg
ja
in
dec
sbb
xor
xchg
and
cwtl
inc
mov
out
mov
dec
sub
inc
pop
push
jp
adc
fs
or
cmp
sahf
sbb
xor
addr16
leave
fists
dec
xchg
or
and
addr16
in
cmpsb
mov
ljmp
sbb
pop
push
nop
popl
pop
into
jnp
and
sub
add
ljmp
cmc
xchg
imul
xor
loop
push
sub
ss
mov
mov
sbb
aas
loope
pop
ljmp
call
pop
lret
inc
pop
push
lret
aam
pusha
xlat
jp
xor
loop
adc
mov
das
movsl
mov
roll
mov
inc
or
lock
mov
iret
ret
mov
or
sbb
or
xor
popf
cli
scas
out
dec
bound
or
mov
sub
ret
xchg
sbbl
je
lds
push
aad
xor
xor
mov
pop
int3
jecxz
and
lret
mov
dec
and
std
scas
ljmp
pop
xchg
aas
in
fldcw
cltd
insb
cmc
mov
js
xorb
push
sub
mov
test
mov
call
add
mov
test
push
fildl
cli
test
fimull
jae
xchg
mov
testl
xchg
in
pop
out
out
mov
pop
push
andb
mov
cmp
test
adc
sbb
inc
push
fs
xchg
mov
cmp
loop
jle
stc
jp
add
or
sarl
xor
mov
in
xchg
mov
mov
into
loopne
mov
stc
jne,pn
mov
pushf
pop
mov
xorb
adc
mov
dec
mov
push
into
adc
aad
cmpsl
in
push
ja
mov
adc
pop
jne
xchg
mov
inc
fs
inc
adc
hlt
xchg
repz
jecxz
push
mov
inc
or
mov
add
mov
sub
test
add
inc
mov
fsubrp
mov
xor
inc
and
sub
cmp
inc
test
add
inc
fdivrl
aad
jo
bnd
sbb
pop
cld
push
in
mov
push
daa
in
mov
movsb
jmp
outsb
fsubl
pop
lods
push
scas
add
test
or
cwtl
ds
pop
aas
push
sti
jp
cmp
adc
push
mov
mov
pop
stos
test
mov
cli
push
xor
and
test
push
jae
add
jmp
fcmovu
outsb
mov
aam
and
leave
jno
adc
cmp
mov
xchg
mov
or
xor
cmc
sahf
fadds
imul
xor
gs
xchg
lcall
push
xorps
arpl
inc
nop
lods
jnp
jns
es
jno
jae
shl
pop
mov
add
sub
xchg
jne
fs
ret
push
mov
test
call
rclb
and
cli
mov
out
fistpl
adcl
fnstcw
fwait
and
mov
mov
inc
les
out
fmuls
fimuls
or
pop
add
add
in
push
mov
in
les
inc
imul
jbe
bound
pop
stos
jge
movsl
in
and
xor
popa
into
sub
inc
movsl
mov
pop
std
pop
les
loopne
jecxz
xchg
add
inc
ds
outsb
and
aam
mov
jbe
leave
push
mov
cmp
cltd
jge
jmp
push
add
in
bound
js
call
sar
leave
daa
cmpsl
out
and
out
mov
pop
jae
or
mov
or
call
dec
dec
cmp
xor
sub
movsb
outsl
stc
push
incl
sub
aam
jge,pn
into
mov
enter
and
pop
dec
mov
push
push
fwait
jae
fs
xchg
fisubl
popf
cld
lods
xor
mov
mov
dec
xchg
jno
dec
add
mov
sbb
daa
xchg
mov
push
scas
and
lods
es
fmull
dec
sub
mov
js
push
cmpsb
pop
fcomip
fcoms
cld
sbb
insb
lock
inc
les
loopne
sbb
cltd
pop
sbb
sub
mov
sub
movl
outsl
adc
sub
stos
xor
aam
cmp
sbb
sbb
int3
decb
fbld
clc
xchg
cmp
jmp
scas
xchg
loop
ja
out
popa
xor
cmp
lret
fs
cmp
xchg
orl
inc
frstor
pop
xchg
xchg
xchg
out
pop
notb
jno
cmp
daa
aad
cmpsb
ffree
adc
nop
clc
cmp
loope
outsb
or
out
push
cmc
decb
fiadds
es
ret
xchg
sub
js
loop
push
fcomp
add
das
pop
mov
jnp
mov
imul
shll
and
push
xorb
negl
test
adc
loope
push
leave
lock
stos
sbb
out
call
sbb
xchg
xchg
xor
push
lret
xor
outsl
ds
imul
and
mov
sub
sbb
dec
xchg
add
push
sarb
mov
ficoml
dec
loop
cmp
xchg
ljmp
ucomiss
adc
cmpl
mov
jge
mov
scas
sti
into
fst
fs
xchg
sub
sbb
sub
test
aam
sarl
std
inc
jle
rclb
orb
mov
imul
jp
dec
ljmp
jnp
cmpsl
aad
out
in
les
shlb
sbb
rol
dec
mov
daa
in
rclb
push
aam
scas
sti
es
stos
pushf
aam
test
push
repnz
lret
sub
dec
addr16
stc
add
test
jb
lret
mov
cmp
fs
inc
out
out
adc
pusha
add
js
pushw
sbbl
das
and
iret
mov
mov
jbe
and
scas
adc
add
nop
xchg
sbb
pusha
cmpsb
dec
scas
sti
call
aas
inc
dec
dec
ss
fs
sub
test
js
xorl
mov
data16
cmc
adc
cmp
dec
dec
out
mov
dec
inc
sahf
int3
cmp
hlt
xor
adc
xchg
pushf
mov
pusha
and
sub
lahf
fcmovnu
ljmp
stos
adc
aaa
stos
hlt
icebp
cmp
jb
push
lea
sub
aaa
mov
cmp
adc
xor
test
xor
addr16
rol
fsubrs
lds
inc
mov
adc
movsb
mov
sahf
sub
rcl
in
inc
jp
jl
rcr
jecxz
inc
comiss
cmp
aas
outsl
movsl
ficoml
ss
push
fwait
mov
or
pop
push
xchg
mov
cmp
push
shrb
add
pop
sub
and
cltd
scas
lret
clc
inc
xor
and
es
add
jmp
cmp
loop
stos
jg
ljmp
loop
dec
mov
insb
movsl
mov
ret
sahf
ljmp
mov
mov
pushf
sbb
and
inc
adc
mov
jg
les
push
fcoml
cmpsb
adc
and
loope
cmc
pop
repz
movlps
fimuls
rorl
enter
inc
mov
loopne
mov
in
inc
mov
and
bound
dec
outsl
arpl
js,pn
push
test
decl
loope
jge
imul
mov
push
jne
test
sbb
jb
mov
mov
mov
popl
add
mov
movsl
ret
movsl
jns
add
dec
jno
sub
xchg
jecxz
jns
pop
cmp
rcrb
jbe
daa
or
pop
icebp
dec
pop
push
inc
shll
lahf
sub
outsb
xchg
stos
cmp
push
xchg
jecxz
push
mov
dec
jns
adc
jo
adcl
out
sub
jl
aam
aas
fstpt
or
out
and
gs
ljmp
rorl
jns
loop
xchg
mov
xor
ret
int
and
mov
enter
cwtl
adc
sti
ds
pop
dec
sub
and
mov
cmp
pop
mov
adc
data16
popa
cmp
popf
jmp
loope
adc
pop
cmp
add
mov
pop
push
pop
or
add
pop
psrld
adc
jl
cmp
or
gs
dec
xchg
ret
cmp
jmp
xchg
or
xor
push
pop
xchg
int
sub
push
jle
andb
ret
inc
mov
int
jmp
outsb
inc
js
or
out
push
cmp
jno
pop
mov
arpl
bound
mov
aaa
insb
xor
dec
shl
aaa
fimull
xchg
movsl
aaa
arpl
mov
in
fadds
cmp
nop
xor
cmp
out
xchg
adc
xlat
pop
sub
loope
xchg
pop
mov
xor
cmp
imul
mov
xchg
in
fildll
test
jae
lds
sub
loop
in
mov
outsl
dec
push
or
insb
sbb
inc
xchg
jmp
xor
int
jnp
push
pusha
test
mov
in
add
icebp
out
das
jp
rcrb
and
das
ds
flds
sub
aam
sub
xor
xlat
pop
xor
ja
mov
push
mov
rcrb
test
fwait
lcall
mov
xchg
pop
test
scas
loopne
mov
fimull
push
js
fistpl
push
jae
cmc
sbb
das
inc
movsb
pop
rorb
inc
shlb
outsl
push
cs
jl
idivl
data16
xchg
stos
mov
cmpsl
jb
fbld
cmpsb
pushf
les
xor
rcrl
mov
icebp
ja
outsl
sub
sbb
push
mov
fcmovne
adc
test
hlt
add
push
mov
xchg
shlb
popa
ffree
loopne
mov
out
fiadds
jo
and
stos
outsb
mov
jns
cmp
jnp
loopne
data16
mov
dec
xchg
inc
mov
jecxz
push
into
pushf
dec
movsl
sub
cmc
xor
test
fnsave
push
je
push
push
and
stc
int
in
jmp
or
shll
push
mov
adc
ds
or
aas
and
mov
push
mov
iret
ljmp
lods
cmpsl
jno
andb
mov
sbb
lds
sbb
mov
sub
push
pushf
dec
imul
sbb
movsl
dec
fs
popa
xor
cmpsl
ljmp
fdiv
in
bound
push
and
cmp
and
mov
jno
xor
mov
cli
xor
movsb
data16
fwait
outsl
pop
je
cmpsb
push
cmp
repnz
xchg
xchg
hlt
cs
cmp
daa
sub
lods
mov
out
inc
stc
dec
or
xor
insl
sbb
dec
mov
push
ds
inc
mov
adc
adc
and
lock
cwtl
gs
mov
mov
int
pop
fcoms
adc
mov
mov
sub
add
fsubr
xor
mov
dec
push
inc
movsl
in
or
adc
sbb
stos
lret
push
xchg
jmp
pop
mov
cmpsb
fisubrl
ret
shrl
add
adc
stc
les
push
xor
add
into
xor
push
sbb
in
repz
dec
inc
mov
xorb
mov
mov
mov
lods
loop
mov
mov
shlb
aad
pop
xchg
rcrb
and
cmp
fildl
and
and
out
jns
xchg
and
mov
std
stos
sub
add
jno
pop
call
cmc
rolb
cmp
push
in
roll
sub
das
loopne
fidivs
popa
xlat
ret
hlt
adc
into
and
clc
sub
mov
xchg
cmpsb
add
rorl
into
test
adc
or
mov
pop
icebp
sub
and
mov
or
cld
pminub
push
cmp
into
xor
cmc
mov
push
cmp
ret
fnstsw
call
pop
xchg
mov
dec
and
movsl
mov
pop
mov
xchg
mov
cmp
pop
mov
xchg
mov
int3
sbb
or
mull
movsl
daa
jecxz
inc
fwait
mov
mov
dec
in
add
jb
sbb
std
inc
push
fwait
lods
lock
outsl
lock
fcompl
insl
bound
jmp
nop
outsl
cmc
daa
or
stos
test
dec
dec
jbe
sub
divl
push
outsl
scas
out
push
repnz
pop
or
lods
rcll
mov
das
inc
xlat
pop
lea
mov
push
loop
shlb
mov
or
jbe
ds
into
jmp
cmp
arpl
and
mov
mov
add
ljmp
pushf
sub
xchg
push
fisubrl
jle
push
adc
sbb
push
loope
mov
jecxz
pop
leave
ret
scas
shlb
dec
test
mov
cmp
aad
outsl
lock
and
xchg
fistps
imul
bound
fcompl
pop
leave
pop
jmp
xchg
xchg
push
sub
lds
pop
push
fnstenv
jbe
or
insl
out
adc
movsl
mov
sbb
mov
pop
cmp
daa
push
inc
and
cli
inc
shrl
sbbb
dec
in
dec
or
xchg
mov
push
out
fwait
mov
xor
cwtl
mov
fidivrs
mov
xchg
and
xor
stos
mov
inc
cmp
fninit
shl
test
cli
stc
xchg
pop
jbe
cmp
inc
rcrl
inc
adc
popa
cmpsb
cwtl
lods
pushf
ficomps
shl
popa
test
xchg
clc
xlat
add
dec
pop
in
test
cmp
jns
fnstcw
push
mov
popl
arpl
roll
lcall
cld
xchg
fdivrp
es
daa
adc
push
jmp
and
add
pop
lds
fadd
mulb
bound
push
xchg
fsts
mov
stc
sub
jae
ds
outsb
scas
mov
cmp
sahf
inc
data16
cmc
xchg
xchg
mov
cmpsb
into
sbb
jno
pop
sub
mov
add
addr16
fsub
mov
jbe
neg
ret
loopw
test
rorb
out
push
pop
scas
jecxz
aam
or
and
lret
or
shll
dec
cmpsb
sbbl
dec
mov
xor
pop
add
inc
stos
fildll
add
pushf
lods
aad
dec
shrb
sbb
xchg
pop
bound
xor
popf
js
pop
fistps
push
stc
or
data16
dec
push
mov
or
sub
out
les
mov
dec
rorl
and
fistpl
xchg
aam
or
ds
sti
lods
addr16
notl
and
mov
xlat
sub
lret
sbb
out
mov
cmp
pop
sub
mov
scas
ds
daa
cwtl
inc
sbb
cmp
stos
adc
sbb
aad
dec
mov
adc
out
xor
or
rcrl
movl
arpl
icebp
cmp
ret
sahf
mov
xchg
push
hlt
mov
ds
lea
jl
outsl
push
into
leave
sbb
ljmp
ljmp
mov
pop
scas
inc
xchg
add
jp
mov
add
or
leave
scas
xchg
and
hlt
iret
pusha
fstl
aad
mov
bound
inc
jne
pushf
sbb
shrb
cwtl
push
repnz
lret
lret
cld
adc
js
cmp
cmp
ret
js
dec
ljmp
push
cltd
cmp
mov
lret
mov
stc
stos
pop
inc
xchg
mov
jge
insb
inc
sbb
jle
push
add
pop
sub
adc
test
cmpsb
data16
xor
incl
push
stc
insl
push
mov
scas
hlt
int
xchg
loop
rcll
adc
push
mov
hlt
or
dec
push
adc
jae
inc
xor
sbb
sarb
jmp
mov
inc
leave
sub
lcall
lock
mov
push
cltd
mov
jp
lods
mov
cmp
fwait
lds
inc
jae
fxch
sbb
cmp
lea
mov
lret
cmp
fldcw
and
jg
adc
int3
adc
cmp
jle
sbb
movsb
mov
dec
dec
outsb
pop
mov
clc
jle
imul
fstpl
and
dec
mov
adc
ficomps
mov
popf
xchg
push
lahf
and
cmp
mov
sti
xor
jge
and
push
mov
push
dec
shll
fsubrl
fbld
mov
mov
out
sbb
sbb
mov
aad
push
movsb
xchg
sub
fcoms
mov
rorl
or
daa
jb
mov
xor
push
pop
cmp
add
mov
faddp
cmp
pop
jno
ficoms
cmpsb
fsubrl
inc
aam
insb
cmp
inc
fdivrs
pop
call
daa
and
inc
aaa
mov
insb
xor
mov
sahf
pop
mov
jmp
xor
mov
dec
xor
and
mov
mov
fmul
jge
js
xlat
aaa
dec
popf
fsubl
ss
cwtl
inc
dec
jle
pop
push
xor
mov
sbb
loopne
nop
outsl
push
movl
xchg
inc
sahf
push
lods
stos
mov
ficompl
test
clc
sahf
cmpsb
int3
jl
push
inc
mov
jg
mov
cmc
cmpsl
aam
mov
lret
int3
cmp
and
std
test
dec
mov
sub
aad
cld
push
mov
jo
xor
adc
mov
int3
enter
mov
cs
sub
icebp
fisubl
adc
stos
es
xlat
sbb
les
jecxz
outsl
shl
loope
filds
inc
pop
in
xor
imul
sub
inc
inc
shll
fsubrs
mov
dec
insb
inc
std
lods
dec
jo
fadds
mov
pop
in
test
xor
mov
dec
or
insb
or
push
into
pop
pop
or
mov
xchg
xchg
int3
pusha
dec
dec
je
call
jbe
sahf
xchg
xchg
xor
scas
xor
or
out
cmp
adc
push
wrmsr
xor
mov
and
cs
scas
pop
shll
add
cwtl
push
sub
iret
push
popa
sub
pushf
mov
mov
push
mov
mov
adc
push
dec
shrb
popa
loopne
loope
daa
repz
or
into
rcrl
cmp
adc
xchg
cld
in
loopne
test
test
rcll
std
shrl
and
fwait
pushf
insl
mov
adc
sub
imul
pop
xchg
xor
add
sub
int3
jae
jnp
pushf
add
mulb
leave
add
or
sarl
shll
push
lods
xor
fsubrl
ja
and
xor
stos
incl
sbb
sub
loop
insl
ret
jnp
das
jg
pushf
scas
add
dec
jbe
outsb
test
xchg
pop
push
or
lcall
sbb
and
imul
data16
pushl
pop
ljmp
dec
ret
roll
dec
sub
mov
mov
jle
imul
loop
ljmp
xchg
leave
dec
push
dec
xchg
jl
inc
jle
jno
lea
outsl
jmp
pop
sti
xchg
popf
ret
fwait
adc
leave
clc
ret
mov
cmp
push
mov
push
int3
cmp
shll
loopne
movsb
mov
push
and
rcrl
sbbb
sbb
lahf
lahf
adc
dec
imul
out
lret
stc
stos
add
in
cltd
stos
mov
mov
jp
pushf
sub
jno
cmp
jecxz
gs
pop
les
xchg
jb
fwait
testl
jae
cmp
mov
daa
mov
add
cmp
sbb
in
or
xchg
outsl
push
test
pop
push
adc
lods
sub
lret
aaa
popa
sbb
fisubrs
mov
push
mov
xchg
aam
push
and
or
mov
aaa
outsb
loope
and
aas
inc
test
cli
mov
cs
mov
jle
popf
aas
sub
lods
xchg
push
and
call
dec
call
lds
adc
inc
jmp
lods
sub
pop
xchg
loope
out
pushl
in
dec
lods
std
icebp
cmpb
sub
jp
test
aam
lock
sub
outsl
mov
xchg
aaa
lods
pop
xor
call
mov
mov
pop
pop
adc
pop
jg
stos
fs
lods
testl
test
fs
inc
movsl
inc
pop
shll
xchg
xor
cmp
test
jns
or
and
jmp
sub
icebp
mov
and
insl
pop
daa
fsubrs
sub
xchg
gs
test
in
mov
jbe
pop
mov
pop
insl
pop
push
jno
xlat
movsb
fdivrl
and
jl
iret
test
js
mov
or
add
pop
jb
aas
je
das
loopne,pt
fcompl
dec
jecxz
fs
mov
mov
fldt
std
hlt
imul
lret
mov
cmp
sbb
scas
dec
xor
add
sub
movsb
pop
and
mov
pop
sbb
dec
cmc
add
add
pop
xlat
popf
mov
push
jns,pn
ss
pop
aad
mov
add
clc
jne
inc
loopne
test
arpl
int3
pushl
pop
mov
loopne
and
cmp
jbe
cld
dec
mov
push
and
loop
mov
ficoml
sub
pop
jns
cmpsl
mov
add
mov
jb
cmp
jb
aam
loop
jp
mov
mov
or
inc
adc
sbb
fisubl
or
mov
add
stc
jae
enter
mov
dec
je
orps
jnp
jbe
in
add
adc
insb
ret
movsb
pop
loope
test
mov
pop
pop
cmp
inc
sub
cwtl
and
jecxz
dec
xor
insb
jl
ret
jmp
pop
shrb
adc
or
insl
imul
fiadds
outsl
ret
or
xor
xchg
ss
stos
in
aaa
or
popa
ret
stos
add
sub
dec
data16
dec
jle
dec
push
daa
enter
inc
bound
jae
data16
in
mov
fnstcw
out
sub
fisttpl
imul
js
fmul
cmp
add
lods
xchg
or
mov
aam
xor
mov
inc
iret
lods
push
bound
loopne
clc
adc
jl
adc
imul
cmp
fcoms
mov
stc
aam
cmpsl
cmpsb
jne
enter
mov
leave
cmpsb
push
and
mov
scas
xlat
or
movsb
andl
and
sti
in
push
out
or
push
pop
ffree
dec
in
or
lret
stc
mov
cmp
mov
mov
sbb
jle
outsb
int
pop
adc
insb
insl
lock
mov
test
test
cmp
inc
inc
mov
cmp
inc
scas
fnstcw
out
adc
pop
cli
pop
imul
pop
pop
pop
dec
icebp
sub
pop
mov
push
call
lods
cs
iret
lods
loop
fcomps
push
std
test
sbb
mov
es
mov
ret
arpl
lods
pop
pop
jb
pop
pop
jnp
lret
add
out
rol
sub
in
add
mov
sub
xor
les
ret
xlat
fcoml
sub
popf
cmp
es
test
cs
out
xor
xchg
dec
daa
lcall
fisubrs
jns
jb
out
sub
mov
rolb
push
xor
in
or
imul
xor
and
jo
jb
xor
rorl
inc
xor
sub
addb
mov
bound
enter
lahf
jbe
dec
and
in
in
add
jno
mov
and
out
ds
int3
movsb
mov
loopne
cmpb
dec
fmulp
cwtl
fldt
enter
sub
lock
cmp
jmp
ja
mov
sub
jnp
test
mov
jb
push
mov
xchg
bswap
lods
dec
insl
dec
jmp
push
mov
and
sbb
add
adcl
stos
and
xchg
out
clc
loope
adc
mov
fcom
jae
sub
jae
out
mov
movsb
pop
cmpsb
rcrl
mov
and
pop
jmp
add
vpminsw
mov
push
mov
pusha
push
xchg
inc
xchg
loopne
xchg
lods
mov
push
or
sbb
push
fistps
imul
sti
lret
xor
add
shlb
add
sbb
rcl
mov
aam
je
sub
xor
loopne
iret
dec
mov
xchg
aas
push
mov
sub
add
sub
mov
stos
xor
cs
mov
rolb
das
and
aas
orl
xchg
mov
lods
pop
sbb
inc
xchg
and
inc
out
jb,pn
sub
js
arpl
mov
xlat
out
pop
cld
lret
and
cmp
rcll
push
cmpsb
mov
iret
mov
jmp
lcall
adcb
out
mov
jp
sub
rcl
lcall
pop
sbb
mov
xor
jno
mov
inc
adc
and
push
mov
loop
aas
jno
pop
inc
hlt
inc
add
pop
xor
pop
mov
iret
les
lret
push
inc
decb
cmp
rcl
push
stc
inc
mov
stos
rcrl
push
test
mov
fcom
xlat
add
sub
push
dec
outsl
mov
jns
shll
fisttpl
sub
rcl
icebp
cmpsl
les
xchg
in
cmp
dec
jo
adc
sbb
push
inc
div
inc
cmp
movsb
popa
jae
dec
mov
push
int
les
arpl
test
add
shll
sub
dec
pop
push
lds
or
xor
xchg
jae
fcmovnb
in
aaa
ja
mov
stos
push
nop
imul
sbb
into
pop
fadds
inc
out
xchg
orl
lods
fildl
dec
rcr
push
xchg
dec
or
in
imul
outsl
imul
repz
push
stos
insb
lds
in
cmp
test
fiaddl
insb
fcoml
mov
jp
ljmp
ficoms
lret
push
rorl
rcrb
lea
add
and
mov
addl
jmp
mov
test
scas
inc
gs
mov
sub
dec
scas
test
mov
pop
inc
mov
and
ds
les
decl
dec
notb
adc
push
leave
popw
xchg
ss
mov
and
add
sbb
ds
jo
test
sbb
daa
pop
sbb
popa
dec
push
pusha
ss
lods
pop
ret
xor
mov
xor
lods
xchg
cmpsl
outsb
std
or
out
mov
rorb
push
mov
dec
call
sbb
jmp
stos
loopne
bound
xchg
dec
inc
loope
jno
sbb
dec
stos
mov
repz
es
sbb
add
jnp
sub
jg
rcrl
fnsave
fisubrl
out
cli
out
stc
out
and
cltd
cmp
subl
clc
pop
and
mov
adc
jne
add
cmp
insl
add
clc
insb
lea
in
imul
mov
adc
aaa
outsb
pop
sarb
xor
sub
dec
hlt
out
bound
dec
or
mov
fstpl
mov
push
adc
cmp
clc
mov
fstpt
adc
aaa
popa
jb
push
or
jb
sbb
repz
jno
inc
push
pop
scas
push
scas
pusha
and
sbbb
mov
sbb
xchg
mov
lock
stos
or
add
lahf
lds
mov
lds
cmpsl
testl
pop
mov
fdivs
xor
and
imul
push
mov
inc
ljmp
int
ror
icebp
sub
dec
test
sub
mov
aad
sbb
dec
mov
rclb
fwait
or
sub
pushf
push
cmp
or
push
mov
mov
popf
pop
cmpb
xor
in
sbb
aas
fidivrl
jge
adc
xlat
adc
mov
cmp
aam
pop
adc
fldenv
int3
daa
push
lret
pop
rclb
js
jae
enter
sub
mov
scas
pop
fsubl
jmp
cwtl
sub
push
dec
aas
out
fistps
sahf
jge
jnp
loopne
bound
push
jl
out
adc
fstpl
leave
jle
jno
aaa
mov
mov
mov
fwait
xor
iret
movsl
jbe
sti
push
lea
inc
pop
inc
int
popa
out
ret
and
scas
pop
je
dec
mov
inc
cltd
sbb
lret
mov
iret
aad
mov
cmp
test
cltd
test
sbb
inc
test
hlt
and
push
cs
imul
jno
rorl
and
xor
mov
inc
repnz
xchg
add
ss
das
mov
mov
arpl
outsl
jge
mov
adc
or
sbb
les
ficompl
mov
add
xor
dec
shlb
inc
cld
or
ret
or
imul
popf
shrb
sub
mov
mov
addb
inc
jmp
test
or
pop
push
shl
and
sub
ljmp
orb
sub
cmp
cmp
lods
sub
in
mov
clc
mov
push
add
dec
in
adc
adc
ja
clc
aad
add
xchg
jne
nop
mov
and
fs
xor
mov
jp
leave
or
outsb
sub
data16
pop
mov
aaa
adcb
lock
daa
xchg
cmp
cmpsb
lods
outsl
icebp
stc
sub
mov
lods
adc
andb
mov
mov
sahf
mov
jae
sbb
sbb
lock
vpsllw
sub
test
adc
int
mov
cmp
les
mov
sub
hlt
idivb
into
pop
leave
into
divl
dec
jg
int
jae
insb
pop
sub
mov
inc
xorb
jle
adc
cmpsl
add
or
clc
je
lds
mov
sbb
cmp
cmp
and
cmp
sti
and
jmp
pop
testb
std
lods
xchg
negb
ret
ficompl
es
test
push
xchg
xor
clc
leave
pop
cmc
sbb
cltd
sbb
jne
push
add
faddl
cmp
ljmp
lea
movsl
sbb
xor
outsb
sbb
bound
fnstcw
inc
dec
inc
xor
pop
jo
push
fdivl
test
and
cmpsl
sub
test
mov
fwait
cmpsl
dec
in
test
stc
sub
fnstsw
mov
lea
das
mov
mov
dec
cmc
cmpb
loop
sbb
mov
mov
pop
scas
dec
cmc
icebp
xor
dec
cltd
leave
in
mov
push
mov
xor
xchg
push
inc
cmp
push
mov
sbb
out
jnp
ds
jecxz
mov
cmp
insl
shrb
pop
add
mov
sbb
xor
fildll
pop
lret
jg
fwait
imul
lds
sarl
mov
dec
dec
fcomp
push
xor
and
xchg
loopne
out
insl
push
push
addl
mov
les
xchg
jle
movzwl
fnsave
lcall
push
sub
sbb
rorb
sbb
jmp
popf
movsl
daa
loop
push
ljmp
xchg
xchg
mov
pop
mov
add
pop
lcall
test
xor
movsb
pop
sub
mov
push
jle
mov
jecxz
sahf
sub
mov
jmp
je
insl
ss
xchg
cmp
mov
mov
xchg
movsl
jne
out
fwait
dec
test
pusha
scas
inc
jmp
mov
pushf
aas
mov
sbb
mov
sahf
adc
xchg
inc
sbb
inc
push
pop
dec
mov
testl
imul
xchg
fincstp
lret
fadd
stos
loop
sub
pop
push
lret
lahf
add
push
adc
xchg
loop
adc
jo
sub
repz
adcl
lcall
xor
sbb
repz
mov
and
lret
jb
and
add
movl
pop
stc
xor
cwtl
sarb
push
dec
jecxz
cmc
mov
mov
das
roll
mov
cli
fnstcw
lcall
add
cpuid
cmp
mov
outsl
cmp
inc
loope
pop
jae
scas
insb
test
jmp
inc
add
dec
loope
loop
sahf
mov
add
les
lret
sbb
xchg
add
loope
mov
into
into
jns
sub
imul
fdivrl
and
int
xor
adc
inc
mov
movsb
cmpsl
or
nop
add
popf
add
lods
and
out
hlt
inc
arpl
and
xlat
push
hlt
dec
ds
mov
add
lret
call
pop
pop
mov
cmp
push
pop
ret
dec
sub
pop
jle
lods
decl
icebp
ret
nop
lods
mov
bound
mov
mov
adc
adc
xor
mov
aaa
sarb
stc
pusha
je
enter
dec
add
dec
aas
ja
push
inc
push
sbb
or
cmp
mov
imul
icebp
push
adc
test
aad
aam
jno
mov
and
add
adc
sbb
push
and
pusha
sti
xor
inc
pushf
mov
add
sbbb
pop
sub
es
dec
mov
nop
mov
dec
xorb
shrl
xchg
repnz
dec
fcoms
cmp
loope
mov
aam
sbb
ret
inc
cmp
sbb
aam
mov
cmpsl
gs
adc
lcall
sbb
mov
or
cld
aam
std
and
cmp
lea
int3
imul
icebp
mov
ds
hlt
dec
xor
xchg
xor
jl
fimuls
imul
aam
in
aas
mov
or
lea
or
inc
call
or
fwait
test
aaa
cmp
imull
movsl
push
les
fstpt
stos
sbb
bound
ret
mov
inc
jl
es
in
cmp
dec
loop
jb
sub
cmp
add
sbb
mov
and
pop
lods
mov
inc
int3
negl
sbb
inc
xor
loop
xor
pop
or
repz
mov
add
std
push
add
inc
adc
mov
fwait
out
out
fs
data16
mov
iret
popa
and
jne
dec
mov
mov
sub
pop
xchg
ror
xor
pop
mov
jmp
arpl
loope
shll
xchg
ds
loopne
jnp
rcrb
or
inc
or
mov
sti
inc
xor
pop
mov
out
add
fwait
repnz
imul
out
pop
movsl
mov
mov
push
cwtl
rorb
movb
or
xchg
add
out
mov
and
stos
push
pop
arpl
mov
jg
das
imul
pop
aaa
add
stc
jno
out
xor
xchg
dec
pop
mov
inc
xchg
adc
mov
aad
rcrl
xor
fstpt
stc
scas
lods
pop
in
add
xor
sahf
addr16
lds
sub
hlt
mov
test
jecxz
push
jne
repz
and
pop
stos
sbb
mov
xor
mov
sub
ffreep
cmp
cmp
je
mov
sbb
xor
inc
sti
mov
mov
cmpsb
xor
dec
inc
dec
in
decl
jb
aam
in
hlt
out
mov
push
pop
lods
mov
imul
hlt
aaa
stos
push
pushf
pop
or
adc
inc
mov
and
dec
subb
ds
and
incb
push
dec
mov
xor
xchg
std
add
popa
mov
sti
push
cmc
xchg
int3
add
push
hlt
push
dec
mov
out
push
ret
fnstsw
imul
mov
cltd
push
mov
movsl
aaa
adc
cmp
icebp
adc
xchg
pushf
push
pop
push
movl
mov
xor
popa
pop
in
out
push
in
lock
test
mov
lods
imul
mov
xor
pop
push
push
into
pop
mov
arpl
fstpl
shr
jno
dec
mov
je
adc
hlt
mov
adc
imul
roll
into
in
or
gs
mov
add
add
rclb
sti
inc
ja
int3
int
out
fcoml
loope
cld
fs
mov
mov
mov
arpl
and
icebp
mov
orb
out
sub
lret
or
xchg
addr16
and
xlat
outsb
and
cmp
popa
jnp
ljmp
jmp
cmp
ds
mov
nop
and
cmp
in
and
xor
cmp
add
fsubs
sub
fnsave
cmp
adcb
push
dec
scas
mov
das
cld
mov
imul
jp
or
jo
cmp
push
mov
ficoml
div
mov
lret
and
mov
and
adc
repnz
xor
sub
addr16
movsb
lods
inc
cmpsb
lret
dec
dec
pop
ds
das
jae
rcll
jo
shll
sbb
or
dec
loop
mov
in
push
fdiv
cld
cmp
imul
lret
xor
add
dec
inc
fcoms
jae
cmp
sarl
ljmp
mov
aad
jno
cmp
jmp
nop
xlat
or
and
pushf
pusha
xchg
stos
in
pop
inc
jmp
mov
adc
add
ja
and
push
sbb
mov
cmp
mov
jg
ror
or
jo
fwait
int
dec
or
mov
jg
jg
daa
inc
mov
push
mov
push
mov
xchg
pop
pop
cmc
loopne
mov
mov
out
dec
rclb
les
mov
mov
xor
inc
jno
std
bnd
sub
daa
pop
cmp
xchg
and
lret
insb
sahf
test
mov
jp
pushf
jp
mov
iret
pop
or
fwait
push
adc
ds
push
imul
aad
sti
adc
xor
cs
iret
loopne
rclb
xor
sahf
sub
iret
and
nop
mov
adc
jne
add
sub
push
cmp
sbb
outsl
pusha
xchg
mov
sub
bound
mov
push
jmp
loope
cmp
inc
mov
cmp
or
xchg
ja
sbbl
xor
cmp
cmp
xor
in
mov
fstl
cltd
and
lcall
lock
cmove
sarl
mov
je
add
out
dec
lock
cmp
and
movsb
mov
push
bound
pop
mov
cld
clc
push
pop
mov
jmp
mov
pop
mov
imul
pop
aaa
movsl
cmp
cmp
xor
divl
xchg
cltd
mov
cmp
cli
mov
ss
pop
xor
icebp
mov
and
sub
fwait
sub
subl
or
std
popa
or
icebp
cmpsb
aas
mov
ret
add
xor
mov
test
push
nop
cld
pop
rcll
jne
aas
addl
inc
pop
add
out
pop
mov
idivb
mov
xor
mov
add
rcr
dec
in
ret
and
inc
pop
scas
scas
out
in
inc
test
and
or
jl
xor
insb
call
and
lea
mov
pop
lcall
pop
xchg
xchg
cmpsl
lret
mov
push
leave
loopne
stos
push
xchg
js
xchg
ljmp
mov
in
fcompl
sub
mov
scas
sti
icebp
dec
cmp
push
and
pusha
jmp
movsl
mov
lods
jg
and
dec
test
dec
loopne
dec
daa
inc
jo
inc
test
jnp
bound
int
push
mov
bound
add
xchg
in
sahf
adcb
cli
add
aad
xor
pop
jl
les
xchg
lds
jno
mov
inc
push
aas
insb
cltd
mov
jle
jge
mov
js
mov
outsb
dec
push
jno
and
popf
aas
push
loope
adc
js
sbb
mov
leave
test
into
mov
ds
mov
mov
movsb
push
ja
mov
out
stc
int
add
push
test
xchg
jmp
mov
jno
incl
mov
pop
in
adc
cmp
rcrl
bound
pusha
fs
push
push
stc
orl
xchg
jmp
cmpsb
or
lret
mov
scas
daa
pushf
pusha
nop
jb
add
pop
jg
imul
pop
adc
icebp
xchg
xchg
dec
sbb
jnp
cld
xor
jo
and
inc
cmpsl
scas
movsb
fucomi
pop
neg
arpl
mov
or
lret
pop
jmp
loop
test
ror
jne
das
and
mov
es
mov
mov
in
je
and
stc
fs
lds
out
dec
insl
xchg
aad
and
sbb
insb
pop
xor
cmpsb
pop
cli
cmp
mov
and
setge
pusha
repnz
ficoms
pop
add
mov
mov
out
push
add
jg
pop
js
xchg
push
cmp
adc
sbb
cmp
sti
push
aaa
or
pop
rorb
ja
cpuid
xlat
aad
stos
sbbb
dec
sarb
fisttpll
movsb
shlb
lcall
jnp
and
andb
mov
and
jbe
movsl
enter
lea
sbb
inc
cld
pop
pxor
test
cmpsb
lea
or
and
sub
fcoms
repz
imul
inc
pop
leave
sub
ret
arpl
fwait
push
pop
sub
fdivrs
push
les
push
imul
sub
push
dec
les
repnz
pop
sbb
inc
pop
xlat
pop
mov
mov
icebp
loopew
sbb
sti
out
aas
sub
stc
aad
stc
popw
and
xor
mov
xchg
and
call
cmpsb
cmc
fwait
cmp
inc
lock
xor
xor
xchg
and
test
insl
cwtl
push
pop
push
sub
dec
rolb
mov
and
int3
inc
ds
xchg
pop
and
sbb
js
pop
jb
ljmp
test
sahf
and
mov
and
mov
fldl
sbb
xchg
bound
je
push
inc
or
inc
add
test
fs
pop
mov
sub
arpl
ds
outsb
and
shl
lea
out
jae
adc
ja
mov
adc
sub
mov
imul
sahf
or
jbe
or
outsl
in
add
mov
pop
cmp
in
xchg
sbb
addl
cwtl
sbb
lock
int
sub
outsl
xchg
lahf
subb
xchg
or
test
scas
and
rolb
sbb
inc
rclb
ds
pop
daa
decl
xor
inc
aad
movsl
mov
inc
or
mov
dec
sub
adc
mov
out
pop
lcall
jne
sub
mov
in
jge
jp
lds
add
gs
inc
mov
dec
mov
in
sahf
fs
stc
imul
push
popf
aam
push
xchg
dec
int
icebp
sar
shlb
pop
sbb
mov
jo
jmp
scas
mov
jno
pop
dec
push
mov
pop
stos
adc
mov
inc
xlat
push
loop
aad
outsl
leave
push
in
xchg
nop
push
cs
aam
xchg
pushf
outsb
imul
sbb
inc
dec
push
out
pop
pop
xchg
sti
lds
scas
adc
cmp
stc
xor
imul
ret
and
push
or
popf
je
push
lret
add
cmp
dec
push
adc
rclb
outsl
xchg
mov
rcl
out
sub
sbb
clc
or
dec
aaa
mov
arpl
aaa
dec
out
jno
fldt
adc
push
xor
icebp
test
xor
add
adc
mov
jmp
cmp
cltd
scas
or
loop
xor
insl
rcll
sbb
ret
mov
pusha
fs
addr16
xchg
xor
stos
mov
or
fcompl
sbb
les
out
or
es
popa
dec
xor
sub
mov
call
mov
mov
xchg
adc
dec
hlt
dec
daa
add
idivb
cltd
clc
inc
stc
scas
rolb
jle
jae
out
inc
int3
push
jl
lock
add
sub
in
jae
loope
int3
inc
jmp
aas
stos
test
adc
outsb
arpl
shrl
push
pop
fnstsw
and
pop
or
jp
jl
das
push
add
jne
dec
jbe
jmp
dec
or
popa
negl
cmp
and
inc
mov
pop
aad
push
sbb
xor
mov
dec
cli
jg
dec
inc
push
and
shlb
out
aaa
dec
and
test
push
or
pushf
jp
pop
add
out
mov
aad
and
lock
lds
mov
dec
fbld
faddp
leave
out
cmpsl
add
mov
mov
hlt
sub
adc
push
imul
adcb
xchg
dec
cmp
fwait
popw
and
cmpps
loop
push
xchg
xchg
adc
or
ljmp
fsubp
sub
aaa
inc
or
roll
int3
cmpl
mov
cmp
adc
dec
push
iret
cld
cmc
and
out
das
lret
push
mov
mov
pop
ljmp
mov
lea
adc
xchg
adc
lods
out
shr
jno
pop
fstps
push
pop
data16
sbb
jns
add
ret
arpl
ss
pop
mov
sbb
jg
push
inc
xchg
fldcw
push
rorl
mov
cmp
out
ss
or
adc
pushf
sub
sub
cmp
mov
add
popf
and
mov
dec
cmpsl
inc
andb
test
and
dec
mov
enter
aaa
fs
pop
lret
jmp
pop
scas
fldt
je
int3
cs
push
iret
mov
adc
cmp
lret
push
mov
lods
mov
and
out
sahf
sub
push
fcomps
es
sbb
inc
std
or
sbb
mov
xchg
or
lcall
insb
mov
or
mov
rclb
push
iret
mov
out
or
mov
push
and
in
dec
cmpl
add
mov
outsl
cli
sub
mov
dec
add
mov
mov
nop
in
icebp
pop
inc
dec
je
xchg
mov
test
xor
and
dec
rsm
lea
adc
rcrb
dec
xchg
aad
push
xchg
fsubrs
pop
cmp
imul
push
out
fimull
sarl
dec
fstpt
in
mov
add
dec
cmp
lods
rcrb
fsubrl
shrb
jbe
sbb
cmpsb
not
inc
mov
sbb
pop
es
jge
cmp
lret
pop
dec
push
cmpsl
pop
mov
adc
cmovo
and
or
and
aam
mov
mov
cmp
jecxz
imul
pop
test
repz
int
mov
daa
stos
repz
popf
jae
inc
xchg
push
jecxz
lock
xchg
add
hlt
lea
ret
or
adc
dec
pop
mov
mov
outsl
cli
shrl
ljmp
mov
je
push
mov
add
loop
loop
xchg
aam
pushf
pop
ljmp
cs
add
inc
fs
cmp
rcl
stc
and
jmp
scas
push
lcall
add
pushf
sbb
xchg
dec
inc
adc
mov
jg
repnz
data16
arpl
jle
test
fistps
lods
and
jb
test
adc
sbb
dec
sub
xchg
fsubl
popf
sarb
ror
cli
xchg
adcb
hlt
add
mov
dec
nop
xchg
out
pop
js
mov
add
jmp
pop
aas
pop
pusha
out
xor
scas
popa
xor
out
inc
jg
cli
push
adc
push
xchg
jb
jbe
and
mov
lods
jmp
aaa
sub
add
inc
fdivrs
push
cs
les
mov
mov
stos
xor
pop
fdivl
jle
aas
scas
xchg
mov
lcall
aaa
fwait
xor
mov
stc
test
es
jbe
aam
push
push
sbb
mov
in
jns
pushf
pop
int3
cmp
add
dec
jmp
push
popf
enter
mov
inc
ja
cmp
cmpsl
mov
mov
rclb
ret
cmpsl
adc
pop
scas
scas
pop
in
sub
lock
lcall
pop
popa
ret
in
or
icebp
push
aas
lods
xchg
pop
sub
or
lods
insb
sti
stos
xchg
mov
scas
or
inc
mov
mov
push
aam
lret
fldl
icebp
cmp
in
in
push
ficoms
subb
mov
mov
adc
and
gs
lods
stc
sahf
shlb
xchg
lods
sahf
pop
dec
popa
cltd
sub
cmc
cld
jge
push
pop
imul
xchg
decl
sbb
es
add
cmp
jp
mov
enter
mov
and
call
mov
out
pusha
cmpsl
push
lahf
repnz
aam
pop
cmpsl
cmp
push
lret
std
add
and
mov
add
cmp
inc
inc
push
fnstsw
js
pop
sbb
dec
inc
pop
fadd
loope
loopne
mov
mov
lret
push
inc
lds
xor
comiss
or
mov
sti
add
fwait
adcb
clc
mov
fisubrl
popf
rorl
test
push
cltd
sbb
lret
jo
dec
out
cmp
pop
lahf
jae
or
or
dec
mov
dec
dec
or
lret
test
jb
inc
mov
mov
shll
rol
aaa
ljmp
sub
int
xor
out
loop
mov
test
sti
repnz
repnz
xchg
mov
mov
enter
aaa
mov
and
mov
ret
mov
xor
jno
sbb
sti
add
out
cmpsb
xchg
push
or
xchg
adc
sub
push
push
imul
jnp
and
rorb
jns
mov
jge
movsb
cmpsl
scas
xchg
pop
ja
dec
out
and
add
in
mov
jbe
insl
dec
rorb
mov
mov
dec
ds
or
dec
mov
cmp
cmpl
cmp
sub
mov
sbb
icebp
in
and
xchg
dec
or
int
mov
cmc
scas
mov
js
scas
ret
jns
jp
cld
test
in
lahf
movups
sti
js
orl
cld
pop
mov
adc
xor
sbb
and
arpl
shrb
mov
mov
lret
xchg
sahf
sbbl
xchg
aas
pushf
fwait
sub
mov
fidivl
inc
and
daa
testl
arpl
and
pop
adc
lock
jl
lea
sub
xor
jns
and
cld
push
aas
mov
jo
push
push
mov
imul
jno
setae
add
loope
jae
ss
lea
mov
insb
je
or
mov
and
data16
je
jmp
or
inc
push
ret
std
addr16
stc
and
lahf
fidivrs
clc
cmp
rcrb
inc
inc
scas
repz
inc
je
or
test
adc
push
xchg
popa
ds
mov
aam
addb
xor
lcall
jns
mov
inc
notb
inc
subl
mov
ljmp
hlt
pop
mov
push
push
xor
inc
or
sbbb
cmp
aas
test
insl
jg
mov
bnd
aad
xchg
inc
pop
push
mov
insb
out
das
mov
xlat
movl
aaa
xor
sbb
inc
add
fmulp
fadd
jge
sbb
lods
les
xchg
lahf
sbbl
xlat
sub
inc
xchg
je
sub
adc
ja
inc
fwait
mov
inc
loope
int3
dec
jae
outsb
int3
dec
mov
js
sub
inc
nopl
xor
dec
and
cld
xor
and
jle
jle
mov
mov
inc
les
xchg
inc
mov
xlat
cwtl
aad
lea
aam
insl
popf
jge
in
lcall
es
pop
xchg
test
adc
jo
sub
mov
nop
sub
fidivrs
push
sbb
mov
out
icebp
jle
out
mov
leave
mov
or
insl
ret
bound
in
add
rorb
icebp
sub
mov
dec
dec
or
incb
ds
ret
andl
cmp
or
pop
pop
cmp
in
inc
movsb
cmc
lods
xor
pop
cmp
subl
insb
xor
and
add
mov
stc
push
loop
repz
xchg
iret
xlat
lods
xor
dec
shlb
mov
sahf
fdivp
lea
ja
cmp
out
push
rcrl
lock
sbb
sbb
lahf
stc
ja
out
mov
sti
mov
inc
adc
imul
push
test
lahf
jle
addb
std
mov
lret
mov
adc
jle
pusha
adc
stos
xor
xor
xchg
push
inc
clc
cli
adc
int
mov
xchg
loop
xchg
orb
nop
psubd
orl
rorb
adc
in
loop
into
sti
jmp
pushf
jno
dec
jge
lahf
aaa
sub
pop
inc
gs
or
push
es
sub
lea
repnz
cmp
lret
jno
jmp
inc
cmpsl
ljmp
inc
and
ret
movsl
arpl
fcoml
clc
adc
mov
xchg
mov
vmread
or
fcoml
gs
out
xchg
popa
pop
mov
sar
pop
push
push
scas
int3
or
test
fists
xor
movsl
lea
mov
mov
and
bound
ss
fimuls
ja
jmp
sahf
push
clc
or
sub
std
stc
stos
shrl
sub
iret
xlat
insl
xor
inc
jge
push
or
rorb
insb
pusha
mov
lods
xchg
push
enter
in
ja
inc
repnz
inc
inc
repnz
xor
mov
test
mov
mov
sbb
loope
int
into
push
jp
dec
sti
adc
ficompl
xor
outsb
call
pusha
ret
sub
dec
cld
add
loope
dec
inc
inc
sbb
lea
out
mull
or
test
jl
rolb
dec
xchg
mov
push
add
jmp
mov
stc
mov
mov
mov
ror
xchg
pop
outsl
jae
fs
cli
pop
lret
pop
in
movsl
sub
xor
cs
cmp
outsl
sub
jge
mov
dec
in
push
push
or
decb
outsb
lret
pop
xchg
ljmp
lock
jo
jns
popa
sbb
std
lock
xchg
ja,pn
loop
and
pop
call
cwtl
sti
or
xlat
or
push
xor
adc
jae
cmp
jno
and
sub
pop
and
push
cmc
imul
push
popa
popf
xor
mov
jle
movsl
or
adc
nop
lds
sbb
dec
notl
mov
push
mov
mov
mov
out
ja
jl
xor
out
mov
pop
ficoml
push
dec
pop
sub
adc
pop
sub
add
or
mov
jo
test
push
jae
scas
dec
lret
push
in
mov
sub
in
jno
add
aas
bound
mov
outsb
xchg
mov
push
and
rcll
or
push
js
call
pusha
adc
stos
xor
or
in
mov
inc
push
or
bt
mov
out
cmp
mov
or
mov
mov
mov
mov
pop
push
cmp
push
xor
enter
fsub
mov
add
lods
mov
repz
fistps
cwtl
loopne
cwtl
inc
jo
adc
mov
rcl
outsb
mov
inc
jmp
mov
imul
shrb
ljmp
jo
shl
sbb
adc
add
sbb
push
lods
mov
in
inc
mov
roll
aas
lods
lods
fisubs
push
pop
stos
icebp
cmc
mov
das
or
and
inc
ficompl
hlt
test
jne
adc
jnp
out
out
push
pop
mov
ss
pop
popa
loop
test
es
sar
mov
push
pop
xor
or
cmp
testb
shlb
adc
inc
mov
into
lahf
jecxz
adcl
adcb
or
sub
jae
mov
sahf
push
iret
pop
cwtl
decl
jbe
popf
dec
out
push
int
sbb
repz
andl
sub
xchg
shr
rolb
test
or
es
push
mov
xchg
jge
add
pop
loop
fists
shrl
in
das
push
push
xchg
push
imull
adc
jmp
hlt
repnz
cmove
test
lods
xor
pop
cmp
inc
add
jecxz
cmp
popa
xlat
movsb
mov
imul
mov
popl
addr16
fisubrs
shlb
and
adc
and
sbb
lds
dec
repz
stos
xor
fs
lods
inc
xor
ds
mov
sbb
push
mov
cltd
scas
gs
mov
sbb
in
loop
neg
push
xor
cmp
or
fidivs
mov
xor
js
cli
cmp
shll
pop
mov
out
and
std
push
ljmp
sub
or
xor
dec
scas
lret
pop
mov
add
jg
dec
jo
mov
cmp
popf
sub
jle
mov
xchg
cwtl
xchg
test
xor
imul
stos
pop
sub
dec
sbb
fs
pop
mov
jo
pushf
pop
sub
xor
dec
dec
jecxz
lds
mov
fistpl
stc
sub
arpl
or
insb
add
sahf
mov
js
xchg
mov
and
adc
xchg
std
incb
xchg
ret
enter
mov
push
ret
inc
dec
adc
mov
dec
iret
cmc
xor
adc
mov
adc
iret
mov
mov
cmc
xchg
inc
negl
jnp
mov
xchg
xor
xchg
mov
xor
dec
jle
dec
shrb
in
lds
cmc
daa
fisttps
sub
jl
jmp
stos
cmp
stc
xchg
je
cli
fldenv
lds
adc
in
test
adc
idivb
xor
popa
or
xor
push
cmp
inc
push
push
mov
divb
mov
xchg
xchg
inc
mov
add
clc
sbb
outsb
pop
jb
xchg
jmp
sbb
xchg
pusha
jo
inc
mov
dec
iret
xor
inc
xchg
aam
in
add
sub
push
subw
pop
jge
pop
insb
or
lock
lcall
cmp
lret
movsl
stos
mull
fwait
cld
fidivrs
arpl
inc
xchg
or
or
lahf
or
stc
mov
test
jb
cmp
cmp
insl
cltd
mov
lahf
mov
movsl
sub
ret
lods
and
and
fidivs
inc
adc
nop
dec
push
jnp
push
repz
pop
int
lret
mov
dec
jge
push
mov
and
sbb
mov
aas
mov
mov
inc
std
fsqrt
shrb
dec
std
cmc
and
inc
cmp
jg
cmpsb
shrl
stos
fwait
std
pop
sbb
push
cmp
cwtl
push
sbb
leave
fstl
adc
lods
icebp
jl
adc
sub
jae
fsubrl
xchg
es
test
dec
mov
shl
inc
scas
jb
mov
push
pusha
roll
ret
xor
xor
adc
daa
dec
decb
stos
cmpl
out
cmp
fmul
stos
mov
mov
xchg
jb
add
es
cmp
into
mov
inc
xchg
pop
mov
lock
movsl
ret
gs
outsl
ret
mov
push
loopne
adc
add
bound
jmp
movsl
and
rcrl
movsl
dec
dec
xchg
lret
and
cmp
mov
mov
xor
repz
adc
sbb
mov
jnp
xchg
mov
xor
inc
and
adc
adc
jnp
mov
int
xor
adc
dec
je
je
inc
lret
sarb
cmp
xor
or
dec
rol
mov
jmp
enter
jecxz
insl
mov
sbb
sti
mov
icebp
push
hlt
fsubr
adc
call
idivl
mov
mov
inc
push
jmp
outsb
ror
jmp
mov
shrb
sarl
test
cmp
xor
scas
push
cmc
mov
sub
rorl
inc
lods
mov
hlt
fsubl
adc
dec
cmpsb
and
push
movsl
jns
nop
adc
fcoms
pop
ds
test
lods
mov
jl
fs
pop
xchg
out
inc
jg
aam
shrl
cld
ja
insb
or
fldenv
in
outsl
and
xchg
sbb
icebp
daa
lds
pop
mov
sub
je
fdivl
sbb
add
add
clc
mov
int3
test
dec
int
fs
mov
ljmpw
push
jne
mov
push
lcall
mov
mov
incl
fidivrl
fnstsw
fsubrl
and
fistps
or
enter
pop
ret
outsb
adc
mov
pop
fsubrs
jecxz
jmp
das
dec
jns
or
aaa
push
xor
jecxz
aam
test
pop
vcmpsd
pop
imul
jecxz
mov
sahf
sub
or
test
lret
xor
push
xor
and
xor
xchg
push
in
jecxz
jae
shll
jne
and
test
fdivrs
adc
jge
dec
in
xor
ficompl
xchg
fs
sbb
sbb
pop
xchg
fwait
mov
rol
lret
lcall
xchg
leave
out
jo
cwtl
xlat
clc
mov
ds
jp
xchg
xchg
loopne
pop
add
xchg
xchg
xchg
scas
imul
mov
xor
xor
pushf
sub
fidivrs
out
xchg
jns
fwait
pop
stc
and
push
test
push
cmpsb
xor
add
insb
movsb
jae
mov
lcall
iret
xor
dec
pop
sbb
scas
iret
daa
dec
into
mov
add
push
fdivs
sub
mov
mov
int3
xlat
sahf
and
xchg
or
cmp
inc
add
imul
fwait
enter
call
fstpl
std
or
lret
enter
sub
lods
ja
and
dec
sub
test
dec
leave
dec
inc
jno
imul
push
lods
and
mov
or
es
inc
imul
out
inc
inc
into
sub
dec
xchg
push
or
jp
ds
nop
jae
outsl
scas
fsubrs
push
cmp
lret
insb
adc
mov
or
into
maxps
out
in
dec
xchg
mov
data16
fsubs
subl
and
int3
leave
inc
negb
jg
int3
xor
mov
pop
push
pusha
movsl
dec
cmp
scas
jle
push
jo
jo
sbb
int3
or
das
mov
xor
test
push
mov
jl
pop
leave
movsb
pop
mov
cmp
arpl
and
mov
sub
push
xor
xchg
jae
jge
mov
test
inc
punpckhwd
js
sbb
jb
arpl
rclb
sub
xor
mov
stos
cmp
jae
insl
and
sbb
lret
lret
dec
fisttpll
cmc
mov
faddl
add
inc
outsl
push
les
sarb
pop
add
int
adc
sbb
push
xchg
fs
pop
test
or
outsl
lret
push
mov
fwait
fwait
sarl
inc
adc
sub
add
mov
mov
mov
rorl
nop
test
pop
sub
cwtl
jmp
rorb
push
mov
push
testb
daa
stos
inc
mov
push
jg
dec
mov
pop
fdivrp
cmp
sbb
adc
cmp
rsm
fisttps
lahf
inc
jb
fwait
mov
movsl
popf
xor
fsubrs
jle
jmp
mov
std
sar
fmull
stc
or
lds
or
rolb
fists
dec
data16
pop
mov
xchg
xchg
dec
inc
loope
dec
push
and
dec
aas
scas
add
dec
loop
adcb
and
adc
adc
dec
andl
les
ret
add
imul
pop
ficoml
add
rorl
mov
clc
pop
iret
and
loope
mov
or
adc
stos
hlt
adc
lret
push
xor
xor
out
mov
sbb
jmp
push
ret
or
pushf
jne
sahf
scas
inc
fildll
loope
fisubrs
or
mov
adcb
inc
loope
loope
adc
insb
je
xchg
fsubs
push
adc
test
jo
call
mov
mov
cmp
pop
lods
pop
fcoms
hlt
inc
call
cmp
outsb
dec
cmp
rol
pusha
and
loopne
sti
fadds
mov
jecxz
es
and
mov
jb,pt
addr16
push
daa
inc
cltd
test
jo
dec
and
scas
and
shrb
scas
aam
idivb
jge
inc
mov
lret
arpl
shlb
in
mov
arpl
subl
cltd
inc
push
fwait
cmpsb
addb
mov
pushf
negb
mov
sbbl
sbb
pop
clc
inc
adc
rcrl
sbb
in
scas
cmc
mov
cmc
adc
adc
outsl
call
mov
inc
ss
in
push
xchg
fisubrl
icebp
insl
mov
fdivs
mov
cltd
insl
lea
aam
adc
and
mulb
sarl
repz
mov
in
xchg
sbb
pop
aam
nop
mov
jae
jb
loopne
push
push
outsb
xchg
mov
mov
add
test
and
in
jle
xor
push
rcrl
scas
movsl
adc
inc
add
decb
flds
mov
sub
sbb
mov
and
adc
roll
inc
or
in
pop
lods
and
jecxz
stos
sahf
mov
xor
jo
aaa
cmp
sub
mov
xchg
jae
aaa
add
mov
xchg
add
xor
inc
movsb
movsb
jns
mov
cwtl
daa
imul
xlat
inc
adc
scas
mov
scas
fcmovu
push
add
stos
movsb
dec
fmull
jo
add
repz
mov
inc
push
push
inc
cli
pop
cmc
rcrb
add
mov
mov
mov
xor
pop
add
int
cmc
and
and
hlt
fs
stos
fsubrs
int3
mov
xor
mov
cs
sub
cwtl
xor
divl
jge
cmpsl
pop
lock
out
lret
dec
adc
inc
cld
insl
lret
stos
add
pop
aaa
xchg
and
bound
insb
adc
test
pop
ret
fildl
dec
jne
stc
mov
fs
dec
adc
stos
xchg
mov
ret
xor
and
rcrb
repnz
mov
cmpl
jae
pop
cwtl
push
clc
sub
cmp
movsl
add
and
imull
dec
insb
sbb
gs
enterw
cmp
fdivrl
movsl
cmpsb
jge
push
into
mov
insb
or
rcl
pushl
push
nop
inc
add
scas
addr16
push
lock
sbb
jge
popa
pop
and
push
push
fsubrs
xchg
jge
jbe
movb
out
dec
xchg
icebp
std
cmpsb
cmpsl
dec
das
pushf
rcr
in
shlb
idiv
cmp
and
incb
lea
movd
frstor
jl
fnstsw
sub
mov
std
and
push
enter
ret
mov
fsts
inc
std
cltd
push
addr16
xchg
std
mov
push
mov
jne
ljmp
pusha
iret
cmp
arpl
imul
xor
movsb
sub
jns
mov
push
mov
movsb
push
inc
push
stc
xchg
fwait
lcall
sti
aaa
decb
inc
sub
mov
stos
push
adc
jg
cmp
mov
shrb
xor
sub
dec
ljmp
test
pop
inc
jg
and
jns
ss
mov
jne
test
loopne
test
push
fld
js
lcall
push
xlat
into
cmc
movsl
xchg
dec
ljmp
lds
mov
sbb
inc
sub
cwtl
out
mov
sub
dec
jl
test
stos
fmul
les
jmp
test
fimull
or
or
jg
adc
js
sub
rsm
adc
pop
cmp
pop
mov
mov
stos
hlt
mov
cli
push
add
add
hlt
lret
push
call
jmp
dec
add
or
xchg
inc
jmp
jecxz
xchg
mov
out
in
cwtl
mov
sub
out
add
insb
data16
out
cld
ficomps
and
faddl
call
xor
add
in
int
mov
pop
lcall
dec
mov
push
sti
xor
pop
dec
pusha
adc
xchg
test
dec
push
movsb
push
stos
popa
mov
adc
cmp
cwtl
mov
mov
lock
mov
cwtl
pop
cmp
add
test
out
jno
aas
pop
outsb
pop
mov
aas
int3
cmp
jo
scas
and
shr
jge
push
mov
lret
or
or
lcall
nop
sub
mov
xchg
stos
xor
lahf
add
subb
adc
mov
cltd
mov
mov
outsb
sub
imul
pop
add
gs
shl
mov
adc
dec
sbb
lods
icebp
push
movsb
sub
sbb
or
add
mov
test
in
or
xor
pop
jmp
pop
pop
out
sub
pop
mov
sbb
ret
add
xor
sbbb
leave
orb
out
loopne
jg
mov
aaa
fbstp
push
lods
movsb
or
testl
jmp
sub
pop
and
pop
aad
fs
repnz
lahf
movsl
fisubrs
fstl
lock
lea
adc
clc
fmuls
enter
shll
pop
sub
dec
in
add
out
dec
or
into
enter
mov
inc
mov
fsubrs
pop
inc
xchg
test
sub
jmp
or
sub
inc
sbb
cmp
or
xchg
push
fsubl
cli
push
icebp
adcb
loope
loopne
stos
jmp
sub
or
enter
mov
roll
fldenv
inc
cmp
ja
push
mov
mov
cmp
adcb
aas
lcall
or
test
les
mov
mov
mov
loope
inc
xchg
cmp
jg
mov
aam
and
stos
insb
xor
xchg
rcl
mov
and
inc
inc
pop
pop
xorb
lock
shlb
and
push
nop
dec
loope
push
mov
sbb
mov
add
hlt
ja
ficomps
popf
ror
lret
mov
icebp
mov
call
les
inc
lret
sbb
aas
scas
mov
or
cld
mov
mov
lds
sahf
lcall
stc
test
sti
imul
xor
jl
pop
mov
cld
sub
arpl
jo
jae
push
pop
pusha
push
mov
sahf
and
push
insl
adc
test
mov
or
fcomp
aaa
add
icebp
rclb
and
or
loopne,pt
mov
mov
push
js
sbb
or
daa
int
loop
imul
repz
adc
cmp
es
je
pop
mov
ret
sbb
add
stos
adc
dec
aas
mov
scas
popf
lods
int
imul
cli
xor
mov
or
and
push
aaa
mov
mov
pushf
test
dec
in
and
adc
lret
incl
pop
add
mov
fdivs
shlb
pusha
jmp
inc
outsb
or
lds
cmp
std
and
outsb
adc
ss
xor
cwtl
cmpsb
xlat
adc
addr16
jns
stos
pop
jg
push
arpl
hlt
mov
push
and
iret
frstpm(287
insl
pop
dec
test
out
icebp
push
testb
jp
mov
fdecstp
sbb
sahf
add
out
dec
xchg
jp
or
dec
lea
cmp
pusha
in
or
fsub
ljmp
test
adc
push
scas
test
add
std
mov
scas
xchg
jl
call
fwait
stos
xchg
pushf
cmpsl
mov
shlb
xchg
mov
call
lahf
sbb
test
bound
mov
mov
cwtl
add
mov
lea
lcall
mov
lods
sub
ja
fmuls
mov
sub
pop
push
test
cmp
pushf
test
xor
inc
bound
je
test
xor
sub
daa
push
fidivrs
cmp
push
adc
enter
dec
out
fbstp
push
push
jl
bound
int
jnp
mov
jne
mov
repnz
aaa
ffree
js
rorb
jne
lahf
into
or
movsb
jns
jnp
in
enter
mov
stc
addl
add
jo
aad
xor
test
inc
mov
push
pop
pop
xchg
mov
and
fisttpll
cmp
add
push
lods
movsb
in
ficoms
jp
pusha
and
and
aas
mov
ss
and
xor
mov
test
int3
stos
idiv
jge
or
lods
mov
xchg
mov
push
add
inc
xor
xor
or
int
jno
and
sub
imul
into
cmp
push
and
add
sahf
loopne
and
sbb
dec
incb
pop
dec
cmp
adc
les
idivb
sub
push
add
jle
inc
or
inc
sti
xchg
push
sbb
lds
push
fimull
cwtl
sub
ja
data16
cwtl
mov
jg
mov
pop
popa
insl
jbe
and
out
pushf
xchg
mov
mov
dec
cmp
mov
out
sbb
movsl
mov
pop
cmp
movsb
sbb
xor
mov
stos
hlt
mov
inc
cmp
push
add
ljmp
out
jno
clc
fdivrs
dec
out
adc
xchg
or
push
movsb
aam
sbb
adc
add
jae
std
push
and
cmp
subl
adc
xlat
or
dec
stc
mov
int
shlb
add
dec
dec
mov
xor
out
pop
pop
jae
pop
mov
fsubs
sbb
sbb
adc
test
shl
cwtl
stc
add
dec
mov
mov
pop
loopne
mov
nop
mov
jp
arpl
pushf
adc
mov
jmp
int3
mov
out
jecxz
mov
xchg
clc
stos
adc
mov
inc
mov
mov
iret
pop
jg
xchg
adc
cli
adc
in
xchg
test
dec
pop
ret
and
cmp
and
jecxz
lret
aam
dec
mov
leave
out
or
icebp
dec
inc
outsb
push
mov
dec
fsubs
pop
jae
pop
test
lret
ret
cmpsl
dec
fdivl
adc
gs
push
insb
mov
cmp
mov
stos
ds
push
push
ja
rorl
and
movsl
bound
fmull
ljmp
scas
mov
aaa
div
test
pop
lret
popa
cmp
xor
sub
dec
pop
inc
ret
mov
jbe
jne
cmpb
shl
mov
jp
scas
mov
aad
mov
adc
mov
in
xor
inc
fidivrl
xchg
mov
popf
cs
dec
dec
xor
imul
sbb
in
ss
cltd
xchg
inc
lods
call
inc
sub
add
mov
gs
xorb
repz
adc
mov
out
inc
jp
or
inc
insb
add
or
jge
inc
push
mov
jbe
sar
dec
adc
dec
outsb
cmp
fs
outsb
inc
loop
push
cld
gs
xchg
dec
xchg
push
cmp
inc
and
dec
aas
mov
sbb
scas
cwtl
lcall
mov
xchg
hlt
inc
jmp
stos
stc
mov
nop
xor
xchg
out
clc
push
cvtpi2ps
pop
adc
adc
out
fadd
pop
shll
sub
lds
stos
shlb
out
inc
mov
mov
add
ss
pusha
orl
outsb
mov
lds
into
xorb
loopne
and
inc
fsubr
movsb
mov
dec
dec
sub
cli
popa
lds
sub
je
xchg
add
out
sub
bound
push
pop
dec
mov
sti
data16
push
outsb
pop
call
adc
adc
dec
jae
divb
add
mov
push
cmpsl
insb
sub
pop
xchg
jecxz
scas
jns
sub
xorl
rclb
xor
ljmp
setp
xor
jmp
xchg
subl
sbb
movsb
fmul
test
mov
int
or
xchg
push
imul
inc
jb
cli
mov
fisttpl
cli
mov
repz
ficoms
push
inc
enter
inc
cmp
sbb
bnd
repz
pushf
push
lcall
test
jno
cmp
adc
lods
inc
out
push
inc
movl
sub
push
ror
mov
scas
jmp
dec
in
arpl
fneni(8087
jns
sub
clc
mov
shll
ret
pop
and
mov
das
outsl
lcall
int3
js
jns
gs
push
mov
out
dec
fldt
fldcw
test
push
mov
mov
mov
xchg
pop
and
adc
xor
fbld
enter
insl
imul
xor
jno
and
ss
adcb
pop
ja
xorb
mov
xchg
sbb
add
add
je
repz
das
push
lock
js
popa
xor
xchg
stos
rcll
test
xor
inc
cmp
pop
cmp
mov
jnp
jae
xchg
incl
cmp
jb
adc
mov
push
ret
add
cld
mov
or
out
jecxz
xchg
jae
mov
fdivrl
xor
repz
mov
imul
mov
xlat
xchg
out
jne,pt
mov
lods
add
jmp
in
xor
mov
xlat
jg
dec
mov
cmp
imul
or
inc
fisubs
add
dec
add
lret
mov
bound
dec
sub
xorl
xchg
mov
popa
in
add
sahf
push
lcall
push
mov
xchg
jbe
mov
cmpsl
and
neg
div
fidivl
inc
xlat
mov
jg
dec
xor
ss
nop
int
std
push
dec
dec
sar
les
pushf
lcall
stos
jg
sub
mov
sub
xchg
les
jg
pop
mov
cld
and
ss
jmp
jl
xchg
xchg
mov
subb
loopne
mov
or
cwtl
aam
adc
dec
popf
lods
ja
sbb
pop
pop
mov
cmpsb
in
adc
adc
sbb
aaa
jecxz
ss
xchg
sti
addb
or
mov
sarb
xchg
roll
mov
mov
jae
out
lahf
xchg
dec
add
xor
jo
xchg
and
mov
push
dec
inc
xor
inc
aam
or
xchg
mov
xchg
rorl
xor
pop
es
add
rcrb
mov
push
jb
mov
shlb
or
call
add
xchg
insl
je
mov
icebp
inc
fldenv
aaa
dec
insl
add
xchg
add
aam
shrb
mov
dec
cltd
pop
inc
imul
sahf
notl
outsl
mov
jb
pop
icebp
cltd
mov
sub
mov
fcmove
mov
jle
push
mov
lds
popa
fildll
lret
cltd
pop
and
sub
stos
imul
popl
cld
cmp
xor
movsl
sub
shlb
cmp
mov
popw
fsubrl
lea
sahf
sbb
mov
adc
daa
test
sbb
test
inc
mov
mov
mov
cmc
jbe
lcall
jmp
leave
xchg
push
rorl
or
adc
cmp
mov
lods
sub
add
js
arpl
setp
dec
sbb
mov
mov
mov
push
vpsrad
enter
repz
addr16
nop
pop
sbb
mov
fdivl
frstor
mov
push
mov
add
xchg
add
add
push
fstl
xchg
or
testb
pusha
sub
inc
iret
cmp
mov
loopne
outsb
add
push
or
xchg
sti
ljmp
inc
ret
jb
sub
push
into
imul
fisttps
mov
aas
lret
xor
and
pop
push
movsl
cmc
in
call
xor
xchg
mov
lock
push
cmpsl
push
xchg
fldt
cmovae
mov
xchg
dec
add
sbb
dec
jmp
inc
mov
hlt
fmull
call
inc
insl
jg
add
lds
inc
es
sub
adc
push
jno
iret
jp
xor
daa
cmp
pop
mov
push
decb
lods
and
mov
fdivp
pushf
pxor
inc
arpl
hlt
push
sub
jns
shll
ror
or
or
add
cmpsl
push
xor
dec
ret
call
xor
test
pop
insb
outsl
inc
filds
js
xor
dec
mov
mov
add
sub
out
jl
mov
movsb
orb
in
sar
pop
xchg
mov
adc
or
dec
ljmp
test
lcall
roll
popf
inc
xlat
xor
inc
nop
cwtl
mov
scas
jb
lods
ret
push
lock
lds
add
adc
scas
popa
push
mulps
fisubl
sbb
sbb
aas
sbb
xchg
mov
cli
pop
add
int3
cld
shl
test
loope
jmp
ds
jae
fs
pop
pop
idivl
jecxz
cmp
xor
std
cltd
cmpsb
sub
std
or
incl
mov
mov
xchg
jno
arpl
fwait
lret
adc
dec
sbb
xor
xchg
jb
jp
in
push
mov
nop
sub
xchg
cmp
or
mov
divb
dec
inc
sti
or
cmp
test
dec
rcll
scas
int3
or
cld
lcall
fisubl
movsl
pushf
sbb
scas
rclb
jnp
movsb
arpl
popa
mov
fs
sbb
pop
scas
dec
notl
lock
inc
sti
arpl
pop
push
out
xchg
rcrb
fmull
cltd
sti
jg
mov
mov
test
in
inc
push
sbb
pushf
mov
jnp
xchg
cmp
ds
aad
orl
pushf
int3
and
movsl
xchg
push
xchg
movsb
pop
xorb
fldl
out
mov
xor
ds
hlt
xor
movsl
std
repz
nop
out
mov
rcll
and
or
ljmp
pop
popf
std
jp
movsl
lret
sub
cmpsb
sbb
fcmovb
call
aas
jo
add
fs
imul
rcl
mov
cmc
dec
shl
into
addr16
hlt
int
or
shl
lods
pop
xor
jo
xorl
and
popf
sbb
out
dec
push
decw
add
notb
push
aam
cmp
add
cltd
add
dec
sbb
jbe
xchg
mov
shrl
stc
imul
jge
cmp
andb
fildll
test
movups
mov
jbe
push
gs
ja
add
xor
jg
mov
test
sbb
xchg
int3
mov
and
fsubs
cwtl
ficomps
inc
rcr
in
mov
in
mov
and
mov
in
xchg
scas
mov
xchg
outsb
icebp
enter
insb
ret
out
fwait
push
add
fucomp
xchg
ds
fs
xor
andb
xchg
bound
mov
sbb
xor
imul
jne
out
fxch
sbb
out
in
fld
or
push
inc
dec
rcrl
inc
push
ss
mov
flds
sahf
out
jecxz
shll
dec
sbb
sarl
pop
mov
mov
xor
insl
mov
test
mov
inc
cld
and
out
dec
cmc
in
add
adc
push
cld
int
inc
push
ds
xchg
cmp
cli
mov
ftst
lss
mov
cmp
shl
xchg
popf
lea
pop
and
xchg
xor
call
andb
popf
sbb
fs
lret
push
and
jle
sbb
mov
add
stc
stos
jne
movsl
or
call
repz
jecxz
pop
mov
sub
xor
out
xchg
shrb
adc
and
andl
das
lcall
aam
or
xchg
lea
pop
push
mov
sbb
stc
pop
imul
mov
mov
pop
shlb
test
push
pushf
mull
negb
adc
mov
xor
jle
stc
call
fnstenv
or
mov
push
push
add
jecxz
pop
arpl
mov
aas
insb
ret
fimuls
xchg
jbe
fadd
fidivs
fs
add
push
mov
cmpsl
js
sbb
je
mov
add
lods
divb
repnz
test
fldl
mov
fisubl
ror
fwait
xchg
int
sub
repz
into
push
adc
or
cld
pop
xchg
push
fxch
fisttps
cmp
pop
cmc
fldcw
xor
lret
out
movsl
shrb
jmp
xor
add
pusha
mov
xorb
dec
pop
outsl
lds
fildl
popa
gs
call
in
das
loop
push
es
inc
outsl
jg
and
jg
iret
inc
fsubr
and
mov
jbe
scas
fcompl
cmp
cld
xor
dec
push
pop
xchg
push
xchg
jmp
pop
adc
je
xor
or
rcll
jg
lea
jge
dec
pop
mov
repnz
into
mov
pop
and
das
mull
popf
adc
or
sub
pop
adc
cmp
gs
add
mov
cltd
sti
dec
jb
mov
pop
repnz
movsb
push
pushf
jo
ja
xor
push
aas
push
mov
aaa
mov
ret
leave
pop
mov
and
push
aam
loop
jne
leave
jmp
popa
cbtw
sub
cmp
movsb
cwtl
mov
push
xchg
add
jo
xor
jb
mov
addr16
fs
jl
decb
push
mov
dec
mov
adc
mov
cwtl
arpl
orl
fdivl
stc
repnz
jmp
into
and
test
sub
test
shrb
mov
enter
movsl
push
iret
leave
popl
ret
notb
jg
jno
call
sbb
pop
mov
fsubrl
outsl
inc
aad
jp
mov
xor
and
sbb
addr16
push
lret
dec
add
cwtl
js
sti
inc
adc
pop
push
fidivrl
icebp
xor
loope
xorl
adc
pop
dec
loop
mov
cli
lret
out
xchg
out
je
loopne
jle
mov
lret
pop
imull
dec
sbb
push
jae
je
pop
icebp
clc
ret
mov
js
stos
dec
mov
jmp
cmpsl
cld
nop
inc
addr16
out
push
dec
in
xorl
nop
mov
test
sub
mov
lock
cli
repz
out
mov
push
loope
mov
mov
pop
xchg
fnstcw
push
in
pop
or
cmp
mov
sbb
scas
movsb
sbbb
frstor
adc
mov
rcll
fmull
adc
sbb
xor
leave
xor
push
adc
mov
or
test
push
inc
xchg
shlb
jle
inc
or
test
popf
push
loop
aad
bound
mov
mov
pushf
adc
sub
popa
rcrb
dec
test
sbb
push
inc
test
imull
nop
xchg
push
cmpsl
ror
addl
adc
test
pushf
out
test
ds
flds
inc
repnz
ret
dec
pop
mov
push
ss
jns
mov
repnz
and
sbb
jle
test
into
into
pmaxsw
ss
adc
cmpsl
xor
pop
fidivrl
dec
ds
lea
dec
inc
sub
adc
repnz
bound
lea
or
mov
and
out
mov
pop
or
ds
test
popa
push
je
xchg
mov
stc
push
push
sub
or
jb
pop
das
mov
mov
fdivs
xlat
nop
cli
xchg
enter
fcompl
cmp
pop
add
mov
sbb
push
mov
pop
xchg
std
lea
shrl
fstps
loope
inc
mov
and
lahf
or
mov
push
push
cld
sbb
in
mov
pop
pop
cwtl
mov
mov
lods
out
inc
icebp
dec
xchg
out
jo
xlat
and
dec
cmp
jne
mov
sub
mov
adc
pop
cmp
mov
nop
shr
pop
js
pop
imul
mov
stc
and
out
pop
and
jo
loopne
les
push
lods
pop
push
out
pop
mov
mov
inc
pop
mov
mov
dec
leave
jg
lcall
decb
in
lock
jmp
and
pop
and
xchg
mov
pop
inc
mov
push
in
mov
lret
loope
xor
insb
dec
gs
insb
sub
dec
cmp
sub
mov
and
std
cli
jge
add
cmp
pop
mov
add
jp
mov
sbbl
lret
or
sub
sub
sub
stos
jl
orl
mov
repnz
sub
mov
hlt
jo
sbb
mov
ret
mov
cmpsb
dec
mov
cmp
imul
jbe
jo
mov
xchg
xor
adc
in
push
test
loope
pusha
imul
into
mov
and
xchg
sub
mov
stos
dec
mov
xchg
sub
sub
leave
jns
arpl
stos
sbb
in
lret
test
adcl
pop
push
lret
pop
roll
mov
mov
pop
xor
sahf
mov
jne
push
push
xchg
gs
pushf
fbstp
mov
dec
lcall
inc
out
xor
lcall
test
adc
lcall
pop
adc
pop
sub
mov
sti
sbb
push
pop
movsl
push
pop
sbb
sbb
adc
mov
dec
mov
setb
clc
mov
add
add
loopne
jle
dec
stc
push
ja
loope
mov
inc
mov
in
loope
fildll
sbb
stc
jne
or
ljmp
stos
jl
dec
lock
iret
push
fs
in
shrb
js
stos
outsb
mov
insb
and
sti
push
push
jle
and
or
dec
aad
jb
dec
divb
mov
mov
fisubs
dec
bound
add
shll
jnp
push
pop
test
test
adc
add
ljmp
sbb
dec
xchg
pop
test
jb
js
cld
out
sub
xchg
push
sub
add
movsl
mov
fcoms
into
mov
ja
and
pushf
jb
pop
lret
sbb
xor
sbb
cmpsb
or
daa
dec
pop
push
mov
std
idivb
test
ror
pop
pop
adc
cmp
fists
js
mov
push
into
or
lahf
or
mulb
addl
xor
sbb
ljmp
push
inc
or
arpl
out
subb
scas
popa
out
ret
xchg
adc
adc
add
lock
jmp
aam
push
adc
adc
fwait
int3
es
divb
popf
in
cmp
movsb
or
aas
xor
ss
in
test
std
dec
adc
push
dec
sub
inc
aas
adc
data16
push
mov
jbe
sbb
orb
lahf
push
xor
cltd
push
push
ret
rcr
insb
imul
pop
cmp
xchg
fnclex
sub
cmp
jae
or
xchg
push
or
test
inc
xchg
push
lret
cs
ret
aam
mov
lret
mov
cmp
ss
pop
addr16
roll
loopne
je
addr16
cli
out
pop
or
adc
jno
daa
cmc
xor
xchg
lret
mov
mov
inc
cli
bound
scas
mov
cmp
xchg
and
cmp
sti
fimull
fbld
xchg
clc
roll
sbbl
xchg
add
in
sbbb
loop
adc
push
jne,pn
addl
inc
xchg
mov
push
mov
xlat
jb
pop
mov
push
sbb
lods
mov
xchg
xor
xor
or
cltd
push
mov
pop
dec
sbb
dec
js
cmp
mov
pop
mov
push
mov
push
repnz
and
dec
repnz
fadds
fwait
xchg
add
test
inc
scas
mov
mov
stos
mov
adc
mov
pop
lea
pop
js,pt
hlt
sbb
jae
sub
fiadds
cmc
int3
icebp
adc
call
pop
call
xchg
mov
or
test
cmc
jb
mov
cmp
aad
aas
pushf
mov
or
jl
sub
xchg
mov
push
or
fs
outsl
enter
arpl
mov
leave
mov
and
ja
or
jmp
data16
jne
xor
fdivr
and
out
push
js
in
dec
cmp
push
fsts
int3
movsl
call
pop
aam
int
inc
and
ret
add
fldenv
push
out
pop
pop
nop
das
lods
testb
stc
call
jbe
mov
scas
mov
insl
out
inc
mov
sbb
mov
and
push
cmpsb
jns
inc
mov
movsl
fisubrs
enter
or
xor
es
cmp
test
mov
xchg
sbb
fists
data16
adcb
push
js
sub
jg
test
sar
in
inc
icebp
cmc
jmp
rcrl
fisttps
fisttpll
and
inc
incb
xor
das
pop
call
les
rorb
push
jp
in
xchg
aaa
outsl
mov
mov
or
mov
mov
shrl
cmpsb
inc
pop
pushf
cld
xor
sub
mov
adc
stos
loope
int3
sbb
loop
lods
mov
mov
call
pop
lock
sub
cltd
iret
inc
je
xor
jg
out
pop
movsl
xor
mov
ss
gs
fcomip
xchg
push
stos
mov
cwtl
xchg
xor
stc
movsb
push
pop
push
and
dec
mov
pop
pop
popa
sub
aam
cmp
out
mov
push
repnz
jl
aad
out
push
enter
sarl
pop
push
sub
and
jne
mov
ljmp
sbb
ret
and
mov
mov
mov
mov
decb
clc
pop
sbb
jle
lret
test
adc
mull
xchg
xchg
mov
add
in
js
sub
leave
hlt
dec
mov
ret
hlt
das
movsb
sbb
imul
sub
inc
clc
and
mov
xor
mov
xor
xchg
push
je
pop
arpl
jb
inc
adc
dec
arpl
jno
inc
xor
and
icebp
jmp
ficoms
sbb
mov
push
bound
mov
aas
stos
adc
popf
jmp
imul
sub
mov
lock
inc
push
add
imul
xor
mov
xor
ffreep
cmpsb
vandnps
mov
mov
mov
mov
push
add
imul
sub
dec
pop
ja
sbb
cmp
add
mov
out
and
push
push
xor
or
or
inc
add
pop
or
stos
shll
fisttpl
ret
lea
mov
test
adc
inc
push
cmp
cmp
lret
mov
fcompl
pop
sahf
clc
cmp
test
pop
imull
out
jg
jg
xor
mov
test
shrl
ret
inc
cmc
popf
lcall
sbb
jmp
push
mov
mov
jnp
and
xchg
gs
inc
in
repz
dec
pusha
push
nop
pop
leave
dec
cld
lcall
jb
xchg
sarl
add
into
cli
mov
iret
stos
lret
imul
call
bound
stos
add
jno
ss
fiadds
in
cmp
fwait
test
mov
jge
mov
and
push
mov
mov
pop
mov
sbb
imul
outsl
xchg
jge
das
jae
lods
in
inc
rcr
adc
push
or
adc
and
sub
sti
in
xchg
pop
sub
add
mov
or
sub
sbb
push
stos
sub
push
cmc
pop
in
add
jecxz
mov
xchg
lods
mov
js
jg
pop
cmc
ja
push
movsl
movsb
cwtl
cltd
add
xchg
inc
add
outsb
lcall
pop
dec
and
cmp
dec
xlat
test
jnp
mov
fdivrs
xor
xor
jno
in
mov
stos
inc
imul
ret
cmp
push
adc
mov
jle
dec
xchg
sbb
movsl
cmp
test
cmp
std
jg
adc
popa
mov
xor
test
pop
into
std
aaa
or
jnp
cmpsl
lcall
adc
hlt
jg
cmp
pusha
pop
test
jns
into
sbbl
push
inc
mov
add
add
mov
inc
mov
dec
adc
jne
cmpsl
test
stos
sbb
xlat
mov
pop
in
mov
mov
sbb
add
xchg
stos
xchg
or
mov
inc
into
pusha
stc
push
mov
in
ljmp
pushl
inc
xor
xor
xlat
inc
push
pop
jl
pop
pop
stos
shlb
mov
fisubs
movsl
mov
and
jbe
push
xchg
stc
leave
mov
out
pop
hlt
adc
adc
dec
sbb
sahf
mov
inc
push
int3
push
mov
adc
testl
sahf
inc
in
fmul
ret
mov
pop
stos
sbb
mov
pushf
stos
add
cld
stos
pop
sbb
push
call
jb
test
and
mov
movb
adc
sahf
jg
lcall
test
int3
mov
js
addr16
pop
out
ds
or
orl
mov
clc
lock
outsb
popa
repz
or
hlt
and
cli
cmp
cmpsl
das
sbbl
pop
ja
in
addl
cmp
dec
arpl
cmp
cld
fidivs
out
enter
pop
pop
out
xchg
fistpl
cmp
mov
mov
jl
es
icebp
push
movsb
fwait
sub
loope
mov
dec
xor
lods
mov
jb
stos
add
test
jmp
sub
aaa
jno
jns
fsubrs
xor
pop
jp
lods
sarl
xor
pop
xchg
or
in
xor
iret
fisubl
inc
mov
std
add
dec
nop
cmp
sbb
dec
push
lret
push
pop
xor
or
jecxz
mov
js
mov
xor
mov
aam
gs
add
xchg
cmp
lret
cltd
adc
xor
xchg
shrl
stos
out
inc
xor
push
mov
sbb
je
adc
mov
mov
fidivl
popf
mov
jecxz
psubw
es
ljmp
insb
lcall
mov
out
inc
mov
enter
mov
push
int
sbbl
xchg
testb
roll
je
or
imulb
or
jle
dec
ljmp
mov
enter
push
mov
syscall
or
imul
ret
mov
cs
inc
cmc
mov
loope
fstpl
mov
inc
loope
mov
negl
mov
fisubl
fcomps
mov
nop
outsl
mov
inc
xchg
pop
adc
dec
sbb
mov
cmp
sti
mov
jle
sti
jne
fmul
pop
and
imull
cld
cwtl
adc
xchg
bound
dec
xor
mov
pusha
mov
dec
push
pop
adc
imul
add
lret
shrl
scas
xchg
scas
sbb
mov
cmc
cmp
inc
dec
inc
into
jae
movsl
mov
ret
insb
pop
rcrl
push
orl
and
arpl
and
and
imul
jne
lock
repnz
mov
jno
and
pop
pushf
and
pop
push
jno
gs
pop
sahf
clc
cli
jo
or
ret
idivb
ljmp
nop
dec
mov
aaa
sbb
mov
and
xchg
sub
cli
pop
inc
mov
stos
xchg
gs
aas
jnp
jbe
jo
pusha
mov
cld
sbb
loope
ljmp
repz
jo
stos
movsl
adc
enter
pop
add
pop
roll
mov
or
adc
jle
loope
stos
sti
push
cltd
outsb
push
data16
hlt
fcmovnu
popf
pop
lahf
mov
mov
jl
daa
imul
leave
pusha
sbb
scas
mov
scas
jnp
outsb
mov
ljmp
sbb
adc
stos
cmpsl
jg
jg
sbb
cltd
mov
inc
movsb
mov
or
int
dec
inc
or
mov
and
pop
dec
sub
mov
pop
in
call
int
xchg
cmp
and
push
xchg
sbb
stos
pop
xor
repnz
sbbl
out
mov
xchg
lea
adc
int
icebp
and
stos
dec
push
orl
out
test
pop
lret
adc
adc
sti
add
sub
dec
loopne
lcall
pop
push
push
sub
test
jo
scas
bound
mov
cmp
push
nop
pusha
pop
popa
aad
cmp
jno
dec
dec
es
add
test
adc
cmp
or
add
rol
cmp
add
cmpsl
and
addr16
loop
sahf
mov
push
stos
push
andb
or
dec
popf
mov
jae
leave
call
sbb
jge
popa
fisttps
and
adc
mov
push
sub
ljmp
jl
mov
jmp
insb
mov
les
mov
fwait
pop
sub
jge
jo
fisubrs
xlat
insb
xchg
lods
scas
mov
mov
inc
push
xor
cmc
cmp
or
andb
mov
dec
loopne
jcxz
mov
or
mov
mov
jno
push
cli
push
pop
inc
sahf
addl
jmp
lahf
shlb
adc
mov
aam
or
cmc
push
cli
cmp
movl
pop
sahf
aad
mov
fistpll
outsl
mov
in
dec
jnp
aas
adc
push
sar
stos
and
mov
into
lahf
out
pop
mov
dec
test
pop
shrl
push
xor
insb
sarl
cmp
lret
adc
incl
dec
mov
and
push
shlb
xor
pop
mov
pop
insb
jmp
test
sarl
inc
mov
pop
ficoml
xchg
add
ret
cwtl
xor
jmp
dec
push
pop
sarl
pop
xorl
or
dec
jp
cmp
mov
pop
les
or
lods
out
ds
adc
pop
sbb
and
cmp
jns
mov
fistl
mov
pop
sub
lahf
loop
pop
int3
loope
je
or
icebp
std
lock
fcompl
sbb
frstor
add
adc
sub
cs
xchg
fcoml
test
mov
lea
mov
xor
lret
pop
arpl
dec
popf
lret
sbb
movsb
xor
sbb
movsl
mov
inc
cmpsb
inc
xchg
xchg
mov
lret
or
mov
sub
mov
jl
arpl
xchg
jg
xor
cwtl
mov
subb
test
cmp
jbe
in
pop
ja
jmp
xor
mov
cli
add
inc
mov
pusha
aaa
adc
imul
adc
js
bound
cld
add
xchg
mov
sbb
adc
negb
mov
sub
sbb
movsl
pushf
addr16
popa
mov
mull
lcall
idivb
fdivrl
loope
aam
sbb
cmp
mov
cld
dec
mov
sub
mov
cmpsl
mov
xorl
ret
pop
jge
lahf
and
insl
lds
jbe
adc
das
popf
mov
sub
fsubl
ljmp
sbb
jnp
mov
vmovq
test
imul
mov
pop
or
jecxz
shll
scas
das
fimull
arpl
and
mov
inc
or
mov
test
add
insb
movb
or
sub
xchg
sub
mov
mov
add
rorb
jbe
movsl
xchg
pushf
sub
fcomp
gs
mov
addb
sbb
mov
cmpsl
orl
push
and
mov
cmp
test
shr
adc
xchg
jb
mov
push
subl
lds
ja
popf
loope
ljmp
sub
mov
cmp
mov
adc
add
dec
inc
lods
sbb
aad
sbb
test
adcb
push
jno
out
fstps
dec
testb
fsub
jle
inc
inc
jbe
mov
jnp
mov
jb
push
mov
sarb
les
sti
out
fwait
addr16
imul
ficompl
mov
jnp
pusha
sbb
jns
lahf
testl
mov
and
adc
and
cmp
sub
push
jns
xchg
fidivl
imul
pop
in
cmpsb
push
jnp
les
sbb
jg
arpl
cmpsl
clc
insb
ret
dec
xchg
or
xchg
lods
mov
shlb
cmp
xlat
inc
mov
push
sub
jmp
inc
loopne
rcrb
dec
push
xor
and
gs
xor
sbb
jae
pop
sbbb
rclb
into
sbb
sbb
gs
lds
mov
jecxz
out
sub
setb
fld
sbbl
arpl
mov
imul
pushf
or
mov
mov
mov
cmp
into
sarl
popa
jge
fwait
movsl
jns
test
push
mov
push
cmp
sub
pop
test
call
shrb
pusha
arpl
push
mov
std
or
rclb
cmp
or
sub
je
sbb
out
adc
mov
clc
or
das
lcallw
jecxz
sbb
popa
jg
pop
mov
ret
insl
roll
ljmp
xor
xchg
sbbl
pop
fnstcw
jno
and
mov
icebp
xchg
fsubrp
jg
loopne
call
scas
pop
mov
xchg
cmpsl
rclb
popa
loop
das
sbb
jle
in
cmp
inc
fadds
loope
sub
stos
mov
loopne
lock
pop
mov
mov
out
pop
int
daa
xorb
arpl
hlt
inc
fwait
pop
and
pop
add
add
cmp
sbb
rorb
ficomps
mov
in
scas
xchg
aam
nop
fldl
push
sub
popf
popa
test
out
xchg
jae
jmp
in
xchg
jecxz
pop
cli
test
addl
or
or
sbb
and
mov
mov
cmpsl
jle
insl
lcall
popa
mov
xchg
push
dec
loopne
bound
xchg
dec
dec
mov
adc
mov
sbb
xlat
lret
in
repz
mov
les
fisubs
and
mov
adc
adc
inc
test
cltd
scas
call
push
mov
and
js
sub
ss
pushf
cs
shrl
ficoms
xchg
aas
loopne
inc
xchg
sbb
inc
std
sbb
sbb
je
call
cmc
lock
test
jno
movsl
out
icebp
xchg
fnsave
addr16
repz
js
ret
fs
jns
fistps
xchg
out
repz
movsl
adc
gs
test
push
nop
sarl
inc
xorb
jmp
pop
and
lahf
xchg
fwait
sub
dec
cmpsl
mov
adc
test
xor
rcll
jno
inc
je
xchg
mov
int3
lcall
push
mov
xorb
mov
jae
push
pop
push
loop
enter
arpl
out
inc
cmp
cmp
xorl
mov
js
in
xchg
xor
adc
mov
xchg
sbb
inc
cltd
xchg
andl
pop
icebp
pushf
jle
aam
in
dec
or
push
stos
adc
cld
mov
xchg
cmpsb
pop
in
test
cmp
mov
and
xchg
or
ds
sub
jbe
sbb
xchg
imul
sarl
insb
fidivl
xor
clc
aam
sub
iret
fcmovb
xor
int3
jo
xor
mov
mov
jbe
lods
arpl
or
dec
add
and
pop
rcrl
clc
xorb
and
jne
ljmp
mov
and
lcall
int3
rcr
xchg
push
mov
mov
lods
mov
mov
cmpsb
mov
push
mov
xchg
mov
call
lahf
gs
movsl
jne
repz
inc
mov
fistpll
mov
stos
sbb
inc
xor
arpl
mov
mov
mov
mov
sbb
push
pusha
lea
mov
mov
lahf
cmpsb
sub
jns
adc
inc
mov
bound
div
test
cmp
sub
jmp
inc
adc
push
pop
rol
insb
jbe
fistpl
mov
mov
push
sti
inc
iret
jecxz
push
xor
mov
andl
fisubrs
aaa
sub
mov
arpl
pop
xchg
add
mov
test
cmp
jp
sbb
and
and
ss
jl
or
ja
cmp
mov
or
mov
jecxz
pop
xchg
add
xchg
mov
push
daa
pop
sub
pop
out
aaa
outsl
sub
scas
xchg
jno,pn
or
enter
leave
mov
cltd
and
test
mov
jp
jbe
arpl
push
push
mov
fdivr
and
movsl
dec
loop
pop
xchg
fisubs
jo
inc
lret
jne
sub
pop
mov
stos
push
cmp
out
push
xchg
aas
js
xchg
cs
cwtl
push
cmpsl
lock
xchg
jmp
sub
je
push
sbb
fsubl
imul
lahf
jae
dec
dec
cmp
inc
add
xchg
leave
jnp
xor
divb
sbb
inc
cmp
int3
add
adc
sbb
sub
in
je
or
and
lea
jmp
negb
mov
lahf
mov
jno
xlat
gs
jno
mov
lret
pop
sub
les
in
pop
mov
mov
jmp
int3
pusha
js
xchg
lcall
mov
mov
std
sti
add
test
mov
bnd
cmp
inc
pop
in
jae
fcos
cs
dec
pusha
addl
rcll
and
jmp
xchg
mov
xor
mov
out
nop
lods
sub
dec
nopl
inc
nop
mov
roll
rcl
shrb
call
pop
lret
and
mov
loope
xor
mov
sub
ret
shl
lret
pop
add
mov
sub
ror
inc
repz
pop
inc
inc
mov
sub
pop
cwtl
je
pop
movsl
mov
push
dec
fcomps
xor
imul
adc
lods
popf
sub
shl
xlat
lret
jg
cltd
sub
mov
sbb
jae
ja
add
insl
mov
xchg
addr16
xchg
iret
lds
movsb
pushf
jnp
cld
dec
sbb
mov
pop
xchg
mov
fwait
std
inc
je
aaa
sbb
aad
mov
sbb
xor
scas
lcall
fisttpl
out
mov
hlt
je
sahf
sbb
add
enter
push
lcall
or
push
pop
mov
lret
mov
dec
adc
dec
inc
xor
mov
inc
mov
dec
sbb
and
std
stc
popa
xchg
dec
lcall
hlt
mov
adc
inc
adc
stc
and
mov
loope
add
push
aam
xchg
test
shlb
mov
subl
ds
aad
mov
jae
stos
and
xchg
nop
jg
aad
xchg
mov
mov
mov
xor
jns
and
xor
sub
out
fidivrs
adc
dec
rcll
jno
cmp
push
mov
sub
in
push
loop
pop
sar
adc
fs
mov
cli
stc
je
dec
out
xor
xchg
xor
ljmp
mov
adc
push
daa
in
in
or
mov
lahf
pop
stos
push
clc
pop
cltd
sbb
cltd
push
pop
cmpsl
aad
xchg
pop
test
aad
bound
leave
dec
and
insl
xchg
pop
push
cmpb
inc
cmp
cld
jne
xlat
cmp
mov
sbb
inc
push
ds
les
push
lds
loop
push
mov
mov
sub
or
mov
xor
dec
xchg
mov
sub
popf
cli
jecxz
cwtl
jbe
xchg
movsb
sar
cmp
mov
xor
xchg
sbb
ret
jne
into
cmp
mov
imul
push
and
fcoms
mov
inc
jnp
jbe
loop
pushl
mov
inc
mov
insb
stos
mov
ja
push
mov
adcl
adc
sub
imul
gs
push
mov
jmp
pop
enter
xlat
les
sub
mov
xor
sbb
fnstenv
or
jmp
inc
push
and
dec
pop
mov
loopne
jle
repnz
aam
mov
lods
cmp
cmp
mov
mov
pop
push
mov
ficoml
push
stc
push
pop
movsb
mov
mov
inc
xor
mov
dec
dec
pop
lods
clc
das
sbb
jo
mov
jbe
xchg
mov
popf
mov
leave
pusha
inc
xchg
cmp
test
pop
leave
cmp
mov
push
fimull
rcll
imul
cmp
adc
mov
xchg
int
add
addb
loope
outsb
test
notb
ds
notl
xchg
setg
lcall
popa
lcall
mov
nop
push
cmp
mov
loopne
sub
subl
cs
lcall
pushf
xchg
xlat
push
adcl
mov
mov
jl
dec
cmp
ret
iret
or
adc
mov
dec
std
add
or
test
xchg
sahf
xor
into
pop
loopne
push
neg
es
orb
dec
jo
mov
xchg
enter
ja
sub
lret
add
ds
pop
push
in
test
cltd
nop
out
inc
push
inc
movsb
jae
movsb
sbbl
std
cmc
mov
mov
lret
sbb
int
sar
and
ret
jg
imul
iret
mov
lret
mov
gs
jge
hlt
adc
fdivp
xchg
into
mov
and
es
cltd
pop
cli
in
cmp
stos
dec
repz
lea
xor
stc
dec
inc
pop
test
or
xchg
adc
ljmp
adc
mov
loop
aas
xor
fs
rclb
cmp
test
fildll
fdivs
loope
lods
sahf
dec
sub
lret
xchg
sbb
movb
pop
adc
sbb
stos
add
fidivrl
out
popf
pop
sbb
in
jmp
mov
out
mov
bound
inc
hlt
sub
sub
mov
popf
cmp
repnz
xchg
push
xchg
std
xchg
sbb
addl
ds
hlt
xchg
pop
sbb
dec
add
stos
out
adc
iret
out
pop
pop
sub
pop
mov
test
pop
inc
mov
sbb
inc
push
mov
loopne
andl
inc
popl
push
leave
ret
cwtl
cli
out
xor
movsl
into
pop
jae
insl
lcall
std
dec
mov
loopne
dec
jle
clc
mov
fiaddl
or
jne
das
loope
out
pop
idivb
fcomip
xchg
repnz
into
ffree
test
enter
fmuls
mov
negl
lds
aam
adc
fcmovne
in
bound
mov
sbb
faddl
test
imul
pop
mov
cwtl
xchg
jl
imull
cmpsb
mov
mov
aaa
adc
cmp
addr16
inc
loopne
iret
mov
xor
daa
pop
addr16
pop
scas
lds
jae
movsb
ret
repnz
add
call
and
inc
push
mov
adc
or
ds
in
push
pop
dec
xchg
or
adc
sti
mov
cmp
cltd
jle
push
mov
xor
mov
xchg
ljmp
and
sbbb
mov
adc
and
sub
add
jmp
scas
dec
ffree
mov
push
xchg
sbb
add
mov
xor
cmp
push
mov
jg
sbb
cmp
xchg
hlt
cmp
push
or
fcmove
movsb
pop
adc
das
push
shlb
fidivrs
scas
lock
xchg
lret
or
out
or
jl
mov
inc
jae
loope
lods
mov
mov
notl
fstp
mov
stos
mov
or
icebp
in
xor
cmp
pop
mov
pushl
xor
pop
inc
jg
repnz
or
jo
adc
roll
push
mov
outsl
mov
mov
out
push
and
pop
jge
pop
jge
mov
push
shll
mov
scas
mov
and
sub
dec
xchg
dec
daa
inc
and
dec
aas
pop
cmp
sbb
jge
movsb
push
sti
inc
push
sub
dec
inc
test
xor
into
lret
jae
mov
xchg
sbb
loope
push
sahf
inc
mov
sbb
sbb
mov
out
push
aaa
xchg
sahf
or
add
cltd
loope
add
cmpsb
fdivrp
out
inc
lods
loopne
mov
dec
mov
iret
dec
push
mov
test
cmp
or
and
into
enter
dec
icebp
jo
push
enter
dec
orl
shr
data16
xchg
xchg
inc
mov
push
lock
dec
stos
test
adc
mov
inc
mov
sub
int
ds
adc
and
or
idivb
mov
ljmp
or
mov
mov
or
mov
ret
fwait
imul
mov
adc
cli
pop
mov
sbb
jbe
insb
test
sbb
lea
or
inc
cmp
push
or
fcompl
push
add
push
sti
mov
lcall
xchg
out
je
aaa
xor
dec
mov
ret
out
mov
and
fcomip
xor
cmpsb
or
mov
xor
push
jns
stos
inc
aas
pusha
xor
rol
cmpsb
rcll
icebp
rcl
popa
enter
xchg
push
sub
push
sub
mov
push
or
or
insl
lret
push
add
push
popf
mov
jge
imul
fsubrl
repz
jmp
cltd
or
add
mov
sbb
push
mov
inc
push
or
pop
iret
xchg
jno
stos
or
sahf
push
sbb
push
xor
push
dec
insb
mov
inc
mov
adc
enter
fsubs
mulb
rcl
mov
inc
add
xor
addr16
das
mov
shlb
add
mov
outsl
or
enter
or
xchg
jnp
xchg
jne
ret
and
jg
mov
stc
sbb
xor
mov
enter
ret
inc
cmc
mov
sti
jno
jae
push
mov
adc
sbb
pushf
jle
mov
adc
mov
notb
fnsave
pop
xchg
cmc
aas
add
cwtl
adc
cmpsb
lret
xchg
pop
mov
inc
lea
lea
insl
sbbl
scas
inc
and
repz
cmc
andl
mov
xchg
ficoml
bound
clc
sar
pop
and
mov
outsl
sbb
xor
adc
inc
test
mov
ja
push
in
push
shl
shlb
cmpsl
arpl
xor
jp
mov
pop
sbb
inc
cmc
divb
repz
insl
shrb
int
push
leave
enter
add
inc
pushf
jns
mov
mov
shl
adc
and
pop
sbb
and
jae
and
or
stos
xlat
outsb
jp
mov
xchg
dec
add
movsb
and
sub
adc
lods
adc
ljmp
mov
mov
or
ja
out
int
and
push
scas
js
mov
adc
or
add
sarl
jns
fildl
pop
je
sub
sbb
lcall
ss
fdivrp
divb
dec
repnz
cmpsl
aad
jmp
push
ret
add
and
or
sti
outsb
cmp
and
inc
icebp
hlt
xchg
xor
or
mov
arpl
xchg
bound
movsl
jecxz
test
cmp
mov
test
and
xchg
cmp
or
push
jg
add
clc
movsl
inc
js
fnsave
loopne
pop
push
hlt
xor
fnsave
es
sbb
in
and
nop
sub
or
inc
xchg
pop
leave
mov
or
xchg
mov
push
leave
lods
xor
push
jmp
inc
faddp
addb
call
xorl
repz
ficoms
lds
and
cmpsb
sub
inc
addb
ret
outsb
sub
xor
add
jle
pop
push
pop
test
iret
cmp
stc
inc
pop
fpatan
mov
adc
lock
add
xchg
imul
push
test
shll
xor
out
mov
fisttpl
push
jno
xchg
pop
push
cmpsb
mov
or
test
mov
insl
hlt
fwait
or
repz
dec
in
add
jmp
sti
sbb
gs
inc
xor
imul
or
loope
lcall
int3
mov
push
adc
movsl
int
enter
mov
mov
xchg
jl
lea
or
loope
mov
mov
dec
ret
test
xchg
repnz
pop
adc
aad
test
sub
jge
mov
call
sub
sbb
pop
add
js
pop
pop
or
and
stc
xchg
xchg
xchg
out
mov
jg
sbb
mov
shrb
push
xor
nop
xor
outsb
movb
lea
into
mov
jne
rorb
in
and
hlt
lret
or
gs
xchg
insb
stos
clc
or
aaa
les
out
out
adc
jne
out
pop
xor
mov
sbb
xchg
mov
out
shlb
in
sub
cmp
popa
mov
ret
ss
jmp
cmp
mov
mov
stos
in
nop
xchg
lea
cld
lds
sbb
fwait
mov
mov
cmpb
lods
leave
daa
xchg
lds
dec
dec
roll
bound
jge
push
out
adc
xchg
cli
shrb
outsb
adc
shlb
sbb
scas
and
jmp
push
out
stos
rol
ret
leave
lahf
cmp
outsl
and
mov
les
testb
pop
push
loop
sub
shlb
push
fmull
je
adc
andl
mov
cmpsb
lods
cmp
mov
out
stos
sarb
xor
add
ljmp
sarl
push
mov
cmp
dec
add
andb
jmp
add
cmp
outsb
dec
cld
mov
mov
loop
push
jp
aad
ja
xchg
jge
std
dec
aaa
adc
xchg
popa
mov
mov
ficoml
xchg
pop
or
negb
ja
in
sahf
mov
stos
sub
fld
imul
out
jmp
movsl
mov
or
adc
jnp
leave
daa
out
jae
pop
inc
jg
out
notb
cmp
addr16
mov
or
mov
push
icebp
dec
jo
mov
xchg
xchg
push
xor
dec
add
mov
imul
jnp
sub
sbb
push
pop
cltd
rcll
fs
push
inc
sub
fwait
ret
dec
mov
into
mov
cmp
out
or
into
pop
scas
pop
int3
push
jb
add
push
sbb
dec
mov
jns
mov
push
pusha
jp
movsb
mov
dec
mov
out
xor
xchg
dec
add
xchg
dec
sub
adc
jb
xchg
xchg
pop
pop
fildll
xchg
dec
pop
inc
sbb
sti
in
xor
lods
cmp
aaa
inc
std
mov
jecxz
sbb
sti
adc
and
mov
mov
stc
js
mov
push
nop
jbe
mov
and
les
out
adc
xchg
dec
mov
dec
mov
pop
push
test
bnd
dec
rcrb
pop
and
pusha
xchg
cmpsb
pop
ret
leave
sbb
mov
xchg
sbb
and
inc
add
mov
stos
imul
fstl
xchg
push
mov
xchg
cmp
push
xchg
int
test
sbb
mov
popf
and
xor
add
lahf
cmc
ja
or
push
push
lds
dec
fs
push
icebp
pop
add
je
loope
insb
jle
jns
outsl
sbb
xor
fnstcw
mov
sub
xchg
inc
pop
or
inc
bound
lods
ja
daa
fisubl
sub
lcall
mov
call
test
add
push
ljmp
shl
loope
inc
out
outsb
fwait
into
lret
stc
or
out
test
pusha
mov
mov
xchg
jb
jecxz
gs
rorl
jae
in
loopne
jp
fsubl
daa
subl
sub
jnp
insb
and
outsl
xor
xlat
shrl
cmpsl
in
inc
lcall
sub
enter
in
push
lods
mov
mov
mov
dec
int3
dec
push
inc
cltd
lret
insl
cwtl
sbb
jge
mov
or
lret
addl
ret
sarb
popf
mov
pop
mov
mov
nop
leave
int
xor
loop
out
inc
sub
pop
test
dec
cmc
lods
sbb
xchg
sahf
mov
pop
cmp
push
daa
inc
mov
mov
bound
loopne
sbb
fimull
jb
cwtl
cmp
cmp
and
sbb
stos
andps
in
push
arpl
fnstenv
xor
lret
dec
out
rorb
lds
gs
pop
jmp
in
cmp
mov
psrlw
fsubl
adc
test
push
dec
xchg
mov
push
mov
stos
dec
insb
jge
mov
jmp
push
sbb
leave
cmp
pop
hlt
sbb
sbb
jle
dec
cld
mov
cmpl
cmp
call
pcmpeqb
mov
mov
xor
dec
out
cmp
and
imul
imul
mov
jmp
out
mov
notb
mov
nop
mov
test
mov
or
stos
fdivrs
mov
cmp
push
mov
in
or
mov
dec
xor
mov
dec
insl
out
push
sbb
adc
inc
cs
scas
insl
addb
ret
flds
mov
out
fiadds
std
dec
inc
inc
std
mov
imulb
into
push
pop
jb
out
xor
pop
dec
dec
ja
jge
test
les
pop
jge
push
dec
dec
jmp
std
inc
fistpll
pop
xchg
push
test
mov
popa
pop
fimuls
pop
sub
mov
mov
mov
daa
rolb
push
inc
jne
mov
inc
and
out
cmc
test
cli
jnp
add
push
push
rol
pop
dec
adc
enter
cmp
movsl
jne
pop
mov
pop
repnz
sub
mov
movsl
cmpsl
in
mov
and
mov
mov
mov
mov
cmp
dec
sbb
xor
loope
mov
cs
xor
loopne
fwait
sub
mov
notb
or
aam
rcll
mov
jns
enter
adc
mov
in
inc
popf
daa
xchg
call
xchg
adc
adc
cltd
subl
sub
sbb
rorl
adc
sahf
test
or
testl
inc
call
cmc
add
adc
sub
std
dec
insb
in
adc
or
cmp
loop
in
mov
stc
sub
js
mov
and
add
push
add
add
push
jp
mov
and
int3
cmp
or
lahf
and
pop
es
mov
or
shlb
jo
loopne
jmp
xchg
jbe
fsubr
xor
imulb
cld
mov
in
jge
pop
cmc
jmp
xorl
shll
mov
sub
inc
cmp
sub
imul
inc
xchg
addb
jno
ret
loop
dec
add
cltd
mov
sbb
adc
test
push
repz
push
jle
gs
mov
mov
faddl
cwtl
inc
icebp
mov
jge
or
mov
dec
shll
cmp
ret
mov
jbe
mov
sbb
cld
xchg
jp
xor
out
mov
adc
arpl
cmc
push
mov
iret
loop
pop
std
push
push
hlt
cwtl
pop
lret
enter
xchg
pop
movlps
inc
je
push
shrb
add
arpl
cmp
or
and
pop
hlt
xor
jae
dec
xchg
daa
ret
adc
pop
mov
lret
sti
jo
fistpll
fwait
xchg
cmp
inc
pop
stos
xor
cld
pop
fincstp
dec
pop
mov
add
sub
inc
lahf
cmp
lret
push
ret
dec
stc
add
int3
repz
mov
rol
add
pop
iret
jo
xor
fnclex
ds
mov
dec
add
pop
add
inc
dec
jmp
adc
push
jmp
aas
addr16
loope
sub
pop
dec
cltd
xchg
fsub
psubd
push
xchg
repnz
fistpl
imul
test
movsb
xor
or
pop
cld
mov
push
dec
movsb
dec
test
popf
repz
callw
pusha
mov
sub
in
ljmp
shlb
lea
lock
addb
pop
lea
inc
scas
xor
aad
in
xchg
mov
jl
sbb
inc
push
imul
mov
aas
cmp
sbb
pop
xchg
dec
sub
into
test
xor
mov
cmp
aam
mov
pop
loope
cmp
and
dec
sti
insl
sub
xor
test
lods
or
ds
xor
lret
push
jns
and
push
and
popa
inc
and
xor
mov
cmp
js
cmp
pop
inc
fsubs
mov
sbb
shlb
push
fidivrs
arpl
adc
push
lds
ljmp
push
xor
out
mov
dec
sub
dec
icebp
xchg
std
jg
in
jl
pop
xchg
gs
mov
psubq
shr
add
out
aad
rcll
out
or
sub
imul
or
jg
pop
dec
mov
jb
fwait
rorl
or
lret
mov
mov
lcall
movsl
out
push
test
into
adc
pop
scas
insb
and
add
stos
cmp
mov
adc
push
hlt
cli
sub
cmp
inc
push
push
aad
in
adc
jo
out
add
adcl
cs
jg
mov
es
lods
sub
enter
add
xor
adc
add
sub
fstpt
push
pop
jne
and
sbb
call
repz
xchg
andb
mov
enter
fadd
jecxz
inc
xor
pop
or
inc
test
pop
xor
mov
pop
xchg
call
clc
pop
dec
sbb
jmp
mov
int
push
and
sbb
ret
mov
lods
loope
mov
cmpsl
cmp
xor
popf
fst
jecxz
fildl
cwtl
push
push
nop
and
mov
loop
cltd
or
movsb
imul
dec
add
mov
mov
sbb
xor
dec
jmp
aam
lret
iret
sub
push
xchg
std
stos
das
jp
insb
pop
jb
outsl
ret
loopne
pop
cmp
mov
or
adc
xorl
jne
sub
xor
cmp
xchg
scas
std
xor
sub
aas
cmc
fbstp
xchg
jmp
push
mov
sub
dec
cltd
mov
cmp
sub
fsubrs
push
into
out
lods
jecxz
cmc
leave
push
push
std
cmp
push
fs
xchg
inc
lahf
mov
ljmp
dec
movsl
mov
scas
das
dec
xor
daa
clc
das
mov
pop
pushf
mov
pop
push
loope
sub
dec
jno
push
sub
imul
xchg
inc
adc
in
aam
call
cmp
cs
adc
movsl
pushf
das
sbb
xor
gs
push
push
mov
pop
cmpsl
jmp
aam
adc
lret
mov
inc
jl
loope
fnsetpm(287
andl
popa
cmp
mov
lods
mov
cltd
push
push
push
int
mov
fcmovne
cmp
xor
mov
clc
gs
cmpsl
lods
pop
pusha
or
adc
sahf
cltd
or
negb
jle
mov
mov
clc
lea
sbb
or
and
xchg
arpl
mov
fbld
fs
mov
jbe
cmc
xchg
inc
or
mov
rcll
lods
shll
lret
or
push
inc
dec
mov
dec
andl
lcall
mov
cmp
stos
int
fidivl
push
push
enter
jae
fwait
or
outsl
cmp
movsb
or
lods
insb
stos
pushf
addr16
sub
jns
pop
jmp
dec
jbe
mov
push
mov
push
xchg
imul
xor
mov
lret
stos
and
lods
rorl
push
mov
mov
mov
or
mov
inc
aaa
cwtl
dec
mov
xor
sub
inc
dec
ds
out
mov
pop
fs
repnz
shl
adc
inc
imul
test
dec
lcall
imul
add
test
ja
gs
fldcw
add
jo
daa
popa
inc
mov
pop
xchg
and
imull
xor
mov
sti
aad
loop
inc
mov
mov
lock
pushw
lods
enter
lcall
fisubs
insl
lds
xor
jno
mov
xchg
lea
mov
push
sbb
inc
fxam
movsl
jae
mull
mov
rcll
xchg
mov
and
jbe
and
outsb
ds
mov
test
xchg
ja
pop
xor
andl
cs
mov
pop
lahf
jp
cmpsb
add
adc
and
pusha
mov
xchg
adc
mov
mov
repnz
insl
sub
sub
mov
mov
ficompl
mov
sub
out
insl
xor
je
mov
push
and
jmp
lea
jno
out
pop
rorb
adc
shrb
fldenv
inc
xlat
push
jmp
gs
gs
test
inc
mov
cmp
movsb
shll
inc
mov
add
rclb
mov
test
out
fisttpl
sbb
stos
jno
fidivrl
lock
imul
jp
mov
xor
cld
jb
test
dec
mov
push
jo
jle
jg
and
rcrb
adc
or
cld
icebp
je
movsb
das
xor
mov
xor
loop
repz
dec
xor
pushl
in
lea
adc
xor
mov
and
push
fldt
inc
scas
jns
test
std
mov
xor
lods
mov
adc
push
call
test
xchg
inc
stos
test
inc
push
pop
jmp
andb
xchg
xor
jo
sbb
xor
gs
pop
sbbl
fistpl
dec
adc
add
inc
dec
xlat
and
cmp
inc
add
mov
inc
imul
sub
movsb
jl
cmp
loope
js
xor
mov
pop
rclb
mov
rcr
push
daa
fcmovne
cmc
mov
jle
lcall
dec
or
repnz
or
mov
inc
or
sub
jbe
repz
pop
dec
js
or
mov
lret
shl
aad
gs
jge
mov
sub
aas
ret
scas
adc
movsb
pop
sbb
orl
lea
inc
pop
cs
loopne
inc
sub
int3
and
jo
dec
sub
mov
or
repz
mov
jo
push
iret
dec
xor
scas
in
push
pushf
dec
pop
imul
cmp
add
jge
cs
shll
pushf
cmpsl
xor
and
sbb
fildl
call
push
xlat
repz
mov
mov
je
dec
es
cmc
pop
push
pop
pop
mov
sbb
das
xchg
and
iret
out
test
cmp
call
fwait
repz
inc
or
popf
cmp
pop
or
or
int3
hlt
hlt
cwtl
xchg
add
fadd
in
decb
jb
cmp
mov
mov
or
xchg
aam
ret
sub
cwtl
cwtl
into
mov
xchg
shlb
int
cltd
and
hlt
cmp
mov
cmc
scas
pop
ror
add
call
paddq
mov
dec
ret
mov
das
mov
push
add
xor
jb
data16
insb
mov
psrlq
mov
insl
jp
xchg
adcl
mov
pop
mov
rolb
into
cmpsb
clc
mov
xor
sub
arpl
inc
int3
gs
mov
jb
or
mov
pop
ds
dec
pop
jmp
popa
push
cmp
or
pop
test
daa
les
push
std
pop
sbb
outsl
mov
popa
std
push
push
fisubs
scas
ret
jb
std
inc
push
lods
into
fistpll
lds
mov
fwait
subl
dec
mov
aad
sbb
lds
ljmp
jne
insb
sbb
cltd
mov
jbe
dec
mov
and
xor
lret
mov
and
jp
cltd
xchg
popf
out
adc
pop
push
stos
popf
sti
enter
inc
push
stos
pop
mov
lahf
mov
dec
callw
mov
shl
add
icebp
jge
push
jmp
sbb
cli
ja
sub
sub
repnz
jle
jecxz
sbb
adc
cwtl
in
enter
std
xchg
inc
sub
ret
mov
jb
ljmp
cmp
aam
divl
mov
pop
push
sbb
jle
cltd
push
outsb
movsb
sub
xchg
xchg
divl
add
add
xchg
mov
push
cmpsb
mov
xchg
and
cvtps2pi
jl
mov
and
bound
sub
ficoms
iret
mov
outsb
ficoms
xchg
cmp
dec
jo
ljmp
adc
lcall
popa
xchg
ficoml
inc
push
or
inc
arpl
shrl
in
inc
cmp
out
out
divl
xchg
pop
sbb
sub
ret
mov
dec
fidivrl
test
sbb
mov
sbb
mov
mov
and
inc
sub
lds
jle
push
hlt
mov
inc
jns
rcll
ds
iret
cwtl
negb
dec
stos
fnstcw
xor
inc
test
fistpll
add
and
jle
scas
fwait
push
sub
pop
dec
jp
rcrl
jg
mov
test
dec
mov
or
mov
div
inc
rclb
popa
int3
sub
aas
aam
add
push
cmp
enter
mov
pop
mov
pushf
js
mov
repnz
mov
xchg
xor
pop
sub
cli
mov
add
ljmp
imul
pop
test
cltd
lods
xchg
nop
lds
adcl
push
outsb
orl
adc
and
fnstenv
mov
cmpsl
mov
sti
lock
fldt
jmp
pminsw
lahf
int
insb
fcmovbe
fcom
cmpl
sub
mov
jl
mov
sbb
inc
stc
rcr
loope
jb
mov
or
xor
mov
mov
mul
or
cmpsl
xchg
sbb
xlat
mov
out
inc
outsb
bound
push
xchg
jle
aad
and
or
mov
jns
xor
pop
push
jecxz
roll
push
adc
mov
push
push
pop
mov
repz
sub
data16
mov
lods
push
loop
scas
int3
cmpsl
cmp
xor
std
movsb
lret
popa
sub
mov
fucomi
cmp
lcall
cld
inc
adc
sbb
je
inc
sub
pop
xchg
inc
push
mov
or
test
mov
loop
pushf
xor
pop
lods
imul
add
imul
jno
push
mov
leave
lods
repnz
xchg
inc
dec
pusha
pop
loopew
push
xchg
and
lock
sahf
in
decb
dec
sub
movsl
xchg
xor
sub
or
addr16
cmp
fidivrl
dec
mov
dec
xlat
pop
jle
ficoms
loopne
insl
gs
xor
mov
out
scas
jbe
mov
repnz
jp
cmp
pop
push
pop
pusha
xor
xchg
je
insb
aad
das
popa
movsb
cmpsb
and
fldcw
sbb
jb
add
push
jae
iret
int
mov
xchg
push
mov
dec
fs
inc
mov
or
pop
sub
mov
imul
push
pushw
mov
insb
dec
sub
or
dec
mov
subb
mov
pop
mov
and
arpl
add
add
push
fmulp
sub
cmp
pop
aas
mov
xchg
xorl
and
xchg
insl
test
cmc
bound
xchg
aaa
add
and
add
int
or
dec
push
pop
dec
clc
lret
fisubs
cmp
call
cmpb
cld
stos
mov
in
cltd
and
push
mov
mov
in
clc
jb
push
rcrl
loope
add
sub
xchg
cltd
cs
or
dec
cmp
dec
fstl
push
cmpsl
adc
pushf
dec
adc
push
push
repz
incl
test
push
dec
shrl
filds
repz
mov
andl
mov
push
mov
or
inc
int3
or
repz
push
icebp
add
ljmp
rcrb
jae
es
adcb
mov
test
sub
data16
aad
addr16
and
adc
mov
leave
lods
push
mov
lock
in
into
dec
into
add
sub
cmc
arpl
or
pop
xchg
jne
stos
fwait
xor
add
push
das
sub
repz
lods
dec
fistpl
push
aam
aad
in
adc
inc
push
test
outsb
movsl
lods
xchg
in
fdivrs
inc
pop
add
add
scas
mov
jbe
popa
xchg
enter
xlat
cmp
and
pusha
xor
stos
movsb
sbb
mov
inc
add
aam
pop
mov
pop
out
hlt
or
aam
pop
out
popf
lea
lcall
popf
pop
add
loope
mov
and
jl
movsl
rcrb
xor
call
icebp
mov
jb
and
popf
ds
push
mov
sub
int
jecxz
movsl
mov
std
push
call
stc
inc
ljmp
cli
test
mov
stos
into
and
data16
mov
insb
xchg
jne
adc
lcall
in
inc
add
loopne
xchg
inc
dec
mov
in
push
int3
push
mov
leave
shll
pop
cmp
cmp
loope
mov
xorl
or
push
jp
int
pusha
jo
xchg
lret
dec
dec
push
mov
push
leave
je
jae
lods
test
stos
insb
orl
xor
jbe
stc
xorb
packssdw
dec
out
jns
jmp
in
aaa
and
xchg
loop
lods
outsl
dec
jg
repnz
rol
jbe
jge
cltd
icebp
jno
pop
mov
test
sti
aad
pop
mov
add
push
sti
adc
in
xorb
lahf
inc
cmc
or
and
xor
dec
arpl
bnd
jg
jae
mov
and
mov
dec
cld
jp
ja
andb
scas
mov
sahf
sbb
jbe
jo
insl
mov
enter
stos
jo
pop
mov
ficoml
icebp
test
dec
pop
cmp
dec
or
ja
mov
into
and
and
mov
push
fstpt
orb
repz
cmp
jnp
aaa
imul
test
movsl
out
movsb
inc
dec
push
stos
gs
dec
or
std
pop
xchg
in
andps
and
adc
dec
adc
out
add
dec
pop
fwait
add
lcall
add
jno
xchg
inc
push
mov
and
lahf
adc
or
adc
push
xor
and
aad
into
imul
ds
jnp
lcall
repz
nop
sbb
push
dec
xchg
or
adc
push
mov
inc
add
pop
leave
sbb
jecxz
xchg
pop
and
sbb
adc
jb
or
bound
dec
arpl
sarl
push
scas
repnz
out
loop
sbb
sti
xchg
outsl
in
ret
cs
in
or
std
outsl
or
xchg
loop
jns
arpl
movsl
flds
cmp
scas
mov
cmc
movsl
shrb
stos
clc
pop
mov
push
scas
jl
subl
int
hlt
test
test
sbb
or
iret
outsl
push
pop
lahf
icebp
cmp
jmp
mov
push
pop
outsl
sbb
in
xchg
push
pop
mov
add
into
sbb
xor
xchg
cmp
pop
test
test
jae
mov
icebp
push
roll
ret
xor
popl
imul
xlat
add
stc
add
xor
scas
popa
sub
or
stc
mov
stos
mov
mov
enter
xchg
jae
pop
int3
push
and
dec
mov
adc
push
bound
rol
je
cmp
repz
out
jne
out
scas
jno
xchg
pop
pop
fbld
cmc
fs
lock
shlb
push
js
sahf
loopne
out
jae
cmpsl
out
xor
shrb
xchg
fnstcw
and
cmp
mov
outsb
dec
dec
cmp
xor
push
stos
add
add
or
sti
arpl
mov
icebp
sub
ja
imull
test
jle
cwtl
xchg
mov
adc
pop
rclb
add
adc
and
es
jecxz
adc
jo
sbb
sbb
shl
jmp
push
rolb
mov
sub
adc
push
inc
push
popf
paddsb
mov
lock
cld
frstor
inc
pop
inc
int
pop
jp
mov
and
aam
xchg
js
fs
and
mov
lcall
and
mov
stos
rcrb
rcll
cmpsl
jg
and
xor
out
cmp
push
sbb
add
cltd
insl
imul
or
push
add
mov
jne
cmp
iret
jno
in
cmc
jae
add
mov
sti
jae
mov
push
push
rclb
in
stos
inc
ret
mov
ret
rol
cwtl
pop
sub
xlat
cmp
xor
fldenv
repnz
pop
fsubrl
jnp
dec
mov
dec
ja
pop
popf
aad
lcall
sub
adc
add
xchg
pop
xchg
aaa
lock
cwtl
loope
cmp
mov
ds
aaa
cmp
bound
cld
inc
orb
sbb
nop
bound
sub
or
mov
cmc
test
sub
stc
in
add
fldcw
xchg
lret
ss
and
add
icebp
rclb
add
hlt
lds
jmp
dec
out
jae
mov
inc
sub
scas
push
sti
push
movsb
vpavgw
in
mov
cmpb
stos
jb
sbb
bound
cmp
dec
jo,pt
jb
cmp
push
dec
sbb
jo
pop
dec
jg
mov
jge
fildl
sahf
sub
enter
call
xor
pusha
dec
pop
xor
fnstcw
sarl
adc
je
dec
sub
into
inc
sub
jbe
sbb
pop
adc
xchg
scas
adc
lcall
adc
jnp
mov
xor
cli
sub
and
sub
jae
rcl
mov
or
jp
or
int
daa
adc
and
add
leave
jl
insl
push
pop
jb
sti
and
aad
cltd
mov
out
xor
ret
push
mov
dec
or
pop
pop
or
std
pop
in
sub
cltd
sub
sbb
test
sti
cmc
sbb
repz
xchg
ss
sbb
mov
imul
lock
mov
dec
pop
sbb
pop
test
pop
ret
mov
stos
xchg
shrl
sub
fwait
stc
data16
dec
sub
mov
insb
dec
sbb
movsl
mov
fldenv
inc
cmp
fidivl
mov
and
rcll
xor
mov
mov
sub
xchg
sub
ret
pop
mov
sub
insl
pop
fcmovnu
add
fstl
insb
addr16
add
or
mov
outsb
pusha
neg
insl
mov
insl
push
fsubs
pop
cld
fisubrl
jl
insl
das
mov
mov
jb
in
sbb
dec
sbb
pop
pushf
push
adc
ret
mov
xchg
decl
push
pop
push
mov
xor
outsl
test
jecxz
cmp
pop
seta
adcl
dec
in
xchg
add
or
xor
mov
push
shll
outsl
flds
and
sti
scas
inc
cmpsb
jmp
into
cmpsl
cwtl
xor
into
or
mov
xlat
pop
xchg
into
cmp
leave
add
adc
mov
daa
or
jae
push
enter
in
out
adc
inc
xchg
jo
das
pop
adc
jg
push
xorl
fstl
and
mov
mov
fisttpll
adcl
adc
push
sbb
sbb
push
xchg
cld
push
adc
les
mov
xlat
mov
jo
pushf
das
push
jne
cmc
aas
pop
and
lret
sbb
jns
mov
and
stos
sbb
aam
cs
push
or
push
cld
pop
sbb
enter
push
test
adc
jl
loopne
xor
mov
inc
cwtl
xchg
out
insb
in
inc
stos
mov
sub
jb
testb
loop
test
call
je
in
fisubs
mov
adc
pop
pop
xor
mov
loope
inc
cld
movsl
and
stc
insb
push
add
inc
fistl
cmp
leave
ficoms
subb
fisttpl
movsl
pop
rclb
je
xor
in
add
cs
or
xchg
loop
mov
in
idivb
rcl
mov
mov
mov
or
jg
bound
cmp
jne
mov
adc
and
mov
cmp
xchg
mov
in
mov
jne
cmpsb
dec
mov
jp
jns
popf
rcl
xchg
dec
sub
sub
or
nop
popf
adc
xchg
xchg
pop
cld
nop
and
mov
fimuls
fstl
stc
jl
add
mov
aam
mov
lahf
push
dec
adc
xorb
pop
jmp
sub
mov
call
dec
sbb
int3
sub
repnz
jns
jecxz
cmp
jp
sbb
mov
pop
mov
mov
jmp
mov
pop
pop
pop
mov
cli
fidivrs
sbb
fs
es
xor
sbb
or
add
ret
fidivs
and
or
pusha
cmp
or
inc
add
icebp
xchg
mov
shrl
mov
mulb
add
clc
ret
movsl
push
addr16
cmc
pop
lds
test
outsl
add
xchg
cmp
xor
in
ja
andl
inc
stc
lcall
jecxz
mov
xorb
mov
dec
mov
dec
xchg
lret
fcoml
xor
dec
dec
jp
gs
inc
xchg
stc
data16
mov
lret
enter
fisttps
mov
loope
div
packsswb
leave
or
add
ficomps
inc
mov
sbb
aas
mov
outsb
shlb
or
fiaddl
jmp
nop
adc
mov
in
inc
ret
les
mov
into
sbb
lock
je
pop
add
movsb
ret
push
sbb
add
inc
jge
in
xor
repz
ja
xchg
or
movsb
jae
int
bnd
gs
std
cmp
mov
or
jmp
or
inc
add
aas
addr16
pop
leave
add
int
fxch
repnz
xchg
popf
pushf
mov
stos
mov
push
dec
or
iret
jno
lahf
rcl
pop
ljmp
iret
sbb
cmc
xor
dec
icebp
dec
mov
bound
push
or
dec
std
insb
ljmp
cmpsl
repz
in
mov
adcb
leave
lds
int
test
stos
pop
mov
daa
mov
repz
push
mov
xor
es
xor
adc
mov
pcmpeqw
lods
jl
mov
addr16
daa
cmc
sub
xchg
cld
sbb
stos
imul
jg
leave
sbb
adc
mov
jg
and
mov
mov
push
mov
das
dec
iret
xchg
xor
jge
insl
mov
mov
arpl
cmp
dec
xchg
imul
sahf
pop
inc
push
out
pop
lds
adc
adc
inc
add
ret
and
pushf
push
mov
mov
nop
out
or
push
out
orb
in
dec
in
scas
mov
es
xor
adc
pop
inc
sbb
and
push
mov
dec
insb
mov
leave
mov
out
mov
pop
fs
sbb
mov
mov
push
stc
adc
out
test
sbb
fucomi
fcoml
adcb
push
mov
clc
pop
arpl
insb
and
mov
and
mov
outsb
and
mov
and
divl
xor
out
mov
sub
int
sub
lods
and
dec
movsb
decl
cmpsl
mov
idiv
and
jp
lods
loope
add
add
cmpsb
jo
fnstsw
pop
dec
insb
cs
push
push
and
roll
mov
xchg
mov
cmpsl
xchg
inc
stos
cmp
stc
rorb
bnd
and
lea
mulb
mov
mov
movsl
adc
fstpt
jbe
or
pop
mov
hlt
mov
mov
movsb
and
cld
mov
lock
fwait
mov
push
mov
ljmp
and
mov
cmpsb
pop
in
mov
out
cmpsb
sbbl
sbb
or
jg
cltd
aaa
jle
jmp
and
cli
cmpsl
pop
outsl
xor
mov
and
movsl
out
je
cld
inc
test
sub
pop
add
in
cmp
pop
fstps
mov
cmp
xor
push
and
xor
adc
test
pushf
jmp
xchg
xchg
sub
xchg
adc
push
mov
cmp
xorb
mov
push
fwait
je
jns
scas
inc
stc
in
test
fsub
mov
sbb
mov
xlat
and
cmc
mov
sbb
frstor
sti
mov
mov
mov
jbe
in
scas
shlb
out
pop
lock
pop
or
mov
push
outsl
fiadds
mov
int3
jnp
mov
lods
push
adc
cmp
mov
push
insl
mov
imul
and
stos
es
cli
popf
or
sub
inc
jge
mov
cmp
inc
adc
out
cltd
pop
data16
ss
pusha
mov
leave
mov
out
sub
inc
aas
cmp
mov
cli
mov
jmp
popf
push
and
xchg
adc
mov
mov
sbb
bound
xchg
arpl
dec
lods
adc
fsubrs
pop
inc
sub
mov
sbb
jae
out
adc
jno
loopne
and
sub
lea
inc
bound
lret
lds
xchg
push
mov
xchg
hlt
xor
xchg
cmp
mov
in
inc
sub
mov
stc
inc
adc
add
test
jg
lods
or
inc
ret
inc
outsb
fmuls
xchg
mov
mov
jb
jb
cld
fwait
loope
aad
jg
rorl
outsl
xor
fcmovb
popa
jbe
mov
dec
psubsb
jp
pop
adc
inc
adc
jne
cs
repnz
pop
xchg
in
movsb
push
mov
mov
sub
cmp
cltd
mov
or
dec
push
fst
ja
mov
jne
mov
jmp
mov
std
fcoml
push
fcoms
mov
push
lds
dec
clc
xchg
cmp
movsb
xchg
lods
add
xchg
in
popf
lea
shll
sbb
leave
mov
and
mov
shrb
mov
repnz
or
outsl
jo
pop
xchg
imull
test
push
or
and
aas
stos
pushf
stos
test
test
arpl
cmp
int3
std
rcl
push
arpl
test
sbb
jnp
push
pop
and
pop
aaa
fbld
push
ljmp
cmpsb
sub
xor
movsb
hlt
je
test
or
roll
add
dec
mov
mov
pop
testb
test
test
into
sbb
cli
lahf
jbe
jb
mov
push
fnstcw
or
pop
cmp
xchg
movsb
pop
cmp
lcall
cmpb
mov
pop
pusha
fwait
add
sub
mov
or
in
lahf
sbb
push
dec
cld
lds
mov
shlb
je
cmp
pop
dec
ds
decb
aam
add
jnp
int3
js
adc
mov
je
in
out
dec
cmp
repz
push
jle
int3
mov
flds
repz
dec
stc
fdivl
pop
jnp
in
inc
ljmp
add
aas
rorl
dec
xchg
addb
push
mov
lods
jnp
jmp
adc
fcomi
jp
xlat
rclb
cmp
imul
push
pop
daa
scas
clc
ja
xchg
pusha
enter
mov
fistpl
loop
mov
pop
cs
cs
jl
daa
add
and
mov
dec
in
clc
mov
jecxz
cltd
dec
call
notb
rolb
push
inc
lods
cmp
add
icebp
inc
testl
mov
stos
in
cmp
icebp
out
fldcw
adc
dec
lock
sahf
clc
cs
mov
clc
stos
incl
dec
add
fstps
shll
in
imul
jb
inc
cmp
movsb
cmp
pop
std
mov
or
xchg
hlt
ror
sub
mov
push
js
cmp
xor
cli
dec
hlt
sub
push
jae
clc
lret
push
sbb
mov
xchg
call
mov
addr16
cld
aaa
dec
dec
jg
and
sub
push
incb
dec
testl
pop
repz
in
lds
popf
push
mov
movsl
popa
sbb
xchg
cmp
sbb
and
xchg
stc
clc
dec
imul
adc
test
cs
xor
ss
pop
ret
call
scas
cmp
fisttpl
mov
rorl
pop
loope
xlat
aaa
cmp
xchg
mov
add
pop
fiadds
inc
or
into
sbb
push
pop
inc
xchg
int3
jecxz
sbb
xor
lods
je
mov
inc
adc
stos
xchg
aaa
add
xchg
repz
outsb
jb
fldlg2
mov
int
pushf
shrl
ja
add
sbb
arpl
push
dec
pop
clc
int3
aas
jle
imul
arpl
nop
mov
sbb
or
or
adc
lods
push
push
mov
movsl
sub
outsl
stc
dec
push
test
ret
xchg
lods
mov
mov
xlat
jl
cmp
ja
push
add
lret
or
cmp
dec
inc
loope
cmp
or
nop
xor
aam
and
lret
ficoms
or
mov
sbb
nop
adc
mov
cmpsl
in
inc
test
and
sub
fwait
lock
outsl
stos
out
sub
cmpl
fnsave
inc
repnz
sahf
aad
sub
xor
repnz
nop
pop
sbb
movsb
inc
iret
jmp
push
cmp
mov
leave
cld
clc
add
outsb
push
addb
add
clc
adc
or
mov
out
stos
js
in
ret
inc
dec
scas
aas
and
cmc
pop
jnp
test
ljmp
xor
xchg
imul
inc
push
rcrl
int3
push
cmp
addr16
leave
out
test
or
fisubrs
cmp
mov
xchg
dec
hlt
addl
imul
shlb
fsubs
bound
pop
jmp
clc
xlat
dec
je
lahf
add
inc
xor
inc
sarl
jne
daa
sbb
or
mov
ds
dec
jne
int3
into
lds
popa
dec
push
xchg
push
das
aam
rolb
arpl
push
adc
xor
cmp
scas
jo
call
pushf
daa
mov
mov
fisubl
stc
push
mov
loope
ret
repnz
stos
pop
adc
add
int3
push
out
stc
addr16
cmc
inc
jo
xchg
dec
mov
call
sub
dec
and
mov
mov
or
das
in
roll
into
das
roll
sbb
dec
sbb
nop
mov
xor
aaa
das
bound
int
popa
fcompl
sti
dec
arpl
pop
lods
rcll
mov
imul
cwtl
sub
pop
pop
pop
add
addr16
jle
das
std
sbb
sti
loope
iret
and
sbbb
shr
repz
pop
outsb
nop
mov
mov
adc
fistps
mov
mov
mull
push
aad
cmpsl
jge
xor
jl
aas
mov
lock
pop
adc
test
pushf
out
cmp
jp
mov
dec
ja
imul
adc
mov
add
gs
or
add
std
mov
push
jp
call
cwtl
or
sar
and
dec
loopne
jecxz
rcl
mov
jb
inc
jae
xor
push
mov
inc
or
xorb
mov
mov
push
js
ja
test
xor
fnstsw
pop
movsb
mov
stos
xlat
test
test
bound
aam
xchg
lcall
mov
in
out
jnp
xor
lret
or
mov
xchg
or
push
cmpsl
les
adc
ds
sub
mov
lock
lods
ret
popa
or
pop
jmp
add
rolb
rcll
mov
sub
jae
mov
xor
inc
int
mov
call
pusha
push
jo
imul
out
lcall
xor
mov
sub
repnz
pop
sub
xchg
mov
rcll
mov
mov
in
lods
repnz
ljmp
fucomip
pop
mov
pminub
xchg
dec
cmp
iret
pushf
ds
push
push
cmc
add
xor
stos
pop
pop
cli
inc
cmc
sub
movsb
push
sbb
mov
dec
out
pop
mov
in
pop
or
enter
mov
je
lods
jb
movsb
stos
lcall
jle
test
int3
add
mov
pop
sti
sub
out
cmp
aad
call
or
push
pop
push
insl
pusha
xlat
xchg
xchg
dec
add
mov
mov
ss
adc
push
jecxz
adc
inc
mov
fists
clc
fmuls
pushf
lods
roll
in
or
mov
mov
add
je
movsl
mov
aaa
ljmp
outsl
test
push
clc
pop
fsubl
sbb
sahf
jno
xchg
sbb
xchg
and
cmc
pop
mov
enter
scas
jnp
inc
in
mov
xor
dec
xchg
or
sub
jp
js
mov
ret
dec
hlt
cltd
dec
cmp
pop
stos
in
and
push
lock
rol
bound
mov
adc
popa
or
mul
push
push
dec
xchg
sub
add
lods
push
imul
xor
cmpsl
mov
scas
xor
js
lahf
fmuls
test
popa
or
jno
dec
add
jecxz
and
addr16
aas
test
mov
mov
push
rcrl
scas
cmp
cmpsl
pop
sti
das
mov
lret
ja
cmpsl
and
push
push
aas
lret
movsl
lods
int3
push
dec
mov
std
xchg
sub
push
mov
mov
dec
dec
push
dec
cmp
mov
mov
xlat
push
jge
cs
cmp
ljmp
lds
andl
mov
inc
mov
ds
std
and
pop
sbb
push
add
mov
jge
ret
imul
icebp
lock
negl
lods
nop
fwait
mov
jp
fcomps
addr16
scas
lods
xchg
hlt
enter
sub
aam
xlat
mov
roll
mov
mov
aam
test
or
mov
mov
ss
repz
and
inc
mov
andb
mov
shll
in
std
sbb
in
pop
mov
adc
xchg
data16
inc
jb
stc
mov
scas
out
mov
mov
sbb
adc
aam
sub
fldt
adc
sahf
mov
sub
add
dec
push
jno
jae
mov
adc
or
ds
loopne
cmp
enter
sti
les
pop
arpl
lcall
mov
cmp
lret
jle
ljmp
ret
dec
jb
mov
lods
ss
cmp
pop
lods
leave
adc
cmp
mov
push
mov
sbb
add
jmp
cmp
rcl
cwtl
push
cltd
clc
cwtl
test
daa
adc
lds
bnd
cli
stc
incb
jmp
cmp
xchg
cld
push
jp
aad
push
enter
pop
xchg
or
je
sahf
mov
xor
fstsw
lods
jp
xchg
mov
and
or
cltd
pop
mov
mov
mov
jne
fdivs
in
imul
out
sbb
lods
or
mov
and
dec
hlt
fwait
insb
test
cli
mov
iret
scas
icebp
mov
shlb
out
lock
fisubrl
mov
and
pop
adcl
mov
ficoms
jge
jae
sbb
jmp
enter
fimull
in
sti
sub
pop
daa
sbb
pop
iret
stc
sbb
xor
popa
pop
xchg
mov
xchg
ss
jnp
jno
pop
lcall
addr16
in
ret
lret
cltd
sarl
add
ds
dec
and
sub
int3
mov
xchg
js
outsb
stc
insb
jnp
sbbb
inc
or
push
cmp
xchg
xchg
data16
sti
stc
pop
bound
das
mov
jl
sti
lret
cmp
pop
scas
cmp
xchg
ljmp
mov
sbb
or
cltd
pop
xchg
imul
inc
mov
jecxz
mov
push
cmp
jl
mov
sub
in
inc
add
mov
xchg
gs
cmp
adc
sbb
hlt
xchg
adc
sbb
mov
sub
movsl
cmc
sbb
mov
xchg
pop
and
in
pop
test
dec
and
mov
push
or
sahf
pop
sub
mov
mov
in
mov
imul
jb
pop
gs
push
pop
push
inc
stos
rolb
inc
es
cmpsb
adc
sahf
sbb
enter
stc
imul
jb
scas
icebp
xchg
mov
jo
inc
xor
inc
xchg
dec
or
aad
mov
inc
scas
fs
or
addr16
loope
or
dec
xor
or
imul
data16
push
mov
or
add
test
mov
xchg
xor
inc
movsb
inc
jns
lret
into
dec
fsubrl
movsl
cmc
jne
shrl
mov
sub
stc
jp
stos
jmp
clc
lock
arpl
jle
push
push
xchg
lahf
xor
add
and
xchg
jle
xor
pop
lret
mov
in
je
cmp
loope
stos
mov
daa
push
and
lock
cld
dec
push
mov
movsb
les
jno
xbegin
or
lcall
addb
jno
xchg
sbb
ret
stos
lret
lods
fadd
mov
xchg
jns
xchg
and
pop
or
jle
mov
jp
cmpsl
and
jge
and
xlat
stc
in
cmp
pop
mov
mov
mov
push
sub
ljmp
repz
and
cmp
jg
subl
repnz
mov
adc
call
stos
cmp
rolb
push
stc
call
lock
or
ds
mov
jns
inc
call
out
and
xlat
aaa
xchg
pop
cmp
int
mov
adc
fcomps
pushf
add
int
fmul
inc
aaa
cmpsb
or
cld
jns
inc
sbb
gs
movsl
mov
add
rcrl
inc
pop
hlt
insb
mov
push
mov
inc
pop
in
ficoml
movsl
push
push
jo
shll
and
jl
hlt
adcb
inc
icebp
std
pop
xor
pop
and
push
cmp
test
pusha
and
lcall
cmp
pop
daa
les
ljmp
mov
jle
jmp
insb
fs
mov
adc
mov
scas
mov
inc
sbb
es
lret
add
ljmp
sbbl
fcmovu
or
push
sbb
sub
cli
mov
loop
xchg
mov
cmp
pop
sbb
cmp
lcall
pusha
inc
aam
cmpsb
push
sbb
and
lds
cli
jle
daa
cld
pop
fisubl
inc
cmpsb
and
xchg
bound
lods
lods
xor
push
ror
and
hlt
xchg
jne
mov
cli
xor
rcll
aaa
sub
dec
cli
sub
jl
pushf
jbe
out
mov
adc
inc
sbb
cld
sahf
loop
cld
xor
in
xor
and
dec
pusha
stos
cmp
and
pop
sti
mov
cmp
pushf
and
repnz
aam
push
cmpsb
sub
icebp
stos
rcll
ret
cltd
stos
int3
mov
mov
fmulp
roll
adc
mov
jae
jns
cs
mov
jbe
xlat
cltd
mov
sub
inc
push
or
mov
in
mov
pop
insb
das
and
or
mov
adc
dec
dec
mov
pop
shrl
mov
pop
push
lcall
ret
test
xchg
pushf
mov
inc
adc
pop
push
test
outsb
jecxz
cmp
pusha
pop
push
fs
std
xor
insl
clc
mov
xor
and
xchg
xchg
mov
outsb
mov
pusha
insl
mov
dec
jno
xlat
mov
mov
dec
mov
mov
add
rorl
inc
or
pop
movsl
sub
neg
sbb
xor
pop
clc
cwtl
mov
sub
scas
cli
xor
add
in
loope
fsubl
fstpt
adc
xchg
pushf
repz
sbb
cmp
popf
daa
push
outsl
pop
cld
bound
idiv
fstps
adc
out
std
aaa
push
insb
xchg
xor
inc
popa
in
iret
inc
ficomps
pop
js
lahf
xor
out
hlt
push
lds
add
repnz
sahf
push
es
icebp
add
lods
pop
lret
mov
fnstenv
inc
cmp
add
loopne
or
mov
or
xchg
pushf
and
ljmp
adc
gs
pop
aas
mov
mov
and
fdivp
fildll
sbb
cmp
or
add
inc
push
mov
push
cmp
aas
jae
add
mov
hlt
push
or
pop
add
add
aad
push
pop
out
add
push
ja
cmpsl
xchg
lahf
popa
add
fs
pusha
pop
repnz
das
out
repz
mov
out
jle
sub
mov
stos
pop
mov
gs
dec
enter
xchg
mov
mov
adc
pop
inc
mov
xlat
add
pushf
arpl
enter
push
jle
out
pop
lods
es
mov
leave
push
push
pop
add
nop
sub
mov
subps
inc
and
and
sbb
pop
inc
cltd
adc
mov
mov
push
mov
xor
mov
push
int
pop
push
push
mov
icebp
xor
imul
add
push
pop
mov
jle
fsubr
and
imull
insl
lcall
les
out
push
xor
add
or
mov
stos
mov
xchg
xor
mov
cmp
setge
dec
enter
mov
sbb
mov
cmpsl
pop
sub
test
test
jp
inc
push
stos
xlat
adc
push
enter
add
lret
mov
cld
repz
push
pushl
push
outsl
fnsave
pop
clc
dec
adc
or
pop
js
jl
pusha
mov
scas
pop
sarb
cli
stc
enter
pop
mov
gs
outsb
pop
js
xchg
jmp
std
push
pop
push
cmp
push
pop
push
mov
push
mov
mov
jp
stos
and
cltd
inc
pop
sti
sub
mov
insb
jo
pop
mov
call
lret
push
mov
jns
das
movsl
js
pop
test
dec
inc
in
and
push
fimull
les
loop
xor
mov
mov
mov
mov
inc
adc
cmpsl
lock
add
int3
cmpsb
gs
cmpsb
or
push
mov
repnz
xor
xchg
fcom
pop
js
xchg
xchg
clc
out
mov
and
push
jbe
aam
mov
pop
mov
mov
mov
test
imul
ljmp
inc
jae
roll
adc
xor
js
aaa
sub
lret
in
mov
ret
enter
ljmp
pop
xor
in
push
pop
pop
sbbl
cmc
loop
gs
rcrb
iret
into
int
xlat
movsb
lds
repz
dec
popf
adc
imul
int
arpl
xchg
cmp
jecxz
or
xchg
rcll
mov
push
xchg
jbe
imul
cmc
dec
mov
pop
jl
adc
iret
les
lahf
mov
push
mov
pop
bound
sbb
xor
xchg
into
loopne
addr16
fwait
call
mov
push
subb
out
mov
repz
leave
and
lods
jbe
outsl
scas
sbb
aaa
out
or
outsl
movsl
pop
cltd
fmull
lods
lods
call
cmpsb
add
mov
adc
fnsave
add
lock
sub
in
jecxz
dec
imul
pop
xlat
cmc
cmpb
nop
repnz
add
das
iret
jb
jge
scas
or
fsubp
jns
loopne
or
out
aaa
push
inc
scas
or
loope
dec
mov
xor
out
ds
mov
push
lea
mov
adc
xchg
fwait
sti
dec
arpl
jecxz
jge
call
test
arpl
xor
or
push
loop
lret
push
cmp
pop
push
mov
imul
dec
lret
fsubs
sub
scas
es
cmp
addb
in
cmpsb
ljmp
sahf
aad
test
mov
xor
sub
ss
mov
mov
scas
in
rorb
mov
xchg
mov
jmp
repz
mov
lock
sbb
sti
jl
jb
mov
push
or
sarb
aam
xor
vpmulhw
xor
or
ret
pop
je
jae
adc
xor
leave
adcb
mov
sysexit
jmp
push
mov
xchg
xchg
dec
cmc
sbb
dec
mov
mov
adc
xchg
mov
add
pop
add
push
stos
jmp
cmp
push
xchg
dec
repnz
adc
mov
daa
lret
fnsave
les
jns
leave
mov
icebp
xor
cmp
leave
xchg
jge
sub
mov
icebp
pop
xor
fiaddl
push
pop
adc
stos
pop
and
push
rclb
testb
pop
cmp
fldt
mov
fwait
xor
xchg
mov
jne
lret
jg
mov
pusha
add
inc
clc
jp
push
movsb
inc
in
pusha
mov
ja
in
dec
out
xor
pop
add
sub
stos
lahf
fcmovb
dec
pusha
ret
cmp
stos
cmp
add
dec
and
mov
into
pop
fldcw
loope
sbb
shlb
push
sbb
fldt
psrad
mov
ds
jg
push
xchg
mov
push
jo
in
cmp
and
insb
enter
aad
dec
jle
jl
cmp
iret
jp
sub
cld
pop
fnsave
ja
sti
sub
insl
hlt
jp
push
dec
or
aas
test
adc
inc
cld
xchg
pop
test
mov
dec
pusha
scas
mov
arpl
inc
or
add
sub
add
iret
mov
fisttpll
out
andl
scas
push
push
sub
jmp
mov
push
fwait
int3
pop
or
xchg
popa
mov
and
dec
cwtl
lahf
cmpsb
xor
mov
in
js
xchg
aaa
jmp
imull
push
push
push
lret
sbb
adc
pop
std
push
mov
inc
scas
das
shll
push
pop
push
xlat
outsl
in
daa
and
icebp
scas
dec
in
leave
ds
mov
mov
movsl
ret
add
mov
xlat
push
lcall
inc
push
mov
andl
xorb
mov
shlb
push
or
and
aad
outsb
push
repz
push
pop
dec
pop
ljmp
jne
jl
push
and
pop
dec
adc
xor
inc
mov
mov
mov
popa
xchg
int
push
js
push
or
in
add
and
inc
mov
cmp
loope
add
inc
or
and
add
pop
pop
test
loop
fwait
int
inc
xchg
insl
in
dec
es
fistpl
or
pop
ss
inc
sbb
out
out
adc
cmpl
and
aas
es
push
in
pop
push
cmp
js
shlb
aam
test
add
cmp
mov
pop
jl
pop
add
xchg
and
mov
xchg
add
inc
xchg
iret
aad
and
out
xlat
cmpsl
jg
aad
sbb
mov
xor
movsl
add
sub
por
mov
push
or
rcrb
loopne,pn
mov
mov
push
jno
sub
lret
sub
stos
push
xlat
mov
cmp
imul
jl
jb
sub
movsl
pop
das
mov
fwait
and
or
sti
out
fsubrl
push
rol
js
sahf
inc
loop
icebp
mov
add
mov
notb
xor
das
jmp
xabort
xor
cld
hlt
fildll
xor
clc
or
cmc
clc
mov
sbb
add
mov
dec
inc
idivl
fwait
pusha
jno
mov
xchg
cpuid
or
add
cmpsl
mov
sub
jno
outsb
ficoml
call
pop
gs
insl
xchg
pop
xchg
ss
mov
fsub
or
gs
popa
add
enter
sub
or
fdiv
pop
jno
std
iret
sbb
test
pop
add
push
push
adc
insl
outsb
in
pop
add
lock
ret
stos
mov
mov
stos
push
xchg
loope
dec
jmp
pop
iret
repnz
loop
into
into
outsl
aam
push
fcoml
xorl
mov
pop
cmpsl
or
popa
pop
inc
push
mov
lret
icebp
mov
movsb
adc
repnz
inc
jl
jbe
icebp
int3
insb
lret
mov
sub
ud2
scas
leave
xor
testb
dec
testl
arpl
movsl
ret
and
mov
inc
lahf
out
ret
push
adc
sub
adc
xor
mull
repnz
inc
popa
in
mov
xchg
popf
cli
dec
lds
ds
dec
cmpsl
ror
sbb
out
roll
push
rcrb
movsl
rcr
shll
push
or
and
dec
mov
arpl
mov
dec
repz
mov
cs
scas
pusha
clc
fwait
out
adcb
scas
dec
jns
jbe
pushf
or
cmpsb
movsl
or
jne
jge
outsb
xchg
pop
or
fwait
push
scas
scas
and
stc
mov
aas
jns
lods
test
pusha
fcomps
xchg
lock
mov
mov
sub
mov
sarl
lds
add
dec
test
addsubps
nop
cmpsl
push
mov
out
aaa
nop
mov
cmp
fsubrs
lods
lods
hlt
cmpb
push
mov
mov
bound
inc
cmp
in
xor
cmp
int
notb
leave
xor
cmpsl
mov
jbe
outsb
push
adcb
bound
fsubs
or
inc
sbb
es
mov
imul
lcall
shr
out
mov
fadd
jecxz
mov
imul
out
jg
out
pushf
test
mov
insl
lock
push
movsb
js
xchg
adc
aas
xor
dec
push
jno
sbbl
or
cmp
mov
cmp
add
lds
lods
xor
jb
mov
insl
mov
insl
dec
add
mov
testb
ds
jge
push
ds
sub
daa
iret
loop
push
mov
aas
es
test
cmp
adc
fldt
inc
and
out
sbb
push
ljmp
sub
loop
aad
fisubs
mov
sub
sahf
mov
add
movsb
out
sub
mov
xchg
pop
jmp
ficoml
movsb
push
push
inc
or
cmpsl
or
cmp
jno
lahf
movsb
imull
jmp
test
dec
and
leave
push
insl
fistpll
pop
into
sub
cmp
sbbb
add
loop
js
aad
ret
fmuls
fildl
fldt
inc
sti
or
pop
std
or
push
fildl
dec
dec
xor
pop
sbb
sbbl
je
add
sbb
das
add
xor
cmc
aam
leave
aad
in
xchg
xlat
dec
aas
mov
add
in
inc
push
je
mov
je
and
aad
scas
movsb
das
jo
data16
out
gs
jg
xor
scas
xchg
mov
movsl
hlt
cmp
xchg
fsubp
push
int3
add
fistpl
scas
mov
inc
push
sub
add
lods
call
in
stos
scas
mov
cli
pop
loopne
jns
mov
xchg
xor
and
mov
pop
xchg
fdivl
push
into
flds
jns
hlt
push
gs
adc
rcrl
sub
mov
icebp
inc
pop
fisubs
and
imul
mov
sti
or
aam
add
frstor
imul
xor
inc
jo
sub
lock
lea
mov
xchg
dec
and
push
cmp
xor
ret
fwait
rcrb
testb
out
dec
cmp
je
jne
adc
pop
adc
push
rorb
mov
jp,pn
dec
int3
roll
dec
inc
in
jo
test
push
ljmp
sub
sub
rorb
repnz
rclb
inc
popa
xchg
gs
int3
adc
mov
mov
adc
mov
xorl
adc
and
mov
dec
lds
mov
fwait
pop
xchg
inc
ja
dec
lahf
xchg
sbb
rolb
int3
es
scas
cli
das
push
in
fsubrs
push
jge
cld
inc
fwait
in
inc
mov
in
rorl
push
cs
push
mov
in
stos
push
lds
imul
push
sarl
xor
mov
daa
or
loopne
xchg
push
dec
mov
adc
pushf
xor
dec
test
xor
cs
fwait
adcb
add
adc
xchg
repnz
and
cmp
jne
pop
sbb
fcmovu
in
in
icebp
sub
cvtdq2ps
inc
mov
sbb
in
pop
mov
sti
jno
test
stos
lds
in
mov
ljmp
dec
das
aaa
lods
adc
and
add
test
add
mov
arpl
xor
xchg
xchg
add
jbe
mov
stos
jl
sbb
inc
ror
insl
imul
push
xlat
jl
cmp
lcall
push
push
or
cli
fisttps
dec
inc
loopne
cmpsb
aam
jp
cs
shrl
shll
mov
lea
mov
or
mov
mov
hlt
fs
inc
cmc
inc
icebp
or
xchg
lahf
test
aad
jne
fmull
jmp
out
and
addb
pop
lds
ja
mov
mov
cmp
sbb
adc
push
lods
insl
nop
int
jl
xor
xorb
adc
incl
sbb
or
aas
inc
sbb
jecxz
mov
mov
push
add
pop
xchg
clc
insl
push
inc
test
insl
dec
adc
lcall
mov
mov
ret
lcall
mov
cmp
xchg
fwait
xorb
andl
mov
mov
inc
sar
dec
mov
stos
sbb
in
sbb
repnz
data16
pop
sarb
sub
rolb
dec
xor
mov
mov
cmp
jmp
adc
mov
out
mov
ficomps
lea
jne
inc
movsb
mov
push
mov
xchg
mov
mov
test
imulb
lret
push
xchg
push
rorb
cmpsb
icebp
lock
pusha
inc
outsb
fnstenv
cmpl
xchg
xor
dec
stos
and
sub
or
addr16
sbb
insb
cmpl
scas
jmp
rol
jbe
xchg
or
lcall
and
mov
sahf
leave
repz
rcrl
mov
mov
mov
lret
lds
jmp
call
std
xchg
scas
cmp
mov
add
add
iret
mulb
jne
adc
or
xor
mov
cmp
inc
fs
push
sahf
xchg
movsl
lahf
int
mov
dec
aad
xchg
stos
hlt
xor
mov
mov
idiv
in
adc
mov
addr16
mov
aas
insl
leave
imul
lret
pop
test
mov
sahf
mov
inc
cmp
out
xor
or
push
jne
imul
mov
mov
jno
lret
adc
pop
xchg
dec
lret
dec
and
jbe
jp
mov
popf
not
out
sbb
mov
lea
push
lretw
jle
push
aad
cwtl
sbb
inc
jg
rcr
addb
fs
shlb
lods
mov
icebp
out
fisubl
test
xchg
in
shr
sbb
nop
jns
out
testb
or
test
in
push
dec
stos
fs
inc
ds
arpl
jp
inc
sbbb
imull
and
std
lret
shll
pop
and
aas
out
lcall
pop
cmpsl
mov
xchg
je
mov
scas
data16
or
in
arpl
and
mov
out
mov
mov
lret
mov
cmp
cltd
movsb
fs
js
ss
jns
push
insl
in
cmpsl
inc
pcmpgtd
popf
jle
in
fcom
scas
sub
lret
jae
jl
jecxz
imul
xor
imul
scas
xchg
dec
jb
mov
add
or
stos
push
dec
mov
ljmp
pop
ja
push
clc
sub
stc
cs
xchg
mov
rcrl
and
mov
jne
pop
out
jecxz
gs
fidivrs
ret
push
popf
mov
scas
pop
pop
or
push
push
rcl
sub
and
xchg
inc
pop
xchg
inc
in
inc
dec
and
jmp
repnz
jp
inc
and
out
xor
xor
mov
dec
repnz
in
outsl
or
inc
data16
test
mov
fs
out
add
ds
xchg
push
adc
push
sahf
mov
or
pushl
pop
in
arpl
sub
loope
lods
adcl
mov
xlat
mov
aad
out
add
jae
add
cmp
push
loope
pop
stos
dec
mov
pop
out
sbb
push
add
mov
out
mov
imul
cltd
scas
jle
cld
push
xor
clc
mov
xchg
push
repnz
lret
or
daa
fsubrp
mov
movsl
cmp
sahf
imul
jnp
cmp
ljmp
adc
mov
or
push
cmp
jle
sub
push
xchg
dec
push
inc
out
jb
inc
pusha
push
jle
sbb
test
mov
cmp
outsl
outsb
mov
sub
stos
dec
je
into
in
popf
adc
jl
daa
adc
outsl
add
loope
aaa
sub
pop
es
popf
cmpb
inc
inc
repz
clc
pop
mov
pop
add
and
sub
rcrb
jne
mov
shlb
pop
mov
and
test
sahf
cld
lds
pop
cmp
xchg
push
into
jnp
cs
out
dec
inc
cmpsb
popl
or
js
pop
adc
into
lds
pop
cmc
mov
jge
imul
and
inc
sub
inc
add
adc
cltd
pop
lods
inc
daa
and
daa
mov
movsb
jns
add
int
xchg
mov
fisttpl
xchg
xor
insl
aam
mov
mov
cltd
aad
dec
cmp
dec
dec
mov
sub
pusha
sarl
movsl
nop
icebp
sarb
mov
mov
lcall
add
sbb
loopne
jle
das
cld
adc
aas
mov
mov
pop
sub
fs
sbbl
adc
ret
add
cli
push
inc
pop
ffree
test
data16
cmp
cmp
mov
mov
mov
in
xchg
pop
arpl
xor
mov
push
jecxz
arpl
pop
rclb
or
pop
inc
pushf
push
iret
and
sub
les
cmpsl
ss
or
pop
sti
xchg
lret
loopne
xor
scas
mov
loope
scas
add
mov
mov
or
rcl
ja
hlt
xor
add
dec
mov
repnz
int
test
sbb
daa
in
cli
aas
adc
pop
xor
fsubl
pop
or
out
push
xor
mov
xorb
push
data16
aad
repz
aam
push
xor
lret
inc
clc
mov
xlat
lea
sbbb
popf
filds
xor
push
or
mov
adc
fisttpl
xchg
gs
out
jb
push
mov
ficomps
xchg
scas
dec
scas
cmpsl
pop
sarl
dec
jo
int3
es
ds
dec
mov
add
rolb
in
cmpl
mov
aas
inc
mov
xor
verw
cmp
loop
dec
lcall
xchg
pusha
into
hlt
hlt
sub
mov
gs
jg
ficoml
lods
jnp
test
into
jg
sub
jbe
sti
fnstenv
mov
out
xor
subl
or
outsl
inc
adcb
cwtl
int3
jnp
imul
jne
fsubs
and
push
std
lea
add
xor
insl
in
mov
cmp
pop
push
fists
insb
cli
sub
mov
arpl
adc
idiv
jb
rolb
add
das
add
add
repnz
cltd
ljmp
add
stos
stos
fistpl
jo
mov
mov
rolb
les
pusha
fstpt
scas
jle
pop
sub
mov
mov
push
sbb
inc
cmp
loopne
lock
inc
sahf
sub
and
sbb
inc
and
dec
fsubrl
hlt
or
addb
aaa
and
shrl
push
pop
pop
push
pushl
mov
adc
in
or
movsl
bound
and
jo
daa
xchg
pop
inc
push
jecxz
stos
cwtl
addl
arpl
pop
xor
shlb
dec
jecxz
xor
cmp
or
sarl
jb
and
insl
loope
cld
fbstp
in
pop
push
cld
xor
sub
mov
imul
or
mov
sub
and
je
rcrl
sub
fprem
jl
into
fidivs
mov
xchg
and
ljmp
stos
sub
mov
int3
xor
daa
dec
add
lods
movsb
push
stos
mov
or
movsbl
es
imul
pop
sub
inc
mov
add
jge
addl
pop
sbb
push
sti
jge
mov
adc
and
push
mov
inc
test
push
or
xchg
rcrl
and
sub
xor
add
test
xchg
push
cltd
loopne
testl
inc
pop
jp
xchg
or
scas
inc
push
mov
or
add
mov
movsl
pusha
add
out
in
lock
jae
xor
inc
fwait
mov
cmp
mov
lds
dec
sub
pushf
mov
aad
mov
fsubs
xchg
out
sbb
sti
arpl
nop
mov
adc
call
sbb
incb
jp
pop
sbb
fdiv
cmpl
cwtl
mov
sub
push
cmp
outsb
imul
jge
or
mov
jle
fdivr
pop
pop
mov
or
int3
jne
sbb
xor
mov
les
xchg
mov
cmp
ret
scas
fcomps
loope
fwait
cmp
mov
lret
fmull
push
mov
push
add
mov
adc
push
mov
test
out
dec
movsb
xchg
inc
add
mov
xchg
mov
xchg
and
mov
xchg
pop
cmpl
mov
das
idivb
sbb
mov
adc
push
mov
sbb
std
repnz
and
out
push
or
fdivl
jecxz
es
push
push
pop
loope
mov
adc
jmpw
fst
in
popa
push
in
push
popa
push
mov
into
sti
cltd
fstpl
rcll
and
aaa
pop
enter
popa
cmp
mov
jg
xor
sarl
lea
xor
add
mull
jbe
adc
inc
test
stc
xchg
ret
sub
popa
mov
add
inc
mov
push
outsb
dec
out
lret
adc
or
repnz
iret
ss
mov
dec
stc
movsl
push
scas
add
mov
loop
rcrl
mov
call
sbb
cmp
pusha
mov
mov
jb
popa
inc
enter
mov
push
mov
iret
jmp
xchg
push
mov
cmpsl
add
cld
xchg
sbb
adc
repnz
loop
and
stos
outsl
cmpsl
ds
out
adc
sbb
jl
and
push
nop
mov
dec
push
add
inc
push
pop
mov
dec
lds
je
sub
in
jo
mov
and
dec
sbb
xorl
jns
inc
icebp
xchg
mov
mov
inc
cmp
or
mov
mov
mov
dec
lods
xchg
mov
cmpsb
dec
stc
mov
cli
jg
fildll
incl
pop
testb
fldenv
cmc
gs
test
jl
push
je
clc
lea
mov
cmp
hlt
inc
jecxz
int3
pop
sbb
mov
inc
push
mov
outsl
jo
and
jne
je
outsl
cs
in
test
in
mov
ret
xchg
mov
out
cmp
xchg
adc
push
xor
pop
add
pop
pop
das
and
mov
push
add
andb
fisttps
aam
les
push
pop
mov
mov
popa
out
das
xor
mov
clc
popl
pushf
jge
mov
sbb
sub
jmp
jo
add
lcall
jecxz
adc
push
push
pop
jmp
dec
ss
dec
into
xchg
enter
adc
add
std
jp
mov
std
mov
xor
fsub
stc
jnp
pop
push
mov
cwtl
jl
pop
outsb
add
lcall
out
cmp
xor
or
cmc
dec
jl
or
sbb
imul
sbb
scas
and
push
inc
aam
add
mov
xchg
inc
ljmp
mov
xor
and
aad
mov
sahf
adc
lods
cmp
and
std
pushf
mov
mov
mov
cmpsb
mov
sub
imul
aaa
cmpsl
ljmp
rclb
lea
dec
cld
mov
clc
ret
insb
ret
jns
add
sub
push
test
push
jle
push
hlt
movsb
out
rorl
jle
mov
pop
aad
dec
std
cmp
in
sbb
fiadds
cs
pop
or
xor
in
cmp
je
push
sub
mov
mov
mov
out
xor
or
lods
xchg
mov
frstor
pop
or
sbb
mov
mov
jns
mov
out
imul
rorb
pop
xchg
mov
loop
cs
adc
jge
movsb
xchg
gs
mov
xchg
in
push
into
ss
call
divl
dec
adc
test
insl
or
test
or
cmpb
jne
cmp
cmp
dec
xchg
call
loope
mov
and
xchg
test
cld
popf
fsqrt
xchg
sarb
push
loop
push
vfnmaddps
push
cs
push
cmp
xchg
and
mov
js
cmp
mov
mov
out
jbe
ss
inc
stos
lds
fprem1
loope
divps
lahf
fdivl
and
mov
jmp
mov
and
sbb
jle
adc
lock
test
pop
imul
shrl
inc
lret
or
es
aam
outsb
out
aaa
dec
dec
sub
lods
push
cmpsl
pop
mov
sbb
dec
xchg
stc
cld
inc
add
test
addr16
fnsave
inc
lea
or
faddl
jns
lock
lds
lcall
ret
pusha
mov
ret
lods
test
cmp
inc
inc
adc
push
push
mov
add
into
fcmovu
push
push
sbb
fdivrl
lock
