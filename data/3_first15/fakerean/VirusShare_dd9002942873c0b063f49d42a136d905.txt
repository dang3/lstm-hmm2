jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
push
jmp
adc
add
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
inc
add
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
jecxz
inc
add
xchg
inc
lock
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
add
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
add
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
inc
add
or
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
inc
add
les
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
repnz
inc
add
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
testb
jne
push
lea
push
call
test
je
mov
andb
test
je
cmp
je
mov
or
mov
xor
inc
pop
pop
pop
mov
pop
ret
cmp
jne
movzwl
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
mov
mov
push
call
lea
call
lea
call
lea
call
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
inc
cmpl
push
mov
jl
jg
cmpl
jbe
mov
mov
lea
push
call
test
je
push
mov
mov
mov
push
mov
call
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
push
call
test
jne
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
pushl
mov
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
test
pop
pop
jne
cmpb
je
pushl
mov
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
mov
mov
lea
push
push
call
test
jne
xor
cmp
je
lea
push
mov
mov
mov
mov
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
add
sub
test
call
test
mov
je
mov
mov
push
call
cmpl
jl
jg
cmpl
ja
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
mov
call
push
push
lea
push
pushl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
add
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
call
push
push
lea
push
pushl
call
pushl
mov
pushl
call
test
pop
pop
jne
xor
lea
call
mov
test
jne
lea
call
mov
test
je
mov
push
call
lea
call
mov
test
je
mov
push
call
lea
call
xor
pop
pop
pop
leave
ret
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
xor
push
mov
call
mov
add
cmp
jne
push
call
xor
add
cmp
je
mov
mov
movl
jecxz
add
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
test
je
mov
push
call
add
test
je
mov
mov
push
push
push
mov
call
mov
test
js
mov
mov
push
call
pop
pop
mov
pop
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
cmpl
je
push
mov
test
push
jne
cmpl
jne
pop
pop
pop
leave
ret
cmpl
je
xor
xor
mov
mov
mov
xor
push
pushl
push
push
pushl
push
push
call
jmp
testw
je
jmp
mov
cmpl
je
pushl
mov
pushl
mov
pushl
call
xor
ret
mov
add
jmp
push
mov
mov
test
jg
push
mov
call
test
jne
pushl
call
pop
ret
cmp
jle
jmp
mov
jmp
mov
mov
mov
push
push
call
xor
ret
push
mov
mov
sub
test
push
push
push
je
push
lea
xor
call
mov
cmp
ja
mov
push
push
push
lea
push
call
cmpl
jne
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
mov
lea
rep
xor
cmp
mov
mov
je
push
lea
call
push
push
lea
push
push
call
add
test
lea
js
mov
push
call
push
lea
push
push
call
add
test
js
mov
push
push
call
add
cmp
je
mov
lea
push
push
push
mov
movl
call
mov
push
push
push
push
push
call
mov
mov
mov
add
lea
push
push
lea
push
push
call
mov
test
jbe
mov
mov
xor
jmp
lea
mov
test
jne
add
add
cmp
jb
mov
push
call
mov
add
push
xor
mov
lea
mov
call
mov
cmp
je
mov
push
mov
call
test
js
lea
mov
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
mov
lea
push
push
add
call
mov
mov
add
push
mov
push
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
call
mov
add
jmp
push
mov
push
push
push
mov
mov
test
jne
cmp
je
incl
pop
leave
ret
cmpl
je
cmpl
jne
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
pushl
push
call
lea
call
jmp
incl
cmpl
jne
xor
push
mov
push
push
call
push
call
add
jmp
push
mov
and
sub
push
push
mov
xor
cmp
push
jne
mov
pushl
call
mov
call
cmp
jne
pop
pop
xor
pop
mov
pop
ret
push
call
cmp
pop
je
mov
lea
movl
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
lea
push
mov
mov
mov
call
push
lea
push
lea
push
mov
call
add
lea
push
mov
lea
call
mov
push
push
mov
mov
mov
lea
push
push
call
jmp
int3
int3
int3
sub
mov
mov
push
mov
push
push
mov
lea
push
push
call
sub
mov
sub
mov
mov
js
mov
sub
sub
js
mov
mov
mov
push
push
mov
call
push
mov
call
mov
call
mov
mov
call
mov
cmp
je
cmp
je
test
jne
cmpb
je
cmp
je
mov
mov
mov
pop
mov
mov
inc
jo
add
ret
mov
sub
cltd
sub
sar
add
jmp
mov
sub
add
jmp
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
sub
push
push
push
xor
mov
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
mov
mov
lea
call
mov
mov
xor
push
lea
lea
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
cmp
jne
xor
inc
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
jmp
push
mov
sub
push
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
cmp
je
mov
mov
lea
call
mov
mov
lea
pushl
call
test
je
mov
mov
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
call
mov
cmp
je
mov
mov
push
push
movl
mov
mov
mov
push
call
lea
xor
call
push
call
mov
cmp
pop
je
pushl
xor
call
pop
push
push
pushl
call
mov
mov
mov
cmp
jne
mov
cmp
mov
je
mov
push
call
mov
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jnp
das
add
call
pop
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
ljmp
push
call
mov
add
clc
add
xchg
call
scas
popa
out
cld
add
mov
add
mov
push
fdiv
add
add
in
add
push
push
push
push
push
push
push
push
call
add
add
aad
lea
jne
ret
add
push
mov
add
add
addl
add
add
mov
nop
add
jecxz
add
je
add
add
addb
push
sub
pop
popl
push
lea
push
push
lea
push
push
push
push
call
fldl
pop
add
add
add
add
int
add
cwtl
nop
lods
jnp
faddl
add
pusha
add
pop
out
xchg
enter
mov
xchg
testl
add
add
ljmp
stos
add
add
lcall
push
push
push
push
push
push
lea
push
call
mov
rcr
add
rcll
xchg
pop
push
xchg
xchg
mov
push
add
push
mov
mov
add
xchg
jnp
popa
mov
pop
add
add
add
push
add
lods
pusha
jne
test
insb
stos
lcall
in
in
lcall
push
push
push
push
lea
push
push
call
mov
ljmp
add
out
sti
mov
loop
mov
add
stos
pop
out
mov
loope
add
mov
xchg
test
popf
stos
mov
add
lods
add
cwtl
pop
fisubrs
bound
add
add
pop
fwait
add
push
call
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
iret
mov
add
pop
js
lret
add
addb
xchg
mov
mov
push
add
add
out
movb
mov
fstps
mov
add
cld
add
shll
repnz
mov
add
jmp
lcall
sub
add
lea
push
call
add
movsl
add
push
loope
popl
add
cmc
add
jmp
cld
add
cmc
andl
rolb
orl
add
add
in
andb
push
add
lcall
les
add
std
push
push
push
push
lea
push
lea
push
lea
push
push
call
loope
add
gs
push
popa
cltd
rolb
test
rolb
add
cmpsl
in
test
mov
imul
roll
add
in
fdivr
lcall
insb
add
add
xchg
sub
daa
push
push
push
lea
push
call
add
add
mov
add
filds
jp
add
push
in
xchg
add
lcall
push
add
arpl
add
call
add
add
push
add
pop
mov
test
cltd
gs
stos
push
scas
xlat
add
mov
push
push
call
add
mov
sarb
xchg
pusha
cltd
xchg
arpl
add
add
test
add
add
mov
andb
add
add
loope
add
push
xchg
std
add
movsb
aam
add
add
pop
add
add
in
clc
lcall
pop
hlt
push
push
call
pop
add
pusha
add
add
push
add
mov
add
mov
icebp
les
andl
add
mov
jle
lods
je
add
pop
add
push
push
push
push
lea
push
lea
push
push
push
call
cld
jnp
add
mov
add
add
add
add
add
data16
in
jno
movsl
add
add
add
xchg
roll
in
loopne
lcall
ret
add
add
push
push
push
push
push
call
out
outsl
cmc
add
add
add
add
push
mov
add
aad
int
test
in
add
movsl
mov
add
add
jb
mov
or
loop
add
xchg
movsl
jo
mov
add
add
stos
push
insb
fsubrs
in
in
pop
add
push
lea
push
lea
push
call
jle
add
add
je
jne
add
jnp
stos
add
add
add
lahf
addb
popa
lret
push
out
add
add
jb
stc
roll
lds
pop
add
test
push
push
push
lea
push
push
push
call
jl
add
pop
pop
add
iret
in
cmc
fiadds
add
mov
nop
add
and
pop
in
jp
add
jmp
add
mov
loop
pop
sub
pop
xor
push
push
lea
push
lea
push
lea
push
push
call
xchg
add
jp
jbe
add
add
test
add
lea
add
leave
mov
faddl
mov
lret
andb
add
roll
lcall
les
jno
xchg
lods
push
sub
not
dec
push
and
add
rol
sub
pop
rol
pop
push
push
lea
push
push
push
lea
push
push
push
call
movsb
add
xlat
xorb
add
fildl
or
xchg
jae
push
push
pop
test
mov
mov
pop
js
add
add
scas
add
add
into
cli
add
jne
push
push
push
call
pop
add
mov
clc
in
mov
ljmp
gs
add
add
add
lahf
add
in
hlt
pop
call
push
lea
push
lea
push
push
push
push
call
ficomps
add
nop
xchg
into
je
in
jmp
mov
adc
add
add
add
pusha
add
sub
pop
mov
movl
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
jo
scas
add
add
jmp
add
stos
push
add
add
jb
jns
call
jae
add
add
ljmp
mov
gs
add
add
in
mov
add
add
add
jecxz
mov
jnp
mov
sub
pop
lea
push
push
push
call
add
test
ja
add
add
push
add
add
xchg
jp
shr
int
iret
loopne
les
negb
int3
add
sub
pop
push
push
lea
push
push
call
sbbl
leave
add
js
jecxz
mov
pop
addl
aad
imulb
lcall
shl
test
add
jae
fwait
scas
lds
add
add
mov
add
int
stos
add
add
add
mov
add
jne
push
push
push
push
push
lea
push
push
lea
push
push
push
call
nop
xchg
arpl
sahf
push
add
add
mov
test
jl
in
push
add
sub
pop
pushl
push
push
lea
push
push
call
add
lock
add
add
popa
jge
scas
mov
cltd
mov
filds
add
jns
add
loope
stos
enter
scas
subl
popa
add
call
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
popa
add
add
gs
add
jle
out
cltd
rolb
xorl
hlt
aam
pop
add
add
test
add
push
jb
mov
jmp
add
push
loope
sub
pop
pushl
pushl
push
push
push
push
lea
push
push
call
addb
fwait
add
cmpl
fsts
add
add
add
add
mov
test
mov
add
rcll
clc
into
les
xchg
sub
pop
call
push
push
sub
push
push
pop
add
shr
ror
sub
ror
pop
dec
not
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
jb
ja
add
addr16
xlat
add
add
stos
mov
lret
movsl
xchg
add
fiaddl
out
add
lds
add
add
add
add
loopne
add
add
push
add
jnp
pop
mov
xchg
add
mov
add
mov
in
jo
push
mov
add
sub
pop
pushl
push
push
push
push
call
add
ljmp
jbe
andb
add
mov
add
fstpl
add
add
adc
cli
imul
mov
add
push
sub
pop
call
push
push
push
push
push
pop
add
ror
sub
shl
pop
sub
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
js
movsb
add
lret
jecxz
mov
fwait
out
mov
add
fwait
lahf
add
mov
sahf
add
add
add
in
fdivr
lcall
push
push
push
lea
push
call
addb
mov
add
lret
jne
sti
stos
add
add
push
add
sbbl
pusha
push
pop
in
jle
add
pop
jno
out
sub
mov
add
cmpb
add
add
lods
jl
lahf
add
add
add
add
iret
add
jp
add
add
add
rclb
pop
push
call
mov
add
enter
enter
faddl
in
hlt
mov
add
cld
out
jbe
push
jne
add
add
out
xlat
add
add
push
clc
add
add
jp
add
jecxz
loope
test
jne
aam
xchg
lds
mov
add
xchg
scas
add
popl
add
push
add
clc
push
lea
push
push
push
push
call
add
rolb
add
test
scas
push
add
mulb
addb
mov
add
pop
nop
loopne
in
add
add
sub
pop
push
push
push
lea
push
push
push
push
push
call
mov
aam
add
mov
push
rcll
movsl
pop
xchg
cld
xchg
mov
fnstsw
add
jnp
mov
lret
fbstp
test
popa
jle
jle
cltd
in
jnp
add
in
in
push
push
push
push
call
add
add
hlt
mov
stos
ja
pop
lods
add
add
lret
add
add
fstp
add
mov
add
add
stos
mov
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
add
jns
imul
xchg
add
les
jmp
mov
add
add
fisttpl
add
in
add
push
mov
add
jnp
mov
xchg
add
test
shr
mov
fdivr
lcall
pop
in
push
push
lea
push
call
add
push
loop
leave
mov
aam
add
mov
pop
cli
add
xchg
mov
mov
pop
add
call
into
notl
repnz
jo
add
push
push
ja
mov
add
pop
push
xchg
jne
add
int3
add
add
sub
pop
add
add
push
push
push
call
loopw
test
mov
leave
pushf
pop
sti
pushf
popa
pop
in
add
roll
imul
outsl
add
add
push
jae
add
fdivr
add
insb
add
jp
xchg
test
add
add
cmc
aad
in
icebp
xlat
loope
test
call
pop
xchg
sub
pop
mov
push
push
push
push
push
lea
push
call
cmpsl
fidivrl
pushf
loop
icebp
add
loop
in
pop
add
in
jo
add
add
cli
incb
std
pop
popa
jb
add
mov
outsl
jl
push
push
jmp
xchg
jb
std
add
mov
mov
mov
add
clc
loop
bnd
sub
pop
xor
push
push
push
push
push
push
push
push
call
push
fmul
filds
add
nop
add
loope
filds
pop
mov
or
std
add
pop
add
lea
add
add
lock
fistpl
fldcw
cmpsl
xchg
add
pop
sahf
add
call
add
add
imul
add
lock
fsubrp
jecxz
sub
pop
add
push
push
call
add
scas
mov
mov
add
gs
mov
add
add
jecxz
add
push
add
loop
lds
stc
lea
xchg
xlat
lods
mov
mov
scas
add
mov
testl
fldl
imul
sub
pop
add
push
push
call
pop
add
pop
pop
addl
add
sarl
push
incb
cmc
mov
movsl
add
add
pop
add
add
test
push
push
push
call
icebp
icebp
call
add
jnp
jne
test
roll
push
fisubs
push
add
cli
add
faddl
sub
pop
mov
xor
push
push
push
push
call
add
iret
addb
test
add
pop
add
int
add
sub
ret
add
mov
lcall
lock
push
push
push
push
lea
push
lea
push
push
call
out
jle
sahf
add
mov
pop
add
pop
pop
xchg
movb
add
movsb
mov
add
add
test
out
sti
add
loopne
push
pusha
popf
mov
add
jl
loop
pop
push
sub
pop
pop
mov
push
push
push
push
push
lea
push
push
call
add
add
ljmp
add
add
add
add
add
in
imul
mul
add
cli
pop
imul
sti
add
xchg
sub
pop
xor
push
push
lea
push
lea
push
call
mov
add
add
sar
push
cli
fldenv
filds
add
in
xchg
pop
xchg
add
add
add
sub
pop
add
push
lea
push
call
pop
fadd
jnp
add
add
add
lret
leave
fcmovnbe
mov
popf
jge
add
pusha
cli
add
popf
loope
add
pop
je
sub
pop
push
push
push
push
push
push
lea
push
push
call
add
pushf
pop
pop
xchg
cmpsl
cli
int
add
cmpsb
filds
add
cmc
fiadds
add
push
in
test
jae
lods
mov
into
push
mov
ret
add
in
into
add
ret
pop
iret
mulb
in
in
mov
push
push
push
push
call
ljmp
xchg
mov
push
testl
out
add
addr16
add
add
int3
int
mov
mov
mov
jge
lret
roll
mov
add
fisubrs
add
mov
add
add
pop
xor
push
push
push
push
lea
push
push
call
add
push
cld
add
popf
xchg
add
rolb
movsl
mov
add
sarl
mov
ret
add
jp
add
add
add
push
add
add
call
cwtl
test
sahf
pop
lods
add
lret
add
ljmp
mov
fnstsw
pop
jecxz
mov
lcall
les
add
push
lea
push
lea
push
call
cltd
add
mov
add
add
mov
movsl
add
fcmovnb
scas
add
add
add
cmpsb
mov
xchg
add
outsl
add
add
xchg
add
mov
jb
aad
add
add
add
pop
jge
cwtl
mov
pop
jle
mov
xlat
incb
add
add
in
in
hlt
lcall
enter
cmp
loope
shll
int
push
push
push
call
add
jno
add
add
test
add
nop
mov
pop
add
int
add
insb
add
test
add
fadd
jmp
sti
add
test
mov
out
sbbb
aam
mull
mov
pop
push
push
push
push
call
cli
mov
lods
je
add
test
pop
scas
lret
movl
add
add
lret
lcall
cli
add
test
add
jnp
add
lea
movsl
jmp
addb
int3
jle
fistl
outsl
loopne
add
add
in
lock
lcall
movsb
push
sub
pop
pop
push
not
add
pop
mov
add
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
call
add
cmpsl
test
add
fsub
add
push
jle
add
fnstenv
push
in
scas
loop
add
jl
add
jb
add
pop
add
repnz
nop
xchg
add
std
outsl
xchg
mov
sub
pop
add
push
push
push
push
lea
push
push
call
add
lock
add
in
movsb
jb
pop
fidivs
add
lods
movb
data16
pop
add
mov
data16
push
lea
add
add
add
push
popa
mov
add
in
call
add
mov
xor
push
inc
pop
mov
xor
push
dec
sub
pop
mov
xor
push
lea
push
lea
push
push
lea
push
call
jne
hlt
out
push
add
mov
jl
jl
add
add
aad
add
add
negl
add
mov
ja
mov
out
jle
ljmp
add
sahf
add
add
ret
xor
pop
add
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
xchg
popl
add
pop
add
add
outsl
cmpsl
mov
add
addl
jmp
mov
scas
hlt
roll
jns
xchg
add
jge
aad
mov
cli
bound
add
mov
jne
add
jnp
sub
pop
mov
push
push
add
rol
lea
push
and
add
xor
shl
dec
sub
inc
xor
pop
sub
pop
push
push
push
call
add
push
int
add
add
add
mov
add
xchg
cmc
cld
mov
add
add
add
add
loop
stc
add
add
add
movsb
push
loop
add
add
outsl
jecxz
lcall
hlt
pop
pushl
call
push
push
push
lea
push
push
push
push
call
cli
add
roll
add
mov
mov
add
out
cld
push
ja
mov
data16
add
lcall
pop
push
push
push
shl
dec
push
sub
add
shr
not
add
sub
shr
pop
not
sub
xor
lea
pop
push
add
pop
push
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
test
fs
mov
push
test
mov
xchg
add
mov
nop
sahf
mov
lret
shlb
cmpsb
imul
add
jo
jne
push
jp
add
rol
mov
ljmp
push
add
add
xchg
add
lods
cmpl
jle
sub
pop
call
push
push
push
push
lea
push
push
push
lea
push
push
push
call
divb
movsl
add
fmul
lea
jno
sbbl
add
scas
movl
mov
pusha
jo
push
movl
cwtl
addb
fiadds
enter
add
mov
mov
mov
xchg
fildl
filds
std
add
mov
add
clc
push
ror
pop
push
push
push
push
call
mov
jp
movsb
add
lock
fcmovnb
add
fnstsw
add
xchg
mov
add
xchg
popf
add
loop
mov
mov
add
add
add
mov
add
push
icebp
add
add
stos
test
in
hlt
lcall
push
inc
add
pop
mov
push
lea
push
call
jge
cwtl
add
mov
mov
repnz
add
sahf
icebp
mov
jle
add
add
add
stos
mov
add
pop
add
fildll
add
test
cmpsl
pop
add
test
popf
add
mov
add
pop
in
push
sub
dec
pop
add
push
add
inc
inc
pop
add
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
call
into
add
hlt
testb
add
push
pop
add
icebp
movsb
rolb
incb
addb
add
arpl
add
repnz
jl
add
add
lret
jecxz
mov
jne
add
mov
test
add
sub
pop
xor
push
push
call
add
scas
mov
jnp
aad
add
shl
mov
pop
lods
mov
jnp
fildl
addl
lods
add
add
add
mov
add
mov
add
test
add
rcrl
add
add
cltd
scas
icebp
jae
je
push
add
repnz
sub
pop
add
push
lea
push
call
add
xchg
fildl
call
ljmp
add
add
ljmp
add
stos
imul
rolb
stos
in
icebp
jo
jae
add
addb
int
into
add
cmc
rol
add
add
gs
pop
add
push
dec
sub
pop
push
mov
xor
push
add
pop
add
pop
push
sub
pop
mov
xor
push
sub
pop
rep
mov
push
push
push
push
push
push
push
push
push
lea
push
call
cltd
add
sbbl
push
movl
lret
add
pop
add
add
in
movsl
add
int
xchg
into
add
lret
jbe
add
add
test
sub
pop
xor
push
push
call
movl
fwait
incb
ret
mov
fadds
push
lret
mov
loop
cmpsl
repnz
add
push
mov
out
in
add
mov
bound
lcall
les
push
push
push
call
push
rcrl
mov
bound
mov
shr
add
add
incb
out
andb
add
fadds
jns
ja
add
test
in
lock
or
je
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
cli
imul
push
mov
ficompl
add
add
int3
jb
ja
jbe
mov
add
mov
addb
mov
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
popf
nop
mov
mov
add
mov
add
rolb
push
imul
mov
add
fisttps
cli
cli
push
add
mov
int3
loopne
in
add
mov
sub
pop
xor
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
enter
fsubs
int3
call
testb
in
add
repnz
add
add
mov
pop
add
mov
mov
imul
les
les
add
push
push
push
push
call
nop
add
mov
xchg
out
test
movsb
add
cltd
mov
jno
mov
loop
call
mov
out
icebp
movsl
les
sub
pop
mov
xor
push
sub
pop
add
add
push
rol
rol
shl
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
filds
add
add
js
add
add
rcr
add
mov
mov
add
add
clc
add
add
push
lock
aam
in
loopne
lcall
inc
or
push
push
push
push
call
cmpsl
fiadds
hlt
add
sarb
add
clc
rolb
mov
ja
enter
mov
cltd
jle
add
insb
add
lock
mov
aad
jmp
loope
xchg
add
lcall
lock
push
not
inc
add
pop
rep
push
rol
pop
mov
xor
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
mov
data16
add
xchg
add
add
push
rcrb
xchg
jae
add
fbstp
add
add
add
lcall
leave
je
mov
push
push
lea
push
call
in
add
nop
add
add
add
add
xchg
add
test
push
pop
add
lcall
mov
std
add
add
mov
stos
loope
imul
add
add
je
add
xchg
test
push
add
sbb
add
mov
add
add
hlt
pop
add
add
push
push
push
call
loope
data16
pusha
fldl
in
add
add
je
add
lock
add
add
cltd
add
loop
je
pop
pop
add
add
xchg
add
imul
add
cmc
add
loopne
in
hlt
pop
rep
pop
push
push
ror
lea
push
or
inc
add
add
lea
dec
add
sub
add
pop
not
pop
push
dec
lea
inc
pop
pop
push
not
pop
mov
push
rol
pop
mov
push
push
push
lea
push
push
call
jl
xchg
lds
testl
mov
out
pusha
xchg
add
add
add
mov
icebp
push
test
push
xchg
mov
roll
lcall
inc
and
push
push
lea
push
push
call
clc
add
pop
icebp
add
mov
add
push
add
loope
pop
jo
mov
add
xchg
add
pop
lods
add
cltd
filds
add
pop
mov
call
in
movsl
add
xchg
incb
lcall
loopne
push
sub
pop
mov
add
push
push
push
push
push
push
lea
push
call
push
flds
add
add
add
push
lahf
mov
add
cwtl
add
cwtl
add
jbe
xchg
int3
add
insb
call
je
mov
repnz
push
rolb
fldcw
add
add
lcall
push
push
push
push
push
push
lea
push
call
xchg
add
add
add
add
cld
add
xchg
fwait
xlat
add
mov
add
mov
add
pop
add
jae
ja
in
testl
xlat
sub
pop
push
push
rol
inc
pop
push
push
lea
push
push
call
jo
lds
cltd
iret
mov
xlat
add
arpl
test
mov
push
pop
pop
add
add
out
ret
pop
add
xchg
repnz
stos
movsb
mov
add
jecxz
mov
add
jno
add
pop
mov
pop
push
dec
add
sub
sub
pop
pop
push
push
lea
push
push
call
add
push
mov
out
fiadds
add
push
cwtl
add
lds
lods
mov
add
clc
fdivr
add
lahf
add
xchg
rol
add
add
js
add
add
test
add
mov
xchg
add
pop
add
push
lea
pop
pop
push
sub
ror
lea
pop
leave
ret
push
push
lea
push
push
push
push
push
call
add
jbe
add
sahf
sahf
pop
sti
stos
xchg
add
xchg
mov
add
mov
icebp
movsb
add
add
cli
mov
arpl
push
mov
idivl
mov
mov
add
add
jge
mov
popf
add
add
mov
add
data16
sub
pop
push
mov
push
push
push
lea
push
call
add
add
add
xchg
mov
add
add
add
add
add
pop
arpl
push
jne
mov
les
jmp
sub
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
loope
sbbb
add
fs
push
xchg
push
add
test
lods
pop
mov
movsb
jb
fisubrs
in
add
mov
xchg
test
push
mov
insb
add
add
ja
lret
js
mov
xchg
push
xchg
xlat
mov
add
lcall
push
shr
shl
pop
push
push
not
add
pop
push
push
lea
push
push
push
push
call
out
mov
add
add
roll
mov
pop
add
jb
cld
aam
imul
mov
in
push
data16
jp
mov
xor
nop
add
les
outsl
je
add
add
add
mov
xchg
scas
pop
pop
add
roll
push
rol
rol
rol
pop
movl
push
rol
dec
pop
addl
push
lea
pop
test
je
push
push
lea
push
lea
push
lea
push
push
push
push
call
pop
rolb
std
mov
imul
in
jge
pop
mov
ljmp
fldl
add
mov
add
mov
add
lcall
lock
imulb
out
scas
add
add
mov
add
lcall
inc
or
jae
push
push
push
call
jb
jns
jo
mov
roll
add
mov
mov
scas
in
xlat
jp
pop
cltd
rolb
add
add
arpl
mov
jle
out
movb
pop
mov
add
out
add
add
jle
add
add
mov
in
lock
lcall
push
push
push
lea
push
push
lea
push
push
call
aad
call
movsl
mov
andb
clc
jecxz
mov
out
lcall
arpl
add
lock
shr
add
fisttps
outsl
jecxz
hlt
repnz
add
lret
add
cli
add
add
add
lcall
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
push
movb
std
outsl
in
int
add
iret
loope
loop
add
stos
mov
movsl
add
add
int3
add
mov
fmuls
add
mov
add
xchg
jns
push
xchg
add
add
add
add
sub
pop
pop
push
push
lea
push
push
call
xorb
add
cltd
xchg
mov
aam
mov
mov
add
add
add
addb
lock
add
les
popf
push
jle
mov
add
test
aad
add
rolb
add
add
mov
mov
add
shlb
add
lcall
leave
push
not
add
pop
ret
push
push
push
lea
push
call
loopne
add
xlat
mov
add
push
in
add
insb
jno
add
lods
cld
testb
mov
mov
popf
add
cmp
add
fidivs
add
sub
pop
push
mov
push
shr
shr
pop
add
push
push
push
push
push
call
add
push
add
push
add
add
ficomps
add
popf
into
outsl
add
add
add
add
add
push
push
add
int3
hlt
ret
add
add
int3
ja
add
add
jns
add
sti
adcl
in
lcall
push
inc
sub
sub
xor
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
push
add
mov
add
js
add
js
add
insb
add
add
fstpl
add
mov
pop
sarl
testl
sub
pop
push
testl
push
push
push
push
call
js
out
add
loop
mov
add
in
scas
add
je
add
cmc
vpmacswd
add
popf
jo
arpl
movsl
sahf
testl
in
std
add
add
push
add
fldl
add
add
jnp
loop
lock
add
add
adc
lcall
sub
pop
addl
push
push
push
push
push
call
fldl
arpl
pop
int3
add
fadds
jge
mov
int3
add
data16
add
bound
lcall
add
mov
add
xchg
mov
jbe
add
addl
call
call
roll
add
scas
add
mov
add
add
add
hlt
test
rolb
add
in
clc
lcall
inc
cld
push
lea
push
push
call
pop
add
cmpsb
add
stos
aam
mov
add
add
add
push
jbe
scas
data16
add
add
add
add
sub
pop
pushl
push
push
lea
push
call
push
add
lret
jo
rcl
add
add
fcom
jno
mov
mov
add
add
pop
add
add
add
add
mov
mov
ret
test
push
lret
cli
mov
jae
out
mov
add
add
scas
insb
add
cltd
add
add
imul
push
push
lea
push
push
call
cli
add
add
clc
push
andl
add
bound
add
add
enter
pop
in
mov
add
lahf
cwtl
cmc
jbe
arpl
add
add
jbe
mov
mov
in
lock
lcall
mov
call
ret
lret
pop
cmpl
jne
push
sub
add
ror
pop
pop
push
inc
not
pop
pop
push
dec
pop
pop
pop
push
shl
rol
pop
leave
push
push
call
sarl
mov
jge
add
les
jns
test
xlat
scas
jle
add
lds
mov
int
add
add
mov
add
aad
add
add
push
shr
add
pop
push
push
push
push
push
call
add
mov
jnp
mov
mov
stos
add
add
pop
add
push
fwait
imul
add
lret
clc
test
jl
fisubrs
add
scas
mov
jns
in
lock
lcall
in
push
push
push
push
push
call
add
loop
loope
add
mov
int
faddl
popf
int
mov
add
fucom
add
cld
add
iret
add
add
add
xchg
out
ljmp
roll
imul
add
sub
pop
add
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
clc
add
movb
pop
rolb
add
add
add
movsl
add
add
add
cmp
insb
push
enter
add
mov
std
add
call
mov
pushf
jl
add
xchg
leave
movsl
add
addb
pop
push
push
rol
shr
shr
sub
pop
push
push
push
inc
pop
movl
push
lea
push
push
lea
push
lea
push
call
fiadds
ret
jl
jge
cmc
test
mov
stc
addb
push
mov
jecxz
nop
addb
in
jns
push
add
cld
add
cltd
imul
lds
mov
add
jbe
mov
sarb
out
mov
lock
outsl
mov
pop
test
fwait
lods
imulb
popf
mov
push
push
rol
add
sub
lea
pop
call
push
push
push
push
push
push
call
cwtl
add
jmp
hlt
mov
jae
out
add
shlb
cltd
mov
jecxz
in
out
addl
mov
repnz
add
lcall
or
rcrb
pop
cli
call
pop
fcom
or
add
push
call
cmc
iret
int3
mul
add
into
add
test
add
push
pop
mov
out
mov
cmc
jnp
out
jp
add
mov
movsl
pop
mov
outsl
jecxz
mov
mov
gs
lds
lret
js
arpl
insl
cld
add
shl
rolb
pop
pop
cmpl
jne
pop
push
lea
push
push
call
add
add
stos
pop
add
aad
add
add
jecxz
push
lahf
fiadds
add
clc
mov
mov
rcrl
add
add
addr16
std
mov
loope
add
stos
xchg
inc
add
add
push
push
lea
push
call
add
push
pop
fstpl
movsl
add
add
int3
pop
jo
add
add
add
mov
lret
in
add
int
lret
hlt
jo
add
xchg
add
add
add
add
aad
add
mov
addl
clc
pop
sarl
in
jecxz
sub
pop
pop
push
not
pop
pop
push
push
lea
push
push
push
call
jl
loopne
push
add
add
ficoms
mov
loop
fucomp
mov
lret
fwait
add
add
add
add
add
les
push
add
add
add
testb
add
add
jne
add
sub
pop
leave
push
push
push
lea
push
push
push
call
jmp
add
sahf
lcall
mov
scas
add
add
add
push
add
mov
stos
add
jbe
mov
add
cmpsb
add
in
add
push
frstor
lods
js
add
add
mov
push
dec
lea
pop
push
mov
push
lea
push
push
push
push
push
call
add
add
aam
lea
add
int3
add
add
add
add
movl
movsl
pop
mov
cltd
int3
pop
add
arpl
lcall
cld
push
push
push
lea
push
push
call
mov
add
add
loopne
jo
add
std
jns
mov
add
mov
add
stc
in
jae
add
lret
add
add
pop
test
lret
jne
ficoms
in
lock
push
push
push
inc
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
add
pop
pop
scas
add
add
aam
mov
add
jnp
in
xchg
cltd
loope
loope
aam
xlat
icebp
rclb
lret
loopne
lcall
inc
or
add
inc
add
pop
lea
push
shl
dec
rol
pop
sub
push
push
push
lea
push
push
push
lea
push
push
call
add
cld
add
add
add
add
add
add
adc
arpl
testl
mov
fadds
add
pushf
sti
xor
fs
push
lea
push
lea
push
lea
push
call
fadds
mov
add
pop
jp
add
add
mov
test
jno
xchg
test
add
add
push
add
jns
add
lcall
call
lret
pop
mov
lea
push
push
push
push
push
push
lea
push
push
call
fs
push
add
add
add
test
jae
add
add
rolb
add
shrb
push
mov
add
fucomip
ljmp
push
sub
pop
add
mov
push
push
lea
push
lea
push
call
hlt
cwtl
add
jl
add
jbe
insb
add
mov
add
cwtl
xchg
add
add
jbe
mov
addl
add
xchg
sub
pop
mov
push
push
call
add
add
mov
sarb
mov
add
push
add
add
mov
add
lret
repnz
lcall
inc
or
xor
add
shr
pop
add
push
pop
mov
push
xor
add
add
not
pop
mov
push
shl
inc
shl
pop
cmp
jne
push
ror
add
not
rol
pop
cmp
jne
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
lcall
ljmp
fnstsw
cmc
xchg
in
pop
jns
add
add
add
cmpl
add
outsl
lcall
add
add
mov
in
fdivr
lcall
inc
adc
add
add
add
pop
mov
lea
push
push
lea
push
push
lea
push
push
push
call
mov
ror
mov
jnp
push
add
fstpt
add
add
fldl
lcall
rcll
xorl
add
jmp
mov
mov
scas
sub
pop
jmp
push
add
not
shl
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
rcrb
test
add
jae
lcall
mov
add
xchg
popl
cmpsb
add
ror
insb
clc
mov
add
rorb
loopne
mov
push
push
push
call
out
addr16
add
lahf
ja
add
add
test
add
add
lea
cwtl
add
add
popa
je
sub
pop
sub
jne
mov
push
xor
pop
movl
push
push
push
lea
push
push
lea
push
push
push
push
push
call
push
jmp
cld
add
fidivs
loop
jb
int
pop
add
jecxz
add
icebp
add
add
jne
add
stos
add
lahf
ficoms
add
add
add
icebp
imul
add
roll
push
sahf
add
jmp
add
enter
jle
add
repnz
std
add
int
pop
add
add
lcall
insl
sldt
push
push
push
push
push
lea
push
push
call
test
xlat
into
add
mov
call
popa
add
ja
xchg
mov
add
in
insb
add
pop
insb
add
xchg
cld
mov
add
in
lcall
inc
cld
push
sub
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
add
add
push
add
lcall
out
add
notb
mov
add
xchg
mov
jnp
add
add
add
roll
add
mov
les
out
lock
fcompl
cli
add
test
add
push
push
push
lea
push
push
push
call
movsb
test
pop
add
sbbl
iret
bound
iret
add
add
xchg
adcl
fwait
add
add
testl
add
shlb
push
jo
mov
test
add
add
lcall
inc
adc
call
jno
test
jp
neg
push
add
add
test
mov
mov
mov
add
pushf
rolb
mov
add
mov
jae
mov
scas
andb
pop
movsl
mov
roll
add
in
mov
add
jns
test
lcall
add
add
add
lds
shrb
sbb
or
push
push
push
call
arpl
stc
ja
imul
test
lret
mov
add
add
sahf
in
out
int3
push
cmc
xchg
xor
add
add
fdivr
lcall
push
or
pop
mov
push
xor
pop
cmpw
jne
push
push
push
push
push
push
push
lea
push
call
jmp
add
pop
xchg
mov
lcall
lret
mov
add
add
jle
add
mov
add
ja
add
imul
fistl
add
pusha
add
fidivs
xlat
iret
mov
add
jmp
sub
pop
mov
push
xor
ror
pop
movl
push
push
push
push
push
push
push
push
push
push
call
je
outsl
push
insb
int3
add
sahf
cmc
add
fucomp
mov
add
nop
add
add
add
add
add
stos
addr16
out
enter
add
in
jge
fiadds
xchg
fildl
shlb
add
add
out
add
ja
int
add
aas
or
add
add
test
jne
call
add
call
add
add
adc
push
xchg
mov
add
add
in
neg
add
lods
test
gs
add
add
xchg
aad
add
xorb
mov
xchg
mov
mov
cltd
sub
pop
pushl
push
push
call
push
add
add
jo
pop
jbe
fwait
popl
lods
loop
push
add
add
add
add
xchg
add
mov
loop
lret
imul
add
aam
add
add
in
mulb
lcall
push
lea
push
lea
push
push
push
call
out
add
mov
add
push
loop
shlb
pop
rolb
jmp
bound
addl
in
add
xchg
mov
in
pop
mov
mov
push
inc
sub
pop
mov
push
push
dec
push
xor
add
add
lea
not
sub
add
pop
dec
pop
push
dec
pop
push
push
push
lea
push
call
jecxz
out
bound
add
lea
add
lret
js
add
mov
push
add
mov
add
add
stos
add
xchg
xchg
add
pusha
out
in
add
add
pop
add
lahf
xchg
add
xchg
add
fwait
jecxz
fwait
popa
imul
lods
push
hlt
lcall
adc
add
cmpl
je
push
push
rol
sub
push
or
inc
add
sub
sub
shl
pop
dec
pop
push
push
lea
push
lea
push
push
push
push
push
call
in
je
mov
add
add
mov
lds
push
add
add
pop
repnz
push
jl
nop
add
add
fs
add
jae
add
add
add
in
add
mov
ret
jb
add
aam
movsl
call
loopne
lcall
call
push
push
push
lea
push
push
push
call
aam
lds
lods
add
les
jle
icebp
xchg
mov
sti
xchg
xchg
add
loopne
stc
cli
jmp
lock
mov
add
add
mov
add
add
add
sahf
clc
sub
pop
cmpl
je
push
push
add
rol
push
or
not
add
inc
sub
add
not
add
pop
shr
pop
push
push
call
add
lret
push
add
add
incb
jb
add
in
add
sahf
xchg
cmpb
jne
add
mov
lods
enter
js
add
addr16
add
add
lret
xchg
add
jl
in
clc
lcall
push
shr
sub
not
pop
call
push
sub
sub
pop
cmpl
je
push
push
inc
push
and
add
sub
not
sub
inc
shl
shr
pop
add
pop
push
inc
pop
push
call
push
lea
push
push
push
push
call
pop
lret
add
add
xlat
add
outsl
fadds
fs
mov
add
xchg
loope
add
flds
out
add
mov
mov
add
test
add
lock
add
add
add
sti
data16
loopne
into
add
addl
cmpsb
mov
test
push
sub
pop
cmpl
je
push
push
dec
shl
dec
push
push
pop
add
sub
add
pop
ror
shr
pop
push
push
push
call
add
repnz
arpl
add
mov
mov
icebp
out
sahf
add
sti
mov
push
add
add
xchg
add
jmp
in
hlt
lcall
push
shl
not
rol
sub
pop
call
cmpl
je
push
push
not
rol
add
shl
push
xor
add
shr
rol
shl
inc
sub
shl
pop
inc
inc
pop
push
push
push
push
push
push
push
push
push
push
call
fnstcw
add
add
jmp
aam
add
pop
add
add
loopne
add
add
xchg
lock
pop
push
push
xor
ror
pop
call
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
movsl
scas
add
jecxz
roll
mov
push
add
add
push
leave
icebp
ljmp
test
pop
cmpl
je
push
push
not
add
push
or
not
add
shr
add
sub
inc
add
pop
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
add
add
mov
push
hlt
push
out
add
add
jae
int3
add
cld
xlat
add
add
mov
add
add
pop
add
add
xchg
sti
sahf
je
call
cld
jns
leave
test
call
add
sbbl
in
fcomps
push
push
push
lea
push
push
push
push
push
lea
push
call
imul
xchg
jecxz
pop
mov
add
add
idivl
int3
add
add
fs
pushf
add
add
mov
push
mov
test
movsl
push
add
add
in
fdivr
lcall
or
test
push
push
lea
push
lea
push
push
push
call
jo
add
add
add
add
push
lea
mov
gs
mov
sbbl
add
add
out
shlb
xchg
push
jo
add
popf
push
add
stc
lods
add
mov
pop
cmpl
je
push
push
dec
not
push
and
add
sub
shl
sub
sub
pop
shl
ror
xor
pop
push
inc
pop
push
push
push
push
push
push
push
call
mov
mov
mov
xchg
push
test
icebp
rcl
in
xorb
add
test
lods
jbe
add
loop
scas
add
add
mov
mov
fucomi
jne
xlat
add
roll
lds
jl
incb
ljmp
add
add
sub
pop
call
cmpl
je
push
push
not
dec
dec
push
push
pop
add
lea
shl
sub
pop
sub
pop
push
push
push
push
call
faddl
add
mov
push
pushf
popf
add
lcall
add
add
lret
sti
mov
push
jnp
xchg
push
push
mov
add
push
xchg
bound
mov
push
push
push
push
lea
push
push
push
lea
push
call
lahf
add
repnz
add
rcrb
scas
in
mov
mov
incb
cwtl
add
push
add
push
add
add
aad
add
mov
add
fsub
add
call
add
add
stos
stos
jge
mov
xchg
add
add
sub
pop
call
cmpl
je
push
push
add
push
xor
add
not
shl
sub
sub
pop
rol
xor
pop
push
pop
push
push
shr
dec
add
pop
call
push
lea
sub
sub
pop
cmpl
je
push
push
shr
push
or
inc
add
sub
add
sub
ror
pop
shl
rol
add
pop
push
add
pop
push
push
dec
shl
not
not
pop
call
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
addl
mov
mov
push
cwtl
add
xlat
push
mov
scas
push
add
in
stos
push
add
mov
add
mov
shlb
add
add
add
scas
jecxz
add
add
add
push
mov
in
fdivr
lcall
js
xor
ret
test
add
add
imul
push
xor
push
push
pop
add
lea
shl
shr
sub
xor
add
shr
ror
pop
not
rol
not
inc
pop
push
lea
push
push
lea
push
push
push
call
add
add
add
in
xchg
add
pop
add
lock
les
nop
add
scas
pop
add
cmpsl
sahf
lret
jno
add
push
sub
pop
push
push
push
push
push
call
icebp
add
add
push
add
add
test
mov
pusha
xchg
mov
icebp
add
fcomps
pusha
pop
pop
test
jmp
add
lds
mov
mov
fidivs
add
pop
push
pusha
fildl
add
std
lcall
jne
mov
add
lock
call
cmpl
je
push
push
ror
shr
push
sub
add
add
shr
sub
lea
pop
add
add
rol
pop
push
add
rol
add
lea
pop
push
call
push
push
push
lea
push
push
push
call
add
pop
jns
pop
add
push
data16
add
in
jle
mov
add
add
add
add
xchg
add
add
in
in
mov
sub
fisubrl
clc
fwait
jl
add
js
xor
pop
ret
sahf
add
add
ret
fimull
pop
mov
push
xor
pop
movl
push
shr
add
pop
jmp
push
push
lea
push
push
push
push
push
lea
push
push
call
cmpsl
repnz
addl
repnz
add
add
mov
xchg
add
add
ljmp
fcoms
pop
bound
add
ljmp
jl
push
jnp
lret
jmp
int
lods
faddl
mov
mov
jbe
sahf
pop
stc
cmpsb
mov
pop
xor
pop
push
push
lea
push
push
push
push
call
xchg
addr16
iret
xchg
xchg
add
mov
add
add
push
jb
scas
mull
out
mov
movsb
add
sub
pop
pop
push
push
lea
push
push
call
add
add
add
add
stos
add
xchg
fildl
filds
mov
add
into
leave
fadds
add
add
add
movsl
jne
mov
filds
lret
add
add
jl
add
lret
add
add
xchg
add
pusha
add
mov
add
add
add
jmp
mov
pop
pop
pop
push
dec
add
pop
leave
push
add
sub
pop
ret
push
push
push
push
lea
push
lea
push
push
push
push
push
call
repnz
nop
add
int
sarl
add
lods
add
add
int
add
add
add
popa
add
mov
mov
add
add
add
add
lock
add
mov
roll
jp
in
fcompl
in
push
sub
pop
add
cmpl
jne
push
push
dec
dec
sub
shl
push
or
inc
add
inc
sub
xor
pop
rol
pop
push
shl
add
pop
pushl
push
lea
pop
call
push
push
not
ror
inc
pop
call
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
iret
push
mov
mov
scas
les
add
add
add
sbbb
pop
add
add
jno
add
add
add
icebp
sahf
add
jb
fadd
sahf
movsl
pop
xchg
xchg
add
loopne
cmpsb
add
pushf
add
push
sub
pop
jmp
cmpl
je
push
push
lea
push
push
call
mov
add
leave
cmpsl
add
xchg
rolb
add
add
add
pop
ja
push
add
add
in
lock
cmpl
jne
push
not
sub
shl
pop
leave
push
lea
lea
pop
add
push
dec
not
pop
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
faddl
nop
add
clc
jno
add
push
push
sarb
mov
push
xchg
stc
add
popa
lods
jns
mov
fisttpl
stos
add
push
int
shlb
leave
addl
lret
add
xchg
add
pop
add
in
add
add
sub
pop
pop
pop
push
push
call
add
imul
cld
add
testb
lods
cmpsl
xchg
jl
fidivrl
add
add
fwait
shlb
lods
test
add
jecxz
add
lret
fsts
adc
pop
mov
neg
testb
add
add
enter
mov
push
lea
shrl
cmpsb
mov
add
mov
add
push
add
sub
shl
pop
add
ret
push
lea
push
push
push
lea
push
call
xchg
add
cli
mov
add
add
xchg
shrl
stc
add
add
mov
ret
add
imul
cwtl
lcall
hlt
leave
add
fildll
cli
mov
add
add
icebp
cmpsl
mov
test
in
in
lcall
nop
sbb
add
lret
sbbl
test
add
add
jmp
xlat
push
xor
shl
shl
sub
push
or
inc
add
xor
add
sub
inc
dec
pop
inc
inc
pop
push
shr
ror
pop
pushl
call
push
shr
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
popf
add
imul
les
mov
jbe
add
add
sahf
push
xchg
add
mov
addl
in
fdivr
lcall
shr
fistps
add
push
push
push
lea
push
call
push
add
test
add
add
test
mov
xlat
movb
in
add
add
mov
add
movsl
add
rolb
xchg
stos
mov
sub
pop
cmpl
jne
push
lea
pop
mov
push
pop
mov
push
sub
inc
add
pop
jmp
push
dec
pop
push
push
push
push
sub
add
sub
not
not
shl
shr
pop
dec
sub
sub
pop
push
dec
not
pop
pushl
call
push
add
add
shr
xor
pop
call
push
push
dec
sub
push
sub
add
sub
dec
rol
sub
add
not
pop
add
xor
pop
push
lea
push
push
lea
push
call
repnz
add
bound
add
jle
add
mov
xchg
add
add
add
add
push
xlat
jbe
add
add
add
add
faddl
jne
call
push
xor
shr
shr
pop
call
push
push
not
shl
push
sub
add
sub
add
shl
lea
sub
sub
pop
shr
rol
add
pop
push
ror
lea
add
pop
pushl
push
shr
pop
call
push
rol
add
rol
pop
call
push
push
ror
shl
push
or
inc
add
inc
sub
shr
rol
shl
not
pop
sub
xor
pop
push
add
add
not
lea
pop
pushl
push
not
add
shl
pop
call
push
push
lea
push
push
push
call
mov
add
add
je
add
add
lret
add
xchg
mov
mov
mov
mov
jno
add
jnp
loope
mov
pusha
add
add
add
add
movb
xchg
xchg
add
mov
lret
add
add
pop
add
sub
pop
call
push
push
dec
dec
ror
push
or
inc
add
shl
lea
sub
inc
sub
pop
xor
sub
sub
pop
push
push
push
push
push
push
push
push
push
push
call
push
cwtl
fsin
lods
jp
mov
add
add
add
add
mov
testl
popl
add
mov
xchg
jecxz
int
add
into
add
fiadds
add
in
cli
add
enter
add
lahf
in
mov
mov
add
add
leave
add
add
jne
call
push
push
push
push
call
cwtl
call
add
fisttpll
fldl
add
add
shl
push
add
stos
xchg
pop
xchg
pop
mov
je
push
add
sarl
add
rorl
loop
outsl
cmpsb
jb
mov
js
popa
add
int
popa
lahf
pop
popf
scas
sub
pop
call
push
push
inc
ror
dec
push
and
add
sub
ror
sub
xor
pop
sub
pop
push
add
pop
pushl
push
add
pop
call
push
shr
pop
call
push
push
rol
push
and
add
dec
sub
add
inc
dec
lea
pop
shr
sub
pop
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
pop
fcmovne
add
pop
xchg
flds
call
jle
mov
add
xchg
add
shlb
insb
leave
add
sahf
out
hlt
mov
add
add
add
imul
add
hlt
fiadds
cltd
sub
pop
pushl
push
push
push
push
call
push
add
in
ja
add
repnz
mov
add
movsb
fldl
lods
cmc
add
xchg
pop
mov
fistpl
cmpsl
add
add
mov
fdivrp
add
add
sti
jge
push
push
call
pop
call
push
push
call
stos
jns
add
fildll
hlt
jo
mov
xchg
add
add
rolb
add
mov
add
xchg
ja
aam
add
add
lods
add
add
add
add
add
scas
sahf
push
pop
add
mov
fists
add
mov
lcall
shrb
sbb
push
add
not
inc
push
push
pop
add
ror
rol
inc
sub
sub
lea
add
pop
inc
xor
pop
push
push
call
xorb
leave
push
jnp
add
in
pop
push
add
lock
std
add
adcl
add
add
add
xorb
add
mov
in
add
add
scas
stos
add
jo
push
movsl
jne
jb
add
mov
add
mov
pop
jl
in
clc
lcall
jne
push
shl
add
add
lea
pop
call
push
push
lea
push
call
add
add
add
mov
mov
ffreep
add
movsb
sahf
xlat
add
push
pop
fdivrp
sub
pop
call
push
push
shr
sub
shl
rol
push
and
add
not
rol
add
sub
shl
pop
shr
pop
push
push
call
push
mov
add
add
add
add
mov
enter
add
lods
mov
stos
pop
enter
mov
pop
mov
fildl
push
popf
popf
add
iret
add
add
mov
stc
add
add
add
clc
pop
pushl
push
add
pop
call
call
push
push
shl
not
not
push
xor
add
rol
sub
shl
sub
pop
sub
inc
pop
push
rol
not
pop
pushl
call
push
ror
pop
lea
push
push
inc
pop
call
push
push
not
rol
push
or
not
add
sub
sub
sub
sub
add
sub
dec
rol
pop
not
pop
push
push
push
push
call
test
add
arpl
add
nop
imul
jne
add
mov
hlt
add
add
addb
fs
jp
push
add
add
std
jmp
pop
lahf
add
add
add
pop
mov
mov
pop
pushl
call
push
sub
shr
pop
call
push
push
sub
xor
dec
push
or
inc
add
add
shr
shr
sub
add
pop
shl
pop
push
lea
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
xlat
stos
mov
fsubl
addr16
loope
rol
pop
mov
xchg
cld
roll
xchg
add
lret
pop
add
push
fdivr
lcall
jne
push
push
lea
push
call
add
jle
push
mov
pop
add
add
add
push
popl
nop
add
add
stc
loopne
xchg
add
mov
test
xchg
repnz
leave
cwtl
int
pop
cld
add
add
add
flds
mov
pop
mov
add
xchg
add
lcall
loopne
add
call
push
push
inc
rol
shl
push
push
pop
add
inc
sub
sub
inc
pop
inc
sub
sub
add
pop
push
push
call
addb
add
push
mov
faddl
add
add
add
test
bound
imul
lret
add
add
je
add
jne
push
lea
pop
call
push
sub
inc
pop
call
lea
push
push
lea
not
push
sub
add
not
not
sub
add
sub
add
add
dec
pop
shl
sub
pop
push
shr
add
pop
pushl
call
push
not
not
xor
sub
pop
push
push
push
call
add
push
add
hlt
add
add
add
add
or
mov
addl
add
add
lret
stos
add
sub
pop
call
push
push
ror
push
xor
add
inc
lea
sub
sub
shl
sub
pop
xor
not
lea
pop
push
lea
push
lea
push
push
push
push
call
push
lahf
add
jo
fsubs
mul
add
mov
add
add
add
add
jmp
add
sahf
add
push
repnz
in
call
pushl
push
push
push
push
push
lea
push
push
lea
push
call
push
pop
call
add
jge
jo
mov
addb
add
test
ljmp
add
cltd
hlt
jne
add
lcall
cmc
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
cmc
aad
mov
add
hlt
enter
add
add
add
add
ljmp
sub
pop
call
push
add
inc
pop
mov
push
push
ror
push
push
pop
add
add
sub
inc
ror
sub
lea
add
add
ror
pop
sub
add
pop
push
dec
shr
shl
pop
pushl
call
push
push
push
push
push
call
cmc
add
je
xchg
lret
mov
add
add
mov
add
popa
movsb
push
fstpl
mov
popa
add
jno
pop
add
lcall
pop
push
push
add
sub
ror
pop
pushl
call
push
push
rol
shr
xor
lea
push
or
inc
add
dec
add
add
sub
sub
pop
inc
add
pop
push
inc
inc
pop
pushl
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
lods
test
add
mov
rcl
je
fidivs
add
push
pop
add
add
add
jnp
add
rclb
add
jb
in
fcompl
arpl
add
push
push
not
push
or
not
add
shl
xor
sub
not
ror
pop
not
shl
pop
push
push
lea
push
and
add
add
shr
add
dec
sub
add
pop
lea
add
shl
pop
push
rol
rol
sub
pop
call
push
push
shl
ror
add
push
sub
add
inc
sub
dec
sub
rol
sub
pop
not
add
pop
push
not
rol
rol
pop
pushl
push
lea
push
lea
push
call
add
out
push
pop
add
loop
add
outsl
add
add
shll
mov
jno
mov
xchg
push
flds
jb
add
into
aad
mov
je
jno
add
add
lcall
popa
sbb
loop
repz
push
push
push
push
push
call
into
leave
fwait
add
push
add
aam
add
roll
add
push
std
add
fdivs
mov
mov
stos
add
in
flds
roll
in
jae
add
sub
pop
mov
lea
push
add
shl
sub
pop
lea
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
iret
mov
stos
add
add
pop
add
add
add
subb
add
cmpb
add
fdivr
lcall
push
push
pop
push
push
xor
add
pop
push
push
push
sub
lea
shl
not
pop
push
push
push
dec
pop
pushl
push
push
push
lea
push
push
push
call
add
mov
jbe
lock
add
xchg
add
bound
add
add
iret
add
sahf
jecxz
rolb
rcl
lods
cld
pop
sub
pop
push
push
xor
shl
pop
call
push
push
shl
add
push
sub
add
lea
add
sub
sub
sub
lea
sub
pop
shr
pop
push
push
push
call
outsl
pushf
out
mov
add
add
repnz
add
xchg
add
add
clc
fadds
faddl
xchg
add
mov
xchg
fiaddl
ret
mov
mov
clc
add
add
push
lock
mov
hlt
lcall
jne
push
push
call
add
jnp
cld
test
push
add
xchg
xchg
xchg
xchg
pop
popl
add
add
add
loope
mov
add
add
clc
pop
call
push
push
push
lea
push
push
push
push
call
add
ljmp
lods
mov
sti
cmpsb
add
shr
roll
les
add
call
cwtl
incb
cwtl
cmpsl
jb
test
add
ja
pop
add
rcr
cmpsl
lods
pop
sub
pop
call
push
inc
pop
mov
push
not
shl
rol
pop
pop
dec
jne
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
mov
add
xchg
fldl
add
add
fadds
mov
add
mov
add
add
call
mov
adcl
xchg
push
mov
fdivr
lcall
jp
add
push
push
inc
push
or
inc
add
sub
not
sub
dec
sub
xor
pop
rol
dec
inc
pop
push
push
lea
push
push
push
push
lea
push
call
notb
add
add
add
add
fld
add
jnp
add
test
into
mov
add
lcall
jne
push
rol
shr
shl
pop
call
push
push
push
push
push
push
push
push
push
push
call
push
scas
add
popa
imul
out
shll
xlat
sarl
ja
fs
rolb
add
add
add
faddl
add
jne
add
add
sub
pop
call
push
xor
ror
pop
mov
lea
push
push
inc
add
not
push
xor
add
sub
sub
sub
sub
dec
dec
inc
pop
sub
not
dec
pop
push
add
shr
pop
pushl
push
lea
push
push
call
add
mov
loopne
stc
decb
add
in
jl
pop
std
pushf
popf
iret
add
add
std
pop
add
xchg
add
lret
fwait
mov
in
mov
add
add
add
orl
mov
add
mov
sub
pop
call
push
dec
shl
pop
push
push
push
push
push
call
add
mov
add
flds
loop
pop
pop
mov
mov
cli
add
insb
lock
xchg
xchg
call
lret
fcomps
jl
scas
stc
lods
xchg
in
lock
add
fldl
js
leave
add
popa
add
xchg
test
lcall
shrb
jmp
push
sub
push
or
inc
add
inc
add
sub
sub
xor
pop
sub
add
pop
push
dec
lea
rol
shl
pop
pushl
call
push
lea
push
push
push
push
push
lea
push
push
push
call
xchg
add
loopne
out
jns
cmc
fadds
add
into
jb
add
add
ret
stc
lret
push
push
ljmp
sub
pop
call
mov
push
push
push
push
push
push
push
call
cltd
jno
xlat
jp
xchg
inc
rcr
jmp
push
clc
add
add
xchg
cmc
pop
add
pop
les
jno
shl
add
mov
sub
pop
lea
push
push
ror
dec
rol
push
and
add
dec
sub
sub
not
sub
shr
pop
sub
not
pop
push
pop
pushl
push
lea
push
push
call
push
add
pop
add
add
jno
jl
add
jno
test
add
loop
add
lcall
int
add
lea
push
lea
push
call
push
add
add
add
pop
push
ja
mov
pop
add
fiadds
xchg
add
stos
push
add
iret
add
testl
in
clc
lcall
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
repnz
mov
icebp
aad
add
push
add
add
aam
xchg
clc
add
icebp
out
add
add
xchg
add
jno
jmp
add
add
cmpl
jo
jecxz
gs
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
add
pusha
hlt
add
fcoms
add
icebp
ja
out
mov
vandps
add
call
mov
add
jns
mov
mov
insb
call
add
jo
mov
add
lods
lods
pop
mov
lcall
add
leave
push
pop
pushl
push
push
shl
sub
inc
push
xor
add
sub
sub
sub
pop
shr
rol
sub
ror
pop
push
add
sub
add
pop
push
push
sub
pop
call
push
push
add
ror
push
or
not
add
add
rol
sub
xor
inc
pop
shr
lea
pop
push
lea
push
push
push
push
push
push
push
call
lock
add
push
mov
add
mov
mov
mov
mov
movsl
arpl
fstp
pop
int3
add
add
pop
add
add
in
loopne
pushl
push
push
push
call
add
add
xchg
add
out
test
add
add
cmpsl
xorl
add
in
hlt
pop
call
push
xor
pop
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
xchg
add
repnz
add
popf
jbe
faddl
popf
ret
add
add
std
lret
xchg
add
stos
add
add
in
mov
sub
pop
call
push
push
shl
ror
add
push
sub
add
lea
add
xor
inc
sub
xor
rol
pop
dec
not
pop
push
shl
pop
pushl
call
push
rol
pop
call
push
sub
pop
jmp
push
xor
pop
pushl
push
dec
pop
mov
push
push
lea
push
lea
push
push
push
call
out
sti
andl
add
pop
mov
in
add
add
add
sti
rclb
add
add
xchg
add
lods
fidivs
add
jne
sub
pop
jmp
push
push
shr
inc
push
sub
add
sub
dec
xor
sub
add
pop
sub
sub
add
pop
push
push
push
push
push
push
push
push
lea
push
push
call
nop
fcompl
rolb
add
add
loope
xchg
call
push
bound
add
add
int3
int
add
jno
movb
clc
mov
divl
push
shlb
jge
add
ret
add
add
jp
add
add
enter
add
lods
jbe
sub
pop
pushl
push
add
pop
call
push
lea
push
push
push
push
push
push
call
fprem
gs
xchg
add
les
test
add
add
add
add
fnstsw
test
add
add
mov
and
add
pop
sbb
test
add
rclb
add
add
add
in
in
lcall
add
movb
call
push
push
shl
add
shl
push
and
add
dec
sub
add
sub
shr
dec
pop
not
shr
ror
pop
push
push
push
push
push
push
call
add
aad
pop
subl
add
enter
rolb
test
xchg
negb
add
shll
pop
lahf
int3
out
fs
mov
add
push
ljmp
add
in
aam
arpl
into
out
addb
in
call
push
sub
pop
call
push
push
push
push
push
push
push
call
add
pop
add
add
add
mov
mov
lret
add
push
add
xchg
imul
push
jae
pop
in
add
fdivs
loopne
cld
jbe
pop
int
outsl
loopne
mov
rolb
add
add
lcall
rclb
jecxz
push
push
call
add
push
add
xchg
outsl
add
mov
rcl
in
in
mov
stos
mov
add
add
add
add
add
mov
add
mov
push
mov
popf
add
lcall
add
push
ror
pop
pop
push
not
ror
add
pop
pop
push
ror
xor
add
pop
pop
push
xor
sub
not
rol
pop
pop
leave
push
push
push
push
push
call
xchg
rclb
pop
addr16
ffree
push
add
add
add
lods
xchg
add
loop
pop
fsubrl
arpl
fadds
mul
xchg
add
iret
add
add
lahf
add
add
xchg
add
mov
sarl
add
add
les
push
push
lea
push
push
push
push
push
call
add
mov
repnz
data16
movsl
add
add
mov
pop
add
ret
shl
pop
add
add
add
mov
add
int3
add
cwtl
mov
bound
addb
add
mov
add
add
add
add
add
add
fistl
xchg
add
lods
add
sub
pop
ret
push
not
rol
rol
pop
leave
ret
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
rcll
fwait
add
add
popf
add
out
pop
add
iret
incb
jge
shll
xchg
js
filds
mov
add
sahf
add
nop
add
std
mov
fcomp
add
test
add
cmpsb
addb
push
add
push
loope
add
in
fcompl
push
rol
pop
mov
push
add
shr
rol
pop
cmpl
jne
mov
push
sub
pop
jmp
mov
push
sub
rol
pop
and
push
push
push
call
imul
fadds
push
fucomi
testb
add
mov
loopne
pop
stc
ret
add
lods
add
popf
xchg
xchg
jecxz
add
cwtl
addl
mov
pop
add
lea
add
add
mov
sub
pop
xor
xor
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
cld
int3
stos
add
xchg
imul
fdivs
add
arpl
add
add
mov
jns
push
scas
xchg
jo
xlat
add
fwait
add
stos
je
outsl
jae
mov
pop
add
xchg
add
movsl
stos
jne
mov
sub
pop
add
push
xor
add
inc
inc
pop
xor
push
pop
dec
push
push
push
push
lea
push
lea
push
lea
push
call
add
les
xlat
notl
pop
int3
jo
add
addr16
add
push
add
mov
lods
cmpl
faddl
addr16
js
mov
add
xchg
jne
add
add
cmc
arpl
add
push
icebp
loopne
gs
add
xchg
iret
sub
pop
sub
push
lea
push
push
push
push
lea
push
push
call
js
add
mov
jle
pop
mov
add
lcall
jne
rcrb
arpl
mov
jmp
add
xchg
mov
add
sub
pop
jmp
push
sub
pop
sub
push
push
push
push
push
push
push
call
in
add
sbbb
add
xchg
pop
test
add
pop
add
xchg
mov
mov
shrl
add
out
hlt
pop
add
pushl
push
ror
xor
ror
pop
pop
push
shr
sub
pop
sub
push
lea
push
push
push
push
push
call
in
jl
push
mov
add
add
push
add
lods
cld
add
add
add
xchg
add
add
sti
mov
xchg
mov
pop
cmp
jne
mov
push
push
lea
push
lea
push
push
call
jne
pushf
add
outsl
jecxz
mov
add
add
out
leave
add
pusha
jno
rol
rcr
cli
add
add
mov
int
add
test
fiaddl
add
add
jbe
pop
add
add
in
in
lcall
dec
cmp
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
push
add
out
jecxz
add
cli
push
mov
add
cli
add
call
stc
ljmp
add
lock
pop
out
in
addl
lcall
jmp
mov
les
add
add
fimuls
push
js
movsl
add
hlt
jb
pop
add
add
add
enter
jmp
add
stos
jmp
insb
movsb
lret
add
mov
add
scas
out
add
test
hlt
add
add
scas
push
addr16
fistpl
pop
iret
mov
lcall
or
jmp
out
pop
add
sub
push
pop
pushl
push
push
push
lea
push
lea
push
push
call
pushf
cltd
xchg
pop
jbe
add
push
add
push
mov
pop
add
push
loopne
data16
imul
add
jge
xchg
pop
add
mov
out
gs
pop
pop
push
lea
push
push
push
push
push
push
call
jp
pusha
add
lock
mov
add
jmp
add
aam
add
add
add
add
mov
shr
push
push
push
push
push
push
call
movl
mov
add
add
add
add
iret
mov
movsb
add
add
xchg
int3
test
add
incb
add
add
pop
mov
data16
xchg
add
bound
xchg
xlat
pop
add
mov
add
add
sub
pop
and
push
not
pop
sub
cmp
jne
push
sub
pop
leave
push
push
push
lea
push
push
lea
push
push
call
add
add
lret
in
add
add
movsb
loope
jmp
lret
add
add
test
mov
add
add
fldt
lcall
add
push
push
push
push
call
add
add
jne
add
test
lret
cmc
std
add
cltd
add
int3
rclb
add
add
mov
lock
add
add
add
jl
in
add
loop
add
ret
pushf
sbbl
sub
pop
push
push
add
dec
pop
mov
push
push
push
push
push
push
call
lahf
add
mov
icebp
pop
jnp
add
out
add
add
mov
movsl
jle
out
out
js
loopne
add
ljmp
pop
add
add
out
push
rolb
call
add
cltd
add
add
add
hlt
mov
add
lcall
cld
push
ror
add
pop
push
push
push
lea
push
lea
push
push
push
push
call
lds
add
jmp
negb
mov
mov
add
je
iret
add
stos
add
pop
pop
mov
bound
lcall
jle
push
add
add
mov
add
add
add
int3
xchg
rolb
ja
popa
leave
imul
call
push
lea
push
push
push
push
push
call
lds
add
add
pop
filds
imul
add
push
push
add
add
mov
div
add
imul
add
sub
pop
push
push
sub
shr
not
pop
push
mov
push
push
lea
push
push
call
sti
add
mulb
add
jb
mov
add
mov
add
pop
je
fdivl
pop
jge
push
repnz
add
jge
add
ret
pop
popf
loope
sub
pop
lea
push
xor
not
xor
pop
sub
push
push
push
push
push
push
push
call
hlt
les
add
hlt
mov
add
add
scas
add
jae
ja
push
add
insb
mov
add
add
mov
testl
add
fdivl
add
add
out
popl
hlt
mov
add
je
push
ficomps
jbe
bound
mov
imul
pop
mov
push
pop
shr
push
sub
add
xor
pop
add
push
sub
shr
lea
pop
mov
push
lea
push
lea
push
lea
push
push
lea
push
call
push
add
pop
add
add
jne
mov
lds
add
mov
add
add
add
mov
fxch
add
add
out
scas
xchg
fs
add
in
fildl
nop
add
sub
pop
add
push
dec
sub
pop
mov
add
push
push
push
push
push
lea
push
push
call
incb
push
movsl
mov
test
add
in
out
mov
jmp
loope
add
cwtl
rolb
idiv
pop
jmp
cmp
xchg
add
aad
push
add
add
pop
repnz
jmp
pop
ja
stos
add
add
add
lock
add
push
add
movsl
in
in
in
xor
push
push
push
push
lea
push
call
rolb
add
add
add
jno
xlat
loope
scas
out
mov
add
jmp
lret
out
add
lea
lcall
xlat
and
push
add
pop
rol
push
push
push
push
push
push
push
lea
push
call
fistps
push
add
jb
je
mov
mov
xchg
filds
outsl
jle
out
fdivs
cli
movsb
add
add
ret
cld
add
add
xchg
add
lcall
rolb
rol
sub
pop
xor
push
lea
push
push
call
add
add
add
mov
mov
fcmovnb
mov
iret
int
out
add
mov
add
stc
call
lcall
push
lea
push
push
push
push
lea
push
push
push
call
add
fsub
xchg
rclb
add
insb
xchg
xchg
add
aam
add
mov
movsb
incb
add
add
loopne
mov
add
xchg
in
add
add
fcomps
filds
xchg
std
aam
in
loopne
lcall
cmp
jne
add
push
not
pop
cmp
je
push
inc
add
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
push
call
mov
add
add
aad
push
add
imul
cli
iret
mov
movsl
ljmp
jo
add
add
add
add
mov
call
pop
add
int
lds
in
mov
jo
add
shrb
add
push
add
loop
in
fdivr
lcall
jnp
add
test
push
push
push
lea
push
push
push
lea
push
push
call
mov
push
fdivrl
push
mov
popl
jne
in
add
insb
out
add
add
jno
jp
add
add
in
loopne
lcall
pop
push
rol
lea
ror
pop
pop
pop
push
sub
lea
pop
pop
push
push
push
push
push
push
push
call
cli
xchg
add
add
add
insb
jb
jo
mov
add
add
jbe
mov
popf
add
add
jle
mov
sub
pop
leave
push
xor
sub
pop
ret
mov
push
push
push
push
push
push
push
lea
push
push
call
lds
stos
mov
mov
add
jbe
add
int3
add
mov
add
sahf
add
add
add
jl
push
add
add
add
cmpsb
add
pop
add
add
int3
add
add
push
mov
aam
add
add
pop
xchg
iret
add
sub
pop
add
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
mov
mov
add
in
clc
add
gs
add
roll
jle
push
xlat
fwait
xchg
cmc
lret
jmp
testl
add
test
out
add
fadds
out
add
sub
pop
push
add
push
lea
push
lea
push
push
push
call
mov
push
lahf
enter
add
add
stc
add
cmpl
add
fisubl
lahf
add
roll
addb
in
incb
sahf
push
in
in
pop
mov
push
inc
lea
pop
testw
push
add
add
rol
pop
pop
pop
push
lea
add
pop
mov
push
sub
pop
push
push
push
lea
push
push
lea
push
call
fbstp
pushf
add
ret
pop
jl
add
add
add
add
ljmp
scas
cmc
clc
jle
ret
add
imul
pop
call
push
push
call
mov
loop
add
add
stos
push
fidivrs
add
nop
jp
jle
hlt
fmuls
mov
add
in
clc
pop
xor
pop
push
rol
pop
pop
push
lea
add
shl
pop
pop
push
shr
add
shr
pop
pop
push
shl
dec
dec
inc
pop
pop
push
xor
ror
ror
ror
pop
leave
push
push
push
push
push
push
push
call
add
lret
pop
add
loop
jnp
add
lods
add
push
add
test
push
int3
jno
subb
add
gs
add
add
push
sarb
ret
add
add
lret
std
roll
add
add
imul
add
ljmp
pop
ret
push
sub
shl
add
pop
push
push
shr
rol
pop
mov
push
not
xor
add
pop
add
push
push
push
push
push
call
add
add
xchg
add
add
add
mov
gs
scas
fldl
je
gs
imul
add
xlat
cld
jmp
add
scas
mov
pushf
cltd
jae
in
in
lcall
push
push
shl
lea
rol
pop
push
push
push
push
push
push
push
push
push
call
add
mov
mov
add
lcall
xlat
add
jp
leave
std
add
jns
sub
pop
push
mov
push
shr
pop
push
push
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
iret
clc
in
add
loope
add
out
pop
lods
lods
shrb
mov
cltd
loop
mov
xchg
add
add
add
mov
in
fdivr
lcall
push
cmp
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
push
rorl
jo
add
jle
mov
mov
ret
test
xchg
add
faddl
test
rolb
fidivl
jbe
xchg
cmp
jmp
add
xchg
cltd
loope
lret
xchg
cltd
add
sub
pop
sub
mov
push
push
push
call
outsl
mov
add
add
add
add
popf
in
add
add
jb
movsl
push
add
movsl
ret
out
bound
cld
add
add
xchg
js
push
add
add
jne
add
add
iret
add
lcall
ljmp
shrb
push
imul
push
push
push
push
lea
push
push
call
bound
mov
add
pushf
mov
scas
in
add
test
push
sahf
pop
add
lods
mov
add
cmpl
add
mov
jo
sahf
pop
mov
add
lcall
fimull
cli
add
pop
add
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
add
testb
mov
out
add
xchg
scas
jecxz
push
rcrb
add
add
jns
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
call
jbe
les
add
rorb
add
stc
scas
add
call
add
mov
add
lret
imul
rolb
add
add
add
sub
pop
popl
push
push
push
push
lea
push
call
loop
sbb
ljmp
mov
scas
push
add
jl
add
xchg
add
lods
add
shr
mov
mov
aam
add
xchg
cmpsb
add
movsl
int3
add
mov
add
jnp
push
pop
add
push
lea
push
call
push
mov
icebp
cmpsb
jnp
add
imul
add
mov
add
add
fsts
add
pop
movsl
xchg
jno
stos
mov
xchg
add
pushf
sahf
mov
mov
push
add
add
std
add
add
add
add
add
pop
subl
lcall
testb
not
shr
add
pop
mov
add
push
ror
shr
pop
xor
push
sub
pop
rol
push
dec
shl
pop
nop
push
push
push
lea
push
push
push
call
add
add
add
mov
xchg
pop
test
cmpsb
add
jae
fwait
icebp
push
mov
add
add
mov
rclb
add
movl
pop
jle
add
fwait
les
add
add
add
mov
add
lcall
push
rol
pop
xor
push
inc
pop
nop
push
push
push
lea
push
push
call
push
out
mov
xlat
add
pop
add
add
fld
nop
add
mov
std
scas
lock
add
mov
in
add
add
jl
mov
test
add
test
test
add
jmp
mov
clc
add
add
cwtl
mov
lret
in
add
add
add
add
nop
push
push
push
push
push
push
push
push
lea
push
call
add
add
cwtl
push
loop
les
repnz
outsl
add
lods
add
jno
add
xchg
addr16
add
fildl
add
push
add
add
xchg
add
add
add
out
pushf
mov
pop
aam
add
jnp
pusha
lea
add
filds
aam
roll
xchg
add
add
nop
push
add
pop
nop
cmpb
jne
push
inc
ror
pop
add
push
sub
xor
pop
nop
push
sub
pop
nop
cmp
je
push
lea
pop
nop
push
lea
sub
pop
nop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
cltd
add
cmpsb
add
in
add
push
xchg
pop
mov
aam
add
add
test
in
add
jmp
add
mov
call
sub
pop
inc
push
dec
shr
pop
nop
push
not
xor
sub
shr
pop
nop
push
add
shr
pop
cmp
jb
push
rol
pop
xor
push
add
add
pop
jmp
mov
push
pop
add
movzwl
push
lea
push
push
push
lea
push
push
push
push
call
add
push
pop
rorl
add
addl
cwtl
int
push
mov
rcr
clc
movsb
jp
add
lods
mov
add
fistpll
sub
pop
mov
add
push
push
lea
push
push
push
push
push
push
call
fwait
add
mov
pop
add
add
add
add
mov
call
int
leave
jmp
jge
shr
add
in
add
xchg
add
lret
add
mov
outsl
sahf
add
call
cmpsb
filds
xchg
fwait
add
cwtl
sub
pop
mov
push
push
push
push
push
push
call
jnp
add
mov
pop
mov
xchg
mov
in
pop
add
add
add
popf
sahf
ljmp
add
jno
add
add
add
lcall
push
mov
push
je
push
pop
movsb
lds
add
add
sar
imul
sub
pop
xor
push
ror
not
lea
pop
xor
shl
push
rol
sub
not
pop
xor
push
lea
push
push
push
call
clc
xchg
in
add
xchg
out
add
add
lods
leave
mov
add
add
mov
movsl
xchg
ja
push
lea
add
add
add
sub
pop
shl
xor
push
push
call
addl
jmp
add
in
add
add
leave
add
pop
jp
add
add
add
add
fwait
mov
mov
add
xchg
fwait
test
mov
add
add
ja
add
xchg
bound
add
add
push
arpl
add
add
mov
arpl
in
clc
pop
shl
push
push
call
mov
jbe
iret
add
add
addr16
add
mov
add
cwtl
add
add
int
test
mov
jo
add
cltd
ret
jmp
mov
add
add
jle
lret
jne
std
add
add
mov
sub
pop
xor
push
push
push
push
lea
push
call
add
add
jle
idiv
js
jns
add
test
add
sbbb
add
lret
add
add
add
add
popa
add
push
add
push
aam
mov
mov
push
in
lods
out
add
mov
out
add
mov
rcr
cltd
pop
lods
fldl
pop
mov
add
push
push
push
push
push
push
lea
push
push
push
call
nop
out
push
test
in
scas
into
add
imul
loop
fstp
sar
mov
pop
scas
add
add
js
incb
mov
arpl
jb
add
mov
out
in
fdivr
lcall
push
push
push
lea
push
call
add
ficoms
jecxz
xchg
add
add
push
add
push
popf
leave
shlb
fisttps
add
add
stos
pushf
loope
call
out
add
add
add
add
js
popf
add
popa
in
xchg
mov
scas
pop
add
std
roll
add
clc
xchg
sub
pop
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
call
pushf
arpl
add
fadds
xchg
xchg
clc
add
add
fldcw
add
leave
leave
add
push
add
add
mov
mov
mov
add
repnz
in
in
pop
leave
push
push
push
call
cld
pushf
loop
testb
fcmovnbe
ja
fsubrs
push
mov
lcall
jge
add
add
push
leave
jle
lret
fadd
mov
mov
lcall
or
push
add
shr
add
ror
pop
push
mov
push
push
push
push
lea
push
lea
push
call
add
cmpsl
jae
faddl
push
add
shll
je
sub
lods
lods
gs
in
xchg
loopne
add
xchg
add
mov
push
add
insb
add
rcl
add
stos
add
lret
sti
rolb
jae
lcall
sub
pop
push
push
push
dec
ror
shl
pop
push
push
add
pop
push
push
dec
pop
mov
push
sub
ror
shr
rol
pop
mov
push
push
call
add
mov
fs
aam
add
push
imul
xchg
cli
jbe
mov
lret
shl
lret
fsubr
push
outsl
in
mov
jmp
mov
add
xchg
repnz
aad
jb
xchg
enter
mov
xchg
data16
push
sub
pop
mov
push
rol
shr
inc
pop
test
je
push
add
xor
add
pop
mov
test
je
push
push
push
call
mov
add
sahf
in
xchg
add
in
xchg
add
pushf
arpl
mov
add
add
jmp
into
faddl
mov
xchg
mov
add
mov
mov
loop
add
test
add
sub
pop
mov
mov
push
push
push
push
lea
push
push
push
push
push
call
push
push
lahf
sti
ja
push
fnsave
add
add
add
add
add
int
mov
fxch
cltd
je
jae
repnz
rolb
mov
xchg
mov
add
mov
jnp
enter
jne
push
sub
pop
mov
push
push
push
push
lea
push
call
add
add
mov
add
push
add
add
popa
add
add
add
pop
outsl
mov
add
cltd
add
add
imul
add
bound
pop
add
fidivrs
lods
lahf
add
cmp
je
push
shr
not
shr
shr
pop
test
je
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
jae
jbe
pop
pop
cltd
add
lds
lahf
jne
mov
popl
add
add
xchg
scas
push
mov
ja
add
aad
nop
ret
fdivr
lcall
push
push
push
push
call
outsl
mov
mov
add
bound
add
add
add
add
add
xchg
pop
lea
cmc
jbe
add
add
add
stos
mov
add
lods
push
insb
add
add
lds
xchg
xchg
movsb
mov
xchg
scas
pop
fistpll
movsb
add
hlt
lcall
push
push
push
lea
push
call
xchg
fnstcw
xchg
fucomp
add
jno
out
add
out
xchg
add
add
incb
les
add
mov
mov
faddl
test
lock
lahf
testb
in
xchg
add
add
pop
fbstp
in
lock
lcall
rorb
test
add
add
call
lea
lea
pop
xor
push
push
lea
push
push
push
push
lea
push
lea
push
call
jp
add
lds
cli
jnp
mov
imul
mov
stos
add
in
add
add
add
mov
movsl
fxch
pop
add
push
add
mov
sti
xchg
outsl
aam
add
add
mov
add
movl
mov
lcall
pop
push
push
push
call
add
int
xchg
incb
push
std
add
test
jae
je
add
jl
lea
shr
test
add
add
add
xchg
add
add
pop
add
mov
mov
add
add
jo
movsl
pop
rorl
add
add
lcall
pop
push
shl
pop
leave
ret
push
lea
dec
shr
pop
mov
push
rol
lea
lea
pop
inc
push
sub
not
sub
xor
pop
cmp
jne
push
push
push
push
push
call
fcomip
add
add
jnp
fidivrs
out
add
xchg
add
add
mov
add
xchg
aam
add
sti
sub
pop
lea
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
test
cltd
fs
outsl
mov
mov
movb
xchg
insb
mul
add
pusha
les
mov
xchg
test
add
scas
pop
sub
pop
mov
test
je
push
push
lea
push
push
push
push
push
push
call
rolb
nop
call
fildl
cwtl
aam
stc
add
fiadds
add
push
test
imul
fld
push
add
cld
add
jb
out
add
lretw
fiadds
lcall
push
push
inc
sub
inc
pop
add
push
push
lea
push
call
add
add
movl
push
mov
iret
leave
cli
add
jns
add
pop
into
loopne
lods
fwait
lret
add
add
xchg
push
cltd
sub
pop
cmp
jne
push
pop
mov
test
je
push
sub
shr
ror
pop
mov
add
push
push
lea
push
lea
push
call
out
add
add
jne
push
lcall
mov
mov
add
add
fstl
icebp
add
mov
add
jno
test
push
add
xchg
jae
xchg
add
jb
push
stos
add
add
stc
add
andl
imul
sub
pop
cmp
je
push
xor
pop
jmp
xor
push
inc
pop
pop
push
sub
pop
pop
push
add
pop
pop
pop
push
push
lea
push
push
push
push
call
add
pusha
mov
add
aad
enter
add
add
stos
addl
int3
call
scas
enter
loope
add
jns
call
bound
test
test
mov
add
je
add
add
pop
cmc
jae
mov
in
call
leave
push
lea
push
push
push
push
lea
push
push
push
push
call
out
add
push
lea
add
add
hlt
add
lret
add
lods
scas
bound
pop
add
je
add
add
add
frstor
lcall
or
push
lea
push
lea
push
push
call
add
mov
lret
out
mov
arpl
test
leave
pop
add
popf
lcall
shll
xlat
add
mov
push
lcall
inc
lcall
ror
xor
pop
pop
pop
push
lea
push
lea
push
call
xchg
add
jle
roll
rcrl
add
jmp
jns
add
xchg
std
push
add
add
mov
jmp
pop
push
lea
push
push
push
lea
push
push
push
call
jbe
mov
add
add
fildl
jb
movl
add
add
add
add
add
mov
lcall
push
not
shr
pop
ret
push
sub
pop
mov
push
shr
not
pop
pop
push
xor
xor
pop
pop
push
sub
pop
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
mov
in
cmc
data16
add
add
lret
fwait
add
out
add
add
add
pop
ret
out
add
cwtl
std
add
mov
mov
in
add
push
push
push
push
push
push
push
lea
push
call
popa
add
add
popl
in
mov
mov
mov
lahf
add
xchg
loop
ljmp
mov
add
in
cmc
insb
leave
add
add
movsl
rolb
add
popf
scas
xchg
pop
arpl
lcall
or
test
jae
leave
imul
sub
test
jae
or
jae
shll
jae
rcl
jae
test
push
test
push
fcoml
add
cli
int
fstpt
ds
sbb
and
sbb
aad
sbb
sub
dec
mov
cmp
push
sub
push
xor
xor
inc
out
adcl
or
scas
jl
push
pop
outsl
xor
repz
test
imul
inc
enter
mov
jo
push
outsb
insb
loope
jl
inc
cwtl
sbb
add
cmpsl
xor
cli
push
lret
js
push
mov
movsl
dec
xor
add
cmp
dec
std
pop
jle
sub
jnp
insl
inc
fdivrl
inc
or
in
pop
pop
outsb
nop
xor
lcall
xchg
xchg
sbb
xchg
add
nopl
les
dec
aas
daa
jle
push
mov
incl
or
lods
pop
loop
sub
dec
sub
inc
jge
cmp
lods
mov
leave
cld
int3
and
add
mov
or
cmp
or
pop
dec
xor
cmovbe
jno
in
mov
bound
pop
in
lods
jne
gs
push
call
scas
mov
and
icebp
cmpsb
push
inc
daa
lods
adc
loopne
popf
js
mov
sar
xor
and
mov
mov
and
je
enter
rolb
add
dec
or
jbe
push
dec
sub
test
push
fistpll
pop
cmp
pop
sbb
push
call
or
mov
lret
mov
pop
xor
cmp
sbb
pop
xchg
pop
daa
bound
inc
jp
out
mov
xchg
mov
dec
shrl
fsubrs
or
xchg
dec
add
push
dec
cs
fadds
cmp
mov
mov
lock
orb
jb
and
in
in
sub
test
adc
xlat
test
cmpsb
pop
sub
roll
lea
pop
fs
pop
in
add
adc
jne
xchg
add
cld
add
test
stc
lret
lea
jb
push
and
cli
xchg
enter
pop
insl
shll
mov
dec
int3
stos
mov
jns
rcrl
mov
jno
lcall
cmpsl
lahf
scas
mov
push
repnz
gs
push
dec
ffree
xchg
into
out
movl
les
ja
jmp
std
and
xlat
ljmp
fcomps
mov
push
cmpsl
leave
pop
cmp
fmuls
pushf
imul
sub
loopne
cli
dec
rcrl
xchg
xor
sub
in
push
push
push
repnz
sub
notb
jno
pop
int3
mov
xchg
mov
and
pop
push
stos
xor
dec
push
mov
popa
cwtl
clc
into
cwtl
rolb
fcom
or
rorb
jmp
lock
xor
int3
scas
lods
movsb
sahf
repnz
imul
fstps
aad
push
aad
lcall
xchg
out
xor
mov
es
lea
sbb
test
jb
push
movsl
mov
inc
movsb
or
mov
cmc
das
enter
mov
cli
int3
popa
or
or
dec
loop
mov
out
pop
subl
sub
mov
sti
aas
les
mov
sti
cmp
jle
aaa
jae
idivb
push
lret
sub
add
sbb
mov
mov
add
in
dec
jb
pop
addr16
aam
pop
imul
jno
lahf
test
fcoml
dec
push
cwtl
je
fldcw
sbb
mov
daa
testl
scas
int3
repnz
loopne
and
xchg
push
pop
lea
xchg
test
sti
fisubl
or
add
cmpl
sbb
imul
jg
xlat
popa
in
daa
sub
jns
mov
notl
cmp
cltd
sub
mov
add
sahf
stc
mov
stos
jmp
pop
inc
inc
call
jnp
fcomps
lret
sahf
les
sub
cld
cmp
cmpsb
loope
dec
in
mov
xchg
push
fs
cmp
xchg
cmpsb
sbb
jae
mov
bound
outsl
cltd
push
jb
add
outsb
mov
push
dec
xchg
xor
xchg
push
ds
gs
mov
mov
iret
inc
repz
push
sub
sub
sarb
cmp
cmc
loopne
aad
mov
ror
xchg
rol
and
dec
in
insl
mov
add
call
lcall
and
loopne
aaa
into
pop
test
jbe
int3
sbb
repz
enter
ret
sbb
pop
ljmp
js
nop
ret
popf
mov
add
stos
adc
lahf
cld
xchg
addl
inc
dec
push
outsb
mov
mov
dec
or
std
mov
pop
dec
pop
push
data16
movsl
dec
or
pop
xchg
adc
or
mov
lahf
sub
call
aas
mov
inc
pop
stc
out
int
into
in
je
fnstsw
xchg
ret
mov
lret
pop
loope
iret
sub
add
mov
inc
stc
or
jns
int
mov
jne
in
in
int3
mov
adc
or
fcoml
add
pop
mov
xor
bound
and
cmc
insl
add
xchg
hlt
xchg
sub
xchg
mov
out
push
pop
push
sti
inc
push
push
stos
dec
cltd
iret
lock
js
xchg
xor
jg
sbb
jecxz
jo
and
loope
movb
push
lods
xchg
or
push
sub
push
dec
dec
and
imul
inc
xor
dec
lret
jecxz
and
sub
push
mov
popf
loop
or
cmc
adc
xor
push
mov
loopne
hlt
mov
mov
jg
jns
or
sbb
outsl
outsl
xchg
sbb
jmp
add
jae
arpl
cmp
sbb
xor
rcr
les
sbb
mov
mov
aad
ja
lahf
enter
andb
sub
lcall
dec
jmp
movsl
sub
inc
dec
lahf
add
clc
std
sub
fneni(8087
movq
shlb
lea
icebp
jo
fsubrp
mov
jg
out
sub
xchg
sub
fcomps
outsl
mov
sub
mov
mov
std
jg
into
sbb
push
in
add
neg
test
pop
pop
out
jp
inc
xor
push
jg
je
ds
jb
sbb
popf
mov
inc
mov
sahf
add
sti
cmc
fistpl
in
or
scas
and
add
loope,pt
sub
loopne
fmul
std
sbb
mov
xlat
jp
adc
scas
lods
push
cmp
mov
adc
movsl
bound
push
shrl
jecxz
loopne
in
mov
pop
cmp
ss
adc
stos
push
xlat
adc
popf
loope
adc
cmp
es
mov
int3
pop
aam
jg
and
inc
hlt
xlat
mov
and
ja
dec
mov
sub
or
and
pop
or
mov
jmp
notl
cmpsb
xor
push
in
cmovs
cmp
mov
mov
sub
and
ds
stos
out
into
mov
movsl
mov
data16
adc
mov
aaa
incb
inc
inc
fistps
pop
sbb
movsl
inc
push
pop
ljmp
sbb
jb
addb
push
divb
pop
out
dec
mov
inc
push
mov
fxch
les
sub
pop
fsts
jmp
mov
int3
pop
fwait
push
push
mov
mov
mov
sub
mov
inc
insl
mov
iret
es
push
aas
adc
fcoml
enter
push
enter
inc
dec
push
mov
mov
ds
xlat
gs
icebp
jecxz
inc
icebp
nop
repnz
push
mov
mov
mov
shll
roll
dec
sub
data16
cltd
mov
std
movsl
xor
sti
lcall
lock
pop
mov
mov
int3
ds
test
orl
mul
inc
push
or
and
mov
xor
lods
loopne
push
lock
lods
out
jg
fidivs
movsl
jl
movsl
lods
push
data16
mov
dec
mov
jmp
enter
pop
push
jnp
sub
movl
xor
jnp
cmpsb
jecxz
jns
dec
clc
scas
mov
push
repz
addr16
decb
jle
arpl
mov
fistps
jecxz
xchg
xchg
mov
jp
clc
jb
cwtl
push
icebp
in
pop
inc
and
mov
dec
insl
push
push
out
int3
dec
in
jmp
fwait
fwait
xchg
scas
in
push
stos
cmp
mov
dec
xor
jo
adc
xlat
or
int
cli
or
int3
push
dec
jge
fmull
pop
imul
scas
rorb
mov
jp
add
mov
imul
loop
inc
ds
jg
cmc
push
dec
pop
mov
add
mov
pushf
daa
mov
fisubl
lret
fcmovne
xchg
shrl
xchg
ja
xor
fldl
fs
xlat
cld
call
mov
xor
repz
cmp
pusha
sub
mov
add
sbbb
lret
push
or
xor
pop
cmp
xchg
daa
mov
pop
jge
lcall
jbe
mov
out
jb
sbb
push
sub
in
iret
inc
mov
setb
enter
stos
adc
in
sahf
inc
xchg
in
jne
pop
adc
sub
insl
loope
ffree
testl
xchg
push
int3
fstpl
stos
push
cs
add
out
lods
inc
idivl
mov
lahf
and
xor
sub
test
lret
out
adc
fistpl
xor
fsubl
mov
test
mov
cmc
inc
push
xor
mov
and
lods
cmp
sti
leave
mov
icebp
and
sub
imul
inc
nop
sbb
mov
or
mov
add
inc
mov
popa
mov
jecxz
movsb
xchg
mov
test
mov
xor
pop
hlt
sbb
arpl
outsb
dec
mov
out
cltd
mov
pusha
lods
mov
cmpl
insb
outsb
into
xchg
push
sbb
pop
push
add
mov
jns
nop
mov
rorl
pop
pop
test
mov
jmp
push
cmp
or
dec
cltd
imul
dec
xor
pusha
adc
xor
adc
mov
out
je
xchg
add
and
js
lret
addl
cmp
jg
adc
dec
ss
clc
shll
in
cmp
mov
popf
sbb
cltd
inc
xor
clc
and
or
stos
sbb
pop
rol
dec
mov
jp
mov
push
lods
cmp
inc
adc
lahf
std
es
fstpt
lea
adc
ja
cs
notl
cmc
int3
cmp
cmp
sub
pop
fwait
inc
pop
shl
ja
adc
stos
mov
mov
call
fisttpl
addr16
jge
cli
enter
mov
repnz
jae
xor
aad
stos
mov
push
push
push
divb
mov
sbb
mov
dec
pop
loop
mov
int
push
jb
subb
cmp
pop
mov
pop
and
lds
outsb
out
in
in
lods
push
sti
aad
addr16
mov
push
aaa
adc
js
flds
mov
ret
repnz
pop
repz
sbb
aas
mov
out
mov
pushf
add
lea
stos
mov
lods
jg
jmp
rcrl
outsl
sub
xor
cmpsl
aad
ja
lock
sub
sbb
push
ret
js
push
dec
lcall
out
arpl
cli
sbb
inc
aam
and
imul
jb
sub
dec
aas
inc
cmp
fldcw
cmc
pop
jne
out
add
lret
in
pop
xchg
jge
aad
movl
jne
xlat
pop
add
xchg
rorl
mov
dec
cmpsb
pusha
fsts
loopne
fcoms
jb
mov
inc
ds
or
fisttpl
mov
test
loopne
lods
pop
xor
js
fisubl
pop
mov
cmpsb
mov
ljmp
lcall
scas
test
int
fisubs
sti
add
sbb
pop
push
lock
call
xlat
clc
stc
repz
fs
lret
je
aad
dec
fisttps
inc
into
jo
loop
lods
xchg
inc
icebp
add
mov
mov
popa
mov
xor
sti
cmp
mov
fistpll
xlat
mov
outsb
out
int3
xchg
add
loop
mov
sub
or
fldcw
dec
mov
lcall
scas
mov
adcb
bound
jecxz
daa
cmpsb
daa
cmc
inc
dec
or
fwait
xchg
add
iret
xchg
cmp
addr16
add
push
imul
adc
aam
mov
std
xchg
sbb
mov
lods
rcrb
out
cmc
and
loopne
add
outsl
imul
test
lret
adc
jae
inc
das
repnz
gs
ja
nop
pop
test
out
es
add
jmp
sub
std
mov
mov
nop
add
inc
inc
push
sub
sub
test
shlb
scas
popf
adc
and
adc
jns
cmpsl
jnp
loope
sbb
push
je
je
movsb
ficomps
add
test
out
int3
add
mov
ljmp
adc
adc
xor
negl
or
pop
loope
mov
ja
test
inc
in
cwtl
hlt
and
sbb
sbb
cmc
inc
repnz
daa
leave
add
std
adc
int3
pop
pop
aas
test
adc
imul
xor
mov
call
xchg
cmp
mov
push
daa
scas
and
inc
jb
subb
fistpll
cmp
nop
enter
xchg
mov
cwtl
sub
dec
in
cmpsl
jl
pushf
xlat
pop
xorb
loopne
insl
and
and
call
sub
mov
pop
xor
dec
pop
ret
sub
sbb
adc
xor
outsb
xchg
inc
test
xchg
sub
xchg
dec
xchg
rcll
sbb
and
mov
int3
sub
inc
pop
mov
mov
jl
pop
lcall
cli
and
push
neg
arpl
and
dec
mov
nop
xchg
ret
fnsave
pop
mov
xlat
pop
mov
icebp
mov
and
adc
hlt
push
aam
mov
repnz
sub
in
ss
add
adc
mov
out
mov
addl
lea
imul
add
int
mull
out
pop
testb
or
adc
xor
cmovs
notb
adc
add
push
push
jne
leave
sbb
mov
popf
push
mov
shll
in
pop
xchg
xor
mov
jno
add
pop
jecxz
xchg
or
jmp
icebp
sub
jo
or
dec
xor
mov
jno,pt
call
mov
mov
aaa
sub
pop
pop
cli
dec
pop
addr16
add
add
dec
jl
cltd
rcrb
pop
cltd
movzwl
push
or
jae
pop
dec
lcall
pop
mov
stc
dec
shrb
xchg
jge
fwait
js
pop
cmpsl
jae
mov
add
push
lods
sarl
dec
pushf
fidivrs
or
jg
mov
sbb
jle
fcmovb
mov
sarl
sbbl
lcall
adc
stos
push
inc
jnp
cmpsb
popa
dec
sub
jb
add
xchg
loop
sub
dec
sub
add
push
pop
adc
inc
cmp
and
push
sbb
sub
cmp
sub
push
xchg
loop
aas
mov
pop
mov
or
cmpsl
icebp
movsl
les
enter
out
jns
loopne
es
das
imulb
inc
add
insb
stc
add
jmp
aam
adc
xor
lock
lods
idiv
sub
or
and
cmp
lods
pusha
hlt
imul
insl
cmp
loopne
movsb
pop
mov
bound
sub
pop
jb
ret
xor
scas
jo
outsl
lcall
sbb
push
sbb
inc
fstpt
imul
es
push
adc
addr16
sti
or
ja
test
xchg
imul
xchg
or
xor
bound
xchg
sbb
xchg
jp
sbb
test
ja
scas
test
mov
and
icebp
mov
insb
pop
mov
call
popf
add
das
push
dec
mov
jecxz
pushf
jnp
or
js
and
js
cld
cmc
in
nop
fildl
sub
out
in
cs
and
cs
fldcw
ficoms
mov
lret
ret
inc
jbe
andb
inc
repnz
fisttps
sbb
xchg
mov
mov
xor
adc
adc
outsl
movl
int
inc
xor
dec
in
iret
and
xchg
mov
mov
sbb
hlt
push
sbb
mov
mov
mov
cmp
rorb
sahf
mov
insb
js
repnz
pop
lods
inc
mov
aad
into
loop
fwait
dec
aaa
mov
cmc
push
fldpi
add
stc
jbe
scas
mov
inc
mov
call
inc
dec
mov
push
fdivrs
lahf
and
pop
jmp
enter
jl
pop
jns
std
sbb
gs
inc
hlt
or
movsb
jnp
jnp
subl
lods
mov
out
mov
movsb
inc
jbe
jg
sarb
inc
jo
jae
popa
xor
arpl
stos
out
stos
aad
je
xchg
mov
cltd
lcall
cmc
ds
mov
cmpl
add
pop
data16
sbb
mov
xor
shl
ficoml
pop
adc
ss
stc
ret
jno
push
call
into
bound
xchg
xor
decb
add
pop
rorb
adc
sbb
xor
add
lock
cmpsb
mov
popa
jg
insl
sub
js
lods
incb
std
mov
jmp
xlat
das
testb
and
inc
insl
es
jl
jge
test
sbb
sub
mov
mov
shl
mov
out
cli
pop
pop
push
jne
in
scas
es
ss
jg
mov
ss
adc
dec
adc
fcomps
cmp
inc
shlb
xor
or
mov
mov
sub
sub
cs
or
scas
pop
call
push
jmp
fdiv
addr16
jnp
cmp
jecxz
or
out
fs
xchg
inc
packuswb
add
push
cmp
daa
sarl
int3
daa
addr16
adc
or
into
jnp
into
or
add
pop
cwtl
and
mov
inc
add
fcomip
pop
sbb
xchg
mov
and
das
lret
dec
pop
xlat
jno
cwtl
push
mov
adc
mov
mov
arpl
aam
sbb
dec
fwait
jmp
xor
loope
xchg
fdivrs
xlat
cmp
dec
inc
aaa
cmpsl
and
mov
lret
scas
iret
mul
mov
lea
or
add
inc
ret
xchg
adc
add
in
dec
in
test
sub
inc
cmp
fiaddl
inc
stc
cmpsl
dec
pop
sbb
js
mov
sbb
sub
aam
push
jnp
jp,pn
mov
or
call
aad
andl
jo
mov
pop
fmuls
xchg
fstpl
push
mov
sub
icebp
xor
int
shl
aam
adc
xchg
or
mulb
popf
mov
enter
inc
in
and
insl
jge
ficompl
mov
pop
jge
test
or
loope
jae
dec
jnp
pusha
lret
ret
jge
xchg
pop
fstpl
aas
or
hlt
aam
fs
fs
cmp
mov
mov
in
lea
add
pop
cmp
sub
mov
movsb
inc
adc
inc
cmpsb
repz
outsb
add
lcall
and
mov
mov
pop
push
iret
add
dec
jle
pop
fists
sub
adc
in
inc
push
arpl
pop
imul
jb
dec
sub
and
push
mov
sbb
ret
fmull
push
push
sub
scas
xor
repz
clc
movsb
stos
or
imul
lret
into
loope
mov
adc
mov
faddl
inc
sbb
jnp
clc
or
and
in
imul
dec
fisubs
jecxz
jge
out
hlt
or
or
sar
lods
cld
movsl
push
inc
arpl
movsl
leave
dec
sbb
repnz
stos
xchg
xchg
sahf
clc
jne
aaa
lcall
push
hlt
shrb
jno
cli
add
out
cmpb
adc
ds
call
or
fiaddl
mov
popf
addb
xchg
push
daa
sbb
jp
cmp
push
mov
movups
fldcw
mov
cmpsb
mov
push
js
xchg
jb
repnz
lahf
inc
or
sub
fwait
dec
or
sub
xor
xchg
mov
sub
mov
vpand
scas
aaa
movsb
dec
mov
inc
cmp
les
cs
fistl
and
cmp
out
jp
xchg
rcrb
push
sarb
scas
icebp
mov
aad
push
jg
gs
repnz
jbe
movsb
out
fstl
int
xchg
fsubl
mov
sbb
and
ficomps
jns
repz
stc
adc
xor
fidivrl
leave
jnp
movsb
jle
pop
enter
adc
inc
in
shl
xor
or
inc
mov
push
arpl
les
add
cmpsb
lret
lods
ja
or
std
jecxz
int
jno
add
shrl
ds
and
sbb
lock
in
mov
movsb
inc
cmp
je
xor
inc
out
test
int3
adc
cmp
dec
cmp
xchg
sub
mov
add
xor
loopne
push
sub
cmp
inc
daa
lods
mov
mov
adc
ffree
repnz
jae
and
stos
push
inc
and
test
adc
test
mov
mov
and
dec
sbb
sahf
es
repnz
mov
cmp
xchg
inc
es
jne
pop
dec
iret
lea
aam
stos
call
sub
inc
add
lock
pusha
dec
pop
cld
jmp
dec
pop
in
cwtl
jmp
inc
lods
add
scas
imul
clc
cmp
sub
out
sub
add
mov
sbb
repnz
xchg
aas
add
jno
jg
sbb
jmp
xchg
mov
addr16
movsl
out
xor
repz
dec
sbb
adc
cmc
imul
cmp
cmp
dec
dec
cmpsb
imul
push
insb
pop
ljmp
push
sbb
xor
push
out
adc
pop
fcompl
push
iret
arpl
popa
adc
and
mov
mov
dec
cmpsb
sbb
push
dec
ret
jne
mov
fmuls
inc
mov
push
test
and
daa
push
pop
aas
stos
repnz
mov
shl
movsb
insb
sti
sub
mov
dec
rolb
mov
add
pop
or
jno
inc
jbe
mov
adc
lahf
mov
mov
inc
sub
ljmp
pop
push
mov
and
fiaddl
outsl
pusha
jle
lahf
fmull
aas
jns
into
repz
jo
cmc
push
ss
bound
rorb
mov
push
inc
sub
fsubs
lods
test
fstl
inc
call
outsb
lret
mov
andb
fisttpl
scas
arpl
push
pop
lods
jbe
arpl
xchg
in
mov
push
nopl
xchg
adc
dec
jl
cmp
dec
rorl
insb
dec
inc
pop
out
cmpsb
fs
pop
xorl
jle
stc
in
pop
lret
push
xor
mov
mov
sub
dec
add
aam
and
or
jmp
push
pusha
sbb
ljmp
je
outsl
sub
adc
dec
in
insb
sbb
sbb
enter
and
decl
push
in
adc
test
sti
test
or
fucom
aam
and
push
pop
dec
ret
push
push
aad
pop
clc
fisubrs
adc
cmc
sub
cmpsl
cmp
xchg
inc
pushf
outsb
test
sarb
sbb
in
fisubrs
push
lret
mov
ret
adc
imul
movsb
das
cmp
jp
jne
pop
xchg
enter
gs
fnstenv
or
dec
push
mov
push
pop
pop
aas
pop
lods
jo
pop
scas
mov
or
testb
xchg
test
cmp
adc
mov
lods
inc
sarl
mov
dec
mov
inc
dec
dec
jnp
pop
cld
fildll
pop
mov
or
cmpb
jne
orl
add
cld
xlat
dec
jecxz
daa
mov
repz
xchg
lods
jns
sub
jbe
and
clc
and
or
mov
lods
sbb
jns
add
inc
mov
sub
loope
jb
idivb
xor
cltd
mov
addr16
ljmp
das
popa
inc
mov
std
je
outsl
lcall
lret
je
nop
popf
add
jl
push
dec
cmp
pop
inc
movsb
dec
fs
lahf
dec
dec
mov
or
cwtl
push
adc
push
out
xor
enter
hlt
or
and
inc
in
stos
mov
jae
dec
in
sbb
mov
jg
or
out
xor
mov
in
adc
mov
jne
gs
mov
sub
pop
daa
inc
jno
jp
aaa
xor
inc
xchg
adc
mov
pop
push
sub
push
rorb
outsb
jp
sbb
daa
jnp
sti
inc
xchg
xlat
adc
xlat
iret
ret
orb
jbe
jno
mov
cwtl
or
fwait
in
jecxz
mov
mov
push
mov
mov
xor
in
ds
cld
stc
ss
pop
lods
divl
scas
jg
aaa
inc
aam
jnp
in
iret
push
std
lcall
popa
push
sbb
lret
cmp
mulb
fnstsw
xchg
pushl
pop
ja
and
out
cltd
es
mov
popf
dec
xor
mov
inc
adc
sbb
inc
daa
stos
cli
jnp
inc
add
mov
ret
dec
xor
test
pop
iret
out
inc
and
dec
cwtl
inc
bound
lods
jns
dec
sbb
jmp
fcomp
xlat
lds
outsl
push
xchg
or
fdivrl
jg
call
pop
jle
icebp
sbb
dec
dec
mov
sbb
fidivrl
out
lahf
jbe
jp
and
leave
and
mov
jmp
sbb
jl
jae
sub
fdivrs
sbb
mov
leave
iret
sub
lea
insl
fisttps
rol
mov
inc
into
insb
push
je
ss
fld1
and
inc
imul
sub
add
imul
push
xchg
jmp
leave
or
push
fistl
lcall
in
mov
and
pop
mov
loope
add
push
and
ret
adc
sbb
movb
es
inc
mov
in
in
dec
or
leave
sub
test
push
scas
out
jmp
mov
dec
das
xor
xor
in
int3
andb
xor
ds
shlb
ret
adc
adc
mov
cmc
xchg
cmp
push
pushf
fdiv
out
dec
aam
push
hlt
mov
in
pop
mov
xchg
cld
xlat
adc
inc
scas
test
mov
inc
pusha
nop
fldenv
mov
jle
dec
jecxz
in
jne
stos
sahf
add
scas
mov
cmpsl
push
and
pop
mov
filds
lcall
sbb
les
mov
cmp
jae
push
cld
adc
push
repnz
inc
sub
jo
in
bound
sub
enter
mov
add
sbb
out
sub
push
dec
pop
filds
pop
cmp
jmp
mov
adc
push
and
aam
push
and
adc
mov
in
repnz
inc
push
jae
mov
stos
cwtl
out
cmpsl
das
push
in
and
adc
add
popl
sub
stos
loop
pop
movsl
mov
push
sub
mov
pop
pop
hlt
out
dec
cmp
push
inc
cltd
and
loop
outsb
pop
xor
sub
mov
inc
push
fdivrl
sbb
clc
cmp
ja
fdivrs
push
stos
inc
and
mov
sbb
adc
jno
sbb
add
and
out
std
jno
or
and
xor
imul
roll
push
outsl
or
lcall
pop
add
mov
fcmovne
pop
stos
sbb
mov
sti
popf
add
jge
or
mov
ror
fcmove
or
xchg
jge
sub
xor
scas
mov
inc
or
cwtl
test
pop
sti
call
aam
sbbl
or
push
popa
cwtl
movsb
sahf
xlat
ficoml
sub
mov
pop
out
pushf
pusha
mov
cs
iret
ret
lret
dec
out
push
sbb
xchg
in
xor
fdivrl
int3
and
dec
mov
adc
hlt
fildll
pop
nop
push
mov
jl
xchg
jno
gs
imul
pop
mov
loopne
mov
lods
cmp
adcl
movsl
lock
repz
out
mov
and
adc
mov
ljmp
dec
sahf
and
js
pushf
jae
push
scas
adc
sub
fprem1
xor
outsb
push
xchg
popf
mov
bnd
push
dec
shl
and
fbld
popa
movsl
push
in
les
inc
cmp
outsl
into
pushf
sbb
dec
and
mov
pusha
push
xchg
stos
jge
dec
mov
jo
iret
mov
mov
aad
stc
mov
jmp
sub
je
mov
scas
inc
pop
push
add
mov
and
adc
mov
insb
jmp
and
xchg
shll
push
add
jnp
js
xor
test
xor
outsl
add
loop
mov
stos
sub
mov
mov
sub
in
push
and
push
mov
cwtl
pop
popf
fsubl
inc
addr16
xchg
ljmp
xchg
subb
ja
lds
cmp
inc
xchg
lds
popf
push
push
jnp
mov
sti
loop
sti
jg
sbb
add
lods
sub
loope
push
stos
shl
arpl
fwait
mov
inc
movsb
cltd
mov
sbb
mov
pop
cmc
sbb
jle
cmp
inc
pop
les
pusha
aam
nop
sub
adc
test
push
mov
daa
cmpsl
xlat
in
jp
adc
orl
stc
mov
push
lds
ret
sbb
cmc
fcoml
pop
cmp
jo
inc
mov
in
sbb
fcmovbe
lds
ja
shrb
jo
or
jmp
push
popa
sahf
and
or
sbb
add
cli
jae
and
into
std
xor
addl
scas
arpl
mov
fdivp
subl
jo
in
mov
popf
xor
sbb
fucomip
mov
and
stos
stc
imul
shll
mov
es
in
push
arpl
and
imul
fistpll
jecxz,pn
push
or
mov
out
inc
push
out
mov
enter
mov
fsubrs
push
add
test
dec
xchg
adc
and
dec
mov
jbe
es
or
lahf
sub
fsubp
scas
outsl
sbb
and
loop
mov
push
and
daa
aas
inc
xchg
xchg
xchg
pop
out
push
cmc
add
adc
aam
loope
adc
icebp
stc
dec
pop
inc
arpl
popa
sub
faddl
andb
aas
inc
fcom
pop
shll
insb
and
arpl
xchg
les
mov
xchg
mov
bound
dec
in
add
sahf
mov
clc
inc
test
aaa
rcll
loop
dec
hlt
shlb
jmp
stos
cmpsl
leave
clc
ja
bound
sbb
adc
insl
dec
xlat
mov
xlat
je
fnsave
xchg
push
add
cwtl
push
stc
mov
cmp
pop
cmpsb
mul
pop
inc
pop
mov
divl
sbb
sbb
imul
rcll
sub
or
aaa
mov
xchg
inc
push
dec
sub
outsb
sti
dec
icebp
arpl
in
outsb
fwait
jne
mov
std
jg
inc
shrb
xchg
out
fadds
lcall
xchg
clc
jb
or
andb
gs
lock
aad
or
push
stos
cmovnp
ljmp
arpl
jg
or
mov
xor
push
imul
insb
aad
or
dec
mov
xchg
jmp
cld
mov
insb
in
outsl
call
loope
inc
cmp
cmp
adc
icebp
xor
or
dec
sbb
and
cmp
mov
push
cmpsl
pop
outsl
mov
add
popa
push
dec
xlat
es
cmp
cmp
inc
test
xchg
not
fstl
xchg
pop
fs
adc
xor
or
jg
scas
test
or
mov
mov
std
jnp
mov
and
cmp
pop
cwtl
cmp
andb
sbb
pop
xor
add
pop
aaa
sbb
dec
push
arpl
fld1
icebp
pop
clc
hlt
dec
sti
xor
cmp
loop
les
mov
pop
lret
dec
imul
in
push
xchg
cmp
fmul
pop
xor
dec
sarl
xchg
sbb
jo
jno
mov
mov
adc
and
decb
xchg
jl
sub
into
push
inc
inc
xchg
out
mov
mov
faddp
and
or
sub
mov
in
push
and
mov
out
mov
sysret
adc
iret
and
and
adc
add
fmuls
jge
dec
icebp
ret
mov
or
scas
add
mov
loope
cmpsl
jae
aam
dec
ljmp
or
mov
pop
jo
pop
xchg
add
jb
jnp
cmp
nop
icebp
mov
sahf
lret
enter
cmp
mov
mov
fsubs
fwait
scas
push
repz
out
mov
push
in
add
icebp
fstpl
mov
sti
out
mov
ffreep
in
sbb
movsl
pop
int
lea
and
push
sbb
loop
cwtl
and
push
add
cs
pop
inc
sbb
rorb
cwtl
push
mov
stos
xchg
pop
lret
or
jo
inc
cmpsl
lds
cmp
add
stos
adc
ret
rclb
pushf
cwtl
mov
jo
mov
sahf
mov
and
push
ficomps
ss
mov
add
jbe
dec
fstpt
out
cmp
jp
mov
int3
mov
movsl
ret
xchg
adc
stos
pop
cmp
jne
rorb
loopne
ljmp
adc
sti
in
sarb
fcomip
mov
aas
xchg
out
pushf
fcoms
add
enter
cmp
stos
int3
out
mov
mov
lds
add
add
sub
xchg
mov
or
mov
call
pop
cmp
or
daa
lods
lcall
adcb
lahf
or
lcall
adcb
jle,pt
sbb
jne
inc
or
mov
or
iret
lret
ljmp
mov
gs
clc
jp
aam
fldlg2
nop
lret
sub
loope
and
cwtl
or
enter
lods
adc
push
stos
or
pop
ss
sub
mov
push
fprem
pop
stos
jns
or
xor
push
sub
jae
icebp
hlt
insb
adc
orl
or
out
mov
dec
sub
xchg
add
push
cmp
lcall
icebp
xchg
sti
cmp
cmc
mov
movsl
adc
fsubrl
push
or
mov
jg
and
mull
pop
loop
insl
mov
dec
std
leave
adc
aaa
jae
sbb
sub
pop
cmp
mov
dec
inc
aaa
push
in
sub
inc
ljmp
popa
ffreep
rcrb
iret
daa
test
lahf
lahf
mov
inc
mov
mov
pop
fdivrl
ret
pop
sbb
dec
iret
dec
jecxz
adc
mov
idivb
fcoms
jno
pop
and
in
shr
mull
stos
lret
std
sahf
jge
stos
add
or
xchg
mov
cmp
cmp
push
rcrb
dec
sti
adc
loop
mov
or
ljmp
shr
mov
insl
sahf
dec
mov
bound
pop
in
shr
rcr
test
pop
inc
mov
jno
or
inc
mov
in
sub
push
cmp
add
inc
and
push
lock
cli
das
ret
dec
notb
and
push
jns
cmp
push
push
and
gs
bound
aam
fildl
repnz
jno
lahf
test
imul
je
cwtl
orl
xchg
cmpsb
sbb
mov
loope
cmp
bound
daa
xor
popa
arpl
pop
mov
mov
mov
pusha
add
sbb
xchg
les
rolb
dec
scas
dec
pop
lcall
mov
aaa
sbbb
lcall
xchg
daa
leave
and
aam
rorb
lea
xchg
les
pop
sarb
inc
pop
cmpsl
jmp
inc
and
dec
ret
xchg
mov
cmpsb
sub
iret
pop
or
xor
popf
mov
adcl
xor
cmp
or
cmpsl
shrb
or
daa
cmp
cs
mov
cmp
in
cmp
mov
adc
lock
mov
pop
stos
mov
pop
jecxz
in
jl
adc
aad
sbb
in
xor
mov
cmpsb
cmp
inc
mov
pusha
fisubrl
push
lods
cmp
sub
jge
test
jnp
jae
test
push
in
out
pop
cwtl
test
sub
lcall
mov
or
xchg
int
pop
aaa
mov
add
sbb
mov
xor
dec
and
cmp
cmpsl
xlat
push
xchg
add
call
in
fdivrl
cmpl
scas
sbb
push
inc
mov
adc
push
push
fcmovnbe
outsl
cmpsb
jb
mov
imul
call
ret
out
fidivs
imul
pop
std
pop
sbb
div
adc
aaa
jmp
int
test
data16
cmp
ret
bound
jmp
adc
enter
xorb
and
ds
add
mov
xchg
push
xor
gs
outsl
and
xchg
pop
fildl
les
test
pop
and
mov
scas
xor
xor
stos
cmp
and
movsb
int3
adc
fwait
lret
loop
adc
xchg
or
cmp
mov
push
call
pop
mov
loopne
in
adc
add
enter
jb
out
lds
dec
jg
and
shlb
aas
stos
andb
mov
inc
sbb
mov
push
cli
xor
cmp
shr
test
and
lods
bnd
mov
out
dec
insb
xor
call
cmp
xchg
push
into
clc
pop
cmp
test
fbld
rcrl
and
push
outsb
aam
lret
and
imul
push
leave
pop
stos
sbb
pushf
popa
imul
ds
xchg
xchg
daa
mov
out
mov
jo
push
pop
sub
or
dec
sbb
lods
jecxz
xor
add
mov
mov
jl
icebp
and
aaa
mov
pop
icebp
xchg
rcrl
lods
fldcw
jmp
jp
or
inc
shll
jae
and
push
jno
jecxz
push
mov
roll
test
add
xchg
push
dec
stos
fisubl
mov
push
aas
ds
add
stos
mov
and
fcmovnbe
xor
add
movl
rcrl
or
iret
jae
mov
cmc
xor
xor
nop
lret
xor
cmp
subb
fwait
jae
je
je
sbb
pop
hlt
repz
mov
xchg
shrl
mov
inc
or
jge
jnp
lea
jo
out
repz
bound
mov
jg
dec
inc
fistpll
and
push
sbb
push
or
outsb
dec
mov
xor
lret
and
sarb
jne
divb
jns
mov
pop
adc
mov
dec
not
jb
mov
push
jo
std
sub
fisttpll
jae
cmp
cltd
pop
mov
xor
ret
adc
jbe
mov
xchg
shll
push
repz
push
negb
inc
dec
cmp
add
pop
xchg
pop
push
mov
iret
lods
repz
fidivrl
mov
mov
cmp
sub
mov
aas
pop
push
outsl
int
fwait
repnz
loopne
mov
gs
lock
sbb
pop
jb
cmc
cmp
sbb
divb
xor
jnp
inc
sub
jo
sbb
and
mov
loop
jecxz
cmp
pop
or
sti
insl
ss
test
jae
nop
dec
xchg
fistps
mov
or
insb
push
call
and
fildll
push
push
inc
or
pop
push
movsb
fildl
sbb
or
pusha
xchg
inc
push
es
pop
cld
or
jecxz
fidivs
mov
jnp
jne
cmp
dec
pop
repnz
loopne
xchg
outsl
jg
sub
sbb
movsb
mov
push
mov
test
sub
mov
add
pop
loop
mov
ds
notb
lahf
pushf
orb
test
mov
fiadds
dec
bound
mov
inc
orb
ret
loopne
cmp
dec
out
call
xor
dec
mov
mov
rorl
loop
mov
inc
cmp
inc
mov
fisubrl
add
xor
mov
aad
cmp
test
mov
stos
inc
push
ret
std
gs
pop
ljmp
push
lock
cmp
add
cltd
cmp
pop
dec
sub
jmp
dec
mov
jl
xchg
add
lds
mov
or
pop
xchg
lods
pop
jb
lea
mov
orb
fmull
sbb
and
mov
inc
pop
dec
push
dec
adc
int3
test
out
pop
hlt
out
scas
cmp
pop
lods
push
dec
dec
ljmp
test
mull
data16
jle
lret
je
sbb
rolb
cmp
leave
shlb
inc
sub
lea
test
fisubrl
dec
jg
fwait
and
or
mov
push
jb
xchg
call
lret
mov
push
ret
xor
loope
hlt
dec
push
loop
sub
or
lret
arpl
sub
xchg
cmpsb
xorl
jmp
push
mov
jle
lahf
out
adc
add
in
cmpsb
sub
repnz
pusha
push
add
inc
add
fcoms
add
int3
ds
insl
lahf
inc
cmpsb
mov
sub
add
inc
mov
fisubs
fs
inc
lods
sbbb
pop
pushf
push
xchg
out
adc
jno
movsl
jge
xchg
cs
std
mov
jge
push
push
xor
mov
inc
jle
dec
add
stos
je
and
sub
jl
add
pop
jne
cmp
dec
push
xchg
in
sub
out
cld
orl
sbb
cltd
jmp
fsubl
dec
dec
push
scas
cmp
pop
rorb
push
pop
cld
add
sbb
mov
fdivrp
sub
dec
mov
xchg
mov
lahf
pop
inc
cmpsb
iret
call
dec
inc
jle
shll
mov
jp
or
aad
test
cwtl
ret
test
mov
inc
inc
push
add
mov
sbbb
insb
pop
jae
cmc
fistps
popa
adcb
push
popa
jle
pop
ret
mov
sti
pop
xlat
aad
xorl
test
in
stos
cmpsb
andb
sub
ret
out
or
popf
jo
sbbl
aad
xor
adc
or
jle
aad
into
push
out
scas
add
push
mov
es
movsl
jbe
mov
shrb
orb
inc
add
mov
xchg
lcall
mov
jae
and
movsb
xchg
pusha
inc
ds
jmp
mov
dec
xchg
fadds
int3
inc
aaa
sbb
pusha
xchg
mov
jle
pushf
es
lds
cmpsl
scas
mov
stc
popf
dec
pushf
mov
out
rcl
lcall
bnd
sub
out
dec
dec
mov
mov
popf
xchg
sbb
sub
lds
xchg
aaa
or
fwait
pusha
insb
jb
cmp
mov
adc
lds
inc
xor
push
push
cmpsb
xchg
iret
xor
divl
push
insb
dec
sbb
pop
inc
lods
xchg
mov
push
xchg
jg
add
stos
sub
inc
and
imul
mov
jo
mov
gs
cwtl
and
out
or
loope
dec
fisttpll
dec
mov
mov
test
fldl
jae
test
pop
dec
pop
pop
xchg
pop
inc
mov
push
js
mov
xchg
int3
or
in
sahf
dec
into
insb
in
psubusw
pop
js
movsl
and
incb
ja
jb
sub
pop
mov
sbb
add
movsl
testl
push
sub
mov
jns
push
jns
push
jg
or
loope
xchg
aaa
out
push
call
mov
fldl
ds
outsb
dec
loopne
test
lock
mov
jbe
test
jmp
xor
data16
mov
arpl
stos
cltd
and
cmpsl
lods
insl
arpl
mov
sahf
adc
or
jbe
jb
aad
mov
and
jg
xor
mov
xchg
int3
sbb
mov
sahf
clc
scas
addl
cmp
mov
orb
mov
cmpsl
rcl
and
divb
and
daa
mov
iret
mov
jbe
push
sub
xor
out
push
mov
fldcw
enter
aad
into
xor
xchg
mov
repnz
push
inc
jo
dec
pop
stos
out
mov
mov
or
pop
inc
fisttps
mov
push
cmp
pop
pop
jbe
adc
lret
pop
and
fsts
jo
sub
push
scas
repnz
jns
jnp
call
lret
sbb
add
cmp
inc
mulb
push
xchg
xchg
dec
add
iret
xchg
je
mov
mov
push
xor
insl
xchg
sub
into
outsb
dec
rorl
mov
and
adc
es
cli
cs
sbb
ret
mov
ss
es
in
cld
jge
ja
lret
adc
jne
push
movsl
dec
push
in
fsubs
mull
adc
cli
clc
ret
fmull
xlat
xchg
in
add
fwait
sti
cmc
xchg
or
dec
mulb
inc
mov
dec
rcll
fsts
addr16
or
shrl
xchg
pop
jecxz
sub
ret
sbb
sbb
mov
aad
sti
jo
sti
jp
push
cmp
xchg
pushf
xchg
fists
xchg
xor
cli
aas
inc
jno
dec
jb
jg
and
xchg
stc
pop
in
pop
dec
cmc
xor
push
dec
idivl
pop
out
cs
scas
mov
sbb
add
inc
sbb
fs
in
mov
cmp
repz
lcall
sbb
mov
xchg
sbb
pop
aaa
je
cmc
cmpl
mov
popa
shr
dec
sub
mov
int
pop
xchg
ficoml
adc
xchg
xchg
xchg
sbb
pop
add
cltd
das
insb
xor
rclb
inc
dec
xlat
push
sbb
clc
lret
loop
dec
test
lds
mov
ret
out
ucomiss
jmp
adc
add
pop
sub
arpl
lock
xchg
pop
lret
cmp
or
fcomps
das
push
in
mov
pop
add
decb
pop
test
fimull
rcrl
inc
out
daa
push
push
hlt
push
es
loope
push
sub
jne
mov
mov
push
cmc
or
mov
mov
fldt
repz
push
loope
sbb
nop
loop
mov
shlb
push
cwtl
pop
add
loope
andl
sbb
inc
xchg
js
add
mov
cltd
ret
mov
rorb
incl
push
adcb
je
adc
pop
cmp
xchg
xlat
pop
mov
cmp
stc
xchg
sbb
jb
mov
gs
push
xor
sbb
aad
pop
mov
add
jle
xor
jp
inc
lods
cli
cwtl
cli
test
loopne
das
xlat
jo
push
ret
sub
sti
stc
mov
roll
ja
ret
loop
mov
cltd
aad
lret
mov
inc
dec
pushl
pop
cmp
mov
rorb
or
mov
arpl
pop
fimull
int3
mov
lock
jge
loopne
mov
test
mov
cwtl
stos
mov
mov
inc
inc
pop
cmp
mulb
fstpt
pop
sbbb
rcrl
je
mov
je
pop
pop
and
xchg
cmp
push
imul
pop
jne
mov
ljmp
popf
xlat
dec
push
pushf
inc
js
jge
and
pushf
or
inc
push
or
roll
jle
or
fbstp
push
push
cwtl
rorb
aas
dec
sti
push
andl
shlb
scas
jne
pop
gs
out
cmp
pop
loope
pop
mov
lods
stos
pop
test
fdivrs
sub
mov
jl
addr16
loope
mov
xchg
jne
imul
add
ja
add
jne
lds
add
sar
sbb
lret
add
pusha
or
lods
lds
js
xchg
jp
jg
aad
addr16
mov
xchg
lock
lret
test
sub
iret
mov
cmpsb
gs
stos
mov
push
aas
arpl
loope
dec
hlt
jbe
pop
in
test
fadd
test
inc
outsb
repnz
inc
cmpsb
stos
jbe
out
andb
test
out
xchg
pop
sub
sti
sbb
lret
scas
xchg
inc
data16
xorl
out
mov
pop
adc
dec
pop
sub
pop
jo
pop
out
js
cmp
xchg
inc
imul
jg
je
pop
pop
inc
gs
pop
rolb
movsl
dec
out
sbb
and
js
stc
dec
pop
inc
add
aas
mov
cmp
mov
lret
out
xor
jae
cmp
mov
jmp
and
xchg
ror
lret
popa
hlt
sarl
or
dec
lods
sbb
or
mov
lods
orb
mov
roll
fidivl
enter
fwait
into
enter
xor
push
cltd
aas
es
xchg
shll
mov
fidivl
pushf
push
pop
dec
addr16
dec
sbb
insl
pop
in
mov
hlt
out
jmp
mov
clc
lea
xchg
add
pusha
jmp
push
lock
add
and
aad
loopne
loope
and
jmp
sub
nop
sub
ss
mov
cmp
shll
mov
lldt
xchg
fwait
hlt
mov
xor
push
testb
jmp
xlat
inc
mov
das
inc
push
mov
mov
data16
jae
ljmp
mov
push
mov
dec
loopne
and
mov
xchg
dec
mov
test
xor
popa
mov
add
out
and
cmp
add
mov
push
pop
sub
push
cs
rcrb
dec
push
insl
inc
mov
and
cmpsb
fisubrs
imul
clc
pop
fcomps
imul
ret
cltd
stos
pop
xor
test
sarl
outsb
and
push
inc
cmp
pop
out
dec
cmp
dec
je
mov
stos
mov
pop
lret
push
push
rorl
adc
arpl
pusha
xchg
add
cmpsb
stos
mov
outsl
sti
imul
sub
fldl
inc
xchg
inc
out
mov
adc
fs
aaa
pop
mov
xlat
mov
pushf
mov
mov
fidivl
mov
xchg
pop
pop
xor
ja
sub
pop
ljmp
mov
mov
lock
lea
es
add
and
jae
mov
xchg
push
mov
lahf
sbbl
pop
xchg
mov
fs
subb
repnz
enter
ja
add
iret
mov
mov
pusha
enter
sarl
jbe
out
push
rcll
stc
inc
and
js
pop
sbb
imul
daa
pop
ss
or
pop
dec
insb
in
pop
add
adc
ja
movsb
stc
or
insl
lods
xchg
inc
lret
cmp
sub
std
jl
movsb
xchg
mov
sub
cwtd
or
jbe
hlt
nop
int3
sbb
cmpsb
mov
and
add
loop
rcrb
fists
leave
call
loop
in
leave
addr16
mov
leave
mov
push
dec
js
shll
dec
inc
sahf
mov
or
lahf
mov
dec
or
lcall
js
in
sub
add
imul
jae
out
push
add
out
lods
call
mov
and
ljmp
xor
fcmovb
and
and
enter
fistl
stc
push
pop
popf
dec
jae
repz
icebp
xor
ja
les
lret
push
pop
mov
jne
and
hlt
adc
or
insl
mov
scas
pop
mov
pop
pop
lds
push
lahf
int3
or
push
lods
orl
lods
jmp
mov
cmpsb
lahf
movsl
push
and
xchg
aad
fnsave
dec
add
mov
add
popa
fisubs
dec
ret
adc
push
mov
lret
xor
ror
icebp
ss
mov
sti
lret
in
xor
pushf
push
push
outsb
mov
pop
inc
adc
xchg
cmp
sar
stc
jecxz
and
bound
mov
mov
cs
arpl
or
out
sbb
dec
add
stos
push
mov
aam
rol
xor
hlt
sub
mov
jno
loop
jg
mov
ja
jne
stos
lds
inc
xor
in
mov
out
lods
cmpsl
fisttps
mov
pushf
push
xor
jo
mov
add
ljmp
xchg
in
or
mov
outsl
dec
xor
inc
aas
jg
pop
lahf
popa
dec
cmpsl
gs
sub
fidivl
popf
out
jo
mov
sti
mov
xchg
sub
push
stc
xchg
fwait
in
pop
lea
fsub
xlat
pop
adc
push
lods
xchg
ret
add
mov
sbb
inc
ljmp
jg
test
into
push
jl
sub
mov
imul
sub
lds
popa
mov
jo
push
mov
outsl
xchg
push
pop
pop
inc
pop
scas
js
fs
iret
push
nop
hlt
push
out
pop
lret
outsb
mov
push
cltd
mov
dec
cmp
adc
test
adc
out
or
cld
ljmp
aaa
lret
loope
jno
sub
xor
pop
sti
lahf
push
loopne
jmp
out
mov
out
xchg
mov
push
out
xor
dec
jno
jg
addl
cmp
frstor
cmp
sti
push
addb
or
adc
rcl
ljmp
xorb
test
aam
shlb
jbe
stc
mov
push
subl
inc
pop
in
mov
jle
and
inc
and
mov
mov
mov
inc
das
popa
fs
fwait
mov
dec
inc
stc
xor
xchg
out
sbbb
in
push
jae
mov
mov
lea
outsb
enter
cmovne
pop
sbbb
xor
das
testb
and
rcl
sub
push
adc
int
outsb
cmpsl
gs
ret
stos
push
add
leave
cwtl
out
xchg
cmp
or
xchg
xor
sbb
inc
cmp
mov
sahf
cmp
mov
pop
cmp
repz
cli
lahf
icebp
add
ret
insl
pop
lods
addl
jg
pop
jg
mov
xlat
loopne
insb
mov
pminsw
imul
sub
pop
lods
xchg
push
xor
ror
pop
stos
adc
dec
fmul
push
push
and
sbb
test
stc
movsl
jbe
leave
cmp
mov
pop
stc
xchg
cmp
fcoml
scas
daa
fcoml
js
sbb
es
cmp
fisttps
xchg
lret
loopne
inc
hlt
sarb
icebp
push
inc
adc
mov
cmc
xorw
cld
inc
fists
pop
mov
scas
jo
js
fcoml
push
sub
mov
inc
scas
dec
in
cmpsl
dec
mov
rorb
fdivp
popa
fdivrp
icebp
lcall
into
rcr
gs
test
adc
sahf
fsubs
pop
les
sub
jne
lcall
mov
or
cmp
jl
push
add
mov
stc
sbb
pop
sbb
and
dec
inc
repnz
mov
lock
fwait
or
cld
fisubrs
jl
cmc
xchg
into
mov
xor
push
adc
call
lock
xchg
add
xchg
adc
cmp
cld
sub
insb
fcomps
cltd
inc
scas
mov
lock
aam
dec
shrb
push
insl
je
mov
xchg
call
iret
push
mov
mov
and
jecxz
push
call
and
cmpsb
je
xlat
mov
rcll
in
aas
sub
xchg
lret
inc
fs
or
jg
dec
inc
ret
dec
mov
jns
nop
add
push
push
mov
jle
cmpb
sahf
pusha
xor
add
shlb
cmpsl
add
loope
mov
cli
mov
test
mov
orl
pop
ss
xchg
data16
and
cli
mov
adc
lock
test
inc
jae
movsl
lds
int3
dec
aam
lds
inc
push
or
xchg
hlt
mov
mov
adc
int3
adcb
dec
clc
repz
cltd
pop
iret
dec
sahf
jg
sbb
js
leave
decb
cmpsl
in
pop
aaa
sbb
add
xlat
lret
xchg
mov
dec
ror
pop
test
mul
in
mov
cmc
rcl
cmpsb
aad
lahf
xor
sub
fbld
xor
mov
jbe
xchg
inc
jecxz
je
leave
sti
sbb
andb
fistpll
imul
gs
xor
sub
pop
adc
xor
repnz
pusha
jo
lods
or
mov
pop
sti
add
adc
dec
andb
sbb
jno,pt
setne
jg
fidivrs
sub
mov
lcall
and
mov
cmpsb
shll
inc
ret
aas
pop
inc
adc
lods
movsl
inc
aam
xchg
adc
jmp
in
mov
addr16
nop
jo
sbbb
popf
adc
rcl
or
cmp
imul
stc
push
inc
fistl
mov
dec
dec
xchg
jmp
imul
or
popf
push
jmp
dec
stos
and
xlat
ret
pop
scas
mov
mov
mov
xchg
xchg
fadds
cmp
enter
adc
les
aad
iret
pop
scas
lahf
lahf
mov
scas
xorl
adc
dec
shrb
xor
xchg
imulb
cmpsl
hlt
sbb
dec
lds
jnp
jnp
jl
sub
lock
mov
push
mov
arpl
ss
clc
mov
mov
mov
sbb
push
push
mov
add
mov
in
sbb
adcb
mov
test
int
rcrb
sbb
mov
pop
ret
cmp
xchg
and
imul
rcrl
or
inc
adc
push
mov
arpl
mov
cmpsl
test
mov
inc
shrl
mov
mov
in
loop
pop
dec
lock
jl
xchg
xlat
mov
pushf
push
xor
cpuid
outsl
xchg
dec
adc
inc
lcall
sbb
sbb
mov
ljmp
mov
repz
divl
mov
pop
pop
imul
in
out
cmp
mov
stos
cld
mov
aam
prefetch
push
add
xor
das
jae
push
jp
and
mov
push
fldt
pop
mov
pop
test
negl
sbb
xchg
cltd
fsubr
mov
xor
xor
push
inc
in
push
push
jns
pop
leave
in
nop
icebp
mov
mov
rolb
xchg
sbb
jg
xchg
ficoml
les
cmc
mov
inc
xor
sub
and
int
scas
in
cmp
cmpsl
shll
or
std
add
jl
cmp
in
addr16
jmp
mov
imul
cmpsl
sbb
mov
mov
mov
pop
mov
fbstp
jecxz
pop
stc
add
pop
orb
out
mov
test
fs
mov
push
outsl
add
jnp
dec
ret
and
fwait
xchg
fdivrs
xchg
iret
sbb
pop
pop
xchg
in
imul
cltd
lret
or
mov
out
adc
push
push
nop
mov
xchg
dec
sub
dec
cmp
adc
bnd
nop
lock
pop
and
sbb
adc
bound
jae
xor
sub
sahf
int
jo
in
rolb
loop
push
mov
push
mov
mov
int3
adc
enter
outsb
popf
daa
push
mov
adc
and
fimull
sbbl
push
inc
ret
ret
mov
sbb
popf
push
ss
mov
sbb
or
or
mov
and
enter
xchg
xor
sahf
mov
js
movl
mov
test
inc
push
push
or
inc
call
stos
xor
cmc
adc
mov
cli
pop
ret
fdivrp
cmpsl
pop
psubusw
lret
fistpl
popf
test
mov
pop
iret
imul
push
loopne
je
lds
pop
das
lcall
sub
mov
out
pop
test
inc
pop
inc
inc
es
ret
add
les
shrb
ret
mov
loope
add
jno
icebp
pop
add
cmp
mov
push
cmpsl
loope
or
lahf
aas
shrl
jle
cmp
inc
sub
pop
mov
pop
int3
or
test
aas
stc
bound
sub
mov
insb
cltd
dec
rcl
jmp
dec
mov
int3
pop
lahf
inc
sti
xlat
push
sub
inc
sbb
repz
pushf
push
jno
lahf
cmpb
xor
xor
in
pop
and
bound
outsb
xor
pop
outsl
push
movsl
repnz
orl
dec
pop
cmp
in
cli
popf
cmpsl
pop
mov
rorl
dec
in
ret
cld
andl
pop
hlt
jl
push
push
pusha
or
sbb
push
lret
jecxz
shrl
and
in
xchg
xchg
and
shl
outsl
mov
mull
ret
ret
mov
ud1
es
push
mov
fdivrs
lret
ret
jmp
test
mov
xor
cmp
dec
cwtl
daa
pop
call
out
out
adc
mov
xchg
ss
jae
mov
pop
stc
mov
icebp
leave
psubsb
sbb
inc
pop
insl
xor
xor
xor
pop
sbb
ret
mov
push
add
mov
mov
pop
shrl
test
jmp
cld
pop
into
and
add
pop
jg
xchg
jnp
into
fimull
rcrb
adc
pop
fildll
cmp
insl
jle
jl
ljmp
xchg
out
mov
lahf
jl
int3
xchg
loop
insb
loop
lds
stos
jle
xchg
mov
test
or
das
jg
xor
aas
stc
lea
push
cmc
jnp
enter
hlt
xor
flds
pop
dec
jo
fs
jecxz
mov
jg
test
outsb
mov
loopne
jge
pop
mov
xor
sbb
push
cmp
into
mov
pop
jg
lods
jne
in
mov
or
orb
jns
push
jge
adc
pop
cmp
xlat
call
sub
out
lahf
sbb
fbld
sbb
ret
xchg
sar
sub
fcos
jl
mov
enter
cld
cmpsb
dec
push
xchg
mov
sub
popf
adc
add
adc
jns
stos
sub
icebp
test
sbb
je
popf
sbb
int
pop
and
arpl
in
notl
add
mov
repnz
and
push
in
pop
stos
fld
mov
pcmpgtb
rorl
adc
negb
or
popf
shld
fcompl
mov
xlat
mov
in
push
movsb
mov
fidivl
pop
mov
out
loop
sbb
dec
mov
fucomp
es
push
and
add
neg
mov
int3
sub
adc
xchg
test
sbb
mov
iret
xor
push
in
into
mov
mov
inc
mov
dec
adc
outsl
idivb
lods
add
jbe
insl
shrl
push
add
shll
ss
cmc
and
sbbl
movsl
popf
jle
jle
lcall
xchg
push
mov
sub
int
sub
sbb
xorb
sbb
das
xchg
mov
mov
and
rclb
sbb
cltd
outsl
mov
movsl
cmp
jns
les
in
scas
ret
dec
xor
pop
jne
inc
xchg
or
pop
add
in
or
xchg
insb
out
in
push
xor
fisubs
jg
sbb
lods
stos
int
cmc
int3
sub
and
imul
nop
push
push
lods
icebp
dec
push
fwait
jne
bound
jae
lea
ljmp
cmp
pop
or
call
not
push
mov
or
add
out
sub
mov
in
mov
dec
xchg
sbb
cmpsw
cmpsb
mov
negl
sahf
xchg
or
fistpll
fwait
movsl
cmpsl
mov
pop
sahf
stc
or
mov
mov
lods
xor
scas
js
mov
fwait
inc
insb
or
or
xor
stos
dec
jmp
inc
jecxz
aas
fmull
call
push
lahf
add
cmp
les
mov
mov
mov
jmp
in
cs
add
aam
insb
aaa
lea
push
rcr
addb
dec
pop
cmpsb
sbb
dec
sub
adc
scas
inc
inc
xor
dec
es
pusha
in
xchg
movsb
inc
shl
inc
das
dec
inc
cmp
movsb
out
cltd
mov
xor
cmpsl
jb
sbb
lods
mov
leave
insl
lret
sbb
loop
ret
push
cli
sahf
or
dec
mov
push
lahf
call
and
scas
push
popf
mov
lea
test
or
pop
adc
jbe
in
add
in
mov
dec
sub
sub
cwtl
mov
std
inc
iret
in
leave
ds
fisubs
loope
ret
sub
adc
mov
sbb
pop
outsl
aad
pop
mov
sbb
push
inc
stos
dec
aas
cwtl
jb
iret
jl
pop
lret
cmp
in
push
inc
ret
scas
dec
jo
mov
out
add
in
xor
aad
ret
dec
jno
and
jne
je
mov
push
sub
mov
dec
mov
out
mov
adc
sti
add
bound
nop
jecxz
xor
mov
cltd
mov
push
push
sbb
lahf
push
sub
xor
sarb
pop
ss
fcompl
gs
xchg
sbb
mov
ljmp
add
xlat
sub
lcall
or
mull
iret
add
testb
test
mov
iret
cmc
popa
mov
mov
jle
push
or
popf
fstps
sbb
int
cmpsl
fiadds
inc
xlat
adc
ljmp
in
je
add
cli
imul
xor
cs
sub
cmp
push
fidivrs
lock
or
loopne
repz
push
or
mov
xchg
mov
jno
ret
pop
mov
repnz
xor
sub
jmp
inc
outsb
xor
add
dec
mov
les
and
mov
jge
inc
aas
push
or
sub
adc
gs
ret
fcoms
lcall
inc
sub
ret
mov
xor
mov
mov
outsl
push
inc
insl
inc
jo
ds
sbb
dec
scas
insb
pop
loopne
out
addr16
out
jge
sub
jnp
mov
inc
and
mov
insl
enter
out
jno
jle,pn
daa
mov
js
arpl
sbb
lret
cmp
sbb
sbb
push
repz
mov
data16
fsincos
pop
aas
push
repnz
movsl
mov
xchg
dec
mov
sbb
aad
fcomip
dec
pop
mov
push
out
mov
ss
mov
cs
jmp
std
fwait
arpl
cmp
adc
std
adc
shll
cmp
mov
sbb
dec
leave
mov
mov
cmpsb
lock
dec
pop
xor
sarb
or
insl
outsb
and
aas
int3
faddp
sbb
mov
repz
dec
and
aaa
cli
shr
imul
das
add
aaa
adc
lods
pop
jbe
add
jo
xchg
int3
stc
frstor
out
icebp
dec
xchg
shlb
cmc
loope
das
rcrl
lock
cmp
inc
aam
fisttps
loop
jl
test
adc
lea
jl
push
lret
jbe
push
mov
xor
or
leave
push
hlt
dec
xor
lahf
xchg
sub
nop
repz
shl
sbb
push
push
jecxz
rorb
sbb
mov
sub
pop
xor
aam
notl
test
jge
vpsubw
aas
ljmp
fstl
out
das
jo
pop
in
std
repz
sub
mov
lret
shrb
and
sub
inc
mov
dec
aad
mov
pusha
add
adc
jne
mov
xorl
mov
jle
jmp
int
mov
push
mov
mov
popa
jnp
xchg
push
dec
jmp
mov
pop
scas
mov
roll
push
shlb
jnp
pop
clc
fstps
adc
std
sbb
insl
gs
enter
mov
mov
lock
lds
notb
cld
jg
in
pop
out
loope
mov
cwtl
enter
adc
mov
hlt
jecxz
cli
add
push
dec
xor
mov
push
push
daa
mov
lret
fnsave
sub
ja
mov
pop
loop
aas
repz
movsb
idivl
adc
leave
pop
popa
mov
push
mov
inc
fimuls
push
xor
push
jmp
jns
hlt
push
adc
xchg
xor
mov
xor
jbe
imull
popa
movsl
popf
fs
adc
rep
push
mov
in
jg
jns
push
in
mov
mov
mov
mov
fldl
mov
cltd
adc
lea
aam
test
push
repnz
cmc
lahf
push
xor
popa
xor
jmp
out
cld
add
movsl
mov
dec
or
gs
mov
jl
sbb
mov
lock
mov
mov
mov
testb
sub
xorb
mov
sub
xchg
inc
xchg
in
pushf
pop
das
mov
jle
dec
push
fbld
xor
inc
jmp
rcl
mov
sbb
xchg
enter
xor
gs
popf
int
fisttps
xor
inc
sti
aas
dec
mov
mov
cmp
pop
jecxz
adc
mov
neg
daa
lret
out
jnp
mov
inc
andl
add
movb
xlat
imul
in
jnp
inc
in
xchg
std
fs
cmp
push
popa
cmp
and
js
cli
lods
lret
sbb
dec
cltd
nop
mov
clc
into
mov
mov
sbb
repz
je
imul
in
cmp
adc
bound
adc
mov
push
lock
jne
jge
imul
test
xchg
and
inc
fldcw
pop
pop
int3
les
repz
or
ret
mov
dec
stos
push
loopne,pn
fldt
xor
inc
dec
aaa
xchg
cmp
xchg
aad
cmovg
test
cmp
and
push
xor
repz
arpl
fimuls
jnp
mov
mov
mov
mov
sub
jecxz
fwait
cwtl
enter
xor
cmpsl
dec
push
or
dec
cmpsl
lds
push
cmp
inc
inc
icebp
xchg
add
mov
ja
xlat
andnps
add
int
lldt
xchg
mov
jp
mov
mov
nop
push
or
jmp
add
out
cmp
xchg
iret
dec
inc
jo
es
es
or
sub
jge
repnz
cmp
in
scas
outsb
fmuls
add
outsl
ss
repnz
ljmpw
bound
decl
loope
ss
sbb
jae
jae
das
mov
or
fldcw
in
lahf
decl
std
sub
cs
inc
or
jns
mov
and
test
xlat
cld
stos
and
sbb
pop
imul
ret
mov
aaa
or
lds
push
aam
cmpsl
or
lds
cld
lea
xlat
lret
mov
dec
clc
or
sbb
lcall
jl
aaa
insb
sub
lock
dec
and
push
inc
dec
lea
cmpsb
je
xchg
lock
sti
dec
in
jo
cmpsb
add
mov
cmp
jl
add
mov
hlt
sarb
add
jecxz
stc
xchg
sarb
pop
mov
pop
jle
sahf
mov
pop
sbb
jge
pop
clc
test
add
xor
xchg
jmp
inc
loope
sbb
into
lock
cwtl
sbb
frndint
xchg
inc
es
lock
aad
add
movsb
scas
cli
filds
pop
mov
or
orb
mov
fwait
mov
addr16
xor
loop
pop
cltd
cs
aad
mov
inc
sub
push
cmp
pusha
test
lock
adc
in
in
dec
mov
cmp
mov
mov
add
push
andl
inc
loopne
pop
jecxz
jg
pop
aad
sbb
or
pop
dec
jns
inc
inc
sti
nop
xchg
shll
inc
mov
pop
lahf
jecxz
rcll
add
movsb
push
and
xchg
jecxz
data16
push
dec
mov
pop
je
cltd
inc
out
xchg
jge
dec
test
popa
inc
mov
cltd
mov
leave
inc
cmpsb
lods
fbld
movsb
adc
out
mov
inc
outsb
repnz
imul
dec
fs
sub
inc
js
mov
rclb
repnz
or
ljmp
nop
mov
orl
pop
fnsave
mov
mov
rol
push
cmp
stc
mov
sub
js
sar
xor
pop
jle
and
lock
xor
icebp
iret
dec
xor
xchg
push
es
cmp
cmp
dec
xor
test
sti
lods
and
jns
xor
cmp
mov
and
push
out
push
fildl
push
je
mov
mov
repnz
lock
pop
push
daa
movsl
out
aas
jae
jmp
sbb
cmp
dec
outsl
jnp
mov
cmpsl
sub
inc
popf
inc
shll
hlt
lock
fcoms
jle
in
in
rcll
pop
cwtl
pop
mov
rcl
mov
jo
cld
js
out
sahf
xlat
or
adc
insl
mov
sbb
repnz
dec
inc
or
imul
push
rcll
or
xor
fucomp
pop
addb
pop
popf
xlat
lods
cltd
stos
jno
aaa
loop
shl
xchg
nop
aas
sbb
ret
xchg
pop
les
stc
xor
clc
sbb
mov
test
imul
dec
mov
sub
cmp
js
cld
gs
and
pop
fwait
imul
mov
cmp
xchg
std
mov
push
cmp
jg
xchg
clc
sahf
push
dec
movsl
xchg
dec
frstor
lods
in
in
mov
ss
imul
mov
push
outsl
dec
mov
add
ja
mov
mov
jg
cmp
cmpsb
mov
repnz
fs
ss
pop
dec
test
cmp
add
jmp
pop
shlb
cs
or
ds
and
cmp
or
call
xchg
ljmp
jecxz
leavew
push
jecxz
and
aam
lds
adc
sbb
into
mov
xor
addr16
pop
mov
in
insl
jl
jb
xor
in
and
cmp
mov
xlat
and
iret
idivl
popf
jb
pop
insl
or
push
std
xlat
pushf
ds
stos
mov
imul
push
call
gs
shl
cmp
and
popf
sub
xchg
enter
pop
ds
cs
inc
and
cmpl
and
pop
inc
inc
lret
or
xchg
ljmp
xchg
lret
jecxz
clc
lock
mov
repnz
shll
mov
int3
inc
xchg
pop
lds
idivb
imul
mov
push
cwtl
mov
hlt
out
lret
dec
xorl
cld
cltd
mov
inc
repnz
mov
push
fwait
sub
jle
lock
jae
mov
test
gs
pop
mov
ret
shrb
mov
xchg
inc
mov
sbb
pop
push
or
outsb
xchg
sub
shr
xchg
cmc
iret
into
mov
xor
xchg
mov
pop
aad
push
add
sbb
push
cwtl
cmpsl
add
xlat
test
mov
roll
xor
lret
icebp
lret
push
data16
mov
pop
lss
flds
rcll
mov
jnp
pushf
xchg
movsb
loop
mov
and
leave
mov
arpl
pop
add
xor
cmp
cmp
cmp
outsb
or
lods
mov
xor
cmp
xor
sub
xor
test
ja
outsl
aad
fcoms
mov
push
lods
loope
loope
jp
icebp
jg
lret
jle
mov
imul
cmc
andl
rclb
add
xor
adc
jno
dec
rorl
xlat
fs
aas
stos
and
jecxz
popa
imul
in
push
aam
fcomip
sarl
pop
or
and
imul
loopne
xchg
xchg
clc
fwait
ds
cmp
jcxz
jp
mov
es
out
dec
xchg
lret
and
add
outsb
sub
mov
repz
xor
popa
cs
mov
pop
std
dec
xchg
jae
and
dec
hlt
xchg
movsl
inc
xor
scas
xchg
je
add
pop
imul
dec
or
lea
xor
cmp
cmpsb
mov
lds
push
aas
cmp
ss
fcmovb
pop
popa
js
mov
mov
cli
adc
pextrw
mov
test
xchg
jae
imul
sar
aam
out
jo
lea
inc
sahf
insl
xchg
and
nop
and
or
mov
dec
popa
push
fwait
mov
sub
fs
clc
xchg
popf
inc
insl
jl
cmp
fdivl
inc
jge
dec
sbb
inc
and
stos
cs
add
mov
mov
lds
inc
adc
dec
mov
sti
push
sub
adc
or
out
adc
aaa
mov
dec
loopne
movl
fnsave
mov
add
cmp
mov
pop
mov
push
xchg
xor
je
out
scas
addr16
out
sub
gs
lcall
jecxz
stos
cmp
stc
or
call
add
or
and
aad
popf
ljmp
sub
loop
jmp
cmp
cmp
dec
lahf
pop
pop
xchg
pop
xor
dec
loopne
xor
movsb
sbb
add
mov
repz
cs
sbb
jg
xor
xor
push
mov
inc
and
cmc
add
lcall
repz
sbb
dec
adc
leave
popa
icebp
xor
cli
or
rcr
cmpsb
mov
inc
out
xlat
in
popf
push
jmp
clc
out
dec
sub
cmpsl
ret
lods
push
in
popa
add
shr
sahf
inc
pop
adc
loope
outsb
js
mov
cmp
stos
or
mov
xchg
push
jg
mov
push
jl
ds
push
leave
pop
xor
mov
xchg
aaa
jne
cmp
sbb
xchg
aad
dec
ror
push
push
pop
out
lods
rorl
jb
push
test
push
imul
cmp
mov
cmp
movsb
in
push
sub
mov
jge
stos
fs
xchg
test
outsb
aaa
lea
inc
loop
sbb
adc
dec
or
push
es
ret
xor
lods
push
out
sti
mov
cmp
push
sub
dec
pop
pop
push
lds
cmpsb
fucom
test
or
mov
or
sahf
inc
cmc
xor
jecxz
mov
pop
mov
sub
rcll
sti
mov
jno
xchg
mov
scas
mov
call
push
mov
mov
inc
push
in
ficompl
xor
lcall
test
cmc
imul
int
pop
jecxz
movsb
addl
pop
dec
mov
aaa
sub
pop
or
dec
test
daa
and
pusha
loop
mov
xor
stos
pop
int3
mov
cmp
fsqrt
in
ret
sub
jl
or
push
xchg
aam
pop
stos
jns
mov
push
fstl
mov
mov
push
mov
fidivrs
lods
xor
or
shrl
loopne
testl
out
mov
ljmp
stc
inc
sbb
rcrb
cmp
pop
shlb
int
loop
mov
pop
push
mov
dec
jp
insl
lret
jb
add
xchg
dec
inc
test
lock
mov
sti
sbb
les
in
pop
addr16
ljmp
ja
jae
pop
leave
mov
push
dec
out
pusha
or
pop
leave
cwtl
inc
mov
stos
pop
je
push
add
dec
add
outsb
and
aas
push
repnz
rcr
imul
addl
jecxz
or
popf
out
add
push
aaa
mov
ret
mov
jge
lds
sbb
xchg
repz
pop
adc
lods
jge
aam
xor
fisubrs
in
mov
mov
sub
addb
aad
push
cmp
cmp
out
add
test
push
cltd
fisttps
cmpsb
repnz
push
jns
mov
xor
sti
andl
dec
mov
loopne
out
addr16
cmpsl
mov
repz
dec
flds
adc
or
fnsave
and
pushf
les
loop
add
xchg
xchg
into
or
repnz
xchg
inc
adc
aam
test
mov
fsubp
jmp
scas
lret
daa
inc
pop
cmp
lock
mov
jnp
gs
in
xchg
loopne
xor
add
or
push
push
pop
test
cmp
xor
insb
adc
push
into
ds
std
cld
xchg
jns
out
int
cwtl
cmp
insl
lds
xchg
mov
decl
ret
dec
push
out
push
rcrl
fbld
mov
shll
fimull
pop
push
push
stos
mov
shll
ljmp
dec
popa
fisubl
lods
pop
fwait
push
push
inc
push
xchg
aas
lds
flds
adc
mov
into
jnp
and
insl
int
cmp
loopne
popl
lock
orl
push
dec
sub
mov
mov
sbb
add
in
in
hlt
jns
mov
xorl
pop
bound
decb
adc
mov
sbb
push
and
mov
push
cmc
leave
inc
mov
ljmp
lea
or
sbbb
fwait
rcll
mov
mov
dec
xlat
fs
shl
sahf
mov
or
bts
mov
mov
push
dec
mov
and
sbb
push
testl
data16
leave
xor
pop
adc
js
inc
lret
shll
dec
jecxz
mov
insb
or
dec
mul
and
imul
sub
dec
sub
sbb
icebp
or
or
mov
push
outsb
jae
pushf
std
or
mov
aaa
cltd
pop
ffree
pop
out
dec
hlt
jp
mov
mov
mov
xlat
ret
pop
pop
add
dec
outsl
repnz
aam
out
insb
ds
xor
push
push
and
arpl
ja
add
jp
adc
pop
inc
xchg
and
mov
dec
data16
stos
jl
shl
inc
xchg
cmc
sahf
outsb
push
dec
xchg
incb
test
push
ret
cmp
xor
shrl
enter
push
cmp
stc
shlb
out
icebp
lds
lcall
in
leave
cmp
jno
jmp
out
sti
push
pop
cmp
sub
xor
push
inc
push
fisubrl
fdivrs
dec
pop
sbb
adc
jo
sub
popa
cmp
fsubs
rcrb
fadds
int3
nop
xchg
pop
lret
push
jb
lea
pusha
dec
and
int
and
jne
sahf
or
mov
mov
jl
push
ror
loope
out
mov
stc
or
clc
hlt
adcl
xchg
outsb
add
mov
lea
stos
popf
xor
insb
inc
or
push
pop
in
sub
fldl2t
cmp
push
pop
mov
lds
push
mov
sub
idivl
ret
and
and
or
scas
in
pop
in
and
lahf
xchg
aas
push
jg
out
pusha
icebp
or
std
inc
mov
or
in
inc
roll
roll
int
dec
dec
es
pop
popl
nop
testb
ds
fsubr
inc
fwait
adc
xchg
mov
dec
sbb
daa
or
out
jle
jbe
or
jo
xor
or
lods
jg
orl
pop
enter
les
insb
sbb
or
in
push
daa
xchg
mov
and
cmpsb
in
mov
rcrb
jmp
push
loope
pop
mov
sub
push
fs
out
jo
imul
xchg
jl
lahf
mov
mov
mov
inc
cmp
mov
fisttps
inc
cmp
inc
cmp
push
loop
shr
mov
outsb
push
or
push
mov
add
test
mov
cld
ja
pushf
test
xor
pop
pop
cmp
neg
xchg
and
mov
repnz
rcll
js
xchg
incb
lea
les
movsb
dec
inc
out
mov
and
mov
cmp
pop
cli
pop
repz
adc
jbe
out
aaa
mov
lds
pusha
popa
or
stc
inc
inc
cmp
ret
push
aas
sbb
or
xchg
rcl
cmp
je
push
loope
les
adc
stos
cli
aam
xor
cli
sub
mov
loop
andb
sbbb
mov
dec
pmullw
push
cltd
fisubrl
mov
and
and
push
loope
xor
add
dec
cmc
mov
lcall
out
sbb
and
add
or
inc
mov
dec
pop
dec
mov
xchg
ss
cmp
xchg
int3
scas
or
mov
and
lret
mov
not
fcomip
movsl
mov
sti
out
push
idivl
out
inc
test
xor
sub
call
dec
stos
arpl
cmpsb
imul
into
and
cmpsw
add
scas
inc
movsl
pop
js
cmp
and
movsl
dec
test
adc
cmp
mov
cmp
enter
call
fidivl
and
pop
clc
xor
inc
testl
xchg
mov
xchg
fiadds
mov
mov
aas
xchg
loopne
mov
cwtl
stos
clc
pop
testl
push
cmp
mov
mov
aaa
xor
leave
daa
pop
pop
loope
js
notl
cmp
ret
dec
imul
out
xchg
out
scas
jecxz
and
movsb
xchg
inc
stc
outsl
adc
clc
xchg
mov
fimuls
andl
sahf
mov
cmc
sbb
loop
loopne
lods
mov
push
push
sub
movsl
sbb
lret
iret
push
imul
pop
outsb
inc
adc
lock
out
mov
push
imul
mov
pop
jne
mov
mov
and
sub
call
outsl
and
pop
add
std
enter
jmp
fcomps
cli
adc
out
lods
xlat
pop
mov
pop
inc
jne
jo
jg
mov
rcr
xor
hlt
jg
sar
xchg
int
or
dec
jno
pop
std
dec
out
shrb
cmp
or
lock
pushl
fwait
scas
add
rcrb
shr
jnp
lds
cmpsb
test
sbb
or
mov
movsl
imul
push
cmp
fsubs
push
pop
enter
cmp
aas
in
add
lds
jnp
lcall
out
mov
and
std
notb
pop
pop
mov
cmp
or
ss
mov
mov
jno
out
sbb
dec
pusha
imul
dec
xor
fs
push
mov
push
cmc
fcmovnb
rcr
xchg
xchg
std
lods
add
push
fistps
aam
shrb
mov
ja
dec
dec
fisttps
xor
hlt
pop
call
test
sbb
adc
jp
into
adc
or
pushf
xor
xchg
aam
pop
inc
leave
mov
and
popf
ss
call
repz
xchg
into
sub
xor
test
and
scas
stc
mov
adc
scas
xchg
push
jp
adc
mov
cmpsl
add
mov
cltd
into
shrl
adc
stos
arpl
out
aad
das
dec
xor
dec
sub
call
out
xchg
int3
sub
add
lret
lods
rcl
push
sbb
sub
mov
rcr
sub
and
outsb
mov
xor
mov
fcmovne
dec
fsubrp
add
push
adcb
xor
dec
xor
jne
iret
fstps
xchg
add
es
push
mov
aam
es
test
ret
aas
scas
les
aad
or
cwtl
inc
mov
mov
pop
mov
cli
imul
push
mov
arpl
jle
test
loopne
pop
rcrb
pop
and
xor
adc
add
std
fisttps
sbb
scas
push
sti
xlat
add
lret
adc
pop
adc
std
lods
xchg
and
mov
icebp
data16
les
cmp
xor
and
jecxz
mov
xchg
aam
out
mov
push
dec
push
mov
scas
cmp
popf
sti
dec
hlt
mov
repz
dec
std
sti
and
sbb
decl
rcrb
mov
and
mov
or
stc
fcoms
sahf
mov
pop
imul
fsts
adc
push
jge
sbb
mov
sub
jne
mov
movsb
cmp
push
jb
rcrl
sub
and
bound
mov
mov
mov
aad
jns
shll
mov
jge
lods
aam
stc
mov
call
fstpt
enter
test
xchg
or
add
mov
pushl
mov
sub
out
jle
sub
jecxz
mov
jb
ss
mov
out
fucomip
jb
jmp
xor
mov
sbb
cmp
out
mov
cmp
mov
jno
lock
sub
mov
stos
cmp
mov
mov
addl
push
cmpsb
test
push
std
and
xchg
lock
and
xlat
cmp
test
les
sbb
mov
into
aad
jmp
inc
jecxz
ljmpw
cmpl
or
jb
fucom
add
mov
pop
stos
pusha
jmp
mov
cmp
pusha
mov
pop
out
xchg
jp
lods
sub
orb
xchg
and
lcall
lods
xchg
es
push
movsl
pop
test
ljmp
roll
mov
dec
aas
push
jae
push
cmc
mov
xor
and
jne
cmp
rclb
dec
icebp
sub
test
andb
inc
ss
outsb
push
test
jp
aaa
cli
inc
adc
faddp
push
pop
mov
xorb
hlt
lret
daa
js
sub
outsb
add
jecxz
inc
shl
add
mov
repnz
icebp
push
je
xchg
decb
test
outsb
xchg
pop
jo
shll
sbb
fadd
repnz
dec
in
inc
mov
mov
pop
in
mov
mov
jne
fwait
ret
gs
mov
cwtl
sbb
cltd
xchg
jno
xor
sarb
idivb
dec
mov
push
ror
icebp
pusha
test
push
insb
dec
push
mov
push
pop
xlat
add
roll
loop
xchg
cmpsl
sub
or
std
xor
arpl
loopne
cld
mov
out
adc
out
inc
imul
dec
dec
jns
insl
add
scas
inc
pop
in
sbb
lods
inc
mov
sbb
mov
iret
or
dec
push
repnz
sbb
loopne
jno
movsb
cmc
je
ret
cmc
test
jae
inc
jnp
mov
mov
pop
inc
or
dec
in
jecxz
and
cmp
dec
pop
sbb
les
in
cmp
pop
sbb
dec
stos
call
cmc
imul
push
fwait
cwtl
test
shrl
pop
movsl
movsb
jno
sub
mov
ficoml
pop
mov
cmp
pop
shlb
ss
jo
cmpl
xor
insb
or
loopne
mov
idiv
cld
mov
push
dec
dec
inc
xchg
scas
fdivrs
and
sub
cmc
insb
and
adc
and
jns
divl
stc
or
or
fnsave
loop
cmc
popf
fs
cmpsl
outsb
jb
js
jg
mov
push
dec
stos
dec
push
mov
mov
pop
jmp
or
cmp
or
out
fsubr
add
mov
das
insl
jo
push
xchg
lock
lret
filds
inc
sub
mov
dec
jl
aas
into
mov
insb
mov
lock
mov
lea
aas
fwait
and
call
push
xchg
jle
sbb
cld
or
test
ficoml
pop
daa
lods
inc
lahf
or
test
sbb
imul
cmpsl
jge
ds
lods
mov
or
sahf
jmp
xchg
fwait
movsl
mov
cmpsb
push
out
xchg
dec
and
std
repz
jb
push
sti
adc
mov
sti
or
imul
cld
mov
sti
adc
pop
dec
jmp
and
add
adc
jmp
stc
loope
jecxz
mov
adc
mov
push
aaa
mov
testb
jmp
lahf
inc
out
idivb
outsb
sub
mov
fldcw
mov
jg
jbe
mov
jnp
roll
aaa
sub
xor
mov
adc
mov
stc
mov
push
test
fnstsw
div
and
jbe
cmpsl
mov
cwtl
mov
aad
lock
xor
bnd
sbb
scas
imul
dec
mov
data16
push
jg
pop
loop
fwait
movsb
stos
jmp
lods
push
out
loope
mov
mov
std
mov
in
cwtl
aas
inc
imul
jne
dec
pusha
cmc
nop
out
inc
xchg
mulb
mov
fiaddl
scas
lods
into
and
icebp
imul
cld
inc
jmp
jmp
and
sarl
les
stc
ljmp
push
gs
pop
lea
jae
insl
or
mov
adc
imul
dec
out
jmp
jae
lret
lahf
ret
bound
jmp
xor
xchg
xchg
xor
mov
or
lods
inc
and
outsl
xor
clc
clc
xor
mov
jne
std
dec
je
test
aas
jg
jo
loop
jl
loopne
cmp
and
push
mov
jbe
js
or
dec
loope
mov
mov
or
pop
xor
jecxz
neg
rclb
sub
daa
dec
lock
mov
add
jns
mov
jae
pop
lds
iret
mov
inc
pusha
cmp
jp
xchg
adc
imul
cmp
cmp
push
std
inc
cmp
add
add
movsl
add
pop
notl
sbb
pop
out
jle
adc
test
inc
or
aaa
adc
xor
rorb
jo
and
mov
rep
push
xor
and
inc
pop
sub
pop
mov
pushf
leave
lahf
jge
je
ja
jns
sub
in
add
cli
or
pop
adc
mov
pop
or
push
pop
arpl
je
out
jecxz
mov
jecxz
outsb
cs
pop
cwtl
xor
mov
in
pop
repnz
mov
dec
in
ja
or
popl
cmp
sbb
mov
or
fisttps
mov
ds
adc
sub
popf
and
fwait
popa
cmp
lahf
sbb
or
ret
mov
pop
rcrl
lahf
jae
clc
add
cmpsl
mov
inc
cmp
sub
add
inc
or
mov
outsl
mov
pop
jnp
mov
jae
jns
les
ss
jb
je
loope
pop
xchg
mov
xchg
jecxz
movsb
cmp
mov
ret
lahf
adc
dec
pop
inc
imul
je
cltd
xchg
push
mov
icebp
jecxz
popf
push
ljmp
push
pop
and
inc
test
mov
mov
shrl
sahf
imul
sbb
inc
dec
andb
sbb
add
cmp
test
cwtl
xchg
ja
imul
cmp
mov
mov
iret
sahf
pop
call
xor
in
dec
inc
in
xor
add
movsl
jae
sbb
dec
aas
pushf
gs
popa
scas
cmpsl
push
jno
pusha
and
data16
xchg
insb
dec
js
lret
cltd
and
or
clc
xchg
inc
insb
je
pushf
sub
mov
sub
sub
jge
push
dec
pop
icebp
stos
arpl
push
sub
shll
cld
and
scas
inc
lret
xor
js
test
dec
std
inc
lea
mov
incb
xor
add
fldz
and
cmp
fidivs
cmp
xor
imul
jge
hlt
fdivr
lods
inc
mov
in
out
jbe
fwait
sub
and
les
add
jbe
rolb
mov
sub
lods
popa
iret
mov
jge
out
data16
rcrl
les
aaa
inc
aaa
jg
adc
adcb
dec
jg
add
pushf
js
divb
sbbl
adc
add
and
mov
inc
ror
movsb
cli
jmp
stc
mov
scas
push
ja
pop
mov
push
dec
sbb
loopne
gs
and
outsb
mov
cs
pop
cmp
xor
std
mov
add
xchg
and
xor
outsb
jle
pop
gs
xchg
inc
imull
and
cmpsb
cmp
ja
and
mov
sbb
lret
mov
lahf
je
shl
jbe
stos
jno
dec
orl
stos
mov
mov
add
fisubrs
jnp
subl
mov
mov
out
pushf
xchg
sbb
nop
jae
add
lods
out
pop
mov
cli
insb
and
ret
in
sub
dec
mov
jae
xor
insl
mov
outsl
mov
es
inc
lcall
jge
insb
push
pop
pop
and
add
pop
add
push
outsb
test
push
cmp
in
in
sbb
pop
mov
adc
mov
popa
adc
mov
jg
divb
xor
out
out
fwait
daa
and
popf
push
fs
push
psubusw
out
mov
pushf
repz
pop
sti
sahf
sub
scas
mov
mov
jbe
sbb
xchg
inc
nop
xlat
push
xchg
lcall
ret
mov
pop
push
inc
sahf
mov
sbb
jno
cmp
lcall
pop
xchg
popa
loope
mov
std
add
mov
ja
cld
pop
cmc
inc
cmp
movsl
dec
addb
or
mov
cmc
ret
lea
adc
add
ds
adc
push
outsl
sub
adc
sti
repz
out
ja
sti
mov
int
in
dec
in
outsb
jl
test
push
sub
jae
xchg
lahf
xchg
mov
mov
lea
test
pusha
mov
sbb
jne
mov
lock
or
cmp
or
rolb
shrb
pop
jbe
pusha
jne
test
jp
add
js
hlt
cmp
jp
push
push
pop
push
push
shl
sti
aad
mov
rcll
sbb
pcmpgtb
xchg
int
pushf
or
mov
pop
pop
and
pop
cmpsb
scas
das
push
ret
out
inc
xchg
dec
and
mov
subb
movswl
shll
in
cli
lods
loope
sub
push
mov
enter
jae
arpl
lahf
sbb
lods
push
cmp
dec
lods
inc
inc
pushf
push
es
jmp
std
ja
icebp
into
push
push
fwait
mov
subb
jno
xchg
imul
ret
outsl
jecxz
cmp
pop
sub
push
inc
in
sbb
jne
nop
or
arpl
aad
adc
lea
add
sar
rcll
push
mov
push
mov
mov
xchg
aaa
fsubs
sbb
in
sbb
aam
test
enter
rcr
lcall
shll
outsl
and
decl
popf
jge
push
cmp
cmpsl
adc
shr
lds
and
cld
test
xchg
jecxz
push
push
shll
mov
cld
add
ja
out
xchg
xchg
cmpsl
idiv
sub
pop
ror
shlb
mov
js
jl
shlb
sbb
xor
push
push
jecxz
or
stos
xchg
out
push
pop
sbb
mov
adc
shl
rcll
ret
bound
or
pop
push
addl
sbb
mov
mov
adc
imul
nop
dec
mov
ja
lea
frstor
jp
jo
xchg
mov
movsb
jno
pop
inc
cli
loop
imul
sbb
enter
mov
push
rorl
negb
pushf
aaa
sbb
lahf
push
jmp
or
popf
xchg
sbbb
imul
std
mov
add
mov
mov
iret
mov
push
jns
movsb
test
in
pusha
outsl
adc
lcall
push
hlt
inc
mul
std
idivb
push
xor
popf
call
jbe
inc
sbb
jo
cs
push
popa
push
test
or
inc
mov
adc
jnp
sahf
stos
sub
adcb
enter
inc
popa
cmp
jmp
shll
mov
jge
xchg
mov
mov
cld
lock
jge
mov
into
imul
in
rcll
dec
adc
pushf
inc
aad
jge
mov
in
insb
jg
stos
push
outsb
or
lds
loop
jmp
mov
outsl
mov
repnz
push
inc
fwait
in
lds
and
and
adc
js
lea
aaa
repnz
or
xor
jg
and
inc
pop
in
mov
orb
icebp
test
sarl
adc
frstpm(287
cmpsl
pop
sbb
add
call
enter
vmread
mov
dec
pop
lahf
push
shrl
jbe
int
sbb
pop
fdivrl
jb
ficomps
xor
ds
jno
jbe
push
mov
sub
pop
jl
adc
sbb
js
fildl
mov
sti
adc
xchg
and
popf
ret
popf
lock
jnp
and
fmull
lahf
cmp
cmp
xchg
push
test
pop
in
test
pushf
xchg
and
int3
jl
mov
push
pop
test
add
dec
jge
push
shrl
data16
push
lret
movsl
pushf
repnz
testl
jo
repz
add
inc
fsubrs
cli
fsubr
test
push
dec
mov
imul
iret
addr16
sbb
xchg
das
out
orb
mov
push
jle
rol
fadd
cmpsl
pop
loope
pop
sub
adc
call
das
mov
inc
inc
imull
mov
dec
sbb
cs
dec
sbb
call
push
xchg
outsb
scas
sub
repnz
cld
jge
lock
repz
int3
shll
sub
fucomp
sbb
mov
add
lret
sub
jmp
xor
push
sub
dec
add
stos
shl
adc
lods
das
in
and
dec
leave
ds
push
inc
mov
js
add
bound
mov
mov
push
lock
xchg
sub
jbe
push
addl
dec
into
lahf
das
addr16
xor
das
fcoms
sub
sub
inc
leave
popa
jo
jecxz
inc
mov
mov
shl
push
fs
mov
pop
mov
push
outsb
mov
adc
lret
fmuls
mov
pop
out
dec
sahf
mov
nop
bound
add
and
push
lods
cmp
inc
sub
jg
push
and
jae
subl
xor
test
test
orb
fadd
mov
iret
jp
divb
inc
cwtl
loopne
xlat
xlat
push
xchg
push
xchg
rol
nop
lret
les
pop
dec
out
jo
adc
pop
cwtl
jecxz
xchg
dec
mov
or
popf
push
adc
mov
inc
fwait
push
adc
dec
rcll
and
into
stos
les
inc
xchg
pushf
push
dec
sub
xchg
jbe
jge
test
gs
inc
cmp
cmp
fcmovnb
sub
adc
in
int3
repz
in
push
pop
sub
mov
inc
fwait
andl
decl
pop
loop
fdivl
adc
scas
pop
in
aam
xchg
and
movsl
or
lods
jle
out
jecxz
iret
lea
and
pusha
pop
lea
lcall
push
cmpsl
and
dec
in
lret
inc
scas
pushf
dec
int
mov
je
call
xchg
inc
cmp
push
int
push
lock
lahf
mov
in
add
pusha
inc
fucomp
lret
and
sbb
dec
nop
enter
cmp
jno
mov
mov
dec
cmpsl
repz
std
call
pop
sub
lret
out
movsb
into
cltd
loopne
add
test
iret
mov
addr16
pop
inc
inc
xor
fxch
insl
xchg
movsb
jae
add
imul
nop
ljmp
or
sbb
or
xchg
mov
jp
inc
cmp
loop
sahf
xchg
mov
xchg
fdivr
cli
sarl
push
movsb
adc
mov
in
out
shlb
cmc
add
aaa
xor
out
aas
pop
hlt
push
insb
inc
frstor
push
pop
push
jmp
fnstcw
inc
xchg
test
cmp
push
lahf
cld
push
jl
adc
xchg
jecxz
add
pushw
ja
add
cld
and
mov
aam
pop
jbe
mov
or
cmp
insl
mov
lret
sub
push
dec
or
adc
add
roll
mov
jge
mov
rol
adc
neg
xor
xor
and
sarl
push
negl
mov
push
push
and
mov
dec
xlat
mov
pushf
mov
push
data16
lds
add
xor
xor
cmp
xchg
cmp
inc
adc
jno
scas
xchg
sbb
test
bound
rolb
mov
mov
jg
aam
inc
sbbb
push
ret
pop
cmp
shll
mov
sbb
jae
aaa
mov
jecxz
std
sbb
pop
sub
adc
hlt
addr16
xorb
xchg
std
pop
in
mov
jge
xor
popf
jb
dec
push
jecxz
sub
cld
and
push
stc
test
add
xchg
dec
lds
jg
xchg
xchg
jae
repnz
inc
sbb
loopne
sarl
inc
mov
inc
jns
or
xor
sbbb
lcall
jg
mov
hlt
jmp
unpcklps
cmp
mov
jmp
xor
mov
sbb
jbe
push
sbb
sub
insb
stos
inc
cli
dec
loop
mov
dec
or
ja
in
inc
rcrb
sbb
fidivrs
std
iret
jbe
xchg
push
push
stc
push
hlt
jge
repnz
and
sbbb
cltd
add
in
popf
iret
lods
add
js
jecxz
lahf
in
sub
mov
sub
sti
outsb
inc
jge
and
out
and
mov
gs
mov
lcall
mov
push
ljmp
cltd
into
cmp
cmp
or
and
sbb
adc
mov
and
pop
jle
add
js
loopne
enter
iret
pop
mov
or
and
lret
push
mov
push
cli
mov
cmpsl
out
mov
cmp
insl
adc
shrl
loop
leave
cmc
imul
push
and
daa
or
and
cmp
inc
add
xor
inc
inc
mov
inc
popa
repz
mov
cmp
loope
dec
data16
jg
int3
jle,pt
sbb
mov
sub
pop
test
aam
int
hlt
sbb
popf
addr16
jg
jecxz
out
faddl
add
pop
jge,pn
mov
pop
mov
cwtl
sbb
mov
data16
test
jp
mov
adc
cltd
repz
js
cli
push
push
lods
mov
outsl
rcrl
mov
jnp
imul
and
movsb
cmp
inc
sbb
mov
push
imul
sbb
insb
mov
pop
add
and
arpl
fcompl
out
ss
stos
and
mov
cs
adc
inc
and
or
xor
stc
testb
shlb
dec
outsl
cmpsl
adc
mov
ficompl
subb
lods
hlt
mov
stos
push
cmp
fdivl
stos
add
mov
jecxz
push
arpl
dec
jl
stc
out
add
in
xchg
iret
and
fcmovu
jl
adcb
clc
mov
push
je
dec
fs
js
cltd
dec
mov
jge
pusha
rol
mov
scas
or
adc
scas
lods
inc
es
dec
scas
out
add
inc
ja
jecxz
ror
push
cmp
dec
push
dec
and
mov
clc
add
ret
mov
arpl
or
imul
test
pop
cmp
jmp
inc
pop
lods
xchg
sbb
pop
fstpl
xchg
xor
mov
aas
cmpsb
add
loope
jae
mov
push
pop
fidivrl
aaa
mov
in
add
cmpsl
mov
pop
sub
sbb
cmp
loopne
jns
cmp
inc
ror
outsb
jmp
inc
mov
jle
adc
ja
mov
xchg
sahf
cmp
mov
inc
shlb
jne
sahf
pop
shrl
pop
lcall
xorb
push
pop
cmpsb
mov
xchg
cmp
mov
aas
ja
push
mov
inc
hlt
cmp
fidivrl
cmp
mov
mov
jne
sti
mov
insb
notl
cwtl
push
fiadds
inc
sub
or
leave
mov
and
xchg
in
sqrtps
outsb
push
int3
mov
add
jo
mov
movsl
pushf
cmp
shrl
subl
cwtl
pop
mov
cltd
add
sbb
and
cmp
sub
loop
add
mov
repnz
inc
xchg
insb
ret
sbb
ljmp
or
les
jno
mov
sub
insl
adc
stos
xchg
mov
jl
imul
pop
loopne
gs
or
sarb
dec
mov
enter
in
outsl
jg
lcall
xchg
dec
add
shll
mov
mov
mov
xor
mov
mov
lcall
aad
repz
dec
jb
pop
jae
jp
adc
mov
or
mov
lret
sub
jl
add
mov
add
in
adc
fmul
scas
iret
sub
lea
sub
mov
mov
popf
lahf
and
imul
cmp
inc
mov
cltd
jge
adc
flds
mov
cmp
mov
adc
fs
xor
sti
imul
pop
jne
in
ljmp
ficoms
sbb
xor
sub
pop
mov
add
mov
jae
gs
and
sbb
scas
mov
sbb
inc
mov
adc
loopne
jb
xchg
xchg
pop
fwait
scas
fs
jmp
cmp
cmc
shrb
xchg
es
add
cmc
cmc
out
lock
test
inc
hlt
out
cs
jg
in
fcmove
push
inc
test
fmuls
testb
push
push
jb
mov
mov
repz
popf
pop
and
popa
jae
int
cmp
mov
dec
out
jo
jne
push
pop
pop
mov
or
loope
lcall
xor
dec
jne
mov
es
repz
push
aam
outsb
repz
inc
push
fnsave
or
ret
mov
outsb
out
out
pop
out
jge
das
dec
arpl
in
cmp
mov
inc
jmp
sub
inc
jecxz
sbb
xor
mov
dec
mov
popf
push
popa
iret
dec
loop
add
xchg
lock
sbb
loop
shlb
lret
enter
xor
fld
imulb
add
fwait
repz
aad
jge
or
stc
xor
es
push
addr16
sub
mov
je
loopne
xor
xor
in
arpl
sub
popa
push
stos
sarb
fsub
test
mov
pcmpeqd
mov
xchg
adc
push
or
int3
test
ret
push
xor
and
sub
mov
adc
xchg
lahf
pop
xor
sti
flds
sub
mov
push
imul
outsl
dec
and
std
push
mov
mov
sub
fs
dec
es
sti
mull
movsl
dec
jnp
cmp
and
daa
adc
sahf
push
imul
bnd
les
negl
and
inc
call
out
cli
mov
jnp
cwtl
nop
sub
xchg
mov
in
mov
hlt
push
cmp
dec
cmp
fisubrl
fiadds
ret
fisubs
sbb
xchg
ljmp
xor
dec
mov
xchg
pushf
cmp
rcll
jbe
push
xor
bound
dec
stc
in
addr16
adc
and
xchg
inc
add
pop
jnp
in
aad
jecxz
sti
sahf
xor
push
xchg
sub
dec
inc
inc
cmp
iret
xor
out
inc
adc
mov
xchg
aaa
jae
cmp
add
sbb
std
sbb
sbb
insl
pop
mov
into
shlb
loopne
sub
lahf
xchg
or
bound
repz
xchg
iret
mov
push
addr16
mov
xchg
mov
roll
xlat
fbstp
stos
lock
es
nop
lea
loopne
jae
ss
iret
push
mov
add
mov
fistpl
inc
sahf
xlat
sub
pop
mov
fsubrs
and
cld
mov
pop
leave
push
mov
test
xchg
xchg
mov
rcrb
sub
mov
mov
mov
fisubrs
pop
mov
add
out
andb
sbb
sahf
xchg
jae
outsb
ds
xchg
pop
jle
aaa
dec
test
dec
int3
addr16
btr
xlat
add
cli
test
and
sub
pop
add
xor
into
dec
ss
cmpsb
push
sub
scas
in
lock
push
xor
aaa
ret
lea
mov
lcall
daa
repnz
xor
movsl
push
mov
xchg
xor
adc
loop
aad
wbinvd
fs
lds
mov
or
jmp
push
int3
add
idivb
adc
cmp
pop
inc
mov
mov
aaa
sub
insl
int
sub
js
cmpsl
dec
or
xor
jl
push
cltd
xor
jns
sub
adc
fiaddl
pop
sub
loope
jno
sub
xchg
lret
pop
push
inc
or
shlb
xchg
adc
adc
jbe
fbld
lea
push
je
icebp
xor
loop
sub
push
pusha
mov
in
pop
andl
aas
jge
dec
adc
mov
outsb
push
cmp
push
xor
sahf
dec
or
scas
add
sub
add
mov
jb
add
xchg
iret
fsubs
xor
inc
aas
in
mov
shlb
call
cli
lods
inc
xlat
jmp
xor
sbb
mov
call
int
stc
mov
mul
ds
lock
mov
shlb
and
fld
test
xor
pop
mov
xor
lds
mov
xor
push
bnd
pop
cmp
xchg
aas
sbb
dec
sti
xorl
jns
in
push
pusha
sub
insl
jle
xchg
test
jbe
lahf
hlt
popf
arpl
cmc
add
jnp
and
xchg
lret
sbb
aad
adc
or
out
imul
dec
jecxz
or
mov
sti
mov
call
adc
inc
or
add
rcrb
ljmp
mov
add
aam
sbb
sahf
fwait
test
push
enter
addr16
loope
cs
nop
in
ss
mov
jbe
sar
call
jmp
add
and
cmpl
popa
mov
xlat
cmp
les
adc
jno
sahf
mov
dec
adc
cmp
iret
lods
or
or
in
cmc
inc
scas
or
psrlq
jbe
dec
pop
ja
stos
jmp
or
mov
and
icebp
jae
repnz
xor
fs
test
cmp
cmc
add
mov
fs
into
adc
mov
mov
outsl
subl
add
cmp
add
adc
mov
aaa
cmpsb
jbe
lds
add
push
mov
int3
pop
mov
or
nop
das
pop
mov
dec
mov
js
xchg
push
pushf
xchg
sbb
jle
sbb
mov
jae
pop
pop
fistl
sub
mov
pusha
repnz
scas
and
nop
test
fs
xor
push
mul
rorl
stc
mov
jno
cmp
data16
sub
mov
je
cltd
jo
xchg
push
mov
inc
jmp
xor
mov
frstor
add
or
fcomps
cmp
and
jno
in
outsl
push
insl
addr16
add
push
in
xor
sbb
xlat
push
dec
pusha
test
pop
push
sub
gs
or
stos
fwait
fs
pop
add
mov
mov
dec
adc
popa
dec
push
mov
insl
inc
fnsave
xchg
rcrb
xor
xor
push
mov
or
clc
js
xchg
mov
push
cwtl
or
clc
xorl
jp
jge
bound
xchg
pop
adc
repnz
jns
popf
cld
jecxz
dec
push
stos
inc
xor
sahf
push
add
pop
mov
in
js
jns
frstor
pop
stos
push
adc
in
add
xchg
jle
sbb
add
ja
pushf
pop
call
xchg
inc
sbb
movsl
insl
push
inc
int3
dec
test
jp
hlt
push
push
das
arpl
xchg
dec
and
cmp
adcb
stos
jecxz
add
xor
sysexit
repnz
fsubl
mov
movsl
cs
call
das
sub
pop
int
fisubrl
imul
cmpsl
inc
xchg
cmc
xor
push
lock
xchg
popa
cmpsl
into
dec
sub
mov
inc
adc
mov
xor
cmp
mov
adc
cltd
mov
push
call
adc
dec
push
in
xchg
shrb
push
mov
aad
int
js
ljmp
insb
dec
rcll
ret
sti
add
mov
push
das
xchg
mov
dec
xchg
inc
mov
sti
ja
push
push
outsb
cli
dec
insb
aam
or
mov
lods
and
inc
out
das
leave
pop
jge
inc
dec
mov
inc
mov
add
imul
or
es
aas
dec
stc
popf
pop
in
ret
jno
xorb
movsl
dec
inc
cmp
sarl
sbb
pop
aas
jle
loope
ja
roll
mov
arpl
sbb
popl
pop
lock
rorb
push
movsl
icebp
in
push
shlb
inc
test
jmp
sub
je
sbb
xlat
stos
jb
mov
dec
imul
mov
lds
cmpsl
mov
mov
xor
lahf
cmp
jo
loopne
cmc
les
push
fisttpll
ret
add
cmp
dec
mov
lods
cmpsl
mov
mov
mov
cld
call
lock
popa
fcomps
dec
xor
push
mov
je
divb
and
dec
lahf
ss
add
iret
jne
and
xchg
xor
cmc
sub
mov
xor
aaa
and
mov
out
clc
in
mov
adcb
pop
imul
aam
add
push
lea
xchg
imul
scas
arpl
and
imul
stc
popa
xor
add
mov
psubb
add
jne
insl
jne
lods
popf
pop
mulb
stc
and
inc
cmp
rorb
and
jnp
shl
clc
sti
jae
rorl
insl
push
lock
enter
adc
imul
pop
add
xor
insb
pop
ljmp
cmp
mov
mov
lock
sub
ficompl
sub
dec
test
fs
ljmp
jnp
subl
xor
mov
dec
push
sbb
or
mov
mov
cli
rolb
aas
cmp
xchg
in
sub
mov
mov
dec
jne
mulb
aad
sub
lahf
aam
mov
mov
fwait
lcall
dec
mov
adc
add
adcl
pop
stos
call
jg
add
sub
out
into
lds
enter
ja
lcall
aad
sahf
cmp
mov
repz
xchg
xchg
lock
loop
push
into
rorl
in
xor
jo
enter
and
mov
push
and
sbb
jo
cltd
pminub
ret
dec
popa
push
arpl
shll
jle
xchg
mov
arpl
nop
sub
or
cmp
add
pop
nop
adc
pop
sbb
xchg
mov
xchg
push
arpl
xchg
push
out
pop
xchg
inc
add
sbb
xabort
int
push
sbb
cmpsl
pushf
aas
push
mov
push
std
or
lods
mov
ret
iret
ret
mov
add
fs
mov
xor
pop
mov
pop
push
adc
xchg
rclb
adc
ror
aas
add
stos
mov
fsubs
and
mov
and
sahf
sub
into
outsb
add
adc
cs
shl
in
cmp
pop
push
inc
or
mov
dec
pop
das
ja
sbb
add
aaa
sub
dec
js
jne
dec
ljmp
rcrl
mov
pushf
movsl
out
cli
in
addl
mov
mov
inc
fdivrs
sub
popf
mov
testl
adc
stos
xorps
sbb
popa
gs
dec
call
test
push
pop
lcall
xor
add
sub
inc
pop
lock
and
jg
push
lock
xchg
lods
lods
cmc
jmp
pop
xchg
roll
shrb
sub
add
xchg
sub
and
inc
out
hlt
and
or
rorb
push
or
je
cmp
popf
adc
or
jecxz
mov
xchg
repz
ret
cmpsl
jmp
or
adc
imul
mov
jg
mov
xchg
sti
cmp
out
cli
scas
into
sub
cltd
sarb
scas
aaa
pop
les
mov
add
sbb
pop
jnp
scas
ror
testl
xor
xor
adc
pusha
js
aaa
adc
xchg
jmp
fsub
outsb
in
daa
push
test
push
popl
push
or
daa
mov
inc
lret
scas
pusha
sar
add
xchg
mov
or
jbe
jg
cltd
cmpsb
xchg
leave
es
lods
mov
sbb
imul
mov
in
aaa
add
cmp
jne
pop
inc
lret
rclb
repnz
or
lret
les
inc
sbb
inc
mov
xchg
adc
mov
shlb
lea
xor
cmc
mov
sub
pop
inc
cmpsb
cwtl
movsb
imul
mov
inc
in
mov
mov
cltd
les
pop
sbb
pop
dec
push
add
xor
popa
mov
mov
sbb
pop
pop
aad
jns
cli
adc
outsl
pop
cmpsb
paddusw
cmpsb
push
movsl
xchg
sbb
add
sub
stc
test
aad
aam
popf
stc
rorl
imul
pop
mov
mov
shlb
sar
adc
xchg
sti
out
push
xchg
imul
cmp
or
cwtl
sub
sub
inc
xor
mov
scas
insb
mov
leave
push
mov
dec
dec
xlat
mov
stc
test
pop
mov
in
scas
fiaddl
mov
stos
or
or
cmp
and
pop
add
mov
lahf
sahf
sti
cmp
and
add
cmpsl
enter
push
push
lock
std
and
cmpsl
fistpl
jle
stc
and
pop
bound
mov
pusha
inc
cmp
orl
pop
bound
inc
jmp
cmp
and
or
aas
loopne
clc
fildl
je
or
jmp
sub
or
pop
jl
adc
lock
inc
ss
xlat
sti
add
dec
fs
adc
xchg
das
xor
xchg
dec
not
cmp
loope
mov
xchg
sbb
add
pushf
shrb
jbe
das
cli
lea
popf
sbb
mov
cmp
or
gs
sbb
nop
push
rol
popa
cmp
nop
jg
adc
xlat
pop
ljmp
fbld
ficoms
out
dec
clc
mov
or
gs
bound
jle
lahf
jne
in
in
cli
cmp
loop
and
loop
mov
out
and
xor
out
mov
jns
popf
test
add
or
sti
repz
andl
orl
out
xor
mov
xor
mov
js
dec
push
repz
orb
mov
xor
insb
adc
sbb
inc
and
stos
mov
push
leave
sbb
faddl
add
stos
push
loop
fwait
xor
cmpsl
pop
rcll
mov
orb
cmp
imul
sbb
movsb
mov
iret
stos
test
aad
or
cli
mov
pop
and
cwtl
shrl
lret
cmpsb
in
pop
in
flds
and
rcrb
xor
pop
test
in
test
push
sbb
push
cmpsl
adc
dec
hlt
aam
mov
sub
inc
jo
addl
pop
dec
mov
push
cmp
cmp
mov
xchg
shlb
push
cmp
lock
xlat
or
iret
add
and
xchg
insl
push
xor
test
lret
dec
jmp
cmp
scas
xor
add
std
jle
lods
sbb
sbb
add
idiv
outsb
mov
repz
rorb
iret
lock
in
and
mov
lock
lds
push
sbb
data16
lcall
popf
iret
addl
xor
not
cs
jae
bnd
into
loope
loope
fdivl
or
pop
iret
imul
and
cmp
push
push
in
and
lret
cwtl
xchg
xlat
cwtl
sub
pop
mov
mov
aam
xor
sbb
cwtl
enter
or
mov
js
es
mov
dec
lock
sub
pop
push
rclb
ds
ret
sbb
lea
add
jae
xlat
shll
push
jno
in
push
jg
loopne
jp
fwait
mov
dec
mov
js
xor
mov
pop
fnstcw
xchg
mov
mov
push
push
rclb
sbb
fucom
adc
xchg
in
sarb
in
arpl
mov
and
cmp
xchg
jle
pushf
mov
stc
push
fnstsw
testl
adcl
insb
pop
add
mov
in
sub
daa
orb
dec
mov
leave
or
test
fmull
into
iret
shl
sub
aad
data16
xor
lock
sti
hlt
pop
insl
mov
mov
stc
jno
xor
push
adc
clc
adc
movb
adc
mov
push
inc
leave
aaa
fdivr
add
jl
rcrb
push
aaa
shll
jne
imul
add
fstl
shlb
mov
add
sub
push
inc
inc
pop
es
sbb
push
data16
stos
or
stos
xchg
sbb
cmp
mov
inc
mov
inc
lods
jg
fmuls
mov
data16
and
mov
out
push
push
cmp
out
inc
sbb
or
push
in
aad
mov
xorl
iret
scas
jo
in
rolb
sub
add
lea
test
es
testb
xor
pop
movsb
and
cmp
cld
push
mov
sub
rolb
push
cmp
xchg
sbb
mov
out
mov
stc
ljmp
cmp
inc
stos
mov
pop
jns
mov
out
jns
mov
dec
adc
jge
jo
xor
and
adc
push
scas
and
ds
outsl
xchg
idivb
push
sbb
push
and
jo
fmuls
adc
imul
jge
iret
push
in
das
inc
add
aam
push
sbb
notl
dec
cmp
cmc
out
add
sbb
cmp
mov
cmp
int
aam
push
jecxz
sub
xor
popa
xchg
adc
push
pop
xchg
push
sub
jg
add
cmp
adc
clc
cmc
push
iret
mov
or
shlb
in
sub
push
int3
mov
xlat
adc
iret
jecxz
cmpsl
xor
mov
xor
push
jo
les
jle
jb
test
scas
js
push
stos
xor
jp
inc
xchg
xchg
gs
add
mov
push
addr16
ret
imul
adc
sub
xor
in
cmpsl
mov
adc
mov
test
leave
xor
insb
mov
pop
ficompl
push
dec
mov
fnstsw
push
jg
cmp
and
pop
data16
xchg
xor
ds
lahf
mov
loope
aas
sbb
out
xor
shll
cmpsb
subl
pusha
jo
dec
leave
repz
cld
xor
out
push
icebp
mov
xor
scas
jg
js
push
mov
dec
nop
pushf
or
stos
xchg
xor
mov
loopne
movsb
cmc
shll
or
xchg
lds
mov
mov
das
enter
cmp
outsb
mov
ss
push
aaa
pushw
add
test
andl
int
mov
and
data16
fucomi
dec
scas
or
ja
arpl
subb
std
inc
jne
sub
out
inc
push
pop
orb
dec
arpl
pusha
jns
xor
shlb
adc
mov
xor
sbb
cltd
int3
or
pusha
xchg
sbb
and
rcl
fimuls
add
stos
xchg
add
cmc
add
popf
xchg
stos
adcl
out
push
sbb
adc
pop
stos
mov
cmp
out
ja
push
jae
pop
mov
sbb
rolb
aaa
jecxz
das
push
mov
pop
lret
lock
ds
ljmp
cli
mov
test
lods
mov
fistl
pop
loopne
arpl
imul
push
outsl
pop
stos
cli
jle
push
mov
cmpsl
movsl
mov
out
xchg
mov
jbe
aaa
jo
into
xor
lods
inc
jp
mov
jns
into
mov
mov
rcll
ficompl
inc
je
sbb
cli
cld
sbb
cmp
xor
dec
rolb
sbb
orb
mov
and
imul
test
cmp
mov
mov
xor
addl
aaa
test
and
push
jl
push
add
dec
xchg
and
or
je
sub
xchg
sbb
push
jmp
push
test
pop
mov
jg
shlb
fsubrl
out
leave
mov
push
outsl
pop
cmc
mov
call
bound
inc
stos
push
jns
mov
inc
push
mov
out
insl
sbb
fstpl
call
mov
mov
out
push
jae
pop
jae
xchg
mov
sub
sub
xchg
cmc
lods
mov
int3
add
xchg
xlat
and
mov
mov
mov
xor
lods
mov
fnstenv
mov
or
cltd
cmp
mov
mov
inc
popf
sub
outsb
xor
jno
jle
sbb
sbb
dec
push
and
in
mov
outsb
call
push
jg
sti
es
dec
xchg
shrb
data16
ss
divl
jno
stc
cmc
inc
sbb
rcr
mov
push
jmp
test
out
push
pop
cmp
sbb
repz
aaa
mov
rcl
fcoms
imul
ss
iret
or
test
fimull
pop
arpl
jo
out
inc
adc
dec
unpckhps
rolb
add
push
bound
mov
mov
dec
js
adc
pop
test
jae
ljmp
xor
add
pushf
cmpsl
inc
mov
rorb
sub
pop
push
or
into
jns
mov
xchg
pop
lcall
mov
push
adc
cmp
aas
cmp
out
aad
popa
mov
cld
jae
jb
nop
sub
push
fwait
cld
pusha
ret
add
aad
addr16
insl
dec
test
inc
bound
repz
repnz
and
jb
gs
gs
mov
jno
mov
shrb
jle
push
mov
in
stos
add
push
hlt
sar
push
in
mov
adc
test
cmpsb
es
mov
int3
jno
push
xlat
push
cmp
je
pop
cmpsb
rcr
adcb
pop
aas
push
test
mov
xor
ljmp
dec
inc
lea
and
pop
sbbb
pushf
push
pop
xchg
lret
lods
jg
in
arpl
dec
mov
ss
mov
aad
jl
xor
mov
movsb
lods
cmp
cmpsb
and
mov
arpl
outsl
and
xchg
xchg
or
nop
adc
or
lods
xor
inc
lea
xor
icebp
pushf
sbb
sub
adc
decb
call
out
movsb
mov
jge
cmp
loope
testl
and
mov
jecxz
add
jns
stc
and
sti
cmp
jb
in
xor
les
and
sub
in
lret
jge
push
xchg
mov
inc
and
test
inc
int
push
jno
jne
and
sbb
mov
clc
mov
dec
call
sub
mov
sub
or
shrb
stc
inc
les
addr16
jmp
daa
imul
outsl
or
mov
add
les
inc
je
cmpsl
jmp
addr16
mov
aad
mov
jge
jbe
stos
dec
in
lcall
add
jmp
lret
not
stos
stos
js
cli
popf
or
sbb
rcr
fldl
arpl
mov
push
cwtl
insb
pop
lcall
ficomps
push
or
mov
fisubl
mov
inc
nop
xor
cmp
jne
xchg
jae
mov
mov
jl
ljmp
in
mov
xchg
sub
outsl
jge
inc
xor
sub
arpl
inc
fldenv
gs
adc
inc
cmp
mov
mov
pop
xchg
movsl
xchg
data16
data16
rcrl
addr16
fstl
cmpsl
mov
dec
jl
mov
mov
scas
xchg
call
rorb
xor
stos
mov
fs
jmp
adc
sbb
dec
cmp
popf
repz
fildll
daa
sbb
adc
daa
hlt
mov
jb
bound
mov
fcomps
mov
jle
popf
sub
shlb
sbb
into
pushf
cltd
ja
mov
jo
aam
push
in
cmpsb
iret
fdivs
sub
xchg
cmc
shll
and
mov
test
inc
lds
mov
cmp
adc
xchg
adc
xor
outsl
inc
pop
test
and
add
dec
push
mov
lods
xchg
aad
mov
and
pop
sbb
aaa
adc
subl
inc
sbb
cmpb
sbb
je
test
adc
cmc
pop
dec
jnp
dec
mov
cmc
fwait
push
in
outsb
push
aas
inc
rcll
inc
mov
xchg
mov
xor
mov
mov
and
and
rclb
rcll
cmp
pop
xor
aaa
loope
pop
cmp
adcb
xchg
fwait
jmp
mov
dec
fisubrl
cmp
xor
xor
andl
jae
mov
clc
iret
movsb
lret
je
inc
xchg
mov
mov
repnz
in
adc
mov
fwait
sbb
mov
pop
and
fmuls
das
out
push
sbb
mov
clc
jo
icebp
xchg
aad
inc
push
pop
test
xor
sub
leave
sbb
call
mov
sub
xchg
pop
push
cmpsb
std
inc
das
call
cwtl
or
jne
rorl
out
push
push
lahf
scas
mov
mov
dec
test
push
and
inc
mov
pop
int
inc
dec
cmp
popa
cld
sbb
cmpb
enter
push
rcrl
adc
xchg
mov
cmp
scas
test
inc
mov
and
lcall
jne
jmp
dec
int3
jo
repnz
push
adc
in
push
int3
or
pushf
mov
jecxz
xchg
into
mov
inc
mov
icebp
jmp
jbe
ficompl
xor
mov
lahf
add
or
inc
mov
lods
in
lret
mov
popf
mov
xchg
enter
mov
mov
sbb
fsubr
cmpb
inc
xor
lahf
sub
cmp
mov
in
fwait
pop
loop
or
imul
arpl
add
mov
out
sbb
cmp
nop
inc
cmp
test
loope
call
lret
enter
jns
xchg
push
mov
imul
lock
mov
pop
mov
xchg
push
ljmp
nop
fidivrs
mov
pop
push
incb
aaa
stos
cmp
and
or
inc
rcrl
rep
lahf
jnp
sti
push
lock
lods
xor
notl
rolb
insb
sbb
inc
pusha
sti
adc
mov
jo
push
mov
pop
jo
dec
aas
lahf
add
icebp
adc
mov
jp
popf
test
mov
jl
stos
ror
imul
dec
leave
idivb
sbb
xchg
mov
lret
xchg
ss
mov
ljmp
je
scas
mov
les
cmp
cltd
xchg
iret
mov
push
jnp
movsb
out
out
repnz
inc
or
mov
jmp
loope
adc
mov
mov
sbb
shlw
adc
test
test
loope
xchg
xchg
sbb
adc
or
andb
push
adc
clc
xchg
xchg
jno
daa
xchg
out
lock
cmc
mov
dec
xchg
push
push
loop
jg
rcrl
add
mov
daa
jae
mov
in
sub
setle
repz
mov
push
pop
and
xor
fnstenv
ljmp
outsl
pop
imul
insb
mov
fadds
dec
popa
insb
jae
xchg
stos
lcall
xchg
int
ret
inc
push
adc
push
fists
nop
push
or
jg,pt
or
inc
sbb
xor
dec
ljmp
add
cmp
pop
icebp
cs
mov
push
lea
pop
mov
in
in
push
sbb
sub
mov
add
jbe
sbb
push
adcl
out
cmp
data16
notb
outsl
mov
insl
add
xchg
lret
daa
sbb
cmpsl
das
clc
gs
pop
dec
data16
sub
xor
sub
int
mov
popf
pop
sarb
push
xchg
mov
or
adc
stc
jo
cs
pop
cmp
not
pop
movsl
inc
sub
dec
sbbl
popa
xchg
mov
add
cmp
or
and
aaa
jg
cld
arpl
daa
jle
xchg
inc
loope
cmpb
test
xor
xchg
inc
leave
popa
mov
fcoml
pop
mov
mov
dec
inc
loope
in
sbb
aaa
idivl
repnz
pop
ret
fcompl
push
pop
ja
mov
xor
and
faddl
dec
test
dec
push
popf
inc
sub
push
test
cmpl
jns
nop
sbb
insl
ret
mov
or
mov
sub
imul
nop
sbb
popa
sub
lret
mov
sub
and
loope
jle
mov
mov
out
cmpsl
pop
pop
fdiv
pop
fwait
mov
divl
xchg
mov
or
pop
push
int3
ret
jp
loope
in
int3
xchg
fcomps
inc
insb
fs
and
or
data16
pop
out
pop
mov
lods
scas
xor
push
jne
ds
shr
inc
loop
mov
push
ret
je
test
mov
jae
mov
ret
test
pop
xchg
jne
or
add
cli
int
pop
or
inc
lds
ljmp
sub
leave
sub
xor
jp
mov
xchg
repnz
lea
dec
scas
repz
xor
into
shll
in
sub
rorl
jmp
or
inc
ret
cmp
dec
sub
imul
add
mov
mov
cs
or
jle
xor
aas
xor
sbb
mov
out
flds
fisttpl
mov
mov
loopne
std
jmp
nop
push
sahf
scas
mov
jne
sarl
push
add
int
mov
cli
sbb
dec
add
scas
mov
mov
in
and
es
loope
std
jo
ret
push
outsl
cmp
cmp
xor
jnp
sub
sub
mov
push
shr
iret
test
mov
cmc
mov
pop
popa
cmc
stc
push
xor
pop
sarb
stos
mov
orb
das
jb
inc
mov
fwait
inc
dec
pusha
popf
dec
cmp
nop
dec
xchg
jl
cmp
ja
xlat
iret
inc
div
mov
das
add
adc
fwait
add
lret
sub
sbb
outsl
push
pushf
mov
std
mov
mov
sbb
pop
inc
aas
lods
inc
pop
daa
pushf
imul
add
xchg
mov
mov
push
repz
aad
arpl
dec
lcall
add
xchg
dec
sahf
pushf
lret
in
push
mov
andps
rorl
fldt
push
cmp
push
scas
add
lds
and
shlb
shll
cld
push
out
dec
lds
push
dec
jp
testb
sbb
add
adc
and
es
ljmp
push
add
jnp
inc
test
add
jp
or
xchg
jg
loope
rorb
jo
ss
out
sbb
inc
je
jbe
jle
cltd
lcall
iret
pop
or
call
pop
js
sti
pop
push
imul
jns
imul
es
lret
std
scas
push
push
mov
mov
push
ljmp
inc
add
je
fwait
xlat
mov
mov
sub
mov
andb
outsl
sarl
rol
icebp
pushf
mov
lcall
daa
mov
xchg
cmp
popf
pop
dec
cmp
adc
imul
arpl
mov
mov
cmp
or
mov
ds
pushf
inc
push
test
cmp
mov
sub
sbb
and
jbe
rcrl
enter
xchg
orl
mov
mov
jae
adc
jnp
cmp
js
add
repnz
mov
mov
adc
or
das
and
dec
jmp
push
rorl
cmp
sbb
add
push
xchg
sbb
dec
adc
mov
nop
add
leave
or
and
imul
jg
testl
popf
ljmp
mov
mov
push
out
inc
xlat
push
out
dec
adc
test
sbb
rolb
jb
sbb
movb
int3
mov
and
outsl
mov
dec
fists
push
jae
pop
or
sbb
lock
pop
into
mov
repz
xorl
fmuls
mov
ss
daa
lahf
xchg
fdivs
xchg
cmpsl
sbb
push
xor
addr16
push
or
xchg
in
inc
minps
stos
cmp
pop
push
jge
ficoms
push
dec
jl
addr16
mov
hlt
lock
dec
popf
mull
or
jb
inc
fistpl
outsb
mov
out
mov
lods
scas
mov
xor
rcrb
scas
sub
cmp
andb
mov
popf
jecxz
add
and
adc
mov
jg
inc
sbbb
stos
lret
pop
or
test
aaa
test
xchg
insl
test
jno
nop
mov
mov
gs
lahf
jns
pop
pop
out
and
lahf
cmp
pop
push
add
fcmovb
add
fists
adc
or
push
or
mov
jecxz
js
jne
lret
test
dec
rcrl
ret
mov
aas
pop
xchg
loopnew
adc
das
iret
adc
sbb
test
test
mov
lds
int
mov
lcall
inc
outsl
cmpsl
xor
mov
push
lds
mov
pop
hlt
in
mov
push
lods
add
mov
cld
movaps
push
mov
js
insl
mov
sbb
pop
or
loopne
xchg
ret
es
roll
jl
and
mov
mov
lret
jl
adcb
stos
push
inc
sub
insl
test
pop
scas
add
mov
sub
inc
xlat
mov
faddl
dec
pop
cmp
nop
jo
popf
fldenv
xchg
cltd
lock
xor
cmp
or
mov
adc
pop
scas
adc
add
movl
ljmp
mov
mov
sbb
inc
std
xchg
hlt
test
sub
lret
mov
mov
rcrl
clc
push
fmuls
push
mov
int3
push
repnz
push
jecxz
testl
loop
ss
mov
bound
ss
xor
pop
ficoml
jns
add
jo
inc
push
jne
popf
or
out
mov
movsb
dec
andl
and
in
add
leave
dec
in
xchg
int
enter
xchg
cmp
pop
pop
shlb
imul
pusha
add
jo
shll
pop
scas
in
or
fucomip
iret
shlb
mov
jle
jne
sub
rcll
test
add
icebp
mov
pop
rol
imul
lds
es
adc
mov
insb
add
je
xchg
fildl
shrl
rcll
push
xor
mov
jmp
lock
lods
push
test
inc
and
enter
cmp
cmp
pop
aad
lahf
lods
push
pop
mov
loope
add
fsubrl
rorb
inc
jmp
xchg
push
scas
popa
aad
outsl
cmc
lret
cmpl
outsb
and
leave
lret
sahf
cltd
movl
shlb
repnz
xchg
dec
xor
xchg
push
and
fiaddl
in
popf
rcrb
jge
jno
aas
test
stos
add
mov
scas
and
xlat
pop
and
sub
xchg
inc
mov
out
push
add
pop
sahf
inc
cmc
and
jns
das
or
inc
pop
jno
scas
jle
dec
cmpl
rcr
aas
adc
addr16
cmp
cmp
and
loopne
lods
cli
or
leave
dec
jbe
jnp
cwtl
fidivrl
ljmp
xchg
mov
mov
or
sahf
sti
sub
add
fdiv
inc
jp
imul
adc
repnz
and
cmc
lods
sbb
js
paddusb
add
orb
sub
int
pop
inc
adc
enter
fscale
pusha
adc
lock
push
popf
mov
inc
inc
cwtl
push
scas
lods
cli
loop
test
cmp
xchg
or
mov
dec
mov
mov
mov
test
xlat
dec
lods
ret
outsb
jae
stos
add
mov
pop
sbbl
xor
mov
adc
pop
push
pop
mov
and
xchg
cmc
and
sub
cmp
cld
xchg
push
mov
nop
outsl
push
mov
lahf
mov
dec
sbb
and
repz
pop
shrb
mov
mov
arpl
lea
xchg
pop
or
inc
inc
sub
xchg
pusha
adc
mov
in
ror
pop
pushf
jns
fsubl
cmpl
pusha
push
jns
sub
in
push
sbb
je
aad
add
sub
pop
sub
ret
and
aad
jbe
cli
and
jns
xchg
adc
dec
add
mov
dec
lds
pop
push
jns
mov
adc
out
shrl
mov
push
jbe
mov
jb
js
mov
mov
or
push
mov
and
and
push
pushf
xor
jg
aad
add
test
enter
popf
xor
xor
stos
mov
fistl
cmp
fistpl
sarb
test
push
mov
lea
int3
ret
shrb
mull
adc
pushf
jp
push
sub
mov
repz
jnp
and
jns
popf
scas
push
xchg
loop
lret
imul
aam
lods
mov
into
push
rorb
push
inc
mov
sti
xchg
pop
mull
movsl
lods
push
dec
into
mov
sbb
add
or
pop
dec
pop
lret
shlb
arpl
lea
add
mov
inc
push
xor
int
add
test
pop
xchg
dec
iret
mov
icebp
inc
insl
or
repz
stos
dec
push
lcall
outsl
push
push
or
int
mov
ror
loopne
push
stos
or
pop
lret
mov
xchg
inc
repz
in
xchg
inc
mov
mov
cli
xor
or
lock
dec
pop
pop
adc
or
lcall
lret
push
mov
out
jmp
aaa
jne
mov
cmp
or
add
cmp
cmc
rcrl
jecxz
sti
dec
leave
mov
mov
aas
mov
cmp
or
pop
in
or
push
pop
mov
insl
push
sbb
inc
adc
lea
mov
dec
outsl
add
inc
mov
movsb
jno
cmp
dec
xchg
sbb
cltd
add
push
inc
stos
popf
xor
xor
jno
sbb
jg
adc
sub
and
jb
sbb
nop
and
jmp
repnz
mov
ret
xor
lea
int3
or
call
lcall
xor
jmp
jg
subb
std
xchg
pop
mov
in
mov
loopne
mov
cwtl
or
cmpsl
and
fsubrs
jg
scas
inc
jecxz
inc
movb
out
idiv
mov
inc
dec
stos
in
ret
rdpmc
mov
pop
lcall
jb
ljmp
add
add
mov
lods
and
and
push
cld
lea
sbb
jbe
data16
imul
inc
insb
or
shll
loop
mov
jo
fisttpll
adc
fdivrs
or
mov
aad
dec
inc
jmp
shlb
into
adc
pop
push
lcall
into
stc
sahf
aad
xchg
ss
pop
cmp
add
or
inc
js
cmc
lahf
fcomps
cld
fisttpll
out
out
jg
adc
aam
fwait
sbb
leave
sbb
test
loop
adc
push
popf
lcall
out
out
and
in
add
orl
mov
pop
push
cli
test
xor
dec
add
xchg
imul
call
jns
xor
in
mov
and
loop
jae
pushf
adc
jge
mov
cmp
fsub
int
or
incl
or
xchg
xlat
jb
cwtl
mov
loopne
mov
xor
insl
or
xor
sub
and
ds
fucom
and
push
stos
xorb
sbb
loop
add
adc
dec
sbb
and
push
jmp
xchg
push
nop
add
rorb
mov
int3
adc
stc
jp
push
push
dec
push
fadd
fwait
icebp
xchg
jnp
ret
xchg
xor
push
call
js
or
pushf
stos
sbb
sti
mov
jb
shlb
or
add
dec
test
ja
repz
sbb
ljmp
decl
aas
sub
jmp
dec
fldl
dec
fdivrl
sub
ret
ljmp
dec
popf
movsb
daa
inc
dec
call
sarl
fwait
jge
mov
subb
jo
cltd
sbb
push
data16
xor
mov
jge
fldcw
pushf
jg
cmpsb
pop
jno
sbb
cmp
out
jp
xor
mov
pop
xlat
rcrb
fnsave
imul
pop
xchg
dec
jge
jb
gs
fmull
enter
lcall
xor
insl
mov
hlt
fidivs
outsb
inc
lods
xchg
vpshuflw
insl
lea
dec
pop
mov
imul
hlt
add
lods
movsb
out
into
or
mov
add
mov
mov
addr16
xor
andb
push
mov
fstps
cs
insl
mov
jno
push
xor
mov
mov
insb
aam
test
nop
mov
or
fwait
addr16
sarl
jmp
jns
jge
notl
js
popa
repnz
or
pop
out
jns
out
mov
push
mov
jg
pop
jle
mov
add
lahf
xor
pop
mov
imul
xorb
xchg
push
test
jge
imul
orb
lret
shlb
pop
jnp
mov
pop
jnp
repz
ret
add
stos
mov
xor
rclb
jmp
push
inc
out
std
add
cli
cmp
ljmp
jle
xchg
lea
mov
mov
cmovge
decb
and
call
mov
mov
les
mov
sbb
lds
in
mov
ret
es
cmpsb
test
clc
scas
xchg
in
in
hlt
pushf
jo
add
mov
jecxz
xor
add
imul
sbb
js
cmp
clc
push
mov
mov
inc
in
sti
xchg
negl
mov
sbb
add
stos
in
test
xrelease
push
lret
fisubrs
inc
xchg
shl
outsl
jo
enter
cmpsl
push
mov
add
mov
fists
insl
call
faddl
cmc
aad
ljmp
dec
ret
ret
xor
dec
dec
push
adc
and
push
adc
fwait
push
xchg
aam
fistps
or
mov
leave
rcrb
ljmp
jnp
sarl
stc
cmp
clc
stos
inc
pop
dec
ss
int3
sbb
nop
shll
lods
mov
or
fbld
fadds
pop
mov
arpl
stos
movsl
loopne
lret
xor
mov
scas
fbld
mov
scas
adc
das
cmp
and
lods
fsubrp
adc
cmp
into
pop
mov
pop
cmp
jge
push
stc
dec
mov
les
leave
ss
loope
icebp
dec
ss
bound
lcall
stos
fidivrl
sub
cmp
movsb
push
sbb
insl
hlt
xchg
mov
inc
pop
aad
and
pop
pop
mov
cmpsl
std
and
fidivl
aas
add
sahf
cmp
mov
cmp
js
notl
cmp
xor
xor
ret
sub
xor
inc
pop
ss
mov
xchg
out
jno
call
mov
mov
fcompl
cld
incl
jle
pop
int3
fistpl
pop
aas
movsb
pushl
psubsb
in
sub
imul
outsb
fsubrl
add
loopne
cmp
sti
mov
jmp
add
xchg
pushf
inc
dec
cmc
call
sahf
ss
and
inc
mov
loope
xor
push
mov
xchg
mov
pop
cld
popa
sarb
xchg
es
clc
jl
orb
fidivrs
jnp
fnsave
mov
lds
mov
adc
loope
ljmp
mov
mov
sub
sbb
jge
out
outsl
inc
mov
adc
cmpsb
fdivrl
cmp
adc
test
ljmp
fiaddl
scas
das
sub
call
cmp
sub
shrl
setb
imul
adc
adc
add
cwtl
call
adcb
push
sbb
sub
xchg
lahf
cmp
lret
xor
addl
mov
lret
or
add
outsl
arpl
xchg
jnp
xchg
xlat
test
imul
pop
sub
nop
jne
xchg
push
adc
push
test
xchg
das
fucomi
push
sub
cmpsl
xchg
push
adc
lahf
cmp
lods
jge
les
in
fisttps
ret
js
in
adc
xchg
and
jmp
and
sti
arpl
pop
hlt
adc
repnz
scas
es
js
dec
aaa
jae
in
testl
cmpl
or
xlat
je
je
test
jnp
adc
sub
out
fucomip
xor
js
data16
mov
inc
jo
xchg
outsb
in
xchg
adc
in
push
popf
in
mov
jg
jne
xchg
and
leave
insb
sbb
sbb
roll
push
and
int
mov
push
xchg
hlt
adc
cwtl
cwtl
or
lahf
jo
fisubs
fcoml
cmpsl
sub
xor
pushl
cs
add
pop
ja,pt
inc
imul
xor
cltd
add
cwtl
sub
sub
test
aam
hlt
jp
xor
fs
inc
dec
sbb
ds
xchg
or
jbe
shrb
popa
mov
filds
jae
movsl
jo
roll
in
add
jecxz
xchg
icebp
js
jb
pushf
and
mov
or
call
roll
xlat
mov
test
pop
inc
mov
cmp
lret
es
push
mov
push
mov
lds
ret
sbb
outsl
xchg
mov
sub
pusha
fmuls
or
movsl
adc
inc
xchg
das
orb
int3
mov
inc
xchg
cmpsb
xchg
mov
arpl
inc
cli
mov
inc
adc
add
and
mov
xchg
bound
ds
mov
adc
jo
and
xchg
fwait
loope
adc
lcall
pop
out
pop
cmc
jnp
lret
mov
out
ljmp
xchg
sbb
push
shl
lea
lahf
aaa
inc
int3
xlat
mov
sbb
nopl
shlb
push
push
jg
sub
adc
push
das
inc
jge
leave
test
push
sbb
sti
adc
lcall
std
mov
pop
cmpsb
jbe
inc
test
jae
hlt
xor
fnstcw
test
test
jge
dec
mov
xchg
dec
push
mov
add
subl
test
insb
rclb
andb
sub
test
mov
mov
int3
fsubs
sbb
out
jle
xor
nop
lret
int
add
mov
mov
xchg
cmp
sub
xor
call
loope
cmpsb
daa
sub
adc
test
xor
mov
adc
add
xor
imul
rclb
lods
repz
lea
movsb
xchg
outsl
lcall
shlb
and
outsl
sbb
cmp
mov
aas
or
mulb
aad
xor
clc
push
mov
cld
xor
insb
jmp
lahf
or
jmp
adc
sbb
out
sbb
cmc
inc
cmp
push
ret
mov
in
xlat
push
mov
sbb
dec
jnp
fcomi
push
mov
dec
mov
cltd
mov
mov
arpl
cmp
and
mov
outsl
add
pop
push
xchg
add
movsb
aad
or
push
lret
mov
adc
inc
movsl
lret
pop
pop
dec
icebp
or
and
aas
test
lret
or
jle
lcall
int
test
movsb
rclb
ds
dec
in
stc
sbb
push
dec
in
sbb
adc
test
or
add
inc
inc
stc
add
sbb
incl
add
loopne
pop
jnp
xor
xchg
aam
add
int3
adc
adc
cmp
fcmovbe
mov
pop
mov
cmp
inc
outsb
hlt
std
addr16
test
iret
fmul
and
mov
xor
push
mov
adc
sti
push
jmp
mov
out
dec
mov
sbb
push
loop
sub
and
subb
out
add
stc
sub
mov
push
insl
rcl
js
mov
mov
cmp
sub
test
out
or
shlb
es
inc
adc
call
ret
andb
push
or
repnz
add
and
mov
lret
and
sub
jae
cmp
or
or
push
ffreep
cmp
mov
push
ds
std
and
in
and
repnz
add
stos
pop
pushf
mov
lods
sub
hlt
inc
xchg
arpl
aaa
icebp
aad
faddl
ss
gs
sub
mov
push
fdivr
dec
dec
mov
mov
push
ss
rcrl
sbb
movsb
pop
mov
adc
in
push
rcl
adc
cmovg
arpl
cmp
sub
dec
mov
adc
call
dec
lret
jnp
jae
xchg
adc
adcl
or
cmp
roll
or
movsb
cld
cmpl
push
shrb
inc
sbb
mov
out
and
pop
das
adcl
popa
in
scas
jl
sbb
jle
leave
sbb
mov
test
push
test
clc
cmp
xchg
xor
adc
add
push
push
jp
gs
scas
inc
nop
inc
and
js
mov
add
enter
pop
cwtl
add
sbb
js
xchg
aaa
and
jg
xchg
ss
push
mov
movsb
xchg
cmpsl
add
mov
jge
test
or
ja
adc
das
mov
lock
cwtl
iret
in
mov
pop
xchg
out
adc
xchg
xchg
sar
sbb
fsubs
dec
mov
sub
mov
xor
cli
inc
pop
jno
sbb
cmpsb
xorb
pop
lds
push
movsl
push
in
cltd
sbb
cmp
rolb
sbb
test
ds
inc
mov
sub
lea
xorb
xchg
pop
xchg
lea
icebp
inc
and
push
mov
data16
cmc
inc
mov
adc
into
insl
int
push
or
and
mov
cld
cwtl
xchg
mov
xchg
getsec
cs
cmp
loope
push
mov
xor
rorb
popa
outsb
xlat
imul
sbb
push
test
and
leave
rcr
test
sbb
out
sbb
loopne
push
push
push
push
inc
int
pop
in
movsl
sti
xchg
mov
notl
decb
mov
scas
out
mov
sbb
push
out
cmp
sub
inc
lock
adc
xchg
lods
test
out
ret
mov
jno
pop
gs
jo
or
inc
ja
add
sub
js
insl
pusha
sub
adc
adc
shlb
cmp
mov
jnp
xchg
mov
mov
scas
imul
cmpsb
ret
inc
adc
fs
sbb
dec
stos
or
mov
inc
bound
sar
mov
pop
cmp
jae
cmpsl
jb
sbb
stos
sarl
in
mov
loope
inc
les
out
dec
and
call
mov
mov
jle
fs
dec
xchg
pop
fstpt
data16
mov
inc
inc
imulb
xchg
cmp
xchg
addr16
js
jg
and
fcoml
add
mov
lret
push
and
mov
fmull
mov
sub
hlt
or
in
fcmovb
xchg
jbe
mov
cli
inc
adc
ret
repz
pop
sahf
stos
cmpsl
ds
scas
lds
push
mov
jns
ja
leave
ds
inc
idivb
lock
adc
sbb
sub
mov
add
lea
arpl
push
js
cli
scas
xchg
popa
push
cmp
xchg
mov
and
cli
rsm
rol
arpl
push
sbb
xchg
jg
inc
add
mov
add
clc
test
in
lahf
shll
mov
add
add
and
out
xchg
ficompl
sbb
movsb
xor
mov
aas
ljmp
xor
or
dec
mov
les
or
and
mov
jle
push
jmp
pop
clc
jp
aam
pop
or
push
mulb
jns
push
mov
lahf
arpl
push
push
sbb
mov
fdivs
lock
mov
shll
xor
push
mov
xchg
cmp
leave
jne
fisttpll
rol
and
inc
xchg
and
out
xchg
std
mov
arpl
leave
xlat
push
fildll
xchg
ja
lods
sub
test
jb
mov
mov
pop
lods
add
sub
mov
js
add
iret
inc
rcrb
adc
dec
mov
add
pop
loope
imul
lcall
adc
xchg
pop
adc
test
or
fwait
bound
int3
mov
ret
adc
xor
sub
ds
pop
sbb
xchg
mov
pusha
bound
sub
sbb
pop
add
pop
out
jmp
mov
fldenv
pushl
jl
push
cmp
imul
dec
pop
into
out
or
xor
iret
aaa
inc
or
jecxz
data16
jp
cli
lahf
jno
jbe
out
cmp
in
mov
and
cltd
mov
cmp
js
sbb
mov
imul
pusha
in
call
mov
mov
mov
mov
movsb
into
rolb
or
mov
xchg
test
dec
mov
push
aaa
js
mov
push
shrl
dec
push
jmp
mov
fs
roll
dec
mov
mov
leave
inc
test
movsl
mov
xchg
fwait
or
mov
cmpb
and
insl
int3
or
cmp
ret
fwait
jle
cmp
mov
push
xchg
cltd
mov
push
pop
lahf
mov
mov
fstl
mov
xchg
mov
roll
call
push
mov
add
or
mov
clc
sti
fs
pop
jne
ret
js
aam
inc
enter
mov
dec
push
xor
jns
pop
mov
sti
testb
sbb
lods
cltd
jns
add
add
rcl
inc
or
stos
pop
xor
insb
int
cmp
cmp
mov
or
jb
mov
or
and
xor
inc
aas
out
inc
push
or
test
lods
fwait
sbb
vcvtdq2ps
sub
mov
imull
les
mov
iret
dec
cltd
imul
arpl
add
insb
test
enter
cmpsl
or
in
pop
sbb
cli
cmpsb
scas
in
ds
lahf
aaa
bound
and
mov
rorb
rcll
mov
jne
push
test
mov
lock
sub
dec
mov
mov
fidivrl
pop
enter
or
sub
lds
fsubr
fldenv
mov
push
mov
pop
testb
dec
sbb
cmpsb
fistps
daa
ja
cmp
mov
sbb
out
out
enter
fidivrl
push
inc
lahf
ficoml
xor
lret
jnp
pop
xor
ret
jg
jne
mov
pop
daa
xor
leave
call
or
or
pop
cmp
inc
mov
cmp
ret
jb
pop
shl
mov
push
jae
out
pusha
adc
xor
and
sub
pop
dec
shr
dec
xchg
cmc
sub
loope
sub
lea
mov
shrl
int3
ret
mov
jb
cmp
xchg
cmp
rorb
or
outsl
xor
inc
push
mov
das
pop
or
sub
nop
push
mov
adc
cmp
pop
fcomi
arpl
push
xor
mov
subb
pop
jmp
sbb
sar
ja
fs
outsl
lret
nop
jne
jns
jno
mov
cmpsb
mov
or
sbb
mov
inc
cmpsl
pop
fdivrs
sbb
inc
fisttpll
jmp
or
repz
lahf
push
sbb
xor
xchg
mov
cmc
mov
adc
add
jnp
call
mov
idivl
pop
arpl
dec
push
notb
ffreep
imul
sub
insl
dec
into
dec
push
xchg
movl
das
bswap
stos
sbb
mov
daa
mov
insb
sti
subb
test
je
icebp
and
fsts
xor
xor
fcmovb
adc
cmp
imul
or
cmp
jmp
dec
jo
or
xor
pushf
scas
xchg
mov
sti
scas
cltd
repz
and
test
setne
sub
or
and
int3
add
jnp
mov
daa
pop
stc
pushf
xchg
mov
adc
add
lret
subb
dec
aam
dec
addr16
jge
stos
cmpb
jecxz
push
xor
jle
mov
sub
lret
fsts
into
sub
jecxz
push
in
movsl
insb
add
lea
add
div
notb
aam
daa
dec
in
mov
jb
pusha
cs
xor
fmull
cmpb
bound
hlt
cmp
lret
lds
xor
data16
popa
jb
mov
sub
lea
sbb
jl
cltd
add
mov
inc
stos
xchg
lcall
cs
xlat
sub
enter
dec
ds
ss
pop
inc
xchg
xchg
fwait
adc
sub
adc
scas
jecxz
mov
int3
push
neg
movsl
push
subl
idivb
inc
arpl
mov
pop
dec
sbb
push
test
and
in
pop
mov
adc
xchg
jmp
sbb
sub
inc
dec
imul
ljmp
add
xor
sub
pop
in
push
aaa
sbb
hlt
mov
rolb
push
or
adc
mov
fdivs
rorl
test
pushf
ret
sub
cmp
mov
mov
mov
jnp
sbb
stc
lods
xor
stc
pop
and
in
repz
or
inc
jl
mov
xchg
jns
in
iret
add
add
fsubrs
cli
inc
or
mov
lods
scas
mov
dec
enter
and
or
std
adc
loopne
push
push
jg
bound
cmp
lods
mov
jae
pop
test
es
cmp
mov
bound
xchg
mov
push
push
cmpsb
xchg
push
sahf
popf
adc
nop
cmpsb
lret
xchg
adc
pop
pop
repnz
dec
add
mov
int3
and
adc
loope
shr
rolb
sbb
push
push
adc
cmpsb
lea
adc
add
push
adc
jb
jg
mov
rcrb
inc
nop
add
sub
cld
outsb
mov
jnp
jp
outsb
adc
call
fidivl
and
add
out
test
fiaddl
test
and
fdiv
fstl
jae
jp
sub
mov
mov
and
imul
ret
pop
push
pop
push
movsl
rcrb
aad
push
ja
sub
inc
jbe
gs
clc
push
xor
filds
jo
or
out
cmp
cmp
das
cltd
neg
sbb
lds
lods
sahf
lods
ja
cmp
and
lahf
adc
jp
shlb
bound
sbb
push
mov
sub
add
daa
scas
sub
xchg
ret
aaa
inc
or
add
sub
mov
sbb
leave
push
sub
mov
adc
sarb
and
ret
int
pop
cltd
incb
mov
pop
push
lret
scas
and
and
push
pop
push
fwait
push
adc
sbb
movsl
mov
xor
mov
pop
aad
stos
cwtl
add
lea
sarb
jle
dec
xchg
mov
mov
xchg
in
pop
int
jne
jns
inc
xor
es
rol
jle
add
xchg
add
cld
sub
sbb
add
stos
xchg
cltd
fnsave
adc
push
cmp
adc
sub
mov
pusha
mov
leave
mov
bound
or
and
out
jae
cmp
xchg
sbb
jge
mov
pop
adc
les
sbb
and
mov
clc
adc
xchg
mov
and
cmpsl
push
and
inc
jge
xlat
arpl
gs
leave
pop
punpckhbw
orl
sbb
cmpb
dec
mov
imul
stc
ljmp
das
push
pop
std
mov
adc
inc
dec
clc
adc
ret
mov
xor
sub
jb
addl
xor
add
adc
int3
pusha
dec
mov
rorl
inc
push
outsb
popf
es
push
mov
adc
pop
and
sbb
xor
lcall
in
jl
std
imul
stc
mov
push
out
insb
sbb
imull
or
pop
jl
dec
leave
and
pop
jp
addr16
scas
jns
insb
out
pop
mov
xor
lret
mov
mov
cmpb
int3
cmc
out
inc
sub
cld
push
dec
pop
xor
add
sti
xor
jp
sbb
and
mov
pop
push
mov
lods
push
mov
aad
xchg
iret
nop
in
clc
bound
popf
arpl
mov
fbld
pop
mov
enter
pusha
addl
cmp
push
cs
push
inc
xchg
add
lods
sub
adc
fcomps
pop
test
xchg
or
sti
test
test
jbe
jnp
or
adc
ror
or
jae
jnp
aam
push
mov
mov
aam
jp
pusha
add
ret
lcall
or
loope
xor
xchg
jle
dec
adc
sub
dec
loop
pop
sbb
pop
mov
jle
inc
cwtl
jp
shll
ret
cmp
shlb
cmpl
add
mov
jle
fadds
xchg
fmull
mov
jle
mov
insb
adc
dec
jne
outsl
mov
arpl
mov
mov
add
pop
push
sub
push
and
sbb
sub
sbb
out
lds
andb
jmp
adc
cmp
xchg
lock
jns
dec
jle
xlat
icebp
cwtl
cmp
sbb
inc
in
mov
mov
pop
inc
dec
cli
int3
mov
inc
mov
mov
fs
add
push
dec
or
in
mov
sub
inc
mov
mulb
adc
push
sub
cs
in
mov
fwait
jp
test
insl
cmp
jle
lret
int
add
scas
fidivl
lds
jp
and
add
mov
ljmp
pushf
rorl
mov
lock
insb
jge
pop
pop
scas
dec
pop
mov
mov
sub
mov
aad
pop
pop
cmp
cmp
sub
sarl
dec
pop
bound
xchg
dec
outsb
aam
xchg
push
ret
sub
fcom
mov
mov
imul
sti
pusha
add
xchg
stos
mov
iret
add
sbbl
sbb
xor
or
repnz
xchg
mov
sbb
enter
es
sbb
xchg
push
pop
jecxz
scas
lahf
jp
push
scas
pop
je
out
and
mov
sbb
or
and
insb
int3
xor
repnz
adcl
into
fs
cltd
in
int3
mov
mov
arpl
add
mov
cli
jge
fucomp
dec
jp
dec
loop
sub
enter
or
mov
sbb
mov
push
xchg
popa
add
fisubrl
call
stos
jae
cmp
loop
xchg
inc
jae
aas
sub
mov
outsb
pop
pop
sbb
dec
fdivs
in
mov
adc
aas
bnd
jae
sbb
and
and
lret
lcall
inc
xor
lods
cwtl
test
push
xadd
incl
mov
or
pusha
jmp
and
sbb
mov
pop
cmpsl
jbe
dec
mov
cld
jp
movsl
mov
aas
or
loope
rolb
xor
sub
in
iret
arpl
xor
and
outsl
jecxz
mov
jge
mov
fdivr
or
and
push
mov
outsl
test
loop
mov
jg
xchg
cmpb
sub
xchg
push
cmp
sbb
repnz
mov
adc
mov
loope
loop
and
push
push
movsb
pusha
sub
dec
insl
pop
cltd
xchg
ret
ja
adc
sbb
push
cld
or
xor
cli
xchg
jnp
sub
push
push
cld
popa
adc
xchg
xchg
xchg
cld
out
mov
ret
add
cmp
fldenv
inc
ja
lret
out
jno
int3
aad
xchg
cmp
adc
pop
lahf
dec
lods
inc
enter
adc
lahf
and
mov
std
and
loop
xor
jle
cmpsb
mov
push
in
and
out
scas
or
push
pusha
sub
arpl
nop
push
sub
push
jno
cltd
and
test
dec
ja
xor
aaa
cltd
sub
outsl
push
mov
cmc
cltd
xchg
loop,pn
in
aad
cmp
in
unpcklps
add
xchg
adc
in
cli
add
inc
push
fisttps
int
aas
sbb
movaps
insl
jecxz
jl
pop
cmc
scas
orl
dec
mov
cmp
jb
call
dec
clc
cmc
lret
add
icebp
test
lods
jg
add
xchg
in
sti
int3
lods
mov
in
or
hlt
test
cmpsl
enter
add
bound
push
cmp
sub
or
and
in
cmpsl
imul
fidivl
aas
in
ret
sub
mov
or
rclb
into
pop
call
lret
int
dec
lods
mov
fnstsw
xor
outsl
insb
and
add
dec
xchg
sbb
add
mov
lods
rorl
mov
adc
pop
add
sub
movl
sub
out
jae
push
mov
fisubs
sub
cmpsl
jg
mov
dec
cltd
leave
lahf
daa
sub
mov
jl
sbb
jns
popa
xchg
fwait
pop
mov
cmpsb
mov
cmp
dec
pop
in
ljmp
or
pushf
sub
test
xchg
pop
pop
mov
repnz
test
sti
daa
insl
iret
dec
pop
mov
jns
negb
clc
xchg
jb
jmp
lahf
dec
jae
mov
dec
aas
aas
push
and
or
cmp
inc
mov
insb
and
push
idivb
jmp
xchg
pop
mov
or
sti
push
mov
fldenv
and
jl
adc
es
mov
fcoms
popf
mov
mov
xlat
test
test
cmpsl
or
orb
stc
les
lea
adc
and
hlt
sti
add
and
mov
inc
cltd
mov
cmc
sbb
pop
mov
sbb
negl
in
and
ror
xchg
inc
fidivrs
pop
int3
dec
out
pop
fisubl
data16
jecxz
xchg
push
or
adc
pusha
cli
scas
sub
xchg
ds
lea
or
mulb
test
pop
lret
repnz
sub
js
sub
loope
mov
pop
into
dec
nop
cmp
test
in
out
xor
lcall
pop
push
int3
pop
addl
stc
ljmp
push
movsl
sbb
insb
add
mov
or
dec
hlt
inc
xchg
sbb
cmpsb
subb
jge
test
add
out
xchg
subl
dec
pop
lods
sub
outsb
inc
movsb
call
call
mov
std
xchg
scas
fmuls
call
adc
out
test
test
les
popf
andl
fidivl
scas
ja
dec
sub
pop
mov
sbb
mov
test
lret
pop
ja
xor
sbb
xchg
cmpsb
fidivs
mov
mov
shr
cli
sub
sbb
push
and
ja
mov
mov
sbb
xchg
mov
lds
inc
ljmp
mov
mov
pop
repz
mov
insb
xchg
adc
les
lcall
push
test
push
sbb
sbb
mov
pop
adc
mov
mov
ss
daa
and
ljmp
cmpsb
ljmp
xor
inc
ret
in
fldenv
sub
mov
jne
mov
mov
aas
sub
jne
sub
mov
add
dec
in
movsl
xchg
sahf
jo
nop
inc
cmp
int
jecxz
xchg
mov
fadd
mov
sbb
cmp
inc
jp
mov
cmp
addl
icebp
enter
cmpsb
cmp
or
or
jns
mov
xor
in
dec
xchg
sub
je
sub
adc
aaa
sub
mov
into
push
lcall
fidivs
jmp
lcall
mov
push
fidivrs
jae
ljmp
ljmp
ljmp
inc
push
aas
fmuls
das
jmp
sbb
daa
xchg
push
loope
outsl
lods
mov
xchg
repz
aam
mov
mov
mov
inc
sub
sbb
test
stc
fisubrl
adc
das
stos
ss
pop
pusha
or
lds
fistpll
pushf
adc
add
int3
andl
outsb
enter
bound
xchg
ja
fs
stc
inc
mov
mov
pop
in
cmp
mov
pusha
loopne
clc
xlat
hlt
cmp
jnp
add
fcoms
stc
adc
ljmp
pop
xor
popa
inc
jmp
sbb
jne
jbe
add
daa
loop
inc
jmp
cmp
push
ret
and
add
xchg
psrld
outsb
mov
mov
in
xor
cmp
sbbb
and
daa
pop
lods
shl
fildl
and
cmpsb
ss
xchg
mov
sbb
sldt
fsubrs
cmpsb
dec
aaa
pusha
enter
popf
les
stos
cmp
add
icebp
mov
add
push
insb
cmp
out
jecxz
fstps
pusha
in
daa
mov
and
mov
or
insb
es
fdivrs
adc
sub
fldcw
mov
mov
dec
test
test
dec
adc
scas
and
mov
lea
mov
mov
sub
arpl
push
mov
jae
incl
mov
lods
insb
jnp
mov
pop
jg
push
mov
outsl
enter
push
scas
xor
ret
subb
mov
lea
xchg
or
enter
gs
mov
sbb
das
mov
and
jbe
int3
sub
dec
aas
in
mov
mov
push
les
push
enter
mov
dec
mov
jnp
sbb
imul
and
and
xchg
pop
lods
cld
inc
pop
inc
xor
mov
movsb
sub
dec
aas
fistl
daa
fs
add
mov
cmp
dec
ljmp
mov
imul
pop
dec
outsl
test
into
mov
cmp
cs
mov
push
iret
sbb
loopne
jbe
fdivs
push
loopne
xchg
mov
xlat
sub
dec
popa
push
stos
lds
dec
mov
mov
or
add
mov
ret
jnp
adc
push
xor
adc
push
mov
cltd
ret
repz
mov
bnd
fisubs
xor
fistl
pop
cmp
mov
arpl
cmc
xchg
sub
push
push
mov
orb
mov
push
ss
cltd
sbb
addb
fcompl
cltd
enter
sub
test
addl
cmp
cmc
sbb
repnz
cltd
pusha
add
clc
xorb
in
add
mov
out
ror
dec
pusha
enter
inc
scas
iret
imul
ja
push
xchg
int
cwtl
fldt
outsb
pop
xor
mov
xchg
test
push
mov
sti
test
jmp
mov
fwait
jg
nop
mov
out
stc
aaa
adc
test
addl
mov
faddl
sub
jp
push
pop
adc
push
cmp
fcomps
mov
fnstsw
nop
rcrb
sbb
cwtl
jle
mov
adc
out
stos
in
insl
scas
mov
xor
pop
mov
mov
js
xchg
and
mov
das
push
je
xor
loope
adc
push
aam
sub
push
ljmp
mov
xlat
inc
xor
or
clc
dec
stos
fwait
int
push
dec
mov
cli
ss
sahf
and
outsl
stos
out
inc
cmp
xor
popf
mov
mov
jmp
leave
xchg
ret
outsl
xchg
mov
pop
cmc
inc
pextrw
xchg
fstps
lahf
test
cmp
mov
gs
pop
mov
lods
or
pushf
flds
icebp
jno
mov
mov
pop
jmp
test
enter
loopne
cmp
pop
mov
pop
or
mov
stos
xchg
push
adcb
mov
adc
mov
dec
aam
lret
in
sub
cmc
lahf
in
cwtl
adc
mov
mov
jge
andb
adc
ret
adc
add
jne
jecxz
dec
xchg
add
sbb
test
fnstcw
lret
pop
adcl
stos
pusha
jbe
imul
and
xchg
lea
punpcklbw
divb
lods
push
sarl
fstp
jmp
loope
fldt
outsl
xchg
vhaddps
cmp
sub
xor
or
mov
mov
shlb
js
nop
stos
je
je
roll
cmpl
mov
mov
dec
movsl
or
js
std
mov
pop
mov
repnz
sti
pop
filds
ret
test
test
and
mov
or
xchg
jne
and
int
mov
notb
jg
jp
mov
test
in
lret
and
or
pushf
xor
sbb
mov
ret
out
stos
or
pop
push
out
fwait
daa
mov
cld
shlb
and
pop
pop
and
repnz
out
or
mov
stos
leave
stos
scas
jle
cmp
dec
mov
jmp
mov
cltd
into
jecxz
mov
dec
loopne
jle
lret
lahf
mov
enter
loopne
xchg
ljmp
ss
dec
dec
xchg
mov
call
pop
sub
jp
loop
sarl
mov
dec
ret
fistpll
pop
push
and
mov
mov
dec
jmp
xor
fidivrs
mov
outsb
lds
sbb
and
mov
xlat
push
push
mov
cmp
inc
add
mov
aam
jle
add
mov
inc
mov
pop
inc
push
jb
fstpt
mov
or
cli
jle
shlb
imul
fwait
loope
shlb
fsubrp
mov
cmpsb
aaa
aam
ja
movsl
jbe
dec
daa
hlt
adc
jl
repnz
loope
fsubr
icebp
xchg
xchg
stos
aam
mov
test
jmp
cmp
dec
sub
xor
cwtl
sbbb
cmp
mov
fs
mov
jae
popf
data16
xor
std
out
int
sbb
aas
xchg
mov
sub
cmp
decl
jp
insb
sar
repz
pcmpeqb
xor
or
int
mov
loope
imul
sub
or
mov
xlat
and
scas
add
fisttps
lret
pop
mov
push
sbb
out
lods
mov
xor
add
jmp
xor
lods
mov
shlb
arpl
in
adc
lea
push
sub
repnz
push
cmp
jae
add
add
dec
mov
iret
mov
jmp
sbb
inc
stos
add
mov
adc
sbb
in
push
adc
loopne
stc
sub
xchg
inc
pop
jg,pn
cmpsb
cld
fwait
lret
subl
es
fidivl
std
mov
push
adc
inc
in
shlb
push
nop
frstor
pop
sbb
sub
enter
xchg
out
nop
cmc
push
cwtl
sub
adc
fstpl
jne
ds
pop
sub
lahf
xor
push
and
xor
idivl
dec
or
dec
sbb
pop
ret
mov
sbb
ljmp
andl
fnsave
xor
pop
mov
movsl
push
pop
xor
push
scas
mov
push
iret
mov
lret
push
inc
adcl
gs
sub
xchg
pushf
cmp
dec
push
jecxz
mov
jle
scas
mov
inc
shlb
inc
cmp
lods
or
sbb
mov
les
test
fs
pop
and
sar
lods
jbe
pop
test
insl
inc
xlat
ret
cmp
xchg
or
add
jb
in
push
in
cld
pop
and
jecxz
inc
js
dec
mov
push
jmp
mov
shlb
fwait
outsl
loope
jae
pop
dec
mov
adc
nop
jae
dec
lcall
in
and
cmp
je
arpl
fisubrs
mov
jns
cmpsb
adc
rcl
outsb
je
cmpsb
cltd
dec
xchg
add
outsb
lea
mov
cwtl
aas
es
and
mov
add
lea
sbb
mov
inc
push
dec
mov
rol
or
mov
dec
cmpsb
mov
ds
add
fdivr
mov
pop
jecxz
and
push
arpl
sbb
xor
xchg
cwtl
mov
cmc
mov
adc
dec
jmp
mov
out
push
mov
cli
pop
jns
cs
xor
in
cmp
stc
cli
dec
xor
xchg
pop
push
pop
lock
xchg
sub
out
popa
orl
pop
pop
sbb
xor
push
pusha
pushf
addr16
cmp
shlb
xor
adc
dec
push
push
ret
std
xlat
popf
hlt
stc
jle
out
sahf
add
jne
jp
jle
les
dec
push
test
arpl
cmp
addb
shrl
lahf
mov
sub
dec
fstps
sub
xchg
xor
add
mov
cmpsl
sub
push
outsl
into
sbb
push
xor
rorb
mov
mov
push
fstl
insb
pop
xchg
les
mov
inc
mov
sub
fldl
iret
xchg
aaa
stc
lds
sub
mov
test
xor
adc
ret
loopne
cmc
scas
pushf
push
xor
in
jmp
push
adc
or
or
adc
add
in
mov
scas
daa
xchg
fwait
mov
rolb
in
pop
popa
bound
or
xor
in
ret
adc
add
add
fbld
in
inc
repnz
dec
push
dec
sahf
pushf
and
int
push
add
add
push
jle
sti
enter
jno
xchg
xor
xor
lods
xor
loop
test
push
xchg
inc
icebp
xchg
sub
and
inc
add
push
pop
addl
sub
xor
mov
repnz
and
lahf
outsb
subl
or
loope
pusha
lret
ret
shlb
pop
stos
sub
xchg
push
les
sbb
je
sbb
dec
dec
lret
sbb
inc
daa
cmpsb
push
pop
push
mov
lahf
lret
gs
popa
loopne
pushl
in
enter
inc
in
insb
sarl
adc
mov
xchg
movsb
and
bound
xor
outsl
sbb
fstpt
stc
sub
imul
pop
xchg
mov
iret
inc
je
inc
pop
and
ljmp
sbb
in
push
pop
into
test
mov
add
icebp
insl
mov
ret
or
into
cmp
xor
clc
shrb
bswap
rcrb
iret
sub
mov
jbe
js
mov
test
and
daa
cmpsl
into
cmp
ljmp
ret
fdivrs
xlat
cwtl
lret
xor
scas
stc
imul
mov
int
imul
stc
scas
cs
mov
inc
mov
ret
push
cmpb
into
adc
sti
push
insb
in
sub
adc
inc
cmpsl
xchg
dec
dec
loopne
cmp
or
fsts
imul
loope
or
mov
mov
das
mov
arpl
and
pop
adcl
xchg
into
mov
jno
cmc
ficoml
test
xchg
xchg
lods
bound
iret
and
stos
or
push
pop
sub
es
jmp
dec
jae
jge
xor
dec
push
or
push
mov
lock
subb
cmp
xor
jle
sbb
jg
dec
sub
fcmovbe
fsts
or
bound
dec
int3
pop
sub
dec
mov
pop
pop
or
loope
push
add
add
test
fdivrl
or
push
pop
out
cltd
cmpsl
pop
lods
in
mov
fsubs
nop
or
mov
mov
dec
lea
fcomps
out
xor
push
mov
fwait
jne
je
cmpsb
lea
mov
push
fisubrl
add
loopne
in
add
test
int3
movsb
or
push
mov
dec
hlt
fcoms
jl
enter
and
pushf
sbb
mov
popa
xchg
hlt
sahf
leave
jp
stos
add
mov
pop
jnp
jge
nop
or
dec
mov
gs
mov
sbb
xchg
pop
in
mov
das
out
in
fiaddl
negb
out
leave
push
stos
js
push
out
je
pop
pop
mov
or
push
inc
sub
arpl
xchg
jns
lock
pop
lock
jg
testl
sub
mov
sub
inc
fldt
mov
fwait
dec
lock
add
cmpsl
hlt
mov
adc
aad
cwtl
movsl
out
shll
call
rorb
jb
fs
sti
add
adc
ljmp
insb
add
add
orl
mov
xchg
aaa
imul
fcoml
and
rcll
aaa
mov
mov
pop
dec
xchg
inc
bound
jns
popa
xchg
mov
or
sub
nop
iret
fistpll
aad
jns
dec
fistpll
mov
lock
jae
aad
mov
sub
lret
cmc
sbb
hlt
jg
cmc
or
addr16
imul
cltd
sbb
pop
and
lods
popa
mov
mov
lret
test
gs
ret
xchg
mov
je
sub
mov
jge
cmpsb
jnp
divb
aaa
xor
push
lret
fwait
sbb
imul
dec
rclb
lret
mov
push
xor
lret
rorb
imul
push
sub
stos
mov
cmp
repz
inc
or
and
xor
push
cmp
cli
inc
push
pushf
xor
movsb
sbb
mov
xchg
mov
pop
mov
pop
pusha
sub
aas
mov
insl
add
loope
fidivl
xchg
mov
cmp
les
dec
add
hlt
pop
dec
pop
lock
mov
jno
mov
sbb
mov
sbb
add
in
in
adc
push
mov
inc
loop
sti
and
jg
cmp
sub
push
add
mov
fs
xchg
mov
mov
popf
xchg
loop
mov
adc
decb
fcompl
ret
jp
in
fldt
loopne
loope
lahf
mov
jnp
sahf
and
fucompp
js
and
or
push
mov
out
aad
cmp
lahf
outsl
icebp
mov
adc
and
dec
jne
mov
shlb
push
pop
clc
inc
adc
ss
test
xchg
inc
xor
leave
imul
sub
xchg
and
xlat
jle
push
cld
sti
mov
daa
jecxz
popf
leave
nop
ja
sub
and
mov
aaa
es
das
pushf
imul
jbe
jbe
fiadds
add
push
enter
cmpsl
nop
xlat
jb
dec
dec
push
testb
dec
jb
add
push
in
out
je
aam
inc
hlt
mov
repz
cmpsb
add
nop
mov
inc
sbb
and
imul
mov
repz
out
sub
shl
pop
add
push
mov
xchg
adc
cmp
test
stc
cld
cmp
movsl
push
jno
add
daa
mov
int3
fs
push
or
cmp
ljmp
int3
lods
pop
fs
jg
fldenv
xchg
mov
xor
or
inc
sti
fcomps
pop
dec
insl
cmp
mov
lods
jp
and
nop
aam
imul
dec
cmpsl
cmpsl
cs
xchg
xchg
lods
add
loop
add
sbb
insl
clc
jp
xchg
fldcw
jg
push
pop
jg
mov
inc
dec
sti
or
int
push
adc
test
out
jb
bound
movsl
or
in
pop
sub
sahf
pop
imul
cmp
push
push
xchg
pop
ret
outsl
fs
loop
lahf
js
pop
push
fcompl
test
jg
xchg
pop
flds
adc
xchg
cmp
push
int3
mov
mov
push
xchg
jp
outsl
jnp
push
imul
shl
arpl
ja
add
jae
lahf
adcl
sub
or
add
inc
pop
dec
test
mov
xchg
dec
pop
adc
inc
fidivrs
jno
jae
cmc
cmp
mov
mov
jle
xchg
scas
aas
push
dec
adc
mov
dec
xchg
add
sub
sub
daa
bnd
inc
xchg
clc
jbe
jb
test
adc
adc
or
decl
mov
in
xchg
sub
xor
inc
adc
js
mov
push
cmpsl
sbb
xor
loop
bound
rorl
movsb
sbb
scas
cmp
nop/reserved
mov
into
stc
add
pushf
out
arpl
lods
lock
jmp
jnp
and
sub
jns
and
rcr
out
lods
sub
insl
mov
scas
imul
xchg
in
mov
jbe
loop
lods
mov
arpl
fcmovbe
lahf
pushf
mov
arpl
pop
xchg
fdivr
add
dec
pop
daa
adc
js
mov
mov
or
xor
pop
pop
stc
add
icebp
insb
xchg
addl
fwait
hlt
sub
adc
js
dec
addr16
sbb
fadds
test
xor
mov
stos
jo
xchg
sub
mov
and
xor
cmp
cmp
int3
pop
push
dec
pop
sbb
andl
mov
cmpsl
fstpt
mov
adc
aas
mov
or
push
cmpsb
pop
and
mov
jo
push
and
mov
outsb
adc
pop
pop
or
std
fstp
icebp
cli
xor
mov
enter
push
mov
cmp
shlb
jl
adc
pop
inc
xor
dec
in
insb
dec
mov
jl
mov
bound
lods
ja
movsb
dec
pop
popa
and
mov
or
mov
cwtl
adc
dec
aad
xor
insl
sbb
pushf
sti
and
xchg
outsl
nop
sarl
hlt
imul
int3
adc
mov
push
fdivs
inc
pop
mov
push
sbb
jns
movsl
inc
aad
pusha
inc
les
lret
sub
sub
and
cmp
jae
movsl
adc
stc
das
pop
pusha
dec
mov
dec
in
je
fisubl
xchg
fildll
aad
push
lret
jnp,pt
mov
inc
push
fistpl
add
push
int3
mov
adc
push
cmp
ljmp
imull
xor
pop
daa
lret
jb
lock
add
xor
inc
mov
call
cmp
jo
pop
mov
mov
int
mov
sbb
mov
push
notb
cmp
jmp
stos
idiv
loope
mov
scas
pop
or
ret
sub
and
insl
cmp
sbb
mov
mov
stc
push
out
clc
in
addl
mov
pop
jbe
cmp
int3
mov
imul
push
xor
pop
jae
adc
dec
jg
push
lahf
decb
pushw
mov
out
mov
lods
insl
pop
pop
aas
shl
movsb
int
test
int3
sbb
jl
call
jae
sub
jp
inc
imul
inc
das
adc
outsl
push
and
cmp
mov
mov
and
fidivrs
sahf
call
mov
fsubrs
pop
add
jmp
lds
cmp
mov
mov
cmc
or
hlt
add
xor
dec
lock
cwtl
into
aas
xchg
mov
sbb
and
lret
inc
mulps
dec
and
arpl
data16
adcl
ss
or
repnz
cmp
stc
push
mov
ds
xchg
outsl
mov
xlat
mov
dec
scas
jae
and
and
pop
cwtl
mov
dec
jle
call
xor
gs
imul
rclb
mov
ljmp
pop
jg
pop
mov
push
push
xchg
aad
sub
popf
mov
cld
sub
xchg
stos
and
insb
sbb
pop
test
cmp
adc
or
scas
push
addl
xchg
scas
fcomi
sub
push
fadd
psubusb
xchg
push
mov
jge
adc
or
mov
pmulhuw
shrb
ds
sbb
addr16
fcoms
add
fsubrs
pop
lock
mov
push
pop
jle
jmp
and
push
andl
sub
adc
mov
rcr
pop
jb
jg
imul
and
lret
leave
ss
call
sti
mov
mov
mov
inc
or
std
cmp
aaa
pop
or
push
inc
or
insl
sti
dec
mov
lea
enter
or
fst
fwait
insb
hlt
adc
in
adc
jmp
hlt
ds
aaa
es
mov
rorb
imul
jbe
addl
push
and
mov
mov
dec
arpl
xor
dec
inc
popf
ss
push
cltd
sbbb
add
xchg
mov
pop
jle
pop
add
inc
cwtl
shl
push
jge
xlat
stos
cltd
jg
loop
ret
mov
idivl
sbb
pop
sarl
jns
xchg
and
add
sbb
imul
hlt
cmp
add
nop
mov
push
aam
sbb
lods
mov
push
push
mov
stos
scas
iret
jae
jmp
push
mov
lea
ret
mov
lahf
push
push
jge
lock
fisubs
repnz
ja
push
data16
dec
stos
jo
enter
bound
adc
jmp
add
inc
cmp
cmp
enter
sbb
loop
mov
arpl
xchg
ja
adc
subb
add
pop
sbb
xor
lock
js
ds
mov
popf
repz
mov
sub
popa
sub
push
out
mov
xor
add
jmp
push
inc
jg
adc
jbe
std
popf
add
push
mov
out
xchg
sub
fnstenv
cmp
mov
in
pop
cli
mov
test
lret
clc
xor
and
into
sbb
pop
cmp
shl
insl
xchg
cmpsl
xchg
and
jnp
jae
div
jb
push
imul
jbe
mov
in
cld
jns
pop
push
dec
push
mov
mov
pop
mov
dec
push
mov
minps
iret
xchg
pop
mov
out
dec
dec
push
dec
lods
ss
jnp
aam
std
or
sub
xor
sarl
repz
xchg
xchg
dec
xorb
dec
pop
in
cwtl
pop
xorb
movsb
filds
icebp
out
mov
mov
jmp
ss
insl
shll
dec
leave
test
xchg
or
mov
xchg
jle
ss
dec
mov
push
int3
pop
push
in
lods
fnstsw
lret
sbb
jae
inc
cmpsl
jmp
fisubs
dec
xchg
fwait
jl
pop
nop
scas
aas
into
push
xor
jne
dec
cmp
and
loop
cmc
icebp
ja
push
sbb
sbb
inc
mov
and
int
push
jg
push
lods
mov
cmp
cli
mov
lea
out
scas
xor
and
jmp
cwtl
add
out
insl
xchg
loop
ss
cmc
xchg
icebp
rclb
fwait
push
xlat
push
xchg
add
mov
jns
jo
jb
shlb
aas
adc
sahf
sub
lea
push
xchg
mov
popf
bound
jl
or
imul
ljmp
popa
mov
test
and
cmp
lcall
jno
pop
ss
mov
icebp
ja
imull
mov
inc
inc
js
ds
jbe
mov
cmp
push
dec
mov
mov
movsl
hlt
jp
dec
cmp
inc
mov
arpl
cs
loopne
rcrl
mov
pop
xor
cmp
jg
add
xchg
adc
mov
hlt
mov
or
inc
insb
and
mov
daa
insb
inc
lods
adc
mov
lret
and
sub
cmp
adc
out
and
stc
adc
fsubs
sbb
nop
pop
enter
out
mov
add
int
dec
lock
push
mov
inc
pop
or
adc
lods
push
inc
or
orl
into
ficomps
jne
int
ss
shll
orl
push
shll
push
aas
movsb
fisttpl
xor
and
out
cmp
in
mov
xor
and
hlt
in
cwtl
aas
outsb
add
rolb
pop
jmp
into
mov
push
out
sub
sbb
cmpsb
int3
repnz
sbb
addb
or
or
inc
sbb
add
icebp
nop
gs
push
scas
std
lahf
pop
mov
or
stc
xchg
std
lret
rsm
jl
or
cld
add
fildl
lahf
ss
adc
sbb
incb
sub
js
repnz
mov
mov
je
lods
or
in
xchg
imulb
std
fistpl
into
jecxz
mov
popa
insb
jno
xor
inc
test
jge
dec
test
xor
sub
mov
sbb
out
rcr
xor
stc
data16
dec
mov
ret
pop
xorl
sbb
fdivrp
pop
mov
jno
test
inc
outsl
jbe
sahf
rcr
stos
stos
sbbb
push
jp
mov
adc
cli
cmp
sbb
mov
ret
adc
test
mov
adc
pushf
and
fmull
rol
rcrl
xchg
mov
ja
push
pop
and
add
addr16
test
jns
inc
dec
xor
loopne
es
dec
mull
dec
mov
cmc
push
cmc
aas
leave
lret
sub
inc
add
inc
iret
inc
iret
and
sbb
xor
js
lret
ljmp
loop
lods
jnp
sbb
pop
movsl
sub
cmp
jnp
push
and
cmp
mov
in
pop
mov
fisubrs
data16
arpl
inc
dec
jns
fcmovb
test
ror
sbb
mov
or
out
pop
popf
test
add
dec
sarb
scas
jne
lods
scas
inc
rcrl
andb
jbe
jmp
xchg
or
rclw
dec
lret
imul
movsl
aad
lcall
sub
dec
push
xor
test
cli
sub
adc
in
xchg
and
add
ficomps
xor
adc
aad
out
div
mov
pop
pop
jl
loopne
imul
orb
push
enter
adcb
rcr
out
xlat
lea
scas
lods
call
mov
cli
stos
add
jno
add
lea
and
es
jmp
scas
mov
xor
movsb
pop
jmp
loope
cmpsl
mov
daa
push
repz
cld
xor
and
loope
int3
movsb
mov
pop
xor
jno
lret
repnz
cltd
mov
mov
scas
rclb
addr16
mov
jle
xchg
push
test
and
mov
in
xchg
dec
cmpsl
popa
pop
xchg
notb
sub
mov
in
xchg
sub
shrb
jl
sub
mov
scas
sub
xchg
xchg
sub
out
push
into
insl
enter
dec
mov
mov
pop
cmp
xchg
arpl
sbb
xchg
xchg
test
inc
data16
pop
push
dec
xchg
je
inc
loopne
xor
sti
sub
xor
loopne
sub
xchg
xor
inc
sub
fstpt
bound
test
pop
ljmp
lahf
in
xchg
stos
push
jecxz
cltd
les
mov
jmp
mov
popa
and
sbb
pop
add
cwtl
pushf
fimuls
test
mov
insl
loop
adc
mov
arpl
loop
push
stc
scas
xchg
shll
enter
into
mov
sahf
lret
cmp
mov
mov
call
jns
test
adc
out
and
push
and
mov
push
test
or
adc
mov
mov
xchg
in
jo
scas
adc
aaa
std
mov
das
lods
jg
lret
icebp
or
push
iret
fs
aad
gs
mov
mov
and
and
lahf
cmp
test
jne
ja
call
inc
stos
addr16
jecxz
jo,pn
ja
shl
xorb
push
sti
xor
rol
inc
mov
pop
out
rcrb
insl
mov
mov
cmp
mov
jbe
sbb
xchg
mov
lds
dec
arpl
dec
mov
push
cmp
cmp
aad
or
mov
test
cmp
sbbl
loopne
sub
enter
jbe
mov
mov
add
mov
mov
mov
or
xchg
mov
sarl
aad
push
or
mov
mov
mov
iret
push
rclb
mov
clc
push
dec
fnstcw
push
sti
push
jne
push
push
stos
adc
inc
push
cltd
or
add
ja
in
mov
enter
not
pop
mov
mov
jmp
fs
ss
cli
sub
dec
lcall
movsb
xchg
pop
sub
jg
jno
inc
je
mov
scas
aam
add
popa
xor
dec
cmp
fs
cs
fs
or
rcrb
xchg
mov
adc
xchg
iret
incl
insb
aad
pop
mov
push
push
lcall
xchg
lcall
movsl
cli
add
cmp
mov
cmc
mov
mov
mov
mov
mov
push
xor
push
sbbb
adc
and
jp
dec
jnp
int
xor
or
and
fwait
int
lods
lcall
xchg
xchg
sbb
ss
and
mov
cmpsb
pop
adc
mov
sub
dec
mov
imulb
mov
cld
push
or
sub
imull
enter
lea
fdivl
imul
stos
leave
fstl
xor
mov
popa
out
out
idiv
push
imul
shll
xor
add
icebp
ds
cmp
scas
xchg
mov
dec
loopne
mov
ja
adc
dec
push
mov
inc
cld
cmp
jne
cld
jge
add
gs
ret
ret
push
nop
xchg
and
stos
in
adc
ret
out
xor
lods
mov
sub
sarl
cmc
cmp
jno
dec
or
out
test
aad
loope
mov
inc
popf
aaa
pusha
mov
loop
popf
in
es
imul
mov
out
cmp
or
dec
push
int
push
cmp
movsb
cmp
add
inc
add
ljmp
lds
pop
aas
lret
into
fmull
adc
dec
and
outsb
pop
inc
fildll
popa
push
test
xor
jmp
add
push
cmp
aad
into
mov
inc
arpl
cmpsl
dec
rorb
cmp
and
fbld
adc
inc
stc
cmp
jno
push
xlat
add
sarb
xchg
cmpsb
pop
jmp
jp
or
or
sar
mov
xchg
push
and
jmp
adc
adc
inc
mov
mov
or
mov
insl
pop
sbb
xor
in
sbb
and
jg
mov
dec
xchg
mov
sbb
fwait
add
lret
pop
lret
dec
repnz
or
test
scas
iret
jmp
mov
sti
xchg
mov
arpl
es
add
jo
call
es
jge
jbe
sbb
sbb
cmpsl
and
push
adc
cwtl
mov
pop
and
or
into
adc
jae
xchg
sarb
sti
adc
xchg
cmpb
adc
into
jg
mov
push
bound
jmp
add
dec
cmp
orb
adc
pop
mov
stc
out
cmp
mov
aad
sbb
mov
loope
cltd
xor
inc
insb
notb
out
adc
in
jnp
mov
ljmp
test
xor
cmp
jmp
push
test
push
pop
push
mov
cmc
dec
icebp
inc
add
and
xchg
dec
fistl
mov
lea
pop
cmpsb
jb
bound
jecxz
ds
imul
or
inc
sub
xor
or
loope
cmp
inc
out
xchg
jns
sbb
arpl
inc
jb
mov
xchg
adc
shlb
shll
clc
gs
sbb
jbe
add
jne
jo
mov
pushf
shll
mov
mov
xchg
iret
cmp
lret
fimull
dec
imull
dec
jge
mov
imul
fucomp
cmp
or
cli
sti
repz
inc
sub
mov
dec
pusha
lret
push
movsb
int3
sti
adc
adc
int
inc
pop
dec
iret
andl
in
push
jnp
dec
xorl
rolb
xchg
cmc
adc
lcall
fwait
and
fptan
mov
cwtl
fwait
dec
xor
push
mov
rcll
mov
or
iret
ja
xchg
mov
in
jbe
jne
and
cmp
nop
pslld
lcall
mov
addb
and
movsl
enter
insb
fstpt
in
add
mov
adcb
jl
jg,pn
add
pop
imul
sub
test
fcoml
jge
and
faddl
adc
xor
push
xor
dec
jp
fsubl
pop
daa
pop
daa
jb
pusha
ret
cmp
fnstcw
gs
push
jp
scas
jne
pop
gs
scas
lods
call
lods
push
or
dec
fisttpl
inc
sbb
cltd
jmp
and
shrl
int
inc
pusha
mov
sub
mov
pop
xchg
add
dec
nop
push
xchg
int
sti
sahf
xorl
je
push
mov
lods
loop
arpl
push
pop
nop
rorl
xchg
adc
push
mul
popa
cld
out
les
in
and
cmp
xchg
test
mov
fimuls
cltd
test
xchg
sbb
leave
js
andl
cltd
push
test
sahf
xchg
popa
out
push
xor
push
cmp
daa
sub
js
push
push
jns
lods
mov
insb
dec
mov
fistl
mov
insb
xchg
ret
mov
inc
lcall
pop
and
inc
xchg
fnstsw
aad
popa
cwtl
push
pop
xor
xor
add
pop
push
je
push
sarl
ljmp
into
movsl
inc
jnp
insb
lods
inc
ja
inc
mov
sub
jmp
lret
pop
jmp
or
pop
cld
adc
and
lods
cmpsl
insb
cwtl
out
mov
inc
pop
jle
fcomps
inc
test
cmpsl
mov
push
pop
push
in
stos
ljmp
and
jmp
pop
dec
mov
std
mov
mov
rcll
mov
sub
call
mov
inc
mov
das
cmp
shll
add
scas
jbe
inc
mov
inc
jae
sarl
adc
aas
insl
mov
mov
sub
into
out
aam
arpl
push
jmp
inc
testl
mov
in
cmpsl
in
add
cmc
je
mov
and
cmp
jne
push
ss
cmp
popa
pop
incl
inc
or
loope
jno
mov
loop
lods
popf
mov
fimull
mov
push
inc
shrl
lcall
addr16
into
imul
lods
inc
popa
leave
jns
cmp
test
mov
cs
dec
lahf
jnp
and
mov
xor
push
or
and
sbb
push
pop
inc
adc
mov
loopne
pusha
mov
push
pushf
xchg
fcompl
xchg
cmpsl
lret
jbe
push
xchg
sub
ret
test
add
push
push
push
cmpsl
arpl
scas
inc
pusha
scas
aaa
rorl
out
dec
lods
shll
cs
jge
fstl
clc
js
jne
stos
ja
insb
push
sub
dec
jg
cli
psubusb
shlb
xor
or
ret
imul
in
xor
jno
divb
cmp
fnstcw
and
frstor
and
pop
sbb
adc
jle
dec
scas
xchg
testl
cmp
xor
push
sbb
mov
mov
loope
dec
popa
ljmp
jmp
mov
inc
stc
push
jo
adc
insb
or
ret
insl
popl
xchg
mov
subb
out
call
jp
and
push
xlat
rcrl
push
mov
icebp
pop
repz
mov
test
data16
fsubl
insb
jg
repnz
push
xor
adc
in
aam
jg
xchg
loope,pt
fcomps
push
mov
mov
cmp
clc
movsb
int
xor
jb
add
fimull
push
jne
hlt
mov
pusha
jae
or
cmc
xor
mov
add
test
sahf
bound
xor
fildll
mov
push
fstpt
pushf
jle
aas
adc
sbbl
nop
or
lret
sub
mov
sahf
loope
or
imul
stos
out
leave
adc
enter
jo
mov
pop
dec
sub
push
movsb
jnp
pop
adc
loopne
jmp
mov
outsl
sti
mov
mov
cli
ret
sub
out
push
cmpsb
sbb
xchg
rcr
mov
les
push
ljmp
or
sub
cwtl
ds
dec
or
push
arpl
push
mov
fs
push
cmp
jo
sub
xor
push
mov
xor
and
lret
mov
pop
xchg
jmp
pop
cmpsb
cmc
sbb
adc
pop
div
into
pop
inc
adc
jecxz
mov
outsb
sbb
xchg
mov
int3
loop
lds
add
and
mov
sub
lret
fnstcw
mov
xchg
mov
cli
scas
js
sbb
iret
cmp
push
mov
inc
jmp
add
jg
in
stos
push
cltd
fldcw
loop
cltd
jns
out
ljmp
popf
ljmp
pop
enter
jbe
sbb
cmc
jmp
adc
pop
adc
shr
shrl
push
stos
cmpsl
sarb
push
das
pop
sub
mov
add
jnp
xor
ljmp
sbb
nop
xchg
hlt
fdiv
xchg
je
cmp
pop
push
sub
jl
fistpl
mov
int3
push
adc
or
inc
jmp
notb
jno
inc
jb
jecxz
cmpsb
sar
or
mov
mov
cmpsb
cmpl
ds
xchg
mov
push
pop
test
in
sbb
dec
push
adc
movlps
daa
jecxz
lock
adc
insl
fistps
xchg
sub
frstor
jnp
or
out
xchg
push
decl
add
dec
loope
mov
mov
dec
xchg
push
or
fildl
mov
xchg
mov
dec
mov
inc
shll
and
or
sarl
adc
outsb
push
dec
inc
cli
in
dec
aas
fucomip
lods
mov
mov
push
stc
jae
push
xchg
sub
adc
loope
test
test
cmp
lods
xor
mov
cltd
mov
mov
roll
add
repz
jno
movsl
mov
addr16
in
fiadds
add
loopne
mov
xor
rorb
push
xor
adc
xchg
enter
repz
mov
movsb
mov
push
push
add
aad
mov
xchg
mov
addl
cmp
add
sub
movsl
mov
je
or
in
lret
inc
jb
out
jo
xor
ss
add
jmp
cltd
jg
nop
les
sub
lock
mov
stos
push
sbb
mov
push
inc
ja
mov
xchg
inc
xchg
dec
vminpd
jmp
mov
dec
aad
movsl
lret
cmp
mov
mov
dec
jmp
and
cmpsl
lods
and
jge
cmpsb
and
std
jl
xor
xlat
cmp
leave
xchg
lds
dec
mov
push
fwait
sahf
push
add
pop
ret
mov
and
iret
jo
icebp
lret
call
insl
std
pushf
dec
call
mov
push
jg
xchg
movsb
stos
loop
pop
add
ljmp
shlb
aas
jo
mov
out
jo
jbe
pop
outsb
pop
cmc
inc
out
lds
pop
jb
jl
mov
mul
lods
push
mov
add
add
mov
jbe
sub
or
lahf
cmc
pusha
ds
xor
aad
ret
jecxz
les
mov
xlat
jl
hlt
cmp
pop
sub
inc
aaa
push
and
xchg
xor
mov
push
adc
repz
arpl
sub
orb
in
mov
or
push
xor
stos
push
mov
pop
add
subl
jbe
rclb
or
andl
add
aas
aad
xchg
out
ss
ret
pop
jle
dec
pusha
mov
jge
inc
jge
xchg
hlt
es
xchg
cwtl
imul
xchg
das
xor
std
jne
push
mov
or
pusha
fsubr
sub
and
movsb
les
jmp
adcl
add
xchg
fadds
bound
sub
and
push
dec
pusha
mov
mov
cli
xchg
cmp
push
movl
cld
push
jae
mov
jnp
pop
mov
out
aad
jl
mov
jg
jmp
mov
lods
ficoml
leave
imul
jecxz
jbe
ss
int3
xor
xchg
insl
mov
sarl
cmp
arpl
movsb
sbb
add
xchg
jbe
dec
lds
xchg
cli
or
xchg
dec
int
push
enter
xor
and
cmp
gs
mov
pop
iret
imul
and
xlat
mov
jo
ljmp
xor
sbb
xchg
es
enter
dec
lret
rcrb
fiadds
push
addr16
mov
sarl
mov
mov
inc
pusha
lcall
dec
mov
notb
addl
and
shl
js
cmpsb
mov
rclb
push
sarb
push
shl
xor
sbb
scas
push
popl
stos
push
movsb
je
cmp
inc
cmp
add
test
fildl
and
mov
mov
mov
sbb
pop
pop
pop
and
sbb
or
ret
dec
cli
jg
inc
ja
xchg
xchg
adc
push
mov
fstpt
popa
in
sbb
repnz
lret
fbld
mov
pop
lods
movsl
mov
es
push
push
je
xor
adc
int
cwtl
mov
inc
movsb
or
sbb
xchg
add
add
and
mov
movsl
pop
xchg
adc
shlb
stos
push
mov
lods
cmp
push
add
xor
or
dec
jl
cs
mov
inc
or
scas
sub
cmp
fdivl
and
lea
lock
jno
repz
aas
jae
jnp
cmp
pop
inc
cmpsb
jne
jne
mov
and
call
mov
lret
cmpsb
popa
fcmovnu
es
jno
xchg
arpl
stos
fwait
xchg
jno
test
in
loopne
fs
enter
clc
imul
cmp
sub
in
or
pop
inc
adc
push
pusha
es
mov
loope
loopne
popf
xor
add
sub
outsb
pop
ret
fnstcw
mov
or
jae
frstor
xor
jne
repz
pop
push
push
lods
and
fwait
mov
mov
inc
and
in
cli
mov
lret
mov
sahf
das
popa
jbe
imul
push
mov
xor
and
mov
roll
hlt
hlt
hlt
sub
push
mov
dec
inc
mov
mov
clc
nop
cwtl
fisttpl
dec
in
hlt
enter
dec
std
call
push
lods
pop
sahf
imul
pop
pop
sarb
jb
lods
inc
outsb
or
repnz
cwtl
push
lcall
sbb
adc
es
sahf
mov
sub
lods
jae
xor
mov
aas
pop
shll
mov
push
sahf
test
mov
xchg
inc
lds
sbb
or
mov
xchg
cmp
inc
push
addr16
dec
mov
dec
mov
in
roll
jbe
out
push
clc
sarb
imul
mov
shrl
call
dec
pop
mov
test
xchg
pop
xchg
pop
inc
fmull
dec
mov
loope
sub
mov
xchg
jae
xchg
sbb
mov
jge
cli
and
adc
ret
push
jecxz
xchg
pop
sarl
or
add
xchg
add
mov
testb
and
mov
jno
adc
pop
sbb
in
enter
loopne
ss
fistps
repz
xor
sub
pop
adc
lahf
or
in
mov
test
xor
fldl
cmp
dec
lds
out
adc
cmp
sti
dec
inc
dec
pop
or
xchg
xorl
cmp
sub
in
add
inc
fldcw
inc
gs
aad
hlt
ljmp
imul
imul
lea
fcoml
lock
or
pop
or
pop
aad
dec
sbb
and
addr16
or
out
sub
sahf
push
mov
jns
sub
adc
pop
or
jae
push
insl
test
stos
pop
cmc
mov
sbb
or
into
test
cmp
mov
cmp
adc
enter
insb
cs
int3
mov
cwtl
addl
jge
pop
lret
xchg
imul
add
xor
mov
repz
jbe
incl
in
orb
cwtl
fnstcw
mov
mov
jmp
fdivrs
aas
sahf
gs
mov
push
call
sbb
and
jno
mov
mov
jae
repz
clc
test
fisttpll
pop
sahf
dec
xchg
or
jmp
xor
push
dec
nop
ds
popa
clc
clc
lret
push
test
jae
cmovge
jg
icebp
std
ljmp
fsubl
add
dec
mov
sub
ret
sti
mov
sub
cwtl
stos
xchg
out
mov
shrb
xchg
xor
ficoms
arpl
xor
xchg
and
addb
loop
and
sbb
jns
mov
mov
sbb
jmp
pusha
mov
rolb
movsl
shrl
scas
mov
dec
shll
sbb
aad
adc
xchg
mov
mov
call
icebp
repz
dec
scas
adc
jmp
inc
mov
cmpsb
rol
add
insb
mov
lock
in
jae
mov
cmc
and
sub
dec
clc
repz
mov
xchg
sub
fs
cmpxchg
in
inc
xor
mov
and
ret
lds
xchg
and
cmpsb
xchg
and
int3
mov
aad
movsl
push
or
sar
daa
jmp
mov
jno
popa
adc
jo
xor
ficompl
jl
icebp
imul
and
addr16
int3
subb
cmp
dec
scas
into
adc
dec
aas
cwtl
ss
out
call
jo
and
and
lds
and
lret
jmp
movsb
imul
push
mov
outsl
cmp
les
cmp
cli
xchg
mov
inc
sbb
movsl
aas
subb
hlt
test
mov
lods
mov
cmpsl
mov
shlb
dec
pop
inc
xlat
fdivrl
shrb
and
and
lret
int3
out
stos
mov
repz
lods
or
lret
mov
loope
rcrl
les
mov
cmp
imull
fldl2t
lcall
movsb
nop
pop
out
mov
aas
ss
mov
fidivrs
push
popf
loope
cwtl
and
outsl
dec
daa
jns
jmp
mov
loope
pop
pop
icebp
es
push
call
xorb
ja
or
xor
lret
mov
adc
mov
lods
xor
test
mov
lds
insb
or
fsts
ljmp
movsl
je
jno
int
pop
push
fistpll
sahf
mov
add
cld
mov
pop
std
jne
push
aad
xchg
jg
push
sbb
test
inc
sbb
out
dec
bound
rcll
hlt
aaa
pop
push
or
sub
imul
nop
gs
in
add
xor
xchg
loop
repnz
in
stc
rcll
rcll
mov
rcll
mov
insb
int3
stos
add
dec
lds
push
in
dec
mov
stc
push
test
xor
mov
xchg
mov
jnp
lods
sub
mov
in
xchg
dec
cltd
mov
aas
xchg
push
lds
je
mov
out
jno
jbe
push
pop
stos
and
jmp
or
inc
adcl
insb
sbb
int3
lea
fisubrs
push
imul
std
mov
fcoms
pushf
push
out
jp
jle
lret
mov
imul
nop
je
leave
in
leave
in
mov
xor
ret
lcall
dec
push
cmp
inc
jmp
sti
mov
or
ss
add
adcb
test
inc
xchg
loope
scas
ljmp
add
pop
push
jae
shll
popf
xor
adc
inc
push
pop
jb
and
aaa
insl
add
pop
jae
call
sti
and
dec
mov
pop
movsb
add
sub
scas
jmp
lcall
add
bound
cmp
das
xchg
int3
fstl
dec
daa
sbb
cmp
dec
fs
push
test
or
insb
mov
repz
xchg
pop
mov
or
xchg
adc
aad
push
xchg
movl
mov
mov
mov
repnz
cmp
mov
lods
sti
out
jecxz
cs
mov
ret
fcmovb
push
push
stc
leave
pop
data16
out
jno
adc
inc
sahf
pop
sahf
lock
scas
movsb
insb
dec
lahf
xlat
push
cltd
shlb
xor
cs
jno
xchg
jne
pushf
xchg
fcoml
push
mov
pop
cmc
adc
les
iret
out
js
mov
out
cli
ret
mov
lock
call
sub
lcall
xchg
pusha
pop
and
ja
popa
jg
movsb
stc
cmp
icebp
aad
ja
dec
pop
sbb
pop
ds
mov
fldt
pushf
add
lds
loop
loopne
lods
cmpsl
mov
movsb
mov
mov
dec
or
adc
mov
pop
repnz
mov
int3
pushf
ds
mov
mov
in
or
je
or
stos
cmp
push
jge
sub
lgs
lods
js
jecxz
loop
mov
mov
mov
xor
cmpsl
mov
mov
scas
dec
sbb
jmp
lret
pop
xchg
pop
iret
push
jae
ljmp
xchg
mov
cli
and
push
mov
sbb
and
or
or
sub
cli
push
int3
cmp
sbb
inc
push
inc
das
lret
mov
sahf
xchg
fdivr
cmp
std
sbb
aam
ret
repz
cmp
insb
incl
add
test
xor
adcl
cwtl
test
scas
lret
mov
add
jle
adc
rcll
xchg
xchg
scas
popa
sbb
push
fstl
xchg
ljmp
test
mov
mov
out
out
hlt
jo
mov
push
addr16
out
inc
and
movsb
mov
cmpl
xchg
je
movsl
ds
loopne
mov
xchg
ja
repz
jne
test
lret
xchg
sub
dec
mov
xor
jae
enter
pop
cld
loopne
aam
dec
or
mov
dec
cmp
stos
mov
addb
cs
push
ljmp
fwait
push
or
lcall
dec
and
sti
mov
insb
in
add
in
lods
fwait
xchg
stos
and
ss
stos
push
xchg
int3
cmp
outsl
stos
mov
or
stos
push
callw
dec
sub
mov
mov
and
xchg
xchg
jle
xlat
add
xchg
fs
int
jecxz
mov
int3
adc
or
sbb
inc
xor
arpl
mov
push
addr16
cmp
cld
and
int3
out
rol
sbbl
adc
pop
ret
std
mov
rcll
lahf
add
cwtl
and
sbb
push
mov
mov
stc
dec
cs
pop
push
mov
andb
jp
adcb
xchg
orl
cmp
sbb
jnp
pop
leave
mov
test
loope
jle
pop
push
int
pop
cs
aam
xchg
pop
ljmp
mov
les
addr16
sbb
push
mov
pushf
clc
rolb
mov
cli
push
sahf
cmp
pop
icebp
mov
sbb
add
pop
addr16
fisttpl
cmp
imul
push
addr16
cwtl
add
cmp
js
or
stc
jge
add
or
dec
fnstsw
sub
xorl
sbb
jbe
mov
cmpsl
cwtl
into
lret
pop
sbb
adc
jle
cli
push
pushf
pop
call
stos
mov
pusha
repnz
ljmp
push
or
jp
adc
insl
fs
add
inc
jb
loope
sub
inc
dec
push
bound
shll
push
in
pop
test
mov
inc
in
cmp
pop
test
pop
sbb
das
stos
mov
pop
scas
les
and
adc
out
imul
orl
aas
out
xchg
inc
push
jb
je
mov
aad
arpl
push
sub
les
inc
mov
sbb
int3
mov
loope
mov
leave
pop
std
or
push
iret
out
or
in
mov
das
sahf
filds
mov
push
stos
and
add
sbb
sbb
divl
das
push
xchg
negb
xchg
xchg
jo
outsb
sub
ret
in
mov
in
sub
or
orb
xor
mov
adc
mov
push
lcall
jno
sbb
push
in
std
mov
jnp
push
sub
test
aaa
jnp
xchg
pop
mov
cmc
icebp
sahf
ret
push
xchg
leave
sbb
sub
xor
js
icebp
or
aaa
rcl
add
in
mov
cltd
mov
dec
pop
jmp
cmp
xor
pop
add
sbb
int
push
movsl
adc
xor
xchg
lock
test
sahf
testl
enter
mov
shlb
insl
dec
mov
cmp
decl
dec
shrb
mov
rcll
xor
adc
imul
cli
pop
adc
sub
popf
iret
shl
push
shl
push
mov
in
jge
jbe
sbb
dec
xchg
test
jl
into
ret
imul
mov
and
in
repnz
xor
jmp
pop
or
push
push
mov
mov
inc
int3
dec
test
sub
jmp
pop
jp
pop
xchg
leave
adc
mov
add
mov
nop
js
test
cmp
or
nop
inc
mov
jge
cmp
jne
imul
sahf
sbb
mov
xchg
mov
orl
or
jns
mov
sub
jne
insl
stc
and
movsb
loope
repnz
and
aad
mov
inc
sbb
jae
push
jmp
pop
lret
lahf
test
sbb
sbb
fcompl
push
stos
lcall
sahf
inc
js
aad
push
arpl
sbb
lea
test
ljmp
ds
mov
add
mov
lods
and
clc
mov
xchg
cmp
pop
add
nop
faddp
testb
dec
or
pusha
mov
adc
mov
cltd
je
mov
test
aas
add
jb
mov
pop
lea
sub
and
sahf
cmp
addl
xor
imul
dec
leave
and
repz
idivl
xchg
and
and
dec
push
sub
xchg
adc
pop
push
push
ficoms
mov
jl
dec
mov
jns
cli
repz
fdivs
xchg
fmulp
les
mov
xor
push
popf
xchg
pop
jnp
xor
mov
leave
mov
loope
sub
cmp
add
lcall
jecxz
jns
mov
jae
sbb
out
sti
in
add
push
mov
pusha
loopne
cmp
mov
cmp
imul
mov
xor
sub
enter
pop
mov
shlb
xor
dec
les
inc
dec
xor
push
sbb
push
pop
pop
dec
dec
mov
vcmpps
jae
inc
push
cmp
jmp
test
xor
mov
sbb
dec
jecxz
and
jmp
and
xlat
push
dec
add
dec
sahf
lods
jmp
jne
inc
gs
fdivs
test
or
mov
inc
xchg
inc
push
inc
rcrb
inc
test
xor
pop
mov
movsb
into
sbb
shll
inc
mov
sahf
inc
imul
popa
and
sub
push
pop
mov
fcoms
adc
inc
popa
xchg
jbe
in
mov
pop
clc
mov
ficoml
inc
mov
daa
movsl
ds
scas
xlat
dec
mul
mov
popf
shll
out
mov
daa
inc
add
and
test
sbb
aaa
aas
pop
les
pusha
cmc
repz
lret
mov
and
test
push
loop
and
hlt
add
jo
mov
data16
add
out
adc
imul
cwtl
call
xchg
mov
mov
and
mov
iret
adc
pop
mulb
mov
inc
outsl
ss
mov
pushf
or
lret
jno
ds
mov
push
jp
add
jge
dec
mov
xchg
iret
decb
cmpsb
sbb
int3
inc
stos
addr16
mov
jno
mov
or
cltd
test
rcrl
adc
mov
xor
test
jno
mov
outsb
jb
shrb
and
jb
test
inc
cmp
xor
push
cmp
xlat
iret
pop
cmc
cmpsl
or
and
sar
jo
leave
and
or
or
and
ljmp
push
sti
call
push
out
pushf
in
mov
fcompl
inc
dec
ss
or
xchg
mov
dec
xlat
mov
daa
and
sbb
lcall
int3
mov
push
adc
push
out
mov
pop
into
add
ffreep
cld
sub
ret
aas
pop
ficoms
cmp
cmpsl
pop
aam
add
xchg
cmp
stos
inc
push
jp
mov
push
mov
fidivl
and
sub
inc
in
andb
xor
rorl
mov
pop
push
pop
cmp
jmp
jb
negb
stos
pusha
jp
mov
movsl
mov
lret
sbb
inc
jo,pn
and
pop
push
cmp
add
or
fcomi
dec
mov
cmp
lahf
jge
ds
push
cld
cmpsb
xor
mov
leave
cwtl
addr16
test
roll
sbb
adc
inc
pop
mov
fs
fldl
insb
pop
aas
mov
out
lahf
lds
dec
sub
add
and
inc
push
inc
inc
dec
nop
sbb
dec
cmp
repz
dec
pushf
repnz
xlat
pop
mov
sub
hlt
outsb
jp
fimull
divl
and
test
dec
pushl
insb
movsl
aaa
movsl
mov
incl
pop
shlb
fwait
sub
pop
leave
int
add
xchg
out
inc
ficoml
sbb
out
add
cmp
mov
sub
bound
xchg
sub
ljmp
sub
jl
inc
mov
stc
test
je
inc
cmp
into
scas
ljmp
lcall
sbb
sbb
data16
cmpsb
cmpb
shl
mov
mov
mov
sbb
cmpsb
jne
stc
mov
rorl
repz
xchg
pop
or
cmp
xchg
fisttpll
hlt
and
dec
outsb
cmp
call
rcrb
leave
pop
outsl
ret
mov
jb
jge
mov
aam
test
adc
out
pop
xor
std
mov
jmp
inc
mov
push
adc
pop
xchg
fmull
loope
imul
sub
outsl
call
adc
pusha
fsubrs
jae
dec
sub
lcall
add
mov
into
subl
or
mov
gs
inc
sahf
pop
test
jno
ficoml
addl
push
stos
cli
cmpsl
push
subb
nop
jl
lds
cmp
test
sahf
inc
lret
dec
sbb
ljmp
lock
cli
fists
mov
sub
lahf
xor
hlt
and
jmp
mov
xlat
int3
test
cmpsl
xor
inc
in
or
cmpsb
jns
rorb
stos
push
sub
adc
fsts
out
xchg
and
xchg
add
mov
out
adc
or
xchg
inc
ror
cmpsl
jle
pop
stos
hlt
hlt
push
lahf
popf
pop
jge
push
sahf
inc
pusha
pushl
add
ficoms
je
lea
mov
popa
das
sbb
ljmp
mov
jb
sti
adc
mov
sbb
int
pop
mov
cmp
mov
jnp
xor
mov
and
ret
fcoml
fistl
push
sbb
pop
ss
in
push
dec
addr16
lods
xchg
pop
mov
rcrl
cmp
movsb
dec
inc
pop
push
lods
aam
inc
jmp
jno
test
nop
inc
es
sub
or
lahf
sbb
xchg
cmc
rolb
data16
lea
xchg
in
sub
push
cmp
jns
mov
aam
mov
dec
mov
push
mov
mov
ss
lcall
xlat
icebp
shlb
stc
inc
les
and
mov
jbe
aam
inc
mov
sbb
xchg
cmp
xchg
cmc
sbb
ror
test
mov
and
jle
call
push
fs
nop
pop
mov
mov
mov
and
es
xchg
dec
xor
cli
or
insb
stos
outsl
jb
mov
cmpsl
sub
xchg
pushf
jmp
pop
jns
mov
sahf
std
aas
inc
mov
jo
xorl
dec
pop
cmp
push
add
fiaddl
es
mov
pop
ds
pop
insl
adc
sti
leave
xchg
pop
xchg
lret
xchg
xchg
adc
adc
xchg
mov
inc
rolb
mov
jnp
cs
lcall
mov
outsb
pop
js
sbb
xchg
jecxz
adc
lods
xchg
ror
add
mov
jno
push
jmp
inc
xor
inc
xor
inc
or
lods
jbe
xchg
cmpsb
arpl
sub
jge
jmp
nop
rcrl
repz
nop
rorl
inc
and
jno
sbb
dec
mov
mov
push
pop
or
pop
sub
push
call
xchg
stc
push
jno
dec
cmp
or
or
repnz
jnp
cwtl
stos
cmp
adc
inc
loop
orl
cli
cwtl
xchg
lret
rcll
mov
mov
nop
aam
repnz
dec
lock
mov
mov
out
lcall
cs
xor
or
daa
lds
mov
addr16
push
jno
or
cld
dec
push
in
aam
xchg
push
and
xor
outsb
sbb
mov
adcl
dec
mov
cmp
and
out
in
sbb
inc
fcoml
clc
jbe
out
sub
adc
fcmovbe
xchg
inc
lea
xchg
jno
les
call
loope
xor
repz
cmpsl
add
aad
notb
xor
outsl
iret
mov
subb
jo
add
movsb
int
or
stc
rorl
pop
or
xor
aad
addb
in
jb
outsl
pusha
push
or
ss
sbb
cli
cmpsb
or
push
out
dec
daa
mov
js
add
ja
cltd
jno
daa
push
or
lods
xor
repnz
xchg
ljmp
jl
stos
sbbb
add
fldenv
js
rolb
fdivrl
jnp
sub
lret
repnz
faddl
adc
fstpt
hlt
xchg
add
dec
pop
inc
push
dec
dec
mov
outsl
int
inc
xchg
and
mov
sub
addb
int3
mov
cwtl
lds
fst
mov
xor
fs
movb
in
pop
call
clc
mov
das
add
xor
es
jns
cld
push
psrlw
stc
dec
pushf
jle
cmp
es
xorl
hlt
cli
sysexit
mov
xor
add
gs
sub
movsb
mov
push
lock
mov
stos
mov
test
rclb
dec
in
xchg
idivl
imul
jae
mov
inc
dec
test
daa
mov
push
lahf
jnp
xchg
cmpsb
mov
pop
sbb
lcall
or
dec
pusha
ljmp
pop
mov
mov
pop
and
xchg
movsb
sbbb
and
loop
dec
pop
cmp
jnp
xchg
sbb
icebp
pushf
adc
mov
mov
inc
out
jnp
iret
loopne
or
add
test
inc
ret
popaw
ss
cmpsb
test
loope
movsl
test
mov
out
stos
repnz
xchg
or
cltd
jo
lock
fstl
shlb
sbb
fstl
cltd
xchg
stc
mov
daa
xor
adc
add
repnz
imul
push
pop
sahf
jne
sub
pop
sub
sub
leave
popf
push
sub
or
lds
lock
inc
cmpsl
cmp
push
mov
xlat
popa
cmp
pop
mov
pop
push
mov
add
or
hlt
addr16
push
fstps
pxor
push
fisubrs
add
pop
dec
sbb
and
sti
xlat
icebp
cmp
jmp
jmp
push
dec
in
xor
mov
and
std
inc
test
repz
je
cmc
mov
sub
pop
xchg
out
push
sti
pop
test
inc
filds
pop
sbb
mov
leave
push
push
cmp
ss
stos
adc
mov
sbb
xchg
addr16
pop
icebp
gs
fwait
jle
int
out
popa
cmpsb
or
or
roll
lcall
mov
mov
sub
or
jns
in
insl
in
push
and
hlt
stos
adc
in
xchg
push
mov
and
lahf
aaa
push
cmp
dec
gs
cld
mov
cmp
dec
dec
shlb
inc
mov
xchg
lcall
leave
stos
loop
aas
push
mov
imul
js
jbe
inc
sub
jmp
into
xchg
mov
fwait
out
mov
xor
int3
jae
or
sbb
lods
mov
pop
insb
sbb
mov
call
xor
scas
jne
rolb
mov
mov
add
rcrl
xchg
push
pop
test
push
mov
adc
mov
rcrl
test
mov
les
addr16
jbe
push
in
ror
data16
jns
push
cmp
xorl
hlt
sbb
inc
sub
pop
xor
adc
cs
xchg
cmp
cld
jg
mov
test
pop
xchg
pop
sub
xchg
lcall
insl
in
ds
xchg
sbb
mov
lock
mov
idiv
mov
xor
jae
mov
lahf
sbb
mov
xor
ror
rcl
out
jns
std
fs
xor
sub
insl
ret
mov
fisttps
xchg
je
fldt
or
mov
lock
pusha
mov
scas
repz
repnz
lret
mov
aad
xchg
inc
lock
incl
mov
xor
add
test
cmpsl
popl
das
mov
ja
pop
pop
mov
in
adc
cmovg
sub
and
inc
xchg
dec
test
xchg
shl
jg
je
xchg
push
enter
jae
jg
xchg
mov
loope
inc
stos
sbb
pop
push
xchg
sbb
sbb
mov
xchg
mov
pop
pop
rcll
push
adc
and
mov
cli
gs
in
popf
icebp
sub
and
jmp
sti
sub
pmaxsw
mov
mov
jp
in
pop
js
mov
jne
and
xor
fidivs
and
std
push
es
mov
adc
faddl
jl
pop
adc
lret
push
iret
clc
aas
ret
sahf
orl
mov
lahf
out
push
jecxz
jecxz
leave
sti
dec
popa
lea
mov
and
adc
es
mov
ds
push
sbb
in
push
xchg
jg
stc
aad
test
xor
add
xor
icebp
je
xchg
inc
sarl
pop
mov
dec
imul
stc
sub
sbb
ds
pusha
adc
fisttpl
dec
ja
out
fcompl
jbe
out
sbb
jnp
xlat
cli
int3
call
lret
in
popf
orb
jbe
jle
mov
pop
mov
jnp
mov
xchg
test
add
add
repnz
mov
dec
cmp
push
pop
pop
dec
xchg
js
lods
nop
icebp
push
cmp
popf
ljmp
sbb
mov
or
cli
cmp
xchg
push
push
fists
push
aad
dec
les
cmp
hlt
leave
and
xor
andl
sub
lret
push
jbe
cmpsb
jl
add
mov
test
fcom
add
shll
data16
add
and
xchg
pop
in
inc
lret
fnsave
sbb
fadds
ss
xchg
jle
cmp
notl
or
in
sahf
inc
scas
xchg
lcall
and
inc
ficomps
jbe
pop
sbb
or
bound
pushf
inc
inc
shlb
outsl
lods
stos
adc
mov
xor
sbb
test
mov
orps
xchg
out
dec
mov
push
sub
lds
and
sbb
test
rep
leave
sub
inc
adc
paddsw
roll
int3
xchg
std
add
mov
and
nop
mov
pop
add
push
dec
add
adc
sbb
push
xchg
mov
push
in
mov
clc
arpl
fwait
adc
jb
pop
aas
xor
sbb
lock
cmpsl
sbb
jg
cmp
repnz
loop
aam
test
out
aad
xlat
jp
push
rcrb
jmp
mov
mov
inc
inc
hlt
sub
es
aas
push
lock
scas
lcall
shr
ljmp
push
fisttpl
pop
loope
xor
xchg
cmp
xchg
mov
fnstsw
mov
mov
xchg
stos
mov
jecxz
fistl
notb
add
jbe
adc
cmpsb
mov
and
mov
and
fadds
pop
sbb
cwtl
xor
push
pop
pushf
mov
sub
and
jns,pt
mov
outsl
repz
dec
aad
cmp
xor
mov
pop
rorb
jbe
xlat
mov
int3
adc
xchg
dec
loopne
pushf
outsb
mov
stos
pop
cmpl
cli
in
mov
addr16
int3
or
nop
add
mov
push
sub
xor
and
mov
xchg
inc
in
cmc
mov
out
jl
call
cmc
xchg
mov
pop
jno
lahf
loope
mov
dec
dec
cmp
test
xchg
mov
xchg
loope
imulb
add
xor
dec
insb
sub
cmpsl
jl
inc
ret
xchg
dec
and
testl
jae
clc
sub
push
push
ja
cmp
cltd
dec
push
and
lea
popa
loope
int
test
pop
rcrl
xchg
nop
fwait
dec
enter
adc
lods
fldl2e
fisttpll
andb
cmp
fildll
pop
jecxz
ret
cmpsb
cmp
inc
sub
mov
aam
cmp
mov
out
or
das
dec
out
xor
dec
test
int
pop
addb
repnz
push
data16
scas
out
call
jae
mov
mov
loope
mov
cwtl
rolb
scas
or
repnz
adc
outsl
or
jge
seta
xor
sub
in
test
aam
jle
pop
push
sbb
out
jnp
mov
enter
mov
sbb
bsr
popf
cmp
sub
test
dec
xchg
jmp
jl
cmpsl
subl
fmull
test
pop
lock
iret
adc
addr16
shrl
xchg
push
add
stos
imul
cmp
scas
or
loopne
sbb
negl
sbb
test
add
xor
mov
mov
dec
fbstp
push
or
int3
push
ret
and
add
push
cmp
cld
ds
enter
xor
cmp
or
insl
sub
out
sahf
ja
jp
mov
jl
and
loopne
xor
outsl
test
movsl
and
jne
mov
fidivrl
nop
repz
push
movsl
pop
jb
mov
ret
sbb
and
mull
scas
scas
add
sbb
push
cs
loop
sbb
js
adc
push
cld
fwait
ret
ja
xorl
xor
mov
mov
sub
lea
pop
loopne
inc
inc
js
fs
ficoml
mov
mov
xor
stos
jmp
mov
mov
repnz
sbb
in
mov
xchg
adc
dec
loope
icebp
fucomi
dec
mov
sub
mov
fucomi
mov
inc
movsl
jp
cmp
lcall
mov
jno
xchg
inc
aam
sahf
cmp
lods
xchg
pop
xchg
stc
clc
out
cmpsl
add
enter
insl
cmp
mov
xchg
pop
loope
arpl
jb
icebp
fadds
filds
and
push
test
xchg
xor
sub
push
fst
mov
mov
mov
rorl
jle
jo
mov
dec
jle
add
rorl
pop
sub
clc
cwtl
mov
gs
jge
adc
cltd
add
cmp
scas
mov
mov
gs
push
and
inc
loopne
pop
data16
jmp
mov
call
jmp
inc
mov
jb
pop
sub
pop
out
clc
mov
inc
btc
ja
test
insl
out
mov
xor
adc
mov
push
mov
movsb
pusha
or
int3
outsb
inc
dec
cwtl
sbb
sub
push
inc
or
adc
mov
jl
mov
fstpl
into
jmp
fidivl
stc
ss
push
inc
pop
cs
mov
mov
fsubrs
mov
pop
sub
pop
aaa
push
adc
lcall
pop
sub
fmul
jecxz
xlat
rorb
cwtl
xchg
jg
cmpsl
inc
pusha
dec
jl,pn
js
mov
push
incb
push
out
and
jno
in
aam
xchg
fadd
lret
shl
lret
inc
add
loope
imul
inc
lcall
or
cmp
cli
dec
add
xor
xor
fbstp
mov
cmp
ficoml
mov
setb
lock
xchg
addb
xchg
fcmovbe
add
out
cmp
enter
shlb
jno
ja
mov
mov
dec
add
pop
or
mov
andl
mov
int3
mov
add
mov
mov
int
test
jae
pop
lock
mov
cli
loopne
pop
out
daa
daa
push
ds
sbb
push
cltd
push
xchg
idivb
arpl
add
pop
mov
mov
push
notb
or
pop
gs
pop
lret
add
scas
cmp
iret
in
xchg
adc
adc
jbe
cwtl
scas
int3
leave
adc
aad
mov
adc
test
ljmp
loope
mov
fidivrl
out
outsb
mov
in
add
and
notl
jne
pushf
out
sbb
xchg
lret
adc
jp
mov
fisubs
in
inc
xchg
add
cmpsb
shlb
cmp
jmp
dec
outsb
sub
or
popl
jno
js
xchg
pusha
movsl
mov
xor
xchg
pop
cld
icebp
mov
mov
test
adc
jl
stc
cmpsl
jne
lcall
push
pop
and
mov
daa
adc
or
scas
dec
ret
stc
lods
outsl
and
lds
ljmp
enter
mov
add
cwtl
pop
jp
aam
fidivs
cmp
rcll
cmp
rcr
xchg
cli
in
repz
dec
cmpsl
mov
out
xchg
fimuls
insl
and
adc
mov
lods
shrb
dec
cmp
aaa
pop
xor
hlt
xchg
rol
or
loope
imulb
pushf
test
xor
subl
xor
cmp
mov
mov
sarl
cmpsb
and
xchg
lea
icebp
or
mov
mov
xor
push
out
fists
mov
mov
pop
sbb
mov
push
fsubs
mov
inc
ss
test
mov
xor
ds
aad
fstl
mov
pop
adc
or
add
mov
in
cs
rol
push
pop
cmp
fs
aad
rcll
daa
imul
pop
in
sbb
push
jbe
add
mov
shlb
setae
leave
dec
xorb
sub
hlt
hlt
jle
int3
cmp
dec
fists
sub
push
inc
ret
jmp
cmpsl
aad
pusha
negb
pmulhuw
mov
outsl
ds
push
mov
outsl
pop
adc
or
aaa
xor
div
aam
in
add
lcall
pop
mov
mov
out
xchg
aad
fildll
leave
imul
mov
pop
addr16
adc
sub
outsb
xor
xor
movsl
jg
lret
popa
or
movsl
insb
sbb
lcall
aad
adcl
pop
fdivr
cmpsb
mov
mov
cld
fcom
mov
das
sub
aaa
push
dec
ret
jecxz
mov
incb
in
dec
outsb
jne
xor
xor
pusha
data16
fstps
xor
sahf
cwtl
pushf
rcrl
mov
and
xchg
push
mov
inc
rorl
cmp
sub
and
push
shl
jp
leave
lods
pop
mov
stc
cmp
aam
add
xor
add
scas
rcrl
shll
mov
xor
xor
addr16
pop
mov
lods
pop
ret
mov
std
jl
jmp
fildll
pop
add
ss
movsb
aam
inc
nop
fstl
lds
push
call
sub
out
pop
cmp
xchg
push
mov
mov
push
lahf
scas
loopne
jmp
pop
out
or
dec
call
cwtl
ljmp
ret
mov
scas
frstor
xchg
and
shr
data16
xor
dec
push
xorb
mov
icebp
lds
push
cli
lret
and
xchg
test
in
adc
jg
mov
and
jbe
nop
frstor
add
jle
scas
dec
add
test
jnp
mov
and
adc
outsb
jns
or
pop
jo
stc
out
fdivrs
fstps
jb
pushf
test
ret
mov
bound
lcall
sbb
in
fs
cmp
mov
bound
adcl
insb
jl
cmp
mov
imul
inc
testb
subl
sarl
mov
int
out
fldenv
cmp
sbb
cmpsl
lock
and
add
pusha
adc
dec
push
pop
pusha
adc
rcl
ret
lahf
or
in
and
adc
insb
enter
push
jno
push
loope,pn
fiadds
into
pop
out
or
mov
pop
ja
and
shrl
sub
xorb
and
lods
xchg
mov
cmp
sbb
sbb
xor
popa
loop
fsubrs
aas
add
repnz
test
ds
adc
add
pop
fstpl
and
inc
hlt
inc
dec
arpl
into
xor
div
jmp
sbb
ds
std
adc
dec
dec
jp
adc
mov
orb
cs
cltd
fsts
pop
cmpsb
xor
pop
fldz
jge
cmp
nop
inc
inc
add
rcrb
lods
mov
and
cmp
xchg
inc
or
gs
outsb
sbb
std
or
inc
pop
nop
in
cmp
xchg
cmpsb
aas
jne
das
mov
cwtl
or
out
fiaddl
ret
fs
inc
test
push
xchg
lret
leave
add
ret
lcall
and
cmp
xchg
icebp
mov
mov
data16
adc
xor
in
mov
mov
test
loopne
dec
incb
lods
sti
mov
mov
bswap
lods
call
mov
xchg
popa
push
scas
in
mov
adc
popl
push
and
or
stos
dec
js
lret
or
bsf
test
mov
inc
rcrb
and
shlb
test
std
mov
jbe
inc
cmp
stos
mov
stos
or
test
xchg
inc
popf
and
mov
stos
add
fildl
xor
sar
out
iret
inc
inc
mov
test
cmpsl
pop
xor
outsb
jg
int3
or
test
leave
rorb
iret
mov
mov
fidivrs
xlat
cmp
dec
mov
test
xchg
bound
sahf
fstps
sbb
pop
mov
mov
mov
sbb
jmp
adcl
sbb
movsl
sti
pop
mov
mov
je
jb
jl
inc
das
adc
pop
xchg
popw
mov
sbb
mov
push
lret
jl
jg
lret
push
lds
dec
mov
add
mov
fcomps
lea
scas
jo
xor
dec
add
xor
sbb
outsb
push
jecxz
xor
std
pop
ljmp
mov
fwait
push
add
fildll
cs
shrl
test
jmp
push
test
addr16
xor
lahf
shr
dec
jnp
repz
push
enter
add
jne
add
fsts
lret
push
jl
cwtd
or
pop
pop
mov
into
xchg
jbe
push
in
loope
cmp
ret
sub
repnz
xchg
cmp
arpl
pop
daa
xchg
or
out
mov
idivl
push
jbe
pop
jnp
arpl
lahf
push
adc
je
mov
cwtl
mov
roll
fnstsw
addb
scas
push
fs
jmp
popf
xchg
shl
scas
std
mov
sub
dec
dec
push
aam
or
adc
and
inc
or
imul
and
add
cmp
xor
mov
mov
xchg
lea
push
fwait
add
cli
push
jb
repnz
out
push
push
stos
js
aad
mov
push
xchg
cmp
pop
movsl
jb
pusha
cmp
mov
repz
sbb
xor
pop
idivl
dec
cltd
xor
sahf
xchg
sub
cmp
xor
lahf
xor
sbb
mov
mov
adc
jnp
mov
andl
loopne
sti
daa
mov
ss
inc
pop
mov
cmp
cmp
insl
or
mov
cmp
imul
testb
or
loope
push
inc
pop
out
stc
pop
nop
cmp
fimuls
cmp
aas
push
add
std
adc
dec
mov
sub
xor
sub
jne
les
or
iret
in
sbb
jge
outsb
imul
cs
out
xchg
sbb
cmp
inc
in
and
mov
ret
or
pop
in
sahf
repnz
xor
lcall
fcoml
mov
movnti
cmp
or
scas
sar
add
pop
dec
scas
mov
mov
mov
ljmp
shlb
inc
outsl
and
mov
test
push
sub
aad
adc
dec
jmp
lret
add
or
push
or
xor
icebp
and
or
cwtl
inc
pop
subb
jo
dec
bound
push
xorb
mov
das
repnz
lret
fldcw
mov
pusha
xchg
sbb
pop
inc
fbstp
mov
insb
sub
mov
fs
add
in
ret
iret
inc
shl
orl
in
lock
lock
xchg
mov
xor
lahf
aaa
adc
inc
or
xchg
sub
mov
popa
push
dec
mov
adc
xchg
inc
xchg
ret
hlt
pop
add
mov
in
add
roll
mov
dec
and
ljmp
popf
or
flds
aas
add
or
imul
sub
mov
pop
iret
mov
cmp
aam
xchg
std
out
cwtl
rcrl
and
mov
xchg
shlb
pop
inc
inc
xor
stos
ljmp
lods
sbb
mov
out
dec
cld
cs
cmpsl
fucomp
or
sbb
in
stc
insl
and
pusha
lea
mov
cmp
cmp
sbbb
inc
dec
clc
pop
cmp
lahf
loopne
xor
pop
mov
fsubrp
pop
sti
xor
jp
and
dec
pop
mov
mov
mov
mov
test
adc
fistps
jo
mov
push
jo
lods
jmp
xchg
lds
bound
jo
mov
je
pop
aam
pop
mov
inc
in
xchg
test
lret
mov
sub
scas
push
xlat
lock
rolb
pop
aad
loop
xor
and
jb
mov
stos
movsl
subl
les
roll
sahf
out
dec
mov
add
adc
sub
adc
fimuls
loopne
mov
mov
sbb
jp
mov
lcall
popa
loop
js
push
inc
and
out
outsb
fdivl
cli
jmp
inc
pop
fs
fwait
cld
std
sub
cmpsb
sub
out
arpl
xchg
and
shl
push
dec
insl
out
mov
ds
testl
cmp
ret
fcmovnb
jbe
shl
outsl
idivb
cmp
jb
mov
add
add
pop
push
push
push
adcl
lret
xchg
lock
pop
mov
sti
sub
test
icebp
mov
cwtl
sbb
and
lret
mov
outsl
jge
out
scas
fs
fdivrp
ja
xlat
popa
fistpl
jb
test
inc
or
mov
mov
outsl
bound
popf
sub
mov
and
jp
popf
xor
jno
dec
outsb
stc
test
sub
pop
xor
mov
mov
mov
movsl
mov
inc
dec
popf
mov
loope
lret
aaa
aas
mov
mov
fstpl
jne
pop
pop
and
ret
push
in
mov
add
pop
sahf
and
dec
sub
in
repz
and
incl
xor
mov
mov
std
xor
or
jno
add
push
inc
outsb
inc
add
lods
into
fs
cmp
nop
inc
or
adc
mov
xlat
imul
in
fwait
test
adc
push
out
mov
outsl
fisttpll
rcr
sub
sbb
mov
das
stc
ds
lods
fs
outsl
fimull
shlb
mov
shl
mov
cltd
cmp
ja
idivb
push
dec
out
fwait
mov
shrb
mov
data16
inc
jnp
ss
inc
adc
xor
sbb
fmuls
mov
flds
repnz
or
insb
int3
test
popf
dec
sbb
lret
enter
les
loopne
aam
adc
jp
frstor
cmp
lahf
jne
jge
nop
dec
push
pushf
test
xor
mov
push
inc
icebp
sbb
in
add
xlat
pop
jo
mov
xchg
out
in
mov
jnp
adc
in
mov
fstp
push
adc
or
adc
mov
mov
push
data16
mov
inc
or
inc
sahf
lretw
pushf
js
fdiv
ljmp
lods
das
pop
and
andl
push
inc
divb
das
inc
imul
cmc
mov
sub
inc
add
adc
comiss
cmpsb
xor
fs
mov
loop
repnz
mov
cmp
inc
adc
jmp
dec
je
lock
in
stos
and
out
mov
pop
cmc
lret
fcmovnu
adc
inc
inc
xor
jmp
pop
es
out
aam
sbbl
data16
adc
push
xor
inc
and
rcl
testl
push
iret
std
daa
inc
and
adc
arpl
fbld
mov
or
cmpsl
sub
ss
xor
mov
test
ds
and
test
or
xchg
cmc
mov
xlat
sbb
push
insb
test
push
mov
sub
repz
pop
mov
ror
cmc
daa
xchg
sub
cmpsb
xchg
adc
cmp
push
loope
sarb
repz
pop
mov
lret
enter
cmp
into
shl
icebp
leave
mov
add
ljmp
pop
inc
orb
mov
xchg
jno
stos
pop
call
ds
cld
xor
ljmp
jo
cmpsb
cmp
fnstcw
ds
jnp
fwait
pop
loope
mov
cmpsl
xor
loope
adc
fiadds
loope
xchg
cld
leave
imul
jmp
mov
mov
mov
outsb
or
sub
imul
adc
lcall
jbe
pushf
clc
push
push
outsl
mov
add
dec
pop
jle
and
sub
inc
push
sub
inc
dec
lcall
xchg
and
sub
rolb
ret
ja
divl
std
nop
cmp
stos
xor
jg
je
jge
push
rolb
jmp
mov
cmc
pushw
or
add
arpl
jns
add
dec
cmp
cli
idivb
cmp
dec
loopne
jb
scas
popa
movsl
cld
shrb
pop
test
mov
add
mov
cmpsl
or
popf
and
dec
insl
mov
cmpsb
mov
call
cli
int
shl
mov
sbb
shrb
mov
cmpsl
cmpl
pushf
and
lock
fwait
ret
lds
fwait
adc
and
mov
inc
dec
popa
add
mov
mov
test
fsubrl
stc
pop
pop
cmp
insl
aaa
xor
test
daa
mov
pop
lret
outsb
int3
xchg
pop
fs
cmpsb
stos
push
add
clc
adc
dec
adc
cmpsl
xchg
test
jno
push
jbe
and
pop
cld
lret
xor
xchg
xor
cmp
nop
ficompl
cmp
xor
mull
xchg
sahf
in
bound
js
rcll
or
sbb
jl
leave
inc
or
sbb
scas
lret
mov
jmp
adc
sub
add
ljmp
push
dec
sub
insl
lods
testl
pop
jo
ret
mov
pop
dec
push
dec
sub
inc
push
fwait
mov
push
inc
push
in
jl
shr
inc
aad
fsubs
dec
sub
scas
inc
xor
mov
repz
ret
add
mov
xchg
mov
jge
rcl
iret
out
jmp
mov
or
pop
inc
insb
adc
xor
movsb
shll
mov
loope
lcall
out
xchg
fwait
inc
xchg
ret
inc
jge
orb
imul
jne
jp
jmp
mov
cmp
fwait
jbe
add
add
sbb
jge
pop
add
fstpt
daa
mov
pop
das
mov
mov
test
mov
mov
loope
mov
mov
jo
out
ret
sbb
inc
insl
xchg
dec
mov
stc
or
call
pop
or
js
outsl
lock
push
cmpl
xor
pop
fisubl
mov
jbe
jecxz
pop
mov
jg
cmpsb
sub
insb
out
adc
push
push
push
cmp
jp
outsl
dec
imul
pop
xor
popf
sub
jbe
mov
dec
push
dec
jns
pop
enter
xchg
jae
sbb
ret
lahf
dec
in
fmulp
xor
or
ds
pop
sub
dec
test
adc
inc
sbb
lds
fdivrs
inc
dec
push
shrb
fwait
int
lods
dec
xor
or
mov
cmp
dec
fbstp
xchg
and
jl
gs
add
mov
adc
mov
lock
imul
clc
push
gs
add
mov
popa
imul
xor
pop
mov
and
aas
mov
imull
sub
in
pop
pop
aam
and
cmpsl
mov
cmp
or
fimuls
sahf
nop
or
cmpsb
aam
pop
inc
push
push
adc
hlt
xlat
sbb
stc
lods
push
xchg
pushf
pop
ss
mov
test
sub
adc
inc
push
dec
cmp
imulb
jo
sti
xchg
scas
push
repnz
jmp
data16
mov
ficompl
xchg
adc
aaa
sub
sbb
repnz
sbb
ficompl
sbb
jmp
ss
movsl
iret
jo
jb
ret
pop
xchg
cmp
lock
jno
push
fcomi
outsb
pop
jp
pusha
and
jmp
cmp
mov
add
mov
pop
sub
lds
cmpsl
xor
in
jnp
push
scas
add
in
call
fwait
dec
addr16
push
cmpsl
pop
imul
mov
push
cmp
mov
mov
dec
jmp
mov
pop
ror
cmpl
orl
xor
adc
cmp
adc
shrb
dec
mov
adc
pop
data16
aam
mov
addr16
dec
lods
jp
movsl
pop
dec
inc
or
mov
push
mov
into
add
add
cwtl
fidivrs
inc
jae
mov
in
inc
pop
icebp
xlat
lret
or
pop
mov
scas
mov
notl
negb
add
dec
and
sub
mov
fnstcw
insl
xor
mov
or
sarl
fisttpll
push
sbb
add
push
sub
jae
aas
call
dec
add
xchg
xchg
lods
inc
add
sbb
cs
sti
sbb
jo
lods
mov
aam
push
ret
jae
imul
adc
cmp
test
cmpsl
test
add
subb
jle
mov
data16
fstps
xchg
dec
popa
jnp
aas
sub
mov
xchg
fcoms
or
sbb
jmp
cmp
jns
stos
stos
lds
je
sbb
inc
movsb
or
mov
ret
rcrb
sti
sub
push
xchg
push
cmp
cmpsl
loop
or
ret
in
xchg
cmp
xchg
je
mov
test
sarl
lcall
lcall
push
mov
je
in
dec
js
jge
adc
sbb
fwait
fld
dec
insl
in
cmp
cmpsb
inc
mov
ja
jae
pavgw
mov
repz
jmp
stos
imul
mov
clc
imul
pop
rcl
pop
mov
push
jbe
adc
lea
jg
adc
xchg
pop
xchg
push
jg
add
nop
pop
inc
jecxz
xchg
ret
pop
lods
sub
mov
ret
cmpsl
sbb
shrl
enter
xor
ret
inc
dec
push
sbb
jecxz
fbstp
add
out
pop
enter
lds
flds
mov
jge
mov
inc
pop
push
mov
push
adc
in
ss
stos
dec
add
rolb
cmpsl
jp
jl
cmp
pop
push
pushf
sti
or
stos
xchg
cs
dec
fldt
xchg
cmpsl
inc
sahf
xor
xor
repnz
cld
push
stos
sub
pop
pop
stc
fwait
and
push
or
leave
daa
xor
push
push
mov
mov
sub
iret
int3
xchg
inc
mov
js
sbb
cmp
loope
cmpsl
xor
pushf
movsb
hlt
xor
lock
push
mov
cmp
adc
repnz
xchg
pushf
or
pusha
loope
sub
repz
sub
scas
inc
std
add
dec
cmp
dec
inc
push
push
dec
adcl
jcxz
das
movsl
xchg
inc
inc
sub
dec
orl
gs
out
aas
jb
dec
dec
and
loop
mov
stc
sbb
rcrb
mov
and
test
mov
fxtract
jae
pop
in
push
cs
cmp
sahf
dec
xlat
nop
dec
movsb
jle
mov
cmpsb
lods
sbb
push
fs
or
inc
add
andb
push
fcmovnu
cmp
adc
ljmp
ret
jb
flds
popa
or
mov
hlt
xchg
and
xchg
mov
or
inc
in
jmp
inc
cmp
and
xor
mov
mov
or
xchg
lds
ret
pop
out
cmpsb
adcl
adc
test
hlt
and
stos
std
add
pop
fs
adc
pushf
sbb
cmp
stos
cmp
xor
push
insb
jge
mov
lods
pop
add
cmp
lcall
xlat
mov
icebp
in
sbb
outsb
pop
sub
adc
push
lret
xchg
cwtl
subl
push
sub
or
adc
cmp
and
rolb
lret
add
movsl
test
mov
sub
and
loopne
imul
sbb
push
insb
adc
cmp
idivl
clc
dec
jmp
cmp
push
int
xchg
lahf
and
ds
cmp
leave
push
std
mov
mov
ds
pop
fs
push
loop
dec
test
adc
lods
or
inc
lahf
in
fs
push
dec
loope
inc
and
xchg
sub
std
or
inc
or
mov
xchg
xchg
xlat
push
test
cmp
mov
subb
mov
icebp
rorb
xor
in
in
mov
divl
or
add
mov
sarl
loop
xor
xor
xchg
xchg
mov
shlb
incb
add
mov
jecxz
andb
in
pop
or
pop
in
add
push
repnz
sbb
lea
add
dec
dec
aaa
push
jns
lret
sbb
out
mov
add
je
insb
adc
cld
cli
jnp
loop
lret
mov
jae
add
test
cmc
out
popf
adc
stc
fdivl
xor
mov
jbe
sub
repnz
sahf
add
cli
pop
popf
sub
scas
shll
dec
fimuls
fcoml
add
loopne
in
pop
jmp
lds
xor
jp
adc
mov
rorl
out
adc
ljmp
adc
iret
mov
and
mov
stos
jno
add
pop
sahf
lret
int
pop
jg
jg
mov
sub
jo
mov
sti
loop
sbb
inc
and
mov
arpl
int3
mov
dec
call
or
enter
in
test
lea
popf
and
xor
loope
and
mov
ret
mov
jle
call
test
in
xchg
dec
out
add
mov
jae
rol
mov
dec
push
jg
fbld
adc
mov
and
jmp
sub
je
andl
mov
sub
push
inc
mov
lds
push
push
jmp
aam
sbb
adc
or
xchg
xchg
mov
orl
sbb
movsl
mov
xor
mov
inc
lods
movsl
or
dec
sbb
int
movsl
cltd
sti
mov
call
cmp
inc
add
daa
pop
mov
test
add
pop
lock
sbb
fprem
jecxz
fcmovnbe
push
inc
cmp
cwtl
cmc
popf
cmp
ja
popa
cmpsb
inc
mov
sbb
push
mov
scas
add
fcmovnbe
pop
jbe
lahf
idiv
and
sub
rorb
dec
cmpsb
aad
dec
mov
mov
mov
stc
cs
gs
lret
xor
jecxz
pop
sbb
push
jbe
outsl
sbb
inc
test
sbb
xchg
out
jg
scas
mov
push
mov
rcl
ss
dec
adc
push
lods
imul
jnp
push
pushf
in
cmp
setno
dec
rcl
and
ds
jge
int
mov
and
fwait
push
sub
or
mov
clc
mov
push
pop
cmpl
testb
mov
xchg
into
addr16
pop
cmpsl
sti
mov
adc
ret
stos
and
inc
xchg
dec
call
arpl
rol
cmp
dec
mov
xchg
aad
ja
mov
or
dec
xor
pushl
es
dec
cmp
xchg
dec
shlb
cmp
js
dec
insb
mov
ret
shrb
cld
pop
jo
fwait
sti
inc
mov
leave
cwtl
inc
arpl
pop
jg
cmpsl
lock
fsubp
ss
dec
stos
test
mov
lret
insl
push
mov
jp
or
add
out
lods
lods
ljmp
add
icebp
mov
inc
xchg
dec
rclb
sub
stos
push
xor
and
outsl
cmp
mov
call
inc
js
xchg
cmp
push
xchg
mov
pusha
and
es
rcr
add
pusha
out
lea
notl
xor
repz
xor
out
imul
jbe
sbb
out
scas
icebp
dec
sbb
setbe
pop
dec
xor
mov
ja
sbb
mov
test
add
pop
dec
sub
sub
mov
push
or
add
and
flds
sbb
add
insb
scas
lods
xchg
xchg
hlt
mov
insl
sbb
cli
mov
loope
jl
jg
into
push
sti
sub
xchg
je
cmp
iret
sub
jge
test
mov
or
dec
cmpl
sbb
fsubrs
arpl
mov
adc
dec
xor
gs
cld
in
ds
outsb
scas
cmpsb
aaa
mov
cmpsl
fdivl
sub
cmp
add
arpl
into
daa
sti
test
in
add
mov
cltd
xor
fwait
scas
cmp
in
cs
and
cld
mov
push
ret
inc
inc
mov
icebp
stos
and
dec
fdiv
sbb
cmpsb
loop
outsb
es
mov
or
push
iret
psubq
pop
ss
jne
push
adc
adc
jae
jl
dec
fs
out
fistpll
push
mov
test
mov
pop
out
stos
popa
sub
in
push
ds
cmpb
out
mov
push
lods
fmull
pcmpgtd
decl
in
mov
es
inc
inc
outsl
std
jne
jbe
leave
cmpsb
test
add
xchg
mov
mov
daa
out
inc
cwtl
ficoml
push
dec
popa
and
outsl
lods
or
outsb
jecxz
cmpsl
lcall
cmp
push
jo
mov
cmpb
shlb
dec
cmp
stos
gs
xchg
insb
cmp
icebp
lods
mov
stos
xor
or
lods
and
loopne
outsl
and
call
or
sahf
jp
push
push
push
fidivl
icebp
gs
shlb
in
data16
inc
xor
xchg
mov
add
mov
cltd
jp
jp
push
andb
loopne
mov
mov
fidivrl
pushf
and
mull
lahf
jne
frstor
loop
xor
movsl
add
pop
popf
notb
add
pop
int3
daa
and
xchg
jp
repz
mov
les
or
adc
mov
scas
pop
in
pop
sbb
jmp
cwtl
int3
mov
or
push
cmpsl
sub
cld
repz
adc
jl
ljmp
repnz
sbb
sti
shrl
jbe
imul
jl
cmpb
mov
loope
in
mov
leave
pushf
mov
pop
xor
cmp
xchg
imul
popa
pop
out
add
mov
mov
dec
jl
ret
and
mov
and
add
cli
scas
pop
jno
mov
inc
clc
insb
xchg
fisubl
gs
lods
mov
dec
addb
cmpsb
lcall
les
lret
inc
sub
in
pop
sbb
fsin
aam
aad
jnp
sub
pop
aaa
mov
or
sbb
rorl
gs
adc
lds
push
push
int
data16
add
mov
loopne
pop
dec
lds
mov
movsb
pop
enter
xchg
scas
adc
or
pop
jmp
push
mov
pop
add
xor
je
std
pop
sub
xchg
xchg
test
jb
inc
xchg
testb
addr16
sahf
js
fsubrl
movl
push
pop
xchg
movsb
xchg
test
jbe
loope
xchg
push
jl
inc
incb
cmp
xchg
mov
stos
jb
pop
xor
jecxz
jb
mov
cmpsl
into
adc
lods
mov
mov
cmp
int
stc
cmp
hlt
xchg
stc
adc
ds
insl
add
jmp
fwait
mov
jge
popa
ljmp
int3
orl
pop
mov
lret
jno
out
mov
push
icebp
jmp
jp
adc
ljmp
out
xchg
pop
inc
cld
out
push
mov
movl
pop
xor
add
fsts
lahf
cmpxchg
stos
mov
pop
sub
push
xor
sub
call
stos
enter
add
int3
pop
mov
popl
das
mov
fistl
add
stos
int
sbb
pop
in
insb
int
data16
or
add
mov
or
jbe
int3
xchg
mov
iret
cmp
dec
xchg
dec
addr16
add
hlt
jle
mov
negb
test
int
dec
jns
orl
push
mov
dec
or
push
pop
inc
in
and
repz
int3
inc
sub
flds
and
into
mov
cmpsl
clc
int3
jp
shlb
int3
inc
in
cli
jl
mov
xor
or
and
dec
std
sbb
add
lret
out
mov
fidivrs
xor
inc
aaa
adc
push
cmp
inc
mov
cmp
popa
sub
dec
icebp
outsb
mov
stc
push
xchg
addl
cmpsb
negb
push
cs
popa
pop
pop
xchg
cmp
scas
push
xor
push
cmp
scas
adc
jg
ficomps
cmp
rol
cmp
incb
pop
aam
pop
xor
stos
rcll
test
repnz
test
aas
bound
imul
mov
fstps
hlt
xor
pop
sub
sub
inc
insb
xchg
cmp
int
push
std
adc
ljmp
adc
push
sub
repz
rcrb
imul
jo
xor
and
pop
cmpsl
xor
andb
lods
pop
push
pop
and
js
lods
out
ret
scas
and
jp
xchg
adc
pop
iret
cmp
in
sbb
dec
mov
or
addr16
mov
dec
call
xchg
int
lock
mov
or
sbb
pop
push
sub
push
lret
jmp
or
cmp
test
aam
ja
js
jmp
ja
addr16
jle
pusha
pop
sub
shl
mov
push
add
xor
jae
inc
jns
mov
test
cmc
gs
xor
js
xchg
dec
ss
hlt
pop
outsl
shrl
aam
add
push
mov
hlt
ret
push
push
jmp
xor
cmpl
xchg
mov
test
gs
push
lods
inc
cmp
test
clc
sbb
psubw
add
mov
xor
xchg
adc
mov
scas
xor
pop
inc
jge
cli
or
imul
sbbl
aam
mov
inc
mov
sub
mov
jecxz
fists
hlt
push
push
inc
aad
fdivrs
iret
dec
ret
repz
push
pop
lret
sbb
sub
sbbl
fndisi(8087
out
mov
mov
loop
scas
push
dec
mov
jg
mov
ss
movsb
adc
mov
cmp
dec
cmp
jne
out
sub
stos
data16
pop
cs
adcb
addl
adc
xor
jne
ljmp
cmp
not
adc
jnp
jb
push
lea
add
pop
imul
std
loop
movsb
aaa
push
test
and
inc
xor
decl
or
mov
cmpb
jl,pn
stos
outsl
lods
movsb
ds
ret
aas
pop
js
cmp
outsl
dec
adc
movsl
sbb
out
insl
sbb
js
loope
mov
sub
iret
cmpsl
push
sbbb
adc
xchg
loope
lcall
inc
pop
lret
pushf
fwait
xchg
or
push
pop
sbb
inc
js
aas
rclb
mov
mov
sub
dec
sub
mov
fcoml
iret
shlb
call
mov
jo
stc
in
das
mov
inc
xchg
aam
pop
xchg
mov
scas
pop
adc
dec
js
and
sub
addr16
pushf
int
lret
test
cmp
push
cwtl
out
dec
daa
nopl
leave
xor
jg
loop
lods
aas
clc
push
ret
xor
js
repnz
fst
or
lahf
mov
jb
dec
outsb
mov
inc
sbb
pop
hlt
scas
lahf
jg
scas
add
inc
xchg
jae
add
inc
cmp
int
in
lret
movsl
dec
call
inc
cmp
lea
pop
stos
flds
jne
xor
or
enter
dec
push
sbb
push
mov
ja
mov
les
adc
and
movsb
imul
jp
add
shlb
jbe
sbb
mov
and
dec
or
push
sti
icebp
cwtl
pop
fs
int3
cmp
push
leave
lods
out
inc
pop
fs
sbb
sub
mov
add
jecxz
push
in
orb
fs
nop
in
mov
test
fildl
or
pop
mov
jne
inc
xlat
cmp
cmp
inc
push
iret
repnz
out
out
and
addr16
dec
xchg
mov
push
push
xor
mov
repnz
mov
pop
out
lock
push
sahf
or
insl
add
shrl
sub
inc
bound
fndisi(8087
les
sbb
lds
sub
cmpl
mov
mov
daa
hlt
pop
out
inc
cmpsb
ret
sbb
and
test
cmp
adcb
lods
xchg
stc
mov
and
and
shlb
popa
sub
repnz
in
inc
jmp
cmp
les
adc
dec
sub
aad
fidivrl
cs
pop
push
test
addl
ret
movsl
outsb
xchg
out
xchg
lea
push
jno
imul
dec
and
jge
gs
jmp
push
sarl
fisttpll
push
add
mov
lods
fsubs
fstpt
xchg
jnp
xor
inc
int3
aaa
cwtl
pop
push
pop
pop
push
cmc
inc
add
iret
xor
sti
ss
adcl
ljmp
int3
ljmp
mov
movsb
mov
popf
add
testb
aad
cmp
shl
cmc
pop
jo
lahf
mov
inc
push
aad
fimull
xor
sbb
out
cmp
ss
test
mov
add
xor
xchg
sub
gs
shll
dec
mov
mov
cmp
mov
dec
and
jecxz
cmp
mov
add
dec
clc
push
sbb
push
xor
sbb
xchg
sahf
sbb
out
outsl
outsl
inc
pminsw
shrb
pop
rclb
push
jl
xor
push
ret
fidivrs
or
pop
movb
loope
sbb
lock
insl
cmp
xor
mov
ret
int
in
sub
ds
push
repz
sub
or
ljmp
shrb
fincstp
ss
fwait
cmp
aaa
mov
out
imul
sarb
push
into
sbb
xchg
je
nop
pop
ss
pop
xor
jmp
xor
jns
xchg
mov
adcb
aas
stos
mov
pop
loopne
test
lcall
sub
repz
push
xchg
jbe
mov
mov
dec
fldenv
xchg
push
or
mov
jp
imull
pop
inc
fstpl
push
mov
cmp
mov
and
mov
outsb
xchg
hlt
les
sub
xlat
xchg
movsb
cmpsl
cmpsb
mov
sub
push
mov
es
pushf
mov
or
cmpsl
in
sbb
lret
scas
pmuludq
bound
mov
repnz
popa
in
push
enter
adc
cmc
into
jg
xor
dec
dec
cli
hlt
dec
xor
or
fsubl
xchg
mov
daa
cmc
adc
cmpunordps
mov
stc
jno
adc
cmp
dec
test
jne
xchg
imul
add
jns
test
shlb
sbb
outsl
ja
mov
mov
ss
sub
push
add
pop
mov
jmp
mov
out
jmp
outsl
pushf
pusha
mov
push
cmp
lret
stc
inc
fwait
xor
sbb
fwait
loop
sbb
xchg
pop
subl
or
subb
fcomip
jle
xor
pop
xlat
inc
sbb
nop
jae
lahf
ret
or
sub
stos
inc
fstpl
jp
mov
pextrw
mull
ss
sarl
sub
sub
outsb
ss
in
xchg
fdivrs
subl
mov
popf
mov
in
and
inc
arpl
xchg
add
sub
sti
xlat
jge
cld
add
cmp
shr
or
mov
cmp
xchg
and
push
add
mov
shl
mov
fs
inc
add
fistps
mov
ja
sub
jge
outsl
mov
popf
jg
aam
pushf
imul
push
stos
rol
lods
fsubl
bound
add
jo
adc
cld
arpl
jne
fistpl
rclb
fdivr
inc
adc
jle
add
mov
xchg
fsts
xchg
cli
add
jns
scas
in
fldcw
sub
xor
icebp
movsb
hlt
adc
scas
aam
sbb
scas
and
inc
loop
mov
jle
out
mov
mov
push
add
push
jo
sub
push
int3
add
mov
pop
mov
repnz
xchg
shld
mov
jns
xchg
xor
iret
fcmovne
out
add
sub
and
pusha
stos
mov
jbe
or
repz
push
mov
or
mov
scas
jmp
les
in
jle
or
cs
xchg
out
pop
iret
pop
xor
pusha
adc
fimuls
lds
xor
or
jl
idivb
or
mov
divl
mov
pop
adc
cmpsl
or
out
fidivrs
fsubs
push
adc
ficoml
filds
cli
sti
push
inc
cmpsl
adc
icebp
mov
out
stos
mov
inc
xchg
inc
js
mov
stc
cmovo
mov
xchg
ss
inc
das
test
xchg
jb
ret
dec
dec
cmc
fwait
int
pop
inc
ficomps
imull
ret
leave
cmp
bound
shlb
scas
xchg
push
lcall
mov
dec
call
scas
and
jl
test
dec
add
jo
jmp
xchg
stos
jnp
pop
or
inc
xchg
out
mov
cltd
adc
int3
push
cmp
mov
jns
das
aaa
mov
stos
ljmp
and
dec
movsb
dec
iret
cmp
cmpsl
insb
cli
sbb
cmpsl
jmp
push
push
or
jns
pop
lret
rorl
dec
test
mov
lods
jecxz
or
or
rol
cltd
xor
cld
sbb
xchg
sar
mov
mov
pop
sub
daa
frstor
jp
jmp
jecxz
and
cmp
dec
outsl
inc
mov
push
cltd
dec
jecxz
sbb
mov
inc
mov
ret
iret
jg
insl
cs
or
jl
sbb
cmc
aas
fdivr
jo
fwait
aam
cmp
inc
pop
icebp
inc
pop
cmpsb
call
in
int3
pop
cmp
add
cltd
mov
xchg
pushl
arpl
test
fldl
lds
push
dec
fucomi
mov
rcrb
xor
sahf
jne
mov
in
ja
xor
and
mov
sbb
lcall
pop
sbb
movsl
xorb
movsb
cmpsl
cli
pop
movsl
inc
sub
pop
adc
pop
adc
movsb
and
mov
das
pop
mov
add
gs
jmp
inc
iret
add
inc
sar
cmpsl
movsb
shrb
fadd
cld
dec
and
mov
inc
stos
pop
rcll
xchg
jb
test
loope
xchg
pushf
imul
ljmp
add
lods
cmp
das
cmp
adc
dec
fcomi
push
outsl
jmp
out
daa
jbe
xchg
movsb
and
or
xor
push
mov
push
mov
imul
cltd
dec
push
push
subl
std
sub
fidivrs
sbb
sub
ficoml
mov
or
decb
idivb
push
roll
cmpl
inc
mov
or
push
jl
test
xlat
subl
jae
adc
mov
pop
es
pushf
shll
ret
call
sti
mov
add
inc
or
inc
jb
mov
sar
and
mov
andb
jle
mov
enter
leave
mov
xchg
rclb
aas
fistpll
fsubr
jne
xchg
pop
adc
test
or
or
push
int3
jbe
sti
lea
jb
testl
or
pop
jo
test
or
shlb
sti
hlt
adc
inc
lret
mov
into
out
outsl
pop
mov
lret
adc
mov
loopne
or
in
cmpsl
xchg
or
mov
cmpsl
or
sub
adc
cmp
daa
rcr
std
hlt
push
mov
imul
ret
lcall
je
out
xchg
lock
cs
loopne
into
push
icebp
cmp
in
int3
ficompl
addr16
inc
sbb
inc
mov
xchg
das
jge
test
cmp
ret
or
std
mov
repz
lods
inc
stos
cwtl
add
xchg
test
scas
xlat
fldenv
push
and
mov
andb
arpl
sub
rclb
xchg
mov
std
inc
cmpb
jo
cmpsb
imul
pop
cs
push
incl
inc
mov
clc
loop
adc
movsl
pop
shll
insl
cmp
loop
aas
or
jmp
lret
inc
insb
cmp
repnz
inc
ja
stos
cwtl
mov
sbb
lock
out
vxorps
mov
andb
mov
jmp
mov
popa
mov
cs
aaa
sbb
loop
push
rorb
ret
in
nop
and
hlt
cmp
push
mov
ja
jb
jne
push
pusha
xchg
add
cmp
imul
pushf
or
cli
dec
mov
mov
dec
jmp
fnstenv
dec
fisubrs
ljmp
sbb
jle
repz
mov
in
cmpsl
pop
lock
test
test
mov
out
sbb
das
pop
push
paddb
arpl
xor
das
movsl
and
adc
add
cmp
outsl
cld
int
je
adc
xor
mov
mov
cmp
adcb
push
shll
pop
sahf
inc
jne
adc
or
pop
mov
or
lea
ret
js
jl
das
push
push
adc
adc
arpl
mov
pop
xchg
sub
loop
pusha
shl
sub
sub
mov
sub
cltd
sbb
test
jnp
sub
xor
sbb
sbb
jmp
test
dec
test
sbb
mov
push
pop
cmp
cwtl
push
xchg
mov
and
dec
je
pop
bound
aad
sub
mov
shll
mov
lahf
pop
xchg
inc
notl
fistl
adc
call
cmovg
push
sti
push
mov
lcall
dec
in
sub
sbb
movsl
jp
xchg
pop
mov
in
dec
sahf
out
mov
lret
pop
xor
xchg
cmp
jns
sbb
cmp
ja
leave
dec
pop
into
or
mov
sub
cmc
inc
pop
and
adc
lcall
push
ss
xor
stc
push
mov
test
rorb
inc
fwait
lea
xorl
or
pop
out
xchg
or
pop
sbb
pop
jae
notl
inc
js
rcr
lock
inc
xor
insl
and
adcb
push
test
fbld
loope
jmp
cs
sbb
adc
or
sbb
stos
inc
and
xchg
in
push
pushf
sbb
sbb
push
add
sti
test
popa
cmp
xor
inc
faddl
sbb
add
rolb
aam
pop
rol
mov
paddusw
and
add
mov
xlat
loop
cli
xlat
mov
sbbl
mov
pop
loop
pop
leave
sbb
test
dec
jle
inc
lods
inc
jp
jo
mov
sbb
sbb
cld
je
cs
jno
in
mov
lods
mov
jns
stos
dec
lcall
inc
insl
jns
aaa
lods
push
mov
jae
cs
pop
mov
int
push
pop
das
mov
cmpl
push
xchg
mov
xor
or
mov
cmpsl
cmp
int3
push
mov
jl
add
adc
xchg
mov
mov
and
push
lret
mov
lcall
loopne
inc
cwtl
jne
inc
enter
inc
adc
in
push
sub
sub
cwtl
push
add
fsubl
sbb
dec
cmp
pop
insb
out
popa
and
test
jnp
ret
jmp
adc
ss
sbb
fldenv
cmp
jle
dec
push
je
cli
push
dec
repnz
insb
jnp
sub
mov
or
inc
test
pop
and
aaa
cmp
mov
mov
or
jle
jp
and
mov
cmc
sub
sbb
add
in
stos
mov
popa
fnstcw
push
xor
lods
or
xchg
inc
add
dec
repnz
xor
dec
arpl
outsl
ja
cmp
xor
cmp
loopne
arpl
adc
dec
cs
dec
stc
xchg
shl
push
fstpl
mov
neg
cmc
cmp
dec
outsb
push
rol
in
ja
sub
sbb
cmp
mov
mov
mov
daa
mov
not
sbb
fldenv
arpl
ret
and
clc
daa
jo
or
pop
or
arpl
pop
mov
shlb
or
scas
es
add
mov
outsl
cmpsb
popf
stos
push
lods
shr
jl
xchg
pop
popw
sbb
movl
in
int
in
cmpsl
xchg
adc
cs
jge
pusha
push
add
push
mov
xor
xchg
lock
cmp
lahf
cld
imul
mov
jbe
adc
lret
fistpll
xor
stc
jp
add
mov
mov
ja
sbb
and
pop
cmpsl
rcrb
fwait
jbe
in
enter
cld
es
sub
and
jge
shl
inc
mov
mov
adc
insb
in
scas
cmp
pop
adc
subb
mov
mov
scas
rcrb
cmpsb
mov
ret
sub
enter
mov
xor
movsl
push
adc
cmp
push
sbb
rcll
mov
push
outsb
jbe
xchg
dec
xor
test
jmp
jp
stc
mov
pop
push
icebp
insl
gs
jmp
or
fnstsw
mov
adc
fnsave
inc
lods
add
notb
inc
pusha
mov
daa
arpl
add
loope
sar
scas
pop
xchg
fcmovnbe
xor
mov
mov
mov
out
test
aam
adc
jge
xchg
sbb
jp
popa
clc
movsl
stos
jb
xchg
fstpt
stc
push
cwtl
imul
sub
lcall
pop
in
mov
pusha
push
aam
xchg
lahf
adcb
addr16
add
and
xchg
jmp
xor
ss
cmpsb
dec
dec
test
add
pop
sbb
popf
ret
cmpsb
inc
imul
push
dec
cmpsb
push
cmp
inc
aas
sbb
inc
les
and
mov
lcall
pop
pop
add
cltd
out
xchg
sbb
pop
les
mov
loope
clc
jns
fists
cmpsb
idivl
dec
inc
and
dec
xchg
and
sbb
movsb
lds
xor
adc
inc
mov
loope
aad
into
add
cmp
outsl
scas
cmp
enter
lock
xor
repz
lods
or
xchg
shlb
ret
add
cwtd
inc
push
es
xor
mov
repnz
pushf
push
shrl
jmp
out
pop
adc
and
inc
pop
notl
sub
hlt
push
shll
hlt
mov
inc
mov
inc
scas
mov
push
push
inc
xchg
inc
pop
mov
mov
push
xor
out
cs
xor
outsl
xor
jmp
pop
mov
sub
test
cwtl
inc
xchg
outsl
imul
fwait
scas
dec
and
push
pop
fcomip
mov
mov
cli
adc
repnz
loope
xor
jb
pushf
or
adc
xor
xor
ret
push
add
dec
lret
negb
mov
pop
stos
cld
mov
adc
repnz
dec
aas
xor
notl
clc
cmpxchg
xchg
repnz
mov
lock
mov
test
mulb
jmp
in
psrlq
dec
inc
push
inc
fsubr
mov
iret
in
stos
test
mov
roll
cmp
dec
sbb
sar
cld
pop
pop
clc
aaa
push
aad
stos
pop
jno
sti
scas
lret
test
cmpb
ljmp
push
sub
push
out
and
shll
sbb
inc
clc
push
mov
mov
inc
jae
addr16
and
enter
jecxz
xchg
xchg
sbb
stc
sub
insb
pop
addb
gs
xlat
jmp
mov
scas
and
mov
and
add
mov
std
or
mov
adc
subl
mov
mov
jae
clc
insb
sbb
mov
mulb
push
ds
ret
lcall
rcl
push
xor
xchg
mov
push
mov
xchg
and
insl
ret
mov
rcrl
in
pusha
movsb
xchg
insb
push
jecxz
scas
jmp
xchg
inc
jo
dec
fnstsw
int
gs
xor
cmp
lret
loope
pop
inc
inc
xchg
mov
scas
das
icebp
lcall
sbb
jne
push
mov
sbb
sub
cmp
xor
mov
les
mov
in
cmp
inc
test
push
push
sbb
mov
mov
andl
sahf
daa
faddl
es
adc
fisubrs
inc
rclb
loop
and
fnstcw
cmpsb
out
cmpsb
in
mov
jae
cld
aas
mov
pop
sub
adc
and
and
data16
leave
sub
mov
mov
jg
dec
adc
dec
add
lret
fs
mov
outsb
inc
xchg
sar
push
mov
and
lret
or
push
sbb
into
mov
les
std
imul
adc
sbb
nop
lret
mov
xor
or
data16
xchg
rolb
push
mov
sub
lds
jnp
cs
jmp
or
mov
mov
xchg
int
xorb
sub
xor
insl
pop
push
test
mov
stos
call
inc
pop
add
outsb
add
mov
in
out
mov
sub
cmc
inc
aas
dec
lret
filds
push
outsb
mov
ror
lahf
xchg
mov
leave
mov
cmp
adc
xchg
mov
sbb
dec
js
mov
das
add
stc
dec
and
xchg
and
enter
sub
inc
pop
cld
add
jne
popa
addb
or
jno
lcall
or
icebp
mov
mov
dec
mov
pop
je
jno
cmp
cmpsl
shrb
lret
jnp
movsb
sub
mov
loope
adc
nop
es
test
fisubl
ficoms
aam
sub
xor
mov
push
addr16
push
mov
lea
lock
push
push
adc
loope
mov
dec
inc
loopne
pop
lea
add
cmp
jge
lahf
mov
and
mov
cld
mov
data16
xor
jnp
jp
mov
mov
and
arpl
cmp
jno
out
or
xor
shll
mov
sbb
in
dec
xor
inc
adc
ja
push
and
add
jp
gs
imul
es
divb
out
test
ret
push
repnz
ret
lret
leave
pop
add
pusha
insb
in
cmp
pushf
add
in
fisubrl
cmc
sub
movsb
daa
repz
push
jg
dec
jle
test
push
out
cs
sub
icebp
pop
pop
cmpsb
mov
pushf
cli
ja
add
out
mov
int3
insb
shll
cmpsb
mov
imul
cli
adc
mov
shrb
out
fsts
out
test
es
pop
mov
cwtl
dec
lods
mov
loope
mov
add
pop
ret
mov
mov
sub
xor
push
sub
ljmp
mov
lock
dec
fadds
movsl
por
mov
jl
inc
stc
mov
jo
ljmp
dec
add
enter
mov
fists
cmc
int
in
adc
rorb
sbb
imul
clc
and
inc
jno
jns
fisttpl
ret
push
jmp
imul
mov
out
movsb
cld
sbb
cmp
enter
mov
cltd
mov
add
ds
fwait
daa
outsb
adc
shl
movsl
jno
mov
sarl
in
xchg
jg
lret
rolb
imul
push
leave
dec
adc
roll
and
dec
cli
mov
mov
out
sbb
jbe
jmp
cltd
sbb
mov
pop
and
adc
dec
inc
pop
ja
sbb
enter
jnp
xor
mov
push
pop
xor
insl
hlt
adc
aam
sbb
mov
xor
pop
xor
loopne
out
setge
loop
sub
cmp
mov
or
inc
jg
in
jge
loopne
jp
xchg
pop
aam
cmpsl
in
call
xorb
mov
das
cmp
pop
cli
dec
xorb
add
lcall
pop
xchg
dec
inc
aam
in
and
incl
mov
das
cmc
xchg
int3
leave
mov
cmp
cmp
in
movsb
mov
push
inc
push
push
ret
mov
cmp
repz
jg
push
xchg
cli
das
psrld
dec
mov
ret
fcomip
aad
fs
sti
imul
movsb
inc
fs
adc
mov
xor
into
movsl
ss
iret
leave
lods
jg
out
shr
push
ficompl
pusha
pop
inc
clc
movsl
push
xchg
adc
sti
adc
inc
mov
pusha
pushl
frstor
xor
and
cltd
clc
push
outsl
mul
inc
jp
cmp
jne
aad
movsb
testl
sbb
ret
pop
push
repnz
stos
into
mov
mov
je
xchg
out
hlt
xor
mov
dec
outsl
in
divl
pop
lcall
sbb
cwtl
push
mov
icebp
jb
mov
pop
xchg
jbe
ja
mov
incl
call
dec
push
mov
xchg
jmp
adc
jns
shll
jp
shl
add
and
fbld
cli
xor
xchg
ret
stos
sub
fwait
add
and
fdivrl
mov
std
idivl
test
jns
mov
push
add
mov
inc
sbb
bnd
lret
sub
jmp
test
push
popf
movsb
aad
and
divb
adc
enter
xchg
inc
pop
pop
sbbl
stc
ja
push
dec
hlt
fmuls
outsb
push
test
jnp
jmp
cmpsb
and
and
ficomps
in
and
loope
pop
xlat
test
bound
lods
loopne
pop
sub
cwtl
mov
xorl
xchg
pop
and
jge
inc
ret
je
push
cmp
lods
lahf
and
cli
and
adc
mov
scas
pop
imulb
pop
es
sbb
and
jmp
stos
xor
xor
fwait
cmpsb
push
lods
mov
ja
inc
and
leave
xor
adc
scas
jae
js
mov
in
xor
mov
daa
aaa
push
xchg
in
sub
inc
pop
dec
les
aam
add
cmc
into
arpl
add
dec
shll
out
callw
pop
cmpsb
dec
fdiv
imul
inc
cli
xor
pushf
pop
int
jae
cli
cmp
jg
inc
clc
xchg
sub
jg
int
push
xchg
add
std
jmp
pop
adc
mov
popf
mov
ja
nop
mov
aam
sbb
push
imul
push
paddq
mov
andb
psrad
stc
clc
pop
adc
fistpll
into
testb
nop
insb
out
inc
jle
jmp
lcall
loope
mov
pop
jp
mov
dec
mov
stos
dec
insl
cmpsb
shlb
sub
xor
mov
adc
jbe
mov
mov
or
shll
push
push
enter
add
lcall
adc
mov
pusha
xor
dec
push
jnp
insl
xor
subb
sub
lahf
repz
mov
cmpsb
cmp
filds
sti
pop
fucom
adc
xor
adc
arpl
sbb
sub
bound
jb
mov
push
mov
test
fmuls
sysexit
dec
mov
jmp
scas
pop
div
arpl
pop
jmp
das
xchg
xchg
or
cmpsl
and
cmc
ret
cld
test
pop
in
adc
inc
mov
js
loopne
ret
leave
je
pop
add
rcrl
mov
and
cmp
lods
testb
jo
dec
pusha
mov
ss
inc
sahf
shrl
out
mov
out
scas
push
ret
and
mov
adc
out
dec
pop
int
js
sub
jo
push
stos
xchg
jmp
sub
xchg
in
cmp
sub
es
dec
cmp
pop
mov
cwtl
mov
xchg
fcoms
jg
add
pop
cmpsl
js
outsb
ret
test
stos
pop
adc
push
and
xchg
mov
inc
iret
data16
das
adc
nop
sub
pop
int
nop
cmpsb
jns
xor
mov
adc
out
jns
or
xchg
addr16
dec
push
loop
test
in
stc
iret
mov
mov
loop
cwtl
sub
out
mov
data16
mov
sbb
inc
ljmp
mov
arpl
push
xlat
add
mov
aad
je
pop
sar
mov
mov
push
or
out
lret
dec
pop
pop
or
or
shlb
sub
inc
sbb
sbb
mov
and
cmp
cmc
int3
mov
push
push
das
stos
into
xchg
mov
ljmp
sbb
scas
or
mov
cmpsl
jnp
ljmp
fisttps
mov
das
sub
stos
or
mov
icebp
inc
mov
sub
rcr
inc
sbbb
inc
lock
mov
dec
inc
xlat
insb
clc
ds
cmc
in
push
or
or
in
insl
pop
xchg
cltd
mov
fcomip
xlat
mov
xchg
mov
aaa
std
or
xor
call
daa
jb
mov
mov
dec
es
sub
int3
cmpb
xchg
mov
cld
je
popf
in
pop
dec
lret
push
addr16
movsb
lds
mov
scas
pusha
mov
mov
and
push
gs
push
fs
jno
and
sti
cli
in
mov
xor
fisttpll
mov
ret
scas
adc
jp
mov
mov
ret
or
out
stos
shl
push
add
incb
sbb
into
roll
aas
xor
lcall
mov
inc
test
addb
lcall
pop
jb
lret
and
ljmp
pop
add
mov
mov
int3
sbb
xchg
sbb
adc
sahf
repnz
or
mov
push
mov
pop
jmp
test
adcb
push
mov
mov
cmova
pushw
ja
pop
clc
xchg
mov
rclb
lret
in
inc
push
ret
jne
out
aaa
mov
lds
mov
pop
push
test
stc
jbe
test
js
lret
jp
lahf
xor
test
imul
aad
popf
lahf
adc
lock
in
inc
sub
out
rorl
cmp
stc
les
inc
fs
int
pop
fildll
fnsave
cmp
cltd
mov
rcll
inc
int
pop
cmp
xor
push
inc
loopne
ds
icebp
push
jecxz
loopne
lods
xchg
and
inc
addr16
dec
or
push
push
mov
shll
jae
jl
lret
mov
mov
lods
jg
mov
sti
xchg
pop
add
loop
outsb
clc
das
sarb
cmp
sbb
rep
shll
insb
gs
inc
lock
fwait
push
sbb
cltd
pop
mov
add
es
fildll
and
cmp
mov
xor
ja
jmp
push
inc
js
add
sub
inc
fwait
in
hlt
into
je
fisubrs
data16
and
cmp
movsb
xchg
cmpsl
test
adc
enter
hlt
adc
jg
adc
lcall
pop
dec
or
xor
cmc
xchg
aas
jne
push
imul
lret
cmpsb
adc
andl
mov
mov
xchg
notb
ljmp
add
sub
rclb
popf
cs
jns
mov
scas
dec
stos
out
xchg
rcl
dec
xor
leave
mov
cmp
aad
cltd
div
outsb
dec
fcoml
adc
aad
into
mov
repz
xlat
cmc
jo
out
andl
push
cmp
imul
pop
data16
sti
push
push
outsl
or
pop
xor
dec
push
popf
jo
jne
dec
sbb
pop
iret
addr16
push
pusha
mov
jo
push
cld
in
sub
xor
xchg
mov
sub
fsubrs
ja
jne
mov
orb
fcmovnu
bound
imul
jmp
push
sbb
sub
int3
lret
mov
out
movl
sbb
or
jo
hlt
or
adc
out
pop
push
iret
xor
idivb
cmpsb
int3
mov
sub
mov
mov
sbb
mov
push
insb
not
lods
fdivrl
jne
mov
mov
cmp
insb
in
es
adc
pop
or
xchg
cmpsl
or
fidivs
push
inc
add
mov
test
and
aad
cli
xchg
cwtl
aaa
xchg
mov
movsb
add
add
int
inc
test
pop
ret
push
pusha
inc
cwtl
push
mov
xchg
adc
xor
mov
add
pusha
jmp
mov
stos
mov
ror
cmp
mov
cmc
movsb
mov
pop
cmpl
divl
adc
mov
or
push
mov
jo
shlb
mull
cmc
xchg
daa
out
mov
popa
push
dec
cli
pop
mov
cmp
xchg
sub
xor
pop
xor
mov
cld
out
addr16
pop
icebp
xchg
rcr
addb
or
lret
pop
mov
sub
jnp
pop
and
repnz
pushf
and
out
mov
add
lock
add
add
jae
ss
cli
sub
or
les
jo
and
xor
or
pop
adcb
fwait
jmp
xchg
out
in
fstps
mov
int
jmp
ret
aad
push
mov
pushf
cmc
push
ret
mov
xchg
inc
jge
negb
jge
or
pop
sarl
adc
int
in
mov
mov
push
daa
cmp
enter
pop
mov
push
orl
mov
xchg
xor
popf
sbb
push
in
sbb
dec
ret
mov
jge
jge
pop
enter
sub
test
mov
pop
adc
icebp
mov
xchg
pusha
decb
bound
mov
out
xor
sti
sbb
or
dec
sub
or
fmull
sub
mov
icebp
fstl
mov
sub
je
aaa
stos
jns
or
sbb
cmc
cmp
inc
jne
data16
imul
orl
orb
jnp
mov
in
xor
sub
call
push
mov
popf
xor
les
push
dec
enter
inc
or
aad
sub
mov
aam
aam
jb
fwait
loop
mov
sbb
movsb
cmp
push
sub
sbb
loop
inc
jecxz
xchg
mov
insl
movsl
mov
jb
xchg
fmull
push
pop
add
testb
mov
lea
rorl
in
mov
jle
sbb
ret
ftst
mov
mov
loopne
andl
jge
stos
adc
outsb
push
xchg
bound
inc
inc
movsb
ljmp
xor
push
mov
cmp
mov
push
push
popf
popf
pop
and
jae
add
je
adc
std
lret
pop
shll
test
pusha
rorb
dec
outsl
stos
subl
loop
fldcw
adc
xor
inc
mov
cmc
lods
xor
dec
xor
rcll
jmp
adc
imul
out
pushf
mov
and
sub
jg
and
outsb
stc
inc
xchg
and
test
add
icebp
mov
and
adc
or
pop
push
jns
lahf
and
pop
push
xor
fwait
xchg
xlat
call
dec
sahf
sbb
mov
loopne
cmp
scas
fsubrl
lock
sbb
jecxz
mov
or
pushf
scas
loope
cmp
popf
and
hlt
mov
add
lock
xor
in
outsb
sub
inc
inc
enter
adc
cmp
mov
insl
out
push
mov
push
pop
mov
fcomps
sbb
xchg
incb
inc
push
mov
jnp
xor
pop
xchg
dec
ds
cmp
nop
imul
imul
dec
int
mov
shlb
cmp
push
into
push
jne
popf
add
subb
jbe
add
sub
push
xchg
and
pop
in
dec
push
inc
adc
loopne
das
in
cmpsb
dec
into
dec
mov
fldl
mov
pusha
fwait
popf
add
sarb
imul
int
lret
scas
in
stos
cmpsb
lods
enter
inc
cmpsl
mov
xchg
mov
inc
outsb
cltd
cmp
fucomip
notl
int3
add
add
dec
pop
retw
repz
shll
outsb
sub
mov
jo
int
vmulps
aas
std
jecxz
xchg
repz
mov
fiaddl
mov
mov
gs
fnstcw
data16
inc
int3
jns
cmp
popa
sbb
sti
cmp
loop
loop
or
repz
cld
fdiv
sub
mov
dec
imul
mov
lea
imul
cmc
int3
shlb
addr16
push
lahf
jae
test
inc
dec
inc
arpl
adc
int3
jmp
fstpt
repz
lahf
or
fildl
push
cltd
jne
jb
jbe
scas
and
nop
ss
dec
pop
fadds
arpl
push
test
scas
sub
fs
and
mov
mov
outsb
loopne
ret
add
frstor
outsb
xor
mov
cmp
test
jno
xchg
in
xchg
repz
adcb
sbb
add
mov
pop
sub
jno
sub
push
in
push
data16
xchg
call
push
cmc
inc
call
lcall
clc
mov
push
sbb
ljmp
mov
subb
jae
clc
ja
rep
push
movsl
adc
insl
jp
in
imul
cmp
dec
icebp
pop
mov
scas
scas
in
lods
mov
lret
mov
and
mov
shlb
inc
aaa
js
hlt
rclb
cmp
lods
pop
xchg
lret
arpl
xchg
out
jno
movsb
pop
lret
add
stc
or
jno
ret
jmp
xor
decb
loopne
cld
xor
or
jg
or
lcall
mov
cmp
pop
js
rorb
xchg
lahf
push
push
leave
jecxz
sub
push
jl
xchg
cmpsb
enter
or
test
int
mov
das
je
test
and
lods
mov
inc
adc
sbb
and
je
add
cmp
imul
int3
push
stos
iret
dec
sub
test
negb
je
clc
pop
mov
shrb
cmpsl
xor
repnz
int3
push
lds
stc
mov
arpl
mov
inc
test
xchg
mov
mov
scas
decl
inc
mov
sbb
sub
dec
mov
dec
push
add
lret
and
adc
sbb
cmp
sahf
fdivr
stc
xor
in
out
rorl
icebp
pusha
jmp
push
negl
lods
xchg
dec
and
das
sub
jne
pushl
sbb
jmp
xchg
jp
ja
ret
dec
cmpsl
dec
mov
pushf
cld
cmp
inc
mov
add
add
or
sbb
aad
xlat
inc
inc
cmpsl
outsb
lcall
xor
mov
fidivrl
add
or
outsl
pop
push
lods
fdivl
jae
icebp
lret
push
jmp
fwait
xor
into
mov
rcl
cmp
mov
jo
in
test
popf
and
add
nop
stos
adc
mov
movb
out
mov
adc
adc
in
xchg
sub
push
mov
aad
fldl
test
imul
cmpsl
add
mov
ja
mov
int
mov
cmpsb
cmp
movsl
lret
jnp
lods
sub
pop
adc
sbb
shl
jge
or
add
gs
orl
or
adc
sbb
fildll
idiv
rcrb
dec
cltd
xchg
arpl
inc
dec
dec
gs
lahf
ljmp
cmp
dec
pusha
cmpsb
adc
fisttpll
sub
mov
rclb
loope
push
repz
jge
sbb
and
jmp
push
fs
push
bound
push
aad
negl
cmp
mov
leave
mov
sub
lds
sti
push
sub
and
aaa
jbe
repz
add
fldl
inc
mov
sub
jecxz
leave
adc
mov
imul
test
pop
pop
jne
aas
fldt
das
gs
mov
out
push
jge
bound
push
and
jnp
jbe
shlb
xchg
dec
scas
or
lsl
lds
inc
movsl
js
imul
or
push
inc
scas
add
jecxz
fisttpll
add
nop
inc
fsubs
pop
sbb
xchg
xor
mov
sbb
xchg
and
hlt
scas
aad
jae
les
jae
xlat
pop
xchg
jne
stc
repnz
lea
in
mov
push
dec
test
mov
xchg
dec
sbb
xor
push
loopne
sbb
test
jmp
pop
mov
sbb
loop
into
stos
das
test
int3
add
cmpsl
push
fisttpll
inc
orb
jnp
push
rcl
pop
in
mov
inc
pushf
mov
adc
ljmp
mov
push
mov
mov
in
push
test
insb
pop
in
scas
fs
push
in
lret
pushf
sub
test
insl
mov
inc
stos
cmp
or
pop
mov
in
adc
xor
pop
dec
cmp
jae
ret
push
pusha
dec
mov
push
push
sub
mov
insl
fists
xchg
mov
or
mov
xor
sbb
js
ret
lea
sarb
add
pop
pushf
sbb
daa
insb
es
pshufw
push
pusha
ret
add
fcmovnb
dec
in
enter
repnz
test
push
movsb
imul
scas
sub
js
xchg
jg
nop
inc
sub
popa
jg
stos
bound
ret
out
or
icebp
repz
js
and
mov
dec
cli
pop
push
mov
fstl
sbb
dec
std
fstps
in
rcl
push
test
inc
xlat
mov
xor
mov
ret
and
push
pop
pop
lock
xchg
loopne
imulb
ljmp
push
and
or
ds
jb
push
ljmp
jmp
gs
pop
scas
or
mov
xlat
jmp
push
sbb
lods
in
popf
cs
cmp
lcall
push
inc
aaa
push
in
pop
xchg
mull
aam
cmp
clc
jae
repnz
or
dec
fistpl
lock
adc
es
imul
test
call
xchg
out
sub
adc
cwtl
xorb
loop
out
inc
sub
or
or
lods
or
add
push
fs
sbb
js
pop
sub
lret
loopne
bound
movsl
call
pushf
movsl
mov
cmp
lahf
mov
cmp
sti
insl
mov
jg
mov
js
cmp
cwtl
into
js
cmpsl
fldt
mov
push
mov
arpl
je
xchg
imul
sub
pop
xor
inc
push
fidivs
jne
cmp
lds
call
int3
add
iret
pusha
cli
dec
xchg
sbb
dec
lcall
aas
call
mov
inc
push
push
jge
xchg
mov
lahf
std
push
or
push
sub
test
xor
and
sbb
pop
loop
cs
popf
mulb
add
mov
ss
adc
pop
pop
sub
ds
inc
xchg
pop
sub
loopne
lods
pop
in
js
pop
inc
xchg
and
xlat
dec
ret
adc
test
jecxz
and
mov
push
xor
in
loope
jb
enter
cmc
fisubs
outsl
arpl
fs
arpl
movsl
stos
dec
vxorps
xchg
mov
mov
addr16
inc
ficompl
or
push
mov
test
loopne
xchg
xchg
pop
pop
jl
cmp
fiadds
xor
ja
clc
outsb
jns
aaa
jecxz
testb
imull
adc
repnz
mov
test
pop
xchg
cld
fldt
inc
lahf
mov
icebp
sub
sub
in
out
pop
jb
xchg
adcb
sub
shrd
cmp
pop
movsl
mov
mov
stc
movb
adc
aaa
mov
inc
movsb
add
nop
movq
or
lods
in
sbb
sub
adc
mov
cwtl
jb
out
add
push
or
inc
outsb
into
adc
loopne
xchg
mov
pavgb
mov
fstps
mov
pop
and
gs
inc
roll
mov
orl
test
pop
jl
mov
cltd
gs
cmc
inc
mov
lods
sti
xor
inc
mov
dec
xchg
inc
pmullw
repz
pop
scas
or
les
fisttpll
insl
sbb
cmp
push
out
adc
stos
cmp
jbe
sbb
xlat
sub
imulb
inc
adc
inc
js
mov
cltd
lret
rol
stos
sub
lret
mov
mov
fmuls
xchg
es
cmp
or
cmp
push
cmovae
dec
pop
mov
mov
mov
test
loope
inc
xchg
mov
cmp
sub
cmpsb
lret
push
ljmp
ds
mov
daa
sbb
ja
js
lods
out
jmp
push
mov
cmp
ljmp
cwtl
mov
loope
jmp
or
mov
movsb
xchg
mov
push
lcall
loop
add
push
cwtl
out
js
mov
push
aad
jl
cmp
sti
aad
mov
dec
push
cmp
add
cli
dec
cmpb
fisubs
daa
cmp
adc
inc
mov
lods
sub
mov
push
mov
mov
pop
add
fmul
jbe
in
or
test
pop
pushf
sub
mov
inc
mov
jl
jmp
lods
and
sub
loope
dec
in
and
outsl
xor
notl
sub
push
divb
pop
jle
add
adc
pop
scas
ds
dec
dec
mov
aam
push
dec
cmp
rorb
add
or
dec
into
lock
mov
jbe
or
jge
jle
dec
mov
or
in
loopne
std
sub
xor
xchg
lods
xchg
les
mov
les
out
add
sub
cmpl
out
fcoms
lret
fstl
pop
daa
insb
push
add
notl
jg
popf
dec
mov
ds
lods
and
jmp
xchg
leave
aaa
pop
pop
cmp
mov
imul
push
and
mov
jns
cltd
loope
dec
imul
sbb
push
popf
subb
sbb
inc
fs
or
addr16
ss
fs
lock
into
add
jl
sub
jno
stos
xchg
cmpsl
icebp
xchg
adc
sbb
pop
in
cmp
into
int
int
xchg
aad
mov
mov
lcall
pop
mov
insb
push
cwtl
fwait
js
sbb
repnz
or
ljmp
and
clc
fs
cmc
popf
int3
shll
stos
adc
jno
mov
add
test
in
pop
cmpsb
rorb
fidivl
fildl
out
add
movsl
int
and
test
jge
cmp
lods
sub
fistl
mov
xchg
cwtl
and
aad
int3
inc
inc
push
ds
in
jb
popa
sbb
imul
mov
xchg
decb
lcall
hlt
sbb
jp
cld
scas
movsl
addr16
mov
mov
fnstcw
jmp
rcrb
jg
int3
hlt
inc
sub
and
jecxz
xlat
push
sub
scas
push
sbb
cli
sahf
dec
pop
mov
int
insb
pop
cwtl
ja
imul
xchg
mov
pop
fsubrs
inc
pop
bound
fucomp
xchg
sub
lahf
adc
outsb
pop
das
and
pop
pop
pop
mov
pushf
icebp
pop
cld
inc
cs
imul
aam
adc
popa
cmp
fisubrl
inc
mov
push
outsl
dec
xchg
pop
ja
lods
sti
push
into
adc
in
pop
lret
pop
sbb
aaa
or
mov
xchg
sbb
enter
dec
mov
mov
jg
push
iret
ds
xchg
popf
dec
cmovs
sub
insb
loopne
popa
movsl
mov
fstl
xchg
adc
jle
mov
shll
and
sbb
in
out
in
leave
repz
push
fisubs
push
in
std
sbb
xchg
jbe
xchg
push
enter
sbb
jbe
ljmp
jecxz
xor
ljmp
data16
out
and
sbb
cmpsl
or
sbb
cld
test
sti
lock
or
mov
clc
out
adcl
sbb
cmpsl
int3
cmpl
lcall
and
mov
jnp
je
add
aaa
cld
fcom
ss
lret
pushf
cld
jnp
push
xchg
imulb
sbb
loopne
jbe
jmp
push
in
cmpsl
mov
mov
and
mov
mov
inc
out
aas
daa
xor
and
nop
ret
mov
adc
test
jl
add
mov
ret
sbb
jo
xor
inc
sub
inc
scas
hlt
mov
push
test
sub
pop
ret
and
adc
mov
and
lods
fistps
jl
add
sbb
jle
ja
mov
inc
shll
fsubrs
dec
jl
pop
xor
dec
mov
insb
insl
incb
mov
pushf
add
pop
inc
inc
lcall
addb
fwait
out
out
dec
sbb
add
lds
pop
and
xchg
mov
adc
sub
scas
pop
xchg
mov
pop
es
pushf
jmp
jb
mov
xor
stc
xchg
mov
sbb
mov
inc
sbb
xchg
int3
pushf
push
cmp
dec
mov
jb
in
mov
in
rorl
cmpsb
imul
imul
daa
call
dec
arpl
cmpsb
mov
pop
mov
icebp
sub
ja
xor
cld
pop
inc
mov
stos
incl
xor
push
xchg
jp
hlt
sarl
cmp
mov
ficomps
out
fcomps
in
dec
imul
sbb
mov
dec
ret
iret
push
jg
dec
loop
mov
xchg
movsb
dec
mov
fldt
pushf
add
dec
cmpsl
push
xchg
mov
pop
mov
add
loopne
xchg
pop
rcl
outsb
aaa
fsqrt
jb
cmc
inc
jle
push
leave
adc
out
mov
sbb
mov
ficoms
sub
into
stc
inc
jbe
popa
fsubs
aaa
dec
push
in
jl
dec
mov
fsub
loope
mov
test
jae
rorb
call
mov
ljmp
or
cmp
mov
cld
insb
lock
sub
pop
sbb
int3
imul
cmpsb
xor
cs
gs
xor
lahf
and
icebp
jo
jp
std
lret
stos
cltd
test
rol
jo
sarb
inc
out
xor
and
inc
shll
ljmp
ds
mov
mov
mov
pop
dec
adc
jg
jecxz
in
cli
push
ljmp
xor
imul
cltd
lods
jecxz
iret
rorb
scas
add
pop
jmp
rcrb
sbb
arpl
and
nop
mov
mov
lcall
std
mov
jb
lret
scas
jg
jg
adc
add
lds
data16
movsl
test
idiv
insl
adc
xor
cmp
imulb
mov
adc
loope
pop
push
mov
mov
lds
in
jg
stc
inc
or
sub
stos
stc
inc
in
and
push
sarl
and
and
scas
outsb
aaa
fwait
push
pop
or
push
fwait
mov
std
dec
push
xor
push
sahf
add
pop
sahf
xchg
add
adc
push
movsl
ds
sub
idivl
scas
xchg
addl
adc
pop
xchg
or
mov
into
cmp
push
and
dec
adc
lock
jno
in
out
mov
icebp
ret
push
cmp
mov
push
dec
xchg
push
addr16
jb
subb
sub
mov
fsubrp
xor
mov
gs
sub
sbb
add
repz
scas
add
and
xlat
mov
imul
filds
into
mov
add
lahf
cs
jns
std
add
call
inc
mov
sub
cmp
mov
add
scas
add
stos
jge
mov
pop
pop
scas
mov
push
jp
ret
sub
ljmp
adc
xor
xor
jnp
push
loop
hlt
dec
addr16
cmp
out
sub
fisubrs
gs
fildl
pop
out
jmp
cld
push
ljmp
mov
lret
push
daa
sti
shlb
test
lcall
push
sbb
popf
dec
add
jbe
test
and
hlt
addr16
cld
and
cmpsb
cmp
cmpsb
in
je
or
xlat
cmp
out
lret
imull
xor
and
jl
data16
js
pcmpgtw
inc
lahf
cmp
stc
jl
fnstsw
mov
cmp
cmpsb
mov
push
stos
repnz
bswap
imul
pusha
xchg
popa
sub
mov
push
sbb
fcom
mov
mov
sub
xchg
jl
hlt
jle
pop
mov
in
jecxz
sub
pop
mov
lcall
test
jbe
lods
mov
cmp
bound
pop
insl
fsubrs
cmp
xchg
repz
out
push
aam
shrl
or
mov
add
imul
mov
cmp
hlt
popf
sub
mov
pop
mov
call
and
mov
add
dec
add
test
dec
daa
ret
and
adc
negl
test
js
xchg
jmp
mov
jecxz
add
outsb
in
rclb
scas
add
dec
adc
cmp
jp
mov
in
mov
fisubrl
and
jno
pop
adc
test
cmp
addr16
adc
fwait
adc
xchg
xor
filds
pop
jecxz
jae
pop
sub
rcl
repnz
inc
mov
fwait
out
sbb
mov
jne
jb
stc
ds
or
jo
xchg
outsb
xchg
xchg
xor
and
stc
inc
ljmp
adc
fnstenv
js
cld
push
jl
repz
jmp
sahf
push
cmp
and
mov
bound
cmpsb
push
scas
and
dec
aas
outsl
inc
add
stos
jae
push
cmpsl
sti
lock
pop
fisubs
sub
stos
push
push
cmp
pop
jp
mov
and
mov
rcll
popa
pop
ljmp
das
andl
inc
cmp
or
fnstcw
out
lods
cmc
fs
add
fnstcw
xchg
mulb
int
cmp
mov
add
dec
and
in
sub
adc
stos
inc
scas
jb
mulb
push
mov
dec
dec
pop
insb
lea
loop
cwtl
sub
adc
sarl
arpl
out
enter
add
mov
xchg
jbe
and
mov
sbb
jae
roll
fwait
adc
lret
jp
push
rcrl
xor
sbb
add
mov
dec
pop
hlt
arpl
mov
or
lods
jg
pop
mov
adc
rcr
clc
je
fstl
fdiv
nop
aaa
jnp
fistpl
pop
fwait
imul
mov
mov
mov
iret
iret
leave
cld
clc
xchg
push
jne
add
fcmovne
cmp
mov
xchg
jnp
lret
clc
cwtl
mov
cmpsb
inc
mov
mov
mov
out
ss
ds
push
push
dec
and
jmp
in
or
sbb
lahf
xor
out
fwait
xchg
sbb
cld
xchg
push
inc
dec
xchg
mov
push
push
adc
test
or
mov
fstps
test
mov
ja
inc
sub
mov
movsl
mov
dec
mov
rcll
and
repz
loope
rcll
push
enter
add
fidivl
insb
mov
loopne
popf
push
loope
lret
and
jge
xchg
inc
test
mov
fs
mov
add
cmp
loop
daa
push
mov
mov
movsl
push
jmp
ja
fidivs
std
or
arpl
xor
pop
push
aaa
mov
sbb
out
sbb
pop
leave
enter
mov
mov
addr16
xor
dec
cmpsb
shlb
pusha
test
leave
xchg
dec
sub
and
sub
sub
mov
add
mov
fisubrs
mov
sbb
cmp
repnz
imul
add
cld
xor
es
fidivs
in
mov
mov
dec
xor
packsswb
imul
mov
jo
cmpps
xlat
jb
outsb
popa
popa
ret
rcl
pop
lea
jge
cwtl
je
fsubrl
mov
aam
in
sub
subl
lea
ljmp
mov
xchg
mov
push
cmp
sbb
das
cmp
jecxz
pop
lea
sub
pushf
xor
or
push
pop
xchg
lock
dec
pop
sahf
mov
sub
inc
mov
sbb
inc
jbe
sub
ret
dec
das
xchg
mov
lock
inc
cli
push
mov
push
sti
outsl
inc
cld
fwait
out
popa
mov
and
xor
mov
out
mov
fildll
xchg
pop
rcrl
inc
call
mov
lahf
lcall
es
jg
stc
notl
mov
sbbl
cmp
xchg
lock
push
inc
aad
mov
arpl
subb
mov
xor
push
xor
sahf
scas
pop
and
ret
out
inc
add
fsubs
test
popf
fnsave
cmp
test
mov
icebp
dec
ljmp
inc
aas
subb
movsb
mov
int3
pop
leave
fiaddl
lret
jmp
push
imul
cwtl
arpl
mov
mov
adc
mov
cmpsb
mov
inc
and
hlt
call
and
cmp
add
add
pop
add
xlat
or
cld
fsubrl
fsts
xchg
sbb
jle
in
jae
pop
cld
jb
xchg
and
in
into
stos
sar
push
mov
and
xchg
jns
leave
shr
arpl
lock
sbb
sbb
xchg
rcrl
stos
xchg
cli
jle
and
mov
daa
jae
fisttpl
jmp
dec
xor
add
repnz
cmp
loope
push
in
sbb
mov
shll
dec
and
mov
out
jp
lods
cmp
out
stos
lcall
inc
mov
jge
xor
ret
inc
daa
enter
movsl
inc
outsb
int3
arpl
hlt
fnstsw
es
icebp
fldenv
cmp
lcall
pop
and
pop
sarl
or
add
xchg
icebp
push
sbb
push
push
mov
adc
pop
shrl
push
and
ret
xchg
fwait
rclb
cmpsb
jbe
imul
cmc
aas
into
adc
jne
ret
mov
cld
push
je
push
popa
mov
scas
push
int3
pop
mov
pop
out
pusha
and
or
hlt
repnz
jne
aam
jno
xchg
cmp
mov
cmp
fcoms
mov
cmp
mov
movsb
adc
xchg
shrl
ss
cli
inc
sbb
test
out
or
adc
push
jecxz
pop
lea
or
scas
imul
sarb
test
and
and
sub
push
inc
sbb
push
dec
mov
mov
icebp
and
pop
pop
inc
push
or
mov
or
das
fwait
in
ljmp
fstpl
and
cwtl
out
cmp
stc
or
imul
stc
pop
stos
adc
or
xchg
fsts
push
mov
shr
and
mov
cltd
adc
insl
mov
mov
xchg
stc
cmpsb
jl
daa
add
xor
cmp
fsubs
and
cltd
decb
es
xchg
lods
jecxz
push
sub
mov
imul
xlat
inc
adc
xor
shll
push
scas
or
mov
scas
and
add
and
jo
adc
dec
mov
testb
out
pop
inc
push
cmp
hlt
add
inc
or
push
mov
mov
jmp
xchg
dec
out
pop
and
inc
stc
lock
push
sbb
sarb
insb
pop
add
hlt
jp
pop
mov
imul
pop
iret
jle
stc
test
jno
inc
in
mov
lods
shrl
lock
mov
mov
pop
mov
and
incb
test
cmp
in
fnstsw
add
in
adc
push
mov
repnz
sub
pop
jno
es
fisttps
cmc
sbb
loopne
lcall
test
add
mov
pop
mov
or
or
js
mov
cmp
pop
xor
inc
nop
rclb
test
das
push
test
jmp
push
leave
push
sub
xchg
ss
mov
mov
cmp
add
xor
sub
mov
and
adc
and
jge
ja
jg,pn
or
dec
add
movl
imul
xor
out
inc
and
mov
loope
or
mov
mov
cmp
fsubrs
pop
and
je
mov
ret
jge
pop
bound
add
push
mov
pop
and
cmp
mov
outsl
loopne
xor
aaa
pop
adc
enter
imul
push
mov
jnp
test
loop
pop
lods
cwtl
push
xor
xchg
push
dec
cmpl
idivb
out
lret
mov
cmp
xchg
xchg
push
xor
pop
movsl
inc
leave
test
shl
loop
negb
fisubrl
ljmp
jns
or
not
mov
pop
inc
or
adc
mov
mov
jns
jb
lret
nop
sbb
clc
je
sbb
pushf
ret
icebp
adc
notl
loope
add
lock
out
cmp
int
lods
jle
cli
outsb
fistpll
or
dec
push
sub
lcall
add
mov
mov
mov
sbb
push
push
mov
int
out
test
dec
out
cmc
shl
xchg
nop
jp
lret
jns
imul
outsl
add
lret
fs
out
outsb
sub
mov
sbb
sbb
jge
xchg
adc
aas
mov
dec
nop
pop
sub
cmc
pop
mov
push
cmp
clc
jne
push
test
out
mov
leave
xchg
mov
mov
insl
call
jmp
in
imul
push
stos
pop
orl
push
or
push
imul
lret
dec
push
mov
xor
hlt
cmp
mov
push
adc
jge
or
pop
sbb
mov
push
push
pop
ds
jnp
inc
outsl
add
stos
mov
push
ja
out
ret
lds
mov
dec
lods
inc
test
imul
outsb
outsb
mov
imul
fisttps
bound
fs
inc
lcall
xchg
add
cmc
push
outsl
mov
mov
aas
dec
pop
lret
lods
adc
shll
jl
clc
mull
cmpsl
int3
in
mov
scas
push
pop
les
dec
jp
loope
aaa
lods
push
or
mov
push
sub
jp
mov
cmp
test
aam
insl
xchg
xorl
icebp
int
xor
clc
lea
sbb
pop
mov
inc
xor
out
adc
pop
ficomps
and
ja
add
insl
adc
mov
mov
gs
add
daa
sbb
push
fadd
push
mov
pop
out
push
std
inc
pop
xchg
pusha
dec
mov
adc
add
and
imul
jnp
test
std
jb
das
pmulhw
sbb
pop
or
rcll
cs
cmova
sbb
arpl
pop
iret
movsb
mov
adc
insb
cs
ljmp
pop
loop
ds
and
ja
sub
mov
adc
rcrb
imul
pop
lret
js
pushf
imul
or
ret
into
ja
mov
sbb
fistpl
jae
mov
inc
test
mov
dec
push
push
out
negb
lock
cwtl
fists
cmpsl
push
sub
ss
js
xchg
mov
cmpsl
rcr
pop
popa
rcl
repz
or
enter
jmp
mov
xor
mov
add
jp
inc
and
js
sub
and
pusha
and
mov
fnsave
fcoml
add
scas
leave
jmp
cmp
push
dec
xor
test
imul
cmp
std
gs
mov
pop
cmpsb
pop
cmpsb
xchg
inc
add
pop
dec
xchg
scas
sub
add
into
mov
push
arpl
mov
cmp
nop
stos
xor
adc
or
inc
loopne
repz
test
aad
mov
push
mov
rcrl
roll
cmp
jg
ret
popa
mov
mov
jbe
insb
cmp
lahf
sub
ds
xchg
push
inc
sub
rcrb
iret
and
mov
and
fisubs
aad
popf
popf
jne
insl
imul
insl
mov
addr16
add
sub
push
loop
outsb
ds
test
xchg
lods
lahf
insl
push
cmpsl
or
inc
cmp
lea
xchg
mov
inc
sbb
mov
bound
push
and
adc
sbb
adc
push
sub
dec
lds
mov
pop
dec
fdivrs
test
pop
add
pop
inc
dec
loope
inc
mov
int3
enter
orl
cs
mov
lods
sahf
popl
mov
push
push
mov
mov
mov
in
lods
das
subb
jmp
fadds
inc
push
test
es
mov
push
xor
jp
mov
push
pop
push
jo
mov
push
daa
ja
into
test
mov
jg
inc
xchg
arpl
aam
lcall
imul
cmc
aas
cld
and
fwait
dec
xor
mov
dec
or
jmp
jge
add
xchg
mov
sar
faddl
xor
adcl
and
xchg
aam
cli
mov
push
jecxz
jl
int
lds
test
lcall
dec
iret
push
push
jne
out
pop
insl
add
testl
xchg
cmpsl
test
mov
repnz
push
xchg
dec
pop
mov
jae
pusha
fldl
xor
mov
cld
lahf
mov
aas
ret
jg
andb
test
xchg
jbe
sub
cmp
add
xchg
and
sbb
mov
or
stc
xor
pop
cli
push
stos
hlt
jecxz
test
fdivs
mov
out
jbe
and
bnd
nop
stos
mov
mov
aam
mov
xchg
lds
int
or
mov
in
cmp
movsl
into
pop
lea
stos
mov
mov
sbb
jne
jns
push
or
mov
outsb
inc
cld
shrb
outsl
xor
push
push
das
xor
push
and
es
xchg
out
cld
mov
shrl
lahf
ret
rcrb
push
dec
xor
pusha
ljmp
mov
xor
lods
clc
adc
or
or
aas
jne
sbb
repnz
or
pop
dec
inc
pop
dec
outsb
out
shrb
or
inc
lret
pop
ret
jmp
mov
push
inc
push
sub
xchg
cltd
xchg
sub
jns
xchg
inc
arpl
out
rorb
mov
pop
and
js
push
mov
ljmp
push
dec
jg
fiaddl
or
data16
movsb
mov
aas
pop
adc
outsl
cltd
add
xchg
pop
scas
rep
popa
jmp
icebp
sub
sarb
inc
sbb
loop
cltd
and
negb
test
fiadds
cmp
notl
test
push
leave
xchg
lcall
addl
icebp
jne
mov
dec
cmp
ret
cli
iret
pop
pop
in
pushf
jecxz
mov
mov
mov
xor
incb
xor
insl
in
jnp
insl
aad
pushl
xlat
dec
daa
mov
cmp
mov
cmp
mov
rol
or
inc
lds
sahf
fwait
xor
outsl
push
out
sahf
fldt
popf
or
lds
xor
mov
xchg
out
sub
ss
test
ds
push
outsl
out
sub
pop
je
mov
mov
mov
test
push
push
pop
daa
cld
imul
adc
scas
int3
ss
cld
das
sub
push
cmc
or
xor
mov
cmp
xor
xor
add
sbbl
int3
adc
and
ret
push
pop
movl
sbb
shlb
inc
pop
pop
sub
mov
repnz
push
hlt
aas
ja
bound
pushf
cmp
out
jns
mov
add
outsl
xchg
jnp
sbb
or
mov
in
cmp
sub
push
mov
test
push
mov
jbe
in
mov
into
je
mov
lock
xchg
lahf
add
and
and
imul
movsl
mov
push
mov
xchg
lret
and
cltd
nop
fisttps
mov
add
lods
push
jmp
mov
imul
jne
sbb
js
pushf
jecxz
out
fists
jns
adc
sahf
aam
jae
in
test
int
jmp
inc
lds
loop
mov
cmp
xlat
sti
xor
outsl
adc
pushw
js
les
xchg
pusha
mov
push
ljmp
in
or
hlt
push
sbb
xchg
out
mov
ret
in
inc
jg
divb
xchg
hlt
jbe
jecxz
inc
and
or
es
hlt
insb
jmp
cs
add
jge
or
mov
ds
mov
pop
dec
cmp
adc
and
lock
fnsave
movsl
xchg
pop
lcall
or
inc
mov
aam
jle
fdivrl
not
xor
xchg
jo
sub
gs
mov
shrb
mov
leave
push
icebp
cmc
adc
out
or
les
fcompl
cli
mov
cmpsl
cmp
sub
loopne
js
cs
mov
mov
mov
fldenv
leave
sub
pushf
inc
ss
in
jl
enter
dec
xchg
enter
popf
xor
jg
xchg
cmp
fsubr
and
xchg
sahf
in
push
pop
or
jg
idivl
jnp
repnz
stc
in
lods
jge
push
mov
sub
fidivs
push
mov
insb
popf
cmp
inc
inc
jmp
inc
sbb
push
push
mov
test
shrl
xchg
ret
mov
scas
fldl
jge
mov
ss
cld
nop
xor
sbb
push
icebp
mov
mov
leave
adc
xor
add
ds
rclb
inc
adc
jmp
lcall
dec
outsl
inc
arpl
lret
ja
loop
aad
bound
nop
loope
sahf
cmp
pop
aad
lock
jecxz
nop
dec
xor
cwtl
call
outsb
cwtl
adcb
lea
inc
dec
jbe
mov
xchg
xchg
mov
pushf
cmp
xchg
sub
cmp
sbb
pop
gs
pop
scas
or
lds
xor
loop
mov
imul
pusha
sub
mov
test
std
mov
mov
fidivs
mov
pop
addr16
into
push
ret
int3
out
popa
lock
dec
cmpsb
push
inc
or
fdivl
mov
jns
push
lahf
mov
xchg
cmp
inc
cmpsl
imul
fists
or
push
icebp
inc
push
je
jno
push
sub
cmpsl
mov
enter
push
adc
fdivs
mov
popa
ja
mov
fmul
aaa
data16
das
test
cwtl
sahf
rcrb
loopne
daa
push
xor
mov
xor
xor
add
dec
insl
xor
or
mov
stos
push
bound
ret
lods
adc
and
call
mov
jns
adc
push
sbb
mov
jmp
jae
mov
movb
sbb
les
xchg
xorl
daa
lret
shr
aam
mov
decb
or
mov
inc
mov
jmp
pop
movl
jge
add
fadd
jns
push
mov
shr
jmp
stos
es
jp
repnz
jo
sub
xor
xchg
cmpsb
and
adc
or
outsl
outsb
shrb
pop
push
pop
ss
xchg
rolb
xchg
repz
xchg
pusha
std
sub
lret
lret
in
lds
sbb
push
dec
sbb
mov
ss
gs
or
mov
pop
mov
dec
dec
xchg
and
mov
push
sbb
stos
push
jns
xchg
dec
jmp
popf
push
and
fcmove
sar
hlt
insl
sahf
gs
out
sbb
mov
fsts
mov
add
xchg
movsl
push
push
sub
mov
push
jge
and
xchg
enter
cmpb
jne
lods
neg
cs
xchg
adc
adc
push
fiadds
orl
std
cmc
push
dec
lea
das
push
pop
sub
movsl
push
pop
lock
or
rolb
stc
dec
leave
jge
pop
cmpsl
and
cli
push
xchg
call
popa
inc
dec
scas
fbld
add
test
clc
iret
sub
pop
repnz
sbb
jp
leave
sub
leave
cwtl
sbb
scas
xlat
outsb
dec
mov
and
in
sbb
or
sti
jb
mov
into
gs
sbb
aaa
sbb
fs
test
pop
sbb
movsb
shll
mov
add
or
add
pusha
mov
fildll
cmp
lods
mov
stos
lahf
test
push
cs
scas
ja
popf
pop
ja
mov
sti
cmp
add
and
mov
push
cmp
push
pop
dec
aaa
ret
mov
jbe
mov
incb
sub
test
dec
adc
jae
xor
mov
bound
mov
pop
mov
cld
lahf
sahf
xchg
in
xor
and
jno
or
lcall
push
mov
sub
lahf
mov
jbe
mov
das
in
or
jbe
lods
cmpsb
cld
push
gs
xchg
into
xor
stos
mov
popf
pop
dec
lret
cmpsl
lret
add
xchg
and
test
and
mov
cmp
add
jl
sahf
inc
inc
cld
push
add
or
pop
in
xchg
fwait
pop
clc
idivl
lea
int3
sti
add
lock
test
repz
jne
loop
pop
jae
push
movsl
xchg
mov
push
stos
sub
xor
es
mov
mov
aas
push
inc
lods
xor
or
and
aaa
insb
clc
sbb
xchg
push
fimuls
xor
sbb
cs
stc
add
mov
mov
test
cmp
dec
fistps
sbb
pop
sbb
sub
pop
faddl
mov
xchg
push
inc
std
fsubl
movsl
mov
sbb
lret
fsubs
in
fcompl
mov
and
cli
cltd
out
jo
sub
xor
xchg
jle
xchg
dec
pusha
popa
pusha
stos
data16
fsubr
repnz
movsl
std
dec
inc
call
cmp
mov
sbb
lret
orb
jne
in
sahf
xchg
mov
jmp
popf
insl
and
xchg
jle
pop
jnp
fldcw
mov
and
jp
push
lds
daa
shll
scas
sub
arpl
jp,pt
cmp
xchg
lods
jl
std
nop
or
mov
inc
and
gs
cmp
xchg
into
je
int
lret
rorb
and
enter
mov
movsb
push
dec
lock
rcpps
sub
adc
fistpl
and
mov
outsl
sbb
jae
or
leave
push
imul
lods
fistl
int
push
jg
push
nop
imull
pushl
dec
jle
jle
out
jmp
out
or
add
sbb
and
das
into
sbb
jecxz
das
jge
mov
pop
ss
out
ss
dec
addr16
aad
inc
xlat
lods
inc
mov
sbb
adc
xchg
cmp
jg
daa
rolb
cwtl
jmp
fidivrl
mov
shlb
cmp
push
xor
pop
test
cmc
pusha
jnp
nop
inc
cmp
shrb
sbbb
xchg
xchg
in
into
scas
cmpsl
push
and
leave
roll
cli
push
and
push
mov
jae
int3
fwait
jo
inc
dec
popl
sub
cmp
push
aas
repnz
pop
push
lds
mov
or
jge
adc
xchg
inc
test
pop
cli
repz
jg
sbb
and
pop
pop
mov
rorb
xor
gs
jecxz
popa
mov
xchg
push
sarl
fiaddl
mov
fs
js
dec
stc
lea
out
aam
aam
call
int
pop
cmp
push
scas
cltd
adc
xor
shrl
ljmp
mov
out
dec
sub
lahf
or
cmp
push
lahf
push
dec
sbb
lret
adc
fimuls
int3
add
inc
dec
or
push
je
or
cmp
sub
sahf
aad
jne
and
in
enter
jmp
out
lds
jl
inc
imul
push
dec
push
gs
mov
ljmp
rcrb
cmp
pop
insl
mov
out
inc
cmp
push
jb
xchg
pushf
jl
int3
inc
les
or
test
mov
pop
pusha
mov
mov
mov
std
dec
fnsave
adc
sahf
or
pop
imulb
lods
sti
icebp
repnz
je
dec
cmp
jne
mov
stos
addr16
aad
inc
pop
mov
mov
outsl
jge
jp
add
xlat
test
xor
xchg
imul
mov
stos
imul
sub
adc
xchg
push
sub
jle
pop
test
mov
add
mov
shrb
lods
popa
pop
pop
adc
mov
jne
fidivl
mov
mov
add
mov
fmulp
int
outsl
push
sbb
add
out
push
std
mov
inc
icebp
pop
pop
and
cmp
jecxz
imul
incl
pop
mov
cltd
fwait
mov
pop
fwait
push
out
or
daa
iret
dec
or
in
mov
dec
pop
enter
out
call
push
and
je
aas
xchg
push
cltd
enter
outsb
test
bound
xchg
pop
cmpb
xor
cld
push
jge
cli
push
andb
and
pop
insl
or
mov
bound
out
mov
jns
repz
inc
lret
das
jge
aas
xor
dec
ljmp
out
fucomip
mov
dec
jb
mov
xchg
test
jmp
into
iret
cwtl
push
jne
mov
push
das
dec
adc
inc
xor
mov
loop
addr16
sbb
or
mov
or
add
xor
dec
xchg
xlat
sub
and
xchg
imul
adc
push
xchg
fiadds
je
mov
das
push
inc
movsl
pop
mov
mov
sub
loop
sbb
push
adc
and
imul
push
mov
jae
loope
aam
nop
mov
push
sub
xor
jbe
fldcw
dec
shrb
shll
cli
ret
push
sbb
xchg
pop
add
sub
stos
push
push
cld
jns
adc
test
dec
push
test
sub
or
ja
fdivl
cmc
mov
sti
popl
add
dec
ljmp
add
gs
and
xchg
sub
adc
in
add
sub
outsb
xchg
xor
mov
push
push
cli
fwait
push
mov
cltd
mov
dec
dec
lock
sub
xchg
popf
sub
jne
mov
orb
shrb
and
das
popf
dec
add
mov
or
or
and
and
cmp
sti
fstp
xchg
jnp
sbb
lcall
loopne
adc
lods
xor
lret
adc
daa
add
in
nop
or
and
hlt
push
lret
xor
pop
adc
xor
scas
push
mov
leave
ret
jnp
adc
rcrb
repz
aaa
inc
out
jns
out
push
loope
xchg
xlat
mov
in
fisubs
jnp
dec
stos
inc
adc
sti
add
shll
mulb
xor
mov
cmp
jp
jmp
movsl
jns
or
in
clc
xchg
push
push
dec
xchg
pop
test
adcb
jo
icebp
mov
cmp
jle
sbb
pop
inc
dec
jp
in
or
andb
ror
mov
jno
mov
adc
adc
ret
lock
flds
pop
mov
outsl
rcr
ret
xor
roll
sbb
nop
cmp
fimull
mov
cld
jecxz
mov
mov
outsl
dec
mov
jge
dec
xor
or
in
sub
nop
push
ficompl
shr
in
jp
insb
ja
pop
mov
or
fcmovbe
adc
loopne
inc
xchg
ret
fsub
sub
enter
addr16
rorb
or
push
insl
mov
in
call
cmp
jns
lahf
xchg
out
or
mov
imul
xchg
lds
test
insb
sbb
xchg
inc
lds
cli
loopne
test
inc
les
enter
pushf
je
ret
test
mov
test
cli
and
pop
sti
xchg
fnstcw
mov
fwait
mov
lods
dec
jmp
add
std
test
push
es
lods
mov
repz
pop
or
dec
and
cwtl
sbb
fwait
mov
ret
sbb
jns
mov
ljmp
roll
inc
inc
sub
inc
rcll
es
sub
sbb
ja
dec
sbb
sbb
jge
clc
xor
pop
imul
lea
lods
nop
push
subb
lea
jl
dec
mov
insw
add
js
adc
inc
jl
inc
sub
ror
addr16
rcll
mov
mov
lret
imul
std
cltd
sbb
sbb
and
scas
dec
mov
mov
or
ret
push
mov
cmp
mov
and
test
pop
jecxz
inc
push
nop
jmp
lea
sbb
mov
cmp
push
adc
sub
push
xor
adc
in
adc
fwait
xchg
mov
insl
push
insl
or
sub
jg
leave
jne
xlat
add
out
jmp
push
jg
mov
sub
fcoml
stc
pop
xchg
imul
fsub
nop
sar
or
lret
in
lahf
xchg
dec
push
std
vpunpcklwd
ss
movsb
xchg
imul
dec
test
out
xor
loope
jae
pop
insl
movsl
jle
adc
fnstsw
cld
iret
xchg
repz
movsl
adc
sbb
xchg
fists
pop
fstl
push
outsb
dec
or
xor
loop
lret
mov
test
cmc
sub
je
dec
and
push
mov
rorb
sub
arpl
cmc
add
jl
inc
lds
mov
lock
mov
jbe
or
push
cmp
ds
mov
iret
xchg
div
orb
dec
add
xchg
lret
icebp
mov
lahf
shll
decb
and
jne
inc
push
adc
and
pop
mov
pusha
and
mov
int3
add
push
mov
mov
dec
ljmp
xor
mov
push
pop
outsl
es
pop
push
test
jo
out
movsb
ret
das
mov
arpl
and
repnz
outsb
lret
xor
repnz
call
iret
mov
mov
mov
sub
jns
dec
lcall
cltd
cmpsl
sub
out
sub
xlat
cmp
sahf
cmc
pop
add
push
mov
fidivrs
in
movl
lods
push
xor
push
out
leave
in
adc
inc
out
push
cmp
div
ret
sbb
mov
ret
ret
jmp
mov
imul
jbe
bnd
stos
jle
aas
aad
pop
shl
cmpb
xchg
fcmovnbe
pop
clc
arpl
bnd
mov
cmp
and
cmp
jecxz
and
cmp
cwtl
cmp
iret
pop
dec
pop
imull
sbbl
mov
das
movsb
jge
push
mov
clc
xor
mov
arpl
rorb
inc
imul
pop
push
xchg
mov
xchg
stos
ljmp
sarl
xlat
int3
js
mov
add
sbbb
sahf
lcall
inc
lock
push
fwait
mov
inc
subl
leave
sbb
xchg
mov
lret
mov
in
icebp
bound
mov
push
out
shll
jle,pt
mov
clc
fs
cltd
ret
cmp
jge
fidivrs
aaa
push
fwait
mov
test
add
out
ret
adc
inc
mov
stos
aad
out
mov
push
in
bound
xor
lret
test
movb
lret
cmpb
xchg
cld
imul
leavew
jge
mov
push
jge
mov
mov
adc
out
rol
ds
stos
ret
cmp
dec
cmp
inc
jl
mov
inc
jb
add
push
mov
das
popf
ja
and
dec
pop
int
push
roll
mov
lret
out
repnz
xchg
jns
xchg
adc
adc
mov
dec
call
sbb
mov
pusha
jecxz
cmp
dec
sahf
fisttpl
push
and
movsl
cmpsb
mov
push
push
jb
mov
mov
in
jge
sub
fmul
aaa
popf
add
push
mull
clc
mov
ss
in
stos
shrl
push
mov
cmpl
dec
mov
and
adc
jne
aad
loopne
mov
sbb
adc
iret
sub
fdivrl
ret
imul
jne
sub
xchg
cmp
ret
xor
cs
leave
outsb
in
lock
notl
rcr
sub
cld
add
rcrl
pop
inc
jmp
xchg
sbb
and
push
jns
jno
mov
lcall
repz
into
xchg
in
adc
mov
cmp
xor
mov
incb
push
fldt
out
jp
lods
in
adc
jge
fsubrs
outsl
xchg
fisttps
mov
jle
dec
insb
xor
sub
xchg
imul
fldt
subl
and
js
int3
jp
inc
add
xor
sub
inc
notb
adc
inc
shl
adc
lahf
and
xchg
call
dec
out
cltd
bound
fldcw
mov
sub
sbb
add
jg
sub
add
xor
xlat
ret
push
dec
jle
xlat
arpl
cmc
rolb
sarb
pop
and
cli
mov
jo
dec
jae
push
das
push
out
and
push
pop
pop
in
jnp
xor
mov
pop
push
mov
repnz
jae
and
pop
adc
cmovl
pop
in
out
push
cltd
or
dec
rolb
sbb
movsl
in
inc
mov
dec
mov
jg
jb
add
mov
jnp
es
dec
adc
lods
ss
mov
and
fwait
shlb
mov
add
mov
ret
xorb
ss
div
fdivp
inc
jg
inc
push
jl
pop
in
sbb
icebp
xor
jb
or
popa
jp
out
inc
push
cwtl
inc
cmc
xor
roll
sub
pop
sub
loope
add
mov
mov
lea
dec
dec
or
push
cwtl
repz
mov
rcrl
cwtl
mov
cs
int
fistpll
cmp
or
pop
xor
es
mov
push
jbe
cmp
push
arpl
xchg
sbb
ljmp
mov
xchg
inc
and
adc
jge
bound
or
xor
or
jbe
mov
clc
mov
fiaddl
jl
add
lock
mov
push
mov
in
lods
push
sarl
test
inc
out
stos
push
mov
push
xor
ja
jo
out
and
mov
adc
inc
add
fdiv
xor
and
aaa
cmp
or
cld
pop
sub
int3
sub
iret
shl
icebp
insl
xor
inc
jns
pop
scas
leave
pop
cltd
push
insl
je
aad
int3
sti
xchg
inc
insl
imul
fsubl
mov
shll
fidivs
push
test
and
aaa
jo
sbb
ds
sbb
hlt
push
mov
dec
jo
mov
aas
inc
daa
push
xchg
addr16
pusha
fsubrl
jb
mov
int3
icebp
in
push
mov
xlat
xor
jb
cwtl
inc
mov
jl
lock
mov
push
ds
repnz
xor
out
jns
test
and
adc
mov
inc
ret
mov
test
popf
enter
dec
lret
or
jl
je
adc
fsubrs
and
inc
icebp
shll
das
std
lea
push
xor
gs
leave
mov
pinsrw
es
xor
sub
and
cs
cmp
lcall
js
icebp
mov
mov
in
ds
xor
iret
nop
jbe
enter
cwtl
xchg
pop
or
push
sub
dec
mov
mov
adc
mov
les
aaa
testb
clc
lea
out
jne
aam
add
sub
cmp
test
mov
dec
ja
pusha
lcall
es
gs
jle
sub
lea
sub
cmp
outsb
pop
jg
js
lret
cmp
push
aas
and
pop
sub
insb
ret
shr
ljmp
lds
push
lock
cltd
or
adc
cmpsl
ds
jecxz
cmp
daa
and
pop
xor
xor
mov
js
lret
mov
sub
xchg
ds
fsubrl
add
popa
xor
mov
adc
daa
movsb
xchg
inc
pusha
push
pusha
xor
mov
mov
jnp
sbb
orl
lcall
insb
cmp
pop
push
fnstsw
fildll
fidivrl
imul
xor
leave
ljmp
and
or
fsubrs
cmp
xor
scas
call
lret
or
in
inc
daa
sbb
lret
cs
insb
jne
cmpsl
lods
jae
jl
insl
test
je
lods
xor
and
lcall
jecxz,pn
movsb
test
mov
jl
sbb
mov
sbb
push
out
lcall
mov
xor
cmp
xor
std
lods
inc
outsl
enter
pop
jo
jae
add
cs
clc
jecxz
gs
pop
test
add
int3
sahf
inc
dec
mov
nop
lods
lock
ss
repz
xchg
jb
notl
mov
iret
addl
mov
stos
aas
js
arpl
inc
xchg
and
xchg
cld
lea
fldcw
add
jne
lcall
push
inc
jo
adc
pop
inc
mov
insl
pop
sub
repnz
or
jo
mov
mov
inc
jecxz
clc
hlt
jno
into
cmp
std
jno
cmpsl
imul
outsb
adc
ss
xor
push
test
sub
adc
add
test
roll
test
das
scas
fmul
mov
sbbl
lahf
test
ljmp
cmpsl
nop
cmp
pop
or
pop
leave
negb
cmp
jb
jl
mov
dec
push
movsl
jg
push
daa
call
icebp
add
gs
add
add
xchg
push
mov
mov
fcmovne
mov
das
repz
pushf
xor
jne
add
aam
stc
mov
sbb
mov
or
mov
or
iret
pop
push
dec
sbb
cld
data16
outsl
jb
push
xchg
dec
mov
out
shl
in
inc
mov
dec
sbb
and
lcall
dec
mov
call
adc
call
pop
xor
xchg
xor
imul
cwtl
or
std
pop
into
adc
mov
repz
mov
mov
mov
sarb
and
sub
sub
pop
mov
mov
mov
and
adc
iret
xchg
mov
movsl
jmp
loope
inc
call
in
inc
sub
jl
mov
sbb
push
push
or
xor
mov
rorl
subl
mov
lds
popf
decb
push
shl
stos
repz
and
sbb
loope
mov
mov
mov
bound
and
mov
cmpsl
xchg
stos
inc
mov
sbb
mov
outsb
pop
or
add
fcmovne
decl
std
xor
jge
ja
xor
mov
pop
push
inc
xor
pop
loopne
push
xchg
jnp
es
imul
daa
ret
sti
mov
xor
ds
js
jge
les
and
aaa
jmp
sti
in
outsl
jmp
xchg
xchg
je
jg
jle
sub
sti
ficoms
add
push
out
rcl
pop
sub
xchg
mov
dec
outsl
imul
int
in
adc
testb
sub
mov
mov
cmp
aas
repz
xchg
movl
add
sti
push
mov
popl
rcrb
fdivs
xor
cmp
pop
adc
sbb
mov
xchg
dec
and
int
sub
push
sub
sub
pop
lock
outsb
outsb
dec
dec
adc
lods
loope
push
push
add
mulb
sti
in
std
test
pop
or
xchg
mov
or
icebp
xor
cltd
inc
mov
aam
out
js
sbb
imul
sbb
sahf
cmpb
push
sub
sub
push
idivb
and
jae
idiv
cs
and
jae
cwtl
jo
mov
mov
cld
test
xorl
cmp
sbb
xor
jmp
add
or
pop
or
in
lds
pop
cmp
dec
divl
mov
cltd
in
xchg
pop
inc
mov
inc
sti
pusha
xchg
aam
sbb
in
sub
outsb
iret
xchg
pop
dec
jecxz
imul
ret
push
movsb
icebp
push
imul
and
sbb
imul
scas
sbb
mov
cmc
adc
adc
sub
lods
cmpsb
or
jg
xor
xchg
pop
xchg
adc
out
xor
loop
jmp
push
mov
or
dec
repz
sub
mov
pop
std
sub
sbb
push
adc
clc
dec
xorl
addb
add
aas
lods
pop
pusha
nop
jmp
jo
insl
cmpsl
pop
jbe
data16
stos
imul
adc
iret
jno
into
push
adc
jle
orps
xor
inc
cmp
and
jae
cmc
jle
fsubr
lods
or
pop
fistpll
ret
sub
lods
sub
adc
into
stos
sub
clc
pop
dec
clc
jmp
hlt
inc
sub
xor
fwait
jge
xlat
cltd
or
push
sbb
xor
push
dec
repz
pop
and
nop
aad
outsb
cmp
jp
rcrb
adc
cmpsb
xchg
into
xchg
cmpsb
xchg
add
lahf
scas
hlt
scas
jg
dec
dec
jle
cmpsb
xchg
xchg
dec
cmpsl
add
mov
push
insb
mov
into
loope
mov
xchg
xchg
inc
push
sahf
insb
pop
sub
scas
push
mov
xchg
jl
xchg
mov
dec
add
aaa
out
stos
fsubrp
dec
cmp
cmpsl
data16
mov
and
in
pop
xlat
outsb
xlat
and
pop
mov
movsb
dec
mov
cwtl
sahf
enter
lret
xchg
dec
mov
inc
popa
das
and
mov
in
and
adc
sub
fiaddl
stos
ja
out
jle
sbb
xchg
outsb
cwtl
and
lea
mov
in
scas
xor
xchg
or
nop
es
sbb
int
mov
cli
sub
mov
cmp
lahf
add
ljmp
sub
aaa
pop
mov
rorl
fisubl
jmp
test
mov
jge
mov
lret
fstl
notb
hlt
daa
pusha
adc
ljmp
test
cmpl
sti
add
jns
sbb
cld
cwtl
dec
nop
pop
jl
xlat
test
lss
das
hlt
bound
in
jne
stos
inc
pop
dec
mov
ret
popf
dec
addr16
push
aaa
jl
xor
icebp
faddl
xor
push
ret
outsb
jns
or
int
es
shrl
cmp
xor
sub
pop
push
mov
xchg
jb
and
dec
jnp
loop
ret
mov
mov
out
sub
add
push
lret
fiadds
popa
sub
mov
enter
pop
cs
nop
pop
popa
mov
fstpt
out
std
adc
inc
addl
xchg
and
mov
scas
mov
out
lods
dec
mov
mov
xchg
test
stc
fs
call
sub
nop
in
cmp
outsl
insb
daa
imul
mov
mov
cs
popf
lret
out
push
mov
add
aad
shrl
push
lock
outsl
shrb
in
jg
jae
pop
fwait
sbb
stc
sub
xor
jp
imul
sub
clc
cld
add
out
mov
fs
scas
push
add
pop
rolb
xchg
lret
int
ret
cmpsl
test
mov
dec
icebp
into
inc
push
lods
push
fstpl
and
enter
fcmovbe
push
pop
sub
iret
psllq
jge
out
jo
lret
ljmp
into
les
adc
sbb
or
or
out
jo
out
out
fildl
pusha
movsb
test
push
sbb
out
ret
loop
into
adc
and
sbb
cmp
cltd
mov
cmc
dec
and
adc
outsb
in
lods
fdivrs
jns
out
jl
dec
ficoms
xor
leave
mov
xlat
pop
mov
mov
mov
addr16
mov
std
adc
pop
repnz
movsb
movsl
rcll
out
sub
cmpsb
xor
clc
mov
dec
jecxz
loopne
lds
loopne
mov
lret
push
dec
mov
test
or
lock
cwtl
lcall
daa
lock
xchg
inc
and
or
pop
lds
mov
fsubl
inc
inc
cmp
mov
clc
mov
in
cmp
jmp
aas
jo
dec
jnp
dec
in
dec
or
fisubrl
jecxz
or
push
std
push
xchg
jno
orb
popa
in
xor
pop
cltd
and
cwtd
dec
shr
sar
xchg
push
test
scas
into
add
jno
sar
xchg
adc
adc
mov
push
or
adc
addl
test
das
add
pop
push
jbe
sub
hlt
or
push
add
or
repz
sti
sar
push
add
shrb
iret
int
lcall
jo
leave
add
sub
rcrl
dec
les
outsl
mov
xchg
or
pop
gs
pop
mov
and
xchg
test
jmp
adc
data16
cmp
pop
jecxz
mov
sbb
dec
push
sahf
icebp
sbb
popa
add
jbe
subb
xchg
dec
sbb
inc
mov
push
jne
add
adc
addr16
push
icebp
mov
push
push
fisubl
hlt
ljmp
ret
int
xlat
mov
lods
ret
jns
jae
call
add
enter
xor
mov
dec
pop
out
mov
add
xor
cwtl
cltd
or
mov
dec
clc
pop
arpl
jecxz
xchg
lahf
xchg
fldcw
dec
enter
mov
rcrb
sbb
and
sbbb
in
pusha
mov
sbb
lock
loop
or
scas
cmp
aad
jl
and
mov
out
repz
andl
movsl
sahf
mov
and
mov
mov
loopne
sbb
mov
shll
sbb
jle
movsb
xchg
scas
dec
push
pop
pop
movsb
dec
icebp
push
pop
cmp
push
int3
or
ds
sub
or
mov
sub
incl
dec
insl
fldl
fs
jge
test
cmc
sbb
jno
or
outsb
cmpl
cmp
jae
mov
sbbb
in
push
or
insl
fmulp
add
addb
mov
faddl
in
push
iret
xchg
add
xor
mov
or
xor
imul
fadd
aam
jmp
xchg
jb
jge
pop
push
ficomps
lret
dec
incl
fimull
push
xor
repz
push
mov
dec
cmp
imul
shrl
xchg
loopne
mov
adc
dec
dec
xor
inc
jne
xchg
ja
fidivrs
sahf
inc
lock
fdiv
dec
cs
pop
imul
in
es
sub
aad
cmp
stos
orb
xchg
xchg
stos
cwtl
mov
push
mov
sub
in
add
rcrb
push
push
mov
aad
mov
call
fwait
ds
cmpsl
jmp
fidivl
call
negb
pop
add
jo
xor
sub
mov
push
inc
add
sbb
dec
cmp
and
repnz
add
sub
xor
or
lock
jmp
fiaddl
mov
jne
mov
out
test
or
dec
mov
aas
jge
adc
out
cmc
lret
repz
aaa
loop
mov
or
push
call
into
add
xchg
sbb
and
das
or
pusha
cli
inc
iret
add
inc
inc
mov
pop
adc
dec
test
jecxz
push
loope
sbb
shlb
lret
divl
fmuls
lea
add
sbb
pop
and
pop
pop
and
shr
data16
sbb
inc
pop
in
nop
pop
in
movsb
stos
or
adc
xlat
push
sub
and
push
cmp
pop
out
or
hlt
stos
mov
sti
fisubrl
jle
cmp
mov
movsl
insl
cmpb
jp
andl
and
std
mov
js
aas
aam
adc
mov
imul
dec
aad
pop
fimull
int
adc
mov
jp
cld
pop
lods
in
sbb
mov
fstps
mov
andl
aam
sti
shlb
mov
lret
icebp
mov
leave
imul
sbb
pop
mov
push
and
divb
cmp
xchg
pop
cmp
arpl
and
sti
pop
fwait
mov
xlat
movsb
icebp
dec
mov
test
stos
push
mov
push
mulb
jmp
sub
aad
nop
shrb
sahf
bnd
inc
mov
pop
inc
stos
mov
jbe
mov
add
dec
jl
push
dec
int3
adc
xor
addb
cmpsb
repnz
daa
js
add
ret
clc
ds
and
ss
mov
jbe
mov
int
cmp
sbb
imul
aad
mov
lods
sbb
fwait
dec
test
sbb
addl
push
out
add
mov
and
loop
mov
imul
xor
push
fisttpl
jbe
insb
sub
mov
cmp
jb
xor
lahf
int3
fstpt
and
mov
call
mov
adc
loopne
jo
sub
mov
mov
mov
lods
cmp
xchg
dec
push
in
dec
and
int3
mov
fcmovbe
dec
jle
cli
dec
test
mov
repz
push
xchg
lea
sbbb
push
pop
xchg
in
popf
xchg
jb
xchg
mov
into
or
jecxz
mov
adc
push
lret
fsub
pushf
or
adc
ljmp
rcl
pop
mov
int
fisttpl
addl
fiadds
aas
xor
push
xor
jno
cmp
inc
xor
aas
cwtl
jp
mov
fidivrl
insl
in
hlt
jp
jle
mov
xor
pop
pop
cltd
inc
pop
mov
cmpsb
jb
adc
cmp
pop
jno
pushl
fdivrl
dec
out
dec
data16
lea
out
dec
data16
mov
popa
xchg
sub
clc
rcl
mov
aad
das
push
xchg
jle
adc
aas
lcall
mov
insl
xor
jae
add
cmc
xchg
fwait
testb
sub
inc
mov
jno
adc
inc
mov
nop
jo
sub
jno
sbb
lds
adc
mov
fisttps
jg
inc
dec
or
fbld
cmc
leave
jge
mov
xchg
lret
push
ds
mov
or
jae
xchg
hlt
js
push
lret
jl
lret
add
or
sbb
scas
mov
pop
fwait
in
cmp
std
adc
iret
cmc
cmp
cmp
push
icebp
mov
lods
movsl
loope
das
mov
xorb
fnsave
test
in
pop
cmp
sub
xchg
imul
push
cwtl
int3
adc
mov
movsl
addl
sbb
lea
xchg
or
jl
xchg
mov
pop
jne
addr16
jb
sub
fsubrl
cli
mov
sbb
out
in
xchg
fsubrl
mov
lods
cs
and
jae
ss
test
xchg
cmpsl
and
and
pop
sbb
fidivrs
sub
mov
sub
xchg
push
push
addl
dec
fstpl
mov
lock
out
xor
sbb
fidivs
adc
aad
pop
jmp
sbb
pusha
xor
jmp
repz
pop
mov
sbb
cmp
cmp
dec
lret
mov
mov
test
imul
getsec
sbb
nop
js
in
sbb
xor
pop
jge
mov
out
ds
lock
xchg
jle
mov
lock
jo
subl
sbb
inc
sbb
ds
push
insb
sub
clc
push
xorb
dec
scas
mov
iret
inc
mov
sub
xchg
and
data16
pop
push
xchg
out
std
mov
pusha
ret
loop
inc
lret
outsl
push
sub
jg
ja
fmulp
scas
es
cmc
gs
mov
lret
or
stos
sub
out
cmp
or
pop
data16
lds
les
cmp
jmp
jge
push
je
dec
or
pop
aam
mov
xchg
jns
jmp
jns
fidivrs
push
mov
ja
lcall
out
stos
push
addr16
ret
and
xchg
mov
cmpsl
test
xchg
mov
cwtl
mov
and
cltd
int
inc
rcrl
sub
push
rcll
test
je
testb
sbb
pusha
mov
xor
or
fsubrs
daa
push
jo
out
or
pop
ret
ljmp
lret
pop
ja
inc
xor
inc
mov
mov
movsl
pop
testl
pop
out
push
in
and
jae
shlb
cli
xchg
pop
pop
out
aas
js
dec
jge
addr16
and
push
insl
cld
stc
hlt
scas
lea
jns
jge
push
stc
aaa
mov
mov
ljmp
jmp
scas
push
movsb
idivb
mov
sarb
jb
dec
jmp
and
sub
mov
push
dec
mov
shll
inc
pop
cmp
mov
movsl
dec
mov
xchg
loope
adc
aaa
test
stos
cmp
mov
std
xor
je
daa
fstpl
adc
pop
sbb
cmp
xorb
mov
rcrl
data16
sub
adc
xor
cmpsl
dec
es
gs
shrb
pushf
cltd
lea
subb
push
fistl
mov
jno,pt
mov
int3
lods
jne
aad
push
lea
lds
pop
sub
add
inc
xchg
mov
bound
adc
idivl
pop
and
mov
mov
pop
loopne
and
mov
mov
push
test
pop
gs
xor
sbb
test
std
orb
shrb
in
bound
and
or
inc
sub
lea
ss
shl
or
pop
scas
or
cltd
fwait
jg
cmp
xchg
nop
into
stos
sbbl
je
mov
push
stos
xchg
cld
out
sbb
push
lock
repnz
cwtl
pop
mov
xchg
jno
adc
xchg
test
xlat
test
icebp
jno
in
xor
arpl
or
repz
test
icebp
orl
andb
sbb
pop
jge
pushf
data16
mov
cmp
mov
push
call
aam
scas
mov
and
sbb
ror
cli
mov
fidivs
das
cmc
lock
fstpl
inc
jae
add
xchg
repnz
pop
push
inc
adc
ja
and
stos
bound
pop
out
mov
jne
sub
dec
pop
pop
push
jge
cmp
icebp
frstor
jns
and
mov
jecxz
xor
cmp
fdivl
cmp
lahf
xchg
xchg
arpl
jns
push
enter
push
mov
in
cli
push
pusha
rorl
loopne
sub
test
out
xor
sbb
xor
int
mov
les
dec
into
add
inc
jno
stos
clc
cli
xor
ret
adc
add
pop
push
inc
popa
cmp
stos
mov
enter
sbb
dec
lea
in
cmp
mov
ret
jl
jle
push
add
or
pop
xchg
movsb
data16
lock
jno
adc
pop
jb
aad
out
jp
test
xchg
and
sbb
roll
nop
xor
repnz
xchg
pop
cld
or
aam
pop
add
das
fisubrl
inc
test
inc
jecxz
mov
or
dec
inc
insb
mov
mov
idivl
aas
aam
sub
movsb
cmp
inc
iret
dec
pop
das
push
stos
ret
insl
popa
xchg
mov
pop
bsr
cmp
inc
xchg
test
mov
shlb
mov
les
or
and
sarb
icebp
fmull
push
and
jne
icebp
xchg
jo
test
loop
imul
mov
shll
pop
add
push
out
fnstenv
imulb
aad
sahf
push
in
and
test
loop
pop
movsb
inc
pop
jg
add
mov
mov
sub
cli
xchg
pop
fstpt
push
loop
les
mov
test
mov
pop
fidivl
push
mov
aas
rclb
bound
lcall
ds
dec
stos
add
pop
aad
inc
movsb
sarb
flds
jmp
cmp
sar
push
into
enter
xchg
add
jbe
imulb
daa
jnp
mov
xor
cmp
mov
mov
pop
stc
dec
jp
iret
movsw
jnp
mov
aas
sub
xchg
cmp
jl
inc
dec
lahf
pop
cmpsl
or
pop
js
jmp
adc
mov
adc
imul
out
std
and
or
pop
and
push
mov
das
xor
repz
sbb
mov
arpl
shlb
cli
test
sbb
jg
push
popa
cmp
mov
roll
mov
or
or
push
pop
xchg
cli
xchg
inc
mov
gs
std
daa
sbb
sub
cmp
mov
std
or
lock
or
pop
jl
scas
jo
adc
mov
mov
out
dec
test
jge
sbb
pop
sbb
shrl
daa
cmpsl
fdivp
jecxz
cmp
sbb
mov
pop
jp
test
pop
xlat
fcompl
push
ret
pop
mov
in
cmp
aas
lahf
es
sub
js
xchg
jl
dec
gs
rolb
adc
add
in
and
fcompl
aad
fsubl
xlat
or
loope
idiv
add
sbb
jno
lods
add
push
push
loope
xchg
test
lret
sbb
push
pop
test
mov
pop
ret
stos
sbb
dec
xor
sbb
std
pusha
jns
mov
imul
test
in
jecxz
sbb
dec
jl
popa
cltd
jnp
call
and
fidivs
xor
sub
cmp
pop
and
stos
push
jae
cmp
mov
xchg
mov
adc
sub
rcll
and
mov
jp
lret
je
fistpl
xor
pop
mov
push
cmpxchg
or
jnp
aam
loope
and
jae
mulb
fwait
xchg
cmpsl
shlb
repz
mov
xchg
adc
iret
shrb
aas
push
cmp
lret
pop
jg
xchg
xchg
insl
dec
push
sub
lods
insl
loopne
cmp
pop
andb
push
push
lock
clc
dec
insl
lcall
cltd
adc
mov
out
push
jns
adc
cs
lods
divb
add
cmp
movsl
and
jne
mov
push
xor
sub
push
ss
add
popa
test
lcall
inc
int
and
xor
negb
fistl
or
cs
jge
mov
fsubrs
inc
nop
mov
mov
es
shl
fildll
test
movsl
xor
call
or
subl
movhps
add
in
mov
inc
jge
mov
ljmp
fdivr
aaa
jge
add
and
nop
jge
int3
aas
fucomp
lods
inc
jne
xchg
sub
jl
add
jle
pop
mov
testl
adc
mov
addb
jge
out
sbb
push
jbe
dec
in
mov
std
test
or
or
xchg
and
out
inc
pushf
or
cs
addr16
pop
mov
dec
bswap
sbb
iret
mov
mov
scas
mov
bswap
movsb
xor
lret
cmpsl
dec
xchg
inc
push
sbb
int
btcl
les
jb
push
cmp
fwait
push
lret
cmp
int
jp
xor
mov
adc
dec
shrb
xor
xor
fdivp
sbb
daa
pop
add
dec
pop
add
lea
insb
iret
into
or
lcall
icebp
pushf
sub
jae
cld
pop
sti
nop
mov
int
adc
sbb
shll
cmc
int3
loope
popa
out
dec
mov
sub
or
in
shll
jg
mov
das
add
pop
xor
divb
jo
xchg
outsb
adc
lock
fisttps
loope
popf
sahf
mov
and
add
in
ror
shrl
push
xchg
lcall
roll
jb
adc
mov
inc
mov
or
jno
movsl
xchg
pop
cmovno
movsb
iret
push
in
fisubrl
repz
pop
shll
sahf
popf
fidivl
jp
aad
sub
mov
sub
cmc
int
cmp
lock
sub
mov
adc
lret
sar
mov
mov
push
mov
test
cwtl
mov
cwtl
sahf
std
ret
lahf
loop
mov
test
dec
xchg
xor
mov
push
sbb
pushf
call
jmp
test
pop
repnz
pop
ja
sahf
pop
in
mov
inc
outsl
pop
push
out
add
xchg
es
dec
mov
pop
arpl
repnz
mov
stos
les
jle
sub
add
jecxz
adc
sbb
rorb
push
xor
adc
je
fdivrl
push
lea
xchg
mov
arpl
lds
cmp
pop
push
fmull
sbb
push
mov
scas
pop
pusha
adc
popa
jp
adc
adc
xor
icebp
push
ret
mov
mov
aad
insb
xlat
push
pop
sti
inc
loope
xchg
or
or
dec
je
push
pop
test
aas
mov
mov
adc
mov
int
pop
add
inc
aaa
xchg
mov
insl
mov
dec
and
adcb
pop
mov
stos
push
mov
lods
add
cltd
cmp
push
int
and
or
enter
push
icebp
cli
sub
clc
pop
and
cmpsl
jl
mov
fwait
push
stos
xchg
fcomps
imul
xor
sub
push
lahf
shlb
pop
loop
adc
add
or
lahf
sbb
inc
dec
xor
sub
jge
dec
cwtl
test
inc
repz
mov
loopne
stos
cmpsl
das
je
sbb
inc
mov
xor
pop
movsl
dec
loop
outsl
jge
and
xor
xchg
cmp
pusha
and
and
lea
movsl
sbb
test
xchg
cwtl
push
jmp
incb
movb
nop
mov
adc
call
fstps
add
cmpsl
adc
pop
sarl
push
jbe
test
sub
insb
dec
pop
pop
xchg
rcl
js
mov
pop
adc
leave
jno
fs
pushw
call
insb
cmpsb
pusha
xchg
stc
loop
mov
add
into
xor
lds
mov
xlat
fisttpll
insb
in
cmc
decl
push
xor
dec
in
inc
movsb
popf
inc
push
sbb
sub
leave
adc
xor
mov
movsb
aas
add
mov
dec
sbb
xchg
pop
movsb
test
mov
sahf
jecxz
inc
dec
lods
mov
into
shl
xor
add
std
mov
aad
enter
add
stos
push
adc
push
push
daa
fists
inc
mov
adc
jg
mov
mov
xchg
add
sahf
rcrl
pop
mov
fdivrp
into
mov
mov
fnstsw
inc
out
push
sub
sbb
or
test
inc
mov
mov
push
movsl
pusha
sub
lock
push
loope
sbb
add
fimull
mov
xor
cmpsb
push
mov
jecxz
jmp
orl
xchg
xor
aad
mov
arpl
shrl
inc
xchg
pushf
dec
jne
dec
mov
xchg
adc
aad
xchg
xchg
cmp
push
mov
and
or
pushf
outsl
into
pop
pushf
ds
out
jnp
imul
adc
lea
pop
mov
les
out
xor
fs
ret
push
push
in
inc
out
arpl
add
push
xchg
enter
mov
ret
mov
jbe
add
sbb
pop
or
jmp
sub
fmull
adc
nop
sarl
call
mov
mov
les
adcl
sarl
jecxz
stos
xor
ljmp
das
sbb
mov
jno
iret
mov
jne
xchg
xor
fsubs
mov
stos
ret
das
adc
sbb
jns
aaa
adc
loope,pt
movsl
jb
not
push
mov
dec
aaa
dec
mov
dec
jmp
sbb
mov
xchg
icebp
hlt
dec
sub
aas
push
cmc
nop
cmp
add
mov
mov
pop
aas
aas
jecxz
dec
fcomps
mov
aad
neg
arpl
fwait
jg
movsb
fistl
add
sub
xor
ljmp
hlt
push
insl
sub
add
mov
ror
sbb
add
dec
push
dec
sub
mov
mov
mov
mov
dec
lahf
clc
dec
inc
adc
insl
xchg
lahf
and
lds
cld
out
dec
in
sti
imul
or
mov
xchg
add
inc
js
jb
movsl
pop
inc
test
andb
hlt
dec
jb
pop
or
sbb
gs
push
cld
and
rcl
sbb
decb
xor
lea
lret
inc
xchg
imul
test
jg
outsb
popa
cwtl
push
aas
mov
mov
xor
inc
pusha
sub
sbb
test
lods
xor
xor
cltd
jne
cmp
movsb
jp
and
jg
mov
push
jge
sub
jp
mov
add
call
rcrb
jo
outsb
sub
add
loop
fcoml
in
xchg
or
das
lret
out
sub
pop
add
cmc
fildl
xor
adc
pop
nop
mov
sbb
lods
mov
out
push
xlat
out
movsb
and
xor
mov
lods
insb
repnz
adc
jge
lret
jecxz
popf
ss
nop
and
repz
out
mov
test
loop
ja
aas
adc
jl
dec
sub
adc
test
sub
sbb
bound
nop
jle
stos
ja
aam
mov
jmp
test
inc
cmp
pop
sub
insb
jge
sbb
ret
mov
mov
mov
fcmovbe
popf
xor
faddl
repz
out
cmc
insb
jg
movsl
xchg
into
pop
stos
cmp
sub
mov
cli
leave
mov
add
inc
or
imull
icebp
mov
cmpsl
inc
dec
aad
jo
add
daa
pop
sbb
movsb
sub
sbb
ja
sub
jl
adc
int3
jmp
cmpsl
jp
aas
data16
and
lea
sub
jmp
or
repz
mov
cmpl
mov
mov
stos
pop
imul
mov
inc
push
xchg
pop
fnstcw
leave
cld
dec
or
adcl
mov
mov
call
fbstp
in
imul
enter
icebp
mov
int3
mov
and
ljmp
inc
shll
pop
push
in
or
nop
test
mov
jecxz
sarb
pushf
jg
jbe
iret
pop
adc
stc
scas
mov
and
mov
aam
icebp
pop
push
adc
push
fmull
iret
add
sbb
mov
or
dec
and
gs
rorl
adc
gs
dec
adc
ffree
jno
addr16
ret
pop
pop
f2xm1
popa
cmp
rcrb
and
xchg
add
aaa
jecxz
rcll
xor
outsb
sbb
ja
push
ds
out
mov
mov
aam
ja
aaa
std
and
into
add
insl
xchg
adc
inc
cmpsl
xor
mov
mov
push
repnz
jmp
xchg
xor
or
push
and
jo
mov
subb
cmp
or
into
jae
aad
adc
and
push
outsb
jne
jmp
pushf
or
or
pop
iret
pop
loop
es
jp
xchg
or
xlat
jno
xchg
fsts
xchg
cltd
cwtl
fdivrl
shrl
into
adc
fisttpll
sub
movsl
mov
int3
iret
sub
loope
dec
movsb
fldl
jnp
mov
repz
enter
std
push
daa
ja
push
movsl
jg
andl
inc
push
stos
out
adc
mov
inc
or
insb
cld
cmp
popl
cmp
popf
mov
mov
mov
cmp
fbld
push
jns
xor
xchg
jo
test
icebp
dec
lahf
xor
imul
push
pop
lahf
out
mov
fs
movsl
xor
mov
pop
push
and
out
jp
xchg
stos
jo
cli
daa
push
add
jo
or
dec
lahf
push
popf
sbb
ficoms
fs
in
jmp
jno
adc
cmpsl
cmp
jno
adc
sbb
js
hlt
loope
hlt
gs
inc
stc
daa
cmp
fcmovu
hlt
push
faddl
into
mov
aaa
xchg
mov
leave
iret
jno
sub
movsl
mov
mov
divb
inc
loopne
xchg
clc
or
mov
sub
popf
inc
push
push
js
cmp
pop
push
dec
or
adc
cmp
add
dec
cli
sbb
out
cmp
cmc
jge
mov
jnp
sub
scas
rcrb
iret
cmp
sub
daa
sub
popf
push
cmpsl
jl
cmp
movsl
es
out
inc
in
xchg
fsubrs
cmp
jge
cmp
mov
mov
rorl
ret
xor
jae
pop
and
mov
inc
adc
add
mov
push
adc
add
mov
test
lret
and
fisttps
xor
popa
out
cmpl
mov
ss
std
xchg
sar
int3
jmp
decl
push
les
mov
cmp
aas
jae
je
cltd
xlat
clc
aaa
and
mov
and
mov
inc
cmpsl
jl
or
xor
mov
sbb
fsub
or
push
xor
cwtl
add
adc
xchg
mov
dec
inc
iret
and
jae
xchg
add
test
push
stc
sbb
std
xchg
mov
xchg
cmp
stos
jno
scas
xor
lock
outsl
add
and
adc
pop
int
ljmp
je
scas
push
popf
xchg
inc
cmpsb
pusha
xchg
movsl
adc
jne
dec
or
shrb
in
fdivs
out
movl
push
inc
pop
fadds
ss
adc
push
test
xchg
je
adc
push
lcall
ds
lcall
rcl
or
inc
ret
jl
insb
or
jp
inc
jns
gs
out
loop
sbb
roll
mov
jnp
mov
aad
adc
mov
fxtract
pusha
xlat
pop
daa
push
call
movsl
leave
sub
sbb
cmp
pusha
lock
scas
out
movsl
cmpb
jns
out
sahf
pop
insb
in
sbb
int3
ret
imull
cwtl
ljmp
int3
fs
pop
in
scas
inc
arpl
mov
mov
mov
ja
dec
mov
popa
dec
push
adc
scas
mov
sti
bound
rcll
sbb
mov
mov
imul
bound
jne
mov
sub
xchg
xor
sub
fstpt
les
cmc
cli
mov
mov
popa
mov
shlb
mov
fucom
add
insb
push
in
jb
sbb
adc
jp
hlt
xor
ret
ret
notl
gs
fdivl
add
dec
stos
lods
lea
jecxz
fimuls
incb
jnp
add
jno
call
mov
ret
insb
push
xchg
imulb
mov
dec
fiaddl
adc
mov
orl
iret
mov
out
cwtl
jo
xorl
loope
fs
outsb
movnti
test
xchg
mov
or
lds
xchg
xchg
adc
push
ficomps
add
in
or
cli
insb
or
test
aam
push
int
jmp
clc
fs
mov
sbb
repnz
out
out
mov
and
imul
nop
cmpsl
sub
sahf
loope
outsl
sub
aas
shll
mov
or
mov
add
adc
adc
and
int
fidivrl
mov
mov
jge
ds
inc
pop
lcall
adc
call
inc
std
jl
arpl
sahf
mov
push
xchg
mov
mov
imul
push
mov
cmp
push
push
pop
outsl
xchg
loopne
clc
lds
xor
sub
mov
dec
imul
cwtl
in
pop
enter
das
insl
int
data16
aam
addr16
jge
adc
in
aaa
sub
mov
popa
pop
push
sbb
lds
mov
test
fdivs
rcl
lahf
pop
fistl
pop
mov
clc
and
shr
jmp
or
pusha
sub
jmp
pop
mov
arpl
rorl
jg
stc
lds
daa
adc
or
mov
popa
mov
jae
mov
fisttpl
pop
outsl
or
daa
jo
aas
mov
mov
dec
addl
test
int
jno
sub
bswap
xchg
dec
lcall
scas
dec
test
or
pop
std
jns
loop
iret
lret
outsl
push
jp
ljmp
add
add
mov
pop
popa
addr16
xchg
mov
dec
sbb
cmpsb
dec
xchg
jmp
loope
fildll
fsub
mov
xchg
xchg
push
jg
mov
insb
or
and
or
xchg
and
imul
mov
xchg
into
lea
fs
daa
pusha
inc
mov
cmc
cmc
add
jge
jb
orb
jns
in
or
lcall
rcrl
jnp
icebp
enter
push
loope
das
mov
fsts
and
stc
dec
out
xchg
xor
mov
dec
or
xchg
push
inc
xchg
sub
imull
dec
sbb
mov
mov
cmpsl
jp
inc
jle
adc
mov
pop
pusha
fildl
in
out
rcl
loop
inc
mov
in
out
clc
and
pop
jmp
xor
cltd
rclb
lods
mov
mov
pop
ret
hlt
cmp
test
pop
int3
lcall
les
mov
push
repnz
xchg
adc
xchg
and
iret
pop
in
sub
mov
inc
popa
jno
xchg
jne
rcll
and
xor
mov
mov
or
or
cmp
pop
mov
and
inc
xor
cmpb
sbb
insl
cmp
push
cld
mov
push
jmp
sub
shl
inc
gs
imul
test
mov
rorl
lods
xchg
mov
enter
or
push
sub
mov
add
subb
inc
cmp
jecxz
push
mov
js
mov
loop
or
lods
sub
repz
lcall
repz
jno
jmp
xchg
ss
mov
sarl
rorl
cltd
sub
cltd
lahf
movl
jnp,pn
inc
and
iret
mov
mov
push
lahf
iret
hlt
sbb
dec
loopne,pn
rcrb
or
nop
inc
or
sti
mov
cld
outsb
jnp
sbb
aaa
mov
inc
test
add
pushf
xchg
push
push
insl
rclb
and
mov
popf
sub
cmp
clc
dec
mov
cmp
clc
pop
jle
add
stos
int3
jb
data16
xor
je
cmp
push
mov
bound
fisubl
sub
xchg
sbb
pop
mov
jmp
or
cmp
ljmp
add
daa
adc
bound
mov
xchg
inc
stc
dec
daa
int
xor
mov
loopne
pop
pop
jp
sbb
popa
pop
out
pop
xchg
or
das
in
sub
lock
and
xor
loope
cmp
push
xorb
pop
repz
cli
dec
hlt
dec
push
mov
mov
scas
jns
dec
stc
fld
push
jb
xchg
rol
sub
push
cmpsb
pop
mov
aaa
mov
mov
inc
into
popa
xor
push
sti
jns
ljmp
sub
js
add
mov
sahf
out
cwtl
stos
in
fiaddl
xchg
xchg
or
mov
pop
pop
movb
push
ja
push
xor
testl
popa
mov
popa
mov
and
outsb
push
sti
mov
inc
loope
test
jmp
aad
shll
mov
aam
sub
cmpsl
and
jge
dec
leave
cwtl
dec
fisubrl
aad
pusha
js
push
inc
sub
mov
inc
and
test
out
mov
or
adc
mov
jb
mov
je
mov
test
sbb
imul
xchg
ss
in
xor
sub
test
ficompl
je
aaa
fidivrl
addr16
pop
or
and
push
jp
mov
inc
ret
test
dec
mov
into
push
push
orl
or
jle
sub
cmp
cs
fiadds
lods
mov
cmp
hlt
outsl
das
test
mov
ficomps
push
dec
and
or
mov
cmp
dec
jge
push
lret
sub
add
dec
pop
cli
insl
movsb
add
rolb
xchg
icebp
jmp
mov
hlt
dec
out
scas
jge
jg
and
and
out
fwait
mov
cli
ja
jnp
cmc
jmp
sub
in
sahf
and
cmp
mov
mov
sbb
test
adc
iret
inc
lret
orl
mov
lds
gs
mov
adc
mov
enter
or
cwtl
sbb
into
and
xchg
insl
pusha
mov
add
ljmp
inc
adc
xorl
jns
mov
cmpsl
sbb
xor
scas
jle
call
or
xchg
mov
add
subb
dec
jmp
jbe
jmp
jge
or
lds
mov
and
inc
dec
pop
cli
mov
pop
imul
jle
shrl
out
and
cmp
sti
fwait
orl
das
or
xor
aaa
in
xchg
xor
xchg
inc
jbe
and
mov
add
fst
push
aam
iret
lcall
or
imul
mov
adc
push
pop
int3
xor
rclb
arpl
out
hlt
dec
add
xor
pusha
adc
jge
cmp
int3
lods
scas
pop
jns
cmp
mov
popa
sbb
popf
rorb
dec
or
ja
fnstenv
dec
fbld
cmp
call
scas
lods
pop
sarb
lret
mov
mov
fidivrl
cmp
es
mov
or
rorl
rcll
outsl
xor
fs
mov
cmp
insl
into
push
xchg
and
clc
stos
inc
and
cwtl
out
sbb
sbbl
sub
ds
fwait
sbbl
cmpb
mov
insb
mov
mov
lcall
adc
jbe
les
mov
sarb
and
addr16
cli
lea
sbb
xchg
pop
mov
jb
fs
repz
out
or
sub
mov
push
dec
out
push
cmp
adcb
pause
jge
sub
jg
in
mov
or
push
aam
enter
sahf
imul
fs
fmul
fstps
dec
lock
lea
and
xchg
clc
shlb
mov
cltd
lahf
enter
jnp
icebp
xor
test
repnz
cmp
aas
icebp
loop
add
xor
fs
dec
lcall
hlt
test
xchg
scas
fsubs
xor
jno
push
mov
insb
or
mov
jns
cmp
call
sub
andb
loopne
xchg
dec
pop
mov
sub
sub
lods
jns
push
mov
or
jp
loopne
or
push
cli
sub
in
mov
iret
test
and
inc
leave
jno
xor
mov
cs
arpl
sarl
pop
fsubl
scas
mov
mov
push
in
pop
xlat
sub
jge
xorl
sarb
adcl
and
call
incb
xor
inc
in
or
frstor
inc
or
dec
test
and
sbb
lahf
cld
jl
ljmp
out
mov
and
or
push
fdivs
sub
cwtl
adc
or
inc
inc
jmp
inc
or
mov
pusha
push
cwtl
add
cmpsb
aaa
mov
pop
nop
scas
adc
xor
in
pop
cmc
hlt
mov
or
sbb
cltd
rorb
xchg
loope
dec
xor
fwait
jecxz
add
push
jmp
xor
push
pop
cli
dec
out
adc
fcom
jp
inc
rcl
mov
repz
push
sub
iret
sub
jmp
lret
pop
cmp
out
cmpsl
lods
popfw
add
push
pop
pop
xor
mov
gs
fidivrs
xor
aad
icebp
pop
inc
push
mov
jns
imull
cld
push
mov
mov
sahf
scas
xor
sub
movsl
repnz
out
int3
rorl
jne
std
mov
inc
sub
mov
xor
je
xchg
add
and
aas
bound
xchg
lahf
decb
xchg
iret
test
lock
fmull
adc
decl
rcrl
inc
dec
rcrb
std
mov
mulb
fsubrs
dec
bnd
or
bound
lock
mov
push
addr16
jmp
fstl
mov
cs
xchg
xor
rcrb
and
je
jg
test
mov
inc
mov
rcll
into
test
mov
out
lock
adc
bswap
aas
xor
test
dec
and
in
sbb
insb
and
pop
mov
enter
rorb
add
shll
call
push
add
mov
ja
lea
insl
mov
dec
mov
outsb
out
rcll
mov
loope
push
mov
xor
jl
push
xchg
movsb
in
mov
or
repnz
test
dec
icebp
and
pop
out
aam
fists
clc
mov
cmp
fwait
xor
addr16
mov
ljmp
lods
test
mov
xchg
hlt
insl
shrb
cmp
icebp
ds
adc
scas
mov
insb
icebp
out
lods
inc
imul
cmp
sbb
mov
fcomp
iret
jg,pn
ss
jno
and
add
lods
mov
xchg
insb
sbb
idivl
rcrl
xor
mov
fwait
pop
inc
lds
mov
push
cmpsb
pop
lahf
pushf
cli
or
lahf
popa
and
cmc
dec
push
in
adc
add
fidivl
rol
dec
and
repz
mov
enter
jge
dec
pop
jmp
std
cld
mov
sbb
cmpsb
and
and
icebp
sub
add
in
mov
testw
lret
cmpsl
xchg
mov
mov
push
jle
xor
cwtl
outsl
or
call
negl
popf
lock
aaa
aad
jnp
fcmovbe
rcrl
dec
jnp
lods
or
inc
jmp
xor
test
sbb
lahf
dec
inc
lock
pop
subl
stos
pushf
adc
leave
sbb
mov
ret
and
jecxz
pop
pop
cmp
dec
push
and
inc
sahf
adc
and
movsl
push
sub
in
cmp
sahf
sbb
ljmp
in
mov
mov
push
rcr
jnp
repnz
sbb
mov
imul
push
stc
mov
test
pop
jle
and
dec
sbb
les
sub
push
popa
mov
jbe
cltd
data16
push
bound
fadds
xchg
out
pop
or
inc
and
jo
mov
add
je
arpl
xchg
jle
jp
sub
insb
sbb
xor
mov
mov
stos
ror
das
add
clc
push
pop
outsl
sbb
cwtl
adc
jo
jae
sbb
scas
cs
push
xlat
push
sbb
mov
addr16
lret
int3
sahf
push
jp
call
jnp
data16
adc
sub
scas
inc
sub
int3
and
ficoml
lcall
test
test
stos
adc
lods
ret
push
test
sub
mov
pop
ja
arpl
push
sub
dec
sbb
jb
xchg
mov
adc
lods
icebp
cli
out
dec
aad
loop
sahf
les
pop
sbb
sbb
das
clc
mov
jmp
xchg
xchg
push
orl
jno
adc
rclb
pop
and
les
sub
loope
inc
and
cmp
mov
jo
das
jo
push
xchg
in
js
cmp
roll
int3
push
arpl
repnz
mov
sbb
jns
mov
ret
jg
pop
lds
jle
sti
stos
and
adc
push
aaa
push
cmp
xchg
add
stos
lods
popa
mov
jne
sub
fmul
aaa
nop
inc
sbb
push
dec
orb
jl
cmp
mov
sub
int3
jecxz
int
aas
pop
int3
loopne
push
dec
mov
fcmovb
cltd
xor
xor
cmpsb
and
push
add
das
sbb
aam
rcrl
cmp
or
orb
inc
sub
or
mov
enter
in
imul
push
shr
out
shlb
jbe
lcall
les
sbb
add
daa
lods
shr
pop
cwtl
daa
pop
cmpsb
push
das
es
jmp
clc
aaa
jne
mov
inc
mov
lea
mov
scas
cs
jmp
imul
xlat
cmp
arpl
cmc
rcll
push
sahf
and
mov
iret
fwait
dec
lods
gs
rcrb
mov
and
std
sti
mov
jne
std
mov
push
push
repnz
test
cwtl
add
mov
add
test
pop
shl
addl
cli
jo
xchg
xor
imul
in
sub
sbb
sbb
xor
das
icebp
test
popf
cmp
xor
fsub
pushf
and
stc
jg
pop
cmc
aam
stc
xchg
stos
cld
xchg
push
stos
call
popa
lea
addr16
test
pusha
mov
mov
mov
adc
call
jnp
xor
pop
sub
aam
xchg
data16
ds
cmp
add
adc
push
mov
inc
xor
inc
dec
push
jg
and
xor
inc
pop
mov
push
adc
stos
cmp
aam
jo
adc
or
pop
mov
inc
push
outsl
daa
sbb
popf
mov
inc
loope
and
lcall
aam
inc
adc
test
int
pushf
add
aad
jg,pn
stos
int3
fidivs
dec
cmp
adc
in
loopne
inc
sub
lret
pop
adc
inc
test
cmpb
xchg
and
xchg
and
xchg
mov
sbb
mov
mov
fimull
and
daa
fimull
sub
xchg
sub
lds
dec
xchg
pop
insb
jg
push
mov
cmp
ss
xchg
dec
xchg
fdiv
imul
arpl
add
push
xchg
mov
or
push
fisttpll
pop
pusha
mov
or
incb
arpl
add
mov
pop
mov
mov
fistl
jno
sbb
add
jo
outsl
repnz
or
adc
test
mov
fsubs
aam
in
jle
xor
mov
aas
jge
test
shll
pop
push
mov
out
fs
out
movsl
pop
test
daa
sti
imul
xchg
stc
stos
insl
cmpl
xchg
inc
dec
cmp
cli
outsl
mov
in
xchg
jb
sbb
scas
push
std
int3
andb
sub
pop
xor
outsb
fcmovb
fldl
mov
mov
ds
add
mov
mov
xchg
mov
mov
call
sarb
scas
pop
leave
dec
xor
lods
out
loope
jne
test
test
aaa
leave
push
lahf
ficoms
jge
int3
sub
clc
push
int
or
push
rorb
jp
loope
aas
cmp
jl
xchg
cmp
dec
shlb
and
xlat
mov
push
push
pop
cmp
xor
cmpsb
fwait
into
pop
call
push
movsb
dec
dec
lret
mov
cltd
jge
test
mov
push
ffree
jno
sub
inc
or
xlat
sbb
mov
fsubs
pop
leave
sbb
jae
sub
jg
rorl
shll
xchg
jnp
insb
cmp
mov
icebp
addr16
fisubl
mov
and
rorb
lds
jp
pusha
add
pop
inc
add
cmp
leave
stc
push
das
sub
or
in
shrb
push
xchg
es
rorl
mov
out
mov
rorb
pop
sub
sbb
and
add
adc
mov
inc
mulb
popf
fisttpl
mov
insb
repnz
jl
add
cmpsl
sub
inc
cwtl
adc
fwait
push
inc
or
clc
push
fwait
mov
aam
xchg
and
cmp
test
mov
movsb
js
and
ret
xor
outsl
sbb
or
lret
jno
cmpsl
in
jae
scas
or
cli
mov
dec
shl
pop
insl
sbb
xchg
cmp
adc
flds
imul
arpl
pop
movnti
sub
xor
mov
rcl
shrb
rclb
fwait
popa
or
icebp
jns
and
sub
inc
ss
xor
mov
cmp
popa
push
mov
bswap
out
nop
mov
gs
inc
push
dec
mov
fcmovbe
aaa
add
jae
pop
add
and
mov
shr
ljmp
inc
aaa
adc
imull
in
push
icebp
rcl
jb
jne
lcall
cld
in
icebp
sbb
sub
dec
gs
outsl
xor
addr16
test
jp
in
js
ret
sbb
call
inc
rclb
and
sbb
and
pushf
xchg
adc
jbe
jmp
jge
js
mov
lds
into
stc
pop
jle
mov
xlat
pop
adc
cmp
xchg
cmpsl
xor
add
mov
mov
insb
push
push
push
scas
xchg
loop
std
mov
pushf
xchg
push
jb
push
xor
jns
mov
cmp
xchg
xor
push
jge
nop
xor
mov
aad
inc
mov
mov
jae
seta
push
aaa
int
dec
cmpsl
rcrb
pop
clts
out
mov
push
sub
jns
mov
sub
and
cmp
lods
dec
shrb
cmp
xor
lock
call
push
cs
shlb
sti
daa
dec
int
mov
out
mov
sub
cmp
and
xchg
sbb
fstpt
nop
call
pop
stos
rclb
or
cmp
dec
mov
xor
insl
inc
cmp
aaa
aaa
mov
inc
sarl
adc
pop
jecxz
mov
das
xchg
jl
mov
push
jo
push
xchg
jns
mov
mov
imul
jl
shrb
movsl
mov
xlat
push
test
fists
sub
push
xlat
inc
jae
and
and
insl
popf
stc
imul
push
cmp
jle
inc
dec
test
inc
repz
jmp
pushl
adc
xor
repnz
sbb
mov
jmp
xchg
loopne
push
movsl
pop
bound
or
cmp
add
in
test
jl
outsb
or
pop
lret
in
jb
xchg
mov
adc
push
cmp
sub
jmp
scas
xrelease
xlat
xor
mov
iret
xor
sub
call
shrl
sti
or
js
mov
test
nop
xor
push
mov
sti
jo
aam
push
xor
mov
fstpt
fnstenv
shll
mov
jnp
popa
adc
jmp
inc
negb
xor
inc
daa
cmp
jle
jl
ljmp
sbb
push
push
pushf
adc
fldcw
shl
add
add
dec
mov
pop
adc
push
or
push
ja
adc
clc
add
loop
push
xchg
insl
xchg
stos
pusha
inc
push
lea
push
cli
xor
in
movsl
mov
pop
xor
pop
loope
jmp
loopne
sub
into
cs
inc
cmp
jecxz
fstpt
and
mov
add
dec
fists
js
mov
cmp
mov
or
outsl
mov
iret
jae
push
cmpsl
push
rcrb
in
sub
or
pop
adc
sub
jl
leave
lods
idiv
push
mov
cmp
lahf
sarb
je
insb
int
add
adc
lret
addr16
pop
jbe
or
or
lcall
and
push
mov
mov
or
adc
gs
loopne
mov
sub
int
xor
xor
int3
cmp
mov
push
inc
rcrb
jg
call
fbstp
sub
movsl
push
out
adc
xchg
sbb
mov
jno
sub
cmp
lret
pop
xchg
inc
sub
roll
jns
add
ss
adc
jns
enter
aam
xchg
and
add
push
lds
lods
loop
loope
cmp
add
cmpl
pop
add
jb
jo
push
call
add
mov
xchg
sbb
jae
movsb
xchg
stos
and
shrb
mov
jae
repnz
popf
ret
sub
imul
sub
or
lret
aam
sub
xor
cmp
xor
mov
out
xor
ffreep
xchg
ret
gs
dec
mov
shrl
add
bound
mov
movsl
jb,pt
mov
sti
sbb
sub
out
in
sbb
mov
orb
inc
rclb
pop
add
add
sbb
mov
out
mov
xor
ss
mov
and
inc
out
sub
lahf
push
repnz
sahf
sub
mov
mov
sub
push
enter
aam
in
test
lcall
xor
and
addr16
icebp
test
jne
jae
mov
and
sahf
adc
es
push
in
lahf
outsb
outsb
xor
mov
mov
jbe
xchg
shlb
les
xchg
rclb
push
mov
push
push
fdivs
sbb
insl
jne
lods
pop
outsb
mov
aaa
push
xor
xor
add
push
jae
push
dec
mov
inc
jg
pop
fimuls
scas
lahf
and
mov
push
imul
divb
mov
mov
inc
cmpsb
and
in
repnz
mov
sub
sub
and
cs
addr16
shlb
cmc
push
or
leave
popf
jo
xlat
dec
lret
sub
add
dec
xchg
mov
outsl
and
pushf
adc
stos
and
xchg
push
dec
pop
mov
cmc
push
das
xor
xchg
or
hlt
push
xor
adc
sbb
in
jmp
xchg
lret
stos
outsl
xchg
fidivl
hlt
popf
sub
pushf
cmp
inc
in
cmc
fs
jmp
insl
jae
addr16
push
adc
imul
ds
push
ss
fsubrl
mov
or
aas
sub
lahf
test
mov
push
ret
cs
repnz
add
ror
data16
sub
cwtl
pop
mov
jl
addr16
fstps
mov
ds
inc
lret
roll
or
pop
js
es
movl
pop
mov
inc
lea
pop
mov
scas
je
mov
sahf
push
sub
jmp
pop
inc
imul
scas
mov
mov
out
jecxz
jmp
mov
add
and
sbb
lahf
mov
xchg
in
outsb
scas
test
pop
xchg
adc
mov
iret
mov
ret
pop
xor
push
jbe
stos
jmp
bound
dec
sahf
fidivs
mov
or
adc
icebp
sub
pusha
cld
out
mulb
inc
or
ljmp
mov
lret
ljmp
scas
sahf
mov
lcall
ja
adcb
cmpsb
out
sub
data16
fs
mov
xchg
sub
mov
adc
push
clc
out
pushf
mov
iret
shrb
popa
push
pop
push
dec
inc
mov
or
and
adc
adc
pop
or
pop
jno
and
cli
add
mov
pop
add
push
add
jl
dec
xchg
pop
enter
movsl
pop
jne
xor
and
shrl
jl
scas
imul
dec
dec
push
inc
movsb
add
mov
lcall
test
mov
jmp
cltd
sbb
lahf
sbb
sahf
jb
mov
dec
push
out
add
out
add
lret
ss
lahf
or
cmp
sti
jp
push
mov
pop
pop
xchg
mov
imul
xor
fs
ja
pop
leave
loopne
lret
mov
loope
and
addr16
mov
xchg
xor
gs
cmpsl
test
out
insb
sub
fwait
lods
ret
mov
fxch
lret
arpl
stos
jge
cmpsl
outsl
ds
lret
xchg
rcrb
adc
pop
push
aad
and
jge
or
add
cwtl
cmpsb
add
fists
push
insl
jg
dec
jl
out
lahf
add
cmc
xlat
xchg
xchg
push
repnz
sub
push
add
xor
insb
lods
sbb
mov
ljmp
stc
pop
xchg
push
pop
push
adc
jb
sbb
push
add
add
out
outsb
mov
inc
sahf
js
out
push
int3
cmp
dec
dec
jae
mov
jnp
out
popa
cltd
jno
movsb
dec
mov
lcall
inc
movsl
add
mov
jno
fldl
mov
adc
pop
nop
ljmp
pop
pop
dec
mov
push
ja
sub
pop
scas
mov
sbb
rcr
imul
pcmpgtb
outsb
repz
aaa
les
cmp
inc
jecxz
mov
icebp
nop
fcoms
cmpsb
inc
fadds
or
ljmp
xor
sahf
sbb
mov
pshufw
jp
or
adc
mov
cmp
jmp
mov
sub
sbb
adc
mov
xlat
mov
sbb
je
bnd
mov
push
pop
popf
pop
mov
cs
jmp
dec
popa
mov
shlb
sbb
adc
test
or
aaa
icebp
stc
loopne
dec
jns
gs
test
imul
sbb
add
test
std
sub
add
cli
cld
loopne
mov
cs
cmp
popa
dec
cmp
fsubrl
ret
jbe
gs
push
je
dec
or
sbb
adc
lcall
aad
inc
push
movsl
imul
push
dec
cmp
cld
call
xor
out
mov
cwtl
mov
jne
xor
in
pop
mov
pop
lds
int3
add
popf
aaa
mov
xorl
testb
or
dec
jle
mov
in
test
aaa
add
orl
fcmovb
cmpsl
inc
cmp
dec
das
or
lret
sbb
scas
inc
cli
lahf
hlt
cmpsb
pop
pop
fs
int
and
pusha
sbb
pop
mov
ja
sarb
fidivrs
and
adc
fld
cld
aam
adc
jge
fstpt
and
jno
lea
je
and
or
imul
push
popf
mov
addr16
pop
cltd
adc
jle
out
jg
test
dec
in
jp
sub
movsl
int3
test
cmp
xor
cmc
pop
pop
hlt
mov
hlt
ret
pusha
mov
add
outsl
sub
mov
shlb
push
mov
push
xchg
rcll
cltd
js
push
sbb
inc
jmp
into
std
insb
jbe
ja
jae
stos
cmpsb
pop
xchg
cmp
pop
or
dec
and
outsl
loop
lret
push
cmpsb
mov
sbbl
xchg
std
inc
rolb
xchg
jge
data16
inc
inc
push
cmp
lahf
out
xchg
popf
jne
stc
mov
divl
mov
add
xor
in
enter
std
pop
and
jb
dec
iret
inc
fld
jo
fisttps
sub
sbbl
ss
mov
fisubrl
out
mov
jbe
xchg
scas
leave
push
dec
mov
push
ds
add
lock
pop
or
sub
inc
jmp
into
lret
push
jle
xor
int
sub
das
push
lea
shrb
xchg
imul
mov
jmp
lods
dec
out
sbb
testb
xchg
cmpsl
mov
cltd
aas
lods
mov
sub
outsb
dec
dec
lods
cmpsb
and
adc
xor
jecxz
inc
inc
fistpl
sub
fnsave
sbb
push
mulb
jb
fmuls
push
inc
xchg
int
dec
repz
cmp
dec
adc
sbb
pop
cltd
or
jle
pusha
iret
ret
nop
cmpsb
mov
add
leave
hlt
jg
fistl
push
movsl
mov
xor
dec
outsl
add
mov
xchg
aam
mov
insl
jmp
ficomps
sahf
push
pop
testl
push
push
aam
mov
aam
lcall
pop
mov
cli
push
push
les
movsl
stos
or
in
pop
inc
test
in
mulb
mov
inc
lock
insl
fdivr
push
aas
mov
adc
adc
rcrb
push
enter
xchg
arpl
stos
lret
adc
divb
push
pushf
xor
sahf
scas
add
xchg
jmp
shlb
dec
jecxz
push
pop
dec
mov
xchg
pop
repz
xchg
sbb
adc
int
scas
xchg
imull
dec
lcall
sub
pop
or
jnp
sub
sub
testb
sub
mov
pop
out
out
pop
daa
and
jp
push
dec
pushf
mov
pop
subb
add
nop
and
repz
or
imul
test
mov
imul
mov
sbb
loopne
pop
sbb
inc
jbe
loopne
je
xchg
mov
inc
push
sbb
ret
pop
xlat
adc
xchg
hlt
insb
dec
jb
loope
inc
imul
cltd
mov
xchg
pop
iret
push
or
pop
lahf
pop
xor
jge
iret
fcoml
inc
cld
push
rol
sub
xchg
cli
ret
clc
fsubrs
pop
xor
lods
ds
ficompl
xor
shrl
pop
iret
loope
ud2
jnp
jecxz
test
jl
cmpsl
mov
addr16
and
xlat
xlat
aam
aas
pop
shll
and
jmp
cmpsl
jne
fcmovnb
xchg
std
xchg
jmp
decb
or
xchg
scas
push
sti
cmpsl
sahf
lods
mov
fstpl
mov
sbb
mov
lahf
rcrl
stc
pop
push
call
cmp
bound
mov
or
mov
cwtl
repnz
mov
std
dec
pop
cld
xor
mov
ljmp
xchg
inc
cs
dec
lods
andb
filds
jo
adc
js
mov
sti
hlt
sahf
stos
ror
mov
scas
sub
xchg
push
loopne
inc
mov
and
rolb
mov
push
ss
clc
daa
adc
out
mov
scas
mov
stos
dec
mov
xor
mov
into
jle
fwait
push
test
daa
scas
testl
aad
push
popa
adc
xchg
fcmovnbe
pusha
dec
sub
pop
fsubrl
and
ficompl
cmp
cmp
jne
push
sbb
imul
fwait
adc
int
and
xorb
xor
leave
dec
faddl
lcall
into
mov
iret
cmp
push
xchg
ja
mov
ja
daa
outsb
jo
and
and
jmp
lcall
loop
adcl
pop
push
xor
pop
inc
ds
loop
inc
mov
clc
mov
pop
add
stos
outsb
inc
xor
bound
testb
stc
arpl
xor
pop
adc
cmp
or
cmc
ja
adcb
dec
subl
lret
jp
lods
popa
aaa
imul
loop
sbb
ds
or
mov
adc
adc
sbb
mov
lret
int3
inc
pop
stos
popf
pop
xor
cmpsl
mov
sub
cltd
sbb
xor
mov
ja
into
push
xchg
bound
daa
in
fisttps
fstpl
xlat
arpl
lahf
popl
adcl
add
xor
bnd
mov
mov
lods
add
insl
sbb
daa
lds
adc
lds
arpl
es
and
cs
lcall
jae
nop
aaa
and
jno
fstpl
pop
lock
int3
mov
mov
adc
push
imul
inc
pop
dec
stc
pusha
pop
and
call
inc
mov
jg
test
daa
jns
fimuls
mov
ret
stos
mov
jp
subb
sahf
sbb
movsb
jmp
test
int
mov
loop
mov
xchg
sahf
pop
cmpsl
mov
out
dec
sahf
insl
and
stc
push
xor
xor
xor
pop
cs
inc
movsb
mov
mov
xchg
pop
cmp
repz
sub
jle
lds
push
ja
fnstcw
sub
push
dec
clc
das
imul
jg
jb
xchg
adc
out
cmpsl
movsl
sub
sti
nopl
and
mov
inc
loop
addr16
fs
mov
das
jmp
shl
mov
fsubr
sar
mov
fwait
pop
stos
stos
xor
mov
cmp
jnp
daa
in
mov
shll
aam
repnz
out
and
in
mov
lock
adc
pop
in
fbstp
xlat
mov
lahf
cmpb
rclb
sbb
out
gs
lods
adc
pop
int3
mov
pop
fcom
mov
sbb
sbb
xchg
sbb
out
cmc
shl
push
sbb
inc
add
jbe
jae
outsb
lret
in
or
leave
xchg
cmp
adc
das
in
push
js
orl
adc
xchg
mov
or
cmp
js
adc
inc
fisttpl
lcall
xchg
leave
lahf
cmp
clc
enter
aad
xchg
dec
xchg
inc
sub
add
cmp
in
mov
push
lds
test
xchg
addl
es
inc
clc
int
xchg
push
mov
sbb
or
add
cli
cmp
lret
push
dec
xlat
fcomps
test
shrb
std
mov
adc
push
ja
scas
mov
cmp
aas
pop
imul
mov
jge
inc
outsl
fidivs
rorl
inc
pushf
cld
fdivr
pop
in
xor
lea
jg
inc
or
cmpsb
repnz
movsb
outsl
jno
sbb
pop
dec
xchg
fists
dec
out
push
shll
add
xor
fwait
int
fs
cld
cld
push
jg
rcll
mov
sub
mov
mov
insb
fbstp
xchg
add
xor
fnstcw
mov
pop
cmc
jmp
add
rclb
add
les
jmp
push
mov
int
ljmp
pop
sarl
push
sarb
loopne
push
add
mov
inc
mov
or
xor
and
scas
mov
xchg
aad
imul
out
int3
dec
dec
ja
btr
aas
inc
test
push
xchg
popa
inc
adc
fimull
out
cmpsl
cmp
orl
daa
in
stos
jecxz
rcl
add
rcll
sub
cwtl
pop
jnp
pop
pop
fs
cmp
mov
push
mov
ss
jl
add
sbb
ss
cmp
hlt
jecxz
ljmp
mov
rol
dec
mov
xchg
push
in
cld
pushf
sbb
xor
nop
sub
in
aad
xorl
shlb
xchg
cmp
popf
frstor
or
cld
mov
xor
lock
js
in
jl
pop
push
subl
inc
mov
mov
lret
push
push
or
dec
cmp
fs
clc
mov
gs
shll
xchg
repz
in
cmp
loope
dec
dec
dec
cmp
pushf
mov
in
push
bound
and
sahf
and
int
and
and
push
ja
and
push
outsb
fisubrs
sub
jnp
cmp
adc
jmp
xor
fisttpl
lock
jae
jg
xchg
adcl
jbe
xchg
adcl
push
popl
out
fstps
sub
sbb
inc
add
inc
mov
push
and
adc
in
fsub
or
nop
inc
pop
inc
and
nop
and
outsb
xor
das
in
xor
js
ret
inc
sar
ret
stos
addr16
mov
fnstcw
cmp
popf
adc
push
adc
testl
roll
dec
addr16
out
xchg
test
and
xor
popa
aas
adc
lods
jno
add
or
mov
inc
std
xor
test
movsb
nop
pop
fsts
cmpsb
or
aam
lock
xchg
add
xlat
cmp
mov
jo
xchg
inc
xchg
jo
dec
xchg
dec
ja
out
mov
sbb
jg
jb
lahf
xchg
xor
dec
xor
add
ja
mov
cltd
push
jbe
lds
es
rolb
inc
sub
notb
cmp
int3
lea
dec
sbb
sbb
mov
imul
notb
out
dec
push
sbb
mov
pushf
mov
mov
jmp
add
mov
and
aad
lods
lcall
mov
adcl
ret
loop
jae
add
cld
das
arpl
out
cmp
shll
stc
push
xor
into
es
faddl
es
shll
push
mov
sbb
add
xchg
and
lcall
jo
mov
cmp
pop
insb
mov
in
sbb
dec
xor
xchg
ljmp
pop
les
dec
cmp
cmp
aaa
and
call
cmp
lea
add
lahf
cltd
or
mov
and
jo
arpl
push
xchg
test
roll
inc
mov
ds
shr
lea
mov
push
fwait
mov
add
and
mov
fcomps
sub
arpl
clc
mov
fnstcw
mov
xchg
mov
pushf
pop
test
imul
mov
sub
mov
prefetch
push
addr16
addb
lcall
pop
insl
mov
sbb
jns
xchg
pop
jp
mov
cmp
mov
mov
dec
jge
pop
mov
inc
in
mov
aaa
sti
out
popl
call
mov
fldenv
xor
add
mov
int
mov
stos
xor
imul
push
add
or
ja
popf
dec
mov
loop
dec
les
es
or
dec
inc
adc
cmp
outsb
enter
pop
imul
std
in
dec
ud1
test
push
repnz
cmp
imul
out
dec
sbb
mov
or
sub
or
test
mov
fs
imul
mov
test
shrb
mov
test
cli
add
shr
mov
dec
test
lret
mov
pop
testl
lret
sbb
sbb
or
jle
jo
je
clc
js
dec
mov
cmpsl
xor
gs
xor
mov
mov
in
jnp
lods
mov
pop
outsb
gs
movb
jmp
pop
das
mov
fiaddl
lret
mov
enter
mov
push
pop
imul
cli
sbb
pop
enter
pushw
hlt
push
or
lcall
outsl
mov
pop
test
adc
inc
mov
pop
mov
or
dec
stc
int3
movsl
sbb
add
in
mov
dec
psllq
xchg
fldenv
ret
xchg
jmp
adc
push
cmp
or
cmp
ret
shld
sbb
xchg
xor
faddp
sbb
adc
mov
cmp
xchg
xor
jno
testl
inc
leave
popa
xchg
scas
fldcw
je
mov
movsb
int3
stos
inc
adc
push
sbb
xor
loop
cmp
push
xchg
inc
cs
mov
mov
xchg
xchg
cs
mov
addr16
mov
push
test
jo
mov
popf
push
adc
sbb
adc
sbb
dec
push
stc
pop
mov
fldenv
jne
push
inc
bound
rorl
frstor
push
lods
imul
sub
popa
mov
inc
je
xor
or
call
ljmp
js
cmc
jge
xchg
inc
add
aam
int
sub
cmp
add
cmpsb
mov
andb
sub
ret
push
call
pop
ficompl
push
inc
mov
xchg
loope
in
sub
mov
and
and
and
jae
sbb
cmp
mull
test
cmp
les
popa
pushf
jge
mov
dec
negl
lahf
push
sub
test
test
mov
ds
aad
das
out
push
es
cs
loop
pusha
pop
inc
jmp
pop
sub
cmpsl
in
push
aas
test
arpl
mov
pop
enter
sbb
pop
xor
mov
stos
cld
dec
xor
loop
pop
lods
push
xor
sbb
jns
lea
mov
xchg
fld
decb
add
insb
xlat
jmp
jb
loope
ljmp
lret
jo
sub
into
arpl
xchg
jno
ffreep
outsl
cmp
inc
in
push
adc
loopne
dec
mov
ss
pop
mov
sub
popl
jae
ja
pop
cld
mov
dec
jo
sbb
mov
insb
lret
jl
mov
or
and
xor
rclb
inc
sub
xor
mov
ret
pop
imul
int
jnp
xchg
push
into
cs
popa
and
gs
add
das
xor
test
cmp
mov
mov
add
data16
loop
mov
jo
pop
loop
gs
in
xchg
cs
out
add
adc
sbb
sbb
inc
pop
pop
ret
incl
out
cmp
aaa
or
ljmp
stos
in
cs
in
pop
mov
add
mov
pop
fwait
mov
addl
ret
addr16
sub
daa
push
loopne
shll
test
fcmove
push
je
adc
addb
int3
inc
mov
call
jnp
aad
aaa
jno
sbb
mov
jne
add
sub
pushl
repnz
mov
sbb
out
loopne
ja,pt
pusha
shll
pusha
scas
xchg
pop
jnp
rcll
push
dec
cmp
inc
adc
dec
jo
pop
sub
int3
or
sub
or
add
outsb
xlat
mov
xlat
sub
mov
rol
xor
dec
outsl
fsub
scas
pop
xor
or
fidivs
mov
pop
pshufw
pop
mov
push
mov
sbb
adc
or
adc
test
add
inc
stos
cld
jno
scas
jle
adc
ret
dec
xor
test
push
mov
clc
icebp
daa
fidivrl
les
dec
and
adc
or
mov
cmp
mov
pusha
cmp
pop
faddl
jmp
or
add
push
push
mov
lea
call
jno
lret
mov
arpl
mov
test
out
cmp
jae
dec
push
xchg
push
cld
test
sbb
in
push
add
loop
sub
mov
add
aad
stos
das
mov
add
xor
rolb
mov
inc
jno
fcmovu
enter
cmp
mov
dec
adc
pop
cmp
push
cmp
or
out
loope
sbb
loope
movsb
in
push
in
ss
cmp
jmp
xlat
cld
addr16
fwait
sub
push
jge
and
pop
fadds
out
fldl
inc
gs
mov
in
pop
push
adcl
cld
out
test
xchg
movsb
or
es
into
lds
bound
aam
inc
pop
xchg
sbb
aam
sbb
sbb
data16
stc
mov
and
outsb
or
ds
add
jge
testb
ds
xor
aas
mov
inc
icebp
imul
aas
jae
test
sbb
pop
cmc
mov
push
or
and
ret
inc
test
xlat
dec
inc
neg
mov
jbe
sub
test
push
into
je
mov
cmp
aas
push
fistl
pusha
lret
shlb
in
out
add
testl
or
mov
mov
and
adc
and
xchg
xchg
dec
push
cmc
mov
test
cs
add
jne
aaa
addr16
negl
xchg
stos
cmp
pop
mov
jge
imul
nop
addr16
mov
mov
cmp
push
testb
std
mov
pop
and
cltd
popf
jecxz
popf
dec
xor
pop
jl
int3
cmp
pop
add
cmp
jle
mov
xchg
fs
sub
repz
mov
dec
int3
out
and
fsubr
mov
push
cmpsb
pop
xchg
mov
stc
psraw
mov
dec
jae
and
cmpsb
push
sbb
mov
mov
add
jp
mov
add
test
lock
push
mov
imul
cmp
test
fsubl
push
pop
push
lods
sub
mov
inc
dec
mov
in
das
cmc
aas
mov
ds
daa
xacquire
lds
xchg
push
xorl
sub
fs
mov
sti
xchg
dec
xor
movsb
movsb
add
gs
lods
mov
adc
pop
imul
inc
data16
cmpsl
mov
jmp
add
cld
hlt
push
add
sbb
stos
mov
cmp
jg
popf
mov
dec
cmp
dec
adc
push
xor
jp
adc
out
pop
lods
cmc
inc
cmp
lret
jns
push
leave
sub
addb
lahf
mov
adc
lcall
cmovb
stos
pop
outsb
xor
mov
aaa
dec
jecxz
loope
ja
jae
lahf
pushf
mov
popa
inc
insl
es
ds
sub
jo
loopne
sbb
jl
mov
testb
sahf
jp
pop
push
mov
inc
sub
aad
lcall
outsl
xor
mov
sbb
enter
ljmp
dec
pop
out
pop
ljmp
dec
ljmp
add
xorb
xchg
push
push
stos
scas
xchg
jne
push
insb
xor
sub
test
shl
hlt
mov
adc
add
inc
orl
gs
std
push
stos
lods
rcr
out
jnp
push
xchg
inc
fisubs
cld
mov
dec
adc
adc
or
int
fld
in
jmp
mov
aad
xor
in
dec
pop
clc
inc
jno
inc
ljmp
rclb
push
inc
jno
lret
xor
push
cmpsb
cmp
mov
fdivs
or
inc
out
add
push
loop
cmp
repz
sbb
jno
or
ret
loope
lea
data16
idivb
cmp
rolb
into
xchg
mov
xor
push
and
dec
shll
inc
int3
and
jl
jne
sub
inc
mov
popf
pushf
ja
sbb
dec
add
or
iret
mov
sbb
lds
loope
mov
push
daa
sub
test
adc
or
inc
rcr
roll
mov
pop
and
sub
mov
clc
scas
xchg
mov
out
loope
mov
jno
stos
mov
aas
xchg
and
ret
xchg
lock
popa
sbb
or
adc
fstpt
out
jecxz
inc
jno
pop
fcmovnu
mov
add
mov
in
scas
test
pop
inc
pop
cli
fs
xor
aam
push
jl
in
fbstp
push
pop
insl
lahf
jns
push
movl
sbb
xchg
cmp
cmp
jae
dec
adc
inc
dec
lret
pop
je
inc
add
subl
loope
outsb
sbb
sub
sti
mov
xchg
in
push
mov
nop
test
call
or
push
xchg
mov
insl
icebp
mov
xlat
jl
sbb
mov
sar
int3
mov
ljmp
mov
cmpsb
popf
pop
mov
test
test
pushl
inc
imul
mov
sub
add
in
cmpsb
xor
leave
jecxz
mov
aad
in
mov
and
or
sbb
nop
inc
pop
jbe
mov
es
cltd
std
jmp
neg
sti
push
movsl
push
inc
xor
mov
jo
pcmpgtw
in
mov
inc
insl
pop
fidivl
sub
cmp
scas
sahf
outsb
adc
mov
lods
aam
sti
push
test
les
rolb
sbb
shrl
mov
inc
xor
repnz
insl
mov
pusha
cld
or
mov
inc
in
fidivs
mov
dec
inc
add
cwtl
fiadds
xchg
repz
sub
testb
stc
les
fcomip
or
pop
push
and
mov
cmp
dec
aas
mov
adc
fsubrp
mov
cmpsl
xchg
fists
addr16
or
sarl
sbb
popa
and
and
jno
popf
cmp
pop
sub
xor
rcr
xor
and
xchg
mov
and
ja
scas
mov
divl
leave
addl
jecxz
jno
not
sbb
test
mov
fs
and
cli
fldcw
sub
mov
sub
subl
imul
sub
test
jbe
pop
sub
xchg
lahf
popa
cs
xchg
lods
jg
aas
pop
jg
xlat
and
in
sti
sub
fists
addb
dec
or
in
inc
sub
clc
cmp
pop
xor
dec
mov
jge
sub
sti
call
mov
icebp
cmp
mov
pushf
adc
mov
cs
jp
inc
data16
pop
dec
dec
test
arpl
mov
add
gs
xor
movl
push
pushf
xor
dec
adc
bnd
or
jmp
ret
insl
mov
mov
loop
fs
pop
xchg
mov
xchg
movsb
adc
xchg
orl
rcl
mov
movsb
xor
fwait
xchg
jne
sub
push
fisubs
mov
or
xchg
adc
xor
jmp
pop
lea
pop
ja
sub
shr
add
mov
xor
movsb
sub
xor
jns
ret
xor
cmp
sub
pop
xchg
cmp
mov
into
outsb
cmpsb
rcrl
lods
les
pop
or
daa
pop
stos
pop
test
loope
nop
cmpsl
xchg
andps
xor
dec
add
cmp
lcall
sbb
sbb
sbbl
stos
test
jae
daa
icebp
in
sbb
filds
push
cwtl
iret
sbb
out
insl
mov
lret
outsb
out
ss
dec
xchg
pop
pop
pop
add
xor
neg
xchg
jno
jge
ss
mov
cmpsl
xchg
mov
negl
in
push
test
sarb
mov
ljmp
xor
mov
mov
cwtl
lcall
xchg
ljmp
std
sub
pop
inc
cmp
orb
test
cmp
aaa
imul
mov
mov
inc
pop
lds
lods
mov
push
inc
ret
push
fildl
out
mov
add
fimull
sbb
je
ss
cmpsb
les
push
pop
les
lea
cltd
arpl
push
enter
cltd
scas
enter
dec
mov
imul
mov
mov
cmpsl
insb
imul
adcb
dec
out
or
mov
fmul
inc
ds
inc
shr
cmpsb
arpl
cmpsb
inc
pop
lods
lock
pusha
repnz
mov
in
int3
addr16
fwait
es
jg
xchg
sub
bound
mov
inc
mov
mov
pop
mov
cwtl
add
mov
adc
sahf
ss
mov
push
insl
and
cld
pop
lahf
js
xlat
aaa
and
icebp
xor
andl
test
roll
dec
ss
call
push
ret
sub
bound
stc
cmp
xlat
inc
shrl
fbld
jbe
push
clc
incl
in
cmp
lods
push
ret
push
mov
xlat
pop
jle
push
iret
pop
xor
xchg
out
imul
mov
popf
xchg
jo
pop
sub
inc
leave
subl
pop
lods
mov
es
cwtl
or
sub
cmp
ret
or
sbb
cld
or
repz
pop
dec
cmp
stc
stos
xchg
xlat
je
cmp
pop
adc
fdivrl
std
adc
cld
icebp
jns
shll
notl
pop
pop
cltd
inc
or
mov
mov
mov
mov
cmp
leave
mov
mov
adc
sbb
pop
mov
out
jnp
nop
mov
lods
cld
in
sub
stos
inc
aaa
sbb
add
and
lods
cmpb
aam
mov
xchg
sub
adc
pop
mov
arpl
lcall
sbb
cmp
in
mov
dec
xchg
test
iret
add
sbb
je
mov
dec
out
pop
ja
or
mov
int
pop
rcrb
sub
inc
push
aas
cltd
or
inc
adc
push
mov
adc
xchg
dec
sub
pop
daa
rcr
cmp
sbb
mov
push
ja
jno
and
xor
dec
xor
enter
movsl
or
inc
jecxz
mov
jle
jge
aas
mov
cli
sbb
rcrb
int
pop
dec
sub
mov
add
adc
pop
popa
jle
dec
mov
push
outsb
push
in
or
fsubrl
cmpsb
outsl
test
lock
push
test
imull
das
je
mov
movsl
jmp
in
sahf
jp
ss
lods
dec
mov
loope
add
je
push
stos
movl
cmp
mov
es
les
add
pop
push
movsb
jae
scas
push
inc
push
xchg
pushf
lret
pop
ljmp
cs
push
insb
xchg
test
jnp
cmpsb
iret
mov
aaa
pop
pushf
lret
popa
arpl
gs
sbb
adc
adc
ljmp
es
lods
int3
push
arpl
addb
adc
fneni(8087
cs
outsl
pop
inc
gs
adc
inc
or
mov
add
sbb
out
outsl
mov
adc
cmpsb
or
and
lea
push
and
clc
orb
xchg
insl
imul
jne
arpl
or
mov
and
sub
out
leave
aas
mov
dec
dec
in
sub
sub
mov
loope
pop
adc
in
fistpl
or
je
orl
push
mov
insb
call
shl
test
int3
xor
cld
aam
or
scas
adc
cmc
jmp
fwait
ja
dec
nopl
lods
gs
jg
xor
and
nop
mov
or
lds
daa
test
pop
pop
pop
aaa
pop
movsb
sahf
mov
aas
mov
loope
jl
cmpsl
adc
cmp
xor
adc
mov
push
xlat
pop
xchg
push
cmpsl
adc
pop
pop
into
call
fidivrl
cmp
dec
cmc
jo
sbb
mov
pusha
out
inc
inc
aaa
pop
mov
add
dec
jl
outsl
jg
sbb
push
jge
mov
mov
cmp
fwait
sbb
jle
xorl
ret
xchg
xor
pusha
cmc
notb
push
rclb
in
js
xchg
sbb
push
xchg
rcrb
jp
dec
and
push
out
shll
xchg
and
sahf
push
scas
and
jge
hlt
mov
or
outsl
shll
sbb
pop
sub
push
mov
movsl
aaa
lret
cmp
paddusw
scas
sbb
add
add
xchg
xchg
mov
mov
pop
xor
xorb
cli
popa
daa
xchg
dec
stos
inc
sarl
push
sbb
popa
scas
js
push
shll
cli
incb
out
aaa
test
cmp
arpl
fsubs
adc
push
hlt
inc
arpl
cmp
test
imul
enter
pop
or
iret
mov
daa
cmpl
sti
jne
jne
or
scas
cmp
add
mov
ljmp
out
scas
arpl
pusha
mov
pop
outsb
push
dec
fisubl
mov
out
pop
xor
sub
dec
das
adcb
mov
push
leave
xor
mov
adc
cmc
cwtl
mov
xchg
sbb
and
pushf
lods
mov
stos
movswl
rorl
mov
outsb
pop
das
sub
test
xor
adc
movsl
push
adc
test
andb
cmc
sarl
ss
sbb
pop
inc
dec
cmpsb
lahf
pop
jl
xchg
loopne
fldenv
jecxz
dec
jo
mov
inc
aad
fnstsw
in
lds
sbb
sbb
repnz
adc
mov
xchg
xor
xor
ja
or
rolb
mov
adc
or
test
clc
push
test
jle
cld
arpl
add
or
outsb
jle
cmp
xor
clc
push
lcall
cmp
jmp
outsb
aad
rorb
fsub
out
sbb
xchg
mov
mov
ds
dec
adc
rorb
xchg
mov
stos
int3
add
jmp
sub
shlb
mov
inc
xchg
sbb
fsts
mov
jl
inc
adc
fsubr
shr
sbb
in
int3
cwtl
fcmovb
inc
sbb
mov
add
xor
aaa
dec
or
cmp
push
rolb
ljmp
jo
and
dec
xor
aaa
fnop
js
das
adc
pop
jg
add
lock
pop
out
mov
mov
inc
cmp
dec
xor
int
fcompl
mov
lea
icebp
les
stc
imul
xchg
xor
dec
cltd
data16
pop
cli
jg
inc
repnz
lods
mov
movsb
repz
orb
cmp
cs
cmp
jge
and
mov
cmpsb
push
push
pusha
xor
movsb
adc
lea
cmpsb
mov
cmp
sub
les
movd
pusha
add
loope
adc
stc
imul
fsubl
mov
test
jns,pt
repnz
in
mov
ljmp
xchg
in
or
inc
push
jns
ja
push
ljmp
or
cmp
stos
push
adc
popa
fldcw
popa
mov
cmp
mov
push
push
movsl
ret
arpl
lahf
das
rcll
popf
adc
in
sub
cmp
mov
push
adc
aad
pop
mov
sub
jmp
lahf
gs
mov
popf
cmpsb
jl
lods
cmp
pop
sub
pop
add
loope
add
test
ja
nop
mov
stc
negb
jg
jmp
sbb
push
jns
push
jne
dec
push
mov
outsl
pop
mov
repz
cmpb
pushl
or
stos
pop
xor
adc
icebp
sarl
imul
loop
sub
mov
cmpsl
scas
lods
or
call
mov
jno
outsl
psraw
or
adc
cmp
xchg
or
dec
movsb
and
scas
imul
cmp
add
loop
lret
ret
cwtl
jecxz
es
aad
and
xchg
push
add
stc
pop
pushf
ret
mov
push
mov
sbb
sahf
notl
int
pusha
mov
rcll
outsl
xor
sub
fucomp
xchg
lea
and
outsb
repz
and
pop
das
xor
ljmp
cltd
or
and
nop
in
push
push
movsl
icebp
mov
push
add
lock
xor
add
mov
addr16
push
push
sarl
xchg
jle
hlt
in
or
jb
cmpsl
out
sahf
das
jge
or
fwait
test
fs
in
movl
lods
pushf
mov
ret
pusha
sub
cmp
mov
jae
sbb
cmp
subb
inc
int
icebp
jno
mov
pop
mov
bnd
loope
mov
bound
xor
aas
push
push
pop
mov
rcll
outsl
mov
dec
stos
test
scas
pop
lock
mov
lret
out
cmp
cvtps2pd
mov
or
push
or
iret
data16
push
mov
aam
lret
das
lret
cmp
ret
aas
xchg
lock
pop
sub
sub
mov
popf
mov
dec
sub
and
push
stos
mov
in
lods
ret
lds
jo
pop
xchg
xchg
mov
clc
in
inc
push
jbe
xor
pop
pop
ret
mov
jnp
push
pop
mov
xor
lret
mov
out
jae
and
addb
cltd
nop
in
cltd
mov
fcoms
loopne
and
jbe
jo
push
imul
and
es
loope
in
cmp
add
sub
mov
jle
sbb
fs
push
out
ret
mov
add
sti
mov
das
fmuls
sbb
imul
int3
sub
cvtps2pi
mov
lret
into
repnz
mov
cmp
mov
xor
aas
lret
xor
daa
int
inc
mov
scas
rorb
lret
jns
xchg
mov
and
pop
mov
jl
inc
out
push
stos
pop
std
pop
insl
sbb
xor
orl
arpl
push
xor
jl
push
mov
dec
push
imul
jno
mov
stc
cmp
push
fs
adc
and
jmp
das
cmp
rorb
xor
ret
cwtl
je
aaa
and
ja
cmp
mov
inc
sub
ret
adc
add
push
mov
xor
repnz
mov
or
hlt
pop
pushf
jnp
adc
movsb
mov
xor
stos
ljmp
dec
mov
push
imul
sbb
xchg
insb
cwtl
int
dec
dec
and
pop
push
mov
and
pop
aad
push
fs
xchg
movsl
leave
mov
cmp
add
out
dec
inc
jns
adc
roll
out
add
daa
mov
lds
xor
push
jge
jnp
dec
pop
jo
cwtl
incb
add
push
loop
ss
xor
mov
jge
out
stos
cli
mov
xchg
test
leave
pop
lods
dec
int3
push
adc
mov
cwtl
xchg
arpl
arpl
les
hlt
inc
orl
push
mov
je
mov
and
hlt
xchg
data16
mov
ss
cmc
pop
inc
gs
stos
loope
lahf
insl
aas
lret
cld
enter
repz
mov
cltd
testb
fcomi
movsb
lcall
xchg
cmp
mull
pop
sub
fdiv
adc
xchg
dec
mov
mov
test
js
shrl
subl
pop
movsb
mov
pop
sub
imul
sub
sti
xor
cltd
jo
call
xor
xchg
and
fnstsw
sbb
pop
loop
clc
ret
pop
dec
loope
xchg
pushf
sbb
icebp
push
or
and
leave
sub
jecxz
loope
dec
inc
xor
fs
test
add
mov
aad
stos
cmp
dec
jge
push
dec
mov
int3
popf
aam
data16
in
lcall
pop
push
dec
add
popf
or
jle
rorl
aas
fldenv
movb
or
lods
ret
lcall
fbstp
push
dec
out
std
daa
sbb
rorb
insb
dec
xchg
cwtl
sbb
jg
mov
pop
add
xor
jae
leave
inc
loopne
aas
push
mov
dec
out
cli
icebp
xor
mov
push
fdivrs
dec
xchg
pop
dec
adc
clc
xchg
aas
sahf
mov
mov
pop
and
or
mov
in
ss
test
sbb
aam
outsb
aam
movsb
lcall
mov
stos
jne
adc
mov
inc
nop
sbb
cltd
dec
pushf
roll
popa
lock
inc
sbb
fincstp
scas
sub
push
lcall
mov
fidivrl
pushf
pop
lret
stos
xchg
mov
hlt
in
xchg
mov
repnz
mov
cli
leave
std
sahf
cmp
adc
pusha
ljmp
rol
push
pop
jl
or
cmp
lahf
les
ss
outsb
imul
mov
inc
ret
and
and
out
dec
add
and
or
fildll
pusha
sbb
jge
jg
testb
icebp
sbbl
int
mov
xorl
mov
mov
fidivs
adc
mov
push
fisubs
mov
out
dec
out
jecxz
ja
lahf
mov
hlt
aas
cmpsb
add
into
pop
jmp
jle
ret
ja
cmp
mov
ljmp
sbb
outsl
and
cmp
insb
and
movsl
pop
mov
mov
jne
fidivrs
ds
xchg
nop
inc
movsb
xor
sub
push
jo
cmc
inc
cmp
or
int3
cmpl
xchg
mov
fcomip
cmp
jge
aaa
andl
jne
sbbb
imul
shl
ds
pop
jae
inc
mov
rolb
cmpsl
cld
xchg
and
jge
xchg
loopne
mov
sub
and
shlb
fs
dec
repnz
dec
mov
jl
leave
movsl
popf
inc
mov
jnp
cmc
xchg
fstpl
and
pop
std
mov
idiv
mov
pop
and
mov
mov
push
jecxz
mov
push
insb
sbb
adc
aad
and
adc
push
mov
push
cwtl
jns
iret
pop
out
push
pop
or
leave
repz
mov
mov
fcompl
add
mov
idiv
push
mov
mov
punpckldq
ds
cmp
mov
push
jae
es
jo
sub
xor
dec
fs
mov
les
or
push
pop
fstl
push
insl
sub
daa
xlat
jl
pop
pop
dec
loopne
mov
pop
inc
pop
push
aam
inc
rorb
push
mov
scas
imull
dec
jmp
mov
imul
sbb
pop
push
pusha
int3
int
imul
ror
sub
ret
xor
mov
adc
fistpll
cltd
fwait
add
sbb
add
push
aaa
lock
call
pusha
stos
shl
je
ret
sbb
pop
test
jecxz
pop
add
and
mov
inc
stos
xchg
fbld
push
dec
pop
cltd
add
int3
call
jns
int
inc
and
test
and
pop
add
sub
fucom
cmc
sbb
fs
std
xor
fildl
sub
je
add
fbstp
or
cmp
fildl
adc
mov
imul
dec
inc
dec
mov
ljmp
leave
pop
test
push
jmp
in
fidivrl
or
mov
lock
or
jns
mov
ja
mov
inc
cmp
rcr
xchg
cmp
test
test
ds
enter
dec
je
cli
pop
or
fadds
cmp
daa
xor
pop
lret
add
push
lods
jae
ja
cmc
sahf
aam
mov
hlt
lods
es
sub
adc
ss
lahf
lret
sbb
xor
es
dec
fildll
jge
outsl
cmp
jmp
in
ja
pop
outsb
insb
push
sahf
leave
popf
adcb
cmp
cmp
test
fisubl
and
filds
mov
lahf
repz
movsl
insl
out
ds
fs
daa
sub
insl
add
pop
xor
push
stos
xor
lods
mov
data16
imull
mov
xchg
into
pop
mov
push
mov
insb
int
ret
pushf
es
imul
and
adc
push
out
sahf
repnz
jg
inc
jge
out
cmp
mov
or
cmpb
out
test
aas
negb
lea
pop
scas
test
in
loop
out
xchg
aad
imul
push
fstl
jge
bound
loopne
scas
pop
scas
fbstp
cltd
mov
adc
mov
mov
mov
mov
push
fcoms
cltd
cwtl
nop
add
or
fistpl
add
add
cmp
imul
sahf
stos
js
loopne
and
cmovbe
xor
inc
cmc
mov
pop
jp
or
test
xlat
popf
and
das
mov
call
pushf
and
fistl
mov
pusha
push
std
hlt
lods
imul
out
mov
mov
aam
stos
out
mov
inc
inc
xchg
mov
push
in
incb
into
jno
sti
pop
rolb
dec
adc
lea
sahf
fdivrs
dec
adc
inc
mov
add
add
addb
or
xchg
stos
mov
pop
ja
insl
xor
jg
cli
out
insl
cmc
or
ss
je
lea
addr16
sub
insl
cmpsl
mov
push
movsb
das
aad
adc
lcall
dec
jl
mov
flds
and
mov
std
xchg
mov
cwtl
jb
fsubs
fcompl
pop
test
adc
popf
push
out
lret
jo
push
jp
and
ret
sbb
ret
es
push
sbb
mov
idivb
sbb
cwtl
enter
xor
sub
and
inc
les
jge
lea
dec
jbe
mov
cwtl
sti
loope
cltd
cwtl
out
lods
sbbl
add
jnp
mov
imul
xchg
rep
das
lret
mov
aaa
enter
int3
cld
sbb
jl
pop
push
enter
shrb
mov
mov
adc
sarl
loopne
pop
mov
dec
mov
outsb
pop
push
shl
mov
push
ret
orb
fstpt
jo
ficomps
bound
adc
xchg
cmp
xor
and
dec
xchg
cmpsl
add
cld
mov
jns
pop
fwait
orl
jmp
fmuls
cmp
pop
sbb
mov
jmp
popf
push
cmc
pop
jmp
and
mov
mov
gs
addb
mov
xor
push
lods
mov
pop
or
push
or
notl
sbb
dec
aas
out
and
out
xchg
xchg
into
add
ss
dec
push
fdecstp
mov
pop
push
jg
mov
xor
lret
dec
jnp
out
xor
out
cmp
idivb
gs
fs
into
cmc
dec
sbb
call
out
les
xchg
rclb
xchg
in
jmp
push
std
inc
fdivrs
scas
mov
mov
into
push
adc
pop
incb
lods
daa
cs
in
jg
dec
pusha
popa
call
xchg
mov
dec
lds
lret
pop
adc
leave
mov
imul
add
adc
ds
in
mov
inc
and
xchg
xchg
pop
sub
jbe
cmp
test
divb
ret
mov
lahf
mov
jl
sub
inc
fcmovbe
inc
push
mov
cmp
pop
fiadds
and
or
push
xor
mov
inc
cmp
sub
fisubs
mov
and
lock
stc
xchg
pop
fadd
push
add
stc
sbb
sti
fwait
rol
mov
movsb
xor
outsb
cmp
fbld
in
sbb
jl
pop
inc
dec
sbb
adc
aam
xchg
jne
insb
sub
push
xchg
fdivrs
rorl
shrb
inc
pop
mov
loope
push
push
jg
shrb
cmp
xor
mov
mov
and
pop
fdivrp
out
sub
mov
or
out
arpl
xor
xchg
jb
and
xor
out
imul
xor
mov
out
jb
sbb
imull
push
cmc
add
mov
das
sub
xchg
xor
xor
push
loop
dec
int
pop
sbb
sbb
push
add
sahf
xchg
mov
sub
ret
mov
stc
push
sub
pusha
jp
inc
aad
push
fdivr
jg
fisubrs
stc
or
cmp
or
mov
xor
jne
ficomps
push
add
repnz
sub
repnz
mov
stc
inc
pusha
in
cmp
std
enter
pop
dec
inc
pop
dec
into
aas
push
maxps
push
sbb
lock
mov
add
fs
jbe
ret
adc
push
pop
xchg
fildll
rcrb
ljmp
popa
fisubrl
and
insl
hlt
movsb
in
mov
dec
movzbl
push
push
out
adc
cmp
pop
xor
subb
imull
movsb
pop
sbb
mov
pop
pop
jmp
pop
scas
or
pop
xchg
aas
jmp
mov
inc
mov
shlb
lea
in
mov
push
movsb
or
inc
mov
fsubs
xor
std
sub
mov
movsl
lret
inc
in
cwtl
out
jmp
popa
mov
mov
push
or
lods
sub
outsb
loope
add
leave
push
lea
or
cmpsb
into
inc
je
fidivl
cmc
xlat
push
and
ret
fcmovnb
mov
and
sub
rorb
xchg
aad
std
and
sbb
sub
scas
jne
pop
dec
icebp
mov
dec
or
lret
mov
mov
pop
cmp
mov
mov
cs
call
aad
fwait
mov
std
insb
jg
xlat
in
fs
or
xchg
cmpsb
add
out
in
sbb
add
in
mov
aaa
lahf
sbb
lret
mov
movsb
dec
or
jmp
iret
in
sbb
mov
cmpsb
dec
scas
nop
adc
mov
je
lahf
lods
xchg
ss
cld
cmc
fcoms
lea
push
scas
insb
sti
ds
mov
push
inc
cmp
insb
push
mov
cmpsb
test
rorl
mov
cs
xor
ja
stos
dec
jnp
out
shr
push
sbb
mov
dec
sub
cmp
stc
cmc
repnz
jb
out
arpl
imul
ljmp
xchg
pop
push
xor
mov
movsl
filds
pop
cld
or
mov
xchg
lea
arpl
jbe
aaa
jg
add
mov
add
cmp
cli
mulb
and
rclb
lods
repnz
ret
ror
and
mov
jbe
mov
aam
pop
xchg
mov
push
jecxz
sbb
xchg
rcrb
adc
cli
fs
mov
jl
in
outsb
jns
sbb
push
pop
mov
jb
add
ret
xor
adc
dec
lock
jns
stos
mov
loopne
ljmp
jne
dec
mov
pusha
xor
mov
dec
fnstsw
xchg
mov
sbb
dec
imul
lahf
xor
fcmovnu
out
xchg
mov
mov
stos
inc
cmp
mov
mov
andb
repz
orb
hlt
pop
mov
in
push
stos
imul
adc
xchg
mov
fisubrl
sbb
cmc
ja
enter
jns
xor
dec
cmp
jl
ds
int3
inc
or
pop
dec
sbb
cltd
xor
sbb
xchg
or
ds
fsubs
push
repz
xor
add
fnstcw
pop
out
fs
mov
aaa
stc
sub
mov
mov
mov
sar
pop
sbbb
xor
mov
cld
or
addr16
rolb
out
out
mov
stc
sub
pop
pop
bound
jnp
add
or
adc
cmp
ret
aam
rorb
ret
fsts
lret
pop
cld
loopne
jmp
test
notb
xchg
or
insb
inc
add
icebp
lods
sbb
sub
rolb
sub
shlb
jg
mov
aam
fcomp
and
pop
mov
push
dec
xlat
jae
jb
jp
nop
or
dec
hlt
inc
jns
stos
or
mov
and
andl
out
in
stos
pop
cmp
imul
mov
lock
sub
std
test
push
fidivrs
lds
sub
sub
mov
mov
mov
loopne,pt
icebp
daa
adc
psubb
mov
sub
aas
jo
push
sub
mov
es
jmp
cmpsb
lret
imul
test
cld
push
les
sarl
cmpsl
lods
push
lea
pop
mov
xor
xchg
fcomip
test
push
aaa
hlt
jg
dec
mov
decb
and
cwtl
je
fs
lds
inc
adc
add
mov
push
add
sahf
outsl
dec
jp
bound
lahf
adc
jno
movsl
in
jb
inc
push
fdivl
sbb
cmp
jnp
xchg
cmp
fstps
lea
nop
inc
or
sbb
mov
xor
sarb
xor
mov
rcr
sub
stos
cltd
jnp
dec
mov
loopne
mov
pusha
push
pop
mov
push
cmp
sahf
sbb
mov
xchg
iret
inc
or
cmp
mov
outsl
sbb
xor
arpl
add
jo
lods
cmp
push
inc
sub
push
mov
jae
mov
mov
int3
outsb
sub
inc
arpl
push
xor
pop
stos
jbe
loop
push
sub
test
pop
je
stc
scas
ds
test
repnz
add
push
mov
ds
cltd
pop
pop
out
mov
sahf
mov
xor
cmp
sbb
mov
int
out
lret
push
pop
xchg
shrl
jb
aas
ret
call
decb
scas
sar
and
sarb
or
popf
jnp
mov
imul
jno
mov
gs
ficompl
rclb
sbb
xor
insl
xchg
loopne
mov
lds
inc
and
pop
cmpsl
fistl
cmpl
push
pop
and
sub
outsb
mov
and
adc
in
push
lahf
popf
mov
cmp
shl
das
cs
cmpsl
ss
pusha
addr16
inc
dec
mov
push
sahf
xchg
call
out
sahf
dec
add
jno
inc
pop
movsl
jg
sbbl
xchg
adc
and
or
mov
in
jmp
push
fmuls
push
lret
pop
xor
push
int3
pop
dec
test
xchg
lcall
mov
push
and
cs
cmp
sbb
leave
jns
adc
mov
dec
cltd
lret
add
jge
ret
lea
mov
lret
cmp
jp
mov
rcrl
mov
cmpsl
jge
sbb
das
and
push
jo
iret
dec
dec
pop
sub
sarb
cmp
sub
loop
or
fdivp
mov
cmp
cmp
cs
push
and
mov
adc
shrb
xchg
test
mov
mov
xchg
mov
sbb
repz
fs
cmp
push
scas
cmp
icebp
inc
test
inc
mov
pop
push
mov
xchg
adc
fs
dec
xor
xor
mov
and
dec
int
sbb
push
cmc
sub
mov
lret
sbb
push
out
lret
push
lahf
pushf
sarb
dec
int
or
xor
shlb
jne
jecxz
out
fistpl
sbb
adc
jae
cmc
sbb
jecxz
push
and
fdivs
xorl
xchg
jmp
add
aaa
pop
add
in
xchg
enter
int3
scas
das
insl
sbb
sub
mov
sub
add
jp
sub
xor
push
jle
xlat
adc
mov
lahf
lret
jno
out
dec
pushf
dec
mov
sub
push
call
aam
add
out
imul
popf
popf
push
sbb
pop
test
jl
bound
test
bound
es
pop
scas
jo
adc
lcall
add
jnp
mov
or
push
ja
sbbb
out
pusha
and
push
jg
lds
lret
mov
inc
jo
jne
aaa
leave
lods
test
xchg
pop
add
fiaddl
lcall
push
xor
mov
imul
dec
lahf
pusha
pop
mov
aad
in
cmpsb
jl
aad
dec
fsubl
jmp
mov
jno
cmp
pop
push
jb
and
add
ret
adc
push
adc
dec
add
dec
add
and
sbb
adc
xor
or
xchg
jb
and
or
push
push
mov
sub
xchg
sbb
sbb
push
xchg
mov
pusha
cmp
fwait
leave
xchg
cmpb
add
jp
aad
or
stc
mov
mov
lods
mov
mov
daa
sbb
cmp
cmp
jnp
dec
or
push
in
arpl
adc
mov
ja
add
or
adc
inc
xor
popf
or
xchg
mov
xchg
push
dec
jl
stos
mov
sbb
push
push
movsb
add
mov
mov
sahf
lods
inc
push
sbb
hlt
inc
enter
jbe
sub
xchg
xchg
mov
jae
xor
mov
jmp
push
movsb
mov
loope
sarb
pop
fnstenv
or
adc
imul
mov
pop
cmp
add
fstpl
nop
xor
cmp
insl
in
sbb
adc
ficompl
fwait
pop
stos
cmp
imul
test
fcoms
sbb
fdivr
or
loop
test
jge
mov
or
cmc
push
xchg
add
ljmp
jecxz
mov
xor
cmp
and
ficompl
cwtl
add
cs
mov
add
sbb
lret
and
aas
ja
add
sahf
xor
dec
push
cmp
and
in
jno
icebp
stos
cmpb
ror
sbb
pop
jae
test
xor
scas
lods
jecxz
loopne
js
aam
jmp
cltd
sahf
mov
hlt
xchg
in
xchg
xor
insl
push
movsb
jno
enter
dec
rcrl
adc
lea
pop
pop
mov
faddl
rcrl
lds
repz
lret
dec
sbb
ret
fwait
movsl
sbb
ret
aad
pop
dec
rcrl
xchg
loopne,pt
jmp
jns
enter
jno
outsb
cmpsl
test
xor
fs
push
inc
jbe
sub
scas
fucomip
cmp
cmpsb
lcall
pop
movsb
jne
jg
mov
jnp
xchg
loop
fildll
fistps
imul
push
loop
mov
cmp
cmp
dec
das
int3
mov
jo
cld
pop
pusha
add
int3
int3
xor
fsts
call
out
ficomps
cmp
lods
sub
les
push
lock
insl
scas
ja
sub
xchg
pop
mov
iret
jne
iret
sbb
adcb
and
ds
fists
sbb
lock
iret
add
or
xor
adc
xor
popa
push
push
scas
sub
ljmp
cld
out
push
js
mov
or
mov
push
shrl
push
xchg
jg
inc
push
test
psubw
cmp
dec
pop
dec
xchg
mov
mov
lahf
jbe,pt
mov
pop
jp
das
fcompl
sub
lcallw
pushf
xchg
sbb
cmpsl
ret
and
or
xchg
pop
mov
int3
nop
not
call
push
mov
mov
or
test
rcll
ljmp
adc
lahf
jl
test
test
mov
sub
xlat
stc
mov
sahf
or
dec
mov
jmp
ja
aam
test
adc
and
dec
and
sti
stos
lcall
pop
adc
mov
scas
xchg
sbb
test
stos
push
enter
cmp
push
repz
jae
xor
ret
jmp
testl
mov
movsb
inc
xchg
icebp
mov
icebp
sub
sbb
lahf
mov
add
ss
dec
mov
push
cli
add
imull
push
mov
and
pop
add
sbb
push
mov
ret
push
xchg
pop
std
fs
push
inc
mov
lock
cmp
jge
aam
lret
jns
and
ja
xlat
imull
cwtl
cmp
fucomp
ds
cmpsl
fdivl
enter
hlt
lods
xchg
sbb
cmp
loopne
mov
xor
push
cltd
xchg
push
popf
lds
jge
addr16
inc
ss
ljmp
cs
movsb
addr16
xor
out
cmp
lds
cltd
sbb
in
dec
cmc
push
jne
xchg
add
mov
jecxz
add
or
add
test
insb
mov
or
mov
mov
aas
mov
jg
lods
pop
jb
mov
popa
rorb
jnp
sub
mov
fwait
pop
mov
lret
sub
incl
mov
dec
int
shll
dec
xchg
repnz
cmp
add
push
int3
push
jno
enter
cwtl
inc
testb
pop
or
test
jb
jne
pop
shlb
test
cmpsl
in
divl
jg
mov
jecxz
push
mov
outsb
mov
ret
cmc
cwtl
test
cmp
cmp
int3
cmp
imul
sti
insb
testl
aad
fwait
and
js
or
clc
call
lea
pop
mov
or
push
inc
pop
je
add
xchg
and
xchg
in
or
cli
pop
in
int
stos
xorl
js
mov
sub
and
shll
or
ss
sub
cmovnp
fadds
jg
cmp
bound
mov
faddl
sbb
or
jns
dec
ret
inc
hlt
mov
ret
fs
or
nop
pop
dec
fcomp
jno
adc
jae
fs
fldenv
xlat
and
and
mov
jnp
outsl
push
fldcw
mov
stc
jg
in
in
mov
inc
nop
leave
and
fimuls
xlat
lods
das
pop
or
outsb
xchg
push
sti
data16
mov
stc
jnp
mov
aad
cltd
mov
mov
inc
mov
test
decb
shlb
sbb
jmp
push
inc
rcl
scas
lret
mov
push
jge
jb
or
stos
mov
xor
das
mov
mov
iret
fs
out
push
fildl
iret
cmp
push
fldcw
add
inc
mov
fnstenv
cmp
mov
xchg
loopne
mov
repz
movsl
jmp
adc
test
aas
xor
jmp
or
data16
add
jle
es
jge
cld
mov
loop
pop
adc
icebp
mov
sbb
jge
int3
shr
jns
jecxz
ds
aad
push
and
xlat
adc
mov
dec
shll
adc
in
inc
int
pop
jg
mov
sbb
mov
pop
stos
jnp
xchg
std
fst
sbb
repnz
push
aam
clc
orl
neg
mov
inc
fidivl
add
outsl
popf
mov
sub
jmp
dec
or
inc
xor
lahf
xor
or
jmp
dec
push
daa
sbb
ds
pop
mov
std
test
inc
icebp
mov
call
fisubrs
ja
and
mov
out
xchg
and
xchg
ja
insb
cmp
mov
into
cmp
insl
and
pop
xchg
in
enter
dec
loop
div
xor
lret
rorb
and
in
cmp
pop
push
xor
cs
jnp
dec
aas
push
sahf
in
data16
mov
mov
pop
adc
xlat
testl
add
add
and
mov
cmp
call
jno
out
push
dec
outsl
xor
mov
jno
and
xor
push
popf
dec
pop
cmpsb
push
mov
xchg
pop
pop
cli
or
in
mov
jecxz
sti
cltd
lret
mov
mov
add
stos
ret
cmp
addr16
xchg
mov
dec
pop
scas
in
xchg
ror
ds
rcl
cltd
shr
mov
push
aaa
cmp
dec
lods
mov
test
gs
inc
cmp
push
mov
hlt
xor
fiadds
dec
pop
ds
push
push
jge
cs
popf
in
sub
cli
ror
ss
imul
jecxz
xchg
aad
ljmp
xor
and
sbb
xor
pop
daa
inc
subl
je
push
ret
lods
fists
xor
sub
xchg
test
jbe
and
push
cld
ret
dec
sub
sbb
pop
xor
pushf
lret
int
clc
pop
stos
cmp
aaa
add
xorb
cmpsl
xchg
loope
and
lret
pop
scas
outsl
sahf
addr16
jg
xchg
add
sti
jb
fadd
pop
add
icebp
mov
or
popf
cltd
scas
push
mov
dec
add
inc
fistpl
mov
xchg
xor
movsl
adc
cmpb
outsl
pop
leave
adc
push
mov
jb
adc
movsb
clc
lock
mov
in
ja
into
cwtl
dec
push
lock
push
rorb
lods
popf
insl
fbstp
sub
in
or
add
push
inc
add
jle
testl
loopne
mov
mov
std
fwait
mov
dec
inc
in
pop
cmp
test
loopne
pop
dec
lods
xchg
scas
mov
pop
push
add
xor
push
jp
xchg
bound
jg
outsb
es
push
or
enter
lret
outsl
pop
fs
out
push
int
add
add
jg
add
sahf
pop
dec
adc
addr16
mov
dec
inc
scas
and
stc
mov
lret
add
js
ret
or
or
out
jae
adc
adc
cmp
divl
lcall
dec
stos
inc
ljmp
outsl
xor
pop
mov
dec
jae
addr16
mov
lret
fiaddl
cmpsb
sahf
loop
pop
je
ror
leave
push
pushf
in
iret
jbe
xlat
push
sbb
shr
adc
mov
dec
fdivr
inc
mov
push
ja
hlt
pop
fistpll
dec
jne
shl
mov
cld
inc
dec
mov
fbstp
movsb
mov
dec
inc
mov
jnp
shll
in
push
pop
pop
fwait
pop
fs
inc
sub
rep
mov
xor
cli
add
scas
cltd
xchg
xlat
cmp
hlt
or
push
mov
mov
movsl
sbb
pop
loope
mov
push
dec
daa
paddq
lea
xor
cmp
movsl
inc
jmp
pop
mov
loopne
inc
mov
nop
in
hlt
sbb
nop
outsb
fdivs
jne
into
jle
mov
or
sbb
lret
push
hlt
in
pop
cmp
cmpsl
jne
mov
push
sub
aas
dec
sbb
js
jns
jne
sbb
inc
cwtl
lods
push
xor
popf
gs
insl
out
aad
pushf
subl
pop
xchg
add
mov
ret
ret
aas
adc
dec
aad
aas
add
in
pop
cmp
sbb
stc
insl
add
ljmp
cmp
rol
xchg
imul
aaa
cli
das
mov
jns
xor
jp
mov
push
add
xor
test
pop
cwtl
daa
lea
sub
inc
dec
pushf
ss
pop
scas
xorb
push
popf
xlat
push
repz
push
xchg
pop
iret
sub
imul
inc
xchg
or
xor
cmp
jno
es
dec
addl
outsb
leave
repz
clc
xchg
inc
add
pusha
mov
jl
and
xchg
std
sub
push
push
pushf
dec
sahf
and
push
adc
mov
cmp
mov
inc
int3
mov
ljmp
jne
adc
dec
shll
and
xor
loop
cmp
dec
xchg
cltd
dec
call
pushf
fisubrl
shlb
fcmovbe
push
cmpsl
subb
adc
cmp
sbb
push
push
aam
cltd
and
lds
push
dec
jno
dec
scas
inc
cmpsl
lret
imul
test
rol
shll
jb
rcrb
mov
lahf
push
sub
sub
and
mov
push
xlat
add
xchg
leave
lods
or
push
xlat
sbb
rcll
cwtl
sahf
xchg
loopne
inc
dec
shlb
mov
in
pop
inc
aam
outsb
sub
add
icebp
pop
ret
in
imul
in
lcall
cmp
and
sti
adc
inc
incl
mov
jns
sti
add
pop
cmp
in
push
mov
pandn
add
mov
lods
sub
popf
or
xchg
inc
push
and
outsl
ja
jns
push
jno
in
testb
jmp
repnz
dec
xor
bound
inc
xor
fdivp
add
lret
cmp
insb
cs
das
xlat
inc
and
lods
mov
jae
gs
lods
inc
fistl
and
cltd
push
mov
pop
pop
or
mov
push
pop
dec
pop
or
jmp
xchg
xorb
dec
and
test
mov
and
add
jmp
sub
mov
insl
and
jne
dec
stos
inc
sahf
push
xchg
out
push
shl
cmp
inc
sbb
sbb
jbe
lret
insl
stos
mov
mov
movsl
mov
aas
adc
mov
je
xchg
inc
mov
mov
divl
in
mov
adcb
lahf
enter
mov
inc
call
in
add
jle
ss
push
lods
sub
cmp
gs
xchg
cmp
stos
aad
aaa
mov
push
cmc
add
pop
in
jmp
push
popf
inc
dec
imul
inc
push
int
repnz
cmp
lret
stos
into
imul
xlat
xor
fs
fadds
cmc
sbbl
ds
add
dec
lock
pop
fidivs
mov
aaa
lods
jl
repz
and
sahf
into
sti
xchg
ret
fwait
add
pop
es
fdivrs
enter
jp
fcompl
pop
shll
in
lods
inc
xchg
aam
mov
ret
mov
mov
shrb
mov
nop
push
xor
jmp
and
aaa
sbb
mov
gs
mov
bnd
mov
out
call
inc
and
aad
xor
xchg
push
cmp
mov
jmp
pop
gs
sub
repnz
into
or
inc
or
push
aad
jecxz
mov
jp
cmp
ret
int3
xor
rorl
push
sub
fbld
test
ret
jmp
mov
xchg
pop
sahf
mov
rolb
pop
movsb
cmpsl
pop
sbb
add
push
outsl
or
pop
cltd
je
cmpb
in
inc
icebp
xchg
nop
mov
mov
mov
mov
jmp
mov
cmpsb
cmp
lods
mov
pop
loop
and
lock
in
add
sbb
not
add
mov
add
jae
out
fsts
xor
push
aad
xchg
pop
dec
pop
cmp
ret
pop
xor
jg
shl
scas
and
or
mov
adc
fs
mov
sarl
leave
fcmovnu
mov
hlt
mov
addb
jo
rorb
stc
fs
cmp
xchg
jge
sahf
inc
cmp
inc
xchg
sbb
lea
mov
enter
and
pop
mov
adc
js
loopne
mov
out
cld
mov
enter
sub
sarl
jmp
mov
add
adc
xlat
popa
jmp
add
and
loopne
repnz
xchg
dec
inc
fs
jno
aam
and
pop
data16
pop
inc
movsl
cli
mov
push
fnstcw
call
cmpsb
pop
xor
aad
std
xchg
pop
jno
mov
push
inc
mov
adc
add
xchg
push
add
loopne
in
dec
das
mov
jae
sub
push
fstpt
pop
sti
aaa
and
jo
lcall
add
xchg
in
sahf
inc
imul
or
cli
push
jno
sub
cmp
mov
stos
gs
inc
adc
ljmp
xlat
mov
add
movsb
aas
mov
hlt
xchg
jecxz
jg
lds
mov
inc
push
aas
xor
outsl
cmpb
in
lcall
adc
pop
jnp
jo
and
fsubs
inc
sub
mov
not
add
xor
sub
add
shlb
outsl
jle
insb
jp
mov
imul
inc
lock
sbb
xor
mov
fdivl
dec
pop
or
and
lods
fadd
add
jle
repnz
cmp
fiadds
hlt
inc
and
jp
add
inc
dec
xor
xor
pop
mov
mov
stc
pusha
and
fsubs
fidivrs
test
aad
scas
mov
fistpll
pop
int3
aaa
inc
sub
jo
insl
cmp
or
jp
decb
push
and
push
cli
mov
ds
enter
pushw
push
int3
pop
adc
stc
test
push
enter
ret
xchg
data16
and
out
cltd
ljmp
xlat
loop
and
sbb
pop
inc
ror
fimuls
dec
mov
imul
pop
idivl
imul
cs
mov
and
lods
and
pusha
xchg
outsb
les
sti
or
das
clc
push
lahf
push
addl
or
mov
rcrl
pushf
iret
sub
mov
mov
mov
inc
stos
sarb
or
dec
adc
push
sarb
mov
lods
in
cmp
pushf
or
jp
dec
mov
aaa
pop
stos
pop
cmpsl
add
lret
mov
lods
scas
jb
out
lcall
xor
call
cmpsb
cmpsb
inc
cmp
or
aas
je
jmp
stos
in
xchg
test
faddl
addr16
movsl
jnp
in
sarl
lock
icebp
arpl
jae
add
cmpsl
loop
pop
fildl
lds
in
cmp
call
inc
cmc
xchg
push
mov
lcall
nop
lahf
inc
lcall
into
addr16
dec
jb
adc
adc
jb
or
fcoml
jge
inc
mov
test
mov
cmp
cli
mov
cld
in
arpl
rcl
mov
inc
rcrl
mov
xchg
test
adc
xchg
sbb
addr16
into
xchg
mov
cmp
shlb
or
inc
inc
xor
mov
scas
mov
movl
mov
stc
cld
testb
cmpsb
icebp
scas
adc
insl
arpl
movsl
aad
stos
aad
fwait
add
xchg
pop
mov
mov
popa
in
push
shll
cmpsb
loop
enter
lods
cltd
gs
inc
outsl
in
push
push
js
pop
mov
mov
ljmp
add
and
mov
cmp
rclb
sbb
cmp
lea
cld
ficoms
adc
imul
sbb
out
or
aam
cltd
mov
lcall
js
icebp
inc
mov
mov
out
stos
ja
dec
repz
imul
int3
outsl
insb
in
mov
mov
std
mov
addr16
inc
in
int
pop
xchg
rorl
pop
fcmovne
pop
inc
jb
fidivl
lds
repnz
int3
insb
call
xchg
dec
xor
xchg
testb
ljmp
xor
jle
cwtl
lret
pop
shlb
sbb
repz
push
jg
lods
lahf
rclb
cmp
xchg
in
pop
and
xor
add
cwtl
cld
addr16
mov
rcll
fstpt
xchg
mov
sbb
dec
movsb
push
add
pop
mov
xor
outsl
push
sbb
cwtl
stc
add
std
pop
mov
jge
lock
jno
mov
xchg
jns
cli
cmp
repnz
push
pop
jmp
jno
mov
nop
inc
lods
mov
inc
adc
push
mov
insl
insb
nop
addr16
mov
push
das
iret
outsb
enter
push
fcmovnbe
in
dec
or
jnp
cmp
push
jl
hlt
sbb
loopne
nopl
sub
adc
mov
sub
xchg
aas
sub
lock
in
inc
mov
pop
out
xor
add
insb
lahf
jle
xchg
sbb
lahf
stc
push
ljmp
popf
mov
out
push
mov
sub
xor
test
or
mov
jge
mov
daa
pop
int3
js
popf
out
arpl
mov
dec
int3
test
xchg
stc
push
daa
jnp
jne
dec
imul
test
push
cmp
xor
adc
jp
pushf
xor
mov
or
aad
cwtl
jge
cmp
frstor
mov
repz
jl
das
fisubl
add
mov
hlt
aam
pusha
sub
dec
pushf
dec
xchg
mov
addr16
out
lock
xor
dec
cmpsb
movsl
repnz
add
shr
or
push
xchg
dec
mov
add
ja
mov
jae
mov
es
mov
ja
hlt
enter
dec
adc
stos
scas
enter
frstor
aad
mov
imul
sub
xchg
nop
lcall
in
mov
inc
lcall
jb
icebp
inc
jg
adc
push
insb
or
loopne
sahf
xorb
push
push
andb
cwtl
inc
fcmove
and
add
or
inc
loope
mov
add
les
pop
jl
push
fs
xchg
aad
int3
xlat
fdivs
lcall
btr
adc
test
in
rorb
sbb
out
sahf
xchg
dec
sbb
ja
xchg
push
sarl
add
xchg
inc
mov
sub
mov
int
xchg
xor
fistpl
aad
adc
movb
fimuls
test
in
sub
jge
bound
dec
scas
ljmp
sbb
cs
pop
movsl
inc
push
insl
mov
add
les
aaa
inc
add
daa
out
cmpsl
std
pop
add
mov
mov
outsl
pop
mov
sub
sbb
mov
mov
lods
mov
mov
or
pop
inc
mov
sarb
ret
nop
sbb
loopne
mov
pop
nop
pop
jns
sahf
xchg
push
into
and
add
mov
icebp
dec
insb
mov
iret
addr16
mov
fdivp
jmp
mov
jg
add
add
mov
lret
jo
jae
sub
repnz
fs
xor
aad
dec
lahf
hlt
lcall
imul
push
insl
fildll
loop
cmp
mov
mov
jns
inc
nop
cmp
xchg
or
cmp
fldz
gs
and
dec
mov
adc
cmc
adc
dec
cmp
scas
pop
jl
cltd
pop
sbb
adc
inc
das
cmpsb
cmp
shll
outsb
xlat
lahf
sbb
pop
shrb
in
into
mov
cmc
jecxz
cmp
push
les
cmp
mov
pop
mov
cmc
jnp
push
stc
daa
mov
dec
cs
mov
add
xchg
push
dec
lock
xor
mov
mov
call
mov
mov
repnz
std
lret
or
dec
inc
mov
cli
jne
inc
mov
or
pop
push
fcoml
sbbb
mov
push
adc
rcl
jb
xor
cmp
std
mov
jo,pn
and
sbb
xchg
test
loope
out
inc
pop
into
inc
jns
dec
jne
inc
ljmp
insw
sub
jb
push
cmp
sbb
and
xchg
int3
fidivs
cmpsb
out
out
call
adc
outsb
sbb
or
popf
test
cli
or
movsb
and
mov
mov
adc
shrb
jl
fs
jnp
and
xor
rol
cwtl
push
pop
fucomp
sti
lea
mov
xchg
movups
cmp
push
mov
into
jmp
sti
xchg
dec
sahf
int3
or
pop
lea
dec
sti
and
mov
dec
decb
ljmp
or
out
ret
loopne
jnp
sbb
cmp
jo
loope
call
dec
rclb
mov
inc
repnz
testl
xchg
sub
je
cmc
call
add
lods
pop
mov
pop
fxch
push
xor
push
add
call
out
insl
int
pop
mov
xor
push
andl
fmuls
fsts
cmp
jae
pop
out
mov
push
dec
mov
pushw
sbb
inc
jbe
xchg
xchg
aad
out
adc
sub
mov
mov
and
and
int
sbb
and
rcrl
subb
enter
xchg
xchg
mov
mov
jbe
pop
scas
fsts
addl
and
push
jae
ror
ja
adc
aad
test
inc
xchg
aas
decl
bound
xchg
stc
cmpsl
movsl
push
imul
mov
adc
cmp
mov
cmc
adc
loop
jl
movsl
push
jmp
dec
xchg
or
add
das
sub
mov
data16
lahf
cltd
jne
or
sub
xchg
inc
dec
sbb
dec
mov
inc
adc
aad
vsubpd
rcrl
cmpsl
inc
call
leave
push
rcll
mov
out
inc
out
mov
jle
insl
in
loope
sahf
add
lods
jo
mov
stos
ljmp
es
lahf
ret
push
popa
and
push
aas
lret
outsb
push
gs
push
ss
xlat
aas
mov
cmpsl
or
movsl
cmpsl
in
enter
je
orl
xor
jne
pusha
pop
mov
int
sub
mov
ficompl
sbb
adc
addb
out
inc
xor
or
xchg
sub
mov
enter
insb
dec
and
insl
and
pop
xor
mov
xchg
xchg
fwait
pop
cmp
adc
jns
test
test
or
in
icebp
in
push
js
iret
out
dec
mov
adc
xchg
sbb
mov
mov
shll
mov
lret
dec
imul
sub
movsl
cmpsl
lods
ficoml
mov
mov
jle
cmp
push
out
push
lods
in
and
mov
cs
dec
jmp
pop
sbb
xor
push
bound
loope
sub
inc
in
fwait
add
sub
popf
jbe
das
rcrb
mov
inc
fdivr
mov
imul
and
je
xorb
sub
mov
push
jne
jne
xor
push
push
adc
inc
cld
leave
xchg
loopne
negb
pop
cmp
or
sbb
lock
imul
jno
out
mov
add
daa
out
dec
lds
aaa
pushf
sbb
rorl
cmc
aam
jno
jne
xchg
lods
sub
call
fstpt
and
pop
cwtl
sbb
int
and
xchg
mov
int3
shlb
xor
movsl
sbb
outsb
lods
lahf
pop
add
xchg
adc
bound
mov
push
testb
mov
or
outsb
push
or
in
cmp
arpl
inc
cmp
or
pop
arpl
js
mulb
mov
adc
shll
xchg
mov
insl
sbbb
pop
mov
sti
ret
stc
getsec
insb
scas
imul
and
or
ret
sbb
nop
test
dec
add
lret
mov
cmp
call
mov
popf
popf
adc
add
es
scas
mov
lcall
add
sub
add
cmpsb
es
stc
jge
sub
cld
stos
int
gs
cwtl
pop
mov
incl
sti
xchg
jns
lcall
jmp
dec
jp
push
in
pop
jnp
arpl
mov
fisttpll
cli
xor
jae
mov
or
add
cmp
pop
test
out
or
mov
cmc
pop
adc
xor
mov
pop
dec
and
mov
out
fnstcw
push
add
xchg
mov
pop
aaa
add
dec
testb
mov
fisttpl
rorl
aad
add
adc
mov
pop
out
mov
outsb
jnp
test
mov
gs
sub
jle
je
repnz
call
jl
ljmp
das
xor
paddusb
push
pop
xchg
aas
cmpsl
arpl
jecxz
js
push
addl
out
out
in
repnz
cmpsl
mov
push
add
fmull
imul
mov
push
into
jmp
dec
pop
addr16
mov
xor
mov
enter
fs
mov
xor
sahf
dec
leave
push
pop
repz
sbb
xor
cld
testl
sbb
add
jp
pop
or
negb
shlb
rcr
lods
outsl
mov
add
push
mov
shl
aad
dec
mov
in
mov
movsl
or
add
or
mov
cmpsb
lahf
pop
xlat
jno
and
sub
xor
mov
mov
mov
push
mov
pushw
aad
fstpl
and
ljmp
inc
adc
loop
pusha
inc
jns
ljmp
mov
sahf
pop
fs
int
test
and
dec
movsb
sub
incb
aam
xor
lcall
int
xchg
fdivrl
gs
push
popa
test
ja
lock
xchg
pop
lods
ds
sub
jle
in
adc
aam
mov
push
fsubrs
loope
jmp
imul
xlat
or
xchg
cmpsl
or
mov
inc
inc
inc
sbb
sub
pop
insl
rcl
ffree
stc
test
scas
dec
mov
test
sti
mov
add
xchg
xor
add
mov
and
xchg
inc
rcl
sbb
mov
movsl
out
std
jp
lret
add
test
mov
outsb
roll
mov
fbld
int3
xchg
and
push
mov
jne
loopne
inc
cld
daa
outsl
imul
out
in
mov
repnz
lock
pop
in
xchg
repnz
orb
mov
fadd
jl
cmp
adc
adc
shl
cs
aaa
jne
jbe
popa
sti
sub
rorb
and
sub
inc
std
test
jge
cmp
push
jge
add
ja
shr
or
mov
push
icebp
int
test
movsl
xor
int3
ret
sbbb
pop
xchg
fadds
stos
add
fwait
push
test
cmpsb
push
mov
jnp
popa
lret
pop
cmc
sub
adc
adc
inc
dec
lods
mov
cwtl
cltd
push
les
dec
push
pop
testl
inc
aad
lahf
xor
push
jb
or
jno
data16
je
push
mov
xor
pop
lret
enter
xchg
xor
rorl
out
out
loope
lret
mov
jae
out
es
xor
jae
xchg
jge
sbb
loop
ljmp
cld
xlat
test
lea
insl
movb
sub
hlt
mulb
cs
insl
push
push
push
and
testb
cmp
ja
jl
outsb
sub
cltd
xchg
cmp
scas
add
minps
cmp
les
and
adc
addl
mov
das
push
mov
add
or
xchg
stos
mov
xor
push
movsl
std
lcall
adc
cmpsb
jmp
jecxz
pushf
push
in
jl
sub
sub
arpl
dec
inc
jge
adc
fstpl
sbb
pop
je
call
sbb
pop
mov
cmp
lcall
lock
dec
push
imul
jo
mov
add
lods
push
mov
dec
imull
or
cs
adc
std
out
pop
jae
out
mov
cmp
insl
sti
sbb
dec
mov
pop
mov
daa
mov
nop
xchg
in
pop
movsl
ljmp
and
addr16
shrb
mov
and
nop
or
or
push
mov
pop
loop
dec
scas
or
inc
je
jle
in
lods
or
subb
adc
fcomp
mov
fisubrl
lods
aam
mov
pop
dec
shl
dec
sub
mov
sbb
mov
int3
das
mov
sbb
mov
orl
add
enter
leave
gs
inc
fadds
cmp
imul
into
cld
sar
pop
pushf
xchg
in
jge
loop
add
repnz
xor
cmp
fcoml
adc
mov
or
lret
fsubrs
and
mov
lods
inc
adc
test
pop
xchg
scas
fs
jge
inc
sub
subl
jge
push
pop
scas
sub
lods
test
add
dec
lods
lds
loopne
fcmovbe
insb
xchg
shlb
inc
sbbl
fwait
test
lods
stos
roll
add
jne
outsb
fmuls
pop
push
popf
dec
sub
mov
fnstsw
sbb
out
nop
sbb
rol
popf
inc
mov
arpl
xchg
cmpsl
lret
cmp
push
fwait
test
vandpd
out
lcall
out
inc
in
cli
idivl
shr
jge
jo
xor
mov
add
adc
jp
pop
jns
inc
sub
sbb
sbb
adc
or
in
cs
fistpll
js
xchg
adc
loop
lds
outsl
popw
into
movsl
ja
and
orb
push
call
fstps
sub
mov
lcall
repnz
add
pop
dec
sbb
lock
data16
dec
cld
loop
mov
lods
mov
stc
push
cmpsb
test
pop
or
or
hlt
xchg
fldcw
sti
ret
imul
sbb
in
adc
cs
sbb
jp
outsb
bound
icebp
xchg
dec
xor
insb
mov
pop
dec
std
adc
add
mov
push
rolb
cmc
cmp
rclb
hlt
cmp
mov
sti
sbb
cmc
clc
mov
push
es
mov
dec
and
dec
test
mov
mov
pop
fmull
sbb
dec
and
pop
adc
test
iret
bnd
mov
xor
lods
addr16
movsl
mov
imul
dec
adc
das
repz
ret
xchg
loope
jg
sbb
jp
and
push
mov
add
lock
mov
iret
mov
push
sarl
mov
push
lret
stc
inc
jl
inc
cmc
addr16
jmp
cmpsb
test
pop
push
xlat
lret
mov
call
les
les
inc
movsb
sub
cmp
pop
stc
inc
mov
xchg
popf
mov
test
add
mov
adc
mov
and
jns
movsb
jo
into
pop
pusha
lock
insl
and
mov
push
pop
sar
pop
in
jle
dec
pop
xchg
in
je
aaa
je
std
in
mov
mov
xor
lods
jmp
push
and
add
inc
jle
jb
dec
pop
lds
xchg
ds
fucomp
stos
movsl
inc
pop
cmp
incb
in
pop
shlb
jmp
cwtl
test
cmp
insb
adc
mov
pushf
mov
sbb
inc
negl
mov
add
mov
movsb
dec
bound
xchg
test
or
je
xor
cmc
je
int3
inc
scas
pop
ja
mov
pmulhuw
sub
jnp
cld
jmp
mov
add
dec
jg
sti
push
aam
dec
or
push
push
rclb
mov
enter
inc
cmp
and
shll
sub
jnp
roll
jmp
xchg
push
xor
xchg
sub
leave
out
stos
and
add
mov
jb
movsb
iret
sub
mov
push
enter
arpl
add
adc
push
mov
imul
js
into
insb
add
fcoml
sbb
scas
std
ja
jae
mov
sahf
xchg
test
push
sbb
adc
xor
xor
fisttps
movsb
sbb
out
xchg
aaa
push
stos
xchg
mov
test
int3
iret
fs
xlat
pushf
je
push
and
rorl
mov
mov
adc
aad
and
jbe
push
or
add
and
leave
sbb
lahf
ja
xchg
or
cmpsb
fdivrs
scas
stos
ss
sub
call
lret
test
jge
cwtl
mov
cmp
sbb
mov
or
imul
repz
adc
ja
dec
jo
pop
or
push
add
xlat
scas
cmp
std
or
inc
mov
jle
cltd
test
ficomps
lods
or
pop
xchg
sub
loope
xor
aas
xchg
jg
roll
cmc
sub
and
jp
test
nop
mov
jge
out
int3
lcall
popa
pop
cmpsl
scas
popf
int
nop
ret
mov
xchg
out
jno
push
mov
pushf
and
mov
inc
push
imul
sub
iret
push
sub
ja
nop
pop
xchg
dec
outsb
out
rorb
pop
lahf
loopne
sub
inc
popa
inc
jmp
xchg
inc
push
rcll
push
inc
pop
call
cmc
jecxz
imul
loopne
dec
rorb
lods
out
inc
xlat
flds
lods
fucom
lock
sbbl
pop
and
mov
nop
rorl
pop
fld
xchg
repz
mov
cmp
adc
stos
push
mov
std
push
cli
ljmp
jp
cs
push
or
pop
jbe
or
or
cmp
rclb
jno
into
sbb
in
shrl
dec
xchg
js
shlb
dec
mov
mov
je
mov
daa
sbb
scas
bound
cld
pop
push
cmp
cli
aam
jecxz
ljmp
dec
dec
inc
xchg
fcompl
pop
pusha
sbb
add
sub
mov
lahf
mov
gs
mov
push
cmp
xadd
xlat
pop
add
movsb
lods
lret
test
mov
sbb
jb
or
dec
pop
pop
add
cmc
mov
mov
rol
in
xchg
repz
lret
imull
stc
repnz
fidivrs
fwait
std
dec
jb
add
sub
lods
adc
and
mov
push
outsb
test
cmp
mov
xor
sub
rcrl
cmpsb
bound
in
out
mov
or
aad
test
orl
fsubs
pop
out
dec
xor
sub
jo
add
jo
and
in
mov
pusha
and
xchg
aam
mov
into
cmp
sub
sti
insl
mov
in
outsb
pop
cmpb
dec
gs
dec
ss
test
das
xor
xchg
mov
mov
pop
push
jl
outsb
inc
je
or
xchg
sub
out
mov
jns
push
int3
scas
outsb
cld
sub
adc
push
cltd
xlat
scas
test
mov
jle
mov
cmp
cwtl
lds
and
jb
cwtl
push
leave
out
fs
lahf
dec
jne
mov
stos
inc
clc
xchg
adc
out
pusha
jmp
cmp
and
sub
inc
jne
and
jg
cltd
pop
xchg
loope
adcl
lret
fcmovnb
sub
cmp
insl
test
ficomps
sub
addb
frndint
xchg
imul
outsb
xor
orl
push
jnp
mov
not
jmp
mov
push
repz
xor
push
mov
lcall
pop
orl
push
lods
mov
xor
dec
or
js
loopne
stos
rclb
out
pop
stos
sbb
sbb
iret
cmpsb
push
lea
cld
and
out
incl
cmpsb
sahf
loopne
mov
inc
addl
aaa
ljmp
outsl
add
out
lods
jp
in
pop
int3
fwait
inc
mov
pop
xor
movsl
das
das
xchg
xor
mov
je
mov
lock
fdivrl
adc
push
testl
pop
fildl
sbb
push
push
sti
cmp
pop
ljmp
data16
dec
cmpsl
mov
popf
lahf
roll
jecxz
inc
orl
jge
mov
cmp
jns
mov
cmp
pop
scas
repnz
shl
mov
inc
cli
mov
adc
pop
push
stos
jb
sbb
pop
scas
insb
cltd
sbb
push
push
lock
mov
orl
jb
xchg
dec
andb
cli
xchg
jecxz
xor
mov
aaa
mov
aad
sub
clc
sarl
int3
dec
inc
js
push
adc
cmpl
jmp
les
dec
sub
push
imul
cs
and
insl
and
lds
test
xchg
inc
jmp
or
les
mov
push
lret
and
loopne
mov
adc
sbb
inc
jge
addr16
sbb
stos
xor
rorl
inc
movsl
mov
pop
dec
or
int
xchg
push
xchg
push
push
addr16
aad
adc
jns
insl
cs
loopne
data16
mov
sbb
in
add
add
int3
in
out
fwait
pop
movsb
fbstp
mov
hlt
lcall
in
icebp
loopne
scas
sahf
xor
xor
rcrl
and
add
mov
pop
lret
stos
mov
bnd
xchg
addl
inc
les
jae
int
outsb
adcl
and
scas
imul
sbb
push
ret
adc
loopne
inc
je
popf
jp
jo
jge
test
aas
mov
nop
fstsw
or
lret
cmp
xchg
or
xorb
mov
cmp
push
fwait
push
cmc
enter
xchg
enter
mov
dec
lea
xor
daa
sahf
xchg
in
push
push
xor
mov
sub
sub
cmc
aaa
or
js
out
adc
loope
inc
xor
fisttpll
fsubr
sub
push
mov
push
xor
clc
loop
push
inc
outsb
adc
repnz
bound
movsl
fdivrl
cld
and
std
cmpsb
repz
fadds
xchg
lret
xchg
movsb
or
test
jne
jns
ljmp
sbb
add
mov
push
adc
fnstenv
sub
ret
xor
nop
rcrb
into
jle
lds
in
shl
sbb
cmp
mov
mov
jecxz
loopne
xor
xchg
movsb
mov
mov
xor
and
pushf
adc
xchg
jno
add
sbb
cmp
dec
out
fs
data16
aad
fwait
mov
insl
and
aam
out
push
ds
mov
outsb
cmp
cwtl
and
loopne
fnstsw
pusha
dec
insb
xor
clc
pop
inc
shll
push
adc
dec
ss
cmp
imul
testl
call
lea
pop
repnz
jl
mov
fldcw
add
sbb
pop
ds
sbb
and
loop
adc
scas
mov
sbb
push
cmpsl
idiv
loope
ja
les
push
leave
push
jo
test
xor
data16
mov
addr16
jp
jnp
mov
jns
inc
fsubrs
add
adc
adc
loope
mov
xor
jmp
jp
or
cmpl
dec
dec
inc
mov
or
push
je
in
ljmp
divl
push
in
dec
xchg
roll
inc
cmc
pop
je
into
jae
cmc
mov
inc
nop
or
test
jle
cwtl
sahf
stos
xor
std
fstpt
sbb
enter
negl
xchg
les
jne
popa
mov
cld
mov
push
repnz
stos
xchg
in
fdivrs
in
xor
in
adc
mov
lea
xor
sub
repnz
cmp
jge
movsl
pop
subl
sub
pop
add
mov
nop
mov
outsb
idivl
jg
loopne
outsl
sbb
iret
sbb
es
xchg
int3
icebp
repz
scas
sub
cmp
arpl
cmpsl
movsl
scas
pop
ljmp
cmpsb
cltd
aas
jns
lea
xchg
dec
jecxz
ror
rcll
add
adc
sub
ret
xor
scas
filds
inc
mov
in
lock
pop
scas
add
push
aad
aas
fldenv
push
gs
movl
jg
iret
inc
aaa
xor
loopne
cmpsl
clc
sbb
jecxz
lds
dec
xlat
scas
mov
hlt
sbb
cmpsl
loopne
jmp
je
add
movsb
pop
sub
popf
xor
repnz
jge
inc
push
sub
add
sub
jecxz
and
rcll
inc
jno
xchg
test
movsb
jmp
dec
popf
arpl
or
dec
rorl
pop
inc
cmpsl
test
cmp
mov
stos
add
fmull
jne
aam
bound
lret
sub
addr16
xchg
test
add
test
mov
outsl
xchg
ljmp
inc
lret
js
test
je
xor
sbb
mov
inc
cmp
cli
cmp
mov
fcmovb
xor
add
fwait
adc
mov
loop
out
mov
jg
cli
movsl
and
or
scas
cmpsb
push
jns
lret
xor
dec
les
inc
mov
iret
or
push
out
dec
sti
cwtl
and
xchg
inc
pop
add
out
pop
dec
cmpsl
lret
sub
push
push
pop
xor
sbb
andl
popa
je
sbb
and
mov
decb
sub
ret
add
or
movsb
cld
pop
mov
and
in
pop
mov
div
shlb
into
xor
cmpsb
lret
daa
adc
movsl
jl
cmp
in
push
outsl
shrl
mov
repnz
lahf
mov
popf
roll
ror
sub
hlt
cmp
stos
stos
cmp
movsb
movsl
cmp
cli
data16
mov
xchg
xor
xchg
sbb
push
sti
adc
sbb
int3
dec
mov
or
pop
cmp
shll
cmpsl
push
pop
mov
mov
sub
dec
je
divb
sbb
aaa
lcall
pop
xor
fdivrl
test
cmp
and
dec
add
fidivs
adc
xor
pop
sbb
cmpsb
cmp
adc
xchg
jbe
mov
aas
pop
mov
mov
sbb
or
sbb
ret
insb
repnz
pop
imul
jp
mov
xor
jnp
sub
xor
fcoms
adc
rclb
sub
push
sar
cmp
cs
in
out
lea
imull
rorl
test
mov
push
xchg
pushf
push
clc
rorb
xchg
jg
adc
js
into
mov
sbb
sti
and
mov
pop
popf
jns,pt
xchg
pop
insl
jp
outsb
filds
mov
and
insb
aam
mov
fcoml
nop
mov
dec
clc
jae
stos
pop
push
clc
lods
cwtl
inc
add
lock
out
call
aad
sbb
stos
pop
mov
or
mov
cmp
jmp
aas
push
jo
add
notb
sbb
ljmp
xor
lcall
adc
imul
pop
adc
cltd
in
pop
inc
rol
hlt
pop
sub
jecxz
out
inc
cld
or
push
pushf
xchg
xlat
popf
or
jle
mov
movsb
sbb
xchg
das
or
xlat
shrl
jge
add
xor
fldl
stos
inc
sbb
lea
sub
and
andb
mov
push
mov
in
fisttpl
call
add
xchg
xor
xchg
aad
test
movsb
out
mov
ja
je
xor
js
mov
stos
push
lcall
xchg
lret
adc
ret
adc
cmc
sub
lods
bound
xchg
add
fldcw
cmp
cwtl
or
xchg
or
clc
cmc
mov
lret
inc
mov
push
or
test
mov
cld
add
xchg
idivb
dec
mov
and
add
mov
sbb
push
inc
dec
loopne
and
daa
sahf
out
mov
in
cwtl
cmp
jne
cmp
roll
pushf
inc
mov
mov
scas
sahf
and
cmp
subb
das
add
pop
mov
sub
aas
or
jle
test
sti
jp
sub
stc
es
out
addr16
pop
cmp
dec
mov
jl
pop
insl
push
nop
sub
test
fmuls
jns
jg
imul
mov
sbb
je
shrl
daa
aad
or
aam
icebp
jp
sbbl
movsl
mov
or
mov
adc
stos
and
pop
dec
data16
sbb
cmp
mov
add
orl
cmp
jae
mov
push
mov
mov
adc
pop
fcomi
xchg
lret
repz
xor
jnp
fadds
push
lock
cltd
inc
sub
ret
inc
pop
sbb
xor
clc
mov
cmpsb
loop
stos
shll
daa
pop
lahf
add
daa
mov
mov
ret
xor
jl
int3
stc
dec
popf
jle
pop
sub
cli
and
xchg
mov
lret
daa
in
push
fs
mov
sbb
sarb
out
xchg
add
insl
inc
inc
mov
xor
pop
xchg
add
lds
jbe
jmp
add
push
push
nop
insl
xchg
ficoml
outsl
add
fdivrl
sub
inc
lock
ror
inc
lcall
sti
aaa
push
in
hlt
repz
out
jae
lahf
sar
mov
pop
or
xchg
push
int
nop
cld
int
fstl
and
int3
jle
pop
ljmp
mov
add
outsl
cmpsl
or
ds
mov
sbb
mov
jl
sarl
cli
or
mov
jp
push
push
xchg
mov
enter
xchg
pop
shll
dec
push
lahf
pop
scas
cmp
pushf
loope
xchg
out
mov
mov
cwtl
dec
jo
ss
mov
dec
push
arpl
mov
push
addr16
add
stos
inc
nop
or
out
inc
lods
inc
cld
mov
mov
enter
scas
nop
cmp
mov
jns
jb
sub
xchg
int3
mov
icebp
aad
sub
pusha
xor
xor
jecxz
insb
and
ss
jae
xchg
push
test
jge
pop
adc
xchg
or
loope
cmp
int
call
popf
ficoms
cltd
aad
mov
jo
xchg
call
mov
mov
sarl
xchg
clc
sub
mov
xchg
imul
push
daa
cwtl
add
jae
xchg
mov
push
fwait
iret
aad
std
movsb
addr16
insl
out
ds
je
lret
lds
pop
sbb
and
repz
add
cld
cmovno
aas
push
mov
daa
dec
jmp
or
xchg
inc
push
or
add
mov
adc
mov
sti
xor
cmp
addr16
and
leave
xor
xor
mov
cld
test
test
idivl
add
in
scas
push
sahf
movsb
xor
dec
add
pop
test
repnz
xchg
out
pop
xchg
loope
cmpsl
call
stos
sub
hlt
xlat
sub
enter
xor
outsl
dec
xchg
cmp
mov
aas
js
dec
dec
mov
in
lds
popa
push
dec
ret
cmp
mov
add
ljmp
fildl
pop
push
jnp
arpl
sbb
jmp
xor
adc
mov
mov
fnstsw
stc
test
shlb
sbb
xor
or
sub
movsl
push
add
lahf
jb
enter
fcmovbe
stos
mov
mov
mov
xlat
fdiv
lahf
mov
jns
push
fcoml
mov
mov
mov
xchg
cwtl
subb
int3
mov
sbb
mov
xchg
inc
or
mov
mov
lock
enter
xchg
push
outsl
push
xor
int
sbb
fiaddl
sarb
add
scas
ror
aas
dec
sbbl
push
stos
push
cli
mov
xchg
xchg
pop
cli
xlat
xor
lods
repnz
xlat
js
lea
pop
pop
or
punpckhdq
inc
or
push
mov
arpl
push
lods
inc
mov
mov
xlat
jo
jbe
adc
cmp
call
sub
out
repz
daa
jbe
adc
xchg
dec
xor
packsswb
call
adc
pop
imul
xor
add
pop
int
pop
scas
repz
daa
jbe
in
test
mov
cld
or
pop
sahf
fimull
pop
xchg
pop
ret
pop
dec
push
add
mov
jmp
add
ret
imul
inc
enter
rorl
mov
das
cmp
enter
jmp
lods
and
push
add
sub
push
lock
sub
dec
mov
pop
call
adc
jp
pop
xchg
out
lea
add
and
repz
andl
sbb
push
test
xchg
jmp
xchg
and
inc
mov
mov
movsl
mov
jmp
stc
pushf
or
pop
aam
fcompl
fwait
je
xor
fsubrs
push
push
iret
fadds
push
jb
jecxz
mov
jne
add
out
xor
sub
mov
xchg
mov
push
dec
scas
popf
dec
sub
lret
inc
shrb
nop
movzbl
and
sti
shr
adcb
cwtl
cli
mov
sti
stc
es
lock
jle
arpl
xlat
lret
orl
pusha
aad
mov
sti
mov
bound
popf
jb
rclb
ficomps
icebp
and
rcl
add
jle
cmp
cmp
sahf
faddl
es
out
mov
jmp
fcomip
loop
leave
loopne
or
mov
dec
dec
sub
fs
cmpsl
cmc
mov
mov
add
jnp
adc
xor
mov
dec
ror
or
repnz
adc
or
xchg
push
sbb
dec
popa
cmp
cmp
sti
mov
xchg
cwtl
or
movsb
sub
bound
outsl
sbb
push
ds
sub
push
sub
movsb
inc
stos
push
dec
daa
mov
inc
or
pop
inc
inc
jns
inc
inc
push
xor
lret
aad
mov
xor
das
mov
add
test
test
pop
add
and
push
stos
push
stos
mov
shr
add
push
aaa
addr16
add
rcl
xor
push
xchg
ror
xor
and
or
xor
cwtl
lahf
int3
jae
jo
mov
and
jb
inc
scas
scas
mov
mov
rolb
test
in
ret
mov
jbe
addr16
cmp
sahf
outsl
movsl
mov
adc
hlt
jae
cmp
sub
int3
or
scas
out
std
add
cmp
loop
sbb
push
insl
xchg
fsts
inc
cmc
leave
mov
lahf
add
mov
lods
repnz
push
cli
jecxz
mov
scas
and
sbb
jl
jo
and
in
lcall
jb
push
lret
sbb
jp
mov
pop
jg
test
cmp
add
jo
sahf
or
out
pusha
inc
add
adc
inc
js
fnstenv
ljmp
stos
pop
lods
xlat
xchg
ret
test
xchg
mov
shlb
mov
cmp
les
in
test
dec
jo
inc
cmc
sub
sbb
mov
pop
aad
xor
insb
jnp
lds
adc
cs
in
dec
pusha
mov
andl
pop
pop
adc
dec
fwait
inc
insl
pop
lahf
cmp
fwait
lods
ds
cwtl
add
imul
inc
and
jne
cld
jo
mov
sbb
add
push
out
call
std
cmp
xchg
push
adc
lods
ss
repnz
dec
es
sub
push
dec
in
fstsw
xchg
aam
pop
jo
in
insl
push
ret
inc
or
jle
adc
push
cmpsl
rorl
ljmp
xchg
pop
and
mov
testl
iret
jmp
jnp
push
test
scas
cmpsb
jmp
lea
sbb
push
repnz
daa
or
jne
insl
pop
decl
out
push
sahf
fdivs
stc
subb
mov
cwtl
dec
inc
in
or
nop
daa
cli
sub
add
pop
andl
push
ljmp
fnstsw
and
jecxz
rcrl
mov
xor
xlat
fdivrl
sbb
stc
xchg
xor
ja
pop
sbb
push
pushf
jns
fstpl
fwait
clc
std
leave
sub
push
iret
adc
arpl
iret
pop
mov
push
decb
xchg
in
popa
push
int
add
cmp
or
add
mov
mov
out
sub
jg
pop
add
adc
push
push
loope
xchg
cs
test
push
push
dec
jp
cmc
push
and
aas
cmpsl
jno
mov
jmp
xor
sub
mov
jmp
push
dec
jmp
sub
dec
lds
loopne
push
mov
jbe
test
cmp
ret
push
int
sarl
mov
dec
xor
push
scas
test
mov
subl
mov
jge
xlat
cmp
dec
cmpsl
push
clc
push
sbb
insl
scas
rcrb
pop
mov
movsb
xchg
jo
inc
xchg
push
xor
inc
jbe
lods
xor
int3
push
idivb
pop
cmp
xlat
jnp
repnz
adc
push
cmp
xor
push
jns
add
lea
dec
cmp
in
mov
xchg
aad
insb
sahf
ror
xchg
pop
dec
xor
js
out
in
push
nop
jmp
fcoml
add
mov
mov
mov
std
cmc
ret
mov
pushf
aas
hlt
add
push
shlb
xchg
cmpsl
sarl
mov
lods
aad
gs
insl
sub
or
and
and
jg
daa
aaa
add
cltd
jbe
shl
xor
jns
mov
testb
out
sbb
lcall
jmp
ss
mov
sahf
mov
mov
xor
lods
add
pop
clc
and
xchg
xchg
push
sub
add
mov
invd
je
fidivl
imul
mov
and
push
and
cli
rolb
pop
or
bound
hlt
xchg
enter
insb
add
push
mov
lret
push
cwtl
sub
aad
jae
cltd
dec
dec
inc
sbb
jle
adc
pop
jmp
mov
mov
subb
xchg
clc
and
test
pop
scas
nop
fucomp
leave
or
and
rorb
sahf
mov
cltd
popa
inc
xlat
jb
jae
adc
in
mov
xor
mov
lret
mov
shll
mov
lds
repz
sbb
mov
cltd
sub
and
inc
nop
fisubrl
or
mov
sti
out
dec
std
push
xchg
sub
and
mov
push
lock
push
bsr
and
add
sbb
in
inc
sbb
mov
and
dec
mov
ss
fsubrl
mov
imul
mov
shrd
or
mov
ficoms
push
jmp
push
xchg
loopne,pt
push
fimuls
popf
adc
xchg
pusha
rorl
adc
dec
pop
lods
es
xor
std
fldcw
mov
jmp
push
mov
dec
mov
aad
pusha
or
lret
pusha
and
mov
mov
adc
aam
cmp
pop
mov
xor
mov
movsl
xchg
pop
nop
outsl
sbb
mov
stos
sbb
mov
push
inc
aaa
xchg
int3
es
push
pusha
enter
fnsave
mov
mov
or
sbb
xchg
loop
xlat
jne
cs
cld
push
lea
cld
xchg
mov
dec
and
test
add
adc
mov
pop
jecxz
cmpsb
stc
ja
xlat
inc
int3
cmc
xlat
push
mov
sbb
pop
jmp
xor
push
xor
xchg
mov
std
ret
or
lcall
jae
loopne,pn
icebp
data16
inc
icebp
sarb
repnz
jns
rcrl
leave
lock
or
add
sbb
cmp
and
mov
lcall
sbb
xchg
cmp
jl
jnp
cwtl
sbb
push
fistpl
or
mov
xchg
es
mov
inc
mov
cmpb
jae
adc
ret
sub
cli
sub
inc
dec
pop
or
mov
hlt
cmp
fwait
jb
dec
leave
icebp
mov
mov
adc
xor
xor
mov
and
add
cmp
dec
push
inc
ffree
inc
lea
jne
xchg
les
lahf
inc
jno
dec
and
fwait
xor
out
mov
push
push
push
cmp
fidivrs
cmp
jb
pop
adc
orl
pop
ja
or
and
jp
adc
sahf
xor
mov
out
mov
push
insl
sbb
adc
cmpl
nop
xor
imul
jmp
cmp
loopne
sti
or
push
popf
jns
idiv
fs
test
add
lds
mulb
cmpsl
inc
and
xor
rcrb
or
sub
cwtl
jb
iret
idivb
lret
outsb
test
stos
sub
cmpsb
xchg
jp
dec
js
add
push
testl
adc
mov
sub
jle
xor
ficompl
shr
cs
mov
push
sbb
or
loopne
adc
stos
icebp
xor
lret
repz
mov
out
pop
insl
xchg
sub
mov
jnp
fildl
ljmp
xchg
and
scas
cld
pop
mov
push
add
lods
cmp
in
inc
dec
jmp
stos
daa
daa
test
test
mov
shrb
push
fadds
test
repnz
popf
shrb
pop
mov
xor
adc
das
jl
adc
dec
lret
daa
mov
mov
mov
cmp
inc
in
jmp
cltd
fisubrs
in
stos
adc
mov
push
mov
lods
sub
adc
jecxz
std
fimuls
jge
inc
sbb
mov
push
ljmp
jb
dec
mov
mov
mov
fsubs
repz
popf
jns
mov
loope
lods
stos
dec
test
xchg
fcomip
lret
adc
jae
ss
enter
dec
adc
push
xor
jb
mov
fistps
lods
mov
sahf
fwait
dec
stos
sbb
ficomps
jecxz
adc
hlt
pop
xor
jecxz
fistpll
sbb
xor
pop
cmp
outsl
and
xor
stos
ret
cwtl
sarl
jle
into
clc
add
push
inc
sbb
xor
clc
sbb
out
insl
addr16
fsubr
add
or
and
pushf
dec
mov
jbe
into
out
js
divb
adc
fidivs
mov
or
mov
inc
lods
mov
push
jge
iret
ss
nop
inc
jb
orl
pushf
aas
jecxz
lods
jo
loope,pt
movaps
jp
jmp
out
movsl
mov
fwait
mov
test
sarl
xchg
add
lret
adc
int3
arpl
arpl
inc
or
or
orb
xchg
fwait
in
mov
dec
shlb
inc
push
adc
adc
dec
or
subl
pop
loop
scas
xor
cmp
loop
iret
notb
mov
out
sub
jle
xchg
sahf
jnp
dec
pop
test
movsl
pop
mov
push
jnp
pop
popf
mov
pushl
icebp
jnp
ret
inc
pushf
in
cmpsb
fcoml
mov
frstor
mov
test
jmp
movsl
fadds
ret
jo
push
jne
pop
enter
ret
ljmp
xchg
jbe
push
or
cltd
lret
sbb
inc
xor
imulb
test
mov
lds
inc
pop
mov
mov
dec
xor
or
sub
push
pop
fldt
jne
add
push
jnp
je
push
loopne
nop
js
sbb
mov
or
fadds
pop
push
movsl
test
pop
inc
leavew
jmp
adc
inc
sub
cli
and
pop
mov
lea
jo
mov
and
mov
push
xchg
in
xchg
repnz
fbld
fistpll
pop
cmp
mov
stos
mov
ficoms
inc
je
fnstenv
imul
push
test
into
pop
cmpsb
popa
xchg
mov
sbb
push
push
mov
hlt
ja
out
or
mov
cmp
lods
shlb
pushf
pop
fisttps
or
insb
inc
or
in
lds
outsb
arpl
adc
fiadds
addr16
addb
sarb
je
push
push
ficomps
cmpsb
cmp
dec
mov
fwait
mov
add
inc
das
adc
and
fs
pusha
cmpsl
adc
and
into
aas
sbb
jmp
cmc
test
push
addb
lods
leave
push
pop
sub
loope
aaa
add
xchg
mov
cmp
adc
push
inc
aad
xor
pop
and
mov
push
scas
push
inc
fisubrs
js
xor
enter
inc
mov
mov
mov
jle
rolb
std
std
mov
cltd
iret
orl
lret
inc
lods
bound
nop
cli
rcr
daa
les
add
pop
je
cmp
inc
scas
test
xor
lea
int3
iret
jne
out
lock
dec
and
xlat
popf
lret
mov
clc
push
pop
popa
add
cmpsl
xorl
mov
daa
inc
xchg
mov
push
mov
enter
ss
js
or
and
int3
jge
cmc
mov
or
mov
mov
inc
xchg
arpl
and
cs
enter
jg
outsl
or
xor
dec
sub
stc
and
stos
push
xor
adc
mov
cmp
rcrl
mov
mov
mull
lcall
fcmovne
xor
stos
adc
dec
adc
pushw
adc
mov
ficomps
push
or
aas
mov
mov
pop
mov
aad
fldcw
pop
jecxz
leave
push
mov
push
leave
xchg
scas
cltd
cld
iret
mov
and
push
faddp
fiaddl
inc
push
push
popa
sbb
inc
loop
ret
adcl
add
out
and
std
cli
cli
lret
sahf
test
mov
js
xor
int3
pop
mov
pop
aas
psubq
pop
jge
mov
jg
and
inc
and
mov
imul
cmp
into
jmp
movsb
push
ss
std
cmpsb
add
inc
add
aas
lahf
push
int
or
push
xor
aam
push
popf
lea
hlt
mov
leave
cwtl
jne
add
fsts
jno
cltd
xor
rcrl
stos
xchg
sbb
push
lahf
xor
dec
cmp
cmp
lods
push
andl
mov
sub
mov
andb
pusha
pop
test
fimuls
adc
jb
fstpt
jae
test
out
jle
js
inc
fs
push
cmp
and
jb
jbe
outsl
mov
loopne
add
xchg
rcl
lcall
je
mov
ret
cmp
lcall
insb
leave
shll
and
adc
in
or
arpl
ds
jb
add
test
mov
or
inc
mov
pcmpeqd
or
clc
mov
sub
push
mov
cmp
stos
nop
testl
sub
into
push
sbb
add
ret
mov
shlb
pop
sub
addr16
outsl
filds
push
dec
inc
and
stos
xor
fs
adc
cmp
xchg
add
xchg
xchg
and
xchg
adcb
mov
xchg
sub
inc
int3
xor
rorl
cmp
add
ljmp
inc
pop
es
frstor
adc
stc
xchg
sub
push
and
jg
pop
adc
ljmp
movsl
inc
pop
mov
int
adc
mov
ficomps
std
push
xor
mov
fnstenv
dec
add
loope
push
jmp
cmp
cmp
sbb
in
aam
xchg
movsb
into
adc
adc
mov
mov
cmp
jge
pusha
std
fcompl
inc
mov
and
jge
jmp
jl
push
push
push
cmp
shl
fidivs
clc
adc
fwait
aaa
out
push
and
lods
jmp
adc
mov
add
ret
pop
mov
mov
mov
lret
ret
or
call
pushf
mov
fstl
scas
jmp
lret
mov
dec
test
imul
inc
clc
xchg
adc
sub
add
and
mov
jae
xchg
std
dec
ret
insl
test
mov
pop
pop
sub
adc
sub
imul
std
test
loop
mov
dec
mov
test
jno
fisttpll
dec
stos
lods
stc
sub
sti
add
aad
mov
hlt
pop
jo
pop
aaa
stos
sbb
rcll
lock
leave
hlt
add
aad
dec
leave
sbb
scas
add
es
cmp
into
lods
push
sbb
mov
scas
xchg
add
nop
pop
vmwrite
jl
inc
and
sarb
sbb
les
mov
jecxz
jb
dec
das
sub
mov
mov
xlat
xor
lret
sub
repnz
clc
call
xor
and
add
pop
fs
or
jae
scas
ja
lods
dec
lods
mov
mov
sahf
cltd
mov
add
pop
insl
xchg
or
jo
pop
sub
nop
fdivrl
fwait
mov
sub
cld
ss
popa
jmp
mov
fs
xchg
movsl
mov
xchg
cltd
mov
fsubrs
pop
in
int3
imul
scas
push
add
icebp
jo
sbb
leave
imull
mov
xchg
dec
stos
les
pop
insl
pop
mov
push
xor
in
lahf
dec
in
sub
xchg
push
nop
inc
rcrl
sbbb
stos
lcall
mov
push
adc
stc
sbb
mov
lret
scas
mov
mov
sarb
sub
pusha
sbb
xchg
popa
in
repz
sub
lods
cld
adc
rol
xchg
in
cltd
imul
or
jb
inc
push
imul
jbe
dec
aam
push
mov
insb
adc
jmp
xchg
xlat
lds
xchg
lock
or
xor
aaa
test
cli
mov
and
popf
test
fcomp
nop
cmc
jle
stos
cmpsb
int
fcmovu
xor
sbb
js
out
cmc
pop
idivb
sti
push
push
push
hlt
fistpl
push
xchg
mov
inc
pop
fstl
rclb
ss
ret
bound
mov
mov
out
sbb
xor
das
fxch
inc
lcall
cltd
xor
aas
jo
push
cld
loop
dec
add
cs
cltd
test
stos
clc
insb
push
cltd
arpl
div
loopne
and
push
push
subl
repnz
xor
or
dec
jp
xorb
cs
pop
xchg
sbb
movsl
rorb
movsb
pop
mov
cmp
sbb
adc
arpl
mov
jae
cmp
pop
in
sbb
cmp
popf
add
sete
gs
and
imul
mov
nop
and
dec
dec
cmp
mov
mov
push
push
xchg
jo
jno
dec
test
and
mov
mov
inc
push
fincstp
std
iret
jl
push
mov
dec
loop
mov
cmpsl
test
xlat
cmpsl
fisttps
mov
cltd
mov
aam
add
lock
sbb
push
bound
push
lahf
not
and
fstp
xchg
lock
jg
mov
jmp
outsb
aam
adc
imul
inc
daa
icebp
push
fst
jg
adc
mov
movsb
dec
xor
push
cmc
out
mov
dec
out
loope
in
mov
sub
jp
adc
scas
bound
imul
test
test
je
xor
xchg
in
add
hlt
icebp
fstps
mov
rolb
out
inc
push
add
mov
fimuls
inc
jmp
imul
in
fdivl
ret
sbb
cmc
mov
mov
rcl
mov
aam
mov
lock
sbb
pushf
and
loope
pop
pop
adc
inc
lods
fwait
pop
mov
sbb
movsb
xor
xchg
sub
mov
cwtl
bound
out
pop
cmp
les
xor
rolb
lods
push
insb
mov
cmp
add
xchg
push
insl
fildl
jb
jecxz
in
sbb
cltd
ljmp
jp
lods
xchg
add
mov
arpl
inc
pop
adc
scas
jbe
pusha
mov
xor
imul
repz
pop
int
jo
outsl
loopne
dec
inc
mov
and
sub
scas
fisttpll
mov
xchg
and
xlat
inc
add
sub
cld
rcrl
sti
scas
xor
jbe
inc
adc
adcb
and
jp
scas
sbb
stos
test
or
jecxz
mov
push
pop
icebp
pop
sbb
leave
mov
xor
xorb
test
ds
es
jle
jae
xchg
lods
iret
xor
loope
cmp
xor
push
cmc
mov
clc
inc
ret
or
sar
mov
and
dec
cmp
push
jp
jns
das
roll
mov
mov
and
lods
aam
aaa
mov
outsl
xor
icebp
testl
clc
loop
rcl
imul
test
stc
call
push
and
xor
push
pushf
test
cs
fnstenv
ret
out
js
hlt
adc
mov
adc
ret
jecxz
adc
adc
mov
add
jne
jnp
push
inc
and
inc
mov
movl
js
daa
aam
imulb
push
inc
add
into
daa
and
cli
dec
add
inc
dec
sarl
sub
shll
add
pusha
push
test
rolb
pop
pop
add
mov
mov
mov
push
outsl
out
lret
movsb
inc
cwtl
sahf
jmp
xor
lret
cltd
cmp
cs
or
out
pop
fucom
fsts
scas
outsb
cmc
lret
fidivrs
push
xor
mov
scas
push
adc
loop
xor
push
mov
outsb
push
addl
movsl
scas
cmpsb
push
movsl
sbb
pop
xlat
jae
cmp
sbb
jge
rcrb
push
xlat
pop
dec
pushf
adc
jp
movsl
adc
cmpsb
fisttpl
lea
outsl
lods
fs
fnsave
imul
es
nop
sbb
in
lock
and
mov
push
mov
dec
sar
push
sbb
pop
daa
test
movsb
fdivr
and
loope
call
cmp
xchg
cmp
loope
fmull
call
add
in
stos
test
push
mov
or
add
adc
int
mov
mov
clc
gs
andl
xchg
movsb
mov
outsl
stos
cli
in
imul
sbb
enter
mov
pop
hlt
outsl
and
sub
loop
mov
sbb
into
jecxz
in
cmc
xchg
sub
adc
jnp
sub
or
data16
mov
inc
ljmp
mov
cmp
decl
xor
insb
les
push
ficoms
repnz
jecxz
lock
jle
pop
dec
or
mov
shl
stos
fwait
mov
sub
pusha
inc
std
mov
sarl
add
out
sub
jle
sub
mov
ljmp
leave
stc
inc
sti
push
push
shr
in
jmp
mov
add
mov
xchg
jg
lods
push
mov
adc
rcrb
jp
pop
xchg
out
mov
or
cmp
xor
mov
mov
andb
sti
inc
push
pop
pushf
inc
ret
std
std
clc
xchg
shrl
sti
arpl
sbbl
pop
cmp
aas
in
hlt
lods
jns
xchg
adc
and
andl
das
aad
pusha
push
into
loope
mov
push
fadd
inc
inc
cli
pop
sti
ljmp
loope
sbb
std
in
jnp
mov
and
push
sub
fdivr
nop
sahf
mov
sbb
enter
dec
sub
movsl
inc
push
mov
mov
movsb
popf
cmp
mov
cwtl
jne
adc
add
mov
push
fs
push
ret
aas
shlb
ds
in
sub
scas
outsl
dec
mov
mov
pop
loopne
into
lock
mov
mov
jno
fsub
jmp
mov
repz
mov
leave
sbb
dec
cli
fs
fs
lret
xor
mov
ja
and
and
or
inc
pop
cmpsl
cmp
mov
stos
lahf
push
mov
pop
rorl
mov
cmp
cli
movsb
jae
inc
jecxz
cmp
aas
in
inc
adc
sbb
or
sbb
fbld
push
cmp
mov
jle
ds
std
gs
mov
js
fldl
mull
xchg
cmpb
scas
imul
hlt
dec
adc
popf
jecxz
icebp
fs
mov
push
ret
adc
xor
push
and
mov
iret
or
xchg
ret
sub
jmp
add
sahf
rorl
je
das
shll
dec
or
mov
add
mov
cmp
xchg
je
ret
or
je
dec
daa
aaa
push
ficomps
lods
fs
les
sub
mov
popa
loop
shlb
insb
rcrl
call
sbbb
dec
mov
cmp
sbb
aaa
or
pusha
das
fldt
xor
aaa
insb
push
leave
and
push
pop
mov
jb
call
pop
leave
or
push
das
jae
rcrb
mov
daa
in
arpl
dec
lock
pop
mov
lds
pop
aad
or
and
repnz
push
jae
negb
xor
xor
int
rolb
idivb
pop
pop
push
and
jge
jecxz
or
iret
dec
xor
mov
out
into
in
lods
push
jmp
popa
xor
js
cli
push
pop
mov
lods
pusha
subb
cmpsb
jb
sbb
pop
push
add
enter
xor
in
clc
out
mov
push
mov
sarl
jecxz
or
xchg
add
fidivs
inc
adc
pop
out
and
xlat
sub
add
scas
or
jmp
add
lods
adc
push
pop
pop
iret
dec
sub
in
mov
adc
cmpsb
or
movb
inc
nop
xor
and
les
pushf
push
xlat
xor
sbb
inc
dec
mov
popf
dec
jo
mov
adc
adc
sub
lcall
xchg
cmpsb
or
cmc
add
add
cmp
sub
sub
pop
mov
mov
push
mov
xchg
add
sub
das
cwtl
pop
pop
sbbb
and
fs
aaa
test
cmc
pop
js
dec
arpl
sub
mov
cmp
pop
mov
popf
js
cmp
dec
push
addr16
aaa
ret
and
fsts
cltd
divb
jmp
ret
das
out
dec
and
pop
push
jecxz
dec
test
sub
pop
sbb
xor
ficompl
ds
jle
sub
imul
je
dec
adc
or
or
push
fstpl
inc
orl
xor
xchg
in
add
cmc
pop
adcl
xor
push
pop
cmp
aaa
jno
jbe
push
xchg
insb
push
mov
std
lea
jae
jmp
cmc
push
lcall
mov
nop
nop
into
imul
fucomp
sub
call
xchg
fistps
mov
fstps
out
mov
cmp
mov
aad
jecxz
outsb
out
mov
lods
jo
in
int3
mov
cltd
imul
stos
xchg
pushf
ss
xchg
cmp
out
fwait
mov
mulb
jp
mov
xlat
clc
stos
ljmp
mov
jnp
cmp
mov
mov
push
pop
shll
mov
lock
div
fidivrs
inc
push
test
sbb
shlb
into
test
mov
lret
xor
and
cmpsl
jns
sbb
adc
rclb
jmp
aaa
xor
movsb
fldl
add
imull
arpl
sub
sti
sti
adc
pop
cmp
jns
cmp
mov
cs
jbe
adc
test
jno
fs
inc
mov
imul
or
stc
xor
dec
mov
stos
xor
or
out
loop
leave
stc
push
mov
imul
ljmp
pop
mov
inc
push
loopne
addl
sahf
popf
pop
cwtl
push
adc
leave
mov
stc
in
data16
cmp
roll
xorb
pop
push
rclb
pop
add
scas
and
mov
icebp
ja
pop
xchg
cmp
adc
loopne
fildll
xor
inc
mov
xchg
icebp
add
aas
out
xchg
shlb
test
xchg
lea
test
pusha
or
loopne
out
loope
jnp
add
fistpl
push
xor
add
cmp
imul
orb
es
fisttpl
int3
xor
inc
repnz
mov
pop
loop
dec
aas
cmp
xchg
add
nop
cmpsb
or
pop
add
arpl
out
cmc
divps
cmp
cli
cltd
jo
xchg
mov
inc
das
jle
les
xor
mov
out
jle
sti
inc
test
mov
in
movsb
or
ss
mov
pop
dec
sbb
out
scas
mov
mov
or
push
inc
dec
xor
inc
mov
inc
addr16
fists
mov
and
mov
lea
cltd
sahf
jp
mov
pop
xchg
lahf
dec
add
int
and
frstor
push
cs
adc
enter
addr16
push
xor
inc
add
cltd
pop
or
and
xchg
scas
pushf
test
rol
into
in
mov
arpl
mov
rorb
sar
fsubs
jg
int3
and
mov
sbb
or
xor
adc
test
mov
stos
stos
mov
aaa
xchg
ficomps
lret
push
lock
jnp
mov
insl
cmp
push
shll
adc
ja
test
xor
loope
sub
sub
incb
andb
mov
mov
call
sbbl
adc
cmc
fimuls
xor
scas
sub
es
jecxz
sbb
out
cmp
imul
stos
mov
stos
lret
cwtl
sbb
andb
stos
and
insb
inc
push
sub
xchg
pop
mov
cs
mov
ret
das
fwait
push
in
pop
sub
mov
sarb
fisubl
push
mov
cmp
fstps
mov
ja
fbstp
enter
call
push
les
arpl
mov
mov
ret
or
inc
add
pop
dec
mov
push
cmp
inc
pusha
out
scas
pop
push
dec
xchg
cltd
push
pop
push
sbb
pop
adc
sub
push
call
xchg
and
cmp
faddl
out
popa
out
ret
jl
bound
pop
stc
cli
es
outsl
popf
aaa
push
sbb
xor
cld
cli
or
xchg
push
jns
sub
xchg
mov
adc
scas
aaa
mov
imull
jg
aas
xlat
mov
push
mov
std
in
sbb
jecxz
push
adcl
fucom
outsl
lea
dec
jecxz
or
popa
mov
cmp
sbb
push
in
dec
and
inc
ffree
add
sub
fcom
ficoms
andl
or
xor
mov
push
mov
shrb
jns
push
cmp
test
aaa
push
insl
mov
mov
push
rclb
rcll
pop
add
test
shll
into
out
fadds
repz
jg
cltd
arpl
addb
xchg
into
mov
add
out
imul
mov
cmp
adc
mov
push
stos
cmc
sbb
cwtl
imul
or
ficoml
xchg
cld
pop
fxch
test
in
inc
aaa
lret
cld
jo
and
stos
and
mov
lods
mov
xor
cld
dec
lods
cltd
rol
add
int3
pop
ret
sub
and
sub
jecxz
fimuls
adc
scas
mov
out
xor
test
scas
push
arpl
int3
daa
mov
aam
test
mov
jmp
lret
stos
cmp
inc
dec
je
and
xchg
jbe
mov
sbb
cmp
cmp
pop
cld
and
aaa
dec
adcl
mov
inc
ficompl
add
mov
and
push
negb
dec
dec
push
aad
pop
das
outsb
insb
xor
addl
stos
fwait
negb
xchg
mov
adc
mov
lods
adc
stos
ret
das
dec
insl
mov
sbb
test
add
mov
sub
mov
sub
or
mov
mov
das
sbb
xor
sbb
and
push
std
rcrb
ss
or
add
leave
jo
stos
mov
mov
mov
leave
jae
bswap
cmp
xlat
call
mov
jo
xlat
imul
fwait
popf
call
dec
pop
rolb
or
mov
sbb
ficomps
in
in
adc
call
sbb
jl
add
pop
int
into
loopne,pn
nop
roll
xor
dec
out
mov
cltd
pop
int
xchg
cmpsb
push
mov
xchg
mov
mov
sti
fildl
sbb
add
sbb
subl
mov
icebp
mov
mov
or
inc
loope
std
xchg
test
xchg
fisttpl
hlt
jae
and
nop
cmp
nop
hlt
xchg
repz
xchg
inc
cwtl
pop
jbe
xor
adc
es
pop
sahf
cli
push
in
je
icebp
dec
lret
cltd
loop
imul
jno
insb
cld
dec
out
pop
and
mov
sarb
push
jp
push
sarl
mov
cmp
stc
test
mov
je
jns
daa
ret
loop
orb
push
sub
inc
cmp
adc
mov
flds
mov
pop
cmp
mov
jo
enter
mov
and
lods
jae
inc
cwtl
mov
aaa
mov
mov
addr16
mov
mov
xor
inc
outsb
add
sub
xchg
jnp
push
jecxz
lods
movsl
cld
mov
imull
and
adc
testl
ja
aas
inc
hlt
xchg
bound
mov
add
sbb
adc
test
cmp
call
push
sbb
mov
and
je
and
inc
mov
mov
jg
mov
popa
and
out
in
clc
je
jge
mulb
inc
test
mov
daa
icebp
xchg
sbb
jmp
loope
mov
fstps
xchg
outsl
push
jo
push
push
into
cmp
adc
inc
test
push
and
cmpl
mov
sbb
dec
push
and
in
clc
arpl
or
jb
fwait
sahf
lahf
sub
sbb
sub
inc
jmp
mov
es
data16
inc
test
mov
mov
into
rcl
movsl
and
push
cli
mov
inc
js
fimuls
or
inc
sub
hlt
std
outsl
push
rcr
int
mov
jmp
jmp
mov
data16
and
and
sbb
jg
enter
mov
push
icebp
neg
bound
dec
das
jg
push
jle
pop
arpl
ja
xchg
cmp
sbb
pop
std
enter
data16
dec
jp
dec
jecxz
jmp
adcl
enter
mov
pusha
pop
cwtl
icebp
shr
jo
sub
scas
scas
mov
cmc
int3
xchg
or
ja
inc
and
push
inc
push
imul
mov
mov
cld
idivl
in
roll
roll
fisttpl
sbb
pop
and
insl
sahf
jecxz
sahf
and
sbb
dec
mov
push
push
and
loopne
and
mov
rcll
pop
in
addb
out
sti
mov
sub
addr16
adc
jmp
adc
ja
xchg
jnp
rcll
cvtpi2ps
add
sub
lcall
xchg
imul
pop
dec
jle
shl
add
adc
jae
jbe
dec
ffreep
adc
dec
enter
push
sub
sub
cmp
sub
or
and
andb
insl
jns
mov
adc
xchg
in
jg
jge
mov
xor
push
adcl
cmp
out
in
icebp
xchg
and
mov
lcall
mov
xlat
jnp
sbb
cli
xlat
mov
push
in
scas
js
sub
adc
adc
mov
dec
inc
lret
out
mov
jae
into
pop
int
lds
sbbl
testl
sub
cmp
adc
sub
in
movsb
les
movsl
mov
mov
inc
push
sbb
pushf
mov
jmp
mov
in
out
stos
and
das
inc
inc
sbb
ret
pop
mov
sbb
add
repnz
sub
and
cltd
adc
or
lds
fwait
loop
jbe
mov
outsl
loope
push
mov
mov
or
push
sub
icebp
and
jne
sti
movsb
in
and
int3
xchg
inc
adc
out
fwait
lods
lahf
adc
dec
mov
adc
jae
add
push
dec
mov
mov
aaa
adc
sbb
push
into
sub
sbb
mov
inc
mov
mov
sub
movl
inc
pushf
mov
and
mov
xor
mov
adcl
push
push
mov
dec
add
push
adc
mov
cmc
and
sub
std
lret
xor
xor
pop
cld
mov
pop
sub
mov
ljmp
xchg
push
test
pop
inc
test
mov
jge
in
xor
ja
mov
add
loope
cmp
adc
cmpsl
fwait
aam
push
ret
push
mov
mov
and
mov
stos
mov
addb
mov
mov
bound
enter
hlt
or
sub
shrb
outsb
cmc
push
pop
testl
lds
mov
mov
or
mov
aam
push
test
mov
jmp
mov
dec
or
shl
std
lcall
out
dec
push
movsl
cmpl
repz
fstpl
insb
mov
jae
hlt
or
iret
mov
and
push
jo
mov
imul
out
arpl
inc
jnp
adc
sub
jl
out
cli
lcall
mov
pop
mulb
or
stos
sarl
add
or
out
dec
in
sahf
mov
lea
xor
adc
add
lret
insb
out
sbb
out
xor
pop
orl
sub
cli
ret
mov
add
cmp
cmpsl
lret
adc
pop
inc
pop
cmp
jne
js
es
xchg
mov
arpl
rcrl
sbb
or
outsl
in
insl
dec
add
mov
or
cmp
hlt
jne
loope
xchg
fsubl
inc
sub
jmp
orl
cmp
xchg
decl
xchg
sbb
cmpl
repz
cmpsb
stos
hlt
cwtl
dec
inc
sbb
fildl
sbbl
arpl
mov
xchg
insb
ja
insl
lock
jns
jg
mov
dec
xchg
ds
push
mov
dec
cltd
pop
adc
inc
or
mov
xchg
lcall
test
mov
pop
xchg
fld
pop
nop
xchg
push
sub
out
cltd
sub
lods
inc
cli
jg
push
stos
loop
call
xchg
jmp
cmpsb
or
mov
test
inc
loopne
mov
cmp
sub
lret
fwait
clc
shr
pop
cmp
repnz
cmp
cmp
add
add
mov
or
std
sbb
and
aaa
push
jns
adc
mov
mov
jmp
pop
pop
adc
push
rorl
std
mov
imul
movsl
pop
and
push
mov
mov
xor
cmpsb
cmp
inc
mov
sqrtps
mov
push
ljmp
aaa
pop
cmp
and
and
scas
add
push
pop
scas
and
xor
data16
inc
imull
aam
fldl
mov
dec
push
lods
jb
movsl
test
xchg
push
mov
dec
or
dec
mov
pusha
test
xchg
cwtl
insl
scas
mov
mulb
and
mov
int3
sub
or
sbb
pop
fildll
push
xor
push
subl
insl
and
shr
fists
push
sbb
sbb
xchg
sbb
in
lcall
adc
dec
pop
scas
push
and
fsts
and
jnp
sbb
mov
int
xor
sbb
xchg
in
mov
lret
pop
xchg
daa
out
adc
out
out
sbbl
mov
ljmp
jl
roll
icebp
insl
jnp
mov
and
jl
adc
lock
ss
pushf
cmpsb
sub
out
lds
not
sub
stc
cmpl
pop
jns
mov
stc
adc
out
orb
jmp
mov
sub
xchg
aam
mov
jecxz
out
xchg
aaa
inc
pop
out
jg
xorl
pop
and
push
ret
nop
add
aas
cmp
lds
aad
lcall
test
out
xor
call
sbb
out
test
xchg
out
out
jl
ds
call
or
xchg
ret
sub
imul
inc
or
clc
add
sub
mov
orb
cltd
in
jno
mov
jae
add
into
adc
cmp
enter
gs
bound
sub
ret
cmp
jo
je
out
mov
in
push
mov
dec
add
mov
stc
lret
xchg
mov
inc
push
shlb
dec
pop
xor
sbbb
pop
lret
jbe
pop
jo
mov
sbb
orl
leave
ret
jne
lahf
push
iret
mov
repnz
mov
repnz
ret
filds
jnp
jo
mov
clc
mov
mov
test
jno,pn
mov
push
adc
pop
incl
sbb
add
popa
divb
push
xor
pop
js
fdivs
push
clc
fistl
sbb
push
call
out
movsl
sti
fmull
sbb
add
std
sub
test
jb
es
enter
ret
push
daa
or
add
cmp
or
and
push
stos
xrelease
in
stos
fiaddl
add
lea
jb
and
fcmovnbe
pushl
or
xor
or
cmc
xor
dec
add
shlb
inc
cs
ret
jp
daa
jbe
mov
leave
iret
dec
xchg
cmp
pop
arpl
movsl
frstor
nop
xchg
bnd
pop
dec
pop
and
pop
repnz
jge
xchg
jle
aad
bound
ror
cs
roll
push
jecxz
jge
stos
jnp
jns
ret
jle
lahf
mov
dec
inc
aad
out
push
gs
and
loop,pt
loop
in
jnp
sbb
inc
mov
push
dec
leave
fwait
mov
fisubs
jmp
mov
pop
mov
xor
mov
cli
mov
imull
xchg
xor
outsb
mov
out
loop
sahf
or
jne
mov
in
movsb
ret
push
push
sbb
std
ljmp
js
pop
loopne
call
adc
fistpll
push
and
pop
sbb
push
push
aad
repnz
mov
xchg
push
imul
or
push
incl
jbe
repnz
popa
xor
jmp
popf
mov
and
pop
inc
nop
ret
test
gs
xor
sub
mov
lcall
push
movsb
sub
icebp
jbe
inc
ja
rclb
repnz
and
adc
push
in
cmp
out
fisttps
inc
int3
xchg
call
lds
gs
ljmp
nop
jp
cwtl
dec
jge
sub
rep
ret
fs
adc
inc
aad
scas
roll
pop
sbb
inc
or
stc
push
push
sbb
xor
pop
mov
iret
push
sbb
aas
sbb
sbb
sbb
dec
inc
into
loope
leave
mov
cmp
arpl
sbbb
sbb
test
xchg
inc
xlat
jne
andb
sub
add
dec
mov
fcoms
sub
adc
in
mov
xor
cli
data16
in
aaa
fbstp
cmp
push
fdivs
movsb
out
mov
xor
sbbb
popf
lcall
dec
push
enter
cmp
xchg
int
test
sub
cmpsb
stos
popf
psllw
sub
push
mov
cmpsl
or
xchg
push
dec
pop
aam
or
sbb
adc
ds
mov
add
fst
shl
inc
mov
fisubrs
aam
push
cs
std
out
jg
roll
aam
jb
idivb
hlt
out
test
jmp
and
sbb
xchg
addl
in
xlat
xchg
sti
cmp
addl
or
outsb
jge
mov
and
addb
sbb
aaa
or
sub
mov
mov
cmc
sbb
sar
pop
sub
fsubl
sub
int
inc
push
xor
nop
xchg
mov
add
mov
lret
enter
push
adc
mov
add
xchg
divl
add
mov
jne
push
sbb
jno
and
and
orb
mov
ja
in
xor
inc
ds
push
adc
and
push
dec
dec
push
adcl
adc
xor
add
mov
fsub
inc
adcl
lods
shl
lret
frstpm(287
arpl
and
and
adc
jmp
and
lds
imul
dec
filds
mov
add
lahf
pop
ss
xchg
cs
jg
push
pop
ret
movsl
and
sub
aam
lahf
mov
lods
xor
adc
jp
mov
and
push
popa
xchg
mov
dec
hlt
add
imul
xchg
in
pop
add
insb
cs
rcll
xor
xor
lret
inc
daa
cld
and
mov
fcoms
jle
push
cld
dec
repz
inc
mov
or
pop
ror
mov
push
out
jb
lcall
adc
inc
jle
inc
xchg
mov
and
pushf
stos
sahf
shlb
mov
push
stos
fs
icebp
test
push
push
xchg
dec
adc
repnz
dec
icebp
xlat
sub
mov
and
pop
or
add
xlat
nop
scas
xchg
jmp
mov
jns
cmpsl
jle
mov
sub
jae
dec
stc
aam
stos
shr
movsb
fsubl
pop
push
inc
gs
mov
or
mov
aaa
mov
mov
popf
in
dec
or
mov
data16
loopne
mov
inc
mov
aad
sti
les
fimull
mov
negb
inc
lock
push
push
add
sti
inc
push
into
jbe
push
bound
into
mov
xchg
push
xor
xor
pop
lods
cmp
cmpsl
stc
jmp
mov
aaa
fucom
daa
les
add
push
adc
cli
in
hlt
xchg
rdtsc
sbb
cmp
lret
test
xchg
mov
pushf
xlat
aad
and
xchg
mov
arpl
daa
push
fdivs
mov
xchg
sub
jo
cmp
push
mov
inc
or
push
je
push
mov
mov
jne
ja
jle
adc
jbe
sbb
loop
add
lea
mov
adcb
lock
cs
cli
jnp
ja
xorl
cmp
leave
pop
push
pop
adc
lret
xchg
cmp
xchg
push
andl
fcompl
pop
sub
mov
dec
xchg
cli
aas
movsb
push
stc
rol
sub
pushf
dec
and
sbb
add
pop
xchg
arpl
mov
in
adc
in
and
pop
pop
lods
mov
mov
adc
or
addb
popa
jg
or
ss
int
dec
push
adc
jo
je
scas
jae
add
add
push
cmp
sti
pop
es
movsl
mov
stc
jno
orb
jle
adc
aas
dec
cmpb
pop
pop
mov
cmp
push
jmp
sub
xor
fsub
xchg
cmp
mov
pop
data16
jp
add
pop
adc
in
je
mov
inc
lret
cltd
mov
mov
lds
mov
lods
test
dec
add
sub
insb
xor
ljmp
popf
es
or
cmc
dec
daa
pushf
cmp
aas
dec
dec
or
adc
movsl
push
pushf
or
mov
mov
in
xor
mov
cmp
xor
movsb
or
enter
dec
push
cmp
cmpsl
outsb
xchg
movsl
mov
dec
adc
sbb
data16
aad
mov
xchg
xchg
sbbl
and
adc
pop
ja
inc
xor
test
pop
shll
sti
fisttpll
fldt
shrl
shl
dec
in
cmp
pop
stos
movsb
jne
cmp
in
xlat
das
call
shl
inc
and
mov
jns
jmp
mov
insl
cmc
mov
jnp
pushf
jecxz
arpl
test
inc
ljmp
xor
xchg
roll
insl
add
subl
out
inc
add
dec
xor
out
jne
imul
rorl
cmp
and
and
jl
mov
je
mov
and
mov
mov
loopne
pop
and
sub
or
and
sub
jae
lahf
mov
fsts
add
clc
xchg
mov
dec
insb
add
outsl
jmp
mov
cltd
out
push
loop
push
or
les
mov
and
andl
pop
or
pop
scas
in
insb
sbb
push
sub
jmp
es
dec
hlt
push
inc
push
sub
imul
push
imul
push
jbe
ds
rcrl
xchg
inc
xchg
push
or
dec
shlb
mov
cmpl
pop
dec
das
xchg
mov
mov
inc
mov
pop
mov
jg
add
rclb
aad
xor
mov
sarb
cmp
push
pop
dec
dec
or
fsubr
pop
dec
imul
mov
outsb
mov
sub
ss
and
cs
data16
cs
cli
fbstp
js
xlat
mov
adc
inc
pop
js
cmpsl
sub
rorb
sahf
adc
xchg
mov
inc
ljmp
or
push
and
cltd
mov
mov
and
sbb
xchg
xchg
inc
shrl
adc
movntps
inc
or
addl
or
sub
xorb
mov
sub
add
loopne
mov
imul
mov
clc
sub
inc
pop
mov
jne
imulb
adc
mov
or
xchg
pop
aas
dec
cmp
ss
cmc
sub
lahf
js
int3
mov
mov
stos
cmp
inc
lods
pusha
pop
movsb
adc
jmp
movsb
sub
xchg
add
fbld
lret
jnp
outsl
ds
xor
leave
arpl
add
pop
lock
ret
cs
loop
enter
pop
inc
pop
out
sbb
mov
sbb
bnd
divb
test
pop
shlb
jg
rol
cmp
lret
rorl
pop
sub
addr16
push
push
pop
pop
fwait
int
and
inc
les
nopl
mov
xor
rorl
inc
daa
or
mov
std
sbb
pop
jg
sbb
js
addl
stos
fnstenv
sub
add
cwtl
std
inc
push
inc
mov
add
jge
sbb
scas
inc
add
btl
lret
jg
dec
xlat
inc
int
shll
add
pop
add
sub
sbb
mov
add
jno
sub
xor
dec
cmp
dec
not
mov
inc
inc
bound
je
inc
data16
test
dec
rclb
adc
mov
cld
sarb
jno
sub
outsb
inc
mov
shrl
lea
stos
add
inc
mov
jno
jbe
ret
or
mov
subl
jle
add
sbb
stos
or
lods
jl
lcall
pushf
in
or
mov
fstl
cmp
mov
mov
mov
popa
in
or
movsb
mov
push
cmp
loope
adc
pop
cmp
and
cs
incl
mov
xchg
jns
adc
and
sbb
in
lahf
jecxz
dec
fwait
add
sub
mov
pop
int
gs
int3
sahf
insl
mov
stos
arpl
add
cs
shrb
jecxz
mov
xor
cmc
popl
lret
fstl
mov
sarl
aaa
inc
in
mov
ret
ficomps
xchg
frstor
aad
push
inc
jne
or
pop
and
push
mov
add
mov
adc
mov
insl
pushf
jle
clc
mov
push
enter
cwtl
leave
sbb
dec
ficoms
sbb
lods
hlt
arpl
lcall
iret
mov
jg
mov
xor
out
sbb
ret
lcall
pop
jmp
test
cld
or
inc
or
cmp
popa
pop
inc
jne
xor
ret
pop
push
les
callw
jecxz
push
push
push
cmc
sbb
cld
pop
sub
clc
arpl
cld
adc
cmc
xchg
cmp
xor
mov
xor
cmp
mov
or
sbb
mov
jle
dec
mov
rcrl
mov
into
cltd
fwait
inc
aas
sub
inc
fucom
and
mov
mov
ja
ljmp
push
call
imul
stc
repz
fstl
xor
int
jae
xchg
jp
notb
mov
cmp
fidivrl
cld
adc
cmp
shll
lea
jb
jmp
cmp
sti
xlat
push
test
ret
cmp
insb
mov
mov
jmp
and
mov
shl
cmp
adc
shll
add
stos
stos
aaa
dec
adc
les
loope
decb
xor
xlat
add
dec
int3
jl
sbb
pop
popa
stos
push
cmp
sbbl
mov
leave
adc
icebp
rcrb
push
push
push
scas
pusha
scas
push
hlt
push
insl
mov
push
mov
pop
and
jp
popf
aad
push
push
xchg
sti
fadds
mov
or
add
mov
push
adc
jns
cld
and
xchg
adc
push
pop
sub
outsb
push
add
cld
out
aad
xor
jne
lock
movsb
sub
fdiv
cmp
das
sub
outsb
jns
test
xchg
pop
add
lcall
or
mov
lea
jns
into
and
shrb
into
jo
repnz
insb
daa
cmpsl
adc
xchg
movaps
test
xchg
pop
jp
jecxz
pop
push
das
lret
dec
ss
ds
sub
xchg
mov
sub
jg
jbe
jno
cmc
mov
std
xor
test
sbb
push
mov
add
push
aad
dec
lcall
cmp
add
cwtl
insl
mov
and
jecxz
sub
pop
pop
push
cmp
mov
and
inc
xchg
ds
stos
dec
jo
and
cmp
xchg
out
cwtl
ja
xchg
insl
es
mov
test
loope,pt
aas
stos
jmp
int
out
test
imul
xor
cmc
dec
sub
int3
or
test
movl
mulb
hlt
movsl
aas
ljmp
dec
mov
cmpsl
imul
hlt
cld
inc
loope
fnstsw
push
data16
adc
xchg
inc
xchg
mov
jns
cmp
in
mov
jmp
dec
fwait
pop
insl
xor
pop
sub
jb
xor
cmp
push
int3
inc
xor
xor
push
fcmovb
scas
sar
iret
cmp
xor
add
repnz
sub
mov
int3
push
jle
push
sub
mov
ja
cmp
cmpb
andb
mov
push
dec
movsb
mov
cmp
icebp
mov
je
jmp
jl
cmp
push
ret
aam
iret
push
movsb
jge
dec
xlat
shl
outsb
mov
jne
mov
popf
and
mov
clc
insb
jae
mov
loop
lods
or
stos
jl
dec
icebp
dec
into
mov
xlat
out
addr16
mov
mov
cmp
pop
ret
push
mov
cmp
arpl
into
stos
xchg
iret
mov
push
mov
shr
fimuls
mull
outsl
out
dec
mov
xchg
cmp
movsl
mov
out
test
or
add
mov
ss
mov
decb
sub
lret
jle
dec
add
and
mov
add
dec
and
add
inc
adc
cmp
movsb
adc
dec
or
cmpsl
fwait
cmp
pop
cmp
cmp
xor
scas
loope
jae
mov
sub
xchg
xchg
out
icebp
dec
das
les
icebp
pop
mov
mov
cmpsb
sbb
adc
and
add
push
jl
jb
pop
push
int
xor
mov
xor
sti
lea
inc
xchg
push
repz
add
clc
fs
fwait
icebp
stc
mov
mov
and
ret
mov
fidivl
push
cld
xchg
jmp
and
sbb
into
lahf
mov
xchg
sub
mov
ss
xor
iret
mov
sar
adc
fsubl
shlb
mov
jns
jo
xor
lcall
or
cmp
out
jnp
push
call
in
mov
lock
fwait
inc
or
push
inc
test
test
dec
mov
out
stos
push
inc
sub
int
lret
test
in
popl
cmpsb
pop
cmp
dec
loopne
and
mov
dec
xchg
mov
es
jb
xchg
mov
jecxz
adc
mov
push
adc
repnz
sbb
push
jnp
ret
int3
ja
aas
int3
ss
out
mov
dec
outsl
cltd
push
push
fdiv
or
xchg
dec
stos
mov
test
mov
jb
adcl
push
cmp
jb
iret
cmp
lods
mov
sub
pop
or
mov
loopne
in
dec
ret
push
or
orb
out
pop
imul
mov
ds
mov
fwait
adc
repz
lds
mov
add
or
jle
shlb
fmull
add
mov
mul
sub
into
mov
dec
lods
in
pop
xor
std
in
pusha
mov
sub
fldenv
dec
test
cltd
sbb
mov
das
sahf
xor
pop
jns
cmp
dec
loop
in
adc
sahf
xchg
test
shrl
mov
cs
xchg
insl
mov
push
jbe
icebp
or
call
mov
xor
aaa
push
fwait
push
mov
mov
xor
ret
sub
pop
cmpsb
dec
popa
xchg
stos
or
xchg
ret
rorl
popa
lds
xor
das
out
dec
lcall
imul
or
jns
arpl
out
dec
jb
or
imul
ds
in
or
daa
icebp
xchg
mov
in
sub
push
aad
cwtl
into
cmp
into
das
int3
pop
dec
pop
out
loopne
lods
xchg
mov
popa
iret
cld
xchg
movsl
es
shl
test
dec
mov
jmp
pop
loopne
pop
fwait
popa
xor
lea
fnstcw
cli
lahf
mov
insb
lret
jecxz
mov
xlat
and
lahf
repnz
insl
mov
fwait
test
lock
ss
es
pop
in
into
aam
jp
inc
jnp
lahf
sub
or
xor
test
test
icebp
es
dec
push
sub
int3
outsl
push
dec
lcall
pop
inc
in
lahf
mulb
fstpt
jns
dec
add
aam
mov
jno
inc
mov
into
cld
pusha
lods
inc
sbb
push
decb
jo
mov
jge
or
or
add
enter
imul
icebp
cwtl
adc
ds
sbb
out
sub
ret
popf
inc
push
sti
es
ja
or
out
cmp
mov
into
adc
testl
in
jno
mov
fadds
lods
and
push
and
xchg
sub
jo
jnp
cltd
add
ret
cmc
fisubs
pop
fsts
mov
dec
xchg
out
add
ret
ds
xor
out
pop
push
adc
dec
adc
jp
add
and
sub
popa
pop
outsl
add
leave
es
cli
sarb
push
pop
enter
mov
inc
mov
dec
cmp
shlb
sbb
add
out
pop
sbb
divb
std
adc
fbld
daa
aad
lahf
inc
lret
jge
jge
push
out
mov
rorb
scas
xor
inc
xchg
xchg
push
pop
loope
cmp
je
mov
cld
lock
fidivrs
shrl
pop
incl
xor
mov
mov
les
sahf
sub
sub
mov
test
jecxz
xchg
popa
jle
push
jnp
std
mov
sahf
js
mov
xlat
lods
enter
sahf
ja
mov
or
lret
js
sbb
hlt
fstps
inc
cmp
psubd
mov
push
mov
icebp
pop
inc
rolb
inc
in
testl
mov
mov
outsl
ret
cmpsl
pushf
lds
outsb
arpl
sub
cmp
jns
hlt
sarl
push
pop
mov
and
in
aas
or
or
cmp
push
rcrl
ss
xchg
test
bound
incl
cmp
inc
dec
jnp
sar
addr16
movsl
jp
mov
lea
jo
aam
pop
fucompp
leave
mov
cs
cmpsl
jl
movsb
mov
jbe
das
sub
roll
sub
rcll
int3
testl
data16
aaa
insb
out
cmpsb
cltd
mov
xchg
mov
jg
test
xor
adc
mov
pop
in
sub
cmp
xor
data16
sub
std
mov
sbb
sbb
pop
nop
rolb
data16
add
push
leave
in
cmpsl
jns
data16
aam
add
outsb
cmc
mov
jne
mov
popa
sub
aaa
lock
scas
clts
adc
mov
sbb
mov
orl
push
test
push
not
mov
mov
xor
pop
xchg
cmp
jecxz
and
popa
mov
jae
push
and
cmpsl
mov
loope
xchg
add
dec
pop
popa
add
cltd
mov
fisubs
repz
repnz
push
rcrb
push
xor
sahf
fwait
xchg
clc
movsb
xchg
fs
js
adc
daa
pop
adc
jns
sub
iret
ja
xchg
js
mov
jno,pn
adc
rclb
cmpsl
pavgw
cmp
lahf
cwtl
cmp
xor
mov
and
aas
repnz
mov
enter
and
shld
mov
out
neg
dec
push
or
pop
mov
pop
and
jne
inc
push
jecxz
iret
dec
ds
dec
and
cli
push
cs
cltd
ds
out
pop
pusha
sub
add
or
ret
mov
es
adc
sbb
leave
icebp
push
add
ljmp
cmovns
int3
andb
lock
or
jl
xor
popa
push
and
jmp
xor
and
in
outsl
cmp
or
ljmp
cmp
mov
lock
dec
je
mov
jne
out
aam
push
sub
mov
stos
jmp
dec
push
call
pop
or
mov
sbb
adcb
sti
orl
lock
rolb
xchg
inc
xchg
notl
jno
int3
test
jnp
xchg
ds
lds
lcall
mov
pop
movsl
ret
sub
push
jecxz
iret
push
ja
testb
ficompl
xchg
push
sti
pop
jp
xchg
aaa
pop
out
shrb
call
and
in
dec
js
das
outsb
or
add
out
daa
out
into
lahf
mov
sbbl
test
popf
mov
cmp
cs
leave
xchg
loope
add
cmc
iret
rcl
pop
lcall
xchg
jnp
mov
test
js
pushf
jae
xor
es
jmp
dec
sub
sahf
loopne
jnp
dec
pop
push
fldl
std
pop
dec
ds
fists
sbb
push
iret
pop
cmpsb
jne
repnz
pop
jecxz
jb
movsb
lods
sbb
ds
sub
je
and
mov
imul
add
test
inc
je
xlat
sahf
xchg
mov
mov
xor
lret
push
sbb
jmp
jb
and
jne
shrl
inc
std
xorl
jne
shll
sahf
popf
push
sub
scas
ds
xlat
fwait
mov
sub
and
aas
push
hlt
or
xchg
add
cmp
add
test
cmp
xchg
es
int3
pop
xchg
push
orl
push
xchg
mov
pop
push
or
sub
mov
out
or
data16
xchg
pop
std
or
pop
out
test
pop
sub
adc
data16
pop
negl
lock
and
dec
xchg
mov
cmpsl
or
aas
cmp
fwait
insb
sbb
pop
stos
pop
jle
or
test
outsl
bswap
rcll
mov
xorl
loopne
dec
lret
aaa
push
pop
mov
mov
jl
add
and
add
sbb
mov
pop
adc
outsl
test
rcl
popa
cmp
fisttpl
vpcmpeqw
rorb
pop
sub
mov
add
sub
adc
sbb
lcall
sbb
dec
and
xor
je
lds
jl
fldl
scas
cld
test
aad
push
pop
into
sub
out
mov
out
inc
ficoml
stos
dec
out
sub
adc
aad
xchg
mov
call
rorb
in
adc
xor
dec
addr16
xchg
adc
xchg
pop
pop
push
les
adc
cmp
testl
ret
sbb
adc
sub
imul
lods
or
loop
in
pop
mov
in
jno
dec
cmp
xchg
inc
insl
out
rcll
fisubl
daa
or
adc
movb
add
jmp
hlt
mov
out
nop
jecxz
mov
lods
movsl
mov
adc
add
fsubrl
movsl
mov
pop
loopne
push
test
add
jge
pushf
cmc
addr16
out
adc
pop
mov
ret
movsl
in
mov
sub
loope
in
inc
js
pop
pusha
or
leave
fidivrl
lock
cmc
int3
inc
stos
cwtl
jmp
enter
jno
imul
inc
jne
sti
sbb
push
mov
pop
push
push
sub
fcmovnbe
inc
mov
in
fs
jmp
mov
insl
leave
andb
notb
sbb
xchg
add
out
mov
dec
pushf
mov
cwtl
mov
sub
jg
shl
xchg
add
dec
jo
push
jae
mov
pop
movsl
arpl
inc
adcb
fildl
cmpsl
psubb
insl
aaa
sub
mov
or
insb
cltd
and
mov
adc
cmpsl
pop
dec
xor
xor
incb
sub
rolb
imul
or
jg
cltd
outsb
sahf
or
loope
fnsave
xchg
or
cmp
fcmovnbe
lods
pop
xor
sahf
movsl
mov
push
or
repz
adc
fstpl
xor
mov
dec
addr16
js
test
add
sbb
lcall
mov
imul
cmp
add
lahf
aas
dec
sbb
aad
push
xor
adc
push
dec
xchg
lahf
adc
sub
icebp
aaa
sbb
lahf
fnstcw
es
lods
jge
fcomp
ljmp
push
mov
pop
lods
pop
fstpl
or
stc
jb
bound
cmp
cld
adc
xchg
sbb
cli
mov
fwait
sbb
push
ret
mov
out
jl
into
inc
mov
push
popa
call
sub
push
out
outsl
pop
pop
mov
icebp
xor
lahf
test
push
leave
pop
ret
push
mov
and
jnp
addl
adc
ljmp
fs
pop
or
movsb
jno
xchg
inc
bound
cmp
adc
popf
std
scas
sbb
ja
jmp
or
idiv
sub
and
pop
iret
icebp
imul
sahf
inc
lahf
jp
out
ret
push
pushw
push
ljmp
mov
cmp
jne
sub
xchg
test
or
push
xor
adc
movsl
sti
nop
movsb
and
daa
sub
cmp
cmp
xchg
push
jg
mov
cmp
ds
xchg
mov
ljmp
xor
imul
pop
mov
cld
addb
and
adc
and
notl
jmp
cmp
mov
jbe
push
out
and
fs
test
xchg
pop
cs
xchg
or
loopne
nop
push
xchg
loopne
fadds
jmp
xchg
mov
ret
pop
add
test
aas
pop
push
out
pop
sub
aad
stos
sbb
adc
pop
ds
ja
jne
xor
or
popa
enter
or
sar
dec
jecxz
mov
stos
aas
mov
test
movsb
psubusw
cs
mov
mov
sti
jmp
les
jmp
imul
