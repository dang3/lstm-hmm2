sbb
add
mov
sbb
push
lret
test
enter
bound
pusha
out
mov
jge
das
mov
pop
repnz
hlt
xchg
das
popl
dec
jne
pushl
roll
mov
incb
xchg
and
out
insl
fwait
inc
shll
adc
shrl
push
in
adc
sub
push
loope
pop
lds
testb
ror
cld
cld
mov
inc
jno
ret
jle
aas
jnp
int3
pop
pop
sbb
mov
dec
jno
js
iret
sarl
test
cld
stos
roll
dec
dec
jl
dec
repnz
xor
xchg
rorb
sbb
and
add
leave
lcall
add
arpl
mov
fdivs
aad
imull
stos
lods
xor
cs
f2xm1
insl
lods
shlb
test
inc
jmp
jg
shl
cs
ret
sub
add
insl
mov
outsb
or
xor
test
dec
xchg
sahf
and
out
stc
mov
sub
dec
ja
psraw
imul
rclb
or
cwtl
push
or
xor
lods
sub
sbb
push
stos
adc
fs
ficompl
jmp
jno
out
cmpsb
int
adc
aaa
xor
sbb
fwait
out
dec
pop
rorl
inc
push
repz
push
inc
lret
ja
mov
sub
cmp
push
xor
mov
cmp
jns
icebp
scas
outsl
les
pusha
stc
int
test
mov
dec
int
adc
push
scas
aam
add
stc
sbb
fdivrl
lret
sbb
xchg
mov
ljmp
jp
inc
ja
cmpsl
das
dec
or
notl
xchg
or
iret
std
je
jno
sbb
dec
out
adc
rcrb
mov
rorb
je
mov
inc
daa
ljmp
in
lret
jecxz
add
fistps
test
out
ss
pop
and
pop
test
jle
lods
hlt
gs
arpl
add
jb
or
mov
push
enter
add
and
fs
js
sbb
and
je
jne
mov
push
xchg
pushw
jg
xchg
pop
mov
aad
xchg
push
fwait
add
sub
sbb
aad
shrb
pop
rclb
xor
pop
movsl
mov
xchg
pop
dec
lock
jmp
ds
orb
movsl
std
loope
mov
mov
sbb
lret
pop
adc
or
pop
dec
push
add
push
pop
pop
sub
lock
gs
cmp
repnz
lock
in
and
inc
jb
mov
cli
fcomps
jg
xchg
inc
adc
loop
movups
fstps
xor
sbb
mov
sub
sub
push
pop
rolb
jle
cmp
lret
ret
mov
fcoml
rcrl
or
adc
mov
lock
xchg
popa
and
inc
adc
inc
sbbb
rol
cmp
divl
xor
sbb
xor
mov
jge
nop
inc
or
mov
adc
in
sbb
adc
mov
and
xor
dec
adc
pop
adc
or
jae
jg
mov
mov
and
jmp
mov
jb
loope
int3
add
jnp
adc
dec
roll
inc
call
dec
mov
push
jns
aam
xor
pop
pop
movsb
mov
inc
mov
xor
or
lods
mov
loopne
nop
les
xor
mov
gs
sbb
jmp
push
xchg
xor
insl
dec
pop
rcrb
sub
stos
data16
sub
hlt
cli
dec
push
sbb
inc
es
push
inc
rcrb
inc
ret
dec
js
daa
adc
push
inc
das
xchg
repz
jns
mov
pop
cmpsl
cmp
call
subb
movsl
jmp
cmp
push
inc
out
xchg
dec
pop
mov
popa
xchg
add
subl
xor
cld
lock
js
aaa
fisttpl
sub
lahf
jmp
inc
pop
adc
cmp
lret
std
movsb
ret
inc
shll
jmp
xor
dec
mov
call
popa
in
jae
ror
pop
iret
lods
leave
dec
outsb
lock
loopne
xchg
sub
mov
mov
push
popa
out
inc
ljmp
int
cmp
jg
push
push
sbb
ja
inc
mov
fisubl
mov
mov
mov
out
enter
sahf
jno
outsb
sub
es
mov
fabs
xorb
cmp
push
idivb
lods
cmp
sbb
pop
fwait
testl
lcall
xchg
pop
sarl
xchg
in
bound
aaa
rcll
pop
add
lods
or
dec
addr16
ret
adc
sub
mov
fimuls
adcb
ficoml
fcmovnb
add
push
jmp
out
nop
lods
outsl
repz
insl
jg
sub
inc
ja
je
lds
mov
push
dec
pop
mov
lods
jl
sub
xor
inc
lds
addr16
adc
shr
cmpsl
or
jl
add
test
add
sbb
filds
sub
lcall
pushl
shll
jbe
mov
pop
sbb
pop
negb
out
sub
jl
lods
sti
int
push
xor
ret
fimuls
xor
decl
sub
cmp
mov
jbe
and
imul
jae
pop
mov
rorl
add
arpl
data16
pop
fs
and
aam
out
adcl
sub
or
mov
aas
filds
adc
mov
jmp
inc
daa
mov
cmp
mov
faddl
and
xchg
movsb
lahf
int
decl
movsl
lock
adc
pop
cmpl
insb
popf
xor
ret
arpl
pop
lock
rcrb
or
shrb
adc
or
orl
mov
mov
jge
imul
xchg
or
mov
sbb
add
sbb
adc
loope
nop
push
sub
lock
fprem1
iret
xchg
push
lock
push
sub
pop
cli
push
xor
or
mov
mov
mov
je
cwtl
push
data16
repz
pop
push
inc
xchg
loop
lret
cmp
adc
or
fwait
dec
aam
pop
xchg
shll
or
mov
xor
dec
addr16
pop
sbb
aam
dec
dec
fisubl
pop
and
shll
outsl
int3
add
loope
fstl
inc
fildll
pushf
lret
negl
mov
stos
add
cli
add
add
fadds
xor
rcl
xor
dec
push
pop
xor
loop
add
push
gs
fsubl
sbb
pop
orl
sbb
mov
mov
mov
push
cmp
fwait
pop
test
sub
fwait
dec
push
mov
push
dec
repnz
xor
mov
or
xchg
xchg
scas
adc
addb
dec
stos
stc
clc
aas
xor
clts
and
sar
movsl
enter
xchg
inc
dec
sbb
push
cmp
push
cmp
cwtl
push
push
andl
jae
inc
mov
push
or
test
jmp
dec
popf
test
ja
lahf
dec
insl
sti
shlb
jae
sub
ret
movsb
pushf
mov
push
cmp
jno
lods
lock
or
push
imul
lds
vpshldvq
fdivrp
pop
pop
pop
xor
testl
push
sub
pop
hlt
jle
and
pop
or
je
gs
rsqrtps
call
sub
mov
popf
cli
fmull
dec
push
push
sbb
inc
push
dec
sarb
mov
cmp
jb
fsubl
lahf
xor
pop
daa
mov
ljmp
into
add
push
daa
lcall
loope
and
mov
xor
xlat
dec
lret
jp
mov
lea
pop
add
data16
orb
orl
adc
leave
leave
fs
popa
scas
jb
mov
jae
add
push
lret
fs
xchg
sti
imul
mov
dec
or
jmp
adc
push
ds
lock
lcall
jb
inc
jl
test
fs
sti
mov
push
cmp
and
std
pop
mov
cmpsb
and
pop
xchg
out
jne
mov
xchg
je
fwait
les
subb
pop
mov
lret
sub
xchg
pop
mov
xor
cmp
inc
and
pop
pop
push
cmp
out
pop
pushf
mov
or
xchg
xlat
mov
and
pop
shl
jecxz
jo
adc
inc
mov
pop
icebp
add
mov
dec
mov
mov
imul
push
dec
testl
push
push
add
sti
sbb
scas
pop
repnz
mov
mov
imul
or
stc
shr
push
adc
cwtl
ret
mov
ret
insb
test
push
and
bound
stos
jne
dec
call
mov
jl
xor
loopne
shrb
inc
sbb
jnp
sub
add
dec
xor
rolb
adc
cmc
lcall
pop
ds
ds
or
loopne
lea
jp
cmc
pop
lretw
or
jp
dec
adc
xchg
adc
lea
or
mov
dec
mov
test
mov
or
lods
sbb
and
and
or
je
or
mov
xchg
outsb
mov
push
xchg
data16
sbb
xor
xchg
xor
cmp
jp
inc
and
call
sbb
cmpsl
mov
push
jbe
int3
or
jno
cmp
jge
mov
enter
test
push
cmpsl
pop
faddl
inc
xchg
fs
and
sub
lret
push
add
mov
mov
add
cwtl
push
repz
cmp
leave
cli
mov
cmpsb
stc
cld
xor
test
mov
add
loope
cli
pop
push
addr16
cmp
xor
mov
das
or
ljmp
add
push
js
js
fs
inc
sbb
mov
xor
test
xor
lret
cmp
test
push
leave
mov
cmp
into
lahf
clc
adc
dec
insl
xor
jge
mov
mov
inc
push
cs
cmp
nop
pop
sbb
mov
adc
inc
lret
xchg
pop
pop
adc
in
fldl
cmp
mov
pop
sbb
imul
inc
mov
fimull
ss
loope
and
iret
push
test
cmp
lock
or
sbb
leave
fs
xor
enter
int3
jp
mov
test
les
mov
loopne
add
fildl
and
notl
add
adc
ja
jle
ret
les
pop
lods
cmpsb
es
sub
push
or
in
sub
hlt
lods
pusha
jo
mov
push
xchg
and
inc
lock
cmpsl
xor
sbb
arpl
pop
mov
xor
xchg
xlat
dec
jp
jbe
push
out
inc
jmp
xchg
je
or
cmp
jg
add
mov
cmpb
shrl
sub
xor
fstpt
push
push
mov
mov
aaa
movsl
add
in
sti
jnp
dec
xor
int3
cmp
add
cmpl
enter
mov
jle
sub
movsb
mov
jmp
pop
aas
pop
jmp
popa
dec
out
es
enter
sti
mov
xchg
and
ja
aad
test
fs
jnp
inc
popa
xlat
xor
xor
mov
iret
fstps
ja
push
out
and
cli
icebp
rorb
sahf
pop
shlb
clc
cmp
mov
xchg
in
nop
nop
or
pop
nop
push
mov
jae
cmp
in
lret
sbb
pop
sub
add
fnstsw
adc
or
add
gs
mov
das
insb
scas
in
clc
aaa
inc
sub
pop
lahf
fstpl
mov
jae
dec
xor
in
lret
or
cltd
pop
dec
lcall
repz
int
in
pop
sbb
sbb
jl
pop
lods
jns
pushf
mov
cmp
lahf
mov
dec
lea
leave
in
rolb
fldenv
leave
lahf
sub
inc
out
scas
pusha
cmp
push
jmp
rsqrtps
inc
xchg
int
sbb
xchg
imul
mov
add
xchg
arpl
dec
mov
divl
lock
rcrl
push
adc
push
lods
pop
fstpt
add
jmp
loope
lcall
aaa
xor
add
xor
dec
in
cmp
fwait
jl
pop
lock
dec
inc
ja
divb
ja
mov
inc
rol
mov
arpl
lret
rolb
icebp
std
out
ja
ja
mov
sti
hlt
xchg
and
jb
mov
scas
nop
sbb
je
popf
xor
dec
imul
xchg
adc
jge
stc
lret
scas
pusha
xchg
hlt
cltd
add
push
adc
and
cmp
jno
int3
and
sbb
int3
inc
lahf
mov
or
jns
jo
sti
lock
pop
inc
pop
fsin
subl
xorl
pop
rcrl
push
rcl
scas
sub
dec
shr
and
pop
pusha
push
inc
cmp
mov
add
js
mov
dec
sbb
and
ss
inc
cmpsb
mov
push
mov
sub
data16
dec
push
push
cld
mov
arpl
dec
aam
loope
pop
je
inc
loopne
dec
sbb
mov
loopne
xchg
insl
je
push
popa
leave
rcr
push
ret
xchg
out
add
mov
jae
pop
imul
insb
ret
adc
fiaddl
data16
fimull
mov
mov
xorl
inc
or
jno
cmpsb
stos
and
jp
out
int
jae
movsb
mov
mov
scas
mov
out
adc
push
xor
jno
lock
and
pop
inc
pop
scas
cmc
sbb
inc
sbb
or
push
add
lcall
out
test
iret
sbb
int
sub
and
lock
push
out
mov
inc
lock
test
add
mov
pop
jge
xor
mov
into
loope
loope
outsb
subb
flds
dec
jmp
add
in
xor
and
sub
add
jne
not
push
and
sbb
push
xchg
xchg
and
mov
fstl
mov
push
fnstsw
pop
inc
mov
mov
sbb
cmpsb
cld
loop
adc
mov
inc
andb
or
push
aad
stc
xchg
enter
or
jb
adc
and
xlat
mov
xor
push
mov
imul
fcompl
pop
cmp
jae
xchg
jbe
stos
push
mov
jmp
mov
lea
cmp
inc
mov
push
inc
in
scas
in
and
pop
scas
nop
dec
pushf
lods
stos
add
sub
mov
jg
push
cmp
scas
cwtl
hlt
lret
aam
scas
hlt
xchg
adc
in
outsl
mov
hlt
aaa
push
sbb
pusha
jl
mov
aam
inc
loop
fbld
or
icebp
cmp
dec
pop
inc
xchg
and
adc
cmpsl
mov
and
inc
mov
add
std
popa
push
cs
dec
sbb
inc
int3
and
xchg
or
sub
lahf
adc
rcl
loope
jecxz
mov
leave
js
sbb
cmp
sbb
jmp
mov
call
xchg
int3
xchg
mov
sub
je
stos
cwtl
dec
bound
dec
jne
push
mull
pop
push
adcl
loope
and
inc
ljmp
inc
std
bsf
fcmovnu
mov
pop
inc
sub
pop
jl
nop
mov
lcall
push
jp
daa
daa
dec
add
cmpsl
decl
mov
dec
stc
lcall
jne
out
pop
push
dec
mov
aaa
xchg
mov
dec
pop
pusha
and
push
mov
popa
mov
subl
lcall
pusha
and
loopne
cmpsl
cmpsb
cmpsb
or
dec
ss
jns
imul
lods
in
lcall
fiadds
mov
dec
das
ret
mov
popa
xchg
mov
int3
test
mov
adc
in
test
stc
mov
imul
add
es
ljmp
push
push
sahf
nop
pop
stc
and
add
leave
xor
push
and
jle
lods
fbstp
adc
mov
mov
mov
adc
ds
lods
mov
jnp
jae
mov
or
lods
xor
adc
out
ss
ss
xchg
fiaddl
fdivl
xchg
repnz
cmpl
adc
outsl
add
add
push
dec
add
and
cld
jle
adc
repnz
imul
dec
mov
sti
ds
clc
and
jo
inc
out
jg
cs
cli
cmp
in
sub
cmp
pop
int
int3
jno
fcoml
xor
jmp
mov
lods
and
jae
cmpsl
in
in
ja
mov
pop
cmpb
and
in
mov
pop
push
subb
pop
lret
rcl
imul
outsb
out
add
jmp
pop
mov
loope
sbb
jbe
test
dec
cmpsl
rol
dec
or
mov
sbb
ret
push
cmp
dec
test
xor
jb
in
xorb
adc
cmp
xor
adc
pop
xchg
sub
pop
aad
mov
dec
data16
int3
clc
push
rcr
push
ds
or
sti
in
sub
outsb
xor
mov
xchg
std
xchg
lcall
mov
insl
push
dec
mov
aas
jmp
jl
outsl
push
lods
mov
mov
arpl
or
pop
lret
std
rol
jbe
mov
jg
jle
lret
mov
jbe
xlat
jg
add
rcrl
xor
in
jnp
scas
ret
pop
pop
push
hlt
cmp
cmpsl
enter
ds
add
push
xlat
mov
mov
cli
sub
jnp
push
stc
insl
jp
outsl
sbb
jbe
stc
aaa
dec
or
cmp
jno
shll
test
repz
cli
fucomp
dec
xlat
xlat
jns
out
mov
sbb
loopne
imul
inc
test
flds
pop
inc
sub
mov
or
leave
jnp
cmp
nop
sub
push
cltd
sahf
pop
mov
adc
repz
iret
ds
dec
inc
stos
mov
rolb
imul
cmpsb
orb
in
xor
ds
sbb
and
push
in
in
sub
inc
mov
inc
jns
pushf
dec
roll
and
shll
jmp
cmp
int3
mov
in
or
sbb
leave
das
and
int
inc
movsb
fldcw
xor
cmp
bound
mov
sarb
test
negl
ret
ret
mov
cmp
pop
rcrb
out
adc
test
bound
ss
jae
inc
leave
loopne
ret
push
xor
cli
inc
push
ret
jl
adc
pusha
xchg
enter
shrb
sbb
cmc
test
je
cmp
loop
mov
xchg
stc
mov
or
ret
mov
adc
mov
stos
rep
sub
sbb
stc
popf
push
pop
aad
cmpsb
and
mov
ret
test
adc
frstor
mov
mov
mov
call
shl
jnp
fsubs
inc
adc
mov
hlt
sub
mov
mov
adc
and
dec
cmpsl
push
inc
pop
scas
mov
cwtl
jno
out
sbb
mov
pop
xchg
cwtl
adc
mov
lcall
daa
jl
dec
sbbl
fwait
xchg
sbb
rorl
dec
imul
mov
jnp
mov
jae
dec
cmp
js
mov
fnstenv
inc
gs
jns
mov
xchg
sti
movsb
pop
cli
icebp
imul
sub
jle
mov
lcall
jae
pop
lds
cmpsb
mov
pusha
adc
xor
idivb
mov
mov
jno
jne
dec
loop
repnz
mov
push
mov
fsubrl
aad
pop
inc
nop
inc
popl
popa
and
pop
jnp
pop
inc
loop
xchg
rclb
adc
lods
clc
pusha
addr16
inc
pop
dec
stos
adc
popa
lock
cwtl
cmc
sbb
dec
push
cmp
into
mov
mov
scas
sub
and
mov
push
jno
jge
mov
sbb
lds
mov
xor
insl
je
xchg
ds
mov
adc
hlt
cli
rcrl
sbb
jno
or
les
or
bound
dec
repnz
lods
or
and
mov
push
mov
cmpsb
enter
movb
test
pop
cmpsl
sarl
sbb
lret
ja
or
int3
push
dec
shrl
and
loope
xor
mov
insb
xchg
add
loope
into
outsb
repz
mov
xor
rolb
inc
in
xor
repnz
rclb
in
stc
loopne
jl
divl
push
jnp
dec
lock
jp
mov
es
and
je
push
cmp
jecxz
idivl
dec
insb
imul
cmp
xor
dec
dec
sbb
repz
sbb
cmp
hlt
mov
add
xchg
cmp
sbb
int3
hlt
inc
add
sub
leave
jns
mov
das
sahf
cmp
cmp
repz
dec
mov
xchg
inc
jo
inc
test
cmc
add
push
outsl
insl
imul
push
rcr
jl
test
scas
lea
cld
mov
jnp
data16
xlat
fs
mov
push
add
push
ret
mov
shl
scas
fisubs
pop
sahf
cmpsb
insl
xchg
jge
xor
mov
jno
ds
xor
in
loop
mov
loopne
jb
dec
les
shlb
push
aaa
pop
aam
lock
jmp
imul
or
mov
adc
sub
adcl
mov
aas
hlt
int
cmpsb
jp
test
aam
in
fcomps
xorl
inc
mov
loop
fildll
push
add
push
dec
repz
jns
sub
ret
ret
sub
dec
addl
jne
push
mov
aad
dec
outsb
xor
inc
orb
adcl
inc
mov
adc
push
cmp
cmp
insl
stos
xchg
clc
xorb
call
mov
lds
arpl
insl
xchg
mov
dec
fstpl
test
push
dec
dec
mov
insl
js
lret
clc
int
fcomps
lods
jl
mov
dec
xor
pusha
jno
ret
cmp
xchg
cmpb
pop
inc
cs
dec
push
or
movsl
xor
repnz
popa
imul
pop
popa
push
pop
jne
xchg
adc
int
pop
pop
and
cmpsb
orb
mov
inc
das
jle
inc
lret
sqrtps
mov
xchg
pushf
xor
cmp
cmp
sbb
dec
les
pop
rorl
bound
cs
cmpsl
push
add
push
inc
loope
xchg
stos
shr
fildll
nop
jmp
adc
mov
std
pop
sbb
sub
dec
mov
in
call
adc
icebp
xor
sbb
cs
jno
add
or
jg
adc
and
test
lcall
in
in
sbb
cmp
or
jp
push
cmp
pop
sti
sub
shr
and
insl
mov
cs
aas
pop
and
xchg
test
test
sbb
mov
or
adc
sete
cli
aad
jge
dec
ret
mov
mov
and
inc
arpl
rorb
mov
mov
sahf
data16
int
dec
mul
cmp
push
aam
push
sbb
mov
sub
lock
add
into
xor
jmp
jno
jnp
gs
dec
cmp
mov
push
in
lret
in
std
mov
imul
add
in
sbb
xor
gs
fwait
sbb
xor
jg
add
stos
test
enter
inc
jns
jl
inc
xchg
sub
push
rclb
clc
lcall
or
pop
xchg
jbe
stos
addr16
jmp
mov
pop
mov
test
mov
adc
adc
mov
cwtl
fists
mov
xor
fwait
jp
std
aad
addr16
jbe
and
roll
pop
in
int
jl
mov
lcall
test
xchg
xchg
or
lock
out
ja
push
addl
jns
cli
int
test
nop
inc
enter
sarb
inc
outsb
mov
xchg
daa
inc
scas
mov
xor
mov
aam
mov
pop
je
push
out
adc
loopne
bound
or
inc
test
mov
cmp
adc
jbe
out
fs
jg
aam
gs
adc
push
sbb
adcb
add
cmp
xor
aad
inc
mov
mov
sarl
adc
mov
sti
stos
adc
inc
sub
pop
gs
sub
scas
imul
cmpsb
imul
out
cltd
nop
ljmp
jp
and
dec
clc
xchg
jnp
sub
gs
add
and
subb
mov
repz
lods
rorl
jmp
cmpsl
cmp
or
hlt
ljmp
das
loopnew
test
mov
push
add
insl
notl
pusha
dec
js
sbb
jmp
enter
subl
mov
cld
test
ljmp
hlt
or
cltd
jne
cli
sarl
aas
fisttps
fmull
push
inc
loope
lods
inc
mov
out
mov
push
mov
call
stos
mov
movsb
pop
pop
dec
loop
cmp
shrb
inc
inc
adc
jb
adc
adc
test
xor
stos
test
xchg
std
and
das
sti
jp
push
jmp
sub
push
dec
xor
add
aas
push
vaddss
dec
mov
mov
stos
lds
es
lds
lods
sbb
mov
xchg
pushw
test
adc
mov
push
xchg
nop
test
add
cmpsl
aad
pop
movsb
outsb
stos
mov
fildl
jnp
jne
push
xor
jno
cmp
cmpsb
add
sub
jg
jg
outsb
push
pushf
loop
test
xor
enter
xor
add
adc
add
repnz
push
mov
int3
xchg
sbb
pop
inc
inc
leave
es
mov
popa
subl
jmp
dec
repz
movsl
fcomps
cmp
sbb
xor
adc
aam
mov
xor
lret
push
ret
lods
aas
mov
cmp
negl
movsl
ret
push
imul
fldt
adc
into
cwtl
jp
lds
insl
out
cmp
mov
bound
jg
mov
jg
and
or
xchg
cwtl
xchg
iret
jbe
loop
aas
fwait
pop
xchg
test
lahf
imul
pop
xchg
xchg
cmpb
and
inc
adc
jns
fimull
xchg
cli
sub
pop
rcrl
jne
cmpb
jno
pop
dec
push
adc
xor
fsubl
mov
mov
test
adc
xchg
xchg
addb
and
or
movsl
imul
push
cmp
xor
mov
outsb
push
psubb
fucomi
xchg
sbb
add
xor
xor
pop
incl
add
iret
das
fisttps
arpl
test
out
cmpsb
cltd
xor
xorl
leave
hlt
in
lods
pushf
mov
outsb
or
fwait
cltd
and
mov
cltd
dec
fadds
and
loopne
arpl
cli
out
mov
dec
lods
loope
subl
rcll
clc
pop
cmpsb
xchg
jnp
scas
cmp
xor
mov
addr16
xchg
inc
pop
xlat
adc
gs
dec
or
mov
sbb
imul
fmull
sti
push
std
push
ljmp
cli
push
sbb
push
jb
cs
xor
push
xor
aas
neg
popa
dec
pop
cmp
pusha
xchg
pop
sub
push
add
xchg
mov
scas
nop
es
pop
lock
xchg
enter
sub
out
mov
into
cld
into
pop
test
icebp
mov
sahf
add
adc
repz
sub
sarb
xchg
sub
jno
mov
xchg
addr16
fs
mov
jne
mov
push
add
stos
sarl
aaa
out
xchg
sub
and
pop
adc
lret
pusha
adc
jbe
jle
mov
or
stos
jmp
cmp
xor
inc
cmp
ss
or
inc
pop
ds
xchg
mov
imul
hlt
mov
in
dec
sub
mov
mov
adc
push
fsts
jbe
xor
rolb
and
adc
pop
mov
adc
stos
mov
fisttpll
nop
clc
loope
data16
fstps
add
jbe
iret
push
out
sti
shll
adc
inc
fcomps
push
aaa
dec
add
nop
pop
mov
lret
push
and
inc
jb
mov
xor
cli
mov
cmp
mov
sarl
add
and
mov
cmpsl
outsb
insl
cwtl
gs
imul
jns
pop
jnp
xchg
pop
or
adc
adc
pop
outsb
sub
lret
shlb
push
dec
std
or
add
js
sbb
sub
sbb
popa
push
jne
jmp
aas
call
or
fwait
mov
lret
push
inc
or
cmp
xchg
mov
adc
mov
sbb
sbb
sub
faddl
shlb
into
int
popa
xchg
arpl
ret
push
mov
repz
xor
sub
aas
xor
mov
cmp
jmp
popa
lock
fs
push
mov
pop
stos
out
movsb
and
aad
or
push
adc
popf
sbb
roll
js
pusha
hlt
pop
stos
lret
sbb
jmp
stos
push
and
mov
dec
movsb
adcl
sub
les
or
incb
jo
inc
jb
outsb
icebp
insl
and
int
stc
fidivrl
lret
pop
imul
inc
loopne
mov
mov
daa
mov
daa
les
aam
ds
out
dec
pusha
xor
xor
ret
pop
xor
adc
lret
mov
xchg
or
aad
das
push
test
xor
ret
pushf
int3
addr16
push
imul
fwait
scas
pop
mov
sub
loop
and
aaa
xor
fdivl
sbb
cmpb
lret
jno
jle
jb
mov
xchg
fwait
ret
sbb
fldt
mov
jne
stos
sbb
mov
lods
xor
xchg
jge
push
loop
fsubrl
lret
inc
or
mov
inc
vpshuflw
jne
pop
push
imul
xor
popf
and
sub
mov
cmpl
hlt
lods
or
out
fsubs
int3
xchg
loop
push
fcompl
cmp
movsl
dec
cmp
fmul
xor
ljmp
imull
cmp
jns,pn
jbe
pop
movsl
jmp
test
fs
stos
nop
dec
out
push
pusha
xchg
or
dec
and
adc
adc
iret
inc
addl
mov
enter
or
mov
xchg
push
notl
mov
aad
jne
push
in
xchg
mov
mov
mov
lds
daa
inc
out
in
adc
pop
mov
imul
cmp
lea
into
push
lcall
mov
das
neg
jnp
xchg
out
xor
cmp
int
push
bound
jge
xchg
adc
scas
push
clc
dec
movsb
pop
cld
xchg
sbb
lcall
sub
mov
adcl
scas
cmc
aas
mov
pusha
cmpsb
adc
sub
rcl
lods
mov
enter
sub
mov
negb
jecxz,pn
xlat
aas
inc
jno
mov
lea
rcl
push
or
leave
outsb
outsb
bound
push
jp
mov
push
push
sar
adc
lds
pop
push
repz
fbld
mov
loope
dec
fldl2e
dec
ret
sub
popf
inc
adc
rcr
sahf
pop
aaa
cmp
fdivr
or
in
mov
push
mov
das
inc
imul
les
call
lea
orl
sbb
cwtl
dec
sub
cltd
sti
jae
mov
je
xchg
cmp
jbe
cmpsl
jbe
mov
leave
in
aas
xchg
stc
jg
fsts
in
or
out
xchg
subb
call
mov
ret
or
mov
mov
insl
fdivrl
push
adc
xchg
push
stc
pop
jl
mov
aaa
cltd
hlt
cmp
test
inc
cmp
int3
fldl
mov
ret
add
jmp
mov
or
stos
xor
mov
in
inc
xor
jg
mov
pop
repz
cmpl
mov
cli
ss
and
mov
or
mov
fldl
sub
push
loope
lods
das
push
mov
mov
push
mov
jmp
push
and
int3
xchg
pop
jne
push
test
mov
push
in
jg
and
adc
xorb
and
push
mov
mov
jecxz
jle
shlb
pop
stos
pop
aad
sub
dec
cs
ret
cmpsl
inc
push
jae
aas
rclb
sbb
jle
mov
je
lods
push
fmull
jnp
sti
jmp
push
shlb
and
je
pop
sbb
xchg
sarl
test
inc
xchg
sub
jecxz
cmp
jnp
push
pop
or
adc
leave
dec
xor
mov
stos
or
clc
insl
inc
sub
cltd
dec
and
dec
lock
mov
push
inc
pop
xor
std
cmp
pop
stos
movsb
dec
push
inc
fwait
inc
mov
dec
or
fidivs
mov
inc
icebp
idiv
pusha
test
aam
xor
test
lea
pop
andl
xor
push
pop
sub
das
pause
imul
sbb
nop
jns
or
push
mov
inc
fs
aaa
add
jne
leave
shll
lea
dec
inc
xchg
mov
clc
aas
jge
xor
and
in
out
pushf
movsb
push
inc
enter
mov
rclb
or
shr
das
sti
dec
sti
rorb
lahf
dec
popf
pop
mov
mov
in
fnstsw
xchg
adc
cmpsl
insb
or
adc
call
jle
movsb
aam
mov
mov
enter
pop
push
or
mov
fists
cmpsl
xor
mov
rclb
fcmovnu
cltd
sbb
xchg
cmp
mov
jecxz
xor
dec
xor
int3
add
push
mov
sti
inc
int
loop
cmc
rolb
xchg
aad
fldenv
pop
xor
or
xchg
sbb
arpl
inc
mov
or
nop
movsl
sub
loope
pop
hlt
aas
sub
inc
insl
push
adc
sub
pop
fbstp
add
stos
fsubl
xor
test
lds
fisttpll
shll
mov
ljmp
arpl
push
and
fistl
stc
cmc
sub
mov
push
xor
outsl
aas
or
mov
dec
push
pop
insl
sti
xor
jle
pop
imul
xor
in
repz
icebp
xor
cmpsl
sub
int
adc
pop
rclb
sbb
stos
je
push
pop
add
pop
in
into
ss
mov
ss
sbb
lret
push
ljmp
es
xor
divl
bound
lahf
dec
in
sub
sub
movsl
push
cld
and
and
popf
mov
in
cmp
sub
xor
adc
pop
mov
and
push
dec
mov
cltd
push
adc
and
sbb
andl
push
cwtl
outsb
dec
inc
and
fld
cld
repz
xlat
sti
and
ret
aas
fisttpl
ss
inc
and
pop
adc
test
stc
test
pop
stos
dec
push
lods
fwait
movsl
xchg
add
xchg
test
sub
inc
xchg
je
imul
sbb
addb
jp
add
sub
adc
cltd
out
decb
scas
push
add
adc
pushf
fcmovnbe
es
int
and
mov
hlt
aam
jo
pushf
cmpb
xchg
and
sar
xchg
sub
test
iret
mov
jg
pop
movsb
je
ret
sbb
negb
mov
push
adc
and
pusha
aas
cmp
call
in
cmp
lcall
scas
push
insb
fwait
stc
pop
je
out
jae
aaa
movsb
es
or
leave
fisubrl
pushf
sub
aam
out
push
cwtl
jecxz
dec
sbb
add
cmp
xor
in
mov
sahf
lds
add
icebp
mov
pushf
cmp
jo
jle
imul
sub
dec
jo
mov
jge
inc
ljmp
cmc
dec
fiaddl
push
sub
movsl
dec
sahf
sbb
out
fiaddl
xchg
adc
inc
jl
insb
add
in
mov
mov
jge
negb
outsl
cmp
and
loopne
filds
pop
mov
ja
inc
sub
fldt
inc
and
subl
enter
pop
xor
ss
dec
orl
adc
popa
pop
push
nop
out
inc
dec
and
push
pop
mov
out
pop
mov
mov
scas
test
adc
test
shll
stos
lods
sti
aam
jmp
xor
into
aaa
imul
mov
xor
loop
dec
jnp
sbb
pop
insb
loopne
pop
das
xchg
sarb
iret
pmaddwd
fwait
lcall
mov
in
jmp
adc
clc
pop
inc
dec
and
inc
loopne
adc
arpl
clc
push
pop
push
fldenv
out
mov
out
mov
inc
dec
xor
lret
outsb
jno
sbb
insb
or
xchg
inc
inc
jmp
push
mov
push
push
ds
and
cmp
inc
fs
jle,pt
or
and
mov
adc
stc
cwtl
loop
sbb
mov
jmp
lahf
dec
sbb
gs
aas
clc
mov
cmpsl
xchg
inc
mov
sub
add
in
test
jnp
mov
add
outsl
xor
testb
enter
insl
gs
pop
xchg
pop
shll
push
fxch
addr16
push
pushf
shrb
fcoml
cld
test
mov
push
jno
insb
lret
mov
je
push
inc
dec
daa
sti
adc
repnz
push
inc
aaa
aaa
add
mov
xor
aam
cmp
and
ljmp
pop
mov
lods
mov
imul
test
mov
int
loop
push
mov
pop
push
int3
jno
and
lcall
and
mov
fldln2
scas
jbe
xchg
je
cmpsb
in
les
rolb
xchg
xchg
fxch
addr16
cmp
lcall
pop
push
stc
ret
mov
dec
icebp
xchg
sub
arpl
lret
insb
fadd
jecxz
add
and
jmp
es
sub
sub
jge
ljmp
cmp
mov
push
pop
jmp
out
call
cmpsb
add
lods
jbe
cmp
data16
jb
aaa
lods
jbe
add
int3
aas
test
push
sub
inc
push
imul
fisttpl
das
pop
hlt
or
cmp
mov
dec
sbb
adc
jae
daa
cmp
in
lds
roll
push
adc
mov
mov
es
ja
aad
and
sarb
mov
sahf
repz
es
dec
loope
ja
cwtl
insl
inc
mov
push
popf
addr16
push
lds
and
and
mov
sub
dec
xor
xchg
sti
out
cmp
mov
dec
jno
movsb
in
pop
fisttpll
or
in
jno
dec
mov
shrb
shl
movsl
sti
mov
enter
fwait
jne,pt
icebp
pop
ret
dec
fsubrs
pop
out
pop
out
test
jge
mov
fsubp
or
lds
sbb
orl
push
add
push
lods
mov
outsb
mov
mov
repnz
insl
sti
sbb
jbe
push
gs
xchg
adc
and
mov
loop
or
lods
jb
pusha
lss
aaa
cmp
inc
mov
pop
inc
out
jbe
sub
push
xchg
rorb
negl
pop
mov
xchg
push
aad
lock
test
inc
cmp
cmp
repz
jle
push
mov
movsb
xor
dec
cmpsb
ja
jns
sub
dec
jmp
jo
stos
mov
gs
cmp
push
sub
fwait
adc
out
push
into
xchg
jecxz
pop
cmp
test
jg
mov
scas
or
jns
outsl
icebp
loop
inc
adc
xchg
arpl
lret
mov
push
push
and
cmc
sub
movsl
mov
push
popa
test
xchg
mov
adc
or
xor
and
int3
cmp
mov
imul
sub
stc
dec
imul
call
cmp
sbbb
mov
xchg
ret
adc
jp
rorl
mov
pushf
pop
push
sub
lods
ds
or
sti
loopne
negl
push
inc
cmp
ficompl
mov
and
in
jb
fcoml
ret
mov
push
into
jne
sub
jno
es
ret
nop
push
jne
incl
mov
jae
mov
shll
movsb
pop
loopne
clc
mov
sbb
addl
pop
sub
lret
push
push
roll
xchg
pop
push
repnz
stc
aad
imul
scas
mov
negl
leave
add
dec
popa
lods
mov
scas
push
test
lret
gs
and
or
loopne
cltd
mov
pop
mov
jbe
fistl
jle
adc
rorl
jo
push
out
or
popa
mov
dec
mov
testb
sahf
out
popf
pop
popf
cmp
test
fcmovbe
mov
adc
jmp
xchg
pop
pop
cld
test
adcl
lea
xchg
pop
nop
pop
xchg
daa
cmc
inc
push
jbe
push
mov
push
aas
jge
push
sub
mov
push
fs
sbb
outsb
or
mull
aad
push
adc
out
sbb
lock
jae
pop
jnp
dec
sbb
lret
les
test
push
push
enter
stc
ljmp
inc
pop
nop
dec
dec
mov
sub
cmc
adc
div
jecxz
xchg
or
cmp
mov
sar
test
mov
sub
mov
pop
das
int
mov
push
leave
xor
cli
repnz
aam
jnp
lock
jno
jnp
mov
mov
movsb
lods
std
xchg
sti
sahf
add
aaa
lock
iret
mov
mov
fdivrl
sbbb
outsb
pop
pop
jb
rcrl
adc
mov
xor
dec
push
add
daa
mov
call
icebp
std
push
pop
js
stos
into
xor
pop
scas
or
mov
int3
pop
inc
pushf
add
gs
cmc
xchg
addr16
pop
pop
inc
xchg
test
movl
sbbb
dec
jb
shrb
test
pop
std
jmp
inc
pop
dec
or
xchg
push
icebp
idivb
or
pop
scas
cmovb
cmpsl
dec
sahf
lcall
mov
dec
push
inc
out
repnz
jns
pushf
dec
sbb
outsb
dec
js
pop
or
daa
fwait
mov
lret
cmp
adc
xor
jb
test
dec
push
sbb
call
aas
stos
ret
adc
push
test
scas
mov
mull
jecxz
dec
pop
push
inc
add
fs
add
scas
shlb
repnz
xor
mov
fldenv
sub
gs
or
arpl
sbb
lock
hlt
xchg
fwait
loope
test
fsubs
adcl
rep
mov
cmp
lcall
jl
mov
imul
adc
ret
mov
mov
mov
aad
enter
jmp
push
pop
inc
add
pop
mov
push
lods
and
hlt
add
push
faddl
notl
inc
jne
in
push
movsl
push
leave
jg
pushf
ja
test
insb
fistl
jno
dec
jb
mov
addr16
movsl
pop
scas
fnstcw
jl
xchg
lods
push
pushf
push
pop
pop
jae
or
mov
out
dec
pop
dec
movsb
ljmp
cmp
fimuls
cmc
sbb
iret
push
jg,pt
je
repnz
repnz
je
js
mov
xchg
clc
std
movsb
shl
xchg
xchg
mov
adc
push
call
xchg
cmp
jns
ljmp
shll
mov
xchg
mov
dec
mov
rorb
clc
std
inc
sti
call
notl
shrl
cs
inc
out
movsb
aad
test
add
lahf
sub
push
adc
cmp
cld
pop
xchg
cmc
pop
shll
dec
dec
daa
adcl
cmp
pop
bound
sbb
movb
int3
mov
enter
mov
clc
mov
int
lods
gs
pop
in
dec
pop
aad
ljmp
cltd
dec
mov
push
loope
std
sbb
jge
mov
xor
xlat
and
call
in
loope
imul
adc
out
pop
clc
pop
shl
push
iret
xor
aad
ja
test
and
cmc
repnz
jo
and
push
out
add
or
mov
add
xchg
jne
roll
or
stos
xchg
xchg
repnz
mov
pushf
icebp
xor
sbb
jle
fcomip
pop
xor
jl
sbb
dec
xor
aam
enter
mov
dec
in
add
cmpsb
sub
mov
push
cmp
out
stos
add
incl
stos
mov
push
addl
inc
andb
cmc
cli
ds
test
mov
cmp
add
lahf
xlat
push
icebp
orb
mov
dec
pushf
dec
rcll
clc
ljmp
sahf
testl
ss
add
rcrb
lods
popa
es
jne
push
rolb
jp
stos
andb
xor
fstl
in
mov
movsb
sub
inc
ljmp
out
test
ret
lret
push
in
push
xor
cmp
loope
xor
inc
pop
ss
cmc
sub
adc
in
jmp
ds
data16
mov
movsl
cld
dec
mov
jle
xchg
or
pop
mov
and
jp
fbld
xor
scas
test
mov
xor
movzwl
and
jecxz
push
arpl
in
shll
pop
dec
cmp
dec
test
mov
dec
adc
popf
push
pop
cld
loop
xchg
push
and
adc
ljmp
aaa
cmp
mov
mov
dec
xor
or
je
xchg
std
inc
sbb
mov
cmp
pop
mov
pushf
push
add
jl
pushf
lret
pop
test
mov
fdivrs
stc
inc
orb
jmp
fimull
add
sub
mov
mov
xchg
cmp
xrelease
xlat
in
or
fisubrl
jb
insb
xchg
push
mov
insl
inc
or
ds
sub
in
jge
cmc
sub
shll
cmp
mov
int
xchg
rorl
shl
pop
pusha
dec
sub
adc
cmc
dec
aad
lret
mov
repnz
push
mov
cmc
in
inc
nop
xor
cmp
adcb
jg
xchg
mov
inc
pop
jmp
inc
push
flds
mov
inc
cmpsb
stc
scas
jl
sarb
popa
jge
clc
inc
push
cli
push
pop
sub
stc
cwtl
movsb
adc
or
inc
movsb
shll
or
cmp
push
pop
cmpl
pushf
les
nop
xchg
jmp
or
mov
or
jb
cwtl
lret
bound
xor
int3
sub
lock
mov
jne
mov
pop
cmp
lret
movsl
sub
int3
xchg
data16
and
cmp
in
mov
push
inc
dec
sbb
repnz
pop
xchg
in
xor
jmp
int
cld
add
xor
aam
imul
aam
arpl
cmp
jne
ficoms
adc
xor
jns
cmp
mov
mov
jmp
lods
xchg
pop
pop
clc
inc
jne
mov
fsubrl
push
or
jbe
xchg
mov
add
outsl
and
xchg
xor
jno
sub
popf
movsl
lods
pop
andb
imul
aaa
in
rcrl
dec
mov
cmpsb
cmpsl
cmp
stc
test
idivb
mov
mov
int3
push
and
adc
sbb
jbe
lock
jnp
and
movlps
hlt
fstp
out
decl
xor
bnd
push
mov
dec
mov
jb
jmp
pop
sbb
dec
push
fdivrs
mov
fdiv
insb
shlb
idiv
jae
idivb
das
jg
imul
jmp
sub
xchg
lock
shr
into
jo
xlat
jg
inc
push
into
mov
xor
fldenv
outsl
arpl
nop
in
fisttpl
pop
lcall
into
xor
fwait
jle
nop
push
outsb
int3
pop
je
mov
lret
and
dec
cmpsb
fimuls
xor
jae,pn
adc
mov
std
pushf
cmp
ss
lds
fsubrs
dec
lock
and
in
lods
xor
fs
out
xlat
add
jne,pt
adc
test
push
or
test
xchg
filds
sbb
cltd
ret
push
cmp
movsb
cli
jbe
mov
lock
jne
inc
add
lret
fisttpll
inc
pop
dec
in
lahf
nop
lret
mov
push
pusha
inc
cwtl
out
push
jbe
std
cwtl
cmpsb
fisubs
pop
jp
rclb
gs
movsb
movsb
fsub
and
or
mov
sarb
and
add
add
mov
lcall
sahf
call
xor
ret
lret
popf
xchg
sbb
mov
dec
push
dec
adc
sub
push
or
test
enter
pop
xchg
fwait
cmpsb
add
popa
int3
iret
mov
dec
imul
sbb
cmpsl
std
push
cwtl
imul
ret
dec
dec
mov
jl
into
cmpsl
push
fisttpl
push
cmpsb
lds
dec
dec
adc
sbb
pushf
scas
mov
sahf
loop
dec
adc
gs
decb
cmpsb
ss
xchg
ss
sbb
loope
sub
das
mov
mov
jo
sub
adc
inc
lret
rcr
xchg
mov
fdivs
pusha
mov
mov
insb
pinsrw
cmp
pop
jae
stos
add
mov
std
mov
fcoml
leave
in
lea
aad
pop
ljmp
mov
out
inc
lods
rep
movsl
pop
inc
lock
bound
jmp
mov
mov
cmp
inc
inc
jl
out
push
ljmp
inc
dec
cmp
mov
int3
xor
mov
cwtl
xor
out
dec
xchg
aad
test
test
lea
cli
push
dec
push
ja
mov
test
addr16
xor
add
test
mov
xchg
jae
fisubl
lea
dec
ficoms
movsl
xchg
mov
int
js
sbb
mov
adc
mov
lea
mov
xor
loope
in
xor
inc
cmp
mov
mov
jg
out
imul
push
pop
lret
ja
lcall
scas
add
dec
pop
inc
inc
mov
ret
orb
inc
test
das
repz
xchg
push
cltd
int3
pop
clc
dec
in
in
in
les
dec
inc
sbb
sti
outsl
mull
mov
dec
mov
jns
sub
leave
outsb
inc
aaa
jo
loop
mov
aad
int
xlat
mov
scas
cs
mov
push
and
or
push
faddl
test
inc
adc
out
pop
bound
pushl
dec
lahf
push
lods
aad
rcr
mov
sub
pop
adc
push
cld
add
sbb
call
mov
test
push
lret
mov
jle
andl
hlt
adc
xchg
dec
jg
notl
aas
outsl
push
or
icebp
mul
sarl
xchg
sbb
test
shl
sbb
lahf
dec
xchg
mov
sahf
in
and
mov
mov
je
pushf
inc
int
or
sub
jmp
lods
jmp
jge
xchg
pop
lahf
xchg
add
in
cmp
dec
xor
or
stc
push
and
dec
mov
popf
sbb
adc
shrl
pop
mov
jnp
je
cmp
addr16
jo
jp
mov
lods
hlt
hlt
jecxz
cltd
nop
push
xor
fldt
jne
cmpsb
jb
cmp
mov
insl
xor
or
mov
xlat
pop
mov
push
loop
pushf
xchg
mov
scas
jmp
push
fwait
arpl
or
mov
xor
mov
mov
sub
add
rolb
stc
scas
adc
adc
test
and
add
mov
dec
lret
or
icebp
and
call
out
int
jg
les
sub
jae,pt
fwait
cmc
int
xlat
das
jl
cmp
mov
in
rorb
dec
mov
xlat
dec
fwait
test
jle
scas
out
js
lods
mov
arpl
mov
fldt
push
sub
dec
xor
sub
pop
sub
mov
inc
mov
cmp
scas
mov
cmp
stos
xchg
adc
sbb
xchg
cltd
pusha
xchg
adc
jge
sub
jne
mov
ds
fwait
movsl
jmp
mov
out
jmp
popa
xor
das
mov
jg
jo
sbb
push
aas
or
xchg
bound
mov
imul
add
sbb
add
mov
pusha
sbb
pushf
mov
add
ja
cmp
inc
push
stos
mov
xlat
test
lock
push
mov
cmp
xchg
pusha
mov
mov
xor
shr
pushl
push
rorl
push
jne
xor
sub
fiadds
popa
loopew
bound
xor
sbb
adc
sbb
xor
into
imul
and
ss
push
dec
les
call
xor
je
test
orb
push
mov
sbb
jge
stos
mov
mov
pop
xchg
mov
fnstenv
test
jp
iret
fstpt
mov
inc
out
cmpsl
jbe
pop
outsl
dec
cltd
clc
inc
cmpsb
mov
jo
rorl
jge
aam
sub
and
push
and
cmp
sub
dec
lret
push
into
mov
sub
jge
out
or
inc
pop
icebp
out
jns
adc
mov
xor
xchg
out
mov
xchg
mov
sub
and
sub
sbb
xchg
or
and
lahf
out
shrb
xchg
adc
xor
mov
pop
gs
jno
pop
fnstcw
pusha
mov
sub
lods
out
push
fstps
loopne
roll
dec
sti
dec
dec
adc
jo
xchg
add
addr16
rcr
dec
pop
rclb
stos
sbb
inc
cmp
sub
xchg
sub
xchg
mov
cmp
lret
xchg
cltd
jnp
test
push
popf
adc
xor
shll
loop
ret
add
pop
jnp
dec
add
xchg
dec
es
mov
lret
fsubrl
sub
pop
or
mov
addb
jp
dec
or
imul
mov
leave
mov
ds
xor
xchg
les
xlat
fmulp
dec
xchg
xlat
add
push
sbb
aaa
add
cmp
and
lds
fcomps
push
and
and
imul
mov
mov
sbb
int
aad
add
ljmp
sbb
cmp
mov
inc
mov
and
adc
dec
and
mov
mov
fnsave
and
jae
mov
adc
adc
and
xchg
mov
mov
pushf
mov
dec
jg
fnstcw
mov
jmp
fldcw
push
adc
inc
jl
and
xchg
pop
insl
test
or
aad
inc
adcl
popf
jecxz
out
ret
sub
sahf
push
int
ja
jmp
bound
pop
jae
pop
cmp
lahf
push
mov
aas
filds
xor
sub
sti
or
xor
cmp
jno
push
jno
es
dec
adc
jle
sbb
pop
and
push
pop
in
jecxz
sub
cmpl
jno
lods
out
leave
jno
sbb
sbb
call
sbb
cwtl
push
push
cs
or
negl
fmull
sbb
mov
dec
mov
int
adc
or
fs
cwtl
jb
ret
in
and
das
inc
xchg
xchg
add
push
and
iret
inc
or
dec
or
aaa
xchg
inc
xor
dec
xchg
sub
mov
or
xor
mov
add
fldenv
movl
sbb
push
push
pop
jl
ret
push
mov
data16
or
into
icebp
inc
mov
dec
test
fsubs
fwait
lcall
and
cs
xor
xchg
sub
mov
imul
inc
rcll
lds
xchg
jge
fs
pop
loope
cmp
mov
inc
or
std
mov
push
pop
pop
mov
cwtl
js
adc
fsubrl
ljmp
jo
out
lods
sbb
push
inc
icebp
mov
icebp
test
mov
sbb
pop
push
pop
adc
cmp
ret
call
daa
test
mull
shlb
daa
jmp
and
movb
lock
stos
jp
or
shlb
jge
or
call
sbb
movsb
cli
jg
iret
push
test
push
sti
jge
add
adc
pop
fistl
cli
pop
mov
ljmp
pop
push
test
xchg
and
imul
lods
pop
aad
scas
inc
jge
mov
sub
pop
shl
lcall
scas
cltd
aas
test
or
addl
es
jle
outsl
test
cmp
pop
jnp
aas
cmc
std
imul
push
insl
ret
and
sahf
push
push
ja
pop
ret
sbb
cwtl
inc
lock
aaa
xor
pop
sti
cmpsl
call
jno
daa
and
sub
cmpb
push
sub
shrb
sub
fs
sub
cmc
dec
sub
or
jp
jecxz
mov
loop
mov
xchg
or
inc
xor
std
sbb
cs
pop
mov
roll
int3
shrb
arpl
and
xor
mov
cmpb
addr16
xchg
mov
std
dec
mov
push
shlb
stos
mov
mov
je
mov
iret
cmp
dec
fldl
icebp
int3
insb
test
call
lret
sbb
scas
and
iret
jp
mov
iret
and
out
loop
xor
cltd
insl
or
pop
orl
add
sub
add
cmpl
xchg
dec
cmp
jo
cmp
mov
ja
orb
lcall
or
and
shr
mov
imul
mov
popf
scas
mov
mov
lock
sbbl
xor
mov
cmc
test
jg
pop
pusha
addr16
divb
push
adc
mov
xchg
imul
insl
fdivrl
or
pop
add
daa
ret
push
adc
lcall
add
sbb
pusha
mov
cmp
push
mov
punpckhbw
leave
cli
xor
mov
ficoml
sti
std
in
xor
dec
shlb
lods
aad
add
mov
pop
fprem1
push
sbb
jne
mov
sbb
sbb
push
inc
mov
mov
cmp
jns
jno
int
pushf
mov
xor
int3
jl
xchg
mov
and
mov
ret
cmp
shll
js
mov
push
rcl
inc
jecxz
jp
fidivs
mov
add
test
mov
rorl
insl
scas
dec
es
shll
cmp
sahf
sti
test
push
stos
ret
jmp
push
push
xchg
or
out
xchg
or
mov
jae
cmp
push
sarl
xor
mov
js
in
bound
movsw
sbb
lods
lret
mov
hlt
pop
inc
stos
mov
lret
arpl
xor
sahf
sbb
in
decb
sahf
int
jae
inc
mov
adc
jo
jl
jo
pop
imul
lahf
stos
or
lods
es
sbb
or
cmp
outsb
pusha
add
hlt
ja
lcall
enter
loop
lock
lock
xchg
mov
or
loopne
dec
adc
mov
popa
out
sbb
enter
mov
sbb
sbbb
mov
adcb
lods
add
aad
aam
jns
sbb
push
cltd
mov
cmpsb
adc
repnz
stos
lahf
lcall
mov
mov
jno
inc
jge
push
sti
nop
pop
dec
sahf
test
movsl
or
fdivl
int
insl
lahf
mull
lods
mov
rcrl
lods
cs
or
mov
movsb
cmpsb
mov
ss
int
shlb
cmp
fmuls
test
mov
aad
pop
mov
mov
rcll
push
stos
xor
aaa
testl
call
ds
movsb
mov
test
or
and
cmp
pop
push
push
pop
xchg
cli
push
dec
sub
test
loopne
push
lea
mov
shrl
xchg
push
mov
pop
addr16
pop
push
lock
mov
mov
loope
or
aas
lds
pusha
pop
adc
int3
sbb
push
push
cld
mov
mov
adc
xchg
add
lahf
or
aaa
ret
cmc
xor
dec
in
mov
shlb
fwait
popf
loopne
clc
out
and
inc
jecxz
adc
jb
into
mov
xlat
sbb
jo
cmp
push
inc
adc
add
push
xchg
add
mov
loope
dec
mov
sub
sbb
adc
dec
dec
mulb
fsubrp
fs
shr
and
out
cmp
sub
fwait
mov
lock
nop
add
cmp
inc
pop
cs
aas
daa
xor
pop
cwtl
inc
psubq
xor
xlat
pop
in
fsubrp
cwtl
xchg
dec
pop
fildll
mov
adc
imul
sbb
ds
sub
xchg
fildll
dec
jp
iret
sub
pop
pop
mov
stos
and
js
fcmovu
sub
or
xor
test
xchg
outsl
xchg
das
sbb
inc
mov
pop
lret
xchg
mov
cmp
adc
scas
or
or
inc
mov
jne
outsl
or
imul
dec
xor
jge
pop
and
pop
mov
fmull
xor
ret
sbb
mov
fisubrs
sbbb
pop
jmp
lock
rcl
xchg
mov
jecxz
pop
jmp
adc
fcoml
dec
aam
jle
sbb
stos
loop
in
cmp
cmp
mov
mov
xor
out
dec
mov
pop
stc
ss
aam
dec
shrb
mov
ja
sbb
xchg
dec
xchg
daa
and
cwtl
push
lods
ja
and
leave
or
sbb
push
xchg
fwait
inc
mov
daa
push
jmp
fimull
fwait
push
out
adcb
test
in
adc
mov
xor
push
fbstp
div
icebp
mov
imul
push
inc
repnz
cmpsl
push
cmp
jecxz
and
sbb
mov
jmp
dec
scas
outsb
popa
adc
or
test
add
rclb
gs
pop
jnp
lods
push
jl
push
ficoml
cmp
insl
scas
pop
fsubrs
push
mov
push
jle
movsl
push
mov
rcrl
lret
popa
xchg
popf
xor
push
gs
or
das
repnz
decb
movaps
sbb
xor
add
and
mov
loope
test
popf
pop
sti
lahf
insb
mov
inc
and
fcomp
inc
or
push
add
rolb
arpl
in
xor
mov
add
out
push
aas
sub
push
push
dec
xorb
add
rolb
gs
rolb
mov
loopne
lock
imul
fwait
xchg
icebp
inc
push
int3
insb
in
jo
pop
push
cmp
mov
or
push
daa
idivl
ja
mov
mov
stc
push
jbe
xor
adc
mov
inc
insl
in
idiv
xchg
and
add
enter
data16
popf
jl
ds
push
loope
fcmovnb
cmp
mov
pop
rorb
cmpsl
test
mov
mov
cmp
adc
and
adc
ds
mov
stos
mov
fsubrl
js
dec
mov
shlb
iret
std
call
loopne
sub
pushf
bound
mov
mov
cmpsb
js
outsl
push
or
add
sub
sbb
pop
jne
mov
mov
xor
and
mov
lods
shlb
lret
adc
imul
pop
and
adc
seta
xchg
xor
add
mov
pop
mov
mov
cwtl
fyl2x
fimuls
jmp
dec
data16
mov
out
mov
pop
xor
mov
push
cmpsb
subb
fstps
lcall
mov
mov
or
bound
insb
rclb
adc
ret
jp
shl
mov
mov
sub
jecxz
adc
lcall
jbe
mov
cmpsb
xchg
add
inc
lds
enter
aad
ljmp
ja
mov
jmp
add
cmpb
popf
sbb
mov
adc
xor
sbb
out
scas
cmpb
scas
ret
stos
adc
push
mov
jo
leave
jle
scas
rcrl
xchg
cmpsb
xor
dec
aam
sbb
cmpb
mov
bound
loop
lret
jns
xchg
imul
std
nop
popf
arpl
add
jg
xor
jmp
cmp
mov
pushf
lret
mov
add
lcall
inc
sub
cs
negl
es
cld
ds
rcl
in
sub
lods
mov
rcrl
sub
aaa
mov
sub
xor
xchg
ds
movsb
scas
jo
adcb
aaa
push
lea
or
shrb
stc
or
inc
nop
mov
in
mov
push
outsb
xor
inc
adc
sbb
or
push
and
mov
shl
lods
sarl
fstpl
clc
in
add
ficoms
movsl
jnp
enter
mov
add
mov
push
mov
aas
cmpsl
scas
cmp
out
jo
pop
fmul
icebp
mov
xchg
jo
xor
xchg
fwait
stc
push
push
jne
cmp
stos
ss
test
movsl
shll
mov
and
lods
outsl
pop
flds
and
aad
mov
test
push
test
je
out
cld
and
cmc
mov
std
pop
lods
cmp
roll
aam
flds
imulb
mov
adc
sub
and
sbb
jmp
inc
inc
xlat
ljmp
fisubl
cld
push
aam
and
adc
cld
add
pop
mov
fadds
fsts
les
rep
pop
cmpsl
sub
lcall
sub
jnp
jns
mov
sub
and
or
or
push
pop
orb
dec
add
sbb
and
mov
xchg
clc
outsl
out
jg
mov
mov
xchg
aas
pop
in
push
sub
into
cwtl
mov
xchg
popf
xchg
imul
arpl
sqrtps
xor
or
dec
fs
cmpsb
push
gs
js
inc
fwait
es
xor
shl
mov
jle
mov
xor
rorb
testb
mov
mov
addr16
shrl
lea
movsl
dec
and
sti
loop
cmp
inc
fwait
or
cli
pop
xchg
inc
lret
cmp
sbb
and
insb
fsub
lods
js
push
or
or
mov
mov
pusha
lods
or
cmpsl
bound
sbb
mov
adc
xor
call
cwtl
pop
jmp
std
adc
sbbl
inc
adc
and
push
test
cmpsb
cmp
lcall
jp
shl
jns
vpaddq
xor
sbb
pop
push
cwtl
xchg
idivl
sbb
pop
out
lret
div
jno
inc
minps
sti
lea
xchg
outsb
je
inc
repz
and
daa
out
push
mov
int
ljmp
cltd
inc
mov
mov
cmp
cld
jae
push
in
cltd
lds
fadds
loop
jmp
jge
push
mov
bound
mov
fsubrp
cmp
addr16
dec
inc
inc
les
mov
push
mov
cmp
cmpsb
jne
inc
dec
push
adc
popa
repnz
adc
iret
scas
push
inc
cmp
int3
lcall
adc
les
cwtl
inc
and
fcomip
pop
in
mov
xor
inc
lret
testb
cld
jo
inc
inc
dec
sub
push
rclb
adc
addr16
arpl
xor
sub
addr16
adc
pop
add
cld
xchg
xor
pop
jecxz
gs
inc
pop
aaa
push
pushf
cmp
or
xor
mov
pushf
adc
test
inc
sbb
or
sub
cs
push
outsb
jl
adc
ljmp
mov
push
icebp
in
lahf
pop
sti
rol
sbb
xchg
dec
lcall
push
mov
cli
pop
mov
jmp
mull
bnd
ficompl
call
add
lret
in
sub
inc
mov
scas
aaa
mov
mov
loopne
inc
into
cli
out
push
pop
push
mov
sbb
mov
mov
xchg
scas
xor
in
fistpll
ss
notl
adc
fldt
fwait
jns
inc
mov
sub
sbb
cmpl
sbb
jge
sahf
bnd
push
fildll
repz
xor
sti
out
mov
dec
mov
add
jns
mov
and
cmp
jle
dec
pop
add
and
hlt
ror
js
xor
mov
cmp
aad
push
cmp
cmc
js
jl
mov
arpl
imul
mov
push
xchg
sub
jno
cs
mov
test
ds
mov
xchg
std
js
inc
dec
sbb
pushf
mov
in
jecxz
add
dec
sbb
xchg
fldenv
cmp
pop
mov
iret
js
push
nop
cli
pop
xchg
xchg
mov
nop
push
leave
add
jp
js
xchg
repz
int3
pop
out
and
jge
mov
cmp
sbb
adc
push
add
out
jmp
sub
pop
gs
sub
in
xor
mov
int
inc
aam
inc
lret
fbld
xchg
or
imul
pop
insl
in
jle
dec
shlb
aad
xchg
add
mov
enter
mov
mov
outsb
jge
xor
mov
inc
add
xchg
pushf
and
mov
mov
push
mov
jmp
mov
jb
adc
pop
fldcw
loope
ret
mov
test
mov
insb
sbb
adc
and
cs
xor
ficomps
ret
add
ss
jecxz
push
or
clc
cmc
out
push
ficompl
jl
icebp
cmc
dec
mov
call
fidivl
xchg
or
sbb
pop
movsl
in
and
shlb
adc
push
idivl
outsw
add
pop
les
adc
data16
mov
in
aas
shll
mov
sahf
repnz
jmp
jp
inc
insb
sub
aam
sbb
imul
lcall
lret
jp
mov
sub
leave
sti
sbb
nop
movsb
cltd
bound
pop
mov
and
jbe
rcll
arpl
lret
call
jmp
inc
ss
subl
cmp
dec
icebp
or
inc
icebp
pop
or
add
adc
sahf
aaa
popa
arpl
and
pop
add
push
and
jne
mov
push
enter
add
add
inc
xchg
lahf
dec
mov
clc
xor
or
pop
inc
sub
sub
xchg
cwtl
and
test
icebp
pop
mov
adcl
addr16
mov
or
xchg
add
sub
sbb
sti
loope
pop
push
test
adc
lret
loope
orb
lock
xor
pop
pop
cli
jg
adc
fdivr
inc
sarb
mov
out
xor
mov
cmp
out
nop
sbb
mov
mov
out
xchg
mov
sbb
adc
and
sahf
xchg
add
sbb
and
adc
clc
dec
pop
in
loop
lds
push
fnsave
push
xor
sub
leave
dec
testb
sbb
clc
or
loop
jl
enter
mov
call
jnp
imulb
push
stc
insl
test
stc
lock
mov
ss
faddp
fildll
arpl
jg
xchg
mov
wbinvd
pop
mov
sbb
jle
push
cmc
pusha
repnz
push
mov
testl
xor
adc
xchg
mov
xor
mov
xor
xor
push
jmp
mov
xchg
mov
sub
pop
scas
shlb
mov
mov
rcll
loop
outsb
test
fldcw
push
pop
jb
push
lea
fs
rcrb
cmp
popl
cmp
mov
stc
insb
repnz
cltd
and
sti
sub
and
sbbl
adc
xchg
aam
in
pop
mov
mov
and
cwtl
ja
mov
jno
sub
dec
xchg
arpl
xor
fmuls
xchg
mov
les
cld
rorb
mov
mov
aam
push
jne
jg
xchg
jge
pop
jno
adc
xlat
mov
sbb
in
insl
inc
mov
xor
popa
xlat
xchg
loopne
pusha
inc
fisttps
xor
pop
scas
mov
popw
aaa
push
out
pusha
mov
std
orl
mov
jne
aaa
mov
cli
adc
mov
dec
dec
mov
call
and
icebp
stos
xor
ffree
out
outsb
pop
addr16
pop
add
ret
mov
cld
sub
xchg
iret
repz
cmpsb
pop
loop
inc
nop
nop
pop
push
xchg
cld
addr16
test
out
scas
in
dec
inc
negl
jge
inc
adcl
fimuls
push
aaa
loopne
push
out
loopne
xchg
xchg
out
outsl
ficoml
shlb
sbb
mov
outsl
rolb
mov
jle
in
rcll
and
xor
xchg
xor
leave
fistpl
push
fs
inc
adc
imul
jae
cmpsl
jbe
inc
or
dec
xchg
push
mov
sbb
cld
ffreep
sub
gs
out
ljmp
add
adc
cli
mov
xchg
fwait
testl
mov
push
test
rolb
repnz
cmp
lahf
mov
push
xchg
push
lds
adcb
mov
ret
lahf
cmp
in
and
test
frstpm(287
shl
mov
add
shl
sbb
xlat
xor
xchg
fmuls
mov
pop
icebp
out
sub
sub
loop
shr
sarl
jl
je
jnp
xchg
pop
push
or
sbb
and
push
xchg
sti
ds
jmp
inc
and
sbbb
and
jb
in
repz
mov
cmp
push
cmpsb
jne
dec
test
outsl
insl
adc
divb
cwtl
cmp
repnz
and
adc
mov
cmp
lcall
lods
and
adc
ret
in
push
jecxz
iret
jl
test
adc
add
mov
mov
sbb
mov
push
add
imul
inc
in
loopne
negb
fwait
andb
adc
ja
int3
sbb
js
jl
add
cmc
sub
jle
imul
mov
add
cmp
inc
dec
sahf
sub
aas
mov
out
fldcw
mov
push
aam
iret
fcoms
daa
inc
mov
std
dec
ja
sbb
leave
push
pop
pop
clc
test
adc
sbb
jg
dec
xchg
popa
inc
movsb
test
outsl
jle
outsb
push
adc
lea
das
add
je
dec
and
cli
cmpsb
mov
or
stc
dec
jmp
add
adc
stc
data16
clc
dec
ja
xchg
or
rorl
imul
push
cmp
or
push
push
rcl
orl
rorb
or
inc
xchg
jg
jb
fmuls
cli
pusha
push
xlat
adc
gs
cmp
inc
push
hlt
push
and
adc
cltd
pop
fsts
scas
mov
cmc
cmp
jg
push
inc
jp
bnd
pop
pop
adc
loopne
sub
pop
cmp
or
mov
mov
push
xchg
xchg
outsl
push
and
xor
in
mov
mov
test
aas
xchg
out
out
aad
jae
mov
push
jno
outsb
xchg
ljmp
test
dec
negb
out
lods
das
dec
xchg
mov
mov
push
mov
ljmp
adc
adc
outsb
xor
mov
mov
sbbb
mov
push
jne
sbb
push
mov
pop
shlb
in
dec
or
imul
loope
shr
sbbb
jae
cmp
imul
mov
lods
xchg
fsubrl
mov
jp
shl
gs
loopne
lcall
pop
js
insl
icebp
lahf
fwait
push
js
cmp
mov
das
in
inc
aaa
and
les
dec
out
cld
orb
inc
pop
add
rolb
xchg
pop
jno
jecxz
test
loop
clc
outsl
scas
push
push
dec
or
pop
mov
cli
pop
and
fsts
dec
rolb
xchg
in
jg
fstpt
mov
fisubrs
std
loopne
push
mov
dec
mov
jle
xchg
pop
xor
les
stos
lds
xorb
and
es
jl
popa
jp
insb
or
fisttps
or
jmp
inc
in
movsl
push
push
push
mov
sub
and
pop
pop
mov
cs
mov
outsb
lds
lods
dec
repz
mov
mov
or
enter
add
stos
mov
jno
jle
inc
stos
push
dec
out
mov
rorb
test
adc
or
mov
and
shlb
movl
push
mov
mov
xchg
cmpb
cli
push
jne
push
mov
les
jle
adc
cwtl
andb
fs
pusha
jg
inc
cmp
fcmovnbe
mov
adc
lea
add
pop
or
lods
xchg
pop
or
inc
xchg
loop
xor
lret
dec
xchg
adc
jmp
push
jmp
xor
repnz
movsb
and
jmp
push
mov
int3
xchg
mov
pop
mov
xchg
jmp
cli
nop
cmp
jl
xor
mov
push
out
sbb
shlb
pop
xor
pop
insl
jecxz
jle
or
ja
movsb
or
mov
lret
lea
call
scas
shlb
jmp
scas
in
dec
lretw
jno
popa
std
xchg
mov
jb
mov
in
leave
mov
and
jo
inc
sub
mov
stc
add
add
xchg
jge
aam
and
add
dec
dec
orl
lahf
addb
sbb
loopne
xchg
in
inc
push
cmp
push
and
inc
pop
lods
cmp
in
pop
lea
xor
enter
jb
jne
pop
mov
sbb
shrl
cli
fsubs
enter
or
iret
leave
and
into
fs
adc
mov
das
insb
push
data16
jne
cli
add
push
gs
and
stos
and
sub
mov
mov
jmp
jmp
sub
dec
adcb
ret
scas
inc
xor
pop
and
in
mov
inc
mov
ljmp
sbb
mov
or
inc
cmp
mov
sub
mov
push
mov
and
lods
and
pop
loope
mov
pusha
inc
outsl
xchg
xor
movsl
dec
imul
adc
loope
dec
pop
enter
negl
test
push
mov
xchg
dec
popa
xchg
mov
popf
xor
sahf
int3
decl
xorb
pop
lahf
cmp
call
stc
pop
dec
shlb
sbb
push
rclb
lcall
sbb
push
or
inc
out
ret
insl
inc
inc
in
aad
fidivs
das
adc
loop
int3
and
and
cli
push
pop
mov
mov
push
negb
mov
icebp
roll
lea
jae
mov
popf
sub
add
xchg
inc
scas
int
dec
rcll
stos
insb
and
gs
mov
rolb
add
out
xor
cmp
mov
cltd
cltd
xchg
bound
xchg
out
andl
push
hlt
test
cli
jbe
sub
lret
nop
sbb
sbb
adc
or
add
dec
push
mov
sub
imul
out
cs
enter
add
inc
iret
inc
cmpsb
mov
inc
xor
mov
push
fucom
mov
mov
rorb
push
push
aaa
push
and
sbbl
adc
dec
push
mov
xchg
mov
pop
mov
mov
xor
std
push
incb
dec
fs
stos
adc
mov
loop
out
adc
enter
ljmp
push
fadd
add
cmc
mov
xorb
or
lods
test
xor
xor
ds
or
push
stos
setle
repz
and
jbe
add
mov
popf
jne
fdivrl
xor
hlt
sub
lods
scas
pusha
inc
cld
jo
decl
sbb
mov
fisubrl
jne
pop
incl
jno
stos
sbb
leave
lods
mov
pop
cmpsb
int3
outsb
lds
pushf
or
dec
push
pop
mov
ds
xchg
jmp
jmp
dec
ret
aam
dec
cmp
cmpsb
xchg
loope
mov
aam
fldenv
aas
mov
call
mov
paddusw
jno
popa
or
fdivrs
movsb
popf
leave
rcll
aam
xchg
leave
sbb
pushf
and
daa
jl
jnp
cmp
addr16
repz
aaa
scas
in
pop
mov
mov
aas
fs
add
and
int
leave
cmpsl
out
mov
sbb
lahf
sar
shlb
insl
ret
jge
enter
adc
mov
and
out
xchg
push
fucomip
lret
pop
lcall
scas
mov
in
ja
inc
lea
push
js
and
xchg
mov
sub
lahf
add
push
inc
xlat
sbbb
jb
lahf
mov
scas
xor
adc
sti
push
test
xor
or
push
fmull
int
roll
roll
cld
and
xchg
push
sbb
sahf
mov
cmp
in
xchg
mov
xchg
outsl
adc
repz
pusha
ljmp
add
jge
jecxz
xlat
mov
adc
fdivrs
clc
pop
sub
inc
pop
mov
js
add
jae
fisubs
mov
mov
adc
xchg
jmp
xchg
pop
and
pop
sub
addr16
into
inc
dec
xchg
xchg
outsl
pusha
rolb
lret
and
xor
xchg
jl
aaa
clc
or
lods
orb
ds
jae
jp
mov
lea
xor
mov
addr16
fcmovne
clc
and
test
rcrb
es
pop
scas
or
xchg
mov
and
mov
xchg
icebp
test
fwait
sub
xchg
mov
pop
jbe
jmp
addr16
jae
or
and
ret
xlat
and
dec
add
aas
xlat
stos
mov
jle
loop
movsb
jg
enter
je
mov
pop
push
mov
jmp
mov
cltd
jp
jmp
xor
mov
mov
repnz
mov
insl
sub
scas
mov
cmp
and
jo
ljmp
outsb
fs
fsts
enter
jmp
xor
or
scas
notl
loope
call
or
and
test
loop,pn
out
adc
push
aam
pop
fmull
mov
xchg
gs
mov
scas
cmc
das
int
lods
ret
inc
gs
add
movb
cmpsb
into
jns
mov
scas
jnp
cmp
mov
fdivl
rcrl
push
out
aaa
arpl
or
sub
inc
sub
cmp
fcompl
add
sti
xchg
xor
mov
mov
adc
cmp
sbb
mov
or
cs
shrb
fs
jbe
pusha
cmp
aad
addr16
nop
iret
dec
and
leave
jo
push
test
lods
fsts
hlt
add
cmp
es
ret
aad
je
sub
inc
xchg
movsb
loop
cmpsb
sahf
jo
add
xor
or
adc
cmp
fimull
mov
fnstsw
outsb
outsl
pop
call
adc
scas
mov
and
jge
js
popa
pushf
mov
std
inc
pop
or
outsl
je
daa
ret
pop
jno
add
mov
sub
or
movsl
jl
sbb
pop
jbe
and
jmp
clc
or
iret
dec
rclb
sub
add
movsb
mov
xchg
scas
bound
xchg
loop
out
pop
jmp
push
je
mov
pop
bound
adc
mov
sahf
cmpsb
push
mov
repnz
mov
pop
stos
dec
es
adc
lahf
xchg
push
jns
or
subl
imul
out
add
int3
subb
push
cmp
mov
push
inc
aas
mov
movb
iret
dec
mov
cmp
xor
bound
pop
add
and
daa
or
outsb
aad
lret
ss
mov
out
push
and
ljmp
lret
sub
pop
push
pop
and
cs
cmc
aam
sbb
push
pop
mov
dec
sub
cwtl
addr16
or
int
popl
jne
jbe
add
jle
cmp
cmp
and
out
ret
and
stos
mov
call
mov
popa
icebp
fldenv
mov
iret
cmp
mov
xchg
lock
push
call
pop
lcall
jle
les
or
daa
lock
pop
jmp
inc
pop
dec
mov
xor
push
adc
fwait
jo
pop
rcrl
mov
inc
stc
lcall
rcl
in
xor
push
into
xchg
jmp
mov
cmp
pop
push
mov
shlb
fstl
jecxz
pop
push
das
fdivl
sub
sub
ja
mov
outsl
cld
adc
xor
loopne
fcoml
gs
add
clc
sahf
dec
or
push
insb
call
push
jmp
push
push
test
and
clc
xchg
fnsave
jb
repnz
jle
call
fcmovnb
xchg
or
int
xor
and
mov
push
out
roll
notb
mov
mov
leave
xchg
sahf
mov
std
sub
test
out
sub
mov
cs
adc
sub
sub
jo
inc
jl
and
hlt
push
cmpsl
jecxz
cli
jns
lret
fcoms
fbld
inc
fisttpll
ficomps
xor
cmpsb
repnz
icebp
push
mov
pop
mov
inc
jno
cltd
aad
cmc
jle
mov
dec
cmp
xchg
in
mov
mov
xchg
xor
das
cmc
lcall
mov
xor
xchg
outsl
popf
data16
inc
and
inc
call
inc
push
push
mov
add
mov
fnstenv
cmc
outsb
mov
shll
mov
stos
mov
xor
rclb
push
gs
pop
aam
jns
push
xchg
dec
test
aad
adc
clc
fwait
push
bswap
mov
lret
ret
pop
rcrb
test
adc
fimuls
cmp
or
dec
dec
dec
shll
fldenv
dec
clc
jmp
loopne
pop
lea
int
push
das
aas
adc
test
push
inc
mov
sub
out
mov
pop
scas
jmp
out
cmp
jae
daa
dec
sbb
push
test
leave
add
cmp
lret
les
jno
repz
inc
inc
aas
fstps
and
test
adc
jg
insl
imul
jns
mov
or
dec
repz
cld
int
fldl
mov
jmp
sbb
lds
xor
pop
sahf
xchg
enter
outsl
daa
push
add
sub
push
xchg
pop
out
loopne
xchg
pop
mov
sub
sub
add
lock
jno
bound
dec
and
test
pop
rcr
aad
insl
push
dec
push
cmpsl
sub
fcoml
xor
sub
out
push
and
out
inc
mul
outsl
and
mov
inc
inc
ds
popa
insb
subl
lret
cmp
push
push
sub
jnp
or
add
nop
out
pop
push
in
int3
pop
std
sub
into
fidivrl
fcoms
xchg
cmc
in
inc
ret
mov
out
int3
inc
leave
lock
movsl
adc
mov
jne
mov
mov
sahf
les
roll
pop
mov
and
mov
pop
xor
push
push
das
inc
fdivrs
cs
pop
mov
mov
xchg
shll
dec
lcall
movsb
cld
jecxz
mov
mov
cmp
adc
cmpsb
leave
loopne
cmp
or
xor
popa
xorb
sbb
cltd
pop
test
xlat
addr16
lahf
pop
int
sbb
jno
mov
daa
mov
pusha
in
push
inc
in
jo
in
lds
or
aas
sub
mov
xchg
push
pop
mov
or
mov
mov
inc
lsl
test
sub
arpl
sbb
dec
dec
test
cwtl
lds
ljmp
mov
mov
fs
dec
mov
ss
xchg
rorb
inc
mov
loopne
in
fsubr
ss
and
xor
mov
dec
jnp
pop
lock
fnstenv
pop
repnz
clc
push
xchg
or
cmpsb
dec
and
xchg
int
fcom
outsb
dec
mov
cmp
addr16
push
dec
add
adc
inc
mov
es
dec
dec
movsb
movsl
fcoml
add
xchg
dec
enter
out
mov
hlt
and
jb
das
cmp
or
pop
test
lret
test
pop
out
inc
stos
int
out
or
fucomi
rolb
sti
xlat
pop
xor
lahf
outsl
jo
mov
sub
fistl
lcall
cmpsl
dec
xchg
xchg
sbb
dec
jecxz,pt
inc
inc
cmpsl
jbe
pusha
mov
mov
cld
jmp
stc
sbb
or
lds
ja
jmp
fwait
push
fsubrs
jecxz
gs
mov
mov
push
and
test
scas
cmp
dec
dec
mov
or
cmp
out
or
rcrl
adc
jg
div
lcall
cwtl
clc
push
and
movsb
mov
test
dec
addl
in
or
mov
pop
push
push
ret
sub
jb
dec
cltd
divb
xchg
stc
clc
jo
adc
lret
mov
lret
dec
jg
int
out
and
lds
and
nop
pop
popa
jp
add
ss
mov
mov
fdivr
outsl
dec
lds
push
test
lock
sbb
gs
mov
mov
push
jb
jns
adc
adc
xor
xchg
jmp
cmpl
subb
std
sbb
out
jns
mov
pop
xor
clc
test
incb
lret
jb
pop
aas
test
mov
leave
lock
jo
pop
mov
and
adc
sahf
cmp
xchg
out
sbb
or
stos
out
and
nop
pop
mov
cmc
mov
stos
mov
xlat
imul
jb
sub
insb
sub
and
hlt
xor
push
dec
ret
mov
insl
loop
cli
insl
adc
fs
imull
imul
push
sbb
hlt
sub
sti
mov
mov
out
xchg
test
test
xor
fdivl
mov
add
adc
pusha
pop
and
popa
pop
movsl
cbtw
pop
ret
ljmp
jns
push
clc
enter
pusha
inc
cltd
aad
jge
insl
cwtl
loop
sti
std
jo
sahf
mov
adc
mov
xor
jp
xchg
in
int3
sbb
das
cmp
out
popf
push
frstor
xchg
fistpll
scas
xchg
xchg
lea
sub
xor
or
ret
mov
cld
mov
subb
pop
mov
cmp
jle
sbbl
jmp
xor
and
rcl
xchg
orb
aam
sbb
das
jmp
jno
outsl
pop
cltd
jbe
shlb
outsl
ja
dec
xchg
in
jp
mov
enter
xor
push
loope
jno
repnz
xor
jl
mov
sti
out
cs
cmp
xor
jo
shrb
adc
hlt
mov
push
fwait
cmp
xor
xor
mov
jne
inc
xchg
decb
xor
pop
mov
sbb
pop
pop
mov
mov
repz
scas
pop
sahf
aas
fimull
and
and
jg
push
mov
sahf
stc
add
fcom
loopne
dec
shlb
add
pop
inc
inc
push
inc
stos
mov
out
pop
aas
pop
and
imul
adc
mov
mov
and
jge
push
jno
int
mov
cltd
jbe
sbb
fisubl
gs
sbb
rorl
div
xor
add
iret
cmp
jae
or
cmpsl
push
add
iret
pop
lods
out
es
mov
mov
mov
es
lahf
sti
and
lsl
lea
push
cld
mov
rcll
repz
inc
pop
sbb
ds
iret
sbb
push
jecxz
push
lods
lock
shll
adc
popf
push
and
lcall
add
test
andl
mov
push
xchg
dec
dec
pop
call
jae
add
inc
mov
jae
fisubs
sub
sbb
les
xor
mov
hlt
xchg
cmpsb
push
pop
pushf
mov
xchg
add
pop
xchg
sub
adc
fmull
in
push
aas
jbe
fimull
add
loope
mov
das
mov
pop
mov
aam
stos
nop
test
rcrl
in
sbb
outsl
jne
cmp
pop
inc
mov
in
cltd
sub
mov
test
sti
dec
ss
jno
popf
pop
or
mov
movsb
xchg
je
test
mov
cmpsl
jo
enter
pop
test
sbb
enter
ljmp
mov
movsb
cltd
sub
les
jo
loope
gs
in
and
lea
and
imul
push
pop
push
lods
sub
push
pushf
adc
movsl
cmc
or
jecxz
sarb
inc
rcrb
xor
repz
push
xchg
loopne
add
jns
outsl
subl
mov
call
call
out
andl
jns
movsl
ja
mov
xchg
xchg
push
xor
mov
sbb
xchg
mov
lods
mov
push
ds
shll
xchg
jb
ret
mov
xchg
sub
or
ja
pop
in
jno
and
xor
pusha
add
cmpsb
call
sub
lods
call
jl
and
mov
into
ret
call
sti
pop
jmp
sbb
pop
sub
push
inc
and
out
inc
sbb
pop
lahf
popa
or
imul
mov
hlt
lods
inc
xchg
movsl
mov
scas
inc
and
dec
pop
add
cwtl
aam
ds
inc
lahf
add
js,pn
icebp
xchg
ror
imul
or
popf
push
mov
jnp
fsubl
lds
xor
icebp
jl
rcr
icebp
inc
cmp
push
mov
adc
sti
xchg
mov
dec
mov
or
pushf
pop
pop
std
loope
push
gs
imul
call
iret
ljmp
ret
xor
add
mov
mov
into
in
or
inc
sub
inc
shrb
lahf
dec
out
mov
rol
fcomi
and
flds
cmp
inc
xor
push
stos
addr16
sti
xlat
into
inc
lahf
data16
xor
js
rorl
and
cmpsb
xchg
dec
fldcw
lret
subl
sbbb
hlt
sbb
adc
pusha
sbb
mov
clc
idivl
mov
jne
rolb
mov
mov
aaa
movsb
out
add
cmp
sti
bound
fisubs
scas
mov
xor
nop
and
pop
cwtl
cmp
ret
add
stos
icebp
xor
shlb
mov
shrl
test
add
push
imul
cltd
push
and
daa
sbb
add
mov
mov
lcall
push
inc
sbb
iret
inc
test
inc
fsubrl
lcall
add
dec
sarb
push
insb
push
cmp
hlt
jb
in
mov
xchg
mov
mov
xchg
ficoml
aaa
jne
outsb
pop
sarl
outsl
icebp
and
adc
cmpsb
mov
jg
enter
ja
or
imul
ficoml
shrb
int3
cltd
mov
std
js
leave
push
jecxz
inc
sbb
cmp
xor
roll
and
and
loop
das
push
out
fdivrl
mov
lcall
mov
inc
adcb
sub
jmp
push
test
fnstcw
cmc
pushf
icebp
jecxz
jp
cwtl
movsb
fbld
mov
mov
push
je
and
mov
ljmp
in
and
into
xorl
jle
mov
or
sbb
leave
inc
or
les
lock
dec
stos
fbstp
sub
mov
mov
aas
push
inc
cmp
loope
pop
sbb
push
orb
sbb
dec
xchg
out
jle
fistpll
fstpl
repnz
rolb
xor
or
inc
int
xor
sbb
movsl
lcall
add
push
imul
leave
adc
popa
leave
adc
imul
repz
push
mov
icebp
loop
leave
lret
mov
lret
std
sbb
sbb
mov
sbb
enter
test
cmp
xchg
dec
inc
cmp
mov
cmp
dec
movsl
cld
or
cmp
inc
inc
dec
fucomp
xor
repnz
dec
push
mov
jbe
xor
xchg
push
sbb
cmp
movsl
jg
imul
pop
sub
push
push
xor
arpl
dec
and
jg
clc
call
jns
and
aaa
gs
pushf
mov
cmp
push
pop
sarb
sar
addr16
or
test
inc
cwtl
cmp
mov
mov
inc
push
jb
sbb
cli
pop
es
adc
arpl
fbstp
push
jg
clc
mov
arpl
loopne
mov
mov
xchg
mov
adc
aas
ret
stos
les
or
xchg
inc
stos
xchg
push
xlat
push
call
sar
in
insl
inc
push
push
sub
sbb
adc
mov
fidivrl
out
std
mov
push
sbb
mov
pop
dec
dec
mov
shll
sub
ss
cmp
iret
add
pop
movsb
sub
rolb
out
adc
decb
lcall
pushf
xchg
sbbl
jp
scas
and
clc
rolb
mov
test
iret
xchg
sbb
repz
pop
xchg
rcrb
xbegin
xchg
imul
push
popl
jae
orb
pop
adc
cmpb
cmpsb
jne
mov
fadd
daa
fcoms
mov
push
pop
add
mov
inc
push
sbb
sarl
shl
adc
mov
push
cltd
sub
iret
jbe
or
in
xlat
xchg
cmp
jl
insb
mov
cmp
mov
test
dec
jns
ljmp
and
cmp
hlt
test
notl
mov
cs
pusha
es
fs
dec
lret
jle
sbb
jno
sahf
aas
xchg
stos
aas
mov
mov
decb
lods
mov
push
pop
jnp
andl
hlt
xor
ret
fists
mov
dec
pusha
mov
outsw
int3
mov
hlt
jno
loope
in
or
cli
lods
add
or
or
cmp
cmp
sti
addr16
adc
mov
out
in
sbb
sarb
into
into
sbb
cmpl
gs
cmpl
inc
aam
addr16
mov
or
pop
jmp
hlt
push
repz
cld
mov
insb
pop
sti
inc
lcall
mov
jle
dec
jecxz
pusha
mov
dec
cmpsl
testl
je
loopne
sbb
or
aam
inc
pop
xor
sbb
ret
mov
sbb
aas
fldcw
in
sahf
sbb
mov
jle
sbbb
outsl
inc
loopne
dec
jns
aaa
pop
jl
mov
negl
clc
pop
mov
lret
adc
rclb
test
shl
push
jecxz
into
ljmp
mov
push
mov
lds
jb
ja
adc
aam
push
push
movsb
or
add
and
in
clc
xor
sbb
call
lds
movsb
dec
scas
xchg
fistl
jbe
pop
sub
insb
lock
repnz
mov
push
decb
xor
xor
in
hlt
pop
popf
mov
or
pop
push
cs
push
inc
xor
mov
xor
xor
xlat
jno
gs
ficoms
outsb
mov
xor
and
bound
scas
paddsb
aas
ror
test
pushf
inc
push
movsb
cmpsl
mov
mov
std
sub
lods
data16
jle
into
cmp
jo
pop
cmp
mov
scas
loope
clc
sbb
mov
xchg
cmp
mov
cmc
dec
je
add
inc
cmpb
push
cwtl
cmp
std
or
sub
pop
test
movsb
pop
jno
and
out
arpl
push
stc
mov
jbe
rol
dec
jmp
push
das
adcb
pop
imul
lods
mov
and
push
in
loope
icebp
arpl
loopne
notb
fstl
std
jbe
call
pop
pop
insl
mov
fst
cli
fs
dec
lods
in
dec
ret
ljmp
jge
ror
or
pop
adc
push
pop
push
ficompl
out
divl
mov
pop
jo
sbb
pop
push
cmpb
cmpsb
and
pop
bound
test
and
mov
pop
filds
lock
fs
pushf
push
call
movsl
sub
loope
push
mov
cmp
imul
ljmp
lret
fcmovne
cmp
mov
add
lcall
pop
or
out
mov
fs
xchg
inc
sahf
stos
lret
cmp
dec
push
fs
cmc
loopne
fwait
iret
dec
mov
cmc
repnz
popf
jae
jae
adc
inc
pop
fstpl
call
xchg
mov
out
test
lahf
cmpsb
fstp
or
mov
sbb
enter
cmpsb
jge
sbb
xchg
and
mov
xor
repz
mov
sbb
hlt
cltd
sub
shr
movsl
aam
aad
mov
sub
xchg
xchg
xchg
adc
fstl
xchg
mull
lods
xchg
push
xlat
sbbb
adc
or
mov
cwtl
into
clc
xor
xchg
dec
mov
cmp
stc
add
adc
jecxz
repnz
xor
xor
dec
cmp
mov
dec
sbb
cmp
jmp
pop
inc
mov
fs
andl
xor
jbe
dec
ret
sub
sub
dec
or
outsb
or
test
xchg
dec
add
ret
jno
fists
and
push
xor
mov
je
push
or
sub
pop
xchg
addr16
popa
test
andl
xor
sub
in
ds
fs
loop
and
outsb
lret
cmp
bound
mov
jge
adc
fs
mov
ljmp
leave
mov
out
xor
enter
cmp
xchg
jbe
and
jecxz
jge
ret
rcrb
cmp
ret
fiaddl
mov
das
nop
mov
gs
ret
clc
ljmp
in
push
xchg
cmc
jbe
dec
fcomp
push
adc
pop
push
push
cmpsl
dec
in
aaa
imul
push
ror
lock
imul
bnd
pop
pop
inc
dec
stos
fwait
mov
jo
iret
mov
push
insb
push
mov
fwait
sub
mov
stos
imull
lock
data16
xchg
sbb
stos
cmp
je
aad
lock
lea
in
fcmovnbe
sub
mov
lods
mov
lahf
sub
in
roll
dec
hlt
pop
rcr
pop
xor
sub
bound
fnstsw
mov
fwait
mov
add
push
xor
or
jnp
repnz
jae
jge
mov
adc
test
popa
fwait
push
imul
cwtl
fistps
mov
dec
hlt
xor
iret
xchg
popa
sub
int3
test
dec
ljmp
inc
fstpt
pop
incl
jnp
jns
daa
insl
imul
incb
hlt
jbe
movsb
cs
pop
cmp
mov
add
popf
sub
ret
pop
xor
pop
loop
out
shrl
ljmp
aad
scas
repz
scas
inc
imul
mov
fstps
fwait
in
or
jnp
imul
or
jbe
sbbb
out
mov
inc
stos
aaa
jp
dec
xlat
lret
addr16
leave
mov
jecxz
cmpsb
xor
aas
mov
int
push
fcmovnb
sbb
cmp
push
into
xor
mov
jnp
ds
sahf
dec
sti
rcr
scas
in
mov
icebp
clc
stc
and
mov
pop
cmp
test
imul
xchg
inc
lret
xor
dec
ja
and
les
dec
pop
roll
subl
subb
mov
hlt
data16
mov
mov
cs
push
pop
cmp
aas
icebp
adc
mov
pop
pop
clc
or
test
inc
lods
ret
mov
aas
fadds
lahf
fldt
cmpsl
shlb
cmp
mov
xchg
andb
mov
into
pop
pop
int3
inc
call
pop
cwtl
jmp
push
leave
mov
jnp
push
sbb
push
xchg
mov
pushl
add
fbld
dec
daa
xor
push
adc
jp
mov
out
xchg
lret
jae
out
shll
ror
inc
xchg
mov
jl
orb
add
jo
iret
dec
jb
push
cmc
and
pop
outsl
sti
mov
adc
lahf
mov
mov
aad
mov
push
insl
lea
push
sbb
movsb
in
aas
in
int
aas
sar
inc
out
and
mov
lea
iret
repnz
push
aad
inc
ljmp
in
xlat
mov
xchg
mov
cltd
lods
pop
mov
std
inc
inc
fcmovbe
ret
sub
adc
das
push
cs
xor
xor
loope
mov
jb
jbe
jno
jnp
sbb
push
push
dec
jmp
fs
iret
xchg
add
andl
mov
push
fnstcw
cli
jge
jb
aad
xchg
sbb
jp
outsl
inc
int
mov
and
push
hlt
lea
mov
jecxz
aad
dec
mov
inc
mov
adc
xchg
xor
mov
cmp
loope
cmp
mul
xchg
adc
ljmp
jo
movsl
inc
fists
add
dec
xchg
push
mov
ljmp
lea
mov
mov
dec
dec
test
jo
and
xchg
cmp
fildl
mov
div
ss
xchg
aaa
fidivl
lea
cmp
hlt
and
std
scas
lcall
pop
dec
rcrl
mov
ljmp
push
push
rcrl
mov
pop
stos
push
add
pop
mov
cwtl
mov
mov
push
outsb
cmp
mov
lcall
sub
jmp
adc
adc
jl
and
sbb
jnp
xchg
mov
addr16
mov
adcl
mov
and
push
imul
or
mov
leave
fsubs
xchg
cmpsb
hlt
or
fdivrp
jno
out
ljmp
imull
ljmp
jl
push
adc
and
mov
jge
pusha
and
loope
arpl
cmpsb
mov
jo
push
lahf
addr16
add
es
outsb
pusha
enter
mov
sub
aas
imul
xchg
out
jbe
pop
fldt
cmc
jmp
jae
divb
push
inc
jl
and
js
mov
mov
lods
adc
push
sbb
jns
cli
adc
outsb
rcll
mov
call
fstl
or
jmp
cmp
add
inc
or
mull
es
aas
fcoms
ret
mov
xor
pop
add
ficomps
imul
in
jmp
clc
adc
pop
fwait
cmp
orl
mov
cmp
adc
jp
add
add
pop
jb
jbe
or
out
jmp
pop
imulb
sarl
jb
or
lock
mov
pop
add
sub
mov
int
xlat
in
in
fistl
rcrb
push
xor
mov
xchg
xchg
setge
cmp
fldt
xlat
jle
arpl
and
push
dec
dec
andl
mov
hlt
sbb
scas
gs
cld
mov
rol
add
stos
or
sahf
mov
int3
pop
loopne
pop
in
sub
mov
mov
loop
lods
movsl
xchg
cli
mov
in
iret
rcl
mov
adc
cmp
daa
jmp
gs
fmull
aas
cmp
add
test
push
xchg
push
or
mov
add
hlt
push
adc
sub
mov
mov
mov
add
mov
movsb
lods
jo
sub
xchg
mov
or
pop
jo
insb
ret
mov
xchg
inc
jno
insl
pop
push
dec
out
sbb
hlt
adc
pop
lcall
jle
inc
dec
add
scas
pop
stos
cmp
cmc
pop
adc
inc
pop
lret
inc
inc
repz
test
enter
fistpl
mov
call
inc
in
xor
push
jecxz
or
xor
jae
ficomps
xlat
out
pop
add
mov
hlt
sbb
es
cld
loopne
fucomi
aaa
stos
mov
dec
sub
testl
add
movl
xchg
popf
into
cmp
dec
popf
push
inc
adc
adc
cmp
pop
mov
xchg
xchg
adc
clc
inc
test
jecxz
mov
and
sub
sbb
cs
sub
lret
and
jo
xchg
jbe
sub
or
jns
cltd
inc
pusha
adc
rorl
nop
mov
inc
scas
push
icebp
cltd
pop
mov
jne
mulb
add
in
pop
int3
aam
shrb
jne
addr16
xchg
pusha
dec
mov
push
jge
sbb
sbb
cmp
and
add
ljmp
inc
xorb
push
jecxz
loop
sub
loope
xchg
sub
or
xor
ror
cli
rol
pop
pop
xchg
lods
rorb
xchg
repz
movsl
mov
mov
std
enter
pop
mov
xchg
mov
jno
add
jno
inc
sub
les
xchg
divl
nop
inc
insl
dec
and
mov
sub
roll
add
pop
mov
ss
sbb
sbb
in
fcomp
sbb
mov
mov
repz
xchg
clc
test
add
xor
mov
inc
xchg
push
loop
mov
jmp
scas
xchg
dec
add
rorb
idivl
adc
test
xor
jno
shll
in
repz
pop
cmp
ret
push
mov
les
adc
mov
mov
xchg
pop
das
hlt
mov
sub
in
mov
push
aaa
dec
sbb
std
dec
cld
jns
jle
xchg
addr16
or
xchg
jnp
fdivr
lret
popf
adc
out
add
jns
inc
sbb
pop
sbb
ljmp
out
ja
pop
inc
ds
dec
xchg
movsb
mov
xchg
and
jns
inc
iret
jp
mov
cld
add
ds
inc
orb
push
jne
dec
xchg
fimuls
bndstx
sar
pop
xor
mov
sbb
sub
out
inc
xchg
decl
or
mov
lahf
push
call
mov
inc
popa
adc
and
rclb
cmpsb
bound
and
mov
cltd
xor
or
mov
cli
cmpsb
lret
dec
fsubrs
xor
jnp
inc
icebp
or
push
mov
fs
xor
add
mov
mov
push
fs
xor
in
jno
ljmp
dec
pop
je
jge
push
xor
cmp
repz
add
xlat
or
xchg
scas
pop
mov
or
push
cmp
addb
in
mov
lahf
xchg
movsl
push
cmp
add
add
es
lods
mov
cli
cli
pusha
xor
push
in
int
popf
or
mov
sti
cmp
lret
mov
push
push
jp
inc
test
out
lahf
pop
repz
cmp
leave
or
dec
sub
gs
out
loopne
mov
into
mov
inc
cld
pop
dec
and
or
dec
jp
jb
stos
out
repnz
pop
rcrl
xor
dec
pop
cmp
movsl
mov
sbb
inc
sbb
int
daa
jb
scas
push
push
loop
lods
push
test
mov
aad
push
es
jno
push
mov
and
fisubs
pop
incl
mov
lret
xor
es
jle
mov
je
hlt
mov
or
jb
ret
into
sub
data16
aam
rolb
pushf
out
cmp
imul
xor
call
je
sub
icebp
pop
test
js
xchg
inc
sbb
adc
xor
push
and
rcll
xchg
push
pop
xor
stc
pop
pop
dec
and
jl
xchg
dec
cmp
lcall
lock
jns
mov
cmpsb
test
dec
test
pop
and
das
imul
push
xchg
scas
fdiv
pop
cmp
or
mov
cs
sub
int3
sti
aas
mov
or
or
adc
nop
das
pop
inc
jmp
mov
pop
jle
jbe
push
insb
lret
popf
mov
xchg
mov
mov
sbb
cli
mov
inc
lods
pop
mov
sub
push
mov
sbb
sti
jle
dec
cmc
xchg
sahf
aam
xchg
mul
inc
out
lods
pop
jp
dec
int
and
lret
lret
mov
mov
pop
fnclex
testl
mov
fdivrs
xor
dec
xor
popa
in
or
je
cmp
fcompl
push
jns
iret
push
or
sbb
push
adc
sbb
push
out
or
dec
aad
loopew
pop
dec
test
fldcw
push
push
insl
sti
imul
add
int
mov
cmp
clc
push
cld
pop
pop
jecxz
jmp
stc
cmp
mov
xchg
push
dec
sbb
xchg
cmp
call
mov
mov
pop
pop
add
xor
mov
fld1
xor
int3
add
cltd
pop
push
xor
add
lds
cld
shll
scas
loop
mov
jbe
shlb
add
jbe
xor
sbb
cmp
adc
sub
pop
js
add
mov
xor
sub
fs
mov
daa
or
and
pop
stc
dec
adc
fcomi
and
jmp
clc
loopne
xchg
xchg
pop
incl
cli
rolb
cmp
ret
lahf
lret
mov
movsl
lock
ret
test
and
pop
add
xchg
mov
dec
inc
jne
xchg
je
inc
sbb
repnz
das
test
in
jb
int
test
jmp
mov
jae
lret
mov
rorb
lea
or
xor
jae
das
mov
mov
dec
in
cmp
pushf
mov
push
jne
dec
test
and
leave
ret
fwait
inc
lods
xchg
cltd
daa
inc
lea
mov
sahf
fadds
or
int3
aas
scas
movsb
push
mov
sbb
add
loopne
shrl
inc
cmp
jp
pop
adc
xchg
outsb
sbb
mov
mov
xor
sar
cmovae
sub
dec
inc
xchg
hlt
ret
jno
add
cmc
lods
loope
dec
aad
push
dec
xchg
into
cmp
dec
sbb
lock
pusha
mov
int
inc
leave
push
ja
pop
test
leave
sub
mov
cmp
push
bound
sub
out
push
push
pop
jae
push
push
sub
ljmp
int3
pop
and
pop
popf
daa
sbb
out
out
mov
addl
dec
push
orb
aaa
mov
sub
sub
push
push
lret
cmpsl
out
pop
dec
loop
add
mov
sbb
mov
sbbb
repz
mov
xorl
pop
dec
push
mov
jl
test
inc
not
jg
xor
xchg
cwtl
pop
xor
add
lahf
out
je
sarl
push
xchg
inc
push
jmp
scas
lds
push
mov
cmpsl
xchg
lds
lds
in
data16
jno
repz
sub
sahf
nop
and
hlt
dec
fs
push
pop
sub
push
ljmp
dec
insl
test
cwtl
xchg
in
fildll
lock
out
fstl
adc
outsl
mov
cmp
bound
pushf
xlat
es
jp
mov
clc
jns
jo
fisttpl
testb
mov
mov
loopne
dec
or
mov
sub
cmp
outsb
pushf
hlt
cmp
addr16
xchg
sbb
xor
push
sbb
cmpsl
aam
inc
mov
dec
pop
push
lods
jb
test
inc
in
or
clc
inc
fs
mov
cmp
inc
out
stos
jmp
cmovb
sub
sub
mov
mov
bnd
mov
mov
scas
adc
adc
fiaddl
in
mov
lods
cmp
xor
aad
or
lds
pop
pop
push
pop
xlat
fwait
xor
loope
data16
lock
aad
dec
add
fisttpl
bndcu
out
outsl
aad
push
pop
mov
je
pop
adc
dec
push
jmp
aas
int
fisubl
ret
shlb
ret
ljmp
sbb
ret
mov
sbb
leave
mov
in
mov
push
sti
fldlg2
out
cltd
jns
movlhps
and
jle
pusha
or
jae
xchg
dec
aaa
imul
fcomps
add
jp
leave
dec
mov
adc
push
out
aam
mov
loope
push
pop
mov
std
out
pop
add
push
and
dec
test
xchg
sbb
shll
scas
mov
mov
xchg
fsubs
jmp
xchg
cmc
ss
subb
or
ljmp
pop
lock
test
mov
vcvttpd2dqx
loopne
or
outsb
cwtl
roll
dec
bound
dec
lods
fldcw
in
into
movsb
cwtl
cmp
mov
sbb
lahf
mov
inc
lods
ss
scas
mov
mov
cmp
in
stos
or
jo
test
mov
or
jle
pop
jecxz
mov
outsl
sbb
test
test
and
add
insl
bound
adc
in
ja
mov
sub
ficoms
popl
out
adc
rcrl
les
out
and
aaa
cld
jmp
jg
pop
add
fs
mov
adc
pop
mov
clc
jo
lcall
xor
test
jnp
lds
arpl
idiv
mov
aad
inc
dec
pop
std
in
outsl
repnz
pop
pop
shll
mov
cmc
sub
adc
mov
lahf
leave
xchg
mov
adcl
int
popf
leave
iret
fwait
add
xor
dec
in
les
js
icebp
or
arpl
dec
ss
jge
repnz
shlb
out
shrb
mov
xlat
ror
into
gs
mov
lahf
int
in
or
mov
pop
dec
mov
fwait
pop
sti
movsb
out
cmc
cwtl
pop
call
sbb
jp
dec
or
xor
insl
daa
jns
sbb
mov
inc
sub
pop
daa
xchg
xor
inc
insl
in
daa
fcmovne
lret
lods
outsl
push
pop
mov
inc
jmp
bound
cmp
icebp
je
js
jae
test
sti
or
fxch
or
mulb
outsl
mov
adc
xchg
popa
mov
ret
or
cmc
pop
adc
xor
push
sub
inc
inc
sbb
sbb
ja
divb
rol
dec
sbb
lret
fldcw
and
cmp
jns
movsb
and
cmp
sbb
mov
xor
cmpsl
mov
into
mov
les
ss
jl
mov
dec
inc
rolb
lcall
pop
adc
cmp
test
enter
inc
pop
lods
icebp
outsb
into
push
push
sbb
mov
mov
push
aas
add
clc
cmp
decb
fucom
jae
test
jnp
nop
sarl
push
mov
add
sbb
pop
sub
js
mov
pop
fstpt
adc
or
xchg
cs
pop
sbb
cmp
xor
std
cwtl
cmc
fs
jecxz
out
adc
mov
add
jmp
or
inc
lret
out
cmp
adc
movsl
shlb
repz
jno
bound
inc
sarl
lock
mov
cmpsl
leave
adc
roll
repnz
pop
jmp
pop
sub
subl
mov
push
fcoms
fidivl
jnp
mov
push
fstps
shlb
jnp
xor
xlat
adc
incl
shlb
jp
aad
out
int3
mov
push
add
push
adc
or
jbe
in
inc
fdivl
dec
inc
lock
lcall
loope
sub
in
lahf
ljmp
push
bound
aad
scas
daa
jno
sub
push
cltd
mov
andb
xor
lods
fwait
lock
cld
xor
aas
jge
sub
dec
push
test
cltd
fildl
mov
ds
jmp
and
popa
hlt
dec
fisubs
imul
push
mov
lods
call
in
or
int3
pop
jg
inc
shrb
jecxz
xchg
push
dec
mov
dec
js
insb
into
lea
adc
cmpsl
or
pop
popf
dec
in
jnp
xchg
or
mov
push
sub
pop
test
pop
jb
pop
mov
ja
into
ja
popa
mov
cmc
in
push
clc
inc
or
std
mov
outsl
lret
cltd
in
je
mov
es
scas
vcvttsd2si
pop
ds
dec
sbb
adc
adc
divl
ret
jl
test
push
mov
cmpsb
lea
cmp
xchg
pop
sbb
dec
jne
mov
loope
shll
mov
or
sbb
pop
lcall
pop
and
fincstp
and
lea
xchg
adc
out
mov
or
mov
addr16
popa
mov
xchg
push
push
add
dec
ljmp
mov
or
push
pop
cmp
pop
in
loopne
in
inc
or
movsl
jp
push
out
inc
push
movsb
and
lahf
incb
add
out
jle
push
push
rolb
std
mov
test
mov
sub
nop
cmc
loope
mov
aas
gs
mov
sub
pop
push
sbb
inc
mov
and
ss
push
and
js
mov
aam
testb
pushf
pop
ss
fisttps
out
ljmp
pop
cmp
and
iret
xchg
pop
sbb
scas
adc
add
cmpsb
push
test
loop
imul
insl
and
call
sbb
stos
and
jno
fstpl
imul
mov
sahf
cmpsl
adc
inc
pop
fisttpll
sub
loop
mov
testl
xchg
cmp
out
out
pop
push
xorl
mov
ds
xchg
outsl
bound
shrb
xchg
repnz
mov
call
and
mov
xor
ret
in
sub
enter
daa
inc
shrb
inc
push
mov
push
fsubrl
ljmp
stos
sbb
mov
cmp
test
cmp
pop
mov
or
adc
test
pop
hlt
repz
clc
rolb
dec
mov
mov
fst
sbb
jmp
jo
fldl
ret
adc
lahf
xorl
inc
sarb
cltd
cltd
dec
cmp
xchg
cs
test
sub
scas
cmp
cli
scas
cwtl
jb
es
into
add
add
jbe
push
push
loopne
jo
cld
sbb
sbb
call
data16
push
popa
add
sbb
xor
jb,pn
ss
leave
pop
push
mov
cmc
mov
cmp
test
cld
and
lods
fwait
cmp
and
add
into
cld
xor
add
pop
dec
or
fbld
adc
pusha
lods
out
popa
call
push
mov
lods
dec
jle
sti
cmp
push
push
lret
orl
icebp
movsl
add
inc
ret
mov
mov
repnz
clc
adc
inc
psubd
ja
pop
xorl
shrl
sbbl
add
fwait
pop
mov
ds
ja
pop
aam
lods
cli
push
fisubl
fstp
mov
fidivs
negb
push
jns
ret
lret
sub
push
outsl
cld
jle
bound
pop
aas
in
fsub
ficompl
mov
cltd
mov
sub
sbb
dec
sbb
dec
sahf
adc
inc
dec
sbb
dec
leave
mov
inc
std
cmp
aas
xchg
sub
sbb
sub
imul
sub
push
cwtl
incb
push
and
push
or
and
imul
aad
insb
movsb
xchg
pop
jge
pop
rorl
pop
pop
fcomip
cmp
cmp
mov
imul
sbb
xchg
push
jmp
pop
mov
and
cmpsb
xorb
jp
mov
imul
or
sbb
mov
scas
sbb
test
loop
sti
rclb
xchg
mov
fwait
rcrl
and
xchg
bound
nop
jle
stos
ljmp
dec
dec
jne
xchg
add
sar
lahf
inc
or
adc
int3
pop
pop
inc
pusha
adc
mov
inc
pusha
push
xchg
inc
mov
pop
lret
push
or
add
mov
mov
cmp
sub
jbe
xchg
outsl
mov
adcl
dec
icebp
nop
pop
rcr
xchg
jmp
mov
inc
push
push
sub
and
lea
xor
bound
xchg
stos
jg
jmp
clc
jle
sub
inc
outsb
inc
pop
xlat
mov
push
dec
repz
call
cwtl
rorl
and
inc
and
subl
and
cmp
jl
mov
in
fcoms
add
pop
xor
movsb
mov
in
shrb
mov
xchg
cmp
cmp
add
inc
and
inc
fadd
inc
add
cld
mov
cld
inc
and
pusha
xor
stos
cmc
add
fiadds
or
cmp
repz
fldl2t
inc
test
into
xor
inc
fcomip
enter
mov
sbb
lcall
loope
sti
out
rcrl
ret
fistpl
mov
and
iret
fsubl
fistl
xor
inc
jo
inc
stc
pusha
adc
pop
pop
ret
add
std
mov
cmpsl
jl
andb
push
pop
gs
icebp
push
inc
mov
les
pop
clc
xchg
jg
lock
and
into
mov
mov
imul
into
sub
pop
cmpsb
clc
xchg
cmp
jb
jecxz
rcrb
iret
dec
xchg
cmc
call
int
mov
jecxz
jo
ja
mov
mov
inc
pop
inc
sbb
cwtl
push
push
mov
outsl
or
xchg
fcoml
loopne
mov
ljmp
pop
or
add
pop
insb
ja
test
std
test
insl
jp
dec
shll
stos
mov
mov
addr16
or
pushl
mov
sub
jmp
xor
mov
push
scas
cmp
rorb
or
scas
xlat
push
stos
clc
push
cmp
jb
cmp
les
loop
shll
sub
jle
sbb
in
mov
xchg
dec
sarb
dec
out
or
xor
imul
inc
pop
xchg
mov
mov
push
mov
ret
dec
pop
add
sar
or
push
mov
rcrl
je
stos
mov
xor
nop
push
or
loope
mov
orb
xchg
pusha
jne
cmpsb
or
xchg
imul
sbb
je
xchg
cli
int3
hlt
rol
inc
inc
dec
mov
adc
push
in
xor
cmc
in
repnz
adc
sub
xchg
aaa
inc
iret
in
rol
mov
push
insb
push
xlat
and
orb
dec
or
mov
or
and
lret
lret
mov
je
jae
ds
imulb
leave
mov
add
push
mov
push
cmp
pop
ljmp
rolb
popa
repnz
lods
decl
je
adc
clc
sbb
pop
add
add
test
into
xor
pusha
imul
push
lods
out
xlat
and
jb
enter
sbb
nop
ljmp
jne
test
imul
adc
push
neg
rclb
jmp
lods
jne
add
mov
pop
pop
mov
cmpsb
mov
jno
jo
xor
add
jne
arpl
bound
lret
fiaddl
rcrb
movsb
mov
in
jg
cltd
cmp
stc
sarl
cld
stos
enter
or
pusha
inc
cli
sahf
loopne
pop
fcomip
dec
push
in
add
push
lods
sti
xchg
dec
repnz
push
insl
xchg
fs
sbb
push
bound
and
and
jne
leave
xchg
movb
int3
jne
in
outsb
stmxcsr
out
cmp
in
cmp
hlt
pop
push
lock
outsb
cmp
mov
add
mov
aaa
inc
xor
and
pop
icebp
ds
rolb
pop
pusha
sub
es
test
sbb
loop
ja
mov
jnp
push
gs
sub
inc
and
out
lea
inc
aas
mov
add
or
ljmp
pop
and
pusha
mov
push
pop
orb
dec
mov
pop
fcomps
or
jne
cmp
leave
lea
in
sar
inc
mov
mov
ljmp
mov
xchg
outsl
test
xor
sbb
syscall
add
rorl
pop
test
fsub
stc
sarb
sbb
xor
enter
pop
lods
xchg
inc
out
push
dec
sub
jmp
es
bound
and
xchg
repnz
xchg
jmp
jo
les
mov
int
test
jp
mov
add
mov
fwait
push
sub
jp
sub
mov
out
cltd
ds
pop
push
push
cltd
shrb
push
dec
dec
inc
dec
ja
in
and
or
fisubl
jl
int
mov
mov
mov
rcrb
mov
mov
out
aaa
sbb
add
aam
cmc
movsl
dec
xchg
pop
icebp
pop
dec
push
sbb
bound
es
cmc
mov
add
xor
mov
fistpl
lret
and
push
or
cmpsl
in
push
fiaddl
out
inc
push
mov
dec
mov
push
pop
and
jno
int3
frstpm(287
aas
mov
mov
add
arpl
bound
hlt
or
add
push
push
mov
inc
xchg
sbbb
add
push
pushf
scas
push
daa
add
out
fmuls
xorl
lea
dec
or
sbb
dec
js
test
xor
mov
and
mov
lret
xchg
aad
out
push
aaa
and
insl
popa
sbb
data16
popf
or
pop
push
dec
xchg
mov
outsb
movsb
mull
rcll
jne
pop
in
call
add
pop
mov
mov
sub
repz
add
mov
sbb
out
jle
imulb
mov
ds
sub
fucomip
pusha
jge
out
das
jnp
movsl
insb
idiv
icebp
push
jo
jmp
sub
es
lods
push
mov
lret
popa
mov
and
roll
sbb
xlat
vmread
add
int3
jo
push
frndint
aas
push
push
push
je
xor
out
and
js
cmp
push
roll
loopne
push
cmp
inc
int3
inc
and
mov
push
test
out
int
and
xor
stos
sbb
pop
pop
push
inc
add
stos
pop
push
in
mov
pop
iret
push
add
es
jae
push
push
out
mov
je
dec
sahf
xchg
sbb
add
pop
inc
popf
mov
lods
pop
lret
lahf
mov
repz
jne
pushf
or
add
jb
jnp
and
ficompl
push
cmp
fildll
pop
lahf
rcrb
cltd
cs
cwtl
sub
out
fldl
mov
fwait
pop
jp
add
jnp
push
mov
adc
or
cmp
test
popw
cwtl
int
adc
add
ret
clc
mov
ret
mov
jne
sbb
outsl
jge
rolb
jb
das
jne
int3
xchg
mov
adc
mov
dec
cmp
sbb
jg
mov
hlt
ficoms
cltd
pop
fldl
mov
enter
mov
mov
jecxz
mov
xchg
add
add
fdivrs
test
in
jle
pinsrw
mov
push
lods
js
jo
pop
push
mov
cmpsl
add
sub
leave
movsl
jo
cmc
mov
dec
pop
addr16
push
aam
ficoml
aaa
adc
xlat
push
insb
js
jp
adc
lahf
mov
mov
fcomi
stc
push
in
das
adc
jbe
lds
aas
push
pop
or
outsl
mov
repnz
pop
loopne
lods
mov
xchg
jge
cmp
push
cmp
jnp
mov
ds
nop
clc
out
dec
stos
lahf
dec
sti
mov
or
out
lahf
ffreep
icebp
mov
jmp
mov
jns
stos
push
cmpsl
ficoms
and
negb
jl
into
inc
and
stc
inc
adc
jae
cmp
iret
jae
push
fldenv
dec
add
mov
fwait
sbb
outsl
mov
pop
or
lods
jmp
mov
les
fwait
push
xor
xchg
dec
lahf
ret
adc
test
or
fsubl
dec
inc
mov
mov
pushf
stos
mov
adc
add
add
pop
ds
mov
cmp
jg
outsb
pushf
insl
aaa
push
iret
mov
push
push
xor
lods
xchg
loop
push
in
shll
lret
lret
imul
lea
shll
inc
mov
inc
lret
pop
sub
jo
xchg
lock
jecxz
js
fnsave
popf
xchg
fiadds
in
push
and
jo
mov
jns
mov
int
popf
cmp
xor
jae
dec
idivl
mov
clc
mov
divb
dec
jno
and
add
mov
jge
dec
clc
push
andb
test
push
aaa
xor
dec
inc
lods
cmp
dec
and
sbb
fisubs
xor
mov
or
mov
jecxz
ret
ret
mov
movsl
push
negl
push
sbbl
pop
pop
push
es
movsb
fbld
jno
dec
mov
out
outsl
call
or
rolb
inc
pop
ret
dec
por
popl
adc
jle
in
or
aam
add
test
pop
inc
sbb
mov
push
loopne
push
or
dec
dec
add
test
cmp
xchg
or
pop
push
test
pop
cmp
lahf
in
int3
mov
aad
outsb
push
xor
xchg
jmp
mov
ficomps
cwtl
fdivrl
xchg
sti
or
xchg
sbb
cmpsl
in
cmp
lea
icebp
out
cld
ret
arpl
enter
in
sarb
flds
push
add
repz
push
idivl
call
or
dec
sbb
hlt
sbb
jge
adc
mov
vpacksswb
adcb
ljmp
pop
daa
and
sbb
inc
mov
push
hlt
daa
cmp
push
lahf
add
es
mov
repz
js
dec
repz
pusha
adc
cmpsb
cmp
mov
and
adc
out
sbb
xchg
cmp
xor
popa
adc
addr16
outsl
iret
sub
add
jae
shrb
lods
mov
push
stc
out
hlt
pop
sub
dec
sbb
movsb
push
outsb
lods
jb
xor
mov
imul
or
xacquire
insl
pop
ja
cmp
fcmovnbe
mov
aaa
sbb
stos
out
pop
cmp
xchg
pop
mov
aas
mov
sar
pop
repnz
shl
or
sub
or
mov
in
popf
jecxz
xor
das
sbb
mov
dec
arpl
mov
ret
pop
xor
sub
out
jge
in
cli
sbb
lret
stos
xor
cmc
loopne,pt
sarb
mov
js
xchg
xor
fs
out
pop
mov
adc
jp
push
stos
pop
fildll
push
stos
pop
sub
lds
jle
fwait
pop
popf
dec
jb
les
ret
xchg
mov
jle
popa
xor
jle
lret
jp
inc
cmpsb
sbb
cltd
adc
cmp
cmpsb
or
jo
int3
mov
pavgb
aam
xchg
xchg
lods
les
push
fwait
hlt
xor
jne
cld
jae
inc
inc
or
arpl
mov
sub
dec
sbb
pop
stos
je
stc
mov
and
out
inc
and
int
pushf
js
cmp
xchg
mov
nop
shl
int
pusha
sbb
or
andb
movsb
dec
or
stc
jns
jno
mov
fsubrl
and
std
daa
mov
call
pop
mov
out
inc
push
mov
mov
dec
cmpsb
fisubrl
jbe
inc
inc
mov
and
xor
out
push
and
add
adc
lods
push
jmp
inc
jp
out
addr16
std
dec
lcall
mov
mov
jo
add
inc
jne
mov
xchg
adc
pusha
lock
scas
or
sbb
push
in
mov
mov
pushl
dec
jns
jmp
imul
aad
inc
push
daa
push
out
cltd
fsubrs
xor
test
xlat
fists
popa
mov
sub
push
push
fiadds
scas
xor
xor
leave
mov
dec
xchg
adc
cmp
mov
scas
nop
gs
jg
dec
adc
sbb
jge
ret
add
icebp
pop
and
sahf
pop
sbbl
imul
push
pop
fdivrl
dec
lock
push
lods
pop
mov
inc
outsl
popa
sti
xor
jne
push
pop
out
mov
rcll
lret
sbb
or
mov
out
mov
jmp
stc
shll
xor
xor
mov
jge
sbb
notb
inc
movsb
xchg
mov
es
outsb
outsl
xor
fldenv
mov
stos
jo
and
test
cmp
mov
popa
pop
popa
stc
outsl
mov
rcl
mov
sti
imul
inc
aas
fdivrs
test
mov
mov
lret
les
subl
into
push
add
pop
adcl
mov
jno
lods
cltd
dec
sti
loopne
pop
pop
mov
fs
iret
dec
test
mov
sub
orb
lods
rorb
hlt
jnp
daa
lret
mov
mov
push
xor
repz
scas
mov
dec
clc
mov
rclb
cmp
mov
dec
test
fucomi
and
push
out
dec
dec
cmp
xor
out
fidivrs
mov
clc
int3
into
pop
xchg
nop
rorl
mov
cmc
push
loop
xor
repnz
in
sbb
pop
mov
fnstsw
sbb
jmp
mov
lcall
ljmp
imul
jae
out
fbld
sub
out
sub
test
xchg
adc
stos
das
pop
out
lea
sub
jl
xchg
jae
sahf
add
push
inc
or
jne
aaa
shlb
fsubs
mov
push
clc
cld
mov
cmpsb
mov
std
jle
mov
jns
add
movsl
out
push
mov
testb
mov
stos
fmull
ljmp
and
mov
roll
lret
or
xor
fsts
or
jmp
in
dec
sti
xchg
leave
mov
fs
mov
sub
mov
bound
push
jb
dec
loope
pop
push
cmp
adc
adc
insl
movsl
xchg
stc
mov
es
jne
mull
mov
push
cmp
fwait
mov
dec
push
or
out
sbb
sub
or
pop
jmp
enter
inc
adc
mov
xchg
mov
sbb
ja
out
pop
cmp
icebp
loop
outsl
dec
mov
movl
cmp
lods
inc
adc
cs
push
xchg
and
mov
sti
fwait
push
mov
mov
cld
xchg
sub
or
stos
stc
mov
in
aas
insl
push
pop
subl
scas
std
mov
rorb
xor
mov
into
mov
pop
popf
hlt
test
xor
out
xchg
movsb
push
add
cs
jmp
cwtl
push
jmp
movsl
dec
mov
mov
sub
testb
movsb
xor
je
adc
pop
sbb
pop
xor
out
jnp
pop
add
lock
in
cmpsb
mov
fisubrs
rclb
pop
xchg
dec
mov
adc
mov
shr
mov
adc
popf
push
adc
shr
adc
inc
inc
xor
add
xchg
dec
cltd
pop
xor
data16
cmp
les
adc
pop
es
xor
jg
cmpsl
inc
xchg
cwtl
out
aas
loopne
sbb
dec
jecxz
neg
push
or
mov
push
mov
jns
imul
nop
dec
dec
sub
jo
mov
pop
push
popf
mov
mov
int3
in
dec
xlat
test
ljmp
cmp
inc
fists
add
jnp
mov
cmp
lret
adc
jle
mull
idivl
add
js
sbb
loope
push
pop
jl
dec
dec
mov
mov
imul
loop
cmp
add
gs
aaa
lcall
push
jb
and
add
outsl
scas
rorb
repnz
dec
mov
jl
jbe
push
lods
mov
pop
insl
mov
mov
movsl
cld
xchg
pop
idivl
jns
inc
in
fisttpll
cmpsb
rcll
pop
mov
dec
adc
gs
mov
cld
push
mov
out
cmp
outsl
or
stos
adc
in
push
icebp
pop
flds
mov
jb
mov
mov
leave
stos
or
out
or
sbb
jo
leave
and
std
pop
fbstp
sbb
movsl
adc
ret
adc
loop
fstpt
jb
pop
sti
inc
outsl
pop
and
push
mov
nop
or
subl
inc
sbb
out
jnp
push
bnd
clc
pop
bound
test
or
jge
ror
ret
or
je
mov
adc
ss
stos
add
es
and
xor
enter
and
pushf
fadds
mov
das
jge
pop
or
sbb
jae
mov
bound
divb
mov
pop
mov
ljmp
outsl
adc
icebp
jo
loopne
je
and
jo
and
dec
lods
mov
push
je
cmp
adc
mov
xor
push
outsb
push
sbb
mov
aas
and
xor
cmp
mov
pushf
out
sti
int
cld
pop
mov
jo
arpl
sbb
add
mov
loop
push
push
mov
or
pop
pop
adcb
das
mov
roll
stos
les
js
or
insb
daa
js
lret
inc
adc
sbb
js
and
fs
ror
mov
jg
test
jne
jne
push
imul
pop
mov
insb
pusha
aam
jbe
insb
and
xor
rcrb
lea
fs
dec
mov
cmp
mov
xchg
add
loop
stos
sub
xchg
aam
lahf
jnp
add
fldl
inc
jmp
and
fldl
sub
mov
pop
daa
test
cmp
idivl
movb
pusha
call
pmaddwd
inc
sbb
mov
call
cmp
shl
fbstp
jae
or
in
cld
mulb
int
adc
lock
stos
cwtl
adc
cmp
arpl
bound
xor
out
sarl
xchg
jo
mov
mov
sarl
mov
pop
scas
pop
subl
lods
movsl
mov
pop
sbb
sbb
adc
ret
pushf
mov
xchg
lcall
fnstenv
ror
mov
les
mov
mov
or
sbb
lcall
and
xor
cmp
xchg
push
scas
lds
movsb
les
insb
imul
stc
dec
cmpsb
pop
mov
xchg
in
add
dec
leave
mov
lods
jg
pop
mov
ficompl
sub
adc
mov
add
mov
decb
mov
pop
rcr
jb
dec
mov
cmp
sbb
lret
jbe
inc
or
call
adc
loop
rol
add
mov
cmpsl
ss
in
imul
outsb
out
arpl
scas
scas
mov
jb
pop
adc
mov
test
push
mov
fwait
sbb
or
cmpsb
hlt
gs
adc
push
and
and
xor
enter
imul
mov
mull
xor
pop
pusha
pop
adc
movsb
pop
std
insl
xchg
push
loopne
out
inc
pop
shrb
into
inc
push
inc
adc
fiadds
fimuls
imul
dec
jp
sbbl
iret
pop
cmc
in
dec
adc
jecxz
jl
and
rcll
add
hlt
fstl
hlt
xchg
sbb
pop
mov
xchg
jecxz
mov
adc
hlt
scas
out
bound
cmpsb
mov
xor
sbb
je
jp
lock
mov
movsl
insb
pop
pop
sti
test
xor
fadds
mov
scas
push
imul
mov
dec
dec
test
js
jp
pop
xchg
stc
es
stos
cmp
mov
insb
push
xor
int3
mov
dec
dec
adc
int3
scas
sub
js
and
sub
inc
cmp
sahf
mov
inc
dec
repnz
cwtl
in
mov
leave
jecxz
sub
cwtl
sahf
mov
into
or
sub
sub
adc
mov
xor
xchg
outsl
or
in
cwtl
sahf
mov
fwait
mov
push
pop
xchg
mov
inc
mov
jl
icebp
sub
and
jae
xchg
dec
push
std
pushf
aad
or
pop
cltd
addr16
into
sub
pop
push
lea
js
icebp
int3
insb
cmp
imul
and
sbb
fwait
rorb
gs
test
mov
add
or
je
iret
mov
loop
mov
sarl
fnsave
pop
xlat
mov
add
xor
adc
fsubs
sbb
jmp
dec
pop
xor
adc
repz
mov
sub
cmpsb
cltd
mov
sbb
pop
xor
push
in
xlat
movsb
faddl
rorb
jmp
sub
sbb
lods
arpl
push
popa
adc
inc
pop
mov
push
or
iret
sbb
repz
jb
pop
outsb
xorb
imul
xacquire
arpl
movsb
mov
dec
xor
icebp
inc
or
or
repz
das
leave
push
call
je
js
jle
sti
mov
add
stos
rcll
pop
mov
jl
in
xchg
sbbl
xchg
pushf
add
das
outsl
dec
sti
mov
add
bound
cmp
jl
push
sti
lret
or
arpl
out
push
or
xchg
ds
clc
jnp
cmp
add
imul
aam
jo
push
adc
cli
add
mov
in
mov
scas
lods
push
dec
leave
iret
in
into
bound
rclb
enter
lahf
push
inc
and
mov
das
cmc
add
dec
arpl
adc
insb
test
push
and
jge
pop
mov
sbb
dec
mov
repnz
mov
jmp
adc
mov
xchg
pop
fidivrl
xor
jmp
daa
cltd
mov
inc
es
test
xor
out
push
les
stos
test
inc
dec
mov
mov
sub
loope
push
jle
or
jo
jg
repnz
jne
scas
add
add
aam
pop
push
and
outsl
stos
leave
bound
div
enter
mov
cmp
and
jae
sbb
mov
jl
mov
mov
and
pop
jo
ja
ljmp
int
and
jl
push
xlat
fisubs
scas
pop
xor
test
repnz
lods
idivl
xchg
mov
add
mov
and
enter
mov
faddp
and
push
in
daa
out
gs
call
inc
pushf
test
std
jl
sbb
mov
sahf
and
adc
sbb
xor
mov
fmuls
cmp
sbb
imulb
pop
inc
js
fucomip
outsb
xchg
add
mov
mov
sub
mov
mov
sub
nop
pusha
push
mov
insl
idivb
and
pop
xlat
test
repz
dec
jnp
inc
outsl
lret
mov
cltd
push
mov
jmp
adc
jecxz
loope
adc
js
inc
cmc
je
jl
rcrb
adc
in
push
jae
pop
inc
sar
repnz
stos
scas
jle
mov
jg
cmp
and
in
inc
stos
pop
jecxz
xchg
add
pop
lock
popl
pop
loopne
jg
and
push
lods
out
mov
stc
je
add
lds
adc
add
test
push
mov
push
test
cld
push
shl
fistl
add
sbb
ret
push
scas
mov
filds
in
sbb
mov
sub
sbb
push
sbb
int3
int3
call
rcr
sbb
pop
loopne
xchg
lcall
xchg
decl
mov
cld
lock
mov
inc
xchg
out
out
lcall
mov
dec
inc
cmpsl
pop
cmp
icebp
adc
push
popa
adc
gs
jp
jbe
loopne
shl
jae
lret
jae
xchg
data16
test
pusha
data16
imul
xor
cmp
inc
add
cmp
inc
adc
fxch
mov
inc
jnp
jo
xlat
fiadds
pop
jge
pop
popa
mov
mov
test
mov
subb
ficomps
pop
push
inc
gs
shll
jb
lock
mov
in
dec
ljmp
rorl
cmc
imul
adc
xchg
ljmp
mov
and
mov
enter
nop
mov
sub
xor
andb
mulb
mov
mov
into
out
mov
out
popa
daa
adc
pop
bound
data16
push
rcrb
push
mov
mov
pop
xorl
pop
sub
pop
dec
jno
ljmp
mov
dec
xchg
loopne
mov
jns
cli
sbb
xor
js
arpl
push
xor
fnstsw
je
in
dec
jge
lcall
cltd
orb
aad
lds
fwait
outsl
or
in
pop
fadds
sbb
hlt
mov
call
shrb
xchg
cmp
cmp
jp
mov
hlt
mov
out
xchg
add
clc
pop
jg
push
xchg
pop
lock
xor
sub
mov
mov
push
loopne
xor
pop
test
push
imul
cmpsl
test
test
inc
loope
outsl
inc
addb
cmpsb
push
scas
adc
mov
add
mulb
push
in
xor
pop
jmp
adc
xor
pop
rcrb
imull
or
xchg
lahf
mov
jno
faddl
jmp
mov
cmpl
lock
data16
repz
or
ds
push
push
in
xor
es
pop
xchg
outsb
push
mov
fidivrs
pop
cltd
addb
sahf
sub
sub
push
sbb
sub
or
stc
test
xor
push
test
xor
pusha
ss
aaa
insl
mov
xor
insl
imul
int3
aam
out
xchg
xchg
arpl
push
add
fnstenv
sti
mov
pusha
inc
call
mov
ljmp
push
int3
or
xor
cmp
popf
jle
push
es
mov
sub
jnp
cmpsb
xor
add
repnz
lret
or
mov
out
mov
repnz
stos
mov
negb
aad
rorl
mov
pop
fsubrl
inc
dec
fwait
in
out
cmpl
loop
mov
push
lcall
das
sub
inc
jle
ss
jb
add
dec
dec
add
adc
add
in
jne
sti
insl
jbe
ret
idiv
and
inc
jnp
xchg
lahf
divb
addr16
test
bound
repz
or
sbb
mov
inc
stc
sahf
int
mov
or
lods
push
addr16
cli
mov
subl
ds
add
and
cmp
push
jle
pop
xor
push
push
cli
loopne
inc
pop
js
pop
push
inc
add
sub
pop
ror
mov
push
aaa
mov
jg
sub
insl
ret
mov
inc
imul
jae,pt
xchg
mov
outsb
xchg
test
fwait
sti
cld
enter
cs
xor
rolb
adc
push
in
pop
and
arpl
and
pop
mov
sbbl
pop
inc
add
xor
pop
and
fucomp
dec
adc
pop
sbb
inc
mov
scas
inc
pop
jle
xchg
lock
loop
jg
in
cld
jnp
insl
and
mov
xchg
in
fdivrs
fildl
adc
pop
or
dec
mov
mov
js
xchg
pop
push
arpl
dec
pop
fcmovnu
iret
dec
pop
add
test
mov
cmpsl
cmp
popa
adc
popa
sub
xorb
lock
xchg
fwait
lret
jbe
jge
jmp
enter
sbb
scas
enter
or
movsl
rcl
adc
lock
pop
inc
cvtps2pd
adc
fstpt
pushf
adc
movsl
out
pop
adc
add
or
ds
fs
jo
lret
pushf
jmp
or
push
inc
inc
xor
loope
pop
loopne
cmp
test
sti
lret
pop
adc
mov
movsl
in
pushf
pop
fcoms
mov
notb
jmp
jnp
and
loope
sbb
sbb
dec
xor
pop
in
fwait
shlb
or
test
stos
adc
shlb
outsl
sahf
xchg
add
pusha
sbbb
sub
popf
sbbb
cmp
outsl
add
xchg
outsb
jb
pop
jle
xor
ds
sub
lods
inc
in
outsb
mov
mov
jp
test
jg
dec
jg
jle
test
sub
adc
daa
pop
lock
es
push
jl
dec
xchg
test
inc
inc
stc
cld
out
ss
push
lock
enter
ss
sub
xchg
add
adc
mov
push
daa
sub
fnstenv
adc
and
aas
jb
aaa
cmc
shlb
cld
or
pop
insb
mov
imul
outsb
pop
add
jb
and
leave
popa
gs
movl
mov
or
xchg
in
fidivl
xorb
ljmp
cmp
cli
cld
es
dec
fsts
pop
les
jmp
mov
test
insl
data16
les
adc
inc
mov
pop
fs
rcl
lods
aad
popa
pop
sahf
sbb
or
pop
mov
mov
mov
jl
das
sub
in
in
push
mov
test
pop
mov
int3
aam
cmc
xor
adc
and
or
lret
sub
xlat
sub
jle
das
mov
push
inc
div
daa
add
inc
nop
dec
mov
xchg
dec
mov
repz
xor
test
mov
push
add
or
lds
or
je
sub
sbb
mov
sub
loope
fs
sbb
in
ret
aaa
fwait
inc
xchg
mov
cmp
pop
jbe
xchg
jl
xor
sub
cmpsb
xchg
sbbl
mov
cmp
stos
not
cmpsb
fdivs
outsb
fmuls
lret
out
inc
xor
mov
cmpsb
push
add
addb
adc
jg
lods
mov
mov
jbe
fdivrs
insl
inc
shr
icebp
test
mov
push
dec
in
out
mov
insl
and
nop
fucomi
in
aad
inc
and
ds
out
push
push
or
cmp
sub
cmp
push
xor
pop
or
fstpt
adc
fldt
in
cmovg
in
stos
and
imul
jo
scas
mov
stos
and
adc
outsb
in
iret
or
cmpsl
dec
dec
xchg
sub
xor
movsb
push
test
push
clc
cmp
arpl
xchg
lcall
sbb
jle
in
in
ss
mov
or
xor
pop
stos
xchg
lea
dec
addl
das
jge,pn
pop
call
out
xor
or
dec
inc
cmp
das
lret
hlt
mov
aad
xor
aad
loop
pushf
int
or
push
xor
cmp
shrb
xchg
inc
push
mov
push
xor
push
inc
jbe
shlb
lcall
subl
pop
and
and
mov
xor
mov
sub
mov
pop
arpl
mov
pop
loop
aaa
push
adc
or
and
mov
xor
es
jne
fbld
gs
adc
mov
and
fimuls
loope
out
cs
int3
cmpsl
cmpsb
mov
in
test
pop
cmp
nop
sbb
xchg
cmp
fdivs
push
ljmp
sub
mov
sarb
sbb
pop
cmpsb
pop
dec
mov
loop
sbb
jle
cmpsl
sbb
orl
add
div
push
jl
add
hlt
pushf
adc
loope
fs
les
addr16
insl
pop
sbb
iret
iret
jmp
cs
fsubp
je
sbb
add
fmull
mov
adc
mov
cmpb
mov
xor
and
xchg
sahf
loop
clc
push
out
rol
movsb
loopne
es
pop
popf
mov
push
popf
xchg
mov
jb
push
and
bound
sub
jp
add
mov
pop
sbb
cmpsl
mov
cmp
jp
mov
lds
mov
idivb
ja
jae
imul
xor
ss
mov
bound
sbb
pop
mov
pop
call
ljmp
jns
pop
popl
or
mov
jmp
enter
mov
test
cltd
dec
aad
pop
lahf
cwtl
cwtl
inc
cmp
adc
push
cmpsb
xor
sbb
and
lcall
ds
sub
sub
sbb
cli
pop
pop
jp
pusha
lock
stc
aaa
gs
aam
daa
arpl
mov
or
paddw
mov
cmp
addr16
movsl
inc
sub
push
cmc
lds
pop
or
sbb
stc
shll
loopne
add
imul
fbstp
sbbb
jge
leave
shlb
cmp
cmp
push
jnp
fldt
push
mov
lcall
pop
mov
xchg
push
out
jne
fnstenv
test
ds
add
xchg
out
add
push
push
testl
mov
ja
stos
inc
pop
fadds
dec
cs
jae
loope
enter
adc
lret
fnstsw
pop
sti
xlat
iret
into
fsubrs
push
stos
adc
dec
cltd
icebp
xchg
das
call
aaa
hlt
stos
cwtl
nop
sub
xor
push
cmp
lds
idivl
cmp
sub
lcall
and
cmp
cmp
pop
jp
call
lods
mov
cli
sahf
int
add
inc
pop
and
push
mov
xchg
and
add
dec
pop
add
lcall
outsl
mul
js
mov
push
arpl
mov
or
cld
push
inc
enter
nopl
in
or
pop
push
inc
or
inc
test
adc
and
les
mov
cmp
sahf
fnstsw
pop
mov
sbbl
jo
cli
dec
jo
sub
shlb
sub
dec
mov
fstp
jne
pop
adc
in
test
fidivrl
stc
mov
xchg
dec
xchg
mov
nop
data16
pop
test
lcall
pop
bound
sbb
test
add
lret
or
xor
andb
xor
and
mov
mov
cli
and
sbb
std
xor
adc
and
imul
sbb
mov
sbb
ljmp
es
push
iret
push
pop
sub
push
mov
loopne
subb
ja
sarb
cmc
dec
adc
dec
xor
pop
or
das
jbe
mov
out
fidivrs
jne
out
push
mov
int3
add
iret
xor
fcmove
movsb
push
pop
daa
ds
rcl
pusha
jecxz
sub
sti
std
sbb
imul
cmp
inc
xor
test
and
in
pop
int3
divb
sub
jl
das
add
stos
mov
inc
addr16
and
dec
mov
rcrl
push
push
pop
imulb
xchg
mov
dec
inc
aam
jne
imul
repz
sbb
cwtl
xchg
enter
push
aaa
nop
jl
movsl
mov
xor
cmp
mov
popf
push
das
sbb
cmp
inc
arpl
pop
ja
jo
test
lret
shl
fsubs
xor
jne
mov
jl
adc
je
push
fcom
adc
into
xchg
es
mov
les
scas
push
das
xchg
dec
dec
xchg
les
mov
mov
push
fs
stos
int3
push
cmp
sbb
es
insl
icebp
mov
mov
xchg
sbb
leave
jns
out
jecxz
lret
jne
lods
or
lcall
fwait
cmpsl
adc
inc
dec
adc
orb
pop
push
jl
gs
push
es
fisubs
je
mov
movsl
ret
mov
lods
push
push
adc
mov
pop
insb
outsl
adcl
pusha
aas
lods
adc
jmp
adc
mov
ret
in
add
add
dec
sahf
out
sbb
insl
inc
jl
mov
mov
sbb
ficoml
pop
enter
stos
fidivrl
call
es
add
pop
adc
clc
filds
or
jbe
shll
jle
pop
xchg
addr16
test
repnz
mov
mov
sbb
lods
adcl
adc
push
xchg
into
cmp
cmp
das
loop
push
mov
push
testl
insb
mov
fisubrs
xorb
push
jmp
es
in
rcrl
popa
cmpsl
pushf
pop
xlat
pop
stos
add
push
jp
jge
in
cli
fsubrs
add
scas
test
outsb
mov
mov
pop
jge
jno
adc
push
lar
dec
sahf
fisubrl
and
mov
dec
mov
or
xchg
xor
sub
pop
cmp
or
pusha
rorl
sub
mov
loopne
lock
fnsave
xor
adc
int
xchg
lods
sub
call
inc
xor
push
adc
mov
xchg
xor
adc
into
adc
mov
je
test
mov
sub
sub
push
data16
rorl
adc
fs
push
test
or
jo
adc
cmp
add
popf
mov
pop
in
rcrl
gs
imul
sti
aam
mov
shl
inc
inc
sbb
rdtsc
notb
leave
or
int
or
xchg
ret
adc
jno
cmp
cmp
or
notb
lret
sub
rorl
test
push
iret
push
or
sub
aas
icebp
xchg
mov
out
outsl
inc
pop
mov
or
mov
outsl
cmp
add
mov
adc
mov
mov
pop
out
aaa
dec
lret
add
add
cmpsb
push
pop
jle
cmpsb
mov
iret
pop
imul
push
lret
int3
sub
lods
es
fdivs
fmul
mov
xor
xlat
rcrb
lahf
xchg
insb
push
push
mov
pop
fistpl
shrl
cmp
mov
ret
or
or
mov
adc
shrb
push
repz
and
imul
push
xchg
mov
mov
in
leave
mov
imull
xchg
adc
dec
inc
dec
push
lock
ljmp
test
jmp
dec
lods
loop
mov
es
aam
mov
xor
mov
pcmpgtb
pop
lds
jge
dec
push
mov
out
leave
mov
jns
in
insl
flds
push
add
xchg
mov
gs
out
scas
dec
repz
pop
sbb
leave
and
xchg
aas
flds
inc
dec
add
cltd
js
nop
cmp
push
stos
ja
test
mov
mov
aam
jle
jns
mov
push
and
mov
fsubrs
and
out
daa
std
mov
or
in
push
jg
and
mov
out
test
mov
enter
loopne
ljmp
gs
mov
lcall
cmp
push
push
lock
jo
ljmp
std
inc
mov
mov
pusha
fsts
nop
xchg
adc
push
popf
inc
push
imul
ja
inc
sub
jae
shr
ret
sub
sti
adc
mov
bound
ljmp
sub
das
sahf
lahf
loope
test
lea
fcos
movl
fld
out
mov
test
pop
jmp
pop
dec
dec
call
lahf
add
aaa
lahf
push
xchg
addr16
sub
adc
test
jl
jbe
lcall
pushf
pop
push
je
push
pushl
inc
jb
int
cmp
inc
fmul
loop
repz
xchg
jae
inc
add
jnp
xor
ret
shll
dec
es
cmp
mov
or
sub
int
addl
lahf
add
pop
ficoml
and
fidivs
inc
sub
push
lods
ja
push
jmp
cmc
fldcw
orb
or
push
pop
ret
repz
lahf
jo
ljmp
into
addb
jne
xor
cli
sbb
mov
inc
cmp
loope
mov
das
pop
jbe
fldl
lods
jge
imul
stos
js
xchg
cwtl
pop
sub
jns
icebp
jb
insl
mov
pop
inc
and
adc
cld
add
add
mov
xlat
scas
repnz
rclb
outsl
add
lcall
sbb
fiadds
adc
rorb
test
fwait
inc
outsl
daa
dec
pop
cmp
popa
in
fstp
pushf
adc
std
incb
movsl
rorl
pop
sub
mov
loop
inc
cwtl
adc
pop
xor
adc
xorl
call
fcomps
sbb
mov
rcrl
lret
adc
in
divb
loope
faddp
sub
push
test
dec
loopne
data16
je
mov
or
pop
rcrl
add
cld
mov
mov
mov
xchg
lods
test
push
inc
data16
enter
inc
std
xor
aaa
adc
mov
fcmove
mov
movsl
add
pop
mov
movsl
cmp
xlat
pop
cmpsb
sub
push
std
addr16
mov
inc
aaa
out
lock
lock
aam
jne
aas
sub
mov
xchg
cs
lretw
hlt
lods
fmuls
inc
mov
out
or
scas
orl
sub
out
cmpsl
inc
sub
popa
push
daa
xor
scas
rcrb
loope
inc
inc
pop
lock
dec
aaa
pop
mov
or
cmp
sub
inc
stos
push
rcrb
sahf
sbb
push
jmp
mov
lret
mov
ret
idiv
pop
xchg
cli
clc
xor
mov
in
mov
cmp
das
push
mov
adc
test
adc
push
inc
mov
stos
pop
xchg
jmp
pop
call
ss
repnz
shl
inc
adc
cmp
pop
and
in
xchg
lret
fbld
adc
shl
dec
push
cwtl
aaa
mov
pop
sub
pop
xchg
jg
and
clc
pop
and
dec
sbb
xchg
loop
mov
push
nop
incl
repnz
daa
fists
or
out
or
dec
inc
imul
ret
stc
sbb
lcall
out
mov
pop
dec
mov
cmpsl
clc
dec
mov
pop
add
cmp
mov
push
jmp
fs
xor
xor
xchg
xor
lret
add
sahf
aad
scas
rcll
fs
push
cli
into
mov
sub
xor
cmp
xchg
mov
xchg
fidivrl
dec
inc
sbb
decb
push
jle
jbe
lock
out
mov
mov
in
movsl
push
inc
popa
or
inc
ljmp
in
arpl
xchg
jle
nop
adc
push
inc
scas
ljmp
inc
jns
mov
add
mov
fiaddl
mov
imul
rcll
loopne
cltd
aaa
push
fdivrs
jge
ds
or
xchg
inc
mov
add
push
cmp
aam
mov
loop
mov
movsb
frstor
fadd
mov
xchg
and
movsl
or
mov
leave
xchg
push
pop
adc
xchg
stc
sub
push
push
shl
pop
fsubr
subb
imul
add
xor
gs
mov
lea
lahf
lods
xchg
mov
sbb
test
notl
fnsave
pop
iret
inc
lock
ds
paddd
pop
mov
pop
call
inc
test
fwait
outsb
imul
inc
roll
cmpsb
repnz
rcll
xor
add
jle
xor
call
into
fstpt
jmp
and
jl
push
and
daa
clc
aad
arpl
dec
pushl
lods
fdivr
nop
push
aaa
mov
enter
jbe
test
pop
xor
mov
pop
add
les
rclb
adc
andb
push
mov
fistl
movsb
xchg
and
mov
push
out
sub
push
cltd
mov
es
mov
repnz
jge
jbe
clc
outsl
mov
fimuls
jae
sbb
mov
jg
fwait
add
xor
or
cmpsl
xchg
xor
push
daa
out
imul
call
adc
and
sbb
mov
xchg
jns
movsb
das
into
das
test
sahf
jle
out
pop
jno
mov
fimuls
iret
push
lock
xchg
dec
or
jno
sub
pop
xor
or
lods
mov
mov
rcll
sysret
push
and
lock
pushf
and
dec
scas
scas
fmull
mov
pop
mov
scas
test
add
xor
out
scas
jo
arpl
xlat
shlb
cltd
cmc
test
xchg
scas
push
outsl
or
mov
mov
xor
ret
fildll
inc
inc
pop
call
fldenv
jne
and
cmpsb
je
jno
pop
dec
cli
mov
pop
hlt
into
xchg
outsl
aad
pop
pusha
jo
mov
mov
and
rolb
pop
and
mov
pop
or
cmp
push
dec
pop
test
push
ljmp
call
ja
pushf
pusha
and
add
loope
pop
sbbl
push
cmp
enter
ja
js
pushf
loop
jb
or
cmp
das
je
pop
mov
xchg
js
pop
jecxz
jnp
aad
shll
or
sbbl
xchg
in
enter
or
and
push
pop
divb
sti
cmp
es
cs
fnstsw
stc
into
data16
pop
mov
dec
in
fwait
stos
add
or
ljmp
fs
sbb
scas
or
pushf
enter
inc
into
jle
xchg
or
js
push
add
loopne
inc
int3
in
scas
inc
es
add
cmpsl
mov
lahf
ja
out
cli
dec
sqrtps
inc
aam
or
lret
loop
push
sub
fistpll
dec
mov
cmp
pop
divl
and
add
push
std
test
lret
mov
cmp
xlat
mov
jge
add
loopne
insw
mov
or
xor
lods
fldcw
inc
inc
cli
cwtl
pop
insb
ffree
mov
or
mov
lds
or
mov
std
push
xchg
adc
mov
shlb
mov
jnp
daa
shll
icebp
stc
xchg
out
loopne
repnz
in
fidivl
leave
sbb
test
test
stos
add
addr16
rclb
insl
leave
add
repnz
pop
ja
iret
jne
xchg
xor
jge
repz
and
mov
pushf
inc
fs
xor
rcr
jg
and
jno
lea
or
mov
in
jne
sub
shrl
jnp
aad
aam
std
repz
add
in
imul
leave
ljmp
fmulp
fdivrl
test
sbb
les
cltd
leave
jecxz
inc
stos
cs
stos
xor
loope
testb
stc
in
push
mov
aad
pop
sahf
pop
insl
xchg
add
cmp
push
popf
push
les
mov
push
mov
ja
xor
gs
es
data16
mov
add
iret
mov
xor
jg
hlt
das
into
in
xor
push
sub
repz
aam
stos
fildll
outsl
mov
mov
xchg
sub
pop
loope
clc
notl
lahf
and
call
es
cmp
cmp
outsl
jmp
popf
repnz
jecxz
int
xor
mov
cmp
cmpsb
jge
cmp
in
dec
pushf
inc
or
inc
cmpsb
lret
sub
popa
mov
jmp
cmpsb
das
or
dec
out
cwtl
aam
test
xor
movsb
push
testl
sub
mov
mov
jmp
sub
sarl
cmc
test
roll
jmp
test
pop
adc
hlt
dec
jge
xchg
rcr
js
fcomp
ds
mov
mov
pop
xchg
mul
icebp
movsl
push
cwtl
or
mov
or
icebp
icebp
jnp
es
int
imul
cmp
adcb
sub
mov
ret
in
in
popa
enter
notl
jne
sbb
add
jecxz
iret
adc
movsb
pop
icebp
pop
adc
jge
ss
jecxz
into
and
xor
push
stos
jb
jg
out
sub
ror
xchg
inc
push
jnp
repnz
cmpsl
sbb
outsb
jns
jne
leave
arpl
adc
jb
in
inc
call
add
push
inc
add
clc
test
das
push
das
mov
lret
mov
cltd
mov
and
mov
sbb
xchg
inc
and
mov
pop
push
fmuls
testl
add
adc
sub
xor
pop
mov
into
inc
test
xchg
sub
data16
xor
pop
cmp
jmp
incl
insb
mov
ja,pt
or
inc
sti
cltd
outsb
sub
add
inc
or
in
lcall
repnz
sub
push
subl
mov
push
cmpsl
mov
cmp
insb
xor
push
scas
mov
push
xor
in
pop
sbb
ss
sbb
jmp
adc
xchg
in
cmp
sbb
xchg
fcmove
xchg
outsb
xlat
and
hlt
jno
pushf
mov
add
dec
lahf
mov
mov
ja
repz
inc
idivl
mov
dec
stc
lods
push
test
jns
daa
or
mov
fwait
lahf
mov
jg
sub
mov
mov
in
cmp
adc
sarb
lcall
xchg
iret
dec
adc
or
dec
jge
test
inc
or
lock
pusha
or
push
loop
fldl
jns
ss
ss
lock
mov
sti
fcmovu
pop
std
in
daa
aas
cli
jmp
aad
clc
outsl
mov
jb,pt
movsb
in
shlb
pop
jo
xlat
lea
sub
push
dec
rcrb
jge
pushf
imul
add
push
mov
imul
xor
pop
aas
int3
jl
push
xor
jmp
pusha
mov
cwtl
mov
nop
pop
out
dec
push
mov
mov
jg
hlt
cld
xchg
xor
mov
or
inc
mov
std
pop
aaa
cwtl
pop
fdivrs
add
jbe
sbb
clc
pop
push
inc
mov
into
sbb
into
insb
push
sub
jbe
ljmp
and
or
xchg
pop
jnp
imul
aam
lret
out
pop
adc
dec
sbb
pop
mov
test
jae
sub
fsubp
and
fmulp
insb
je
xor
xor
cmpsb
sub
mov
pop
addb
dec
aam
mov
out
or
andl
sti
loope
or
ljmp
mov
cltd
adc
fs
or
jge
ret
jl
jecxz
rorl
mov
jno
call
push
roll
mov
mov
sbb
pop
fs
mov
mov
negb
jg
movsl
bound
add
push
aas
cmp
ds
xor
xor
das
nop
popa
xchg
push
mov
cmp
xchg
mov
jmp
or
xchg
mov
orl
mov
fldcw
pop
cmpsl
dec
cmpsl
sub
jnp
add
mov
ret
xchg
fs
incb
xchg
mov
xchg
sti
mov
inc
aas
add
cwtl
and
mov
les
in
xlat
idiv
adc
xchg
fs
data16
lcall
enter
mov
push
cmpl
xlat
cmp
outsl
int
sarl
lret
out
es
mov
push
dec
xchg
inc
add
or
out
pop
pusha
dec
aaa
pop
push
sbb
xor
iret
lret
adc
dec
xor
sub
gs
sti
mov
and
push
fcomps
mov
xor
cmp
sub
and
ret
mov
inc
and
incb
sub
push
pushf
or
aam
jle
ja
in
push
shll
inc
paddb
xlat
mov
cmp
pop
adc
xchg
cld
jecxz
outsl
xor
jl
jbe
mov
and
xchg
out
mov
orl
loop
mov
lds
gs
jbe
cmp
jp
sti
test
sarl
js
test
insb
mov
mov
sub
push
sbb
or
ja
cmc
adc
in
pop
ret
daa
loope
lds
adc
fld
or
cmp
cld
jecxz
xchg
and
xor
xchg
xchg
mov
psubsb
mov
rclb
inc
push
jl
cltd
imul
out
adc
lret
dec
in
xor
outsb
push
xchg
jbe
fcmovu
aam
or
push
sub
fistpl
cmp
sbb
inc
mov
push
loope,pt
inc
int3
adc
std
adc
cmp
mov
pop
je
repnz
imul
imul
cmp
dec
shll
sbb
mov
movsl
outsl
addr16
mul
adc
in
mov
ret
es
js
inc
add
loope
push
out
loop
hlt
and
ret
fstpt
ret
aad
xorl
ds
xor
jmp
mov
pop
enter
sub
adc
mov
adc
push
int3
testb
inc
or
test
and
or
inc
adc
out
xlat
mov
in
add
loope
test
icebp
dec
cmpsb
lretw
jmp
nop
iret
fdivrs
xchg
roll
xor
adc
lds
dec
xchg
pop
rorb
pop
stos
mov
dec
adcl
sub
jecxz
in
sbb
lret
in
pusha
and
cmpsb
call
jae
daa
pop
out
pop
or
xor
jmp
mov
loop
loope
lret
add
notl
dec
mov
mov
fadd
rolb
sub
test
adc
lds
push
outsb
push
mov
arpl
es
lock
ret
ficoml
out
aaa
jge
int3
ss
jle
test
es
push
mov
in
or
inc
int3
loopne
mov
cbtw
push
shll
jmp
push
ja
bound
mov
in
dec
jae
shll
inc
dec
xor
push
or
xor
inc
std
or
add
in
jo
or
push
scas
mov
mov
adc
repnz
sahf
rolb
ja
adc
sti
out
push
xchg
mov
mov
jbe
lcall
push
aaa
sbb
mov
dec
lds
dec
ja
int
add
aam
stc
mov
mov
cmc
fs
adc
sbb
stos
xchg
fisttpll
jns
adc
mov
aam
shll
lds
add
adc
leave
mov
sahf
and
test
and
and
repnz
lods
ret
add
and
outsl
ss
dec
dec
xor
outsb
mov
das
push
cli
sbb
fldt
loop
into
insb
mov
loopne
mov
push
cmc
pop
cmp
and
sub
shll
mov
divb
push
aad
mov
inc
dec
adc
es
sub
xchg
rorb
ds
push
ror
mov
movsl
movsb
pushf
and
cmp
or
cmp
xchg
mov
and
adc
mov
push
loopne
les
sub
mov
repz
push
inc
cli
pop
dec
clc
int
ja
je
adc
leave
call
inc
jnp
mov
dec
loope
mov
sbb
mov
dec
bound
ret
and
addb
cmpsb
mov
loopne
sbb
xchg
and
call
mov
shll
outsl
pop
adc
cmp
cmp
pop
sbb
push
popa
mov
pop
ret
add
add
xor
or
pop
lds
sbb
pusha
ja
hlt
test
xor
mov
fisttpl
adc
jge
inc
sub
or
and
test
cmp
into
mov
loop
pop
ret
fcmovbe
jl
or
push
sar
nop
jnp
movsb
enter
add
ret
daa
leave
or
ficoml
dec
mov
cltd
sbb
jle
mov
push
mov
jbe
sahf
enter
rol
or
movsl
nop
sbb
popf
test
push
inc
aas
or
jb
jecxz
jnp
add
sbb
xor
lds
mov
std
adcb
jmp
adc
sub
les
dec
jns
mull
xor
cmp
test
jne
enter
mov
pop
aad
jge
je
out
mov
cmp
dec
gs
inc
sar
sub
out
mov
jno
outsb
sahf
and
inc
pop
ja
stos
test
fnsave
aad
cld
ret
push
inc
push
adc
or
loop
adc
jmp
das
pop
add
sti
pop
gs
mov
jo
in
fistpll
pop
push
fsubrp
mov
jmp
lcall
popf
push
dec
cwtl
mov
and
mov
in
mov
stos
es
mov
jmp
sub
adcl
jnp
fistpll
gs
int3
dec
fsubrl
mov
add
mov
clc
push
pop
jo
adc
inc
xchg
sbb
mov
popl
add
pop
xor
in
shrl
loop
push
pop
dec
adc
jae
in
mov
xlat
inc
arpl
jb
mov
in
fwait
or
ljmp
xchg
xchg
mov
mov
mov
fistpl
cmp
jg
inc
pop
xchg
test
in
lahf
fs
insb
inc
aad
nop
out
dec
push
jno
cmp
int
jl
and
out
jne
push
inc
cmpl
inc
push
mov
xchg
aad
sbb
shlb
xor
push
std
inc
aaa
mov
jb
arpl
faddl
mov
jno
lds
iret
iret
jbe
imul
cmpl
mov
mov
lahf
mov
mov
add
xlat
outsl
xor
les
or
repz
mov
dec
dec
pop
push
sub
sbb
sub
inc
dec
shll
stc
mov
inc
sub
pop
repz
aam
cli
xor
cmp
js
add
mov
into
call
cmp
jge
sbb
adc
add
ds
xor
and
sub
mov
sahf
adc
lahf
pop
jae
xchg
xchg
imul
mov
daa
inc
xchg
shll
xor
or
push
dec
inc
adc
shll
into
arpl
push
push
repnz
adc
pop
imul
fcomps
mov
push
loop
aaa
js
mov
rorl
sub
out
jmp
xchg
inc
jmp
cmpb
insl
ret
aaa
dec
int
aad
sub
pushf
sti
dec
fldl
push
push
xor
aaa
pop
adc
xchg
xchg
mov
popf
pop
stos
fwait
andl
xor
enter
lock
loopne
icebp
cli
and
mov
ljmp
lds
and
xor
mov
fs
xchg
ss
mov
cli
dec
lods
getsec
orl
and
sahf
sti
roll
loope
fwait
mov
jmp
repnz
loopne
test
dec
xchg
fsubl
call
dec
les
push
shr
stc
loope
dec
dec
adc
aas
scas
pxor
push
cmp
inc
pushf
jo
iret
mov
push
inc
sarb
inc
jle
xlat
popa
xor
ljmp
inc
mov
sbb
inc
sbb
dec
mov
jle,pt
jb
sub
xchg
fucomip
xlat
mov
outsb
cmp
xchg
inc
cmc
loop
adc
stos
int
leave
rcrb
ljmp
adc
bound
in
mov
push
xor
cmp
jb
jae
cmp
es
test
adc
xchg
cltd
lret
push
test
insb
sub
fnstcw
jge
ret
inc
mov
pop
jge
cmp
pop
mov
pop
pop
dec
stc
push
adc
ficomps
out
addb
fdivp
ja
xor
fnstsw
push
mov
movsl
sub
push
push
lods
ljmp
scas
xchg
inc
loop
loopne
fists
cmp
fidivs
adc
inc
add
mov
out
or
pop
cmc
mov
lods
cmp
cli
inc
push
cltd
cs
jecxz
bound
cmp
push
orb
adc
enter
pop
sbb
sti
adcb
int
and
cmp
int3
aaa
inc
mov
out
divb
mov
ljmp
push
iret
jmp
lods
xor
sbb
adcb
xchg
push
or
outsl
mov
std
sbb
andb
scas
inc
push
arpl
add
push
test
or
xchg
les
gs
orl
mov
xor
xchg
inc
push
xor
xor
iret
xchg
aaa
mov
movsb
xchg
pop
xchg
push
in
xchg
lahf
scas
and
das
or
and
int3
jge
aam
sub
rclb
cwtl
lret
sub
lods
sbb
outsl
insl
aaa
stc
out
push
cwtl
sub
add
addr16
cmp
repnz
mov
lds
dec
adc
or
in
push
dec
lahf
push
xchg
in
ss
inc
cltd
xchg
lret
inc
inc
popf
dec
mov
movsb
xchg
add
sub
shll
movsb
inc
aad
popf
mov
add
fstl
adc
ffreep
xchg
xchg
cmp
call
sbbb
mov
mov
xor
or
out
lea
push
pusha
and
xchg
call
dec
or
xor
stc
cmc
loop
test
jnp
adc
out
pop
and
jo
sub
jb
or
imul
dec
xchg
adc
and
dec
push
mov
dec
cmp
inc
add
pop
mov
dec
aad
add
push
xor
or
adc
arpl
int
ja
rcrl
lret
jmp
push
aaa
mov
push
jbe
adc
test
push
inc
mov
pushf
icebp
es
cmp
in
mov
das
insb
daa
jecxz
cltd
in
loopne
pusha
stos
movsl
push
xchg
push
sbb
fwait
mov
dec
xchg
jmp
lock
sti
xlat
add
add
xchg
test
mov
loope
inc
cmp
in
cltd
xchg
in
or
sub
or
jnp
mov
mov
xchg
cwtl
test
adc
jno
inc
mov
or
leave
clc
mov
mov
int3
mov
pop
neg
adc
xlat
push
scas
hlt
js
cwtl
xor
dec
xchg
dec
inc
and
out
dec
mov
data16
push
outsb
jae
ja
and
inc
pop
add
iret
gs
jns
cmp
dec
iret
lea
aam
aas
adc
repnz
xchg
fmul
lock
movsb
mov
arpl
inc
in
push
out
div
int3
pop
pop
pop
movsb
out
pop
sub
notb
jg
loop
or
mov
test
fimull
movsb
pop
inc
adc
add
scas
in
xchg
inc
push
push
adc
fldl
pusha
movsl
xlat
nop
push
sahf
in
in
and
insl
adc
dec
nop
dec
sti
fisttps
dec
sbb
faddl
incb
adc
mov
adc
cli
mov
cwtl
inc
xlat
adc
sti
out
negb
les
inc
mov
cmp
stos
int
test
mov
enter
adc
popf
lods
sbb
test
in
sbb
dec
cltd
cmc
icebp
dec
mov
int
mov
repnz
sub
int3
js
lcall
mov
xchg
xchg
scas
scas
repnz
cmp
adc
pop
xor
scas
leave
cli
or
scas
dec
int3
jbe
pop
addr16
inc
fbld
pusha
or
add
iret
add
sbb
js
jle
outsb
and
js
das
cld
testl
push
shll
std
jo
adc
insb
xor
into
loopne
addr16
and
fdivl
insb
push
push
push
repz
das
dec
mov
sbb
ret
imul
es
bswap
faddp
mov
pop
imul
pushf
jbe
xchg
fsubrs
cli
or
ds
sub
int3
dec
popa
push
add
arpl
test
bound
or
addr16
mov
push
add
nop
in
and
cs
push
mov
sahf
mov
cs
xchg
mov
adc
mov
insb
and
outsl
cltd
into
les
ja
leave
test
test
sub
stos
lods
jl
mov
popf
sti
pop
fsts
nop
dec
dec
mov
mov
outsl
out
mov
mov
jno
shll
popa
xor
mov
xor
sbb
loop
stc
sbbl
mov
es
ja
add
push
cli
jmp
out
mov
aas
inc
dec
xor
not
aam
decl
jo
data16
je
sarb
scas
repnz
or
xor
idivl
js
inc
sbb
bound
sbb
repnz
xor
push
outsl
xor
push
push
aas
cmp
cli
ret
in
pusha
and
andb
je
repnz
into
psllw
lcall
leave
add
cmp
add
mov
test
stos
xchg
add
inc
push
push
out
fsubs
jae
sub
dec
add
pushf
ss
popa
add
or
cltd
testl
ss
loop
pop
and
xor
inc
adc
push
scas
adc
mov
xlat
or
push
push
gs
push
outsb
hlt
clc
fistl
push
adc
add
or
mov
hlt
dec
jne
jp
dec
or
cmp
ss
cmp
daa
xor
push
mov
in
jns
loop
cmovge
rcl
and
mov
fs
cmp
fwait
lds
js
xchg
icebp
cli
gs
ja
sbb
sbb
call
adcl
push
mov
xchg
mov
mov
and
add
sbb
sarb
jns
dec
jae
mov
xchg
mov
ss
dec
jne
xor
popa
mov
inc
lea
mov
jne
pop
cmp
push
outsb
fidivrs
lret
jno
jmp
in
test
xchg
jge
cmp
dec
push
or
test
add
shl
divl
loop
push
popf
xchg
shlb
pushf
xor
push
out
fsubrl
inc
add
pop
pop
arpl
mov
jo
sbbb
or
stos
pop
arpl
inc
sbb
pop
sbb
loopne
inc
dec
xchg
or
mov
outsl
test
lock
adc
in
scas
xchg
and
lods
jns
ss
fs
inc
das
xor
jnp
and
movlps
mov
fildll
imul
xchg
insl
movsl
cmp
icebp
jne
cli
mov
sbb
mov
iret
jecxz
sbb
xor
push
add
or
out
adc
mov
pmaxub
cmpsl
inc
jno
fchs
sahf
mov
clc
in
xchg
loopne
cmp
mov
adcl
adc
repz
jecxz
cld
or
mov
mov
outsl
test
cld
xor
sub
mov
adc
jl
mov
cli
add
into
mov
push
icebp
mov
sbb
mov
push
xlat
jbe
imul
jne
lahf
xchg
xchg
dec
dec
sbb
fdivs
mov
push
lods
push
mov
jl
in
xchg
call
xor
lds
rolb
and
outsl
inc
mov
jbe
push
lods
shl
inc
aad
or
xor
mov
and
xchg
outsb
jns
mov
pop
xchg
ret
ljmp
pop
lods
fs
int3
lods
out
jge
cmp
insb
xorl
aam
pop
pushfw
sub
stos
pusha
aad
je
mov
push
mov
lock
ficoms
cvtpi2ps
sbb
push
dec
ja
arpl
dec
mull
stc
mov
sub
xor
cmp
fistpl
jmp
aaa
fmul
insl
xchg
call
mov
std
mov
in
xchg
add
das
sti
push
loopne
push
aaa
jae
xor
or
daa
jnp
hlt
lret
aam
push
push
xor
mov
std
pop
inc
xchg
mov
mov
push
dec
test
cmp
sub
inc
jg
or
sub
lods
lret
xor
xor
jae
xor
add
aas
mov
mov
rcrb
movsl
loope
xchg
enter
mov
jl
pop
fisubl
stc
cwtl
cli
fisubs
lds
lahf
rol
in
pop
int
or
rcrb
xchg
pop
dec
mov
xchg
ss
imull
dec
adc
xchg
fnstenv
sub
sbb
dec
repnz
fcoml
inc
or
push
mov
lods
jg
das
loopne
rclb
jg
sbb
or
test
cs
mov
ret
imul
jp
push
imul
xor
jg
rclb
sti
test
mov
mov
fs
sub
push
mov
int
pusha
test
mov
add
stos
jl
inc
mov
arpl
mov
stc
mov
jge
lock
movsb
aas
mov
sbb
jbe
mov
sar
inc
push
fwait
cmc
or
or
insl
mov
sti
hlt
mov
lods
jb
dec
add
inc
loop
dec
and
dec
push
mov
mov
xchg
sub
ja
punpckhwd
mov
addb
dec
xchg
decb
fwait
xor
xchg
jmp
js
pop
in
sarb
int
hlt
sbb
cmp
aaa
aad
mov
fstpt
dec
imul
lret
mov
mov
iret
cmp
cmp
sti
mov
out
scas
sbb
jmp
xchg
ja
pop
cmp
into
popa
push
dec
lret
fisubs
nop
add
loopne
outsb
push
sti
dec
fwait
mov
xlat
into
xchg
mov
fdivrp
or
xchg
mov
les
dec
js
dec
test
aam
loope
push
insb
xchg
mov
leave
mov
in
out
mov
in
push
cmpsb
test
pop
mov
insb
jl
aam
mov
arpl
filds
cmp
jo
jmp
rorl
adc
aam
push
icebp
push
jno
imul
pop
pop
out
aad
push
mov
inc
sub
pop
add
pop
adc
pop
pop
push
dec
decb
loopne
lods
rcr
lods
push
je
lods
shrb
push
sbb
jns
mov
mulb
nop
ljmp
scas
or
pop
or
out
mov
jge
aaa
cmp
cmc
push
dec
pop
rolb
aaa
test
out
les
adc
adc
push
pop
mov
and
leave
or
fiadds
fnstenv
and
lock
cmp
mov
xchg
ret
mov
mov
loopne
lahf
push
jle
jno
aam
adc
jb
gs
mov
int
stos
lcall
rcrb
cmp
pop
pop
stos
lret
movsw
mov
dec
push
push
lret
rcll
shrb
popf
ja
repz
imul
in
insl
std
clc
jno
adc
xchg
xchg
push
stos
and
jp
xchg
push
inc
jne
stos
cmp
sub
jo
xchg
sbb
pop
pop
daa
mov
in
xor
fidivs
dec
stos
into
jbe
add
adc
and
dec
mov
lock
xlat
sub
xchg
push
and
lods
pop
leave
jl
and
pop
fstp
dec
or
jne
dec
addr16
and
in
add
fsubs
adc
aam
sub
jns
out
and
ret
mov
sarb
add
aad
stos
lahf
or
mov
aaa
stc
push
lods
cmpsb
aad
mov
inc
jne
adc
mov
jns
dec
cmp
in
popf
add
or
in
das
out
das
and
xor
sub
out
push
push
sbb
in
inc
repnz
lods
jg
mov
mov
push
out
cmp
rclb
jnp
daa
test
test
mov
ds
xchg
adcl
pop
pop
inc
fidivrs
or
jle
rcll
ret
je
movsl
add
inc
rcrl
push
arpl
in
pop
adc
cltd
shlb
push
test
aaa
jl
add
dec
or
sub
push
dec
repnz
fistl
pop
test
mov
mov
mov
movsl
ljmp
sarl
fcompl
and
push
roll
ret
aas
cmpsl
pop
add
lods
jecxz
clc
push
sub
and
andl
test
out
mov
shrb
stos
adc
bound
mov
aaa
push
pop
in
jb
call
dec
push
mov
in
outsl
jge
mov
sbb
fstpt
dec
es
xchg
jmp
xor
testb
xor
mov
fisttpl
ret
cmc
jl
in
rcr
pop
lods
sbb
mov
jnp
fcomp
push
out
mov
mov
cmpsb
leave
dec
les
popa
cwtl
out
divl
dec
mov
fiadds
enter
insl
gs
pusha
out
pop
push
aad
adc
xor
or
jae
cmpl
mov
and
xor
or
int3
push
aaa
inc
repz
mov
sbb
inc
cmp
sub
mov
ror
lret
pop
shrl
xchg
jmp
dec
mov
leave
pusha
sub
faddl
stos
in
jecxz
out
inc
test
test
inc
mov
test
and
mov
inc
out
decl
or
push
mov
lods
icebp
movswl
ret
gs
std
jne
data16
adc
mov
popf
add
movsb
mov
out
mov
arpl
repz
push
dec
inc
cmpsb
adc
shlb
mov
repz
jle
mov
std
mov
idivb
aad
mov
jns
daa
adc
push
clc
dec
mov
inc
mov
sbbl
pop
cld
or
jae
adc
sub
add
in
add
fstp
popf
stos
ss
inc
mov
out
arpl
lea
mov
sbb
and
mov
push
pop
sub
xor
adc
jge
push
fldcw
ss
subb
loop
stc
mov
and
mov
out
stos
xor
lahf
and
test
xchg
sbb
cmpb
xorb
mov
popf
clc
test
cmp
cmpsb
jbe
into
xor
arpl
dec
dec
test
mov
test
mov
in
in
inc
adc
xchg
push
fistps
inc
into
arpl
jg
adc
decb
sub
xchg
cli
negb
xchg
ret
inc
nop
dec
lcall
jo
pop
pop
mov
aaa
jmp
xchg
iret
test
enter
mov
push
push
mov
sub
sbb
push
mov
pushw
cld
or
fcoms
xchg
or
push
jbe
insb
das
cmp
fst
arpl
lahf
jno
sti
push
sub
lea
inc
push
sbb
pushl
test
sahf
test
sbb
inc
dec
lods
je
jl
fwait
out
dec
shl
loope
mov
mov
shll
mov
arpl
mov
in
outsl
xchg
cld
pop
dec
pop
xchg
ljmp
pushl
out
shrb
add
lret
cmp
xorb
jb
cli
scas
jl
fsubr
lahf
xchg
jno
lahf
ljmp
adc
dec
mov
dec
andl
lret
aaa
cli
notl
dec
daa
dec
add
xchg
aad
adc
add
imul
jno
dec
insb
mov
enter
mov
ljmp
mov
sti
pop
mov
push
ss
xor
sub
add
pushf
add
sar
lock
pop
ret
cmp
scas
popa
push
sub
and
enter
inc
and
cld
ja,pt
out
jl
imul
dec
out
cmp
add
and
sub
pushf
fs
mov
lcall
adc
cmpsb
inc
sub
mov
mov
clc
pop
inc
call
into
notb
push
xchg
dec
sub
push
push
loopne
shll
mov
mov
add
lcall
hlt
cmp
insb
lock
push
je
add
xor
push
xor
pop
sbb
stc
adc
fldl
fstpt
inc
dec
fcmovb
ret
pushf
in
xor
push
push
mov
push
movsl
jnp
mov
pop
popa
jge
jmp
push
imul
lcall
test
ja
clc
jb
or
pop
loopne
out
shll
lea
and
sbb
stc
stos
jb
das
cltd
cmpsl
bound
jecxz
push
out
adc
fsubr
mov
ret
mov
iret
xchg
xchg
inc
mov
data16
std
sbb
cmp
cmovo
in
add
mov
mov
arpl
mov
roll
clc
sbb
loope
or
mov
jae
imul
rcr
cmp
lea
negl
jl,pn
sub
and
scas
loopne
mov
insb
cmp
mov
and
dec
fsubp
jmp
mov
or
out
jns
dec
mov
fmul
sarl
inc
or
subl
mov
mov
lea
jge
xchg
inc
adc
cli
enter
fsubl
es
xlat
out
pop
ja
mov
repz
into
dec
nop
mov
divb
ds
push
movsb
imul
sub
dec
repz
stc
andb
push
pusha
inc
pop
addr16
sahf
fcomp
pop
lcall
cmp
subb
mov
mov
pop
push
shl
shrb
sahf
mov
lret
outsb
sub
cltd
das
mov
imul
fs
cmc
divb
jbe
out
test
call
mov
or
je
stos
xorb
in
rclb
jns
mov
mov
cs
dec
enter
and
mov
stos
fiaddl
xor
addr16
test
ljmp
inc
xlat
lea
negb
jg
aam
sahf
inc
jmp
xchg
mov
push
nop
jbe
iret
push
or
push
xchg
fcoml
rcll
fbld
fstpl
lds
sbb
mov
inc
sahf
cmc
add
or
daa
sbb
repz
std
out
test
xor
fidivrl
shlb
pusha
mov
movsl
test
shrl
xchg
ffreep
repz
adc
sub
mov
mov
cmpsl
and
xor
xor
add
leave
ljmp
lret
and
and
in
rorb
jle
stos
mov
icebp
fstpl
jmp
test
push
sbb
shl
jb
fbld
mov
test
push
in
jg
or
test
and
inc
sbb
and
mov
mov
cld
push
xchg
sbb
jecxz
pop
add
xchg
jge
xor
repnz
add
lds
xor
inc
enter
cmp
ljmp
jp
ss
dec
push
dec
cs
pop
in
jo
inc
jmp
in
stc
push
outsb
cmpsb
sbb
dec
mov
pop
repnz
mov
enter
hlt
loop
mov
int
mov
les
adc
leave
lss
sbb
xchg
pcmpgtb
fiaddl
outsb
pusha
mov
or
mov
ret
push
push
push
popa
aad
out
mov
rcrb
pop
loopne
popf
sti
jg
xor
mov
cmpsb
mov
add
out
adc
rolb
sub
push
mov
imul
cmp
jmp
mov
jle
add
stos
lds
scas
call
shlb
insl
push
push
mov
in
sbbl
insl
sub
test
incl
add
or
rolb
test
xchg
fstpt
mov
mov
sub
lret
sbb
or
adc
jne
ror
outsl
pop
mov
xchg
mov
testl
test
test
outsb
push
jecxz
jmp
mov
sub
cmp
adc
jg
mov
pushf
mov
enter
mov
xor
sbb
scas
jmp
mov
pop
jecxz
ret
push
cmp
cmpsb
int
daa
fidivrl
jmp
outsb
mov
jecxz
mov
in
inc
xor
lods
shl
or
jb
ja
sbb
xchg
lahf
fsubrs
in
adc
mov
sub
push
lods
push
imul
sbb
testb
xor
jl
scas
mov
dec
sub
rcrl
jg
inc
mov
inc
test
iret
and
rcll
imul
xorb
inc
repz
jno
push
cmp
nop
push
out
mov
dec
push
sbb
fimull
fwait
lods
inc
push
mov
jne
inc
xchg
test
pop
pop
inc
mov
dec
add
push
dec
js
dec
lods
pop
or
pop
out
xchg
cmc
dec
xor
sbb
sub
movsl
and
mov
adc
loope
insl
lret
or
loope
sub
push
cmp
and
lods
cmp
cld
sub
sbb
enter
and
das
inc
cmp
inc
push
out
xchg
dec
cmp
xchg
mov
scas
sub
dec
cmp
scas
pop
dec
in
stc
adc
sub
cmp
mov
mov
cltd
js
jg
xor
mov
push
push
outsl
adc
fdivl
adc
popf
jo
adc
fcompl
loope
fistl
cmpsl
iret
fsubrs
or
add
xor
fiaddl
popa
in
pop
clc
xchg
enter
lahf
sti
clc
loope
push
int
cmpsl
xchg
fisubrs
ss
fistpl
fmull
data16
push
lret
movsl
jge
push
clc
xchg
pop
aaa
mov
pop
cmp
inc
cltd
sbb
lods
add
xor
and
in
lret
loop
pop
movsl
push
out
or
xchg
or
rorl
xor
test
mov
out
shr
cmp
xor
scas
out
aam
out
cli
js
es
leave
mov
fbstp
inc
scas
and
rcrb
shll
fs
ljmp
stos
mov
dec
scas
scas
adc
movsb
je
inc
push
inc
pop
sub
cmp
fcompl
inc
jmp
sub
lret
stos
sub
xor
mov
mov
xor
mov
xlat
aas
mov
adc
lods
xorl
in
mov
fsubrs
cmpsl
and
sbb
xor
mov
addr16
push
mov
pop
decl
xchg
push
mov
and
and
in
fnstcw
push
lods
inc
mov
add
push
add
cmp
xor
jmp
xlat
dec
imul
lods
dec
or
loope
sbb
ficoms
lods
dec
xchg
or
sub
fdivrs
bound
dec
ret
or
lret
into
mov
dec
sub
xchg
sar
insb
xchg
fsubrl
xchg
sub
pushf
lcall
bound
mov
stos
cli
lock
ret
cli
inc
nop
repz
mov
sub
fdivs
cmp
sti
ret
je
jo
aam
cmp
scas
push
lret
sbb
adc
icebp
mul
mov
das
or
and
testl
add
faddl
aas
cmp
cmp
xchg
and
pop
ret
xchg
adc
push
fnstsw
jno
mov
mov
ljmp
mov
jmp
inc
lods
imul
shll
js
lret
adc
data16
lods
jge
push
ds
and
mov
jmp
mov
lea
lds
push
jmp
xor
xchg
movq
fwait
subb
pop
jne
ds
jne
jl
in
xchg
out
sbb
popa
inc
lret
call
mov
dec
rcrl
mov
rcrl
jg
loop
adc
sahf
xchg
data16
fimull
inc
push
movsl
ss
js
add
push
mov
push
cmc
rorb
pop
mov
cmc
js
out
mov
jl
test
xor
cwtl
rcll
pop
gs
pop
push
mov
mov
call
and
test
jp
div
and
insb
not
mov
clc
dec
mov
leave
aad
and
pop
js
out
lods
push
and
pop
out
test
imul
packssdw
cmp
aaa
cli
mov
or
dec
jno
adc
adc
mov
cmpsb
cli
xchg
leave
daa
jb
dec
mov
mov
movsl
rorb
js
sti
mov
mov
sub
pop
lcall
aas
fwait
cmp
xlat
jae
mov
pop
nop
dec
stc
std
pushf
outsb
out
and
push
cmpsl
and
arpl
fstl
pop
cwtl
adc
in
sti
rorl
sbb
pop
sub
and
insl
jge
jbe
add
stc
insb
mov
inc
push
lret
jl
or
cmp
mov
jle
inc
add
inc
sub
sbb
cmp
mov
and
adc
mov
mov
adc
or
addr16
push
jg
dec
push
sub
add
sahf
leave
jno
ficompl
insb
insl
rcrb
sbb
xchg
add
pop
js
sub
pop
and
pop
test
lret
aad
bound
or
not
xchg
test
pushf
fwait
cs
cli
sbb
rcrl
into
xor
out
fistps
ret
bound
jbe
jge
and
out
inc
xor
xlat
sahf
push
inc
test
mov
dec
xor
or
daa
lahf
test
pop
iret
xor
cmp
in
sarb
out
sbb
add
xchg
in
sti
je
dec
sbb
pushf
shrb
lods
daa
das
repz
adc
mov
je
mov
push
jg
fiaddl
movsb
arpl
orb
mov
mov
mov
sbb
jle
pusha
imul
aaa
inc
out
scas
push
mov
mov
mov
mov
cwtl
shrl
subl
mov
jmp
mov
mov
sub
inc
or
adc
and
adc
popa
nop
lcall
pop
jmp
lcall
sarb
sbb
mov
outsb
pop
mov
jg
or
movaps
add
cmp
jl
lock
mov
mov
aam
cmp
mull
mov
sahf
jb
push
cwtl
hlt
xchg
mov
insb
sub
ljmp
xchg
sbb
sub
push
push
add
loop
pushf
sbb
mov
out
imul
sbb
int
xchg
pop
inc
ja
je
iret
aad
dec
cltd
adc
mov
fdivl
push
dec
scas
jo
daa
jnp
adc
jp
mov
addl
mov
adc
test
in
add
jb
push
jmp
pop
fstpt
mov
or
mov
pop
in
repz
out
out
mov
mov
fistpl
stos
cmc
int3
jns
cwtl
int
es
cmc
sbb
jns
es
sub
xor
lock
aaa
lret
jbe
cmpsl
push
flds
repnz
lret
mov
xchg
fstpt
jbe
mov
push
push
xchg
ret
xor
in
test
lea
add
arpl
sub
cmpsb
ds
xor
jnp
and
xchg
push
negb
or
jecxz
pushf
jge
jecxz
pop
repnz
imul
stos
adc
pop
movsb
fstpl
in
xchg
pop
inc
xorl
loopne
les
out
scas
cs
fidivrs
xchg
push
aam
pushl
inc
dec
je
aam
inc
testb
loop
mov
jg
add
sub
mov
out
dec
add
add
lcall
mov
dec
loop
mov
xor
mov
pop
popf
sub
adcl
nop
insb
push
test
or
dec
fistps
and
jno
test
hlt
ja
jne
push
xor
hlt
out
fwait
scas
pop
add
inc
cmpsl
sbb
das
inc
in
ds
lcall
movsl
clc
std
imul
and
pushf
out
nop
rorl
mov
test
mov
xchg
pop
aas
insl
mov
iret
dec
iret
xor
mov
cmp
fucom
ljmp
fimuls
loop
imul
rcll
call
aam
inc
hlt
aam
int
dec
aad
loope
daa
push
shll
frstor
popa
dec
xor
push
sbb
inc
lods
rorb
imul
addr16
pop
ss
mov
fistps
cmpsl
mov
lods
stos
ds
xchg
push
xchg
imul
or
dec
std
insl
iret
jae
pop
mov
xlat
sahf
adc
jns
testb
test
cwtl
hlt
mov
imul
jbe
out
push
lds
jno
adc
movl
xchg
mov
dec
jb
adc
sbb
leave
cmp
and
jae
xor
xor
push
or
dec
inc
xor
add
out
mov
ss
cmc
cli
pop
subl
lods
out
jb
mov
push
pop
aam
fstl
xchg
out
stos
ja
stc
nop
push
pop
fimull
pop
mov
in
xchg
ds
lds
jge
and
out
sbb
loop
mov
push
mov
test
fmul
in
imul
movsl
dec
mov
mov
adc
push
dec
out
sbb
repnz
enter
leave
js
mov
xchg
in
sahf
xchg
fbld
xchg
mov
sbb
pop
push
stos
adc
mov
sub
jge
outsl
sbb
push
loope
lret
cmpsb
xchg
sbb
call
dec
lods
inc
xlat
cmp
cmpsb
dec
inc
pop
aas
pop
xchg
cld
inc
mov
outsb
xchg
cli
test
mov
sbb
jecxz
inc
popf
out
inc
push
mov
cmpl
jne
add
push
dec
insb
jg
fisubl
test
and
sbb
ss
xchg
sar
jae
into
xlat
enter
xchg
cmp
roll
mov
or
add
jmp
aas
jecxz
or
gs
or
repnz
jo
xor
xchg
inc
pop
in
ljmp
sub
xchg
add
cs
fistpl
xchg
ljmp
cltd
fadd
mov
iret
sarb
adc
xchg
rcrb
leave
xchg
xor
sub
aas
rsm
incl
int3
add
out
ret
fwait
mov
test
mov
mov
lock
xchg
out
jge
jl
es
mov
or
test
sub
push
pusha
pusha
jnp
data16
mov
mov
mov
icebp
lds
stc
in
lea
fsubp
daa
and
bound
cltd
stos
mov
mov
sqrtps
popf
sub
in
xor
fwait
rol
sahf
add
cmpb
mov
test
cld
add
fstl
mov
data16
fucomip
aaa
xor
xchg
js
jge
add
std
mov
andl
and
add
inc
adc
pop
jo
inc
adc
hlt
add
lods
lea
mov
inc
add
adcb
fistpll
dec
mov
lret
dec
cmp
scas
sbb
xchg
pop
mov
inc
js
or
les
dec
stos
insl
xchg
lahf
push
cmp
insb
pushf
sub
inc
insb
imul
mov
push
out
add
cmp
xor
xchg
es
rcrb
mov
stc
mov
es
sbb
dec
leave
addb
movb
pop
stos
popl
add
xor
rcrb
fisubrs
mov
mov
cmpb
ret
mov
cltd
mov
cmp
mov
addr16
sub
xor
sub
inc
push
jbe
enter
jecxz
jecxz
cmp
scas
inc
push
jbe
popf
and
out
div
call
adc
xchg
mov
in
adc
ficoml
mov
mov
mov
frstor
fcmovnb
insl
shll
jno
outsl
mov
inc
push
push
stos
out
iret
lahf
push
les
jb
xor
punpckhdq
icebp
add
xor
push
pop
out
cmp
adc
pop
xchg
inc
fwait
neg
add
fisttpl
adc
and
sub
lret
cmpsl
fcoml
cmp
icebp
mov
jp
dec
test
fwait
nop
mov
out
push
sti
push
mov
pop
out
mov
in
inc
pop
in
out
pop
test
xor
cli
adc
aas
xchg
add
inc
pop
push
mov
enter
xchg
jns
dec
adc
lods
or
fwait
cmp
xor
push
push
pop
fwait
or
ret
jnp
sub
and
push
imul
and
inc
push
clc
push
xchg
jae
repnz
lock
xchg
jp
jg
cli
push
out
out
loope
inc
push
jno
inc
aam
mull
call
jg
pop
mov
out
pop
int3
or
sbb
jmp
and
dec
mov
fdivs
and
clc
clc
inc
push
xchg
push
cli
clc
jo
adc
std
cld
cmp
jp
cmp
into
pop
aas
jg
imul
test
movsl
aas
push
inc
cmp
push
push
mov
cmp
jne
inc
jmp
mov
fwait
jae
and
stos
cmp
xor
lret
mov
inc
popf
rol
xor
xor
nop
mov
mov
insb
inc
mov
shrb
push
jl
jnp
and
lods
add
cmp
jne
pop
lret
loope
enter
cmp
cmp
mov
inc
mov
gs
sbb
shl
jno
jg
mov
pop
mov
popf
sti
pop
repnz
adc
in
xchg
cmp
out
movsl
mov
insl
in
or
mov
outsl
setae
mov
mov
adc
mov
mov
mov
ret
aaa
xchg
push
insl
orb
jmp
pop
cmp
and
sbb
mov
in
call
lret
iret
jb
inc
pop
mov
pop
mov
cmp
sub
movsb
push
cli
decl
mov
mov
mov
jmp
repz
insb
cltd
jge
xor
sub
repnz
sub
xchg
repnz
arpl
aad
movsb
out
pop
or
sbb
das
cmp
or
imul
leave
sbb
pop
push
cmp
mov
loopne
in
add
ror
in
mov
mov
xchg
push
loopne
dec
scas
xchg
inc
test
ss
xchg
jge
es
xchg
xchg
aad
stos
mov
ljmp
lahf
pop
test
cmpsl
add
pusha
pop
sub
sub
mov
xor
pop
sahf
roll
fistpl
into
cli
call
inc
and
inc
inc
xor
adcb
notl
mov
xlat
in
add
jge
loopne
cwtl
lret
jmp
jecxz
xor
out
xor
gs
imul
cmp
adc
and
jae
mov
dec
dec
lret
lcall
mov
and
mov
mov
ret
mov
cwtl
repnz
dec
xchg
add
ja
and
cmc
add
rol
cld
mov
icebp
xlat
xor
lds
nop
fs
pushw
xchg
aam
sub
mov
inc
cmpl
cld
pop
movsb
int3
mov
fwait
dec
in
push
aas
orl
dec
adc
in
sub
clc
shlb
mov
fildll
xchg
test
add
call
mov
lods
popf
sub
aaa
pop
jns
xchg
std
push
sub
mov
inc
sub
je
xor
lock
cs
out
push
cmc
in
mov
push
push
sbb
add
xor
dec
fisubrl
imul
dec
or
jbe
call
mov
aas
cmp
cwtl
add
sti
shl
mov
mov
pop
or
out
add
pop
inc
mov
dec
or
cmp
sub
xor
adc
mov
push
mov
ret
and
pop
push
mov
xor
subl
or
fwait
lea
dec
cltd
les
jno
loope
jb
cmpsb
sub
mov
sub
push
jne
out
mov
hlt
in
cmp
push
mov
or
icebp
push
fcomi
int
jno
cltd
aad
fwait
sbb
cmc
pop
imul
incb
xlat
out
mov
dec
mov
popf
sbb
call
mov
push
dec
mov
mov
cmp
ss
dec
fxch
add
sbb
lcall
push
jle
adc
jns
cmp
mov
pop
add
fs
sbb
xor
inc
xor
pop
dec
jmp
in
sub
repz
xchg
cmp
xchg
leave
adc
mov
dec
mov
or
or
addr16
cmp
out
ss
cmp
mov
or
push
test
cld
repz
jb
and
dec
roll
mov
lea
fiaddl
lock
sbb
fwait
mov
fdivrl
push
sub
fdivrl
cmpl
ds
mov
and
iret
sub
lods
jb
pop
lret
push
jg
mov
pop
and
push
lods
mov
ficomps
mov
jmp
lods
les
mov
cmp
dec
mov
and
xchg
out
std
inc
imul
xor
push
or
mov
mov
in
jg
pop
cld
mov
xchg
aaa
ds
mov
inc
es
dec
push
data16
loope
add
xor
pop
out
nop
sbb
nop
pop
mov
mov
mov
filds
or
rol
mov
lods
lret
xchg
mov
mov
push
add
jg
out
clc
pop
fildll
add
sub
sbb
push
adc
add
fsubrs
push
cwtl
movsb
sbb
jo
hlt
cmp
pop
adc
push
popf
xchg
and
and
lods
or
mov
mov
int
bound
push
repz
xchg
fwait
xchg
lret
js
cmpl
in
xchg
adc
aam
cmp
push
mov
mov
adcl
outsl
pop
out
clc
fwait
push
push
xor
dec
test
xchg
iret
in
and
push
inc
jle
adc
adcb
pop
in
pop
and
adc
cmp
jge
add
sbbb
and
push
fldl
lods
cld
cmp
das
aam
dec
iret
dec
cmp
mov
sbb
xchg
fs
sbb
xchg
jge
sbb
push
sub
jne
lret
vmread
hlt
sub
mov
jge
std
loop
sub
gs
or
decl
push
arpl
fistpll
stos
loopne
xchg
adc
stos
xchg
sub
pusha
rcll
inc
pop
ljmp
stos
imull
jl
push
sbb
leave
movsb
fimull
fimuls
and
cmp
fnstsw
gs
sbb
fildl
inc
lahf
xchg
popl
jge
pop
bound
in
sbb
cmp
stos
cs
fdivrs
lea
xchg
xchg
xor
and
movsb
dec
mov
stos
add
mov
pop
ljmp
dec
push
sahf
push
lea
ja
ja
sub
loopne
mov
in
mov
insb
lahf
xor
cmp
push
or
add
in
cmp
lods
add
es
cmp
and
ret
cmp
mov
arpl
int3
into
and
pop
aam
and
sbb
inc
sti
xor
lds
sbb
adc
test
rcrb
bound
and
mov
pop
or
jno
imul
adc
jo
push
cmpsl
sub
into
imul
in
leave
aas
add
ror
xchg
ret
call
shlb
xor
add
push
mov
mov
movb
int
pushf
movsb
xchg
test
add
loopne
fdivrl
rcrb
push
push
jle,pn
mov
and
stos
xchg
frstor
or
fwait
js
popa
test
loop
std
mov
js
push
add
fprem1
xchg
xchg
stc
std
inc
les
mov
xlat
lock
pop
cwtl
push
ja
jne
jne
sub
and
xchg
xchg
xchg
mov
inc
popf
pop
adc
nop
es
std
cmp
loope
out
nop
xacquire
es
jne
mov
call
imull
mov
adc
pop
repz
cli
xor
jge
mulps
aad
jns
sahf
scas
xor
pop
cmpl
sub
push
lock
sbb
push
jbe
pushf
loope
or
test
movsl
sub
loopne
xor
pushf
jne
in
and
mov
jecxz
cmp
lock
loope
xor
sub
or
cmp
inc
sbb
test
jne
pop
or
int
addr16
gs
rorb
insl
cmp
pop
loope
jo
xchg
popa
pop
insl
cld
push
sub
xchg
adc
push
push
fwait
sbb
lahf
scas
lcall
or
and
fnstcw
popf
out
jns
test
mov
jo
and
pop
insb
fisubrs
and
jo
jl
dec
lods
cmp
xchg
cmp
sarl
lea
bound
add
inc
mov
rorb
mov
dec
mov
mov
xor
push
pop
xchg
pusha
mov
sbb
lds
mov
jp
sub
aad
jb
fs
sbbl
jns
jp
mov
xchg
test
mov
loope
push
xor
int3
fisubrl
mov
test
and
xor
adc
leave
loopne
leave
rcrb
dec
or
rclb
mov
rclb
rcrl
sahf
mov
jl
addr16
jbe
xor
notb
ljmp
popf
in
push
iret
in
adc
dec
adc
cmp
sti
das
cmp
add
pop
repz
mov
mov
inc
ja
push
push
insb
push
fstpt
jge
leave
push
out
fisttpll
adc
pusha
sub
iret
dec
mov
mov
mov
pop
ljmp
lds
cmp
movsl
lds
lods
out
sub
jecxz
ret
xchg
add
and
call
clc
sbb
icebp
sti
jg
and
or
sub
or
mov
cmpsl
lea
sub
lods
pop
cmc
xchg
jns
iret
roll
pop
arpl
pop
test
mov
nop
mov
pop
lods
push
cmp
adc
loop
scas
mov
lods
add
cmp
mov
mov
in
pop
inc
cmp
sbbl
pop
and
je
jg
std
adc
mov
jo
rcl
pusha
int
ss
push
mov
js
scas
mov
sbb
xor
push
mov
cwtl
arpl
sub
pop
mov
sbb
out
adc
cmp
xlat
lahf
cmpsb
inc
pop
mov
inc
out
icebp
fcmovb
in
jmp
inc
popa
lea
pop
or
sbb
inc
sub
in
mov
xchg
push
mov
scas
fwait
mov
fsts
sarb
add
test
adc
pop
xchg
xlat
aaa
nop
popf
pushf
xor
jne
bound
jle
cmp
je
sti
mov
jno
pusha
cltd
mov
sbb
sub
adc
jae
add
push
pop
sbb
out
ljmp
inc
pop
ds
push
pop
adc
dec
shll
cmp
xor
sub
push
push
js
push
and
in
out
repz
into
mov
pop
sbb
outsb
jmp
sbb
fnstsw
sbb
ret
pop
or
aad
pop
xor
clc
ds
jne
jb
out
fxch
xchg
inc
lret
out
sbb
in
mov
mov
xchg
outsb
mov
mov
es
in
xor
adc
jae
jge
mov
mov
test
push
fcmovnu
push
ljmp
and
or
xor
or
add
gs
pshufw
rclb
pop
ror
jge
mov
sbb
sbbl
leave
sub
inc
pop
add
pop
cmp
stos
xchg
jns
rcrl
push
into
ja
data16
mov
les
movsl
ss
mov
rclb
stos
loop
outsl
sbb
mov
inc
mov
ret
mov
inc
ret
jbe
or
pushf
lods
xor
mov
adc
mov
mov
divl
mov
and
in
sub
dec
jne
out
test
mov
lods
lret
pushf
push
into
movsl
loopne
pop
mov
dec
ds
sbb
mov
or
es
cmp
add
mov
ret
imul
mov
fsubr
pusha
into
into
insl
outsl
in
dec
loop
cltd
jp
imul
test
inc
lcall
push
mov
jb
xchg
and
inc
les
jne
lds
outsb
bound
xor
dec
out
mov
lds
jnp
push
pop
inc
jge
shlb
inc
mov
add
pop
xlat
or
push
push
sbb
cmp
fmull
sub
cwtl
test
jb
scas
pop
dec
iret
xchg
and
pop
fsubrs
pop
jp
loop
or
dec
stos
sub
jmp
cmpsb
lret
push
cmc
fmuls
push
mov
sub
idiv
sbb
movsb
add
out
mov
push
push
call
pop
je
sti
les
sti
repz
es
mov
mov
push
int
push
pusha
flds
ror
xchg
jge,pt
lret
popa
push
mov
popf
mov
outsl
dec
dec
adc
and
pusha
and
divb
mov
mov
pop
mov
jne
aad
sub
and
clc
lret
out
testb
shll
mov
adc
xor
or
adc
iret
xchg
shrb
loop
dec
mov
loope
fincstp
dec
pop
push
mov
out
inc
aad
xor
push
cmpsb
lods
mov
add
pushf
sub
shll
dec
add
loopne
rol
ljmp
mov
push
hlt
loop
pushf
dec
lret
or
mov
dec
shrl
mov
insb
dec
mov
mov
les
stos
pop
scas
jmp
cmp
jne
push
sbb
sbb
jae
int3
test
or
add
gs
aam
cmp
mov
push
jl
lret
sub
rep
sti
fnstcw
dec
iret
enter
xor
mov
push
int
dec
mov
out
lss
mov
cmpsb
lret
cld
das
les
mov
imul
mov
inc
inc
and
lcall
push
repnz
cmp
xchg
lahf
leave
push
rol
test
inc
sub
fildll
adc
clc
mov
testl
add
lea
push
pop
popf
xchg
or
dec
cld
movsl
into
arpl
xchg
xchg
mov
sub
add
mov
lods
pop
movsb
dec
mov
xchg
into
out
cli
xor
jb
adc
xchg
cmp
jge
repnz
insl
or
sti
adc
es
lret
dec
sbb
inc
mov
outsb
ss
mov
mov
neg
mov
cmp
loop
int3
fstpt
pop
push
ja
jl
mov
mov
sbb
or
out
sbb
mov
aad
sbb
fwait
xchg
add
out
sub
lcall
and
inc
dec
icebp
pop
add
add
imul
or
lret
clc
lahf
fs
lret
mov
outsl
xchg
repnz
push
ss
mov
incb
ja
sbb
dec
jg
ds
push
out
nop
dec
sbb
or
sbb
ds
ret
add
in
mov
jecxz
inc
lret
push
pop
cmp
inc
aad
sbb
cwtl
mov
or
aam
bound
xorb
xchg
into
mov
lods
xchg
outsl
fwait
pop
mov
pop
jmp
mov
in
push
mov
adc
cmp
movsb
adc
popf
jecxz
loop
jae
pop
sti
push
add
dec
stos
pushf
push
popa
cltd
jp
cmpb
fisubs
fcom
adc
int3
int3
pushw
std
cmp
or
pop
sbb
call
incl
fldcw
xlat
clc
xor
cmp
addr16
sti
test
or
mov
pop
ds
clc
clc
mov
outsb
pop
scas
iret
cld
jb
scas
xchg
cli
sbb
lret
decl
jns
add
dec
mov
bound
jecxz
mov
xchg
in
hlt
js
jmp
mov
test
adc
dec
lock
push
sar
xchg
xor
movsb
mov
ja
pop
xor
sub
sub
lahf
add
cld
mov
test
push
aas
pop
cmpsl
cmp
pop
xchg
scas
aaa
dec
int3
sub
add
aas
push
iret
gs
xor
mov
jmp
je
adc
sarb
int3
aas
mov
jo
lahf
lods
dec
fldt
mov
test
stc
sbb
cmp
mov
xor
sub
or
js
inc
out
sub
cmpsl
sbb
ljmp
jae
or
push
mov
adc
jge
cli
xor
mov
cmp
lods
test
frstor
stos
adc
shll
sub
or
mov
fs
inc
adc
shl
mov
outsb
test
jnp
rol
xchg
sub
jl
sbb
idivl
daa
adc
sbb
or
jno
pop
mov
ds
mov
popa
push
sub
pop
cmp
pop
adc
mov
iret
enter
pop
rolb
jo
and
addb
mov
cmp
jl
inc
fidivrl
push
testb
test
or
mov
adc
cmpsl
mov
cltd
lods
or
cs
ret
movsb
out
rcrb
add
or
xor
jecxz
gs
push
aaa
bound
pop
sub
lahf
xchg
orl
mov
push
xorb
in
lcall
add
roll
inc
sti
pop
mov
imul
fwait
add
clc
pop
fldl
jmp
fnstsw
push
inc
outsl
cwtl
xchg
mov
aaa
in
nop
test
push
lcall
inc
push
push
sbb
push
test
jp
xlat
nop
mov
push
ret
repnz
and
cltd
sbb
stc
int
decb
pop
fnstenv
sub
mov
shl
dec
push
xor
pop
jle
sub
mov
lahf
adc
cs
cmpsl
gs
je
data16
jb
sarl
mov
or
das
or
push
ds
inc
je
mov
int3
popl
lahf
sarb
adc
rclb
movsb
out
jo
out
in
mov
xor
inc
cmp
mov
cli
sub
lret
mov
jnp
mov
xchg
mov
cltd
cld
sarb
pop
inc
add
ljmp
imul
pop
mov
pop
lds
imul
xor
test
movsl
push
clc
and
or
cmp
enter
outsl
cs
jbe
adc
inc
adc
pop
adc
sbb
ja
xchg
mov
sbb
jb
in
in
mov
daa
lock
das
cmp
fs
in
cmpsb
add
jno
movsb
pop
sub
test
lods
subl
cmp
adc
lock
insl
popf
adc
into
mov
shlb
leave
push
or
adc
sbb
arpl
test
data16
dec
or
in
das
pop
movsl
out
mov
adc
cld
mov
fsubrs
dec
ja
push
fdivp
ret
std
xchg
mov
fs
subb
cmp
lea
hlt
scas
mov
test
ss
loop
pop
mov
cmpb
push
push
das
mov
testl
insb
mov
out
outsb
imul
fisubrl
ret
std
pop
fsubs
cmp
popf
test
scas
inc
lods
cmp
enter
data16
jl
out
jb
clc
hlt
dec
rorb
ret
pusha
push
push
mov
jecxz
xorl
jle
scas
not
jge
das
push
out
in
addb
cmp
fstpt
loop
pop
fstl
loope
fistps
addb
cmp
sahf
jmp
lret
and
daa
in
dec
jge
cmp
xor
xchg
dec
out
aas
mov
xchg
pop
lret
test
bound
cwtl
stc
cwtl
mov
fisubs
rol
dec
mov
jle
arpl
jno
movsb
push
ljmp
fsubs
neg
fwait
push
add
out
sub
jl
je
and
push
and
testl
push
cs
icebp
adcl
xchg
scas
and
fs
xchg
sbb
jae
mov
lods
fwait
jg
icebp
into
enter
enter
lods
xchg
test
shl
lcall
vpunpckhdq
ljmp
mov
gs
dec
sbb
aas
jmp
mov
mov
dec
jb
nop
andb
std
pop
add
and
add
aas
push
in
inc
sbb
gs
adc
outsb
loop
mov
pop
scas
les
jg
int
mov
stos
ss
adc
sarb
sub
mov
adc
mov
mov
or
adc
xor
lods
aam
mov
cmp
ret
adc
dec
sbb
push
dec
pop
or
scas
push
cmp
jns
mov
inc
xchg
push
xchg
jns
sub
sbb
sahf
ja
leave
sti
mov
icebp
sarb
dec
or
or
rcrl
loop
in
and
jl
jl
faddl
mov
pop
mov
lcall
sub
push
fisttps
xchg
scas
cwtl
je
jbe
mov
jmp
int
imul
es
push
adc
orb
fisubs
xor
insl
pop
inc
cmp
dec
jmp
stos
sbb
rcrl
pop
movsl
aad
push
out
cmp
dec
call
pop
adc
leave
call
sbb
repnz
xor
push
mov
push
cmp
mov
out
pop
lds
aas
pop
lock
adc
mov
dec
push
dec
push
ljmp
lock
in
decb
cmpl
fwait
fxsave
and
pushf
aad
adc
fstps
push
and
add
das
test
insb
pop
mov
in
dec
mov
shrl
in
adcw
xchg
or
js
and
out
mov
push
xchg
ret
cld
ret
lock
mov
mov
cli
out
xor
add
mov
or
cwtl
adc
lahf
sub
loopne
sbb
and
clc
sub
imul
cmp
jns
and
in
cli
pop
push
aam
xor
adcb
mov
cli
push
sbb
ror
mov
sbb
mulps
fildll
jp
dec
outsl
stos
stos
push
sti
xchg
sub
andl
jae
test
and
out
sbb
incl
popl
jno
dec
sti
or
lahf
and
add
sti
adc
push
out
into
mov
test
or
xchg
clc
add
ds
inc
fstpl
mov
cmp
je
in
rolb
loope
andb
ja
into
testl
aad
lock
lahf
sub
inc
or
fwait
inc
mov
jbe
xor
nop
imul
mov
sub
jns
inc
inc
inc
inc
out
jb
jbe
aaa
push
dec
sahf
dec
mov
inc
mov
lock
jmp
enter
out
aas
sbbl
fcoms
sbb
or
cmpsb
add
cmp
inc
or
lock
in
subl
orb
inc
add
mov
cmp
pop
cmpsb
xor
add
push
lds
jmp
stc
mov
adcl
adc
orb
lods
pop
inc
mov
dec
testb
push
inc
sti
jecxz
nop
cld
push
or
xchg
popa
stos
pop
and
xor
inc
ja
out
push
test
mov
fimull
fs
push
jbe
cwtl
and
shlb
les
in
lahf
jbe
xor
sub
popl
pop
jns
push
rorb
mov
out
aad
repz
mov
cmp
out
aas
ss
shrb
std
int
cwtl
jo
mov
arpl
mov
add
xchg
cmp
xchg
lret
mov
imulb
dec
xchg
fisttpll
xchg
jecxz
or
sub
gs
push
sbb
aad
gs
push
lds
icebp
mov
loope
sbb
in
out
mov
mov
jo
mov
loop
int3
orb
lret
push
jmp
jp
insl
xchg
sub
xor
jmp
mov
rcrl
lret
mov
sub
out
xor
xchg
cmp
loopne
popa
popf
fiaddl
push
bound
xor
ret
in
bound
add
pop
cpuid
jns
test
enter
ljmp
lcall
rorb
repnz
stos
push
mov
in
add
fs
xor
addr16
jl
cmp
lret
loope
mov
mov
insb
insb
mov
sahf
out
loop
fsubrl
sbb
lret
out
xor
sbbb
lods
jns
testb
shrb
dec
dec
daa
dec
lret
push
aad
push
stos
dec
sahf
lock
xchg
or
dec
mov
aam
int3
leave
lret
cmp
or
and
sti
cmp
arpl
pushf
hlt
addr16
pop
jb
and
in
mulb
cmp
orb
mov
test
mov
mov
pop
setae
inc
sub
sbb
popl
inc
lret
and
out
inc
mov
push
push
ret
mov
lock
cltd
lods
add
and
aaa
pop
mov
xchg
sub
adc
mov
cmc
push
mov
idivl
push
jp
or
shl
in
cmpl
adc
int
xchg
ret
out
sahf
leave
fisubs
scas
femms
scas
adc
dec
mov
push
xor
push
mov
cld
mov
stos
test
sti
in
imul
scas
xchg
mov
sub
xchg
cld
sbb
and
in
jbe
sbb
fadd
sub
cltd
xchg
fists
and
inc
repnz
cmp
loopne
and
aam
adc
hlt
outsl
jmp
push
push
mov
aam
mov
pop
stos
les
jns
mov
xor
data16
fucomp
enter
mov
fwait
sub
push
xor
pop
je
jmp
push
icebp
push
ds
inc
jecxz
jg
cmp
je
cmp
lds
adc
add
xchg
add
inc
movsl
ret
sti
jmp
rcl
jp
ds
lds
inc
adc
bound
and
cmp
xchg
iret
outsb
aam
adc
mov
shlb
mov
push
add
push
xchg
inc
add
adc
xor
lret
js
daa
mov
mov
pop
cmp
ret
and
fs
bound
hlt
andnps
mov
adc
xor
mov
mov
loope
ljmp
shll
mov
xchg
inc
mov
mov
xor
adc
hlt
or
mov
inc
popf
adcl
pop
pop
ficoml
aaa
out
xchg
jnp
lods
dec
rorb
pop
icebp
jb
inc
stos
pop
and
shrl
movsb
mov
jo
xor
pushf
shl
push
mov
ljmp
lods
enter
mov
je
clc
mull
faddl
sub
jb
jge
inc
fistpl
mov
pop
push
ret
mov
pop
lea
repnz
push
xor
mov
in
mov
aam
dec
test
das
pushf
movl
pop
in
imul
fildll
sub
das
sub
cmp
add
adc
iret
mov
dec
out
or
mov
sbb
jmp
lods
shr
sub
jp
int3
ljmp
push
mov
push
hlt
sub
jmp
adc
pop
mov
jbe
mov
mov
orl
test
insb
shrb
in
xchg
cmc
test
xchg
xchg
push
inc
mov
dec
test
dec
cmp
outsl
sub
xchg
mov
cmp
mov
iret
loop
dec
jg
push
ss
pusha
shl
push
sbb
fiadds
xor
das
xor
or
add
incb
loope
outsb
mov
out
lods
andb
push
div
outsb
mov
pop
mov
shll
aam
jmp
jge
mov
or
imul
loope
inc
adc
cltd
data16
mov
jae
inc
push
les
inc
addr16
sahf
les
xchg
in
mov
out
pop
gs
sbb
sub
inc
cmpsb
fsubrs
dec
mov
out
mov
jne
testl
insb
pusha
adc
inc
shrb
sub
ds
push
in
lds
iret
xchg
dec
mov
in
lret
neg
fs
push
pop
mov
mov
xchg
inc
pop
cwtl
in
pop
push
mov
lds
je
sub
sbb
imul
leave
ss
or
call
cld
jg
dec
add
and
sub
popa
test
mov
js
cmp
pop
or
add
mov
pop
gs
push
adc
xchg
js
sbb
mov
push
push
fisubs
outsl
pop
mov
sub
or
ljmp
push
cwtl
cmp
inc
sub
stc
adc
sub
push
lock
pop
add
lds
out
inc
push
jecxz
push
insl
out
jmp
pushf
ret
add
lcall
mov
mov
mov
xchg
mov
in
add
push
ds
mov
cmpsl
lahf
movsb
or
xchg
insb
dec
icebp
pushf
xor
xchg
xor
and
add
lods
ret
cmpsl
pop
xchg
mov
jb
mov
jne
cwtl
rorl
jmp
dec
aas
movsb
enter
enter
inc
sahf
fildll
insl
popf
mov
pushf
fnstcw
and
stc
cmp
add
lahf
xchg
pop
adc
fldenv
jl,pn
pusha
inc
sub
dec
js
scas
sahf
aam
sub
lods
mov
cmp
gs
lcall
cmpsl
adc
in
repz
sbb
xlat
inc
and
scas
xchg
sbb
pop
scas
adc
mov
xor
imul
sub
and
mov
jmp
jmp
insl
xchg
in
xor
xchg
repnz
jns
xor
cmp
lds
pop
movsb
sub
xchg
mov
adc
push
cmp
iret
mov
push
lret
jbe,pt
pop
out
fsubrl
loope
and
xchg
dec
xchg
aaa
aam
pop
sub
loop
mov
push
sub
push
aam
addb
add
push
push
cs
inc
ljmp
pop
outsl
adc
pusha
stc
push
shrl
dec
xor
jno
jle
cmc
push
pushf
sti
jp
adc
jbe
xchg
repnz
push
out
hlt
clc
enter
rcrb
add
test
hlt
dec
lds
or
mov
lahf
ret
jge
cltd
pop
arpl
mov
pop
sbb
int
push
pop
pop
xor
lods
lret
fsubs
lahf
mov
dec
mov
mov
pop
sbb
lods
stc
in
mov
sbb
cltd
mov
jl
xchg
fimuls
nop
inc
mov
mov
dec
xchg
mov
test
push
lret
sbb
insl
popf
mov
pop
cmpsl
cmp
mov
inc
jo
adc
inc
inc
inc
cs
insb
clc
ds
dec
in
mov
js
idivl
jbe
repz
lock
inc
and
dec
fisubrs
daa
push
inc
loope
pop
outsl
sahf
xlat
fsubs
hlt
push
sti
push
popf
hlt
dec
adc
pusha
jle
fidivs
lahf
mov
daa
ret
arpl
lods
mov
and
cwtl
add
inc
fldenv
pop
xchg
inc
repz
test
mov
aam
sbb
add
divb
cmp
inc
lret
jno
xchg
shlb
cs
jle
aas
jb
jl
sub
shll
pop
sub
lds
adc
enterw
cmc
jb
shrl
call
cli
cmp
xor
mov
repz
jae
daa
in
mov
out
and
mov
ret
dec
jno
mov
mov
data16
cmc
xorl
movsb
insl
std
lds
js
adc
jo
pop
mov
movsl
ljmp
ja
cmpsl
sub
je
aam
jno
xor
test
data16
pop
sar
addr16
in
stos
adc
sub
rcrb
in
pop
mov
jo
sbb
outsb
pop
push
jno
les
add
imul
repnz
xchg
aad
cmpl
adc
int3
repz
pop
pop
xchg
sarb
aaa
jne
loope
lds
xchg
test
mov
test
add
jae
and
mov
cmp
mov
xor
mov
popa
sbb
xchg
add
sub
sbb
int3
loopne
ljmp
and
inc
mov
push
imul
add
iret
aaa
sbb
push
push
mov
mov
pop
mov
sbb
jecxz
pop
data16
into
js
movsl
mov
scas
lahf
loope
jmp
lahf
cmpsl
icebp
mov
adc
mov
sbb
dec
stc
push
pop
cmp
test
orl
in
mov
and
adc
out
and
roll
mov
mov
pop
inc
cmp
testb
sbb
dec
repz
or
mov
adc
daa
xchg
ret
fdivp
out
cli
mov
or
std
rorb
xchg
pop
out
mov
xor
or
mov
sbb
pop
pop
shl
xlat
andb
xor
movsb
aad
and
mov
movsb
xchg
lock
push
xchg
xchg
and
and
fsubrl
jb
sahf
inc
dec
test
divl
shlb
cltd
mov
cltd
push
adc
mov
adc
dec
pop
xchg
xor
sbb
outsb
mov
add
pop
enter
out
cmpsl
sub
mov
cmpsb
movsb
push
out
ret
ds
lea
xchg
cmp
sbb
lods
sarl
mov
pop
repnz
movq
stos
push
cltd
jl
dec
out
sahf
inc
mov
inc
sbb
sub
inc
out
jae
les
cmp
dec
push
addr16
mov
outsl
adc
fdiv
repz
sbb
test
lcall
xchg
mov
cld
cwtl
xchg
scas
sub
test
xor
repz
push
xchg
fldenv
jae
jecxz
pusha
xor
xor
xor
adcl
mov
popf
or
cs
sahf
jge
push
ja
cmp
stc
or
loope
push
jbe
outsl
sub
xor
adc
rclb
xor
push
pop
loopne
mov
jmp
test
leave
xchg
jmp
xor
mov
jnp
xchg
mov
in
aam
out
pusha
bound
xchg
je
cs
mov
xor
and
mov
imul
repz
xchg
adc
test
cmp
orl
sbbb
inc
cmp
testb
jne
pop
adc
shl
xor
xchg
ret
sbb
rorl
dec
mov
xchg
push
jge
aas
push
and
add
push
jl
mov
or
sbb
std
xchg
jle
test
add
sti
lods
mov
push
lret
out
xor
scas
cmpsb
fwait
inc
adc
insb
fstps
mov
mov
in
cwtl
lock
sbb
dec
stc
dec
sub
xor
and
push
rcrl
add
add
mov
mov
add
dec
jge
shll
mov
pop
shl
add
or
sbb
lock
fwait
outsb
in
jae
xchg
insb
adc
nop
inc
cmp
fucomp
outsl
cmp
in
and
imul
cmpsl
lods
jge
imul
out
cltd
jbe
pop
cmpsl
inc
pop
mov
into
lret
pop
add
cld
test
jb
dec
sub
bnd
jne
test
sbb
sbb
repnz
pop
mov
ss
and
cltd
inc
sbb
jns
sbb
test
add
or
in
popa
adc
dec
jg
pop
sub
push
lahf
mov
fisttpl
xchg
xchg
stos
fidivs
icebp
or
pop
push
sub
aas
movsb
mov
cltd
lret
fisubrl
ret
sub
adc
inc
xor
cmc
push
push
or
or
xor
xor
ljmp
sbb
roll
int3
adc
inc
xlat
sbb
push
push
out
fidivs
xor
jmp
push
push
insb
adc
loopne
popa
rcrb
out
push
into
ss
fildll
xlat
pop
jg
pop
icebp
add
mov
mov
mov
lds
sub
inc
nop
pop
push
outsb
jle
dec
lahf
pop
out
xchg
or
inc
inc
and
icebp
out
mov
dec
sti
push
ret
loop
imul
cld
push
add
mov
filds
loope
int3
and
sbb
mov
push
or
popa
mov
pushf
pop
xchg
les
pop
and
lock
aas
popf
jp
mov
popa
xchg
data16
adc
shlb
mov
mov
test
ror
mov
ret
es
ss
outsl
mov
sub
pop
pusha
pop
push
mov
lock
or
popf
test
std
lods
and
or
push
push
mov
mov
sbb
shll
loop
inc
jae
pop
inc
ret
jmp
jmp
fwait
mov
pop
out
stc
cmp
stos
test
mov
cs
in
dec
push
xchg
loop
add
push
test
test
popf
in
bound
test
add
jbe
push
lock
lock
in
test
sub
mov
xor
in
add
ja
jg
fists
jb
pusha
or
shlb
and
stos
aad
mov
daa
jge
mov
lods
sub
popa
lcall
mov
and
sub
mov
xor
loopne
and
ss
dec
mov
fwait
cmp
movsl
push
cmp
mov
jo
pushf
je
das
pop
lahf
out
rcll
fwait
inc
cmpsl
in
imul
repz
test
sub
jmp
shr
shl
xchg
mov
inc
mov
stc
cmp
inc
aas
sub
popa
rcll
int
xor
lcall
xchg
dec
add
xchg
pop
and
mov
dec
cmp
lahf
fucom
leave
dec
xchg
iret
aas
das
insl
popf
push
sub
dec
popf
lret
mov
aas
insl
jb
cwtl
push
and
adc
into
adcl
mov
mov
out
cwtl
pop
push
adcl
xchg
push
xchg
add
dec
sbb
and
sub
leave
mov
call
repnz
mov
outsb
in
ds
or
ficompl
mov
push
push
pop
imul
ss
pop
add
add
movb
aam
push
adc
sub
in
xchg
cwtl
lret
adc
and
dec
sbb
or
mov
out
stc
xor
test
rsqrtps
dec
push
xlat
xchg
mov
sti
pop
orb
push
adc
jnp
bound
cmp
push
inc
sub
stc
inc
adc
sub
clc
repz
push
xlat
int
xlat
data16
push
gs
fmuls
jb
std
adc
ss
aad
popa
loopne
and
push
adc
sar
bound
loop
cmp
dec
adc
jb
push
jge
aad
mov
jne
in
out
loope
push
adc
movb
inc
ljmp
cmp
pop
aaa
or
lahf
pusha
popf
stos
mov
add
stc
test
rol
pushf
jecxz
xor
int3
pushf
data16
aaa
pop
xchg
pop
xor
inc
lods
sbb
shll
shll
or
pushf
add
cmpsl
sbb
xchg
in
push
adc
xchg
jne
xor
js
inc
scas
in
scas
jno
push
shll
popa
popa
repnz
ljmp
sub
cmp
lock
shlb
push
jbe
mov
cmp
pop
pushf
xchg
jae
js
lret
and
dec
out
xor
cmpsl
pop
xorl
ds
ja
movsl
psllq
inc
in
push
and
test
les
loope
adc
mov
fwait
loope
repz
cld
sbb
lret
push
fisubs
push
loopne
shlb
std
add
fstpt
addr16
mov
das
jo
mov
jns
das
jle
cmp
in
mov
test
lds
repnz
outsb
insb
repnz
mov
pop
push
jno
mov
fwait
call
fwait
and
sbb
jg
sti
and
dec
nop
xor
les
mov
in
inc
push
or
sub
cltd
lea
shlb
adc
mov
scas
mov
rcll
dec
sbb
aad
dec
jl
ss
mov
popf
inc
fnstcw
clc
cmc
add
fwait
sub
data16
int
movsb
movsb
mov
add
clc
sti
loop
pushf
int
push
bnd
push
pop
mov
cli
xchg
adcb
xchg
fcmovb
scas
repz
push
pusha
lahf
xlat
arpl
js
jbe
mov
pop
clc
arpl
je
and
in
subb
das
ss
das
je
cmpsl
outsb
push
jle
mov
sti
sub
test
adcb
je
pop
fnstsw
mov
xchg
dec
pushl
jl
xchg
xchg
or
stc
ljmp
loopne
pop
lret
shl
mov
dec
fsubrs
cmc
push
cld
xchg
aaa
outsb
rclb
in
add
push
iret
sbb
icebp
jns
mov
mov
insb
and
mov
and
ret
pop
pop
pop
adc
dec
xor
push
lcall
les
push
adc
insl
sub
aam
mov
cmpsb
add
aad
fimull
push
and
mov
out
dec
fstpt
data16
sub
hlt
cmpl
sub
cld
mov
std
ss
gs
adc
fwait
adc
jmp
jl
icebp
inc
jmp
into
aas
jne
sub
sbb
sub
out
mov
pop
add
sbb
test
scas
mov
xchg
mov
les
xor
mov
jo
xchg
mov
push
leave
cmpsb
sbb
in
push
mov
inc
shll
push
add
cmpsb
out
addr16
repnz
sub
add
cmp
mov
mov
dec
mov
iret
pop
jle
andl
cmpsb
fs
mov
and
mov
cmpsl
push
scas
mov
cmp
jno
push
mov
pop
cmp
pop
adc
movsl
add
pop
cmpsb
adc
pop
dec
xchg
dec
adc
cmp
push
pop
and
push
push
sbb
fimuls
mov
xchg
push
fnstsw
cmp
dec
pop
testb
xchg
addl
cli
add
add
lret
lock
lods
push
xlat
push
iret
and
gs
jle
nop
jecxz
dec
or
sub
in
aad
mov
movsl
cltd
cli
jno
push
scas
aaa
lret
inc
cs
into
cwtl
pop
aaa
xor
push
add
mov
icebp
cwtl
mov
stc
pop
push
dec
jo
add
stos
lcall
cltd
mov
hlt
fs
jae
hlt
pop
mov
out
mov
adc
imul
mov
sbb
adc
clc
rcrb
repz
rcrb
cwtl
scas
ffree
and
push
xor
test
push
xor
push
mov
inc
test
or
push
xor
lods
dec
cli
inc
add
stos
clc
lahf
dec
fucom
imul
aad
lock
mov
xchg
dec
push
xchg
popa
adc
aam
xchg
shl
push
mov
mov
xchg
inc
pop
jmp
and
xor
xchg
or
mov
jle
arpl
out
add
ss
into
add
cmc
nop
syscall
and
mov
out
sbb
lods
mov
mov
and
mov
iret
imul
push
dec
xchg
push
orb
jecxz
idivb
sbb
data16
xchg
lahf
ror
adc
stos
mov
xor
sbb
adc
stos
jns
repnz
es
mov
jno
push
xchg
or
fdivrs
xchg
icebp
repz
stos
stc
test
scas
jno
orl
stos
popa
test
mov
adc
rcrl
das
and
stos
mov
push
cltd
repnz
mov
sbbl
sahf
and
aaa
jae
imul
pop
mov
mov
lahf
fldt
lret
xchg
mov
sub
mov
add
lods
popa
negb
out
movsl
ds
filds
test
and
sbb
push
testl
jmp
fprem1
or
lret
add
dec
sbb
cwtl
or
cmp
push
aaa
cltd
repz
fiadds
mov
cld
mov
inc
mov
movsb
xchg
repz
mov
inc
stc
jg
jmp
movsb
call
xchg
lret
test
mov
mov
sarb
dec
xchg
push
imul
test
xor
rolb
testb
insb
out
xchg
sbb
mov
das
icebp
inc
xchg
cmp
cmpl
aaa
adc
outsb
repz
ficomps
sub
xchg
mov
add
daa
int
push
cmpsb
xor
cmpsb
sbb
cld
fwait
test
scas
fs
aad
fs
sbb
xlat
mov
mov
inc
adc
mov
mov
lock
adc
shl
sahf
sti
dec
leave
std
int
lock
in
decb
movsb
and
sbb
sub
lods
mov
sub
fadd
push
xlat
xchg
hlt
push
arpl
sbb
pushf
inc
mov
ret
aaa
jmp
sub
shll
lcall
sbb
into
jbe
cmp
ret
xlat
fisttpll
rcll
jae
jo
lods
mov
mov
adc
lret
xchg
xchg
movsl
mov
das
sub
test
or
jg
jb
dec
or
inc
sbb
jbe
aaa
xchg
xor
pop
dec
movsl
dec
and
push
bound
adc
or
lods
test
sbb
negl
pop
push
nop
and
inc
aaa
jb
mov
daa
inc
ljmp
lods
add
fmuls
and
pusha
mov
or
jnp
mov
add
stos
and
fsubl
neg
jo
cmp
jnp
sahf
fdivp
inc
sbb
push
out
pop
call
mov
sub
or
out
rorb
out
jbe
jmp
pop
and
xchg
in
mov
mov
pop
test
sbbb
ss
sub
adc
mov
jns
mov
xchg
xchg
sub
xchg
push
sbb
or
pop
nop
aaa
test
adc
cmp
dec
sbb
insl
xorl
adc
or
adc
or
in
mov
xchg
mov
cmc
in
mov
sbb
cmp
pop
ret
test
fxch
cmp
push
jnp
aas
jl
xor
lcall
shlb
movsl
push
and
lret
dec
stc
jnp
in
sub
jmp
gs
and
js
dec
sub
scas
mov
mov
shl
imul
jbe
inc
xor
xchg
cs
test
rolb
mov
iret
inc
or
test
pop
aam
xchg
pop
sti
rorl
test
adc
xchg
lds
mov
push
mov
gs
insl
sti
bound
inc
popa
jne
sbb
aad
cmp
or
repz
aam
jns
jge
mov
mov
sub
ficoml
divl
ss
jecxz
pop
pop
pop
lods
sub
sbb
scas
out
mov
xchg
movsb
je
pop
pop
push
pop
push
push
mov
dec
sbb
jne
add
cltd
rcr
inc
in
lcall
leave
addr16
xchg
sbb
lods
add
jmp
jb
sbb
xchg
xor
sub
mov
mov
jl
push
add
xorb
in
mov
cmp
inc
push
outsl
cvtpi2ps
pop
sbb
arpl
push
adc
xchg
pop
mov
pushf
jno
pop
fcmovnu
mov
sub
imul
mov
dec
cmp
mov
push
adc
es
push
inc
out
jne
roll
jno
shll
cmp
imul
sub
daa
mov
out
or
mov
and
pop
sub
pop
or
mov
mov
and
mov
repnz
jecxz
imul
jb
pushf
xlat
jp
push
push
or
stos
sub
mov
sti
bound
xchg
or
out
pop
inc
out
cmp
pushf
or
mov
xchg
xor
lock
sbb
outsb
sub
ljmp
lret
mov
pop
mov
mov
xchg
xor
fldl
mov
mov
int3
xchg
popl
or
mov
pop
test
int3
rorl
shlb
push
lds
mov
fnstenv
in
xor
and
sbb
bound
inc
jnp
pop
je
imul
scas
fmuls
sti
fs
or
icebp
cmp
mov
push
mov
xor
scas
xchg
dec
mov
mov
sub
nop
fstpt
data16
mov
xchg
fwait
leave
mov
jg
pop
adc
bound
lahf
mov
mov
xorb
jae
popa
popa
push
pop
push
out
dec
fcomp
aad
mov
sahf
mov
lcall
mov
loop
mov
enter
jp
enter
fildll
mov
es
cmp
divb
addl
add
jl
sbb
ficomps
je
dec
or
xchg
push
loopne
jbe
inc
insl
sti
push
sub
pop
inc
sbb
pcmpeqw
xlat
sub
shll
inc
pop
sub
test
addb
add
shr
aas
sbb
pop
push
mov
daa
sahf
push
mov
mov
sbb
adc
outsb
jecxz
cmp
fwait
dec
idivb
out
and
sub
add
add
loopne
jns
notb
lds
outsl
jnp
les
cld
inc
icebp
xchg
or
or
adc
cmp
arpl
arpl
ud2
sub
fsubr
mov
clc
xchg
imul
xchg
adc
xor
xor
cmp
mov
into
mov
cmc
and
pop
ljmp
push
inc
leave
loope
repnz
dec
aaa
nop
sbb
and
int3
xchg
xor
out
xchg
inc
test
add
jl
adc
mov
ss
iret
lods
dec
cmp
cmp
inc
leave
adc
sub
rcr
or
inc
jge
mov
es
jp
dec
in
aaa
fs
sahf
pop
jo
cltd
inc
les
pop
pop
shrb
add
add
jp
sub
jl
push
cmc
test
mov
sub
into
xchg
mov
xcrypt-ctr
cmpsl
pop
mov
mov
lock
and
stc
shrl
dec
xlat
or
cmp
js
inc
popf
push
jl
xor
pop
stos
or
dec
repz
cs
jae
test
pop
adc
loop
fdiv
insb
inc
xchg
test
scas
ja
mov
fistpll
fldl
adc
push
push
jno
fabs
mov
jl
push
cmp
add
loop
fucom
loop
add
icebp
es
repnz
shlb
mov
pop
xchg
inc
ret
mov
scas
out
cmpsb
loop
outsb
cld
iret
ja
gs
jecxz
ret
dec
nop
mov
jns
mov
lods
xchg
pop
mov
dec
lds
ss
ficomps
and
pop
test
jns
incl
xchg
scas
add
push
dec
pushf
sbb
pop
cmpsb
mov
xchg
and
mov
dec
fstpl
mov
push
lret
in
pop
xlat
cmc
stos
mov
push
adc
pusha
fwait
pop
mov
icebp
sbb
cmp
in
in
mov
ret
dec
inc
pop
jle
pop
out
test
stos
and
lock
hlt
inc
lahf
mov
stos
push
jp
sbb
xor
xor
xchg
or
push
sub
jb
test
adc
adc
ret
cltd
shll
fdivrs
das
mov
xchg
movsb
mov
stos
or
add
pop
popf
or
cmpsl
mov
ror
orb
xor
xor
xchg
dec
and
adc
mov
mov
inc
push
dec
mov
dec
push
outsl
in
cmp
mov
xchg
stos
mov
mov
xor
data16
xchg
xchg
ds
cs
and
mov
ljmp
dec
pop
push
xor
xor
pop
aad
dec
ds
mov
sub
push
insb
inc
xor
cmpsl
adc
inc
jno
jle
pop
scas
add
sub
or
push
es
mov
cmp
mov
lret
mov
loop
inc
push
imul
and
pop
in
shlb
xor
insb
or
ja
cmp
shr
push
ret
arpl
cld
lods
loope
lahf
mov
dec
mov
mov
dec
cmp
sbb
in
adc
add
jle
xor
pop
hlt
adc
xchg
imul
inc
sarb
sub
push
cltd
cmpsb
lret
or
mov
inc
sbb
xchg
and
inc
loop
cmp
mov
jnp
cli
mov
mov
fwait
mov
cmp
jmp
mov
inc
test
aaa
insb
lret
cli
add
movsb
or
mov
ret
shll
ret
std
scas
jle,pn
fcoml
arpl
daa
sbb
nop
dec
jl
dec
cli
or
ljmp
xlat
push
sbb
adc
mov
aas
bound
sbbb
sub
adc
sti
sub
xchg
out
inc
lahf
add
add
xchg
aaa
and
call
loopne
inc
or
jge
push
mov
gs
out
movsl
arpl
je
sahf
sub
nop
dec
lret
mov
aaa
in
xchg
adc
push
jl
imul
in
pop
or
inc
dec
adc
clc
leave
lcall
call
add
fmull
jno
pop
push
xchg
stc
mov
cmp
mov
stc
addl
and
adc
filds
sub
imul
mov
mov
inc
addr16
rcr
adc
notl
xor
sbb
mov
pop
in
or
fcoms
nop
xor
add
mov
rcrl
ds
push
mov
mov
fsubs
mov
pop
push
fs
cmp
fdivl
out
add
data16
mov
mov
insl
sahf
mov
enter
test
adc
inc
fs
inc
push
push
xchg
fiaddl
into
mov
push
adc
cmp
pop
test
pop
adcb
out
sarb
ficompl
arpl
adc
push
outsb
leave
rcr
sub
jecxz
or
ret
and
in
leave
mov
or
push
pop
out
xor
and
or
jb
mov
idivb
and
mov
mov
insb
fcomps
push
sarl
ficoms
jae
repnz
inc
sahf
call
inc
jns
pusha
or
je
mov
lods
addr16
das
dec
cmp
imul
fildll
inc
xor
and
jge
mov
add
das
cmpsb
imul
int
mov
sahf
in
test
sbb
push
lret
and
fldt
mov
or
pusha
xchg
sub
sub
mov
mov
or
addb
xlat
xchg
movsl
pop
jl
pop
xchg
arpl
in
adc
ds
cmp
pop
mov
lret
and
ss
ljmp
push
scas
cmpsl
dec
cmp
or
icebp
inc
mov
stc
cmp
int3
sub
and
shlb
jmp
jge
sarl
rolb
mov
mov
xor
insl
cwtl
arpl
mov
data16
mov
jge
jl
into
push
insl
jbe
cmp
xor
and
mov
xor
dec
mov
sub
and
and
fldl
outsl
subb
adc
lods
push
push
push
popf
inc
aaa
cli
adcb
movsb
adc
jbe
arpl
pop
push
sbb
sbb
xor
into
imul
int3
xor
or
dec
push
and
and
inc
dec
sub
outsl
jg
out
pop
xor
jp
pushf
xor
repnz
inc
fcomp
xchg
loope
ror
mov
into
mov
movsl
inc
sti
xor
cmp
or
sahf
push
sbb
addl
imul
sbb
cmp
fwait
pop
jg
pop
daa
mov
jb
out
ret
ret
test
ret
fcompl
add
loope
or
sbb
pop
sbb
fldl
mov
ljmp
sub
sub
inc
scas
pop
add
sbb
inc
jno
fdivrs
or
shrl
mov
enter
call
out
and
aaa
sub
sub
mov
stos
aam
jb
sub
pop
iret
stos
add
and
or
add
pushf
test
mov
sub
imul
xchg
pop
push
push
jnp
pop
sub
addr16
mov
mov
xor
inc
inc
sbb
mov
push
mov
mov
add
mov
cmp
adc
pop
adc
xchg
mov
xor
lahf
cmc
mov
out
fbld
addr16
sbb
or
push
in
lcall
and
push
cwtl
pop
add
mov
adc
push
or
jns
enter
ret
and
sarl
adc
mov
test
jmp
adc
jmp
xchg
jns
push
in
test
jl
sub
dec
cltd
add
jmp
mov
loope
xor
xlat
inc
lret
inc
push
inc
mov
ds
popf
ficompl
cmpb
adcl
and
cmpsb
pop
clc
rorb
dec
xor
jle
subb
pop
or
cli
dec
pusha
xchg
dec
and
jns
es
arpl
jl
xor
aam
mov
sti
sahf
test
std
and
cmp
jp
xor
xchg
es
push
sub
div
fwait
dec
xchg
push
lods
adc
ret
cmp
pop
movsb
or
pop
hlt
push
jecxz
cmp
out
fistl
loopne
daa
xor
push
pop
push
insl
into
int3
mov
fcmovu
fwait
sahf
or
ds
and
psubsw
out
mov
fwait
xchg
xlat
aaa
mov
lods
push
mov
mov
jmp
insl
xor
mov
lea
jg
xchg
lcall
inc
jns
jae
xor
daa
fs
push
adc
xor
loopne
pop
bound
jle
xchg
out
dec
jnp
leave
jnp
lds
xchg
add
data16
adc
adc
dec
outsl
aam
ja
lahf
jmp
out
lods
push
adc
xchg
xchg
or
dec
fsubrl
jnp
test
int3
mov
lods
fcoml
push
fwait
aas
inc
adc
xor
jmp
jb
and
mov
je
clc
neg
mov
mov
cwtl
icebp
xor
push
in
data16
outsb
xchg
dec
cld
mov
ljmp
aaa
jmp
push
outsl
dec
repnz
jl
xchg
inc
inc
lock
mov
dec
xor
xor
xchg
std
aam
push
fsubl
mov
push
mov
sbb
and
mov
push
iret
xchg
push
add
out
mov
push
push
aad
cmpsb
mov
lock
adc
jg
adc
popl
or
loop
add
mov
lcall
push
push
and
sub
cmp
xchg
movb
outsb
mov
pop
pop
nop
push
je
jge
xor
push
xchg
out
movsb
sub
cltd
in
outsl
je
test
and
lods
int
stos
xor
xor
jl
ja
push
nop
mov
adc
subl
xchg
sbb
das
out
ljmp
ljmp
stos
and
fneni(8087
test
inc
out
daa
out
jmp
add
push
or
je
mov
jbe
setg
loopne
js
cmc
add
test
jl
xchg
ljmp
cmp
sub
jno
pop
imul
js
std
in
movl
icebp
out
sub
ljmp
or
orb
fs
movl
scas
or
repz
clc
daa
int
lds
pop
inc
outsb
mov
jg
sbb
sbb
ds
cmp
inc
jne
test
jp
test
push
push
ja
rol
bound
mov
test
sub
mov
iret
lds
sbb
shll
test
xchg
cmp
cmp
lods
sub
clc
jecxz
add
and
stos
mov
mov
sub
adc
jmp
push
pop
testb
pop
and
ret
sub
lock
loopne
xchg
mov
sub
mov
xor
push
popa
aaa
inc
movsl
int3
cmp
dec
sbb
subl
test
call
lret
scas
mov
aad
mov
lods
jg
xchg
shlb
inc
add
dec
icebp
or
xchg
cmp
adcl
push
shr
jnp
cmpl
cld
pop
ja
sahf
jno
jp
cmp
out
cmpsb
mov
mov
movsb
jge
movsl
cmp
les
xor
flds
out
push
push
loopne
test
add
sbb
cmp
add
cmp
test
mov
outsl
add
xchg
leave
lret
les
insb
das
mov
out
pop
loop
imul
and
and
mov
push
stos
push
push
mov
adc
or
int
inc
mov
jge
cmp
enter
mov
adc
jns
and
ljmp
jae
and
pop
loop
mov
data16
fildll
xlat
push
lret
repz
lds
or
clc
fdivrl
ja
mov
push
pushf
jmp
fwait
ja
sub
xor
pop
mov
enter
cmp
mov
mov
sub
mov
cld
inc
mov
jge
out
mov
adc
push
fisubrs
sub
leave
mov
gs
jle
rcrb
dec
cmp
movsb
popa
mov
addl
sbb
inc
jp
loope
stc
ret
les
pop
mov
jne
fdivrs
and
push
out
imul
dec
decl
pop
stos
test
xchg
jecxz
jecxz
fs
mov
push
adc
orl
sbb
sub
mov
dec
sub
daa
push
cmp
dec
pushf
movsl
test
mov
outsl
jo
mov
in
dec
mov
lahf
rorl
nop
cltd
rorb
outsl
sbb
lea
xor
mov
sahf
jge
je
fs
dec
xor
stc
in
sti
mov
sub
das
dec
hlt
and
add
push
add
shl
popf
mov
stc
sub
lods
ficoml
les
rcrl
xchg
dec
adc
adc
push
or
inc
xor
iret
lcall
leave
lds
jmp
add
sti
mov
lds
dec
mull
pop
jns
add
sbb
pushf
xor
dec
addl
mov
pop
jmp
or
push
pop
dec
push
xor
adc
lds
mov
push
mov
in
sbb
pop
out
sub
sbb
jg
rcr
xlat
cmp
enter
pop
jmp
inc
pop
clc
pop
push
fadds
inc
pop
lret
push
cli
or
inc
hlt
xlat
jnp
mov
mov
xor
clc
pop
pop
insl
lods
ja
es
add
sub
out
adc
push
xchg
xchg
jle
js
pop
and
dec
mov
fisubl
xor
orb
dec
jb,pn
in
loope
sbb
in
mov
cwtl
je
testb
mov
dec
shlb
and
xchg
xor
aad
pop
out
cmp
fdivrs
pop
xor
dec
mov
pop
mov
mulb
xor
push
xchg
je
lods
pop
push
cwtl
push
push
lods
stos
pop
test
push
sti
jg
fsubl
xchg
cmpsl
xlat
push
mov
mov
push
rcl
sti
enter
push
cmp
pop
xchg
loop
sahf
sti
add
push
mov
jmp
push
ja
cli
inc
mov
outsl
sbb
scas
push
sbb
xor
jmp
add
dec
adc
mov
dec
int
xor
add
in
mov
inc
cwtl
mov
inc
cmp
add
mov
inc
movsb
stos
into
mov
aad
pop
into
mov
pop
sbb
loope
scas
jbe
insl
xcrypt-ecb
cmpsl
mov
pop
adc
and
mov
mov
push
iret
aas
sub
fdiv
jb
pusha
push
sub
sbb
fildll
xor
dec
pop
fmul
arpl
push
jmp
add
lea
xchg
push
mov
imul
cmp
lcall
pop
lret
xchg
lods
pop
inc
lahf
scas
stc
aam
cmpsb
int
lret
movsl
adc
popa
inc
mov
jo
fs
rol
pop
cwtl
jge
pop
cli
cli
jle
push
lods
xchg
in
imul
mov
iret
idivl
ljmp
jg
mov
jge
inc
cmp
push
aam
rcll
add
adc
int
push
push
out
decb
loop
int
repnz
adc
mov
xchg
stos
or
popa
fcomi
cmp
scas
pop
aaa
jge
pop
jne
mov
cmp
das
inc
fiadds
movsb
mov
pop
and
shlb
dec
adc
aaa
adc
xchg
pushf
sub
test
fistpll
cmc
rolb
sub
inc
jae
jb
dec
hlt
sub
fwait
mov
lods
pop
popf
ss
ret
jns
imul
push
dec
in
out
jb
push
inc
mov
das
dec
jns
push
cmp
mov
adc
or
pusha
scas
repnz
adc
call
icebp
subl
rclb
sub
shl
sbb
sub
enter
and
sub
pop
mov
out
jae
mov
jg
sbb
sbb
stos
inc
jle
jnp
fisttps
movsb
inc
add
pusha
xchg
scas
jmp
stos
or
fisttpll
setb
stos
stos
xor
jno
pusha
in
cmp
xor
or
cmp
mov
dec
xchg
lods
repnz
push
push
hlt
sbb
cmp
test
loop
imul
pop
xlat
in
rorl
or
cmc
test
aas
fistps
mov
xchg
push
arpl
mov
and
mov
jb
jnp
jp
in
scas
sti
push
clc
jbe
jne
lods
and
mov
lret
ret
movsb
mov
mov
mov
es
pop
fimuls
cmpsl
adc
cltd
fmuls
inc
xlat
pop
icebp
stos
out
shlb
loope
xchg
rcl
lock
data16
push
popa
call
jae
push
dec
jl
adcl
sbb
or
sub
dec
cmp
push
dec
rclb
push
push
mov
sub
dec
sub
dec
mov
in
mov
pop
mov
ror
ds
xor
inc
mov
jae
and
push
mov
jmp
and
loop
fstps
push
outsb
sbb
jmp
lahf
xor
push
mov
mov
xor
sarl
xor
aam
cmp
pop
sbb
pop
in
fincstp
pop
inc
lods
and
push
push
mov
jg
ret
dec
fs
pop
and
mov
test
xchg
test
das
push
insl
lcall
lret
ret
fldt
or
jne
xchg
inc
push
inc
sbb
mov
jnp
lods
cmp
xchg
aam
je
xchg
ds
jle
lret
fwait
jmp
inc
mov
aaa
lea
mov
xorb
and
scas
push
cmp
jbe
and
addl
outsb
mov
int
add
cmpsb
int3
stc
xchg
pop
insb
mov
out
pop
inc
loope
cs
lret
roll
pop
pusha
inc
xor
mov
loope
sbb
call
shl
jge
and
sahf
xor
arpl
repz
in
insl
add
sbb
jmp
xor
repnz
les
fadd
jb
stos
ret
loop
mov
into
lahf
mov
xchg
into
sbb
lret
push
or
es
cmpsb
int
test
jb
not
jmp
pop
or
add
addr16
mov
xor
int3
fisubs
cmp
addl
popa
fistl
and
sbb
push
adc
sub
dec
psllw
xchg
xlat
add
adc
les
sub
sbb
and
xchg
jo
xor
xlat
xchg
iret
xor
jae
aam
sahf
xchg
add
xchg
jnp
dec
into
pop
push
cli
filds
mov
or
js
sbb
movsb
mov
addr16
shlb
push
pop
mov
dec
pop
fstp
xor
loope
pop
push
pop
cmc
add
inc
insl
fsubl
sbb
cwtl
jmp
int
adc
cltd
popa
add
jb
pop
jmp
repnz
mov
popa
cli
call
dec
cmp
es
sbb
jbe
inc
ja
mov
add
push
xchg
jg
xchg
out
jo
cmpsb
sub
xor
jbe
xor
lods
push
pmulhuw
cmp
dec
cmp
xchg
fstpl
xchg
xor
cs
pop
push
jle
cmp
fstpt
js
jnp
scas
jp
push
jno
push
mov
push
ds
sub
stos
cmpsb
push
add
jle
pop
mov
dec
pop
inc
movsb
push
push
jg
jae
adc
jae
repnz
inc
bound
nop
dec
push
lds
dec
lcall
jbe
rcrb
jmp
insb
ss
popf
rcll
insb
arpl
pop
scas
jge
sbb
sbb
divb
cmp
aad
inc
aad
fcmovnbe
push
ljmp
add
fldl
inc
loope
sti
jle
je
jns
icebp
xchg
out
and
sub
lods
jmp
or
fwait
jne
jnp
outsl
clc
mov
xlat
lahf
and
mov
jg
in
xchg
jo
add
xor
or
icebp
or
out
dec
pop
push
add
xchg
mov
mov
out
cmp
dec
push
push
out
adc
mov
jmp
push
push
cmpb
xchg
pop
aas
dec
in
mov
hlt
push
jmp
xor
pusha
lods
pop
lods
mov
dec
sbb
outsb
fldl
fldt
pushf
addr16
mov
rcrb
out
sarl
sbb
sub
cmpsl
leave
lock
pop
xor
cld
out
mov
sub
jg
pop
ret
pop
xchg
mov
ret
fwait
lahf
arpl
xchg
pop
lcall
mov
lahf
std
dec
mov
mov
roll
jb
dec
jmp
lcall
cmpsl
adc
ret
ljmp
inc
xor
and
fsubrs
xlat
dec
subb
sbb
icebp
sub
frstor
pop
mov
insb
outsl
cmp
scas
jo
cs
lods
sahf
xchg
lahf
cmpsb
mov
insb
fdivrl
mov
sbb
inc
mov
mov
out
mov
mov
orl
dec
inc
sub
ret
inc
cmp
rcrb
sub
add
cmp
and
add
insl
sub
faddp
lret
mov
loope
mov
or
pusha
push
mull
and
jge
data16
push
xor
es
aad
adc
cmp
push
popf
jae
mov
rcrb
mov
ss
sbb
cld
loop
filds
dec
mov
scas
xor
or
adc
mov
push
jne
cmp
sbb
out
adcl
mov
pop
xchg
mov
shl
les
jae
mov
popf
jl
aas
mov
imul
js
inc
sub
test
dec
daa
sub
xor
push
add
ret
jmp
mov
mov
mov
lock
lret
jo
add
lock
pop
xor
adc
pop
sarl
test
rcrb
mov
popf
movsl
xchg
std
pop
xchg
mov
jle
mov
and
test
add
sbb
sub
rorl
loopne
popf
lcall
dec
fisubl
mov
sbb
andb
add
xchg
push
cmp
std
cltd
pushl
stos
push
loop
pop
rclb
mov
add
aas
xorb
jb
cmp
aad
test
mov
cmc
sbb
add
and
mov
inc
and
jecxz
cs
mov
mov
roll
push
inc
xchg
sbb
movsl
cltd
cmp
ljmp
insl
push
fwait
xchg
or
cmp
jp
mov
into
add
xlat
push
adc
xor
mov
sbb
je
mov
imul
pushf
cmp
in
in
xchg
xchg
xor
inc
inc
rolb
sahf
jno
sub
xchg
stos
bound
mov
adc
xor
out
inc
imull
icebp
sub
sbb
int3
add
ljmp
lock
cmpsb
fstl
pop
fiaddl
iret
xchg
lahf
inc
or
out
loop
imul
sbb
aad
fcmovnbe
inc
push
std
inc
sti
mov
ret
mov
pushf
add
dec
popf
stc
sub
repz
inc
mov
je
mov
mov
outsl
inc
stos
push
repnz
or
stc
fadd
pop
push
mov
enter
enter
ja
jno
in
jg
repnz
test
xchg
cmc
jecxz
xor
test
cmp
pop
add
jmp
pop
mov
adc
pop
test
test
popf
test
aam
repz
jg
pop
sub
and
stc
xlat
jge
daa
negl
lcall
ret
inc
mov
push
bndldx
imul
in
movsl
sbb
popf
inc
sbb
mov
fcmovnb
aas
lea
aad
movsb
repnz
test
push
loop
mov
xchg
subb
cmp
ret
aaa
bound
ret
test
orl
push
dec
xor
jle
cltd
sub
mov
loop
adc
inc
test
mov
por
movsb
pop
aaa
cmp
addr16
sbb
mov
outsb
and
jne
mov
inc
clc
or
inc
pop
and
into
cmp
stos
push
dec
adc
pop
cld
or
add
das
stc
es
mov
ja
sahf
out
lock
rcrl
sbb
outsl
pop
push
in
lret
call
cmp
mov
inc
lret
data16
cltd
pop
cmp
test
scas
decb
sbb
pop
mov
pop
sbb
fnstcw
pushl
dec
add
into
xor
push
mov
rcrb
mov
mov
or
add
push
inc
adc
and
mov
jmp
mov
pop
push
aas
fldcw
push
sbb
out
jmp
add
pop
cmp
stc
or
les
fcmovnu
bound
loop
cltd
jne
shrb
scas
test
jbe
mov
lods
dec
jmp
xchg
addr16
test
adc
or
inc
inc
lret
imul
lcall
jge
push
push
xor
mov
xor
and
xchg
out
stos
scas
pop
cmpsl
gs
pop
fninit
push
cmp
pop
loope
dec
xor
cmpsl
dec
xor
push
es
leave
sub
data16
fnsave
gs
cmp
and
scas
rcrb
incb
insb
mov
ud1
xor
notb
stos
enter
leave
jnp
shrb
insl
mov
imul
and
lods
lods
pop
cmp
push
leave
negb
sub
les
push
dec
adcb
xchg
fsubl
mov
aas
pop
sbb
push
push
mov
add
into
loope
inc
aam
test
mov
stc
ficompl
inc
push
dec
mov
push
lods
inc
lods
mov
sahf
or
inc
rclb
hlt
aaa
push
pop
mov
sub
xor
jbe
xchg
mov
int3
mov
lock
fistpll
push
out
stc
jnp
mov
jbe
dec
jnp
aaa
outsl
lods
gs
sbbb
fisttps
xor
mov
filds
add
cs
dec
pop
frstor
repz
adc
mov
push
sub
mov
sbb
push
test
inc
xchg
xchg
test
sbb
imul
mov
push
cmp
fwait
shl
adc
jmp
cmp
shlb
stos
and
xor
xor
aas
and
inc
mov
sbb
cld
xchg
inc
adc
adc
lcall
shlb
sub
xor
jne
mov
cmpb
add
arpl
dec
test
loope
mov
inc
enter
loope
inc
mov
je
xor
jne
test
aas
push
pusha
push
andl
push
pop
xlat
pop
ret
and
into
sarb
dec
fs
loop
in
pop
jle
pause
adc
mov
fcmovu
jae
sub
out
xor
add
mov
rcll
mov
dec
xchg
out
es
push
insl
mov
std
inc
cmp
scas
jg
mov
popa
fcmovbe
test
push
cmpsb
xor
loop
jb
arpl
jp
test
mov
pop
pop
dec
lea
mov
inc
outsl
fistps
lods
sub
icebp
dec
cmp
cmp
test
ds
aam
or
dec
subl
js
fldt
daa
xchg
fdivrs
mov
and
pop
xor
in
lods
or
add
sub
sub
andb
sbb
adc
mov
into
scas
ret
or
jns
fidivs
lret
aaa
roll
push
mov
push
rcr
add
jg
and
add
add
lods
faddl
cmp
std
ret
data16
clc
cmp
cmp
stos
xorb
scas
insl
and
shlb
jmp
sub
call
push
push
inc
decl
xlat
fldl
adc
rolb
leave
int3
inc
jl
sbb
pop
daa
pop
mov
icebp
sub
and
inc
inc
shrb
sbbl
sarb
pop
xchg
or
sbb
mov
loopne
pop
ss
add
shlb
out
add
jnp
popf
xor
outsb
int3
xchg
loope
push
push
inc
push
mov
test
lods
insb
loope
push
push
jmp
insb
cmpsb
sub
mov
mov
ss
sbb
dec
stos
lods
mov
mov
inc
adc
lret
in
aad
hlt
in
jne
fimull
fdivs
pop
repz
cmp
das
push
rolb
ja
sub
aas
pop
xor
cmp
lea
sti
loopne
xlat
adc
daa
in
inc
shr
pop
dec
xor
dec
vandps
xchg
bound
cltd
dec
mov
shrb
mov
sbb
cmp
adc
or
fidivs
outsb
inc
and
cmp
mov
dec
fmull
lods
mov
push
das
enter
js
inc
sbb
inc
icebp
out
pop
pop
lods
xchg
and
ja
or
sbb
xor
cmp
insl
aam
jo
add
dec
scas
pop
icebp
push
adcb
sbb
std
adc
or
rorb
rol
imul
add
cmpsb
jno
in
mov
xchg
ret
mov
cmp
cltd
je
mov
pop
into
sub
or
aaa
movsl
rol
jne
push
je
int
test
dec
out
inc
es
int
lcall
fbld
enter
lcall
lea
test
xchg
in
dec
test
mov
mov
inc
bswap
cmpsb
push
subb
or
outsl
negl
push
aaa
test
pop
pop
scas
adc
enter
fldt
add
outsl
or
push
iret
movsl
fucomip
outsb
push
fidivl
xor
orb
jb
arpl
mov
jmp
adc
data16
adcb
pop
mov
loop
imul
mov
cli
adc
adcl
push
xor
push
cmpsb
ds
ljmp
popf
lock
pop
jmp
inc
pop
pop
mov
sub
mov
sahf
dec
pop
inc
sti
add
push
daa
xchg
shll
cmp
mov
into
dec
xor
xchg
shll
mov
pop
dec
cltd
cmp
gs
lds
xchg
mov
andl
adc
xor
mov
jae
sti
jmp
scas
mov
xor
pop
pop
cmp
sub
push
fiaddl
inc
cwtl
sub
sti
es
adc
inc
pop
sub
int3
xchg
enter
mov
cltd
sbb
out
add
xchg
leave
push
aad
mov
das
outsl
xchg
test
fdivs
or
mov
arpl
jbe
and
mov
jo
dec
inc
adcb
mov
test
fdivr
push
adc
loopne
movsl
sbb
mov
dec
movsl
addr16
jb
scas
faddp
lcall
jns
inc
sti
daa
xor
mov
js
and
pop
flds
outsb
sub
push
lret
test
testb
sub
jbe
pop
xor
jp
push
les
dec
in
shll
mov
pop
adc
test
mov
scas
jo
push
addb
in
xor
pop
mov
add
sbbl
mov
mov
shr
insb
sub
sub
aaa
dec
xchg
call
mov
popa
sub
xchg
lcall
call
aad
decb
push
mov
fadds
jnp
jb
cmp
imul
inc
adc
in
or
movsb
pop
lods
sbb
dec
insb
dec
popa
pop
out
dec
mov
sub
scas
inc
lahf
js
scas
insl
iret
xchg
addr16
insl
xchg
inc
loopne
negb
stos
cmpsl
pop
sbb
dec
jmp
push
enter
repnz
adc
cmp
xchg
lcall
mov
sbb
xchg
push
cmp
int3
push
out
push
pop
in
cwtl
add
test
rorl
cli
dec
js
mov
pop
inc
repz
imul
mov
push
ficomps
fiadds
dec
mov
fwait
lock
mov
jnp
int3
mov
fnsave
fwait
push
inc
adcl
sub
inc
adc
jb
outsl
push
in
adc
push
sub
xor
xchg
cld
pop
das
mov
fcmovne
mov
mov
mov
gs
aaa
jg
add
xor
cltd
and
mov
push
scas
hlt
mov
jg
lcall
cld
inc
jle
and
push
or
dec
fldenv
mov
repnz
jo
jns
cmp
scas
shrb
cld
fldt
mov
fdivrs
cmp
pop
xor
or
shlb
mov
mov
fcom
loope
mov
push
push
mov
gs
outsb
push
popf
icebp
inc
into
imul
out
in
sar
sub
push
movsb
and
cmc
jg
ficomps
mov
xchg
jle
clc
faddp
into
jo
pop
sarl
stos
lods
sbb
std
fisubl
push
pop
nop
and
push
ss
inc
push
and
pop
rcrb
das
adc
lahf
in
lea
jne
pop
icebp
cmp
outsl
fldcw
mov
lock
pop
and
xchg
mov
nop
jg
jecxz
inc
int
mov
push
call
pop
out
imul
xchg
into
xor
xorl
and
jp
mov
push
adc
mov
lahf
push
dec
xor
imul
inc
stos
adc
xor
inc
inc
xor
sub
sbb
fcomp
fstl
sbb
inc
popf
pop
shrl
hlt
dec
inc
cmp
mov
sub
xchg
mov
and
mov
mov
mov
mov
push
clc
jo
ret
cltd
jae
lock
mov
ja
stos
or
mov
sub
imul
sbb
sbb
xor
and
gs
mov
xor
jbe
adc
sahf
fdivp
xchg
xor
popf
fimuls
fucomip
mov
mov
or
cltd
push
mov
sbb
icebp
mov
cli
int3
repnz
repz
sub
aad
icebp
and
popf
push
adc
call
fwait
mov
cmc
aam
scas
and
cli
pop
jg
push
ja
jmp
out
rclb
add
mov
pop
xchg
nop
push
sub
pop
dec
jl
mov
and
or
xor
and
clc
jge
xor
mov
push
movsb
mov
jp
or
call
aas
testb
fildl
imul
xlat
pop
cli
rcl
sbb
into
dec
lea
orb
test
sbb
push
push
sbb
add
cmp
dec
out
shl
hlt
aam
test
jns
xor
lea
dec
mov
inc
xchg
loopne
lods
cmp
mov
into
adc
or
loop
ljmp
or
into
testl
aam
cltd
test
pop
inc
ret
movsl
push
pop
add
mov
sub
mov
popa
andl
pop
or
cld
lods
lret
mov
pop
dec
sbb
or
fiadds
hlt
scas
fldenv
jmp
mov
mulb
loope
lret
mov
sub
insl
cmp
mov
mov
jae
dec
repnz
push
xchg
leave
mov
test
fst
xchg
xchg
mov
or
scas
mov
orb
sarl
jmp
rorl
addr16
xchg
mov
xchg
decl
xor
cld
dec
cmpsb
dec
dec
fwait
pushl
pop
sbbl
inc
adc
pop
ret
pop
pop
sbb
ss
sbb
push
mov
fmull
scas
dec
ret
cmp
lahf
ffreep
stos
lret
aas
es
cmp
ss
jno
xor
cli
mov
aad
stc
cltd
push
push
ficompl
jge
hlt
mov
mov
fwait
je
cli
pop
pop
mov
stc
jb
lods
sbb
std
divb
dec
in
sub
lret
or
push
lahf
jb
bound
jge
mov
gs
out
sarl
int
sbb
popf
add
dec
cmpsb
int3
mov
jecxz
cmp
adc
test
outsl
push
xchg
cmp
bound
in
xchg
push
dec
pop
movsb
mov
fldl2e
std
jp
lcall
pushf
dec
push
outsl
das
jae
imul
mov
and
aad
mov
jp
inc
mov
addr16
movsl
mov
js
pop
add
ret
mov
push
mov
cs
add
std
push
test
loope
xor
inc
and
pop
inc
inc
into
shr
out
sbb
add
jnp
cli
push
je
inc
ljmp
jmp
xchg
and
push
push
stos
sub
fists
daa
push
push
inc
jnp
or
lahf
shrl
cmc
inc
inc
movsb
dec
sbb
icebp
aam
in
mov
add
jmp
xchg
mov
xchg
cmp
outsl
push
lods
scas
pop
jno
js
cwtl
inc
xor
out
lods
push
sub
int
pop
cmp
sahf
shrl
pop
in
sar
pop
mov
pushf
sti
dec
cmp
xlat
mov
ss
loope
cmp
mov
push
lret
orl
xor
adc
pop
cmc
lret
scas
in
push
or
fstl
pop
insl
stc
call
xchg
and
sti
aam
sbb
fsts
sub
sub
mov
sub
xchg
pop
out
sub
sbb
subl
push
add
jae
cld
sbb
pop
movsl
sbb
out
cmp
adc
xchg
dec
je
or
and
fndisi(8087
fcompp
lods
icebp
push
aas
out
dec
dec
add
xor
mov
add
loope
loop
subb
dec
dec
jno
fs
push
insb
add
cmp
mov
aad
push
stos
js
loop
sahf
and
mov
outsl
adc
movsb
dec
ds
xor
fisubl
imul
lret
pusha
dec
sub
aaa
inc
push
sub
mov
pop
aas
adc
xlat
xor
lods
jbe
jle
sahf
xchg
out
sub
repnz
enter
or
lcall
and
mov
xchg
pop
notb
jns
sub
imul
and
lea
sbb
push
jne
mov
and
cmpsl
xorl
js
sahf
int3
repnz
cli
xor
dec
add
push
aas
adc
dec
mov
sub
jmp
xorl
das
mov
sub
mul
mov
shl
cwtl
inc
ljmp
push
pusha
jno
fsubs
mov
lahf
push
dec
mov
adc
sbb
gs
jnp
pusha
xchg
aas
ret
lock
out
out
dec
mov
and
hlt
aad
pop
sbb
jg
pop
or
inc
test
mov
sub
mov
bnd
sti
adc
aas
out
das
inc
push
out
mov
mov
loop
mov
mov
sbb
dec
gs
mov
pushf
loopne
test
sub
pop
jae
pop
mov
sahf
jge
pop
mov
pop
div
movsb
orb
pop
sub
test
dec
ss
fstps
rcr
push
xor
push
push
sbb
js
jmp
inc
mov
push
xchg
and
inc
out
cwtl
mov
dec
inc
int3
and
out
fwait
test
movl
mov
stos
push
lret
lret
inc
fistpll
sbbl
jp
jns
orb
pop
bound
aas
adc
into
movsb
or
outsb
add
and
mov
popf
into
sbb
adc
loopne
lret
mov
push
ss
in
adc
sub
arpl
outsl
aad
add
repz
pop
movl
mov
dec
jle
fsubs
adc
sub
dec
xorb
adc
add
jno
cmpsl
mov
jb
add
cmp
cli
pushf
xor
out
popl
fs
stc
add
frstor
repz
inc
adc
cmp
and
mov
test
divl
out
jnp
lret
sbb
test
jo
add
mov
movsb
cwtl
lcall
mov
sbb
and
mov
mov
sbb
xchg
movsl
push
in
adc
bound
pop
mov
pushf
push
adc
dec
aam
mov
stos
pop
fsubrs
aad
cmp
pop
int
and
pop
das
lea
mov
and
lods
mov
les
xchg
fisubrs
cmpsl
pop
mov
mov
xchg
push
out
stos
scas
sub
adc
xor
sahf
ss
fmuls
and
or
sbb
mov
std
repnz
leave
mov
xor
inc
push
cmp
rcll
adc
inc
jmp
into
mov
push
mov
xor
fs
inc
insb
sbb
idivl
test
pop
ret
loopne
pop
flds
push
ret
iret
stc
xchg
daa
xor
out
dec
or
js
stc
dec
sarb
mov
testb
or
ficoms
or
dec
rcl
lcall
stos
loope
or
ljmp
cmp
pop
imul
push
adc
cmp
nop
cmp
outsb
jg
sahf
subb
xchg
and
mov
jo
loope
popf
mov
adc
out
sub
add
mov
loope
pushf
mov
sub
or
add
push
xchg
cwtl
or
fldcw
pop
mov
mov
add
iret
pop
loop
cs
imul
sahf
cmp
xorb
cmp
aas
pusha
sub
fsubrs
push
mov
cmp
scas
call
push
mov
call
inc
loop
fisttpl
mov
mov
mov
das
jecxz
mov
call
xor
cmp
scas
test
in
int3
jmp
popf
imul
and
add
mov
mov
pop
push
xchg
pop
shlb
adc
or
jnp
adc
xchg
cmp
insb
jecxz
cmp
loop
sbb
jge
xchg
dec
or
adc
xchg
test
mov
or
bound
pusha
int
test
into
mov
cs
xor
xor
cwtl
and
ret
mov
jae,pn
pop
shll
adc
jnp
pop
mov
mov
cmp
js
jne
ss
adc
enter
xor
sbb
or
mov
insb
ret
cmp
mov
fwait
push
xlat
cmc
sahf
jp
mov
xchg
xlat
adc
xchg
bound
xor
sti
cmc
rol
push
fcmovb
cmpsl
and
mov
cmp
outsb
imul
lds
push
ret
out
fisttpll
pop
xchg
inc
add
cmp
push
sub
inc
add
lahf
inc
decl
jae
lahf
dec
cmp
sub
lahf
add
ficomps
mov
mov
cmp
cli
in
cmpsb
ds
leave
and
mov
adc
pop
push
or
ret
jbe
rcll
pop
insl
mov
pop
lea
fcmovne
mov
test
pop
lret
dec
pop
mov
lcall
insb
in
notb
fists
push
cs
dec
rcrb
clc
mov
add
das
lock
ret
in
xor
pushf
inc
fs
jmp
cltd
or
into
fidivrs
stos
popf
mov
stos
mov
mov
dec
adc
dec
cmp
inc
push
shrl
or
daa
clc
dec
sub
lret
inc
std
das
mov
dec
pop
bound
sbb
inc
add
inc
popf
je
jns
enter
mov
in
xor
rcrl
fdivrl
sub
add
stc
iret
rcrb
into
jo,pn
dec
adc
cmp
negl
inc
xchg
mov
xchg
cmp
cmove
jae
mov
loopne
arpl
push
cwtl
or
lret
sti
xor
dec
fildl
inc
xor
mov
mov
in
into
lock
mov
rcrl
repnz
mov
mov
repz
jb
lcall
bt
leave
ror
sbb
popf
inc
or
jecxz
cmc
ds
mov
inc
xchg
cmpsb
bound
push
push
int3
mov
mov
cmp
lcall
fcmovbe
ljmp
mov
dec
push
fisubrs
pop
pop
test
pop
jg
out
inc
push
shl
sbb
jae
sub
aad
fwait
push
loop
add
inc
adcb
pop
cmc
sbb
insl
and
cmp
and
and
mov
xchg
mov
jp
pop
andb
push
xchg
loope
mov
cmpsl
jb
sbb
sbb
jb
push
mov
add
cmc
mov
fistpl
mov
dec
loope
cmp
mov
out
testb
cmp
xchg
sbb
xchg
loopne
sbb
movsl
cli
sbb
mov
outsb
js
and
add
push
and
ja
daa
scas
jecxz
pop
rcrl
mov
pop
pop
and
and
ret
out
jno
pushf
in
test
pusha
jo
xchg
out
adc
movsb
jg
out
mov
iret
lods
push
add
aaa
lds
push
adc
push
dec
daa
orb
xor
push
jle
xchg
dec
mov
push
xchg
popf
mov
xor
lea
loop
push
aas
ficoms
adc
or
pop
mov
push
cs
sarb
or
adc
popa
std
loope
ret
jmp
lea
pushf
sub
jne
jg
push
inc
adc
mov
lea
stos
arpl
pusha
sbb
popf
push
xor
std
sbb
mov
popf
or
push
scas
jg
pop
sarl
fidivrl
xor
in
shll
xchg
jb
pusha
inc
adc
or
mov
data16
xchg
xchg
outsl
imul
mov
jne
mov
adc
outsb
sbb
push
inc
xor
loope
jb
push
pusha
and
mov
mov
fwait
push
out
cmp
pop
mov
pop
aam
xlat
int
cmp
lods
push
lock
aam
cwtl
jge
bound
push
ds
arpl
into
pop
mov
bnd
into
inc
pop
pop
adc
icebp
in
xchg
subb
add
and
sub
lea
add
inc
mov
push
cltd
inc
aaa
int3
lcall
adc
inc
sub
jne
mov
mov
in
push
nop
sbb
addl
lret
jmp
jae
decb
jl
dec
out
andl
test
movsb
mov
adc
inc
loope
imul
adc
add
mov
pop
movsb
rorb
and
dec
inc
xchg
je
mov
xchg
shlb
outsl
fcompl
scas
repz
mov
cmp
sub
imul
sub
das
mov
daa
dec
icebp
mov
shl
cmp
add
or
das
leave
ljmp
cmp
movsb
cmp
dec
add
hlt
fstpt
enter
cs
fsubrl
loopne
cmp
fsubs
sub
sbb
std
jo
pop
fiaddl
inc
xchg
adc
mov
and
test
rclb
imul
pop
xor
push
daa
fneni(8087
jns
push
fwait
mov
inc
cmpsl
loope
adc
xor
jae
aas
and
jns
pop
pop
inc
repnz
sbb
adc
cmp
cmpsb
mov
push
je
jne
pop
gs
fdivrl
daa
pop
cli
mov
or
and
in
xor
jno
sarb
and
dec
pushf
out
or
inc
mov
mov
test
push
sti
lret
mov
push
scas
ret
fnstcw
mov
cmpsl
dec
mov
xchg
fsts
fs
cltd
ljmp
xor
adc
add
sbb
insl
cmp
arpl
loopne
cbtw
mov
mov
sbb
jo
inc
stos
fcomps
cmpsl
xor
xor
cld
mov
inc
jmp
add
mov
icebp
in
insb
pushf
fwait
test
adc
mov
mov
nop
push
mov
ljmp
sub
in
mov
les
cmp
shll
in
inc
jp
push
xchg
clc
mov
movsl
sub
xor
xlat
scas
subb
out
in
lods
mov
jo
rcrb
lds
lcall
sbb
and
call
loopne
mov
mov
or
or
popf
xchg
fistpl
and
inc
jns
loope
add
inc
std
jnp
mov
xchg
outsb
push
dec
in
in
push
jg
jnp
jl
mov
cmc
fcmovne
std
jmp
dec
add
mov
mov
push
sbb
pop
mov
jnp
cmp
push
out
sbb
icebp
xor
scas
and
lret
and
mov
roll
rorl
ss
arpl
push
inc
out
nop
sqrtps
or
xor
sbb
inc
sub
ljmp
jne
movsb
jge
mov
sub
inc
adc
pop
and
pop
dec
adc
xchg
xor
mov
out
testb
cwtl
ljmp
xchg
sbb
enter
sub
stos
add
gs
inc
pop
cmpsb
mov
fwait
xchg
inc
or
idivl
mov
lods
jne
jl
andl
cmp
push
or
ss
lea
std
sbb
adc
add
sbbb
ja
ss
adc
popa
mov
insl
xchg
sar
mov
daa
shll
pop
lods
pop
ljmp
int3
movsl
xchg
fmuls
inc
gs
leave
push
out
fisubs
pop
and
lret
lods
sbb
adc
pop
aas
mov
adc
fnsave
pop
ds
adc
das
add
out
popl
in
popf
pop
adc
push
mov
lock
addl
cld
pushl
orb
dec
test
mov
mov
cltd
or
lds
mov
movsl
and
and
bound
sub
pushf
adc
push
mov
and
adc
sub
fwait
call
mov
mov
daa
stos
int3
das
mov
xlat
sub
sub
push
push
imul
sbb
iret
jmp
iret
jp
dec
sarb
lret
decl
neg
mov
in
stos
in
daa
cmc
push
dec
push
iret
sahf
cmpsl
inc
rclb
data16
lea
icebp
shlb
stos
mov
call
icebp
inc
sti
jp
mov
idiv
mov
es
ljmp
inc
in
pop
or
xorl
adc
out
mov
sub
push
test
jmp
sti
out
insb
clc
lcall
and
fbld
mov
imul
scas
mov
xchg
repz
push
pop
xchg
pop
loop
jp
subl
rol
jmp
ja
inc
jns
xchg
xor
xor
out
jge
push
int3
xchg
xorl
mov
xchg
adcl
dec
lods
fistl
and
or
dec
jb
cli
sub
dec
xchg
enter
test
ja,pt
data16
in
and
xor
jno
push
jo
int3
jecxz
or
cs
mov
adc
mov
flds
das
push
push
les
jmp
scas
pop
sub
mov
scas
pop
out
dec
aas
out
ret
in
jle
sub
pop
cli
pop
lea
hlt
push
loopne
data16
pop
sub
out
sbb
inc
mov
sub
adc
arpl
je,pn
push
push
stos
ret
ja
pop
int3
movsl
mov
cwtl
fs
push
adc
notl
jne
cmp
popa
pop
inc
out
loope
enter
lods
lret
out
pop
sbb
inc
cmp
sti
cmp
je
cmpsb
es
pop
mov
push
test
std
cmpsb
mov
roll
push
fucompp
sub
and
xor
inc
stos
movsb
jnp
add
sbb
test
push
jecxz
pop
sub
sub
ret
push
push
pop
cmp
les
idivb
pusha
sbbl
test
cwtl
hlt
push
dec
xchg
and
and
jo
xor
lods
pop
or
cmpsl
inc
cld
mov
dec
clc
int
mov
mov
pop
mov
mov
add
shll
and
daa
leave
inc
dec
inc
mov
sbb
xor
stos
dec
mov
fucomi
cli
sbb
lds
or
nop
adc
push
mov
cmp
stos
mov
dec
sbb
inc
sub
dec
pusha
inc
lock
dec
mov
or
add
ds
cwtl
test
sbb
loopne
and
int3
push
cmp
jae
jo
lcall
mov
leave
jp
xchg
lock
scas
mov
loope
lahf
mov
mov
int3
jno
ljmp
into
mov
mov
xorb
nop
lret
add
and
ds
cltd
xorb
jnp
and
ret
movsb
pop
cld
ficompl
xchg
bound
jl
inc
push
aad
add
pop
repnz
mov
xchg
dec
icebp
mov
sub
imul
mov
add
sbb
sbb
testl
cmpsb
sahf
ret
xchg
fldenv
dec
sbb
leave
add
je
rcrl
inc
call
pop
sbb
loope
aad
sub
iret
outsl
ds
mov
mov
inc
or
inc
sbb
test
test
mov
pop
aaa
seta
cmpb
xor
negl
dec
mov
inc
adc
push
sbb
rclb
xor
ficoms
ja
add
dec
and
jnp
or
sti
adc
fsubrp
fimuls
sahf
or
add
insl
lret
lds
psrlq
jb
cmp
xchg
imul
inc
fdivrs
movsb
jmp
notl
xchg
sub
and
test
mov
xchg
sbb
adc
aam
sbb
or
lods
in
xor
mov
sub
xor
out
inc
icebp
out
outsl
cld
cmp
push
mov
mov
cmp
push
fisttpll
cmc
or
les
pop
lods
mov
xchg
sbb
ja
enter
fs
enter
pushf
out
es
lods
rcrb
in
add
sub
pop
fsubl
lcall
jle
jae
idivb
mov
lahf
icebp
push
add
in
jo
dec
aas
dec
stos
outsl
jle
sbb
push
sub
mov
or
js
push
fcoml
mov
inc
inc
mov
orl
jbe
cld
ss
xchg
push
jno
lea
and
bound
and
rcrl
outsb
add
mov
popf
or
aad
shrb
aad
jae
dec
xor
int3
xor
jge
sub
movq
popf
push
aas
jmp
mov
test
xor
mov
fstpt
sub
push
outsb
in
or
xchg
imul
dec
and
subl
fcoml
mov
add
adc
cmpsb
xlat
xor
xor
fidivs
or
addr16
and
cltd
mov
jo,pt
push
femms
rcl
or
test
es
iret
ds
push
jge
lret
popf
add
aaa
aaa
and
add
movsb
aaa
bound
bound
sbbl
dec
jns
fistpl
stos
nop
std
ja
sbb
add
fldt
dec
push
jg
ja
jmp
popf
imul
and
mov
push
push
fcoms
mov
mov
or
push
pop
xchg
inc
pop
jno
add
test
js
imul
mov
xchg
cs
push
mov
mov
cwtl
sbb
bound
out
mov
inc
fsubs
outsb
fdivp
in
hlt
pop
sub
dec
dec
xchg
cs
repz
leave
add
fwait
jmp
and
daa
subb
lods
cwtl
cmp
das
mov
xor
sbb
int
sub
push
movq
dec
add
out
sub
cmp
mov
dec
sub
notrack
mov
sbb
fcmove
dec
flds
cmp
sub
pop
xor
inc
ret
inc
sub
inc
outsl
cmp
xchg
and
jl
repnz
call
cmpb
lcall
ret
jge
movsb
lods
and
inc
ja
xor
and
insl
test
loop
pop
jae
je
adc
ret
mov
mov
or
dec
mov
mov
test
idivb
and
push
pop
sbb
add
xlat
mov
inc
lods
lahf
mov
rclb
jbe
js
push
cltd
gs
inc
push
jmp
or
cmp
jecxz
push
mov
fwait
xchg
dec
jbe
cmovl
sub
sarb
lret
mov
fistl
mov
movsl
xchg
inc
cmp
test
repz
fs
daa
pop
test
xchg
inc
lcall
nop
test
cmp
out
dec
mov
push
les
bound
dec
sbb
push
xor
pop
mov
lret
js
or
lret
mov
iret
rol
sarl
mov
or
pop
mov
daa
adc
imul
pop
push
or
push
sbb
movl
jns
dec
loope
ret
jae
cmc
or
ds
jl
sub
lds
sbb
sbb
dec
in
xor
mov
add
pop
fcoml
sbb
mov
push
or
cmp
push
inc
fwait
pop
inc
mov
push
std
sub
xchg
lods
xchg
jne
incb
out
cmp
and
testb
or
test
decl
jmp
fs
xor
idivl
outsb
push
stc
adc
jp
mov
popa
sub
push
push
pop
pop
sbb
add
push
jge
cmpsb
mov
outsl
test
xor
loopne
mov
sbb
xchg
mov
fildll
repz
mov
stos
xor
pop
and
lods
mov
mov
xchg
sahf
dec
aam
scas
clc
push
lret
in
arpl
push
fildll
mov
cmp
xor
in
int
inc
addr16
mov
fucomi
into
mov
sub
xor
stos
ljmp
xchg
stc
test
lcall
jns
jno
fstl
xchg
pop
insb
movsb
mov
fs
out
scas
and
mov
lock
outsl
repz
ljmp
mov
aad
mov
mov
add
lret
or
cmp
inc
repnz
jmp
fwait
mov
push
aad
inc
cltd
push
dec
cld
push
jb
test
stos
mov
rcl
pusha
ss
outsb
and
mov
xchg
xor
fbstp
cmp
push
imul
mov
loope
mov
mov
xchg
and
adc
ret
add
pop
cmp
mov
dec
aas
add
adc
aam
lods
and
repz
lock
adc
dec
call
call
adc
jne
xor
aad
icebp
sub
inc
xchg
lock
mov
shll
push
mov
sbb
aaa
inc
inc
out
adc
hlt
fstpt
push
jne
outsl
sbb
cmp
push
pop
test
ficoml
jne
inc
sahf
jmp
fdivrs
adc
jb
mov
xor
test
mov
mov
addb
xchg
shl
sbb
jb
outsl
push
and
add
sub
rolb
dec
cli
xor
stc
mov
movsl
ljmp
adc
int3
mov
push
xor
dec
clts
pop
or
cmp
mov
mov
cmp
jmp
xchg
add
xchg
jmp
jno
cmp
aaa
mov
jns
loop
sbb
mov
xchg
adc
popa
xchg
mov
test
adc
push
cmc
xrelease
xchg
sbb
xchg
rep
fcoms
pop
and
lret
out
mov
and
mov
stos
mov
lods
sbb
pop
shrb
mov
mov
scas
fcompl
push
stos
add
loop
jp
mov
mov
mov
dec
pop
inc
sub
stos
mov
les
lea
cmp
dec
xchg
in
sub
push
dec
sub
xor
decl
fidivrl
int
lock
daa
xchg
and
mov
lret
fists
push
push
pop
mov
sbb
or
inc
jae
or
test
mov
es
andl
xchg
std
insl
sub
nop
int
mov
sub
roll
pop
inc
adc
add
outsl
sub
pop
adc
cmp
adc
cmp
push
mov
sbb
aas
dec
push
adc
outsb
push
imul
test
jl
xchg
ss
fisttpll
pop
pop
jl
test
incl
jb
enter
push
xor
sub
test
sub
bound
mov
insl
lahf
or
cmp
ja
mov
out
jno
in
cmp
jno
add
in
outsb
int
mov
sbb
xchg
out
lock
cltd
in
sub
lcall
sarb
mov
add
out
pushf
dec
int
scas
and
mov
test
mov
cwtl
inc
dec
out
dec
mov
cmp
cmpsb
xor
rcll
adc
xchg
cwtl
mov
and
pop
adcb
js
jl
and
nop
or
fwait
cld
add
mov
add
add
sbb
roll
pop
movsl
scas
rcll
fidivs
addb
cmpsb
fcmovnu
stc
adc
test
push
and
popa
cmp
mov
addr16
or
or
leave
dec
jns
cmp
es
xchg
cmp
lea
fsubrp
adcb
xchg
jg
shll
jmp
lcall
cmp
xchg
cs
mov
mov
push
sub
xchg
mov
imul
scas
fidivl
adc
hlt
xchg
dec
sbb
mov
rcrl
jnp
mov
repnz
enter
in
insl
pop
clc
sbb
gs
dec
insl
in
imul
cmp
xor
movsl
inc
lods
in
dec
jb
or
and
cmp
pop
xchg
sbb
push
fdivs
out
sub
cmp
adc
xorl
jecxz
and
aam
and
out
push
outsb
fdivs
push
ja
addr16
loop
aam
jno
enter
jns
scas
xchg
cmp
jp
pop
mov
pop
xchg
dec
imul
mov
cli
fstp
pop
dec
sub
dec
mov
lods
inc
dec
icebp
push
inc
out
cmp
int3
cmp
sbb
icebp
inc
xchg
jge
sbb
bound
xchg
cmp
fmull
lods
cmp
leavew
xchg
dec
insb
inc
xlat
mov
sbb
test
sub
cmpsl
popa
in
pushf
jb
je
adc
xlat
jmp
ljmp
inc
enter
xchg
jp
push
push
dec
dec
jno
daa
mov
cmp
mov
mov
test
mov
dec
add
stos
insb
mov
repnz
push
pop
add
mov
lea
and
shll
pop
mov
jge
into
mov
imul
mov
imul
push
push
pop
insl
ja
push
cmp
xchg
jnp
jmp
shll
movsb
popa
cmp
jne
and
mov
enter
sub
repnz
pop
inc
shr
subl
or
pop
loop
pop
aam
enter
loop
sbbl
jge
aaa
or
addr16
mov
mov
mov
testb
ja
dec
add
out
daa
pop
pop
fldpi
out
push
out
jns
fwait
pop
fldcw
fdivrs
xor
adc
das
leave
mov
nop
iret
mov
lret
pop
mov
sbb
rcll
sbb
sub
add
and
es
fildl
pop
mov
js
mov
jbe
pop
pop
iret
xchg
jp
cmp
push
mov
movsl
loope
mov
xor
push
and
stos
js
push
push
outsb
pop
int3
push
push
shrb
mov
addr16
rorl
xor
call
fs
add
aaa
adc
mov
jl
repnz
cmp
loop
outsb
push
add
jo
adc
and
scas
dec
out
dec
jg
icebp
xchg
ljmp
xor
test
xor
adc
push
cmp
aas
dec
in
ja
cmp
pop
xchg
lret
cmp
mov
push
inc
mov
mov
inc
and
dec
mov
adc
movsb
sbb
push
dec
fistl
push
xchg
xchg
out
lret
mov
es
insl
in
xchg
adc
sub
enter
cmpsl
addr16
shlb
jae
call
and
sub
jmp
xor
ss
loop
xchg
outsb
sbb
xchg
faddl
jo
sbb
cmp
mull
pop
xor
and
bound
fs
mov
sbb
cmp
sbb
push
test
pop
push
xchg
adc
in
mov
mov
lods
jecxz
fwait
mov
xlat
xor
xchg
cwtl
into
daa
mov
fsubrl
fimull
adc
popa
test
loopne
cmp
dec
and
cmp
pop
jbe
sbb
std
fcmovu
js
ret
gs
scas
sti
jbe
pop
outsb
jle
lcall
lahf
mov
test
cld
xor
cld
xlat
pop
das
call
push
xor
ljmp
xor
push
lcall
fldcw
test
sbb
outsb
cmp
mov
sbb
stc
inc
mov
frstor
mov
sbb
jecxz
sbb
int3
aas
call
movl
inc
dec
pop
lret
movsl
arpl
dec
add
nop
cmp
movsl
sbb
pop
mov
add
out
cs
popf
scas
pop
shr
mov
adc
or
or
out
pop
xor
mov
test
and
dec
push
mov
jno
sarb
dec
pop
mov
sub
ficomps
dec
mov
lods
or
mov
adc
cltd
jmp
jl
aas
loop
sbb
out
and
fnstenv
fisubs
psrlq
inc
mov
dec
ja
push
xchg
push
add
pop
loop
aam
cld
aam
cmp
out
je
dec
movsl
arpl
out
pop
sti
mov
ljmp
jmp
adc
adc
lods
fstpt
inc
into
imul
mov
xchg
mov
sub
xor
sbb
mov
call
pop
cld
pushf
xlat
cwtl
loop
xchg
repnz
inc
sbb
clc
data16
dec
int
clc
and
jae
popa
dec
xchg
je
rsm
cmp
xor
cmp
stos
bound
mov
das
pop
xor
lahf
inc
cmp
dec
jne
cli
cmp
loop
or
pusha
lcall
jno
sbb
out
inc
xchg
cmc
rclb
enter
stos
jle
inc
inc
push
popa
push
sbb
cmpl
xchg
xchg
das
mov
and
adc
hlt
fisttps
dec
pusha
dec
jno
insb
push
jns
icebp
push
aad
push
aad
loop
mov
push
call
std
lds
sub
repz
mov
push
int3
mov
mov
les
cltd
cmp
cmp
and
ja
in
xchg
mov
push
cs
call
push
ficoms
hlt
mov
dec
inc
xchg
hlt
and
aam
insb
xchg
xor
inc
pusha
mov
xchg
jns
jnp
and
addb
cwtl
aas
xlat
xlat
out
add
sbb
loope
or
jl
pop
cmp
sti
adc
orb
xor
das
bound
inc
xchg
subb
popa
lret
scas
out
in
sub
push
push
pushf
pop
xor
mov
imul
test
lahf
in
mov
xchg
jg
ja
jmp
xchg
mov
popf
js
xchg
xorl
aad
and
pop
movsl
popa
cmp
adc
fdivrs
dec
out
sbb
cmp
lods
sub
dec
push
push
xchg
push
in
jle
scas
dec
mov
pop
add
enter
and
cmp
mov
mov
mov
sbb
enter
jnp
iret
mov
out
adc
jp
sarb
mov
jl
fidivrs
mov
xlat
mov
and
pop
and
jecxz
cmpsl
mov
ret
cmpsl
fucomip
mov
and
mov
outsb
pop
xchg
das
pusha
int
movsl
test
adc
xchg
scas
and
and
push
std
fmull
mov
jl
cmp
addr16
xchg
out
mov
out
repnz
pusha
and
or
call
cmc
dec
arpl
addl
push
push
or
pushl
pop
std
mov
in
cs
int
lahf
cli
leave
shlb
addl
gs
cmpsb
sub
cmc
vmovapd
cltd
ret
pop
xchg
bound
inc
arpl
push
lcall
mov
and
in
decb
mov
test
in
dec
dec
mov
movsl
in
sbb
push
mov
mov
dec
push
cmp
cwtl
xchg
adc
push
sarb
pop
fdivrs
jo
jg
inc
mov
std
xchg
mov
pop
cmp
xchg
mov
mov
int
cltd
lods
stos
lahf
mov
or
clc
sbb
stc
cwtl
lea
inc
mov
mov
das
sbbl
insl
loope
es
sti
into
jae
int
add
and
test
lods
or
movsb
jo
sbb
or
bound
pop
dec
xor
mov
xchg
cmp
pop
add
jmp
pop
mov
addl
fbld
loop
lock
or
lds
pop
sbb
pop
mov
sub
pop
cmc
cmpsb
popf
push
jp
or
inc
pop
xchg
add
jle
xor
jnp
movsl
pop
xchg
mov
imul
ljmp
mov
sbb
xor
xor
mov
rorb
dec
mov
pop
dec
repz
sahf
or
sbb
into
mov
add
xchg
lret
jbe
pop
clc
and
sbb
loope
lods
xor
pop
shrb
ret
xlat
xor
mov
adc
mov
test
addr16
leave
gs
and
or
out
mov
ds
mov
xor
pop
dec
mov
sbb
out
scas
test
ja
jae
test
jbe
test
ds
cmp
cwtl
cmp
sub
hlt
cmc
jge
outsl
xchg
shrb
cmpsb
dec
mov
pop
out
sbb
mov
into
divb
arpl
insl
sub
dec
js
inc
ret
imul
sub
jne
or
mov
nop
jge
repnz
test
in
push
mov
and
mov
jne
dec
fsubs
test
sar
fistl
xor
enter
es
into
pop
dec
and
lods
fsubrl
arpl
aas
fstpl
mov
inc
add
and
clc
sub
add
sub
lods
mov
push
add
lret
pop
jl
push
outsl
outsl
lods
inc
das
jno
push
mov
gs
push
clc
in
cmp
pop
sbb
inc
push
in
lea
std
in
pop
and
sarl
mov
outsb
push
xchg
cs
cmp
push
mov
pop
inc
mov
mov
rcrb
jae
mov
insb
adc
call
add
mov
in
and
cmc
mov
sti
mov
push
push
in
lods
adc
inc
and
push
shll
imul
stos
lods
cmp
jmp
adc
xor
bound
rcrb
xchg
sbb
rorl
jnp
nop
xlat
pop
int
push
jge
das
cli
nop
test
jmp
jg
rep
sub
inc
xchg
leave
nop
shrb
xor
mov
push
jl
mov
jnp
ss
mov
jp
lcall
out
cwtl
pop
loopne
in
jne
aam
mov
iret
push
push
mov
stos
pushf
pop
cmp
inc
outsb
push
jnp
cltd
call
dec
test
ljmp
sub
and
sub
mov
les
aaa
cld
or
scas
cmp
adc
stos
push
dec
inc
inc
enter
dec
mov
jb
mov
rcrb
repnz
mov
or
mov
lahf
push
call
notl
cld
jp
xchg
xchg
sbb
add
xor
scas
mov
ss
dec
movsb
dec
jns
repz
stos
test
addr16
adc
dec
cltd
rcr
cltd
mov
lret
int
fmuls
lods
adc
pop
mov
sub
mov
arpl
mov
push
into
and
jp
mov
pop
dec
and
insb
out
fwait
push
iret
loope
xor
jb
sbb
aaa
js
cmp
pop
xchg
scas
pop
in
fistl
xor
push
jge
out
das
leave
test
push
mov
adc
rclb
outsl
cs
xchg
stc
fisubrs
mov
xlat
shrl
mov
dec
mov
fs
adc
in
sbb
mov
sub
les
pop
jbe
out
cltd
jge
das
lds
xor
ljmp
cmp
std
test
into
mov
cmp
movsb
cwtl
popa
into
sbbb
sbb
lods
and
and
ficompl
or
jl
dec
insb
repnz
inc
jnp
test
and
repnz
aam
movsb
repz
add
pop
pop
xchg
int
mov
mov
movsb
jbe
add
fucom
cmc
fsubl
and
add
mov
sbb
popf
test
pop
cmove
xchg
mov
ret
rep
shr
mov
in
loope
aad
loop
addr16
xor
xchg
adc
mov
push
mov
inc
fxam
jae
sub
clc
adcl
push
push
push
jle
cli
call
mov
in
jno
imul
and
sub
mov
icebp
fadds
int
jecxz
insl
dec
jle
dec
repz
lods
fidivl
cmp
mov
cmp
jg
jmp
jmp
ds
cltd
sub
stos
stos
aad
jmp
jne
adcb
das
lret
cmp
lahf
jb
ret
ret
arpl
ljmp
addl
push
pusha
fldcw
push
ret
std
sbbb
and
cmp
aam
mov
mov
pop
jne
dec
mov
les
mov
rolb
dec
push
aad
cwtl
je
xchg
adc
sbbl
ds
or
ret
push
jns
fcmove
mov
or
outsl
loop
rcll
jg
mov
or
enter
or
std
jg
dec
mov
or
jecxz
rclb
daa
add
fdivr
les
lret
popf
xchg
or
jmp
cmpsl
inc
pop
adcl
repz
imul
test
mov
add
inc
mov
xor
cltd
jmp
or
icebp
dec
xor
mov
dec
aas
leave
shrl
scas
lret
cltd
and
add
sbb
jge
in
jmp
pop
xchg
cmp
aam
sub
stos
pop
subl
data16
fbld
test
dec
rol
fldenv
jle
mov
subb
cs
or
xor
lods
fidivs
imul
inc
inc
fists
jno
movsb
adc
xor
sub
in
and
adc
pop
mov
jge
dec
fildl
insl
xchg
xchg
mov
outsl
push
jb
cmp
jmp
fcompl
lds
adc
pop
iret
cmp
cwtl
sub
out
sub
movsl
or
cmp
stc
or
jecxz
pop
jbe
xor
rolb
or
out
cmc
jnp
hlt
in
cwtl
es
dec
fcoml
mov
outsb
popf
mov
fdivl
or
test
mov
cmpsb
push
hlt
movsb
subl
stos
lret
and
mov
inc
jg
jnp
je
imul
add
dec
xchg
mov
scas
jge
or
sub
xchg
adc
inc
loope
cli
ffreep
ja
push
pop
adc
xchg
jmp
push
xchg
stc
mov
daa
sarb
pop
adc
ja
fidivl
push
adc
mov
jne
sub
dec
mov
inc
inc
aad
lea
sbb
std
ret
rclb
test
and
or
ljmp
cmp
adc
inc
scas
push
inc
lahf
or
mov
cs
imul
jae
insl
dec
insl
and
pop
fs
ret
cmpsb
sbb
adc
sub
js
push
push
and
out
jno
push
mov
filds
mov
cwtl
or
or
decl
jb
and
mov
add
or
clc
fldcw
movsb
stc
pop
in
nop
jb
stc
sbb
or
in
push
jge
cld
leave
and
jmp
adc
jl
push
clc
sbb
sub
test
fistpll
fsincos
je
stos
aaa
insb
pop
and
jmp
inc
dec
pop
jbe
int3
xor
imul
cmp
add
mov
push
ficompl
push
scas
test
lea
scas
dec
xchg
decl
clc
aad
data16
shl
and
and
push
xor
jmp
clc
pop
ret
fidivrl
or
mov
fs
test
or
or
jae
int
xchg
or
lods
jle
pop
push
push
push
cmp
sub
bound
shr
add
inc
mov
sbb
pop
cmp
jecxz
mov
jmp
ljmp
dec
data16
adcl
scas
outsl
jmp
inc
mov
cmp
insl
xlat
ffreep
or
cmpb
dec
push
lods
ljmp
ret
cmp
lahf
and
in
mov
dec
stos
cmp
mov
outsl
xor
jmp
shrb
ds
jns
ljmp
out
sub
std
data16
lods
mov
ss
fldenv
insb
ret
sahf
cs
inc
inc
xchg
hlt
mov
mov
pop
fcmovnu
sar
test
jo
adc
rcl
in
xchg
addr16
lods
cmp
in
scas
lds
cwtl
xchg
sub
push
cmpsl
ljmp
int
mov
notb
sub
jb
adc
cwtl
insl
push
shl
data16
cmpsb
mov
mov
pop
inc
mov
cmpsb
lcall
push
dec
test
mov
ficoml
outsl
sbb
shll
jbe
pop
adc
into
cmpsl
dec
cld
or
push
pop
cmp
xor
cli
inc
dec
cmp
call
insl
out
sub
cmp
sub
cli
subl
rolb
ds
push
and
mov
sbb
decl
or
inc
aaa
jnp
loope
ret
repz
mov
insl
out
add
imul
mov
insb
loopne
dec
pop
pop
push
or
lods
pushf
in
push
int
cmpb
pop
enter
out
pop
jb
pop
ror
sbb
addb
fdivrl
dec
push
int
mov
cmpsb
negl
bswap
push
add
movsl
push
add
bound
mov
ficoml
pop
adc
sbb
xor
mov
imul
mov
push
jno
outsl
adc
fistpll
daa
and
push
popa
stos
add
out
in
or
imul
mov
jo
repz
mov
xor
out
loope
fmuls
mov
sbb
xchg
jg
int3
cwtl
mov
xchg
adc
cmpsl
xchg
jp
mov
in
xor
cmp
and
bound
cmpsl
in
mov
pop
jl
cmp
sub
and
adc
sbb
pop
jnp
cmc
lret
xor
xchg
popf
outsb
jo
inc
sahf
fldt
push
xor
popf
jle
xchg
loopne
outsb
test
flds
mov
jae
mov
mov
mov
imul
push
push
jecxz
es
xor
mov
into
data16
int
xchg
decl
or
inc
pop
lods
dec
ret
mov
jne
aaa
jl
xchg
enter
fisttpll
xor
in
and
filds
xchg
out
sub
outsl
add
mov
cmpsl
aad
sub
fistl
shl
xor
mov
loop
adc
data16
ljmp
popa
jo
cwtl
jno
or
sar
in
lcall
rclb
rcrl
ljmp
ds
pop
pop
xchg
mov
shrl
gs
and
dec
and
add
pop
pop
je
cltd
mov
enter
jge
sbb
pusha
xchg
cmpsb
rclb
push
aaa
push
inc
in
push
mov
xorl
lret
lcall
adc
insb
ret
shlb
and
add
sbb
in
pop
js
test
inc
dec
outsl
xor
jle
mov
push
aam
mov
jnp
sahf
mov
std
pop
xchg
pop
add
mov
add
out
xor
loope
rcr
xchg
insl
sarb
fldcw
inc
sub
and
clc
arpl
sub
ret
test
int3
repnz
or
push
xchg
push
jbe
push
ret
sub
xchg
dec
push
push
and
gs
or
mov
out
lcall
mov
mov
push
fcoml
mov
sbb
dec
jbe
loope
jbe
sub
lea
lret
jp
cmpsl
aas
movsb
cmpsl
imul
or
jp
fs
push
clc
lret
dec
sbb
mov
lahf
into
ret
ljmp
or
mov
dec
sti
xor
sbb
inc
add
or
daa
cmpsb
fiaddl
dec
lds
adc
sbb
lahf
pop
push
dec
stc
and
or
push
pop
mov
mov
icebp
push
fcoms
lds
lods
dec
add
sbbl
lret
pop
ret
jge
ss
fstps
mov
mov
cmc
out
pop
test
enter
adc
ficoms
dec
inc
xchg
adc
lds
stc
or
jnp
dec
outsb
cmp
cmpsl
inc
xchg
dec
mov
jae
xor
sti
ret
mov
add
cmc
mov
inc
adc
sarl
int
in
jmp
pop
jge
dec
xchg
dec
xchg
xchg
out
roll
push
mov
shlb
das
out
outsl
jecxz
and
mov
push
test
mov
shrb
xor
mov
loop
fildll
jl
out
xor
inc
ljmp
je
push
je
ljmp
loopne
and
in
ja
pop
int3
mov
stc
pop
or
movsb
inc
fimull
mov
pop
mov
je
addr16
or
fwait
xchg
jp
pop
repnz
nop
jmp
xor
sub
push
jne
test
and
dec
out
dec
xor
jg
push
xchg
add
xchg
xor
or
icebp
push
in
fs
push
ja
mov
into
jecxz
fisubrl
pop
push
pop
push
mov
push
add
fsubl
fimuls
ffreep
pop
je
sbb
repnz
int3
subl
imul
dec
push
push
add
dec
fsubs
push
movsl
imul
loop
push
or
insl
inc
or
mov
daa
daa
imul
sarl
cs
cmp
push
cmp
enter
in
mov
push
repz
cli
daa
dec
add
das
or
fistps
pextrw
xchg
mov
scas
pop
inc
mov
sbb
or
push
leave
mov
sub
xor
frstor
repnz
cmpsb
lods
sub
adc
jbe
in
dec
arpl
ljmp
inc
data16
popf
in
fnstcw
push
dec
adc
xchg
das
adc
rcrb
arpl
xchg
lahf
mov
adc
push
xchg
jmp
lcall
cld
mov
jo
ret
int3
test
mov
xor
lods
lea
out
lahf
clc
mov
fimuls
ret
jbe
dec
hlt
pop
push
adc
loope
sbb
inc
mov
mov
pop
leave
cmp
dec
adc
push
push
sbb
out
cwtl
int
push
insl
out
xor
jl
movsb
jle
adc
cmp
loop
sub
dec
push
lcall
icebp
dec
inc
cli
xchg
pop
cmpsl
loop
dec
and
ss
sub
bound
popf
imul
dec
fdivr
stc
add
xchg
orb
xchg
imul
pushw
sub
xchg
dec
in
popf
or
dec
xor
sub
in
jae
push
adc
stos
fucom
cmpsl
inc
push
fmull
and
pushf
or
fstps
sbb
jns
ss
push
pushf
push
pushf
lret
les
sahf
in
inc
ss
aaa
or
stos
inc
cmp
inc
fdivrl
xor
dec
in
pusha
mov
add
mov
pop
and
push
mov
push
lret
cmp
and
arpl
cmc
inc
mov
xor
pop
push
jmp
nop
je
test
imul
sbb
pop
add
data16
es
sbb
mov
adc
lods
fdivs
mov
adc
adc
and
pop
mov
mov
xchg
fs
mov
jl
push
es
add
nop
add
lret
mov
pop
and
addr16
loop
jbe
int3
jp
and
or
jns
test
xchg
ljmp
add
test
mov
out
mov
mov
dec
dec
mov
andb
pushf
xor
jns
xor
add
lock
ljmp
cmp
pop
imul
sbb
mov
cmpsl
xchg
fildl
xchg
jle
push
fcoml
aam
ret
sti
nop
pop
ret
or
jbe
in
and
and
leave
into
dec
xor
pushf
jmp
popf
mov
sbb
and
push
sub
gs
fisubs
inc
insb
sub
and
sub
and
insb
out
lahf
repnz
mov
cli
jo
or
add
movlps
add
in
in
inc
dec
sbb
push
leave
imull
fs
sub
xchg
push
jp
imul
mov
adc
cmp
lcall
xchg
pop
shll
cmp
cmp
xchg
push
mov
jmp
outsb
lcall
jae
jle
mov
add
dec
pop
cmp
sub
jb
dec
mov
or
mov
dec
outsl
mov
jo
cmp
je
sti
shl
or
inc
in
xor
sub
pusha
pop
add
inc
je
into
mov
inc
or
mov
fs
fsubrl
cmp
xor
js
adc
mov
lods
pop
in
pop
scas
adc
xor
cmp
xchg
inc
lea
pop
test
sbb
or
mov
dec
or
fcomip
sub
push
rcr
xchg
and
xchg
jp
lret
xchg
pop
sarl
add
push
test
ss
testb
jp
xor
adc
ja
aad
movsb
out
cwtl
mov
decl
sbb
mov
aaa
daa
jns
mov
es
cmp
xor
dec
lea
mov
shll
sbb
into
mov
jne
add
lods
cmpsb
jns
mov
sbb
jbe
xlat
fwait
push
fcoml
repnz
loop
xchg
cmpsl
cmp
cmp
sub
test
jo
test
xchg
sar
aaa
adc
xor
repnz
or
xchg
mov
pop
lahf
push
pop
cmpsb
xor
fldcw
push
lret
adc
mov
insb
dec
sbb
insb
lret
clc
out
dec
fprem
or
add
dec
idiv
pop
popa
xchg
pop
gs
sub
mov
nop
sub
lds
jmp
push
mov
pop
jns
int3
roll
xor
movsl
dec
data16
pop
push
les
fcmovu
je
fsubrs
mov
mov
cmp
mov
inc
movsb
mov
inc
shll
lcall
jp
mov
roll
push
cli
add
and
mov
sub
stc
jle
push
xchg
fcompl
repz
inc
fdivrl
and
ret
stc
ret
mov
cmc
int
push
add
push
or
imul
hlt
sub
xlat
out
mov
jle
pop
je
sahf
sbb
add
and
aaa
rorl
sbbb
cmp
inc
xchg
insb
popf
jg
adc
push
mov
imulb
pop
jae
inc
pop
push
movsl
push
mov
out
cmp
bnd
dec
out
out
pop
adc
bound
inc
inc
lret
movsl
fstpt
mov
movsl
insb
lahf
sbb
mov
shrl
mov
pushf
xorl
xor
pop
cmc
sub
bound
inc
loope
mov
insl
inc
mov
movsl
ds
addr16
js
lret
fnsave
fdivl
and
aam
push
xor
mov
jnp
sub
popa
push
out
adcb
fs
lret
pop
mov
movsb
inc
xchg
mov
xchg
dec
mov
sub
test
aam
sub
mov
mov
clc
data16
stos
inc
lock
movsb
outsb
cmpsl
shlb
lds
inc
inc
fsubrl
cwtl
aas
das
inc
sbb
cltd
jge
mov
cmp
mov
sub
outsl
push
sbb
add
xchg
fs
lret
loope
adc
mov
push
lahf
clc
cmp
sbb
xchg
cwtl
inc
or
stos
xorb
test
adc
test
inc
add
lret
inc
lea
push
sbb
lods
sub
mov
dec
xchg
enter
xor
ret
push
sub
pop
add
mov
stos
movsl
loopne
lret
hlt
test
jmp
mov
jg
ds
mov
test
fisttpl
or
div
repz
mov
clc
rcl
inc
rcrb
xchg
cmp
jno
inc
mov
test
pop
jb
pushf
fldl
les
js
test
cmpsb
xorb
inc
mov
jmp
mov
jp
fs
cltd
mov
sbb
sbb
mov
ficoml
add
mov
ds
inc
fs
fsubr
lcall
popf
jb
pop
insl
cwtl
repz
push
xchg
jae
mov
jno
dec
sbb
outsl
sub
inc
out
xor
xor
mov
lret
movsb
xorl
xchg
popf
pop
dec
sbb
movsl
jg
add
xor
pop
loop
add
mov
lock
fwait
xlat
adc
sub
push
cmp
aaa
in
cmp
adc
jns
icebp
imull
xchg
fwait
rorb
js
jecxz
mov
cmp
mov
int
lods
or
outsl
divb
jle
or
sbb
or
test
push
and
arpl
sahf
push
and
data16
bound
mov
push
je
adc
arpl
jbe
jns
mov
or
cs
xchg
imul
pop
pop
pop
hlt
out
shrb
loopne
ret
fxch
sbb
xlat
inc
mov
cli
jns
imul
pop
cwtl
lret
jl
lock
pusha
jp
mov
scas
or
mov
je
add
sub
lcall
ja
xchg
fidivrs
loope
push
iret
test
test
jge
ja
xor
in
cld
jl
or
push
mov
cmpsl
pop
mov
or
xchg
jno
push
pop
cmp
in
mov
into
pop
cmpsl
mov
pop
shll
pop
sbb
stos
add
push
in
push
ret
nop
pushf
xor
xchg
push
call
test
das
cltd
or
mov
notl
adc
test
sub
xchg
cmpsl
mov
pushf
mov
testb
add
popa
and
pop
xchg
pop
jge
outsl
ljmp
sbb
add
cmp
cwtl
sub
aaa
mov
jmp
inc
xchg
add
mov
icebp
fsubrs
sarb
cs
fildll
insb
push
test
pop
mov
addr16
pop
pushaw
fs
js
cmp
lret
xchg
xchg
cmp
jns
pop
xchg
aas
push
dec
iret
sti
imul
mov
bsf
stc
sbb
mov
add
pop
jmp
scas
cwtl
in
push
pop
cs
ret
sbb
xchg
imul
ffreep
adc
hlt
bound
push
test
fdivs
mov
clc
xor
sti
js
sub
sub
mov
bound
into
inc
vpsllw
adc
movsb
or
mov
mov
fisubs
fstl
aaa
aaa
pusha
stos
pushf
fistps
arpl
shll
mov
lock
pop
and
jg
or
je
fsts
cs
add
pop
xchg
maskmovq
testl
pop
das
add
fsts
push
or
mov
in
and
mov
jp
push
loopne
push
test
mov
ljmp
sti
loop
add
in
movsl
dec
mov
inc
pusha
out
jp
daa
sahf
mov
mov
lock
movsl
sub
push
cltd
in
jle
dec
int3
mov
fs
dec
call
outsb
mov
dec
mov
fidivrs
fsubl
in
push
cltd
push
push
or
sbb
insl
inc
inc
adc
test
sbb
jnp
adcb
outsb
loope
and
add
cmc
inc
arpl
cmp
daa
fldcw
xor
lock
cwtl
mov
test
xor
mov
add
jmp
shrl
ret
mov
push
repz
popf
jno
test
mov
arpl
int3
cs
aas
aaa
fldcw
ret
rolb
int3
jo
cli
lcall
xlat
repnz
xchg
inc
push
xchg
fstps
xchg
lahf
or
fs
push
or
xchg
lret
jmp
sub
push
aad
xchg
in
inc
addl
inc
nop
shr
xchg
imulb
jp
mov
lcall
movsb
ss
sbb
test
mov
push
std
iret
outsb
lods
fidivrl
xor
xorb
cli
mov
dec
je
movl
clc
leave
enter
or
fstps
loope
test
cmp
or
sub
lret
xlat
mov
fsubr
mov
xor
int
sbb
jno
push
stos
dec
xchg
push
mov
nop
sbb
insb
int
cmp
and
xchg
xchg
cld
sub
sbb
mov
shrb
sub
push
cmp
adcl
mov
or
das
loopne
out
gs
imul
loop
xchg
dec
push
lea
arpl
xchg
mov
out
xchg
lea
jb
iret
lret
sbb
clc
adc
bound
movsw
nop
aas
mov
jbe
pop
cmpsl
fnstenv
andl
addr16
aaa
mov
inc
ja
jo
adc
in
xchg
xor
jge
xchg
andl
add
dec
dec
shlb
sti
sub
push
clc
ja
mov
jecxz
vsubpd
mov
je
orb
add
adc
mov
jbe
push
dec
andb
fsubrl
mov
scas
inc
ds
lds
cld
addl
dec
push
jns
mov
bts
sub
add
ret
dec
ret
in
aad
mov
outsl
push
mov
scas
adc
in
mov
ja
xchg
in
lret
pushf
or
jle
aam
enter
xor
subl
fstp
lds
movsb
cmp
shl
les
cmc
test
xchg
jge
jg
daa
mov
pop
jb
shrl
pop
pusha
adc
jmp
push
mov
and
adc
ret
in
fisttpl
cmp
mov
mov
sbb
ja
nop
iret
mull
or
inc
insb
cmp
sbb
and
mov
jb
jge
jbe
call
stos
lret
jnp
mov
and
add
or
sub
rcr
mov
mov
push
jecxz
scas
fidivrs
add
sti
imul
pop
mov
daa
bound
mov
fs
and
inc
sbb
jo
xchg
cltd
push
pop
loopne
or
incl
jg
lods
inc
dec
dec
scas
add
mov
xlat
rorb
test
dec
andb
cmpl
lcall
int3
rep
inc
mov
xor
ds
jbe
les
mov
mov
jno
xor
imul
shlb
lock
insb
mov
mov
lret
mov
mov
jecxz
xchg
inc
add
dec
inc
int
repz
sbb
lahf
cmpsl
ret
inc
shr
lods
push
and
loop
cmp
cmp
out
push
push
jo
and
cs
int3
mov
xchg
ficoms
ret
sub
movsl
mov
jecxz
push
xchg
int
int3
aam
xchg
les
xlat
pop
fistpl
add
mov
rorb
pushf
xor
adc
pop
insl
shr
cmp
loop
je
arpl
mov
xchg
iret
mov
rorl
add
in
es
mov
shrl
into
into
aam
sub
rcrl
pop
dec
dec
ret
adc
inc
icebp
cmp
leave
push
mov
adc
in
mov
inc
in
or
or
push
leave
or
and
int
insb
das
xchg
call
sub
std
mov
mov
add
shrb
cli
cmp
adc
jnp
jmp
fwait
or
add
xchg
mov
sbb
inc
mov
subb
sub
les
push
int3
dec
rolb
adc
sbb
xchg
cmp
leave
test
js
dec
xchg
mov
rorb
mov
lock
orl
enter
pop
lods
icebp
pop
jb
ret
mov
int3
mov
add
adc
mov
mov
jno
aam
sub
jb
lret
sub
jbe
fbld
scas
leave
adc
or
add
scas
cs
in
and
or
mov
sub
bound
push
mov
cmp
test
out
mov
shr
and
add
iret
push
ret
push
pop
lret
sub
push
mov
or
sbb
jl
adc
sbb
add
push
pop
pusha
pop
mov
mov
or
push
or
dec
jl
in
xchg
cmp
fildll
xchg
pop
popa
and
cltd
push
scas
sbb
mov
hlt
fucomp
push
sub
mov
dec
pop
imul
lods
add
cmp
or
cmp
mov
fidivrl
pop
adc
cmp
cmp
in
in
xor
adc
mov
pushf
loop
ljmp
movsb
bound
add
mov
pop
sub
mov
sahf
aas
xor
jae
lock
push
mov
sbbl
loopne
les
jg
cmpsb
jno
outsl
movsb
inc
sub
leave
std
mov
jmp
scas
arpl
sub
sub
xchg
and
ret
pop
rolb
sub
adc
push
ret
rolb
sub
das
ds
mov
mov
out
imul
sub
inc
jne
push
outsb
insl
mov
jns
das
bound
and
and
lea
int
add
js
xor
imul
push
jae
mov
inc
add
sub
imul
sbbb
jae
cmp
sbb
or
adc
cmp
dec
mov
lahf
jae
mov
jne
mov
arpl
fimuls
ss
imul
and
jno
test
js
inc
jecxz
call
and
mov
in
int
xlat
xchg
push
jl
jns
pop
ljmp
rcrl
fs
std
les
das
sub
xchg
sahf
mov
popa
mov
and
cltd
adc
jg
mov
lcall
and
pop
sub
dec
test
xchg
in
popa
jg
xchg
adc
jno
inc
bound
lods
mov
or
shl
test
xchg
pushf
mov
xor
jle
xchg
lret
sbb
data16
or
sar
ljmp
cld
xlat
repz
rorl
cs
xor
sbb
cmpsl
filds
mov
adc
ds
mov
xchg
sahf
jbe
mov
ss
inc
push
rol
xchg
out
out
jne
stc
insb
adc
rol
xor
xor
dec
pop
dec
xorl
das
jbe
je
adc
pop
lret
push
out
xchg
adc
jl
push
dec
add
dec
iret
loopne
fsubl
push
xlat
xor
push
dec
push
dec
iret
inc
stos
xchg
jle
subl
data16
jp
pop
loopne
cmp
das
xchg
add
jecxz
mov
enter
es
movsl
cmp
mov
push
mov
pop
subl
fsubrl
jmp
xchg
sbb
push
sub
cmc
and
xchg
mov
cmp
dec
jns
sbb
mov
jmp
ljmp
arpl
cmpsl
push
push
enter
adc
aaa
pusha
sub
mov
stos
xchg
push
mull
test
shrb
fildl
xorb
test
inc
dec
andb
jmp
fnstcw
loop
lret
mov
mov
cmp
and
daa
out
mov
fwait
popl
shl
inc
dec
inc
es
test
sbb
rolb
scas
outsl
sbb
lock
in
mov
and
int
pop
cmp
imul
jns
pop
jae
mov
dec
imulb
mov
loop
test
pop
out
mov
adc
les
dec
insb
push
mov
inc
mov
push
xchg
rcll
sub
add
push
push
int
rcl
sahf
mov
cld
xor
pop
iret
xor
shrl
outsl
jmp
mov
jle
adc
js
xor
stos
mov
dec
and
bound
lret
add
lahf
jl
jbe
aas
jge
xor
jno
scas
xchg
rcrb
movb
and
ss
outsb
inc
sti
inc
sti
fdivs
ds
mov
mov
test
dec
movsl
stos
cmp
jne
cltd
jae
sub
outsl
leave
xchg
jmp
pop
out
test
sarl
or
and
jns
mov
adc
sbb
leave
mov
jo
pop
fwait
add
jle
jle
sbb
jmp
jl
mov
fprem1
aaa
add
xor
add
and
dec
mov
inc
mov
push
scas
or
cmp
adc
ret
insl
xchg
adc
out
lds
xchg
xchg
lret
pusha
lods
repnz
cwtl
js
push
outsl
xchg
repz
in
mov
jmp
mov
rolb
mov
arpl
aam
xchg
hlt
fiadds
sub
or
inc
adc
xchg
push
pop
stc
push
je
mov
cmp
inc
fsubr
das
outsl
imul
xor
fwait
add
out
or
pop
xchg
sbb
or
sbb
js
jnp
push
leave
fwait
sub
in
push
mov
mov
sub
and
add
dec
pop
xchg
fs
test
mov
and
loop
call
xor
leave
dec
xchg
sub
iret
add
jl
les
cmp
xor
arpl
popa
daa
call
jl
test
jae
jg
adc
cmp
push
add
pop
out
ficoms
dec
and
pop
pushf
jge
loopne
popf
icebp
add
jno
pop
es
lret
sbb
cmp
xchg
sbb
popa
inc
test
xor
std
ret
aaa
mov
adc
add
insl
xchg
mov
scas
aad
mov
rorl
pop
mov
xor
or
xor
lahf
popa
faddl
xor
orl
bound
lock
push
and
mov
notl
fidivrs
mov
add
adc
jl
mov
xchg
lahf
mov
outsb
adc
jbe
scas
aam
addr16
mov
push
insl
push
jp
mov
stos
imul
xchg
stos
or
cmp
xor
in
je
adc
aas
jl
ror
sub
xchg
mov
cltd
mov
add
es
pop
les
or
pushf
out
fistpl
adc
xor
inc
call
mov
adc
jmp
mov
arpl
out
lret
pop
cld
leave
pop
bnd
dec
aam
fidivrl
xor
or
leave
sbbb
mov
aam
xchg
jle
ret
cmp
mov
sahf
rcrb
adc
add
dec
pop
fisubs
je
lods
in
xchg
aad
mov
or
lahf
cmpsl
jbe
ja
rorl
mov
and
jge,pn
repz
cmp
mov
lahf
in
test
fnsave
addr16
push
add
loop
mov
mov
das
push
push
cmc
out
or
daa
in
icebp
pop
scas
mov
push
xor
jne
pop
lcall
cmc
mov
daa
stos
pop
enter
mov
fidivrl
inc
stos
pop
into
inc
mov
lret
stc
out
cmp
adcl
dec
sbb
rolb
push
and
sarl
ffree
ret
enter
push
repnz
or
xchg
or
nop
adc
loop
pusha
inc
inc
sub
orb
jle
cwtl
push
in
insb
or
daa
sahf
mov
mov
adc
faddl
mov
sub
push
data16
sub
daa
out
repz
int
call
mov
movsb
inc
cmovb
sub
pop
mov
icebp
xchg
and
adc
xor
inc
iret
outsb
stos
loopne
gs
addl
ss
cmpsl
or
xlat
adc
mov
cmp
out
aad
adc
bound
xor
push
ljmp
mov
mov
cmc
stos
test
inc
lret
mov
in
es
pop
or
sbb
cmp
dec
inc
jb
and
mov
rorl
aam
or
fsubrl
mov
pop
mov
or
xchg
loope
in
stc
or
mov
push
out
cmpsb
into
dec
lods
sub
cs
lock
leave
roll
test
mov
int
sbb
cmp
mov
jns
xor
adcb
imul
xchg
mov
add
sahf
jge
cmp
stos
ficoml
push
ret
xchg
mov
xchg
insl
shl
pop
movsb
ffree
int
sbbl
jp
out
test
jno
mov
mov
cmp
test
push
out
lods
xor
lods
push
ljmp
push
sbb
mov
shrb
add
push
sahf
mov
pop
je
scas
jecxz
fsubl
jnp
mov
aad
pop
jl
mov
les
xlat
add
cs
mov
icebp
rol
movsl
scas
xor
and
push
inc
push
call
lods
and
mov
arpl
adcb
fstpt
es
ja
push
lea
xor
insl
les
xchg
mov
out
sub
lods
push
jno
xor
inc
lods
sbb
movsl
inc
icebp
xchg
sbbb
imul
inc
jno
lahf
lods
leave
rorb
mov
pop
call
adc
sbb
adc
ljmp
jecxz
ljmp
push
lret
outsl
out
loopne
mov
imul
cwtl
adc
or
mov
pop
mov
mov
psubd
pushf
xor
adc
jl
imull
adc
pop
fsubr
xchg
cmpsl
xchg
cmp
sub
repnz
pop
out
clc
rcll
and
lock
aaa
or
pushf
ret
mov
jne
inc
jecxz
loop
notb
adcb
push
sub
ss
mov
cld
mov
sbb
mov
pop
movsb
subb
addr16
add
inc
push
mov
int3
jns
mov
cmc
cltd
das
mov
aas
xchg
arpl
ret
mov
xchg
ds
into
ficoml
jg
imul
sahf
repz
jp
hlt
add
je
mov
lods
adc
popf
dec
push
int3
popa
sub
pop
jle
loop
shl
dec
push
fnstcw
in
shrb
mov
mov
pop
push
and
and
test
bound
cmp
sub
leave
add
dec
je
pop
inc
mov
repz
leave
adc
fmuls
adc
aaa
movsl
ret
dec
xor
pop
ret
sbb
and
mov
pop
mov
ret
mov
adc
mov
pop
cs
pop
push
jnp
mov
push
imul
jg
inc
popl
pop
iret
mov
xor
mov
inc
jae
and
mov
fcomps
in
call
mov
rcrl
popf
out
loop
mov
cmp
push
cs
mov
mov
fcmovnb
cld
and
and
inc
ret
hlt
loop
add
push
daa
cwtl
xchg
mov
scas
jns
and
sbb
dec
inc
rol
sbb
in
int
shrb
xchg
cmpsl
ljmp
and
lds
movsb
sub
cmpsb
dec
leave
cs
ja
push
push
fidivrl
add
and
add
xor
mov
scas
lret
mov
in
adc
scas
jp
cli
or
add
push
pusha
mov
xchg
and
gs
inc
or
movsb
std
stos
dec
inc
rorb
rcr
and
cmp
insl
lds
inc
pop
jb
out
mov
xor
adcb
sub
rcrl
nop
dec
jbe
ds
stos
inc
loope
int
inc
mov
int
inc
mov
adc
xchg
add
xor
jnp
mov
aam
cltd
push
imul
mov
and
jno
cmp
jg
jp
int
add
cltd
jl
xor
or
xchg
fnstsw
lcall
into
adc
ret
sbbl
pop
iret
sbb
repnz
loop
xchg
rcll
mov
pop
clc
test
out
mov
fwait
pop
pop
adc
data16
lret
dec
in
repnz
xchg
mov
rcll
xor
iret
into
jnp
in
sub
fs
xchg
lods
rcll
bound
clc
dec
inc
fisttpl
shlb
loopne
hlt
leave
cmp
cmpsb
sbbb
xchg
clc
push
out
push
jb
insb
int3
xchg
fs
rcll
xchg
push
popa
xor
stc
and
popf
jg
movsl
outsb
lds
add
fildll
mov
xchg
xchg
or
cmpsl
loopne
push
push
xor
stos
es
sbb
pop
and
ljmp
push
mov
or
xorb
ffreep
xchg
dec
jo
or
lea
inc
add
push
jno
mov
ret
xor
and
icebp
imulb
cld
negl
pop
mov
jnp
cmpsl
fcmovnbe
test
loope
out
bound
inc
jge
movsl
daa
lahf
cmp
cmpb
cli
test
test
sbb
lahf
cmp
pop
jbe
fwait
adc
sub
aad
fs
daa
sbb
push
repnz
lods
call
popa
int
sti
xor
and
repz
mov
shrb
mov
fnstcw
xchg
mov
cs
pop
lock
adc
leave
psubw
lahf
mul
shl
inc
or
pop
or
outsb
add
and
sub
jb
mov
pop
fistpl
mov
negl
aam
fadds
xor
jns
sbb
insb
sub
sub
push
out
xchg
add
shlb
xchg
stos
push
es
and
lret
faddl
enter
mov
imul
push
scas
addr16
and
mov
dec
mov
push
lods
fcom
addr16
call
inc
xchg
lcall
cmp
dec
fsubrs
insb
repz
int3
adc
out
insl
lods
xchg
jns
cltd
sub
push
push
pop
mov
or
fisttpll
insb
popa
push
and
loop
nop
pop
cmp
sahf
out
lods
mov
shrb
and
or
adc
data16
das
or
scas
movsl
inc
hlt
inc
xchg
mov
pop
shl
ss
mov
out
jb
scas
xor
inc
adc
loopne
pop
sar
mov
jecxz
push
daa
xchg
add
push
push
loopne
jae
jge
mov
int
movsb
outsl
mov
jb
mov
insl
xor
mov
inc
rorb
es
cmp
xor
ret
xor
push
mov
in
dec
shll
adc
je
arpl
xlat
sbb
insb
mov
in
cli
test
xor
insl
cmpsb
pop
mov
inc
movsb
xor
or
pop
icebp
iret
xor
out
sub
mov
or
cs
mov
jno
mov
xchg
xlat
pusha
sbb
dec
pop
xor
clc
inc
cmp
adc
sahf
mov
sti
lret
mov
cmp
sub
xor
stos
dec
mov
push
lcall
sbb
push
mov
dec
pop
fiadds
je
test
xor
xchg
data16
les
sbb
pop
xchg
lods
orl
mov
mov
pusha
cmpsb
lock
cli
jecxz
and
jmp
adc
fs
ja
je
dec
add
mov
js
or
sti
jp
adcl
jb
fldt
std
rcll
cmp
xchg
pop
les
out
or
sub
loop
and
jbe
scas
push
push
push
repnz
out
pop
jnp
in
and
loope
call
fiaddl
sbb
lods
sbb
and
jae
rcrb
push
imulb
mov
fs
sbb
xor
xor
sbb
jp
add
aam
fs
aad
in
adc
fmull
rcrl
mov
into
lods
mov
cmp
and
and
repnz
arpl
mov
mov
jae
rorl
dec
xor
aam
in
mov
pop
sbb
and
sbbl
sub
rcrl
xor
inc
jns
dec
pop
and
adc
push
lret
mov
int
push
jge
cmpl
cli
stos
into
movsb
mov
mov
js
mov
xchg
cmp
xorb
test
jg
sbb
mov
jns
lcall
daa
add
sbb
dec
and
shlb
mov
xchg
mul
repz
jge
adcb
movl
fdiv
and
push
mov
push
add
ret
jmp
jmp
shlb
jo
leave
mov
mov
out
imul
and
and
popa
in
or
ljmp
xor
into
jbe
mov
dec
out
repnz
cs
push
add
mov
mov
jb
sbb
mov
clc
sbb
lods
xchg
pop
es
inc
push
rcll
sbb
js
sub
sub
loop
jb
lods
add
adc
mov
pop
cmpsb
hlt
scas
filds
call
iret
push
aaa
push
clc
inc
out
pushf
pop
mov
lods
xlat
mov
xchg
and
push
jae
into
xorl
ret
pop
test
inc
cmp
jne
sbb
pop
pusha
xchg
cmp
imul
xor
xor
mov
adc
cli
jmp
test
outsl
dec
dec
ja
pop
mov
jnp
pop
sbb
fnstsw
inc
repz
rolb
repz
adc
outsl
dec
test
xchg
test
pushf
xchg
mov
sbb
xchg
sub
and
mov
fildll
inc
add
insl
popf
cmp
sub
sbb
add
mov
xchg
fwait
jge
js
out
push
and
push
arpl
shrd
jno
call
ss
mov
push
ret
cs
fcmovnu
mov
ja
out
data16
mov
lret
push
fbld
repz
sub
insb
dec
repz
clc
lret
sub
pop
sbb
aaa
pop
jecxz
enter
mov
xchg
mov
jmp
addr16
xchg
inc
movsl
das
out
aas
dec
adc
data16
inc
sti
sub
lods
loopne
cmc
insl
sub
jmp
xor
xor
ljmp
xor
cmpsb
lret
mov
inc
je
js
imulb
or
jb
xor
mov
mov
adc
add
mov
sbb
or
jl,pt
jle
cs
mov
pop
mov
jp
std
and
ss
fs
shll
jae
mov
rorl
test
hlt
arpl
jae
enter
and
divl
jb
xorl
lods
bound
sbb
pop
mov
jns
repz
pop
mov
pop
pop
xchg
mov
mov
lods
push
loop
lock
cli
xor
or
and
sbb
sbb
mov
push
roll
cmp
je
enter
lds
pushf
inc
and
mov
add
dec
inc
rcrl
fwait
xchg
sub
mov
or
mov
cmovno
push
lahf
lods
mov
sbb
and
into
cmp
inc
fsubl
jp
push
in
or
pop
fsubrl
fcomps
pop
aad
int3
and
addr16
out
fistpll
clc
ds
xchg
jg
cmp
ds
je
dec
icebp
add
rcrl
xchg
adc
pushf
scas
pop
push
pop
xchg
outsl
dec
scas
xlat
mov
cmpsb
ds
hlt
pop
popw
nop
or
pop
inc
or
sub
imul
bound
popa
jbe
mov
and
and
loop
arpl
adc
fwait
jns
xchg
ret
pushf
xor
stc
shrl
shlb
cmpsb
scas
adc
dec
cmp
adc
adc
xor
add
mov
lcall
mov
inc
fdivrs
gs
out
data16
push
dec
aaa
int
mov
and
lods
pop
roll
mov
jmp
and
xchg
adc
bnd
cmp
sarb
cli
dec
jb
int
sbb
mov
mov
pop
push
scas
shlb
bnd
in
mov
mov
cmp
xchg
rol
push
pop
add
cmpb
cwtl
aas
or
mov
ds
orb
mov
cld
aaa
leave
adc
cmp
jge
and
das
xchg
shll
xchg
pop
cmp
les
push
mov
hlt
xlat
xor
popa
test
fmuls
pop
and
call
push
hlt
ret
ds
sbb
pop
ja
repnz
sahf
jno
mov
adc
jbe
test
mov
cmp
daa
cmp
push
clc
cmp
mov
scas
rcrl
aaa
and
adc
push
pop
int
jle
loopne
xchg
mov
push
push
xchg
xor
xchg
shrb
int3
pop
into
mov
test
stos
es
adc
rclb
inc
pop
cltd
fdivl
popf
ret
or
sbb
mov
mov
jecxz
bound
ja
adc
cltd
add
sbb
popf
cli
jbe
jae
std
xor
andb
shrb
es
adc
jmp
inc
hlt
push
fmull
cmpsl
adc
jbe
mov
insl
adc
cmp
std
add
cmp
ljmp
scas
sbb
movsl
jmp
xchg
fcoml
sub
aas
mov
arpl
cmp
subl
pop
js
loope
push
or
fisttpll
sub
pop
lret
popa
rorl
sbb
pop
jbe
bound
or
inc
bound
ja
sbb
adc
aad
fbstp
movsl
cmp
or
hlt
cltd
outsl
pusha
mov
pusha
outsl
ja
lods
leave
rdtsc
ljmp
bound
ret
push
pop
sbb
shll
cmp
xor
scas
mov
hlt
pusha
shll
jp
ficoml
andb
cs
and
gs
xchg
sbb
mov
cmpsb
ds
push
enter
outsl
adc
lret
pop
cmc
jl
push
xlat
sarb
push
fildl
mov
inc
and
jb
sub
adc
inc
or
mov
jno
ss
bound
inc
movb
and
pop
pop
fld
idiv
pusha
cli
test
mov
lds
cmpsl
push
mov
xlat
clc
xchg
pop
addl
sub
and
jl
xchg
mov
loop
inc
push
lds
xchg
shll
mov
aaa
pmulhw
repz
jne
fisubl
jecxz
mov
xchg
je
mov
add
pop
pop
lock
out
adc
add
mov
int
dec
stc
std
xchg
and
push
add
loope
mov
mov
mov
xchg
cmp
push
push
push
popa
mov
cmc
lahf
sub
arpl
jns
mov
out
rclb
pop
arpl
add
mov
push
push
fs
xor
std
jne
ret
jl
rcrl
xor
xor
incb
loop
or
fnstenv
test
in
gs
and
xlat
xchg
test
sbb
push
jecxz
mov
repz
loope
inc
and
scas
fcomip
jno
mov
cwtl
add
arpl
test
pushf
out
dec
cmc
mov
adc
subb
mov
pop
pop
dec
shlb
mov
mov
inc
mov
aad
cs
dec
in
into
and
daa
subl
push
fwait
adc
bound
loope
sbb
pop
push
frstor
jae
sub
pop
or
call
cwtl
stc
int
push
cli
push
mov
idivb
jmp
mov
aaa
jle
xchg
cmpsb
xor
mov
xor
fs
mov
stos
jg
sti
sbb
movsb
push
jne
inc
push
add
push
pop
sarb
popa
xor
pop
mov
fidivl
cs
je
jl
push
inc
push
mov
lods
and
and
insl
pop
aaa
dec
adc
sbb
lods
fstpl
pop
dec
iret
sub
jle
lods
clc
aaa
int3
cmp
xchg
jbe
mov
fs
popa
pop
sbb
xchg
or
sbb
loope
xchg
xchg
jno
mov
or
and
cld
sti
push
jnp
repnz
ret
xchg
jl
pushl
cs
leave
subl
nop
in
pushf
sbb
jge
lret
xchg
pop
or
pop
jge
loope
mov
in
rcr
adc
mov
jmp
mov
in
jns
mov
xchg
je
addb
xchg
cmp
fstpt
mov
pop
fs
mov
sahf
cwtl
push
mov
jb
xorl
cmp
lret
push
mov
xor
cmpsl
insb
dec
xchg
lea
mov
or
repnz
roll
jmp
cltd
lret
shrd
mov
lret
push
cmp
add
loop
mov
enter
pop
fcmove
sub
enter
shll
mov
mov
in
call
std
jns
sub
dec
imul
jecxz
rcl
mov
mov
popl
jge
add
stos
stc
pop
jns
or
mov
ss
into
outsl
xor
xor
or
fsts
arpl
out
aam
sbb
dec
lock
xchg
clc
jns
add
pop
pop
sbb
xchg
test
imul
fucom
xchg
rol
test
mov
je
negl
cmp
andl
inc
das
mov
int
gs
jmp
mov
and
sub
sub
xchg
aaa
test
call
push
outsl
mov
dec
rol
and
pop
pop
adc
xchg
leave
xor
mov
out
cltd
es
adc
outsl
into
stos
and
lcall
pusha
push
in
fnstcw
sub
inc
xor
es
xlat
add
shrl
pop
jge
sub
fwait
push
imul
or
icebp
pop
push
jo
js
sub
icebp
pusha
xchg
xchg
sti
adc
gs
jp
je
incl
gs
cmp
push
aaa
sbb
xchg
mov
mov
in
imul
pop
fistpl
xchg
icebp
push
rcrl
loope
pop
inc
loope
inc
adcl
lock
xchg
sbb
test
mov
mov
inc
or
xchg
dec
shll
and
adc
push
imul
out
push
cltd
repz
push
in
cld
out
jo
xchg
sub
xlat
xor
mov
out
nop
xor
mov
int3
in
arpl
mov
pop
insb
lret
mov
rcrb
inc
mov
adc
mov
outsb
ficomps
idivl
outsl
repz
stos
lock
jecxz
in
ljmp
les
into
mov
adc
jno
xor
fdivr
jg
and
call
es
icebp
xor
jge
mov
js
adc
gs
clc
clc
or
jg
xlat
popf
js
xchg
adc
shll
pushf
outsl
ljmp
outsb
outsl
jmp
repnz
fwait
les
insl
jo
fcmove
out
mov
cmp
icebp
dec
xor
and
xchg
xchg
les
imul
stos
pop
xchg
sbb
loop
push
jnp
add
mov
inc
dec
dec
cmp
push
lcall
fsubrs
push
ds
shrl
in
lret
imul
add
cmp
and
in
arpl
lods
mov
aas
push
add
jo,pt
shrb
es
inc
lret
cmpsl
push
int3
adc
rclb
mov
mov
sbb
hlt
aaa
test
ret
es
aad
flds
outsl
fidivs
repnz
and
fwait
or
mov
sbbl
lock
inc
movsb
push
push
cmp
inc
jae
pop
xor
jbe
xor
std
call
nop
add
pop
jle
add
sub
cmp
inc
push
inc
sub
sarl
or
push
or
and
mov
popa
ja
dec
out
cmpsl
dec
repz
or
imul
and
add
xlat
and
jmp
add
jnp
dec
add
les
jnp
jmp
jl
cltd
dec
les
mov
mov
js
adc
insl
add
sti
and
lret
imul
and
es
roll
xchg
and
dec
adcl
es
daa
push
xchg
aam
and
nop
mov
adc
push
mov
fcomip
cmpl
cltd
cmpsb
push
xchg
mov
add
jmp
imul
test
andb
mov
arpl
cmp
lret
pop
push
sub
in
out
lret
xor
push
in
push
add
mov
out
xchg
jecxz
movsl
stos
test
pop
add
mov
outsl
in
lret
sub
jnp
add
mov
mov
fs
mov
or
inc
xorb
mov
push
aaa
cltd
jge
rcll
and
mov
mov
jne
adc
shll
mov
pop
or
sub
mov
or
pop
sbb
cmp
addl
popa
dec
aam
mov
pop
jne
push
mov
jmp
mov
xor
jge
mov
push
or
mov
fdivrl
daa
xchg
sti
jge
dec
popa
ss
fldcw
stc
push
enter
inc
jo
out
pop
iret
hlt
jne
cmpsl
mov
in
in
pop
pop
xorl
mov
jne
das
inc
aad
popf
pop
fdiv
popa
es
xor
mov
pop
adc
sti
icebp
mov
mov
add
adc
mov
push
jne
aam
mov
fnsave
mov
cmp
insl
int3
idivl
mov
stos
push
out
cwtl
jl
xchg
out
mulb
or
addl
mov
fiaddl
cmp
sub
insl
jno
lds
cmp
outsl
add
push
inc
js
jnp
and
mov
push
dec
cld
jp
mov
mov
mov
xor
stos
pop
in
pop
mov
add
hlt
movsb
or
inc
je
aaa
mov
dec
stos
inc
scas
xchg
movsb
push
testb
adc
sub
or
inc
mov
cltd
cltd
rol
sar
inc
mov
add
mov
pop
cmp
roll
int
dec
adc
pop
or
nop
cld
data16
and
lcall
sub
push
sub
andb
jo
sub
xor
cmp
pop
fldt
push
pop
mov
pop
ljmp
arpl
ss
mov
daa
pop
adc
pusha
sbb
enter
dec
push
fwait
aaa
and
scas
in
sub
mov
es
push
add
mov
aas
dec
aas
nop
mov
les
or
outsl
pop
mov
jle
mov
jae
loopne
pop
mov
mov
dec
add
out
pop
dec
les
addr16
jge
pop
out
jo
pop
pop
sahf
popf
clc
inc
xchg
stos
and
push
adc
popf
xlat
rorb
jle
pop
and
lcall
das
inc
mov
inc
les
inc
dec
es
jg
xchg
aaa
xchg
enter
push
das
test
jp
stos
in
push
mov
pop
xor
jle
inc
outsl
pop
xchg
daa
mov
out
in
jne
ret
xchg
stc
out
sub
xor
ja
pop
add
cmp
pop
dec
dec
and
divb
ret
sub
xchg
cli
mov
adcb
insl
or
orb
or
cltd
in
inc
into
mov
bound
adc
test
repz
in
lods
mov
and
jae
fcmovu
insb
mov
or
xor
imul
xchg
shl
xchg
mov
pop
adc
test
test
xchg
mov
inc
ljmp
jbe
xchg
xchg
data16
mov
sub
jnp
imul
nop
mov
push
inc
sbb
or
pushf
daa
lods
loopne
pop
adc
inc
enter
leave
and
movsb
xor
outsb
inc
and
sub
cmp
ljmp
cmp
inc
mov
test
insb
xor
pop
dec
ret
sub
clc
jl
aam
ret
push
das
insl
jo
pushf
incl
in
lcall
xor
movsb
insb
and
mov
mov
xchg
jp
mov
testb
adc
dec
mov
orb
das
int
call
xchg
repnz
inc
repz
add
jecxz
das
sub
mov
cmp
xchg
push
or
mov
xor
mov
in
adc
dec
inc
add
sub
ds
fimuls
pop
ficoml
jae
mov
daa
repnz
leave
int3
dec
stos
loop
out
stc
cmp
sahf
out
inc
dec
sub
fstp
pop
stos
jo
xchg
popf
pop
ja
mov
int3
testl
xchg
and
lock
mov
mov
cltd
mov
loopne
outsl
dec
subl
adc
mov
jae
cmp
mov
iret
jns
call
adc
hlt
aas
sub
dec
out
fsts
loope
arpl
sub
mulb
sbb
fcmovne
call
jmp
das
inc
ret
inc
xor
lds
addr16
imul
mov
outsl
enter
push
in
pushf
lcall
cld
arpl
inc
dec
mov
xchg
and
loop
jae
pushf
into
adc
ss
pop
sub
xchg
add
xchg
cli
popa
adc
test
xchg
lods
jl
and
jb
cmpsl
or
das
mov
sub
enter
popf
sbb
add
loope
fnstcw
ds
push
push
mov
jp
inc
dec
mov
outsl
adc
and
incl
sti
xchg
out
call
loope
sbb
pop
in
rorl
je
fists
es
enter
cs
mov
ficomps
test
jmp
cltd
inc
cmpsb
int3
clc
mov
ljmp
mov
xchg
je
and
call
mov
push
xchg
shll
xchg
xchg
out
cs
xchg
inc
mov
jecxz
adc
and
adc
popf
hlt
fbld
xchg
cmp
cmp
lcall
sub
cmp
dec
jmp
xchg
fmulp
lea
lcall
jle
lcall
sbb
fsubrl
frstor
cltd
mov
xchg
and
jp
in
dec
push
ret
outsb
jns
lods
adc
mov
jg
mov
loope
push
mull
sub
push
xchg
jecxz
rcrb
mov
jae
out
adc
mov
and
cs
leave
daa
pop
adc
stc
or
mov
pop
add
je
roll
adc
dec
inc
das
and
cwtl
into
mov
mov
sub
and
cltd
cltd
mov
aaa
sub
mov
test
mov
fdivl
mov
mov
sbb
pushf
mov
jb
loop
std
and
popa
aam
inc
sub
cmp
add
popa
out
dec
xchg
dec
cld
push
jp
mov
insb
mov
cmp
mov
cltd
hlt
pop
inc
dec
push
daa
insl
int3
ss
lret
test
pop
jecxz
jge
sbb
imul
pause
inc
in
add
aas
pop
lret
cmc
sar
cmp
mov
mov
pop
je
jne
lret
lret
pop
call
ret
in
fsubrs
mov
sbb
xor
push
push
les
sbb
pop
mov
and
dec
fucom
sbb
cli
scas
call
test
push
iret
cld
xchg
dec
dec
or
inc
ret
and
mov
sub
rcl
and
mov
lods
ds
push
leave
jp
mov
xor
ret
dec
adc
push
push
push
push
in
xorb
push
push
mov
movsl
out
pop
inc
pop
mov
xor
shlb
imul
sbb
push
or
mov
pop
orb
data16
jg
into
aam
aam
adc
imull
sbb
rcrb
pushf
add
and
mov
push
or
mov
into
pusha
pusha
addb
push
mov
mov
test
adc
arpl
cmpsl
mov
js
into
ror
repnz
mov
sub
mov
insb
andb
mov
xor
mov
cmp
mov
cli
arpl
add
rcrl
adc
test
aam
mov
lea
andl
hlt
mov
push
xor
add
stc
es
scas
and
arpl
xor
or
mov
push
add
aam
mov
das
shr
mov
pop
or
sti
push
cwtl
outsb
lock
pop
out
mov
dec
in
fmuls
cs
cmp
sub
and
hlt
push
jno
xchg
jns
add
add
int
loop
xchg
xchg
mov
leave
inc
push
outsb
push
push
mov
lret
rcr
pop
pop
adc
icebp
sub
mov
fcomps
cmc
xchg
leave
sbb
pop
cmp
je
adc
dec
push
idivb
mov
fldl2t
mov
inc
dec
xor
push
jmp
mov
jg
fnstenv
jo
jg
push
xor
inc
jmp
mov
lods
pop
mov
pop
and
sub
cmp
stos
stc
jl
jmp
filds
xchg
push
inc
cli
fisttps
out
jae
pop
bound
dec
xchg
popa
push
inc
test
push
sub
repnz
idivl
xchg
mov
or
sub
dec
shll
mov
insb
pop
pop
lret
xor
inc
xchg
mov
push
cmpsb
test
popf
inc
adc
xor
lret
insb
das
xchg
aas
into
pop
xor
mov
mov
mov
mov
add
cmpsb
jp
xchg
sbb
imull
add
and
dec
in
jo
pop
andl
cmp
aad
mov
stos
pop
loopne
adc
push
js
es
je
jge
push
fsts
ljmp
call
mov
inc
ror
inc
pushf
mov
xchg
clc
mov
addr16
daa
out
mov
jg
nop
into
push
dec
jp
jmp
daa
rclb
dec
mov
out
mov
leave
cmpsb
into
fwait
inc
jmp
inc
inc
sbbl
mov
and
fwait
mov
movsl
dec
scas
or
mov
fs
sbb
pusha
mov
mov
bound
xchg
jle
ret
add
scas
mov
push
lods
mov
subl
cmpsl
mov
scas
std
bound
cmp
scas
sub
or
lret
ret
pop
loopne
loop
pushl
mov
xchg
lock
xchg
mov
cmpsl
and
test
sub
xor
fs
fwait
inc
movl
push
sub
shrl
xchg
pop
sub
mov
inc
dec
aaa
movsl
and
xchg
sbb
jp
mov
in
sub
mov
xchg
sub
mov
cld
test
push
pop
push
movsb
lret
xor
mov
fsubrs
cli
mov
call
dec
dec
fdivrs
loopne
push
aas
outsb
loope
je
mov
mov
mov
sbb
cmp
cmp
sub
jp
outsl
ds
orl
les
cmp
sbb
push
ret
lret
mov
sbb
imul
test
pop
aad
negl
in
arpl
fisubs
cmp
lret
mov
into
data16
mov
lret
cwtl
test
pop
sar
fistpl
xor
mov
cmp
cmpsl
or
movsl
mov
mov
idivb
sarb
std
ds
cmp
pop
shl
mov
loope
out
adc
xor
inc
in
sti
mov
inc
xor
mov
ja
jne
leave
notl
cmp
mov
inc
out
imul
adc
lahf
jle
nop
sub
fdivrp
cld
in
add
das
mov
xchg
sbb
or
je
shlb
je
popa
lret
cmpsb
add
test
iret
jecxz
jge
sub
xchg
mov
mov
inc
cltd
in
xchg
imul
lea
or
sbb
les
sub
lcall
mov
movsb
popa
mov
pop
enter
mov
inc
or
call
inc
ret
xor
pop
popf
or
test
mov
add
adc
xchg
xor
mov
popa
jecxz
mov
sbb
jno
and
sub
mov
aaa
xor
adc
int
shr
fsubs
daa
mov
arpl
rol
rolb
subb
bound
xchg
adc
pop
push
inc
cmc
testb
sub
dec
ja
stc
outsl
test
aad
jae
dec
adc
fwait
mov
pop
imul
movsl
into
add
inc
or
enter
test
mov
push
jb
jl
mov
sbb
sbb
stos
daa
push
sbb
clc
or
lock
add
cmp
mov
sub
push
jo
cwtl
add
or
pop
cld
fisttps
lock
pop
sub
loop
cltd
cltd
mov
ss
sub
out
jno
mov
ror
test
fsubs
popf
push
jmp
add
pushf
jnp
lahf
les
xchg
sti
lea
out
pop
dec
es
jbe
lds
lods
pop
inc
and
pusha
and
mov
jbe
test
loop
lods
jno
add
cmp
scas
mov
cmpsl
push
dec
pop
sbb
shrb
les
jb
lret
imul
adc
jnp
adc
cmp
cmp
adc
mov
jo
sub
cli
pushf
xor
inc
mov
repnz
jmp
testl
in
sbb
mov
dec
adc
mov
psubq
dec
fxch
and
ss
inc
fcoms
in
notb
fmuls
and
fstpt
add
movsb
sub
push
xor
cmpsb
or
and
and
mov
push
push
ret
mov
aaa
ret
jmp
jmp
mov
call
sub
in
jae
rcl
and
stc
pop
sti
cmc
lahf
xor
and
adc
mov
aad
nop
arpl
cmpl
sbb
stc
push
dec
repnz
lret
mov
cmp
and
fsubr
mov
sub
mov
les
dec
out
pop
out
or
lret
mov
into
inc
fldenv
jns
jmp
les
adc
out
testb
adc
insl
dec
mov
cmpsl
cmpb
stc
xor
cmpsl
cmp
scas
xor
add
jns
stos
pop
jl
mov
jg
xchg
push
mov
sbb
stos
gs
mov
adc
jne
mov
mov
popf
jns
push
xchg
pop
inc
cmc
jl
mov
sbb
ret
cwtl
shll
stos
push
mov
lods
rolb
sbb
stos
mov
push
ret
lea
fmuls
mov
mov
addl
out
repz
and
dec
enter
addr16
push
adc
jmp
rolb
lods
stos
push
add
mov
pop
xchg
je
mov
dec
stos
mov
hlt
std
adc
cmc
cmp
data16
aaa
cmpsl
mov
dec
sub
int
or
repnz
xor
daa
decb
add
xchg
jl
out
imul
popf
shrb
je
loope
dec
jae
aam
bound
add
dec
call
adc
push
outsb
push
mov
or
mov
je
int3
dec
push
mov
sub
cwtl
lods
cmp
cmpsl
sub
and
hlt
push
mov
sub
mov
aas
and
inc
pop
push
jnp
jo
inc
ret
jae
fsubrl
js
out
clc
sbb
and
sbb
jnp
mov
jo
inc
jb
enter
and
lock
stc
and
cwtl
fnstsw
sub
lock
pop
and
dec
push
ljmp
jno
lock
inc
or
fld
pop
stos
mov
mov
das
inc
or
ds
ficompl
nop
outsb
faddp
test
ljmp
gs
cmpsl
jnp
xbegin
imul
xor
mov
lahf
sbb
subb
jmp
negl
lods
push
mov
xlat
mov
nop
and
push
push
jp
lock
inc
inc
jnp
imul
cmpb
xchg
mov
jp
sub
sbb
pop
das
cmpsb
fcomp
or
call
mov
icebp
and
aas
sbb
mov
test
push
pop
cs
dec
ljmp
cmpsb
sti
mov
das
jbe
mov
mov
imul
cmp
ret
push
lcall
arpl
in
clc
pop
or
fwait
mov
mov
pop
xor
out
int
lcall
inc
xchg
mov
aam
jbe
shll
std
aad
xchg
lahf
xor
ja
and
dec
cmp
lea
push
leave
hlt
push
mov
movsb
cmp
inc
jno
sbb
mov
sti
push
mov
sti
mov
dec
repnz
xor
sbb
pop
stc
lret
cltd
pop
pop
mov
cmp
push
pop
pop
push
jnp
dec
movsb
push
leave
xor
jp
adc
int
sbb
sub
lcall
jge
leave
fbld
fld
fldenv
adc
pop
imul
mov
lahf
jb
xor
mov
adc
imul
sbb
push
cmp
lea
inc
addr16
mov
inc
jg
mov
scas
repz
scas
push
fwait
enter
xor
push
jmp
pop
decb
adc
mov
in
es
adc
add
test
aaa
adcb
inc
xor
mov
lret
mov
mov
popa
insl
shrb
je
loop
out
enter
push
xor
inc
xlat
cmp
cmp
lods
xlat
xchg
ljmp
cmp
nop
inc
movsb
iret
shll
adc
movsl
adcb
stos
dec
mov
adc
popa
ss
cmp
adc
push
in
pop
in
mov
adc
pop
out
inc
push
sub
mov
mov
adc
mov
and
add
jnp
sarl
into
outsl
out
loopne
dec
dec
sar
lahf
and
and
jb
clc
je
in
dec
xchg
fwait
rolb
mov
adc
movsb
test
jne
sub
push
js
outsb
push
mov
xchg
sbb
aad
pop
js
jae
adc
or
fcomp
xorl
in
cld
leave
push
mov
or
les
adc
clc
clc
fs
mov
jns
xor
cltd
push
gs
loope
adc
pop
sbb
jbe
jo
cmp
out
std
pushf
push
loop
lock
mov
mov
mov
repz
mov
mov
fistl
sub
mov
sahf
mov
loopne
jmp
sub
jne
push
cmp
scas
sub
fwait
lods
xchg
daa
nop
and
ja
insb
or
cli
push
mov
repnz
lods
or
in
test
movsl
xlat
hlt
daa
pop
push
arpl
pop
fstpl
lods
or
cmpsb
icebp
sub
xor
jnp
cmp
xchg
stc
jo
movsb
push
cmp
and
cmp
cmpsb
xchg
xlat
in
xchg
pop
scas
cmpl
aaa
inc
ss
add
frstor
enter
or
push
push
pushf
xor
clc
dec
stos
mov
sub
sbb
addr16
mov
inc
fstl
incl
inc
mov
mov
out
dec
pop
repnz
lock
xchg
fisttpll
push
adc
divl
pop
fmul
gs
inc
repz
xor
jmp
or
jmp
sbb
jb
into
inc
dec
mov
std
mov
in
pop
push
loop
scas
cltd
mov
insb
cwtl
lock
mov
rcll
xchg
js
xchg
addb
dec
dec
dec
stc
popf
pusha
sti
aam
lret
push
shlb
sbb
pop
or
rclb
hlt
lahf
ds
sbb
sbb
sarl
mov
xor
dec
sub
pop
pushf
scas
and
xor
xchg
xor
mov
sub
rorb
cli
cli
push
notl
ret
adc
test
jge
fcmovnb
pusha
rolb
in
cmpsl
rolb
and
push
fs
jle
dec
or
jg
mov
sbb
out
std
stc
shl
shll
aaa
testb
sahf
pop
into
jl
popa
rclb
int3
imul
rorl
nop
fwait
xchg
xor
loope
mov
out
jle
dec
pop
lret
xchg
xchg
cmp
divb
popa
loop
jmp
jo
mov
adc
mov
mov
es
int
and
jge
mov
bound
and
test
fstpl
sub
jge
out
pop
push
mov
inc
inc
mov
xchg
push
lea
fnstenv
xchg
adc
shlb
add
or
dec
arpl
enter
inc
dec
cmp
aam
das
ret
inc
out
xchg
ja
clc
sbb
sbb
fsubrs
xchg
xor
or
imulb
imul
mov
add
mov
mov
jno
jp
add
cmp
rcrl
push
pusha
fbstp
jge
int3
sbbl
or
pop
jle
and
enter
ljmp
jle
jmp
xchg
fistpll
test
sbb
jg
push
insl
add
adc
mov
std
jo
mov
pop
jge
addl
mov
lahf
out
outsl
jns
pop
and
adc
mov
loop
cmc
and
push
push
xchg
mov
in
mov
xchg
ja
inc
dec
mov
mov
fstps
push
sub
ss
pop
pop
shll
andl
mov
or
jnp
xor
icebp
aaa
aam
fs
jle
mov
pop
inc
cmp
mov
repnz
je
sub
test
aad
out
xor
je
sub
iret
add
incb
imul
xchg
sti
in
xchg
cmp
dec
or
push
outsl
int
mov
shrb
cld
les
xor
push
cld
fwait
mov
movsl
pop
repnz
movsb
stos
adcl
int3
stos
stos
inc
mov
nop
adc
loope
mov
ja
je
lods
cmp
loop
int
idivl
push
jecxz
inc
mov
mov
mov
push
aaa
std
sbb
das
lods
jg
mov
shrb
dec
and
cmp
push
xor
inc
pop
xchg
mov
aas
xorl
in
pop
bound
jle
sbb
mov
loope
sub
test
add
fildll
jne
mov
push
lea
fs
cmpsb
mov
lds
scas
push
sbb
cmc
push
or
mov
lea
mov
pop
xchg
mov
push
cmp
cmp
sub
jae
xorl
pop
pop
push
inc
or
adc
jmp
lock
jle
int3
xchg
xchg
jle
repnz
xchg
jecxz
cmpsl
rclb
cmpsb
jge
ss
ss
inc
cs
test
clc
xchg
icebp
jecxz
outsb
add
push
sub
popa
pop
jmp
push
sbb
sub
out
sub
jp
xchg
or
xor
jmp
push
data16
out
jmp
inc
scas
mov
aas
push
ffree
jne
mov
push
add
jge
rorb
jne
mov
nop
ret
mov
mov
addr16
jo
shrb
xor
shll
ljmp
leave
mov
test
add
inc
leave
imul
or
jnp
outsl
mov
and
addb
mov
dec
adc
cmpsb
lea
int3
cmp
test
adc
es
mov
icebp
insb
aaa
mov
fs
adc
ret
ret
sbb
ficoms
repz
xor
xor
mov
push
adc
mov
je
nop
pop
inc
imul
xor
mov
shlb
ljmp
xchg
mov
clc
daa
sti
sbb
fidivl
dec
mov
mov
ss
mov
addr16
mov
test
push
xchg
pop
add
lea
push
cmp
mov
inc
push
push
fisttpl
add
xchg
in
add
and
jns
sub
loope
pushf
mov
cmp
dec
pop
loopne
pushf
and
ja
int3
mull
push
push
icebp
repnz
fsubrs
or
pusha
stc
mull
ljmp
jp
jo
mov
cmp
xchg
rclb
xor
frndint
jle
outsb
inc
movsb
xor
dec
cmpsb
add
int3
clc
loop
sbb
xchg
mov
jecxz
outsl
fstpt
mov
jmp
in
addl
lods
mov
or
pop
outsb
jno
fistl
insl
popa
xchg
mov
pop
dec
gs
into
mov
add
sbb
mov
bound
adc
test
push
dec
dec
and
mov
dec
push
jbe
shrb
jnp
inc
dec
and
ss
ret
popa
filds
jae
aas
lds
jg
pop
popf
sub
and
es
fs
xchg
jnp
xor
mov
cmp
sbb
rcr
rorl
sbb
xchg
dec
lock
rolb
imul
ss
shll
lret
dec
pop
je
or
outsl
add
mov
fbld
repnz
dec
in
fsubs
in
adc
stc
pushf
cmc
in
sarl
cmpl
and
cli
sub
dec
mov
jne
push
mov
lods
pop
gs
or
lcall
ljmp
xor
hlt
imul
inc
or
nop
jmp
or
lods
fistl
aaa
fsubl
cmpsl
icebp
shlb
popa
mov
jge
add
xchg
pop
xchg
sub
jo
in
push
dec
push
dec
and
test
cli
push
push
xor
insl
or
pop
cmpb
push
loop
icebp
mov
add
dec
mov
fsubp
std
dec
pop
jl
xchg
xchg
je
xor
nop
out
ret
stos
addr16
sub
inc
ret
wbinvd
ret
dec
out
xor
mov
pop
mov
sbb
mov
test
inc
aam
fbld
xor
sti
and
fldcw
lock
mov
cltd
jg
jno
adc
dec
rcll
hlt
or
push
mov
mov
xor
add
sarb
inc
fdivr
dec
mov
jmp
mov
jb
cmc
adc
push
std
lds
sbb
cmpsl
scas
scas
and
roll
xchg
and
nop
lret
data16
outsl
push
sub
jecxz
mov
pop
mov
ss
add
jle
aas
loop
mov
inc
dec
xor
orb
pop
pop
ficoml
pop
mov
je
jbe
mov
fdivl
push
daa
movsl
sahf
popa
sahf
ja
adc
scas
mov
bound
loopne
sti
sub
fs
inc
mov
cwtl
stc
xchg
into
idiv
daa
sub
push
jbe
pop
push
mov
mov
sub
inc
notl
sbb
hlt
int3
outsb
pusha
fwait
pop
mov
imul
or
in
dec
fldcw
cmpsl
mov
mov
pop
push
jecxz
mov
pushf
aas
and
pop
pop
xor
out
cmpsb
sbb
mov
mov
pop
or
pop
cmp
ret
or
out
mov
mov
addr16
jmp
cmp
mov
mov
lods
jge
cmp
push
adc
in
roll
jo
mov
sti
jge
push
cmp
and
dec
shld
scas
enter
mov
push
adc
repz
arpl
lcall
mov
call
cmpsl
sti
jg
ret
add
clc
add
xchg
dec
outsl
mov
inc
jle
xor
dec
fsub
add
outsl
inc
cs
cltd
pop
or
push
mov
or
notl
or
rolb
mov
mov
dec
and
dec
in
test
pop
lcall
cmp
in
pushf
test
adc
std
jne
mov
or
push
cmpsb
outsl
mov
int3
std
xchg
lret
or
subb
jecxz
fs
or
repz
jge
add
jnp
push
sub
imul
jb
roll
push
mov
arpl
push
sub
xchg
inc
test
aas
push
jbe
push
lcall
jle
cltd
aas
or
inc
in
mov
jb
xor
xchg
sbb
sub
pop
and
gs
test
push
add
jp
aaa
scas
xor
xchg
insl
popa
mov
insb
cwtl
push
hlt
and
mov
inc
shll
aad
mov
jl
std
ret
sarb
adc
fldl
mov
and
loop
and
out
addr16
lds
daa
cs
xchg
and
push
jp
push
and
sbb
add
lds
jge
mov
andl
sbb
lock
pop
int3
loopne
enter
sub
or
addl
xchg
jns
cmp
scas
mov
pop
push
jmp
xchg
fisubrs
idiv
fnstenv
lea
inc
ficoml
outsl
mov
push
mov
movsl
mov
iret
pop
dec
pushf
nop
push
fs
jecxz
fists
inc
aas
mov
push
lret
sbb
fsubrp
mov
lahf
push
cld
mov
dec
sub
jno
mov
cmc
mov
adc
mov
nop
cmp
sbb
push
repnz
jne
mov
sti
scas
out
or
ret
dec
repz
sti
shlb
adc
es
inc
mov
or
cmp
lds
adc
push
push
loop
sub
cwtl
jb
jne
fs
lock
mov
inc
rcrb
jae
andb
sbb
fidivs
inc
cmp
inc
and
add
xchg
fadds
pop
mov
repnz
mov
testl
fdivs
call
mov
sti
add
imul
cli
cmc
inc
mov
test
xchg
bt
pop
add
mov
sub
stc
inc
sub
and
push
ret
jecxz
flds
add
and
daa
pop
test
adc
dec
inc
sti
push
faddl
or
adc
lcall
insb
cmp
popf
sbb
mov
int
insb
out
mov
dec
into
repnz
xchg
push
and
or
out
inc
cwtl
pop
lret
std
in
xchg
arpl
sub
out
test
dec
sbb
dec
mov
rorl
cmpsb
cmp
stos
fcompl
mov
inc
xchg
gs
and
es
loope
addr16
xor
and
loopne
cmp
das
mov
cld
mov
mov
jae
ja
fsubs
leave
aaa
test
cmp
and
dec
jne
xchg
fmuls
lods
mov
inc
mov
and
lock
dec
fdivr
jns
xor
and
adc
add
mov
and
xlat
or
and
mov
mov
add
mov
adc
sbb
xor
and
mov
xor
xchg
sbb
ficoms
pop
pop
into
inc
pop
fidivl
inc
jnp
es
ret
add
sbb
test
cli
adc
mov
lret
test
adc
adc
paddd
adc
pop
xor
lret
cmc
fdivr
sub
enter
sub
dec
add
adc
les
xchg
mov
fdivrs
test
loope
mov
ret
jle
mov
and
lret
adc
push
jnp
test
pop
cmp
sbb
je
jg
cmp
mov
stos
ffreep
loope
js
aas
popf
icebp
repnz
jae
and
inc
ret
loop
cmc
ret
fwait
std
and
bound
dec
adc
ljmp
mov
fadds
push
fsub
pop
and
mov
aas
jo
inc
xchg
xchg
mov
push
lret
cwtl
scas
rcl
dec
pop
lret
jb
je
mov
sub
jge
fisubl
lahf
shll
push
inc
sbb
or
mov
xor
sbb
or
mov
pop
shrb
adc
sahf
jo
mov
or
mov
mov
push
inc
mov
and
cltd
sub
inc
stos
xchg
loope
adc
inc
push
sbb
ljmp
add
push
lds
loop
mov
push
shll
add
pop
out
xchg
arpl
inc
xor
cs
dec
jbe
adc
sub
rol
in
add
cmp
aam
aad
int3
in
mov
iret
clc
jns
pop
test
and
rolb
aaa
cmpl
sbb
loop
les
sub
into
sbb
xor
add
sub
push
fnsave
pushf
outsl
push
hlt
movsb
adc
and
shlb
sbb
xchg
xchg
and
add
push
pop
sbb
fldt
popf
sbb
data16
pause
mov
sub
sub
inc
imull
stos
mov
dec
jl
cmp
pop
adc
xchg
pop
mov
and
ljmp
mov
icebp
jb
fmuls
inc
mov
mov
test
lock
mov
mov
test
test
shll
cmp
mov
mov
and
popa
in
mov
sbb
xor
fisttpl
popf
xchg
jae
test
sub
das
in
dec
je
fmul
mov
sbbb
mov
jo
cmpsl
push
adc
lods
leave
mov
pop
cmp
cmp
jge
lret
ret
int3
fidivrs
xor
mov
std
push
sbb
jno
fld
dec
or
es
dec
fptan
or
mov
fstps
cmc
mov
adc
add
arpl
cwtl
and
dec
adc
das
xchg
or
imul
cs
push
jno
js
dec
or
inc
fiaddl
xor
mov
push
bound
xor
loopne
cmp
je
xchg
les
cmp
mov
ljmp
mov
dec
mov
dec
sub
pop
mov
push
push
xor
and
test
xchg
inc
test
xchg
fisttpll
sbb
fistpl
cld
jae
cld
insb
push
mov
nop
pop
inc
mov
push
fbld
and
jp
xor
mov
movsl
test
out
cmp
sub
dec
loop
or
fidivs
cmp
movl
mov
cmc
les
call
lea
frstor
sbb
fildl
or
or
add
fisubs
sbb
adc
ret
ret
aam
sub
dec
xchg
out
cmp
mov
out
push
outsl
testl
mov
pop
enter
or
sbb
gs
lock
mov
enter
out
push
xchg
lea
adc
ja
dec
mov
loop
adc
shll
sbb
cmp
jno
ret
mov
movsb
js
out
jae
jnp
mov
push
mov
inc
mov
dec
jo
mov
ret
sbb
enter
fucomp
es
rcll
add
push
add
pop
mov
in
push
dec
xor
pushf
mov
sub
cwtl
fnsave
push
fcomp
into
jb
mov
xchg
test
sbb
xchg
fbld
dec
in
iret
aaa
cwtl
outsl
inc
je
sbb
jg
push
mov
and
je
jp
inc
add
fldt
push
popa
adc
pop
incb
pop
testb
push
lret
xchg
add
push
inc
inc
cltd
mov
xchg
shll
pop
push
mov
cmp
sub
adc
xchg
mov
jno
mov
sbb
pop
mov
xor
and
test
mov
repz
notb
add
xor
jp
in
ljmpw
pop
and
lds
nop
stos
cmc
push
mov
jae
rorb
aam
mov
pop
push
or
in
and
pop
sbb
mov
mov
idiv
and
push
dec
int3
pushf
push
and
cmp
or
sub
xor
test
sub
adc
inc
clc
hlt
mov
and
fwait
cmp
cmpsl
lods
push
adc
mov
cmp
xchg
cmp
pop
fsubrl
and
arpl
mov
mov
shrb
inc
sub
mov
scas
pop
mov
enter
test
push
push
dec
xchg
inc
jmp
mov
ds
shl
jae
or
cli
icebp
cmpsl
inc
sub
add
sbb
and
test
pop
jmp
jecxz
lock
in
insb
push
mov
add
cli
inc
repz
inc
xor
sbb
jns
leave
pop
xor
orl
arpl
nop
test
ret
xlat
push
xor
shrl
mov
sbb
mov
or
cmp
leave
push
and
sahf
into
add
mulb
mov
and
cmpsl
das
add
clc
jle
pushf
jg
lahf
fnstsw
or
jmp
sub
add
xchg
divl
imul
mov
mov
xchg
setbe
jl
and
mov
fldcw
lahf
test
dec
cmp
mov
fildl
scas
insb
jno
push
push
pop
mov
and
pusha
fisubrs
lods
mov
adc
mov
in
cmp
aas
scas
xchg
pop
dec
rcr
mov
imul
xlat
jmp
lods
cmpsb
int3
add
aad
dec
or
and
shl
int
dec
gs
cmc
adc
sbb
clc
cmp
outsb
out
outsl
pop
inc
dec
jns
push
jbe
jbe
mov
cmp
adc
sub
fadds
inc
cmp
push
cmp
shll
mov
rcrb
seto
jmp
cmp
or
adc
int
outsb
push
rcrb
int3
xor
dec
mov
sub
jae
insl
fsubs
inc
jno
popf
insb
sub
xchg
cmpsb
or
neg
fildll
cmp
sbb
shrb
pop
mov
outsl
popf
aam
iret
dec
mov
into
sbb
xor
outsl
jg
fs
xchg
lcall
fcoml
scas
xor
mov
adc
ljmp
loope
lret
pop
imul
cmp
inc
push
ss
mov
push
push
aas
js
lods
jp
and
push
repnz
enter
inc
xchg
movsl
mov
stos
cltd
dec
shrb
ror
daa
and
ret
jnp
xlat
mov
cmpsl
cmp
mov
mov
out
je
lret
jnp
or
dec
sub
ja
pop
shrl
mov
lock
adc
jbe
mov
lahf
icebp
jecxz
fidivrl
out
push
mov
adc
lea
push
lods
jae
movsl
cmc
jl
fcomp
shlb
cmp
fistl
xchg
mov
lds
mov
jns
mov
cmp
das
loope
test
test
lds
inc
dec
rclb
push
push
les
lock
mov
mov
cmp
data16
pop
mov
xlat
and
imul
adc
test
add
movsl
sti
sahf
xlat
xlat
push
ja
lock
mov
xorl
arpl
adc
in
jmp
add
lret
loop
stc
push
mov
push
sarl
xlat
cmpsb
je
data16
ja
jno
mov
bound
icebp
pop
sub
add
mov
inc
sub
or
mov
cmpsl
xchg
pushfw
fldenv
lret
lret
in
addb
cmc
sub
insb
lea
push
and
popf
xor
inc
lea
lods
lock
lret
push
mov
outsl
cs
push
push
jp
fcoms
cli
inc
adc
adcb
pop
shl
out
jp
jae
and
ret
int
add
mov
scas
ljmp
cmp
scas
mov
nop
xor
or
in
xchg
addr16
push
fists
push
lret
in
jne
mov
jno
jmp
pusha
popa
rol
das
icebp
add
ljmp
lods
cmp
clc
add
xor
mov
and
push
jle
outsb
mov
push
bound
flds
add
cltd
repnz
mov
pop
lcall
movsb
mov
xchg
mov
pushf
lret
adcb
subps
fs
push
daa
in
cmp
xorb
jae
aam
sub
xor
sbb
jnp
sub
push
clc
repnz
arpl
or
sbb
sub
test
std
or
arpl
aam
sbb
cs
pusha
xchg
adc
filds
shlb
sub
test
into
jbe
push
jno
testb
mov
stos
sbb
inc
scas
xor
xchg
push
int
outsl
or
cmpsb
out
jp
arpl
mov
mov
or
mov
leave
mov
xchg
enter
pop
repz
mov
outsb
scas
mov
mov
into
mov
push
mov
outsl
and
aaa
mov
pop
ja
mov
push
call
push
in
bound
push
in
adc
jae
popa
ficomps
in
jg
push
insb
inc
mov
xchg
decl
jecxz
add
cmc
ret
dec
or
jno
mov
icebp
dec
idivl
insl
test
adc
push
mov
imul
sbbl
leave
xor
out
adc
lods
mov
shlb
mov
dec
lahf
in
in
dec
push
fisubl
mov
imul
jmp
lahf
sbbl
ljmp
cmp
cld
jge
ds
mov
stc
xor
sbb
sbb
mov
push
repz
out
jno
pop
sbbl
adc
and
push
push
subl
pop
inc
mov
inc
mov
jbe
xor
push
mov
mov
mov
cmp
dec
cmp
jo
mov
repnz
xor
dec
add
push
xor
cld
gs
dec
mov
dec
inc
xor
movsl
out
or
ror
adc
inc
imul
addr16
sub
icebp
popf
xor
push
fwait
push
mov
push
scas
mov
imul
fldcw
dec
xchg
sub
enter
ret
jl
enter
inc
xlat
rcrb
icebp
mov
rorl
cmp
bound
inc
or
pushf
into
mov
jle
pop
into
lods
sub
mov
adc
cs
stos
shll
dec
loope
inc
mov
sarl
push
test
and
test
ret
jp
int
cltd
cmp
mov
popa
xchg
into
mull
mov
push
icebp
cmc
xorb
mov
lods
mov
and
add
jo
dec
xchg
in
cmp
inc
inc
or
clc
dec
fdivp
and
pop
cmp
mov
sub
bound
jne
in
rclb
sbb
roll
or
lret
lods
hlt
cmp
sbb
shrb
mov
mov
lret
arpl
pop
neg
cmp
cmpsb
sbb
dec
sub
inc
xor
fstpt
adc
cmp
dec
push
xchg
sbb
and
std
mov
insb
repz
inc
sbb
cmpsb
push
lahf
pop
jne
inc
les
pop
sbb
pop
sti
stos
pop
std
pop
rcl
out
sbb
jl
pop
dec
mov
stc
out
bound
push
inc
loopne
push
jmp
add
out
adc
xor
push
addb
lds
add
mov
leave
xchg
push
outsl
ret
imul
push
jb
push
rcrb
pusha
lahf
in
shrb
ss
and
test
into
ficompl
cmp
adc
jmp
push
or
mov
xchg
jg
loop
idiv
cli
stos
mov
dec
pop
pushf
pause
adc
data16
xchg
sbbl
pop
notl
shrb
xor
popa
das
jbe
push
mov
sub
outsl
mov
nop
mov
pop
or
inc
int3
mov
sub
stc
cmpsb
fnstsw
adc
mov
mov
fcompl
outsb
adc
adc
js
pop
cmp
sbb
mov
mov
andb
pop
mov
xor
stc
adc
mov
sub
test
sbb
dec
stc
fcompl
shll
repz
mov
dec
xchg
xchg
mov
sbb
out
cli
ljmp
add
lds
stc
or
cmp
mov
cmp
cwtl
dec
addl
sub
repz
add
xchg
mov
push
and
insl
lret
daa
sub
fs
inc
push
sbb
pop
mov
jge
add
testb
addr16
aaa
cs
pop
mov
or
jmp
loope
in
loopne
rep
adc
cmpsb
outsl
andb
int3
loope
add
lea
js
repnz
mov
dec
or
mov
lret
mov
or
inc
fisttpl
and
xchg
les
pop
repnz
jle
fs
pusha
mov
stos
lret
sbb
mov
jb
daa
xchg
cmpsl
imul
int
imul
sbb
fsub
rcl
dec
loop
sbbl
xchg
call
pop
mov
ljmp
mov
lret
int3
dec
jbe
push
pop
add
add
test
adc
push
jbe
in
sti
or
ss
mov
nop
imul
mov
popf
xchg
mov
mov
dec
imul
bound
in
push
lret
push
pop
cmp
icebp
pop
pop
adc
shll
mov
push
pop
pop
lret
pop
jp
xchg
outsl
ja
pop
xor
in
ret
cmp
daa
xchg
loope
jl
mov
movsb
and
dec
shlb
adc
sub
test
add
leave
in
ja
xchg
dec
mov
mov
inc
inc
push
gs
int
aam
push
xchg
adc
pushaw
adc
popf
or
insl
orb
aaa
ds
jge
rol
add
addr16
fwait
gs
sarb
xor
push
test
flds
adcb
addr16
cmp
bound
gs
in
cs
push
popf
sub
imull
mov
test
sub
adc
aam
ja
pop
jg
pushf
ja
mov
shufps
jbe
call
pop
ljmp
les
aas
push
inc
andb
sub
push
inc
or
mov
pop
jno
test
pop
rolb
adc
pop
mov
into
inc
push
mov
lock
mov
imul
xor
jb
cmc
ret
inc
outsl
cmpsb
inc
lcall
pop
dec
nop
add
roll
and
jle
push
cmp
pop
std
mov
ds
mov
shr
aaa
je
adc
lfs
mov
cwtl
insb
and
arpl
jae
in
daa
cmp
xor
and
sbb
cli
push
inc
jp
fdivp
and
sub
sub
pop
rol
xchg
cs
lcall
mov
rcrb
push
mov
sbb
push
push
repz
pop
cmc
shll
sub
pop
in
sub
jne
adc
pop
les
mov
mov
in
in
in
sahf
mov
push
adc
mov
das
shll
dec
jp
scas
push
sbb
fwait
gs
movsb
pop
sbb
jno
cmpsl
mov
jp
test
and
out
dec
fnstcw
jb
xchg
mov
movsl
int3
das
test
dec
jmp
sbb
pop
cmp
cmc
xchg
push
push
pop
xchg
gs
jp
nop
ret
sbb
cmpsl
cli
stc
cltd
loop
mov
js
or
jne
stos
jecxz
int
stos
std
xchg
std
fidivs
inc
les
sbb
shl
lds
daa
mov
test
push
jmp
rcrb
dec
dec
insb
sub
xor
repnz
fildll
pushf
pop
mov
loope
and
sub
cli
fcomps
cmp
stos
mov
iret
add
add
icebp
adc
fwait
adc
lods
ljmp
mov
inc
filds
pop
mov
insb
mov
or
loop
adc
insl
mov
cmp
mov
aam
outsb
testb
sbb
rorl
aaa
mov
mov
subl
call
pop
cmc
and
adc
imul
cmp
test
mov
imul
enter
fstl
or
or
add
add
in
ja
movsb
adc
mov
lds
xor
sbb
dec
add
xchg
aaa
mov
notb
pop
psubd
sub
fistps
mov
inc
sub
into
cmp
lock
cltd
sub
ljmp
xchg
imul
push
outsl
dec
xlat
cltd
incl
cmp
cmp
mov
cmp
dec
xchg
jne
cmpsb
std
shrl
rcr
pop
fnstsw
mov
subb
adc
jae
jmp
push
mov
sub
fwait
clc
lea
int3
mov
into
adc
cmc
iret
sahf
pop
rorl
add
sbb
cmpsb
sub
mov
xor
jne
adc
movsl
stc
in
sti
aam
xchg
add
popa
out
jg
xchg
mov
inc
sbb
jno
push
jae
pop
push
cwtl
repnz
pushf
cmpsb
xor
and
sti
jb
cmp
outsb
push
sbb
cltd
movsl
aad
push
cmp
pop
enter
push
push
push
sub
and
xor
sub
ss
push
shlb
ret
fmuls
jp
mov
mov
xchg
js
jmp
leave
add
add
mov
imul
push
bound
dec
shr
push
mov
cld
fistl
loop
incb
jl
lret
sbb
ret
jbe
sbb
sar
fcmovu
push
mov
fcoml
dec
mov
idivl
xor
adc
lcall
outsl
shlb
sbb
aas
pop
xchg
xor
sub
insl
out
dec
add
popf
xlat
jnp
test
enter
xlat
ja
aaa
ret
xchg
mov
out
idivb
mov
push
xor
mov
cs
int
addr16
stos
mov
dec
mov
pop
mov
jmp
lahf
push
sub
bswap
pop
push
inc
and
cmc
xchg
xchg
adc
cmp
mov
icebp
sbb
xchg
ror
sub
sbb
jo
lock
inc
jle
or
leave
lods
mov
xor
hlt
inc
popl
xor
mov
xor
jge
sub
pop
mov
imul
dec
int3
cmp
mov
xchg
and
out
mov
jo
repnz
outsl
into
inc
lret
mov
add
movaps
mov
sub
sub
sbb
stc
xchg
jle
mov
test
pop
xchg
and
in
add
out
aas
in
std
das
mov
sub
test
push
ljmp
fwait
cmp
ljmp
xchg
sahf
sub
push
add
mov
scas
lock
mov
stc
lcall
mov
negb
fidivl
and
dec
sbb
movsl
mov
mov
iret
or
push
pop
pop
sbb
jnp
or
jae
icebp
pusha
jns
pop
pop
sub
addl
int3
jl
loopne
xchg
repnz
jle
xchg
xlat
stos
sbb
xor
cld
orb
xor
aad
sbb
and
fldenv
pop
push
and
mov
pusha
cmp
and
mov
xchg
mov
push
or
inc
roll
test
cwtl
jle
mov
int
scas
mov
insb
push
popf
dec
loopne
xchg
pop
jne
in
les
xchg
push
xor
add
call
cmp
jl
shlb
add
add
push
push
lods
add
or
xchg
dec
mov
sbb
shrb
dec
cld
push
loopne
xor
insb
dec
mov
aam
test
dec
or
lret
data16
mov
mov
js
jbe
sub
cld
leave
xchg
sub
cmpsl
sbb
xor
add
ja
or
push
adc
call
pop
xor
adc
shl
dec
or
push
dec
mov
addr16
fprem
orl
roll
shld
mov
repz
inc
push
jno
imul
or
nop
and
jl
cmp
and
mov
lret
dec
push
cmpsl
fiaddl
cmp
inc
dec
push
push
sbb
jle
mov
jecxz
cmpsl
fcoml
pop
les
loopne
outsl
cmp
cmp
icebp
push
inc
dec
mov
stos
and
lock
cmpb
mov
mov
jb
fs
aam
int
push
lahf
frstor
mov
mov
jns
push
in
popa
jno
sub
fsts
xchg
addr16
and
dec
sub
ret
xor
sub
cmp
add
sti
fmul
mov
push
xor
mov
aas
jae
icebp
sub
test
mov
mov
out
scas
gs
lods
push
loop
imul
sbb
cs
mov
add
out
sahf
mov
arpl
pop
xchg
shrl
cwtl
mov
inc
xor
sub
stos
aam
sbb
das
imul
notl
mov
mov
xchg
xchg
ds
adc
mov
movsl
in
dec
test
dec
repz
xchg
dec
push
ret
call
nop
sbb
lret
pop
xchg
xor
push
rcrl
lret
jns
cmp
nop
mov
mov
mov
nop
lahf
sbb
inc
mov
mov
in
sbb
xor
push
aad
daa
pop
add
sarl
loope
loopne
inc
adc
cld
sub
rclb
cmpb
fdivp
mov
data16
fnstenv
push
jb
loopne
jbe
jle
jbe
loopne
push
pop
sbb
loope
sbb
int3
push
jno
movl
jl
lds
push
sub
push
cmc
int3
pop
sub
in
lods
or
jbe
incb
sub
stos
jbe
sbb
sti
sub
mov
xor
push
xchg
mov
jg
loop
in
xchg
mov
mov
or
mov
xor
inc
jnp
mov
or
xchg
fidivl
xor
inc
xor
in
push
jbe
jns
jbe
push
repz
lock
pushf
jecxz
dec
inc
mov
lahf
jb
xchg
xrelease
sub
mov
or
mov
cld
jle
cltd
xlat
jb
mov
cvtpi2ps
iret
outsl
std
movsl
rcrl
es
jnp
sahf
jge
xor
mul
or
add
test
shrb
or
xlat
jb
mov
arpl
lock
push
jbe
push
push
insl
mov
fmuls
push
sub
pop
cs
addb
xor
leave
dec
pop
cmp
and
sub
enter
sub
in
hlt
inc
jno
jge
cmpsl
mov
add
add
push
or
and
addl
in
adc
dec
int
jmp
jns
mov
call
inc
dec
adc
add
cli
popf
adc
aam
lcall
adc
or
aaa
mov
mov
jae
fucom
sahf
out
mov
pop
in
jp
outsb
add
leave
or
pop
loope
cmp
fsubl
adc
inc
or
je
mov
test
xchg
fadd
or
mov
pop
and
inc
call
in
lock
scas
mov
imull
jle
sbb
cmp
test
pusha
pusha
lods
mov
in
pop
xchg
mov
sub
jo
or
insl
xor
jb
or
mov
sub
rcrl
and
mov
sub
xor
repz
pop
mov
sbb
adc
jo
loopne
insb
xchg
clc
and
mov
clc
scas
js
dec
dec
inc
mov
int
pop
lret
aad
cmp
or
jg
xchg
cmp
arpl
dec
mov
push
test
xlat
int3
pop
leave
lahf
and
inc
movsb
xor
fildll
xchg
lret
pop
mov
out
ret
push
fs
loope
loope
rorb
push
sti
mov
cld
and
sbb
mov
leave
imul
mov
adc
test
add
or
add
mov
fnsave
jne
sbb
mov
mov
jg,pn
push
mov
mov
pushf
cltd
sub
jbe
sbb
sub
scas
es
cmpsb
jo
mov
or
mov
scas
stc
and
insl
xor
xor
stc
push
aam
add
data16
cmp
and
xor
shll
leave
mov
sbb
sbb
out
nop
pop
mov
jno
jle
sti
sub
fiaddl
push
call
xor
es
cmp
dec
cmc
mov
jl
insl
mov
xchg
and
jp
xchg
sbb
hlt
pop
fidivs
dec
mov
lcall
mov
popf
xor
js
adc
or
xchg
clc
fisttpl
and
xor
mov
jecxz
and
jns
out
clc
or
pushf
push
and
sbb
mov
cmp
icebp
ret
popf
push
and
out
lahf
xor
xor
dec
pop
in
std
movsl
xor
insb
daa
cmpsl
popa
push
push
orb
scas
cmp
inc
lcall
mov
fmull
dec
call
stos
insb
inc
in
pop
pop
mov
push
jae
mov
jae
add
je
add
lret
je
popf
xlat
push
repnz
xchg
adc
leave
arpl
outsb
loop
in
adc
imul
stc
bound
jge
pop
les
in
push
sub
xorl
sub
shlb
push
incb
mov
enter
jmp
test
addr16
rorl
push
enter
jnp
mov
sub
into
fwait
mov
mov
ret
popf
xor
jne
stos
test
ss
pop
cmp
enter
push
push
push
daa
xor
gs
imul
push
lret
jb
pop
loope
dec
and
inc
cmp
or
stos
jmp
cmpsb
ror
xchg
decl
call
jns
fildll
jle
and
out
hlt
jmp
jecxz
xor
adc
add
sbb
arpl
stos
cmc
sub
dec
imul
inc
mov
fdivrl
or
push
lret
jbe
mov
insl
mov
push
imul
lcall
pop
fidivrl
bound
pop
cmp
mov
jns
pop
fs
cmp
cmp
mov
jge
in
movsl
ret
xchg
in
lods
ret
push
and
outsl
dec
inc
sub
stos
in
insw
sub
inc
out
jp
and
loopne
xchg
jl
out
cmc
dec
xor
xlat
ret
push
or
adc
stos
adc
jmp
and
hlt
mov
cmpsl
aam
repnz
pusha
sahf
fdivrs
pop
lret
ud2
sub
jg
lock
sbb
popa
lahf
pop
test
push
push
lock
pop
filds
adc
cmpsl
icebp
pop
stos
or
pop
ds
iret
mov
push
pop
sahf
mov
ss
mov
mov
inc
sbb
sub
sti
rclb
cli
insl
nop
sahf
or
inc
popf
cmpsb
and
pop
lret
repnz
dec
xor
sbb
hlt
repnz
cwtl
test
mov
pusha
jno
dec
mov
and
fwait
test
bnd
mov
ds
outsb
jecxz
jecxz
dec
rorb
and
inc
jo
adc
cmp
push
xchg
adc
mov
and
pop
cmc
push
push
rorl
xor
mov
cmp
or
or
xor
sbb
inc
xchg
or
mov
fists
push
cmp
inc
or
push
add
mov
imul
test
mov
bound
or
loopne
popf
sbb
loopne
mov
lock
ffree
xor
test
jle
cwtl
mov
jo
mov
cmpsb
fisubl
sti
int
fadds
pop
pop
or
outsl
mov
xchg
sub
ljmp
sub
push
jecxz
xor
sbb
inc
dec
mov
daa
in
pop
rcr
sub
fisubrl
icebp
repz
xchg
mov
je
shrl
scas
xchg
movsb
or
sbb
neg
and
out
ret
lds
fcmovnb
push
ljmp
leave
push
out
mov
inc
adc
addr16
jmp
test
dec
and
inc
mov
inc
mov
lcall
clc
jns
lock
cs
cltd
cld
pushf
imul
out
pop
sub
mov
pushf
xorb
pop
inc
icebp
jnp
cmpsl
stos
inc
shlb
fcoms
xor
aas
enter
xchg
and
arpl
pop
cmpsl
imul
push
cmp
push
std
adc
push
test
mov
adc
fcoml
sahf
je
lock
rcrl
and
gs
cld
and
insb
popf
popa
fstl
lea
pop
das
mov
ja
mov
mov
sarl
rcl
fucomip
mov
das
insb
iret
pop
inc
aas
xchg
fiaddl
mov
sbb
push
mov
xchg
pop
mov
addr16
cmp
add
mov
dec
mov
fxch
jmp
nop
js
gs
dec
sahf
test
leave
sbb
or
pop
pop
sbb
and
out
call
roll
mov
jae
mov
xchg
test
pop
add
into
insl
test
popa
xchg
adc
nop
xchg
imul
jae
sbb
pop
xor
hlt
test
inc
adc
push
out
and
leave
mov
inc
popa
sub
push
sti
add
sub
insl
int
divb
mov
sbb
mov
and
nop
sub
xchg
mov
or
dec
xchg
clc
jmp
cmp
xchg
pushf
xchg
cltd
nop
adc
inc
dec
pusha
in
rolb
inc
mov
push
xor
xor
or
shrb
nop
inc
xor
mov
adc
mov
mov
ja
pop
xlat
jmp
mov
cmp
dec
cmp
pop
inc
xchg
jb
loopne
int
cmp
inc
dec
xchg
mov
cmp
mov
stc
stc
jns
adc
xor
add
icebp
cmp
loop
pop
fdivrs
and
and
insl
ret
cwtl
aad
mov
outsl
pop
cs
mov
xor
fwait
ljmp
shll
jle
aas
xchg
xchg
insl
pop
add
leave
pop
pop
scas
xchg
pop
subl
sub
inc
ret
sub
push
cli
shlb
push
mov
dec
cli
mov
clc
js
xor
pop
jnp
test
cmpl
stc
call
pop
addr16
jle
mov
push
cmpsl
outsb
jne
dec
xlat
adc
xor
mov
adc
dec
xor
push
pop
icebp
int
lods
mov
cmp
mov
push
int3
in
bound
push
dec
mul
cmp
push
jns
adc
insb
sub
mov
or
in
out
lcall
shll
or
test
test
jae
mov
push
or
mov
outsb
cmp
ljmp
out
push
mov
std
in
daa
push
adc
aas
popf
rcll
push
mov
pop
mov
pop
pop
ljmp
data16
insb
mov
shlb
xlat
fistps
movsl
push
ljmp
and
icebp
pop
jp
push
std
pop
sub
bound
dec
push
and
gs
ds
or
lds
push
nop
mov
sbb
jl
ret
insl
int
mov
jns
data16
push
stos
adcb
or
push
dec
push
lds
add
mov
dec
pop
subb
loope
add
rorl
sub
fidivrl
cmp
inc
ror
jnp
js
jl
dec
lock
inc
scas
jbe
stos
pop
mov
sahf
cwtl
mov
sarl
fdivrl
icebp
mov
pop
data16
sub
stos
adc
dec
adc
lea
mov
xchg
adc
inc
notl
stos
clc
clc
clc
jo
leave
loope
loope
movsb
xchg
in
mov
mov
and
cmp
imul
repnz
cltd
movsl
jle
cli
mov
mov
stos
lds
adc
pop
shll
mov
subl
sbb
sbb
loop
lret
inc
cmp
hlt
lcall
sbb
ds
pop
add
mov
insl
push
pop
clc
pop
mov
add
rcrl
js
inc
and
leave
pop
stos
out
mov
sarb
xlat
adc
fidivrl
test
leave
xor
sahf
rorb
sub
stos
push
jmp
sbb
stos
push
out
bound
call
push
inc
outsb
lods
xor
pop
jmp
popf
in
or
stos
add
and
aas
add
sbb
test
adc
adc
stos
nop
bound
adc
push
xor
jl
clc
dec
test
ret
int3
sub
cmp
xchg
adcl
push
add
dec
lcall
push
insl
add
mov
lret
mov
sbb
movsb
pushf
dec
nop
pop
push
sahf
inc
pushf
mov
inc
divl
cmp
fwait
pop
pop
and
push
cmp
nop
pop
sbb
jb
test
mov
int3
fbld
fnstenv
aam
mov
das
cmp
fmul
ficompl
or
imul
xchg
roll
cmp
inc
cmp
or
scas
mov
cmp
xor
mov
cwtl
bound
mov
sub
jmp
push
jo
jo
inc
pop
insb
push
sbb
jge
sarb
push
cmp
dec
mov
call
dec
fmulp
stos
mov
fistpll
test
push
movsb
int
jnp
push
outsl
popf
ljmp
idivb
jnp
sbb
push
jo
add
es
ret
int
scas
icebp
jl
inc
lock
rolb
add
lods
and
out
jmp
mov
pop
and
xor
shlb
sub
pushf
sbb
pushf
jmp
cmp
lea
rclb
jle
nop
cmp
mov
mov
test
es
xchg
adcl
sbb
mov
mov
mov
data16
js
or
adc
aas
dec
push
cs
xlat
pop
jae
dec
dec
jmp
push
test
mov
stos
lahf
testl
mov
in
sets
ja
xor
roll
cmpl
rcrb
fsubrs
jbe
and
fnstcw
arpl
je
iret
in
int
inc
mov
push
mov
and
add
xchg
mov
add
sbbl
dec
movl
inc
add
out
repz
adc
mov
enter
push
in
insl
shrl
addr16
adc
loope
lds
ss
mov
aaa
rcrb
aas
fnstcw
lahf
cs
mov
sahf
outsb
or
gs
aad
les
das
test
xchg
or
std
data16
pushf
dec
adc
and
scas
and
shlb
insb
sub
jbe
das
xchg
push
mov
popa
xor
xchg
sub
rcrb
sbb
mov
and
arpl
outsb
pop
lock
loope
fistpll
aaa
add
lahf
jns
ret
test
mov
jae
pusha
dec
data16
movsb
add
in
daa
iret
movsl
xchg
pop
pop
pop
push
jge
pop
pushf
xchg
inc
inc
pop
outsl
jp
add
fstpl
xchg
jl
pop
sub
cmp
scas
fldenv
jmp
cmp
loop
jge
nop
bound
push
push
jns
and
daa
adc
or
fcmovb
loopne
nop
sbb
dec
push
cli
dec
jle
shrb
cmp
xor
adc
scas
jl
mov
xchg
mov
push
mov
or
sahf
jno
pop
pushf
add
xchg
push
aaa
xchg
in
lahf
cmp
push
aas
repz
sub
loope
adc
push
and
inc
iret
pop
cwtl
or
lods
add
pop
insb
in
aad
out
xchg
pop
jne
dec
mov
xchg
jo
add
scas
and
sub
addl
mov
scas
inc
mov
mov
in
aaa
imul
mov
xor
xor
dec
xor
xor
loope
clc
mov
not
cmp
loop
movsb
lods
sub
leave
hlt
sub
mov
cltd
ljmp
out
add
sub
stos
call
cmp
mov
jecxz
xlat
stos
sbb
in
aaa
pop
add
frstor
mov
xchg
cmp
and
sbb
push
enter
adcb
and
xor
inc
mov
or
adc
testb
mov
fwait
lea
dec
clc
shrb
add
mov
sub
sub
push
or
mov
rdpmc
mov
ss
fisttpl
and
test
ret
sub
mov
sub
daa
mov
ja
lcall
test
lcall
push
jle
inc
cmc
pop
mov
jbe
test
push
add
call
xchg
cmpsb
int3
adc
cmc
xor
out
sub
ret
dec
scas
add
shll
scas
outsb
xor
jne
mov
addr16
movsb
and
or
lds
adcb
lea
mov
sub
xor
cmp
lock
shrl
lahf
fisttps
cs
in
fisubrs
dec
enter
fs
fwait
sub
dec
dec
fistps
jl
xchg
pushl
repz
inc
bound
imul
and
into
fdiv
pop
scas
bound
stos
jg
into
mov
rcll
arpl
pop
jge
push
mov
lret
sub
icebp
aas
movsl
in
in
sahf
dec
movsb
push
jecxz
lods
adc
jno
sub
sbb
popa
shlb
lcall
mov
in
adc
mov
mov
xchg
push
add
mov
mov
leave
test
out
jp
sub
cmp
cmc
fisubs
hlt
loop
push
jnp
inc
cmp
mov
in
dec
in
mov
into
leave
mov
cmpsl
cmpsl
mov
sbb
jge
fldl
test
or
les
pop
pusha
imul
xchg
push
negb
xchg
ja
sbb
enter
fstl
jmp
inc
int
jecxz
lds
dec
and
arpl
loope
and
dec
sahf
ffree
adc
fmull
cmc
int
sub
std
fwait
sub
xor
js
mov
pop
jg
lcall
and
cmp
push
dec
pop
jp
decl
lret
cmp
scas
inc
lret
data16
das
pop
adc
jmp
mov
sbb
rcrl
mov
std
mov
cmp
orl
ds
fsts
pop
jno
inc
inc
dec
cmp
sub
daa
lret
lea
dec
lret
push
cld
mov
jne
outsb
push
loop
add
or
mov
mov
xchg
mov
jl
cwtl
lods
cmp
cltd
add
out
mov
popa
cli
int
rdmsr
les
dec
adc
jg
or
push
and
xor
daa
out
je
movb
mov
and
or
fimuls
test
scas
test
daa
data16
adc
cmp
stc
arpl
sub
pusha
stos
dec
lds
inc
popf
mov
mov
pop
fwait
sbb
jl
orl
fstp
pusha
mov
sub
in
lret
pop
mov
jle,pt
inc
pop
cmovno
in
and
or
sub
jmp
mov
add
pop
push
mov
gs
add
fldl
add
scas
lret
adc
sbb
shlb
pop
pop
test
inc
ja
xchg
cmpb
dec
pop
and
aas
stos
aad
push
mov
push
cmp
insb
rolb
xchg
or
ljmp
xchg
xchg
cs
pop
adc
sbb
push
subl
sub
in
push
dec
jbe
addr16
mov
jb
popf
imul
pop
std
or
xlat
notb
sub
jno
mov
dec
xor
dec
cwtl
push
push
pop
push
les
sarl
fistpl
addr16
xchg
adc
loop
adc
inc
xor
xchg
and
iret
jb
mov
mov
pop
dec
jge
inc
pop
xlat
sbb
add
jne
arpl
aaa
sub
mov
out
jge
dec
popf
bound
push
std
mov
js
arpl
in
inc
push
jg
roll
add
es
and
sti
xor
xor
sub
and
push
mov
mov
sbb
mov
inc
fmuls
imul
pushf
pop
movsl
or
pop
pushf
dec
andl
lret
mov
or
adc
out
iret
mov
pop
mov
and
mov
ret
addr16
mov
adc
mov
sbb
mulb
jg
repnz
sub
inc
test
insl
xor
xchg
insb
mov
loopne
sub
sbb
fnsave
and
ds
std
test
mov
adc
dec
dec
mov
dec
lea
sub
fcompl
xchg
and
cltd
data16
rorb
sub
jae
js
xchg
enter
push
mov
sub
push
jmp
jns
insb
insl
push
pusha
jp
rorb
xor
mov
mov
sub
xchg
ja
lcall
rclb
sti
push
mov
lcall
outsl
mov
push
sar
pop
mov
jne
test
xlat
jno
mov
mov
or
or
pop
xchg
lret
xor
fwait
and
xchg
clc
repz
popa
jle
setle
adc
xor
hlt
cmp
ds
dec
mov
mov
mov
or
push
je
mov
and
fnsave
adc
cmc
and
mov
mov
movsb
fisubs
cltd
in
mov
push
lea
int
mov
or
jne
dec
xor
lcall
out
mov
andl
mov
stos
dec
in
into
inc
xchg
cltd
dec
out
nop
xchg
fs
stos
mov
test
cmpsl
pop
int3
jno
in
fdivp
je
cmc
in
imul
shlb
push
sbb
ds
fwait
adc
gs
xchg
and
mov
pusha
push
jno
lods
aam
xorb
js
scas
adc
mov
jno
jb
push
or
nop
out
ljmp
popf
in
sbb
loop
sub
out
lock
into
add
sbb
ret
out
sbb
mov
andl
leave
pop
mov
loope
sahf
sbb
mov
lahf
ss
push
loop
in
aam
lret
sub
jne
arpl
xor
aam
imul
addr16
push
mov
mov
aad
inc
add
hlt
cltd
sahf
loop
rcll
outsb
fimuls
mov
bound
bound
xlat
popa
pushf
pop
mov
jno
inc
sub
arpl
pop
aam
dec
rorl
sub
lock
shll
ret
out
cmp
daa
dec
cmp
mov
and
xchg
ss
pusha
ror
inc
test
imul
scas
xor
cmpsb
stos
push
in
pop
or
sbb
out
data16
mov
or
repz
pop
sbb
sahf
out
loope
fsubs
push
inc
xor
and
cwtl
dec
call
mov
enter
lret
cld
fistps
out
mov
daa
mov
aad
mov
fs
loope
movsb
ja
test
mov
inc
push
inc
test
cmp
lock
jo
icebp
mov
outsb
popa
sub
mov
mov
test
enter
pop
xor
test
insb
add
and
and
mov
xor
push
jb
sub
add
sbb
or
hlt
mov
loopne
sub
rcrb
sbb
mov
mov
inc
clc
sti
mov
aaa
add
push
punpcklbw
dec
aas
movsb
mov
out
pop
cld
je
jp
pop
jge
and
cmp
jae
pop
cwtl
cmp
aad
mov
xchg
sub
cld
adc
add
movsl
jp
pusha
repnz
mov
lahf
pop
or
test
inc
cmpb
mov
mov
dec
enter
repz
jbe
lea
sub
pusha
mov
jecxz
or
int
xor
xchg
aam
and
xchg
jle
daa
out
enter
jne
testb
fbstp
mov
xor
rclb
sub
inc
dec
or
and
test
mov
adc
fsubl
push
mov
adc
movsl
pop
pop
jb
mov
pop
pop
dec
xorl
push
out
add
pop
mov
pop
cmp
insb
push
add
pushf
cs
sti
outsb
dec
out
leave
or
and
push
enter
in
mov
sbb
ja
push
dec
loopne
sti
xchg
int3
xlat
shll
mov
push
inc
sahf
test
mov
aas
jne
dec
fstpt
dec
mov
pop
mov
repnz
push
ja
or
xchg
sbb
ds
mov
fisubrl
je
sbb
xor
sub
push
je,pt
ret
push
pop
std
xor
mov
arpl
andl
pop
lock
incb
negb
fcoml
pop
repnz
cmp
insb
sub
aas
pop
loopne
testb
sbb
mov
popa
lret
bound
sub
and
std
popf
negb
sub
cmpsb
negb
xchg
mov
test
fstpl
cmpsb
and
fwait
in
pushf
jge,pn
pop
pop
cmpsl
or
fcmovnbe
pop
outsb
int
jge
pop
stc
or
daa
fldl
add
rcrl
jg
mov
cmp
stos
les
xor
xchg
sbb
jg
mov
cmp
push
ds
loope
jae
xor
mov
sub
jp
mov
data16
imul
xchg
and
das
aad
gs
pop
aas
xchg
add
add
andl
and
add
mov
inc
jo
mov
pusha
xchg
dec
or
bound
repnz
lods
ds
push
std
mov
inc
enter
sbb
cltd
notl
in
out
mov
cmp
cmp
xchg
test
pop
outsb
shll
mov
addr16
into
movsl
stc
dec
cmp
jmp
or
or
sbb
xchg
movsl
fistl
lods
inc
jns
mov
xor
shlb
jo
and
pushf
inc
inc
scas
cltd
pop
mov
js
dec
dec
nop
call
movsl
ljmp
xor
add
shlb
fmul
sub
xor
mov
cmpl
xorl
add
into
add
mov
xor
adc
xorl
sbb
dec
sub
icebp
inc
cltd
push
xor
jnp
xchg
add
into
mov
daa
pop
mov
sbb
xlat
push
dec
xor
cld
in
outsb
mov
lcall
sbb
xor
cmc
mov
jo
jmp
jae
mov
lods
setnp
pop
adc
push
fstpt
int3
adc
cmp
push
add
xchg
cmp
sbbb
add
or
mov
daa
lods
jb
mov
outsl
repnz
or
sub
out
mov
leave
mov
pop
out
dec
inc
pop
mov
fcompl
mov
adcl
xor
pop
jnp
es
mov
mov
pop
je
ljmp
adc
mov
jecxz
lea
shlb
push
mov
cmpsl
inc
scas
mov
and
add
fs
mov
sub
ficompl
pop
mov
movsb
mov
sbb
sti
mov
testb
mov
lcall
mov
sbb
movsb
sti
stc
adc
enter
pop
or
fcoms
push
mov
and
push
lret
cld
jnp
cmc
sbb
fldln2
arpl
dec
xchg
sahf
mov
dec
cltd
mov
lcall
and
sbb
ja
inc
ja
push
or
lds
mov
pop
cmp
cmp
add
push
fisubrl
xchg
data16
pop
mov
test
adc
sbb
insl
int
mov
fidivrl
std
roll
inc
sub
testl
sbb
jecxz
pop
cmp
jbe
xchg
xchg
inc
xor
inc
mov
hlt
aad
dec
push
rcr
clc
jne
fwait
mov
inc
and
outsb
push
dec
pop
cs
fwait
push
inc
movsl
xchg
xchg
mov
xchg
push
jp
pop
gs
adc
add
lock
adcb
test
icebp
into
mov
mov
inc
sub
into
cmp
xor
push
xchg
test
or
cli
sub
push
nopl
jp
push
cmpsl
das
imul
add
push
cmpsl
les
dec
mov
mov
mov
dec
daa
cmp
nop
repnz
lret
loop
cwtl
mov
pop
daa
clc
loope
out
xor
push
icebp
xor
imul
test
and
repnz
push
shr
xor
int
cmp
decb
in
pushw
int
inc
je
test
or
adc
jo
fcmovnbe
and
sbbb
hlt
dec
rcr
pop
push
cmp
or
aad
add
push
mov
nop
push
fcmovnbe
push
xchg
jl
push
pop
fidivl
inc
cld
mov
jae
mov
push
sub
xor
gs
rclb
pop
inc
mov
push
sbb
popa
mov
jp
stc
mov
inc
pop
shrl
aaa
test
shl
addl
xor
xchg
push
je
movsb
xchg
xor
cmp
mov
lcall
push
jecxz
dec
nop
pop
cs
push
adc
pop
dec
ss
push
xchg
arpl
orb
and
loopne
fsubl
stos
adc
sub
mov
fidivs
ret
adc
xchg
in
in
mov
in
sahf
pop
les
mov
cmp
sahf
sarb
les
loope
xchg
pop
cs
rol
jl
adc
aad
sti
insl
sub
mov
fwait
push
lds
inc
sbb
inc
andps
mov
es
lds
jge
fstps
dec
in
add
cltd
cmpsb
daa
test
pop
out
or
fsubrs
add
fcompl
xchg
insb
xchg
ret
xor
shl
ds
add
imul
mov
cmp
mov
xchg
test
es
iret
jne
stc
mov
mov
jns
lret
cs
es
pop
mov
cmpsb
pop
and
jge
or
and
jle
aad
pop
push
mov
subl
es
fiaddl
inc
adc
cmp
popf
int
pop
sysret
jge
fstpl
mov
shrl
sti
out
movsl
inc
outsl
outsb
mov
ss
fnstenv
and
cmc
pop
movsl
dec
jecxz
je
cmp
xchg
aaa
mov
insl
addr16
cmp
pop
in
or
sbb
mov
shlb
xor
pusha
jbe
xor
rolb
cmp
xor
or
aad
mov
pop
scas
inc
scas
dec
xor
dec
imul
xorb
cmpsb
lock
mov
jne
or
test
sub
mov
mov
mov
leave
test
or
mov
clc
aas
mov
in
add
xchg
rcll
mov
add
shl
push
cltd
scas
jle
sub
jns
push
out
fcomi
lret
jecxz
bound
and
jmp
mov
jg
dec
or
add
xlat
loopne
or
xchg
or
ljmp
imull
pusha
scas
pop
mov
stos
gs
repnz
mov
dec
data16
das
subl
icebp
mov
aas
fs
mov
push
dec
inc
or
push
fisubrl
jbe
xchg
mov
lock
sbb
pop
jmp
stc
and
data16
sub
fwait
xchg
repz
aas
pop
xchg
negl
scas
cmp
pop
inc
xchg
add
dec
aad
inc
call
and
pop
or
dec
and
mov
outsb
aaa
adc
mov
jp
mov
pusha
pop
or
imul
repnz
arpl
pop
jecxz
xchg
or
push
mov
jl
addr16
pop
sbb
cld
adc
jne
jo
and
testb
sbb
lods
andb
aad
adc
and
out
dec
test
out
daa
xchg
mov
jae
lret
mov
sub
stc
mov
and
lahf
push
mov
jg
bound
incb
xchg
mov
movsl
sub
test
es
dec
stc
pop
repnz
les
shlb
std
ds
mov
mov
into
sbb
enter
fsubrl
aad
stc
cli
stc
sbb
in
xchg
push
xor
pop
push
je
jo
lock
pop
cmpsl
jnp
aas
push
ljmp
inc
xor
clts
cmp
xchg
inc
lret
sub
jnp
or
sub
insb
push
jno
cmpsb
dec
add
jne
out
cmp
xchg
jo
fcmovnb
sbb
jle
add
data16
mov
repz
std
aad
lahf
pop
mov
nop
stc
lcall
enter
push
mov
je
mov
hlt
scas
pop
and
out
dec
adc
xorb
dec
into
xchg
inc
test
icebp
out
push
sbb
mulb
mov
cmp
push
out
rclb
loope
fdivl
filds
les
ja
xchg
add
mov
jle
dec
push
cs
ret
mov
push
or
cmp
out
lret
pop
add
pushf
fdivrl
jecxz
add
pop
mov
sbb
fistps
pop
jg
stos
fiaddl
popa
xchg
xor
notl
sub
shll
divb
or
cmc
mov
test
out
das
or
call
mov
out
movsb
fwait
pushf
sti
cmp
scas
and
aam
ds
add
xor
movsb
mov
out
push
or
fnstcw
mov
jle
xchg
mov
or
mov
fnstenv
stos
jmp
xchg
aas
push
loope
out
loopne
jmp
xor
loopne
or
mov
rcll
pop
jae
pushf
xor
cmp
outsb
js
xor
pop
and
fidivrl
mov
jge
pop
lds
jae
xchg
ds
xor
mov
mov
sub
int3
xor
mull
leave
push
sbb
stos
notb
frstor
mov
adcb
fistpl
rcrl
es
add
leave
fcompl
jp
adc
dec
ljmp
in
fistl
xor
xchg
test
aad
cmp
outsl
xchg
daa
fidivrl
cmp
push
aaa
cmpsb
mov
and
jns
lods
ret
push
cs
sbb
lds
cmp
xchg
fmuls
movsl
lret
idivl
sti
jg
adc
sbb
fwait
lock
jae
add
repnz
dec
mov
out
adc
fnstcw
ds
mov
in
jp
ja
mov
sarb
pop
aaa
mov
jp
shrl
out
aas
adc
add
pop
fdivl
push
mov
rorb
adc
dec
and
inc
cmp
adc
jge
lods
fs
add
in
cld
pop
std
mov
adc
mov
xor
aad
pop
inc
out
subl
jno
mov
add
imul
jnp
xchg
loopne
loop
mov
xor
xor
dec
cs
fcomp
jp
shrl
and
jns
outsb
mov
fildl
imul
adc
es
and
xchg
push
daa
add
jae
call
and
enter
jbe
clc
mov
sbb
ljmp
repnz
cmpsb
mov
adc
call
lcall
or
or
or
sti
jg
sbb
imul
in
or
xchg
or
push
leave
idivl
loope
fsubrs
pop
xor
pop
fiadds
test
mov
lahf
add
xorl
inc
xor
inc
sbb
sahf
mov
ret
mov
xor
test
pushf
or
sahf
ds
pop
cmp
sbb
mov
lcall
cli
in
xchg
xchg
cmp
adc
loope
addr16
mov
test
adc
int3
sbb
bound
pop
jmp
fidivrl
mov
pop
shl
and
test
ljmp
pop
pop
hlt
mov
pop
or
dec
sbb
aam
cli
lahf
mov
push
jge
divl
loop
or
rcll
popf
dec
push
movb
out
push
ljmp
lds
in
ja
push
cmp
fstpl
add
add
mov
mov
jne
mov
in
mov
xor
xchg
and
inc
test
mov
stos
fstl
dec
push
out
xchg
lea
fs
fsubs
stos
lahf
cmp
add
aad
mov
xorl
mov
jmp
sub
mov
inc
sbb
aas
std
movsb
repnz
and
aaa
lret
es
roll
aad
repz
lea
loope
cmp
jnp
std
mov
sbb
xor
xchg
xor
enter
inc
pop
cmp
mov
sub
dec
jnp
ret
cmpsb
sbb
push
das
dec
adc
sbb
sub
xchg
repnz
jmp
xlat
in
aad
xor
push
push
or
repz
gs
or
mov
jle
rcl
mov
out
mov
pop
pop
dec
in
xorl
sub
jmp
stc
adc
loope
mov
cmp
mov
adc
loope
fwait
pop
push
popf
xor
add
pop
movsl
sub
movd
xchg
dec
cs
js
fnstcw
out
ret
lahf
fimull
cmp
jb
sbb
je
push
push
xchg
sub
mov
ds
jnp
stos
clc
cmpl
nop
addr16
call
push
adc
mov
jge
addr16
pop
dec
cwtl
pop
push
loop
sub
loop
enter
and
pop
aas
or
out
or
inc
mov
push
xor
aad
scas
fldt
push
push
pushl
pop
push
mov
fnsave
ja
sbb
dec
adc
ret
les
lock
mov
lds
int
and
xor
lock
xor
mov
jnp
push
out
mov
xor
pushf
jne
adc
mov
add
push
add
ret
das
push
ja
add
add
scas
fistpll
mov
lock
lcall
cmpsb
inc
push
mov
or
sub
loope
aad
xorl
jae
enter
mov
in
cltd
mov
xchg
add
addb
and
into
mov
or
sub
lret
mov
mov
imul
out
add
inc
xor
outsb
cld
and
ljmp
push
lds
inc
sbb
dec
fmuls
dec
pop
sahf
les
cmp
inc
mov
stos
dec
jp
imul
mov
xchg
outsb
daa
adc
jge
out
in
lock
and
dec
in
jb
sbb
lock
mov
jmp
insb
imul
rorl
ret
fwait
mov
insb
out
cmpsl
cs
mov
pop
inc
xchg
sub
push
xchg
xchg
sbb
subl
insb
and
dec
jmp
fs
xchg
in
cli
adc
add
push
enter
repnz
pop
mov
xchg
adc
rolb
mov
popf
xchg
inc
rcl
xor
add
outsb
push
sub
in
pop
pop
pop
push
frstor
or
pop
cmp
fnstsw
xor
lret
in
subl
sbb
or
pop
iret
inc
and
sbb
jmp
sub
dec
pop
int
jno
pop
jb
scas
mov
in
mov
popa
xchg
ja
or
inc
repz
aaa
xor
ret
repz
jbe
pusha
enter
fwait
shl
mov
bound
fiadds
xchg
insb
stos
imul
mov
lds
enter
xor
mov
test
xchg
pop
mov
inc
or
sbb
fnsave
dec
add
mov
in
mov
push
sub
ds
leave
sub
addr16
or
not
xlat
push
cmc
fidivl
sub
mov
arpl
ficoml
sbb
push
cmpsl
incb
jmp
aas
int
mov
jl
pop
jb
lret
cltd
adc
dec
xor
leave
imul
mov
sbb
int3
xor
sbb
ja
inc
lea
sub
outsb
lahf
dec
mov
pop
mov
xor
mov
sub
stc
sub
mov
jge
mov
xchg
ret
insb
cs
add
leave
or
sbb
mov
testl
push
push
iret
and
xor
push
xchg
fmull
notl
pop
and
sub
popa
push
sbb
pop
cmpsb
cli
xor
push
mov
or
test
or
leave
popl
mov
add
cmp
repnz
jp
inc
xchg
aas
jno
or
push
pop
cli
push
mov
sub
fsubr
xor
dec
mov
int
xlat
sarl
push
testb
pushf
adc
rolb
pop
pop
aaa
nop
cltd
pop
lahf
sbb
cld
push
sub
sti
adc
ljmp
dec
xor
pushf
xor
jmp
fs
sub
or
push
xchg
fsubrp
into
loope
mov
in
xchg
daa
xor
xchg
cmp
ds
pop
les
cmpsb
outsl
xchg
test
mov
jg
or
add
xor
push
xchg
and
mov
and
ja
pusha
and
clc
xor
cmp
shlb
in
xchg
jno
stc
addb
les
mov
jbe
sub
ljmp
popf
sub
imul
xchg
jp
add
imul
mov
out
out
test
and
mov
fwait
cmp
sbb
jecxz
sbb
fwait
mov
jb
pop
sbb
push
cwtl
and
push
pop
fiaddl
pop
aas
pop
inc
mov
out
leave
lods
lret
mov
and
add
mov
inc
pusha
jmp
sbb
sbb
cmpsl
and
dec
or
push
push
fnstcw
push
xchg
fidivrs
lods
sub
cmp
push
jae
jnp
test
jbe
imul
fists
fmul
push
mov
xchg
xchg
or
rorb
imul
and
inc
adc
pop
icebp
jecxz
cld
je
mov
mov
divb
push
aad
push
or
add
adc
sub
push
xchg
pop
test
ja
xor
sub
in
mov
push
das
lcall
aas
inc
out
icebp
dec
mov
mov
mov
test
mov
mov
lods
out
pop
loope
pop
clc
pop
mov
out
lods
mov
xlat
mov
movsl
sbb
lea
dec
aas
fdivp
or
scas
cwtl
sub
enter
adc
mov
movsb
lods
cmp
sub
mov
ds
xorl
jns
cmp
in
inc
dec
xchg
sarl
sahf
xlat
rclb
jnp
add
mov
sbb
sahf
jbe
es
jno
orl
bound
mov
jg
repz
shl
loope
mov
stc
and
scas
fwait
std
in
cmp
int
pop
sub
std
popf
loop
cmp
dec
movsb
jl
icebp
incl
xor
scas
dec
dec
mov
mov
test
or
xor
cmc
push
sti
cltd
adc
daa
shlb
dec
lahf
jl
inc
ficoms
xchg
aad
mov
push
test
int
pop
mov
aaa
out
fbld
out
pushw
aam
sbb
adc
aam
mulb
je
mov
sbb
leave
clc
ss
insb
test
mov
fsubrp
icebp
jmp
insb
call
divb
addl
jno
push
ret
adc
lods
xor
out
xchg
mov
lods
subb
adc
inc
mov
cs
pop
dec
bound
stos
xor
add
les
inc
push
xchg
dec
pop
loope
push
sbb
push
pop
mov
movsl
clc
pop
aas
daa
imul
pop
lods
push
arpl
fistps
add
sub
push
scas
and
loope
hlt
jno
sar
mov
sbb
inc
test
rolb
xchg
adc
dec
in
add
stc
mov
shl
dec
pushf
dec
mov
test
shrl
push
mov
push
cmpsb
pushf
orb
xor
jns
jle
fmull
cmp
mov
movsl
sbb
ffreep
adc
fwait
aam
or
in
pop
lea
push
lods
clc
mov
lcall
mov
out
sbb
mov
sub
dec
adc
mov
xor
mov
out
pop
clc
jo
or
pusha
dec
xchg
inc
test
adc
mov
pop
sbb
mov
or
adc
push
popf
rorl
push
int3
sub
test
scas
add
mov
icebp
test
pop
arpl
xchg
cmp
or
cmp
and
jb,pt
out
int3
call
loopne
insb
in
mov
not
roll
ret
divb
dec
mov
mov
daa
push
mov
xchg
add
push
das
repnz
add
pushf
and
mov
xor
or
mov
xor
rcll
addr16
dec
mov
or
xchg
mov
fsubr
sub
add
inc
popa
pop
or
sub
inc
pop
and
inc
pop
test
pop
inc
lret
jle
data16
and
ja
data16
add
push
mov
mov
cmp
xchg
dec
xor
cli
pop
movsl
sbb
mov
and
lods
es
out
sub
inc
lods
and
popf
inc
data16
push
outsl
jg
mov
jg
adc
mov
loopw
and
sub
mov
iret
psubq
inc
cli
pop
jns
punpckldq
scas
sub
cli
stos
loope
jbe
pop
shl
pop
push
jo
pushaw
imul
lcall
push
cmpsb
jae
xchg
pop
shll
data16
and
sbb
jo
jecxz
cli
movsl
adc
xchg
dec
ja
sub
test
daa
aaa
fldenv
rolb
je
jbe
xor
mov
xchg
scas
jg
mov
adc
gs
popa
mov
shll
clc
lods
jae
rcl
sub
pop
outsb
dec
jg
rorl
lret
cs
mov
fwait
xor
xchg
pop
icebp
popf
push
jno
scas
sti
push
cs
push
jge
cmp
xor
into
push
sbb
lret
outsl
scas
pop
ja
lret
hlt
xchg
outsl
clc
sahf
fs
out
sbb
rcrl
mov
pusha
xchg
mov
fld
vmovupd
jbe
movsb
fisubs
or
movb
bound
cmpsb
jmp
add
xrstor
scas
add
cwtl
lock
aas
int
push
jns
xlat
loope
jno
xchg
pop
sti
xchg
inc
mov
add
add
xchg
jae
mov
out
test
mov
test
cld
sbb
jae
jb
pusha
and
dec
xor
or
push
sbb
sahf
out
rolb
push
mov
into
cmc
cmp
stos
ja
jge
xchg
and
lret
xorb
mov
pop
mov
inc
xlat
dec
pop
ficoml
dec
mov
lret
outsl
test
jo
sub
jp
pop
xor
test
icebp
lret
cwtl
sub
dec
mov
pushf
je
rcrl
cld
in
or
iret
pop
sbb
inc
dec
sub
adc
scas
loope
jb
test
mov
fmull
loopne
shr
inc
call
ss
cmpl
mov
iret
mov
lret
inc
in
fs
shrb
fisubs
add
fnstcw
gs
or
scas
out
sahf
scas
ljmp
push
das
hlt
bound
mov
sub
rolb
sub
pop
fidivl
lea
ss
mov
call
test
mov
push
push
jg
sbb
test
mov
mov
lods
sbb
push
mov
dec
ficomps
sub
mov
popa
xor
xchg
jl
sbb
rol
stos
shl
add
mov
sbb
sub
mov
xchg
inc
fwait
jo
jns
gs
jb
and
stos
jo
pop
shrb
mov
call
push
divl
mulb
sbb
cmpsl
decl
xor
mov
ds
push
test
imul
pop
jmp
int3
cmp
call
and
mov
jnp
clc
out
mov
adc
mov
stos
xor
pop
xor
sbb
in
loope
loop
sarb
push
cwtl
fcompl
pop
sar
jne
ret
addr16
xor
jbe
cwtl
jmp
jmp
add
jae
scas
push
inc
outsb
insl
xor
stos
int
test
jl
jnp
xchg
loop
or
mov
ret
jmp
pop
and
jno
lret
ret
movsb
int3
inc
arpl
adc
sbbb
pop
aas
xchg
push
scas
cmc
dec
cwtl
push
add
arpl
xchg
dec
cwtl
out
mov
data16
adc
mov
xchg
cmp
xchg
xchg
dec
and
out
mov
sbb
dec
enter
cmp
rorb
ds
pop
or
cmp
outsl
pop
jns
sbb
or
outsl
inc
movb
dec
sub
sub
fidivrl
add
mov
ljmp
sbb
enter
out
xchg
iret
mov
dec
hlt
xor
out
shr
mov
inc
mov
cmp
arpl
cmpsb
inc
fstl
dec
or
inc
xchg
test
inc
sub
movsb
sbb
pop
adc
lret
adc
cmp
inc
test
ljmp
cmp
dec
int3
pop
jns
pusha
dec
jmp
push
xor
rcrb
adc
push
test
jp
mov
std
sbb
aad
outsl
ds
adc
data16
jbe
mov
outsl
jge
mov
mov
repnz
xor
scas
jmp
movsl
mov
push
stos
dec
arpl
and
push
jmp
mov
xlat
adc
sub
imul
mov
enter
mov
add
sbb
jecxz
push
dec
divb
aam
lds
je
sub
test
leave
pop
add
movl
rclb
xlat
add
sbb
mov
add
nop
loopne
ss
daa
loop
mov
imul
pusha
mov
jns
jecxz
aaa
pop
mov
jge
addr16
in
mov
aas
pslld
test
sub
inc
and
inc
adc
push
fwait
in
mov
lret
or
in
xchg
dec
mov
and
in
xchg
sub
paddsw
outsl
mov
bound
mov
push
aad
mov
pop
pop
xor
mov
push
xchg
xor
bound
adc
sub
repnz
and
imul
popf
dec
push
bound
daa
mov
pop
add
in
lret
in
loopne
mov
popa
aas
int3
addr16
aas
movsl
push
sub
enter
sbb
mov
dec
pop
lahf
add
or
mov
xchg
adc
xchg
outsl
sub
push
div
sbb
xchg
mov
out
mov
loop
int
mov
or
and
addr16
aad
es
mov
sbb
mov
idivb
push
insb
dec
xor
loope
ret
packssdw
jae
pop
push
adc
cmp
popa
das
test
lds
dec
imul
iret
call
data16
outsl
lock
dec
cld
and
or
repz
fiaddl
mov
sbb
cmp
loopne
mov
xchg
aaa
ljmp
out
mov
jno
into
pushf
dec
in
xor
pop
sbb
or
test
arpl
icebp
jb
cmpb
adc
or
es
adc
ljmp
mov
icebp
push
lods
and
insl
loope
in
clc
adc
xor
sarb
sarl
jmp
mov
jge
insb
movsb
loopne
test
cwtl
cltd
movsb
mov
jecxz
mov
dec
mov
mov
or
movsl
add
sub
addr16
test
pusha
ja
pop
sbb
jo
shrl
and
sub
adc
sbb
iret
xchg
jb
pusha
in
cmp
pop
or
push
imul
dec
mov
sbb
xor
lea
inc
jno
int3
xchg
push
mov
jg
push
int
add
mov
das
gs
add
xchg
pop
xor
dec
xchg
imul
pop
and
in
push
iret
xchg
jle
add
add
mov
lret
jmp
negb
ret
fildll
adc
int
insb
pushf
nop
mov
adc
pop
jg
jns
mov
xor
into
sbb
cld
pushf
out
les
out
mov
jb
stos
pop
loope
out
sub
sbb
inc
pusha
adc
dec
sbb
sbb
out
les
insb
int3
or
or
dec
push
push
mov
cli
mov
mov
jle
lea
sti
push
out
mov
jg
sub
push
and
adcb
gs
or
imul
ret
inc
cmp
dec
lahf
mov
in
jg
sbb
jno
call
or
adc
popf
add
pop
jg
mov
fcomp
test
rcr
inc
xchg
ds
dec
mov
lret
fsub
fildl
aad
adc
push
xchg
ss
je
addb
aaa
mov
push
jno
mov
mov
push
dec
adc
inc
mov
sbb
clc
test
mov
fmuls
inc
scas
pop
dec
pop
sbb
inc
imul
adc
mov
fwait
xchg
jne
jae
dec
push
lods
cld
imul
sbb
es
mov
mov
dec
inc
jo
fstpl
in
loopne
inc
push
pop
pop
repz
xchg
lods
adc
filds
and
insb
sahf
test
lret
sbb
sub
push
mov
insl
sahf
dec
mov
data16
xchg
insb
jne
pushf
mov
sbb
into
and
jno
cmp
cmp
ljmp
je
inc
clc
push
loopne
push
cld
inc
mov
and
mov
aas
aas
xchg
fmull
mov
pop
adc
push
hlt
aaa
aam
repz
pop
pop
pop
das
popf
jl
fs
inc
jne
and
xchg
mov
fidivl
cwtl
fwait
in
and
adc
xor
movsb
stos
dec
stos
cmp
arpl
lock
shlb
pop
jl
imulb
fistps
adc
cmc
adc
or
hlt
push
jg
xor
xchg
pop
shlb
and
mov
icebp
xor
and
push
and
clc
outsl
or
sbb
icebp
mov
cmp
adc
mov
adc
daa
imul
jmp
pop
cmpsl
idiv
outsl
inc
adc
bound
push
loop
mov
and
cmpsb
imul
adc
cmp
mov
sbbb
xlat
ret
and
sub
lods
pushf
out
pushf
in
cli
xchg
loopne
shlb
jp
sub
movsb
pop
clc
lea
adc
in
inc
and
dec
subb
mov
mov
call
jnp
xor
mov
add
adc
push
push
std
mov
jae
push
aas
in
mov
xor
push
dec
sub
mov
or
scas
push
pusha
pop
dec
xor
std
push
aaa
imul
or
js
stc
dec
imul
and
jp
fs
lea
aad
sbb
out
jns
dec
mov
and
sbb
adc
aaa
fistpl
imul
lea
push
mov
outsb
push
fstps
js
xor
pop
xchg
int
pop
mov
cs
cmp
popa
push
outsb
and
out
dec
int3
cmp
push
add
jge
shrl
int
sahf
xor
stos
push
shlb
xor
imul
jns
add
push
pop
repnz
mov
cmp
and
pop
dec
cmp
push
test
jl
adc
add
jg
cs
sbb
lret
sub
mov
das
and
in
ss
and
cmc
mov
test
gs
mov
jbe
push
xchg
jnp
sbb
cmp
xchg
imul
nop
jecxz
xchg
outsb
imul
cmpsl
fwait
push
sub
lods
add
sbb
ds
sub
repz
pop
pop
mov
lret
outsl
jne
adc
xchg
xlat
inc
push
pop
mov
add
gs
xchg
gs
cmp
mov
lret
push
xor
jge
adc
leave
int3
repnz
cmp
sbb
pop
loopne
cld
xchg
dec
lret
stos
lahf
push
mov
dec
cmc
or
mov
sbb
mov
ljmp
xchg
jbe
jecxz
pop
xlat
or
jg
hlt
lods
mov
xchg
out
in
inc
and
cli
rorl
xchg
inc
and
adcl
push
jle
lock
jb
cmp
mov
cmc
stos
aas
mov
push
or
lods
shrl
flds
push
outsl
jmp
sahf
jmp
imul
sub
sbb
loopne
pop
adc
sbb
mov
mov
xchg
pop
int
push
repz
pop
inc
add
int
mov
fucomip
lcall
or
mov
jecxz
sbb
jg
xor
lock
sub
jo
cmp
inc
pop
int
lods
mov
lret
push
inc
push
stos
pop
or
pushf
std
fidivrl
add
mov
cmp
adc
add
pop
xor
pop
cmp
push
sub
cld
pusha
sbb
cli
mov
call
or
inc
sub
out
fiaddl
sbb
xchg
sbb
gs
rclb
call
das
push
xchg
rclb
pusha
xchg
lods
add
push
rolb
or
xor
mov
ret
mov
pop
arpl
cmp
lret
jmp
shlb
syscall
mov
xor
mov
lock
pop
and
xor
or
js
jge
aas
jns
adc
cmp
add
fidivrs
jmp
sub
push
and
rcl
aaa
mov
sbb
dec
jno
enter
or
and
scas
shrd
adc
mov
xor
adc
hlt
rol
nop
sub
dec
out
sub
dec
lret
sub
mov
scas
pop
mov
jle
mov
xchg
and
enter
adc
cli
jecxz
cmp
push
jo
sbb
add
dec
mov
jg
hlt
mov
inc
and
outsb
gs
addr16
test
mov
data16
int
or
mov
xchg
in
adcb
and
mov
mov
jo
clc
ljmp
repnz
jl
cmp
pop
scas
add
or
outsl
mov
jl
lret
cmpsb
lahf
mov
push
push
jne
push
dec
sub
stc
data16
adc
addb
pop
cltd
jne
gs
xchg
lods
or
pop
lahf
mov
sbb
mov
pop
xchg
mov
inc
xor
gs
xor
xor
jecxz
andl
jns
sbb
sub
jbe
cmpsb
fsubl
aam
and
pop
jns
inc
clc
mov
in
xchg
lret
gs
add
insb
mov
push
push
sbb
inc
xor
popf
test
inc
ljmp
dec
or
daa
xor
shll
les
mov
dec
imulb
cwtl
cmp
lods
mov
dec
mov
ror
pause
inc
lcall
nop
jno
xchg
ja
jge
mov
addr16
push
inc
cmc
fsubrl
faddl
aas
mov
inc
xor
mov
cltd
push
imul
sub
lods
pop
sub
fs
inc
xlat
mov
cld
cld
xchg
cmc
outsb
repnz
push
std
push
into
into
mov
inc
dec
fiaddl
and
mov
fcoms
orl
test
in
dec
xchg
in
fs
mov
iret
loopne
mov
jp
fs
jle
fmull
sub
mov
stos
sub
scas
mov
lods
inc
fstpl
pop
xor
jge
mov
adc
add
cltd
and
sahf
cld
pop
aad
xchg
mov
xor
dec
jp
int3
int3
mov
or
and
mov
and
mov
lods
push
mov
and
hlt
mov
pop
in
xorb
pop
fildl
out
orb
daa
xor
lcall
test
or
adc
mov
xor
lretw
les
shll
sbb
out
sub
nop
or
and
dec
jecxz
fnstcw
jl
test
imull
shr
mov
scas
test
or
dec
and
sbb
dec
dec
or
mov
xlat
push
push
push
pop
pop
add
xor
ret
cmpsb
inc
outsb
add
xchg
sbb
cld
inc
mov
and
jl
cmp
inc
cmp
js
test
call
ror
nop
xor
repnz
mov
loope
sarl
add
inc
mov
lcall
ljmp
dec
scas
test
adc
cmp
inc
aad
jl
push
and
adc
inc
pop
imul
pusha
stos
mov
mov
xchg
cmc
in
roll
add
mov
sub
mov
mov
addr16
cmp
imul
mov
mov
test
ffree
and
dec
push
pop
int
mov
mov
xchg
js
into
bnd
add
sti
mov
push
mov
xchg
stos
in
and
adc
cmpsb
dec
or
xor
das
adc
sbb
outsl
lods
push
idiv
cmp
cltd
loopne
mov
repz
outsb
xchg
cltd
jb
lods
movb
mov
in
pop
fwait
jo
or
outsl
js
addr16
or
std
fcmovbe
mov
inc
add
int3
inc
add
mov
jmp
xchg
scas
lret
fbstp
daa
das
jno
nop
das
cld
xor
xchg
push
mov
push
inc
and
mov
add
sti
jnp
dec
out
cmp
dec
out
aaa
add
adc
ret
fst
xor
mov
int
test
das
insb
add
mov
clc
adc
adc
call
mov
cwtl
pinsrw
mov
push
sub
push
inc
cmpb
dec
and
mov
sbb
cwtl
outsl
insl
xor
in
mov
push
lret
jns
mov
add
pcmpgtd
xchg
inc
imul
add
imul
jmp
bswap
orl
icebp
xchg
cmp
in
sub
xlat
xchg
arpl
jno
push
or
mov
fwait
lcall
je
mov
ret
ret
shl
cs
popa
insl
cmp
and
sbb
dec
fildll
push
mov
iret
mov
data16
rcl
sbb
pop
push
je
xchg
mov
aas
inc
cmp
data16
push
gs
jns
leave
pop
aaa
mov
rcrb
and
push
ds
pop
test
mov
das
pop
push
adc
push
mov
lds
repz
fdiv
xor
popf
mov
mov
arpl
jmp
fwait
dec
and
sarb
outsl
movq
push
fisubrs
out
cmp
sbbb
add
inc
pop
jb
mov
std
frstor
mov
scas
pop
in
xchg
push
pop
sbb
inc
xor
cld
test
insb
fldcw
psubusw
cmp
orb
rclb
stos
cmp
inc
push
add
ljmp
fdivrp
adcb
inc
es
fsubl
or
add
pop
out
sbb
cwtl
iret
in
pop
or
aad
cmp
stos
pop
aas
fwait
adc
xchg
imul
push
mov
enter
pop
shrb
lock
dec
add
or
arpl
push
fildl
ret
outsl
push
push
lahf
loope
ds
fidivrl
push
pop
loopne
lret
and
push
and
mov
inc
daa
push
fisttps
mov
cltd
aad
jnp
les
pmulhuw
insb
mov
inc
push
sbbl
mov
dec
pop
adc
out
or
lods
mov
aam
aam
add
sbb
ss
dec
rcr
scas
and
sahf
loope
inc
adc
pushl
sbb
ss
in
or
inc
push
into
jbe
stc
nop
das
sub
fxch
subl
addr16
add
pop
dec
and
ret
push
and
insb
cmpsl
push
xor
pop
add
and
pmulhuw
xor
enter
mov
and
xchg
cmpsb
add
dec
cmp
negl
adc
bound
test
outsl
gs
leave
iret
je
jbe
sub
rcrl
pop
mov
repz
xor
icebp
out
sub
inc
mov
or
wrmsr
mov
or
test
sbb
jmp
adc
jo
icebp
lea
lahf
ss
in
add
insb
dec
or
add
enter
rol
mov
mov
mov
cltd
cmp
mov
and
lret
pop
or
ficoml
dec
jb
sub
adc
ret
rcr
push
mov
inc
push
inc
add
lret
mov
dec
cli
jno
loope
inc
adc
dec
jecxz
xor
dec
sbb
lods
cwtl
cmp
inc
adcb
or
insb
mov
aaa
inc
adc
xchg
movhps
jo
lock
or
mov
add
pop
mov
iret
jne
pop
push
pop
popa
adc
mov
idivl
decb
imul
ss
test
jbe
sti
xlat
fisttpl
push
push
xchg
xor
sar
frstor
mov
repz
jge
sub
or
lods
insb
out
push
and
mov
add
cmpsl
mov
sbb
xchg
xchg
ja
jo
and
fstpt
in
pop
fists
mov
mov
sarb
xor
and
lods
clc
push
mov
rcrb
addr16
inc
adc
jl
cwtl
das
imul
out
iret
and
rorl
cmp
mov
bound
jmp
xor
and
movsb
xchg
and
dec
aas
push
clc
mov
addl
and
mov
push
out
fimull
sbb
je
ds
pop
es
in
jp
into
minps
jge
sub
pop
xchg
leave
cmpsl
les
filds
xchg
andps
mov
out
test
outsb
repnz
xchg
gs
mov
cmc
sbb
xchg
aas
push
sarl
ss
cmp
fcoml
mov
mov
xor
mov
dec
jle
add
shlb
pop
and
dec
insb
inc
stos
mov
shlb
mov
mov
push
or
ss
inc
xchg
and
push
pop
stc
filds
dec
inc
stos
adc
pop
mov
lock
sub
cmpsl
cmp
jp
loop
adc
or
adc
fwait
movsb
mov
jb
negl
movsl
add
test
push
jmp
dec
pop
ret
mov
in
adc
sbb
call
mov
nop
loopne
inc
stos
in
mov
add
jmp
stc
push
fwait
lods
sbb
xor
out
add
je
sbbb
push
adc
push
adc
inc
mov
leave
or
ret
mov
xchg
lods
xor
mov
add
pushw
push
insl
xor
enter
scas
call
mov
adc
inc
mov
and
nop
je
xchg
int3
xor
call
shrl
loop
and
shll
scas
notl
outsl
cltd
pop
jle
add
sbb
std
sahf
ja
clc
push
pop
jbe
movsl
mov
sbbl
ret
mov
rolb
jmp
mov
and
pop
and
jo
test
inc
clc
add
repnz
sbb
push
gs
sahf
pop
mov
xchg
cmpsl
int3
das
out
mov
nop
pop
std
lods
lds
mov
imul
sub
cwtl
push
sbb
or
xor
jp
push
push
mov
mov
loope
mov
inc
scas
inc
loopne
mov
popf
jge
ja
mov
sub
outsl
ja
stc
jl
pop
add
stc
icebp
xchg
testl
cli
or
lret
xchg
adc
mov
fidivs
pushf
add
mulb
das
out
sub
popa
push
mov
dec
sbb
repz
cmc
ret
aam
ficomps
inc
or
cmc
jno
mov
dec
add
fimuls
test
fwait
gs
cmpsb
mov
cmpsb
sahf
mov
loope
xor
or
mov
adc
movsb
xchg
js,pt
mov
rolb
in
mov
xchg
add
push
negl
dec
mov
adc
lahf
lds
cmpsb
xchg
js
push
pop
lret
pop
and
int
mov
sbb
cmp
xchg
outsl
loopne
push
mov
loope
push
pop
push
sub
negb
sbb
jg
xor
lcall
std
inc
jecxz
mov
mov
mov
lds
sub
add
and
or
cmp
mov
mov
inc
inc
add
test
fstl
xor
nop
pop
or
pop
fwait
cld
mov
test
repz
shrl
movsl
iret
mov
popa
xor
jg
sub
sbb
js
adc
jno
xchg
fisubrs
fldt
mov
shrd
addb
sub
sbb
daa
or
sbb
inc
fnstcw
xchg
cmc
popf
cmp
xor
lahf
data16
xchg
std
pop
test
fcmovnbe
js
mov
cwtl
jbe
mov
fisubl
addr16
jno
mov
xchg
push
xchg
lret
mov
mov
out
sub
jl
popa
insl
jnp
ja
jno
mov
rol
jne
xchg
inc
out
icebp
push
xlat
rorl
xchg
cmp
dec
pop
dec
jnp
out
aaa
mov
mov
notl
cmp
push
pop
and
adc
sti
fsubl
es
enter
int3
sbb
aam
xlat
push
test
cmp
mov
mov
mov
clc
dec
aaa
cltd
xchg
fcomps
fldl2e
mov
pop
sbb
xor
xor
jb
dec
cltd
and
cmc
sbb
cmp
inc
push
clc
and
into
xorb
sahf
movsl
push
push
cmp
insb
push
daa
inc
in
pop
or
inc
xlat
shrb
push
lret
insb
or
and
and
int
pop
xchg
xchg
enter
call
inc
in
lret
mov
sub
pop
mov
sahf
adc
sub
shll
fcomps
fbld
pop
in
notl
popa
sbb
cmp
arpl
inc
or
dec
mov
sub
adc
es
fcoms
jbe
xchg
mov
xchg
xor
adc
xchg
push
je
sti
aaa
mov
cmp
outsb
inc
lcall
inc
cmp
aaa
cmc
push
inc
or
in
cmpsb
push
je
cs
sbb
xchg
aas
xchg
out
sbb
push
stc
add
jnp
jl
mov
xchg
xorl
daa
mov
sub
add
sub
adc
push
mov
movsb
arpl
shlb
dec
rcrl
testb
lcall
mov
pusha
cmpsl
dec
int
enter
inc
loope
pushf
mov
pop
call
xor
sbbl
inc
sbb
sub
adc
add
push
roll
inc
shll
pop
mov
test
inc
loopne
mov
cs
push
cmp
xchg
mov
pop
cmp
push
fimull
mov
mov
and
or
xchg
icebp
lods
xlat
adc
sub
in
mov
mov
movsl
adc
sub
and
dec
push
push
lahf
cld
call
aas
loope
or
or
fnstcw
sar
test
cmp
cmp
lahf
sbb
add
out
inc
inc
sbbl
les
loopne
pop
xor
sub
add
push
xchg
data16
inc
rolb
test
push
mov
mov
push
stc
inc
aas
lds
repnz
lret
ss
jbe
lahf
imul
jmp
xor
inc
and
int
imul
cmp
shlb
jmp
test
and
jg
adc
pop
into
in
ja
mov
dec
sti
lcall
and
xchg
fwait
cmp
fisttpl
add
jmp
jnp
jecxz
arpl
ja
mov
call
stos
pop
sbb
inc
andb
iretw
xorb
or
aaa
mov
mov
aas
adc
adc
cli
pusha
leave
jl
cmc
pushf
pop
andl
pop
int3
pop
ret
pop
or
dec
push
in
addl
aaa
std
idivb
xchg
cmp
sahf
lret
cmp
mov
divl
pop
lret
inc
xchg
jecxz
xchg
pop
sbbl
jae
outsb
mov
int
push
add
in
xchg
or
jge
ret
inc
stos
or
pop
popf
push
push
in
lea
lea
scas
das
push
rclb
scas
stos
jno
pop
sbb
cmpsb
das
fwait
push
sbb
cwtl
xor
jl
mov
xchg
jge
mov
cmp
sbb
insb
inc
aaa
jbe
push
sub
sarl
fwait
mov
inc
mov
cmp
lds
or
jns
adc
in
mov
xchg
negb
jns
jge
fldenv
inc
mov
adc
jb
stos
aaa
loop
or
imul
xchg
mov
xchg
filds
mov
inc
xor
stos
mov
jbe
mov
iret
out
iret
adc
jnp
mov
jmp
orb
dec
push
mov
outsl
out
xchg
jmp
mov
cmp
aam
out
loope
or
dec
leave
ds
mov
aaa
xchg
push
fldenv
test
inc
xor
push
xchg
mov
pop
fucom
mov
sub
insb
test
and
call
dec
jle
pusha
jle
adc
and
decl
mov
xor
test
mov
pusha
xlat
pop
mov
push
lcall
es
mov
outsl
out
mov
mov
loope
mov
sahf
movsb
fdivrl
fldt
xor
dec
push
jnp
in
cli
aaa
or
or
jo
cltd
add
imul
mov
aam
pop
add
out
xchg
ja
rorb
sahf
mov
arpl
stc
add
and
sub
pusha
and
shll
dec
sbb
xchg
stc
sub
fcoms
and
jp
test
push
dec
lds
cmpb
scas
pushf
outsl
xchg
pop
movsb
fmul
shlb
inc
mov
push
pushf
xchg
sbb
sbb
test
outsb
mov
clc
popa
shlb
loopne
lret
sub
lea
in
mov
scas
xchg
jnp
lahf
jbe
call
pop
mov
mov
int3
ljmp
pop
sbb
bound
in
pop
cltd
add
add
popa
dec
xorl
popf
or
lea
and
inc
sub
cmp
push
in
mov
arpl
mov
dec
js
mov
mov
inc
iret
nop
adc
divb
cmp
xor
fists
mov
dec
dec
push
outsb
sbb
add
sahf
cltd
daa
dec
jl
jle
jno
xor
jae
xor
scas
fs
les
add
lods
jg
push
sub
js
mov
cmp
cmp
adc
pushl
sbb
cmc
pop
lret
idivb
pop
jl
sbb
or
arpl
pushf
fisttps
ljmp
adc
fsubl
cld
fbstp
sub
enter
or
popa
std
inc
cwtl
cmp
data16
sbb
fisttpll
jle
mov
in
cmp
rcrl
scas
mov
push
test
adc
addr16
popf
loope
sbbb
jae
and
icebp
adc
mov
out
in
movsl
push
xlat
and
dec
pop
scas
pop
jg
mov
mov
inc
cld
mov
sub
dec
in
je
movsb
push
out
add
pop
inc
jp
mov
movsl
jns
inc
cmp
pop
sbb
int3
dec
sub
lahf
push
jns
mov
mov
stos
pop
ret
jmp
sarl
jo
negl
jbe
fidivs
pop
adcl
insb
lret
jb
add
jns
movsb
out
jne
mov
fldcw
pop
xor
jo
stc
sub
lcall
pop
and
dec
mov
push
pop
jae
enter
or
jmp
fbstp
mov
and
sub
xor
xorl
xor
lahf
dec
sub
jl
ja
dec
out
repnz
fprem1
insl
pop
sarb
mov
push
int
push
mov
bound
fldt
shlb
inc
inc
js
add
jno
mov
pop
mov
mov
pop
lods
icebp
sub
mov
cld
fprem1
inc
pop
mov
movsb
xor
jnp
clc
outsb
xorl
int3
inc
in
mov
stos
les
add
jbe
mov
insb
daa
jle
loop
mov
cmc
sbb
cltd
and
js
or
scas
pop
or
lods
lds
pop
mov
int
cld
popa
pop
push
push
push
inc
cmp
inc
repz
andl
nop
or
or
lods
ljmp
mov
xor
outsb
sbb
hlt
mov
jae
mov
aam
shlb
int
adc
out
or
mov
mov
cmpsl
in
lcall
aad
lock
dec
fxch
adc
push
in
push
push
jo
mov
dec
stc
mov
xchg
push
mov
push
push
inc
push
dec
xor
and
xlat
mov
mov
out
daa
dec
je
ljmp
in
hlt
fwait
cmc
fsts
out
jae
adc
in
addr16
or
dec
or
mov
shlb
sub
fisttpll
popf
aas
ds
fwait
adc
jmp
out
nop
sub
xchg
jle
dec
pop
scas
movsl
repnz
cli
mov
imul
ljmp
dec
jne
in
ljmp
stos
out
jl
mov
cmc
jns
cmpsl
cmp
xchg
push
mov
inc
rorb
pop
je
sahf
mov
adc
fxch
fildl
mov
and
mov
inc
push
int
add
sub
dec
fsubrs
push
inc
mov
test
jns
push
jne
test
jnp
xchg
dec
icebp
scas
jno
insb
sbb
aas
mov
test
jae
push
scas
and
adc
inc
aad
pop
pop
cmpsl
pop
cmp
sbb
test
pusha
sbb
mov
jmp
xlat
repz
xchg
imul
mov
cmc
mov
andb
push
pop
daa
repnz
popf
incb
jns
int
or
xor
loopne
loope
test
ja
out
jecxz
movsl
rep
loopne
pushl
mov
cs
adc
or
rclb
ja
into
sbb
jb
adc
push
call
jge
mov
xchg
jecxz
fs
pop
add
std
movsb
mov
rcl
pop
outsl
loopne
stos
cmpsb
enter
sub
or
ds
sahf
mov
or
sub
in
pop
mov
cmpsl
fisubrs
cmpsb
pushf
push
scas
in
lds
jg
jo
ss
cli
sahf
mov
xchg
and
test
inc
sti
pop
adc
dec
push
push
jp
lods
jno
or
push
outsb
mov
or
pop
fnstcw
fwait
xor
int
mov
inc
cltd
xchg
rorb
addl
xor
dec
in
xchg
cmpsl
inc
std
test
cmp
mov
jle
sbb
cmp
sub
pushf
adc
mov
fwait
and
out
pop
mov
lret
fisttpl
sub
aas
adc
and
lcall
adc
addr16
mov
push
sbb
pop
jno
xor
cmp
mov
jg
add
js
cmp
add
mov
cs
rolb
mov
insl
sbb
jl
sbb
jae
lret
jge
mov
pushf
das
adc
cli
mov
mov
arpl
jne
ss
dec
icebp
push
lret
mov
in
add
and
adc
sub
call
fcomps
es
ljmp
sbb
dec
aam
lahf
in
jns
push
inc
cli
call
sub
mov
xchg
loope
jecxz
mov
sbb
scas
dec
mov
adc
movsb
les
jb
icebp
mov
jne
into
adc
push
dec
stos
inc
les
add
into
in
push
mov
dec
sarl
mov
cmpsb
adc
pop
ss
dec
movsl
mov
jb
repz
mov
add
xchg
push
pushf
adcl
jge
addl
arpl
mov
xor
or
ja
icebp
lea
jle
addr16
add
arpl
xchg
mov
dec
negl
push
xor
dec
data16
lcall
sub
jp
adc
xor
fsubs
jnp
loope
mov
pusha
cmp
jecxz
insb
dec
push
cltd
ljmp
js
adc
add
jno
jge
movsl
outsb
jbe
mov
mov
adc
push
adc
hlt
movl
add
mov
dec
sub
mov
xor
add
xor
stc
sbb
push
xor
jnp
insb
lahf
or
pusha
call
mov
fs
mov
cmc
cmp
out
test
fcompl
fwait
xchg
dec
insb
lahf
mov
fisubl
test
lds
in
mov
ljmp
mov
sub
xchg
mov
pop
push
fistps
jecxz
and
inc
mov
mov
mov
mov
mov
ficoms
cmp
mov
insl
add
insb
jmp
and
loopne
dec
test
sbb
gs
pop
sub
add
xchg
xchg
lock
fldcw
inc
pop
mov
test
iret
xor
or
movsb
lret
mov
sbbb
sub
push
sub
push
sub
mov
mov
pop
xchg
sub
mov
pop
movq
dec
shl
ja
sbb
cmp
push
pop
nop
gs
push
aas
xor
push
shrb
outsb
dec
pop
out
cwtl
shll
xor
lret
movsb
mov
and
mov
jecxz
lret
cmp
roll
dec
mov
mov
cs
out
mov
adc
cwtl
cli
fs
jl
ret
nop
dec
push
push
mov
in
mov
sub
mov
mov
sub
and
dec
add
inc
scas
push
mov
hlt
mov
andb
mov
insl
notb
test
test
or
inc
and
sarl
inc
pushf
out
inc
mov
mov
fwait
loopne
int
cmpsl
jg
sbb
pop
mov
push
imul
xchg
and
mov
and
nop
out
fistpll
out
daa
mov
pop
out
mov
mov
jno
dec
arpl
and
and
data16
and
test
stos
shlb
out
cmp
repz
subl
repz
ds
cmp
imul
cmp
das
fists
xchg
popf
adc
jecxz
call
repz
push
cmp
sub
or
xchg
add
cld
out
sar
mov
mov
sbb
jecxz
pop
in
push
jns
cltd
mov
fldl
idiv
adc
pop
cmpsb
mov
xchg
bound
pop
sbb
icebp
xor
or
dec
cmp
mov
mov
ret
sub
cmp
fidivs
push
arpl
scas
ret
aad
jns
dec
inc
mov
lock
in
adc
mov
out
js
push
adc
popa
xor
xor
sarb
test
cmp
sbb
mov
or
aas
les
fbstp
jb
jns
clc
fdivr
mov
pop
test
imul
jae
and
or
xchg
inc
data16
sahf
cmp
push
imul
mov
fwait
add
jae
jge
mov
or
or
pusha
adc
push
rorb
andl
data16
in
mov
jnp
jae
aas
imul
xor
das
cs
adc
or
fidivl
cli
pop
jne
icebp
cltd
xor
test
int
fisubl
aad
orl
push
ja
push
inc
out
popf
shll
add
shrb
mov
out
stc
les
not
out
ret
lods
scas
daa
out
sti
xchg
jecxz
scas
and
pop
movsl
jb
xor
dec
lret
add
fwait
mov
in
mov
mov
lret
and
fbld
aad
sbb
mov
imul
dec
inc
and
inc
rorb
cmp
cld
add
xchg
sbb
cs
call
sub
fimuls
std
cs
mov
xor
out
mov
ret
cltd
aas
clc
xchg
xchg
aaa
in
in
das
ds
push
js
or
daa
inc
and
xchg
in
insl
ret
sbb
fs
testb
adc
sub
inc
int3
sub
cmp
shrb
xchg
or
idivb
add
icebp
adcl
setge
lock
xchg
xor
in
pop
std
cld
pop
mov
imulb
add
ds
addr16
jo
mov
xor
fbstp
nop
sahf
hlt
int
xor
dec
aad
add
adc
enter
dec
mov
in
sub
int3
push
sbb
shlb
setge
xor
jns
xchg
push
arpl
adc
mov
mov
mov
jp
sti
lods
pop
test
or
xchg
cltd
pop
sti
call
xchg
mov
inc
push
xor
hlt
imulb
fcmovnu
fs
mov
xchg
insl
test
cmpb
mov
rcrb
add
lcall
insb
test
popf
xchg
inc
dec
xlat
into
fs
push
pop
pushf
cmpsl
lcall
daa
xor
scas
mov
mov
and
popf
adc
sub
inc
mov
pop
movsb
cmp
xor
fs
outsl
sub
mov
xchg
arpl
add
or
fs
js
fwait
xor
xchg
xor
ret
xchg
or
je
xorl
mov
filds
xor
sarb
xchg
fadd
mov
sbb
jmp
lret
lea
js
sub
les
shlb
pop
push
outsb
icebp
subl
aaa
cmpsb
jmp
xor
les
mov
xor
push
ljmp
imul
cmp
pop
xor
dec
mov
inc
test
fcomp
pop
test
adc
imul
clc
into
sub
xchg
adc
push
inc
pop
mov
pop
ret
push
lret
rcll
cli
ss
mov
mov
adc
hlt
mov
lock
loope
and
cmpsb
clc
shl
dec
popa
cmc
mov
cmc
rclb
and
dec
inc
in
dec
cld
insl
pop
lea
sbb
outsb
jmp
sbb
xchg
or
push
rclb
scas
lahf
inc
jo
xorb
mov
mov
mov
push
inc
push
jmp
xor
mov
adcb
loope
adc
sub
testb
jl
adc
add
inc
sahf
pop
push
cmpsb
xchg
test
icebp
fistpll
mov
push
ret
or
ret
xchg
and
andb
out
popl
jne
cld
adc
push
test
pop
enter
cltd
mov
or
cmp
repnz
aaa
insl
sti
pop
in
iret
repnz
movaps
pop
mov
cmp
cltd
popa
out
sahf
add
adc
call
inc
lret
scas
scas
gs
rcr
lea
roll
xor
aam
std
les
stos
mov
dec
sbb
arpl
mov
cli
clc
cld
push
aad
add
shl
jnp
js
and
sarl
xor
adc
xchg
push
inc
jl
enter
decl
call
cmp
push
jnp
push
les
adc
mov
test
sub
scas
lds
pop
bound
inc
leave
lods
and
xchg
fcompl
xchg
mov
imul
sub
xchg
aas
xlat
push
loopne
clc
jmp
addr16
pop
jbe
jns
jns
cli
mov
xor
in
mov
cmp
add
push
arpl
mov
ds
icebp
repz
leave
pop
mov
inc
loope
shr
jp
cmp
mov
xor
cld
or
jl
mov
push
insb
jp
dec
movsb
loopne
movsl
jne
sbb
scas
les
pop
ret
dec
rolb
push
mov
ror
out
xor
cmp
insb
push
in
pop
test
ret
cmpsb
bound
cmp
add
lock
iret
aas
add
in
in
jecxz
scas
xchg
repnz
scas
push
xchg
push
dec
shr
scas
cmp
loope
xor
xchg
bound
xchg
cli
stos
scas
xlat
iret
dec
mov
jnp
pusha
mov
dec
arpl
dec
xor
push
imul
add
fimull
mov
inc
cmc
fists
sub
xchg
inc
xchg
inc
sbb
stc
lds
fsubrs
ret
or
xchg
shll
pop
fcomps
iret
mov
fmull
push
mov
aad
ja
fisttpl
adc
ret
out
jg
lods
arpl
insb
orb
push
mov
add
or
enter
int
pop
xchg
inc
addl
in
out
add
sbb
pop
mov
inc
mov
add
add
iret
cmp
fcomps
mov
pop
push
pushl
jecxz
push
push
outsb
mul
xor
fidivl
leave
and
fwait
ljmp
sub
lcall
or
jne
test
dec
push
test
xlat
xor
movsb
pop
fimull
mov
popa
cmp
jne
mov
xchg
adc
into
cmp
rcrb
adc
rorl
add
mov
ret
out
data16
push
test
fisubrs
test
ljmp
lret
pop
sahf
sub
adc
test
mov
out
add
mov
push
cmc
sbb
sbb
mov
mov
insb
adc
and
dec
pop
jle
dec
sti
pusha
sub
push
inc
fcmovbe
fcompl
jl
shlb
repz
add
ret
nop
sbb
cmp
lods
mov
jne
mov
ffreep
mov
addr16
adc
xchg
dec
sarl
fbstp
pop
or
hlt
xlat
inc
addr16
adc
fmulp
jmp
adc
aad
sahf
lahf
xorb
mov
call
out
sbb
imul
mov
out
sbb
je
mov
push
jo
and
sub
arpl
lret
mov
mov
jecxz
test
lods
lods
xor
sti
adc
xchg
addr16
popl
push
or
jae
mov
popa
clc
lea
dec
push
fcomps
sub
imul
fbld
es
adc
ret
push
xor
jmp
dec
cmpb
cmpsl
push
or
dec
jnp
xor
jne
bound
rcll
jge
lret
sub
push
add
jle
mov
clc
dec
scas
dec
sar
fnsave
push
cmp
sbb
rcr
jnp
popl
dec
rorl
dec
mov
xor
ds
push
xlat
adc
sub
popa
mov
testl
andl
pop
jecxz
shll
and
mov
cwtl
xchg
dec
arpl
adc
in
stos
inc
xlat
push
imul
or
mov
jae
mov
pop
add
fdivl
push
in
dec
mov
out
idivl
jecxz
mov
push
outsl
pop
xor
loop
leave
addl
adc
cltd
xchg
std
imulb
movsb
push
pushf
sbb
sbb
xchg
jge
pop
and
push
or
stos
push
dec
out
push
int3
test
mov
adcb
repnz
test
les
fcomp
lahf
lahf
dec
cmpsl
daa
outsb
cltd
xor
mov
adc
xchg
sti
sahf
leave
arpl
dec
or
add
cmp
mov
xlat
pop
rorb
fcompl
int
cmp
aad
push
fsts
sub
inc
mov
cmp
lods
das
outsb
xor
xchg
dec
dec
ficoms
aaa
insl
iret
push
aam
inc
cmp
jae
sub
jmp
mov
stos
lea
dec
mov
adc
adc
and
sbb
psllq
scas
and
adc
mov
jle
xchg
jae
test
fs
push
ret
cwtl
cmp
mov
pop
inc
or
clc
sti
clc
mov
and
dec
xor
shll
orb
push
or
ljmp
rcr
out
loop
ret
mov
scas
je
lret
adc
xchg
ja
cmp
sub
mov
xchg
sti
lahf
jg
rcll
daa
xchg
xor
or
pop
cltd
rolb
mov
xchg
xchg
add
push
or
xchg
or
xchg
xchg
pop
fstpl
inc
inc
shlb
and
mov
icebp
loop
push
cltd
add
pop
sbb
xor
push
insl
les
cmpsl
mov
mov
inc
aam
ja
push
fs
pop
dec
popa
call
incb
and
jne
std
out
and
jne
jg
int3
xchg
lock
xor
in
mov
leave
xor
and
lret
clc
out
scas
xchg
lods
mov
pushl
or
push
lods
stos
fstl
mulb
inc
scas
cld
bnd
lds
pop
sbb
dec
mov
fldt
lock
daa
or
xchg
js
in
shl
inc
daa
cmpsb
insb
mov
pop
repz
add
pop
scas
jo
add
andb
xor
fldcw
mov
into
jg
sti
stos
xchg
add
loop
popa
pop
into
xor
pop
jmp
push
push
sub
push
outsb
mov
pop
push
sbb
movsb
pop
iret
or
adc
jle
add
rcrb
jno
pop
stc
rcll
andl
fwait
or
pop
ljmp
imul
and
stc
in
xor
and
sbb
int
mov
rol
jmp
inc
in
dec
lcall
rcr
adcb
out
mov
lea
out
cli
adc
jne
push
push
pop
insb
sub
pop
ffreep
jle
ja
cmpsl
loope
cmp
sub
clc
int3
std
jg
pop
cmpb
movb
xchg
jle
into
xchg
fld1
fcomps
add
xor
aaa
push
xchg
adc
and
ss
ret
call
in
aas
or
dec
lcall
pushf
nop
test
insl
mov
sbb
int
mov
cmp
sbb
xor
pop
jbe
dec
jo
add
pop
add
xor
or
cmp
pop
aaa
enter
mov
lds
xor
rcrl
dec
daa
aaa
push
les
pop
aas
in
jne
dec
cmc
inc
inc
fcompl
xchg
imul
repnz
sti
add
xchg
xor
lods
into
mov
jmp
xchg
rcll
push
rsqrtps
ffree
or
or
dec
es
stos
cmp
xchg
fs
stc
pop
clc
xor
sbb
pop
test
mov
mov
mov
mov
lea
test
imul
add
mov
sub
dec
mov
jmp
mov
loopne
cmpsb
pop
adc
add
inc
and
clc
push
leave
fimuls
push
dec
neg
mov
popf
push
in
jb
sub
test
out
addr16
mov
xchg
jbe
leave
clc
xor
pop
nop
xchg
sub
in
xor
adc
pop
test
jb
lahf
adc
inc
mov
add
or
fcomps
fmuls
sahf
daa
out
ficoml
push
fcompl
fdivl
push
mov
iret
xchg
xlat
enter
icebp
mov
sub
stc
xor
jno
cmp
cli
ljmp
rclb
int
lds
mov
fsubs
lcall
ret
lret
subb
jmp
pop
stos
mov
pop
insb
es
bound
add
or
add
adc
adc
lock
cmp
xchg
sub
xchg
xor
pusha
push
test
data16
pop
cmp
sub
ja
ljmp
cmp
mov
push
push
jnp
data16
push
dec
mov
jl
lcall
cmp
cmp
and
test
push
adc
fmull
lret
pusha
stos
sub
inc
int3
pop
push
mov
and
pop
mov
sti
push
sbb
push
repnz
fwait
jge,pt
mov
push
addr16
pop
cmc
xchg
outsl
and
outsl
and
push
leave
push
fsubrs
repnz
mov
xchg
mov
mov
call
lds
aas
jge
cmp
push
cmp
jnp
popf
lods
cmc
mov
test
mov
mov
xchg
pop
clc
aas
sahf
int
and
into
subl
enter
cmpsb
pusha
dec
sub
pop
pop
add
stos
in
add
push
lret
mov
add
cmp
mov
jl
and
popf
lahf
data16
and
cmpsl
mov
add
andl
add
popf
loop
les
jbe
dec
popa
sbb
pop
addr16
out
jl
push
and
ss
jmp
mov
in
mov
and
lret
int
das
test
inc
shrb
cwtl
or
jbe
push
pop
cmp
rcl
inc
mov
inc
jl
imul
cmp
jo
lret
lds
iret
or
mov
mov
out
mov
lock
mov
jbe
fisttpll
int
xchg
mov
xchg
ljmp
imul
xorl
shrl
mov
cmp
inc
dec
pop
or
pushw
and
jns
addr16
leave
pop
out
mov
ret
jge
and
outsb
xor
in
dec
je
xchg
dec
psrlq
in
and
push
sub
data16
shll
sub
mov
cli
aas
sub
das
enter
jmp
out
xchg
cmp
push
pop
adc
sbb
out
jb
lahf
loop
hlt
icebp
call
scas
pop
pop
inc
in
jne
inc
xchg
and
cwtl
mov
repnz
mov
repz
sub
sbb
push
cmp
jge
ret
lahf
daa
insb
cmpsb
jno
jb
outsb
push
sarl
or
sbb
mov
add
dec
insb
push
jp
sbb
inc
cld
cltd
movsl
mov
into
sahf
divb
jbe
cld
xchg
add
mov
mov
xorl
mov
loopne
outsb
es
sbb
adc
add
loop
sub
daa
movsl
jecxz
out
cmpsb
push
mov
mov
dec
and
shl
sub
mov
mulb
les
cmp
cld
cmp
pop
cmc
or
xchg
pop
push
dec
in
pushw
mov
push
mov
pop
mov
addl
adc
add
and
pop
and
pop
xchg
xor
adc
iret
in
and
dec
aaa
scas
fidivs
mov
adc
aas
in
popf
and
sbbl
call
das
cltd
int3
mov
dec
pop
sbb
pusha
pop
mov
int3
dec
push
aad
hlt
jbe
or
ss
fs
dec
jae
fwait
lods
loop
loop
scas
aam
push
xchg
mov
or
mov
bound
ret
push
mov
mov
and
test
xchg
jbe
sbbl
dec
jnp
xchg
or
cmp
pop
sub
mov
dec
je
mov
xchg
js
jp
sbb
loop
sbb
xchg
out
hlt
cld
loopne
sub
and
sahf
mov
dec
sbb
ja
pop
int
xor
mov
nop
mov
out
or
and
mov
sti
outsl
jnp
stc
cmp
ljmp
push
outsb
mov
punpcklbw
xchg
adc
fwait
and
mulb
iret
rcl
movsl
pop
popl
aad
jnp
mov
and
imul
jmp
imull
pop
lret
je
fdivs
iret
ja
sbb
test
dec
imul
roll
jmp
fsubr
lods
inc
jns
mov
pop
adc
iret
jl
or
xor
outsb
enter
adc
mov
mov
ljmp
negl
inc
gs
movb
in
mov
adc
dec
jg
cld
btc
push
daa
add
mov
mov
clc
outsl
cmp
mov
pop
repz
xchg
loopne
jp
mov
dec
les
test
and
inc
fisttps
xchg
xor
dec
mov
jnp
sbb
jne
jp
xor
sbb
pushf
pop
jmp
aaa
outsb
sbb
das
lock
loopne
sarl
cmp
mov
dec
insl
jb
ror
inc
inc
jge
ljmp
sub
in
cltd
mov
lret
mov
cmp
cmc
and
sarb
lret
pop
mov
fstpl
sub
mull
push
push
test
inc
sar
mov
push
cmc
in
movsb
or
iret
mov
push
rol
pop
cmp
outsb
in
push
jp
jb
rclb
mov
xchg
push
mov
stos
mov
aas
roll
rcll
pop
aaa
add
pop
dec
mov
pop
cli
out
cmp
mov
jmp
sub
testl
enter
rorl
icebp
icebp
loop
fldenv
out
popa
roll
jl
popf
daa
push
cmp
test
pop
dec
and
dec
jecxz
add
cmpsb
aad
push
out
jb
cld
pop
jbe
xor
and
iret
lods
inc
repz
lret
dec
lahf
inc
jge
mov
rcrb
cmp
jbe
mov
scas
cmp
das
fbstp
mov
sbb
out
cmpsb
push
cmp
or
xchg
cmp
pop
movsb
inc
test
cmc
xchg
mov
push
inc
xorb
movsl
ror
clc
inc
jg
test
int3
xchg
jo
test
imul
cs
int3
mov
movsl
sti
sbb
sar
mov
push
cmp
sub
ja
pop
sub
pushf
mov
insl
sbb
lcall
adc
lret
enter
fstps
push
sar
sub
jb
push
adc
andl
insb
jns
inc
add
ljmp
fwait
xchg
push
cmc
mov
addr16
inc
stc
jl
mov
mov
pop
xor
ss
mov
orb
into
fisttpll
and
fistpll
and
mov
icebp
sti
push
nop
push
divb
lock
adc
dec
scas
jg
bound
push
jae
adc
push
sbb
inc
mov
roll
mov
fs
or
mov
ficomps
sahf
inc
or
mov
pop
dec
in
insl
les
cs
sub
shlb
shlb
std
test
mov
push
jecxz
push
mov
xchg
adc
sbbb
xchg
xor
mov
into
mov
mov
xlat
subl
icebp
in
cltd
mov
repz
hlt
out
xchg
shrl
fnstsw
test
cmc
fcom
add
cltd
or
mov
pop
sub
enter
mov
cmp
pop
in
xor
lahf
loope
add
hlt
inc
dec
in
inc
stos
or
push
scas
mov
popa
in
ja
jl
inc
push
xor
leave
sbb
and
arpl
ss
inc
aas
sbbb
or
xchg
cmp
cwtl
popa
jle
pop
icebp
push
popa
jns
jle
punpcklbw
pop
xchg
cld
or
inc
hlt
sbb
loopne
inc
adc
das
nop
dec
cmp
xor
dec
lahf
cmc
and
inc
loopne
gs
loope
mov
lea
outsl
sub
xor
inc
loopne
cmp
adc
notl
je
mov
stc
sahf
aad
adc
xchg
loope
or
shll
lock
mov
xchg
push
xor
cmp
roll
or
jno
dec
and
adc
call
and
outsb
and
jnp
mov
pop
inc
clc
adc
lret
lret
test
inc
sbb
xchg
adc
mull
sub
or
fsts
adc
mov
test
lret
insl
sar
clc
int3
nop
add
inc
stc
hlt
mov
adc
dec
inc
push
outsl
inc
mov
icebp
clc
out
sbb
sbbb
call
push
sbb
fistpll
pop
mov
push
fwait
or
jge
xchg
pushaw
test
mov
mov
mov
pop
sbbl
dec
je
push
inc
xchg
cmp
cmp
jae
push
rdtsc
add
in
jmp
out
mov
sub
mov
adc
push
lods
pop
cmp
lods
or
adc
pop
mov
sbb
call
mov
mov
xchg
sbb
add
push
repz
lret
js
xchg
sub
int3
fidivrl
jl
sub
mov
inc
enter
inc
mov
outsb
push
je
push
add
addr16
pop
lods
jae
adc
mov
jecxz
add
add
push
push
js
lds
js
loope
mov
add
cmpsb
movsb
ss
cmpsb
xchg
cmp
mov
jl
push
dec
insl
mov
loopne
dec
push
adc
lock
fs
xlat
push
mov
sbb
push
push
lods
das
adc
pop
and
dec
shlb
lret
or
xchg
enter
nop
dec
mov
hlt
popf
add
dec
dec
pusha
xor
stc
in
adc
stc
scas
lahf
leave
push
sub
mov
mov
mov
inc
push
in
cmp
rol
lea
stos
cltd
xchg
pop
sub
mov
sbb
inc
fstl
push
or
cmp
xor
stos
jne
sbb
or
sbb
into
cmpxchg
push
jmp
inc
fwait
ret
mov
inc
stos
rcll
mov
lret
test
pop
incb
pop
ss
adc
xchg
pop
in
into
add
and
jmp
push
xchg
lcall
jp
repz
fwait
icebp
insb
int
xchg
dec
daa
add
dec
ficoms
mov
roll
js
pusha
pushf
jns
mov
shrb
out
inc
bound
sub
mov
scas
movsb
push
cmp
sbb
sarb
das
jmp
dec
je
jmp
push
jno
cli
rcr
lcall
loopne
xchg
ljmp
loopne
xchg
mov
lret
mov
xor
stos
cmp
and
push
loopne
pop
ja
jb
out
loope
and
jnp
mov
jmp
mov
aas
inc
mov
mov
pusha
inc
xor
mov
data16
mov
mov
add
mov
mov
inc
shlb
dec
iret
and
pushf
or
ss
jo
pop
mov
enter
dec
in
sbbb
push
inc
and
add
mov
dec
pop
mov
loopne
imul
add
pushf
xchg
bound
arpl
out
test
and
ret
lret
clc
ds
xor
cmp
or
testl
and
inc
mov
lock
js
outsl
fcompl
ljmp
shl
sbb
lock
leave
xor
pop
cmp
imul
int
jp
ss
lods
leave
xor
addr16
ret
adcb
xchg
lret
enter
fidivs
pop
scas
clc
add
cld
fiadds
nop
cmpl
lods
fmull
dec
or
aas
inc
inc
push
inc
mov
xlat
outsl
pop
add
pusha
and
out
test
sub
xchg
inc
lret
test
cs
iret
push
loop
dec
adcl
faddl
dec
cmp
repnz
inc
or
das
mov
pusha
sbbl
xor
mov
mov
pop
mov
add
xor
adc
das
call
xchg
inc
dec
sbb
xlat
inc
mov
ret
cmp
xchg
add
mov
cmc
fnstsw
dec
push
les
nop
sbb
xchg
cmp
insb
mov
mov
mull
pop
in
fldt
stos
pop
in
out
mov
push
mov
test
cmp
sahf
jno
insb
jg
sub
sahf
push
and
xchg
das
mov
addr16
fdivrp
insl
addl
pop
push
mov
pop
stc
sti
loopne
jnp
lock
cmpsl
shr
mov
xchg
test
add
sub
fbstp
xchg
adc
mov
aam
pop
inc
insl
or
out
shrl
push
jb
xchg
jb
jl
loope
hlt
int
sub
andl
sbb
loop
and
movsb
pop
jmp
lcall
outsb
test
xlat
jo
jae
mov
mov
xchg
fstpt
in
hlt
or
jge
pop
xor
subb
add
mov
imul
mov
dec
xchg
dec
jne
mov
jns
fcomip
add
adc
in
repnz
mov
pop
jecxz
insl
nop
mov
in
sbb
addb
in
xchg
aad
inc
pop
out
adc
and
jae
or
adc
iret
push
xor
pop
loopne
out
jge
iret
into
add
sub
mov
das
pushf
daa
inc
daa
clc
or
test
gs
arpl
sub
add
ret
dec
in
adc
cmp
mov
insb
cli
add
icebp
jns
and
rcrb
sarb
out
pop
aam
mov
cld
jl
pop
shrb
cmp
mov
and
mov
in
pop
lcall
jmp
lods
shll
lret
gs
shll
fstpt
jp
adc
lcall
das
sub
sub
sub
xor
mov
sahf
cmc
jecxz
in
fsubl
add
dec
dec
mov
iret
das
push
sbb
or
cmp
cmpsl
shrb
jno
add
test
mov
fisttps
xor
xor
xchg
push
aam
sub
int3
jg
push
sarb
adc
mov
or
andb
push
xchg
mov
roll
push
push
scas
pop
sahf
nop
push
lock
lret
mov
xchg
adc
push
aam
inc
add
imul
xchg
cld
dec
fcomp
mov
cmp
jne
out
or
adc
pop
fs
add
fprem1
xchg
out
xlat
dec
in
in
or
inc
mov
cmc
cwtl
in
pop
in
mov
cltd
lcall
dec
rcrl
das
xlat
jne
add
test
mov
inc
popa
movsb
mov
sub
mov
enter
mov
jae
dec
xor
in
enter
je
hlt
or
sub
inc
outsl
push
inc
mov
gs
setge
mov
repnz
lds
in
push
or
jbe
out
xchg
fistpll
adc
std
xor
mov
scas
mov
ds
movsl
xchg
hlt
sahf
out
add
andb
aam
mov
sbb
mov
sbb
aaa
fcompl
mov
clc
fwait
mov
mov
jo
sub
popl
lea
pop
sbbb
jp
jl
push
mov
sbbb
xchg
push
add
cmp
xchg
push
gs
mov
stc
imul
xchg
jp
fcoml
test
jo
lcall
out
sti
add
dec
xchg
mov
sbb
jge
inc
mov
fdivrl
outsl
outsl
xor
jo
push
jmp
mov
inc
shll
ljmp
sub
and
aaa
push
test
dec
inc
jns
sbb
push
sti
pop
ds
out
lcall
fdivrl
cltd
push
lret
ljmp
push
test
stos
into
xor
xor
mov
sbb
sbbl
mov
loope
in
or
enter
dec
fnstsw
inc
mov
fwait
jg
fdivrl
xchg
lods
cmp
sub
mov
or
adc
lcall
mov
popa
push
push
mov
xor
and
jns
xchg
sbb
mov
pavgb
mov
mov
fs
repnz
mov
mov
nop
test
ja
cmp
push
shll
call
in
pop
or
test
mov
pop
jo
or
pop
into
imul
xor
cwtl
sub
push
cmp
repnz
dec
xchg
fxch
inc
fs
pop
jmp
aaa
in
push
test
jmp
and
enter
push
iret
gs
outsl
add
mov
les
or
xor
shlb
push
fdivrl
push
fwait
loop
mov
cmp
icebp
jbe
adcl
cltd
lods
fldl
insb
fcoms
xchg
aaa
pop
inc
test
dec
and
aas
addr16
cmpsb
adc
call
cmp
iret
and
mov
leave
pusha
jne
lret
inc
scas
pop
cld
jg
out
fildl
jge
lods
xor
arpl
jbe
sub
pop
mov
cmp
add
or
cltd
sub
shlb
insl
cmc
and
loope
jge
mov
arpl
les
mov
sahf
inc
sahf
daa
adc
xchg
mov
call
pop
mov
jg
or
sti
stos
fistl
sbb
inc
outsl
or
xchg
pushf
incl
mov
mov
push
pusha
xchg
cmp
push
inc
cmp
add
into
pop
dec
lods
mov
mov
mov
push
mov
es
dec
mov
nop
push
cld
and
std
lahf
sbb
stos
jo
or
fwait
inc
push
cli
cwtl
iret
out
ss
xor
cld
sub
clc
mov
loop
dec
imul
push
shll
repz
dec
inc
loope
xchg
insl
into
or
jecxz
sbb
in
adc
add
dec
pop
jbe
cmpsb
int3
into
gs
test
mov
cltd
push
sbb
jbe
test
jno
jg
outsl
pop
adc
lcall
sub
cmp
mov
mov
fstps
fcoms
sbb
jp
inc
aaa
negl
loope
aas
fdivs
xchg
inc
xchg
mov
sbb
xor
adc
incb
jo
mov
sbb
push
mull
and
and
aas
fwait
or
xchg
dec
cli
mov
divb
xor
dec
fs
cmp
std
xor
js
dec
inc
loop
push
aad
jns
lods
mov
cmp
push
bound
push
lods
sbb
xor
and
push
lods
inc
jmp
mov
add
fs
fldl
int
out
bound
lods
cs
and
lret
in
out
mov
sub
mov
jl
fldcw
or
dec
mov
push
scas
push
pusha
test
push
rolb
shrl
mov
ss
push
fbld
adc
enter
das
addr16
xchg
pop
jecxz
jmp
arpl
push
and
ret
push
aam
jno
jbe
fldenv
mov
inc
cmp
bound
jle
jns
dec
lret
lret
inc
or
sbb
push
cwtl
xchg
fldcw
jbe
nop
sbb
inc
test
fcoml
cli
sbb
or
inc
push
sbb
test
enter
js
adc
mov
dec
ja
divl
push
and
or
loopne
inc
adc
sbbl
add
fs
loopne
fldenv
call
ljmp
or
pop
xor
cs
mov
mov
mov
subl
lods
loop
mov
adc
jbe
push
fstpt
mov
mov
leave
and
into
sti
dec
jae
mov
push
or
mov
mov
fstpt
mov
mov
movsl
add
jno
push
dec
jge
mov
add
push
jmp
xlat
popa
insl
into
push
jae
notl
mov
inc
lock
movsb
scas
in
xchg
aam
push
dec
clc
test
jecxz
dec
aaa
xchg
inc
push
add
or
pop
mov
jns
jbe
fstl
mov
hlt
sub
push
push
stc
ds
dec
outsl
mov
xchg
in
lds
mov
movsb
fidivrs
lods
imul
adc
sbb
rorl
decl
fucom
bound
js
addr16
pop
pop
mov
les
pushf
mov
pop
add
xor
sbb
xchg
fildl
adc
push
xor
or
inc
mov
push
ss
and
pop
jns
xor
fwait
ss
dec
test
jl
jmp
in
pop
shlb
call
into
push
in
xor
sub
and
adc
sbb
fistps
push
negl
pop
mov
add
add
push
sbb
inc
push
mov
outsl
jae
ss
test
lods
mov
jns
insl
xlat
push
mov
insb
lret
sbb
inc
fs
pushf
mov
lahf
and
orb
jno
fs
adcl
push
scas
push
mov
lret
lahf
push
cwtl
push
mov
gs
mov
xchg
mov
sahf
sti
mov
icebp
inc
loop
das
mov
aaa
gs
insb
push
out
inc
sub
lea
jns
loope
xchg
aas
lock
negb
rcr
sbb
pop
or
cmp
lds
rorb
pop
push
es
and
pusha
pop
aaa
sbb
pushf
mov
mov
in
iret
shl
cmp
push
or
ret
arpl
ret
test
or
mov
cli
inc
mov
sub
jmp
add
sarb
or
sbb
dec
and
call
cld
mov
and
lea
lcall
popa
std
arpl
orb
filds
cmpsb
lret
and
push
popa
push
sbb
xor
jmp
in
mov
xchg
dec
test
push
fwait
mov
jmp
jp
popa
push
hlt
add
add
xchg
dec
adcl
or
pop
clc
pop
add
sbb
mov
aas
faddl
push
aaa
cmp
jbe
loope
add
fwait
loope
inc
imul
sbb
dec
mov
sbb
lods
cmc
mov
push
out
aad
popl
dec
add
add
scas
lock
ret
rcrl
mov
ficompl
gs
inc
insl
outsb
and
shl
xchg
lods
test
cmp
ss
xchg
pushf
mov
pusha
push
and
mov
pop
xchg
add
mov
push
ss
adc
pop
imul
dec
sub
xchg
repz
out
loop
add
loop
mov
out
jl
push
cmpsb
xchg
mov
in
jns
cmp
insl
xor
mov
xchg
adc
mov
enter
mov
cmove
rcrb
lret
ja
addl
jmp
lea
repnz
adc
mov
mov
cmp
cmp
pop
mov
je
inc
inc
cmp
jno
inc
movsb
es
clc
jo
movsl
addr16
push
adc
in
pushf
push
pop
sub
add
sbb
lea
rcl
int
dec
mov
out
shlb
sbb
pop
xor
xor
pop
popa
inc
popf
stos
inc
mov
cltd
ret
leave
cmp
pusha
push
arpl
loop
call
jle
dec
jmp
adc
stos
test
popf
es
pop
mov
iret
movsl
data16
jmp
cmp
mov
lods
mov
inc
popa
lret
ret
enter
negb
pop
pop
stos
fs
mov
adc
add
ja
sbb
popf
test
inc
das
push
sub
lock
push
mov
das
push
jle
les
les
filds
scas
testb
data16
jne
scas
xchg
xchg
leave
or
pop
cwtl
scas
inc
push
jno
outsb
imul
loop
or
sahf
pop
imul
or
sbb
movsl
and
xor
cmp
and
xor
mov
idiv
push
aam
sbb
aam
add
xchg
jmp
xchg
fnstsw
and
or
mov
cmpsb
dec
repnz
push
or
je
mov
push
jns
and
neg
adc
dec
das
cmp
adc
insl
flds
sub
movl
leave
xchg
fsubr
push
pop
popf
fs
lods
push
mov
movb
mov
cmc
and
mov
xchg
popa
push
jge
add
daa
dec
push
loopne
or
cmp
add
ds
jns
adc
popa
lods
inc
sub
andl
jmp
and
xchg
pop
sbb
jl
es
mov
and
sbb
outsb
clc
ljmp
push
into
jge
cmc
out
adc
bnd
pop
add
pop
popf
aaa
leave
jns
xor
leave
and
loopne
dec
xchg
loop
and
sti
out
xchg
xchg
jo
jbe
lret
inc
lods
int
sbbl
jb
jge
xchg
push
repz
xchg
lea
stos
xor
lea
adc
inc
lahf
das
xchg
lret
dec
out
repnz
cmpsl
stos
adc
or
sbb
dec
sub
lods
push
aad
sar
push
jle
in
ficoml
rorl
je
packsswb
mov
icebp
pop
rcrl
fistl
mov
adc
mov
add
pop
inc
add
jecxz
lret
fwait
mov
mov
pushf
mov
jge
fsubl
mov
lods
clc
cmpl
aam
arpl
aas
dec
pop
loope
fsubr
pop
popf
subps
mov
into
lea
xlat
push
loop
add
adc
fs
push
or
test
and
mov
cli
lret
sbb
push
adc
push
hlt
stos
lea
dec
insl
sub
push
ds
pop
mov
xchg
insb
shrl
add
jg
ss
adc
or
leave
es
pop
cmp
xor
xor
jnp
imull
loopne
push
insl
push
fcmovnbe
iret
cmp
sbb
test
and
mov
nop
test
or
adc
mov
movsl
cmpsb
stos
popf
pop
xchg
cli
fwait
aam
incl
ja
xchg
mov
pop
ret
frstor
fs
mov
call
mov
mov
inc
mov
push
push
push
mov
int
test
jge
pop
cmp
imul
cmpsb
push
out
jbe
jbe
pop
xchg
out
sbb
dec
sub
js
insl
sahf
or
mov
jne
gs
sarb
out
mov
push
add
push
sub
movsb
mov
jbe
jno
xor
xor
dec
icebp
cmpsb
dec
outsb
inc
mov
icebp
mov
hlt
ljmp
sbb
ljmp
and
out
mov
push
adc
or
mov
inc
cmp
mov
dec
sub
inc
xor
movsl
push
rdmsr
aas
arpl
xor
and
sub
cmpb
or
into
add
dec
sbbb
cmpsb
add
cmp
ficompl
xchg
adcb
shll
in
xor
test
cltd
cmc
ja
sub
sti
negl
and
orb
jae
mov
in
pop
loop
arpl
push
insb
pop
lea
cmp
mov
dec
fs
mov
pop
xchg
mov
mov
or
orl
push
and
out
je
lcall
addb
jnp
pop
xchg
jmp
push
or
fisttpll
lahf
decl
jbe
enter
or
iret
pushf
xor
mov
fnstcw
rol
test
mov
adc
inc
rol
movsl
push
imul
in
or
subb
insl
outsb
dec
gs
jg
or
icebp
xor
lock
lock
add
jle
mov
insl
push
pop
rclb
pop
ja
scas
pusha
mov
mov
and
xchg
shrb
push
add
add
bound
xor
sbb
das
aam
cmc
orb
repz
fisttps
mov
test
leave
cmpsb
sbb
lock
mov
adc
sbb
inc
lcall
lret
mov
dec
push
iret
mov
arpl
jp
test
inc
loope
xchg
push
xchg
xchg
jae
out
iret
cwtl
xchg
mov
pop
out
in
mov
mov
ss
pop
int3
aaa
jns
pop
je
aas
daa
aam
inc
int3
push
mov
xchg
insb
adc
ss
and
leave
sub
pop
jns
lcall
dec
jge
sub
addr16
fisubs
cmpsb
nop
or
out
pop
out
lea
fsubr
jb
imulb
out
or
jo
call
lods
rolb
fst
sub
lret
add
mov
repz
ret
mov
lcall
xchg
aaa
js
and
or
cltd
add
icebp
pop
rol
cmpsl
pop
sub
inc
insl
sbb
pop
sbb
daa
inc
xchg
pop
mov
mov
mov
and
data16
cmpsl
cmp
andb
push
xchg
jg
lret
xor
cmp
mov
sbb
sub
xchg
add
push
adcb
int3
fstpl
mov
or
xor
sub
xor
sti
ljmp
dec
bound
pop
mov
addl
xor
loope
adc
ss
in
xchg
aas
fwait
adcl
popf
cmpsl
mov
je
nop
test
and
lods
xor
cmp
sti
add
push
pop
sbb
test
out
out
pusha
push
sti
xchg
cmpsl
aas
cld
les
popa
mov
xor
mov
inc
jns
xor
or
into
cmp
inc
popf
mov
push
pop
mov
fistpl
cmp
movsl
js
neg
lcall
mov
push
pop
xor
jae
cmc
jb
adc
sub
icebp
xor
rcll
dec
lea
mov
jo
mov
xchg
or
mov
pusha
sbb
test
pop
pop
out
fnstcw
int3
jne
and
mov
js
mov
and
xor
fcomip
mov
cli
adcb
popf
xchg
aad
pop
in
push
rorb
cmp
adc
pop
push
mov
jl
xchg
test
mull
test
insl
iret
mov
mov
ret
xor
xor
push
cmc
insb
dec
adc
xchg
mov
inc
mov
outsl
mov
or
add
jge
rcl
insb
mov
cmp
cmp
jnp
lods
adc
inc
aas
jle
xor
and
sarb
push
fucom
aaa
mov
mov
repz
fisttpll
xchg
les
inc
inc
pop
shrl
xchg
mov
push
push
int
gs
out
xchg
rorb
push
mov
stos
jmp
sub
mov
lods
xchg
push
and
jge
hlt
push
push
pop
adc
xor
xor
jne,pn
loope
cs
pop
les
std
dec
out
sbb
in
mov
leave
lods
mov
or
mov
divb
gs
mov
sahf
icebp
dec
push
test
gs
mov
mov
dec
mov
dec
ds
push
sub
push
add
dec
or
mov
mov
push
xchg
movsb
pop
xchg
popa
popa
sub
adc
jp
or
xchg
sarl
dec
inc
xor
xor
pop
push
les
add
imull
inc
pop
xor
das
incb
out
pushf
xchg
fstpt
iret
fsubrs
xchg
dec
cwtl
add
push
mov
or
repz
pop
add
subl
jo
sbb
mov
sbb
sbb
sub
rclb
lea
cld
loop
sub
repnz
mov
or
cli
xlat
mov
push
xchg
mov
cmp
scas
xor
pop
mov
push
adc
jns
adc
pushf
mov
std
loop
call
mov
lcall
repz
push
mov
incl
sub
push
popa
out
cmp
icebp
inc
aam
push
fimull
mov
lahf
pop
dec
dec
and
push
pushf
adc
jecxz
jle
or
mov
mov
jno
pusha
faddp
lea
test
mov
pusha
sub
cmp
fnstsw
shrl
sbb
mov
or
jo
inc
mov
jb
aad
sbb
adc
dec
or
add
push
cli
jo
dec
fs
out
inc
out
jne
lret
int
test
je
mov
pushf
push
adc
mov
fdivrs
push
mov
mov
xchg
cmpsl
cmpsl
mov
sarb
fisubrs
pop
test
rorb
insb
or
xchg
sbb
jmp
or
or
scas
pop
loop
movsbl
xor
fsubrl
into
pop
xchg
call
lret
or
cmc
pushf
lods
xchg
sbb
and
mov
aaa
leave
push
les
jl
loopne
fwait
sarb
sbbl
jns
loop
lahf
mov
pop
mov
ret
xchg
sub
xchg
loop
faddl
loop
sub
cltd
not
mov
das
and
popw
stos
add
inc
adc
shlb
push
xchg
xor
lahf
loopne
xchg
test
mov
xchg
pop
ds
or
inc
jge
push
fmuls
sbb
fsubrs
fidivrs
ja
stc
ror
notl
pushf
sbb
insb
sub
and
mov
sub
js
popa
out
mov
test
inc
xchg
popf
jo
jns
jecxz
test
xchg
sub
dec
aaa
cmc
sub
mov
xor
inc
jb
cld
jmp
out
xchg
das
jl
data16
jl
aas
outsl
lahf
and
cmp
stc
out
xor
jp
cmpsb
and
jmp
or
mov
sub
scas
mov
sahf
test
xor
into
dec
arpl
jmp
repnz
fs
nop
jp
xor
mov
pop
rcrb
call
jnp
movsl
mov
xor
push
lret
inc
mov
dec
aad
cmp
idivl
dec
sub
ret
xchg
cmpb
and
mov
imul
mov
imul
jbe
cmp
xor
fsubs
jo
mov
fs
lock
movsl
inc
aad
scas
stc
xchg
inc
loop
mov
mov
adc
fsts
in
rclb
mov
js
icebp
xlat
adc
pop
pop
imul
lret
xlat
xchg
or
out
jmp
popa
out
inc
push
jns
jnp
fs
sbb
movsl
push
icebp
add
sbb
pop
xchg
pop
push
adc
fisubrs
push
ds
mov
sbb
out
leave
fwait
jne
push
sub
jle
jne
lret
cmpsb
in
mov
cmpsl
xchg
sbb
inc
movsb
dec
loopne
loope
pusha
call
mov
ret
aad
aas
xor
pop
lahf
cmc
sub
daa
push
pop
and
or
or
push
out
mov
stos
sbb
xchg
notl
mov
inc
mov
std
call
lret
mov
data16
rcr
pop
cmpsb
insl
test
neg
mov
jae
jle
cmp
dec
imul
jg
je
mov
out
mov
xor
in
aas
or
icebp
cwtl
cwtl
xchg
inc
xor
add
mov
arpl
inc
test
add
sbb
in
pop
lods
lods
sub
push
addl
mov
jmp
xchg
icebp
lahf
out
dec
add
cmpsl
push
cmpsl
or
cli
dec
ljmp
add
loope
mov
dec
and
lahf
and
cmp
test
fxch
insb
add
jl
rcll
mov
cltd
lods
inc
mov
xchg
cmp
cmpsb
insl
mov
adc
mov
daa
fldt
jo
mov
xor
pop
mov
aad
dec
rcrl
inc
in
add
addr16
fstps
sbb
sbb
scas
incb
inc
xchg
aaa
push
push
popf
nop
enter
xor
div
aas
popf
shrl
and
pushl
mov
jmp
ret
icebp
xchg
cltd
inc
cmpsl
lods
loope
test
sbb
orl
lods
xchg
sti
sub
lret
cltd
inc
sbb
push
mov
aam
out
mov
sub
sub
out
nop
cmpsl
xor
les
inc
clc
or
or
dec
push
fadd
xor
inc
mov
cmc
pop
movsl
ja
cmp
loopne
mov
pop
inc
andb
dec
mov
and
into
icebp
adc
sub
dec
inc
cmpsl
xor
stos
push
inc
mov
insl
mov
mov
stos
mov
sbb
add
imul
mov
jns
fdivrl
fnstcw
push
dec
imul
repz
scas
movsl
or
dec
sbb
outsb
out
mov
adcb
orl
push
push
dec
sub
sbb
out
outsl
out
pop
push
sahf
sub
sbb
push
in
inc
les
loope
xchg
std
dec
xlat
jmp
or
das
mov
int3
lock
cwtl
outsb
jns
bound
xor
xchg
fnstcw
adc
push
fidivrl
xor
adc
adcl
mov
or
pop
xor
rcll
sbb
mov
pop
sbb
or
sub
decb
add
mov
jle
inc
sbb
std
add
pop
mul
lret
pop
mov
dec
pop
mov
pop
push
repz
mov
dec
mov
jo
sub
pop
mov
sub
mov
test
rorb
cmpsl
ds
push
mov
add
cmpsb
inc
dec
xchg
lock
push
rcpps
inc
aaa
fistpl
call
jge
sarl
push
std
and
pop
push
jl
mov
inc
outsb
or
mov
addl
mov
leave
jo
add
inc
sahf
and
and
adc
push
mov
in
scas
sub
pop
dec
in
test
scas
sbb
adcb
push
frstor
or
insl
inc
nop
icebp
jae
gs
lods
mov
push
ret
push
stos
popf
dec
adc
mov
out
xchg
sbb
inc
sbb
enter
pop
jb
jle
sbb
lds
cmp
test
test
and
pop
xchg
mov
fwait
cmpb
lret
inc
int3
cmp
decl
outsl
subl
dec
test
push
ja
fisttpll
inc
or
into
mov
sub
clc
inc
les
pop
insb
mov
pop
ret
inc
lahf
and
jmp
fldenv
lret
arpl
clc
cmp
das
xor
outsl
mul
bound
pop
jmp
dec
and
and
mov
in
mov
jmp
pop
and
decl
int
std
push
lods
mov
lods
aaa
stos
arpl
test
addr16
ja
pop
shl
cmp
jns
sbb
or
ja
test
mov
inc
aas
popf
outsl
xor
lods
cwtl
jecxz
adc
cs
push
jecxz
sbbl
xorl
adc
flds
jno
aad
mov
negl
call
mov
push
adc
pushf
add
xchg
daa
push
sub
sbb
std
pop
cli
int3
dec
mov
inc
outsb
imul
and
jo
xchg
cmpsl
repz
and
push
and
jl
jg
jb
dec
jl
aad
cmpsb
into
cs
inc
xchg
or
lds
cmp
movsb
pushl
dec
mov
popa
jne
dec
sahf
sub
jp
mov
shll
pop
imul
jmpw
lahf
sbb
pop
mov
mov
ds
mov
nop
mov
sbb
mov
cld
pop
push
add
fsubs
push
dec
sahf
or
out
fnstenv
and
adc
fwait
jne
stos
je
addr16
out
call
sahf
and
fs
xchg
xchg
shl
jp
rolb
in
test
rorl
pop
in
ret
sbb
lahf
inc
les
shll
xor
inc
flds
int3
dec
int3
adc
push
or
add
xor
cs
repnz
insb
sub
fwait
mov
bound
aas
and
dec
pop
push
push
jge
in
mov
cmp
mov
stos
loope
mov
scas
arpl
sub
push
push
push
sbb
cmp
popa
test
jl
pop
lock
cmp
lea
jecxz
movsl
jmp
jl
repz
out
mov
repz
lods
icebp
fs
and
jne
mov
or
ds
and
pop
lret
jo
mov
movsb
jp
jle
cmp
xchg
clc
dec
mov
pop
xor
rorb
mov
xchg
mov
test
mov
js
xor
test
jne
arpl
push
sub
fidivrs
cmp
iret
xor
xlat
std
das
arpl
push
pop
mov
jno
nop
fsubs
mov
cli
mov
fwait
mov
ret
std
lret
mov
pop
popf
mov
dec
inc
rcl
push
sahf
jb
out
filds
fcomps
subl
js
jle
add
inc
pcmpgtd
fdivr
cmc
orl
insb
jne
jmp
jp
cli
pushf
push
mov
jnp
xchg
lock
sahf
fs
adc
outsl
icebp
rolb
loop
or
fldl
pop
xchg
push
hlt
cmpb
add
mov
test
mov
xchg
jo
fcomps
js
xchg
iret
xor
movsl
pop
pop
in
push
or
pop
inc
in
sub
adc
hlt
pop
clc
clc
lock
repnz
repnz
mov
mov
repnz
test
adc
adcl
jb
loop
lea
std
cmp
testb
das
mov
bound
or
inc
adc
push
inc
scas
xor
xchg
inc
aam
sub
push
jns
pushf
iret
rcr
mov
lods
lea
icebp
xor
in
adc
loope
ficoms
cmp
mov
fwait
pop
ja
sbbb
dec
xchg
or
cmc
sub
test
ss
mov
rcrl
pop
icebp
jno
xchg
sub
gs
aam
jae
fcompl
je
add
pop
and
sbb
sbb
aam
aad
nop
dec
jae
sbb
in
stc
jecxz
xchg
mov
fdivl
test
scas
xchg
mov
push
repnz
xchg
mulb
repnz
test
lcall
push
push
sbb
jb
cmp
test
mov
mov
push
loope
cmp
das
xor
xchg
xchg
cwtl
lea
lahf
cmp
pop
cmpsb
fdivr
sub
aaa
repnz
rcrb
dec
xchg
mov
sbb
mov
mov
fisubs
decb
adc
pushf
cli
push
pushf
inc
mov
mov
psraw
enter
push
push
dec
icebp
repz
int3
pop
mov
std
test
sbb
xor
or
mov
add
sar
push
mov
xor
xchg
int
sti
jecxz
dec
mov
pop
jmp
inc
xchg
dec
insl
scas
enter
ds
dec
cmp
and
in
pusha
iret
pushf
cmp
fstl
or
and
cmp
jmp
xchg
std
test
push
andl
xor
push
pop
arpl
or
imull
dec
ja
mov
or
inc
outsb
enter
call
enter
inc
jns
dec
pusha
test
lock
repnz
inc
add
pop
jmp
jno
jg
sub
mov
or
xchg
adc
clc
loope
xchg
mov
call
shlb
stc
xchg
cmp
addr16
xchg
pop
push
or
jle
lock
xchg
lret
jae
cs
inc
out
jp
push
pop
aam
lods
mov
out
mov
call
mov
test
push
icebp
jecxz
xlat
testl
iret
push
aam
pop
repz
push
cltd
add
lcall
jbe
pop
shrl
icebp
test
movsl
test
jns
push
lock
in
cmp
jecxz
or
movsb
jg
jge
incb
js
mov
or
cwtl
test
mov
adc
into
push
scas
loopne
lret
inc
pop
aas
jnp
mov
ret
sti
dec
out
in
pop
mov
lahf
push
add
cwtl
mov
mov
arpl
sub
and
lods
mov
cmp
mov
jb
mov
fdivrs
xchg
inc
cmp
fsubrl
push
out
cmp
test
dec
pop
test
xor
cwtl
fdivr
popa
hlt
fsubr
lret
add
je
push
cmp
add
cmpsb
enter
cmpsl
lods
xchg
mov
mov
mov
lret
sbb
mov
pop
nop
inc
mov
sahf
cmp
xchg
int3
icebp
xor
xchg
mov
ret
add
stos
jl
adcb
cmc
xchg
mov
js
cmp
lock
fisubrs
inc
mov
rcl
mov
test
xchg
mov
push
mov
nop
nop
push
das
jmp
fisttps
pop
and
movl
mov
mov
fldenv
add
shll
lods
shll
sbb
cltd
dec
mov
cmpsl
pop
xlat
jns
push
xor
fadd
fadds
mov
pop
push
inc
jle
push
push
pop
xlat
cmp
les
sar
inc
addr16
repz
add
mov
cmpsb
inc
aam
cmp
bound
jnp
in
test
and
xacquire
adc
daa
xchg
movb
fucom
push
push
in
sti
push
adc
and
add
stc
lea
push
leave
dec
mov
in
das
std
push
dec
sub
sahf
mov
push
cli
pop
sub
roll
das
add
out
xor
test
decb
lods
mov
inc
add
cld
push
fsubrp
lea
rcll
fnstenv
out
repnz
out
test
mov
les
cmp
out
mov
cmpsb
push
sub
mov
sarb
pop
and
je
loopne
je
cmpl
je
lahf
push
cli
cmp
iret
mov
in
mov
xor
addr16
sti
sbb
push
std
jb
insl
mov
push
test
out
rcrb
dec
iret
mov
inc
call
mov
sub
pop
push
icebp
jnp
cmc
popa
roll
push
enter
push
out
jne
hlt
push
mov
add
inc
lret
mov
xchg
adc
jmp
pop
aam
sbb
scas
lahf
lret
lret
jnp
and
add
cli
push
jne
lcall
ss
sahf
rcl
ret
jne
jge
mov
lret
mov
movsl
loop
out
push
fldenv
or
fnstenv
inc
flds
xor
push
xor
mov
imull
or
fcmovnbe
int3
std
pop
adc
es
add
mov
push
movl
arpl
int
lret
pop
jge
or
pop
xchg
cmp
sahf
jp
inc
inc
enter
and
fucompp
pusha
pop
mov
xchg
sub
mov
fisubl
mov
inc
adc
jbe
pop
and
sbb
dec
out
mov
pop
jbe
sbb
and
xchg
rorb
imul
jo
inc
inc
xlat
test
inc
cmp
lret
pop
xor
add
mov
lock
stos
cmpsl
jbe
xor
xor
and
push
mov
ja
repz
cmp
cmpsl
inc
lods
into
xor
jp
inc
sbb
mov
shr
mov
iret
adc
imul
and
add
xchg
cmp
inc
sbb
cmp
xchg
push
mov
sahf
adc
shll
std
xor
scas
or
mov
nop
out
or
pop
jmp
dec
cmpsl
xor
or
roll
mov
jg
rclb
loopne
es
lret
aaa
lret
mov
jle
xchg
sti
push
fwait
pop
lcall
jl
inc
gs
dec
add
sub
push
sbb
shl
dec
sub
sbb
push
test
push
jg
inc
xchg
out
idivl
movsb
xchg
in
test
fidivrl
cwtl
fidivrs
push
mov
jnp
test
aam
or
nop
xchg
sahf
sbb
adc
cmc
pop
gs
fcomp
mov
xchg
aas
inc
imul
test
test
les
dec
or
fdivl
ss
or
add
std
mov
xor
ret
or
mov
pop
repz
mov
bound
mov
mov
or
das
fsubl
je
cwtl
test
push
loope
jmp
int3
mov
fwait
into
sbb
xchg
in
fisubs
cmp
push
jecxz
or
jbe
scas
popa
orb
lock
jmp
ret
adc
cmpsl
push
lret
inc
jns
pop
xchg
test
scas
scas
xchg
pop
xchg
sbb
cwtl
jl
in
adc
mov
mov
jp
mov
xor
mov
in
es
xor
lods
mov
cli
out
es
cwtl
adc
pop
or
daa
leave
cmp
xor
inc
dec
int
ret
les
mov
jb
sbb
adcl
mov
clc
jg
in
jae
jbe
sbb
orb
cmp
mov
adc
sbb
inc
inc
xor
pushf
jecxz
push
push
or
cmpb
jge
or
dec
push
in
loopne
or
jno
add
lcall
cmp
sbbl
inc
add
or
jmp
jge
imul
out
bound
cmp
icebp
pop
mov
data16
xor
fisubrs
in
add
insb
mov
xor
rolb
add
jno
mov
sti
mov
inc
cmp
mov
sarl
out
push
in
xchg
push
pop
dec
xchg
adc
lods
cwtl
mov
sbb
push
sbb
add
pop
clc
add
cld
addb
add
cmc
fimuls
in
lea
jo
push
cmp
add
jno
xor
inc
decb
xlat
popf
pop
mov
and
push
imul
and
stos
mov
adc
cmp
or
fsubrs
sub
push
stos
add
add
cmp
mov
scas
dec
sarb
pop
nop
lahf
mov
sahf
pop
jo
test
aad
inc
sub
pusha
mov
and
aad
inc
mov
fs
add
and
jae
inc
fisubrs
in
std
movb
test
stos
ret
adc
dec
jg
push
jnp
nop
mov
and
cmpsl
stc
pop
test
mov
bound
cmp
daa
xor
adc
or
sbb
clc
inc
cmp
gs
or
mov
repz
or
or
push
xchg
inc
lcall
pop
daa
roll
sub
mov
push
sbb
test
mov
jns
nop
hlt
and
mov
xchg
mov
inc
push
jbe
xor
adc
adc
jb
sti
movsl
shll
mov
dec
scas
ret
loop
push
inc
adcb
flds
cwtl
sub
test
and
arpl
push
jmp
mov
arpl
dec
add
mov
test
icebp
adc
call
mov
aaa
xor
aad
into
xchg
shlb
jne
pop
mov
movsl
stc
aas
cmp
aam
test
mov
inc
xlat
popa
sub
movsb
cmp
sar
jo
fisttpl
dec
jns
mov
add
icebp
fbld
push
jns
inc
jge,pn
insb
add
pop
lods
imulb
shl
inc
out
mov
sbb
pop
pop
rol
fcoml
mov
out
shlb
jecxz
gs
sub
imull
pop
pushf
aaa
mov
adc
mov
pop
sub
mov
jp
pop
test
cmp
fucomp
mov
pop
adc
and
mov
cltd
sarb
push
sub
mov
mov
mov
leave
sub
mov
js
test
and
push
imul
frstor
mov
ljmp
cltd
movsl
mov
sar
test
xor
sub
sbb
mov
sbb
test
adc
push
jbe
push
sbb
test
dec
fisttpl
movsb
mov
mov
fidivl
dec
dec
stc
xchg
cs
mov
loopne
cltd
pop
sub
lahf
mov
icebp
add
sub
out
push
aam
push
outsb
addb
cmp
movsl
out
mov
mov
jg
test
loope
shr
dec
std
dec
mov
dec
jb
iret
xor
adc
pushf
out
mov
std
pop
jne
movsb
sar
test
push
lea
mov
xchg
pop
aas
cmp
mov
pop
xor
imul
stc
xchg
jns
add
out
cwtl
pop
xor
ja,pn
push
rcr
or
stc
push
cmpsb
testb
dec
sub
or
jl
mov
cmp
enter
xchg
insb
ret
add
iret
je
jns
enter
aaa
aas
sbb
fbstp
xor
pop
sub
mov
movsb
jecxz
add
jge
dec
pop
test
add
rorb
sub
jge
or
pusha
sbb
das
cs
and
aas
lcall
lahf
mov
stos
dec
add
cld
xchg
divb
outsl
jg
or
rcrl
or
pop
adc
sbb
pop
cmpsb
pop
push
or
jae
xchg
fcmovnb
ret
punpcklwd
pop
fsubs
push
sub
or
ja
in
cmp
negl
inc
sbb
call
aas
adc
daa
mov
sub
xlat
imul
insl
sbb
push
cs
pop
fistpl
dec
stc
add
idiv
sbb
inc
xrelease
les
fst
outsb
cltd
frstor
push
clc
adc
push
loope
jne
aam
xchg
es
and
mov
pop
pop
jo
mov
fcmovne
mov
push
mov
mov
cmp
adc
push
add
fimull
sbb
add
jecxz
pop
mov
fcmovbe
dec
push
scas
or
or
mov
and
cltd
lock
bound
push
scas
rclb
dec
dec
add
jae
stos
jmp
test
dec
fisttps
pop
add
cmp
add
lahf
imul
test
mov
cltd
mov
pop
cmc
push
cmp
ret
sbb
ja
pop
jo
sbbl
inc
test
lret
mov
ret
adc
jge
xor
sarb
shl
push
jno
mov
sti
lahf
js
push
add
ret
mov
sbb
sti
out
shlb
mov
iret
pushf
fisttpl
mov
sbb
test
and
arpl
jg
sub
bound
push
insl
clc
mov
push
jno
aas
and
imul
arpl
mov
fninit
cmc
sti
jecxz
ljmp
cmc
lahf
inc
push
out
mov
pop
and
push
arpl
mov
scas
xchg
or
push
inc
sub
lret
aaa
xchg
test
jg
sbb
dec
jp
ja
cmp
ds
nop
add
push
or
jg
push
xor
jge
cmp
ret
xlat
je
jp
push
xchg
xlat
mov
stc
dec
js
mov
jle
sahf
cltd
cli
leave
mov
mov
xchg
flds
mov
movl
push
xor
out
mov
ret
pop
cld
dec
test
jbe
jbe
pop
aaa
in
sub
scas
push
shll
pop
fs
push
cmp
aam
orb
mov
mov
pop
jle
push
jae
fs
sbb
pop
scas
pusha
xor
leave
sti
imulb
scas
adc
sahf
orb
subl
into
add
je
mov
sub
je
imul
inc
out
shll
jmp
sub
cmpl
sbb
daa
pop
inc
push
lods
sbbl
jae
loop
outsb
das
pop
pop
rcrb
subl
push
roll
arpl
sub
jnp
lret
mov
push
xchg
roll
mov
push
push
push
add
lcall
out
mov
cs
lods
cwtl
pusha
int3
sbb
ljmp
les
mov
push
push
ficompl
sub
repz
push
cmp
mov
ja
push
rolb
out
sub
in
fsub
mov
or
imul
bound
lret
insl
into
pop
pushf
aad
jne
sbb
or
dec
repnz
pop
cmp
sbb
mov
mov
out
popa
jmp
dec
aaa
mov
testl
int
mov
hlt
mov
and
dec
xchg
popf
imul
push
sbbb
enter
test
dec
inc
mov
cmp
negb
aas
xor
adc
data16
daa
jb
addl
daa
sub
and
xor
movsl
sub
pusha
mov
test
pop
xchg
jle
sub
cli
or
loope
jns
jecxz
mov
in
xor
mov
inc
sub
mov
pop
pop
xchg
push
xor
test
mov
inc
stos
dec
ljmp
add
shll
imul
addl
cmp
inc
faddp
lret
movsl
cmp
add
mov
push
xor
addr16
enter
mov
loopne
mov
dec
arpl
mov
addr16
cmp
ret
inc
mov
mov
inc
loopne
xor
mov
cs
push
decb
mov
je
pop
out
jne
dec
aam
popf
daa
ficomps
push
dec
or
aad
inc
jb
mov
cwtl
push
mov
jno
stos
test
cli
pop
dec
adc
dec
call
cmpsl
stos
push
push
push
mov
push
mov
pop
in
aam
mov
push
sub
mov
xor
inc
scas
fmuls
mov
stc
mov
fisubs
andb
push
fldenv
cmp
subl
push
rcrl
inc
cmpsl
bound
xor
jbe
xchg
addr16
sbb
je
movsb
xor
adc
or
add
movsb
or
xorl
push
push
fisubs
les
aas
mov
mov
repnz
cmpsl
pop
pop
sub
sub
rcrb
push
push
sub
lock
pop
fisttps
aad
xchg
cmp
xor
inc
mov
sub
and
dec
out
scas
std
sbb
jecxz
mov
jg
sbb
ljmp
jge
insl
and
lret
lahf
mov
ja
mov
das
push
lods
inc
xchg
and
test
xchg
repz
sbb
xor
ret
adc
clc
cmpsl
popa
sarb
add
xchg
shlb
sbb
push
and
xor
les
add
or
jb
mov
jnp
jmp
sub
das
popf
shrb
test
mov
xchg
or
pushf
negb
int3
lahf
ss
xchg
cmc
lret
inc
mov
lcall
roll
mov
stc
subb
inc
stos
sbb
pop
fistl
add
and
jns
fwait
leave
xor
mov
bound
imull
dec
sub
insb
testl
cmpsl
test
outsl
addr16
jb
pop
jle
xlat
in
outsb
iret
lock
pop
sub
push
sub
pusha
stos
adc
or
in
add
inc
in
icebp
orb
sbb
xor
cli
xchg
push
dec
and
sub
sti
jbe
cmc
add
arpl
stc
clc
std
mov
gs
or
pushf
pop
jb
jo
inc
sbb
lea
and
rcrb
flds
mov
lahf
lret
cwtl
fadd
sbb
mov
or
inc
pop
pop
cmpsw
not
push
sbb
xor
fildl
movsb
sbb
sbb
nop
ljmp
popa
stos
stos
sub
fdivl
rcl
or
cwtl
jmp
test
mov
add
movsb
popf
sbb
mov
mov
xor
mov
fisttpll
add
adcb
fcmovb
daa
xor
ror
js
lock
adc
cltd
ret
push
or
insl
stos
pop
sbb
or
addr16
arpl
pop
xor
test
push
bound
stos
cmp
jle
popl
inc
imul
outsl
out
push
lods
cs
rdtsc
ret
sti
out
pop
repnz
les
cmp
test
inc
popf
addr16
ss
fnstcw
out
push
sti
push
jmp
inc
or
jb
sbb
into
cmp
fsubp
xor
shrb
jns
rclb
xchg
sub
and
pusha
jns
dec
cmp
mov
inc
add
mov
cmp
push
je
lcall
jmp
cwtl
inc
leave
outsl
ljmp
pop
or
ja
mov
fwait
ja
test
push
not
add
jp
jbe
mov
cmp
repz
clc
xlat
pop
ret
jb
sti
shlb
js
int3
test
xor
cmp
pop
fs
shlb
mov
pusha
mov
das
sub
pop
nop
mov
cmc
outsb
rolb
jo
bound
mov
rclb
movsl
rol
inc
stos
scas
flds
loopne
cmp
stos
js
test
or
jl
add
test
movsl
outsb
jne
ret
dec
call
push
test
sahf
icebp
and
clc
divb
popf
mov
inc
and
mov
push
test
loopne
in
fisttpll
test
out
mov
out
add
in
add
loope
pop
into
or
sub
mov
clc
nop
xchg
icebp
sub
out
and
popa
sbb
es
cld
data16
mov
cmp
popa
lods
les
cwtl
daa
movsb
dec
jl
sti
outsl
loopne
subb
mov
loopne
push
or
ss
mov
add
push
ljmp
dec
fadds
out
mov
jnp
pop
jp
cs
repz
pop
ret
gs
out
mov
out
dec
enter
jno
adc
loope
xchg
je
shll
cmp
inc
in
dec
out
aaa
or
stos
cmpsb
mov
mull
dec
shll
jge
fsubs
subb
xchg
sbb
jne
xchg
add
cmpl
push
push
bound
push
dec
mov
and
inc
aaa
adc
cmp
ja
lods
xor
aas
movsb
or
in
xchg
mov
mov
push
cmpsl
mov
orl
mov
cli
stos
cmp
in
or
mov
stos
jne
shrb
xor
xor
xchg
inc
push
test
stc
outsb
js
xchg
imulb
mov
mov
xchg
imul
xor
dec
pop
mov
mov
inc
xchg
adc
sbb
xor
push
sub
mov
int
xor
sbb
mov
movsl
insb
test
outsl
xor
dec
sar
or
scas
push
push
jne
jo
rorl
loope
push
out
fcoml
mov
dec
pop
cmp
faddl
imul
or
sub
in
pop
bound
and
popa
lds
orb
popl
das
movsl
insl
mov
loop
mov
xor
xor
mov
js
insb
jp
jmp
fdiv
movsl
loopne
sub
cmp
mov
sti
mov
lahf
mov
jecxz
xchg
mov
cltd
mov
rolb
pop
mov
adc
jp
and
jp
xchg
test
inc
fs
add
int3
dec
mov
call
add
xchg
pop
push
pop
mov
inc
test
test
clc
aaa
mov
xchg
pop
mov
add
xchg
xlat
stc
xchg
pop
add
das
stc
int
or
push
xchg
mov
icebp
ret
lret
mov
jo
sbb
bnd
and
lahf
imul
or
out
mov
inc
popa
jnp
xchg
lods
xor
and
push
fwait
xchg
sub
sbb
std
jmp
mov
push
iret
or
push
adc
push
mov
fbstp
popf
sbb
pusha
sbb
lahf
stos
add
roll
std
add
pop
xor
sub
std
xor
mov
push
pop
or
pop
xor
int
cltd
iret
sub
test
mov
cwtl
daa
lret
outsb
leave
and
iret
and
cmp
stc
xchg
pop
aas
mov
push
sti
dec
shrl
add
fwait
push
cmpsb
mul
sbb
mov
push
imul
sub
cmpsl
push
inc
aam
movsl
sbb
ret
jg
loop
mov
cld
inc
mov
mov
leave
inc
stos
in
bound
cmp
lods
mov
jle
imul
loopne
push
js
mov
mov
jo
lods
sbb
mov
cmp
and
push
repz
mov
cmp
negl
inc
movsl
lcall
inc
add
das
jle
ds
xchg
enter
pop
push
std
sbb
cwtl
loope
mov
outsb
add
lcall
mov
mov
push
clc
aam
push
or
dec
mov
dec
pop
sub
pop
pop
out
cmp
xor
dec
push
mov
dec
adc
mull
mov
cmp
dec
push
jne
cli
sub
jnp
sbb
push
cmp
xchg
icebp
and
movsb
dec
std
jno
xchg
cltd
cmp
popf
mov
mov
jns
bound
push
cmp
stc
aam
ftst
and
push
cmpb
daa
sahf
stos
aaa
insl
sub
imull
xchg
lahf
add
jns
lock
inc
xchg
fidivs
and
pop
lret
das
hlt
dec
lds
dec
rcrb
push
hlt
push
push
push
negl
in
sbb
or
mov
out
adc
mov
jne
cmpsl
jae
push
cmpsl
pop
mov
fisubrs
sub
icebp
push
cld
gs
ss
and
xchg
dec
cmp
in
or
push
add
adc
push
xor
test
jl
add
and
adc
fwait
je
push
cmc
call
lahf
dec
mov
test
sahf
inc
inc
fisttpl
adc
and
inc
fldt
out
out
shll
push
pop
sahf
negb
xor
fcoms
fnstsw
xchg
xchg
jnp
jmp
pushf
jne
insb
sbb
mov
test
lret
cli
jecxz
std
mov
mov
pop
movsb
adc
and
pop
cmp
inc
jne
dec
push
in
pushf
push
xor
and
xor
clc
mov
movsl
add
into
cmpsl
aam
jge
loop
push
xor
mov
xchg
mov
jle
inc
pushl
push
or
ja
icebp
cmc
mov
push
mov
aad
mov
fimull
cld
aas
js
push
cld
or
lea
and
mov
pop
and
aaa
inc
arpl
out
repnz
xchg
xor
fstl
std
mov
jns
popl
iret
sar
aam
cld
lock
adc
push
mov
popf
mov
sbb
test
orb
outsl
push
icebp
pop
xchg
rcrl
mov
jecxz
movsl
push
mov
popf
push
pop
loop
jl
add
popa
and
testl
in
pop
pop
loop
xor
cli
test
cmpsl
xor
outsl
fmul
mov
push
and
push
pop
or
lret
inc
shrl
mov
add
enter
cs
xlat
lea
and
andb
jecxz
jns
pushl
ficompl
mov
or
lods
ret
mov
push
mov
test
lahf
out
dec
mov
stc
or
dec
in
movsl
jae
cmp
imul
pop
lea
dec
decb
sahf
in
lods
pushf
jno
hlt
ds
xchg
cltd
scas
add
jmp
fadd
mov
or
fwait
push
push
mov
aam
mov
or
jno
pushl
outsb
fs
xchg
sub
lock
mov
in
xchg
mov
mov
and
mov
mov
lds
fnsave
scas
test
jo
xor
xor
mov
pop
movsl
cs
scas
out
or
lea
push
jns
and
mov
fmuls
sub
out
pop
xchg
xchg
xor
cltd
push
mov
in
test
adc
jb
xchg
out
popf
xchg
xchg
jbe
stos
push
sub
mov
outsb
xor
lret
push
mov
test
rorb
or
shrl
jecxz
jge
xor
cli
push
push
js,pn
jmp
ds
jae
ds
inc
ror
aam
inc
jno
and
popa
hlt
mov
outsb
mov
roll
pop
push
stos
xchg
add
xchg
addr16
fwait
stc
inc
enter
hlt
jmp
push
adc
bound
xchg
clc
test
aas
cltd
inc
dec
pop
or
into
mov
cltd
lods
aam
jne
icebp
push
movsb
int3
mov
idivb
inc
dec
ljmp
cmp
pop
cwtl
fs
mov
cmpsb
and
scas
cmp
sub
sub
push
in
inc
mov
mov
fdivrl
xor
test
mov
orb
pop
adc
lret
loope
xchg
dec
or
xchg
xchg
mov
cmpsl
lret
add
push
xchg
popf
aad
pop
test
negb
pop
jo
pusha
loopne
mov
jmp
pop
out
mov
mov
fldl
nop
lret
jg
and
aam
push
mov
jge
pop
lods
pop
sub
out
sbb
and
mov
rcr
test
mov
lcall
fcompl
and
inc
mov
lock
xor
dec
inc
mov
and
icebp
mov
test
leave
call
scas
test
sarb
xchg
xor
mov
cmp
add
push
inc
es
pop
shll
aad
pop
test
sbb
enter
rclb
jns
out
dec
xchg
imul
mov
into
popa
icebp
lahf
test
popa
dec
andb
insb
adc
inc
aas
and
pop
subb
lea
ficoml
and
sub
mov
out
ret
xchg
add
mov
add
sbb
sarl
xor
mov
or
lret
imul
nop
int3
mov
and
cmpsb
xor
subb
push
sti
rclb
push
jo
xchg
fcoms
inc
dec
jnp
xor
add
or
xor
insl
jg
xchg
mov
mov
scas
pop
icebp
jl
mov
lods
int3
and
andb
stos
in
test
ds
cmp
shrl
jo
aaa
adc
pop
loop
cltd
or
data16
dec
cltd
repz
rorl
adc
adc
jb
jecxz
pop
pop
push
test
pop
and
dec
xchg
mov
loop
out
sahf
xchg
sub
fsubrl
incb
jne
mov
inc
jne
pop
pushf
push
inc
or
jno
rcll
lods
and
xchg
jbe
and
cmpsb
imul
sti
push
xor
xchg
pop
mov
movsb
inc
inc
shrb
jge
pushf
add
xchg
sarl
push
xor
pusha
std
jb
push
inc
int
mov
jnp
sub
int
inc
push
xor
setg
mov
in
sbb
pop
jg
push
inc
fdivrl
add
and
loope
mov
shll
cmp
and
mov
aaa
fidivs
push
xchg
xchg
xlat
loope
loop
adc
adc
mov
lds
or
mov
nop
js
sbb
xchg
jle
popf
mov
and
jb
in
push
dec
int
or
popa
sub
xchg
push
jp
fstps
push
mov
push
jo
pop
cbtw
dec
rcrb
js
nop
lds
xor
mov
fs
mov
mov
bound
loope,pt
loopne
xor
add
test
xchg
jbe
mov
mov
jns
sti
mov
insb
sbb
test
pushf
jg
mov
iret
loop
pop
pushf
mov
or
and
mov
shr
inc
push
movsl
push
rorb
lods
ds
pop
sub
retw
das
ja
pslld
push
popf
xchg
cmc
sahf
out
xchg
loope
mov
xchg
je
push
notb
aam
sahf
push
jns
aas
fwait
lcall
push
push
mov
in
mov
sbb
cmpsl
ffree
jne
sub
add
test
push
inc
fucomip
jne
insl
xchg
aam
outsb
jne
daa
pop
jg
fsubr
jns
cmp
add
pop
into
shll
add
mov
sbb
sbb
call
jmp
push
jno
rolb
repnz
sbb
out
jae
es
rcrb
ss
pop
mov
repz
stos
push
cld
mov
mov
pusha
sub
mov
adc
icebp
insl
movl
jno
pop
xor
cltd
lea
aad
mov
lea
test
cmp
test
sbb
test
cwtl
add
pop
xchg
dec
mov
popf
mov
mov
lds
mov
xchg
movsl
pushf
mov
stos
cmp
testb
cs
lods
xchg
xlat
mov
push
cmp
mov
mov
ljmp
jge
popf
lods
mov
inc
int
push
cmp
jg
ss
outsb
pop
add
inc
lahf
cwtl
push
jb
addr16
rcll
mov
das
jb
xor
loop
xchg
sbb
adc
push
loop
jo
xor
or
cwtl
mov
push
add
shlb
cmpsl
lcall
xchg
mov
sahf
test
iret
notb
addr16
dec
mov
test
mov
jb
xchg
repz
out
cmc
insl
dec
jg
dec
insb
cmc
or
mov
xor
lret
out
stc
mov
mov
in
mov
shrl
add
mov
push
cmp
xchg
cmpsl
js
pop
inc
pop
jno
fcomip
icebp
imul
mov
push
lea
stc
and
push
shl
clc
shlb
inc
lock
js
pop
iret
xor
push
dec
rcll
leave
pop
xor
push
movsl
jns
sbb
out
pop
xlat
mov
jecxz
out
in
loope
inc
addl
add
mov
hlt
iret
mov
addr16
ljmp
mov
pop
scas
or
faddl
add
aam
cmpb
call
mov
and
ffree
rcrl
ret
cmpsb
and
and
mov
lret
stos
bound
imul
cld
adc
ds
inc
xchg
or
sahf
test
arpl
push
mov
shll
rclb
xor
and
sbb
jecxz
andb
push
push
fistpll
mov
aam
fwait
pop
movsl
cwtl
sbb
jne
out
add
cmpb
pop
cmpsb
test
xor
xlat
mov
pop
pushf
icebp
sub
fs
inc
mov
cmc
fadd
inc
jae
adc
sbb
inc
jmp
sub
jae
shrl
insl
aaa
cli
mov
push
mov
icebp
testb
or
dec
popf
sub
movsl
push
jl
and
sbb
adc
gs
add
test
mov
inc
sub
or
shr
lcall
and
sub
in
leave
movsl
pop
rcrl
popa
jecxz
fisubs
fnstcw
sub
das
lods
mov
adc
jb
scas
inc
mov
or
std
cltd
push
fisubs
mov
cmpsb
insb
jnp
icebp
push
cmp
sub
and
sbb
cmp
pop
pop
inc
inc
sub
aad
dec
inc
test
push
aaa
scas
dec
mov
stc
cmp
xchg
jb
or
jmp
fisubrs
xor
xor
xchg
pop
cs
hlt
inc
jbe
adc
xor
push
stos
gs
movsb
popf
sub
cmp
xchg
jb
cmpsl
loopne
sahf
mov
stc
shlb
mov
mov
je
shrb
add
xchg
pop
sbbb
push
push
jl
sub
inc
mov
push
mov
inc
outsw
call
add
cmp
in
in
movzbl
cmpb
mov
or
negl
cmp
mov
cmp
fs
cmp
and
adc
arpl
outsb
int
fisttpll
cmc
xchg
jp
mov
in
push
imul
jne
inc
or
inc
jb
icebp
xor
cmc
pop
popa
adc
ljmp
dec
aas
add
mov
mov
dec
jge
cltd
lods
loop
insl
lods
and
sahf
mov
in
ficoms
xor
lods
stos
cld
pcmpeqb
hlt
mov
insl
sbb
pushf
mov
scas
ficompl
out
icebp
sbb
adc
gs
add
icebp
jg
sbb
lret
or
movsb
out
cmpsl
enter
xor
fwait
add
mov
in
mov
lods
jecxz
repz
mov
mov
int
push
inc
movsl
mov
jns
and
dec
ds
clc
xor
mov
fwait
jle
xor
gs
insb
ss
mov
and
cltd
orl
pop
inc
ffreep
lds
cmp
out
xor
aad
test
xchg
or
add
mov
mov
add
jno
test
inc
pop
or
sub
jge
or
jo
cs
rcrl
xor
cmp
pop
jmp
incl
inc
sbb
push
addr16
mov
cs
pop
lret
xchg
adc
add
mov
in
mov
push
ja
addr16
mov
mov
cmp
in
cli
fldenv
ljmp
imul
ret
dec
cmp
inc
lea
mov
cld
or
push
lds
mov
pop
mov
leave
cmpsb
mov
sbb
mov
cwtl
lods
mov
lahf
orb
cmpsl
xlat
nop
fisttpl
push
add
cld
mov
les
cld
jae
add
int3
xchg
cwtl
scas
movsb
or
add
int3
pop
and
mov
outsb
jno
jle
mov
push
sbb
mov
jle
scas
sahf
mov
test
stc
nop
xor
jno
cmp
inc
out
insb
jecxz
sub
movsb
xchg
adc
mov
dec
pop
adcb
push
pop
rolb
xlat
outsl
adc
cmp
push
outsb
mov
cmp
push
sti
or
xor
add
lock
and
or
jo
mov
in
xchg
fstpl
mov
adc
inc
test
lock
inc
cltd
fisubrs
xchg
mov
sub
aad
aas
cmp
mov
add
xchg
inc
out
in
or
add
insb
xlat
push
pop
xchg
hlt
dec
xchg
push
mov
mov
dec
mov
dec
pop
inc
test
mov
and
push
dec
cmpb
cltd
jbe
adc
mov
fldenv
mulb
repnz
and
fiaddl
sub
inc
jl
scas
push
ret
out
movsl
int3
adc
and
pop
mov
mov
shlb
xchg
lods
dec
stc
adc
rolb
adc
sub
dec
xchg
and
and
aam
jl
fiaddl
dec
mov
jns
jne
sbb
push
hlt
outsl
push
lods
mov
js,pt
push
pop
add
popf
xlat
add
fadds
or
and
fcomi
fsubrs
aaa
sahf
mov
insl
push
imulb
inc
ljmp
insl
jbe,pn
pop
xchg
into
mov
aad
imul
jbe
pop
lahf
mov
push
lods
out
sarb
pop
popf
sbb
mov
rcl
sbb
aad
pop
xchg
add
cmp
outsb
push
sub
pop
push
in
int3
cmpsb
adc
dec
cwtl
aam
and
inc
mov
movsl
ficoms
pop
mov
stos
mov
jbe
arpl
mov
lcall
insl
fcomps
lods
cltd
sbb
mov
add
jbe
es
sbb
or
imul
cs
or
fisubrs
cmpsl
jb
aad
in
lret
iret
jae
cmc
ljmp
inc
sub
cmp
jmp
add
addb
out
int
fistps
add
fs
ficomps
into
push
movsb
adc
lods
out
stos
pop
lods
mov
mov
adc
and
xlat
ljmp
xchg
jmp
push
aad
pop
jmp
jo
shr
jb
adc
and
insb
or
loope
inc
sti
jmp
mov
or
xchg
and
jecxz
lcall
jecxz
adc
and
fldl2e
outsb
mov
mull
lcall
adc
mov
or
test
std
enter
cld
or
fstl
mov
jl
jnp
mov
or
inc
aaa
test
push
push
insl
lods
mov
jno
cltd
imul
lea
dec
push
pop
mov
aaa
das
popa
loopne
push
adc
rorl
mov
add
imul
inc
insl
fisubs
into
mov
xchg
cmp
cs
ljmp
add
xor
shl
mov
pop
adc
push
sub
fdiv
dec
jae
loopne
push
jge
hlt
int3
aad
les
movsb
push
dec
jno
scas
movsb
jge
xor
lcall
cmc
cmc
into
push
xchg
scas
push
or
mov
rcl
pop
popf
int
clc
xor
jno
jo
hlt
das
sub
jle
imul
movsl
jp
out
sbbl
jb
pop
call
ja
dec
xchg
and
cld
push
mov
stc
xlat
js
sahf
adc
sarb
jmp
cmp
mov
or
mov
lret
pop
mov
sbb
sti
scas
add
jmp
cmp
fadd
loop
push
push
xor
and
fdivr
mov
outsb
mov
xor
mov
cmp
and
negb
xchg
fsubp
add
and
dec
cmp
adc
popf
out
aad
mov
fucom
addr16
test
mov
xchg
push
jle
push
out
inc
jne
pop
pop
jge
icebp
mov
dec
stos
ss
xor
push
push
popa
add
stc
sub
fcmovnb
stos
insb
cmpsb
mov
or
adc
push
and
enter
mov
add
popf
daa
inc
mov
out
aam
xchg
sbb
mov
sbb
cmp
or
inc
or
inc
lret
inc
pop
pop
test
fsubrs
add
add
lea
dec
daa
out
adc
xor
add
xchg
ljmp
outsl
mov
adc
jmp
je
mov
mov
adc
fildl
jno
dec
scas
mov
or
lar
xchg
mov
es
lret
adc
shlb
push
push
mov
ja
and
mov
mov
jno
or
sub
std
xchg
nop
dec
cs
fldcw
movsb
movsb
or
sbbl
scas
shll
test
pop
xor
dec
test
mov
push
test
leave
and
push
cmpsl
insl
jl
sbb
jge
jns
jo
roll
ja
into
addr16
pop
fs
addl
loope
loope
aam
dec
imul
ss
lcall
sub
jns
inc
adc
out
dec
cld
sub
push
jp
sub
dec
movsb
adc
scas
dec
filds
fisttpll
and
push
stos
dec
cld
mov
inc
jecxz
mov
fs
inc
jcxz
sti
js
fmuls
icebp
push
int
mov
dec
gs
repnz
jecxz
loopne
sbb
cltd
inc
pop
mov
lcall
ljmp
lea
ljmp
inc
loopne
cmpsl
lods
xlat
mov
repz
cmovno
inc
pusha
scas
mov
xchg
mov
loope
add
lahf
mov
lods
out
mov
dec
ss
and
push
pop
xlat
cmpsl
adc
inc
into
dec
cmpsl
addl
in
mov
jne
test
xchg
xchg
add
dec
mov
popa
xchg
dec
jb
shrb
jb
and
rclb
ret
std
je
scas
cli
repz
rorl
pop
sub
in
pusha
add
mov
jg
sbb
insb
add
or
js
xor
jae
les
hlt
pop
cld
mov
jecxz
scas
jno
add
xor
inc
lea
cltd
xchg
aad
pusha
lea
dec
cmp
push
xor
push
mov
ds
ja
jb
call
push
inc
stc
xchg
inc
push
jae
in
fldl
addl
or
mov
or
fisubrs
mov
dec
sub
xchg
xchg
sbb
cmp
cmpsb
pop
sbb
pop
test
mov
or
cld
xorl
push
cli
pop
cmpsl
jp
int3
das
pop
jb
fldenv
nop
xchg
into
mov
rol
jno
cmp
mov
out
or
inc
insl
lahf
push
int
sub
sbb
add
pop
xlat
rcrb
outsl
enter
leave
fsubs
adc
mov
mov
or
xor
imull
push
ja
int3
and
cmp
movsb
mov
loopne
out
int3
lock
fisttpll
mov
rorl
fiaddl
fdivl
movsl
mov
sbb
add
ss
cltd
push
aas
sub
lea
loope
sub
mov
lcall
mov
mov
orb
push
nop
bound
cmp
cmp
xchg
jno
ss
jnp
mov
jnp
mov
mov
xor
adc
or
adc
pop
nop
in
movsb
out
stos
fisttps
mov
adc
add
nop
fsubrl
or
jae
push
outsb
sbb
shll
mov
mov
mov
adc
daa
je
ss
leave
movsl
mov
stc
pop
xor
sbb
pushf
arpl
jg
loope
jecxz
dec
sub
int3
add
int
fildl
pop
cltd
pop
and
inc
or
gs
repz
negb
cmc
jge
daa
cmpsl
sbb
xchg
or
sbb
test
mov
mov
push
loope
gs
push
dec
jecxz
stc
or
fcmovnbe
fs
mov
mov
xchg
jle
mov
sub
sbb
clc
or
xchg
mov
iret
cmp
push
std
push
push
addb
loop
repz
ret
rcrl
mov
arpl
or
push
mov
arpl
adc
sti
mov
dec
mov
mov
pop
sahf
add
shlb
jno
xchg
push
in
mov
add
aaa
aas
jnp
mov
test
in
stc
push
mov
and
jl
mov
adc
add
pop
bound
enter
ror
sti
les
push
mov
nop
dec
fstl
mov
shr
mov
jbe
std
sub
fdivl
xor
daa
cmp
add
dec
ja
lcall
adc
push
inc
fisttpl
jle
fidivl
test
orl
test
add
adc
xor
out
xor
pop
mov
daa
and
mov
clc
add
add
mov
gs
das
push
xlat
push
outsl
cmp
rclb
adc
push
mov
insl
adc
add
inc
push
mov
jno
or
lahf
mov
les
sub
test
xchg
pop
jb
mov
push
mov
jae
xchg
xor
mov
sub
or
stos
loopne
mov
cli
loope
lock
mov
outsl
nop
out
decb
and
xchg
sbb
jp
fildl
sub
in
in
cmpsb
mov
sub
mov
sbb
jnp
les
and
jns
xchg
test
sbb
ja
hlt
orb
xor
fs
shl
mov
std
mov
imull
pop
pop
push
pop
xor
push
and
icebp
addr16
push
inc
sbb
stos
aaa
xchg
push
out
js
daa
sub
ss
loopne
stc
xchg
jmp
dec
test
enter
inc
fnstcw
and
rcll
jecxz
xor
ds
daa
adc
leave
jecxz
scas
into
ror
js
add
or
sub
ficoml
or
fisttps
pop
aad
mov
addb
cltd
dec
int
sub
cmp
push
mov
dec
push
sub
lcall
mov
loope
loope
mov
repnz
loop
mov
jecxz
and
jo
cmp
jg
xchg
sub
and
jne
andl
int
adc
mov
sbb
jnp
fildll
lds
pop
rcr
out
jne
push
pop
std
xor
sub
insb
sub
jecxz
sub
sbb
jnp
xchg
mov
pushf
jge
loop
pop
push
sahf
jnp
xchg
arpl
mov
fistpll
movsb
jge
aad
jno
es
push
jmp
xchg
push
in
fsubrl
push
mov
mov
out
outsl
pop
test
inc
xor
test
mov
jmp
out
aad
stos
dec
jae
mov
daa
data16
sbb
pop
int
or
jo
out
loope
xor
push
pop
mov
adc
xchg
sub
lea
movsb
push
lods
jmp
lea
jle
jmp
mov
lahf
je
mov
aam
or
jl
push
cmpsb
arpl
js
idivl
out
inc
cmp
or
dec
pop
in
xchg
dec
xchg
shll
lods
xor
jnp
push
lahf
es
movsl
add
shl
xchg
jle
add
mov
mov
xchg
lret
dec
pop
call
push
adc
cmpl
xor
xchg
and
xchg
stos
ror
xlat
mov
xor
mov
mov
outsl
mov
andl
sub
cmp
nop
mulb
jbe
mov
xchg
cli
je
pop
aad
ds
ss
ljmp
push
dec
cmp
mov
inc
fs
insl
incb
pop
iret
xor
jns
dec
cmp
mov
hlt
mov
inc
mov
repnz
int
and
ret
jmp
lods
cmp
aad
out
mov
and
outsb
insb
add
mov
into
push
ret
in
jnp
test
out
ret
lret
add
cmpsb
std
xor
cmp
pop
out
aad
add
pushf
loope
rclb
sbbl
and
inc
pop
cmc
pop
sysret
popf
mov
in
movsb
cltd
sbb
rorl
push
loope
insl
cmp
mov
or
xor
add
mov
dec
fnsave
subl
popf
xchg
jae
or
aas
and
add
in
push
frstor
sub
dec
pop
inc
xchg
mov
xchg
call
mov
add
movsb
dec
jmp
sbb
dec
scas
negl
icebp
arpl
pop
jns
les
push
testb
sahf
sub
jne
push
aad
jns
xchg
or
dec
out
bound
xor
jns
lock
insb
popf
push
lock
shrb
leave
cmp
push
push
mov
xor
jo
mov
icebp
in
fisubrl
and
cmp
cmp
or
xor
mov
pop
hlt
cwtl
add
ljmp
cmpsb
cmp
dec
adc
fsubl
inc
or
negb
cmpsb
push
cmp
inc
xor
addr16
sbb
out
adc
scas
xchg
sbb
sbb
stos
pop
mov
inc
jg
insl
fs
test
mov
outsb
dec
add
gs
inc
push
jno
pop
pusha
xchg
lds
inc
jp
adc
or
stos
fisttps
fidivrs
xchg
cmp
shlb
push
xor
into
arpl
das
push
inc
jmp
push
in
pop
dec
fcmovb
popa
test
sbbb
cld
or
push
scas
loope
and
or
jge
jecxz
lods
dec
cmp
jns
push
jb
mov
insb
push
lods
ljmp
test
sub
jge
jge
mov
addr16
jb
adc
cmc
mov
fidivs
aaa
stc
xor
mov
cltd
fcompl
hlt
negb
movsb
daa
fmull
mov
xor
inc
aam
sub
fsubrs
sahf
shrb
addr16
mov
lret
fdivr
cmp
ret
sub
fstpt
cwtl
fdivl
idivl
popw
and
mov
fdivs
dec
push
repnz
xchg
cmp
mov
adc
imul
jae
mov
sub
lods
or
xchg
roll
int
sti
inc
push
fdivr
xchg
jecxz
outsb
les
or
scas
push
mov
lods
loop
mov
clc
orl
ficoml
out
xchg
push
pop
es
movsb
jno
ss
inc
pop
pop
jmp
clc
mov
add
insl
inc
addr16
jo
pop
xchg
sub
dec
push
jae
in
cmpsl
aam
adc
add
xchg
cltd
push
pop
push
xlat
iret
push
inc
mov
popf
arpl
jecxz
pop
sahf
push
out
imul
push
inc
pop
fwait
daa
jmp
nop
and
mov
scas
pusha
fwait
xchg
cmpsl
mov
outsl
sub
xchg
repz
aaa
xchg
xchg
xor
and
cmp
and
inc
mov
or
xor
fnstsw
adc
jns
xchg
jno
jl
scas
or
das
out
mov
mov
call
add
push
pop
xchg
in
fildll
lds
add
std
cwtl
xorl
mov
mov
sbb
test
xlat
lods
fstpl
push
mov
cmpsl
lock
xor
pop
outsl
pop
mov
insl
push
push
shl
les
mov
xchg
arpl
cmpsl
mov
test
inc
and
sub
cmpsb
in
lods
fdivrl
xor
jmp
imul
aad
pop
jo
ret
in
xor
ljmp
js
pop
rcll
pop
int3
out
push
into
xor
arpl
out
int
outsl
pop
scas
lcall
addl
in
lcall
movsb
xor
subb
leave
ret
sub
popa
cltd
and
jge
lds
xchg
pop
sarl
jne
ja
xchg
mov
add
mov
lret
pop
push
or
mov
iret
xchg
iret
mov
bound
cli
inc
das
cmpb
mov
mov
xchg
dec
rolb
repz
add
enter
and
sub
sub
pop
sbb
inc
arpl
stc
mov
push
cmovg
test
push
xchg
jge
and
inc
lahf
test
xor
adc
sarb
and
mov
inc
pop
rorb
sbb
popf
add
pop
fistpl
adc
jns
adc
pop
inc
imulb
sub
mov
repz
mov
icebp
mov
mov
jle
dec
adc
icebp
mov
pop
fstpt
repz
pop
sbb
mov
stos
cmp
ret
add
leave
cmpsl
mov
lods
cmp
int
insb
push
cmp
jmp
or
jecxz
cmp
fwait
loop
cmpsl
sbb
ljmp
xor
std
faddl
mov
add
call
cmp
lret
or
sub
int
inc
sbbl
mov
cs
popa
pop
sub
cmp
scas
cmp
cmpb
mov
jl
add
cmp
leave
dec
lahf
rorl
lcall
gs
mov
sbb
mov
fwait
pushf
sub
xchg
push
xor
in
insb
mov
insl
inc
aaa
ds
push
or
mov
subb
jl
dec
sbb
lds
pop
cld
cmc
lret
in
fstps
cltd
fcmovnbe
movsl
cmpsb
sbb
sub
pop
pushf
test
dec
std
mov
aaa
pop
adc
jnp
in
decl
inc
push
in
test
pusha
cmp
fldenv
pop
jno
aam
rorl
sahf
leave
cmpsb
test
sub
cmp
mov
fs
icebp
sub
lods
test
call
cmp
test
add
jo
ljmp
mov
outsl
mov
inc
in
inc
mov
ss
add
cmp
aaa
and
lods
add
or
pop
nop
pop
xchg
ja
or
test
inc
fisttps
xor
mov
scas
pop
sub
bound
lea
lock
rorl
sub
cwtl
add
ds
push
test
and
or
fwait
es
repnz
addr16
pop
test
jne
js
rcll
sbb
repnz
push
fwait
mov
xor
ret
insl
lcall
cs
out
push
cmp
pop
push
push
sbb
ja
les
fcmovu
add
cmp
movsl
nop
xchg
sbb
test
insb
inc
xor
sub
inc
fwait
xor
clc
lret
cmp
lcall
lock
repnz
adc
pop
sbb
mov
sbb
loope
dec
pop
xlat
xchg
call
ret
test
ret
mov
xor
dec
into
or
repz
sbb
mov
or
sub
and
and
adc
pushf
shlb
std
mov
jg
xlat
mov
movsl
sub
dec
fs
xchg
orl
das
xchg
adc
and
pop
outsb
and
ja
dec
mov
xor
fnstsw
lock
push
lods
jle
gs
test
jp
loopne
jno
rcll
push
test
pop
mov
mov
mov
inc
cmp
mov
imul
test
dec
pop
arpl
mov
popf
pop
inc
push
lret
xor
cmp
xor
push
push
ss
add
xchg
sbb
aas
mov
not
fst
and
jnp
and
data16
int3
push
int3
fidivrs
push
fistl
jge
out
lcall
or
in
es
fsub
jecxz
mov
mov
pop
inc
mov
jno
cs
in
mov
xlat
data16
out
pop
imul
mov
xchg
rclb
sbb
lods
mov
imul
pusha
and
ds
imul
std
clc
xor
ficompl
popf
imul
push
add
jle
cmp
inc
bnd
mov
lock
std
jle
fdivrl
cmpsl
cwtl
bound
jge
sbb
movsb
cmpsb
shlb
gs
inc
sahf
aad
mov
cld
sbb
sub
jae
jnp
fwait
cmp
in
insb
aas
daa
lds
std
fdivrl
ss
or
or
daa
loope
pop
jnp
jno
pop
sbb
pop
lahf
jae
addr16
test
sbb
inc
xor
fsubl
into
mov
jle
push
pushf
xchg
movsb
pusha
test
add
mov
leave
jnp
sub
xchg
lret
shlb
dec
cmp
lea
pop
addl
lahf
add
mov
adcl
mov
lea
mov
insl
ljmp
insl
bound
scas
out
add
mov
mov
mov
pop
pop
rcrl
or
mov
dec
mov
mov
repz
ret
sbb
jae
or
test
testl
mov
call
jo
movsb
fildl
xchg
xor
sbb
cltd
bound
xlat
call
or
fsts
push
and
mov
inc
sti
push
into
mov
outsl
andl
xchg
add
or
ffreep
pop
mov
test
xchg
popa
bound
gs
loopne
jmp
lcall
outsl
inc
ss
and
daa
xor
and
imul
icebp
andl
add
adc
pop
mov
loope
test
push
lret
jp
xchg
je
cmp
mov
mov
imul
adc
mov
xor
movsl
jg
mov
jmp
clc
lret
lds
pushf
pop
xchg
hlt
andl
adcl
mov
cltd
ret
xchg
daa
or
jmp
add
repz
out
andb
pop
fisttpll
jbe
cmp
add
push
and
mov
es
int3
aad
in
xor
lods
loope
mov
push
call
push
inc
addr16
pop
or
movsl
imul
cmpsl
mov
ret
mov
sub
out
sub
or
sbb
aad
addr16
xchg
sbb
shrb
jecxz
lock
pop
jo
pop
fwait
xor
pop
pop
hlt
or
aas
fidivrs
jmp
mov
mov
sbb
dec
lods
push
mov
jnp
xchg
mov
mov
scas
ds
cmp
inc
ret
xchg
mov
xlat
imulb
and
shrb
jbe
call
iret
repz
dec
cmp
loope
out
movsb
inc
mov
inc
dec
add
adc
mov
lahf
or
and
add
in
cmpsl
push
test
inc
xchg
jnp
imul
xchg
jmp
sbb
in
jle
xor
lcall
add
inc
imul
sub
outsb
in
mov
es
push
rcl
out
xchg
std
mov
sbb
mov
fimull
and
inc
pusha
xor
pop
dec
in
xor
cmp
idivl
pop
rclb
pop
stos
lds
and
cltd
rorl
mov
mov
test
pop
les
pop
ret
mov
sub
sub
stos
mov
rorl
dec
fisttpl
fs
jl
das
push
mov
inc
jae
cs
xor
pop
xor
xlat
xlat
push
cmc
daa
es
fwait
adc
in
aad
gs
movsl
je
mov
sbbb
inc
andl
stos
sarb
lock
enter
cmp
bound
add
les
cmc
cmpsl
dec
dec
in
aaa
and
loope
lret
xchg
adc
jne
add
ret
pop
lret
xor
aas
int
push
loopne
cmp
ds
lahf
addr16
xchg
or
inc
lds
mov
in
ss
repz
out
nop
mov
int
pop
jnp
hlt
cli
out
lock
mov
xchg
pop
mov
sub
or
sbb
les
es
jne
arpl
addl
jl
xor
adc
and
sub
push
xor
ss
in
push
scas
mov
pushf
cmpsl
inc
and
fisttpll
mov
lds
lcall
cmp
push
fstpt
scas
rcll
or
mov
mov
add
outsl
mov
mov
inc
jecxz
cmp
mov
adc
rorb
fs
sub
fcmovu
mov
mov
or
pop
jmp
cmc
add
jecxz
cmpsl
cmpsb
inc
xor
sub
cld
loop
fs
mov
cmc
roll
or
pop
aad
div
cmp
fdivp
cli
cmp
push
dec
iret
jmp
loope
lods
or
jp
cld
and
out
call
and
jecxz
lret
subb
dec
icebp
jnp
mov
push
imull
xchg
cmc
mov
push
pop
int3
sahf
loopne
xchg
mov
addr16
pop
daa
aam
cmp
and
mov
xchg
mov
inc
mov
aad
xchg
add
aam
lods
mov
xlat
or
pop
out
pop
and
pop
imul
in
sub
and
stos
cmp
sub
faddp
push
inc
test
test
mov
movsl
jl,pn
nop
push
add
mov
jbe
jnp
inc
and
fisttpl
add
jl
cmpl
adc
lds
mov
pop
push
xchg
push
ljmp
ds
loope
mov
sbb
sub
jl
mov
repnz
xchg
dec
adc
cmp
xchg
push
rolb
test
add
movsb
arpl
lock
lcall
cltd
movsb
imul
or
pop
add
cli
pop
sbbl
push
xchg
cmp
ljmp
adc
aaa
push
dec
pop
test
imull
fidivl
dec
sbb
mov
pop
movsb
out
xor
mov
or
cmp
push
jne
aam
pop
mov
add
pop
stos
into
and
cld
xor
add
mov
or
lds
test
divl
sbb
dec
mov
cmp
sbb
aam
mov
jle
orl
into
sti
cmpsl
call
rorb
jb
and
lret
jecxz
jl
orl
dec
mov
push
xlat
rclb
iret
jne
test
or
decb
rol
lret
xchg
cli
ss
add
inc
inc
ret
mov
aam
xchg
nop
or
flds
xor
mov
pop
arpl
out
dec
mov
fadd
cmp
pop
dec
mov
aad
pop
mov
sti
cld
add
mov
dec
mov
inc
xchg
xchg
lret
pop
lret
aad
jp
dec
jae
or
fists
loope
inc
pop
nop
arpl
out
mov
sub
lds
fadd
test
sbb
rolb
jmp
int3
add
shlb
push
lea
sbb
jns
adc
and
xor
inc
call
xchg
cmc
mov
out
imul
and
fbstp
dec
enter
and
rorb
mov
lret
mov
add
xchg
pop
mov
push
addr16
fwait
add
aaa
pop
bound
std
sub
fistpll
dec
jmp
lahf
xor
mov
stos
loope
sbb
xchg
cmpsb
loop
or
jge
jnp
push
cmp
pusha
cwtl
bound
sahf
loope
mov
test
aad
inc
mov
lahf
mov
pushf
sub
ss
in
mov
fstl
or
and
sub
hlt
mov
mov
ss
lods
push
gs
and
xchg
cmp
add
or
and
push
vfmadd231pd
cmp
cmp
mov
cmp
mov
adc
mov
out
aaa
adc
movsb
iret
femms
mov
mov
fists
push
sarb
or
ljmp
xchg
fwait
divl
andl
mov
mov
push
roll
js
popf
ja
imul
xchg
mov
sbb
sub
pop
mov
and
mov
xor
jmp
xchg
xchg
scas
ds
pusha
add
mov
cli
aas
imul
xchg
iret
das
cwtl
fucomi
test
test
jne
jg
lea
mov
mov
sbb
repz
jg
push
icebp
push
pop
lea
sub
and
addl
and
add
lods
xlat
lcall
cmc
push
inc
push
cmp
adc
mov
jle
or
popa
lahf
mov
add
cmp
call
cs
aad
lds
test
lods
das
push
xchg
sbb
popa
cmp
int
xor
pusha
xor
iret
les
cmp
sti
es
in
mov
js
fdivrl
add
xor
inc
les
sbb
aam
mov
add
add
adc
ljmp
mov
inc
andb
fimull
and
addr16
mov
push
push
mov
jb
jl
cmp
das
or
iret
out
adc
dec
std
mov
sbb
inc
push
ja
hlt
ror
out
mov
cld
or
cltd
pop
data16
cld
pop
push
jno
xchg
out
out
jg
sarl
xor
push
add
cmp
mov
loopne
movsl
mulb
push
fidivrs
jl
cmc
mov
daa
jne
shlb
fmuls
xchg
rcll
jmp
jecxz
js
inc
cwtl
outsl
cmp
push
add
push
inc
sub
mov
movsl
cltd
repnz
and
push
push
int
aam
or
or
movsl
mov
mov
lret
outsl
sub
lcall
lret
test
ja
loope
mov
fldl2e
inc
js
loop
cmp
in
les
addb
fs
shlb
mov
or
stc
mov
in
mov
inc
xchg
int
sub
mov
adc
push
jbe
sub
jb
and
fistpl
mov
sbb
mov
xor
xchg
test
es
cltd
pusha
jb
fstps
mov
pop
mov
repz
sub
rcl
push
test
sbb
ds
or
sub
dec
sub
or
jecxz
outsb
push
test
xor
js
mov
or
add
pop
sub
xlat
add
jb
icebp
xchg
and
popa
lcall
lea
push
or
sbb
cld
test
cmc
aas
negl
dec
add
xchg
shlb
nop
mov
ds
cld
cwtl
sbb
xorps
cmpb
xchg
lcall
hlt
in
sbb
outsb
cmp
xchg
mov
xor
pop
mov
dec
mov
mov
jb
nop
sbb
leave
or
xchg
lods
jb
lock
mov
imul
loope
or
stos
adc
mov
jno
jbe
mov
aad
ret
inc
cmp
add
push
push
aas
loopne
mov
ja
dec
insl
shl
xor
movsl
pushf
xchg
sbb
adc
lret
orl
jp
sub
shl
mov
dec
jg
pop
loopne
out
lea
fdiv
jl
cmpsl
inc
jnp
adc
sbb
in
jl
sub
adc
loop
dec
add
xor
lods
mov
xchg
fldcw
or
sub
dec
xchg
mov
mov
lahf
sbb
adc
and
stc
hlt
xlat
cwtl
int3
push
rclb
stc
add
push
mov
push
mov
lock
mov
pop
and
jg
mov
test
std
stos
lods
call
outsb
lret
cwtl
pop
pop
into
or
jb
mov
loopne
and
xchg
mov
push
test
jl
loop
xchg
jb
mov
pop
pop
cmc
adc
adc
mov
sub
sbb
push
ds
add
outsb
and
cmpsb
leave
push
cmp
pop
lret
mov
mov
and
fstps
xchg
pop
adc
scas
sub
pop
and
lds
adc
stc
icebp
shrl
mov
fnstsw
pop
lahf
pop
pop
inc
adc
fildll
leave
inc
daa
add
pop
out
ljmp
mov
xchg
mov
test
mov
gs
adc
xlat
inc
std
add
cmp
sbbl
cmp
push
xchg
movsl
int
push
add
shll
lahf
aam
fwait
lahf
int
fstps
std
add
cmp
aam
xor
popf
stos
sahf
scas
pushf
jb
js
popa
imul
out
int3
cmp
dec
push
dec
jmp
outsl
scas
jnp
jp
mov
stc
in
xor
push
add
and
jo
cmp
xchg
or
or
push
cwtl
push
les
add
xchg
lods
mov
lock
jae
inc
dec
xor
push
cmpsl
outsl
lahf
xlat
inc
or
cmp
leave
mov
test
adc
repnz
or
in
xchg
pop
shl
mov
pop
sub
xor
xchg
popf
gs
scas
pop
jo
mov
mov
pop
xchg
and
popa
dec
xchg
dec
dec
jmp
jmp
je
dec
shll
pop
mov
jb
pop
mov
cltd
imul
addr16
jno
loop
lcall
pop
sub
mov
sarb
fisttps
or
mov
lret
decb
mov
vpsubusb
push
sub
roll
jg
jg
sub
jge
mov
sub
xchg
std
adc
jbe
push
mov
add
in
xchg
push
bts
sub
mov
repz
mov
add
and
divl
enter
cmp
aaa
jmp
mov
mov
inc
outsl
jb
xor
ret
xchg
nop
dec
sbb
pop
lea
or
adcl
pop
or
ljmp
into
dec
popa
inc
push
mov
add
sub
enter
adc
mov
ljmp
mov
scas
ret
pop
pushf
loop
lods
es
pop
scas
mov
rcrb
mov
xchg
cmp
lahf
xchg
mov
or
fdivrs
jno
xor
adcl
push
out
dec
xchg
jle
ds
cmp
mov
push
or
dec
lcall
in
mov
or
xchg
push
frstor
mov
call
sbb
add
dec
lahf
mov
loop
addr16
and
mov
fidivrs
mov
cmp
lret
out
adc
stos
push
or
test
jno
dec
daa
loop
std
pop
sbb
fldl
push
dec
out
mov
jle
pop
push
mov
xchg
aas
sarb
daa
movsb
stc
sbb
shll
fiadds
or
scas
cmpsl
mov
sahf
shrl
lods
cwtl
imul
lock
xchg
out
movsl
mov
dec
jne
out
subb
movsb
dec
hlt
cld
inc
mov
push
push
push
jecxz
sub
or
dec
ret
or
dec
xor
xor
mov
xchg
outsb
mov
lods
push
fst
dec
andl
jo
fisttps
add
dec
cmc
fisubs
mov
xlat
add
fstp
lahf
ret
fwait
cmp
add
jb
icebp
leave
ljmp
mov
push
push
les
ss
xlat
inc
repz
jnp
push
icebp
sbb
xchg
adc
fdivrl
fwait
or
arpl
and
xor
into
adc
add
popa
adc
sub
jne
mov
loop
cmpsl
orl
mov
idivl
add
add
jg
nop
clc
jbe
sub
adc
pusha
lods
insb
repz
mov
mov
or
out
cmp
in
push
aas
xchg
pop
ret
mov
add
mov
lods
rcrb
pop
inc
cld
out
daa
push
sbb
stos
out
lds
inc
xor
push
pop
testb
pushf
mov
xor
fs
cwtl
add
ret
mov
cli
fnstenv
and
jno
xchg
scas
mov
sub
repz
push
inc
dec
in
daa
xor
mov
push
mov
ret
and
rcrb
and
mov
mov
mov
cld
adc
out
pop
pop
mov
cmp
out
loop
stos
fwait
into
sbb
jmp
adc
cs
fdivs
loop
idivl
jg
mov
sbb
popf
push
xor
aaa
jle
or
dec
fsubl
push
rolb
ficompl
daa
cmpsl
fs
mov
scas
jnp
jg
adc
xchg
xor
test
outsb
jns
out
xor
inc
mov
xlat
dec
push
rolb
xor
call
cld
add
call
xchg
call
imul
or
adc
movsl
dec
jg
jne
jl
sub
sbb
out
nop
adc
fwait
push
dec
push
xchg
test
mov
bound
out
lcall
shll
xchg
insb
add
in
pop
inc
mov
xlat
jl
dec
add
into
scas
or
sub
lock
ljmp
aas
pop
inc
pusha
mov
call
jns
sbb
dec
xchg
or
mov
cmpsb
aas
mov
xor
in
mov
cld
or
add
sub
sbb
jb
sbb
add
push
and
xor
gs
sub
xchg
add
xchg
sahf
push
aam
inc
dec
or
adc
cmp
sbb
fsts
jmp
pushf
enter
into
in
xor
stos
lock
pushf
cmp
loopne
sub
aaa
cmp
aam
push
jae
cmp
xchg
jo
xor
jmp
std
push
mov
pop
repz
pop
aaa
mov
push
push
xor
out
cmpsb
mov
movsl
stc
sub
cmc
dec
xor
cmpsl
jae,pn
test
icebp
mov
cmpl
cmpsb
daa
jo
adc
pop
and
aas
inc
rolb
xchg
adc
pop
cmc
cmp
cld
jl
sbb
mov
punpckhbw
cli
movsl
lret
inc
insl
icebp
sbb
cmp
push
testl
dec
jecxz
cmp
dec
inc
lret
xchg
ds
cmp
add
pop
dec
stc
fnstsw
or
movsl
into
mov
pop
sbb
jbe
lahf
dec
test
jmp
loopne
pop
call
pop
out
pop
testl
cwtl
lea
mov
lods
adcb
scas
mov
jne
and
ja
in
mov
jns
fstpl
loope
subb
mov
xchg
pop
sub
in
loopne
loop
into
mulb
les
ljmp
neg
or
aaa
adc
add
rcll
fwait
inc
je
inc
xchg
fmul
outsl
pop
test
mov
mov
or
sbb
sub
sbb
sbb
lods
insb
cli
fcmovnb
es
dec
adc
add
mov
clc
adc
xchg
and
push
and
lea
outsl
cs
jbe
sub
sub
pop
pop
mov
mov
adc
cmp
pushf
push
lret
sub
std
mov
pop
jmp
cwtl
jle
pop
sbb
mov
lods
pushf
ja
es
and
jne
lods
es
lahf
loopne
pop
rsm
sahf
lea
rclb
mov
inc
pop
psraw
outsl
loopne
and
or
shll
iret
fcompl
dec
mov
scas
fistps
pop
pop
jmp
xchg
prefetcht0
daa
mov
mov
cmpsb
mov
popf
add
test
push
sub
in
mov
add
mov
popa
outsl
pop
adc
push
mov
mov
ficoml
xchg
mov
sbb
and
xor
jecxz
jl
inc
jbe
mov
jecxz
jp
adc
mov
inc
push
mov
cmp
adc
cmp
lds
sub
sub
mov
push
inc
outsl
mov
add
in
cli
adc
mov
sbbl
loopne
mov
cwtl
sbb
ja
or
and
adc
movsb
clc
adc
lock
xchg
sbb
les
sub
lds
aas
repz
fs
dec
stos
adc
push
mov
adc
xlat
gs
cli
test
adc
and
test
stc
shlb
fwait
mov
outsl
sbb
jecxz
jmp
fimuls
mov
xchg
inc
sbbb
mov
ljmp
pop
inc
iret
mov
insl
sub
add
cmpsl
idivl
push
loop
mov
mov
sub
movsl
inc
cmc
rolb
lock
and
mov
jns
jne
mov
cmp
inc
mov
aam
repnz
and
mov
add
mov
add
xchg
arpl
and
xor
movb
pop
sub
sahf
lret
dec
inc
or
cmc
jg
inc
mov
scas
jb
dec
add
push
pop
fiadds
ja
out
cmpb
mov
adc
pop
adc
ds
out
popf
push
mov
pushf
adc
mov
and
add
cmp
sub
jle
mov
and
or
psubsb
les
or
mov
mov
xor
repz
inc
insb
mov
test
pop
jle
add
arpl
inc
fsub
push
cs
into
in
in
or
aas
sub
push
cs
inc
lahf
dec
out
lea
jb
scas
repz
popa
stos
xchg
loopne
pop
int3
xchg
jbe
push
dec
add
mov
je
sub
dec
dec
aaa
pop
inc
out
sub
dec
adc
je
push
popa
mov
mov
jae
inc
scas
push
sbb
ficompl
fildll
je
sti
mov
sbb
xchg
pusha
mov
lea
sub
adcl
add
shl
cld
xchg
mov
pminub
js
and
cmp
and
cmp
fbld
push
sbb
push
add
inc
popf
dec
mov
mov
icebp
movq
mov
cmp
push
hlt
ja
in
test
stos
xchg
push
xchg
jg
jns
insl
xor
mov
fs
hlt
xor
in
sub
sub
fiaddl
pop
dec
xchg
and
test
jae
jae
mov
out
xlat
cmc
scas
adc
sbb
lcall
or
jbe
stos
jns
dec
xor
jle
imul
loopne
mov
das
and
popa
mov
pop
adc
jge
addr16
push
int3
daa
mov
das
push
xor
or
aam
sbb
lea
sbb
cmp
cmc
and
pop
cmp
push
aad
nop
pop
gs
inc
cld
aaa
fwait
pop
pop
xchg
add
je
sub
test
scas
stos
or
xor
loopne
xchg
imul
int3
xchg
jmp
fisubrl
dec
sub
xchg
cmp
jbe
fildll
mov
movsl
dec
adc
push
or
mov
jnp
fdivrs
frstor
pop
push
daa
popf
lods
out
mov
stc
xchg
xor
lea
es
repz
sub
xchg
mov
testb
push
test
xor
cmpb
pop
dec
push
jbe
pushf
mov
and
or
adc
pushf
push
ljmp
sub
das
sub
mov
out
push
sbb
fstp
mov
pop
clc
or
jp
or
daa
push
mov
insb
cmpsb
mov
outsb
out
lods
jp
mov
mov
sti
js
call
das
test
gs
mov
inc
sar
cwtl
ret
cwtl
lods
test
cmp
xor
lahf
das
add
adc
pop
movups
fstps
ret
pop
mov
lea
ljmp
push
xchg
sub
push
inc
cmp
addb
jns
inc
mov
push
std
ds
jbe
xchg
push
call
dec
ljmp
mov
sahf
and
stos
and
fisubl
push
mov
and
jnp
lock
mov
cltd
jl
pcmpeqw
cmc
test
sbb
rcrb
lock
les
sbb
sub
or
lea
popa
inc
xor
cmpsl
roll
mov
rcrl
push
cmp
mov
orb
popf
push
popa
mov
mov
inc
mov
adc
in
ss
cmp
inc
stos
dec
not
dec
mov
push
rclb
fwait
test
iret
fcmovnbe
sbb
repz
ja
push
cli
mov
imulb
add
scas
subl
test
stc
sbb
lods
pop
sub
fdivs
xlat
push
push
xchg
or
sti
out
loop
test
out
mov
ljmp
iret
movsb
fsubrl
in
sar
mov
ret
insb
cmp
adcl
dec
fcoml
inc
insl
pop
insl
push
xchg
adc
push
pop
mov
gs
inc
mov
sub
sahf
pop
pusha
mov
or
cmp
stos
scas
adc
ss
and
add
pop
pop
push
mov
in
imul
pop
int3
mov
lcall
loope
inc
inc
push
bound
jl
push
cmp
dec
cltd
lds
pop
rorb
mov
repnz
stc
push
pop
dec
and
xor
push
leave
fsubrl
in
cmp
push
add
xchg
out
rorb
dec
fstpl
or
imul
and
xchg
adc
inc
insl
adc
or
add
rcl
cmp
out
mov
adc
ret
imul
jb
clc
mov
aas
jo
sub
into
mov
inc
test
stos
push
cltd
js
aaa
xchg
push
out
inc
cmc
and
cmp
sti
movsb
stos
add
stos
cmp
push
das
mov
jge
mov
jo
fldt
pop
packssdw
adc
push
push
outsl
mov
out
dec
or
inc
mov
das
cli
jbe
jns
dec
movsb
mov
or
in
movsb
into
cmpsl
pusha
orb
mov
mov
js
nop
xchg
ret
and
scas
in
addb
lret
sub
lods
loop
adcl
addr16
adc
rclb
cmc
cmpsl
movsl
aam
push
push
jmp
jle
jbe
mov
xor
ja
pop
lahf
pop
jl
xchg
mov
xlat
sti
pushf
js
inc
xor
and
aam
je
dec
sbb
enter
test
scas
loopne
xchg
pop
or
lea
imul
aad
scas
jle
xor
lods
inc
add
mov
fwait
loopne
push
push
jecxz
in
addr16
cmpsb
mov
loope,pt
sbb
setb
and
lds
jae
rorb
inc
cld
jecxz
mov
aaa
inc
jae
rclb
push
lods
out
pop
inc
sub
sbb
mov
cltd
cmc
xor
stos
loop
inc
push
and
sub
int3
ffreep
test
daa
and
daa
mov
mov
fimull
dec
sbb
shrb
add
loop
and
xchg
xchg
scas
push
sub
leave
jle
sahf
std
push
fucomp
adc
test
fisubl
mov
push
jb
imul
pop
mov
out
push
daa
pop
cmp
add
lcall
or
lret
bound
jl
lcall
jl
aam
mov
cld
add
xchg
test
sbb
xor
adc
scas
inc
cmp
test
jmp
shll
stos
or
xchg
add
push
loop
inc
jb
lret
std
mov
cld
popa
outsl
in
daa
cmp
adc
jp
hlt
pushf
push
mov
xor
mov
aaa
mov
mov
insl
shrb
add
sbbb
int
clc
ret
sub
pop
pushf
lret
adc
lock
mov
inc
mov
pop
mov
popf
aaa
sbb
popa
mov
xchg
xor
xchg
xor
add
fwait
xor
bound
fnsave
subb
jge
iret
aad
out
push
popf
sub
rcl
int
ds
push
in
xor
pop
addl
jne
loop
push
inc
push
push
cmp
in
dec
les
push
mov
xchg
pop
inc
mov
xchg
adc
mov
xchg
divb
mov
in
enter
lahf
in
and
adc
fstl
adc
jbe
fdivr
mov
das
or
inc
jae
into
jns
rolb
or
mov
arpl
inc
add
lret
test
lds
nop
xchg
pop
into
inc
outsb
outsl
aas
dec
xchg
loopne
fisttps
outsl
add
iret
movsb
push
out
pop
xchg
mov
gs
inc
ds
sub
xor
xor
data16
maxps
aaa
pusha
lret
push
pop
lret
mov
xor
inc
ret
adc
inc
pop
and
mov
mov
pop
into
mov
outsb
xchg
sbb
out
lret
loope
in
lcall
or
sub
add
inc
aaa
push
je
negl
das
adc
clc
loop
cwtl
xor
fucomp
cmc
and
ljmp
adc
cwtl
clc
xor
sub
fsubrs
pusha
push
insb
shrl
cwtl
cmp
fmulp
mov
push
adc
lcall
pop
push
lds
in
repz
mov
out
jecxz
pop
fwait
lds
lahf
sti
dec
dec
push
xchg
adc
dec
add
test
hlt
je
mov
adc
xchg
dec
xor
pop
xchg
orl
out
rolb
hlt
notb
push
lret
jl
movsb
sub
sbb
jge
outsb
repz
mov
dec
xchg
xchg
and
mov
xchg
dec
cmp
das
enter
in
mov
out
mov
ja
push
ss
inc
pop
lcall
sub
rcr
sub
in
cli
mov
dec
fcmovb
xchg
sub
flds
roll
mov
out
dec
outsl
jno
sbb
adc
int
or
mov
or
jge
pop
pop
mov
jne
cmp
call
lcall
adc
lock
pop
aaa
sub
add
or
pop
int
xorl
loopne
cmp
push
leave
sub
or
lcall
add
push
clc
inc
add
sbb
sbb
lret
dec
gs
pop
fsubs
mov
or
leave
jecxz
in
test
and
sarb
pop
test
cmp
lock
dec
adc
sti
jmp
mov
push
scas
cli
shrb
push
dec
imul
inc
div
insl
inc
xor
lcall
call
addl
inc
ds
test
lods
add
lock
jecxz
mov
xchg
clc
jno
ljmp
dec
orl
pop
jno
cltd
iret
dec
bound
push
scas
in
mov
in
int
negb
jl
xchg
push
or
ret
cmp
inc
and
adc
insl
outsl
push
dec
sub
xchg
cmc
xor
or
jle,pt
fimull
iret
mov
add
jnp
pop
fdivs
mov
jo
sti
jg
fxch
insb
dec
push
cmp
nop
arpl
call
mov
inc
add
adc
xchg
xlat
shrl
xchg
dec
mov
ja
pop
xor
sub
cmp
test
sbb
inc
cmc
and
imul
and
cmpsb
pop
mov
nop
enter
or
jl
iret
push
cld
add
gs
jbe
jmp
mov
xchg
xchg
dec
jno
fsubrl
popa
pop
nop
rep
lret
sti
inc
pop
arpl
xchg
adc
test
pushf
push
pop
pop
out
aad
add
and
enter
mul
testl
das
arpl
loopne
pop
popf
mov
push
inc
mov
fs
dec
ret
in
inc
mov
and
sarb
mov
js
test
cwtl
mov
out
xchg
pop
aad
subb
jmp
cmpsl
enter
pop
ljmp
aas
mov
add
pop
movsb
fwait
outsl
orl
cmp
mov
je
iret
repnz
mov
and
adc
pusha
cltd
gs
movsb
add
mov
push
jnp
xor
xadd
nop
and
mov
aam
js
scas
cmp
and
pusha
or
add
outsl
or
or
fidivl
rol
or
xor
xchg
fcoml
sub
cmp
jecxz
sub
dec
jle
in
ljmp
cs
mov
decb
cmpsl
pop
and
gs
cltd
sbb
mov
data16
lcall
scas
sub
out
cltd
int3
xchg
rclb
iret
fsubs
aas
mov
inc
test
jecxz
or
stos
cmp
push
out
inc
push
bound
push
pop
fadds
in
add
pop
pop
cmp
or
out
mov
jl
popa
adc
jl
arpl
test
fwait
out
je
push
jbe
lods
ds
adc
adc
inc
insb
push
fs
loopne
icebp
movsb
mov
insb
push
or
adc
pop
cmp
adc
vpshad
aaa
call
je
inc
mov
dec
jmp
add
mov
in
mov
inc
mov
mov
aam
ret
pop
ret
das
add
mov
mov
sub
xor
cmp
xchg
outsb
jle
and
ss
inc
inc
addb
xchg
shlb
lods
arpl
pop
clc
and
xchg
fs
pmuludq
aas
scas
loopne
mov
in
test
icebp
idiv
mov
movsl
push
jle
pop
and
popf
sub
mov
icebp
push
add
xchg
pop
ja
inc
std
mov
or
cli
jl
pop
cwtl
fisubrs
inc
xchg
adc
and
sub
pop
mov
dec
xchg
push
out
mov
and
push
mov
dec
mov
mov
mov
std
or
call
repnz
and
pop
mov
jl
pop
jp
xchg
bndldx
pop
in
pop
or
dec
int
jp
fwait
pusha
int
pushf
lahf
pop
inc
and
ficomps
aaa
aaa
bound
or
movsb
mov
mov
ffree
or
jge
in
rolb
insl
sahf
push
sarb
sbb
sbb
push
jns
hlt
std
rcr
fisubl
add
pop
aad
ljmp
mov
push
sbb
adc
and
pop
mov
repz
mov
mov
icebp
popf
pop
adc
jle
js
or
mov
sahf
xor
pop
cmpsb
icebp
js
pop
mov
sub
imul
ret
mov
inc
push
shll
movsl
mov
mov
shrl
jecxz
mov
lret
negl
push
loopne
out
xchg
push
popa
jne
adc
sub
outsl
cmp
adc
imul
pop
repz
std
and
push
int
push
sbb
jbe
mov
shl
push
mov
adc
movsl
shlb
mov
icebp
outsl
sbb
xchg
addr16
adc
mov
test
orb
adcl
inc
dec
test
sbb
or
clc
nop
sub
insl
out
addr16
stos
add
xchg
cmc
push
cs
lret
call
int
jae
scas
xor
sbb
scas
sbb
loopne
cld
shll
pop
inc
pop
nop
cli
pop
mov
push
int
add
sub
jecxz
std
das
ret
test
push
jl
sarl
mov
cli
jns
jae
push
test
push
xchg
mov
sbb
fidivrl
loope
loopne
lcall
loopne
ret
std
aad
aaa
out
mov
pushf
adc
iret
mov
test
mov
jecxz
xor
insl
ret
push
rolb
add
popf
shrb
adc
clc
sti
in
add
push
mov
mov
lahf
xor
sub
cmp
dec
out
int3
adc
jl
cli
addr16
xchg
adc
out
out
stc
fiadds
or
mov
adc
mov
into
adc
hlt
xchg
jge
scas
jne
adc
xor
xor
out
test
push
cmp
xchg
sahf
mov
repnz
fidivl
pushf
jnp
loop
and
push
adc
xor
fldenv
ror
adc
cmpsl
gs
sub
xchg
cltd
repnz
add
loop
wrmsr
mov
loopne
mov
jbe
sbb
mov
inc
lods
dec
and
fdivs
xchg
push
mov
inc
mov
pop
add
and
int
scas
ss
or
push
lock
dec
shlb
repnz
insb
and
xchg
aam
cmc
gs
push
push
loope
jmp
dec
push
push
shl
mov
dec
insl
int
shll
and
aas
jmp
push
jge
stos
sbb
xor
lock
mov
cwtl
shrb
pop
xor
cli
mov
out
jae
idiv
cmp
test
and
mov
divl
xchg
add
inc
aas
fimull
dec
mov
into
loop
cmpsl
jg
out
ficompl
popf
sbb
fbstp
or
lea
rorl
jnp
leave
pop
xchg
das
and
repnz
xchg
sub
cld
lcall
mov
and
adc
mov
pop
stc
sahf
jle
xor
mov
outsb
and
es
lea
adc
and
mov
mov
dec
in
pop
test
movsl
sub
pop
dec
xchg
mov
lar
dec
es
jge
scas
ss
hlt
test
movsl
mov
mov
fildll
push
lods
xchg
inc
das
mov
in
pop
add
addl
jb
insb
jle
movsl
push
rclb
lock
sbb
and
push
mov
std
repnz
and
iret
pop
push
xchg
and
ret
xchg
pushf
mov
outsb
jle
push
addr16
js
adc
xchg
fiadds
jmp
inc
pusha
adc
pushf
push
xor
test
mov
mov
fcmovu
int
or
sbb
mov
repnz
push
adc
cld
sub
sub
mov
js
sbb
cmp
cmc
pop
pop
mov
lret
sub
mov
mul
pop
jl
xor
sbb
outsb
test
xor
jne
pushf
test
rolb
fisubrl
add
insb
adc
ret
push
adc
jp
xchg
mov
stos
xor
xor
mov
jno
xor
ja
les
shr
movsl
pop
xchg
aaa
lea
out
stc
pop
scas
dec
push
dec
jg
movsb
push
xchg
pop
or
dec
or
push
mov
ror
push
scas
adc
sahf
sub
and
es
shrl
outsl
inc
sub
xchg
jp
dec
and
mov
mov
clc
rcr
xor
xchg
popa
jne
cli
cmpsl
scas
add
pusha
rorb
fidivl
fstps
mov
sbb
or
out
shll
or
nop
and
out
test
in
mov
inc
jb
out
xor
adc
test
dec
inc
cli
add
dec
cmp
pop
ja
inc
xchg
pop
add
insb
lahf
jae
mov
xchg
dec
cmp
mov
inc
add
call
cmp
and
push
mov
rolb
addb
sbb
arpl
insl
sub
dec
jne
outsl
pop
insl
mov
xchg
xlat
mov
adc
add
outsb
jb
sub
fcom
aad
aas
xor
in
dec
mov
shl
jne
stos
jnp
add
xor
in
pop
imul
scas
pusha
push
ljmp
push
cmp
movsb
sahf
xor
jne
cs
mov
push
jge
push
inc
inc
pusha
rcrb
imul
pop
push
mov
and
call
cli
or
or
fidivl
daa
loope
cmp
ret
xchg
jmp
leave
and
clc
imul
ret
das
xor
pop
test
adc
inc
xchg
ds
pop
lods
filds
cwtl
adc
cmp
mov
jnp
add
or
xchg
pop
sahf
cmp
ljmp
sub
and
clc
int
clc
mov
loope
test
test
leave
nop
psrlw
lock
mov
or
lods
pop
pop
int
dec
sbb
jnp
and
xchg
adc
or
jg
cmc
inc
insb
test
xchg
sahf
adc
push
addl
loop
jle
aad
inc
shll
scas
enter
push
or
inc
xchg
in
lahf
sub
insl
mov
or
push
clc
sub
cmp
cmp
mov
push
xorps
add
add
push
xor
pushf
mov
cwtl
and
cwtl
fs
test
out
sti
xor
pop
setp
out
inc
shr
dec
scas
mov
push
rorb
dec
cmc
inc
dec
bound
mov
sbb
pop
xor
adc
lock
stc
lds
mov
scas
es
daa
xchg
dec
mov
dec
scas
fwait
xchg
lahf
divl
xchg
in
nop
aam
sbb
cltd
pop
jmp
loop
orl
jle
sahf
adc
gs
cmpb
sbb
jle
fdivrl
xor
repnz
mov
inc
sti
movsl
fs
outsl
inc
pop
jp
xchg
stc
test
adc
adc
jl
push
jae
or
cmp
cli
negb
and
dec
adcb
add
inc
mov
icebp
xor
dec
shlb
bound
sbb
sbb
push
push
jp
xor
int
lret
jl
je
or
pop
xlat
pop
movsl
in
push
mov
leave
shlb
call
mov
mov
xor
mov
outsl
insl
push
ss
fnstenv
es
in
and
mov
scas
pusha
out
jae
fistps
push
inc
push
dec
mov
add
cmpsl
dec
aaa
cmp
ret
xor
mov
dec
mov
xchg
mov
sbb
outsl
mov
dec
loope
pop
mov
xlat
xor
dec
jne
cmp
in
xchg
jb
mov
pop
jmp
imul
xor
fidivl
int
imul
pop
test
lock
fcoms
pop
outsl
sbb
in
inc
jo
je
pop
sub
bound
lds
iret
xchg
mov
test
arpl
popf
hlt
outsb
cmc
xor
and
mov
mov
mov
fldcw
sub
jo
cmp
push
jmp
dec
mov
cmp
add
stos
dec
or
mov
xchg
xor
int
adc
and
clc
push
arpl
jae
cmp
mov
scas
jae
inc
dec
pop
iret
sbb
push
and
cli
mov
or
sbb
or
fcmovb
pushf
addr16
sbb
xchg
jge
cmp
cmpsb
js
frstpm(287
push
sbb
push
adc
and
or
fisttpl
cmpb
pop
into
inc
outsb
repz
jl
push
insb
dec
jb
mov
or
push
add
dec
jno
pop
mov
cmc
or
mov
daa
rorl
jno
pop
push
pop
rcr
bnd
imul
shll
loopne
push
push
mov
imul
mov
lea
mov
xchg
and
xchg
push
mov
mov
int3
mov
adc
or
imul
jbe
dec
mov
aam
mov
and
pusha
sbb
pop
pop
mov
adc
or
scas
jmp
add
sub
imul
sbb
fidivs
xor
add
mov
sbb
jae
adc
test
xor
cmp
movsb
movsl
push
dec
test
jne
scas
pmullw
daa
popf
icebp
lods
xchg
fidivrs
mov
sarl
xor
test
icebp
or
cmp
orb
cmp
mov
adc
mov
xorb
gs
sti
cmc
je
mov
jge
mov
pop
add
mov
ljmp
divl
push
sbb
inc
cli
sarl
bound
loopne
sbb
sub
popl
fldcw
repz
cmpsl
cli
int
cmp
lods
fs
lret
inc
rorb
sub
sub
mov
in
mov
adc
outsl
inc
inc
adc
xchg
jo
xchg
test
ss
cli
push
test
imul
mov
clc
jno
aas
fldl
aaa
dec
push
rclb
int
sbb
push
sub
mov
mov
ret
cmp
cld
lods
pop
sahf
pushf
rclb
movb
push
data16
ja
call
stos
mov
cwtl
cmp
adc
pop
sbb
mov
arpl
mov
andl
jns
icebp
or
inc
outsb
xchg
daa
idivl
fs
and
fwait
add
push
mov
jo
xchg
movsb
xchg
dec
stc
shrl
inc
dec
mov
xor
ret
es
out
in
sbb
ljmp
cmp
jnp
xchg
stos
xlat
dec
adc
push
xor
cmpsl
jl
sbb
in
push
aad
push
sbb
ja
arpl
pop
and
or
inc
xchg
sahf
daa
popa
or
mov
ds
and
mov
adc
mov
dec
test
or
lds
xchg
jno
mov
outsl
or
imul
cmp
adc
jb,pn
pop
dec
in
roll
cmc
fiaddl
mov
sub
test
aam
pop
dec
fucomip
mov
cmc
cmp
mov
cmp
sbb
xor
icebp
je
ljmp
test
push
push
rol
sar
into
xchg
sbb
idivb
jbe
mov
outsb
shlb
jg
jle
inc
push
inc
push
or
jp
jle
cmp
imul
and
jae
add
loopne
push
es
lret
xchg
mov
les
pop
dec
andb
xchg
sbbl
mov
xchg
sub
rorb
xchg
and
into
in
pop
push
jl,pn
insl
and
mov
imul
dec
mov
cmpsl
in
leave
fwait
adc
loop
and
adc
ljmp
and
add
xor
mov
je
aad
popl
hlt
and
mov
push
aam
lahf
lcall
cmp
cmpsb
jne
mov
mov
jb
jle
andl
adc
cmp
dec
mov
xchg
mov
sbb
aaa
or
test
pusha
or
bound
sarb
jno
mov
sbb
jp
stc
nopl
push
sub
adc
cmpsl
sub
js
sub
repnz
orb
mov
loop
dec
mov
pop
jp
cmp
jmp
movl
mov
fs
add
popf
pop
icebp
adc
lahf
fs
lods
sbb
cmp
mov
outsl
pop
lret
icebp
out
daa
das
test
out
movsl
gs
mov
adc
dec
popa
jns
jp
gs
ret
jl
stc
xchg
lret
jecxz
xacquire
jo
push
push
jp
xchg
add
into
fiaddl
push
hlt
pop
mov
mov
jp
xchg
push
in
std
cmpsl
andl
cmp
xchg
leave
shl
cmp
cmp
cmpsl
add
mov
xor
and
movsb
stc
imul
sbb
sub
call
arpl
lds
mov
addr16
adc
and
lods
leave
ljmp
arpl
and
push
xchg
jo
xchg
fs
dec
rcll
adc
xor
je
jmp
xor
loop
sbb
add
adc
sub
xchg
divl
push
ja
dec
xor
cmp
scas
in
pop
mov
jmp
xchg
xlat
popf
das
mov
js
or
int3
sub
std
dec
stos
mov
outsb
jae
add
inc
popa
in
insl
jb
jg
call
int
xchg
out
sub
mov
xchg
mov
lcall
jo
cs
call
mov
negl
xchg
out
subb
cli
inc
inc
ss
repnz
sarl
cmpsl
les
add
jbe
jae
cmp
out
jl
data16
dec
lahf
rcl
ror
mov
int3
or
push
and
adc
mov
das
movsl
sbb
fsubs
push
mov
or
mov
sub
int
pop
cs
mov
mov
jne
adc
push
xchg
mov
cmp
test
test
pop
mov
push
ljmp
and
and
pop
and
out
mov
dec
sbb
xorb
loopne
in
addr16
xor
push
arpl
outsb
rcll
ss
push
arpl
pop
jl
sbb
xor
pop
mov
shlb
add
mov
sbb
add
lahf
jle
jl
clc
add
fucom
outsl
xchg
xor
lea
lret
cmpb
scas
mov
lcall
jmp
lret
and
dec
pop
outsl
sbb
scas
rcrl
int
daa
imul
jnp
out
outsl
out
insl
xlat
lcall
cmp
popf
sbb
or
adc
cld
es
push
dec
sub
lret
and
or
imul
imul
aad
subb
cld
cmovp
mov
push
mov
jmp
mov
leave
iret
loopne
cld
jmp
fldt
movsb
mov
xchg
push
jns
jb
mov
icebp
stos
test
pop
jp
mov
mov
scas
dec
sbb
mov
imul
add
negl
sbb
fsts
sbb
push
dec
lock
pop
lcall
out
mov
add
mov
mov
or
loopne
or
dec
mov
jns
aas
add
fistps
repz
mov
mov
fsincos
rclb
and
dec
push
test
mov
add
lds
cmp
lret
or
movl
vmread
pushf
dec
sub
aam
push
cmpsl
and
cmp
cmp
mov
push
or
ficoms
out
inc
fimull
push
pop
mov
fbld
mov
mov
add
jmp
mull
cmp
andl
jbe
sbb
sub
or
xlat
fcomps
cmc
jno
inc
shrd
jl
cltd
mov
lret
push
into
mov
inc
jne
or
out
pop
mov
pop
aas
cld
mov
int3
gs
jge
repz
lods
test
sbb
sti
mov
out
xchg
shl
js
dec
sar
xor
cmp
jns
in
fdivrs
push
and
sbb
sub
stc
and
lds
fisubrs
and
inc
mov
std
inc
cmp
or
cmp
mov
fisttpll
push
xchg
push
test
aas
pusha
orl
shll
sbb
and
stos
movsb
inc
adc
fwait
les
insl
lds
rorl
inc
cmpsb
adc
test
mov
outsb
sbb
mov
sarb
or
add
mov
cs
js
jne
or
pop
sub
cmp
pop
push
subb
cmp
dec
cli
sahf
and
cmc
adc
gs
iret
shll
adc
inc
mov
in
repnz
jge
rcl
xlat
call
cmp
jbe
sbb
rclb
push
loope
cmp
ja
or
aam
mov
cmp
sbb
jg
dec
ds
into
dec
sub
pop
add
bound
loope
ss
clc
push
mov
pop
mov
je
out
stos
test
fmulp
push
rclb
sbb
push
lock
cmp
test
xor
lret
fs
mov
out
test
popf
leave
jge
test
xchg
mov
cs
shll
adc
insb
jmp
sahf
sbb
or
push
cmc
aam
test
rorb
testb
inc
or
mov
mov
inc
push
cmc
mov
scas
repz
inc
cli
ret
jae
aam
xchg
mov
into
gs
out
in
sbb
mov
mov
add
das
pop
or
inc
push
lods
dec
inc
xor
ds
xor
fdivrl
outsl
jg
or
push
xor
jb
fnstenv
jle
daa
push
js
jo
xchg
dec
movsl
xor
add
jmp
fiaddl
mov
xchg
fmull
repnz
add
inc
mov
mov
mov
mov
sub
xchg
es
lds
mov
xor
sub
jl
jge
sbb
imul
xchg
insl
xlat
pop
iret
sbb
rol
outsb
lret
call
lds
in
jb
adc
jae
mov
rorb
jns
mov
cmpl
pop
nopl
rcrb
or
inc
add
data16
imul
addr16
cmpsl
negb
fwait
add
dec
and
push
fwait
cltd
xor
pop
faddl
push
insb
and
inc
lds
lea
shlb
dec
sub
xlat
das
ret
pop
sbbb
jmp
aad
or
aas
mov
js
sbbl
imul
push
xor
loope
push
movsl
push
dec
sub
pop
out
sbb
or
jnp
add
inc
sub
fcomp
popf
push
xchg
add
cmc
push
push
fwait
add
daa
jbe
xor
nop
push
or
pop
adc
ret
aam
sti
mov
dec
ss
sbb
addr16
xchg
inc
jae
sbb
lret
in
sub
sahf
dec
lods
jo
orb
in
and
jo
jbe
scas
mov
xchg
imul
jle
jle
cmovl
cwtl
addr16
and
add
js
in
push
push
call
and
mov
dec
xor
and
cmp
in
pop
test
pop
pop
cmp
add
mov
mov
std
jl
or
stos
push
xor
mov
fsubl
iret
or
sbb
dec
xchg
lds
leave
pop
pop
xor
push
mov
stc
xchg
or
cmp
jl
rcrb
imul
mov
in
push
push
pop
and
push
das
pusha
test
inc
pop
jo
jnp
fistps
andl
loope
xchg
addr16
out
pop
fwait
or
jle
in
fnstsw
sbb
lds
popf
dec
int
sbb
jle
aas
notb
mov
mov
enter
mov
cmpsl
push
xchg
mov
jle
stc
lret
dec
popl
or
popf
mov
pushf
push
bound
das
mov
movsl
andl
or
jp
inc
adc
mov
les
sar
rclb
mov
or
mov
in
outsb
insb
sahf
icebp
add
sti
or
inc
push
lods
aaa
inc
dec
rclb
ret
fisttpll
test
dec
ja
inc
call
jns
hlt
pop
cmp
rorl
sbb
add
fisttpl
es
imul
mov
nop
and
insb
pop
pop
adc
push
leave
mov
mov
sub
fs
dec
inc
adc
cmpsl
inc
cmpsl
inc
dec
mov
cmc
addb
dec
subl
in
fs
aam
imul
cmp
mov
jmp
div
inc
sub
xor
push
sub
xor
ljmp
cmpsb
sbbl
fcompl
jp
cld
sbb
mov
dec
std
jnp
xchg
or
pop
aaa
outsl
jno
and
xchg
cwtl
xor
stos
pop
mov
push
mov
je
fbstp
inc
inc
jl
sub
arpl
pop
cmpsb
xchg
insb
inc
push
popf
pop
cmpsb
mov
jns
call
shlb
test
je
repz
mov
nop
enter
cld
in
lock
fisubrs
scas
mov
in
push
mov
pop
iret
push
stos
pusha
mov
fsubrp
inc
xchg
xchg
or
mov
xchg
hlt
aad
enter
mov
pop
xchg
xchg
mov
mov
or
and
ja
jbe
add
mov
cmpsb
stc
sub
pop
lcall
push
repnz
movsb
dec
jg
hlt
cmp
cmp
loop
dec
dec
insl
dec
inc
enter
call
xor
xchg
test
orl
push
push
out
dec
adc
outsl
fs
adc
mov
mov
lahf
ja
subb
and
push
sub
leave
jl
xchg
inc
out
pop
test
fs
cmp
inc
add
xchg
fs
cmc
out
negl
mov
mov
fld
gs
xor
dec
pushf
es
mov
and
xor
pop
popf
xor
dec
ror
sub
std
std
aam
jns
clc
sub
mov
or
enter
imul
add
out
insl
jnp
xchg
xor
mov
jge
inc
sbb
push
push
mov
jno
jb
daa
out
std
mov
cli
jp
fs
add
mov
mov
inc
add
shll
jne
inc
into
es
iret
leave
jle
repz
jne
clc
fmull
mov
int
hlt
jns
xchg
push
pop
jp
mov
pop
mov
pushf
lahf
jmp
cmp
test
push
sub
test
jl
arpl
cmp
pop
movsb
cld
clc
movsl
push
jle
movsl
outsl
mov
loope
lods
xor
xchg
mov
mov
adcl
hlt
push
cmp
test
xchg
pop
fcmovu
fstpt
lods
jg
add
jmp
sub
inc
inc
and
lahf
sti
data16
inc
jmp
movsb
xor
test
out
xor
cmc
cmp
cltd
movsl
lret
mov
lock
int
cld
cmc
xlat
jge
cmp
mov
or
jbe
and
lcall
sarb
push
lock
sbb
cs
mov
dec
or
xor
push
loop
cs
fldenv
scas
aas
test
movsb
jbe
pop
pop
iret
jmp
cmp
add
push
sahf
pop
fidivl
xor
aad
xor
push
lret
ss
xor
das
jle
int
sub
or
pushf
dec
dec
fildll
dec
sub
in
mov
fwait
jp
scas
in
scas
lods
aas
lock
loopne
aaa
loopne
push
in
fbstp
xchg
movsl
leave
loope
mov
lea
cmp
int3
push
adc
mov
ja
xorb
je
dec
dec
push
and
jno
call
hlt
scas
clc
push
pushf
mov
sahf
pop
mov
pop
movsl
xor
es
fmuls
sbb
mov
lcall
js
inc
mov
ret
push
rcll
pushf
subl
xchg
movl
add
rcll
stc
data16
std
test
subb
sub
mull
loope
cmp
std
testb
sbb
adc
cmpsb
repz
std
xchg
test
cmc
insl
cmp
ss
in
aas
cs
popa
std
sbb
or
mov
fnstcw
imul
pop
je
popa
push
xchg
pusha
and
je
lds
xchg
mov
jno
mov
loope
adc
mov
xor
gs
outsb
and
in
push
lods
add
mov
sbbl
mov
data16
mov
mov
sbb
inc
pushf
jns
xchg
add
and
les
jbe
jecxz
imul
cwtl
or
add
data16
jecxz
loope
out
inc
aaa
aam
add
pushf
mov
jecxz
cmp
xchg
bnd
dec
popa
les
pop
pop
sub
xchg
dec
in
cwtl
jne
add
clc
add
and
scas
insl
or
das
ds
inc
stc
hlt
mov
outsb
jp
add
dec
arpl
cltd
cmp
xor
fstpl
add
cmp
dec
add
in
je
arpl
add
and
add
jo
into
cmp
jp
leave
inc
add
inc
inc
gs
add
jmp
lahf
sub
cmc
fs
test
and
and
pop
loop
insb
in
cli
enter
pop
pop
fdivrs
int
out
push
jo
iret
cmp
popf
aad
test
addb
inc
adc
fcomps
jge
loope
dec
mov
xor
cmp
sti
dec
fldl
jns
cmp
add
leave
or
push
arpl
test
xchg
add
ror
sub
sbb
mov
mov
push
stos
xchg
hlt
scas
js
push
sbb
lods
insb
call
dec
mov
movsl
sub
fwait
cld
imul
mov
cmp
cmpl
rcrl
add
inc
imul
cld
lahf
cld
insb
and
dec
clc
mov
movsl
es
outsb
and
inc
jg
in
fsts
cmpsb
out
jle
or
and
pop
dec
dec
pop
aaa
out
sub
push
add
mov
dec
imull
mov
je
jp
hlt
push
jl
imul
popa
pop
repz
pop
jb
rcrl
push
push
cmp
rcrb
mov
fsub
pushf
daa
frstor
repz
jp
mov
mov
xchg
in
mov
and
xor
pop
sbb
inc
mov
dec
leave
push
or
enter
repnz
mov
xchg
push
sbb
dec
inc
sbb
enter
xchg
lahf
mov
push
loopne
add
rolb
and
test
cs
mov
pusha
movsb
xchg
adc
das
int3
and
jb
ret
xchg
fnstenv
cmc
imull
popl
jmp
imul
ret
push
es
xor
pop
in
xchg
pop
cmp
ret
mov
or
loopne
sub
dec
call
idivb
movsl
lods
pop
sbb
jo
subl
sub
and
fldl
shrl
jns
popf
jns
ljmp
mov
cld
test
xchg
dec
adc
insl
xchg
daa
pop
lret
sti
out
lods
mov
jmp
lea
adc
push
mov
xchg
ror
arpl
inc
fwait
pop
add
in
rolb
ret
rclb
push
arpl
cmp
or
fst
cmpsl
test
popa
flds
call
jne
lods
sub
mov
cli
int
lods
sahf
cmp
ret
inc
icebp
cmp
in
xchg
daa
mov
mov
mov
test
or
mov
aad
stos
adc
rolb
test
adc
mov
out
mov
in
add
mov
in
cmc
pop
cmp
xor
inc
imul
dec
xor
mov
cmp
add
test
imul
xor
std
pop
inc
mov
arpl
pop
push
and
jbe
mov
mov
aas
add
ret
jo
jbe
xor
push
jecxz
out
call
rcll
mov
cmp
push
pop
dec
jmp
jle
arpl
mov
in
addr16
fcomi
sub
jbe
cmp
or
dec
dec
ds
mov
movsl
dec
nop
loope
stos
and
or
loopne
ja
bound
mov
loopne
ljmp
dec
pop
cmc
out
sub
negb
popa
mov
arpl
call
cmpsl
rcl
mov
es
cmovb
rolb
add
inc
push
aaa
in
pop
cmp
shll
push
jns
pushf
push
test
leave
adcb
adc
popl
jge
xlat
or
arpl
cwtl
cmp
inc
lcall
push
je
mov
pop
add
lea
insb
and
cmc
inc
pop
mov
in
call
push
or
or
les
sub
pop
push
xchg
stos
lods
leave
mov
add
cmp
stos
and
inc
mov
arpl
cmp
nop
jno
outsl
outsl
sarb
cmp
jb
push
or
add
lods
inc
mov
adc
jg
lahf
pop
ja
mov
into
sahf
cmp
out
inc
into
xor
mov
fcoms
push
and
imul
cmp
lret
jp
lret
mov
in
sbb
jmp
sub
inc
xchg
jb
push
or
or
xor
std
mov
adc
pop
pop
mov
jb
test
dec
jge
jb
cwtl
in
outsl
cmp
dec
negb
dec
push
mov
dec
cmp
pop
jns
jae
dec
fs
popf
dec
lret
push
mov
cmc
dec
out
insl
dec
pop
stc
xchg
jecxz
shlb
repnz
mov
lahf
rol
push
add
or
adc
jp
pop
addr16
fucomip
sbb
scas
jns
sbb
insb
call
in
dec
movsb
cmp
ja
test
pop
dec
inc
jno
mov
sub
nop
sahf
or
aaa
movl
je
movsl
movsl
add
mov
dec
jge
repz
inc
or
insl
addr16
lcall
scas
test
lret
lds
lds
stc
fcmove
and
jno
sub
jge
lret
shll
xor
call
stos
add
adc
mov
cld
adc
pop
mov
sar
sub
inc
mov
push
or
mov
pop
es
or
mov
jecxz
mov
sbb
lock
xchg
pop
lret
pop
xlat
out
sub
mov
lcall
stos
xorl
inc
mov
stos
adc
cmp
push
xor
aas
jmp
cld
sbb
subb
int3
addr16
test
bound
insl
pop
loope
lock
loope
cli
or
cmp
clc
fwait
jno
in
xor
adc
orl
or
jecxz
mov
in
adc
inc
xchg
pop
loope
adc
dec
or
repnz
lea
mov
mov
mov
lahf
cmpsb
sbb
jno
fstpt
inc
ljmp
mov
sbbl
hlt
push
sbb
cmpl
mov
and
lret
movb
sbb
jp
xchg
jo
pushf
cs
ret
insl
fldt
or
inc
jns
faddp
dec
f2xm1
iret
or
inc
mov
push
int
push
push
mov
or
push
mov
loop
xchg
loopne
repnz
mov
and
sub
sti
xor
sub
cmpsl
jnp
dec
cmpsl
xor
sbb
and
popa
das
jae
out
add
leave
jo
dec
rorb
push
push
sub
pop
mov
xor
ret
inc
mov
notb
sub
and
ss
iret
stos
pop
or
xor
inc
push
cmpsl
pop
push
jg
outsb
push
xor
jg
fcmovb
fisttpll
mov
das
adc
sahf
stos
push
and
pop
mov
cmpsb
sbb
and
push
mov
roll
aad
mov
fildl
sbb
aad
hlt
cmp
pop
dec
adc
int3
sbb
jp
aas
xchg
aad
xlat
mov
inc
shl
insb
jno
mov
movsb
mov
dec
in
outsb
jge
pop
out
fcomps
ljmp
push
mov
repz
dec
push
sar
popf
scas
mov
xor
insb
cmp
int
xor
imul
js
adc
aam
mov
into
mov
es
cmpl
inc
into
or
xchg
out
mov
cltd
test
into
push
sub
or
cli
dec
sahf
cmp
out
adc
mov
dec
lds
mov
stos
and
pushf
stc
or
neg
dec
pop
and
cmp
push
std
hlt
in
hlt
std
fcompl
movups
cld
xchg
push
jne
jnp
clc
push
repnz
and
fstpt
mov
les
push
jmp
xchg
or
dec
adc
lret
mov
aas
and
repz
aaa
push
and
pop
addl
cmpl
sub
rcrb
js
fcomp
popf
lea
mov
dec
push
fwait
enter
sub
xlat
dec
pop
xor
cmp
ror
sbb
daa
outsb
pusha
mov
es
add
pop
pop
and
mov
icebp
mov
mov
mov
jae
dec
inc
subb
fstps
je
jbe
mov
xor
mov
js
add
pushw
mov
mov
xorb
and
idivl
cmpsl
out
adc
mov
mov
in
fistps
cmpsb
xor
mov
add
jns
mov
sbb
adc
dec
push
and
cmp
push
call
dec
xor
mov
or
lock
lcall
mov
jge
or
rorl
push
cli
mov
pusha
test
sahf
dec
cmp
push
lret
psubb
sub
adc
insb
insl
leave
pop
xchg
cmp
leave
stos
pop
aaa
dec
mov
xor
into
loopne
push
in
hlt
daa
inc
xchg
adc
sbb
pop
cld
ficoms
and
cmp
sbb
mov
push
mov
jle
mov
ljmp
lret
divb
or
cmp
fisubs
mov
js
hlt
inc
jecxz
mov
repz
pop
ss
inc
xchg
xor
pop
pop
or
mov
jecxz
jge
jns
subl
shll
clc
mov
push
and
push
xchg
cld
mov
bound
lods
jbe
mov
icebp
shl
cmp
xchg
sbb
ret
mov
pop
add
inc
loope
or
imul
clc
push
addr16
add
jmp
bound
mov
enter
imul
outsl
sti
push
sbb
xchg
stc
mov
scas
add
or
push
cmpb
subb
mov
into
enter
jb
and
in
jb
cs
imul
or
ja
andl
mov
out
std
mov
xor
lock
lea
mov
data16
push
push
test
cmpsl
les
dec
roll
sub
aad
lock
int
adc
sub
mov
xchg
out
lahf
loop
push
xchg
into
pop
mov
push
xor
out
outsb
push
mov
mov
pop
fisubrs
xchg
sbbl
sarb
aad
inc
mov
or
push
stos
in
jl
imul
lret
pop
sub
lea
dec
pusha
mov
int
sbb
and
out
mov
xchg
lock
mov
ret
int
mov
adc
insl
aam
mov
inc
into
mov
push
dec
out
dec
cmp
inc
scas
xor
idivl
fwait
test
mov
dec
push
aam
repnz
out
mov
out
mov
shr
sti
xchg
mull
jmp
jno
mov
nop
cmp
icebp
push
aaa
aas
sbb
in
clc
jg
push
test
fisttpll
test
scas
cs
scas
aad
int
lahf
iret
cltd
mov
and
mov
cmp
dec
xchg
xchg
push
aaa
inc
in
jns
or
jg
in
sub
lea
dec
mov
adc
into
fstpl
lcall
xchg
insb
clc
outsl
xor
adc
mov
xchg
repz
pop
notl
add
js
jno
outsb
fucomip
fdivrl
jb
dec
push
sar
push
ret
sahf
or
or
popa
dec
popf
clc
and
adc
mov
push
sbb
dec
cltd
inc
clc
test
fbld
add
xor
mov
mov
dec
iret
xor
push
mov
jo
shlb
inc
jb
test
cmc
jae
shrl
or
jbe
inc
xlat
jg
popf
movsb
stc
dec
pop
xor
aas
xchg
xchg
push
insb
mov
xchg
jp
clc
mov
cs
and
std
sub
lcall
pop
cld
dec
cwtl
cmp
hlt
mov
cltd
adc
leave
in
icebp
mov
jp
sub
popf
js
addr16
jl
repnz
mov
imul
fnsave
imul
repz
mov
aas
sbb
mov
inc
iret
dec
lcall
icebp
arpl
in
idivl
faddl
iret
lock
popa
sbb
in
jecxz
sbb
fldt
fs
aam
jbe
jle
test
loop
fldt
mov
push
icebp
inc
adc
xchg
outsb
and
sahf
stc
mov
add
adc
mov
andl
and
pop
fistpl
jns
gs
fdivs
dec
add
pop
imul
jmp
lods
loope
hlt
inc
daa
push
pop
outsb
mov
mov
rorl
dec
cmp
pop
adc
daa
movsb
and
sub
or
add
movsl
orb
sbbl
adc
cwtl
dec
mov
stc
aam
cmp
jmp
or
pop
push
cmp
stos
lds
int
adc
pop
faddp
mov
popf
mov
repnz
jno
mov
sbb
aam
and
xlat
and
jp
lahf
xchg
mov
mov
xchg
pop
dec
push
pop
push
popf
push
loope
lcall
repz
subl
mov
push
adc
sbb
push
pop
or
cmp
cmpsb
sbb
outsb
sti
and
not
fstl
outsl
dec
fdivs
dec
outsl
mov
or
push
mov
pop
xchg
pop
ret
jmp
inc
xor
inc
jno
fiaddl
and
push
into
out
sahf
fisubrl
xchg
lahf
xchg
not
stc
stos
mov
loope
test
push
fcoms
jae
jg
lds
orl
add
sub
mov
mov
sbb
in
add
and
sbb
jnp
loope
fyl2x
push
fs
inc
addl
dec
push
xchg
cwtl
sub
jg
jge
jno
arpl
xor
shlb
movsl
mov
sbb
push
xchg
mov
fildl
push
in
mov
fistps
flds
lods
adc
mov
outsl
mov
mov
sbb
xchg
fdivr
pushf
add
int3
ficoms
outsl
shll
sub
in
xchg
or
ficomps
imul
repz
mov
inc
xchg
mov
loopne
sbb
sub
lea
xchg
aas
push
aas
fldl
xorb
js
xchg
orb
xchg
push
stos
addr16
movsb
cmp
or
test
mov
fldcw
bound
inc
lcall
mov
sub
imul
jecxz
cld
mov
pop
push
inc
add
incl
mov
xor
ja
sbb
ror
sub
lods
test
mov
cmp
sbb
push
mov
les
push
fistl
mov
jnp
js
mov
aas
or
ljmp
or
hlt
inc
dec
push
negb
pop
cmp
mov
fmul
jbe
xchg
fucomi
test
ss
sub
pop
fdivrs
add
fisttps
popa
in
cld
pop
ss
fldl
mov
adc
mov
bswap
lock
xchg
add
fdivr
xor
sbb
inc
lret
jecxz,pn
in
or
fisubrs
jne
pop
lahf
jp
xchg
cmp
sbb
out
mov
ftst
sbb
shll
or
dec
mov
pop
popa
jb
and
stos
and
push
add
add
add
js
push
fsubrl
push
out
jecxz
inc
cmp
int3
mov
cli
xor
lds
ret
mov
add
lods
adc
xchg
ret
add
push
cmc
or
jp
fsubrl
iret
dec
testl
mov
or
push
js
push
js
mov
cmp
shlb
cs
lret
adc
xor
cmpsb
push
mov
lcall
popf
test
mov
cmp
pop
inc
rclb
movsb
pop
lods
repz
popf
jb
sbb
nop
push
outsl
call
lods
cmp
int3
add
jnp
pop
ljmp
incl
cmpsb
jne
mov
cmp
ret
cmp
push
mov
dec
test
adc
dec
inc
xor
sub
ljmp
sbb
push
push
xor
lcall
adc
out
mov
inc
sbb
in
dec
push
push
cs
jle
movsl
and
mov
mov
jbe
es
push
pop
mov
gs
sub
jecxz
ds
jecxz
cmpsb
and
sbb
cld
mov
jmp
or
incb
mov
mov
shrb
push
loope
push
sub
sbb
aas
out
imull
aaa
mov
sub
inc
testb
or
jbe
dec
ror
xchg
std
pop
dec
lock
fstps
sub
ja
jg
push
mov
ja
test
xor
mov
dec
mov
pusha
pusha
enter
lret
sub
popf
and
stos
inc
test
out
lock
js
stos
incb
inc
clc
cmp
cmc
push
fcoms
lods
insl
sub
sbb
mov
adc
cmp
ret
or
jns
sub
shrl
ret
rcl
jg
xchg
xchg
mov
push
mov
int3
mov
mov
scas
mov
or
lcall
push
out
adc
pop
cmp
roll
and
or
inc
add
dec
inc
mov
int
dec
mov
inc
rcrl
cli
inc
cltd
lcall
repnz
popa
incb
aad
std
adc
sahf
int3
mov
addr16
and
mov
push
or
mov
pop
and
mov
test
adc
mov
jo
fisttps
pop
sbb
inc
push
lds
push
fisubrs
iret
push
lret
fmuls
sub
in
mov
insl
mov
aad
mov
inc
mov
aas
ret
add
dec
or
pop
add
or
push
ss
or
adc
inc
cmpsb
jbe
mov
outsl
ror
int3
jne
stc
out
cmpsl
pop
adc
add
insl
xchg
scas
ficomps
mov
leave
dec
insl
lods
mov
cmp
dec
sahf
sub
sbb
add
loop
outsb
mov
repz
add
mov
mov
push
sbb
into
loop
push
cwtl
insb
mov
xor
sub
out
out
pop
add
cmp
add
jne
repnz
push
pop
cmc
sarb
mov
or
and
mov
add
sub
push
jb
jns
inc
jge
mov
dec
cwtl
mov
mov
add
call
jbe
mov
aam
stc
int3
test
es
cmp
push
out
aad
sbb
das
jge
jae
inc
jge
les
sbbl
xlat
and
rolb
mov
xlat
dec
adc
push
cmpsl
push
pop
xchg
pop
and
adc
sbbb
scas
shr
and
adc
mov
dec
vpsrld
ret
jne
xchg
lea
jmp
mov
push
mov
andb
movsl
lods
jmp
fwait
xor
std
mov
xor
fsubp
shrb
xor
push
popf
enter
adc
or
jecxz
lods
loopne
dec
dec
pop
adc
mov
out
ror
push
je
div
popa
inc
adc
cmp
out
add
sub
fs
cld
iret
dec
push
mov
divb
cmp
push
ret
testb
and
xor
cmp
mov
jge
sub
cmpb
outsb
in
jmp
mov
out
in
lea
and
bound
xchg
inc
jmp
mov
mov
in
clc
sub
xchg
pop
mov
lsl
sbb
daa
fcoms
xchg
data16
in
clc
jecxz
loope
xor
not
xorl
jno
insl
shrb
add
in
jae
cmp
icebp
mov
mov
ljmp
inc
aaa
pusha
cltd
movsb
xchg
push
js
cmpsb
mov
ret
fdivrs
popa
cmpsb
ds
ds
push
ret
jno
out
cli
sub
push
push
cs
ret
mov
bound
popf
xchg
sbb
push
repnz
dec
daa
mov
test
stos
fisubrs
sar
mov
cmp
sub
sub
enter
popa
sub
clc
outsl
imulb
jecxz
pop
add
push
fmul
test
mov
cmp
or
mov
je
dec
xchg
filds
cs
cmp
and
jns
lahf
repz
add
test
inc
pop
sbb
jb
sub
cli
out
push
sbb
and
js
mov
or
iret
xchg
stos
repnz
icebp
adc
shlb
call
add
jle
mov
stos
dec
mov
and
divb
lds
mov
push
sbbb
pushf
int
mov
cmpsl
adc
movsb
cmpsl
sub
je
cwtl
int
mov
out
inc
sbb
aas
rclb
jae
or
loopne
fld
bnd
lds
sub
adc
lods
xchg
xor
loopne
gs
xchg
in
scas
in
mov
in
xchg
xchg
stc
cmp
aam
je
pop
les
mov
mov
loopne
fadds
xchg
loop
and
scas
nop
outsb
out
sub
xor
test
test
test
push
in
cmp
subb
and
mov
ret
lcall
xor
sysret
push
xchg
out
pusha
sub
cmp
int
pop
arpl
subb
insb
push
xchg
stc
mov
cmp
mull
fxch
jle
cmc
sub
pop
xchg
cmp
sub
leave
out
repz
pop
cmc
adc
mov
subl
mov
outsl
cmp
mov
aas
fnstenv
sub
cmp
xchg
inc
inc
bound
add
jo
mov
pop
ret
and
push
incb
sbb
jmp
pop
je
sahf
test
fidivl
stos
jns
lret
fdivrl
adc
lcall
setle
cmp
mov
and
sub
pop
out
mov
ja
sbb
stc
and
pop
mov
les
lods
lock
mov
jbe
mov
push
lahf
or
outsb
pop
std
in
dec
or
adc
insl
mov
ljmp
in
rcrl
xchg
popf
fidivs
dec
cltd
in
stos
je
cld
xchg
adc
mov
jo
jp
mov
sub
sbb
adc
dec
filds
xchg
or
push
or
idiv
bound
jbe
and
in
ret
sbb
xor
test
sbb
push
mov
mov
les
cli
cmp
popf
in
sbb
add
into
test
add
fcoms
mov
stos
dec
jnp
push
mov
mov
dec
xchg
inc
out
aad
mov
mov
push
fmul
and
jecxz
ret
inc
adc
jno
inc
in
or
insb
dec
push
adc
aas
push
mov
adc
adc
cltd
add
aas
cli
jg
out
sarl
fdivrl
ljmp
aaa
xlat
movsl
add
mov
test
push
add
xchg
pop
in
cs
idivb
sbb
sub
stos
sbb
leave
jo
push
enter
mov
and
adc
std
sub
sbb
insb
mov
pop
inc
loop
and
pop
cmpsb
into
fidivl
mov
xor
mov
lahf
push
jecxz
into
cmp
lods
pusha
ss
adc
jno
pop
adc
out
pop
adcl
jno
nop
mov
rclb
insb
fs
popa
stos
stc
fbstp
sbb
xor
gs
or
jae
call
mov
mov
daa
xor
pop
test
into
fldenv
js
movsl
and
mov
arpl
fistpll
lret
mov
cwtl
pop
jnp
call
nop
inc
sahf
jb
fidivs
push
fbstp
loope
testb
ss
fwait
pop
pop
adc
jb
test
or
pop
lods
femms
mov
add
and
and
xchg
mov
loop
push
inc
sahf
pop
lret
mov
das
addb
jmp
cld
xchg
shlb
lods
sbb
cmpsl
in
icebp
loop
leave
test
mov
lcall
adc
shrl
mov
inc
mov
pop
loope
push
add
in
jae
scas
mov
cmp
xor
jo
ret
push
arpl
pusha
hlt
sub
pop
movsb
dec
lds
pop
adc
push
add
aas
mov
push
xor
testl
xchg
push
outsb
pop
pop
sbb
sbb
popa
mov
leave
lret
test
outsl
test
loope
push
nop
push
scas
mov
push
loopne
push
push
sub
xor
cmp
fsubrl
mov
inc
fs
mov
or
out
inc
mov
mov
insl
pop
dec
lock
and
jno
les
cmpsl
stc
sbb
fwait
mov
test
xor
cmp
aad
in
mov
mov
xlat
push
mov
rclb
or
sbb
jle
cwtl
sbbb
lret
cs
dec
dec
or
pop
mov
mov
inc
test
pop
add
das
enter
sub
test
sub
push
mov
movl
les
out
into
loopne
ds
int3
push
xor
cmp
mov
dec
add
dec
sbb
lock
xchg
cmpl
std
lea
daa
mov
jp
in
mov
or
inc
add
subb
push
pcmpeqw
inc
es
daa
stos
enter
or
adc
sub
call
xchg
fwait
in
mov
cmp
gs
aaa
mov
xchg
addl
outsl
add
gs
xchg
push
fisubl
cmp
shlb
and
outsl
push
jae
lods
or
data16
mov
es
out
arpl
jne
xchg
in
test
pop
cmp
mov
popf
aad
mov
mov
ljmp
xor
out
test
mov
and
dec
loopne
mulb
sub
mov
jo
xchg
shlb
and
cs
inc
ret
add
mov
xchg
jmp
mov
mov
cltd
test
popa
imul
mov
push
insl
mov
clc
mov
push
das
jmp
movsl
pushf
sub
mov
mov
dec
push
jmp
stos
pop
mov
mov
in
enter
sbb
ljmp
pusha
movsb
or
jmp
push
sar
ret
sbb
addr16
dec
dec
xor
pushl
mov
iret
sbb
mov
es
push
pop
clc
sub
lds
mov
add
cwtl
cmp
adc
jmp
or
repz
cmove
daa
adc
sbb
ja
dec
fwait
pop
push
and
pop
and
sbb
add
rcrb
loop
and
push
sub
jb
rolb
int3
jo
jb
and
ret
fdivrs
test
mov
mov
xorl
cld
sbb
dec
jne
out
xor
add
xchg
in
out
cmpsb
mov
pop
repnz
cmpb
inc
cmc
xor
push
stos
pop
mov
lds
adc
scas
adc
pop
xchg
adc
dec
xorl
pop
jb
pop
inc
adc
inc
cli
xchg
movsl
orl
mov
or
inc
adc
addb
mov
in
in
add
shrb
sbb
cmpb
add
es
insb
add
adc
xor
jecxz
scas
repz
test
cmp
pop
xor
dec
js
push
mov
imul
data16
push
add
orl
mov
fidivrl
jg
xor
push
pusha
xlat
inc
jne
push
xchg
shlb
insb
or
xor
and
test
cmp
dec
pop
fimuls
push
or
repnz
sbb
arpl
int3
outsl
pop
pop
loopne
push
mov
jno
xor
sbb
jge
shll
dec
jae
pop
pop
pop
jnp
dec
mov
fwait
pop
lods
cmc
push
mov
andb
dec
or
push
sub
es
dec
mov
fbld
or
sbb
and
icebp
sti
mov
repnz
sub
aam
sub
sbb
ret
xchg
sbb
pop
fcmovb
je
int
mov
cltd
and
shll
pop
and
xchg
xchg
scas
ja
and
xorb
jae
icebp
ja
pop
pop
popf
test
mov
movsb
adc
into
push
xchg
pop
and
adc
rolb
inc
pusha
push
int
stos
push
pop
push
aam
ret
in
sub
or
mov
push
sbb
dec
mov
adc
push
pushf
sub
add
pop
daa
sti
aad
xor
test
inc
insl
adc
cmp
xor
imul
jge
cmp
fadd
jnp
jp
xchg
pop
jge
xchg
es
push
aad
sbb
jl
dec
sbb
fildl
daa
mov
lahf
mov
push
sbb
cmc
insb
loop
mov
sbb
mov
test
movsb
push
jl
push
mov
jg
sahf
sub
and
jno
mov
pop
xchg
pop
cwtl
jl
inc
sbb
insl
jae
cmp
cmpsb
mov
xchg
cmp
or
jle
xor
fmull
shlb
cwtl
test
insb
xchg
jmp
xchg
cmp
shll
cmp
iret
aas
or
dec
xchg
jns
mov
mov
mov
dec
add
into
inc
mov
fs
mov
js
xchg
inc
iret
jl
dec
push
jmp
outsb
ja
je
push
ret
sub
rolb
sahf
idivl
in
je
psrld
in
call
adc
lret
mov
loope
push
leave
popf
xor
cmp
cmpsl
adc
cmpsl
xchg
jecxz
fnstsw
or
push
sbb
repz
sub
inc
cmc
lret
inc
int3
gs
sbb
lahf
push
in
lret
pop
out
cs
xchg
cs
stos
mov
xchg
ficoml
repz
or
pop
outsb
mov
mov
lea
in
xchg
add
push
jbe
subl
hlt
outsl
sbb
mov
loope
mov
push
lahf
sbb
addb
mov
or
adc
xchg
push
leave
sub
in
mov
rclb
mov
and
shrb
push
and
pushf
xchg
jge
jae
inc
cmpsl
test
ds
nop
push
jbe
cmp
and
adc
movl
dec
sbb
cmp
in
inc
cmp
add
mov
sub
pop
bound
jl
mov
pusha
dec
cmp
pop
inc
push
xchg
lods
enter
mov
push
mov
fwait
jecxz
addr16
dec
or
push
ss
sub
sbb
xor
test
push
dec
jmp
sbbl
push
xlat
in
loop
aad
stos
xor
cmc
daa
jns
insb
in
arpl
and
adc
adc
or
fiaddl
nopl
fmul
xchg
mov
add
or
loopne
sbb
orb
inc
lret
push
push
dec
lock
test
add
movsb
xor
je
shlb
mov
jns
bnd
js
cwtl
mov
imul
jl
pop
xor
mov
mov
jl
stc
lcall
mov
or
popl
movsb
outsb
shll
rol
xor
arpl
sub
es
push
ficoml
and
fstp
es
sub
in
movsb
and
fnstenv
mov
or
xchg
sbb
daa
andb
and
movsl
cmp
xor
dec
jge
and
test
ja
mov
jnp
xlat
pop
enter
fsubrl
fwait
nop
jnp
ljmpw
push
fsubrs
clc
movsl
sub
mov
sahf
mov
and
sbb
and
add
insl
lret
loope
sbb
pop
addr16
add
in
xchg
xchg
stos
xor
fucomi
into
dec
popa
cmp
fs
push
mov
pop
cmp
test
cmp
pop
aaa
bound
inc
jb
test
dec
nop
and
ds
lock
jnp
sbb
sbb
adc
sahf
mov
ficompl
sbb
outsl
pusha
sbb
add
dec
pop
std
cld
adc
shr
in
cmpsl
out
cwtl
push
jle
mov
inc
sub
fdivr
dec
out
sahf
inc
inc
mov
and
arpl
add
repnz
mov
mov
into
xchg
jmp
nop
push
insl
push
pusha
cmp
dec
out
jle
lahf
aaa
add
adc
xchg
mov
stc
popf
sbbl
loope
iret
dec
mov
inc
lods
addr16
xchg
ljmp
inc
aad
inc
aas
in
xor
pop
in
nop
movsl
dec
xabort
xor
loopne
adc
mov
mov
fdivrl
gs
test
xchg
jbe
push
add
ret
mov
pop
dec
inc
cmp
xchg
mov
push
push
sbb
mov
fsubp
pop
mov
out
and
fdivrs
lods
sarl
mov
jmp
ret
sbb
push
dec
mov
push
pushf
add
mov
lcall
pop
dec
rorb
or
dec
cli
cmp
mov
push
sub
dec
push
mov
aaa
mov
fildll
mov
xchg
xlat
fwait
movl
pop
dec
inc
popf
sbb
add
iret
fcmovu
fildll
mov
jbe
and
jmp
sub
pop
lret
pop
jg
and
icebp
dec
rolb
dec
cwtl
push
jp
or
push
pushf
js
mov
push
out
insb
fldl2e
test
add
inc
aas
xchg
les
mov
ljmp
sub
cmp
loop
aaa
jbe
xorl
into
lods
ror
imul
push
push
in
fisttps
lods
and
pop
cmpsb
xor
outsl
push
orb
adc
inc
inc
cmpsl
inc
xchg
inc
mov
jns
mov
push
stc
sub
cmp
ja
in
in
push
mov
lds
test
shl
lods
push
in
jnp
stos
push
dec
jle
jbe
jae
pop
popf
or
pop
sub
dec
and
mov
icebp
and
jge
iret
test
dec
push
jno
aad
jle
js
push
cltd
mov
adc
sub
sub
int
dec
fs
inc
jp
add
dec
outsl
push
mov
dec
sbb
mov
scas
loope
je
hlt
add
jle
xlat
movsb
xchg
rolb
mov
push
mov
scas
mov
pop
pop
clc
adc
and
ret
xchg
add
fwait
test
das
xchg
shl
test
std
lds
and
lods
es
sbb
cmp
fs
jle
cmp
dec
out
icebp
sbb
dec
daa
out
push
lock
mov
xchg
scas
jne
iret
out
xchg
cltd
out
pushf
aam
ja
lods
pop
leave
popa
flds
cmp
sub
js
cmpsl
sarb
out
shrb
cmp
js
jo
jbe
scas
nop
shlb
and
mov
jnp
sbb
mov
jp
push
dec
pop
push
pop
jge
loope
or
ficompl
mov
repnz
stc
repnz
orb
dec
aam
adc
adc
sbb
or
int
scas
mov
daa
xchg
imul
cmp
enter
inc
fildll
sahf
mov
sbb
es
inc
push
lock
ds
es
icebp
fldcw
stc
loopne
adc
out
add
jg
stc
jb
aad
pusha
ss
out
daa
loop
scas
test
pop
aad
cli
mov
mov
pushf
rcrb
adc
push
xchg
cltd
jo
jecxz
loope
pop
mov
pop
or
mov
addr16
jbe
mov
mov
cltd
andl
sbb
jle
rorl
cmpsb
ds
inc
enter
push
push
cmp
subb
jl
sbb
mov
ret
lret
sub
insb
andb
loop
and
fwait
push
scas
test
cmp
jb
pusha
addr16
cmp
in
dec
add
jl
rorl
dec
jnp
xor
lcall
test
pop
inc
mov
dec
dec
ss
adc
adc
sbb
mov
cs
leave
push
cmc
mov
or
xor
pusha
xor
loope
js
addr16
mov
jmp
lret
jb
push
push
push
in
add
or
clc
filds
in
sub
inc
fwait
xchg
inc
call
mov
inc
bnd
xchg
or
xchg
mov
pop
mov
arpl
sub
xchg
test
lahf
fadds
mov
nop
dec
jg
outsl
out
imul
push
movsl
jge
call
push
int3
aas
dec
or
fs
ret
jl
sarb
pop
movb
fidivrs
jo
imul
dec
imul
ja
stos
btsl
aam
mov
shlb
movsl
out
jns
sub
pop
adc
push
adc
hlt
sub
mov
das
jle
and
ja
stos
or
add
adc
daa
jp
sahf
push
ljmp
push
xor
inc
dec
xchg
dec
mov
rcrb
dec
test
and
divb
lods
scas
mov
insl
mov
outsb
adc
mov
sub
dec
mov
repz
leave
insb
mov
or
mov
lds
mov
adc
push
popf
mov
jge
xchg
fbld
rcr
mov
das
leave
mov
cld
sub
or
nop
add
sbb
adc
inc
cmp
jns
sti
jmp
xor
jae
in
push
into
dec
sub
call
stc
mov
hlt
outsl
mov
jge
repz
pushf
punpcklbw
in
gs
std
cmpsb
fstl
outsb
push
sar
add
iret
inc
or
enter
sarb
jp
pop
or
add
xor
loopne
add
xor
adc
daa
stos
clc
adc
sub
lock
mov
mov
cli
sahf
rorl
push
mov
push
lds
cmp
je
sbb
pushf
subb
pop
imulb
dec
jo
movsl
rorb
stc
and
ret
jno
push
fbstp
sbb
aas
push
sub
fwait
mov
cmp
push
fwait
repz
je
inc
aam
div
lret
daa
and
xchg
adc
ret
cmp
fs
movsl
out
mov
fcompl
sub
es
cmpsb
insb
out
mov
push
inc
pop
roll
xchg
pop
xchg
lds
xor
inc
imul
call
xchg
roll
subl
mov
and
ret
push
and
stos
std
xchg
scas
mov
insl
rcrb
jl
pusha
add
cmp
add
mov
cmpsl
les
loope
fidivrs
adc
fwait
rorb
fs
mov
mov
dec
repnz
adc
popa
mov
mov
sbb
push
xchg
cmp
insl
xchg
dec
shlb
add
mov
mov
dec
lock
movsb
ret
popf
sahf
in
xor
xor
ja
mov
and
xor
ds
jg
dec
dec
loop
xchg
jno
jbe
sbb
xor
jnp
push
cmp
test
inc
stos
add
jge
insl
pushf
cmpsb
sahf
insb
jmp
or
push
jecxz
rcr
gs
adc
pop
and
xor
mov
sti
dec
pushf
sub
aad
movl
cmp
push
jle
pusha
mov
add
mov
and
aaa
sbbl
jne
sbbb
push
mov
mov
loope
and
pop
push
js
mov
or
xlat
lahf
mov
mov
in
jg
testl
mov
testb
shlb
push
cmp
sub
sub
sub
dec
xchg
add
inc
test
mulb
enter
mov
mov
mov
xchg
jns
ljmp
lods
lea
outsb
jle
xlat
jp
cmpsb
ror
test
xor
cmp
cmp
lret
inc
push
and
cmp
or
push
mov
jg
or
or
shrb
add
daa
and
decb
stc
and
sbb
xchg
xchg
jbe
fmulp
push
inc
test
and
xchg
in
cmc
xchg
jne
push
jmp
sbbb
pop
pop
testl
inc
pop
dec
push
mov
dec
xor
add
outsb
aas
pop
shl
fwait
dec
stos
mov
dec
pop
add
hlt
mov
aas
cmp
lret
xchg
sahf
cmp
test
in
pushf
dec
test
inc
in
out
jno
push
and
cmpb
adc
cmp
aam
bound
ljmp
mov
lods
cltd
xchg
hlt
pop
aas
add
and
sahf
inc
add
sbb
or
movsb
mov
ret
daa
pop
xlat
push
jb
out
adc
lds
into
push
es
mov
mov
icebp
cmc
push
mov
mov
pop
dec
xchg
clc
test
mov
sbb
xor
sahf
or
cmc
mov
fcoms
ljmp
pop
es
cmpsb
mov
ret
add
movd
f2xm1
repnz
or
lods
xlat
js
dec
pop
scas
xor
lcall
aam
leave
int
in
test
push
mov
push
mov
lret
pop
sbb
pop
call
insb
or
pop
filds
xchg
xchg
dec
int3
or
sti
push
and
int3
shr
pop
mov
popa
scas
in
cmpl
outsl
ss
enter
adc
test
xchg
lret
sbb
mov
and
adc
aaa
test
dec
iret
mov
arpl
mov
pop
addr16
jb
outsl
pop
jns
mov
fists
or
inc
add
cmp
sub
adc
push
cwtl
ds
imul
mov
sbb
push
or
xor
cmpsl
test
mov
and
and
add
xchg
xor
adc
cli
stos
mov
cmc
je
cmpsl
xchg
out
inc
dec
inc
or
pop
movsb
or
sbb
in
mov
rclb
sbb
pop
mov
jmp
dec
sahf
cmp
pushf
loopne
subb
aad
insl
aaa
pop
or
lea
inc
imul
ds
xor
sub
jle
sbb
ss
lods
push
ficoml
mov
xchg
dec
mov
dec
or
in
inc
push
pop
cmc
mov
test
jae
or
into
movsb
cwtl
xchg
sbb
lret
jnp,pt
or
inc
pop
push
inc
adc
ja
shl
inc
cmpsb
sti
cmp
and
xchg
and
jbe
mov
pmaxsw
daa
test
sub
mov
test
mov
and
jl
mov
cmc
test
mov
outsb
push
fsts
jp
sarl
fdivl
dec
adc
cmp
push
pop
jnp
adc
sub
adc
inc
and
sub
cmp
add
mov
mov
push
rcll
mov
rcll
lret
stc
ljmp
mov
mov
jmp
fnstenv
lock
jne
xchg
or
dec
xor
stc
insb
cmp
in
in
stos
lea
sbb
xor
push
je
pop
jmp
push
push
fnstenv
pop
xor
inc
push
cmp
jnp
or
sbb
dec
in
pop
insb
lock
xchg
sub
lahf
imul
inc
xor
dec
dec
sbb
stc
enter
fnstsw
add
setl
add
mov
xchg
mov
push
dec
push
arpl
dec
test
fs
pop
fldenv
sub
jb
push
mov
or
mov
jbe
push
pop
iret
cwtl
rcl
push
pop
adc
fidivl
in
nop
push
gs
jp
sbb
adc
jmp
sbb
in
adc
cmp
push
xchg
push
push
add
aam
add
adc
pop
or
cmp
cmp
mov
jnp
lahf
sarb
pop
mov
mov
jb
jecxz
scas
mov
mov
clc
mov
push
lahf
xor
pop
loope
std
add
int3
cwtl
mov
dec
sub
lea
iret
add
xchg
push
cmpsl
adc
insb
hlt
int3
cli
mov
mov
in
mov
das
in
lea
jle
ret
inc
icebp
jno
xor
push
jmp
and
aaa
pop
mov
imul
sub
mov
mov
out
bound
push
popf
jo
push
cmp
sbb
and
or
cmovp
loop
pop
inc
int
nop
sub
popa
je
andl
repz
jns
mov
mov
addr16
insb
movsl
sbb
pop
mov
adcl
sbb
sbb
std
mov
fnstsw
adc
cld
outsb
jge
sub
xchg
mov
cmpsl
push
cs
jns
gs
inc
adc
loopne
xor
inc
ja
scas
loope
cmp
sarl
outsb
rorl
sbbb
inc
mov
cmp
pop
and
daa
dec
scas
scas
add
push
mov
adcb
in
out
out
lret
mov
sbb
dec
xchg
int
inc
mov
test
jo
push
in
test
push
mov
and
jb
std
les
jmp
sub
int3
cmp
aas
cmp
add
mov
out
adc
iret
out
sbb
push
push
mov
lahf
ja
sbb
fs
cmp
mov
lea
xchg
push
mov
cmc
pusha
dec
dec
and
int3
mov
fisubs
cmp
pop
sub
jb
pop
lods
and
or
sbb
and
or
test
jge
sahf
mov
lds
xadd
lahf
push
cs
mov
adc
pop
pusha
das
fisubrs
sbb
add
inc
pop
push
std
out
push
ja
cmp
jae
leave
mov
dec
or
leave
ret
movsl
sbb
lods
stos
add
dec
push
xchg
jne
lcall
into
mov
call
adc
emms
adc
inc
repnz
pusha
cmpsl
sub
jp
mov
aam
dec
mov
data16
pop
sub
sbb
jg
mov
imulb
mov
cs
stos
add
loope
fcmovnu
in
fildll
or
icebp
or
pop
mov
push
in
pushf
xlat
nop
jb
push
push
jle
mov
sub
testb
pushf
enter
test
imul
rorb
adc
jge
daa
jmp
pop
pop
scas
jns
add
aas
push
mov
std
adc
or
mov
test
add
test
addr16
pop
and
and
sti
jmp
xor
adc
sub
cmp
xor
es
mov
out
or
aaa
mov
mov
bound
clc
nop
mov
fdivrs
ss
jbe
cmp
fmuls
mov
sbb
arpl
mov
xchg
add
dec
jecxz
sbb
pop
movsb
push
adc
popa
add
jbe
mov
aaa
pop
arpl
push
sbb
jae
xorb
addl
hlt
aam
xchg
mov
cmp
mov
xorl
pop
bound
aas
sbbl
lret
mov
jns
inc
lcall
mov
enter
jbe
mov
out
cmpsl
addl
ffreep
cmp
dec
pop
xor
dec
dec
lret
mov
pop
push
cmpsb
sarl
jns
cmp
fwait
mov
in
fwait
sbb
icebp
in
xor
test
mov
jb
add
nop
lea
mov
scas
mov
push
sar
testb
jmp
sub
hlt
icebp
test
mov
or
mov
or
lahf
mov
mov
leave
and
fldt
je
lods
test
testl
imul
jge
pop
shrl
pop
or
add
mov
jne
xlat
popa
mov
pop
pop
out
sub
jecxz
movsl
iret
cs
movsb
lahf
adc
sub
imulb
js
sbb
sub
jg
loopne
push
out
mov
in
jle
inc
scas
inc
js
out
mov
outsb
sbb
xor
pop
mov
ds
push
fmulp
shrl
fisttpll
jmp
fnstcw
push
add
jle
scas
pop
cs
in
aam
jle
and
rolb
xchg
jge
or
pop
pop
in
mov
add
mov
push
cmpsl
cmpsl
insl
dec
out
lret
add
xor
inc
cs
jl
in
ret
ds
xor
test
jge
pop
dec
fdivr
cmp
dec
fisubl
mov
mov
mov
dec
inc
cli
jb
push
imul
jnp
dec
mov
xor
out
dec
fists
pop
aas
add
mov
adc
mov
fistps
cmp
outsb
sub
mov
mov
sbb
outsl
ret
aam
or
dec
pop
xchg
and
lock
rcrb
movsl
pop
stc
dec
loopne
inc
sub
cld
mov
int
jno
xchg
mov
push
jp
cli
mulb
pop
adc
test
negb
ret
andl
shrb
fsubrl
push
js
enter
adc
inc
ret
and
es
push
lds
add
aad
xchg
in
pushl
mov
and
push
shl
stc
mov
sbbb
or
and
mov
push
push
xchg
jle
mov
push
sbb
cmpb
outsb
xor
ds
sub
lcall
xorb
mov
ret
cli
xchg
scas
cmp
and
jg
cmp
pop
and
mov
xlat
adc
push
jbe
test
daa
push
orb
or
orb
and
shr
movsb
push
out
xor
lock
lcall
ljmp
and
cmp
repnz
arpl
loop
dec
add
decb
divb
fisttps
mov
lahf
sti
scas
aas
cmp
bound
stos
pop
cmpl
push
int
and
pop
lods
xchg
inc
das
push
pop
add
inc
arpl
ljmp
adc
das
add
ret
ljmp
int3
insb
sbb
push
or
mov
stos
out
and
inc
shlb
fdivrl
fwait
cmc
pop
out
and
sub
sbb
sarb
les
push
mov
movsl
pop
add
mov
xchg
cld
in
pop
enter
ljmp
push
shll
mov
sbb
jne
mov
push
xchg
mov
cmp
pop
adc
repnz
test
jno
jl
push
pop
xlat
dec
cli
testl
mov
cltd
or
inc
jbe
inc
inc
stos
cmp
mov
pop
jg
movsb
pop
dec
pushf
movsb
imul
int
lahf
xor
inc
cmp
mov
sbbl
int3
dec
pop
out
ret
insb
mov
sbbl
jo
es
outsb
jle
inc
int
cmp
jb
lahf
push
test
int3
pop
mov
imul
adc
xchg
lret
jmp
pop
outsl
and
fadds
les
or
sub
sub
rolb
cmp
cltd
push
outsl
mov
push
pop
mov
popa
cmp
sbb
mov
insl
xchg
xor
std
mov
dec
popa
dec
cmp
push
mov
mov
out
aaa
lds
bound
push
xchg
stc
jge
repz
in
pop
lods
add
xor
popf
and
gs
adc
inc
mov
in
adc
push
fstpl
lea
out
mov
push
push
dec
adc
push
sbb
pop
mov
out
arpl
es
mov
mov
inc
flds
popa
aad
test
push
jl
aam
cld
dec
mov
leave
push
push
adc
hlt
cmc
xor
xchg
mov
xchg
sar
andb
cmp
cmp
out
or
pop
jae
jbe
mov
scas
inc
mov
push
xchg
sub
mov
js
cmp
jecxz
fwait
in
dec
imul
jae
jo
out
mov
pop
xchg
dec
push
pop
imul
ret
mov
dec
pop
lods
push
xorl
enter
xchg
lahf
scas
push
add
adc
ficoms
cwtl
mov
or
pushf
or
jb
jp
scas
mov
mov
fidivrl
divl
hlt
sti
mov
xlat
xor
inc
outsl
jmp
adc
das
and
mov
js
jmp
pop
movsb
jo
bound
cmp
loope
mov
mov
jo
sarb
das
ja
cmp
pop
xchg
stos
cltd
or
int
jl
aad
pop
pop
push
cmpsl
enter
cli
lock
daa
jmp
mov
loope
sbb
test
mov
push
rcr
gs
mov
fwait
inc
xor
xchg
inc
clc
aas
out
jno
int3
shlb
pop
orb
loope
idivl
inc
outsl
push
mov
inc
jecxz
lods
jle
inc
mov
popa
push
adc
inc
and
sub
pop
sub
test
mov
js
xchg
mov
aam
lods
xor
or
add
lcall
pusha
pop
mov
imul
iret
cmp
push
rcrl
inc
std
pop
call
loop
fdivl
in
pop
push
or
xchg
leave
into
push
mov
loopne
ret
les
pop
fwait
sahf
aas
ss
jb
loope
pop
xchg
loop
call
add
and
sbb
ret
xchg
jmp
cmp
mov
sub
shlb
adcb
aam
daa
cltd
dec
imul
les
lret
fwait
lods
push
and
into
adc
push
das
push
push
xor
mov
push
pop
and
shrb
adc
out
je
and
xor
in
mov
jl
pop
inc
push
test
jns
inc
divl
mov
adc
dec
hlt
mov
sbb
cs
push
xchg
stos
shll
es
push
outsl
mov
shl
and
sbb
fmuls
test
sbb
cmpsb
add
std
test
push
ret
sub
in
ljmp
sysret
inc
push
in
pop
pop
subl
push
hlt
ret
dec
jo
and
xor
cmp
push
push
test
push
or
jnp
cmp
stos
push
popa
mov
in
dec
or
mov
mull
xchg
sbb
aad
push
cmp
sub
aaa
test
mov
xchg
cs
mov
add
sub
jb
arpl
cmc
pop
lahf
sub
mov
push
jno
outsl
and
add
xchg
orb
jle
das
inc
fstpt
xorl
jns
cmc
fildll
mov
xchg
adc
fmull
movzwl
mov
mov
inc
xor
or
mov
push
std
inc
ret
enter
test
mov
jo
inc
call
sti
push
popf
mov
dec
inc
dec
jmp
out
std
lea
fcoms
inc
enter
sub
ss
push
jns
and
or
xor
sub
sub
adc
pop
test
pop
rcrb
movsl
call
push
mov
dec
loop
inc
mov
sub
rcrl
int3
iret
jg
icebp
add
sbb
xchg
xchg
daa
orb
imul
mov
sbb
add
jnp
frstor
mov
lock
enter
rol
test
test
lret
pushf
flds
push
push
nop
cltd
add
xchg
loope
rorl
inc
cmp
gs
lret
inc
scas
adc
int
pop
pusha
ret
mov
pop
orl
loope
push
lods
dec
lcall
mov
mov
jge
lret
pop
mov
decl
pop
loop
sbb
lods
and
add
js
xchg
pop
pop
sbb
insb
xchg
outsl
cmpb
sbbb
push
mov
xor
clc
sbb
jmp
cmp
mov
cmpsb
aam
int
lods
inc
mov
adc
cmp
jecxz
xchg
mov
shlb
addb
lcall
popa
bound
aas
stos
shlb
ret
rcl
sar
iret
rcrl
loop
sub
add
repnz
lret
enter
and
setnp
jmp
mov
lret
or
clc
mov
inc
adc
repnz
inc
or
adc
sbb
cmp
cltd
xor
push
outsl
mov
nop
mov
lods
cmpsl
cmpsb
adc
and
adc
mov
dec
fs
mov
es
dec
setl
push
xor
orl
sub
das
aas
cmp
mov
mov
mov
ss
mov
mov
mov
xchg
and
mov
or
mov
adc
loopne
int3
stc
adc
xor
jmp
jo
mov
xchg
incl
out
mov
sub
aaa
sahf
add
mov
rorb
sub
mov
sbb
lock
bound
leave
lret
lds
pop
shlb
xor
jge
inc
lods
pop
pop
push
inc
xchg
dec
test
jecxz
jns
mov
sub
cli
push
mov
int3
test
repz
hlt
js
loop
cs
es
divb
aad
mov
inc
mov
out
adc
cmpsb
pop
ret
fwait
insb
pop
popf
and
or
leave
mov
andb
fsts
xor
fstp
mov
adc
mov
add
daa
in
or
sbb
and
arpl
lock
and
pop
inc
adc
push
je
push
dec
mov
test
into
xchg
repnz
cld
mov
adc
insl
mov
imul
push
les
xor
addr16
xor
je
sub
or
outsb
lods
mov
aas
mov
mov
andb
pop
sub
xchg
sub
fidivrs
dec
nop
sub
shl
xchg
mov
cmc
stc
or
add
dec
pop
jmp
and
xor
ljmp
mov
js
adc
scas
xor
ljmp
test
sub
sbb
sub
push
pop
cmp
sbb
cmp
inc
xchg
xor
incl
les
jnp
push
lret
lds
push
inc
and
mov
adc
fdivrl
cltd
xchg
ret
or
jno
in
pop
cmp
sbb
xchg
fildl
fistl
mov
mov
sub
fs
xor
in
mov
push
cmp
arpl
xor
cmc
insl
ss
insb
lea
lret
lret
xsavec
mov
in
mov
add
mov
ret
jge
adc
shrb
mov
push
scas
jge
lcall
jnp
sbb
mov
lret
fcomi
sub
push
fldcw
cli
inc
mov
jle
mov
lods
sub
jle
lea
mov
sbb
inc
xlat
mov
cs
sub
push
and
aaa
adc
pusha
push
add
sahf
jp
fistl
adc
push
jl
dec
push
test
stos
and
xchg
or
lahf
rorb
mov
adc
sbb
sbb
notb
push
js
repz
push
mov
dec
int3
mov
pop
jecxz
xchg
fs
dec
filds
sti
sahf
push
xchg
out
cmpsl
cmp
shr
leave
pop
imulb
inc
or
pop
test
wrmsr
mov
insb
sbb
imul
stos
push
insl
dec
cltd
ss
aaa
ffreep
mov
cmpsb
dec
inc
sbb
and
dec
ljmp
push
fdivs
popa
push
repnz
insl
add
bound
xor
lahf
inc
int3
inc
adc
outsl
sbb
adc
mov
inc
dec
push
inc
notl
cmp
cmc
mov
sahf
xchg
outsl
into
in
inc
int3
aam
pop
xlat
cmp
cmp
and
mov
and
ret
clc
lcall
stc
ret
mov
leave
lea
dec
mov
clc
jo
xchg
loope
sarl
or
sub
pop
mov
or
ret
jae
movsb
arpl
fwait
jmp
movsl
adc
addb
in
xchg
fcoms
jp
dec
shll
adc
gs
repz
adc
mov
and
push
lock
in
fs
dec
in
loopne
lcall
pusha
xchg
insb
ret
fcmovne
or
jne
into
mov
xor
inc
ds
lods
adc
cmp
or
and
jmp
out
xchg
loop
sbb
sub
jns
jae
pop
inc
and
xchg
int
sub
cwtl
testl
or
jmp
jg
mov
mov
pop
push
insb
es
ss
push
test
addr16
dec
mov
jb
les
es
push
lea
std
and
scas
out
xchg
test
push
xchg
mov
xchg
imul
fxch
jge
push
fidivl
push
mov
sahf
mov
pop
lea
sbb
dec
pop
fcomp
sbb
xor
mov
pop
mov
mov
aad
sub
lock
cwtl
xor
sahf
xor
dec
push
in
jne
lods
in
es
sub
leave
sbb
int
mov
repz
inc
incl
push
in
inc
lods
jl
add
xor
xchg
xchg
pop
negb
fnstcw
adc
insb
dec
jnp
adc
xor
test
push
out
dec
mov
xchg
cltd
jb
sub
xor
xchg
or
cmp
jmp
pop
or
push
xor
push
shlb
cmp
pop
inc
lea
adc
clc
popa
sub
fisubs
jecxz
rcl
lcall
and
jmp
add
lcall
dec
cmpsl
pusha
cwtl
xorl
std
jno
jle
aam
jnp
add
es
push
pop
je
dec
es
lods
cmp
outsl
mov
cld
mov
mov
int
movsl
mov
add
sub
test
mov
rclb
divb
leave
cmpsb
push
lea
shrb
addr16
insl
mov
mov
aas
scas
dec
adc
push
mov
aas
xchg
push
cltd
push
imul
xchg
fisttps
hlt
rcr
es
or
adc
inc
sub
jmp
pop
repz
push
push
add
ss
mov
mov
push
xlat
and
adc
xchg
pop
push
xor
cmp
pop
loope
mov
movb
ficompl
and
outsb
aaa
push
mov
xchg
imul
addl
pop
jne
fdivl
clc
pushf
pop
and
data16
popf
loopne
arpl
push
lds
jnp
imul
dec
sbb
pop
pop
mov
mov
pop
fisubrs
sbb
movsb
in
aam
cmc
xor
addl
jno
lds
cmpsl
std
shll
pop
sbb
pop
inc
dec
mov
xor
arpl
or
outsl
es
or
and
mov
pop
add
rcll
sti
xchg
mov
fiaddl
mov
jl
sbb
jecxz
jg
in
repnz
insl
out
mov
into
add
jl
imul
gs
outsb
dec
movsl
lock
cmpsb
hlt
mov
add
loopne
gs
pop
inc
adc
lea
jnp
cmp
cmp
mov
mov
inc
mov
sub
cmc
jb
xchg
fsts
mov
neg
fdivrp
cwtl
dec
jp
jnp
add
dec
in
stos
push
mov
adc
mov
fwait
test
lods
aad
loope
push
out
lock
fadds
cmpsb
scas
sub
sarb
xchg
cmp
cmc
jge
outsb
dec
dec
xchg
pusha
outsb
xor
adc
jne
mov
popf
sbb
out
shlb
loop
mov
ret
push
fstl
stos
inc
cwtl
outsb
stc
or
nopl
in
xorl
push
pop
sar
hlt
mov
push
push
pop
cmp
mov
std
jge
pop
mov
pop
hlt
test
lods
adc
leave
mov
ficomps
mov
xchg
icebp
mov
lcall
adc
sub
pop
inc
movsl
push
dec
jge,pt
inc
or
loopne
sbb
sub
fs
pop
xchg
cmp
cwtl
rolb
cmpsl
mov
mov
repnz
push
je
loope
dec
popa
aas
data16
dec
lock
popf
leave
stos
inc
xchg
push
pop
stc
adc
shrl
stc
pop
jecxz
jns
mov
cltd
out
and
jg
in
xor
rclb
outsb
out
xchg
inc
ja
ret
cmp
les
sub
jp
cmp
xor
sti
jmp
mov
lret
scas
dec
fs
clc
setg
stc
lahf
sbbb
mov
ja
adc
sub
adc
ljmp
xchg
and
aam
push
jp
xlat
pop
push
stc
xchg
addr16
cmc
sbb
adc
dec
cmpsb
and
std
data16
mov
fs
outsl
dec
pop
push
push
bound
ss
pop
addb
adc
inc
xor
jecxz
data16
leave
lock
jb
pop
sub
sub
inc
cli
xchg
xlat
jb
nop
pop
inc
loope
arpl
leave
cwtl
int
mov
xchg
or
out
mov
bound
outsl
push
ja
add
loop
fs
in
push
je
lret
dec
mov
frstor
push
mov
and
out
mov
ret
out
fld
into
fisttpll
xor
and
pop
iret
or
mov
bound
lret
movsb
lret
inc
cmc
fsqrt
adc
jg
add
jle
aas
cs
push
or
call
sbb
push
mov
fsubl
adc
pushf
push
aad
mov
int
adc
mov
loope
dec
imul
mov
incl
or
insl
ret
push
into
arpl
inc
ret
test
daa
xor
iret
popa
test
push
scas
fistpll
sbb
jl
adc
add
sbb
mov
imul
imul
sbb
mov
movsb
cltd
test
adc
cmpsl
push
inc
lcall
hlt
jl
clc
out
fwait
leave
aaa
test
iret
addr16
popf
insl
jne
lods
or
inc
and
or
jmpw
and
jae,pt
enter
add
mov
stc
out
or
mov
mov
dec
dec
push
cmp
jae
je
mov
lds
mov
in
mov
sarb
xchg
cli
scas
xlat
ficoml
sarb
sti
adc
movsb
test
clc
and
enter
sub
push
xor
mov
loopne
jle
subl
pop
inc
mov
outsl
fwait
sub
imul
out
movb
leavew
sub
ds
cmp
mov
iret
bound
stos
ja
sahf
movl
cmp
adc
push
je
push
jg
hlt
in
es
andl
xchg
push
enter
cmp
ljmp
out
push
dec
or
sub
jmp
ret
dec
xor
adc
outsb
push
nop
push
lret
add
mov
scas
mov
push
outsb
sbb
scas
xchg
mov
mov
arpl
mov
aaa
mov
or
push
sbb
cmp
pop
xchg
ss
cmpsl
mov
enter
and
sahf
sbb
int
test
repnz
aam
imul
dec
add
inc
das
xor
sbb
fcoml
mov
mov
xlat
loopne
shl
testb
outsb
mov
mulb
fsubrp
pop
addr16
fwait
sbb
pop
mov
push
inc
outsb
pop
lods
pandn
js
ja
dec
adc
pop
or
in
mov
cmp
sti
das
cwtl
and
dec
push
xchg
pop
push
js
cmc
sub
popf
in
inc
loopne
lret
xor
scas
aad
mov
mov
adcb
mov
pop
adc
stc
inc
imul
scas
mov
and
mov
in
sbb
mov
push
and
adc
fists
xchg
sbb
aas
pop
rorl
out
iret
fcomps
jecxz
pop
stc
int3
stos
pop
dec
push
int3
scas
push
xlat
scas
mov
add
dec
or
stos
adc
addl
mov
cmc
aas
ds
push
push
in
stc
cmp
aad
lea
outsl
dec
sbb
mov
fs
call
loopne
cmpsb
lret
jns
dec
jo
or
xchg
push
pushf
xlat
push
in
mov
mov
add
adc
mov
xchg
mov
and
dec
or
stos
test
sub
xchg
push
imul
adc
rolb
std
lret
adc
imul
les
jl
lcall
daa
mov
or
add
mov
adc
push
mov
mov
and
and
in
push
sahf
xor
cmc
or
sbb
xchg
addr16
addb
rol
idivl
jge
imul
loop
mov
into
pop
arpl
sub
push
add
rorl
cld
lock
scas
sbb
adc
fwait
outsb
cmp
imul
xchg
pop
cpuid
aad
xchg
outsl
into
das
jb
les
test
mov
xchg
outsb
mov
loopne
mov
jmp
mov
mov
add
movsb
jle
icebp
and
add
popa
rolb
cmpsb
arpl
ljmp
mov
inc
mov
iret
xchg
push
mov
insb
push
inc
stos
pop
push
dec
rolb
dec
sbb
xor
xchg
dec
cmpsb
das
sbb
insl
cmc
push
mov
mov
jnp
and
dec
cmp
adc
js
or
push
cmpsl
push
je
dec
loope
add
adc
push
shll
mov
loop
mov
sub
je
lds
jmp
sbb
fidivs
cli
shrb
ficoml
enter
pop
idivl
out
and
into
je
and
rclb
out
xchg
repnz
jbe,pt
test
int3
xchg
sti
fcomps
inc
push
jp
ror
ret
leave
and
imul
aaa
daa
cmp
iret
dec
pminsw
sbb
stos
xchg
and
cmp
mov
test
xor
jbe
rcrb
jno
or
outsb
hlt
ret
popf
mov
or
mov
push
xor
add
xor
aam
sub
pop
lret
adc
cld
xorb
adc
jne
and
imul
cmc
jb
cmc
xlat
cmpsl
lods
xchg
xor
cmc
mov
ds
ss
xchg
dec
xchg
dec
jecxz
lds
cld
cmpsl
cmp
outsb
or
lret
scas
lds
adc
enter
pop
sahf
mov
xchg
mov
arpl
cmpl
mov
cs
ret
mov
lret
dec
mov
add
shl
in
mov
mov
call
subl
inc
stc
negl
add
dec
xchg
jbe
cmp
sti
adc
aad
fwait
ja
orl
sbb
mov
in
push
dec
mov
or
push
jle
mov
fidivs
add
fmuls
or
ss
je
outsl
test
inc
pop
sbb
pop
outsb
imul
cmc
jmp
jo
dec
subl
inc
outsb
decl
addl
and
out
cmp
pop
mov
push
fistl
jns
in
cmpsl
jmp
mov
dec
js
inc
loope
mov
mov
mov
je
idivb
test
dec
insl
push
ljmp
xor
jg
out
test
dec
inc
xchg
out
pop
jp
add
xlat
movsl
sbb
ret
pop
lods
cmp
dec
addl
push
mov
movsl
rolb
mov
mov
and
pop
lahf
sbb
out
sbb
leave
scas
scas
push
xchg
mov
loope
scas
pop
xlat
aam
cld
clc
pop
inc
jno
jmp
adc
aad
lods
fnstsw
pop
mov
dec
jge,pn
dec
push
add
jne
mov
pusha
fs
sub
pop
jl
insb
addb
dec
rorl
mov
mov
adc
dec
leave
movb
xchg
stos
in
xor
adc
dec
ds
pop
add
jg
out
xor
jmp
scas
add
fisubl
jmp
int
lret
sbb
cmp
sub
mov
mov
sbb
dec
dec
pop
test
add
cmp
add
ret
xor
pop
push
xchg
push
sbb
inc
in
fildl
sbb
in
ficoms
mov
dec
inc
rorb
jno
add
xor
rol
jbe
adc
sub
sbb
inc
enter
lret
test
mov
pop
pop
cmp
fidivrs
dec
inc
xchg
ja
jmp
mov
icebp
cmp
sub
xchg
es
in
adc
imul
inc
push
add
testl
jb
cmp
sub
jmp
cmpb
jmp
pop
je
mov
adc
jg
or
neg
jg
cld
stos
sbb
loop
data16
leave
sbb
push
test
cld
movsl
push
mov
pop
mov
int
pop
mov
push
lods
int
jp
cmp
push
fs
push
dec
test
and
xchg
fs
out
or
mov
push
sbb
mov
stos
ja
push
repnz
lret
fwait
mov
and
sar
dec
cwtl
and
and
or
jno
fisubl
imul
dec
insb
jecxz
call
test
inc
xor
adc
jmp
lcall
ljmp
in
std
jecxz
lahf
add
dec
popf
mov
sar
dec
shll
mov
pop
mov
inc
jle
adc
or
idivl
sbb
aad
push
adc
dec
xchg
ja
mov
pop
mov
repz
outsb
xlat
push
mov
push
push
lcall
je
or
sbb
cmpb
idivb
and
cmp
insl
sbb
arpl
pop
jno
test
adc
es
or
lods
jbe
les
movsl
mov
shlb
out
mov
add
popa
cmp
cld
out
pop
push
mov
in
jl
sub
std
push
test
addl
imul
or
add
mov
pop
or
frstor
dec
cmp
cmp
jne
jl
ret
in
movsb
or
das
add
mov
cli
mov
bound
and
fimull
xor
in
dec
jb
lods
xchg
xchg
js
mov
in
fistpl
dec
and
pop
push
int3
inc
mov
mov
mov
dec
cmp
pop
dec
icebp
xchg
xor
push
int
aam
jno
adc
add
mov
dec
mov
shrb
pop
mov
mov
leave
sbb
mov
push
repz
sbb
lock
into
xlat
push
push
push
std
iret
addr16
add
lret
fisubl
ja
adc
add
fcomip
aaa
scas
push
loop
jle
ljmp
xor
ja
shll
aas
and
icebp
xchg
inc
repz
dec
std
nop
or
push
shll
jle
mov
pop
das
mov
das
ds
int
mov
inc
jae
sub
ror
mov
hlt
sbb
push
popf
das
dec
or
mov
jmp
scas
and
rorl
dec
js
sub
pop
notl
pop
ss
js
or
or
unpckhps
testl
test
in
mov
pop
ret
nop
movsl
xchg
daa
mov
add
cmp
adc
cmc
popf
cmc
sti
xor
xor
and
and
cli
mov
ret
mov
add
jecxz
add
sbb
dec
dec
inc
or
iret
fcoml
bound
sbb
jl
pop
mov
push
loopne
mov
xchg
ss
cmp
sbb
and
adc
and
ret
inc
xor
es
jb
adc
iret
inc
mov
ucomiss
aam
push
jno
push
push
push
mov
out
xchg
out
sub
ja
das
inc
xlat
fsubrs
ljmp
and
stos
into
xor
pop
and
add
insb
sbb
call
insb
jb
push
not
cmpsl
andb
dec
mov
scas
jne
shll
mov
rcll
loopne
cmp
jle
cld
sahf
push
mov
adc
push
pop
fsub
jmp
cmp
daa
mov
andl
or
jp
cmp
pop
and
or
roll
or
sub
xor
sub
pop
ss
xchg
andb
xchg
xlat
mov
jbe
pop
pop
loop
mov
fsubl
loop
mov
fstpl
fcoms
addl
jns
shll
and
movsb
mov
dec
adc
test
clc
inc
push
xorl
push
scas
add
xor
jecxz
inc
test
push
mov
dec
rorb
and
lds
add
movsb
add
popf
pop
cltd
mov
mov
ds
mov
pop
lret
jg
je
ljmp
xchg
xlat
inc
adc
sbb
rorb
or
cmpsb
bnd
push
push
mov
das
outsb
sub
ja
hlt
stos
loopne
cmc
cmp
cmp
add
or
jecxz
xchg
cmpxchg
cwtl
pop
jnp
mov
add
js
adc
adc
out
adcb
testl
cmp
push
icebp
shll
cmp
push
lret
inc
sbb
inc
repz
ss
dec
divb
jnp
incb
add
lods
repnz
inc
xor
fldt
mov
nop
mov
mov
push
cmpsb
mov
stos
mov
ret
ss
in
xor
pushf
sahf
leave
sub
aad
imul
dec
jecxz
in
outsl
add
subl
test
subl
xor
inc
mov
sbbb
pusha
mov
call
or
int3
fistpll
or
out
mov
push
popf
xor
and
push
repz
xchg
mov
pop
in
test
push
and
imul
mov
mov
lahf
mov
cmp
and
movsb
movsl
mov
fidivrs
adc
loope
inc
sub
lcall
addl
insl
inc
fdivr
shlb
sti
xchg
repz
sti
faddl
push
test
xchg
in
inc
lock
fdiv
daa
jne
mov
jmp
mov
aam
mov
sub
mov
xchg
ror
aas
scas
ja
xchg
dec
sub
and
cli
cmpsl
insb
jbe
das
dec
ja
mov
popf
in
mov
sbb
cmp
mov
and
and
xchg
fwait
dec
shlb
xor
and
cmp
pop
xchg
adc
fs
xchg
hlt
leave
stos
xchg
data16
cs
hlt
add
sub
scas
fs
outsl
in
or
and
mov
data16
xor
jnp
imul
rorb
in
cltd
dec
jge
divl
adc
dec
and
dec
push
inc
pop
inc
scas
sbb
loopne
sbb
ret
test
shrl
mov
loop
pop
mov
sar
mov
mov
test
shll
jl
cmp
xchg
popf
scas
sbb
mov
or
in
cmpsl
lds
or
push
xor
cmp
mov
test
cld
addb
in
cwtl
mov
push
out
lahf
jno
mov
popf
sub
sub
cmp
cmp
inc
add
test
lock
push
xor
decb
js
gs
sbb
cmp
int3
arpl
jno
test
xor
ror
sahf
sub
sbb
inc
lcall
pop
dec
sub
xchg
ja
mov
jl
add
or
insl
cwtl
enter
sbb
pop
lock
xchg
inc
add
lock
jl
cmp
sub
stos
push
jecxz
sti
mov
andb
jp
pop
adc
sbb
addl
pushf
jns
into
pushf
add
insl
jnp
popa
shrl
mov
mov
adc
test
sub
pushf
dec
push
lahf
cmpsl
push
lret
lahf
loopne
mov
stos
mov
mov
out
sub
shll
int3
rol
das
cli
pop
insb
lahf
add
cwtl
fsubl
aad
into
dec
add
int3
fcompl
leave
push
shlb
int3
mov
mov
lahf
shlb
lods
cmc
adc
repnz
push
lods
jmp
enter
push
scas
mov
mov
lahf
insl
xchg
arpl
mov
mov
adc
pop
jne
lret
xchg
loope
lret
dec
mov
cmp
add
pop
ret
lds
push
dec
insl
fidivl
and
mov
add
mov
dec
cld
fsubrs
out
imul
xchg
fs
mov
mov
lcall
mov
pop
mov
int3
aad
push
jns
popf
insb
push
xchg
popf
jae
lods
fidivs
movsl
stos
test
dec
pop
xchg
xchg
xor
popf
leave
mov
inc
jl
xor
shrl
loope
mov
sbb
in
add
jecxz
arpl
stos
and
dec
push
cmpb
or
aaa
adc
mov
out
int3
mov
mov
scas
and
std
popf
jl,pt
push
and
cmpsl
adc
sbb
cmp
lods
cld
inc
pop
cmpsb
rep
xor
in
lcall
int
fcomps
lods
out
in
cmc
popf
mov
mov
lock
inc
jge
xchg
inc
frstor
sub
addb
pop
jmp
xchg
mov
push
adc
add
sub
mov
pusha
cmpsb
lea
lcall
add
addr16
movl
xor
sub
push
fbstp
xchg
cmpsb
cmp
mov
gs
lods
push
xor
testl
xchg
int
xchg
lahf
mov
insb
or
pop
lret
lcall
loop
testl
push
mov
out
lods
xor
loopne
shrb
mov
adc
out
ficoms
leave
pop
lods
sbb
add
clc
inc
icebp
stos
push
mov
add
stc
inc
mov
subl
in
cltd
push
sbb
daa
jge
sub
sahf
or
cs
pop
sbb
icebp
adc
jb
push
add
xchg
icebp
adc
dec
roll
das
arpl
cli
dec
lret
scas
jae
sbb
dec
cmc
ljmp
icebp
mov
add
xor
mov
mov
test
xchg
cmp
push
cmpb
mov
and
xchg
mov
loopne
push
ljmp
bound
cmpsb
adc
outsb
sbb
imul
lods
jl
pop
lock
pushf
adc
mov
jle
jb
out
iret
les
xchg
sub
cli
pop
iret
lock
adc
jbe
or
xor
stos
cld
stos
fstl
cmpb
into
pop
inc
out
sbb
adc
pop
jecxz
dec
pusha
mov
push
xor
sub
adc
xchg
cwtl
mov
repnz
sbb
shll
into
scas
pop
ljmp
inc
fstp
stos
fistps
cld
jo
pop
sbb
out
mov
add
push
dec
lea
dec
bound
je
cmp
in
xor
mov
sub
or
leave
push
or
in
aaa
ljmp
lea
inc
cmp
jmp
lret
cli
dec
insl
ss
jle
gs
or
push
dec
mov
or
dec
jbe
outsb
cmpl
pop
cmp
and
inc
es
and
mov
int
scas
pop
scas
lea
xchg
xor
sub
test
push
push
xchg
adc
jmp
xchg
dec
xor
sub
repnz
sub
out
outsb
add
lret
in
out
sub
add
add
dec
jmp
lcall
sub
or
in
jns
cmp
test
cmpsl
xchg
stos
xchg
mov
push
adc
loop
cmc
push
gs
cwtl
sbb
das
push
jbe
rcrl
es
ja
sub
mov
fnsave
pause
mov
sar
popa
in
and
loope
daa
lret
sub
inc
out
loope
fldl
dec
sbb
or
mov
js
imull
ljmp
insb
mov
out
add
mov
sub
dec
in
add
or
scas
dec
adc
mov
cmp
out
popa
into
stc
jns
call
dec
cli
xor
dec
aas
mov
jmp
dec
pushf
cli
push
add
scas
jno
jne
or
int
dec
out
pop
add
and
pop
sahf
mov
add
add
sbb
push
decb
and
fisubrs
test
mov
jmp
test
fmuls
xchg
push
in
bnd
imul
sbb
lcall
jl
gs
dec
jecxz
xchg
mov
xor
call
andl
cmpsb
mov
mov
testl
inc
and
mov
cmp
sti
cmp
iret
jge
mov
clc
push
mov
insl
js
add
xchg
add
call
push
popa
idivb
fs
mov
fdivrs
lods
mov
nop
clc
mov
stc
out
or
hlt
xchg
das
in
mov
sbb
testb
add
cmp
adc
lods
push
loope
lar
ljmp
inc
ljmp
xor
js
mov
inc
mov
mov
jl
inc
jne
nop
jecxz
push
jbe
adc
adcl
fnsave
xor
add
cmpsl
lahf
or
shrb
sub
push
sub
icebp
push
popa
std
subb
adc
fcmovnb
fcomps
mov
adc
pop
pop
sbb
mov
ljmp
repnz
push
xor
push
shll
leave
jne
push
addb
pop
sbb
pop
in
dec
je
and
test
lret
sub
bound
cld
mov
push
std
out
xor
adc
push
repz
mov
adc
lret
adc
scas
jns
mov
sub
add
sub
ror
fs
mov
aad
dec
hlt
ja
adc
jno
mov
or
popf
popa
test
and
lds
xlat
xchg
out
lods
mov
add
pop
dec
pop
sarb
decl
data16
cltd
xchg
xchg
sbb
jbe
xor
inc
adc
sbbb
push
lds
jbe
movsl
xchg
jp
std
popa
leave
in
insb
mov
fstpl
or
cwtl
out
hlt
jns
inc
or
in
xchg
dec
mov
add
dec
fimuls
push
fs
jbe
jle
sbb
sahf
xor
xchg
or
rcrb
sbb
out
dec
pusha
jge
and
pusha
addr16
dec
push
mov
push
push
dec
js
negl
xchg
or
dec
into
mov
xchg
adc
mov
imul
mov
pusha
movsl
dec
pop
imul
inc
incl
xchg
mov
inc
call
jle
movsl
dec
in
pop
daa
dec
or
push
aas
xchg
movsb
sarb
inc
ret
sub
xchg
cmpsb
push
inc
push
lods
jmp
pusha
sbb
and
test
arpl
fdivp
imul
sub
ljmp
cmpsb
push
xor
sarl
xlat
es
dec
jo
das
mov
sbb
rcrb
and
aas
jno
bound
fadd
adc
inc
shlb
sub
jae
aad
push
push
stos
aam
cmp
sub
test
inc
mov
jbe
dec
and
push
insl
mov
jb
sbb
aad
jp
xchg
das
shlb
mov
in
ds
dec
das
inc
lcall
pop
scas
xchg
insb
xlat
push
inc
imul
aaa
scas
cmp
add
imul
loopne
idivb
inc
or
jae
pop
mov
cmp
ficomps
pushf
inc
mov
push
pop
or
jge
xchg
add
outsb
clc
inc
mov
dec
and
push
leave
popf
repnz
in
rolb
mov
pop
pop
imul
inc
jg
sub
xor
jnp
jmp
es
dec
pop
icebp
data16
inc
in
out
ret
jg
in
cmpsl
int
push
push
pop
ret
enter
xchg
xchg
daa
jnp
and
jns
jmp
add
mov
outsb
jge
xchg
inc
insb
jbe
into
imul
add
popa
hlt
test
mov
jns
dec
mov
push
popa
repz
jno
sub
popf
fs
data16
hlt
sub
mov
test
jmp
rorb
in
aaa
repz
add
idivl
pop
push
and
jecxz
rcll
sahf
adc
jno
push
testl
jbe
out
mov
std
xor
sub
mov
cli
rolb
ljmp
cmp
mov
and
mov
es
dec
and
push
sub
test
mov
lret
pop
xor
imul
xor
decb
add
lock
dec
sub
inc
xor
jle
clc
cmpsb
rorb
pop
in
mov
ret
jmp
xchg
and
jmp
pop
cmp
inc
in
and
shlw
sub
pop
out
dec
hlt
jbe
fisttps
add
lret
inc
mov
hlt
cmc
xchg
js
movsb
dec
dec
outsl
imul
mov
sbb
data16
fstl
inc
or
jge
sbb
repnz
test
xor
lods
idivb
mov
mov
arpl
and
mov
cltd
outsb
mov
jmp
adc
jbe
inc
stos
add
sbb
imul
insb
mov
adc
js
jae
fimull
aaa
cmc
sar
in
data16
gs
adcb
xor
lahf
insb
adc
aas
or
or
jl
call
mov
icebp
push
fiaddl
int3
pushf
inc
ret
movsb
xchg
enter
xchg
sub
or
inc
ds
hlt
push
fisubrs
mov
jo
cs
bound
lods
mov
int
push
mov
adc
pop
test
jno
testl
insb
jge
push
sbb
rol
push
inc
rcrl
inc
push
bound
add
orb
in
pop
pop
ss
test
jle
popf
xor
mov
add
lock
sahf
rclb
jb
adc
jl
out
in
mov
inc
mov
aad
dec
dec
cmc
scas
sub
xchg
cmp
sbb
out
push
out
je
mov
into
xchg
push
loopne
fmull
aam
mov
xchg
loope
inc
cmp
bound
add
ret
adc
mov
mov
and
push
hlt
or
push
and
add
mov
xor
cmp
and
mov
rcll
inc
jmp
pop
xchg
out
jne
add
jae
js
icebp
xor
fnstenv
pusha
xor
repz
test
bound
mov
insl
movsl
mov
sbbb
pop
movsb
push
lock
mov
cwtl
imulb
leave
mov
test
icebp
xor
movsb
pop
out
daa
mov
cmpsl
mov
sar
jo
or
sbb
and
lcall
add
sub
dec
test
xorb
pop
je
mov
xchg
dec
daa
and
jl
ss
add
pop
xor
lret
mov
add
cmc
or
sub
dec
and
or
cmpsl
in
aam
leave
test
je
push
aam
sti
adc
repnz
mov
insb
xor
sub
push
ss
jmp
ss
mov
push
pop
pop
popa
push
pop
arpl
jp
call
stos
rcrb
mov
cmp
test
sbb
mov
repnz
inc
movsl
rorl
stos
scas
mov
bound
insb
sub
push
jmp
insb
out
arpl
or
bound
add
ja
fldlg2
adc
jne
push
negb
ja
add
addr16
xor
lods
xor
push
cmp
pop
mov
sti
mov
adc
filds
dec
imul
push
dec
pushf
call
or
mov
loopne
stos
insb
iret
push
insb
repz
test
cwtl
not
xor
sbb
aam
push
in
xchg
mov
inc
gs
cmp
shrb
movups
mov
xchg
shlb
int
pop
mov
xor
jg
dec
xor
push
lcall
xor
jns
vorps
push
push
aam
es
cld
xor
or
js
icebp
xchg
insb
cmp
outsb
cld
sub
jne
push
sbb
xchg
cmp
dec
bswap
add
dec
in
in
andb
cmp
mov
xor
int
and
xor
ror
lret
pusha
jno
lret
aam
fldl
roll
nop
sahf
push
jmp
cld
add
hlt
cli
cmpl
inc
iret
adc
mov
or
cmp
les
je
xor
xchg
xchg
push
mov
test
xchg
cmp
lods
call
in
or
cmc
xor
mov
add
sbb
test
mov
cs
and
and
mov
test
shll
dec
push
movsl
push
push
push
mov
mov
xchg
leave
packuswb
outsl
xchg
adc
loop
popf
jae
xor
inc
cmp
stos
mov
adc
xchg
stos
or
scas
add
js
lahf
or
inc
xor
add
xor
test
jns
aad
push
clc
ficoms
and
in
dec
xchg
push
rcrb
dec
pop
jno
xor
arpl
pop
addr16
je
push
cld
xor
sbb
pop
in
sub
shlb
insl
sbb
ljmp
jb
cmp
cld
fiaddl
inc
lcall
stos
insl
jno
dec
dec
fdivl
xchg
mov
popa
lcall
and
cmp
push
hlt
sub
xchg
popf
leave
jnp
repnz
mov
mov
aad
adc
aaa
adc
or
inc
and
mov
and
in
insl
dec
pop
mov
ret
push
or
movsb
mov
mov
movsl
add
jp
or
mov
pop
push
repz
pop
pop
negb
mov
js
push
cmp
inc
xor
loope
jb
fdivr
xchg
test
aaa
dec
xchg
hlt
jecxz
mov
lret
pop
cld
sub
insb
mov
xor
data16
dec
mov
mov
ffreep
jecxz
addr16
cmp
inc
sbb
sar
loopne
mov
test
scas
ret
xor
fstpt
sti
ljmp
call
daa
mov
jnp
dec
push
xor
inc
and
sar
loope
aas
or
aaa
inc
or
dec
and
imul
adc
leave
pop
fsubrs
mov
lods
lds
adc
cmpsl
fs
sbb
sbb
sarb
mov
insb
imul
in
adc
adc
es
fcomps
jnp
cmpb
out
sarb
xor
jns
cmpsl
ja
pop
in
in
cmc
notl
lds
data16
jg
add
les
xchg
loopne
enter
or
pop
stos
mov
or
outsb
fcoml
repz
lods
cmp
sti
pop
or
aaa
xor
mov
out
and
cmp
popf
adc
xor
cmc
mov
test
mov
mov
pop
ds
push
and
mov
push
push
xchg
mov
mov
gs
rclb
call
pushf
ret
pop
dec
cltd
into
adc
scas
mov
pop
outsb
scas
jp
mov
out
rcl
je
out
jp
sbb
aad
or
outsl
cmc
add
push
inc
and
cltd
dec
sub
insl
inc
aaa
push
fcomi
pop
cmpsb
lahf
sbb
xchg
lock
mov
xchg
push
out
nop
mov
and
dec
pop
xchg
mov
test
jns
jmp
in
cmp
repz
test
and
fs
mov
dec
in
sarl
push
test
rcrl
add
es
pop
ljmp
push
mov
and
nop
or
lahf
mov
shr
movsl
push
dec
xor
cmp
jne
pushf
dec
adc
pusha
jne
imul
cmp
and
xor
pusha
jbe
into
jge
nop
lahf
insl
sbb
iret
leave
adc
xchg
xor
inc
decb
scas
enter
sbb
cltd
loopne
je
dec
js
cmovne
inc
arpl
mov
pushf
aad
sub
and
mov
outsb
xchg
push
divl
out
adc
push
rclb
dec
and
aas
xchg
shll
push
xchg
pop
or
leave
pop
xchg
lea
jl
movsl
scas
xchg
cmp
dec
hlt
insb
sbb
xchg
out
scas
lods
xchg
jp
mov
hlt
jp
ss
cli
jle
xlat
xchg
inc
mov
xchg
push
fcmovne
adcb
push
std
jmp
jge
rclb
mov
andl
push
jo
hlt
jae
data16
pop
pop
scas
xor
imul
lahf
daa
pop
enter
lcall
sbbb
push
jle
popa
dec
xor
jae
ss
call
scas
mov
or
xchg
mov
mov
lahf
mov
xor
fnop
lret
das
sbb
lock
loop
sub
jp
jno
dec
nop
aaa
dec
adc
mov
sub
ret
pop
jp
sarl
lods
mov
jne
pop
pusha
fcompl
pop
mov
add
scas
push
sub
int
push
adc
push
inc
adc
movsb
cmp
int
mov
jno
and
fwait
mov
pop
xor
fcomip
jae
xor
popf
jle
in
fwait
jne
and
pop
push
out
dec
pusha
inc
les
pop
adc
loope
cmpsb
push
cmpsl
cmp
xor
enter
movsb
imul
xchg
jbe
push
push
pop
and
add
mov
test
bound
std
repnz
add
icebp
adc
sbbb
mov
dec
jo
vpshab
rcrb
inc
lret
mov
insb
stos
adc
jno
pusha
fld
xor
cmp
outsl
lock
pop
popa
popl
or
dec
xor
es
cmp
lea
les
adc
dec
pop
bnd
inc
mov
jmp
mov
sbb
jbe
dec
sub
or
xchg
sub
mov
pop
jmp
push
adc
outsl
movsl
add
in
xor
jns
pusha
aad
sbb
inc
das
xchg
add
cmpsb
push
jne
outsb
mov
fisubrs
mov
and
jae
add
push
in
push
cmpsb
in
and
mov
cmpsl
sub
xchg
xchg
out
push
xor
fs
lahf
lahf
cmp
into
mov
and
adc
xor
xor
ja
test
inc
jl
push
jmp
pop
orb
xor
sub
mov
icebp
enter
aaa
int3
cmpsl
mov
mov
out
lods
or
rclb
jg
insl
cld
outsl
je
mov
jo
pusha
push
mov
cmp
jmp
and
xchg
and
jecxz
outsl
repnz
out
gs
mov
or
push
loop
cli
mov
shrb
fmul
mov
pop
add
repz
xchg
push
cwtl
sarb
test
movsb
cld
lret
dec
adc
hlt
jle
lea
lock
push
int
and
scas
mov
fdivr
pushf
mov
std
cmp
stc
push
sbb
mov
push
inc
sahf
dec
fcmovne
adc
sbb
mov
insl
lods
or
mov
xchg
sub
push
mov
dec
cmp
ds
das
and
ja
mov
ja
jns
cmp
and
push
xchg
aam
lret
lahf
inc
stc
arpl
lock
mov
inc
cmp
sub
gs
aas
pop
pushf
push
push
cmc
pop
pop
push
xchg
push
cmp
pop
adc
lahf
adc
adc
mov
xchg
test
jecxz
jns
mov
lds
add
aad
inc
jo
fnstenv
or
pop
cld
aas
enter
vpacksswb
xlat
ss
fwait
outsl
cmpsl
jecxz
popl
les
or
movsb
add
dec
nop
insb
adc
in
dec
sub
lds
jge
lcall
sarl
mov
hlt
dec
cwtl
test
int
scas
lea
pop
stos
or
mov
fld
xorb
and
xchg
imul
test
dec
xchg
ss
push
bound
adc
push
bound
insl
pop
cwtl
push
mov
add
addr16
xor
js
sbb
inc
sbb
imul
fnsave
push
enter
out
pop
sti
stos
push
pop
outsb
cld
dec
xor
addb
mov
je
fldcw
sbb
arpl
xchg
xchg
or
outsl
cmpsl
imul
and
cmp
arpl
inc
dec
sbb
push
or
sub
mov
adc
daa
sbb
push
lea
in
cmc
rcr
xchg
call
jge
dec
icebp
js
lahf
mov
rolb
mov
push
xchg
insb
icebp
mov
or
lods
sub
mov
cmp
jo
flds
sti
jbe
mov
sarb
ljmp
sub
dec
int
cmp
imul
xchg
sarl
sti
inc
jl
sbb
mov
pop
outsl
pop
xor
fisttpl
sub
inc
inc
pop
mov
ja
scas
iret
fwait
movsb
fadd
adc
ds
xor
add
fnstcw
shll
mov
xor
es
jns
lret
clc
cmp
mov
adc
xor
mov
fmuls
mov
aas
mov
sahf
and
stc
out
xchg
adc
rorl
int
movsb
fs
iret
jmp
dec
mov
aaa
jo
mov
insb
fldl
mov
imul
jbe
out
testb
stc
push
and
stos
mov
inc
jnp
sbb
aas
and
inc
add
outsb
lds
push
sti
jo,pt
or
lea
pushf
push
lods
jp
inc
inc
popa
mov
ljmp
mov
out
jo
testl
adc
push
adc
push
pinsrw
push
mov
add
daa
out
fcoms
mov
stc
pushf
xor
dec
sub
mov
lds
or
sbb
fs
ja
push
pop
adcl
pop
pusha
jb
call
outsl
callw
cmp
out
ja
fists
mov
cmpsb
pop
sbb
decb
or
sbb
jp
dec
cmp
outsl
pop
arpl
xchg
and
push
jp
mov
mov
mov
test
movsb
or
iret
testb
addr16
cmp
lock
leave
jo
jae
pshufw
sbb
pop
push
mov
xor
push
xor
insb
push
test
lods
fnstenv
dec
cmp
and
mov
xlat
and
pop
sbb
ret
inc
xchg
es
and
enter
xor
negl
push
addr16
and
xlat
dec
lret
adc
fs
call
insl
mov
xchg
mov
sbb
adc
out
sub
incl
or
div
dec
mov
jmp
sarb
or
push
ftst
cmpb
pushf
sub
dec
cmp
push
sub
sub
loop
les
daa
mov
push
add
adcb
xor
repz
dec
sub
in
mov
mov
addr16
sub
std
jge
push
cmp
lds
daa
cmp
xor
jmp
rol
out
addr16
push
mov
and
inc
data16
push
lcall
sbb
push
jmp
sbb
add
shlb
lret
lods
jne
cmpsb
xlat
add
fwait
dec
and
mov
pop
cltd
and
lret
testb
nop
mov
and
scas
addb
mov
jbe
mov
aad
jmp
loop
xlat
outsb
cmpsl
pop
popf
cld
pop
hlt
fldl2e
add
dec
push
cmp
dec
data16
lock
or
in
popf
or
mov
iret
lods
dec
enter
jnp
rcrl
stc
ja
out
dec
dec
jno
mov
add
adc
pop
ja
xchg
lea
lea
jno
out
cmpb
jne
xchg
subb
inc
add
lahf
add
in
sub
and
popf
icebp
fldenv
xor
adc
push
out
ror
mov
push
lds
inc
stos
daa
adc
scas
push
int
xchg
shrb
repz
stc
sub
dec
inc
cmpsl
ret
inc
std
fdivs
cmpsl
filds
fsubrl
fsubl
mov
lahf
mov
dec
aad
mov
mov
dec
ficoml
je
addr16
jbe
cli
lret
fidivl
icebp
add
test
sbb
cmpsl
cmp
pop
std
cmp
add
mov
js
mull
mov
hlt
jne
push
cmp
sub
pusha
sbbl
push
data16
mov
mov
push
inc
in
pop
out
ss
sub
dec
ret
adc
adc
addl
cmp
adc
cmp
xchg
pop
jmp
push
ds
fistl
pop
test
out
icebp
xchg
xor
xor
ficompl
mov
leave
and
add
hlt
add
js
xor
cmp
or
cmp
cld
fstl
xchg
xchg
sub
xchg
scas
jb
gs
xor
stos
xchg
mov
mov
test
and
push
mov
xchg
ljmp
das
mov
js
das
int
sbb
and
test
daa
in
imul
js
push
out
add
jnp
mov
add
outsb
data16
jno
mov
mov
xchg
mov
fisubs
xor
xor
xor
mov
add
test
pop
jp
lock
pop
ss
icebp
mov
gs
ret
pop
aas
push
dec
mov
cld
test
cli
mov
dec
leave
push
or
popf
cmp
in
pusha
pushf
hlt
mov
push
shrl
cmp
inc
xor
lds
mov
mull
sub
lea
adc
mov
test
outsb
loop
dec
imul
sbb
insb
jp
js
std
adc
lds
xchg
aam
sbb
fwait
test
pop
imul
dec
and
cmpb
cmpb
inc
neg
xchg
test
ret
inc
fs
fwait
leave
mov
stos
jo
cmc
ds
sub
hlt
jmp
lods
mov
rorl
xchg
in
mov
jl
je
cli
adc
fisttpll
sbb
ret
cltd
in
dec
xor
test
fmul
stc
popf
daa
mov
cmp
int
add
inc
stos
imul
jne
loope
cld
fnstcw
mov
adc
push
out
push
nop
dec
lret
inc
adc
mov
xchg
in
nop
aaa
lcall
pop
adcl
stos
pop
sbb
and
or
movsb
das
fidivl
rcll
inc
add
out
xor
push
mov
xchg
scas
mov
das
mov
in
or
mov
push
and
mov
int3
mov
jecxz
popl
aaa
leave
adc
pop
push
push
jmp
jne
lods
movl
push
in
xchg
push
sub
ja
push
rclb
imul
mov
cli
jbe
mov
inc
lods
js
pushf
test
dec
mov
andl
movsb
xchg
test
inc
fsubl
and
popa
jo
and
lods
int3
push
inc
cs
mov
mov
jbe
out
and
es
daa
inc
xchg
outsl
sbb
sbb
subl
clc
inc
ret
push
pop
mov
mov
lahf
es
out
lds
pop
xchg
inc
lret
inc
mov
add
push
mov
xor
out
and
cmp
repz
out
jno
push
ret
fstpl
jmp
sarb
add
pop
or
push
cmp
sbb
test
sbb
adc
xlat
inc
mov
push
cwtl
add
addb
fnstenv
add
scas
lcall
in
pop
jo
jnp
sbb
mov
xor
jne
adcl
lahf
add
fmuls
push
jo
mov
xor
xchg
mov
mov
sub
or
xchg
mov
jle
or
and
jp
int3
popf
aaa
ss
inc
inc
xor
and
inc
jg
lahf
loopne
mov
and
jno
je
fwait
jae
add
rcrb
clflush
shll
jno
jge
shlb
mov
sub
adc
adc
jo
jae
cmp
dec
sbb
aad
shr
jle
push
fsts
cmc
inc
sub
scas
push
sbb
mov
pop
shrl
inc
int
push
mov
loope
jb
mov
inc
push
jne
in
mov
inc
out
test
pop
or
lea
idivb
sub
fbld
inc
sbb
mov
sub
adc
jp
test
lods
inc
pop
dec
or
sub
movsb
lock
xor
mov
andb
aam
je
stos
xchg
in
mov
pop
mov
mov
outsb
jmp
xor
pop
push
sub
mov
js
test
mov
push
pcmpeqb
cmp
into
cmpb
idivl
lds
es
add
inc
mov
jl
dec
jle
xor
test
repz
lds
cld
lock
lods
adc
out
sbb
rclb
test
ret
mov
add
and
into
inc
push
stos
mov
mov
xor
mov
sub
mov
mov
cmp
shl
push
push
adc
lods
and
sti
jg
cmpsl
mov
movsb
fistl
push
sarb
jecxz
jae
lock
mov
lret
mov
cld
jnp
xor
inc
pop
aas
mov
minps
mov
mov
mov
dec
push
mov
cld
lahf
mov
shr
xchg
loope
int
xor
inc
mov
sbb
in
and
mov
sbbl
jmp
push
mov
aaa
or
fs
test
movsb
xor
dec
push
insl
mov
fwait
por
xchg
cmpl
add
xor
push
enter
dec
or
dec
rolb
sub
ret
mov
mov
and
or
arpl
imul
in
ja
pop
fwait
pop
xchg
inc
inc
test
leave
cs
mulb
imul
xor
out
xor
and
es
pop
mov
or
movsb
jge
lods
gs
sbb
adc
push
mov
fs
cmp
xor
pop
adc
inc
out
mov
pop
fcmovnu
push
aaa
adc
test
jae
cwtl
outsb
out
jecxz
or
sub
or
nop
adc
pop
lcall
add
sbb
sahf
roll
xor
dec
lock
loope
mov
cltd
imul
scas
xchg
jae
ss
xchg
out
or
pop
adc
xor
cmp
ficompl
test
xchg
jle
pop
pop
cmc
cs
mov
test
sbb
push
sbb
inc
jae
jno
inc
enter
jmp
xor
xchg
push
adc
xchg
push
repz
inc
fwait
ja
and
inc
sti
js
cmp
jno,pt
add
in
mov
cmp
in
int3
icebp
data16
shlb
or
imul
popl
mov
adc
jecxz
cmp
rorb
cwtl
inc
push
push
dec
je
sub
or
lods
xor
popl
sti
jmp
add
mov
push
or
clc
push
push
stc
mov
inc
and
sbb
setb
ja
push
xor
pop
adc
lock
jge
jl
mov
outsb
icebp
test
sahf
pop
hlt
scas
imul
push
notb
cmp
scas
insb
cmp
enter
cmp
mov
or
rcll
aas
xchg
add
and
cmpsl
sub
fimull
ljmp
into
mov
jle
inc
ret
mov
jg
push
xchg
adc
daa
and
andb
xlat
lret
jne
repnz
in
neg
xor
push
lock
inc
jne
sbb
xor
test
push
dec
popl
test
xor
in
pop
xchg
cmp
xchg
enter
push
out
cli
movsl
fbld
pop
cld
lcall
inc
es
mov
push
push
nop
mov
sub
xchg
ss
sbb
sbb
sbb
cltd
rcll
jb
mov
outsb
sub
js
outsl
insb
rclb
cmp
cmp
mov
add
js
repnz
inc
call
sahf
mov
ds
jno
faddl
fwait
arpl
dec
jmp
xchg
pop
aas
dec
sbb
es
ss
jnp
loopne
sbb
pop
mov
icebp
mov
lret
ljmp
movsl
xchg
cwtd
xchg
push
stos
cmp
loop
push
mov
dec
gs
add
aas
jne
aaa
repnz
mov
rorb
mov
jae
add
jno
into
arpl
aam
les
jp
xchg
jno
push
push
lahf
jmp
clc
inc
sub
sub
mov
rorl
xor
cltd
into
pop
jge
stc
dec
sahf
pop
jge
je
divl
pushf
mov
fs
mov
lods
sub
pushf
pop
ret
pop
pop
jg
xchg
mov
outsl
and
adc
daa
fidivrs
cmp
repz
in
lea
movsl
or
cmp
or
cmc
cs
stos
xor
jl
dec
cmp
adcb
pop
xor
loop
mov
mov
mov
pop
lods
jo
xchg
ret
mov
mov
push
arpl
mov
stos
sub
mov
fucomi
es
ficomps
push
lea
loop
outsb
xchg
inc
sub
jp
cmp
sahf
sti
mov
mov
stos
lea
ss
xchg
or
les
nop
pop
cmp
inc
shl
and
mov
mov
cmc
loopne
mov
inc
cmp
into
sub
dec
es
push
push
push
or
push
sahf
xchg
dec
outsl
pop
inc
jge
ss
dec
fsubrl
scas
xchg
xchg
lods
in
subb
sbb
data16
push
add
ret
das
pop
inc
aas
ret
mov
xor
push
fcoms
xor
mov
cs
ds
jecxz
cld
mov
mov
std
xor
pop
mov
ret
cli
jecxz
test
lods
fs
mov
repnz
test
push
fsubrl
out
sahf
push
xor
and
arpl
cltd
int3
cmp
pop
cmpsl
adc
jg
and
div
sbb
repnz
push
fisubrs
loop
pop
nop
cmp
sarl
sub
pop
aaa
js
cmpsl
shrl
lret
sbb
imul
or
jmp
loop
jmp
or
daa
aaa
inc
cmp
cmp
adc
cs
fadd
xchg
mov
push
mov
fimuls
push
jmp
jl
sbb
inc
mov
loope
adc
iret
pop
mov
xor
ss
outsl
test
pop
push
out
mov
stos
ljmp
in
test
add
push
cmp
mov
insb
push
mov
mov
sahf
movsb
mov
push
jp
rcll
in
rcll
jmp
or
mov
popf
call
mov
sbb
loopne
or
jg
sbb
dec
jecxz
fdivl
aas
je
push
mov
sub
dec
jno
mov
xor
movsl
jb
jl
int3
cmp
xor
xchg
sbb
clc
mov
outsb
scas
mov
jnp
fnstcw
or
xor
jle
test
repnz
sbb
pop
pop
and
fistpl
mov
mov
add
inc
jae
cmp
sbb
inc
lea
sub
imul
and
xchg
jno
loopne
repnz
fwait
popa
int
xor
ds
cmp
inc
cltd
iret
sarb
jp
out
cmp
adc
or
invd
pushl
aam
adc
mov
cmp
adc
xchg
xchg
inc
js
aas
push
xor
adc
mov
addl
mov
adc
negl
sub
xor
aam
fcoml
or
mov
mov
mov
jp
or
in
mov
lret
cli
sub
fnstenv
call
jno
imulb
adc
maxps
negb
sbb
jae
mov
lahf
pop
cli
shlb
dec
cs
inc
cwtl
and
dec
es
js
out
push
or
loop
add
test
add
sbb
dec
inc
sbb
xchg
out
cld
inc
or
cmc
fmull
or
das
push
add
sbb
gs
outsl
push
dec
sub
or
sbb
std
inc
cli
add
jnp
sub
mov
adc
and
mov
xorl
pusha
repz
add
out
xchg
je
inc
add
mov
sbb
jne
xchg
lods
in
roll
ja
fs
inc
fcoml
in
or
outsl
cld
jecxz
bnd
sub
out
mov
cmp
pop
std
mov
scas
sub
mov
adc
xorb
out
fcomi
fdivl
jp
je
aad
inc
mov
pusha
fwait
imul
in
pop
pop
stos
push
outsl
push
inc
ja
pop
xlat
cmpsb
incb
jge
sbb
sahf
push
xchg
pop
xor
sbb
mov
xchg
jbe
scas
sub
mov
sbb
cpuid
mov
stos
push
sbb
jl
push
das
add
dec
pop
pop
sbbl
and
ds
loop
gs
in
lret
iret
xchg
aas
enter
sbbb
dec
inc
into
xchg
add
adc
in
inc
and
ret
xor
add
incb
mov
sub
mov
mov
dec
das
adcl
inc
mov
or
dec
sub
addb
push
cltd
and
fcompl
mov
jle
mov
fsts
push
jb
cmp
sub
mov
sbb
sti
sbb
push
je
sbb
sbb
lahf
mov
loope
out
jmp
add
stc
sbbb
dec
xchg
test
pop
xchg
out
mov
inc
arpl
dec
std
xchg
rcll
imul
clc
xchg
imul
cmp
enter
mov
inc
mov
xchg
std
mov
test
add
or
cmp
jb
cmc
xor
pop
mov
das
mov
cmpl
xor
ret
mov
ret
cmovg
xchg
sbb
lahf
sub
loope
out
loop
ret
stc
inc
pop
ljmp
ret
dec
leave
shll
push
and
mov
subb
jbe
movsl
add
mov
jg
xchg
adc
lea
lret
imul
pushf
sar
and
ja
cs
and
or
push
out
jmp
push
jae
sbb
sarl
jno
lahf
shrl
jbe
push
xor
adc
mov
mov
aam
push
andl
push
fs
lahf
cmp
nop
mov
test
arpl
jge
jmp
lods
int
je
or
pop
hlt
aaa
add
xchg
sbb
dec
pop
aas
pop
repz
jno
xor
jns
arpl
mov
std
xrelease
push
outsl
enter
jge
push
add
push
in
rolb
mov
mov
dec
lods
repz
shll
mov
push
jne
dec
sbb
jbe
jmp
nop
addr16
jg
ds
bound
dec
inc
orl
adc
xchg
inc
jle
int3
and
sub
cli
xchg
add
stos
xor
das
and
ret
mov
je
fs
cmpb
mov
mov
sub
push
scas
adc
mov
fwait
xor
les
sub
or
mov
xor
jg
mov
scas
iret
sahf
pop
mov
mov
xlat
xchg
mov
repnz
sar
stos
fs
or
sar
fsubrl
addr16
stc
xchg
xchg
xchg
into
or
xchg
popf
imul
lock
das
mov
aad
sarb
cmpsl
idiv
push
lods
mov
pop
jl
jnp
jo
subb
in
repz
adc
push
jno
mov
pop
shll
int3
sub
cmpsl
pop
ret
adc
jo
clc
insl
inc
cld
int
mov
inc
cwtl
pop
stc
and
aam
jns
int3
dec
loopne
or
sub
mov
notl
icebp
inc
cmp
pusha
test
lods
out
xorb
xchg
push
loop
adc
stos
dec
and
bound
and
adc
fst
xor
add
add
out
mov
pop
gs
fmull
cmp
sar
outsb
in
int3
or
sbb
gs
xor
idivl
insl
pushf
xchg
stc
loopne
pusha
mov
jb
push
xchg
inc
movsb
adcl
in
inc
ljmp
push
push
rclb
stos
and
and
popf
test
xor
repz
jle
and
jae
cmpsb
popa
and
fstps
dec
or
and
jbe
add
pop
mov
testl
stos
sub
sub
insb
shlb
mov
push
mov
xchg
inc
fsubl
add
dec
push
arpl
jmp
pop
pop
add
push
lods
add
add
push
nop
jno
scas
sbb
pop
outsb
add
xor
insl
push
icebp
mov
xchg
lret
xchg
enter
push
hlt
and
data16
jb
lcall
xor
js
adc
lret
les
sbb
push
mov
inc
adc
mov
mov
aaa
or
mov
leave
mov
mov
test
out
jg
lods
insl
inc
dec
aaa
inc
in
rcr
arpl
repnz
xlat
sub
sub
fstpl
mov
lahf
pushf
gs
push
lods
imul
mov
xchg
in
pop
inc
loopne
shlb
mov
mov
lret
jmp
or
pop
iret
les
jae
sub
fistps
ljmp
xchg
jl
jmp
or
nop
adc
push
jecxz
add
rcl
xchg
aaa
in
in
add
cmp
adc
test
cli
popf
sub
ds
jp
xchg
out
mov
loopne
jp
sbb
push
cmpsl
xorb
and
push
mov
xchg
mov
sbb
pushf
das
adc
push
ds
jmp
arpl
xchg
mov
mov
insb
xor
adc
ret
out
mov
pusha
xor
add
out
subl
xor
sub
mov
es
inc
iret
xchg
jecxz
jge
sub
fwait
push
adc
inc
cld
dec
movsb
mov
xchg
outsl
lods
xchg
or
je
push
ss
adc
pop
add
push
mov
cmp
mov
adc
adc
and
stos
cmpsl
outsb
jbe
jno
les
dec
sarl
fcompl
sbb
sub
insb
in
daa
outsb
shrb
xor
mov
mov
cmpsl
daa
jmp
lahf
shrl
rcrb
repz
movsl
into
inc
mov
sub
xchg
in
add
call
mov
fistpll
lods
jmp
ret
les
and
add
mov
lret
jge
pop
cwtl
xchg
std
sbb
sub
jmp
cmpsl
test
out
cmpsl
adc
jb
xor
mov
mov
int
sahf
inc
jge
xchg
loopne
add
push
adc
shl
fisttpl
cmp
xor
jg
and
mov
mov
mov
xor
rcrl
mov
and
jo
push
int3
mulb
push
add
nop
popa
lret
fyl2xp1
imul
xchg
inc
xlat
push
adc
aas
iret
mov
cmp
sbb
inc
insl
in
xor
sbb
notb
iret
pop
mov
and
cld
sub
lcall
or
insl
push
xchg
mov
addb
xchg
jp
sub
mov
fldcw
dec
push
sbb
cltd
icebp
mov
insl
nop
ret
adc
idiv
jg
sarb
dec
push
mov
out
cmp
pop
sbb
mov
sbbb
shr
shll
cmp
xchg
sub
pop
mov
sbb
or
out
aam
das
cmp
iret
sbb
mov
ja
and
stc
out
ret
fs
mov
jno
mov
out
cmp
jo
mov
test
sub
inc
iret
xchg
inc
sbb
rcrb
lods
cld
mull
push
aad
add
movsb
pop
outsb
and
scas
jno
push
out
aad
rorl
and
sbb
stos
jecxz
xor
xchg
jae
roll
mov
cli
aam
push
mov
or
ds
sarl
cmc
push
fistps
movsb
pop
ds
push
sub
imul
call
lods
mov
gs
loop
test
fisubl
dec
xchg
inc
mov
js
icebp
inc
pop
out
pop
cmp
out
adc
cmpsl
repnz
arpl
jae
mov
sar
data16
imul
adc
push
out
push
popa
bound
or
adc
sbb
dec
arpl
mov
push
int
imul
orl
cmp
add
jb
daa
scas
sbb
scas
shlb
negl
subb
shlb
ja
mov
mov
rclb
rorl
sub
sahf
xchg
push
hlt
mov
in
imul
pop
sub
movsb
cli
into
pushf
call
pop
or
or
add
insb
roll
sbb
cmp
mov
cmp
push
xchg
ret
dec
lret
into
movsb
enter
popa
adc
xor
inc
push
stc
insw
sub
repz
and
orb
mov
mov
cld
mov
cmp
daa
ljmp
popf
cltd
into
das
aam
ficoml
ret
ret
stc
fildll
push
cli
lods
scas
xchg
jge
fsubr
xor
jnp
in
jg
mov
fnstenv
int3
push
mov
nop
push
outsl
lock
push
imul
jp
mov
lds
call
pop
jns
adc
pop
dec
add
sub
inc
lock
push
popf
mov
imul
jmp
inc
add
push
cwtl
xlat
bound
push
dec
lods
xchg
lods
out
sub
cs
sbb
sbb
xlat
pushf
cltd
xchg
push
jmp
jo
arpl
mov
lret
xor
insl
aaa
dec
sbb
popf
pushf
lea
mov
andl
lahf
or
jno
dec
mov
sbb
loopne
shll
inc
mov
add
call
xchg
sbb
sbb
pop
stos
fbstp
push
loop
pop
mov
xchg
xchg
inc
mov
lret
pop
dec
repz
sub
xor
mov
js
sub
fists
cmp
jp
lock
mov
dec
xchg
dec
das
iret
cmp
ffree
fldt
and
push
insl
clc
adc
in
cmp
dec
push
mov
xor
and
icebp
jle
lods
iret
jmp
ret
mov
jg
push
sub
dec
dec
xor
mov
pop
mov
cmc
gs
push
out
outsl
shll
pop
lahf
cmpsb
es
shrl
scas
data16
push
xor
cmp
xchg
icebp
lea
push
and
movsb
jl
pop
pop
aaa
jmp
addb
subl
jb
cmpsb
jo
int
jp
sub
add
mov
ret
dec
sbb
or
or
lock
in
in
lcall
xchg
push
ja
dec
pop
jge
xor
jp
lock
aaa
dec
int
pushf
je
push
repnz
sbb
jp
sub
mov
inc
cmpsl
lcall
in
xor
lds
stc
push
jo
std
insb
mov
mov
movsl
dec
test
js
icebp
mov
push
adc
jne
inc
cmp
iret
cmpsl
ds
mov
addr16
sbb
lods
mov
repz
inc
pop
push
add
sbb
cli
sub
aas
shlb
outsl
pop
jg,pn
sbb
insb
mov
mov
jb
ds
push
hlt
sbb
mov
adc
jge
cs
or
xchg
outsb
push
outsb
sbb
mov
xchg
insl
cmp
int3
sti
mov
dec
mov
hlt
ret
leave
stc
mov
lahf
add
jno
adc
cmp
dec
pop
add
stc
popa
inc
inc
dec
sbb
adc
std
movsb
or
and
sub
xchg
insb
add
sbbb
jecxz
lock
bound
jno
pusha
fcomps
xchg
mov
sbb
jecxz
push
shll
nop
xor
push
xor
es
test
imul
push
sub
add
es
rcll
push
and
test
imul
pop
loop
sub
ret
xchg
jl
gs
sbb
mov
enter
or
or
scas
fabs
outsl
push
dec
pop
cmp
movsl
repz
pop
inc
jnp
xlat
push
adc
daa
push
adc
cmp
inc
arpl
fwait
mov
jnp
pop
jno
xor
xor
cmpsb
jp
xchg
xchg
and
cmp
js
mov
daa
push
adc
ret
jge
scas
bound
pop
enter
pop
aaa
xor
ja
pop
and
rcr
dec
add
jge
push
dec
stos
push
shlb
or
movsl
add
jmp
sub
push
mov
adc
dec
in
subb
add
jl
repnz
jg
hlt
mov
dec
mov
test
fwait
mov
mov
xchg
inc
or
test
insb
mov
dec
add
mov
jge
fildl
cmp
and
std
mov
stos
in
pop
aam
mov
das
sbb
lea
xor
idivl
data16
sub
cmp
lea
push
loop
pop
lods
jns
int
imul
mov
out
aam
dec
push
test
xchg
push
adc
cmpsl
mov
std
mov
pop
xor
or
sbb
clc
pop
mov
push
lds
adc
sti
popl
sbb
ret
xchg
xlat
mov
repnz
jg
sub
in
adc
and
outsb
fs
test
xor
push
xchg
outsb
fisubrl
pop
inc
cli
add
sub
push
cmp
xor
add
pop
outsl
std
push
push
pop
lea
movsl
push
push
push
mov
das
jno
mov
mov
pushl
fs
dec
inc
in
js
lret
mov
aas
frstor
lret
in
cmp
adc
sub
pop
icebp
test
or
mov
xchg
aad
push
cld
call
call
hlt
stos
ficoml
cmpb
jecxz
movsl
mov
cmp
aam
decl
repnz
and
js
inc
ds
dec
rclb
jmp
adc
cmp
fisubs
mov
rol
jg
pop
lcall
jb
std
push
scas
sub
cmpb
or
push
add
jl
add
lods
push
repz
lret
lock
ss
sub
xor
cmp
xor
and
dec
mov
ret
lds
or
mov
mov
ss
mov
mov
es
push
inc
loope
ret
rclb
sahf
dec
outsb
fucomip
jle
dec
jl
stos
shl
mov
iret
dec
xchg
mov
out
outsb
or
dec
pop
ja
shl
jb
rorl
and
cwtl
sbb
ja
push
scas
and
stos
adc
mov
loope
pop
xchg
pop
ss
sahf
rclb
loop
xchg
sub
pop
leave
mov
xchg
adc
add
xchg
fdivrl
repnz
pop
mov
addl
dec
lods
mov
sub
pop
out
push
cli
xor
pop
inc
cmpsl
xor
sti
outsl
push
lods
lds
jle
cs
cmp
inc
jns
add
lock
dec
cmpsb
push
jg
push
jg
ss
jo
rcll
xor
sub
jecxz
xchg
add
arpl
fcmovnb
divl
fwait
or
addr16
lock
push
jne
scas
sbb
stc
and
add
pop
insl
inc
int
pop
mov
mov
lret
stc
and
xor
lret
jns
shlb
mov
daa
xor
adc
mov
sub
ficoms
insl
cwtl
das
add
movsl
dec
sub
push
push
pusha
push
sahf
dec
jnp
add
fisubs
push
mov
and
icebp
inc
jb
add
iret
xchg
test
ret
lret
adc
mov
ja
jmp
dec
call
js
mov
imulb
sub
jp
movsb
push
mov
inc
adc
iret
ds
sbbl
es
mov
dec
cmp
orl
mov
mov
jns
xchg
push
mov
adc
scas
cmp
daa
cmp
jbe
shlb
mov
arpl
inc
lcall
jmp
xchg
mov
pop
cli
pop
sbbl
inc
stos
outsb
mov
loop
je
inc
js
and
mov
jecxz
lret
or
and
sti
xchg
scas
xchg
notb
dec
lret
divb
pop
add
push
pop
mov
push
ret
inc
nop
add
stc
pop
jbe
movsb
test
aad
cwtl
mov
cwtl
xor
sbb
cli
jne
sub
cmp
adc
jnp
mov
sub
sbb
repnz
dec
fcmovne
push
pop
xchg
jmp
xlat
xchg
inc
mov
daa
xchg
sbb
sbb
inc
out
xor
call
aad
insb
mov
mov
push
xchg
push
mov
or
push
push
arpl
jae
repz
dec
xchg
pop
subb
push
push
pop
sbbl
aaa
mov
fisubrl
adc
std
mov
ficompl
outsb
cltd
arpl
pop
inc
daa
adc
xor
add
pop
mov
fdivrs
and
xchg
or
inc
xchg
lock
icebp
mov
adc
and
sbb
fwait
add
js
fwait
jmp
icebp
jl
xchg
in
xor
add
dec
cmp
push
into
stos
leave
pop
lods
inc
jne
mov
js
fcomps
data16
inc
and
sbb
push
sbb
adc
stc
sub
pop
jno
in
and
popf
xlat
jnp
insb
out
adc
xor
fimuls
sti
pop
push
mov
mov
mov
icebp
xor
popf
stos
jge
rcrb
xchg
xchg
adc
jg
nop
lret
icebp
rcr
mov
test
inc
xor
xor
or
mov
sbb
inc
pusha
sub
mov
mov
or
sub
int3
nop/reserved
add
lods
int
movsb
jecxz
pop
or
iret
sub
mov
gs
imul
jo
shll
loope
mov
mov
mov
or
hlt
mov
mov
mov
xorl
cli
cmp
and
pop
push
xchg
mov
scas
mov
out
jg
cmp
test
and
lds
filds
pop
iret
adc
xor
adc
jns
out
imul
mov
les
xor
and
aaa
sbb
stc
cmp
pop
and
cmpsb
inc
out
xor
es
push
sub
mov
test
fdivrl
ja
popf
shlb
or
and
pushf
and
push
xor
pop
inc
xchg
jecxz
mov
imul
fistps
rolb
mov
pop
lods
imul
push
aaa
sub
sub
pop
inc
movsb
fsts
dec
mov
cs
std
testb
shl
and
je
sarl
call
add
test
push
mov
lahf
out
inc
dec
test
insb
and
leave
ficomps
pop
adc
pop
dec
aad
cmpsb
or
cmp
push
push
push
pop
fwait
or
shrl
repz
mov
cmpl
pop
movsl
movsl
lds
cmp
lods
rcll
sub
lea
pop
stc
push
inc
push
sub
inc
mov
sub
xchg
mov
repnz
gs
rolb
cmp
in
mov
ret
add
inc
xlat
pop
std
sub
mov
aas
leave
insl
mov
icebp
aas
rcr
call
outsb
push
in
cs
arpl
mov
les
xchg
fdivrp
jg
adc
das
loope
cs
adc
jmp
hlt
mov
or
das
int
sbb
fsubl
out
jle
in
aas
movsl
shrl
pop
inc
cld
cmp
in
push
mov
and
popf
sti
xchg
repz
mov
xchg
xchg
aas
mov
js
lret
je
orl
cmpsb
mov
out
pop
cmovne
xchg
dec
mov
push
pop
dec
test
add
shll
add
mov
outsb
gs
cmp
sub
icebp
imul
adc
sbb
or
lret
inc
out
rolb
push
lret
jp
shrl
insb
mov
and
fsubs
lret
mov
sub
mov
inc
xchg
sub
jno
stos
ljmp
mov
adc
adc
lods
imul
addr16
loopne
add
loop
push
cmp
add
fldl2e
int3
jmp
fstpt
dec
and
test
jg
push
cwtl
and
out
jae
mov
pop
sarl
and
movl
dec
test
mov
dec
out
adc
and
enter
shll
inc
pop
in
push
pop
call
jecxz
lods
inc
inc
stos
lods
sarb
pushf
insl
lock
jne
xchg
lret
aad
or
scas
stc
gs
fldl
push
jl
push
sub
dec
push
mov
pop
and
mov
pop
sub
push
sub
mov
pop
sbb
xor
ds
out
sbb
or
jbe
fs
in
pop
mov
movsl
push
fcomps
jl
mov
jge
mov
mov
insl
mov
ja
ret
push
outsb
popf
xchg
adc
test
cmpsb
out
or
sub
aaa
aaa
pusha
aam
sub
movl
arpl
nop
in
nop
and
cmp
dec
cwtl
and
popa
daa
or
mov
push
cmp
and
inc
jnp
jmp
imul
ret
cwtl
push
sbb
xchg
pop
jo
loop
repz
add
out
adc
mov
push
lahf
ljmp
sti
xchg
jl
ret
adc
mov
push
das
in
pop
aaa
mov
and
cmp
mov
push
dec
shrb
imul
cmp
pop
adc
fdivrs
lret
shll
nop
and
xchg
and
fucom
jo
mov
sbb
sub
rcll
movsl
data16
repz
lcall
fimuls
pop
jb
sbb
call
cli
movsl
dec
ret
ret
cld
and
sbb
imul
sbb
test
add
dec
cmp
out
sbb
add
sbb
sbb
xor
pushf
adc
push
imul
mov
adc
cltd
add
and
insl
add
sub
hlt
push
push
jg
out
mov
inc
and
mov
shrb
or
lcall
lcall
jl
iret
sub
scas
outsb
fadds
inc
jae
dec
push
jns
lcall
cmc
add
stc
stos
push
stc
movsb
in
mov
or
scas
jns
xchg
dec
loopne
adcb
arpl
lock
sub
push
shll
js
lea
js
rcrl
or
imul
mov
jno
sti
lret
inc
testl
add
xor
cld
dec
add
mov
gs
jg
outsb
mov
andl
and
push
rol
nop
out
pop
mov
movsl
idivb
sub
ja
xor
popl
or
xor
movsl
cmp
shll
movsb
fwait
je
in
xlat
cmp
sub
insb
push
xor
inc
inc
lods
out
mov
das
fwait
cmpsb
mov
pusha
les
addr16
inc
add
out
in
rclb
jp
insb
aad
mov
sub
dec
call
dec
cmpsb
push
roll
xor
cmp
jb
xchg
sub
cmp
outsl
xor
test
fstps
push
test
sub
aam
lret
gs
dec
adc
jbe
push
out
lcall
and
adc
aaa
adc
cmp
adc
adcb
out
adc
in
testb
pop
jns
rolb
je
inc
jp
movsl
or
jg
mov
stc
addr16
pop
mov
xchg
fidivrs
fimuls
and
sub
mov
sbb
sbb
lods
jno
stc
mov
or
pop
inc
push
push
das
sbb
js
in
adc
or
inc
gs
mov
inc
cltd
loope
cwtl
or
sbb
cmp
xor
cli
fidivs
test
mov
mov
sbb
mov
jb
push
jg
mov
push
paddsw
inc
xchg
jmp
mov
xor
les
clc
jl
aaa
lods
adc
lds
jmp
xchg
in
jo
push
inc
das
loope
in
inc
ret
mov
outsb
imul
or
call
mov
dec
sbb
lods
xor
push
daa
mov
pop
neg
mov
imul
aam
or
xor
and
pop
add
repnz
notb
pop
inc
js
jle
push
dec
out
inc
aaa
pop
and
mov
add
jbe
cmpsb
pop
movsl
pop
int3
inc
fsubs
popa
mov
push
mov
mov
add
subb
test
std
sbb
les
mov
jo
push
aam
aaa
lds
lret
pop
jp
jmp
push
adc
cs
inc
test
fcomps
lahf
lea
lcall
cwtl
aam
hlt
jbe
lahf
xchg
jge
jae
outsb
leave
sub
scas
xchg
fistpl
and
push
and
aad
aas
ficoml
test
daa
mov
jp
lret
shlb
cmp
dec
sub
fsts
jmp
std
call
stc
pop
mov
lret
cmp
dec
enter
jb,pn
lds
inc
push
sub
xchg
pushf
pop
push
dec
add
mov
aas
iret
loopne
out
push
clc
adc
movsb
outsl
xorb
popa
jnp
sti
xor
lods
sub
sarl
insb
xor
mov
scas
in
ficoml
js
fimuls
cmpsl
scas
add
test
mov
inc
lods
popa
dec
test
lret
and
out
fisttps
mov
dec
pop
sbb
insl
roll
fstps
call
pop
ss
pop
das
mov
jl
xchg
add
dec
adc
sbb
rolb
inc
mov
xor
ss
movsb
out
das
push
sub
out
pop
repnz
push
mov
inc
mov
sub
cmp
mov
insb
insb
push
or
mov
fwait
cld
shlb
outsl
fwait
jecxz
mov
outsl
sbb
push
cmpsb
cmpsl
ds
push
and
subl
mov
xor
roll
add
int3
dec
fisubrl
adc
push
push
inc
ret
adc
and
ficomps
hlt
dec
dec
sub
jge
imul
adc
pop
push
iret
aad
repz
mov
push
std
cmp
pop
adc
jl
xor
mov
push
mov
xor
lock
fs
inc
or
push
lods
stos
insl
push
clc
lods
or
xor
push
and
aas
das
push
lea
add
xchg
dec
rorb
and
jg
dec
fiadds
mov
addl
sbb
popf
fisubl
pop
arpl
sbb
sub
xor
int
imul
cmpsb
xchg
inc
mov
mov
movsl
roll
pop
mov
push
test
call
sub
dec
push
sbb
lods
jl
sub
ret
outsb
cmp
into
push
mov
mov
sahf
ja
iret
mov
cmc
data16
shrd
lock
repnz
or
mov
jg
jge
and
xor
popf
out
mov
std
mov
jge
push
push
sub
or
mov
mov
xchg
fcmovnb
jg
xchg
push
call
fidivs
test
inc
adc
repnz
add
jge
rorl
and
add
shll
cmpb
in
mov
inc
add
pusha
inc
fcoms
jno
xor
sbb
push
mov
test
jl
and
es
or
and
and
fbld
jecxz
adc
cmp
cli
push
inc
lea
sti
sbb
bndstx
jne
lock
adc
cwtl
inc
stc
movsl
jge
and
sub
inc
call
jecxz
ja
mov
push
je
adc
dec
shl
pop
add
xchg
xor
or
incl
data16
and
sbb
pusha
mov
aaa
popf
xor
mov
and
pop
mov
cld
popf
xchg
jno
cld
and
push
inc
bound
jne
mov
xor
lock
dec
inc
pop
ljmp
adc
in
lcall
cwtl
push
shlb
cmp
adc
cli
les
jge
mov
popa
dec
sti
negb
and
scas
mov
xor
or
aad
cli
ljmp
dec
push
stos
and
xor
cmpsl
mov
sbb
and
xor
adc
mov
xchg
test
lea
hlt
adc
add
pop
and
data16
sbb
mov
or
mov
adc
mov
inc
enter
scas
pushf
test
and
xchg
call
insl
add
sahf
mov
pop
cmp
xchg
mov
xchg
loope
xchg
sub
iret
call
fadd
xchg
mov
imul
lods
fstps
inc
sahf
jecxz
add
push
push
dec
lahf
push
adc
or
jg
testb
fistl
stc
xchg
or
iret
sahf
push
cmc
aad
inc
xor
or
insl
sarb
xchg
mov
sbb
sbb
adc
push
shlb
int3
lret
push
rclb
mov
and
loopne
xchg
mov
int
mov
mov
out
sarl
add
clc
mov
scas
pop
inc
scas
sbb
cwtl
scas
sahf
test
notb
pop
iret
ja
pusha
push
mov
inc
xchg
dec
pop
xor
mov
push
xchg
outsl
test
add
adc
hlt
and
jg
jbe
aad
sub
sti
mov
xorl
xchg
shr
and
xchg
dec
adc
pop
ret
rep
pushf
pop
lret
shrl
repnz
js
int
ljmp
stos
dec
mov
dec
clc
jne
outsl
push
adc
lahf
dec
xor
jae
cwtl
adc
sbb
add
adc
imul
js
and
stos
rolb
dec
sahf
mov
addr16
cli
inc
or
movsl
jp
lods
cmpsb
sbb
or
and
adcl
lcall
aas
mov
out
in
mov
adc
inc
in
mov
or
mov
sbbl
call
loopne
inc
test
jno
movsb
pop
adc
lods
xchg
or
mov
mov
pop
cmpsl
in
cmp
das
and
or
dec
add
test
adc
sub
or
jmp
inc
jl
and
imul
push
sub
outsl
pop
push
jg
push
cltd
push
cmpsl
cmp
scas
push
adc
lea
mov
sbb
xor
imul
insl
add
lds
cmp
and
adc
test
mov
andb
mov
int
movsl
lods
pop
cmp
mov
xchg
mov
inc
push
lods
add
cmpsb
pop
ret
cmp
fcomip
adc
movsb
xor
movsl
xor
xor
test
clc
jnp
mov
mov
mov
mov
adc
mov
sub
jo
inc
gs
cmp
and
mov
push
out
xor
jge
mov
or
sbb
icebp
mov
push
xchg
mov
jp
frstor
daa
out
cli
nop
xrelease
out
inc
pop
mov
cmp
inc
push
mov
or
mov
adc
fwait
nop
jo
push
nop
dec
bnd
test
xchg
outsl
loope
dec
sub
and
jo
pushf
mov
and
mov
test
enter
sub
mov
test
sbb
bound
pop
shlb
cli
loope
lea
cld
inc
and
or
jb
in
aam
aam
ds
pop
mov
dec
repnz
cltd
les
mov
subl
cwtl
stc
fwait
je,pn
and
stos
pop
data16
lds
pop
in
mov
enter
add
fidivrl
cli
dec
mov
outsl
sub
fidivrs
and
outsb
in
popf
inc
ds
rorl
xorb
scas
sbb
test
lock
test
and
add
mov
xchg
xchg
scas
mov
lahf
dec
xor
dec
sarl
cld
subb
dec
mov
adcl
xor
cmp
pop
outsl
jo
test
les
add
arpl
ja
test
popa
add
xor
jg
lahf
scas
push
pop
adc
inc
xor
and
pop
fcomp
imul
arpl
out
pop
into
icebp
mov
and
lcall
stos
xchg
dec
cmp
dec
bound
mov
jl
adc
cli
add
dec
jmp
add
or
insl
ss
dec
scas
fld
inc
xor
mov
andb
sti
push
sahf
pop
mov
and
mov
fwait
xor
loope
mov
adc
jg
es
ss
sub
mov
mul
mov
ss
mov
je
or
or
lds
mov
movsl
call
sti
movsl
js
jnp
sbb
lea
movsb
pusha
push
cltd
push
loopne
lods
lret
pop
push
pushf
orb
stos
in
insb
filds
icebp
stos
sub
xor
test
and
add
lret
das
leave
or
and
jge
icebp
jno
scas
adc
jb
cmpsb
das
mov
adc
das
pop
and
dec
sub
dec
push
enter
bound
inc
rep
push
out
rclb
dec
adc
fxch
popa
shlb
into
or
lods
jnp
dec
jno
test
adc
fwait
shlb
test
out
cmp
test
repz
divb
cli
cmp
mov
movsl
inc
jl
mov
mov
fildll
or
xchg
push
push
fisttps
lock
jb
daa
ret
test
cmc
pop
push
roll
mov
lahf
inc
dec
call
mov
rorb
cltd
lds
cwtl
jecxz
flds
jo
or
scas
inc
pushl
loopne
dec
lock
xchg
mov
vmwrite
or
inc
clc
out
jp
cld
shrb
and
loope
jge
inc
sub
push
sbb
and
insl
push
pop
pop
dec
xor
test
call
adc
mov
arpl
nop
mov
test
lret
cs
push
cld
rcrb
clc
push
jecxz
or
pushf
xor
adc
cwtl
fcoms
mov
leave
lcall
fidivl
push
mov
add
cmp
push
pop
lea
fstpt
jp
lock
jecxz
or
imul
xor
and
adc
mov
fwait
push
scas
mov
je
out
jmp
cltd
ja
push
sub
adc
dec
jno
aaa
mov
ret
xchg
pushf
add
xor
dec
enter
ficoml
cmpsb
es
jne
nop
xor
dec
outsl
out
add
add
mov
xchg
and
inc
daa
sbb
sub
lret
jmp
mov
and
mov
pop
add
sbb
fidivl
sbb
push
movsl
dec
sbb
add
mov
dec
jno
xlat
cmp
mov
sub
mov
push
shl
je
cltd
stos
fists
arpl
scas
mov
lret
mov
mov
js
add
inc
pop
inc
xchg
lea
push
add
mov
fbld
mov
pop
cs
sbb
lds
sbb
loop
mov
and
testl
jbe
cmp
lds
sub
out
stos
sub
xor
fistl
or
outsl
pop
mov
dec
xor
lcall
in
cmpsl
mov
xchg
push
and
pop
es
sti
aam
adc
lret
mov
mov
adc
pusha
cli
sti
rorb
jl
mov
fmull
dec
in
and
clc
mov
adc
xor
mov
mov
bound
mov
ret
jge
sub
dec
lods
shl
dec
out
sar
daa
mov
or
add
out
and
orb
xchg
sbb
stos
xchg
leave
mov
and
dec
push
jnp
mov
mov
loopne
shrb
push
scas
cmp
and
test
loop
aam
sub
mov
pop
lret
shll
pop
push
inc
les
je
test
mov
xchg
cmc
add
sbb
test
and
xor
lods
pop
mov
mov
out
dec
sbb
in
lahf
scas
aad
popa
dec
popf
adc
lahf
icebp
cmovle
stos
xchg
mov
ja
aas
adc
out
mov
adcl
jl
lock
test
jg
sub
outsl
sbb
sub
cltd
jo
push
lret
add
rclb
jle
mov
stc
aas
or
mov
xchg
repnz
push
dec
xor
dec
rcrb
mov
push
leave
test
cmp
mov
out
push
ds
push
out
out
out
pop
pop
test
pop
stos
xlat
xchg
mov
mov
jmp
sbb
popa
inc
jmp
add
pop
jmp
push
aam
imul
cmpsl
cmp
daa
ljmp
pop
repz
sub
inc
and
cmp
mov
rorl
mov
sub
gs
mov
les
sbb
cmpsb
cli
pop
add
es
sub
dec
arpl
push
aad
mov
js
and
add
cld
cmp
adc
mov
ftst
es
js
sbb
pop
sbb
adc
inc
xlat
std
lods
and
mov
lret
repz
sub
outsl
sub
push
lret
imul
adc
lea
xchg
insb
dec
lods
mov
mulb
cmpl
jmp
mov
or
cmpsl
add
push
add
dec
sahf
add
jnp
fwait
adc
divb
outsb
andb
popl
das
pop
add
mov
cmp
mov
shlb
mov
stos
jb
xor
jle
push
mov
arpl
jo
daa
lret
push
add
jle
xor
imul
mov
sub
mov
mov
mov
sahf
mov
dec
cs
test
or
cmp
jp
iret
daa
and
dec
clc
cmp
leave
mov
arpl
jbe
sub
lock
imul
and
adc
lahf
mov
jg
lret
mov
ljmp
mov
cmpsl
in
stc
cwtl
jmp
pop
jl
das
aaa
repz
mov
pop
in
mov
sbb
adc
xchg
hlt
lret
stc
cmpsl
xchg
mov
mov
mov
int3
addl
mov
jge
jno
cli
bound
mov
pop
sbb
jl
push
arpl
in
xor
jb
addr16
addl
orb
out
jl
in
dec
xor
lret
ljmp
or
out
notb
dec
mov
mov
xor
shrb
push
cmp
pop
mov
scas
ret
push
mov
mov
sub
shrb
out
imul
outsl
pop
lods
lret
scas
and
cmp
pop
cld
jle
movsb
fildl
ja
pop
add
jmp
dec
sub
cmc
mov
add
icebp
mov
pop
jb
enter
and
cmp
jne
jns
repnz
decb
dec
fnstenv
loopne
push
addr16
iret
pop
sub
push
dec
pusha
aam
test
aam
xorl
rcrl
mov
or
out
fwait
clc
stos
mov
mov
fdivl
ret
cmovg
pop
aam
add
or
mov
pop
jg
out
out
sub
rorl
mov
xor
inc
les
in
inc
xchg
insb
mov
inc
xchg
mov
dec
nop
add
push
test
adc
je
dec
lret
sub
popf
shr
aas
inc
xchg
enter
push
push
push
sbb
push
sbb
sbb
and
repnz
mov
mov
rcr
jbe
mov
sar
out
out
sbb
cs
jecxz
mov
rcrl
add
pop
imul
pusha
or
loopne
int3
cli
push
and
pop
fcompl
lock
xchg
repz
sbb
enter
lret
xchg
xchg
jns
loopne
rcrl
arpl
mov
add
xchg
adc
shll
cmp
ret
push
add
fldenv
sub
jl
orl
push
fdivrp
lods
lock
pop
mulb
mov
mov
lds
ljmp
fs
jl
fldenv
dec
int3
push
cmp
push
mov
jp
ret
and
mov
push
xor
and
js
jmp
fdivrp
aad
push
pop
addr16
and
dec
lods
inc
and
iret
jge
jbe
inc
inc
insl
shl
stc
iret
and
pop
sarl
push
icebp
or
lods
cmp
push
test
sub
xchg
xor
into
jecxz
outsb
lods
mov
insl
shl
outsb
inc
mov
fstl
pop
xchg
mov
add
xchg
xchg
mov
hlt
notb
jne
push
pop
lock
jnp
ffreep
popa
jno
and
inc
cltd
shlb
sub
or
es
add
fidivrs
push
cmp
or
out
pop
test
sub
fmul
xchg
and
ja
dec
in
popf
test
fstpt
mov
jmp
ss
mov
in
jle
ja
les
rcrb
sahf
mov
xchg
sti
ret
xchg
adcl
std
dec
jb
and
mov
cld
pop
adc
shll
jb
cltd
pop
leave
dec
into
mov
sahf
mov
jmp
movsb
jl
sbb
das
sub
addr16
stos
xchg
aaa
xor
xchg
aas
in
out
inc
xor
pop
pop
out
je
lods
push
dec
sub
scas
aaa
stos
mov
xchg
lcall
add
inc
mov
inc
xor
xchg
filds
loop
jno
fnstenv
pop
fwait
push
fwait
jae
ss
mov
adc
ljmp
or
in
push
push
ja
sahf
and
adc
loope
insl
ret
add
test
add
aas
xor
cld
testl
movsb
lods
jge
adc
loop
xor
sbb
cmp
mov
mov
loopne
loop
jb
and
es
fistpll
mov
fdiv
mov
mov
shlb
bndstx
xor
and
adc
daa
aas
push
xor
push
push
adc
lods
mov
sbb
popa
xor
xor
icebp
xchg
pop
jge
add
lods
xor
stos
scas
inc
aas
js
mov
fidivl
das
jle
mov
fildl
and
dec
pop
loopne
insl
and
add
adc
into
push
add
dec
xor
mov
je
cld
mov
movsl
pop
jg
cmp
jg
ret
shl
mov
add
out
dec
ficoml
frstor
and
add
cmpl
pushl
mov
shl
test
push
pop
mov
and
mov
cmp
cli
les
xchg
test
idivb
jge
sbb
push
xlat
jbe
mov
cmp
push
enter
add
test
add
lods
shl
shlb
add
and
mov
sub
xor
sbb
ja
xor
lcall
cmp
ljmp
push
sub
xor
mov
adc
sbb
aad
push
jp
inc
or
test
cmp
bound
ror
cmp
push
jnp
out
inc
xor
in
pop
dec
mov
inc
mov
xchg
add
sarl
dec
mov
shl
xor
jo
scas
int3
imulb
sbb
push
xor
ja
imull
ret
add
cmc
push
sti
les
adc
xor
loopne
dec
xlat
or
mov
mov
pop
jge
mov
add
enter
dec
cmp
ljmp
xchg
adc
add
dec
xchg
cs
ljmp
inc
repnz
pop
push
clc
popf
bound
ficoms
outsb
jno
outsb
push
stos
aad
xor
cs
mov
cmpb
stc
adc
pop
jmp
sub
subb
or
pop
mov
int3
add
imul
outsl
ret
push
shrl
mull
loope
jle
sbb
and
cmp
fidivl
jns
jns
mov
adc
jmp
cmp
sub
in
inc
lcall
enter
sets
ss
sub
add
lock
xchg
inc
dec
pop
loope
sbb
paddusb
jbe
xchg
rorb
fs
leave
lock
call
ss
sbb
insl
rcl
int
imul
mov
stos
int3
js
cmp
jl
std
les
pop
cli
xorl
adc
cs
insb
gs
mov
pop
xchg
dec
loop
mov
xchg
rcl
and
roll
push
and
mov
or
or
shll
mov
cmc
xchg
push
or
fldcw
cli
push
push
xchg
adc
loope
xor
nop
popa
mov
int
push
es
cmpsl
push
cmp
rcrl
or
icebp
data16
inc
loopne
dec
sub
push
push
inc
and
pop
pop
das
mov
xor
sbb
xor
jno
mov
mov
lds
jle
int
nop
jl
xchg
and
stos
je
leave
aas
cs
iret
jl
mov
adc
dec
dec
jp
clc
popf
dec
xchg
mov
aam
cmp
and
jns
mov
and
aad
mov
pcmpeqd
adcb
jo
inc
fistpl
and
and
xchg
stc
aas
lds
adc
xor
dec
jno
xchg
aaa
js
lret
mov
dec
push
shlb
fisubl
int3
aas
inc
xor
les
or
jl
out
fs
xchg
insl
cmp
mov
push
cs
lods
inc
pop
int
xor
cmp
movsl
pop
cmpsb
fs
shlb
adc
int3
jge
ret
mov
ds
or
into
pop
pop
sub
adc
int3
sahf
test
insb
lret
pop
jg
add
and
popf
adc
sbb
cs
sub
aaa
pop
imul
sbb
cwtl
test
jo
inc
and
adc
popa
sub
cmpb
jae
and
lds
jo
and
movb
jmp
jo
pop
stos
fsubl
mov
push
outsl
out
loopne
mov
or
push
loop
sahf
loopne
cs
jae
popf
cs
das
lea
pop
cmpsl
movsb
xchg
dec
rorl
sbb
mov
mov
lret
fucomp
xor
push
push
lock
loope
popa
or
mov
sarb
xor
insl
aam
mov
leave
pushf
or
shll
mov
es
cmpsl
roll
jns
pop
fsts
loope
cmp
lods
int
push
bound
adc
or
leave
loopne
scas
enter
fimull
enter
cmp
mov
scas
xorl
popf
and
add
inc
add
pop
out
gs
pop
test
mov
or
mov
mov
mov
mov
mov
cmc
rcrb
arpl
ret
mov
sbb
ljmp
subb
add
outsb
cmp
test
jae
sbb
push
nop
cs
mov
pop
fimuls
enter
adc
xor
sbb
inc
stos
pusha
push
mov
ror
inc
les
in
repz
push
fists
inc
sar
in
test
and
jbe
jecxz
das
cmp
xor
inc
mov
inc
jae
cwtl
mov
outsb
add
in
loop
and
xchg
dec
or
cmp
cli
scas
or
cli
cmp
shlb
jge
inc
dec
fs
jbe
roll
lret
out
mov
outsb
imulb
mov
mov
mov
push
push
jge
imul
stos
xchg
lds
into
jno
mov
fiaddl
sub
aad
cltd
enter
dec
popa
or
std
cmc
mov
loopne
dec
pop
lahf
inc
mov
fstpt
push
fidivrl
push
hlt
mov
jb
lcall
inc
leave
or
idiv
rorb
insb
pop
test
mov
pop
mov
mov
xchg
sub
inc
imul
push
pop
mov
mov
test
popf
addr16
adc
inc
jge
cmpsl
daa
jmp
sti
sbb
sub
test
cmp
add
add
icebp
cmpsl
mov
mov
adc
or
pop
aas
lret
pop
dec
sub
hlt
mov
push
leave
mov
lret
push
adc
dec
jb
sbb
add
sbb
add
in
ficomps
mov
cmp
dec
push
std
enter
out
dec
popf
icebp
dec
cmc
sub
not
cmp
ret
and
xchg
cmc
xor
inc
cmp
cmp
scas
cmp
popa
inc
lea
lea
mov
not
cmpl
xchg
mov
adc
dec
xor
xchg
jne
popa
push
cs
dec
iret
in
fbld
push
sub
scas
adc
mov
loop
lcall
icebp
rcr
std
and
aad
movsl
and
xor
fdivrl
add
dec
adc
movsl
push
jl
insl
mov
sub
int3
mov
ret
add
jo
iret
push
cwtl
js
mov
std
ds
sub
or
loop
inc
outsl
fsubrp
and
jge
icebp
pusha
jmp
adc
dec
fdivl
aaa
out
es
je
and
cmpsb
add
sbb
sti
cmp
fsubl
lea
inc
fcoms
xlat
test
dec
pop
push
int3
and
mov
xorb
mov
lods
mull
fldl
xor
add
adcb
int3
inc
pop
mov
and
push
cli
mov
xchg
ja
ret
and
js
xor
cmc
sti
mov
ret
mov
outsl
mov
mov
movsb
dec
fwait
in
mov
cwtl
inc
push
lret
das
enter
sbb
xor
sub
jns
std
jge,pn
inc
loopne
pop
enter
popl
test
jbe
mov
jle
outsb
adc
cmpsl
inc
push
les
mov
ljmp
mov
fwait
shrb
and
mov
cmp
call
call
or
inc
out
lock
inc
mov
test
mov
xchg
loopne
aas
mov
sub
dec
iret
js
adc
scas
mov
pop
fisubs
pop
imul
push
pop
test
jne
or
jbe
mov
testb
xor
lret
lret
loop
out
test
pop
fdivl
jmp
enter
je
leave
adc
xchg
scas
pop
sbb
addr16
notb
push
pop
xchg
in
fwait
ret
pop
pop
leave
pushf
mov
mov
nop
rorl
mulb
inc
adc
jmp
and
mov
jp
add
mov
cmp
jbe
mov
lret
inc
push
shll
ficomps
pop
bswap
push
popa
cmp
adcb
mov
andb
mulb
mov
call
es
mov
adc
insl
jp
cwtl
cmp
ss
mov
fists
pushf
sub
lahf
mov
cwtl
aad
add
popf
dec
into
push
add
pop
lds
jle
push
jnp
lods
jb
out
xchg
dec
sbb
mov
mov
xor
adc
aam
cmc
push
adc
insl
scas
mov
cmpsl
shl
mov
into
cld
rorb
dec
adc
sub
dec
pushf
cmp
xor
jno
push
pop
xchg
je
add
repz
idiv
and
jge
bound
cmp
addr16
lcall
xor
ret
mov
or
cwtl
xor
or
dec
in
xchg
les
or
inc
pop
inc
mov
push
dec
or
dec
ss
adc
out
mov
dec
cmpsb
mov
or
loopne
dec
jle
cmc
xchg
lahf
movsl
sub
sub
mov
sahf
scas
xchg
mov
cmp
mov
adc
movsl
sbb
sub
jp
or
cmc
sbb
cmp
mov
jno
pop
cli
or
fs
sbb
jge
mov
inc
mov
lea
jecxz
jne
inc
xor
push
hlt
and
jmp
adc
pop
mov
or
and
push
cmp
mov
push
cmpsl
cmpsb
lock
mov
jecxz
mov
pop
dec
mull
data16
enter
adc
sub
hlt
cmpsl
data16
adc
dec
push
sbb
mov
aaa
std
inc
enter
inc
inc
mov
inc
pop
enter
sti
movsb
imul
pop
mov
loope
stc
outsl
pop
mov
cmp
pop
xchg
cmpl
xor
mov
push
inc
push
addr16
pop
sbb
push
cmc
fidivrs
dec
inc
xor
inc
jecxz
ret
ljmp
adc
xlat
ret
std
mov
rcll
push
cld
sbb
cmc
clc
sub
mov
aam
or
je
out
dec
add
dec
xor
lret
mov
daa
xor
push
xchg
or
jbe
mov
mov
testl
jae
aas
mov
pushf
cmp
ds
dec
dec
orb
lods
lahf
mov
jge
push
jns
adc
add
sbb
xchg
dec
push
sti
ss
xchg
xor
cmp
leave
dec
pop
jno
shrb
out
outsl
lcall
sub
and
ror
es
fnstsw
sbbl
or
hlt
cmp
lods
add
orb
adc
cmpsl
orl
mov
sub
mov
loopne
mov
stos
data16
sub
lods
cld
sbb
fldenv
ss
lahf
insl
inc
addr16
mov
cs
jbe
sub
daa
add
jp
or
imul
add
jb
mov
cs
or
dec
xchg
std
enter
mov
loop
push
and
sub
and
xor
movsl
iret
in
enter
mov
shr
xor
dec
mov
les
mov
cwtl
dec
or
push
ret
loopne
stos
push
push
mov
sbb
fstpl
dec
icebp
dec
iret
insl
pop
mov
sub
jb
sbb
into
mov
inc
iret
sub
pop
mov
aad
and
push
sub
jecxz
idivb
or
adc
add
fnstsw
popa
repnz
mov
push
js
pop
xchg
push
lret
inc
test
push
add
shl
fstl
lcall
jmp
mov
cmp
xor
add
mov
xchg
lea
sub
aas
pop
popa
or
ret
xchg
push
inc
insl
cwtl
fcoml
jl
leave
mov
push
push
xchg
xchg
in
mov
cmpsl
jp
in
ret
mov
add
xor
dec
lret
mov
inc
pop
aas
jae
push
mov
lret
nop
mov
clc
push
stos
stc
lahf
leave
inc
lds
jns
fwait
add
mov
out
jp
lea
push
or
pop
and
inc
push
jbe
push
lds
lods
xor
jl
jo
sbb
fadds
cmpsb
icebp
cmp
daa
rclb
in
or
loope
pop
lret
cwtl
fisubrs
inc
mov
int
or
xchg
ret
dec
das
std
divb
fistps
inc
jle
xor
mov
xor
movsb
jmp
rolb
adc
loop
jl
push
call
aam
out
or
imul
mov
loopne
cmp
push
aaa
pusha
jmp
jge
fldcw
sbb
mov
pop
scas
bound
les
lret
and
or
jp
insb
pushf
xchg
sub
lahf
push
dec
cmp
push
fsubs
mov
faddl
or
mov
aam
mov
insb
mov
fcompl
out
jmp
add
shlb
dec
dec
lds
or
data16
inc
cmp
repnz
ficoml
aaa
jae
lea
mov
dec
sahf
imul
out
add
in
xor
fisttps
inc
aam
shll
daa
negl
jne
cmp
lds
mov
cmp
mov
lds
mov
fbld
mov
push
sub
ss
inc
loop
mov
mov
push
inc
add
inc
push
adc
add
pushl
sbb
icebp
sbbb
idivb
out
aam
dec
push
clc
outsl
inc
int3
cmpsw
loopne
xlat
push
sub
push
mov
cli
add
sub
xchg
sahf
pop
rol
mov
outsb
pop
push
mov
stos
or
xor
stos
mov
shl
and
mov
inc
pop
cltd
xor
mov
js
mov
xchg
and
cmc
addr16
lds
xor
push
stos
adc
or
call
push
jbe
dec
cwtl
pop
xor
mov
pop
aad
insb
repz
dec
in
xchg
dec
cmc
call
dec
mov
leave
mov
das
pop
insb
rol
adc
pop
sti
push
in
mov
pop
xchg
aas
add
jbe
aas
xor
xor
adc
sub
call
aad
jge
inc
fldl
popa
and
xchg
mov
inc
push
jo
repz
fidivs
mov
imul
mov
clc
imul
cwtl
jg
cli
mov
inc
xor
jp
ljmp
std
insb
addl
les
daa
hlt
loopne
scas
in
mov
out
daa
mov
push
aam
mov
cmp
lds
mov
adcb
aaa
pusha
jmp
mov
inc
out
lds
aam
cmc
jecxz
jae
inc
incb
and
fsubrp
cmp
mov
mov
jno
shrb
andl
sahf
lret
pop
sub
mov
jmp
int3
sarl
scas
jl
mov
pop
lahf
hlt
std
and
adc
sub
sub
jecxz
mov
test
icebp
stos
push
lea
pop
lret
push
ret
insl
xchg
push
push
dec
enter
mov
cltd
gs
adc
bound
xorb
xor
daa
xor
inc
jg
aad
cmpsb
pop
push
leave
movsl
mov
push
mov
cltd
in
lahf
push
mov
cmpsl
dec
into
pop
or
sub
repnz
cmp
xor
test
lret
enter
rcl
fwait
movsl
das
push
sub
xlat
mov
lahf
fldenv
lods
in
lods
mov
pop
lret
mov
out
dec
arpl
js
int3
fsts
xchg
or
jb
jmp
or
cld
sub
inc
and
xor
int3
push
jecxz
adcb
mov
mov
cli
pop
adc
lret
int
mov
push
enter
pop
jb
ret
fisubrs
jno
jl
out
es
inc
scas
into
mov
les
mov
mov
pushf
adc
in
arpl
sub
adcl
push
flds
and
imul
dec
in
mov
repnz
and
cwtl
sub
stos
repz
enter
jns
inc
fimuls
lds
pop
scas
jnp
or
push
dec
mov
cmpsl
call
or
inc
jnp
shrl
xor
in
rolb
insb
push
xchg
pop
orb
sub
mov
push
arpl
mov
daa
lock
jno
in
jo
int3
cmc
enter
inc
mov
push
fidivrl
mov
cmp
popa
fcomps
iret
cmpsb
cmpsl
mov
in
stc
shlb
pop
pop
sti
cmpsl
mov
mov
repnz
adc
aad
push
popa
mov
fldl
lret
dec
add
cmpsl
cmp
leave
call
and
mov
push
sub
push
int
xchg
js
lea
pop
mov
and
repz
insl
adc
and
cli
test
shlb
out
push
add
push
adc
inc
sarl
popa
push
clc
lahf
xchg
movsb
ja
pop
sub
pop
dec
jge
push
fsubrl
daa
push
fldt
fisttps
push
adc
inc
cs
pop
jne
xor
xchg
adc
mov
xor
sbb
jno
fwait
shl
jns
inc
aaa
fstl
push
in
dec
ret
pop
jnp
add
fidivs
testb
sub
sbb
xchg
fsubp
mov
mov
xchg
lods
push
lahf
out
mov
clc
iret
mov
out
xchg
rcll
repnz
xchg
fidivrs
loopne
jne
nop
popl
xchg
push
fidivrl
imul
rolb
fcmovnbe
icebp
in
push
in
lahf
inc
jg
push
push
punpckldq
and
cwtl
sbb
sub
add
je
pusha
call
lea
scas
push
xchg
dec
rclb
and
je
sarb
inc
mov
out
int
stos
icebp
nop
test
mov
and
pusha
popl
fld
test
pushw
pop
lods
xorl
sbb
jle
or
push
inc
dec
andl
rcrb
clc
and
pop
shr
lahf
in
bound
mov
or
in
rolb
loop
cmpb
jne
lods
mov
or
lock
into
sarl
cmp
ljmp
out
and
fidivl
mov
dec
jbe
sbb
push
lea
sbb
push
push
mov
xchg
inc
jbe
push
add
dec
jge
cs
hlt
inc
mov
xor
jbe
jp
shl
call
pop
mov
negl
jecxz
mov
pushf
negb
sti
movsb
fstpt
mov
adc
push
mov
int
mov
cs
jg
sbb
insl
mov
test
sub
push
mov
jmp
test
std
gs
xchg
aas
inc
int
sahf
sti
shrb
pop
xlat
cld
adc
inc
pop
insb
fbld
lcall
cmp
and
aas
dec
test
test
test
jo
mov
cs
mov
ss
mov
xchg
jmp
test
loopne
pop
ljmp
jnp
addl
jge
pushl
fidivrl
cltd
pushf
mov
ret
or
ds
sub
mov
data16
arpl
or
push
in
jecxz
mov
nop
outsl
cmp
lahf
xchg
test
push
push
jnp
hlt
adc
xchg
push
aam
popa
or
ja
dec
sbb
mov
in
sahf
jg
xlat
inc
sbb
aaa
arpl
sbb
jl
sarb
pop
imul
and
push
dec
negl
mov
insb
add
ss
std
ficomps
adc
clc
xchg
loopne
fiadds
adc
sub
dec
and
cmpl
faddp
shlb
cmovns
or
mov
sub
sbb
push
push
fimuls
das
add
inc
aad
faddl
push
dec
dec
mov
leave
jmp
adc
inc
lods
and
adc
aaa
inc
clc
mov
push
pop
cmp
shrl
in
xchg
xor
pop
sub
repz
pop
loopne
xor
dec
inc
inc
mov
in
push
xchg
inc
out
lcall
nop
xor
scas
outsl
mov
ja
je
fs
fcompl
adc
adc
les
fnstenv
xlat
jne
lds
push
mov
mov
call
pop
and
mov
scas
les
xchg
sub
and
mov
int
fistpl
dec
pop
push
push
and
push
rcr
or
cmp
xor
adc
mov
ficomps
and
lea
stos
scas
add
int3
repnz
in
leave
xchg
arpl
stc
inc
in
mov
sub
dec
insb
cltd
mov
mov
imul
aaa
dec
notl
in
sbb
daa
cs
mov
cmp
andb
cmc
or
test
out
push
xor
stc
add
insl
rorl
ret
js
dec
sbb
rcrb
mov
and
and
cmp
xchg
mov
push
and
mov
dec
hlt
mov
add
mov
mov
xor
dec
jnp
into
mov
cmpsl
popf
jle
mov
mov
push
pop
arpl
fidivrl
addr16
mov
mov
inc
rolb
loop
jge
iret
ss
sbb
in
in
cmp
mov
inc
pop
pusha
add
xchg
sub
mov
in
fs
aad
movsl
in
fstpt
cld
jb
movsb
pop
xchg
lret
rorl
fisttpll
imul
cmpsl
push
or
popf
and
xchg
xlat
dec
mov
dec
sub
xor
or
es
loope
inc
add
xor
jns
outsb
mov
aad
insl
and
sbb
ss
std
ret
leave
rcll
leave
mov
mov
mov
fwait
xor
daa
std
jle
repz
push
enter
ret
add
jp
mov
icebp
leave
sbb
jo
jmp
jp
rorb
fsubrl
adc
and
idivb
cmp
pop
mov
scas
mov
in
dec
adc
or
pop
movsb
cmp
pop
std
pusha
loop
xor
xor
arpl
jge
cmp
test
dec
mov
add
pop
test
adc
jmp
or
mov
sbb
xchg
cmpl
xchg
in
sarb
push
push
aas
notl
enter
push
sbb
in
dec
int3
sbb
and
test
scas
sub
pusha
in
and
incl
xchg
daa
jo
inc
xchg
push
icebp
iret
add
addr16
jno
movsl
gs
pop
mov
xorl
into
cmp
call
ret
adc
push
inc
pop
fstps
rorl
rolb
outsl
xlat
cmp
add
or
lahf
sarl
jecxz
iret
push
cltd
mov
lock
jge
stos
ret
popf
pop
ja
mov
xchg
add
test
mov
dec
out
sub
and
push
imul
and
stos
sub
ss
pop
addr16
or
push
or
test
add
inc
mov
sbb
mov
cmp
adc
sbb
inc
movsl
cmc
fstpt
leave
das
lea
inc
out
mov
ret
xchg
push
test
jecxz
lods
not
jmp
dec
shrl
fistps
mov
cmp
lret
movsb
and
out
push
aad
das
or
xchg
dec
sub
notl
pop
cmp
mov
cmovbe
mov
xchg
push
sarb
fstps
jns
outsb
add
mov
sub
inc
lods
lods
or
roll
xchg
xor
xchg
lods
pop
mov
nop
cmp
mov
pusha
out
addr16
insl
xchg
or
sub
dec
iret
leave
jbe
das
enter
push
inc
mov
movsl
pop
pusha
adc
gs
andl
pop
dec
jno
mov
in
loopne
out
rcll
sub
push
pop
sbb
xlat
std
gs
lock
aam
shlb
dec
insb
lahf
int3
sarb
int3
jno
adc
cwtl
inc
add
push
jp
in
incb
icebp
fsub
jmp
dec
inc
dec
fs
fldt
push
stc
mov
lret
fs
inc
jle
es
xlat
inc
aad
xor
hlt
push
mov
addb
mov
dec
das
scas
aam
test
ja
out
loop
bound
fnstsw
lods
frstor
xor
call
mov
sbb
ficomps
xchg
push
inc
mov
push
pop
sub
out
popf
dec
push
push
shrb
xchg
add
sbb
push
inc
sbb
pop
pop
jb
sbb
pop
leave
jecxz
mov
ja
sbb
ret
xchg
fcomps
push
rcrl
pop
jns
nop
or
jnp
inc
mov
inc
adc
test
mov
test
cmp
arpl
nop
add
fcomi
jp
iret
pushl
iret
jbe
shrl
ret
jo
negl
lds
fcomp
mov
imul
jmp
add
sbb
sti
rep
loop
xor
inc
xchg
lret
add
inc
cmp
fldcw
dec
pop
cli
nop
orb
jle
cmpsb
mov
pop
mov
cs
daa
and
icebp
movsl
sbb
and
cmp
push
pop
xchg
and
int
fwait
je
sub
lcall
arpl
and
sbb
aas
jmp
sti
sub
loopne
lock
repz
out
in
enter
insb
ret
pop
int3
mov
fildll
and
bsr
dec
aas
push
fxam
mov
lea
aam
sub
pop
pop
mov
mov
int3
and
ds
es
repnz
or
fsub
lahf
loop
xchg
mov
and
icebp
test
loop
rol
sbbl
push
jne
icebp
les
mov
stc
dec
mov
dec
xchg
xor
adc
mov
into
sbbb
in
dec
mov
mov
loop
jnp
cmp
fisubrs
mov
in
sti
cld
jbe
hlt
inc
xor
mov
mov
stc
sbb
adc
daa
adc
je
push
icebp
testb
outsb
dec
mov
out
mov
movsl
ret
lahf
sbb
push
mov
push
cmc
shrl
das
cwtl
xor
xchg
imulb
xchg
mov
pusha
push
jns
mov
leave
js
sub
xor
adc
lods
xor
in
dec
mov
pop
cmc
mov
xchg
jge
sbb
pop
push
movsb
ljmp
jno
push
scas
push
adc
bound
stc
lret
clc
xor
mov
jl
sahf
mov
cli
mov
cmp
mov
cmp
add
and
and
test
shlb
sbb
std
adc
imul
add
test
mov
sbb
sbb
repnz
adc
xchg
add
std
jmp
xchg
enter
sub
clc
push
add
sub
sub
lret
shrb
jp
inc
fnstcw
sub
add
jle
push
adc
jg
and
iret
mov
icebp
jl
adc
popf
jns
bound
or
test
ret
inc
pavgw
cmp
lahf
dec
or
scas
xor
and
or
jg
mov
jle
push
stc
adc
lcall
jge
fstl
add
mov
ss
dec
or
into
pop
push
in
sub
dec
mov
jmp
jecxz
jnp
jmp
stos
dec
jl
stos
jmp
int3
fldenv
mov
add
testb
sbb
cmpps
pop
test
orb
nop
sbb
mov
xor
ljmp
in
sti
inc
and
leave
xor
rcrb
dec
mov
jl
subb
clc
dec
mov
cmp
ss
mov
jbe
adc
rorl
sub
and
arpl
cmp
test
xchg
xchg
les
iret
xchg
pop
imul
mov
add
ret
xchg
stos
rorb
jmp
mov
and
sahf
pop
or
fidivrs
jecxz
shl
fisttpll
es
push
inc
les
out
xlat
insl
aas
sbb
adc
mov
sar
fcoml
xor
or
mov
outsb
test
inc
mov
negb
xor
mov
mov
adc
cmp
xor
mov
pop
lea
repnz
and
out
lods
and
push
popa
pop
fisubrl
sbb
inc
or
jb
mov
cmp
negl
ds
call
test
mov
mov
xlat
inc
xor
xor
loopne
cli
xchg
jnp
scas
pop
leave
repnz
lret
stc
insl
les
dec
sub
mov
pusha
xchg
mov
sbb
push
das
or
adc
fnsetpm(287
adc
dec
jl
pop
dec
aas
mov
mov
arpl
aas
jge
fsubs
rep
xchg
scas
inc
das
fistps
mov
scas
leave
loop
mov
lea
test
dec
inc
inc
cmc
sti
cmpsl
xor
sti
mov
add
rclb
pop
stc
das
jb
lcall
jmp
xchg
lock
and
mov
jge
fldl
and
mov
xchg
xchg
add
cmpsl
out
es
mov
jmp
sub
mull
mov
dec
cmp
sbb
out
pop
push
push
std
lahf
pop
addr16
add
shlb
pushf
mov
pop
sub
jmp
mov
out
int3
xchg
adc
shrb
push
loopne
call
push
popa
adc
mov
xor
fisubrs
cmp
push
aas
mov
call
shlb
in
jne
insl
lods
sbb
cmc
adc
std
xchg
lods
mov
ret
jmp
mov
cmp
fstpt
mov
push
imul
add
push
cmp
aad
fcompl
js
enter
xchg
imul
fwait
mov
xor
jnp
fnsave
out
xor
add
in
xor
jne
dec
xchg
ja
push
test
mov
loopne
daa
and
std
jge
mov
fmulp
pop
xchg
mov
mov
xor
test
popf
cmp
iret
cmc
shrl
sub
shll
inc
jnp
xchg
enter
std
push
fmul
cld
add
inc
jle
movl
xor
nop
xor
jae
mov
imul
sbb
xor
or
outsl
mov
push
sbb
rcrb
cmc
ret
mov
inc
mov
fcomip
mov
rcll
and
notb
mov
xchg
shll
insb
lahf
adc
inc
xor
mov
mov
into
cld
sbb
or
pop
adc
mov
push
push
setno
test
jle
sarl
sbb
mov
or
lahf
pusha
pcmpgtd
testb
mov
lods
mov
in
xor
into
andl
sbb
lock
mov
jecxz
mov
and
mov
hlt
and
mov
mov
jb
mov
push
in
shll
add
fdivl
ja
jb
jne
divb
pop
enter
xchg
int3
add
mov
cmpsb
mov
or
pushf
push
cwtl
add
add
dec
mov
adc
adc
bound
xorl
ja
xor
sbb
xchg
mov
mov
cmp
cmpsl
xlat
adc
inc
sbb
fildll
dec
leave
aad
out
sbb
cmpsb
iret
jb
mov
adc
lea
pop
sub
push
test
dec
lahf
add
mov
pop
jle
push
and
dec
js
mov
fwait
mov
pop
mov
cmp
xchg
pop
rcrb
call
imul
and
adc
xor
sbb
push
pop
xor
push
adc
xor
mov
push
sti
xchg
pop
inc
xchg
pop
add
mov
popf
aam
test
es
jnp
sub
xchg
mov
xor
push
call
mov
test
shl
jo
push
icebp
dec
add
lods
cmpb
jbe
and
fs
or
pop
ljmp
je
jnp
cmpsb
and
pusha
mov
sti
shl
mov
or
or
loope
lods
lahf
dec
xlat
add
sarl
das
mov
lock
es
mov
outsb
test
sub
add
ret
lcall
test
xchg
mov
iret
fistpll
les
lret
iret
lcall
sbb
test
test
sub
sbb
mov
dec
dec
test
in
mov
mov
push
std
rcrb
jbe
push
xchg
mov
push
out
adc
and
dec
outsl
repnz
xor
or
mov
adc
leave
mov
into
adc
outsb
or
mov
arpl
out
mov
mov
pop
add
cmp
ds
dec
adc
sbb
subl
sub
sub
cmp
push
pop
das
pop
sub
daa
cmp
je
fs
xchg
cmp
xor
popl
fisttpll
bound
mov
jo
shlb
push
addr16
arpl
push
movsb
into
leave
pusha
mov
les
cmp
fisubs
div
sub
sbb
jecxz
pop
rolb
xchg
sbb
sbb
dec
sti
xor
cltd
mov
in
mov
pop
jnp
xchg
mov
dec
fistl
push
add
mov
mov
stos
xor
out
sub
movsb
and
adc
bound
shll
dec
shll
and
cmp
mov
cmp
push
sbb
mov
ret
push
or
dec
in
cmp
test
dec
aam
ds
inc
in
adcl
xchg
cmp
jmp
push
pop
test
jne
loope
rcrb
fisubrl
adc
or
fmuls
rcrl
sahf
sub
bound
fsubr
cmp
mov
shl
sbb
adc
sti
jmp
gs
jnp
mov
inc
hlt
jmp
hlt
jp
and
sbb
push
xchg
and
outsb
repnz
pusha
scas
repnz
push
sub
dec
imul
inc
xchg
pushf
adcl
cmpsb
icebp
addr16
pop
insb
fadds
loopne
lods
aas
cmpl
std
dec
sub
add
push
mov
add
leave
fistl
lret
inc
push
or
xchg
sub
pop
jae
xchg
sbb
lcall
or
jo
jb
sarb
cmp
lret
stos
sbb
bound
cmp
and
jg
xlat
jbe
inc
or
and
jge
cmp
inc
xchg
jl
xor
out
fildll
ss
enter
in
aaa
in
ret
aas
jb
xorl
sti
stos
mov
push
or
cmp
sbb
xor
push
or
dec
aad
ja
aad
roll
sbb
push
les
mov
cmp
mov
arpl
inc
ficoml
xor
push
jl
jecxz
popa
mov
add
insl
stos
add
bound
add
out
enter
ror
xchg
pop
loope
sub
jmp
popf
shll
outsl
stc
jmp
imul
shrl
aas
scas
negl
test
mov
out
iret
or
inc
push
test
ds
in
adcb
stos
push
in
add
out
fnsave
xchg
rcll
lock
out
xchg
lret
in
clc
imul
into
sub
sahf
iret
mov
les
sub
popa
pop
ja
into
arpl
fs
mov
cmp
push
mov
into
pop
inc
jb
lds
cmp
pop
pusha
add
das
add
mov
push
inc
push
insl
mov
xorl
mov
sub
scas
stos
jp
mov
or
or
pop
fsubl
push
pop
mov
cmpsb
cmp
ficoms
sbb
arpl
ds
leave
jae
or
jno
imul
aad
sbb
xor
lock
xlat
mov
dec
bound
sub
iret
aas
mov
ljmp
cwtl
mov
jnp
mov
repz
das
jns
sub
outsl
jns
int
dec
pop
push
data16
mov
adc
xor
mov
out
imul
ljmp
das
pop
jp
inc
dec
cmp
cs
arpl
and
xchg
xor
arpl
mov
fimuls
testl
orb
test
push
arpl
mov
call
mov
pushf
call
js
adc
aad
out
or
mov
cli
aad
dec
call
repz
xor
inc
cmp
les
xchg
lcall
fisttpl
push
sbb
outsl
cli
jne
aad
jge
rorl
pop
arpl
pop
popf
mov
sub
push
call
and
pop
push
mov
int
clc
inc
inc
shll
xchg
pusha
pop
xchg
out
ljmp
pop
jg
adc
fidivs
les
mov
nop
fstl
ret
imul
mov
cmpsb
and
sar
and
rol
push
sbb
mov
ljmp
sub
mov
cwtl
pop
mov
dec
sub
scas
loope
mov
mov
test
adc
out
adc
mov
and
push
jbe
mov
cmp
adc
pop
ljmp
clc
leave
sarl
pop
arpl
or
popa
das
lcall
lds
pop
arpl
pusha
push
mov
out
jp
out
aas
js
lahf
pop
cld
lret
fwait
dec
xor
pop
or
mov
imul
loopne
or
mov
or
xchg
xchg
sbb
es
jp
cld
dec
movsb
arpl
sbb
ret
mov
sbb
sbb
xchg
rcr
nop
lods
pop
divl
sar
rorl
packuswb
or
fdivl
push
pop
ret
adc
push
xor
lock
sbb
cs
leave
jl
add
jb
push
fadd
or
lret
xchg
xorb
push
cli
ds
fldl
out
mov
ss
add
inc
shll
enter
adc
movb
cmp
stos
jns
int
push
out
daa
dec
mov
mov
mov
sub
shlb
out
cld
out
outsl
rcll
mov
dec
bound
jmp
jg
jo
push
int3
mov
cs
frstor
push
scas
cmp
mov
sbb
inc
xchg
cli
adc
pop
fbld
in
adc
leave
push
shrb
outsl
sub
adc
cmp
stos
nop
repz
dec
push
jae
je
push
pop
aam
les
pop
sarl
aad
dec
popf
push
loopne
lods
stc
int3
push
push
stos
push
out
add
push
test
dec
mov
sbb
movsb
lods
xlat
fsubs
jno
cmp
in
inc
je
out
stos
nop
cld
xchg
push
lods
bound
jae
divl
gs
mov
sbb
jcxz
ds
aas
cmc
test
dec
dec
and
and
lret
jp
sub
dec
mov
dec
mov
movsl
inc
jmp
inc
xchg
movl
loopne
or
test
mov
stc
ja
cli
aaa
call
sti
xlat
pop
into
pop
pop
xchg
push
adc
or
std
cmp
jmp
out
pop
popa
sti
lods
scas
lret
addr16
xor
push
xor
inc
clc
in
es
sti
insb
mov
arpl
cmp
sti
push
push
stos
mov
ja
cmc
daa
ret
movsl
ret
adc
sub
dec
adc
insb
fbstp
test
xor
cmpsb
leave
rorl
cmp
nop
or
in
popf
aaa
sahf
push
xlat
mov
and
dec
pop
hlt
imul
outsl
sub
lock
xchg
loopne
fldenv
jae
or
lahf
mov
add
pop
xor
fstpt
jno
and
data16
jmp
cmc
jae
add
fmull
in
cmpsb
xor
push
push
lahf
add
dec
and
mov
in
insl
lea
rorl
mov
lock
stc
xchg
dec
ljmp
and
sbb
jne
pop
pop
fcmovnb
lret
xchg
mov
mov
adc
xor
xor
daa
jl
mov
fldt
add
xor
jle
scas
repz
popa
cwtl
mov
push
push
mov
dec
les
int3
lock
into
mov
jp
lahf
jp
add
push
add
subl
and
cmp
push
push
sar
incl
xchg
stos
dec
dec
xor
daa
cmp
fidivrl
lret
lods
scas
mov
inc
mov
jle
cmp
xor
subb
nop
ficomps
faddl
das
loopne,pt
in
pop
fdivp
xor
xchg
rorb
push
pop
and
bound
dec
pop
jnp
into
sub
loopne
fwait
inc
sti
sbb
jne
jnp
test
mov
push
dec
stos
push
jg
icebp
pop
lds
cmc
jo
rclb
cmp
test
fimuls
notb
jmp
fdivr
sub
mov
scas
pop
xor
or
inc
push
js
pop
dec
jno
int3
bound
xor
popa
movsb
or
inc
jns
inc
out
sbb
jg
lods
push
loopne
xchg
je
jne
xor
flds
rclb
inc
out
mov
pushl
cmp
add
std
shl
sarl
lods
arpl
outsb
and
pushf
adc
je
pop
repnz
adc
stos
int
sarl
test
inc
ret
sbb
jbe
jg
xchg
enter
adc
fdiv
inc
ret
enter
addr16
insl
cli
mov
jns
dec
shl
imul
addl
cmp
fsubrl
outsl
xlat
cs
cmp
inc
mov
repnz
jp
testb
mov
or
mov
pop
pop
xchg
xchg
cld
call
insl
xchg
shll
movsb
xchg
sbb
shlb
adc
xchg
jo
test
scas
sti
ss
test
int
xor
pop
pop
mov
mov
mov
push
push
and
lcall
sahf
adc
adc
cwtl
rcrl
addr16
test
pop
mov
dec
lock
fdivr
fs
mov
lret
movsl
pushl
dec
int3
ficoms
jns
shlb
insb
enter
inc
movsl
fbstp
pop
mov
movsl
mov
inc
push
inc
inc
xorl
fisubrl
js
fiadds
inc
add
lock
pop
mov
sbb
inc
and
je
mov
jmp
aaa
add
push
cmp
push
mov
pop
xor
cmp
sbb
nop
das
rorl
stc
mov
and
cs
push
jnp
aam
sub
inc
xchg
test
pop
cmp
outsl
icebp
fimull
pop
in
add
out
xchg
iret
shr
mov
or
mov
fmull
push
daa
and
mov
jae
fs
pop
rolb
pop
jge
in
cmp
xchg
into
sbbl
cmp
mov
mov
cmpsb
push
enter
repz
jg
int3
pop
ss
jb
mov
outsl
xchg
xchg
xchg
cmp
push
mov
and
shrb
inc
mov
mov
mov
xchg
mov
call
nop
jmp
push
enter
cmc
mov
push
ja
jno
int
addr16
or
lahf
mov
mov
adc
ljmp
lcall
mov
std
mov
add
ret
and
les
jno
iret
pop
cli
test
movsl
test
mov
hlt
subb
into
and
or
jb
loope
sub
cmpl
pop
popa
xchg
sub
test
mov
xchg
fildl
inc
stc
mov
repz
data16
add
gs
bound
arpl
pusha
lods
clc
imul
arpl
icebp
push
in
jae
or
stos
xor
dec
mulps
mov
pop
pop
ret
insb
lock
mov
lea
std
aas
mov
ss
cmc
cli
lds
gs
jl
and
xchg
ljmp
test
push
pushfw
mov
daa
adc
div
dec
xchg
or
add
out
aaa
sbb
cwtl
or
xchg
mov
loop,pt
cmp
adc
repnz
movsb
xrelease
sbb
cmpsl
incb
inc
mov
jne
xchg
into
adc
or
pop
jmp
fcoml
call
out
mov
daa
orl
inc
adc
sti
je
sub
pop
loope
xor
add
int3
pusha
pop
mov
mov
mov
sbb
push
mov
cmpb
xor
dec
pop
push
sbbl
and
imul
loope
and
or
cs
mov
sub
add
scas
in
or
cmp
cmp
jo
adc
mov
inc
xchg
in
lods
sbb
dec
aad
jl
or
shr
leave
das
inc
push
mov
test
loop
pop
ret
sbbl
clc
add
pop
fnsave
mov
out
sbb
mov
in
int
jle
scas
push
ret
mov
ret
sahf
xor
bnd
or
pusha
dec
pop
push
push
ret
pusha
arpl
xor
ja
pop
imul
in
stos
and
lret
cmc
sub
or
sbb
or
xlat
pop
jne
fcomps
leave
jp
sahf
outsb
jecxz
lods
jg
ret
movsl
movsl
mov
or
xor
pop
fldl
fs
mov
jmp
int
mov
ja
mov
testb
das
bound
call
lea
cmp
lahf
push
jecxz
mov
mov
dec
imul
andb
jp
imul
xchg
and
lahf
push
aam
jbe
lahf
jmp
or
xchg
lods
mov
xorl
repz
jp
int3
add
inc
dec
andb
pop
push
out
add
xor
pop
lret
and
nop
jp
out
mov
cmpsb
add
mov
add
push
inc
add
repz
push
int3
leave
push
adc
cmp
dec
push
nop
stc
push
mov
push
xor
test
lret
insb
into
int3
adc
pop
fimuls
push
push
test
xor
sub
pop
or
mov
mov
jbe
pop
out
hlt
sub
xchg
les
call
add
fbld
leave
sahf
repnz
mov
lods
fistl
jno
lds
repnz
inc
sub
iret
adc
push
mov
xor
scas
or
mov
daa
pop
frstor
pop
cltd
cmp
dec
xor
insb
popf
inc
xor
les
add
fldl
mov
lret
cld
hlt
and
lods
cmc
mov
xor
cmp
imul
lcall
sub
jmp
cmp
pop
lea
xchg
fcomi
ds
jp
cld
sub
adc
cmpl
jl
pop
pop
jg
mov
dec
clc
das
cwtl
das
adc
mov
cmc
push
add
fucomi
ret
pop
pop
ret
mov
adc
inc
mov
xchg
pop
xchg
in
push
shlb
jmp
stc
test
sub
cmp
sbb
sbb
ja
sub
shll
pop
in
sbb
cmpsb
push
out
sub
out
sub
gs
out
xchg
addr16
lods
ja
std
and
mov
notb
jp
in
lcall
adc
push
mov
mov
subl
push
adc
and
pusha
push
nop
aad
ljmp
and
jl
jne
cmp
cmp
out
imul
cli
xlat
test
daa
xchg
out
mov
mov
pop
jne
scas
xchg
jne
loopne
xor
sub
or
cld
dec
mov
dec
mov
movsl
inc
je
insl
dec
dec
mov
scas
sub
adc
sub
lahf
call
inc
cmc
sub
or
jmp
pop
gs
daa
sahf
cwtl
or
mov
inc
stos
xchg
cwtl
mov
int
out
in
and
idiv
icebp
ljmp
les
mov
or
add
inc
fdivrl
cmp
push
pusha
mov
or
cld
mov
inc
cwtl
pop
cwtl
notl
mov
dec
or
ret
push
push
iret
les
iret
and
sahf
mov
xchg
add
mov
rorb
lock
mov
xor
mov
cmpsb
fldcw
enter
xchg
jmp
cmpsl
xchg
rorl
and
rolb
pop
pop
lret
adc
xor
icebp
adc
sbb
cmp
pop
mov
xchg
sub
jp
stos
mov
stos
movb
nop
or
imul
frstor
imul
xor
pop
ds
cmp
mov
jbe
sub
ret
into
loop
or
mov
sbb
xchg
pop
xchg
push
jb
test
nop
std
or
in
sbb
pop
test
xchg
jl
rorb
addr16
adcl
sub
pop
hlt
sub
adc
push
nopl
adc
cmpsl
ret
out
mov
jae
inc
mov
addr16
jns
mov
xor
shll
or
push
jmp
negl
idivl
jo
push
arpl
or
push
inc
mov
inc
xchg
adc
scas
pop
pop
lods
mov
add
aad
dec
test
test
xchg
sbb
mov
pop
inc
aaa
dec
scas
jne
adc
xchg
xchg
rcrl
mov
xor
and
xor
mov
pop
bnd
cmc
test
pop
lret
mov
adc
cmpsl
push
xlat
or
cmp
js
add
dec
rcl
popa
iret
jmp
ficompl
mov
lahf
or
pop
pop
jnp
lods
mov
or
pop
lret
mov
lods
jge
call
cs
xchg
add
int
cmp
fildll
int3
push
xchg
mov
add
loop
push
dec
lods
das
jmp
mov
insb
daa
mov
in
add
pop
and
test
call
adc
push
addr16
add
cmpsb
dec
adc
inc
in
jno
and
cltd
pop
and
cli
xchg
sbb
subb
in
les
xchg
pop
xor
and
fimull
dec
mov
and
dec
fisubl
push
jae
inc
xor
in
loopne
in
sahf
xchg
shl
push
movsl
adc
sbb
scas
adc
pop
xchg
jae
loope
das
and
in
add
push
pop
jge
pop
aaa
mov
movsb
test
insb
push
dec
jne
push
sbb
test
insb
shlb
test
test
push
shrl
cmc
or
call
mov
lahf
aas
int3
into
pop
ret
cli
and
aas
repz
lret
inc
std
mov
int3
sub
push
adc
cmp
clc
xchg
call
push
lret
js
mov
cmp
push
lea
adc
or
imul
fs
pop
lods
xchg
mov
pop
dec
and
or
push
outsb
push
xor
arpl
outsb
repnz
xchg
push
jae
cmp
stc
add
arpl
loopne
pop
filds
mov
outsb
xor
mov
push
xchg
and
dec
fiadds
dec
ljmp
xchg
insl
inc
xchg
xchg
shll
bound
filds
mov
and
mov
sub
or
mov
mov
cmp
xor
mov
or
sbb
pop
jecxz
inc
pop
jmp
mov
add
or
lret
mov
out
lret
push
fs
imul
inc
daa
xchg
inc
xchg
inc
cmpsb
xorl
lea
notl
into
rcrl
stc
xor
pop
sahf
or
and
lea
test
mov
jo
mov
ret
push
out
das
xchg
cli
pusha
stos
mov
out
cmp
mov
sub
ja
call
repz
hlt
xchg
scas
mov
sub
jo
ja
imul
enter
out
adc
push
or
mov
out
shrl
or
call
fadds
push
sbb
imul
mov
xchg
pusha
add
filds
inc
jmp
movsb
es
insb
jbe
push
dec
jecxz
xorb
or
push
stos
das
mov
jnp
rcrl
mov
loope
out
pop
push
stos
push
xchg
or
out
cs
fnstenv
mov
in
out
mov
outsb
dec
or
pop
daa
mov
shlb
dec
cmp
mov
stos
aad
dec
xor
sub
outsb
and
addb
test
aas
lret
xchg
pop
lock
inc
mov
in
xor
mov
adc
repnz
mov
mov
xorl
mov
in
mov
pop
imul
xchg
sub
leave
mov
jmp
sbb
cli
ds
add
sbbl
das
mov
cmp
sbb
push
lret
ret
in
data16
rcrb
jge
dec
leave
mov
ss
call
test
out
pop
jne
cmp
inc
pop
imul
mov
mov
movsb
fidivrl
push
jge
sti
int3
imulb
and
mov
ss
and
and
les
mov
sbb
pop
ljmp
cmpsl
jecxz
iret
fdivrl
cmp
jbe
sbb
inc
cmpsb
std
pop
mov
push
out
or
sub
stos
rcll
fdivl
push
add
in
repnz
test
jnp
fwait
leave
jmp
fidivl
or
mov
push
sub
mov
rcll
adc
sbb
push
rcrb
push
sbb
xchg
pop
cltd
mov
sar
and
into
cmp
jae
xchg
mov
jno
addr16
inc
mov
push
out
inc
push
stos
xchg
jmp
divl
sbb
push
pop
aam
loopne
pop
mov
hlt
aas
rcr
xor
bound
lret
movsb
fidivrs
in
push
push
mov
dec
cmp
adc
mov
rcll
inc
lds
dec
mov
jmp
clc
fnstenv
insl
xlat
int
iret
cld
jge
mov
jl
xchg
daa
ljmp
push
loope
push
cmp
movsb
mov
cmp
mov
push
add
dec
popf
push
xor
sbb
cmc
movsl
popf
test
aam
xchg
loope
jne
mov
add
dec
lret
test
mov
rcrl
imul
sub
ss
dec
scas
lea
add
and
mov
cmp
mov
mov
sub
es
jmp
jl
jbe
xor
imul
lahf
mov
add
or
jmp
adc
or
addr16
test
outsb
test
xchg
jbe
jge
mov
in
jmp
test
popf
push
mov
pop
or
lock
xlat
sti
subb
loopne
imul
movsl
addb
pop
xchg
xlat
pop
dec
pop
loop
sub
pop
pop
shrb
test
fldt
out
out
dec
ds
inc
mov
xor
mov
xchg
add
clc
scas
lea
not
stos
aas
loope
inc
outsl
push
lock
jae
push
shll
mov
inc
lcall
scas
scas
sbb
and
xchg
scas
pop
pop
jne
and
movsb
add
insb
adc
loope
icebp
add
jge
loop
adc
xor
mov
jge
imul
adc
sbb
xchg
mov
push
cwtl
and
cmp
imul
xchg
adc
sub
out
sub
sub
inc
ja
sub
dec
ret
cltd
sub
iret
jl
idivb
fimull
dec
add
xor
or
mov
dec
mov
push
lahf
xor
inc
pusha
pusha
std
and
aam
nop
mov
cmp
push
in
orl
jne
push
sbb
mov
pusha
mov
int
test
adc
mov
adc
xor
push
mov
cld
movsb
shrl
add
out
jb
mov
stc
xor
pop
pop
pop
das
xchg
mov
xor
clc
pop
push
push
gs
out
add
jl
test
cmpsl
cmp
jb
pop
int3
inc
addr16
xor
lods
push
xor
nop
pcmpeqw
adc
subl
out
shrl
stos
das
pop
mov
pop
call
xor
jecxz
out
int3
loopne
pop
lret
loope
mov
imul
ret
imul
sbb
sub
adc
loop
in
aas
fcomp
roll
pusha
leave
jbe
loope
pop
or
enter
or
mov
es
push
aas
push
sahf
xchg
sbb
inc
ja
fimull
js
dec
sbb
or
cmp
push
cmpsb
mov
xlat
inc
out
sahf
mov
mov
lahf
pop
and
pop
cmp
cmp
lds
orl
or
pop
and
mov
scas
cs
xor
lcall
dec
insb
mov
jle
push
adcb
jmp
mov
inc
or
ret
cmc
jle
xor
push
inc
push
mov
rcrb
add
fwait
dec
sub
cs
mov
xchg
leave
std
test
cld
ret
dec
btr
mov
je
aas
mov
daa
xlat
push
fwait
mov
fwait
pushf
orl
incl
ljmp
repz
cwtl
lods
cmp
xchg
lret
nop
xchg
pop
hlt
mov
insl
ret
out
test
clc
or
in
mov
sub
pop
ret
cmp
sahf
andl
popa
jno
sbb
int3
push
mov
xor
cmpb
xor
insl
or
fwait
jb
dec
xchg
repnz
insl
stc
fldl
jbe
insl
stos
cld
mov
ja
loope
dec
jno
xchg
inc
iret
andb
loop
xchg
gs
mov
in
or
dec
push
aas
and
mov
mov
or
cmp
sub
dec
sbb
or
add
mov
pusha
int3
push
add
pop
xchg
adc
jno
ljmp
mov
sub
mov
or
mov
add
in
adc
add
mov
fnstcw
mov
pop
les
lock
fstpl
xlat
insl
movsl
mov
cld
jnp
and
popa
pop
in
mov
mov
xor
xchg
imul
cmp
sub
std
sbb
jnp
sbb
mov
mov
inc
test
pop
cld
cmp
out
xor
xchg
arpl
mov
jne,pn
mov
xor
sbb
cmp
daa
cltd
push
sub
mov
and
outsl
sub
pop
inc
pop
mov
aam
mov
inc
aas
call
inc
pop
into
cltd
mov
jl
xchg
fisubl
dec
aad
int
mov
das
add
pop
ds
jle
ds
xchg
add
repz
sbb
xor
mov
pop
cwtl
mov
movsb
jo
jecxz
mov
xor
push
xchg
mov
jp
fldl
call
nop
out
dec
loop
dec
clc
aad
out
rolb
fwait
mov
xor
jmp
jl
lret
out
xor
scas
popa
mov
enter
loopne
xchg
pop
jge
lcall
fnstsw
pop
popf
adc
jp
push
inc
test
push
xchg
inc
hlt
cmc
mov
push
andb
inc
fcmovu
add
das
pushf
and
jge
lock
push
inc
imull
scas
jecxz
adc
pusha
pop
and
pop
rcrl
inc
pop
xor
mov
xchg
sbb
fs
cmc
push
test
lcall
loop
clc
add
sti
enter
push
cmp
sahf
pop
ret
jnp
xchg
je
ret
add
cmp
push
lahf
int
out
pop
or
stos
lcall
xchg
test
in
and
push
gs
cmp
pop
insb
iret
lret
rcl
in
repnz
and
jmp
scas
add
fwait
test
inc
ret
fmull
fsubs
popf
add
das
pop
inc
das
inc
popa
fisttpl
int
jb
xor
xchg
out
inc
fidivl
jmp
ljmp
addb
jnp
or
jbe
mov
inc
and
out
mov
rolb
mov
ss
neg
test
les
jmp
push
fmuls
cmpb
xor
jbe
jae
cmp
int3
pushf
xchg
rcr
loope
dec
mov
cmp
mov
sahf
sbbb
mov
mov
fcomps
pop
or
loope
scas
insl
mov
adc
mov
std
adc
data16
addr16
and
pop
addl
fsubr
xorb
jecxz
fistpl
loope
std
in
pop
add
in
mov
dec
adc
xor
push
push
xchg
mov
xor
jnp
sbb
push
inc
std
dec
test
leave
sbb
popf
xlat
pop
adc
popf
sub
bound
or
xor
pop
out
xor
sub
add
dec
mov
push
imulb
adc
out
mov
aam
dec
in
cmpsl
sub
xchg
arpl
xchg
push
mov
int
sbb
leave
mov
std
mov
push
add
and
cmp
testb
push
lcall
lret
cmpsl
test
and
and
push
jbe
push
lcall
lahf
fs
sub
sti
js
repnz
or
cmp
xchg
pop
mov
je
mov
add
addr16
xchg
pop
lods
loop
cmp
and
int
push
jb
push
or
xchg
jmp
fstpt
or
mov
int
ror
sbbb
dec
mov
test
loope
mov
adc
dec
jecxz
xlat
stc
insl
push
mov
mov
mov
pop
mov
mov
ret
sub
in
shl
icebp
xor
imul
jne
jmp
cli
insl
or
mov
cmp
fidivl
cltd
out
gs
mov
or
xor
push
jge
into
scas
or
inc
sub
mov
push
add
cmc
ja
xor
push
mov
imul
shll
mov
cmp
jecxz
js
sub
ds
imul
lahf
push
pop
push
shll
test
cmc
sub
fwait
cmp
mov
cmpsb
lds
shl
les
pusha
rcl
mov
call
push
xchg
xlat
mov
rolb
roll
cld
xchg
jp
es
orl
push
mov
xor
jmp
mov
mov
inc
xor
fistl
fcmovb
push
mov
push
fisttpll
dec
or
dec
inc
clc
cmp
mov
ret
sbb
adc
mov
inc
jne
xchg
jp
mov
xor
pop
mov
cmc
incl
jae
aad
dec
mov
neg
lods
or
push
inc
repz
das
andb
orl
aas
insl
sub
add
mov
jp
push
jb
adc
ljmp
out
xor
iret
mov
sbb
sub
cltd
cmp
push
mov
iret
inc
push
out
mov
lods
rolb
push
or
inc
outsl
inc
in
out
pop
test
dec
cmpsb
add
adc
icebp
jl
dec
cmpsb
xor
jae
fbld
lods
mov
lcall
sub
test
cmp
cwtl
insl
mov
inc
or
sub
xchg
out
jle
mov
rorb
repz
sbb
jl
je
subl
mov
mov
lods
and
inc
adcb
mov
outsb
xlat
nop
jnp
pop
cmp
fists
mov
ret
xor
decl
roll
cwtl
roll
idivb
rorl
clc
stos
call
data16
jo
popa
push
adc
pushf
jecxz
lret
wbinvd
or
dec
cmp
ja
scas
mov
addb
mov
jp
scas
imul
gs
cmpsb
and
push
push
mov
adc
mov
pop
lret
sub
mov
movsl
and
rcll
cmp
lods
or
mov
inc
xchg
xor
adc
stc
cmpb
mov
mov
xchg
mov
or
out
mov
cmp
push
xchg
ret
pop
cli
pop
pusha
ljmp
xlat
in
outsb
loopne
stos
jbe
mov
xchg
sbb
xchg
jb
jns
inc
js
ds
dec
movsb
or
fistpll
pop
repnz
dec
stos
cmp
lds
mov
std
pop
xchg
clc
mov
ficoms
sbb
jmp
mov
xchg
jns
in
cmp
cmc
out
inc
add
ficomps
adc
mov
aad
fsts
mov
cmp
jle
insl
imull
inc
mov
arpl
call
fxtract
cmpsl
mov
imul
mov
pusha
cmpsl
popa
insl
push
cmc
or
dec
mov
push
repnz
add
rorb
mov
cmp
popf
outsl
fsubrs
mov
mov
sbb
adc
movsb
test
cli
cltd
rcl
sub
xchg
xor
sahf
sbb
pop
push
jno
pop
lret
inc
repz
int3
or
fs
imul
cmpsb
stos
and
test
fwait
cld
or
jns
insb
inc
mov
daa
xchg
aam
mov
dec
fisttpll
mov
adc
or
es
adc
push
arpl
icebp
sbb
xchg
lods
insl
mov
jno
cmp
imul
out
daa
adc
fadd
ret
lds
mov
es
jle
movsb
out
rcrl
test
prefetch
or
loopne
push
loopne
sbb
jo
fsub
inc
sub
mov
movsb
sbb
push
sub
cld
das
jb
movsl
rep
aaa
pop
sbb
cwtl
mov
xor
loop
dec
adc
sahf
mov
mov
sbbb
outsl
xor
shlb
sub
cwtl
sahf
sahf
mov
pushf
in
pop
push
fwait
xor
jp
dec
std
dec
adc
bound
dec
xor
jp
jge
fnstcw
into
lods
lahf
scas
inc
cmp
cmp
mov
add
stos
andl
in
dec
loop
xor
xlat
cmpsl
cmp
sub
xchg
aam
in
inc
inc
pop
add
fwait
mov
mov
loopne
rorl
icebp
cmp
and
inc
repnz
push
or
lds
insl
adc
jno
lret
inc
sub
in
xor
jg
popa
enter
scas
mov
mov
lret
jb
add
adc
ja
cs
icebp
xchg
xor
mov
es
stc
add
cmpsb
mov
dec
and
stc
adc
xchg
stos
rorb
scas
push
repnz
loopne
ffreep
mov
insl
lods
out
cmp
push
inc
and
sbb
jo
shrl
adc
mov
enter
jae
lock
test
push
lahf
iret
sbb
inc
pmulhuw
in
sub
jne
js
mov
orl
cmp
fcoms
sub
jg
mov
out
add
imul
jnp
clc
lcall
inc
sub
stos
sub
faddl
or
mov
loopne
push
dec
or
repnz
xor
inc
nop
je
shll
and
xchg
jmp
mov
enter
cmpl
adc
sahf
pop
mulb
xor
rcrl
jb
sub
or
pop
pop
outsb
mov
mov
popf
jno
in
sbb
jp
bound
rcr
adc
imul
or
dec
adc
sti
insb
call
push
fdivs
jp
out
add
jne
adc
pop
ret
or
inc
std
pop
push
pop
push
mov
lret
mov
push
cmpsb
mov
xchg
mov
fimull
push
or
mov
bound
push
out
add
or
shrb
mov
pop
mov
cmp
xchg
dec
arpl
pop
out
jmp
cmp
pusha
jnp
pushf
xchg
fstl
out
sbb
jns
sarl
test
pushf
test
lcall
push
pop
sub
leave
push
sahf
pusha
pop
push
cmp
or
fsts
pop
shrl
push
call
adc
dec
lretw
jae
sbb
ret
adc
ss
sub
add
rol
cbtw
jl
data16
or
adc
inc
in
cmp
sub
out
lcall
cmpsl
push
adc
sub
out
push
pop
popf
xor
mov
stos
mov
mov
fs
incb
iret
pushf
in
inc
es
dec
push
jo
pop
cmp
mov
xchg
mov
add
push
xor
movsl
pop
jb
sbb
sbb
rolb
pop
out
cli
jmp
aad
loope
inc
inc
push
mov
mov
or
iret
andb
push
sub
mov
sbb
insl
add
mov
sbb
fwait
adc
mov
dec
inc
insb
mov
jmp
call
pushf
mov
inc
inc
xlat
pop
test
xor
ljmp
or
gs
push
and
fildl
cltd
popf
sub
cmc
jae
jno
cmp
daa
sub
push
adc
adc
fdivrs
inc
lret
pop
mov
dec
mov
leave
xchg
in
ss
dec
cmp
sub
cmpsb
xchg
int3
rcr
cli
imul
mov
cmp
aad
mov
clc
and
xchg
jo
pop
arpl
adc
lahf
int
cld
xor
ss
movsb
lock
xchg
and
xor
add
cmpsb
dec
sub
cli
xor
mov
fildll
mov
imul
data16
xor
pop
repnz
add
push
jnp
sub
dec
pop
sbb
dec
xchg
aaa
xor
pop
pop
int3
aaa
cwtl
popa
push
xor
or
lcall
jecxz
subl
shll
arpl
and
jl
lods
fdivl
mov
dec
jnp
shlb
jl
movsl
repz
insl
arpl
and
cmp
enter
insb
mov
imul
dec
rcrb
inc
cmc
scas
mov
pop
mov
mov
mov
pop
pop
aam
in
ja
mov
pusha
popf
and
mov
jecxz
fwait
sub
stc
jmp
loopne
sbb
sub
xchg
dec
insl
sub
movsl
mov
rcll
jb,pt
and
mov
pop
and
cs
in
in
stos
movsl
or
stc
jne
and
je
adc
adcb
js
pop
cmp
in
divl
mov
cli
sub
pop
and
in
test
dec
mov
and
mov
xchg
in
mov
imul
xchg
mov
icebp
fyl2x
dec
sbb
or
outsb
push
std
pusha
add
xor
dec
ficoms
nop
adc
jae
cwtl
out
out
insb
pop
aad
jne
cmp
mov
pop
aam
mov
push
fidivl
ja
push
jbe
mov
mov
pusha
in
sbb
subl
fists
leave
pushf
stc
jle
mov
shll
inc
test
sub
pop
mov
lods
in
dec
adc
jecxz
xchg
notl
xor
sbb
addr16
mov
xchg
pop
sub
jno
rcr
inc
lcall
mov
add
and
pop
dec
xchg
jb
xchg
mov
adc
mov
nop
jecxz
std
addl
push
or
dec
pop
aad
push
lcall
icebp
std
ret
adc
push
pop
lea
in
jne
pusha
call
xor
jno
jae
xor
fidivs
stc
or
jecxz
cld
pop
mov
ret
jnp
mov
arpl
mov
sti
leave
add
and
push
cmpsl
call
dec
adc
dec
ja
ret
cli
dec
hlt
hlt
push
xor
std
ret
lock
pop
fnop
pop
stos
mov
inc
out
decw
lret
in
ret
aam
or
mov
xchg
shll
movsb
push
imul
mov
in
lods
arpl
ljmp
sbb
in
aaa
decb
std
ror
lods
into
iret
inc
sub
mov
jns
gs
lds
roll
loop
and
add
dec
dec
mov
aaa
aaa
rcl
pusha
shll
and
arpl
adc
fisttpll
cmp
inc
xor
dec
cmc
add
orb
pop
insb
loopne
pusha
movsl
sahf
mov
xor
mov
andb
push
rclb
xlat
cmc
loop
jb
lods
in
xor
pop
enter
xchg
flds
mov
cli
pop
mov
ljmp
mov
jb
pop
inc
mov
xchg
test
in
xchg
gs
xchg
mov
push
mov
cld
cld
stos
dec
sbb
lods
or
or
imul
mov
test
cmp
mov
cmp
sbbl
iret
iret
sub
adc
adc
jge
std
sbb
xor
jns
sub
ljmp
fnstsw
shrl
adc
lea
pop
mov
xchg
dec
insb
ss
sti
jb
pop
lods
scas
cmp
cmc
xlat
xchg
adc
inc
ret
push
xor
idivb
inc
mov
adc
or
sbb
and
clc
bound
xchg
and
pusha
pop
xor
outsb
push
loope
and
cmc
shl
rcrb
or
mov
js
lock
pop
ja
add
cli
lcall
push
repz
lock
cld
movsl
add
lret
outsb
push
pusha
mov
shr
iret
lret
lock
icebp
scas
pop
mov
mov
jecxz
pop
in
jno
adc
cwtl
insb
rcll
fcomps
sub
mov
dec
push
jb
popf
xchg
dec
mov
ret
enter
mov
pop
mov
nop
xchg
int3
sahf
fucomp
mov
hlt
lret
xor
div
push
inc
loopne
jb
pop
add
dec
out
fisttpl
and
lcall
dec
mov
push
cmpsb
inc
sub
test
xorl
les
xchg
inc
xlat
cltd
inc
pop
aam
leave
scas
fsubrl
mov
inc
sarl
sarl
lods
pop
xor
dec
push
test
jl
or
jno
dec
inc
ret
xchg
push
mov
out
mov
ret
pop
cmp
jb
and
aaa
faddl
jge
lret
scas
ljmp
inc
pop
add
mov
cld
lcall
add
and
in
sti
pop
stos
iret
mov
outsl
aam
and
insl
mov
mov
lods
jne
fisttpll
cs
add
ds
je
flds
sahf
mov
sbb
mov
jle
insb
cmp
xchg
xchg
add
ret
fldl
dec
xchg
loopne
mov
je
and
ret
notl
cmp
nop
add
insl
fwait
popa
test
pop
adc
push
inc
lds
mov
aad
shl
das
mov
sbb
sbb
lret
jmp
filds
scas
jg
dec
add
cld
or
push
xor
clc
xchg
in
rcrb
mov
add
jbe
cmp
test
inc
mov
mov
jle
cmp
cmp
faddp
fisttpl
in
xchg
adc
aam
pop
test
inc
dec
testl
dec
aas
push
fsubrp
popf
push
jmp
adc
out
outsb
xchg
scas
hlt
push
mov
push
mov
mov
xchg
mov
imul
mov
fcom
cmc
pushf
cli
arpl
pop
cmpsb
and
dec
xor
les
cmp
inc
js
adc
fcomps
sti
cmpsl
mov
jge
xorl
jecxz
jb
fs
mov
push
test
push
xchg
sbb
push
inc
dec
sub
rolb
js
jp
push
or
arpl
dec
inc
add
insl
jg
and
mov
fildl
sbb
xor
cmp
add
inc
popa
stc
pushf
mov
cmpsb
iret
xchg
lret
xor
mov
shl
sub
iret
adcb
xchg
push
aas
jne
adc
or
xchg
sbb
pop
xchg
mov
daa
mov
notb
sbb
adcl
push
insl
jle
outsb
mov
out
dec
xlat
ds
js
data16
sbb
add
mov
sub
jg
add
mov
jns
adc
pusha
sbb
inc
ret
xchg
mov
sub
fiaddl
pop
je
adc
adcb
xchg
adc
shlb
mov
mov
xor
cmp
pushf
setge
jne
mov
cltd
xorb
int3
add
shl
jmp
jge
push
jmp
test
andl
adc
fwait
dec
mov
testl
negb
js
push
inc
fisubl
or
inc
movsl
adc
push
or
fldl
cwtl
and
or
icebp
sbb
aad
scas
popf
mov
mov
frstor
and
cmp
mov
jno
and
nop
rcrl
sti
pop
lcall
fbstp
mov
or
push
clc
rorl
leave
sbb
ret
xchg
jns
lock
aas
jl
ljmp
or
lock
rolb
ror
adc
inc
add
pop
jp
rorb
adc
inc
jno
pop
jno
sub
popl
out
dec
mov
lea
mov
out
call
inc
cli
dec
mov
jle
ret
adc
dec
mov
movsl
repnz
push
mov
lds
rorl
sub
stc
cmp
sbb
push
push
mov
jg
mov
outsb
adc
adc
xchg
lods
imul
mov
mov
pop
ds
mov
arpl
das
jl
lcall
and
popa
cmpsl
xor
pop
stos
dec
push
jmp
dec
mov
incb
xor
lcall
lods
push
xchg
jecxz
mov
lcall
test
movsb
sti
and
movsl
in
imul
inc
les
xor
or
mov
jns
js
inc
lds
popf
or
or
js
or
insl
dec
lods
xor
mov
rolb
lock
bound
xchg
or
mov
notb
push
inc
inc
dec
jns
ja
js
in
jae
xchg
fs
inc
cmpsl
enter
repz
sbb
fldl
inc
icebp
movsl
cld
imul
jle
add
cltd
mov
jl
fucom
psllw
mov
cmp
inc
pop
ds
addb
mov
dec
cmp
imul
mov
test
jge
or
lods
jo
adc
scas
popa
or
cli
gs
arpl
ldmxcsr
popa
dec
ficoml
jecxz
xor
or
sarl
cld
xchg
mov
mov
repz
mov
mov
mov
ret
jae
out
in
mov
dec
or
stos
sbb
movsb
into
call
pop
mov
lret
loopne
arpl
cwtl
xchg
mov
mov
mov
push
rorb
call
fwait
imul
and
push
clc
push
pop
jmp
arpl
aad
clc
enter
mov
dec
pop
lcall
jl
dec
or
leave
mov
pop
out
adc
std
mov
divb
and
pop
int3
stc
xor
loopne
adc
push
dec
nop
fcmovb
pop
mov
out
out
mov
leave
cmp
push
test
testb
xchg
adc
dec
gs
gs
add
dec
icebp
sahf
repz
mov
je
mov
rclb
loop
insl
addr16
cmp
xor
sbb
inc
cmpb
loopne
xor
mov
enter
xor
out
popa
imul
inc
and
int
roll
xor
xor
push
imul
out
inc
add
scas
mov
mov
mov
jns
mov
cld
repz
cmp
cs
jmp
add
repnz
xchg
rol
xchg
push
cltd
out
lret
flds
mov
enter
mov
mov
adc
inc
jp
inc
mov
adc
outsb
adc
lret
dec
cwtl
gs
test
sub
push
inc
xor
in
mov
push
lret
mov
dec
mov
mov
mov
stos
jae
dec
roll
push
mov
dec
sbb
pop
int
jg
jns
push
sahf
rcr
aaa
roll
xchg
or
cld
mov
or
xchg
xchg
fists
jns
pop
inc
loop
lcall
add
insl
out
popf
xchg
ljmp
ret
scas
pop
push
sbb
sub
imul
rcr
mov
shrl
adc
mov
pop
stos
jmp
push
fisttps
cli
addb
pusha
js
mov
mov
mov
filds
dec
test
push
pop
js
data16
lcall
pop
cmp
nop
aas
mov
xor
repz
xchg
iret
imulb
lahf
dec
mov
movsb
rorl
stos
pushf
push
xchg
and
jmp
outsl
mov
test
ss
sbb
cmpsb
mov
pop
outsl
adc
push
adc
and
inc
mov
inc
inc
mov
xor
hlt
loope
mov
mov
jp
test
xchg
pop
mov
aad
es
jne
xchg
cmpsb
mov
in
xor
mov
xor
push
out
sti
add
out
mov
enter
mov
mov
jns
adcl
mov
fwait
xchg
cmp
mov
dec
out
sub
hlt
dec
cmp
jg
xchg
repnz
gs
out
lea
mov
pop
bound
jp
mov
or
mov
mov
ja
mov
or
rclb
push
arpl
fiaddl
or
std
mov
xlat
andb
add
jp
rcrb
cmp
lds
into
push
mov
in
repz
jmp
rcr
nop
mov
lods
pop
add
test
or
ret
push
dec
cwtl
and
cmp
sbb
lret
cltd
and
in
jbe
test
push
mov
adc
mov
aaa
cmp
lea
in
iret
xor
js
mov
clc
dec
adcl
aas
push
sub
pop
mov
push
ret
inc
stc
cmc
push
sub
orb
aaa
pop
dec
cmp
out
mov
arpl
inc
adc
dec
mov
nop
lods
adc
dec
inc
fyl2xp1
sub
push
push
xor
fdivrp
dec
sub
mov
mov
mov
inc
mov
in
adc
cmp
in
lods
rorb
jo
xor
xchg
nop
sbb
sbb
cmpsl
fistpl
imul
xlat
ja
ficoms
and
test
int
pop
ja
jle
repnz
sub
popf
jnp
dec
xor
test
cwtl
xchg
pop
divl
ss
cmpsl
sub
cmpsb
sbb
dec
ds
sbb
cli
gs
pop
adc
dec
xor
xchg
pusha
dec
add
jl
pop
test
cmp
std
pusha
add
in
pop
push
leave
mov
pop
nop
out
xorb
mov
out
cmp
cmp
pcmpgtd
mov
xchg
outsb
mov
repnz
inc
cmp
push
dec
arpl
mov
and
push
or
xor
mov
mov
mov
mov
test
lods
push
xchg
xchg
insl
inc
cmp
orl
pop
sbb
ret
add
fsts
fistps
cmc
imul
inc
ljmp
xor
lret
sahf
push
or
or
rclb
xchg
and
xchg
in
mov
mov
xor
in
mov
lods
iret
lcall
mov
lret
inc
mov
pop
pop
fnstcw
jo
cmpsb
popa
cld
test
repz
add
sbb
shrl
sub
push
aas
arpl
nop
mov
cmp
ret
dec
cwtl
add
mov
enter
mov
pop
xor
jmp
std
sbb
outsl
dec
sbb
lret
push
mov
mov
pop
lcall
cli
psubsb
out
test
dec
daa
ficoml
cmp
jae
jle
jnp
jp
bound
mov
cltd
mov
mov
les
aam
pop
aas
inc
movsb
push
and
jl
popf
sub
push
cltd
stos
jmp
lock
cmc
popa
fs
loopne
test
pop
mov
jno
int
insl
adc
loope
jle
jb
pop
or
int
leave
xchg
xchg
popf
ja
sub
mov
out
loopne
mov
mov
xchg
xor
pusha
xchg
dec
lret
enter
sub
adc
stc
jno
mov
add
leave
xor
ret
pushf
push
in
arpl
test
mov
je
or
loopne
adc
pop
fstps
pop
stc
add
push
cmc
xchg
lock
into
daa
or
scas
sbb
push
pop
mov
xchg
add
jnp
pop
adc
pop
outsl
mov
pusha
sbb
out
in
or
inc
dec
dec
lods
jg
pop
xor
cmp
je
mov
gs
xchg
jl
or
jae
mov
inc
inc
dec
inc
insl
jp
dec
xchg
adc
cmp
sbb
dec
jp
xchg
lahf
cmp
pop
push
std
add
pop
out
mov
mov
int3
shl
and
cmp
pop
sub
out
dec
pop
xor
sbb
test
sub
inc
nop
or
inc
mov
xor
leave
scas
push
int3
pop
mov
and
jns
mov
cli
or
ret
loopne
pop
mov
les
adc
ret
cmp
jns
data16
fiadds
pop
aas
adc
ficomps
mov
dec
mov
mov
add
xchg
add
lods
sbb
sti
es
jecxz
jno
inc
cld
shr
leave
xchg
into
mov
cmp
fists
sub
mov
rcll
arpl
pop
cltd
jmp
pop
out
mov
rcll
imul
cmp
inc
popf
movl
addr16
test
or
adc
dec
hlt
mov
push
fldenv
iret
xchg
lret
push
repnz
pop
pop
add
adc
aad
mov
cmp
filds
repnz
es
movsl
jmp
iret
rorl
jae
mov
and
mov
cmpsl
or
and
push
mov
loop
mov
push
push
dec
add
repnz
addl
jbe
pop
repnz
lods
movsl
cld
aam
sahf
fs
add
addr16
in
icebp
mov
jb
outsb
mov
into
push
xchg
cmp
add
mov
jae
push
dec
jae
mov
adc
and
fistpl
inc
mov
leave
ret
or
ja
clc
popf
mov
adc
xor
cmp
leave
scas
punpcklwd
or
fsub
pop
mov
mov
aas
and
stos
jmp
sub
add
sbb
add
rcl
mov
pop
and
sti
adc
cmc
add
fxch
pop
insb
sbb
inc
outsb
inc
xchg
ret
fisttpll
rcl
loop
sbbl
jae
fsubr
fistl
push
addb
lods
push
pop
mov
ret
jbe
mov
and
fs
sti
cmp
cmp
rorb
pop
adc
pop
pop
sbbb
cli
sub
mov
xor
sub
jnp
adc
aas
cmp
fidivrl
dec
mov
ffree
je
leave
lock
mov
test
xor
xor
stos
and
gs
ljmp
sbb
pop
xor
dec
sub
fstl
pushf
xlat
xor
inc
push
test
call
movl
xchg
and
mov
xor
push
xorb
mov
shll
xchg
js
call
cmc
xchg
nop
pop
pop
dec
in
addl
test
clc
into
imul
cmp
push
call
fwait
loop
and
xor
ljmp
mov
add
jle
sbb
cmp
les
xorb
je
ficompl
xor
pushf
cmpsb
sti
ljmp
mov
mov
inc
adc
aad
jl
adc
jo
sarl
push
pop
mov
add
ffreep
subb
hlt
xor
popa
xchg
fs
psubsw
xor
stc
xor
ds
xor
sahf
and
hlt
sbb
push
fstps
mov
icebp
mov
pop
in
jecxz
enter
cmp
cld
xor
mov
pop
ja
cmp
fdivrs
in
mov
xchg
int3
xor
in
adc
insl
stos
push
test
ret
ja
adc
sub
sub
jl
enter
pop
imul
adc
sbb
jno
stos
jle
mov
and
dec
ljmp
cmp
mov
fwait
pop
jbe
ja
pop
lcall
outsb
test
rcll
and
inc
pusha
push
mov
jns
sbb
pop
cs
push
mov
mov
and
cmp
lea
jp
and
stos
aam
icebp
enter
shll
imul
and
add
fbstp
cmp
in
pop
mov
into
test
in
sahf
es
les
loop
mov
push
mov
cwtl
xchg
cmc
in
cmc
cmp
pushf
xor
mov
jae
jp
fisttpll
cmp
les
cmp
mov
call
cmp
pop
push
or
add
mov
shlb
out
fs
dec
inc
out
in
int3
add
imul
lret
or
jl
push
pusha
push
or
push
ja
xchg
inc
psubq
push
mov
inc
adc
lea
cmpsl
and
mov
or
add
or
jmp
or
pop
test
mov
leave
fidivl
pop
or
dec
addl
push
movsl
in
clc
pusha
gs
rorl
cld
outsb
and
repnz
loopne
push
imul
adc
pushf
enter
enter
clc
xor
ljmp
fdivrl
int3
push
mov
sub
xlat
jmp
add
pop
inc
jbe
adc
inc
das
shll
mov
xlat
sbb
cmp
or
mov
lret
nopl
adc
and
insb
in
lods
jb
out
aaa
jo
fwait
dec
xchg
xchg
test
pop
fldl
ds
fsubrl
cmp
xchg
ds
inc
mov
mov
push
fsubl
repnz
mov
ljmp
jmp
inc
or
mov
sub
pop
cwtl
adc
cwtl
leave
sbb
mov
das
cmpsb
jne
out
cmpsl
inc
jecxz
rolb
mov
dec
xor
pushf
lds
fs
sub
ffreep
cmpsb
iret
sub
mov
cmpsl
and
lods
enter
sbbb
xor
inc
fdivs
out
mov
stc
addr16
jp
jge
pop
int3
adc
es
mov
stos
popf
cmpl
lods
lret
test
add
fstps
lock
stos
sbb
cmpsl
jae
mov
or
mov
dec
cmc
test
xchg
leave
or
mov
das
stos
mul
pop
mov
push
inc
or
test
push
inc
pop
cmp
pop
lahf
inc
push
add
jb
dec
pop
pop
push
aam
jp
ret
xor
inc
and
mov
cmp
std
jg
sbb
arpl
sbb
loopne
inc
lret
dec
sbb
push
movsl
aas
sub
pop
cmp
shl
shll
ss
imul
addr16
ss
scas
pop
jecxz
icebp
pop
or
or
adc
push
je
mov
pop
xchg
inc
mov
dec
sbb
jecxz
imul
dec
cld
xchg
mov
cli
mov
out
xor
adc
movsl
mov
xchg
xchg
test
scas
pushf
mov
loop
xchg
cmc
sbb
push
stos
mov
inc
adc
inc
test
loope
and
test
lods
fisubl
addr16
popa
add
lret
mov
add
out
add
mov
add
xchg
and
bound
leave
ljmp
sahf
loopne
repz
dec
cwtl
push
lods
icebp
jns
les
movsb
movsb
inc
fdivrs
in
clc
sbb
push
aaa
cmp
les
inc
sub
outsl
or
test
mov
cmpsb
js
sub
add
jp
lods
enter
shlb
cmpsl
aam
mov
push
push
shll
push
sub
inc
mov
mov
pop
pop
cli
xchg
pop
xor
jne
loop
in
jg
ja
in
int3
stc
subb
mov
ljmp
test
out
gs
stos
mov
sbb
xchg
aad
add
fldt
andb
push
ret
inc
scas
jl
sub
xor
add
icebp
sub
ror
sbb
int3
mov
pushf
inc
in
jno
cmpsl
adc
jle
pop
or
sbb
push
popf
cmp
inc
mov
dec
pop
pop
cmpsl
imul
xchg
push
mul
outsb
push
pop
js
test
mov
pusha
adc
add
test
jbe
insb
jo
cmpsb
mov
out
pop
inc
push
lds
ret
xor
das
ja
sbb
push
or
aas
mov
mov
daa
mov
leave
mov
lcall
fmuls
fisubrl
and
sti
fucom
out
and
iret
dec
sub
push
mov
inc
jmp
adc
and
or
sub
insl
stc
push
add
lahf
fwait
or
jb
arpl
les
rolb
jno
push
cld
call
insb
cmpsb
mov
jno
jo
incl
jge
iret
sbb
rcll
imull
jb
outsl
adc
jge
fisttpll
push
xor
dec
and
lahf
loop
movsb
lods
mov
sbb
call
lods
test
mov
pop
pop
mov
rcll
xor
push
push
jle
mov
sub
mov
dec
xchg
adc
fimull
mov
mov
inc
inc
push
fstl
add
add
aam
movsb
sbb
lret
jecxz
imull
sbb
into
push
inc
or
out
int3
add
dec
repnz
cmp
inc
add
pop
push
in
push
mov
pop
pop
div
lea
xchg
or
nop
sbb
push
cwtl
mov
or
mov
xadd
push
ficompl
rorb
outsl
inc
sub
shlb
stc
cmp
pop
jns
loop
add
sbb
push
ret
mov
cwtl
ss
mov
ljmp
dec
test
dec
addr16
std
mov
mov
jb
aas
fldl2e
imul
sub
jae
pusha
mov
add
rcll
insb
cltd
js
push
dec
and
cmp
popa
and
push
cli
pop
pop
cltd
jnp
mov
mov
in
jnp
push
push
or
push
arpl
xchg
subl
or
lods
fs
mov
cmp
je
lock
fiadds
pop
loopne
adc
push
ds
insb
adc
sub
and
xchg
jo
jg
stos
sbb
push
aad
aad
cs
jo
add
push
lahf
loopne
pop
rclb
fwait
pop
sub
rolb
sbb
jecxz
mov
sbb
enter
stc
or
aaa
outsb
mov
flds
std
adc
mov
lret
scas
mov
jle
mov
nop
add
inc
cli
out
enter
fisubrl
or
push
clc
add
push
leave
pop
inc
xor
repnz
push
adc
scas
jle
pop
ret
std
in
subl
sbb
push
jns
pop
mov
inc
aam
mov
ja
and
lock
xchg
lock
sahf
idiv
clc
xor
in
iret
aam
dec
mov
lea
dec
addr16
jbe
paddsb
ret
cmp
dec
cmpsb
pop
dec
movsl
dec
jg
jecxz
daa
xchg
aam
or
lret
adc
daa
subl
mov
xchg
stos
mov
lahf
jo
bswap
or
movsl
pop
lea
cmc
pop
xchg
dec
adc
std
lods
cmpsb
push
arpl
rcrb
imul
repz
mov
shr
mov
cmpl
loopne
mov
and
mov
dec
push
inc
lea
shrb
mov
mov
sbb
data16
icebp
lcall
cwtl
xor
sbb
jmp
test
adc
pop
test
or
inc
hlt
call
cmpsl
adcb
sbb
push
stos
cmp
pusha
fs
dec
jo
jb
sub
stc
icebp
sbb
in
outsl
jns
leave
mov
fdivs
mov
andl
jo
cmc
inc
pop
clc
mov
sub
decl
js
cmp
cld
jg
arpl
mov
daa
mov
mov
mov
popa
mov
jne
xor
jne
lret
int
add
fnstcw
push
sbb
push
adc
call
mov
jecxz
mov
and
mov
shl
cmc
pop
add
or
inc
loop
mov
imul
mov
cltd
xlat
int
xor
pop
jae
rorb
pop
repnz
xor
frstor
shrb
iret
xlat
inc
jmp
adc
lods
push
push
adc
or
xor
cmp
xchg
mov
sbb
jge
mov
mov
shlb
daa
loop
xchg
rcrb
jnp
pusha
push
sbb
stos
adc
nop
cmp
add
or
sbb
cmp
xor
lods
sarb
rcrb
inc
mov
pmaxsw
xchg
xchg
arpl
das
jns
sarb
arpl
dec
arpl
jb
lret
xchg
insb
out
incb
mov
repz
insl
int3
cmpsl
xchg
fwait
xchg
rcr
xchg
shl
xchg
add
mov
sbb
icebp
inc
cmp
arpl
seta
enter
mov
inc
shll
sarb
adc
pusha
pop
pop
popa
xor
inc
mov
sbb
flds
push
inc
nop
jo
js
inc
ret
dec
adc
mov
xor
mov
or
enter
lock
dec
leave
and
sbb
daa
inc
mov
aam
fsub
xchg
insb
push
sti
sbb
xor
pop
mov
insb
sbb
aam
xchg
and
dec
mov
int
dec
xor
out
dec
or
fwait
inc
add
shlb
pop
movsb
jns
add
inc
dec
mov
hlt
test
js
adc
out
xor
mov
mov
mov
mov
stos
ss
in
sbb
push
dec
mov
mov
push
js
jae
push
dec
pop
test
xor
hlt
pop
dec
outsl
mov
cwtl
unpcklps
out
in
out
pop
pusha
mov
xor
or
adc
mov
sarl
std
cwtl
push
xchg
insb
adc
aad
dec
lds
xor
in
inc
mov
push
push
pop
pop
insl
fsubs
dec
cs
xlat
repnz
inc
lahf
sahf
or
pop
push
test
std
mov
jmp
mov
shll
pusha
inc
xchg
xlat
add
mov
fisttps
or
out
xchg
or
xchg
mov
fsts
jl
push
popa
push
xchg
mov
fld1
es
jae
add
outsb
or
dec
aaa
in
xchg
ret
hlt
popf
call
jne
jo
insl
out
push
std
subb
inc
or
in
pop
decb
and
mov
xor
mov
int3
icebp
in
push
mov
daa
add
push
sbb
adc
test
call
ljmp
stos
mov
ljmp
or
mov
lea
mov
mov
lret
mov
cmp
mov
js
inc
push
cmpsb
mov
inc
addr16
imul
xchg
out
out
dec
fmulp
inc
sub
insb
xchg
scas
scas
add
je
jecxz
push
or
ret
dec
xor
cmpsb
sub
sbb
mov
pop
rcl
or
ficoml
xchg
cmc
ror
mov
out
icebp
in
ret
jl
jb
rorl
pop
das
add
jno
enter
sub
cmp
mov
mov
inc
mov
les
and
out
mov
pop
test
add
sbb
jg
bound
pop
cmp
insb
addr16
mov
cld
int3
imul
lcall
cmp
movsl
call
jae
push
inc
arpl
or
and
push
mov
xchg
xchg
fists
jne
repz
mov
push
pop
mov
dec
xor
inc
jnp,pt
sub
insb
adc
jnp
dec
repz
negl
aaa
aaa
cmc
cmp
stos
cld
cltd
pop
push
add
ds
ja
jg
test
mov
movsb
jns
scas
mov
cli
pop
insl
inc
roll
iret
push
adc
jmp
xchg
outsb
mov
mov
xor
inc
or
clc
adcl
cltd
das
cmpl
cltd
fnstcw
dec
int3
fdivrl
dec
mov
popa
mov
or
jecxz
mov
and
rolb
mov
cmp
sbb
movsb
inc
ret
pop
cmp
sbb
jbe
dec
test
int
xchg
push
add
pop
mov
stc
sub
sub
dec
pop
pop
cmpsl
push
imulb
lea
cwtl
and
inc
gs
and
inc
mov
xchg
adcl
and
decl
test
sbb
std
xor
xchg
pop
push
and
sub
pop
ret
cmp
mov
pop
add
jp
xor
xchg
pop
dec
pop
jge
pop
enter
movsl
xlat
xor
xchg
hlt
mov
jno
clc
adc
sub
inc
inc
stc
add
daa
shl
pop
cmp
pop
int3
mov
stos
popf
out
shl
addb
mov
aaa
out
loopne
out
or
jne
sub
pop
add
add
inc
dec
shrb
dec
ds
out
iret
cmp
push
xchg
jbe
test
fdivrl
inc
pop
sar
int
xchg
inc
xor
push
dec
fisubrl
idivb
sbb
jne
xor
mov
and
mov
cli
mov
or
sub
imul
mov
fcmovbe
mov
in
les
pop
mov
mov
nop
cmp
xchg
cmp
pop
sbb
fcoml
cmp
jnp
into
sub
fsubrl
dec
imul
ds
cmp
std
test
cmp
inc
aaa
loop
std
dec
fidivl
mov
dec
sbb
repnz
push
mov
das
lahf
pop
lods
out
push
cmp
push
cld
out
xchg
aam
mov
fists
repz
cmp
inc
ret
and
push
cli
or
sbb
sti
cmp
pop
pop
pop
arpl
addr16
cmpsl
adc
push
sub
cli
xchg
push
inc
in
xlat
enter
mov
test
inc
fwait
mov
rorl
push
vpaddsb
test
jl
pop
arpl
push
gs
pop
jp
fistpll
sti
fsts
or
push
or
fsubr
push
cmp
test
fstps
xchg
rclb
cmp
test
adc
cmpsb
sub
je
aam
daa
scas
xor
out
iret
sub
les
ret
out
lret
mov
jbe
imul
testl
pop
orb
fs
mov
sbb
add
add
push
leave
cltd
rclb
paddd
xor
jl
movsb
push
xor
cltd
std
in
adc
fdivrp
xor
jmp
test
ret
jmp
ds
cmpsb
daa
ljmp
cmpsl
add
lock
aad
or
and
andb
fcmovnbe
mov
cmpsl
inc
shl
out
jecxz
jbe
xor
mov
cli
lahf
xchg
fwait
pop
mov
aaa
or
jno
add
mov
aas
mov
xor
out
xchg
sbb
cmp
popa
xchg
and
add
sbb
arpl
lock
aam
call
pusha
rcr
or
jecxz
sub
je
movsb
ret
ljmp
mov
pop
rolb
pop
mov
mov
rclb
je
mov
xchg
lods
pop
inc
test
lock
add
stos
cli
leave
leave
pop
out
dec
lds
pushf
pop
loopne
and
in
adc
out
test
or
std
mov
add
add
aas
push
or
and
js
aaa
add
ret
out
mov
push
jp
mov
fwait
mov
pop
cli
fsubrl
pop
mov
sti
mov
movsb
sbb
cmp
adc
inc
jmp
cmp
stos
dec
dec
movl
ljmp
je
pop
jecxz
jns
lods
aaa
js
mov
add
xor
shl
lods
jecxz
nop
push
dec
hlt
inc
in
std
aas
mov
add
pop
hlt
jns
out
popa
lret
bound
xchg
jno
into
shll
sbb
cmp
iret
mov
pusha
gs
push
cmp
push
mov
mov
in
std
cld
clc
cmc
insb
movsl
mov
mov
hlt
sub
inc
cltd
xor
sub
fucom
fdivrl
icebp
add
dec
mov
jne
mov
in
sbb
cmp
aam
xchg
test
or
repz
rol
xchg
imul
shrb
in
fcoml
mov
dec
push
test
in
mov
push
and
out
sub
sbb
xchg
xchg
sbbl
push
mov
addb
popf
repnz
rcll
cmp
repz
test
movsl
pop
jbe
xchg
push
sub
shll
jecxz
fmull
or
and
lds
int
popa
insb
jo
push
lods
cmpsl
xchg
push
fwait
jne
add
pop
cwtl
push
divb
insl
pop
mov
pop
gs
enter
inc
xor
push
cmpsl
and
cmp
and
scas
cmpb
sbbb
push
test
testb
and
pusha
adc
ret
add
mov
sub
sbb
movsl
pop
ljmp
aam
es
inc
fmuls
mov
dec
jecxz
sub
shr
loopne
add
scas
orl
pop
mov
fsubp
push
in
repnz
mov
test
call
jns
jne
xchg
repz
mov
mov
push
xchg
ja
add
data16
sub
mov
mov
push
call
pop
cltd
pushf
push
aad
daa
pop
mov
push
push
out
jne
mov
mov
aas
arpl
xor
mov
stos
dec
cld
mov
pop
push
cmp
pop
sbb
push
xchg
xchg
aad
mov
xlat
jle
imul
cmp
fists
in
das
pop
jo
cmc
adc
iret
scas
jb
or
in
dec
sub
fstpt
mov
pop
test
add
push
fcmovne
and
sub
adc
mov
mov
inc
xor
leave
pop
cmp
fildl
mov
imul
cs
mov
les
jge
jne
pop
xlat
mov
or
inc
daa
sub
add
dec
int
popf
mov
cli
sub
fcoml
subl
or
mov
add
push
adc
jnp
dec
mov
lods
into
or
lret
mov
jg
pop
push
hlt
hlt
in
jg
stos
sbb
aas
leave
jecxz
sub
cmpsl
or
xchg
cs
mov
mov
jne
aaa
jge
scas
into
jle
push
dec
xchg
jle
lret
outsl
mov
inc
cmp
push
or
sub
and
out
daa
pop
dec
xchg
out
sahf
enter
inc
sbb
and
cmp
xchg
lahf
pop
pop
lcall
jmp
fcmovbe
sub
pop
and
movsb
notb
aas
divl
shlb
jge
rcrl
popa
and
mov
pusha
out
stc
xchg
aad
int3
adc
movsb
pusha
jmp
dec
lods
arpl
jp
jb
mov
out
xchg
cli
push
jnp
xchg
dec
xchg
idivl
add
pop
mov
jp
aad
lock
jp
cmpsl
ljmp
dec
and
dec
inc
mov
std
out
into
int3
test
rcrl
das
pop
push
orb
push
mov
mov
mov
addb
jp
lcall
push
sub
sub
lods
movsl
addr16
add
dec
xor
cmp
ljmp
xor
data16
fmull
inc
cwtl
push
mov
subb
test
ds
rorl
pusha
jne
idivl
inc
push
in
cmp
cs
imul
sbb
movsl
fidivrl
pop
or
fdivr
xchg
xchg
cmpb
rcl
mov
jo
into
add
or
sub
aad
adc
and
cmc
cmpsb
sbb
mov
cmp
add
or
mov
sub
sbb
add
in
mov
jo
xchg
sub
mov
or
insl
pusha
hlt
jecxz
mov
inc
neg
dec
fists
rorb
pop
dec
sub
mov
popa
imul
pop
xchg
mov
dec
les
mov
xchg
push
inc
fs
pop
adc
out
ja
mov
test
cmpsl
dec
test
push
mov
dec
dec
sub
arpl
mov
in
clc
lods
xlat
int3
add
push
mov
inc
stos
sbb
fs
cmp
rclb
popa
idiv
jne
or
psllq
push
cmp
inc
std
pop
hlt
repnz
cs
cmp
and
cmpsb
sub
pop
inc
adc
shlb
add
mov
pushf
seta
adc
adc
jl
pop
push
add
mov
out
icebp
add
sub
repz
pop
mov
mov
xchg
adc
pushf
jmp
mov
or
ss
mov
push
jne
or
aas
aam
push
lahf
adc
addr16
rol
jbe
mov
rclb
add
cltd
cmp
inc
dec
jecxz
lret
mov
sahf
cmp
out
stc
adc
out
daa
hlt
dec
ret
xchg
sbbl
fimuls
jns
sbb
sub
test
sbb
loop
sub
cmc
call
add
jno
scas
fsubrs
outsl
lods
adc
fdiv
fcom
lds
dec
call
inc
rcll
jle
xor
sbb
insl
jecxz
hlt
sub
fwait
icebp
jo
bound
iret
int
je
imul
icebp
add
sub
jmp
inc
in
and
push
jns
and
lret
out
pop
scas
movsl
xchg
mov
pop
cmp
scas
aam
arpl
addb
hlt
pop
movsb
jne
sub
jp
divl
mov
sti
pop
push
push
sti
jo
popa
or
icebp
mov
adc
pusha
and
mov
or
mov
xor
lret
jnp
xlat
lret
in
jae
or
and
imul
in
das
push
mov
lahf
push
lret
lahf
aam
mov
ds
iret
pop
push
mov
subl
jo
fdivrs
mov
or
cld
sub
cmpsl
and
call
imul
mov
push
mov
jp
fs
and
unpckhps
das
ds
mov
sbb
sub
test
lahf
je
fcompl
movb
sbb
incl
inc
dec
subl
imul
mov
adc
popf
mov
ja
xorl
and
mov
cmovnp
cmpsb
mov
lret
es
test
xchg
lods
cmp
insb
xchg
mov
inc
clc
sub
mov
sbb
jae
ds
jecxz
mov
xor
mov
adc
cmp
arpl
pop
mov
lds
dec
ds
clc
xchg
inc
in
xorb
adc
int
mov
pop
and
xlat
cs
jp
sub
add
and
adc
mov
cwtl
movsl
sti
or
rorb
mov
rcrb
mov
cmc
ret
mov
es
xor
mov
mov
je
call
mov
into
addr16
into
xor
int3
cs
mov
insb
mulb
into
inc
xchg
fwait
jge
es
scas
sub
popf
add
lods
inc
pop
xchg
aas
insb
ja
jno
je
mov
add
sahf
cmpsl
add
stos
sub
mov
incb
pop
mov
test
test
pop
in
push
call
out
pop
sahf
test
ss
or
aaa
in
jge
jae
add
aam
sahf
add
push
and
pushl
ljmp
push
out
inc
mov
cmc
add
sbb
test
dec
inc
loopne
adc
mov
lods
adc
dec
lcall
mov
das
cld
fldln2
fadds
and
test
je
pop
xchg
das
stc
loopne
cltd
loope
je
mov
mov
mov
cld
in
pop
pop
mov
adc
pusha
jl
dec
pop
cmp
out
xchg
inc
jge
xchg
mov
mov
rcrl
pop
repnz
fdivr
push
jp
ljmp
stos
jmp
subb
sbb
aas
adc
push
pop
popf
mov
cld
rcr
or
stc
dec
fcomps
mov
dec
jnp
ja
mov
int
les
and
scas
or
repz
in
or
fdivr
jb
iret
das
loopne
test
jge
mov
scas
rclb
shr
ds
cli
out
cmpsb
sbb
dec
cwtl
inc
pop
add
and
xchg
dec
or
push
dec
dec
inc
inc
scas
mov
jo
ficomps
cmpsb
mov
xchg
xor
xor
xor
push
das
loop
movsb
arpl
mov
cmp
mov
and
aad
orb
and
lcall
arpl
out
hlt
xchg
ficomps
dec
inc
call
ljmp
stos
push
inc
sub
into
cld
adc
push
movsb
jge
xchg
cwtl
jecxz
mov
cwtl
ja
idivl
rcr
sub
and
stos
mov
add
push
lcall
jne
dec
daa
icebp
dec
fstps
rorb
popa
mov
sub
and
or
pushf
mov
cmovae
cmp
dec
fistps
jp
mov
mov
jns
sbb
dec
out
and
xor
adc
out
andb
push
inc
cmpsb
daa
push
xor
shl
push
mov
lods
or
inc
aad
or
call
or
imul
add
add
fnsave
fwait
xchg
pop
cmp
iret
or
mov
mov
loop
and
in
ds
sub
fldcw
pop
sub
movhps
aad
stos
mov
sarb
jp
push
jb
cmp
sub
outsb
mov
dec
insb
pop
aad
inc
pop
addl
jge
int3
cwtl
xchg
sbb
aam
jns
pop
lcall
data16
scas
push
xchg
test
loopne
enter
cli
mov
mov
pop
or
ljmp
pop
in
sub
daa
in
inc
sbb
out
js
movsl
lods
cmpsl
pop
dec
jmp
mov
jle
cmp
adc
push
jne
scas
jne
lret
mov
or
jle
out
push
test
pusha
or
push
add
jl
pop
xchg
movsb
mov
xchg
xor
mov
nop
call
cmpsb
jecxz
in
ret
xor
ljmp
add
inc
push
or
jl
leavew
adcl
hlt
cmp
aad
iret
in
push
pop
enter
sub
jae
arpl
lret
adc
adc
icebp
inc
ja
negl
popa
std
mov
cmp
jne
push
pop
mov
push
roll
jmp
xchg
or
xor
xchg
push
movsl
push
lods
push
lock
idivb
sbb
outsb
push
in
pop
cmp
pop
mov
lcall
sahf
and
add
mov
sub
xor
fwait
divb
sub
inc
lcall
adc
lea
jp
xor
data16
daa
push
das
pusha
sub
dec
mov
cmpsb
mov
pushf
and
js
sti
testl
js
xchg
cmpsl
fimull
push
out
mov
ja
sub
ss
mov
push
lret
cltd
dec
sbb
test
pop
xor
sub
mov
fbld
les
cs
jp
sbb
pop
sbb
jp
pop
lret
cmpsb
gs
jbe
pop
pop
pop
cltd
sub
das
sbb
jmp
mov
gs
xor
ret
incb
movsl
jo
int3
mov
and
lahf
mov
lods
jle
jne
push
mov
imul
cmp
cmp
js
aas
sbb
cld
sahf
cmp
xchg
mov
cmp
bound
mov
inc
inc
sbb
sub
pop
popa
mov
inc
jno
add
push
pop
movsl
aaa
ja
popa
out
jp
adc
imul
adc
int
sub
adc
call
fst
mov
pushw
mov
nop
and
adc
mov
mov
add
sub
cwtl
arpl
fldenv
sbb
sarb
sbbb
bound
movsb
and
arpl
push
add
ret
push
dec
jns
mov
ret
jl
aas
loop
and
clc
sahf
xchg
out
insb
loop
movups
sbb
xor
hlt
xchg
xchg
loop
rol
incb
int3
popf
or
jle
jns
mov
pop
jge
mov
mov
pop
sub
shll
lret
mov
push
jecxz
push
and
push
inc
push
and
xlat
cwtl
cmp
add
push
mov
and
sarb
mov
mov
ret
daa
insb
mov
fnstsw
and
mov
mov
adc
ret
jg
mov
push
add
daa
push
mov
scas
mov
push
cmp
cs
imul
js
repz
test
insb
push
sub
icebp
inc
popf
sub
cwtl
mov
in
dec
mov
int
enter
mov
and
mov
stos
icebp
pushf
divl
rcrb
mov
popl
xchg
mov
icebp
or
lods
aad
sbb
ficompl
loop
cmp
cmp
adc
jecxz
in
mov
inc
push
mov
cmp
jae
and
cmp
iret
repnz
jb
cmc
and
in
pop
xor
dec
mov
and
mov
push
mov
pop
gs
into
push
call
js
shll
dec
mov
enter
mov
stos
js
push
iret
mov
testl
xchg
jmp
adcb
push
test
fcoms
insb
inc
push
inc
push
orl
ds
mov
cmpb
movsb
shll
sbb
dec
adc
imul
ret
fcom
cmpsb
les
pop
call
std
xchg
mov
test
and
sbb
lock
sub
pop
push
addr16
imull
sbbb
push
mov
pop
xor
arpl
sbb
imul
xchg
test
daa
imul
add
pop
lret
pop
lods
in
popf
lock
sub
mov
xchg
mov
jmp
jae
push
pop
pushf
je
lret
aas
dec
jmp
inc
inc
push
popl
push
mov
push
pushf
out
sub
mov
adc
dec
jno
push
cli
loope
jg
ljmp
mov
jne
cmp
scas
sub
loopne
ficoml
pop
outsb
pop
and
lret
inc
dec
dec
mov
in
mov
aaa
data16
jle
mov
jge
leave
pop
mov
add
das
loope
dec
cmp
pop
add
lret
stos
clc
sub
js
clc
lea
js
sbb
sub
pushf
clc
int3
inc
pop
insb
xchg
ja
jecxz
movb
out
cmp
out
test
xor
shrl
fmulp
and
xchg
dec
popa
test
adc
inc
outsl
in
pop
sub
lods
jge
pop
inc
jnp
hlt
xchg
test
scas
push
ret
data16
rcrl
cmp
das
xlat
and
not
ss
cmp
scas
insb
rorl
shrl
mov
xchg
repz
mov
and
inc
mov
scas
dec
add
mov
fnstenv
or
test
test
or
ds
pop
sub
cltd
call
mov
iret
push
xchg
add
inc
lcall
or
notl
test
je
jecxz
push
outsb
scas
outsb
outsl
jmp
lock
sahf
mov
loopne
sub
xor
add
fldl2e
faddl
add
dec
lahf
add
mov
mov
mov
sbb
cmc
insl
push
xchg
or
sti
loope
int
repnz
adc
cmp
jbe
jno
pop
ja
fwait
ja
daa
data16
stc
inc
and
sti
pop
sub
pop
in
mov
xchg
sub
test
imul
ss
mov
cmp
aaa
leave
out
pop
inc
xor
adcl
mov
mov
pop
lods
je
pusha
sub
cmc
int
cltd
inc
jge
sbb
bnd
or
scas
out
sbb
xor
cld
xlat
fadds
inc
out
je
orl
adc
jp
mov
fwait
scas
fsubr
and
jb
sahf
lock
sub
mov
inc
sahf
gs
clc
jb
adc
or
pushf
pop
xor
push
mov
imull
arpl
xchg
mov
pop
or
inc
std
icebp
mov
dec
mov
movsb
mov
dec
or
orb
sahf
outsl
or
mov
repnz
jle
ljmp
pushf
add
fistpll
pop
adc
in
push
pushf
inc
and
popf
inc
xlat
mov
js
add
sub
inc
and
xchg
popf
std
mov
xchg
lret
andb
xchg
xor
call
stos
sub
pop
xor
inc
xor
ror
jo
stos
aad
add
nopl
jg
and
mov
daa
fadd
adc
add
fcoms
pop
xchg
nop
adc
xor
cmp
ss
pop
fcoml
mov
mov
cmpsb
imul
cmp
xor
and
fldenv
add
pop
lcall
repnz
push
and
add
cmpsl
dec
outsl
push
mov
lret
imul
or
dec
fldenv
test
das
xchg
pop
mov
lahf
cs
outsl
inc
cmp
mov
jbe
aam
imul
jle
loopne
ds
jno
mov
and
inc
sahf
enter
add
and
fbstp
pusha
mov
in
xchg
psubusw
add
negl
shr
shlb
mov
inc
pop
mov
push
cmp
xchg
sub
repz
pop
inc
add
xchg
jge
mov
cli
pop
jbe
mov
nop
dec
jbe
fidivl
ljmp
mov
fisubs
xchg
adc
inc
loope
vrcpps
ret
xorl
jecxz
mov
add
in
xchg
jp
bnd
rcl
test
psrlq
inc
int3
cmp
call
outsl
xor
mov
pop
les
sbbb
mov
xorb
lret
aas
and
out
pop
scas
add
movsb
in
scas
int
rol
int
jge
xchg
data16
outsl
in
ucomiss
pusha
out
fidivrl
cmp
repnz
nop
icebp
in
out
xor
hlt
into
repz
sahf
cmp
dec
subl
adc
movb
jae
pop
dec
popf
cli
jns
fld
clc
fimuls
sbb
div
dec
rcrl
insl
adc
inc
lds
add
inc
lock
mov
data16
popa
ja
cli
cmp
xchg
or
stos
jmp
mov
repz
mov
jb
mov
and
fiaddl
pop
and
testl
loopne
ss
idiv
pop
fcmovnb
and
xor
mov
lcall
imul
add
dec
cld
pop
mov
add
dec
lret
jae
xchg
jmp
movsl
aas
xor
push
int3
dec
pop
in
lock
push
push
lahf
cs
xlat
add
pop
push
outsb
mov
cmpsl
loopne
fildl
mov
fcmovbe
hlt
insb
cltd
push
xor
and
jno
jns
bound
std
cmpsl
roll
mov
jns
and
movsl
adc
pushw
inc
lret
lods
mov
inc
cmp
test
cmpsl
jl
stos
inc
js
test
les
xor
es
test
push
shll
cmc
or
jle
jp
cmp
scas
adc
popf
adc
xchg
test
test
mov
hlt
sti
dec
enter
mov
sub
xchg
sub
or
mov
repz
mov
cltd
dec
sub
andb
or
in
shll
pop
out
mov
xor
jecxz
jbe
xchg
shlb
cmpl
out
xchg
sbb
pop
mov
push
xchg
xor
xor
fwait
dec
xchg
dec
push
or
loope
fs
inc
pop
mov
lods
xchg
icebp
filds
movsl
arpl
leave
lahf
jge
lret
pop
out
ja
and
movsb
mov
dec
cmp
shlb
sub
adc
xchg
in
add
inc
pop
pushf
ljmp
lcall
mov
clc
mov
mov
add
popf
push
dec
jnp
push
xlat
add
dec
dec
shrb
repnz
add
daa
fwait
or
cmpsl
out
ret
repz
mov
rcll
dec
jb
sbb
pop
sarl
fwait
adc
mov
out
pop
inc
push
jb
mov
jne
add
xchg
mov
jbe
jo
movsb
mov
imul
int3
pop
into
pushl
push
adc
cmpl
cmp
loop
pop
arpl
sub
mov
movsl
sbb
aaa
xchg
dec
aam
and
cwtl
dec
imul
stc
dec
or
xor
jmp
mov
aaa
sub
pushf
lret
or
ds
pop
insb
xor
adc
xlat
dec
out
sbb
shlb
inc
cmpsb
inc
dec
orl
xchg
mov
data16
lods
sbb
cs
pop
dec
xor
dec
lods
mov
jmp
fldl
ret
out
mov
fwait
test
inc
lods
xchg
pop
xchg
xchg
sub
scas
mov
sub
and
sbb
xchg
mov
jae
popa
in
jne
pop
adc
push
mov
sbb
lcall
cmp
pop
or
mov
loop
test
stos
sbb
fnstcw
sub
shlb
jecxz
xchg
test
ficoms
aad
std
out
cmp
imul
jl
jmp
and
cmp
das
mov
sbb
sbb
add
jnp
imul
test
push
lret
add
rcll
push
lcall
or
and
mov
lcall
lock
aam
mov
push
xchg
sub
inc
ret
cmp
idivb
imul
mov
xor
ret
or
push
insl
ret
jmp
and
insb
xchg
xor
out
sahf
ficomps
push
jo
ds
dec
mov
mov
cmp
cmc
jmp
push
add
lods
sbb
jp
fdivrl
dec
sbb
out
pushf
ret
movsb
call
adc
mov
in
dec
inc
fidivrl
and
inc
mov
add
pop
xchg
xor
cmovns
or
cld
lods
shll
fimull
std
push
jmp
mov
mov
jb
faddl
dec
inc
jecxz
xchg
dec
fsubl
cmpsb
xor
fidivrl
movl
cmpsl
jmp
imul
xlat
lret
sub
dec
dec
cmpsl
jge
lea
pop
push
add
and
cltd
stc
lcall
movb
call
imul
fistl
out
or
mov
in
call
add
lods
ss
fsubp
nopl
test
loope
mov
cmp
imul
daa
pmaddwd
sbb
mov
sbb
push
add
ss
adc
popa
cmpsl
xchg
push
mov
test
js
ja
inc
jne
scas
test
idiv
adc
cs
loope
xchg
push
cmp
daa
pop
xchg
rorb
cmpsl
dec
xchg
cltd
and
and
out
addr16
xchg
mov
cli
add
dec
sub
popf
dec
ret
loopne
add
mov
out
xchg
inc
in
sub
mov
dec
enter
or
sub
add
pop
mov
fwait
aas
cmp
rcl
inc
pop
jle
mov
sbb
jmp
shl
jg
mul
cltd
jns
xchg
push
xchg
shrl
jg
or
xchg
xchg
andb
push
int
mov
mov
mov
inc
xchg
cmp
sbb
cmc
icebp
jp
dec
push
std
cmp
fisubrs
je
mov
push
jns
rcl
jo
popf
inc
shll
xlat
andb
push
pop
xchg
dec
cltd
test
and
fld
and
xor
push
test
fcmovnbe
sahf
sub
inc
aas
push
iret
jno
lret
fidivrl
out
add
push
fimull
andl
pop
mov
mov
pop
jecxz
in
lret
daa
fbstp
sbb
mov
sbbb
jle
outsb
and
jb
mov
jo
mov
outsb
push
nop
jno
aad
popf
imul
sub
sub
jo
repz
lcall
lahf
vmovntps
pushf
pop
push
or
pop
jbe
push
rcrl
sub
aaa
cmpsl
cmp
lods
inc
lock
xchg
das
ljmp
ljmp
sub
notl
add
cmp
test
outsl
gs
or
mov
stos
jl,pt
mov
add
shll
loopne
jge
in
dec
mov
cld
aam
les
or
cmpsb
call
lcall
pop
in
mov
scas
out
sbb
pop
imul
mov
fyl2x
and
jbe
push
cmpsl
in
xchg
shr
pushf
pop
aaa
pop
in
clc
cmp
ds
divl
mov
mov
ja
enter
jge
sbb
hlt
dec
mov
add
divb
repz
imul
outsl
mov
sbb
jne
fmuls
hlt
in
mov
outsb
push
or
pop
pusha
push
fstpl
adc
aaa
push
push
add
mov
push
bound
pop
add
cmp
push
ret
xchg
sub
fbstp
out
sbb
sbb
scas
outsl
bnd
notl
fisubrl
jns
hlt
fldl
pop
jae
int
call
mov
mov
dec
enter
jb
daa
outsb
push
lock
cmp
and
adc
aam
mov
sbb
sbb
popa
dec
icebp
test
test
orl
cmp
xchg
fildl
dec
insl
out
lahf
out
push
push
mov
fiaddl
out
xlat
adc
or
xchg
dec
xchg
mov
mov
add
loope
nop
jo
stos
xchg
out
cmp
out
daa
sub
mov
mov
cmp
cmp
sbb
sub
lcall
icebp
adc
mov
pop
loop
mov
or
dec
mov
bound
mov
ret
xchg
push
mov
out
jb
add
test
xchg
pop
ret
jno
xchg
add
pop
mov
cmp
idivl
jmp
call
mov
ljmp
inc
jecxz
hlt
lea
orl
jg
scas
aaa
add
stos
testl
pusha
aaa
add
rcll
inc
pop
int3
scas
lock
or
or
ret
lods
mull
xor
and
std
mov
pop
cmpsb
xlat
push
inc
popf
and
mov
sahf
into
xor
add
popa
dec
arpl
imul
test
pop
pop
test
pop
cs
pop
push
inc
push
or
test
subb
mov
inc
mov
in
mov
jns
scas
out
mov
mov
adc
dec
add
dec
pop
addb
mov
scas
pop
mov
test
xor
sbb
icebp
lock
add
lret
push
aas
cwtl
mov
aad
push
and
fscale
jne
into
daa
dec
mov
sub
int
sbb
mov
mov
nop
int3
add
adc
mov
add
dec
das
ljmp
mov
fdivl
inc
inc
push
jo
dec
mov
loope
ficompl
xchg
inc
mov
test
mulb
aad
xorl
outsb
ror
mov
xor
cmp
test
clc
add
sbb
cmp
out
push
stc
pop
scas
dec
orb
xchg
inc
int3
jns
subl
ja
push
inc
test
inc
pop
add
inc
jo
stc
jle
pop
rcr
jnp
test
sbb
sarb
call
jns
dec
test
popf
test
sbb
std
xchg
adc
pop
jle
js
pop
scas
xchg
sub
test
adc
jl
bound
ss
lods
bound
lods
xchg
nop
push
xchg
jl
jae
mov
inc
jo
xchg
repz
pop
xor
cmp
jp
fbstp
adc
cmpsl
imul
mov
test
push
test
dec
daa
pop
dec
xchg
adc
fs
jae
fs
push
or
rcll
mov
loope
add
jl
dec
pop
mov
mov
sbb
lahf
es
call
push
pop
stc
into
lret
in
ljmp
rcrl
mov
rep
lret
sub
xor
mov
js
pop
and
gs
mov
pop
outsb
mov
and
dec
adc
dec
movsl
jbe
clc
mov
or
adc
sbb
cmpsb
repz
lret
enter
mov
scas
insl
aam
repz
in
xor
mov
clc
xlat
out
mov
clc
repz
lahf
push
xchg
xchg
data16
cs
call
xor
adc
mov
loop
jb
pop
sub
icebp
popf
add
lock
sub
cmp
sbb
jp
aaa
mov
pop
pop
sti
test
mov
sbb
jnp
jmp
lods
push
clc
stc
stos
mov
sub
push
sub
loope
jl
rcrl
mov
push
test
jb
sti
sbb
daa
fwait
int
insb
xor
cld
in
jns
insl
pop
insl
cmp
mov
pop
push
ret
roll
mov
mul
and
cmpb
lods
jne
mov
rclb
pushf
xchg
xor
popa
push
fs
mov
xchg
pop
mov
pop
jg
call
mov
sub
mov
repnz
xor
outsl
mov
lods
aas
xor
mov
notb
sbb
leave
clc
dec
jl
js
xchg
jns
enter
mov
lea
adcb
in
mov
dec
xlat
sbb
fidivrs
pop
shl
mov
xor
out
aas
pop
jbe
fnstenv
ljmp
xchg
mov
xchg
cmp
mov
pop
lods
pop
mov
xor
mov
loopne
scas
dec
iret
xor
dec
cmpxchg
fisubrl
add
mov
dec
and
inc
sbb
loopne
xchg
jp
repnz
push
pop
lret
sbb
inc
pop
ss
xchg
dec
subb
add
aaa
mov
je
jecxz
leave
scas
loop
insl
mov
dec
cmp
jecxz
lret
mov
xor
int3
xchg
insl
push
fbld
lret
and
push
and
insl
mov
push
mov
fdivl
stos
outsb
fwait
cwtl
xchg
add
adc
fcomp
or
movsb
cld
enter
lds
jae
loopne
mov
jecxz
stc
add
cmp
pop
push
outsb
mov
sub
aam
inc
xlat
stc
psubq
dec
testb
push
mov
push
cmp
lds
mov
xchg
test
xchg
inc
mov
in
fisttps
movsl
fstpl
mov
aaa
dec
sub
or
fidivs
jo
enter
pop
xor
int
xchg
aaa
xchg
dec
inc
inc
dec
call
inc
cmpsb
mov
inc
loop
mov
lea
mov
movsl
repnz
insb
adc
mov
sbb
stos
mov
and
cli
loop
jnp
nop
test
lock
fucomp
push
fmuls
dec
aad
push
outsb
dec
lcall
das
jmp
or
lret
push
fadd
xchg
mov
aas
movsl
test
push
push
xor
cmp
lds
dec
stc
popa
cmpsl
call
sub
rorb
jecxz
pop
xor
inc
and
sbb
pop
and
add
decl
jne
lods
add
addr16
sub
insb
test
mov
jmp
jl
mov
shrl
jle
push
xor
cld
popa
aam
nop
mov
push
jne
test
sti
rcrl
leave
sti
fmulp
push
and
pop
pop
repnz
mov
fistpl
jo
stos
add
ljmp
imul
jge
popf
and
jl
jne
insb
add
cmpb
push
add
dec
outsb
sti
add
loope
xchg
mov
xor
pop
popf
xor
mov
adc
in
push
test
sahf
fiadds
into
xchg
test
mov
testb
outsb
push
xchg
sar
gs
les
mov
loop
lods
pop
adc
sarb
rorl
test
movsb
rcl
loop
xchg
scas
mov
data16
hlt
adc
push
mov
test
push
cbtw
je
inc
movsl
repnz
mov
cmp
jle
pusha
into
sbb
mov
pop
imul
adc
mov
adc
pop
pop
clc
insl
and
inc
mov
fidivrs
sub
cltd
mov
loop
std
loopne
mov
inc
pop
inc
mov
fs
popa
mov
push
jnp
sbb
rol
repz
int3
cmp
add
mov
test
jae
addl
mov
adc
adc
adc
inc
pop
imul
iret
xor
xor
clc
inc
inc
and
jne
adc
mov
enter
mov
jp
int3
dec
shlb
shrl
jne
repnz
mov
fnstenv
fmull
add
cltd
sbb
add
jno
fwait
push
xor
cmp
xlat
inc
add
mov
je
flds
sbbl
jno
sbb
add
adc
fdivrp
outsb
jg
repnz
lahf
push
out
xchg
or
repnz
mov
mov
inc
movsb
mov
fistpl
jge
mov
icebp
jae
pushf
jp
dec
lret
dec
adc
test
inc
scas
xchg
sti
cmp
rolb
std
test
mov
xor
arpl
out
sub
lret
or
sub
dec
dec
mov
fsts
out
cmp
inc
cwtl
pop
ret
filds
dec
ljmp
mov
adc
arpl
cmp
hlt
cld
ret
test
push
jl
loop
and
lret
xorb
pop
push
pop
and
add
dec
pop
orl
cmp
adc
lcall
lock
int3
out
roll
push
mov
scas
push
or
mov
mov
or
test
mov
ret
in
mov
adc
insl
sbb
imul
inc
inc
cmp
push
test
cmp
jge
ret
ret
fcoml
sarb
pop
sub
inc
pop
int3
in
adc
cmpsl
jns
push
xchg
jbe
popf
or
ficomps
dec
cwtl
addl
pop
push
and
stos
mov
push
test
mov
jo
or
arpl
cmp
int3
ret
mov
stc
push
jg
fs
jae
movsb
push
xorl
fmulp
insb
loop
sbb
cmp
xchg
jb
xor
mov
sarl
popf
jbe
repnz
mov
pop
scas
in
push
in
cmpl
push
pop
int
aas
stos
lret
lret
std
ja
xchg
sub
jnp
inc
shl
test
loopne
and
sub
jbe
fbstp
adc
bts
notl
jns
std
fucomip
adcl
jecxz
ja
or
mov
adc
pop
stos
inc
inc
add
sbb
mov
push
xor
rcrl
push
sbb
aam
popf
ror
aad
push
int3
test
jle
add
or
int
lret
stos
repz
cmp
hlt
xor
and
mov
je
outsl
cs
das
jmp
pop
xor
adc
cmp
add
mov
or
adc
cmp
andl
sahf
lret
cli
sub
data16
xor
insl
cmc
lods
xor
lret
push
icebp
cmpsl
fs
or
scas
pop
mov
push
jmp
cs
mov
inc
mov
mov
orb
ljmp
enter
cli
out
mov
ret
inc
mov
cltd
jnp
xor
in
xor
dec
mov
imul
popa
jl
xchg
lods
testl
push
and
lret
fdivr
orb
sbb
sub
arpl
or
sahf
xor
fcomip
ret
adc
sahf
inc
cvtps2pd
int
sub
xchg
mov
cwtl
sub
push
cmpsl
negl
hlt
daa
mov
pop
das
fwait
int
jno
addl
das
mov
cltd
jno
adc
js
xchg
push
push
add
lret
lret
in
ret
xlat
mov
int
out
jp
dec
ficomps
mov
xor
or
movsb
mov
stos
pop
sbb
outsl
xor
inc
ret
mov
scas
mov
or
lods
adc
xor
dec
aam
outsb
rorb
repz
lcall
pusha
repz
cs
fstl
jp
rcrl
mov
sbb
sub
out
loop
imul
sarl
mov
cs
pop
mov
data16
pop
add
add
sbb
dec
fwait
pop
cltd
lock
mov
push
les
cbtw
stos
cld
jp
ret
pusha
pop
ret
or
fnstenv
xchg
and
sbb
rcl
adc
into
fcomp
sub
orb
xchg
pusha
or
sbb
jmp
clc
shll
lock
sub
test
lret
imul
gs
je
mov
xor
xor
mov
add
dec
add
inc
stc
adc
test
cli
jno
mov
aam
js
push
pop
pushf
dec
and
mov
dec
loop
or
jbe
cmpsl
pop
sbb
fcompl
leave
pop
bound
scas
add
xchg
pusha
lods
pop
imul
jbe
jmp
out
add
inc
push
mov
add
adc
sbb
xor
push
mov
jg
mov
mov
imul
xchg
dec
je
out
dec
dec
scas
cmp
dec
lea
xchg
in
in
pop
push
jae
daa
fs
rcl
rcrl
int3
xchg
xor
in
addr16
mov
jnp
cmpsl
daa
jnp
inc
cli
and
or
mov
cmpsb
inc
scas
add
stos
pop
cltd
mov
lcall
or
mull
int
insl
jno
fdivrs
mov
and
xorb
xchg
jmp
lahf
mov
int
cmp
mov
dec
mov
ss
add
dec
test
mov
inc
jp
test
cwtl
stc
cmp
mov
sub
jne
scas
dec
mov
cmpsb
imul
repz
cmp
mov
mov
mov
pusha
pop
out
jp
pop
add
cmp
mov
mov
out
mov
xchg
test
and
xchg
jp
test
push
mov
fwait
push
jg
popa
xchg
mov
pop
sub
sub
jp,pt
push
into
jbe
and
les
pop
mov
sbb
in
mov
imul
mov
lds
loope
cld
inc
pause
fsubrl
int
push
sahf
loop
adc
or
adc
mov
test
nop
mov
std
xchg
enter
lea
pop
lahf
sub
leave
outsl
lock
cwtl
fstps
xchg
push
ret
add
lcall
roll
lock
aad
adc
jge
and
inc
lcall
or
mov
sbb
scas
out
ljmp
pop
xlat
nop
push
xchg
sbbb
and
lods
add
xchg
fs
mov
push
sbb
inc
mov
clc
push
imul
sbb
iretw
icebp
mov
lret
jg
jno
push
frstor
xlat
outsb
xor
dec
lcall
xchg
leave
lock
lcall
lods
lds
mov
sbb
mov
mov
mov
inc
imul
add
lcall
sbb
dec
imul
xchg
into
shll
inc
add
stos
imul
dec
movsb
and
arpl
or
pushf
imul
pop
mov
mov
fidivs
insl
clc
outsb
sbb
cltd
sbb
movsbl
js
xlat
sub
push
aaa
test
in
and
lock
in
mov
movsl
aam
push
dec
pop
or
int3
mov
outsl
aas
add
cmp
imulb
daa
out
xor
xchg
inc
or
dec
add
popa
int3
xor
jbe
icebp
loopne
hlt
mov
leave
dec
xchg
push
dec
lods
or
aad
cmpsb
out
inc
pop
test
rolb
cmp
into
loope
inc
aaa
add
lret
sub
arpl
fists
xor
lods
rorb
pop
mov
dec
or
pusha
sub
js
lods
mov
jp
adc
push
sbbl
into
push
mov
xchg
aad
cli
sbb
add
cmp
stos
fucomip
xchg
push
sarb
jo
xor
cmp
and
enter
ljmp
sbb
mov
xor
and
gs
sub
movsb
jl
sahf
xor
mov
dec
in
stc
push
pop
jnp
xchg
idivl
fistpll
pop
insl
or
cmp
add
arpl
incl
pushf
mov
fsts
mov
or
and
inc
add
in
loopne
icebp
jnp
lea
cs
roll
data16
pop
pop
movsb
mov
orb
pusha
jo
dec
jae
inc
inc
cmp
and
sbb
and
rcrl
or
add
xchg
or
add
mov
scas
or
dec
mov
inc
xlat
inc
dec
mov
pop
push
psrlw
xor
jmp
cmp
xchg
sarl
mov
cld
in
movsb
fldt
sbb
xchg
iret
jle
jne
divl
xchg
test
in
sub
sub
push
jne
fcmovnu
test
pop
jge
add
into
push
mov
fldcw
lock
fidivs
arpl
movsb
mov
inc
sbb
xor
mov
jg
out
jnp
pop
mov
push
lret
psrld
xchg
push
fs
push
sarl
mov
insb
mov
mov
jmp
add
jle
lahf
out
movsl
mov
sti
inc
sub
cmp
xchg
movsb
into
rorb
cmp
bnd
inc
push
dec
add
xor
dec
jbe
and
sub
inc
dec
push
dec
pop
jne
jmp
inc
mov
cmpsb
aas
sbb
test
into
int
jecxz
jp
jg
idivl
jp
pusha
enter
fs
jno
mov
push
or
fimull
xchg
xor
pop
insl
jge
mov
xor
xorb
ret
add
add
in
mov
cltd
lret
pop
pop
mov
dec
pop
sahf
leave
mov
nop
adc
mov
or
sahf
adc
sbb
addr16
mov
mov
ss
mov
test
jmp
cmpsl
and
jp
and
fiaddl
jmp
addr16
xor
dec
inc
inc
fiadds
sbb
mov
inc
push
adc
push
xor
mov
shl
loop
push
call
jmp
and
dec
push
inc
adcb
stos
stc
cmp
out
mov
cmp
xchg
leave
jp
jl
sub
add
je
arpl
cmpsl
or
les
jp
out
cmp
jl
loope
lret
ret
adc
lods
into
mov
fcomps
xlat
pushf
rcrl
xchg
push
imul
mov
insl
incb
jmp
jl
aam
inc
punpckhbw
inc
clc
and
xor
xor
or
mov
cmpsl
xchg
sar
int
ja
mov
loopne
rolb
and
xchg
test
call
inc
and
out
inc
sbb
cmpsb
push
frstor
mov
jmp
add
add
or
data16
mov
xor
cs
mov
xchg
and
gs
pop
in
test
loop
xorb
dec
fcmovnb
pop
mov
vmptrld
idivb
jno
cmpl
cli
jg
aad
sbb
imul
push
pop
jnp
mov
xchg
test
add
push
mov
and
aam
cmp
insb
cmpsl
sub
aam
insb
mov
out
sub
cltd
xor
mov
adc
add
nopl
punpckldq
repz
clc
into
or
dec
test
xor
mov
xchg
jl
pop
adc
push
test
mov
cs
pop
push
jno
inc
fwait
adc
std
stos
jp
test
mov
pop
add
pop
dec
jmp
addr16
jae
or
push
repz
movsb
mov
cltd
sarl
xchg
cmp
pop
shlb
sub
pop
mov
int3
int
adc
push
dec
mov
nop
or
sub
test
dec
addr16
fsub
add
rorl
push
or
sub
or
iret
leave
dec
inc
xor
data16
jb
push
push
mov
mov
adc
sbb
push
sbb
push
rcrl
or
cli
and
pop
mov
pusha
imul
rorb
aaa
sub
add
jbe
mov
fs
lret
fs
scas
dec
lsl
mov
sbb
dec
push
scas
sub
stc
push
xlat
popf
flds
pop
shrb
push
xchg
lret
les
cmc
movb
inc
inc
ret
mov
inc
repnz
test
aad
rcll
fistl
lcall
icebp
in
cmpsb
mov
adc
fbstp
add
cmc
sti
in
popf
fwait
subl
inc
ffreep
pop
adcb
inc
sbb
lcall
lods
loop
negb
jno,pn
push
inc
test
mov
and
std
adcb
xchg
mov
sub
add
xor
pushf
sbb
pop
mov
push
test
mov
cs
cmp
ret
jno
push
nop
clc
or
or
dec
adc
pop
xchg
or
add
imul
cmp
mov
lock
fwait
pop
popf
add
subl
jp
mov
frstor
iret
out
repz
xchg
leave
fwait
cmp
insl
aaa
mov
jno
xor
jg
sub
into
negb
xor
adc
mov
xchg
dec
cmp
jbe
push
mov
pusha
mov
aaa
sbb
and
sub
xor
outsb
and
jns
rorl
push
mov
dec
dec
xchg
nop
xchg
add
pop
das
add
dec
push
xchg
lock
sbb
mov
pop
les
sbb
pop
insb
repz
in
add
sbb
add
loopne
arpl
xor
adc
adc
inc
popf
sub
lods
or
mov
sub
cmp
stos
mov
popf
push
icebp
cmpb
stos
mov
dec
xor
inc
rorb
xor
cmpsb
push
push
xor
lcall
push
fsubrp
jmp
lods
sub
and
lods
into
mov
lahf
icebp
xlat
pop
xchg
imul
dec
push
push
add
les
add
inc
jl
lcall
push
mov
popf
adc
int
cmpl
inc
sub
hlt
dec
cs
inc
xchg
adc
rcl
mov
test
cmpb
popa
enter
ljmp
rcrl
cmp
ret
push
adc
cwtl
cmp
and
sub
xor
neg
jecxz
daa
into
enter
xchg
sub
or
hlt
aam
adc
push
lds
test
and
pop
add
das
sahf
jmp
sub
bound
ret
ret
aaa
das
rolb
fimuls
fbld
mov
jbe
mov
xor
jp
repnz
cltd
xchg
scas
fs
xchg
push
pop
push
addl
cmpsb
inc
into
mov
xchg
addl
mov
fld
and
pcmpeqd
int
pop
in
je
pop
mov
pop
sbb
rcrb
mov
dec
dec
imul
sti
or
addr16
cld
imul
push
or
arpl
dec
pop
inc
push
pop
imul
cli
fiaddl
fistps
lahf
xlat
xchg
mov
add
push
sbb
xchg
sbb
repz
movsb
rolb
jmp
cmp
lea
fnstcw
push
fwait
lret
mov
jle
jl
adc
movsl
adc
cmp
pushf
jno
mov
dec
fiadds
fldl
jne
test
or
sub
push
dec
divb
sub
mov
adc
and
mov
mov
push
mov
decl
mov
adc
inc
fisubl
pop
test
out
test
mov
mov
sbbb
mov
lods
outsl
dec
push
call
add
add
mov
repnz
cmp
push
jb
fwait
inc
push
adc
dec
mov
neg
pop
aas
leave
aam
mov
mov
dec
sbb
pop
or
jo
jl
fcoms
jmp
lret
iret
sarb
and
mov
loopne
aam
jo
dec
popf
push
fbld
xchg
lds
cmp
sub
icebp
lods
mov
fcmove
lret
mov
fidivl
imul
or
xchg
sbb
imul
push
jne
xchg
subb
xlat
xlat
popf
outsb
imul
xchg
imul
push
inc
xchg
mov
popf
inc
xchg
cmpsb
xchg
push
sub
push
push
std
push
bound
or
hlt
mov
inc
bnd
mov
and
inc
dec
cltd
out
inc
pop
pushf
decb
xchg
fdivrs
xor
mov
insl
push
movsl
arpl
nop
cmp
push
out
insl
pop
add
inc
loopne
push
dec
fnsave
xchg
and
je
cmp
popa
xor
lods
aam
repz
adcb
push
mov
jecxz
in
out
xor
fists
sbb
cmc
incl
pop
xor
and
mov
movsl
bound
mov
xor
inc
mov
inc
mov
notl
mov
pop
popl
hlt
pop
dec
outsb
xchg
dec
xchg
mov
fwait
sbb
mov
fcmovb
lahf
cmc
jle
mov
jge
mov
ret
push
or
je
mov
aad
dec
ret
out
cmpsl
sub
cs
outsb
xchg
jo
icebp
inc
cmp
lds
inc
pop
push
fwait
lods
mov
cmp
sub
pop
and
cli
rcrl
data16
pop
cld
xor
inc
pop
repz
jns
fnstenv
imul
xlat
daa
jg
lock
mov
xlat
add
mov
mov
mov
in
lret
xor
or
sbb
mov
dec
cld
lret
or
loop
fwait
push
cltd
lret
xchg
bound
mov
mov
mov
out
ret
and
or
adc
adc
ja
push
sub
dec
scas
inc
jg
xchg
dec
xchg
aas
dec
jl
xor
adc
imul
mov
sbb
shrl
fimuls
jnp
push
sbb
pushf
mov
pop
cmpsb
lret
adc
rep
inc
addr16
mov
pop
xchg
enter
cmp
or
setle
adc
lds
popa
cltd
shr
aaa
inc
xchg
fcos
xchg
add
pop
stos
hlt
pusha
xorl
mov
push
lds
add
mov
cs
lods
test
test
fdivp
data16
jno
outsb
add
and
lods
or
jnp
mov
pop
or
xchg
xchg
push
call
jbe
test
stos
jns
scas
sti
std
testl
push
xor
rcrb
sbbb
pop
aad
lock
and
test
dec
scas
nopl
or
dec
stc
punpckhbw
loope
mov
push
pop
push
aam
ret
mov
nop
rol
jb
ljmp
movsb
mov
iret
pop
and
adc
pop
mov
cmp
sub
xor
xchg
inc
add
test
jle
into
les
sbb
sub
xchg
sub
insl
dec
pop
mov
mov
loope
je
lea
fnstsw
mov
ret
or
sbb
test
sub
jle
push
sub
dec
sahf
ficoml
outsb
jnp
inc
gs
push
jmp
sahf
ja
lcall
xchg
es
push
int
adc
xor
push
stos
push
cli
dec
jbe
mov
dec
repnz
sbbb
pop
aam
les
push
loop
xchg
ss
mov
jg
push
add
mov
mov
sub
inc
or
sbb
cwtl
lods
into
jae
dec
aad
mov
lcall
mov
movsl
lcall
in
jmp
push
aas
xor
xchg
inc
bound
dec
outsl
incl
shlb
aaa
jle
fadds
fists
sarb
fs
sub
xchg
mov
inc
pop
std
or
aad
xor
int
jg
adc
arpl
popa
add
mov
test
push
inc
sbb
jge
mov
call
ljmp
xchg
repz
out
cmovge
sub
ds
and
pop
out
mov
dec
mov
push
fdivr
mov
jg
sbb
mov
jae
pop
sbb
push
mov
mov
ret
mov
push
ljmp
rolb
test
cmp
scas
mov
inc
lahf
clc
fisttpl
cmp
pushf
mov
push
pop
xchg
out
sbb
jnp
mov
pop
stc
mov
adc
xor
iret
and
repz
sbb
lods
sbb
dec
js
jmp
cltd
in
mov
xor
inc
xor
test
iret
mov
and
cmp
ror
loop
sbb
fmull
mov
or
gs
cmp
fsubrp
insb
pop
adc
in
vsubss
bound
call
sub
sti
aam
jae
sbbl
fistpll
cmp
shll
mov
shlb
adc
insl
mov
sbb
test
leave
adc
mov
lods
into
inc
mov
xchg
pop
fwait
sarl
fisttps
adc
pop
jp
add
cwtl
push
jne
aad
mov
lcall
sahf
scas
push
fdivrl
cmp
push
lds
adc
jmp
mov
sub
xchg
sbb
icebp
sarb
mov
xchg
or
xlat
aam
add
xor
out
adc
repz
inc
push
mov
jno
push
fisttpll
je
orb
mov
mov
jns
mov
pop
lods
dec
test
andb
sbb
int3
outsl
decl
iret
int
or
xor
mov
jge
push
mov
jl
xchg
aad
ror
nop
add
sbb
int3
mov
lahf
push
push
popa
mov
popa
mov
jae
fldt
xlat
jns
mov
inc
out
cmp
out
cwtl
dec
push
cmp
add
sbb
pop
ror
test
xchg
std
rorl
lret
push
es
clc
add
xor
fbld
lock
rdtsc
xchg
adc
std
fstl
shl
mov
and
rcrl
les
mov
in
pop
fisttps
xchg
cmp
add
aaa
mov
or
push
mov
test
pop
xchg
xchg
sbb
cmp
ljmp
out
imul
imul
xchg
jge
daa
pop
pop
jne
ret
mov
lahf
inc
inc
ss
push
stc
stos
pop
ja
cs
jg
adc
clc
sub
roll
and
cmp
test
lock
adc
or
dec
out
hlt
arpl
icebp
test
loop
push
stc
cs
adc
popa
cmpsb
shlb
mov
cmp
mov
lods
add
mov
push
les
xchg
ret
pop
pop
loop
mov
jne
xchg
mov
int
ret
shlb
xchg
in
mov
xchg
xchg
imul
rcr
inc
scas
xor
movsb
sub
inc
pop
in
xor
cmpl
and
mov
leave
pop
test
add
stos
mov
leave
xor
and
xor
sbb
dec
fwait
jmp
mov
cmp
or
pop
jle
fldt
xchg
fcomip
mov
cmp
jl
fldl
fucomp
cmp
movsb
cmpsl
imul
xchg
jae
jae
and
and
xchg
push
and
add
pop
mov
and
xor
sbb
jno
repnz
inc
fstl
test
or
test
sbb
fs
out
cmp
js
xchg
sbb
dec
arpl
jb
int3
std
xor
or
aas
push
cli
pusha
fldl
icebp
rclb
lds
sub
iret
lcall
fimull
sbb
sti
mov
xor
test
mov
test
cld
lds
and
inc
aas
ret
mov
dec
sti
pop
mov
popf
addb
leave
add
popa
mov
xor
sbb
int
dec
cmc
addl
test
and
clc
ljmp
rcrb
ja
insb
out
push
test
cwtl
inc
subb
sahf
in
insl
push
aas
xchg
scas
pop
push
adc
adc
mov
repnz
push
adcl
xor
sub
std
jl
mov
fnstenv
dec
in
mov
lds
sub
dec
mov
fisubl
fbld
inc
lret
shll
sahf
xchg
dec
out
mov
push
das
insl
push
cs
shll
outsb
subb
dec
cmp
loopne
dec
sub
adc
xor
sbb
popl
mov
add
pop
mov
testb
push
mov
fs
jmp
lea
sbb
push
xchg
sbb
jg
nop
clc
mov
push
int
out
adc
pushf
inc
mov
cmp
pop
pop
inc
xor
sub
fidivrl
or
add
or
push
mov
xor
mov
sahf
push
in
scas
stos
sar
or
sbb
and
mov
xlat
sub
adc
ljmp
cmp
inc
mov
fstps
mov
js
mov
rep
mov
mov
inc
loop
outsl
cmpsb
je
out
mov
xchg
sub
pop
push
jno
push
mov
andl
cltd
stos
cli
in
jnp
add
or
call
xor
inc
jns
pop
das
or
insb
or
push
test
enter
test
pusha
xor
aad
insb
aam
es
cmp
sub
jecxz
xor
divb
stos
xchg
mov
subb
nop
xor
aaa
aaa
and
in
addr16
lods
test
jge
pop
or
dec
mov
add
xor
stc
bnd
nop
mov
dec
xchg
mov
xchg
pushf
mov
push
mov
mov
loop
mull
xor
rol
cld
jmp
repnz
notl
cmp
jnp
out
lahf
test
pusha
call
testb
add
cmp
inc
sbb
loop
shrb
mov
mov
lcall
inc
in
jns
xor
sti
push
ror
fmull
pop
les
gs
cli
leave
lds
lds
or
pop
movsl
cmpsb
cmpl
xchg
negb
cmp
jno
inc
cwtl
test
jl
insb
jmp
mov
aas
mov
dec
pop
push
imul
mov
fnsave
xchg
xchg
gs
mov
stos
and
les
iret
pop
lret
aam
fstps
lods
xlat
fisttpll
pop
jnp
repnz
xor
sbb
pop
mov
fmuls
xor
and
test
xor
cltd
test
lret
int
mov
sub
movsb
aas
lds
mov
je
mov
sbb
pop
xchg
and
inc
add
jecxz
out
loop
outsl
mov
out
dec
lret
mov
adc
cli
mov
cmp
incl
loope
loop
fs
lret
jge
dec
add
push
fs
les
pop
pop
jo
repnz
frstor
subb
adc
insb
int3
repz
mov
mov
sti
ret
outsl
ds
jecxz
pop
sbb
cmc
xor
mull
mov
sub
jmp
xchg
in
roll
fwait
inc
sub
push
popa
in
dec
dec
mov
push
push
mov
pop
dec
mov
not
jmp
cs
pop
and
pop
mov
popf
popf
sahf
leave
mov
sub
lret
dec
std
mov
mov
lret
jmp
pusha
mov
mov
adc
and
pop
xchg
ss
sbb
cmpsl
pop
mov
test
mov
adc
scas
je
mov
push
mov
add
adc
and
dec
insl
ss
dec
adc
gs
insl
ja
inc
mov
insb
cltd
lock
mov
lods
mov
push
ljmp
lods
xchg
lods
pop
sub
addb
fs
lea
push
xchg
rorb
add
and
pop
mov
xchg
paddsb
sbb
adc
add
test
into
andl
insb
in
pop
lock
sbb
test
mov
push
daa
lahf
fildl
ds
stos
cmp
js
lock
sbb
sti
mov
jmp
push
fwait
js
or
mov
cmp
xchg
ja
xor
xor
sbb
outsb
aaa
adcb
push
mov
jg
cs
les
xlat
mov
inc
push
cmpsb
divb
xchg
js
sub
mov
push
in
mov
push
push
lret
call
mov
adc
les
push
in
jbe
xlat
arpl
cmp
add
into
out
rcrb
xchg
clc
cmp
ret
mov
push
movsb
xor
scas
andb
mov
mov
jl,pt
xchg
add
mov
pop
or
sbb
lret
push
shll
testb
pop
into
and
pop
scas
inc
out
pop
ljmp
mov
and
bound
popf
out
mov
sti
imulb
repnz
or
mov
xor
xor
sub
aam
and
cwtl
add
cld
jl
sbb
push
mov
or
sahf
push
loopne
call
shrl
hlt
mov
sbb
xchg
clc
mov
pop
lcall
pop
push
xor
cmp
loop
pusha
inc
mov
into
cwtl
sbb
or
add
imull
mov
mov
adc
and
lock
and
outsl
sub
cltd
and
testl
out
clc
ss
lahf
adc
loope
sub
data16
jecxz
cmp
xor
testl
push
repz
push
call
adc
push
arpl
xchg
and
push
inc
sbb
and
ds
pop
cld
or
shrb
jno
dec
or
ja
adc
iret
jp
outsb
ja
imul
jecxz
lea
lcall
push
jmp
cld
jp
mov
icebp
rcr
mov
add
pop
push
mov
out
std
leave
sbb
jnp
inc
movsb
repnz
mov
add
mov
fistpl
adc
lods
sbb
jp
stos
into
dec
sahf
and
aad
dec
and
fdivrs
fistpll
int
push
popa
pop
sbb
inc
addr16
idivl
pop
pop
es
fisttps
insb
std
fisttps
jno
or
mov
pop
data16
inc
idivl
mov
and
lahf
dec
ror
xor
xor
xchg
inc
movsl
vpunpckhwd
imul
push
loopne
outsl
jns
clc
sub
mov
mov
push
xchg
mov
mov
jle
fldenv
inc
jae
jns
sti
ror
xor
or
into
xorb
push
std
jbe
lea
aaa
add
sbb
push
stc
mov
adc
ljmp
fwait
movsb
cmp
sahf
lahf
outsl
add
mov
adc
ljmp
aad
lretw
scas
pop
cmp
clc
lcall
sbb
insb
imul
scas
sub
and
leave
push
add
push
test
pop
pushf
lock
rclb
add
sti
sbb
xchg
xor
inc
imul
jp
test
das
jg
stos
negb
sub
mov
mov
sahf
sbb
std
sbb
test
jg
test
enter
fs
mov
mov
out
dec
push
in
lret
mov
sub
sub
mov
sti
clc
hlt
or
push
test
outsl
or
in
xchg
into
loope
cwtl
jae
int
test
sub
pop
sbb
mov
sarb
add
jbe
dec
sbb
mov
test
lock
inc
xor
pop
dec
outsl
pop
and
xor
jge
pop
cmpsl
loop
pop
and
mov
out
pop
out
xchg
jmp
out
dec
adc
stc
dec
add
arpl
cld
mov
out
das
daa
or
xchg
jae
sub
jl
mov
adc
fwait
stc
dec
xchg
fucomip
jne
inc
insl
mov
sub
dec
outsb
shrl
call
sub
bound
jae
jnp
jnp
ljmp
fldenv
sahf
mov
dec
mov
leave
jmp
cmpsl
insl
int
lods
cmc
push
rorl
pop
inc
gs
mov
hlt
xchg
stos
xor
mov
inc
lret
pusha
jae
arpl
sbbb
pop
sbb
cmp
mov
add
sbb
scas
popa
pop
and
loopne
adc
adc
in
and
jg
stc
stc
cmp
push
stc
and
ss
push
icebp
add
xchg
in
xor
out
das
aaa
orb
ficompl
add
fwait
imul
mov
sbb
adcb
lahf
mov
mov
pop
ljmp
es
cmp
incl
in
nop
pop
lcall
rclb
fimull
mov
xor
lds
add
mov
push
dec
inc
cmc
nop
out
cwtl
mov
push
inc
sbb
cmpsb
aad
or
dec
inc
inc
cmp
sub
andb
insl
ljmp
arpl
scas
ss
adc
fs
sub
push
push
call
add
xchg
lahf
dec
mov
xchg
pop
xor
or
leave
addr16
xor
sbb
and
sar
imul
addb
push
inc
adc
dec
inc
dec
mov
fldt
scas
pop
xor
mov
and
cmpsl
fucomp
mov
nop
or
shl
fsubs
repz
cs
mov
cld
std
jmp
in
cs
lret
jge
xchg
lahf
ret
in
push
lds
push
jo
icebp
cmp
xor
mov
jmp
mov
stos
popf
pop
jnp
paddusw
mov
cltd
out
pop
push
jnp
pop
mov
dec
das
add
lea
clc
mov
mov
add
inc
sub
fwait
enter
fwait
sbb
es
jb
inc
adc
popl
cmc
xchg
cmp
xor
pop
push
cmp
mov
cs
and
je
xor
mov
adc
cli
jle
cmc
sbb
shll
inc
dec
movsl
clc
adc
out
sbb
jmp
mov
push
jle
jl
ret
adc
ljmp
xor
sbb
adc
dec
and
aam
mov
insl
sti
out
rcr
add
inc
int
cmp
lahf
pop
add
fisubl
sarb
adc
xchg
cwtl
push
pop
loopne
popf
and
push
jle
xor
cmpsb
mov
or
mov
int3
dec
int3
inc
scas
mov
or
sbb
out
xchg
inc
and
adc
lahf
aad
test
inc
dec
inc
inc
into
mov
or
outsl
into
or
pop
loop
stc
lahf
out
cmp
nop
pop
xor
jl
test
push
push
and
mov
mov
repz
xchg
dec
loop
push
aam
inc
mov
mov
jp
stc
mov
mov
mov
in
lcall
je
imul
ja
sub
push
push
je
add
pop
rcll
callw
cmp
jle
and
in
xchg
push
inc
mov
push
adc
inc
jl
adc
or
mov
or
popa
add
mov
mov
insl
mov
sub
pop
mov
bound
xchg
fcompl
scas
pop
les
cli
mov
sub
cmc
cmp
js
xchg
je
ss
push
aam
subb
xlat
repnz
inc
inc
xchg
cmp
out
cld
jbe
jne
pop
lcall
cmp
mov
nop
xor
sub
cmp
mov
pop
mov
popf
jle
fcoms
push
mov
mov
jg
inc
mov
push
daa
movsb
fadd
or
pop
sbb
dec
push
gs
push
xchg
rol
push
ror
dec
call
cltd
jns
lsl
std
and
push
jl
popf
adc
in
add
mov
jb
inc
mov
inc
ja
fld
subl
rolb
push
das
mov
push
and
add
jecxz
test
je
lods
and
sub
fmull
xor
into
cltd
jno
dec
and
xchg
shrl
xchg
cmpsl
arpl
cmc
mov
out
mov
clc
dec
adc
ja
std
dec
add
sbb
movsb
adc
sahf
test
jmp
sahf
mov
rorb
imul
in
in
lods
pop
mov
popf
dec
cmpb
cli
xchg
lock
out
cli
sbb
insb
loopne
inc
je
add
adc
mov
es
push
xchg
stos
xchg
insb
push
cwtl
jmp
xchg
adc
test
popl
popa
rcrb
int
imulb
dec
cltd
clc
xlat
dec
jno
cmp
mov
insb
xchg
pop
xchg
push
jo
stc
cmp
sbb
nop
lods
dec
lods
nop
or
ret
or
or
cmp
xlat
lea
xchg
and
mov
loope
cs
mov
stos
push
xchg
out
stos
jae
decb
stos
lea
aam
rcl
and
fstpl
xor
mov
jnp
jge
pop
jb
sbb
add
jl
pop
inc
jns
insb
test
stc
cld
cltd
sbb
in
stos
in
dec
pop
mov
rorb
test
push
mov
add
arpl
sbb
xchg
push
ljmp
jl
movsb
pop
es
xchg
mov
dec
arpl
xchg
les
out
sub
rclb
pop
mov
icebp
push
xchg
cmp
arpl
insb
in
lock
in
dec
cmc
or
cwtl
pop
imul
pop
call
insl
jnp
and
and
or
insb
xchg
out
dec
mov
xchg
inc
test
repz
add
mov
push
addr16
or
shr
cwtl
sbb
stos
sbb
mov
movsb
lcall
repnz
in
jp
negl
scas
insb
lea
int
jmp
lcall
out
mov
lea
and
cmpsl
jmp
fwait
mov
xor
andb
fadds
mov
xor
cmp
mov
aaa
test
ds
jnp
fsubrs
dec
lds
or
push
xchg
jle
sarb
adc
push
inc
xlat
push
popa
ds
aam
in
xorb
dec
into
rcl
imul
push
movsb
movsl
cmc
push
incb
out
jmp
clc
and
test
add
and
lds
push
dec
push
sbb
or
lea
fisttpl
cmp
cld
push
in
add
inc
xchg
or
mov
sbb
hlt
cli
int3
cmpl
das
jp
rep
sub
aaa
and
jo
rclb
add
dec
jns
dec
popa
push
xor
insl
and
jb
stos
hlt
cmpsl
jl
sti
push
dec
lock
dec
cmp
dec
outsl
lods
int3
stos
adc
or
push
pop
dec
adc
stos
xlat
pop
idivl
mov
sbb
lahf
lret
movsb
push
into
leave
and
movsl
and
inc
repz
xchg
jb
int
push
jge
sbbl
xchg
adc
popa
sarl
inc
pushw
cmpsl
nop
mov
lods
fs
mov
mov
aas
dec
dec
push
cmp
mov
push
cmp
mov
adc
fnstcw
mov
cmpsb
mov
clc
push
pop
repnz
add
adc
call
mov
push
jecxz
and
movsb
jo
jecxz
jecxz
sub
imul
push
add
in
into
mov
sub
jp
pop
notl
xor
xchg
loop
sti
inc
mov
sbb
in
in
xchg
jp
aad
fildl
stos
out
or
xchg
add
out
pusha
imul
jle
jp
pushf
fcmovnbe
jle
fwait
push
stos
iret
add
pushf
inc
cltd
push
mov
cmp
or
ljmp
mov
lea
lea
jl
into
loopne
fucomi
jp
std
inc
and
xchg
cwtl
and
fistpl
jl
dec
pop
shrl
mov
repz
lahf
jae
das
mov
sti
loopne
add
push
in
or
cltd
enter
shll
into
xlat
jg
test
pop
scas
insb
rcrl
dec
xchg
sbb
mov
cmp
fists
push
or
mov
push
sub
out
jnp
xor
mov
mov
js
push
hlt
jo
mov
repz
in
rcpps
adc
iret
imul
into
popa
mov
rorl
mov
push
das
cld
out
cmpsb
insl
ret
outsl
jne
ljmp
ljmp
adc
jbe
jnp
dec
addr16
insl
mov
frstor
lock
pop
mov
mov
push
dec
pop
jg
cltd
enter
push
or
leave
jmp
mov
push
cs
les
idivl
test
packssdw
fs
adc
xchg
ret
xchg
dec
repnz
xchg
rolb
inc
lods
and
and
inc
push
gs
and
dec
xor
rolb
leave
pop
ja
mov
pop
mov
adc
inc
inc
mov
lods
mov
mov
xchg
push
fcompl
mov
adc
push
hlt
scas
cmp
cld
fdivp
leave
out
push
insb
adc
cmpsb
xchg
es
dec
cmp
mov
xchg
and
scas
pop
stc
or
push
mov
aad
ret
mov
or
xchg
xor
pop
testb
addr16
icebp
in
jmp
add
test
sbb
setno
inc
push
push
adc
inc
pop
je
xchg
push
stc
xchg
sub
dec
jb
jb
jmp
xchg
add
ljmp
scas
jnp
sub
subl
imul
fdiv
dec
push
fmul
and
scas
stos
ja
lock
jne
cmp
movsb
and
push
sahf
scas
int3
aam
mov
xorl
outsl
jl
jnp
in
add
daa
lods
pop
push
dec
and
xor
mov
pop
jge
cmp
xchg
lods
mov
mov
cmp
rol
out
shlb
sbb
js
popf
or
jae
test
jns
xor
mov
and
ret
sbb
push
cmp
inc
mov
shr
mov
mov
sub
xor
mov
xor
icebp
mov
daa
adc
xchg
mov
xchg
lahf
jnp
xor
lea
push
jo
jnp
ret
test
sub
push
push
xchg
mov
adc
pop
or
cwtl
scas
ficoms
lret
icebp
test
lcall
pusha
push
stos
stos
repz
pop
mov
test
or
hlt
sub
pusha
aad
sarl
fistpl
daa
in
rcr
inc
mov
inc
scas
and
sbb
sarl
jnp
fstpt
sbb
ljmp
xlat
mov
adc
inc
popf
jge
push
in
pusha
sarl
hlt
je
sti
cmp
jbe
mov
pop
cli
pop
fwait
fistps
pop
mov
push
push
pop
insb
jo
jnp
test
out
arpl
ret
mov
cmpsl
push
push
int3
test
imulb
cltd
mov
out
inc
cld
test
add
std
scas
mov
nop
cli
mov
add
movsl
mov
lods
xchg
je
pop
sub
gs
into
into
out
jp
stc
loopne
dec
je
add
lcall
mov
mov
pop
mov
mov
inc
insl
stos
push
xchg
xlat
je
dec
mov
cmp
mov
xchg
iret
aam
outsl
and
mov
jae
mov
mov
xchg
or
xlat
mov
test
push
xchg
int3
cli
repnz
jl
jle
xchg
jne
cltd
stos
data16
fdivrp
sub
stos
xchg
repnz
mov
addr16
add
sahf
clc
pop
jno
cmp
loop
bnd
xchg
mov
int3
sbb
pop
or
je
test
jle
scas
jne
fadd
pop
cmpsl
inc
xor
mov
shll
sbb
cmp
outsl
sbb
lahf
dec
inc
andb
popl
sbb
pop
mov
fs
out
ret
fimuls
pop
or
lcall
sbb
sbb
inc
les
repnz
lea
jb
sahf
cmpsl
pop
pop
xchg
fcomps
mov
sub
adc
testb
ljmp
push
jmp
jb
mov
inc
lea
mov
cmp
shll
mov
add
cmp
jo
adc
rcll
sbb
jl
jne
or
sbb
and
mov
in
in
jmp
cli
rcr
sbb
sti
sub
add
inc
in
xor
xchg
sbb
mov
addr16
mov
add
andb
add
jmp
xchg
aas
push
aad
mov
inc
or
leave
cmpsl
orl
mov
mov
mov
imul
sbb
mov
mov
cmp
cmp
scas
xor
rcr
sbb
sbb
shrd
jne
out
cwtl
outsl
inc
xor
fisttps
cmp
lcall
adc
mov
stos
mov
and
sbb
or
dec
lahf
cmpsl
sub
repnz
dec
shll
in
add
js
imul
mov
mov
lcall
cmp
in
movsl
cmp
mov
xor
bsr
mul
fwait
mov
push
jl
mov
inc
fisttps
adc
clc
jmp
iret
pop
shll
mov
sub
adc
sub
in
loop
std
ds
mov
sub
cmp
ja
jge
fnstenv
or
xchg
and
cmp
outsb
int3
stos
insl
push
popa
repz
pop
aam
mov
mov
bound
jmp
push
adc
in
fnstcw
and
fldt
aaa
sahf
ret
mov
pop
jge
popa
cmp
add
pop
stc
and
sub
je
add
jae
sbb
in
add
dec
push
outsl
cwtl
dec
ljmp
push
les
fcoml
mov
jp
sub
adc
sbb
enter
int3
jp
pop
xchg
das
movsl
lock
sub
mov
and
adc
jb
add
in
adc
adc
lock
movsb
fnsave
mov
in
fs
and
popf
sub
sub
add
outsl
mov
lahf
push
rorb
push
mov
pop
movsb
xchg
push
cmp
push
pop
aad
inc
push
mov
mov
insb
in
add
insl
ret
push
dec
push
and
pop
sarb
aaa
jle
into
add
dec
jb
movb
in
xchg
cmp
xorb
push
roll
mov
jnp
xor
xchg
subl
or
adc
imul
dec
lock
push
repz
out
aas
push
jle
test
dec
addr16
pop
es
mov
out
push
fstps
sub
cmp
inc
and
outsl
push
and
push
mov
test
jp
sub
mov
cmp
xchg
adc
xor
and
jns
cs
inc
cmc
push
jge
enter
das
loopne
adc
mov
dec
or
cmp
je
aad
stos
dec
mov
fistpl
sbb
xor
lea
sbb
ljmp
mov
divb
dec
xor
leave
push
testb
and
into
clc
cmpsb
cmp
or
lcall
mull
sbb
or
inc
imul
mov
cmp
mov
mov
int3
xchg
and
push
pop
imul
arpl
imul
adc
push
iret
lods
idivl
out
lret
sti
mov
rorl
mov
pop
repz
inc
mov
fmull
cmp
inc
out
xchg
test
int
imul
and
mov
dec
adc
adcb
inc
std
ss
push
rcll
mov
into
xchg
pop
nop
fs
mov
or
int
in
jle
das
adc
shll
push
pop
and
inc
test
and
and
popf
push
or
xor
sub
inc
push
jl
dec
popf
sbb
xchg
mov
or
push
inc
xchg
loop
jg
dec
or
in
xor
repz
in
jle
int3
data16
push
cmpsl
fwait
sub
loop
adc
js
jg
jge
xor
fidivl
pop
push
and
ss
icebp
rorl
inc
nop
dec
sahf
stc
int3
lret
pusha
xchg
dec
sub
in
mov
lock
movsl
fsts
xor
push
mov
jge
scas
imul
pusha
clc
jno
xchg
inc
xor
nop
jge
decb
pop
push
int3
mov
fimuls
mov
cmc
lea
sub
mov
dec
xor
jno
xor
jg
xor
inc
and
fdivrl
outsl
stos
lcall
test
scas
sbb
xchg
adc
mov
popf
mov
jno
dec
cmpsl
out
and
xor
scas
sbb
push
sbb
pop
sti
and
scas
inc
or
or
loope
shll
repz
xor
dec
into
rorl
xchg
xchg
frstor
and
jbe
push
test
popa
mov
ret
or
and
sbb
mov
mov
call
addr16
shll
lea
cli
jp
dec
jae
push
jno
rorl
push
scas
inc
ljmp
push
loope
fld1
cmc
inc
inc
jge
std
add
ljmp
push
xchg
out
dec
adc
push
or
ja
and
das
mov
pop
or
mov
movsl
add
in
mov
sub
loope
lahf
ja
sbbb
push
pop
es
dec
dec
push
cld
dec
ja
mov
sbb
jp
inc
inc
pusha
aam
jmp
addl
incb
stc
xchg
iret
rcrb
bound
repz
cld
sahf
andb
mov
jmp
orb
jl
jge
cwtl
lods
test
scas
mov
pop
pop
push
lahf
xor
xchg
mov
in
imul
push
flds
push
aad
jno
xchg
jnp
pop
push
das
xor
andl
bound
idivb
mov
inc
test
loopne
cmp
mov
dec
fildl
into
and
mov
popa
movsl
or
mov
or
jnp
inc
mov
sbb
negb
popf
pop
icebp
mov
adc
jge
fildl
adc
movsb
inc
stos
lods
jne
lods
loopne
arpl
pop
aad
loop
out
enter
out
subl
jg
push
inc
outsb
push
cmp
inc
loopne
pop
jae
inc
sbb
div
inc
xchg
scas
fbstp
sahf
in
pop
sub
rol
pushf
jno
lock
push
mov
xor
cmp
add
push
xlat
shll
push
xor
mov
jg
into
dec
sub
pop
adc
or
mov
stos
xchg
push
fldenv
mov
pop
mov
lahf
lock
shrl
sbb
sbb
xchg
cmp
lods
cmpsl
cli
push
adc
mov
lods
outsb
push
or
cmpsb
push
push
movsl
dec
outsb
jno
inc
lret
ds
xchg
inc
jge
cwtl
fwait
clc
sar
sub
pushf
mov
enter
ss
sub
or
mov
lds
sbb
xchg
sub
and
xchg
loop
rcr
mov
cmpsb
push
das
out
sti
enter
ds
pop
lret
add
rorl
mov
scas
mov
movsb
jg
lea
jo
push
punpcklbw
jbe
sub
push
dec
mov
js,pt
lods
ffree
out
sbb
mov
xor
ljmp
loope
notl
mov
or
mov
lcall
jl
rcr
test
and
test
enter
in
imul
push
jmp
jge
ror
mov
shlb
dec
mov
into
push
cwtl
sub
pop
iret
add
inc
mov
jl
ss
fstl
lods
xchg
insb
js
cli
push
adc
push
jmp
fildll
ds
mov
arpl
jecxz
xchg
fstl
movsl
in
dec
mov
adc
jecxz
xor
fmull
dec
sbb
mov
cmp
test
rcrl
or
cmp
jbe
mov
and
mov
xchg
stos
adc
shrl
nop
pop
jns
imul
sbb
stos
pop
scas
sub
sbb
fistps
lret
mov
dec
pop
cmp
inc
rcl
dec
inc
dec
xchg
cltd
lods
jmp
inc
fdivrp
mov
dec
data16
es
sbb
js
fwait
loope
rorb
loope
hlt
leave
mov
or
nop
adc
subb
mov
pop
mov
repz
jecxz
scas
xor
xchg
xlat
mov
mov
xchg
mov
sti
push
sbb
lea
cmpsl
xchg
cmp
sbb
imul
sub
fidivrl
pusha
mov
or
mov
ficomps
lret
ss
iret
inc
dec
cltd
sti
sub
jne
and
stc
insb
inc
sbb
lret
aas
aad
loop
mov
mov
pop
out
push
mov
call
or
jecxz
loope
shll
push
andb
xchg
jne
or
cmp
mov
pop
xchg
sahf
cmp
out
or
xor
pop
outsl
or
dec
lods
or
mov
js
push
xchg
popf
xchg
xlat
push
pop
mov
imul
xchg
cmp
pop
call
mov
pop
fnstenv
lock
call
xor
popa
sub
cmp
aam
cmpsb
lret
in
lret
dec
out
cs
aaa
fwait
mov
push
popa
cmp
inc
stos
adc
aaa
out
or
int3
mov
cmpb
std
popa
dec
mov
jne
jp
mov
aam
mov
out
xchg
push
loope
and
adc
bound
mov
jge
iret
mov
js
jecxz
ljmp
clc
ljmp
xchg
cmpsl
cmp
shll
xorb
sbb
clc
cmpsl
pop
loope
outsl
push
ljmp
loop
dec
xchg
add
dec
adc
cmp
add
push
or
aas
jecxz
pop
sahf
dec
pop
es
nop
dec
shll
mov
dec
lods
shlb
sbb
rolb
jp
push
ja
push
ret
ret
adc
rorl
and
inc
cmpsl
rolb
dec
sbb
nop
sarb
scas
jno
cli
jmp
dec
addl
inc
sbb
dec
outsb
mov
and
xor
fwait
ja
xchg
mov
mov
sbb
fdiv
ret
xchg
ss
sbb
push
jle
lock
sti
dec
cmpsl
mov
test
pop
push
or
pop
and
pop
xchg
add
aaa
add
or
xor
dec
daa
movsb
cwtl
dec
or
test
jp
daa
shrl
mull
push
push
dec
pop
mov
rorb
jae
negl
push
addb
push
mov
adc
xchg
pop
mov
mov
pusha
add
add
or
cs
push
lock
push
cmc
pop
sti
sub
outsb
in
pop
loope
stos
loop
lds
mov
push
mov
dec
shl
pop
lahf
in
repnz
xor
cmp
je
cltd
pusha
inc
xor
pushaw
dec
adc
bound
jae
test
out
lea
movsl
xchg
shrb
jb
xchg
pop
sarb
adc
fucomi
bound
insl
ffreep
dec
push
pop
xchg
stos
lods
push
in
cld
bound
mov
shrb
rcrb
or
in
mov
mov
movsl
xchg
fs
lods
mov
shlb
xor
jb
mov
pop
or
xchg
mov
push
jae
cmp
cs
xor
hlt
aam
mov
mov
fs
pop
inc
ret
aaa
inc
fsubrp
cltd
mov
cmp
icebp
jae
ss
std
sub
fcoml
subb
cltd
push
lock
mov
mov
lock
and
jo
jo
mov
out
dec
lock
inc
sub
dec
push
dec
sbb
test
out
jg
mov
ds
mov
stos
jnp
rol
sub
jno
xchg
mov
and
jbe
lods
scas
add
mov
mov
in
dec
mov
enter
push
mov
jle
push
js
out
aaa
lret
lods
inc
faddl
daa
add
inc
add
dec
pushf
lea
scas
push
push
or
dec
loop
cld
test
dec
fcomip
inc
and
fwait
inc
adc
out
int3
and
and
xorb
fstl
pop
dec
jp
dec
outsl
mov
jbe
and
push
scas
andb
jecxz
in
subb
mov
jno
shr
orb
imul
psrlq
int
scas
jecxz
add
out
xchg
mov
mov
adc
sub
popf
aam
xchg
cld
xorb
imul
lea
dec
and
ja
jno
cmpsb
jl
insl
push
mov
pop
rorl
push
ds
cwtl
popa
stos
mov
jmp
inc
and
cmp
int3
jp
and
pop
mov
mov
loop
and
stos
sarb
enter
mov
sub
mov
insl
mov
lahf
fabs
or
and
insb
xchg
imul
cltd
jmp
adc
pop
cmp
xorl
fcoms
cmp
outsb
dec
dec
imul
sub
in
inc
out
inc
mov
add
push
cmpsb
nop
pop
push
lods
imul
fidivl
int3
jp
mov
and
lock
fmuls
and
ljmp
xchg
movsb
cmp
jge
repnz
mov
inc
pusha
movsb
testl
xchg
xchg
dec
scas
xchg
sub
pop
jp
cmc
addr16
lcall
inc
push
insb
hlt
js
sub
shr
jmp
push
jge
sub
or
mov
fcmovnbe
lret
gs
rcr
or
cmpsb
outsb
jae
dec
push
mov
stc
dec
test
fadd
sahf
jno
imul
mov
and
cmp
insl
jmp
lahf
daa
andl
xor
nop
jns
xchg
sahf
dec
xor
rcrb
mov
push
sbb
mov
popa
stos
xchg
xchg
insb
int
adc
xchg
in
js
push
mov
sub
shlb
push
insb
lds
std
mov
movsb
mov
jb
iret
aas
or
jmp
or
dec
xor
xchg
lods
mov
lcall
mov
sbb
jns
clc
pop
hlt
test
adc
inc
pop
push
adc
les
push
lods
fistl
mov
sbb
pop
aam
leave
out
repz
das
jl
repnz
shll
pop
leave
cmpsl
aaa
add
fsubrs
sysexit
mov
mulb
sub
mov
mov
mov
nop
mov
sahf
xchg
dec
cld
imul
je
pop
jmp
add
inc
div
cmp
shr
out
xor
lds
aas
mov
adc
stos
subb
cmpsb
mov
scas
xchg
scas
push
push
lods
mov
pop
add
lds
lds
fisttpl
lret
sub
pop
cmpsb
dec
pop
test
imul
pop
and
es
xchg
iret
clc
jb
jnp
mov
hlt
mov
dec
mov
popa
insl
movsb
jae
add
push
outsb
sarl
pop
aam
das
scas
movsl
mov
sub
notb
or
adc
push
sbb
pop
test
jecxz
mov
shr
into
jge
add
jecxz
xlat
push
push
xor
mov
dec
sbb
lret
jecxz
push
ret
or
mov
mov
out
test
add
xchg
lods
push
mov
ja
add
sub
scas
push
test
popa
mov
shr
jge
mov
push
dec
jo
pop
cltd
mov
mov
or
xor
enter
push
mov
or
xor
jg
test
call
movsl
repnz
add
lret
sahf
inc
mov
iret
div
outsl
test
lea
out
xlat
or
iret
xchg
xchg
mov
mov
dec
shlb
cmp
cmp
xor
loop
push
mov
mov
jp
shrb
jge
cmp
adc
mov
xlat
and
repnz
iret
mov
fcompl
mov
lods
daa
mov
xor
cmp
repnz
fnsave
and
popf
pop
or
push
clc
lea
push
dec
out
or
aas
xchg
lock
rclb
dec
mov
dec
lds
test
jmp
fcompl
test
daa
add
sbb
rorb
cmp
mov
mov
das
dec
xchg
sub
push
shlb
adc
orl
jg
xor
pop
jle
cmp
pop
mov
stc
jns
int
push
adc
in
fcoml
fwait
push
sub
das
xchg
dec
movsl
inc
inc
mov
inc
or
mov
filds
test
and
jge
mov
fwait
aas
insb
test
or
cli
loopne
push
adc
inc
push
lods
sub
jle
push
lods
add
xor
mov
imul
rol
xchg
call
stos
mov
shrb
nop
xrelease
mov
inc
test
xor
mov
dec
pop
dec
inc
cmp
xchg
push
fisttpl
cmpsb
fisttpl
adc
mov
adc
mov
mov
mov
fiadds
inc
outsl
mov
push
pop
mov
int
mov
data16
test
jb
jno
rorb
mov
mov
adc
std
or
gs
or
fwait
test
arpl
xchg
or
xor
lock
add
ss
jb
xlat
cmp
ljmp
insb
mov
mov
push
mov
roll
and
loope
xchg
sbb
gs
std
or
xchg
mov
pop
out
es
nop
pop
scas
ja
lahf
pop
scas
dec
inc
clc
addr16
xorl
or
gs
insb
push
jl
pop
or
dec
push
insb
and
fidivrs
inc
data16
mov
aad
push
add
xor
mov
pop
sbbb
adc
mov
mov
push
rcrb
sar
stos
adc
pop
push
inc
jecxz
pusha
out
lock
xchg
cmp
mov
shrb
mov
fmuls
xor
loope
pushf
xchg
leave
push
and
imul
cld
pop
xchg
loopne
xor
outsl
jl
cmp
add
loopne
dec
daa
pop
movsl
icebp
loop
push
push
stos
pop
jp
xchg
loop
icebp
xchg
rol
pusha
ljmp
push
inc
push
mov
jl
daa
stos
cld
outsb
sbb
pop
jno
inc
sbb
mov
aaa
adc
fwait
lea
mov
xchg
ja
sbb
inc
cwtl
jmp
and
ret
test
inc
loopne
xchg
push
jb
cmpsb
adc
xor
mov
cmp
out
fcomip
pop
imul
mov
aas
imul
popf
out
push
stos
lock
mov
mov
insb
stos
push
icebp
lods
lds
mov
imul
aas
scas
push
adc
xchg
cmpsb
add
jno
lret
inc
iret
sbb
jmp
inc
xchg
xchg
xor
add
gs
fs
sbb
popf
fdivp
jmp
sar
sub
cmp
jbe
xor
or
inc
stos
push
push
pop
or
flds
fildll
mov
sti
or
in
in
mov
std
in
adc
fdivs
pop
cmp
jg
out
jb
mov
pop
mov
dec
aad
add
loop
test
lret
cli
sbb
cmp
or
mov
mov
mov
xchg
sub
ret
mov
inc
daa
adc
js
jecxz
nop
loope
jnp
jne
mov
gs
cmp
lea
aas
aam
sbb
mov
add
xor
sub
adc
push
sbb
mov
and
rcr
sbb
cmc
int
sub
push
lret
lea
cmp
popf
ret
test
dec
repz
loope
add
mov
dec
cmp
cli
fnsave
shlb
pop
pop
imul
mov
in
mov
into
pop
stc
adc
cmpsl
aas
and
cmp
arpl
mov
jo
lds
and
push
pop
mov
scas
ret
push
inc
js
cmp
xchg
lret
repnz
ret
push
popl
lock
lret
xor
inc
mov
leave
jecxz
andl
xchg
mov
pop
mov
dec
jne
lock
ja
fwait
insl
insl
or
adc
dec
test
fsts
dec
push
xchg
fiadds
or
imul
adcb
fsubp
into
sbb
cmpsb
push
sbb
nop
std
scas
lret
inc
push
xchg
aad
mov
jp
sub
pop
jecxz
or
pop
xchg
pop
loope
rcr
jns
jne
repz
and
aad
mov
or
pop
orb
add
cmp
jl
movsb
sahf
ja
mov
js
arpl
xchg
push
shrl
shrb
inc
sarl
pop
adc
cwtl
xor
lret
pop
hlt
xchg
cld
sub
and
inc
mov
in
lods
inc
hlt
push
stos
jmp
mov
outsb
mov
test
cmpsl
dec
jecxz
cmp
and
roll
xor
xchg
pushf
cli
cmpsb
sub
mov
popf
or
jmp
or
shlb
sbb
les
or
mov
mov
sbb
inc
lahf
cmc
adc
adc
fs
add
jmp
cmp
cmpl
rcrb
add
pop
test
fildll
lahf
fistpl
sarb
inc
xor
cmpsb
arpl
stos
loope
int3
and
mov
stos
enter
push
push
cltd
fstpt
adc
sub
sar
sub
pusha
rorb
xchg
js
mov
mov
cmp
dec
lea
xor
lahf
shlb
jae
jo
in
sbb
sub
pop
push
lods
lock
pop
imul
pop
or
cld
mov
test
subb
pop
mov
jmp
loop
std
pop
xchg
inc
inc
pushf
lock
xchg
and
sti
jb
cmp
jg
test
popf
mov
in
mov
mov
mov
arpl
jecxz
push
pop
push
daa
dec
sbb
out
fs
or
imul
mov
or
jb
das
xchg
sbb
cmp
daa
data16
addb
or
sub
push
sti
push
rcrl
pop
sbb
inc
push
push
rcrl
cs
adc
setno
add
fisubl
mov
fsubrs
mov
sub
jo
cmpsb
adc
pop
dec
inc
add
sbb
adc
jl
pop
data16
fmuls
pop
pop
push
outsl
pop
adc
aam
or
inc
das
dec
imul
push
in
icebp
jne
adc
rcrl
movl
sub
push
ror
jmp
fimull
push
add
push
pop
xchg
cmp
push
fstpl
xchg
pop
push
inc
adc
fdiv
xchg
ret
mov
call
lods
add
mov
test
xchg
aaa
pusha
loope
das
fisubl
cmp
xchg
adc
pop
push
out
or
and
push
popa
jbe
lahf
ds
dec
lods
pop
jle
xchg
fildll
ja
inc
mov
in
enter
or
add
out
test
je
inc
in
stc
in
jne
sub
dec
inc
push
repnz
fsubrl
imul
xchg
jne
out
movsl
mov
stc
sti
out
mov
jp
mov
int
adc
in
lods
insl
aam
leave
mov
iret
jmp
addr16
jle
movsb
int
enter
sbb
adc
adc
sub
push
cmp
mov
mov
test
mov
out
insb
add
lock
stos
jno
lods
mov
mov
pusha
sti
mov
xchg
pop
dec
int
jge
adc
sbb
scas
in
rorl
inc
mov
les
xlat
jae
fdiv
mov
gs
nop
jg
cmc
jnp
push
mov
jbe
push
sbbl
and
pop
sbb
lods
add
imul
outsl
aad
pop
mov
push
repnz
insl
movsb
jle
pop
call
cmp
inc
xlat
shrb
fs
lea
fucomip
jecxz
daa
push
xor
rorl
fists
and
sbb
arpl
xchg
das
push
ret
cmp
sar
adc
out
fwait
mov
dec
rcrb
sub
pop
mov
jns
test
fdivrl
sub
adc
xchg
je
jle
dec
add
cmp
roll
add
lods
fpatan
sub
jp
cld
mov
xor
add
jns
xlat
push
jp
cmpsb
cmp
cmc
jp
sarb
xor
or
rcrl
xchg
mov
movsb
movsl
pop
push
cs
pop
push
and
xor
xchg
pusha
or
push
insl
cwtl
mov
mov
inc
cld
aad
cmc
std
leave
add
cmp
mov
adc
aaa
inc
insl
or
push
arpl
imul
fcomip
jnp
mov
lock
cmc
ret
or
add
rcrl
xorb
ret
inc
dec
adc
int
mov
add
cmp
fistps
into
dec
sub
jp
xor
jle
pushf
fiadds
xor
imul
mov
push
push
imul
add
jb
hlt
xchg
pop
add
outsb
adc
rolb
hlt
cld
mov
mov
xchg
cmp
call
pop
jp
xor
and
imul
pop
mov
fs
lret
ss
insb
adc
xchg
dec
xor
mov
ljmp
cltd
rclb
and
icebp
test
js
rolb
mov
mov
inc
xchg
clc
loop
or
adc
cltd
jbe
add
mov
push
push
pushf
xchg
loop
mov
divb
int3
jbe
je
mov
cli
push
lods
push
and
jecxz
cltd
jmp
mov
and
xor
call
push
inc
ds
mov
repz
pop
dec
mov
imul
lods
push
push
pop
icebp
stos
adc
cld
push
mov
mov
or
mov
movsb
adc
inc
cmp
aad
sub
int
push
fsubs
push
in
sahf
mov
ja
sub
xchg
imulb
jnp
in
add
fs
imul
repnz
js
call
outsl
cwtl
pushf
mov
inc
lods
dec
push
movsl
fdivrl
popf
push
js
jns
enter
scas
std
in
test
add
mov
adc
push
loop
repz
test
or
inc
pushf
lahf
sub
mov
ss
cmp
cmpsb
push
push
mov
push
les
mov
pop
mov
ja
jae
mov
push
movsl
and
lea
test
push
mov
xchg
popa
pusha
mov
sbb
scas
push
sub
sub
push
jg
mov
push
sbb
into
lcall
orl
dec
push
scas
jp
and
jge
mov
in
lods
inc
shl
pop
shl
test
mov
jp
notb
mov
fcompl
push
mov
outsl
dec
das
outsb
jge
dec
add
pop
sbb
inc
inc
shr
rorb
ja
xchg
mov
inc
lods
mov
call
pusha
stos
mov
aas
push
mov
enter
movsb
push
mov
inc
xor
dec
out
mov
ljmp
xor
outsl
pop
pop
jmp
mov
in
lahf
outsb
cli
fisubs
jnp
sub
xchg
mov
jmp
repnz
pop
out
sbbb
sti
or
test
lods
jecxz
add
pushf
push
sub
arpl
xchg
fstpl
in
xor
lcall
mov
imull
repz
add
arpl
lret
loope
mov
mov
jmp
mov
xlat
sahf
ds
mov
movsb
aad
loope
cmp
xorb
push
addr16
je
idivb
pop
rol
inc
aam
addr16
push
push
loop
push
cmpsb
cmp
lods
push
mov
out
fwait
daa
and
faddl
repnz
adc
jno
cmp
xchg
and
pop
int3
ja
mov
sbb
jno
adc
fbld
add
pop
lret
test
xchg
and
sub
out
cld
xchg
adc
ja
push
das
daa
roll
cmp
out
dec
add
pop
adc
cli
or
and
or
inc
jnp
fidivrs
hlt
imul
lahf
push
push
icebp
sti
mov
sar
adc
hlt
xor
add
push
xor
push
jae
and
or
repnz
fwait
into
and
fdivs
xlat
movsl
das
inc
and
mov
andl
push
jo
xchg
cli
arpl
or
outsl
out
fadds
xlat
cmp
mov
xchg
add
jbe
leave
dec
pop
jge
test
pusha
mov
ljmp
mov
les
movsl
mov
js
sub
insb
lea
outsl
dec
aad
cmp
es
sub
or
sbb
xor
loop
mov
insb
push
xchg
push
enter
xor
test
sahf
fidivl
lea
add
inc
and
je
inc
add
mov
aas
cmp
jle
popf
cmp
insb
fisttps
jae
sti
in
xchg
stos
movsl
adc
js
sub
testl
bound
in
adc
xor
dec
lods
mul
cmp
jp
xchg
in
test
dec
sbb
sbbl
mov
int3
inc
insl
pop
or
aam
cli
xchg
cmpsl
test
cld
push
dec
ds
dec
lret
fdivl
in
pop
push
jecxz
jle
js
pop
xchg
push
add
pop
sub
test
sub
cmpsl
ljmp
mov
call
add
fiadds
sub
mull
jg
dec
cmp
bound
int
in
shlb
dec
leave
mov
repnz
cmp
xor
outsb
dec
test
add
sbb
mov
or
mov
mov
cmc
cmp
pop
rorl
pop
mov
or
sub
fidivs
dec
das
mov
xchg
push
mov
fiaddl
xchg
or
insb
and
sub
stc
mov
stc
out
push
adc
sbb
stos
das
mov
icebp
inc
pop
fldcw
push
std
test
mov
fcompl
in
mov
lcall
pop
dec
add
ds
cmp
pop
inc
es
stc
jo
orb
push
sub
pop
scas
adc
push
dec
mov
mov
mov
outsl
ljmp
pop
jne
mov
cs
sub
std
fistps
and
mov
jge
cmp
cmp
or
in
pop
sarb
rcrl
mov
sub
test
inc
shl
imul
inc
insb
mov
xor
in
mov
ljmp
mov
pop
mov
mov
es
adc
stos
out
cmp
adc
cmp
xorb
inc
aam
mov
lea
push
sbb
xchg
shr
imul
xchg
xchg
adc
xor
mov
rcrb
mov
xchg
xorb
pop
push
cmpsb
rol
mov
jbe
inc
or
sbb
push
sub
mov
repz
mov
pop
popf
push
add
int3
or
sti
xchg
pop
lock
ja
shr
mov
test
or
pop
int3
mov
mov
dec
rcrb
jne
lret
rcll
pushf
out
and
in
popa
pop
dec
dec
mov
imul
dec
pushf
enter
ret
mov
dec
push
sbb
fwait
jl
sub
xor
mov
rcl
xchg
add
imul
xchg
outsl
xchg
sub
push
rolb
repnz
lods
pop
sub
mov
inc
popf
out
push
mov
add
cli
insb
push
inc
dec
xor
lcall
pop
push
and
ja
adc
add
cmp
sub
inc
sbb
cmp
adc
mov
imul
xchg
loopne
lods
jmp
lds
aaa
cmp
movsl
inc
scas
inc
cmpsl
xchg
add
aam
dec
movsl
inc
out
fs
pop
mov
push
sub
fcoml
pop
or
pextrw
pop
xor
mov
add
insl
insl
adcb
pusha
lea
cmc
imul
sahf
fwait
cwtl
mov
lret
dec
lea
repz
sarb
in
lcall
getsec
cmp
stc
dec
rcll
mov
adc
scas
pushf
aas
or
mov
lcall
or
or
add
push
sarb
xchg
stos
je
cwtl
imul
jne
lret
sub
or
inc
gs
jno
pushf
mov
pop
push
mov
mov
dec
cmp
dec
lods
cmp
cmp
repz
cwtl
cld
iret
fisubrl
and
mov
sbb
jae
icebp
cmpsb
or
push
sub
or
push
mov
add
inc
mov
xchg
js
dec
scas
mov
mov
mov
lds
orl
sbb
rorl
dec
scas
sbb
popa
mov
insl
and
test
fisubl
adc
loopne
mov
inc
inc
push
dec
mov
push
mov
and
lret
lahf
out
cmc
shlb
les
add
push
clc
cmc
in
mov
fnstsw
jp
aas
push
ljmp
stc
in
fwait
jmp
mov
cmpb
into
sub
cmp
mov
push
push
bound
dec
xor
xchg
mov
jno
clc
mov
into
sbb
rorl
call
add
xchg
push
enter
test
xchg
ret
stos
pop
adc
mov
mov
jbe
rcrb
std
cltd
and
xor
push
cmp
push
cmpsl
mov
adc
ljmp
lcall
cs
dec
inc
jmp
enter
das
dec
sub
push
lcall
fs
movhps
fwait
or
and
inc
data16
fcompl
or
aas
ljmp
imul
inc
and
mov
xchg
adc
xchg
lret
aaa
nop
sbb
and
xchg
mov
push
fisttpl
and
out
stc
daa
push
sbb
xor
sbb
in
jnp
scas
call
jmp
and
pop
adc
mov
inc
rclb
or
adc
out
and
xorb
std
pop
lods
aas
xchg
enter
push
rcll
mov
mov
cmc
pushl
repz
jmp
mov
xchg
lcall
adc
cmp
mov
mov
pop
inc
cmp
sub
in
mov
or
aad
fisttpl
xchg
add
out
ja
lods
push
jmp
or
mov
fistpll
lret
mov
jbe
pop
xor
sbb
cmp
daa
and
pop
clc
inc
jae
jne
iret
cmp
subb
push
sbb
adc
daa
xchg
stos
scas
or
mov
cmpsb
inc
sahf
pop
stos
push
pop
pusha
mov
in
push
leave
cwtl
push
jbe
cli
add
dec
cltd
lahf
incb
test
int3
pop
inc
push
movsb
enter
xor
and
pop
aad
add
sub
cmpb
fwait
inc
mov
sbb
int3
insl
xor
rcrl
or
fcmovbe
std
mov
sbb
ret
clc
cmp
and
in
jnp
test
mov
and
inc
mov
outsl
aaa
stos
sub
aaa
rol
test
dec
cltd
jecxz
add
jp
push
or
jo
pop
pop
js
repnz
cmp
xorl
loopne
cmp
orl
mov
add
fcomps
inc
mov
rorl
jle
xchg
aaa
arpl
adc
out
sub
ds
ja
add
aas
mov
sbb
ret
xchg
fsubrl
mov
push
shlb
push
in
sub
ja
adc
je
push
out
pushf
mov
push
and
test
adc
mov
sar
testl
pop
xor
mov
ja
loop
cld
pop
notl
test
movsl
mov
loop
mov
stos
stos
xchg
out
xlat
test
scas
push
adc
pop
subl
xchg
sub
loop
and
sub
loopne
lods
lock
jecxz
xchg
jno
sub
sub
jecxz
and
data16
adc
lds
out
mov
cmp
mov
pop
stos
lea
enter
es
lea
loop
aad
sbb
lret
add
sub
rcrb
fwait
jecxz
sbb
and
jno
dec
adc
test
sbb
push
add
addl
mov
jl
pop
sub
popf
pop
mov
shr
dec
add
and
jbe
iret
push
or
jle
jae
add
or
push
add
xchg
mov
into
or
ja
sbb
push
shlb
xor
push
inc
or
dec
mov
rorb
mov
mov
add
lea
and
fdivs
inc
xorb
cwtl
fs
or
fsubrs
mov
cmp
fdivrs
jl
imul
push
xor
loopne
mov
je
fwait
mov
shl
out
pop
push
cwtl
push
sub
adc
xchg
pop
leave
mov
loope
clc
jns
sub
xchg
mov
jno
rclb
dec
lods
pusha
mov
xorb
dec
sub
iret
push
xchg
mov
dec
pop
fildll
fiadds
dec
fdivrs
mov
add
clc
cmp
inc
push
jnp
cmp
or
or
mov
mov
mov
out
xchg
pusha
repnz
adcl
add
test
jnp
lret
pop
std
das
xor
push
jge
bound
mov
test
mov
mov
or
es
testb
mov
js
jno
fwait
icebp
or
xor
sbb
in
push
or
jp
xchg
imul
inc
in
jmp
push
negl
lock
cmpsb
movsb
or
fcomi
es
add
push
mov
je
push
mov
idivl
insl
orb
test
cmp
push
inc
out
fcmovnbe
pushf
push
mov
push
push
inc
jecxz
dec
subb
stos
mov
or
mov
jae
cmpsl
outsl
jbe
sbb
sub
jp
icebp
and
push
jae
inc
adc
mov
sbb
mov
or
jl
mov
dec
pop
or
dec
inc
std
add
lret
bound
and
ja
int
ret
sub
repnz
insb
jno
cmpsl
cmp
mov
xor
mov
aaa
dec
pop
push
pop
or
stc
pop
xchg
test
jge
jmp
pop
hlt
cli
push
daa
je
sub
cli
arpl
cvtpi2ps
gs
xor
jecxz
jmp
jns
insl
pop
mov
sarl
in
add
nop
pop
cmp
push
lods
rorb
sub
mov
out
test
enter
cmpsl
dec
lcall
mov
xor
ret
cld
adc
cmp
mov
and
cmp
popl
xor
test
sbb
fs
aad
jp
in
mov
xchg
in
xor
sbb
leave
jns
scas
arpl
inc
push
fldcw
orb
adc
popf
lcall
mov
gs
movsl
mov
cmp
movsb
iret
sbb
out
js
lret
and
fs
arpl
sti
rolb
inc
popf
pavgb
and
mov
pop
push
movsl
pop
sbb
mov
xchg
loope
rcr
imul
xorb
mov
movsl
mov
dec
clc
add
cs
pop
jb
lds
pop
outsb
into
out
stc
mov
xchg
lock
inc
xchg
pusha
jo
jg
out
xor
xor
push
cs
mov
cmp
xchg
xor
xor
clc
push
inc
inc
mov
mov
inc
mov
mov
aas
jmp
dec
pop
arpl
add
clc
xchg
pop
repnz
fdivrp
jbe
nop
pop
xchg
and
bound
inc
sbb
push
lahf
push
cmpsb
mov
les
cmp
sub
add
repz
cmpsb
push
mov
jo
roll
ja
or
fwait
test
es
mov
pop
ret
sub
int3
push
movsl
leave
mov
mov
shr
mov
xchg
sbb
and
and
sub
sbbb
cmpl
xor
ss
jns
jb
aam
and
fisubs
push
pop
adc
out
pop
ja
xor
push
stos
int3
push
xchg
jmp
pop
shrb
arpl
out
push
enter
push
roll
sub
aam
ret
mov
or
xor
ja
jnp
jge
mov
push
pop
loope
jmp
test
xor
lds
mov
mov
ret
inc
out
stos
cmp
push
pop
xchg
lret
lret
and
xor
fucom
andl
out
stos
clc
ja
insl
les
call
or
add
dec
jp
or
cmp
sbb
jmp
dec
dec
popl
ljmp
enter
pop
loopne
or
mov
inc
xchg
out
dec
xor
mov
leave
std
vmwrite
add
sbb
leave
lods
sub
fidivrs
cmp
mov
inc
jl
mov
nop
push
sub
popa
bound
in
inc
mov
jno
and
stos
and
pop
inc
jmp
mov
daa
xchg
mov
dec
fidivs
and
dec
xor
lret
dec
das
jbe
cs
mov
jecxz
ljmp
jecxz
int3
aam
fnstenv
je
lds
mov
outsl
jo
mov
fdivrp
popf
jp
mov
mov
lcall
or
push
insb
push
fstps
and
mov
pop
aaa
fimull
or
adc
xor
les
fldcw
xor
repnz
mov
addl
std
mov
lea
fmuls
cmpsl
or
insb
movb
fldenv
sbb
out
jle
pop
pop
mov
sub
insl
test
jp
jp
xchg
in
adc
imul
cwtl
repnz
sub
mov
and
jl
and
outsb
xor
outsb
pop
andb
xchg
mov
jbe
lds
mov
and
mov
cmp
sbb
jno
xor
adc
inc
lahf
cmp
sub
aaa
test
mov
fldcw
outsb
mov
jae
rol
fstl
mov
out
or
clc
jge
scas
sbbb
outsb
cmc
mov
xchg
add
out
jne
mov
lock
std
shll
xlat
clc
loope
xor
mov
adc
testb
clc
outsl
insl
movsb
sbb
inc
scas
mov
imul
mov
cmp
inc
xchg
xorb
pop
cmp
xor
and
sbb
mov
mov
fmuls
jl
lea
or
mov
rcr
test
dec
jns
cmpsb
in
xor
or
xchg
into
inc
lea
cli
mov
jge
xor
jbe
sbb
inc
iret
cmp
or
stos
ds
and
je
repz
cld
sbb
orl
adc
jae
xor
in
pop
or
adcl
mov
xchg
cld
pusha
xorb
shlb
stc
test
mov
pop
or
std
int3
ljmp
xor
pop
dec
sub
inc
add
fbld
push
lea
hlt
sbb
pop
inc
rcrb
adc
fs
cltd
add
adc
mov
sub
into
xchg
jne
in
sahf
lret
cltd
xchg
or
aam
imul
data16
or
push
or
cli
pushw
mov
mov
sbb
xchg
xchg
sbb
jno
lea
lret
das
mov
inc
mov
adc
out
jg
les
popf
jno
pop
add
rorl
subb
movsb
arpl
pop
and
jmp
pop
in
xchg
mov
cltd
lds
push
ljmp
sub
sar
scas
mov
iret
mov
outsl
dec
sbb
xor
test
mov
andl
lsl
lar
mov
and
inc
mov
rcrb
lods
push
pop
ja
data16
ja
cmpsl
cmpsb
cld
imul
ljmp
outsl
adc
mov
out
popf
sbb
out
fucomi
push
int3
leave
lret
mov
and
push
or
imull
imul
add
mov
jmp
add
lret
outsb
sub
fdiv
aaa
sub
jmp
jno
jmp
dec
test
dec
std
imulb
jns
push
std
add
cmp
movsb
loop
jo
adc
pop
mov
lcall
ds
mov
sbbb
test
or
xor
int3
sbb
out
les
push
mov
fdivs
dec
dec
sarb
dec
push
pop
test
push
stos
ficomps
mov
mov
and
aaa
mov
fiadds
lret
inc
sub
push
mov
push
arpl
push
mov
xchg
sbb
rcll
jb
mov
or
xchg
sbb
xchg
sarb
or
sub
add
inc
wrmsr
pushl
xor
outsl
lret
sbb
mov
sbb
xchg
mov
pushfw
lret
push
out
or
inc
jp
pop
push
xchg
dec
add
ficoms
push
xlat
pop
adc
stos
sub
push
es
outsl
repz
add
fldt
jo
mov
push
movsl
cmp
je
test
inc
pop
push
loop
clc
mov
nop
fs
sub
call
or
shl
mov
addb
fistpl
lds
cltd
data16
pusha
pop
iret
test
xor
dec
loop
xchg
dec
loop
ljmp
add
loopne
adc
popf
dec
in
fdivrl
je
fidivl
adc
imul
jmp
test
mov
cli
inc
mov
sbb
xorb
repnz
xchg
test
out
je
mov
inc
add
jle
outsl
shr
lds
out
mov
call
mov
decl
out
test
xor
adc
pushf
shll
fstps
notl
lret
sbb
sbb
sbb
sub
and
and
pop
les
lock
es
or
stc
cmpsb
loope
pop
nop
xchg
stos
jg
rcrb
inc
mov
leave
xor
mov
ljmp
lret
shll
rcll
push
mov
dec
pusha
std
and
cmp
cmp
outsl
jp
xchg
adc
jno
or
dec
mull
inc
push
mov
lcall
jmp
mov
cwtl
lahf
add
or
jmp
xchg
mov
inc
bound
loop
arpl
inc
nop
lret
adc
jnp
cld
enter
imul
cmovb
subl
sbb
mov
jno
adc
stos
fnstenv
in
lds
jb
fldcw
js
sub
es
pusha
mov
sub
mov
and
cld
stos
pop
ljmp
dec
push
xchg
mov
je
cld
bound
adc
ret
inc
xor
and
sti
in
lcall
sbb
xchg
add
adc
mov
xor
inc
fiaddl
mov
mov
pusha
mov
xor
pusha
stc
and
call
inc
push
inc
push
sarb
imul
dec
add
pushf
push
mov
addr16
lret
jns
mov
xor
loope
rcrl
ret
mov
push
iret
lcall
and
in
test
cmpsl
adc
aaa
imul
ljmp
xchg
jbe
bound
sbb
jo
pushf
rcrl
push
add
sti
pushf
ret
jg
jne
jns
gs
andl
mov
cwtl
shlb
lea
xchg
ss
je
ficoml
mov
aad
mov
dec
xor
clc
lock
dec
xor
add
sub
mov
std
das
mov
cmp
lds
push
xchg
dec
push
clc
sbb
xor
xchg
fsubs
jae
lret
decl
fimull
arpl
lahf
xchg
xchg
call
lock
mov
sub
popf
inc
and
cmp
iret
aad
popf
mov
xor
mov
sub
xchg
daa
xor
adcl
fstps
adc
ss
ja
inc
out
loop
pop
and
and
inc
lds
mov
inc
and
xlat
sarl
rcl
jp
int
addl
lret
fwait
sbb
out
push
test
ja
repnz
jno
mov
pop
push
movsl
popf
fisttpl
mov
adc
mov
add
adc
cmpsl
stos
dec
push
and
push
xchg
xor
or
inc
and
jo
loopne
bound
jno
fdivp
mov
test
fsts
popf
mov
popf
jg
fcmovbe
je
aas
insl
jge
out
cmp
out
mov
shl
mov
lock
sub
mov
loop
lods
addr16
or
mov
fcompl
in
jecxz
inc
dec
js
iret
test
call
jnp
mov
lcall
pop
lea
enter
add
fists
adc
out
fwait
pop
cmpsb
ja
cmp
inc
cltd
adc
mov
pop
inc
subl
lea
dec
lods
ss
mov
out
jle
aad
inc
jo
inc
fwait
mov
dec
popa
and
add
testb
movsl
xor
mov
xchg
add
adc
push
imul
mov
shll
aam
adc
addl
and
fstl
ret
pop
sub
mov
loope
into
in
cmp
jne
push
add
xor
mov
mov
insb
out
out
stos
or
pop
dec
mov
add
xchg
xchg
mov
in
push
ror
cmp
stc
dec
push
xchg
dec
dec
adc
jecxz
sbb
add
mov
leave
lods
out
jne
int3
ljmp
jmp
pop
or
mov
sarb
mov
sbb
loope
mov
cmp
insl
push
fistpll
imul
ds
cmp
adc
push
lock
or
sbb
movsb
jbe
inc
cmpb
jge
mov
in
mov
movb
adc
pop
out
dec
das
call
pop
scas
aam
jle
jae
sbb
aas
out
addr16
mov
rorl
mov
pop
add
cli
push
adc
jmp
scas
cli
shr
sbb
into
xchg
xor
divl
cmc
push
stos
xlat
xor
xchg
adc
mov
mov
dec
cli
adc
sti
sub
xchg
imul
mov
or
jg
push
mov
aam
lock
xchg
pusha
sbb
or
hlt
call
jge
pop
and
sahf
mov
lahf
jmp
scas
movsl
clc
mov
movsl
push
addr16
stos
out
in
adc
xor
dec
icebp
imul
xor
leave
cli
pop
sbb
or
xchg
mov
int
insl
sub
lods
or
in
arpl
inc
test
lret
inc
xchg
jle
xchg
mov
out
ja
inc
push
mov
adc
loop
xor
les
add
sbb
ja
fisubl
dec
sub
inc
and
ret
cmp
sub
fiaddl
cmpsl
fiaddl
daa
dec
sbb
sbb
pop
insl
imull
pop
out
lahf
insb
pop
out
dec
adc
pop
outsb
or
sub
rclb
test
cltd
jmp
push
mov
stos
jns
xchg
pop
xor
aas
fdivr
pop
fnstcw
les
sbb
xchg
dec
in
dec
dec
inc
add
push
mov
sub
loopne
pop
sub
dec
rcll
push
xor
jno
ror
into
into
adc
inc
dec
iret
push
pop
sub
stc
inc
rcll
cmpsb
mov
cld
iret
out
fmuls
push
insl
xchg
dec
stc
mov
das
lods
fildl
stos
mov
inc
pop
pop
int
cltd
jne
rorb
mov
scas
xor
cmp
aas
in
and
sbb
mov
add
pop
jne
xor
ja
repnz
aad
into
stc
fadds
xor
xchg
adc
cmp
and
mov
dec
bound
clc
adc
mov
add
and
inc
xor
push
cs
es
or
je
insb
and
sbb
aad
outsl
xor
movsl
rolb
stc
inc
adc
xlat
and
scas
push
mov
push
imul
mov
fbstp
cmp
pop
xor
cmpsl
roll
cmp
sub
add
jns
mov
xchg
fidivrl
mov
sti
sarl
cld
add
xor
push
insl
bound
leave
out
bound
je
pop
add
in
cmp
xor
out
cmp
pop
xor
jle
xchg
aaa
mov
insb
enter
arpl
inc
dec
ffreep
mov
popa
fmulp
push
les
shll
fbstp
cwtl
mov
fsts
test
aaa
mov
enter
mov
cmp
inc
mov
fnstcw
and
or
sbb
add
or
mov
jp
jmp
aaa
dec
mov
les
jae
out
imul
cmp
jns
fcompl
jb
outsb
nop
adc
jbe
js
enter
and
js
sub
mov
outsl
call
aam
adc
sbbb
sub
cltd
bound
xor
sbb
arpl
shrb
addb
inc
popf
cli
in
mov
in
arpl
push
inc
fmuls
in
iret
stos
dec
sub
inc
xor
mov
jns
adc
add
repz
rolb
popf
adc
ss
je
into
jb
pusha
in
pop
popf
mov
mov
xchg
sbb
out
sbb
pop
ljmp
mov
ds
jnp
ljmp
push
sbb
sub
and
adc
enter
mov
fisubl
int3
push
inc
dec
mov
int3
adc
mov
mov
mov
jo
or
mov
test
mov
mov
and
leave
aad
fwait
aam
frstor
xchg
dec
xchg
aam
dec
imul
dec
mov
ss
sub
sub
fiadds
mov
lds
pop
and
out
mov
das
pop
pop
cmp
inc
mul
jno
lds
rcrl
pop
not
ja
aaa
cmova
add
cmpsl
es
xchg
and
sub
out
xorl
int3
mov
mov
xor
adc
mov
ja
pop
popf
dec
pop
xchg
xor
repz
jnp
push
lock
jo
out
and
inc
test
mov
add
or
jbe
mov
rorb
adcl
xlat
mov
loope
fsincos
dec
test
js
xlat
and
outsb
add
stos
test
jo
mov
fistpll
ds
or
cwtl
cmp
xchg
repz
ja
xchg
lock
push
insl
xor
xchg
lds
int
fistl
pop
leave
cwtl
lock
imul
sub
sbb
xchg
mov
sbb
sarl
mov
movsb
fwait
push
ljmp
clc
loopne
pop
or
mov
sub
pusha
xor
rol
mov
and
xor
xchg
repnz
inc
fld
add
xchg
dec
orl
or
pop
sub
dec
jbe
lods
in
repnz
sub
xchg
lcall
dec
popf
or
push
outsw
test
lret
hlt
xchg
push
fs
int3
inc
push
imul
popf
pop
jle
xor
ja
ja
xor
xchg
pop
or
jp
loope
add
adc
jbe
fdivrl
aas
xor
xlat
xlat
iret
in
or
hlt
mov
out
mov
jnp
cs
or
mov
mov
dec
push
fadds
cmpsl
pop
mov
sbb
inc
insl
lea
mov
dec
push
or
andb
dec
inc
mov
or
daa
outsl
add
mov
addr16
in
push
mov
ret
push
mov
int
rol
adc
mov
cmp
add
mov
cmpsb
or
inc
jns
xor
jge
outsb
and
dec
pop
pop
xchg
lahf
stc
and
push
and
fldl
lahf
cmp
fucomp
adc
bound
stos
xchg
roll
sbb
mov
mov
sbb
leave
fidivrl
or
jp
mov
sbb
popf
mov
nop
shr
add
repnz
push
cmp
test
and
jne
out
hlt
add
cmp
in
push
iret
sub
gs
fcompl
sbb
inc
jbe
shrl
cltd
addr16
adc
sub
ds
or
inc
sbb
repnz
mov
ss
push
data16
scas
jae
jb
jne
mov
pop
jnp
gs
fsub
adc
lahf
push
mov
mov
std
sub
bound
xor
add
rol
xchg
int3
pop
mov
adc
or
mov
mov
cmp
sub
dec
jecxz
and
shrb
adc
sbb
dec
mov
xor
sub
jle
daa
add
fmul
xchg
jns
mov
xchg
mov
call
jbe
xchg
gs
mov
test
pop
jns
inc
ljmp
add
dec
scas
inc
mov
and
out
pushf
or
mov
mov
ror
stos
push
or
aam
pop
out
mov
push
ffree
sahf
cmc
clc
inc
pusha
into
pusha
sub
xor
sahf
shlb
mov
rcl
inc
rcrb
add
mov
test
sbb
imul
andb
aad
cwtl
sahf
mov
imul
mov
rcll
in
mov
test
push
lods
cs
rcl
mov
sbb
ds
cmpsb
sub
cmp
xchg
xor
cltd
test
jnp
cmp
test
movsb
jns
sub
jecxz
jmp
and
es
data16
or
imul
adc
cltd
and
cld
adc
mov
or
sbb
xlat
lods
outsl
push
pop
jmp
repnz
mov
sti
dec
xor
popf
decl
jne
xchg
xchg
pop
les
mov
aad
xlat
mov
dec
inc
pop
shl
xchg
ss
lock
mov
jns
push
push
daa
and
test
bound
daa
lds
add
cmp
icebp
mov
push
push
cmc
adc
mov
jo
lock
jp
jnp
idivb
dec
repz
xor
xchg
imul
jns
push
mov
push
scas
sahf
fstpl
jmp
fsubrl
jo
pop
add
jmp
and
push
cmp
lods
push
jae
xchg
xchg
mov
adc
stos
or
xor
mov
in
clc
movsl
hlt
xchg
pop
cli
lds
mulb
out
mov
data16
cli
and
dec
and
inc
sarb
mov
xchg
inc
mov
in
sub
daa
pop
xchg
popa
loop
mov
mul
in
xchg
repnz
sub
bsr
jmp
jbe
jb
mov
mov
jbe
repz
mov
sub
ljmp
aad
inc
iret
mov
int3
xchg
ja
push
pop
bound
and
sbb
lret
loope
pop
or
into
and
gs
ficoms
cmpsl
lods
loopne
insl
lcall
dec
mov
mov
sub
cli
cmp
test
xchg
dec
scas
outsl
pusha
adc
loope
clc
mov
push
cmp
xchg
adc
dec
jbe
cmpsl
jmp
sub
inc
std
jl
xchg
adc
lods
mov
pop
pop
and
outsl
int
sti
pop
and
or
xor
fstpl
add
and
cmp
cmpsb
dec
daa
mov
or
and
jmp
xor
xchg
lock
sbb
out
xchg
lds
shl
sbb
insb
in
aas
in
inc
ss
sub
pop
test
sahf
imul
aas
imul
push
mov
cmpsl
add
andl
sarl
or
and
mov
mov
in
loope
push
xor
sbb
mov
dec
pushf
mov
pop
lahf
jmp
imul
dec
dec
mov
out
in
mov
pop
daa
add
xchg
push
jmp
inc
outsb
push
add
sbb
mov
iret
in
cwtl
lret
sbb
fdivrl
dec
sbb
inc
stc
xor
test
push
inc
or
xor
mov
lcall
adc
insb
pusha
pop
in
or
jae
out
mov
push
insb
outsl
fldl
ljmp
fwait
jns
xchg
inc
ljmp
ret
and
xchg
gs
shlb
es
sarb
ret
push
mov
mov
mov
add
aad
or
idiv
pop
mov
faddp
sbb
adc
jo
push
xor
pop
sub
dec
push
dec
mov
mov
cmpsl
xchg
out
xchg
jo
ret
mov
mov
add
xor
dec
or
push
fildl
inc
mov
push
sbb
icebp
add
push
movsl
pop
mov
inc
inc
scas
fcmovne
adc
repz
lea
inc
das
xor
and
gs
push
push
xchg
repnz
xor
in
inc
dec
dec
outsb
push
cs
pusha
cmp
dec
aaa
mov
dec
and
icebp
fwait
push
lods
jno
gs
int3
sub
and
shll
out
repnz
push
xor
push
lods
mov
cmpsl
bound
and
out
stos
mov
mov
sti
pop
je
gs
or
out
popa
loopne
lods
sub
sbb
sub
mov
aad
push
push
icebp
insl
idivb
test
fidivl
xchg
mov
shll
xchg
push
jmp
in
sbb
push
push
mov
nop
rclb
cmp
outsb
cltd
fnstenv
and
cmpsb
inc
repz
fwait
lcall
je
gs
pop
mov
pop
out
or
out
cmpsl
pop
cld
pop
rcll
jae
out
pop
mov
inc
inc
shll
dec
push
popa
xor
mov
mov
dec
or
mov
xorl
out
add
out
sahf
rorb
add
xor
fists
cmp
popf
loope
int
hlt
mov
or
ljmp
xchg
punpckldq
adc
sti
and
cmpb
xor
or
imul
movsl
dec
in
aad
fwait
out
fstp
sti
push
cltd
cmp
mov
sbb
ds
rcll
cmp
filds
ljmp
jne
ret
push
add
das
inc
inc
mov
inc
cmc
cmp
dec
lahf
inc
push
mov
mov
adc
dec
fwait
ljmp
sbb
das
in
mov
dec
push
pusha
inc
sbb
push
sub
xor
add
cmc
out
loopne
push
test
aam
dec
mov
push
popf
clc
sbb
loopne
pop
jb
xor
pop
les
shrb
int3
xor
int3
add
das
adc
cltd
xchg
mov
add
inc
sti
add
js
push
roll
ljmp
ja
jecxz
and
sub
rcr
dec
dec
test
xchg
fcomi
mov
out
arpl
ret
adc
and
and
ja
inc
push
pop
stos
lods
les
pop
mov
mov
sub
xor
je
aad
scas
xor
push
hlt
lahf
movsb
outsl
pop
add
nop
ss
inc
stos
leave
cwtl
ljmp
add
into
daa
push
lret
and
xor
pop
arpl
or
pop
dec
insl
push
sub
push
mov
xorb
test
std
pop
test
and
mov
mov
lock
out
sub
lcall
pop
mov
adc
pop
outsl
mov
inc
cmpsl
sbb
add
or
adc
pop
call
xchg
pop
aas
cwtl
sub
loopne
in
je
adc
jmp
int
enter
mov
sub
mov
das
fwait
mov
mov
test
xor
imul
aam
lods
addr16
gs
rorb
stc
mov
pop
ret
mov
shrb
dec
inc
cwtl
sbb
sbb
and
stos
fisubrl
movsb
push
inc
iret
iret
test
pop
or
pop
mov
aad
lret
sbb
xchg
push
sub
insl
adc
filds
and
cmp
decb
mov
jmp
pminub
fsubrs
lds
popa
push
daa
popf
sbb
xchg
add
xor
sbb
jl
dec
add
aaa
clc
scas
leave
push
jne
mov
mov
adc
mov
pusha
aaa
dec
loope
jae
xchg
inc
add
sar
jne
fwait
arpl
lods
mov
aam
xor
enter
xchg
or
sub
aam
int3
fadd
mov
inc
js
mov
jbe,pn
sbb
cmp
mov
cs
sub
jle
mov
lods
pop
fbld
cmp
mov
and
pop
loopne
dec
and
lea
fdivp
in
mov
xor
xchg
addr16
out
stos
xor
pop
pop
sbb
clc
ret
je
fwait
gs
mov
push
dec
mov
cmp
outsb
stc
int
das
inc
fdiv
mov
shlb
lods
or
daa
cmp
jae
cli
mov
sub
loop
or
les
aaa
sub
sbb
scas
ds
mov
cmc
jle
iret
pop
inc
push
mov
insb
xorl
push
xlat
push
mov
sbb
cmp
js
fstpl
aaa
cmp
push
daa
lods
fnstcw
loop
lods
arpl
mov
adc
and
mov
add
pop
roll
outsl
jne
mov
xchg
rol
adc
add
pop
mov
mov
icebp
aas
xchg
push
iret
add
add
decl
les
push
pop
adc
imul
sbb
adc
lret
push
sbb
push
int3
mov
enter
shll
push
add
test
adc
lret
insl
fs
fcom
inc
movsb
stos
inc
dec
pop
push
je
inc
inc
adc
mov
mov
adc
adc
pop
aad
nop
stos
lods
or
inc
or
xor
mov
and
adc
sti
outsb
sub
or
sbb
mov
mov
icebp
jmp
push
mov
lds
mov
int3
or
sbb
push
dec
call
cmp
scas
pop
pop
cmp
jno
lods
pop
dec
clc
xchg
adc
test
dec
inc
xor
imul
adc
xor
push
movsl
add
adc
jo
stos
xchg
sahf
pop
fmulp
ja
loope
test
inc
cs
dec
jmp
and
loopne
sub
movsl
enter
sub
cltd
push
sbb
lock
mov
sbb
dec
mov
inc
adc
mov
push
int
cmp
and
dec
iret
sub
imul
lsl
mov
fs
add
out
xor
inc
adc
sbb
inc
lods
sbb
dec
test
cmp
pop
jns
sti
push
mov
mov
shlb
pop
jecxz
fisttpll
movsl
js
aam
sub
jb
jl
adc
jns
pop
lcall
loop
jp
iret
insl
rorb
inc
insb
push
mov
icebp
sbb
scas
ss
cmp
mov
cmp
push
popa
inc
push
cmc
push
jb
sbbl
xchg
fisttpll
imulb
sbb
loopne
arpl
dec
mov
and
jb
int
ja
jne
cltd
loopne
mov
mul
daa
popf
dec
mov
sub
dec
dec
pop
sbb
push
jg
rclb
in
fsubr
lods
pop
out
scas
out
pop
push
mov
mov
or
adc
mov
jae
cld
pop
in
stos
clc
inc
dec
xor
dec
cmp
mov
cli
push
cmp
ret
add
adc
test
add
test
popf
fcoml
xchg
adc
add
xor
mov
fiadds
fwait
ss
mov
outsb
add
add
mov
hlt
leave
negl
fnstsw
out
or
shll
pop
leave
push
addr16
insb
hlt
jbe
fnstenv
leave
movsb
adcl
pop
mov
adc
icebp
dec
pop
xor
xor
mov
dec
subl
pop
iret
jp
push
mov
js
aad
cmp
out
inc
push
mov
pop
cld
mov
out
push
xchg
sbbb
pop
push
loopne
movsl
xchg
and
pop
jge
mov
cld
push
lret
cmp
rorl
push
or
or
jecxz
sti
mov
mov
cltd
jl
mov
jno
push
cmpsl
jge
xor
rclb
xor
push
adc
test
test
inc
in
mov
or
test
cs
mov
xchg
loopne
test
pusha
xchg
je
xor
mov
xor
in
xchg
xor
fdivs
pop
mov
add
xchg
mov
cwtl
inc
icebp
xor
mov
pop
adc
xchg
shld
ljmp
loope
iret
stos
mov
divl
in
rcrb
jne
push
daa
xchg
mov
lods
int3
subb
or
adc
and
jno
jo
cltd
hlt
xchg
jns
ficompl
arpl
jle
aam
dec
cld
bound
mov
cmovle
mov
xchg
adc
int
pop
push
lret
out
fsubl
sbb
cmp
push
or
push
loopne
in
fnsave
push
lahf
fildll
add
add
les
mov
jle
push
push
fs
ss
js
call
aaa
mov
adc
nop
xchg
test
sub
xchg
rolb
jo
mov
xchg
xchg
inc
sbb
mov
mov
arpl
es
nop
loope
cs
scas
ror
mov
add
jo
add
or
cmc
push
stos
js
sub
mov
mov
cmp
mov
xor
mov
add
iret
xor
mov
push
dec
mov
lea
push
shl
mov
pusha
cmp
pop
ljmp
dec
loop
jp
mov
popf
movsl
inc
push
jb
dec
or
dec
popa
push
faddl
lahf
and
lock
inc
pop
cmp
cmp
jae
aas
rcr
test
arpl
push
mov
xchg
data16
aad
les
xorb
mov
push
jae
shlb
int3
push
aaa
or
out
ret
jns
inc
sub
push
mov
test
enter
js
jnp
movsl
sub
pushf
add
cmp
add
and
xchg
jge
fiadds
pop
mov
adc
sub
xor
popf
test
inc
lret
adc
sub
xchg
push
lret
mov
rcrb
adc
mov
rol
lds
jnp
mov
cmp
inc
fstpt
fchs
push
cmpsb
xchg
cmpsl
loopne
je
inc
mov
mov
xor
cmp
clc
out
inc
dec
ffreep
outsb
xorl
lret
pop
xchg
bound
pushf
xlat
xchg
adc
call
pop
pop
push
lahf
lcall
in
shll
mov
in
mov
add
pop
imul
loop
scas
or
shrb
pushf
sub
dec
arpl
dec
mov
lock
insb
ss
les
push
and
jmp
add
in
xchg
test
pop
int
out
cwtl
push
outsb
test
pushf
mov
daa
mov
pop
cmp
xchg
xor
lret
in
stos
sub
add
dec
subb
loope
and
sbbl
loope
dec
icebp
or
mov
mov
xlat
mov
call
add
rorb
sbb
mov
mov
mov
stos
cmpsb
es
fsubrl
das
hlt
sub
mov
ss
pop
mov
outsl
ja
mov
cs
rorb
mov
cli
dec
push
pop
in
jp
dec
pusha
fdivrl
jecxz
sti
lds
push
aad
or
add
mov
gs
sub
mov
sbb
push
mov
divb
mov
cmp
push
cli
or
adc
loop
arpl
cmp
xchg
lock
push
cmovle
xchg
mov
pusha
mov
fisubs
mov
jae
mov
mov
add
xchg
mov
push
or
dec
shlb
lods
mov
lock
leave
pusha
sbb
dec
pavgb
adcb
mov
imul
jbe
sbb
cmp
lret
filds
push
into
jmp
jmp
mov
xchg
ljmp
xchg
xor
popf
test
das
pushl
int
in
mov
cmp
repz
dec
nop
lock
cmp
mov
push
movsb
dec
inc
idivb
or
fdivs
leave
pextrw
or
and
popf
std
test
dec
sbb
das
cmpsl
jbe
repz
mov
xor
adc
xor
stc
mov
jp
mov
jo
inc
push
mov
mov
test
push
xchg
mov
add
xchg
cld
aas
jno
shlb
mov
sarl
aam
xchg
and
xor
push
sbb
inc
xor
cmp
fwait
and
dec
movsl
je
lods
shlb
and
push
scas
in
arpl
push
out
sub
cmp
mov
in
lret
mov
or
in
shll
inc
enter
mov
sub
sahf
imul
aaa
lods
cmp
jnp
sbb
dec
cld
in
rcll
or
push
xor
imul
insl
cwtl
out
dec
stos
inc
lds
repnz
cmpsb
inc
stos
sub
je
sub
ret
out
lds
xchg
int
movsl
pop
dec
jb
icebp
into
mov
popf
xor
sahf
rcr
sti
mov
jno
ss
push
sub
xor
dec
fidivrl
dec
imul
mov
mov
sbb
insb
pop
daa
push
mov
test
movsb
jns
les
pop
mov
popf
and
dec
pop
xchg
xchg
aad
lds
cli
cli
inc
mov
sub
xchg
les
pop
dec
sbb
adc
jmp
insl
in
pop
mov
test
pushl
jne
cmpsb
cmp
pop
fwait
push
push
int3
lods
mov
mov
cmp
mov
insl
call
cmp
popa
push
jg
push
sbbb
mov
mov
add
aas
pop
sbb
push
loop
mov
pop
lods
test
jo
jno
jno
lcall
mov
pop
jne
jo
arpl
inc
ficompl
pop
sbb
adc
mov
xchg
jle
push
nop
out
ret
aaa
or
mov
addr16
fwait
and
and
test
jae
jmp
jg
imul
and
mov
bnd
and
mov
scas
or
and
dec
lods
cmp
aad
int3
mov
popf
push
shlb
sub
cmp
scas
jmp
and
pop
sbb
push
mov
mov
sbb
pop
lea
lods
jg
xchg
cmp
mov
stos
jge
add
sbb
mov
mov
ja
lahf
lret
ffree
push
adc
lods
repz
test
stos
mov
hlt
imul
test
pop
push
lea
xor
and
sahf
add
fstp
insb
cmp
mov
add
sahf
adc
cltd
cltd
js
in
lahf
mov
ficomps
add
ss
or
outsb
or
sub
sub
mov
in
xor
dec
pop
fwait
adc
cld
enter
jne
dec
shrl
insl
jb
lcall
mov
into
xlat
sti
daa
push
ja
push
mov
dec
lds
xchg
adc
xchg
rol
fisubrl
mov
sub
xchg
push
pop
mov
popl
nop
adc
inc
mov
test
or
xchg
fs
nop
mov
mov
les
cmp
jo
aas
fwait
sti
in
sbb
cwtl
pop
sbb
add
fnstcw
inc
hlt
dec
lds
mov
add
cs
mov
inc
push
in
daa
push
mov
sub
push
push
icebp
int3
or
inc
bound
jl
stc
lods
lret
jle
jb
sub
add
pop
and
shrl
mov
pop
mov
inc
xchg
cmpsl
insb
pop
bound
adc
into
mov
xor
repnz
mov
pop
jnp
les
and
outsb
sub
mov
ss
repz
or
daa
mov
mov
rolb
cmp
or
test
jmp
mov
push
add
mov
push
pop
inc
add
and
sbb
and
or
sbbl
push
gs
aaa
mov
and
test
xchg
add
scas
adc
jg
in
xchg
sbbl
add
fistpl
mov
sub
call
shll
decb
push
jp
adc
xlat
lcall
jmp
call
popa
loope
hlt
mov
in
lcall
in
or
mov
ja
add
jne
ret
mov
xor
or
inc
enter
jbe
arpl
insb
mov
cmp
pop
adc
imul
mov
mov
clc
mov
push
adcb
push
push
repnz
mov
mov
add
ja
push
ds
in
push
ds
pop
test
xchg
jp
test
lret
in
loopne
and
dec
jl
test
daa
jns
ret
sub
jecxz
mov
enter
mov
dec
add
mov
inc
aas
xor
mov
sahf
outsl
jp
test
sub
add
or
push
hlt
push
lods
push
jns
and
fistpll
mov
outsl
aaa
or
pop
push
mov
xchg
and
lods
insb
in
push
cli
or
jo
or
std
clc
sbb
adc
mov
sub
push
mov
loopne
call
fimull
sub
or
jmp
fs
xchg
fisubs
sub
popa
ja
or
mov
out
add
movsb
jo
dec
cld
aad
mov
xor
add
lea
inc
mov
add
jbe
mov
and
das
inc
cmp
pop
mov
das
dec
sti
sub
lds
insl
sti
incl
or
das
je
inc
push
jmp
out
mov
scas
mov
mov
adc
xchg
int
fstl
cmp
mov
pop
loopne
and
jns
xor
jge
sub
push
inc
jp
jle
xchg
imul
mov
imul
xchg
mov
repnz
mov
xlat
inc
xchg
add
fldl
in
cmpsb
or
adc
cs
mov
cmp
sbb
pop
mov
push
or
in
aaa
clc
xor
jb
int3
call
int
and
int3
push
inc
pusha
dec
ret
ljmp
out
and
aam
scas
bnd
xchg
xchg
fwait
stc
idivl
add
leave
out
gs
sub
shll
or
jae
pop
xchg
je
xor
test
xchg
sbb
push
pop
cmp
sbb
sahf
fstpt
mov
push
fisttps
jl
lods
leave
xlat
in
mov
sub
sbb
sbb
cs
pop
int3
pop
movsb
cmp
pop
mov
push
stos
inc
in
jmp
jmp
xchg
mov
mov
nop
sahf
test
ret
mov
xchg
shr
inc
dec
jno
inc
pop
pop
lret
xchg
outsb
push
sbb
rolb
stos
xchg
sbb
xchg
into
lock
pop
push
int
adc
out
test
out
adc
inc
push
push
cmp
adc
pushf
out
int
mov
pop
mov
leave
xchg
fidivs
jp
jle
push
int3
cmpsb
mov
mov
dec
jae
das
mov
nop
jbe,pn
pushl
out
imul
je
imul
std
dec
sarl
cmpsb
std
bound
jb
lds
stos
dec
add
mov
adc
mov
sub
and
jmp
xor
out
shlb
in
xchg
lods
pop
out
mov
lahf
inc
cli
add
test
xor
mov
into
lret
data16
adc
in
inc
popa
jae
stc
push
stc
inc
inc
mov
mov
popa
leave
out
mov
pusha
js
sbb
push
repnz
psadbw
popf
inc
fmulp
xchg
pop
imulb
dec
insl
dec
dec
fsts
cmp
cmp
rcrl
mov
inc
lcall
cmpsl
out
xor
sarl
test
and
mov
add
cmp
add
mov
mov
lcall
inc
xor
shll
or
aad
call
sub
fsubrl
cmpxchg
and
roll
repz
js
insl
clc
nop
rorl
jg
xlat
ror
mov
inc
pop
cmp
push
push
jae
push
xor
scas
jecxz
shll
push
lretw
bound
xor
xchg
or
test
roll
lea
sti
mov
push
aam
pop
push
hlt
or
fucom
or
cmp
sub
add
cmp
outsb
or
mov
sbb
mov
jle
pusha
mov
fsubp
imul
jecxz
jp
loopne
mov
jb
rol
mov
add
or
add
fstl
test
or
mov
add
je
push
jb
sbb
inc
leave
jmp
mov
jns
fbstp
mov
inc
mov
or
push
inc
int3
add
stos
or
jge
movsl
and
aad
mov
pop
stos
sub
lcall
pusha
into
jae
addl
pop
dec
xor
ja
test
inc
test
push
mov
sub
mov
ljmp
mov
jmp
inc
loop
xor
mov
test
inc
lret
xchg
pushf
andl
pop
lahf
add
loop
inc
sbb
sbb
fnstenv
inc
and
nop
data16
sub
lods
or
inc
in
cmp
int
lock
pop
in
mov
shl
int
sub
stc
adc
or
sbb
imul
push
jne
push
mov
out
lea
lahf
lcall
iret
test
cli
mov
mov
pop
and
in
xor
test
jno
cmc
icebp
fildl
add
push
test
push
mov
adc
shlb
int3
push
sub
or
ret
add
fdivl
mov
testl
jg
xor
lds
int
and
cmpsl
ss
and
cwtl
repnz
cs
and
ja
repz
cmp
dec
xchg
stc
je
imul
repz
std
in
clc
inc
outsb
imul
sbb
and
outsl
xor
mov
dec
add
inc
adc
inc
dec
dec
inc
ret
push
adc
hlt
out
shlb
fs
push
jge
mull
mov
scas
pop
jnp
ss
cmpsl
int
jg
js
das
sti
ss
insb
sub
inc
inc
push
adc
in
fldenv
icebp
test
push
pop
mov
add
bound
sbb
aas
or
dec
hlt
add
sub
out
rcrl
movsb
lock
cmp
addr16
lds
mov
in
cld
dec
popf
lods
add
pusha
addr16
push
out
cmp
push
fdivrs
xchg
stos
pushf
adc
jp
cs
data16
fxch
inc
sti
dec
fcompl
stos
aaa
lock
xchg
or
push
sbb
or
add
sub
dec
mov
mov
mov
cmpsl
lea
das
add
popa
ja
pop
mov
inc
aaa
pop
test
jg
pop
xor
iret
xchg
cmc
sbb
pextrw
nop
mov
enter
pop
loopne
cmpsl
sbb
sub
dec
or
push
fnstsw
pop
fnsave
cwtl
mov
mov
xor
or
push
jmp
scas
sbb
aaa
ret
iret
out
cmpsl
adcb
clc
notl
aam
or
jl
xor
mov
daa
push
in
add
adc
fbstp
mov
pop
mov
fs
sub
xor
hlt
call
and
inc
lcall
pop
sbb
cwtl
mov
cmp
lret
test
sbb
and
jmp
fwait
or
test
jno
pop
cmp
divl
pop
sub
xchg
push
or
loopne
daa
cld
xchg
mov
sbb
xchg
mov
mov
inc
shl
cmp
cld
push
ret
jno
std
or
mov
sub
push
mov
mov
lret
mov
leave
repnz
icebp
repnz
mov
outsl
rclb
outsb
cwtl
scas
enter
xor
adc
mov
insb
loopne
pop
dec
sbb
push
pop
idivl
jnp
pop
iret
xchg
ss
adc
lods
jno
sbb
xor
ljmp
int3
test
hlt
fwait
aaa
xchg
aas
xchg
das
xor
fldenv
dec
cmpsl
cli
cmpsl
insl
jg
push
cmp
sbb
rorl
shll
xchg
out
push
test
add
std
dec
adc
les
mov
mov
dec
ret
mov
adc
in
stos
mov
shll
and
xchg
mov
pusha
jno
fcmovbe
fcmovb
ds
popf
push
fidivrs
jae
pop
jmp
in
cs
xor
aam
and
and
or
inc
mov
xchg
fs
xchg
pusha
insl
and
add
icebp
xchg
and
pop
lret
out
jp
lcall
mov
pop
stos
pop
xchg
aad
call
notl
das
inc
addr16
ret
repnz
into
lods
sbb
pusha
icebp
cmpsb
arpl
or
or
xor
sbb
fisubrs
adc
lods
push
fs
push
mov
lahf
outsb
mov
pop
outsb
push
adc
sub
and
xorl
xor
scas
nop
test
mov
and
push
out
inc
fdivrl
cmp
data16
fbstp
in
cmpsb
popl
cli
mov
push
test
and
shl
cmpb
scas
inc
xor
cmpsl
xchg
push
cmp
xor
adc
sti
lret
mov
movsl
jecxz
arpl
cmp
jmp
mov
dec
lods
int3
out
push
jge
pop
icebp
cmp
call
scas
clc
stc
ficoms
leave
in
add
stos
pop
repnz
clc
sbb
jecxz
mov
mov
dec
xchg
lret
mov
mov
xor
jae
cltd
push
arpl
push
dec
xchg
pop
or
push
push
outsl
pop
lret
sub
and
push
xchg
or
and
xchg
mov
sbb
mov
stc
inc
mov
mov
sbb
jbe
lods
js
push
test
pushf
mov
cmp
dec
bound
and
jne
push
movsl
lods
mov
cmc
pop
mov
fcmovnb
mov
insl
ljmp
pop
pop
mov
mov
sbb
fcompl
mov
cmpsl
jmp
popf
inc
cmp
cmpsl
mov
push
and
xchg
mov
inc
or
jp
fnstenv
mov
jb
in
pop
add
and
xchg
dec
mov
fstpl
mov
in
xor
js
push
push
jnp
sub
add
mov
inc
lods
push
sub
push
iret
test
xchg
xchg
sbb
outsl
iret
mov
xor
mov
jmp
daa
int
mov
xchg
push
loop
fs
adc
ror
push
lret
fldcw
add
pop
mov
fdivs
iret
jmp
pop
fisttps
jle
daa
inc
daa
lcall
dec
push
imul
in
lahf
cmp
popf
pop
std
rorb
and
mov
jmp
fmuls
or
sbb
pop
add
xchg
out
jg
lods
xchg
repnz
pop
sub
xchg
fisttps
iret
sub
inc
idivb
xor
push
or
xor
and
or
das
or
loop
popf
push
mov
mov
xor
call
pop
adc
stos
fwait
push
mov
jge
lahf
mov
cmc
lcall
cmpsb
dec
xchg
inc
stc
setne
clc
cmpsl
xor
ja
sti
cs
and
jb
ljmp
into
push
push
or
xchg
in
dec
xor
out
in
jge
mov
mov
je
gs
xchg
stos
jae
mov
mov
push
jle
les
jae
mov
xchg
jbe
ret
adc
fcmovbe
jnp
mov
push
clc
aaa
jg
cmpps
loope
xor
pop
lods
or
inc
jmp
ret
movsl
fmull
add
xchg
mov
cli
mov
sbb
stos
inc
int3
roll
call
xchg
dec
mov
in
add
xchg
and
pop
stc
add
lret
pop
loop
sub
mov
or
aad
push
push
inc
mov
jg
dec
daa
adc
sub
aad
mov
fcmove
cmp
mov
pop
out
pop
fcomps
int3
aas
jno
inc
loopne
negb
inc
mov
hlt
jo
insb
xor
std
mov
jp
sbb
test
pop
or
push
mov
sarb
les
or
push
sub
and
and
test
xchg
add
dec
cmp
pop
dec
adc
jg
sub
fs
aam
jg
jb
mov
je
pop
xor
inc
pop
outsb
cmp
fsubrl
dec
dec
sub
fcmovnbe
push
insl
mov
sub
inc
aas
clc
in
popf
adc
scas
jno
xor
into
loopne
testb
sbb
add
call
stos
jle
xchg
insl
xchg
adc
xchg
lret
ret
mov
out
out
adc
pusha
roll
insb
call
pop
mov
jl
test
sbb
negl
or
adc
fmuls
inc
jne
movl
dec
js
in
sub
hlt
in
xchg
mov
cmp
mov
inc
pop
fistpll
ss
insb
xor
pop
xlat
out
mov
movsb
das
inc
add
adc
push
lahf
inc
js
and
jge
shrl
iret
ljmp
adc
cld
or
icebp
xchg
xchg
cld
mov
dec
sbbb
rorb
movsb
mov
xchg
inc
or
mov
pop
aaa
add
mov
cmp
inc
add
mov
cmp
gs
jnp
test
pop
in
or
dec
and
mov
mov
or
jecxz
cmpsb
cmp
add
shll
mov
movsl
les
add
or
adc
lds
icebp
or
mov
pop
std
adc
clc
adc
xchg
js
cmpb
ret
ja
ja
mov
fwait
push
loop
test
frstor
push
or
pop
sbb
jl
mov
repnz
out
into
repnz
outsl
cmp
jp
aad
cmc
cmp
dec
jns,pt
add
jg
pop
bound
fldenv
mov
mov
xor
cmp
pop
scas
mov
aas
and
dec
out
xor
pop
gs
in
adc
cmp
jg
das
je
leave
pop
inc
xor
dec
fadds
cmp
jne
mov
lcall
bswap
push
inc
cmpsb
aam
test
rorb
dec
imul
fcmove
pop
adc
and
cmc
clc
pop
outsb
lret
mov
sub
jne
sbb
sbb
int
cmpsb
push
adc
outsl
cs
inc
leave
mov
jne
stos
mov
sub
decl
dec
xlat
movsl
loopne
xor
cmc
pop
mov
xor
cli
mov
mov
adc
call
ja
aas
pop
fimull
xchg
sahf
mov
xchg
mov
adc
cmp
jns
out
mov
jb
sbb
sub
fstpl
add
pop
repz
mov
pop
les
jb
aad
loop
scas
ja
or
jb
mov
das
je
sbb
lea
lock
scas
daa
lds
pop
ret
aad
and
adc
fdiv
push
imul
cmp
mov
or
insl
nop
xlat
loopne
ss
ja
packsswb
mov
cmpsl
orl
hlt
ds
es
jecxz
out
les
and
int
push
iret
push
in
or
push
clc
insl
and
aaa
cmp
sbb
cs
ret
push
cmpsl
scas
cmpsb
insl
pop
outsb
sbb
lahf
sub
add
insl
movsb
in
imul
sbb
xchg
mov
mov
add
cmp
icebp
dec
loopne
outsl
out
lock
add
inc
inc
repz
movsl
mov
cmp
cmpsb
cwtl
xchg
cmpb
insb
ret
sbbl
cs
jp
dec
sbb
push
cmpsb
jg
stc
loopne
mov
jle
pop
add
mov
shr
daa
clc
or
mov
sbb
pusha
dec
mov
dec
loop
sbb
rcrl
jbe
int3
sbbb
out
mov
pushl
daa
xchg
cmpsb
mov
les
mov
sti
outsb
cmpsb
cwtl
jne
xchg
aad
scas
cmpsl
mov
mov
inc
add
icebp
or
push
pop
dec
ret
lret
daa
mov
mov
icebp
pop
dec
mov
jb
hlt
add
addl
pop
jb
jecxz
inc
jecxz,pn
xor
pop
scas
lea
jbe
pop
ds
xlat
sub
loopne
mov
gs
pop
jecxz
sub
daa
loope
sub
mov
xchg
and
xchg
mov
mov
push
movsl
cmp
aad
mov
stos
push
jnp
outsb
jbe
xchg
and
add
cmp
jg
add
cmpsb
rcrb
int3
ja
mov
xor
loope
insl
cmp
ljmp
int
ret
bound
sbb
xor
jl
dec
outsb
in
shrl
cmp
int3
mov
adcl
hlt
lods
sbb
push
lcall
loop
sahf
in
inc
mov
stos
lret
shrb
and
jnp
inc
mov
clc
jecxz
data16
and
mov
fnstsw
cltd
xor
or
sti
pop
sbb
leave
push
xor
pusha
mov
lret
inc
sbb
insl
dec
sub
adc
pop
lcall
das
mov
add
adc
jp
ljmp
ds
fdivp
and
pop
mov
divl
cs
jo
push
sti
pop
cmp
jmp
cltd
fmuls
or
inc
xchg
sub
add
or
sbb
xchg
jne
arpl
cmp
xor
dec
lods
or
ficoms
inc
xchg
addl
arpl
je
filds
cmp
call
inc
ret
insl
clc
lret
jae
add
xchg
stos
cli
mov
scas
xor
sub
mov
pop
pushf
mov
sbb
sarl
movsb
jmp
jmp
or
push
cmp
mov
jl
cmc
inc
or
sub
rcll
ret
sbb
test
inc
cmp
inc
icebp
push
call
cmp
lods
push
push
aaa
and
inc
cs
mov
sahf
jnp
hlt
lock
stos
lock
out
pusha
jno
jno
mov
adc
fs
sbb
in
daa
clc
xor
sbb
pop
rcr
notl
adc
sub
xchg
out
wrmsr
idiv
mov
mov
sub
repz
dec
data16
xor
aaa
pusha
pop
aad
test
pop
inc
xor
mov
dec
push
sbb
cmpsl
fmuls
inc
and
in
lea
or
push
mov
out
insb
and
enter
sub
psrlw
xor
lcall
mov
icebp
dec
inc
cld
enter
push
and
cltd
cmp
clc
pusha
std
orb
push
jns
test
sub
inc
int3
bound
add
add
bnd
pop
xor
pushf
and
mov
jbe
mov
xor
cmp
push
inc
cmpsl
jbe
xchg
jp
inc
lret
inc
mov
add
and
and
out
pusha
push
jg
movsb
push
addl
fs
push
jmp
push
les
stc
inc
xchg
sbb
inc
dec
fldl
push
cwtl
push
into
aas
pop
dec
pusha
or
and
dec
xlat
cltd
mov
in
clc
aaa
bound
inc
push
mov
mov
aas
pop
adc
and
shll
xlat
mov
sub
mov
fistl
mov
aam
popf
add
int3
jne
push
jle
in
xchg
aad
rcll
js
jbe
push
insl
lret
mov
sar
das
subl
jmp
inc
sbb
bound
jbe
mov
rcll
cwtl
call
adc
xlat
movsb
and
les
adc
ds
pop
xor
cmpsl
jno
mov
jnp
sahf
jnp
rcrl
push
add
adc
leave
dec
inc
cmc
or
xlat
xchg
sarl
aaa
je
repnz
mov
inc
mov
adc
ja
hlt
pop
movsl
scas
out
ds
fsubs
jle
pop
arpl
sahf
fistps
sbb
fimull
xchg
inc
and
and
cmp
mov
add
mov
pop
pop
mov
loopne
dec
mov
aas
cli
add
cmp
sti
and
push
ret
mov
xchg
mov
add
inc
out
push
sbb
mov
hlt
sbb
je
leave
pop
cmp
cwtl
call
mov
adc
ret
icebp
fidivl
push
fcomps
push
rcll
jb
lcall
mov
cwtl
ljmp
and
xchg
cmpsl
testl
imul
dec
rclb
call
psubsw
adc
insl
inc
sbbb
pushf
xor
stc
inc
cmpsb
pop
jae
notl
pop
cmp
adc
sub
int3
xor
push
out
in
je
xlat
idivl
xor
push
insb
add
loop
xchg
cld
paddusb
lgs
dec
sbb
cmp
mov
sti
push
call
hlt
cmp
ljmp
mov
jg
shrl
lock
mov
adc
lods
dec
cmp
aad
aad
xor
xor
clc
dec
lock
mov
fildll
popf
lds
adc
add
std
xchg
sbb
jle
push
fwait
dec
add
movsb
xor
cli
cli
out
mov
push
test
mov
imul
lds
call
jbe
mov
jb
xlat
jbe
inc
xchg
mov
xchg
stos
jo
lcall
inc
inc
sbb
pop
jno
repnz
rolb
daa
sahf
jo
fisubrs
ret
push
movsb
add
arpl
sub
cmp
test
mov
pop
inc
push
aad
outsb
push
push
adc
lods
pop
inc
xor
pop
mov
jp
or
xchg
stos
mov
xor
jle
dec
mov
or
fistpll
jl
test
pop
jbe
lret
mov
inc
push
xchg
aaa
insl
add
test
loop
mov
or
xchg
sub
add
adc
and
mov
cmp
mov
mov
mov
and
arpl
lahf
and
das
stos
adc
and
subl
test
adc
or
push
fs
in
data16
push
or
jecxz
jo
shll
aas
push
mov
or
xor
pop
xchg
aam
jge
push
std
push
repz
repnz
iret
bnd
cmp
mov
push
lcall
sub
mov
mov
inc
dec
mov
sub
pop
push
repz
add
inc
sub
lahf
in
mov
fmull
and
pop
push
sub
mov
push
jns
clc
add
inc
hlt
sub
adc
jns
add
cmp
inc
fisttpl
lret
stos
push
les
mov
push
pop
or
mov
cmc
out
sarb
mov
orl
add
aaa
dec
and
jo
jno
inc
xor
cs
lods
addl
jl
push
enter
or
and
test
adc
cmp
pop
or
pop
in
roll
idivb
repnz
jecxz
cld
jne
pop
dec
or
sbb
mov
sbb
and
sarb
dec
inc
lcall
push
cmp
cmp
mov
cli
cli
adc
test
into
lds
outsb
fimull
rcrl
pop
addr16
testl
add
js
or
inc
stos
add
jmp
sub
jp
inc
adc
adc
push
decb
stos
pop
xlat
cmp
in
ret
push
fdivs
and
cli
dec
push
xchg
pop
mov
iret
adcl
push
mov
cmp
sub
add
cmpsb
pop
jmp
hlt
ret
insl
add
xchg
and
xchg
mov
lods
stc
add
test
pop
lods
dec
mov
loope
mov
sbb
xchg
push
push
clc
push
mov
sar
out
dec
jo
clc
mov
cmp
push
add
jge
cwtl
js
mov
xchg
hlt
xchg
arpl
test
xor
cs
outsl
add
or
push
test
push
adc
arpl
or
movsb
test
movsb
mov
cmp
data16
push
jmp
mov
shlb
fs
push
imul
mov
cltd
insl
xchg
dec
pop
lcall
rcrb
pop
push
cmpl
push
jge
ficoml
insl
sbbb
sub
jae
jo
push
stc
shll
jmp
xchg
shll
mov
cmp
push
xor
inc
stc
mov
enter
mov
add
sti
push
lods
stos
or
fs
adc
jecxz
and
adcl
cmp
aas
test
dec
dec
testl
stos
mov
dec
cmp
adc
aam
loope
inc
add
and
mov
in
mov
jp
pop
call
and
insb
push
imul
jmp
in
enter
mov
pop
mov
ja
push
or
mov
sub
ror
add
scas
inc
mov
sbb
and
or
fldl
cmp
jo
mov
pushl
loopne
insb
sbb
hlt
sarl
aaa
jno
nop
lret
insl
prefetch
icebp
push
sub
bswap
stos
in
call
pop
jne
mov
loop
push
and
add
call
testl
jo
rcll
mov
sbb
cli
jne
dec
cmp
jmp
adc
cs
sbb
pop
mov
xchg
add
jecxz
inc
sub
fidivrs
lds
ds
cmc
sbb
fildl
lods
pop
mov
bound
cmpsb
test
vpmulhuw
hlt
jb
fwait
test
fildll
jae
rorb
fucomi
jae
jbe
xchg
inc
out
mov
sbb
lret
inc
fisttpl
insl
push
jb
popf
arpl
rcrl
sub
fisubs
cmovle
mov
call
sub
insb
inc
lcall
stc
insl
sahf
mov
inc
mov
lods
push
jns
xchg
icebp
enter
enter
adc
mov
call
out
addb
add
xchg
jo
cmpsb
add
pushf
jmp
das
sub
rclb
mov
clc
stos
lea
sub
sbb
pusha
loopne
or
add
rclb
ficoms
shrb
pop
jnp
pop
jmp
sbb
adc
pop
or
xor
fstps
jo
jmp
lcall
insl
loop
inc
call
dec
outsl
mov
sub
cli
and
cld
sub
xor
cmpl
pop
or
push
cmp
fnstenv
repnz
or
push
add
or
lret
insl
js
enter
pusha
mov
sbb
mov
js
xor
adc
mov
xor
into
mov
gs
mov
pushf
int3
or
inc
lods
sbb
jne
pop
mov
push
xchg
fistl
adc
aas
fimull
pop
mov
jb
inc
or
sbb
mov
sbbb
pop
dec
add
out
mov
sbb
xchg
xor
mov
push
inc
lds
pop
sbb
sub
dec
pop
or
xchg
out
ficomps
mov
sub
pop
xchg
bound
jnp
and
xchg
lods
add
sub
int3
xor
js
adc
push
ljmp
popa
xor
repz
fwait
xor
arpl
int
lock
decb
jns
pop
jne
and
add
push
test
mov
shll
adc
inc
decb
mov
gs
push
mov
movl
out
shr
jl
inc
fs
inc
fidivrl
and
pop
dec
inc
push
pop
in
ds
lea
scas
repz
ror
jne
sbb
inc
outsb
sub
mov
adc
insb
or
out
sbb
cmp
xchg
repnz
xor
pop
repz
movsl
test
lock
inc
sahf
aad
mov
mov
leave
aam
mov
or
pop
push
jge
scas
test
pop
sti
lcall
jle
add
test
mov
stos
jbe
mov
mov
out
sbb
repz
iret
stc
in
dec
test
cmp
fsubr
shlb
adc
rcrl
mov
dec
push
mov
adc
cmp
or
movsb
loop
pop
xchg
in
in
adc
xor
dec
pop
add
cmp
ds
and
adcl
pop
sbb
filds
loope
inc
push
lods
jmp
add
out
lods
movsb
out
int3
cmp
pop
testl
pushf
lret
inc
inc
xor
add
cmpb
add
mov
pop
jbe
add
jg
leave
push
xor
cmpb
mov
jno
xchg
cmp
insb
int
jmp
pushf
cs
in
movsb
addr16
andl
push
sarl
pop
add
xor
lret
push
fimull
and
xor
cmp
aam
out
add
pop
jle
pop
and
iret
pop
fdivs
inc
cmp
stos
cmp
xchg
stos
cld
xchg
in
add
repz
call
cmp
sbb
jecxz
dec
mov
arpl
ret
and
stos
in
int
dec
pop
mov
lods
incl
sub
lret
mov
fcmovu
call
push
push
fwait
adc
fucom
adc
pop
stos
jo
outsl
lea
stos
sbb
sub
aad
pop
fisubrs
es
mov
outsb
sub
mov
mov
xchg
xchg
jns
roll
movsl
outsb
xchg
rorl
mov
dec
jp
or
mov
pop
insl
mov
cli
lods
pop
pop
inc
adc
arpl
mov
push
mov
pop
pusha
ret
aad
int
sub
pop
pop
or
popa
push
mov
xor
dec
orb
add
ljmp
add
aam
or
mov
sbb
fidivl
xchg
inc
xchg
dec
mov
or
cwtl
stc
cwtl
inc
xchg
cmp
pop
outsl
bswap
pop
xor
out
out
outsl
aas
lret
cmpsb
rcll
push
xor
xor
jle
pushf
nop
pop
inc
addl
imulb
xor
es
adc
cmp
es
or
or
pop
pop
lcall
pop
pop
outsb
repz
push
pop
jmp
cmpsl
je
pop
jle
lods
xchg
mov
aaa
dec
cld
xor
sbb
mov
xchg
add
push
mov
nop
cmp
popa
movsb
lock
mov
mov
cmp
cltd
mov
pop
sub
xor
cmp
mov
add
clc
outsl
mov
adc
push
adc
pop
xchg
jmp
xchg
pop
test
dec
or
aaa
jne
or
inc
or
lds
sbb
dec
xor
imul
jne
inc
pusha
shlb
lret
mov
push
loopne
loop
mov
lret
mov
aam
cltd
and
cld
adc
pop
cli
dec
fstl
cld
mov
adc
mov
cld
xchg
add
in
fbstp
icebp
sbb
les
filds
js
fldenv
fdivrs
mov
lods
movsb
xchg
mov
dec
adc
inc
movaps
jecxz
push
mov
adc
xchg
add
rcll
popa
mov
fmuls
sbb
icebp
jb
lcall
sbb
push
ret
jmp
pop
lret
hlt
test
and
push
pop
loopne
cmp
dec
outsl
outsb
js
fistps
adc
mov
gs
xor
push
test
orl
xchg
icebp
and
jo
pop
js
outsl
test
xor
testb
sbb
xor
xlat
push
pop
mov
ret
cmp
jmp
mov
pop
mov
loopne
hlt
xchg
mov
fildl
mov
pop
push
xor
inc
cltd
sbb
push
inc
jle
imul
ss
xchg
ja
mov
ljmp
jne
adc
enter
dec
in
pop
rorb
shll
sub
hlt
into
adcl
shl
lock
daa
and
jl
cmp
and
imulb
push
push
iret
bound
pop
clc
sbb
scas
cli
mov
stc
icebp
mov
in
jge
mov
test
mulb
test
mov
popa
outsl
dec
cmp
mov
fisubrs
jne
ret
fidivs
in
rorl
mov
stos
dec
lock
test
cmp
stos
insb
cmp
je
add
shr
sarl
adc
enter
sbb
hlt
mov
daa
cmpsl
das
adc
out
and
cld
adc
xchg
lahf
add
and
enter
pop
mov
pop
add
sub
sbb
insb
and
in
sub
icebp
into
arpl
inc
lea
cmpl
push
cmp
test
hlt
pop
daa
mov
cmpsl
jmp
push
xor
mov
in
lret
cmp
std
fldt
push
xchg
mov
hlt
and
and
in
xchg
pop
dec
and
movsl
stc
je
mov
shrb
stos
mov
pop
dec
push
aam
add
mov
add
lahf
mov
adc
mov
rclb
dec
or
stc
ret
push
ja
jecxz
mov
mov
sbb
incl
pusha
push
js
out
sbb
outsb
ljmp
jae
lcall
es
out
cmpsb
test
incl
pop
dec
pop
int3
xchg
rcl
in
sub
in
jno
into
repz
repnz
adc
and
dec
mov
cmpl
xchg
push
cmpb
and
test
dec
cmp
icebp
cwtl
arpl
inc
jle
das
cmp
ret
outsb
insl
lods
jmp
pop
pop
xor
adc
aad
cmp
cmp
fnstenv
loope
xor
fwait
xchg
mov
push
jb
cmp
int
les
repz
andl
adc
je
and
xlat
imul
pop
test
lcall
pusha
aaa
hlt
jb
les
push
adc
push
pushf
sub
jl
shl
imul
push
sbb
dec
mov
insl
repz
test
pop
dec
dec
push
jge
iret
popf
adc
or
fdivrs
gs
and
jbe
test
orb
repz
jne
jge
aam
and
pop
pop
aam
push
repz
cli
das
cmp
inc
jmp
xchg
adc
sub
xor
roll
lret
outsb
mov
stos
add
orps
cmc
mov
sbb
sbb
fdivl
mov
rcrb
xor
adc
adc
scas
inc
sub
and
adc
jmp
andl
add
aaa
xchg
cmpl
push
sbbb
mov
xor
stos
fimull
pop
mov
je
xchg
daa
cmp
jo
push
sbb
push
gs
cmp
lret
push
f2xm1
repz
xor
andb
insb
inc
jne
mov
jnp
pushf
xchg
cltd
imul
addr16
xchg
repnz
popf
test
adc
mov
push
dec
out
enter
movsb
ret
xor
add
cwtl
shlb
les
push
scas
hlt
sti
sbb
sbb
popl
out
stc
icebp
nop
js
shlb
out
bound
adc
dec
mov
adc
pop
cwtl
fcmovne
cmp
pusha
mov
pop
cs
add
and
fs
xor
mov
adc
and
hlt
popf
mov
stos
mov
jno
pushf
test
dec
stos
adc
les
arpl
push
jle
push
or
repz
xchg
loop
mov
ljmp
test
lcall
lea
insl
mov
jp
dec
add
repnz
int3
lahf
dec
cmc
frstor
fsubs
jnp
push
or
retw
ja
dec
mov
mov
push
bound
cmp
mov
icebp
lret
inc
add
push
mov
mov
jecxz
ret
push
pushf
adc
pusha
dec
push
dec
lret
xor
xchg
inc
sbb
ret
and
sub
testl
int3
les
xlat
pop
mov
inc
das
xchg
call
inc
cmp
movntq
pop
cltd
or
mov
aam
lds
loope
lods
lock
andl
add
sbb
add
push
push
aam
daa
je
xor
mov
movsb
fs
mov
mov
mov
daa
sarl
ret
pop
int
movsb
fsubrs
divb
fdivrl
pop
cmp
mov
dec
jecxz
into
cld
mov
lods
out
pop
adcb
into
jo
test
sti
outsb
dec
iret
out
addr16
int3
imul
add
cmpsl
pop
in
dec
cmp
push
and
cmp
ja
in
test
shll
sub
sbb
addl
mov
push
fwait
negb
lret
push
push
mov
mov
xchg
aaa
movsl
or
sub
inc
outsb
xor
jnp
fidivl
gs
sahf
lods
pop
out
mov
cwtl
and
iret
aam
das
movsb
nop
or
xchg
cwtl
or
ss
ja
cli
ja
inc
jnp
fadds
clc
push
jg
imul
fbstp
cmp
shlb
jecxz
push
mov
shrb
fwait
adc
repz
mov
scas
sbb
out
sub
andb
jno
and
xlat
and
leave
pop
jge
shll
cld
neg
push
lahf
test
xor
push
pop
inc
cmp
cld
call
adc
std
dec
jg
std
inc
inc
enter
sti
decb
mov
rol
imul
cli
iret
test
shl
inc
arpl
inc
adc
arpl
test
sbb
aam
push
fwait
lea
cmpsl
scas
iret
sti
jo
mov
int3
mov
push
ror
stos
clc
sub
lock
lahf
mov
cmp
mov
push
outsl
jecxz
pushf
sub
pop
or
jecxz
cmp
in
mov
xor
mov
sti
mov
xlat
mov
xor
jnp
lds
repz
add
rcr
es
js
outsb
inc
daa
dec
gs
out
nop
int
call
int
fisubrs
inc
inc
xchg
sbb
sbb
inc
lods
rolb
out
lcall
notl
test
fistpll
loop
inc
or
mov
fdiv
je
adc
mov
cld
dec
loop
popf
adc
pop
dec
ret
pop
fistpl
jo
cmc
dec
adc
aaa
pop
xchg
and
lcall
sub
add
movsl
push
or
outsb
mov
jmp
std
sbb
xor
leave
mov
jecxz
enter
outsb
cwtl
js
hlt
jne
inc
movsb
popf
lcall
in
adc
repnz
mov
and
shll
adc
mov
enter
dec
xor
repnz
or
adc
in
out
fbstp
jnp
sbbb
stos
cmp
lret
mov
dec
shlb
ret
push
mov
pop
inc
out
sub
ret
push
pop
stc
ss
fildl
jbe
inc
jbe
enter
pop
or
fadd
xchg
or
xor
xor
subb
mov
cli
mov
popa
push
xchg
cmp
dec
outsb
jo
sub
aaa
fsubs
aaa
int3
scas
jno
push
cmpsl
ret
xlat
fstps
push
xchg
mov
adc
loope
pusha
dec
sarb
fstps
xchg
push
lahf
inc
add
sbb
mov
vmresume
add
xchg
pop
dec
hlt
xchg
sub
jmp
jb
mov
icebp
into
xchg
es
out
or
andb
sub
mov
fmuls
gs
xchg
lcall
ss
xor
dec
pushf
inc
mov
scas
xor
rep
rcrb
adc
sbb
mov
hlt
and
mov
pushf
or
loop
or
fistps
loopne
xchg
xor
xchg
ds
xchg
push
adc
mul
add
and
daa
lds
jae
nop
push
add
jl
jbe
adc
je
aad
lret
lahf
push
rolb
sub
not
xchg
cli
xor
test
popl
adc
test
in
jno
pusha
add
jbe
push
push
scas
mov
sti
insb
addr16
mov
lds
pop
imul
dec
out
xchg
push
jle
add
lods
mov
rcll
mov
lcall
lock
sub
sahf
lcall
jb
enter
cmp
xchg
add
fidivl
pop
mov
inc
dec
add
in
mov
adcb
adc
push
outsl
jl
sahf
mov
es
nop
lcall
pusha
fidivs
and
sub
add
insl
ret
xor
mov
inc
jecxz
dec
xor
cmpsl
jno
je
popf
jae
stos
cli
jmp
pusha
inc
stc
lcall
es
imul
pop
cmp
test
add
inc
jg
mov
insl
mov
outsl
test
xchg
push
sbb
pop
outsb
in
or
lret
or
movl
outsb
icebp
stc
mov
and
shrb
out
das
jge
insb
sub
arpl
imul
js
out
pop
sahf
jmp
mov
ja
jle
loopne
mov
pop
in
inc
cmpsl
adc
jno
sub
xchg
ret
mov
cltd
sub
sub
pop
sahf
push
outsb
lret
in
dec
jb
out
mov
out
andb
stos
xchg
sbb
repnz
stc
ret
mov
jae
and
outsb
int
mov
sbb
imul
sbb
and
aam
cmp
hlt
jns
faddl
pop
cmp
dec
psubsw
popa
rolb
add
jecxz
mov
fcompl
pop
das
cmp
push
cmpsb
push
push
adc
push
lods
fcomip
jo
xchg
xchg
cwtl
xchg
rorl
outsl
ja
inc
push
scas
or
pop
adc
push
inc
xchg
sbb
or
dec
rcl
cmc
dec
push
fcmovnu
sbb
nop
jecxz
pop
daa
mov
outsb
push
jge
cmp
jl
fistps
cmc
insb
mov
jmp
inc
mov
pop
mov
jg
into
jecxz
sbb
in
add
or
inc
sub
cmpsl
sub
aaa
push
test
add
xor
push
dec
or
jle
jle
jge
icebp
ja
fldenv
pop
imul
xor
sbb
adc
sub
sbb
pop
enter
cmpb
adcb
mov
or
xor
ja
fcomps
inc
jo
push
andl
xor
dec
push
adc
dec
cltd
fstpl
mov
jecxz
jmp
daa
shr
test
add
mov
out
sub
sbb
mov
sbb
mov
sbb
xchg
mov
and
mov
pop
mov
sbb
inc
aad
xchg
jp
hlt
adc
mov
inc
stos
cmpsl
or
popf
push
sub
and
dec
dec
rol
mov
jp
gs
dec
pop
and
cmpl
xchg
push
in
mov
cmp
xor
dec
repnz
out
dec
lret
in
add
or
xchg
cltd
repnz
push
rcrl
cmovb
and
test
ret
fs
test
int3
or
out
xorb
mov
pop
mov
aas
lret
iret
hlt
jge
mov
out
lock
mov
aaa
pushf
nop
stos
cmp
lods
xchg
cmp
icebp
in
dec
mov
les
je
sub
or
dec
and
data16
out
sub
xchg
mov
and
mov
fwait
lock
dec
mov
and
or
scas
gs
dec
insb
xchg
dec
out
fsubl
push
adc
pop
idivl
out
arpl
dec
shlb
jmp
repz
cmpsl
push
and
xchg
cmp
push
cmc
dec
pop
and
adc
stc
mov
sbb
jle
clc
push
jbe
xchg
cmp
test
cmpb
sub
push
pop
jae
sub
cli
cwtl
fdivl
mov
mov
je
aad
dec
call
hlt
fcomp
orl
cmpsb
jl
rorb
mov
dec
inc
adc
movl
repnz
lea
xchg
popa
jo
xor
mov
stc
lock
dec
sbb
filds
mov
int3
xchg
jge
push
mov
pop
jbe
pushf
and
mov
ljmp
push
out
adc
data16
sub
mov
mov
sub
mov
in
xorb
jg
pop
mov
testb
pop
jge
negb
dec
push
mov
pop
jge
test
jle
testl
push
adc
out
pop
insl
sbb
stos
push
mov
pop
mov
fdivr
jb
in
dec
jo
in
pop
orb
das
jno
movsl
adc
or
insb
sbb
arpl
das
and
dec
cmp
adc
jl
xchg
movb
add
dec
test
push
sahf
mov
cmp
jl
loop
clc
xchg
and
cmc
loop
imul
in
fisubrl
push
cmpsl
and
out
cmp
sarl
aas
clc
pop
xlat
mov
sahf
rol
push
mov
test
pop
shrl
sbb
cmp
cli
mov
or
pop
push
loopne
jge
xchg
mov
cmp
push
popa
mov
popf
cwtl
sbb
sub
xchg
pop
xor
lcall
andb
scas
xchg
dec
mov
jnp
or
gs
xchg
mov
movsb
push
jne
cmp
cmp
stos
or
adc
fisttps
add
nop
xor
mov
pop
inc
xor
jnp
jp
mov
mov
mov
int
and
mov
jg
lods
scas
sbb
repnz
pop
mov
sub
xchg
inc
cmp
mov
outsb
push
sub
repz
push
push
movsb
ljmp
incb
adc
icebp
stc
inc
daa
ret
add
inc
sbb
enter
jg
scas
and
mov
jmp
clc
or
movsb
push
cld
xlat
pop
or
in
popl
lcall
int
sbb
jae
mov
mov
sahf
inc
test
fadd
pop
enter
movsb
popa
mov
pushf
sub
insl
push
sub
insl
stos
dec
mov
xchg
adc
push
adc
mov
lret
inc
adc
jns
ljmp
pop
les
cmp
testb
jo
lahf
mov
jb
cmp
es
mov
out
test
cmp
in
push
dec
dec
dec
pop
lods
inc
aad
lea
xchg
sahf
aad
orl
sbb
mov
pop
xor
inc
gs
in
pop
or
jmp
sbb
in
mov
mov
mov
vmwrite
in
add
mov
gs
nop
fidivrs
test
es
mov
xchg
mov
mov
insl
pop
loope
xor
xchg
jl
xchg
sub
jmp
add
push
flds
fmulp
lds
addr16
xchg
shlb
insb
in
jo
dec
mov
popf
inc
or
vphaddwq
jns
xor
pop
ds
shlb
test
mov
xor
mov
adc
stos
sbb
mov
pop
mov
js
pop
add
cmpsb
sub
fcomp
popa
cmp
out
or
das
ss
lods
jg
push
pop
lods
cmpsl
cmp
lcall
and
pop
shlb
pop
sub
xor
leave
sbb
outsl
repnz
enter
lds
push
std
pop
loop
addb
add
ss
xor
xchg
push
pop
js
bswap
lock
mov
lret
inc
or
or
dec
jmp
cld
daa
fcomip
xlat
pop
sti
and
cmp
jno
sub
imul
xor
stos
lods
popf
mov
and
push
je
jge
nop
flds
dec
sub
push
mov
mov
pop
cwtl
mov
or
xchg
pop
lods
ljmp
shll
aas
xchg
dec
stos
mov
stos
mov
pop
or
sub
into
sbb
jecxz
mov
pop
lahf
shr
loope
adc
fbld
imul
pop
mov
xchg
popf
mov
pusha
lods
mov
shlb
idivl
int3
pop
jb
or
pop
pushf
aaa
mov
xor
sarl
nop
push
jecxz
in
cmp
xorb
imul
push
or
lods
popa
iret
jg
test
ss
push
mov
jge
cld
dec
lret
mov
call
sbb
fsubr
jl
jbe
jno
nop
sysenter
or
ret
pop
and
cmpsl
mov
call
rcr
in
xchg
maxpd
aad
iret
jo
fidivrs
pop
jl
cmpsb
add
or
rolb
inc
push
ffree
mov
mov
sti
xor
xchg
test
add
jnp
push
push
popf
mov
adc
sti
cld
push
push
ret
or
lods
inc
pop
mov
cli
jne
xchg
and
data16
mov
xchg
add
movsl
sbb
je
mov
shlb
mov
inc
loopne
jb
or
fildll
divl
dec
lock
xor
test
orb
out
xlat
into
push
scas
popf
mov
out
arpl
cmpsb
or
lahf
ja
xchg
sub
iret
es
sbb
cmp
repnz
mov
sbb
cmp
popa
inc
aas
sub
sti
cmp
mov
inc
mov
mov
arpl
out
add
adc
sub
call
mov
fxch
and
inc
scas
jnp
sbb
insl
das
push
xchg
and
inc
cli
or
idivl
shll
cmp
int
adc
enter
cmc
jno
add
lock
ror
icebp
adc
adc
xchg
pop
stc
cld
fwait
adc
or
pop
popa
inc
or
mov
inc
sbb
je
jp
xlat
pop
pop
or
test
inc
cs
xor
mov
out
and
sbb
lods
cmp
aam
cmp
mov
into
fldcw
out
and
fs
pop
push
scas
pop
insb
sub
lret
pop
fimuls
mov
mov
dec
mov
xor
push
inc
in
jmp
cmp
fs
test
mov
mov
fnsave
ret
jb
cmpsl
push
insb
out
inc
adc
nop
dec
xlat
and
mov
ja
mov
jns
iret
out
mov
cmp
xchg
jp
xlat
loopne
cli
sbb
sbb
into
sub
jne
mov
xor
test
mov
jmp
popa
mov
out
adc
adc
jecxz
loopne
inc
sti
jg
sub
sbb
test
adc
cmp
or
inc
test
sub
sbb
and
xchg
outsb
test
movsl
lahf
mov
fisttpl
out
push
jg
arpl
jae
inc
notl
in
or
push
push
jmp
cmp
sbb
or
add
dec
dec
push
outsb
mov
aad
ret
pop
inc
fs
outsl
addr16
and
jnp
ja
int
movsl
loope
mov
mov
out
push
fwait
aaa
call
es
mov
mov
movb
add
aaa
push
out
or
push
pop
adc
ret
or
out
push
ficoml
cwtl
pop
outsb
mov
mov
aas
nop
add
or
ficomps
or
push
mov
je
call
xor
ja
mov
lods
dec
data16
mov
mov
pusha
jge
jge
rorl
mov
test
push
scas
mov
pop
adc
sub
cltd
lcall
or
lock
inc
shll
xor
lret
aas
mov
xor
jecxz
push
lods
xor
cltd
dec
call
pushf
mov
sti
scas
jg
mov
std
lcall
andb
dec
es
pop
xchg
push
jno
hlt
dec
lock
cld
sahf
in
ss
mov
repnz
jne
dec
cli
xchg
pop
adc
fildll
repnz
loop
inc
insb
inc
jge
push
or
cmpsl
lods
in
or
push
cmp
sub
cli
xchg
adcb
in
push
nop
fcomps
or
fwait
pop
aad
and
loop
std
mov
jnp
dec
dec
push
stos
test
jp
sub
cmp
ret
mov
daa
cmp
int
out
push
das
push
cmp
and
dec
hlt
shr
imul
hlt
add
xchg
xchg
popf
fabs
jle
add
sub
sub
jecxz
shll
hlt
mov
loop
imul
mov
lock
out
mov
dec
adc
lcall
inc
lock
or
add
div
xor
out
dec
sbb
and
mov
hlt
leave
fstl
mov
repz
sti
xchg
add
repnz
aad
or
pop
fbstp
repnz
sbb
pop
pop
jb
mov
jae
pop
addl
mov
pop
fwait
out
sarb
ret
repz
and
xchg
lahf
imulb
divb
stos
push
sbb
test
out
shll
or
dec
jecxz
push
sbb
pop
ret
mov
insl
arpl
sub
sub
js
stos
xchg
push
or
ljmp
xchg
shll
mov
rorb
aam
mov
push
scas
cmpb
hlt
arpl
inc
enter
add
xchg
cs
lcall
sub
arpl
mov
stos
mov
clc
xchg
push
out
sub
push
aas
lock
lock
lods
stc
mov
inc
mov
aad
hlt
icebp
ret
das
mov
mov
pop
fcompl
pop
es
loope
adc
pop
sbb
bound
cmpb
xor
test
scas
mov
adc
mov
lcall
in
mov
mov
sub
xchg
shlb
sub
aas
mov
inc
xchg
test
pop
shrb
daa
insb
cmpsb
loope
jbe
cli
xchg
push
xchg
and
mov
adc
mov
adc
lock
lcall
dec
mov
jae
sub
mov
cld
aas
adc
pushf
pop
or
jae
mov
jmp
imul
jbe
mov
int
test
mov
mov
pop
stos
ljmp
add
push
cs
dec
icebp
mov
cmp
sub
imul
push
jns
xor
js
cmp
xor
xor
inc
jae
jmp
mov
sub
dec
test
popa
add
pop
pop
ret
inc
mov
or
dec
xchg
mov
add
sbb
mov
cmpsl
cmp
sbb
sbb
sub
insb
outsb
test
mov
pop
push
cmp
notl
cmpsl
testb
fadd
dec
add
sbb
rcrb
push
mov
add
movsb
pop
es
es
adcl
push
test
xchg
dec
sub
push
adc
inc
xor
movsl
xlat
xor
add
sbb
aas
sub
outsb
jbe
push
inc
mov
test
aam
pop
shll
jle
mov
mov
xchg
pop
sub
xchg
and
test
movsl
iret
pop
cmp
push
mov
add
ds
fnstenv
rorl
cmp
xor
dec
or
mov
xchg
push
notl
fidivl
outsl
or
sub
xor
mov
movsb
pushf
cmp
inc
mov
sbb
arpl
gs
push
cld
inc
pop
push
push
jecxz
xor
jecxz
ss
mov
stos
lahf
cmp
cmp
enter
cmc
xorl
inc
je
dec
imul
sub
movsb
jb
arpl
test
xchg
jmp
dec
leave
lock
mov
ffree
test
rclb
fs
fistpll
cwtl
scas
mov
jo
call
mov
in
fmull
or
jno
adc
sub
sbb
inc
sti
jb
jecxz
dec
out
sarl
cld
out
push
lock
and
aad
pop
jnp
sub
fisubrs
out
ret
adc
xor
repnz
add
fs
adc
jmp
out
loope
pusha
cmp
or
lret
fistpll
in
out
add
aad
test
inc
push
stos
jo
or
mov
or
push
push
xor
lock
jle
push
subl
pop
test
lret
mov
xchg
sbb
pop
push
jb
cmpb
jg
mov
adc
stos
sahf
ret
cmpsl
jne
fildll
test
pop
cmpsl
sub
inc
mov
dec
test
jmp
fistpl
adc
mov
enter
addr16
push
and
je
popf
xchg
dec
lock
andl
xor
fistps
fsubp
jno
push
mov
ja
cmp
dec
stos
cmpsb
sbb
test
je
rorl
push
adc
pop
adc
sub
popf
lods
pusha
loop
jmp
sbb
push
popf
arpl
stos
outsb
xchg
int
sub
push
add
inc
mov
mov
xchg
rorb
xchg
pop
xchg
mov
xrelease
das
xor
nop
xchg
ds
push
xchg
cmp
shr
test
mov
out
lcall
outsl
and
adc
mov
mov
filds
rclb
pushw
cmpl
jnp
test
enter
lret
pop
addb
ja
imul
jmp
jb
negb
cmpsb
xchg
aam
push
outsb
int
into
xchg
stos
xchg
ds
sbb
es
push
aaa
push
push
lods
cltd
sub
cmpsl
jbe
mov
in
mov
fidivrs
xchg
ss
xor
push
shlb
addr16
mov
sub
mov
push
cmpb
test
leave
add
pop
cwtl
mov
out
sub
je
sarl
xor
jae
aam
push
loope
ljmp
add
cmp
popf
fadds
mov
out
add
push
cmpsb
rcrl
sti
and
fwait
push
xor
push
inc
enter
push
jno
lock
int
cs
fadd
dec
in
xor
shlb
or
mov
cmp
sbb
jno
mov
dec
dec
add
ss
mov
cmpsb
fisttpll
iret
enter
fldenv
movsl
das
add
mov
mov
sti
ficoml
inc
mov
fldcw
dec
sbb
loope
lods
sub
pop
lret
xor
add
dec
test
lret
and
out
scas
sub
movsb
out
pop
adc
lcall
add
add
sbb
out
movsl
loop
jb
inc
xchg
cs
pop
les
negl
pop
jns
inc
je
dec
roll
push
jecxz
sarl
mov
iret
cmpb
mov
les
inc
mov
push
push
dec
mov
lods
pop
into
mov
aam
cs
xchg
fmull
mov
push
fwait
xor
roll
mov
aaa
pop
mov
mov
mov
aad
daa
lret
xor
xchg
out
sti
movsb
lahf
les
mov
in
jbe
pop
cmpsl
or
scas
mov
stc
push
push
mov
das
testb
addr16
jp
sub
lea
push
andl
loope
dec
daa
jge
cmpb
cmp
pop
jae
mov
pop
xorl
inc
repnz
iret
lret
cmpsl
dec
add
sub
jae
push
out
xor
mov
xchg
mov
clc
push
stc
outsb
mov
and
mov
ret
jmp
test
xchg
hlt
sub
sbbl
insl
scas
push
cmp
xlat
mov
out
jae
adc
dec
and
out
mov
jb
jle
addr16
dec
loope
fisttpll
shrb
in
aad
scas
addl
test
mov
jge
sub
or
add
push
and
pop
jle
xchg
xchg
rcll
stos
icebp
xor
mov
add
inc
les
add
xlat
lods
pop
rol
xchg
sub
xchg
mov
cmpsb
sbb
mov
in
jl
pop
jo
lret
movsb
aas
sbb
lea
sti
addb
dec
cmp
std
xchg
das
cltd
jmp
imul
stos
imul
dec
test
pop
je
adc
jge
fadd
push
rorb
test
fstps
mov
jp
negl
push
das
pusha
in
std
jo
sbb
inc
jl
mov
and
jnp
sub
mov
xorb
insl
mov
dec
loopne
xor
inc
jmp
dec
imul
jnp
test
or
pop
push
getsec
cmp
or
or
ss
or
add
push
inc
out
xchg
cld
push
or
pushf
aad
addl
int
and
insl
mov
ds
iret
pop
shl
sub
dec
jp
xor
jae
mov
and
nop
cmpsb
adc
xchg
jmp
cmp
fwait
xor
mov
cltd
outsl
dec
add
jecxz
fisubs
jecxz
mov
inc
xor
mov
xor
and
iret
ljmp
sub
scas
loop
mov
rolb
ret
js
push
out
or
dec
ret
vpmaddwd
push
xchg
jge
push
lea
cmp
and
lret
jo
pop
pop
push
add
pop
push
inc
mov
notb
outsl
dec
push
testb
imull
rcrb
cmp
pop
loopne
cmpsb
mov
adc
add
xchg
fistpl
mov
loope
stos
call
shlb
in
loopne
fwait
shl
jns
cmpsl
les
jb
jmp
jl
popf
dec
fwait
xchg
fiaddl
in
xchg
cwtl
mov
fsubp
sub
pop
std
imul
pop
sub
cmp
out
xor
leave
push
and
pop
and
std
xor
repz
fdivl
scas
outsl
xor
or
int
stos
mov
fdivp
lret
dec
ret
pusha
xlat
je
push
cmpsl
pushf
clc
sahf
mov
xor
jl
add
repnz
sub
iret
xor
mov
xchg
les
jo
pop
push
repnz
imul
loopne
mov
mov
enter
jne
loop
roll
in
aad
xor
mov
push
cld
sbb
sarl
inc
shl
sub
cmp
pop
xor
xchg
sbb
mov
lock
std
leave
arpl
add
xlat
push
les
lea
pop
dec
js
pop
inc
js
sbb
mov
cmp
cli
and
pop
xchg
xchg
mov
cmp
cmpb
fsubl
loope
mov
xor
ljmp
mov
mov
enter
push
adc
scas
fisttps
imul
into
jbe
pop
lods
add
out
in
fcoml
ja
mov
packssdw
adcb
dec
lcall
cmp
sub
mov
mov
add
stos
jns
mov
gs
lret
add
sarb
mul
add
aaa
daa
xchg
or
ss
ficoms
jns
loop
push
imul
or
mov
ret
outsl
lock
insl
fisttpl
xchg
xor
xchg
in
adc
push
imul
fldcw
and
pushf
mov
mov
mov
cmc
xchg
rcrb
sub
imul
or
mov
jecxz
xor
jne
sbb
xchg
jae
ret
call
mov
outsb
pop
and
sbb
add
test
outsl
sub
imul
push
jno
inc
bound
loop
pop
mov
jmp
aad
repnz
lea
jo
pop
add
xchg
jae
loope
popf
aad
fcoms
mov
jmp
loope
int3
cld
std
stc
or
pop
jno
add
clc
in
add
stos
mov
sub
jmp
repnz
shr
pop
fbstp
out
dec
and
test
cmpsl
lret
dec
inc
stos
add
sub
cld
shrl
cmpsb
sbb
cli
pusha
insb
inc
push
xchg
fucomp
gs
lret
xor
das
xchg
mov
sbb
xchg
iret
push
and
outsb
jnp
ret
xor
dec
jb
mov
inc
aas
cli
mov
fisttpl
push
jle
and
fistpll
leave
inc
xchg
stc
xor
dec
sbb
cmp
out
addr16
fidivs
mov
repnz
stc
push
dec
fcomps
jle
pop
dec
adc
das
adc
cmp
jno
and
mov
hlt
jp
or
in
loop
xchg
dec
push
cld
outsb
cli
bound
cmpsl
and
inc
push
inc
push
arpl
xlat
mov
scas
mov
shll
test
sub
mov
stos
lds
pop
adc
pop
aad
mov
sub
pop
fistpl
add
int3
mov
out
stos
jecxz
pop
sub
or
aam
add
addl
repz
shr
mov
sbb
add
mov
outsb
stos
mov
lods
outsl
lret
sahf
and
sahf
es
adc
dec
imul
lcall
xorl
inc
jp
cltd
xchg
daa
std
or
andb
cld
mov
inc
ret
add
subb
scas
pop
sbb
cmp
jnp
mov
add
fidivrl
sbb
mov
mov
mov
sub
and
lret
scas
adc
js
and
add
in
enter
test
xor
in
mov
nop
cmp
stc
mov
jbe
fwait
xchg
adc
or
cwtl
xor
xor
jae
xchg
jae
fwait
jl
dec
je
data16
adc
inc
into
cmp
jns
loop
ret
or
bound
cmp
sub
jns
pop
mov
mov
clc
push
pop
ds
shll
push
ret
cmp
rcrb
data16
add
xchg
movsb
jl
mov
mov
jle
enter
call
push
fs
out
cmc
outsb
cmp
call
add
lahf
inc
push
enter
pushf
add
xchg
in
test
mov
es
sub
js
or
cltd
pop
sub
cld
adc
add
mov
mov
or
in
loopne
enter
inc
xor
jnp
pop
icebp
jmp
sar
popa
stos
adc
stos
cli
enter
daa
loopne
inc
loope
ficoml
and
data16
or
and
mov
jmp
mov
daa
popa
test
xchg
cmp
pop
rol
cmc
js
add
xchg
inc
sbb
xchg
ljmp
shll
xor
mov
jg
xor
xchg
add
sub
dec
xchg
jae
pop
shrb
inc
daa
mov
std
sub
ficoms
out
pop
mov
shll
sbb
xor
inc
cmc
mov
in
push
fbstp
dec
jns
test
jne
jne
and
sub
jmp
call
mov
sbb
mov
adc
add
scas
lods
pop
fnstsw
loope
and
pop
pop
ds
loope
call
or
jne
sbb
call
or
xchg
add
inc
aas
xchg
nop
js
lahf
shl
push
xchg
mov
cmpb
cmp
push
sub
add
jmp
and
sub
mov
inc
adc
les
add
mov
mov
in
test
lock
push
jno
aad
imul
cmp
in
push
jb
pusha
decb
or
sbb
addb
xor
ja
mov
lds
pusha
testl
std
adc
jb
movsb
sub
scas
or
dec
sub
fnstcw
sti
cmpsl
push
daa
cs
mov
push
out
xchg
sbb
outsb
cwtl
or
aas
lret
es
push
dec
testl
test
test
lods
pop
jae
les
inc
std
sahf
cmp
cs
mov
jge
inc
out
addl
adc
push
push
std
rcl
cmp
xor
stos
sub
mov
outsb
sbb
lods
scas
ficoms
or
cmp
insb
int3
xor
in
lahf
aam
push
pusha
fdivrl
mov
dec
cmc
shll
ret
lds
inc
jmp
cli
inc
imul
les
or
mov
mov
into
push
jne
andb
fldcw
or
lds
insl
idivb
dec
aam
std
lret
cmp
fs
lcall
in
outsb
jmp
pop
mov
mov
push
xor
inc
dec
xlat
inc
jp
mov
mov
add
inc
or
fcmovb
iret
inc
push
pushf
js
push
adc
cmpsl
test
pop
pop
fs
call
or
mov
icebp
aaa
dec
je
and
scas
je
pusha
sti
inc
and
push
jle
lods
lahf
imul
push
sub
aas
dec
popf
cmp
adc
icebp
xchg
cmp
imul
jl
call
bound
test
mov
loopne
xchg
aad
cmp
cmp
mov
outsl
add
cld
adc
add
xor
push
sbbl
cmp
push
jle
mov
ret
aas
xrelease
popf
jns
loopne
sbb
adc
rol
rol
jnp,pt
out
test
pusha
test
adc
dec
lcall
inc
rolb
into
in
rorl
add
adc
cmp
mov
push
mov
in
ljmp
xchg
imul
mov
mov
mov
adc
mov
add
fists
insb
sbb
mov
mov
sub
jg
mov
leave
sub
jns
adc
or
push
int
lock
push
sbb
testb
rorb
imulb
ficoms
and
mov
adc
pop
jl
aad
and
cmp
pop
push
inc
leave
fnstcw
cmp
repz
aam
add
or
mov
ds
add
mov
lret
mov
jecxz
test
xchg
les
jge
and
pop
dec
add
lret
ret
out
clc
scas
sub
ret
push
and
lods
xchg
test
shlb
xchg
cmp
pop
in
fisubs
xorb
movsl
sbb
pop
lods
in
lahf
xor
jno
daa
dec
rcrl
jle
mov
dec
scas
mov
rol
clc
adc
pop
movb
dec
lods
pop
icebp
call
mov
sti
insb
sub
addr16
dec
mov
ret
mov
in
cmc
stos
or
fisubrs
dec
mov
inc
rclb
sub
test
out
push
sbbl
and
aas
pop
mov
out
dec
sub
mov
pop
jmp
push
push
out
int3
mov
add
or
xchg
inc
pop
mov
cmpsb
aas
es
xor
jae
flds
mov
subl
jmp
rorl
mov
out
mov
dec
pop
jp
jb
mov
inc
add
out
push
cmp
mov
jg
inc
leave
cmpsl
int
cmp
cmp
ret
add
icebp
ja
outsl
jae
aad
je
and
inc
es
xchg
or
dec
and
insb
dec
mov
mov
into
and
jbe
sbb
sbb
dec
xorb
inc
mov
popf
inc
push
ds
in
test
push
add
mov
cs
mov
loop
pop
push
sbb
mov
and
mov
lock
lods
lret
sub
cs
hlt
jns
dec
ficoml
jne
bound
xor
mov
into
mov
push
nop
fcmove
mov
call
mov
xlat
lcall
test
mov
push
cmp
mov
xchg
lcall
jo
insl
jne
dec
stos
cmpsb
sbb
repz
pop
cmc
lock
enter
maskmovq
idivl
test
xor
test
or
and
or
test
jno
es
test
pop
add
jno
and
lea
push
in
movsb
cld
jmp
faddp
push
repnz
test
pop
xchg
cmp
loop
cltd
mov
stos
adc
movsb
cli
lods
in
ss
shr
ficoms
dec
mov
ficomps
push
add
cmp
inc
stc
lock
push
gs
cmp
shr
jae
test
inc
push
jae
jp
lds
add
jmp
add
repnz
adc
shll
sbb
lret
daa
inc
mov
add
dec
ret
jecxz
orl
jge
pop
mov
nop
sub
cmpsl
jbe
jmp
pop
cmp
fsub
stc
in
scas
dec
inc
xchg
sbb
mov
sbb
loope
sub
jp
sub
push
pushf
xchg
mov
fbld
cmp
jbe
aas
outsl
and
fldlg2
test
fnstsw
inc
lcall
fsts
inc
adc
mov
int3
inc
fbld
add
mov
lahf
mov
inc
pop
jp
into
adc
jle
mov
inc
mov
dec
outsl
mov
cli
test
dec
xchg
cmp
push
cmp
add
ret
fadds
arpl
imul
jp
hlt
pushf
dec
xchg
and
pushf
adc
pop
adc
cmpsl
pop
sub
cmpsl
pop
push
es
subl
or
add
push
jle
movsl
icebp
xor
xchg
sub
push
mov
push
mov
lret
icebp
or
xchg
notb
or
loop
subb
test
lods
ds
sbb
aam
cli
mov
data16
xor
xor
fimuls
pop
sub
dec
addr16
sbb
adcb
loopne
and
aam
inc
jmp
fcmovb
hlt
shll
mov
out
cmpsb
test
fninit
mov
add
mov
xchg
dec
pop
cmp
data16
push
inc
pop
jo
clc
adc
mov
bound
push
lcall
shl
and
shll
out
cmp
fs
xor
pop
pop
in
jo
mov
dec
or
mov
jge
inc
sub
mov
fdivr
mov
inc
les
das
out
xchg
sub
movaps
ja
icebp
aad
je
push
xchg
fiaddl
add
cmp
and
icebp
sub
pop
mov
lret
jmp
or
mov
outsb
dec
sub
fiadds
jmp
cld
cmp
sbb
adc
movsb
repz
lret
gs
leave
loop
dec
xchg
sub
push
and
fwait
add
outsb
push
sahf
add
js
jmp
sub
mov
jns
stos
sbb
mov
cmp
stos
aas
mov
cmp
fisttpl
cmp
xchg
out
iret
mov
lret
lret
pop
orl
add
cmpb
xor
jne
adc
test
dec
jns
ret
dec
pop
or
or
fmull
sub
pop
jne
in
pushl
cmp
jnp
je
in
lock
adc
sub
mov
int
and
cmp
push
and
xchg
in
mov
dec
or
xor
ret
jecxz
cmp
add
xchg
test
dec
imul
jnp
adc
inc
ror
rorl
jg
dec
xchg
sbb
clc
out
xor
fisttps
xor
in
insb
stos
sub
jmp
aam
testl
in
xchg
or
sub
push
insl
cmp
xchg
fsubs
insb
mov
cld
dec
loopne
lock
xor
aam
adc
shrl
test
mov
and
insb
or
rcr
stos
mov
cld
pop
das
adc
adcl
add
js
pop
dec
adc
mov
in
adc
pop
inc
adc
rcrl
loope
jne
sti
mov
xor
bound
iret
out
inc
roll
push
addl
mov
jp
mov
pop
xorl
ja
dec
mov
aam
sub
imul
in
xchg
popa
adc
sbb
rclb
imul
inc
dec
jnp
repz
sub
ss
mov
inc
pop
mov
mov
div
mov
adc
shr
mov
dec
lret
adc
out
adc
iret
lret
call
adc
xor
repz
push
dec
adc
insb
rcr
dec
enter
nop
mov
xlat
sbb
icebp
pop
sub
sbb
imull
push
or
xor
xchg
cmp
dec
jo
loopne
jno
jae
fnstsw
into
mov
call
mov
sbb
in
roll
xchg
aam
sub
xor
push
enter
push
insb
imul
fimuls
push
loope
sbb
jbe
clc
imul
mov
mov
mov
je
data16
cld
out
test
xor
sbb
pop
xchg
fiadds
outsl
leave
fistpll
sbbb
inc
pop
xchg
lods
jae
add
into
sbb
sbb
lods
jno
outsl
adcb
sbb
les
sub
inc
pop
fsubrl
mov
outsl
mov
xlat
into
stos
jl
mov
out
in
mov
hlt
call
fidivs
push
lret
aas
test
arpl
xchg
rorl
mov
in
xchg
loope
dec
and
ficoml
add
sub
add
dec
lods
mov
inc
roll
idiv
gs
xchg
scas
mov
popf
sub
pop
push
jne
test
scas
push
mov
lret
adc
cld
sti
xor
jae
adc
test
sub
inc
xor
sbbb
jnp
in
inc
fadds
mov
repnz
and
inc
stos
add
or
es
mov
or
mov
out
les
js
sbb
sahf
hlt
sbbl
xchg
or
and
sbb
aas
das
enter
popl
pop
dec
push
mov
dec
in
out
sub
sbb
xchg
and
in
imul
pop
leave
push
mov
cmpsl
sub
adc
mov
cmp
imull
insl
inc
pop
mov
and
icebp
cltd
popf
push
sub
and
sbb
fistps
out
nop
mov
nop
sahf
add
pushf
repnz
jle
scas
mov
cmpsb
mov
push
loope
dec
cmp
add
scas
xor
inc
loope
loope
insb
fdiv
xor
sti
fdivs
or
stos
cmp
pop
dec
cmp
stc
and
int3
shll
imul
mov
cmp
movsb
push
shr
std
sbb
loop
lcall
adc
shlb
scas
lret
sbb
lea
mov
mov
popf
mov
enter
mul
rcrl
sbb
repz
add
xorl
inc
jb
cmp
sti
jno
cmp
add
shr
cmp
xor
cmpsb
add
mull
mov
inc
arpl
test
aaa
mov
add
movsb
data16
push
xchg
sbb
xchg
add
icebp
add
sbb
loopne
imul
dec
movsb
rcrb
dec
mov
mov
mov
sbb
icebp
jo
inc
fnsave
je
loop
aad
cli
xor
pop
repnz
jecxz
mov
or
lret
stc
lahf
inc
sub
nop
jo
dec
sbb
xor
mov
es
and
fwait
lret
stos
int3
push
std
cltd
xor
dec
push
jmp
pop
cli
jnp
std
fcmovb
imul
repnz
push
enter
inc
push
dec
add
je
sub
out
push
cmp
sbb
xchg
mov
js
addl
mov
fstpt
xor
bound
stos
mov
inc
pushf
std
fs
xor
cwtl
int3
cld
sub
test
insl
ret
stos
outsb
fs
in
insb
lret
aas
rol
data16
inc
dec
sub
inc
dec
std
add
stos
pop
cmpsl
sbb
mov
or
fnsave
cmp
mov
inc
test
sti
jecxz
mov
mov
and
loope
ja
lea
adc
mov
mov
and
testb
fiaddl
xor
mov
in
cmp
stos
jo
or
int3
pop
pusha
nop
leave
or
sbb
cmc
out
add
sub
dec
mov
scas
xchg
icebp
sub
inc
lea
inc
lahf
pop
mov
push
testl
mov
and
cmp
xchg
add
xor
jg
mov
pop
mulb
pop
push
mov
push
jne
lds
lock
pop
mov
mov
add
cmpl
or
jecxz
inc
popa
xor
inc
cwtl
mov
sbb
fistpl
xor
mov
dec
mov
fdivs
in
lea
push
mov
push
daa
test
je
cltd
data16
repz
mov
les
add
les
pop
lea
and
lcall
jp
fwait
ret
adc
arpl
ret
imul
mov
sahf
adc
adc
pop
mov
pop
cmp
jb
mov
adc
xchg
pop
cmp
or
add
sub
sti
fisttpll
mov
aad
dec
js
push
gs
sub
rorb
cmpsb
xor
mov
leave
cmp
test
xchg
stc
sqrtps
les
fldenv
push
mov
enter
dec
insl
icebp
test
int
lahf
data16
and
fwait
inc
sbb
enter
enter
movsl
jmp
push
adc
sbb
lock
div
inc
ljmp
inc
fldl
cmp
repz
frstor
icebp
fisubl
movl
add
aaa
adc
popa
mov
in
add
jb
rcll
or
or
mov
cli
pop
adc
std
push
clc
adcb
jbe
add
xchg
sbb
jle
fildll
lock
jo
sub
jno
and
dec
pop
push
jne
ret
loop
xchg
add
xor
mov
rolb
ljmp
cltd
mov
mov
pushf
xor
sbb
mov
sub
push
and
fwait
ja
push
add
mov
dec
and
sbbb
lods
xchg
and
sbb
test
test
xor
popa
cmp
cmp
xchg
push
aas
nop
mov
addr16
push
mov
adc
jge
andb
mov
jmp
in
je
fdivp
in
shl
inc
pop
push
xor
lock
add
insb
fs
in
push
pop
mov
dec
in
jg
mov
outsl
incl
cmc
fiaddl
test
jnp
clc
push
lret
shll
sti
ja
mov
ljmp
cmp
cmp
or
add
fidivs
fs
and
xor
pusha
mov
or
ror
mov
mov
rcll
repz
jns
nop
jo
or
or
jo
data16
jmp
xor
mov
scas
cs
jl
hlt
or
xor
adc
ds
jbe
mov
pop
push
popa
mov
pop
clc
mov
into
mov
xorb
mov
xchg
dec
aad
aas
inc
xchg
pop
jmp
jmp
aad
sbb
shlb
mov
jmp
les
test
insb
out
mov
jecxz
inc
jb
xor
mov
lahf
fists
test
xchg
jle
inc
jle
pop
dec
pop
mov
push
cmp
leave
jge
pusha
scas
dec
jmp
sub
pusha
loopne
clc
std
mov
inc
xor
mov
aad
arpl
lret
movl
xor
inc
jmp
sbb
add
mov
mov
and
xchg
loop
add
movl
es
sbb
mov
mov
js
rcl
imul
aam
outsl
cmp
inc
pop
jl
loopne
pop
scas
cmp
sbb
mov
fucomp
scas
jle
inc
mov
ror
push
cmp
jo
out
and
cmpsl
out
xor
xchg
pusha
scas
addb
vcvtps2pd
das
or
test
cmp
ljmp
out
dec
or
gs
adc
ss
nop
inc
fcomp
imul
push
sbb
mov
xchg
or
test
dec
jnp
and
fistpl
jge
push
hlt
mov
dec
in
sub
sub
and
aam
fimull
inc
clc
cmp
loope
jnp
pop
loopne
int
jns
and
cmp
push
pop
inc
lock
clc
and
sbb
adc
push
int3
or
sti
add
dec
jp
aas
dec
inc
repnz
shlb
into
mov
call
and
cmp
hlt
lret
mov
mov
inc
in
popa
mov
insb
mov
fldt
in
adc
cmpsl
int3
inc
mov
dec
in
scas
in
mov
push
sub
pop
inc
inc
fisubrl
lcall
or
je
cli
orl
pop
insl
fisubrs
arpl
test
add
in
pop
xlat
push
mov
cmp
dec
or
mov
add
out
ja
decl
mov
sahf
jnp
mov
push
loop
lock
outsb
in
adcl
sbb
das
repz
repnz
push
push
jl
fwait
jg
xor
push
ss
popa
push
ret
mov
dec
leave
and
xchg
pop
or
sbb
sub
jl
mov
das
sbb
add
dec
andb
lock
push
add
xlat
ljmp
aas
out
sbb
jnp
sbb
scas
sbb
mov
dec
insl
bound
lret
inc
cwtl
pop
inc
xchg
pop
pop
sbb
sbb
lock
stos
in
cmp
stc
testb
cs
lock
jno
pop
dec
mov
das
hlt
insl
mov
or
pop
jg
sti
call
outsl
xchg
imul
mov
fcom
aaa
aad
cltd
dec
in
xchg
nop
pop
int
subl
dec
or
adc
fbld
mov
pop
or
xlat
sbb
mov
into
mov
pop
loopne
jnp
popf
push
in
xchg
sbb
xlat
mov
sti
or
jge
fimull
ljmp
mov
out
neg
mov
xor
jmp
fwait
xchg
jo
push
xchg
cmpsl
dec
sti
aad
scas
nop
push
es
dec
pop
pop
out
mov
loop
mov
std
add
cltd
imul
inc
jge
andl
xchg
inc
mov
faddl
into
lret
sbb
pop
cmpsb
inc
jne
mov
inc
jo
jo
and
clc
jecxz
push
add
mov
pop
sbb
popf
jo
xchg
push
enter
adc
fisttpll
cmp
mov
and
mov
fdivrs
and
jno
bound
ret
leave
ljmp
dec
aad
push
mov
cmp
and
jmp
rclb
mov
dec
jg
pop
xchg
cmp
lret
scas
mov
fsubrp
call
mov
aaa
pusha
jg
cs
out
sub
daa
mov
fnstenv
shlb
pop
mov
dec
mov
out
adc
insl
cli
mov
mov
mov
cmc
sbb
lret
push
push
stos
lods
pop
and
pop
xchg
mov
aas
sub
dec
icebp
das
sbb
xor
pop
lods
mov
shll
rcll
shl
data16
in
mov
mov
xor
inc
bnd
inc
push
fucomip
fwait
xchg
arpl
loop
notb
leave
push
scas
push
dec
push
pop
xchg
aaa
jg
push
rol
ljmp
mov
insl
fbld
mov
jno
pop
mov
fisubs
test
sub
add
fwait
nop
pop
mov
dec
mov
roll
cmp
cmp
mov
jg
out
pusha
shrb
inc
and
mov
and
adc
push
mov
cltd
leave
inc
xor
shrb
push
pop
arpl
and
dec
das
push
mov
popa
aam
lock
mov
bound
out
jecxz
hlt
mul
mov
loopne
dec
shll
mov
inc
cmc
fldt
fadds
test
adc
cld
nop
gs
popf
les
fwait
test
ret
nop
mov
push
lea
fwait
cmpsb
imul
testb
adc
or
iret
mov
add
js
pop
sbb
sbb
mov
lds
aaa
pushf
sti
std
xor
movsl
pusha
fwait
push
push
xor
inc
xchg
rolb
and
imul
icebp
sti
aas
sbbl
insb
outsl
inc
js
xchg
mov
stos
into
fdivs
mov
dec
frstpm(287
imul
mov
fs
movsl
or
imul
sub
adc
inc
out
xchg
imul
cwtl
das
push
cmp
jmp
pop
jb
sbb
cmp
or
sbb
fildll
pop
lods
fistpll
inc
test
rorl
add
outsl
je
lock
xchg
out
jg
aas
and
inc
sarl
pop
add
dec
inc
mov
ljmp
jge
mov
fstpt
test
arpl
test
ljmp
stos
stos
dec
xchg
sub
adc
std
pop
fadd
bound
dec
movsl
xor
sub
fsubp
mov
xor
mov
lea
push
psraw
push
push
dec
jb
pop
test
mov
cmp
das
inc
add
jmp
ds
sub
and
xor
inc
testb
xor
inc
sti
popa
sbb
sbb
xor
cmp
fucom
xchg
cwtl
xor
in
push
mov
lcall
aam
adc
cmp
sub
mov
xor
ret
fnsave
jge
repz
lods
int3
adc
mov
mov
adc
and
jne
leave
mov
sahf
pop
pop
jae
out
rcrb
pop
pop
aad
popa
sbb
cmp
int3
movsl
stos
fwait
xchg
ds
jle
inc
xchg
pusha
mov
inc
add
and
push
ffree
mov
mov
adc
and
movsb
shll
ljmp
push
jle
push
mov
adcw
mov
add
xchg
adc
outsb
fcompl
sbb
or
scas
jp
sarl
push
ljmp
mov
outsl
cwtl
lahf
bound
jo
fstl
push
outsl
and
xchg
mov
loope
push
jl
orl
cmp
lods
jbe
push
fs
adc
dec
jge
data16
jae
push
dec
mov
loop
int3
adc
je
loopne
jns
xor
mov
rcll
test
in
cmpsb
lock
mov
mov
fdivs
ret
inc
flds
sub
lds
pop
imul
fs
mov
add
cmp
lds
fisubrs
test
jecxz
test
and
fmull
xchg
bnd
lret
adc
cmp
std
stos
adc
or
addr16
mov
sbbb
add
repnz
cs
lods
movsl
cmp
rorb
stc
adc
mov
xchg
les
cmp
inc
inc
lods
xchg
inc
hlt
adc
cmc
pop
popf
or
mov
je
fisubs
ss
rcrl
call
adc
mov
jns
add
or
aaa
jmp
dec
jns
fisubs
add
cmp
shrb
stc
sahf
jle
pop
add
out
mov
ficoml
dec
lret
add
out
loopne
pop
loop
cmp
add
nop
outsb
insb
xlat
dec
push
lahf
inc
dec
mov
loope
xchg
cmp
adc
xchg
or
inc
ss
lods
xor
xchg
js
mov
inc
std
pop
test
popa
mov
jmp
mov
inc
add
notl
mov
push
clc
adc
pop
xor
mov
push
imul
ret
lods
push
sbb
mov
push
repz
fstpt
call
shll
xchg
scas
stc
push
lret
popf
pop
sti
pop
adc
shrl
dec
mov
es
lcall
flds
push
fcomi
cmp
inc
pop
rorb
mov
ret
xor
pop
or
or
and
cmp
adc
adc
out
inc
iret
jle
aas
jg
stos
pop
cwtl
mov
fsub
adc
in
movsb
pop
ficompl
or
in
sub
icebp
pop
shrb
mov
xchg
int3
jo
ja
pushf
inc
push
cmp
mov
xchg
lea
and
cmc
sbb
call
negb
scas
push
and
inc
adc
cli
xor
push
outsl
outsl
mov
mov
in
sub
ljmp
in
movsl
pop
xchg
cwtl
mov
fisttpl
insb
mov
jp
loopne
cmp
xchg
push
mov
test
mov
icebp
mov
push
ja
add
ljmp
push
ljmp
pop
popa
dec
popf
in
pop
xlat
and
pop
pop
jl
pop
ljmp
xchg
add
sbb
out
dec
aas
in
lds
shrb
pop
mov
in
sbbl
je
xchg
dec
push
push
cmp
dec
xchg
mov
into
sub
or
int3
mov
fstl
cs
shrb
into
in
sbb
adc
pusha
jne
fsub
xor
or
arpl
sti
pop
call
pop
sti
mov
fcoms
cmc
popf
les
adc
cmp
clc
js
inc
repz
xchg
sub
adc
out
icebp
inc
clc
mov
fsubl
dec
jmp
and
popa
test
fcmovnbe
sbb
arpl
cli
movsl
mov
pop
xchg
ret
xchg
push
sbb
xchg
xchg
rcll
pop
fdivl
leave
stos
lock
andl
je
push
shll
push
fdivs
cs
hlt
fiaddl
xchg
loope
sbb
jg
aam
fs
pop
unpcklps
xor
sahf
mov
shll
push
push
jmp
cmc
xlat
test
movsl
xchg
adc
in
jno
fcmovnu
jbe
scas
jbe
pop
je
cmp
inc
push
jecxz
inc
pusha
out
mov
mov
pop
or
xchg
addb
cli
cli
jp
sbb
into
les
mov
jl
movsb
dec
mov
shr
inc
pop
inc
adc
push
pop
pop
or
ror
dec
dec
push
mov
fiaddl
inc
cmp
fiadds
inc
or
sarl
mov
insl
rcl
mov
xchg
cmpsl
pushf
addr16
xor
dec
bound
jns
mov
sbb
adc
xor
mov
mov
push
push
mov
daa
int
sbb
orl
test
inc
jmp
jecxz
mov
into
cld
insb
inc
fildll
cld
sbb
dec
and
pop
push
pushf
movsl
add
leave
loopne
gs
out
add
push
push
scas
data16
test
jmp
inc
hlt
jns
pop
jl
enter
pop
fidivrs
dec
push
xor
xchg
push
ds
jnp
mov
sbb
scas
sbb
sub
mov
sub
xor
sti
push
test
cwtl
jae
xchg
outsb
pop
jae
pop
pop
ja
idivb
ds
aam
stos
jecxz
frstor
shl
aad
mov
iret
test
add
cli
xlat
pushf
mov
out
test
pusha
pusha
jns
and
cmp
cwtl
push
cld
iret
mov
int
not
xchg
dec
les
ljmp
lahf
cmc
or
push
push
imul
push
popa
add
pop
mov
add
push
or
sub
scas
repnz
pop
add
jb
mov
inc
cmc
cmpsb
dec
sarb
xchg
mov
mov
pop
or
xor
inc
test
and
bound
mov
pop
cmpsb
cmp
mov
das
das
rolb
cltd
or
jae
fildll
loopne
adc
or
fsubrs
ret
int
pop
jne
sbb
stc
pop
ficomps
jnp
pop
add
scas
sti
push
adcl
dec
pop
stos
jg
cmc
jne
push
mov
sbb
ret
mov
cwtl
imul
mov
sub
xchg
sub
hlt
xlat
mov
or
mov
movsl
jns
aam
dec
fsubrl
push
adc
dec
nop
insb
imull
movsb
cmp
movb
fld
aas
fcom
filds
ljmp
inc
dec
and
ds
pop
push
mov
sbb
add
aaa
mov
pop
xor
xor
outsb
push
jb
jns
push
daa
xor
pop
int3
or
pop
dec
push
ja
cli
inc
lock
jb
push
cld
arpl
sub
out
jle
sub
push
mov
enter
or
fs
cli
ja
mov
dec
mov
jl
test
sti
je
xor
mov
scas
addr16
or
adc
dec
jo
sbb
lods
inc
scas
add
les
pop
cmp
addl
xchg
dec
int3
jbe,pt
ja
das
jecxz
test
jns
cmp
jmp
xchg
or
inc
in
nop
cwtl
lret
jmp
inc
fsts
push
lahf
push
mov
movsl
add
inc
xor
mov
cs
lods
mov
cmp
insb
mov
out
in
and
rcrb
sbb
xchg
mov
mov
xchg
jp
insb
pop
aad
cmc
cmp
cwtl
mov
stos
inc
sbb
addr16
dec
pop
jbe
mov
adcl
push
dec
inc
pop
lret
bound
lret
in
sub
repnz
testb
shlb
or
or
outsl
hlt
pusha
pushf
das
bndldx
faddl
ret
xchg
add
mov
lahf
inc
fldcw
iret
in
and
mov
sub
icebp
fsubs
xor
out
xor
xor
fldcw
daa
aaa
iret
jge
clc
sub
sahf
mov
mov
mov
and
outsl
pop
into
add
mov
mov
aad
cmp
or
test
jnp
add
movsl
imulb
jb
sbb
call
popf
adc
fdivs
xor
cmp
mov
pusha
jns
jle
mov
loopne
sub
pop
in
and
sar
cmp
sbb
fst
jmp
sar
jg
outsb
addb
jb
xchg
dec
push
ficoml
jno
cmpb
and
notl
cmp
mov
sahf
or
mov
or
jae
mov
push
xor
fdivl
imul
pop
and
dec
daa
loop
dec
imul
roll
push
movsb
subl
or
pop
sub
mov
mov
shlb
sbbb
clc
and
movsb
mov
int3
cs
or
movsl
imul
sub
stos
mov
mov
and
sub
loop
jb
jbe
daa
sahf
leave
bound
lcall
cs
arpl
mov
push
psrld
mov
mov
mov
and
adc
pop
xor
xchg
je
jmp
or
sbb
pop
ret
mov
fcoms
inc
dec
jge
daa
push
cmp
sbb
cmpsl
mov
movsb
mov
mov
out
fcompl
aad
shl
cwtl
icebp
movsb
jbe
xor
jbe
subb
fldcw
outsb
pop
push
and
ret
pop
pop
push
cmpsl
fidivl
pop
sub
mov
mov
mov
xchg
in
rcll
addr16
outsl
lea
fwait
push
push
les
test
and
cld
dec
sbb
in
lahf
jg
push
ficoml
in
sub
push
sbb
add
xchg
std
out
call
cmp
cs
dec
lea
cmp
add
xor
sub
popa
loopne
jp
cltd
ja
jno
dec
in
mov
xchg
aas
iret
sarl
cmpsb
int
lods
repnz
leave
fsubr
mov
nop
push
dec
ljmp
fs
adc
or
pop
or
sub
mov
and
arpl
and
out
inc
and
insl
push
xorl
and
imul
adc
es
and
ds
pop
push
jb
sbb
jne
mov
popa
cwtl
je
cmc
daa
mov
mov
xchg
xor
lcall
adc
fistpll
decl
dec
push
jmp
out
das
jo
loope
cli
dec
popa
dec
fadds
mov
mov
mov
adc
dec
xor
push
roll
and
add
lea
xchg
scas
sbb
xor
sbb
pop
push
xorb
push
cmp
mov
adc
lcall
aas
add
xlat
and
adc
lds
imul
imul
inc
xor
ret
or
into
lret
stos
cld
imul
push
cltd
mov
adc
pop
rcll
pop
mov
mov
inc
dec
push
iret
gs
scas
jecxz
xchg
fisttpl
jne
addr16
subb
pop
nop
pop
jb
sub
xlat
movsl
sub
aaa
push
loopne
sub
mov
mov
xor
sbb
xchg
pop
insb
cmpsl
hlt
iret
idivb
pop
push
orl
int3
clc
in
cmc
jmp
ss
arpl
adc
insl
push
mov
cmc
dec
dec
jp
lods
test
divl
in
iret
sbb
decb
sub
lret
je
leave
xchg
clc
into
loop
daa
insl
xor
les
imull
lcall
imul
push
cmp
clc
cli
pop
mov
andb
stc
push
mov
inc
iret
mov
or
push
dec
rclb
clc
push
add
movsb
sub
out
mov
out
jno
loope
imul
xchg
loope
and
push
cmp
dec
ss
movsb
loope
mov
sbb
sub
push
enter
jmp
int
jp
dec
into
insb
imul
xchg
push
or
sub
cli
mov
pop
and
popf
sbb
pop
pop
pop
icebp
imul
and
push
in
mov
pop
ret
data16
cwtl
in
icebp
push
jbe
shr
test
xor
push
jmp
out
sar
adc
inc
push
adc
lock
hlt
lea
sbb
in
int
js
out
xchg
lcall
out
mov
nop
ljmp
lods
cmp
sbb
imul
sbbl
push
push
dec
adc
ss
call
adc
mov
out
out
mov
mov
sbb
dec
xor
push
push
mov
or
mov
daa
arpl
mov
mov
push
inc
xor
lods
popf
jb
and
dec
repnz
mov
xor
repnz
ds
inc
std
xlat
or
or
cmp
and
mov
movsw
test
xor
dec
mov
testb
add
in
push
mov
jbe
lret
sbbb
bound
xchg
or
leave
cmp
sbb
pop
mov
push
ljmp
sub
jl,pn
test
push
cmp
inc
loopne
les
and
roll
add
je
cmp
jmp
inc
repnz
insb
and
jb
fildl
repnz
push
aad
push
jno
testl
movsb
jb
iret
pop
pop
xchg
int3
jge
scas
pop
outsl
dec
js
add
lahf
xlat
push
test
jbe
mov
xor
out
jmp
adc
cltd
js
addr16
push
adc
mov
bound
loope
xchg
pop
add
push
daa
push
mov
stos
scas
es
sti
sti
popa
xchg
test
aad
ret
inc
int3
js
stos
fdivl
iret
mov
aaa
sbb
pop
sarl
mov
push
scas
sub
jp
shlb
shrb
push
or
dec
pop
adc
jecxz
jl
xchg
pop
cmc
ret
ds
in
es
inc
jmp
xor
repnz
call
push
pop
in
sub
sbb
mov
inc
cmp
mov
and
movsl
adc
xchg
mov
adc
icebp
test
repnz
aad
lret
xchg
int3
xchg
fs
loopne
adc
pop
dec
shlb
icebp
aas
dec
lods
nop
sub
loopne
and
add
fisttpl
scas
pop
pop
mov
test
sbb
mov
cmp
sub
insl
sbb
sarl
add
mov
sahf
nop
dec
cld
lret
or
leave
pop
mov
sub
fcompl
sahf
pop
fs
cmp
fidivrl
xlat
test
out
enter
cs
xlat
pop
mov
jns
lds
pushf
cli
fistps
scas
out
rolb
adc
push
js
pop
daa
test
pop
rcll
mov
outsl
and
lods
sub
cmpsl
dec
lcall
push
pop
in
cmpsb
inc
push
sbb
lods
pushf
lds
jbe
das
addl
loope
lock
dec
dec
pop
call
cmp
loope
jp
push
mov
mov
xchg
ljmp
push
mov
sub
pusha
fists
loope
ror
testb
cmp
mov
lds
repz
jo
loope
fdivrp
out
pop
scas
pushf
mov
lock
clc
je
push
out
add
push
xchg
jno
dec
pop
push
mov
lds
cmp
adc
sti
pop
les
ss
cmpsb
int
jl
testl
in
adc
add
pop
dec
nop
lahf
cmc
int
cmpsl
and
xor
dec
cmpsl
sti
sahf
pop
imul
sbb
iret
mov
ja
shlb
je
mov
mov
orb
cltd
dec
int
pop
cmp
ret
and
push
jecxz
dec
push
pop
sub
add
mov
out
push
pop
xor
jecxz
and
mov
dec
xor
js
aaa
adc
fdivp
out
notb
dec
lret
arpl
jmp
int
adc
pop
ljmp
mov
jp
jns
sbb
dec
cwtl
sub
clc
dec
inc
jne
pop
stos
mov
and
push
sbb
ficompl
es
mov
imul
call
je
jecxz
lcall
cmc
loop
scas
inc
or
js
mov
repz
sbb
dec
sbb
and
int
in
and
pop
or
pop
divl
sbb
pusha
arpl
mov
jp
sub
sbb
lea
cmp
mov
pop
and
xchg
cmpsl
push
xchg
push
mov
mov
nop
leave
aam
or
leave
fsub
jge
xor
call
push
and
je
sub
sub
lods
or
movsl
mov
inc
add
inc
mov
sbb
cld
cmp
cmpsb
push
sub
lods
or
and
outsl
sub
or
sbb
sbb
shll
cld
mov
xchg
dec
xor
jne
or
movsb
mov
pop
xchg
fs
xchg
outsl
adc
jmp
and
sahf
or
mov
xchg
ss
cs
fisubl
sbbl
cmp
jge
enter
cli
sub
daa
sub
inc
sbb
ffreep
iret
idiv
lahf
aaa
nop
addb
and
aas
fldenv
outsb
enter
loop
imul
popf
jb
clc
inc
arpl
aas
mov
pop
mov
sub
and
vmread
sub
inc
in
bnd
mov
jb
lds
mov
sti
movl
jmp
adcb
xchg
mov
shlb
jno
leave
xor
xchg
push
pushf
mov
insb
push
sbb
xchg
popf
in
lock
test
ljmp
sub
jg
pop
mov
in
hlt
and
test
insb
cwtl
cmpl
push
jmp
hlt
cmpsb
in
aas
mov
cmp
pcmpgtw
jl
mov
or
sbbb
ret
test
pop
jae
cmp
int3
mov
jmp
sub
and
mov
aas
inc
mov
je
enter
push
fdivp
push
daa
adc
dec
pop
adc
outsb
push
mov
sbb
or
lods
in
jmp
inc
sbb
adc
test
out
les
hlt
rclb
sub
nopl
rolb
sbb
in
imul
iret
mov
jns
adc
ds
xchg
xor
dec
arpl
pusha
inc
jns
mov
jecxz
mov
sub
out
outsb
inc
ja
fptan
jns
jg
xchg
pop
adc
mov
mov
fstps
mov
popa
lods
jae
dec
dec
mov
mov
pop
pop
rclb
ljmp
cmp
mov
pop
out
pop
sti
sbb
push
dec
or
xchg
dec
adc
jg
aam
xor
mull
mov
jl
push
mov
mov
ljmpw
into
adc
es
sbb
mov
scas
adc
movsb
add
fwait
das
ds
scas
adc
lret
or
inc
sub
adc
sti
les
imul
sub
cs
mov
cmc
sbb
add
sbb
ljmp
mov
dec
and
xor
mov
mov
sahf
fidivrs
dec
lahf
xchg
imul
add
xor
loope
je
push
ret
cmp
xor
fadds
lret
mov
ret
scas
pop
iret
dec
xchg
push
inc
lods
dec
mov
test
xchg
fdivs
int3
mov
mov
cmp
jnp
sbb
fcompl
xor
pop
lods
or
jb
mov
movsl
adc
mov
jmp
mov
bound
cwtl
adc
mov
aas
stc
jg
push
cmp
inc
mov
xor
scas
cs
adc
pop
ja
xchg
inc
lcall
xchg
and
fcmovne
not
inc
lods
jmp
cmpsb
push
daa
imul
jns
hlt
mov
in
emms
xchg
dec
in
outsb
sub
nop
cmp
dec
pop
je
dec
stc
loopne
inc
mov
aas
sub
shll
or
subb
test
jno
mov
sar
scas
pop
or
cmp
dec
subb
sub
lea
loop
sub
lret
mov
arpl
or
sbb
stos
aaa
sarl
in
cltd
mov
sub
jge
lods
pop
fld
lret
xchg
aaa
mov
cltd
std
sub
xchg
pop
xor
aaa
inc
jmp
sub
pop
leave
xchg
sub
or
decl
sti
pop
push
mov
and
jecxz
mov
daa
dec
jge
or
call
loop
jo
outsb
pop
inc
cmc
dec
mov
or
rorb
fdivl
cs
push
int
call
sub
loop
std
push
cmp
negl
xchg
cmc
xchg
das
cmp
or
inc
xor
in
fadd
pop
xchg
aaa
jmp
cmp
xor
adc
outsl
fwait
jg
orl
mov
in
push
ret
cmp
insb
in
jge
in
fildl
push
movsl
icebp
sub
jo
lret
cmp
and
ss
shrl
mov
outsl
mov
xchg
xor
sbb
cli
and
mov
mov
std
pop
xor
andb
jp
aas
pop
pop
adc
sarb
inc
in
push
mov
movsb
lcall
adc
stc
scas
jmp
inc
rclb
mov
nop
arpl
xor
and
mov
repnz
mov
inc
add
out
aaa
dec
jmp
or
repz
xchg
cmpsb
hlt
dec
andb
sub
loop
insl
add
out
mov
sbb
fs
nop
ret
push
int
xchg
outsl
inc
clc
roll
cltd
lea
in
aam
ret
dec
in
fmul
fistpll
sub
aaa
jge
aam
cli
clc
outsl
test
std
and
incl
leave
sub
es
jb
xchg
push
in
inc
out
aad
xor
jle
and
not
dec
sbb
adc
in
loopne
outsb
add
repnz
xchg
mov
push
add
dec
add
stc
lock
idivl
jns
sub
xchg
cmp
xor
and
push
ja
push
adc
mov
outsl
pusha
mov
jle
jae
repz
dec
sub
repz
clc
cmp
ror
shll
push
or
test
cmp
sub
insb
dec
dec
xchg
xor
inc
outsb
stos
or
icebp
stos
fisttpl
adc
add
ret
test
aam
cli
lret
adc
jno
fsubrl
xchg
lods
and
stos
mov
aaa
sahf
jnp
jp
xor
mov
and
rcll
outsb
or
sahf
jecxz
icebp
push
xor
scas
jno
inc
add
movsl
int3
imul
adc
popa
test
jns
adc
jo
push
sub
jl
xchg
imul
cli
push
fsubrp
mov
inc
or
pusha
or
cltd
xchg
mov
dec
repz
icebp
mov
repnz
add
call
xchg
push
mov
leave
cs
cmp
mov
movsb
jno
push
adc
jne
add
sbb
push
ret
inc
pop
pushf
mov
fcompl
add
sti
add
mov
movsl
popl
out
sbb
xor
fcomp
notl
adc
lods
or
cld
mov
and
xor
daa
mov
fnstcw
jecxz
push
lods
sbb
fbld
jl
dec
or
ret
cli
jne
dec
push
stos
pusha
push
push
adc
adc
popl
jge
mov
out
xchg
test
pop
push
jb
test
pop
in
sbb
jns
pop
dec
inc
xlat
push
icebp
dec
mov
mov
iret
dec
xor
jb
push
enter
jmp
dec
stos
or
adc
adc
fsubs
sub
mov
add
iret
pop
and
gs
add
cmp
popf
lods
xor
or
jp
je
lcall
aas
cld
cwtl
repnz
xchg
mov
push
or
notb
mov
mov
pushf
test
adc
test
pop
icebp
add
into
adc
cmpsb
cld
mov
icebp
inc
imul
mov
popa
icebp
push
mov
out
stos
pop
adc
or
das
je
or
or
loopne
ja
mov
mov
je
jno
jg
outsl
or
xor
mov
lcall
sbb
and
loopne
inc
ss
int3
scas
push
mov
mov
dec
jl
loopne
sti
imul
shr
cmp
stos
enter
jge
or
jg
mov
repz
fs
repz
mov
gs
and
cmc
xchg
mov
and
ss
xchg
add
subl
test
pop
dec
inc
dec
jg
sarl
xlat
xchg
lock
add
addl
jae
xor
lods
test
mov
pop
vunpcklps
mov
sbb
pop
sub
mov
dec
mov
enter
mov
andb
pusha
push
test
lcall
mov
dec
int3
shll
orl
hlt
cld
cld
cmpsb
mov
or
stos
repz
addr16
jnp
adc
adc
shrl
out
stc
enter
cmc
cmp
out
jnp
jnp
insb
xor
or
push
dec
push
das
cli
push
pop
inc
ret
jle
and
pop
inc
mov
js
jae
arpl
enter
cmpsb
push
mov
clc
call
mov
dec
cmovae
sbb
fs
clc
adc
lods
rorb
push
cwtl
loop
cmp
and
pop
xor
sbbb
mov
ret
xor
sub
and
adc
outsb
test
jle
pop
hlt
call
mov
lock
ljmp
mov
fsts
testb
dec
js
pop
test
sar
push
fmulp
xchg
mov
or
icebp
ret
cmp
or
outsl
pmullw
sub
push
mov
add
ja
data16
mov
popa
xchg
push
shrb
fiadds
add
in
cmp
shl
arpl
int3
push
dec
stc
pop
sub
or
or
stos
jmp
fdivrs
and
aam
insb
push
insb
or
sbb
pop
mov
scas
lahf
lcall
sub
or
in
aam
lret
mov
sbb
adc
xor
sub
lret
ja
or
pop
mov
add
sbb
add
mov
aas
xchg
sub
inc
leave
push
es
mov
mov
mov
in
xchg
test
cmc
iret
jg
popa
cli
dec
sti
imul
gs
nop
je
imul
lds
mov
mov
fcmovnbe
sahf
out
xor
mov
mov
jbe
lock
jno
push
cmp
loopne
int3
shr
lods
inc
sbb
adc
imul
and
rcrb
shlb
fxch
inc
jmp
jns
or
cmpl
ror
mov
shr
scas
arpl
addr16
mov
jle
es
cmpsb
scas
iret
leave
mov
xchg
xchg
dec
ret
inc
fbstp
dec
scas
mov
inc
and
inc
loop
std
lea
hlt
dec
scas
pop
mov
dec
cmp
fdivrl
rcr
aas
std
inc
dec
adc
fwait
cmp
pop
dec
sarb
xchg
mov
cmp
clc
or
jno
into
push
jns
sbb
addr16
adc
dec
xchg
call
dec
into
orb
popa
arpl
subb
and
push
jp
adc
out
add
movsl
arpl
into
lret
jp
push
sbb
std
adc
mov
popf
dec
lret
mov
out
cmp
into
mov
mov
adc
dec
mov
xchg
inc
add
jecxz
lea
call
icebp
push
insb
jo
sub
sbb
ficompl
sub
jne
sbb
push
mov
clc
jle
aam
adcb
jnp
pusha
fsubrp
push
fildl
sub
and
or
sbb
pop
aas
out
scas
addr16
dec
and
push
rcll
mov
lcall
and
dec
sub
cwtl
in
sub
cld
xchg
stos
out
outsl
xchg
cmp
cmp
sbb
jb
loope
adc
add
rorl
out
sbb
les
pop
je
loope
shl
mov
js
dec
fadd
gs
push
jne
cmp
and
xchg
jge
dec
mov
jge
and
cmpsb
dec
mov
gs
pop
or
int3
jl
cmp
into
fxam
lret
loopne
inc
mov
testl
repnz
mov
push
adcb
mov
mov
loope
popa
loope
jnp
cmp
inc
jmp
popf
mov
mov
push
fildll
xchg
xchg
mov
call
sub
cltd
jne
clc
or
sub
clc
addr16
dec
xchg
inc
sub
sbb
cmp
ss
leave
push
stc
hlt
push
dec
in
lds
test
or
dec
data16
inc
outsl
pop
dec
mov
and
shr
jae
das
aas
push
cwtl
jecxz
push
or
subb
dec
fildl
adc
arpl
mov
sbb
pushf
mov
or
dec
mov
repz
lret
mov
negb
stc
cs
sbb
xchg
xchg
push
mov
mov
mov
jb
sub
add
or
hlt
pop
nop
int
fdivl
add
outsl
push
or
inc
addr16
xchg
imul
mov
inc
xchg
icebp
mov
push
mov
aam
scas
and
test
in
cs
jge
mov
cmp
sub
push
mov
pop
pop
sub
stc
cmp
popf
aas
xlat
mov
fs
mov
andl
ret
lods
rorb
or
push
sub
std
jge
mov
mov
aas
aas
inc
cmp
pusha
lcall
push
pop
mov
jl
jmp
lods
sub
mov
sahf
aas
int
fimuls
das
mov
imul
sbb
rcrl
gs
pop
mov
sbb
imul
ss
std
add
fidivrs
pop
mov
lret
les
jne
mov
bound
xor
lahf
sub
std
or
pop
enter
aas
hlt
mov
sub
and
push
stc
sbb
push
xor
lret
xchg
sbb
cmp
jno
pop
xchg
mov
dec
mov
out
sbb
cmpsb
push
test
push
or
mov
test
mov
mov
add
or
mov
leave
les
je
jnp
loope
pop
std
xchg
lcall
xchg
or
inc
xor
cmp
dec
imul
stc
movsl
popa
dec
adc
inc
sub
lret
cltd
push
dec
xchg
repz
ret
push
aam
mov
mov
clc
repz
mov
scas
scas
mov
orl
fwait
xor
mov
pop
int3
push
or
jecxz
mov
shll
test
push
in
jmp
cld
shlb
mov
xlat
daa
rorb
mov
jecxz
insl
gs
xchg
aam
in
stos
xor
mov
pop
xchg
dec
enter
mov
or
inc
pop
sub
xchg
repz
jmp
cltd
sub
sub
dec
jns
push
mov
jl
mov
mov
jmp
cmpsl
jg
pop
lret
or
inc
loopne
pop
dec
and
cmp
xor
call
stc
movsb
mov
push
xchg
sub
stc
insl
sub
or
inc
push
xor
cs
ffree
sub
pop
pop
in
push
dec
mull
mov
dec
jmp
ja
xor
rcr
inc
stc
test
repz
inc
pop
push
mov
hlt
dec
loop
pop
xorl
in
cwtl
fisttpll
repnz
ficomps
jecxz
lods
jle
int
push
xor
adc
or
aad
dec
and
dec
adc
push
push
cwtl
mov
pop
sub
mov
sub
sbb
stos
insl
or
cli
jbe
in
inc
cmp
pop
add
inc
mov
rorl
xor
fcompl
das
or
adc
push
jp
loop
and
and
adc
push
pop
mov
lock
or
aad
mov
test
push
and
xlat
outsb
bound
aas
and
loop
mov
mov
inc
push
inc
pop
les
adc
add
xorb
mov
add
push
xchg
cmc
mov
scas
push
inc
xchg
icebp
ret
cmp
lea
xchg
or
dec
jecxz
xchg
mov
xor
sub
xor
and
es
mov
outsl
jns
notl
jnp
and
xor
in
xor
push
xchg
mov
jne
dec
mov
dec
stos
xchg
adc
or
pop
or
sub
mov
dec
clc
jmp
cmp
mov
jbe
sub
test
mov
or
fwait
dec
out
mov
sub
mull
leave
push
cmp
aas
mov
xchg
repz
mov
and
add
das
sti
fadds
hlt
sbb
imul
aaa
rol
addr16
shrl
jge
pop
movsb
repz
dec
mov
addr16
adc
lods
jbe
insb
cmp
sbb
out
ret
lods
mov
dec
push
xchg
mov
adc
enter
pop
pop
and
or
inc
int
nop
cmpl
movsl
fdivrs
inc
pop
stos
and
test
sbb
je
pop
jp
lret
call
and
push
dec
cmpsb
jl
aad
mov
mov
fdivrs
mov
ret
repnz
lahf
fisttpll
sbb
sbb
xchg
cmpb
daa
mov
data16
adc
loope
jnp
cmp
jmp
ja
outsb
bound
bsf
test
lcall
scas
sti
inc
into
test
test
mov
mov
inc
adc
xchg
pop
inc
cmpsl
test
adc
fstcw
jmp
fsincos
xlat
lds
outsb
or
add
mov
sbb
cmpsb
out
pop
out
inc
lds
push
and
xchg
ret
inc
test
cwtl
push
mov
xor
mov
sub
insb
cmp
cmc
jae
popf
inc
dec
jb
das
push
or
cltd
cwtl
cmc
cltd
jecxz
rorl
push
push
xchg
add
insl
mov
cmp
loopne
xor
sbb
sub
push
sbb
in
cmpl
out
jle
out
insl
pop
jge
inc
mov
and
cmpsl
pusha
mov
icebp
jmp
dec
xor
cmpsl
gs
fxch
movl
insb
push
lahf
outsb
cmp
push
push
and
iret
mov
cmpsb
into
pop
out
cli
fs
loopne
jbe
mov
and
out
add
xlat
repnz
jbe
call
in
leave
rep
popa
test
jb
cmp
scas
push
adc
add
sti
dec
cmp
out
mov
out
push
out
sbb
cmp
lahf
or
push
addr16
dec
test
sbb
mov
fcoml
push
cmp
fs
xor
add
int3
adc
mov
jle
gs
js
nop
js
dec
lret
fmull
or
int3
xor
stos
outsl
sti
sahf
sbb
les
cltd
cmp
aaa
push
xchg
adc
mov
popf
lcall
int
js
sbb
mov
jmp
jae
inc
add
iret
mov
dec
push
bound
inc
rcll
fistps
pop
lret
and
jne
rcrb
into
sbb
or
cmp
test
and
enter
or
adc
sti
inc
int3
jbe
xchg
push
push
mov
call
adc
imul
pop
in
xchg
icebp
test
inc
jmp
mov
adc
or
lahf
repz
loope
jo
push
lods
dec
add
push
add
inc
xchg
call
fcoml
inc
hlt
ret
ror
inc
xchg
shr
subl
push
daa
fbld
outsl
loope
push
cld
imul
scas
add
lcall
lcall
leave
xchg
push
push
jge
js
sbb
mov
xorb
cmpsb
loope
mov
push
mov
jo
fidivs
add
mov
inc
jp
imul
popa
mov
jecxz
and
add
add
loopne
insl
sbb
mov
outsl
out
fdiv
dec
or
lret
mov
and
xchg
sub
sahf
sub
clc
repnz
in
jmp
mov
pop
adc
sti
add
add
jae
repz
jb
ret
pusha
fucomip
jne
cmc
int3
es
pop
orl
sbb
sti
fwait
out
in
pop
in
int
test
arpl
arpl
jecxz
cmp
into
lret
ds
ret
sbb
lcall
ss
fnstcw
pop
xchg
mov
or
mov
or
cmp
add
dec
push
sub
xchg
daa
ss
out
sbb
pop
leave
loop
addr16
mov
adc
xchg
sbb
sarb
xchg
std
js
jl
dec
movsl
push
lea
add
jmp
mov
test
sarb
fsubl
adc
mov
or
in
push
sub
into
mov
dec
out
mov
jbe
adc
xchg
les
push
sub
stos
fcmovnb
and
push
mov
pop
dec
mov
or
xchg
cld
fdivrp
inc
stos
sti
mov
jne
ret
cmpsb
cmp
mov
pusha
out
add
add
xchg
and
hlt
xor
dec
fidivrl
insl
mov
lret
mov
push
mov
test
adc
lock
gs
ss
adc
shll
pop
shll
mov
sbb
out
cmpb
jge
bnd
mov
add
add
lds
shrb
ss
pushl
sahf
pop
jo
fbld
mov
push
sbb
cli
call
fwait
daa
xor
jo
and
or
add
dec
mov
dec
push
mov
xor
imul
xchg
call
andl
pop
sbb
out
repz
xchg
xchg
adc
xchg
in
adc
push
adc
jle
fs
mov
sahf
sbb
push
mov
mov
inc
mov
cmp
pusha
std
mov
push
push
mov
add
xor
mov
js
jmp
xor
popf
sbb
test
loopne
sub
push
mov
and
out
cmpsl
cmp
sub
xchg
xchg
mov
and
outsl
clc
movsb
daa
fnsave
xor
jno
or
jno
adc
fbld
xor
cmpl
gs
sarb
in
outsl
sahf
into
mov
adc
cmp
adc
and
dec
mov
pop
adc
sbb
sbb
push
dec
inc
movsb
je
adc
push
mov
jge
in
lods
sbbl
out
mov
iret
pop
sub
and
cs
out
jae
ja
jo
jge
icebp
push
outsb
popf
shl
xor
inc
loopne
xor
pop
pop
or
loope
push
lock
fsubl
sbb
sbb
int
sub
mov
jne
pop
ret
mov
test
and
ja
popa
mov
shll
pop
pop
pushf
cmp
inc
cs
stos
add
test
xor
dec
or
jle
bound
cmp
and
xor
loop
adc
mov
js
jp
cmp
cltd
cmpsb
daa
mov
aaa
xchg
or
fdivl
fiaddl
mov
pushf
outsb
pop
pop
test
or
mov
add
shll
in
jno
jmp
jb
pusha
test
jecxz
add
add
dec
out
mov
cmc
add
and
jno
adc
fcmove
js
ja
or
mov
pop
sub
adc
xchg
mov
std
test
insl
or
dec
ja
mov
stos
xor
gs
cmp
popf
pop
pop
add
orb
sbb
lcall
lcall
data16
lcall
cmp
sarl
xor
sbbl
dec
push
fsub
enter
xchg
xchg
pop
into
jmp
xchg
daa
aam
push
and
mov
dec
iret
rcll
ja
pop
pop
pop
inc
je
add
into
repnz
hlt
and
push
or
ds
push
lods
or
test
inc
movsl
xchg
loopne
out
pushf
dec
inc
push
add
movsl
gs
or
sub
in
mov
xchg
adc
rolb
dec
cmpsb
enter
adc
or
dec
jae
cltd
icebp
imul
call
xor
mov
sti
push
lea
jns
ljmp
mov
lea
loop
jne
lea
pop
sti
call
xlat
mov
lcall
das
fisttpl
lods
fdivrl
out
pop
int3
push
dec
adcl
lock
jns
loope
adc
sbb
iret
cli
xor
cwtl
scas
fistl
xchg
pop
lods
mov
sbb
dec
add
push
mov
sbb
stos
adc
or
test
adc
xor
fadd
insl
mov
pop
int3
fsub
sarb
fsubl
stos
out
inc
or
cmp
lret
fs
cltd
div
lods
in
adc
add
sarb
cwtl
mov
int
xchg
aaa
lcall
fistpl
cld
xor
pop
cmpl
mov
push
dec
enter
inc
outsb
arpl
push
mov
insb
jl
mov
xchg
pmaddwd
jno
jle
mov
and
ret
xchg
stos
inc
mov
shl
out
insb
sbb
filds
push
push
mov
mov
addr16
sbb
testb
push
lret
jge
imul
data16
xchg
insb
and
std
push
xchg
test
sarb
cmp
dec
lods
push
adc
subl
in
lea
pop
cmp
aas
cmp
popf
ret
sub
sbb
jo
xchg
xor
repz
pop
sub
add
rcrl
push
sub
mov
pop
mov
in
adc
bound
jnp
jno
cmpsb
ljmp
pop
scas
adc
jl
dec
and
rolb
adc
in
xor
sbb
xchg
jae
loop
jg
push
rorl
cmp
push
inc
movsb
push
test
daa
scas
lods
mov
mov
sbb
outsb
pop
push
sbb
lods
cmp
fists
dec
or
in
imul
ret
or
sbb
out
pop
push
mov
mov
rcr
fistl
je
roll
mov
test
lds
pop
call
arpl
push
mov
popf
adc
mov
push
inc
sub
mov
cmc
sbb
inc
xchg
add
xor
js
mov
mov
insb
pop
pop
mov
mov
jb
cli
pop
gs
mov
fs
cld
js,pn
mov
les
sub
repz
add
ret
mov
retw
clc
xchg
pop
dec
pop
dec
jo
jmp
add
ss
xlat
in
popf
add
cmpsb
inc
fwait
sub
or
adc
mov
push
inc
jmp
push
xchg
repnz
sahf
xchg
jno
jb
adc
cmpsl
movsl
jns
jmp
cmp
out
int3
cmp
incl
cmpsb
pop
dec
jl
xchg
dec
push
call
stos
and
mov
mov
push
mov
imul
jo
lret
lret
dec
inc
cmp
test
insb
cmp
cli
xchg
jae
sub
ljmp
push
inc
push
jno
ljmp
jp
inc
cmpsb
and
or
jnp
pop
lea
cmpsb
shl
add
sub
push
cmp
fnstenv
xor
pop
or
mov
xchg
jbe
push
push
loopne
xchg
cltd
mov
cmp
leave
idiv
jg
pop
pop
gs
sub
pushf
fstpt
pop
ss
or
push
sbb
mov
popf
out
dec
fwait
dec
lahf
jae
fimuls
dec
xchg
dec
xchg
clc
cmp
or
adc
sbb
aad
pop
out
in
stos
int3
imul
push
cltd
mov
mov
das
sarb
sub
daa
sub
cwtl
mov
jmp
insb
in
lea
lds
filds
cli
pop
insl
add
and
popf
mov
insl
mov
mov
xor
push
jnp
repnz
add
lret
ljmp
mov
mov
and
in
mov
lret
pop
shlb
cmp
loop
je
movb
push
imul
fdivrs
icebp
push
test
subb
dec
xorl
fldt
inc
mov
add
sub
inc
popf
fisubs
fsubl
mov
and
pop
nop
add
mov
lods
inc
test
sub
xchg
mov
lcall
cmc
or
aas
add
inc
fcoms
repnz
ret
xor
xchg
sub
push
cmc
daa
or
push
out
mov
cmpl
into
lods
outsl
dec
enter
and
pop
inc
xor
xchg
shr
mov
je
shrb
push
pop
lds
movsl
insb
pushf
lock
sub
and
jg
sub
cli
cs
aam
mov
sbb
push
pop
data16
adc
sub
add
inc
sub
ficoml
jmp
inc
movsl
mov
jecxz
fistpl
mov
aaa
inc
push
gs
sub
fcoms
mov
xor
mov
xchg
adc
fidivrl
lret
mov
std
adc
xor
mov
mov
and
xchg
add
mov
test
add
fwait
jns
cmpsl
faddp
repz
daa
clc
fcoms
adc
mov
adc
sahf
mov
cmc
xor
mov
insb
add
dec
lahf
mov
out
not
lea
pop
cmpsb
adc
add
loope
sti
jmp
adc
push
lcall
fcoml
and
mov
ljmp
push
out
bound
sbb
dec
mov
insb
flds
outsb
lcall
js
lock
icebp
out
dec
add
mov
lret
ja
mov
stc
xor
outsb
push
cli
std
addr16
push
dec
jnp
out
push
push
xchg
xor
rcl
inc
lock
xor
mov
xor
scas
xchg
sbb
sub
in
sbb
movsl
sub
add
mov
imul
test
shrb
jb
mov
repnz
dec
mov
mov
ja
data16
sbb
lret
xor
sti
adc
aad
inc
ss
loopne
rorl
call
jb
adc
fisttps
pusha
push
xchg
or
cmc
fldcw
xlat
loopne
sbb
lret
loope
xchg
mov
insl
orl
andb
push
push
or
decb
pop
imul
mov
seto
push
xor
in
jl
addl
xchg
rolb
adc
or
add
insb
mov
les
popa
popa
fcmovbe
ja
movsl
fmul
pop
add
dec
xor
push
jecxz
lds
cmpsl
mov
dec
inc
out
cmp
inc
arpl
js
push
lea
decb
sub
or
cmpsl
insl
push
sub
xchg
fildll
ljmp
mov
clflush
inc
les
icebp
push
outsb
xchg
loop
lods
pop
aad
and
aaa
rcrl
jmp
add
or
fs
and
lcall
test
pop
cli
mov
dec
lahf
fmul
xorl
push
das
xchg
pop
or
sbb
insb
lea
out
int3
and
incb
xchg
ret
test
inc
ss
add
dec
or
and
push
out
pop
sub
add
and
jns
sub
mov
sub
lea
pop
fldenv
dec
add
cld
call
idivb
inc
je
sub
fisttpll
out
xchg
lahf
cmp
push
sbb
mov
cmpsl
inc
lds
fstpl
xchg
sbb
enter
and
cld
push
sbbb
jecxz
dec
dec
and
lret
daa
push
outsl
mov
cltd
lcall
out
mov
inc
cmc
into
mov
dec
mov
sbb
jne
xor
loopne
dec
iret
shl
xor
loope
ret
mov
mov
out
xchg
fadds
jecxz
mov
mov
gs
add
adc
ss
inc
push
imul
mov
cmp
decl
gs
aaa
fidivs
mov
mov
mov
mov
hlt
stos
sarl
in
fnstcw
push
cmpsl
gs
pop
sub
mov
adc
popa
jge
pop
push
es
push
lret
in
xor
jmp
ror
dec
test
mov
inc
nop
push
sti
scas
pop
push
mov
inc
ja
jge
inc
dec
mov
cli
les
sahf
arpl
mov
push
decb
adcl
push
out
vsubps
enter
stc
js
and
fadds
out
push
int
xor
notl
pusha
adc
in
ror
adc
aad
roll
fsubrs
or
xchg
loop
mov
lret
mov
orl
jno
pop
fimuls
fimuls
cmp
push
pop
les
in
scas
or
or
fcomip
cmp
sub
jno
dec
cmp
xor
enter
dec
cli
data16
dec
arpl
add
xchg
inc
sub
lret
ja
lea
inc
jns
mov
jl
pop
notl
or
idiv
out
or
fidivrl
arpl
mov
subl
or
test
pop
stc
add
push
in
imulb
int
cmc
sbb
inc
stos
sbb
out
sbb
bound
dec
sub
je
fistl
fwait
in
addr16
data16
popa
mov
gs
pop
xchg
ds
into
cmp
xor
xlat
stos
xor
mov
stos
out
ret
pop
mov
enter
flds
push
or
std
andb
mov
lret
int3
aam
cli
xor
pop
add
or
scas
sarb
loope
out
and
jb
sbb
leave
sub
push
mov
adcb
jne,pt
jno
mov
pop
and
adc
lods
das
adc
mov
mov
xchg
out
je
mov
insl
out
xchg
sub
push
aam
fidivs
xor
mov
addb
add
scas
dec
jne
pushf
mov
sahf
out
icebp
mov
and
push
repnz
pushw
mov
push
scas
cmpsl
and
cltd
sub
cmpsb
push
into
adc
inc
dec
jmp
popa
mov
cmpsb
imul
cli
dec
fwait
inc
xchg
adc
aad
sti
movsl
call
or
lcall
out
dec
aad
dec
xlat
fstps
test
jg
cmpsl
rclb
imul
inc
or
or
dec
mov
lcall
sbb
sub
push
lcall
fisubrl
je
fisubl
pop
iret
jns
inc
idivl
push
data16
js
movsl
loopne
popa
or
inc
out
orl
push
jg
sbb
loop
jl
pop
loopne
xorb
loopne
dec
out
mov
mov
dec
inc
push
leave
mov
lahf
cmp
xor
daa
or
das
out
lea
loope
iret
mov
mov
lods
push
push
mov
mov
out
daa
cmp
enter
lea
ja
mov
cmpsb
mov
mov
lods
xor
shl
push
mov
repz
clc
and
inc
or
pop
pop
ret
je
loop
lods
adc
cltd
push
mov
shlb
sahf
repnz
cwtl
gs
mov
test
mov
pop
pop
imul
or
in
int3
inc
add
sbb
jne
stos
xor
sbb
dec
add
jno
cwtl
xor
rclb
ja
popa
mov
movsl
je
sub
lds
lock
lret
sbb
and
jne
addr16
fbstp
pop
push
dec
iret
hlt
int3
lahf
mov
pop
and
xchg
adc
les
sbb
pop
fstpl
je
mov
scas
sbb
rclb
add
das
fdivs
out
enter
jnp
push
adcb
or
lret
and
jmp
inc
adc
icebp
pop
ss
cmp
inc
push
int
and
xlat
add
jge
mov
pop
ss
les
mov
push
pop
sbb
mov
add
pop
xor
cwtl
cltd
js
or
xchg
rorb
fst
pop
ja
jo
cltd
jmp
nop
les
data16
imul
pusha
lods
aam
add
add
xor
adc
das
dec
inc
jnp
testl
icebp
jne
or
xchg
out
sbb
sbb
arpl
bound
jl
jmp
lods
add
cli
rcr
and
ljmp
and
mov
and
push
push
xor
test
inc
pop
mov
shll
fdivrs
sbb
fildll
sub
dec
sbb
lock
js
call
aad
inc
stc
xchg
sbb
out
mov
mov
pop
imul
cltd
in
ds
add
iret
ret
mov
mov
mov
insl
dec
mov
inc
mov
dec
rcrb
out
fildll
xlat
cmp
inc
jmp
or
les
dec
inc
bound
mov
lock
fistl
stos
xchg
into
jp
xor
sbb
popf
push
out
arpl
jle
jl
outsl
mov
mov
sbb
push
nop
xchg
les
sarl
inc
or
xor
mov
out
jnp
xor
cltd
loop
or
xchg
es
push
sahf
or
jg
popf
inc
outsl
pop
cld
mov
out
cmp
imul
and
jp
rcr
sub
ss
add
cmp
jmp
or
mov
mov
push
in
mov
jns
mov
add
test
test
mov
clc
mov
dec
inc
sub
pmuludq
jae
sbb
and
int3
lods
ret
inc
or
mov
lods
daa
addb
repz
ds
push
lcall
xchg
pop
pop
mov
cmp
scas
jns
je
sub
jae
or
jno
mov
add
push
mov
ljmp
cs
mov
hlt
cltd
add
stos
or
pusha
pushf
jmp
adc
jbe
dec
arpl
and
dec
push
mov
std
idivb
xchg
and
pushf
outsl
js
mov
outsl
dec
jg
dec
dec
inc
incb
stc
call
adc
test
decl
jns
out
mov
and
fs
dec
repnz
inc
ja
and
pop
dec
lret
push
add
xchg
fwait
clc
call
jmp
aas
mov
dec
out
dec
xor
std
movb
and
in
clc
mov
or
mov
aas
outsl
shlb
sarl
push
inc
xchg
notb
cli
xchg
jns
in
call
jbe
sbbl
pop
movsl
xchg
ljmp
repnz
push
adc
mov
jl
js
push
pusha
les
iret
cmp
pop
cmp
sub
pop
jle
jmp
cmpsl
leave
pop
jo
mov
mov
scas
dec
mov
xchg
xor
inc
pop
mov
iret
call
sbb
scas
ja
fisttpl
add
and
sahf
stc
addr16
mov
repnz
mov
out
hlt
movsl
into
inc
ds
pop
cmp
loop
sbb
stos
sub
lea
pop
jns
fnstsw
jne
pop
out
out
repnz
mulb
push
fbstp
pop
add
jb
in
xor
cmp
xchg
sub
dec
adc
popf
pusha
ljmp
int
popf
cltd
mov
mov
addr16
inc
mov
into
jle
push
mov
loopne
xor
mov
jae
sbb
sub
inc
cmp
jle
ja
loopne
inc
std
sbb
dec
push
xchg
xor
dec
mov
or
cmpsl
mov
sub
dec
push
cmc
ds
jmp
push
daa
out
jecxz
add
out
sub
loop
les
push
or
popa
ffree
dec
adcb
xor
xor
cmp
cltd
adc
xchg
mov
add
sbb
push
jbe
fwait
push
jbe
pop
mov
js
aas
outsb
es
xor
test
or
fst
push
push
into
movsb
mov
inc
lock
popa
inc
sbb
aam
and
in
jno
push
mov
shll
je
aam
ja
jb
lock
dec
je
out
bound
lcall
lahf
out
add
mov
cli
notb
xchg
pop
flds
or
cmp
pop
imul
in
inc
mov
insl
in
sub
lods
rcrb
and
das
or
sbb
pop
ja
movb
or
sbb
sub
mov
aam
sub
add
sahf
inc
test
mov
mov
pop
pusha
mov
sarl
bound
iret
lock
pop
sub
sbb
mov
mov
and
xor
js
es
mov
cmc
mov
pop
cmp
dec
lret
in
arpl
xor
mov
and
xchg
mov
enter
jl
mov
and
pop
adc
lods
fdiv
inc
scas
push
push
mov
out
jo
test
push
cmp
push
lea
xchg
and
add
pusha
mull
fimuls
xor
in
out
lahf
or
mov
daa
pop
cmp
fldcw
push
shll
scas
mov
idivl
shrb
into
aas
sub
lods
push
loop
enter
mov
jae
push
and
adcl
mov
or
push
push
add
sbb
jmp
roll
inc
leave
repnz
out
sahf
out
ret
mov
rcrl
push
rcll
fwait
push
push
mov
cld
jns
push
cmc
repz
mov
pop
mov
and
test
mov
and
pop
lahf
sub
push
int3
mov
addr16
mov
mov
mulb
xchg
cmp
aam
loope
imul
push
mov
sbb
lea
xchg
lret
js
je
sub
xchg
xor
shl
push
and
sbb
and
or
stos
ja
cmp
cmpsl
dec
xchg
scas
xchg
cmpps
push
pop
sub
inc
aaa
divb
jae
mov
xchg
faddp
addl
mov
fs
sbb
push
push
test
cmpsb
lods
mov
mov
mov
lret
daa
das
aas
pop
lds
xchg
sbb
movsb
das
xor
mov
add
andb
repnz
or
ret
lds
test
test
shll
lods
sub
sbb
and
xchg
iret
dec
lret
mov
cmp
fwait
xor
enter
lret
cmpsb
sub
sbb
mov
jo
jg
xor
in
mov
icebp
in
pop
movsl
and
mov
jbe
les
int
add
or
sub
ss
insb
fbld
frstor
rcll
xchg
sarl
xchg
push
jb
add
jbe
leave
adc
mov
jle
fimull
inc
mov
rcll
push
adc
insl
mov
inc
mov
jae
pusha
test
neg
xchg
sbb
out
xchg
pop
enter
or
lret
mov
fsubs
mov
push
addr16
subb
push
clc
in
mov
mov
jno
adc
sti
shrb
insl
or
add
mov
mov
push
jg
add
xchg
les
jmp
push
inc
lret
mov
addr16
xchg
push
or
ljmp
pop
stos
mov
pop
jmp
es
push
lcall
and
and
scas
aad
stos
mov
push
lods
rorl
test
idivb
jl
push
mov
jmp
inc
lds
add
mov
mov
adc
sti
jb
push
int3
popf
aaa
mov
jl
out
push
or
pop
shrl
stc
int3
fstl
mov
dec
cmp
jae
loop
shl
adcl
or
lcall
ja
and
sbb
dec
add
and
pop
jns
push
mov
insb
xor
dec
adc
scas
repnz
rcll
jbe
cs
nop
xchg
cltd
sub
pop
adc
stc
adc
and
cmp
add
cmp
ret
pop
mov
in
nop
fcoms
int3
xchg
out
sub
push
sbb
arpl
jle
push
loopne
imul
lret
in
add
inc
jmp
mov
dec
fsubr
pushf
repnz
dec
or
shl
sbb
nop
test
ja
int
gs
fdivs
fstpt
sti
rolb
aam
push
cmp
sbb
testb
inc
into
jae
shll
into
sbb
mov
aad
xor
insl
sub
lcall
int
pop
push
sub
iret
mov
into
add
xchg
push
clc
scas
jnp
sbb
xor
jp
arpl
les
mov
xchg
xchg
test
aas
lret
shll
idivb
adc
add
push
cvttps2pi
xor
sub
mov
les
imul
addr16
mov
pop
fldcw
stos
pop
pop
dec
lock
and
xor
push
std
jne
sub
xor
adc
xchg
jl
pop
mov
jl
jp
mov
or
cmc
jne
xor
pop
das
sbb
mov
cmp
iret
hlt
loop
cwtl
iret
jg
fsubs
mov
pop
xchg
add
push
pop
inc
testb
aas
mov
push
pop
xchg
jno
cmp
insl
ret
sub
or
jl
add
push
pop
testb
pop
jecxz
mulb
loop
sbb
ficomps
xor
adc
xchg
mov
push
clc
mov
in
pop
xorl
jns
dec
rclb
push
push
stc
je
jl
les
imul
sbb
add
add
lret
mov
aas
push
int
orl
inc
push
insb
pusha
adc
adc
cli
cmc
pop
sbb
sbb
aaa
ljmp
faddl
add
sahf
lcall
notb
add
mov
sbbl
mov
test
inc
jge
dec
dec
sbb
ja
repz
pop
cltd
out
enter
aam
lret
in
int
enter
pop
inc
mov
test
popf
xchg
push
push
test
cmpsl
into
sub
icebp
cltd
cmp
ja
sbb
or
outsl
popa
add
sbb
cmp
xchg
fsubr
fisubrs
mov
repnz
test
nop
inc
fstl
mov
sbb
dec
jmp
mov
aaa
and
sbb
add
add
in
sti
inc
dec
fcmovbe
jbe
jae
mov
push
jnp
mov
jb
in
and
jg
dec
or
subb
cmp
nop
fildll
xor
fistl
mov
dec
cmp
push
cli
xor
adc
aam
dec
test
jae
cmp
movsb
out
mov
cmpb
int
pop
jmp
test
dec
cmp
and
negb
loope
jo
out
mov
push
adc
lods
or
pop
sbbb
push
xchg
mov
mov
gs
out
pop
cmp
negl
sub
or
in
sbbb
xor
test
sub
dec
clc
divb
inc
pusha
sub
andb
jo
insb
int3
push
xor
dec
xchg
les
jg
xlat
shr
dec
rorl
xchg
push
ret
int3
inc
bound
cmpsb
xchg
jle
xchg
xchg
push
ljmp
mov
push
in
sbb
leave
sub
mov
xchg
xchg
jns
enter
and
rorb
dec
lahf
cli
imul
repz
cmpsl
stos
xchg
or
push
add
xorl
dec
maskmovq
testl
dec
push
sbb
and
jb
push
inc
icebp
sbb
or
add
clc
cmp
je
pop
xchg
xor
loop
adc
test
cmc
imul
cmp
pop
mov
cld
inc
inc
cmp
insl
test
add
popa
popa
aas
les
inc
or
fdivrl
leave
xchg
in
clc
aad
dec
xchg
lds
sub
push
xor
and
inc
sbb
inc
xchg
mov
jl
popa
mov
imul
arpl
imul
sub
mov
data16
les
dec
lret
in
pop
loope
in
je
push
cmp
js
sahf
scas
out
cmp
xor
stos
push
jne
mov
xor
cltd
jno
pop
addl
popa
mov
int
cmp
push
sar
inc
jnp
ljmp
test
sbb
das
mov
xor
negb
loope
popa
xor
sub
xchg
mov
fucom
jbe
jl
es
sti
jno
jns
sbb
or
ficomps
jl
arpl
insb
jg
push
fisubl
mov
test
andl
xor
dec
push
loop
stos
xor
pushf
dec
add
adc
or
loope
stos
call
pop
ljmp
jne
xchg
cli
pop
popf
xor
sub
subb
mov
push
ja
cmp
mov
fidivrs
fisttpll
and
mov
inc
push
sahf
stos
add
mov
jg
xlat
dec
pop
and
xchg
int
call
xchg
sbb
xchg
lcall
movsb
pop
pop
xchg
imul
pop
adc
pop
mov
xlat
ficompl
cmp
xchg
or
push
in
inc
mov
arpl
mov
pusha
or
or
push
mov
mov
stc
lea
divl
test
xchg
iret
fnstsw
addr16
ja
sbb
cli
iret
push
pop
dec
push
hlt
cli
rcl
repz
xchg
iret
out
mov
mov
xchg
lahf
add
mov
sbb
mov
outsl
mov
pop
xchg
mov
pop
jmp
aam
jnp
or
dec
subb
mov
jnp
fisubl
pop
cmp
hlt
push
icebp
sbb
jecxz,pt
in
dec
into
xlat
aad
enter
leave
cmp
xchg
cmp
cwtl
das
push
cmp
clc
inc
fcompl
pop
dec
inc
cltd
fwait
jae
sbb
dec
insb
jl
sbb
adc
pop
xor
xor
stos
cmc
arpl
mov
jg
stos
ret
fildl
aas
rorb
imul
jnp
pop
push
xor
in
xchg
cli
jmp
push
push
in
aam
and
add
push
pop
and
sbb
dec
cmc
shrl
test
sbb
xchg
jo
push
cld
push
data16
cmp
out
sub
pop
fcomps
pop
flds
aas
xchg
xchg
xor
arpl
test
jecxz
movsl
push
mov
push
jle
loope
or
sub
lea
fwait
pop
cmp
sub
inc
inc
ds
lds
add
inc
lock
in
inc
sbb
lahf
rorl
in
fiaddl
xor
imul
lret
int3
bound
gs
cmc
xchg
aam
jle
adcb
jp
sbbb
pop
and
push
sub
dec
push
mov
pop
ds
nop
ljmp
pop
filds
pop
sub
add
mov
pop
sub
cmp
lcall
sarb
lahf
xor
jns
xchg
nop
push
mov
ljmp
lods
int
mov
adc
mov
popa
mov
popa
inc
sbb
sbb
repnz
xor
cmp
pop
dec
int3
dec
cmpsb
out
and
bound
push
mov
cmp
push
ljmp
push
add
popa
add
idivl
cwtl
sbb
mov
loopne
push
xorb
ret
aas
rcll
or
dec
push
mov
and
sub
je
mov
cld
fisttpll
clc
fcomi
push
xchg
sbb
add
sub
sbbl
adc
sub
arpl
insl
mov
adc
shl
xorb
sub
ror
stc
imul
adc
push
popf
jbe
les
mov
xchg
add
jge
fisttpll
mov
mov
insl
ret
pushf
or
hlt
sbb
jp
jne
lahf
cltd
mov
dec
xchg
leave
pop
test
daa
cmpsb
pop
adc
js
or
adc
mov
mov
or
dec
and
cltd
xor
insl
sbbb
xchg
ja
sub
shll
jecxz
push
pop
popa
mov
sub
test
dec
incb
inc
pop
jp
sub
lret
cmp
stc
fwait
sbb
loop
scas
sbb
cmp
lcall
insl
out
pusha
cmp
push
add
bound
out
dec
sbb
jnp
dec
fdivrs
mov
pop
sbb
push
das
sub
cmpsl
mov
mov
bound
sbb
sub
sub
jp
mov
dec
icebp
ret
cmp
test
shl
leave
sub
add
sub
lret
faddp
mov
mov
adc
arpl
das
pop
andb
jno
sbb
xor
pop
push
pop
xchg
inc
cmp
sub
inc
xchg
mov
push
push
inc
insl
fs
ljmp
lcall
xor
iret
push
repz
jns
sti
adc
in
out
mov
into
sti
xor
insl
rcll
jg
sbb
xchg
jp
std
add
ljmp
test
repnz
mov
pop
sahf
test
jne
cmpsb
cmp
les
xchg
or
jp
rorb
mov
adc
sub
jge
mov
mov
mov
mov
inc
push
jns
mov
stos
xchg
sub
lea
int3
faddl
in
btc
jb
inc
pop
push
adc
lcall
outsl
clc
inc
pop
movsl
rcr
dec
jecxz
outsb
dec
inc
mov
leave
dec
addb
out
fisttpll
arpl
orb
jno
sahf
mov
inc
push
out
push
push
xor
mov
ljmp
fistl
shl
pop
xchg
xor
test
movsl
fiaddl
cli
dec
mov
jmp
call
mov
mov
xor
mov
hlt
sbb
xor
stc
mov
mov
test
repnz
test
jge
aad
aad
data16
outsb
je
push
mov
pop
je
xor
xchg
stos
push
dec
out
push
bound
cmp
pop
iret
dec
shrb
es
add
cmp
pop
xor
xlat
mov
jae
int3
mov
dec
xchg
sub
xor
sbb
lret
push
xor
cli
pop
outsl
cmp
push
jae
cmpl
and
jmp
mov
jno
loopne
add
or
shrl
cmpb
data16
pop
xacquire
mov
fwait
shlb
movsl
adc
push
mov
lock
ja
pushf
mov
adc
add
loopne
sub
test
inc
mov
inc
fidivrl
dec
jecxz
ror
icebp
daa
arpl
pop
cmp
aam
adc
xor
inc
jp
mov
cmpsl
or
sahf
ljmp
fstpl
rcrl
lods
jo
cmp
nopl
push
mov
icebp
fldcw
pop
ds
dec
push
xor
pop
lahf
ret
fadds
bound
jne
popa
add
fs
das
mov
mov
lret
fisttpll
lods
mov
test
bnd
inc
out
testw
sti
bound
sbb
les
andb
mov
lea
adc
ja
rclb
pop
xor
iret
and
out
in
insl
mov
xchg
inc
push
dec
shll
and
dec
loopne
clc
push
out
in
js
ljmp
pushf
push
loopne
add
push
icebp
dec
pusha
xchg
mov
inc
cmpsb
lds
test
cmp
mov
xchg
mov
fisubrs
cmp
jnp
dec
sub
popa
int
xchg
push
mov
cmpsb
sahf
cmp
cwtl
xor
ds
out
inc
or
or
leave
inc
mov
fmull
xchg
pusha
inc
mov
pop
rcrl
cli
push
xor
adc
cmp
js
or
jmp
cmp
xchg
and
cmp
push
orl
dec
inc
test
jmp
call
jo
data16
addr16
inc
jae
push
push
inc
loopne
cmp
add
mov
mov
ficoml
or
inc
cmp
sbb
cmp
fprem
loop
jo
mov
or
je
lods
je
push
jl
call
ds
dec
inc
pop
sbb
cmpsl
and
or
dec
incb
jae
sub
negb
or
push
xor
pop
xor
dec
jge
xchg
cltd
xchg
jb
test
mov
insb
fimuls
ljmp
loopne
pop
xchg
loope
jnp
xor
mov
clc
push
mov
jecxz
jle
repnz
and
lea
rcl
shrl
and
sub
test
test
jg
test
mov
aad
adc
inc
movsb
xor
push
fcmovb
jmp
pop
dec
push
mov
inc
xor
stos
or
mov
jnp
rcrb
insb
dec
in
push
xchg
fstpl
cmp
les
nop
in
int3
cmpsb
popf
sub
aas
aaa
stc
cs
and
ffreep
enter
xchg
sub
inc
or
loop
js
pop
sub
out
sub
fisubrl
sbb
pop
sub
sbb
jne
in
push
test
icebp
das
daa
adc
inc
popf
inc
rclb
mov
pusha
adc
push
mov
aas
cmc
scas
pop
test
icebp
test
gs
push
daa
inc
lock
mov
insl
mulb
faddl
cmp
inc
xor
xchg
sbb
dec
dec
adc
dec
pop
push
jle
mov
aaa
lods
out
scas
jecxz
mov
scas
pop
mov
mov
jle
jo
cmpsb
adc
xchg
rcll
or
xchg
jecxz
popa
pusha
sbb
popa
jb
stos
pushl
lret
lds
mov
push
mov
aad
cmpsl
lahf
lods
dec
and
jo
pop
mov
adc
fwait
or
adc
dec
ret
test
arpl
sahf
rcrb
adc
jne
dec
sti
sahf
cmp
mov
outsl
in
out
aaa
adc
dec
mov
dec
sbb
call
sub
stos
sub
mov
je
cltd
ja
sub
xchg
mov
adc
aas
mov
out
add
out
leave
push
and
pop
ljmp
cmp
adc
pop
ja
lcall
leave
sbb
push
mov
arpl
sub
sbb
mov
mov
jbe
cmpsb
orb
adc
adc
inc
int
add
mov
clc
insl
pop
add
arpl
mov
orb
out
adc
pop
and
jecxz
xor
fmuls
mov
fstl
sub
mov
pop
fcmovne
fdiv
mov
xor
mov
sub
ret
pusha
dec
dec
mov
stos
jp
rorl
push
jno
in
lahf
dec
mov
inc
and
jp
pop
out
dec
outsb
push
mov
cmpsl
clc
and
xlat
imul
sub
pop
js
cmp
mov
add
mov
aam
scas
in
insl
adc
xlat
jne
xor
ss
cmp
and
mov
cmpsl
jp
sbb
jg
stos
push
push
ret
inc
or
cmp
inc
movmskps
outsl
or
ficoms
adc
push
out
sub
shlb
inc
popf
ja
or
mov
xor
xchg
ljmp
call
cmp
mov
mov
cld
addr16
shrb
jae
jge
inc
int3
jnp
js
loope
add
cwtl
xchg
in
mov
icebp
cmpsb
fmuls
test
stos
mov
in
sbb
adc
stos
and
sub
popf
aam
inc
sbb
jno
test
push
data16
or
adc
fucom
daa
cld
pusha
imul
cmp
push
pop
and
push
jnp
es
mov
xchg
std
add
nop
js
decl
sub
pop
les
js
movsl
push
test
pop
mulb
pop
scas
sbb
scas
cmp
pop
xchg
sbb
cmp
dec
inc
imul
sbb
pop
xorb
push
roll
add
test
mov
fisttps
sarb
inc
xor
and
or
pop
inc
jge
hlt
mov
add
test
roll
sbb
jge
and
jle
fdivs
mov
add
xorb
stos
enter
sbb
daa
adc
or
ja
push
iret
adc
bound
mov
mov
push
mov
into
sub
aas
mov
xor
push
and
jno
adc
stos
dec
repnz
jge
je
dec
xor
push
outsb
xor
iret
aad
lret
adc
or
das
mov
test
scas
xchg
fcoms
and
add
loopne
out
in
mov
or
lods
add
push
frstor
cmp
cmc
loop
adc
out
clc
es
jmp
pop
ficoms
and
ftst
push
out
das
mov
xorl
add
sbb
aas
dec
mov
mov
pop
and
lock
pop
xor
sbb
rclb
mov
sbb
sbb
adc
xchg
sbb
jo
or
pop
loopne
ret
mov
cltd
jmp
or
pop
jmp
mov
dec
inc
sahf
lods
mov
rolb
sbb
add
jns
and
pop
add
arpl
xchg
jp
mov
pop
mov
shll
inc
xor
jl
add
cmp
push
xchg
outsl
xchg
or
xor
sub
out
add
cmp
aaa
jp
ficoms
sbb
dec
popa
fmull
inc
or
data16
out
dec
jo
lods
pop
fsubrl
gs
or
jo
lods
add
ljmp
push
adcb
add
test
mov
or
inc
pop
jne
movsb
jb
mov
mov
pop
xor
cli
and
out
and
rcll
ljmp
push
call
push
pusha
jns
or
cmp
clc
mov
dec
mov
in
addl
mov
or
jle
fisubrs
sbb
push
pop
pop
in
push
out
sarl
sbb
shrb
sub
pusha
outsb
andl
add
arpl
cmp
call
inc
add
mov
dec
mov
mov
jae
loope
jl
or
sbb
cs
sbb
mov
ret
lods
scas
in
test
mov
sub
jb
test
fwait
repz
sub
sub
inc
pop
arpl
push
sbb
shrl
push
pop
sti
mov
imul
sub
cmpsb
bound
xchg
push
inc
jae
jle
rolb
in
icebp
jecxz
fisttps
popf
in
dec
iret
repz
mov
fnstcw
xor
nop
sbb
push
or
roll
aaa
pop
inc
and
dec
xor
xor
pop
popa
dec
add
pop
lods
xchg
cmp
into
insb
xor
fs
in
rcr
push
inc
dec
hlt
mov
fdiv
dec
jge
xchg
mov
pop
rcll
or
clc
das
fst
or
iret
xchg
push
arpl
je
mov
jo
xchg
jmp
pop
cmp
push
sbb
stos
adcl
leave
adcb
mov
push
scas
stos
int
xchg
popf
xor
mov
cwtl
jno
xor
xor
mov
push
cmpsl
int3
mov
mov
imul
dec
dec
jge
nop
and
popf
and
sbb
and
sbb
and
jae
ret
xchg
sbb
icebp
insb
jns
pop
jp
pop
pop
cmp
mov
xor
xor
mov
cmp
mov
jb
push
mov
cs
pop
fmulp
fadds
or
cmc
mov
ss
jmp
pop
sub
cmp
dec
jns
push
pop
flds
rclb
fisubrs
loop
add
lods
add
mov
outsl
imul
int
inc
push
mov
dec
mov
sahf
push
pop
mov
out
mov
je
mov
mov
std
popf
and
lods
xlat
addb
mov
mov
repz
outsb
fnstenv
sbb
into
adc
inc
addr16
movsl
cmp
int
adc
or
jo
mov
jns
push
into
mov
loope
dec
mov
addr16
movsb
inc
pop
shrb
in
pop
iret
in
pop
xlat
jne
call
jecxz
inc
sbb
mov
push
addl
loopne
cwtl
adc
stc
mov
aas
xor
icebp
pushf
pop
sub
pop
sahf
and
sbb
mov
adc
fstpl
mov
lret
mov
into
fnstenv
dec
add
mov
pop
divl
cmc
pop
xchg
addl
xlat
pop
cmpb
adc
outsl
push
xchg
sbb
push
adc
mov
push
dec
out
mov
add
out
adc
popf
sbb
movsb
jnp
fmuls
insl
mov
and
and
pop
loope
insb
sub
les
pop
inc
movsl
aad
push
pop
test
push
inc
lods
pop
test
es
cmp
cmp
call
add
mov
mov
mov
lret
push
fwait
jge
push
test
pop
push
das
enter
es
les
test
cmp
inc
sbb
cmc
ljmp
pushf
int
xchg
stos
fdivrs
sbb
sub
mov
push
ret
imul
repnz
movsb
xor
movsl
mov
scas
xor
and
mov
push
testl
push
shl
pop
rcll
sti
pop
cmp
push
inc
out
sub
mov
stos
negb
out
mov
dec
push
frstor
dec
aas
addr16
mov
fwait
movsl
xor
and
test
cmp
push
stc
xor
or
sbb
cmpsb
pop
decb
data16
in
sbb
and
or
ss
sbb
cmp
pop
popf
add
xchg
and
xor
dec
sahf
xor
mov
adc
icebp
xor
out
sbb
adc
jno
add
adc
or
popa
mov
imul
sub
dec
sub
idivl
xchg
repz
xchg
xchg
loopne
fwait
imul
dec
fnstcw
in
out
or
cld
movsb
std
or
jp
cmp
in
pop
push
loope
shll
jmp
add
add
shll
filds
jmp
ja
jg
xlat
negl
inc
adc
cli
add
xchg
inc
add
jb
sbb
pop
jnp
loop
dec
xor
mov
cs
xor
cmp
cmpsb
test
cmp
push
in
mov
add
dec
popf
xor
mov
dec
push
sub
ljmp
mov
test
ret
xor
jp
inc
mov
pushf
ror
dec
and
add
and
mov
mov
jne
push
fnsave
in
outsb
sub
test
jo
jg
mov
push
ss
callw
in
loop
or
and
xor
add
sub
fwait
inc
jb
or
mov
mov
sub
add
push
imul
dec
sbb
dec
dec
or
insl
dec
addl
mov
xchg
xlat
push
sub
dec
das
adc
dec
lods
xchg
mov
cmp
outsb
push
mov
pop
loop
jnp
cmpb
stos
xchg
addb
mov
sar
stos
jge
and
push
cmp
dec
es
lcall
aas
xchg
les
aad
sub
push
cmp
orl
arpl
ja
xor
mov
imul
out
stc
dec
out
popf
outsb
aaa
pop
nop
cli
adc
je
jo
cld
cvtpi2ps
stc
arpl
lahf
add
jno
pop
out
xor
jp
icebp
daa
repz
pop
sbb
xchg
or
dec
and
sti
jnp
sub
stc
sbb
stos
bound
push
test
fstpl
xor
ret
jnp
prefetcht2
sub
xor
pop
inc
icebp
mov
test
pop
adc
sti
imul
and
push
mov
cmp
xlat
pushf
scas
push
add
pop
push
xor
mov
inc
stc
in
aas
push
test
mov
idiv
lret
mov
popf
xlat
sbb
scas
push
lret
cwtl
mov
in
and
popa
mov
ficompl
inc
mov
inc
ficompl
pop
mov
aam
sub
stos
sti
cmp
inc
lcall
clc
xlat
or
jae
test
mov
lcall
mov
aas
xchg
mov
mov
gs
popa
xchg
ss
inc
dec
std
in
sbb
or
aad
pop
xchg
push
enter
gs
pop
sub
xchg
mov
jg
loope
sbb
movsl
inc
sbb
mov
scas
mov
lea
out
movsb
xlat
cmpb
push
pop
ljmp
inc
subb
jecxz
push
fucomip
mov
movsb
mov
imul
enter
bound
pusha
lea
shll
mov
adc
dec
xlat
fsubl
xchg
mov
cmp
sbb
xor
out
fiadds
cmpb
sbb
cmp
cmp
push
xlat
adc
rcll
daa
xchg
or
mov
fcompp
popa
shr
adc
xor
fbld
mov
fwait
dec
outsb
loopne
fidivrl
or
mov
push
ret
pusha
outsl
sbb
imul
in
mov
mov
mov
pop
jle
in
loop
push
cmp
mov
pop
push
sahf
mov
jecxz
in
xor
aaa
mov
out
sbb
cld
sub
scas
ljmp
sar
xchg
daa
or
pop
daa
jg
mov
jb
test
dec
xchg
aas
test
les
sub
test
ficoms
lock
dec
xchg
in
mov
test
cmpsl
movsl
ds
das
cltd
andl
les
add
sub
fimuls
jmp
fwait
test
adc
mov
inc
arpl
loop
cmp
mov
inc
sub
sub
lods
jle
test
mov
ret
hlt
and
cli
fs
xlat
push
xchg
mov
mov
ds
dec
add
or
jge
ror
lods
cmp
add
outsl
sub
repnz
subb
lret
pop
fnsave
cmp
cmpsb
xchg
jle
mov
push
je
pop
aad
sbb
sub
lds
xor
jae
and
movsl
mov
mov
mov
add
mov
push
dec
mov
jne
push
jmp
push
movsl
out
scas
repz
cmp
outsl
add
mov
push
cmp
adcb
ret
rcr
ljmp
adc
dec
cmp
je
jae
mov
scas
hlt
iret
push
mov
jecxz
stos
push
repz
jecxz
stc
lds
test
pop
les
pop
cmpl
push
cmp
in
cmpsl
push
mov
cmp
negb
les
mov
lock
lahf
push
loopne
hlt
add
stos
pop
mov
fistpl
cld
in
push
loopne
or
lock
adc
mov
xchg
mov
out
sbb
test
mov
call
pop
jbe
jmp
push
popf
loope
pop
adc
push
jne
stos
adc
fstpt
je
cs
stos
in
mov
fwait
pop
cmp
sbb
jge
mov
lret
jo
pop
test
call
inc
sarb
jecxz
and
test
cltd
addr16
adc
aad
inc
inc
push
inc
mov
hlt
jge
ss
insb
in
icebp
pop
mov
ret
mov
mov
mov
add
xor
lea
mov
fildl
insb
bound
or
inc
push
pushf
out
rclb
mov
xchg
mov
inc
cmp
mov
dec
stos
sar
pop
sub
mov
pop
xor
cli
andl
adc
lahf
pop
leave
push
lea
pop
ss
scas
mov
stos
movsl
lods
push
mov
push
fwait
inc
mov
add
and
sub
add
aaa
jb
scas
popf
sub
cmp
push
lahf
xchg
jecxz
mov
mov
sub
sahf
jns
and
add
adcl
jns
sbb
andl
xchg
or
cld
arpl
push
and
sub
stos
cmp
scas
add
mov
emms
pop
lods
lock
jae
cmc
movsb
in
xchg
scas
in
dec
ret
mov
into
or
out
sub
pop
mov
hlt
lods
out
popa
iret
mov
pop
xorb
xor
mov
pop
mov
scas
pop
insb
pop
std
movsl
adc
push
shr
hlt
sti
jl
mov
outsl
fwait
imul
bnd
scas
je
jge
hlt
mov
call
and
shl
cmp
je
push
leave
cli
cli
clc
push
arpl
jns
lods
mov
adc
frstor
cmpsl
inc
mov
xchg
sub
sbb
ret
rorb
lcall
adc
and
jnp
movsb
pop
aaa
lods
xchg
arpl
sub
push
mov
imul
decb
mov
gs
shlb
popf
add
push
inc
jg
xchg
inc
sub
add
nop
mov
js
mov
out
es
sub
xor
in
fadd
shrl
jne
inc
push
rcrl
xchg
jno
jns
ss
cmp
outsb
es
mov
mov
iret
or
int3
cltd
dec
popf
test
jmp
mov
repz
sbb
mov
dec
jae,pn
cmp
insl
mov
outsl
jb
xchg
insb
mov
and
xchg
inc
jne
bound
add
and
xor
test
mov
int
outsb
loopne
movsl
popl
pushf
sub
jl
mov
mov
in
insb
and
and
out
jle
sti
sbb
ficomps
xlat
dec
mov
icebp
cmp
outsb
sbb
mov
lahf
insb
push
mov
out
jbe
nop
and
ljmp
loopw
sbb
nop
adc
pop
lret
scas
push
insl
mov
jle
bound
xor
push
dec
loop
xlat
cmp
pop
pushf
jl
mov
add
imul
cmp
inc
shll
mov
call
gs
cmp
shlb
test
aas
push
addb
pop
jne
inc
sub
loop
add
push
xchg
psadbw
mov
es
scas
leave
ja
cmp
mov
sub
mov
pop
das
cmp
cmpl
lods
mov
sbb
dec
cmp
or
test
stos
xor
jp
imul
dec
aam
push
mov
out
mov
dec
sub
adc
and
mov
sbb
xor
mov
and
xchg
popf
or
insl
in
aaa
stos
out
pop
push
push
in
sbb
into
or
sub
xchg
out
jno
add
fdivl
repz
data16
xchg
cwtl
scas
rcl
mov
pop
sub
pop
pop
push
pop
hlt
in
aam
push
pop
repnz
add
ja
in
xor
pop
pop
lods
mull
movsb
mov
mov
fwait
shll
fidivrl
imulb
add
imul
das
fiadds
inc
cmc
imul
cmpsl
sbb
pop
les
mov
idiv
adc
aad
jne
mov
cmp
orl
mov
jp
das
xlat
es
jl
dec
mov
test
mov
jo
adc
ret
lcall
ljmp
xor
fwait
stc
xor
sahf
out
lds
clc
lret
nop
fcomps
mov
jbe
clc
mov
sbb
jecxz
sbb
out
push
cmpsl
cld
jp
aas
inc
es
insl
sti
push
fmull
inc
cmp
sub
addr16
mov
aam
or
sub
mov
mov
int3
sahf
incb
push
and
mov
fisttpl
in
sub
mov
test
xchg
loopne
jno
fiaddl
sbb
jae
loop
movsl
ret
inc
mov
xlat
dec
lds
mov
imul
jns
cmp
in
push
inc
rorl
mov
mov
adc
scas
ficoms
mov
lret
icebp
stos
pop
xor
sub
scas
add
loopne
aaa
loop
mov
xchg
adc
xor
subl
adc
push
ret
popa
ficomps
cld
pop
movsl
add
mov
xchg
ret
aam
jnp
mov
mov
in
fs
sbbl
cmpsb
test
sub
or
mov
test
fbstp
lds
push
or
sbb
adc
xchg
mov
mov
push
jb
mov
fcoml
stos
sbb
negl
push
loopne
mov
gs
aad
mov
ljmp
cltd
fisubrl
shr
cmp
jle
aad
icebp
or
enter
sbb
mov
or
stos
cmp
add
xchg
je
sub
test
add
stos
jl
cltd
mov
push
xchg
fucomi
decb
outsl
out
add
popa
adc
les
inc
sub
addb
dec
outsl
stc
stc
stos
ret
out
pop
cmp
cmpsl
hlt
xor
xor
jb
iret
popf
xor
mov
pop
jge
ret
mov
sub
mov
insl
js
dec
jne
inc
jo
popa
cwtl
pop
mov
add
or
nop
push
jecxz
orb
and
je
sub
scas
adc
cmp
leave
insb
xchg
dec
sub
hlt
cmovbe
aaa
int3
ljmp
insb
fwait
in
pop
lret
cwtl
gs
popa
lret
dec
push
out
push
xchg
dec
push
scas
ret
or
mov
inc
daa
adcl
aad
test
mov
xlat
cli
cmpsb
stos
mov
and
jecxz
mov
ja
and
cmpsl
fsubr
ds
cmp
icebp
lods
pop
fidivs
loope
daa
mov
pusha
arpl
clc
fwait
pop
test
daa
mov
aas
sub
aad
mov
inc
sub
sub
lods
sbb
lds
in
pop
js
sbb
cs
popf
out
jg
pop
sbb
jb
popf
bound
xchg
xlat
les
sub
and
jecxz
ja
xchg
into
sahf
rcll
out
test
imul
dec
inc
jmp
loop
cmp
push
scas
push
cmp
int3
and
add
pop
cmp
jnp
fldenv
push
sub
push
daa
out
imul
test
lock
xlat
inc
je
and
hlt
and
jmp
jns
jp
mov
xchg
jns
out
sub
push
sbb
xchg
cmp
lods
adc
mov
push
mov
pusha
xchg
daa
jae
test
inc
in
ret
clc
movsb
sub
call
les
ror
pop
sub
fs
leave
test
jae
cmp
or
sbb
jl
mov
cwtl
mov
pop
mov
mov
xchg
loope
or
sbb
pop
popa
jle
insl
cmpsl
xchg
test
mov
push
inc
mov
cmp
pop
loope
loopne
aaa
int
mov
aas
fldt
xchg
mov
mov
inc
and
dec
lret
pusha
pushf
arpl
xchg
addr16
jp
pushw
rolb
mov
add
jae
fwait
mov
xor
xorb
fcoml
out
or
adc
xchg
imul
jnp
out
shrl
outsb
jo
nop
clc
rcll
xchg
sub
ror
xchg
movsl
shrb
daa
or
pop
xchg
imul
outsb
pop
lahf
jnp
xchg
and
and
cmpsl
push
cmp
inc
fsts
xor
in
addr16
lds
ja
arpl
movsl
call
sub
dec
mov
sub
int
lock
or
shl
rcll
xchg
rclb
dec
or
push
jp
mov
dec
sbb
jecxz,pt
fcmovb
xchg
aam
xchg
enter
adc
arpl
ficomps
out
jb
ss
cwtl
mov
imul
jno
insl
aas
xor
sbb
outsl
or
imul
mov
xor
hlt
aam
and
orb
dec
or
scas
clc
jb
xor
rolb
stos
pop
xlat
imul
push
xor
adc
fstps
push
outsl
mov
dec
cmp
insb
in
les
xchg
adc
sti
mov
lret
dec
test
sub
fistl
loop
cld
jns
ret
inc
pushf
sub
mov
sub
cli
cltd
jle
mov
jecxz
mov
in
mov
fistpll
mov
push
mov
rcrl
adc
ret
imul
jo
mov
imul
mov
xchg
insl
test
jg
add
dec
aad
outsl
jbe
mov
inc
stc
cmpsl
jno
cmpsb
inc
dec
mov
mov
add
inc
in
jg
or
shrl
ds
jns
cmp
cmpsl
xor
les
cmp
and
or
movsb
jbe
mov
lock
not
jecxz
ret
adc
int3
movsb
lcall
loope
mov
arpl
fs
lret
cld
scas
sub
ret
leave
in
inc
adc
sub
fisubs
or
lret
notl
cmp
push
stos
lds
scas
sbb
addr16
rolb
jnp
lea
or
mov
cmp
push
add
mov
cmp
cmp
pop
sub
pusha
fcmovnu
mov
aaa
pop
mov
stos
daa
ljmp
mov
bound
push
push
dec
pop
cmp
dec
sub
add
adc
shlb
call
push
stc
push
jl
sbb
push
adc
adc
xor
jg
or
ds
call
dec
jo
cltd
pop
repz
mov
iret
xlat
lds
rolb
js
mov
mov
into
push
inc
or
cmpsl
jp
adc
or
jb
mov
mov
fldt
xchg
insb
sbbb
data16
cmp
inc
xchg
scas
pop
sar
push
lahf
cmp
hlt
shrl
push
xchg
dec
ja
adc
inc
mov
into
xchg
fs
loop
sbb
mov
inc
ret
std
fistpl
push
xchg
das
aam
int3
lret
gs
and
mov
push
lds
enter
mov
rol
dec
lret
mov
test
rcl
cmp
std
or
clc
jbe
lds
mov
lds
subl
dec
pusha
mov
or
sub
leave
stos
mov
push
and
xchg
xchg
imul
dec
les
xor
enter
add
mov
movsb
mov
data16
push
push
or
into
mov
mov
add
inc
xor
sahf
sbb
pop
xchg
pop
jmp
jne
sub
call
lods
adc
in
nop
nop
popa
adc
mov
lods
nop
mov
sbb
push
cld
jl
mov
ja
js
push
xor
dec
inc
push
in
enter
outsl
or
cmc
sahf
out
arpl
in
push
pop
mov
add
sub
mov
sub
dec
push
add
stos
mov
pop
repnz
inc
pop
test
stos
cmpsb
test
mov
lret
jmp
cmp
data16
ljmp
cmp
gs
aaa
jns
jmp
cmc
sub
sub
fs
adc
inc
sbb
ret
xchg
in
hlt
xchg
dec
xlat
dec
xchg
rclb
mov
sbb
cmpsb
mov
lcall
add
lds
xlat
pusha
lcall
popf
cmc
outsl
sbb
inc
data16
mov
popf
in
mov
inc
pop
jl
cmp
jae
leave
dec
cmpsb
enter
int
sbb
push
stos
jle
jg
xchg
sbb
shll
stos
das
pop
and
sbb
jg
mov
push
gs
aam
xchg
or
sub
fucomp
push
mov
sbb
lods
push
pusha
leave
lea
cmp
adc
es
hlt
adc
jne
and
popa
adc
imul
add
mov
in
pop
lahf
jns
shlb
cmp
sahf
xor
add
cli
sub
shll
add
enter
xor
loop
jp
icebp
mov
je
sbb
xchg
cmpl
push
in
jb
xchg
daa
call
pop
stc
fs
loop
jns
int3
in
test
sub
adc
cmp
fstl
push
jb
mov
rorb
sub
push
lret
mov
xor
fcmovnbe
stc
addl
add
iret
std
inc
lods
sbb
cmp
mov
pop
cmp
cmp
ret
repnz
pop
xor
in
push
fnstenv
cli
popf
mov
xchg
ds
cli
add
loop
dec
stc
sbb
xor
daa
and
stos
push
mov
adcb
rolb
int3
or
fmuls
xchg
call
outsb
adc
std
sti
sub
xor
mov
addr16
insb
push
jp
decb
adc
das
mov
pushf
cwtl
lds
cmc
inc
mov
jl
jge
jl
push
mov
push
sbb
adc
mov
mov
ds
out
lcall
cltd
cld
out
mov
subb
int3
imul
popf
sub
inc
scas
mov
mov
and
xchg
lret
outsl
xchg
icebp
mov
add
adc
stos
cmp
mov
sbb
cmp
lock
pop
inc
ficoml
popa
adc
mov
inc
test
std
xor
mov
or
xlat
mov
insl
lahf
movsl
or
xor
test
xchg
jg
cmpsl
jb
pop
mov
cltd
lods
dec
sbbl
jmp
and
pop
inc
xchg
iret
sbb
leave
xchg
dec
nop
sbb
cmpsb
imul
add
clc
push
cmp
cmp
lret
scas
fs
mov
xor
rcrb
or
xor
call
in
dec
cmp
mov
push
int3
pop
cs
scas
xor
add
lcall
jle
cmp
cltd
cs
sbb
mov
or
sub
mov
dec
movsb
mov
jns
cmp
dec
fwait
dec
inc
cmc
aas
sub
sbb
inc
adc
xor
leave
loope
lods
adc
cmp
jg
jnp
fcmovnu
incb
jmp
ja
ja
aaa
fmuls
mov
std
push
cli
jns
bts
mov
movsl
in
inc
xchg
cmp
cwtl
mov
add
cmp
jae
scas
xor
sahf
jl,pn
lock
cmp
xchg
pushf
xor
mov
mov
out
imul
mov
stc
or
loopne
out
and
lds
fcomip
mov
mov
ret
inc
jle
xchg
push
aas
mov
and
adc
or
mov
push
ror
pop
pop
push
testb
repnz
inc
je
icebp
loop
mov
cmc
mov
pushl
xchg
in
fwait
adc
pop
out
sbb
in
ret
xlat
xor
add
cmpsl
dec
mov
aaa
and
sbb
in
xchg
test
inc
sbb
add
fadds
lret
xchg
sbb
bound
cwtl
mov
ljmp
dec
out
addr16
jae
mov
in
inc
sub
push
fadds
rcrl
fistl
stc
pop
daa
and
fwait
call
mov
sub
enter
pop
or
cmp
mov
fstpl
fdiv
mov
mov
mov
pop
imul
push
int
ret
sahf
pop
or
mov
scas
xchg
add
jmp
cwtl
inc
shr
daa
xor
pop
imul
pop
cwtl
xorl
lahf
addr16
and
pop
mov
lret
lea
pop
shr
cmpsb
pop
mov
ss
add
push
shlb
mov
mul
gs
in
les
cmp
aad
cwtl
xor
popa
jnp
adc
inc
mov
dec
cmp
jnp
mov
mov
shll
sbb
lds
andl
lret
mov
xchg
mov
or
cwtl
inc
in
cld
jp
mov
push
and
mov
mulb
rolb
in
xor
test
inc
out
add
inc
jae
or
mov
sub
pop
pop
sbb
pop
adc
xchg
dec
stc
std
lds
jecxz
les
pop
movsb
push
sub
lea
insl
jle
inc
pop
pop
ss
jnp
out
shlb
test
dec
hlt
inc
stos
sub
lahf
jo
mov
jno
or
inc
fcmove
mov
pop
pop
jns
ret
cltd
daa
ja
push
fnstsw
or
sbbb
mov
pop
mov
aaa
aas
adc
cmp
int
mov
mov
mov
insb
int
jge
jns
ss
jno
sarb
xor
xchg
fadds
repz
aas
pop
pop
clc
pushf
ss
scas
fisubs
lcall
or
adc
mov
arpl
mov
imul
mov
inc
mov
nop
dec
mov
cmp
xor
jle
inc
sbb
out
xchg
mov
mov
sti
mov
std
je
and
inc
sub
dec
xchg
out
adc
cmp
std
jl
push
icebp
pushf
jnp
jge
jge
addb
popa
and
push
out
mov
in
dec
mov
pusha
pop
adc
jbe
je
push
inc
xlat
jae
mov
lea
lret
mov
mov
dec
int
jnp
loope
cmp
mov
mov
movsl
dec
cli
adc
test
arpl
mov
jno
mov
or
insb
lea
lret
and
jae
and
push
add
or
push
add
out
scas
push
mov
outsl
mov
mov
imul
xchg
test
mov
push
inc
pushf
popa
sub
insl
and
ss
mov
popa
adc
daa
shll
repz
mov
cwtl
or
xor
addb
sub
jbe
arpl
or
push
inc
jmp
lret
mov
jg
loop
mov
mov
dec
repz
push
fstpt
shll
cmp
lahf
test
mov
or
adc
pop
andb
mov
lcall
mov
ljmp
rorb
jp
push
lock
shrl
rorl
jecxz
hlt
pop
mov
xchg
or
ss
inc
xchg
push
pusha
mov
cmpsb
dec
out
roll
add
xchg
or
jno
fs
lret
dec
lds
inc
repnz
cmp
cld
les
sahf
push
lods
lcall
add
push
nop
add
std
ja
mov
sbb
and
xchg
and
test
dec
rcrl
or
xlat
mov
adc
cli
dec
inc
sbb
into
lds
xor
sarl
push
jb
testl
loopne
dec
rorb
test
jb
dec
mov
repnz
fwait
inc
lret
dec
sbb
jae
test
test
out
sub
dec
xor
xor
scas
add
movsl
cld
mov
js
push
mov
pop
sub
push
stos
sbb
in
lods
aas
push
jne
jg
add
cmpsl
or
lret
mov
nop
lret
pop
loope
call
sub
fsub
sbb
jns
clc
or
lcall
pop
stos
ja
mov
insb
mov
aas
fistpl
xchg
pop
fnstenv
cwtl
pop
jmp
sbb
push
dec
out
enter
mov
into
and
mov
mov
push
dec
incl
ds
sub
push
or
addr16
fcompl
jecxz
jp
mov
fs
or
cmpsb
popa
inc
or
jecxz
cwtl
sub
mov
or
insb
fstps
mov
psllq
push
push
in
or
xlat
int
andb
cmp
pop
xchg
and
rolb
sub
sti
mov
mov
jl
fstl
cltd
ja
jmp
push
lods
xchg
xor
les
stos
sub
gs
xchg
fldl
jnp
inc
cli
or
xor
jnp
test
jne
adc
cld
cltd
fldenv
ljmp
or
pop
dec
push
adc
adc
dec
sar
sub
inc
pop
xchg
sbb
mov
mov
lcall
das
fdivl
jecxz
sbb
fists
in
mov
lds
or
add
mov
dec
adcb
je
fsts
xlat
in
push
iret
push
jg
sub
jl
add
mov
add
rol
jne
in
jnp
movl
mov
mov
mov
repnz
scas
cmp
add
out
cld
inc
push
sbb
adc
outsl
inc
mov
mov
loope
xchg
cmp
movsb
xor
push
sbb
mov
ret
bound
mov
std
inc
jnp
xchg
pop
and
jne
mov
stos
or
jp
cmpsl
scas
pop
inc
push
pop
and
ljmp
sbb
mov
mov
adc
pop
mov
repz
aas
mov
and
mov
loop
mov
sahf
sub
shll
xor
mov
push
add
inc
push
loope
test
pop
addr16
xchg
push
xlat
mov
push
es
jl
sbb
and
std
sub
push
mov
stos
jns
push
mov
pop
ds
push
fmuls
fbstp
lds
jmp
xchg
hlt
outsl
add
in
inc
xor
add
pop
jb
scas
inc
hlt
cmp
xor
mov
mov
daa
adc
es
inc
mov
xchg
inc
divl
stos
jp
sbb
push
push
cmpsl
xor
push
and
cwtl
or
out
dec
mov
cwtl
add
ds
adc
xor
cwtl
sub
dec
push
jns,pn
mov
ret
sub
outsl
faddl
ret
inc
scas
jge
dec
ljmp
popa
xchg
inc
jns
insb
cld
aad
inc
pusha
mov
mov
shlb
notb
fnsave
pop
scas
push
std
mov
push
xchg
sbb
inc
add
arpl
push
add
out
insl
inc
jbe
roll
pushf
add
je
push
add
jno
daa
xchg
arpl
and
jecxz
jo
sbb
xorb
lahf
push
mov
inc
hlt
insl
sbb
lea
xchg
jg
cmpsl
in
iret
fisttps
mov
sub
jge
dec
ss
lcall
clc
insl
jle
inc
jle
pop
add
push
fbld
push
pop
push
push
push
bnd
mov
movsb
xchg
push
ret
cmp
mov
xor
call
inc
test
jns
dec
addr16
shll
loope
je
out
jle
arpl
xor
fsubr
add
aam
add
push
stos
mov
push
jnp
sbb
jbe
ret
popa
add
sti
mov
scas
into
ret
sti
mov
mov
or
repnz
inc
and
or
shrl
xchg
or
cmpsb
mov
mov
and
xor
cs
push
sbb
dec
sbb
out
insl
inc
mov
lods
xchg
mov
xchg
mov
ljmp
dec
sub
pop
sub
and
lea
pop
in
movsl
mov
sub
cmpsb
or
fstl
lds
imul
shll
fistpl
movsb
and
pop
and
push
pop
imul
add
repz
fistps
lret
cmp
cmp
jg
jle
mov
cld
pop
pop
inc
fs
dec
adc
mov
lcall
inc
xchg
jb
or
out
cmpsl
mov
inc
lahf
loop
mov
out
negb
leave
sub
popf
loopne
jbe
movsb
pop
ficompl
dec
adcl
cmpsl
jns
cmc
xchg
cld
pop
jle
mov
xchg
mov
mov
aad
mov
or
xor
in
or
insb
sti
add
hlt
or
je
dec
xchg
cmp
mov
popf
aam
fdivrl
push
fidivs
dec
pop
adc
xchg
popa
lret
test
subps
inc
addb
pop
or
mov
mov
gs
je
pushf
mov
add
sub
dec
jmp
inc
mov
sbb
mov
ja
jl
sbb
xor
jmp
pop
xor
inc
stc
js
sbb
notl
or
mov
pusha
or
sbb
jle
shl
xchg
lods
inc
mov
and
lret
in
into
xor
rolb
imul
mov
dec
pop
jbe
loopne
cmpl
adc
push
or
std
push
mov
xor
daa
test
sub
jbe,pt
pop
aad
dec
sbb
movsl
and
push
or
adc
out
cmpsl
fstp
jmp
mov
push
inc
in
call
adc
pop
inc
dec
lds
jl
sbbl
xchg
xlat
push
adc
fisubrl
flds
outsl
fisttps
sub
jge
frstor
fwait
data16
push
fstpl
mov
xchg
test
icebp
add
xchg
cld
loope
push
in
ds
shlb
nop
lock
je
pop
shll
loop
scas
pop
shlb
adc
std
imul
lock
mov
addb
int
dec
push
pushf
cmp
out
push
push
lds
sub
loope
jnp
pop
ja
rorb
sub
movsl
pusha
aaa
fimuls
xor
dec
sbb
iret
in
aas
outsb
test
fcomps
inc
inc
jp
mov
in
pop
movsl
mov
ret
push
les
mov
mov
push
xchg
pop
jno
inc
aam
and
xchg
icebp
mov
cli
fsubs
xchg
inc
ret
cmp
adc
and
xchg
sub
mov
push
jp
and
leave
and
loop
push
movsl
sbb
mov
aaa
inc
inc
cmp
cmp
fdivrp
shl
cmp
push
xchg
or
sub
dec
jnp
dec
dec
outsb
sbb
pop
filds
testl
in
mov
push
push
xor
mov
add
add
inc
pop
aas
mov
pop
adc
add
repnz
xlat
stos
inc
popf
jb
xor
dec
data16
inc
or
rclb
fnsave
addr16
xchg
adc
adc
sbb
adc
fisttpl
lsl
mov
sub
xor
mov
out
das
lcall
jg
repz
xor
je
rclb
imul
jno
aam
jge
cmpsb
mov
mov
mov
and
loope
stos
data16
lea
ret
sarl
cmp
pop
fstps
repnz
cmp
adc
and
or
mov
ja
imul
sbb
sbb
jns
or
add
jbe
jne
dec
pop
adc
loope
movsl
imul
jo
sbb
mov
cmp
xor
fsubr
xchg
jmp
jae
das
fistps
das
popa
movsl
inc
ss
pop
popf
jmp
imul
add
mov
mov
outsb
rclb
rcl
jg
mov
mov
pop
cmp
sbb
aaa
outsl
cltd
cmp
xor
sbb
xchg
sub
bnd
bound
std
mov
test
fdivrs
mov
sbb
es
jecxz
aas
int3
clc
movsl
aaa
push
xor
jmp
push
sbb
jnp
scas
xchg
mov
rcrl
mov
cmp
adc
pop
cmp
roll
in
ret
dec
nop
movsl
xchg
xchg
jae
jecxz
sub
dec
call
pushf
cmpsl
iret
jo
in
rorb
lds
cmpb
lcall
out
pop
scas
mov
xchg
leave
sbbl
mov
jg
and
mov
push
cmp
fimuls
jne
sbb
pop
cmp
pop
xor
mov
push
rclb
push
fistpl
in
in
cmp
mov
dec
push
adc
test
jp
test
out
out
push
adc
push
push
inc
and
imul
stc
mov
pop
add
inc
inc
arpl
jg
mov
or
paddsb
lods
jecxz
in
cmc
aam
ss
lret
sub
xor
cmp
mov
adc
fidivrs
fistps
lods
outsl
into
aaa
xchg
dec
jmp
pop
cmpsb
xorb
jbe
xchg
and
dec
xor
fucom
pop
mov
cmp
xor
push
mov
hlt
mov
adc
mov
sub
hlt
xor
inc
dec
dec
xor
pop
or
xchg
xor
xchg
xchg
lahf
jbe
mov
test
mov
or
inc
insb
std
shrb
pop
icebp
cmc
in
dec
cld
add
popl
add
dec
add
mov
gs
jo
dec
cmpsb
push
mov
aam
mov
xchg
aas
cmp
or
mov
movsl
in
jnp
ror
and
pop
jecxz
addr16
and
lods
mov
mov
fcmovne
add
les
push
inc
mov
mov
jp
imul
lds
dec
cmp
push
movsb
stos
pop
jbe
adc
mov
push
es
add
cld
inc
xlat
or
out
fs
xor
cmc
xchg
lret
push
mov
scas
adc
mov
outsl
cli
sub
mov
adc
fwait
ds
and
and
xchg
jp
pop
or
sub
fs
scas
clc
cli
xchg
adcl
shl
in
in
loope,pn
lret
adc
fldl
das
dec
mov
lret
outsb
jmp
aas
push
aaa
inc
lahf
stos
add
and
nop
stos
subb
loopne
jns,pn
out
xchg
mov
adc
in
mull
fisttps
push
fisubs
rep
inc
sti
cmp
add
inc
ret
add
popf
jno
and
push
lea
pop
sub
push
into
clc
push
jle
outsb
addr16
out
in
dec
xchg
sub
nop
out
or
cmp
bound
jae
or
enter
pushf
push
out
ja
jl
cld
cmpb
pop
outsl
inc
lds
sub
adc
data16
jb
cwtl
popa
clc
lret
int3
outsl
mov
es
jl
outsb
pop
int
sahf
jno
xchg
sti
aad
push
jle
mov
or
and
inc
jae
out
mov
ds
sub
aad
insl
sub
hlt
adc
leave
imull
dec
push
out
pop
or
push
adc
mov
fnstsw
add
mov
jno
sub
mov
jo
scas
ret
mov
jae
xchg
mov
push
push
icebp
aam
cmp
test
imul
popf
mov
xor
outsb
cmp
ret
leave
sbb
fisubl
fincstp
pop
add
das
sbb
and
pop
and
mov
mov
adc
hlt
sbb
sbb
ret
mov
lea
sbb
mov
repz
cs
xor
push
jge
fisttpl
out
jbe
xchg
sub
daa
jo
outsb
xor
inc
enter
sbb
fs
mov
mov
dec
sub
sahf
data16
mov
fwait
out
pop
mov
sbb
bound
mov
fisttpll
aam
mov
pop
cltd
shrb
adc
xor
mov
icebp
push
xor
xchg
add
popf
push
das
test
mov
inc
cmp
push
push
test
or
sub
inc
jbe
inc
fsubrs
push
cli
dec
popf
dec
aam
jb
sub
xchg
push
movsl
repz
movsl
cmp
dec
push
add
and
cmc
cli
adc
pop
hlt
inc
push
repz
les
movsl
cmp
cmpsb
mov
or
or
inc
pop
mov
and
dec
cmc
pop
test
jecxz
aas
flds
sub
popf
jle
pop
cwtl
push
pop
jmp
stos
hlt
cmc
cmp
add
pusha
cwtl
test
pop
data16
lret
out
rcrl
mov
int
add
cwtl
mov
out
cmp
cli
add
add
arpl
sti
jge
xchg
adc
ljmp
test
sti
pusha
xchg
jecxz
iret
inc
dec
cs
lock
jnp
or
add
jle
mov
shr
fcomi
adc
sbb
jg
aad
jmp
imul
aam
cld
stos
push
test
test
xorb
movsl
test
subb
pusha
lcall
dec
sbb
jb
xchg
out
xchg
mov
inc
xor
xadd
sub
adc
int
lahf
xlat
push
pop
lods
push
pop
les
xorl
daa
xchg
clc
leave
sbb
dec
add
push
sbb
cmp
xchg
lcall
mov
and
push
mov
loope
call
push
ss
dec
jne
repz
mov
cwtl
xchg
pop
in
xor
imul
cli
push
arpl
and
push
cmp
jecxz
pushf
sub
inc
or
jno
movsb
call
aad
adc
jae
jno
inc
stos
shl
push
insb
lea
mov
cmp
inc
adc
jae
sub
std
push
xchg
popa
dec
clc
jne
jmp
mov
mov
stc
aam
repnz
insb
add
repz
pop
cwtl
push
or
cmp
dec
pop
lahf
ret
push
pop
cmp
in
push
pop
sbb
add
mov
jno
repz
out
mov
dec
pop
pop
inc
push
add
mov
mov
push
add
push
and
jge
push
mov
add
sub
outsl
push
xchg
jb
pop
popw
or
or
inc
cmpsb
mov
add
andl
adc
inc
pop
fwait
jg
jbe
inc
popf
adc
sbb
mov
jb
jmp
fldt
fwait
sbb
or
mov
int3
lcall
push
mov
xchg
sub
loop
inc
clc
xlat
scas
lret
or
add
inc
push
adc
sbb
jns
test
push
xchg
push
and
mov
jle
dec
aaa
movsl
jl
insl
rorb
cltd
mov
ljmp
fisttpll
add
enter
and
enter
mov
cltd
sbb
fimuls
cmp
inc
sbb
mov
or
add
mov
jnp
mov
orb
ja
addl
mov
mov
out
pop
cmpsl
shl
sbb
loopne
mov
add
in
outsl
mov
add
shll
call
mov
in
adc
jno
pop
addr16
movsl
call
hlt
ja
xbegin
pushf
ljmp
cmp
js
addb
push
insb
out
cmp
add
lods
jge
push
push
sub
or
ret
pusha
sbb
repz
out
dec
adc
mov
mov
adc
cmc
or
adc
pop
push
fwait
mov
push
and
stos
data16
jg
push
hlt
inc
jae
inc
scas
daa
inc
jb
dec
cmp
popa
popf
data16
xor
xor
jle
arpl
pusha
xor
jae
in
imul
out
inc
iret
jb
les
pusha
xchg
jbe
pop
cmp
mov
mov
xchg
into
xchg
fsubl
jge
dec
movsl
popa
push
clc
mov
movsl
ficoml
cltd
into
pop
adc
orl
outsb
cmp
xchg
cmp
dec
push
inc
adc
pop
jno
test
mov
ja
sub
cmp
jmp
or
add
push
mov
and
or
dec
sbb
aaa
mov
invd
xlat
mov
sbb
jge
das
bound
dec
es
outsl
inc
inc
clc
pop
xchg
aas
xchg
xor
fimull
bound
lock
push
ljmp
xchg
psubq
outsb
popa
out
pop
jns
mov
into
inc
imul
popf
inc
jecxz
inc
inc
pushf
mov
inc
push
shll
mov
xchg
mov
xchg
xor
mov
pop
mov
call
fldl
popf
outsl
jge
stos
in
jmp
packsswb
les
scas
loope
sbbb
out
push
test
test
lds
sub
dec
aas
inc
sub
aaa
mov
insl
int
inc
stos
cmp
out
sahf
or
pop
arpl
pushf
in
inc
sti
cmpsl
mov
aad
cmp
xchg
or
cli
in
adc
cmp
aad
or
daa
repz
add
adc
cmp
mov
js
setnp
ljmp
inc
sbb
enter
inc
lea
push
movlps
sbb
sub
mov
cmp
push
and
jne
cmp
xor
pop
ja
pop
adc
dec
mov
rcll
sti
inc
rorl
cmpsb
daa
incb
fld1
movsl
xlat
adc
cmc
dec
pop
push
stc
insb
and
pop
mov
nop
stc
scas
js
aad
mov
mov
out
in
leave
mov
mov
sbb
cmp
sub
xor
aas
imul
or
push
cmp
add
and
ss
sbb
pop
ds
test
lret
xchg
cli
stc
and
cld
imul
test
dec
addb
daa
mov
imul
addr16
push
dec
jp
pop
pop
jo
add
frstor
jae
dec
mov
sub
push
stos
push
jno
idiv
sub
sbb
enter
or
rorb
les
cmpsl
cwtl
jbe
mov
inc
jg
movsl
lret
mov
xchg
scas
xchg
ss
movsl
loopne
mov
cmp
pop
data16
or
test
jmp
mov
dec
push
stos
mov
and
dec
cmp
pop
jle
out
repnz
call
shll
fnstsw
movsb
fcoms
xchg
pop
and
mov
pop
loopne
cmp
xchg
mov
mov
call
or
idivl
pop
pop
sub
xor
inc
test
hlt
fisttpll
sbb
fmulp
in
xchg
hlt
sub
sbb
mov
xchg
js
pop
xchg
insl
mov
cmpsl
mov
leave
mov
jge
aam
movswl
push
sbb
shll
jge
divb
in
inc
les
pop
ja
mov
lods
fnstsw
cld
jecxz
mov
or
in
push
jmp
jno
out
add
in
mov
repnz
ud0
and
test
sub
or
jp
mov
subl
mov
mov
jns
push
push
repz
push
xor
and
cmp
arpl
shl
je
cwtl
dec
pop
cli
mov
insb
in
ljmp
movsb
cltd
and
out
es
test
stos
mov
int3
push
into
mov
fsubrs
mov
sub
push
dec
inc
std
xor
xchg
test
out
test
lods
sbb
push
les
ret
push
xor
stc
out
inc
push
mov
pop
fsubr
fldl
aam
das
add
orb
divb
push
out
mov
xchg
push
stos
sar
outsl
and
cmpsb
cwtl
loop
xor
push
imul
mov
inc
mov
test
mov
aad
dec
xor
cmc
dec
cmpsl
mov
jne
jo
push
ss
inc
pushf
test
adc
test
jne
pop
dec
aaa
pop
ja
xor
aad
sti
rolb
add
int
mov
and
loop
out
fldenv
out
pop
insl
xchg
push
inc
mov
add
shll
xchg
mov
mov
icebp
mov
hlt
jge
mov
int3
rolb
lea
jg
scas
ror
mov
lock
mov
in
fld
ja
inc
pop
xor
dec
mov
or
or
imul
xchg
dec
out
aad
ds
fdivrp
repz
ret
inc
cmpb
aam
push
idiv
in
jns
cld
hlt
mov
jle
fwait
pop
jmp
lds
mov
adc
in
xchg
pop
pop
scas
pop
add
dec
inc
jmp
fucom
mov
sti
adc
add
fnstcw
pop
push
pop
scas
mov
outsb
or
or
aam
mov
lea
mov
cmp
push
dec
aas
mov
loope
ficomps
cmpsb
fisttps
bound
push
mov
aam
aam
pop
cwtl
xor
xchg
push
mov
dec
add
idivl
jecxz
stos
lea
inc
jne
daa
mov
out
and
cld
mov
ret
dec
sub
loopne
and
dec
mov
and
pop
movsb
mov
dec
mov
inc
loop
dec
inc
lods
cld
popa
mov
in
int
loop
call
adc
xchg
and
xchg
pop
insb
scas
cmp
lea
push
ret
inc
outsl
and
test
inc
mov
int
test
cwtl
ret
xor
into
jne
outsb
dec
imul
pushf
imul
outsl
lods
mov
dec
adc
je
sti
or
jbe
test
icebp
jmp
inc
jno
pop
roll
outsb
enter
fisttps
adc
xchg
cmp
orl
orb
bound
aaa
dec
mov
mul
adc
cmpsl
cmp
cmp
aam
scas
xchg
mov
pop
dec
push
loopne
mov
imul
repz
sbb
xchg
imul
aam
mov
add
je
lcall
sbb
lods
repz
movsb
jnp
sbb
jne
in
ror
xlat
add
gs
ret
add
insl
adcl
xor
mov
push
ret
or
ficoms
push
and
jne,pt
pop
add
jne
mov
sub
push
sub
mov
ss
inc
push
mov
ss
pop
aaa
or
pop
sub
in
lock
add
vshufps
inc
loopne
lahf
dec
es
pop
out
nop
inc
or
fucomp
aaa
mov
loop
dec
ds
lock
mov
mov
je
xchg
js
clc
test
pop
xchg
xorl
fnstsw
mov
fdivrs
cld
push
add
lcall
cwtl
and
fwait
mov
mov
pop
push
inc
test
neg
sar
mov
ja
fwait
mov
out
xor
and
leave
jmp
jne
push
lret
mov
push
jns
mov
fpatan
pop
pop
std
aas
jge
dec
dec
xchg
aad
sub
pop
les
push
jnp
and
sub
ljmp
loop
jnp
mov
or
jmp
sbb
cmp
sbb
dec
xor
cld
sub
jg
mull
test
add
hlt
loopne
in
xor
das
clc
clc
decl
iret
mov
jno
jns
add
loop
fwait
adc
push
shr
nop
mov
xor
hlt
ret
loop
ja
jp
xor
cmp
subl
cmc
les
mov
sbb
in
fsts
js
sahf
xor
out
mov
repz
notl
jne
xchg
int3
add
std
out
bound
jno
cmp
jnp
jne
inc
cmpsb
scas
cld
xchg
aas
or
rorl
ljmp
loop
adc
mov
sti
inc
push
xor
movsb
inc
bound
xchg
and
mov
jg
xchg
stos
push
cmp
movsb
xor
es
dec
repnz
and
in
stos
xor
testb
pusha
dec
xor
ja
xorl
sbb
ret
fstps
mov
mov
sbb
pop
cmpb
jne
add
lret
lds
mov
leave
stc
stos
mov
dec
mov
mov
testl
addr16
insl
test
adc
roll
or
imul
adc
and
sti
jne
les
dec
cli
mov
data16
pushf
scas
loop
sub
jo
push
dec
cmp
xor
int3
lods
sub
out
pop
jle
ret
popf
icebp
fists
pop
jmp
push
or
push
mov
nop
cmpsl
add
mov
push
add
dec
push
ss
push
mov
push
ljmp
cmp
xchg
repnz
insb
out
stc
mov
out
clc
push
and
insl
adc
and
inc
sahf
stos
shl
clc
aaa
mov
clc
adc
xor
jge
lods
pop
cs
xchg
mov
mov
js
jg
adc
or
bound
cmp
into
testl
mov
jmp
pop
mov
inc
adc
data16
jl
mov
push
cmp
xchg
mov
push
or
insl
ja
inc
push
ror
push
jno
xchg
pop
xor
xchg
ja
mov
imul
scas
cmp
mov
lahf
adc
or
bound
inc
std
or
icebp
add
in
xchg
lcall
jo
and
out
popf
cli
pusha
in
lods
mov
subl
movsb
sub
mov
outsw
imul
jnp
and
popl
cmp
mov
imul
inc
xor
fwait
mov
mov
cmc
insb
movsl
sub
test
add
in
sahf
test
mov
cs
lock
sub
mov
fwait
xor
stc
push
jle
and
aaa
xor
mov
jne
jb
lret
sub
ror
fldcw
aaa
inc
mov
jno
aas
int3
add
fidivl
ret
int3
sbbb
jns
sbb
mov
pop
xor
push
je
sti
ret
mov
movsb
sub
inc
shll
push
sub
insl
cmp
clc
fnstsw
pop
and
lahf
adc
inc
xchg
xchg
pop
pop
js
adc
jg
popa
sbb
pop
mov
cmp
jno
cmc
fistl
mov
sbb
dec
leave
jl
ss
lea
pop
dec
fiaddl
js
xchg
mov
mul
lcall
and
xchg
ror
insb
push
mov
add
pop
aaa
fldl2t
dec
mov
lods
jb
add
in
nop
push
and
jg
imul
xor
out
mov
movsb
dec
mov
loope
ja
out
cs
mov
adc
or
pop
pop
or
mov
mov
pushl
jge
and
inc
pop
push
scas
push
mov
cmp
and
cmc
ljmp
shrl
inc
or
icebp
les
dec
out
loop
or
pop
inc
push
jle
testb
repz
mov
jg
loop
cmpsl
sahf
lahf
out
adc
call
popa
loope
pop
cmp
fucomi
mov
lret
cld
rolb
in
adc
push
xchg
xchg
sbb
mov
loopne
nopl
lahf
push
cwtl
cmp
fs
mov
pop
test
jl
mov
mov
lods
popa
ss
enter
jne
aad
rclb
jnp
dec
int
data16
shlb
cmpsl
push
pop
test
pop
and
or
xchg
aaa
scas
daa
ret
shrb
pop
xchg
mov
insb
push
aad
lret
les
in
add
sbb
loope
cmp
sbb
ds
and
insl
jge
pop
roll
cmp
jl
fsubp
fstpl
cmc
add
test
mov
inc
jmp
xchg
xchg
push
in
or
mov
neg
fwait
sbb
fs
mov
shlb
jg
cmc
lcall
push
sub
ret
test
jnp
lock
sarl
mov
fistl
or
pop
jbe
lods
or
test
and
xchg
movsl
out
jmp
jno
xchg
xlat
arpl
xchg
cs
mull
adc
call
mov
repz
pop
movsb
or
ss
mov
cs
fistl
mov
pop
je
pop
and
testl
movsb
and
lcall
xor
in
mov
sub
ljmp
and
out
fwait
cs
shll
push
sbb
dec
js
mov
in
shrb
ret
mov
test
push
lds
lods
inc
sub
mov
mov
daa
dec
jl
imul
hlt
insl
jo
push
dec
or
mov
xchg
das
cltd
repnz
test
mov
cmc
jb
adc
xchg
sbb
cwtl
cmc
cmpsb
jl
cmp
fnstsw
push
outsb
inc
cmp
push
je
lcall
xchg
adc
cmpsl
clc
sub
xchg
stc
xlat
xlat
cmp
or
rorw
fdiv
fcmovnbe
jne
mov
or
mov
or
scas
push
add
add
dec
cmpsb
adc
insb
cmp
push
cmp
pop
inc
dec
xorl
imul
outsb
orl
push
sub
in
push
mov
inc
mov
push
movsl
insb
pop
flds
insl
cmc
dec
in
pop
int
jmp
into
cld
mov
xchg
sub
cmpl
mov
pop
dec
sahf
nop
aaa
test
pusha
mov
data16
adc
mov
push
outsl
cmp
mul
les
mov
sti
in
and
add
mov
jbe
cmp
adc
icebp
sub
adc
mov
inc
dec
jno
sbbb
dec
ds
cmp
pop
xchg
inc
jae
mov
xor
das
inc
ss
test
jne
je
dec
adc
mov
xor
ss
lahf
xor
mov
repnz
enter
xchg
mov
mov
decl
divl
sub
xor
scas
mov
imul
cs
pop
lock
call
pop
iret
adc
add
in
mov
testb
mov
xorb
lods
add
ds
adc
addb
call
inc
sub
jo
sbb
out
cmp
dec
int
clc
daa
adc
cmp
mov
jecxz
jle
dec
xchg
jg
jge
jno
pop
sbb
js
jge
mov
dec
jo
sbb
xchg
and
mov
inc
in
push
sub
leave
lods
mov
gs
jp
mov
out
jnp
jmp
addr16
pop
jno
xor
bound
lods
push
das
push
xor
lea
inc
stos
mov
xchg
and
mov
inc
mov
insb
rorw
mov
mov
std
fbld
imull
sbb
cmp
jg
dec
xor
mov
xchg
cs
mov
mov
xor
ret
cmp
stos
fbld
xor
aad
lret
shrb
into
inc
out
pop
mov
pop
push
push
sbb
stc
or
inc
andl
fnstsw
or
mov
movsl
cmp
imul
outsl
adc
ret
shlb
or
clc
jae
jne
daa
fs
xor
xor
test
or
fyl2xp1
into
inc
lods
add
out
mov
push
lfs
inc
jmp
mov
sar
sub
gs
lret
inc
mov
shrb
mov
xchg
sbb
ret
mov
daa
ja
lahf
jnp
mov
out
mov
scas
push
fcomps
int3
jmp
adc
mov
jns
sub
jmp
adc
cmp
mov
cli
cmp
mov
push
jg
aaa
jb
adc
imul
fcomps
hlt
push
sbb
push
test
imulb
out
sbb
aas
pop
add
imul
mov
loope
pushf
out
sub
jno
mov
inc
mov
cmp
xor
fldenv
rolb
xor
cmp
push
add
sub
dec
stc
cld
add
mov
cmp
data16
add
inc
fs
addb
mov
pushf
sub
movsl
jp
cmp
cmove
add
sub
xchg
xchg
jmp
hlt
sbb
in
or
rcl
mov
lea
sub
xchg
std
clc
sbb
and
js
lcall
sbb
push
inc
and
push
fsubl
mov
test
inc
out
outsl
out
adc
pop
push
pop
cwtl
inc
mov
int3
pop
and
pusha
push
mov
movsb
or
jmp
scas
orb
xor
and
mov
lret
add
repz
sbb
pop
cli
arpl
arpl
fsubrs
imul
mov
xor
or
lods
lea
push
dec
push
pushf
mov
js
roll
sub
xchg
xor
mov
pop
jg
add
or
lock
xchg
dec
test
outsl
cli
mov
test
inc
into
xchg
lcall
rolb
cmp
shlb
mov
lahf
adc
lea
lods
sahf
aas
jo
call
sub
lods
jo
aas
pusha
out
push
out
push
pop
mov
inc
aas
mov
fsubrl
mov
mov
or
jmp
andb
xor
add
out
sbb
std
pusha
enter
pop
adc
call
push
pop
dec
test
mov
gs
in
add
out
imul
push
out
cli
jbe
push
cld
bound
daa
aam
mov
inc
sub
push
or
in
into
sbb
cmp
stc
adc
cmp
jge
addr16
push
cmp
inc
mov
pop
xor
add
roll
xchg
bound
lock
pop
inc
and
sub
add
pop
js
test
pop
movsb
xchg
cmp
pop
inc
pop
xchg
push
pop
mov
sbb
fucomp
mov
bound
cs
ds
lods
jo
add
outsb
mov
movsb
leave
nop
pop
sarl
data16
xor
cmp
lret
xchg
jne
rcrb
ja
jne
cmp
arpl
es
dec
dec
cs
shl
adc
add
and
push
pop
inc
inc
or
pop
sbb
loope
repnz
out
push
jo
cmp
push
cmp
ljmp
sub
insb
sbb
or
mov
xchg
rclb
data16
inc
cmpsl
push
adc
mov
dec
es
hlt
std
ds
lcall
enter
inc
adc
movsl
mov
insl
push
loop
out
mov
xchg
fdivr
pop
mov
sub
push
movsb
stc
cmp
cmpsb
and
push
adc
jb
mov
push
arpl
pop
jnp
mov
mov
cmpb
sbb
lcall
inc
cmp
adc
lds
in
lahf
in
repnz
xchg
int
shll
jb
jne
icebp
loope
out
pop
mov
pushf
jl
mov
mov
adc
repnz
xchg
inc
mov
lcall
adcb
mov
and
frstor
jle
mov
movsl
addl
andl
into
jo
enter
aas
dec
imul
les
mov
lcall
pop
shl
outsb
jge
push
jl
test
and
xchg
fiaddl
pushf
lods
xchg
arpl
out
call
ret
mov
cmp
mov
jae
jp
repnz
xchg
mov
or
sub
xchg
ror
push
mov
pop
xchg
inc
arpl
xor
aaa
inc
je
movsb
and
mov
stos
or
out
jo
nop
inc
addb
outsl
js
push
add
arpl
adc
pop
xchg
inc
or
sbb
pusha
fiadds
push
mov
movsl
pop
cmpsb
add
add
popf
xor
xor
mov
jle
xchg
and
gs
mov
unpcklps
fisttpll
mov
sub
inc
iret
ljmp
sub
pop
mov
mov
jg
xlat
push
mov
call
push
xchg
xchg
loopne
cmp
fcompl
int3
sub
test
aas
inc
rcrb
jb
pop
outsl
cmp
es
xor
addr16
mov
xchg
fsubl
pop
push
jle
sbb
in
and
sahf
jbe
or
cs
pop
dec
cmpb
loope
jmp
shll
fwait
xchg
add
and
in
fsubl
pop
dec
sub
scas
outsb
xchg
cmp
and
lds
lds
xor
adc
adc
push
popa
cmc
mov
push
jbe
incl
stos
cmpl
cs
dec
aas
and
add
jle
dec
mov
je
xor
insb
add
or
stos
pop
adc
iret
ficoms
adc
mov
adc
pop
cmp
leave
sarb
ficomps
inc
sub
pop
faddl
cmp
xor
dec
jno
repz
divl
data16
test
add
imul
push
scas
stos
lahf
enter
pop
pop
pop
outsb
sar
cmp
subb
andb
imul
cmp
fmull
ss
sub
and
xchg
aaa
and
test
ficoml
adc
test
std
sub
mov
in
sbb
cmp
cwtl
flds
inc
fisttpl
clc
divl
adc
notb
add
andb
or
adc
mov
orb
insb
xchg
or
and
mov
inc
out
les
xchg
ja
mov
mov
insl
pop
out
add
out
out
mov
mov
repnz
push
shl
sub
and
cmpsb
lret
or
lahf
mov
mov
mov
cmp
orb
sub
inc
daa
cwtl
pop
outsb
bswap
popf
inc
xor
sbb
pop
sub
jo
xor
out
outsb
or
ds
add
push
push
shr
jl
inc
jl
lret
push
push
rorb
sub
mov
or
aad
jo
outsb
iret
nop
push
or
push
and
xchg
rol
shr
lods
sahf
cs
jle
arpl
adcl
push
in
jecxz
jne
inc
xchg
je
inc
inc
out
jns
sub
pop
dec
cmp
popf
adc
sbb
sbb
add
ja
cmp
pop
aam
cmp
push
mov
insb
add
subl
mov
inc
popa
jne
inc
repnz
jae
push
mov
lcall
sub
cmp
scas
outsl
lods
popl
ja
dec
xchg
sbb
les
xor
or
lahf
stos
xchg
js
push
movsl
jb
sub
imul
ret
pop
inc
addr16
or
movsl
cmc
enter
mov
or
gs
sbb
xor
mov
jae
js
in
in
xchg
add
pushf
test
mov
mov
jg
into
mov
iret
push
stos
cmp
in
push
mov
mov
cmp
sub
lods
fisubrs
jb
push
mov
dec
sub
out
icebp
mov
sti
or
ja
repz
stc
or
jmp
imul
inc
push
divb
jg
mov
int3
push
fwait
jmp
sub
xchg
arpl
cmp
das
sti
push
or
and
mov
cmp
pop
es
inc
cs
into
mov
inc
fninit
aaa
inc
jg
lahf
mov
in
sub
push
movsb
sbb
outsl
sahf
mov
pop
cwtl
cmc
fdecstp
or
push
sbb
shlb
pop
sbb
rcr
xchg
inc
jno
into
jno
mov
adc
pop
xchg
addr16
xor
xor
mov
lods
xchg
adc
xchg
lock
and
arpl
sbb
add
in
pop
ljmp
jle
mov
jae
add
xchg
scas
ja
je
call
jecxz
xchg
dec
lods
jl
mov
sub
cmp
loopne
cmp
push
xchg
out
aas
or
sbb
leave
dec
imul
and
cmp
je
aam
push
data16
mov
dec
popf
push
mov
fadds
and
sbb
jge
add
movsb
push
aam
dec
pop
aad
call
adc
fnstenv
sub
cmpsb
shlb
gs
mov
pop
fistps
fs
add
scas
sbb
pop
outsb
jecxz
test
hlt
mov
jb
fldcw
inc
mov
cs
pushf
jp
fstpl
mov
pop
sbb
jecxz
pop
stos
xchg
test
mov
iret
pop
and
inc
ss
jp
cmp
out
jmp
cld
inc
mov
pop
cmp
jbe
xor
add
pushf
mov
cli
mov
fmul
ret
xchg
fistpl
or
or
and
cmp
mov
out
dec
sub
loop
or
add
sbb
push
scas
xor
jg,pn
cld
movsb
mov
or
jne,pn
mov
rcrb
pop
cmp
iret
scas
not
das
mov
dec
cs
daa
sahf
inc
jecxz
and
aam
mov
popa
sbb
push
inc
call
sbb
iret
cs
xor
and
cmp
sub
test
push
mov
pop
ret
pop
xor
and
adc
lcall
std
inc
jg
movsb
daa
mov
sub
inc
xor
lahf
or
ds
jl
repnz
insl
xchg
inc
stos
sarb
xchg
xchg
icebp
das
ja
mov
popa
and
xlat
sub
lahf
stos
sbb
out
mov
test
sbb
clc
adc
mov
push
ss
and
nop
or
out
or
std
ljmp
lret
mov
jle
sbb
push
pop
or
mov
mov
addb
int3
mov
movsl
outsl
lods
cmpsl
mov
out
vpaddsw
pop
loop
out
stos
shlb
dec
fstps
push
push
adc
cmp
xchg
sub
xchg
pop
scas
pcmpgtw
lret
ja
fisttps
test
mov
movsl
xor
cmp
mov
jl
dec
dec
dec
mov
sbb
test
xchg
pop
insl
add
mov
push
cmpsb
data16
sbb
cmp
movsb
lea
mov
mov
dec
es
pop
pop
jb
ror
fcmove
sub
popf
imul
lret
scas
lods
pop
ja
arpl
roll
sbb
pop
sbbb
dec
jl
and
fisubrs
add
push
repnz
jmp
dec
mov
pop
adc
or
loop
scas
in
fisubrs
out
popa
ds
movsb
out
pop
daa
div
jns
jb
push
mov
pop
rcrb
arpl
and
ss
stos
cmp
cmpsb
xor
adc
mov
push
add
aas
addr16
pop
push
mov
xor
int3
es
lods
sub
hlt
test
jmp
xchg
sti
push
mov
lcall
or
add
test
ljmp
cwtl
xor
pop
dec
sub
pop
roll
arpl
dec
mov
sub
mov
jl
rorl
mov
adc
mov
mov
sahf
mov
xchg
sub
mov
test
mov
mov
lcall
cltd
push
mov
aaa
xor
add
and
div
mov
addr16
pop
xchg
cmp
pop
xor
mulb
cmpsl
lcall
push
loop
rorb
push
ds
adc
xor
adc
mov
and
loop
push
pop
dec
js
push
sbb
outsl
sub
xchg
nop
jp
pop
neg
xor
ss
ja
mul
hlt
fisubl
xlat
jnp
pop
fs
sub
flds
into
jb
fstl
push
outsl
fwait
jne
mov
push
add
loop
ljmp
push
loopne
andb
stos
jp
fwait
in
bound
mov
xchg
repnz
push
inc
bound
mov
jbe
jg
in
enter
daa
or
add
es
sub
xchg
pop
addr16
cmpb
inc
dec
jb
xor
cmp
pop
sub
mov
decw
jno
mov
ja
xchg
repnz
sub
inc
mov
lahf
mov
push
mov
shl
outsb
sub
jmp
out
fwait
dec
sub
pop
xor
rclb
and
adc
fsubs
cli
cs
inc
push
hlt
jle
cmpsb
jno
push
shll
dec
and
push
bound
jle
aas
aad
cld
sbb
mov
sbb
dec
stos
sbb
movsl
xor
test
add
adc
inc
mov
jg
cmp
int3
cmpsb
mov
jmp
sub
fcom
xchg
xlat
sbb
loop
cmp
aam
lods
cmp
pushf
pop
lods
les
stc
jp
pop
pop
addl
shl
rcll
jne
mov
cmpsl
sub
fiadds
xor
out
lret
adc
jp
mov
imul
in
or
xor
inc
fcmovne
push
push
lahf
test
mov
into
xchg
and
stos
fbld
cmp
stos
mov
jecxz
cli
cmp
push
lret
xor
push
test
and
es
cmp
and
jns
loopne
idiv
pop
mov
ss
vrcpss
sahf
xchg
push
dec
inc
sub
inc
imul
pop
cs
pushf
sub
jb
cs
push
xor
aam
jb
xor
mov
cmpb
cmp
fcomp
jbe
enter
sbb
or
test
sub
rclb
push
push
push
push
and
xlat
xchg
cs
fsubrs
mov
cmp
out
loopne
leave
outsb
xchg
cwtl
fbstp
inc
ret
hlt
outsl
sub
cmp
inc
xchg
in
adc
pusha
fcom
jo
dec
jno
adc
dec
dec
jns
leave
push
addl
mov
shll
lods
xchg
dec
xor
and
neg
das
add
jle
mov
stos
inc
xor
push
pop
mov
and
jb
adc
sbbl
inc
pushf
mov
mov
scas
ret
leave
mov
inc
das
roll
addb
aas
jl
cmpsb
cmpsb
inc
fstpl
mov
or
faddp
adc
push
xor
push
pop
adc
mov
sub
cmc
or
cmp
adc
xchg
iret
sub
cmp
pop
dec
pop
or
hlt
push
or
jne
hlt
push
std
ja
orb
mov
jb
orl
insb
mov
aam
dec
xor
jo
adc
cmp
lea
dec
dec
dec
xchg
xlat
fidivs
rcrb
imul
movsb
push
cld
fldt
pop
inc
cltd
push
cli
xchg
cmp
in
fnsetpm(287
dec
nop
test
mov
dec
imul
mov
jp
jbe
mov
data16
jmp
mov
arpl
ja
shl
stos
add
icebp
outsl
rcrb
push
xchg
iret
loopne
aas
stos
mov
andb
mov
gs
loopne
es
dec
out
mov
orb
fprem
lret
pop
inc
or
add
xor
push
push
stos
or
jbe
or
and
mov
add
mov
sbb
int3
loop
movl
lock
nop
push
add
jae
and
jle
push
pop
pusha
mov
nop
push
and
icebp
pop
mov
mov
lcall
out
cmp
ret
jns
test
imul
pop
icebp
add
jbe
add
jp
insl
test
call
inc
mov
aas
cmp
pop
notb
out
xor
xlat
das
xchg
addl
xor
adcl
sbb
dec
outsl
lahf
mov
sub
test
pop
push
sar
jae
cs
stc
jb
xor
sarb
adc
sbb
lret
inc
in
xor
out
dec
ja
jbe
cmp
nop
fistpl
out
push
inc
jnp
or
jmp
adc
push
pop
aam
inc
fnsave
jecxz
ret
and
pop
inc
cmpsl
into
out
test
gs
push
and
jge
enter
stc
cmp
stc
cld
adc
imul
cwtl
loopne
dec
fisubs
mov
jne
mov
mov
stc
pop
nop
jg
aas
fldenv
push
jbe
adcl
leave
shrl
and
stc
add
ja
in
out
jbe
mov
daa
stos
sets
rolb
push
or
xchg
push
in
pop
cmp
shl
sub
test
adc
cmp
add
jmp
add
add
in
mov
shrl
outsl
add
fadds
xchg
dec
inc
push
movsl
mov
push
sub
push
sub
add
jns
mov
clc
pop
sahf
mov
mov
dec
mov
mov
cwtl
sti
or
sbb
testl
out
bound
into
push
inc
sbb
push
adc
insl
repz
jg
cli
js
xchg
cld
addl
sub
sub
jno
enter
rcll
mov
leave
mov
call
jp
rcr
lret
sbb
nop
pop
cmp
js
mov
rcll
sti
push
lret
push
jmp
mov
mov
adc
ja
cmp
jecxz
push
lock
fiadds
xchg
std
in
add
inc
imul
rcll
inc
test
iret
mov
xchg
repnz
mov
sub
pop
xchg
jbe
and
mov
ja
std
cmpsb
ret
rcl
sub
lahf
dec
outsl
xor
lods
or
clc
xchg
adcb
dec
inc
sub
cmp
addr16
pop
insl
sub
ret
mov
sti
repz
mov
add
adc
adc
fwait
daa
fwait
jo
sbb
movsb
inc
out
je
sub
add
gs
mov
cwtl
push
sbb
loopne
hlt
push
loope
lea
jg
mov
subl
pop
scas
arpl
mulb
cmp
mov
or
sub
sarb
adc
push
push
in
sub
or
in
je
movsb
push
cmp
inc
je
pushf
mov
mov
pop
pop
cmp
xchg
or
pop
subl
mul
mov
shrl
push
and
dec
aam
fiaddl
adcl
imul
mov
and
sarl
cltd
push
pop
cmpl
jl
out
pop
pop
xor
aaa
outsl
adc
push
pop
pop
rcll
mov
lds
cmc
and
push
sub
or
ret
xlat
icebp
add
lret
mov
fstpt
nop
sbb
push
mov
or
push
stos
pop
or
cmp
insl
mov
cmpsb
jo
scas
xchg
sub
decl
out
sub
pop
pop
je
xchg
leave
out
jns
adc
outsb
push
add
and
mov
sub
mov
clc
dec
shrb
mov
sub
xchg
cli
jno
das
xchg
jns
xchg
out
test
dec
popf
out
loope
pop
adc
pop
hlt
and
lods
aam
jl
dec
xlat
mull
scas
adc
jb
mov
imul
ja
jmp
jle
orl
mov
pop
popf
ds
rolb
orb
jecxz
adc
xchg
lret
sub
cmp
push
pop
repz
stc
ds
pop
adc
addr16
mov
dec
mov
push
xchg
xor
adc
out
pop
xor
cmp
ret
mov
adc
ret
pushf
icebp
outsb
xlat
sbb
decl
jnp
rcl
shrb
jo
pushf
add
test
inc
imul
inc
ss
cli
jnp
and
mov
adc
rcrb
shlb
insl
jmp
movsl
inc
enter
pavgb
notb
sbb
mov
mov
jge
lahf
es
dec
mov
sub
jb
mov
sub
scas
fnsave
cmpsb
movsl
jno
pop
gs
dec
test
cmp
fdivrs
cli
adc
xchg
cmpsl
cmp
scas
jecxz
aad
lcall
jp
mov
pushf
pop
add
or
inc
ljmp
mov
xchg
and
enter
sti
xchg
mov
mov
dec
cmp
cmp
push
cmp
add
test
in
imul
repnz
add
testb
and
pop
sahf
jns
jecxz
jge
jbe
sbb
ffree
push
in
scas
or
dec
sbb
ljmp
sahf
aad
jecxz
incb
lret
xchg
mov
ds
out
adc
or
xor
mov
jecxz
inc
insb
fnstenv
into
jns
cmc
mov
sbbl
notb
sub
fdivrl
pop
js
sub
ja
fwait
add
mov
pop
xchg
test
cmp
dec
ficoml
adc
jp
mov
jmp
test
mov
or
ljmp
jno
sbb
addb
pop
popa
lea
aam
sub
imul
mov
in
xchg
jb
mov
aas
mov
cli
push
sub
xlat
pusha
cltd
fnstsw
add
jg
mov
push
imul
jle
ja
stos
mov
stos
push
std
or
movsb
outsl
xor
push
or
mov
repz
iret
cmc
iret
fcmovb
negl
in
push
pop
sarb
and
fists
adc
mov
fisttpl
std
lahf
es
mov
fdivrs
sub
add
jge
dec
or
xor
jge
jmp
xchg
imul
mov
je
push
sbb
sbb
jnp
cmpl
mov
je
movsb
repz
je
ret
push
cmp
sbb
shl
fcomp
adc
add
fdivr
and
jp
cmp
jnp
in
in
or
or
dec
add
jp
loopne
fnstenv
cmpsb
or
dec
mov
pop
fwait
add
xchg
fstpt
ds
popa
adc
dec
ror
or
mov
mov
mov
pop
imul
cmp
jmp
cmp
in
jg
jp
sbb
jecxz
push
mov
cmc
outsl
ret
push
test
xor
dec
sub
mov
add
mov
in
cmp
or
jmp
inc
icebp
add
sbb
subb
jl
inc
in
push
dec
inc
push
push
cwtl
das
in
cmpsl
sub
mov
jg
aaa
jns
add
push
cli
add
and
rcrl
es
dec
xchg
jmp
push
sbb
les
lret
insl
xchg
push
pusha
and
test
sbb
aam
js
xor
int3
test
popf
jmp
adc
icebp
or
data16
cmp
cmpsl
inc
test
in
xor
inc
xchg
in
bound
or
scas
mov
jnp
insl
pop
aaa
mov
jbe
and
push
dec
fldenv
mov
xchg
mov
movsl
scas
jmp
test
adc
enter
xchg
sbb
push
ficoms
pop
in
pop
jbe
icebp
sbb
adc
fbstp
sbb
fwait
mov
or
fdivs
inc
scas
sub
dec
je
lock
daa
arpl
sub
test
add
inc
jne
or
sbb
sbb
add
jb
test
push
mov
fisttpll
push
mov
stos
call
sti
fwait
jle
push
aaa
mov
xchg
fisubrl
pop
fs
inc
or
push
inc
jl
inc
pop
lods
and
rcll
and
ljmp
shrl
push
sbb
push
int
jl
inc
cmpb
push
sub
mov
fsin
and
jnp
addps
mov
int3
sbb
inc
test
mov
cwtl
and
jge
and
adc
adc
push
cmp
test
or
outsl
out
lret
adc
cwtl
xchg
pop
sub
aas
sbb
movsl
cmpb
test
ret
ds
mov
and
mov
add
icebp
fists
xchg
mov
mov
mov
aas
sbb
insl
push
rcrb
in
fcmovnb
push
test
lock
dec
xchg
jno
sarb
cmp
aaa
dec
add
inc
test
arpl
iret
adc
mov
mov
leave
mov
adc
add
std
cmp
push
jnp
xor
inc
push
mov
mov
sbb
test
roll
aad
arpl
xor
lds
sub
leave
hlt
and
in
outsl
sub
mov
xor
jb
rcll
mov
test
mov
sbb
push
xchg
fiadds
cmp
bnd
cld
cmp
es
mov
jne
mov
sbb
jecxz
adc
sub
fcoml
insl
mov
js
lret
stos
pop
ds
shlb
push
mov
mov
mov
cmp
sahf
xor
xlat
pusha
or
push
ret
xchg
lcall
push
mov
xor
mov
shll
cmpsl
ret
repz
icebp
movsb
or
ret
fiadds
cmp
mov
loope
xchg
leave
pop
mov
iret
ja
mov
arpl
pop
ficoml
or
jle
in
push
fisubrs
xor
dec
xchg
mov
mov
mov
arpl
xlat
jae
gs
enter
icebp
xchg
in
xor
data16
int
stc
sbbb
lods
ret
movsl
rorb
add
inc
fadd
or
repnz
mov
inc
repnz
jns
sub
orb
dec
inc
dec
xor
ds
adc
dec
addr16
push
andb
or
shl
mov
add
inc
mov
loop
mov
jl
xor
pusha
and
lahf
sub
add
mov
mov
adc
or
xor
lock
add
ljmp
pop
ljmp
and
cmp
or
dec
xlat
mov
xor
out
iret
adc
sahf
mov
xor
xchg
test
fdivrl
xchg
inc
shrb
imul
int3
inc
out
jbe
mov
rcll
push
lds
ss
dec
ss
lret
or
sub
rcl
lock
dec
cmp
ret
adc
std
push
push
mov
xor
sbb
inc
pop
fmull
push
jg
add
jno
lret
fs
and
xor
push
fwait
outsl
xor
sub
fs
adc
cmp
xchg
sbb
push
xor
sub
cmp
push
and
pop
adc
xor
insb
imul
mov
popf
pusha
jl
mov
jecxz
mov
arpl
out
dec
adc
xor
add
rclb
sbb
inc
rorl
adc
xchg
fmul
jae
push
pmullw
cmp
cld
inc
mov
inc
ror
out
mov
mov
and
inc
into
adc
adc
and
pop
sub
dec
es
jge
sbb
xor
adc
ss
xchg
out
push
sub
mov
gs
sub
loopne
sub
call
mov
push
das
cmovae
jge
push
jbe
mov
jnp
movsb
push
add
shrl
xchg
lods
xchg
pop
cmp
pop
xchg
jbe
icebp
icebp
inc
fcom
mov
push
jnp
sub
int3
add
out
in
pop
and
adc
fs
loop
rcrl
fildll
fildll
daa
push
xchg
and
mov
out
ret
popa
in
sbb
data16
std
and
inc
jo
or
stos
inc
stos
out
iret
pop
in
fidivl
adc
mov
jbe
icebp
adc
pop
stos
sbbl
jo
lds
and
addl
out
cmc
outsl
xor
leave
adc
sbb
pop
stos
shlb
pop
and
into
notl
out
and
pusha
lahf
nop
in
cmp
out
fcoml
mov
in
ret
inc
dec
mov
pusha
out
mov
ja
jg
push
mov
addr16
fisubl
fsts
jno
inc
mul
in
out
shr
cli
mov
sub
mov
stos
mov
lea
test
dec
jnp
insl
lret
sbb
mulb
sub
xchg
lods
movb
and
cmp
dec
inc
sbb
dec
andl
adc
fisubrl
add
js
add
rcrb
mov
xchg
sub
imul
mov
test
xchg
mov
jmp
pop
daa
ja
loopne
popw
mov
mov
data16
adc
xchg
faddl
jae
rolb
pop
lock
sti
das
fsubrs
scas
les
fs
push
dec
out
ss
fmuls
push
shll
sub
xchg
dec
js
sarb
pop
jo
scas
push
push
push
call
mov
xchg
addb
sbb
or
stos
inc
xlat
cmpsb
lahf
lret
rcpps
mov
stos
cs
mov
idivb
inc
xchg
push
inc
mov
shlb
mov
add
mov
loope
adc
out
aaa
out
jmp
pop
out
lret
std
xor
push
in
ficompl
adc
or
lahf
cmpsb
insb
insl
pop
xchg
mov
addr16
jnp
xor
cmp
faddp
dec
pop
dec
imul
cmp
mov
cmc
cmp
mov
addr16
mov
adc
adc
jno
fwait
lret
pop
mov
sbb
daa
mov
inc
mov
cmc
jns
mov
icebp
jge
push
mov
xchg
popf
cmp
adc
sahf
ret
pop
dec
and
jecxz
mov
dec
loopne
orb
gs
pop
pusha
leave
push
lds
in
and
cmpb
dec
divb
sub
stos
je
sbb
dec
in
mov
add
test
lods
addl
stos
je
sub
stc
les
mov
out
ss
xor
outsb
cmp
aad
stos
inc
outsb
add
dec
sti
mov
push
jno
push
stc
into
icebp
lea
mov
sti
imul
add
xlat
xlat
outsb
inc
and
cmp
mov
sub
pop
fwait
jecxz
icebp
movsl
pop
cmp
jecxz
std
cld
out
test
call
jb
sbb
scas
push
sub
fmull
je
fwait
mov
jns
ds
lock
mov
xor
mov
or
imul
sbb
fs
sub
imul
xor
cmpsb
mov
mov
mov
imul
data16
mov
inc
ret
out
in
xor
aas
mov
in
mov
xchg
in
shlb
dec
sub
enter
jge
inc
ja
shlb
push
pop
sub
mov
loopne
mov
push
iret
shrb
fdiv
clc
and
mov
mov
ljmp
daa
xor
enter
into
cwtl
pop
fcmovnbe
pop
ljmp
rcrl
mov
xchg
popa
sahf
mov
jo
pop
cmpb
test
divl
pop
das
js
pushf
in
sarl
pop
insb
aas
sar
maskmovq
and
pop
add
sub
bound
sub
aam
stos
and
adc
xchg
mov
fdivr
cmp
repz
and
jle
cmpb
adc
adc
xor
icebp
ret
outsb
mov
stc
jae
sti
test
dec
mov
sub
pop
mov
dec
xor
inc
dec
movups
add
xchg
into
scas
push
popa
stos
lret
cld
cwtl
call
dec
mov
lret
iret
sub
shrl
mov
cmc
jo
or
adc
mov
jb
sahf
pop
popa
mov
rclb
aaa
cltd
xchg
je
orb
ret
lods
cmp
lcall
xorl
pop
sbb
fdivrs
mov
or
mov
and
js
inc
push
mov
bound
sub
stos
lcall
mov
adc
push
bound
popf
int3
push
sbb
roll
sti
ja
push
jmp
and
mov
pop
cmp
or
mov
mov
pop
sbb
cmp
aaa
fs
imul
shl
dec
mov
je
sbb
mov
fcoms
sub
cwtl
stos
push
aaa
cmp
jnp
aam
dec
sti
test
subb
xorl
rcr
insl
mov
dec
mov
xchg
ficoml
in
jae
adc
or
ja
imulb
popf
clc
mov
cltd
adc
cltd
mov
lea
adc
xchg
jnp
and
dec
xor
push
arpl
inc
sbb
popa
data16
jmp
out
lds
jg
stos
xchg
movsl
gs
mov
dec
mov
in
paddsb
jb
adc
mov
mov
pop
daa
xor
outsb
fwait
xchg
subl
mov
jge
test
pusha
lahf
in
shr
adc
cmp
and
push
xor
xor
hlt
cmp
movq
in
or
fwait
mov
mov
scas
rclb
add
inc
ljmp
nop
xor
mov
cmpsb
mov
jo
add
clc
xchg
out
fimuls
fs
xorb
or
sarb
inc
ss
lcall
dec
sahf
mov
in
mov
movsl
in
mov
inc
sbb
xchg
xchg
int
xchg
pop
scas
push
rcrl
aas
pop
xor
test
cli
jns
and
lea
ret
loop
andl
sbb
testb
mov
test
push
andl
cmc
dec
jle
pop
mov
dec
push
jb
mov
and
adc
outsl
sbb
je
orb
lret
sbb
push
xor
mov
sub
xor
movsb
popl
adc
inc
sub
mov
jl
inc
and
mov
ds
mov
mov
cmp
loop
fidivl
sarb
jmp
clc
aam
dec
add
xchg
adc
push
pop
das
aam
cwtl
sahf
lock
adc
mov
inc
stc
sbbb
stc
ds
ja
sub
dec
adc
adc
cli
cmc
into
or
pop
imul
adc
movsl
addr16
sbb
sbb
stc
lds
pop
adc
mov
inc
lods
adc
pop
mov
and
xchg
cmpsb
or
fsubrl
xchg
xor
mov
mov
push
and
or
ret
push
cmc
repz
movsl
dec
movsb
iret
cmc
in
mov
clc
jg,pn
xchg
xchg
pop
add
orl
sub
pop
mov
dec
pop
popf
movsb
inc
int
lds
cmp
adc
or
xchg
pop
data16
cmp
sub
int3
xchg
push
cmp
pop
sbb
fimull
cmp
add
xchg
jno
cmp
mov
dec
jb
add
gs
adc
clc
aaa
pop
xchg
loopne
aas
std
fsubrs
cmp
mov
loop
cmpsl
pushf
sub
insl
je
test
xlat
dec
pop
nop
call
cmpsl
in
push
mov
lock
push
call
xor
repnz
jmp
cmc
stos
ret
jne
mov
dec
jl
dec
xor
pop
repnz
inc
mov
movb
in
and
add
mov
mov
push
mov
xor
push
cltd
iret
push
out
das
aad
mov
nop
and
icebp
dec
jo
lock
lea
shrl
daa
sub
push
and
insb
pop
daa
repz
push
jbe
xorl
adc
xor
pop
or
pusha
imul
mov
push
dec
push
xchg
xor
jb
mov
pop
jo
xchg
ret
insl
lcall
cwtl
cmp
jge
iret
adc
fdivl
aas
clc
daa
stos
outsb
movsb
pop
cwtl
cmp
xor
insl
jno
in
or
sub
xor
or
sub
xchg
lds
lds
dec
mov
fsubs
add
fcomp
movsl
mov
fs
xor
inc
pop
clc
push
pop
push
addr16
fimuls
fadds
jl
inc
inc
mov
js
pop
stc
and
inc
loop
ret
idivb
adc
dec
je
jae
lret
lcall
push
adc
ficompl
push
add
jle
ja
or
pop
pop
push
and
mov
flds
movsl
es
aad
jbe
xor
mov
jns
inc
repnz
sti
jl
andb
fwait
movsl
mov
imul
je
inc
adc
pop
das
dec
shrb
sbb
ret
sbb
cmpsb
pop
pushf
ror
push
call
jo
jae
sbb
lahf
aad
push
mov
jns
aas
aaa
mov
pop
xchg
aas
jbe
jmp
movsb
mov
adc
gs
jmp
pop
jg
pop
pop
mov
jl
jno
push
test
mov
cmp
mov
adc
sbb
xor
xlat
fcoml
push
add
fisttps
and
out
leave
int
add
cwtl
repnz
bound
es
cli
subl
insb
out
xorl
vandps
insl
ja
xchg
pop
dec
stos
inc
mov
lret
xchg
or
popf
movsb
rcr
in
nop
fidivrl
mov
scas
aam
xor
incl
sbb
scas
das
jnp
push
pusha
loop
outsl
and
sbb
call
adc
mov
outsb
out
je
dec
pop
xor
js
stos
in
scas
push
cmp
out
divl
xchg
sbb
shr
lcall
dec
fisttps
lcall
lret
cmpb
sarb
rol
rcll
stos
or
cmp
je
adc
dec
in
sub
rclb
stos
add
inc
xchg
xor
adcl
enter
mov
in
or
and
adc
out
sbb
out
jl
xchg
stos
jnp
fldcw
xchg
hlt
test
inc
insb
cmp
fcoms
xchg
adc
and
stc
ret
stos
fwait
in
push
loopne
jmp
nop
jg
imul
inc
es
sub
add
pop
mov
pusha
sbb
xor
jae
idivl
pop
adc
jecxz
mov
cmp
cmp
pusha
lods
mov
push
push
popf
shr
jecxz
dec
lret
js
out
into
jb
xlat
xchg
int3
out
out
sbb
sub
pop
push
pop
xor
xor
movsb
pop
out
lea
ja
les
nop
shll
jge
js
cltd
iret
lcall
jecxz
scas
lret
jl
fs
cmp
sarb
xor
ds
push
cmpsl
jle
shlb
inc
imul
xchg
outsl
pop
jle
mov
test
out
fwait
incl
jg
adc
insb
jo
mov
mov
xchg
mov
adc
cmp
push
scas
in
je
dec
es
pop
in
das
cmp
or
cwtl
call
dec
loopne
dec
cmp
push
ret
jns
sbb
dec
int
movsl
in
mov
gs
push
push
mov
push
mov
mov
jmp
or
out
pop
cli
into
jge
into
mov
dec
lods
xor
mov
sbb
xchg
js
jb
pushf
js
shl
jnp
cli
movsb
out
jmp
arpl
scas
pop
adc
and
sbb
popf
xor
mov
dec
push
xor
cmpb
out
adc
add
test
test
push
fdiv
sbb
in
repz
pop
scas
call
and
push
loop
js
inc
or
dec
das
push
fsubr
pop
dec
dec
shll
mov
je
cld
clc
add
pop
mov
xchg
jb
test
je
ret
jge
jmp
addb
mov
push
outsb
push
fisttps
pop
xor
and
or
mov
iret
ss
cmp
jne
or
or
or
jge
outsb
addr16
push
xchg
pop
add
mov
fidivs
iret
enter
inc
or
imul
sbb
adc
mov
popf
xor
dec
ja
inc
xchg
jg
xchg
jg
jbe
mov
cmp
fldcw
scas
add
xor
mov
inc
push
je
pop
ljmp
hlt
test
subl
mov
sbb
cmpsl
xchg
add
adc
xchg
dec
mov
shrl
mov
sbb
sub
jmp
outsb
cld
into
inc
ret
pop
push
jge
clc
fs
daa
push
fldt
jns
stc
aas
ja,pt
mov
lea
imul
jae
std
cwtl
xorb
in
mov
mov
sub
mov
addr16
adcl
fwait
out
sub
call
cmp
call
insb
xchg
dec
jge
sbb
mov
imul
fcmove
lahf
out
mov
jl
pushf
dec
sarw
mov
fimull
inc
xchg
shll
rcrb
negb
push
mov
ja,pn
push
adc
fwait
cld
jge
jbe
jp
inc
js
push
or
daa
dec
cmp
adc
sub
movsl
fs
mov
lcall
xor
add
adc
mov
cmp
subl
leave
ret
gs
xchg
int3
ljmp
arpl
nop
dec
popa
les
out
mov
out
icebp
in
lods
push
in
add
cmp
push
and
lret
add
imul
inc
pop
mov
arpl
repnz
insb
xor
inc
cmpb
daa
adc
nop
iret
lret
mov
cmc
ja
and
add
stos
fcmovu
dec
js
push
and
push
or
push
sub
inc
fs
xor
add
pop
jmp
sub
sbb
cmp
test
sti
pop
jmp
sbb
cld
mov
mov
sub
gs
xchg
iret
pop
xor
fsubs
inc
adc
or
push
jae
mov
and
adc
push
adc
adc
out
cmp
clc
inc
push
scas
sub
movb
xchg
cmp
pop
push
lock
dec
out
jb
push
jle
add
and
and
fwait
addr16
cmpl
cmp
incl
lds
inc
sbbb
mov
popf
jg
loope,pn
or
das
jb
ja
mov
in
add
lahf
or
add
std
movsb
cmp
or
lods
cmovp
push
loopne
popa
clc
mov
push
push
xchg
sarb
inc
push
orb
adc
and
stos
lock
gs
cmp
mov
inc
sbb
inc
jecxz
lcall
adc
xchg
lods
sub
adc
rclb
mov
sti
push
dec
lret
shrl
sub
mov
fcoms
fisubrs
std
adc
stos
movsb
jl
cmpsb
and
sarb
and
sbb
int3
dec
pop
xchg
cltd
push
xchg
addr16
sarb
hlt
mov
mov
jb
into
sbbb
and
add
pop
push
and
ss
or
nop
cmp
jo
jae
out
mov
push
pop
fwait
inc
fcompl
int
inc
pop
add
sbb
xor
subb
movsb
push
adcb
js
stc
scas
jp
jecxz
jge
inc
push
add
js
nop
sub
add
call
mov
fisttpll
xchg
sbb
mov
add
jne
repnz
jne
das
jo
filds
jns
sbb
or
add
leave
call
jae
repz
clc
or
add
pop
fimuls
ljmp
aad
sub
and
jno
shlb
in
push
psubb
gs
sub
sti
addb
ret
inc
push
insb
jae
jp
ljmp
repnz
sub
out
nop
xchg
jo
mov
lods
pop
lret
cmp
mov
add
push
inc
jns
pop
test
cld
pop
xchg
loopne
and
popf
test
xor
imul
or
lods
adc
mov
fstl
mov
fldl
jg
sbb
xor
jae
mov
adc
xor
or
fs
gs
push
int3
cmpsb
out
rorb
lahf
jno
outsb
and
mov
add
mov
mov
xchg
push
popl
lods
test
cmc
xor
stos
and
fwait
or
shl
jge
pop
ss
sbb
jecxz
icebp
test
xor
insl
sarl
sbb
gs
pop
mov
stc
rorb
inc
or
fst
jecxz
push
fsubrl
fwait
sbb
sbb
jae
fs
dec
test
addb
leave
movsb
aam
shl
jl
jmp
or
stos
add
lds
or
sbb
push
pop
movsb
mov
imul
and
mov
call
xchg
xor
or
stc
jp
xchg
adc
fisttpll
sub
add
hlt
add
arpl
mov
into
roll
sbb
out
xchg
jne
mov
inc
or
daa
fmuls
fcoml
xchg
cmpsb
cli
cmp
mov
adc
jbe
sti
sub
jns
in
stos
sub
push
popa
and
xorb
rcl
push
dec
sub
frndint
ljmp
addb
insl
cmp
jae
mov
pop
pop
sbb
rolb
hlt
jmp
dec
mov
pop
mov
pop
aad
call
aaa
divb
sub
add
mov
cltd
cwtl
fbld
dec
add
shrb
sahf
in
enter
lahf
mov
push
ficompl
push
popf
xchg
sub
jle
sbb
fwait
xchg
pop
and
sbb
dec
mov
rcr
lods
int
xchg
xchg
imul
adc
outsb
xlat
icebp
push
and
in
cli
xchg
ja
fs
in
sarl
lcall
mov
roll
in
nop
roll
es
lahf
jecxz
repz
pop
aad
jne
addr16
sub
fs
lea
loop
in
enter
jb
add
popa
mov
inc
aam
add
test
loop
xchg
aas
inc
clc
je
mov
push
loope
fst
inc
sub
xchg
lds
out
out
dec
cmp
and
fisubrs
js
pop
jns
es
gs
or
aas
sbb
cwtl
sbb
cli
xor
push
fadds
call
push
movsl
insb
pop
outsl
xchg
lahf
imul
push
jmp
in
ds
pushf
xor
cmp
sub
or
clc
popa
fs
arpl
add
pop
icebp
sub
pop
dec
add
sbb
cmp
push
dec
dec
jae
mov
inc
sbb
mov
insb
inc
xchg
lret
jbe
out
lcall
loop
lret
pop
jg
stc
or
xchg
push
dec
lods
shufps
xchg
sarb
lock
adc
cmp
mov
cmp
cmp
mov
jp
js
jmp
movsl
sahf
aad
fsubrs
fldt
cwtl
sahf
pop
xor
cmpsb
push
test
sbb
mov
loop
imul
mov
xorl
mov
mov
movsb
shll
xor
mov
lea
fldt
jb
inc
mov
jne
xor
out
sbb
leave
lods
into
or
gs
in
xor
insb
mov
aam
cmp
fbstp
cmp
jecxz
test
stos
es
fimuls
jle
out
cmp
ret
adc
shlb
or
jp
jnp
in
xor
push
aad
iret
and
jb
pop
sub
dec
and
sub
jl
push
addb
sbb
lret
nop
out
cmc
or
pop
pushf
inc
pusha
dec
lret
xchg
dec
push
jb
clc
fnsave
jle
pop
icebp
sti
jne
fs
push
cs
push
shlb
insl
gs
lds
fidivrl
xchg
push
mov
fsubs
in
aam
test
jae
xchg
sub
neg
out
or
loope
and
clc
cmp
mov
mov
adc
fiadds
shr
les
sub
aas
int3
mov
push
lret
push
pop
push
sbb
adc
xchg
adc
fs
negb
inc
notl
in
or
jp
mov
sbbb
mov
lods
adc
out
cmp
pop
aas
stc
or
and
push
push
pop
out
pop
in
inc
out
shlb
bound
rcrl
out
rcl
push
stc
pushf
fsubrp
sub
or
repz
pop
test
push
imul
sbbb
pop
xchg
cmp
in
ret
adc
xor
jo
mov
push
out
in
or
sbb
adc
pop
mov
jo
and
jg
xor
inc
sub
push
mov
lahf
jne
hlt
aam
in
in
cmp
cmpsl
and
jns
pop
into
shr
fmul
or
pop
inc
ljmp
fcoml
mov
cmp
and
pop
aad
lcall
adc
loop
lock
or
rcrl
pop
lret
ljmp
pop
dec
into
inc
push
ljmp
mov
mov
push
cmp
imul
enter
mov
push
or
cmp
movsl
push
xchg
pop
testb
push
inc
sbb
arpl
dec
cmpsl
in
aad
into
sti
lds
call
repnz
popa
push
rorl
test
inc
aaa
jg
shll
ds
inc
shr
repnz
inc
fsts
pop
clc
imul
das
insl
ficompl
dec
dec
fmull
movb
xchg
xchg
cmp
cltd
sbb
cmovno
clc
adc
jb
addr16
mov
fbstp
mov
mov
add
lahf
push
push
ja
scas
es
rorb
lock
mov
inc
pop
adc
mov
adcl
outsl
sbb
fnstcw
xchg
nop
push
jae
shlb
fsub
push
xlat
rcrb
pop
dec
cltd
mov
psubq
adc
cli
sbb
push
cld
outsl
pop
mov
lret
test
mov
sbb
and
xor
and
in
lods
adc
mov
mov
movsl
push
js
std
jo
jl
jbe
mov
push
xlat
sub
das
jecxz
adcl
enter
mov
push
sub
and
into
pop
lret
mov
xchg
mov
popf
mov
mov
rcr
jp
insl
call
fsubrs
and
pop
int3
and
xor
push
xchg
sahf
jp
push
jbe
add
mov
xchg
jmp
insl
xchg
insl
and
cmp
adc
jmp
lret
fnsave
mov
dec
xchg
lret
pop
call
sarl
out
fimuls
lds
ret
push
or
jmp
scas
pushl
test
cmpsb
dec
imul
mov
dec
faddl
fistps
cmp
mov
sbb
sbb
jb
jecxz
push
jns
push
xlat
pop
in
scas
or
into
hlt
xchg
mov
lahf
add
test
xlat
mov
mov
in
push
fstps
out
repz
jne
aas
cmpl
jno
mov
mov
jle
daa
aam
ss
pop
adc
push
repz
popw
sub
push
mov
bound
xor
push
xor
es
in
jl
ss
jbe
popa
rcl
add
repnz
xor
push
sbb
cmpsb
dec
insb
adc
lods
inc
lret
pusha
outsb
or
jp
enter
mov
test
inc
jne
xlat
pusha
loop
test
int3
aaa
push
fisttpll
jp
lret
daa
jge
push
push
cltd
icebp
mov
sub
fdivl
mov
into
add
in
jge
popa
in
push
imul
adc
mov
xchg
cs
cmp
out
mov
adc
out
pop
test
push
insb
mov
mov
into
int3
pop
xor
push
ljmp
leave
mov
jecxz
xor
and
mov
inc
addr16
ja
loope
cmp
inc
lahf
push
int3
pop
dec
lahf
sub
cli
orb
pushf
pusha
mov
jg
xlat
fbstp
ja
les
test
not
loop
fwait
arpl
aad
jge
aad
push
sub
xor
shrl
icebp
hlt
jmp
xchg
adc
mov
mov
push
xor
xchg
mov
popf
jl
dec
icebp
or
add
jbe
or
or
scas
stos
dec
inc
pop
jne
jl
je
sbb
push
and
sbb
pop
xchg
in
mov
and
add
stos
cmp
or
cmp
aaa
xchg
cmpsb
ss
mov
adc
jecxz
lret
jae
lcall
test
ffreep
sbb
frstpm(287
fistps
icebp
mov
divl
dec
es
hlt
ret
shrl
loopne
mov
jne
jne
movsl
cld
into
xor
pop
mov
dec
lahf
lcall
dec
mov
add
inc
mov
dec
leave
mull
inc
imul
mov
popa
stos
mov
sbb
lret
adc
and
inc
mov
pop
mov
push
sub
dec
jno
ucomiss
cltd
sbb
aam
sahf
and
mov
cmpsb
push
daa
and
pushf
sub
mov
in
inc
push
inc
mov
inc
xchg
inc
cmpsb
addr16
dec
cltd
push
in
dec
dec
icebp
cmp
inc
mov
cmc
pop
jns
enter
out
mov
push
outsl
test
cld
lds
mov
lds
inc
int
sbb
sub
mov
xor
mov
scas
mov
dec
insb
test
loop
mov
push
mov
int
pop
cld
mov
in
aas
out
mov
jb
jno
or
loop
mov
negl
aas
mov
shrb
insl
cmp
int3
push
cld
add
lahf
cmc
or
insl
fwait
cld
loope
pop
sbb
cs
and
xor
mull
repnz
push
xchg
mov
insb
jne
mov
xchg
fcmove
push
sti
cmp
dec
mov
mov
mov
icebp
jo
fadd
fcomi
fldl
mov
fmul
mov
adc
cli
mov
jnp
mov
divl
cs
outsl
test
rorb
and
pushf
iret
dec
testb
jne
ljmp
ss
je
cmp
cmc
pop
jnp
adc
or
sbb
inc
adc
fsubrs
int3
sbb
adc
out
in
pop
addr16
cmpsl
sbb
or
xchg
mov
mov
pushf
inc
and
ret
adc
lret
shl
push
add
push
lods
int
addr16
xchg
adc
gs
add
xchg
dec
jno
add
cmpsb
sarb
lahf
notb
jns
subb
mov
jmp
mov
arpl
repnz
cmpsb
push
inc
stc
xchg
push
sub
and
mov
jg
pop
loope
and
push
sbb
xlat
into
leave
mov
and
dec
mov
fs
pushf
in
jo
pusha
in
cmp
xchg
push
ljmp
daa
fwait
movsl
xor
mov
mov
addr16
mov
pop
iret
pop
inc
ficompl
jnp
out
add
cmp
mov
lods
out
mov
daa
and
or
cmp
cmpsl
repz
xor
mov
loopne
pop
mov
cld
mov
addl
fdivr
in
ljmp
pop
mov
imul
data16
mov
xchg
adc
rorb
icebp
adc
test
cli
mov
nop
test
fsubrs
jmp
sbb
push
or
mov
fnstsw
push
xchg
test
scas
push
lret
sub
int3
popa
testl
xchg
ja
inc
loope
or
es
add
inc
fldcw
pop
subb
add
mov
fidivrs
js
mov
pop
dec
imul
push
mov
bound
xchg
mov
mov
movsb
jmp
mov
sbb
push
outsl
aas
xchg
repz
jle
aam
adc
xor
sub
xor
js
fst
das
add
add
ret
scas
jg
mov
push
pop
clc
push
dec
cmpsl
or
inc
in
scas
mov
and
sub
insb
inc
dec
pop
outsl
add
mov
ljmp
int3
out
aam
sub
push
jno
dec
test
push
cmp
mov
pusha
cmp
sahf
rolb
insb
inc
bound
cs
sbb
lock
sbb
lock
mov
ret
andb
stc
imul
inc
push
mov
das
xor
cld
add
adc
ret
lahf
fisttpll
stos
ds
mov
cs
fdivrs
sbb
or
punpckhbw
jl
stos
xorl
add
xchg
test
push
loopne
xor
ja
and
faddp
aad
dec
scas
mov
mov
fsubrl
mov
sub
jl
sub
cwtl
xchg
and
pop
mov
jne
test
mov
mov
inc
push
push
cmp
mov
jge
sub
dec
push
repnz
cltd
mov
push
aam
pop
ja
or
in
cli
mov
pop
pop
jp
outsb
bound
cld
mov
lods
jle
cmpsl
fstps
mov
push
mov
sub
scas
cltd
dec
pushf
dec
sti
into
fidivrl
and
hlt
mov
subb
mov
inc
xchg
les
jne
mov
mov
sar
aaa
pusha
out
adc
inc
jg
fsts
repnz
sbb
adc
stc
rorb
xor
push
mov
fwait
negb
addr16
jo
call
inc
sarl
xorb
jg
and
mov
sbb
xor
or
arpl
xor
data16
pop
mov
xchg
es
ljmp
lea
subb
add
push
mov
les
pop
cwtl
and
mov
mov
fidivrl
test
shl
ja
loop
orb
inc
adc
sub
cs
cld
lods
and
loope
sar
ljmp
roll
mov
lahf
inc
out
scas
dec
aam
fs
subl
pop
ljmp
mov
pop
repnz
or
jge
mov
fiadds
int
and
inc
adc
jbe
loope
fld
clc
mov
or
test
xor
lds
movsb
test
sub
mov
dec
pushf
into
fwait
in
sub
mov
in
cltd
jae
fs
and
or
jae
cmp
int
or
adc
xchg
sbb
cmc
repz
ja
sbb
aad
popf
lahf
xor
jb
aas
adc
mov
xchg
push
addr16
int
imul
xor
sub
lds
cmp
pop
call
pop
sbb
test
andl
jmp
int3
inc
movsl
aaa
sbb
clc
xorb
scas
jle
xor
icebp
push
subl
sbb
lods
and
mov
mov
lock
inc
lret
pushf
scas
sbb
int3
push
stos
iret
scas
notl
cmp
call
mov
cmpsb
add
cmp
dec
daa
cmp
bound
sub
ret
out
mov
sahf
in
dec
pop
jo
ss
fadds
nop
adc
fidivs
cs
mov
sarl
xlat
ret
mov
mov
jmp
das
hlt
mov
icebp
mov
sub
lock
or
loope
cltd
lds
dec
call
test
or
and
mov
rclb
pop
ja
rcrl
xchg
mov
xchg
pop
push
into
lods
hlt
loop
sub
push
adc
cld
pop
jns
xor
lea
dec
loope
dec
dec
outsb
mov
push
mov
mov
mov
repnz
leave
pushaw
ret
fs
or
loop
add
sbb
jo
and
push
jbe
movsl
or
flds
dec
jne
xor
push
movsl
into
fiadds
insl
repnz
and
sub
jbe
cltd
fs
dec
out
and
cmpsb
fcomps
out
wrmsr
jb
aad
push
sbb
inc
mov
add
sub
mov
mov
inc
and
lods
js
mov
enter
out
movsl
imul
mov
xchg
push
cmpsl
sbb
and
fsubrs
xor
movsl
lret
mov
imul
sahf
or
sarb
mov
jne
adc
xor
mov
dec
cmp
sub
dec
ds
xchg
lods
sarb
ror
push
inc
out
stos
inc
mov
sahf
push
jp
inc
add
xchg
lcall
dec
mov
or
xor
das
fsubp
sbb
in
sti
dec
xor
loope
loop
cwtl
cmp
and
jne
pusha
in
or
dec
cmpsb
scas
in
or
inc
daa
adc
lcall
in
stos
mov
xor
lods
das
mov
or
inc
mov
push
dec
mov
loopne
add
imul
push
cmp
sbb
mov
add
or
jecxz
push
push
ljmp
jmp
adc
jb
mov
mov
stc
jg
mov
or
popa
adc
sub
test
adc
mov
jmp
icebp
mov
cltd
aas
sbb
outsl
insl
xchg
dec
insb
shll
andb
ficomps
xchg
push
jle
bound
scas
cmc
loope
lret
arpl
call
negl
out
push
or
fs
sub
test
stc
or
dec
sub
sub
cmpsb
faddp
sbb
push
and
add
popf
lods
loope
cltd
stc
insb
fsubs
mov
stos
xchg
xlat
stos
inc
and
mov
imul
imul
mov
pop
pusha
dec
and
outsl
mov
dec
out
mov
push
movsl
pop
cltd
jl
fnstenv
cmp
xor
mov
mov
testl
sbb
js
andb
dec
int
imul
dec
std
das
call
fcomps
cmpsb
sub
mov
xlat
into
xor
outsl
pop
scas
lahf
pop
mov
aam
popa
aad
mov
pop
or
outsl
cmp
xchg
push
push
mov
jae
jmp
daa
subl
sub
xor
adc
sti
inc
adc
test
jg
mov
fnstcw
push
pop
add
enter
adc
jp
sahf
cmc
dec
xor
das
insb
mov
dec
pop
and
icebp
push
jbe
mov
xchg
sbb
out
arpl
fisttpll
in
loope
cmp
xchg
idivb
hlt
inc
cmpsb
sbb
add
mov
xchg
lods
sub
sub
in
dec
mov
fcmovnbe
jge
and
repnz
mov
mov
fbstp
daa
out
aam
test
ss
mov
stos
inc
mov
fucomp
mov
addb
push
icebp
push
out
lea
xchg
hlt
dec
test
add
sarb
push
in
testb
test
mov
das
or
mov
or
or
sub
ljmp
test
pop
mov
mov
and
outsb
jle
cli
mov
inc
jmp
xlat
in
lcall
outsb
mov
lods
jae
mov
stos
mov
or
pop
add
mov
cli
cli
ret
rcrb
mov
push
push
xor
jle
add
dec
lcall
daa
or
sub
xor
stc
ljmp
push
test
gs
in
push
xor
fmul
rcll
lods
pop
mov
dec
push
jnp
jnp
xor
mov
inc
out
cmp
add
mov
pop
add
cmpsb
mov
shll
cmp
sub
push
pusha
sub
call
mov
aad
in
fs
lcall
sub
das
xchg
imul
push
iret
test
push
imul
js
xchg
adc
popa
out
inc
xor
push
je
ds
insb
pop
lahf
gs
aas
adc
test
inc
pushf
jns
gs
cli
mov
xchg
mov
adc
cmp
add
loopne
daa
jp
dec
mov
dec
cmp
mov
mov
clc
cmpl
imul
cld
cmc
jmp
mov
pop
sbb
fcmove
testl
dec
xchg
inc
arpl
fwait
sub
push
dec
sbb
dec
fwait
lods
adc
cmpsl
xchg
mov
outsl
aam
and
lods
sub
cltd
repnz
rorb
inc
push
cmp
pop
notl
pop
mov
mov
outsb
xor
notb
mov
arpl
add
push
inc
adc
sub
aad
ret
aaa
lds
imul
in
scas
pop
lea
sub
xlat
test
sub
aas
sti
xor
lock
push
push
xchg
lods
scas
popf
mov
ficomps
push
xchg
cwtl
loope
xchg
sbb
pop
rcrb
in
mov
aas
pop
es
imul
ljmp
mov
stc
in
cmp
mov
mov
adc
hlt
ret
nop
adc
aas
dec
inc
addr16
fildll
clc
push
call
movl
and
es
cmc
inc
pop
nop
sub
lcall
sub
lock
sub
arpl
ds
mov
ds
sbb
add
and
stos
sahf
jns
add
or
aam
mov
int3
jb
lods
add
or
or
pushf
idiv
pushw
xchg
divb
xchg
fnstsw
and
imul
in
std
or
out
add
aad
popf
sbb
xchg
loope
data16
mov
push
cmp
mov
les
cld
cmp
repnz
cmp
nop
push
fstpl
loop
cmp
mov
sub
sar
mov
sub
insl
js
out
dec
jbe
fidivl
jg
call
or
stos
and
cmp
cmpsb
push
test
ret
dec
loopne
add
pop
add
pop
xorb
add
popa
adc
cmp
inc
cwtl
mov
mov
push
repnz
loop
inc
movsl
dec
les
hlt
stos
sbb
daa
in
fsubrl
dec
aas
insb
enter
cmp
test
cmp
sub
push
mov
jno
js
ret
jnp
sub
xchg
mull
inc
inc
xchg
lret
jo
push
std
mov
xor
lock
jmp
in
xchg
adc
pop
fwait
pop
and
and
jmp
out
xchg
sub
push
popf
repz
hlt
mov
xchg
arpl
test
mov
jne
ret
push
jmp
xchg
fcmovnbe
cmpsb
nop
cmpsl
imul
fmuls
js
enter
xchg
and
push
and
ljmp
and
or
mov
test
push
mov
sti
ja
push
aam
lret
out
std
sarb
shl
fcompl
pop
scas
data16
mov
jo
mov
xchg
adc
sub
or
inc
je
adc
mov
out
or
cld
xchg
push
xor
sbb
pop
add
inc
mov
cmp
sbb
push
test
and
cmp
pop
cli
dec
rorl
or
jnp
xchg
sti
push
jb
mov
sub
js
adc
or
inc
outsb
ret
movsl
pop
out
int
sub
shlb
fdivl
sahf
out
mov
pop
and
xchg
aas
es
mov
mov
gs
inc
xchg
cmp
daa
sub
fsubrs
dec
addr16
mov
popf
stos
rorl
shlb
add
or
add
cmp
fnstcw
sbb
mov
sub
push
inc
imul
imul
xor
jae
cmp
push
xor
scas
mov
in
mov
add
insl
dec
sbb
faddp
or
adc
mov
inc
inc
xor
mov
jecxz
or
add
sub
sub
mov
cmpxchg
sub
mov
xchg
sbbb
xor
loopne
loop
test
dec
jbe
int
mov
test
fwait
or
jo
lcall
ret
mov
insl
sti
out
inc
pop
stos
repz
mov
stos
lods
imul
pop
test
xchg
dec
mov
scas
push
jecxz
mov
jbe
mov
iret
fisttpll
lcall
repnz
pop
scas
lcall
rcll
push
dec
push
inc
sub
movsb
fbstp
fsubp
sub
popf
fwait
imul
arpl
ja
outsb
outsb
insb
mov
cltd
outsb
fildll
ret
pop
dec
repnz
xchg
or
pop
insl
das
cmpb
add
add
imul
dec
sub
push
mov
gs
sbb
roll
and
sti
mov
call
adc
outsb
pop
mov
clc
push
ds
imul
xorl
bound
mov
aad
xchg
sarl
mov
cmpsl
inc
mov
add
and
cmpsl
outsl
pop
insb
aam
aad
or
adc
add
loop
fnstenv
cmc
mov
xor
loopne
mov
movsb
fstpt
inc
fsub
jb,pt
test
push
push
jae
lret
testl
test
mov
aam
std
add
sub
inc
mov
push
dec
sub
xor
xchg
mov
dec
or
int
jnp
sub
pop
out
pop
imul
int3
push
dec
and
js
shl
or
pop
dec
jl
push
cmpsb
in
loop
insb
loopne
cmp
insb
add
dec
jae
cmp
imul
scas
pushf
add
mov
push
movsb
fs
push
std
fidivrl
and
xchg
inc
int3
cs
repz
pushf
sub
pusha
cmp
push
push
pop
movsb
mov
shl
mov
lret
insl
sbb
lds
dec
adcl
sub
insl
popa
add
movsb
dec
mov
mov
aam
and
cmp
pusha
xchg
adc
lods
outsl
out
mov
in
and
jns
out
adc
mov
iret
mov
add
cli
outsl
in
sahf
sti
pop
jne
push
dec
cltd
fsubrs
and
enter
out
aam
cld
stos
ret
jle
popa
mov
cmp
adc
mov
push
addb
pop
enter
lds
cli
sub
adc
test
and
mov
fs
ds
adc
clc
outsb
xchg
scas
out
test
xchg
fld1
mov
dec
je
sbb
cmp
jge
inc
jg
in
lret
fisttps
push
enter
xchg
divl
dec
ss
jae
stc
push
pop
das
pop
arpl
int
pop
and
xchg
adc
cltd
mov
fisttpll
sbb
test
insl
fdivl
fistpl
inc
out
pop
lcall
gs
fdivr
pop
xchg
clc
inc
or
dec
lahf
insl
sub
testb
sbb
xchg
repz
push
into
mov
sub
daa
cld
faddl
cmp
dec
dec
or
sbb
sub
out
lds
xor
sarb
jne,pt
mov
push
repnz
xor
in
fwait
idivl
imul
xor
inc
das
in
fmuls
push
popf
imul
inc
lret
aas
loop
cltd
cmp
sub
jbe
push
stos
xlat
cmp
int
jle
test
push
jo,pt
or
fsts
sahf
mov
sub
pop
pop
ljmp
loopne
filds
cwtl
enter
testl
arpl
test
mov
mov
push
adc
sarb
subl
xor
and
add
fistpll
rclb
xchg
cli
outsl
insl
mov
xchg
xor
cmp
adc
sbb
ja
mov
movsw
mov
movb
bound
xor
lods
xor
cmc
scas
mov
jne
addb
mov
addr16
clc
dec
jp
int
pop
adc
inc
stos
dec
xchg
push
and
push
daa
cmpsb
dec
jl
jbe
leave
test
scas
mov
dec
adc
sbb
xchg
adc
dec
xchg
fistpll
pop
jb
movl
test
jo
imul
jo
sub
jle
cld
mov
cmpsl
xchg
sub
insb
mov
int3
push
hlt
dec
loop
iret
sub
fwait
sub
roll
fiadds
mov
jg
pop
jl
jnp
sarl
jns
mov
jno
mov
inc
mov
in
loop
or
hlt
int3
das
fsubrs
cmp
lret
cmp
gs
popf
sub
movsl
jae
fisttpl
bound
inc
rorb
or
mov
mov
adc
lcall
sbb
jg
sarl
xor
stos
push
cmpsl
sbbl
adc
ficoml
mov
xchg
jo
scas
pusha
add
add
mov
jns
fs
pop
mov
xor
or
pop
int3
jl
jnp
fwait
push
mov
cmc
mov
daa
push
inc
insl
xchg
sub
push
mov
std
push
xor
dec
cmpsb
push
mov
sbb
mov
push
fldcw
jne
mov
dec
ja
xor
or
iret
jle
sub
sbb
sbb
in
mov
adc
push
push
sub
test
mov
jge
sbb
out
in
sti
or
and
repz
lret
push
xchg
add
jp
or
repnz
insl
cs
hlt
ret
gs
punpckhdq
adc
pop
negl
pop
je
jbe
xchg
xchg
or
push
add
jg
xchg
pop
xchg
jae
jno
jp
push
pop
ljmp
fistpll
mov
xor
cli
fiaddl
pop
sbb
jle
mov
test
add
test
les
lock
cltd
rorl
mov
test
jmp
das
cmpl
aad
jmp
mov
sbb
sbb
in
and
mov
shlb
sbb
in
mov
leave
mov
push
pop
jg
insl
xchg
ja
mov
mov
dec
adc
in
frstpm(287
cmovns
cmpsb
xchg
jae
sub
ss
test
rclb
xor
loopne
into
xor
das
lods
in
cli
sub
movsb
cltd
dec
inc
mov
cmp
xchg
pop
jecxz
repnz
jno
fs
push
or
in
rorb
xchg
subb
push
and
dec
repz
push
mov
ficoml
cmp
inc
inc
movsb
xchg
movsb
insl
xchg
arpl
cmp
cmp
jb
push
xchg
pop
dec
ljmp
xchg
inc
cs
add
adc
add
fisubl
dec
mov
sbb
push
insb
mov
in
daa
inc
add
int3
dec
fdivrl
fldl
add
push
lock
push
test
dec
mov
outsl
dec
cmp
in
inc
in
ss
add
lret
sub
popa
call
pop
push
in
movsl
dec
mov
out
enter
adc
lds
or
mov
fsubp
out
adc
cwtl
rorb
jne
es
out
xchg
movsb
lea
xchg
add
sbb
mov
popa
mov
pop
mov
jmp
xchg
lods
dec
inc
pop
nop
loop
iret
pop
xor
repnz
xor
adc
push
call
sarl
cmpsl
loopne
jae
insb
cmp
push
shll
repnz
jle
sub
sbb
and
rcr
inc
cmpsb
int3
cmp
fwait
pop
out
push
jp
sub
lahf
cltd
hlt
jnp
jle
sti
mov
push
and
mov
iret
out
ss
ret
in
cmp
and
sub
pop
idivb
lock
push
fisubrs
mov
out
rolb
add
push
mov
and
push
jg
mov
dec
pop
movsb
pop
pop
xor
mov
xor
sub
sub
mov
cmp
inc
ljmp
dec
mov
add
inc
imul
push
push
in
sahf
push
mov
cmp
lods
fwait
sbb
xchg
dec
cmpsl
sbb
xchg
jmp
jmp
inc
mov
xor
ret
lret
xor
adc
ja
stc
je
xor
cmp
inc
or
std
outsb
adc
or
loopne
pop
push
xor
stos
fcoml
push
js
test
loope
imul
orl
pop
add
out
xor
or
decb
xor
in
xchg
adc
call
mov
jne
fldcw
out
sbb
inc
in
push
lea
out
mov
push
xchg
inc
xchg
push
test
pop
ja
notl
ds
popf
pop
aam
imull
aam
mov
call
xor
sub
ficompl
je
xor
sbb
mov
pushf
icebp
push
or
scas
or
or
jnp
push
mov
repz
aad
cmovl
aad
js
andb
add
rorb
les
fistps
aas
mov
sti
dec
je
fstps
in
sub
sar
in
cld
outsb
mov
sub
inc
arpl
mov
mov
mov
lods
cmp
fdivr
lcall
stos
rcrl
movsl
add
das
pop
cmp
dec
popl
rorl
xchg
sti
mov
roll
push
lods
cmp
adc
test
xor
and
pop
andl
js
sbb
xchg
lock
dec
add
loop
dec
es
gs
push
pusha
cmp
jge
pop
sub
cmp
mov
outsb
or
and
insb
cmpsl
ja
push
lret
orl
dec
jns
std
mov
ret
sti
mov
cmpsl
fisttps
mov
scas
dec
xor
pusha
push
nop
pop
mov
jb
cltd
cmp
testb
scas
lods
cmc
aad
movsl
mov
or
aam
push
adc
mov
test
in
or
mov
out
in
sub
cmp
imulb
fidivl
call
push
mov
ljmp
sub
jo
aaa
sub
or
xchg
mov
out
sbb
dec
sbb
mov
pop
ret
fs
hlt
fcmove
movsl
pop
lret
movsl
pop
out
ss
mov
inc
push
inc
fbld
mov
lsl
adc
shrl
push
out
push
and
cmp
testb
outsb
or
ds
xchg
mov
inc
ja
mov
mov
mov
fdivl
and
stos
pop
out
inc
in
xchg
add
test
sub
clc
cltd
test
cmpsb
nop
aad
xor
sub
fistl
xor
fldlg2
cmp
out
stos
inc
cmpsb
push
pop
sbb
mov
push
in
mov
pusha
nop
jne
aad
push
sbb
mov
nop
int
stc
in
stos
jae
mov
js
push
nop
out
cmpsb
add
add
rcll
adc
push
push
ficomps
leave
jae,pn
xchg
sub
or
or
push
jb
pop
jns
fs
mov
inc
jg
mov
fwait
or
ftst
mov
in
jle
push
test
mov
jp
mov
pop
lds
ljmp
pop
or
mov
outsl
and
int
imul
mov
std
mov
popa
subl
sub
jmp
sbb
nop
push
divb
and
add
aaa
mov
xchg
or
cltd
jmp
pushf
adc
mov
inc
cmp
xchg
cmpl
xor
mov
ja
jl
popf
mov
jns
stos
jge
das
call
aaa
inc
stos
pop
jg
and
dec
mov
push
fiadds
icebp
nop
arpl
mov
test
jb
pushf
pop
fmull
mov
add
pop
mov
sar
jno
jb
jg
rorb
sbb
decb
ja
divb
iret
push
pop
adc
shrl
inc
sbb
mov
dec
test
push
bswap
mov
push
movsl
adc
ret
jge
test
or
sahf
hlt
mov
push
jmp
mov
out
out
addb
xbegin
outsb
adc
int
outsb
cmp
mov
lret
mov
dec
add
mov
jo
xchg
push
das
icebp
shlb
mov
out
fimuls
sbb
sti
repnz
or
popa
in
clc
in
dec
or
movsb
lods
sub
jae
ret
sbb
rcrl
push
dec
add
in
push
scas
outsb
push
mov
mov
out
xchg
or
add
in
addr16
push
repnz
dec
push
nop
sbb
testl
cmc
xor
push
js
sub
pop
adc
mov
sahf
out
sub
outsb
push
inc
cmp
in
cmpsb
mov
mov
loopne
shlb
mov
ds
push
cmpsb
movsb
ds
and
out
lahf
imul
in
dec
add
add
inc
and
pop
lret
icebp
pop
xor
test
mov
pop
mov
mov
ljmp
sbb
jmp
xchg
add
pop
mov
outsb
shr
jb
pop
shll
insb
pop
mov
pushf
mov
in
out
in
push
hlt
push
cmpsb
pop
dec
push
notb
mov
cmp
push
dec
lret
std
arpl
jae
xchg
aad
jmp
inc
and
in
mov
or
cs
or
inc
inc
cmp
cltd
fcoml
leave
dec
sbb
xchg
adc
icebp
sub
mov
lret
sbb
test
imul
scas
sbb
add
out
clc
jg
lods
cli
loope
adc
enter
push
popf
cmp
cmpsb
xor
aas
adc
cli
imul
aas
movl
sub
xor
inc
push
sbb
jae
add
call
pusha
xchg
scas
out
cmp
daa
or
cmpsb
cltd
arpl
fwait
jb
aaa
mov
roll
cmpsl
enter
sub
mov
imul
bndstx
arpl
pop
out
iret
pop
daa
adc
cmovg
loope
xchg
repnz
pop
dec
mov
inc
mov
or
leave
stos
je
repnz
out
xchg
test
jge
repz
mov
rcl
xchg
xorl
mov
mov
mov
pop
aam
mov
mov
or
sub
inc
mov
in
mov
in
callw
scas
cmpsl
aas
aaa
insl
push
cltd
into
lea
jecxz
daa
push
clc
testl
mov
cmp
das
int
add
and
xor
pop
push
stos
movsl
add
jo
push
ljmp
or
mov
pusha
push
xor
je
aas
mov
popf
and
mov
push
mov
popf
cmp
pop
js
lods
add
jnp
outsl
xor
movsl
cmp
push
out
jnp
jo
xchg
outsb
test
mov
lods
jmp
jp
inc
jmp
cltd
cmp
into
push
pop
and
loopne
or
add
lahf
js
bound
or
in
push
mov
test
pushf
js
pop
cmp
dec
pop
pop
xchg
dec
ljmp
pop
scas
mov
daa
push
je
adc
int3
lahf
imul
push
mov
inc
mov
outsl
lods
std
or
xor
mov
or
nop
adc
jb
xor
pop
lds
jecxz
imul
shrb
nop
xchg
and
sub
dec
inc
nop
pop
dec
pop
fsubrl
test
mov
loope
push
jb
sub
inc
enter
outsl
cmp
jbe
mov
outsb
xchg
and
pop
and
shrl
push
add
cmp
lods
sub
sbb
fs
dec
adc
push
sub
adc
pop
mov
fsts
pop
push
inc
shr
stc
hlt
outsl
and
lcall
push
sub
test
fs
fs
int
leave
lds
pop
stos
add
mov
xor
cli
adc
je
mov
push
mov
imul
sahf
lret
jmp
and
xor
dec
js
push
jns
mov
les
jb
sbb
push
cld
repnz
mov
repz
rcrb
sub
pop
and
and
js
jnp
scas
imull
lcall
mov
jmp
std
or
insl
ja
cmp
out
fwait
lds
xchg
jnp
sar
add
adc
lods
xchg
cmp
push
push
hlt
jbe
mov
xor
cltd
pop
jmp
xchg
lahf
shlb
cmpsl
lods
outsl
iret
insl
inc
adc
fwait
jecxz
push
xor
jns
repz
xor
movsb
fisttpll
sar
clc
shlb
jns
pop
sub
lahf
mov
xchg
push
mov
out
pushf
movaps
movsb
pop
sub
ljmp
add
cwtl
sti
fiadds
mov
inc
push
cwtl
cltd
ret
xchg
inc
push
test
adc
int
adc
fwait
es
cld
lret
pop
lds
lods
push
fwait
cld
adc
cmp
mov
cwtl
pusha
jae
arpl
sub
gs
in
outsl
adc
fldcw
in
mov
xor
push
jle
add
push
mov
mov
das
pop
mov
sbb
out
cmc
cmc
inc
cs
xchg
pop
sbb
push
test
lret
test
xor
adc
lret
pslld
xor
fsub
fisubs
out
pop
rcrl
mov
cmp
push
lret
cmp
inc
mov
daa
test
mov
push
jg
out
jbe
xor
and
cmp
jl
and
es
aam
dec
dec
jg
mov
adcb
enter
inc
out
sub
push
fmulp
into
addr16
sub
adc
inc
pop
mov
or
into
sub
insb
data16
fsubs
mov
pop
sub
sbb
ret
cs
or
dec
mul
cmpsl
ja
xchg
imul
jecxz
je
enter
xchg
xor
xor
rolb
jae
cs
in
repz
jle
in
or
jbe
dec
insb
sbb
rcll
dec
push
mov
shrb
out
jg
rcll
fisubrs
adc
xchg
adc
scas
lret
addb
orl
jecxz
mov
pop
cmovo
lahf
fists
repz
lahf
adc
inc
jg
xchg
adc
fnstsw
test
pop
insb
dec
or
enter
jmp
add
jle
enter
xorb
pop
inc
and
jne
movsb
bsr
loopne
test
push
inc
inc
fmuls
std
bound
out
movsl
add
pop
jo
ljmp
jae
pop
mov
das
sbb
dec
jl
xchg
sbb
aad
lock
addr16
or
jne
popl
sub
out
in
lahf
in
lret
cli
sbb
loope
inc
and
testl
mov
sub
iret
sub
jle
inc
cmp
in
jge
lea
and
jae
popa
xchg
data16
fisubrs
dec
add
lret
mov
mov
sti
stos
cmp
sti
mov
mov
pop
and
ss
mov
jle
and
sub
mov
fxch
or
inc
push
lods
arpl
cmp
jge
repz
adc
rorb
push
dec
mov
xchg
into
out
pop
cltd
add
inc
lea
cmpsl
cmpsl
pushf
test
dec
pushf
mov
and
enter
lret
mov
inc
dec
add
pusha
test
subl
xchg
insb
ret
cli
xchg
movsb
cmp
gs
testb
jbe
pop
sub
loop
test
push
jmp
jbe
nop
repnz
arpl
push
movsl
fistpll
push
xorb
daa
inc
imul
pop
in
and
mov
fs
xchg
sbb
sbb
cmp
cmp
repnz
je
pop
adc
xchg
arpl
scas
in
sbb
insb
shlb
lahf
mov
xchg
jae
sub
icebp
lock
in
xchg
push
jns
pop
lcall
lret
mov
xchg
or
jns
repnz
ja
push
sub
repnz
mov
scas
xchg
xchg
and
stos
lret
xor
sub
sub
mov
jmp
adc
xchg
xor
addr16
jp
cmc
add
out
pop
and
fimuls
add
in
push
sub
std
cmp
ret
repz
sbb
in
hlt
ljmp
aam
lahf
bound
push
rolb
pop
insb
cld
lret
loop
push
bound
aaa
andb
jmp
pop
jl
imulb
xchg
xor
lods
insb
icebp
or
mov
pop
xchg
push
fs
and
mov
repz
or
mov
loope
sti
in
movsb
insl
dec
aam
jne
lcall
jp
out
outsl
mov
arpl
mov
ret
inc
out
mov
jg
out
push
in
adc
lahf
xor
inc
inc
mov
out
xor
pop
lods
out
xor
mov
jecxz
imul
sarb
bound
mov
xchg
mov
outsb
or
repz
xchg
lods
fucomp
pop
xchg
sub
mov
mov
jl
mov
xor
cmp
inc
sub
or
imul
fists
fmull
xor
loopne
cmp
dec
fwait
mov
shlb
cmpsl
jp
inc
push
sahf
sbbl
shlb
arpl
out
cmpsb
sti
repnz
aas
std
pop
jne
sbb
and
or
cli
testb
mov
mov
sub
xchg
jns
dec
lods
std
mov
pop
sub
cmp
jecxz
mov
pop
enter
sbb
les
jae
aaa
out
test
sbb
mul
jmp
mov
popf
out
push
mov
adcl
mov
enter
sub
shl
fwait
test
mov
cmp
outsb
xchg
xlat
add
lret
idivb
inc
pusha
ss
inc
inc
and
inc
xchg
inc
lods
xchg
adc
insb
pop
jns
adc
add
xor
jle
inc
rcrb
call
scas
mov
rclb
mov
fistpl
les
dec
clc
dec
out
xlat
jl
nop
pop
imul
cwtl
aad
ds
lds
outsl
jle
xor
xlat
scas
hlt
xchg
or
push
push
jns
add
cmp
js
dec
es
jecxz
sub
shl
popa
xchg
push
sub
data16
popa
dec
stc
insb
cmpsb
je
sbb
in
xchg
mov
inc
jle
js
inc
into
rolb
add
repnz
int3
and
sbb
add
test
int3
loop
push
jmp
jb
sbb
fistpll
out
cmp
sahf
xchg
in
add
std
push
mov
inc
iret
int3
mov
fstl
dec
sahf
aaa
push
xchg
lods
mov
movq
leave
and
push
ds
mov
dec
shl
subb
orl
push
mov
imul
pop
into
rcrb
pop
leave
jmp
fdivrl
push
fwait
in
xor
or
leave
jge
xchg
add
cmpxchg
push
je
pusha
int3
rol
dec
shll
jecxz
mov
mov
jno
mov
lea
sarl
in
loope
imul
ret
into
aam
push
pushf
dec
xor
xlat
je
mov
dec
jnp
arpl
pop
push
mov
out
pop
cs
sbb
stc
addr16
mov
sub
in
pusha
cmpsb
cld
xchg
and
mov
repnz
mov
dec
inc
add
xchg
inc
lods
adc
jo
add
cmp
mov
xor
jbe
mov
cli
xor
push
cmpl
mov
call
and
outsl
lea
mov
icebp
stos
out
shll
ds
xchg
leave
inc
movsb
out
mov
xchg
vmread
iret
lock
jle
adc
popf
mov
dec
test
and
mov
leave
fsub
mov
mov
repz
inc
stc
stc
notb
push
jo
call
push
vmovlpd
mov
out
das
faddp
push
fsts
dec
mov
pop
jl
mov
sub
pop
arpl
mov
je
or
xchg
pop
cmp
stos
shll
ret
xchg
gs
xchg
mov
loopne
ss
sub
shrl
scas
ljmp
divl
inc
mov
lods
daa
cltd
push
jae
sbb
popa
filds
jp
test
bound
xchg
dec
fiaddl
xor
rolb
and
push
loope
fidivrl
cmc
jo
lock
jle
loopne
or
adc
cmc
outsl
mov
or
adc
pop
pop
mull
inc
dec
mov
ljmp
xchg
push
jle
xor
add
jle
outsb
mov
and
sub
daa
mov
stos
stos
lods
test
jecxz
out
stos
xchg
pop
mov
aam
ljmp
xchg
jmp
pop
mov
fdivs
xor
cmp
push
shll
pop
imul
adc
pop
cmp
xchg
cmp
insl
cmp
or
std
cmp
out
dec
dec
jnp
pop
dec
pop
xor
push
popf
and
repnz
mov
ret
pop
sbb
xchg
inc
and
dec
xor
jecxz
sbb
stos
mov
mov
jb
fcmove
adc
push
outsl
aaa
push
enter
pop
loope
data16
sub
enter
out
sub
or
inc
outsl
into
adc
sarb
mov
xor
xchg
jbe
mov
aaa
adc
xor
mov
dec
jb
pop
xorl
pop
pop
jns
xchg
aad
pop
push
out
xchg
and
mov
or
dec
mov
fs
xor
and
xor
sti
hlt
int3
dec
mov
shll
fcoms
and
enter
into
pusha
sub
push
aam
dec
or
and
jge
and
and
iret
mov
jmp
fucomip
add
jnp
ss
pusha
or
movsl
or
inc
aad
aas
int
pop
addb
addb
fwait
push
dec
mov
cmp
movsl
daa
ffreep
pusha
jae
add
push
addr16
iret
mov
test
rorb
std
push
xchg
sbb
or
mov
inc
lods
loopne
cmp
lret
jp
stos
fmull
jne
push
inc
jns
stc
fwait
pop
ret
xor
inc
jnp
jnp
xor
xchg
dec
aaa
ds
aam
inc
mov
not
lcall
scas
jmp
fiadds
jecxz
jmp
in
or
stc
addl
xchg
cmpsb
stos
arpl
into
xlat
push
in
sub
and
arpl
popf
jb
idivl
pop
mov
int3
vpaddsw
push
mov
push
nop
lea
lcall
push
iret
lcall
mov
dec
cmp
cld
mov
loopne,pt
imul
mov
jne
int3
mov
loope
es
sbb
es
inc
adc
and
loope
inc
sub
inc
cwtl
dec
add
divl
sub
data16
daa
push
add
add
push
dec
into
pop
cmp
sbb
dec
inc
mov
mov
sbb
iret
lcall
repnz
leave
sbb
sbb
sti
dec
jo
cmc
mov
push
dec
mov
jbe
xchg
pop
mov
scas
dec
fmul
test
imulb
mov
or
mov
aam
addr16
push
xor
sub
dec
and
add
fdivl
clc
xchg
jae
lods
roll
ja
inc
mov
leave
cmc
aas
sbb
pop
arpl
movsl
nop
xchg
arpl
sbb
je
das
sbb
cmpb
rolb
movsl
cs
je
xchg
lock
int3
aas
lret
mov
cmp
sub
js
mov
or
sarb
repz
scas
push
shll
leave
fcoml
xchg
inc
xor
push
pushf
mov
movsl
jb
mov
inc
in
pop
xchg
jp
cmp
movsl
popa
mov
cmpsl
mov
add
in
mov
jge
in
pop
std
cmp
int
pop
sub
iret
pop
test
jns
push
iret
in
rcll
data16
push
jg
adc
cld
addr16
js
imul
sub
scas
test
mov
fucompp
gs
dec
fdivr
lods
ds
mov
pop
pop
sbb
cmp
push
sub
cmpsb
pop
outsb
push
cmp
imul
or
mov
jnp
std
or
xchg
mov
inc
mov
dec
sbb
test
pop
out
std
cmp
or
aas
mov
xchg
and
loopne
jp
gs
pop
xorb
es
sub
sti
sbb
cmp
jmp
lods
xchg
dec
scas
shrb
adc
push
lea
pop
clc
or
dec
sub
mov
sub
rcrl
push
and
es
jg
cmp
movsb
sub
jns
mov
insb
fcmove
add
cmp
ret
or
pop
add
shll
xchg
mov
cwtl
mov
xor
fsub
cmp
push
cld
movsb
cmc
decl
and
arpl
xor
lret
cmp
daa
ljmp
das
popa
jl
mov
cmpsb
jns
xchg
ds
repz
push
call
data16
and
cmpsl
cmpsl
xchg
mov
lcall
adc
iret
pop
pop
mov
sti
push
push
lahf
add
sahf
adc
mov
mov
mov
add
mov
call
sbb
xchg
mov
mov
imull
outsb
cmpsl
add
fucomp
or
jg
sbb
stos
fbld
xor
pop
adc
xlat
pop
ljmp
mov
mov
lea
lea
test
jmp
mov
test
cmpsb
imul
or
sbb
push
icebp
xchg
shl
sub
aam
adc
inc
fucomip
dec
int
add
or
cmp
test
mov
cmp
dec
xchg
in
dec
jb
push
insb
sub
push
push
or
pop
int
xor
jne
nop
add
jge
dec
insb
out
pop
inc
xor
inc
sarl
rcl
popf
in
cmp
aaa
outsb
fdivr
ss
loope
mov
jle
in
popa
inc
xor
mov
cld
shl
sbb
out
xchg
lds
xor
cmp
iret
mov
xor
jecxz
out
cmp
cmp
push
mov
aam
pushf
les
xor
test
mov
xchg
lds
xchg
dec
xchg
inc
push
fstl
fdivrl
data16
mov
xor
xor
fsubrl
sti
loope
jecxz
mov
or
outsl
hlt
xor
inc
cli
cwtl
aaa
cmp
sbb
sbb
jb
and
and
xor
jecxz
fcompl
cmpsl
mov
sbb
pusha
and
nop
mov
rcrb
adc
out
jecxz
arpl
cltd
sbb
xchg
popa
jge
xlat
ja
and
inc
push
sub
or
cs
dec
dec
out
ja
push
adc
lock
xchg
sbb
fldenv
push
ret
popa
pop
dec
mov
cmp
movsl
ss
dec
lret
adc
inc
pusha
mov
imul
ret
stos
pop
push
or
aam
clc
lahf
and
notb
sub
and
mov
dec
leave
pop
pop
aaa
je
and
rorl
lret
mov
fdiv
js
or
lods
push
xchg
add
stc
dec
mov
int
cmc
in
fdivrl
inc
xchg
sub
fildll
pusha
xchg
add
sub
dec
pusha
mov
adcb
xchg
test
dec
push
sbbl
mov
xchg
jae
xchg
push
and
cmp
cwtl
insl
xchg
cwtl
mov
dec
xchg
movsl
pop
mov
lcall
dec
hlt
and
cmpsb
negb
subl
mov
jecxz
movnti
inc
in
nop
jbe
cmp
sbb
mov
dec
pop
leave
jmp
push
repnz
cmpsb
jae
lds
sub
jae
cmp
and
movsb
cmc
bnd
mov
cmp
popa
das
mov
sub
jp
arpl
ror
pop
scas
jbe
andl
sti
shlb
jl
stc
push
stc
sti
fiaddl
lea
and
sbb
xchg
sti
sahf
inc
outsb
call
dec
push
addr16
movsb
sub
xor
loop
inc
xorb
mov
scas
jp
popf
xchg
in
test
pop
jmp
push
leave
repnz
incl
addr16
sbb
mov
stc
lcall
cltd
push
mov
sub
mov
dec
sbb
aad
xor
std
cmp
push
dec
lahf
daa
push
ds
sbb
addr16
jmp
mov
fs
xor
outsb
add
mov
aad
test
lahf
fimuls
pushw
cmp
test
sbb
jmp
stc
fwait
jno
mov
fdivrl
pop
mov
dec
lcall
ret
fcoms
fdivs
cmp
sub
rolb
xchg
decb
nop
aam
jmp
daa
inc
jnp
imul
push
push
imul
sub
sub
adc
mov
in
out
jmp
xor
sub
int
ret
fcomps
sahf
mov
insl
ret
add
inc
shlb
je
mov
pop
pusha
repnz
sub
adc
jecxz
cld
test
out
es
movb
mov
mov
xor
fiadds
pop
jo
dec
dec
pop
push
or
loop
mov
subb
rolb
pop
rorb
test
inc
mov
xor
push
xchg
out
sbb
pop
stc
xor
lods
test
and
aad
ljmp
jb
sbb
mov
sub
mov
mov
sahf
nop
gs
outsl
xor
clc
and
and
add
and
xchg
imul
nop
and
cmpsb
add
dec
jmp
push
pushl
andb
add
rcrl
xlat
sahf
mov
mov
xor
sbb
add
mov
outsl
stc
or
xchg
insl
loopne
pop
insb
dec
flds
pushf
addr16
adc
icebp
fldcw
aam
imul
or
out
adc
test
xchg
adc
jmp
push
mov
or
outsl
xchg
pop
gs
sbb
in
add
lret
add
jp
inc
inc
clc
adc
pop
xchg
and
call
aas
xor
xchg
int3
fimuls
outsb
xlat
sbb
loope
inc
push
pop
pop
rcrl
leave
scas
sub
add
popa
js
loopne
ss
push
mov
mull
jl
rol
mov
lret
out
jne
and
push
shr
fdivl
fmull
xlat
movsl
js
adc
add
cmp
xor
sbb
and
jl
sahf
cmp
addb
inc
insb
push
enter
cmpsl
adc
lahf
pushf
and
mov
ret
ss
pusha
out
pop
subl
out
repnz
test
mov
lret
mov
repnz
cld
out
jnp
sub
or
xlat
call
shll
test
shl
clc
push
xor
cld
mov
add
out
pop
dec
or
rcll
xorb
movsl
cld
std
xor
sub
je
push
xor
xchg
sub
pop
mov
cmp
adc
dec
xlat
jle
inc
dec
push
call
cli
mov
inc
push
outsl
in
sbb
insl
inc
ret
dec
sbb
or
fs
add
xchg
jb
jae
mov
sti
in
jne
popa
xchg
jb
xchg
stc
adc
stc
add
jb
or
jle
clc
sub
pop
ss
mov
repz
out
push
fimull
cmp
sahf
xchg
sbb
sub
and
xchg
bsr
inc
dec
adc
les
push
xchg
mov
jl
mov
outsb
cli
scas
in
mov
mov
mov
push
inc
fimull
push
pop
popf
std
inc
sub
in
arpl
out
mov
fsub
cwtl
into
pop
adc
pop
sbb
mov
shlb
outsb
mov
mov
xchg
pop
sbb
mov
movsb
aam
inc
cmp
pop
cmp
and
and
iret
loopne
dec
sbb
xchg
xchg
pop
mov
sub
cmp
mov
and
dec
xor
jae
addb
mov
divl
inc
mov
sbb
sub
icebp
rcrb
mov
rcrb
in
testl
out
arpl
jno
mov
xchg
lods
jns
imul
and
push
jno
mov
decl
inc
pop
sub
enter
jb
ss
decl
jge
leave
fcmovnb
mov
dec
int3
jae
lods
inc
ret
and
loope
xor
xor
mov
inc
xchg
aad
sub
xchg
sub
outsl
sbb
inc
repnz
dec
fsub
cmp
jne
and
inc
das
mov
sub
jne
xchg
adc
and
imul
pop
icebp
stc
push
hlt
cltd
divb
in
pushw
jno
jmp
push
pushl
mov
and
mov
fwait
dec
cmp
das
lods
fs
daa
dec
lods
icebp
icebp
jns
pop
in
mov
mov
scas
in
outsb
dec
jmp
or
adc
jne
jno
adc
lcall
inc
or
into
xchg
xor
sub
ljmp
pushf
pop
push
xchg
loopne
enter
loope
int
lcall
push
loop
lret
cli
pop
mov
lahf
lret
mov
nop
stos
or
pop
pop
cmp
xchg
ficoms
and
adcb
jmp
cwtl
sub
cmp
cli
sar
daa
fidivs
sbb
shll
pop
inc
decb
outsb
and
xchg
sbb
add
mov
sbb
jo
jns
in
in
or
cmpl
ljmp
mov
xchg
loop
xor
mov
pop
jecxz
fs
popa
pop
or
cmc
fadds
popf
push
mov
inc
mov
int3
hlt
cmp
xor
inc
inc
mov
sbb
lods
xchg
jl
fsubp
push
mov
es
xor
daa
xchg
adc
iret
sti
mov
adc
test
outsb
imul
adc
outsl
negb
sub
or
mov
call
mov
cli
mov
dec
lcall
jle
push
imul
xchg
push
push
insl
push
rep
jecxz
fmull
rclb
loope
sarl
jo
in
dec
add
mov
pop
adcl
push
out
sbb
test
sbb
lods
push
mov
loopne
mov
les
movsb
xchg
filds
popf
js
cmp
xchg
dec
sub
xor
lods
stos
sbb
das
pop
mov
mov
int3
xor
push
sub
je
sub
ja
sti
push
push
push
xlat
mov
ficompl
or
mov
push
movsl
xor
xchg
inc
mov
imul
out
pop
xchg
scas
aad
xchg
pop
shrb
movsl
fsubrl
pop
filds
lret
sub
arpl
stos
adc
cmc
xchg
ljmp
mov
je
push
jl
into
adc
stc
les
jbe
andb
sti
mov
pop
mov
xor
inc
jg
and
cltd
out
enter
out
adc
sub
sbb
and
mov
adc
outsb
xchg
loopne
lea
push
pop
lret
sub
in
stos
pop
in
xor
sub
fstpt
xchg
jno
std
mov
pop
mov
repnz
mov
lock
pop
scas
and
push
pop
xor
pop
xor
scas
push
test
inc
movsl
lcall
fwait
and
popl
cmc
jmp
dec
adc
test
and
rcl
push
or
jno
scas
dec
mov
movsb
leave
and
adc
push
push
and
movsl
mov
add
pop
std
das
xchg
cmp
xor
stos
mov
mov
xor
pop
pop
push
lock
and
enter
sub
cmp
cmp
lret
jp
mov
in
jb
xchg
mov
push
xchg
sbb
inc
out
cmp
rep
movsb
and
cmp
xor
mov
jo
jmp
les
aaa
mov
test
scas
mov
mul
cmc
rol
pop
ss
movb
or
sub
popf
repz
add
sar
mov
dec
call
pop
data16
lock
sbb
mov
rorl
data16
sub
pop
mov
in
in
mov
push
xchg
lret
dec
xlat
aaa
data16
pop
mov
jne
out
pop
scas
mov
notl
jmp
xchg
das
pop
out
and
ja
sti
bound
roll
and
jge
out
cltd
xchg
push
outsb
fsts
sub
pop
jno
clc
rorl
and
mov
pop
popa
lret
push
out
lock
sbb
imul
jl
aas
lock
sub
out
fwait
cld
xchg
xor
cld
jge
aad
pop
inc
insl
add
mov
jo
pop
fisubs
pop
test
inc
jo
sbb
fs
mov
pop
mov
dec
inc
popf
inc
ret
not
and
jp
popa
cmp
sbb
or
jg
or
test
lods
pop
push
mov
lds
add
stos
lods
sahf
sbb
dec
cmpl
jbe
add
lock
adc
negl
inc
lods
and
xchg
inc
adc
orps
add
pusha
add
cmpsl
cld
stos
jo
mov
pushf
cmp
dec
or
cmp
enter
test
and
pushf
mov
cmp
sbb
stc
inc
xor
bound
cmp
mov
repz
xchg
cmp
xlat
mov
lea
push
rcrb
push
mov
mov
xchg
inc
push
jl
push
mov
cld
cli
faddl
lea
push
xchg
adc
add
push
hlt
fdivl
ja
call
je
subl
pushf
jae
pop
imull
cmp
arpl
mov
mov
cmpb
or
push
out
movsl
jmp
dec
test
jmp
inc
out
adc
jnp
loop
daa
scas
leave
sub
and
in
aaa
ror
loopne
add
sub
cwtl
insb
insl
xchg
outsb
aas
xchg
add
fs
leave
push
fcoms
add
pop
cmpsl
cmp
sahf
jns
sbb
inc
orl
mov
arpl
jne
gs
mov
dec
shrb
pop
jae
pop
lahf
imul
pop
dec
aaa
jge
jo
sub
loop
jp
jno
cmp
ss
repz
xchg
push
adc
inc
mov
cmpsl
and
test
repnz
in
sbb
adc
and
pop
outsl
cmpsb
mov
lcall
scas
push
fcoms
das
imul
cmpsb
dec
scas
sbb
pop
notl
dec
add
pop
out
imul
jb
outsb
lea
aas
adc
add
es
jae
mov
addr16
add
fisubl
ds
sbbl
mov
es
lret
adc
dec
mov
adc
std
sbb
stos
mov
mov
test
je
lods
sub
es
loopne
or
xor
inc
lods
mov
add
jb
pop
mov
out
fidivl
in
pop
xchg
inc
dec
xchg
pop
lods
sub
aam
xchg
pop
lahf
fisttpl
cwtl
in
sbb
insl
cmp
jnp
bound
lock
dec
add
xchg
sub
mov
dec
lret
int3
or
scas
add
inc
jmp
ret
mov
hlt
mov
out
or
call
std
adc
xchg
jp
push
xor
xchg
scas
mov
gs
pusha
repz
mov
nop
xor
push
adc
ljmp
push
and
inc
idiv
xor
and
mov
pop
mov
ja
cmpsl
loopne
jle
xor
pushf
insb
add
jg
jp
lea
xorb
scas
mov
cmp
mov
gs
xor
xlat
mov
jl
cmp
adc
mov
push
sub
cmc
fisttps
xchg
inc
fcmovbe
rolb
xor
insl
pushf
out
lds
xorl
inc
cmovns
pop
add
mov
mov
cmc
push
clc
hlt
call
es
or
jl
inc
outsl
pop
cmp
mov
mov
testb
out
test
sub
aad
push
sbb
push
aam
inc
inc
push
loop
cmp
or
jne
in
dec
sub
lock
jle
insl
popa
int
pop
mov
mov
aad
xchg
xor
scas
cltd
popa
inc
lret
cmp
hlt
push
loope
jae
mov
mov
rcrb
lret
mov
test
xor
imul
lret
aas
cmp
fdivrs
push
stos
push
and
inc
xchg
outsl
pop
mov
and
mov
mov
xor
dec
mov
push
divl
pop
jg
push
lret
fsubr
andl
js
mov
xlat
cmp
popa
shll
push
mov
sti
stc
mov
or
repz
jg
popf
jne
lcall
inc
icebp
sbb
push
mov
add
cmc
in
movsb
ljmp
pop
xor
sbb
xchg
fs
adc
mov
mov
out
ss
es
testb
pop
js
lea
sbb
stos
mov
sub
pop
dec
in
or
xor
fcom
aam
sbb
lahf
jns
sti
pop
mov
and
mov
push
mov
in
out
ret
out
push
in
jo
xchg
sub
cmp
dec
cmpl
std
adc
sti
dec
out
repnz
stc
js
inc
je
cmp
mov
add
or
mov
jne
ret
ret
stos
xor
xor
jne
jge
sbb
test
in
push
insl
pop
adc
xchg
js
fwait
adc
or
sbb
and
add
mov
in
repnz
fisubrl
add
fs
xchg
gs
xchg
sub
ret
das
push
xlat
xchg
push
mov
sbb
ret
imul
pushf
fidivl
mov
xchg
jle
adc
divl
fiadds
je
xchg
add
push
or
sbb
dec
fmull
dec
loopne
call
cld
aas
mov
or
cmc
aam
adc
sub
mov
addb
repz
pop
pop
pop
call
jnp
and
adc
mov
mov
test
xchg
gs
aaa
addr16
and
jb
aad
jl
test
xor
aaa
mov
push
pop
sahf
ret
jb
jp
cltd
inc
jecxz
popa
daa
mov
mov
pop
lods
add
mov
leave
or
push
aam
jge
jg
loop
adc
jnp
ficompl
cmp
pop
inc
xor
aaa
add
mov
push
xchg
add
push
mov
es
loope
jnp
rcll
clc
js
repnz
and
or
cmpl
ret
icebp
je
xchg
jbe
loop
rorb
mov
mov
stc
in
and
lgs
xchg
xchg
sub
pop
jne
cmpsl
mov
adc
add
push
cmpsl
in
xchg
and
jmp
test
mov
mov
cmc
jmp
in
push
lahf
mov
pop
or
fs
mov
cmp
add
cmp
cltd
push
jle
mov
adc
xor
cs
push
test
dec
popf
sbb
dec
fnstsw
pusha
mov
sbb
repnz
and
shrl
fs
mov
pop
dec
cmpsl
sub
mov
sub
jo
imul
arpl
sub
iret
xchg
aam
sub
jle
test
fiadds
out
jne
add
fiadds
jecxz
pushf
adc
sbb
leave
aaa
nop
pop
mov
and
push
pop
arpl
enter
jmp
dec
add
and
mov
pop
sub
aaa
rorl
adc
pop
pusha
pop
push
iret
es
add
adcb
fildl
bound
sbb
jp
xor
or
jo
test
pop
popf
arpl
sbb
push
daa
mov
cmp
ss
mov
pop
das
fisttpll
fmull
int
int3
insl
sub
adc
enter
or
ljmp
jmp
into
imul
mov
popa
jp
dec
popf
dec
and
adc
cmpsl
inc
bnd
js
jnp
or
mov
ja
push
dec
punpckhwd
sbb
inc
dec
loop
adc
out
jl
je
jnp
pushf
enter
xchg
mov
mov
adc
and
add
add
scas
in
das
ljmp
mov
xchg
jnp
pop
sbb
stos
jecxz
and
and
xor
clc
and
and
jno
cmp
sbb
push
dec
in
dec
mov
bound
jmp
dec
inc
add
mov
xchg
xchg
jp
mov
test
mov
pop
roll
or
nop
cmp
push
orb
repz
jae
outsb
mov
ljmp
push
pop
daa
std
xchg
icebp
adc
xchg
cltd
mov
inc
in
les
call
les
jae
test
sbb
jo
mov
out
test
in
xchg
popf
inc
mov
or
loop
pop
sbb
push
xchg
xchg
inc
add
jg
or
mov
push
mov
aad
test
adc
popa
es
int3
xchg
into
dec
cmp
mov
in
adc
and
cwtl
dec
xor
jb
aad
daa
sub
xchg
int3
jae
sbb
cwtl
mov
arpl
adc
lock
cli
cmp
fdivrl
in
sbb
xchg
dec
mov
jo
cmp
jmp
dec
in
lahf
gs
inc
lock
hlt
pop
lahf
fwait
int
push
and
arpl
dec
cmp
jecxz
aad
insl
ret
sti
cmp
mov
mov
pusha
pop
shlb
add
adc
jecxz
xchg
mov
and
out
lods
xchg
out
mov
leave
xchg
movsb
pushf
inc
xor
clc
mov
notl
aas
in
cmpsl
jp
sub
mov
mov
test
sub
cmp
iret
addb
adc
mov
mov
rolb
call
push
mov
imul
scas
xor
icebp
push
mov
imul
shlb
mov
repz
int
out
and
dec
aaa
movsl
adc
xchg
aam
or
std
push
cwtl
clc
dec
mov
nop
es
mov
cld
lods
pop
pop
jmp
mov
mov
mov
bound
and
add
add
ret
cmp
outsl
push
mov
cmpsl
scas
adc
push
mov
in
lods
jl
jae
test
out
xor
cmpsb
dec
fisubrl
nop
dec
push
mov
jge
pop
stos
shrl
call
sub
ret
insl
cmp
arpl
notb
cmp
sbb
dec
and
cmpsl
add
jb
out
add
cld
dec
aas
aas
add
jg
icebp
orb
mov
pop
lea
addr16
mov
loopne
sbb
mov
jge
mov
test
imul
dec
mov
scas
push
and
add
mov
xor
out
es
ret
shl
or
jae
out
daa
cmc
test
xchg
lret
rcrb
jecxz
jmp
adc
insb
icebp
sub
mov
inc
add
and
ja
sbb
pop
test
dec
push
mov
pushf
stos
jp
xor
inc
mov
arpl
jmp
mov
mov
out
add
mov
xchg
xchg
mov
inc
mov
dec
mov
pop
sbb
mov
test
push
sub
fisttpl
mov
xchg
decl
out
call
sbb
add
inc
popf
fsubrs
add
stos
cld
and
ds
bound
call
cmp
adc
testl
xor
loope
ss
fnstsw
inc
or
stos
outsb
popa
adc
push
fstps
addl
push
lds
mov
mov
in
mov
xchg
sub
call
or
sub
call
xchg
lea
cmp
test
push
sub
or
push
outsw
daa
lret
sti
cmp
xor
xchg
mov
pop
aas
or
push
repnz
adc
insb
and
aad
push
push
pop
push
mov
xor
sub
dec
in
sub
test
jl
adc
sub
xor
aas
out
into
pop
insb
sti
outsl
adc
mov
dec
adc
inc
int
xor
add
in
ss
pop
mov
inc
or
mov
sbb
push
or
andb
imul
pop
push
push
fldl
std
add
sbb
cld
push
push
ret
sbb
xchg
mov
dec
insl
push
or
jnp
jp
cmpsb
leave
sbb
cs
inc
mov
mov
mov
adc
and
xor
cmp
cli
or
mov
daa
shlb
xor
jmp
cmc
das
mov
jne
dec
and
pushf
add
cmc
les
pushf
test
out
lock
into
mov
jg
or
cli
mov
jmp
repz
movsb
or
clc
lahf
popa
and
add
movsb
addl
jb
in
xchg
popa
fs
sbb
fwait
xorb
sub
inc
cwtl
jne
out
shll
popa
xor
jbe
lahf
xchg
mov
cmp
or
scas
dec
sub
pop
adc
in
in
outsb
push
xor
lods
push
test
sub
or
sbb
insl
cmp
lods
xor
sbb
test
divb
jne
aas
inc
dec
loop
out
jbe
push
leave
jnp
or
lds
adc
nop
mov
adc
lds
rclb
fmul
cmp
or
and
mov
push
push
xchg
xchg
in
ds
cmp
adc
cwtl
and
insb
cmp
xlat
aas
xchg
lea
test
test
repz
jnp
aam
clc
lret
xchg
test
mov
ja
les
sub
cmpsl
or
dec
push
push
pop
mov
push
mov
inc
insb
jnp
push
mov
push
and
mov
jl
fsubrl
push
arpl
inc
out
clc
mov
test
inc
pop
sti
popf
xchg
sub
mov
mov
std
and
adc
mov
gs
int3
sbb
fcos
cld
inc
inc
ljmp
xchg
cmp
inc
push
leave
jae
loop
scas
xor
shr
fstps
loopne
aam
xor
jge
add
outsb
sub
inc
shr
lahf
add
dec
sti
arpl
mov
mov
movsb
lds
cmp
enter
jbe
inc
inc
push
stc
push
dec
pushf
mov
cld
and
icebp
mov
jae
xchg
pushf
jecxz
xlat
and
outsb
xchg
jle
xlat
cmp
mov
and
or
cld
decb
out
xor
scas
in
sub
hlt
and
add
and
cmp
pop
lret
jl
or
cmpsb
pop
pop
fsts
rolb
nop
aam
and
or
in
jo
pusha
pushf
jo
jno
cmpl
pop
or
lahf
mov
push
cld
xlat
pop
bound
cld
push
sbb
dec
mov
ret
aad
nop
mov
hlt
sub
negl
in
nop
repz
adc
pop
adc
cmp
pop
sti
and
inc
sbb
xor
push
or
xor
xchg
xchg
and
lcall
xchg
shl
hlt
incb
sub
pop
mov
jecxz
pop
xor
xchg
out
or
xor
mov
mov
fsubl
into
jp
out
mov
xor
sub
adc
sbb
push
fsub
mov
out
cmp
dec
sub
adc
mov
jg
mov
das
daa
cmp
js
jle
dec
aaa
jge
ret
and
xchg
cmp
add
scas
fists
addps
and
mov
sub
sti
xor
xchg
test
clc
fwait
mov
aam
fsubs
push
les
push
mov
ds
pop
add
sti
pop
aam
shrl
rolb
pop
jp
test
push
call
movsb
icebp
cmpsb
jmp
jno
fs
mov
sub
jb
sahf
add
add
insb
sbb
jg
dec
mov
mov
cmp
stos
xor
shll
or
shll
dec
hlt
ret
addr16
repnz
ret
scas
outsb
out
movsb
js
push
inc
sbb
pusha
lock
and
bound
mov
mov
fsub
jb
push
cmp
mov
cwtl
inc
mov
xchg
dec
jmp
imul
cmp
sub
sahf
scas
test
xor
out
pop
inc
fsubr
add
mov
xchg
xor
jno
sbb
jno
push
out
jl
jecxz
xchg
movsb
xor
pushf
jge
stos
data16
call
outsl
repz
pop
clc
loop
mov
jle
fsubs
jecxz
lock
jo
mov
mov
xor
cmp
adc
test
pop
out
jo
xor
adc
push
js
leave
rcll
repnz
in
push
lahf
mov
or
pusha
sarb
imulb
push
lods
rorl
xchg
addl
aaa
pop
loop
arpl
dec
pop
xlat
xchg
mov
xlat
sti
dec
or
sub
mov
pop
rolb
mov
jbe
insl
outsl
add
pop
out
pop
pop
data16
test
loop
iret
jne
ljmp
inc
sbbl
push
sub
jg
or
lock
lret
cltd
aaa
enter
or
fisubrs
or
pop
push
inc
adc
into
cmp
mov
je
imulb
jg
mov
lret
int3
cwtl
outsb
cld
inc
test
int3
jmp
bnd
sbb
xor
aaa
dec
popf
leave
in
loope
mov
jb
mov
sub
cmp
inc
mov
les
fidivl
inc
enter
stc
repnz
lahf
subb
mov
push
ds
jnp
cmp
inc
cmc
lods
cld
js
insb
add
sbb
lock
clc
xchg
jl
outsb
dec
inc
cmc
pop
xchg
outsl
test
and
mov
cli
rcrl
call
sub
test
dec
cs
repnz
and
test
xor
xchg
clc
jno
jo
lock
ljmp
test
sar
icebp
ljmp
hlt
pop
dec
xchg
and
imul
mov
pusha
sbb
les
dec
mov
add
xor
int3
inc
xor
push
push
jne
sub
dec
cli
ja,pt
push
dec
dec
arpl
push
jno
nop
jb
add
pop
pushf
push
dec
shll
mov
icebp
xchg
insb
popl
xchg
rclb
add
jno
data16
or
mov
js
movb
cmp
add
arpl
leave
inc
push
fnstsw
test
xchg
loope
ror
rcrb
fiaddl
xchg
jge
xchg
xor
xchg
pop
sub
pop
das
insb
pushf
addl
lcall
mov
dec
push
test
xlat
xlat
inc
into
inc
mov
adc
sub
mov
adc
fwait
mov
pop
cmp
lret
sbb
rorb
sub
xrelease
insl
loope
xor
sahf
lods
jmp
test
js
popa
cmp
add
and
test
out
cld
mov
push
jmp
orb
and
out
lahf
fcmovnb
jnp
pop
in
fdivrl
dec
insl
mov
mov
add
pop
add
pop
jo
outsb
cmp
addb
stos
jns
lods
push
hlt
xchg
lock
bound
arpl
iret
cmpsb
aaa
or
mov
or
test
test
enter
test
fwait
adc
push
adc
lock
mov
inc
sub
mov
inc
fidivrs
daa
mov
leave
shl
ss
mov
pop
fcmovbe
in
dec
push
cld
arpl
sbb
cmp
arpl
sub
xchg
outsb
sbb
xor
fistpll
push
push
das
shl
pop
pusha
cld
int3
es
or
shr
pop
jp
icebp
xchg
or
inc
push
and
push
ss
inc
mov
cmpsb
cld
cmpsb
dec
test
loope
or
lods
mov
es
cmpsb
out
cld
inc
xorb
lcall
mov
sub
movsl
cli
mov
adc
adc
xchg
nop
mov
cmpsb
pop
js
ror
shlb
adc
sahf
cwtl
mov
dec
and
lods
add
out
sub
mov
or
xor
jo
add
test
inc
push
jo
fnstcw
in
fldt
js
cli
ds
rcl
or
js
sub
jg
mov
fs
mov
mov
ja
mov
aam
add
ds
mov
mov
and
shrb
jle
test
xchg
add
lods
mov
call
or
adc
jo
rcl
lock
mov
jne
leave
cmp
push
mov
adc
cmpsb
push
push
xor
into
sub
ja
jno
push
imul
clc
int
mov
test
lods
mov
push
xor
push
and
cli
enter
push
xchg
ret
or
mov
imul
imull
cmpl
call
clc
in
ret
xor
rolb
sub
mov
mov
and
cmpsb
sbb
leave
test
ds
mov
mov
mov
andl
mov
mov
mov
call
xor
into
jnp
test
sbb
insb
mov
and
push
idivl
fwait
push
aad
sbb
or
sbb
mov
fldenv
scas
pop
outsl
nop
lods
repnz
xchg
inc
call
sub
xchg
mov
inc
sbb
sub
jge
mov
adcl
inc
inc
outsl
scas
sbb
cwtl
dec
adc
stc
sbb
mov
test
mov
sub
sahf
dec
testl
inc
dec
inc
hlt
xor
mov
mov
pop
mov
push
repnz
or
mov
add
add
in
repz
jl
ss
je
fidivrl
popa
push
flds
fldenv
pop
cli
cwtl
mov
mov
dec
data16
daa
jmp
test
sbb
lret
imul
mov
loopne
inc
mov
xchg
inc
xchg
pop
lret
stos
pop
call
cmpsl
andb
rcrb
fisubrl
daa
add
es
sarb
js
or
cli
test
das
mov
adc
clc
rorb
imul
xchg
mov
int
imulb
lds
pushf
sub
pop
lret
fistpll
cmp
push
jne
cmp
das
xchg
insl
pop
cli
push
rcrb
jecxz
ret
aas
mov
popa
push
cmp
mov
add
cmc
rorl
std
and
mov
and
jb
jb
inc
sub
ds
pop
sub
testb
xor
ss
add
mov
clc
mov
or
iret
add
fisubrs
mov
addr16
out
pushf
js
xorb
or
out
add
mov
hlt
push
or
dec
fsts
xor
cld
pop
arpl
mov
imulb
xchg
sbbl
mov
cs
inc
in
mov
fwait
add
pop
adc
arpl
lret
rcrb
imul
push
and
or
mov
push
out
push
js
pushf
aad
mov
imul
jge
fwait
xchg
push
and
fwait
pop
mov
clc
pop
loopne
sbb
mov
sarl
aaa
xor
popf
xor
pop
cmpsb
out
int3
stc
loope
sbb
xor
jne
xor
adc
and
and
shll
icebp
xor
mov
stc
lcall
test
imul
mov
jns
pop
xchg
mov
ds
push
enter
xchg
jge
mov
add
push
jp
jecxz
sbb
jns
push
fs
jb
mov
adc
test
xchg
stos
xchg
pop
mov
xchg
mov
mov
and
push
dec
imul
sbb
jg
jge
imul
add
inc
adc
in
xchg
ror
pushf
inc
je
andb
xor
sbb
cmp
dec
xor
inc
cmp
mov
xchg
stos
dec
fsubrl
mov
inc
int3
out
das
adc
jne
pop
mov
push
leave
xchg
scas
ds
lods
jae
jmp
adcb
jmp
mov
add
mov
lahf
or
xor
clc
lea
stos
test
mov
scas
push
dec
dec
mov
out
lret
lret
ret
pushf
lret
mov
leave
bound
sarl
arpl
add
add
push
pop
sbb
mov
inc
xor
dec
jecxz
jp
pop
repnz
sbb
lea
add
xor
xchg
fstpl
or
out
pushf
dec
sub
pop
mov
push
add
in
inc
sti
inc
mov
push
add
pop
mov
push
mov
lea
add
repnz
add
jmp
nop
lods
lret
in
cmp
outsb
add
sub
jecxz
movsb
aaa
jecxz
out
in
cmp
xchg
and
push
aam
or
out
mov
imul
repnz
jo
pop
cmpl
adc
xchg
push
std
aam
jge
das
into
daa
movsb
jp
or
jbe
xor
addr16
and
sbb
inc
mov
ret
fwait
jle
scas
and
dec
filds
sbb
ror
mov
aaa
sbb
pop
mov
fdiv
add
xchg
shll
mov
leave
pop
xor
or
dec
jb
jno
mov
push
adc
adc
pop
mov
shll
fsubrl
add
aad
and
pop
leave
sub
addl
imull
ja
mov
pusha
mov
decl
enter
xor
sub
cmp
mov
sbb
cmp
outsb
sbb
push
dec
fnstcw
and
cmp
testl
pusha
fsubrl
stos
inc
pusha
xchg
pop
outsl
push
and
es
loopne
mov
movsl
cmp
scas
adc
gs
sbb
adc
lock
ja
imulb
or
call
dec
or
pushl
jns
dec
jb
ds
test
ret
sub
xchg
mov
pop
sbb
jl
aad
lods
and
push
nop
add
dec
stos
rcrb
outsb
pushf
jne
insb
sqrtps
subb
ret
cmc
pop
pop
pop
rcrb
or
int3
sub
aad
scas
xor
pushf
cmp
or
dec
jae
fdivrs
or
and
pop
lahf
jne
out
dec
in
jge
rcrl
lcall
add
push
movsl
repz
push
shll
push
sbb
mov
push
mov
xchg
fdivrs
adc
cwtl
repz
test
sub
or
pop
mov
add
jg
sbb
int
cmp
lods
jl
sub
adc
test
push
aam
loope
andnps
data16
cmp
jmp
sbb
mov
mov
or
lds
cwtl
mov
sub
jp
inc
lock
jge
loope
hlt
shll
test
loope
xchg
call
dec
nop
jne
add
aam
sbbl
test
adc
xchg
and
rol
xchg
jb
mov
dec
mov
mov
shrb
lods
jnp
xchg
shr
mov
in
iret
into
out
xchg
es
push
lcall
dec
dec
roll
shlb
push
mov
lret
ljmp
addr16
roll
inc
pop
orl
fwait
add
cmp
push
imul
jne
sub
stos
cmp
xor
xchg
das
rol
hlt
mov
loope
and
mov
test
mov
repnz
adc
push
mov
ljmp
hlt
jecxz
test
mov
movsl
and
aas
mov
sbb
push
and
nop
pop
dec
jns
imul
push
fld
mov
xchg
mov
fcoms
dec
jbe
rcrb
lret
mov
pushf
sar
inc
popf
xor
mov
movsb
push
aad
repz
dec
rcr
addr16
fs
jle
cmc
ret
and
or
pop
sub
sub
cmp
mov
mov
pop
or
add
xchg
test
imul
mov
and
mov
sti
or
rclb
call
iret
mov
out
adc
xor
mov
cwtl
xchg
flds
popa
sbb
jns
sub
jns
sbb
arpl
add
adc
push
add
sbb
cmp
sub
or
pushf
or
std
jle
push
and
add
clc
and
js
cmpsb
dec
jmp
rcll
add
aas
stos
nop
jp
test
cmpsb
mov
pop
sarb
mov
aad
or
ja
xor
add
push
mov
xor
stos
pop
movsb
pushf
sbb
icebp
xorb
insb
out
rcrl
mov
je
pusha
and
ret
xchg
or
push
add
cmpsb
mov
lcall
jg
gs
popf
mov
inc
rcl
mov
inc
add
out
add
jb
adc
sub
ret
mov
jg
add
incb
mov
jno
cmp
xor
sub
out
inc
mov
loop
hlt
sahf
inc
dec
inc
mov
scas
fcompl
icebp
and
push
mov
test
ret
je
filds
adc
inc
int3
scas
fstp
cwtl
sbb
dec
inc
sub
xchg
push
fnstsw
add
iret
cwtl
adc
ds
dec
lret
or
lods
xchg
imul
inc
add
into
clc
jp
fidivrl
subb
adc
data16
lcall
repnz
lods
mov
lahf
or
stos
xor
es
mov
lahf
jmp
cmp
inc
cmpsb
pop
jp
stos
xchg
in
sub
not
mov
orb
xchg
jg
jno
sahf
mov
cmc
fcom
mov
cmp
int
xor
xor
enter
div
cmp
mov
or
xor
stos
add
jb
jmp
sbb
mov
outsb
add
stc
aad
add
es
fdivrl
and
mov
clc
push
movb
aam
sbb
lcall
adc
pusha
push
movq
xchg
xchg
and
out
das
jl
movsb
adc
jns
dec
js
rcrb
dec
aam
fisubrs
push
mov
xor
jp
jl
push
xchg
add
inc
adc
mov
fcompl
fsubrl
lret
mov
jnp
lock
out
mov
dec
inc
jno
adcb
enter
cmpsb
mov
filds
add
aad
dec
mov
sub
call
scas
mov
aad
insl
pop
pop
pop
movsl
stos
xor
xchg
repnz
inc
mov
mov
scas
int
adc
xor
dec
xchg
decl
mov
mov
inc
fldenv
addl
mov
push
es
test
outsb
push
or
and
xchg
mov
repz
nop
mov
adc
pushf
adcb
cltd
xor
fcmovnu
mov
outsb
lock
push
and
pop
pop
cld
push
in
pop
out
aas
mov
inc
jbe
xchg
pop
sub
in
std
repnz
sub
fnstsw
jmp
int3
cmp
mov
enter
cmp
inc
orb
add
stos
mov
jp
inc
stc
or
mul
pop
fmull
incl
inc
sub
fwait
jbe
mov
clc
cmc
fistpl
stos
icebp
mov
lret
jnp
sarb
cmpl
jle
mov
inc
and
inc
pop
in
mov
popf
sbb
push
sbb
jae
xor
das
xchg
lods
imul
je
jg
cmp
and
xchg
inc
xor
fstpl
jge
insb
je
push
pop
adc
xchg
pop
into
adc
cwtl
inc
xchg
insl
faddp
inc
mov
jbe
arpl
fadd
pop
xorb
push
mov
sub
jge
imul
push
mov
pop
push
in
mov
mov
jge
ficoms
push
push
sahf
fmuls
sub
mov
sarl
fsubl
shlb
cli
lods
mov
and
mov
adcb
cwtl
std
outsb
mov
mov
dec
mov
lea
jns
xchg
or
adc
sbb
outsb
inc
mulb
add
in
mov
repz
dec
rorb
aam
imul
rorl
inc
or
lds
cld
sub
shr
imul
addb
lcall
dec
data16
jb
lds
arpl
or
sbb
push
insl
nop
cs
iret
jo
test
cmpsl
mov
cmpsl
out
ljmp
lea
aaa
mov
sub
repz
lds
dec
add
add
xchg
fwait
lods
sbb
pop
push
push
shrb
xor
les
nop
adc
xor
js
imul
jl
mov
notl
sbb
sub
cmp
movsb
rorl
imul
cmp
iret
xchg
or
shrl
js
loope
xchg
jo
fiaddl
in
mov
add
sarl
inc
out
dec
idiv
sub
jnp
cmp
arpl
out
gs
mov
inc
mov
out
fsubs
lods
cmpsl
push
inc
fdivrl
add
lods
push
and
insb
sub
adc
je
sarl
dec
test
leave
inc
xor
fimull
push
xor
xor
push
mov
dec
shl
int
cli
popa
jmp
adc
cwtl
mov
lret
xor
test
dec
in
leave
mov
or
sar
or
stc
mov
cli
std
push
adc
test
divl
lea
std
pop
nop
push
pop
cmp
adc
dec
sub
repz
fsubrl
cld
out
jae
or
adc
xchg
nop
pop
ret
sahf
add
adc
fmul
pop
or
repz
xchg
jne
pop
push
pop
pop
jp
lcall
ljmp
sbb
mov
and
xchg
and
cmp
add
fs
or
cmc
inc
push
outsl
add
movsb
rorb
enter
mov
movsb
stos
jbe
insb
gs
ret
mov
fistpll
add
and
cmp
xchg
mov
test
xor
sahf
scas
mov
sbb
insb
jle
sbb
push
into
rorb
or
lea
xchg
clc
dec
mov
or
and
sbb
xchg
pop
scas
add
inc
sbb
adc
xchg
ret
leave
inc
lods
inc
addb
in
test
sub
adc
xchg
mov
xor
inc
mov
mov
xchg
sbb
ds
fisubs
jae
js
pop
jmp
ljmp
adc
fistps
ss
outsb
cmp
inc
lahf
dec
pop
pop
aam
lcall
xchg
subl
cmp
pop
add
jmp
inc
push
inc
imul
mov
js
adc
sub
xlat
inc
and
xchg
mov
inc
sub
dec
adc
push
sbb
nop
mov
decl
sbb
or
and
out
mov
test
and
push
push
inc
cmp
add
mov
push
lcall
cwtl
inc
orb
insb
jp
adc
xorl
mov
leave
scas
in
icebp
xchg
adc
enter
test
lea
daa
lea
or
mov
sub
ss
mov
or
dec
cmp
ret
stc
add
jp
stos
cmp
sbb
jbe
and
or
sub
jb
stos
scas
xorl
imul
dec
mov
push
lret
lea
xchg
adc
aas
aad
scas
cld
dec
pop
or
mov
adc
hlt
sar
jae
out
mov
xor
loopne
dec
aaa
dec
mov
scas
scas
popl
add
das
out
adc
lcall
xchg
inc
lcall
lret
or
sbb
xlat
jno
insl
ja
jle
pop
dec
in
jns
pop
test
ret
cmp
dec
daa
jge
xchg
jmp
xchg
movsb
xor
sbbb
sbb
sub
xchg
pxor
ljmp
add
mov
dec
clc
push
int
fidivl
push
xor
mov
lcall
je
xor
push
movsb
add
movhps
mov
pop
xor
iret
stos
dec
mov
pop
imul
pushf
data16
jnp
orl
les
inc
and
lahf
adc
mov
mov
lcall
lret
cmp
lods
cmp
xchg
loopne
cmp
dec
xor
fsubrs
fisubrl
mov
pop
fmulp
xlat
pop
loop
subl
fisubrl
jne
pop
movsl
arpl
jo
mov
and
adc
mov
push
test
in
inc
and
in
lret
push
fistpl
dec
push
addr16
loope
lods
or
les
pushf
cmpsl
jg
push
push
mov
inc
notl
xchg
aas
dec
mov
enter
repnz
jno
cmp
je
xlat
xchg
cmp
dec
inc
xchg
sbb
int
mov
push
dec
inc
ret
mov
sub
mov
xor
push
inc
or
adc
repnz
ja
hlt
popf
jecxz
dec
add
stc
loopne
gs
out
mov
ret
es
mov
xchg
ljmp
rorb
sbb
push
dec
inc
jae
xchg
mov
xchg
out
dec
adc
jg
mov
mov
icebp
fidivrs
cld
popa
xor
call
loopne
xchg
imul
cmp
adc
push
pop
or
mov
into
jbe
pop
sub
lds
rcrl
ja
push
data16
or
cmp
les
xchg
loopne
and
fdivs
pop
jge
xchg
dec
lcall
mov
pop
ja
fisubrl
mov
aaa
jg
inc
lcall
iret
movsl
cmp
hlt
cmp
jge
and
sub
lcall
and
or
jmp
cmp
fimull
jae
lea
stc
fidivrs
enter
aad
or
add
test
dec
dec
cli
hlt
sbb
and
push
ds
shrl
pop
jnp
or
addl
or
sub
adc
outsl
dec
shll
lock
pop
bound
mov
cld
dec
inc
push
imul
mov
push
dec
inc
aad
sti
jns
bound
mov
clc
loope
sbb
jp
subb
hlt
xor
lret
mov
sub
test
aas
pop
in
in
imul
cmpsb
mov
dec
adc
mov
and
loop
bound
or
mov
dec
test
dec
sbb
je
out
into
inc
adc
lcall
cmp
addl
add
repz
pop
xrelease
repnz
sub
fbld
arpl
add
pop
pop
dec
cli
scas
jge
sbb
cltd
pop
mov
xor
or
jp
aad
pop
mov
mov
mov
js
sub
xor
cli
stc
jno
idiv
out
xor
cmp
cmpsl
inc
movsb
rclb
pop
and
into
aam
jl
test
addb
imul
in
mov
xlat
pop
int3
mov
sub
and
push
and
test
inc
mov
mov
std
fwait
lea
lahf
lcall
ljmp
scas
inc
pop
mov
push
out
les
lret
jo
mov
divl
jmp
pop
in
cmp
xchg
lock
mov
adc
imul
sbb
inc
xchg
xor
and
bound
and
jns
mov
out
clc
xor
out
pop
pop
out
addr16
lcall
bound
and
cmc
es
xchg
cmp
push
jge
fcmovu
out
mov
gs
repnz
or
adc
sbb
movsb
rorb
mov
mov
xchg
push
cmpsl
icebp
loopne
push
jbe
lahf
mov
inc
push
cmc
and
ret
adc
js
ficompl
daa
int
pusha
pop
mov
pop
loope
mov
mov
loopne
mov
out
dec
mov
or
rcrb
pop
imul
divl
push
pop
pop
dec
inc
fwait
sub
je
adc
mov
or
repz
sbb
pop
std
arpl
sub
insl
jbe
adcl
or
add
mov
sub
pop
fwait
movl
adc
popa
sti
iret
out
sub
arpl
cmpsl
test
push
or
jmp
mov
jo
mov
mov
xchg
adc
mov
and
outsb
leave
cmp
mov
out
mov
rcll
lahf
cwtl
stos
ss
js
mov
ret
repz
adc
cld
push
jle
mov
mov
iret
out
inc
sub
mov
repnz
int
xchg
cwtl
aas
cmc
or
or
adc
push
sub
fst
je
jno
push
test
test
push
imul
jnp
push
xor
mov
xchg
movsb
test
xchg
jp
cmp
daa
icebp
movsb
out
cmc
mov
cmp
cmp
inc
ja
pop
add
das
and
jmp
jp
pop
cmpb
dec
mov
mov
cwtl
lret
dec
jns
or
arpl
mov
cli
in
shlb
gs
mov
xor
outsb
cmpsb
jnp
cmpsb
data16
arpl
and
loopne
adc
rorb
loop
xchg
testb
xor
push
mov
and
inc
xchg
cmp
lods
scas
cmp
cmp
fistpll
lea
out
pusha
std
or
loop
push
shlb
jl
and
dec
leave
mov
std
cmpb
xchg
lahf
sbb
mov
sbb
inc
cmc
fisttpll
cmpsl
jmp
nop
shrb
sub
sbb
xchg
add
fcomps
add
mov
inc
nop
sbb
pop
lock
jmp
hlt
mov
pop
aas
adcl
or
mov
mov
pop
lahf
dec
dec
mov
nop
aas
inc
sahf
popa
aas
arpl
test
mov
inc
bound
arpl
cmpsb
or
cmc
adc
jae
pop
les
fldt
jnp
ret
or
jg
xchg
test
loopne
xchg
ret
cs
add
and
xlat
cmpl
jecxz
jnp
ltr
shlb
ds
mov
into
pop
sub
movl
sub
dec
jnp
sbb
jns
jo
popa
cwtl
and
push
ja
fistps
jecxz
inc
and
repnz
sub
leave
inc
xchg
sbb
mov
cmp
enter
call
arpl
push
popa
jno
fiaddl
test
cmp
xchg
js
sbb
adc
or
sub
cs
push
les
jbe
add
xchg
adc
movsl
int
mov
lret
roll
nop
lods
insb
scas
and
aaa
js
push
jp
xchg
mov
or
enter
sbbl
xor
mov
repnz
add
dec
ret
push
popf
jmp
rcr
in
mov
test
outsl
add
aaa
daa
push
rorb
add
into
jg
push
fmul
fadds
hlt
imul
push
fiadds
fs
bnd
cs
mov
jo
sub
out
rorl
mov
fildl
lds
subb
jecxz
sbb
sahf
sahf
and
add
mov
out
pusha
push
inc
push
push
pop
lret
test
inc
add
je
cmp
add
sbb
sbb
inc
scas
push
xchg
in
jecxz
push
jbe
mov
mov
push
cwtl
mov
sbb
xchg
jle
push
mov
adc
inc
push
jg
fs
push
mov
xchg
push
inc
inc
fdiv
stc
mov
mov
mov
in
jecxz
xchg
lahf
sbb
pop
pop
cmp
mov
jecxz
xor
cwtl
inc
sbb
jle
push
sbb
bound
sbb
mov
test
or
adc
leave
ja
push
jl
jne
sbb
pop
cli
mov
les
in
inc
mov
shlb
inc
mov
mov
dec
aaa
imul
ja
jno
dec
cmpb
cmc
mov
and
xlat
js
addr16
mov
fldcw
adc
jl
fdivrl
or
inc
sbb
ss
test
shlb
repz
xlat
ljmp
rorl
mov
fldl
imul
aad
push
push
or
imul
faddp
cli
dec
fld1
inc
jge
int
jnp
lahf
mov
mov
hlt
adc
xchg
cltd
repz
repz
in
andl
nop
sub
aaa
data16
cmpb
mov
push
cld
inc
leave
addr16
sbb
jb
lods
dec
daa
loop
daa
cltd
adc
les
ret
out
dec
cld
lret
dec
popf
enter
mov
mov
and
out
sar
mov
addl
ret
out
jnp
scas
and
xor
mov
or
fsubl
fwait
or
sub
xchg
scas
stos
rcrb
movsb
int3
nop
incl
pop
xchg
es
pop
ret
addr16
sbb
xchg
add
arpl
xorb
fucomp
sbb
testb
loopne
mov
out
into
mov
cmp
xor
std
push
pop
xchg
xchg
test
cmpsb
cmp
sub
mov
push
lret
pop
sbb
ja
rcrb
mov
in
andb
popf
cmpb
xlat
mov
push
jg
ds
push
outsl
mov
sti
xlat
addr16
or
sbb
jae
in
repnz
fbstp
add
mov
sarl
or
mov
aad
aaa
nop
mov
sbb
imul
addr16
jl
les
in
in
xor
sbb
inc
test
es
aas
mov
inc
jns
and
push
pop
lds
gs
loopne
adc
pop
and
int
inc
adc
int3
es
stos
dec
lret
dec
cmp
std
or
hlt
mov
insl
in
inc
cmpsb
mov
ja
loopne
sub
outsl
push
and
dec
push
pop
test
movsb
fsubs
jno
inc
dec
cmpsb
dec
test
dec
adc
cmpsl
add
mov
mov
mov
jb
jg
lret
call
sbb
sbb
dec
ljmp
and
roll
dec
push
mov
push
aam
ret
adc
jne
imul
fnstcw
adc
jmp
loopne
sub
addr16
and
mov
push
pop
cld
clc
mov
adc
and
push
int3
fistpll
das
mov
push
ds
mov
pop
fisttps
jmp
and
xchg
push
sub
add
addr16
sbb
add
enter
lods
pop
mov
fsubrp
in
adcb
loopne
and
jp
inc
jecxz
mov
jmp
mov
xchg
sub
lods
aas
outsl
sub
push
popa
inc
adc
mov
loop
fisttps
repnz
or
pop
adc
and
mov
dec
addr16
jp
and
or
jo
inc
repz
mov
ret
push
push
mov
popa
loop
cmpsb
sub
fs
in
into
xchg
mov
por
imul
idiv
std
add
xor
add
movaps
inc
or
push
add
push
pop
test
push
cmp
cmp
xchg
std
mov
test
fbstp
test
out
xchg
data16
xlat
pop
stos
mov
mov
jl
andb
mov
aas
adcb
add
sbb
test
and
xor
movsb
mov
mov
cmp
mov
and
fisttpll
stc
sbb
dec
movsl
jge
dec
sbbl
sbb
fs
mov
xchg
sbb
inc
pop
dec
cmc
cltd
xchg
fmuls
or
sub
leave
cmpsl
divl
out
test
add
scas
and
inc
mov
fildll
or
sbb
cmp
rol
aaa
out
icebp
jae
mov
das
stos
rcrb
or
cmp
adcb
mov
sbb
push
cmpsb
pop
and
jbe
call
repz
mov
imul
jmp
xchg
dec
and
test
cmc
mov
addr16
sbb
inc
mov
orl
jmp
ss
idivb
adc
inc
insl
mov
fcoms
sbb
dec
movsb
and
loopne
repnz
or
xor
out
xor
sub
adc
xchg
sub
adc
adc
dec
movsl
sbbl
xlat
pop
insl
mov
xchg
adc
mov
inc
or
sahf
mov
adc
jp
dec
pop
repnz
dec
mov
push
xchg
iret
cli
je
adc
mov
loop
xor
pop
mov
cmp
scas
adc
ja
or
push
dec
das
sbb
callw
cwtl
sub
pop
ret
lret
add
ret
in
push
adc
mov
es
xor
pop
dec
or
lcall
jmp
int3
aas
push
fadds
or
push
test
push
lods
mov
add
pop
and
mov
in
cmp
out
sub
jo
aaa
push
xor
pop
int
adc
add
pop
leave
or
dec
cmpb
inc
test
mov
adc
xor
jge
mov
push
flds
mov
sub
sub
add
rolb
pop
rorl
aas
cltd
imul
xor
imul
cmpsb
test
imul
jmp
push
lcall
or
xor
stos
repz
xor
out
jbe
pop
adc
lcall
clc
xchg
pop
mov
jmp
lcall
xchg
pop
loope
iret
mov
push
jl
sub
leave
or
push
mov
aam
pop
or
sbb
adc
jns
dec
enter
popa
mulb
mov
mov
dec
pop
out
or
es
sub
stc
lret
imul
add
push
sub
outsb
pop
mov
lea
mov
push
ljmp
lret
sub
dec
inc
pop
adc
adc
fiaddl
pop
adc
mov
push
or
lods
sbb
dec
xchg
aas
jno
sbb
xchg
fbld
push
jge
push
mov
add
shll
mov
pusha
ror
insl
mov
popa
add
pop
pop
repz
push
dec
stc
push
or
inc
and
jb
lcall
jmp
addl
mov
xchg
sbb
cmp
inc
std
sbb
lods
cmp
mov
inc
scas
in
js
test
and
sub
mov
fadds
fdivp
inc
pop
add
fcompl
rcll
xlat
dec
mov
cmpb
mov
push
add
shrl
xchg
in
cmp
dec
scas
aaa
addb
jo
jae
sbb
pop
push
andb
or
sub
sub
ja
push
int3
mov
or
lods
xchg
ss
jo
and
popa
add
sbb
subps
push
test
jg
cmp
pop
cmp
mov
imul
daa
adc
and
adc
mov
inc
bound
xchg
xor
inc
xor
clc
sbb
test
scas
xchg
push
loope
pusha
sbb
and
inc
scas
lahf
add
or
jge
mov
push
es
inc
or
mov
mov
xor
int3
in
xor
add
dec
ret
push
pop
popa
outsb
arpl
or
mov
aas
jne
ret
ss
sub
sbb
scas
aaa
push
jg
scas
ret
xor
pop
clc
clc
cld
or
mov
mov
mov
jmp
fnsave
aam
iret
test
inc
daa
sub
mov
inc
insl
iret
adc
add
sarl
call
mov
sbb
xchg
mov
inc
dec
sahf
iret
xor
pushl
mov
roll
xchg
addb
imul
aas
orl
out
mov
scas
dec
test
insb
stos
or
jno
scas
outsb
orb
jmp
call
shlb
aam
fwait
jo
pop
insl
int3
inc
daa
inc
mov
and
push
adc
leave
repz
aam
scas
fcomps
pop
pop
pop
pop
popf
mov
stos
dec
aad
scas
imul
jp
jle
sbb
push
push
fmul
cld
js
mov
shlb
insb
repnz
sbb
sub
imul
nop
jge
mov
xchg
addr16
lock
dec
out
out
sbb
das
lds
or
push
cmpsl
adc
in
and
mov
xor
adc
add
into
movb
icebp
jmp
xor
xor
in
sub
jnp
arpl
sbb
aam
les
mov
xor
add
inc
pop
xor
pop
orl
push
test
lods
mov
cmc
popa
dec
pop
gs
jg
inc
daa
mov
mov
pushf
rorl
fstpl
addr16
adc
adc
ljmp
sti
push
jae
sub
sbb
sbb
sub
cmp
aaa
leave
imul
sub
or
dec
pop
popf
cmpw
adc
or
jle
std
fwait
mov
insl
mov
jl
or
push
push
repz
or
nop
xor
inc
mov
daa
push
in
pop
fs
mov
push
incb
cmp
mov
pop
pop
les
and
mov
xor
insl
push
fwait
jecxz
ret
in
lock
jnp
dec
mov
pushf
popf
dec
or
mov
inc
xchg
cmpsb
cltd
inc
inc
icebp
adc
aaa
insb
cmp
xor
rorl
cmp
fadds
jl
sahf
push
ficoml
in
sti
pop
aad
repz
adc
and
pusha
ds
mov
addb
jp
idivl
sub
xor
or
in
outsb
fidivrs
xchg
test
mov
add
xchg
repnz
bnd
inc
sbb
add
or
cld
xor
fwait
xor
in
cs
stos
xchg
cmpb
int3
push
pxor
push
inc
repz
jl
adcb
nop
jg
jge
imul
loop
jl
lods
push
ss
pop
push
lcall
or
fsubs
xor
out
ljmpw
add
pop
push
movsb
push
mov
das
pop
test
dec
scas
mov
scas
outsb
dec
sbb
mov
lret
rcrl
adc
cmp
mov
mov
pop
inc
cld
fs
jno
sbb
sbb
cld
mov
xchg
push
pop
rcr
mov
or
push
xchg
loopne
pop
xlat
lcall
mov
out
add
push
loope
or
fmul
cltd
movsb
xchg
fs
adc
ljmp
test
xor
ja
inc
sbb
mov
cmc
dec
insl
pop
xor
push
sbbb
push
xor
pop
jecxz
loopne
dec
sbb
or
and
bound
pop
sub
pop
push
add
mov
addr16
push
cmc
mov
mov
fistpll
lock
jo
not
push
clc
or
insb
jl
mov
gs
loope
xchg
es
repnz
mov
pop
les
test
jo
repz
lock
adc
lea
idivb
dec
cvtps2pi
xorl
into
mov
jg
imul
sub
and
bound
dec
mov
inc
out
dec
scas
jl
sbb
mov
cmp
xchg
dec
fistpll
push
sbb
cmp
xorb
leave
adc
dec
mov
shlb
sbb
shll
pop
inc
es
and
sub
jns
jp
inc
sub
loopne
movsb
and
adc
mov
stos
xor
mov
faddl
push
shrl
jno
in
loope
xor
test
idiv
leave
add
shlb
insl
fmuls
arpl
int
icebp
lcall
cwtl
mov
xor
mov
daa
push
jp
mov
cmp
je
mov
lret
xor
sbb
out
cmpsb
push
or
add
or
stc
lea
out
pop
lret
pop
jo
scas
mov
mov
mov
js
in
out
hlt
mov
cmp
scas
jl
xchg
out
jns
dec
jb
mov
mov
aam
and
insl
xchg
jmp
out
cmp
push
sub
ljmp
cmpsl
adc
out
iret
insb
jmp
mov
pop
mov
push
adc
in
adc
cwtl
in
cmp
inc
xlat
push
int
jg
popa
jmp
adc
pop
std
rcl
lock
sub
add
dec
and
sbb
sti
dec
das
iret
cmp
add
pop
movsb
lock
stc
out
mov
xor
aam
les
jg
mov
push
sbb
div
jno
nop
enter
iret
push
addr16
repnz
dec
sti
popf
fwait
jae,pn
xor
xchg
mov
push
scas
lcall
sub
jecxz
xor
dec
jle
mov
push
and
cld
mov
mov
loop
insb
insl
mov
mov
pushf
xchg
std
int
dec
xchg
cmp
shll
mov
and
lahf
inc
nop
mov
sub
je
cmp
push
aam
dec
jecxz
int
xchg
xor
daa
out
and
imul
xor
dec
cmp
xchg
lods
jno
popa
sbb
lret
fildll
enter
dec
scas
jne
dec
ret
divb
lcall
shl
scas
push
js
sbb
xchg
push
mov
pop
insl
mov
stos
add
in
int3
inc
dec
pop
inc
fs
pop
outsl
cmp
push
cmpl
mov
aas
shlb
fadds
loopne
cmp
mov
es
pcmpgtd
out
inc
ss
push
fcoms
xchg
test
js
cmp
loope
pcmpeqb
or
aas
mov
mov
push
pop
movsl
scas
in
mov
negb
sub
jmp
mov
adc
mov
pop
push
cld
mov
data16
ja
mov
cli
xchg
fisubl
pop
shlb
fdivrl
sbb
jp
cmp
push
fs
cmpsl
or
out
insl
push
pop
pushf
test
or
cmp
test
and
rol
sbb
sahf
pop
in
aas
fsub
sbb
stos
pop
rclb
pop
mov
inc
xchg
mov
call
lods
cltd
push
xbegin
sbb
nop
cli
pop
cld
shll
dec
adc
data16
arpl
fs
mov
pop
mov
cmp
add
mov
ja
outsb
aad
pop
or
sbb
push
xor
mov
pusha
jecxz
stos
sub
sub
pop
js
push
in
xor
jmp
loop
repnz
addl
pop
mov
orl
adc
adc
cmp
mulb
lcall
outsl
lcall
test
nop
xchg
push
dec
adc
dec
cs
mov
out
pop
movl
mov
dec
bound
dec
testb
in
bound
sub
mov
mov
xchg
pmovmskb
dec
leave
scas
repnz
cmp
push
out
repz
loopne
and
or
rcrl
xor
pop
mov
xchg
test
test
pop
sbb
mov
aaa
sub
lret
dec
or
fildl
incl
fiadds
sbb
xor
dec
out
fisubrl
add
cltd
nop
cmc
in
lea
xchg
adc
adc
pop
je
jne
dec
into
jle
out
jnp
punpcklbw
mov
adc
jmp
stos
xlat
cmp
rol
ja
rorl
xchg
fucomip
or
aaa
mov
out
xor
lock
push
pusha
loop
mov
xchg
movsb
mov
sub
xchg
stos
repnz
push
pop
insb
adc
sbb
test
iret
cltd
adc
vpcmpeqq
in
lcall
mov
in
or
and
lods
push
sbb
pop
jne
ret
mov
sbb
pop
cmp
fldl
es
repnz
and
mov
insl
test
cmp
mov
test
lea
in
mov
in
adc
aam
mov
or
or
inc
in
cmc
inc
xchg
inc
xchg
inc
xchg
and
and
nop
add
xlat
lret
pop
repz
sub
shlb
notb
push
and
or
sub
xchg
lock
push
insl
push
add
lods
and
lea
cli
xorl
fbstp
mov
add
or
fdivrs
cmp
jg
xchg
lret
jo
rcll
pop
push
fistpl
cmp
mov
add
sahf
int
xlat
dec
outsb
and
sub
mov
ds
push
xchg
and
aas
sbb
jns
and
add
adc
and
cmpsb
rcrb
rolb
stos
push
pop
push
scas
loopne
jp
xchg
loope
loope
fisttpl
adcb
jp
das
add
sti
pop
xchg
flds
ret
mov
lods
jnp
jmp
cmpsb
popa
movsl
mov
add
cmp
push
popf
and
dec
test
addl
lods
lcall
mov
dec
and
cs
enter
xor
pusha
scas
std
stc
imul
stc
and
mov
sti
jecxz
jle
clc
add
push
and
or
bound
sbb
xor
popf
cli
sub
mov
inc
pop
dec
testb
gs
nop
movsb
test
pop
std
sub
lds
mov
iret
or
into
jnp
or
push
out
xor
jne
scas
sahf
add
sbb
sub
scas
add
movsl
pop
mov
stos
inc
xor
mov
or
imul
pop
sbb
jmp
xlat
jno
mov
shll
cmpsl
rorl
mov
repz
fidivl
ret
sbb
ret
lods
mov
nop
adc
xlat
sub
cmove
pop
mov
arpl
incl
pusha
and
stos
sub
rol
dec
ret
faddl
test
mov
ja
sti
out
out
jb
cld
in
lret
call
jmp
push
fdivrs
inc
mov
mov
pushf
pusha
mov
sub
mov
insl
cld
jns
mov
jmp
mov
cmp
mov
popa
push
push
dec
xor
ficomps
cltd
fldenv
sub
xlat
dec
jne
mov
arpl
rolb
in
pushf
mov
aad
pop
dec
sub
es
jno
addr16
mov
push
dec
xchg
mov
inc
dec
mov
xor
or
pop
icebp
jge
xor
ja
arpl
fwait
sub
mov
jns
in
aas
cmp
push
mov
fnstsw
push
cmpsl
outsb
mov
inc
rcrl
push
push
fiadds
sbb
jg
js
push
cmpsl
pop
test
ljmp
and
out
inc
jbe
fwait
loopne
loope
sti
mov
jns
lahf
inc
add
scas
mov
loop
ja
jl
mov
mov
mov
lods
out
jo
insl
mov
call
imul
enter
mov
in
xor
lds
cli
pop
push
flds
mov
in
xchg
cmpsb
mov
andb
out
rorl
mov
sbb
js
fs
cld
add
push
and
jne
jmp
jae
push
icebp
loop
lret
insl
cmc
fdivl
in
jge
adc
sti
jne
popf
adc
dec
scas
notb
inc
xor
xor
mov
jg
add
pop
clc
in
jmp
insl
adc
lock
pop
clc
jge
mov
popa
flds
push
test
insb
pusha
mov
push
or
lahf
ljmp
lods
test
xchg
jns
mov
mov
ja
push
mov
add
sbb
push
js
push
in
cli
pop
shll
imul
xchg
xor
push
inc
pop
mov
add
cmpsl
jecxz
xlat
xor
pop
test
jecxz
mov
inc
aaa
js
or
insb
cmp
push
icebp
loope
and
inc
mov
xchg
int
mov
jl
mov
in
inc
add
aam
out
xchg
jns
push
adc
aaa
inc
sbb
cmp
xchg
adc
jp
popf
xor
mov
add
repnz
cmp
xchg
sub
sub
into
pcmpeqb
loopne
cmpsb
xor
jne
lret
sar
or
fisttpll
jo
in
loope
iret
enter
loop
jne
add
lea
xchg
mov
push
cmp
push
lcall
sbb
enter
xchg
addr16
inc
adc
nop
lods
arpl
cwtl
mov
pop
sbb
scas
jge
or
jecxz
pop
push
mov
pop
xor
sbbl
out
or
mov
mov
hlt
cmp
les
jnp
xor
adc
xor
imul
mov
or
lock
lods
test
in
sub
js
xchg
shr
inc
fs
repnz
orb
sbb
cld
lea
jno
jp
inc
lods
sahf
mov
mov
mov
cld
jecxz
mov
lods
mov
add
pop
add
pop
imul
shll
aas
jns
xor
add
repnz
push
in
sbb
ds
mov
rcr
out
sbb
jle
xchg
pop
pop
cmp
scas
push
sahf
icebp
push
movsl
cli
in
add
push
dec
lahf
adc
ss
jnp
cmp
repz
pushf
add
dec
repnz
cli
enter
mov
add
sti
shlb
lds
stos
iret
sbb
push
dec
inc
pop
cmp
sbb
test
leave
push
pusha
addr16
out
pop
fnstenv
imul
mov
cli
jmp
add
cmpl
dec
fs
daa
neg
and
xchg
pop
mov
popa
shrb
mov
roll
in
lcall
in
leave
sbb
add
mov
inc
xlat
jo
adc
ss
mov
mov
enter
imulb
xchg
mov
xor
mov
outsl
pop
add
lods
cmpsb
inc
jmp
or
arpl
bound
push
add
jne
and
inc
inc
mov
push
dec
push
repnz
xchg
js
xchg
repnz
rorb
or
icebp
sarb
mov
mov
roll
pop
adc
popf
push
aam
jb
test
adc
ds
inc
xchg
jns
jne
icebp
das
cmc
hlt
mov
dec
cmpsb
test
icebp
pop
hlt
adc
sub
out
ret
xlat
mov
adc
imul
pop
mov
cmc
mov
xor
pop
or
lds
gs
push
les
adc
cwtl
xchg
or
add
xchg
xlat
dec
cmp
pop
jmp
dec
scas
test
mov
pop
popa
xor
aad
adc
jae
mov
add
adc
repz
push
aas
cmc
push
adc
rol
lods
in
and
sub
push
cld
and
mov
sti
or
push
jo
jnp
mov
out
cmp
rorb
or
nop
cmp
scas
in
xlat
jmp
pop
and
mov
dec
test
sub
call
push
popf
hlt
loope
insl
dec
add
pop
stc
cmp
fucomp
inc
in
out
mov
inc
pop
cmp
and
lods
pop
pop
sub
or
gs
push
gs
out
push
test
std
mov
ja
insl
stos
ss
cwtl
test
and
mov
xor
cli
dec
sbb
nop
pop
gs
cmp
dec
push
mov
lods
jg
les
mov
mov
mov
rorl
sbb
sahf
iret
xchg
rcrb
adcl
loop
clc
std
xchg
xor
out
cltd
sub
addl
sti
pop
sbb
data16
or
stos
imul
push
insb
sub
pop
push
mov
shrl
mov
sub
out
or
js
test
jnp
rcll
andl
pop
cmp
stc
int
stc
mov
fisttps
mov
cltd
or
or
repz
add
test
cmp
push
sbb
lret
inc
inc
sbb
push
adcl
mov
jge
sbb
gs
push
int3
mov
pop
mov
sub
mov
out
leave
sbb
leave
les
sti
mov
movsl
cli
nop
test
test
add
in
rolb
faddl
addb
pop
xchg
mov
mov
xlat
imul
xchg
add
out
scas
jbe
pop
mov
fcomps
ret
and
call
jl
outsb
popa
loop
test
xchg
xor
lods
or
adc
cmp
addr16
sub
aas
aam
test
xor
pop
scas
into
lods
stos
xchg
lods
mov
xchg
push
pop
jns
mov
addr16
bound
sbb
mov
mov
and
movsl
and
test
and
mov
dec
adc
ds
lea
repz
movsl
inc
imull
imul
pop
test
mov
pop
fldl
add
dec
jo
loop
bound
lods
imul
nop
mov
adc
shlb
shrb
dec
aad
mov
shll
les
ret
adc
popf
clc
sbb
jge
incb
fdivs
xor
shr
bound
div
mov
cmp
xchg
xchg
inc
sub
ss
in
lock
xchg
jmp
cmpsb
sbbl
xchg
je
fstl
adc
xor
orl
mov
out
and
fdivrl
pusha
daa
ret
popf
mov
sub
cwtl
jle
sub
rcl
sbb
mov
mov
mov
andl
push
es
mov
jmp
jl
xchg
sbb
xor
addb
pop
adc
push
add
add
xor
fs
sub
sahf
aad
or
inc
sti
mov
push
pushf
lret
inc
repnz
int
rorb
jno
cmc
push
pop
pop
xchg
sub
sub
fisubl
mov
ja
jns
das
add
mov
stos
fmul
lahf
hlt
and
pop
pop
sub
mov
scas
xor
jbe
out
jns
mov
push
js
add
mov
cs
pop
mov
inc
insl
es
arpl
test
mov
cmp
or
or
jns
or
mov
insl
pusha
inc
cmp
mov
jno
jae
cmp
xor
in
test
mov
or
ret
dec
add
xor
sub
shrb
inc
loop
les
inc
rclb
xchg
subl
mov
stos
mov
cmc
mov
jmp
fnstcw
add
lds
shll
mov
arpl
sub
pop
cmpsl
pop
pop
push
mov
nop
movsl
xor
adc
data16
and
pop
mov
cld
cmpsl
dec
sub
out
dec
sti
pop
add
or
mov
mov
xor
sub
pop
imul
cltd
fldcw
add
xor
gs
xchg
pop
or
cmc
sub
pop
icebp
cli
add
pusha
gs
jmp
add
scas
mov
jne
or
lret
mov
cmp
cltd
out
into
repnz
fwait
ljmp
leave
dec
add
jb
bound
adc
pop
xor
ja
rolb
xchg
jecxz
mov
jmp
jb
shrb
insl
jge
movsb
pushf
in
fbstp
sarl
jnp
nop
out
cmp
jle
xor
dec
fimull
xchg
push
push
pop
idivb
cmp
push
pop
push
sbb
mov
test
fldl
fwait
icebp
lods
nop
jl
push
mov
inc
out
andl
iret
add
loop
mov
gs
xchg
ss
mov
loopne
out
inc
movsb
leave
movsl
je
lret
adc
mov
mov
test
inc
and
movsl
xor
fcompl
sahf
faddl
test
fxam
bnd
and
lcall
adc
ficoms
aaa
loop
idivl
jo
mov
sbb
xchg
sbb
mov
dec
xchg
lahf
sbb
lahf
mov
dec
mov
or
add
or
inc
aad
push
loop
aas
pop
loop
jle
mov
mov
sub
jne
cs
in
xchg
add
inc
mov
test
mov
int3
pushf
xchg
mov
push
push
jnp
mov
push
sub
in
mov
mov
sub
fxch
mov
lret
ficomps
cmpsb
mov
dec
mov
sub
test
pop
xchg
dec
dec
and
cmc
dec
into
mull
sbb
or
inc
int3
inc
nop
lahf
xlat
push
test
mov
pop
mov
aad
jne
mov
sub
pop
sub
sbb
ret
out
mov
sbb
in
loop
stc
inc
mov
ds
mov
jmp
push
repz
dec
lea
or
mov
adc
aaa
lods
fldcw
sbb
add
test
dec
and
mov
in
or
xchg
flds
add
push
call
sar
rolb
mov
pop
lods
cmpl
fwait
push
lock
call
sbbb
jmp
inc
ror
push
and
testb
xlat
clc
push
dec
lods
mov
sar
jg
cmpl
adc
loopne
and
dec
outsl
or
pop
clc
adc
push
or
mov
pop
pop
dec
cli
jl
adc
inc
jecxz
and
aaa
fstl
inc
cltd
test
inc
and
xchg
or
sbb
loope
xchg
mov
inc
jns
shl
push
cmpsb
sub
pop
mov
mov
mov
push
inc
mov
cmp
divb
xor
cmp
jge
cmp
mov
stos
js
lahf
imul
popf
mov
insl
lock
bound
and
call
int
lcall
mov
lret
scas
and
mov
icebp
leave
jno
pop
jge
pop
lds
mov
nop
ja
inc
div
cmp
cld
xchg
aam
out
dec
cld
daa
movsb
sub
loop
and
push
rclb
pop
xchg
push
adc
icebp
sub
pop
mov
push
add
js
ss
je
adc
mov
call
movsb
sbb
ja
push
sbb
mov
jl
inc
inc
das
pop
or
movsb
mov
mov
into
je
es
xor
dec
cmp
jbe
inc
mov
dec
cli
test
pop
add
repz
dec
or
popf
adc
sub
out
je
sub
xor
push
test
jp
pusha
push
mov
dec
ffree
daa
fcomps
cmovs
or
ja
inc
int3
sbb
divb
xchg
add
add
stc
inc
add
stos
fldl
mov
sbb
adc
add
rclb
fwait
loope
sbb
cwtl
inc
and
ljmp
sub
pop
xor
testb
incl
mov
mulb
jbe
dec
loop
jae
or
outsl
imul
push
jo
jae
imul
xor
leave
pop
inc
aas
flds
cli
daa
cmc
cmpsl
cmpsb
pop
add
xchg
shl
leave
in
cmp
negl
inc
sub
call
inc
mov
pop
ljmp
bound
cmpsb
pop
or
xchg
es
and
dec
lret
or
int
cmp
sti
iret
or
xchg
and
dec
xchg
cmp
insb
mov
inc
movsl
xor
je
int3
or
loopne
dec
mov
mov
xchg
test
je
daa
push
mov
stc
frstpm(287
nop
xchg
stc
sbb
inc
lahf
fs
and
jle
aam
jae
mov
clc
push
aaa
dec
inc
push
sub
dec
jbe
rol
xchg
sub
dec
cmp
mov
or
leave
cmc
and
push
loopne
add
sti
adc
jns
mov
push
das
push
xor
inc
and
mov
push
jmp
xchg
add
ret
dec
mov
pop
loopne
sbb
mov
mov
std
add
notl
jge
xchg
in
dec
pop
push
mov
fisttpll
mov
mov
xlat
repnz
ret
lretw
jge
into
mov
or
std
jp
fsubrs
push
das
into
xchg
mov
push
loopne
adc
xchg
add
lea
jmp
je
test
ret
xor
js
sub
xor
es
movsb
stos
inc
mov
inc
xchg
in
andl
jae
inc
int
cmp
andl
movsl
aaa
jo
test
xor
mov
shl
lret
orl
xor
out
sub
add
mov
add
sub
int
and
sti
jmp
mov
and
aaa
mov
mov
mov
mov
rolb
add
cwtl
xchg
cltd
cmpsb
loopne
test
xchg
xor
cmpsb
mov
jns
xchg
dec
add
sbb
stc
xor
push
mov
fucom
aaa
out
arpl
ja
lds
test
fs
push
push
lcall
sub
mov
jg
sbbl
cmpsl
add
mov
xchg
lretw
and
out
test
mov
xor
jge
push
imul
popf
sahf
cmp
aam
lret
ljmp
mov
push
iret
cs
inc
imul
jns
repnz
jns
test
jb
repz
leave
sbb
aad
jno
shlb
pop
movsl
je
mov
sahf
dec
xorb
xchg
shll
mov
push
in
loopne
xchg
push
data16
mov
lds
call
cltd
jp
repnz
xor
cmpb
dec
mov
push
mov
les
lods
jge
jo
push
mov
in
mov
call
pop
cmpsl
xchg
xchg
pop
cmp
sbb
lds
decb
adc
pop
inc
adc
jp
cmp
xchg
repnz
ret
or
mov
fs
int
xlat
mov
and
jae
push
dec
in
xor
hlt
jne
enter
into
ret
jle
xchg
xor
fdivs
bnd
push
sahf
push
xor
dec
adc
dec
dec
idivl
fs
cmp
cmpsl
mov
inc
push
push
and
aad
mov
jge
jge
xor
inc
stc
ss
xchg
scas
orl
xor
arpl
int
popf
sub
sub
aad
movb
dec
xor
sbb
mov
mov
mov
xor
jne
lods
jo
adc
sti
in
jae
and
adc
or
divb
cmp
stc
dec
or
sub
inc
push
xchg
pop
inc
or
inc
add
jno
inc
iret
imul
or
lods
mov
dec
loopne
jae
ss
lret
shl
sahf
push
add
lret
fstpl
and
add
fimull
std
arpl
mov
lahf
mov
sub
orl
or
pop
inc
xchg
mov
mov
sbb
test
inc
out
addr16
out
imul
insb
cltd
xchg
fcoms
addr16
dec
or
adc
sbb
shl
ss
faddl
aam
cmp
pusha
enter
or
or
jg
mov
lea
cmp
fs
pop
out
cltd
popf
fsubr
mov
ljmp
in
idivb
leave
xchg
popa
jbe
ds
push
incl
shll
aad
pop
fisubrs
js
ljmp
rcll
mov
aas
jno
aaa
fsubs
cld
mov
mov
xchg
sahf
jl
mov
xlat
push
xor
push
arpl
xchg
cmp
stos
cli
pop
add
add
lds
push
and
inc
cwtl
xor
inc
jecxz
pop
push
ret
pop
negb
pop
dec
push
test
in
js
lock
movsb
repz
pop
mov
std
mov
into
insl
lcall
cli
shll
fdivl
popf
jo
shl
into
into
or
push
xchg
pop
sub
push
sahf
ret
jae
push
xchg
es
sub
call
add
push
data16
imul
mov
ret
cmp
push
lock
dec
faddp
not
cmp
inc
jno
mov
push
sbb
lea
adc
cmpsl
imul
arpl
out
out
lods
ret
cli
hlt
or
push
clc
adc
insw
adc
aaa
je
loop
stos
pop
pop
imul
ret
fistps
sahf
push
pop
sub
adc
mov
mov
jp
mov
js
lea
loop
cwtl
stc
dec
cmp
shlb
jmp
popf
add
xor
movsl
pop
gs
or
pmaddwd
sarl
jb
jl
rclb
arpl
push
inc
btr
inc
aam
push
das
pusha
imul
pop
cmp
outsl
mov
lock
int
inc
mov
mov
repz
push
or
mov
repnz
sbbb
sarb
xchg
loope
dec
mov
jo
loope
scas
push
gs
repz
das
scas
out
push
in
dec
cmp
stos
xor
or
inc
loopne
js
out
mov
notl
jo
sub
xchg
mov
test
inc
cmp
je
das
xorl
imul
cmp
lds
nop
dec
xor
jmp
pop
pushf
js
jp
cmp
cmp
fnstcw
pop
sbb
mov
adc
push
dec
cmpsb
jg
inc
fucomp
scas
pop
xor
scas
idiv
jl
or
cmp
push
jmp
in
mov
mov
inc
sub
cwtl
xchg
in
movsl
loope
lock
mov
pop
mov
or
xor
mov
inc
arpl
xor
dec
xor
fisttps
outsl
mov
enter
jb
call
pushf
jno
aaa
scas
insl
mov
js
xchg
icebp
add
fwait
and
dec
pop
xchg
xor
and
js
jg
and
aas
pop
xchg
js
cmpl
arpl
cld
cmp
lods
movsl
xchg
outsb
or
in
lods
cmp
insl
in
in
lds
inc
xor
jl
xchg
xor
mov
aam
push
enter
pushf
jne
inc
test
fisubs
fstps
pop
cmpsl
pop
push
mov
cmp
lds
jbe
or
outsb
mov
jns
inc
loopne
and
dec
mov
push
mov
std
mov
adc
pop
xor
test
sbb
and
jb
sbb
cld
aam
pop
adc
es
iret
out
xor
pop
cmp
pop
lock
push
in
xchg
loope
out
or
push
xchg
sub
addr16
aam
lahf
sarl
insl
sbb
xor
mov
xchg
es
rorb
jl
lahf
xchg
mov
lar
adcb
rorl
mov
aas
inc
push
leave
cmp
push
mov
mov
cmp
jge
mov
addr16
and
add
add
std
adc
scas
in
jo
cltd
xchg
je
cvttps2pi
xchg
shll
and
jne
xchg
cmovnp
insl
int
aad
inc
and
lock
xor
aad
push
lods
xchg
sti
xchg
push
adc
test
pop
mov
inc
stc
pop
sub
or
aaa
lds
xchg
push
rorl
iret
xlat
xchg
inc
dec
adc
pop
jo
xor
stos
rorl
into
pop
inc
mov
nop
mov
scas
mov
test
into
push
sub
lea
lret
mov
xchg
jno
jmp
mull
mov
pusha
cmpsl
imul
lret
pushf
mov
test
inc
adc
mov
std
add
or
jle
gs
iret
cli
movsb
sub
iret
cltd
mov
sub
cmp
cmp
push
inc
push
sbb
in
xor
mov
loop
lock
push
dec
adc
or
pop
nop
dec
jb
add
pop
rol
mov
cwtl
xor
aas
loopne
dec
ds
mov
or
push
mov
mov
fsubrl
cmp
sub
and
mov
jb
popf
mov
cmpsb
and
std
les
jmp
test
mov
and
cwtl
insl
mov
aas
clc
movsb
cltd
stos
adc
sbb
sbb
pop
scas
xor
jmp
mov
movsl
mov
lds
adc
in
xchg
dec
rolb
xchg
pop
out
sbb
int
inc
dec
sbb
sahf
xchg
js
adc
outsl
test
mov
xor
in
movsb
mov
cwtl
cmpb
cld
es
fmul
and
push
lods
icebp
sbb
ret
add
sti
aam
ljmp
bound
scas
cmp
js
fwait
inc
cmp
loope
mov
sub
mov
popa
push
fnsave
movsb
pusha
xchg
gs
cmp
lock
mov
mov
int3
mov
dec
mov
jne
push
xor
movsl
fiaddl
repz
or
pop
cmc
pushf
lods
dec
mov
adc
lea
ror
cs
jae
dec
fs
add
mov
sub
ja
and
mov
nopl
jp
js
lahf
addb
shl
add
push
dec
in
cmp
add
sbb
xlat
cltd
xchg
adc
add
into
mov
mov
xlat
stc
leave
mov
cmp
pop
push
and
jle
xor
and
xchg
pop
ret
adc
out
add
lods
pop
and
cmp
sbb
mov
data16
stos
mov
xchg
mov
sub
pop
scas
xor
xchg
in
jne
cmp
into
sbb
ficoms
push
outsl
push
inc
leave
daa
cmp
out
xor
mov
push
cmpsb
ss
jge
xor
lahf
jno
cltd
xchg
cmp
enter
into
dec
xor
lahf
popa
push
imul
ljmp
std
movsl
mov
arpl
cmpsl
jnp
xor
inc
addr16
push
in
push
lahf
cmc
inc
pop
out
mov
pop
lcall
jae
lret
mov
cmp
pusha
jo
mov
mov
das
xchg
out
inc
stos
mov
mov
jnp,pn
lods
add
push
mov
pop
lods
or
mov
daa
push
int
pop
inc
mov
pop
data16
dec
xchg
shlb
xchg
push
mov
jnp
sti
xchg
jg
mov
enter
addr16
xchg
roll
and
jecxz
aas
in
inc
iret
cmp
or
jns
adc
out
mov
lret
imul
dec
mov
mov
jge
xchg
std
insl
jo
or
add
sub
cmp
movsl
pop
push
sbb
sbb
sub
inc
sahf
stos
pop
pop
les
icebp
movsb
sbb
push
push
pushf
sbb
mov
fxam
loopne
imul
mov
int3
daa
jo
jnp
lock
inc
outsl
push
lea
test
sub
lock
jecxz
cld
sahf
out
rolb
jno
sub
sub
shrl
push
pushf
ret
data16
sub
or
inc
pop
dec
fldenv
xchg
lock
cmpb
out
and
outsb
push
push
pop
sbb
into
jmp
mov
sbb
stos
adc
dec
dec
in
leave
or
lret
roll
fs
arpl
inc
xchg
xchg
inc
das
das
cmp
fstpt
in
cmp
push
push
fwait
inc
fsubrl
mov
aam
jmp
sbb
sbb
pop
cmc
push
ja
lahf
mov
in
popf
jnp
repz
xchg
lret
loopne
xor
pop
inc
icebp
xchg
pushf
pop
mov
fwait
xchg
xlat
add
insl
add
lahf
fcomi
lea
rclb
jae
adc
scas
aad
fstps
aad
xchg
jae
jns
xor
clc
test
lods
pushf
push
mov
xor
movsb
test
mov
mov
pusha
clc
add
movsl
test
sub
lods
jg
iret
rcll
sbb
and
leave
jae
sti
iret
jo
pop
lods
mov
jnp
in
jmp
outsl
pop
xchg
inc
imul
imul
iret
arpl
pop
sbb
in
jbe
inc
imul
dec
mov
and
sbb
sub
lahf
aad
ret
mov
nop
push
cltd
stos
lods
or
cwtl
push
cmp
fsubrl
mov
insb
repz
and
pop
decl
mov
sarl
cmovs
daa
push
inc
iret
in
xor
data16
addr16
xchg
push
scas
out
jo
mov
mov
inc
xor
fbstp
and
loop
push
mov
pop
sub
inc
and
xor
mov
cmp
xor
cltd
inc
imul
add
push
mov
and
inc
lea
xchg
out
mov
movsl
gs
inc
add
xlat
sub
xchg
aaa
jbe
push
loope
icebp
push
stos
lods
mov
inc
mov
stc
lcall
loop
and
and
fisubrl
divl
fldt
testl
test
adc
jbe
jle
cwtl
inc
xor
hlt
pop
xlat
jmp
add
faddl
insl
paddsw
shr
cmpl
push
ss
pop
cmc
jne
xchg
enter
aaa
xor
ds
mov
loopne
mov
insb
lds
mov
push
add
dec
daa
and
fnsave
pop
jnp
and
dec
or
add
cmp
xchg
and
pop
mov
adc
out
xchg
inc
inc
mov
in
lahf
cmp
adc
lds
pop
jecxz
add
in
lret
sub
arpl
inc
adc
out
push
push
push
jmp
iret
xchg
jns
and
cmpsl
aad
cld
inc
and
pusha
dec
leave
cmpsb
mov
ret
nop
aad
xchg
popa
cld
shl
adc
xchg
pop
mov
int
pop
sub
xchg
idivb
add
ss
push
fistps
incb
pusha
stc
lds
cmpsb
pop
loope
or
popf
mov
mov
pop
mov
inc
inc
xchg
xchg
pop
mov
sbb
mov
mov
inc
fidivrs
in
xor
shrb
arpl
mov
daa
cmp
shl
pop
push
xchg
jp
ficoml
jg
lock
dec
jge
ja
xchg
movsb
dec
mov
inc
dec
dec
pushf
jl
fstpt
fdivl
xor
mov
mov
std
and
cltd
fisubs
jo
cld
cltd
dec
aad
outsb
mov
push
rolb
pop
cs
sub
cmp
add
push
inc
push
sbb
sub
fwait
mov
push
pushf
xor
fmuls
stos
add
movsl
sub
mov
movsl
mov
push
xchg
aas
fildll
addr16
in
inc
xor
pop
cmp
mov
adcb
ss
dec
pop
adc
mov
addr16
and
and
pushf
jb
hlt
adc
push
jne
dec
mov
fisubrl
xchg
cmp
pop
adc
stos
mov
movl
mov
sub
cmpsl
jbe
fdivs
mov
clc
mov
out
and
inc
lods
es
or
pop
inc
aas
loopne
iret
cmp
imul
add
xchg
jl
sti
sub
dec
scas
pop
stc
lods
inc
cmc
xchg
pop
add
lcall
lcall
call
cmpsl
cli
fcom
mov
cmp
pop
cld
rorl
mov
lock
push
movsb
push
out
xchg
jle
out
test
sub
xorb
inc
jg
fidivrl
mov
xchg
iret
out
add
loope
and
or
dec
mov
gs
push
cwtl
hlt
mov
jl
mov
mov
mov
jb
cmp
inc
mov
popa
stos
jmp
lods
or
out
mov
in
mov
loop
push
dec
lret
cmpsl
jl
das
adc
clc
pop
pop
daa
inc
mov
mov
ja
fs
mov
xor
lret
mov
mov
inc
inc
fidivs
mov
xor
pusha
in
outsb
push
mov
loopne
fstl
int3
jne
jo
lret
adc
insl
int3
cmpsl
push
dec
stos
inc
aad
and
xor
push
sahf
hlt
push
add
imul
xchg
inc
xorl
fs
xchg
int3
int
mov
fstpl
stos
arpl
lock
add
sub
pop
xor
sbbl
loop
mov
sbb
add
inc
ja
jle
lahf
negl
mov
adc
xchg
pop
or
gs
jb
jg
pop
rorb
mov
xor
dec
pop
arpl
xor
inc
je
outsb
outsl
add
sbb
loopne
mov
sbb
cmp
ja
mov
and
xor
xor
pop
jg
xchg
inc
int3
cmp
fidivl
mov
in
fwait
iret
inc
sub
shrb
imul
pop
push
pop
outsl
imul
xor
adcb
shl
sub
dec
inc
test
inc
test
pushf
pushf
adc
mov
loopne
or
mov
in
mov
enter
ret
pop
ret
adc
stos
imul
mov
push
mov
xchg
orl
xor
imul
cmpsb
inc
xchg
andl
popf
cmpsl
dec
add
sahf
xchg
mov
int
cmp
jno
in
dec
sub
xchg
xor
stos
inc
sahf
xor
icebp
jge
mov
aas
lock
sub
pop
aad
stos
inc
xchg
push
hlt
insl
decl
hlt
aas
push
pusha
leave
addr16
jp
jb
xchg
std
sub
mov
inc
mov
add
shr
inc
in
mov
xchg
adc
repz
sbb
in
add
aas
mov
adc
scas
xchg
mov
fwait
cltd
lods
mov
ds
aaa
sbb
aaa
popf
lahf
inc
dec
pop
dec
fdivr
push
dec
mov
adc
jb
mov
and
xchg
ja
fistpl
jae
scas
movsb
add
xchg
dec
dec
leave
jl
pop
mov
push
push
and
int3
arpl
imul
test
out
jns
rorl
daa
outsb
into
sbb
movsl
nop
ja
sbbb
cltd
push
cmp
lods
sarb
xlat
mov
dec
xchg
ljmp
lods
outsl
fcoms
fsubrl
movsb
rcrl
dec
dec
cmp
into
mov
es
dec
in
xor
mov
push
aas
mov
lahf
into
lret
xor
inc
fs
lret
xor
mov
mov
lods
lret
fiaddl
sub
fildll
xor
iret
sbb
mov
mov
and
push
push
and
mov
jb
lods
dec
jbe
xchg
insl
repz
loopne
rorb
ds
mov
mov
and
push
notb
insb
push
stc
xor
fwait
and
andb
push
push
adc
pop
mov
cltd
xchg
ljmp
pop
inc
lahf
and
movb
int3
cmpsl
xor
sub
push
inc
push
loopne
cmp
lock
and
popf
inc
or
into
div
add
popf
popf
cmpsl
xchg
mov
ret
sub
je
mov
push
nop
decb
inc
clc
mov
or
jne
gs
paddsb
push
dec
or
xlat
add
or
mov
pop
xchg
xor
in
mov
sbb
mov
or
popw
cmpsl
inc
and
cmpsb
aaa
ret
push
outsl
lcall
jg
inc
push
pop
loopne
fstpt
pop
insl
shrl
movsl
rcrb
ss
pop
dec
es
stos
data16
mov
add
in
repnz
adc
inc
push
jbe
push
addr16
data16
or
vminpd
sti
mov
cmp
pop
xor
mov
push
scas
inc
in
cltd
mov
xchg
xor
lret
test
lods
push
and
xlat
mov
mov
je
arpl
inc
jecxz
aaa
lret
fists
or
fstps
push
jne
cmp
outsl
mov
fimuls
cwtl
pop
mov
push
xlat
cmc
loope
call
and
pop
jg
aas
mov
mov
jo
pop
add
ret
push
loope
ss
mov
dec
dec
imul
aad
cmp
fwait
mov
xor
dec
movsl
ljmp
cwtl
mov
movsl
imul
std
mov
xor
cmpsl
ja
adc
push
xchg
stos
add
je
push
cltd
adc
je
test
test
fildl
inc
in
andb
jbe
mov
sbb
adc
clc
inc
lods
jno
mov
daa
mov
lret
addr16
push
push
pop
sbb
sub
imul
adc
pop
imul
and
mov
ret
dec
cmpsl
movsb
push
imul
mov
mov
mov
sarb
sbbb
and
mov
xor
lret
stos
ret
cmpsl
das
fldenv
mov
xor
sbb
stos
ss
in
mov
insb
lods
gs
shll
push
fcmovbe
jg
cmp
jmp
push
in
inc
int3
popa
bound
pop
pushf
and
inc
mov
test
hlt
fists
mov
adc
mov
add
dec
mov
aam
popa
jle
push
ds
mov
dec
pusha
mov
dec
test
cltd
or
outsb
iret
xor
lcall
je
xchg
add
fbld
test
mov
pop
int
mov
or
popa
mov
xchg
movsb
sbb
cs
cs
xchg
xchg
aam
push
lock
jp
and
mov
insl
bound
fcoml
add
icebp
xorl
ds
rorl
pop
xor
out
jecxz
adc
adc
lea
mov
cld
in
mov
mov
lock
push
fsubp
lods
je
fwait
stos
add
scas
ja
popf
mov
sti
or
cmpsb
cs
cmp
xchg
ficomps
cmpsb
popf
cld
fs
in
xchg
test
adc
add
ja
fistpll
je,pn
xor
mov
jge
mov
jmp
in
add
add
mov
lock
sarb
icebp
loopne
jge
pop
loopne
pushf
cmpsl
insl
popf
ljmp
dec
lods
mov
test
xchg
pop
inc
xchg
popf
pushf
cmp
mov
jae
jle,pn
pop
ret
inc
or
daa
outsb
bound
sub
adc
mov
jbe
test
aad
movsb
xchg
or
xchg
jmp
leave
push
pop
out
rol
sbb
or
push
mov
pop
fiaddl
mov
outsb
stc
mov
sbb
inc
inc
cltd
cli
push
in
js
cltd
sbb
sub
mov
xchg
aaa
mov
jno
cltd
or
insb
stos
xchg
add
repz
jno
lods
xor
lds
add
fidivrs
inc
jg
dec
mov
test
ja
adc
or
repnz
or
push
and
xor
fisttpll
clc
or
fdivrs
push
enter
imul
es
push
xchg
and
ss
ljmp
dec
insl
pusha
mov
jle
sbb
imul
test
mov
push
xchg
mov
iret
xchg
push
lods
adc
lock
adc
adc
sbb
outsl
jp
fs
or
hlt
or
xor
mov
sti
push
jae
arpl
insb
mov
cmp
loop
gs
add
ss
adc
pushf
das
jl
test
leave
pop
jns
xlat
jne
cmp
negl
fidivrs
mov
xchg
mov
xlat
push
add
ret
adc
and
and
pop
mov
stc
adc
push
cmpsb
mov
or
inc
pop
xchg
fcomip
add
lret
inc
aas
push
mov
pop
aaa
add
push
xchg
jmp
sub
pop
push
out
jnp
loope
lcall
shrb
jg
xlat
lods
or
cmp
je
repz
dec
iret
icebp
fs
pop
jnp
decb
inc
shr
lcall
cld
aad
lods
fisttps
jp
mov
fadds
lock
inc
xor
rolb
add
scas
xchg
sub
repnz
mov
mov
nop
popa
imul
call
nopl
imul
sub
divb
push
js
xor
fstpt
pop
dec
mov
jle
adc
lods
or
adc
jns
out
adc
stos
je
mov
jge
test
hlt
divl
and
add
push
test
std
outsb
push
jle
mov
addr16
icebp
sub
scas
mov
pop
pop
in
xor
mov
jno
jl
mov
loopne
lcall
xchg
and
into
int
sub
ficoml
push
loope
push
pop
or
arpl
arpl
cmpsb
and
dec
mov
mov
mov
xlat
test
jbe
add
cltd
dec
mov
mov
stos
xlat
scas
jno
xlat
add
data16
bswap
aas
xor
ljmp
popf
fimull
mov
dec
repz
fs
adc
mov
ds
or
sub
mov
or
subl
in
xor
hlt
into
mov
repnz
adc
cmp
mov
arpl
daa
fs
jo
test
push
mov
dec
pushf
movsb
mov
adcb
or
icebp
call
inc
add
adc
mov
jnp
daa
aam
lahf
stos
pop
daa
cmp
xchg
and
fdivrs
scas
int
shrl
sub
xchg
leave
mov
jmp
idivl
push
int3
hlt
or
out
inc
pop
icebp
addr16
aaa
pop
icebp
in
cmpsb
jl
adc
int
hlt
mov
test
mov
sbb
into
imul
sbb
sub
sbb
outsl
js
fcomi
cmp
testb
push
cmp
xchg
pop
cli
adc
push
or
xlat
sub
and
icebp
jge
push
movsb
push
xchg
pop
decb
add
lods
pop
ret
xor
inc
jecxz
push
jmp
mov
xchg
and
inc
rolb
lods
pop
jmp
dec
lret
jg
lock
nop
es
mov
stos
mov
pop
stos
ds
dec
test
cmp
cmpsb
aaa
inc
and
call
idivl
movsb
push
mov
decl
imul
adc
mov
out
stos
out
rol
jo
mov
sub
and
sbb
and
inc
cli
loopne
bound
or
and
imul
adc
nop
pop
not
mov
cltd
dec
sbb
xor
roll
jge
pop
mov
mov
push
jbe
push
pop
mov
jmp
mov
ds
test
xchg
outsb
cli
jno
and
cltd
or
shlb
aam
inc
inc
stos
xchg
pop
xchg
push
and
mov
push
je
jl
imull
das
xchg
cmp
pop
mov
fisttps
dec
fiadds
enter
jbe
jecxz
push
xchg
mov
insl
xchg
ja
mov
das
mov
mov
repnz
outsb
push
xchg
das
out
sub
xor
lret
sbb
ret
jecxz
sub
mov
xchg
fisttpl
push
xchg
lds
jno
and
or
cltd
sahf
pop
movsl
push
insl
cmp
push
popf
fwait
push
lcall
inc
in
xchg
add
push
lret
mov
shlb
push
xchg
rcrb
mov
lods
lods
aam
in
push
or
test
in
sbb
test
aam
push
int3
mov
cmpl
mov
mov
and
cs
inc
test
xlat
lds
orb
pushf
fsubs
cmp
lahf
scas
xchg
jecxz
stos
xor
addr16
ja
xchg
xor
sub
jp
push
scas
xchg
enter
in
pop
arpl
shll
pop
lcall
and
cmp
push
xor
sub
mov
ror
jl
mov
call
xchg
out
ljmp
mov
arpl
lret
jecxz
xor
loope
mov
pop
cmp
pop
notl
imul
mov
pop
shl
mov
mov
dec
fisttps
cltd
call
pushl
mov
dec
ret
push
jmp
imul
sahf
jle
or
sbb
sbb
jmp
data16
push
mov
decl
fisubl
sbb
hlt
leave
bound
sbb
scas
int3
xor
or
test
add
mov
cltd
test
mov
movsb
xchg
sahf
pop
loopne
jecxz
pop
pop
xchg
ret
jns
orl
cmc
sub
jb
outsb
xchg
jb
push
inc
xor
stos
rorl
sbb
arpl
sbb
mov
inc
jno
jae
push
mov
jno
xchg
add
lahf
cmp
std
or
push
mov
aas
add
cli
and
sub
cmpsl
cmp
add
dec
inc
aaa
ds
out
rcll
sbb
loop
lock
adc
pop
dec
inc
lret
or
add
fadd
jmp
cld
xchg
xor
cmp
xlat
popa
scas
jo
mov
sti
popf
push
sar
ds
xor
dec
add
out
mov
mov
xor
push
mov
pop
dec
nop
gs
cmp
pop
sti
lea
jb
xchg
gs
jmp
xchg
pop
adc
clc
mov
mov
push
xchg
add
pop
push
mov
aam
fdivs
aas
push
dec
cmp
add
negb
jno
stos
jecxz
fisttpl
or
stos
sub
adcl
dec
loop
push
push
cmpsb
xchg
sbb
jl
lea
fsts
sbb
sbbl
outsl
loope
imull
xchg
pop
and
lods
sbb
mov
mov
ret
sub
adc
cmp
adc
xor
fmuls
push
outsl
out
jno
pop
xchg
jbe
lahf
enter
mov
inc
fidivs
pushf
repnz
or
js
cmc
leave
sbb
adc
stc
fcoml
xchg
push
dec
loopne
sarb
push
cwtl
sub
addb
pop
rcr
pushf
xor
iret
leave
jmp
xchg
stos
xchg
fsub
fcoms
xor
push
cmp
lcall
in
mov
push
sti
jmp
adc
mov
mov
xchg
jg
test
sbb
xor
mov
pop
cmp
sub
rorl
or
sub
mov
xchg
inc
nop
push
xor
cmp
fistpll
sub
and
jb
cs
fisubl
dec
pushf
cltd
dec
mov
xchg
cmp
es
mov
jp
clc
mov
sbb
push
pop
in
dec
push
add
push
imul
adc
arpl
xchg
sub
add
lds
icebp
testl
les
or
les
imul
jns
mov
dec
add
jl
repz
push
adc
fcomps
mov
pusha
push
dec
cli
imul
outsb
push
or
pop
dec
and
ss
jg
outsb
xlat
mov
mov
sbb
xor
and
push
aam
or
cli
jns
pop
lret
push
jne
xchg
xchg
sbb
jnp
jg,pt
push
mov
xchg
jo
je
daa
rorl
jge
sub
jbe
inc
inc
or
test
fld
lea
add
add
fstl
fmuls
fwait
sti
push
add
mov
dec
ljmp
cld
xchg
lods
push
mov
pop
lds
cmp
es
xor
mov
or
xor
cmp
jle
enter
sub
lods
mov
mov
push
and
aad
push
cmp
jp
jmp
sbb
filds
jae
pop
pop
xchg
fmuls
dec
sub
int3
lea
shrb
add
test
pop
rorb
cmpb
test
cmp
adc
das
mov
push
inc
ret
add
or
or
xchg
lcall
in
loop
push
adc
iret
iret
popa
fdivs
mov
jnp
cmp
imul
or
lods
cmpsb
addr16
fisubrl
mulb
orl
bnd
in
dec
lods
sub
pop
push
pop
adc
pop
sub
mov
into
sub
mov
cmp
rclb
pusha
jg
jno
mov
sti
pop
pop
outsb
inc
lods
scas
sub
push
sub
aad
sbb
jmp
mov
or
pop
pop
sbb
fwait
loop
inc
jg
ret
and
and
and
inc
stos
inc
add
mov
mov
ljmp
lds
stos
out
sbb
sbb
movsl
out
outsb
jbe
ja
push
cmp
in
pop
push
testb
lea
fdivrl
mov
or
xor
lock
mov
sub
jnp
pop
push
lahf
ret
dec
movsl
xor
sub
out
stc
jo
imulb
rcrb
or
hlt
js
sub
lds
sbb
fcoms
loop
test
out
and
aad
enter
jg
mov
xor
call
fs
test
cs
test
and
push
cwtl
fcomip
lcall
mov
adc
adc
mov
inc
cmp
out
or
dec
sahf
adc
jmp
lods
scas
xor
xor
outsb
movsl
xor
imul
ljmp
testl
cmp
xor
pop
jnp
mov
push
cwtl
and
and
stos
sub
pop
ror
or
dec
sub
loopne
test
push
loopne
mov
and
and
or
push
mov
int3
lock
fucom
mov
neg
mov
rcll
xor
lcall
clc
mov
ja
mov
inc
fnsave
lcall
out
cli
lea
sbb
sub
cmp
lods
jb
push
fildll
rorl
loop
add
or
push
repz
pop
cld
adc
xlat
adc
sub
pop
rcll
cmpsb
cmp
lret
add
xchg
pushf
jmp
pmovmskb
adc
xor
dec
or
mov
mov
ficoms
leave
adc
aaa
addr16
pop
sahf
fisubl
popf
rcrl
jo
push
jns
xchg
hlt
add
or
or
flds
cmc
or
in
mov
out
push
pop
pop
fmull
test
cmp
outsl
and
adc
sub
cmp
adc
push
sub
jnp
ljmp
sbb
jmp
mov
mov
xor
xchg
xor
fldcw
mov
stos
push
outsb
mov
cltd
dec
adc
stos
pop
stos
mov
subl
out
and
mov
xor
xchg
or
push
add
loop
and
out
in
cwtl
add
jnp
lcall
lret
and
incl
stos
outsl
daa
xor
les
sti
js
mov
mov
dec
jbe
jbe
int
sub
shl
loopne
cmpsl
jl
jnp
cmpl
imul
mov
lahf
pop
mov
fldl
pusha
mov
jo
mov
lods
pop
cli
sarl
fnstsw
or
adc
rcrb
push
add
mov
inc
loopne
stos
lret
xlat
lds
fs
xchg
movsb
outsb
cmpsl
insl
ja
jo
imulb
pop
fisttps
cld
and
subb
inc
mov
mov
mov
xor
jne
insl
xor
jns
lock
or
stc
mov
push
mov
flds
fsts
sub
sub
sub
push
idivb
call
pop
jp
dec
jb
rcl
rcrl
stc
adc
xchg
cs
data16
mov
pop
aad
div
outsb
in
mov
push
mov
sbb
adc
js
sbb
test
repnz
inc
sub
inc
mov
shrb
mov
push
push
nop
or
mov
xor
inc
lahf
fxch
dec
aam
icebp
sahf
shrb
jns
les
sub
and
dec
stos
inc
mov
dec
or
sub
jmp
test
xlat
cmc
or
and
or
clc
bound
lcallw
dec
cmp
and
js
daa
and
mov
jo
push
adc
jl
andb
stc
jl
jmp
iret
lods
jge
add
dec
add
jp
lds
mov
cmc
neg
jecxz
sub
or
aaa
popa
ljmp
jne
outsb
fs
shll
movsl
dec
dec
es
inc
negb
cltd
mov
and
pop
mov
je
push
std
xchg
pop
adc
shlb
in
pop
jne
mov
mov
dec
dec
mov
out
mov
dec
push
jno
mov
adc
clc
lds
xchg
adc
adc
shll
sub
jg
inc
fwait
scas
loope
into
xor
test
sub
js
imul
hlt
push
add
pop
push
jecxz
xor
ret
inc
mov
rorb
mov
sbb
imul
int3
or
outsl
dec
stc
scas
xor
cmp
sbb
mov
xchg
push
test
cmc
cld
dec
out
add
add
mov
fidivl
jno
mov
nop
cmp
jae
cmpsb
rorl
dec
scas
movsl
inc
mov
or
ret
push
outsl
int3
jmp
loope
pop
test
adc
inc
sub
cmpsb
imul
or
cmpsb
rol
mov
pop
xor
ret
lret
repz
sar
push
mov
dec
test
push
shll
xchg
fdivl
sbb
inc
mov
int3
or
testl
inc
ror
lods
inc
sbb
bound
pop
aad
imul
int3
aam
imul
in
jmp
adc
ds
ljmp
stos
rcr
push
aas
ret
cli
jge
or
mov
xchg
imul
and
sub
cmp
arpl
jmp
adc
js
enter
lcall
je
cmp
mov
adc
sbb
dec
xchg
jae
hlt
das
mov
sbb
call
mov
fs
sub
push
or
gs
pop
stos
test
inc
jae
fs
mov
xor
xchg
jl
std
in
insb
mov
out
out
sub
push
lds
std
neg
pop
fld
repz
mov
lahf
adc
xor
test
jecxz
in
hlt
push
les
push
imul
add
push
mov
sarb
xchg
lods
je
jne
push
push
adc
dec
mov
cltd
inc
dec
lahf
sbb
aas
jo
rcl
adc
sub
outsb
lods
test
out
cmpsb
cmp
in
pop
pop
stc
mov
or
mov
dec
xchg
fmulp
mov
dec
cld
pushw
pop
push
lods
shl
stos
pop
pop
sub
fcomps
xchg
mov
and
sbb
movsl
lret
insl
xchg
dec
dec
ds
push
inc
adc
mov
jg
add
mulb
add
insb
icebp
insl
mov
xchg
sbb
jo
scas
adc
push
in
sbb
test
test
test
cld
mov
inc
xor
out
adc
lret
xchg
xchg
cmp
push
sahf
add
jecxz
inc
adc
cwtl
mov
testl
bnd
popa
divb
pop
xchg
not
call
mov
imul
or
jae
or
rorl
mov
dec
fcmovu
pusha
in
les
pop
repz
lret
jno
notl
divl
xor
fnstenv
jle
or
or
hlt
das
icebp
or
scas
mov
xor
or
mov
dec
mov
imul
sbb
cmc
loopne
add
ljmp
push
in
mov
lahf
loopne
imul
jb
dec
hlt
xor
adc
xchg
mov
aam
mov
inc
jle
insb
mov
outsl
xor
pop
rcll
adc
sbb
rclb
lcall
jb
and
sub
jnp
popf
decb
iret
push
jle
hlt
add
insb
inc
lea
sbb
lods
lcall
cmpsb
movsl
add
add
bsf
lcall
push
mov
push
lea
cmp
or
orb
xchg
mov
jecxz
dec
dec
ffree
cmp
jl
and
jecxz
or
mov
fwait
fdivrp
lock
mov
jg
add
sub
xor
xchg
push
push
sti
outsl
lahf
sub
lods
jecxz
lock
dec
shl
sbb
stos
mov
sub
pop
cs
cs
xchg
popf
ljmp
hlt
aam
jmp
or
popa
mov
int3
push
mov
out
arpl
inc
call
mov
sbb
push
jo
sti
out
mov
mov
mov
cmp
movsb
aas
push
roll
sbb
or
imul
cmpsb
jle
in
xor
outsl
mov
adc
aam
shlb
cmp
and
adc
pop
adc
lods
fwait
and
push
pop
pop
clc
mov
test
popa
sbb
and
sbb
stos
hlt
push
iret
sbb
clc
int
xor
rorb
or
shr
fcoml
cmp
addr16
loop
mov
inc
test
into
outsl
push
and
fwait
jne
jbe
test
ja
inc
or
ljmp
cltd
mov
int
test
lahf
insl
add
lcall
mov
jb
dec
scas
sub
mov
inc
stos
xchg
cmp
sbb
out
sti
cs
mov
lret
mov
and
dec
xchg
int3
push
mov
and
inc
mulb
popf
add
insl
inc
or
jbe
inc
or
jmp
iret
loope
filds
inc
in
sbb
pusha
cld
pushf
mov
in
cli
stos
mov
popl
add
hlt
or
clc
jp
int
and
dec
add
mov
fisttpl
cmp
loop
aad
les
jnp
sub
push
mov
inc
sub
pop
mov
mov
jb
daa
and
or
mulb
call
jp
sbb
nop
dec
mov
xor
mov
mov
jns
pop
push
lret
adc
jmp
push
lea
add
cmpb
mov
xchg
dec
neg
fisubrl
scas
and
es
outsl
push
pop
enter
imull
push
cs
es
aas
mov
int3
cwtl
mov
js
inc
into
fsubs
scas
sub
push
push
sub
test
shl
pop
in
xchg
sub
out
lods
pop
push
fisubrl
inc
fisubrl
cmp
lret
repz
sbb
and
faddl
mov
aaa
push
jo
cmpb
adc
dec
xor
repz
pop
mov
idiv
push
push
lcall
mov
out
xchg
or
mov
inc
sbb
js
pop
ret
cmovne
jecxz
outsb
ds
sahf
int3
sub
rcll
xchg
mov
mov
jns
jg
es
loope
ficompl
repz
cmpsl
mov
jg
or
inc
jl
jne
dec
mov
cmp
jmp
mov
sahf
leave
adc
out
mov
cmp
sbb
pop
xchg
mov
ret
imul
ret
cmpsb
test
pop
sahf
jecxz
or
outsb
xchg
push
dec
into
idiv
add
mov
add
push
mov
adc
push
dec
xchg
cmp
repnz
stos
sub
mov
sub
xor
sbb
mov
outsl
lcall
pop
jmp
insb
pop
nop
mov
and
xor
cmp
pushf
push
mov
dec
shl
loop
dec
jecxz
and
ret
fidivl
lods
mov
repnz
test
pushf
sbb
and
movsl
cmp
push
aad
shrl
lret
pushl
data16
aas
int3
out
dec
mov
jo
inc
xor
mov
sub
pop
bound
ret
int3
ret
pop
sub
cmp
xchg
mov
int
stos
cmp
mov
or
sti
mov
cmc
lea
adc
jp
cmp
repz
xchg
mov
and
pop
test
xlat
xlat
dec
jns
popa
repz
das
adc
xor
inc
adc
xchg
add
mov
cmp
add
sahf
mov
xor
jp
push
add
out
adc
inc
insb
or
ret
sub
and
int3
push
imul
cld
xchg
adc
mov
xchg
push
lods
sbb
or
push
arpl
or
push
test
lds
or
movsl
in
xchg
mov
and
push
mov
rol
inc
cltd
cmp
push
movl
test
sub
push
fists
add
es
cwtl
sbb
int
xor
push
jae
orl
or
xor
xlat
xchg
push
xchg
pop
xor
aas
sahf
push
jae
cld
pop
jae
fwait
inc
cwtl
dec
xor
mov
or
pop
mov
pop
js
sbb
and
cld
push
outsb
movb
clc
std
pop
dec
pop
mov
xor
mov
dec
dec
dec
movsb
aas
sub
repz
mov
sbb
movsl
pop
ret
sbb
icebp
xlat
inc
xchg
cmp
popf
and
inc
xor
mov
cmp
xorb
lahf
push
insb
jo
cwtl
adc
test
stos
insl
into
xchg
arpl
dec
xchg
or
push
adc
adc
mov
jns
outsb
sbb
pop
mov
xor
je
out
push
add
data16
sbb
mov
or
jp
popf
mov
int
xor
inc
and
in
sub
fs
fxch
popf
lcall
adc
xchg
in
les
test
movsl
dec
pop
push
ljmp
jbe
pusha
add
loop
popa
lret
sahf
and
fdivrl
cmp
leave
or
adc
cltd
jae
jbe
mov
dec
jg
cmp
pop
push
mov
bound
les
aad
es
nop
aad
jecxz
nop
xchg
or
in
inc
sbb
adc
cmpsb
lods
jge
ret
mov
push
imul
sbb
mov
mov
aad
repnz
mov
icebp
pop
mov
sub
fildl
lea
adc
push
out
ficoms
inc
add
push
popa
int3
jle
cs
insb
jne
inc
fdivl
sbb
out
pop
mov
jb
push
outsl
int3
mov
fisubrl
pop
sub
mov
push
jbe,pn
jmp
push
and
pushf
jle
dec
fildl
xor
add
add
out
add
pop
mov
mov
cmpsb
push
cmp
inc
pop
pusha
aam
test
mov
adcb
nop
pop
sbb
call
and
pop
jle
jae
xchg
dec
sbb
nop
jmp
int
out
shll
or
mov
jg
xchg
mov
dec
in
cmp
add
add
stos
call
ret
mov
daa
adc
mov
cwtl
xor
insb
sbb
and
lods
in
push
cltd
xchg
sbb
adc
or
or
and
dec
push
cld
mov
sarl
mov
jl
mov
repz
mov
mov
jl
sub
int3
lahf
test
scas
xchg
sub
sub
sub
inc
xor
imul
stos
call
xor
xchg
nop
dec
push
cmc
cmp
xchg
mov
int
sbbb
sti
inc
and
adc
mov
sbb
adc
sub
jbe
notb
flds
add
or
or
out
cld
xchg
flds
mov
xchg
mul
imul
cmp
daa
fsubrs
xor
in
and
dec
mov
adc
push
scas
and
mov
mov
push
jmp
in
jle
cmp
sbb
inc
negl
outsl
int
pop
in
movsb
insl
shll
subb
das
adc
lret
mov
push
aam
xchg
add
movsb
push
leave
lret
dec
outsb
xchg
enter
out
loop
dec
dec
cmpsb
out
adc
lock
xor
sub
dec
aad
cld
ss
sub
xchg
insl
xor
lods
shlb
aas
sahf
cmp
adc
and
repnz
cmp
cmp
sbb
ds
lds
faddl
pop
lcall
icebp
adc
lahf
or
ret
push
dec
aad
sbb
pop
mov
clc
out
orl
push
inc
pop
pop
sbb
ret
cmpsl
dec
fmul
faddp
jge
pushf
add
lcall
in
push
mov
xchg
shll
subl
lea
pop
sbb
adc
or
push
out
daa
add
jb
pop
sti
cmpsl
outsb
jae
insl
inc
fmuls
sarl
imul
cli
subb
xor
jp
fidivrl
ss
pop
pop
roll
out
rcrb
fsubs
stc
mov
cmp
push
add
sti
pop
jl
mov
mov
out
out
xchg
pusha
cmp
push
arpl
jge
inc
sbb
out
in
rorb
aas
inc
ret
push
shll
je
icebp
xchg
cli
aad
lods
pop
rcll
sbb
aam
jns
dec
xlat
loope
inc
add
stos
fs
jle
fwait
shl
sbb
push
dec
or
mov
shr
or
lods
jbe
jecxz
mov
push
dec
inc
scas
dec
repz
lods
dec
fcomps
loope
sub
mov
or
mov
xlat
out
mov
into
dec
jge
mov
sbb
xchg
push
in
jo
jmp
rcrb
mov
mov
bound
sbb
jbe
out
pop
out
pop
push
bound
mov
dec
int3
inc
popa
dec
cmp
add
pop
sub
scas
loopne
in
or
pushf
fdiv
aas
call
adc
cmpb
xchg
jnp
ret
scas
mov
lods
outsb
push
outsb
inc
jle
or
fisubl
jmp
mov
cmp
sub
and
xchg
push
dec
out
repz
push
mov
or
jg
xchg
adc
inc
and
jno
mov
pop
ja
imul
out
sub
shl
out
jl
popf
sahf
lret
ret
adc
enter
sbb
pushf
out
aad
lds
gs
ret
jno
rcll
jbe
loope
jae
cmpl
icebp
icebp
mov
pop
ret
mov
jmp
inc
lods
sbb
jo
fs
jecxz
bound
dec
mov
mov
push
xor
xchg
ljmp
fstl
pop
add
pop
xor
cltd
mov
push
aad
movsl
adc
mov
sub
push
jb
dec
xor
xor
and
shll
lret
enter
cmpsl
xlat
daa
pop
and
inc
mov
call
cmpsl
jnp
in
popf
inc
xchg
mov
les
dec
mov
js
and
push
in
xor
cmp
push
out
jb
xchg
cmpsb
jbe
sub
xor
dec
fwait
mov
lea
pop
gs
cmp
les
adc
inc
shrl
and
inc
mov
xor
xor
cmp
in
push
mov
sti
ljmp
xor
daa
fcmovnu
cld
incl
sub
sub
lods
ljmp
fists
xor
cli
fsts
les
decl
sub
scas
cwtl
cwtl
ja
int3
pushf
dec
loop
push
shlb
ret
dec
mov
loope
mov
nop
pop
ja
inc
sbb
sbb
and
call
mov
xchg
dec
test
loope,pt
inc
jo
lret
ret
xchg
rcrl
cwtl
sub
gs
addr16
nop
lods
mov
sbb
cli
dec
inc
icebp
mov
pop
mov
es
or
and
add
or
add
dec
dec
in
mov
dec
dec
iret
aas
xchg
mov
adc
fnsave
dec
in
ret
push
sub
ret
inc
xchg
lds
and
maxps
int
adc
data16
sub
mov
or
inc
pop
inc
xchg
sbb
mov
and
push
cmc
loopne
aas
mov
push
xchg
sub
mov
arpl
push
jbe
xor
sub
mov
dec
xchg
sub
jle
loope
jecxz
ja
cli
xchg
test
mov
pop
mov
mov
ss
push
fnsave
push
clc
arpl
push
push
xor
cmp
xchg
xchg
sbb
ja
ja
into
inc
dec
jbe
daa
cmpsb
sub
cltd
push
lret
ror
sub
push
push
mov
inc
add
jecxz
ret
bound
test
flds
cpuid
testl
jmp
mov
divb
adc
aas
mov
xor
push
test
and
pushf
cli
mov
or
jb
xor
movsb
lods
adc
jns
clc
lcall
push
gs
les
addr16
out
std
lock
jp
mov
xor
fwait
gs
and
jecxz
mov
jo
ss
fisubs
std
or
xchg
rcrb
scas
arpl
jnp
cmp
dec
lds
movsb
xlat
mov
pop
test
xorb
pop
push
and
xchg
bound
xchg
nop
lock
sbb
jo
cmp
std
stos
aad
test
in
dec
dec
insb
out
ss
sbb
rol
push
push
jnp
leave
dec
sbb
divb
or
out
or
cmp
addb
add
nop
lret
add
aam
dec
mov
insb
dec
dec
dec
icebp
test
lcall
xchg
adc
ja
es
cmp
testl
adc
testl
test
cmpsl
in
cld
jb
or
ss
fistpll
adc
add
mov
add
stc
mov
mov
pusha
movsl
mov
push
push
push
es
sbb
loop
or
jno
ss
stos
ret
pop
idiv
rcrb
movsl
mov
imul
mov
rcl
bound
inc
loop
imul
and
out
sarb
or
dec
shl
mov
mov
adc
in
mov
jg
cltd
insb
or
rcpps
sbb
neg
fmuls
xlat
xor
dec
int
push
mov
push
and
xor
ret
and
xchg
scas
mov
inc
out
jmp
push
cmp
in
ljmp
xor
ficomps
and
scas
arpl
iret
movsb
es
xor
mov
in
pop
das
mov
jns
inc
mov
pop
mov
aad
push
xchg
in
fimull
cli
ror
daa
leave
cmp
mov
push
call
clc
ljmp
das
addr16
xchg
mov
outsb
mov
into
cmpsb
inc
mov
pop
jg
arpl
lds
xchg
and
xchg
adc
loop
xor
jne
mov
sub
test
mov
fsubs
ja
in
out
roll
lahf
sub
cmp
lock
pushf
aas
je
jge
and
sbb
sub
mov
inc
pop
rcr
push
shll
ret
xchg
adc
mov
sub
jno
mov
sti
xor
daa
gs
inc
xchg
js
into
adc
push
cli
dec
movsl
ja
pop
add
cmp
or
jl
mov
insb
mov
lods
sbb
mov
mov
das
stc
inc
icebp
jecxz
stos
push
xlat
xor
fisttpl
mov
mov
cs
sbb
ss
cmp
jmp
mov
scas
dec
test
jge
sub
ret
or
mov
lahf
aam
pushf
pop
sbbb
inc
jle
or
mov
jae
bound
xor
sbb
mov
lret
sbb
xchg
push
adcl
aaa
out
test
into
sbb
hlt
pop
add
xchg
mov
sub
jg
movsb
jl
or
mov
int3
adc
sbb
aas
dec
imul
or
sub
loop
jmp
jl
push
pop
rcrl
jo
xchg
inc
jge
popa
das
dec
xor
mov
cmp
in
cmp
inc
mov
lods
or
das
fists
pop
and
js
cmp
pop
cmp
lods
in
insl
les
xor
mov
mov
les
js
notb
mov
in
cmp
cwtl
mov
mov
inc
dec
sbb
xor
mov
out
fsts
sbb
cltd
push
jbe
dec
mov
sahf
or
cmp
in
pop
pop
mov
dec
xor
push
dec
call
in
xor
fiaddl
je
fs
pop
mov
loopne
pop
jp
push
std
adc
or
cmp
gs
or
jecxz
fwait
jb
push
js
or
popa
bnd
mov
aas
lcall
icebp
pusha
jge
add
clc
data16
jae
fcmovnu
pop
mov
testb
dec
std
and
sub
fisubs
mov
jae
xor
movsl
outsb
mov
xchg
icebp
shrb
cmp
cmp
cmpsb
leave
lret
test
imul
outsl
add
jno
scas
and
fs
mov
aas
mov
xor
js
stos
pop
pop
aaa
out
xchg
and
popa
out
in
sbb
pop
push
xlat
add
in
repnz
dec
arpl
pop
or
sbb
jbe
mul
jo
dec
stos
push
aas
pop
sub
rorl
jno
ja
aas
xchg
or
cwtl
mov
push
xchg
mov
or
sub
cmp
into
out
repnz
and
xorl
repz
adc
jp
fcompl
aad
and
nop
repnz
pop
ret
dec
mov
or
outsl
sub
dec
mov
loopne
mov
pop
inc
int3
add
or
add
addr16
mov
ss
dec
fwait
nop
mov
in
int
xchg
mov
fmull
fmul
stc
push
push
iret
out
mov
pushf
inc
mov
and
lods
les
imul
pop
call
cmp
pop
inc
adc
mov
int
test
jae
insb
sub
cld
repz
xchg
mov
mov
fnstsw
dec
mov
fsubr
mov
inc
mov
stc
jne
mov
xchg
push
or
mov
dec
mov
add
ret
stc
jb
cmp
add
movb
daa
js
jmp
decb
jbe
cmp
jae
add
add
sub
mov
xor
inc
mov
jo
sub
aaa
idiv
jle
mov
sub
cmp
sbb
pushf
cmp
sbb
push
fisubrl
sub
imul
sub
sti
popf
scas
mov
iret
and
cmp
js
jg
sub
sarb
push
jmp
add
out
mov
xchg
ret
in
ret
rcrb
icebp
cli
outsb
inc
jns
pop
dec
push
sbb
les
push
mov
jmp
cmp
mov
xchg
fisubrs
rcrl
cmc
sbb
aam
cmp
xor
cmp
ja
xlat
fmull
fcoml
das
movsl
in
xchg
jae
test
sub
xchg
mov
adc
inc
mov
or
daa
popf
repz
sbb
add
mov
pop
int3
jp
jbe
inc
mov
jl
in
mov
fiaddl
cmp
pop
sahf
pushf
imul
and
pop
push
mov
arpl
jmp
jmp
filds
mov
adc
in
lock
mov
and
repnz
cmp
aad
lahf
cmp
sbb
pop
sub
pushf
scas
shll
ja
in
scas
mov
ljmp
jmp
pop
icebp
cmp
jne
stc
fdivp
dec
inc
mov
push
lds
push
mov
aam
shll
cmp
jne
insl
rcll
jb
leave
cmp
push
scas
pop
daa
sbb
cmc
testb
or
push
ds
jns
sbb
mov
mov
test
shr
and
sbb
jbe
lcall
cmp
jo
sti
mov
and
fisubs
push
adc
cmp
jb
push
ss
mov
push
pop
mov
mov
jb
push
jno
xchg
shrl
popa
test
mov
sub
jo
add
test
shrl
cmp
jg
popf
outsl
lock
cld
xchg
inc
or
push
repnz
fisubl
add
lahf
or
lods
leave
insb
movsl
mov
loopne
cmp
cmp
sbb
jmp
mov
fstps
xchg
mov
adcb
mov
test
iret
mov
mov
mov
icebp
lods
addr16
icebp
popa
jmp
dec
xchg
dec
mov
push
dec
add
mov
pushf
push
sub
test
dec
adc
jecxz
leave
fwait
mov
xchg
idivl
popa
outsb
das
hlt
mov
out
fisttpll
and
xchg
mov
aad
mov
fmull
xchg
mov
lahf
sub
mov
fistpl
adc
rclb
pop
loopne
test
imul
pusha
xchg
cmc
and
pop
xor
data16
imul
shlb
pushf
das
mov
ret
outsb
xor
xchg
int
fsubl
cwtl
sub
pop
lcall
pusha
lods
push
fildll
pop
push
mov
xchg
push
das
dec
shll
dec
xor
adc
fst
lock
jecxz
push
jae
sub
xchg
mov
jl
add
sar
and
jnp
arpl
add
fwait
int3
and
shll
mov
mov
pop
jns
pop
and
les
rolb
dec
pop
call
push
imul
push
lcall
add
sti
adc
in
mov
sbb
ljmp
cwtl
cmp
lods
lods
cmp
loope
jbe
fisubl
jl
mov
adc
jns
add
mov
out
test
mov
and
mulb
xchg
inc
cmp
push
in
orl
jp
mov
jge
xor
jecxz
ja
aas
orl
jbe
push
aas
or
insl
imul
or
stos
lahf
sahf
sub
xor
push
push
mov
adc
inc
jge
imulb
inc
out
shl
adc
adc
gs
stc
rclb
and
test
or
dec
lret
xchg
pop
das
mov
sub
ret
fcomip
jl
xlat
and
aad
and
adc
rolb
push
cli
int
adc
mov
mov
sbb
mov
data16
ficompl
pop
push
cli
jp
mov
aas
xor
movb
fildl
xchg
xorl
mov
xchg
dec
popf
ret
imul
lahf
sub
cwtl
int
sub
lret
shlb
mov
movsb
fldt
sti
test
cmpsl
mov
or
cs
mov
mov
mov
aam
negb
mov
add
mov
push
sahf
dec
push
or
add
xor
xor
cmp
aas
pop
leave
data16
add
sbb
scas
and
sbb
adc
movsl
aas
push
push
outsl
push
mov
pop
in
int3
imul
filds
je
push
jge
and
fcoml
mov
mov
push
pop
mov
mov
lcall
jmp
insl
popa
movsl
pop
and
xchg
aas
movsb
leave
mov
shl
arpl
iret
push
cmpsb
cmpsl
mov
lock
pop
mov
clc
xchg
push
fiaddl
sbb
dec
loop
sub
into
cld
es
add
xorl
mov
test
popa
fsubs
sbb
sbb
mov
cltd
jge
out
cli
ret
movsl
lcall
add
aaa
jg
daa
lret
js
mov
mov
dec
push
fistps
inc
sub
orb
aaa
sbb
iret
xchg
mov
push
adc
or
std
sbb
mov
add
test
or
xor
mov
dec
in
and
inc
popf
mov
cmp
sub
scas
cld
nop
mov
test
inc
xor
shlb
std
popa
push
xlat
mov
jb
jmp
imul
mov
sahf
pop
push
mov
inc
sub
adc
push
or
add
mov
mov
mov
aaa
ljmp
fstpt
repnz
sub
mov
mov
scas
call
or
ficompl
mov
dec
dec
cmp
icebp
xor
rcrb
hlt
mov
popa
pop
adc
adc
mov
pusha
ret
dec
pop
xchg
popf
or
mov
mov
aas
test
loop
adc
mov
test
imul
stos
mov
push
aad
add
lds
shlb
rcll
mov
negb
roll
mov
mov
pop
mov
mulb
lea
cmp
popf
fs
lcall
in
fidivrs
call
jecxz
scas
mov
jno
inc
mov
sti
mov
mov
adc
out
jno
es
sbb
stos
loop
and
pop
sub
pop
mov
and
pop
pop
das
ljmp
repz
or
or
fwait
mov
mov
into
test
je
mov
fisttps
aad
vaddsd
xor
notl
jge
hlt
cmc
xchg
arpl
inc
fs
test
and
lea
pop
xlat
out
lahf
in
fwait
cmp
std
cmp
int
mov
cmp
or
out
adc
repz
in
add
stos
xchg
cmp
notb
or
ss
ret
inc
clc
mov
jmp
std
mov
xchg
and
jne
ljmp
pusha
xchg
sti
addr16
xchg
cmp
or
cmp
sub
or
sbb
scas
mov
cmpsb
jbe
js
test
inc
add
push
gs
jno
aad
lods
mov
xchg
and
imul
outsl
push
pusha
loop
pop
mov
in
xor
inc
cmpsl
ss
pop
inc
and
out
or
in
push
call
xor
je
cmpsb
or
rorb
outsl
jecxz
sub
add
fldl2e
mov
dec
in
mov
cld
add
lock
fdivs
cmpsb
dec
bound
mov
mov
scas
sub
jle
imul
loopne
xchg
call
inc
arpl
add
pop
mov
xchg
jp
scas
faddl
cmpb
jno
lods
lds
add
aas
sub
mov
dec
jb
stos
sub
mov
jl
pop
mov
xchg
push
sbb
jb
mov
or
and
xor
out
in
cmp
lahf
cmpl
mov
xchg
and
xchg
jmp
mov
or
or
cmp
test
jl
lock
fimuls
cmpsb
ret
lahf
into
and
je
xchg
mov
sub
jnp
out
pop
add
xor
adc
clc
fisttpl
stos
popf
lret
pop
jnp
jmp
ljmp
cli
icebp
push
lcall
xchg
jmp
dec
xchg
mov
jge
xchg
adc
inc
pop
ja
hlt
push
jecxz
fucomi
push
comiss
shrb
xchg
fistps
int
push
roll
test
mov
fs
mov
fbld
stos
mov
in
pusha
aam
adc
xor
pushf
mov
push
xlat
cmp
data16
mov
push
js
int
enter
cwtl
sahf
fists
cmp
cwtl
sub
cmp
mov
fcomps
mov
f2xm1
sub
xchg
addr16
cli
imul
nop
mov
lods
jno
or
xor
fwait
in
xchg
hlt
lahf
or
lahf
lds
into
rcr
cmp
vmwrite
pop
movsl
ds
pushf
mov
movsl
jbe
out
lahf
and
mov
jp
jo
push
mov
mov
hlt
int
mov
sbb
jl
in
std
dec
and
jae
test
into
lcall
cmp
int3
out
jno
xor
push
lods
xchg
popa
sbb
mov
loop
outsb
out
xchg
dec
mov
inc
xlat
sbb
fwait
imul
dec
aaa
imul
scas
ret
roll
inc
pop
jo
push
sbb
and
mov
cmp
inc
pop
aad
push
sbb
or
lock
ficoml
in
or
sub
gs
sub
je
lock
movsb
push
adc
mov
stc
pop
scas
aam
or
ja
cmc
fwait
xlat
ja
pop
insl
js
punpckhdq
push
fadds
int
sub
adcb
sub
adc
lret
aaa
es
push
jo
bound
jb
xor
xchg
jmp
movsl
sub
or
es
in
mov
loope
xor
push
xlat
fwait
fsubrl
xchg
out
jecxz
add
ja
xchg
sub
dec
lret
sbb
xor
mov
adc
or
call
pop
xchg
scas
aad
outsl
inc
movsl
jno
jmp
repnz
push
arpl
dec
sbb
fnstcw
push
shlb
pop
xor
sub
xchg
inc
imulb
dec
mov
inc
ss
add
pushf
adc
mov
push
sbb
or
and
pop
cmp
aad
rorb
pop
xchg
or
xchg
mov
leave
inc
dec
aad
xchg
mov
dec
and
pop
mov
adc
fwait
into
xlat
add
dec
fistl
lds
stc
xlat
pop
push
pop
rorb
mov
push
sti
pusha
cmpl
jecxz
sub
inc
lea
test
outsb
dec
mov
and
scas
jle
mov
jno
fs
add
inc
push
pop
jmp
push
call
push
push
pop
mov
out
push
mov
adc
sarb
xchg
enter
ds
aaa
mov
xor
pop
sub
dec
test
adc
lds
sbb
lret
jb
addr16
orl
jne
pop
push
mov
mull
fsubrs
ds
pop
pop
xchg
cmpsb
movsl
xor
pop
xchg
dec
mov
xor
ja
push
lods
js
testb
xchg
jl
cmc
mov
ja
sub
lret
jecxz
out
lret
mov
lret
sub
dec
push
je
es
cs
idivl
addr16
loop
mov
cmpsb
cmp
jp
fidivl
roll
pop
sbb
push
inc
fwait
inc
pushf
push
int
xchg
fcoms
out
fnsave
lret
sbb
adc
pop
push
cltd
fidivrs
shll
das
and
cwtl
cli
repnz
adc
pminsw
fildll
adc
in
sub
mov
jle
daa
test
push
pop
or
xchg
rcrl
sub
fisubl
ffree
xchg
cmp
out
lahf
enter
ret
cmpsb
addr16
inc
pusha
jmp
or
jnp
in
bnd
jae
imul
add
push
loopne
pusha
arpl
xchg
decl
inc
jnp
bound
in
cmp
call
int3
lods
and
iret
shlb
icebp
stos
push
pop
arpl
arpl
loop
orl
pop
lcall
repz
or
andb
and
popf
cli
mov
sub
xchg
fsubr
cwtl
xor
push
cltd
aaa
xchg
mov
push
int
mov
mov
loopne
inc
push
cmp
dec
addr16
dec
jmp
jg
pop
push
fadds
and
fidivrl
jns
inc
insb
cmp
or
adc
xchg
or
xor
gs
mov
stos
cld
push
push
stc
xorl
push
imul
cmp
out
add
xchg
pop
sub
push
aas
mov
je
xchg
inc
inc
jo
sub
inc
jle
mov
xchg
push
imul
mov
rclb
jbe
fwait
in
test
js
movsl
push
and
ficoml
xor
add
rorb
and
and
roll
mov
das
dec
notl
and
mov
sbb
xchg
shlb
cmpsl
xchg
inc
xor
inc
push
scas
lcall
les
sbb
in
fstpt
in
aas
xor
gs
out
icebp
mov
and
test
dec
mov
mov
pusha
mov
je
sbb
sbb
jmp
mov
fcompl
repnz
lods
cwtl
lds
mov
movsb
std
fisubrl
mov
div
xorb
rclb
arpl
mov
push
mov
scas
sarb
cld
adc
jns
adc
mov
loope
fwait
test
cmp
mov
lock
mov
add
lcall
adc
jb
jp
mov
subl
pop
fisubrl
jnp
cmpsl
fisttps
in
nop
fistpl
nop
pop
frstor
ss
lahf
rolb
sub
jp
cmp
add
sub
repz
jl
cwtl
adc
addr16
shufps
addb
pop
pop
test
pop
movsb
out
shl
pop
jmp
mov
repz
loop
cmp
lcall
lret
cs
add
lds
arpl
int3
cwtl
mov
insb
adc
xor
fisubl
fistl
mov
js
fidivrs
repnz
into
pop
adc
inc
fwait
in
test
ret
movsl
sub
pop
pop
movsl
int
inc
jns
xor
test
mov
push
shll
mov
inc
sub
sub
cltd
in
xorb
loop
xchg
fistps
les
mov
inc
mov
lret
xchg
add
test
jge
sbb
pop
adc
or
out
data16
mov
out
pop
lods
push
ss
adc
adc
insb
mov
pop
add
cmpsb
in
pusha
xchg
xchg
popf
xlat
xchg
adc
xor
dec
dec
xor
xorb
lahf
div
int3
scas
mov
inc
ret
outsl
loope
inc
pop
fcmovnu
adc
or
sub
fwait
mov
loop
insl
mov
pop
jg
je
daa
sub
jecxz
mov
fwait
xchg
xchg
push
mov
xor
xchg
mov
or
in
pop
mov
mov
mov
cltd
subl
testl
movsb
out
out
push
mov
mov
sbb
das
in
lea
test
lods
popf
mov
inc
ljmp
fld
aaa
stos
or
cmpsb
pop
es
les
inc
inc
lock
aam
inc
loopne
icebp
xor
stos
push
push
iret
fsts
fidivs
pop
xchg
jns
xor
jg
sbb
insb
mov
in
fmuls
and
mov
aam
scas
sahf
xchg
stc
ficompl
lods
sarl
mov
test
out
pushf
xchg
rcrb
fstps
inc
xchg
and
xor
or
add
mov
cmp
pop
fwait
in
sbbb
rcrb
fimull
cli
sub
mov
xor
mov
pop
adc
mov
adcb
push
divps
xchg
mov
sub
repnz
mov
aaa
xchg
push
dec
xorl
cld
cltd
icebp
push
call
stc
adc
pop
cli
jmp
or
aaa
jl
cmpl
mov
ficompl
push
push
mov
adc
inc
jno
sbbb
movsb
jp
addr16
loop
add
movb
pushf
inc
flds
lods
add
push
ret
out
sbb
in
mov
xchg
sahf
mov
mov
out
inc
out
add
movsl
dec
ret
dec
orl
sbb
pop
pop
int
adc
xchg
pop
jns
orps
push
push
fs
repnz
xchg
add
jno
push
push
add
sbb
sbb
in
arpl
es
jl
cld
pop
icebp
and
pop
mov
sub
dec
push
into
jle
pop
or
mov
xor
sahf
aas
shll
adc
sti
adc
push
ficoml
arpl
mov
cmp
mov
push
push
sub
xor
and
repz
lock
sbb
push
dec
push
mov
pop
mov
adc
mov
cmp
shlb
in
aas
mov
dec
aaa
mov
into
cmpsl
cmp
mov
aaa
je
lcall
lret
es
mov
sahf
out
lcall
push
sub
inc
pop
dec
jecxz
sti
inc
push
jns
mov
in
pop
push
loop
lcall
pop
cmp
jle
or
jb
sti
fs
and
sahf
jns
add
jmp
pop
cmp
pop
jmp
fprem1
xor
pusha
and
push
loop
test
pop
and
xchg
cmpsb
je
repz
add
test
ret
lea
sub
test
dec
sarl
inc
lret
fwait
xchg
loopne
icebp
loopne
test
push
or
outsl
push
in
ss
jl
js
jl
std
je
sub
push
jg
mov
xchg
sarb
scas
in
push
push
sti
stos
sbbl
xchg
scas
jle
inc
out
mov
push
sub
add
outsl
jle
arpl
pop
dec
mov
or
xchg
bnd
cmp
pushf
ret
pop
xchg
adc
popa
jge
xlat
push
mov
je
inc
pop
fstp
jecxz
outsl
pushw
sbb
xchg
lds
lods
flds
imul
out
sub
push
out
sub
dec
lret
xchg
enter
leave
mov
mov
inc
mov
out
test
stos
xlat
daa
mov
mov
pushf
add
outsb
std
and
mov
test
push
sahf
push
cmp
mov
lret
mov
loop
mov
xlat
lret
jecxz
les
push
mov
shrl
mov
mov
xchg
into
add
pop
cmp
inc
test
sbb
sub
xchg
add
int
out
xor
sqrtps
dec
xchg
call
inc
mov
in
scas
ds
rcl
mov
jno
mov
or
mov
clc
adc
ret
imul
or
xchg
ja
and
cmp
xchg
and
add
push
push
jno
enter
jl
fwait
inc
sahf
out
fcomi
adc
adc
cltd
aad
mov
ret
push
mov
jbe
sbb
jne
ds
out
push
les
jecxz
fidivrl
cmp
xor
popa
mov
fcmovne
sbb
add
cmpsb
mov
test
pushf
cld
out
jmp
adc
sbb
into
and
fisttpl
out
rorb
mov
push
xor
pushf
jmp
jo
sbb
stc
iret
sub
fsubl
inc
lahf
dec
faddl
in
xlat
and
gs
jno
sub
and
adc
shl
dec
out
pop
je
adc
jo
xchg
xlat
cmc
dec
hlt
fstps
cmpsb
insb
in
inc
shrb
inc
sub
push
je
mov
ljmp
mov
rcr
leave
popa
mov
mov
in
sti
and
mov
jns
loopne
ljmp
fs
sub
rclb
pop
pcmpgtb
aas
sbb
ret
jp
cmp
pop
add
xor
xor
add
mov
sub
mov
fiaddl
adc
addl
xchg
fisubs
xchg
outsb
dec
xchg
or
sbbl
fsubrs
daa
or
movsl
gs
sbbl
push
dec
dec
aaa
es
imul
or
fcmove
jae
xor
mov
mov
xor
dec
fwait
push
dec
mov
push
mov
add
mull
and
xor
xor
lods
cmp
and
stos
and
imulb
inc
xchg
mov
adc
rorl
mov
jge
sarl
test
bound
test
push
hlt
dec
orb
or
jno
lods
mov
popf
fwait
push
scas
inc
push
pop
or
mov
inc
in
icebp
push
into
xchg
movsl
outsb
iret
jo
jmp
jle
cs
push
cmpsb
xor
clc
outsb
push
or
cmpsb
or
or
mov
or
pop
push
imul
mov
xor
mov
lret
fisttpll
sbb
data16
or
sub
and
js
pop
mov
cli
fcoms
andb
xor
adc
and
cmp
push
mov
push
fucomp
adc
mov
out
push
dec
lret
push
cltd
enter
xor
sbb
loopne
mov
jp
push
xor
mov
adc
mov
stc
fnstenv
sub
fs
mov
mov
in
jl
push
and
push
int
add
test
sbb
cmp
dec
sbb
cs
das
scas
sub
xchg
xchg
pop
xorl
sti
push
addr16
lret
jno
pop
pushf
jno
outsl
dec
imul
popf
xchg
mov
out
cmpsb
inc
push
mov
push
sub
adc
cmp
outsl
mov
dec
pop
pop
add
nop
or
add
add
scas
xchg
std
bound
fs
or
ret
xchg
inc
adc
mov
inc
mov
push
xor
push
repnz
sub
mov
xlat
orl
or
sbb
push
pop
jnp
es
mov
cmpsb
addr16
cmpsl
xchg
dec
leave
inc
int3
sbb
add
int
adc
scas
adc
mov
ljmp
dec
clc
sub
loopne
ja
push
dec
iret
pop
stc
sub
int3
cmpsl
in
mov
fdivl
ds
cmp
aad
mov
lret
fcoml
movsl
arpl
sbb
cmp
sub
es
ret
lcall
xor
pop
loope
and
out
sarb
or
pop
add
xor
lahf
jecxz
jbe
fidivs
ret
sahf
aad
mov
pop
nop
fmull
loop
insb
imul
sub
aaa
or
mov
xor
popa
push
and
jbe
xchg
mov
jae
cmc
or
mov
adc
pop
xchg
and
test
add
int3
or
cmp
push
xor
inc
sbb
shr
xor
fcomip
std
mov
jbe
push
sbb
pushf
rcll
mov
addb
xchg
sbb
push
dec
subl
add
pop
inc
fwait
in
jle
add
sarb
rcll
cli
or
jp
inc
inc
stc
mov
cmp
pop
repnz
sbb
test
push
stos
dec
inc
movsb
xchg
sahf
leave
mov
stos
lock
dec
xlat
mov
jb
xchg
fs
gs
movsb
jle
cmp
adc
sbb
mov
fucomp
inc
push
jne
xlat
fsubr
mov
out
cs
inc
je
cmp
pop
mov
out
mov
das
sub
movsl
lahf
dec
sub
pavgb
cmp
lcall
popa
dec
popf
push
dec
outsl
cmp
js
sub
sbb
jecxz
xlat
mov
insl
addl
insb
mov
jo
sub
xchg
and
pop
xchg
add
js
add
mov
hlt
cmpsb
dec
dec
scas
and
adc
dec
adc
jo
mov
sub
or
xchg
ds
testl
add
into
stos
xchg
jns
scas
negb
fiaddl
loopne
mov
sbb
pushf
shlb
and
push
cli
bound
or
pop
mov
sbb
push
mov
les
aam
movsl
iret
jg
dec
push
ucomiss
sbbl
hlt
pop
in
int
inc
insb
pop
dec
add
addl
pop
mov
or
mov
sahf
push
push
outsb
dec
aad
les
lods
mov
add
js
sbb
in
xlat
pop
inc
dec
and
pushf
popa
sarb
push
mov
sbb
pop
cmp
inc
xchg
xchg
dec
iret
dec
push
lret
adc
adc
cmove
dec
pop
jmp
adc
inc
lods
xor
add
mov
cld
add
nopl
mov
inc
xchg
fistl
mov
aam
addl
adc
sub
xlat
inc
shlb
std
xor
fbld
js
pop
push
cld
xchg
sub
je
mov
ja
xchg
cli
scas
jmp
jp
add
add
ficoms
xchg
inc
sbb
push
or
loope
addr16
push
jbe
js
xor
fisubl
xorb
or
add
pop
jp
sub
les
pop
sub
ror
push
lcall
pop
jl
addb
push
mov
scas
imul
enter
dec
push
mov
shll
or
add
dec
scas
jns
inc
xchg
pop
cmp
cli
jecxz
rol
out
or
lods
jg
lcall
and
fstps
fadds
lahf
pop
data16
out
cmp
dec
insb
inc
dec
popf
mov
cmc
mov
stos
inc
adc
dec
sbb
cmp
sub
sbb
mov
inc
insb
jbe
xor
in
sub
pop
fsubl
pop
mov
jecxz
pop
mov
iret
dec
sbb
cmp
pop
sbb
fdiv
fsub
movsb
xchg
jmp
inc
mov
idiv
mov
in
mov
mov
ja
push
cld
fcmovnu
adc
jbe
adc
push
cmp
frstor
sub
orl
insb
or
addr16
adc
ret
enter
dec
push
daa
hlt
dec
mov
shlb
dec
lahf
cmp
lcall
in
sarb
pop
jle
sub
sarl
adc
aas
xchg
xor
dec
cmp
or
mov
cmp
pop
lahf
ret
push
pop
fcomps
gs
pushf
test
cltd
jnp,pt
mov
mov
popf
or
push
ret
movsb
fimuls
mov
loope
outsl
lahf
sbbl
in
cli
ret
dec
addb
loop
xor
rol
dec
popa
fildl
loop
xchg
fstpt
add
ja
adc
fmull
bound
jg
push
and
mov
js
das
out
inc
jg
pusha
clc
push
loop
lahf
push
jnp
jmp
sbb
jbe
xor
psrld
ljmp
leave
add
popa
xor
enter
addr16
jmp
outsl
es
ds
push
loop
cmp
js
or
jmp
aam
rorl
pop
inc
mov
or
xchg
scas
call
lods
xor
fmuls
stos
adcb
mov
fidivrl
in
or
push
push
in
jnp
sarl
push
in
aam
cmp
loop
push
jle
lret
sbb
adc
xchg
mov
je
inc
imul
ljmp
pop
in
aaa
mov
or
push
lock
jbe
ret
sete
or
xchg
mov
jnp
add
lock
and
or
arpl
fcmovnu
shll
rol
lret
xchg
pushf
das
xchg
addr16
mov
and
xor
fsubp
jbe
and
enter
add
sbb
add
iret
shl
sbb
adc
pusha
and
enter
mov
in
sub
enter
aad
pop
in
into
jle
xchg
outsb
in
sbb
das
lahf
fnstsw
fstpl
lcall
test
mov
stos
push
dec
cld
bound
fldcw
cli
inc
mov
lea
pop
lds
test
icebp
mov
cmp
push
es
pop
add
in
out
pop
fsubrp
and
cmc
xchg
imul
mov
and
out
sbb
mov
nop
aas
and
insb
fmuls
add
jbe
mov
ficomps
mov
add
or
inc
or
add
and
loopne
push
mov
in
loope
cmp
xor
xchg
stc
scas
dec
jge
adc
xor
adc
adc
pop
and
sbb
jo
sbbb
sub
test
xchg
push
or
adc
lret
das
dec
xor
loope
ja
scas
push
rclb
or
jno
cmpxchg
mov
shrb
add
push
mov
mov
aam
mov
jmp
cs
aas
je
xlat
push
stc
pop
push
nop
imul
stc
push
out
in
push
scas
lock
or
mov
ret
sub
pop
icebp
ja
mov
mov
fnstenv
mov
jnp
cld
loop
out
out
pop
jbe
repz
imul
xor
lcall
sbb
iret
ficomps
lret
sub
out
push
sti
cmp
in
mov
adc
sbb
das
sbb
mov
mov
movsb
dec
xor
push
das
or
hlt
xor
and
sub
fistps
dec
icebp
lods
push
push
out
jge
dec
push
scas
pop
cmc
popf
inc
adc
data16
jge
push
je
push
mov
stos
or
fwait
jne
jl
std
iret
cmp
dec
push
lods
test
xchg
mov
stc
jnp
xchg
arpl
outsb
jnp,pt
in
pusha
mov
xchg
mov
popf
jno,pt
sub
popf
jno
mov
push
enter
sbb
cmpsb
stos
push
mov
sbb
test
gs
xchg
iret
xor
xchg
add
ss
scas
mov
mov
xchg
loopne
shrl
lock
mov
jmp
mov
inc
xor
dec
xchg
insl
inc
xor
add
pop
mov
add
filds
cld
clc
rcrl
inc
lret
mov
rcl
dec
sbb
and
je
cmp
jle
push
icebp
adc
jns
loopne
pop
shlb
mov
inc
pop
jecxz
ret
xlat
inc
jmp
fiadds
scas
sub
stc
cmp
cli
nop
aad
out
xchg
inc
fwait
addl
in
mov
aas
dec
or
sub
sbb
cmpsb
mov
sbb
in
call
lds
repz
mov
adc
shlb
outsb
mov
jbe
mov
xchg
jb
test
sahf
dec
cld
lahf
shlb
cltd
gs
inc
mov
jmp
sbbb
ljmp
sbb
inc
sarb
sbb
daa
or
or
jne
jns
insb
jne
loopne
mov
loope
sbbb
loop
xchg
cltd
loope
xchg
sbb
mov
bound
rorl
cmp
mov
imul
push
push
pop
xor
mov
xlat
jl
sbb
bswap
sarl
aas
scas
mov
mov
jb
pop
pushf
call
jb
dec
adc
mov
insb
xchg
jp
rcr
pop
sbb
sub
xchg
xor
sbb
cwtl
daa
sbb
in
adc
adc
push
adc
xor
je
ljmp
faddl
pop
and
fwait
mov
xor
test
pushf
arpl
cmp
pop
test
inc
cld
mov
andb
xor
xor
mov
lret
hlt
xor
or
and
inc
les
fscale
push
jecxz
nop
cmp
ljmp
cmpsb
jp
popa
lods
leave
mov
bound
xor
adcl
ljmp
pop
cwtl
mov
inc
xchg
aad
sbb
add
pop
pop
inc
xchg
jecxz,pt
sub
test
nop
cs
sbb
cmp
daa
xlat
dec
fldl
rcrl
xorl
popa
jb
push
jle
dec
add
pusha
enter
imul
add
mov
add
mov
ljmp
movsb
into
pop
pop
jbe
adc
jbe
rolb
sbb
push
sub
cmp
sub
in
les
fistl
mov
inc
js
inc
sub
out
sub
lahf
rcrl
shrb
pop
loopne
int3
mov
or
inc
dec
jle
test
gs
xchg
lcall
ds
inc
inc
insl
sbb
fsubs
mov
dec
pop
sarb
pushf
shll
flds
fdivrl
mov
push
jno
ret
sub
int3
enter
mov
mov
fidivrs
mov
pop
xchg
orb
ret
lock
mov
mov
cmpsl
xlat
jno
enter
test
xchg
popf
sbb
push
fisubl
aas
sbb
shlb
mov
add
lods
push
xchg
repnz
stos
lods
sbb
xchg
mov
fwait
mov
adc
iret
fs
inc
push
bound
arpl
mov
sbb
xor
out
ds
mov
push
adc
xchg
cli
add
and
fbld
cmp
jge
or
out
mov
popf
xchg
mov
xor
clc
xchg
mov
and
jo
scas
fstpt
outsl
push
aaa
fistpl
leave
aad
stc
das
hlt
xor
jg
mov
loope
popw
adc
add
mov
pushf
jle
sbbl
push
push
push
sub
stos
sub
mov
insl
out
stos
movsb
rolb
pop
mov
in
into
pop
adc
jb
cwtl
or
push
pop
cs
mov
xor
sub
pop
sarb
ret
mov
cmpsb
cmc
jbe
push
sbb
add
push
cmp
jne
push
imul
adc
push
mov
jb
inc
push
push
push
jl
jp
pusha
xor
icebp
js
adc
ret
add
adc
add
push
outsb
jg
add
cli
jns
rclb
inc
test
cld
fstps
pushl
mov
lods
fs
push
dec
ss
test
lret
mov
adc
cltd
mov
out
or
into
into
lret
insl
push
cli
jmp
xor
sub
out
xchg
pop
shlb
inc
add
or
mov
movsl
xlat
jecxz
inc
ret
gs
jb
leave
cli
jns
shl
dec
xor
pmuludq
pop
jmp
lahf
out
pop
js
shlb
jb
daa
xchg
push
dec
cmp
push
cmpsl
and
and
data16
cs
sbb
adc
mov
shrb
xchg
and
enter
in
das
xor
dec
repz
into
int
stos
jo
adc
push
popf
mov
fdivs
imul
mov
addl
mov
sub
mov
fmull
xor
mov
xchg
roll
pop
xchg
xorb
int3
xchg
stc
test
ja
sub
and
cmp
add
dec
testl
lea
adc
rcll
stos
push
scas
cmp
int
andl
cs
push
mov
das
or
cmpsl
adc
lahf
mov
scas
xchg
sub
stos
mov
cli
xor
out
and
mov
xchg
mov
and
dec
inc
test
add
cltd
mov
fstsw
mov
fcoml
pop
mov
and
xchg
sbb
xchg
fnsave
add
cmpsb
cmp
rorl
add
jg
ss
in
es
pop
out
cmp
and
push
sbb
sbb
fistl
xorb
mov
test
clc
loop
and
and
xlat
outsl
fstps
push
cmp
popf
fldenv
mov
cltd
bound
sbb
data16
and
sub
sub
rcll
sbb
dec
xor
xor
scas
cld
push
mov
cwtl
aam
ljmp
aam
xor
jg
jp
xor
xlat
jge
les
addr16
es
jnp
es
fimull
clc
pusha
aad
out
neg
pushf
xlat
xchg
idiv
into
loope
pop
jae
fldl
icebp
mov
xchg
adc
xchg
cwtl
jg
jmp
or
shrb
iret
fstl
dec
loope
jge
lahf
xchg
call
sub
scas
mov
inc
mov
sub
loopne
xchg
push
xchg
pop
mov
xchg
push
mov
dec
les
or
loope
sbb
xlat
lea
pushf
jmp
jp
in
xchg
pop
cmp
push
sbb
daa
rorb
adc
jbe
mov
movl
cmp
test
dec
or
mov
imul
xchg
test
iret
mov
mov
xor
cld
xor
cmpsl
ret
js
cwtl
lahf
adc
pop
addb
pop
xchg
daa
mov
andl
dec
nop
loop
dec
fbstp
sti
outsb
fstp
lahf
or
dec
inc
pushl
mov
sti
sub
xchg
jae
insl
iret
lock
mov
testb
push
xchg
int3
dec
jecxz
mov
push
pusha
or
mov
push
pop
int3
mov
adc
pop
lret
or
fmuls
insl
call
push
jae
push
adcl
cmp
dec
mov
shll
cmp
mov
mov
repnz
mov
jp
sahf
pop
dec
adc
in
push
insb
loope
rcrb
sub
out
mov
popf
mov
xchg
faddp
xchg
aad
mov
inc
jbe
idiv
xchg
repnz
jg
ret
sahf
leave
or
inc
sbb
movsb
xchg
test
jnp
pop
cmpsl
jae
outsb
stos
aaa
cwtl
add
pop
inc
pop
mov
fcoms
push
dec
xchg
scas
cmp
xchg
nop
sbb
out
ret
loope
push
jne
hlt
cs
orb
std
fdivr
adc
shlb
scas
jmp
outsb
ja
adc
inc
enter
loopne
mov
sub
imul
sbb
cs
stos
insb
sub
cmpsb
and
pushf
unpckhps
aam
call
mov
inc
dec
flds
pop
inc
mov
xor
dec
jmp
cwtl
sbb
sub
mov
mov
shrl
pop
dec
xor
std
jg
mov
shlb
stc
repnz
scas
push
les
or
and
or
xchg
mov
cmp
mov
repz
lea
jmp
shlb
push
and
vmovups
aam
mov
xor
mov
iret
out
lahf
jo
xchg
pusha
rcl
inc
dec
jmp
sub
xchg
lock
inc
or
scas
push
xor
incl
or
aad
jne
mov
or
mov
adc
icebp
xor
cmp
pop
mov
aam
mov
out
cmp
fidivl
xor
dec
sti
mov
lods
cli
nop
scas
push
push
cmpl
xorb
or
add
hlt
dec
mov
mov
jecxz
xor
popa
rclb
pop
movsl
mov
inc
cmp
enter
inc
je
popf
pop
sbb
gs
clc
push
test
ljmp
jne
pop
mov
fidivrs
push
sub
sahf
dec
out
sbb
pop
jns
push
pop
dec
xchg
xchg
mov
add
sub
jbe
inc
sahf
jb
data16
pop
lea
lods
jns
and
jns
dec
cmp
mov
mov
fwait
jle
inc
imul
addl
push
inc
mov
adc
mov
popfw
mov
sub
push
adc
cmp
arpl
dec
in
scas
in
mov
outsb
xchg
dec
sub
in
fstpt
fwait
out
out
mov
cmpl
mov
arpl
xchg
or
or
ds
daa
fimull
adc
icebp
outsl
cmp
rcrb
xchg
mov
cmp
xor
test
and
push
cmp
fsubr
cltd
divb
mov
push
dec
jb
jnp
xor
and
jo
test
mov
mov
test
push
add
or
xlat
data16
fstps
repnz
mov
pop
fwait
push
push
repnz
xor
jecxz
push
xor
fildl
shll
mov
sbb
jge
sub
idivb
int
pop
or
cmp
ret
xchg
lret
sahf
fiadds
out
in
push
fdivrs
pop
cltd
jno
outsl
cmp
fcmovbe
mov
mov
or
xchg
ja
js
mov
out
ret
in
dec
pop
mov
in
js
enter
jb
jmp
icebp
mov
std
aaa
jne
pushf
and
adc
in
insl
test
jbe
sbb
inc
fcompl
movl
push
stos
jge
mov
insl
pop
imul
dec
shl
mov
push
lret
aam
cli
imul
sub
insb
inc
xchg
add
mov
push
jle
push
sub
inc
pop
je
pop
add
inc
mov
inc
scas
xchg
xchg
jge
fcomp
lcall
outsl
mull
sbb
or
add
test
dec
jmp
aaa
std
push
sbb
jne
jnp
cmp
mov
dec
arpl
fidivrs
les
jbe
mov
mov
xor
cwtl
cmp
aam
fbld
movsl
adc
dec
jle
out
cmp
mov
xor
insb
cs
add
cli
and
pop
pushf
mov
mov
ret
pop
push
shl
subb
and
call
fmulp
call
inc
fsubrs
frstor
inc
mov
xchg
cmp
loope
sbb
pushf
cld
test
sub
mov
and
adc
mov
pusha
gs
mov
daa
mov
shlb
cmp
les
pop
sbb
push
mov
adc
movsl
inc
xchg
or
sarl
fdivrl
imul
pop
fisttpl
leave
fldcw
and
cmovs
adc
push
testb
out
cmp
jmp
enter
xchg
or
inc
adc
pop
xor
jo
mov
popf
cwtl
out
int3
dec
cltd
jne
arpl
call
rcl
dec
ret
inc
jnp
mov
aas
cmp
mov
js
lea
les
mov
sub
push
hlt
inc
push
sbb
mov
hlt
sbb
pushw
icebp
int3
push
push
cmp
mov
jl
inc
pop
and
roll
das
stos
movsl
jnp
out
jns
pop
clc
sti
or
mov
test
aas
out
test
or
rol
push
lret
enter
sbb
and
jecxz
push
sbb
lahf
dec
inc
xchg
mull
bound
xchg
pop
or
rcll
jb
out
movsl
int
pop
ss
test
inc
arpl
js
ds
pop
jb
mov
ja
mov
jo
dec
clc
sbbb
loopne
ficoms
pop
aad
arpl
mov
icebp
xchg
loopne
sub
cmpsb
xlat
inc
xor
pusha
outsl
aad
aas
push
adc
xchg
inc
repz
stos
jmp
stos
cwtl
loope
xchg
mov
enter
std
test
in
test
sbb
pop
or
aad
andb
imul
lcall
or
sub
cs
mov
adc
faddp
stos
xchg
jns
scas
and
push
test
pop
xchg
fs
inc
or
ja
mov
dec
inc
cmpsl
jg
lds
sbb
cs
sbb
test
xor
arpl
pop
int3
fistpl
cltd
mov
imul
mov
cmp
insl
lea
gs
test
jbe,pt
jl
mov
xchg
push
dec
jae
dec
sbb
call
push
push
xor
mov
dec
jl
imul
sub
jg
xchg
cmp
testb
aaa
and
insl
sub
push
sub
mov
outsl
lds
call
xadd
pop
jl
add
adc
push
and
stc
popf
adc
aas
clc
ja
sbb
mov
scas
inc
bound
shlb
jecxz
stos
les
mov
mov
sbb
xor
cmpsb
inc
adc
xchg
xorb
mov
setle
stos
dec
xorl
ljmp
dec
fiaddl
fstpt
push
mov
fcomp
push
sub
shlb
aaa
dec
mov
mov
mov
or
lret
xchg
cmp
xchg
dec
dec
xchg
aaa
lea
scas
dec
push
es
cltd
xchg
xor
and
nop
xor
aaa
in
xchg
sti
mov
mov
xchg
dec
push
add
lds
pop
jmp
clc
pop
push
js
inc
dec
push
cs
jbe
jp
sbb
xchg
push
scas
filds
xchg
mov
stos
std
test
mov
or
jno
mov
xor
jecxz
mov
fwait
inc
fldlg2
cmp
lods
push
insl
mov
adc
stos
mov
fs
mov
jns
cmp
ret
push
pop
int3
rcrw
inc
fidivrs
mov
xor
out
and
sbb
or
and
or
mov
or
out
fisubrl
pop
sbb
call
or
push
lea
lea
mov
jb
pop
rorb
sbb
andl
xchg
cmp
cmp
xor
fnstenv
mov
add
and
fildl
dec
or
stos
fwait
mov
mov
pop
mov
or
pushw
nop
or
mov
mov
sub
repz
aaa
leave
mov
push
jmp
lahf
pop
sub
sub
sbb
outsb
or
ret
adc
xor
pop
movsl
pop
test
loope
ret
ret
out
clc
sub
kmovb
or
cltd
xor
xchg
mov
cwtl
push
inc
sbb
mov
cmp
stos
jle
pop
insb
and
cmc
aad
fmuls
xor
mov
ret
push
inc
jo
xor
jae
mov
jmp
mov
sahf
jae
pushw
ja
add
pop
pop
rclb
incb
fwait
lods
pop
xor
xor
and
pusha
mov
dec
js
les
bound
decl
loope
inc
fistpll
cmc
cmp
fstl
icebp
mov
shlb
push
jns
pop
mov
test
sub
sub
xchg
push
adc
addr16
jae
lea
aaa
push
jb
ljmp
arpl
sarb
lcall
push
jmp
or
pusha
fistl
pusha
inc
lock
inc
xor
loope
jmp
mov
cltd
add
push
mov
repnz
loop
jno
cwtl
shr
jecxz
es
mov
push
xchg
mov
dec
das
add
std
xchg
or
nop
jo
adc
add
iret
sub
lods
cmc
iret
dec
jbe
and
enter
sub
sbb
lds
repnz
and
mov
mov
inc
cmp
adcb
movsb
pushf
and
xchg
fbld
dec
scas
jae
out
scas
test
repnz
inc
adc
mov
dec
pop
xor
jmp
ljmp
out
subb
mov
add
ja
dec
stos
xlat
add
aam
stos
push
or
push
or
sarl
adc
movsb
in
and
push
inc
jo
cmpsb
xchg
popa
xlat
pusha
sti
xor
or
movsl
mov
lcall
aas
lret
mov
fs
js
mov
and
pop
or
div
ja
cmpsb
jns
ret
je
inc
lret
cmp
leave
imul
push
sbbl
dec
call
shll
dec
stc
push
call
and
fstpl
dec
cs
pusha
mov
mov
xor
mov
mov
mov
test
pop
push
adc
sahf
ficompl
dec
add
mov
adc
leave
cs
call
clc
addl
xchg
fcomip
inc
pop
out
jg
mov
adc
cmp
sbb
dec
push
outsl
cltd
outsb
push
xchg
js
xchg
cmp
mov
shrl
dec
and
xchg
orl
dec
push
outsl
stos
cmpsb
xchg
fisubrl
adc
cmp
sbb
shrb
pop
andb
xor
mov
sub
icebp
shlb
and
xor
andps
push
insl
mov
lock
and
mov
in
cmp
repz
cli
jnp
les
stos
addl
mov
decb
jne
mov
ja
dec
push
popf
dec
add
aaa
out
lods
cld
ret
xchg
add
push
or
push
mov
outsl
xchg
jge
push
or
ds
mov
les
nop
lret
cmp
inc
fucomp
xor
add
es
lret
cwtl
stos
and
jne
jnp
xchg
imulb
mov
rorb
aas
mov
and
jae
stc
imul
sub
jp
push
xor
test
cmc
push
sbb
adc
mov
es
xor
scas
into
push
jae
mov
jge
jp
loope
push
js
cmp
dec
inc
xchg
lds
jl
in
cli
in
mov
ljmp
jb
dec
pop
negb
rcrl
mov
push
andl
pop
jo
es
mov
add
xchg
mov
dec
inc
cmpsb
idivl
add
or
inc
dec
add
ja
jnp
mov
jl
ss
push
xor
mov
jb
push
popw
mov
lock
mov
shrb
sarl
sub
pop
cmpl
push
mov
mov
adc
jne
in
lods
mov
sti
sti
cmpsb
jae
in
sbb
cmp
iret
and
out
into
les
pop
lret
roll
mov
add
push
leave
or
in
pop
ja
inc
rcrb
pop
loope
mov
jl
outsb
rolb
in
dec
dec
mov
xor
movsl
inc
mov
mov
xchg
loope
add
push
adc
out
adcl
xchg
add
pop
clc
cmpsl
dec
nop
insl
movsl
ss
mov
jne
push
scas
loopne
jmp
sub
inc
fstps
imul
iret
push
push
jb
cmp
sub
inc
call
test
pop
repz
sub
inc
add
out
fdivs
outsb
scas
cli
jne
sub
add
orl
insl
xchg
aas
rclb
fildl
mov
lock
sub
adc
push
fisubrl
popa
ja
add
cwtl
dec
mov
xor
dec
std
mov
cmpsb
call
and
adc
dec
xchg
or
and
shl
mov
scas
pushf
push
jl
loopne
pop
jbe
sbb
dec
jns
mov
jnp
pop
jae
and
jmp
movsl
loope
mov
aad
jg
mov
sbb
sbb
lock
movsb
mov
and
cmp
bndldx
or
fbld
sub
fcompl
jg
ljmp
fsubrs
cmpsb
iret
nop
adc
xchg
cwtl
inc
mov
popf
ds
pushf
lock
call
mov
xchg
sub
jecxz
xor
pop
xchg
pop
mulb
inc
and
and
mov
xor
mov
push
mov
leave
mov
test
shl
jbe
and
leave
pop
mov
into
call
arpl
insb
mov
mov
incb
pop
pusha
loopne
push
mov
push
popf
jge
ds
aaa
out
out
flds
ret
xlat
pop
adc
outsb
jne
sub
nop
into
xchg
dec
lock
jno
les
mov
and
cmp
xor
push
int
push
mov
push
ret
pop
jg
bound
in
inc
adc
dec
ss
jge
mov
fwait
push
insl
repnz
and
add
push
pop
test
call
xchg
xchg
outsb
mov
mov
stos
jb
cmp
iret
out
lret
mov
aam
xchg
mov
mov
mov
hlt
xor
inc
xor
and
xchg
cli
loop
in
repz
mov
enter
stc
lds
das
scas
jle
bound
loope
adcl
loopne
adc
ret
loop
push
loopne
xchg
setge
rcrb
dec
jb
sbb
adc
mov
out
push
push
out
mov
addr16
lret
add
lahf
imul
test
inc
push
int3
dec
push
xor
mov
pop
outsb
loop
push
push
ds
cmp
out
jle
cmp
pop
cltd
scas
pop
xor
adc
inc
mov
mov
dec
xorl
pop
or
mov
repz
inc
iret
xchg
adc
stc
cmpsb
stos
push
add
pop
mov
lret
loopne
pushf
hlt
lahf
or
into
pop
stc
xor
adc
jns
cmp
jbe
adc
test
call
ss
cmpsl
inc
sbb
and
fs
in
mov
push
xor
pop
popf
popa
jnp
inc
movsb
pop
cs
jnp
adc
jnp
enter
or
and
loopne
xchg
pop
incl
mov
fnstcw
out
mov
mov
pop
mov
lods
jns
sbb
js
pop
mov
xor
movsb
xor
es
pop
push
sbb
fidivl
es
mov
lods
into
mov
ljmp
inc
outsl
enter
imul
push
test
popf
inc
enter
and
ret
pop
pop
or
inc
ljmp
js
pusha
testb
lods
aas
and
sbb
test
sti
dec
adc
test
xchg
scas
or
mov
loop
and
orl
frstor
mov
testl
mov
les
xor
sbb
push
cmp
je
out
mov
call
aas
push
jbe
mov
popf
aam
pop
sarl
pop
mov
push
in
add
and
xor
rclb
pop
inc
xlat
stos
lret
xchg
ss
lods
add
pop
mov
aas
mov
inc
push
imul
xchg
aad
sub
test
push
mov
mov
ljmp
nop
arpl
pusha
or
enter
dec
out
stc
mov
leave
sub
mov
imul
mov
mull
cld
rolb
sub
andb
sbbl
repz
mov
mov
and
adc
mov
in
push
testb
lods
arpl
sbb
mov
pop
jg
pop
or
cmp
rcrl
jb
mov
and
xorl
pop
xchg
or
test
sub
and
jnp
lret
loop
mov
lcall
add
insb
imul
mov
mov
pop
inc
ds
adc
cmp
movsl
xor
ljmp
js
push
push
mov
xchg
push
push
xlat
jge
pop
pop
loop
stos
push
xchg
add
subb
xor
xor
lock
dec
fcoml
bound
xlat
pusha
pop
xor
sub
push
xor
test
into
push
push
fcoms
jp
pop
mov
jae
lret
subb
int3
jecxz
or
es
dec
pop
inc
mov
and
xor
call
js
sbb
mov
shll
sbb
loope
jnp
sub
or
negl
insb
divb
out
nop
les
aaa
sbb
cltd
sbb
cmc
in
pop
and
setg
addr16
je
subl
jge
ja
jecxz
jle
loop
inc
cmp
pop
movsl
stos
push
pop
xor
push
xor
inc
int
ds
sub
jmp
ja
lods
cmp
pop
add
jg
inc
gs
fldt
mov
mov
ret
sub
out
repnz
ret
das
popa
sti
xchg
ret
push
scas
and
push
pusha
jae
lods
mov
or
mov
arpl
cli
cmp
jge
adc
jge
fisubrs
out
daa
scas
orb
push
movsb
xor
add
mov
roll
dec
clc
lods
fldt
sbb
fucomp
push
pop
add
mov
ss
test
iret
outsl
out
lods
pop
mov
aas
cmp
sahf
or
xchg
mov
add
mov
loopne
jmp
adc
nop
out
out
fiaddl
adc
cmp
xchg
mov
or
push
out
hlt
and
cmp
gs
lds
jno
push
clc
mov
pusha
dec
call
aam
in
sbb
imul
adc
or
loop
xor
lds
adc
cltd
dec
sub
inc
xchg
dec
dec
inc
addb
mov
cmp
das
mov
push
xchg
mov
aas
cmp
int
sub
roll
insl
mov
aaa
fdivrs
xchg
sub
sbb
aam
icebp
and
dec
push
or
xor
pop
sub
inc
outsl
pop
es
push
test
jmp
push
push
pop
xchg
add
jb
sti
adc
das
jb
les
movsb
nop
pop
frstor
jno
rol
aas
push
sbb
icebp
jl
and
hlt
xor
int
dec
rolb
aaa
aas
jmp
jb
cmp
loope
inc
bound
repnz
lea
mov
pushf
mov
out
adc
jle
and
adc
cmp
push
out
insb
xchg
jbe
mov
jmp
out
out
rclb
lcall
in
mov
subl
pop
fisubs
mov
pop
int
mov
pop
jl
hlt
fcomp
inc
data16
rcl
inc
rorl
or
arpl
aam
jb
pop
push
push
outsl
scas
or
fldcw
addr16
out
repnz
pop
sbb
jp
push
clc
and
repz
xlat
repz
sub
xchg
bound
movsl
jb
dec
gs
adc
iret
daa
xchg
out
jae
mov
ds
daa
outsb
push
xor
mulb
jg
insl
test
push
push
pop
xchg
dec
test
fwait
mov
ja
dec
mov
or
sub
cli
inc
repnz
sahf
test
sub
or
pop
jno
push
lods
mov
icebp
xchg
fwait
inc
in
jb
push
push
or
mov
cwtl
dec
rorb
loop
sahf
stos
out
push
dec
pop
cmpsb
mov
hlt
sbb
call
shlb
int3
hlt
inc
and
mov
adc
mul
ljmp
or
pop
inc
mov
adc
cwtl
sub
loope
push
pusha
fstpt
or
cmp
dec
push
pop
push
pop
pop
daa
cmpsb
mov
cmp
mul
inc
shrb
xchg
add
ret
jle
pop
jg
movsb
xchg
test
in
push
pop
push
fwait
daa
and
add
sub
ss
das
int
lock
add
and
jbe
xchg
mov
sbb
pop
and
jecxz
ret
sbb
push
js
movsb
push
hlt
mov
mov
test
ljmp
loopne
mov
dec
loop
jmp
cmc
inc
xchg
enter
sarb
imul
mov
lcall
arpl
bound
imul
dec
mov
push
xchg
lret
sub
or
addr16
lock
sbb
xchg
dec
ficompl
out
mov
sbb
loopne
in
lock
or
js
sub
les
adc
insb
cmp
and
inc
out
mov
cwtl
pop
sub
inc
iret
push
imul
mov
test
sbb
mov
mov
push
xchg
inc
std
push
pop
mov
stos
xchg
fisubs
push
dec
insl
scas
pop
dec
jb
shlb
sar
popf
stos
ret
xchg
fisubrs
inc
test
cmpsl
ss
pop
add
sub
jo
hlt
sub
scas
int
mov
jmp
xchg
inc
dec
aaa
pop
in
je
push
add
and
and
push
out
clc
ret
jmp
aad
push
into
sub
ds
mov
aas
xchg
push
mov
enter
inc
mov
add
mov
insb
call
push
pop
pop
or
int3
out
out
and
fs
subl
mov
ret
mov
out
adc
js
xor
jmp
gs
sub
in
fldcw
pop
in
mov
mov
sti
cmp
dec
outsb
movsl
ljmp
sbb
push
xor
fldenv
fildll
pop
aad
inc
push
loop
call
mov
cmp
aas
pop
lcall
les
pop
and
sub
sbb
loop
mov
insb
mov
xchg
addr16
mov
outsl
mov
fdivr
mov
add
in
push
shlb
ret
incl
hlt
sbb
push
jae
mov
xchg
test
std
mov
push
mov
pushl
test
dec
sub
imulb
cmpsl
movhps
jg
xchg
jp
pop
mov
jno
mov
lds
stos
int3
xor
mov
xlat
test
sti
aam
imul
scas
xchg
pop
int
push
xchg
lock
test
mov
inc
js
inc
in
dec
xchg
xlat
mov
xchg
add
repz
inc
xchg
cs
aaa
xor
mov
pop
popa
lds
mov
push
add
mov
pop
or
dec
das
out
rcll
sub
ret
psubb
fwait
sub
sahf
jle
or
adc
add
negb
jae
add
adc
lock
add
daa
adc
lods
mov
lret
sbb
hlt
loope
sub
mov
pop
pop
into
xor
test
xchg
or
add
loop
push
xlat
loopne
retw
sarb
faddl
mov
les
mov
pop
cmc
mov
cmpb
jmp
cs
and
sahf
xchg
es
and
cmp
jmp
mull
mov
int
add
leave
inc
cld
and
push
push
in
das
cmp
lods
add
pop
adc
dec
jge
and
mov
and
mov
mov
loopne
in
pop
mov
leave
out
in
fs
test
push
push
mov
repz
or
out
imul
stc
mov
dec
iret
and
scas
dec
jnp
pop
xlat
add
test
aaa
les
std
xlat
xor
in
mov
or
add
or
sub
sub
hlt
mov
or
rol
je
insb
pop
jp
cltd
stc
je
adc
dec
scas
push
shlb
lock
ja
dec
mov
adc
arpl
imul
mov
push
jo
stos
push
imul
mov
std
sbb
inc
int
subl
xchg
inc
popa
test
shr
xchg
lods
int3
push
xchg
push
mov
inc
sbb
inc
mov
cmp
adc
daa
iret
pusha
rcll
les
cmp
pop
and
and
sbb
mov
sbb
xlat
jb
stos
and
lret
test
data16
sub
enter
push
pop
popf
mov
ja
out
mov
shll
or
icebp
push
iret
jp
ret
cmpsl
arpl
pusha
pop
andl
mov
ret
sahf
xchg
int3
lahf
movsl
mov
sti
pop
pop
dec
in
inc
pop
fadds
outsl
pop
dec
xlat
in
fwait
aad
jb
sbb
lods
lahf
mov
dec
mov
mov
sbb
pop
sbb
lahf
cmp
outsb
xchg
mov
jo
adc
int
imul
xchg
daa
xchg
out
and
scas
ret
insl
mov
xchg
fdivr
movsl
jbe
roll
push
mov
popf
outsb
es
imul
loop
adc
ljmp
popa
lcall
mov
fldt
push
gs
sbb
xchg
jbe
sarl
sti
cmc
int
scas
push
loope
rcll
fbstp
jp
cwtl
pop
jmp
xor
inc
addl
push
ljmp
mov
xor
out
xor
lcall
xor
sub
push
imul
in
xor
imul
ret
inc
test
cmc
xor
push
dec
inc
dec
xchg
out
jp
push
scas
xchg
pop
or
in
jbe
jmp
nop
std
pop
xor
cmp
lret
lods
ror
dec
loop
mov
and
xchg
iret
push
sbb
in
sbb
ss
sub
je
mov
push
inc
add
movsl
add
pop
or
xchg
test
sub
and
outsb
jae
xor
add
lods
sub
cs
outsl
mov
pop
mov
mov
jbe
adc
es
and
mov
mov
mov
and
xchg
enter
fidivs
sbb
aas
repz
aas
shll
pop
mov
dec
and
sub
cmpl
cwtl
sbb
lock
stos
add
lods
outsl
test
aaa
mov
std
pushl
decb
test
xor
pop
rorb
frstor
xchg
inc
mov
mov
mov
addr16
sub
inc
pop
cmp
jp
mov
stos
test
push
mov
mov
sub
xchg
scas
push
sbb
mov
push
jnp
adc
mov
subl
jae
repnz
mov
ja
jb
jl
movsl
scas
and
hlt
scas
xchg
mov
cmp
xchg
and
bound
sbb
lahf
ja
call
stc
dec
cmp
sti
pop
xchg
xchg
sub
outsb
push
and
mov
lock
in
hlt
dec
or
repz
stos
jb
mov
cmpsl
jecxz
lock
pop
arpl
sbb
add
jmp
mov
faddl
mov
jae
aaa
fcmovnbe
push
insb
cmp
jecxz
push
push
arpl
je
addr16
xor
jmp
lret
push
jle
mov
or
fwait
adc
jge
pop
mov
movl
push
ljmp
jno
leave
add
mov
xchg
push
out
cltd
jae
sub
push
mov
and
ficomps
xchg
pushl
xor
lret
and
les
test
cmp
cmp
sbb
mov
dec
enter
pop
mov
add
add
cmp
push
sbb
into
add
xor
pop
mov
popa
xchg
scas
adcl
lcallw
or
lcall
and
cltd
imul
sbb
fidivs
jecxz
cmp
sbb
xor
jge
cmp
or
jmp
jg
fwait
mov
xchg
sbb
push
repnz
pop
add
bound
cmp
fs
and
push
enter
xchg
xor
mov
xchg
lret
mov
nop
xor
imul
cli
fcoml
adcb
jge
bound
hlt
insb
stc
jecxz
adc
scas
leave
add
dec
add
mov
sbb
in
mov
mov
inc
jp
mov
jmp
inc
fmuls
jbe
mov
mov
pop
sbb
pop
ficompl
sbb
dec
cmp
add
cmp
addr16
push
das
pop
lods
nop
aas
push
jge
mov
andb
mov
test
jo
mov
xchg
fldcw
iret
xchg
scas
jo
lret
mov
sub
xor
jmp
sti
pushf
out
iret
dec
push
ds
cmp
pop
xor
gs
pop
stos
movsl
pop
or
dec
push
dec
in
shrl
dec
mov
aad
push
mov
clc
lret
adcb
mov
mov
push
les
bound
cwtl
out
xchg
xchg
ficompl
daa
pop
pop
push
pop
or
xchg
adc
sti
or
xchg
mov
testl
mov
rcl
je
addl
xchg
scas
push
push
negb
or
jle
add
sahf
insl
adc
mov
dec
push
sub
add
cmp
cmp
shlb
mov
cltd
or
ret
stos
mov
scas
shl
imul
xchg
in
divl
flds
pop
fsqrt
and
popa
fcmovnbe
mov
and
insl
sbb
dec
add
mov
clc
addl
push
adc
dec
fs
popf
push
roll
ljmp
cmpsl
mov
shl
push
push
lds
xchg
push
xchg
jno
jnp
nop
into
jg
adc
push
adc
cmp
cmp
xor
popa
ret
mov
and
mov
das
imul
in
stos
add
mov
pop
adc
ss
test
dec
sbb
xor
adc
int3
dec
rol
lock
or
mov
loope
aad
adc
iret
or
loope
aaa
int3
xchg
mov
dec
push
lret
and
and
outsl
xchg
je
push
cmp
jecxz
enter
xchg
sbb
shrb
aaa
xchg
shrl
or
nop
lods
jp
push
jmp
adc
fcoms
cmp
lock
imul
sbb
testb
pop
pop
cs
sbb
test
outsb
clc
shl
insb
enter
mov
sbb
scas
ficoml
jae
inc
mov
cwtl
push
rcll
out
cmp
js
fldt
aad
lods
mov
xchg
pop
push
fcom
adc
push
or
cwtl
pushf
pop
lret
test
push
mov
or
sarl
ja
shl
call
sbb
sub
fwait
jmp
inc
mov
cli
push
push
in
in
sahf
cli
btc
in
in
add
push
fisttpl
jmp
adc
mov
mov
clc
sub
gs
loopne
inc
insl
xchg
sub
push
loopne
in
pop
xchg
pop
addl
lcall
push
lret
jbe
and
pop
ja
mov
scas
jmp
mov
or
pusha
out
push
or
jp
lahf
in
xor
xorl
adc
cltd
push
sub
adc
lahf
ds
pop
int
lret
and
ja
adc
pushf
cld
into
sbb
inc
pop
cmpsl
mov
ror
cmp
js
mov
inc
pop
notb
adc
jne
cmpsb
xchg
rolb
pushf
bound
sbb
sub
jmp
es
popf
cmp
ret
test
call
push
ljmp
mov
and
outsl
notb
push
inc
leave
fisubrl
pop
inc
and
or
in
inc
xor
jbe
ljmp
xchg
push
icebp
xor
sub
mov
push
mov
pop
mov
inc
xchg
mov
sub
sub
mov
pop
adc
jmp
jnp
js
dec
jmp
rcrb
gs
xchg
jnp
push
mov
ds
cmpb
add
push
xchg
xchg
cmp
test
into
or
fidivs
in
push
push
dec
imul
pop
mov
xchg
frstor
xor
xchg
loopne
dec
fnstcw
lods
jecxz
outsb
aam
aam
inc
and
sub
addl
sbb
mov
lea
xlat
sub
repnz
or
ds
flds
add
pop
orb
ficompl
cs
pop
xor
fisttps
sbb
loopne
lods
rorl
lock
pop
filds
mov
mov
in
push
sub
aad
pusha
stos
cld
mov
in
mov
int3
push
shlb
popf
repnz
pop
push
mov
lea
pop
insl
scas
pop
dec
ljmp
cmc
xlat
mov
imul
mov
adc
int
adc
xor
ljmp
in
movsl
cmpsb
in
dec
popf
cmp
xchg
pop
std
mov
faddl
sub
xor
dec
imul
ret
sub
ret
adc
push
dec
and
or
ja
pop
xchg
xchg
scas
cmp
cwtl
cs
jl
in
pop
ret
xchg
shrb
jg
sbb
add
add
fsubp
mov
push
cmp
and
in
cmc
pop
hlt
add
xchg
je
push
adc
out
add
les
imul
call
inc
es
jl
xor
dec
faddl
inc
mov
fisttpl
fwait
pop
jl
loop
mov
xchg
add
imul
aad
not
int
int
jo
and
pop
pop
pop
adc
pop
xchg
mov
int
sub
mov
lods
pusha
sbb
adc
and
and
test
xor
cltd
or
xor
cltd
push
mov
mov
icebp
sbb
repnz
and
inc
mov
jb
mov
jecxz
rorb
dec
ficompl
cmp
loope
in
repnz
jg
and
int
xorb
add
data16
aam
lods
or
fcoml
xorb
dec
scas
xor
cmp
insl
mov
xor
jg
popa
mov
add
or
pusha
mov
dec
popl
clc
test
sbb
add
jnp
imul
mov
mov
nop
pop
jnp
divl
nop
repz
imul
xchg
pop
lahf
push
dec
mov
mov
in
inc
sub
dec
dec
inc
pop
jle
fldl
push
js
ds
mov
adcb
repz
mov
insl
outsl
push
and
or
pop
inc
add
test
mov
mov
xor
int
lods
xchg
and
cmc
in
cs
jmp
add
mov
and
xchg
mov
pushf
push
mov
adc
xchg
testb
out
jnp
mov
test
mov
pop
xor
and
cli
loopne
imul
pushf
pop
les
mov
jns
add
in
call
aaa
call
cld
stc
adc
aad
scas
inc
dec
or
xor
dec
popf
out
out
sbb
xor
mov
jo
insl
xchg
roll
test
loopne
or
fsubrl
dec
dec
pushf
push
mov
mov
pop
cmp
dec
ret
into
dec
loope
ror
inc
leave
mov
fs
ja
dec
lods
xchg
mov
imul
leave
loope
jbe
mov
ror
jno
pop
popa
mov
xor
cmp
or
in
mov
cli
xor
andl
mov
roll
movsl
fcompl
stos
dec
addr16
mov
out
push
ja
xchg
and
xchg
int
shl
or
outsl
mov
adc
mov
mov
insb
test
fisttpll
push
push
mov
fisubrl
es
ljmp
cmc
fdivrl
mov
out
mov
clc
pushf
inc
lcall
rcr
inc
xchg
cmp
jbe
pop
psubq
or
mov
jp
lods
xchg
push
mov
push
and
mov
xlat
xchg
dec
inc
shrb
or
pushf
push
mov
stos
leave
rcll
push
mov
movlps
xor
and
test
imul
add
out
cmp
add
insb
mov
je
mov
popf
pushl
and
jl
das
out
or
cmp
push
fstps
mov
inc
jecxz
lds
scas
sub
mov
les
mov
pop
push
out
cmp
stos
push
dec
imul
test
fbld
push
icebp
jecxz
cmpsl
mov
pop
rorl
in
or
rcrl
mov
icebp
jmp
xchg
daa
imulb
sbb
add
out
push
mov
nop
into
shll
push
aas
ja
repnz
or
je
cs
xchg
outsb
ret
and
into
lock
push
daa
stos
pop
fistps
mov
repz
movsl
sbb
lret
dec
dec
mov
adc
mov
jae
mov
inc
mov
das
testb
mov
scas
inc
notl
mov
jecxz
mov
mov
pop
jno
testl
push
int3
adc
mov
ret
idiv
xchg
or
jecxz
xchg
jne
insl
aad
mov
sbb
out
jbe
pop
cmp
adc
adc
les
jbe
insl
imul
jle
jle
rcl
sarl
fadd
outsl
mov
lahf
dec
ret
lahf
pop
mov
jmp
mov
das
cmp
dec
add
cmc
xchg
sub
dec
xchg
sbb
mov
std
jo
cli
add
mov
mov
mov
cltd
test
pop
adc
xchg
ds
lahf
iret
push
sbb
and
sub
and
xor
aad
inc
or
fildl
aam
out
push
and
in
cwtl
jge
pop
jmp
push
ljmp
fs
sbb
and
mov
cld
xchg
stos
repnz
push
icebp
sbb
dec
sub
jo
sub
fistpl
leave
push
pop
lock
pop
mov
hlt
cmp
jns
jge
cs
and
fs
and
call
arpl
inc
adc
jns
push
and
xchg
pushf
sub
push
add
int
cs
jo
cmc
imul
pusha
cwtl
dec
cmpsl
stc
daa
sub
and
rol
push
mov
mov
xchg
mov
outsb
int3
sub
mov
cmpsl
rcrb
inc
pusha
add
pop
pop
orl
bound
inc
dec
outsb
push
lock
inc
cmp
cld
xchg
jae
aad
inc
mov
gs
mov
dec
ret
cmp
mov
rcll
mov
push
ja
pop
ret
lahf
xlat
mov
cmp
faddl
jmp
inc
jp
in
cld
into
aad
and
sub
test
bound
cmp
xchg
push
mov
pop
arpl
pop
negl
inc
mov
addl
cmpb
pushf
dec
mov
push
sti
pop
jle
add
in
lock
cld
adc
jae
in
cmpsl
ja
jmp
jnp
stc
jg
xorl
xchg
out
sbb
outsb
clc
mov
dec
xor
xor
xchg
popf
cmp
aam
mov
adc
pushf
shrl
inc
jae
fidivrs
jnp
mov
mov
sbbb
or
movl
in
inc
adc
xor
xlat
and
mov
outsl
icebp
rorl
sub
pop
jmp
mov
fcoml
mov
popf
fwait
js
mov
xor
mov
fs
cmp
sarl
mov
pushf
mov
xchg
cmp
ret
loop
mov
dec
jbe
xor
fidivl
arpl
push
jns
sub
inc
mov
ret
repz
cmp
lea
push
fucom
and
adc
sahf
or
pop
jecxz
dec
sbb
cmp
jge
fsts
aas
mov
add
imul
push
and
decb
ret
data16
mov
push
mov
test
lcall
inc
out
push
xchg
pop
ds
xchg
inc
lods
push
cmp
lea
xchg
loopne
cwtl
test
outsl
push
lea
jbe
xchg
sar
ljmp
mov
clc
or
movsb
mov
xor
mov
sub
inc
mov
fadd
fnstenv
lods
cmc
cmpsl
nop
sub
sub
aas
scas
sub
mov
fcoms
insl
xor
xor
jae
mov
test
xchg
scas
pushf
push
call
or
xor
jle
fldl
leave
mov
lcall
pop
add
cmc
and
mov
dec
jns
rorl
imul
cmp
jno
and
xor
enter
push
in
adc
jl
and
stos
fstpl
fldcw
xchg
sarb
out
xchg
scas
jae
clc
int
jbe
andl
fs
int3
sbb
or
mov
loop
pop
jmp
sub
scas
mov
insb
aas
pop
xor
adc
cmp
adc
mov
gs
inc
mov
lods
jg
ss
ficompl
lahf
push
xchg
addr16
das
xchg
or
jne
sbb
xor
gs
test
dec
and
or
rorl
fisubl
loop
scas
out
mov
subl
or
xor
push
xchg
push
inc
js
cli
mov
inc
dec
pushf
xor
push
and
out
add
fidivs
jne
loop
pop
sti
sahf
xor
jmp
xchg
data16
xchg
ficomps
inc
cmp
scas
sbb
jl
sub
ficoms
mov
cs
out
les
mov
push
pop
daa
add
dec
mov
push
mov
xchg
fprem
fldz
outsb
pop
sbbb
cmp
mov
push
mov
or
mov
testb
sbb
inc
mov
mov
jo
pop
cld
lock
js
std
and
add
jecxz
sbb
sub
pop
dec
scas
push
push
mov
mov
adc
mov
pop
lsl
jmp
sub
arpl
xchg
movb
sbb
push
xlat
adc
in
cmp
sbb
popa
mov
cmp
lds
xchg
cmp
movsl
mov
shl
dec
ja
popf
inc
mov
lock
inc
sub
test
movsb
rcll
je
lock
sti
pop
inc
jae
or
ret
aam
or
fiaddl
mov
xchg
jmp
orb
fcoms
push
xchg
mov
nop
cmpsb
or
fstps
add
and
subl
mov
cli
mov
das
jo
sbb
adc
lods
leave
xchg
inc
data16
push
punpckhbw
cmp
pop
mov
fadd
ret
push
sbb
dec
rcr
test
ja
iret
in
ja
sarb
pop
jmp
clc
adc
lcall
nop
mov
out
xchg
mov
dec
xchg
ja
enter
call
jb
add
mov
int3
pop
add
cmp
aam
sbb
sub
std
cmovp
xor
pop
sub
cli
push
insl
rorb
mov
hlt
push
loope
movsb
or
fwait
xchg
jae
push
arpl
insb
sbb
xor
pop
insb
push
repnz
aad
lods
cld
sbb
es
fldcw
sub
mov
ret
add
xor
ja
xor
mov
insl
repnz
fnstcw
fidivrs
jbe
mov
je
and
mov
xor
enter
iret
push
mov
mov
pop
insl
push
movsl
pushf
popf
dec
cmp
jb
mov
pushf
jne
and
inc
dec
add
mov
js
ficomps
out
ja
push
push
ret
and
outsb
push
add
fwait
mov
pop
sbb
mov
ror
addr16
push
pop
loope
fisubs
sbb
test
jge
or
lahf
dec
iret
sbb
loopne
cmp
pusha
test
pop
mov
jmp
shlb
cmp
xchg
push
push
mov
xor
ja
loope
or
sbb
stos
icebp
cmp
pop
sub
in
aaa
mov
inc
test
dec
es
subl
and
test
or
push
std
push
ror
adc
adc
xchg
aas
adc
mov
iret
sbb
sbb
insb
mov
mov
mov
sub
pop
dec
aaa
orb
sub
in
add
adc
mov
push
rorl
fistps
jg
scas
or
lds
xchg
dec
push
in
loop
pushf
xchg
adc
mov
loope
pop
mov
jae
or
and
mov
cmpl
sub
pop
rclb
adc
les
push
enter
push
notl
inc
repz
push
repz
lahf
jge
fidivrl
int3
cmp
lcall
ljmp
xchg
cmp
add
cli
pop
mov
jo
xor
stos
sub
mov
hlt
or
in
std
in
addr16
rclb
pop
push
push
xchg
push
out
mov
jne
push
jg
push
aas
sub
das
pop
dec
pushf
sbb
inc
xor
adc
inc
inc
sub
jecxz
push
sbb
cmpsl
out
rorl
mov
xchg
pop
cs
into
and
sbb
int3
xchg
clc
or
xchg
add
push
cmpsb
cwtl
popa
mov
adc
dec
xchg
adc
jp
cmpsb
mov
movsl
sbb
loop
sbb
stos
jbe
add
sub
sahf
and
xor
inc
pusha
int
shr
fadds
xor
cmp
leave
pop
cmp
jnp
cmpb
xchg
movsb
mov
in
cmp
and
lret
xchg
popf
leave
loopne
nop
loope
test
adc
gs
adc
data16
enter
adc
mov
xchg
inc
outsl
sub
xchg
push
in
mov
cmc
cmp
pusha
add
sbb
lret
ret
pop
data16
mov
mov
mov
adcl
popl
jo
jbe
lret
pop
mov
in
je
sbb
sub
or
sbb
cmp
es
push
mov
push
out
cmpsb
push
js
lcall
adc
rcll
dec
push
xor
add
mov
pop
aam
add
lods
mov
xchg
jb
cmp
jmp
shll
and
jb
cmc
shlb
mov
jge
test
in
mov
shl
insb
cltd
or
nop
test
adc
push
iret
mov
xchg
adc
loopne
call
inc
sub
xchg
fistl
jp
push
sbb
fimull
iret
sti
rcll
sahf
xchg
sbb
push
jmp
fwait
add
sahf
jo
xchg
mov
jle
cs
int3
sbb
insb
dec
aaa
aaa
iret
das
fsub
insl
test
xchg
shrb
loope
imul
filds
ret
sbb
cli
stos
pop
jbe
pop
pop
cltd
jecxz
pop
lcall
aas
push
or
mov
jecxz
ljmp
repz
iret
mov
cs
test
mov
repz
jl
xor
pop
mov
jnp
lahf
push
mulb
mov
and
adc
add
fistpll
or
dec
cmpsb
lods
or
arpl
jmp
in
jae
sub
pushf
sub
add
loopne
aad
mov
cmp
cld
jle
call
dec
daa
into
jae
dec
popf
pop
addb
psraw
dec
fidivrs
push
cmp
popa
lock
pop
sbb
inc
jle
mov
ds
mov
sbb
sbb
loopne
inc
jl
test
popa
sbb
ror
push
push
mov
xorb
adc
sbb
idivl
pop
fwait
sub
inc
cmp
and
add
insl
sub
movsl
xor
mov
lret
or
pop
and
and
inc
test
dec
mov
mov
sarb
mov
fs
loop
test
hlt
gs
flds
inc
cmp
je
pop
pop
xor
jne
dec
sbbl
inc
xchg
ret
cmpsl
cmp
xchg
je
jecxz
add
jo
jno
sub
imul
andb
rcrb
add
push
fs
jno
sub
push
in
pushf
shrl
push
or
leave
movsb
cmp
mov
mov
and
push
inc
sub
jge
stos
mov
push
lds
inc
add
movsl
cmp
aam
mov
pop
mov
int
loope
test
insb
and
xchg
out
pop
loopne
mov
pop
push
cmp
adc
jae
mov
xchg
mov
outsb
mov
das
pop
push
sbb
iret
cmp
jp
ljmp
or
xchg
xor
sbb
sbb
es
add
mov
pop
idivl
sbb
out
add
mov
inc
into
add
adc
outsl
shll
gs
pop
add
xchg
out
ja
daa
out
dec
mov
add
out
mov
fwait
pop
sub
xchg
repnz
jns
lods
dec
mov
sub
xchg
scas
xchg
mov
pop
imul
push
mov
aas
cmp
pop
xchg
fucomip
mov
aad
je
leave
push
std
fcoms
cmp
ret
adc
outsl
mov
loope
mov
sub
cmp
enter
mov
push
mov
cmp
pop
loopne
sub
lock
into
loop,pn
jmp
into
dec
repnz
pop
add
push
mov
mov
xchg
xor
and
jmp
jmp
rcll
inc
jns
iret
adc
in
cld
nop
jmp
pop
jae
pop
dec
inc
fistpl
lret
inc
les
sbb
push
subl
jno
repz
scas
and
lret
dec
and
pop
dec
adc
adc
dec
daa
pop
push
xchg
jb
loopne
cmp
push
add
imul
fnstsw
lret
xor
mov
xchg
and
sarl
aad
aad
inc
jle
xchg
imul
iret
push
fisttpll
dec
xchg
push
add
std
cmp
cmp
dec
lea
mov
fnstenv
outsb
add
decb
mov
or
pop
pusha
or
fidivrl
push
cmp
loop
sub
jnp
jmp
popf
sub
aad
add
add
push
loope
test
orb
jecxz
sbb
sub
xchg
cmp
je
sbb
mov
cmp
add
mov
mov
push
xchg
or
imul
jg
stos
dec
mov
ss
pop
xchg
add
sbb
call
je
movsl
push
push
insb
xchg
mov
insl
fs
cmp
pop
jge
mov
movsb
jne
in
inc
cmp
in
adc
or
mov
pusha
in
popf
xor
adc
ret
sbb
iret
mov
aaa
cld
and
lock
push
jle
cmp
pusha
out
std
into
clc
adc
inc
popa
dec
push
xor
enter
cmp
mov
fnsave
add
in
shll
insl
jmp
sarl
inc
clc
aaa
stos
shl
fnsave
sbb
int3
xor
sbb
lods
dec
fists
cld
dec
adc
xchg
sarb
push
add
lods
mov
js
push
imul
mov
xor
dec
lods
mov
push
jp
pop
aam
arpl
dec
pop
into
mov
je
dec
ret
adc
mov
mov
xchg
call
shlb
jle
mov
jmp
xor
sbb
jne
cwtl
inc
mov
jbe
cmp
sub
add
push
pop
in
and
lods
test
inc
push
xor
in
sbb
call
repnz
dec
cmp
in
cmc
sbb
jbe
or
out
sbb
cltd
or
ja
shrl
cwtl
push
fnstsw
mov
mov
repnz
cltd
loopne
sbb
outsl
cmp
lahf
inc
jp
mov
cld
in
ffree
out
inc
pop
addb
cmp
enter
push
push
fldcw
bound
js
adc
js
dec
lods
fildl
insl
mov
push
divl
pop
and
movsb
cmc
inc
js
jns
dec
sbb
jne
cltd
dec
mov
movsb
mov
aas
push
enter
add
sbb
and
push
fcmovb
imul
es
shrb
mov
ror
push
imul
es
and
int3
cmp
jno
cmp
pop
fisubrs
mov
adc
adc
mov
jns
fs
les
pop
sub
add
not
push
adc
pushf
push
clc
xchg
rcrb
je
push
stos
cmp
sbb
xor
push
adc
xor
mov
call
fsubr
adc
mov
dec
clc
add
push
jno
and
and
insb
or
sub
sub
cld
xor
loop
jae
dec
sti
adc
shrb
adc
out
xor
cmp
push
pop
push
mov
or
pop
sub
mov
adc
addl
mov
push
aas
xor
aam
jne
pop
fcoml
sbb
jae
daa
call
arpl
shll
sbb
and
jecxz
jno
or
mov
mov
loop
dec
mov
sub
je
dec
mov
cltd
out
repz
imul
adc
andb
lret
sub
cld
push
push
push
aas
pop
adc
je
mov
or
into
xor
push
sbb
sub
add
add
ret
sti
pop
adcl
pop
int3
imul
cs
int3
idiv
in
or
mov
addl
orl
jae
add
daa
add
sub
call
call
mov
mov
fimuls
sbb
jne
stc
loopne
push
xor
jge
adc
call
jg
mov
adc
mov
shr
les
and
cmp
ret
mov
out
out
mov
push
aas
dec
imul
dec
cmpsl
decb
loopne
xchg
std
sahf
movsb
dec
insl
rcrb
add
dec
adc
dec
hlt
push
sub
test
test
aam
ret
push
fsubr
test
nop
int3
xor
repnz
leave
les
inc
jae
inc
mov
fistpl
xor
lock
add
int3
push
in
std
jns
cmc
add
lret
fucomi
push
test
xorl
scas
lahf
sub
mov
and
data16
add
adc
cmc
leave
in
pop
int
xor
jae
cmp
xor
in
gs
jnp
mov
shrb
inc
add
mov
pop
push
sub
outsl
cmpsb
xchg
dec
imul
xchg
shll
mov
and
adc
jo
in
push
ret
and
out
mov
or
lock
sahf
hlt
hlt
sub
xchg
xor
daa
inc
jge
mov
xor
ja
sub
mov
add
pop
dec
xor
daa
int3
in
test
ror
or
cs
dec
pop
mov
adc
jb
jl
data16
add
dec
js
imul
js
dec
insl
sbb
cmp
cli
inc
mov
jo
insb
enter
repnz
cld
shlb
insb
cmpl
orl
mov
mov
xor
or
mov
std
imul
inc
faddp
cmp
ret
outsb
mov
lret
or
cmp
dec
inc
sti
popa
call
sub
xor
inc
out
or
mov
scas
aas
jne
in
repz
repz
mov
dec
cmp
mov
dec
clc
cmp
jno
ret
cld
push
xchg
ret
es
mov
ret
jg
mov
popl
in
jmp
jo
jne
mov
dec
imul
idivl
xchg
js
mov
aas
or
jno
add
imul
mov
mov
outsl
add
popf
push
test
add
scas
and
and
scas
pop
mov
dec
xor
std
push
sub
cmp
xchg
add
adc
push
xor
xchg
movsl
pop
mov
cltd
and
adc
xor
test
sbb
cmp
cltd
sub
mov
rcll
repnz
rcrb
repz
stos
sarb
loope
adc
mov
pop
lcall
cld
push
inc
and
dec
cmp
rcrb
add
lcall
fwait
pushf
daa
insl
leave
pop
jns
int3
pop
in
pop
xor
ja
movsl
int3
xlat
mov
les
pusha
pop
inc
push
ja
xchg
cmp
bound
repnz
lret
mov
sub
dec
insl
int
sub
enter
scas
popa
adc
mov
xchg
jl
rorl
jp
pop
fstpl
ret
stos
cmpsb
adc
ss
cmp
mov
je
adc
mov
cmpsb
xor
pushl
pop
daa
fildll
cmpsb
mov
enter
xor
test
adc
sub
dec
inc
lcall
fidivrs
xchg
adc
sub
push
pop
and
add
loope
sahf
lds
dec
and
push
dec
in
jp
roll
dec
jl
lahf
mov
sub
push
jne
lahf
inc
xor
add
inc
mov
dec
dec
test
ds
cmp
dec
jmp
xchg
adc
movsb
leave
cmpsb
orl
ja
push
jne
sti
push
adc
fisubs
int
repnz
pushf
mov
adc
jae
aaa
popf
fsub
xorl
call
or
ret
in
jmp
xchg
dec
lret
popf
sbb
lret
push
mov
dec
popf
into
in
outsl
lcall
cmp
push
sub
pop
call
xrelease
xlat
sbb
jle
test
sub
push
jg
jle
cwtl
sbbl
mov
mov
and
bound
clc
jecxz
cmp
mov
cmpsl
pushf
jo
jns
outsl
daa
out
xchg
fadd
inc
ror
cli
adc
adc
adc
aas
in
fidivrl
test
xor
and
jns
iret
jnp
jge
imul
xchg
jecxz
inc
jns
sub
scas
mov
sub
mov
jp
inc
insb
add
sub
pop
add
popa
shlb
sbb
dec
jg
mov
clc
cmpsl
and
les
sub
fisubl
adc
mov
xor
xor
inc
dec
cmp
jl
xor
pusha
test
cli
xchg
cmp
mov
int
sbb
arpl
mov
leave
fs
and
jae
lahf
lea
mov
sub
clc
sahf
mov
je
pop
hlt
xor
loopne
xor
lcall
sub
inc
adc
xchg
movsb
push
xor
or
stos
mov
push
push
daa
int3
clc
fnstenv
and
dec
nop
xchg
push
push
add
leave
es
or
xor
inc
jmp
out
repnz
add
push
inc
lahf
adc
ljmp
xor
jb
xchg
mov
ret
ret
push
mov
dec
inc
mov
ja
sbb
movntps
dec
jno
mov
add
in
mov
lret
icebp
pushf
or
idivb
mov
sub
mov
jns
jg
xchg
xchg
adc
nop
jne
dec
shll
cltd
or
stos
mov
movmskps
aaa
mov
loopne
add
mov
jge
pop
inc
and
leave
cmp
scas
pusha
adc
cmc
out
addr16
fcoms
loopne
jmp
rcrb
rcrl
xchg
arpl
lretw
mov
fisubl
call
dec
sub
into
add
xor
xor
lods
orl
mov
in
out
lahf
jnp
mov
test
fdivrs
cmpsl
sub
xchg
mov
roll
jg
in
adc
add
or
mov
outsl
jae
sbb
data16
dec
mov
push
aas
out
mov
aaa
insb
add
pop
in
cmp
notl
adcl
shr
dec
push
push
dec
add
and
leave
mov
cmpsb
cwtl
jg
push
push
xor
jne
mov
lcall
push
scas
pushf
xor
xchg
shr
jno
lret
or
popa
shrl
les
mov
cmp
pop
scas
mov
mov
sbb
jmp
xor
popf
pop
scas
push
push
mov
insb
call
dec
and
int3
ss
xor
out
out
pop
lea
test
ret
mov
loope
addb
sarl
cmpsl
insl
hlt
sahf
lods
mov
addl
lods
and
aam
xor
outsb
lods
movsb
js
daa
lds
jge
mov
std
lcall
test
je
in
fnstsw
xchg
or
cwtl
lock
pop
add
mov
dec
scas
inc
pop
mov
mov
fnstsw
push
jg
lret
mov
xchg
cmp
repz
dec
push
push
dec
int3
jo
jle
pop
adc
jae
adc
push
lret
jne
mov
pusha
mov
jg
add
jmp
imul
xor
mov
inc
ljmp
add
dec
insl
cmpsl
sahf
push
pop
cmpsb
out
inc
das
mov
mov
cmpsl
sub
aam
scas
push
mov
sub
xchg
mov
fs
adc
cmp
sub
aad
sbb
test
je
loope
outsl
outsl
jmp
pushf
mov
test
or
mov
imul
xchg
sahf
jo
push
imul
jne
insb
cld
mov
shlw
es
mov
aas
cmpl
jnp
push
test
sub
fcompl
mov
inc
and
cmp
mov
sub
shrb
pusha
push
sbb
and
add
lret
mov
sbb
enter
pop
nop
pop
sbb
movsl
pop
lcall
sti
inc
lock
or
xchg
imulb
sub
imul
push
ja
mov
sbb
sbb
jns
popl
push
mov
stos
jmp
ss
es
roll
xor
das
jnp
adcl
repz
les
gs
cmp
mov
and
lods
call
cltd
jae
jbe
filds
aam
sbb
mov
imul
fwait
add
addr16
pop
cwtl
xchg
fidivs
lds
xchg
push
imul
imul
mov
cmp
add
push
mov
push
mov
ret
xchg
fcompl
fstpl
push
jl
inc
push
fs
cmp
jg
sbb
mov
push
jno
les
movl
bound
pop
dec
ret
lds
aam
ja
pop
mov
push
xor
push
idivb
mov
xchg
push
push
out
scas
adc
inc
out
pop
pop
sub
mov
pop
sbb
xchg
add
or
mov
les
add
clc
jecxz
xchg
cs
jp
jp
adc
into
add
push
imul
inc
shll
test
lea
xchg
arpl
aad
mov
pop
daa
inc
push
inc
push
scas
mov
aaa
pop
pushf
inc
pusha
jne
sub
push
lds
jns
mov
xlat
je
test
sub
clc
mov
sbb
enter
in
and
sbb
sbb
loope
call
sbb
test
ret
sbb
inc
leave
lock
lret
mov
xchg
cmpsb
or
and
sbb
and
and
loopne
in
or
rcrb
out
cmp
das
cmpw
loope
jbe
cld
mov
int
in
pop
cmpsb
dec
cld
fiadds
dec
sahf
jecxz
adc
test
stos
int
sbb
pop
jle
and
sbb
mov
mov
movsb
or
push
mov
adc
or
xchg
subl
and
inc
mov
jno
ret
and
addr16
inc
jb
push
or
pop
inc
push
inc
mov
mov
inc
xor
cmpsb
fwait
push
and
daa
dec
push
dec
xor
and
js
adc
add
js
cmpl
mov
inc
fstps
dec
xor
mov
cs
and
testb
lods
jg
jae
pop
push
ljmp
jbe
cmc
mov
fs
je
cwtl
fs
push
push
adc
sub
lea
push
sbb
cmpsb
mov
cmp
inc
sbb
add
inc
clc
push
call
ds
sub
mov
inc
fchs
push
or
pop
clc
popf
mov
dec
das
fisubrl
mov
cltd
frstor
insb
scas
inc
push
aas
loop
insb
or
int3
or
lcall
sbb
push
fbstp
xor
mov
fwait
mov
test
cmc
or
dec
push
pop
test
dec
clc
daa
in
ss
shrb
sbb
fcomp
mov
sbb
int
fildl
mov
enter
dec
movsl
pusha
ret
mov
es
xchg
je
popa
bound
inc
enter
fcomps
cmp
imul
cmp
jo
fnstcw
or
xor
dec
pop
loopne
xlat
imul
cmpsb
xchg
hlt
cmp
cmpsb
scas
orb
pop
mov
mov
jecxz
xchg
jbe
xchg
inc
jl
sahf
cmc
insb
mov
sbb
stos
xchg
cld
xor
outsb
mov
mulb
aad
dec
stos
sbbl
shll
jno
sub
outsb
mov
mull
mov
adc
push
xchg
inc
push
scas
testl
mov
pop
loope
adcl
lock
mov
inc
loopne
mov
cmp
jecxz
sbb
lret
dec
sbbl
push
mov
std
dec
xchg
dec
dec
xchg
test
mov
rclb
or
sarl
cltd
test
fsubrl
scas
add
sbb
jecxz
in
push
and
movsl
outsl
sub
jo
andl
mov
aaa
scas
in
aas
ljmp
xor
scas
clc
test
lods
jae
fsubl
scas
sti
sbb
jae
fsubrl
je
xor
jo
pop
xor
sub
in
hlt
xchg
adc
dec
xor
push
mov
push
test
xchg
testl
ja
dec
inc
push
repz
xchg
lods
inc
popf
cmpsl
cli
or
xchg
inc
or
add
lahf
das
xor
mov
xor
sbb
pop
popf
xor
arpl
dec
xchg
jno
dec
lds
dec
leave
mov
mov
cmpsb
mov
lea
insl
jg
push
rcll
inc
pop
sub
adc
das
cld
shlb
pop
cld
or
fildl
cmc
pop
add
jae
mov
movsl
and
and
lret
sbb
push
lret
call
jno
fs
push
repnz
andl
lret
jns
push
jecxz
xchg
xchg
sbb
and
dec
sbb
cmpsb
jg
iret
cmp
lea
std
enter
dec
fcmovbe
mov
cmc
adc
cli
adc
push
ret
adc
rorl
mov
pushf
mov
pop
outsb
mov
adc
pop
mov
pushl
hlt
xchg
insl
inc
sub
mov
jmp
jge
leave
jge
and
xor
xchg
jbe
divl
add
xor
scas
cmp
xchg
lret
xchg
pop
outsb
and
xor
out
loopne
fbstp
mov
arpl
sub
pop
inc
das
adc
loopne
je
sub
push
out
pop
lret
rorb
cld
mov
test
and
std
lock
mov
sbb
sbb
int
jle
inc
ret
inc
xchg
pop
test
call
pushf
and
inc
inc
in
push
pop
cmp
push
jle
fbld
test
xchg
push
pop
imul
add
iret
lret
lods
aad
shlb
or
imul
cmc
sub
pop
pop
jno
dec
loop
jno
fwait
pop
jae
pop
mov
lods
cmpsb
or
push
jl
mov
cmp
dec
bound
adc
std
clc
lds
sub
inc
jne
aas
inc
loope
in
dec
inc
leave
cltd
std
xchg
add
jmp
xor
decb
testb
push
mov
arpl
orb
negl
in
jmp
jnp
mov
xor
ja
lods
sub
sub
inc
popf
icebp
insb
push
dec
mov
xchg
mov
or
fs
mov
sahf
mov
mov
nop
fsubs
leave
push
into
and
mov
adc
jl
jmp
mov
mov
sbbb
pop
test
xor
xchg
dec
mov
cs
mov
xlat
dec
test
mov
xchg
push
or
insl
pop
subl
dec
sbb
popa
or
fisttpll
xchg
lcall
cld
xchg
pop
cli
sbb
lods
dec
pop
jnp
push
jp
push
mov
mov
and
nop
push
mov
dec
xchg
xchg
or
inc
mov
cltd
test
add
shlb
ja
imul
aaa
push
xor
mov
js
sbb
sub
sub
push
adc
std
jae
lret
js
mov
or
arpl
add
cmp
scas
out
mov
sbb
mov
sbb
sbb
sub
stos
xor
pop
sbb
pushl
jecxz
popf
lock
inc
inc
mov
aas
movntq
jno
fdivl
movsl
jae
popa
aam
mov
movsb
cmp
pop
dec
mov
cli
mov
lret
sbb
test
lock
test
shl
inc
loopne
stc
aas
mov
fimuls
or
pop
in
ror
push
adc
stos
in
jle
or
pop
and
mov
fstps
mov
xchg
call
adc
mov
xchg
and
xor
test
testl
sbb
lcall
jge
fldenv
xor
rorl
and
xorl
std
and
repnz
sbb
mov
fs
jns
sbb
jle
lds
sub
push
dec
push
and
nop
mov
inc
inc
pop
iret
cmp
hlt
mov
mov
lret
ja
sub
xlat
push
test
iret
inc
dec
gs
out
ret
jge
adc
in
sub
pop
mov
sub
aam
loopne
lret
popf
in
xchg
jl
into
imul
nop
or
sbb
fwait
pop
dec
jno
mov
adc
ss
in
inc
push
sbb
fwait
pop
push
test
xor
mov
icebp
add
cli
scas
jmp
push
cli
movsb
jmp
fs
mov
cmpsb
das
outsl
pop
push
leave
js
sti
xchg
pop
repz
xchg
mov
sbb
cmp
int
sbb
aad
test
inc
pop
mov
and
mov
mov
sub
xchg
mov
push
jo
and
mov
cmpsl
pop
dec
js
mov
jle
das
sub
jle
jle
pop
xchg
dec
sarl
fadds
dec
and
cmp
mov
lods
std
push
neg
cmp
dec
mov
mov
loopne
mov
pop
sbb
push
imul
add
lock
fimull
cmp
arpl
mov
add
nop
pusha
push
pusha
shl
mov
jl
jmp
inc
and
push
lods
jecxz
pop
shlb
add
out
loopne
into
pop
add
mov
nop
shl
pop
sti
mulb
xor
iret
mov
jmp
dec
fwait
imul
mov
push
pop
lahf
out
push
push
or
sahf
orb
mov
jns
cwtl
xchg
pusha
fwait
out
jmp
cmpsb
pop
repnz
inc
xchg
fsub
pop
adc
pop
fistl
shr
insb
push
clc
add
sub
pop
jno
jle
push
pop
or
jno
and
cmpsb
mov
loope
rcrl
cli
adc
mov
mov
cld
aam
sahf
shrl
mov
inc
int3
fs
imul
xchg
add
sahf
cmp
sub
loope
push
pop
xor
adc
lods
mov
xchg
lahf
lcall
cmp
pop
movsb
adc
push
loopne
pop
js
out
cmpsl
lcall
popa
int
mov
std
pop
jge
or
cmc
repnz
imul
pop
rcr
ja
rorl
lea
jp
push
into
mov
or
popa
int
push
lods
movsl
mov
jae
lock
rdpmc
inc
cltd
test
mov
mov
jecxz
xor
popf
and
std
in
lret
call
jbe
pop
mov
das
pop
pop
lods
fstpt
and
add
fistps
and
add
mov
pop
popa
int
lods
sub
in
push
ret
add
loope
movsl
les
mov
adc
mov
cmp
mov
cmp
jbe
leave
cmp
jecxz
inc
inc
sarb
adc
mov
icebp
push
mov
and
pop
xchg
pop
imul
jge
sub
shll
add
adc
popf
sub
dec
lret
jbe
sub
sbb
sub
cmp
cmp
fs
mov
cltd
mov
push
ljmp
mov
in
insb
and
cmp
test
insb
mov
mov
clc
shrb
pop
push
cmpsb
insl
fnstcw
mov
xchg
movsl
test
sbb
movsl
jp
cwtl
inc
mov
loop
jbe,pn
mov
mov
push
cs
lods
or
test
fwait
cmpsl
arpl
inc
adc
xchg
xchg
jo
xor
dec
fwait
jg
and
or
sbb
pop
das
mov
bound
or
add
xchg
data16
insl
mov
lret
mov
or
movsl
cs
push
mov
fistpll
lods
out
xor
push
jnp
mov
xchg
mov
out
mov
outsl
cmpsb
lret
ljmp
pop
jo
sbb
add
push
loope
loopne
je
xchg
xchg
dec
inc
lahf
xchg
scas
aad
xchg
and
and
add
fadds
clc
push
mov
sub
xchg
or
lcall
sbb
popa
repnz
mov
mov
pop
or
cmc
bound
xor
fcmovne
js
hlt
jnp
fnstcw
mov
lods
out
xchg
mov
or
and
stos
bnd
aad
shrb
push
lret
stos
insb
lcall
and
fwait
enter
mov
addr16
movsb
popa
cmp
pop
or
bound
sub
jne
movsl
daa
addr16
pushf
jbe
xlat
xor
and
imul
jle
loope
mov
sub
pop
test
pop
arpl
pop
into
rclb
and
sbb
xchg
push
fstps
cmp
pop
jns
fcmovu
rolb
cwtl
mov
or
ja
dec
test
jmp
cmpsl
or
push
push
push
push
cmp
das
jl
adc
lods
push
adc
call
mov
clc
or
pop
add
xor
movsb
pop
cmp
sub
xor
fsubrl
sbb
xchg
aad
mov
dec
cwtl
inc
lahf
add
mov
or
add
jmp
xor
jae
in
lcall
ja
pop
jo
sarb
sub
xor
xlat
push
jle
outsb
jmp
jle
push
dec
clc
xchg
test
shlb
cmpsb
sbb
or
cmp
push
mov
or
sbb
scas
inc
jge
loopne
xor
gs
push
ficompl
dec
subl
pop
lret
mov
pop
adc
rcr
imul
and
enter
in
std
dec
mov
test
ret
movsb
sarl
in
jbe
lods
fisubl
into
xchg
out
cmp
cmp
movsl
xchg
add
shlb
jnp
fisubl
push
add
outsl
cmpsb
lret
mov
pop
add
jmp
sub
mov
out
cmp
gs
cmp
gs
xlat
cmp
push
xchg
mov
add
mov
inc
xchg
inc
enter
dec
mov
in
stos
cltd
std
adc
dec
mov
ds
or
les
les
add
pop
inc
int3
repz
add
iret
jnp
repnz
sbb
arpl
mov
or
orl
pop
push
add
and
out
or
aam
scas
add
push
jae
loope
enter
jmp
decb
lds
stc
das
pusha
loop
lcall
shrb
in
lahf
pop
push
loope
ret
pop
add
sub
push
pop
cmp
push
ror
sbb
addr16
inc
test
jge
cmpsl
ss
adc
rclb
xor
or
or
or
in
lret
dec
ds
insb
fisttpl
clc
sarb
je
adcl
fidivs
fsubl
mov
cmpsb
and
dec
mov
push
add
cmp
or
div
stc
sarl
das
cmp
iret
xchg
mov
xchg
pop
xor
push
mov
and
inc
mov
cmc
fisubl
lods
mov
pop
aam
sbbb
push
jecxz
cli
jg
add
arpl
xor
inc
inc
int3
roll
ljmp
cmp
or
mov
mov
dec
imul
stos
loop
in
jbe
cmp
stos
inc
nop
divb
push
shl
push
cmp
pop
inc
inc
jecxz
mov
mov
jl
sbb
xor
mov
nop
lea
test
pop
iret
aad
call
bound
mov
sub
or
repz
pusha
or
cmp
xor
pushf
sub
lds
outsl
add
jne
dec
mov
and
mov
insb
incl
movsl
sbb
or
fistpll
pop
xor
cwtl
cmp
stos
sbb
int
mull
ret
arpl
movsl
push
movsl
ss
jbe
loopne
add
pop
jmp
int3
imul
push
inc
xchg
fisubrl
popf
test
mov
ret
sub
lods
fisttps
cmp
mov
cltd
scas
jne
or
addr16
clc
cmc
pusha
and
cmpsb
mov
cs
jo
leave
mov
lods
or
mov
mov
jae
sbb
ljmp
or
dec
aas
popa
inc
pusha
call
je
outsl
xchg
lcall
repnz
sarl
mov
push
rcll
lahf
pop
addb
mov
icebp
push
insl
jb
imull
aaa
pop
fistpl
pop
xchg
ficoml
ficompl
inc
mov
and
std
subb
mov
data16
movsb
fistl
mov
xor
filds
call
std
lret
imul
pop
fstpt
sbb
cmpb
sub
fisttpl
mov
sbb
cwtl
mov
sbb
mov
shll
xchg
dec
mov
sub
test
lods
popf
pop
adc
out
fcmovb
stos
xchg
xchg
addl
out
iret
add
sub
jecxz
add
orl
add
add
cmp
xlat
mov
adc
sahf
lcall
ss
pusha
mov
xchg
lods
adc
sub
jecxz
xor
xor
jecxz
and
movsb
cmpb
test
pop
add
dec
lods
mov
xchg
add
dec
cs
int3
mov
xor
jl
cltd
jl
push
jo
arpl
pop
movsl
push
jo
outsl
ret
jecxz
pop
mov
mov
cld
jne
xchg
gs
out
adc
and
inc
test
bound
mov
popa
xor
repz
push
subb
mov
push
add
daa
jb
jg
test
cmovae
ds
rolb
ret
pop
out
andl
imul
cltd
in
add
adc
arpl
jl
push
mov
lea
bound
pop
sub
sub
xchg
jl
repz
movsl
and
jb
adc
clc
add
and
add
adc
jl
or
in
hlt
fdivrl
xchg
mov
jle
aaa
fwait
js
ljmp
xchg
rorb
cmp
popa
int3
xlat
lds
cwtl
pop
jns
and
cmp
ret
das
ljmp
bound
out
push
jbe
lea
lds
imul
adc
xchg
outsb
push
notb
push
repnz
data16
in
push
jno
pop
jge
dec
in
jle
es
add
lret
xchg
sub
repnz
sahf
cmp
jmp
xchg
mov
pop
cmpsl
sub
ret
mov
scas
ja
mov
cmc
jge
les
push
int
shlb
inc
decl
xor
loopne
ret
jnp
xchg
push
xchg
xchg
inc
hlt
stos
or
loope
xchg
pop
inc
mov
and
xchg
fldt
mov
and
mov
inc
xlat
and
leave
jmp
lret
xchg
shl
jp
mov
sbb
je
mov
xor
mov
mov
enter
or
jne
arpl
jecxz
bnd
push
fwait
xor
and
stos
rorb
mov
aad
sub
lret
iret
xor
cli
fidivrl
push
cmp
mov
lds
dec
fidivrs
mov
ss
test
out
xchg
leave
sbb
inc
cmp
cs
test
insl
inc
popa
inc
insl
hlt
mov
cmp
pop
jmp
dec
xor
jne
in
mov
cmp
dec
or
stos
test
sbb
pop
repz
xchg
dec
cmp
lods
dec
push
jge
out
and
nop
push
shll
mov
sub
sbb
hlt
mov
stos
lods
cli
xchg
cmp
push
in
sub
insb
cmp
stc
or
mov
stc
addl
aad
les
adc
sub
sbb
or
jmp
and
cmp
test
cmp
lea
insl
clc
das
ret
push
lods
dec
ds
push
ficoms
mov
cmp
test
adcl
pop
cmp
iret
sub
insb
push
pop
enter
ficompl
mov
insb
loopne
ss
lcall
inc
int
loopne
mov
or
or
adc
inc
xchg
pop
pop
dec
dec
sub
jmp
popf
sub
std
popf
push
dec
pushf
dec
jle
cmpsl
test
sbbb
or
or
adc
cmp
sbbl
dec
or
mov
and
cmp
sahf
xorb
sub
and
nop
addr16
mov
imul
jnp
mov
adc
out
divl
add
repnz
and
jg
lea
or
in
mov
push
mov
jmp
ud1
jno
sub
sub
sti
sub
rcrb
cmp
jns
push
loopne
jb
and
dec
xlat
sub
pop
add
hlt
daa
into
xchg
cmpsl
dec
add
mov
xor
lret
ds
and
xchg
sub
mov
inc
lret
pop
jne
xchg
xor
movsb
adc
jb
test
jb
decb
jge
xor
mov
jb
dec
lock
dec
cmovbe
sbb
sahf
inc
rol
adc
add
fistps
cmc
mov
scas
push
sbb
mov
mov
inc
jns
pop
push
leave
mov
jl
adc
in
dec
nop
add
jno
xlat
enter
mov
dec
nop
div
fsubr
adc
sbb
nop
lods
les
or
pushf
mov
mov
int3
scas
pop
mov
in
mov
cmpsb
cltd
cld
loop
sbb
arpl
xor
in
inc
dec
iret
sbb
adc
mov
daa
or
xchg
sbb
mov
mov
ljmp
xor
pushf
iret
push
out
test
ret
push
dec
adc
cmp
sub
popf
push
pop
push
sub
adc
shlb
fsts
inc
fsubr
lods
sbb
xchg
scas
inc
xchg
into
mov
icebp
or
stos
mov
dec
js
cld
add
pop
icebp
adc
push
push
xor
mov
sub
fldl
dec
cmp
insl
dec
jmp
dec
js
pop
inc
std
add
mov
jne
xor
or
ds
and
das
jo
cmp
add
nop
daa
jne
fs
xchg
xor
jb
xchg
mov
xor
jmp
repz
shr
xor
imul
sbb
daa
sbb
adc
mov
test
xlat
mov
aas
fmul
movsl
mov
xor
test
out
sub
scas
mov
insb
test
cmc
xchg
icebp
mov
stos
movsb
mov
xchg
js
push
dec
mov
leave
mov
rcr
ljmp
inc
xchg
xchg
mov
out
pop
xchg
dec
in
lret
dec
dec
push
push
push
pop
les
mov
xor
inc
jmp
mov
scas
loop
sahf
sub
mov
std
sbb
scas
sti
scas
lret
test
push
fiaddl
cmpl
test
hlt
vpaddd
jmp
jge
lahf
aaa
leave
mov
inc
pop
loop
sarb
cmpsl
js
inc
fdivl
or
mov
xchg
inc
popa
push
enter
iret
lret
add
and
push
imul
cmpsb
fidivrs
pop
dec
adcb
sti
lahf
inc
outsl
push
jbe
rorb
or
mov
gs
loopne
pop
mov
fwait
scas
jmp
add
inc
dec
sbb
and
inc
movsl
std
push
aaa
mov
fdivs
jnp
adc
data16
outsb
push
jo
mov
fnstenv
xchg
or
push
adc
mov
jle
adc
sbb
daa
je
adc
test
and
loope
clc
jno
ljmp
call
fdivs
mov
push
inc
ret
and
sub
push
popf
mov
inc
mov
scas
pushf
inc
jns
aam
jmp
or
pop
mov
pushf
xchg
aam
dec
jo
fstpt
cmp
xchg
int
mov
adc
mov
mov
adc
inc
push
sub
sahf
repnz
inc
jnp
std
stc
pop
push
xlat
push
sbb
sbb
inc
cwtl
pop
pop
sbb
push
and
mov
mov
mov
test
pop
sub
orl
pop
dec
adc
mov
add
mov
lea
out
xchg
mov
rcl
cmpsl
mov
jno
das
sarb
mov
push
jle
push
addr16
mov
out
fistps
push
call
sub
clc
add
sub
ja
mov
repz
pop
pop
ljmp
push
aam
cmp
jp
mov
out
jle
xchg
mov
outsb
mov
out
enter
xor
je
std
add
shll
push
iret
adc
and
cmc
push
ss
sbbl
pop
hlt
mov
push
loopne
shr
sbb
in
pop
shll
jg
sub
movsb
test
loopne
jns
out
loope
pop
arpl
mov
add
rclb
add
xlat
punpcklwd
and
cmp
mov
add
cli
jno
insl
mov
jp
dec
flds
dec
cli
xor
add
inc
jmp
push
call
and
ficoms
xor
sbb
out
outsl
mov
mov
std
repnz
jmp
xchg
inc
xlat
cmp
aas
loopne
aam
rcll
and
js
into
repz
hlt
dec
xlat
addr16
ja
jnp
stc
adc
shll
into
sub
lea
mov
loope
jmp
fwait
dec
int3
cmovl
mov
jl
xchg
and
xchg
xchg
sti
mov
loope
jb
inc
dec
sub
mov
idivl
jnp
ja
lcall
push
clc
cltd
gs
pop
sub
mov
cmp
cmp
xor
fs
push
imul
adc
shr
jle
popf
mov
stc
lods
or
insl
lahf
xchg
xchg
and
sub
nop
xchg
or
fidivl
mov
mov
call
xchg
leave
push
icebp
std
inc
jno
xchg
pop
jo
pop
addr16
xchg
dec
call
or
lds
fdivl
and
inc
mov
in
mov
cmp
dec
adc
jecxz
mov
fdivs
addb
cmp
and
test
rcll
fnstcw
xchg
inc
in
rolb
inc
scas
pop
jecxz
mov
sarl
jle
cltd
jne
mov
pop
into
cmp
sub
mov
sbb
xor
dec
shll
lods
ljmp
cltd
jge
icebp
mov
imulb
or
sub
adc
and
push
inc
xor
sub
xchg
push
mov
dec
pusha
dec
jmp
test
push
int
fnsave
mov
mov
and
movsb
mov
mov
repnz
mov
jmp
pushf
inc
cld
inc
adc
clc
orl
pop
push
mov
dec
iret
jno
in
movsl
outsl
rcr
addr16
mov
lret
dec
pop
ljmp
push
lret
xor
addl
lock
mov
lret
jo
nop
in
inc
jae
sbb
insb
or
xlat
das
xchg
cmc
loope
ss
mov
cmp
add
and
pop
mov
xchg
or
test
mov
adc
aaa
xor
fldcw
in
and
repz
in
mov
add
scas
out
jne
push
je
mov
dec
or
xor
bound
jle
add
cmpsl
inc
xchg
lcall
push
inc
mov
rcl
popa
mov
mov
fmul
sahf
mov
push
testb
pop
ljmp
xor
xor
aam
loopne
jg
in
and
mov
jecxz
shrb
add
cmpsl
sbb
jecxz
inc
out
dec
xchg
addr16
cmp
in
fbstp
cmp
scas
xor
inc
sar
popa
push
jbe
fbld
jbe
mov
lret
adc
mov
sub
je
or
data16
and
out
pop
cmp
or
inc
test
lea
mov
mov
push
sub
test
dec
push
lock
and
ja
sbb
push
mov
or
stc
mov
mov
add
call
cmpb
cmpsb
mov
aam
outsb
cmp
int3
mov
xchg
mov
mov
ljmp
fwait
ret
aad
dec
sub
cs
xor
shlb
sub
arpl
popa
sbb
les
rclb
lahf
lea
and
lods
leave
mov
xor
push
fwait
iret
cltd
jb
sub
imul
mov
mov
rorb
mov
mov
adc
jg
mov
inc
cs
add
mov
xchg
jne
sub
inc
inc
or
mov
lahf
scas
into
inc
push
xor
outsl
push
enter
cmpsb
pop
cltd
icebp
push
lcall
push
int3
pop
addr16
out
cltd
and
push
je
hlt
sbb
stos
mov
pop
xor
popf
push
jae
daa
jnp
mov
or
adc
icebp
outsb
sti
inc
scas
stos
lret
and
out
xor
jle
sub
jno
jo
mov
outsl
xchg
lahf
daa
or
jnp
dec
xchg
inc
dec
mov
stc
dec
jecxz
lahf
cmp
movsl
jae
int3
xchg
icebp
into
cmpsl
sub
into
inc
iret
fimuls
mov
dec
clc
lahf
sahf
adc
push
out
test
mov
pop
rcrl
sub
sbb
xor
adc
lret
pop
mov
cli
inc
enter
cmp
xchg
lcall
cmp
xchg
dec
inc
subl
inc
push
mov
imul
lahf
jnp
sbb
cld
stos
adc
icebp
push
scas
out
and
jae
adc
imul
loopne
pusha
cmc
sbb
or
cmp
lds
cs
jmp
jmp
jge
fisubrl
inc
xchg
test
mov
outsb
sub
xchg
cmpsl
call
pop
xor
lds
ljmp
cld
les
shlb
cltd
ja
int3
in
addb
popa
add
les
cmpsl
and
es
xchg
fs
inc
dec
imul
cmp
das
push
cmc
rcll
movsb
scas
inc
jecxz
movsl
xchg
cmp
mov
add
int3
dec
fldenv
nop
sub
lcall
mov
aas
ficoml
repz
retw
loopne
pop
mov
jno
fldln2
mov
les
lods
xor
inc
int3
mov
hlt
bound
xchg
inc
push
jmp
xchg
nop
fiadds
sub
dec
aas
jl
cmc
adc
and
jno
repnz
outsl
push
lret
jo
pop
sub
xchg
jg,pt
xchg
push
fucomp
push
xor
xor
inc
mov
bound
jmp
push
jbe
ret
add
sub
jae
jnp
push
mov
or
jp
jo
loop
mov
popa
movsb
sub
jbe
inc
push
mov
arpl
jmp
gs
xchg
fnsave
ja
fstl
and
ljmp
jae
sub
add
fwait
sub
rclb
pop
mov
xchg
cmp
fildll
mov
test
jbe
lods
dec
mov
nop
add
gs
inc
es
cmp
dec
fcompl
scas
dec
jnp
jae
xor
xchg
push
mov
pop
nop
cmpsl
insl
jl
rclb
jmp
dec
sti
pop
stos
push
sub
sbb
test
mov
lds
fucomi
push
sub
jnp
add
adc
fisubrl
inc
and
cltd
pop
rolb
adc
and
xchg
push
dec
and
dec
and
mov
cmp
push
inc
xor
mov
out
inc
mov
xchg
xor
cmp
sbb
adc
adc
mov
addl
fs
adc
sbb
push
cs
rcrb
loope
gs
add
dec
jg
mov
fs
mov
out
outsl
imulb
cld
sqrtps
cmpsb
push
stos
adc
addr16
pop
in
lret
dec
lea
shlb
mov
outsl
pop
xchg
mov
pusha
in
lock
test
dec
in
sbb
pop
add
mov
loop
pop
in
push
mov
je
mov
repnz
cmp
sbb
mov
add
out
emms
cmp
jle
jl
dec
push
inc
or
xor
daa
outsb
or
or
pop
inc
insl
insb
xchg
or
out
mov
fwait
sahf
jne
cmc
mov
rcrb
outsb
add
movsl
add
lods
test
or
subb
lahf
in
std
xor
xchg
sub
loop
sbb
pushf
mov
jae
add
imul
push
xorb
mov
jmp
negl
imul
test
inc
dec
insl
adc
dec
mov
pushf
shlb
lret
push
dec
and
daa
push
pushf
mov
and
ljmp
cmp
icebp
stos
fildll
push
mov
lcall
aas
lcall
fisubs
cmp
pop
orps
leave
and
mov
mov
decb
sbb
and
push
or
or
mov
sbb
sbb
ret
test
pushf
aas
push
or
out
negl
mov
ja
xchg
jbe
mov
or
sarb
sub
fdivs
xor
add
lods
stc
pop
mov
inc
fisubrs
dec
sbb
cmp
dec
or
sar
lret
inc
iret
jmp
cmp
dec
push
loope
adc
ds
rcll
lret
sbb
jmp
aad
orl
out
jle
sub
push
dec
add
sbb
and
mov
ret
int3
sahf
cld
popf
mov
les
adc
dec
fisubrs
cltd
aam
add
sbb
lcall
pop
ret
cltd
jnp
test
add
popa
lods
xlat
sbb
add
test
sub
loop
fs
sarb
aas
pop
mov
sbb
stos
and
ja
push
mov
push
pop
jge
mov
add
mov
and
xor
jle
or
sbb
gs
jno
xchg
clc
arpl
add
lds
mov
xchg
adc
ror
rcrb
push
xor
popf
mov
stos
stos
cmp
mov
aaa
jbe
pop
push
jg
jbe
sbb
push
xor
andl
js
adc
fwait
xor
test
inc
test
scas
int
push
xor
lret
cmpsb
icebp
fsubrp
lcall
cltd
add
xor
cmpsl
dec
mov
jae
or
pop
cli
rorl
fldcw
push
cs
cmp
scas
mov
js
cmpsl
dec
inc
rorl
pusha
mov
lea
cmpsb
and
sub
cmc
js
or
mov
enter
dec
imul
sbb
pop
and
daa
lahf
aas
insb
push
pusha
inc
cmp
icebp
in
ds
jmp
lret
mov
out
inc
pop
xchg
mov
cld
cmp
outsb
movsl
and
nop
repz
sub
add
mov
xor
testb
dec
mov
or
daa
dec
movsl
aam
mov
les
cmp
testl
push
popf
into
jb
sub
mov
sub
mov
push
pop
xchg
jae
adc
inc
sahf
inc
mov
insl
cmp
cmpsb
adc
in
lret
into
jl
aas
or
xchg
aas
hlt
outsl
imul
lods
data16
and
jno
push
les
shll
xor
call
inc
push
loopne
pop
add
dec
idivb
jo
shlb
loope
sti
outsb
jo
cmpsl
leave
movsl
pop
leave
fcmovnbe
stc
popa
push
dec
in
leave
lret
mov
xchg
ds
jle
xchg
xor
jl
stc
scas
out
push
adc
push
xchg
lods
adc
js
pop
pop
and
push
out
cmp
popf
lahf
fstl
or
in
mov
cltd
imul
pop
shl
adc
mov
mov
mov
pop
jnp
loopne
jns
clc
cltd
mov
adc
cs
mov
jne
mov
out
stos
int
mov
mov
cmp
inc
aad
cs
fwait
rcrb
push
xor
push
or
aam
loope
push
add
and
push
adc
fsubrl
repz
nop
adc
loopne
loop
mov
mov
mov
lods
mov
xchg
mov
shrl
cmpsl
aas
addr16
test
adc
sbb
test
xor
mov
dec
cmp
into
ret
xor
adc
shll
pop
mov
xor
mov
repz
xor
jo
pushf
dec
pop
and
fdiv
popa
movsl
sarb
aam
xor
ret
and
mov
push
xchg
bound
shlb
mov
cmp
sub
sub
inc
mov
cmc
jp
or
in
leave
shrl
mov
push
mov
add
cmp
mov
mov
out
pop
scas
mov
cmp
lock
mov
fisubl
mov
mov
xor
call
and
xchg
sub
lret
daa
fs
and
and
push
mov
lcall
sbb
cmp
add
cld
jl
adc
inc
cmp
lcall
xor
ljmp
inc
addb
pusha
movsl
pop
pop
mov
gs
dec
push
mov
mov
xchg
pop
subl
mov
mov
dec
adc
je
push
add
test
add
je
jb
jp
sbb
mov
jl
popa
subb
push
imulb
jbe
add
call
out
ss
xor
mov
repz
shrb
lods
xchg
mov
daa
mov
xorb
add
mov
mov
addb
lock
push
jmp
pop
push
or
and
test
fnsave
cmpsl
sbb
mov
out
dec
filds
mov
and
xchg
gs
loop
inc
push
cli
inc
daa
mov
test
fadd
dec
sbb
fwait
mov
sbb
negl
push
xchg
scas
fdivs
testl
xorb
call
scas
xchg
pop
and
mov
into
cmp
mov
pop
push
aad
imul
mov
sub
ret
mov
pop
inc
loope
popf
stos
xchg
lock
imul
adc
sbb
aam
ljmp
mov
dec
addb
cmpsb
push
sarw
stos
sti
xchg
add
cmp
ss
lock
mov
inc
push
repz
fdecstp
and
sbb
push
xor
xchg
test
test
mov
pop
and
mov
add
push
or
rcrl
fiadds
test
pop
inc
sub
data16
rclb
add
insl
cmp
cs
xor
cmp
sub
jbe
xor
add
mov
inc
test
lret
ja
xor
mulb
jecxz
jmp
xchg
push
pop
pop
pop
icebp
mov
add
jae
inc
lcall
adc
xchg
cmp
push
sub
call
pusha
mov
jmp
int
jle
add
das
push
inc
lahf
xchg
rolb
shrl
shl
sbb
lcall
inc
and
mov
sub
cltd
mov
push
and
inc
inc
cmp
lahf
mov
dec
adc
lds
data16
cwtl
adc
push
ds
add
inc
cmp
xchg
shr
nop
sub
or
jno
fsubl
bound
push
sbb
into
fisttpl
sub
daa
rorl
add
mov
and
sub
stos
shrb
mov
fbstp
push
lods
jns
and
push
in
dec
fstp
int3
sub
xchg
cmp
mov
add
icebp
fsts
mov
outsb
repz
jo
push
faddp
cmp
jno
xchg
aas
js
incb
icebp
mov
add
lret
dec
cmpsl
enter
std
xchg
pop
push
push
imul
mov
jecxz
icebp
cmp
adcb
sahf
aad
sub
cmp
cmp
sub
xlat
popf
xor
cmpsb
cmp
pop
lret
roll
shrb
arpl
pop
adc
push
pop
mov
dec
pop
and
aam
sub
mov
and
outsb
lss
cld
mov
sbb
inc
ret
xchg
jge
enter
push
push
imul
sbbl
mov
xchg
rclb
rcl
out
cmp
and
mov
or
cmp
imul
cltd
jo
push
mov
mov
jne
mov
aas
rcr
stos
pop
addr16
fwait
xchg
rorl
fidivs
sar
mov
xor
xchg
inc
popf
stos
xchg
sub
sbb
and
sbbb
pop
lods
lods
push
cmp
scas
imul
in
mov
push
insb
test
sti
or
loopne
inc
data16
cmp
ret
lds
sub
test
push
jnp
jg
dec
daa
add
and
popa
xchg
jb
js
or
in
pop
dec
pop
fs
pop
inc
mov
lods
inc
adc
adc
inc
aam
lahf
push
lahf
jmp
jno
adc
push
inc
stos
mov
jbe
jns
test
sbb
nop
mov
mov
popa
leave
sbb
or
fwait
scas
data16
insb
pop
sub
mov
in
fmull
mov
andps
add
sbb
mov
inc
pop
mov
push
inc
jecxz
sbb
jmp
jne
add
frstor
pop
pop
out
push
in
nop
sbb
rol
stos
cmc
subl
les
scas
insb
ret
shrb
pop
gs
mov
outsl
add
bound
and
and
stos
cltd
jae
jmp
xlat
pop
lahf
aaa
into
jno
push
shll
mov
sahf
mov
test
pop
add
jne
cmp
cmp
nop
and
je
sarl
test
movsb
or
outsb
inc
repz
mov
roll
shrl
repnz
xchg
dec
das
mov
sbbb
idiv
pop
sub
xor
test
ffreep
cs
xchg
jno
repnz
bound
sahf
sti
pop
pop
loopne
adc
or
mov
test
cmp
outsb
xchg
adc
outsl
xor
adcl
in
push
inc
add
xchg
les
adc
jecxz
clc
lock
data16
sbb
imul
jno
dec
xor
cs
sbb
sub
cmp
cmp
add
inc
inc
adc
nop
mov
dec
dec
xor
out
mov
outsl
test
inc
ret
xchg
sbb
and
cmp
imul
ret
je
lahf
mov
inc
lahf
adc
mov
cmpsl
and
repz
into
push
mov
push
outsl
dec
jmp
adc
or
popa
addr16
sub
mov
call
test
call
mov
popf
fiaddl
fwait
cmpsb
mov
add
add
xor
fdivrl
das
add
sbb
mov
jl
lock
enter
bnd
mov
xchg
adc
cld
push
je
aas
bound
adc
ljmp
or
in
and
sbb
adc
ds
adc
pop
and
pop
popf
adc
mulb
fsubs
in
inc
sub
inc
inc
and
int3
cli
mov
dec
ljmp
or
out
js
xchg
aad
adc
adc
outsb
jmp
or
outsb
jle
into
jno
sbb
dec
testb
cmpsl
enter
mov
aas
movsb
stos
mov
mov
inc
push
outsl
ret
jle
shll
xlat
mov
ficompl
fucomp
lods
loope
adc
out
pop
and
xor
outsl
or
xor
and
adc
aaa
jl
xchg
cmpsb
inc
push
fstl
imul
ret
jmp
or
mov
or
push
jmp
cmp
test
push
and
loopne
jmp
xor
xor
xor
in
mov
cltd
mov
dec
push
push
push
mov
jbe
xor
jg
lahf
adc
popa
rorl
mov
inc
les
lods
cmp
sbb
sbb
mov
or
addl
jb
push
movsb
in
rcll
lcall
sub
outsl
pop
gs
insl
mov
cmp
lahf
enter
test
xchg
leave
movsb
test
je
fstl
xchg
sub
js
cmp
jmp
sbb
cmc
mov
daa
iret
xor
scas
or
cmp
pop
lods
sbb
dec
int3
sbb
imul
movsb
pop
rcrl
sbb
jno
loopne
shr
es
insb
aad
mov
cli
add
jbe
mov
cmp
das
jae
cmp
mov
pop
dec
icebp
jno
movsb
mov
or
add
push
pop
lea
in
dec
mov
sbb
aam
pop
loop
testl
fcmovne
js
push
pop
lds
arpl
cmp
pop
xor
cmp
mov
pop
test
fstpt
mov
or
push
xchg
in
add
or
push
pop
and
mov
out
dec
xchg
xor
je
xchg
cmp
test
les
sbb
clc
insb
xchg
dec
lahf
ljmp
push
pop
mov
int
in
inc
imul
adc
in
aad
outsl
jb
cmp
test
out
lea
cmp
jp
outsb
ds
adc
or
push
lcall
movsl
leave
mov
jmp
imul
sub
and
xor
shr
movsl
pushf
hlt
inc
gs
daa
enter
cmp
add
lret
insl
cltd
stc
std
in
bound
or
movsb
cmpsb
mov
mov
pop
jae
test
jecxz
jae
add
rcrl
int
push
inc
test
mov
ja
adc
add
pop
mov
adc
stos
add
xor
push
push
pushl
js
xchg
addr16
mov
mov
dec
mov
dec
xchg
jno
test
subps
fildll
dec
adc
fwait
cmp
adc
jns
pop
cmpl
ss
push
lcall
ds
loop
or
sarl
mov
leave
adc
jns
mov
int3
pushf
sbb
cmp
cmpsl
mov
xchg
jg
push
stos
adcb
lds
pop
push
mov
jb
outsl
mov
enter
adc
es
mov
das
repz
in
inc
push
mov
mov
push
sti
aaa
mov
fisubrl
pop
out
inc
lret
mov
cmp
sub
adc
adc
int3
pop
lds
xor
aam
sbb
jl
loop
je
mov
clc
push
pop
in
lret
popa
or
cld
push
mov
out
pop
dec
rolb
or
sbb
mov
sub
push
aas
andb
sahf
xor
cli
cmpsl
movsb
cs
or
dec
lret
dec
jge
call
in
jb
insl
sub
leave
cld
out
repz
call
shrb
fsubp
enter
mov
test
leave
aad
xchg
jo
and
call
popf
cmc
in
dec
inc
lods
sarb
and
lods
mov
sub
pop
mov
adc
push
divl
insl
xchg
lret
arpl
in
test
and
sub
xlat
dec
adc
xchg
cmp
mov
leave
xchg
loop
sub
arpl
inc
add
fisttpl
mov
mov
je
sub
sahf
mov
or
add
mov
lret
imul
and
ljmp
bound
out
jp
mov
cmp
xchg
jge
ljmp
push
lret
dec
add
push
lock
cli
mov
jne
pusha
icebp
pushf
addb
push
stos
bound
xchg
inc
adc
xlat
xchg
jae
cmp
mov
cmpsl
test
or
jo
clc
lret
lret
or
imul
sbb
roll
push
hlt
aaa
sub
cli
not
mov
jns
cmp
jg
je
dec
push
cld
jle
cld
mov
ficompl
sti
in
loop
or
xchg
enter
dec
jge
rcrl
fcoms
insl
out
cmp
test
pop
js
lds
inc
pop
std
psllq
or
out
cmp
cmp
push
and
dec
jmp
push
mov
nop
sub
arpl
jb
cmc
push
or
push
push
imull
insb
sbb
ljmp
mov
fdivp
sub
xor
cltd
mov
jnp
xchg
stos
pop
jmp
mov
xorl
mov
shll
out
call
aad
xor
aad
pop
mov
add
xchg
les
shrl
sub
shlb
jbe
sub
sbb
add
and
push
cmp
out
mov
inc
arpl
test
enter
jge
psraw
test
hlt
test
mov
dec
pop
lahf
lret
jl
test
cmp
jge
dec
fistpl
mov
and
bound
lret
cltd
imul
push
loop
sub
jmp
pop
out
and
jbe
out
fs
das
mov
adc
xlat
ror
xor
push
stos
fnstsw
push
dec
andb
jb
sarl
cmpsb
xchg
xchg
rcrl
in
adc
sahf
lock
jnp
leave
jb
out
adc
adc
les
mov
pop
testb
sub
push
sbb
outsb
dec
xor
mov
fnstenv
sbb
sbb
cltd
pop
scas
roll
outsl
ret
pop
xchg
gs
jg
sbb
xchg
ret
sarl
stc
movsb
inc
jnp
mov
fs
cwtl
mov
xchg
xor
or
out
mov
dec
clc
sub
aad
les
orl
sub
and
cmp
push
aad
pop
xchg
fimuls
mov
lods
sbb
jo
loop
mov
sbb
or
mov
cmp
ss
movsl
lods
sbb
dec
shrl
andb
mov
mov
int3
movsl
rorl
inc
xor
jne
icebp
xchg
in
add
das
enter
pop
xor
aaa
shr
mov
mov
rclb
imul
jns
pushl
mov
add
mov
or
fwait
or
xchg
shlb
jns
loopne
jnp
jo
cmp
fucom
xor
sar
negl
pop
out
lods
xor
imul
push
fwait
and
cmpsl
and
push
add
inc
push
scas
jbe
loope
xchg
loopne
push
das
sar
mov
xchg
mov
sbb
mov
ret
jmp
cmp
adcl
imul
out
push
outsb
and
mov
push
push
and
das
or
add
sbb
or
mov
hlt
pop
out
cmc
dec
mov
add
idiv
mov
and
and
orb
jae
inc
insl
mov
pop
sub
call
sarl
fs
add
mov
jl
inc
jmp
addr16
jae
std
dec
cmp
out
lods
mov
stc
adc
bound
subb
mov
sbb
fdivrs
adc
sub
lret
push
mov
lret
bound
hlt
rol
xlat
int3
rcrb
enter
inc
adc
pushf
iret
les
pop
inc
pop
sahf
imul
dec
inc
fwait
cld
incb
movb
iret
scas
xchg
inc
xor
add
sub
pop
subb
addr16
clc
mov
test
adc
add
cltd
scas
cmp
fimull
lcall
sbb
xchg
adc
out
jmp
mov
fsts
daa
pop
add
jns
je
inc
enter
pop
push
mov
dec
loop
dec
xchg
jmp
fwait
push
jge
call
xchg
mov
enter
cld
mov
push
je
pop
push
hlt
add
jecxz
mov
movsb
lods
jge
rcll
loopne
out
xor
popf
dec
not
jg
adc
into
out
mov
mov
push
pop
scas
fsubp
shlb
out
jne
xor
mov
lea
jns
gs
fmul
test
mov
outsl
and
and
xor
mov
fdivl
jg
shll
add
mov
jg
dec
push
dec
aaa
jg
lds
and
jnp
xchg
sbb
mov
dec
jb
jecxz
push
or
aam
es
in
fcmovu
jle
push
jns
jp
filds
nop
insb
xorb
pop
mov
ds
sbb
push
add
pop
imul
int
cmpl
xchg
ljmp
insl
inc
push
sti
out
cmpsb
xchg
sahf
repz
mov
jne
cmp
cmp
xchg
lods
inc
pop
ret
call
or
bound
into
pop
mov
into
dec
mov
mov
mov
mov
sub
insl
sub
dec
dec
xor
or
lock
stos
je
xor
mov
cmpsl
inc
arpl
dec
dec
stos
sub
push
mov
sarb
xchg
clc
into
xchg
pop
les
ret
jb
cltd
mov
pop
dec
and
mov
push
ret
cmpsb
add
mov
pop
cmc
out
jb
dec
nop
xor
xchg
or
gs
push
inc
dec
adc
pop
mov
stos
or
and
sub
cmpb
sub
sahf
loope
loopne
jae
sbb
cmpsl
fldt
mov
push
push
jmp
mov
ret
dec
sti
xor
int
inc
pop
jae
sbb
xor
inc
fwait
cs
mov
fwait
xor
cmc
shll
cmpsb
or
adc
inc
jnp
test
push
outsl
es
xor
shll
sarl
int
sarb
jmp
ljmp
stos
cli
pop
jne
jl
orl
ficoml
inc
pop
or
lods
pop
or
sub
mov
ja
sti
ficoml
daa
loop
test
lea
cmp
dec
push
imul
adc
add
xor
sti
mov
xchg
sbb
rcll
insl
sbb
pop
sbb
lcall
gs
aaa
mov
test
push
mov
lea
add
adc
xchg
iret
mov
insb
xor
mov
mov
jp
cmp
aad
mov
mov
and
cmp
add
js
scas
incl
push
daa
xchg
inc
push
inc
or
mov
lods
adc
popf
jmp
dec
lret
in
jno
cld
ljmp
jno
jae
lret
lods
add
fcoml
subb
push
and
sub
lock
std
xor
pop
jecxz
test
pop
arpl
and
dec
fnstcw
fs
xchg
mov
aaa
xchg
mov
mov
xchg
insb
jg
cmpsl
cmpsl
ja
in
add
adc
xchg
imul
js
outsb
les
int
loopne
insb
xor
fincstp
or
adc
add
aad
gs
fidivl
mov
bound
cli
testb
imul
sub
data16
dec
std
hlt
jl
fwait
sub
adc
mov
ret
movsl
shrl
fidivl
into
inc
and
xchg
sbb
test
enter
pusha
jb
or
rcl
std
xor
xor
and
mov
fisubs
pop
jp
hlt
xchg
shrb
xchg
mov
push
shrb
jle
dec
cmp
cli
aam
mov
movsb
repnz
int3
pushf
int3
jl,pn
cmp
push
push
je
mov
or
cmp
mov
jp
std
push
sarl
imull
sbb
in
mov
or
dec
mov
mov
xor
lock
push
cmp
push
add
movb
xor
sub
cmp
xchg
scas
and
jne
pop
xchg
in
sbb
shl
int
or
aas
mov
arpl
cmp
insb
push
lea
fdivl
add
clc
in
das
jb
int
pop
mov
jg
test
jnp
xchg
movsl
incl
pop
rcrb
jle
mov
arpl
dec
pop
push
in
push
push
pop
popl
dec
lea
push
loopne
push
push
cmc
imul
push
iret
not
xor
pop
dec
ret
adcb
or
rolb
fstpt
fdiv
push
dec
subb
aad
inc
push
cmpsl
sti
and
jno
jbe
fsubrs
fimuls
rcl
int
add
or
and
lret
xor
pop
sbb
cmp
mov
sub
mov
jecxz
mov
out
lock
flds
movsl
gs
mov
mov
xor
arpl
popa
xchg
dec
jns
or
sub
sbb
ret
mov
xchg
push
sahf
dec
repnz
test
cmp
xor
cmp
arpl
ss
sbb
sbb
mov
sarl
add
push
add
mov
cmp
pop
leave
push
mov
mov
call
add
or
mull
insb
mov
hlt
and
loopne
sbb
push
sub
aam
aam
aad
add
jb
clc
inc
sti
in
loope
adc
xchg
pop
xor
jo
push
cltd
lea
or
mov
and
cld
into
fsubr
repz
xor
and
xchg
cmp
fwait
hlt
push
pop
ja
mov
mov
mov
mov
rorl
scas
lret
lret
and
sbb
sub
shrl
addr16
dec
leave
iret
adc
fwait
and
xchg
mov
dec
loop
add
mov
dec
daa
clc
lds
stos
jnp
push
imul
xlat
into
sub
aad
push
mov
xor
xor
lods
data16
mov
test
into
xchg
shlb
jbe
popl
pop
shrb
mov
dec
out
add
push
lcall
in
test
lret
scas
ret
mov
dec
xchg
insl
in
adc
arpl
mov
hlt
lea
cltd
cld
adc
test
xchg
stos
shrb
inc
mov
lods
and
out
insb
inc
push
vaddsubpd
push
iret
cmp
hlt
jge
mov
mov
adc
mov
cs
cld
dec
sahf
mov
mov
xor
sub
push
gs
mov
inc
add
cmp
ret
or
imul
mov
push
pushf
mov
loopne
and
jb
stos
scas
inc
xchg
inc
fiadds
mov
stos
aam
fsubl
ja
in
dec
jecxz
jge
filds
ficompl
jg
aad
cmp
fsub
xchg
ret
pop
repnz
mov
mov
jns
adc
scas
test
popa
add
cmpl
aaa
fisubs
and
pusha
cmp
lcall
repz
idivl
ja
out
mov
mov
roll
insl
add
mov
fidivl
dec
push
ss
push
dec
fadds
xchg
jae
int3
data16
or
inc
dec
mov
jmp
ljmp
call
mov
lcall
jp
or
stos
decb
inc
mov
jecxz
out
loop
xor
ljmp
and
sbb
loopne
shrl
std
clc
jp
mov
sbb
add
cs
setle
sbb
lret
mov
mov
push
sub
or
lahf
inc
xchg
pop
movsb
les
xchg
pop
xor
mov
popa
pop
mov
adc
push
push
inc
push
popf
idivl
lcall
sar
int3
leave
pushf
icebp
repz
xchg
ffreep
or
aad
addb
push
dec
cwtl
xor
scas
sbb
inc
cmp
push
rcll
cld
xor
and
xchg
stos
repz
cmp
sub
lcall
xchg
jb
rcrb
inc
bound
add
sub
stos
and
pop
lods
stc
cltd
sub
mov
dec
jecxz
stc
int
dec
scas
nop
xchg
and
sti
lds
inc
jge
cmp
xchg
and
dec
sets
lret
push
mov
cmp
push
or
push
xchg
mov
dec
ficompl
ret
hlt
dec
push
mov
repnz
pop
adc
jnp
in
cmp
clc
jne
pop
jbe
aam
shl
fcomip
dec
in
sbb
insb
or
sub
jg
sbb
cld
and
push
xchg
in
in
mov
shll
testb
dec
aad
rorb
ljmp
sar
jbe
repz
dec
mov
inc
test
xchg
pop
cmc
loope
out
sbb
cmpsb
mov
arpl
mov
dec
dec
pushf
in
cwtl
jecxz
or
pop
mov
add
or
test
ficomps
push
mov
mov
ret
in
shrb
push
jmp
cmp
adc
mov
jo
stos
lret
mov
mov
shrb
mov
cli
and
aad
cltd
test
pop
mov
shll
push
dec
out
inc
xchg
adc
and
jo
adc
sbb
loop
cmp
xchg
xor
lods
mov
inc
aad
loopne
lea
loop
fcoms
cmpb
or
scas
dec
roll
push
dec
rsm
mov
xor
mov
lds
sbb
cmp
sub
stos
pop
arpl
bound
imulb
jbe
repnz
and
mov
cmpl
mov
mov
cmc
inc
xor
insb
dec
dec
inc
xchg
lock
fsubs
test
fwait
repz
int3
lods
mov
mov
jb
sti
inc
push
dec
lods
js,pn
push
lret
scas
jne
inc
or
adc
ja
das
jbe
mov
jbe
cmpsb
pop
and
inc
xlat
sub
sub
sbb
das
mov
sub
movsb
push
xchg
fdivrs
shll
rcll
out
push
adc
push
mov
data16
mov
jmp
cmpsl
ret
dec
or
cmpl
lock
in
ljmp
jle
das
mov
arpl
scas
xor
das
lods
cmp
cmp
insl
ss
testl
cmpsb
pop
mov
shlb
popa
inc
push
xchg
or
lds
dec
push
pop
inc
adc
cmpsb
jo
jecxz
fnstsw
cmc
sbb
lahf
inc
xchg
rol
sub
fs
rcrl
pop
cmp
or
xorl
rol
ret
je
in
and
jo
push
bnd
cli
test
mov
jge
dec
mov
decb
shrl
mov
inc
xlat
sbb
mov
scas
cmc
int3
pop
rorl
pop
xchg
add
sub
jl
sub
or
push
inc
aaa
stc
add
pop
dec
push
mov
adc
std
insl
clc
pop
xlat
adc
sbb
mov
jmp
mov
adc
push
jae
outsb
int
adc
in
movsl
hlt
push
mov
fists
push
mov
dec
sub
shll
arpl
sbb
scas
test
jb
inc
and
sbb
mov
dec
mov
cmp
cmpsl
dec
dec
loopne
fimull
or
push
decb
pushf
bound
std
sub
xchg
adc
mull
mov
dec
fs
xchg
jg
enter
in
mov
xchg
iret
lret
add
or
ficoms
xchg
push
mov
pop
js
rclb
sarb
mov
sub
shlb
les
jnp
lods
inc
jle
shrb
rcrl
sub
mov
and
xchg
pop
in
push
cmc
dec
in
jo
push
mov
insb
jp
test
push
loope
mov
xchg
xchg
mov
dec
dec
je
jge
repz
xor
or
sbb
cmp
cmpsb
and
int3
fldl
pop
sub
and
inc
out
fadds
scas
iret
xor
inc
nop
sbb
jg
mov
inc
push
ss
dec
sub
dec
mov
xlat
addb
jbe
push
jnp
sahf
lret
sbb
stos
ret
mov
ficoml
dec
push
push
push
pop
and
outsb
jo
out
adc
aam
enter
sbbb
iret
jmp
outsb
mov
mov
push
or
mov
dec
jle
sbb
cli
clc
sub
sbb
in
popf
push
scas
dec
dec
xlat
rolw
pop
sub
mov
call
test
shlb
mov
nop
pop
sbb
stos
pop
xor
sub
inc
cmpsl
mov
jl
cld
jns
negb
pop
insb
pop
lock
cmp
int3
pushf
imulb
sbb
adc
add
fwait
pop
inc
data16
das
pushl
lcall
cmc
mov
jle
cmp
aad
inc
add
arpl
movsl
xchg
add
bound
ss
inc
and
push
mov
cld
xor
dec
aas
cmc
stos
push
mov
jecxz
sbb
fs
xchg
pop
jno
pop
or
mov
sub
dec
int3
pop
mov
lds
jge
add
in
insb
nop
mov
and
mov
rcrb
dec
sub
les
add
jp
fsubr
sbb
test
cmp
clc
mov
mov
sub
gs
divb
jae
mov
out
fisttps
mov
icebp
jns
mov
rclb
mov
loopne
jno
nop
orl
shl
aas
pop
xlat
ret
push
movsl
cmp
push
adc
scas
xchg
stc
or
cmp
sbb
xchg
mov
push
mov
aaa
inc
cmc
pop
pop
push
cmp
rolb
out
ret
dec
mov
test
imul
cld
das
rcrb
xchg
mov
push
xchg
pop
rorl
sbb
out
into
push
insb
std
sbbb
outsb
fistpll
jecxz
cli
stc
aad
and
and
ljmp
adc
jo
daa
punpckhdq
xor
pop
icebp
mov
ret
std
test
imul
xchg
sahf
dec
mov
push
xchg
ljmp
ljmp
jle
pusha
xchg
push
ret
mov
push
adc
mov
and
adcb
inc
popf
pop
ss
fbstp
push
call
add
lods
iret
add
adc
push
in
cmc
cmp
out
js
push
cmp
pushf
loop
jno
loop
subl
pop
inc
and
xor
movsb
cs
stos
push
dec
movsb
jle
inc
gs
and
adc
cmp
or
cltd
insl
sbb
notb
lds
push
jge
ja
fisubl
mov
mov
cmc
or
in
cld
inc
lea
out
pop
sbbb
mov
xchg
mov
jecxz
lods
or
inc
stos
mov
and
jno
loop
dec
mov
clc
jbe
data16
and
and
mov
inc
sbb
dec
and
call
aas
int3
xchg
cmp
enter
lods
out
stos
orl
inc
scas
sub
cmp
outsb
repz
cmp
jp
jmp
dec
mov
aas
ret
cmc
ja
fimuls
ret
and
xorl
jle
mov
cmpb
cmp
mov
iret
popf
jle
sbbb
cli
das
pop
inc
into
test
out
lea
dec
inc
icebp
xor
les
repz
sbb
cltd
jnp
lret
ret
xlat
dec
dec
gs
test
inc
dec
inc
cld
aas
mov
inc
sub
nop
sub
jne
sti
xorl
jno
sarl
mov
in
cmp
pushf
enter
dec
mov
pop
testl
xorl
cltd
scas
loopne
test
add
pop
mov
test
gs
or
fstps
push
xor
push
push
fisttpl
xchg
mov
mov
mov
pop
clc
mov
adc
xchg
jle
push
push
push
xchg
add
lods
cmp
cs
push
cmp
add
mov
sbb
aas
lods
leave
nop
pop
aaa
int
dec
inc
cmpb
xchg
pop
add
outsl
xor
mov
sub
rorb
mov
and
sbb
mov
fcomp
jno
mov
roll
add
movsl
fnstsw
inc
ljmp
insl
xor
fldenv
dec
and
adc
pop
add
cmc
push
dec
inc
das
test
cmp
sbb
or
adc
sub
es
or
pop
pop
gs
ficoml
daa
clc
cltd
out
test
sti
sbb
outsl
mov
jb
mov
dec
fadds
dec
mov
loopne
iret
es
mov
fldcw
hlt
mov
daa
or
in
nop
push
inc
jle
shl
cmpb
mov
call
adc
xor
out
jmp
jle
or
jmp
shrl
roll
pop
add
inc
out
pop
and
test
xor
fadds
xchg
pop
add
add
inc
pop
in
outsl
lret
popf
xchg
hlt
pushf
pop
pop
and
icebp
imul
inc
bound
ja
bound
loop
loop
xchg
lret
loope
les
ret
in
sbb
adc
xchg
gs
xchg
cld
fwait
and
push
adc
nop
mov
fwait
jbe
adc
push
in
add
mov
addr16
out
fnstenv
test
dec
inc
fadds
push
push
mov
std
hlt
iret
outsl
pushf
stos
ret
ljmp
mov
imul
pop
orl
pop
push
mov
jge
sub
adc
insb
pop
jmp
xor
cmpsl
push
xbegin
hlt
sub
xchg
outsb
pop
test
out
in
pop
ret
pop
jb
xor
fiadds
cmpsb
mov
push
je
les
mov
xlat
xor
dec
adc
sub
mov
or
inc
cmc
orb
fisttpll
aam
pop
jmp
jg
gs
pop
adc
adc
pop
es
dec
in
xchg
stos
xor
jne
jmp
mov
xor
push
sarb
sbb
jg
lcall
sarl
movsb
mov
gs
das
ss
add
enter
adc
cwtl
xor
insb
call
mov
dec
mov
mov
jmp
and
ret
push
xchg
ror
mov
lea
sub
mov
pop
sub
jl
sbb
aad
jge
dec
sti
ja
daa
xor
out
lock
cmc
jns
cmc
sbb
scas
adc
lahf
fucomp
pop
mov
hlt
jg
test
sbb
push
push
mov
leave
lods
jno
fsubl
mov
arpl
xlat
ret
adcl
or
cmp
cltd
push
xor
std
inc
xchg
stos
mov
popf
mov
jb
mov
cmc
sbb
jae
xchg
cmp
cmp
xchg
test
sbb
jnp
and
imul
mov
js
stc
outsb
xchg
cmpsb
std
mov
jno
ja
into
inc
push
das
dec
adc
pop
mov
fimull
pop
inc
push
cmp
repnz
lds
adc
sti
out
lret
mov
mov
aad
and
ror
or
lahf
inc
iret
xchg
mov
int3
call
fidivs
scas
jge,pt
inc
repz
ss
int3
iret
lods
and
mov
pop
dec
and
jns
mov
inc
mov
cwtl
or
outsb
dec
fs
rcl
pop
pusha
jo
cmp
push
push
dec
loope
pop
pop
sub
iret
cmp
sti
pop
outsl
xlat
jb
jle
xorl
pop
xchg
fcoml
pop
ret
test
sub
dec
add
call
inc
stos
add
inc
cmp
jmp
and
bnd
imul
sahf
add
or
cmp
stos
repnz
jo
jecxz
lahf
cli
mov
idivl
mov
cmp
test
dec
outsb
add
out
loopne
xchg
pop
lret
cmp
inc
das
or
test
ficoml
loop
or
stos
or
jl
lods
iret
test
mov
dec
jecxz
sbb
insb
in
test
fmuls
into
test
xchg
lods
repnz
pop
cltd
int
inc
mov
call
push
mov
in
inc
xorl
bound
xchg
leave
dec
lea
clc
add
dec
add
sbb
jp
sub
aam
adc
push
jns
fstpl
testl
cmpl
dec
inc
cmp
add
rcll
push
mov
mov
outsb
loopne
filds
adc
imul
jmp
dec
nop
sarb
xor
js
or
add
mov
sub
or
shrl
jg
mov
shll
or
xchg
imul
add
insb
movsb
mov
mov
push
sub
xchg
xlat
and
mov
add
xor
test
sbb
mov
mov
mov
ficompl
arpl
std
xor
negl
lret
jne
mov
lds
rcl
sbb
mov
inc
lret
jg
sbb
pop
jns
mov
arpl
mov
sahf
out
sbb
out
dec
sbb
jl
pop
push
jo
stos
orb
pop
fcmove
jp
fstps
or
sub
jns
sbb
cmpsl
gs
divb
sbb
xor
ret
neg
pusha
and
cmp
mov
sub
insb
sub
pop
xor
mov
mov
rcr
dec
sti
cltd
dec
shll
aaa
xor
adcb
sub
rorl
mov
xchg
cmp
ret
lods
cmp
sbb
aam
or
pusha
fiaddl
xchg
and
jmp
or
add
shlb
jnp
imul
add
aas
enter
or
popa
dec
push
jecxz
jno
outsl
ret
mov
push
in
sub
mov
xchg
inc
outsb
dec
mov
add
or
shlb
dec
andl
mov
fpatan
aam
mov
mov
clc
sub
aaa
gs
jo
xor
inc
enter
roll
iret
fnstenv
pop
rcll
repnz
inc
pop
pop
jno
hlt
imul
pusha
test
out
jo
nop
push
lods
mov
mov
outsb
add
hlt
xor
scas
lock
pop
hlt
sti
fcoms
outsb
push
pop
aaa
sub
lock
mov
pmaxub
and
fs
inc
fmull
loopne
cmp
adc
mov
aad
lds
xor
jp
mov
xor
cmp
out
jp
inc
xchg
loop
push
loopne
inc
fsubrp
shll
lea
jl
movsb
insb
jge
ret
movsl
sbb
push
fldcw
push
jg
sti
cli
add
pop
mov
mov
ror
or
aad
jns
das
mov
dec
lods
movsl
fdiv
cmpl
aas
mov
mov
xchg
jecxz
push
aad
adc
sub
out
jmp
stc
xchg
clc
repz
out
add
mov
push
cmpsl
pop
xor
daa
jne
cmpsb
xor
sub
cmp
pop
dec
daa
push
add
inc
int3
psubsw
leave
xchg
and
outsl
fisubrl
and
lods
jns
or
cmp
dec
icebp
mov
cli
nop
inc
xchg
add
cmpsb
jb
xchg
jle
add
test
jecxz
sbbb
hlt
insb
loopne
mov
popf
sarb
mov
jge
pop
mov
out
adc
nop
cmpsl
leave
add
xchg
jl
push
push
or
outsb
lock
pop
sbb
mov
ss
stos
xor
ret
cmp
mov
sub
cmp
in
xor
in
mov
inc
xor
lods
jns
mov
les
pusha
fwait
bound
add
sarb
adc
xlat
subb
fidivrl
xchg
scas
jle
cmc
pop
imulb
jne
xor
mov
bnd
inc
adc
or
and
or
adc
enter
sub
mov
scas
sbb
rclb
mov
xchg
roll
mov
fwait
imul
adc
push
push
sub
pushf
xor
mov
dec
inc
int3
iret
xchg
mov
pop
aad
xor
loope
sbb
push
add
les
movsl
mov
dec
pop
xchg
xor
xchg
dec
xchg
loope
xor
mov
int
jo
or
lods
adcl
pushf
sub
cmp
and
aas
imul
mov
addr16
cmp
rcrb
lea
dec
sbbb
or
add
and
shrb
fists
sub
aaa
jmp
cld
dec
lock
sub
push
test
mov
fnstenv
lcall
and
cmp
inc
mov
pop
insl
test
loop
jne
std
int3
roll
lcall
jno
movsl
fld
jno
jle
pop
xchg
sarl
mov
mov
aas
iret
ljmp
lcall
dec
or
pop
xchg
xchg
cmp
push
xor
adc
fisttpl
sbb
enter
mov
jecxz
shlb
mov
jmp
scas
or
fcmovb
mov
data16
dec
sub
pop
popf
lea
push
in
jecxz
sar
mov
mov
dec
mov
pop
and
insb
inc
and
lret
out
xchg
cwtl
adc
ficompl
or
push
ret
add
int3
loope
add
cmpsl
loop
and
cmp
pop
push
repnz
pop
jge
lcall
pusha
shll
out
pop
stos
add
xchg
mov
test
ljmp
xchg
push
orl
push
in
pop
push
stos
mov
mov
test
cmpb
nop
or
add
xor
movsl
sub
js
out
pop
or
cmpl
fmul
in
mov
sarb
rclb
mov
cmp
mov
rcrl
and
push
sbbl
mov
xchg
inc
jge
sub
cmp
push
xor
movsb
mov
leave
add
lcall
stos
add
pop
insl
dec
outsl
push
sub
and
insb
aad
lock
in
cmpsb
inc
imull
mov
pop
xchg
mov
xchg
std
mov
pop
aad
and
xor
or
sbb
cli
add
punpckhbw
push
push
mov
sbb
adc
lahf
dec
jb
arpl
sahf
vmulss
push
rorw
or
and
es
ror
setno
idivb
fisubl
adc
int3
pop
mov
adc
lea
mov
push
mov
sub
cmp
iret
bswap
dec
xchg
mov
adc
nop
jmp
add
aaa
adc
and
shll
lret
mov
adc
xchg
push
movb
adc
test
rcrb
fprem
mov
sub
clc
pop
dec
cwtl
xlat
sub
inc
psraw
and
mov
shl
jl
arpl
lods
das
int3
and
push
in
jno
fmull
aaa
sub
or
clc
sub
and
loop
sarl
test
add
pop
dec
in
pop
mov
jmp
popf
inc
pusha
xorl
aaa
aad
cld
mov
mov
paddusw
arpl
mov
es
mov
rorb
pop
or
adc
stc
cmp
outsb
push
and
shl
inc
add
nop
adc
xchg
jge
sbb
adc
leave
or
push
or
insl
dec
sub
adc
pop
jae
push
nop
stc
dec
mov
repnz
lcall
mov
adc
frstor
out
adc
int3
in
or
test
push
roll
xchg
dec
jns
xchg
ja
push
mov
add
lret
subl
lods
and
fistps
xchg
sbb
pop
sbb
xor
sarl
push
adc
jbe
scas
jle
mov
cli
daa
ss
addr16
lods
nop
push
mov
pop
inc
fwait
push
jno
dec
popf
imul
orl
add
fldcw
hlt
stos
pop
scas
mov
jbe
xchg
push
dec
int3
fildll
add
mov
clc
jnp
vmovhps
subl
fcmovnu
or
xchg
nop
jae
mov
mov
out
add
mov
int3
sub
fcos
jl
dec
mov
repz
mov
xor
shlb
or
sbbb
mov
rcll
fisubs
aas
xchg
dec
loope
imul
loopne
rolb
ljmp
sbb
fxam
lods
sbb
out
repz
sub
inc
xchg
loop
xchg
in
jg
loopne
pop
xor
aad
fs
push
imul
movsl
fcoms
ds
andl
gs
inc
ret
lock
inc
xchg
out
fnstcw
lret
jo
in
gs
test
sub
xorb
loope
and
call
mov
mov
ljmp
adc
fwait
push
xor
xchg
test
dec
inc
mov
shl
push
cmp
pushf
jb
or
pop
jmp
mov
out
cli
scas
and
inc
fisubrl
ret
daa
ja
test
push
notl
xchg
mov
xchg
mov
add
mov
adc
negb
rorb
iret
xor
xchg
loopne
in
ret
scas
pop
adc
fs
cmp
sbb
fidivs
mov
jecxz
mov
test
sbb
mull
and
test
xorb
and
jge
jb
test
add
inc
lods
mov
loop
pusha
data16
mov
pop
aaa
mov
lahf
paddusw
aam
mull
push
aam
mov
jle
fiadds
shlb
push
lret
xor
rorl
mov
int
rcll
jnp
bound
jne
adc
iret
divl
jg
nop
lret
lcall
xchg
pushf
mov
pop
xchg
testb
sti
sub
fcmovne
scas
and
ds
mov
fadds
or
sbb
loopne
pop
adc
cmpsb
int
pop
int
push
int3
les
imul
js
add
icebp
shlb
mov
adc
mov
movsb
in
mov
xchg
inc
pop
cmpsb
adc
outsl
aad
jbe
inc
mov
dec
xchg
mov
inc
adc
js
leave
xor
jo
insl
fstpt
fucom
or
push
test
loope
push
hlt
jp
roll
in
cmpsl
mov
hlt
mov
push
popa
add
arpl
mov
sub
js
mov
test
push
pop
into
sbbl
dec
xor
mov
sub
sub
add
std
cli
sub
push
mov
dec
ret
mov
int
push
xchg
mov
sub
into
jne
out
pusha
js
inc
scas
adc
je
notl
pop
push
mov
sarl
and
test
cltd
push
addr16
fcomps
pop
call
jl
shll
xchg
mov
data16
or
xchg
pop
cmp
test
xchg
add
jno
mov
and
movsb
cmpsl
sub
testb
push
push
cmp
jmp
fistpll
stc
lds
lahf
mov
hlt
imul
imul
stos
repz
dec
adc
adc
cld
int3
jle
lea
test
xchg
and
aas
jle
cmpsb
in
call
push
bnd
push
nop
dec
mov
sub
add
sbb
xor
gs
out
mov
aam
pop
mov
inc
or
mov
cld
loop
inc
jle
cwtl
fcoml
dec
or
insl
aas
pop
test
mov
pop
lock
mov
dec
aad
mov
sbb
das
and
in
mov
in
imul
and
push
mov
scas
notl
popa
add
hlt
jge
lock
sub
je
lds
pop
jns
stc
test
out
gs
test
clc
incl
test
lret
in
dec
cmpsb
inc
les
xor
jmp
daa
add
jb
mov
sub
lods
inc
sbb
sub
pop
jmp
lret
jo
shlb
inc
xlat
xchg
push
lea
pop
movsl
jo
test
cmc
cli
pop
lret
leave
scas
stc
outsb
faddl
dec
dec
hlt
push
fwait
in
and
sbb
jp
imul
inc
adc
sarl
mov
lret
xor
inc
mov
in
fwait
dec
inc
push
xor
pop
lahf
jno
fcmovnu
xor
sub
or
lret
stos
mov
jne
push
xchg
sub
jg
add
das
mov
push
add
dec
hlt
lds
scas
movsl
pop
popf
mov
sub
pusha
jb
arpl
lds
out
pop
mov
add
ret
cltd
fdivl
cmp
jne
cmp
pop
xorb
fbld
mov
leave
jp
into
mov
mov
sub
pop
mov
xchg
mov
rcrb
ss
aas
insl
mov
out
sti
pop
inc
enter
mov
out
enter
xchg
outsb
divb
nop
ja
lcall
jp
jmp
push
add
xchg
jb
lods
cs
sti
cltd
mov
and
cmpsb
dec
xchg
push
sub
shl
sti
ret
nop
jg
pop
xor
or
jp
pop
inc
into
mov
jle
jae
xor
lret
fld
pop
push
ret
lret
push
push
inc
inc
sar
sahf
aas
cmp
lds
mov
decb
lcall
and
sub
into
mov
inc
les
dec
cmp
add
sub
or
call
mov
insl
jb
add
out
inc
push
xor
movsb
add
sub
inc
movsl
mov
stos
inc
loop
lahf
xchg
mov
adc
fdivrl
xchg
inc
dec
outsl
xor
out
loop
rolb
add
cmpsb
jle
out
notb
sub
cmp
out
rol
insb
scas
mov
js
cmp
dec
mov
movsl
and
outsb
stc
imul
mov
xor
pusha
call
adc
hlt
mov
std
sarb
fisubs
fimuls
sar
push
cli
push
adcb
xchg
rolb
lcall
mov
into
sub
hlt
pop
xchg
jo
jno
inc
in
jecxz
jl
repz
nop
test
xor
push
jp
mov
inc
jo
lret
jecxz
mov
mov
xchg
mov
pop
imul
clc
dec
adc
mov
xchg
rcrl
mov
cmp
jnp
ja
loopne
xor
ss
fs
cmp
mov
xchg
cltd
xchg
xor
push
lret
int3
xor
fmull
sahf
cs
xor
popa
roll
push
or
sub
mov
jae
and
cmp
rclb
ds
ss
js
shrl
ljmp
or
dec
or
inc
lock
adc
in
es
inc
adc
inc
pop
fisubrl
inc
sbb
andb
in
gs
xchg
ljmp
aaa
xchg
xor
pushf
mov
inc
jbe
insl
imul
cli
repz
je
mov
lea
pop
dec
rol
call
push
ja
mov
jge
xor
enter
rorl
lods
jae
icebp
sti
repz
sti
jg
les
arpl
je
cmp
sar
mov
int
push
into
inc
mov
leave
mov
in
xor
mov
cs
je
fisubrl
leave
fstpt
lea
insb
mov
cltd
jge
lahf
mov
fs
out
sub
dec
xchg
das
lea
sbb
pcmpgtb
and
cmp
cld
in
rcrl
addr16
sbb
push
pop
and
or
or
xor
inc
and
push
icebp
ja
fidivl
inc
outsl
pop
jne
pop
in
adc
pop
leave
test
insl
out
cmp
femms
xlat
jno
pop
push
outsl
mov
daa
movsl
add
dec
pushf
or
dec
xlat
push
hlt
adcl
int3
lret
mov
cmp
lods
mov
lds
lcall
shll
pop
cltd
notl
pop
mov
mov
icebp
aad
adc
push
outsb
imul
add
jp
lret
xchg
sbb
pusha
adc
jns
arpl
mov
arpl
loope
repz
xchg
push
mov
cmp
pop
sbb
sbb
repz
out
mov
dec
inc
pop
pop
jecxz
cwtl
int3
mov
lods
dec
dec
fmul
cld
mov
or
movsb
sbb
ds
fstl
inc
out
js
pop
lret
js
repz
xor
repz
sub
push
into
push
inc
push
leave
mov
pop
orb
dec
cwtl
js
imul
or
std
into
test
outsb
jecxz
in
jle
xchg
dec
popf
pop
xlat
mov
in
loopne
mov
popf
or
ljmp
adc
xchg
push
cs
mov
and
lods
adc
ja
sub
mov
lods
xchg
push
xor
pop
mov
mov
mov
lods
cmpsb
mov
adc
cli
ret
xchg
and
jbe
insl
xor
outsl
cltd
sub
aad
mov
lock
add
xor
and
mov
xchg
jo
pop
popf
pop
jmp
lea
pop
leave
sub
push
lret
and
test
cmpsb
jno
jb
imulb
jecxz
or
in
jg
add
daa
mov
sub
add
add
and
sti
adc
adcl
inc
out
jo
adc
cltd
sbb
int3
clc
push
pop
inc
xchg
pop
outsb
pop
xchg
incb
mov
mov
or
adc
cmpsl
cmpsb
dec
in
add
cld
xor
add
stos
mov
mov
lock
fs
cld
or
mov
mov
pop
hlt
xor
clc
shll
cmp
sbb
pop
pop
dec
xor
aas
mov
mov
pop
pop
and
les
sub
clc
mov
in
mov
and
push
sbb
cmp
xor
push
mov
rclb
jmp
cmp
inc
rclb
cmp
leave
stc
mov
incb
pop
and
vsubsd
in
adc
cmp
sbb
add
mov
mov
sub
pmulhw
xchg
push
or
or
fdiv
mov
mov
inc
lret
pmulhuw
push
int
cmpl
pop
mov
outsl
repz
adcl
adc
jns
mov
or
int3
mov
xor
push
cmp
and
in
and
jge
push
aad
mov
stos
lahf
leave
lock
mov
push
das
mov
lret
sub
push
mov
jae
imul
push
push
out
lea
fwait
repz
jle
sti
xor
xchg
movsb
add
cmpsl
pop
fbstp
inc
mov
test
jg
and
popf
in
jg
pop
cmp
das
xor
popw
aam
decl
or
fdivp
adc
xchg
adcl
in
mov
lock
push
ds
ret
cmp
insb
jmp
lock
lcall
mov
xlat
fisubs
outsl
xchg
xor
cmp
adc
jle
pop
cmp
mov
lret
add
sub
xlat
cmpsb
cltd
mov
fsub
dec
xor
or
data16
outsl
iret
mov
scas
jno
fistpll
test
loop
icebp
mov
js
dec
pop
lcall
je
adc
jmp
pop
flds
and
xchg
outsb
repnz
dec
stc
and
push
shrl
loopne
repnz
pop
pop
ds
ja
push
divb
mov
aad
jl
and
dec
test
psubsb
jns
das
loop
cmp
pop
cmp
popf
pop
sub
and
push
cmp
mov
popf
mov
adc
jp
xchg
stos
fidivrl
push
pop
mov
pop
orb
and
aad
jb
and
xor
adc
xchg
scas
or
and
adc
insb
fisubs
adc
out
lods
aad
out
mov
xor
cmc
scas
je
popa
add
add
sbb
mov
xor
pop
push
out
mov
mov
mov
aad
punpckhdq
mov
clc
sbb
incb
jne
mov
mov
movsl
sbb
dec
push
or
jb
pop
lods
das
mov
push
cld
adc
adc
and
fst
movb
cmp
ficoml
xchg
orb
mov
fimull
add
cmp
pop
shrb
in
in
fnstcw
pop
sub
cs
ret
test
loope
pop
lods
xchg
mov
sub
fs
cmpsl
pop
sub
inc
jp
push
add
xor
insl
outsb
fadds
mov
sbbl
test
je
sahf
cmpb
lahf
xchg
roll
mov
push
jmp
push
push
test
jl
fdivrl
mulb
xor
in
sub
lock
dec
and
andb
lods
jp
das
mov
jb
into
pushf
mov
push
cmpl
jne
sahf
insl
dec
xchg
mov
je
xchg
push
in
lea
in
mov
imul
push
int
aas
out
lock
push
xchg
adc
mov
sbb
sti
add
jo
in
dec
fstpl
push
add
or
adc
nop
lock
flds
xor
mov
pop
sbb
sub
add
and
cld
inc
clc
dec
test
leave
lods
jae
pop
daa
xchg
sub
jmp
xchg
loop
jns
fs
dec
mov
jbe
cli
shll
or
jmp
mov
pop
notb
xor
ret
xchg
jmp
sub
add
leave
cmp
aad
popa
add
or
cmp
aas
pusha
cltd
ljmp
lret
hlt
imul
ds
pop
es
xchg
std
les
cmp
push
arpl
jg
adc
fmull
inc
jbe
jo
sbb
les
fs
adcb
jo
dec
dec
cs
lahf
or
ljmp
push
xor
and
and
inc
cmp
adc
ret
cli
mov
into
or
hlt
jns
pop
hlt
dec
scas
in
lret
jl
sbb
adc
loop
sti
sbb
inc
cmp
mov
dec
aam
pop
test
les
jnp
icebp
gs
pop
or
movsb
mov
aas
xlat
sub
xorl
out
push
in
data16
stos
sbb
sub
or
jle
add
cwtl
or
jns
jae
ja
addr16
dec
and
mov
jb
test
ss
rcll
adc
ja
gs
mov
mov
lahf
push
fildll
imul
and
add
mov
xchg
aaa
and
add
les
fldt
xor
insl
xorb
fsubs
dec
cmpsb
cmp
mov
fistl
jns
ja
xchg
ljmp
sub
lea
setbe
or
pop
adc
jns
out
mov
pop
or
dec
movsb
add
push
ret
cwtl
sub
not
enter
call
fsincos
and
data16
lea
dec
adc
test
ljmp
push
xchg
aaa
jmp
cmp
pop
dec
xchg
stos
xor
fstps
sub
ret
jecxz
cli
cmp
dec
jg
arpl
and
fiadds
or
or
mov
sahf
mov
fimuls
add
add
inc
cmpsl
dec
xchg
lldt
js
jbe
outsl
out
cmp
pop
je
mov
popa
hlt
stos
xchg
pusha
jb
add
sbb
dec
nop
adc
mov
mov
addl
mov
push
popf
pop
push
arpl
adcb
test
pop
outsb
ss
jmp
scas
jge
shl
shrb
pusha
mov
and
shlb
or
cmp
mov
cmp
aas
sbb
popf
incl
sbb
jmp
push
fisttpl
pop
push
cmp
fidivl
cmp
sub
addr16
jns
clc
out
or
out
adc
pop
jns
dec
xchg
lods
xor
mov
fmull
sti
fistps
xchg
fsubs
subb
add
ss
or
aaa
hlt
std
fistps
xchg
push
test
pop
jb
cmp
xchg
sub
push
mov
repnz
mov
mov
imul
inc
lcall
sub
xor
test
je
xchg
sub
dec
xchg
stc
or
add
aas
nop
jmp
ret
fcoms
loopne
dec
xchg
dec
inc
inc
outsl
dec
fisttpll
pop
inc
pop
movsl
mov
jae
out
mov
popf
lret
sbb
mov
sbb
in
xor
cmp
jle
cwtl
dec
enter
cmpsl
push
and
sub
lods
stos
std
add
ret
fninit
jbe
sti
fcomi
gs
outsl
leave
les
xchg
pop
push
mov
xchg
fcoml
sbb
cmpb
arpl
pop
cmpsl
test
mov
xor
fwait
into
lock
test
mov
daa
subl
cmpsb
or
push
rorl
int3
sbb
xchg
add
adc
cmpsb
jne
shr
ret
sub
xor
movsl
xchg
dec
or
mov
and
xchg
mov
cld
clc
lahf
jbe
jmp
pop
push
dec
add
movsl
or
fadds
xchg
decl
xor
rcr
pop
ja
push
mov
test
dec
das
and
mov
inc
jnp
sbb
les
mov
mov
in
adc
daa
inc
xor
xchg
stc
add
repz
cmpsl
push
jecxz
or
mov
pop
add
ficoml
loop
lcall
int
add
popf
jbe
cmp
inc
add
mov
mov
outsl
fbstp
popa
pop
inc
sti
mov
xchg
sub
xor
dec
sti
xchg
push
inc
outsl
and
int3
sarb
inc
bound
jb
pop
push
ljmp
adc
gs
sbb
mov
aas
in
shl
insb
fdivrs
sbb
je
jno
rclb
bound
scas
jg
out
pop
mov
push
rclb
and
push
movsb
push
dec
scas
enter
nop
xor
or
lret
sahf
xchg
pop
dec
pop
jmp
push
hlt
dec
roll
mov
xor
push
or
insb
push
add
fdivrl
xchg
dec
repz
mov
mov
sub
lahf
hlt
mov
in
ret
mov
shrb
js
scas
mov
mov
sti
enter
jno
and
jl
lahf
cmp
xchg
outsb
jmp
jle
mov
xchg
sub
push
sub
call
and
das
lret
jg
add
sbb
xchg
ds
lea
mov
fnstsw
xor
xchg
les
inc
jecxz
test
lahf
out
mov
lcall
lock
pop
mov
mov
jb
mov
adc
dec
fisttpl
neg
push
test
ret
xor
lcall
or
scas
scas
mov
fldenv
fldl
adc
add
or
adc
leave
pop
or
cs
pop
stc
xor
repnz
out
push
scas
sub
dec
cmp
cmpsl
add
and
inc
jle
and
mov
repnz
dec
fadds
in
cltd
ret
fisttpll
idivl
inc
jns
test
add
stos
mov
stos
jle
loopne
sbb
into
into
in
cmp
mov
push
lods
aaa
fwait
lret
jae
or
ds
jo
or
icebp
xchg
mov
dec
ljmp
sbb
insl
xchg
pop
push
data16
push
insb
fs
fsts
and
daa
jae
and
sub
ja
inc
push
fimull
roll
cmp
inc
lods
sub
add
xor
and
add
fldt
es
xor
xor
negl
ds
dec
mov
pop
fdivr
mov
icebp
pop
aaa
inc
cmpl
xchg
hlt
out
xor
scas
sahf
jecxz
inc
rclb
xor
mov
in
sarb
add
jb
xchg
push
in
fwait
add
fcompl
cmc
loopne
rcrl
cmc
sarb
stos
mov
sbb
out
push
into
ljmp
imull
pop
jmp
fsubrl
mov
jmp
insl
dec
xor
mov
dec
test
sub
mov
iret
mov
xor
ds
pop
jg
cmp
and
sahf
adc
fcompl
fidivl
mov
shrb
test
sbb
add
ret
fs
pop
sahf
jnp
cmp
lcall
dec
xchg
adc
push
ja
push
xor
push
cmp
pop
add
imul
leave
fs
repz
gs
bound
mov
sbb
nop
adc
sahf
or
cmc
jae
jmp
mov
subl
pop
sub
idivb
shlb
adc
scas
push
shll
push
cmp
mov
ret
fwait
or
cmpsl
pop
mov
out
enter
mov
cs
mov
jno
xchg
or
xlat
maskmovq
testl
or
in
mov
inc
dec
scas
daa
pop
loopne
stc
into
lret
cmp
dec
cmp
jae
push
pop
push
jae
fistl
jmp
mov
in
adc
mov
call
mov
inc
jno
mov
xchg
bound
and
and
pushf
xor
stos
jne
flds
scas
dec
std
or
mov
mov
bound
push
dec
jb
jno
jne
popa
cld
icebp
cltd
insl
idivb
outsb
sarb
push
push
and
pop
sub
movsl
sahf
jl
nop
sti
xchg
push
in
fcmovnu
icebp
adc
imulb
adc
lcall
repnz
inc
insb
repz
daa
fisttps
jle
pop
dec
dec
rclb
imul
outsl
push
xor
push
sub
lea
test
pop
add
dec
adc
push
jno
xor
lret
add
push
sti
inc
cmp
push
mov
mov
arpl
rorl
sub
xchg
push
ljmp
adc
jns
leave
gs
jmp
iret
mov
lret
jnp
sub
xchg
cmpb
sub
xchg
xchg
lea
js
mov
pop
addr16
fs
das
mov
mov
mov
add
test
mov
pushf
icebp
js
lret
add
mov
stc
imul
push
sub
mov
dec
adc
stc
gs
out
test
fiaddl
call
enter
pushf
push
in
out
and
dec
and
mov
fcoml
push
mov
ds
outsb
push
lea
mov
cmp
push
or
lods
lcall
daa
xchg
inc
cmp
xchg
fstpt
add
aad
pop
or
iret
or
mov
cmp
shlb
xchg
orl
aaa
adc
insl
lcall
pop
into
or
xchg
lds
mov
ror
fcomip
addb
das
test
data16
mov
stos
xchg
call
gs
inc
lods
in
sbb
scas
clc
mov
or
sub
or
fwait
sub
and
das
jg
cmp
shl
mov
pop
movl
movsb
jl
cmp
xor
std
lea
fbstp
and
imul
jp
xchg
mov
mov
cs
xor
or
adc
int3
mov
inc
std
test
push
out
jae
sbb
pop
mov
out
insl
in
sub
push
mov
lods
push
ds
cmp
xor
dec
lcall
fimull
jle
inc
lahf
cmp
adc
mov
roll
int
push
sub
imul
dec
push
adc
xchg
mov
gs
in
or
lock
mov
out
clc
cmpsl
dec
pop
pop
jb
dec
inc
nop
xchg
outsl
insb
pop
arpl
into
mov
int3
sarl
mov
jae
pop
xor
into
xchg
push
es
js
push
repz
repz
fisubs
xchg
enter
mov
sbb
cwtl
push
fsts
dec
lret
lret
jl
ljmp
adc
adc
jo
clc
jge
mov
push
xorl
aas
sahf
inc
negb
inc
jg
shll
test
mov
push
adcb
sbb
fwait
addr16
filds
or
ror
fmuls
stos
mov
sub
sub
dec
mov
addb
pusha
inc
jg
pop
mov
lock
test
jbe
leave
dec
push
fstps
stos
push
sub
xchg
test
adc
jne
cmp
add
popa
rcrl
aad
cmc
adc
mov
jae
dec
mov
xchg
mov
or
adc
sbb
and
dec
or
push
mov
pop
repz
ret
pop
cmp
aam
xchg
or
fldl
pop
mov
pop
push
adc
mov
ss
mov
scas
adc
shlw
add
ss
adc
negb
dec
push
in
cwtl
xor
fwait
sub
and
xlat
cld
icebp
cmpb
lea
cmpsl
popa
sarb
pop
mov
test
add
dec
push
sub
mov
imul
adcb
jbe
test
and
ss
into
iret
dec
scas
inc
rorl
add
out
xchg
and
je
inc
push
inc
mov
shrb
loopne
xchg
cli
xchg
test
cld
xchg
add
inc
sub
inc
mov
mov
push
cmc
sbb
pop
fsubrs
jp
jne
into
insl
pop
es
ret
adc
cmc
popa
aas
and
mov
jns
adc
mov
mov
nop
mov
daa
lret
test
and
xchg
mov
inc
sbb
fidivl
lahf
inc
addl
das
daa
inc
jle
lods
mov
test
daa
rep
push
mov
insb
mov
imul
or
outsb
stos
fistpl
cmp
ret
mov
or
in
mov
or
xlat
pushf
jg
js
lret
mov
mov
lds
fdivl
shlb
sbb
inc
arpl
push
popf
addr16
sub
es
sbb
push
mov
sahf
mov
pop
mov
test
in
mov
ror
xor
xor
repnz
mov
xchg
stos
and
loopne
andb
nop
negl
mov
xchg
xchg
push
neg
js
cli
xlat
xlat
pop
cwtl
hlt
gs
lahf
add
addr16
and
iret
lahf
or
sarl
rclb
mov
gs
sbb
into
jb
lret
call
jae
jne
xor
outsl
mov
mov
xchg
mov
test
push
or
pop
fiadds
cmpsl
push
xchg
adc
mov
xchg
aas
daa
enter
ljmp
fists
inc
push
sbb
in
dec
inc
jge
shrb
jl
fs
gs
push
loop
pushf
push
jecxz
mov
in
lea
hlt
push
mov
xor
sbb
cmp
out
leave
inc
xchg
and
mov
push
or
pop
dec
push
sub
rolb
xor
aaa
adcb
jno
inc
outsl
dec
sub
in
subb
push
push
add
pop
mov
neg
sub
mov
fistps
mov
test
xor
push
sub
mov
shl
mov
test
sarl
mov
pop
jnp
imul
enter
dec
xor
ret
je
or
mov
adc
mov
es
mov
xchg
imul
jno
adc
xor
sub
insb
fs
rorb
mov
divl
cwtl
xchg
xor
call
test
xchg
ficompl
cmp
jne
mov
cmp
adc
cmpsl
mov
jmp
dec
test
stos
add
pushf
mov
imul
rorl
dec
lock
xor
outsb
mov
and
in
xchg
xor
add
inc
dec
pop
mov
cli
jnp
push
fwait
cmp
leave
jno
push
pushf
andl
jo
rcrl
mov
sbb
inc
icebp
mov
movsl
cltd
dec
xchg
outsl
stos
push
xor
pop
sub
jnp
stos
push
ret
sub
jp
and
xchg
push
cmp
xchg
mov
lret
faddl
in
fildl
shlb
sarl
pop
push
mov
lods
xchg
or
test
imul
lock
addr16
ret
mov
mov
lea
test
loope
inc
xor
dec
xchg
push
arpl
repz
xorl
xor
cs
xor
adc
add
cmp
xchg
jmp
push
sti
in
jno
xchg
cmp
mov
in
movsb
in
das
cmp
lahf
inc
fwait
aam
mov
and
in
scas
jle
test
lods
mov
jo
pcmpgtd
jns
mov
in
aaa
xchg
xor
mov
mov
push
daa
inc
mov
shr
xchg
push
adc
mov
or
cmp
add
fistps
imul
imul
mov
mov
dec
scas
mov
fucomp
test
xchg
mov
pop
adc
push
leave
pop
and
inc
mov
insl
repnz
test
mov
in
imul
or
push
shrl
or
add
testl
pop
flds
jnp
nop
lret
push
jno
daa
xchg
sub
adc
jge
mov
xor
pop
aaa
dec
aas
lcall
mov
mov
sbbb
inc
in
adcl
xor
sbb
addr16
add
or
aas
push
int3
xchg
dec
and
testb
pop
xchg
pop
push
js
sbb
out
mov
jne
mov
insb
mov
movsb
and
jle
jl
or
sub
shll
test
jmp
movsb
sbb
movsl
inc
dec
movsl
push
push
xor
mov
pop
movsl
mov
je
test
xor
fsubr
xchg
fsubrp
insl
xor
out
ffreep
lret
jne
or
xor
fsub
cmpps
cmpsl
inc
mov
sub
xchg
mov
ss
xchg
push
sub
ss
insl
movsb
ja
leave
jmp
imul
lahf
fs
lea
cmp
das
lahf
dec
cmpsb
in
das
mov
stos
or
push
pop
cmp
sarl
inc
mov
scas
popa
les
and
stos
xlat
sub
mov
fisubrs
jecxz
sub
lret
mov
aam
jge
sbb
or
sbb
push
dec
mov
idivb
push
mov
arpl
push
push
mov
cwtl
pop
arpl
adc
lds
sbb
pop
sbb
je
loope
notb
mov
outsl
repz
into
icebp
orl
push
and
cmpsl
and
lods
push
pop
rcr
repz
idivl
cmpsl
mov
faddp
pop
ja
movsl
leave
lock
int
xchg
xorb
in
out
push
and
in
sbb
sar
mov
adc
sti
mov
call
mov
mov
mov
lds
cs
fs
shrb
cmpl
aas
test
out
dec
outsl
les
mov
stc
or
mov
cwtl
loope
or
sbb
push
sbb
cmp
jmp
and
and
das
inc
fcoml
cmp
cmpsl
mov
dec
add
dec
fldenv
push
mov
jge
mov
adc
jno
and
sub
xor
xor
hlt
popf
ret
fidivrl
sar
jle
mov
jbe
rorb
sbb
jmp
jge
cmpsb
fstpt
fadds
and
rol
enter
or
dec
mov
sbb
orl
nop
push
je
jmp
jmp
cld
mov
hlt
sbb
push
imul
int3
cmp
add
mov
add
or
sbb
add
cmp
in
xchg
in
mov
test
pop
and
aam
mov
mov
pop
mov
loope
mov
xor
pop
pop
fisttpl
sbb
push
mov
lds
mov
fisttpl
push
dec
stos
daa
fistps
popa
insl
gs
negl
jnp
mov
mov
adc
push
mov
and
inc
out
add
mov
cld
repnz
test
cli
mov
sub
xchg
jns
popa
imul
push
mov
movsb
dec
cs
cmp
popf
xchg
test
andl
jmp
cmp
push
mov
ja
push
mov
dec
cmp
not
mov
xor
mov
pop
adc
pop
xor
mov
inc
pop
pop
and
push
das
push
arpl
out
cs
mov
push
movsb
dec
pop
std
ljmp
fcomps
test
add
stos
insl
pop
mov
pop
push
insl
into
std
mov
push
loop
popf
lods
cmp
stos
sahf
movsl
mov
dec
xchg
cmpb
inc
cmp
fmul
or
outsb
movsb
pop
clc
mov
ficoms
cmpsb
cmpsb
push
mov
daa
sub
pop
push
cmpsb
sub
adc
mov
jae
xor
mov
mov
repnz
icebp
je
rcrl
loope
dec
ds
out
adc
clc
mov
sti
or
cli
sahf
mov
xchg
jns
mov
icebp
stos
popf
add
popa
xchg
xchg
jge
out
or
push
mov
das
shll
pop
mov
xor
sbb
icebp
fs
mov
cs
rorl
xchg
jmp
movsb
outsb
enter
sub
pop
sub
jo
ret
xor
jbe
aas
ja
leave
adc
inc
es
mov
mov
loopne
jb
out
jb
xchg
fidivrs
sub
clc
jg
or
or
or
push
popf
sbb
jmp
inc
loop
jecxz
mov
fucom
popa
jne
sbb
mov
fwait
call
mov
imul
fistps
shlb
or
cmp
dec
adc
movl
push
hlt
dec
out
mov
nop
in
cmp
call
in
push
sub
ds
add
cmp
lahf
cwtl
xchg
fdivl
cwtl
iret
dec
add
arpl
fisubrl
outsl
pop
fdiv
popf
int
insb
pop
push
sub
cltd
paddsw
lods
ja
cmc
js
fildll
ds
xor
inc
mov
shll
or
sub
xchg
adc
push
in
rorl
int
js
sbb
outsb
mov
sbb
pop
addb
push
clc
adc
xor
imul
ret
push
cmpsb
xchg
or
sbb
mov
addl
pushl
addr16
repnz
sbb
adc
and
sub
mov
sbb
in
clc
std
xchg
cmp
fwait
dec
sub
push
xchg
xchg
jmp
or
pop
fadd
push
in
sub
loop
push
int3
add
dec
push
call
pop
inc
dec
push
nop
je
push
mov
and
pop
repnz
sub
into
cmp
sbb
pop
ds
or
pop
popa
negb
outsl
fcompl
in
fxch
or
fistpl
mov
dec
sbb
adcb
dec
cmp
or
push
mov
test
rorb
inc
sub
insl
xchg
dec
and
sbb
loop
cmpsl
fldl2e
sub
outsb
and
pop
pushf
cmpsl
daa
in
stc
sarb
cmp
ret
pop
push
xchg
sub
xchg
insb
arpl
adc
push
and
push
xor
clc
aam
out
test
pop
pop
cmp
sbb
aas
nop
div
lret
out
shlb
sub
and
lahf
hlt
and
jo
scas
xorb
adc
pop
popf
loop
xchg
xchg
filds
jecxz
mov
cmpsb
xchg
dec
sub
and
out
mov
ja
std
and
or
mov
shll
mov
cmpsb
out
xlat
call
cmp
cmc
adc
dec
fdiv
mov
call
nop
mov
mov
cmpsl
and
push
lahf
pusha
mov
xor
xor
daa
pop
sbb
mov
insb
push
add
adc
push
adc
repnz
mov
jnp
cmp
sbb
fwait
repz
bound
scas
out
adc
sub
mov
xor
push
gs
sbb
inc
cs
loopne
dec
loopne
sbb
mov
cmp
aam
mov
scas
jno
cmp
jmp
push
stos
in
popf
js
outsb
outsl
in
scas
xor
adc
scas
test
leave
daa
add
sbb
xorl
scas
call
and
jle,pt
fwait
cwtl
pop
testb
jns
mov
mov
adc
adc
iret
and
mov
add
xchg
sub
mov
add
out
test
or
jp
into
sbb
ret
xchg
daa
dec
repz
add
ficoml
imul
fcompl
fs
pop
inc
jno
leave
mov
adc
cmp
enter
push
jno
adc
rorl
sbbb
xlat
test
fnstenv
repz
lods
add
cmp
pop
or
adc
rcrl
shl
ds
sub
ret
adc
mov
lds
mov
test
lods
jmp
test
push
cmp
notl
clc
push
fimuls
call
mov
sub
or
jb
pop
push
or
mov
jae
dec
loopne
std
scas
stc
and
inc
mov
lds
xchg
dec
xchg
icebp
es
xchg
or
dec
adc
fcomps
sub
aad
pushf
addr16
loope
cmp
stc
sbb
cmc
subb
loopne
add
insb
pop
test
fs
std
pop
inc
iret
sub
sub
cmp
ret
call
rolb
loopne
ds
sub
mov
fs
inc
push
pop
pop
xlat
dec
and
test
sub
stos
into
and
xor
rorb
daa
sub
jmp
jmp
dec
icebp
js
push
pusha
dec
das
pop
pop
hlt
imul
imul
in
dec
xchg
mov
cld
mov
int
cmp
test
fildll
mov
enter
cmp
inc
shll
je
jp
inc
inc
push
pop
cwtl
loope
rorb
insb
push
imul
sbb
xor
arpl
je
xchg
test
and
dec
pop
loope
xor
sti
fsts
js
std
in
mov
jle
in
sub
jle
cld
in
jne
shrb
push
mov
in
dec
push
mov
sbb
stos
cmp
or
xchg
mov
outsl
sarl
rcll
jle
jb
adc
out
gs
or
lret
pop
push
add
pop
aaa
pop
fstps
jbe
and
cmp
cmpsl
xchg
mov
adc
pop
add
out
sub
mov
adc
push
sub
imulb
pop
test
or
sub
pusha
out
jl
cmp
push
sbb
sub
push
lret
std
mov
and
imul
mov
adc
ficomps
aam
aad
xchg
jae
cmp
popa
int3
test
push
cmc
mov
dec
inc
inc
mov
xchg
outsb
out
bound
ss
and
cwtl
pop
pop
cmp
cwtl
sbb
stos
cltd
cld
xchg
add
sbb
mov
cltd
pushf
fsub
ret
ljmp
add
mov
mov
leave
xor
dec
sub
out
ret
mov
cmp
push
and
adc
rol
cmp
aas
call
iret
les
add
clc
insb
dec
adc
push
pop
pop
cmp
test
mov
cld
imul
xchg
lea
sub
dec
sub
jp
nop
lret
jno
fs
cltd
dec
cltd
add
iret
sub
dec
popa
jl
adc
lahf
hlt
sub
mov
mov
orl
pop
enter
das
rcrb
or
ret
mov
jp
clc
mov
xchg
mov
sub
leave
sbb
jb
jno
inc
xchg
mov
out
mov
push
mov
sarl
gs
xor
sbb
push
subb
xchg
outsl
cwtl
lret
scas
jo
jae
lret
and
jl
popf
mov
cmp
push
aam
xor
fcompl
mov
loop
cmp
xchg
xchg
andl
cmp
mov
fwait
and
adcl
and
loopne
jecxz
fsubrl
mov
in
incb
jge
jne
push
sbb
js
imul
inc
fs
lret
sahf
leave
mov
lock
imul
or
popa
xchg
in
test
push
xchg
testb
xlat
insl
iret
or
ljmp
incl
pop
xchg
xor
jae
aam
cli
and
push
fst
fs
scas
cmp
inc
pop
inc
or
les
dec
bound
hlt
cltd
js
mov
cmpsb
repnz
mov
xlat
adc
mov
inc
cmp
mov
dec
jle
pop
sub
nop
std
lret
jp
inc
int3
andb
inc
push
add
cltd
arpl
adc
lods
mov
jno
imul
jle
outsl
and
jl
xor
cltd
movsl
imull
or
add
test
jae
xchg
js
push
shrl
adc
mov
pop
cld
inc
or
imul
shr
sub
dec
and
mov
inc
mov
in
data16
mov
push
pmuludq
jmp
insl
inc
scas
shrb
pop
movb
dec
insl
jb
pop
in
mov
mov
loop
dec
hlt
das
or
add
dec
and
add
dec
leave
stos
rclb
adc
lret
or
sub
xor
mov
pop
fdivl
int3
fmuls
inc
rolb
js
je
test
daa
mov
in
mov
cld
inc
and
outsl
aad
cmc
pop
enter
pop
imul
xor
pop
int
sti
hlt
adc
dec
lcall
lock
jno
mov
mov
jbe
mov
jmp
pushf
push
std
push
inc
test
pop
clc
in
scas
stos
xor
fistps
es
aad
std
cmpl
lcall
imul
mov
cld
imul
inc
mov
daa
scas
fists
out
or
or
or
or
pop
push
popa
add
jge
xor
pop
push
notb
and
pop
loop
shr
xchg
cli
mov
ficompl
imul
jb
fisttps
mov
mov
roll
jne
out
adc
jne
pop
pop
jbe
inc
insl
xor
cmp
cmpsb
enter
incl
ret
adc
inc
mov
dec
inc
addr16
int3
pop
pop
mov
in
inc
cwtl
loopne
lret
jae
sub
aam
int
icebp
mov
insl
call
insb
and
addr16
stc
inc
out
dec
jnp
ss
sti
push
cmp
stos
fistpl
test
cli
test
ret
mov
inc
pop
daa
mov
xchg
push
xor
pop
add
mov
insb
dec
insb
dec
xor
dec
and
mov
mov
das
pop
out
cmpb
and
or
jle
pand
mov
imull
xchg
jle
sub
repz
cmp
cld
fstpl
mov
dec
hlt
mov
pop
xor
js
lcall
and
jp
cltd
pop
cltd
popa
pop
mov
iret
sub
or
cmc
xchg
ss
fs
mov
dec
ds
mov
or
je
fildll
pop
or
mov
out
pushf
sbb
movsl
lcall
jp
lret
cli
ficompl
cmpsl
xchg
stc
mov
repnz
scas
pop
fists
vmread
inc
repz
popf
add
into
mov
sbb
ss
jl
fldenv
and
insl
mov
fs
cmc
xchg
mov
adc
adc
sub
sbb
mov
stc
cmp
jmp
fisttpl
nop
xchg
mulb
rolb
xchg
mov
andb
inc
inc
mov
leave
sbb
adc
add
cmp
ret
cli
pushf
into
sub
imul
mov
sub
mov
adc
xchg
ffreep
jne
cmp
sub
insb
cld
sub
movl
push
sub
das
xor
fwait
jle
in
and
push
inc
fscale
push
pushl
popa
cmpsb
cmp
and
imul
sti
in
push
pop
movsl
test
add
clc
mov
filds
xor
loop
in
into
lock
shlb
pop
adc
cmp
ret
loopne
or
int3
dec
loope
je
mov
sub
fs
dec
adc
push
or
pop
sub
and
inc
adc
pop
pop
add
xchg
loop
loope
orb
xor
sub
jp
out
scas
movsl
xor
xor
xor
or
sub
icebp
rcrb
sub
scas
pop
jb
aad
pop
mov
rcl
inc
add
sub
sub
cli
and
andb
fists
sub
xlat
cmp
mov
xchg
pop
xor
cmp
addr16
je
xor
push
jp
add
repnz
mov
sub
jo
cltd
sbb
cmp
cmp
push
int
adc
xor
jno
sbb
xchg
xor
rorb
xchg
mov
hlt
in
pop
cltd
and
out
mov
adc
xchg
add
in
nop
mov
nop
iret
xchg
rcr
scas
push
inc
clc
scas
mov
cmp
test
pop
add
inc
xchg
out
mov
sbb
ficoml
inc
jns
lock
clc
ja
rcrl
mov
xchg
cli
test
cmpsl
popf
or
pop
cmc
std
sub
data16
icebp
aaa
and
sahf
fldl
jg
jno
fs
mov
adc
mov
popa
pushf
lds
fs
push
dec
imul
pop
aad
inc
sbb
pop
pop
push
inc
or
fdiv
movsb
lret
xor
iret
mov
pop
loopne
out
inc
cmp
pop
xchg
aad
push
or
add
lods
pop
mov
jmp
rcl
push
mov
add
rol
or
test
mov
clc
out
insl
mov
pop
push
or
mov
mov
leave
loopne
fwait
sub
and
inc
inc
negl
je
inc
cmp
scas
ss
inc
cmp
leave
cli
mov
cs
dec
out
cmp
mov
jo
fxch
jg
cmp
xchg
push
push
gs
push
inc
mov
xor
mov
dec
test
aad
mov
mov
and
mov
std
nop
sub
nop
mov
pop
inc
and
push
jle
xchg
jbe
sbb
in
push
jne
xchg
or
out
dec
push
mov
mov
jne
push
ljmp
xchg
lea
lret
ds
mov
xchg
dec
pop
movsb
insb
lods
cmpsl
pop
sub
addr16
test
fmulp
test
ds
jl
fwait
xchg
push
or
cmp
lahf
mov
jb
rcrl
inc
movsb
jns
pushf
sbb
sub
jle
cmpsl
xchg
dec
in
xchg
nop
cmc
ljmp
out
push
hlt
fdivs
inc
sahf
lods
repnz
xchg
mov
test
std
ret
mov
sbb
cmc
or
loop
sub
lods
cld
xchg
ret
insb
jne
pop
and
lret
test
jae
icebp
xchg
ja
sti
inc
aas
adc
out
sub
inc
imul
jbe
icebp
jl
clc
daa
adc
add
inc
cmpsb
xchg
pushf
icebp
das
xchg
mov
aaa
data16
inc
ljmp
jl
jp
into
orb
adc
push
dec
fnstenv
into
pop
sbb
lcall
adc
aam
jecxz
inc
pusha
in
out
and
imulb
or
fs
inc
imul
dec
in
out
mulb
inc
inc
std
adc
dec
add
jmp
push
pop
ljmp
adc
push
in
xchg
sahf
lock
cld
idivb
xchg
adc
stos
mov
xchg
push
gs
je
cmp
ds
xlat
roll
mov
mov
out
loopne
sbb
ret
addb
imul
jp
pop
add
jnp
mov
cmp
pop
insl
std
les
cmp
cmp
and
lret
inc
pop
jge
lea
mov
inc
jmp
xchg
sahf
mov
popa
adc
sarl
rcl
dec
inc
iret
or
call
jecxz
loopne
repnz
sti
dec
pop
xlat
mov
in
nop
inc
sar
insl
adc
ss
cmpsb
pusha
in
lcall
js
mov
inc
mov
jne
pop
push
xchg
fs
fsubl
cltd
hlt
push
imul
in
aam
or
sub
out
mov
outsb
pop
mov
pop
popa
jns
sti
sti
add
add
inc
inc
lahf
sbb
daa
mov
mov
es
mov
mov
notl
adc
jp
or
addr16
pop
cmpsl
gs
int
lcall
popf
stos
xchg
mov
dec
lock
xor
cmp
adcl
dec
mov
pop
lods
or
add
jmp
pushf
lret
xchg
bound
adc
inc
roll
sub
leave
jge
mov
pop
xor
stos
push
sbb
popf
sub
xchg
cmpsb
dec
clc
into
jmp
inc
arpl
sbb
jmp
fisubrl
flds
add
cmpsl
dec
mov
mov
inc
js
pop
xchg
out
pop
ret
int
and
cwtl
ljmp
mov
adc
xchg
leave
add
insb
push
jo
or
mov
call
mov
sub
rorl
hlt
les
repz
sbb
jno
cwtl
repz
das
imul
pop
lret
jb
in
inc
cs
adc
dec
andl
orb
sti
sbb
push
push
push
adc
and
push
jns
out
add
dec
sbb
mov
cmp
sub
dec
stos
ret
inc
inc
in
jo
fmuls
dec
outsb
pushf
out
out
in
scas
pop
shll
movsl
cmp
or
lea
out
test
push
cmp
adcb
ret
xchg
loopne
xchg
dec
pushf
jg
loope
in
out
lea
imul
push
xchg
stos
xor
aaa
lret
lods
out
cmp
fsubrl
es
in
aam
adc
hlt
add
lret
shrl
rolb
mov
xor
xor
je
adc
xor
pushf
mov
repz
mov
dec
out
jno
add
add
out
pop
mov
stos
lahf
lock
loopne
xchg
sub
dec
pop
into
stc
pop
or
xchg
jle
push
fmuls
shlb
icebp
sbb
popf
pop
jns
mov
or
inc
stos
push
add
jl
mov
push
jp
rep
movsl
inc
sub
lds
sbb
xchg
inc
jge
out
cli
add
jo
rclb
inc
fwait
xor
mov
cld
imul
outsb
mov
xor
jmp
push
insb
jp
pop
pop
and
sub
stos
subb
test
sbb
mov
bound
sbb
out
sub
jle
int3
xchg
push
repz
rol
dec
outsl
insb
cs
lock
mov
mov
adc
dec
fdivr
loope
fcom
inc
insb
nop
sbb
mov
movsl
xlat
negl
add
jle
ret
popa
repnz
inc
mov
insl
bound
sub
iret
pop
jmp
lods
mov
mov
call
sbb
mov
xor
push
lock
int3
and
dec
cmp
sar
out
mov
sbb
mov
lahf
xor
pop
idivb
jns
fs
adc
loop
out
pop
js
imulb
aas
lret
push
in
aas
and
or
roll
hlt
out
push
into
push
pop
or
imul
inc
imull
mov
dec
mov
jbe
das
enter
pop
in
mov
inc
cmc
push
data16
adcb
push
mov
imul
stos
mov
xchg
dec
loopne
and
push
orb
jge
push
push
cmp
sub
lock
jns
add
dec
or
push
inc
out
lea
dec
outsb
rolb
xlat
adc
scas
popf
aad
fnstsw
mov
adc
sub
fwait
inc
cmp
xlat
or
push
cs
xor
sahf
xor
loopne
inc
into
ret
mov
fidivs
es
in
mov
enter
or
lods
pop
mov
mov
leave
out
int
mov
int3
sub
iret
loop
mov
in
push
pop
jle
int
lds
clc
sarb
push
xchg
lret
lcall
cmpb
xchg
cmp
dec
mov
stos
xchg
inc
shrl
mov
inc
fadd
sbbl
push
aaa
popa
hlt
sub
xchg
ds
fistps
aam
ffree
add
dec
sbb
mov
mov
cs
xchg
jae
sub
pop
leave
or
adc
and
jle
mov
aas
aas
cmpsl
loop
test
rclb
int
pushf
movsl
ja
dec
adc
pop
adc
fsub
mov
and
lods
mov
std
jmp
in
lcall
ds
or
popl
es
jns
push
cs
fistpl
inc
dec
pop
sti
lods
sub
xchg
sbb
sub
stos
push
ret
xchg
and
loopne
frstor
xchg
lret
cld
les
fsubrp
jmp
cmpsb
cwtl
aaa
mov
inc
fcoms
xchg
xor
lods
nop
lock
hlt
add
mov
test
xchg
cmp
sbb
imul
add
lret
push
test
gs
ds
or
and
xor
in
fwait
daa
out
movsb
inc
pop
pop
adc
dec
cmp
call
cwtl
sub
push
xchg
cmp
sub
out
jae
sbb
adc
sub
cli
mov
ljmp
xor
pop
add
rclb
jne
xor
daa
jne
icebp
stos
sbb
cmpsl
popf
sbb
push
fsubl
movsl
jo
out
hlt
xor
lret
in
mov
adc
test
mov
ffreep
ficoms
in
stc
mov
mov
dec
leave
enter
inc
mov
ljmp
ds
xchg
cmp
mov
mov
addr16
mov
xor
pop
test
sbb
inc
inc
dec
cwtl
add
mov
mov
loope
xchg
test
cmc
adc
test
cmp
call
cld
das
or
xor
xchg
popa
adc
add
xor
xor
fstpt
in
jmp
jg
inc
pop
jne
fldcw
jg
dec
xchg
push
mov
or
jge
imul
inc
mov
call
nop
fcmove
ja
pop
out
in
int
xor
scas
in
lcall
test
imulb
add
jo
inc
mov
pop
popf
inc
xchg
mov
jb
dec
test
inc
pop
or
xor
aam
in
pop
sub
push
push
mov
pusha
and
imul
arpl
es
cltd
hlt
mov
and
push
jns
adc
or
pop
fisttpl
jae
call
stc
aam
jae
sub
repnz
daa
add
test
das
movsb
in
and
ret
sub
and
push
mov
jae
inc
push
sarb
sbb
inc
add
cli
arpl
inc
adc
adc
in
scas
push
arpl
je
pop
push
mov
pushl
push
inc
les
push
lcall
daa
fdivrl
popf
out
pop
repz
adc
inc
sub
jg
push
sbb
ds
test
jge
jmp
call
xchg
mov
mov
movsl
rcrb
call
dec
dec
clc
xchg
sbb
mov
mov
mov
sub
and
xor
adc
push
xor
push
dec
inc
jg
jns
out
xor
outsl
jle
mov
bound
pop
or
mov
dec
out
rclb
push
cld
lods
dec
dec
inc
pop
and
je
ds
in
xchg
pop
push
rcrb
pop
and
dec
jecxz
scas
test
mov
cmpb
mov
insl
test
cmpsl
jb
fwait
mov
jne
call
mov
popf
jp
mov
fisubrl
inc
das
out
pop
or
lock
ss
dec
aad
popa
repnz
rcr
dec
dec
push
ficomps
hlt
dec
xor
cmpsb
inc
xchg
subl
or
subb
in
cmp
scas
mov
andb
scas
add
loop
inc
xor
push
dec
push
adc
mov
lods
mov
stos
mov
pushf
inc
sub
lods
test
cmp
es
sbb
xor
mov
pusha
stc
leave
mov
ds
arpl
sbb
clc
aad
adc
mov
adc
pop
imul
daa
mov
add
add
div
lods
sub
sbb
mov
andl
stc
push
cli
in
sbb
dec
inc
and
cmp
inc
dec
and
xchg
sbb
lods
sarb
dec
inc
adc
in
mov
faddl
insl
fildl
push
push
test
add
sbb
pop
scas
cmpsb
into
mov
mov
fcoms
arpl
in
push
imul
mov
lret
jb
xlat
and
insl
into
ja
cwtl
xor
cli
iret
mov
test
cmp
cmp
lea
cwtl
push
lahf
lahf
aam
bndldx
shll
jg
pop
dec
mov
js
ret
xchg
bswap
daa
sub
xor
les
imul
ljmp
mov
mov
cmp
stos
imul
adc
push
fidivrl
push
gs
cmp
jno
sub
into
sbb
ja
lahf
sub
xor
xchg
cmpsl
mov
out
aaa
loop
sbb
stos
cmp
or
movsb
dec
rcl
cmp
mov
xor
frstor
mov
push
int
mov
cli
decl
rcrl
push
sub
lea
hlt
in
and
iret
lret
loope
dec
dec
ds
adc
inc
add
sahf
push
jae
stc
lock
mov
test
xchg
mov
xor
cs
pop
in
mov
in
pop
icebp
push
test
inc
xchg
jae
cwtl
iret
call
stos
or
lods
fiaddl
jmp
add
push
dec
pop
inc
jp
pop
aam
push
mov
jp
mov
or
sbb
int
ja
cmc
filds
sub
sbb
shl
in
cmp
mov
mov
pop
outsl
shll
jnp
adc
lea
jbe
fwait
mov
pop
xor
sub
movsb
dec
dec
xchg
mov
lcall
ljmp
mov
cmp
dec
fwait
push
in
in
or
testl
lea
repz
inc
lock
roll
mov
mov
lds
dec
xchg
add
and
cmp
lods
and
cs
sarb
jo
pop
sub
in
sbb
std
stc
xchg
push
push
loopne
outsl
in
movb
xlat
adc
pop
clc
add
fsubrl
sbb
inc
insl
cmovae
add
test
jno
mov
inc
sub
adc
mov
inc
repnz
les
fcoml
ror
loopne
mov
push
pusha
cmpsb
mov
dec
and
jno
mov
in
sub
test
lret
xor
mov
int3
leave
sbbb
mov
dec
call
sbb
sub
jne
out
in
enter
iret
sbb
ret
hlt
mov
pop
sbb
mov
mov
test
cmp
in
xchg
jle
cmp
aas
rcll
sub
jns
cmpsb
aas
jp
or
sub
fisttpl
aad
sub
ja
insb
arpl
jmp
xchg
loope
xor
cmp
dec
sti
push
pushl
push
gs
dec
jno
cwtl
orb
pop
jno
das
lods
jle
stos
sahf
inc
aad
xor
adc
jno
or
pop
jge
xor
scas
mov
pop
jo
pop
cwtl
ret
popf
inc
pop
xchg
aam
fucomp
lock
mov
test
mov
aam
jbe
jae
add
jmp
mov
cwtl
cltd
or
xor
pushl
push
mov
lcall
sub
fsubr
adc
pop
sub
sbbb
in
and
push
inc
movsb
mov
mov
jo
mov
sbb
insb
fsub
mov
or
jg
stos
sbb
int3
daa
and
mov
mov
and
or
mov
scas
xchg
xor
outsl
jae
pop
mov
lock
andb
inc
mov
shrl
notl
call
lahf
add
add
cmp
incb
bnd
jmp
cmp
mov
into
dec
xor
cmp
or
fldcw
rclb
outsb
daa
int3
push
mov
pop
jg
mov
fsubrl
pop
pop
inc
xchg
or
rcll
loopne
sub
add
fidivs
outsb
or
mov
adc
lret
int
notl
xor
daa
imul
pop
mov
mov
lret
cmp
push
jb
les
gs
stos
lahf
mov
adc
push
xchg
lahf
xchg
pop
mov
popa
and
lret
jmp
dec
pop
fmul
cmp
adc
cli
in
jge
xor
and
push
adcl
sub
in
fisubl
scas
hlt
mov
mov
cmp
rcrl
movsb
add
jb
cwtl
mov
in
pop
fcomps
push
inc
xchg
adc
decb
sbb
adc
and
mov
sbb
jno
mov
rclb
dec
mov
in
xor
out
fwait
and
test
dec
adc
out
push
jb
scas
cmp
repnz
out
pop
out
std
push
cmp
in
pop
inc
xchg
xchg
or
shlb
rolb
xor
pop
mov
les
addr16
lcall
and
pop
insb
jnp
add
repnz
cld
and
push
movsb
mov
cmp
xor
inc
data16
cmpsb
sbb
and
rcrl
out
in
mov
add
xchg
or
in
cli
push
daa
adc
push
push
sub
ds
fadds
loopne
xlat
daa
xor
fcoms
loopne
rcll
jp
and
test
and
adc
decb
mov
jno
add
insb
sbb
inc
aam
insl
pop
and
cmpsl
mov
fcmovu
lds
jl
inc
push
pusha
mov
mov
jo
add
push
fs
cmpsl
push
data16
mov
jg
jo
sbb
push
xchg
in
xchg
hlt
xor
scas
cmp
mov
mov
cmp
aad
out
push
fisttpl
adc
xchg
and
andl
ss
fdivl
pop
jle
jp
adc
cmp
scas
or
pusha
jge
jo
add
js
ret
int3
mov
xchg
pop
jnp
push
int3
mov
inc
xor
ja
inc
aad
sub
and
mov
jmp
jne
xor
push
outsb
push
cmp
dec
lods
push
sub
add
jno
das
adc
cs
mov
inc
mov
lahf
enter
mov
mov
arpl
jo
add
jg
cld
das
leave
jg
jg
push
push
mov
fsubp
cmp
mov
jae
sti
inc
fnstcw
rolb
lret
cmp
call
dec
inc
outsl
and
xlat
outsb
push
and
outsb
movl
stos
xor
push
dec
or
sbb
pop
aaa
pop
add
insb
push
jb
jmp
sub
movsb
xor
fistpll
jne
jae
dec
and
or
test
pop
nop
std
push
pop
data16
xchg
iret
jns
pop
lret
dec
mov
rcrl
in
cmp
fstl
shll
or
pop
lds
xlat
push
cmp
adc
aaa
push
arpl
jo
daa
xchg
cmp
aad
addr16
dec
and
cmp
lret
pop
mov
outsb
mov
clc
pop
inc
jns
and
je
push
dec
fsubrl
repnz
pop
mov
and
adc
jmp
aaa
lret
arpl
test
or
and
dec
xor
scas
pop
mov
ret
cmpl
pushf
sbb
xor
jnp
mov
jo
mov
jae
push
inc
fsub
popa
aaa
ss
movsl
xchg
repnz
add
and
les
int3
sahf
fcmovnb
and
fistpll
xor
xchg
xchg
cmp
js
test
push
xchg
push
sarl
pop
nop
fucomi
pop
and
xchg
frstor
push
mov
popf
repz
xchg
lock
cmpsb
fiadds
adc
out
dec
mov
movsl
loop
mov
push
dec
test
mov
or
into
std
cmpsb
adc
imul
or
mov
sbb
or
cmp
jge
jnp,pn
add
jp
pop
push
and
cmp
mov
in
in
mov
push
bound
dec
pop
jb
sub
data16
popf
jo
out
inc
push
cmp
push
outsb
adc
pop
into
sbb
les
popa
out
dec
imul
mov
jne
icebp
sbb
sbb
xchg
cmpsb
sbb
and
inc
repz
aaa
dec
mov
pop
mov
loopne
cmp
mov
cmc
scas
jmp
xchg
pop
lods
dec
loop
pop
mov
mov
add
je
add
div
inc
gs
mov
sbb
lcall
jg
jge
lods
adc
mov
or
or
leave
iret
jnp
mov
xor
sarb
add
lock
punpckldq
shrb
repnz
xchg
js
lods
adc
add
xor
ss
shll
mov
dec
add
xchg
jbe
loope
mov
xor
xchg
out
lds
mov
push
dec
adc
aam
lret
fsts
push
dec
cli
mov
or
xchg
or
fcompl
out
fdiv
xchg
mov
add
mov
pop
mov
mov
adc
pop
mov
sub
popf
in
rclb
dec
movsb
jg
and
test
inc
adc
push
aas
and
outsb
and
pop
jbe
aaa
push
cs
das
pusha
adc
pop
xchg
inc
push
and
adc
and
jp
xchg
add
es
rorb
cmp
popf
mov
sub
add
xorl
cmpb
and
aad
jle
popa
test
cld
and
pop
sub
popf
popf
fstp
cli
lea
cmp
push
cmpsl
fdivrl
cmc
xor
daa
shlb
dec
mov
in
pushf
mov
mov
or
ror
sbb
pop
or
fstps
xchg
jnp
adc
and
stc
inc
test
dec
lcall
loop
cld
add
out
outsb
insb
test
xchg
lods
add
cmc
popa
add
mov
test
cmpsl
into
dec
push
scas
in
jno
adc
lods
or
js
test
inc
mov
inc
lock
pop
cmp
and
inc
sub
adc
loop
sub
mov
negl
movd
sti
adc
pusha
and
or
xorl
mov
rcrb
sub
cli
and
cmpsb
mov
jmp
in
ret
ja
andl
outsb
dec
xchg
cwtl
daa
loope
cmp
sub
fldcw
mov
scas
or
jecxz
flds
lcall
arpl
inc
andb
push
popf
cmp
mov
and
out
pop
dec
xchg
xor
sub
mov
out
sbb
xchg
fldt
cmp
aaa
pop
xchg
aaa
push
mov
jg
in
jbe
push
xorb
cmpsl
mov
jbe
test
sub
int
and
mov
testb
xor
sub
out
mov
pop
scas
lods
mov
andl
test
fs
xchg
xchg
dec
jno
jae
and
cli
mull
fwait
mov
or
sub
dec
aam
mov
adc
hlt
rorl
xchg
mov
push
shll
jbe
add
roll
stc
inc
fwait
jp
out
push
aad
pop
dec
scas
push
lock
sub
stos
ret
faddl
sti
xchg
jecxz
rorl
jbe
xchg
int3
jl
in
mov
and
mov
fstl
stc
ret
and
data16
aad
inc
fadd
adc
xor
jg
daa
mov
adc
and
pop
cmp
shll
add
mov
outsl
and
mov
ss
mov
mov
out
mov
daa
jmp
lods
inc
ret
dec
inc
inc
xor
cmpsl
ss
aas
xor
subl
cwtl
call
das
pop
sbb
jecxz
cli
jae
xchg
loopne
jbe
push
pop
hlt
cmpb
jmp
daa
clc
stos
imul
and
and
cwtl
jnp
xchg
jb
cmc
jbe
xchg
rcll
or
lds
pop
out
sbb
push
push
xlat
inc
pop
insb
int3
test
out
lock
out
dec
in
sti
jg
mov
fldl
jnp
lahf
icebp
scas
pop
and
pop
dec
adc
inc
nop
mov
push
lahf
jecxz
iret
loopne
sbb
fs
mov
mov
dec
cmp
xor
stos
je
inc
lret
addr16
mov
lods
mov
fistpll
adc
ds
loop
dec
jge
mov
into
std
jecxz
popa
jo
mov
jns
pushl
jp
out
cmpsb
xchg
out
or
adc
bound
es
es
sbb
out
cld
and
pop
sbb
mov
mov
outsb
push
movsb
xor
das
or
sub
divb
jno
cltd
push
test
pusha
inc
int3
stos
cs
jmp
jg
xchg
test
cmp
inc
fistpll
inc
cmpsb
shl
pusha
push
movsl
aas
sbb
inc
push
pop
inc
rcrb
push
aas
lret
out
int3
xor
xlat
mov
mov
xor
data16
mov
mov
push
xchg
in
xchg
imul
push
push
xor
mov
jmp
shll
push
inc
sahf
xor
ljmp
push
repnz
push
stc
sub
dec
xor
push
pop
sub
out
cmp
in
in
xchg
pop
outsb
gs
pop
sub
sbb
ret
jnp
pop
push
cwtl
lods
xor
jb
inc
mov
cmpsl
inc
xor
dec
data16
js
fisubrs
cmp
mov
pop
mov
xchg
push
out
loope
adc
jecxz
or
mov
test
mov
push
maskmovq
negl
orl
movsb
inc
iret
sahf
mov
aad
imul
std
push
jmp
out
inc
sub
adc
push
mov
movsl
mov
or
sbb
mov
inc
xor
and
fbld
clc
into
imull
sub
adcb
pop
add
scas
lods
jp
or
out
fisttps
cmp
es
cmp
push
pop
xchg
subl
aad
in
xor
addr16
jmp
push
pushf
inc
and
ss
pop
mov
pop
pop
lret
and
lret
sbb
rcll
adc
mov
std
rcr
xor
addr16
sahf
adc
stos
inc
fwait
add
shr
mov
ficoms
fcoms
adc
cmp
lret
pop
jl
sbb
jp
mov
adc
mov
sbb
mov
push
pop
dec
add
les
js
inc
cmpsl
pop
test
xlat
lock
mov
inc
imul
cmp
or
cmp
pop
hlt
add
inc
add
lcall
jmp
add
pusha
mov
and
cltd
in
popf
jl
out
dec
mov
xor
pop
clc
aad
adc
sub
jecxz
cwtl
insb
push
mov
cmp
xor
in
aam
push
mov
gs
mov
out
int3
jle
and
jle
sahf
add
mov
sub
inc
mov
add
add
dec
add
loopne,pn
out
sarb
xor
aaa
leave
mov
adc
ret
pop
xchg
xor
movsb
and
dec
in
adc
test
movsb
movsb
das
idivb
mov
xor
sbbb
gs
adc
pop
or
add
pop
jle
mov
adc
outsb
leave
lahf
fimuls
mov
imul
pop
insl
ljmp
mov
shl
lods
in
xrelease
inc
or
jp
sub
mov
aam
dec
aad
push
lods
sbb
jg
cmc
adc
jl
movsb
out
cmp
jmp
mov
movsl
or
sub
and
ds
mov
sub
leave
sbb
xchg
jp
outsb
jp
mov
stos
cmp
sbb
call
gs
mov
dec
mov
mov
test
cmc
stc
xor
enter
xor
movsl
cmp
jb
push
or
arpl
xchg
mov
jae
das
push
dec
dec
push
into
sub
push
xor
out
in
sub
repz
fsubr
pushf
mov
js
mov
xchg
insb
outsl
cmp
mov
in
push
mov
and
push
enter
adc
cmc
rorl
pop
mov
call
movsb
stc
fwait
negb
lcall
xor
and
cltd
add
mov
sub
mov
push
cmp
pop
sub
stos
lret
shr
mov
popa
jmp
dec
mov
dec
inc
sub
adc
cmc
je
popf
scas
jno
cmp
xchg
ret
test
ret
fscale
leave
xor
xchg
in
scas
sbb
stos
jae,pt
in
mov
ja
test
leave
lret
fistl
js
or
mov
call
push
ljmp
sbb
pop
lcall
push
jmp
sbbb
leave
xlat
and
cltd
add
inc
aam
dec
stc
add
mov
mov
jg
sbbl
push
out
outsb
aad
bound
rol
out
pop
out
jg
movsb
jg
test
cmpsb
and
aad
aas
faddl
roll
arpl
sti
stos
je
sub
sub
lea
and
cmp
loop
sti
lods
out
jg
mov
adc
fldt
sub
fldt
push
inc
pushf
test
add
adc
cmp
out
cmc
je
inc
fsubrl
ret
or
cmpsb
ljmp
lret
fwait
pop
in
dec
xor
aaa
or
fisubrs
movb
mov
and
lahf
mov
std
cmp
and
scas
outsl
dec
loope
loopne
call
std
out
movsb
fcmovne
in
push
imul
inc
movsl
mov
sbb
mov
insb
sti
lea
xchg
lods
mov
xchg
shl
popa
add
dec
loopne
out
andb
pop
in
mov
call
scas
inc
loopne
cmp
mov
cmp
scas
out
ficoms
mov
das
push
inc
mov
rorb
insb
adc
out
icebp
cs
scas
int3
and
sbb
roll
cli
mov
fcomip
pushf
sub
nop
inc
jae
bound
mov
dec
test
push
fdiv
adc
gs
lock
jae
sbb
or
lods
sub
mov
bound
add
lret
jno
rcrb
and
inc
sub
aad
cmp
pop
ret
mov
mov
sbbl
mov
jae
int3
fldcw
movsb
inc
outsl
sarb
pop
mul
test
dec
dec
add
das
xchg
and
stos
into
loopne
jne
loopne
xchg
xor
sbb
js
mov
popa
movsl
sub
insl
push
out
sub
imul
jno
lcall
push
add
inc
mov
dec
in
mov
fdivl
in
pop
pop
xlat
adc
and
jl
or
into
mov
xchg
outsb
dec
cmp
sub
mov
adc
ret
insb
fucomip
xor
aaa
les
bound
push
jp
push
sub
shl
clc
mov
jp
sar
cmp
and
and
jl
enter
mov
ja
notb
adc
repz
add
pop
push
mov
scas
jns
pop
shll
int
push
jae
shl
sbb
addl
popa
int
into
lcall
fldenv
lods
scas
in
mov
dec
jnp
mov
sub
mov
mov
adc
mov
out
add
cli
cmc
ljmp
lahf
add
shll
imull
fbld
call
aaa
push
mov
or
ret
dec
aaa
jns
pop
fs
mov
inc
inc
or
xor
cmp
and
lret
int
mov
or
and
out
insb
add
mov
bound
xorl
iret
pop
mov
test
xor
adc
fucom
stos
mov
mov
inc
xor
mul
addr16
cmp
pop
cmp
in
in
hlt
movsb
push
icebp
ss
xchg
fstl
push
aad
jmp
pop
flds
xchg
sbb
fidivrl
jae
mov
push
mov
je
mov
or
in
test
mov
mov
dec
push
std
imul
fsubs
cli
mov
and
xor
lret
push
mov
jb
leave
stos
addr16
or
xchg
or
pop
cmpl
xor
push
cmp
cld
js
dec
jno
mov
sarl
add
jns
icebp
sub
mov
xchg
popa
jno
mov
xchg
xchg
das
mov
stos
aad
mov
divl
es
and
cmp
add
leave
movsb
stc
and
mov
xor
xchg
in
fildl
cmpsb
dec
add
adc
dec
mulb
dec
dec
test
pushf
insb
stc
cmp
jl
adc
and
lret
insb
xchg
call
add
mov
sub
adc
iret
push
sbb
inc
mov
mov
addb
adc
subb
mov
popa
iret
orl
and
stc
das
mov
mov
fst
aad
and
xchg
xchg
jb
jge
xlat
fstpt
inc
mov
jo
inc
dec
arpl
movsl
sarb
and
in
mov
or
pop
and
sub
lcall
jmp
push
lret
sub
andb
dec
push
xor
inc
loop
xchg
push
jle
adc
sarb
rorl
hlt
xor
stos
inc
and
cmp
pop
dec
aam
fwait
jo
cmp
pop
pop
movb
jl
cmp
mov
jp
push
and
lock
lret
push
or
insw
push
ljmp
in
and
lahf
jge
movsb
jo
or
cmp
loope
cld
cmpb
xchg
adc
aas
subb
jno
dec
outsl
notl
pop
and
mov
pop
lods
cmpsb
sbb
andb
mov
xchg
add
xor
cmp
jge
test
pop
mov
cmpb
or
bound
enter
mov
mov
adc
pop
in
out
orl
cmc
cmpb
cmpsl
pop
mov
mov
or
add
cld
fldt
fld
add
push
jnp
das
push
sub
or
loopne
lds
lods
negl
mov
pop
mov
popa
pop
out
inc
ret
push
in
inc
inc
dec
out
popa
movsl
dec
icebp
push
inc
jmp
jg
dec
push
jb
and
dec
sbb
pop
out
add
xchg
sub
mov
mov
ja
data16
es
jnp
jbe
hlt
pop
repnz
inc
or
lret
jl
mov
not
popa
mov
pop
or
popa
xchg
mov
outsb
ror
movsl
sbbl
mov
lods
or
jb
pop
xchg
push
mov
dec
xchg
repnz
inc
jns
pand
ja
xor
test
sbbl
pop
js
sahf
testb
jo
enter
lcall
sets
shl
rol
stos
mov
xchg
inc
cmp
rol
sbb
fidivrs
cwtl
mov
pushf
cld
push
sbb
xchg
andb
jo
shr
inc
fisttpll
ljmp
sahf
xchg
fidivrl
insl
call
pop
sar
sbb
ror
pop
fs
movsl
icebp
into
push
dec
es
dec
xchg
or
icebp
mov
xchg
cmp
fisubs
pop
mov
xor
xchg
pop
test
popf
push
test
out
scas
fwait
push
test
sahf
mov
jno
jmp
daa
sub
aam
dec
lods
push
push
mov
sbb
std
mov
lahf
xor
rcll
dec
aaa
push
incl
ljmp
jns
loop
dec
adc
dec
cmc
rcll
inc
mov
adc
adc
add
xor
cmp
jg
sti
ss
les
jp
jnp
cmp
pop
inc
push
lds
repnz
je
rclb
pop
and
cmp
mov
inc
nop
movb
or
mov
out
insl
mov
cmp
leave
dec
mov
push
nop
divb
leave
dec
sbb
xor
ret
icebp
or
ret
jo
xchg
lock
cmc
out
dec
out
or
mov
iret
cmpb
pop
fistpll
push
mov
add
push
popl
push
dec
xlat
hlt
ret
inc
ret
mov
stos
cld
stos
ljmp
inc
mov
aad
popf
pop
daa
stos
and
ja
into
and
jp
mov
dec
sbb
sbb
mov
and
sub
int
in
testl
add
mov
sbb
cld
test
addr16
out
push
sbb
dec
mov
push
mov
and
ljmp
mov
fidivs
loop
cmpb
mov
push
sbbl
push
inc
dec
mov
pop
stc
adc
dec
jns
cmp
movsl
mov
lret
pop
jbe,pt
stc
mov
jae
testl
xor
addr16
jbe
test
ds
adc
push
lods
cltd
nop
ja
mov
mov
gs
lods
xor
push
aas
loope
or
iret
iret
aad
mov
stc
out
pop
popa
mov
dec
out
lahf
dec
sub
stos
popf
and
dec
xchg
leave
mov
fcmovnbe
sub
mov
xchg
xchg
pusha
xchg
bound
fstsw
inc
sahf
push
sbb
and
sub
jns
dec
adc
sbb
addr16
cmp
cmp
ficompl
pop
ss
add
loope
jns
push
dec
xor
push
mov
mov
add
inc
into
out
adcl
and
or
or
hlt
mov
push
cli
dec
pop
imul
in
mov
xlat
imul
out
aas
adc
out
fsubrl
ljmp
jl
inc
fdiv
mov
push
ret
loopne
jmp
mov
push
pop
jmp
lcall
push
stos
mov
lock
fnsave
cmc
popa
adc
xchg
outsb
scas
outsl
popa
lea
jb
xor
fnsave
add
int3
mov
sub
daa
xor
sti
jp
insl
mov
xchg
inc
lds
daa
lock
cmp
test
add
lods
out
lods
mov
loope
mov
call
push
mov
mov
adc
jle
enter
jmp
push
cmc
repz
inc
xor
push
xor
je
sbb
push
rolb
leave
lret
or
rcrl
mov
push
xor
sbb
ret
xor
adc
pushf
lret
lret
inc
cmp
xchg
enter
out
ret
mov
mov
push
and
popa
dec
cmp
jmp
sbb
inc
cmp
loope
sub
insb
lods
mov
inc
cmc
nop
dec
push
jg
cmpsb
lret
lret
ljmp
pop
ljmp
cwtl
mov
rcrb
cmp
pusha
cmc
sti
ret
or
ljmp
or
sbb
inc
xchg
add
xor
addr16
add
pusha
cmpl
jmp
jo
je
cmc
pop
push
or
pushf
lds
clc
sbb
cmpsb
mov
adc
inc
pop
jp
or
mov
sahf
jle
add
and
add
inc
add
push
xchg
adc
mov
xchg
jge
imul
les
mov
insl
pop
add
and
mov
dec
push
sbbb
cmpsb
push
icebp
mov
repz
adc
int3
ds
mov
out
xor
push
pop
and
adc
pop
sub
dec
xchg
sarl
repz
ret
pop
xor
xlat
pop
pop
jl
stos
xchg
sub
pop
cltd
test
mov
lock
stos
lcall
jo
push
push
mov
sub
cmp
push
pop
inc
dec
mov
jl
dec
call
jmp
xchg
and
xor
in
add
fdivrs
mov
push
pop
add
ret
das
incb
mov
nop
xor
fbstp
dec
adc
aas
inc
int3
dec
fmull
imul
stos
mov
mov
stos
sub
ja
fildll
jo
fstps
cltd
dec
xor
pop
dec
and
or
fcomp
adc
or
mov
ja
or
movsl
pop
mov
stc
fwait
dec
and
add
sub
es
ljmp
ret
pop
clc
mov
mov
xchg
push
push
push
inc
clc
mov
inc
mov
cmc
test
mov
test
das
xchg
push
int3
in
stos
or
cli
pop
out
fbld
out
js
aas
popa
out
imul
jle
pushl
fcmovbe
shrb
push
cs
imul
jae
in
outsl
pop
loope
fs
jbe
push
cmp
pop
dec
sub
imul
and
sub
push
inc
rclb
sub
cmp
test
jae
aas
cmp
dec
xchg
add
insb
sub
mov
imul
fidivrs
adcb
push
outsb
fnstenv
sti
cli
cmpsb
push
inc
fcoml
cmpsb
out
out
mov
sub
clc
cmp
stc
imul
leave
imul
lahf
xchg
cmp
add
das
lret
sbb
inc
jno
and
push
movsl
mov
es
inc
loope
xor
sbb
testb
les
movb
or
mov
test
jno
pushf
mov
mov
bound
lret
cltd
inc
jbe
mov
mov
xor
in
mov
xchg
cmc
popf
mov
dec
mov
push
into
jbe
jae
sbb
mov
stos
mov
push
mov
repz
int
out
sbb
mov
and
bound
or
cmpl
das
ficoml
sar
push
icebp
xchg
daa
mov
orl
sbb
jo
xor
repnz
xor
add
adc
outsl
dec
xor
xchg
jle
inc
gs
loop
and
mov
mov
pusha
lds
xchg
cmpsl
adc
pop
lods
leave
inc
mov
adc
mov
push
imul
mov
jl
or
lahf
mov
dec
arpl
subb
repnz
mov
jmp
into
adc
inc
call
cli
add
pop
mov
sub
pop
inc
movsl
sbb
out
mov
mov
cmp
stc
sub
adc
push
sbb
enter
je
inc
lods
add
inc
add
pop
clc
outsb
mov
imul
add
mov
out
loop
sub
mov
dec
mov
mov
int
cltd
pop
call
adc
xchg
mov
int3
out
les
jae
push
out
jno
aam
or
mov
cmp
aam
cmp
and
mov
push
xchg
dec
inc
pop
or
cld
rorb
lods
ds
in
arpl
ret
sti
sub
sbb
jl
cmp
mov
and
cmpb
out
mov
lds
ds
mov
mov
les
mov
jbe
addr16
daa
xchg
xchg
fsubp
jnp
jbe
ss
pushf
and
add
dec
sub
test
mov
popa
lods
ret
in
stos
enter
mov
push
xor
ret
push
xchg
push
mov
mov
dec
hlt
jns
mov
push
add
mov
jo
xlat
imul
cmp
jnp
insb
adc
loopne
jbe
das
call
adc
clc
loope
mov
les
xchg
aad
into
xchg
push
data16
stos
mov
ja
test
nop
adc
cwtl
divb
inc
inc
xchg
les
insb
dec
sarb
ljmp
nop
fmuls
push
pop
inc
jns
jnp
sbb
jb
adc
mov
mov
les
ds
xor
and
cmp
mov
daa
in
adc
popf
inc
repz
in
inc
push
dec
lea
mov
adc
es
es
clc
mov
push
inc
ja
jp
pop
outsb
stos
and
das
loope
out
clc
xchg
mov
add
mov
add
adc
and
shll
sbb
mov
mov
loope
jp
das
int3
lods
into
icebp
clc
pop
fstpt
bound
shll
fistpl
cmp
rep
call
add
fildl
mov
lock
mov
pop
sti
outsb
es
mov
insl
jl
mov
imull
fistpll
incl
add
fwait
stos
mov
rcrl
movsl
lods
xchg
xor
or
push
test
fnstcw
push
jb
jnp
pop
ss
ljmp
bound
sarl
fcoml
into
or
in
or
jne
adc
nop
cmp
fs
dec
mov
mov
dec
push
push
mov
fwait
mov
sub
inc
push
and
fildl
jl
xor
ljmp
aaa
pop
and
aas
inc
xchg
lret
and
adc
movsl
mov
mov
test
dec
jb
sub
add
insb
shll
ret
add
xor
adc
filds
sbb
inc
inc
addr16
push
push
js
out
jae
mov
jns
stc
mov
add
add
gs
decl
sub
jne
call
adc
dec
xchg
mov
scas
cmp
rcr
mov
mov
sub
jle
ja
jmp
xor
push
cmp
sbbb
fs
dec
push
sub
inc
loopne
stc
into
in
movb
jge
add
pop
movsb
nop
mov
das
mov
push
sbb
and
sub
inc
out
lock
rcr
push
mov
mov
lods
dec
cmp
jge
pushf
xor
and
mov
orl
jmp
cltd
push
aaa
jecxz
sar
sti
imul
adc
test
inc
shlb
mov
inc
jns
inc
mov
lods
aad
inc
xor
insl
mov
and
jmp
ret
mull
icebp
ss
push
mov
mov
out
mov
icebp
mov
cmp
sarb
xchg
push
xor
pushf
add
negl
and
iret
jns
adc
inc
jns
and
repnz
aaa
xchg
lret
push
movsl
test
add
stos
xchg
lock
pushf
test
pop
mov
rorl
addr16
in
loope
or
popf
xchg
scas
lds
cwtl
cmpsl
aas
imul
scas
sar
and
out
mov
shl
pop
mov
fnstcw
bound
into
mov
add
cmp
mov
cmpsb
in
or
jle
lods
mov
inc
adcl
pop
add
inc
mov
adc
cmp
cmc
cmpsb
daa
nop
out
mov
mov
pop
shr
nop
mov
pop
xchg
mov
sbb
mov
add
dec
ss
lret
scas
fmuls
fld
xchg
cwtl
jmp
imul
pusha
shl
into
pop
mov
aaa
cmpsl
stc
test
jo
pop
cmp
daa
mov
pop
add
pop
push
in
out
outsl
daa
inc
xor
lcall
or
repz
scas
mov
dec
lcall
loope
sub
adcl
imul
ja
mov
mov
pop
add
inc
xchg
lahf
pushf
loope
stos
insl
jbe
inc
and
clc
outsl
loope
mov
insb
mov
notb
adc
mov
dec
les
loop
ja
sbbl
incb
mov
rcl
les
mov
or
in
cli
cs
push
add
mov
lahf
pop
outsb
mov
jnp
test
mov
mov
jl
pop
mov
lret
repnz
out
push
in
clc
shrl
stos
dec
das
pop
subb
push
add
mov
sbb
pop
sub
insl
out
cmp
scas
mov
dec
inc
jg
decb
repz
mov
nop
jmp
int3
sbb
or
bound
pop
es
out
pop
stos
xor
push
cmp
xor
imul
ret
and
push
imul
test
sub
or
insl
cmp
movb
inc
or
xor
push
es
pop
jle
mov
adc
xchg
pop
sahf
add
sahf
imul
fcomp
xchg
fcompl
xor
xorl
inc
bound
jno
pop
aaa
stos
imul
xor
cwtl
add
out
fnsave
push
ljmp
cmpsb
cltd
rcll
fsubs
inc
dec
nop
mov
mov
outsl
inc
nop
xlat
pmullw
lds
mov
cmpb
xchg
adc
mov
in
int
aad
and
sub
jne
sbb
adc
pop
and
jg
mov
lock
stc
shl
xor
jp
es
loop
aam
and
mov
outsb
pop
dec
fcmovb
dec
in
rcrl
test
mov
idivl
outsb
xchg
push
popl
cmp
imul
in
ja
dec
xchg
sub
movsb
mov
xchg
es
icebp
xor
sub
sbbl
push
xchg
push
lret
cmp
and
cmc
push
ficoms
adc
lcall
dec
sub
bound
dec
hlt
jbe
fldcw
aam
cmp
cmp
push
and
push
shl
addb
mov
lds
or
push
inc
out
aaa
sub
push
std
sahf
and
cltd
mov
push
out
test
mov
or
pusha
pop
push
mov
in
test
and
mov
test
or
sub
mov
inc
aaa
mov
and
fstps
pop
test
movb
xchg
outsb
scas
adc
rorl
insb
inc
int
push
inc
ja
loopne
mov
sbb
xchg
cmpsb
add
dec
jne
ja
push
test
mov
ret
fisubrs
push
mov
ss
push
inc
or
push
loopne
xchg
pop
mov
or
lea
dec
xchg
sbb
push
fldt
out
das
pop
sbb
shrb
insl
stos
je
cmp
xor
cmpxchg
inc
inc
js
sbb
push
call
pop
into
adc
les
jge
sbb
sub
xchg
out
gs
jl
jl,pn
test
sub
adc
nop
xchg
xchg
and
addr16
and
xor
and
in
sub
fisubs
lcall
out
iret
scas
lock
js
scas
push
cltd
mov
lds
jno
jo
aaa
adc
add
push
in
hlt
xor
sub
xor
xchg
pusha
pop
or
int3
lcall
push
call
lcall
and
or
iret
ljmp
das
sub
ljmp
mov
loopne
in
or
inc
aaa
in
adc
bound
xchg
jl
and
xchg
lcall
inc
rcll
js
cmp
movsl
cmp
out
add
adc
orl
cmp
or
mov
dec
dec
jnp
outsl
jle
scas
mov
call
mov
pop
sbb
sarb
mov
mov
cmpsl
nop
aam
cmc
lock
cmp
push
or
insb
mov
xchg
iret
and
mov
sbb
inc
add
xor
imul
adc
ret
sarb
int
fs
sbb
push
ss
jp
popf
mov
aam
pop
xor
mov
xor
adc
push
mov
jae
jge
test
lret
out
push
dec
pop
dec
mov
fcompl
outsl
fnsave
cwtl
xchg
lds
jge
mov
pushl
cmp
mov
or
mov
jecxz
inc
ficoml
imul
add
push
enter
int
jns
adc
or
adcl
shrl
loope
xchg
inc
pop
adc
clc
iret
jae
jne
and
popf
or
mov
and
in
xor
enter
fistps
aad
in
add
shlb
push
add
rorb
popa
pushf
stos
sbb
jns,pt
ja
mov
daa
push
mov
pop
addl
push
xor
sub
dec
xchg
aam
sti
aas
add
pop
fistl
add
mov
loope
imul
pop
pop
dec
adc
xor
popf
add
adc
movsb
out
jo
mov
pop
or
lahf
xchg
adc
iret
jne
xchg
lret
xor
adc
cmpsb
lock
sub
fcoms
sbb
push
jae
fldt
mov
loop
xchg
jle
rcll
fldl
insb
mov
mov
orl
int3
inc
imul
int
dec
movsb
ds
pop
into
scas
add
outsl
popf
fsubrs
jmp
js
int
lea
es
push
cmp
inc
pop
divl
out
jp
mov
push
inc
add
and
and
sub
in
jb
or
xchg
xchg
pop
mov
jp
in
adc
ja
fwait
inc
loopne
fdivs
mov
enter
jae
adc
dec
shrb
jecxz
leave
pop
xor
add
push
cli
scas
lods
lahf
into
mov
insb
inc
addr16
or
popa
rolb
cmp
scas
jae
mov
jmp
mov
and
push
lahf
adc
je
mov
rcll
push
and
mov
mov
mov
dec
push
aas
mov
mov
js
jle
lret
xor
sbb
cmpsl
lds
pop
mov
and
js
mov
mov
mull
dec
push
xchg
mov
js
lods
out
movsb
insl
push
movsb
jo
outsl
shlb
jp
inc
data16
adc
je
mov
xchg
fsubl
out
imul
jecxz
loop
stos
aas
hlt
mov
jmp
cwtl
icebp
pop
in
call
inc
dec
rorb
movsb
pop
push
fbld
fistl
mov
fsubrp
pop
in
and
out
cmc
add
cltd
cmpsl
dec
pop
and
or
sbb
repz
push
sahf
xor
mov
add
lcall
jno
push
lods
inc
popa
jp
cwtl
hlt
adc
out
ljmp
mov
inc
neg
loop
push
fadd
testb
jmp
xchg
out
ss
xlat
or
xorb
xor
inc
xorl
pusha
fwait
ja
ffreep
pusha
push
jge
or
inc
dec
jmp
sbb
mov
xchg
int3
lods
hlt
xchg
mov
add
das
and
jb
pop
pop
dec
sbb
jns
pop
iret
jnp
stc
add
adc
pusha
lcall
std
mov
outsb
xlat
sarl
filds
daa
cmp
mov
mov
leave
outsb
dec
adc
pop
bound
sub
or
mov
xor
mov
repz
test
in
arpl
mov
jmp
pop
cmpl
pop
add
lds
mov
pop
call
jo
cli
frstor
pop
cmp
lock
jecxz
cmp
filds
add
shrb
iret
nop
inc
xor
out
aas
nop
push
push
jecxz
mov
inc
jecxz
adc
xor
dec
cwtl
stos
loop
bound
or
jmp
xchg
add
add
cmp
and
jmp
mov
mov
inc
mov
fists
dec
mov
fstpt
popa
jg
es
movsb
sbb
stos
pop
inc
mov
into
out
mov
mov
or
add
push
xchg
aam
pop
xor
clc
push
dec
addps
int
xor
das
adc
test
sbb
fs
lea
adc
fstps
loopne
adc
ljmp
sbb
push
mov
mov
or
fsub
inc
repz
in
mov
add
jnp
sub
pop
dec
xor
jo
and
or
out
dec
movsl
scas
push
arpl
aas
shrl
sahf
in
movsl
lods
mov
adc
cld
mov
inc
leave
mov
adc
mov
loope
jo
jns
xchg
int3
pop
mov
or
inc
lea
xchg
xchg
mov
jge
and
out
xor
push
lcall
adc
inc
sbb
leave
movsl
fcompl
lock
pop
nop
icebp
sub
shr
dec
pmuludq
and
bound
cmpsl
jmp
jno
addr16
pushf
fldenv
mov
ds
jne
dec
mov
push
mov
rol
mov
cli
jle
and
pop
in
push
inc
adc
mov
mov
mov
xchg
pop
fucomi
mov
ret
mull
mov
clc
sub
pop
lods
jnp
adc
out
jl
cmp
shrl
jno
rorl
mov
push
sahf
cmp
cmp
push
ret
ret
cmc
dec
lret
or
and
inc
push
adc
scas
mov
out
into
mov
sbb
ret
and
psllw
xor
jmp
mov
push
mov
jg
loopne
adc
and
ljmp
mov
ds
lock
push
xchg
xchg
out
mov
rcrl
xlat
es
aas
xchg
adc
mov
ds
mov
lock
stos
loopne
cwtl
shl
and
das
daa
or
jecxz
fprem1
inc
adc
pop
pop
das
popf
shl
xor
cmc
xchg
es
and
sub
out
pop
mov
pushf
xlat
lods
lea
inc
jle
adc
insb
jno
test
adc
nop
dec
lahf
pop
jno
cmpsb
jl
xchg
movsl
dec
inc
mov
push
daa
or
jp
dec
xor
adc
cltd
test
adc
call
jne
xor
xchg
and
xchg
mov
pop
adc
pop
mov
cmp
dec
xchg
xor
push
xchg
mov
pop
cmp
xlat
xchg
or
gs
int3
sbb
cmp
and
dec
or
adc
xchg
cwtl
cmp
cmc
dec
cs
pushf
jmp
mov
lods
inc
or
sbb
gs
adc
mov
hlt
in
test
and
popa
sub
sub
loopne
xor
or
arpl
subl
xchg
pop
cmp
into
iret
push
and
call
scas
cmc
out
data16
dec
iret
imul
mov
jo
mov
repnz
loop
mov
idiv
rcr
dec
xchg
mov
js
dec
or
cmp
ds
or
fdivrs
xor
ja
imul
jmp
scas
lods
dec
jb
pop
inc
lods
cwtl
mov
lret
repz
push
fdivs
fsubs
mov
mov
inc
mov
cs
lea
jo
xchg
xchg
jno
inc
out
fcmovne
mov
dec
xor
sahf
imulb
test
jle
pop
adc
aaa
and
aad
mov
mov
cltd
imul
mov
pop
pop
xlat
je
jecxz
add
fidivl
rcll
or
test
mov
jno
mov
xor
pusha
int3
mov
sti
lret
stos
cli
test
and
scas
test
in
fninit
imul
xchg
shll
and
lods
nop
repnz
pushf
test
jno
jo
and
scas
int3
addr16
mov
mov
xchg
pop
fisubrl
adc
data16
mov
jnp
test
cmp
outsl
inc
in
cmp
mov
bound
xchg
add
test
dec
outsb
inc
leave
add
and
iret
mov
jno
shrl
stc
fcoms
inc
les
nop
sbb
mov
cmpxchg
jo
js
mov
mov
or
mov
sub
dec
jg
popf
xlat
test
pushf
movsb
push
call
shlb
sub
int3
dec
or
gs
xlat
clc
jbe
xlat
gs
dec
add
imul
push
jbe
mov
or
xor
fldt
pop
fbstp
lret
dec
jecxz
idivb
call
ret
fdivrl
xchg
pop
jge
outsl
rcl
inc
rorb
jmp
dec
xor
daa
adc
lahf
sarl
bound
fwait
inc
add
xchg
push
test
mov
fstps
hlt
dec
loope
jecxz
mov
push
adc
and
lods
push
sbb
rolb
stos
xchg
pop
sub
bound
push
stos
stc
mov
xor
add
in
and
xorl
subb
sbb
sub
cld
sub
inc
jae,pt
scas
lahf
outsb
xchg
in
xchg
pop
dec
andl
xchg
mov
jae
and
push
sbb
rclb
aam
mov
orl
inc
fstl
sarl
jbe
fldl
or
cmp
inc
sbb
cmpsb
and
add
mov
lcall
lret
xchg
mov
mov
xchg
mov
cmp
jle
cmpsl
cli
mov
dec
std
pop
outsl
mov
push
sbb
adc
mov
xchg
movsb
sub
loopne
adcb
pop
dec
pusha
test
outsl
sub
repnz
arpl
nop
das
push
daa
imul
push
adc
sahf
fildll
push
sbb
pop
bound
xchg
dec
icebp
repz
int
cmp
xchg
push
sbb
pop
imul
dec
mov
rcrb
movl
and
out
pop
jl
mov
lret
fdivrs
out
add
flds
xchg
stos
test
and
jl
cmp
xchg
mov
xchg
gs
daa
xor
std
cli
xchg
jno
imul
test
test
lds
jge
push
test
cmp
mov
mov
pop
add
sub
leave
mov
hlt
movsb
movsb
lahf
dec
in
pusha
mov
push
jecxz
push
ret
mov
push
and
lret
inc
out
test
enter
xlat
filds
getsec
into
movntq
add
iret
mov
pop
out
xor
fs
or
xchg
jecxz
out
sbb
cmp
imul
test
dec
insb
addr16
push
adc
fdivl
cmpsl
rcrl
stc
adc
xor
xor
int3
test
fwait
clc
or
cmp
jle
int3
cld
imul
mov
aad
fdivs
rorl
fisubl
add
outsb
clc
mov
jge
jno
inc
int3
mov
fwait
mov
icebp
dec
xor
mov
add
jne
inc
inc
mov
imul
xchg
std
xchg
add
add
xchg
push
inc
das
mov
das
jbe
in
mov
sub
adc
jmp
and
inc
cmp
ret
add
mov
fisubrs
sbb
sub
or
inc
je
pop
lods
mulb
fcmove
xchg
push
orl
or
into
ds
dec
jmp
push
mov
sub
push
movsl
subb
xchg
sbb
inc
test
add
jne
or
aas
frstor
sub
jbe
in
xor
aaa
push
add
push
add
mov
test
aam
pop
and
stos
mov
push
mov
adc
and
scas
cli
xor
incb
and
addr16
scas
popf
mov
xlat
stos
in
rol
xor
mov
cmpsb
out
pop
iret
adc
push
sti
sub
lret
ret
addr16
or
pushf
sahf
adc
jno
add
or
dec
jg
lcall
mov
nop
xlat
mov
xchg
leave
mov
iret
je
nop
push
incl
mov
jbe
xor
xchg
cmp
mov
dec
inc
xlat
data16
push
inc
mov
dec
dec
add
pop
out
mov
mov
repz
jb
mov
leave
ja
mov
or
mov
mov
out
push
das
scas
aas
out
clc
mov
insb
jle
leave
roll
xor
or
stc
mov
cmp
lds
pop
lea
xor
sbb
ret
jne
dec
test
lahf
add
hlt
jp
jmp
cmp
xchg
testl
bound
fdivp
pop
push
jno
loop
sub
cltd
andb
ret
dec
lcall
cmc
fldl
in
aad
pop
push
cmp
xor
sbb
sub
pop
shll
iret
push
dec
out
stos
xor
nop
es
mov
mov
dec
dec
xor
aas
out
enter
adc
and
leave
push
jle
jp
pop
repnz
add
push
cmp
sub
jo
repnz
add
das
scas
ss
jg
push
rcrb
into
loop
push
in
pop
repnz
cmp
iret
pop
ret
jbe
push
sub
mov
xchg
dec
shl
sti
mov
popf
std
xchg
and
and
adc
enter
je
fucom
fidivl
xchg
lret
paddusb
roll
mov
int3
xchg
inc
loopne
cmp
gs
cmp
xor
imul
fwait
loopne
sub
pop
jge
ror
adc
push
cmpsl
sbbl
mov
mov
repnz
adc
jge
lods
dec
sahf
push
sub
les
and
arpl
jbe
test
lret
jno
jb
mov
repz
mov
insl
leave
inc
lea
adcb
sbb
ljmp
adc
movsl
lock
test
movsb
sete
lods
mov
outsl
or
rcr
sub
cld
push
lock
sbb
sbb
fisttpl
xchg
xchg
sub
jbe
or
inc
adc
insb
jb
roll
scas
int3
xor
out
adc
add
dec
push
mov
mov
and
sub
je
jno
pop
jo
bound
inc
xor
pop
clc
or
rol
jge
xorb
test
getsec
pop
add
push
add
ret
test
mov
iret
sub
xor
fs
dec
lods
in
insb
cmpsl
push
out
inc
mov
js
test
mov
dec
int
aad
and
ret
imul
cmc
decl
lock
adc
pop
push
add
idiv
mov
ss
bound
push
subl
mov
iret
cmpsl
es
ffreep
lcall
mov
push
in
rorl
loop
jae
jle
cmpsl
sbb
push
mull
call
sbb
sub
add
and
pop
rcr
inc
mov
add
dec
cmp
fidivs
mov
pop
cmp
popa
and
out
xlat
and
out
jnp
xchg
out
mov
roll
and
cld
gs
ljmp
hlt
xor
xchg
mov
cmp
int
loopne
adc
sbb
xchg
mov
nop
adc
aas
xor
arpl
mov
mov
es
ljmp
pushf
mov
push
and
push
sub
inc
pop
movsl
ror
lock
test
mov
adc
lea
sub
sub
outsl
aam
call
lock
test
pop
and
xlat
cmpsl
inc
adc
or
out
add
cmp
or
and
adc
xor
pop
cld
imul
cmp
or
mov
mov
dec
lods
pop
xlat
frstor
push
loop
lea
sub
mov
xchg
jl
inc
cmpsb
js
stc
fwait
sbb
xor
arpl
pop
aaa
sub
out
mov
dec
repz
and
ja
movsl
dec
repz
push
xchg
mov
fcom
sbb
push
push
xchg
xchg
cmp
lods
xchg
ds
add
insb
data16
and
mov
fcompl
test
jge
mov
xor
mov
jle
pop
stc
cmp
xor
sub
das
xor
sti
add
cmp
xchg
jge
jns
sbb
add
arpl
lcall
dec
xchg
sbb
data16
les
xor
loopne
lods
das
jo
bound
clc
ljmp
jnp
shrb
cmp
cltd
xchg
aad
xor
mov
inc
mov
mov
add
jne
mov
adc
mov
mov
imul
push
ja
sti
stc
add
fdivrs
pusha
js
addr16
pop
xor
in
push
xchg
addr16
stos
mov
xchg
jb
jae
adc
dec
cmp
enter
push
add
pop
dec
repz
jl
mov
in
add
divb
cmpsb
push
stc
push
mov
fsubrs
xchg
or
ja
mov
call
xor
push
in
inc
mov
pop
fists
and
std
dec
in
add
add
stos
leave
cwtl
cmp
adc
jecxz
fists
int3
jp
lock
arpl
lahf
int3
ret
dec
jge
lahf
xor
jae
cltd
fwait
jbe
pop
adc
mov
sbb
or
scas
push
jo
jl
and
ljmp
mull
cmp
or
lcall
push
cmpsl
popf
leave
sbb
jo
cmp
xor
in
cmp
in
adc
lea
icebp
push
inc
test
sbb
daa
jns
lret
testb
sbb
rdtsc
or
cmpxchg
repz
repz
jnp
lcall
mov
cmpsb
lret
xchg
dec
outsb
scas
incb
add
push
fsubs
insb
pushf
pop
jp
rclb
jle
stos
sbb
pop
sbb
addr16
sbb
stos
cmp
add
nop
mov
dec
adc
sbb
xchg
ds
insb
cmp
pop
mov
adc
popf
movsb
out
push
in
popf
mov
adc
loop
negl
data16
sahf
into
jnp
ret
stos
pop
xchg
sub
leave
bnd
stc
mov
mov
cltd
mov
xor
xchg
push
jle
lret
dec
hlt
mov
mov
xchg
sbb
into
mov
cmpsl
mov
mov
pop
sbb
mov
pushf
lods
insl
add
das
xchg
mov
lea
sub
add
pop
fcoms
rcr
pop
xor
cwtl
ret
dec
sbb
lock
xor
mov
repnz
mull
sahf
mov
dec
sub
cmpsb
xor
sbb
cmp
inc
pusha
sar
pop
std
mov
scas
xchg
cmp
xchg
aas
xor
jge
sahf
popf
in
sub
enter
loope
cmp
into
pop
jnp
imul
rcrl
cmp
loopne
inc
leave
sbb
in
mov
cltd
mov
push
je
fdivr
or
cmp
or
cld
cmpsl
add
cmp
jge
out
lahf
ja
test
mov
cmc
cmc
mov
ds
xchg
xchg
pop
dec
shll
xor
push
loopne
stos
inc
and
js
adc
pop
and
lock
andl
ret
adc
call
cltd
dec
mov
nop
jg
cmp
jecxz
jp
mov
xchg
addr16
adc
mov
les
xchg
aad
out
int
stos
dec
stc
fs
icebp
out
pop
cmpl
fsubr
lock
or
mov
daa
into
in
cmp
dec
jne
icebp
sbb
test
xor
lods
add
insb
notl
adc
cwtl
lods
subl
lret
add
dec
mov
call
addb
addl
pop
repnz
aaa
xchg
xor
jae
push
stos
lret
xchg
roll
mov
lock
sahf
pop
mov
xchg
in
out
imul
xor
pop
mov
dec
dec
rcrl
loope
in
imul
divb
mov
adcb
lock
xchg
fwait
xchg
push
leave
sub
cmp
push
inc
or
popa
mov
out
or
mov
imul
rorl
and
mov
loopne
xchg
or
sbbl
cmp
shl
arpl
xchg
in
sub
mov
rcrb
fdivrl
pop
std
push
insl
sub
sub
lods
xchg
subb
jmp
mull
and
or
mov
and
mov
sub
repnz
sbb
lods
insl
push
addr16
sbb
repz
push
out
ss
adc
inc
lcall
cmp
out
jecxz
sbb
cmp
js
sbb
and
push
inc
xchg
pop
mov
sti
aas
mov
xor
inc
inc
xchg
scas
stos
dec
inc
xor
outsl
adc
fadds
cmp
push
aad
xchg
pop
mov
push
adc
imull
out
pop
mov
xchg
or
inc
js
mov
movsb
xchg
push
stos
rdtsc
mov
sbbl
xor
or
bound
sbb
xlat
adc
cmpl
xorb
push
xor
imul
lahf
sub
or
or
faddl
fildl
addr16
popa
fimull
sub
mov
xor
mov
sub
or
xor
mov
jb,pn
inc
xchg
cmp
cmp
xor
lods
pop
nop
test
adc
dec
xchg
jb
inc
cmp
es
ror
rorb
mov
push
pop
adc
sbb
lahf
inc
hlt
inc
aad
arpl
mov
rorl
adc
jno
xchg
pop
inc
int
ja
pop
cld
dec
lret
lods
jecxz
pop
adc
jg
sti
sbb
sbb
mov
adc
jb
in
xor
nop
sbbb
xor
add
xor
insl
add
fdivl
movsl
adc
xorl
or
xchg
ficomps
lods
xchg
and
mov
clc
lods
shlb
pop
sbbl
outsb
fdivrs
xchg
hlt
and
pop
sub
rolb
mov
xchg
frstor
or
mov
sub
jp
inc
or
adc
fs
cmp
jge
xor
ds
sbb
and
arpl
sub
jmp
loop
sub
xor
je
or
popf
dec
mov
mov
mov
fldenv
test
inc
jne
xchg
xor
pop
or
out
ret
jo
mov
xchg
dec
ret
and
fisubrs
movsl
lds
lea
adc
cli
or
add
mov
push
or
inc
out
and
push
les
sub
ret
mov
das
mov
dec
mov
scas
sbb
rorl
dec
add
xor
test
lock
test
inc
xchg
mov
ret
in
mov
pop
xor
out
lahf
push
dec
and
jo
jle
xor
mov
lods
dec
inc
xchg
mov
leave
stc
jmp
or
int3
in
mov
ds
sub
jg
cltd
push
pop
sbb
cmp
or
addr16
stos
sub
and
mov
bound
pop
iret
imul
pop
add
insl
out
in
jg
xchg
fmuls
inc
fimuls
pop
mov
dec
fdivrl
outsl
sub
mov
mov
jo
dec
dec
mov
sti
lret
add
and
insb
in
jne
pop
inc
mov
and
leave
aaa
fstpl
pop
inc
imul
insb
mov
test
addb
sub
lods
into
mulb
sti
out
int3
pop
lahf
inc
into
setns
adc
pop
push
adc
adc
sub
cli
cld
repz
js
fstpl
sbb
out
outsl
jcxz
sub
jge
mov
fldcw
out
cltd
test
mov
cwtl
jmp
xor
push
mov
test
pop
mov
mov
sarb
mov
lea
inc
or
shlb
xchg
fdivs
mov
mov
mov
mov
arpl
mov
mov
pusha
pop
add
push
sbb
fists
ret
inc
jns
mov
inc
pop
das
push
xchg
rcrl
mov
xchg
mov
xchg
call
jecxz
adc
negl
gs
xchg
xchg
movsl
in
pop
mov
push
cmp
or
mov
adc
ss
mov
es
insl
push
repz
dec
cmp
sub
add
loope
jmp
stos
sbb
or
sbb
jmp
into
jmp
sahf
scas
inc
ljmp
jle
jle
std
out
mov
in
push
fnsave
mov
pop
pushl
jne
fildl
negb
dec
sub
in
mov
xor
neg
jae
dec
hlt
xchg
inc
into
jae
lea
stos
xor
cmpsl
sub
adc
repnz
pop
xor
hlt
imulb
jne
push
lods
in
cmp
lea
xchg
jg
sub
and
iret
or
pop
jnp
adc
sbb
das
jae
inc
out
lahf
mov
bound
dec
xchg
push
jbe
hlt
jmp
mov
nop
adc
jns
aaa
in
mov
sub
xchg
push
je
hlt
pop
pop
js
cld
sbb
faddl
stos
xor
push
pop
into
enter
out
int
repz
jmp
xchg
xchg
sbb
mov
sub
sub
jb
dec
lock
fsts
pop
gs
lcall
das
adc
xchg
mov
xor
dec
jb
cmpsl
mov
dec
adc
xor
ret
cmpsl
je
push
cmpsl
add
xchg
mov
orl
jb
clc
xchg
add
add
push
jecxz
or
aam
mov
into
adc
xchg
sub
or
sub
mov
fistpl
lods
xor
mov
vmread
sub
or
aaa
jl
js
iret
dec
shrl
in
cmp
ja
inc
inc
inc
mov
mov
int3
test
stos
pop
pop
mov
out
cmp
mov
push
xchg
mov
into
cmpsb
fistl
cmpl
imul
xor
xchg
or
add
cmc
cmpsb
scas
inc
rclb
lahf
cmp
push
add
jmp
ljmpw
leave
jg
inc
push
out
dec
test
imul
mov
jae
xor
cmpsl
js
pop
mov
ret
mov
xor
sub
mov
sbb
jno
and
jmp
add
mov
stos
sbb
roll
hlt
aad
popf
ja
mov
movsl
jg
lahf
pop
stos
idivl
ja
mov
fs
popa
in
hlt
movsl
xlat
dec
inc
push
call
int
dec
clc
fstpt
xor
cmc
inc
sbb
dec
mov
push
jmp
add
stos
xchg
int3
lahf
repz
mov
dec
hlt
lret
push
xor
in
dec
xor
adc
or
dec
test
mov
gs
xchg
or
xor
sbb
nop
xor
mov
xchg
dec
insb
jb
adc
ret
sub
sarl
out
std
push
add
ficompl
repz
xchg
loope
jg
and
icebp
push
fildl
or
into
push
xor
xchg
pop
aas
inc
fmull
inc
mov
inc
mov
push
pop
xor
xor
insb
inc
inc
xlat
rorl
pushw
xchg
add
adc
sbbl
xchg
ret
cmc
mov
cmpsl
pop
in
xchg
int
xchg
sbb
sbb
xor
lahf
lock
mov
rcl
and
mov
mov
sbb
push
add
insl
sti
rclb
movsb
xchg
ret
or
std
fsubrl
adc
movsl
push
js
sub
mov
test
sub
sar
inc
clc
in
fstps
dec
mov
push
lret
imul
xchg
loope
adcb
lds
and
repnz
mov
cli
pop
inc
xchg
push
pushf
jl
das
xor
call
pop
xor
cld
aas
iret
dec
adc
test
and
push
inc
inc
leave
mov
sub
xchg
insb
cmc
sbb
ficoml
pusha
or
pop
xchg
sahf
in
pop
inc
fs
filds
fadds
or
cmp
hlt
xor
gs
xchg
stc
jge
adc
pop
lahf
aaa
daa
cmp
or
enter
pop
in
inc
out
pop
xor
mov
and
mov
lods
arpl
adc
imul
std
insl
das
xchg
add
in
sbb
xor
les
sahf
cmp
jo
fcoml
push
mov
sbb
clc
sbb
jecxz
lods
mov
fisubrs
jecxz
inc
dec
hlt
lods
pop
clc
push
inc
roll
test
mov
add
cli
lahf
add
clc
push
pop
test
int
push
insl
sub
jmp
inc
push
stos
xchg
sub
mov
mov
clc
inc
ret
mov
sti
xor
push
mov
nop
ljmp
mov
mov
fdivrs
or
dec
les
stc
jl
cmc
xor
jb
fdivr
neg
push
xchg
lods
pop
add
lods
enter
inc
add
mov
inc
call
popa
iret
push
int
fstl
stos
enter
in
setno
cmpsl
ljmp
call
pop
cli
movsb
mov
fidivrs
inc
sbb
es
sub
xorb
xor
inc
int
jecxz
loop
jmp
int
ret
push
xor
lods
cmp
mov
mov
push
and
movl
aaa
jp
daa
add
std
push
out
repnz
xor
fwait
aam
ljmp
xchg
lret
fists
pop
xor
dec
add
jno
mov
pushf
sbbb
cld
and
and
jle
push
std
cmp
test
mov
repz
loopne
arpl
sbb
movsl
mov
push
clc
jo
push
out
xchg
gs
mov
daa
pop
clc
in
jae
dec
jae
mov
push
xor
jge
and
test
in
lcall
gs
xor
dec
cmpb
push
and
test
fsubp
add
sub
call
xor
push
xchg
inc
jnp
imull
outsl
rorl
xor
je
ss
gs
sbb
and
adc
jo
dec
cmp
mov
test
mov
push
repz
nop
jb
add
jmp
in
mov
jnp
add
pop
sub
inc
push
cmp
insl
call
fimuls
bound
mov
push
add
jne
sub
movntps
mov
inc
ja
xchg
shl
into
mov
jle
or
or
rol
mov
xchg
adc
inc
shr
hlt
jl
adc
sti
adc
adc
repz
jp
mov
cmp
shlb
mov
xchg
iret
ret
add
xor
stos
cmp
cmpsb
push
ljmp
inc
lcall
scas
out
sbb
dec
hlt
dec
sbb
jns
fdivrl
test
dec
fidivs
pop
sbbb
and
jb
xchg
out
test
fcoml
xchg
add
push
xorl
xchg
mov
outsl
arpl
xor
adc
sbb
outsl
pushw
ret
sbb
jae
pop
sbb
xchg
pop
xchg
sub
inc
std
enter
push
sub
popa
int
test
lock
ror
and
cwtl
pop
sbb
and
pop
jg
jnp
scas
and
lock
cmp
out
and
icebp
ret
sbb
pop
mov
lret
insb
sbb
xor
daa
loopne
fistps
rorl
xor
in
movsl
mulb
sub
or
push
rclb
cli
xchg
stc
inc
jg
sub
push
mov
adc
mov
jno
lods
add
insl
jg
call
push
pop
lea
jge
scas
ss
ljmp
jle
fcmovu
sbb
cltd
out
sbb
jecxz
shll
push
rcll
cmp
push
out
or
hlt
int3
xor
dec
cltd
jb
testl
call
loopne
dec
adc
pusha
or
bound
leave
sub
sub
stos
dec
and
lret
add
dec
mov
dec
adc
or
in
movsbl
shrb
adc
mov
cli
jmp
inc
rcrb
rolb
pop
jp
cli
or
push
cmc
out
data16
cmc
les
arpl
mov
pop
je
cmp
ja
clc
repz
dec
imul
inc
mov
jmp
xchg
lcall
pop
sub
push
inc
sahf
lea
ss
jmp
jne
jns
in
icebp
pop
and
je
mov
push
dec
fwait
hlt
or
addr16
xchg
mov
lock
sbb
lret
popf
lahf
lret
fwait
loop
inc
cltd
and
xchg
cmpsl
aaa
fimuls
pop
or
cmp
push
cmc
mov
lea
aad
and
daa
push
daa
xchg
xchg
push
imul
inc
fbld
repnz
jmp
clc
arpl
fwait
inc
xchg
les
sbb
mov
stos
ss
push
mov
mov
js
mov
add
lock
pop
mov
inc
add
insl
mov
aad
pop
into
jo
iret
dec
ljmp
fcompp
fildll
loopne
jle
stos
xchg
lcall
mov
pop
stc
jecxz
adcl
sub
cmp
mov
imul
mov
int
push
loope
cmovns
and
mov
and
leave
je
ret
add
lock
mov
movsl
test
dec
pop
test
ret
xchg
out
xor
inc
dec
loopne
and
aam
push
in
dec
mov
xor
sbb
mov
xor
mov
enter
cmpsl
leave
int
ljmp
cmp
rolb
or
dec
inc
or
xchg
das
pop
cmp
repz
push
or
mov
int3
popf
mov
aad
addr16
jb
js
sub
adc
pusha
mov
mov
insb
test
push
rorl
gs
lcall
mov
pop
or
jl
sub
or
in
dec
jl
imul
dec
pop
lock
mov
das
inc
test
je
movsl
sarb
push
cltd
and
or
fisttps
int
push
sar
mov
movsb
test
pop
in
repz
pop
push
or
sub
or
fcoml
push
dec
fildll
xchg
dec
stos
inc
pop
xlat
cmp
xchg
pop
push
add
clc
pop
aad
ds
and
push
add
lods
jno
popa
test
add
cmp
and
and
mov
push
stos
mov
xabort
gs
pop
mov
daa
cld
pushl
popf
fwait
lret
lret
inc
inc
es
cmp
xchg
dec
ret
xor
pop
adcb
jecxz
mov
mov
negl
ffreep
in
sbb
call
lea
cmp
movsb
fists
movsb
stc
aaa
push
ds
fstpt
out
mulb
lods
dec
mov
xor
std
pop
jp
mov
fwait
and
scas
aam
stos
aaa
and
pop
ret
and
sbb
inc
sbb
inc
insl
and
fisubs
fsubl
fldcw
sbb
lods
aaa
aas
xchg
bound
dec
jmp
arpl
inc
sub
repz
push
pop
into
adcl
and
inc
jnp
clc
fsubrp
js
outsb
jmp
xor
js
sbb
adc
test
push
adc
cltd
adc
dec
push
mov
not
push
dec
sub
fisubrl
shll
lret
jb
and
push
outsb
imul
sahf
inc
pushf
call
jo
mov
out
and
insb
fcomps
leave
movsl
sbb
dec
pop
movsb
in
push
icebp
dec
into
lds
cld
add
pop
push
and
jmp
adc
adc
pushf
add
nop
repz
fcomps
inc
mov
mov
divb
inc
inc
mov
mov
aad
mov
sbb
pop
pop
xchg
mov
ds
leave
daa
sahf
in
dec
arpl
and
jno
and
dec
ficomps
cli
cltd
stos
inc
fadd
loop
xor
test
jg
jno
xchg
into
adc
push
add
pushf
dec
push
gs
cs
sbb
or
hlt
cmp
cmp
inc
push
xchg
xchg
jg
test
mov
add
sub
mov
cmpsl
sbb
decl
imul
clc
xor
sub
pop
out
cmp
adc
mov
or
imul
pushf
xlat
lds
or
sub
push
push
xlat
jle
aad
inc
addb
andl
mov
sub
or
cs
jae
rcrb
in
ljmp
data16
sbbl
pop
in
in
mov
xchg
or
xchg
or
xor
push
pop
cmp
das
std
icebp
mov
ljmp
outsb
mov
cmp
mov
jb
pop
daa
xor
popa
mov
in
incl
je
jno
mov
sar
sahf
jbe
clc
outsb
dec
dec
cwtl
cmovno
mov
or
push
xor
or
arpl
and
lcall
mov
or
in
adc
scas
jb
shrl
cltd
aaa
adcl
xchg
pop
add
cld
cmpsl
xor
sbb
xchg
fs
dec
into
lcall
sahf
movsb
mov
fsub
fcomps
divl
jecxz
jmp
lods
mov
inc
dec
mov
mov
lret
push
pop
shrl
pushf
xor
gs
and
and
cs
xchg
ljmp
sbb
mov
lds
or
cmp
jb
cmp
inc
scas
popa
out
mov
ja
xor
jmp
fsubr
push
sub
xchg
pusha
mov
push
adcl
xchg
mov
sub
imul
fmul
dec
roll
shrb
lret
push
sahf
sub
sub
cs
pop
fiaddl
push
pushf
insl
aaa
jge
push
popa
sub
scas
stc
out
mov
push
in
out
xor
pop
fldt
shrl
xor
daa
or
inc
pop
and
ljmp
dec
push
adc
in
adc
dec
lds
shr
pop
outsl
add
clc
ljmp
pop
jl
mov
es
fdiv
je
push
adc
jge
sub
cmp
jl
in
xchg
icebp
mov
xchg
and
aam
add
mov
pop
jns
stc
imul
int3
and
xor
inc
loop
wbinvd
mov
dec
cmc
cltd
cmp
sub
test
adc
dec
int
and
cmp
cmc
xorb
cltd
mov
or
xor
in
mov
xchg
popf
lcall
mov
add
popa
int
mov
sub
xor
mov
stos
shll
cmp
lock
ljmp
sub
nop
push
lret
inc
fidivrs
pop
nop
in
jecxz
fwait
clc
and
stos
in
imul
enter
pop
fcoml
mov
jp
dec
cmpsb
mov
xchg
xor
addb
mov
mov
fwait
inc
popf
jp
inc
adc
es
shl
loopne
add
lock
lcall
adc
or
xchg
cmc
push
cmp
clc
adc
scas
dec
xchg
repnz
ret
into
jnp
daa
imull
andb
dec
sbb
mov
sub
cmpsb
fdiv
push
jge
sbb
add
aad
scas
push
push
mov
dec
imull
mov
fld
sahf
mov
aad
mov
data16
clc
hlt
sahf
mov
push
xor
mov
xchg
mov
int3
add
cwtl
mov
sub
cmp
sbb
fldcw
ds
dec
scas
sbb
or
lods
out
fmull
and
pop
call
mov
lret
or
mov
adc
imul
or
sub
mov
pop
xor
mov
and
fistl
test
push
xor
mov
orb
push
mov
pop
mov
or
mov
es
adc
push
test
imull
and
push
sub
dec
fisubrl
mov
add
adc
ljmp
fbstp
bound
push
test
lcall
lea
insl
mov
cmpsb
push
dec
movzbl
popf
mov
pop
pop
jl
or
mov
decb
mov
int3
iret
std
rorl
dec
adc
mov
in
shlb
add
gs
push
push
aad
popa
cmp
sub
insb
push
mov
dec
push
add
mov
inc
dec
syscall
repz
lds
lock
addb
dec
jle
adc
outsb
mov
pop
sarb
sub
pop
inc
cmpsl
call
popa
lret
lds
sub
push
in
xchg
cmp
jmp
push
pop
imull
adc
and
xor
mov
xor
test
cmpl
insb
sub
dec
xor
inc
push
repz
sbb
pop
pop
push
aad
ss
lret
shr
add
xchg
mov
test
xor
mov
inc
adc
sbb
sub
repz
shrl
jbe
or
pushf
cltd
out
jnp
aas
aas
jg
inc
dec
and
mov
sub
imul
push
sub
pop
push
inc
push
inc
loopne
jne
imul
fisubrl
xchg
mov
sti
dec
jmp
jle
leave
push
sbbb
ret
jecxz
cmpsl
les
xchg
repz
adc
push
jl
cmp
ret
or
mov
mov
push
rorb
and
jmp
jmp
mov
lods
ret
popf
sub
dec
mov
mov
dec
cmp
je
push
and
outsl
mov
les
out
lock
adc
pop
ja
mov
insl
mov
andb
sahf
fsubs
jo
xor
lods
sub
or
rorb
inc
add
mov
vpsllq
adc
push
loopne
rcrb
repnz
fistpl
gs
mov
pop
cmpsl
sub
jg
adc
outsb
mov
jne
sahf
movsl
push
sbb
inc
push
ss
jno
cmp
mov
pop
adc
add
bound
lret
sbbb
mov
pop
cmc
or
cltd
xor
dec
addb
xchg
mov
mov
dec
jmp
jg
in
pop
add
inc
out
jecxz
int3
pop
mov
sbb
pop
push
jae
sub
push
jnp
das
ret
ret
fsts
or
test
test
fs
jno,pn
cld
popf
cmc
cld
push
pushl
or
loopne
push
push
lock
cmpl
orl
rcrb
popa
cltd
add
jmp
loop
fldenv
jg
mov
repnz
fadd
ja
sbb
push
inc
xchg
mov
lret
add
push
arpl
sub
xor
popa
jb
push
insb
loope
push
cmpsl
aaa
popa
lock
ljmp
xchg
outsb
test
fiaddl
bnd
icebp
push
js
sub
call
push
and
fimull
xor
outsb
fidivrl
lods
or
popa
jp
and
jns
aam
xchg
rclb
xchg
bound
ds
dec
in
lea
movsb
and
lock
inc
js
cmpsb
shrb
in
shr
bound
popa
movsb
repnz
sub
dec
xchg
fcmovne
addl
fnstenv
icebp
and
push
push
sbb
sbb
jecxz
ljmp
xor
pop
add
and
adc
mov
fidivrl
mov
testl
push
push
adc
push
sbb
mov
push
insl
cmp
sub
push
cltd
sahf
adc
jno
inc
fistps
mov
enter
repz
mov
pop
lret
int
test
icebp
pop
aas
ret
mov
mov
add
cs
push
out
sub
pop
loop
mov
push
test
cmp
lock
xchg
pop
out
pop
and
inc
sbb
je,pn
inc
pusha
push
sbb
sahf
test
lds
push
mov
cmp
add
mov
popf
fidivrs
maxps
push
fisubs
pop
mov
mov
mov
call
pop
inc
inc
sti
jle
adc
add
rcr
pop
clc
add
fadds
out
outsb
stos
mov
and
pop
pavgw
into
pop
jmp
mov
inc
repnz
out
push
cmc
test
repnz
or
adc
fdivl
jl
or
jp
addr16
mov
popa
test
push
dec
imul
subb
loopne
int
mov
cmc
or
inc
jp
cmpsl
cmp
aaa
push
pop
push
xchg
test
nop
popa
ret
mov
sub
xchg
fnstcw
add
nop
cmp
ret
mov
mov
aad
cltd
and
jae
iret
dec
sub
ret
sbb
dec
sub
lahf
adc
and
xor
xchg
push
stos
push
int
popa
and
lret
repnz
and
std
jecxz
jae
rclb
cmp
push
sar
out
push
testl
shlb
push
out
lods
xchg
ja
dec
mov
adcl
mov
push
add
fstpt
inc
dec
inc
incl
sub
mov
cmc
or
mov
mov
pusha
js
adc
jnp
sti
jbe
loope
cmp
adc
and
push
fs
popf
aam
push
xor
cltd
add
rcrb
loope
mov
push
xchg
cli
jp
invd
add
adc
mov
and
aaa
jle
mov
bound
mov
aam
test
fcmove
fwait
jecxz
jecxz
leave
inc
cmp
cwtl
fbstp
jae
mov
in
mov
popf
cwtl
xor
cld
lock
fisubrs
gs
xor
jg
push
scas
outsb
out
mov
mov
adc
jbe
xchg
ficompl
fld1
call
int
adc
inc
adc
sbbb
jno
cs
inc
dec
add
mov
and
ss
add
dec
mov
mov
push
insl
stos
loopne
pop
lods
out
das
ret
ds
ja
notb
data16
fdivr
mov
rolb
rcrb
aas
push
ror
or
sub
lock
and
out
int3
add
and
enter
cltd
inc
or
mov
push
out
addr16
popf
adc
dec
cmpsl
adc
mov
fcompl
movsl
enter
inc
jl
je
loop
fldenv
and
mov
xchg
add
incb
fisttps
outsb
add
cltd
repnz
inc
pop
push
scas
push
lcall
ficoml
pop
pushf
in
mov
fwait
sarb
push
in
jae
xchg
xchg
and
ret
sub
cmp
push
dec
mov
lret
jnp
xchg
arpl
stos
jmp
bound
sub
inc
mov
cmpsl
outsl
mov
push
push
aaa
and
lcall
call
shl
inc
repnz
pop
rorb
push
push
inc
xlat
decb
dec
adc
repz
sbb
jmp
mov
movsl
push
mov
pop
pop
pop
scas
mov
frstor
loop
or
aam
jno
cmp
fistpll
lds
into
loopne
jl
ficoml
adc
cmpsl
push
in
mov
push
mov
inc
sub
dec
xorl
pop
neg
cmc
sub
cmc
and
fldt
repnz
mov
mov
in
inc
adc
js
inc
inc
cmp
pop
in
sti
loop
popf
fdivp
add
adc
fdecstp
cmp
sbb
in
sahf
sub
jo
call
fwait
fwait
xchg
sarl
cmpsl
es
hlt
dec
bound
loope
add
negb
mov
je
fisttps
adc
dec
mov
sub
loop
roll
aad
jge
jmp
ret
or
daa
adc
roll
mov
mov
jle
push
sarl
in
int
add
loop
emms
mov
in
sbb
dec
lret
add
cwtl
gs
bound
adc
ja
adc
aas
pusha
dec
rcrb
jecxz
mov
mov
mov
xlat
or
inc
insb
rorl
xchg
cmpsl
imul
mov
repz
jle
mov
bnd
das
dec
aaa
xchg
push
test
pop
test
jp
mov
scas
aaa
imul
pop
dec
inc
xor
mov
sbb
mov
aaa
scas
mov
mov
addr16
cld
fwait
je
mov
xchg
mov
gs
and
push
xchg
sbb
pop
sbb
lret
cs
icebp
repnz
addb
testl
push
sub
daa
nop
sbb
out
or
sbb
xchg
das
add
test
or
sub
cmp
ret
mov
addl
xchg
jnp
pop
sarb
xor
xchg
loope
push
clc
sahf
inc
jno
fisttps
js
push
loope
xchg
and
shl
and
test
movsl
popfw
inc
lds
sub
stc
int3
and
jl
add
cmp
pop
daa
insl
push
in
jnp
div
inc
push
adc
frstor
push
or
ljmp
test
add
jnp
mov
in
push
lds
nop
notb
adcl
or
in
push
sti
js
sub
xchg
enter
push
fadd
push
mov
add
jmp
or
jl
rclb
xlat
jbe
push
or
xchg
es
loop
cmp
push
dec
add
adc
push
outsl
inc
push
in
shl
pushl
lahf
cmp
push
imul
or
iret
jp
mov
sub
push
lods
nop
inc
repnz
pop
mov
outsb
ss
adc
cmp
rcl
clc
pminub
fists
rcrl
mov
loop
std
and
inc
and
jne
scas
mov
in
pop
xchg
int3
push
popf
rcrl
clc
jbe
popf
loope
clc
xchg
mov
aad
jp
or
dec
in
int
cmp
xor
enter
ret
std
xchg
lret
or
dec
push
stc
pop
pop
lods
aas
out
sbb
js
inc
fwait
insl
outsb
xchg
push
loop
int
outsb
jae
jecxz
in
add
pop
adc
xchg
sub
fisttpll
insb
rorl
add
pop
jno
pop
addr16
push
mov
scas
imul
jno
adc
sbb
mov
pop
lret
repnz
aaa
repz
call
jae
push
xchg
int
int
xchg
sti
adc
int
dec
dec
mov
mov
push
sbb
mov
jl
mov
inc
adc
sbb
imul
clc
sub
xor
xor
inc
lret
jecxz
and
imul
pushf
pop
add
xor
std
add
xchg
push
inc
xchg
outsl
stos
or
mov
add
lock
lods
pop
lds
lock
mov
sbb
arpl
push
jecxz
adc
andb
xor
pop
js
test
xor
xchg
dec
scas
stos
dec
movsl
cld
in
adc
push
add
mov
sub
ja
dec
pushf
jle
cmpsb
inc
mov
std
js
cmpsl
xchg
xchg
mov
sub
out
test
adc
test
sbb
cli
js
sub
jle
int3
add
lcall
addb
jne
dec
shlb
int
pushaw
fs
and
push
pop
xchg
fidivrl
xchg
pcmpeqd
sbb
push
inc
lock
mov
addl
push
das
repnz
les
outsb
mov
adc
jns
or
pop
mov
call
add
push
push
sub
jb
push
pushf
jl
xlat
pusha
aas
jle
stc
stos
fsubl
dec
negb
xlat
cmp
scas
loope
mov
cltd
add
mov
in
call
fstpt
pop
add
adc
loope
test
popa
loope
add
xchg
add
test
mov
loopne
push
mov
lret
jecxz
adc
stos
jmp
push
xor
subb
add
xchg
mov
stc
fstpt
out
sarb
ja
cs
repnz
xor
mov
lods
jo
aaa
push
or
iret
daa
adc
inc
sbb
outsb
push
push
mov
inc
and
lret
push
jne
xor
push
mov
imul
stc
inc
in
pop
or
xor
hlt
pop
mov
cmp
hlt
mov
shlb
cmpsl
out
pop
hlt
and
cmp
cmpb
call
xor
mov
inc
xor
mov
andb
repnz
imul
cltd
das
fs
cmp
mov
insb
jg
inc
movsb
sar
inc
enter
xchg
jbe
test
insb
push
mov
or
ret
inc
test
sub
adc
andb
shrl
pushf
shlb
shrb
jle
cmp
daa
sti
insl
lds
les
adc
jp
xchg
call
test
xor
enter
or
or
and
mov
adc
cmpsb
shlb
dec
mov
pop
mov
add
mov
jg
aad
xchg
rclb
gs
and
jno
cmp
xchg
enter
in
ljmp
outsb
ficompl
cld
mov
negb
cmp
xchg
notl
in
shll
jno
ss
jmp
mov
fidivl
mov
jne
and
add
mov
or
cwtl
add
aad
enter
adc
inc
jns
cmp
jecxz
mov
cmp
xchg
outsl
cli
js
pop
pop
cmp
out
fisttpl
mov
stc
inc
pop
dec
add
test
in
adc
out
inc
outsb
fistpll
jae
sti
or
dec
inc
mov
mov
pop
pop
sub
sbb
push
and
jg
retw
arpl
push
xchg
in
repz
test
in
mov
outsl
lret
cs
or
jecxz
mov
sbb
sbb
or
popl
push
dec
sbb
and
or
xchg
pushf
call
fidivl
popa
out
xor
arpl
pop
mov
addb
dec
out
xchg
sub
repnz
mov
shr
outsl
shrb
test
push
push
push
lds
sbb
fadds
and
subb
push
push
pop
movsb
jnp
mov
ret
movsl
push
fstl
dec
or
stos
out
in
pop
aad
jno
fildll
arpl
pop
addr16
sub
cmp
clc
xor
fldt
jg
std
outsb
int
or
or
push
cmc
cmp
sarb
pop
pop
add
jae
ret
jnp
out
fsubl
jmp
adc
mov
mov
mov
push
ret
out
jbe
pop
mov
pop
aas
pop
fidivl
fs
fdivs
shrl
jae
xor
pop
fs
sub
orb
add
adc
cmp
push
inc
popa
nop
lea
sub
jl
out
mov
push
add
jb
mov
daa
movsl
xor
sbb
movsl
adc
insl
dec
cwtl
xchg
inc
lahf
inc
mov
lret
or
cmc
insb
test
in
or
lcall
or
sbb
jmp
imul
push
dec
in
nop
push
fbstp
xchg
lea
mov
dec
mov
fdiv
in
sahf
cmp
fnstenv
dec
aas
cmp
cmp
ljmp
push
testl
add
lock
push
cmp
or
gs
addr16
call
xor
clc
cmp
add
lea
pop
mov
xchg
cmp
adc
mov
int3
int
mov
xchg
inc
mov
lret
cli
les
cmp
sbb
enter
dec
add
test
popf
or
add
add
or
hlt
mov
add
movsl
or
addr16
cmpsl
push
mov
mov
test
xchg
pop
mov
mov
mov
xchg
mov
out
into
enter
cmp
mov
pop
and
test
add
jg
loop
mov
rcrl
add
sbb
jne
and
xchg
idivb
cmc
aad
outsl
xchg
mov
mov
arpl
insb
cltd
fstl
or
mov
pop
mov
lret
add
xlat
jle
and
xchg
mov
in
and
or
repz
push
std
aam
hlt
scas
sub
xchg
sbb
aam
xor
pop
and
ja
mov
inc
addr16
test
mov
stc
rorl
mov
jge
out
sub
xor
outsb
out
cmpb
mov
int
mov
lahf
or
dec
adc
jge
jl
sbb
mov
icebp
jecxz
pop
jg
dec
cmp
out
pop
jle
mov
cmp
in
out
in
ja
cmpsb
push
out
int3
bound
inc
cwtl
lods
shl
jecxz
push
adc
jns
mov
stc
mov
les
stos
cmpsl
bound
iret
mov
aad
pusha
lea
push
jl
lods
out
mov
sbb
addr16
ds
xchg
dec
and
jmp
jge
repnz
movsl
loope
jnp
addr16
aad
insl
or
loopne
dec
ret
mov
push
xor
xchg
add
mov
jg
jge
enter
mov
imul
pop
in
outsb
xchg
ret
cmp
mov
and
inc
std
jbe
push
scas
or
inc
scas
pop
in
sahf
cmp
add
pop
mov
and
mov
shr
or
insb
and
jg
sbb
fsubl
pushf
push
xchg
and
and
sbb
daa
add
ret
insl
mov
fisubl
xchg
inc
sbb
mov
lcall
imul
jo
or
mov
or
fxch
or
inc
popf
adc
cmpsb
test
jo
and
mov
ljmp
pop
cmp
and
xchg
or
imul
jno
pop
leave
rorl
inc
jb
sbb
jnp
mov
aad
lods
imul
vpmaxsd
inc
repnz
inc
lock
iret
gs
jg
es
mov
je
dec
fsts
shlb
aas
fs
lcall
mov
out
test
sbb
fsubrl
mov
jno
adc
leave
push
mull
repnz
int3
sarb
fsubs
xchg
mov
mov
adc
scas
aaa
scas
enter
test
mov
lea
adc
scas
pop
lret
adc
imul
xor
dec
lock
or
jb
mov
push
outsb
jbe
data16
xchg
pop
insl
pop
dec
cmpb
mov
inc
into
fldl
imul
inc
ret
jns
pop
adc
lods
std
sbb
sub
jno
mov
mov
adc
dec
mov
mov
leave
call
push
mov
jb
jne
cltd
scas
mov
jp
loop
pop
rclb
ss
xchg
inc
jae
cmp
call
daa
fnstsw
inc
add
push
lea
mov
lods
cmc
aaa
cwtl
in
sub
cmp
mov
mov
xchg
adc
jl
and
cmpl
xorb
aad
sbb
xor
jecxz
rcl
adc
inc
adc
xchg
xchg
mov
cmp
movsl
ret
insb
addr16
pop
mov
into
xor
out
in
cmp
roll
sub
pop
arpl
cmpb
push
sbb
pop
sbb
sbb
rcr
nop
mov
ss
arpl
sub
jge
mov
mov
mov
or
mov
mov
mov
lods
mov
add
ret
inc
mov
insl
je
pop
je
mov
mov
cmp
loope
cltd
adc
or
imull
jne
mov
pusha
or
xchg
test
int
call
daa
je
cmc
and
gs
fwait
cmp
jg
outsb
lock
lret
lahf
sbb
xor
repz
pop
stos
cmp
or
cmp
inc
orb
mov
testl
push
fbstp
call
cmpsl
sub
adc
outsb
xchg
js
out
movsl
jecxz
ficomps
mov
sbb
ljmp
xlat
out
test
lahf
mov
cmp
push
test
adc
into
jo
jp
sti
lea
sub
pusha
inc
aam
incb
in
xchg
push
add
cld
and
mov
add
loop
inc
lds
popa
sub
xchg
js
fmulp
mov
xchg
jbe
fs
jge
xor
fistl
out
mov
popf
xor
xchg
mov
xchg
fldenv
xchg
and
push
dec
pop
cs
daa
mov
fisubs
push
movsb
lret
sbb
cbtw
sahf
movsb
ss
sbb
loope
jp
cld
inc
outsl
cltd
pusha
add
fldenv
adc
fcompl
lahf
lcall
cmp
movsl
dec
addb
pop
mov
mov
les
and
ficoms
shrl
test
mov
in
jns
xchg
test
push
xchg
movsl
bound
pop
push
pop
out
sub
adc
xor
lods
ret
bound
clc
cli
jmp
inc
lock
dec
mov
jp
fsts
xchg
adc
notl
or
or
push
addb
adc
xchg
jns
push
sbb
andl
jecxz
ret
imul
hlt
loope
loope
sub
insb
lods
cmp
and
push
push
dec
add
aaa
push
adc
fldcw
ret
mov
or
xchg
or
push
xor
pop
mov
nop
push
cmp
outsb
push
sbb
int
and
add
inc
dec
jo
in
and
iret
out
inc
popa
ds
aas
push
jmp
jecxz
mov
xchg
mov
push
mov
inc
cmpsb
lcall
pop
or
les
adc
cmp
pushf
pop
pop
js
les
ret
nop
mov
and
fisttpll
js
mov
xor
mov
dec
push
loop
push
cwtl
dec
int3
mov
xor
mov
dec
mov
leave
adc
dec
fsubl
aad
jle
fstpl
ja
mov
int
inc
pop
rcll
mov
test
mov
call
js
push
repnz
inc
popf
push
insb
ljmp
sub
xor
cltd
dec
call
sub
cmp
push
bound
xacquire
addr16
or
sub
inc
dec
cmp
mov
clc
fimuls
pop
push
jb
pop
jbe
or
pop
add
xor
xchg
sub
jmp
gs
pop
dec
cmp
and
adc
push
mov
sahf
lods
mov
fdivrl
lods
cmpsb
jle
mov
push
and
fsubrs
inc
pop
xor
pop
out
vaddsubps
cmp
push
pop
mov
loope
dec
fwait
pop
cmpsb
jae
mov
add
cmp
aam
inc
or
int
ficoms
ret
sti
ss
cld
pop
inc
jae
pop
dec
rolb
inc
leave
test
adc
loop
mov
mov
stos
idivb
lret
mov
fs
pop
or
and
xchg
out
rcrl
dec
jle
inc
jno
imul
out
push
sub
and
xchg
data16
sti
test
aad
movsl
lcall
lods
dec
adc
clc
or
roll
scas
jle
cld
sbb
std
inc
dec
test
and
ret
jl
lods
stc
push
sarb
icebp
nop
addr16
sub
cs
rcl
and
les
pop
shrb
ror
sbb
dec
gs
push
test
outsl
mov
fwait
or
bound
sbb
subl
icebp
push
cmp
fdiv
add
into
pop
popf
repnz
push
jle
jp
icebp
jb
mov
les
and
push
pop
lcall
add
sub
jno
sub
int3
fstpt
dec
aad
fldl
or
sahf
lock
mov
in
pop
in
adc
sub
add
adc
xor
lahf
fcmovne
jne
cwtl
addr16
push
rep
jns
jae
adc
lds
sahf
pop
nop
sub
mov
xchg
outsb
mov
lods
xchg
pop
and
xlat
mov
pop
add
in
pop
inc
adc
sub
lods
and
push
cmp
pop
je
in
inc
push
icebp
pushf
hlt
jmp
xorb
jns
adcb
push
cmp
popa
test
mov
adc
sbb
out
push
xor
xchg
jg
stc
inc
pop
jg
int3
mov
mov
ja
nop
cmp
jp
mov
int3
jp
cli
dec
add
stos
xchg
mov
aam
gs
mov
shll
lret
or
cmp
add
dec
mov
test
scas
lods
mov
mov
or
out
inc
pushf
xchg
mov
orb
clc
mov
stos
cmp
sti
sbb
mov
adc
adc
rorb
shlb
ret
or
js
hlt
pop
push
sbb
repz
mov
test
add
test
xchg
push
sub
xchg
adc
aam
mov
stc
out
push
jge
xor
mov
cmc
adc
or
sub
mov
ret
xchg
mov
jne
sar
and
sbb
test
mov
mov
scas
and
daa
mov
xchg
jecxz
in
push
mov
scas
cwtl
shl
jo
jno
xor
shlb
cmpsb
xchg
xchg
add
mov
aaa
adc
fnsave
stc
addr16
ficomps
or
mov
push
xor
sub
test
clc
xchg
xchg
jb
out
pop
shl
jns
adc
push
jb
mov
mov
pop
lods
out
xor
popa
inc
add
clc
pushf
mov
jae
cmovo
repnz
jecxz
sub
loop
rcrl
repnz
decl
imul
cmp
insb
rol
daa
stos
in
in
aad
mov
jb
dec
jmp
aam
xor
sbb
loope
jmp
cld
pop
mov
sti
pusha
scas
add
imul
or
add
push
xchg
iret
xor
adc
pushf
repnz
dec
stc
std
stos
iret
outsb
or
and
test
dec
bound
push
cs
pop
jae
and
mov
and
sub
bound
push
call
inc
xchg
pop
jp
and
push
sub
out
cmpl
inc
and
cmp
fsubrs
test
ficoml
mov
shrl
sub
mov
sbb
jno
mov
or
jns
sbb
stos
and
cmp
test
mov
jb
mov
sbb
sti
dec
cltd
clc
push
out
mov
int
mov
dec
fbstp
inc
negl
jge
jecxz
ja
and
add
enter
mov
cmp
fdivp
in
popa
mov
or
jg
xlat
mov
inc
pop
push
movsl
out
jg
cwtl
sbb
mov
test
inc
je
inc
mov
inc
stos
cmp
push
or
hlt
aam
push
sarl
jbe
mov
into
lret
push
loopne
pop
cmp
jmp
arpl
pop
mov
or
sti
mov
xchg
sbb
push
adc
fucomi
mov
out
rcl
mov
and
ficomps
sub
inc
lcall
xor
lods
and
adc
mov
lret
dec
add
push
shlb
push
in
cli
es
jnp
test
arpl
adc
shlb
mov
test
and
adc
stos
and
or
xor
je
sbb
and
in
test
pusha
data16
inc
pop
iret
lcall
xlat
xchg
enter
in
sub
push
sub
in
idivb
add
insb
ror
and
lods
addl
jmp
mov
xchg
push
mov
sub
jb
popa
push
jge
popf
movsl
ret
in
shlb
add
push
lret
mov
and
xchg
add
mov
lret
pop
sahf
sbb
mov
jae
sbbl
fsubs
mov
insb
das
or
movsl
pop
pop
xchg
imul
mov
pop
adc
insl
movsb
xorb
or
testb
jge
mov
rolb
push
loop
push
stc
in
xchg
leave
ds
out
mov
add
fwait
loopne
xor
push
lret
lock
or
dec
sub
push
jge
mov
rorb
mov
mov
hlt
push
push
adcl
rcr
push
dec
xor
dec
popa
inc
fcmovbe
cli
mov
push
addl
in
cmp
mov
mov
mov
sbb
mov
rolb
fwait
mov
mov
mov
mov
adc
mov
dec
imul
inc
movsl
ljmp
aaa
xchg
jne
jp
dec
shlb
mov
stc
xchg
loope
clc
mov
inc
cmp
clc
or
ja
sarl
ds
dec
fwait
jmp
rcr
das
bound
jmp
pcmpeqb
jg
cmpsl
dec
sbb
cmc
out
mov
push
cmp
ret
enter
lock
loop
jb
fcmovne
mov
adc
push
add
fmuls
jle
daa
and
lds
out
insb
fbld
pop
add
and
mov
mov
jne
pop
sub
and
ficoms
xor
cli
lcall
fstl
jecxz
or
pop
pop
daa
sub
push
push
out
mov
mov
call
pop
adc
cmp
xchg
push
jg
or
je
mov
pop
fs
adc
adc
mov
pop
cmp
push
fisttpll
or
mov
stc
hlt
dec
je
in
add
add
pop
cmp
pop
movsb
mov
insl
xor
adc
adc
mov
mov
xlat
pop
repz
icebp
mov
jae
aam
mov
push
lahf
mov
and
test
push
cltd
mov
fst
cli
push
nop
pop
in
push
fldt
and
jge
loop
shr
pop
fisubl
pop
dec
and
test
movsb
push
out
sahf
xor
cmc
imulb
dec
loop
addr16
xchg
cmpsb
ds
add
xor
cmp
lret
adc
mov
out
imull
mov
inc
mov
mov
rorb
push
icebp
pop
ja
movsl
pop
xor
addb
jnp
sbb
dec
test
fwait
jmp
push
xor
shr
dec
call
out
fldenv
add
push
stos
int3
jne
cmp
cmpsl
inc
adc
dec
shl
mov
cmpsl
push
ret
cmp
or
pop
shlb
mov
imul
je
and
and
sub
fistpl
xchg
jbe
inc
pop
fcmovnb
add
scas
adc
in
pop
xchg
cmp
movsb
jne
mov
nop
std
imul
or
rcl
cmp
add
dec
cwtl
and
mov
fs
arpl
push
sahf
add
sbb
fisttpl
jecxz
js
shlb
mov
popa
cltd
pop
lds
add
in
jecxz
outsl
cmp
jp
mov
xchg
push
shlb
popa
mov
fcoms
add
movsb
cli
sbb
fwait
or
jnp
movsb
pop
push
fildll
cmp
add
leave
into
jb
insl
or
stos
jg
mov
pop
xchg
xor
std
sbbl
or
shrl
cmp
inc
pop
shr
and
cmp
gs
icebp
push
inc
ss
movsl
aaa
divl
mov
lret
push
mov
and
f2xm1
adc
int
enter
ficomps
out
pop
sbb
jne
jmp
in
movsl
inc
jae
ds
inc
adc
sti
outsb
sub
and
rcl
cmp
test
lret
pop
push
mov
pop
pop
adc
arpl
add
adc
cbtw
hlt
das
push
arpl
aaa
shlb
xchg
pop
sub
cmpb
cmp
and
fsubl
jmp
insl
dec
jle
call
in
mov
fiadds
popf
jmp
fistl
mov
pop
mov
mov
outsl
pop
jecxz
mov
ja
ja
iret
mov
cmp
fcompl
push
lcall
sbb
mov
mov
adc
out
enter
jnp
das
mov
movsb
ljmp
add
mov
scas
test
sahf
out
or
or
stc
shr
jae
mov
cmpl
lds
cltd
repnz
sarb
jmp
sub
mov
ret
out
xor
sub
xchg
fidivrl
mov
and
inc
imul
or
std
nop
fistl
int
cmp
out
fadds
xchg
jo
xchg
xor
mov
add
push
shl
xchg
divb
push
sbb
cmp
int3
loop
incl
jmp
popa
lods
sub
aad
js
aas
loop
adc
je
fidivrl
cli
xor
mov
jbe
iret
enter
dec
jbe
push
insb
std
pop
and
mov
pop
gs
iret
add
rcrb
sbb
and
cmp
cmp
add
cmp
test
icebp
and
xchg
das
pop
mov
test
call
subl
cmp
jb
xor
jmp
sub
adc
cwtl
cli
je
pop
push
in
rcl
pop
lret
frstor
out
or
loopne
sbb
stos
mov
les
es
and
xlat
or
loop
xor
rorl
cmp
push
xlat
inc
dec
daa
xor
jmp
cmp
test
roll
clc
cli
mul
clc
xchg
mov
xor
pop
inc
clts
ds
cwtl
insb
aad
rclb
sbb
mov
mov
mov
push
push
inc
test
pop
in
sub
jae
and
fildll
push
mov
xchg
mov
and
inc
mov
add
adc
jbe
negl
push
xchg
aam
mov
movsl
jge
lea
sti
add
lahf
fldenv
xor
es
adc
xchg
xor
inc
mov
lahf
inc
pop
push
push
mov
pop
in
movsb
test
mov
xchg
sbb
cmp
pushf
orl
lock
jle
in
jne
push
adc
test
mov
jbe
shlb
mov
ds
cmp
pop
jne
popf
lds
pop
gs
clc
lahf
jbe
addr16
stos
lcall
pop
rcr
roll
std
xlat
pop
bound
js
pop
out
mov
inc
out
and
ljmp
adc
je
and
lods
sub
out
sbb
add
loopne
jb
addl
add
shlb
cwtl
fnstsw
fdivrs
push
fwait
jmp
mov
iret
cmpsb
sub
lock
adc
rolb
lds
into
fcomps
fistl
iret
and
fbld
sub
stos
mov
iret
stc
mov
push
shrl
adc
sub
mov
aaa
pop
leave
adc
and
int
mov
sub
mov
mov
xchg
lret
and
adc
push
repz
push
cs
dec
lahf
adc
xor
out
mov
xor
lahf
push
outsl
ret
inc
rorl
push
rcrl
jp
mov
mov
push
lahf
pop
inc
xchg
sbb
fidivl
push
cmc
clc
jae
out
ljmp
xor
loopne
scas
sbb
jg
aaa
sahf
inc
mov
ja
cli
test
js
movsl
add
fiaddl
shrb
stc
inc
mov
scas
push
xchg
sbb
dec
push
es
in
sbb
push
pop
fisttps
movzwl
add
cmp
xchg
adc
jb
cmc
jne
dec
hlt
push
addr16
inc
sub
cmp
add
mov
xor
mov
fincstp
add
fcom
add
mov
addr16
in
dec
dec
gs
mov
adc
or
ds
shrl
testl
lds
and
insl
jl
xchg
into
adc
dec
push
test
jns
loopne
setp
mov
in
jnp
cwtl
and
jmp
jp
insb
enter
pusha
add
pop
dec
shr
lock
sbb
add
xorb
mov
sbb
mov
int3
and
sbb
push
enter
jmp
push
jnp
pop
xor
faddl
out
inc
in
xorl
lahf
dec
pop
sub
cmpsb
xchg
dec
ss
sbb
xchg
xchg
ss
add
cmp
loopne
inc
or
les
adc
add
notb
and
mov
mov
push
adc
popa
inc
jge
dec
pcmpeqb
leave
jp
imul
sti
sub
jl
test
test
xchg
movsb
cmp
scas
shr
jg
fisubl
aam
fsubr
and
les
sbb
and
push
dec
std
mov
mov
ja
dec
jnp
cwtl
idiv
cmp
cmp
cmp
es
std
xchg
and
jbe
pushf
lock
mov
xor
dec
arpl
daa
mov
dec
inc
push
out
ficoml
test
or
out
adc
xor
aad
aad
ret
dec
push
sub
push
lret
jno
aad
fiadds
orl
xchg
outsb
lods
loopne
daa
mov
test
sahf
fs
orb
cmpsl
scas
das
mov
mov
fcmovnb
leave
cmp
pop
hlt
popa
leave
xchg
pop
add
aad
inc
popa
cwtl
lods
jo
jns
in
data16
mov
xor
push
adcl
pop
xor
aad
je,pn
ss
jbe
cwtl
mov
icebp
cmp
inc
push
add
mov
jg
pushf
mov
xor
int
add
daa
pop
dec
lahf
xchg
daa
notb
mov
sub
push
push
pop
mov
rclb
dec
dec
and
or
mov
jp
mov
outsl
sahf
mov
inc
mov
add
dec
cltd
dec
push
pop
lods
or
imul
jge
inc
fcoml
jnp
outsl
loopne
and
jae
cli
jmp
scas
xor
cld
push
popa
pop
push
mov
cld
cmp
pop
pop
orl
rorb
rol
roll
jmp
gs
mov
cmpsb
iret
xchg
in
das
mov
and
fldt
out
push
ds
or
mov
lds
int3
pop
aad
pushf
xor
pop
dec
orb
rcrb
mov
movsb
cltd
js
push
gs
fistl
xchg
pop
cmc
sbb
jecxz
pop
xchg
mov
cli
adc
jecxz
push
or
sbb
mov
sub
lock
jnp
and
subl
xchg
mov
add
out
dec
push
test
cmp
aad
fwait
insb
sbb
fildl
sub
mov
mov
push
fnsave
dec
ljmp
mov
addl
mov
or
add
jnp
fsubrs
fstpt
ret
mov
ja
xchg
pushf
ss
pop
fdivrl
mov
loope
daa
ret
cmp
stos
add
out
mov
push
jae
pop
popf
or
push
gs
nop
xchg
lea
mov
or
pusha
mov
dec
inc
sbb
mov
test
xchg
cmp
sub
stos
movsb
inc
or
xchg
mov
vmwrite
les
das
pop
shlb
stos
scas
mov
addr16
nop
cmpsb
push
faddl
insl
mov
je
pop
icebp
mov
add
inc
or
ds
dec
cmp
pusha
sahf
pop
mov
xor
mov
fstpl
cmp
pop
jno,pn
inc
push
fdivs
lcall
cmpsl
xor
fisttps
adcb
mov
sahf
scas
xchg
mov
cmp
inc
adc
icebp
and
xchg
inc
push
js
into
enter
cmp
pop
and
scas
aaa
jbe
subl
aam
pop
xchg
hlt
push
xchg
mov
cmp
dec
inc
dec
mov
aad
xchg
push
shr
iret
jp
jmp
pop
dec
cmp
pop
sti
daa
adc
mov
or
mov
stos
cmc
shl
xchg
ffreep
fnstcw
jo
sub
pop
fldenv
sti
les
loopne
out
lods
mov
cmpsb
push
mov
or
xchg
bound
out
call
dec
bound
cmp
lret
xchg
fadds
mov
jecxz
sub
lods
sahf
int3
hlt
adc
leave
cmp
sbb
dec
leave
pop
mov
jg
xchg
neg
stc
inc
add
adc
ds
fmul
out
in
mov
lock
cmc
cmp
or
fsubs
xchg
dec
jbe
or
in
leave
out
pop
stc
movsl
out
mov
jne
imul
outsl
jg
cmp
cld
in
rcll
loop
andl
adc
mov
adc
fwait
and
insb
loopne
jg
daa
mov
mov
inc
hlt
lahf
shrb
mov
add
fldt
and
mov
inc
call
jns
push
or
dec
pcmpeqw
mov
dec
push
and
inc
ficompl
call
insl
pop
dec
fsubl
sub
cmpb
pop
push
sub
cmp
jb
in
out
aad
negb
mov
xchg
jg
xchg
mov
sbb
xlat
or
shll
pusha
fmuls
iret
pushf
pop
pop
mov
push
xchg
mov
inc
xchg
in
mov
cmp
loop
jp
mov
and
fisttpll
mov
push
js
sti
insl
jnp
xor
push
and
push
dec
mov
inc
out
je
out
inc
jg
add
sbb
add
mov
mov
ret
push
xor
inc
jmp
sub
cmp
sub
fwait
mov
xchg
jg
or
mov
jae
cmp
add
or
jb
jl
cld
xor
jo
xchg
cltd
dec
test
xchg
mov
inc
icebp
repnz
dec
jge
mov
mov
sbb
notl
adc
int
mov
rorl
mov
xorl
cmc
lret
fwait
stc
xchg
fsubl
add
mov
bound
dec
dec
int3
lcall
jl
jbe
mov
shll
push
inc
stos
mov
pop
pop
fimuls
decl
fcoml
adc
aas
jno
pop
lods
es
xchg
mov
movsl
push
cmp
jne
dec
xor
daa
dec
or
mov
arpl
inc
test
ds
mov
cli
fs
ret
jnp
add
cmp
push
mov
pop
push
or
mov
inc
pop
dec
imul
lcall
cmp
jl
jecxz
xchg
mov
out
sub
lods
repnz
test
and
int3
push
imul
mov
aad
mov
leave
shl
xchg
insb
lret
sbb
or
js
in
pop
jbe
pop
xchg
add
int
stos
cmp
dec
jae
les
mov
filds
xor
jle
clc
adc
popa
jle
push
dec
pop
insb
mov
lods
mov
push
jmp
jmp
or
and
sbb
mov
xor
xchg
adc
sub
enter
jbe
xor
rolb
adc
or
dec
out
xor
add
out
push
dec
in
jg
negl
xor
imul
xchg
test
ficoms
pop
or
and
std
iret
dec
xor
xchg
fsubrs
xor
mov
mov
int
test
xchg
repz
cmp
push
jge
mov
popa
adc
gs
leave
les
jb
out
cmc
lcall
stc
popa
sub
inc
movsl
outsl
mov
xchg
lods
cwtl
jns
cwtl
sbb
arpl
dec
aad
mov
pop
xchg
push
fs
dec
or
lcall
dec
mov
xor
clc
test
lret
mov
adc
fstps
or
fwait
sti
icebp
xchg
mov
xchg
jle
lea
loope
inc
pop
push
xlat
dec
cmovne
addr16
imul
cltd
sbb
xchg
mov
adc
pop
xor
pusha
pop
adc
pop
in
clc
lods
xchg
and
mov
lcall
mov
pop
es
int3
mov
jmp
sarl
xor
mov
ljmp
enter
stos
pop
jmp
ljmp
or
and
or
cmp
sub
test
xchg
rolb
cld
fwait
push
popa
mov
pop
xorb
out
addr16
aaa
arpl
cmp
nop
lahf
gs
add
loop
xchg
std
xchg
dec
scas
lret
push
jns
sbb
scas
mov
out
mov
ljmp
insb
sbb
clc
mov
mov
mov
inc
cmpsl
lea
push
cld
pop
adc
es
mov
rolb
adc
inc
pushf
and
imul
dec
add
pop
movsl
enter
pusha
adc
xor
sbb
adc
mov
dec
rcrl
call
fs
lret
out
add
pop
pop
cmp
divb
inc
div
push
push
fwait
mov
xor
leave
loope
test
xor
mov
mov
jno
sub
je
lcall
ret
xchg
leave
movsl
xchg
daa
adc
push
fwait
mov
pop
movsl
mov
lea
out
dec
loope
xor
mov
cmp
inc
cmp
test
aam
int3
mov
and
outsl
xor
cmpsb
fsubl
jge
pusha
push
xor
insl
mov
loop
mov
and
sbb
add
mov
inc
pop
test
xabort
rolb
sti
and
loope
fs
in
in
lret
sahf
and
imul
inc
data16
add
mov
push
repnz
jo
jmp
mov
mulb
sbb
rclb
js
cmp
mov
jmp
inc
out
dec
cmp
les
orl
dec
cmpsl
mov
lock
push
outsb
ja
int3
adc
lcall
mov
dec
sub
pusha
fucomi
push
aas
mov
jp
js
cmp
ret
lock
cmp
push
push
xor
pop
insl
sbb
mov
movsb
lock
test
jns
mov
push
shlb
or
stos
inc
sub
not
cmp
inc
cmp
dec
aad
rcrb
adc
push
clc
movsb
das
push
push
pusha
daa
mov
outsb
out
dec
iret
dec
jae
adc
cmc
cmp
ret
sub
xchg
popa
arpl
nop
xchg
sbb
call
xchg
lcall
call
test
clc
and
pop
loopne
stos
mov
cmp
jmp
and
pop
stc
or
out
jae
push
push
lret
sub
xchg
in
ljmp
jmp
lcall
sbb
loopne
lahf
jno
mov
mov
leave
das
clc
pop
or
jmp
sbb
mov
mov
xor
push
xor
pop
dec
and
and
mov
dec
movl
imul
cmp
es
push
mov
and
xchg
out
adc
shlb
or
jg
mov
cmp
pop
fs
rcr
inc
lahf
fimull
mov
daa
sbb
lahf
popf
push
repnz
enter
mov
fbstp
push
stos
shl
jp
test
dec
ljmp
xor
mov
inc
std
dec
jbe
scas
xchg
icebp
ljmp
pop
ljmp
mov
pop
mov
cmp
push
shl
jge
xor
push
inc
pop
in
push
frstor
or
xchg
aad
rcrl
adc
bound
insl
outsb
mov
shrl
mov
adc
sub
rol
pop
js
sub
mov
insl
xor
pop
cmpl
pop
fwait
cwtl
dec
cltd
daa
out
mov
scas
andb
sbb
and
adc
jbe
out
dec
push
add
pop
pop
mov
int3
sub
lods
test
push
das
push
ret
imul
test
sarl
fimull
xchg
call
jge
sub
js
insb
out
mov
repz
jl
ret
repz
pop
bound
mov
filds
js
iret
mov
imul
es
push
sbb
cmpsl
add
jle
inc
test
jns
mov
dec
loop
in
out
mov
mov
iret
fistl
aaa
test
pop
js
cmp
fcmovbe
movsb
popa
hlt
cwtl
push
shr
aaa
scas
mov
and
dec
negl
cmp
pop
mov
xchg
andb
jmp
lods
xchg
jne
cld
jb
sbb
divl
mov
fsubs
addr16
add
lds
or
repz
jg
out
mov
les
jle
rclb
shrw
adc
pop
inc
and
lahf
cmp
scas
out
je
xchg
rcl
lods
push
and
es
lock
rclb
xchg
sarb
xchg
sub
adcb
repz
loop
xchg
out
or
fsubrl
jl
sbb
push
or
popa
xchg
movsb
divl
add
ret
sbb
clc
in
cmpsl
aam
sbb
fisttpll
sub
mov
jg
fcoms
mov
inc
mov
sub
cmpsb
jecxz
jle
push
dec
ret
jmp
adc
movsl
push
xlat
test
sti
cmp
cld
and
stos
xchg
inc
nop
insl
xchg
sbb
jecxz
mov
mov
imul
dec
xor
adc
testb
fisubs
pop
adc
or
gs
mov
fisubl
lret
pop
dec
ss
cltd
cmpsl
clc
jbe
pop
and
or
stos
sub
rolb
push
xor
sub
sub
jmp
int3
mov
insl
add
je
vpsubw
in
imul
sbb
mov
ds
mov
push
icebp
mov
int3
push
mov
lret
sub
loop
xor
xchg
add
jbe
or
cmp
repz
movsb
je
imull
cwtl
adc
jp
loop
inc
call
movsl
addb
ja
inc
fidivs
inc
test
sbb
popf
mov
push
push
lret
mov
scas
fdivrs
or
and
das
ja
pop
and
mov
xor
adc
push
movl
lcall
fiaddl
loopne
repnz
mov
mov
sarb
dec
xchg
xor
mov
push
xchg
push
xchg
les
testl
js
jle
jge
aaa
call
jmp
test
stos
sti
mov
adc
inc
cmpsl
hlt
cltd
inc
mov
ffreep
cmp
and
stos
and
std
mov
out
jge
xchg
inc
out
scas
shl
xchg
ficompl
cmp
xlat
sub
push
xor
pushf
xor
jp
fadd
add
mov
test
mov
ffreep
jne
xchg
xchg
adc
pop
xor
fadd
mov
adc
cmpsb
push
hlt
dec
jg
pop
insl
sub
jno
jnp
in
cmp
pushl
cmp
adc
imul
and
push
pop
iret
fimull
rorl
popa
in
pop
add
xchg
arpl
inc
xchg
dec
stos
push
jne
mov
lock
cmp
popf
dec
dec
cwtl
mov
jae
sub
jo
pop
push
rcl
out
fwait
xor
lahf
div
cmc
and
ret
stos
inc
cmpsl
add
cwtl
mov
js
and
pop
iret
add
xlat
xchg
cmpsl
mov
cmc
jne
pop
iret
adc
int
xchg
add
xor
mov
push
test
pushf
in
outsb
std
aaa
aad
add
mov
dec
xor
pop
repnz
jecxz
sub
cmc
fs
jmp
int
mov
int3
xor
sub
inc
add
pushf
imul
int3
adc
in
shrl
dec
pop
imul
mov
mov
fucom
xchg
mov
popf
ds
pop
adc
in
pop
nop
popa
arpl
js
jmp
ss
pop
psllq
jae
sbb
popf
mov
jmp
stc
test
inc
iret
mov
mov
adc
add
add
in
lahf
or
insl
arpl
inc
outsb
loope
xor
lahf
xchg
xor
sbb
test
mov
adc
sub
dec
xchg
mov
sti
ret
sarl
data16
lret
loope
and
loop
lret
push
inc
push
pop
mov
scas
pop
int
arpl
push
push
fimuls
hlt
and
jnp
pop
push
leave
inc
mov
cmp
scas
and
lcall
test
stos
out
push
and
into
and
hlt
shr
aaa
jno
idivb
mov
add
inc
cwtl
imul
jns
in
insb
out
adc
mov
adc
in
movsl
out
dec
addr16
xor
mov
sub
xchg
dec
lcall
lock
jns
inc
cmp
aad
gs
out
mov
or
add
push
dec
jo
pop
pusha
or
and
mov
push
repz
aaa
mov
pop
cmp
loopne
dec
pushf
mov
inc
dec
mov
push
out
mov
add
paddsw
subl
inc
adc
adc
gs
mov
adc
sbb
cmp
or
rol
lock
mov
cmp
bts
push
sub
mov
shrb
push
mov
gs
sub
dec
and
in
cmpsb
fidivs
lock
lods
or
aas
jne
adc
fldlg2
imul
cmpsb
fisttps
dec
arpl
mov
mov
js
push
out
stos
popa
rolb
bound
push
push
das
inc
pop
lock
adc
or
jp
adc
cs
sbb
rcrl
icebp
dec
repz
fldl
roll
xchg
mov
xor
aad
inc
pop
push
xchg
inc
and
sub
cmpsb
jne
icebp
jo
xchg
mov
test
fistpll
xchg
scas
cmpsl
xchg
imul
mov
out
adc
xor
daa
xchg
sbb
push
mov
out
sahf
test
xchg
mov
cwtl
ljmp
and
mov
stos
bound
cwtl
sub
test
add
add
or
pop
stos
mov
mov
rorb
jle
jo
jb
pop
dec
inc
ds
sbb
jnp
cmp
sbb
lret
insb
jg
pop
push
mov
out
pop
jmp
inc
xchg
movsl
rclb
stos
imul
iret
leave
mov
sub
mov
insl
push
add
dec
pop
mov
adc
es
pop
xorb
xchg
in
out
and
cmpsb
cmp
jb
lahf
out
imul
inc
push
lds
push
jl
fcompl
xlat
je
pop
stos
fcomps
aad
cmp
out
stos
aam
shrb
aad
push
push
fsubr
push
adc
adc
mov
insl
xchg
pop
adc
mov
mov
sub
shll
test
jae
push
stos
push
pop
inc
scas
movsl
xchg
shll
xchg
insl
loope
insb
sub
add
adc
inc
mov
lret
fstpt
mov
inc
icebp
adc
xor
sti
add
dec
mov
dec
cltd
frstor
dec
mov
sbb
mov
jmp
and
mov
add
sti
mov
xchg
cs
in
addl
popa
call
mov
mov
js
jnp
daa
cmpsb
les
push
xchg
insl
jmp
sbb
loop,pt
mov
shrb
mov
inc
xchg
test
lahf
cmp
sub
adc
or
add
loopne
cli
fldcw
mov
jmp
mov
andl
push
jne
xlat
dec
cmp
cmpsl
daa
out
arpl
or
mov
jle
lret
mov
fildll
aam
aad
adc
xchg
imul
out
or
stos
les
es
pop
aam
mov
sbb
lds
push
xchg
into
xchg
cld
dec
lahf
pop
mov
jp
lods
and
push
mov
ds
stos
push
mov
sbb
push
mov
adc
adc
orl
out
das
scas
addb
and
gs
or
insl
pop
dec
sub
fstps
sbb
aad
movsb
insl
push
jo
sarb
jl
mov
add
sahf
inc
in
cltd
push
sarb
cmp
pop
jmp
cmp
push
sbb
pusha
test
jle
cmpsb
mov
fistpll
jle
clc
es
push
dec
decl
out
out
mov
pop
in
sub
mov
push
mov
aas
or
flds
ja
popa
push
mov
or
sbbb
int3
in
dec
ret
add
or
in
pop
pop
and
mov
enter
shl
scas
mov
xchg
xchg
in
cld
and
dec
add
sub
mov
cmp
out
jns
pushf
ja
jg
stc
pushf
test
mov
inc
dec
out
scas
sbb
arpl
xchg
pop
push
or
add
cmp
sub
popa
and
jbe
push
int
addr16
jg
push
xchg
mov
sbb
sbb
pop
jae
jo
push
inc
test
mov
lods
mov
push
out
dec
cmp
inc
mov
and
push
addl
mov
add
bound
or
out
push
sbb
or
jp
xchg
pushf
leave
ss
mov
adc
add
leave
repz
int
into
outsb
and
or
ret
ds
aas
add
sbb
leave
imul
jecxz
daa
or
jnp
pop
ja
pop
pop
inc
pop
clc
adc
xor
cmp
cmc
cld
xorb
xlat
xchg
jo
cmp
sbb
jo
dec
xor
ds
fsts
cmp
mov
jg
mov
sub
idivb
cmpb
call
or
push
fbld
ret
out
orb
xor
stos
repz
pop
sbb
idivl
push
cmp
cltd
dec
and
ret
xchg
jb
cli
and
les
ret
pop
repz
arpl
or
xchg
dec
nop
push
shlb
pop
test
stos
adc
push
inc
sub
int3
dec
push
mov
xchg
out
cld
mov
jge
adc
cwtl
loop
inc
ja
aam
push
add
aam
cwtl
test
clc
mov
sub
pusha
hlt
dec
scas
es
add
das
inc
inc
sti
out
lods
mov
repnz
int
cld
and
or
mov
xchg
jo
mov
test
mov
add
mov
mov
push
or
cmp
mov
jno
sbb
lcall
adc
sbb
inc
test
lock
add
enter
xor
ljmp
pushf
or
mov
adc
test
es
or
je
bound
adc
mov
inc
cmc
and
xchg
ja
mov
sar
mov
pusha
aas
sbb
cld
jecxz
xor
xchg
lock
mov
test
and
dec
in
fsts
ret
fistps
adc
jp
add
dec
pop
sti
jecxz
mov
xchg
fstpl
clc
mov
sub
imull
jno
or
std
adcb
ret
adc
sar
fsubs
dec
aaa
sbb
sahf
jmp
fisubl
sub
inc
push
mov
adc
lret
pop
inc
pop
fisttpl
or
cmp
ljmp
aaa
pop
test
pop
mulps
cmp
negb
xchg
mov
out
sar
mov
push
cli
mov
pop
mov
movsl
js
cmpsb
sbb
jo
dec
mov
cwtl
xchg
fcmovne
push
and
fistpl
and
jo
xchg
adc
aam
push
or
push
pop
mov
adc
lret
mov
in
repz
scas
mov
int
lods
pusha
adc
ljmp
imul
gs
pop
pop
test
ljmp
lahf
pushf
popf
and
mov
or
mov
jecxz
dec
sbb
daa
jmp
jp
sub
pop
arpl
jp
cwtl
pushf
out
mov
ss
inc
lret
daa
mov
sub
push
std
shlb
lret
sub
mov
ljmp
fadds
lcall
sahf
out
push
pop
adcb
int3
xor
mov
dec
in
mov
jnp
arpl
push
movsw
in
outsl
adc
pop
call
xor
je
push
movsb
jle
xor
push
mov
xchg
stc
cmp
popf
es
jecxz
aam
cwtl
fdivrl
mov
xor
arpl
std
dec
dec
cmp
movsb
mov
aam
test
fwait
psllq
into
jmp
scas
pushf
mov
mov
mov
dec
test
adc
pop
jp
and
fs
clc
cwtl
mov
cmc
mov
icebp
sbb
push
out
sub
repnz
adc
jns
or
sarl
addr16
call
leave
stos
mov
cmc
das
pop
sbb
dec
dec
xor
data16
push
dec
orl
lcall
push
das
jnp
sahf
dec
adc
popl
mov
lods
jge
cmp
xchg
sub
adc
pop
gs
cli
push
repz
stc
sbb
cltd
jno
lahf
repz
movsl
pop
orl
negl
fdivs
ljmp
in
das
push
adc
gs
jl
jb
enter
loopne
xorb
mov
ds
sbb
cltd
imul
push
xor
es
data16
mov
cmc
adc
mov
out
pop
adc
out
fs
movsl
leave
cli
js
mov
mov
xlat
addr16
ja
cmp
std
stos
and
leave
push
or
nop
fs
out
ret
cmp
rcrl
lret
jl
jnp
jle
pusha
aad
jle
repz
sahf
decl
xchg
hlt
inc
cwtl
add
or
or
outsb
call
call
xor
add
xor
imul
jnp
movsl
iret
int
lock
nop
insl
jo
xchg
movsb
sbb
xorb
je
int
aaa
cli
sub
mov
lods
mov
xchg
push
dec
hlt
adc
mov
repz
jbe
aaa
mov
mov
cmp
pushf
mov
aas
inc
xchg
sbbl
xchg
in
mov
sub
and
idivb
ja
push
scas
je
fadds
mov
jl
add
xor
pushf
mov
imul
mov
and
pushl
cltd
push
outsl
push
xchg
rcrb
adc
enter
and
xorl
testl
mov
mov
movsl
sbb
clc
jg
fcom
sbb
sbb
roll
cwtl
clc
es
gs
ljmp
flds
cmp
jno
and
lea
pusha
add
jl
push
int3
hlt
pop
and
cmp
clc
sbb
mov
add
aad
arpl
mov
dec
aam
lahf
adc
mov
loope
jecxz
ret
cld
sub
repz
dec
push
or
testl
lock
les
xchg
aas
cmp
lods
out
gs
pusha
cs
mov
xchg
mov
fisttps
imul
jb
lea
adc
stos
pop
jmp
fcoml
jnp
sub
aaa
push
in
jecxz
shrl
push
inc
lahf
stos
push
jne
xchg
fsubs
and
aas
adc
sub
aad
inc
repnz
or
inc
jge
jb
or
lods
jmp
mov
aaa
sub
mov
cmp
stos
cmp
mov
lock
jg
and
xor
or
clc
and
aam
inc
push
cmc
je
movsb
or
mov
aad
jge
push
fnstsw
and
mov
in
test
ret
filds
outsb
jmp
mov
nop
pop
loope
jge
sahf
xchg
cwtl
repz
push
push
enter
sarl
cmp
in
lea
stc
les
scas
pusha
or
data16
mov
scas
adc
iret
ljmp
cmp
fnstenv
enter
test
push
cli
push
and
cmp
out
iret
into
lea
mov
test
sbb
imul
xor
pop
aam
and
in
pop
or
or
in
push
pop
dec
add
lock
push
dec
cmp
pop
les
and
sbb
pop
pusha
mov
or
insb
test
cmp
popf
ret
sub
mov
outsl
lahf
decb
lds
cmpsb
pusha
in
iret
add
jge
movsb
add
xchg
mov
lods
lahf
iret
loop
xor
cltd
jb
enter
aad
rcl
sbb
loopew
cmp
push
mov
js
xchg
lret
sbb
lret
fisubrl
inc
data16
adcl
fidivrl
xchg
subl
in
movsl
mov
data16
jb
in
call
sbb
jbe
pop
lret
mov
xor
jmp
mov
cmp
insb
adc
fisubs
jg
mov
leave
les
or
sbbl
adc
mov
insb
push
je
add
sti
push
int
cmp
pop
clc
mov
test
sbb
lret
das
add
push
jne
or
das
sub
scas
push
or
test
icebp
push
ljmp
bnd
pushf
orl
loope
and
shll
fisubrs
push
mov
icebp
stos
mov
and
mov
shl
jae
scas
out
repz
mov
sub
leave
es
add
ret
push
adc
es
jo
xchg
or
cmpsb
cmp
push
push
adc
pop
inc
lods
fldenv
jle
out
mov
cmp
push
cmpsb
jg
out
pop
faddl
stos
pop
mov
cmp
popa
insl
add
in
cld
fidivrs
daa
sub
adcl
rcrb
lahf
fmull
mov
sub
addl
aad
inc
out
adc
mov
rol
cld
mov
data16
push
xor
loope
loopne
cmp
jnp
lods
mov
dec
jecxz
jle
lds
insb
iret
int
pusha
aad
pop
lods
add
icebp
cltd
add
pop
divl
daa
lea
lcall
mov
mov
xchg
pop
xchg
mov
xchg
jl
into
sbb
out
jnp
outsl
sub
xor
lock
dec
mov
icebp
daa
xchg
jns
dec
dec
sbb
sub
imul
and
mov
loop
and
stc
sbb
jo
lret
and
or
ss
shlb
std
out
insl
arpl
jns
mov
push
adc
jp
addr16
mov
shrl
call
push
push
into
push
sbb
ss
or
jo
sbbl
push
lcall
mov
cwtl
clc
test
scas
mov
dec
mov
pop
lahf
dec
mov
push
imul
mov
mov
test
push
hlt
clc
sub
xlat
mov
dec
mov
enter
and
sahf
xchg
jb
aaa
mov
fyl2x
aad
clc
dec
pushf
sahf
lods
dec
mov
addb
in
popf
jp
mov
iret
ffree
fiaddl
cli
jmp
jge
mov
fucomip
cs
fdivr
sub
fidivl
jo
ljmp
jmp
inc
ja
aam
add
sbb
repnz
push
sahf
ds
push
insl
adc
ds
fldt
jecxz
jb
pop
sub
lret
pop
or
inc
push
push
les
sti
adc
and
push
pop
pop
xor
mov
mov
pop
push
test
or
popa
insl
dec
jbe
mov
test
jnp
mov
cmp
xor
sub
imul
sub
and
hlt
loop
ret
mov
or
test
xor
xor
iret
insl
nop
inc
push
lock
stos
cmp
out
imul
lods
push
loope
sbb
je
cmp
add
mov
insb
add
bound
xchg
cmpsl
cmp
mov
xchg
arpl
jp
jnp,pn
popf
icebp
inc
movsl
push
mov
add
jl
sub
sahf
jo
fdivl
fists
mov
loopne
inc
out
out
addr16
mov
int3
js
dec
push
fdivr
add
xor
and
add
lea
jmp
sbb
sbb
ficomps
in
xchg
jno
xlat
adc
std
bnd
cmp
pop
les
inc
xor
subl
inc
call
jo
xlat
mov
arpl
pop
push
pop
mov
jg
add
ja
xchg
sub
stos
imul
add
cli
dec
lods
rcr
cmpsb
fisttpll
out
hlt
push
mov
ja
or
sub
cmpl
fwait
jge
mov
fsubs
sub
jge
mov
inc
adc
rcrl
sbb
mov
rcll
mov
mov
inc
loop
popf
out
xchg
rorl
or
pusha
imul
std
mov
in
or
inc
push
nop
cmpsb
push
ret
inc
outsl
rcrb
mov
cmp
sub
jle
sub
jp
or
call
pop
add
lar
jecxz
mov
and
shrl
and
mov
cltd
xor
hlt
inc
leave
pop
add
rcl
xor
adc
xor
mov
pushf
adc
popa
cmpsb
or
pusha
je
out
sbbb
fnstsw
xor
cs
and
shll
sbb
mov
xor
sub
testb
mov
mov
inc
mov
kmovw
xchg
xchg
inc
add
push
jp
sub
cmp
aad
push
out
pop
inc
sub
cmpsb
rcrl
dec
scas
mull
push
idiv
mov
lds
dec
imul
lods
push
or
lds
fptan
and
fldt
fadd
arpl
cmc
es
mov
add
mov
ss
jmp
dec
cmp
loope
dec
adc
mov
in
cmp
cs
test
mov
in
xchg
cmp
lock
stos
les
cmc
push
mov
mov
lods
mov
push
or
inc
mov
lahf
ljmp
imul
sahf
fimull
movsb
xor
push
dec
jb
fs
or
sub
js
sbb
mov
or
mov
icebp
enter
int
push
ja
sti
add
sbb
cmpsb
cmp
stos
shrl
sbb
jae
dec
stc
add
loopne
pop
lods
mov
jle
mov
imul
pop
pop
sbb
dec
jb
push
test
dec
bound
sub
adc
push
jno
add
mov
in
pop
sub
cmp
aam
pop
mov
jno
xchg
jbe
inc
ret
xchg
data16
js
or
test
hlt
dec
sbb
ljmp
jecxz
add
ds
inc
push
sbb
or
pop
lret
xchg
int3
subb
pop
js
jne
clc
shlb
xorb
pop
or
punpckhqdq
gs
adc
pop
enter
insb
add
dec
jecxz
push
cmp
push
sbb
push
jns
sbb
pop
pop
addr16
clc
sub
cwtl
mov
sbb
lea
insl
mov
jg
hlt
mov
iret
mov
pusha
push
jge
test
pusha
pushf
sub
out
mov
xor
imul
mov
lock
mov
lds
idivb
mov
pop
je
xchg
ret
orl
movsb
mov
repnz
or
xchg
inc
push
mov
ds
jg,pt
xchg
into
sbb
test
mov
ljmp
ror
mov
add
adc
cmp
movsl
outsl
jl
jb
sbb
notb
popw
adc
out
push
adc
pusha
mov
je
nop
fs
out
sbb
adc
mov
mov
call
lock
fs
sti
inc
lods
into
adc
jge
push
pushf
push
mov
popa
sub
out
test
ja
stc
dec
inc
cltd
jecxz
in
sub
ret
shlb
push
and
add
push
das
pop
and
and
xchg
jae
loope
dec
pop
adc
push
popf
jecxz
fsubs
adc
movsl
into
sbb
xchg
push
outsb
adc
sbb
adc
add
dec
mov
fdivrp
sbb
stos
stos
aad
pop
jg
xor
mov
xchg
xor
fidivrl
pop
push
ret
xor
cmp
add
or
push
mov
outsb
enter
and
stos
push
std
mov
adc
mov
or
ljmp
xchg
add
xchg
sahf
int
cmp
pop
out
xchg
jge
les
push
sahf
sbb
push
bnd
sub
popl
jecxz
repnz
xchg
stos
dec
out
lock
in
pop
out
test
and
mov
xor
add
mov
clc
jae
cmpb
imul
das
inc
enter
xchg
mov
ja
shlb
int3
mov
shll
jno
pop
jg
sbb
int
pop
pushf
jbe
add
cmpsb
and
mov
outsb
dec
push
jns
lret
xchg
loop
sub
push
and
addr16
mov
cmp
in
jecxz
repz
adc
inc
orb
insl
out
ljmp
push
loopne
xchg
shlb
mov
xor
sub
jbe
inc
mul
int
aad
daa
push
cmp
and
movq
jmp
fwait
pop
and
out
sti
jo
xchg
ja
or
int3
mov
cwtl
jae
push
dec
add
je
dec
mov
adc
sbb
fisubs
mov
jae
xor
shll
fdivrl
inc
sub
testl
xor
lods
sbb
jae
jo
loopne
ret
aaa
mov
xchg
and
subl
decb
jne
mov
jne
or
shlb
and
xchg
fistpl
mov
xlat
mov
add
mov
pusha
stos
mov
pushf
arpl
sbb
or
cmp
xor
in
push
jp
dec
pop
imul
mov
test
and
mov
jp
js
test
fwait
nop
sahf
jnp
dec
data16
mov
dec
or
xchg
cwtl
sub
jl
add
mov
jno
fbstp
aam
shrl
cwtl
jb
and
cmpb
mov
mov
outsb
into
and
icebp
outsb
inc
cmp
clc
pop
das
leave
es
mov
jb
in
outsl
dec
inc
imul
push
xor
xor
inc
xor
push
mov
mov
sub
add
sahf
cltd
je
testl
decb
xor
mov
pop
scas
pushf
jno
pop
sbbl
insb
pop
add
pop
adc
mov
push
pop
xor
adc
pop
or
ja
lret
dec
xor
adc
stos
pop
jmp
adc
push
xor
add
and
ljmp
pop
nop
fldcw
out
inc
or
ljmp
fiadds
xor
or
mov
fwait
xchg
inc
popa
fisttps
mov
mov
lret
mov
jg
mov
repnz
add
cmp
movsl
pop
or
scas
xchg
jmp
cmpb
and
bound
shlw
pop
pop
stc
sbb
push
int
out
mov
inc
push
push
push
xchg
popf
mov
scas
rorl
pop
add
ret
cmp
lds
xchg
xchg
icebp
fs
ret
or
lahf
cmpsl
shr
lret
mov
jle
mov
and
mov
sahf
inc
lds
movsb
js
add
les
mov
lret
xchg
andb
xor
push
ja
mov
mov
loope
cld
mov
sti
or
cmpsl
and
dec
dec
inc
cmpl
scas
adc
sub
sbb
aas
out
cs
add
cmc
and
mov
aad
xchg
dec
inc
das
test
pop
scas
mov
dec
xchg
xor
push
inc
daa
rcl
fnsave
dec
inc
hlt
adc
ljmp
xchg
popf
adc
iret
dec
xchg
aas
inc
or
jno
dec
mov
jle
xlat
sbb
bound
mov
lds
push
mov
push
mov
add
mov
jmp
push
in
jno
mov
pop
xchg
pusha
push
pop
adc
cmp
mov
insb
stos
add
fldl
fidivrs
shrb
adcl
int
xlat
inc
xor
add
cmp
std
mov
add
test
xorb
loopne
leave
mov
push
adc
cmpsl
lds
pop
loope
sbb
in
add
xchg
cmp
mov
out
movsl
pop
xchg
jecxz
insb
xchg
mov
std
adc
add
rol
xchg
rcr
test
loop
xor
imul
pop
or
je
sbb
dec
popa
lock
sbb
and
nop
xchg
cli
mov
sbb
jmp
enter
adc
dec
jnp
push
out
aad
sbb
xchg
out
insb
ljmp
cmp
insb
lds
test
xor
pop
inc
mov
aam
jno
adc
or
jno
gs
mov
xor
pusha
jmp
enter
and
mov
sbb
into
mov
insl
scas
xlat
negb
test
out
aaa
cmp
pop
fcmovne
and
and
das
add
mul
lret
mov
inc
into
in
jle
cmp
out
mov
notl
mov
lret
rcr
jne
mov
mov
jbe
pop
cmp
mov
mov
push
push
gs
mov
clc
jno
in
in
sub
mov
lock
roll
ror
inc
out
stos
cwtl
adc
push
xchg
dec
xor
xor
xchg
jbe
aas
or
push
inc
cltd
mov
xchg
and
pop
hlt
repnz
mov
and
in
out
jl
xlat
inc
push
push
mov
sub
daa
out
int
or
jno
xchg
inc
sti
xchg
outsl
je
cmc
adc
icebp
out
adc
mov
xchg
loop
xor
roll
out
mov
icebp
addr16
fimuls
xchg
subl
popf
mov
dec
pop
add
pop
dec
cmpsb
mov
add
mov
or
shll
mov
mov
loop
add
xor
and
pop
call
call
push
adc
cmc
out
popa
xchg
pop
mov
inc
mov
xlat
jbe
mov
add
lahf
repz
dec
out
xchg
xor
mov
mov
dec
xchg
xor
loope
bound
pop
fidivrl
jb
or
jle
outsb
mov
repz
sbb
into
movsb
and
dec
gs
inc
icebp
imul
cmp
add
dec
test
cmp
lahf
cmp
jbe
shlb
imul
xchg
adc
test
lock
lcall
mov
and
ja
xchg
inc
rcrl
push
jbe
fs
roll
in
or
enter
sbb
loope
adc
insl
sbb
shll
lahf
or
inc
xlat
idivb
in
fstpl
sbb
imul
mov
mov
test
loopne
push
nop
roll
inc
test
outsb
mov
xchg
mov
call
xor
xlat
mov
repnz
addr16
mov
inc
les
mov
lods
dec
push
dec
pop
jmp
cmpsl
and
sbb
lods
jge
pop
lds
dec
pusha
popf
sbb
out
fs
cwtl
cli
insl
addr16
ds
insb
in
inc
insl
adc
cmp
test
stos
jmp
adc
xchg
fidivrs
pop
inc
lods
in
cmp
and
gs
mov
jb
pop
aad
cmp
or
idiv
jns
push
pop
and
push
pop
mov
daa
imul
movsl
bound
push
cmp
add
inc
lock
inc
sbb
dec
cli
pop
ret
jle
out
xchg
jl
stos
pushf
cltd
clc
xor
loope
test
jno
aas
sub
xchg
or
ja
into
test
insl
mov
scas
ljmp
int
stos
jns
xchg
ret
or
add
data16
mov
stos
xchg
add
mov
outsb
in
pusha
inc
inc
jns
inc
fstp
push
sbb
cs
and
push
pop
gs
jae
imul
test
sahf
sub
jecxz
movsb
mov
frstor
push
sbb
std
dec
int
mov
mov
loop
dec
notb
mov
cwtl
in
xlat
xchg
jl
sbbb
sub
or
dec
push
jge
mov
mov
mov
andps
push
cmp
sbb
sti
ret
iret
ljmp
fldz
or
call
add
push
mov
push
mov
test
jae
subl
sbb
sbb
stos
jb
push
sbb
push
sub
pop
stc
cmp
jmp
sbb
aas
dec
faddl
mov
mov
gs
and
fldcw
dec
loopne
aad
xchg
pop
add
push
ja
xchg
stos
mov
jb
mov
dec
repz
xlat
popa
sbb
sub
stos
rol
addr16
rdtsc
push
add
lahf
mov
xor
push
std
cwtl
dec
pushf
cmpsb
fildll
std
dec
lea
sahf
lock
aad
cmp
rclb
xor
repz
pop
movsl
outsl
sbb
mov
mov
and
xor
hlt
push
and
push
sbb
ret
mov
imul
ret
adc
pop
push
jb
inc
repz
push
int
xchg
jg
mov
jno
adc
sbb
rorl
mov
add
push
push
stos
add
nop
add
bound
cmp
je
insb
rcl
out
xchg
rcll
lds
jecxz
adc
clc
sti
test
popf
lret
jb
jne
jmp
aam
leave
pop
mov
push
shrb
insl
dec
shl
movsb
movsb
sbb
dec
push
ret
cmp
add
loopne
mov
imul
cwtl
test
fbstp
test
jl
fwait
es
mov
xor
sbb
mov
popa
aad
xchg
repnz
adc
shll
scas
push
cmp
push
push
xchg
push
mov
add
nop
cmp
jge
cmp
addr16
xchg
mov
mov
xchg
jno
clc
repnz
sbb
xchg
mov
cmpsl
sbb
jg
and
jmp
xchg
repz
andb
cltd
fwait
outsb
in
jge
mov
shl
add
jne
bound
mov
outsl
repz
add
das
loop
and
dec
or
hlt
fidivrs
call
test
mov
subl
imul
jns
pushf
vucomiss
and
cmpsl
adc
shrb
aad
dec
dec
or
mov
push
insb
loopne
pop
xchg
dec
pop
subl
movsl
cs
lret
mov
sbb
pop
xchg
sub
push
jne
mov
gs
add
sbb
jns
or
or
dec
jo
mov
push
aam
clc
ficoms
dec
lea
inc
insl
mov
mov
cmp
imul
movsb
xor
or
cmpsl
xchg
adc
mulb
and
mov
xor
pushl
adc
mov
outsb
gs
jo
int3
dec
jmp
xchg
adc
mov
cmpsl
add
lock
xchg
push
lret
ja
scas
push
add
fistps
xor
push
stc
cmp
popf
aas
and
scas
and
enter
bound
cld
push
repnz
push
cmp
adc
pop
cmp
mov
je
push
add
sbb
int3
mov
subl
add
adcl
sub
or
rcl
mov
inc
scas
xorl
xchg
lock
mov
out
out
cwtl
adc
pop
xchg
stc
push
repnz
sub
lret
add
stos
or
inc
pop
aaa
sub
jecxz
loope
jnp
es
xor
pop
push
stos
push
push
mov
call
pop
ljmp
push
into
lock
xlat
pop
ret
mov
push
lahf
lds
mov
int3
sbb
xor
push
pop
cmp
cmc
data16
xor
mov
jo
pusha
mov
fistpl
imulb
sub
pop
inc
into
out
dec
movsl
xchg
shll
pushf
sbb
ficoml
and
adc
xchg
add
push
xor
xchg
lea
mov
jns
pop
pop
cmpsl
mov
sbb
and
sti
xor
mov
insl
adc
mov
jge
mov
sub
adc
push
adc
cwtl
mov
mov
test
or
fbstp
mov
push
xor
clc
mov
dec
gs
cmp
inc
mov
dec
mov
nop
pop
add
sahf
sub
push
xchg
and
dec
jmp
icebp
push
jns
mov
and
adc
add
pushw
xor
mov
call
andb
and
fmull
imul
inc
or
cmpsl
mov
and
insl
or
enter
push
mov
bnd
xchg
pop
mov
fisubs
or
js
mov
aad
push
in
jno
cmp
icebp
sbb
cmp
xor
popa
jbe
mov
or
push
mov
stc
or
add
adc
lock
js
fidivl
mov
jg
in
in
jno
pop
mov
adcl
push
andl
dec
into
in
sti
sahf
lds
pop
loopne
jno
and
xlat
es
nop
pusha
ds
or
daa
xor
adc
test
lret
xchg
push
mov
sub
jne
call
outsl
push
jae
sub
xor
in
add
in
pop
pop
hlt
das
push
icebp
mov
push
mov
stos
and
mov
call
cmpsl
and
in
mov
inc
dec
pop
scas
jne
adc
test
clc
lock
arpl
cs
jb
cltd
js
bound
popa
jo
sbb
std
sbbl
scas
les
aad
addr16
pop
xchg
inc
sub
cmp
add
test
push
popa
xchg
pop
out
pop
mov
xlat
out
push
movsl
pop
stos
inc
pusha
add
adc
rolb
call
movnti
sub
ljmp
cmp
cld
sbb
xor
xlat
popf
xchg
lcall
and
sub
ss
xchg
jb
adc
loopne
xlat
pop
cs
mov
mov
xchg
sbb
leave
pop
popf
lahf
mov
ret
xchg
lret
add
lcall
jae
xchg
mov
addr16
sarb
ret
scas
call
test
push
ljmp
in
mov
mov
mov
lea
mov
popa
mull
test
je
xchg
subl
call
pop
int3
lcall
int
daa
xor
shrb
jne
mov
xchg
test
stos
xor
mov
add
ss
add
scas
pop
and
push
and
mov
fnsave
aas
std
ffreep
adc
mov
inc
int3
cwtl
fs
jg
sbb
xorl
clc
sub
push
jecxz
lcall
fcoml
sbb
sub
or
lods
lods
stc
dec
ljmp
sbb
cmp
sub
mov
int3
inc
sub
dec
fsubrl
bound
rclb
or
and
mov
cmc
or
dec
mov
mov
in
fisubrs
mov
push
fistpl
inc
insb
loopne
mov
adcb
repnz
mov
lods
and
cmpsb
popf
or
shl
push
adc
arpl
add
push
xchg
push
and
lret
jle
add
jb
test
inc
push
loop
lods
adc
pop
push
push
bound
int3
ds
ficompl
mov
cmp
xchg
and
push
and
cmc
pusha
push
jbe
jg
sbb
and
push
push
fsub
out
inc
dec
xchg
lock
fwait
cmp
fbld
push
push
dec
inc
mov
js
cmp
cs
mov
jnp
mov
clc
push
aas
in
fsubl
fwait
nop
cmpsb
jnp
pop
sub
mov
imul
and
cmp
mov
fsubrl
arpl
out
mov
adc
cmp
cmp
add
arpl
ljmp
xchg
out
jp,pt
sarl
in
push
jbe
xor
mov
pcmpgtd
mov
outsb
in
notb
mov
sbb
sub
mov
rcll
add
mov
xchg
push
sarl
imul
rclb
sbb
stos
push
pushf
or
jbe
mov
leave
or
bound
add
jl
dec
xor
outsb
xor
fiaddl
icebp
and
xlat
repz
jecxz
stc
out
push
clc
or
jg
out
push
fnstsw
mov
push
sub
stc
loopne
mov
popf
push
sbb
pusha
sbbb
out
rorb
pop
inc
and
or
push
imul
pop
dec
pop
inc
fs
mov
add
sbb
mov
mov
sub
pop
xchg
lods
pop
xchg
adc
jnp
xlat
loopne
mov
jp
sub
mov
test
fiadds
dec
sti
aas
push
popa
inc
adc
lahf
sub
aad
cmp
and
sbb
mov
sub
loopne
test
dec
out
pop
je
incl
jg
adc
xchg
push
xchg
imul
inc
jb
add
out
lea
pop
or
repz
sub
aad
pop
pop
push
jne
lock
dec
mov
mov
aas
xchg
les
mov
inc
icebp
lods
stos
inc
mov
pop
inc
pop
or
pop
pop
pop
into
cmpb
sub
pop
sub
mov
pop
xor
movsl
xchg
mov
inc
cmp
lret
jl
xchg
jae
xchg
or
dec
dec
aaa
fsubr
test
sahf
lods
rorl
xchg
jecxz
adc
imul
xchg
add
ret
ja
lcall
popf
in
enter
and
inc
push
ficoms
insl
lods
sub
mov
jns
mov
xor
test
cmp
ss
rclb
sahf
fstp
xchg
in
lcall
cs
dec
orb
leave
fwait
jl
aaa
xor
sahf
mov
mov
mov
inc
insb
bound
fidivrs
cmp
out
inc
pusha
jae
mov
xor
ret
jb
dec
lods
icebp
outsb
lret
jae
fbstp
push
jmp
xor
push
push
inc
nop
aam
movb
cmp
inc
les
pop
cli
lret
mov
insb
outsb
fucom
daa
or
mov
stos
inc
dec
cmpb
xor
sbb
test
fsubrs
mov
fnstsw
dec
inc
vdivss
pop
sbb
test
addr16
loopne
push
fdivs
int
and
dec
push
in
xor
shll
test
mov
ret
or
hlt
lock
or
nop
inc
push
cwtl
lret
dec
inc
stc
in
mov
imul
ja
out
lcall
jp
add
ret
dec
mov
xor
inc
ss
or
inc
fnstsw
lock
adc
push
jne
call
popa
push
fimuls
movsb
mov
adc
xchg
mov
jo
insb
add
in
push
and
add
push
addr16
or
adc
aam
mov
push
inc
ds
add
adc
fnstsw
and
test
jno
push
rcll
popa
pusha
aam
adc
cld
fwait
repz
pop
repnz
xchg
fisubs
fiadds
mov
sbb
repz
pop
or
fsubrs
mov
insb
push
stos
test
add
sub
arpl
nop
gs
jge
int
clc
fistps
inc
mov
sti
aaa
addr16
data16
push
cmp
outsl
jl
xor
stc
mov
aam
aam
xor
cmpsl
jl
sub
out
sbb
jmp
mov
je
iret
daa
and
test
add
or
xchg
xchg
insb
lret
xchg
push
jo
adc
or
cmp
jo
testl
dec
shll
pusha
repnz
pop
lock
mov
jo
stos
fistpl
inc
movsl
sub
adc
call
outsb
jae
mov
push
mov
dec
shlb
gs
out
xchg
stc
inc
or
out
int
mov
nop
icebp
nop
gs
sti
sbb
push
ja
iret
adc
mov
shl
adc
js
xchg
jge
fistpl
insl
arpl
enter
xchg
in
sahf
sub
lret
in
jmp
pusha
or
pop
xchg
test
lret
xor
ljmp
mov
shl
cs
jle
lds
sub
cmp
loop
paddd
je
cmp
mov
daa
pop
pop
inc
out
adc
xchg
lahf
andb
cmp
stos
push
jg
mov
pop
imul
sub
pop
daa
inc
out
stos
sub
jbe
sbb
or
cmp
and
outsb
or
push
jne
add
dec
add
xor
mov
inc
insl
in
adc
cwtl
and
into
xchg
or
pushf
or
cs
pushf
mov
jno
stos
aaa
pop
ljmp
fwait
xchg
je
jmp
pop
fisttpll
stos
rolb
mov
mov
daa
fstp
cmpsl
sti
mov
sbb
or
iret
and
sub
pop
cmp
call
mov
push
lcall
sub
xchg
in
stos
mov
and
adc
in
dec
push
ret
mov
std
or
inc
shll
lods
cmpsb
jle
cmp
mov
push
lock
xchg
xchg
jo
add
fnstenv
lock
scas
mov
mov
xchg
cmpsl
add
mov
and
fcompl
daa
jno
push
sysret
enter
mov
push
fmull
and
xor
cmp
lcall
push
inc
lret
mov
push
add
adc
inc
push
fwait
repnz
pop
stos
ja
aam
push
jmp
push
jecxz
cmc
xchg
rcr
cmpsl
out
xor
and
dec
jns
xor
outsl
lea
ss
fwait
xchg
xor
lock
aam
fdivs
lds
xchg
fsts
gs
push
cltd
or
dec
push
dec
int
movb
adcl
push
push
push
cwtl
cmp
mov
inc
shl
or
and
add
out
mov
push
stos
or
mov
jg
jb
pusha
test
sbb
jb
xchg
push
stos
mov
pop
mov
mov
fldt
cmp
std
adc
icebp
cmp
pusha
in
je
fmull
xor
inc
aaa
mov
sub
jge
or
inc
adc
test
cli
mov
fwait
stc
push
dec
daa
xorl
mov
inc
xchg
jo
mov
mov
pop
inc
loope
push
fcmovnu
or
fs
jbe
and
mov
lds
ss
pop
inc
es
lret
add
sbb
xchg
inc
mov
xchg
dec
xlat
jge
lret
lcall
outsb
int
sub
jge
inc
insb
sub
rcrl
fnstcw
loope
and
ljmp
cmp
pop
xorb
ja
in
and
imul
inc
int
mov
outsb
hlt
jne
icebp
xor
pushf
mov
jp
xchg
in
pop
orl
stos
jecxz
push
adc
sar
ror
fnstenv
cmc
jmp
les
in
sarl
cmp
aam
dec
or
lcall
sub
pop
repz
mov
fbld
mov
xchg
les
dec
pop
lock
push
mov
dec
stos
inc
adc
jp
fs
xchg
ret
mov
dec
outsl
shrl
sbb
mov
push
in
inc
lret
shll
cmp
push
dec
cwtl
sahf
popa
pop
das
pop
jne
cld
and
jmp
iret
adc
or
scas
testl
pop
inc
mov
xor
mov
xor
fdivs
enter
mov
scas
rcrb
xor
push
pop
je
in
clc
push
aaa
xor
xorl
mov
mov
jl
shrb
sbb
lea
decl
jo
add
enter
xor
jp
iret
fmull
shrl
sub
clc
test
mov
add
mov
xor
arpl
hlt
ret
inc
fcompl
js
ret
cmp
jno
mov
jmp
int
clc
ret
shrl
mov
bound
out
sub
xchg
or
sarl
iret
jge
push
sahf
popa
outsb
jmp
sbb
add
dec
cmp
fs
mov
stos
fsubrl
call
cld
in
pop
andl
or
jo
xchg
lods
loope
in
ucomiss
mov
push
clc
icebp
inc
xorb
dec
pop
jg
and
mov
push
sbb
and
add
or
mov
adc
lahf
mov
xchg
movsb
jl
cmp
cli
es
jbe
sub
mov
inc
push
adc
stos
xorb
fcos
adcb
mov
nop
adc
cs
inc
push
push
push
jnp,pn
std
lods
fisttps
in
rorb
sub
out
aam
mov
push
outsl
push
dec
arpl
int3
lock
cmp
xchg
mov
adc
cmc
mov
leave
lea
mov
mov
adc
iret
dec
gs
ror
xor
scas
sbb
inc
stos
lods
mov
jae
nop
mov
sarl
arpl
insb
cwtl
push
xchg
test
aam
fisubrs
dec
lods
int3
pop
add
lods
sbb
mov
fiadds
inc
pop
das
fs
hlt
or
lret
ret
and
pop
lock
pushf
or
cmp
adc
mov
nop
mov
mov
dec
enter
lret
leave
mov
push
int
mov
jns
adc
imul
fwait
inc
leave
dec
cld
xor
mov
lahf
dec
ret
lcall
jmp
popf
inc
xchg
shlb
add
mov
mov
xor
mov
movsl
jns
xabort
jb
vpmaxuw
out
leave
div
lods
add
aas
jge
jno
push
in
ret
and
repnz
mov
fs
sbb
pop
push
fmulp
scas
imul
sub
dec
sbb
cmp
repz
int
mov
sbb
cltd
pop
out
mov
add
gs
aad
mov
xchg
cli
push
mov
pop
lret
dec
inc
mov
xor
xchg
movsb
stos
mov
xchg
enter
adc
xchg
inc
cmpb
or
mov
sbb
add
rorl
inc
mov
imul
cmpsb
sub
dec
fsubrl
scas
and
out
mov
jno
pop
push
movsl
cltd
lds
xchg
mov
xor
fdivrl
mov
push
fs
add
jb
icebp
sub
test
pusha
pushf
out
xchg
push
adc
mov
xor
mov
mov
or
pop
push
cmp
pusha
mov
clc
dec
jmp
paddusw
jnp
enter
jle
and
and
sub
mov
cmp
inc
mov
mov
lcall
xchg
push
test
pop
push
xor
dec
leave
int3
sub
mov
and
scas
mov
faddp
push
lea
test
daa
xchg
xor
jp
add
das
mov
and
mov
cmp
mov
or
movsl
imul
xor
ja
cmp
cmp
sbb
stos
adc
call
pop
push
lret
xchg
adc
add
shlb
ds
mov
add
dec
and
enter
xorb
and
leave
mov
das
and
negl
cmp
lret
xchg
sbb
push
pop
push
jge
inc
outsl
adc
dec
push
and
inc
into
sbb
dec
jno
jle
mov
dec
push
xchg
testb
cli
dec
add
in
and
and
push
mov
andb
movsb
loope
mov
ds
jp
adc
add
shll
cld
fimuls
cmpsl
adcl
xor
mov
stc
push
shr
add
cmp
rorl
sahf
das
pop
ficoml
mov
xchg
adc
inc
fsub
mov
dec
imul
xor
daa
cmc
xor
add
lea
push
cmp
xchg
out
ja
insl
mov
dec
dec
xchg
push
dec
lahf
loope
mov
push
fdivs
das
int3
cmc
fsubl
cli
dec
push
push
jns
aaa
mov
rorl
xor
sahf
xlat
cld
sbb
daa
scas
out
popa
popl
dec
dec
xor
test
pop
fcmovu
xlat
inc
adc
rclb
add
cmp
movsl
int3
enter
aas
iret
mov
lods
mov
daa
rcrb
or
xchg
enter
jns
mov
jns
rcrl
pop
arpl
je
hlt
aas
pop
mov
cld
jecxz
mov
insb
jle
xchg
imul
movsb
shll
or
aas
sbb
mov
daa
pop
push
adcl
addl
test
inc
nop
test
lahf
icebp
and
pop
jle
push
mov
repnz
icebp
jnp
lods
jo
dec
xor
movsl
sbb
addr16
or
popf
repz
add
xchg
test
mov
dec
xchg
push
sub
ljmp
or
jg
into
jle
sbb
or
pop
outsl
addr16
inc
notb
gs
dec
in
pusha
imulb
ljmp
mov
aad
xchg
aaa
push
mov
xchg
into
adcl
xchg
popf
mov
shr
xchg
leave
xchg
sbb
mov
lret
fisttps
movsb
add
subb
mov
dec
outsb
aas
sub
lret
stos
or
sbb
in
stc
out
dec
add
jle
mov
movsl
out
add
mov
pop
mov
mov
hlt
imul
lcall
ret
xchg
cmp
cmpl
mov
xchg
xor
mov
in
sbb
xchg
cli
ss
ljmp
shrl
mov
scas
ret
insl
icebp
pop
aad
dec
aas
movsb
push
sbb
int3
stos
cmp
subl
iret
add
ret
es
adc
mov
jge
out
pushf
notl
jecxz
gs
mov
in
inc
gs
jl
sbb
mov
and
out
dec
mov
out
mov
iret
adc
ja
mov
sbb
pop
enter
jns
xlat
cmpsl
stc
jb
push
jecxz
and
inc
fisubrl
mov
push
std
ret
scas
fwait
in
cmp
pop
daa
ss
inc
scas
fucompp
daa
outsl
sbbb
es
enter
shlb
test
movsb
cmpsl
pop
xor
adcl
mov
xchg
xchg
sbb
minps
das
and
xor
dec
mov
adc
xor
push
cs
in
push
jge
cmc
mov
dec
sub
ja
daa
mov
movsb
xchg
addr16
cmpsl
in
or
jl
clc
test
mov
wbinvd
lahf
ror
stc
mov
mov
mov
int3
push
xor
inc
std
push
shll
lods
cmc
add
add
cltd
popa
insl
in
mov
cmpsb
iret
fists
inc
inc
enter
out
inc
stos
lahf
xrelease
mov
sbb
jns
push
xlat
in
dec
imul
out
pop
pop
mov
jmp
mov
or
std
mov
xor
mov
mov
shl
mov
sahf
jns
out
out
dec
adcl
sub
stos
push
pop
pop
inc
push
mov
daa
push
arpl
int3
jbe,pn
jae
shl
cmc
sbb
cmpsb
out
lret
fwait
xor
mov
pop
inc
adc
call
stos
jmp
and
movl
mov
and
das
and
lea
dec
adc
loop
add
ror
xchg
adc
ss
cmp
popf
push
push
xor
insl
pop
mov
fcmovu
cmc
ret
push
jbe
push
mov
andb
xlat
es
andb
dec
jmp
aaa
ret
divb
sub
sub
imul
push
scas
cwtl
adc
xor
rcr
ja
fldl
fisttpl
xor
cmc
mov
out
cld
ljmp
xor
add
sahf
mov
imul
rorl
stos
lds
sub
outsb
out
push
addl
and
std
dec
ds
lret
dec
fistpll
sub
mov
push
ljmp
add
cmp
ds
sbb
outsl
lock
adc
ret
or
sbb
shl
jae
sub
inc
movsb
pop
nop
mov
and
push
push
das
jg
fcomps
add
shl
outsl
xor
test
jp
jo
das
or
aam
xchg
xor
mov
fsubrp
xor
mov
in
gs
out
inc
or
jecxz
je
test
lods
add
leave
jo
lcall
les
and
sbb
or
mov
aaa
inc
mov
lea
icebp
jecxz
std
xor
mov
clc
in
movsb
cltd
adc
dec
test
or
add
das
push
mov
sbb
push
loope
out
xchg
cmp
nop
mov
xor
test
push
xor
pop
mov
out
out
mov
or
hlt
sub
outsb
and
add
jns
pop
mov
sbb
mov
jmp
in
mov
push
inc
xchg
mov
test
pushf
push
pop
mov
cmpsb
fidivl
andl
add
test
push
xorl
pop
mov
adc
jmp
jo
jge
imul
cmp
dec
outsb
rclb
es
mov
cmp
sub
or
pop
subb
cmp
les
cmp
inc
lcall
les
xchg
cmp
mov
fsts
arpl
or
icebp
test
push
out
mov
or
enter
fldcw
adc
sarl
push
shl
jne
call
repnz
inc
cli
test
or
call
dec
sbb
repz
push
mov
push
xchg
push
xchg
into
mov
dec
pop
icebp
cmp
sub
icebp
mov
push
mov
jg
adc
mov
adc
xchg
jb
pop
inc
pop
adc
xor
mov
cmp
ret
sub
and
cmp
dec
sarl
test
push
push
subl
inc
push
push
js
std
pop
mov
fwait
or
cmp
jp
xorb
cmp
and
add
arpl
cmpsl
or
and
dec
lds
mov
push
arpl
xor
mov
mov
clc
fcmovnb
fsubrp
mov
mov
mov
js
jb
mov
mov
loopne
mov
xor
jmp
mov
and
mov
jmp
lcall
and
push
in
divl
sub
add
jbe
xor
push
adc
pushf
mov
cld
dec
fs
mov
jmp
subb
xor
in
xor
mov
inc
insb
iret
and
test
je
out
xchg
or
jle
lea
xorl
lds
and
and
pusha
pop
test
ds
inc
or
sbb
notl
add
test
inc
fcmove
nop
cmp
aaa
mov
mov
push
sti
fisubrs
aaa
sbb
jno
stos
add
fsubl
inc
mov
into
lret
and
stos
xor
aam
les
aam
xchg
imul
push
mov
in
outsl
mov
mov
xchg
ret
repz
sub
int
xchg
insb
xor
push
out
sbb
sbb
addr16
xchg
adc
xchg
push
xor
mov
out
loop
or
movsl
fnstenv
xlat
cld
cmp
add
insl
lea
or
data16
fldl
sbb
je
jo
mov
popl
int
test
sub
xchg
int3
out
orb
lods
es
stos
inc
jnp
les
movb
hlt
fisubrl
mov
std
or
outsb
loop
xchg
stc
dec
sub
and
loope
mov
push
fs
icebp
cmp
dec
fdivrl
sub
inc
cltd
hlt
shrb
sub
movsl
aad
lret
cmc
ficoms
mov
aad
in
lea
insb
fisubl
dec
or
push
rol
mov
jecxz
stos
add
push
add
or
mov
inc
xchg
jge
call
lods
mov
sti
test
mov
mov
shll
pushf
hlt
rcl
pop
pusha
and
jbe
pop
fwait
lods
push
pop
out
ljmp
call
push
ljmp
test
mov
or
inc
add
push
int3
dec
popa
nop
lods
fimull
dec
xor
add
add
in
inc
cltd
cmp
push
aam
mov
xchg
in
test
dec
mov
and
icebp
decl
ret
or
cmp
lahf
adc
pusha
cltd
xor
jb
cmp
scas
mov
incl
push
cwtl
movntps
jge
aas
add
inc
lret
std
aad
fdiv
sbb
repnz
mov
adc
addr16
dec
jl
mov
mov
stos
xchg
nop
push
test
sub
mov
in
jl
testl
or
and
inc
cwtl
scas
fisubl
pop
pop
cmp
cmpsb
pop
jae
fcompl
imul
ds
daa
loope
les
pop
lahf
fsubrl
adc
into
pop
mov
insb
xchg
xchg
and
xchg
iret
rorl
inc
repz
decb
xchg
subb
push
push
mov
repz
pop
mov
jno
lret
pop
pop
aaa
les
int
test
std
or
push
ja
sbb
inc
cmpl
push
pop
call
mov
xor
inc
rcrl
lds
xor
mov
hlt
loopne
xor
mov
nop
rol
es
rcl
add
stos
or
addb
adc
out
lea
lds
xor
mov
jecxz
fs
push
ss
into
in
push
repz
je
lds
insl
jbe
ds
out
and
enter
pop
sbb
or
sub
inc
ja
xchg
fdivrl
sbb
push
pop
in
mov
add
mov
jp
andl
clc
andb
outsb
pop
inc
pop
int
mov
rcrl
out
mov
push
sbb
cmp
fcmovu
rcr
sbb
fadd
movsb
dec
adc
imul
pop
cwtl
les
lret
cmc
loop
inc
push
imul
cld
pusha
inc
fcoml
stc
je
repz
xchg
fidivrs
test
lret
enter
xor
icebp
call
out
ja
mov
test
stos
jle
lods
and
xorl
adc
xchg
imul
ret
xor
adc
mov
popf
push
fistpl
subl
mov
testb
outsl
mov
inc
sbb
push
mov
and
fisttps
addr16
xor
fimuls
push
cmpsl
stc
push
dec
push
or
adc
push
jecxz
rolb
xlat
lret
cs
test
pop
sbb
cmp
iret
ljmp
sti
pop
sbb
cmp
and
and
xor
pop
cld
push
and
inc
xor
loope
inc
push
jge
add
push
enter
cld
sub
mov
pop
dec
ret
add
dec
pop
enter
sbb
inc
mov
dec
mov
shlb
adcb
xchg
rclb
pop
sbb
xor
in
lods
mov
sti
loopne
cmpsb
call
enter
loopne
sbb
inc
xor
adc
inc
pop
es
imul
or
pop
idiv
sbb
push
inc
xor
popa
push
mov
mov
sub
jno
fists
nop
nop
test
cli
mov
inc
lcall
dec
shlb
sub
xchg
aam
lret
out
ja
nop
adcl
inc
push
fnstcw
sub
jo
mov
lret
fwait
shl
cli
adc
xchg
push
andb
xor
and
data16
imull
inc
mov
mov
xchg
into
pop
jnp
add
mov
nop
adc
mov
jb
arpl
imul
sbb
aaa
add
add
sahf
push
lea
jecxz
sbb
inc
stos
cmpsl
jl
test
xchg
mov
aam
xchg
into
loopne
loop
dec
push
ficoms
sbb
insl
fisubl
cs
cli
daa
inc
adc
ljmp
movaps
sub
popf
and
or
mov
push
pop
jno
lock
xchg
popf
xor
and
pop
iret
mov
cmpsb
add
insb
push
loopne
cltd
sbb
push
lods
lcall
jl
jmp
mov
xrelease
xchg
mov
and
dec
imul
sahf
je
lods
inc
sbb
test
mov
test
adc
sarb
push
mov
xchg
push
dec
xchg
jmp
sbb
fcomps
lcall
add
pop
lock
outsl
jb
ds
sbb
xchg
adc
sub
std
pop
mov
jge
cmp
mov
and
dec
jnp
fbstp
inc
leave
jb
inc
mov
sbb
lret
jne
jl
mov
mov
fcmovnbe
cltd
ljmp
cltd
fs
test
xor
xlat
inc
sbb
dec
sub
pop
sub
add
movl
mov
fdiv
dec
or
xor
sub
call
mov
cmp
repz
test
jge
dec
jnp
jl
xor
fisubrl
inc
idivb
sub
insb
sahf
addr16
xchg
sbb
mov
roll
dec
pop
out
insb
adc
lock
loop
fsubs
xchg
out
mov
cmp
lcall
test
cltd
repz
sub
addr16
xchg
xor
add
push
addr16
lock
filds
clc
sub
fadd
push
test
jge
cs
dec
sub
insb
jbe
repz
and
xor
testb
sbbw
test
pop
jecxz
add
outsb
ja
loope
insl
in
xchg
xchg
lret
adc
cmc
repz
shr
fs
push
mov
pop
cmc
ja
out
or
jo
or
push
mov
mov
xor
ret
fidivl
cltd
mov
movsl
sbb
cmp
sahf
xchg
ss
cmpsb
fdiv
mov
inc
sbb
pop
sub
popa
jl
pop
je
push
inc
mov
addr16
rcll
inc
call
int3
jecxz
popf
mov
lds
inc
psllw
add
sbb
imul
dec
call
jg
imul
lcall
sub
inc
out
mov
lcall
adc
mov
adc
divl
filds
sbb
pop
fs
xchg
inc
inc
aad
dec
jl
rclb
pop
stos
pushf
cmpb
adc
jo
dec
sbb
sub
jmp
mov
gs
imul
movsb
stc
and
aas
lock
xchg
pushf
out
xlat
bound
pop
mov
inc
imul
and
dec
mov
out
push
iret
clc
cmp
mov
jmp
mov
ss
mov
gs
das
cmp
ja
pushf
fsubr
jae
lds
xchg
popf
inc
sub
cwtl
mov
mov
add
in
pop
xor
cmpsl
push
push
lcall
cli
mov
lret
mov
dec
mov
and
inc
and
jmp
pop
testb
repz
inc
mov
in
jo
sub
jle
add
sti
add
xchg
shr
add
lahf
pop
iret
aas
add
lods
out
test
lret
sbb
jg
dec
popf
push
into
mov
mov
addr16
ss
xchg
stos
adcb
repz
xor
cmpsb
cli
dec
adc
jmp
xor
aad
add
div
pop
in
sbb
pop
daa
aaa
push
movsl
xor
xchg
adc
fmuls
cmpsl
mov
xor
scas
cmp
or
pop
jbe
arpl
cmp
loope
push
push
jmp
xchg
sub
ds
mov
nop
pop
enter
pop
jmp
in
push
out
ret
cmp
push
packsswb
xor
lcall
mov
enter
xchg
dec
add
packsswb
lret
add
inc
aaa
cmpb
push
mul
aas
mov
jno
pop
sbb
nop
dec
cltd
push
sar
dec
rcr
pop
lock
std
insl
test
bound
cwtl
jmp
enter
loopne
and
dec
lret
call
and
push
adc
push
push
pop
pop
je
cmp
mov
cltd
sbb
and
xchg
and
jg
ljmp
aaa
lock
repz
adc
mov
add
cmpsl
rep
xor
repnz
push
xorb
iret
add
movsb
mov
ljmp
out
xchg
cmpsb
xor
xchg
mov
add
jg
sti
sub
inc
leave
mov
jns
cli
into
lock
add
add
lock
aaa
push
test
dec
movsl
inc
hlt
jge
adcb
pop
dec
xchg
xor
lcall
mov
imul
mov
js
fidivs
call
and
sbb
push
enter
or
mov
add
icebp
fcompl
es
mov
ds
shll
loop
or
outsl
jne
adc
and
movsl
dec
repz
cmc
jmp
push
sub
xlat
bound
shl
fdivrl
les
mov
jno
mov
loope
push
in
cli
push
test
cs
sti
loope
sti
dec
fstps
dec
retw
cmp
out
push
dec
insb
push
sbb
xor
cmp
jo
sahf
cld
push
sbb
inc
ss
mov
imul
rcrb
call
in
dec
adc
xor
xor
push
inc
dec
xchg
ret
test
js
sbb
cmp
outsb
or
jns
inc
pop
scas
loopne
sbb
shr
scas
mov
pop
bound
ljmp
jbe
mov
jne
push
or
cmp
push
cmp
rcrl
sbb
out
push
inc
out
or
stos
lret
mov
mov
scas
pop
jecxz
sti
insb
mov
es
out
es
repnz
mov
mov
xchg
ret
adc
jno
jle
cmp
mov
pop
xchg
adc
clc
sbb
xchg
addl
push
sbb
fidivrl
fnsave
loope
icebp
arpl
sar
push
loope
sub
ljmp
cmp
cvtdq2ps
sbb
loop
insl
sbb
push
xchg
js
rolb
imul
neg
fwait
cltd
push
dec
xorl
scas
cmc
jecxz
inc
pushf
xchg
mov
aas
jg
push
pop
jb
sbb
sub
test
sbb
aas
xchg
gs
xchg
add
dec
dec
lock
jmp
addr16
into
inc
scas
jle
mov
ret
addr16
push
mov
add
int3
mov
and
add
or
adc
mov
xor
adc
in
in
push
mov
std
xchg
sbb
std
scas
add
inc
mov
or
int3
test
sbb
cmpsb
inc
int
push
mov
pop
mov
icebp
stc
mov
js
insl
rcrl
test
and
inc
jge
push
lret
imul
adc
jle
mov
dec
jge
xchg
idivl
xchg
push
dec
daa
out
cmp
dec
outsb
and
inc
popf
inc
xchg
int
outsb
adc
dec
leave
clc
xchg
dec
push
add
push
rorb
sahf
das
in
add
and
mov
repnz
fdivs
into
in
inc
out
hlt
and
ret
scas
idivl
test
mov
jns
push
push
test
xchg
outsl
fxch
ficompl
cwtl
jb
push
jl
fmul
mov
mov
xchg
outsb
mov
add
test
cmp
xchg
push
xchg
cmc
in
mov
dec
jbe
mov
or
lds
dec
sub
cmpsb
push
push
sbb
mov
mov
movsl
mov
mov
rcl
jle
jmp
push
int
push
mov
enter
popf
ret
or
mov
divb
iret
pop
push
addb
and
pushf
adc
pop
and
fdivrl
xor
leave
ja
xor
mov
cmpb
or
fisttps
push
sub
rorl
aad
sbb
inc
xor
push
mov
xchg
cmpsl
cli
jb
dec
movsb
cmp
or
dec
mov
xchg
test
ret
pop
dec
cmpsb
dec
rcll
ds
shlb
mov
in
fnstenv
push
or
cmpsb
adc
fstpl
rclb
dec
sets
sahf
pushf
mov
std
in
add
dec
mov
pop
stc
jecxz
jp
and
cmp
dec
jne
dec
xlat
scas
xor
mov
adc
mov
dec
jecxz
shrl
cli
jnp
push
inc
sub
or
jns
sbb
jne
add
filds
lret
sbbb
sbb
mov
pop
push
fidivl
out
adc
lahf
ljmp
mov
dec
inc
push
xor
je
and
call
xchg
dec
and
mov
insl
je
add
jge
dec
mov
lods
sbb
jmp
pop
mov
popa
dec
mov
stc
dec
pop
ja
jae
loope
idivl
inc
cmpsb
fwait
out
sub
test
popf
jl,pt
sbb
aas
pop
sbb
out
imulb
push
mov
int
js
rcll
inc
lock
sarb
ss
jp
sbbb
mov
rcrb
dec
arpl
lds
fiadds
mov
dec
inc
cmp
adc
pop
jnp
popa
aaa
and
and
sbb
loop
sahf
adc
and
mov
xor
push
imul
inc
mov
pop
push
jns
or
cmpsb
mov
daa
out
mov
jp
jge
rol
int
enter
jl
push
sub
dec
push
dec
inc
fucomip
inc
shrb
call
mov
aaa
es
out
push
adc
andl
hlt
ja
xor
insl
xor
repz
jmp
push
pop
loop
stos
cmpsl
adc
enter
xchg
sub
nop
cs
fisttpll
cmp
out
rolb
das
dec
jl
mov
subl
push
test
adc
js
call
sbb
movsl
mov
pop
stos
test
iret
roll
jg
stos
dec
and
pop
test
sahf
rcrb
xlat
and
inc
mov
std
bnd
xchg
cltd
mov
std
push
das
out
idivl
add
mov
adc
sub
mov
aam
push
sub
mov
cmpsl
fdiv
int3
dec
sbb
pop
std
int
add
cwtl
in
fnstenv
out
inc
lret
in
xchg
dec
and
or
insl
sti
xor
mov
imul
pop
ljmp
mov
sar
adc
jge
cmpb
mov
stos
ds
daa
and
mov
lret
mov
ljmp
jmp
push
idivl
repnz
movsl
cs
fidivrs
mov
push
shl
rorl
push
shlb
sbb
mov
xchg
jne
add
xchg
cmp
mov
sar
aaa
xor
in
and
sub
fwait
sbb
fs
popa
jno
dec
lods
xor
daa
or
jl
dec
aad
ffree
unpcklps
sbb
repz
mov
push
push
xchg
xchg
and
adc
mov
inc
cs
jae
and
jg
xchg
and
lods
in
out
or
sub
cmpsl
adc
scas
rcll
hlt
je
test
add
add
cmpsl
push
dec
cwtl
pushf
fldcw
inc
add
jl
lahf
sub
or
insl
fdivrs
adc
fstpt
inc
push
push
push
mov
les
dec
ja
clc
fwait
mov
add
cmc
cmp
in
lahf
sbb
fsub
pop
mov
add
sarb
fdivl
js
and
scas
sub
adc
sub
or
out
sub
sbb
cltd
rcll
pop
or
outsb
repz
fldenv
cmp
xchg
jl
addr16
jp
push
cltd
loop
mov
mov
add
in
adc
imul
enter
fistpl
adcl
mov
mov
push
pusha
imul
push
imul
inc
clc
xor
mov
addr16
xor
push
cs
pop
mov
loop
xor
push
out
repnz
shrl
scas
push
adcl
cwtl
pop
or
push
fsubrs
int
sub
imul
rcrl
xchg
push
cmp
inc
adc
sbb
xchg
in
xchg
aad
cmp
xor
or
mov
pop
out
scas
and
or
or
lcall
sbb
mov
hlt
pop
xor
adc
lahf
loope
test
dec
shrb
mov
xorb
mov
mov
mov
mov
or
cmpsl
bound
je
test
gs
sahf
dec
and
mov
push
jg
out
lds
cmpsl
inc
xchg
mov
sub
int
lea
pop
imul
iret
int
mov
out
enter
add
jb
cmpsl
add
adc
mov
cld
mov
mov
xchg
jae
inc
jnp
fistps
sbb
mov
dec
stos
cli
mov
adc
mov
fistps
mov
xor
and
int
pop
inc
push
lods
push
xchg
cmp
lods
lea
inc
cmp
adc
fisttps
and
mov
and
cmp
ja
pop
dec
mov
testl
je
push
scas
sahf
push
or
lods
mov
adc
mov
and
xlat
mov
leave
daa
adcl
dec
xchg
mov
mov
sub
es
rorl
sbb
cmpsb
pop
sub
shlb
sbb
mov
dec
sti
es
mov
repnz
shrb
rorb
fsubrs
xor
mov
and
jmp
ret
or
shll
adc
lahf
dec
sarl
add
in
cmp
sub
push
fs
outsb
repnz
push
and
test
ja
arpl
jns
and
testb
gs
insb
mov
jmp
xchg
test
seto
pop
mov
nop
insb
adc
adc
xor
push
in
cmpsl
adc
or
inc
in
jb
pop
outsl
xchg
out
fwait
and
or
fxam
dec
rcll
cmc
jle
pushf
mov
add
xchg
mov
jbe
mov
add
jl
addl
inc
addr16
dec
imul
sbb
mov
daa
hlt
sbb
in
and
push
dec
cltd
test
dec
pop
xor
xchg
ret
cmp
push
inc
outsb
jnp
inc
into
push
jno
inc
aad
or
aas
push
iret
test
dec
jne
add
out
cmp
mov
lock
xor
jle
sub
push
sbb
mov
push
jno
cmp
addr16
or
and
xchg
pop
push
andl
or
inc
cmp
mov
and
sub
dec
outsl
into
insl
ja
fildl
push
test
jnp
cmpsl
out
mov
andb
hlt
jo
cmp
pop
data16
inc
or
test
loope
push
ja
daa
js
idivb
lret
xchg
fwait
or
mov
js
cmpsb
out
sbb
add
cmpsb
es
push
or
cbtw
and
scas
dec
inc
or
insb
stc
cmp
popa
sub
add
add
jle
cmp
mov
orb
outsb
ja
daa
pop
in
push
dec
sub
pop
push
cmp
lds
jecxz
add
jge
dec
int
enter
repnz
clc
les
fs
cmp
out
aam
enter
xchg
dec
test
imul
and
popa
push
inc
mov
push
andb
cmp
push
scas
mov
mov
pop
fisttpl
scas
loop
mov
movsb
inc
out
sbb
pop
sbb
pop
xor
mov
xchg
mov
pop
jg
add
dec
add
inc
push
insb
adc
test
or
cmp
jmp
ret
cmp
push
pop
cs
adc
cmc
sti
in
pop
aad
sbb
push
mov
loope
pop
lret
push
and
pusha
xorb
dec
dec
loope
mov
cmp
andb
mov
das
testl
fwait
popf
jge
daa
sub
andb
pop
xchg
shll
jmp
pop
jb
pop
sub
jg
cmp
dec
jecxz
outsb
jb
cli
test
addr16
aad
aas
and
jle
stos
popa
jge
dec
adc
insb
sti
test
add
cmp
aas
jnp
cwtl
push
sub
stc
cmp
shrb
xor
mov
int3
mov
lret
pop
cld
cmp
out
mulb
addl
mov
fstpl
arpl
add
ljmp
dec
xchg
add
cmp
xchg
fs
mov
inc
test
cmp
int
sti
or
xchg
ficompl
mov
jmp
xor
mov
arpl
jecxz
sbb
lock
mov
xlat
lods
jno
loope
sahf
mov
subl
jecxz
jge
cmc
or
jbe
call
loope
cld
sub
sbb
mov
test
shrb
stc
int3
sarb
popl
add
jb
stos
xchg
mov
push
cltd
sarl
xlat
scas
outsl
lock
jo
mov
andl
sbb
xchg
enter
inc
outsb
mov
jg
fdivs
aaa
cli
push
mov
mov
push
and
adc
mov
cmc
and
adc
js
aam
rorb
arpl
jo
xchg
mov
add
out
pusha
mov
lahf
mov
stc
in
pop
cmp
subl
push
rcrl
cmc
inc
pop
mov
pop
mov
lock
push
jecxz
lock
pushf
push
dec
leave
push
push
xchg
push
or
ja
mov
js
jmp
jnp
xor
aad
out
sbb
pusha
fyl2xp1
mov
stc
out
push
test
adc
popl
add
push
out
add
push
sti
movsl
es
mov
xchg
test
sub
int
jo
add
push
in
dec
cmp
jns
xor
mov
es
movsb
jecxz
test
mov
mov
lock
js
loopne
pop
pop
jl
sbb
xchg
push
mov
imull
or
sbb
loop
pop
pop
shrl
movl
dec
jnp
pop
mov
and
data16
jns
pop
push
dec
mov
lahf
sub
push
xor
jle
leave
es
pop
dec
add
in
add
push
jb
inc
pop
adc
lcall
jb
sbb
lock
xor
mov
mov
jmp
xchg
push
sub
inc
outsl
add
push
int3
mov
dec
jl
fmuls
cltd
add
sbb
xchg
mov
jno
aad
loop
daa
out
mov
cld
fnstcw
sbb
jmp
xchg
stc
aaa
int3
sbb
inc
jbe
jbe
lahf
push
jae
lock
fwait
in
cmpsb
roll
and
pusha
jp
and
or
inc
adc
add
jp
imul
je
xor
out
leave
mov
xchg
das
add
mov
pop
sbb
out
lahf
cmpsb
adc
aas
inc
mov
out
sbb
or
or
rolb
mov
dec
and
loop
in
xor
lock
inc
insl
xchg
add
sbb
inc
clc
pop
pop
xchg
icebp
bound
fbld
mov
push
pop
clc
xchg
xchg
or
and
jno
and
or
es
stc
add
popf
aaa
sub
mov
mov
push
push
cmpxchg
mov
mov
shl
sahf
outsl
sbb
out
popf
psubq
mov
push
in
stos
mov
cmc
lahf
ds
mov
cmpb
and
xlat
dec
aaa
call
jge
aam
xchg
sub
push
add
cmp
jle
sub
mov
adc
mov
out
repnz
sbb
fistl
repnz
testl
sbb
pop
jl
dec
mov
cld
fldenv
stos
and
imul
push
out
out
in
add
call
je
jecxz
out
push
add
pop
enter
test
scas
pushf
int3
nop
inc
and
dec
stos
idivb
jp
push
cli
hlt
push
push
fnstenv
push
dec
pop
ljmp
lds
adc
sub
add
sub
repz
sti
fcmovnb
das
sbb
daa
rorb
mov
add
out
dec
fdivs
mov
pop
push
jmp
aas
mov
fstl
jle
jb
mov
rcrb
out
mov
test
lcall
jmp
rol
lahf
jb
cmp
xor
pop
cmc
sbb
iret
and
adcb
out
push
dec
lret
ja
sbb
shll
push
mov
rcl
xor
sahf
mov
pop
mov
mov
sbb
mov
arpl
pusha
aaa
xor
or
movsb
or
repz
stos
movsb
lods
shl
bound
lcall
daa
fcmovb
cltd
mov
and
mov
cmp
enter
stos
stc
xchg
notl
xchg
dec
ljmp
lock
scas
cmpsl
sti
mov
mov
mov
mov
shll
mov
fistpl
sbb
jmp
sbb
pop
jmp
inc
jge
push
jbe
cmc
in
int
sub
xchg
repz
es
push
loope
mov
dec
push
ficompl
fsubl
sbb
xchg
push
daa
inc
inc
push
xchg
push
mov
subw
jo
clc
loop
push
or
aaa
cmp
test
adc
jge
inc
pop
out
test
test
out
dec
inc
insl
aas
or
das
aaa
psraw
pop
and
loop
sbb
into
mov
ja
imull
pushf
in
mov
cltd
dec
jmp
fdivs
add
jns
and
rcll
in
popf
enter
mov
inc
dec
pusha
mov
faddl
inc
push
addb
sbb
push
das
call
cld
es
pop
or
jo
cmp
or
sub
out
cli
stos
mov
mov
es
scas
es
xor
push
outsl
push
es
pop
shrb
das
mov
testb
fdivl
mov
insb
ffreep
dec
rcrb
push
sub
push
testl
loop
and
sub
and
mov
lock
movsl
adc
dec
aam
pop
or
sbb
pop
pop
or
pop
std
push
popf
pop
adcl
adc
push
into
cwtl
or
push
jle
push
add
int3
and
nop
pop
movl
add
in
cmp
lahf
les
aam
lods
pop
push
and
xlat
sar
push
mov
fisttpl
test
into
inc
loop
in
jne
test
cli
push
aad
imul
leave
lea
lea
jno
or
mov
pop
jl
or
popa
movb
aam
xchg
pop
dec
xchg
jbe
shlb
add
adc
mov
jno
xchg
adc
jp
shll
pop
shrb
pusha
call
sbb
xacquire
mov
or
sahf
mov
outsl
jle
addr16
out
ret
fistpll
repz
ror
lea
int3
in
aad
lret
mov
test
mov
call
pop
je
insb
lods
pop
push
ret
push
insb
pop
add
push
xor
movsl
and
xchg
rolb
cmp
xor
ds
adc
xchg
stos
sarb
xchg
adc
fucomp
loop
repnz
and
xor
dec
insb
push
clc
jmp
iret
xchg
das
xchg
mov
sub
arpl
loope
in
jg
in
xor
outsb
cmp
jl
fs
push
sub
xchg
ror
mov
cmp
add
push
mov
sub
push
outsl
mov
ret
mov
mov
or
fnstcw
ret
add
cmc
and
jge
aam
sub
icebp
out
jmp
pop
cmp
es
out
movsl
fisttps
fsubs
or
push
and
xor
cmp
shll
daa
pop
mov
mov
adc
inc
sbb
pop
xchg
enter
add
mov
pop
xchg
sub
js
dec
cmc
mov
adc
push
adc
pop
mov
cmpsb
testb
push
popa
stc
jns
mov
pushf
pop
inc
lock
mov
mov
push
imul
repnz
ret
mov
cli
mov
sbb
inc
insb
ret
or
jle
cmc
shrl
dec
clc
xorb
into
movsb
addr16
jecxz
ret
orl
sub
sub
sub
popa
subw
and
cmc
das
pusha
add
sbb
and
pop
repnz
jbe
iret
pop
or
mov
loopne
pop
xchg
aas
jb
pop
mov
sbbb
xchg
stos
xlat
ret
pop
jp
test
xchg
xor
pop
dec
popa
mov
insl
test
xchg
in
ljmp
mov
movsl
jo
xor
movsl
pop
roll
dec
decb
cmc
adc
push
jmp
insl
or
jns
orb
loop
pop
out
lods
in
xor
push
push
pop
adc
sbb
add
jno
aaa
loopne
cs
pop
scas
mov
adc
imul
subb
ret
adc
push
push
and
pop
xchg
xor
int
xchg
sub
jle
in
enter
insl
fsubr
adc
pminub
lods
mov
das
into
cmpsb
adc
mov
imul
ror
scas
push
in
stc
dec
xchg
nop
or
lret
xor
pop
cmc
imul
hlt
sub
mov
sbb
inc
pop
xchg
ss
inc
mov
xor
push
mov
inc
into
inc
movsl
cmp
insb
push
inc
sub
xchg
xor
inc
mov
xchg
push
mov
shrl
ret
stos
cltd
movsl
stos
mov
xor
add
into
scas
enter
jmp
sbb
add
dec
xchg
stos
rcll
push
mov
gs
dec
mov
into
insl
lods
jb
decl
xor
pop
pop
in
and
std
stc
add
popf
add
pop
jl
adc
aam
jmp
subb
mov
xchg
and
jge
push
cli
adc
adc
fmuls
scas
aas
push
cmpsb
sub
movsb
mov
outsb
int
adc
movsl
pop
cli
out
mov
sub
and
lods
out
mov
ljmp
jno
xchg
out
cld
jl
mov
push
mov
xchg
add
dec
pop
ljmpw
leave
mov
cmp
es
lcall
inc
fwait
rorb
jge
jno
or
rcr
dec
call
push
jne
out
add
pop
mov
mov
mov
mov
out
js
aas
mov
out
sarb
mov
fldenv
stos
xchg
in
jp
sahf
fdivl
xchg
subb
ja
sbb
xchg
cmp
sub
sub
sub
fwait
jge
push
cmp
mov
ljmp
jp
mov
cmp
fstl
js
xchg
test
add
or
test
stc
fdivrs
or
dec
jle
js
in
cwtl
jg
mov
fcompl
iret
sbb
movsb
push
and
lods
fcmovbe
push
add
pop
insb
push
lret
loop
mul
icebp
or
test
pop
popl
mov
repz
stos
cmp
push
fimuls
loope
add
sub
dec
dec
sub
pop
rorl
fistl
dec
push
sub
and
aas
es
mov
pop
mov
out
lahf
adc
push
lcall
and
aaa
dec
pop
xor
pop
bound
je
ds
xorl
push
pop
inc
mov
sub
sarb
rcrl
lahf
sbb
mov
out
cltd
cs
xchg
pushf
rolb
repz
sbb
pop
adc
push
fucomip
jnp
scas
in
sub
mov
jg
push
insb
sbb
jl
fisubrl
call
sbb
sbb
or
xchg
idivb
adc
inc
popf
es
ds
in
pop
stos
fnstenv
mov
test
nop
dec
inc
add
dec
pop
dec
hlt
pusha
fucomi
aaa
push
inc
dec
cmpb
out
rolb
aaa
xor
idivl
jno
sti
and
mov
popa
pop
aam
andl
push
inc
pop
test
sbb
sbb
adc
ret
pop
pop
cmpsl
fs
shrb
lods
cmp
in
push
mov
xor
adc
jne
sub
mov
int3
add
test
xor
outsl
push
dec
and
iret
push
sub
clc
add
mov
mov
xchg
mov
mov
sarl
cmpsl
push
adc
push
mov
insl
lahf
mov
dec
int
mov
xchg
cmp
sbb
mov
shrb
into
add
test
aam
ljmp
sti
mov
adc
andb
rcll
or
sub
jp
filds
push
xor
inc
imulb
jp
andb
lock
inc
push
pop
inc
loope
call
mov
adc
inc
or
cld
jnp
or
inc
sub
sub
sub
dec
filds
fdivl
hlt
mov
xchg
hlt
pop
dec
inc
cmpsl
mov
ds
mov
insb
add
dec
dec
rcrb
scas
mov
adc
inc
xchg
and
addr16
and
int3
nop
dec
insl
fidivl
out
jno
and
xchg
jae
push
or
roll
add
add
pop
dec
jmp
fdiv
movsl
pop
aaa
leave
xchg
fwait
mov
add
pusha
int3
sub
xor
lcall
dec
pop
xchg
cmpsl
sahf
cwtl
jl
mov
inc
push
incw
stos
xchg
aad
and
testb
es
push
fs
stos
pop
mov
push
pop
les
pop
or
sahf
fisubs
mov
outsl
stos
sbb
ss
push
push
fwait
shr
out
jne
lods
or
scas
nop
cmc
xchg
das
lahf
aad
nop
mov
adc
sbb
loopne
mov
sbb
inc
fnsave
daa
adc
mov
mov
mov
inc
sar
lods
sub
in
mov
push
xor
pop
mov
fdivl
daa
out
out
dec
lret
popa
les
jecxz
mov
push
add
pop
jecxz
dec
pop
sbb
outsl
mov
adc
mov
stos
push
push
ficomps
mov
push
hlt
mov
fstpl
sub
lcall
adc
call
movsb
pop
cmp
les
fnstenv
hlt
pop
std
xor
pop
mov
sbb
or
push
shrb
mov
xchg
test
adc
aam
stc
daa
pop
xor
sahf
jno
dec
mov
jmp
fwait
or
bound
inc
adc
adcl
lahf
test
xchg
in
mov
popa
dec
push
cmp
sub
jle
xchg
in
cltd
lds
loope
mov
jb
push
cmpsb
stc
arpl
xchg
jl
and
xor
xor
insl
les
daa
inc
shll
adc
mov
arpl
lea
xor
jbe
inc
xor
bound
adc
call
xchg
sub
stc
stos
lahf
mov
cmp
arpl
cld
andb
inc
or
pop
scas
das
xor
ljmp
add
pop
es
repz
mov
push
and
mov
nop
and
lea
aad
inc
aad
jp
cwtl
out
pop
gs
push
xchg
and
leave
push
add
cwtl
ret
repz
into
and
ss
xchg
cmpsb
test
inc
ret
mov
xchg
sub
stos
js
xchg
push
xchg
jp
popl
cmpsl
test
cltd
scas
cltd
add
inc
sti
enter
cwtl
mov
or
ljmp
add
lahf
add
insb
and
push
and
jge
cmpl
sti
push
test
sbb
repnz
push
push
fcoml
sub
adc
in
xor
add
lret
push
jo
fstl
mov
add
lcall
mov
stos
fisttpl
dec
jbe
xor
mov
push
insb
xchg
mov
loop
xchg
pop
ret
aas
and
sbb
adc
mov
shlb
dec
push
cmp
mov
adc
into
test
adc
xchg
or
ret
in
idivb
adc
push
cmp
loop
test
lods
cmp
sub
lahf
arpl
or
push
adc
mov
leave
out
clc
pop
inc
filds
decb
or
aad
xchg
push
imul
xor
mov
jl
adc
rorl
out
mov
add
dec
push
push
divl
dec
cmp
xchg
fcmovnu
clc
push
mulb
aad
sbb
jecxz
je
mov
test
dec
icebp
xor
pop
mov
xchg
fwait
arpl
cld
mov
lret
lret
ja
hlt
cmpsb
inc
xchg
out
lea
lcall
push
jno
jg
and
daa
cltd
out
mov
xor
test
mov
mov
sbb
aas
adc
das
popa
push
mov
xlat
das
pop
xchg
add
in
andl
dec
rcrl
push
not
push
cmp
add
mov
outsl
repnz
mov
out
mov
lahf
shll
dec
cmpsb
shr
mov
mov
xor
dec
scas
dec
xor
inc
push
pop
inc
push
push
movsb
repnz
or
test
addr16
sti
out
push
xchg
jl
lret
int
and
inc
jl
arpl
cmp
inc
lds
push
or
xor
xor
xchg
pop
pop
mov
jle
and
dec
sbb
or
jmp
sbb
xor
test
inc
insl
sbb
int3
js
sub
xchg
cld
mov
shr
mov
lods
ljmp
ljmp
mov
scas
das
test
xchg
push
popa
data16
mov
push
inc
dec
xlat
sub
pop
lret
xor
cld
cmc
adc
add
dec
mov
pop
imul
leave
je
push
cmp
xor
or
mov
out
inc
or
jle
push
test
jp
das
fcmovne
push
pushf
mov
xlat
pop
jae
jge
inc
iret
out
xlat
mov
lock
pop
cli
and
sbb
pop
loop
jg
pop
and
divb
inc
mov
in
inc
xchg
cltd
xchg
lcall
or
pop
mov
mov
idivb
pushl
lock
fldz
dec
adc
aaa
jecxz
and
add
cld
push
jnp
mov
add
ret
sub
sbb
idiv
lods
or
cmpsl
mov
cmp
dec
sub
pop
repnz
and
pop
sub
mov
pusha
shll
push
rol
lds
sbb
outsl
fdivr
pop
mov
fwait
loope
push
inc
pop
xor
scas
in
js
ret
es
dec
das
aam
addb
jno
pop
pop
push
add
cmc
stos
inc
or
dec
lea
enter
jnp
loop
loop
in
jae
enter
imulb
or
mov
pop
push
jl
cmc
pop
shll
loop
xchg
aaa
popa
push
imul
jbe
int
cmp
in
aas
jl
fistpll
ret
pop
mov
push
and
and
or
mov
add
lret
lds
xorl
out
mov
into
cld
lahf
in
fimull
mov
stc
lods
add
outsb
addb
add
faddl
neg
cmp
aaa
inc
outsb
fldl
inc
jae
add
push
fldt
stc
and
pop
or
and
bnd
ljmp
and
pop
rorb
mov
sub
mov
jecxz
outsl
push
iret
lret
sbb
movsl
flds
pusha
jae
mov
push
jmp
test
dec
xlat
pop
mov
fcomip
and
mov
mov
cmp
andb
leave
fldt
aad
stc
int
insb
adc
mov
mov
push
sahf
mov
mov
movsl
push
les
idivb
cmp
jae
add
mov
xor
mov
mov
pop
push
add
mov
sub
out
dec
xchg
jns
lods
aas
xchg
in
mov
test
ja
add
and
ror
cmp
test
or
cmc
stos
pop
mov
sbb
shl
jbe
or
cmp
dec
xchg
cli
repnz
push
rorb
sbb
or
push
xchg
out
push
cmp
data16
adc
jmp
jo
push
sbb
mov
int
les
push
mov
int
sbb
out
sar
imul
mov
pop
add
ss
inc
mov
dec
dec
iret
push
add
cltd
scas
mov
pop
xchg
and
insl
push
das
and
loopne
scas
rcr
mov
mov
or
dec
xchg
movsl
roll
add
xor
testb
xor
sbb
inc
cmp
inc
add
pop
lock
popf
call
fmuls
adc
pop
mov
repnz
and
pop
add
lods
dec
mov
dec
pop
mov
mov
mov
add
mov
out
ljmp
dec
mov
or
cmpsb
ret
mov
sbb
in
cmp
out
push
aas
mov
mov
iret
ja
fbld
pop
in
jp
sbb
pop
sbb
mov
adc
sahf
cmc
fwait
push
out
adc
notb
sbb
call
xchg
movl
lcall
inc
dec
cmc
scas
popf
jp
cmp
cmp
jge
xchg
stos
mov
mov
rcrb
out
inc
add
adc
outsl
push
jnp
inc
adc
push
cmp
lods
jo
ret
pop
pusha
enter
jge
xor
adc
int
sahf
pop
mov
pusha
sahf
and
shr
xchg
jge
test
push
pop
sub
xchg
shrb
addr16
inc
add
pop
mov
cmc
xchg
dec
mov
insl
outsb
or
divb
hlt
jns
jno
pop
pop
outsb
call
loop
mov
adc
rcll
int3
loop
add
cmp
and
leave
movsl
fdivr
jno
dec
inc
jb
shr
xchg
pop
stos
lods
out
adc
imull
cmp
lods
jne
xlat
out
cmpsl
ljmp
mov
jle
je
call
cmp
inc
mov
sub
mov
add
push
push
sub
call
jns
adc
pop
jne
repnz
adc
sti
push
adc
mov
mov
fisttpll
xchg
arpl
mov
insl
mov
in
testl
xchg
mov
dec
test
test
mov
xchg
lock
inc
xor
mov
lock
jbe
int
test
hlt
jae
hlt
pop
dec
jbe
sbb
pop
aas
dec
sbb
lds
ficomps
or
test
jecxz
sub
cs
aad
leave
add
mov
pop
shl
ljmp
push
aad
sub
insl
movsb
test
mov
sub
push
out
pushf
mov
jb
faddl
inc
mov
mov
repz
or
pop
jp
mov
sbb
scas
lods
fldl
add
ja
jae
and
cs
mov
pop
pop
push
sub
fdivrs
and
and
imul
aas
sti
movsl
inc
jecxz
mov
mov
stos
mov
sbb
lret
mov
xor
and
mov
and
mov
pop
sub
mov
out
xchg
dec
or
pop
stc
cmp
push
ljmp
test
je
xor
xchg
or
adc
or
lods
lcall
sub
mov
mov
aad
mov
sub
movsb
adc
imul
push
cwtl
das
sbb
popa
adc
cld
mov
lea
test
cmp
loop
add
pop
stos
pop
jle
ret
cmp
fisubrl
jg
loop
sbb
or
mov
or
cmp
sub
insl
push
cmp
repz
xchg
pop
pusha
cltd
out
test
jge
xor
xchg
popf
hlt
mov
jle
es
in
aam
int
dec
sub
dec
or
adc
jnp,pt
aas
nop
and
popa
pop
pop
cmp
call
les
out
push
push
jno
stc
dec
add
imul
dec
cmp
pop
jno
cmpsb
in
push
xchg
jmp
sub
leave
push
inc
cmc
push
adc
xor
xchg
xchg
jge
pop
push
fdivr
pop
sub
shl
pop
movsl
stos
lcall
mov
jl
test
pushf
outsb
iret
popf
out
xchg
cld
fsubl
push
mov
sub
bound
fwait
in
sahf
out
enter
jge
jbe
jne
xchg
cmp
jne
cmpsl
mov
cmp
jns
in
fstl
or
lods
sub
inc
mov
jg
push
aad
mov
mov
adc
jns
xlat
call
ja
cwtl
ficoms
dec
add
sub
movsb
jo
xchg
and
adc
mov
movsl
ficoms
mov
sbb
and
sti
pop
mov
adc
out
bnd
aad
cmp
into
and
jns
fwait
lret
loop
stos
lret
sbb
fisttpl
sarl
adc
ljmp
jl
xchg
lods
and
in
fistpll
add
popf
xor
and
add
cmp
les
lret
pop
adc
out
loope
stos
cmp
dec
cmp
movl
in
out
jno
mov
mov
ljmp
outsb
into
and
loop
mov
cmpsl
scas
or
sub
inc
mov
or
mov
sti
loope
or
fstl
xor
testb
inc
lret
mov
sbb
jno
lods
mov
stos
out
fwait
daa
pushf
es
cltd
fiadds
in
arpl
ja
xchg
pop
outsb
leave
addr16
xor
push
or
test
xchg
dec
cmpl
test
mov
ret
and
cmp
sbb
xor
cmp
popf
jne
daa
push
test
lahf
push
mov
sbb
or
or
mov
imull
aad
xor
dec
inc
jp
outsb
mov
sub
push
mov
push
or
cmp
pop
out
test
xor
push
call
mov
test
sti
sub
fcoml
cmp
jmp
mulb
bound
push
adc
mov
push
sub
cmp
in
push
sub
std
jae
nop
ss
test
mov
mov
push
cmpsb
push
jle
mov
inc
scas
leave
mov
fistpll
push
mov
inc
mov
arpl
enter
shrl
adc
push
and
inc
lods
inc
xchg
fs
aad
xchg
mov
int
cmp
mov
xchg
test
repz
hlt
cmpsl
jbe
jmp
adc
in
dec
xor
mov
dec
shrb
push
das
mov
cmc
ror
sub
xchg
rcl
test
mov
mov
xor
push
test
xor
enter
sbb
or
mov
inc
mov
jmp
bound
pop
repz
pop
push
pushf
movsl
cmp
jb
sbb
push
mull
leave
jae
add
icebp
xor
call
xor
loopne
in
push
push
loopne
andl
xor
ficoml
lea
jns
jmp
mov
js
or
fcmovnb
das
dec
pop
cmp
xchg
lret
js
mov
add
adc
shlb
xor
gs
dec
mov
fisttpl
xchg
push
faddl
into
mov
xchg
mov
xchg
mull
and
lcall
cld
jbe
dec
pop
int
dec
popf
ret
inc
mov
adc
jbe
pop
pop
cmp
and
mov
movsl
mov
outsl
and
fiadds
xchg
fmul
loope
sti
enter
stos
mov
add
fstpt
nop
and
pushf
push
mov
sahf
dec
je
lods
outsb
out
sub
dec
dec
adc
lock
sbb
scas
daa
xchg
pushl
inc
cmp
js
sbb
aaa
movsl
mov
loope
std
xchg
xor
xchg
jecxz
push
mov
dec
mov
xchg
sbb
sub
dec
mov
lds
mov
inc
push
push
mov
adc
mov
out
push
imul
cmp
pop
stc
inc
sti
repz
mov
test
sbb
into
cld
test
jo
mov
aad
push
push
pop
mov
mov
notl
stos
xchg
xchg
jo
fwait
das
sbb
mov
jp
or
rorl
mov
push
gs
mov
clc
and
data16
arpl
pusha
pop
hlt
lcall
iret
adc
xor
les
mov
pop
add
je
repz
sbb
add
dec
xchg
repz
icebp
sti
test
adc
sarl
and
loop
hlt
daa
adcb
ret
lcall
sbb
add
add
loope
sbb
gs
pop
loopne
test
cmp
aad
push
mov
stos
test
jns
stos
inc
dec
cmc
xor
xchg
adc
push
push
call
test
add
dec
xor
dec
lret
xchg
mov
repnz
insb
pop
push
addr16
and
add
das
aas
dec
mov
shrl
or
jl
lcall
cmp
pop
inc
loope
pop
fnstenv
mov
insb
lret
mov
mov
cld
jns
mov
jmp
imul
jae
aad
cmpsl
cmpsl
sarb
dec
xchg
mov
lods
push
inc
repz
test
iret
scas
out
mov
inc
sarb
hlt
outsl
das
push
or
dec
jb
scas
repz
jl
xor
mov
xor
loop
ds
rorb
dec
inc
mov
imul
cmp
stc
aam
icebp
in
cmp
lods
xchg
xor
int
push
ds
mov
rorl
add
stos
fld
push
jne
push
dec
add
out
call
xor
fst
insb
les
pushf
mov
sbb
movsb
mov
xchg
jb
xchg
add
mov
int3
push
or
pop
in
out
lea
push
mov
sub
popa
cmp
xchg
insl
adc
mov
jl
insb
jp
jb
out
pop
sub
add
inc
dec
lret
inc
stos
fildl
mov
inc
js
jmp
jp
test
loopew
push
and
and
push
mov
push
lcall
cmp
push
cmp
les
adc
jbe
into
add
cmc
test
mov
cs
std
out
sbb
inc
dec
int3
dec
xchg
popa
xorl
pop
repnz
inc
lods
push
loop
add
jbe
aas
sbb
cwtd
aas
sbb
cs
dec
loopne
and
call
ja
js
fcomi
iret
mov
sbb
shlb
arpl
mov
sub
popf
adcb
cmp
in
idiv
test
add
packssdw
xor
lcall
repnz
popa
repnz
outsb
push
adc
xchg
xchg
insb
insb
cmp
int3
scas
add
mov
add
push
pop
shrl
mov
scas
cs
dec
addb
lret
mov
iret
push
push
inc
dec
addr16
les
pop
imul
add
popf
outsb
push
xor
jmp
push
mov
clc
push
jb
in
xchg
mov
mov
leave
pop
in
in
jnp
shll
mov
sub
in
in
adc
mov
jns
sub
jno
mov
xchg
leave
scas
pop
sbb
insl
jge
test
xchg
xchg
mov
in
jge
sbb
xchg
sub
rcl
sbb
adc
arpl
mov
cmp
in
push
test
out
fwait
or
nop
outsl
out
and
push
mov
inc
and
pusha
dec
adc
test
scas
mov
sub
pop
faddl
popf
and
jne
mov
mov
movb
adc
cmp
call
leave
imul
jl
pop
sbb
push
aad
add
xchg
jae
cs
pop
mov
or
mov
dec
js
fs
xchg
jge
push
stc
or
jmp
ret
incb
push
cmpsb
adc
aaa
int3
fldt
xchg
shll
ja
sub
test
inc
xor
loop
mov
loopne
call
mov
mov
cmp
push
mov
out
push
subl
push
in
movsl
sahf
addl
xor
push
int
into
pushf
int3
aam
inc
iret
test
mov
dec
and
ss
inc
jmp
ljmp
push
stos
insb
inc
sbb
icebp
or
and
gs
sub
pop
mov
aad
stos
fsubr
lahf
mov
std
scas
lods
in
test
cmp
andl
enter
add
ret
inc
test
push
popf
out
outsb
jl
mov
rcrl
repz
dec
xor
mov
in
push
push
cmpsb
sbb
mov
jl
js
movsb
call
adc
or
pop
xor
adc
inc
push
pop
xchg
inc
rcr
pop
imul
pop
sti
das
je
stc
mov
scas
mov
dec
shrl
cmpsl
sbb
mov
enter
and
cld
push
sub
jne
aaa
sbb
ds
cmp
pop
pop
mov
loop
fidivrs
mov
sbb
in
in
roll
test
push
test
cmpsb
or
mov
xlat
xchg
fmuls
jae
push
inc
in
data16
shlb
push
in
sbb
xchg
cmpsb
mov
mov
lods
inc
jns
or
cmpsb
xor
xchg
push
jb
xor
push
mov
pop
pop
mov
out
jns
pop
icebp
pop
push
mov
stc
lds
es
push
dec
mull
jecxz
add
mov
jae
mov
nop
rcrl
cs
rcll
es
ret
repz
iret
icebp
mov
jne
rcll
mov
ss
out
mov
sbb
ror
call
dec
push
sahf
sbb
in
and
loope
fmul
mov
stc
aas
jle
jne
sbb
notl
mov
xor
mov
sub
sahf
add
pop
lcall
aas
adc
idivb
inc
add
das
lret
popa
lret
dec
subl
add
outsb
lret
sub
adc
cli
inc
push
cmpsl
imulb
cltd
popa
in
or
out
mov
fists
and
mov
cmpsl
cmpsb
insb
inc
sub
sbb
xchg
dec
into
mov
jbe
cmpb
test
push
repz
adc
outsl
stos
outsl
jg
push
pop
dec
and
mov
jge
je
xor
stos
sbb
sub
jge
arpl
or
add
jbe
fwait
lret
lds
leave
jecxz
xor
test
mov
xor
fisubs
rcl
push
repz
in
lods
lahf
ss
sub
cs
loope
imul
mov
hlt
sub
adc
and
push
inc
mov
lea
aam
adc
fnstsw
mov
xchg
sarl
adc
mov
test
loope
pop
lds
pop
xor
scas
fsts
stos
mov
rcrl
test
stos
fsub
xchg
addb
inc
shll
fsubrs
push
lds
loope
aas
clc
mov
add
shrl
js
hlt
test
std
mov
into
sbb
push
pop
adc
mov
xor
or
and
mov
ret
xchg
sub
mov
stc
aam
xlat
scas
dec
or
aad
lds
cmp
aas
xchg
dec
lods
iret
sub
xor
push
push
push
cmp
mov
push
pop
mov
cmpl
jle
cmp
addr16
out
inc
int
or
aad
or
lock
inc
enter
cmp
mov
adc
and
sub
hlt
jb
push
jbe
cmp
jmp
push
test
jecxz
dec
jns
inc
sub
mov
out
aaa
mov
jecxz
cmpsb
daa
push
inc
hlt
xchg
pop
mov
icebp
test
add
call
push
inc
sub
mov
inc
aad
cmpsl
je
movsb
sub
jno
lret
xchg
fiaddl
or
lods
lods
pop
jo
jl
xchg
mov
xchg
cmpsl
pop
addb
jns
int3
mov
loop
mov
sahf
nop
lahf
sbb
jg
arpl
pop
lock
mov
pusha
shll
pop
hlt
push
pop
and
mov
subl
ret
cld
sti
inc
out
fisubrl
cmpsl
pcmpgtw
sti
or
sahf
mov
jb
cli
mov
lods
sahf
das
sbb
insl
sub
stos
loop
push
jmp
push
sbb
jae
shrb
in
mov
mov
lret
add
xchg
pop
push
andl
clc
in
rclb
scas
and
popf
aad
shrb
test
mov
add
xchg
shll
mov
adc
data16
adc
cmp
mov
push
xor
jecxz
sahf
scas
fnsave
setb
ret
mov
shrb
mov
ret
sbb
adc
mov
sbb
xchg
cwtl
add
cmpsl
icebp
mov
push
dec
adc
mov
inc
addl
je
jb
mov
in
daa
in
sub
fcmovb
inc
mov
inc
push
add
jle
mov
mov
jae
or
jo
loop
aad
inc
cmpxchg
cmp
xchg
or
xor
mov
insl
fwait
mov
mov
pop
fmulp
dec
and
fsubrl
push
jmp
adc
nop
cmpsl
outsl
pushf
ror
call
xchg
je
ljmp
lret
sahf
jecxz
jno
pop
imul
sahf
xchg
setp
and
pop
mov
jg
mov
fmuls
pop
push
retw
pop
lea
pop
bound
jo
or
sar
dec
rcll
xchg
test
mov
inc
popf
sbb
xchg
loop
jns
ja
das
pop
pop
push
popf
insl
dec
mov
jne
mov
and
negb
in
sbb
sbb
in
stc
jns
jp
sarl
ljmp
cli
pushf
aad
outsl
lock
and
sub
mov
and
xchg
xchg
aaa
push
pop
xchg
sbbb
push
and
cmpl
inc
fnstenv
jae
sahf
adc
aad
outsb
xor
das
dec
xchg
sub
xchg
adc
inc
inc
mov
sub
mov
mov
ja
sbbl
out
jbe
ret
icebp
jg
ficoms
pop
arpl
ja
and
dec
int3
into
jp
nop
in
inc
enter
jne
test
pop
sub
sub
cs
xchg
pop
add
cmp
mov
test
or
fstl
das
add
pop
push
leave
pop
sub
xor
jae
push
push
add
or
stos
popa
adc
and
jmp
imul
fbstp
add
push
cli
cmc
push
add
in
push
dec
push
in
loopne
jge
fsubs
in
dec
jl
adc
fisttpl
scas
repnz
adc
dec
jnp
prefetch
push
jbe
push
xchg
or
dec
add
dec
out
inc
cwtl
mov
int3
hlt
or
fs
js,pt
lods
iret
or
xor
push
cmp
sbb
cmpsl
xchg
xlat
cli
lock
js
loop
lock
mov
xchg
stc
jle
test
in
in
push
xor
mov
mov
sbb
adc
inc
mov
inc
mov
mov
sbbb
movsl
adc
jg
and
jl
mov
push
jp
add
rolb
imul
in
or
ss
fcomps
xor
push
mov
shlb
sub
outsb
mov
pop
addr16
lods
movsb
dec
out
mov
fnsave
cli
xchg
in
icebp
aaa
sub
mov
inc
cmpsb
pop
jmp
nop
pop
jns
sub
mov
cld
or
or
shll
fwait
sub
adc
or
mov
pop
sub
movsb
addr16
push
xor
mov
fidivrl
sarb
add
mov
inc
push
fwait
leave
ret
insb
repz
lods
leave
aam
pop
cs
add
mov
ja
mov
scas
inc
cmp
add
jnp
mulb
cmp
shll
mov
pop
or
mov
nop
sub
addb
mov
mov
xor
dec
aas
cs
aas
mov
cwtl
clc
int
fs
jl
data16
dec
clc
stc
inc
push
outsl
cmp
inc
inc
push
mov
mov
rclb
dec
rorb
mov
mov
movsl
pop
pop
jae
inc
shlb
test
push
mov
test
pop
pusha
hlt
out
sar
loope
cmp
mov
imul
mov
sbb
cmp
negl
xchg
cs
jno
mov
push
iret
scas
leave
cmpsl
arpl
rcll
and
dec
mov
das
jle
adc
js
xchg
mov
mov
cmp
popf
dec
mov
popf
mov
test
add
and
inc
shlb
cmp
int3
ret
shll
mov
stos
cs
in
call
into
or
loopne
push
rcr
sbb
dec
xchg
xchg
mov
xchg
cltd
insl
lcall
sarl
add
and
mov
mov
push
fsts
mov
aas
xchg
rclb
sub
push
adc
addps
mov
iret
sbb
popa
fistps
xor
or
xchg
inc
nop
js
pop
pop
cltd
sbbb
cmp
pop
outsl
push
ficomps
add
jecxz
mov
mov
rolb
in
stc
jmp
iret
repnz
cmp
sbb
xchg
shll
scas
sbb
adc
inc
adc
or
sbb
lret
in
flds
mov
xlat
xchg
mov
inc
int
pop
mov
jmp
pop
lret
leave
jp
dec
fcmovnbe
notl
mov
pop
push
xor
sub
rclb
sahf
xor
pop
push
jecxz
fs
cmp
jmp
mov
outsl
sub
dec
les
cmc
sarb
dec
in
inc
mov
imulb
push
jo
mov
push
hlt
xchg
push
idivl
pusha
xchg
hlt
daa
ret
adc
sub
fmuls
les
or
icebp
adc
add
mov
push
pop
inc
inc
xchg
shlb
leave
inc
add
jecxz
stos
pop
je
pop
push
ret
lret
dec
fidivl
mull
add
lods
jmp
pop
inc
xchg
icebp
out
test
mov
je
push
push
push
push
pop
out
ss
pop
and
push
push
fisttpll
aaa
dec
lods
adcb
outsl
addl
xchg
inc
int3
jp
lock
or
imul
xchg
iret
and
cs
pushf
xchg
shrb
leave
pop
cmp
data16
cmp
fisubrs
jno
and
cmp
inc
mov
out
dec
push
cli
rorb
rcrl
jmp
xchg
mov
mov
aam
in
push
ja
push
dec
xchg
mov
lret
mov
cmp
and
or
and
adc
daa
push
int
mov
shrl
xor
loop
cmc
jl
or
test
rcll
xlat
push
xor
dec
cmpsl
cwtl
add
cwtl
push
add
xchg
movsl
mov
jnp
pop
add
xchg
lds
insb
icebp
xchg
std
lret
or
iret
lea
ljmp
inc
cmp
rolb
fsub
mov
inc
movsl
jecxz
dec
repz
xorl
sbbl
mov
les
xchg
sub
rol
or
arpl
sub
pushf
dec
jp
movsl
addr16
mov
xchg
push
ror
jmp
add
in
decl
jb
addl
data16
or
mov
lret
pop
ret
arpl
idivb
scas
push
fcoms
mov
test
push
xchg
iret
ret
jbe
std
sbbb
sti
jmp
mov
inc
roll
lods
xchg
sahf
int3
out
repz
sti
loopne
movsb
mov
cmc
jp
pushf
pop
lock
pop
cmp
movsb
cmp
pop
push
or
pop
pop
adc
jg
lcall
cld
pop
mov
fstps
imul
push
sub
frstor
test
sbb
and
inc
push
or
lret
mov
fucomip
lcall
add
dec
insb
and
jl
inc
shl
push
insl
adcl
jmp
sti
mov
outsb
sbb
in
test
ret
insl
jnp
push
add
iret
outsb
adc
push
insb
movb
int
por
cmp
or
dec
icebp
dec
les
pop
xchg
sub
xlat
lret
insl
nop
outsl
xchg
dec
out
movsb
inc
and
enter
sub
push
cmp
mov
insb
leave
mov
cli
xor
xchg
or
ror
add
sbb
xchg
cmpsb
fistl
pop
add
push
fcmovnb
test
je
push
cmp
cmp
nop
in
jae
mov
push
jle
sbb
ss
sahf
imul
sub
clc
int
clc
cs
inc
out
mov
fdivrl
orb
jnp
mov
repz
dec
aas
dec
sbb
pusha
xor
movsl
pop
inc
push
adc
mov
xorl
idivl
adc
jecxz
or
stc
test
lods
adc
das
cmp
dec
mov
int3
jl
cmp
ror
hlt
aad
bound
mov
xchg
push
inc
pop
and
call
stc
cmc
push
pmuludq
xchg
lea
jmp
rclb
pop
outsb
inc
stc
outsl
fdivs
lds
mov
je
cmpb
pop
das
inc
and
xlat
lret
cmp
addr16
xchg
shl
sub
jp
nop
hlt
push
xor
in
call
pop
jne
jmp
repz
decl
xchg
xchg
lods
push
call
mov
repz
mov
iret
or
fadd
cmc
xor
test
cmp
or
xchg
sbb
hlt
call
dec
das
mov
das
sbb
mov
ja
sahf
push
insb
xor
prefetchnta
cltd
loop
pop
inc
in
mov
sahf
sub
inc
aas
fs
fs
notl
or
cmp
mov
inc
and
mov
outsb
xor
xor
sbb
sbb
imull
pusha
fdivr
mov
pushf
adc
movsb
test
pop
test
rol
loop
loop
xchg
ljmp
pusha
jp
pop
in
in
mov
xor
fistps
adc
jp
mov
movsb
mov
adc
cmp
push
daa
mov
loopne
jo
ds
cmpsb
shll
imul
aas
enter
or
leave
out
fs
mov
xchg
inc
pushf
ret
adc
insb
aam
mov
repnz
clc
push
mov
push
mov
sbb
scas
das
dec
inc
int
fldt
or
xchg
push
xlat
addr16
ds
jne
repnz
pop
pop
mov
dec
js
ja
out
cmp
aad
pop
dec
scas
pop
inc
sub
aaa
stos
icebp
or
shlb
cmp
push
loop
mov
ja
xlat
sahf
adc
mov
lahf
adc
cmpsb
and
out
mov
jns
push
pop
es
dec
add
mov
inc
stc
inc
add
aad
jb
xor
data16
js
mov
loopne
imul
notl
mov
imul
inc
push
je
jns
inc
arpl
push
lods
and
shll
popa
stos
sahf
ds
lret
int
xor
aam
mov
cmp
out
pop
xchg
out
jae
xchg
mov
orl
testb
fdivp
mov
mov
stc
loop
in
rcll
push
cmp
in
dec
sbb
jne
jmp
sub
xor
test
mov
adc
cs
cmp
mov
lods
and
pinsrw
jae
out
sub
subl
test
pop
sub
fdivr
pop
xchg
push
sub
fsubrl
fsubr
or
sbb
dec
or
inc
outsl
inc
loope
mov
adc
aas
mov
sub
shrb
fwait
out
jge
mov
xchg
sub
and
push
or
mov
dec
jnp
in
or
test
daa
cmp
sbb
push
and
mov
imul
mov
loope
repnz
push
ret
imul
xor
out
popf
sbb
xor
adc
das
mov
sub
dec
sbb
arpl
ja
mov
lahf
inc
cmp
lods
test
sbb
jl
and
out
pushf
lods
in
ret
push
std
cwtl
adc
sbb
mov
jp
lds
popf
inc
or
jae
mov
jns
dec
rclb
pop
mov
mov
cmpsl
js
sub
push
dec
push
pop
mov
xlat
ret
sbb
imul
bound
loope
clc
sub
enter
jmp
je
les
xchg
cmc
mov
cmp
mov
mov
outsb
ja
push
cld
mov
xchg
popl
xor
push
or
mov
int
cmp
mov
mov
xor
or
clc
repz
xor
mov
mov
cwtl
in
movsl
ljmp
in
fs
push
mov
push
stos
rcll
imull
jbe
pusha
movsl
jl
scas
sub
outsl
cmpsb
sub
in
icebp
jno
fsubp
ret
cld
add
add
mov
jnp
insl
pop
dec
add
cmpsl
jle
inc
mov
idivb
dec
inc
rcr
adc
or
repz
jg
cmp
adc
lret
loop
jge
outsb
mov
or
inc
sbb
inc
add
adc
push
andl
shr
sbb
cltd
pop
loop
or
stos
lds
scas
mov
call
jno
hlt
rorl
imul
idivb
mov
sub
ljmp
mov
xchg
jo
sub
add
imul
ficomps
pop
icebp
into
xchg
mov
lret
mov
mov
fmuls
sbb
movsb
ret
inc
push
pop
loop
adc
arpl
lea
repz
push
and
mov
aad
roll
aas
and
or
lds
in
dec
adc
popa
mov
daa
sbb
mov
cli
mov
adc
les
iret
es
out
jo
pushf
xor
and
push
xor
pop
xchg
pop
pop
cmp
decl
shll
ja
fisubrl
jl
sbb
jbe
leave
dec
pop
or
cmp
or
insl
popl
ljmp
in
pop
push
jge
push
jmp
aas
ss
sub
push
push
test
jnp
lahf
mov
shr
sbb
pusha
popa
ss
out
cmp
add
xor
mov
inc
cmp
test
sbb
scas
xchg
dec
push
mulb
xchg
cli
pushw
pop
stos
inc
cmp
dec
cwtl
lea
lock
pop
and
sti
dec
jnp
fnstenv
mov
cli
jae
rorl
push
lret
sub
jnp
or
dec
loope
loope
iret
pusha
mov
mov
push
jns
pop
rcrl
or
mov
call
out
and
lahf
and
mov
ret
dec
sub
arpl
ror
xchg
xchg
inc
sarb
mov
cmp
js
and
cmp
inc
mov
jae
jp
out
inc
cmpl
imul
mov
insb
jg
dec
dec
sbb
cwtl
mov
aam
sub
into
pop
call
fisubrs
ret
sbbb
lret
rolb
mov
and
mov
inc
pop
jns
inc
inc
xchg
mov
inc
cmp
add
push
cld
in
inc
cmpsl
stos
jmp
sbb
jge
scas
xor
push
rclb
inc
pop
arpl
int
hlt
adc
mov
das
out
movsb
andb
es
divb
call
mov
jne
loope
mov
lds
arpl
fisttpll
xchg
mov
add
xchg
out
push
jmp
dec
or
add
jne
push
aam
mov
inc
adc
push
lahf
dec
lret
pop
jle
cmp
outsl
pop
add
stc
mov
mov
bnd
jmp
adc
push
arpl
movsl
lret
shrb
jo
push
or
fcompl
aaa
xchg
add
imul
sbb
dec
xor
ljmp
add
adc
cli
or
test
int
mov
gs
cltd
xchg
and
aam
rorb
ss
repnz
or
xchg
test
or
lods
xchg
std
lea
pusha
sahf
in
dec
shl
sahf
jle
nop
in
in
mov
mov
das
subl
adcb
test
lret
lds
mov
and
in
out
insl
imul
lods
adc
test
mov
or
ret
bound
add
idivb
dec
mov
mov
jae
sub
cmp
ret
cmpsb
aaa
lcall
es
xor
dec
inc
popa
rorl
mov
add
sbb
adc
icebp
xchg
js
inc
cld
in
or
push
or
scas
adc
loopne
shrl
xchg
mov
push
push
push
sbb
or
jge
arpl
outsl
aas
popa
push
jg
lcall
sbb
repnz
roll
adcl
push
mov
ficoml
jne
clc
or
push
pop
mov
pop
mov
mov
clc
cmc
pop
add
rol
cli
mov
imull
xchg
in
js
sbb
xor
ret
push
jp
mov
push
sbb
and
push
adc
subl
lahf
pusha
mov
mov
leave
adc
daa
jo
push
push
sti
out
movsl
or
imul
cmp
and
jmp
insl
andb
inc
cmp
cmp
xchg
out
es
mov
push
test
mov
pop
loopne
add
jbe
add
repnz
aas
outsl
enterw
pop
les
std
popf
and
movsb
call
cmp
nop
rcrl
and
xor
rorl
mov
inc
ds
add
ds
jge
rclb
pop
jmp
pop
ret
ret
clc
sbb
imul
in
jnp
sbb
xchg
insl
dec
je
aad
scas
loopne
jl
rol
dec
sbb
cmp
adc
orb
mov
inc
add
jns
jg
xor
xchg
inc
mov
imul
es
mov
testb
sti
push
out
xor
xchg
mov
mov
pop
xchg
cmp
pop
sbb
stc
sub
scas
imul
dec
sub
pop
out
in
lock
fists
pop
popa
xchg
xor
popf
mov
cld
pop
aaa
lods
call
jge
lea
fisubrl
pusha
cs
ret
imul
sbb
leave
sub
pop
filds
divl
outsb
cli
lods
pushf
mov
cmp
mov
push
fldt
xlat
cltd
ds
test
ror
icebp
jge
scas
sub
and
stos
cwtl
int
cld
add
dec
aad
mov
str
ja
mov
fsts
loope
outsl
lock
pushf
sbb
cmp
sbb
or
das
adc
das
imul
into
sbb
mov
mov
jae
mov
test
mov
outsl
sbb
cli
xor
test
sub
popa
fucomi
cmpsb
push
mov
shll
cs
fiadds
dec
aad
cmp
cmpsl
xchg
push
jecxz
cmp
inc
dec
sbb
ss
cltd
addr16
jb
jmp
test
jmp
jmp
inc
jbe
scas
pusha
adc
les
jmp
into
mov
mov
cmpsl
mov
lds
nop
roll
ret
inc
lods
jg
add
cmp
nop
jbe
sbbl
int
js
ljmp
rcrb
popf
gs
and
shll
inc
stc
cs
insb
aaa
jmp
push
lods
cltd
dec
rolb
mov
negb
mov
mov
xchg
insl
mov
pusha
loopne
and
sub
div
add
or
lods
mov
jmp
daa
bt
adc
xchg
mov
add
xchg
dec
sbbl
mov
jno
pop
cli
inc
mov
mov
aaa
xchg
push
aad
xor
sub
push
dec
jle
movsb
test
xor
xor
lahf
loopne
je
inc
pop
ret
aas
bound
push
xchg
dec
add
leave
inc
ficompl
and
pop
ja
rep
int3
out
and
sti
push
mov
xchg
jns
icebp
sti
or
push
add
sub
adc
nop
jle
xchg
jge
icebp
xchg
and
decb
std
and
les
in
dec
icebp
fdivr
shlb
jp
cwtl
push
jae
jp
loopne
add
xor
loop
sbb
repnz
xor
push
das
cld
sub
xchg
push
out
xor
lcall
cmp
mov
fsubl
in
lods
and
add
aaa
insl
imul
adc
sbb
out
mov
sbb
out
cltd
pop
jp
pop
setg
pop
mov
out
inc
test
cltd
jmp
rcll
lea
out
jae
inc
leave
dec
push
adc
mov
iret
out
push
mov
lods
lods
adc
xchg
pop
addr16
sub
ss
inc
mov
outsl
iret
mov
mov
imul
or
add
sub
inc
lods
adc
cmp
cltd
pushf
xor
bswap
push
out
sub
mov
xchg
nop
cmc
fisttpl
jge
sub
xor
jae
sbb
mov
outsl
nop
and
push
js
ret
outsl
sub
and
pop
xor
iret
aad
mov
xor
jl
cmp
test
add
and
fwait
mov
mov
imulb
adc
lock
mov
jo
xchg
jne
mov
out
and
cltd
fdivrs
pushf
push
lods
call
sub
xor
mov
mov
daa
xchg
lea
pop
scas
lds
testl
arpl
add
in
xor
scas
xchg
inc
sbb
cld
push
push
push
loop
and
cmp
adc
mov
pushf
dec
push
out
xchg
pop
xchg
adc
cli
in
mov
fildll
mov
cli
cmp
mov
xchg
jno
insl
in
xor
push
push
jne
imul
cmp
add
insl
imul
scas
inc
sbb
test
xlat
inc
cmc
test
repnz
movsl
fs
in
inc
lods
subl
inc
xchg
sub
sbb
jmp
mov
outsl
or
adc
push
mov
testb
inc
imul
pop
or
notl
push
daa
xchg
pop
mov
add
mov
mov
hlt
cmp
mov
or
pop
icebp
mov
sbb
lret
cmp
xor
fcomps
into
sub
push
mov
adc
cmp
mov
jmp
mov
adc
lret
inc
in
cmp
in
dec
pop
repz
push
mov
aas
iret
loope
adc
push
shl
and
js
iret
jecxz
jne
lock
fbld
je
and
fidivrl
aam
mov
daa
rcrb
cld
mov
arpl
dec
add
pop
insl
ret
sbb
jnp
mov
ljmp
mov
call
jg
mov
loop
jne
mov
into
lods
jg
mov
mov
xor
sahf
jecxz
and
jns
je
repnz
jae
add
fsubr
and
out
repnz
xchg
cmc
insb
mov
rclb
xchg
mov
jae
dec
xor
xor
out
sarl
cmp
ficomps
std
addr16
pop
cmp
lods
fucom
and
sar
mov
rorl
adcl
mov
and
inc
call
insl
push
push
insl
dec
cmp
mov
ljmp
adc
push
and
jp
ljmp
mov
sbb
mov
out
cli
pusha
jnp
and
movsl
inc
and
sti
div
mov
cli
sub
sbb
fdivrl
mov
push
lds
push
js
bswap
push
inc
cli
xchg
mov
cmp
pop
idiv
mov
push
cmc
clc
ljmp
fmuls
out
mov
shlb
mov
xchg
popf
test
in
sub
dec
pop
xchg
fwait
mov
pop
cmp
inc
or
adc
or
jbe
outsl
leave
int
ljmp
test
add
sbb
add
jo
loop
stos
sahf
mov
test
in
mov
jle
das
testb
and
das
movsl
inc
cs
ret
xchg
das
jecxz
fldl2t
test
pop
sbb
fldt
and
dec
imul
jmp
iret
das
stos
scas
jp
add
inc
fcoms
jmp
xchg
xor
shr
pop
or
add
repnz
testb
inc
sub
std
adcl
dec
pop
or
out
xor
pop
jmp
out
es
iret
mov
arpl
cmpsb
push
je
stos
dec
and
dec
cmp
cmpsb
test
popf
or
xchg
cmc
pop
jg
pop
in
pop
dec
push
imul
fndisi(8087
mov
ror
sbb
push
orb
pushf
push
aad
add
or
lods
ss
push
cltd
xchg
popf
and
jnp
cli
mov
into
adc
or
lea
push
jl
adcb
orb
ret
mov
and
xor
add
or
or
lock
pop
xor
adc
int3
repnz
sbb
addb
mul
mov
mov
adc
mov
out
dec
cmp
push
ss
or
bound
in
addr16
mov
cmp
mov
sti
fiadds
mov
push
out
or
test
xchg
mov
mov
jae
xlat
jmp
mov
inc
aas
jg
in
and
inc
lods
popf
dec
lods
mov
push
xchg
cmp
fwait
idivl
cmc
mov
dec
cmp
movsl
fimuls
insb
pop
test
lret
pop
and
and
jge
cmpl
mov
out
cmp
aas
mov
in
rclb
sbb
cmc
ss
nop
cmpsb
add
fidivrs
xchg
push
inc
and
pop
cli
pop
sub
cmp
mov
insl
mov
pop
sti
xchg
icebp
cmpsl
call
test
scas
sahf
jge
test
and
mov
lret
inc
jnp
xor
sbbb
and
sub
adc
dec
test
popa
mov
addr16
insl
test
inc
bound
push
ja
sbb
or
inc
push
addr16
push
jmp
fsubl
into
aam
dec
fdivrs
stos
sub
xor
sub
mov
sub
nop
cld
mov
fucomip
je
cwtl
sbb
jo
movsl
popf
push
daa
jbe
dec
enter
add
data16
mov
cs
cmp
loopne
fadds
outsl
cmc
out
pusha
adc
adc
outsl
mov
cs
addb
and
jge
arpl
fcomps
mov
adc
cltd
scas
pop
xor
sbb
movsb
ret
loopne
jb
ret
lods
mov
mov
xor
jle
fistps
jbe
repz
mov
fcompl
sub
scas
lods
divl
pop
adc
jecxz
pop
std
xchg
jecxz
mov
push
mov
push
icebp
pop
movsb
enter
adc
leave
dec
jmp
and
or
xchg
ds
mov
cmpsb
in
fcoms
ret
pop
sti
mov
xlat
xchg
idivl
ja
and
or
mov
rcll
fdiv
stos
push
or
dec
jne
pop
pop
jne
xlat
dec
dec
push
sub
fisubrl
gs
mov
jne
mov
pop
cmp
sti
fucomi
xchg
pop
mov
xchg
int3
adc
mov
movsb
xor
push
shrl
loope
cmp
xchg
inc
je
lcall
pop
lret
mov
xchg
xor
fiaddl
xor
sbb
pop
add
cld
sub
sbb
jnp
shl
sub
mov
jns
out
inc
sarb
xchg
mov
les
mov
mov
std
inc
bound
add
xchg
adc
xor
pop
sar
cmp
mov
jl
xchg
mov
ja
mov
movsb
xor
inc
mov
test
shl
xor
pop
xchg
pop
cmc
sub
ds
sub
sbb
mov
mov
mov
mov
xor
push
sbb
in
cmp
mov
ret
notb
mov
xor
or
mov
adc
inc
out
mov
iret
cmc
imul
in
gs
push
dec
dec
dec
cltd
mov
dec
sub
mov
mov
inc
loop
jo
dec
adc
sub
repz
push
sbb
lahf
out
outsl
enter
clc
jp
mov
mov
test
sub
in
mov
fildl
xchg
pop
jl
pop
pop
mov
mov
das
push
inc
or
in
jmp
pop
dec
scas
sbb
arpl
mov
mul
fldcw
lds
cs
sub
xchg
aas
andb
cmp
add
jb
xor
push
mov
repz
in
sbb
push
add
cmc
inc
pop
mov
gs
inc
scas
and
xchg
mov
ljmp
push
and
ljmp
mov
jns
icebp
xor
loopne
call
lahf
mov
not
mov
aad
add
jae
fidivrs
and
mov
xlat
jae
mov
pop
push
pop
xor
cld
clc
je
stos
dec
loop
and
jbe
cmpb
sub
je
test
test
clc
arpl
gs
inc
test
and
popa
or
push
aam
addr16
sbbl
cmpsl
rcrb
shrl
and
mov
mov
ljmp
xchg
push
in
testl
sub
mov
pop
lret
inc
fcmovnbe
ds
and
adc
movsb
and
jne
imul
mov
scas
pop
mov
mov
adc
repnz
jae
adcb
clc
pushf
jle
enter
pop
frstor
or
scas
psubusw
jb
xchg
das
rorb
inc
nop
bound
xchg
push
and
dec
cmpsl
mov
cmp
cmp
xchg
jns
xor
in
inc
ljmp
mov
cmp
fwait
push
cmp
add
add
lods
addb
in
ljmp
fmuls
fwait
sub
lret
and
fimuls
imul
push
cmpsb
addl
sbb
sbb
push
ret
lcall
push
jecxz
add
mov
cli
cmp
mov
sarb
in
out
mov
fdivs
push
mov
testb
icebp
cmp
push
jns
retw
push
testb
in
jp
shll
push
xlat
xor
adc
mov
mov
cmp
popf
out
mov
fwait
nop
in
hlt
xchg
test
cmpsl
lret
inc
and
mov
dec
out
mov
cwtl
les
push
cli
mov
xchg
cld
adc
outsl
jb
push
fs
or
dec
mov
adc
mov
jl
rcr
sbb
jecxz
xor
jecxz
sbbb
enter
scas
clc
or
add
mov
sub
imull
daa
mov
adc
loope
ss
mov
sub
jmp
test
sbb
fldcw
dec
rorb
lcall
xchg
dec
adc
cs
inc
adc
dec
cmp
and
lahf
stos
adc
mov
xchg
pop
icebp
out
fcomi
add
push
rcrb
loopne
jle
aas
mov
pop
pop
xchg
mov
jge
and
or
or
loope
ror
flds
out
clc
fistpl
test
nop
jbe
fstp
push
outsb
mov
jmp
xchg
sbb
mov
aad
cli
out
adc
push
les
in
mov
push
cmp
dec
rcll
add
fcompl
data16
fidivl
lea
fsubrl
sbb
adc
dec
or
sub
repz
enter
shll
aaa
mov
xor
and
inc
lock
cli
test
cmpsl
fcomps
ja
test
xchg
sbb
leave
cs
jae
jecxz
cmp
pop
pop
sub
xor
mov
xor
loop
test
mov
loopne
pop
mov
adc
xor
mov
and
test
cli
cmpsl
cwtl
mov
fs
nop
out
into
pop
sub
or
aaa
popf
fisttps
xlat
mov
rol
and
bound
sub
xchg
loop
faddp
adc
stc
add
dec
bound
ret
cli
jge
adc
mov
inc
test
sbb
adc
ret
roll
jno
in
shll
push
mov
divl
pusha
fs
xchg
pop
mov
sbbl
jae
sbb
shlb
lret
pop
fnstcw
pop
icebp
mov
pop
stos
cmp
stos
inc
call
jae
fisttpll
insb
in
ret
jmp
xor
push
adc
jl
inc
fsub
pop
xchg
in
sub
push
push
arpl
inc
fdiv
imul
sti
xchg
mov
mov
icebp
sub
xchg
cmovg
pop
test
mov
add
or
aaa
add
arpl
and
hlt
cmp
out
sbb
mov
aam
lret
dec
mov
push
scas
sbb
mov
cmpsl
cmp
adc
push
adcl
aam
addr16
stc
notl
arpl
xlat
sbb
pop
or
gs
sarb
inc
add
pop
jae
mov
sub
imulb
sub
adc
cmp
sbb
shlb
xchg
pushf
push
js
mov
add
fldt
mov
adc
sbb
lock
mov
cmp
push
cld
sub
xchg
test
les
cmpsl
or
sub
xchg
std
sti
rclb
add
inc
mov
out
mov
or
cmp
outsb
inc
fidivrs
push
push
aam
imul
fwait
imul
mov
xor
int3
hlt
out
hlt
ret
cltd
cmc
outsl
ljmp
decb
test
mov
xor
jge
mov
sbb
ja
das
mov
dec
sbb
js
scas
pop
mov
in
test
movsl
xor
std
xchg
insb
es
jp
aad
mov
mov
mov
into
xor
flds
pop
mov
mov
movsl
movzwl
fwait
dec
iret
pop
lea
or
mov
loope
push
or
divb
sti
jg
jno
push
repz
iret
and
ljmp
sbb
inc
fisttpl
dec
aad
test
js
mov
pop
jae
imul
sbb
std
imul
in
and
mov
pop
xchg
sbb
mov
or
sub
addb
push
mov
pop
adc
or
sbb
shlb
das
mov
jl
cli
jne
pop
das
enter
popa
cmp
movsb
adc
dec
pushf
in
xchg
push
in
ja
sbb
mov
fsubs
pop
pop
sbb
mov
mov
dec
xchg
mov
sbb
iret
inc
fdivrl
daa
das
mov
rcr
sahf
fmuls
loopne
movsl
dec
ja
add
or
hlt
pusha
les
mov
dec
scas
aaa
insb
xor
mov
and
push
idivl
xchg
ficomps
call
and
mov
mov
cli
rcr
jge
sub
ret
pop
rorl
cmp
jnp
sbb
or
sbb
lret
add
daa
lret
xchg
shll
and
push
out
sub
dec
movsl
adcb
gs
mov
push
sub
jl
dec
and
int3
pop
xor
outsl
jno
fmull
sub
test
ja
nop
and
shrl
cmp
push
xor
jbe
lret
add
xchg
adc
test
cmpsl
out
pushf
leave
ljmp
dec
mov
jno
fidivrs
sub
mov
inc
repz
jge
arpl
mov
adc
shll
or
inc
addb
cs
cltd
imul
pop
xor
addl
adc
in
sub
mov
sti
inc
clc
pop
xor
movsb
and
sub
adc
ss
scas
repz
pop
jge
shl
es
arpl
rcll
xchg
mov
stos
cmc
jne
inc
push
icebp
jae
iret
mov
mov
js
pop
in
arpl
mov
sahf
fnstenv
push
xor
ret
or
hlt
inc
and
imul
dec
push
and
sbbl
xchg
add
orl
mov
or
lea
stos
js
mov
test
jl
shrl
aaa
xchg
test
mov
mov
das
cwtl
ljmp
or
xor
sbb
vsqrtps
dec
pop
lret
mov
push
sahf
or
xchg
mov
cmpsb
push
inc
aam
push
adc
add
mov
mov
mov
sbb
lock
cwtl
fistpl
es
outsl
hlt
arpl
roll
stc
and
dec
lret
dec
jne
lds
ret
pop
mov
mov
outsb
sbb
dec
fdivrp
push
lret
mov
add
jecxz
pop
xor
imul
dec
es
mov
jl
outsb
int
nop
clc
icebp
stos
iret
xorb
lds
out
mov
lock
cmp
icebp
stos
mov
mov
mov
ret
repnz
fildl
dec
mov
daa
nop
pop
icebp
push
pop
or
and
push
xlat
xor
hlt
pop
lods
fldt
sbb
pop
cmc
gs
ljmp
or
mov
divb
sti
inc
dec
aaa
dec
popf
xor
inc
cs
in
push
adc
xor
pop
add
lret
xor
ljmp
adc
cmc
insb
frstor
mov
mov
gs
sbb
jl
dec
xor
mov
push
cmp
je
pop
adc
jno
rorb
pop
xor
mov
test
mov
hlt
les
push
fiaddl
imul
divb
mov
loope
cltd
sub
daa
sub
mov
sub
movsb
mov
pop
xor
aad
push
pushf
loopne
decb
popa
pop
adc
mov
jno
xchg
mov
addr16
insb
test
jg
das
pop
test
mov
popf
lods
and
jmp
or
sub
jno
subb
push
jb
lret
pand
stos
mov
and
imul
inc
push
jnp
sbbb
and
fiaddl
int
jmp
sub
or
es
stc
push
pop
adcl
cmp
scas
or
mov
mov
movsl
daa
scas
cmp
push
and
pop
dec
xlat
jmp
out
sub
inc
pop
jg
clc
mov
ror
ret
mov
mov
fisubrs
rcr
push
int
push
jb
jmp
jle
cmp
paddd
sbb
adc
icebp
push
sbb
sbbl
pop
pop
cmpsb
scas
inc
jecxz
inc
subb
lds
jmp
int3
repnz
les
std
sbb
aam
or
xchg
lahf
xchg
jp
lea
or
mov
push
gs
xchg
mov
cltd
fs
icebp
xchg
rorb
mov
test
fistps
sub
in
fisttps
insl
xchg
aaa
jne
jb
fsts
nop
lods
pop
dec
pop
outsl
fwait
das
pop
aam
into
inc
rcrb
jb
dec
das
lret
push
in
orps
gs
out
cli
xlat
sbb
movsb
pop
outsb
repnz
lahf
idivb
xchg
repz
xor
push
inc
jmp
jbe,pt
aam
xor
push
adc
jge,pn
and
stos
sbbb
test
call
sbbl
aad
cmc
rcll
push
push
push
gs
cwtl
call
aad
pop
pushf
cwtl
push
fldt
jmp
pop
mov
mov
pop
lret
fnstenv
mov
imul
mov
xor
mov
int
jmp
test
jp
push
mov
mov
lret
push
das
xchg
out
dec
popf
dec
xor
jbe
stos
add
mov
shrb
negl
cmpsb
or
or
sbb
fsubr
rcr
data16
jg
loopne
in
cmp
mov
xchg
loop
push
pop
ret
or
lret
int3
imul
aaa
mov
ja
inc
hlt
fs
mov
mov
mov
or
mov
xlat
std
lods
lret
aad
test
int
outsb
mov
adc
dec
stc
cmp
inc
lcall
scas
jb
mov
xchg
mov
push
mov
mov
mov
xchg
adc
xor
lea
call
inc
or
bnd
aam
xor
fstl
mov
sub
sti
cmpsb
cmp
dec
cmc
mov
out
mov
pop
cli
jmp
push
xchg
stos
out
movsbl
dec
inc
mov
js
and
pop
out
lds
imulb
push
mov
inc
xor
out
insl
cmpb
cmp
testb
lods
mov
add
andnps
or
ss
or
mov
add
bound
hlt
test
sbb
sub
aaa
cmp
jns
rcrl
fadds
cmpsl
cmp
leave
mov
cmp
push
aad
add
push
dec
pop
sbb
shl
inc
in
in
pop
sub
shll
add
sahf
loope
xor
adc
push
and
fwait
in
jge
mov
push
clc
rolb
xor
movsb
cs
xlat
xlat
mov
dec
cs
cvtps2pi
adc
popf
add
cmp
adc
shlb
pop
and
addr16
xor
rol
test
andl
xchg
std
jno
pop
adc
mov
outsb
add
cmpsb
jl
call
cmp
and
mov
rcrb
icebp
lds
insl
and
repz
mov
fdivrs
or
xchg
mov
rcr
lret
mov
xchg
sarl
push
jns
in
mov
lods
and
icebp
cld
jbe
inc
sbb
mov
rcrb
stc
fwait
dec
adc
arpl
dec
mov
dec
push
aas
aaa
jb
nop
test
or
loope
fldenv
lock
arpl
cmp
adc
jge
outsl
sub
jbe
out
sbbl
inc
out
imul
imul
xchg
or
sub
sub
jne
xchg
mov
fidivrs
jbe
aaa
mov
or
push
pop
cli
fisubrl
sbb
les
insl
jbe
and
push
stos
pop
aaa
enter
int
mov
notrack
pop
mov
repnz
pop
aaa
pop
cmp
add
into
pop
bound
ljmp
xchg
imull
mov
sbb
rcrb
mov
lahf
fsts
repnz
ljmp
sbb
mov
out
mov
dec
popa
lock
pop
pop
js
jle
xchg
dec
or
js
aas
pop
leave
push
test
lods
popf
ljmp
and
xor
addr16
mov
test
movsb
out
cmc
aaa
cs
int
mov
mov
filds
push
push
sub
push
push
cmpsl
adc
shll
or
sbb
shll
outsl
push
xchg
add
mov
fwait
aaa
cmp
xchg
stos
lret
push
in
mov
aaa
loopne
add
cmp
xchg
loop
inc
arpl
out
jp
and
rclb
cs
popa
roll
push
dec
ja
int
jno
fstl
pop
iret
mov
xor
jb
or
std
mov
fists
jne
inc
sbb
mov
or
rorb
or
push
inc
inc
shlb
mov
cmc
out
ljmp
outsb
fucomp
ds
add
lahf
push
aas
inc
cltd
bound
addr16
pusha
push
fists
in
add
sahf
stc
jp
popa
outsl
mov
xchg
jns
push
inc
aaa
inc
mov
ss
mov
sahf
mov
xchg
mov
xor
in
cmp
inc
aas
mov
inc
dec
jb
push
pop
inc
mov
std
es
cmp
hlt
cwtl
push
pop
fdivp
es
pop
mov
mov
cmp
cwtl
repnz
push
push
jo
cmovle
jg
dec
adc
sbb
pop
lahf
shlb
mov
cmp
add
mov
int3
jne
mov
push
lods
test
pop
aaa
xchg
je
mov
jne
iret
imul
jo
xor
lret
mov
mov
dec
mov
mov
xchg
push
push
sub
or
or
push
int
hlt
push
mov
leave
fists
ja
pop
out
lret
aad
in
nop
push
ss
or
jae
pop
sti
leave
dec
xchg
ss
ss
adc
inc
cmp
jns
insl
enter
pop
adc
add
imul
push
adc
dec
sbb
pop
cwtl
xor
push
inc
xlat
cld
pop
fsubrs
sbb
mov
icebp
cmpl
fwait
inc
cltd
aaa
pusha
cmpsl
dec
gs
push
imul
adc
or
test
ljmp
outsl
mov
mov
push
jle
lret
pop
dec
arpl
clc
out
lds
mov
stos
or
push
test
lock
orl
stc
std
xchg
pop
add
jbe
adc
cmpsl
dec
cli
call
adc
jmp
aad
nop
fildll
xchg
jb
cmp
add
adc
mov
outsl
push
insl
fs
mov
sub
xchg
push
aad
test
call
lcall
repnz
rcr
mov
sbb
pop
xor
xor
repnz
repnz
add
hlt
outsl
out
adc
dec
es
push
xor
jmp
sbb
add
loop
dec
js
jb
mov
xorb
arpl
cmpsl
mov
push
push
cmp
adc
addr16
xchg
xchg
push
jno
xor
and
iret
pop
lods
adc
jne
mov
or
fsubrs
cmp
pop
mov
testl
dec
out
gs
lods
cwtl
mov
dec
movsb
mov
lods
mov
and
cmp
push
sbb
cmp
push
xchg
and
test
dec
loope
ss
iret
xchg
bound
movsb
bnd
bound
lea
pop
lret
je
jo
adc
in
nop
jbe
jmp
push
sbb
movb
or
adc
shll
xchg
inc
or
aas
or
sbb
and
mov
mov
sbb
ds
ret
sahf
xor
adc
jmp
pop
popf
data16
inc
scas
xor
popf
loop
jbe
and
mov
je
repz
popf
dec
add
fsts
out
shrb
in
jge
hlt
movhps
out
insb
jnp
ljmp
into
clc
inc
sbb
mov
mov
xchg
ret
add
add
cli
add
mov
mov
divl
xchg
loopne
lahf
push
rcrl
fs
insb
fldcw
push
scas
push
mov
repnz
into
fisttpll
popa
out
lea
xor
clc
pop
ret
enter
lea
dec
mov
pushf
rolb
push
and
sbbl
in
xlat
popa
insl
dec
inc
in
cwtl
in
adc
adc
enter
and
scas
neg
jecxz
jo
daa
frstor
jne
stos
scas
and
negl
or
sahf
mov
or
fwait
out
xchg
outsb
js
sub
sub
aad
inc
ljmp
jb
add
add
lods
or
cmc
jle
mov
sbb
movsl
xor
in
out
add
mov
pop
adc
loope
std
sahf
sbb
add
xor
lods
jmp
nop
and
js
add
arpl
mov
fisttps
pmulhuw
push
inc
adc
sub
pop
andl
and
hlt
fdivp
mov
mov
cmp
xor
orl
inc
jge
and
sahf
sbb
scas
jnp
jg
icebp
lcall
cltd
or
or
jle
inc
xor
loop
lds
push
xchg
aaa
xor
mov
icebp
test
push
adc
mov
outsb
push
pop
icebp
mov
jne
mov
cmp
sbb
or
decb
mov
fs
lahf
jne
outsb
pop
pop
loope
xchg
fisttps
mov
mov
ds
add
add
iret
jge
std
icebp
mov
mov
push
std
imul
lahf
dec
fucomp
adc
enter
cmp
dec
mov
cmpl
into
push
pop
push
cmp
mov
push
mov
jno
sahf
fptan
adc
pop
movsb
jmp
repz
sub
pop
dec
pusha
outsl
add
aaa
and
push
sub
pop
sbb
inc
fbstp
sub
aas
xchg
fchs
loop
lret
add
movsl
fwait
sub
cmp
fimull
ffreep
popl
shlb
xor
insl
sub
pop
sub
ret
push
ret
leave
mov
fiadds
mov
nop
enter
push
stos
push
push
lock
cmp
ja
add
movb
ret
ss
int
cmp
stc
mov
mov
stc
incb
sub
fisubrl
xor
xor
xchg
push
es
mov
in
mov
cmc
push
inc
and
nop
icebp
gs
xchg
icebp
cltd
mov
jge
cmpsl
mov
leave
pop
jecxz
pop
aaa
in
stos
and
ds
les
stos
xor
xchg
sti
xchg
negb
pop
test
movsl
and
add
xchg
or
push
fisttpll
mov
mov
pop
mov
jo
jecxz
gs
jp
aad
lret
movsb
out
mov
daa
imul
loope
cmp
popa
jb
lret
adc
mov
sahf
scas
push
mov
fwait
cltd
fstpl
imul
dec
ljmp
js
add
shlb
sbb
imul
aaa
adc
mov
xchg
sahf
add
add
xchg
cmp
in
inc
int
scas
jge
rorl
mov
jns
mov
insl
and
push
test
sub
add
into
fs
rolb
or
notb
stc
in
dec
push
aas
lret
dec
and
mov
mov
mov
mov
add
cmc
inc
jo
and
xor
push
push
ja
fwait
sub
ds
sub
xchg
push
jbe
inc
je
add
push
icebp
popf
rorl
pushf
cmp
cmp
cltd
mov
cli
push
test
or
mov
jo
or
push
sbb
mov
sbb
jmp
dec
pop
mov
jmp
cltd
mov
mov
addl
and
in
mov
xchg
xlat
loope
mov
popf
rorl
mov
xor
testb
shrb
inc
jge
jge
adc
jle
sub
push
jmp
mov
insb
lods
mov
clc
fdivrs
nopl
outsb
ljmp
xor
adc
mov
addr16
mov
orl
sbbl
incb
ret
daa
push
add
cmp
xchg
sub
mov
xor
sbb
cwtl
pop
jmp
fsubr
orb
test
mov
mov
das
xlat
js
enter
pop
sbb
movsb
xor
xchg
in
mov
aas
add
push
shrl
outsl
inc
jg
mov
cmc
insl
push
or
leave
pop
jle
xor
xchg
mov
in
jecxz
js
stos
adc
popf
or
in
pop
stos
mov
test
ljmp
pop
inc
fidivs
addr16
fidivs
stos
adc
test
test
mov
icebp
loop
iret
jge
xor
mov
push
add
nop
test
add
int
push
push
jle
ret
out
cwtl
and
add
cltd
lods
add
xchg
mov
lods
dec
and
xor
aad
pop
stc
sub
fs
mov
push
mov
sub
dec
int3
and
inc
ret
call
daa
flds
xor
loopne
sub
mov
cmp
stc
rcl
es
pop
in
sti
sbb
js
movsl
mov
xchg
lea
insb
cmpsl
ja
ljmp
xor
out
lahf
jbe
lds
imul
sub
and
int
sub
pop
cmp
movsb
js
jo
mov
cmp
and
das
mov
xor
cmp
dec
icebp
cmc
xchg
dec
sbb
mov
jbe
call
and
dec
pop
inc
mov
push
repz
mov
mov
arpl
cmp
cld
rcrb
and
add
sbb
dec
cwtl
jge
int
mov
mov
add
bound
mov
dec
les
js
dec
add
and
in
push
jae
ret
jge
dec
std
insb
mov
addr16
dec
dec
mov
push
mov
cmp
test
xlat
outsb
mov
jbe
fidivrl
mov
sbb
xor
mov
sub
clc
movsb
xchg
rcl
into
and
push
int
mov
xor
repnz
incb
lahf
sti
fsubrs
inc
jo
cmp
fldenv
add
pop
cwtl
mov
aaa
clc
push
fcoml
add
sbb
jne
dec
popf
inc
fldenv
adc
stos
push
scas
jl
shlb
lea
into
popa
jle
mov
xchg
test
dec
add
in
in
jne
sub
dec
rcrb
movsb
adc
imul
cmp
shrb
push
push
sbb
nop
inc
in
inc
sub
xor
dec
int3
sbb
jo
fidivrl
iret
pop
mov
cmc
pushf
dec
adc
pop
xchg
sbb
cmp
dec
cmpsl
sub
inc
int
pop
mov
je
and
cltd
nop
xor
adc
and
xor
inc
push
cmpsb
pop
les
push
push
sub
dec
nop
scas
in
cmpsb
dec
mov
push
into
dec
dec
es
pop
cmp
adc
cmp
aaa
mov
adc
sarl
sarb
xchg
jp
sub
call
roll
mov
mov
call
movsb
lcall
xchg
fsubrl
ss
shrb
inc
jp
mov
xchg
push
cmc
pop
in
mov
or
lods
fidivrl
mov
push
sbb
sub
and
cmp
mov
enter
mov
dec
outsb
add
cld
sarl
fiadds
repnz
mov
imul
pop
jae
jbe
fldcw
outsl
or
rcll
popa
out
jge
icebp
in
mov
inc
xchg
test
aas
cmp
pop
addb
imul
mov
cli
pop
int3
pusha
dec
sbb
mov
mov
cmp
lea
cmc
fistpl
lret
rorb
mov
insl
jb
xor
lret
lret
sahf
add
push
push
cmpsl
jbe
adc
dec
test
inc
mov
mov
or
in
and
filds
enter
mov
in
ret
pop
inc
loope
xor
arpl
mov
jmp
lret
scas
inc
pop
test
icebp
mov
mov
cwtl
jle
movsb
inc
cmp
cmp
dec
jo
cmc
mov
dec
mov
push
cmpsl
add
rolb
mov
pop
push
sbb
in
loope
sti
outsl
sbb
push
sbb
bts
in
adc
data16
sub
cmpsl
imul
dec
mov
inc
jb
test
dec
sbb
not
bnd
fwait
hlt
mov
mov
mull
mov
jo
xchg
adc
stc
dec
xor
dec
stos
into
rorb
sub
fsubs
push
clc
cmc
or
les
cmpb
in
loopne
mov
int
mov
xor
test
jmp
jne
xchg
mov
stc
xchg
xchg
out
in
lods
pop
and
test
call
pop
pop
or
add
pushf
dec
fwait
mov
xchg
mov
insb
push
leave
mov
xor
xchg
lds
test
subl
mov
cmp
mov
addr16
neg
cmp
ds
push
iret
std
sti
add
dec
push
lods
into
sbb
mov
pop
mov
imulb
stos
mov
aam
bound
sbb
pop
mov
popa
movb
ret
lahf
nop
inc
rclb
jmp
repnz
xor
xlat
mov
jns
imul
aam
popa
inc
fisubl
fstpt
addr16
movsb
stc
jp
adc
lret
cmpsb
repnz
test
dec
jo
push
dec
adc
frstor
rcll
and
std
mov
jae
js
add
push
enter
pusha
scas
pop
mov
xor
xchg
xchg
nop
inc
out
iret
or
mov
addr16
and
inc
ss
push
jno
rorb
push
das
pop
pop
mov
cmpsl
dec
lret
addb
cmp
mov
sub
stos
sti
imul
adcl
jmp
sbb
lret
ja
inc
jl
cmc
insl
in
dec
inc
rol
and
negl
or
jb
test
hlt
xor
pop
push
pop
mov
std
sbb
popf
xor
shr
int3
lret
inc
push
lea
jne
dec
enter
inc
mov
ret
hlt
je
adc
sti
or
dec
push
js
leave
jp
gs
add
jb
push
rcr
sub
insb
cld
cmp
sbbb
rcl
lahf
and
inc
pusha
fbld
shlb
dec
dec
fnstenv
push
addr16
jo
xchg
pop
xchg
sub
loope
test
stos
js
sarb
mov
bound
or
ds
xchg
xchg
in
out
cmp
dec
je
fbld
add
imul
popl
movd
out
jo
mov
cltd
adc
mov
lcall
mov
mov
aam
ss
jg
adc
ret
clc
out
sahf
sahf
mov
sub
pop
leave
pop
cmp
xchg
jmp
xchg
ss
push
loopne
jns
je
sbb
xor
push
rorb
fldt
pop
push
and
dec
fldln2
shll
xchg
movsl
ja
jbe
cmp
sub
dec
ds
xor
pushf
cmp
xchg
push
jle
pop
enter
test
cmpsb
jg
aaa
and
stc
add
xchg
pop
mov
and
or
in
dec
add
enter
jge
adc
divb
push
adc
add
aaa
mov
inc
jno
mov
and
sub
sub
adc
test
insl
pusha
fstpt
or
pop
mov
fistl
push
mov
push
mov
or
push
movsb
sub
in
int
xor
jg
lods
push
adc
arpl
xchg
push
out
loope
shrl
pop
mov
lahf
dec
mov
sub
pop
hlt
jno
addr16
or
ljmp
ficompl
mov
clc
into
hlt
fnstsw
push
scas
sub
fsubs
cwtl
popl
inc
or
cmp
stc
push
cli
dec
mov
iret
out
sahf
dec
mov
popf
or
call
clc
mov
stc
jbe
pop
add
dec
leave
jle
mov
shll
sbb
inc
mov
cld
xlat
adc
rcll
jns
outsl
mov
add
add
les
cwtl
xchg
je
ljmp
push
xchg
in
ret
nop
or
imul
mov
mov
rcr
pop
daa
insb
fs
mov
and
sbb
fsts
xlat
xchg
xor
lret
das
popf
outsl
sbb
and
repnz
or
shlb
insl
pop
stos
pop
sub
ja
cmpsb
int
sub
outsb
sbb
cmp
cld
and
jp
filds
add
in
jmp
pop
pop
sub
out
mov
push
xorb
int3
jle
mov
jp
sbb
jl
mov
adc
lcall
mov
mull
repz
jecxz,pn
push
xchg
loope
jno
call
mov
mov
shlb
mov
int
outsb
shl
adc
mov
sbb
jmp
xor
mov
das
out
mov
jl
cmp
and
mov
and
xor
pop
and
xor
int3
out
push
inc
test
pusha
inc
xchg
lds
jg
sub
add
mov
or
ret
mov
jmp
xchg
jnp
pop
xchg
pop
pop
mov
mov
incl
cmc
fs
fistpl
cld
adc
push
and
xor
mov
cmp
sbb
cmpsl
ret
mov
mov
jg
ret
mov
mov
jae
fwait
clc
orl
cmp
test
dec
int
std
pop
stos
imul
jp
or
jno
repnz
lret
xchg
insb
push
mov
movsb
adc
pushf
call
daa
cld
insb
fnstenv
jge
cmp
ja
icebp
arpl
pop
sbb
xlat
lea
and
push
xor
mov
leave
repnz
xchg
nop
roll
ljmp
aam
dec
or
push
js
inc
lods
sbb
sbb
fdivp
cmc
div
push
stos
pop
dec
jo
push
push
mov
lods
cmp
inc
jle
pop
lahf
in
enter
aaa
dec
test
cmpsb
mov
dec
adc
xor
pop
push
add
adc
lods
mov
mov
push
aam
das
gs
addb
mov
mov
pop
lods
nop
aaa
popf
jge
dec
das
pop
lods
mov
jmp
shl
mov
jo
lahf
pop
adc
in
cmp
movsb
pop
imul
lahf
js
pushf
add
fdivp
lret
adc
add
adc
or
ret
cwtl
lret
mov
xor
sub
bound
fwait
cltd
in
aad
rcr
test
jmp
xchg
pushf
xchg
decl
pop
sbbb
sub
mov
sahf
push
xor
ret
imul
jmp
dec
jge
fnsave
lock
js
mov
das
ds
or
sbb
jle
std
popa
cwtl
dec
clc
aas
add
mov
stos
xor
sahf
sbb
stos
arpl
repnz
push
xor
xchg
pop
add
cltd
or
movsb
pop
movsl
insl
add
jg
mov
add
stos
xchg
shll
dec
push
test
inc
push
imul
xor
push
and
mov
pushw
pop
xor
dec
xchg
movsl
int
cmp
imul
loopne
sub
add
fwait
and
testl
pop
jae
adc
push
mov
xchg
ficoml
or
rcrl
xchg
mov
xor
scas
push
dec
jmp
sarb
cmp
add
xchg
mov
xchg
repz
lock
mov
sub
xor
or
jle
jl
das
icebp
pop
cli
loopne
cmpsb
or
aaa
inc
xchg
sar
jne
push
imul
je
xchg
push
lods
loop
jnp
out
or
icebp
movsb
outsb
icebp
loop
mov
std
out
mov
cmc
jae
or
mov
cmp
mov
add
stc
mov
pop
cmp
push
jmp
call
movl
push
push
inc
add
or
lret
cmp
sbb
xor
mov
lcall
sub
mov
xchg
stc
jno
push
push
push
cmp
inc
or
or
push
jge
mov
repnz
jo
leave
gs
fucomip
inc
arpl
hlt
push
mov
sub
sbb
xchg
pop
sub
int
outsb
int
cltd
ljmp
pop
lret
fildll
add
fldenv
jle
xchg
fcoms
push
fildl
decl
mov
pushf
sbb
jnp
insl
shll
push
inc
push
mov
inc
int3
mov
adc
mov
and
outsl
sahf
aam
lods
mov
jge
dec
sbb
outsb
inc
sbb
fstps
roll
sbb
sub
pushf
imul
push
test
pop
and
daa
shlb
fnstsw
hlt
pop
ljmp
or
push
xchg
test
aad
jmp
lock
orb
aaa
cmp
sub
push
mov
imul
push
mov
fdivrp
stc
mov
push
push
and
xor
mov
adc
test
cmp
push
mov
lea
jbe
or
sbb
lea
aaa
sub
bound
mov
or
push
scas
push
call
call
xor
jbe
or
in
icebp
rcl
adc
add
shlb
loopne
mov
sbb
mov
ret
push
jbe
fcoml
dec
mov
ds
in
cltd
sub
fwait
cmpsl
mov
mov
xchg
test
mov
xchg
addr16
push
sbb
repz
xor
in
sub
jnp
lcall
lods
mov
dec
pop
jge
int
idivl
and
clc
push
lock
loopne
out
lret
mov
sub
mov
pop
lods
xchg
out
cmpl
cmp
xor
push
fstpl
mov
notb
xor
cmp
lock
sar
scas
shl
xchg
out
cmc
xor
bound
or
and
scas
mov
inc
insl
mov
in
gs
rcl
and
aam
lret
scas
mov
imul
cwtl
or
repnz
daa
ret
inc
pop
mov
les
mov
fs
dec
push
pushf
mov
enter
pusha
and
and
rol
push
add
les
stos
push
add
xchg
add
inc
mov
xchg
xor
dec
ret
fsts
adc
popf
add
pop
jb
xlat
xor
adc
sti
xor
xor
xchg
movb
xchg
xor
inc
sub
loop
push
xchg
popa
jmp
insl
inc
in
outsl
lds
repz
inc
jo
and
inc
jp
scas
sub
push
jmp
loop
jmp
xchg
cmp
push
rclb
sbb
push
gs
pop
lret
out
aas
outsb
mov
and
rorl
shl
inc
cmp
pop
imul
mov
in
sbb
cmp
adc
pop
aam
lods
add
stc
pushf
push
lock
sub
cmp
and
add
and
roll
fmuls
ficoms
insb
dec
test
popa
push
dec
ja
or
fldcw
adc
jo
jecxz
pop
lcall
xchg
push
inc
testb
or
js
outsl
je
adcl
scas
xor
int
popa
mov
cmp
pusha
sbb
or
lock
rcrl
mov
or
arpl
push
or
pop
mov
xchg
subb
xchg
push
push
loop
xchg
cmp
test
push
dec
mov
mov
jmp
arpl
inc
popa
cmp
je
out
out
test
or
pop
iret
je
mov
int
pushf
mov
rcl
dec
mov
stos
adc
outsl
bound
test
jae
in
adc
inc
mov
clc
aam
ret
inc
sbb
mov
popf
es
push
ljmp
rorl
mov
movsb
mov
hlt
xchg
jge
sbb
pop
pop
push
mov
mov
cmc
lcall
inc
dec
in
xchg
ficoml
cmp
push
mov
dec
out
push
push
lea
mov
shrl
inc
scas
pop
out
inc
jecxz
push
jecxz
test
aas
out
jne
cmpsl
cmpsl
int3
shlb
shlb
mov
ljmp
inc
lret
pop
xchg
jo
test
mov
cmp
dec
jno
mov
out
jae
ds
cmc
mov
pushf
cwtl
xchg
add
push
xor
mov
push
sub
sub
mov
mov
rcll
aad
ja
hlt
mov
pushf
scas
scas
add
add
les
push
cmp
push
iret
xor
dec
lea
aas
mov
cltd
cld
inc
shrb
xor
sub
into
idivl
data16
fisubs
add
add
mov
enter
repnz
jmp
cmp
ds
adc
pop
int
lahf
inc
or
lahf
jg
xor
ret
movsl
leave
pushf
ds
int
mov
lds
sub
outsb
add
cmp
xor
push
dec
pop
rcr
pop
xor
outsb
std
inc
lret
xchg
js
jecxz
xor
mov
daa
add
test
lea
rcrb
mov
rorl
sub
daa
daa
mov
outsl
pop
cld
mov
jl
push
mov
push
das
xchg
mov
jp
ret
cli
lock
popa
xchg
repz
fdivs
lret
pop
je
pop
in
xor
push
push
sbb
mov
xchg
adc
outsb
xlat
xchg
inc
roll
dec
xchg
mov
mov
fcmovnu
and
mov
pop
mov
pop
jbe
push
xchg
pop
cs
rorb
mov
enter
jle
xlat
mov
imul
call
dec
rcrl
cmp
popa
jae
int3
sahf
xor
daa
pop
enter
mov
ret
xor
inc
jno
les
test
xchg
insb
andl
jmp
push
inc
add
adc
mov
jo
mov
aas
jmp
sbb
ljmp
add
pop
cs
loop
push
fisttpl
push
stc
jge
sub
aad
pop
mov
dec
cmp
dec
mov
dec
xchg
aaa
aaa
mov
popf
fcmovnb
and
testl
mov
sub
and
stc
adc
or
out
mov
push
push
mov
ljmp
outsl
lcall
leave
sub
inc
cmpsb
jb
jl
lock
add
into
adc
sub
push
sbbb
mov
pusha
jle
cmp
xor
outsb
push
mov
cwtl
jle
cwtl
inc
mov
jns
stos
mov
pushf
icebp
or
xor
dec
xchg
and
inc
mov
movsb
jp
arpl
xor
ljmp
push
ret
loopne
push
ret
push
lret
jle
cmp
dec
adc
mov
mov
enter
mov
fs
loope
ret
in
sbb
and
sbb
dec
repnz
into
or
icebp
aad
pop
push
ja
test
cltd
std
push
movsl
xor
or
mov
std
out
push
ss
jp
fs
sub
adc
int
in
xchg
cwtl
xchg
sbb
mov
xor
mov
stos
cmp
arpl
mov
jl
faddl
insb
imul
stos
push
dec
gs
inc
adc
push
push
mov
fmull
jp
and
repz
nop
into
scas
jp
xchg
xchg
mov
int
sbb
iret
cmpsb
and
mov
popa
test
push
xchg
jle
xchg
or
fisubs
mov
dec
test
out
cli
movsl
fldcw
xorl
daa
mov
cmpsl
xchg
or
outsb
and
int
mov
enter
jo
addb
into
insl
fcomps
aaa
sbb
cs
test
loope
mov
fdivrs
xlat
in
mov
push
lret
cmp
sbb
bswap
pushf
cwtl
pop
clc
cmp
cmc
cmp
movsl
xor
pop
fildl
dec
lret
cmpsb
mov
pop
inc
pop
mov
inc
inc
xor
mov
or
mov
cmpsl
mov
rcr
jecxz
std
ucomiss
popf
dec
ficomps
in
rclb
lcall
mov
adcb
xor
mov
push
leave
cmpsb
ret
sbb
cli
add
popa
ret
mov
cmp
pushf
into
pop
inc
jo
xchg
xchg
jbe
mov
clc
xchg
pop
fdivrl
shlb
aas
nop
sbb
mov
xor
pop
movsb
add
push
jmp
and
lds
les
dec
sub
mov
cmpsl
in
aad
lret
mov
or
jg
dec
add
test
adc
cld
stos
xchg
loop
mov
ds
cwtl
xchg
rcll
and
addb
sbb
jg
xor
jns
cmpb
mov
ret
bound
jp
cmp
loope
test
cmp
lahf
jecxz
mov
fwait
es
into
adc
and
xchg
or
cld
outsl
sbb
push
pop
pop
test
pop
sub
aad
pop
rolb
and
lock
jnp
je
test
pop
loopne
cmpl
stos
and
adc
jb
fstpt
inc
jo
or
data16
rclb
cmp
lahf
repz
cld
mov
cmp
ljmp
popl
or
xor
divl
xchg
push
mov
adc
aad
xorb
xchg
and
pop
orl
inc
sub
test
movsb
testl
cmc
dec
sub
sti
popa
cmc
dec
jecxz
or
into
mov
pop
mov
xor
mov
fwait
or
in
push
or
xchg
and
ss
cmp
in
sbb
cwtl
adc
imul
lret
jle
cld
mov
and
enter
iret
sub
mov
sub
jle
lock
or
mov
cmp
cmp
es
xor
xchg
mov
adc
adc
mov
xor
in
stos
and
dec
js
or
lahf
jmp
xlat
mov
cmpsb
sbb
cwtl
mov
pop
adc
sarb
test
std
xchg
repnz
pop
test
inc
sub
pop
inc
inc
mov
xor
mov
rcll
or
fcmove
jl
and
push
xor
pop
mov
mov
mov
sub
fmuls
xor
adc
mov
adc
lcall
ja
dec
mov
test
ljmp
insb
je
out
xor
cli
jmp
mov
cli
fisubs
cmp
jns
outsb
loope
imul
dec
loop
mov
dec
scas
xor
rorb
jns
pop
int3
pop
push
rorl
je
stc
push
ret
pop
cli
mov
add
fmuls
push
mov
js
dec
push
and
test
pop
popf
and
xlat
insl
imul
fs
inc
inc
movsl
loopne
sub
sbb
addr16
mov
push
aad
inc
lock
jne
cmpsb
addb
sarl
arpl
arpl
stos
lds
scas
mov
cmp
xchg
xchg
jno
add
xchg
and
fdivl
cmp
sub
add
mov
cmc
push
out
xlat
xchg
pushf
jno
inc
lret
jnp
cmp
repz
sbb
lret
cli
mov
mov
enter
lods
addr16
sbb
and
lods
pop
dec
cmp
jno
sub
pop
add
pop
xchg
jo
and
xor
jbe
pop
mov
dec
and
rsqrtps
mov
les
cmp
popa
mov
jno
inc
out
hlt
push
cmp
fmul
ljmp
loop
call
cmp
or
int3
cmp
aad
sbb
aad
mov
dec
mov
sub
in
shll
out
or
scas
cli
xchg
js
mov
daa
lret
jno
cmp
fildll
inc
mov
addr16
mov
sbb
lret
xlat
insl
arpl
repnz
push
pop
jo
pop
push
push
dec
pop
inc
jbe
sbb
in
aam
fsub
loope
test
sbb
xchg
lods
pop
sub
and
dec
sub
add
daa
push
push
cmp
lods
fisubrs
movsb
aaa
adc
jbe
and
sbb
dec
inc
mov
lcall
or
ds
sbb
sub
in
inc
jne
and
outsl
push
fwait
jbe
xchg
xor
stos
jmp
sub
sbb
mov
ja
into
loop
or
notl
outsl
mov
pop
mov
in
and
bswap
push
hlt
fs
add
jo
dec
enterw
ret
jge
gs
inc
bound
rcll
inc
cmpl
stos
xorb
inc
stos
lods
popf
rclb
add
adc
mov
push
jmp
inc
inc
and
and
fs
ljmp
ljmp
xchg
and
dec
mov
adc
adc
ljmp
test
lcall
and
pop
jbe
adc
enter
enter
mov
push
loop
hlt
insb
jmp
adc
sbb
jns
inc
sub
sbb
sbb
push
sbbb
outsl
inc
fists
xor
es
imul
xchg
adc
push
sysexit
inc
cs
or
arpl
xchg
adc
pop
addl
jbe
mov
jbe
jle
mov
add
mov
mov
pop
sub
push
scas
add
dec
scas
xlat
lret
mov
mov
xchg
mov
cmpsl
dec
pop
mov
or
pop
jno
ret
movntps
sub
xchg
mov
and
push
imul
in
dec
js
fsubl
fbstp
xor
test
jbe
dec
push
inc
xor
mov
scas
aad
pop
decb
xor
dec
cmc
cmc
int3
stc
cmp
pusha
xor
and
test
jns
and
sub
cmpsl
push
add
or
add
cli
jb
lret
cmpsb
sbb
scas
mov
outsl
pushl
out
ds
pop
rorb
out
mov
fistpll
jecxz
push
jo
daa
adcl
mov
daa
mov
xchg
mov
in
movsb
push
pop
loopne
pop
test
and
popf
pop
push
data16
lret
and
inc
dec
in
jmp
fwait
dec
jne
cmp
adc
pop
jg
dec
sbb
push
xlat
ss
enter
xchg
pop
or
push
aad
jecxz
xchg
dec
sbb
addr16
mov
fsubrl
stos
jnp
xor
clc
movsl
jae
hlt
push
jl
lea
cmpsb
pop
jbe
sub
xor
or
in
repnz
adc
je
pusha
jae
lcall
fdivrs
nop
xchg
call
rcrl
and
xor
inc
cmp
cmc
adc
into
gs
push
ret
arpl
out
rcrb
movsb
cmpsl
mov
sti
adc
inc
test
jg
push
sti
and
xchg
push
mov
mov
sub
jp
jmp
mov
mov
dec
or
or
pusha
pushf
or
cs
xchg
pop
fcmove
add
xchg
cld
iret
std
pusha
ret
mov
lock
daa
leave
sbb
nop
fwait
xor
add
in
lahf
imul
mov
sub
popf
cmp
cmc
iret
aam
cli
rclb
insl
data16
dec
in
aad
xor
sti
mov
inc
js
mov
jp
lock
fnsave
or
jmp
pop
push
fdivp
jle
push
mov
ds
bound
push
data16
pop
test
push
out
scas
push
and
std
inc
nop
or
cmpsb
jge
addb
subl
scas
out
xor
sbb
out
pop
ljmp
mov
sub
outsl
fldl
push
imul
sub
sub
movsl
mov
add
fs
xor
inc
loopne
ss
pusha
mov
pop
xlat
stos
or
dec
stos
mov
xchg
inc
ja
cld
jne
addb
mov
mov
sbbb
pop
mov
jge
jle
aam
arpl
pop
or
xor
mov
push
enter
pop
ljmp
les
dec
mov
fistl
inc
inc
pop
pop
not
pop
out
push
leave
mov
ljmp
cld
xchg
out
int3
adc
mov
nop
pop
inc
out
cmp
sub
imul
das
popf
push
out
jnp
xor
ja
sub
lock
sbb
or
movsl
jns
push
fdivrl
int
dec
xchg
cmp
ret
jle
cwtl
inc
daa
aad
icebp
shrl
cmp
jbe,pt
mov
test
inc
and
insb
jno
ret
mov
jno
jle
test
imul
aas
pop
sbb
pop
std
sub
jg
das
mov
pop
insb
and
jne
push
lea
jp
add
mov
arpl
roll
lock
test
loopne
sahf
lock
sti
fistps
icebp
xchg
in
jae
clc
jbe
lret
scas
scas
insl
and
xchg
aaa
or
sub
loop
dec
adc
mov
mov
nop
hlt
inc
mov
pop
lock
cltd
or
cmpl
mov
mov
loope
adcl
lock
mov
jmp
popf
dec
shr
subl
fwait
mov
or
push
lock
sub
add
test
push
sub
out
mov
sub
cmp
loope
jp
adc
int3
inc
fs
xchg
hlt
jno
fisttpll
cmc
push
dec
daa
cs
jne
ja
cs
inc
not
or
shrb
xor
incl
xchg
cmpsb
mov
scas
rcll
imul
sbb
pop
scas
imul
pop
lods
in
jge
insl
out
pop
popf
movl
push
call
arpl
pop
out
cltd
insl
out
je
and
jle
pop
popa
not
psrlw
push
cs
xchg
movsl
sahf
sub
mov
xchg
and
mov
imul
gs
lock
mov
jecxz
mov
loope
lahf
ja
jmp
cmp
pop
lahf
mov
xor
pop
xorl
ret
nop
addb
jb
xor
push
lret
insb
jo
mov
imul
in
imul
jo
mov
pop
push
shll
mov
jmp
sahf
gs
stc
call
inc
or
sbb
xchg
inc
xor
inc
in
or
dec
enter
push
jl
in
data16
movsl
jmp
dec
jg
mov
insb
into
test
iret
mov
dec
arpl
loope
cmc
push
lret
out
pop
xchg
imul
out
mov
notb
cmp
adcb
and
inc
mov
adc
stos
pop
call
divl
scas
sub
ficoml
add
mov
and
loopne
imul
push
dec
inc
xchg
outsb
adc
test
leave
loop
int3
xor
push
and
sbb
or
out
cmc
cmp
fcom
out
xor
sbb
scas
jmp
out
mov
dec
cmp
lock
mov
in
cmp
std
xor
mov
aad
lock
lahf
add
cs
mov
lcall
pushl
cwtl
mov
sahf
xor
iret
xor
xor
sti
sti
jno
mov
push
xor
shll
push
ja
nop
insl
lret
lock
ljmp
cmp
outsl
xchg
push
movsb
outsl
sbb
int
adc
test
pop
imul
cmpsb
lret
dec
out
imul
mov
arpl
icebp
sub
out
push
shrl
sbb
xor
mov
jb
pop
and
pop
xlat
in
pop
lcall
sahf
ljmp
hlt
test
or
pushf
jnp
pusha
aad
pop
cmp
cli
movsb
mov
mov
subl
pop
cwtl
scas
fwait
sbb
imul
jecxz
jb
bound
pop
jae
call
lahf
jmp
xor
aad
popl
shlb
inc
mov
insb
ror
xchg
add
or
sbb
mov
sub
int
xor
pop
jecxz
adc
outsb
or
jae
or
mov
addl
dec
dec
cwtl
mov
cs
jmp
push
cmp
ficomps
or
cmp
lds
mov
pop
je
insb
test
jo
xor
fsubrs
sbb
rcr
cmpsb
push
xlat
push
and
push
aaa
or
inc
or
lods
fstp
cltd
inc
pop
out
pop
insb
gs
sarb
repnz
add
out
jns
push
cmpsb
pop
test
leave
jp
nopl
mov
cmp
sub
popf
jb
jae
insl
xchg
movsl
mov
bound
cltd
sub
insl
pusha
push
in
and
lret
lods
fucompp
cwtl
jbe
fistps
aam
jae
gs
das
xchg
das
movsl
dec
ljmp
repz
xchg
jecxz
dec
and
aam
sbb
ljmp
sarl
addl
sub
cli
mov
mov
xor
or
xchg
pop
in
sbbl
out
sbb
enter
jns
push
data16
inc
aas
mov
repnz
dec
outsl
cmp
mov
insb
push
mov
sub
hlt
int
incl
mov
mov
jp
sub
xor
into
or
sub
jmp
movsb
ja
test
fwait
lods
out
inc
fdivl
jl
popa
js
stos
cmpsb
adc
xchg
ja
test
xor
jbe
xchg
jp
dec
sub
int
and
sbb
add
push
aad
cltd
cld
out
negl
pop
sub
shr
pop
cmp
movsl
dec
sub
pop
xchg
pop
push
out
adc
nop
rorb
in
repz
adc
inc
mov
lods
subl
outsl
roll
lds
jae
mov
mov
xchg
out
rcrb
lcall
roll
sarl
cwtl
lds
fwait
test
int
movsl
lods
inc
lods
xchg
cmp
mov
ljmp
mov
cmc
cmpsl
jbe
pop
xor
xorb
fcoml
xchg
xchg
cmp
les
loopne
push
addb
lds
fisttps
fdivr
push
out
xor
aad
dec
mov
push
hlt
ret
mov
sub
pop
es
into
jp
push
push
inc
pop
jnp
and
jnp
das
mov
cwtl
ja
out
nop
pop
adc
cmp
gs
mov
pop
arpl
loope
adc
incl
pop
xor
push
push
repz
xor
pushf
sub
aad
xchg
and
cmp
lret
fnsave
pusha
loopne
jns
jno
test
ret
mov
jmp
aas
push
inc
test
aas
lock
in
popa
pop
and
push
adc
fldl2t
mov
std
cmpsb
test
jne
jl
ja
cli
lods
mov
test
jp
repz
ret
dec
add
pushf
xchg
sbb
inc
sub
mov
dec
lret
lods
mov
adc
fmuls
xchg
mov
test
outsl
out
jge
cmpsb
into
push
test
pop
mov
sub
or
adc
mov
push
xchg
aad
dec
jns
rclb
xchg
gs
push
xlat
mov
sti
pushf
sbb
adc
sbb
mov
popf
in
ja
dec
jb
stos
ljmp
rol
or
test
mov
mov
lcall
nop
sti
xchg
fbstp
dec
sub
scas
inc
add
icebp
jns
je
xor
jge
xchg
mov
push
mov
test
inc
jle
cmp
ljmp
add
pop
dec
insl
loope
lock
mov
daa
push
cmpsl
sbb
dec
or
stc
divb
loopne
loope
xor
mov
adc
sbb
aaa
in
or
daa
dec
movsb
movsb
ds
jbe
mov
sahf
bound
sbb
sub
mov
lret
into
leave
imul
adc
mov
jbe
cli
jge
jne
imul
add
adc
adcl
aas
adc
jecxz
cwtl
or
mov
lret
std
mov
push
cs
stos
xorl
jle
cmp
mov
inc
outsl
mov
mov
iret
mov
fstpt
faddl
push
ffreep
pushf
icebp
and
xchg
xor
jg
dec
int
mov
adc
andb
pop
and
cmpsl
cwtl
jb
sub
insb
ss
jno
or
in
repz
mov
aam
lea
movq
aad
dec
imul
jae
fwait
idivl
or
inc
and
mov
mov
fwait
icebp
xchg
or
lock
hlt
jle
fisttps
push
mov
adc
ljmp
xor
xor
andl
add
adc
lods
outsl
adc
scas
jbe
xchg
adc
scas
mov
mov
test
lock
inc
mov
cs
lds
clc
sbb
mov
ret
enter
cmp
or
sub
mov
xchg
into
jp
aaa
aaa
cmc
add
aaa
adc
pop
insl
test
dec
mov
pop
neg
lock
fldl
push
push
stos
xchg
jns
inc
and
mov
inc
rol
xor
sbb
xor
arpl
or
pop
push
fnstcw
sub
sub
push
pshufw
adc
out
lcall
xchg
pop
imull
mov
dec
loope
add
fidivrl
sahf
and
arpl
lock
add
mov
jmp
xor
icebp
cmpsl
sti
xor
cmpsb
and
daa
jle
imul
xor
nop
jecxz
sarb
push
test
sub
cmpl
clc
or
ss
js
hlt
insb
or
mov
push
shr
pop
dec
clc
push
mov
rorb
and
xchg
or
call
inc
mov
shl
jge
and
bound
popa
data16
and
inc
es
in
inc
xor
lock
call
sub
fldenv
sbb
repnz
xchg
sub
sbb
lret
inc
lret
rdtsc
sti
adc
mov
stos
lock
push
sar
mov
ljmp
mov
or
testl
aam
out
sarb
push
cmc
mov
adc
iret
into
pop
adc
pop
xlat
pusha
fucomi
mov
xchg
clc
fnstcw
jb
std
mov
dec
push
shrl
adc
mov
jmp
inc
orb
gs
push
out
data16
cmp
das
cltd
xchg
addb
divl
int3
outsb
lods
popa
xchg
mov
jbe
outsb
imul
mov
subl
je
push
jmp
pop
mov
shll
push
pandn
sbb
mov
loopne
add
aam
jbe
pop
pop
sbb
mov
in
ss
int
jne
imul
xchg
jnp
cmp
or
jl
jae
clc
adcb
mov
subl
shlb
sub
cld
call
mov
dec
xchg
pop
jp
add
ss
or
push
inc
incl
mov
push
push
push
adc
add
xor
inc
add
jne
cmpsl
aas
in
and
mov
pop
push
xor
call
js
out
sbb
xchg
out
mov
aam
inc
shlb
pusha
loope
js
out
lock
hlt
gs
sahf
push
in
sbb
mov
adc
pop
outsl
ljmp
shrl
popf
xor
sahf
mov
rorb
mov
sub
call
jp
imul
push
jge
outsl
sbb
jmp
jne
mov
mov
pop
cli
popf
lcall
push
sub
aam
adc
in
xor
scas
fnstcw
mov
xchg
adc
jge
sbb
xchg
or
sbb
and
add
arpl
or
pop
ror
xor
dec
mov
mov
xchg
fcomps
mov
fs
push
mov
mov
orl
add
push
mov
push
jle
pop
inc
aaa
xchg
pop
adc
int3
cld
cmpsb
pop
aaa
mov
insb
imul
xor
sbb
jbe
pop
adc
jle
fstl
pop
repnz
mov
sub
jnp
aam
xchg
xchg
mov
mov
jne
xchg
out
adc
cli
mov
push
imul
cmp
aas
xor
mov
stos
imul
test
inc
mov
adc
inc
mov
jns
pop
or
loop
jecxz
mov
loopne
sti
rcl
shr
jp
dec
ud0
adcl
push
sbb
adc
xchg
and
fdivl
cs
xchg
imul
lods
sbb
stc
jbe
jbe
imul
ljmp
push
fimuls
add
sub
or
adc
ficoml
movsb
mov
jge
or
mov
ja
rcll
daa
push
rcrw
jmp
sbb
or
sahf
jl
xchg
ljmp
sub
mov
cmpsl
or
mov
popa
or
pop
sahf
add
mov
ret
and
jecxz
loope
adc
cltd
lods
xchg
mov
scas
jo
add
push
pop
push
xchg
loop
fstpl
and
imul
sbb
sbb
fs
jge
mov
push
push
sbb
and
cmp
push
pop
ss
decl
aaa
lss
mov
sbb
xchg
mov
insb
inc
jge
lret
aas
pusha
cld
xchg
push
push
sub
lcall
push
jo
lret
insl
das
lret
int
lcall
cltd
jnp
push
and
adc
nop
xchg
mov
mov
add
sarb
lds
lcall
fs
sbb
push
inc
cs
sbb
pop
popa
xorl
test
xorl
lcall
mov
out
and
insl
insb
xor
mov
test
xchg
mov
fsts
or
mov
dec
push
cmp
cld
inc
dec
xor
hlt
mov
pop
push
push
cli
sti
mov
lret
xor
push
insb
and
fcomip
jmp
mov
dec
call
cs
mov
in
and
sbbl
add
in
xchg
adc
mov
mov
jecxz
add
cmp
dec
popf
mov
mov
sub
mov
push
mov
add
arpl
sub
int
arpl
mov
fstpl
fnsave
push
movsb
jns
in
lahf
scas
mov
push
adc
mov
and
outsb
out
lcall
xchg
push
mov
test
xor
insb
outsl
fcomip
ljmp
aaa
pop
adc
ljmp
lahf
mov
imul
les
xchg
minps
mov
cwtl
mov
fwait
sub
add
xor
movsl
inc
andb
inc
xor
cmpsl
jns
loopne
fisubrs
cwtl
int
ss
push
sub
out
ss
inc
je
test
cmp
mov
cmp
icebp
loope
ljmp
dec
mov
inc
xchg
or
mov
pop
gs
popf
xchg
mov
push
pop
lods
mov
cmpsb
lock
jne
shr
lcall
ret
es
push
lcall
jbe
mov
hlt
dec
ds
sub
mov
imul
push
insb
and
jno
dec
adc
jno
pushf
jp
movsb
mov
in
pop
das
add
inc
mov
xor
repnz
call
addl
jge
notb
aas
xchg
stos
ss
sbb
add
mov
xchg
data16
movsb
adcb
aaa
mov
stos
mov
aaa
mov
dec
push
rorb
ljmp
mov
cmpsl
push
test
inc
orb
xchg
jns
pop
fsts
scas
and
fdivp
test
arpl
mov
pop
fisttpll
iret
cwtl
sub
jl
push
ja
cmp
out
pop
rorb
mov
ja
aad
inc
es
in
popa
xchg
arpl
ja
icebp
inc
fldt
pop
js
pop
popa
scas
jmp
pop
or
push
repz
sub
ljmp
xorl
mov
mov
pop
cwtl
jecxz
arpl
xor
fdivp
and
mov
lret
sarl
rep
aaa
daa
fisttpl
sarl
mov
jno
push
mov
xchg
leave
push
ljmp
cmpsl
lods
adc
outsb
adc
cmp
rcrl
lods
sbb
mov
sbb
mov
movsb
adc
jne
mov
cwtl
aaa
mov
scas
and
scas
push
fs
jmp
pop
rcll
jmp
cli
inc
adc
lret
jmp
out
fsub
loop
stos
jge
loop
ljmp
lock
mov
repz
xchg
std
in
mov
fwait
lods
icebp
mov
mov
add
xor
in
push
xor
mov
clc
push
xchg
mov
ffreep
mov
xchg
sbb
movsb
and
data16
push
mov
test
imul
shl
in
fldl
cmp
ss
inc
mov
push
mulps
les
adc
outsb
or
dec
mov
fldcw
aaa
inc
sub
mov
ds
push
or
mov
dec
aam
ja
je
xor
orb
mov
sti
imul
mov
xchg
inc
sbb
jmp
inc
arpl
scas
xor
jg
cmp
mov
and
mov
rcll
cmpsb
add
mov
jno
test
mov
test
jnp
mov
mov
jle
xor
fstpl
mov
nop
or
outsl
adcl
ljmp
pusha
call
ret
jnp
or
jle
popa
pop
out
xchg
cmc
aas
hlt
cmpsl
jmp
push
scas
out
and
sub
push
and
ss
pop
push
jecxz
nop
cwtl
lea
cmp
mov
sbb
jle
fisubrl
sub
sbb
jbe
dec
pop
stos
inc
mov
sarl
fisubl
into
mov
mov
xor
adc
paddq
mov
push
es
insl
imul
mov
push
mov
shrl
xchg
rcrb
fldt
ret
xchg
mov
mov
mov
cmc
out
mov
sbb
insb
sub
insl
cwtl
les
and
sub
sub
xchg
int
add
inc
sub
out
sub
lds
cwtl
adc
es
xchg
fmulp
push
add
dec
mov
push
stc
cs
std
test
loope
das
dec
adc
push
pusha
out
jp
pushf
pop
mov
cmpsb
xor
adc
movsb
xor
stos
jl
mov
pop
or
call
xor
pop
adc
nop
enter
fs
popf
imul
push
sub
enter
or
mov
cmp
dec
xor
out
in
adc
push
cli
mov
pop
dec
mov
mov
inc
divb
or
into
out
dec
mov
mov
add
jmp
mov
mov
inc
out
mov
arpl
inc
sahf
out
ja
aaa
push
jle
std
ljmp
sbb
push
nop
cli
data16
add
sub
or
pop
mov
in
inc
or
pop
xor
outsb
pop
pop
cli
es
mov
xchg
jle
dec
rorb
dec
mov
scas
sub
push
subl
dec
cmp
jle
dec
mov
lret
out
mov
and
outsb
jmp
mov
int
sub
clc
xchg
jp
mov
lock
aad
jae
xor
mov
test
mov
or
xchg
adc
jp
cmp
push
xchg
mov
lods
push
vmovq
testb
jae
data16
cmp
lea
and
add
sub
clc
stos
adc
mov
xchg
and
and
aam
add
addr16
sbb
fwait
aad
sub
fisubrs
mov
aas
push
xor
xor
inc
cmp
jno
aaa
mov
mov
mov
lcall
loopne
xchg
mov
leave
add
add
movsl
out
in
push
ret
sub
je
jns
test
pop
jecxz
adc
pop
fnsave
es
inc
subl
out
mov
test
enter
inc
mov
pop
ja
xchg
stos
xlat
fcompl
repz
adc
jl
cli
sti
push
arpl
test
sbb
xchg
sti
cmc
xor
inc
jnp
js
sarb
sarl
imul
loop
and
pop
insb
psrad
or
xor
pushf
adc
push
int
pop
or
mov
pop
push
sub
filds
add
out
mov
jnp
nop
sub
test
cld
cmpsl
push
adcb
dec
pop
aam
ud0
test
sbb
in
cmpsb
enter
xor
xlat
fnstenv
pop
fstl
mov
and
jge
mov
jge
cmp
enter
bound
push
imul
sbb
filds
jmp
cltd
lret
xchg
and
mov
jo
xchg
jo
xchg
flds
rorl
or
mov
fmuls
and
je
sahf
xor
dec
pop
jl
push
je
sbbb
clc
xchg
sub
aad
sbb
test
jmp
push
mov
push
aad
mov
add
sahf
push
inc
pop
sbb
lret
xchg
sub
pop
rcl
xor
cmp
push
mov
leave
sbb
stos
pop
adc
loop
fcomp
call
stos
addb
xchg
jnp
insl
or
and
call
mov
sbb
enter
xor
xchg
fimull
mov
loope
pop
sbb
aad
outsb
jbe
and
add
or
data16
daa
adc
fnsave
out
int
mov
shrb
jbe
mov
cmp
jno
adc
aam
lock
negl
pop
stos
inc
push
mov
lds
dec
xchg
jecxz
mov
leave
sbb
or
mov
mov
mov
inc
icebp
cmc
jnp
cwtl
sbb
icebp
xor
push
jge
popf
aas
cmpsb
jae
popw
cmpsl
xchg
or
mov
jns
cmp
add
aam
dec
sub
xchg
push
test
jb
pop
cmp
push
mov
out
push
and
test
mov
fldenv
mov
lds
jns
insl
es
scas
lods
xor
push
cmpsb
dec
test
cmpb
pushf
inc
pop
pushf
addr16
mov
inc
pop
hlt
shll
inc
xor
add
adc
mov
push
dec
mov
adc
repnz
sarl
add
push
repnz
cmp
ljmp
cmc
test
imul
aam
cwtl
stos
pop
cld
cmp
inc
fiadds
cmp
push
sub
cmpb
popf
out
mov
jno
cmp
movsb
in
cmpsl
shlb
test
cmc
cmpsl
pop
lret
dec
popf
clc
addr16
lahf
push
push
test
repz
push
cld
xchg
stos
dec
mov
sar
jge
push
dec
rcrl
in
js
mov
push
mov
mov
testl
cmp
jge
enter
add
out
add
insl
insb
iret
or
or
sub
push
test
push
xchg
adc
addr16
sub
ret
jo
xor
jne
jne
jb
jae
mov
dec
jge
imul
lock
ja
inc
adc
enter
std
pop
jb
inc
xor
mov
lods
mov
push
inc
mov
mov
lret
lods
push
int
xor
push
mov
in
xchg
push
outsb
cmpsl
jg
clc
cmpsl
in
pop
jmp
int3
imul
cwtl
dec
pop
and
rclb
fisubrl
aas
push
dec
xchg
nop
fsubs
xchg
add
cmp
pushw
sbb
jnp
andl
mov
sbb
xchg
out
mov
jp
ss
out
add
sub
int
mov
je
cmp
lods
adc
mov
testb
pushf
fcmovnu
xchg
push
nop
test
repnz
hlt
pop
sub
das
xor
lahf
dec
mov
push
inc
mov
mov
leave
fistl
adc
push
add
xchg
and
fucomip
loopne
dec
ljmp
mov
mov
adc
in
add
jb
sub
mov
jmp
lods
inc
out
faddl
pop
call
mov
and
int3
sbb
lahf
sbb
lods
shl
aas
in
jnp
sbb
test
sub
inc
insb
sub
xchg
adc
aam
mov
jmp
call
or
xchg
xlat
les
cwtl
push
xor
push
cld
fdiv
mov
xchg
sbbb
pop
in
fs
aas
cmp
lcall
jo
pop
or
pop
test
mov
sub
das
jbe
add
inc
mov
lret
cwtl
insl
in
xchg
cmp
xor
cmp
fdivs
push
mov
fisttps
repz
insb
les
and
or
mov
cs
pop
or
push
rolb
faddl
pop
in
test
cmp
imul
xor
cmp
and
es
inc
xchg
add
lock
jo
lcall
push
push
int
and
pop
and
sub
in
cmp
rorb
pop
ds
adc
jbe
pop
dec
into
inc
hlt
add
mov
and
fmulp
nop
mov
outsb
dec
enter
jne
mov
inc
or
lret
out
lahf
push
ljmp
jne
daa
lret
dec
mov
fldz
pop
or
imul
xor
and
outsl
adc
fdivl
xor
dec
imul
test
xor
jno
std
scas
imulb
sahf
pop
idivb
lock
push
push
inc
xchg
push
jmp
loope
ret
mov
and
std
xor
ret
mov
mov
int3
test
lcall
fnstcw
outsl
sub
jg
insb
repnz
imul
xchg
aam
mov
xchg
sbb
mov
ds
nop
xchg
and
mov
xor
lea
mov
icebp
fstps
cli
leave
aaa
into
adc
jle
mov
mov
and
lods
xchg
xchg
mov
mov
xchg
add
rcrb
test
adc
ja
in
sahf
sti
mov
repz
add
dec
dec
jns
cmpsl
sbb
jge
not
insl
xorl
or
cmpsl
or
fbstp
repz
dec
xchg
xlat
rcr
or
int3
xchg
je
pop
mov
clc
loope
in
jnp
and
dec
or
inc
int3
rcr
mov
adc
xor
push
jge
cs
xchg
push
adc
xor
iret
in
add
lods
js
sahf
jbe
enter
into
dec
adc
inc
xor
or
or
xor
sub
iret
sub
test
movsb
test
arpl
mov
push
pop
push
scas
test
xor
push
sub
and
into
or
in
loopne
adc
inc
push
sub
scas
fstpl
jae
or
dec
jg
dec
mov
shrb
loopne
mov
cltd
in
sub
outsl
mov
lret
aas
push
cs
inc
adc
mov
pop
int
pop
loopne
repz
xchg
push
mov
cmp
cld
and
rolb
bswap
dec
mov
loopne
dec
sub
enter
xchg
cmc
sbb
aam
and
inc
sahf
aam
jl,pn
jb
pop
lds
or
fsubl
jb
and
jo
jb
iret
bound
into
dec
adc
pop
push
sub
dec
scas
and
stc
pop
enter
inc
icebp
push
mov
popl
cmpb
pushf
and
enter
adc
jmp
mov
fisubrl
xchg
pusha
pop
je
int3
mov
nop
out
xchg
dec
sub
xor
mov
and
or
cld
mov
or
xchg
clc
and
sbb
fnclex
inc
inc
jg
pop
int3
jns
lret
pushf
test
jnp
data16
sbb
ja
xchg
repz
inc
imul
mov
pop
jmp
sub
mov
mov
fsubs
jb
fstp
sbb
lret
arpl
fucom
out
addr16
xor
int
pop
xchg
inc
and
dec
xor
push
add
loop
pop
in
out
leave
jno
enter
mov
sbb
xor
jns
sarl
ljmp
sbb
ret
xor
ffreep
mov
or
psllw
add
or
sub
inc
jecxz
test
mov
jns
icebp
leave
adc
loopne
shrb
jne
rorb
lcall
mov
fimull
mov
inc
jns
dec
leave
stos
sbb
aam
imull
jg
or
or
nop
scas
je
aas
inc
push
sbb
ret
cmp
les
popa
lahf
into
rolb
enter
mov
mov
mov
es
mov
mov
lret
xchg
jg
daa
icebp
mov
jo
cmpsb
fwait
add
repnz
lods
mov
ss
jp
out
mov
data16
dec
mov
or
dec
popa
dec
fdivrs
test
cmp
movsb
cmpsl
inc
jb,pt
dec
xor
sarl
push
fmuls
lods
lret
sub
roll
dec
and
mov
stos
in
cld
insl
inc
inc
out
lds
dec
rol
add
ret
dec
cld
cli
mov
call
xor
adc
xchg
fisttpll
aam
in
cmpsl
fmull
neg
pop
addr16
pop
push
pop
js
and
aam
cwtl
daa
push
jle
leave
mov
loope
jnp
and
cmp
adc
pop
scas
cltd
pop
inc
push
jl
push
lcall
sbb
push
pusha
inc
aaa
xchg
jns
or
loopne
xchg
jle
pop
push
insl
jp
cmp
add
inc
fsubp
clc
fsubrs
lds
icebp
sbb
xchg
adc
dec
lods
jbe
sub
xlat
movsl
call
dec
add
daa
in
sbb
movl
push
mov
mov
and
push
sub
call
hlt
push
inc
out
cli
dec
movsb
popf
int3
xchg
sub
adc
repnz
in
xchg
xor
add
add
inc
rorl
popf
fwait
dec
sub
pop
rcll
fidivs
adc
out
sti
push
sbb
aas
into
sbb
push
mov
mov
das
insb
loop
ljmp
test
imul
je
mov
cli
pop
fadds
xor
and
inc
in
sbb
lret
cmp
sub
ffreep
cmc
lcall
int3
push
fxch
adc
jmp
push
xor
faddp
stc
int3
fcmovnb
test
outsl
xchg
xchg
push
aam
les
jp
add
sub
and
add
or
or
jg
out
mov
dec
jno
mov
inc
in
arpl
fcmove
insl
cltd
sbb
add
xlat
mov
push
jbe
adc
push
or
sub
cs
out
pop
pop
clc
loope
stc
add
push
cmc
into
popf
push
jge
push
jge
push
add
mov
add
jmp
mov
lods
test
jmp
dec
aas
aas
lret
jle
xchg
push
lods
sbb
xor
int
scas
sub
pop
shl
mov
inc
sbbl
mull
int3
adc
adc
and
in
xchg
inc
mov
ss
arpl
out
aaa
je
inc
inc
mov
push
pop
xchg
adc
mov
mov
js
stos
imul
jmp
mov
push
sub
nop
das
inc
scas
sub
es
adc
xchg
out
arpl
mov
lods
xor
sub
push
or
push
adc
xor
shr
mov
sub
lcall
into
dec
dec
enter
and
outsb
sti
es
inc
cmp
mov
aad
popa
xchg
inc
gs
xor
push
push
dec
ret
loopne
sbbl
add
jno
ss
mov
mov
mov
clc
loop
bsr
push
int
pop
xor
movsl
orl
mov
loope
xchg
ret
cmp
setle
xchg
lods
inc
fcmovnb
and
jb
sub
mov
pop
cmpsl
jmp
cld
inc
ds
xor
in
pusha
cmp
sbb
push
push
sbb
loope
jae
rorl
pop
push
ret
test
cmp
push
sahf
mov
mov
jne
fs
out
or
fildll
out
rcrl
and
pop
ficompl
movsl
xor
into
cmp
into
adc
repnz
cmp
loopne
xor
test
loope
push
rcll
sub
xorl
mov
jnp
mov
jb
and
aas
and
or
cmpsb
test
sub
ss
lahf
jl
rcl
mov
inc
and
jge
inc
xchg
mov
mull
mov
daa
push
pop
pop
mov
dec
in
mov
xchg
jns
mov
ret
sub
adc
idivb
xchg
xchg
sbb
fimuls
xor
arpl
xlat
fidivrs
or
ja
mov
jno
mov
cltd
stos
rcl
dec
pop
movsl
inc
loope
cmp
imul
into
pusha
push
xchg
push
xchg
andl
dec
test
cmp
push
test
inc
and
jae,pn
loop
gs
or
loopne
nop
mov
insb
js
dec
ds
adc
dec
ret
movsb
in
push
or
jg
adc
stc
stos
cmpsb
jmp
pop
rcrl
aas
inc
jae
enter
or
fisubl
test
mov
and
add
xchg
inc
inc
cmpsb
repz
cwtl
inc
xchg
test
out
cmpsb
flds
in
cmpsb
test
add
testl
inc
ja
add
sbb
cmp
dec
shll
push
iret
outsb
repnz
ss
jne
push
sub
test
push
mov
mov
mov
lret
xchg
xchg
ret
fwait
dec
int3
pop
pop
cmc
leave
mov
movaps
nop
xchg
ret
lods
dec
jecxz
push
jg
mov
jge
aaa
mov
lret
out
fnstenv
push
mov
push
jmp
jmp
pop
mov
fcmovne
mov
mov
jecxz
and
das
adc
nop
jne
mov
into
cwtl
clc
sub
mov
cld
jp
or
lock
jns
pop
mov
push
push
push
xchg
xchg
mov
inc
pop
icebp
nop
mov
and
push
andl
sbbl
dec
call
xor
mov
xchg
adc
dec
mov
rcr
popa
sbb
mov
mov
cld
stos
cli
sbb
and
jbe
cs
sbb
enterw
mov
adc
dec
cmp
cmp
cmpsb
dec
mov
nop
lds
movsb
out
sub
adc
dec
mov
clc
cmp
and
xchg
negl
jns
loopne
sti
inc
ret
inc
mov
lds
sub
and
aaa
lods
pushf
pop
jle
jecxz
int3
mov
push
dec
xchg
mov
adc
outsb
sbb
adc
pop
fdivs
out
sub
incl
xor
call
jb
insl
sti
pop
cmpsl
add
jg
push
mov
cs
sbb
cmp
dec
cmp
cs
sbb
inc
push
cmpsl
inc
cmp
or
insl
neg
cmp
push
fbstp
lret
out
mov
nop
lods
gs
in
nop
clc
push
or
icebp
push
pushf
adc
sti
test
push
mov
xchg
or
pop
fnsave
cmpsb
jbe
jg
xchg
testl
xchg
xchg
cmpsb
lock
adc
pop
and
mov
out
popa
push
movsb
fsts
cmpsl
cmp
js
push
mulb
inc
xor
ret
addr16
out
rorl
pop
sub
inc
cld
push
dec
jl
mov
dec
aaa
push
ljmp
hlt
dec
mov
sbb
mov
cmp
sbb
in
pop
add
or
pop
fwait
cmp
shrl
mov
or
xchg
leavew
cli
pop
adc
movsb
sub
cmp
add
out
idivl
push
sub
leave
mov
jg
lret
in
mov
jnp
cmp
sub
insl
mov
inc
std
dec
cmp
cmp
mov
jne
bound
loope
mov
jo
stos
sahf
xor
or
je
ljmp
xor
ljmp
stos
jno
inc
xchg
cld
mov
dec
pop
sbb
fists
lods
repnz
mov
adc
mov
fs
pop
xchg
repz
mov
stc
ja
and
push
push
and
outsl
fs
test
in
pop
mov
mov
outsl
je
jne
xchg
out
fisttpl
loopne
push
xchg
lahf
nop
andl
push
sbb
mov
rcrb
sbb
pop
imul
movsb
or
sbb
scas
mov
add
cmpsb
and
cmp
stos
inc
cmpsl
leave
push
adc
movsb
pushf
dec
sarl
pusha
adc
pop
lds
mov
fldcw
jbe
in
xor
push
cltd
loopne
mov
pop
stos
cmp
cmp
pop
out
int
bound
aaa
mov
cmp
jp
nop
jle
xor
aas
in
jge
cltd
cld
aas
data16
mov
sahf
movsb
mov
lahf
sub
pop
jno
or
push
mov
inc
movsl
xchg
mov
scas
lret
lret
add
lods
ret
inc
call
mov
push
in
push
xor
add
add
pop
mov
loop
movsb
in
adc
xorl
ret
das
lea
das
subl
fisubl
mov
into
call
cmp
xor
inc
mov
roll
mov
out
movsb
and
adc
pusha
mov
or
cmp
mov
adc
lret
xchg
xchg
inc
xchg
jbe
nop
sbb
sarb
mov
push
in
xor
test
cmc
mov
mov
outsl
adc
add
insb
adc
mov
gs
scas
and
xchg
push
pop
test
icebp
sbb
popf
mov
js
add
insb
sbb
add
loope
test
cmp
test
cmp
mov
or
fwait
dec
rcll
and
loop
clc
in
sub
inc
push
xor
mov
sbb
insb
inc
pop
mov
mov
xor
stc
xchg
mov
xor
adc
aaa
hlt
or
xor
lahf
sub
mov
fstpt
lcall
js
xor
aas
movlhps
sub
adc
mov
sbb
sbb
aaa
cltd
jo
mov
add
push
push
push
pop
es
out
into
std
cmp
repz
adc
xor
insl
pop
mov
and
repnz
push
mov
mov
stos
push
xor
mov
stc
mov
mov
mov
push
adc
clc
aas
cmp
pop
push
out
mov
lea
fimuls
inc
mov
mov
lods
shr
xchg
mov
cmpsb
sbb
adc
jge
adc
pushf
in
popl
lret
dec
int
addb
inc
jnp
cmp
push
or
push
xchg
pcmpgtb
inc
and
mov
xchg
mov
mov
jne
xor
clc
mov
cmp
cli
out
inc
cwtl
xor
shl
dec
in
jle
inc
ljmp
xchg
ja
cmpsl
mov
mov
ficoms
cwtl
cmp
movsl
movsb
bswap
movsl
or
add
jmp
add
cmpsb
mov
and
jle
pop
push
lcall
mov
cmp
loopne
xchg
out
or
jmp
test
sbb
int
pcmpgtd
push
xchg
mov
jmp
xchg
les
xor
xchg
sub
xor
jecxz
dec
pop
push
xor
arpl
aad
or
push
pop
or
out
or
cmp
icebp
cmpsl
cmp
fs
sahf
out
sub
popa
adc
daa
test
jl
add
push
ret
xchg
test
test
xor
push
inc
decl
data16
mov
sub
lock
jae
xor
sete
pop
jge
js
mov
into
idivl
and
loop
jg
push
inc
push
fdivr
add
enter
cmpb
mov
cmp
test
faddp
addr16
pop
orl
std
mov
dec
jbe
sbb
data16
cmc
jne
daa
dec
push
in
js
ret
mov
imul
loop
cli
xchg
lahf
sub
mov
lea
mov
outsb
push
inc
in
mov
mov
sub
add
ret
jge
ss
lock
or
mov
mov
cmp
push
cmp
inc
xchg
add
movsl
daa
sarb
sub
loope
cmpsl
sahf
xchg
inc
in
inc
add
mov
loopne
add
adc
std
aas
jb
insb
pop
es
jmp
jg
jns
fnsave
iret
mov
popf
add
push
mov
mov
add
mov
mov
lcall
adc
xchg
adc
jo
cmc
scas
mov
ds
pop
rcl
and
icebp
mov
or
or
sub
ds
sbb
dec
sub
jle
push
popa
xor
add
mov
mov
xchg
pusha
mov
mov
mov
jb
cld
mov
jo
mov
xor
push
push
push
jg
loope
movsb
adc
mov
cmpsb
sub
or
push
in
mov
pop
stc
and
mov
notl
popa
dec
sbb
push
sub
jbe
hlt
lods
cwtl
rcl
repnz
xor
inc
fisubl
insl
cli
pop
jae
sub
je
jne
jg
incb
js
add
lds
outsl
xor
imul
out
inc
test
cwtl
sub
pop
inc
lea
sub
pop
xor
in
je
ss
dec
std
sub
dec
pop
lods
testb
shrl
jno
dec
sub
loope
add
hlt
lret
fwait
or
sahf
ljmp
pop
jne
je
pushf
rcrb
inc
imul
and
sti
jns
jp
ja
pop
pusha
in
mov
js
sbb
pop
mov
shlb
nop
jns
dec
jbe
fcoml
xor
stos
xlat
mov
sahf
adc
out
mov
push
dec
cmp
mov
jb
test
fisttpl
idiv
cmp
addr16
movsb
xchg
data16
xlat
scas
rorb
scas
in
call
pop
ficoml
outsb
test
inc
add
mov
pop
xchg
add
data16
or
std
and
movsb
lahf
repz
jbe
rorl
pop
mov
add
mov
sub
mov
clc
xchg
pop
je
pop
pop
iret
adc
mov
inc
adc
stc
lret
push
les
mov
fsubrl
mov
hlt
popf
mov
popf
out
sarl
mov
add
mov
shll
cld
jae
xchg
jp
stos
and
iret
sub
add
lods
inc
adc
pop
lret
lret
icebp
aad
leave
push
stos
cld
push
in
xchg
pop
and
fsubrp
fsubr
out
or
jl
in
ds
nop
push
and
pop
test
and
add
push
jae,pn
pop
call
fidivrs
les
mov
push
daa
jle
xchg
imul
test
ja,pn
adc
sbb
push
pop
in
lea
ja
jns
sbb
ljmp
or
push
in
jno
cmp
sbb
clc
int3
or
push
xchg
int
dec
testb
add
or
inc
mov
mov
jg
lret
or
mov
and
dec
scas
xchg
inc
cmc
and
and
push
xchg
push
pop
fimuls
xchg
pushf
sub
bnd
xor
mov
push
movsb
adc
push
jmp
push
sbb
xor
push
mov
sub
inc
xlat
mov
xchg
sub
loopne
mov
sbb
insl
inc
test
pop
in
jbe
in
push
jne
ret
fldl
push
inc
cmp
pop
out
jmp
sub
push
mov
jbe
mov
xchg
mov
jmp
adc
pop
jecxz
mov
xor
stc
xchg
insb
xor
movsb
mov
into
lock
iret
cmp
das
xchg
imul
mov
lahf
call
sbb
or
aad
sbb
inc
push
ficoml
xchg
arpl
push
lcall
cmp
in
cmp
in
adc
xchg
pop
lret
pop
push
iret
pop
mov
scas
add
in
mov
and
icebp
cli
adc
in
aad
push
rorb
sbbl
repz
das
sub
inc
outsb
or
mov
fiadds
sbb
inc
test
stos
insl
xchg
mov
jp
subl
sahf
mov
xchg
lret
test
imul
stc
fidivrl
push
ljmp
jae
repz
mov
ljmp
cli
mov
cmpl
in
or
cmp
clc
into
push
inc
call
sti
or
push
sbb
shll
subl
adc
in
cmp
std
adc
fwait
sbb
insl
aad
mov
aam
lods
push
cld
aad
xchg
adc
mov
aas
mov
fisttpll
or
subl
stc
dec
xchg
adc
shll
dec
imul
mov
std
jg
xor
mov
adc
testb
xchg
movsb
subb
mov
ror
movsl
cmp
std
pop
xor
mov
test
jne
sarb
xlat
fs
repz
or
mov
mov
cmp
loop
dec
movsb
popf
mov
call
and
ss
and
adc
mov
pop
mov
xorl
cltd
test
mov
std
adc
stc
lds
pop
leave
xchg
insl
cmp
imul
popa
add
jecxz
out
ds
xor
mov
jae
imul
jge
jo
mov
mov
jge
adc
scas
jmp
cmpsb
nopl
cmc
lock
ljmp
lcall
int
cwtl
dec
stos
cmp
arpl
scas
xorb
dec
sbb
les
pop
xchg
aas
ljmp
xchg
cmpl
dec
aad
cmpsl
xor
bound
and
mov
lods
pop
jmp
bound
xorb
insb
rcrl
mov
enter
popa
sub
stc
iret
and
and
push
cwtl
fwait
mov
cmpsl
mov
cmp
into
mov
dec
adc
xor
mov
xchg
sbb
in
inc
enter
subl
in
adcb
mov
scas
pop
enter
mov
mov
or
ds
mov
dec
and
mov
jb
aas
sbb
xchg
in
adcl
movsb
movsb
add
lock
cmp
fprem
pop
cmp
mov
outsl
mov
icebp
dec
push
mov
cmpsb
sbb
inc
lret
bound
loopne
sub
adcb
cmp
push
mov
popa
loopne
lods
movsb
xor
imul
into
push
pop
repnz
push
mov
mull
jg
in
mov
xchg
out
lds
jae
and
inc
sub
cli
dec
popa
in
mull
insl
leave
in
cli
jge
and
mov
insl
hlt
mov
cmp
mov
les
push
mov
xor
cmpsl
xor
into
pop
jno
out
sbbb
lret
ljmp
das
jae
daa
fucomi
ljmp
dec
lods
xor
mov
adc
xchg
jno
cwtl
dec
dec
repz
xchg
add
xor
xchg
sub
imul
dec
divb
int3
jp
icebp
rorb
push
inc
or
fisubrs
flds
loope
bound
adc
adc
sub
in
imul
es
jl
pop
xchg
gs
xchg
mov
adc
ljmp
popf
and
push
dec
adc
inc
mov
push
xchg
pop
and
mull
gs
xor
daa
loopne
mov
insb
fcmovne
iret
stc
pusha
adc
icebp
add
imulb
add
sahf
cmp
sbb
inc
scas
xchg
pop
jle
mov
imul
pop
mov
out
fadds
es
int
xchg
scas
xlat
add
xor
dec
dec
rclb
push
call
icebp
add
clc
sti
jne
pop
cwtl
rcrb
pop
add
sti
rorb
popa
scas
mov
aad
mov
cmpsl
loopne
xchg
repz
popf
push
in
push
int
jl
loope
jns
ffreep
xor
das
pop
sbb
inc
cmp
inc
adc
out
sbb
adc
sub
dec
inc
sbb
ja
imul
out
inc
mov
adc
lds
roll
xlat
push
push
dec
jbe
mov
pop
xchg
stos
inc
jb
sub
out
addb
out
mov
mov
in
lahf
mov
ret
pop
enter
dec
addr16
xchg
sbb
lcall
in
fbstp
xor
pop
popf
cmpsb
call
std
bound
lock
add
jo
cvtdq2ps
nop
push
ss
lahf
push
jb
inc
inc
sti
sub
stos
stos
aaa
and
pop
dec
jne
ds
jae
jb
adc
jmp
xchg
mov
push
sub
jnp
xchg
shrl
inc
mov
test
icebp
les
aam
xchg
mov
sub
xor
add
div
sbb
jnp
mov
ret
mov
leave
sbb
ja
movsl
test
scas
shll
push
mov
shll
mov
jnp
rol
imul
xlat
or
test
mov
jle
or
or
int3
adc
inc
xor
flds
out
xchg
pop
orl
jne
pop
lahf
js
push
jns
pop
xor
fsubl
int
push
mov
stc
mov
arpl
cmc
mov
idiv
jp
and
mov
dec
jecxz
mov
dec
iret
cli
xchg
fisubrl
cltd
daa
lds
mov
push
or
nop
popf
mov
cmpsl
std
fldenv
xor
jns
mov
mov
or
inc
aas
sti
mov
notb
sub
push
cmp
push
pop
xor
and
and
push
xchg
notb
fwait
std
hlt
dec
pop
mov
xchg
call
sub
jl
dec
shr
pop
int
mov
clc
or
dec
fwait
daa
pop
pop
lods
in
or
xchg
pushf
movaps
enter
daa
push
mov
mov
xorb
mov
dec
mov
and
mov
das
lea
inc
daa
xchg
lcall
or
xchg
xchg
cmp
xor
jno
jno
movsl
push
adc
leave
xchg
divb
test
cmpl
pop
fwait
pusha
pop
in
int
das
jnp
xor
mov
das
pop
xchg
pop
cmp
mov
sbb
movsb
int3
imul
jmp
pusha
les
cld
pusha
cli
sub
dec
push
popl
jnp
or
xor
mov
fsubrs
xchg
xor
push
sub
in
out
dec
inc
fwait
dec
ror
push
adc
adc
cli
jge
sub
pop
inc
aad
in
push
dec
cmpsl
and
int
jmp
lret
fdivp
jno
push
and
mov
inc
mov
pushf
repnz
shrb
cmc
mov
faddl
cmp
icebp
sub
push
fstl
mov
jp
scas
ds
rolb
in
add
lea
icebp
lcall
push
fsubrl
mov
or
pushf
std
rcl
fildll
cld
test
inc
inc
scas
push
cwtl
loop
cli
add
or
mov
das
jp
or
ljmp
adc
mov
mov
insl
addl
sbb
das
test
cltd
jo
callw
mov
mov
xchg
pop
std
jnp
jg
mov
mov
stos
aaa
iret
aas
icebp
push
mov
leave
in
push
add
test
leave
adcb
add
icebp
inc
iret
loop
jge
cmpsl
mov
pop
iret
mov
sbb
lahf
and
dec
pop
xchg
mov
mov
jecxz
lcall
cs
sub
loop
rolb
adc
sbb
xchg
out
jae
stos
movd
daa
mov
std
cmp
xchg
sub
fdiv
imul
ret
cmpl
or
lds
inc
int
xor
pop
sbb
movsb
repnz
jns
faddl
mov
mov
pop
or
idivl
and
cmpsl
in
lret
fs
insb
sub
xchg
xchg
int
dec
add
sbb
jnp
rorl
pop
iret
xchg
pop
cmp
out
mov
push
in
pusha
clc
sbb
xchg
arpl
jbe
push
out
pop
jb
bound
jmp
bound
jp
sti
xchg
clc
outsb
mov
push
lahf
push
aas
lahf
data16
arpl
icebp
ja
iret
arpl
pop
cmp
xor
pushf
mov
dec
cli
push
mov
jmp
mov
or
out
es
and
outsl
jo
pop
pop
push
jg
dec
or
lahf
inc
or
pop
cli
adc
nop
aaa
mov
test
vcvtpd2dqx
xor
xor
sub
xor
ja
mov
jle
mov
or
cmp
and
imul
sahf
pavgw
xlat
inc
sahf
jmp
rclb
cs
xchg
push
mov
sbb
fildl
in
testb
dec
stos
mov
test
dec
add
xchg
out
insl
pop
and
xchg
sbb
stc
call
push
imul
rcrb
inc
pop
shlb
xchg
insl
add
insl
pop
xor
pop
ret
out
push
push
xor
iret
pop
outsb
faddl
inc
dec
and
js
jbe
push
adc
sub
aam
and
fs
sti
notl
sbb
lahf
push
imul
jno
mov
sub
into
dec
and
ret
mov
or
pop
mov
lds
lea
imul
sub
fidivs
sbb
mov
push
cmp
movsl
in
sbb
dec
cld
mov
add
mov
scas
pop
mov
popa
sub
xor
das
adc
stos
sub
loope
adc
iret
mov
xchg
shlb
mov
mov
sub
adc
or
push
jecxz
subl
cmp
dec
loopne
pop
xor
test
out
pusha
shrl
pop
data16
outsl
push
cmp
cld
loopne
aad
clc
in
movl
adc
push
push
xchg
aam
les
test
inc
fsubs
push
cmpsl
jno
outsb
or
or
jge
fimuls
xchg
cltd
cld
mov
iret
fimull
aaa
clc
dec
sub
mov
out
repnz
icebp
shl
jp
cld
addl
jg
pushf
outsb
and
mov
leave
sub
scas
jmp
push
mov
jae
cltd
shll
cmp
or
aam
dec
sub
fidivs
mov
mov
addr16
xlat
loope
mov
and
xchg
aas
xchg
cmp
push
loop
xchg
mov
outsl
sbb
out
mov
adc
inc
psllw
pop
addr16
add
in
mov
aas
adc
out
insl
mov
jbe
and
pushl
mov
and
int3
les
ss
das
dec
adc
insl
mov
add
xor
sahf
jl
mov
sbb
loop
out
or
xchg
mov
xchg
fnstenv
mov
pop
mov
jge
adc
rolb
cmp
test
lods
push
mov
adc
or
mov
out
cmpsl
xchg
dec
pop
inc
stos
les
cltd
test
or
xchg
sbb
jne
out
sub
sub
pushf
dec
dec
or
in
mov
dec
dec
nop
dec
cs
es
dec
test
pop
loopne
fcompl
cmpsl
test
mov
scas
fcmovnb
or
adc
xor
jmp
ds
mov
test
mov
loopne
and
imul
cs
ds
or
push
leave
negl
jl
push
mov
movb
pop
insl
push
lcall
xlat
mov
pop
mov
in
shrl
test
push
mov
loop
or
pop
sub
sbb
aam
out
shlb
and
int
push
pop
sahf
inc
loopne
and
push
int3
clc
sbb
adc
pop
bound
sbb
cld
pop
xchg
movsl
mov
sbb
dec
out
arpl
cld
cwtl
jmp
mov
loope
lock
je
stc
cmpsb
shr
scas
data16
xor
mov
fnstenv
lret
movsb
inc
xchg
mov
fstpl
les
mov
jmp
mov
mov
or
sub
out
popa
add
cli
push
shrb
cmp
fidivrl
mov
roll
pop
sbb
rcll
clc
int3
cmc
adc
ret
cmp
sub
push
arpl
loope
jae
add
subl
lock
cmp
sbb
mov
roll
rcll
imul
lods
or
iret
loop
cmpsl
aaa
lret
adc
or
mov
cltd
mov
arpl
sub
loope
push
jo
leave
mov
cwtl
mov
adc
and
push
popf
ljmp
bound
jl
pop
mov
ds
adc
mov
aaa
xor
inc
pusha
test
xchg
sub
fnstcw
mov
pop
and
or
add
loop
fwait
imul
addb
scas
test
mov
ljmp
pop
movsl
pusha
icebp
bound
stos
mov
fdivr
in
leave
outsb
es
jle
icebp
in
mov
xchg
je
cmp
cmp
loope
mov
jmp
mov
or
adc
push
mov
pop
dec
inc
aas
lods
and
jp
test
stos
test
inc
xor
pop
pop
mov
scas
cltd
cltd
pop
and
add
scas
mov
pop
inc
into
pop
sbb
adc
cmpsb
jl
add
ret
pop
xlat
iret
sub
mov
inc
adc
xchg
int3
jae
adc
mov
lret
fcmovnu
adc
inc
jp
notb
jge
sub
es
pop
cmp
neg
jge
aam
inc
jl
and
ljmp
js
ss
shl
insb
mov
lahf
xchg
mov
jae
adc
popa
jb
aad
movsl
in
cmp
cwtl
inc
andb
push
pushf
push
jnp
lds
mov
inc
or
mov
les
jo
pop
icebp
mov
movsb
sbb
data16
call
pop
test
cmp
movsl
ret
out
movsl
mov
add
push
or
sahf
cmp
ss
lcall
inc
mov
movsb
sbb
ss
cmpsb
push
sbb
sbb
xchg
inc
mov
sarl
mov
and
fsts
cld
loope
ss
and
sub
xor
sbb
rolb
and
int
xchg
xchg
negl
jae
xor
inc
not
clc
add
lcall
scas
popa
sahf
mov
cmp
push
jne
lods
mov
enter
cmp
push
test
out
or
inc
sub
loopne
aad
mov
mov
add
mov
mov
mov
cld
jnp
pop
imul
jae
jp
cmp
mov
test
in
dec
xchg
rcrb
inc
lods
andl
mov
push
lods
in
dec
push
xlat
cwtl
data16
lret
mov
cld
roll
jb
jb
outsl
jne
jb
and
ret
fisubl
cld
xchg
fmull
insb
seta
inc
mov
sbb
sar
je
inc
xchg
sbb
xchg
and
mov
out
lret
jae
dec
push
scas
sub
orb
pop
ficompl
cltd
ds
pop
aam
xor
es
es
add
out
sbb
pushf
test
das
call
xchg
test
or
insb
pop
xchg
pop
lahf
dec
cmp
repz
popf
int3
cmpsb
push
xchg
mov
loop
ror
pop
orb
fcomi
inc
mov
mov
adc
cmp
and
mov
mov
sub
sub
mov
mov
xor
push
mov
into
push
andb
shl
rol
call
add
rolb
or
rcrl
ja
pop
cwtl
inc
sti
cmp
lea
dec
sbb
out
inc
dec
in
lods
rcrl
sub
test
mov
adc
dec
inc
push
scas
out
cmp
adc
sub
pop
sub
popa
dec
push
int
test
call
push
lods
je
sbb
cmc
cld
int3
popf
out
dec
fwait
xchg
push
mov
icebp
push
and
imull
sbb
dec
dec
movsl
jae
sbb
mov
mov
mov
popa
xchg
mov
idivb
push
rolb
scas
daa
add
mov
pop
mov
xlat
adc
je
clc
dec
ret
push
inc
mov
inc
xchg
mov
mov
pop
jmp
pop
imul
cmp
and
stos
push
cmpsl
or
and
ss
inc
pop
cmp
pop
pop
inc
push
test
push
xchg
out
arpl
daa
jmp
cmp
cli
lea
movsl
inc
icebp
or
cmpsl
dec
or
clc
sub
jbe
or
push
leave
cltd
nop
movsb
mov
and
popa
and
fisubrs
sub
orl
lds
les
setle
jno
xchg
add
neg
sarb
adc
mov
loopne
cld
inc
lret
mov
pusha
pop
scas
into
fnsave
pop
lcall
xchg
pop
shrl
sar
es
lret
jne
out
test
ja
mov
jmp
dec
icebp
xchg
push
repnz
lcall
cwtl
push
insl
hlt
cmc
sub
stos
outsl
xchg
and
aad
out
repnz
loopne
push
leave
loope
in
int3
push
mov
cli
call
inc
xchg
and
xchg
test
out
aad
mov
mov
push
popf
xor
aaa
sbb
imul
sbb
add
jo
adc
xor
out
xor
lock
lock
add
jmp
or
jmp
jo
clc
push
add
jmp
mov
push
push
imul
sbb
jo
sti
mov
push
mov
jge
test
push
push
lret
sahf
or
movsl
xlat
outsl
mov
sahf
adcb
and
orb
stos
rclb
mov
inc
push
jg
es
out
pop
xchg
add
aam
stos
cli
push
icebp
loope
add
sti
stos
add
or
mov
repz
jno
cld
aad
mov
lret
movsb
dec
test
pop
or
add
movsl
ljmp
mov
sub
jecxz
xor
fimuls
inc
dec
xor
bnd
sbb
mov
cmp
clc
and
inc
cmpsb
jno
dec
and
arpl
ljmp
shrb
add
leave
adc
xchg
out
and
push
sub
jb
dec
js
and
jbe
lds
aas
mov
adc
adc
sub
clc
sub
push
mov
sbb
mov
test
stos
dec
fwait
cmp
into
je
add
movb
das
adc
cmp
std
fimuls
and
push
add
add
mov
mov
mov
shl
leave
inc
test
fdivrs
mov
inc
rcr
fdivr
push
inc
cmp
jecxz
adc
fldenv
adc
adc
jp
enter
arpl
pop
test
cs
pop
add
mov
cld
aas
cmpsb
xchg
sub
or
sub
adc
sti
loop
sbb
cld
cmp
mov
test
sbb
push
fldcw
popf
fisubrl
mov
sub
xchg
or
stos
or
and
sbb
call
cmc
jno
pop
aad
rolb
flds
adc
mov
cld
jl
jbe
push
jg
mull
lock
aam
jecxz
jne
cld
ds
lds
cli
jnp
jno
icebp
movsb
stos
gs
into
cwtl
cmp
jg
movsl
jo
repz
sahf
inc
mov
mov
fstl
xor
sub
sbb
push
sub
in
push
je
and
lods
xchg
je
or
xor
loope
mov
psubsb
mov
fidivrs
mov
cwtl
jo
mov
inc
fiadds
xor
xor
mov
in
mov
dec
testb
stos
push
loop
ljmp
cmpsl
inc
xchg
aas
jmp
dec
out
int3
js
cmp
and
mov
xchg
mov
adc
imul
sbb
lcall
dec
inc
mov
push
pop
ret
movq
jno
lcall
mov
insb
aaa
pop
out
pop
adc
push
jne
xchg
pop
lock
cmp
mov
leave
outsb
mov
push
jbe
mov
popf
pop
je
addr16
sub
rclb
imul
test
xor
mov
xlat
cli
cwtl
xor
inc
lds
jmp
ja
std
mov
sbb
xchg
adc
cld
cmpsb
mov
sub
dec
popl
outsb
stc
mov
add
test
lods
lret
pop
jl
cmp
add
cld
cmp
or
or
pop
fildl
push
fbld
jp
outsl
in
out
ja
mov
out
and
sbb
dec
add
add
fstps
icebp
sahf
jmp
data16
mov
cmpb
into
jg
test
pop
mov
inc
test
cmp
xor
mov
jl
and
push
xchg
pusha
pushf
push
push
xchg
fsubs
outsb
loop
add
jno
sbbl
mov
fidivrl
xor
pop
mov
cmpsl
xor
out
push
inc
imul
jg
or
cmp
sar
or
mov
jne
sub
pop
inc
adc
test
pusha
mov
addb
sbb
mov
xorl
int3
sub
jecxz
or
out
inc
lea
xor
sub
push
or
push
dec
add
hlt
addb
leave
mov
imul
aad
jmp
adc
bound
imul
mov
and
xchg
ret
xchg
xchg
adc
xor
mov
es
jne
ds
sub
xlat
es
jne
outsl
movsb
dec
pop
mov
mov
arpl
adc
sub
pushf
jp,pn
sub
mov
pop
mov
jnp
pop
outsb
jae
and
mov
subb
inc
pop
dec
lahf
inc
cmp
sub
dec
mov
dec
dec
jmp
in
aad
add
lcall
xor
out
pop
inc
mov
ljmp
xchg
lock
add
popa
idivb
pusha
aaa
pusha
mov
cmpsl
xorb
call
and
pop
test
sub
inc
push
test
lock
rol
outsb
icebp
sbb
adc
movsb
dec
xor
lcall
push
xlat
jge
and
sbb
pop
in
mov
push
push
pop
cmp
sbb
outsb
fisubrl
popf
inc
hlt
push
xchg
xorb
fmull
cmc
aam
gs
data16
jbe
jo
push
pop
out
idivb
or
cmp
int3
fwait
dec
fld
add
lret
adc
mov
rorl
sub
rolb
call
xor
sub
mov
inc
pop
lods
into
dec
negb
sbb
pop
popa
cmpsb
mov
mov
inc
sub
outsl
cmp
dec
test
pop
jns
cmp
cmp
jge
dec
test
and
or
inc
jecxz
pop
xchg
outsl
es
std
mov
and
adc
roll
xchg
sub
dec
sub
push
pushf
inc
push
sub
call
enter
push
pop
dec
mov
mov
mul
mov
test
loopne
mov
loope
in
loopne
clc
inc
in
outsl
adc
jle
lods
mov
lods
fcomps
insl
lcall
int
mov
out
orb
or
dec
push
push
fnstenv
pop
or
lcall
dec
or
pop
scas
stc
aad
inc
ljmp
or
xor
aaa
cmp
add
mov
insl
xchg
test
cs
or
adcl
shlb
or
lea
adc
and
fisttpll
fcomps
cmp
test
loope
fs
push
or
jbe
arpl
bound
in
lahf
lods
insl
fildll
mov
mov
aam
out
adc
repz
sahf
call
or
stos
ljmp
lahf
incb
pop
xchg
test
pop
outsb
popf
mov
mov
bound
cmpb
mov
dec
iret
add
push
shlb
into
xchg
push
pop
xor
xchg
cmc
cmp
add
hlt
loop
mov
mov
insl
cltd
inc
jle
sub
sar
in
leave
cmp
push
lcall
mov
clc
fstpt
jp
mov
jo
clc
out
lret
dec
adc
out
push
and
loop
pop
pop
lret
adc
lock
out
mov
in
shll
sbb
int
push
mov
xchg
lret
pop
ss
add
and
ret
sbb
sbb
mov
outsb
mov
cmp
mov
cmp
sub
push
fildl
pop
xor
jp
xchg
nop
loope
xor
sbb
mov
imul
shrb
jmp
cmp
mov
imul
loopne
pop
xchg
ret
outsb
cmp
inc
push
xlat
out
mov
jge
stos
js
out
lods
loopne
push
mov
push
out
mov
nop
out
call
stos
data16
pushf
mov
mov
push
lea
and
adc
in
dec
mov
hlt
pop
test
dec
insl
or
lahf
out
stc
push
adc
loope
test
xor
movsb
sub
jmp
hlt
dec
mov
scas
add
cmpsb
lods
adc
mov
xchg
test
dec
mov
adc
fs
arpl
pushf
lcall
add
and
movl
mov
mov
pop
mov
fistpll
cwtl
mov
xchg
sbb
out
popf
outsb
out
dec
aad
fcomps
and
sbb
mov
bound
imul
jae
fwait
out
jns
mov
stc
je
pop
out
jb
inc
cltd
movsl
fsubl
inc
push
xor
push
inc
xchg
mov
nop
int
addr16
jle
mov
lods
mov
adc
or
push
mov
pushf
sub
int3
aaa
dec
mov
jnp
aaa
iret
sbb
mov
and
lods
pop
cmc
ljmp
int
movsb
add
inc
cmp
xchg
jmp
sbb
test
jnp
lds
and
nop
jbe
je
test
leave
pop
inc
divl
jno
mov
cmp
add
dec
inc
push
inc
sub
in
lea
out
mov
push
cmp
out
xor
inc
jbe
aam
pop
inc
scas
pop
jns
pop
aad
mov
mov
pusha
pop
test
push
clc
jo
push
stc
add
mov
in
xorl
loop
lcall
adc
or
test
out
rorb
inc
push
addr16
in
cmp
out
dec
jecxz
add
mov
mov
adc
cmpl
aad
pushf
repz
push
cwtl
in
sub
out
stos
push
xchg
test
out
and
lret
ret
lret
cmp
insl
mov
subl
cld
jno
push
dec
leave
fcoml
aam
je
or
push
mov
jecxz
loop
xlat
xor
cmp
insl
fisttps
xor
mov
push
xchg
mov
xchg
cs
test
fcoms
out
jge
repnz
dec
pop
lcall
inc
cwtl
fidivs
out
sbb
icebp
nop
addl
lret
push
rcrb
sbb
cltd
hlt
or
aad
cmp
int3
xchg
jg
push
push
in
js
adc
inc
clc
dec
adc
pop
jae
mov
dec
cmp
clc
pop
dec
jns
rclb
xor
enter
aas
das
mov
jmp
mov
ss
fsubs
xchg
add
push
xchg
push
dec
mov
cmp
incl
fucomi
cs
popa
ror
inc
imul
sbb
shrl
pmaxub
push
mov
decl
stos
jbe
cmpsb
cmp
pop
nop
cmp
jmp
jne
in
rep
in
or
xchg
or
ss
fldt
adc
outsb
xor
loop
enter
mov
movl
xchg
pop
cmpsl
add
in
fisubrs
push
sub
std
xor
ljmp
mov
std
lea
rclb
out
inc
sahf
add
in
mov
add
dec
jl
inc
sub
mov
test
jle
mov
lcall
sub
mov
pop
xor
dec
pusha
dec
loop
mov
dec
ss
das
in
push
push
adc
je
mov
sub
mov
cmpsb
lcall
cmp
les
aaa
mov
inc
push
and
pop
adc
ret
hlt
cli
dec
sbb
or
push
lret
jae
ja
xlat
cmp
inc
loop
int
jmp
jne
cs
movsl
and
mov
and
aad
cmp
loopne
out
push
add
repnz
xor
dec
push
mov
jp
cwtl
roll
out
dec
and
pop
dec
mov
jmp
mov
jbe
or
ret
in
xor
data16
xor
lock
out
fiadds
mov
push
pop
pop
in
sbb
pop
mov
xchg
jbe
adc
or
cld
frstor
add
or
lret
inc
xchg
stos
fwait
xchg
scas
jle
xchg
dec
fdecstp
mov
ss
push
pop
inc
ds
fildll
shll
add
push
mov
stos
mov
bound
dec
xchg
mov
leave
fs
xor
rol
sti
dec
dec
adc
jne
sub
mov
enter
test
xlat
adc
push
lds
cld
cmc
insl
adc
xchg
cltd
jne
jbe
sarb
iret
sti
sbb
cmp
mov
je
aam
jp
push
xchg
or
call
movsb
xor
add
push
adc
aas
out
dec
cmp
imul
jns
jmp
movsl
xchg
outsl
pop
aas
mov
xlat
push
fbld
mov
sbb
dec
iret
xchg
test
jae
xor
or
scas
inc
lret
mov
hlt
xor
jnp
jecxz
sub
jle
leave
subl
iret
xchg
push
cmpsl
xchg
mov
pop
mov
lret
pop
psubq
or
dec
or
call
lahf
sbb
arpl
lock
or
pop
int
dec
stc
push
jp
adc
push
mov
mov
xor
push
fs
test
mov
add
enter
sub
aaa
push
fdiv
cwtl
scas
outsb
pop
int3
adc
popf
or
dec
or
aaa
gs
xor
sub
jmp
pop
xor
cs
js
mov
subl
rclb
call
mov
xchg
jp
sahf
sub
int
inc
in
lcall
loop
addb
loopne
pop
mov
lods
xchg
push
xchg
mov
icebp
sub
adcl
std
mov
push
or
adc
xchg
fs
pop
int3
xor
in
mov
pusha
test
cmp
xor
sub
cmp
shr
dec
cmp
jecxz
scas
mov
jae
sub
js
lock
fmull
test
sub
testl
inc
push
mov
sbb
pop
cwtl
pop
sub
mov
cmpsb
movsb
pop
cmp
sub
xor
jge
push
lods
mov
lret
addb
and
xchg
fisubrs
nop
stos
hlt
adc
in
adc
sub
pop
lds
call
inc
loopne
jb
cli
gs
lock
and
sahf
inc
pop
in
fcoml
sbb
cmc
lods
dec
shll
sbb
les
and
inc
or
jo
iret
test
mov
loope
ljmp
mov
sbb
mov
jg
jae
es
xchg
jmp
pop
movsl
ja
outsl
jno
mov
mov
mov
call
xchg
cltd
fimuls
xor
adc
mov
cmpsb
sbb
cmpb
inc
push
xor
outsb
mov
out
inc
or
pushf
call
test
mov
shll
test
fs
push
loope
stos
push
mov
les
aas
repnz
cs
scas
outsb
scas
rorb
icebp
cltd
or
fistpll
mov
je
adc
loope
outsb
fstl
xor
xchg
notb
inc
bound
adc
fwait
arpl
mov
mov
mov
xlat
and
sbb
in
cmc
xor
cmpsb
pushf
idiv
adc
lock
cltd
add
jge
jb
jns
ret
xchg
lcall
in
ds
stos
pop
push
jo
adc
dec
sti
clc
aad
jne
roll
imul
sub
psrlw
sub
repnz
das
jl
mov
cs
aad
cmc
nop
and
sub
sahf
mov
loope
jae
lret
sbbb
cmp
mov
ljmp
into
cmp
adc
stos
loope
pop
inc
xor
ja
mov
sub
jl
push
adc
push
jns
outsl
dec
hlt
out
inc
jle
mov
mov
sahf
ret
subl
mov
pop
sahf
cmc
mov
fisubrl
iret
addr16
mov
inc
mov
add
lds
dec
jns
or
push
fwait
add
loop
pop
clc
imul
test
sub
ds
popa
or
mov
out
jno
aam
xchg
cmpsb
inc
je
adc
or
test
aad
cmpsb
stos
cmp
fcoml
outsb
xchg
inc
loopne
and
sti
cld
aas
imull
push
sbb
pop
mov
mov
sysret
push
data16
movsl
cmp
inc
mov
mov
mov
sub
ss
push
ret
xchg
aaa
int
shrl
cmp
jno
icebp
sub
push
sbb
popf
repnz
in
jmp
push
arpl
adc
push
std
jecxz
sarb
or
mov
sub
push
add
xchg
stc
dec
loopne
in
scas
push
out
test
in
xor
movsb
fiadds
mov
mov
or
in
clc
push
push
cli
cmpsl
rcrl
xchg
xor
nop
or
stc
shl
cmp
cli
insb
fldenv
adc
and
loopne
pop
stos
stos
cli
adc
push
das
mov
nop
inc
stos
cwtl
mov
mov
dec
or
jle
dec
cmc
das
pop
pushf
subb
push
vhsubpd
in
mov
mov
cld
or
mov
lock
inc
daa
dec
inc
mov
loopne
cmpl
inc
push
push
stc
lods
sbb
lahf
adc
dec
pop
pop
stc
lret
arpl
pop
mov
dec
and
clc
movsb
mov
loope
aaa
loop
and
pop
in
jnp
sar
fists
and
pop
adc
fistpl
cmc
cmc
icebp
je
sti
int
or
mov
ret
pop
inc
dec
inc
add
pusha
mov
lods
je
fisttpl
xchg
adc
and
mulb
nop
push
out
jo
jne
xor
bound
hlt
jae
ds
pop
arpl
sbbb
testb
movsl
jg
mov
pop
cmp
inc
mov
sahf
jns
or
insb
icebp
stc
dec
xor
sub
xchg
add
cmc
lea
sti
mov
jbe
loope
sbb
sahf
pop
lock
jno
jecxz
mov
xchg
iret
scas
add
push
adc
lret
dec
dec
andb
out
in
fdivr
mov
xchg
mov
lcall
inc
dec
mov
and
xor
stos
icebp
fcmovbe
and
popf
jge
inc
fcomip
jle
add
add
and
lea
testb
cmp
jp
cmpsl
add
sub
test
xchg
sub
cs
mov
negb
outsb
cld
sti
loopne
inc
ret
clc
xor
addb
fstl
and
fwait
sub
stc
adc
stos
sbb
dec
inc
repz
xor
setns
movsl
ret
std
rolb
pop
pop
je
pop
cwtl
out
ret
inc
cmc
inc
cmpsb
popf
int
ss
repnz
aas
int3
fdivrs
in
push
dec
sbb
jno
sahf
pop
and
mov
pop
cwtl
jns
jl
jbe
xlat
add
jae
sbb
into
inc
je
cmp
fidivrs
popf
inc
push
hlt
dec
mov
inc
imul
inc
ds
and
cmp
outsb
jp
jns
stos
dec
fstpl
and
scas
jg
xlat
dec
arpl
call
outsl
ficompl
stos
jl
lods
cmpsl
mov
pop
out
lret
addr16
loope
sbb
popa
push
insl
xchg
aad
imul
sbb
pop
call
inc
pushf
pop
inc
xchg
int
push
popa
xchg
sub
dec
mov
stc
std
jmp
adc
xchg
pop
push
outsb
sbb
and
push
rcrb
push
sbb
loop
xchg
loope
sti
or
inc
jns
into
inc
mov
sbb
cmpl
mov
aaa
push
bts
jg
fistpll
sbb
lea
sbb
push
test
inc
jge
iret
xor
int
aam
sub
addr16
mov
mov
stc
xchg
pcmpgtb
call
lret
fdivrs
mov
push
mov
push
lcall
pop
cs
adc
or
adc
inc
cmpsb
or
jnp
dec
adc
inc
ja
out
aam
bound
push
jb
test
jp
rcll
cmpsb
stos
das
mov
and
dec
mov
mov
fdivrs
movsl
sub
jmp
lods
adc
aaa
sbb
rorl
rcl
sub
jns
jg
cmp
inc
dec
hlt
add
push
mov
insb
add
sti
movsl
addr16
enter
add
insl
in
adcl
jge
roll
ljmp
inc
jns
jb
or
fdiv
loopne
pop
xchg
mov
or
and
cmpsb
push
out
not
loop
sarl
mov
pop
daa
ja
jb
xor
dec
inc
dec
inc
dec
mov
lock
sub
push
rorl
pop
xchg
mov
andl
dec
mov
dec
and
hlt
pop
add
cmp
inc
sahf
es
mov
lret
mov
pop
outsb
push
shrb
add
int
in
sub
stos
pusha
addr16
and
inc
fstl
sub
push
into
pop
imul
and
ret
cmp
aad
data16
sbb
or
xchg
shlb
orb
jo
and
addb
jp
in
mov
mov
hlt
mov
add
ficoms
orb
dec
xchg
sub
sbbb
add
cltd
repnz
daa
js
mov
inc
sahf
sub
iret
or
rcrb
mov
leave
xchg
adc
xor
repz
push
out
mov
push
mov
psrlq
clc
mov
stos
inc
pop
xchg
filds
add
cmp
mov
mov
cltd
das
ret
xchg
movsb
mov
subl
enter
mov
fs
add
aaa
repnz
mov
fnstenv
out
out
push
aaa
mov
jmp
mov
jns
pop
sub
pop
out
mov
xor
rcr
jno
pop
mov
pop
fisubrl
sbb
add
lea
xchg
pop
cld
pop
lret
idivl
push
decl
jl
or
arpl
xchg
repnz
loop
dec
mov
pop
in
adc
mov
jecxz
sub
adcb
dec
jmp
in
sub
push
sahf
push
ja
xchg
leave
and
sub
push
xor
sahf
ljmp
mov
fistl
xlat
jmp
mov
es
adc
inc
aas
sbb
push
cltd
mov
lds
insb
loopne
or
jnp
bound
inc
mov
int
leave
imul
lcall
adc
mov
outsb
xchg
cmpsb
push
pop
and
loop
aad
cmpsl
pop
aaa
das
push
std
es
sub
sbb
test
dec
out
dec
xchg
stc
in
cltd
xchg
sbb
fistps
cmc
or
cs
sub
stos
mov
adc
pop
inc
mov
leave
jbe
cmp
mov
mov
cmp
lcall
sti
xchg
and
test
pop
pop
or
lret
clc
sar
sub
pop
adc
daa
and
pop
mov
mov
xchg
add
mov
sub
mov
lret
pop
pop
jp
das
sub
fbld
vmulpd
cmp
jne
rorl
ret
repnz
sbb
inc
mov
mov
push
mov
outsb
sub
jno
and
call
fcomp
cld
push
addr16
add
shll
or
inc
jle
popl
add
je
mov
enter
stos
dec
pop
jne
pop
sarl
pop
xor
or
test
adc
pop
icebp
dec
xchg
jb
daa
xchg
mov
aas
jmp
mov
push
pop
es
dec
js
jbe
fnsave
lock
mov
imul
sbbl
pop
jnp
pop
fldt
xor
bound
imull
out
mov
lcall
push
jl
mov
std
outsb
push
clc
ror
pusha
outsb
bound
cmc
call
iret
mul
sub
loop
sbb
sub
adcb
xor
jb
xor
lock
pop
cmp
adcb
pop
aaa
test
fiadds
movsb
adcl
sub
adc
xchg
or
in
cmpsl
lret
shlb
or
mov
mov
cmc
testl
lcall
movsb
test
aaa
loopne
test
ja
cmpsb
push
inc
in
movsb
pop
push
mov
sub
mov
outsb
roll
ds
sbb
flds
cltd
rclb
cmp
jns
push
popf
lods
setge
inc
xorb
pop
and
lret
fstps
push
xchg
mov
test
pop
mov
fstps
lock
fisttpll
and
inc
xchg
les
int
icebp
ds
jnp
fisubrl
mov
test
in
jb
inc
lret
sbb
ss
in
clc
xchg
inc
pop
cmp
aaa
mov
adcl
mov
aas
push
cmpsl
pop
movsl
lahf
sbb
int3
pop
pushf
loopne
ffreep
mov
xchg
in
test
test
movsb
inc
test
ljmp
mov
fst
jb
incl
stc
push
stc
push
addb
ss
pop
cmpsl
push
jbe
mov
sub
ret
jl
call
xlat
xchg
add
jle
hlt
mov
cwtl
xchg
mov
shrl
add
inc
shll
sub
fcomps
je
das
xchg
movsb
scas
je
call
or
mov
push
ss
mov
and
pushf
mov
roll
mov
ljmp
pop
test
push
scas
ret
call
insl
lret
mov
fimull
pop
inc
push
stos
imul
or
cmp
fs
bound
out
sbb
in
xor
sub
mov
int3
stc
inc
loop
pop
inc
jb
sahf
cmp
and
mov
mov
daa
imul
fists
aad
testb
cs
repz
mov
loope
cmpsb
xchg
in
inc
mov
iret
aas
adc
pop
lods
imul
jl
mov
jo
popf
sbb
outsb
or
mov
xchg
arpl
int
imul
daa
inc
hlt
stc
pop
cmp
sub
jns
fsub
sbb
cmp
mov
jns
lret
sub
dec
dec
in
into
lcall
das
pop
jbe
xor
inc
xor
or
lea
sub
mov
jnp
stos
or
in
leave
and
or
pusha
mov
aam
mov
dec
xor
pusha
lret
lods
cltd
mov
adc
xor
jecxz
in
xchg
fs
jge
jae
outsb
push
mov
jo
jg
jbe
xchg
xchg
mov
push
lock
push
fsubs
dec
and
add
aas
mov
sub
mov
mov
jne
dec
movsb
nop
or
je
mov
add
jb
data16
adc
pop
push
ds
test
pop
inc
aam
pushf
mov
inc
std
idivl
sbb
sti
or
or
mov
mov
adc
je
faddp
xchg
or
je
fcom
or
sub
mov
pop
xor
sbb
outsb
sub
xlat
dec
xchg
push
pop
inc
jne
fstpl
and
pop
aas
push
lret
cmpsb
sbb
jb
jae
mov
xchg
es
or
popa
push
insl
test
mov
loopne
mov
lock
rcrb
pop
add
mov
out
dec
movsb
push
les
sub
mov
pusha
enter
dec
and
dec
push
mov
into
idiv
dec
or
lahf
xor
cmp
sub
and
lcall
inc
aam
jmp
mov
mov
lret
or
xor
pop
hlt
mov
and
jo
popa
or
dec
js
sub
xchg
mov
inc
jbe
sahf
shr
dec
cli
test
sub
insb
mov
adc
mov
mov
and
push
aaa
js
jmp
sub
inc
cld
stos
sub
cli
sub
mov
loop
and
fisubl
mov
inc
mov
adc
xorb
pop
jle
jae
mov
push
add
bound
dec
jp
xchg
lds
mov
mov
lret
inc
jb
xchg
cwtl
out
pop
push
stos
adc
mov
fists
addr16
inc
xchg
pop
rolb
cld
mov
pop
out
flds
lahf
sahf
and
mov
xor
icebp
test
xor
mov
ljmp
and
arpl
mov
ret
out
insl
mov
sbb
mov
test
cmp
sbb
ficompl
nop
pop
push
sbb
cmp
sbb
adc
mov
les
aam
sbb
jl
shlb
ljmp
addr16
imul
mov
sub
sub
inc
cs
out
popa
fs
stos
inc
test
jns
ja
shlb
sbb
jb
mov
sbb
or
inc
mov
add
decl
push
jp
jne
mov
mov
aaa
lods
and
notl
fcomps
icebp
mov
imul
jmp
ret
data16
out
lret
sbb
ds
jnp
aas
orb
fistl
push
test
cwtl
aas
or
inc
int
rolb
push
mov
decl
inc
test
cli
sbb
js
mov
sbb
mov
cmp
add
jae
aam
xor
cmp
gs
cwtl
pop
popf
xor
imul
dec
push
scas
scas
push
sahf
mov
out
push
scas
shr
jecxz
mov
rolb
adc
js
jmp
mov
movsb
inc
in
or
inc
mov
jg
xchg
aad
add
fs
mov
mov
xor
mov
adc
add
notb
mov
addl
jns
mov
ret
pusha
cld
cld
cwtl
push
arpl
dec
or
xchg
ret
add
cltd
fbld
pusha
pop
aad
lock
pop
mov
mov
adc
pushf
in
jl
ja
mov
xor
push
jo
xchg
push
mov
jg
sbb
fsubp
pop
aaa
mov
mov
mov
mov
sbb
lods
pop
push
ds
jne
fmull
fmull
popf
mov
pop
mov
sbb
push
push
pop
jae
out
into
imul
xor
std
gs
insb
sub
movsb
lock
ljmp
dec
xchg
jns
rolb
arpl
sbb
rorb
jp
or
test
mov
pop
out
fdivrl
ss
gs
ret
enter
mov
jne
xor
mov
ds
in
in
add
ss
pop
jbe
rcll
ss
push
or
push
xchg
add
sub
or
jp
out
and
inc
inc
jne
jae
das
add
shrb
fdivs
lahf
gs
stos
decl
icebp
js
sbb
push
int
pop
loopne
sbb
inc
add
push
lret
sub
mov
call
outsb
jecxz
inc
pop
mov
add
outsb
adc
adc
shrb
incl
nop
pop
push
fucomi
xchg
or
addb
dec
bound
outsl
mov
cmp
es
add
or
xor
test
jnp
mov
dec
stos
jbe
xor
nop
mov
xor
cmp
outsb
push
je
xchg
adc
and
sub
dec
stos
arpl
add
jl
std
scas
gs
inc
adc
add
aas
sub
or
jmp
leave
adc
inc
mov
in
mov
ret
fistpll
xchg
cmpsl
pop
outsl
push
nop
mov
into
mov
add
cwtl
hlt
in
xchg
sbb
leave
xchg
aad
stc
out
dec
pop
ljmp
daa
mov
fcomp
xlat
pop
dec
and
call
sub
xor
call
sub
out
jecxz
jbe
cmp
or
lods
inc
cld
repz
fldl
cmpsl
lahf
sub
xchg
inc
sti
repnz
testl
push
js
fst
lods
sbb
rcr
adc
mov
decb
pusha
idiv
in
or
idivb
pop
push
test
mov
hlt
sub
jmp
adc
neg
cmc
jbe
lock
pop
xchg
jne
lea
or
cmc
cltd
repnz
mov
adc
jo
mov
and
and
repz
push
push
aas
push
sbb
dec
jmp
xor
ret
dec
shlb
in
divb
iret
or
sub
cmp
mov
or
lret
fstpl
fwait
mov
fdivl
fnstenv
pop
add
xchg
lret
mov
dec
iret
push
jo
in
lods
shl
lcall
or
jno
push
or
decb
xor
cmp
sub
push
leave
push
or
push
cmp
dec
mov
addb
jae
xor
stos
mov
jge
mov
mov
rorl
in
mov
and
rcl
push
mov
nop
xchg
scas
xor
call
sti
push
mov
dec
adc
in
fbstp
test
jle
or
mov
cld
ja
mov
cmc
pop
sbb
outsl
mov
cmp
stos
nop
jp
inc
shlb
fsubs
jo
cmc
push
out
jb
cmp
xlat
out
pop
xchg
cmc
xchg
out
pop
jg
repnz
das
xchg
cmpsl
iret
pop
pop
or
mov
lret
mov
dec
cmpsl
xor
inc
loopne
sbb
loopne
sub
je
cli
pop
pop
xlat
push
jle
cli
pop
scas
bound
mov
lea
fdivrs
mov
movsb
das
pop
out
jmp
loope
outsl
inc
inc
ror
pop
push
push
xlat
andnps
pop
ja
xchg
add
cmp
inc
std
insl
out
fildl
fcmovbe
int
outsl
or
dec
pop
das
push
xchg
xchg
sub
mov
lods
cmc
into
xor
scas
cli
js
or
cmp
cmp
das
loope
adc
ljmp
cmpl
push
add
adcb
pop
mov
inc
xorl
mov
and
jecxz
jno
jl
xchg
into
xchg
mov
push
xchg
mov
and
mov
xchg
and
or
out
cmp
out
hlt
fwait
mov
push
or
addr16
or
fldt
imul
jecxz
cmc
nop
inc
sub
movl
loope
and
idivl
cmpsl
mov
sub
into
div
push
cltd
push
xchg
bnd
mov
int
in
je
cmc
std
mov
aaa
adc
pop
test
sti
mov
cmpsl
enter
sub
dec
incl
inc
icebp
sbb
nop
arpl
mov
cmp
sub
fsubs
and
push
outsb
mulb
mov
mov
cmp
inc
outsb
push
mov
mov
in
out
adc
xchg
nop
ja
xor
xor
sti
arpl
leave
pop
inc
mov
lret
or
ljmp
stos
mov
xor
xchg
fcmovbe
sbb
movsb
test
fdivl
mov
mov
shlb
add
mov
je
mov
ja
dec
add
and
push
notl
jb
and
out
int
inc
jp
imul
sbb
xchg
mov
mov
mov
out
jp
jb
and
imul
movsl
nop
movl
cmp
mov
sub
add
mov
cli
cmp
jns
sub
out
add
push
pop
jg
lock
mov
dec
jnp
lods
mov
aam
shl
repz
iret
mov
gs
cld
dec
fwait
jge
mov
fsts
fst
push
and
std
sub
cmp
add
rcrl
pop
into
or
lods
push
iret
add
imul
push
jg
xchg
jb
xchg
sub
mov
push
hlt
arpl
sbb
ret
sub
inc
faddl
xchg
mov
popa
mov
ficoml
jb
inc
rdmsr
scas
sub
adc
or
ficompl
ret
rcll
fwait
loop
adc
movsl
in
sub
mov
sbb
dec
cmc
inc
inc
jp
loopne
add
scas
es
iret
jb
sub
xchg
mov
loope
pop
mov
icebp
cmc
lods
cmpsl
xor
mov
ljmp
cmpsl
mov
movsl
jle
mov
mov
je
loop
dec
stc
fstl
nopl
xor
jns
mov
js
arpl
adc
pop
in
mov
push
cwtl
mov
test
scas
fwait
ljmp
movsl
adc
push
add
into
jecxz
xorb
dec
dec
adc
mov
mov
out
in
pop
add
and
mov
dec
mov
scas
mov
cmp
push
in
iret
cmc
nop
mov
pop
sahf
xchg
and
ljmp
add
adc
imul
mov
xlat
mov
sub
pushf
mov
inc
fwait
repz
repz
cs
insl
je
push
es
repz
in
cld
cmp
fwait
in
xchg
adc
in
jo
jl
pop
mov
icebp
cld
popf
mov
sub
iret
jne
lock
sbb
stos
outsl
out
jg
dec
mov
add
adc
call
pusha
pop
js
push
ss
cld
xchg
mov
imul
ss
mov
popf
cmp
push
cmp
push
insl
cmp
add
inc
jge
cmp
or
rol
ljmp
inc
test
popf
fwait
test
out
xchg
mov
jne
or
movsl
mov
stc
sub
and
jbe
sub
xchg
cmc
mov
dec
stos
mov
mov
das
jno,pt
getsec
pop
mov
daa
push
inc
mov
shll
inc
mov
test
jmp
sti
in
icebp
fldt
fwait
test
inc
hlt
xchg
pop
xor
xchg
dec
ds
aas
loopne
add
or
or
or
dec
sbb
dec
mov
lock
xchg
sub
sbb
arpl
inc
push
mov
cmp
sub
push
or
and
add
xchg
sahf
bound
popa
aam
mov
mov
pop
cs
cltd
xor
or
pop
leave
mov
pop
shrl
jo
scas
popa
pop
fwait
push
pop
push
sub
jp
add
add
jmp
sub
add
mov
cltd
roll
mov
push
fwait
cmp
pop
xchg
xor
dec
pop
call
daa
inc
xor
dec
ror
sub
mov
or
sahf
cli
cmp
je
adc
adc
inc
out
and
int3
fildl
mov
mov
sarl
pop
mov
test
xchg
pop
cmp
push
sub
adc
test
out
mov
mov
inc
fs
push
cmp
shl
or
ret
dec
movsb
pop
fidivs
fadd
inc
not
inc
pop
mov
jnp
fcmovnbe
and
pushf
adc
mov
lret
lea
mov
mov
sub
adc
std
pop
xchg
ret
sbb
jge
bound
mov
push
sbb
cmp
add
push
or
out
rcrb
pop
inc
mov
aad
dec
cmp
enter
jp
mov
leave
xor
inc
jns
jnp
mov
hlt
addb
pop
sbb
ja
and
out
movsb
sub
shrl
enter
repz
xor
cmp
push
pop
xor
inc
ret
cli
push
push
sbb
movsb
enter
sub
out
pop
jb
lret
es
sbb
xor
mov
bnd
xchg
cltd
pop
aam
es
rcrl
or
nop
rcr
dec
push
jecxz
pop
movb
insl
pop
daa
pop
dec
addr16
out
xlat
and
jl
adc
shrb
arpl
sub
or
mov
cmp
mov
or
rcrl
xor
mov
out
sbb
pusha
xlat
out
inc
sbb
inc
jnp
xchg
aad
scas
xorl
jns
or
xchg
push
arpl
xchg
or
mov
pause
in
add
inc
cmp
imul
cmp
out
bound
mov
pop
adc
sub
cmp
es
cmp
cmp
jnp
loope
cmp
out
inc
stos
pop
lahf
stos
lret
pop
pop
jb
repnz
pop
stos
jo
popa
lcall
jmp
movb
stc
pop
pusha
add
mov
push
sbb
cmp
ljmp
mov
sahf
push
jb
test
sbbb
cwtl
pushf
insb
xor
scas
repz
in
loop
mov
mov
movl
out
mov
gs
and
sub
sub
sub
adc
sbb
and
repz
cltd
scas
jno
adc
cmp
mov
push
fnsave
jns
mov
fdivs
push
lcall
adc
loope
push
mov
inc
rcrl
push
or
test
int3
mov
movsb
mov
pop
jno
mov
xchg
jl
in
inc
and
les
xor
sub
pop
int
add
sub
in
xlat
push
testb
adc
pop
inc
pop
rcr
adc
mov
xchg
outsl
lret
inc
jbe
stos
xchg
clc
ds
es
fdivrs
xor
cmpsl
push
popl
mov
std
dec
sahf
adc
insb
jge
mov
mov
sbb
pop
mov
lock
and
test
test
cmp
xor
stos
stos
stos
sub
push
push
int
out
pcmpeqw
and
sub
out
xor
ret
xchg
cwtl
xor
fistl
push
aaa
imul
js
test
jo
js
add
dec
inc
pop
sub
arpl
jns
ficomps
jmp
dec
pop
dec
movsb
mov
pop
addl
clc
mov
adc
mov
pushf
mov
in
lret
movsl
das
pusha
mov
jnp
call
jno
and
dec
cltd
xchg
push
push
pop
rcll
std
sub
jno
xchg
int3
push
outsb
dec
jae
inc
mov
sub
outsl
testb
fsubrs
pop
mov
fwait
aas
fs
cltd
mov
xor
dec
pop
sbb
or
sbbb
or
les
lahf
add
inc
push
jg
cmpsb
and
rcr
sub
addl
jmp
cmp
aam
pop
mov
jo
out
sbb
mov
shl
cmp
aam
inc
int
xchg
jb
jae
cmpsb
jge
testl
pop
mov
adc
cs
mov
rorb
sbb
or
cmc
adc
aam
xchg
scas
mov
and
fbld
cmp
add
fildl
test
xor
xchg
mov
nop
sti
cs
xor
sbb
or
jecxz
mov
lcall
push
mov
add
ss
mov
jmp
sarl
xchg
and
inc
jns
orb
sub
cmp
xor
outsb
dec
test
push
int3
cmpl
cwtl
push
inc
arpl
pop
push
add
sbb
push
gs
or
push
loopne
loop
and
jne
and
jmp
push
jae
mov
ret
jp
adc
sbb
pop
aas
mov
lock
lods
call
movsl
cmc
pop
sbb
xor
mov
in
test
outsb
mov
mov
xor
mov
add
xchg
cmp
cmpsb
add
std
scas
icebp
or
pop
pop
jno
dec
inc
aas
cmp
test
sahf
loope
adc
gs
sub
sub
mov
inc
imul
mov
pop
xchg
sbb
xor
mov
fmull
xlat
mov
test
sti
aaa
cwtl
pop
and
jae
add
mov
jo
dec
mov
cwtl
mov
lds
push
outsl
adc
aas
sub
push
aam
mov
push
imul
lret
dec
stc
stos
cmp
data16
xchg
popf
jb
lock
xchg
mov
inc
push
rcll
dec
shrl
pusha
adc
lcall
xlat
cli
sbb
aam
mov
lret
xlat
mov
inc
cmpsl
test
cltd
sarl
jmp
xorl
mov
lea
push
pop
cmp
inc
cmp
xchg
out
inc
mov
jae
pop
xor
fsubr
inc
and
pop
jne
and
mov
or
adc
jbe
pop
stos
pmullw
or
adc
js
into
xor
adc
or
add
js
aad
in
mov
stos
jns
or
scas
aaa
lret
in
jl
les
pop
cmp
dec
jmp
jbe
and
jecxz
std
push
shl
cwtl
pop
js
xchg
xchg
leave
lods
dec
mov
das
ljmp
movsb
in
push
lock
in
sub
fidivrs
cmp
sbb
test
mov
stos
mov
push
in
adc
lea
js
pop
pop
or
lret
mov
je
push
adc
dec
lret
leave
mov
mov
and
lods
pop
xchg
cmp
aad
adc
in
inc
not
gs
lock
call
adc
cmp
jns
stos
mov
shll
jmp
mov
adc
imul
push
faddp
pusha
inc
lahf
sub
xchg
xchg
cld
sub
pop
pop
inc
jle
test
jge
inc
xlat
js
pop
fadd
mov
xor
mov
cmp
inc
pop
inc
loop
cmp
mov
out
popf
pop
push
test
repz
imul
dec
lret
sub
adc
js
inc
js
out
fnstenv
test
shr
xchg
xor
test
sub
repz
xor
mov
pop
dec
adc
popw
mov
xor
mov
pop
shrl
and
mov
clc
clc
pop
sbb
sub
jno
xchg
out
imul
jo
mov
hlt
insl
decb
jbe
ret
adc
mov
loop
jne
dec
cmp
int
sahf
lods
adcb
xchg
mov
lock
mov
cmp
mov
jmp
out
fldenv
in
mov
xchg
aas
jne
cmc
or
mov
dec
pop
and
data16
cli
sahf
push
mov
rolb
repz
and
sbb
fdivs
sub
inc
inc
cli
cmpsb
jae
xorb
and
outsb
test
out
mov
sti
xchg
or
ljmp
mov
dec
js
sub
loop
jnp
and
sub
inc
in
insb
leave
dec
xchg
adc
push
mov
mov
xchg
mov
adcl
cmpsb
fistl
out
cmc
enter
xchg
mov
dec
cli
cs
mov
aas
ja
xor
xchg
sti
out
orl
sbb
addr16
repz
jno
daa
jnp
into
xchg
and
sahf
cmp
jb
mov
btr
push
inc
sub
xor
adc
cmp
rolb
inc
sub
aam
fadds
lods
sbb
lds
sbb
mov
out
sub
daa
popa
and
and
stc
mov
rcll
daa
xor
adc
test
and
adc
mov
jle
decb
mov
nop
inc
jae
notb
lea
mov
std
pop
lret
mov
jns
insb
xor
and
xchg
jmp
cmc
mov
std
popa
push
sbb
jge
push
lods
sbb
gs
sbb
xchg
enter
cmp
inc
mov
nop
jns
aas
popa
mov
sbb
fisubrs
pop
mov
pushf
nop
je
push
icebp
xchg
fmull
xchg
testl
ret
xchg
inc
in
jl
dec
and
cmc
or
shlb
mov
sbb
mov
sub
cmp
push
fcmovnbe
add
push
cmp
aad
test
mov
mov
add
pop
int3
xchg
jns
jge
loope
jge
xlat
inc
or
mov
dec
popa
xor
xor
arpl
enter
jecxz
das
xchg
jo
lock
sbb
xor
adc
cmpl
cmp
out
cmp
mov
inc
into
pmullw
lea
jbe
mov
inc
mov
out
jle
xor
jbe
jae
icebp
cwtl
gs
shlb
and
shlb
push
pop
aam
inc
ljmp
mov
mov
lret
jne
dec
xchg
bswap
adc
inc
in
xor
aas
lea
xchg
xchg
sub
add
mov
cmp
mov
in
inc
push
notl
hlt
sub
scas
pusha
dec
and
cmp
jecxz
pop
push
rolb
cmp
and
pop
addr16
inc
dec
gs
sbb
enter
ja
push
dec
push
adc
out
inc
js
xchg
dec
push
ja
int3
push
cmp
nop
lea
aaa
jecxz
out
push
push
out
scas
loop
mov
jb
mov
and
scas
adc
or
xchg
subb
mov
adc
and
stc
mov
inc
pop
pop
icebp
inc
dec
fstpt
dec
ljmp
ss
push
jle
jecxz
mov
adc
jecxz
jbe
or
mov
loopne
mov
loop
mov
mov
pop
xlat
std
in
divb
test
not
arpl
enter
outsl
ret
stc
or
or
xchg
mov
shlb
lods
adc
int
jo
out
fisttpl
adc
xchg
in
mov
add
jae
lret
add
lods
movsb
sbb
popf
stos
xchg
lea
and
test
shlb
mov
dec
dec
jnp
fmull
mov
lds
out
pop
in
adc
call
adc
scas
jo
lret
mov
shr
ret
fdivr
std
pushf
js
pop
sti
jne
leave
ja
lret
repz
mov
fwait
or
imul
mov
les
ficoms
mov
sub
outsb
inc
ja
fmull
mov
outsb
mov
nop
repnz
sahf
ret
movsb
rclb
stc
mov
stos
and
subb
jmp
lcall
mov
ret
out
cmp
sub
jl
cmp
add
add
jg
fcomps
enter
leave
daa
ret
rclb
dec
dec
sbb
xor
es
ljmp
push
mov
inc
xor
test
mov
mov
loopne
in
jb
add
ror
xchg
and
test
cmp
or
aaa
fsin
lahf
outsb
aam
jg
jmp
pop
push
test
cwtl
adcb
repz
jmp
fldl
sti
mov
adc
movsl
aam
das
ds
insb
cltd
idivl
or
loopne
or
dec
cmp
xor
nop
adc
in
stos
in
shrl
std
outsl
mov
push
adc
jo
popa
dec
outsb
push
repnz
movsl
mov
push
push
gs
adc
mov
nop
sti
xor
lahf
jg
loop
or
and
cltd
lods
loopne
aas
out
in
movsb
lods
pop
sti
bound
mov
test
repnz
fld
pushf
mull
test
jecxz
imul
rcl
or
loope
addb
fnsave
daa
in
cmp
mov
push
adc
lods
cltd
into
mov
and
ljmp
mov
add
cmp
push
hlt
dec
pusha
and
mov
leave
jp
into
mov
inc
adc
je
jne
ret
ret
xchg
mov
cmc
fildl
mov
loopne
jne
int
sub
xchg
jge
out
adc
mov
push
out
je
hlt
xor
mov
sbb
in
mov
les
aam
jo
adc
cmpsl
shlb
bound
shl
jl
lret
xor
es
xchg
mov
sub
fdivrs
pop
cmp
test
xchg
add
rcrb
insb
sbb
movsl
jns
push
mov
movsb
mov
stos
daa
stos
test
mov
dec
stc
jbe
inc
add
sbb
push
xchg
repz
jmp
sti
and
test
or
and
sahf
sub
mov
inc
jecxz
ja
ret
repz
and
lea
das
mov
cltd
mov
and
cmc
mov
fwait
push
sub
fdiv
arpl
push
mov
cmc
movsl
and
push
mov
lock
ret
pop
cli
divb
test
or
idiv
cmpb
or
imul
ja
cmp
push
stc
arpl
inc
add
mov
outsb
cwtl
or
mov
not
fmuls
add
in
in
enter
int3
mov
jo
push
jge
stos
scas
push
adc
lods
xor
and
popf
xor
jecxz
cmp
add
movsb
push
pop
jne
cmp
jno
fucomp
or
das
push
cli
call
fwait
cmpsb
dec
in
lea
push
xchg
xor
adc
in
mov
inc
adc
and
push
shr
mov
repz
ret
ds
lods
jae
jae
lret
out
aam
sbb
fucomi
xchg
rcrb
mov
and
int3
testl
andl
sahf
daa
xor
movsl
mov
mov
fmull
or
out
jmp
push
aaa
mov
jmp
and
das
frstor
add
leave
or
pop
fucomi
sbb
cmp
push
into
xor
in
fucomip
ss
clc
push
mov
jns
int
lods
cmpsb
pop
repz
ja
mov
test
mov
in
mov
leave
or
outsb
mov
dec
test
lods
pop
mov
dec
jo
or
jns
and
dec
cld
sarl
stc
lods
mov
dec
mov
mov
cwtl
push
lock
pop
xchg
adc
dec
jne
fisubrl
data16
cli
fstpl
adc
mov
ljmp
stos
shl
pop
adc
xor
pop
repnz
ret
test
inc
push
loop
mov
xor
fisttpll
ja
loope
jb
push
aad
cli
push
mov
test
loope
add
push
and
xor
cmpsb
cwtl
xor
test
cmp
push
test
mov
pop
jmp
adc
sub
negl
cmpsl
push
adc
cmc
cld
adc
in
lods
dec
pop
mov
inc
inc
in
inc
shr
or
mov
int3
repz
pusha
add
mov
sbb
jp
gs
jnp
push
fcmove
inc
pop
rorb
mov
pop
inc
xor
pop
inc
std
or
pop
adc
sub
cltd
imul
pop
xor
arpl
ss
cli
movsb
sbb
ljmp
jb
icebp
mov
or
mov
add
add
outsl
sbb
mov
ljmpw
cmp
inc
cmpsl
or
mov
repz
dec
dec
adcl
test
sbb
das
sbb
enter
in
imull
jmp
lahf
jae
sbb
int3
mov
ret
push
fwait
je
ja
sub
jge
std
cs
in
ret
sub
pop
mov
pop
add
dec
loopne
and
fsub
outsl
call
fcoms
sub
outsb
sub
xor
mov
aad
ret
xchg
ficoml
and
xchg
cld
inc
mov
mov
clc
xchg
iret
rorb
rcl
pop
in
in
aam
add
data16
push
mov
roll
jnp
push
enter
hlt
pop
sbb
add
push
stc
in
sub
dec
iret
mov
iret
fistpl
fsubrs
pop
pop
cwtl
js
or
cmpsb
xor
or
push
mov
and
xor
iret
jnp
add
lret
mov
sbb
cmp
into
or
test
add
mov
xchg
int3
pop
mov
jle
call
xchg
and
popa
out
into
movsb
lcall
aam
sub
cwtl
xchg
es
push
test
xor
xchg
rorb
roll
mov
outsl
cmp
loop
ficoml
imul
jae
pop
fs
mov
loopne
test
aad
mov
lcall
pop
out
xchg
je
lock
inc
lods
jns
jmp
mov
in
or
in
aam
pop
inc
cmp
jne
dec
aad
out
add
dec
sub
sbb
in
add
movsl
insl
cmc
xor
jns
xor
adc
cmp
pop
cltd
insl
int
idivb
push
aas
cmp
loope
push
sub
enter
dec
fisubrl
dec
mov
test
pop
outsb
sbb
jnp
imul
leave
out
xor
mov
pop
jle
or
rorb
pop
pushf
frstpm(287
ss
stc
cmpl
arpl
mov
pusha
mov
add
mov
xchg
imul
mov
scas
push
inc
pop
stc
ret
push
sbb
push
enter
sbbb
pop
xchg
pop
xchg
push
mov
dec
pop
std
mov
xor
adc
or
cmpsb
sub
lods
je
push
je
pop
sarb
mul
push
aas
and
mov
in
sub
insl
mov
xchg
cmc
xor
mov
cmpsl
jo
push
popa
pop
xchg
arpl
adc
sbb
or
dec
inc
or
mulb
push
pop
lret
pop
in
cmpl
cld
pop
xchg
mov
pop
pop
fmulp
js
pop
xchg
outsb
sbb
xchg
jmp
xor
sbb
sub
stos
lock
pop
dec
or
sbb
stc
jbe
cmpsb
cld
shl
push
xor
push
outsl
aas
add
das
sbb
mov
loop
mov
sbb
loope
scas
add
and
icebp
pop
mov
add
fwait
sahf
or
mov
cmpsl
ss
fwait
mov
lds
mov
mov
scas
cmp
mov
xchg
cld
dec
push
ret
daa
pop
daa
out
push
mov
adc
cmp
push
jmp
pop
push
loop
xchg
ret
ret
sub
jecxz
mov
push
in
popa
cmp
out
outsl
les
test
mov
aam
ds
fnstenv
js
sub
dec
mov
clc
int3
add
jmp
mov
pop
daa
jne
push
mov
out
jl
scas
daa
and
adcb
lods
inc
pop
insb
nop
push
fstps
scas
or
sahf
fdivrl
icebp
pop
xlat
daa
daa
pop
dec
arpl
fcoml
out
fsubrs
repnz
sar
pop
jg
pusha
mov
sbb
dec
and
cmp
mov
std
enter
mov
loop
fimull
mov
add
dec
ss
mov
jae
push
pop
add
mov
das
iret
in
in
inc
jp
stc
xor
sbb
mov
mov
pop
mov
stos
movsb
adc
pop
adc
out
jecxz
shrl
int
jmp
movsl
jo
mov
repnz
mov
out
jle
jbe
rcrb
add
fcomps
push
test
cmp
lea
jae
jnp
sub
data16
mov
jns
dec
adc
xchg
out
jl
das
test
xor
call
sti
lret
push
fdivl
movsb
mov
ret
mov
jecxz
xchg
mov
and
aad
mov
cmp
xchg
jnp
clc
pop
lock
in
loopne
pop
into
inc
jge
mov
cmp
icebp
jl
lahf
repnz
or
iret
cltd
sarl
ds
inc
xor
mov
jae
adc
lcall
mov
xchg
outsb
pop
fcmovb
icebp
sti
lret
mul
lcall
stc
and
jbe
and
idivb
sbb
cmp
repz
or
mov
in
pop
jne
adc
lcall
divb
xor
jmp
in
sub
dec
aad
outsb
dec
lahf
inc
ljmp
jne
incb
or
lret
xchg
jecxz
pop
aas
push
sahf
inc
bnd
cmp
mov
cmp
fdivr
imul
hlt
cmp
cmpsl
test
pop
rcrb
pop
mov
xchg
out
mov
push
xchg
loopne
push
push
mov
sar
jns
std
sub
sub
roll
and
jno
mov
sbb
jae
sub
xor
push
pop
cli
and
nop
mov
dec
pushf
adc
jge
mov
ficompl
scas
push
mov
push
xor
scas
xchg
iret
xor
add
push
outsb
fs
ds
aam
xchg
stc
rcrb
or
and
ret
icebp
xchg
popf
inc
std
or
outsb
test
xlat
dec
sub
out
sbb
mov
test
pop
adc
adc
shlb
adc
pop
adc
mov
xchg
fidivrs
lods
stos
mov
lret
sbb
add
loop
out
mov
xor
mov
out
leave
pop
scas
lock
sub
add
imul
and
adc
cwtl
in
and
push
cmp
inc
movsl
inc
mov
jp
sub
dec
inc
cmp
add
es
cmp
push
mov
lods
inc
std
adc
adc
stc
mov
add
fwait
sbb
jbe
and
adc
adc
jge
andnps
hlt
gs
cmp
test
cmp
sarl
jg
mov
jp
or
sbb
push
sbb
dec
lea
and
clc
adc
rcll
pop
cld
enter
stos
rcr
fcom
push
push
testb
bound
scas
flds
inc
das
fisubrs
push
mov
pop
pushf
and
jmp
repnz
arpl
in
sbb
add
fdivp
pop
jns
xlat
pop
sub
jecxz
aad
in
out
mov
jp
dec
dec
jmp
mov
mov
cmp
xchg
repnz
in
fistpl
je
daa
fs
fwait
loope
jp
out
loop
sbb
sub
mov
sub
ret
stos
push
push
test
xchg
push
xor
xlat
cmp
repnz
cmp
and
mov
call
jae
sbb
jno
sbb
mov
add
pop
inc
push
imul
inc
pop
call
inc
push
xor
sub
xlat
cmc
jle
xor
faddl
adc
call
xor
dec
sub
lock
out
stos
lret
ret
push
ret
outsl
int
scas
in
or
loop
movsb
lods
arpl
inc
jnp
adc
lock
testl
ds
das
mov
call
aaa
in
lret
daa
add
inc
mov
mov
push
xchg
pop
shrl
lods
cwtl
or
mov
ds
pop
pop
push
sbb
mov
fidivrl
sbb
sbb
xor
jns
loope
inc
int
mov
outsb
xchg
mov
sub
sarl
adcl
ret
and
ror
test
cmpb
iret
leave
leave
sbb
jl
fstpt
xor
or
add
lock
lods
outsb
inc
inc
jbe
xor
push
mov
fsubs
jg
xchg
imul
daa
xor
int
hlt
sahf
push
inc
lret
bound
loope
dec
adc
insl
jo
int
outsb
sbbb
xchg
pop
xchg
popf
mov
insl
fisubrs
sub
les
add
add
mov
xor
push
fnstsw
ja
mov
mov
xor
push
jnp
push
or
push
cmpsb
mov
mov
popf
push
push
jmp
sub
mov
sub
ljmp
adc
jno
xchg
mov
movsb
les
fsts
sub
pop
inc
dec
test
jnp
add
call
mov
dec
bound
mov
int
adc
enter
and
add
pushl
leave
push
pop
mov
fcom
sarb
insb
xlat
test
loop
xor
fdivl
lods
sub
add
xchg
push
xlat
jo
lcall
in
ljmp
js
ficoml
sub
adc
stos
xchg
mov
pop
xor
mov
adc
sahf
shl
push
pushf
jno
pop
push
sub
shll
sbb
hlt
les
inc
push
pop
push
push
hlt
leave
lret
xchg
scas
outsl
jns
jbe
sti
push
mov
int3
mov
in
ja
xor
sub
adc
mov
jns
push
dec
cmp
add
mov
dec
popl
jns
mov
out
and
fwait
pop
fistl
stos
insl
push
and
add
insl
or
aam
mov
rclb
jae
movsb
das
and
jnp
ljmp
push
mov
push
testb
add
lcall
fisttpl
cmpsl
mov
add
jne
popf
sbbb
push
xor
push
lods
jge
lds
mov
xchg
inc
inc
loope
aas
arpl
data16
mov
pop
push
cmc
or
insb
iret
xor
mov
mov
mov
cmp
lods
mov
or
xchg
cs
lods
sbb
sub
push
das
jnp
sub
hlt
cmp
dec
mov
fldl
pop
cli
leave
ret
mov
push
fistpll
mov
imul
adc
sbb
or
adc
aam
lods
in
xor
fidivrs
add
psubw
mov
shll
mov
mov
mov
push
shl
sub
and
xor
ret
and
fistpl
jnp
mov
scas
inc
stos
imul
and
pop
jl
lahf
stos
pop
adc
mov
test
pop
test
ss
inc
push
lcall
adc
insl
xor
cwtl
pop
mov
mov
ret
pop
fsubl
inc
mov
in
fcoms
aaa
jmp
dec
ljmp
push
sub
sbb
stos
movsl
frstor
xor
pop
and
sub
jno
push
lea
cmp
mov
push
test
faddp
push
mov
ja
xchg
dec
dec
jge
and
dec
jbe
enter
pop
fldl
mov
jnp
push
ljmp
jae
cmp
mov
fisubrs
xor
jno
and
lods
and
push
fs
adc
or
cwtl
and
and
add
jle
xchg
sar
xchg
lret
jmp
xchg
adc
mov
push
inc
shl
inc
mov
jl
xor
or
mov
jbe
mov
xor
sbb
jne
icebp
imul
lds
sub
test
insb
mov
jb
mov
popa
jge
in
adcb
cmpsl
ss
ja
xchg
sbb
add
lret
pop
add
rcll
es
or
fldcw
inc
clc
jno
xlat
mov
ret
notl
std
xchg
mov
ror
adc
ljmp
test
cli
leave
mov
mov
add
push
and
outsb
xor
inc
vpshlw
mov
jl
iret
pop
movsl
jno
pop
inc
xchg
fsubp
adc
loop
cli
mov
std
cltd
dec
setb
sub
ds
fcmove
fstpl
rcrb
mov
mov
jno
pop
cmpsl
inc
mov
sbb
mov
sti
pusha
pushf
xor
ret
pusha
mov
out
into
insb
jo
xchg
push
fnsave
mov
stos
push
test
pusha
hlt
inc
fnstsw
inc
stos
int3
xor
add
les
dec
dec
pusha
adc
fdivrp
mov
daa
repz
adc
sub
sbb
adc
inc
inc
push
pop
xor
popf
jge
xchg
sub
inc
sub
or
dec
scas
ficoms
inc
hlt
jg
mov
es
jle
xchg
jge
dec
sbb
add
ret
inc
pop
fcmovnbe
repz
das
int
shrb
jns
test
push
adc
sbb
mov
out
gs
gs
cmp
adc
pop
mov
aaa
loopne
push
pop
in
pop
rcrb
sbb
mov
mov
sbb
mov
xor
jb
jmp
sbb
fldenv
das
mov
push
nop
xor
sub
push
lock
jne
ja
inc
loopne
insb
in
inc
js
jne
icebp
pop
pop
shl
push
outsl
arpl
sbb
mov
and
mov
xchg
push
sbb
jbe
es
cmp
insb
stos
fldln2
cld
jnp
xor
and
cs
jo
aas
cmc
mov
jnp
jge
jecxz
or
and
cmp
fmulp
sub
lcall
in
push
mov
inc
xor
ds
repnz
push
fsqrt
add
and
f2xm1
out
icebp
lcall
scas
push
loope
jecxz
push
push
jle
lods
inc
add
xchg
hlt
push
arpl
call
roll
or
fistpll
inc
adc
bound
pop
out
pop
add
cmp
jmp
inc
mov
xlat
fwait
dec
add
sbb
loop
xor
enter
adc
into
xor
subl
clc
jno
icebp
scas
imul
mov
jbe
ja
mov
movsl
scas
call
mov
daa
pushf
mov
stc
mov
in
shlb
sbb
mov
in
sub
jae
loopne
mov
xor
jl
sti
out
cmp
scas
add
out
adc
cmp
jo
lods
insb
jmp
push
adc
sarl
scas
enter
xorl
sub
jmp
xchg
aaa
sahf
ret
dec
int
into
mov
sbb
pushf
movsl
clc
shr
mov
mov
dec
xor
mov
pop
stos
dec
clc
cmpsl
xchg
mov
hlt
pop
add
xchg
push
aaa
add
sbb
pop
mov
lock
ja
in
fildll
sub
sub
cmpsb
xor
dec
push
jae
imul
lret
and
loop
std
xor
data16
aad
call
xchg
jecxz
cli
hlt
repnz
sbb
mov
mov
and
pop
mov
and
ds
jbe
aad
pop
pop
mov
int
xchg
sub
ja
push
mov
inc
leave
mov
mov
cmp
adc
adc
jle
ljmp
movsl
pop
xchg
mov
lahf
cmp
jb
lahf
xor
subl
adc
or
imul
mov
test
inc
aam
shlb
inc
jle
mov
outsl
inc
push
jp
das
repnz
ljmp
int3
scas
pop
push
arpl
ds
sti
fdivrl
icebp
xchg
add
jg
fwait
les
pop
xor
insl
pop
jg
mov
mov
fs
inc
insb
out
xor
stc
inc
movsl
cmc
add
cli
push
cs
pop
dec
xchg
xor
jo
repnz
dec
lcall
xor
push
xor
jne
mov
shrl
lds
pop
and
jg
or
xchg
loopne
test
dec
addb
aaa
icebp
mov
in
repz
mov
sbb
ffreep
jge
mov
mov
aad
jne
inc
fstpl
or
cmp
xchg
mov
ljmp
into
insb
out
es
xchg
add
xor
popf
scas
test
cmpsl
cmp
lret
mov
sbb
leave
loope
mov
sub
int
dec
nop
jecxz
dec
shl
std
lahf
and
pop
dec
outsb
cltd
cmp
inc
sub
mov
mov
pop
adc
jns
push
push
pop
xor
mov
pop
insb
pushf
sbb
out
ljmp
push
push
fldenv
xor
mov
divps
dec
cmpsb
popf
pop
inc
sahf
xchg
cmpsl
dec
andl
data16
xchg
jae
mov
adc
int3
or
je
sbb
dec
daa
test
jbe
push
jmp
push
xor
jl
movsl
push
test
lds
lods
jo
and
ss
add
push
jle
loope
mov
and
xchg
xchg
mov
sub
pop
inc
enter
xchg
ret
mov
stos
dec
push
imul
aam
dec
out
or
pop
mov
cmpsb
inc
or
cltd
sub
sbb
aam
repz
clc
out
pop
icebp
lock
inc
push
mov
dec
dec
and
in
xchg
ficoml
jmp
loopne
mov
mov
cmc
dec
mov
xchg
inc
cmpsb
mov
lea
test
daa
insl
pop
mov
insb
nop
xchg
hlt
pop
xor
xor
cmc
mov
pop
insb
pop
dec
xor
push
fwait
push
mov
xchg
lret
fstp
adcl
or
xor
lods
add
or
fadds
repz
push
jmp
jge
ljmp
int
in
movsb
dec
add
jle
jo
sbb
xchg
add
and
mov
lods
test
ret
insl
jne
xor
pop
lods
mov
lds
jbe
sbb
mov
fnstsw
push
and
jmp
adc
xor
shrb
scas
add
dec
aad
movsl
sbb
cltd
ds
mov
shlb
ret
adc
cwtl
es
loopne
mov
push
imul
in
sub
mov
xchg
mov
add
push
sub
int
cmp
cmp
aas
push
into
inc
inc
adc
mov
mov
icebp
lret
mov
mov
mov
inc
dec
adc
jae
in
es
jne
mov
les
mov
pop
cmpsb
or
xor
adc
adc
lods
xchg
mov
fwait
mov
add
pop
xor
out
ja
lahf
jl
mov
ds
cmp
mov
mov
jle
push
mov
popa
imul
movsl
push
stos
adc
testb
dec
lret
sub
and
hlt
xor
cmc
call
push
icebp
xchg
fiadds
xchg
aas
pop
jg
test
jecxz
mov
subb
add
xor
pop
mov
mov
pop
cmp
inc
addr16
mov
out
dec
jmp
leave
mov
and
mov
arpl
xor
inc
scas
aam
adc
mov
jmp
aas
mov
add
ds
std
push
pop
out
sbb
cmp
pop
rol
mov
adc
cmp
fstpt
test
pop
cmp
jge
mov
enter
cltd
popa
dec
rcl
push
dec
pop
frstor
lcall
mov
jle
stos
lahf
or
cmp
push
cs
adc
jecxz
les
xchg
and
fists
stos
pop
or
jae
adc
lods
pushf
mov
jmp
jo
lret
add
jg
leave
jmp
pop
sbb
mov
wrmsr
clc
das
ss
addr16
das
les
xchg
adc
outsl
rol
inc
push
adc
push
mull
cmp
jae
xchg
pop
jns
fisubrs
pop
jp
lcall
sbb
in
enter
adc
repnz
jo
into
mov
cmp
push
insb
push
push
mov
adc
sub
dec
mov
mov
inc
cmpsl
or
push
cmpsb
xor
xchg
stc
bound
sbb
push
or
popl
loope
addr16
jge
cmpsb
leave
add
xlat
out
ljmp
push
xchg
push
or
adc
pop
insb
mov
xor
inc
cmp
lret
add
sbb
jmp
cmpsb
jmp
push
leave
push
xchg
sub
mov
cmc
or
push
fcomi
inc
sbb
loope
jnp
out
inc
push
in
or
jnp
xchg
pop
ficoms
mov
dec
and
out
test
popf
adc
push
dec
aam
jecxz
lock
push
xor
xchg
leave
pop
mov
sbb
pop
mov
add
push
dec
adc
inc
addb
ss
cmc
cmp
rolb
pop
in
test
ret
xor
mov
mov
shl
xlat
xor
stos
fisubrl
cmp
cmp
and
ja
loope
xor
xchg
sub
lds
jmp
mov
int
pop
mov
or
cmp
enter
fsubl
clc
sub
shrb
or
fnstsw
jae
inc
jmp
popa
add
loope
jb
sub
pop
pop
sub
andb
lock
add
testb
xlat
cmp
or
stc
pop
or
push
inc
pop
push
lret
or
pop
inc
pop
subl
dec
inc
mov
daa
pop
mov
movsb
and
das
loope
adc
movsb
cs
adc
lods
inc
icebp
push
add
js
xor
sub
fs
stos
fadds
sub
mov
cltd
enter
lcall
loopne
or
nop
mov
fwait
push
inc
in
lahf
inc
sub
ret
jl
xor
test
call
mov
nop
cmp
jmp
fnstcw
mov
sub
lock
lea
movsb
push
fsts
cmp
repnz
fs
dec
xchg
loope
cmc
pop
addr16
dec
ja
inc
outsl
lret
dec
sbb
aad
mov
push
or
mov
push
and
mov
xchg
data16
dec
in
mov
out
sub
add
shrl
lret
or
pusha
loope
jg
out
addr16
sti
mov
ret
add
push
adc
mov
lret
push
shl
mov
push
sub
and
pop
xlat
fcmovnb
push
dec
iret
jg
fcompl
insl
mov
ljmp
test
mov
cmpsl
jne
sbb
and
insl
jae
inc
shlb
mov
sti
mov
ds
push
pop
jecxz
ss
fisubl
pop
out
inc
and
lods
lock
push
jmp
cmp
xchg
adc
jae
lea
sbb
mov
dec
xchg
mov
int
fbstp
incl
out
or
xchg
xchg
mov
xlat
push
mov
dec
outsl
sub
push
outsb
testb
cltd
clc
daa
sub
sub
adc
nop
mov
inc
ss
or
xor
push
icebp
test
fwait
cmpsb
cld
arpl
lods
and
test
test
or
cmp
mov
lret
push
loop
out
cli
es
call
sahf
add
and
jbe
dec
cwtl
mov
in
nop
and
lds
data16
mov
sahf
jmp
fildll
aaa
add
test
cmpsl
mov
insl
lods
pushw
rcll
adc
inc
negl
push
or
std
cmovnp
xchg
outsb
jl
sub
jb
lods
push
pop
push
mov
test
jb
sbb
repnz
sbb
mov
cmp
jns
lods
iret
xchg
repnz
sahf
aad
xchg
fisttpl
pop
and
dec
mov
or
or
inc
push
xor
andl
adc
mov
stos
and
gs
sub
test
jno
mov
outsl
ss
pushf
dec
jnp
shll
or
dec
sbb
cmc
repz
sub
addr16
sub
ljmp
mov
addr16
push
push
iret
push
and
jecxz
cwtl
mov
sub
scas
sbb
mov
int3
xor
xchg
jne
test
mov
icebp
cmp
cmp
and
into
mov
pushf
sbb
push
mov
fucomi
add
in
inc
dec
push
mov
lahf
out
scas
es
cmp
jl
adc
in
pop
fdivs
add
repnz
je
inc
inc
xor
or
lahf
jmp
push
insl
stos
or
test
idiv
and
cli
lods
inc
jl
and
sub
out
and
fdivs
ja
dec
push
mov
dec
dec
orl
adc
cltd
daa
vpmacsswd
aas
je
jo
and
lret
mov
in
out
mov
mov
mov
leave
mov
data16
daa
fmuls
xlat
les
ja
in
lods
cld
jnp
xor
in
lahf
in
sub
outsb
inc
shl
fsubrl
fcmovb
sbb
into
xchg
data16
scas
cmc
jne
ret
xor
jnp
push
cmp
daa
xchg
mov
sub
dec
dec
cli
sbbl
lds
mov
imull
sub
cmpsb
xchg
sbb
or
mov
and
dec
nop
sub
jge
and
xorb
mov
rolb
push
cmp
and
rorb
adc
mov
xchg
lock
fstl
cwtl
or
ss
insb
stos
insl
pushf
hlt
andl
inc
sub
xlat
fisubs
pop
les
jbe
arpl
mov
mov
fwait
ljmp
popa
mov
hlt
jg
jg
jmp
xchg
add
es
add
fbld
cmpsb
aas
push
sub
fs
out
xor
call
jae
call
or
push
outsb
sbb
xor
rcrb
scas
sbb
aam
jnp
xchg
pop
pop
fstl
pop
jns
pop
pop
sbb
xlat
stos
mov
sbb
cmp
xor
push
xorb
dec
mov
movsb
pop
add
rcrb
mov
scas
sbb
pushf
pop
cltd
icebp
aaa
xor
popa
xchg
cmp
push
and
insl
xor
jp
aaa
cmpsb
pushf
mov
pop
cmp
js
xor
mov
out
popa
inc
iret
mov
adc
inc
lods
xchg
or
mov
jbe
insb
leave
test
push
popf
lea
addr16
mov
out
sbb
mov
cmc
pop
stos
jecxz
cltd
or
jl
or
in
jo
xchg
lods
xchg
xchg
cmp
cmp
inc
les
sub
xchg
lret
aam
in
out
pop
xchg
mov
jbe
dec
popa
mov
popf
dec
dec
out
in
hlt
lcall
and
adc
dec
xchg
cmp
or
popa
aas
test
xlat
dec
fs
cmp
mov
in
push
sub
test
adc
xchg
outsl
jno
cwtl
push
addb
xchg
icebp
xor
fsubl
adc
jbe
xor
mov
ljmp
sbb
adc
dec
and
mov
add
cltd
pop
mov
sub
ret
icebp
jo
shrl
out
sub
mov
dec
dec
mov
inc
pusha
cmp
call
jecxz
icebp
fildl
dec
mov
mov
addl
mov
jecxz
mov
pop
das
int
sub
out
pop
cmp
iret
dec
mov
jge
cmc
xchg
adc
push
daa
and
push
pop
push
lret
jne
mov
add
iret
push
mov
jmp
push
pop
add
imul
mov
cmp
add
rclb
fidivs
cmp
mov
cwtl
xor
cmc
dec
sub
xor
xor
sbb
lods
ja
out
mov
mov
cmpl
pushf
pop
inc
dec
or
add
or
inc
xchg
sahf
sbb
fstpl
iret
cmp
and
in
jne
jle
push
std
cmp
push
push
pop
dec
out
xchg
jmp
iret
movb
xchg
push
sub
pop
out
repz
stc
js
jl
push
fidivrl
clc
xchg
cmp
mov
cmpb
add
popa
js
test
ret
mov
test
xchg
pop
aaa
fisubl
pop
fisubrs
push
rcll
push
or
in
arpl
js
mov
sbb
popa
or
push
jg
jae
inc
imulb
shlb
into
inc
dec
cmc
dec
sbb
cmp
icebp
jb
mov
pusha
ret
jo
sub
inc
mov
jl
ficoml
stos
xorb
dec
cwtl
pop
loop
andl
mov
stos
ja
js
mov
in
lea
mov
ficomps
jo
push
xchg
jmp
in
pop
lea
mov
sarb
push
scas
push
in
add
rorl
add
mov
lret
xor
das
mov
add
cltd
pop
cmp
int3
inc
and
faddp
xor
out
cmc
mov
or
icebp
and
mov
mov
aas
xchg
es
sbb
stc
adc
ja
inc
cld
inc
daa
mov
les
mov
out
inc
cmp
mov
push
or
fcompl
mov
dec
fiaddl
cli
add
jae
pop
jnp
jl
cld
andl
popl
in
xchg
sbb
out
jmp
rolb
dec
insb
push
ret
ljmp
mov
jmp
inc
jbe
dec
or
ss
push
xchg
lock
mov
cmc
inc
xchg
popa
es
stc
or
scas
sub
xchg
fcmovnu
jg
add
mov
pop
les
or
movsb
out
cmp
push
mov
mov
xchg
xor
pusha
xor
into
push
and
cli
push
sub
cmpl
sub
popa
scas
push
sub
pop
adc
mov
rorl
inc
jne
xor
repz
rolb
dec
and
xor
sbb
rorl
mov
testb
sub
xchg
mov
scas
inc
icebp
cli
jb
pop
test
xchg
fnstenv
stos
sbb
test
mov
aas
xchg
inc
pushl
sbb
push
push
xorb
jmp
dec
lret
and
scas
mov
inc
call
nop
and
loope
dec
mov
outsl
push
cmp
mov
movsb
and
dec
pop
cmc
jae
icebp
mov
ret
sbb
mov
sbb
cmpb
popf
insl
jo
sbb
or
in
movsb
inc
cmc
rorl
sub
cmpsl
mov
mov
fincstp
sbb
xchg
imull
lret
arpl
jge
popa
iret
sbb
xor
icebp
rol
pop
cmp
notb
jbe
ds
jl
and
sbb
inc
ret
scas
jno
test
sahf
mov
sbb
xorl
mov
fmuls
mov
jnp
jne
movsb
cmp
or
sbb
lock
dec
fmuls
and
xchg
jbe
popa
xor
cmc
fucomp
cli
mov
insb
test
cmp
push
aad
lret
dec
sub
mov
mov
or
sbb
adc
shll
mov
add
mov
mov
push
inc
or
notb
cmp
dec
xchg
cmc
jle
test
dec
mov
jle
mov
add
jo
test
xor
fstpt
xchg
sbb
jno
dec
xor
lods
xor
dec
push
shll
jle
xlat
stos
sbb
mov
fnsave
mov
inc
outsl
scas
inc
jo
rorb
test
sub
divl
cmp
leave
mov
push
ss
es
out
fisubl
pop
je
add
idivb
loop
jnp
into
mov
sahf
insb
iret
jne
jns
or
inc
daa
fwait
std
repz
sbb
int
test
inc
xor
inc
into
lcall
xor
pop
and
ret
sbbb
xchg
es
stos
push
clc
lds
inc
movsl
aad
cld
dec
shrb
mov
mov
mov
inc
pop
xorl
and
orl
test
popa
dec
ret
popa
jo
out
int
add
or
lret
push
add
and
push
push
mov
inc
and
test
or
mov
mov
or
cli
and
popf
sbb
lret
fistl
jo
xchg
data16
cmp
fldt
mov
fwait
xor
jecxz
pop
and
sti
mov
pop
ret
pop
aad
dec
cmpsl
call
jge
pusha
out
fiadds
mov
into
fmul
out
or
add
cmp
sbb
out
cmp
sbb
test
fsubrl
das
pop
bnd
xchg
adc
jns
ljmp
and
ret
aaa
xor
imul
pop
cmp
inc
ret
and
inc
pusha
or
adc
shrb
xchg
testl
sahf
pop
sbb
push
stc
sub
movsb
mov
xchg
push
cmp
sbb
lret
sbb
sbbb
mov
mov
pop
mov
fsincos
sbb
and
fimull
stc
movsl
popa
and
push
fs
loope
add
mov
pop
mov
inc
cli
pop
aaa
sbb
cmpb
xchg
ljmp
push
ja
lret
hlt
fcoml
push
xor
ljmp
mov
xor
push
push
dec
cltd
mov
adc
test
sbb
mov
mov
mov
cli
clc
fdivrl
push
sub
icebp
in
add
fidivs
dec
jo
mov
inc
and
sti
leave
je
ljmp
jne
sbb
rcr
push
faddl
xor
pop
fisttps
sbb
push
jge
push
mov
sbb
xor
aas
mov
jecxz
imul
inc
or
shll
push
sub
gs
push
push
int3
ud0
outsl
in
les
pop
jle
jb
sub
out
aad
andb
mulps
xor
es
jns
jno
aaa
jp
sub
rcrl
jns
enter
dec
test
out
outsb
xorb
cmc
nop
and
loopne
xor
jns
icebp
inc
not
and
cmp
fdivrs
sbb
loope
xchg
pusha
and
int
or
or
mov
push
cmp
testl
jmp
inc
push
cld
mov
sbb
arpl
mov
adc
es
push
push
and
mov
pop
add
fsubl
das
or
pop
pop
cs
bound
dec
sbb
aas
das
xor
jle
popa
push
inc
push
mov
repz
or
insl
jle
mov
adc
popf
jnp
jb
sub
fs
outsb
adc
mov
cwtl
pusha
lods
sub
decb
test
inc
imul
pop
add
mov
dec
fisttpl
int3
dec
dec
mov
mov
jno
xchg
roll
inc
enter
adc
xchg
scas
mov
loope
push
cmp
add
mov
mov
bound
out
sub
mov
xchg
jns
xchg
fcom
outsb
sti
lret
stos
leave
out
jb
or
adc
aaa
aam
jp
xchg
push
or
adc
enter
ret
orb
mov
cmp
pop
push
lahf
ljmp
outsb
les
pop
cmpsl
mov
jecxz
adc
mov
mov
mov
pop
int
sahf
jb
sbb
add
dec
or
or
adc
cmpl
pusha
test
or
mov
pushf
repz
jo
insl
or
testb
ret
mov
or
mov
and
mov
add
call
or
dec
aas
dec
in
jecxz
mov
arpl
cwtl
xor
int
divl
mov
dec
mov
add
add
push
popa
jmp
inc
inc
cmp
xor
xor
push
stc
imul
jp
shlb
push
cmpsb
idivl
jecxz
mov
testl
gs
adc
test
mov
adcl
add
shrb
lea
xchg
orb
and
lods
pop
movsb
push
cmp
fidivl
xor
jns
push
test
ljmp
cmc
in
ljmp
xlat
jnp,pt
int3
xor
sbb
jmp
icebp
mov
ret
xor
cmc
icebp
bound
mov
push
testl
sti
mov
mov
adc
cmp
lds
mov
inc
popa
ret
sar
fistl
loope
xchg
ds
movsb
push
sbb
dec
push
dec
leave
aam
add
stc
sub
dec
inc
xchg
cmp
xchg
jo
scas
cltd
xor
lods
mov
call
fwait
dec
ljmp
int3
sbb
cli
out
pop
rcrl
jmp
das
push
cwtl
or
nop
jb
sub
add
jb
push
xchg
lods
xchg
mov
inc
pop
add
insl
in
lods
add
xchg
cli
dec
cmp
pop
test
ds
dec
sbb
lcall
loope
push
in
jno
call
les
and
xor
and
push
dec
mov
movsl
jb
add
ret
mov
popf
xor
adc
pop
stos
dec
jl
daa
mov
xchg
je
repnz
push
and
push
pop
jge
add
nop
push
scas
fiadds
popa
rorb
pop
loope
push
mov
mov
es
imul
push
ljmp
cmp
mov
or
add
ret
cwtl
pushl
jmp
inc
mov
movsb
pop
and
cmp
idivb
hlt
jmp
sahf
fcomi
cmp
cmp
das
mov
jecxz
and
imulb
jae
ja
mov
sub
push
push
lar
daa
pop
or
sub
mov
mov
mov
inc
stc
pusha
mov
enter
mov
imul
andb
scas
mov
push
out
cwtl
mov
loopne
xor
fadds
mov
lods
ret
fstps
fimull
sbb
pop
cmp
lods
xorl
std
push
jmp
mov
push
mov
lcall
xlat
cs
pop
jno
scas
loop
ret
xchg
hlt
lret
popf
inc
inc
and
push
adc
in
test
or
mov
add
ja
xchg
or
in
mov
xchg
sub
xor
cmp
lret
mov
in
inc
or
rep
add
sub
mov
hlt
mov
push
sbb
test
jp
mov
mov
pop
cmp
push
cmp
iret
sahf
or
push
mov
adc
mov
stos
or
test
xchg
mov
jae
mov
movsb
sub
sub
mov
int3
fwait
push
lcall
mov
or
sbb
adc
aas
es
cmc
lods
fistl
adc
push
adc
daa
dec
mov
xchg
mov
adc
push
in
test
jns
jge
jle
or
pop
sbb
pop
mov
cmp
mov
lret
mov
xor
cld
hlt
sub
pop
push
cmp
jb
push
dec
add
push
aad
push
xchg
out
jne
nop
push
cwtl
lods
sub
jp
mov
mov
dec
push
test
xchg
lret
xlat
bound
pop
icebp
in
fists
dec
push
or
inc
roll
out
mov
adc
inc
cltd
shl
push
xor
ficoml
lods
cld
inc
jle
rcll
add
jns
mov
pop
mov
pop
ss
sub
js
dec
jle
scas
mov
dec
mov
inc
aad
out
scas
stos
pop
outsb
xchg
jo
mov
rep
push
mov
shlb
and
cmp
mov
addr16
add
popf
pop
jp
out
jne
jecxz
adc
into
rcrl
lahf
sub
jns
movsl
cmp
outsb
test
popa
or
bnd
inc
mov
rorl
fldenv
fbstp
outsl
sahf
cwtl
inc
mov
and
adc
or
mov
inc
cmp
xor
subl
pushf
fstpl
movsl
jo
adc
add
cwtl
xchg
aaa
or
mov
jae
aas
rcll
hlt
dec
xchg
pop
int
xchg
out
les
and
repnz
loope,pn
jns
inc
sub
and
clc
mov
push
push
jno
jecxz
sahf
cmp
imul
outsb
nop
std
dec
or
lret
in
adc
sbb
cmp
out
test
test
xchg
fnstsw
lods
stos
jp
popa
mov
stos
clc
imull
popa
lock
adc
lods
fsub
cltd
mov
jge
aam
test
jae
sub
pop
sbb
xor
dec
sub
outsb
les
cmp
push
cwtl
add
lcall
in
cwtl
lcall
fstpl
jl
imul
pop
inc
mov
push
in
xor
cmp
mov
push
or
cmp
sbb
data16
insl
mov
push
sbb
adc
jg
sbb
dec
mov
dec
xchg
xchg
lock
iret
ss
stos
and
sahf
push
popw
xchg
pop
cmp
jne
out
and
push
fbld
or
cmp
sbb
rclb
movsb
fcmovnb
scas
pusha
out
mov
sbb
xchg
pushf
push
push
enter
push
int3
jle
in
mov
dec
into
jg
test
xchg
adc
xor
mov
push
mov
aad
mov
push
adc
sahf
push
or
and
fnstcw
xor
inc
clc
pop
orl
shrb
xchg
push
xchg
test
pop
out
hlt
out
push
or
and
and
aaa
nop
dec
ja
xlat
test
or
sub
in
inc
sub
xchg
adc
pushf
add
shl
ds
cltd
jbe
mov
xlat
ret
or
pop
fs
jmp
xchg
daa
icebp
push
mov
cltd
sub
pop
stos
hlt
mov
pusha
adc
rcrb
je
imulb
cmpsb
sub
les
jae
adc
insl
movsl
movsl
data16
arpl
xor
jmp
lret
lods
fildll
stos
pop
sub
pop
push
jle
adc
cmp
pop
xor
cmpsl
insl
dec
push
mov
adc
or
shll
sub
push
in
xor
or
ja
or
ja
inc
add
into
out
pop
jg
shlb
mov
gs
ds
and
jns
mov
mov
mov
stos
adc
bound
out
jmp
dec
xchg
inc
xlat
repnz
call
adc
fildl
decl
lea
add
call
cltd
out
add
push
jo
xor
ficoml
pop
dec
cmp
inc
push
imul
xor
jns
mov
enter
mov
inc
bound
lea
fs
adc
xor
adc
pop
inc
shll
push
xchg
test
ret
or
lds
push
sub
push
push
lods
mov
test
mov
add
test
enterw
test
lahf
call
sub
int
xlat
cmp
mov
loope
dec
mov
jo
adc
inc
out
not
mov
addr16
mov
call
push
test
sahf
in
xor
mov
mov
add
xor
push
mov
js
push
std
inc
jbe
insl
popf
mov
adc
lahf
pop
inc
add
lock
push
and
mov
in
movsb
sub
push
push
test
mov
in
leave
movsl
fimuls
loope
sbbb
and
fists
mov
js
jnp
stc
loope
adc
imul
xchg
sti
mov
mov
imul
movsl
jo
cmpsb
mov
imul
mov
jle
cmp
mov
pop
lods
iret
mov
movsb
adc
arpl
mov
xchg
push
xchg
cmpsl
mov
pop
addb
jno
leave
stos
add
xchg
mov
xor
enter
fdivrl
stos
movsb
sbb
mov
sub
push
jns
roll
xchg
insb
mov
cmpsb
mov
push
iret
stc
sbb
cltd
fadd
out
gs
pop
and
inc
pop
call
cmp
add
test
lds
arpl
pusha
int3
imul
xchg
mov
lock
or
fidivrl
aam
xor
pop
insl
std
mov
lods
or
push
inc
sbb
stc
fiadds
fdivrs
pop
jae
or
mov
xor
inc
cwtl
push
adc
cmp
xor
leave
jge
iret
mov
and
mov
ljmp
aaa
dec
push
loopne
sbb
cli
or
leave
mov
jg
push
rcrl
dec
sbb
jbe
lods
add
and
jle
dec
pop
jns
pop
test
outsl
fstpl
sub
imul
and
adc
inc
andl
mov
sub
sub
add
mov
or
cmp
jmp
sahf
sarl
cwtl
movsb
stos
cli
repnz
lret
jp
adc
imul
scas
ss
loop
jecxz
push
jae
out
dec
xchg
inc
pop
pusha
idivl
and
imul
std
jmp
sti
and
add
data16
xchg
aaa
push
cli
sahf
and
mov
movsl
imul
fisubrl
std
repz
adc
sbb
xor
dec
lret
inc
mov
pop
mov
mov
les
pop
cli
push
fsubr
xchg
or
mov
or
test
mov
mov
cli
push
add
popf
mov
ljmp
push
xlat
into
mov
jns
jg
aas
out
test
xchg
cltd
and
cmp
enter
xchg
mov
out
fiadds
sub
ja
xchg
mov
sti
sbb
loope
test
sub
push
das
imulb
shlb
repnz
ss
aad
imul
xchg
mov
mov
cs
pop
pop
inc
sbb
int
jecxz
cmc
fsub
cli
sbb
add
scas
jecxz,pn
sbbb
xchg
push
push
push
into
icebp
ret
sub
push
ja
fs
push
loope
aam
fidivl
xor
mov
xchg
jmp
sub
repz
inc
stos
ficompl
jecxz
sarl
out
scas
jp
xchg
pop
pop
inc
mov
add
push
pop
es
or
fmull
fisubrl
xchg
push
jns
push
sahf
jne
xor
inc
and
xorl
arpl
or
hlt
pop
lock
or
sub
fstpt
mov
test
push
mov
jg
in
xchg
orb
in
imul
cmp
lahf
push
ja
ficompl
and
loope
add
jae
xor
sub
jl
std
das
cmp
scas
xchg
ret
mov
dec
or
addr16
pop
pop
pop
orb
push
mov
push
and
push
sahf
add
mov
icebp
and
cwtl
add
jmp
xchg
js
popf
adc
inc
into
bound
enter
stos
xchg
xchg
fadds
je
shrl
add
mov
and
jmp
mov
repnz
add
movsl
inc
jo
and
mov
ds
or
sbb
add
mov
and
xchg
jecxz
ret
inc
sub
pushf
jle
ret
cli
stos
inc
loope
repnz
pop
jns
lds
jbe
rcl
mov
jo
pop
cwtd
push
jnp
mov
rorl
mov
pusha
shl
leave
hlt
ja
sahf
iret
mov
cltd
insb
jo
xchg
xchg
in
push
scas
mov
imul
xchg
sbb
flds
paddusb
cltd
jno
mov
mov
cmpsl
pop
xchg
or
insb
cmp
cmp
cmp
cmp
or
stc
xchg
sub
sbb
and
jo
sti
aad
ret
negb
scas
mov
out
adc
iretw
cmp
inc
and
push
push
ds
jmp
xor
push
in
mov
es
cmp
pop
or
sbb
aaa
dec
xchg
or
inc
and
dec
orl
push
cmpsl
js
and
test
push
test
mov
int3
mov
jae
mov
cs
cld
sbb
inc
xor
pop
mov
sbb
cld
hlt
or
arpl
mov
fwait
cmc
inc
popa
sbb
mov
sub
sbb
add
pop
inc
sub
jp
or
jae
addr16
and
sub
mov
jecxz
mov
or
dec
cmp
loopne
xor
mov
sub
mov
test
xor
stos
pop
pop
addl
mov
push
pop
adc
jl
outsb
inc
xchg
push
aad
les
inc
jmp
inc
xor
pushf
mov
scas
std
cmc
push
pop
mov
dec
add
sub
bound
cmc
xchg
jecxz
iret
ret
stc
hlt
cld
sahf
test
icebp
dec
pop
orl
cmpb
adc
inc
mov
popf
js
out
loopne
xor
pop
mov
into
jbe
fidivs
data16
jmp
sub
lret
movsl
sbb
pop
sub
subl
outsl
pop
cmc
aad
inc
adc
cmp
aad
push
mov
mov
sbb
adc
data16
jae
imul
cld
push
inc
xchg
out
pop
push
push
roll
add
mov
sub
outsl
and
or
lea
sbb
je
xor
adc
and
dec
jg
cmpsb
addr16
cwtl
enter
inc
add
sub
adc
jns
sahf
xor
xor
xchg
pop
inc
xchg
popf
fisubs
shl
adc
jl
std
jno
lods
jne
mov
psubd
and
and
cs
test
outsb
js
fisubl
add
ret
ret
lods
or
inc
cltd
adcb
mov
scas
movsl
xlat
mov
lcall
pop
fistpl
icebp
jl
insb
add
and
aas
ja
dec
stos
dec
aaa
popa
push
sbb
pop
push
jnp
std
iret
in
mov
fidivrl
fildl
and
push
jg
icebp
cmp
xchg
fmuls
lds
ret
and
dec
mov
rcl
idiv
jl
cmp
lcall
cmp
push
pop
sub
pop
inc
or
addr16
xor
jecxz
xchg
pop
mov
mov
in
cmc
addr16
jmp
rcrb
mov
mov
mov
out
add
inc
pop
into
pop
test
mov
loop
jnp
pop
pop
lods
and
lock
inc
dec
in
packuswb
pop
xchg
cmp
cmc
hlt
insl
mov
pushf
cmc
jle
scas
lea
imul
lahf
jne
cmp
mov
cmpb
aas
fsubrs
and
pop
pop
lea
loop
js
mov
xchg
ret
scas
mov
cmc
pop
ds
movsb
adc
cmc
cmp
xor
inc
das
stos
or
mov
pop
lret
test
fsubs
sbb
outsb
xchg
sbb
or
stos
push
or
pop
sbb
stos
fwait
sarl
hlt
pusha
add
sub
data16
dec
test
sub
jecxz
mov
cld
inc
and
lahf
add
les
aam
imul
dec
stos
cmp
inc
adc
stos
and
sub
mov
jg
adc
addb
ficompl
fcoml
mov
nop
fsincos
jp
fcomps
out
inc
mov
test
call
aaa
and
mov
pop
outsb
icebp
addr16
nop
and
sub
iret
or
mov
sarb
test
test
pop
hlt
inc
jecxz
xorb
insl
cmp
movsl
push
xorl
pop
dec
cmp
mov
out
add
sbb
jmp
outsl
or
jo
or
into
lock
cmp
sub
cmp
out
sub
mov
xchg
dec
adc
testb
shl
adc
xchg
lahf
enter
push
adc
xlat
sbb
sub
rorb
mov
les
sbb
mov
xchg
jo
inc
rcl
pop
jg
mov
int
sti
ljmp
pop
lcall
push
outsb
cld
mov
pop
mov
insl
cmp
cmpsl
or
popa
and
ret
sbb
int3
nop
scas
call
sbb
xchg
jns
test
jl
inc
clc
in
hlt
hlt
pop
mov
inc
sbb
push
push
pop
add
into
mov
xchg
cltd
dec
ficomps
xchg
pop
inc
dec
shlb
push
adc
jb
jb
xchg
lods
push
dec
andl
sub
adc
mov
popl
push
dec
lcall
rclb
add
in
daa
int
int
cmpl
cmpsl
push
push
push
out
mov
push
pop
test
add
mov
dec
fldenv
jbe
push
aas
arpl
inc
insb
fsts
push
jmp
in
sub
sub
pop
int
je
jp
mov
mov
out
mov
xor
mov
out
gs
aad
mov
add
dec
xorl
xor
mulb
adc
lock
insl
adc
sbb
mov
je
xor
pop
mov
dec
mov
mov
push
push
and
or
adc
sbb
mov
insb
out
test
movsb
addl
mov
adc
arpl
inc
inc
outsb
push
adc
outsl
jno
imul
lods
test
cwtl
imul
sub
xor
loop
jmp
js
mov
mov
bnd
xor
adc
icebp
shll
mov
or
jb
outsb
pop
fdivs
out
pop
lea
pop
pop
in
scas
inc
and
xchg
sbb
or
add
in
push
mov
in
aas
fmull
sbb
cmp
xor
lahf
and
mov
and
sub
pop
addl
mov
inc
mov
outsl
addb
pusha
stc
xchg
aas
or
aam
int3
mov
sub
loopne
cmpsb
inc
sbb
push
ds
mov
pop
pop
out
test
cli
rolb
sahf
push
cld
enter
outsb
fstp
add
push
mov
xor
lahf
cmp
test
fcomps
mov
rclb
jecxz
aam
push
repnz
or
mov
jmp
daa
stc
push
push
lcall
adc
mov
push
out
stos
shr
jl
xor
add
mov
test
in
test
xor
or
or
lods
pop
mov
ficompl
mov
cmp
lret
movsl
adc
add
jg
lcall
insl
sub
sti
pop
inc
idivb
cs
jmp
in
or
sub
sarb
call
jecxz
adc
xchg
mov
ret
inc
and
cli
inc
mov
cltd
jns
ret
outsb
cmp
out
out
xchg
das
ficoms
out
or
xchg
sub
dec
js
int
sub
xchg
sub
mov
xchg
mov
pusha
jne
or
ja
fs
mov
arpl
add
jnp
sysenter
sahf
je
pop
negl
jnp
inc
jo
scas
int3
popa
aaa
lods
adc
sub
pop
jmp
in
push
xor
ret
lahf
pusha
in
xchg
push
adc
std
ja
mov
mov
test
stos
mov
pop
jle
jp
mov
dec
mov
fidivs
cmp
jge
sub
jle
ja
testb
jge
test
test
mov
call
add
rol
cmp
jne
jno
pop
je
pop
pop
xchg
enter
jo
add
adc
into
ss
pop
adc
push
ret
adc
rolb
pop
mov
add
jbe
add
xor
cmp
mov
mov
add
sub
sub
mov
das
das
mov
stc
loop
cwtl
arpl
jne
ds
loopne
jmp
cmp
cld
jecxz
movsb
repnz
cmp
mov
nop
sub
mov
push
or
push
fistl
clc
popf
sbb
push
xor
mov
dec
sub
jle
fs
subl
push
or
inc
adc
sub
xor
sbb
xor
adc
in
outsb
jmp
daa
or
xor
inc
pop
insb
dec
outsl
aas
lret
and
or
in
jg
mov
lds
xchg
mov
repz
push
aaa
adc
mov
sbb
subl
xor
rorl
sahf
mov
mov
sti
mov
pop
xchg
dec
cmp
insb
or
mov
int
lock
pop
pop
push
pushf
or
in
push
push
adc
xchg
fyl2x
mov
xchg
push
mov
pop
jae
inc
jge
lock
add
arpl
ja
mov
repnz
testl
cmp
dec
mov
mov
and
lcall
mov
jae
inc
cltd
mov
rclb
sub
sbb
xchg
roll
push
std
cmpsl
sahf
mov
sub
fsubl
outsb
jp
pop
mov
jne
sbb
and
enter
pop
ja
dec
jnp,pn
inc
in
xchg
mov
movsl
dec
jecxz
je
icebp
lahf
pop
lret
lahf
movsl
fwait
dec
and
lds
enter
out
sub
in
fmull
cld
sbb
imul
daa
test
test
fildl
mov
add
popf
or
cli
mov
popf
hlt
cli
xor
xor
xorl
push
test
jl
sbb
rcrl
xor
cltd
adc
jnp
pop
jbe
jne
and
xorb
add
imul
xor
xchg
outsb
jle
inc
scas
mov
hlt
pushf
std
and
xlat
shrl
mov
dec
lods
pop
jne
dec
fmul
mov
imul
jae
das
pop
push
xchg
jne
int
frstor
clc
pop
adc
stc
lret
dec
pop
inc
inc
sarl
jp
add
jb
inc
call
adc
cmp
inc
adc
push
pusha
jge
sbb
jns
sub
cmpsb
add
push
or
xchg
mov
mov
shrl
sub
sbb
sbb
xor
loop
cmp
popa
lret
imul
frstor
mov
sbb
jl
cltd
outsl
out
insb
outsb
push
adc
mov
test
xchg
push
add
pop
stc
out
adc
add
aas
pop
add
icebp
mov
sbb
jge
rorl
shrl
ret
mov
std
mov
insl
in
dec
out
push
mov
cmp
jle
mov
adc
xor
adc
les
xor
mov
scas
xchg
xchg
loop
int3
outsl
adc
divb
xor
pusha
arpl
dec
loopne
in
mov
out
testl
lahf
jmp
jnp,pt
inc
sahf
inc
ret
pop
inc
leave
ja
cli
mov
jp
rcr
sarl
stc
push
push
hlt
cmp
xchg
jmp
push
test
mov
ljmp
pushf
ret
das
clc
push
jmp
in
or
mov
lret
pop
jge
popa
sub
dec
fsubr
mov
mov
xchg
pop
add
pop
fwait
xchg
lock
arpl
xchg
loop
lods
and
or
pop
cmp
lods
jb
stos
dec
mov
xchg
push
scas
aad
inc
out
sbb
xchg
inc
inc
xchg
pop
leave
mov
stos
jns
push
sub
fldl
lock
push
mov
sbb
sbb
xchg
ljmp
cmp
dec
int
and
cmp
xchg
int
xchg
pop
fldenv
ljmp
adc
push
add
mov
push
push
cmpsb
cli
repz
push
inc
jne
leave
loope
dec
cmp
sbb
cltd
dec
ret
push
popf
pop
and
xchg
mov
and
mov
aaa
outsl
mov
scas
inc
inc
pop
enter
decb
mov
cmpsb
sub
pushf
jo
xchg
jmp
lods
add
loopne
mov
inc
nop
mov
fdivl
pusha
insl
cwtl
add
hlt
cmpsb
popa
inc
mov
cwtl
jbe
push
popaw
add
mov
mov
xchg
int3
jmp
and
add
in
jno
js
leave
xor
scas
fisubl
ficoms
mov
or
out
popf
pop
mov
jnp
shrl
mov
push
inc
es
cmp
leave
les
ficoms
xor
push
push
out
fidivrl
addr16
sbb
mov
test
cmp
dec
push
mov
cmp
sub
fisttpll
out
mov
cmpsb
jge
mov
or
ret
fsubr
or
cmc
and
scas
jns
in
cmp
pusha
pushf
push
dec
loopne
xchg
xor
pop
jp
movsb
pcmpeqw
mov
rorb
mov
mov
mov
mov
cmpl
sti
loopne
push
push
mov
jo
bound
movsb
add
stos
xor
sub
xchg
push
adc
ds
cmp
mov
jecxz
dec
imul
push
jae
xchg
in
mov
lret
cmp
cwtl
outsb
rcl
and
mov
or
nop
add
in
mov
inc
xor
mov
andl
xchg
push
push
dec
test
ds
and
jnp
scas
lret
adc
das
add
addr16
xchg
or
std
or
mov
in
ds
lret
push
xlat
mov
addb
subb
arpl
xor
mov
mov
sti
add
xchg
call
push
adc
test
mov
aam
idivl
iret
rcr
xchg
jno
loopne
fisubl
mov
mov
sbb
or
cli
push
push
hlt
mov
cmp
add
movsl
push
adc
rolb
pop
jno
or
cmpsl
fucomip
inc
inc
iret
lret
push
daa
addr16
mov
mov
add
mov
xlat
xchg
push
jne
mov
std
nop
sub
adc
jbe
jp
pop
xchg
add
jg
stc
roll
ss
clc
das
cli
cli
dec
and
pop
sub
mov
cltd
lret
adc
cltd
aad
adc
or
mov
addr16
push
inc
cmp
outsb
nop
rclb
and
mov
bound
jg
xchg
pop
dec
in
addr16
xchg
gs
mov
ret
jo
add
ds
int
movsb
xor
scas
insl
sub
dec
mov
cli
stc
add
test
out
push
pop
add
xor
ret
sub
icebp
mov
jns
add
pop
inc
cltd
add
jns
xor
mov
mov
jno
pavgw
popf
call
mov
xor
test
jns
scas
ret
and
pop
sbb
inc
inc
xlat
rcrl
lahf
dec
jne
sub
mov
jb
mov
sbb
jmp
std
push
adc
outsl
call
lods
add
cmc
loopne
mov
stos
shlb
in
mov
jnp
rolb
sub
sbb
fs
adc
and
fstpl
insb
ja
jns
mov
add
aam
nop
xchg
jl
xor
rcrl
push
popf
xor
lahf
stos
sbb
loope
jns
sbb
orb
push
mov
mov
fld
push
dec
jl
push
cmpsb
cld
pop
cltd
fs
ret
ficoms
scas
cmp
add
shrb
push
jmp
inc
xchg
in
add
mov
xlat
cmpsl
mov
lods
clc
out
sub
mov
test
inc
push
xor
add
aas
dec
and
nop
jbe
fcomi
push
sbb
jmp
loope
movsl
pop
call
push
fcmovb
jmp
pop
int
add
jns
in
cmp
mov
das
cmc
pushf
pop
lock
push
jecxz
lcall
jg
inc
cld
and
ss
mov
mov
test
pop
inc
dec
movsl
jb
push
jne
dec
xor
movsb
adc
pushf
xchg
fisubrs
sbb
xchg
adc
mov
xchg
push
jecxz
jns
leave
xor
pop
loopne
cmp
and
call
and
dec
mov
lods
mov
or
add
jl
adc
imul
xchg
push
inc
mov
mov
jle
loope
sub
bound
xchg
mov
cld
push
cmp
mov
add
add
mov
out
adc
jge
add
stos
mov
lcall
mov
add
dec
xor
adc
fistpl
mov
and
add
loopne
daa
stc
negl
outsb
js
add
lds
xor
data16
xor
pusha
sbb
out
cmp
das
cmp
lahf
inc
outsl
insl
test
dec
rorb
xchg
cmp
sets
mov
mov
xchg
dec
xor
sbb
pop
cmpsl
test
and
mov
pop
xchg
jg
or
cmc
fistl
test
xchg
out
in
rcrb
adc
sarb
aam
rorb
daa
sahf
xor
faddl
enter
mov
inc
fnstcw
mov
adc
mov
inc
data16
or
adc
xchg
inc
mulb
pop
icebp
sar
vpsrad
mov
int
ret
add
jbe
rcrl
mov
stos
clc
sarb
mov
imul
sub
pop
xchg
adc
ret
repnz
call
sbb
and
cli
mov
dec
insl
aad
adcb
or
icebp
stos
push
pop
in
add
addr16
enter
lock
mov
xchg
mov
push
bound
mov
mov
add
dec
dec
addr16
sbbl
ficoml
or
mov
jne
divps
aam
test
jle
add
cmp
lahf
ficoms
mov
xor
push
add
pop
and
mov
cs
loopne
push
dec
mov
inc
std
pop
jae
adc
jno
pop
test
imul
hlt
adc
inc
ja
jne
test
stc
mov
addl
aam
cmp
xor
fnstenv
cltd
lea
pop
inc
fsts
cmp
cwtl
jns
xor
or
daa
outsl
cmp
ds
mov
outsb
xchg
scas
leave
mov
push
mov
xor
cmc
punpckldq
or
push
cli
bswap
xor
sub
fadds
iret
adc
push
into
dec
out
cmp
lcall
jbe
fcmovnb
imul
out
daa
pop
enter
jo
mov
and
bswap
cmpsb
jmp
mov
push
push
pop
sub
ret
test
and
mov
push
jmp
xor
sub
push
jmp
ja
in
jae
jle
mov
out
shrl
scas
cmpsl
add
mov
fcomps
mov
addr16
outsb
call
pop
mov
or
push
jp
xchg
out
push
add
cs
daa
sub
or
enter
push
mov
lds
dec
mov
std
push
cmp
popf
pop
movsl
xor
mov
cmpsl
sbb
out
xchg
adc
mov
pop
xor
pop
add
cltd
mov
pop
mov
ret
push
xchg
mov
cld
jns
add
xchg
pop
xor
mov
mov
push
mov
mov
mov
sbb
dec
lock
insb
loopne
mov
add
bound
cltd
push
sti
ret
imul
dec
enter
mov
fidivs
test
subb
jmp
test
cmp
cld
pop
aas
push
sbb
aaa
push
and
iret
push
jmp
pop
xor
test
mov
push
int3
xchg
lret
mov
lods
lcall
pop
decb
jecxz
fdivl
pop
data16
test
adc
and
pop
push
and
mov
out
pop
pusha
and
dec
shll
add
popa
push
push
aas
add
mov
mov
ja
repz
sbb
hlt
hlt
shll
test
mov
out
js
jbe
mov
cmpsl
rcl
dec
call
stc
fneni(8087
test
leave
sbb
cmc
inc
mov
jmp
xlat
aam
push
adc
jecxz
ret
dec
xor
mov
sti
xchg
insl
push
jg
insl
adc
jns
and
sahf
outsl
cld
mov
imul
movsl
sbb
add
scas
cmp
mov
dec
lds
sahf
sahf
test
repz
adc
cwtl
sarb
shll
insb
or
test
jbe
mov
add
lcall
mov
xor
adc
out
fwait
aaa
cltd
dec
icebp
sub
push
mov
sub
sub
or
pop
aaa
inc
push
pop
mov
jp
sub
orl
rcr
and
fsubr
cmpsl
adc
popl
lea
ljmp
lods
xchg
ret
aaa
mov
enter
aas
sahf
mov
cmc
mov
adc
jle
insb
addr16
iret
inc
pusha
adc
pop
xchg
mov
test
cltd
fldcw
inc
outsl
or
sbb
ret
mov
movsb
das
test
dec
pusha
fnsave
pusha
cltd
pop
or
lods
mov
repz
test
dec
adc
or
jp
add
lds
int3
cld
push
jnp
jge
jge
pop
inc
inc
jl
ljmp
movsl
cmp
mov
insl
mov
rcrl
popf
jmp
add
xchg
mov
insb
mov
imull
cwtl
push
push
cmp
jae
pop
jp
lods
outsl
mov
adc
or
cmp
inc
sub
push
adc
call
andb
fiadds
push
sarl
xchg
nop
in
pop
mov
mov
sbb
mov
cmpsb
dec
leave
sub
sbb
mov
popf
pop
or
push
mov
loop
xchg
repz
mov
scas
mov
dec
movsb
out
mov
jbe
stos
cmpsb
sarb
jbe
fcoms
cmp
mov
push
aad
rorl
xor
mov
ret
cli
call
sub
xchg
data16
call
mov
adc
jnp
mov
pop
adc
gs
push
sbb
stos
push
and
sub
je
mov
decl
ret
mov
jmp
shll
jbe
mov
or
jle
xor
cvtps2pi
fistl
lcall
lock
mov
gs
mov
ret
sub
das
jp
dec
je
ret
adc
repz
jne
cmp
mov
cmc
xchg
push
sub
pop
loop
adcb
subl
inc
dec
std
push
sub
push
ja
loopne
cmc
and
mov
push
sbb
dec
add
jns
sub
bound
std
neg
sbb
xchg
cwtl
lret
movsl
inc
imul
arpl
sti
jg
shrb
xchg
popl
mov
imul
cld
jne
insb
or
push
mov
jae
sub
push
sub
inc
aam
outsl
pop
das
dec
pop
xor
adc
xchg
pop
xchg
xor
addr16
or
aas
lods
mov
in
gs
sub
xchg
cmp
dec
or
push
or
popf
fdivl
lret
or
xchg
sar
and
or
or
sub
dec
push
push
inc
mov
sti
imul
sub
addr16
out
mov
push
add
dec
subl
and
inc
std
aam
data16
sub
adc
add
jle
or
add
aaa
push
pop
dec
mov
inc
fwait
adc
mov
int
mov
cltd
in
mov
mov
pop
mov
xchg
imul
pop
and
jnp
mov
ror
mov
mov
aam
leave
mov
mov
inc
dec
mul
mov
dec
add
jnp
xchg
cmp
jmp
push
jbe
xchg
ds
pop
ljmp
sub
mov
mov
jmp
inc
adc
dec
mov
jl
xchg
fst
adcl
cmpb
pop
and
pushf
int
mov
jno
dec
push
inc
inc
pop
inc
mov
ret
mov
and
orl
dec
scas
pop
xor
outsb
sub
xlat
pop
jl
mov
add
push
dec
fdivrs
xchg
dec
jae
movsb
push
cmpsl
pop
sarb
cmp
inc
daa
jp
inc
out
xor
movsb
popa
hlt
sub
je
push
mov
push
aam
push
aam
pusha
jecxz
sub
leave
mov
test
xlat
pushf
std
mov
lret
mov
dec
sbb
jae
daa
dec
movsl
push
inc
loope
add
mov
jns
sub
xor
int3
ss
imul
movsb
dec
leave
cmpsl
loope
or
cwtl
subl
loopne
xor
inc
daa
test
mov
ss
je
cmp
mov
mov
jns
adc
push
addb
insl
dec
and
int
push
rorl
and
cmp
cmc
dec
jbe
mov
test
les
sbb
sbbb
xor
std
pop
ss
pop
inc
sub
add
out
aaa
xchg
cwtl
inc
mov
xchg
aas
adc
in
and
les
add
fs
sbb
lock
adc
push
lock
sub
sbb
push
fdivr
sub
jns
cmpsb
iret
inc
mov
sub
aaa
mov
dec
shr
mov
das
fmull
int
xchg
inc
jae
dec
cmp
rorl
and
lret
or
cmp
in
js
hlt
das
jle,pt
jmp
push
iret
sub
mov
neg
out
iret
xor
pop
imul
or
xchg
push
adc
into
popf
dec
sub
stos
lcall
out
jl
fnsave
sbb
adc
inc
mov
jecxz
inc
cld
jecxz
orl
aad
add
jg
adc
or
or
sub
ret
test
std
mov
or
add
inc
lock
push
call
and
dec
mov
das
ror
xchg
or
icebp
dec
add
in
adc
cli
loop
push
ss
es
cmp
cmp
das
roll
jl
or
in
or
add
stc
push
dec
mov
inc
adcb
stc
inc
icebp
ss
imul
jmp
cmp
and
clc
daa
test
add
push
sbb
leave
mov
test
xor
clc
xor
int3
jge
fcoms
adc
mov
jmp
jb
sub
in
sub
mov
xor
in
ret
andb
mov
cmp
push
xor
mov
mov
lods
push
imul
or
sbb
cltd
iret
xchg
jnp
xlat
and
fstpl
shll
movsb
lock
scas
jge
test
or
mov
cmp
sti
out
rcr
xor
aas
jmp
push
adc
push
inc
fwait
cld
mov
mov
pop
and
lretw
sahf
push
xor
mov
nop
dec
stos
mov
sub
std
dec
cld
rorl
ljmp
sbb
pop
pop
repz
inc
mov
xchg
mov
movsl
outsb
push
lcall
and
adc
scas
lds
movsb
gs
add
mov
roll
xlat
roll
mov
lret
leave
inc
and
mov
adc
test
pop
imul
das
pusha
das
popa
jmp
popf
out
pushf
mov
mov
add
cmp
cwtl
mov
pop
addr16
adc
fnstcw
push
test
movsl
cmpsl
pop
into
into
pop
adc
cmp
in
or
ljmp
jecxz
std
jl
rcrb
icebp
insb
dec
in
shrb
mov
mov
xchg
lahf
pushf
cmp
add
xor
pop
aas
cmp
fsubrs
sub
adc
xor
das
adc
cmp
xchg
dec
das
sbb
add
mov
xchg
stos
insb
push
inc
notl
jns
xchg
sbbb
jno
shrb
ret
add
dec
fwait
popf
out
inc
adc
jmp
hlt
sbb
shl
cmc
data16
jmp
sbbl
jbe
fdivrl
inc
add
push
divl
test
rcll
in
rclb
out
mov
xchg
push
lret
push
incl
adc
pop
enter
leave
scas
jno
dec
clc
mulb
mov
jge
ja
bound
add
ret
inc
pop
cmp
xor
movsl
inc
cmp
sub
loopne
adc
sub
adc
cmp
aad
fsubr
jmp
movsl
xor
iret
je
pop
mov
jecxz
sbb
xlat
in
sbb
inc
inc
push
clc
mov
sbb
loopne
shr
jbe
mov
cmc
inc
pop
out
hlt
cmp
lock
daa
ret
fldt
mov
loop
testb
mov
or
icebp
mov
sbb
je
sbb
in
lcall
mov
pop
loopne
andb
jno
imul
dec
and
gs
gs
ja
fwait
in
xlat
push
sarb
xchg
cmp
mov
dec
or
or
inc
int3
gs
nop
jecxz
lret
mov
jle
dec
push
cmc
lcall
test
sbb
cltd
jg
and
jne
mov
rcll
xchg
sub
movsl
mov
ljmp
pop
push
movsl
mov
test
xor
jmp
mov
aad
inc
mov
in
jl
rolb
push
gs
enter
jecxz
test
push
lds
int
inc
mov
loop
outsb
xchg
mov
dec
mov
and
sub
in
dec
sahf
jnp
jns
xor
daa
in
mov
push
ret
push
cs
decl
inc
dec
nop
ljmp
inc
push
add
add
inc
xchg
mov
xchg
lahf
cmpsl
ds
popa
sbbb
dec
test
sub
jne
sbb
push
ljmp
push
cmc
inc
xchg
fs
push
inc
xchg
cmp
cs
aam
lds
lret
hlt
in
push
ja
fistpl
mov
inc
dec
in
loopne
cwtl
rcl
stos
cmp
lds
xlat
lret
push
inc
data16
pop
jg
adc
xchg
add
shl
cmp
imul
dec
iret
clc
arpl
pop
push
js
xor
jp
les
fwait
daa
fsubl
sbb
sarl
or
outsb
xchg
push
xchg
push
xchg
in
lds
xor
cwtl
adc
int3
rcrl
lods
sbb
call
inc
outsb
fsubrl
jae
adc
hlt
pop
inc
aaa
cmp
jg
mov
inc
dec
jns
xor
pop
ja
addr16
push
sar
xor
pushf
jns
ud0
sahf
jge
fs
mov
aaa
test
mov
imull
and
jp
jne
jns
mov
push
fidivl
jp
fcomps
cmpsb
pop
push
dec
packsswb
add
stos
sbb
loopne
push
mul
call
push
cmc
je
addr16
pop
or
or
and
sub
or
stos
add
dec
add
xchg
lock
lods
push
pop
push
sti
pop
lcall
pop
mov
insl
xor
lock
imul
cld
aaa
add
pop
push
or
fcoms
mov
jae
push
sub
pop
or
fcomip
lahf
rorb
sub
inc
xchg
sub
imul
and
shl
fistpl
leave
fbstp
aad
push
aaa
negb
xor
dec
addr16
cmp
rcr
fsubr
jg
jno
incl
and
xchg
sub
dec
add
push
cmp
lock
xchg
adc
xor
jnp
mov
cmp
popf
inc
enter
push
mov
pop
enter
rclb
sti
dec
xor
cltd
add
std
fnsave
cld
das
cmp
adc
cmpsb
aam
aas
sbb
lock
jb
fwait
lret
push
jo
cmpsb
loopne
les
scas
sti
fmul
mov
sbb
arpl
orb
adc
cld
mov
mov
jmp
dec
cmpsl
dec
je
xchg
jmp
mov
ja
lods
cmp
or
int3
mov
rcpps
icebp
dec
sub
fdivl
sub
and
aam
jmp
lcall
jmp
int3
ror
aas
sbb
fwait
imul
sbb
lods
push
test
repz
sub
cmpl
mov
push
into
cmpsb
adc
outsb
push
or
mov
xchg
ljmp
adc
das
xchg
mov
imul
push
pop
shl
inc
int
inc
scas
lret
jbe
imul
jbe
daa
pop
dec
and
hlt
mov
pop
cmp
push
sub
sahf
test
aam
andl
sbb
fwait
pop
adc
fsub
add
ja
fstpt
sub
sbb
mov
pusha
scas
ror
lods
lods
jge,pt
xchg
xchg
lret
scas
fadd
add
mov
clc
xor
push
shrb
xchg
movsl
xchg
or
mov
sub
popf
cmp
cmpsl
shll
lcall
lea
mov
ja
bound
sbb
fimuls
gs
lods
iret
cmp
pop
and
push
ja
fidivs
dec
insl
and
push
mov
jae
mov
cli
addl
inc
sti
or
adc
push
bound
out
insl
cld
cli
jo
mov
iret
pop
sbb
pandn
mov
jo
jge
dec
push
jg
mov
jns
aad
movsb
push
xchg
loopne
jle
and
cmp
adcl
cmc
xor
lret
xchg
push
jns
jb
fcoms
and
inc
ss
xlat
xchg
arpl
xor
or
or
inc
cmp
cltd
aaa
mov
andb
int
stos
jbe
xor
push
stc
inc
pop
mov
loop
xchg
lahf
movsb
or
adc
call
sub
imul
jnp
fldl
xchg
bound
aam
fcmovne
fwait
mov
mov
mov
loop
push
movsl
ja
mov
inc
push
stc
loopne
mov
sbb
ret
rclb
mov
decl
fsubp
sub
ret
insl
dec
dec
ret
shll
imul
jp
popf
add
sub
adc
sbbb
mov
aad
cmp
aas
sti
jp
movsb
sub
nop
push
cmp
cmpsl
xlat
sbb
stc
cld
imul
aas
stc
popf
xchg
sbbl
sar
test
jno
leave
clc
lods
sub
inc
sub
mov
movsb
sub
dec
stos
cmp
pop
insb
ret
test
lods
push
jp
push
pop
adc
sub
sbb
clc
int3
add
leave
rcll
xlat
sbb
sarb
mov
outsb
fisttps
loop
popa
push
lods
cli
jp
adc
insl
jnp
push
or
jge
mov
sub
inc
ljmp
sti
aas
mov
shl
cmp
jg
aad
inc
mov
les
push
inc
movsb
ljmp
es
jge
push
nop
sbb
rcl
test
adc
push
lds
mov
lock
lock
dec
and
inc
in
test
pop
pop
mov
mov
dec
dec
gs
add
dec
adc
or
inc
outsl
addl
xor
ds
and
loopne
xchg
or
sbb
loopne
push
js
cmpsl
pop
cltd
push
push
adc
loop
inc
sti
fld
pushf
daa
ret
mov
int
incb
es
or
mov
jne
std
dec
cli
pop
imul
pop
test
nop
pop
dec
mov
mov
rcr
sbb
testl
pop
inc
sub
sbb
popa
jg
dec
fwait
cmpsb
test
in
jmp
xlat
je
sbb
inc
imul
nop
es
push
cmp
cltd
out
cmp
push
outsl
mov
add
mov
in
xchg
lret
sbb
add
out
mov
ret
bound
in
sub
adc
stc
add
inc
pop
test
push
inc
inc
and
mov
movsl
fxch
lret
lds
pop
rcll
les
mov
sbb
and
adc
add
mov
adc
sub
shl
push
pop
mov
aam
pop
shlb
lods
ret
sub
test
shll
mov
mov
xor
adc
add
scas
cld
sbb
mov
pop
shld
jge
stos
imul
out
xor
add
push
aas
fcomps
sbb
or
mov
xchg
push
out
push
lock
je
dec
out
pop
cmc
jge
xor
fcompl
xor
pop
popf
adc
mov
xchg
sub
jno
and
jne
pandn
or
xlat
in
lock
dec
mov
into
and
inc
jmp
adc
cltd
into
aad
push
imulb
and
scas
stos
ljmp
jg
pop
loope
push
sar
xlat
mov
dec
xlat
mov
pop
in
xor
mov
leave
jl
in
push
jmp
cli
jge
ljmp
xor
xor
out
popf
loop
push
add
ss
mov
incl
ss
fwait
and
add
sbb
mov
clc
dec
jae
mov
xor
mov
bound
push
xor
mov
adc
jns
popf
ljmp
test
cli
popf
dec
sub
cmp
movsb
imulb
jne
push
xor
icebp
mov
pop
dec
je
ficoms
inc
sub
movsl
lock
sub
sub
addr16
int
xchg
xor
sti
xchg
xor
int
sahf
aad
mul
mov
jno
jno
rcl
fiaddl
mov
cli
subb
mov
in
mov
cmpsl
ljmp
mov
push
clc
fwait
lahf
push
ret
sub
xchg
cmp
scas
jo
scas
fadds
mov
out
fldt
mov
jnp
cmp
mov
ret
pop
ret
push
repnz
mov
dec
xchg
jnp
aas
xchg
xchg
cs
sub
mov
pushf
stos
sti
int3
mov
fldenv
cltd
xor
cli
mov
xchg
inc
mov
repnz
out
mov
mov
mov
out
add
imul
inc
fidivl
and
inc
test
or
enter
pop
mov
insl
pop
mov
int3
push
pop
adc
adc
inc
lock
mov
mov
data16
push
xor
add
push
in
and
xor
es
xchg
mov
addr16
sub
jl
add
xor
daa
mov
aad
pop
cltd
lds
dec
mov
loopne
pop
mov
fidivrl
leave
leave
into
pop
pop
pushf
ret
pop
inc
mov
fstpt
ret
fidivl
mov
push
inc
scas
mov
or
int3
and
ds
cld
push
jl
fidivs
lret
mov
cltd
mov
enter
repnz
xor
in
cltd
cmp
jnp
test
add
jp
out
mov
frstor
aam
cmp
xchg
gs
imul
mov
add
dec
data16
pop
xor
mov
insl
enter
mov
push
xchg
sahf
int3
inc
push
mov
xor
jg
jne
adc
jmp
popa
mov
imul
fwait
loope
movsb
call
mov
cmp
xchg
dec
arpl
fcomps
mov
pop
push
add
fs
sub
sbb
cld
xchg
jecxz
add
cmpb
dec
frstor
jmp
je
jb
inc
mov
pop
enter
and
lret
pop
jbe
test
inc
negl
mov
push
push
cld
jmp
sahf
cmpsb
ret
add
aaa
sbb
push
loopne
xchg
insl
loop
add
xlat
pop
movsb
les
push
pusha
push
or
push
ss
or
sbb
stos
stos
lods
xchg
cmp
outsb
call
pop
xor
loopne
cmp
xchg
cmp
lcall
adc
test
filds
ror
and
and
push
andl
and
cmpsl
mov
cwtl
out
xchg
loop
inc
int3
lret
icebp
stos
sub
and
cmpsb
pushl
mov
cmp
sub
cmp
and
andb
stos
jno
mov
mov
cmpsl
leave
imul
adc
jbe
dec
jbe
fldl
insl
out
dec
xchg
sbb
call
cmp
push
cli
sarl
sub
ret
cmp
enter
mov
movsb
add
das
mov
sarl
ror
in
shrb
ficoml
lods
xchg
dec
xchg
xor
imul
or
test
shll
push
lds
or
pop
insb
add
mov
dec
outsl
inc
jo
lds
shlb
icebp
jb
push
sub
cmp
or
movsl
and
ret
out
cld
and
cmpsb
leave
in
out
std
and
mov
jmp
mov
cli
loope
adc
je
push
leave
pop
pop
jns
mov
je
mov
pusha
stc
and
dec
popf
sub
adc
push
fs
mov
and
cmp
jbe
push
push
stos
pop
loope
scas
inc
push
adc
pushf
mov
sub
push
or
sub
fimull
aaa
ds
or
or
adc
in
test
in
in
cwtl
push
inc
mov
jl
ss
jne
cmp
fildl
inc
dec
jmp
jbe
push
xor
jo
repz
cmp
rolb
es
push
aam
inc
mov
jecxz
mov
mov
push
xorb
scas
dec
mov
and
dec
mov
adc
cmp
aaa
aam
cmp
jmp
es
out
mov
ds
pop
pop
aad
test
push
pop
push
nop
cli
in
movsb
cmpsl
mov
mov
adc
add
jno
push
push
xlat
dec
mov
test
gs
test
pop
scas
leave
push
into
roll
daa
xchg
or
jae
mov
mov
jmp
xchg
xchg
hlt
pop
lods
jno
adc
mov
jno
or
pop
dec
sub
sbb
pusha
push
mov
iret
jb
inc
pop
sahf
or
jp
push
jl
and
sub
xor
mov
lretw
pop
stc
gs
and
loop
jl
sbb
xchg
mov
sub
mov
add
mov
out
jecxz
fnstsw
scas
jmp
repz
outsb
clc
je
add
push
mov
jle
out
jo
push
lret
cmp
pop
sbb
mov
xor
in
mov
loope
out
push
add
lidtl
inc
pusha
aad
dec
fwait
stos
cwtl
sub
xor
sub
popa
add
jle
mov
mov
cs
cmp
sbb
cmpsl
and
mov
push
adc
and
cwtl
outsb
inc
jge
cmp
xchg
dec
or
inc
aam
fstpt
sbb
dec
insb
cwtl
test
arpl
outsl
adc
dec
sbb
aad
push
xor
jne
stos
and
dec
sbb
subl
cmp
shr
push
and
add
shrl
xchg
fwait
rclb
mov
lods
iret
mov
mov
add
sbb
pusha
and
xchg
inc
jno
inc
pop
push
rorb
adc
lods
and
cmpsb
loop
rol
aas
push
sbbb
cmpsl
lea
das
fcmovnbe
loope
jnp
rolb
mov
cs
dec
frstor
gs
cmp
lds
cmp
jb
movsl
cmp
sahf
cmpsb
xchg
push
lret
sbb
daa
lock
rolb
cs
mov
mov
jg
pop
ja
divb
adc
mov
pop
std
out
pop
xor
xchg
aad
jne
mov
pop
mov
cmpb
pop
cli
scas
sub
dec
mov
loop
les
jl
sbb
xor
push
pop
scas
loope
push
jle
pusha
stc
push
incl
add
or
aaa
mov
repnz
xchg
lea
adc
data16
inc
popf
aas
or
xchg
mov
lock
lds
cli
dec
mov
lods
nop
mov
jnp
fadd
nop
push
pop
xchg
out
repnz
sbbl
mov
addr16
fcos
int3
movsl
sub
mov
sub
mov
inc
cmp
jo
movzwl
cld
inc
test
aas
adc
sub
or
mov
jb
imul
cmpl
pop
scas
cmp
aas
sub
mov
mov
ret
jne
clc
push
dec
scas
mov
or
daa
mov
or
add
loop
adc
jmp
mov
pop
leave
sarl
inc
jecxz
daa
pop
arpl
pop
jg
idivb
lods
xchg
mov
jnp
jno
loopne
je
xchg
mov
xor
nop
pop
setno
mov
push
xchg
mov
test
mov
in
mov
push
cmp
js
xlat
fld
jbe
bound
push
fwait
pop
or
pusha
out
fdiv
jp
in
add
in
dec
adc
into
sub
sub
fs
push
sahf
push
sub
push
fistpll
mov
fnstenv
loopne
push
pop
movsl
loopne
imul
cltd
sbb
add
into
dec
mov
cltd
outsb
lret
mov
loopne
in
lcall
lock
sbb
loop
cli
movsb
cmp
sbb
lahf
sub
mov
fisttps
insb
test
outsb
lret
mov
jge
and
xchg
xor
movsl
aaa
and
inc
lret
popa
sbb
out
dec
inc
popa
cmp
mov
jns
dec
scas
popa
mov
cmp
pop
mov
lods
push
in
fnsave
test
push
ss
pop
fwait
jle
adc
pop
test
xchg
hlt
ljmp
shlb
enter
repz
dec
cs
sbb
mov
push
ss
or
inc
stc
mov
jbe
add
test
insl
pop
filds
xchg
lret
sub
leave
fstp
nop
cltd
xor
and
cmp
insb
push
sti
adc
ret
jl
mov
pop
movsl
and
pop
jge
pop
popa
scas
cli
cs
fsubl
mov
xor
inc
or
mov
and
dec
movsl
fs
push
js
sti
xor
pushl
mov
push
gs
add
mov
jle
ja
jo
fists
sbb
imul
outsl
xor
stc
andb
lock
dec
pop
cmp
call
or
jmp
pop
sub
rclb
jnp
fmull
sbbl
fistps
mov
outsl
std
dec
dec
jbe
jno
clc
pop
jbe
stc
jl
data16
mov
mov
adc
gs
fnstcw
loope
pop
sbb
and
mov
ficoms
mov
outsb
imul
dec
and
push
aam
add
push
and
shrb
shl
int3
sbb
aad
divb
int
jge
add
mov
ds
std
popl
mov
ror
push
test
inc
mov
or
pop
mov
sarb
je
int
scas
push
aas
mov
pop
out
dec
jg
les
int
xor
lods
xor
dec
mov
aam
mov
and
jnp
ret
mov
in
movsb
inc
and
add
data16
mov
mov
insb
xor
pop
dec
and
mov
repz
push
incb
inc
stos
popa
xchg
or
sub
ja
mov
je
movsb
dec
cmpsl
notl
leave
lahf
pop
or
cmpsb
jne
fmull
add
and
xchg
push
xor
inc
out
inc
jne
push
mov
mov
dec
rorl
aad
cwtl
cld
mov
fnstsw
xchg
jle
push
test
das
call
orb
jno
xor
and
push
sti
add
dec
xor
push
int3
or
mov
movsl
out
iret
aam
int3
mov
dec
jne
and
ja
cmpsb
and
out
cltd
xchg
repnz
movsl
rcr
mov
aaa
dec
inc
notb
lock
cmp
andl
pop
inc
js
ret
inc
push
fst
inc
sub
pop
dec
rol
lcall
jmp
adc
in
xchg
push
xchg
jmp
lods
xor
xor
mov
and
dec
inc
imul
mov
mov
sub
mov
fwait
jmp
xchg
sar
cmp
aam
mov
sbb
std
sub
xor
inc
cmpb
jge
pop
daa
imul
fsubr
pavgb
or
inc
shrl
in
lcall
cli
xchg
int3
dec
fisubl
push
sub
aam
xor
sbb
and
aad
ljmp
lcall
shrb
dec
add
dec
fists
shrl
xchg
cmpsb
jg
out
leave
iret
dec
lods
jle
and
xor
ficomps
or
push
sub
out
aaa
pop
cltd
xchg
repz
inc
in
stos
push
inc
push
sbbl
sbb
imul
and
jp
pop
iret
fsubrl
mov
mov
jbe
mov
and
inc
fcoms
xchg
push
mov
and
cmpsl
push
add
xchg
mov
shl
addr16
inc
scas
ss
fmuls
sub
call
jnp
push
cmp
ret
repz
shll
ds
or
add
jnp
mov
xor
sbb
outsb
jle
in
sbb
loopne
mov
push
in
mov
sbb
cwtl
sbb
xchg
addr16
sub
sub
shll
sbb
xor
and
pushf
mov
inc
lahf
pop
mov
push
xchg
and
xlat
pop
dec
idivl
jge
xorl
pop
shll
fnsave
sar
jmp
mov
xchg
mov
je
iret
in
test
shlb
jbe
flds
stos
mov
enter
fstpl
mov
fs
xchg
mov
sbb
pop
vmulss
sbb
mov
mulb
fnstenv
loopne
inc
std
adc
mov
decl
xor
lret
adc
hlt
pop
xchg
repz
icebp
pop
inc
rol
fldenv
jb
aad
adc
imul
push
jge
cli
rcrb
sub
mov
add
int3
outsb
mov
out
loop
repz
add
inc
dec
scas
jne
jl
jmp
cmc
pop
add
or
cwtl
fstpt
xorl
adc
pop
cmp
push
cmp
push
insb
arpl
mov
mov
cltd
mov
mov
test
repnz
in
je
sbb
sbb
xchg
stc
jle
push
add
fs
mov
adc
rorl
fwait
mov
cs
clc
cmp
inc
and
in
rcrb
inc
pop
fcmovu
push
add
ljmp
pop
cs
loope
leave
shll
push
cmpsl
fsubp
repz
xchg
fmull
add
test
xor
push
subb
dec
or
out
cmp
gs
and
add
movsb
mov
or
mov
ja
out
mov
or
aaa
jg
insl
fnstenv
add
cmpsl
int
cmp
adc
sarb
out
pop
cli
mov
lds
dec
lock
push
push
inc
lahf
mov
pusha
das
mov
pusha
sub
lret
jo
mov
sbb
pop
xchg
push
xchg
flds
inc
lret
mov
sub
or
notb
les
dec
push
insb
inc
or
mov
jne
cmpsl
xchg
std
fldln2
lcall
jp
push
adc
mov
xor
mov
jae
sar
fldt
hlt
sub
pop
mov
dec
mov
xor
add
xchg
aas
test
test
les
pop
cli
push
sbbb
popf
cmp
or
out
hlt
push
inc
cmp
inc
insb
jb
or
jg
test
mov
lcall
dec
jne
lods
cmp
cmpsl
jl
ja
dec
jbe
outsl
cmp
jmp
pop
mulb
or
jo
dec
xchg
mov
out
jne
adc
sbb
mov
mov
mov
pop
cltd
jo
call
mov
push
pop
or
jnp
push
sbb
roll
add
cmp
call
adc
stos
shl
lea
cmp
jns
or
scas
mov
xchg
arpl
aaa
ja
inc
add
jp
bound
cltd
pushf
mov
ljmp
insl
bound
sarl
push
je,pt
mov
rcrl
popf
mov
or
pop
jbe
cmp
das
inc
jnp
pxor
addr16
or
push
dec
push
aas
push
cmp
fwait
pusha
arpl
jg
mov
mov
xchg
and
in
push
push
dec
fistps
sbb
ret
popf
pop
call
mov
cmp
dec
fstpl
inc
mov
sti
and
mov
jmp
shlb
adc
jecxz
fsubr
lods
sbb
pop
and
dec
das
dec
pop
push
iret
sub
mov
andl
fs
loop
test
xor
mov
ja
insb
pop
pop
pop
pushf
divl
cmc
pushf
dec
nop
fwait
push
fs
mov
add
or
into
sub
rcll
and
sub
leave
mov
shl
lods
aaa
sbb
loope
outsb
mov
inc
add
push
lahf
mov
adc
sub
test
lret
inc
jle
div
loopne
pop
incb
and
call
shr
iret
std
xor
cmc
xlat
sbb
jae
scas
aas
adc
cmp
mov
push
sbb
push
jno
adc
push
in
mov
dec
icebp
sarb
incl
ret
and
mov
sbb
in
nop
or
in
sahf
mov
rcrb
cli
arpl
mov
out
xor
testb
hlt
enter
stos
dec
and
js
pop
xchg
xor
iret
xlat
pop
fdivr
push
mov
aaa
sbb
out
or
aad
jo
mov
mov
popa
and
mov
lock
xchg
mov
jp
or
mov
enter
add
xor
cld
das
jl
mov
jo
movb
movsl
fbstp
xchg
sub
push
xor
jbe
cltd
test
and
es
ret
pop
fistpll
testl
add
fwait
dec
and
push
out
movsl
sbb
sti
nop
imul
mov
jne
icebp
int
push
loop
cmpsl
mov
cmp
imull
sbb
mov
arpl
pop
mov
sti
ret
jl
pop
push
or
fs
xor
repz
sbb
mov
jb
dec
aam
cmp
dec
inc
sub
je
sti
imulb
data16
ficompl
adc
or
xchg
adc
cwtl
call
das
out
push
int
xchg
jo
nop
jo
data16
lea
xor
pop
jne
adc
jle
sbb
out
mov
pop
cld
aad
and
jae
les
in
mov
jmp
std
mov
and
add
aad
mov
inc
push
push
mov
aam
fisttps
pusha
fwait
je
mov
fsubs
push
dec
ficompl
out
popa
mov
add
lcall
orl
inc
fidivs
notl
jns
push
pop
and
cld
lcall
push
cmp
sbb
pop
jp
mov
test
shll
js
pop
shlb
push
push
dec
mov
ret
cwtl
lret
popf
push
aam
push
subl
mov
cmp
sbb
pop
xorl
pop
jae
pop
out
stos
push
add
imul
test
cmpsl
or
notb
ret
or
jno
int3
sub
pop
and
movsb
pop
push
data16
in
aaa
js
ficoml
int
aam
mov
imulb
sarl
dec
sahf
cmp
popf
arpl
pushf
pop
jmp
and
xor
and
push
and
jbe
push
leave
lods
insl
pop
or
add
xor
push
call
push
xor
push
pop
aad
adc
or
aaa
loop
fimull
mov
jmp
mov
mov
and
lret
cmp
daa
mov
xchg
data16
push
and
aas
adc
push
add
int
dec
add
stos
mov
jge
sbb
lcall
mov
push
lcall
jb
dec
insl
gs
into
ret
pop
fadds
test
js
xchg
cmc
jae
inc
jo
mov
xor
xchg
or
dec
out
mov
lret
lret
sbb
jle
sahf
pusha
in
inc
xorl
xorb
icebp
dec
sbb
or
inc
aam
outsb
sti
pop
xor
rcrl
scas
std
cmpsb
and
negl
mov
int3
outsb
mov
insl
shlb
mov
cmc
imul
sti
scas
inc
sub
fisubs
add
jge
lcall
lock
ret
jmp
jo
lcall
fsubl
jo
loop
out
add
orb
lcall
xchg
cltd
pop
adcl
sub
test
les
mov
pop
add
test
ret
out
or
insl
in
cwtl
lods
shr
jmp
repnz
sbb
jae
addb
test
jns
ljmp
loope
jnp
lret
in
and
and
push
call
cli
dec
xor
add
pop
aaa
test
insl
stos
subl
cmp
fstps
pushf
idivl
add
push
push
mov
xlat
xor
cmc
insb
jecxz
lea
loope
pop
xchg
loopne
arpl
xor
mov
icebp
lcall
and
add
jb
jecxz
inc
aaa
fsubrs
scas
test
jle
les
mov
sub
mov
movsb
dec
cs
fimull
inc
icebp
sub
out
fadd
push
push
hlt
push
cs
popf
aaa
cmp
call
lahf
cltd
sub
stos
mov
popf
mov
and
push
add
adcl
imul
loop
jmp
and
fwait
push
loop
jle
fisttpl
decb
cmp
sbb
lret
adc
daa
test
popa
dec
test
and
in
les
mov
stc
xchg
xor
jp
cmp
inc
clc
dec
sbbl
push
mov
pop
ret
jns
xor
je
push
popa
ret
xchg
lods
xor
dec
scas
xor
out
mov
out
mov
sbb
dec
mov
cmp
adc
or
scas
jle
dec
inc
in
in
or
sbb
mov
jbe
xor
sbb
mov
cwtl
sbb
movsl
test
popf
mov
mov
jb
xor
sub
mov
dec
inc
add
push
fsubrl
cli
mov
mov
and
aad
jo
inc
add
jecxz
lock
and
outsb
or
mov
xlat
icebp
rcpps
int
jae
arpl
mov
mov
xor
xlat
jmp
push
scas
push
and
outsl
mov
jns
inc
fcmovne
jg
pop
fidivrl
cmpsb
xor
fisubl
mov
hlt
loope
lock
xor
js
les
xchg
add
pop
leave
lds
outsl
test
add
inc
repnz
add
out
dec
push
lret
push
insb
fldz
sbbb
incb
in
mov
cli
imulb
in
nop
sbb
insb
push
fnsave
or
fcoml
outsl
pushf
cmp
add
pop
lret
add
push
enter
dec
xor
clc
sub
faddl
pop
nop
or
icebp
jb
sahf
lret
mov
pop
daa
out
jno
les
shlb
into
lock
in
hlt
or
outsb
fadd
test
push
movsl
outsb
adc
loope
sahf
push
lahf
jl
xchg
jecxz
ret
mov
shll
cmp
add
in
mov
sub
xor
mov
and
mov
push
push
rcrb
call
sub
mov
jg
fisubl
push
jg
cmp
roll
lea
xor
test
mov
mov
shll
test
pop
xor
and
popf
shrb
inc
pop
gs
test
out
sub
xchg
cmp
aam
cmp
lods
cltd
adc
ljmp
pop
repz
cld
lock
cmp
xor
outsb
loop
adc
cmp
and
pop
or
enter
push
test
or
mov
and
in
jns
and
adcb
inc
xor
sub
loopne
pop
push
addl
jae
jne
mov
scas
and
push
inc
ss
push
in
scas
test
aam
pop
xor
iret
or
in
aam
push
cmp
movsl
mov
push
pusha
pop
lret
shlb
cltd
cld
test
fbld
mov
call
dec
inc
jecxz
pop
fisttps
xchg
fldcw
sbb
cli
pop
cli
mov
mov
cli
es
push
mov
repz
xor
sub
jp
clc
and
nop
movsl
and
mov
pop
bound
js
test
xor
mov
jge
sbb
dec
jle
test
mov
or
shrd
ss
dec
shlb
jae
sub
dec
xor
cmc
in
and
or
js
lods
push
and
popf
cmp
mov
lds
jmp
fs
mov
push
outsb
loope
inc
jns
and
mov
iret
pop
xchg
pop
fsubrl
push
fldcw
dec
negl
call
mov
jge
cld
mov
inc
adc
mov
jmp
dec
xchg
push
add
addr16
loopne
mov
mov
xchg
int
xor
and
scas
lock
mov
imul
jl
into
xor
jns
sbb
push
sbb
mov
loop
pop
out
inc
xor
cmp
mov
clc
sbb
mov
and
sbbb
dec
pop
sar
aad
mov
dec
mov
cmp
or
xor
and
jb
rcrb
leave
aam
cmp
or
cmp
cmp
or
iret
andl
sub
pop
bound
inc
adc
mov
xor
inc
xchg
js
cmp
sbb
loope
insl
test
shrb
inc
fcoms
push
aam
xchg
inc
xchg
pushf
std
repnz
push
iret
and
adc
popa
jnp
lock
inc
mov
lcall
scas
cmpsl
popa
ja
in
shll
jne
mov
cld
je
out
jne
sub
test
inc
outsb
rol
insl
sarl
or
mov
inc
mov
mov
mull
mov
push
je
les
popf
rorb
mov
xor
adc
mov
jbe
shlb
call
xor
cwtl
stos
aad
ja
fsubr
xlat
jg
mov
movsb
push
insb
dec
jns
cmp
push
pop
mov
pop
push
dec
scas
lretw
ss
inc
add
in
into
imul
or
jp
cmp
mov
fmull
push
xlat
pop
and
shlb
add
cli
insb
push
mov
bound
outsb
lcall
dec
dec
pop
add
add
in
pop
fadd
fwait
das
insb
in
jno
mov
cwtl
imul
mov
jne
ljmp
scas
inc
into
jae
fidivs
pop
xor
les
add
pop
jge
fidivrs
shr
test
xchg
sbb
sub
mov
sub
mov
add
and
ds
jo
mov
sbb
loopne
dec
into
add
push
xor
scas
lea
push
adc
adc
inc
mov
sub
mov
imul
jbe
gs
mov
repz
aam
pop
dec
rorb
xorl
push
pusha
sub
cmp
mov
fcoms
inc
push
jle
sub
aaa
test
pop
call
enter
mov
xor
mov
sub
mov
add
push
stc
jmp
andl
out
lret
addr16
sub
sbbb
xor
or
andl
jge
nop
mov
jecxz
sub
movaps
pop
cmc
mov
jl
out
stos
push
clc
cmp
jae
mov
or
jle
outsl
mov
lea
jl
outsl
adc
mov
or
clc
mov
push
mov
push
les
cld
mov
xchg
mov
xchg
or
push
adc
iret
add
or
cs
scas
testb
outsb
cs
mov
dec
mov
dec
mov
mov
push
repnz
test
push
jl
jmp
xchg
stc
mov
adc
cmpsb
jb
outsl
dec
shlb
cmp
shrb
and
sbb
hlt
or
leave
mov
dec
pop
xchg
popa
sarb
lcall
adc
inc
adc
push
adcl
inc
xchg
fs
mov
push
jns
jae
dec
xchg
ret
pop
adc
pop
shrl
dec
add
arpl
test
push
jnp
push
std
or
pop
cmc
ja
and
stos
or
and
lods
and
fldl
call
arpl
ds
xchg
add
rorl
sti
jmp
std
mov
add
adc
adc
fdivs
xor
gs
lahf
ljmp
jo
pop
push
pop
sub
fucomip
xor
add
pop
mov
add
sub
es
and
adc
fucomp
xor
mov
mov
jp
decl
xchg
and
xor
and
cmp
fbstp
or
outsb
jb
jae
push
roll
jbe
push
aas
outsl
xor
jns
mov
loope
aam
fbld
sbb
xchg
mov
add
ss
mov
sbb
push
jg
pusha
xorb
out
sub
sbb
dec
clc
test
push
mov
sarb
and
lods
cmp
ss
xor
ja
and
test
mov
inc
int3
lret
and
mov
push
mov
pop
fimuls
cmpsl
shll
out
fidivl
jne
mov
xor
roll
movsb
iret
lret
jl
int
outsb
and
pop
cmp
jp
shlb
jbe
cmp
inc
xor
or
orb
lcall
push
lods
jns
insb
or
sub
xchg
bound
pop
sbb
iret
add
jmp
push
testl
push
sbb
shr
aas
xor
push
daa
les
sbbl
lods
xlat
bound
popf
les
out
test
fs
jo
test
dec
clc
and
mov
test
or
inc
cmc
xchg
mov
xchg
mov
faddl
test
sub
xchg
jne
sbb
xchg
mov
pop
and
mov
or
xor
push
addr16
mov
mov
sbb
dec
dec
es
sub
loopne
imul
push
aad
cltd
push
push
repnz
push
shrb
popa
out
iret
incb
adcl
xchg
out
lahf
adc
mov
mov
fidivrl
hlt
sbb
in
or
push
inc
xor
shl
sbb
sub
jno
adc
or
fldenv
adc
add
cmc
cmp
lods
out
rcrl
add
sub
push
inc
mov
nop
xor
icebp
cmpsl
inc
adc
lahf
jmp
add
sbbl
cmp
sbb
mov
out
jmp
cli
imulb
pushf
jo
dec
fsts
jno
out
jnp
pop
loope
pop
inc
push
lahf
and
push
imul
inc
rcr
dec
mov
les
aam
lea
cld
pop
push
out
ljmp
testb
add
out
outsb
shlb
pop
sub
dec
jbe
jmp
out
lret
fldlg2
clc
cmpsl
adc
mov
sub
outsl
shll
push
cmp
sub
sarl
push
fwait
loope
or
dec
addr16
cmp
sub
add
push
xchg
inc
inc
mov
mov
in
mov
in
jp
filds
sbb
and
je
sbbb
int
das
pop
inc
push
xor
xor
shl
jl
dec
cli
fcmovbe
insl
or
test
es
enter
nop
hlt
outsb
aam
out
loopne
call
or
cmovns
pop
cmp
hlt
inc
fcomi
pop
iret
adc
int3
adc
mov
bound
in
in
imul
test
add
cmpl
lods
or
int
lock
pop
sbb
dec
sub
inc
scas
adc
cld
sarb
stos
cmc
and
xor
mov
hlt
idivl
dec
lods
loopne
xor
mov
fidivs
pop
rorb
sti
and
in
mov
mov
fldenv
mov
mov
or
faddl
xchg
mov
mov
jnp
leave
adc
sub
popf
pop
insl
stos
in
add
inc
pop
mov
popf
sbb
pop
imul
lahf
data16
ficoms
test
js
insb
ds
bound
in
out
and
aad
mov
xchg
jo
sar
xor
loop
mov
mov
out
jl
cmpsb
xchg
sub
xchg
lock
cmp
sbb
add
rcrl
push
cs
pop
push
cmp
mov
xchg
sbb
dec
cmp
pop
dec
call
jnp
lock
shll
leave
push
dec
test
insl
scas
xchg
pop
insb
jo
lea
mov
mov
addb
stos
push
pop
pop
out
inc
adc
and
cmp
rcl
cmp
ljmp
in
xchg
icebp
or
mov
jmp
rcrb
addb
inc
cmpsb
stos
adc
imul
scas
mov
cs
filds
pop
arpl
cmp
mov
pop
mov
pop
and
dec
outsl
xchg
mov
jno
inc
addr16
inc
pop
insl
fisubl
or
popa
xchg
dec
inc
into
outsl
lret
cmpsl
push
or
mov
push
jle
push
fiaddl
and
cmp
enter
lods
clc
std
loope
and
push
fimull
add
rcrb
lea
fisubrs
add
rorl
inc
xlat
and
rcr
fucom
out
mov
jecxz
and
mov
cmpsb
pop
mov
adc
test
lds
or
and
dec
push
sbb
push
ja
mull
xlat
rcrb
dec
out
gs
or
hlt
xchg
cld
pop
mov
ljmp
popf
ss
inc
mov
pusha
sbb
mov
push
and
sbb
lock
mov
jge
movsl
into
add
sbb
xchg
je
mov
repz
add
cmovl
aam
test
mov
mov
mov
scas
cmpsl
xor
or
orl
and
scas
push
mov
add
test
jbe
imul
mov
dec
pop
jle
cmp
data16
out
movq
adc
pusha
sub
sbb
jl
push
dec
int
mov
scas
lcall
repnz
mov
mov
data16
xlat
lcall
jmp
rcrb
push
fcmovnb
outsb
cmp
ds
sub
das
pop
or
inc
push
test
cld
push
insl
xor
and
lock
add
sti
inc
push
sub
repnz
or
jno
les
push
sub
sarl
cmp
mov
in
mov
test
sbb
enter
aas
jbe
outsb
mov
cmp
lock
inc
jo
jnp
inc
adc
enter
das
lret
mov
xchg
sbb
pop
xor
sub
sti
jl
add
add
sbb
and
sub
lahf
insl
lea
mov
arpl
shll
sub
or
mov
nop
inc
xor
sub
xor
push
pop
push
add
add
and
pop
iret
mov
push
insb
outsb
sbb
push
incb
xchg
inc
xor
adc
bound
push
pop
lds
pop
xchg
sbbl
cwtl
mov
std
mov
xchg
fs
insb
sbb
or
sbb
xor
jno,pn
xor
sub
xchg
mov
into
sbb
test
jp
push
in
mov
jno
pusha
push
jb
mov
mov
stos
out
outsb
arpl
test
testb
xchg
sti
add
xchg
xor
rorl
addr16
adcl
mov
and
mov
cwtl
and
or
movsb
mov
push
xor
push
icebp
js
mov
jns
push
fildll
bound
cmp
pop
xchg
aad
mov
mov
out
in
mov
push
xchg
in
cmp
dec
push
xchg
cld
pop
enter
iret
std
mov
inc
mov
pop
in
cmp
mov
push
sub
pop
sbb
add
stos
or
xchg
sbbb
es
adc
mov
out
mov
mov
fcoms
pop
xor
call
xor
sahf
and
cs
jle
xor
ljmp
add
adc
into
xor
icebp
out
xor
aas
xor
cs
in
mov
mov
xor
cltd
cmc
loop
xlat
sbb
shl
orb
inc
cwtl
lret
es
adc
jp
mov
mov
fdivp
jmp
adc
pop
fwait
ret
or
jns
sub
or
xchg
or
pop
xchg
test
ret
ficoml
or
jle
sub
in
inc
and
imul
popa
sub
jb
dec
int3
cmpsb
push
shll
jnp
cld
jge
out
nop
mov
pop
bound
xlat
dec
lcall
pop
push
fisubrs
xor
push
idivl
ljmp
mov
and
add
nop
mov
orb
stc
daa
pushf
pushf
mov
enter
or
test
add
gs
popa
push
xchg
mov
jl
js
cmp
test
aad
dec
dec
adc
and
xor
cmpsb
sub
mov
test
add
or
cld
sbb
int3
jno
jo
mov
jae
mov
adc
xchg
pop
sub
cwtl
insl
lock
inc
ja
or
push
das
out
cmp
movsb
pop
inc
dec
movsb
lret
jp
decb
pop
ret
je
cmpb
ljmp
mov
popa
out
sub
ret
out
rcll
sub
inc
pop
xchg
mov
add
cwtl
or
lret
mov
mov
pop
rorl
data16
sub
ret
push
push
and
test
add
inc
cmp
xor
xor
lods
add
xchg
repz
fcomps
ret
dec
cltd
push
sbb
sub
lret
fs
mov
dec
xchg
xchg
lcall
pop
or
imul
shlb
into
mov
mov
mov
dec
out
repnz
xor
mov
fs
scas
jns
jne
add
add
scas
jg
add
notb
jmp
push
mov
cmp
daa
push
stos
sarb
mov
xchg
lock
daa
shrl
ficomps
cmp
add
out
xchg
or
rorb
lret
xchg
test
lcall
arpl
push
sbbl
mov
lock
xor
mov
add
xor
ds
xor
inc
cli
mov
iret
arpl
mov
into
sbb
loope
or
jb
call
sbb
cmpsb
xchg
pusha
ljmp
shll
inc
pop
push
call
mov
arpl
cmpl
mov
fisubrl
cmpsl
rcrb
fisttpl
shll
pop
test
xchg
jg
mov
mov
or
sub
add
xchg
mov
mov
xor
icebp
sbb
outsl
lahf
lcall
xchg
jge
sbb
push
neg
or
xchg
test
jbe
rcr
subl
out
arpl
imul
xor
cmp
imul
jmp
dec
clc
in
jge
nop
dec
js
pop
lea
out
add
mov
mov
sub
cmpb
pop
out
add
je
add
pop
mov
and
adc
fcmovnu
sahf
jmp
enter
pop
lock
addr16
lds
or
jno
jns
mov
cmp
cwtl
int
mov
insb
cmp
nop
dec
push
xchg
sbb
xlat
xor
jmp
movsb
loopne
fadd
sub
inc
add
out
jns
xor
out
dec
jno
dec
xchg
sbb
or
ja
push
cmpsb
rorb
mov
mov
mov
inc
test
pop
call
pop
xor
sub
rorb
xor
jo
inc
xor
push
leave
addb
sti
jl
sub
push
insb
push
cli
testb
lods
sbb
sub
stos
js
mov
out
addr16
out
add
jbe
cmp
or
rorl
inc
lcall
rcrl
aaa
xchg
clc
test
or
int
mov
xchg
mov
call
ljmp
icebp
adc
jge
das
and
xor
aad
mov
iret
int
jle
xor
rorb
into
mov
inc
shlb
inc
sbb
inc
cmp
mov
aaa
or
je
ret
xor
in
and
ds
or
daa
aam
adc
ja
iret
pusha
cmpsl
fs
loopne
fidivrs
ljmp
add
in
mov
and
pop
lods
inc
mov
xchg
loopne
pop
inc
mov
adcl
aas
lds
bound
xchg
adc
add
jmp
jle
sti
shlb
sub
loopne
mov
mov
or
pop
add
mov
call
aam
ss
out
jne
sbbb
push
rclb
cs
adc
inc
enter
inc
insl
ret
stos
rcrb
mov
dec
sbb
mov
movsl
sahf
mov
mov
xor
inc
jl
mov
loopne
jecxz
inc
shll
dec
mov
mov
fildl
mov
and
imul
jp
push
and
dec
fidivrl
inc
cmp
sbbl
mov
lret
add
xor
test
sub
ret
sub
dec
pop
cmp
xor
mov
shll
in
aaa
fwait
repz
jo
or
in
mov
xchg
adcl
sti
aas
pop
adc
lods
and
imul
popa
xchg
das
iret
dec
mov
rclb
push
in
sub
mov
add
xchg
push
ds
stos
or
lret
xor
cli
test
mov
sub
adc
shll
outsb
scas
movsb
enter
sub
adc
xchg
jg
into
arpl
xor
in
loope
push
ljmp
pusha
aad
nop
inc
fists
imul
jle
jle
decb
int
sti
jbe
cmp
daa
inc
and
push
cmp
add
jne
mov
test
jmp
pop
cltd
jb
push
stc
add
push
dec
xor
ret
test
and
inc
aad
inc
fmuls
je
addr16
test
sbbl
fisttpll
aaa
pop
xchg
shll
ret
lea
lea
adc
clc
icebp
es
out
and
mov
cs
cmc
mov
sarb
pop
and
xchg
rolb
pop
cmp
cmp
push
xchg
jge
idiv
frstor
inc
lods
repz
jne
push
stos
push
jo
and
cs
mov
mov
addl
call
mov
mov
xchg
es
jo
sbb
jnp
das
adc
xorb
push
outsb
pop
leave
outsb
cmpsb
cmp
sbb
jg
pusha
adc
fs
jle
jns
mov
arpl
xchg
pushf
mov
cltd
leave
mov
mov
pop
pop
rorb
cmp
lock
jnp
mov
stc
out
sub
fwait
add
lcall
adc
dec
std
sub
subb
and
outsl
sbb
aam
in
fsts
repz
test
rcr
pop
dec
xor
cld
fs
addl
add
adc
mov
jge
or
jbe
aas
adcb
aas
cltd
lea
push
daa
into
or
cmp
loope
mulb
pushf
xor
out
pushf
lahf
push
cmpsl
xlat
loope
repz
sub
adc
and
xchg
out
testb
adc
sti
mov
push
dec
rcrb
setl
out
mov
push
sub
xor
stc
addl
jne
and
mov
dec
mov
jns
cltd
mov
aad
lahf
mov
lret
push
xchg
testb
mov
fs
sub
xchg
lods
or
shll
fs
out
loop
mov
jo
sbb
and
cmp
cmp
push
stos
jg
movsb
mov
sub
ftst
fst
movsl
jo
jnp
jno
or
nop
and
pop
aas
mov
das
and
cs
push
or
cmpsb
inc
cmpsb
cmp
aad
sbb
sub
dec
xchg
cs
pop
mov
cmc
add
lahf
mov
jne
xor
shrl
add
mov
int
in
mov
xchg
jp
mov
outsl
cs
test
and
pop
je
lret
add
add
stos
pop
pop
inc
push
test
lods
pop
and
xchg
leave
sti
dec
sub
mov
inc
mov
js
jge
pop
aas
jno
adcb
xor
inc
jne
lods
jbe
addl
lods
cmp
push
dec
jnp
adc
addr16
icebp
jg
xlat
icebp
cmp
add
pop
add
pusha
in
sub
lods
imul
or
icebp
int
mov
adc
xor
dec
push
iret
push
outsl
fwait
hlt
add
xor
fcompl
xchg
and
sbb
adc
or
dec
mov
mov
testl
insl
aaa
popf
push
sti
pop
mov
out
inc
rcrb
adc
sahf
adcl
fbstp
cmp
loop
into
out
fsubrl
popf
imul
mov
cmp
xchg
outsb
popf
mov
iret
mov
sub
addr16
adc
out
push
loopne
mov
and
xchg
orb
jb
mov
scas
jle
mov
mov
ret
xor
mov
ja
xchg
sbb
dec
aas
add
dec
dec
enter
mov
and
cmp
mov
int3
mov
jmp
mov
mov
in
pop
cmpb
mov
pusha
ja
ja
cs
pop
stos
cwtl
outsl
jns
je
shr
into
xor
sbb
inc
test
scas
outsl
pop
addl
sahf
mov
fcomps
inc
xchg
xor
stos
arpl
hlt
cmc
fsubrs
insb
jo
or
jo
sub
scas
fs
push
testl
aad
adc
dec
loop
xchg
dec
repnz
and
mov
movsl
xor
adc
xlat
ret
fdivrl
and
cmp
mov
insb
sub
int3
add
and
push
pushf
mov
out
smsw
insl
das
sub
imul
stos
je
mov
mov
pop
adc
ret
sub
movsl
es
dec
push
mov
aaa
mov
jecxz
and
push
shl
dec
loope
cmp
push
sbbl
push
sub
inc
fstpt
repnz
fsubrl
adc
cld
jb
pushf
dec
xchg
cld
adc
loop
dec
lods
adc
imul
sar
push
clc
lcall
ds
mov
cmp
lret
adc
testl
sbb
icebp
sub
mov
enter
mov
add
shr
daa
out
add
xor
test
repz
push
add
cmpb
lcall
fildl
or
xchg
stos
sub
and
sbb
mov
pop
mov
fdivrs
adc
inc
int3
inc
cmp
cmc
test
out
dec
jne
enter
jmp
arpl
mov
cmc
addb
dec
sarl
outsb
lret
mov
rorb
shll
js
fwait
push
lcall
clc
pop
and
cmpsb
mov
ljmp
sub
sti
jmp
inc
icebp
jle
push
push
imul
shll
xchg
jns
pop
and
push
adc
mov
dec
cs
fld
pusha
jns
jmp
adc
push
inc
cmp
cwtd
cs
jae
inc
fstpt
nop
aad
cmp
std
les
std
push
push
xor
mov
mov
sub
pop
scas
mov
dec
and
dec
rcrb
dec
mov
repnz
push
shll
lahf
sbb
pop
jecxz
in
fldt
in
mov
cmc
scas
jbe
sbb
outsl
adc
mov
lret
or
adc
ret
push
mov
test
es
jmp
data16
push
sbb
in
jp
and
fcmovne
in
sub
pop
lret
outsb
cmp
add
mov
ja
dec
imul
fimuls
movaps
xchg
mov
xor
shlb
arpl
xlat
or
into
int3
jno
xlat
das
fisubl
jg
fsubl
aaa
fdivrl
and
pop
mov
scas
movsb
add
cmc
fwait
daa
aad
clc
adc
fbstp
loopne
pop
pop
cmp
scas
push
rorb
cmpsb
repnz
sbb
mov
pusha
lock
mov
mov
push
ret
jge,pn
dec
roll
sarl
mov
xchg
pop
fldl
data16
vcvtps2pd
xor
int3
xchg
in
add
mov
pop
mov
outsb
std
fistpll
adc
jecxz
cmp
popf
xchg
aam
sti
jo
sbb
and
jno
sti
cmc
out
jmp
stc
test
and
test
add
jg
fimull
pusha
xchg
in
cwtl
outsb
add
mov
xor
loop
jo
cwtl
add
rorl
pop
loop
or
pop
aas
and
add
inc
outsl
orl
repz
mov
aam
add
mov
xlat
mov
enter
xchg
loop
pop
addr16
bound
fildll
xchg
push
mov
std
test
shl
ss
mov
scas
pop
stos
sbb
lahf
cmp
aad
call
cmp
icebp
inc
dec
mov
data16
pop
lock
mov
cvtdq2ps
stos
pop
cmpsb
das
out
xor
shrl
imul
adc
sahf
loopw
out
adc
arpl
mov
icebp
mov
vmptrst
lods
dec
cmp
ss
out
mov
pop
cli
sbb
cli
mov
lret
jp
gs
fucomp
int
leave
xchg
pop
cltd
out
mov
adc
fcomp
lock
and
jecxz
dec
push
add
xchg
sub
xchg
push
pusha
addb
xor
and
ret
xchg
int3
lahf
lahf
jp
xchg
cltd
pmaxub
movsl
xor
xor
test
xchg
mov
imul
sub
out
out
jb
mov
mov
stos
movntps
icebp
int3
dec
push
pusha
test
int3
push
pusha
inc
lahf
adc
push
xchg
pop
push
push
adcb
or
lret
jae
mov
rolb
lcall
mov
loop
int3
es
in
mov
insb
cmp
sbb
mov
lret
xor
clc
sysexit
in
jle
jae
popf
dec
movsl
test
push
aam
inc
incb
shll
mov
call
insb
ljmp
pop
cmpsb
pop
push
or
xchg
mov
adc
sub
push
fmull
sub
insb
push
cli
fcomps
xchg
push
sar
push
jb
add
out
into
nop
cmc
out
or
sbb
xor
push
sub
ss
inc
push
call
dec
cmc
adc
jle
push
or
fbld
push
stos
iret
pop
add
bound
inc
or
and
cs
scas
mov
adc
mov
xor
adc
pop
mov
ret
leave
outsl
and
addr16
stos
xchg
pop
dec
jae
int
xor
jns
adc
lahf
jl
fistpl
mov
gs
sbb
push
out
rcll
mov
pop
fwait
lret
jmp
mov
dec
mov
inc
adc
cmpsl
cmp
imul
mov
in
cmp
mov
push
pop
pop
cmp
out
ljmp
ret
outsb
daa
in
xor
lds
xchg
mov
xlat
popa
push
mov
js
int
mov
lds
mov
mov
pusha
mov
leave
push
mov
or
fsubs
sahf
inc
jns
clc
jnp
xchg
leave
pop
inc
adc
lods
std
jmp
add
out
js
xor
mov
in
mov
lahf
arpl
xchg
xor
fs
dec
xlat
jo
xchg
or
mov
push
mov
stos
and
aaa
enter
jbe
xchg
sub
mov
push
sub
lret
fdivrp
mov
cwtl
push
push
mov
data16
cmp
pop
jns
stos
notb
loopne
mov
pop
arpl
sahf
fidivs
das
jb
pop
mov
xor
sbb
push
sarb
mov
imul
ret
in
lds
call
mov
push
jl
neg
enter
add
push
xor
cltd
mov
mov
cmp
and
in
fcmovb
xchg
jnp
aad
scas
into
repnz
adc
mov
jge
test
cmpsl
inc
iret
mov
sub
lds
sbb
and
adc
pop
xor
jg
add
out
and
pop
fs
int3
pop
popf
in
cwtl
mov
add
out
pop
mov
mov
mov
jo
sbb
lret
mov
cs
sub
mov
rcrl
mov
lahf
inc
jns
adc
push
es
test
pop
pusha
inc
subl
mov
add
jg
fs
inc
xchg
jecxz
pop
call
jae
inc
dec
clc
fwait
push
test
insb
lret
push
xor
int3
fcoms
imul
fwait
dec
push
inc
scas
scas
sbb
sbb
mov
call
dec
out
xorl
push
sub
sti
stos
aaa
xor
push
aam
jmp
or
cmp
andl
cmpsb
jo
sbb
jge
pop
lods
adc
push
lods
jmp
test
cmpsb
sbb
sub
pushf
sahf
aad
or
pusha
pop
sub
enter
xchg
pop
cmp
pop
cwtl
ja
xchg
icebp
addr16
add
adc
pop
dec
fxam
sbb
jo
dec
mov
pop
shl
imul
jl
adc
or
cmp
mov
call
inc
rcll
aaa
lret
xchg
test
jns
mov
test
or
rolb
testb
hlt
push
add
xor
imul
dec
rcl
stc
sbb
lods
scas
in
shl
mov
stos
cmc
insb
inc
adc
popf
or
jno
lea
xor
jo
scas
xor
in
mov
inc
shlb
pmovmskb
inc
roll
pop
mov
jmp
outsb
jp
pop
arpl
mov
ja
les
test
or
or
add
sbb
mov
aam
leave
imul
mov
dec
popl
mov
push
pop
bound
cmp
or
inc
es
adc
and
inc
xchg
lods
lea
cmp
jno
jecxz
push
sti
add
cld
loope
ret
jne
cmp
xor
nop
adc
xor
arpl
aaa
inc
adc
aaa
inc
fldt
nop
je
sbb
int
cmc
add
xor
xor
test
lods
fs
mov
pop
dec
push
outsb
dec
or
push
lea
sbb
scas
push
outsb
pop
sbb
push
fstl
pop
andl
shrb
cmp
fsubs
ror
lahf
sti
sbb
xor
mov
rcl
imul
enter
xorb
std
scas
pop
rorl
mov
cmp
xchg
ficoms
scas
out
ficompl
jnp
and
xchg
dec
adc
sbb
xor
in
jp
inc
sbb
cmp
lret
cld
addr16
mov
fistpll
push
mov
push
rclb
adc
push
dec
mov
movsb
adc
push
xchg
push
ds
incb
mov
and
shlb
pusha
lcall
std
cmp
lahf
sqrtps
xlat
mov
mov
mov
cmp
lcall
mov
adc
pop
pop
arpl
mov
mov
adc
xor
sub
pop
mov
or
adc
daa
jae
and
lods
fsubs
push
push
outsb
cmp
cmp
movsb
mov
aaa
fnsave
jnp
xchg
xorl
mov
or
cmp
push
test
popf
pop
ljmp
cld
ds
lcall
push
sbb
subl
sbb
dec
inc
out
vpunpckldq
lock
ss
cmp
or
push
mov
fmul
xchg
jns
cmpsl
in
cmpsb
aad
repz
shlb
jg
pop
push
lret
ret
sahf
fimuls
push
adc
xchg
and
or
out
loop
and
mov
jno
push
test
je
jae
mov
mov
jne
movsb
pop
clc
mov
popf
pop
cltd
es
fiadds
mov
cmc
sbb
inc
jge
movsb
mov
xor
sub
addr16
cmp
daa
adc
cs
cltd
sbb
sbb
js
or
mov
push
push
push
cmp
mov
mov
aam
loopne
push
repz
es
insl
adc
and
filds
mov
arpl
sbb
es
ret
push
data16
and
sarl
or
mov
ljmp
cmc
mov
or
and
sub
and
gs
push
push
and
ss
mov
aas
add
int3
jne
mov
clc
mov
iret
aas
xor
testl
shl
test
negl
int
lahf
xor
aad
lds
sub
mov
jle
insl
jae
repnz
dec
gs
scas
inc
xor
in
jno
ds
sbb
mov
pushf
aaa
in
mov
out
dec
or
mov
pop
inc
push
mov
imul
mov
outsl
outsb
lahf
cli
ss
cmc
sarl
xor
jnp
lock
xor
hlt
fs
cmc
loopne
xchg
test
pop
pop
pop
mov
in
dec
arpl
aas
data16
aas
xchg
mov
mov
push
arpl
jge
arpl
int
rcll
je
dec
add
loopne
mov
cli
jb
cs
dec
mov
das
pop
test
ret
xorl
push
pop
jmp
mov
sub
push
dec
push
aas
out
stos
sbb
mov
cmpsl
nop
pop
notl
sbb
inc
lds
sbb
mov
push
mov
loop
xor
lods
cmp
test
nop
or
push
mov
dec
push
arpl
push
mov
aad
mov
add
mov
push
mov
test
mov
pushf
push
stos
mov
in
cmpsb
jg
mov
or
inc
shll
xchg
push
pop
fisubl
subb
or
cmp
adc
sbb
cmp
outsl
inc
inc
pop
stc
mov
and
mov
adc
sbb
inc
das
mov
pop
test
jg
scas
pop
jns
call
sub
rorl
hlt
ja
xchg
outsl
mov
arpl
sub
jbe
std
lds
vmulpd
divl
jae,pt
fsts
je
aas
call
sbb
ja
jo
lcall
mov
out
mov
lahf
fidivs
dec
adc
and
mov
and
inc
sub
jae
movsl
sbb
mov
mov
je
cmpsl
or
jecxz
fdivrl
mov
pop
push
push
aam
loope
jecxz
lahf
lea
mov
mov
imul
arpl
lods
jmp
push
dec
insb
mov
pop
fdivs
cmp
hlt
popa
out
fistpl
push
shlb
cltd
pushf
subb
das
ljmp
lahf
mov
or
jl
mov
int
shll
out
push
add
adc
jns
insl
lcall
shrl
inc
cmp
imul
add
inc
fcompl
dec
mov
mov
lahf
std
jge
xor
jge
leave
cmp
call
xchg
cs
inc
ret
rcr
adc
lcall
lea
mov
sub
daa
movsl
mov
inc
decl
enter
shrb
push
push
cmp
jge
cwtl
inc
and
or
adc
jle
pop
jmp
xchg
jbe
lea
sarl
xor
sbb
push
repz
clc
sub
mov
xor
inc
jecxz
cmp
and
xor
ljmp
pop
xor
std
out
inc
out
fwait
xor
pop
lock
add
lret
push
jbe
jo
idiv
sti
popa
add
xor
movsb
dec
hlt
dec
or
shll
adc
test
and
dec
into
lock
icebp
aad
outsl
leave
mov
push
fmull
and
add
pop
mov
xchg
jp
mov
xor
sti
aam
jle
es
pop
aam
pushf
test
cltd
addl
mov
xor
outsl
xor
stos
mov
out
or
pop
jae
dec
mov
jb
stos
dec
pop
and
insb
fcmovnu
icebp
loop
addr16
jge
cmp
lahf
and
repnz
orb
ljmp
outsl
sarb
lock
sub
sub
jnp
cwtl
jns
push
or
inc
sbb
mov
mov
fs
xchg
pop
adc
cld
es
push
daa
es
xchg
jne
loopne
xchg
imul
std
mov
pop
pop
sbb
adc
dec
and
in
sub
dec
fwait
xor
outsl
ror
aam
bound
addr16
pushf
fs
test
cmp
pop
xchg
pop
cmc
aas
mov
ja
and
jne
mov
notb
fst
test
xchg
pop
mov
sub
pushf
adc
jp
xchg
stc
mov
ficoms
sub
scas
cmp
pop
test
adc
jns
dec
lock
adc
lret
fwait
adc
out
cmp
adc
push
test
sbb
lock
pushf
test
add
in
or
imul
push
mov
repz
adcl
dec
js
xor
inc
out
mov
add
pop
jne
icebp
pop
dec
cmpsb
mov
loop
mov
xchg
fs
xchg
xchg
cmp
sbb
cmp
mov
adc
sbb
daa
ret
adc
aam
add
lss
and
mov
pusha
mov
push
jmp
mov
dec
adc
xor
cmp
pop
popf
push
adc
adcb
jnp
adc
jl
leave
and
std
les
cmp
push
or
pop
lret
xchg
xchg
jne
pop
sbb
rcll
and
popl
aad
xchg
and
pop
fs
insl
add
outsl
cs
sub
or
imul
adc
mov
pop
cli
shr
aam
nop
adc
cmp
mov
dec
xchg
sbb
sub
cmp
xchg
int3
jns
adc
add
mov
in
mov
int
push
cmp
pop
stc
adc
add
cli
or
pop
inc
test
daa
imul
or
jl
sbb
jp
out
cli
fistpll
cmp
dec
and
popa
adc
xchg
out
repnz
es
mov
into
aaa
and
lock
js
js
cmp
and
fs
addl
mov
mov
pop
and
and
outsb
mov
movsb
call
push
cmp
fidivs
push
nop
rorl
pop
push
or
icebp
mov
es
cs
push
jb
cmpsl
out
hlt
push
push
dec
fsubl
pop
cmp
mov
adc
jmp
jmp
in
pop
das
adc
popf
jle
inc
xor
fiaddl
inc
or
rcll
js
fldt
push
push
mov
xchg
fndisi(8087
lods
test
or
rcll
pop
add
cmpsb
or
inc
dec
inc
fidivs
ja
cld
fwait
ds
and
sahf
rorb
and
mov
cmpsb
call
outsl
xchg
lahf
fmulp
jp
adc
sub
jo
shll
sub
and
xchg
dec
rorb
cltd
xchg
inc
rcll
iret
jge
cmpb
mov
mov
rorl
xor
dec
dec
test
jge
or
mov
push
cmp
mov
adc
outsb
mov
lret
add
xor
fbld
push
jo
push
jo
daa
mov
es
ficompl
sub
or
push
push
mov
jno
adc
jno
enter
fdivrl
ja
mov
xchg
loope
loope
pop
mov
pop
scas
insl
fildll
push
ss
mov
bound
mov
ret
push
inc
dec
sbb
push
mov
in
cmc
shll
int3
inc
inc
ljmp
scas
sub
call
pop
adc
iret
cmpsl
popa
repnz
xchg
cmp
pop
insl
cmpsb
sub
pop
inc
jne
rorb
ret
pop
push
sbb
mov
mov
shll
das
fnstsw
dec
lret
std
ret
imul
mov
addl
mov
movsl
mov
imulb
mov
sub
dec
cmc
stos
add
cwtl
mov
push
in
push
mov
test
sbb
or
aad
fadd
test
cli
int
mov
sbb
in
lock
xchg
mov
lock
ret
or
mov
or
aad
sarb
add
fmulp
mov
jl
pop
inc
or
push
js
inc
cmpsb
push
add
sti
mov
cmp
pop
lods
xor
addr16
pop
xchg
enter
lcall
sub
aaa
cs
pop
push
and
imull
inc
enter
jb
pop
dec
adc
outsb
lcall
shll
pop
pop
das
push
cmp
in
mov
shrb
mov
sarl
or
pop
xchg
or
adc
hlt
enter
enter
lcall
scas
imul
lods
sbb
xlat
mov
ja
xor
xor
fs
mov
and
insl
les
inc
xor
xchg
dec
std
jmp
jbe
nop
and
jns
push
sbb
imul
into
xchg
movsl
cmpsb
imul
loopne
push
sub
sub
and
sahf
gs
xchg
pop
ja
fwait
mov
xchg
or
call
or
gs
sbb
data16
push
rcr
sbbb
dec
push
mov
lret
icebp
orl
imul
ret
leave
sub
xlat
push
jnp
push
shl
cmp
loope
aam
insl
jg
xor
or
mov
and
sub
lret
insl
fs
adc
clc
xchg
jne
into
data16
call
xor
mov
cwtl
daa
add
inc
dec
and
jae
fldenv
mov
cmc
addr16
popa
inc
ficompl
popf
rorb
sub
mov
xchg
sbb
out
std
sbb
mov
sbb
mov
dec
movsl
xor
ret
scas
leave
pop
subb
je
mov
fsubp
lds
insl
sarl
enter
adc
cld
mov
rcl
dec
movsb
pusha
sbb
es
test
and
in
es
sub
clc
aad
outsl
inc
sbb
jge
fisttpl
leave
push
mov
data16
dec
cs
ret
movsb
insb
add
mov
jo
push
cmpsb
cmc
push
sti
mov
mov
pop
or
mov
sbb
lea
xchg
mov
mov
in
shl
mov
push
loopne
icebp
mov
in
daa
or
mov
mov
push
sub
xchg
in
jo
daa
xchg
mov
adc
push
and
repz
pop
add
mov
out
sbb
ror
cmp
xchg
mov
arpl
fs
mov
insl
mov
pop
jne
inc
pushf
fmull
incb
sbbb
xchg
cmpsb
push
push
or
hlt
mov
or
imul
push
cmp
data16
sbb
aam
outsl
pop
adc
leave
test
xchg
fwait
inc
lock
push
daa
jnp
add
xor
and
les
mov
icebp
aad
xchg
cmp
cld
xchg
xor
gs
negl
icebp
jne
mov
lcall
test
scas
mov
les
pop
outsb
insb
dec
push
aas
jge
or
movsb
mov
pop
test
mov
cmp
mov
add
ror
or
pop
mov
loop
mov
mov
loop
lock
cmp
add
mov
xchg
stos
shlb
xor
dec
xlat
pop
fisubrs
sahf
lock
pop
lcall
and
sbb
mov
pushf
mov
ja
mov
lret
in
cmp
jno
into
mov
and
iret
lods
lea
sti
addr16
and
inc
jns
or
jmp
xorb
sbb
frstor
subb
sbb
cmpsl
lods
daa
fidivs
in
orl
in
and
ret
scas
jle
dec
push
cmp
pop
cmpsb
outsl
lds
les
enter
mov
mov
into
out
subb
int3
in
cltd
sbb
push
xor
fnsave
sub
pop
xchg
or
and
pusha
push
push
push
aam
adc
lret
push
or
loope
dec
testl
dec
jb
xlat
xchg
lods
into
stc
xlat
xchg
inc
pushf
cld
cmp
bound
mov
repz
cli
test
dec
je
push
xchg
push
push
pop
outsb
xchg
xchg
int3
inc
cmp
test
test
aaa
sbb
pop
mov
mov
test
loop
inc
push
lods
movsl
fdivl
ret
xor
data16
push
jg
push
lods
add
and
dec
addb
into
mov
cs
imul
or
into
mov
cmp
in
js
sub
and
jmp
aas
sub
lea
fidivl
cmp
cmp
inc
outsb
mov
leave
jle
mov
les
pop
inc
push
push
in
pop
insb
rolb
pop
nop
scas
inc
pop
or
insb
xor
popa
xchg
sbb
loop
cmpb
jmp
mov
fs
fmulp
adc
mov
test
lret
pop
fld
movsl
sub
pop
dec
out
divb
mov
pushf
or
mov
mov
inc
cmp
jl
inc
imul
dec
pop
sbb
and
int
mov
push
mov
idivl
fmuls
enter
xchg
push
ljmp
lahf
inc
ret
adc
pop
lret
and
scas
fxch
push
adc
mov
jno
std
sub
inc
lret
je
mov
lea
decb
repnz
fmull
lcall
or
and
xor
leave
push
rolb
xor
lds
cmp
fistps
sbb
mov
movsb
sbbl
add
mov
push
in
lods
es
aad
stos
cwtl
not
stc
cli
push
add
scas
pop
xchg
shll
clc
pop
int3
inc
sahf
pusha
cmp
sbb
or
in
fxch
jno
jae
shlb
inc
sub
add
pop
xchg
dec
sahf
lret
or
lahf
cld
pop
insb
in
cld
enter
xchg
fs
jae
add
scas
push
xor
pop
dec
dec
xchg
int3
lcall
push
push
scas
icebp
jne
adc
cmc
push
and
and
imul
dec
ja
sub
sbb
ret
push
and
popf
stc
gs
cmp
scas
in
ss
mov
nop
mov
loopne
lahf
js
mov
adc
or
inc
popa
mov
pop
jp
or
dec
call
data16
leave
mov
jle
call
mov
push
pop
scas
cs
rcrb
daa
cs
fldenv
dec
imul
loopne
mov
loope
mov
gs
popa
shr
fcompl
dec
adc
xchg
sahf
pop
mov
sub
and
and
or
sti
push
in
or
fstpl
cmp
pop
aad
fadd
fildll
xor
test
mov
mov
jmp
dec
hlt
pop
jecxz
cmp
mov
mov
and
lret
push
sbb
int3
xlat
test
and
sarl
add
sub
enter
jge
push
fwait
in
sahf
and
pop
and
lock
push
idiv
sub
cmp
sbb
and
adc
ret
push
sub
push
enter
pop
mov
bound
xor
sub
fwait
add
addl
cmp
and
dec
mov
jb
daa
jl
jecxz
pop
pop
mov
bound
mov
daa
scas
fcompp
popa
pop
mov
addr16
aad
adc
sahf
fs
scas
or
sub
fstps
insl
xor
sub
sbb
pop
and
push
or
and
ja
sub
sub
mov
dec
adc
iret
adc
call
jnp
js
pop
pop
scas
mul
inc
push
push
and
mov
xchg
sbb
test
xchg
cwtl
jae
mov
push
insl
sub
outsb
mov
xor
je
push
push
mov
xchg
push
dec
ror
js
loope
ljmp
jbe
data16
lods
cld
xchg
mov
xlat
les
aam
ret
jp,pt
fistpl
fists
xchg
out
sub
in
insb
sbb
movsl
repz
push
fcmove
adc
mov
adc
add
jns
movsb
lods
test
les
in
fwait
push
loope
fdivrl
inc
sets
xor
sti
jb
inc
dec
xor
fistpll
mov
pushl
mov
sbb
dec
insl
mov
movsl
pop
stos
cmc
cmp
mov
mov
adc
cmp
push
aam
pop
mov
js
mov
arpl
das
andb
and
pop
jecxz
lret
mov
mov
ficomps
adc
inc
and
pop
push
jmp
dec
push
lahf
pusha
dec
je
or
dec
stc
mov
stc
ds
push
stc
mov
fs
fildll
xchg
mov
enter
repz
mov
mov
outsb
je
clc
scas
pusha
cmp
and
xchg
aaa
popf
jl
gs
mov
inc
outsb
xchg
mov
xchg
pop
pushf
ljmp
xor
and
mov
data16
adc
adc
add
xchg
xchg
sbb
cmp
gs
inc
jo
jno
dec
adc
dec
mov
jno
lahf
push
out
jbe
stos
ds
leave
lods
pop
mov
addl
cmp
rorb
sub
cmpsl
mov
in
cmp
sub
in
push
push
xchg
push
shrl
jne
mov
push
sbb
daa
in
loop
inc
sbb
lock
enter
mov
inc
jge
inc
pusha
mov
xlat
cmp
call
inc
fsubrl
orl
lea
in
test
jae
xchg
iret
adc
jb
add
jg
in
cmp
cmp
add
dec
adc
mov
scas
lcall
rol
and
popf
test
imul
ljmp
stos
push
adc
xlat
mov
cmp
sti
imul
mov
mov
pop
or
xchg
pop
or
inc
out
fnstenv
insl
sub
mov
mov
sarl
lret
outsb
pop
rcrb
mov
lock
ljmp
imul
xor
lahf
mov
adc
jmp
ss
adc
push
test
add
lahf
xchg
loop
call
push
sbb
and
xchg
xchg
xchg
dec
test
mov
movsl
dec
adc
dec
cmp
sub
dec
pop
jo
inc
push
mov
push
scas
mov
jno
mov
sti
rorb
mov
pushl
adc
daa
mov
mov
rolb
addr16
cld
insb
in
or
mov
mov
dec
mov
pushfw
aam
imul
fiadds
mov
mov
cmp
and
cmp
mov
adc
inc
in
clc
mov
jb
sub
nop
jl
mov
lods
pop
and
mov
xor
jge
loop
sti
fidivrs
push
sti
dec
stos
jnp
xorb
daa
sub
lds
shl
loop
xchg
loop
and
insl
mov
pop
int
out
aaa
popf
jns
cmpsb
mov
insl
sbb
filds
into
nop
hlt
lcall
std
mov
push
mov
cltd
out
mov
or
push
xchg
test
mov
ljmp
scas
fisttpl
testl
cmp
pop
push
mov
dec
sbb
fcmovu
cltd
mov
test
xchg
adc
movsl
and
or
mov
cwtl
pop
rcl
push
dec
leave
insb
add
fidivl
cmpsb
gs
movsl
pop
stos
repz
gs
lret
ss
xor
xor
cmpsl
outsl
test
dec
jg
xor
jb
fdecstp
xchg
movsl
jmp
das
pushl
cld
std
imul
or
push
mov
jecxz
int3
mov
xchg
ljmp
or
push
xchg
sbb
lods
mov
dec
dec
call
cs
cld
and
out
insb
push
fwait
shlb
pop
js
addb
cs
movsl
cmpsl
adc
pop
jns
xchg
std
data16
inc
sub
mov
shll
xchg
pop
push
and
mov
outsl
sbb
das
jns
push
addr16
sbb
sbb
adc
xchg
mov
add
lret
lds
xchg
loopne
cmpsl
mov
pop
or
pop
stc
mov
push
pushf
aas
adc
pop
inc
imul
mov
hlt
es
mov
clc
ret
sahf
hlt
popf
fwait
xlat
test
dec
sarl
in
xchg
shrl
aad
xchg
xor
rcl
add
sbb
sbb
cli
jl
adc
out
push
or
jne
mov
push
clc
adc
pop
hlt
adc
mov
jbe
lea
xor
roll
adc
dec
jo
mov
push
sub
les
mov
iret
and
cmp
data16
mov
mov
sub
out
or
pop
ret
frstor
mov
or
sahf
mov
rcrb
add
pushf
mov
mov
stc
sbb
in
popf
xor
pop
fnstsw
pusha
or
dec
jo
bnd
cmp
jge
xchg
sbb
dec
dec
mov
popf
ds
and
dec
std
xor
sarb
mov
arpl
mov
push
xchg
dec
pop
pop
or
or
sub
xor
pop
mov
inc
add
and
mov
jae
adc
push
mov
and
jle
repz
xchg
xchg
pop
inc
xchg
jae
xor
popf
ljmp
mov
push
cmp
rcl
mov
ljmp
xchg
cmp
out
jae
cmp
add
sti
sarb
in
mov
jnp
dec
stos
popf
jg
mov
inc
push
mov
out
jge
mov
out
stc
es
xchg
xor
xchg
enter
clc
cmp
daa
pop
cli
mull
xchg
sub
icebp
lods
das
mov
dec
cmp
pop
mov
call
test
sbbl
cwtl
stc
or
adc
out
imul
adc
enter
push
ja
adcb
lds
pusha
aas
lcall
repz
aas
mov
mov
push
mov
xchg
nop
imul
inc
push
add
cmpsb
call
add
popa
sub
cmpsl
sbb
pop
sub
mov
les
icebp
sti
sub
mov
leave
clc
or
inc
add
lea
clc
call
sar
or
lds
mov
leave
fidivrs
out
cmpl
sbb
push
aad
sahf
js
xor
sub
inc
jge
and
cmp
mov
std
push
sub
fucompp
push
jnp
jo
fmuls
out
sub
adc
insb
insb
test
ror
rcl
adc
add
call
fwait
adc
adc
rorb
adc
out
jge
xchg
pop
fsubrl
fwait
pop
mov
out
out
mov
xor
cld
adc
es
mov
data16
fnstcw
or
mov
hlt
mov
mov
or
mov
dec
pop
adc
xchg
pop
repz
in
pop
or
dec
adc
jno
rorb
cmp
and
in
scas
sub
test
push
sbb
fbld
push
dec
push
outsl
mov
sbb
dec
add
jbe
mov
in
mov
pop
jp
cmp
inc
andb
popa
mov
lcall
xchg
jo
add
je
xchg
pushf
sbb
gs
or
test
ljmp
call
adc
jl,pn
sub
xor
daa
mov
adc
mov
pop
sub
mov
sbb
cmpsb
jb
cli
mov
out
shrb
fwait
cmpb
popf
stos
mov
shl
adc
incl
lea
adc
sarl
xchg
pop
jo
push
bnd
or
push
jg
aas
push
push
aad
or
jnp
and
dec
add
pop
xchg
loopne
fildl
repnz
ret
push
jb
xchg
cmc
loope
fisubrl
mov
pop
xor
jno
jg
xchg
add
fists
stc
loopne
gs
cltd
pop
mov
bound
mov
sti
mov
dec
outsl
sahf
cs
and
xchg
pusha
loop
sbb
fsubrl
fldl
xchg
imul
fstpl
je
lea
mov
mov
loop
int3
push
rolb
outsl
arpl
loope
dec
lret
adc
mov
pop
aam
loope
push
mov
sub
jo
jl
sub
shlb
aaa
int
xchg
jb
sub
les
mov
push
add
outsb
lods
fxtract
dec
mov
jns
xchg
mov
dec
dec
push
jle
mov
push
lea
xchg
repnz
lcall
xchg
sahf
jge
shlb
popf
sub
jmp
stos
dec
cmpsb
xlat
iret
jne
test
sub
movsb
add
clc
and
push
shlb
enter
or
xchg
jle
mov
xchg
divb
mov
xor
out
or
ret
iret
push
ds
xor
xchg
inc
cmc
aaa
and
fwait
shl
pop
cmp
ljmp
sbb
cmp
inc
stos
ret
xrelease
mov
loopne
je
push
push
push
scas
outsb
or
int
popa
scas
stc
mov
pop
sbb
mov
mov
pop
imul
mov
pop
mov
scas
xchg
lock
and
jns
mov
fbstp
add
out
push
push
lods
mov
or
add
dec
mov
jge
icebp
es
hlt
inc
out
or
jne
mov
pop
loopne,pt
ret
aad
cs
jae
adc
push
int3
jmp
mov
clc
xor
pop
fldt
cmp
cld
pop
and
cmp
push
inc
sbb
das
lahf
sbb
gs
push
and
inc
popa
outsb
sbb
lods
pushf
mov
int
hlt
mov
jp
jmp
xor
shll
jl
orl
mov
cld
in
push
or
push
fwait
cmp
cmpsl
in
add
inc
outsb
js
or
fs
fsts
xor
dec
fstpt
inc
add
mov
pushf
pop
daa
call
call
add
mov
sub
cltd
ljmp
push
test
jne
out
adc
lahf
cmpsl
mov
push
jge
sub
inc
or
sbb
in
cld
hlt
loope
mov
sub
movsb
pop
out
jmp
stos
fcoms
shll
pop
in
adc
mov
add
push
mov
mov
add
in
xor
cmp
lahf
scas
fs
jmp
jne
jb
ljmp
or
fidivs
das
scas
dec
sbb
push
add
adc
popa
loope
out
clc
adc
push
insl
sub
gs
dec
negb
movl
cltd
gs
cmpsb
sbb
dec
xchg
popf
xchg
jb
iret
push
xlat
sbb
addr16
mov
icebp
sub
jecxz
mov
lods
gs
into
jmp
mov
and
or
mov
pusha
add
pushf
je
xor
sub
imul
hlt
das
popa
sub
mov
movsb
mov
jle
outsl
lock
js
pop
adc
push
leave
mov
sahf
jmp
mul
inc
cmpsb
aam
push
out
mov
outsb
push
mov
mov
add
lea
idivb
add
jne
out
push
cltd
push
fwait
push
stos
push
jge
testl
les
dec
decl
adc
fisttps
loope
loope
not
xor
mov
iret
mov
add
cmpsl
xchg
add
aas
mov
es
ret
pop
jp
mov
rcrb
out
je
jle
sbb
mov
and
pop
test
push
pop
dec
push
xor
vcvtps2pd
inc
and
push
lock
adc
rorb
mov
push
mov
cmp
cmpsb
sar
pop
insb
cmp
jb
push
daa
jl
and
jbe
xor
scas
stos
lods
sbb
mov
ret
xlat
xor
movsb
out
pop
mov
add
xchg
jp
cmp
psubd
sbb
nop
cmpsl
test
pop
das
jo
shll
rclb
clc
test
cmc
jl
or
fidivrs
xrelease
nop
cmp
imul
cwtl
std
xor
das
shlb
popf
jae
jecxz
in
mulb
or
sub
inc
mov
xchg
sbb
imul
cmp
js
lret
dec
or
adc
sahf
setp
ret
pop
jno
pop
inc
inc
xchg
and
clc
push
test
leave
fidivrl
test
int
push
pop
and
out
add
xchg
lret
xor
pushf
inc
mov
stos
inc
or
loop
add
sbb
xchg
xor
lds
push
mov
dec
addr16
gs
mov
mov
jns
icebp
iret
mov
cmp
ljmp
pop
icebp
daa
inc
xor
sbb
gs
push
inc
enter
push
and
dec
jecxz
fstl
push
add
pop
les
add
sbb
adc
lds
pop
lcall
loop
int
out
add
pop
cmp
dec
sbb
pushf
push
sub
adc
fwait
xchg
mov
sub
fsubr
jnp
dec
inc
loopne
repnz
faddl
stos
sbb
mov
lret
insl
pop
cltd
mov
mov
addl
sub
sub
test
outsb
pop
mov
sbb
stos
shlb
lock
and
cli
fstp
mov
cmpsl
push
not
loope
loop
popf
sub
fsubrl
pop
hlt
lahf
mov
push
add
andb
push
mov
call
test
pop
sub
adc
push
leave
mov
arpl
inc
popf
jbe
cmp
sbb
jbe
xor
rcr
push
pop
dec
jmp
mov
stos
jmp
pop
and
mov
dec
push
mov
jle
in
fisubrl
or
and
xchg
xlat
jo
mov
jge
sub
cmp
test
enter
jg
aad
xchg
and
fiadds
mov
fnstenv
add
ljmp
stc
and
addr16
and
jne
or
and
ss
loopne
adc
loop
std
outsl
std
fistpl
push
push
jb
pop
cmp
dec
shll
pop
push
mov
cmp
dec
fstl
mov
jecxz
ljmp
jp
imul
mov
inc
inc
jge
xor
xchg
inc
inc
jnp
daa
enter
dec
adc
jns
adc
ds
lcall
fs
dec
cltd
mov
test
dec
xorl
inc
mov
aas
loop
fs
stos
inc
cld
mov
pusha
push
mov
shrl
jp
call
pusha
cmp
sbb
mov
jge
data16
test
inc
lret
add
lock
hlt
mov
aas
inc
cli
dec
pop
daa
in
mov
jp
ret
test
out
dec
cltd
int3
pop
test
into
or
add
xchg
pop
addr16
xchg
loop
popa
mov
xor
icebp
mov
pushf
mov
ds
dec
jp
cwtl
je
std
push
stc
dec
cwtl
test
push
push
or
xchg
mov
xor
pop
xchg
dec
xchg
cmpsl
ret
fsincos
ljmp
dec
out
jl
jns
jmp
pusha
or
pop
idivb
inc
cmp
push
mov
test
jle
mov
fwait
push
imull
out
pop
dec
daa
pop
cmp
add
mov
dec
movsl
fiadds
adc
mov
pushf
and
mov
popf
cmp
leave
adc
mov
or
jecxz
call
lods
insl
sbb
out
mov
fs
in
stos
dec
mov
repnz
mov
lods
cmp
ljmp
xchg
iret
jns
nop
mov
dec
test
xor
push
mov
sbb
lahf
repnz
shl
adc
pop
lea
cmp
sahf
dec
adc
xchg
dec
iret
cmp
scas
shrl
dec
xor
sub
lcall
negl
jo
mov
hlt
daa
push
or
nop
loope
mov
aas
mov
scas
es
mov
in
cmp
pushf
mov
inc
push
inc
insl
clc
loop
in
pop
les
xchg
push
out
js
xchg
or
jmp
enter
scas
push
rorl
dec
or
movsl
push
into
les
mov
scas
xchg
xchg
mov
lea
scas
sbb
sbb
pop
cmp
ljmp
adc
mov
and
lea
subl
popf
es
insb
call
dec
aad
rolb
clc
dec
mov
bound
dec
sbb
pop
jp
shl
pop
inc
jo
std
nop
or
add
repz
sti
mov
mov
icebp
sqrtps
sbb
xchg
movsb
xchg
xor
add
mov
mov
jge
mov
dec
pop
mov
cmp
loopne
xchg
fstpt
in
ljmp
mov
or
arpl
nop
sbb
jp
or
xchg
sbbl
mov
inc
in
pop
cld
push
inc
xchg
jno
je
add
es
imul
and
pop
sub
xchg
dec
rcrl
jae
or
mov
dec
mov
cltd
int
test
pop
roll
in
pop
icebp
sbb
pop
jns
dec
bound
adc
clc
js
pop
bound
or
sarb
out
test
shr
sahf
cltd
jl,pt
imul
arpl
xchg
jo
xchg
stos
insb
dec
adc
into
cmp
fs
stos
pop
push
shr
stc
mov
hlt
test
bound
cs
sub
js
push
mov
mov
push
xor
pop
jmp
fcomip
pop
cltd
jb
adc
lret
adc
cwtl
jl
les
mov
loope
push
div
or
fstpt
rol
xor
inc
xor
fisubl
dec
cmp
divl
cwtl
mov
cmp
stos
xchg
mov
repz
xchg
stos
ljmp
add
push
testb
inc
sub
xor
jg
cmpsb
adc
jne
sub
stos
and
mov
pop
inc
jno
dec
cmp
jbe
add
sbb
lods
out
imul
inc
xor
xchg
cmpsl
inc
inc
pop
fwait
sub
in
mov
adc
mov
adc
js
sbb
mov
sub
xlat
push
pop
sti
xchg
xchg
popa
and
jbe
test
std
sub
dec
repz
les
call
gs
popl
ss
out
mov
and
or
mov
mov
lret
pop
into
inc
mov
out
mov
in
shl
stos
gs
mov
aaa
pop
push
shl
jns
pop
ret
push
mov
call
jo
aas
xor
inc
cmc
loop
loope
add
in
add
pop
mov
dec
push
or
fcomi
aas
and
cmpsl
inc
mov
dec
sti
es
leave
icebp
mov
shrl
lea
loope
mov
cmp
mov
into
jg
lods
sti
subb
push
divb
fsubrl
add
inc
sub
and
cltd
mov
push
out
add
xchg
xchg
cmp
adc
rcrb
pop
xor
icebp
enter
popa
insb
mov
pop
loope
push
xor
mov
jae
mov
faddl
mov
or
bndldx
ss
add
mov
arpl
das
dec
add
mov
cmp
adc
ja
xchg
adc
cmpsb
ss
cld
pop
fnstcw
xchg
ss
jae
das
mov
fldl
mov
mov
cmp
push
inc
lods
gs
pop
ret
xchg
xor
pop
and
adcb
movb
inc
rcll
stos
sbb
xlat
mov
inc
add
sti
insl
push
or
std
add
std
and
jbe
inc
insb
hlt
cs
cmp
push
adc
pop
push
ret
lds
aad
pusha
push
ret
movq
mov
jnp
mov
fcoms
mov
mov
cmp
int
test
lods
sub
cld
jo
bound
xor
and
xor
in
pusha
jle
add
mov
jle
loop
stos
mov
mov
xchg
mov
jg
icebp
push
insb
inc
dec
or
jge
int3
push
sbb
rcrb
mov
das
loopne
fs
out
mov
mov
push
loopne
gs
sub
ret
add
jbe
push
cwtl
or
aas
inc
sub
fs
xor
movl
sub
jb
lcall
das
and
inc
addl
jns
push
mov
mov
gs
std
mov
cmpsb
ret
dec
mov
loop
mov
dec
cmpsb
cltd
aad
test
mov
pushf
sub
pop
in
sbb
pop
cmp
popa
xchg
mov
jb
shl
call
xchg
pusha
jl
icebp
imul
sbb
int
add
cmpsl
mov
xchg
inc
push
cmp
or
dec
popf
inc
loop
mov
jle
mov
xchg
cmp
xchg
xor
test
push
push
std
rsqrtps
jno
jo,pt
push
jle
add
jne
test
and
aam
xchg
adc
fcomps
mov
and
lea
xor
adc
push
inc
pop
mov
sub
loop
sub
add
xchg
std
loopne
repz
mov
add
xchg
rolb
inc
pop
pop
cmp
call
jg
das
rcrb
in
dec
inc
mov
fbld
cmp
rclb
jae
enter
sub
mov
in
nop
pop
jmp
add
iret
adc
push
mov
rcll
dec
mov
in
fs
cld
lock
sti
pusha
testb
jmp
shrl
sbb
repz
dec
pop
cs
pop
mov
jle
jno
mov
sti
cmp
sbb
pop
sarb
jl
insb
sub
sbb
xor
notb
cmpsb
out
mov
and
icebp
imul
call
adc
stos
in
pop
stos
sub
clc
aam
mov
jns
test
loope
imul
clc
outsb
inc
inc
push
cli
aas
rorb
jl
jecxz
pop
cmpsl
nop
inc
sbb
mov
push
popf
pop
pop
xor
ja
or
dec
sub
cmp
inc
mov
stc
mov
scas
outsl
or
ror
imulb
inc
pop
mov
add
dec
out
stos
adc
daa
xchg
pop
jg
xlat
test
push
adc
mov
in
lahf
cmp
repz
mov
lods
aas
imul
repnz
jns
mov
mov
add
jnp
xchg
iret
dec
jb
loope
sub
into
push
sub
int
add
jbe
add
mov
aad
cmp
repz
jno
unpckhps
xorb
in
fsubl
jns
or
pop
imul
xchg
inc
cmp
leave
lock
jg
mov
xorb
subl
xchg
fsubs
jns
pushl
out
ret
mov
ds
inc
push
movsl
xor
push
xchg
or
lock
add
jl
mov
repz
nop
inc
out
pop
sub
sbb
test
or
sti
in
stos
faddp
dec
arpl
in
gs
clc
or
and
adc
iret
sbb
cmpsb
add
add
call
roll
or
sbb
adc
pop
inc
je
adc
cmp
dec
cmp
jg
pop
mov
aaa
sub
pop
push
or
push
push
test
or
push
pop
leave
jb
mov
fldenv
push
pusha
rcrl
inc
jl
mov
mov
std
leave
stc
lods
inc
mov
insb
xchg
push
jo
xchg
fdivrl
and
push
mov
dec
es
mov
test
fwait
cmp
pushf
in
push
bound
mov
inc
pop
bound
or
adc
xchg
or
mov
bound
movsb
sbb
push
or
sub
mov
mov
mov
inc
push
sbb
aam
add
adc
mov
std
hlt
push
adc
add
out
popf
add
sub
add
fdivp
leave
push
ja
lret
lret
mov
sarb
pop
mov
pop
mov
xchg
push
lret
jmp
mov
xchg
pop
fcmovnb
dec
jo
sbb
out
mov
xchg
mov
ds
rorb
add
mov
jle
ljmp
and
sub
fisttpl
lcall
and
or
pop
push
scas
outsb
scas
inc
ret
pusha
sbb
sahf
pop
add
ret
jecxz
cli
xchg
cmp
popa
js
popf
jns
hlt
stos
mov
roll
and
cltd
popf
mov
jp
mov
loop
sahf
or
xor
addr16
in
and
inc
loop
jmp
hlt
outsb
cli
call
and
pusha
ss
sub
ret
sub
mov
adc
into
int
inc
fdivrs
xor
jne
xor
or
mov
mov
add
mov
lret
xchg
sub
mov
mov
shll
push
mov
outsl
inc
insl
movsl
mov
xor
insb
fs
outsl
xor
out
mov
adc
cmp
sub
pinsrw
pop
loope
out
fs
xchg
xchg
fstpl
and
adc
clc
das
jo
hlt
stc
imul
and
aaa
mov
xchg
mov
idivl
test
arpl
leave
bound
leave
pop
lahf
leave
roll
xor
sarl
stos
icebp
mov
shr
loope
jp
es
pop
xlat
mov
pop
lods
mov
les
pop
jle
xor
gs
lcall
mov
addr16
aam
cld
mov
outsl
xor
adc
iret
dec
dec
sbb
dec
aaa
idivl
ljmp
jl
mov
rcrl
lds
xchg
dec
or
popf
into
mov
mov
fisttpll
mov
fldcw
movsb
mov
mov
xchg
into
popf
nop
in
or
lods
mov
push
mov
mov
shrb
test
mov
inc
cmp
inc
pop
sub
mov
sbb
push
popf
pusha
and
out
lock
mov
sarb
bound
jmp
mov
and
push
fprem1
in
dec
pop
mov
xchg
ds
bound
aas
rol
cmp
fstps
lcall
test
lret
lods
jae
lret
pop
jae
xchg
or
mov
rcr
mov
test
or
xor
dec
cmp
sahf
test
gs
mov
add
outsb
push
sub
cmp
jb
or
dec
daa
mov
pop
cmp
push
notl
jb
test
cmp
popa
cmp
mov
pushf
mov
adc
push
mov
inc
fsubr
mov
xchg
aam
jg
jl
jecxz
addl
out
sub
sti
mov
stc
inc
mov
sub
lret
jecxz
clc
or
xor
dec
leave
pusha
pop
and
out
std
stos
push
dec
push
cmp
imul
arpl
iret
mov
ret
jae
popl
loopne
ss
mov
flds
sbb
sbb
stc
jl
cmp
inc
inc
daa
jbe
or
std
mov
stc
cmpsb
or
jne
pop
pusha
jae
sbb
mov
mov
jle
add
popf
mov
inc
mov
mov
movsb
mov
fs
out
pusha
mov
mov
or
pop
fisubrl
outsb
popf
dec
mov
or
ja
mov
or
push
jae
into
mov
adc
or
xor
xchg
pop
mov
lcall
jb
jbe
mov
xchg
loopne,pn
xchg
add
mov
jb
outsb
jge
pop
in
in
lock
jl
aad
cmp
sbb
jp
das
dec
cmp
adc
inc
imul
xor
dec
adc
xchg
add
ret
pop
jbe
push
jne
loopne
orb
popa
push
mov
sbb
jge
sub
outsl
cmp
push
mov
fnstenv
sub
or
jp
adc
lods
and
dec
emms
mov
dec
lock
fcmovne
movsb
jge
mov
stc
xor
mov
push
cmp
and
mov
stos
jmp
add
daa
pop
cmp
mov
jne
icebp
ds
sarb
into
leave
xchg
scas
in
and
or
pusha
push
aas
adc
or
ret
sub
sub
imul
or
std
mov
xor
or
inc
les
mov
das
mov
xlat
adcl
jp
xor
lock
iret
sbb
out
fs
dec
lret
sub
inc
xchg
mov
mov
xchg
add
dec
xchg
divl
xor
mov
in
ret
mov
mov
xchg
iret
mov
and
hlt
int
lods
mov
bound
cmp
lret
lea
mov
sub
sbb
push
or
incb
shr
scas
cmp
mov
ret
jae
adc
fwait
mov
mov
filds
outsb
imul
popa
pop
or
popf
test
or
fiadds
mov
jo
lods
sbb
mov
mov
lods
and
cli
cmp
sbb
cmp
mov
outsl
imul
inc
shll
dec
sti
mov
mov
xchg
xchg
mov
negl
mov
daa
pop
dec
mov
movzwl
loope
push
ljmp
fwait
cld
pop
adc
bnd
inc
outsb
and
lahf
outsl
sarl
mov
pop
cmp
enter
int3
movsl
jnp
je
aas
mov
cld
and
aaa
negb
test
dec
mov
sarb
push
inc
sahf
movl
dec
pushf
imul
push
data16
scas
adc
iret
inc
cld
xchg
imul
sub
test
inc
ret
in
scas
jne
xlat
lahf
inc
push
jne
mov
imul
scas
dec
sbb
imul
mov
mov
pop
pop
fidivl
pop
subl
scas
and
cmp
jne
and
test
movsl
pushf
ljmp
pop
cmp
mov
mov
sub
leave
cmp
pop
sbb
pop
imul
push
inc
pop
push
lret
insl
aad
push
cmp
mov
xor
repnz
cmp
les
mov
add
xchg
cli
fiadds
cs
and
ret
adc
test
cvtdq2ps
test
cmpsb
push
dec
dec
in
cmp
fsubs
mov
cmp
inc
cmp
scas
xor
push
jl
mov
std
mov
movsl
pop
or
push
xchg
rcrb
xorl
cmp
or
xchg
jp
mov
sub
lcall
dec
pusha
sbb
xchg
mov
xchg
lods
and
cmp
inc
loop
in
add
push
inc
in
xor
hlt
cwtl
xchg
mov
jne
mov
test
leave
ds
lret
pshufw
out
scas
in
xchg
sub
sar
in
jl
push
dec
orl
insl
out
jae
repnz
out
lds
mov
jno
dec
xchg
mov
sbb
jbe
or
add
xchg
ljmp
mov
subb
call
fucomi
jnp
cwtl
cmp
out
imul
fimuls
mov
fmull
lea
sbb
sub
outsb
xor
push
pop
pushl
ljmp
sub
cmp
lret
lock
fldcw
fnstsw
nop
lret
lcall
cmp
out
mov
in
data16
mov
sub
call
xchg
jg
inc
jge
adc
sub
lds
xchg
lcall
iret
fildll
dec
push
jl
xor
and
lds
mov
sub
mov
mov
mov
inc
daa
add
fsubp
push
pop
and
adc
pop
jmp
int
int3
push
xchg
ja
adc
inc
cmp
lret
cs
adc
sub
and
or
fs
lcall
hlt
pop
stos
loope
mov
push
jb
imul
push
lret
jbe
movsb
mov
sub
mov
subb
rcll
in
jp
pushf
stos
stc
pop
mov
xchg
sbb
pop
jo
mov
dec
xor
mov
stos
pop
jmp
push
xchg
jmp
sti
or
mov
xchg
push
and
jbe
test
push
mov
jmp
sub
pushf
pop
lret
ljmp
push
push
out
xorl
mov
js
sbb
in
add
push
push
and
xor
jo
outsb
adcb
hlt
insl
cmp
or
stos
mov
pusha
hlt
or
sub
in
pop
cltd
rcrl
pop
cmp
jecxz
js
jbe
jns
iret
rclb
mov
pop
and
mov
pop
icebp
out
and
mov
mov
cmp
pop
push
jmp
sub
xlat
push
xor
cwtl
add
cmpsl
jae
icebp
or
pop
pusha
or
push
mov
out
nop
dec
ljmp
ja
jo
outsl
cs
cmp
leave
loop
ja
cmp
mov
push
lock
stc
push
push
fcmovb
fldt
nop
out
out
dec
xor
int
out
dec
clc
out
xor
pushf
ret
ja
xchg
add
int
sbb
pop
mov
repz
push
push
sti
in
or
inc
pop
cltd
in
sbb
clc
test
add
dec
shlb
lods
cmp
aad
pop
insb
outsb
cmp
lods
iret
sub
hlt
add
ret
mov
clc
cmp
stos
adc
xor
or
inc
mov
pop
sbb
test
sbb
cmpsl
adc
scas
jp
outsb
cmp
mov
inc
push
lret
inc
loope
imulb
ficompl
mov
lea
pushf
mov
push
sbbb
ljmp
jnp
shrl
adc
faddl
cmp
imul
cmp
or
es
mov
sahf
cltd
pop
idivl
mov
mov
mov
jmp
in
sbb
adc
fisttpll
push
nop
xchg
mov
cwtl
adc
das
sbb
sub
lea
rorb
xor
mov
mov
xchg
scas
or
xorl
dec
cli
aam
stc
jo
das
push
push
inc
lahf
inc
pop
pop
scas
stos
add
jmp
rclb
lret
push
jle
adc
xchg
lea
movsb
test
push
cld
mov
xchg
hlt
test
sub
mov
out
lods
pop
dec
mov
insl
lock
ds
jbe
xchg
pop
adc
inc
adc
inc
lcall
jbe
pop
scas
insb
sbb
pop
daa
mov
daa
pop
push
into
or
stos
stc
xor
xorb
std
andb
sbbl
pop
mov
in
dec
sub
dec
in
push
jmp
jbe
out
push
cmp
inc
push
sub
push
push
leave
or
cld
sbbb
and
push
into
or
js
xchg
or
sbb
aas
sbb
fiadds
outsl
loope
adc
or
xlat
xchg
mov
mov
push
add
add
mov
jns
jnp
sbbb
pop
lea
mov
jne
insb
inc
xchg
enter
push
or
xchg
jg
mov
int3
xor
adc
or
xor
lret
pop
pusha
std
add
notb
adc
shl
sbb
mov
add
rcrl
push
lock
iret
popf
lods
fadd
mov
test
imul
fisttps
mov
mov
cli
ret
mov
lret
ljmp
inc
jbe
lods
maskmovq
divl
mov
ljmp
jns
sarb
sub
dec
ss
mov
adcl
fsub
dec
ficoml
cmp
mov
fcmovnu
fs
mov
ror
adc
pop
nop
jo
sbb
outsb
xchg
fstpt
ss
xlat
inc
sbb
and
sub
cmp
das
aaa
hlt
pop
orb
frstor
jnp
xchg
rcll
adc
mov
push
je
xor
fxch
and
scas
push
mov
cs
lds
cmp
jl
jg
mov
sub
push
mov
les
cmpsl
mov
dec
mov
xchg
cmp
jecxz
test
sub
lock
adc
pop
leave
sbb
mov
int
int
ffree
push
in
sahf
push
cmc
pop
daa
dec
cbtw
jmp
aaa
cwtl
mov
shlb
or
mov
jbe
popa
out
mov
sub
test
xchg
cmp
cs
mov
int
hlt
dec
lret
pop
out
add
aas
push
ret
cmp
pop
hlt
js
pusha
adc
sub
pop
pop
jae
mov
sub
mov
jnp
jns
js
fwait
and
int
call
mov
js
adc
mov
cwtl
pop
xor
out
stos
and
inc
cli
cs
pusha
jl
mov
test
pop
push
icebp
add
add
in
shrl
imul
xor
inc
out
add
sbb
repnz
push
hlt
sbb
mov
jb
xchg
add
arpl
xor
rcl
aad
js
hlt
sub
aas
xchg
dec
popf
dec
xchg
xchg
or
push
xchg
pop
int
pop
push
fucomip
lahf
add
push
stos
pop
aam
mov
fadds
popf
jg
cmp
cmpsb
ss
test
shlb
push
cmp
stc
sbb
cwtl
cmpsl
jl
jecxz
mov
mov
movsl
fisttpl
jp
popa
inc
and
jns
scas
js
int
jb
cltd
jg
je
shrb
jecxz
add
loope
mov
fs
sbb
negl
jo
testb
mov
push
loope
lahf
pop
xor
outsb
xchg
push
cmpsb
cmpsl
pop
pop
int
or
pop
out
push
inc
push
mov
std
sti
loope
aaa
test
add
mov
pop
lods
push
pop
push
das
adc
mov
xchg
lock
enter
jle
mov
mov
sbb
mov
in
adc
scas
divl
jno
std
in
mov
test
daa
aaa
cs
leave
ja
and
mov
jne
jnp
jne
mov
fwait
xchg
pushf
sbb
jne
dec
inc
ds
ja
mov
xor
add
pop
test
bnd
and
jo
ret
clc
cmc
adc
fs
mov
dec
mov
pushf
sarb
jo
xor
ror
sbb
inc
cmp
sti
jl
hlt
icebp
arpl
push
xor
push
jl
jle
or
ss
dec
mov
add
xchg
lahf
jne
or
push
xor
add
add
cmp
jecxz
jbe
fsubl
jo
inc
hlt
mov
jmp
iret
lds
or
add
adc
ret
mov
pop
pop
inc
in
lock
aad
lock
fldt
sahf
cvttps2pi
mov
push
aad
mov
movsl
mov
addr16
movsl
sarb
movsl
dec
pop
test
sbb
cmp
jl
fldt
xlat
mov
js
inc
xchg
rclb
pop
aaa
push
inc
fldcw
js
cmp
sbb
mov
xor
push
cld
push
sahf
js
int
shrl
mov
lea
ficomps
pop
jl
cmp
addr16
arpl
jmp
or
sarl
pop
hlt
loop
inc
addl
in
mov
push
mov
sbb
orl
push
bound
jno
pop
mov
mov
dec
inc
xchg
xchg
aas
insl
sarb
pop
jl
mov
rclb
xor
cld
aam
push
loop
leave
dec
xchg
add
std
lcall
dec
or
sub
adc
loope
jl
sbb
out
xor
mov
outsb
in
add
jle
inc
cmp
popf
mov
sbb
mov
divl
mov
xchg
imul
mov
dec
jae
and
add
cmp
rol
push
jmp
stc
inc
push
roll
or
jl
inc
out
lcall
into
test
mov
or
icebp
sub
xor
movsb
xor
test
dec
mov
clc
xchg
sbb
jne
test
shlb
xorb
and
outsl
sub
adcb
stc
inc
incl
orl
jae
push
test
sbb
scas
vmaxsd
arpl
loop
and
jmp
mov
std
cmp
xlat
and
fimull
les
cmp
pop
out
in
aaa
aam
in
add
mov
dec
pop
adc
and
and
and
cmc
stos
adc
loope
outsb
stc
insb
jge
ja
sti
mov
iret
sarl
jne
fdivrl
push
jge
leave
fwait
sbb
xchg
and
pop
call
push
and
pushf
sub
cmp
dec
mov
adc
push
push
test
mov
inc
test
jbe
sub
outsb
cmp
mov
js
shlb
in
pop
lock
ja
push
xorl
test
and
adc
cmp
sub
cmp
fidivrl
adc
jnp
fldl
xchg
aad
push
sbb
fwait
xor
std
je
mov
mov
sbb
xchg
frstor
movb
gs
loope
xor
aam
in
lret
push
inc
pusha
addr16
pop
sub
dec
mull
lea
push
sti
xchg
inc
mov
mov
xchg
mov
test
not
bound
jnp
inc
mov
adc
pop
and
xorb
sti
xor
push
mov
inc
repz
sub
xchg
fwait
decb
cmpsb
add
cmp
add
or
in
adc
inc
sarl
arpl
idiv
pop
mov
xchg
aas
cltd
push
xor
outsb
jmp
insb
mov
mov
aas
fpatan
and
outsl
xor
not
jnp
es
sub
iret
dec
test
xchg
mov
cmpsb
icebp
test
mov
push
aad
ljmp
pop
stos
push
call
add
dec
mov
rolb
mov
jae
jg
cld
aad
mov
popf
adc
cmp
push
or
mov
dec
scas
fwait
cli
fmuls
fldenv
mov
std
mov
cmpsl
cli
sti
arpl
mov
cmp
mov
xchg
fistl
es
mov
into
aad
sub
lcall
pop
imul
les
jns
cmp
mov
xchg
mov
mov
mov
pop
mov
pusha
test
push
mov
fdiv
xchg
xchg
call
mov
mov
cld
or
lret
es
mov
mov
enter
push
xchg
ficoms
sbb
andb
outsl
mov
outsb
stos
test
jle
dec
pop
addl
adcb
sub
dec
inc
xlat
icebp
decl
sti
in
mov
sub
push
inc
cmpsl
sti
cmp
lret
and
mov
jnp
mov
dec
fidivl
pop
sbb
out
daa
jge
jno
pop
repnz
xor
cmc
jge
jge
outsl
ss
push
lds
mov
or
fcoml
pushf
push
xor
xor
xchg
int3
mov
mov
dec
inc
inc
pop
add
jmp
pop
and
mov
int3
mov
js
pop
or
lock
cmpl
les
sub
test
outsb
sbb
inc
dec
das
mov
pop
testb
dec
lahf
pop
scas
xor
lcall
and
and
test
je
xor
mov
mov
popf
pop
aam
testl
add
lock
jne
add
fsubr
inc
arpl
add
jns
mov
inc
jle
fidivrs
jecxz
cwtl
std
mov
popa
inc
lahf
sbb
popa
test
and
mov
ljmp
cmp
icebp
pushf
cltd
xchg
fs
ss
call
push
rol
push
mov
clc
push
cmpsb
pop
mov
shr
aam
sub
cmp
mov
imul
incb
aad
jns
mov
jns
lea
xor
fnstsw
int
rclb
push
xchg
sub
push
test
incb
fiadds
notl
pop
add
addb
nop
add
jl
jae
jle
pop
mov
outsb
cmpsl
and
pop
add
pop
or
es
or
orb
add
cld
test
lods
inc
adc
adc
jae
pop
or
push
sti
add
pop
adc
sbb
out
repnz
lret
jb
sub
leave
mov
jo
or
mov
add
lods
pop
test
gs
ja
and
push
pop
nop
mov
mov
adc
imul
sbb
and
inc
out
aad
loop
pop
aaa
xor
lret
cmp
sub
sub
gs
push
push
mov
int3
sub
mov
je
jne
inc
and
mov
ficoms
jae
shll
stos
push
stos
cli
cmpsb
mov
pushf
or
aam
or
add
cmp
xchg
loope
add
jno
mov
sub
hlt
mov
lret
mov
mov
sub
std
into
or
out
in
into
jecxz
xchg
cmp
pop
mov
fldl
xchg
pop
and
adcb
dec
mov
jmp
pushf
fldt
sarl
push
pop
outsl
jbe
mov
sbb
dec
jb
loopne
mov
aad
mov
imul
sbbl
cmc
jle
ja
add
cmp
pop
pop
lea
mov
scas
rclb
imul
in
pop
ja
mov
mov
movsb
stos
sub
xchg
repnz
imull
out
sbb
loope
gs
mov
pop
mov
pushf
dec
insb
inc
and
sub
dec
faddl
test
lods
bound
cmpsl
shrb
fwait
out
mov
daa
ss
jb
es
inc
push
aas
inc
xor
into
jge
pop
xchg
rorb
jl
jp
jg
mov
push
sub
push
inc
imull
es
push
mov
and
mov
jo
rcll
mov
ljmp
xchg
jg
subl
sbb
ret
push
and
movsl
aas
test
jbe
and
lods
mov
negb
jge
fildll
jns
stc
pop
or
cld
add
movsl
enter
stos
ret
xchg
rcrb
mov
outsb
call
mov
xor
out
mov
pushf
lret
jnp
mov
fbstp
add
bound
mov
xor
push
mov
fildl
adc
fs
inc
or
test
stc
cmp
xor
sub
sub
rcrb
fwait
rol
dec
jo
stos
mov
decb
mov
int3
iret
sti
or
pop
xchg
in
push
jp
or
data16
jge
icebp
xor
mov
mov
stos
outsb
pop
imul
dec
imul
ret
xor
clc
test
sub
inc
in
sbb
fnstenv
loopne
sbb
daa
jg
xchg
xorl
dec
cmc
inc
in
adc
outsl
sub
sbb
fwait
lock
fs
lcall
fistps
or
hlt
pusha
pop
push
mov
dec
lds
xchg
mov
outsb
aaa
add
fs
mov
aas
mov
push
dec
mov
fwait
pop
shll
sub
jecxz
push
test
jne
cltd
and
outsb
adc
xor
inc
testl
or
mov
sbb
sbb
dec
mov
enter
jns
pop
in
cltd
inc
mov
outsl
ficoml
mov
or
and
je
inc
ljmp
in
mov
xor
sbb
test
cwtl
mov
mov
fadd
push
sbb
test
sahf
inc
out
aaa
enter
jnp
dec
out
cwtl
mov
jno
imul
imull
cmp
pushf
mov
xor
imul
mov
movsb
adc
xchg
xor
pop
or
out
aas
sbb
nop
aas
mov
jecxz
ss
test
jbe
pop
xor
data16
mov
sub
inc
xor
dec
addl
scas
sahf
mov
jl
jge
sub
and
fsubr
sahf
popf
cmp
dec
fisubrl
imul
jle
sub
add
js
out
dec
test
pop
push
push
jae
fldenv
xor
jle
pop
dec
lret
cwtl
jae
inc
scas
inc
sti
adc
push
push
push
mov
or
hlt
ret
fnstcw
jge
jno
mov
cmp
or
jne
repz
dec
cmp
sbb
mov
loope
lret
negl
arpl
cltd
sub
mov
repz
fucom
pop
pop
inc
and
jl
lcall
add
cmp
adc
sub
scas
push
mov
repz
in
or
or
cmc
rcr
dec
xlat
stc
out
xor
pop
cli
jle
mov
test
or
in
decb
sbb
cltd
xchg
dec
adc
fs
rcl
and
pop
add
jl
inc
dec
call
cmp
dec
jb
xchg
xor
pop
movsb
dec
xlat
movsb
or
mov
lock
data16
cmp
out
cmp
xor
fidivl
bnd
clc
and
scas
inc
rcr
cmp
sbb
mov
cmp
enter
xor
pop
inc
or
or
enter
ret
mov
shrl
pop
mov
shll
hlt
or
ja
popf
mov
pop
or
pop
add
cmp
jle
das
in
lret
in
insb
adc
popa
imul
push
mov
mov
test
enter
clc
lock
ret
mov
in
scas
inc
push
imul
cli
daa
cmp
dec
fs
inc
lahf
lea
incb
or
cmp
dec
push
pop
jns
aam
push
cltd
dec
pop
xor
data16
repz
jg
cmp
push
movsb
std
cmp
push
xchg
sub
jno
outsl
push
adc
cwtl
add
push
jg
mov
popa
into
push
xor
add
fwait
lret
inc
sarb
pop
call
jnp
push
or
adc
fstps
scas
iret
push
jmp
cmc
xchg
sbb
movsb
jae
outsb
test
aam
out
nop
movsl
bound
es
and
push
xchg
cmpsl
fxch
mov
pushf
jl
jp
sbb
dec
lret
scas
in
or
lret
cmp
out
cmp
jns
hlt
jne
lret
jp
mov
pop
ret
jl
sbb
sbb
mov
lcall
adc
sbb
out
sbb
out
leave
mov
jae
inc
xor
sub
mov
inc
xor
in
addr16
or
jp
cmpl
mov
mov
add
inc
cmp
inc
scas
sub
mov
inc
mov
ja
mov
imul
jl
aas
stos
filds
cmp
scas
dec
clc
cmc
or
xlat
add
into
jo
neg
mov
mov
mov
jb
int
lock
xchg
mov
repz
call
inc
mov
add
aad
sti
cmp
loop
push
sub
dec
jp
xlat
aad
mov
push
insb
jnp
jle
jg
sub
fsubrl
sub
stos
ret
mov
js
out
sub
js
aam
sbb
cwtl
je
sbb
fs
add
add
xchg
jg
mov
mov
out
shrb
adc
xchg
test
out
jae
idivl
popa
mov
xchg
idivl
jecxz
gs
and
cmp
mov
icebp
mov
mov
adc
mov
icebp
pop
mov
cs
pop
mov
fisubrs
add
mov
inc
dec
rcr
movsb
dec
shll
cltd
stos
jp
std
or
inc
aad
xchg
idivb
pusha
xchg
fpatan
mov
bound
mov
call
lahf
ljmp
push
repnz
cmpsl
cmp
jge
jae
inc
out
bound
sbb
and
jl
mov
repz
and
mov
push
inc
ja
adc
lea
add
adc
stos
nop
test
outsb
xor
call
pop
sbb
shr
enter
mov
cmp
pop
pushf
mull
pushl
je
or
jbe
xor
adc
inc
aad
sub
and
stos
inc
pop
in
ret
pop
and
popf
cmp
lea
ljmp
loopne
pop
add
or
into
inc
cld
nop
std
test
lahf
pop
mov
pop
mov
inc
add
clc
insb
ljmp
das
lea
adc
sti
in
xchg
in
int3
fidivrl
pop
adc
pushf
ret
and
jno
add
dec
shll
sub
sti
adc
shr
pop
scas
inc
rcl
leave
stos
cmpsl
add
lcall
mov
mov
jecxz
pop
push
inc
sub
adc
iret
xchg
inc
mov
fcompl
xlat
sbb
jns
fcoms
mov
push
lea
in
rcr
and
pushf
xor
add
sbb
cmpsb
jae
mov
rcrl
push
mov
sub
sbb
cltd
fwait
inc
mov
in
adc
jge
jp
mov
push
lahf
mov
js
mov
inc
pop
xchg
insb
mov
fwait
cltd
and
mov
cmc
hlt
push
sbb
jns
into
sbb
push
mov
and
inc
push
leave
jg
pop
mov
inc
and
aaa
add
push
mov
rorb
jb
lret
jne
xchg
jno
pusha
jmp
je
imul
jnp
int
or
sub
sahf
popa
cmc
adcl
dec
or
icebp
cmpsl
push
bound
jo
sarb
ret
shl
fcmovu
int
dec
and
test
mov
cli
jb
jae
nop
loopne
in
xchg
imul
or
pushf
inc
jg
or
sbb
push
cmpsb
stos
cmp
sbb
out
in
jno
cmpl
adc
std
sbb
jo
mov
jo
cmpsb
fs
adc
mov
lea
jne
pop
lcall
sbb
out
loope
test
sub
orl
inc
mov
mov
pop
mov
mov
sbb
mov
outsb
outsl
push
push
test
fsubrl
push
ret
hlt
mov
and
fs
adc
or
or
jne
dec
scas
das
std
xor
pop
push
jp
pushf
sarl
push
scas
shl
jns
fcomps
xchg
dec
clc
or
xlat
divb
out
mov
enter
pushf
inc
pop
fwait
enter
fmull
aad
ja
leave
and
test
mov
into
popf
fisubrl
xor
push
inc
ja
rcrl
push
dec
ja
ja
push
push
adc
push
jge
sbb
ss
jno
arpl
lods
inc
inc
push
cmp
add
jbe
pop
ret
inc
aam
xorl
bound
sbb
jne
add
mov
or
mov
bound
sbb
les
cmp
movsl
in
xor
pop
insl
sbb
mov
clc
jne
dec
nop
inc
cli
push
and
in
pop
and
stc
pop
mov
pop
jne
pop
push
addb
lahf
pop
pop
push
jg
xchg
sbb
push
daa
dec
addl
inc
xor
pop
outsb
mov
mov
and
jmp
outsb
es
adc
popa
enter
rclb
out
fisubl
push
incb
ret
shrl
and
xchg
stos
cs
xchg
push
jl
int3
cmp
call
xchg
or
fnstcw
arpl
sub
std
pop
push
fsubrl
and
iret
lret
jg
in
push
pop
loope
adc
push
js
xcrypt-cfb
cmpsl
es
mov
push
jle
jecxz
mov
mov
mov
iret
or
xlat
sbb
ja
lret
fisubrl
xor
int3
jg
jbe
and
dec
js
dec
das
xchg
jmp
inc
jne
pop
push
mov
sbb
in
call
mov
fwait
sti
aaa
mov
adc
nop
adc
sbb
pop
or
dec
int3
fdivl
jb
in
and
adc
and
mov
movsb
xchg
push
int
add
stos
jne
adc
test
ret
in
mov
rolb
xchg
push
pop
jp
add
movsb
xor
mov
and
xchg
xchg
stos
push
jno
stc
cmp
sub
sub
xchg
sbb
std
mov
js
rorl
xchg
xchg
int3
xchg
incb
sub
dec
lret
add
dec
push
cmpsb
int
nop
insl
hlt
sbbl
sub
pop
push
ss
jl
jns
popf
loopne
mov
push
out
ror
lret
or
lret
in
es
mov
fwait
pop
add
and
stos
xor
sub
out
fdivrl
jae
nop
mov
inc
jle
mov
pop
repz
dec
push
movsl
mov
jae
ja
dec
inc
int
jp
jp
lcall
adc
ja
cmp
pop
es
lret
mov
dec
cmp
mov
xor
pop
pop
fptan
xlat
or
or
outsl
mov
jnp
fnstsw
into
mov
sar
insb
push
xorb
lret
loop
pop
and
jge
sbb
pop
and
lods
mov
arpl
cmp
loop
lea
jmp
test
jo
pusha
inc
dec
dec
scas
adc
xchg
mov
inc
out
sahf
jb
mov
in
aam
push
cmp
icebp
and
lock
das
icebp
shrl
mov
lcall
mov
into
xchg
rorb
std
les
jmp
push
outsl
xchg
sub
mov
dec
xchg
out
fadds
nop
xor
or
cmp
push
arpl
lret
mov
add
mov
mov
mov
push
or
decb
jle
xor
aaa
adc
inc
xchg
inc
fiaddl
mov
popf
xchg
jecxz
andl
pusha
in
das
lcall
push
test
pushf
sahf
push
sbb
das
sub
mov
sub
mov
and
mov
sub
mov
jge
xor
pop
push
pop
sbb
aad
push
call
mov
bound
add
aam
orb
call
sub
push
es
scas
int3
push
lret
ss
mov
hlt
jp
adc
xor
in
xor
mov
leave
xchg
fucomip
pop
adc
xor
stos
cmp
dec
push
push
jecxz
and
movsb
aad
adc
insl
xlat
in
fiadds
leave
sbb
mov
jo
pop
bound
mov
sub
stc
or
and
xchg
push
sbb
add
stos
xchg
sbb
lds
and
imul
xor
xchg
xchg
sbb
icebp
push
or
out
inc
or
scas
cmpl
xchg
jo
cmp
ss
int3
das
mov
push
inc
add
mov
mov
mov
orb
frstor
jecxz
cwtl
sbb
xchg
fidivrl
insb
int
stos
mov
add
pop
push
jg
or
add
push
push
sub
outsb
or
imul
pushf
mov
jb
fstl
test
repnz
cltd
imul
mov
loop
shlb
je
out
ret
das
rorb
enter
pusha
inc
lea
cmp
mov
inc
cmp
imul
call
xchg
inc
mov
aaa
frstor
fildll
shlb
test
inc
xchg
test
pop
ret
lods
inc
out
adc
sbb
dec
xchg
xchg
roll
mov
or
repz
nop
out
fisubs
mov
and
adc
movsb
out
push
call
mov
pop
mov
into
mov
or
sub
cmpb
mov
out
pop
mov
adc
inc
push
ret
lea
pusha
cmc
lea
sub
loop
decb
cli
add
mov
xor
xor
xchg
bound
add
ja
adc
scas
out
jecxz
outsl
sbb
xchg
adc
pushf
ja
mov
cli
lret
xor
scas
xor
jg
leave
negl
mov
xchg
test
lahf
adc
out
in
ret
push
call
inc
lret
lcall
and
aaa
jb
xor
pop
xor
insl
leave
or
in
and
insl
cmp
out
arpl
inc
movsl
ds
jl
insb
pushf
out
xchg
and
pop
in
inc
cli
ret
negl
imul
adc
repnz
fstpt
jae
lahf
mov
push
fdivs
jmp
sbb
mov
cmp
das
or
sarl
in
push
rcrb
into
clc
cltd
xor
call
mov
popf
shl
stos
sbb
insb
push
outsl
inc
dec
sub
lcall
xor
xchg
mov
cli
das
aas
ljmp
js
adc
outsb
or
jno
cmpsl
fcoml
pop
stos
cmp
dec
mov
mov
sub
les
mov
xchg
push
cs
pop
add
les
mov
push
sub
out
mov
dec
sub
insl
mov
pop
jle
out
pusha
jns
lods
add
addr16
add
mov
fcomp
pop
cmp
cmp
les
ja
jp
imull
jo
popf
mov
es
and
loopne
pop
rcrl
lea
dec
loop
ljmp
movsl
bound
push
cmp
into
dec
out
add
push
gs
orb
and
mov
jne
notb
movsl
clc
divl
pop
mov
mov
in
cwtl
sbb
sbb
and
xchg
pop
int3
jnp
in
inc
lcall
ss
cltd
sahf
xchg
repnz
pushf
jne
cwtl
mov
fwait
imul
xor
leave
or
cmpl
inc
push
pop
sub
xchg
dec
test
mov
add
dec
stc
aad
arpl
in
xchg
loope
in
pop
call
rcl
jge
iret
js
sub
push
dec
ret
cmp
fwait
int
les
lret
or
mov
mov
sub
mov
mov
jbe
xchg
popf
sbb
shrb
movswl
pop
pop
in
es
aas
or
sarb
sub
aam
xor
ret
xchg
std
push
leave
pop
int3
pop
or
add
les
dec
fs
nop
xlat
icebp
jae
inc
push
xchg
out
js
mov
enter
lret
xor
ret
dec
test
mov
add
xor
push
jl
into
loopne
jg
js
popa
int3
call
aas
cmc
scas
adc
es
add
cli
cmpl
int
outsb
mov
cmp
sahf
cmp
out
mov
clc
or
xchg
ss
sub
push
shl
rol
fldcw
or
mov
fdivrl
xor
jo
iret
sbbl
pop
xchg
xor
insb
mov
movlhps
xchg
mov
cmp
lahf
fsubl
mov
cmp
cs
push
rcrl
dec
cltd
mov
fisttps
pushf
mov
mov
push
sbb
addr16
and
ror
mov
push
in
cmp
and
xor
outsl
rclb
and
dec
push
dec
add
call
cmp
cmpsl
xchg
js
ja
pop
dec
mov
sbb
xor
ret
and
fsubl
or
mov
or
es
mov
mov
or
cltd
jg
xchg
ret
es
aad
ficompl
movsb
gs
adc
sti
int3
xchg
je
add
cmpsb
sub
cmp
inc
and
mull
lods
and
jp
push
shl
lret
jmp
jne
cmp
mov
pop
fwait
fisubs
push
outsl
inc
hlt
xor
pop
xor
cmpsl
ds
scas
rcr
add
out
rcll
negb
imul
xchg
addb
scas
inc
scas
iret
mov
test
cmp
sbb
sub
mov
push
mov
inc
in
sbb
push
lea
adc
test
jg
mov
nop
addr16
mov
cs
pop
mov
sbb
ja
lahf
jmp
mov
or
call
add
and
hlt
int
mov
sbb
and
pop
sub
cltd
adc
xor
push
test
std
sbb
sbb
fs
testb
pop
jge
aad
jmp
sti
inc
add
mov
fcmovnu
mov
imul
insb
inc
fdivrs
pop
mov
sarl
push
push
pop
ret
dec
es
fstpt
inc
rep
push
jbe
daa
sbb
std
jne
adc
in
or
test
iret
divl
leave
movsb
jno
movsl
loope
and
mov
inc
mov
cld
or
or
adc
pop
pop
mov
pop
cmp
popf
insl
rorb
jne
jp
into
mov
mov
and
push
dec
push
in
aam
in
shl
addb
movsb
xor
dec
pop
dec
cwtl
loopne
loop
cmp
adc
pop
test
mov
in
aas
or
pop
mov
sub
mov
jle
pop
ljmp
imull
lods
rolb
pop
xchg
orb
rorl
lods
xlat
lcall
cs
jns
jecxz
inc
scas
or
xchg
mov
cltd
fcompl
stos
ret
lret
sbb
sarl
dec
add
add
and
adc
in
dec
sub
mov
fnstsw
adc
sti
sub
and
lods
cmc
insb
adc
sub
enter
ret
lods
loope
ror
add
add
jge
sbb
fdivrl
adcl
push
jmp
pop
sarb
test
sbb
mov
inc
dec
sub
aad
inc
iret
hlt
outsl
cmp
test
cltd
lea
xor
pushf
jne
xchg
or
xor
jnp
jecxz
test
push
movsb
pop
sbb
ds
mov
sbb
jg
loope
push
rcll
jae
and
insb
or
lods
mov
sub
loopne
inc
jmp
push
push
loope
push
sub
lahf
mov
in
xchg
push
mov
mov
popa
insb
push
push
loopne
and
add
test
popa
sbb
or
cmp
pop
sub
jl
icebp
push
out
and
andb
sub
cmp
stos
inc
loope
iret
push
adc
std
in
ficomps
inc
insb
or
xchg
test
jge
arpl
loop
sub
ja
adc
push
ljmp
lea
add
or
lret
mov
add
mov
mov
pop
fistps
sub
lret
jb
adc
into
nop
xchg
pusha
mov
ja
mov
test
adc
push
cld
jl
xchg
inc
into
cwtl
adc
out
jge
cmc
mov
push
jns
mov
add
xchg
divb
jb
out
pop
jno
dec
popa
popf
sahf
mov
cmp
mov
dec
dec
aad
push
outsl
fptan
push
mov
mov
jb
out
pop
xor
push
pop
les
xor
cmp
imul
call
in
es
dec
mov
lcall
push
ljmp
cwtl
mov
ret
stos
shr
rcrb
inc
pop
lods
lock
fiaddl
mov
mov
cmp
lret
cmc
out
push
sbbl
push
out
push
xchg
pusha
mov
aad
ficoms
in
add
mov
push
andb
pop
insb
std
xchg
inc
cmp
pusha
shl
pop
mov
sub
dec
mov
jno
push
pusha
pop
push
and
mov
pusha
xchg
addr16
xlat
or
jp
push
mov
outsb
mov
in
lret
push
mov
push
jb
jge
cld
lock
sbb
data16
test
cs
adc
xlat
cmp
xchg
loop
arpl
inc
ds
fisubrl
je
add
cmp
jmp
imul
es
add
cmpb
hlt
stos
mov
insb
dec
push
out
and
insb
adc
stos
in
jne
lods
dec
movsb
add
in
mov
lds
loope
aam
idivb
cmc
negb
rorl
out
cmp
in
push
dec
fdivs
and
push
cwtl
into
gs
imul
sbb
mov
jnp
jbe
shll
lds
orl
mov
jne
bound
loop
xchg
mov
loope
mov
sahf
mov
adc
jne
xor
aad
imull
in
or
add
sub
pushf
movsl
dec
inc
test
lock
fstl
dec
pusha
pop
lcall
sub
je
and
lahf
xorb
aaa
imul
popf
jne
push
and
pop
sahf
xchg
jnp
imul
mov
pushf
mov
and
push
jne
adc
jo
out
sar
in
add
js
div
out
mov
fnstenv
pop
int
push
mov
mov
daa
mov
pop
and
adc
ljmp
pop
test
xlat
nop
sbb
mov
xchg
cmpsl
divb
inc
pop
sbb
jle
mov
loopne
setg
mov
nop
out
fwait
sahf
int
insb
sbb
add
xor
insb
add
les
into
arpl
jp
xor
pop
push
fucomp
mov
pop
dec
mov
mov
mov
push
addl
add
loopne
mov
push
push
and
fsubp
adc
je
mov
subb
sbb
or
clc
test
cmp
add
popa
inc
aam
jb
pop
jge
jne
inc
push
fldl
pop
and
jbe
pop
push
pop
aas
and
fsubr
push
pop
jae
xchg
cmpsl
adc
xchg
into
ss
das
push
aas
scas
dec
mov
mov
jmp
jnp
arpl
loopne
testl
pop
ja
imul
and
cwtl
loopne
inc
jb
dec
push
sti
mov
out
xchg
sbb
xchg
and
and
and
out
xchg
mov
fistpl
jno
ret
aaa
shll
mov
cmp
lahf
mov
jmp
lods
mov
pop
movl
inc
call
imul
jns
inc
jb
incl
sahf
push
and
add
adc
fbld
jmp
insb
iret
push
pusha
adc
repnz
cwtl
movsl
rol
arpl
xchg
xor
ja
clc
cltd
bnd
dec
into
dec
mov
test
call
out
icebp
or
jae
add
stos
test
or
jne
es
imul
jbe
aas
lret
dec
in
mov
addr16
icebp
fldcw
cli
mov
xchg
pushf
or
mov
xchg
mov
jno,pt
insl
pop
mov
push
je
xchg
inc
and
mov
sub
adc
lods
mov
inc
pusha
mov
sbb
pop
push
pusha
cmc
mov
and
jnp
mov
add
jnp
fstl
clc
xor
jg
mov
cmpsb
push
repnz
xchg
pusha
mov
dec
lds
mov
fs
push
cs
mov
sbb
movsb
ja
adc
in
inc
repz
loope
arpl
sub
cwtl
mov
icebp
scas
sub
jge
addr16
sbb
inc
and
popa
push
pop
jae
lret
imul
dec
pop
xchg
ret
dec
enter
clc
push
cld
pop
dec
sub
mov
stos
push
push
mov
out
adc
mov
sbb
clc
mov
leave
xchg
push
xor
ss
ljmp
push
sahf
clc
and
dec
adcl
lcall
outsb
sbb
sub
addr16
pushf
mov
das
push
loope
repz
inc
cmc
inc
out
data16
and
aam
jge
dec
mull
pushf
clc
test
fsubrp
aas
pop
mov
and
aaa
pop
push
cmpb
dec
dec
push
xchg
and
rorb
xor
lret
cld
push
mov
cmpsl
jle
xor
push
mov
dec
xor
and
cwtl
out
add
hlt
cli
mov
out
xchg
cmpsl
xor
stc
xlat
inc
test
outsb
xchg
sbb
mov
testl
test
xor
in
js
sbb
out
xlat
loopne
mov
xchg
aaa
ficoml
andb
inc
push
mov
jl
add
pop
jb
push
sub
ljmp
jns
mov
lret
mov
ret
inc
mov
and
pop
xchg
jae
jbe
push
sbb
add
sub
std
mov
push
lock
and
mov
push
push
movsb
pop
ljmp
mov
test
es
clc
test
test
push
xor
jle
add
rorb
jp
loop
into
pcmpeqb
add
roll
lret
push
out
adc
das
repnz
or
pop
inc
add
subl
in
mov
or
xchg
aaa
lret
or
fisttpll
sub
popf
dec
push
or
shlb
cmp
repz
inc
add
or
push
stos
mov
and
push
mov
pop
icebp
dec
fsubrs
cmp
aam
mov
addl
das
lea
enter
inc
and
insl
repnz
fiaddl
insl
cli
jns
adc
xor
fldenv
cmpl
popa
jb
sbb
push
ljmp
lods
mov
ficoml
ret
dec
test
adc
mov
adc
and
xlat
mov
xchg
pop
mov
mov
test
aad
stos
jo
mov
xor
dec
or
and
daa
mov
or
xchg
fisubl
imul
dec
inc
test
push
sub
push
scas
mov
out
pop
and
lods
add
or
sbb
cli
sbb
mov
daa
mov
jl
jno
jo
cmpsl
test
sbb
cmpb
mov
stos
sbb
lods
cmpsl
cmp
cmp
inc
xchg
xor
mov
and
into
sti
mov
xchg
xor
push
loopne
and
addr16
push
lahf
jmp
pushf
mov
test
aad
ljmp
dec
sub
or
sub
dec
jno
jo
js
repnz
and
fs
imul
jb
lahf
rorb
push
rorl
cmpsl
gs
jmp
outsl
pop
outsl
cmp
cbtw
fbld
les
popf
pusha
xor
inc
addr16
cmp
mov
inc
stos
mov
add
mov
imul
pop
mov
xor
lcall
xchg
xor
mov
xlat
dec
cmc
sub
mov
fstpt
or
push
cs
leave
or
or
sub
movsl
mov
in
lret
dec
pop
loop
mov
lea
rolb
push
and
sbb
outsl
ror
pop
adc
adc
mov
into
out
lcall
idiv
bnd
mov
jne
xchg
xchg
and
fwait
xor
xlat
stos
mov
lds
sbb
clc
pop
ret
and
xchg
lea
shrb
jle
push
push
fwait
test
mov
mov
lret
inc
imul
jnp
mov
push
ficomps
hlt
orl
out
mov
adcl
mov
xchg
sahf
mov
mov
call
iret
dec
inc
xchg
xchg
and
inc
popa
add
jmp
mov
stos
call
push
push
nop
lea
dec
shll
sub
dec
imul
xor
das
dec
cbtw
andl
cli
push
mov
outsl
xchg
testl
or
js
movsl
or
mov
js
ljmp
sysret
lret
insb
or
inc
rorb
cmp
lea
mov
jge
pop
insl
ja
in
mov
mov
inc
cwtl
adc
and
movsl
pop
inc
fiadds
insl
mov
dec
pop
scas
xchg
dec
sub
sbb
sub
dec
in
ret
xchg
repz
fidivl
jl
jp
or
mov
lcall
clc
push
mov
fwait
outsb
and
or
jg
jae
pushl
shlb
cmpsl
into
xchg
jmp
adc
push
and
enter
aad
fstpl
inc
jo
lea
fsub
xor
mov
jge
loope
dec
sbbb
daa
push
push
ficoms
das
lock
inc
fstpt
jge
mov
and
mov
dec
sbbl
sbbl
push
hlt
adc
push
inc
mov
imul
and
ret
test
dec
and
jmp
pop
fwait
sub
push
cmp
pop
out
mov
aas
rclb
xchg
adc
or
arpl
cmp
fisttps
or
jbe
adc
movsb
push
push
daa
mov
fisttpl
js
adc
and
enter
ret
jne
cmp
in
push
push
aas
das
imul
sbb
repnz
pushf
outsl
imul
sub
xchg
jp
jbe
loop
fimuls
sub
cmpsb
shl
mov
mov
shrd
imul
test
fstpl
jl
or
sub
out
mov
imul
cmp
js
inc
cltd
and
mov
or
ror
inc
shll
sub
movsb
mov
sahf
and
sbb
in
fldcw
jae
dec
cs
push
pop
inc
pop
js
xchg
cltd
inc
add
lds
cmpsb
push
xchg
sbb
mov
and
and
loop
jg
and
scas
jecxz
add
lldt
in
inc
xchg
hlt
aad
movsl
aaa
jg
jmp
jg
ret
iret
push
std
stc
test
or
icebp
int
or
adc
outsb
push
lea
inc
loop
pop
scas
and
mov
cli
fcom
dec
mov
nop
inc
int3
aas
ss
pop
ret
xor
inc
jecxz
icebp
aas
mov
xchg
and
push
mov
cmpsl
push
addr16
dec
cltd
push
add
clc
dec
push
add
fs
push
sti
add
pop
cltd
ja
cmp
mov
imul
or
daa
fwait
push
sub
std
scas
and
xchg
stos
or
sbb
fimuls
rcr
sbb
or
jbe
sub
mov
jg
xchg
movsb
insl
test
add
in
dec
pop
xchg
lds
adc
inc
push
iret
pop
outsl
push
cmp
lcall
ret
inc
loop
cmovg
les
xchg
add
adc
cli
or
and
test
sub
lock
push
mov
jno
mov
fsubs
push
aaa
je
mov
leave
add
scas
xchg
pop
sbb
add
fildl
mov
sub
xor
out
in
cs
dec
cmp
xchg
mov
jno
clc
mov
cmc
mov
add
stc
out
mull
and
stos
imul
dec
and
mov
mov
fldl
andb
gs
std
xor
push
js
xchg
jbe
dec
sahf
daa
jge
xor
dec
out
cmp
pop
pushf
mov
inc
mov
mov
mov
jne
pushf
fiadds
pop
dec
cwtl
or
pop
inc
push
mov
dec
in
sahf
jo
cmp
in
call
daa
sbb
pop
mov
pop
popa
shlb
outsb
test
lods
fs
out
bound
add
rorb
iret
nop
dec
mov
clc
jmp
dec
lds
loope
jecxz
loopne
fstp
jmp
icebp
call
add
mov
mov
hlt
stos
cmp
scas
pop
mov
jno
test
mov
out
mov
repnz
push
inc
outsl
stos
jl
lock
mov
nop
inc
add
shlb
ror
push
test
mov
sbb
sub
or
enter
or
lea
xor
enter
repz
sbb
sbb
movsb
stos
shll
sbb
xor
out
movsl
cmp
movsb
aam
mov
jae
je
test
movsb
mov
repnz
pop
inc
and
jns
fbld
dec
std
outsb
mov
sbb
call
xchg
pop
test
mov
iret
jno
cmp
adc
pop
cs
out
push
mov
or
lock
and
xor
push
xor
mov
inc
sbb
push
jecxz
jbe
iret
or
push
shlb
mov
je
mov
jl
xor
pop
xchg
in
xor
cmp
fadd
adc
add
sub
imul
enter
xchg
add
push
arpl
imul
mov
mov
sub
push
imul
bound
push
xlat
fdivr
jl
push
ror
xchg
and
mov
lods
rcr
loope
stos
out
hlt
repnz
pavgw
pop
mov
cmp
mov
es
sbb
call
inc
jnp
test
jb
pop
mov
icebp
mov
add
lods
mov
stc
mov
xchg
jno
jecxz
test
cmpsl
jae
insl
push
xchg
in
push
scas
lret
subl
xlat
adc
mov
xor
pop
xchg
add
push
ret
mov
inc
shl
jp
push
sbb
xor
mov
stos
and
sub
xchg
cmp
hlt
pusha
imul
pop
xchg
lahf
dec
sti
inc
mov
data16
mov
scas
popa
jl
gs
dec
xor
mov
push
adc
outsb
add
push
and
mov
data16
incl
jne
mov
and
push
adcb
movsl
test
adc
push
gs
testl
pop
push
or
mov
jns
jo
inc
in
mov
sub
sar
out
jp
cld
rclb
les
lea
mov
xchg
js
adc
inc
mov
inc
adc
cwtl
add
pushf
push
aaa
xor
inc
sub
and
ja
inc
sub
mov
or
mov
inc
in
negl
xchg
cld
adc
cwtl
js
sbb
test
pop
scas
insb
add
popa
xlat
push
pop
xor
xlat
andl
jb
mov
sti
mov
inc
mov
pop
pop
stos
xchg
push
ja
nop
test
or
xor
mov
xchg
pop
jb
in
pushf
xchg
or
pusha
ljmp
mov
dec
insb
fistpll
mov
dec
inc
lret
mov
add
xchg
and
xor
cltd
adc
jl
pop
jmp
mov
pop
dec
cmp
add
cld
mov
mov
test
test
sbb
xor
hlt
cmp
cmc
gs
mull
push
inc
push
into
jecxz
pusha
and
push
add
movsl
and
rcl
mov
xchg
mov
iret
cld
add
lahf
test
jp
or
inc
mov
aas
and
adc
in
mov
mov
cmpsb
mov
fildl
out
gs
mov
int
add
dec
push
ds
jno
roll
pop
int3
sub
push
into
mov
pop
add
adcl
ret
pop
inc
mov
cmpl
sahf
out
adc
fisubs
mov
adc
outsl
xchg
cmp
testl
nop
testl
leave
sbb
push
clc
mov
out
sub
iretw
scas
xor
rclb
mov
scas
loop
xchg
cmp
push
and
mov
imul
dec
push
gs
test
daa
shlb
mov
jns
mov
in
scas
data16
repnz
adc
arpl
cs
cmp
sub
mov
sbbl
pop
adc
arpl
xchg
rorl
jno
cmpsb
fstpt
cmp
mov
adc
jo
sahf
pop
mov
inc
jbe
pusha
xchg
mov
lea
cs
pop
cwtl
jmp
sbb
stos
sub
mov
arpl
cmp
mov
fnsave
roll
dec
pop
movsb
ss
mov
aad
fstp
mov
js
rcrl
sub
arpl
add
pushf
push
xchg
rclb
andl
dec
cmp
enter
cmpsb
test
fmul
add
inc
fisttpl
test
out
out
jmp
sub
dec
mov
pop
imull
cmp
xor
ljmp
mov
mov
jmp
shl
pop
jecxz
icebp
roll
xor
cmp
jo
dec
jmp
ror
mov
adc
sbb
mov
lea
and
xchg
pop
push
lcall
sbb
out
pushf
nop
xor
ja
aam
and
int3
mov
lods
ret
pop
not
and
push
xor
xchg
xchg
mov
jle
daa
lahf
scas
or
shl
jo
xchg
aad
outsb
jmp
xor
fdivs
jmp
cmp
popf
pusha
lea
cwtl
lret
mov
mov
test
and
ja
mov
push
in
cs
out
cmp
fistl
loope
fisubrs
adc
aam
mov
dec
lret
push
adc
ret
dec
dec
int3
sbb
jbe
andl
mov
aad
push
dec
roll
call
fnstcw
inc
xor
dec
fwait
xlat
sub
pop
mov
fbld
pop
pushf
jae
jns
and
mov
les
cmpsl
add
dec
and
cli
je
das
sub
dec
push
adc
mov
jno
std
pop
in
mov
xchg
fildl
insl
out
jne
sbb
pop
mov
cmp
jnp
test
mov
mov
pop
ret
mov
gs
mov
sti
mov
aas
lcall
pop
and
outsb
xor
es
inc
stos
add
shll
push
test
clc
cld
aaa
cld
dec
inc
inc
or
or
mov
or
jo
lock
inc
popf
inc
addb
sbb
add
adc
popf
jg
jge
rorb
jnp
test
or
mov
add
pop
mov
mov
js
lods
lock
aam
mov
int3
mov
dec
test
sahf
pop
out
jmp
mov
js
jecxz
mov
lock
pop
adc
cltd
mov
aam
aam
movsl
test
test
or
mov
cltd
and
rorb
dec
xchg
iret
lods
xchg
imul
mov
hlt
in
dec
xlat
mov
jne
dec
mov
int
inc
and
pop
aad
sub
in
xor
pop
fildll
cmpsl
insl
sub
lret
fs
cmc
xor
dec
adcb
int
movsb
sarl
cwtl
inc
pop
mov
and
lods
cld
sti
loope
xchg
fcmovne
push
pop
scas
adc
ds
push
cld
inc
enter
outsb
xchg
xchg
or
cmp
stos
fisubrs
dec
push
xchg
out
inc
xor
addl
repz
and
adc
xor
jne
push
loope
nop
jg
inc
add
out
mov
leave
loop
les
mov
sti
mov
or
notb
push
enter
aas
out
dec
xchg
rcr
pop
das
add
in
pop
aaa
movsl
sub
cli
and
psubb
and
sbbl
shrl
jp
ret
sti
lret
rcll
xchg
ja
fs
pop
incb
loopne
dec
mov
leave
loop
push
cwtl
xchg
mov
gs
and
pushf
inc
sub
jge
cwtl
fdivl
inc
add
movb
fldl
data16
pop
pop
dec
jo
mov
test
push
cwtl
pop
orb
test
lea
mov
imul
ss
aad
aam
mov
mov
and
dec
sbb
adc
or
xlat
pop
scas
fisubrs
push
aas
repnz
orb
adc
mov
push
mov
xor
xchg
mov
or
jp
push
stc
or
int
lods
pop
nop
dec
les
adc
jg
aad
and
gs
lret
nop
jae
cmc
fildll
mov
and
fsts
push
pop
adc
mov
xchg
inc
cmpsb
les
int
in
int
pop
scas
loop
inc
add
mov
shll
mov
or
icebp
adc
pop
lods
sbb
adc
sub
mov
popa
into
mov
inc
or
mov
lds
lahf
mov
and
xor
mov
xchg
rcr
dec
xor
movsb
jns
mov
adc
ret
inc
xchg
pop
sbb
in
cli
leave
leave
in
dec
add
cmp
fistps
mov
push
add
icebp
fiaddl
adc
mov
xchg
loop
mov
aam
clc
and
clc
fcoms
cwtl
imul
scas
data16
sub
aam
and
loopne
inc
std
data16
je
lods
insb
xor
dec
ret
pop
mov
xor
add
adc
data16
sti
sub
push
pusha
push
mov
adc
jecxz
and
mov
in
arpl
xabort
adc
test
enter
adcl
xchg
sahf
jmp
jb
adc
pop
mov
push
inc
jne
jge
dec
out
add
outsl
das
add
test
mov
repnz
jno
sub
mov
adc
roll
sbb
aas
mov
jne
xchg
mov
enter
lcall
mov
and
jle
xlat
hlt
xor
dec
and
mov
mov
les
sahf
loop
lds
shlb
xor
mov
cli
cmp
imul
daa
fst
ret
cmc
sub
out
mov
cmc
int
inc
pop
outsb
dec
dec
mull
push
cld
ret
mov
xchg
ljmp
ss
adc
popf
jo
fmul
aam
add
lret
add
lock
aas
dec
mov
sub
or
outsl
inc
imul
dec
mov
push
cwtl
je
push
adc
add
scas
fmulp
iret
push
lds
and
inc
out
negb
adc
lret
fdivl
stc
adc
xchg
pusha
shll
roll
xor
mov
mov
xchg
jb
arpl
or
xlat
repnz
jmp
arpl
ss
ja
xor
xor
bound
mov
xor
jo
cmp
fincstp
push
jl
stc
mov
testl
adc
out
xor
jae
and
cmp
jno
clc
dec
mov
push
popa
mov
dec
cvtpi2ps
adc
loope
xor
in
ret
push
fwait
xchg
int
mov
push
orb
aam
jno
jmp
movups
inc
fisubrs
jp
fcom
repnz
sub
mov
or
mov
loope
xor
idiv
inc
js
cmpsb
xchg
les
in
mov
xchg
sub
add
mov
lahf
jbe
test
mov
mov
xlat
lahf
mov
insl
imul
call
mov
cmovb
sbbb
mov
insl
shll
repnz
xor
push
inc
ret
push
mov
jo
cmpsb
adcb
inc
enter
stos
add
dec
xchg
mov
ret
movsl
xchg
mov
fldt
xorb
rorb
dec
push
stos
cmpb
push
push
mov
out
or
and
arpl
inc
jl
mov
imul
push
push
sub
xor
pop
in
aad
xor
mov
sub
mov
lcall
add
cmp
test
cld
mov
and
iret
out
inc
in
popf
ret
mov
pop
ficompl
dec
add
std
inc
or
adc
xor
mov
mov
andb
fistpl
xlat
fdivrl
push
enter
jge
lahf
loopne
sub
bnd
mov
imulb
jbe
mov
xchg
icebp
cmp
out
aaa
call
cwtl
cli
jnp
cmp
ss
loop
scas
and
pop
ret
leave
out
mov
testl
out
and
fsubl
bound
arpl
cmp
jmp
mov
pop
addb
mov
cmp
sbbl
nop
mov
mov
daa
into
sub
mov
lock
aad
das
cmp
xor
push
pop
nop
xchg
cmp
sbb
push
or
adc
add
mov
subl
sub
mov
cld
addb
mov
rcrl
push
mov
bound
imul
test
mov
or
popa
pop
cmp
and
and
lods
std
clc
mov
leave
cmp
cmp
test
inc
pop
sbb
je
xor
jle
ljmp
mov
dec
cs
jl
jae
outsl
and
in
or
out
inc
and
insl
or
ret
int
movsl
xor
push
mov
or
lds
addr16
ret
cld
cmp
mov
out
pop
dec
lods
cwtl
sbb
int
test
loopne
jp
adc
push
fdecstp
aad
scas
mul
ljmp
subb
stc
xchg
sub
ljmp
push
xor
pop
dec
sbbb
mov
push
jle
inc
or
sub
xchg
xor
mov
add
pop
insl
add
cmc
dec
test
out
xchg
sub
jne
mov
and
lcall
xchg
jno
cmp
jecxz
push
mov
bound
jle
ds
push
test
inc
and
scas
fdiv
and
inc
dec
lock
test
adc
sahf
mov
xor
mov
lret
fucomi
in
ljmp
int3
mov
xchg
mov
int3
repz
cmp
and
cltd
mov
mov
imul
jge
cld
rcrl
lock
mov
aad
stos
fimull
push
in
pusha
clc
adc
ss
pop
mov
jle
scas
iret
add
adc
pop
aas
xchg
divl
inc
sub
out
add
push
psllq
loop
push
sahf
movb
mov
ss
push
dec
pop
ja
and
das
repz
push
dec
addr16
mull
outsb
add
in
cmc
inc
adc
lea
xchg
mov
xchg
xchg
and
jns
jmp
xchg
jge
mov
out
cmp
pop
xchg
pop
or
mov
push
int3
cmp
cmp
sub
fstl
mov
in
dec
push
pop
or
jnp,pn
mov
daa
mov
jecxz
or
xchg
pop
and
insb
cmp
jbe
cmp
je
jecxz
mov
jae
test
outsl
cmp
std
pop
leave
mov
rorb
sub
aad
int
xchg
cmpsb
sbb
rcrl
scas
inc
sarl
addr16
xchg
ror
xlat
push
push
sub
iret
adc
adc
jecxz
lcall
int
add
aam
jp
xchg
and
dec
nopl
adc
mov
xchg
xor
pop
and
adc
or
sarl
sub
popa
ljmp
cmpsb
int
int3
out
add
lods
mov
mov
dec
ja
inc
iret
stos
or
mov
or
addr16
ja
int3
scas
icebp
adc
insb
adc
jae
jp
sahf
xchg
adc
lret
mov
mov
js
pop
jbe
mov
jb
jae
jb
rol
mov
test
add
jle
mov
jns
jae
mov
sbb
mov
fwait
sub
je
ss
hlt
dec
jns
or
push
in
or
rolb
orl
js
call
or
loopne
or
shll
mov
adc
adc
ja
adc
mov
fistpll
fnstcw
mov
mov
mov
leave
sub
add
ret
cmp
sbb
shr
add
mov
dec
pop
icebp
or
ss
das
mov
pusha
dec
inc
movsb
aaa
pop
xor
jmp
loopne
and
and
jno
mov
push
pushf
xchg
sbb
enter
inc
lcall
and
sub
mov
mov
cwtl
in
lds
jle
into
rcrb
push
fistpl
add
sub
xchg
movsb
mov
xchg
and
mov
add
mull
test
rcrb
cmp
jmp
inc
in
shll
xchg
stc
dec
xchg
das
pop
call
in
push
int
inc
add
mov
hlt
mov
out
pop
repz
aad
out
pop
sbb
push
and
test
stos
shr
and
mov
ret
andl
out
dec
stos
and
les
faddp
dec
inc
xchg
loop
push
push
scas
aas
push
js,pt
xchg
mov
inc
jno
aaa
pop
test
sbb
jmp
frstor
xor
mov
push
and
lock
aad
sti
sbb
subb
mov
pop
xchg
aad
scas
push
jmp
stos
inc
mov
add
movsb
add
orb
out
or
mov
lock
mov
shl
mov
les
and
sub
das
inc
lret
arpl
mov
test
jb
and
jb
mov
jl
sti
pusha
push
pusha
jmp
test
push
mov
inc
je
stos
mov
cli
jbe
inc
pop
cmp
stos
clc
mov
push
mov
xchg
ret
or
les
sahf
stos
jbe
in
subl
inc
xor
jl
jo
movsb
inc
adc
sbb
dec
leave
pop
push
popl
loop
xchg
pop
idivb
or
sbb
gs
pop
imul
cmc
ds
cli
jns
hlt
in
testl
adc
imul
pushf
cmp
xchg
jno
xor
mov
mov
call
orl
push
ret
shrl
movsl
mov
and
out
mov
ljmp
cwtl
mov
add
mov
test
xor
add
mov
fs
xchg
cmp
into
jae
les
mov
rolb
or
mov
arpl
ret
jae
xchg
call
jge
sbb
fsubrp
add
loope
xchg
or
rcl
cmc
jp
test
aaa
fs
mov
adc
bound
lcall
xor
inc
repz
jno
in
jo
push
jecxz
mov
xchg
into
push
mov
repz
xchg
and
mov
fwait
neg
push
stc
cmp
mov
adc
push
dec
popf
addb
inc
pop
scas
lods
and
xchg
fnsave
movsb
pushf
adc
mov
in
out
insl
psrlq
les
stos
out
in
jo
loopne
lret
and
xor
jae
xchg
fs
cmp
mov
jmp
jmp
push
inc
data16
sub
lahf
push
in
lret
adc
jne
adc
and
andb
add
cs
nop
loope
frstor
push
outsb
jns
fs
iret
jne
jno
mov
enter
inc
imul
mov
jmp
add
inc
sub
leave
cwtd
adcb
pop
repnz
sub
push
dec
fisttpl
and
addb
js
mov
adc
call
ss
jbe
enter
jnp
push
int3
inc
je
loop
cmovo
in
imull
add
inc
cmp
xchg
mov
push
test
cmp
js
dec
mov
fcoml
push
mov
mov
cmp
lcall
inc
or
push
mov
leave
inc
jl
lea
xlat
xchg
jle
je
popa
jp
add
loope
js
call
or
or
dec
aad
mov
cmp
jl
pop
loop
mov
cmp
sarb
dec
and
mov
dec
xchg
xor
sub
dec
negb
pop
pushf
and
cmpsl
pop
and
mov
add
jl
loop
cmpsl
jbe
stos
imul
outsl
flds
test
movsb
lahf
ror
xchg
or
push
icebp
pop
sub
cld
jp
pop
stos
xor
lret
loope
jle
roll
cmc
pushf
enter
test
jb
jne
and
inc
mov
data16
xlat
push
sub
or
movsl
aad
or
fidivs
xor
cmp
mov
jp
fldl
incb
xchg
outsl
cld
test
or
fisttps
mov
stos
mov
scas
ret
jg
aam
push
xchg
add
mov
je
cmpsb
aam
test
popa
fiadds
ljmp
sub
xor
lods
insb
das
fst
or
fdivrs
insl
cmp
dec
fmul
push
outsl
push
mov
xchg
sbb
adcl
mov
ja
sbbl
mov
pushf
mov
mov
data16
mov
int
cli
adcb
sub
push
leave
bound
xchg
adc
adc
rcrb
pop
xchg
ss
shrb
nop
push
cmpsb
rorl
ja
and
xor
loope
sbb
mov
push
hlt
and
pushf
aam
pop
test
lea
sub
or
js
imul
and
je,pt
loopne,pn
and
popa
pop
and
mov
add
imul
mov
sub
pop
jbe
jle
call
cli
mov
fnstsw
push
jo
mov
dec
lds
add
push
ljmp
icebp
aam
add
sbb
push
jo
push
adc
lcall
gs
jb
xchg
popa
jae
cmp
mov
out
subb
xor
call
push
cmpsl
test
mov
lret
mov
fildl
fistl
sti
push
push
jle
cld
sbb
add
pop
xchg
sbb
popf
rcl
add
cltd
pusha
lahf
cmp
push
repnz
scas
push
pop
enter
roll
and
subl
inc
xor
push
movsl
out
lret
sub
gs
mov
fisubrl
pop
bound
scas
enter
dec
pop
add
jb
push
inc
cmp
mov
addl
test
stos
inc
in
lods
cmc
insb
cmp
popa
adc
jae
fstps
xor
mov
pop
xor
sahf
popl
loop
aas
mov
das
sbb
jns
pop
mov
cld
push
push
mov
or
inc
pop
inc
mov
daa
insl
adc
test
lret
cli
dec
mov
fistpl
mov
lock
repz
ret
fwait
out
cwtl
push
mov
or
ljmp
inc
push
or
xchg
loopne
sbb
pop
gs
mov
sti
mov
push
dec
lret
fcoml
pop
xor
dec
pop
mov
sbb
lods
pop
mov
push
push
iret
loopne
xor
out
sub
lret
test
stos
test
aaa
jbe
mov
mov
lahf
cmp
xor
adc
inc
and
jns
adc
icebp
js
lds
js
xor
test
sbb
dec
push
lahf
cld
stos
fs
dec
jbe
lret
pop
test
ror
call
xor
jae
mov
rol
and
clc
out
scas
movsl
into
and
sub
xor
jne
icebp
pop
lahf
add
fldt
dec
xor
fistpl
mov
mov
jg
insb
cmp
mull
push
pop
ds
jge
inc
bound
mov
ljmp
or
pop
inc
inc
imul
mov
scas
test
xchg
sahf
fldcw
sbbl
daa
test
dec
aaa
incb
jns
adc
xor
enter
daa
xor
pop
xlat
mov
lcall
sti
cmpsb
scas
shll
xor
mov
mov
mov
insb
mov
push
popf
arpl
aaa
divb
pop
scas
mov
push
adc
shlb
cmp
pop
bound
xor
cmp
sub
xchg
fmuls
loop
cmc
cwtl
pop
test
mov
push
or
pop
sarb
in
repz
pop
test
in
cmp
fistps
ret
mov
js
jo
and
movsl
cmpsl
pop
xor
mov
push
xchg
outsb
cmp
movd
pop
movsl
xlat
mov
das
add
icebp
std
xchg
nop
and
sbbl
fldenv
jecxz
adc
pop
nop
int
jge
orl
inc
add
fisubs
pop
sbb
rcrl
ret
pushf
sub
aas
mov
or
daa
jns
cmp
mov
ja
in
push
imul
mov
jbe
and
and
mov
mov
pop
mov
enter
and
xchg
push
ret
adc
xchg
mov
loop
aas
or
mov
mov
add
push
push
popa
mov
outsb
fcompl
lret
push
jo
xor
dec
lret
inc
popf
outsl
movsb
pushf
movhps
pop
mov
xorb
push
loopne
ljmp
pop
mov
jle
adc
stc
xchg
ljmp
pushf
les
mov
cmp
mov
int
outsl
je
sarl
pop
dec
pop
dec
cmpsl
bound
fbld
inc
jmp
sahf
mov
loop
aad
lret
inc
or
xchg
in
nop
leave
jp
std
mov
pop
inc
rcrb
clc
movsb
sbb
test
nop
inc
cltd
int3
outsl
jb
add
xchg
mov
add
lcall
loopne
loop
lock
fiadds
stos
jb
mov
stc
jecxz
stos
popa
and
ds
cmp
out
dec
dec
mov
or
push
adc
mov
sub
jbe
dec
int3
jns
cmpsb
mov
mov
mov
or
mov
cmp
loopne
lahf
cli
frstor
sbbb
ret
sub
push
mov
es
xabort
sbb
sbb
adc
mov
mov
pusha
sub
ljmp
mov
sub
push
inc
jnp
sbb
pop
ss
jge
nop
movl
cltd
inc
xor
sub
rcll
push
aad
movsb
pop
inc
roll
dec
ljmp
mov
roll
push
pop
aad
movb
cmpsb
mov
in
mov
mov
movsl
movl
stos
cmp
insb
js
loop
sbb
dec
xor
idivb
lcall
test
daa
sti
mov
push
leave
rcr
sub
je
xchg
test
mov
dec
inc
lods
pop
jl
mov
mov
icebp
pop
mov
ret
sbbl
lods
dec
aad
lea
test
clc
scas
out
cmp
in
loope
aas
aad
pop
add
push
jae
jmp
sbb
and
lcall
shrb
xchg
das
pop
xor
out
sbb
sub
push
insl
les
in
loopne
test
neg
jge
in
int
xchg
and
fidivs
in
lret
insb
out
fldl
mov
and
mov
xchg
cmc
adc
mov
movsl
dec
cmp
pop
xchg
iret
pop
loope
das
mov
adc
dec
xchg
sub
push
decl
outsl
sub
add
push
mov
jmp
lea
dec
pushf
jecxz
out
insb
scas
outsl
inc
fstp
mov
test
loop
xor
ljmp
imul
rcrb
or
and
into
test
and
xchg
daa
mov
repnz
xchg
and
mov
xor
adc
bound
test
jmp
ficomps
and
lds
inc
or
ficomps
test
jp
mov
mov
cmc
push
dec
cmc
jae
dec
jge
jne
dec
xchg
xor
add
adc
cmp
les
jbe
jb
mov
jae
jmp
insb
sbb
mov
icebp
push
imul
mov
adc
daa
fildll
dec
ss
js
enter
jecxz
aaa
aad
sub
lcall
pop
mov
mov
imul
inc
sub
cmp
sbb
xorl
lret
push
push
or
push
sub
std
sarl
lock
xchg
lods
into
fcoms
addr16
cmpl
mov
cmp
roll
push
scas
test
dec
push
cmpb
sbb
push
outsb
sti
dec
in
aam
inc
cmpsl
dec
mov
xchg
cs
inc
insl
data16
mov
mov
dec
push
insl
push
lods
push
aam
add
jbe
inc
inc
out
inc
out
jne
push
add
mov
lds
sbb
cld
jo
mov
and
hlt
jae
cmpsl
shlb
mov
jno
div
cltd
pop
sbb
adc
push
popf
pop
mov
pop
insb
mov
sbb
mov
jnp
bound
insb
adc
or
js
movsb
cmp
es
inc
rol
cwtl
outsl
inc
fwait
jecxz
icebp
sti
data16
jb
jl
pop
es
test
cmpsb
test
adc
inc
push
mov
mov
pop
pop
dec
mov
mov
push
enter
cld
outsl
jae
popf
xor
pop
sbb
xchg
aam
mov
or
or
cmp
jmp
stos
mov
mov
out
push
pop
ret
inc
loop
fwait
out
dec
pop
xor
xchg
loope
sbb
push
pop
shr
mov
cmp
add
cmp
movsl
mov
in
or
push
mov
fwait
and
sub
inc
aas
popa
adc
jae
xchg
jno
mov
mov
jno
cmp
mov
adc
loop
push
mov
push
adcb
mov
cmpsb
lds
inc
pop
sub
dec
adc
mov
push
sarl
test
dec
sub
or
inc
imul
cmc
imul
daa
mov
and
mov
bound
lahf
or
getsec
fsubrs
je
into
sbbl
ret
push
sahf
rcl
shll
and
pop
mov
sub
push
jl
dec
mov
cmp
jmp
jno
fimuls
fwait
or
mov
rolb
movsb
jno
push
adc
cmp
sub
lds
dec
inc
rcrb
decb
hlt
adc
aaa
xor
jmp
pop
lea
mov
ret
sbb
xlat
imul
adc
into
imul
xchg
mov
sarb
out
mov
std
jnp
int
pop
popf
push
jp
lret
iret
mov
movsb
jge
xchg
or
xor
add
arpl
cmpsl
ds
pop
adc
dec
or
xchg
ds
mov
ja
sbb
mov
es
stos
xchg
sti
stos
ss
test
cmp
cmc
je
loopne
mov
jbe
mov
mov
mov
es
mov
mov
jnp
fs
div
adc
jmp
adc
inc
push
xor
xchg
lods
pop
sarb
dec
pop
dec
aaa
cmpsl
push
mov
sbb
scas
or
sub
xchg
into
stos
or
and
sahf
xchg
pop
sarl
rorl
out
addr16
ret
pop
jge
ja
dec
ss
fmuls
and
sub
in
mov
add
lds
dec
fnstcw
les
pop
inc
aam
cwtl
fnstcw
pop
push
ds
mov
cmp
repz
test
sub
xor
ficomps
inc
fsts
or
ret
scas
dec
outsl
ss
imul
idivb
mov
daa
mov
insb
pop
add
adc
jb,pn
jbe
insl
in
sub
rcrb
adc
stos
subb
subb
and
mov
mov
sbb
sub
stc
ret
fs
test
cmp
dec
pop
sub
mov
mov
mov
or
cmp
iret
iret
jo
jb
loopne
xor
adc
jp
inc
cmpxchg
call
jnp
bound
dec
fcmovb
push
push
add
bswap
cli
mov
mov
mov
and
jl
loope
adc
adc
out
xor
cs
push
push
adc
stos
or
sahf
mov
add
push
pop
sbb
mov
lods
aaa
xchg
fldenv
mov
adc
pop
insb
repz
sbb
fiadds
sbb
cs
inc
test
jnp
testl
mov
mov
jp
or
mov
xchg
fildll
sbb
dec
scas
sub
test
or
or
jl
int3
inc
cmc
pop
xor
sub
rcrl
sub
popa
adc
adc
fidivs
add
arpl
dec
aaa
pop
adc
inc
adc
ja
xchg
loop
xbegin
mov
sarl
push
add
pop
jnp
cs
mov
inc
pop
adc
adc
hlt
or
aad
pop
cli
andb
jecxz
paddusw
nop
shlb
roll
push
jbe
mov
cmpsl
icebp
inc
outsb
fwait
or
ret
pop
incb
pop
cwtl
lock
mov
dec
adc
push
or
pop
xor
sarb
add
jecxz
lea
xor
push
xchg
imul
fistpll
mov
xor
dec
ja
push
mov
dec
or
and
dec
jns
lods
dec
fcomip
dec
andps
movsb
xchg
dec
in
out
xchg
push
sub
fldcw
arpl
jnp
lea
popa
and
std
dec
adc
inc
jae
mov
xor
mov
cmp
aaa
inc
sar
add
jnp
xchg
adc
clc
mov
dec
addr16
lret
gs
dec
imul
jbe
inc
pushf
sbb
pop
jl
jge
xor
cwtl
adc
jmp
adc
repnz
xor
jecxz
outsl
dec
mov
push
out
or
nop
inc
pop
mov
iret
inc
xor
and
and
bound
push
pushf
outsb
sbb
xor
add
xchg
das
roll
orl
pop
mov
jg
stc
jg
xorb
and
dec
out
push
in
mov
stos
mov
ljmp
stc
rcrb
dec
cmc
cmp
insl
jb
lods
je
push
fdivr
jo
adc
push
xchg
not
test
push
aam
push
test
mov
pop
lock
loope
dec
stc
or
and
xchg
std
mov
jecxz
fimull
xchg
xor
mov
lret
imul
push
mov
push
jp
xchg
xchg
aas
push
cmp
add
dec
icebp
mov
jne
sahf
cmp
cltd
add
lret
sub
add
pop
inc
jbe
fcoml
mov
mov
jns
incl
or
xchg
push
sbb
sahf
xchg
or
xchg
dec
mov
imul
adc
add
shlb
gs
test
ret
outsb
mov
insb
xor
and
loopne
loopne
adc
xchg
cwtl
mov
pushf
jo
mov
pop
mov
cmp
daa
sahf
sub
rclb
mov
or
xchg
xchg
jmp
adc
scas
fildl
pushf
and
cli
movl
sub
mov
push
scas
and
aaa
in
jl
or
lret
aaa
xchg
sahf
mov
es
decb
mov
jne
mov
test
inc
jmp
jl
xor
fucomp
sub
push
or
adc
mov
push
out
xchg
cmp
and
adc
int3
in
xacquire
leave
std
hlt
fwait
dec
inc
jmp
in
cli
sub
mov
push
fs
mov
pop
adc
add
negl
les
inc
push
add
adc
fdivrs
jg
push
andb
push
cmp
fdivs
mov
gs
sar
add
ret
adcb
jecxz
stos
das
adc
in
xor
mov
adc
mov
xchg
scas
xchg
es
push
fsub
mov
stos
inc
and
dec
fstpt
mov
shr
add
or
ss
cmp
int
insl
sbb
repnz
not
arpl
xor
out
dec
mov
sbb
xor
jl
jne
pop
pop
jmp
int3
adc
out
xor
xchg
imul
pop
xchg
pushf
mov
loopne
shl
push
jne
scas
addr16
jl
dec
mov
or
xchg
filds
test
inc
jno
adc
stc
insl
fwait
or
mov
add
in
pop
and
mov
bound
out
xchg
mov
pop
je
cmp
sub
ljmp
daa
addr16
sub
sbb
push
das
cmp
nop
pop
xor
mov
push
gs
xchg
popa
mov
cmp
mov
push
jns
in
sub
aad
dec
mov
dec
add
outsb
addr16
scas
ret
fsubrl
push
sub
mov
dec
ljmp
ljmp
jmp
sub
es
in
cmp
andl
jnp
sbb
mov
xorb
push
push
clc
cmpsl
pop
xchg
xor
loope
cmp
adc
mov
add
addl
dec
mov
mov
jbe
ret
cmp
pusha
lea
idivb
inc
mov
mov
add
mov
sub
aam
aaa
in
inc
mov
xchg
pop
test
in
pop
test
lds
jb
jg
leave
jecxz
dec
xchg
pop
jmp
mov
and
loope
and
and
aad
aam
adc
xor
adc
sub
sbb
nop
je
imul
les
adc
sbb
sub
shll
jo
jge
xchg
shrb
outsb
pop
loope
adc
jecxz
push
pop
fs
lret
dec
mov
jne
and
or
addl
pop
addr16
push
pop
adc
arpl
mov
iret
js
out
dec
push
pushf
mov
mov
add
repz
cmp
push
hlt
clc
inc
ljmp
pop
mov
sbb
inc
inc
scas
or
adc
push
jl
mov
adc
jne
subl
int
xor
movsb
sarb
rcr
aad
mov
fstpl
mov
ret
mov
es
out
cmp
or
sbb
mov
cmp
pop
jmp
pop
pop
dec
sub
inc
outsl
clc
push
and
fwait
lea
xchg
daa
hlt
inc
rorb
adc
insl
mov
ret
xor
add
es
cltd
adc
mov
and
jmp
dec
adc
insl
push
add
cli
cltd
scas
cmpl
sub
jno
lock
shll
adc
and
in
in
push
xchg
add
push
dec
scas
dec
mul
jnp
das
or
or
aaa
and
loope
mov
test
call
jmp
xlat
leave
dec
inc
adc
inc
cmc
arpl
adc
push
push
mov
add
mov
scas
and
mov
fdivr
in
fcoms
dec
cs
aam
stos
fldcw
jl
daa
cs
inc
adc
xor
or
cmp
xchg
out
lods
outsl
lahf
out
outsl
xchg
aaa
push
mov
jnp
push
cmp
xor
int
lcall
dec
mov
mov
gs
sub
stos
xlat
xor
ja
push
mov
pop
dec
mov
shlb
pop
xchg
pop
cmp
and
clc
dec
mov
movsb
mov
pop
adc
jmp
scas
cmp
int3
xor
push
xlat
sahf
std
fsub
out
fcmovne
jge
push
push
fsts
in
in
mov
xor
mov
or
jmp
mov
add
lcall
and
cmp
xor
mov
fs
push
sbb
mov
insl
addr16
mov
mov
inc
das
adc
lea
jne
pop
mov
out
leave
aad
or
xchg
out
and
jb
xor
pusha
push
xchg
js
add
pop
incl
clc
jne
jp
jo
or
pop
div
mov
add
in
push
sahf
sub
cmc
add
mov
cmp
mov
mov
enter
xor
xlat
in
dec
mov
cltd
mov
jmp
push
mov
and
xchg
iret
imul
jo
add
js
cmp
lret
xchg
pusha
fimull
and
push
jo
xchg
scas
ja
adc
and
in
icebp
lods
push
mov
je
fs
sbbb
insb
insb
dec
dec
push
outsb
xor
mov
mov
fs
jg
push
jnp
rcrb
into
lds
add
loopne
pop
call
in
inc
out
je
fidivrs
dec
negb
test
cmp
add
and
rcrb
or
arpl
sbb
inc
mov
fcmovnbe
out
nop
arpl
push
ds
jnp
lods
insl
icebp
xchg
pushf
out
test
xor
loopne
imul
push
stc
pop
lret
xor
fsubrp
adc
xor
add
mov
imul
xlat
push
mov
imul
test
xchg
pop
or
stc
std
sub
xor
out
and
lea
and
orl
inc
es
add
fists
and
add
in
mov
insb
lds
push
jo
jno
fwait
sahf
or
sbb
inc
sub
ds
sub
fs
pop
out
leave
add
stos
sbb
xor
fidivrl
sub
ja
imul
sbb
out
xchg
xor
clc
test
inc
mov
loopne
mov
xor
pop
mov
sahf
adc
cwtl
sbb
rcr
incb
jmp
push
or
inc
cmpsl
repnz
test
jg
lret
and
rolb
mov
ror
jl
leave
mov
cld
mov
jp
push
mov
mov
mov
lds
xorl
out
mov
fiadds
jne
fdiv
leave
fwait
lock
ds
incl
insl
outsb
jge
ficoml
or
insl
lret
repz
sbb
sbbb
pop
xchg
andb
aam
lcall
sub
mov
fstpt
sahf
pop
sbb
dec
mov
ljmp
test
jne
fwait
stc
out
add
mov
ds
cmp
jg
lahf
out
mov
mov
mov
cmp
cmp
jg
sub
xchg
mov
ja
xchg
or
add
cld
lods
popl
ljmp
pop
pop
fwait
popf
xor
lock
jo
test
mov
lods
inc
mov
lds
push
cmp
out
loope
fwait
and
js
pop
aam
mov
cmp
add
push
sub
je
data16
lcall
jne
sub
popf
add
in
mov
into
inc
mov
dec
mov
mov
inc
adc
test
mov
repnz
clc
mov
cmp
push
cs
adc
cli
loope
pop
sbb
test
xor
xchg
dec
mov
dec
adc
cmp
das
push
das
lcall
stc
scas
and
push
sub
leave
adc
test
pusha
test
xor
cmp
mov
push
cmpxchg8b
into
jae
mov
lret
inc
loope
jbe
das
add
repz
lret
addr16
out
mov
fmull
sub
jmp
dec
loopne
cmp
popa
test
stc
dec
dec
ret
sub
outsb
mov
js
je
ss
dec
inc
inc
hlt
add
imul
enter
fimuls
xor
sub
mov
outsb
jl
repnz
je
jnp
orl
popa
lea
mov
jmp
mov
xchg
lret
sub
or
sti
mov
and
icebp
pop
cmc
ret
push
mov
xchg
dec
shrl
mov
cmp
and
pop
xchg
pop
std
cmp
jb
jnp
pop
pop
icebp
xor
ss
xlat
aaa
aas
sti
dec
mov
xchg
jl
into
fisttps
lcall
jle
loopne
dec
lahf
inc
cmc
cli
jnp
xchg
push
xor
sti
xchg
shll
das
pusha
mov
iret
dec
pop
lret
mov
dec
mov
shl
push
pop
mulb
push
test
jb
sub
jns
cmp
stos
and
in
mov
xchg
push
movsl
loopne
arpl
jge
ret
insb
jp
xchg
pop
enter
xor
xor
cwtl
inc
mov
mov
adc
dec
inc
negb
sti
adc
jmp
lahf
lea
add
mov
or
mov
fidivl
sub
and
fdivrs
or
mov
stos
ficoml
adc
mov
sub
fs
shrl
jl
jl
sub
sbbl
cmpsl
jb
add
cmovp
xchg
ret
xchg
add
lret
push
or
shll
and
and
movsb
inc
test
int
nop
mov
and
pop
ja
negl
mov
sti
dec
sub
repz
loop
dec
mov
insl
inc
inc
jl
outsl
jg
nopl
test
push
vcvtss2sd
lods
jle
mov
inc
sti
test
pop
mov
adc
xor
call
mov
cwtl
mov
mov
adc
add
repz
pop
push
dec
xor
in
popa
into
fldl
fistpll
ss
add
xchg
std
xchg
insb
or
incb
xor
sbb
xchg
xor
fwait
cmp
add
loop
movsb
faddl
xor
stos
pop
sub
ljmp
mov
or
mov
les
in
jae
fsubrp
sahf
push
mov
dec
stos
jbe
and
xor
push
int
mov
addl
sub
fcmovnu
lods
sbb
in
xchg
loop
and
jle
and
jle
popa
pop
mov
js
jge
mov
mov
lahf
aaa
pop
mov
lret
rol
mov
sub
mov
lods
iret
jp
fstps
add
adc
xlat
test
mov
or
fwait
cmp
stos
leave
sbb
leave
insb
jno
sub
mov
mov
cmp
mov
das
xor
mov
cmp
scas
outsb
leave
push
adc
fimull
push
push
je
mov
lret
pop
icebp
je
jecxz
rcrb
add
cmp
xor
pop
and
sbb
jmp
mov
mov
jo
std
nop
ja
fstps
lea
into
fisttpll
adc
inc
add
pop
sub
adc
xlat
lods
xlat
cmp
outsl
mov
clc
xlat
inc
pop
imul
sub
dec
add
sub
add
and
adcb
xor
sbb
pop
and
adc
addr16
rclb
sar
scas
adc
jg
xchg
test
ja
cltd
cwtl
mov
inc
mov
lcall
popa
jmp
stos
push
jmp
lahf
cmp
pop
jae
mov
sbb
adc
sub
adc
mov
jns
or
mov
jae
mov
dec
inc
mov
xchg
sbb
fisubs
aam
aas
push
xchg
movsb
xor
shll
scas
popf
inc
into
movsl
int
lods
ljmp
xchg
in
mov
xlat
mov
jae
dec
adc
dec
subb
push
pop
insl
cmp
test
lcall
fcmovb
inc
out
int3
xlat
jo
inc
xlat
push
adc
xor
test
dec
dec
inc
loopne
leave
leave
stos
or
pop
or
mov
push
add
pop
sub
in
cwtl
aaa
xor
lock
ficoms
pop
xor
pop
inc
movsl
mov
mov
test
movsl
idivl
xor
sub
cmp
mov
lods
lods
lock
data16
gs
fst
andps
je
jb
jmp
pop
cltd
testl
mov
jle
fdivr
sub
push
and
in
jle
ljmp
inc
fcompl
leave
stos
xorl
stos
dec
sahf
mov
pop
add
decl
notl
mov
xlat
mov
ja
ja
movsb
pop
or
sub
sahf
cmpl
cmpsl
inc
sub
leave
mov
adc
dec
xor
add
xlat
push
and
out
jnp
rorl
popf
decl
fists
or
inc
jl
or
jns
or
sbb
lret
cs
fisubl
xchg
inc
pop
xor
mov
or
js
dec
jle
push
hlt
cmp
les
vunpckhps
adc
leave
xor
pop
es
add
hlt
mov
mov
loop
fwait
xor
inc
push
mov
aad
pop
mov
xlat
mov
xor
jb
or
adcb
mov
pop
repnz
sahf
xor
push
mov
movsb
test
push
sahf
outsb
into
push
adc
sub
lods
or
lods
testb
mov
inc
test
icebp
fdivrl
xabort
push
jno
rclb
xor
add
leave
and
rolb
in
in
sti
iret
and
jno
cmp
sub
sub
mov
mov
pop
test
js
cmpb
test
sub
mov
enter
jle
test
mov
lahf
jbe
jg
not
mov
pusha
test
mov
call
push
stc
push
or
xchg
adc
xor
pop
xor
mov
outsl
add
pushf
mov
aad
add
mov
push
jno
cmpl
jnp
cmp
and
mov
frstor
and
push
mov
movsb
sbb
dec
int
mov
fidivl
mov
ret
daa
and
lcall
or
pop
hlt
dec
ljmp
sub
fnstcw
xchg
jg
scas
hlt
push
shrb
jae
fiadds
aas
jb
repz
sbb
sbb
jle
cmpsb
push
leave
mov
inc
cmp
sbb
daa
fs
sub
iret
dec
or
cmpsl
mov
and
es
mov
or
and
stos
push
cmpsl
popf
fmul
fsubp
jmp
sbb
push
shrl
in
adc
out
in
cwtl
repnz
jecxz,pn
or
mov
mov
inc
xor
inc
lods
jmp
fwait
lea
sbb
out
sub
xor
ljmp
pop
es
jl
clc
cld
lret
into
xor
xchg
mov
shrb
fistpl
andb
xorb
daa
ret
popf
arpl
pop
xor
out
loop
jno
ret
adc
jle
test
cmp
fisttpl
sbb
cmc
sbb
sub
mov
inc
lock
and
outsb
mov
daa
pop
ret
imul
sbbl
inc
enter
xor
adc
push
popf
inc
cmc
bound
sub
nop
aas
shlb
lahf
mov
imul
daa
xor
daa
or
test
push
sbb
fidivs
sbb
popa
mov
xchg
mov
jle
mov
xchg
gs
inc
xchg
out
notl
ja
ret
test
add
movl
xor
in
jg
add
add
shlb
mov
mov
fs
or
jmp
enter
ret
movl
loop
pop
int3
int
mov
int3
fistpl
dec
leave
or
int3
mov
cs
cmpsb
push
ss
popf
jb
push
sbb
cmpl
cmpl
sbb
dec
ss
cs
dec
stos
mov
jle
xchg
lea
std
fisubrs
shll
jnp
xor
aas
aas
mov
ficoms
xchg
adc
pop
roll
dec
ja
pop
mov
arpl
jnp
mov
ret
xor
lea
dec
mov
xor
xchg
loop
adc
leave
xchg
dec
push
xor
les
out
mov
jb
push
dec
push
shlb
mov
popa
inc
loop
pusha
lods
xchg
pop
jp
rolb
push
dec
movsl
fildll
xor
cmpsb
cmp
clc
inc
popa
mov
or
xchg
cltd
push
mov
test
cmp
push
cmpl
push
daa
lods
jl
sbb
sbb
addr16
dec
or
shrl
push
mov
adc
or
adc
out
lret
mov
xchg
sbb
inc
sahf
shl
add
stos
shr
mov
pop
dec
and
sub
jg
add
shll
nop
mov
xor
mov
into
or
xchg
pop
scas
xchg
bound
int3
test
gs
mov
xchg
push
fmull
mov
jo
pop
pusha
mov
push
and
cmp
inc
xor
nop
xor
mov
pushf
inc
xor
add
inc
jo
outsb
repnz
mov
cmp
cmp
mov
or
xchg
insl
sahf
push
leave
xchg
pop
or
sub
dec
daa
pop
xchg
sub
adcl
xchg
mov
pusha
xor
clc
xchg
push
jns
cwtl
adc
lahf
pop
jge
add
pop
jle
jns
jae
push
fcompl
out
mov
cmp
roll
jle
call
mov
dec
cmp
lahf
cmp
sahf
pop
cmp
mov
mov
stos
movsl
add
mov
xlat
fiaddl
mov
mov
pop
sub
leave
mov
aad
add
jbe
inc
or
adc
sbb
sub
mov
aam
stos
lds
and
push
or
inc
scas
push
cmp
mov
inc
pop
mov
push
mov
xor
mov
lods
movsl
filds
push
adc
pop
lret
stc
lret
ror
insb
mov
xlat
jge
popf
sub
fidivl
addr16
ror
mov
test
or
and
inc
mov
lock
loop
dec
nop
push
inc
jbe
int3
push
mov
mov
mov
adc
addb
inc
xlat
inc
movsb
jecxz
shll
into
scas
push
jo
add
rolb
jbe
inc
sub
adc
add
mov
mov
xor
dec
dec
inc
popf
push
adc
xor
or
sub
pop
xorb
rol
jbe
mov
mov
mov
sub
in
and
add
xchg
jecxz
addr16
add
pushf
das
jg
ss
aas
js
pop
mov
mov
add
push
inc
mov
in
in
imul
outsb
fstpt
xor
xchg
popa
dec
jno
or
outsb
adc
mulb
cmpsb
fstpl
xor
insb
sarb
imul
repnz
or
ss
repnz
int3
pop
mov
inc
mov
sub
mov
fsubrs
stos
mov
xor
lods
aad
fdivr
orl
cltd
fwait
dec
mov
test
push
dec
mov
cmp
or
xor
out
les
aas
inc
jnp
jb
sub
xchg
push
mov
mov
mov
cwtl
xchg
aad
pop
or
lds
cmp
shr
int
imul
out
sarl
adc
inc
jno
xchg
mov
push
ret
leave
mov
mov
jmp
jbe
loop
idivl
mov
lods
test
and
push
imul
lds
dec
push
data16
mov
inc
aas
mov
mov
pop
push
fwait
test
mov
das
cwtl
lds
mov
stos
inc
jo
mov
pop
fpatan
add
add
cmp
pop
mov
pop
xchg
ds
xlat
insb
repz
adc
iret
jmp
leave
mov
jmp
fwait
ret
cmp
jne
sub
cmpsb
xor
hlt
gs
or
fwait
imul
mov
sub
ret
mov
cmp
push
inc
mov
cmc
xchg
mov
jb
mov
in
fnstsw
fstl
ds
xor
xor
xchg
outsb
mov
nop
xor
adc
pop
inc
orl
jb
lret
test
dec
into
push
xor
jns
adc
push
icebp
push
pushf
ja
mov
sbb
imul
push
arpl
jno
arpl
fmulp
mov
test
jp
xchg
mov
inc
xchg
ss
mov
fmulp
mov
pop
leave
jecxz
dec
jnp
dec
mov
sbb
dec
xchg
loope
fbstp
fidivl
loope
and
sbb
push
dec
mov
stc
sub
out
dec
mov
repz
and
xchg
icebp
mov
jo
jb
inc
mov
inc
das
daa
iret
test
dec
jg
cmp
mov
adc
push
pop
cmp
and
or
flds
lahf
xchg
mov
jb
fsubs
aaa
addr16
jge
mov
or
fnsave
popa
inc
loopne
loope
jmp
pop
dec
insl
mov
inc
jno
sub
push
out
imul
xchg
dec
lret
int
rclb
dec
adc
pop
cmp
push
mov
xor
mov
jnp
pop
out
push
sbb
adc
cmp
xor
adc
jecxz
and
out
sbb
and
jo
imulb
mov
jp
ficoms
stc
loopne
stos
push
and
cwtl
out
mov
paddq
test
push
jnp
loopne
in
dec
and
cmpsb
mov
push
xor
jne
sbbb
bound
sbb
sahf
faddl
mov
mov
xor
mov
les
in
mov
out
movsb
ds
push
mov
lret
jnp
pop
pop
sbb
sbb
pop
sub
jns
push
inc
hlt
das
ret
nop
inc
ja
addr16
lods
xor
bound
inc
fdivrl
call
push
stos
flds
gs
roll
push
divl
inc
sub
and
pop
or
aaa
push
imul
push
mov
aas
xchg
insl
dec
ss
sti
in
jle
les
pop
xchg
gs
mov
data16
stos
xchg
mov
dec
es
xor
data16
push
aad
pop
aas
cli
xlat
out
je
lret
std
int
adc
aas
fnstenv
out
imul
inc
xchg
out
pop
outsl
dec
stos
add
push
push
outsl
cmp
insl
lds
scas
addl
divl
je
adc
cmc
xchg
xchg
xor
or
sbb
cli
enter
pop
out
enter
cltd
push
cmp
pop
insb
std
mov
out
xor
xchg
or
mov
pop
mov
sahf
mov
aaa
and
jo
and
push
pop
fiaddl
jmp
das
cmpl
jecxz
subb
xchg
aam
stos
loopne
cltd
add
push
scas
fidivrl
mov
pop
fcomps
or
xchg
outsl
dec
test
out
mov
insl
and
fdivr
repnz
jle
pop
stos
jns
leave
mov
pop
and
xchg
sbb
jne
xor
cmpsb
lcall
pop
pop
iret
repz
inc
add
lcall
pop
movsb
stc
push
ss
insb
ret
pop
cmp
xor
fst
jno
std
sbb
fwait
ret
les
add
mov
movsl
pop
jb
cmc
aas
nop
das
or
int3
es
arpl
arpl
mov
jbe
insl
aaa
push
inc
mov
or
mov
jp
imul
jmp
aas
push
loopne
repz
aad
cmpsb
add
jo
and
adc
mov
sahf
scas
cwtl
sbb
jae
jge
lock
or
cmp
negb
fildll
loope
add
xchg
xor
fidivl
xchg
stos
mov
and
push
leave
imul
lret
fwait
mov
inc
mov
jl
stos
xchg
or
jmp
mov
mov
pop
adcb
repnz
repz
enter
xor
mov
ret
adc
outsl
add
pushl
adc
jle
in
out
pop
fidivrs
xchg
cmp
jmp
mov
mov
cmc
cmpsl
mov
mulb
jl
mov
xor
fcoms
ja
dec
mov
inc
mov
adc
adc
pop
ret
loope
repnz
enter
movsb
or
mov
add
cmc
inc
lahf
dec
loop
or
sub
rcll
sti
pushf
cld
mov
pop
push
in
sbb
pop
mov
inc
iret
loope
jmp
jae
mov
adc
mov
pop
sbb
orb
ss
inc
pop
icebp
aas
pop
ja
and
ss
push
fsts
pop
dec
popf
stos
and
sbb
push
ljmp
loopne
pushf
fistl
dec
stos
mov
lea
add
dec
adc
and
and
bound
xlat
xor
lret
adc
or
cmp
or
imul
popf
lcall
jnp
pop
lock
stc
sarb
andl
add
jnp
adc
out
jo
sahf
fsubr
sbb
jge
popf
je
scas
std
mov
push
scas
mov
stc
push
pop
mov
nop
xlat
out
aam
test
pop
jmp
sbb
add
inc
mov
stos
les
sub
inc
ret
lret
data16
outsl
push
jmp
lea
in
jae
pop
aam
inc
or
mov
mov
pop
or
aam
lcall
subb
push
dec
mov
mov
dec
test
jl
push
cmp
sbb
ret
or
stos
lods
fwait
lret
call
jno
popa
lret
ljmp
push
sub
push
jno
jne
adc
adc
inc
xchg
andl
test
pop
push
xchg
int
pusha
xor
push
clc
jmp
pop
inc
push
lret
inc
pop
push
test
aam
xor
xchg
addl
dec
loope
push
test
xor
or
cmp
push
movsl
stos
sub
fcomps
rorl
addb
out
repz
shlb
xchg
les
jb
cmpsl
push
addr16
push
xor
mov
ss
inc
jge
scas
mov
shll
or
dec
push
xor
adc
inc
dec
sub
pop
push
xchg
xchg
mov
outsb
pop
xor
sbb
sahf
xchg
xchg
loopne
jo
pop
mov
sbb
cs
mov
adc
rcrl
pop
test
jmp
add
outsb
lret
dec
stos
xor
sbb
mov
stos
call
and
js
jno
pop
mov
or
lock
out
cmp
dec
pop
cmp
int
jmp
pop
push
das
xor
inc
div
xchg
notb
xchg
addr16
mov
sub
inc
push
sahf
cmp
js
shll
test
ss
nop
mov
sub
or
push
push
addr16
lods
mov
adc
stc
pop
fisubrl
mov
mov
adc
cmp
insb
dec
nop
in
inc
stos
imul
push
xchg
mov
and
xor
call
ret
test
pop
clc
sub
pop
push
aam
test
push
ret
sub
test
dec
lret
nop
data16
aas
imul
filds
xchg
push
sub
lret
add
push
test
sub
inc
sbb
bound
fcoml
xchg
push
mov
leave
aaa
hlt
fsubrs
adc
cmp
lods
mov
scas
mov
xchg
push
sbb
fcoml
ret
sbb
sahf
in
mov
stc
testl
scas
sti
mov
movb
lret
jp
push
sahf
adc
add
je
dec
test
sti
sahf
test
je
repnz
jo
popa
or
inc
jno
imul
loopne
movsl
insl
push
inc
cmpsl
sbbl
aad
pusha
mov
or
xchg
mov
adc
cmp
push
lock
pop
or
sti
stos
out
negl
mov
inc
adc
jns
pop
dec
xchg
adc
in
jl
lret
jmp
and
push
pop
dec
lcall
jnp
bound
shl
js
sbb
mov
push
mov
jl
shlb
xchg
adc
xchg
mov
sbb
add
lea
inc
inc
mov
out
imul
push
aam
mov
and
and
lods
call
add
pop
rcll
pusha
cmc
mov
cwtl
out
push
movsl
jg
and
xchg
or
adc
pop
jl
scas
cs
cwtl
cmc
xor
cltd
daa
iret
lahf
test
inc
sbb
sub
ljmp
xorl
inc
cltd
fmul
mov
das
add
lcall
loop
xorl
inc
mov
test
lret
jne
push
lds
js
xor
push
loopne
loopne
and
xor
mov
test
mov
push
or
push
imul
mov
mov
sub
lods
sub
mov
pop
mov
and
lret
aad
mov
ja
js
add
inc
mov
pop
adc
xchg
pop
test
jb
push
leave
dec
add
jnp
sub
or
adc
jo
insl
fnsave
aad
dec
cmp
and
mov
pop
sub
imul
xchg
daa
sub
cmova
fldcw
scas
jb
pop
sbb
jb
mov
mov
aaa
inc
mov
arpl
inc
fidivl
cmpsl
mov
mov
mov
scas
xor
xlat
adc
or
cmpl
hlt
pop
xchg
cld
adc
mov
cmc
push
push
mov
fwait
int
fisubl
jo
add
push
mov
mov
mov
scas
pop
mov
cmpb
mov
lods
lds
out
or
mov
lret
xor
mov
leave
aam
mov
stos
idivb
lds
xchg
addr16
push
repz
in
mov
mov
pop
aaa
push
inc
adc
jnp
mov
pop
mov
lds
in
jle
ljmp
mov
mov
cs
push
xchg
lret
pop
aas
stos
into
adc
js
popf
fcmovu
movsb
dec
cmpsb
leave
and
sub
or
jno
adc
ss
and
icebp
xor
lods
and
adc
roll
loope
push
lret
nop
fldenv
or
sub
and
lock
cld
or
sub
dec
jg
out
pop
adc
rcrb
add
test
dec
xchg
mov
inc
mov
lret
pop
mov
xchg
xor
arpl
dec
fadds
or
movsl
mov
dec
xchg
aad
sbb
fldenv
lcall
push
mov
imul
sbb
xchg
inc
sub
sbb
jmp
mov
cmovs
in
cmp
adc
adc
push
jmp
dec
outsl
outsb
push
add
out
dec
xchg
dec
sub
mov
pop
gs
jo
jo
gs
lret
test
fs
or
in
aas
outsb
int
into
add
mov
xchg
inc
dec
sub
fsubrl
shll
mov
cmc
push
leave
stos
mov
dec
outsl
cltd
xchg
jg
adc
sub
xchg
pop
jnp
mov
xchg
insb
icebp
fs
jne
and
pop
jmp
stc
jg,pn
adc
scas
movsb
jge
sub
sub
mov
mov
in
push
test
in
out
lret
in
sbb
mov
push
pop
fstpl
xor
aas
xchg
int
or
gs
push
or
mov
pusha
les
xchg
mov
cmp
mov
sub
jbe
mov
mov
push
dec
jns
push
and
push
dec
fstpl
jbe
xchg
push
or
and
dec
scas
add
adc
and
js
stc
inc
dec
icebp
insb
mov
xorb
mov
std
imul
jge
ret
insb
out
std
mov
mov
stos
scas
shlb
inc
aaa
lock
pusha
scas
clc
frstor
pop
out
loop
call
icebp
jbe
mov
sub
mov
insb
in
jne
sub
jb
xchg
test
jne
cs
cmp
loope
xchg
xor
inc
lds
pop
cmpsb
popf
ljmp
ja
jge
loop
cli
push
dec
jl
call
orl
sub
stos
jo
jnp
sti
repnz
jmp
pop
mov
mov
jecxz
leave
mov
fisttpl
loop
shr
jmp
xor
jle
jno
bound
or
je
add
int3
xlat
xchg
mov
jmp
pop
movsb
divb
and
gs
insb
mull
fdivl
lret
loopne
ret
inc
in
inc
cld
and
mov
jb
int
push
or
imull
and
data16
jg
aam
stos
xor
cmpsl
sti
sbb
push
test
pop
fsubr
std
push
mov
sbb
push
sbb
rcrl
xor
xchg
inc
inc
lret
jge
out
cwtl
addl
and
movsl
stos
cmp
movntps
popa
pop
pusha
pop
sbb
shll
das
daa
movsl
xchg
pop
loop
shl
xchg
dec
test
stc
mov
mov
jno
out
xor
and
sbb
xchg
rorl
imul
xchg
jmp
adc
sub
aas
push
pop
lcall
daa
int
leave
fstpt
popf
out
xchg
ja
cmp
sub
jbe
mov
aas
mov
push
call
or
insl
inc
dec
xchg
stos
push
out
inc
jns
or
jge
inc
pop
xchg
mov
mov
ret
cmp
mov
loopne
pop
sub
stos
scas
inc
cli
pop
orl
repz
lods
rorl
ret
cmovg
mov
nop
por
jno
mov
mov
faddl
and
cmp
adc
xchg
jo
daa
fidivl
cmc
sub
push
jmp
xor
test
call
cs
or
xchg
stos
dec
daa
dec
mov
jae
dec
stc
xchg
mov
ret
jno
cs
jge
movsl
pop
push
mov
jmp
xchg
lahf
nop
pop
push
into
cwtl
sub
cmpb
test
test
adc
push
mov
pop
testl
jmp
xor
jns
call
neg
jbe
popa
adc
jg
jnp
mov
xlat
mov
mov
cmp
mov
movsl
stc
shll
in
sub
rcrb
xchg
or
mov
adc
pop
pop
xchg
rorl
push
push
ss
xchg
jle
adc
popa
clc
jge
cmp
nop
inc
jle
imulb
js
cmpsb
repz
in
xor
test
aas
lea
sub
mov
lret
push
jmp
les
push
jbe
push
add
sub
mov
cmp
push
xchg
scas
add
xor
lods
pop
sahf
inc
pop
lock
mov
mov
sbb
mov
jge
jb
push
lahf
cmpsb
mov
inc
sbb
dec
add
test
xchg
sub
roll
push
xor
cmp
in
sub
adcb
mov
mov
leave
add
addr16
sbb
mov
dec
adc
scas
daa
addb
sub
jnp
aaa
add
add
rcrb
jle
sub
cmpb
pop
adc
xor
mov
sub
push
aas
mov
cmpsb
insl
mov
das
sbb
inc
mov
inc
rorl
ljmp
push
or
faddl
cmp
lods
push
mov
mov
xor
cmp
enter
mov
xor
mov
push
and
dec
dec
and
adc
das
inc
mov
mov
out
in
stc
sub
push
xor
fxch
fmul
negb
inc
gs
lret
cmp
and
jp
aad
push
xchg
pushf
ja
rclb
dec
in
sub
cltd
or
faddl
cmc
gs
cvtps2pd
repz
or
js
popl
cmpsb
std
popa
and
xor
pop
sahf
add
mov
jle
cmp
pop
mov
push
mov
push
pop
test
xchg
adc
xchg
sbb
or
push
mov
loope
bound
lds
push
or
sbbl
xchg
xchg
and
iret
sub
out
into
sbbb
movsl
mov
push
cli
and
arpl
loope
dec
mov
mov
addr16
std
nop
push
jo
sub
sbb
es
out
sbb
out
enter
rcrl
jmp
lods
arpl
popf
repnz
push
xchg
mov
scas
adc
loopne
insl
xor
cs
ret
pop
sbb
xchg
pop
jae
push
xchg
in
lods
xlat
outsl
shrl
jmp
stos
lret
lret
adc
sbbb
hlt
inc
push
lret
sbb
xor
sbb
lods
inc
xchg
pop
ja
clc
in
mov
subl
es
ja
mov
popf
push
sbb
icebp
mov
adcb
test
test
sub
push
or
movsl
dec
repz
pop
cmp
in
mov
lret
inc
pop
push
lahf
xor
loopne
dec
sub
pop
mov
in
push
cwtl
fildll
push
outsl
dec
repnz
push
loope
or
dec
cmp
or
pop
mov
popf
mov
nop
mov
lcall
sbb
pop
dec
pop
cli
call
daa
rcrb
imul
leave
iret
mov
decb
mov
dec
and
je
popfw
jp
test
mov
shl
ljmp
push
aas
xlat
cmp
sbb
pop
sub
add
adc
insl
mov
or
pop
jnp
mov
sbb
jmp
in
rolb
cld
js
js
popa
dec
xorl
add
and
xor
hlt
fisubs
xchg
je
fs
outsl
cmpsl
ljmp
or
in
mov
jbe
shr
xlat
test
ljmp
sarb
insb
add
mov
or
push
call
mov
ret
push
outsb
push
outsb
mov
add
imul
lds
mov
popa
xchg
push
add
sbb
int
mov
push
ja
clc
mov
fcompl
and
jns
call
aas
xor
mov
dec
cmp
adc
rolb
sub
and
lock
xchg
jae
sub
aaa
lret
fcmovnu
dec
sbb
aad
mov
cmc
iret
adc
cmp
roll
sub
push
mov
mov
adc
jle
insb
xor
shlb
pop
jmp
repnz
lahf
cs
imul
inc
pop
and
fadds
les
mov
add
mov
shrl
divl
es
pusha
inc
fdiv
xchg
ljmp
jnp
outsl
popf
xorb
daa
into
mov
mov
es
inc
pop
cmp
pop
ljmp
push
dec
sbb
movq
and
out
stc
leave
negb
loop
ss
push
insl
js
pusha
test
cmp
or
mov
lret
adc
mov
mov
fs
mov
jl
les
sub
mov
int3
mov
pop
dec
cwtl
jp
cmp
push
lods
loopne
add
mov
shll
cwtl
jns
pop
push
and
out
sbb
shlb
lds
inc
out
and
shr
or
pop
into
add
mov
pop
add
mov
es
scas
shll
fiaddl
das
pop
mov
jo
jle
jp
add
cmpsl
or
into
or
movsl
aaa
in
pop
push
int
ficomps
call
fdivl
lock
xor
fcoms
cmpsl
lret
jno
aad
pop
in
mov
pop
mov
lds
aam
and
divps
daa
ss
and
jne
xor
jmp
push
push
rol
jle
push
jno
or
dec
std
or
data16
or
loope
push
mov
daa
outsb
into
xorb
jbe
mov
repnz
mov
fdivrl
cld
mov
adc
movsb
sub
cmp
in
int3
pop
lcall
icebp
out
imul
mov
cwtl
mov
insb
xchg
mov
xchg
out
mov
and
push
push
int3
push
fstl
addl
ficompl
xchg
pusha
scas
sbb
pop
cmp
xchg
or
jo
pop
popf
ljmp
jp
xor
or
movsl
mov
test
pop
add
or
clc
movsl
js
lods
xor
outsb
add
lock
test
sbb
in
pop
sbb
xchg
push
hlt
pop
mov
xor
mov
cmp
mov
sub
adc
mov
or
inc
xor
push
out
pop
je
mov
cli
data16
vpshab
sar
push
in
stos
add
mov
sahf
sub
sti
mov
mov
out
xchg
cmp
test
insl
pop
jno
sbb
int
xchg
cld
and
mov
add
inc
mov
jno
sub
orl
mov
inc
push
notb
sub
adc
jmp
je
and
rcll
jnp
out
push
cmpsl
adc
les
or
xchg
and
lods
in
scas
std
jnp
push
mov
xchg
rclb
jl
push
lahf
les
push
mov
pop
fsubrp
sub
dec
scas
fsubp
insb
push
test
ja
lods
add
cwtl
and
cld
dec
or
pop
jno
test
cltd
mov
mov
inc
dec
enter
cs
xchg
test
jae
xchg
pop
lcall
repz
jbe
faddl
adc
aas
dec
xchg
sub
mov
aaa
xchg
and
sub
mov
mov
push
push
cmp
dec
adc
add
es
pop
popa
fbstp
popf
or
pop
and
lcall
mov
xchg
enter
cmpsl
ss
cmp
xor
jb
fimull
inc
shrl
mov
jl
mov
cwtl
lods
push
sbb
test
insb
xor
jle
mov
fdivrl
repnz
rorl
xor
mov
jno
adc
vcvttps2dq
mov
cmp
aam
mov
enter
roll
lods
clc
push
or
inc
dec
mov
lret
ds
out
nop
cmp
rolb
gs
dec
cmpsb
scas
scas
dec
xchg
sub
push
mov
cmp
sub
call
loop
hlt
push
loopne
inc
xchg
cmpsl
dec
cmp
sbb
jle
push
pop
cmp
sti
jns
jbe
popa
dec
cwtl
pop
cmp
inc
rclb
sub
mov
pop
inc
sub
daa
pop
adc
es
mov
mov
cmpsl
and
cli
mov
jl
out
fwait
gs
or
test
lods
std
ret
add
lcall
mov
inc
pop
out
push
loope
xor
add
cmp
inc
jle
inc
insl
mov
push
push
pop
or
or
jl
cwtl
or
mov
jb
das
mov
mov
mov
loope
xchg
push
repnz
or
push
push
cli
or
xlat
and
in
xlat
pop
mov
push
and
std
sbb
push
dec
sti
inc
jns
js
push
add
and
ds
mov
xchg
inc
sub
fisttpl
test
add
mov
je
je
dec
adc
mov
test
push
outsl
dec
sbbb
xchg
dec
repnz
mov
mov
je
adc
ret
mov
dec
sahf
push
shll
inc
xchg
addr16
gs
adc
xchg
mov
add
adc
popa
xor
cmp
add
mov
lods
sub
shrl
inc
push
bound
sub
mov
mov
and
clc
and
adc
inc
jl
mov
push
adc
push
xorl
in
cmp
andb
xchg
mov
inc
shlb
sbb
aas
int
nop
jge
adc
jg
sub
imul
andb
add
int3
jecxz
das
shl
mov
xchg
fs
xchg
nop
test
fdivrs
cld
jno
sahf
fcompl
shlw
je
xor
sbb
jp
or
scas
sahf
enter
pop
push
mov
mov
add
fsub
fldcw
add
push
repz
push
xchg
das
outsb
add
shrb
xchg
xor
bound
inc
sahf
push
push
pushf
jge
jbe
mov
dec
je
mov
into
pop
sbb
inc
mov
out
bound
jle
addr16
cmc
enter
xor
xchg
adcl
pusha
arpl
pop
xor
repnz
mov
or
lods
mov
imul
jns
adc
dec
sbb
sub
xor
cli
dec
jp
ja
ret
jnp
clc
lock
jge
xchg
lret
ret
addl
ds
mov
fnsave
sub
jge
std
loope
dec
jmp
lret
ljmp
aas
les
test
push
mov
mov
dec
jp
ret
insb
jmp
adc
mov
jmp
cs
pop
ret
xchg
inc
sarl
lock
hlt
add
aaa
pushf
sbb
add
out
and
mov
fstps
mov
mov
push
mov
sbb
test
or
ja
push
dec
and
les
jl
pop
xchg
ret
adc
or
xchg
jecxz
inc
jns
stos
cmp
add
clc
pop
or
lods
pushf
movsl
fsubl
xor
inc
into
dec
hlt
lret
adc
push
movl
push
bound
jb
sbb
pop
push
cli
adc
mov
pushl
mov
fmulp
mov
add
nop
call
mov
popf
cmp
push
pop
or
imul
sbb
das
sbb
ja
mov
loop
sti
pop
cli
inc
scas
out
mov
jecxz
jno
mov
jne
orl
mov
mov
mov
and
sub
scas
clc
and
jmp
call
or
pop
cwtl
stos
icebp
test
add
sbb
adc
jae
dec
incb
mov
mov
lods
xchg
mov
sahf
test
jp
xor
xchg
push
lcall
jl
popf
jns
loope
js
cmp
and
mov
shlb
dec
add
xchg
sbb
cmpsb
out
inc
xor
into
jns
and
push
lret
adc
rolb
adc
aam
mov
and
insl
rclb
in
popf
arpl
adc
fdivr
mov
je
jae
jmp
jae
dec
insl
sub
cmp
and
inc
jle
or
cmp
imulb
push
outsl
shrl
popa
out
cmpl
push
xor
outsl
push
adc
insb
mov
or
ret
hlt
fistps
dec
sbb
sub
xor
add
xorl
data16
mov
cmp
push
outsl
ret
cld
inc
jecxz
data16
sbb
imul
loopne
insb
cwtl
cmpl
inc
mov
xchg
mov
xchg
mov
adc
rol
pop
adc
rcrb
xchg
jb
hlt
fstps
push
clc
testb
mov
jae
sbb
jle
mov
inc
and
sahf
inc
add
sbb
jl
jg
mov
pop
inc
push
push
push
imul
nop
mov
pop
xor
add
pop
pop
fmuls
ror
pop
lcall
arpl
rclb
push
xchg
std
dec
jge
jg
add
dec
lcall
lods
pop
jmp
sarb
ja
push
sbb
jecxz
sbb
outsb
bound
cmp
jp
outsb
cmpl
push
ds
mov
and
cmp
fisubrs
adc
xor
jg
push
add
push
sbb
adc
movsl
adc
ss
and
sbb
xor
xchg
cmc
dec
jo
jno
mov
sub
out
popf
mov
jmp
cwtl
or
adc
sti
imul
outsb
push
pop
xor
push
jl
scas
xor
mov
repnz
push
bound
jmp
inc
or
and
jl
xchg
in
jg
mov
mov
adc
mov
push
setp
push
add
mov
add
push
and
enter
ss
or
jg
mov
movsb
popa
inc
divl
add
jns
mov
shll
pushf
mov
ja
repz
xchg
push
fmull
mov
ss
out
push
ja
jb
and
jo
and
sbb
jns
ds
out
cmpsl
push
cmp
aam
mov
xchg
cmp
mov
xchg
ljmp
lock
xchg
jae
lods
add
jge
pop
mulb
jl
sbb
sar
popf
add
mov
cmp
sub
aas
pop
lea
mov
int3
jmp
lds
lock
addr16
fdivs
xor
das
xor
aam
stc
mov
into
orl
sub
stos
inc
ljmp
icebp
sti
insb
or
cli
mov
stc
jbe
add
fwait
pop
lret
jecxz
mov
cmp
cmpsl
roll
repnz
mov
mov
andb
scas
mov
jnp
rcr
or
test
out
xor
lret
jp
cld
dec
loop
shlb
andl
jmp
lock
and
fstps
in
sti
das
jmp
lahf
ret
sbb
mov
jp
mov
and
inc
dec
push
sub
and
mov
and
pushf
cmpsb
repnz
add
inc
mov
adc
or
xlat
add
in
int
js
xorl
xor
js
in
loope
add
iret
rcr
mov
insb
ret
dec
mov
lcall
lds
xchg
lret
sbb
jle
mov
cmp
mov
xor
mov
jo
push
mov
inc
jae
adc
lea
arpl
pop
mov
cmp
dec
push
pop
xor
imul
ja
mov
ds
sbb
jae
push
push
dec
stos
lds
cmpsl
std
je
push
outsb
jne
js
popa
inc
stc
insl
jp
lret
push
repnz
mov
push
sbb
je
aas
in
les
add
aas
repnz
cwtl
das
shll
cld
fldl
dec
aas
lea
push
jns
xchg
fstps
in
cli
out
and
cltd
fwait
sub
mov
scas
inc
cmp
dec
in
xlat
jg
adc
inc
leave
in
xchg
push
add
xor
cmc
xor
adc
adc
pop
xchg
arpl
inc
fwait
mov
sub
pop
mov
jmp
jb
pop
ds
push
and
ss
push
cmp
jle
sbb
xchg
pop
mov
lret
lea
mov
xchg
icebp
leave
les
stos
je
mov
xchg
ret
pop
pop
and
xor
sub
jle
mov
pop
pop
insl
data16
adc
push
mov
xchg
popa
inc
mov
jnp
xor
and
xchg
fldcw
nop
mov
popa
sub
scas
cld
shlb
ds
sub
test
xchg
pop
xchg
inc
or
cli
and
mov
add
fistpl
mov
mov
nop
mov
dec
scas
ret
aas
mov
mov
lods
push
pop
xchg
push
dec
movq
pop
push
xor
cltd
enter
and
mov
or
aad
add
push
hlt
in
orl
pushl
adc
adc
jbe
push
cltd
cmpsb
movsl
mov
lock
aas
pop
jle
dec
jle
lea
or
xchg
adc
adc
dec
pop
addr16
mov
arpl
sub
push
push
pop
xchg
mov
jno
repnz
mov
mov
clc
pop
mov
mov
jmp
loop
or
adc
dec
out
arpl
fcomps
fidivrl
pushf
or
ficomps
or
add
cs
cmc
add
repnz
popl
cmp
xlat
les
and
call
dec
push
push
lret
add
bound
in
cltd
test
mov
pop
mov
pop
loopne
gs
mov
jl
rorb
dec
in
and
xchg
ss
ret
pop
cltd
sub
xor
out
incb
and
mov
pop
imul
pushf
mov
adc
push
hlt
bound
mov
insb
cmp
push
pop
xchg
sbb
lahf
pop
and
sub
dec
xsaves
and
roll
jnp
scas
mov
inc
js
insb
fsubr
push
jecxz
and
push
cltd
mov
mov
cmpsl
dec
scas
jns
adc
pop
mov
int3
adc
push
or
repnz
jno
xor
les
je
inc
lret
mov
inc
or
test
jbe
cmp
pop
sub
in
mov
mov
pop
scas
jo
cmpsb
mov
jge
add
pusha
leave
fnstenv
xchg
and
mov
adc
xchg
jne
aas
push
add
inc
or
outsl
clc
shrb
test
mov
test
inc
push
push
xchg
cmpsb
cmp
insb
int
adc
xor
mov
fldt
sahf
scas
push
cmp
add
push
push
cmc
push
jo
inc
mov
dec
sbb
jno
in
cwtl
imul
fcoms
push
mov
sahf
push
push
int3
in
ret
fcom
cltd
adc
or
sub
mov
xchg
aam
into
and
sarb
or
repnz
cmc
stos
mov
movsl
adc
call
pop
repnz
add
loopne
popa
sub
jo
pop
shll
lods
dec
sbb
sub
mov
int3
mov
xchg
mov
ret
and
icebp
push
stc
mov
xor
movsb
lods
mov
rcr
pop
hlt
mov
into
and
in
mov
sbb
sbb
add
sbb
dec
out
loope
jmp
loop
adc
imul
mov
pop
imul
imul
inc
inc
clc
out
pop
or
cmc
and
pmuludq
cmpsl
shll
aaa
mov
mov
jae
pop
icebp
inc
fsub
or
xor
inc
in
and
push
xchg
jg
jbe
mov
and
aas
not
add
fwait
adc
sub
pop
popf
aas
arpl
loope
imul
xor
aas
push
adc
xchg
in
cli
call
test
scas
jae
nop
shl
dec
cmp
mov
jl
jo
adc
fadds
cmc
push
adc
cwtl
push
cmpsl
lahf
loopne
in
pop
mov
jmp
in
xor
dec
mov
and
mov
inc
sahf
imul
arpl
int
mov
out
negl
js
sti
lret
push
push
adc
jecxz
pop
movsl
fbld
shrl
mov
insb
out
daa
loopne
sub
jge
pop
mov
std
mov
push
dec
fdivs
and
add
dec
sbb
fstpl
addb
mov
pop
xor
fcomip
sahf
xchg
lods
xor
xchg
negl
pop
xchg
vmread
lods
leave
in
pop
dec
in
gs
repz
mov
clc
aas
enter
inc
xor
ja
aad
clc
add
push
push
lods
cmpsb
inc
inc
scas
leave
fildl
and
xlat
pop
pushf
flds
clc
jbe
adc
add
lds
jo
jo
loop
cmpsb
movb
mov
cmp
mov
mov
mov
jb
aas
aam
pop
iret
iret
inc
fcomps
out
add
shrb
pop
sbb
scas
movb
xchg
aas
push
stos
aas
pop
test
lret
inc
push
out
int
iret
push
ljmp
push
xchg
hlt
jp
outsl
insb
stc
mov
fwait
hlt
lret
push
cmpsb
xor
bound
mov
adcl
xchg
mov
popa
sub
mov
and
xor
cmp
mov
int
std
push
scas
je
mov
iret
ljmp
test
or
inc
movsl
push
push
add
pop
sbb
iret
sbb
repz
mov
ret
in
bnd
lds
dec
into
leave
aam
gs
mov
out
push
mov
push
scas
dec
bound
fnstsw
cmc
mov
faddl
lret
xchg
movsb
add
fidivrl
rcrb
test
sub
sti
pop
insl
pop
dec
fisubrl
pop
push
loop
les
sub
jmp
jp
sti
fisttpl
pusha
mov
lahf
daa
push
pop
push
ja
fs
mov
pushf
outsb
or
in
andb
sub
bound
mov
xlat
xor
mov
ficompl
test
fstps
rcl
shlb
xchg
gs
je
sbb
or
sub
mov
sbbl
lret
outsl
xchg
cmp
fistl
test
mov
mov
stc
test
es
in
cli
ret
jle
xlat
pop
and
or
fs
jl
repz
in
int
fistpll
outsb
sti
xchg
dec
or
call
inc
or
mov
cmc
punpckhbw
or
mov
cmp
jmp
add
into
sti
dec
clc
aam
sar
lods
ss
lcall
adc
test
lods
leave
iret
push
sub
xor
dec
jno
cltd
sub
xchg
xlat
push
pop
into
xor
rcrb
ljmp
fadds
lret
in
ret
push
mov
bnd
push
sub
pusha
dec
push
lret
mov
pushf
xor
xlat
std
sti
icebp
out
push
out
sub
xchg
repz
fisubrs
out
dec
jae
outsb
stos
xor
leave
sti
dec
add
xchg
xchg
shll
mov
les
sar
lods
fdiv
and
xchg
push
dec
add
aad
lahf
pusha
fildll
loope
or
fwait
xchg
push
imul
lahf
fidivrl
xchg
aaa
jnp
lds
mov
push
icebp
iret
fwait
mov
enter
nop
pop
cli
lcall
sti
sbb
shl
insb
lcall
enter
cmp
and
mov
adc
inc
std
fwait
mov
and
xchg
sbb
jne
clc
cwtl
xor
fcmovbe
outsl
je
mov
loope
sub
cs
lods
loope
xlat
and
aad
ret
mov
xchg
sbb
pop
loop
insb
stos
add
pop
adc
xchg
cltd
mov
inc
sbb
pop
imul
sarl
xchg
setbe
mov
dec
fists
xor
data16
push
cmp
sub
iret
fdivrs
shr
cmc
ret
out
mov
jno
les
inc
xchg
lods
repz
cmp
push
pop
lcall
push
push
fisttpll
jl
lods
jl
adc
pop
mov
jp
fisubs
fwait
sub
xlat
ljmp
push
pop
inc
sarl
movsl
divb
or
mov
cmpsb
incl
pop
je
push
cmpsb
jo
test
mov
sbb
fmull
pop
cmp
int3
mov
stc
pusha
mov
push
pusha
adc
out
inc
dec
mov
cmp
pop
jo
sub
xlat
push
cmp
aas
ljmp
lret
in
sti
inc
mov
roll
out
push
aas
imul
es
shlb
pop
mov
lock
and
mov
mov
add
out
fs
dec
sub
test
push
out
jne
xchg
mov
arpl
mov
cmp
lock
jp
push
mov
mov
cltd
cmp
push
xor
mov
mov
pop
dec
xchg
push
pushf
faddl
insl
mov
arpl
mov
sub
repnz
pop
fistpl
ljmp
mov
mov
fisttps
pusha
push
jae
mov
jmp
jnp
scas
ds
vmread
push
push
inc
xor
mov
js
sub
cli
xor
cmpsl
mov
mov
jbe
add
dec
scas
xor
popa
imul
aaa
scas
xorb
mov
inc
and
push
xchg
inc
iret
ret
inc
movsl
dec
push
scas
scas
xchg
in
or
sub
xchg
clc
pop
int
out
and
xchg
js
jp
cld
popf
aas
hlt
inc
roll
nop
cmpsl
xchg
fstps
pop
pop
xchg
mov
popl
test
loop
lret
aam
inc
popf
push
cmp
mov
in
jbe
nop
in
mov
bound
or
or
mov
ljmp
inc
push
or
fsubrl
xorb
and
cld
lea
and
sahf
pop
fisubs
and
into
fucomp
imul
aaa
mov
fstl
pop
shlb
iret
out
outsl
and
in
repz
pop
push
xor
out
stos
push
xchg
jo
xchg
push
clc
push
rcll
inc
xchg
sbb
cmpl
out
stos
xchg
jbe
or
jle
add
lcall
inc
add
lahf
sub
adc
xchg
jb
xchg
pop
mov
fld
repnz
aam
cmp
loopne
cmp
dec
cwtl
hlt
mov
pop
faddl
fwait
adc
movsb
adc
xor
jo
add
test
mov
je
cmpsl
fldl2e
iret
in
sbb
push
mov
movsl
aam
jae
pop
sub
xchg
push
mov
arpl
or
in
sbb
pop
lret
stc
sar
mov
sbb
test
idivb
adc
or
jo
das
shlb
mov
es
fwait
movsl
xorb
gs
dec
outsl
and
mov
lds
and
xchg
sbb
or
pusha
push
ljmp
or
outsl
ret
stos
stos
loope
pop
mov
clc
inc
addb
pushf
and
enter
int
shl
mull
pop
in
cld
cmp
test
in
jge
fwait
xor
movsl
cld
mov
xchg
aad
es
mov
fwait
xor
mov
cs
xchg
addb
ljmp
push
cmp
cmp
inc
outsb
mov
push
dec
test
shlb
xchg
repz
std
outsb
leave
jge
scas
stc
lcall
fucomi
xor
or
outsl
lods
iret
out
stos
test
aas
cmpsl
jmp
pop
xchg
mov
inc
or
and
jp
sbb
add
and
pop
ds
jne
fidivrl
jo
pop
mov
mov
negl
pop
lods
dec
jb
into
push
ja
dec
lds
stos
mov
sbb
imul
jno
ficoml
mov
out
and
and
test
xchg
jmp
lea
xchg
add
push
sbb
xchg
adc
cli
ja
lret
inc
fcmovnb
out
int3
cld
sahf
mov
cmp
or
loope
mov
inc
xchg
ss
sbb
aas
andl
call
jmp
in
pop
jbe
xchg
or
add
shrl
adc
and
adc
xchg
push
adc
mov
fiadds
mov
bound
push
aad
sub
scas
xchg
sbb
xor
pop
sbb
lock
je
popf
lahf
js
and
sarl
add
mov
jo
add
iret
pop
mov
arpl
mov
mov
adc
push
in
lds
pop
push
dec
add
push
dec
xchg
iret
lods
mov
or
or
cmp
xchg
adc
inc
push
fidivl
fidivs
stos
outsl
loope
shl
jmp
fbld
push
push
mov
mov
sub
insl
sbb
sub
add
sbb
jno
ret
sbb
subl
cld
shrb
adc
insl
xlat
in
jmp
sub
in
ret
cmpsb
and
arpl
les
icebp
es
mov
pop
cmp
dec
push
mov
cmp
pop
mov
testb
xchg
ljmp
push
frstor
popf
stos
shlb
into
cmc
push
jle
push
sub
addr16
lahf
push
adcl
nop
out
fstp
out
inc
cmp
aam
fdivl
xchg
scas
xchg
cwtl
xchg
mov
icebp
xor
dec
loopne
inc
add
out
xchg
jecxz
in
mov
push
or
adc
mov
out
cmp
fnsave
test
idivl
sbb
push
je
call
pop
outsl
or
xor
in
ja
pusha
cmp
outsl
insb
lds
push
jle
inc
scas
add
les
jp
scas
test
push
xchg
push
pop
loope
fmull
stos
mov
inc
movnti
movsb
or
or
jecxz
sbb
push
fdivrl
mov
and
sub
xchg
mov
insb
mov
lock
lcall
or
aad
loope
repnz
mov
jb
pop
cmc
cmp
xchg
fsubrs
adc
out
mov
or
xchg
or
ss
or
imul
cli
xchg
mov
inc
push
out
push
or
pop
repnz
push
sti
test
or
dec
adcb
xlat
jne
add
lret
adc
jecxz
rcl
adc
push
dec
xor
lcall
mov
or
cmp
mov
mov
jl
cmp
mov
dec
and
fdivrp
jle
push
movsl
ret
in
dec
cwtl
xor
test
sar
cmpsl
sbb
sub
xor
js
call
mov
xorb
les
imul
mov
push
inc
pushf
negl
sbb
pusha
stos
les
movsl
sbb
insl
lahf
gs
xchg
mov
jecxz
sbb
shr
jmp
int
js
sahf
std
add
gs
cmp
fcmovb
in
lods
ss
imul
and
mov
sub
ret
add
icebp
ljmp
pop
lock
sahf
jbe
mov
rcr
and
stos
dec
mov
scas
pop
in
mov
lods
jmp
dec
and
jg
jp
lds
mov
adc
pushf
jae
push
enter
and
movsl
cmp
movsb
mov
jno
push
inc
test
cmp
out
cmp
adc
xchg
sbb
repnz
jl
adc
sbb
subw
and
and
mov
pop
movsl
pop
insb
jl
adc
sbb
popf
adcl
push
xor
rcrb
xchg
jg
or
mov
insb
pusha
cmp
lods
mov
push
leave
lahf
xlat
and
cli
inc
dec
loope
push
push
lods
mov
mov
call
mov
inc
push
push
aas
loope
inc
jg
jne
mov
scas
sub
scas
inc
push
mov
mov
stos
es
notl
cmp
or
rep
leave
mov
popa
jp
cmp
cmp
inc
cmp
sbb
lcall
pop
or
cltd
xchg
cli
xor
outsb
jo
cmc
fucomi
lret
mov
fwait
aas
insl
sbb
fdivr
inc
lahf
fs
gs
sbb
popa
cmpsl
mov
push
mov
inc
sub
or
ss
jecxz
movsl
daa
mov
les
xchg
or
sub
sbb
es
add
jns
adc
cld
cmp
push
and
cmp
cmpsl
add
cmpsb
aaa
push
mov
inc
cmpsb
stos
xor
stos
insl
loop
bound
mov
add
mov
cmp
jb
fstpt
jno
push
lret
push
sub
dec
stc
ret
fs
aam
push
jecxz
into
inc
dec
cwtl
sahf
jne
mov
push
pop
push
fmull
fstpt
cmpsb
in
es
add
adc
jo
xchg
sar
pop
ret
adc
das
pop
and
adc
adc
hlt
push
fiaddl
mov
mov
popa
and
push
push
add
stos
fistl
dec
aam
scas
push
in
inc
ja
jg
cs
jecxz
addl
xchg
push
sub
dec
inc
xor
iret
loop
jge
mov
xchg
pop
jge
ss
andb
bound
inc
add
mov
fsubrl
add
jne
mov
jbe
jg
lods
xchg
fidivrl
fldt
orb
sbb
or
adc
push
stos
inc
daa
ja
jp
lock
arpl
or
hlt
adc
aaa
fstl
je
sarb
inc
push
daa
sub
js
add
or
inc
aad
pop
xchg
and
xchg
cmp
aam
or
cli
pop
push
test
mov
dec
cli
jae
nop
mov
scas
inc
stc
das
adc
rcrb
int3
xchg
xlat
out
leave
fs
clc
push
pop
push
mov
lock
dec
les
scas
adc
jo
mov
add
push
loope
mov
cs
pop
or
je
insl
outsb
push
mov
inc
popf
mov
inc
add
aaa
lret
cli
mov
adc
xchg
lock
dec
push
shlb
out
mov
and
add
mov
pop
hlt
xchg
in
and
fidivl
mov
push
das
sub
cwtl
sbb
mov
mov
inc
adc
in
shlb
js
out
das
cmp
or
cwtl
xlat
icebp
ja
jmp
push
mov
pop
inc
cmp
loopne
dec
popa
adc
into
inc
fcomp
movsb
pop
out
leave
mov
lea
dec
and
fidivrl
xchg
jle
popa
lret
cmp
xor
ja
add
sbb
jl
rcrb
or
icebp
test
mov
arpl
sti
sub
daa
nop
mov
inc
out
sub
dec
inc
add
cld
cmp
outsl
popf
ret
stos
mov
outsb
flds
call
or
and
xor
xchg
subl
cli
in
ficoml
inc
daa
mov
sbb
out
out
push
add
dec
xor
sbb
adc
ret
sbb
out
pop
lods
fdivs
jno
push
or
dec
mov
cwtl
into
lret
inc
repnz
sbb
nop
xor
pop
cltd
loopne
mov
dec
jmp
icebp
pop
and
rcll
sbb
orl
cwtl
pop
xor
mov
mov
das
jne
test
lods
xorb
pop
mov
dec
js
bts
mov
adc
mov
inc
out
test
sub
lods
ja,pt
or
bound
mov
adc
icebp
push
inc
xchg
pop
push
jle
ficoms
xlat
test
xor
pop
dec
shrb
pop
mov
loope
mov
jl
inc
movsl
mov
test
mov
iret
pop
dec
fisubs
loope
out
jp
jnp
mov
inc
or
mov
sti
fcmovb
adc
in
xchg
and
fdivrl
cmp
xchg
adc
or
push
lds
cmp
xor
push
xchg
jecxz
xchg
jns
ss
jp
jle
mov
ja
scas
mov
les
js
and
inc
in
int3
or
mov
mov
repnz
pop
jno
ds
dec
xor
push
cmp
fisubrl
mov
or
imul
popf
push
shr
and
adc
xchg
cld
inc
dec
js
loop
data16
mov
jo
loope
int3
cmp
scas
leave
cmpsb
sbb
adc
cs
outsb
loop
sahf
mov
or
mov
pusha
xchg
nop
jno
in
pop
jne
rorb
mov
negb
lahf
aaa
jns
cli
pop
incb
inc
mov
cmp
pop
jmp
and
jnp
int
adc
adc
xchg
test
js
in
in
test
bts
mov
pusha
and
mov
pop
pop
lcall
int3
mov
dec
pop
sbb
inc
push
adc
iret
outsl
popf
ds
add
lret
sahf
mov
leave
scas
and
arpl
or
mov
xor
iret
sbb
cmpsl
xor
imul
mov
in
push
sahf
mov
std
fdivs
aas
mov
jl
sbb
cmp
and
in
adc
imul
push
jp
leave
mov
pop
shlb
push
lea
push
sbb
sbb
pop
rcr
jne
imul
enter
xlat
outsl
lret
out
mov
cld
ficoms
push
gs
push
mov
in
mov
gs
fiadds
testb
add
stos
out
jle
movsb
jmp
fmul
mov
repnz
fsts
jge
ds
bound
and
shl
sbb
sbb
out
outsl
leave
out
mov
movsb
jnp
xchg
iret
nop
or
push
push
aaa
lret
xchg
jge
mov
addr16
cmc
mov
xor
and
and
and
fxch
pop
lret
mov
sbb
mov
popf
add
add
add
out
jmp
mov
and
adc
cmc
jb
cmp
sarl
dec
push
loope
sub
inc
xchg
fistpll
xchg
adc
sbb
mov
jle
inc
add
andl
lret
xlat
sub
jg
push
cmpsl
sub
adc
jns
ds
inc
and
jl
mov
lods
dec
add
jge,pn
adc
xchg
gs
inc
and
inc
loope
push
aaa
mov
mov
hlt
sub
insb
and
sub
mov
pop
sub
repnz
pop
mov
ret
cmp
mov
hlt
pop
lcall
or
out
cmp
xor
pusha
inc
and
xor
rolb
sti
add
or
subb
divl
iret
dec
xchg
mov
add
sub
mov
jmp
clc
call
mov
and
adc
fs
ss
popa
jl
scas
lret
nop
int3
outsl
or
js
addl
cwtl
imul
inc
test
insl
fs
inc
mov
test
jge
out
xchg
aam
push
pop
sbb
imul
adc
jne
sarb
ds
fcom
pop
adc
xor
inc
mov
xchg
ljmp
xchg
lcall
or
xlat
jmp
push
mov
ret
xchg
nop
mull
xlat
test
lret
add
push
jl
xchg
repnz
sbb
xlat
daa
mov
sub
cwtl
mov
xor
pop
dec
ljmp
or
pusha
sub
cmp
cwtl
add
or
push
cmp
pop
mov
sub
mov
jle
push
inc
loope
iret
push
inc
fdivr
rcr
inc
jmp
or
sub
pop
aam
sbb
test
mov
fcoml
in
pop
aad
cmpsl
jle
mov
sbbl
cmp
es
loopne
mov
inc
jl
jb
cmp
cld
dec
lcall
es
cmp
sub
sub
test
das
mov
mov
jno
mov
mov
loopne
xor
jp
push
xorl
inc
mov
jnp
int3
push
mov
scas
add
bound
sub
jl
xchg
das
xchg
test
push
mov
enter
cmp
xor
jle
imul
mov
add
fs
push
xor
sbb
jbe
enter
insb
icebp
sub
and
icebp
xor
add
inc
push
lock
cwtl
xchg
jns
insl
insb
loopne
lret
out
iret
psubd
inc
leave
loopew
mov
or
pop
mov
inc
fstpt
adc
stc
cmp
cltd
scas
mov
das
xor
mov
aaa
into
sub
mov
push
jle
adc
out
data16
es
pop
pop
jb
nop
xchg
sub
dec
and
shrb
sub
push
dec
mov
and
insl
mov
fistpll
sub
push
mov
testl
mov
jnp
push
daa
inc
jp
scas
sarl
fsubrl
aam
mov
call
cmpsb
aad
in
test
and
imul
into
rcrb
xor
add
xor
fisubrl
mov
push
xchg
inc
cmp
stos
jbe
sbb
add
xchg
or
dec
in
negb
jmp
dec
jo
les
cwtl
fs
stos
add
aaa
or
xor
add
dec
fwait
ds
call
enter
out
mov
and
inc
push
mov
pop
jae
lds
jge
inc
mov
xchg
add
cmp
xchg
imul
mov
popf
in
mov
pop
mov
cwtl
push
sub
mov
sbb
movsb
sub
cmp
push
xchg
add
nop
in
xor
jae
mov
jno
scas
lahf
sub
fdivrs
sbb
mov
pop
aad
jae
push
ret
adc
mov
movsb
cmpsb
push
out
cmc
cld
push
add
mov
mov
or
dec
inc
sbb
sbb
pop
sti
int3
outsl
push
pop
sbb
test
insb
xchg
mov
adc
mov
inc
lcall
sbb
int3
jp
xor
xchg
rorb
add
test
or
fs
cmp
sub
or
js
adc
daa
and
sub
cmc
mul
dec
psrlw
popa
xor
cmp
roll
arpl
pushf
jg
fwait
sbb
lret
push
mov
cmp
lds
sahf
insb
xchg
fs
les
inc
aas
cli
imul
fmuls
cmc
inc
aas
fstpt
and
test
push
jno
mov
push
mov
mov
icebp
cld
pop
and
dec
inc
pop
adc
test
cmp
sbb
cmp
pop
cli
dec
cld
jl
scas
xor
mov
lods
jo
inc
mov
incb
dec
faddp
sub
fildll
stc
cmp
into
cmp
std
jge
jae
loop
fistpl
leave
mov
movsl
aas
xchg
rclb
mov
call
fsubrl
mov
fldcw
mov
inc
fwait
mov
add
icebp
cmp
fisttpll
fisttps
push
adc
sbb
mov
mov
mov
mov
ficompl
insl
xor
es
cli
pop
js
xchg
jns
pop
push
fbld
or
popf
les
xor
cmp
cmpsb
clc
push
jmp
and
jnp
andb
xchg
inc
jns
add
fisttps
pop
adc
call
loopne
and
cmc
stos
and
inc
cmp
cmpsb
nop
nop
and
fstpt
out
scas
pop
push
imul
adc
fdivl
ds
pop
shll
mov
pop
outsb
es
xchg
mov
pop
cmp
xchg
rcl
and
fisubl
outsb
jl
jae
dec
jecxz
push
push
and
xchg
insb
mov
and
mov
sbb
clc
and
dec
push
and
mov
jg
shll
cmp
sub
popf
mov
mov
dec
js
and
imul
add
sub
test
cmp
lahf
push
dec
repnz
ret
insb
xor
les
mov
ds
lds
repz
inc
pop
mov
mov
sbbb
pop
popf
lret
adc
loopne
push
in
jl
jecxz
mov
jnp
fstpt
roll
cwtl
out
shrb
push
jmp
arpl
lock
add
pop
rcl
shl
ja
cmpb
add
fs
inc
rcr
repz
das
adc
lret
sbb
sub
inc
jp
add
in
inc
flds
popf
xor
ja
lcall
cmpsl
dec
ret
fistl
xchg
movsl
dec
pop
push
inc
je
sbb
repnz
bound
add
jmp
jmp
fimuls
pop
dec
movsb
fsubp
sbb
xor
test
dec
mov
jo
pop
std
xor
clc
push
mov
dec
pop
jle
jno
xchg
in
mov
mov
sub
cltd
pop
mul
bound
leave
es
push
cmp
or
std
sbb
jg
iret
sbb
and
lds
xorl
inc
add
push
es
cmp
mov
mov
mov
xor
jb
pop
mov
push
dec
shll
out
push
sbb
lods
inc
outsl
add
mov
ja
pop
mov
push
sub
sub
mov
fcompl
or
push
push
loopne
or
aaa
pop
pop
add
push
mov
dec
pop
sub
xchg
add
xchg
ret
jnp
pop
push
or
inc
fldl
adc
or
and
jno
inc
and
jae
fisttpl
dec
xchg
pop
in
cmp
adc
pop
mov
das
ja
cmp
lock
arpl
and
cmp
xor
loopne
int
xor
scas
pop
pushf
push
cmc
mov
push
mov
inc
es
dec
mov
test
mov
repnz
push
xchg
sbb
adc
in
push
sbb
sbb
pusha
fsubs
push
pop
jl
test
add
js
xor
test
ljmp
cmpsl
in
xor
outsb
push
add
sti
in
ja
xor
icebp
negb
adc
dec
fsubs
cmc
mov
xor
push
adc
inc
xchg
push
mov
test
mov
and
add
xor
stos
dec
repnz
or
adc
cld
or
pop
mov
pop
cmpsl
xchg
sub
in
icebp
and
out
xor
pop
push
dec
jno
test
cmpb
cmc
lcall
daa
pop
test
inc
pusha
jns
notl
sbb
sbb
jp
push
loopne
mov
and
push
pop
insb
cmp
dec
out
mov
pop
add
mov
xchg
add
js
outsl
sbb
mov
fs
adc
xlat
or
mov
jl
adc
inc
xchg
int
outsb
pushf
fs
fs
bound
aam
push
inc
mov
cmp
mov
add
sub
es
mov
mov
xchg
test
mov
inc
mov
pop
lods
cmpsl
das
jne
xor
inc
lds
inc
clc
sti
js
pop
mov
out
sbb
ret
fldt
jo
sub
lea
or
push
and
sbb
cmc
ss
dec
dec
inc
inc
mov
ss
xchg
mov
sub
cmp
movl
das
add
lea
mov
jmp
mov
fsts
push
in
xorb
xor
mov
pop
pop
call
xchg
popl
jbe
enter
xor
outsl
or
bound
arpl
lret
nop
xlat
decl
xchg
cmp
inc
shlb
mov
jo
ds
dec
xchg
or
sbb
mov
testb
cmp
xor
lea
pop
lret
mov
push
mov
adc
out
dec
imul
pushf
pop
dec
fstps
xor
outsl
movsb
push
aam
mov
fmul
dec
mov
mov
jmp
test
mulb
mov
mov
sti
outsb
mov
sbb
int3
stc
lret
out
and
xor
stos
int
aad
xchg
cmpsb
or
stos
and
or
imul
ss
es
mov
cwtl
scas
cld
shlb
dec
jg
mov
fcompl
mov
or
daa
in
cmp
loopne
fwait
xchg
sarl
popa
aas
mov
pusha
nop
sarl
xchg
fwait
cwtl
mov
fdivl
out
shrb
or
adc
add
add
pop
fnsave
jbe
out
aam
fsts
inc
xor
or
pop
es
out
dec
mov
xor
sub
pop
xchg
fisubs
ss
mov
lds
push
das
mov
add
mov
dec
pop
add
mov
aad
daa
aam
mov
pushf
push
movsb
sub
mov
mov
sub
xor
mov
mov
xor
ds
jmp
fbstp
movsb
es
test
lods
cltd
test
out
loope
mov
lods
bswap
and
iret
shrl
out
xchg
sahf
push
in
test
and
sti
mov
cwtl
gs
les
insl
repnz
mov
mov
or
push
aad
xor
inc
negl
cmp
sub
mov
dec
add
mov
test
push
pop
jb
je
es
mov
cld
pop
mov
loopne,pn
sarl
xchg
inc
sar
mov
mov
daa
arpl
lret
mov
mov
jno
push
in
aam
mov
aas
inc
das
add
push
jbe
push
push
repnz
sahf
add
add
add
in
aaa
mov
gs
sbb
sbb
push
stos
arpl
mov
xchg
push
aam
les
sahf
jl
jbe
inc
dec
imul
sub
lods
sub
gs
dec
sbb
in
sub
jne
cmpsb
sbb
fnstcw
xchg
inc
fwait
inc
loop
jno
xchg
cmp
call
and
sub
and
mov
leave
lcall
test
sub
jo
xchg
push
push
sbb
outsl
push
and
cs
jp
pusha
jecxz
test
pushf
or
and
add
lahf
addr16
sbb
xor
in
arpl
or
add
mov
mov
mov
xor
dec
pop
mov
out
repnz
jbe
out
loope
out
in
mov
pop
rcrl
adc
mov
pop
inc
and
scas
cmc
loop
test
pop
inc
iret
stos
sub
jne
pop
loop
clc
shrl
daa
cli
fcmove
cmp
fwait
jmp
iret
cmp
outsb
push
test
xor
sbb
xlat
popf
inc
and
inc
loopne
je
sub
xchg
cmpsb
push
arpl
xchg
ljmp
pop
test
or
pushl
cmc
lret
cmp
pmaxub
orl
mov
imul
cmp
sub
cmp
aam
clc
jo,pn
push
push
mov
xor
mov
in
pop
mov
int
jp
aam
lock
fwait
cmp
mov
mov
pushf
pop
mov
mov
add
and
dec
sub
mov
sbb
jmp
and
jbe
icebp
sub
mov
jp
inc
pop
movsb
stos
push
sar
repnz
iret
std
popa
mov
mov
aam
jle
movups
mov
inc
jbe
xor
xor
mov
mov
add
fisttps
mov
leave
dec
nop
adc
push
sahf
stos
daa
add
lods
mov
jmp
rorl
scas
nop
daa
jmp
stc
jl
fcompl
mov
rol
aam
das
push
out
jmp
clc
pop
jecxz
push
jb
sbb
mov
push
bound
pop
fimuls
movsl
pop
and
and
scas
stos
int3
std
jmp
and
out
pop
jbe
mov
add
push
pushf
lea
add
mov
add
ja
iret
pop
push
idivl
sahf
lret
pop
add
std
loopne
repnz
add
adc
sarl
jg
mov
pop
rcrb
shr
mov
mov
cmpsb
lret
and
push
jno
mov
jge
stos
cwtl
dec
fstpl
pop
mov
fwait
inc
iret
jbe
adc
push
sbb
cmp
jp
cmp
jmp
xor
or
push
rcr
mov
dec
jb
mov
loope
repz
jb
fidivl
xlat
jecxz
mov
jne
out
jae
iret
cwtl
jmp
inc
mov
add
inc
cld
lods
xchg
in
add
fwait
repnz
mov
repnz
dec
cmpsl
pop
and
cmp
hlt
leave
repnz
inc
loopne
hlt
xor
xchg
adc
pop
mov
xchg
push
add
stos
lds
in
and
xor
cli
cli
ss
lcall
cmp
dec
and
pop
cwtl
mov
inc
cmpsb
cmpsl
inc
pop
stos
adc
cli
lds
pop
xchg
fidivs
and
fldt
jne
cs
cmp
pop
repz
sbb
pop
enter
push
mov
cs
repnz
add
adc
jge
cwtl
sbb
mov
ja
and
aaa
pop
test
and
rcrl
dec
fisubrs
inc
sub
jnp
jno
rorb
dec
mov
je
add
pop
mov
pop
stc
lods
cs
das
and
pusha
lret
xchg
int3
out
mov
sbb
lods
pop
cld
or
cmp
addr16
mov
mov
jg
inc
dec
dec
into
roll
ret
orl
lret
sub
aaa
pusha
in
cwtl
mov
cmp
xorl
xchg
adc
jo
push
add
xor
mov
dec
push
js,pn
sbb
inc
int
fcompl
pop
xor
lods
sub
fxch
xchg
xchg
sbb
push
inc
mov
inc
and
std
loop
ljmp
adc
test
add
loopne
jl
mov
mov
inc
cmp
or
fists
adc
mov
ljmp
mov
sub
jns
sub
jnp
out
les
cltd
adc
rcrl
cltd
into
or
xchg
lea
insb
jge
push
fimuls
icebp
call
mov
jmp
jno
lock
outsl
fstl
mov
mov
sbb
inc
mov
or
in
jne
pop
pop
pop
push
dec
jl
movsl
dec
out
and
int
adc
std
stc
cmp
adc
fildll
jb
rcll
adc
gs
loope
popf
push
sub
mov
mov
stos
out
inc
and
gs
out
xchg
mov
xchg
scas
mov
mov
xlat
mov
test
ja
xor
push
mov
scas
sub
cli
dec
imul
nop
iret
ret
dec
cmp
fisubl
comiss
pop
fisttps
leave
dec
iret
push
sub
inc
imul
fisubrs
adc
pop
gs
stos
popa
adc
lods
shll
inc
ja
cli
mov
popa
mov
enter
int
push
call
loop
jecxz
roll
jne
sbb
movsb
shlb
xchg
adc
pop
sti
inc
push
in
fnstenv
lock
nop
inc
adcb
jp
addl
fucomip
test
pop
sub
add
pop
jmp
lret
sub
pop
cmp
ds
lcall
or
outsl
push
test
sbb
add
enter
push
ljmp
adc
mov
fldenv
mov
test
aam
mov
cwtl
in
popa
mov
mov
les
fcmovnbe
std
addl
bnd
cli
xor
cmp
aam
jg
jg
lock
mov
push
xchg
lds
movsl
mov
out
pop
in
sub
sub
dec
stc
pusha
ret
add
arpl
xchg
mov
push
in
dec
jo
mov
imul
sahf
inc
push
xor
scas
pop
je
cmpb
sub
cwtl
daa
or
push
call
pushf
xchg
pop
out
lock
xlat
ficompl
mov
lret
cmp
jbe
pop
push
sbb
int3
bsf
shlb
lods
sbb
mov
xorl
cmp
xchg
psubsb
imul
stos
cmpsb
cld
inc
cmp
hlt
je
js
sbb
or
scas
push
sbb
cmpsb
das
stos
mov
adc
xor
ret
jns
das
adc
insb
enter
inc
jnp
or
jb
inc
loop
and
xlat
leave
mov
cmp
dec
sbb
je
pop
add
add
add
push
outsb
in
leave
inc
xor
loopne
or
stos
jp
movlps
add
xlat
pop
or
jb
add
fidivs
cmpsb
lock
aam
addr16
adc
shl
mov
fmuls
repnz
movsl
pop
pop
and
fsubl
movsb
je
mov
jmp
leave
cltd
lret
loope
subb
test
xchg
jo
clc
jmp
push
mov
mov
jge
int
sub
mov
fidivs
lret
movsb
ret
aad
sub
jns
mov
inc
jns
xchg
in
das
cmp
stc
mov
ficomps
rorl
push
sahf
mov
inc
enter
movsl
push
jmp
ljmp
lods
call
out
daa
adc
jb
xchg
cli
cmc
clc
out
jmp
mov
outsb
push
ficoml
jo
outsl
mov
lds
sub
inc
icebp
mov
movb
or
inc
mov
test
sbb
inc
verr
insl
pop
fwait
mov
or
mov
fiadds
addr16
pop
je
in
movsl
lcall
popf
cltd
clc
add
push
outsl
dec
popaw
int3
push
aam
adc
xchg
out
mov
jecxz
pop
les
inc
pop
jbe
dec
push
data16
xchg
dec
pop
popa
sarl
mov
sbb
scas
repnz
in
and
pop
cmp
orl
stos
fstl
lods
and
xchg
out
cmp
int
mov
pop
fldt
div
shll
dec
out
xchg
push
xchg
dec
add
andb
jp
repz
add
mov
imul
inc
xlat
rclb
or
mov
popa
jbe
cmpsl
lock
mov
stos
jle
shll
mulb
sbb
and
adc
sbb
cmpsl
leave
add
dec
cltd
idivb
daa
std
dec
push
movsl
inc
sahf
add
mov
cmp
scas
decb
outsl
inc
sti
jns
outsb
or
xchg
fisubrl
rcrl
loop
aam
cltd
inc
addr16
and
rolb
dec
je
icebp
mov
test
mov
jg
fsubrs
mov
and
jecxz
adc
mov
mov
add
jns
mov
add
leave
ret
inc
sbb
adc
das
insb
mov
push
or
jno
xor
or
push
push
daa
movsb
jns
out
sbb
dec
in
mov
or
pop
pop
cmp
ds
pop
fldcw
cld
cmp
pop
or
push
call
push
ja
mov
stc
out
push
addr16
sbb
rcr
jle
lret
div
jae
idivb
ja
jp
sub
jae
scas
push
add
or
lcall
cmp
fdiv
negl
and
cwtl
ss
mov
mov
aam
mov
mov
ss
pushf
inc
push
xlat
xchg
sbb
into
aaa
test
or
jl
jb
mov
aas
pop
inc
jae
out
jnp
jp
xchg
lds
adc
jo
imul
mov
sahf
test
xchg
ljmp
pop
adc
xchg
adc
jo
and
ss
mov
ds
push
mov
popf
jg
clc
out
lock
mov
add
mov
stc
fidivrl
and
mov
push
and
mov
das
dec
arpl
movsbl
test
call
mov
out
into
jmp
adc
push
mov
jl
push
or
fisttpll
sub
mov
test
shrb
push
push
fnsave
in
std
inc
negb
inc
pop
aam
fimull
mov
push
scas
in
scas
popf
in
stc
fldcw
leave
in
jecxz
pop
loop
fisttps
xchg
sub
dec
xchg
push
mov
in
jl
inc
pop
adc
dec
inc
call
test
imul
push
lods
cmp
out
pop
enter
sub
push
mov
sub
jbe
fisttpll
sub
sub
aaa
jl
dec
cmpsb
mov
fisttpl
stc
stos
mov
bound
push
mov
lret
subl
dec
jp
mov
xchg
adc
inc
fdivrl
adc
das
and
inc
or
inc
out
lcall
rcrb
xchg
cmp
cmp
jbe
cltd
popf
repnz
xchg
push
stos
sbb
xchg
cltd
push
push
iret
dec
iret
fbstp
jmp
fcmovnb
dec
loop
test
inc
sti
and
aad
popa
psubq
test
mov
adc
cmpsl
pop
mov
cmp
aas
hlt
jmp
push
shrl
mov
pop
add
xchg
mov
and
xor
out
dec
aas
inc
daa
mov
inc
and
push
mov
mov
ret
push
cmp
subb
xchg
rcrl
mov
cs
mov
xor
xor
call
mov
clc
lock
stos
jp
dec
mov
add
push
aas
or
repnz
fstpt
add
and
adc
sbbl
xor
cld
stos
and
xor
inc
ds
push
movsl
mov
ror
ret
test
gs
es
or
fdivs
sbb
hlt
rolb
aas
clc
dec
dec
icebp
in
inc
jbe
movsb
cmpsl
mov
out
aaa
sbb
fldenv
fsincos
aam
jbe
jo
mov
jge
aas
test
jmp
push
pop
inc
lahf
inc
pop
cld
or
pop
xor
adc
xchg
inc
xchg
jo
pop
cmpsb
mov
es
pop
insl
mov
cmp
icebp
data16
in
ljmp
mov
sbb
repnz
test
jge
testl
add
mov
mov
andl
adc
sbb
into
out
lea
and
push
mov
push
mov
test
insl
inc
mov
in
xchg
pusha
pop
xor
and
std
mov
ds
inc
fiaddl
fs
jmp
inc
xor
jge
fisttpll
jne
jmp
fcomps
stos
push
push
movsl
addr16
outsl
popa
fildl
mov
mov
out
in
icebp
push
xchg
pop
pop
jno
ffree
lret
cmp
arpl
inc
xor
aaa
in
pop
enter
les
fiaddl
scas
cwtl
cwtl
dec
dec
add
push
pop
jnp
sbbl
mov
inc
pop
jecxz
mov
or
popa
or
mov
rorl
push
fdivr
aaa
mov
xlat
dec
lea
dec
xchg
sub
mov
aaa
je
fs
repnz
lea
jle
dec
imull
push
cwtl
fisubl
and
test
mov
cmp
je
test
mov
insb
pop
add
imul
sbb
adc
fldenv
mov
mov
or
and
daa
fmul
in
leave
repnz
adc
add
inc
rcrl
mov
xor
add
ds
clc
sbb
bound
test
insl
push
dec
mov
lds
pop
or
mov
aam
adc
dec
andl
scas
pop
bsr
pop
and
xchg
adc
nop
mov
adc
or
lea
repnz
sub
xor
jp
test
sbb
mov
je
or
in
jmp
lea
lods
add
pop
mov
add
int
mov
xchg
incb
and
add
mov
fdivrl
pop
inc
outsb
in
xchg
lock
les
jnp
aam
mov
cmp
insl
sbb
push
rolb
fisubrs
inc
mov
sbb
enter
stos
in
lds
cmpsl
inc
mov
xor
dec
jecxz
sub
push
mov
push
cli
lock
divb
sub
jns
in
lret
mov
ret
jno
lret
sub
xchg
push
xlat
push
stos
movsl
into
sbb
sub
jbe
in
lahf
push
mov
pop
leave
addl
fidivrl
insl
loop
cmp
mov
sbb
xor
ja
pop
imul
sbb
adc
xchg
cltd
scas
inc
shll
jo
or
inc
xor
cmpl
data16
jae
sbb
inc
gs
mov
xlat
inc
add
popl
mulb
xchg
push
jae
xchg
popf
xchg
mov
les
push
std
add
aad
ret
ljmp
inc
and
xchg
test
mov
mov
jmp
push
xchg
fnstenv
adc
insl
sbb
pop
sbb
mov
out
loope
cbtw
inc
leave
negl
cld
push
movsb
inc
jg
icebp
ja
jmp
icebp
sub
xor
pop
roll
inc
aad
andb
cmp
and
mov
mov
gs
pop
pop
out
dec
ljmp
pop
mov
shll
push
inc
fdivl
das
stos
mov
lcall
mov
divb
mov
mov
bound
ss
add
push
aaa
cmp
and
xlat
mov
dec
mov
mov
icebp
cwtl
fists
and
nop
and
cwtl
jno
in
jmp
cs
loopne
repnz
sub
and
mov
jl
sub
adcl
int3
insb
enter
adc
jnp
imul
add
mov
ror
xchg
in
out
sbb
xchg
adc
in
or
adc
add
lret
dec
sbb
mov
sbb
or
or
daa
es
xor
in
int
sarl
fmuls
mov
setno
mov
aas
lea
lods
insb
sbb
xchg
mov
leave
icebp
sub
clc
and
jb
xchg
popa
dec
in
loop
fisttpl
and
cmc
jmp
ds
cwtl
fisubrl
cmc
push
push
ljmp
aas
aam
cmpsl
fiaddl
sbb
lcall
idivb
dec
sti
push
arpl
xchg
lcall
or
mov
sbb
jp
lahf
xor
ficoml
aad
adc
fiadds
xor
mov
mov
mov
ljmp
xchg
sub
add
pusha
mov
es
inc
cmp
mov
pop
fisttps
rcl
xchg
fs
sub
arpl
sbb
imul
dec
in
arpl
jae
inc
adc
in
shlb
jl
sub
movsl
jnp
sbb
push
xchg
shll
stos
inc
mov
or
sub
ja
mov
inc
test
inc
add
or
inc
fmuls
inc
lock
sbb
ret
add
aad
cmp
nop
cmpsb
leave
lds
in
cld
mov
bound
outsl
repz
popa
xor
lret
mov
cltd
mov
or
sub
pop
bound
jns
aaa
stos
push
dec
ret
nop
out
add
jne
adc
jnp
dec
pop
testl
and
stos
cltd
or
mov
out
aam
test
insl
xorb
inc
jno
fistl
ret
or
pushf
lock
push
adcl
inc
lcall
dec
add
arpl
cmp
inc
cmpsl
mov
push
mov
jnp
mov
gs
sub
xchg
mov
js
dec
test
ret
test
mov
stc
jmp
push
and
mov
xchg
inc
mov
int3
movsb
test
jl
daa
divl
mov
adc
sti
pop
lcall
lds
dec
xchg
push
shll
jno
adc
bnd
xor
mov
je
loope
sub
fsts
xchg
jae
pop
jmp
aad
jns
xor
jbe
sub
mov
inc
frstor
or
jge
pusha
ds
sub
bound
rclb
dec
xor
xchg
mov
push
jne
mov
ja
lods
daa
sub
push
adc
push
push
shll
fsts
cmp
rcll
scas
popa
cmp
xor
out
jnp
xlat
sbb
sbb
jns
fs
mov
pop
add
imulb
xchg
loopne
ja
mov
notb
hlt
mov
in
je
test
or
insl
add
xor
xor
popa
std
ds
mov
jno
mov
sbb
fwait
ret
and
scas
aad
cld
loop
out
mov
lcall
arpl
and
ja
test
pop
dec
jae
or
ljmp
frstor
outsb
ss
xchg
cmp
repnz
daa
mov
push
lea
fs
sbbb
pop
mov
add
mov
test
subl
cli
xchg
mov
add
mov
add
jae
hlt
pop
jg
scas
xchg
sbb
ja
cmpsb
or
jmp
aas
and
fildl
loope
fiaddl
out
mov
inc
stos
sub
dec
mov
push
sub
sub
popa
lock
push
ret
call
popa
jecxz
and
pop
test
je
xor
mov
jmp
inc
cld
jp
pop
out
add
iret
cmpsl
repnz
or
loope
cmp
lcall
lea
mov
or
sub
jno
das
push
jae
mov
in
xchg
xor
push
mov
xchg
mov
imul
sbb
aaa
lds
dec
call
imul
xor
in
jne
pop
dec
pop
scas
pop
pop
loop
cltd
arpl
jb
outsl
fmuls
xchg
cwtl
mov
jno
or
insb
ret
mov
cmp
mov
mov
adc
jo
cmc
mov
mov
pop
pop
add
dec
leave
imul
pop
mov
jne
int3
sub
outsl
xchg
pop
loope
xadd
and
sub
es
scas
mov
sti
inc
iret
std
test
pop
pop
js
push
cmp
add
data16
pop
dec
popa
ja
dec
xor
jnp
leave
sub
popa
adc
sbb
sbb
jns
jno
cmp
test
scas
pop
jnp
jmp
pusha
cld
xchg
in
push
xchg
aaa
jmp
dec
mov
inc
add
repnz
test
rcrl
adc
repz
fstl
jno
adc
xchg
jge
inc
mov
fmuls
ret
mov
scas
ss
test
and
xor
loopne
add
mov
mov
subb
sub
mov
call
cltd
insl
push
loopne
rcl
fstps
loop
imul
add
lods
lods
arpl
aad
push
sbb
mov
popa
not
not
or
mov
adc
test
add
int3
inc
ds
pop
jle
push
int
cli
mov
jno
iret
les
lcall
cmp
out
movsb
repnz
mov
pop
ss
test
jg
sub
xlat
ds
shl
xor
dec
cmc
repnz
les
and
sbb
aaa
jle
hlt
sub
outsl
push
adc
lea
stos
shll
xor
inc
aad
mov
ljmp
lock
push
mull
mov
std
notl
imul
mov
xchg
jmp
dec
lcall
lds
mov
jae
call
inc
rcl
xlat
fimuls
call
pushw
pop
pop
pop
shl
iret
cwtl
mov
out
jmp
repz
jno
lret
shlb
cmp
sub
mov
cmp
imul
cmp
jmp
sarl
popa
or
loop
mov
popf
cmpb
mov
dec
sub
adc
insl
sbb
xor
subl
add
mov
adc
cmp
push
test
pop
push
add
stos
push
inc
xor
int3
fsub
add
jns
ja
mov
std
adc
enter
jg
jp
adc
xchg
pop
pop
in
inc
pushf
inc
or
out
lahf
out
pop
xchg
stc
xor
push
rol
inc
mov
daa
addr16
xchg
js
push
add
out
fwait
mov
push
and
ret
mov
addr16
popf
daa
ret
xchg
add
dec
mov
cwtl
leave
ss
jg
scas
pop
add
add
fcmovb
mov
mulb
sahf
inc
mov
mov
aaa
or
and
or
loopne
sarb
xchg
pop
inc
popf
mov
jg
xchg
clc
push
outsl
test
enter
mov
pop
clc
sbb
xor
pop
fisttpll
cmp
mov
imul
dec
imul
incl
jne
mov
icebp
roll
cmp
cli
sbb
ret
loope
cmp
gs
lods
xchg
inc
or
bound
mov
shr
cmp
and
rcr
dec
push
mov
cmc
sbb
nop
test
lods
fmul
fcomp
movsb
and
pop
cli
inc
xchg
sbb
inc
xor
jmp
mov
sub
imul
cld
mov
idivb
pop
jmp
pop
pusha
mov
xchg
push
jl
mov
jg
sbb
and
ds
pop
pop
xor
divb
and
jae
sub
lea
lcall
out
jbe
nop
xchg
nop
cmp
xchg
stos
add
or
cmp
push
fsubrs
xchg
leave
add
add
shll
in
call
outsb
cmc
pop
mov
cwtl
xor
jge
and
arpl
aaa
pop
adc
cmpsb
xchg
adc
mov
loop
mov
loopne,pt
into
ljmp
stos
mov
minps
sti
push
jg
cmc
mov
xor
bound
adc
out
shrb
cwtl
push
mov
xor
shll
test
sbbl
push
enter
jo
push
or
pushf
out
lahf
dec
lods
or
xchg
and
das
stc
cmp
inc
jno
xchg
cmp
mov
jp
xchg
jne
cmp
jae
mov
pop
jmp
popf
stos
jns
out
cmp
xchg
mov
pop
ljmp
aas
jns
fdivrs
push
push
scas
imul
aaa
sub
sub
insb
add
incb
movsl
jno
in
loopne
outsl
xchg
xchg
xor
adcl
fcompl
mov
lret
or
cmc
enter
adc
mov
mov
mov
scas
dec
movsb
shll
xlat
mov
pop
xor
or
mov
mov
push
pop
dec
pop
xor
jge
push
xchg
in
aam
into
scas
xchg
gs
xchg
sub
and
or
popf
popl
adc
ja
gs
cmp
jle
pop
cmp
ret
int
xchg
and
or
lods
jae
test
sbb
jecxz
fldl
push
add
pushf
pop
adc
lcall
pavgw
pop
add
pop
fbld
nop
mov
dec
push
mov
test
sub
inc
mov
das
idivb
and
push
add
std
lcall
mov
fildl
xchg
jmp
mov
sbb
mov
cltd
in
arpl
sub
bound
mov
xor
add
in
fidivrs
inc
or
cld
and
jg
push
or
gs
xchg
add
fs
je
push
jae
jno
into
adc
push
je
pop
mov
add
push
push
sbb
xor
push
or
pusha
leave
imul
lret
mov
stos
stos
jbe
adc
xor
inc
les
mov
push
jle
jp
pop
fisubs
loop
daa
adc
inc
fists
rolb
pop
push
xlat
loope
sbb
cmp
xor
out
add
mov
pop
aaa
dec
gs
stos
sbb
out
mov
push
xchg
pop
test
xchg
scas
inc
fldt
push
fldl
sahf
int3
adc
adc
xor
jl
jl
lcall
xchg
flds
lcall
mov
mov
mov
or
sub
inc
int3
fs
fs
lret
in
ljmp
sbb
lret
stos
pop
sub
lods
or
jns
aaa
jp
xchg
data16
xor
add
xor
stos
mov
dec
sahf
jp
push
je
cli
mov
mov
insl
jmp
sbb
adc
ds
lret
cmp
das
sbb
imul
mov
jmp
cmp
ffree
pop
mov
jge
cmp
mov
mov
jno
lock
xor
xor
into
xor
mov
scas
mov
or
sti
xchg
pop
pop
pop
icebp
push
inc
and
inc
inc
cmp
loop
movsl
or
int
scas
adc
and
lods
out
adc
and
bnd
and
ret
cmp
test
cmp
xchg
sti
or
shrb
mov
or
mov
mov
int3
xor
lods
loopne
sub
cmp
mov
xchg
and
add
std
inc
push
iret
out
dec
bound
popf
jae
loop
dec
out
jp
pop
jo
lock
jg
and
inc
sub
fcomp
adc
mov
sub
add
cmp
bound
mov
push
movsb
inc
sbb
test
lods
mov
fnstsw
int3
lahf
in
fldenv
inc
movsl
loopne
inc
enter
jmp
cmp
mov
lret
popa
push
dec
cmp
movsl
jns
fnsetpm(287
scas
inc
lret
cmc
add
in
and
std
xchg
lahf
sahf
mov
lock
xor
push
mov
inc
mov
imul
shlb
add
outsb
pop
pop
sub
cmpsl
fincstp
cmp
adc
fs
fdivrp
lcall
pop
shll
or
fdivr
enter
aam
xchg
das
inc
sbb
je
xchg
or
xchg
lea
cmp
lcall
sub
jmp
in
adc
push
xor
stos
dec
cmp
dec
ffree
shll
ljmp
ss
imul
pop
cmp
in
aaa
inc
cli
hlt
stos
sbb
scas
dec
mov
pop
and
mov
ret
add
pop
or
mov
daa
dec
cmpsb
add
pusha
loopne
movb
cmp
leave
lods
xchg
inc
sbb
stos
sbb
jp
inc
cmp
cli
stos
push
leave
cli
aas
jne
mov
or
arpl
lret
mov
clc
in
pop
and
mov
xchg
add
mov
mov
ret
out
rclb
repnz
xchg
xor
dec
xor
mov
pop
mov
sti
ss
cmp
push
jno
test
pop
jmp
popa
int
mov
jno
fsubs
stc
dec
xor
mov
pop
lods
jecxz
mov
ja
pop
xlat
inc
insb
dec
add
inc
lahf
sahf
call
test
push
lock
mov
xor
and
lret
sub
mov
shll
ret
mov
xchg
ret
das
in
or
cli
scas
outsl
sbb
push
pop
mov
fdivr
mov
mov
dec
jp
shrl
jecxz
cmp
int3
push
cld
fidivs
fdiv
int
test
mov
xor
add
inc
xchg
es
adc
inc
sub
xchg
cmp
fildll
scas
bound
in
push
nopl
into
fsubl
popf
jne
aaa
orb
pop
or
test
sbb
fmuls
repz
xchg
and
sbbb
push
dec
fdivrl
push
xor
lahf
loope
push
cmp
jno
jb
test
inc
adc
mov
xor
mov
mov
push
outsl
notl
mov
decl
dec
mov
xchg
in
jno
add
sbb
aaa
dec
push
mov
jne
gs
push
lods
cmp
push
add
or
shll
push
pop
inc
push
fcmovne
mov
popf
hlt
test
jmp
jno
push
sub
adc
or
mov
add
das
mov
lret
out
xchg
fcoms
cmpsb
inc
jo
xchg
mov
cmp
adc
mov
inc
mov
dec
jns
jmp
push
test
in
xor
loopne
test
xchg
adc
inc
jns
mov
jl
in
pop
in
adc
push
aad
pusha
push
fistpl
loop
rclb
push
repnz
sbb
cmp
js
cmp
push
xchg
jbe
leave
xchg
dec
les
dec
iret
dec
add
sub
adc
lea
xchg
push
jb
inc
mov
lea
pop
inc
cmc
xchg
lret
hlt
push
gs
mov
mov
testl
out
adcb
or
sahf
inc
inc
xor
inc
dec
ret
xor
shr
push
nop
ljmp
adc
test
mov
add
imul
mov
sbb
dec
outsl
pop
pop
xchg
pop
pop
and
adc
arpl
inc
adc
pop
dec
dec
cmp
cltd
dec
mov
lcall
add
in
sbb
xchg
das
sub
jmp
pop
hlt
add
vpavgb
dec
iret
aas
iret
outsl
out
mov
mov
fcom
jno
outsl
daa
and
stos
ss
stc
xchg
push
fdivl
imul
pushf
mov
sar
shll
push
les
mov
jo
insl
pop
cmc
aaa
or
movzwl
mov
jb
ljmp
shl
xchg
fisubrl
push
adc
pop
sub
ljmp
or
push
cmc
fnstsw
arpl
mov
js
rolb
dec
and
int
mov
test
scas
xchg
inc
jne
sub
mov
shl
mov
inc
push
cmpsl
cs
jns
push
jns
ljmp
std
popf
ret
and
iret
lcall
push
and
popa
frstor
stos
rep
cmp
mov
lock
mov
jecxz
and
cmp
sbb
es
jo
ficomps
loopne
sbb
dec
fimull
mov
addr16
aad
subb
std
ret
push
sbb
adc
push
or
movsl
or
leave
mov
popf
dec
arpl
adc
in
into
loopne
push
std
cld
dec
mov
push
adc
xor
sti
das
dec
jge
and
daa
testl
xor
cmpsl
or
push
lods
jno
push
sub
mov
pop
pop
push
xor
jl
cld
xchg
mov
push
cmp
adc
out
rcrl
and
fidivrl
jne
fdivp
je
or
ja
push
ljmp
fdivrl
faddl
mov
mov
mov
mov
movb
adc
add
add
loope
mov
pop
outsl
xorb
call
mov
fmul
xchg
xchg
flds
jnp
test
add
or
fadds
cmp
sub
add
sub
mov
push
icebp
dec
fsubs
mov
lret
cmpsl
out
pop
popa
and
mov
push
mov
push
mov
sub
dec
or
mov
scas
pop
pop
push
stc
imul
dec
pop
les
and
push
scas
stos
orl
shrl
pop
hlt
xchg
hlt
add
icebp
mov
dec
aad
xrelease
out
out
add
and
pop
lods
stos
push
aas
and
hlt
mov
push
cmpsl
add
inc
jmp
movsb
vpmaddwd
mov
mov
fsubr
xor
mov
loop
mov
test
clc
popf
pop
and
aaa
subl
dec
test
mov
cmp
xor
pop
scas
dec
ficomps
repnz
fidivrs
ja
xchg
fs
insb
mov
pop
mov
jnp
cmpsl
pop
ficomps
jo
add
and
loopne
rcrl
push
int3
or
xchg
cli
adc
push
leave
xchg
jno
fcompl
and
icebp
cmc
arpl
aad
loope
cli
bound
ret
sbb
in
adc
ljmp
mov
repz
and
mov
jecxz
aaa
mov
dec
mov
cli
xchg
pop
and
sbb
f2xm1
push
pop
pop
inc
sub
mov
push
dec
clc
rorl
js
mov
jae
icebp
outsl
ret
inc
ret
dec
icebp
xchg
nop
std
cmp
mov
ret
mov
jle
pop
push
mov
mov
mov
shll
jae
insl
cmp
inc
mov
out
outsl
faddl
dec
add
cmp
aad
sbb
cwtl
adc
cmp
fs
mov
mov
push
insl
jne
in
inc
xchg
cmp
and
or
pop
jnp
subb
mov
adc
mov
jnp
add
mov
dec
sub
push
cmp
add
stos
out
sub
in
push
adc
jns
in
in
jmp
pusha
fidivl
jmp
les
mov
and
int
fildll
scas
int3
mov
movsb
cwtl
js
or
and
xchg
add
add
mov
xorl
push
je
std
cmp
lret
lcall
and
lods
pusha
popa
popf
jae
pop
loop
fbstp
dec
add
mov
into
mov
in
dec
inc
mov
push
sbb
and
xchg
or
mov
cmp
mov
rolb
in
addr16
repz
mov
jl
ret
cmp
sub
fsubrl
pop
jnp
adc
fnstcw
dec
pop
popf
xlat
sbb
sub
pop
mov
sarb
sbb
lahf
adcl
leave
jle
mov
nop
test
xor
popa
outsl
push
add
mov
out
dec
loope
fwait
fwait
aas
adc
insl
shll
stos
mov
cmp
fcmovnb
mov
adc
aaa
mov
jns
push
push
imul
sti
cmp
dec
sub
inc
outsl
cmc
pop
adcb
and
sbb
loop
movsb
mov
in
insl
mov
pop
repz
or
popf
enter
les
xor
adcb
jge
sub
or
daa
ds
pop
bound
pop
ljmp
inc
xchg
add
dec
and
je
sbb
frstor
pop
jmp
xor
fidivs
lcall
js
cmpl
jle
sbb
lahf
stos
add
sti
xor
pop
cwtl
cmp
sarl
scas
mov
mov
sub
inc
push
data16
xor
mov
add
sbb
and
jo
jae
push
jmp
cwtl
pop
and
push
mov
data16
mov
add
add
pop
rol
dec
fcoml
xchg
or
aas
fwait
insb
push
mov
mov
imul
or
sbb
fidivrs
xchg
xchg
sub
mov
test
push
sahf
jo
addb
pop
cmp
and
movsl
jnp
lea
ds
outsl
xor
cmp
mov
push
pop
jl
xor
aaa
ficoml
pop
mov
fstl
popf
xchg
lods
jns
xor
mov
pop
xchg
lahf
xchg
xchg
cld
mov
sbb
or
stos
rcl
in
lea
loope
cltd
lods
push
pusha
loop
les
or
test
mov
mov
xchg
lahf
shrl
repnz
xchg
bound
adc
pop
xchg
xor
lret
mov
cmp
mov
stos
mov
icebp
loopne
xchg
aas
daa
leave
and
aaa
add
pop
sub
push
insl
divb
adc
dec
ret
repz
data16
adc
mov
jl
pusha
lret
inc
lea
adc
push
xor
subb
sbb
ret
pop
bound
cs
sub
xor
adc
cld
or
aam
adc
or
int
in
imul
lcall
push
mov
mov
push
in
je
les
movsl
addl
sbb
repnz
pop
dec
xchg
aam
lods
pushf
mov
and
dec
scas
pop
ljmp
sbb
subl
dec
mov
aaa
dec
sbb
and
mov
cs
xchg
sti
mov
movsl
xor
not
js
pop
jge
adc
pop
dec
jge,pn
in
push
xor
sub
jae
and
cltd
and
lea
push
jno
shlb
ret
ret
sbb
nop
sbb
sub
outsb
mov
nop
xchg
mov
std
nop
adc
repz
filds
lods
pop
xchg
mov
add
mov
cmp
ja
notb
xlat
mov
imul
arpl
and
dec
adc
mov
cmp
pusha
mov
jecxz
jmp
out
xor
mov
out
loope
fcmove
sub
inc
jno
inc
adc
es
popa
and
pop
scas
cltd
out
add
in
or
mov
call
lahf
cltd
addr16
cmp
imul
leave
in
int
mov
in
and
inc
mov
jae
lea
inc
jae
jne
jmp
or
pop
mov
mov
mov
adc
dec
fstps
push
inc
jge
popa
sub
push
push
xchg
std
and
mov
add
or
loop
push
fimull
sbb
push
mov
pop
push
in
xchg
pop
add
dec
sub
xorb
mov
cmc
xlat
in
fadds
insl
mov
sub
inc
push
jecxz
mov
mov
cmp
mov
push
lock
mov
mulb
xorb
ret
jmp
jae
inc
mov
push
sbb
fstpl
jle
rcrb
ss
cmp
cmp
mov
sub
pop
in
and
stos
adc
aas
mov
in
push
mov
cmp
mov
mov
scas
sbb
mov
sbb
mov
fists
out
in
or
sahf
and
scas
push
inc
divb
mov
ret
call
fmull
mov
jne
inc
rorb
mov
repz
fs
scas
aad
inc
ljmp
push
clc
jnp
shrl
cmp
aaa
jb
adc
lods
fcomps
lcall
test
addr16
ds
scas
cwtl
inc
dec
xlat
scas
xchg
test
push
ljmp
jnp
fldl
into
adc
jmp
xorb
enter
cmpsl
call
and
je
mov
pop
into
xor
je
pop
push
cmp
cs
std
sub
ret
dec
sbb
in
adc
test
lret
lock
stos
mov
and
fidivrl
sbb
xor
pop
js
rcr
clc
mov
imul
cwtl
cltd
movsb
sub
fistpl
dec
adc
push
adc
loope
adc
out
repz
call
popa
adc
movsb
sbb
adc
in
sub
adc
fcmovnbe
pushf
imul
test
bound
mov
gs
sbb
jns
mov
lods
inc
sbb
stc
les
loope
movsb
sbb
pop
jle
lods
out
or
ljmp
mov
jle
pop
lods
fildll
jne
cmp
std
or
aam
or
inc
cmp
dec
aad
cs
popf
or
xchg
or
shll
sbb
cli
mov
aad
inc
cmp
xchg
out
shll
cmp
pop
repnz
iret
and
add
xor
sti
pop
sub
pop
in
jl
push
daa
test
or
aam
cmp
inc
sbb
scas
scas
mov
add
jno
mov
push
xchg
xor
adc
mov
fisubrl
push
call
mov
push
sbbb
lret
jmp
das
lock
les
in
or
dec
mov
test
jmp
sub
stos
mov
sub
or
mov
aam
push
dec
mov
jmp
les
cmp
fisubs
scas
jne
inc
js
xchg
mov
test
lret
mov
sarb
rcrl
push
out
nop
fisubrs
jbe
push
push
adc
xchg
loopne
push
pop
loopne
mov
xor
movsl
test
cmpsl
or
adc
pop
ljmp
and
outsb
outsb
jmp
cmp
and
out
or
adc
pop
mov
loop
cmp
cmp
adc
xchg
popf
sub
sbbb
mov
push
loope
xor
push
call
cmp
roll
in
mov
outsb
or
pop
inc
outsb
jp
xchg
bswap
jne
xchg
jmp
xor
inc
pop
call
loope
pop
xchg
sahf
test
pop
ds
enter
icebp
test
xor
test
push
and
pusha
pop
loope
ljmp
and
sub
repz
xor
pop
ret
je
pop
push
arpl
mov
pushf
adc
cmp
add
mov
xchg
in
xor
sbb
jb
mov
int
mov
mov
sbb
testb
clc
pop
fildll
stos
xor
bound
xor
enter
jmp
test
pop
stos
and
dec
or
add
pop
xor
push
ss
xor
fwait
add
lods
test
fiaddl
push
xor
inc
repnz
aam
push
je
dec
inc
inc
mov
stos
inc
xlat
ret
addb
xchg
icebp
jne
mov
push
mov
test
mov
nop
mov
dec
xchg
cwtl
xlat
stos
mov
mov
ljmp
loopne
or
add
push
faddl
jle
push
mov
pusha
stc
test
lret
inc
xchg
scas
and
push
nop
sahf
jns
scas
jb
out
repnz
fnstenv
pushf
or
and
xchg
aas
mov
dec
je
jle
add
adc
in
das
xor
repz
push
mov
cmp
lods
hlt
mov
cmp
data16
cli
sar
and
lea
call
xor
cmpsb
pop
ret
enter
cmc
pop
mov
push
inc
xchg
dec
dec
ret
and
sub
xor
call
xor
call
scas
mov
shll
ror
xchg
push
add
mov
push
popa
pop
jg
mov
xchg
dec
mov
aaa
loop
mov
mov
adc
add
lret
adc
cmpsl
in
cmp
aaa
pop
mov
cmc
rorl
mov
shl
mov
push
mov
cmp
sub
sbb
rcrl
fsubrl
into
test
mov
push
ss
lock
jns
stos
aad
and
aam
or
je
aaa
clc
push
movsb
lret
outsb
adc
xor
cwtl
je
push
jmp
test
movl
outsl
jmp
out
adc
ds
repz
push
sbb
shll
fwait
xchg
and
or
fcomps
aaa
jae
xchg
cmp
push
mov
mov
xchg
xlat
enter
xchg
xchg
mov
pop
scas
repz
popf
add
stos
xor
dec
into
pushf
mov
sti
or
mov
pusha
out
push
movsb
loop
out
iret
inc
je
sub
ret
dec
or
fsubl
aad
cmp
pusha
fcoms
in
call
cmp
add
aas
mov
push
fiadds
dec
fisttpll
pop
adc
std
jge
test
sub
not
fsubs
repnz
shll
sub
lods
jnp
add
cmp
sbb
scas
pop
repz
push
test
and
adc
cltd
or
adc
dec
sbb
imul
dec
push
xor
lret
das
mov
in
stos
outsl
xor
shlb
push
sbb
cmp
xchg
push
mov
cmpsb
lret
pop
xlat
mov
sarb
ljmp
jmp
ds
or
push
push
pop
into
sbb
lods
popa
jno
sub
cmc
sbb
cmp
fisubrl
or
push
lea
or
sub
push
arpl
xchg
repnz
pop
call
push
stc
xchg
ficoms
xor
shlb
imul
pop
insl
mov
xor
cmp
pop
call
xlat
js
ret
test
rorb
fisubrl
mov
lahf
mov
hlt
adc
sti
xchg
rorl
sub
stos
push
into
and
pusha
je
xor
into
mov
push
shll
jbe
inc
push
dec
mov
fildll
cmp
dec
inc
scas
inc
pushf
dec
fldcw
addb
dec
filds
sub
xor
and
addl
push
adc
in
loop
add
pop
sbb
xor
xor
add
loopne
add
data16
mov
dec
lcall
pop
cmp
push
jp
sbb
les
add
mov
clc
sbb
out
mov
push
xchg
push
add
or
loopne
xchg
dec
sub
xchg
fiaddl
jg
pop
out
out
sub
xor
data16
stc
inc
adc
shl
out
inc
int3
out
mov
xorb
imul
mov
sub
sub
mov
mov
sbb
lods
mov
or
mov
repnz
xorl
lea
mov
or
imul
mov
and
and
hlt
or
cmc
decl
cmpsb
cmp
push
add
add
pop
xor
rolb
in
test
pusha
cmpsl
imul
jno
sbbb
cmp
sbb
popa
pop
xrelease
and
push
decl
bound
imul
lods
adc
dec
and
aas
adc
sub
mov
fcomps
push
bound
nop
aam
mov
jo
jle
fldcw
and
dec
pop
jp
fidivrs
xchg
aam
xchg
test
push
or
pop
shll
xor
dec
xor
pop
ljmp
out
xor
cmpsl
mov
mov
or
stos
mov
sub
dec
lods
sub
je
orb
dec
cmp
test
sbb
xchg
mov
xchg
rol
sbb
repz
lahf
and
jp
mov
in
pop
stc
mov
dec
push
inc
testb
mov
sbb
std
sti
cmp
mov
lret
mov
mov
fimuls
test
add
jnp
outsl
adc
sub
aad
mov
mov
sbb
sub
and
scas
mov
iret
into
or
insl
or
and
inc
cmp
add
mov
outsl
mov
dec
std
cmp
cltd
xlat
sbb
repnz
mov
push
jnp
pop
dec
jle
or
in
inc
fdivp
sbb
sbb
push
cmc
pop
cmp
pop
lods
cmp
lahf
les
xor
test
test
cmpsb
movsl
fwait
ss
dec
dec
scas
out
std
xchg
and
mov
dec
lret
lods
fdivs
in
lcall
cli
mov
dec
or
mov
xor
push
adc
or
pop
dec
pushf
mov
push
imul
shl
xchg
xchg
adc
fisubs
pushl
xor
jg
stos
jp
push
lods
lahf
js
pop
jns
addl
fisttps
adc
test
mov
rcpps
cli
ds
inc
nop
pop
xchg
loop
out
xchg
das
lahf
jl
mulb
out
pushf
add
outsl
fildl
cmpb
cmp
lods
sub
cmp
bound
dec
lods
pop
cmc
pop
addr16
xor
les
stc
and
cmc
sarb
scas
or
push
mov
arpl
and
fiadds
in
pusha
ja
ljmp
aaa
jmp
xor
xchg
into
aam
fcoms
std
pop
hlt
stos
push
push
mov
cmc
mov
jg
stos
and
lea
push
jle
mov
push
jmp
add
stos
push
inc
pop
lret
out
mov
adc
nop
int
sarb
fs
les
out
push
inc
insb
push
inc
stos
cmp
bnd
mov
jp
nop
or
sbb
es
push
rorb
sub
xor
xor
and
lods
cmpsb
insl
mov
mov
arpl
pop
in
repz
lcall
lahf
mov
xor
ror
adc
rcrl
clc
mov
sub
or
aas
push
mov
addb
lret
je
ljmp
sbb
cmp
inc
mov
rorb
sub
add
jo
push
dec
mov
inc
js
adc
or
in
mov
push
mov
les
scas
shrb
cmp
fwait
lcall
lcall
push
inc
push
sbb
or
dec
dec
sbb
xchg
mov
add
jo
cs
mov
push
add
mov
push
or
ffree
push
mov
pop
push
arpl
mov
push
test
dec
adc
sub
add
or
push
inc
cmpsb
aaa
gs
orl
ds
enter
cmc
hlt
cld
fstpl
loopne
je
sub
and
sarl
bound
leave
popa
push
ret
incb
or
dec
push
lcall
pop
adc
jl
repnz
lock
loope
les
subl
call
test
call
cmp
sbb
into
push
ss
cld
divb
mov
js
stos
psubsw
cli
jbe
mov
fldenv
pop
pusha
jbe
xchg
mov
ret
aad
aad
mov
lcall
jecxz
out
pusha
leave
add
int
int3
movsl
ret
jl
sbb
repnz
pop
pop
std
sahf
scas
adc
push
push
jo
or
push
das
lds
xchg
push
fsubp
loope
enter
add
int
add
psubsb
or
and
add
ds
push
pop
enter
mov
fidivl
xor
xor
push
lock
cmc
ss
push
es
test
and
sbb
adc
gs
cmp
inc
jne
cwtl
adcl
pop
inc
cmp
iret
xchg
dec
lods
icebp
dec
add
int3
dec
push
dec
and
mov
jnp
mov
out
pop
xchg
in
fdivrs
sbb
pop
call
jnp
add
shlb
test
insl
sbb
xchg
pop
pop
shl
sub
hlt
dec
push
xlat
call
loopne
sbb
jge
dec
sbb
aad
mov
mov
lcall
jo
test
inc
push
push
sbb
push
xchg
jb
inc
cmp
adc
add
or
gs
xor
xchg
cmc
repz
and
lcall
shlb
pop
push
stos
fs
sbb
pop
cmpsl
jno
iret
cld
sub
inc
mov
icebp
stc
mov
and
fwait
mov
add
cmpsl
xchg
nop
loopne
andb
outsl
loopne
jecxz
lods
into
fiadds
test
sahf
loopne
add
jge
std
or
out
arpl
stos
push
fwait
test
in
add
rcll
loop
and
aaa
cwtl
dec
mov
mov
fs
xor
and
testb
adc
mov
push
cmp
adc
dec
or
pop
int3
je
int
and
sub
rcll
ret
jle
scas
stc
sahf
pop
out
mov
xor
outsl
out
sbb
push
ss
cmpsl
add
call
push
pop
cmc
jne
push
xor
mov
push
xor
scas
je
sbb
adc
jp
fwait
mov
lahf
push
jbe
dec
cmpsb
add
rcrb
xor
push
mov
ds
adc
lock
mov
adc
js
scas
out
ror
ficompl
sub
jbe
gs
out
adc
mov
mov
jmp
pusha
lret
adc
popa
loop
push
out
testb
sub
in
pusha
scas
push
lock
dec
adc
xlat
in
jp
fnsave
shlb
cs
push
or
and
dec
in
out
into
adc
add
mov
dec
jbe
pop
mov
cli
hlt
dec
jp
mov
repnz
out
pop
fcom
and
push
fwait
clc
lds
xchg
mov
insb
pop
fmuls
int
add
fldcw
addb
out
and
js
or
lea
xchg
pop
test
ror
xlat
sarb
out
xchg
inc
in
lock
ja
movsl
fbld
lock
dec
pop
xchg
push
adc
pushf
mov
add
into
sub
fldl
movsb
mov
mov
int3
mov
aaa
cmp
add
mov
add
pop
js
in
sbbb
sub
mov
and
mov
sbb
pop
or
cltd
rolb
sar
fimuls
leave
jb
jle
mov
jg
xchg
sub
and
inc
pop
adc
xchg
je
jae
subb
mov
or
pusha
mov
cmp
cwtl
xchg
gs
into
ficompl
push
ja
pop
dec
adc
pop
push
les
mov
aad
stc
popa
mov
lock
mov
in
cld
dec
sbb
pop
data16
loope
adc
test
lock
ret
push
sub
sti
pop
test
mov
inc
inc
xor
dec
inc
sar
hlt
pop
pop
bound
ret
andl
ss
sbb
flds
xchg
imul
dec
in
mov
mov
lcall
dec
sahf
ret
lret
stos
push
adc
data16
ds
sti
mov
clc
test
jnp
jp
jns
inc
xchg
sub
test
loopne
into
sbb
std
hlt
mov
xchg
fstpt
jg
out
daa
cwtl
sbb
mov
call
or
mov
and
sbb
call
loope
push
mov
inc
adc
std
jle
jmp
frstor
das
stos
insl
imul
pop
inc
movsb
mov
call
sbb
cmpsl
hlt
cltd
xchg
bound
inc
adc
adc
out
and
pop
insb
aad
arpl
out
fld
mov
lods
pushf
stos
in
or
jmp
and
xor
insl
rorl
inc
pusha
movsb
jecxz
js
adc
in
sahf
inc
inc
pop
dec
and
loopne
inc
lods
mov
fwait
sub
in
mov
iret
out
cli
mov
xor
adc
fucomip
add
arpl
cmp
xchg
loopne
sti
rcrl
cld
add
inc
int
mov
icebp
sbb
lahf
int3
jecxz
or
mov
mov
mov
push
dec
pop
movsb
pushf
fldt
js
dec
test
adc
ficoml
mov
sub
push
into
aam
adc
daa
insl
push
cmpb
lock
scas
mov
nop
or
or
sub
out
and
cmp
sbb
push
xchg
inc
cmp
aam
loopne
push
test
ror
ret
xchg
mov
xchg
add
popf
icebp
cmp
sub
sbb
aaa
sub
minps
jmp
aam
int
or
fcomi
dec
mov
data16
das
sub
push
mov
inc
icebp
mov
mov
adc
mov
xor
leave
pushf
pop
inc
and
push
cwtl
les
insb
push
adc
cld
xchg
cmp
mov
mov
imul
pop
repz
push
inc
cli
aam
xchg
dec
mov
or
out
fs
loopne
repz
adc
fucom
outsb
pop
scas
shrb
fidivs
imul
xchg
jb
mov
mov
movsb
sahf
jg
andl
xlat
pop
and
rorb
gs
pop
clc
cmpsl
out
pop
icebp
xchg
or
sub
and
pop
cwtl
pop
mov
negb
jne
mov
cmp
call
out
pop
clc
sarb
dec
insb
sbb
mov
dec
inc
mov
mov
test
sub
jle
sub
divb
add
xchg
xchg
sahf
adc
ljmp
xor
xor
cmp
int3
insl
sub
mov
test
out
xchg
add
jns
and
dec
inc
test
repz
push
mov
xchg
cli
push
cwtl
out
push
aam
sbb
ret
outsb
push
test
push
dec
rorb
lock
xor
jne
pop
mov
repnz
inc
bound
insb
rclb
jp
pop
cmp
add
dec
ret
xchg
repz
scas
and
pop
es
ret
mov
xchg
int
movsb
enter
imul
mov
divb
xchg
xchg
dec
iret
add
push
xchg
push
mov
hlt
sbb
loop
dec
movsl
mov
jno
lea
cmp
mov
imul
test
adc
dec
js
mov
mov
xchg
mov
clc
mov
sbb
xchg
push
in
ret
sub
rorb
xchg
das
insl
sarl
es
insb
lret
sub
or
aad
push
pop
mov
cmp
imul
sub
test
ss
xchg
cltd
cwtl
and
and
jge
jge
std
ljmp
hlt
xor
mov
inc
sbb
sbb
xchg
sbb
add
dec
addr16
test
enter
shll
stos
fcomps
fisubl
or
movsb
scas
repnz
ror
mov
mov
mov
pop
fistpll
or
fucomip
or
push
ljmp
xor
jl
ss
mov
jns
adc
mov
inc
pusha
call
mov
and
sbb
jmp
xchg
sti
divb
push
aaa
push
movsl
or
inc
das
mov
rcrb
add
push
out
jp
adc
lods
mov
pop
adc
imul
arpl
or
inc
cs
inc
aaa
push
jge
sbb
jae
mov
pop
cwtl
jb
leave
mov
les
jb
stos
aaa
fildl
imul
outsl
xchg
adc
movsl
push
ljmp
dec
test
ljmpw
jne
sub
dec
xor
subl
add
stc
cs
mov
adc
rcl
pop
and
and
cmp
dec
adc
mov
sub
lds
testl
xchg
iret
sbbb
mov
aaa
pop
test
pushf
mov
fdivs
or
rcrl
imul
jnp
pop
push
push
and
andb
loopne
les
cs
jne
cmp
stos
mov
test
insl
std
lods
in
iret
xlat
or
jb
icebp
add
xor
shl
ret
mov
mov
dec
nop
and
imul
xchg
jb
or
sub
jnp
fstpl
fdivrs
xor
rorl
inc
popa
je
loopne
sbb
inc
xchg
int
add
cmc
and
mov
insb
jl
sti
into
push
lods
inc
sbb
mov
and
mov
push
and
test
adc
es
in
movsb
cmp
setbe
mov
rcll
sbb
lahf
dec
pop
lds
xor
push
add
pop
cmpsl
sbb
out
pop
adc
jge
adc
and
int
push
cmp
scas
bswap
dec
or
in
fadds
aas
pop
inc
push
lret
xchg
mov
cmpsb
cmp
aaa
and
inc
sub
pop
popf
idivl
addl
adc
adc
xlat
dec
mov
fmul
sub
mov
xor
aad
sbbl
out
push
jno
sub
test
sub
lds
cmp
or
vpsubusb
cmp
push
and
rcr
push
aas
jl
ja
jl
iret
push
or
push
imul
outsl
out
addb
push
aad
repz
in
negb
and
xor
shll
or
dec
inc
stos
mov
out
int3
lock
xor
out
outsl
mov
adc
add
iret
pushf
inc
adc
or
and
lods
sub
hlt
out
in
adc
andb
adc
lcall
cli
rolb
add
push
push
cmp
push
scas
sbbl
mov
or
or
and
clc
push
sub
mov
xchg
push
jp
stc
rcll
into
inc
jb
cli
jl
mov
cltd
jno
ficoml
data16
sbb
push
sbb
notl
loopne
sub
jo
inc
push
push
mov
dec
cmp
arpl
sti
jnp
pushf
cltd
aad
mull
outsl
jle
leave
jae
cmp
jne
sub
jo
and
pusha
fmuls
lock
add
cli
pushf
jnp
popl
lret
inc
pop
xor
push
xchg
inc
pop
push
sub
mov
iret
pop
jg
daa
sbb
daa
aas
pop
inc
push
adc
fwait
inc
fdivp
inc
and
test
pushf
scas
loope
mov
andl
insl
cmpsb
pop
scas
mov
adc
dec
add
clc
and
or
dec
dec
mov
icebp
pop
jg
gs
mov
push
jnp
mov
xchg
dec
repnz
mov
xchg
push
int
movsb
inc
and
test
pop
imul
imul
clc
adc
outsb
stos
arpl
cmp
xchg
xchg
mov
imul
lods
push
dec
in
and
jmp
mull
dec
lea
mov
aas
mov
pop
jno
fs
cmpb
inc
pushf
in
pop
jae
adcb
mov
mov
push
mov
cmp
dec
ds
add
cli
popa
jno
in
sti
sbb
inc
pop
mov
push
sbb
ljmp
loop
repz
cmp
shrb
lock
call
cmp
das
pop
adc
push
cmp
pop
ret
in
aad
sub
scas
and
std
push
sbb
daa
sub
pop
mov
xor
xor
hlt
test
pop
jbe
je
fwait
xchg
pop
sbb
adc
and
jle
xchg
add
jb
xor
imul
sbb
xchg
push
mov
fnstcw
adc
rcrl
add
adcl
push
mov
insl
or
mov
xchg
xchg
enter
inc
lcall
dec
psrld
cmp
cwtl
xchg
mov
jge
pop
jmp
out
lcall
mov
insl
cmp
scas
or
rcr
scas
popf
adc
js
js
test
and
inc
or
inc
sub
mov
mov
pop
adc
ret
imull
clts
mov
lds
jge
repnz
and
jecxz
dec
je
aam
repz
fiadds
test
sub
les
movsb
mov
mov
add
out
sti
add
ds
push
or
mov
frstor
dec
and
xor
jmp
and
adc
and
pop
mov
xchg
push
inc
in
lret
icebp
negl
lods
xchg
dec
fs
mov
inc
pop
xchg
mov
dec
mov
push
xchg
cltd
push
cld
and
jbe,pt
aad
sarl
inc
sahf
push
fs
mov
dec
dec
sbb
or
push
shr
inc
fistpl
loop
fldcw
adc
jns
xor
mov
xchg
and
jle
rclb
adc
jae
ljmp
int3
or
mov
dec
lret
or
push
and
ds
mov
sarb
call
cmp
mov
mov
out
cmpsl
push
fs
movsb
lock
sbb
or
lcall
dec
or
jecxz
aam
cmp
jb
sarb
xlat
xor
fsubl
filds
mov
adc
cmpsb
mov
cmp
out
sbb
loopne
test
pop
jg
dec
xchg
jg
ficomps
lret
mov
add
hlt
das
out
mov
jo
push
hlt
lcall
test
ficoms
dec
sbb
andl
fmul
add
ljmp
shlb
xchg
andb
cmp
adc
pop
pop
data16
jb
pop
out
lods
mov
test
mov
push
jbe
or
call
scas
jle
sar
in
and
stos
cltd
les
add
push
fwait
addr16
cli
out
xchg
stos
outsb
mov
call
fs
jmp
xchg
mov
and
add
sub
js
xchg
push
sbb
xchg
mov
imul
sub
mov
xchg
leave
stos
mov
cli
arpl
mov
mov
mov
xchg
xor
movsl
jle
xor
je
mov
mov
xchg
lock
popa
inc
add
sbb
lods
lock
scas
imul
or
and
outsl
jno
cmp
nop
dec
sub
sbb
lods
in
mov
jl
sub
cmp
xchg
and
jle
inc
stos
leave
sbb
jmp
int
imul
js
roll
inc
pop
lcall
aam
outsb
cmp
cmc
lock
inc
mov
xchg
cmp
das
jbe
push
xorb
jno
cs
popa
daa
and
stc
idiv
repz
cmpsl
in
test
adc
sbb
stc
imulb
pop
push
mov
push
repnz
push
loopne
fbld
pop
jae
mov
or
cmpsl
aaa
add
loopne
or
fwait
inc
or
mov
dec
fildll
pop
and
fidivrl
orl
int3
dec
xor
scas
adc
mov
inc
push
jmp
add
push
imul
lret
aam
mov
in
push
xor
aam
andb
sarl
ret
mov
outsb
push
cs
push
ljmp
dec
mov
cltd
loope
out
sub
pop
xor
xor
ret
or
lret
aam
inc
pop
add
cltd
repnz
dec
cmpsl
jb
push
in
adc
jns
adc
mov
cs
cmp
loopne
pop
std
sahf
repz
jp
mov
out
inc
aas
icebp
icebp
sbb
mov
dec
dec
sbb
sub
pushf
xor
cmc
jno
or
xchg
enter
cltd
add
fistpl
mov
sbb
and
jle
mov
enter
cmp
stos
fisubl
mov
fsubl
fwait
into
or
add
xchg
les
ds
iret
sti
rorb
dec
mov
jecxz
mov
scas
sub
mov
jae
sub
fdivr
or
sbb
sub
mov
adc
mov
push
pop
cmp
jmp
ret
dec
out
mov
inc
or
inc
push
mov
jmp
add
ja
arpl
leave
ficompl
lahf
add
and
mov
inc
jb
pop
fwait
and
in
add
loopne
jno,pn
inc
jecxz
inc
fwait
imul
rcll
in
loopne
loop
xor
sbb
pop
sub
incb
call
and
pop
cmp
rclb
add
push
shlb
leave
adc
cmp
aad
push
mov
xor
sti
mov
pop
loop
jl
dec
div
push
or
dec
arpl
outsl
mov
dec
test
mov
push
in
popa
mov
adc
add
add
addb
push
push
jbe
fimull
loopne
es
negl
dec
mov
jmp
adc
cwtl
cli
or
mov
pushf
les
sbb
cmc
fistps
adc
je
sbb
or
imul
stos
lahf
cmp
jne
stc
xor
and
sbb
sbb
mov
sub
sub
in
mov
mov
sub
push
addb
cli
fistl
jg
or
inc
adc
jbe
ja
aad
add
or
mov
repnz
imul
push
ds
cld
fdivs
mov
mov
inc
in
cmc
sub
xor
push
jmp
scas
lods
mov
push
dec
sahf
inc
jns
mov
cli
loope
popa
push
ljmp
mov
pop
popa
jl
in
push
add
shrb
pop
dec
pop
pusha
ret
rol
faddl
sbb
mov
add
jno
pushf
call
nop
mov
mov
mov
xor
loope
insb
fisubl
in
inc
loop
adc
mov
inc
movsl
add
loop
add
dec
in
xchg
jo,pt
jnp
pop
mov
add
lds
add
testl
mov
mov
push
fildl
rclb
addr16
dec
repnz
in
ret
mov
push
lahf
fwait
inc
dec
imul
push
add
sbb
roll
mov
cvtpi2ps
add
xor
outsl
sbb
dec
pop
jmp
ror
xchg
into
icebp
and
test
in
dec
clc
sub
dec
mov
stc
in
out
lret
mov
call
sbb
sub
loope
push
and
xor
push
pop
sub
xchg
inc
push
ljmp
mov
jo
adc
mov
or
scas
adc
xchg
pop
notl
sti
mov
inc
shlb
pop
hlt
ja
dec
cs
sbb
cmp
movsl
add
inc
cwtl
or
loope
leave
add
push
mov
mov
xchg
scas
das
outsl
and
int3
leave
pop
lods
or
add
adc
aad
rolb
int3
xchg
jmp
or
xor
into
xchg
bound
in
push
pop
xchg
cmpsb
push
into
or
dec
add
xorl
pop
movsb
push
adc
and
test
imul
ljmp
sti
aad
and
push
ffree
jp
sub
mov
push
fwait
jle
cmp
or
dec
adc
lea
repz
sbb
mov
mov
in
ret
notl
fimuls
ret
pop
add
push
jb
decb
ss
stc
pop
ror
iret
add
loope
inc
loope
fld
mov
xchg
aaa
pushf
jb
pop
adc
mov
lahf
jg
mov
les
or
shl
imul
jp
lods
jmp
pop
subb
ss
mov
pop
fadds
cli
jno
push
ret
mov
cltd
xchg
ret
aas
hlt
outsl
out
adc
push
iret
test
lock
dec
xlat
push
or
pop
imul
mov
mov
mov
test
add
or
push
xor
jg
pop
aad
mov
pop
ss
imul
xchg
lock
ret
mov
loopne
pop
mov
fstpl
add
jecxz
scas
pop
pop
je
sbb
mov
movsb
jbe
out
lock
inc
or
fwait
sti
add
flds
int
push
mov
outsb
dec
sahf
xchg
pop
dec
popf
in
xor
aad
push
aaa
in
sub
mov
sbb
mov
add
outsb
cmpsb
lods
inc
and
push
sub
sarl
xor
mov
pop
aaa
xchg
dec
fistl
cmpsl
ljmp
scas
dec
sbb
mov
mov
sar
icebp
scas
xor
dec
imul
cmc
outsl
lods
jp
insl
dec
inc
fwait
xchg
cmpl
in
xor
mov
lret
cmp
cmp
push
jl
inc
out
mov
cld
mov
popf
sub
push
mov
scas
mov
sbb
jb
lods
imul
test
hlt
mov
mov
dec
or
incl
xchg
aad
jge
pushf
popf
mov
push
cmp
mov
movsl
fstpt
sub
push
loop
es
inc
pop
subb
repnz
mov
sbb
mull
add
add
add
ret
cmp
out
fsubl
loopne
add
test
iret
movsb
lret
or
push
jmp
clc
int3
test
xchg
jns
lret
dec
popa
imul
cmp
vshufpd
lcall
sub
stos
mov
sub
mov
inc
popf
imul
or
mov
mov
jecxz
sahf
std
hlt
movsb
scas
cs
dec
jg
jmp
and
rorl
iret
xchg
stc
jae
lret
xchg
xor
inc
jb
mov
stc
into
or
mov
mov
mov
adc
xchg
hlt
lods
xchg
or
imul
or
push
or
insb
xchg
pushf
xor
aas
lods
pop
inc
lds
popa
movsl
and
pushf
mov
dec
jmp
adc
fmul
test
push
loope
sub
xchg
outsb
testb
xchg
push
fistpl
nop
sti
and
fisubrl
test
call
mov
out
mov
push
xor
jecxz
rcrl
sub
and
in
pop
xor
sbbb
test
push
aam
inc
mov
nop
in
pushf
popf
sub
out
xor
outsl
push
test
and
mov
sbb
pop
hlt
jecxz
out
repnz
sub
push
and
js
xchg
cmp
add
fstp
je
jns
aas
in
mov
xlat
repnz
dec
add
jg
cmp
fwait
leave
jp
mov
rolb
add
hlt
cmp
sarl
push
or
fisubrs
lcall
imul
mov
dec
inc
pop
clc
leave
add
xor
jmp
out
fsubl
js
xchg
cmp
imul
add
je
dec
jg
lods
dec
rcr
cmpsl
cmc
insb
outsb
push
in
dec
sbb
ja
inc
xorl
ja
std
leave
addr16
int3
or
sub
cmp
insb
loope
fwait
sarb
xchg
daa
inc
cld
mov
cltd
mov
pop
pop
xor
stos
jp
cmpsb
xchg
lds
adcl
xor
rorl
dec
ss
mov
gs
xorb
cltd
xchg
int
movsb
inc
cmc
call
sbb
pop
push
rcrl
popa
scas
iret
pop
add
cmpsl
push
aaa
sbb
in
out
push
je
inc
mov
jne
cmp
fisubl
scas
fisttpl
inc
sahf
lds
xchg
inc
data16
mov
out
loope
adcb
xchg
fstpl
fimull
lods
adc
adc
xchg
jnp
pop
mov
xchg
pushf
sub
enter
mov
sbb
fwait
jns
dec
mov
ret
push
jns
das
test
jns
scas
bound
sbb
mov
sub
xchg
lret
rolb
mov
mov
loopne
clc
mov
sbb
int3
dec
dec
lods
sub
adc
mov
jne
pop
jbe
jns
cmp
push
nop
sbb
jne
test
pop
lret
or
mov
sub
fistl
das
in
and
inc
adc
nop
pop
or
dec
pslld
push
mov
add
push
inc
inc
xor
cli
add
test
mov
iret
dec
shlb
cmp
mov
add
xlat
sbb
aas
jno
loop
push
dec
cmpsb
int3
lahf
jnp
adc
pop
leave
mov
push
jbe
jp
add
imul
jb
inc
and
fnsetpm(287
or
sbb
mov
inc
mov
and
vmaxpd
xchg
scas
inc
mov
xchg
testl
mov
cmc
pop
sbb
imul
std
or
jmp
ljmp
or
jge
sarl
fildll
add
lds
or
shll
loope
loope
je
stos
jb
jo
mov
sahf
loope
cld
leave
ret
ja
dec
rcrb
div
jns
push
push
outsl
sub
rcr
mov
bound
xchg
pop
stos
push
push
out
push
mov
inc
outsl
lret
dec
out
jg
scas
movsl
sub
cmp
test
pop
dec
mov
aad
insb
scas
mov
pop
xchg
add
pop
sub
mov
icebp
stos
add
ret
fidivs
adc
sub
cs
push
test
jb
jno
jmp
mov
cli
loopne
dec
add
inc
data16
sbb
push
add
insl
cld
mov
and
into
or
sub
movsl
pushf
mov
mov
inc
cmpb
lods
cld
lds
sbb
sarb
mov
fdiv
stos
xchg
scas
into
fldcw
lods
sets
inc
scas
jns
push
adc
add
loop
ret
out
cld
ss
jp
imul
les
pop
lcall
mov
cmpsb
sbb
inc
jae
jnp
sbb
fs
xchg
and
loope
sbb
aaa
inc
lods
jb
rorl
push
mov
dec
cs
dec
mov
subl
lret
push
out
loop
xor
push
add
stos
cwtl
cmp
pusha
das
rclb
test
test
jg
ficoml
sub
pop
jno
push
stc
shlb
pop
jg
aas
cld
lods
es
cmp
shrb
add
clc
out
jmp
imul
fstl
jno
xlat
sbb
ss
xchg
adc
add
push
push
dec
test
jno
stos
xchg
pushf
jnp
dec
into
push
test
sub
int
mov
xchg
adc
sub
aam
mov
outsl
dec
and
into
dec
push
ret
insb
les
mov
mov
cmp
mov
subb
ss
sub
stc
icebp
repnz
mov
movsl
ljmp
mov
jnp
es
inc
insb
shrl
and
insb
popa
and
mov
aaa
inc
cmp
adc
push
je
adc
imul
add
adc
fidivrs
push
fidivrl
xchg
out
mov
and
add
shl
loopne
pop
mov
mov
pushf
scas
sahf
aaa
add
cmp
arpl
leave
mov
stc
fdiv
mov
mov
xchg
adc
es
ss
aad
push
xchg
es
push
int3
lods
cli
mov
shrb
and
inc
mov
dec
inc
inc
mov
sbb
std
mov
mov
mov
mov
cmp
pop
jns
fidivs
push
ret
aas
dec
fwait
pop
gs
lahf
aad
nop
sub
sub
rorl
mov
add
mov
sub
pop
test
lret
dec
xor
jg
std
gs
push
int3
scas
pop
push
mov
dec
dec
sub
mov
mov
sub
xor
and
cli
imul
lds
jbe
hlt
pop
push
popa
repz
outsb
inc
inc
dec
or
xchg
mov
fdivrl
stos
adc
dec
jmp
sub
loopne
dec
test
pusha
mov
mov
add
bound
sub
cs
pop
dec
lret
dec
and
mov
notb
rcr
mov
out
scas
pop
and
sub
pop
mov
jg
js
cmpsb
mov
lds
imul
or
inc
ret
sub
loope
daa
adc
fwait
add
lea
bnd
jmp
arpl
orl
lea
int3
lcall
fmull
dec
in
jge
or
fmulp
mov
or
sbb
call
loopne
and
jnp
imul
mov
push
pop
movl
cltd
mov
iret
rcll
das
int
inc
adc
test
mov
xchg
push
ljmp
cs
jge
xlat
mov
test
or
mov
and
sbb
and
jecxz
add
fucomi
mov
jo
fildl
sbb
dec
sahf
push
or
insb
dec
les
mov
daa
xchg
sbb
repz
in
jbe
repnz
jmp
test
sub
subb
mov
std
mov
outsl
cld
test
mov
shll
xchg
repz
jne
ss
push
sub
cmp
adcb
sbb
in
or
dec
addb
jle
sahf
hlt
repnz
outsb
fiaddl
xchg
imul
jle
out
roll
dec
std
add
or
add
mov
loop
call
sub
aas
sub
cld
fists
test
or
mov
jb
je
cmp
sbb
push
sbb
or
cmp
push
push
jge
popf
cmp
xor
inc
sub
sub
jl
shl
mov
bound
jns
and
xor
push
aad
mov
orl
decb
lcall
fwait
push
popf
arpl
int
sti
pop
mov
push
mov
pop
inc
out
cmp
jae
ljmp
test
jb
xlat
xchg
mov
into
in
cs
xor
push
fdivl
fsub
sbb
aaa
jecxz
fildll
xchg
jb
clc
aad
sarl
inc
and
sub
outsb
stc
call
jbe
frstor
popf
fs
add
inc
inc
shlb
je
out
pop
adc
push
and
push
subb
lods
adc
test
lock
mov
scas
add
fwait
repnz
mov
pop
shll
fdivl
ja
dec
daa
add
clc
ja
mov
fcoml
sbb
jbe
jb
hlt
in
aaa
lods
pop
addr16
pushf
jge
jno
shll
mov
push
aas
popf
ret
jl
and
out
dec
lods
sbb
dec
ficoml
push
xchg
push
popf
inc
xchg
inc
cmp
dec
ja
movsb
jns
ja
jecxz
cld
or
fldt
aaa
adc
fldl
xchg
push
mov
push
mov
outsb
shld
bound
sbb
stos
outsb
out
lcall
pop
in
or
insb
lahf
scas
outsl
mov
icebp
leave
dec
push
sbb
mov
mov
mov
mov
inc
xor
scas
mov
scas
loopne
into
mov
dec
ret
xor
prefetch
or
repnz
in
popf
add
movsl
stc
mov
sbb
push
test
pop
adc
cltd
outsw
mov
rcr
add
lods
into
push
jo
cwtl
imul
inc
fs
loope
lods
pop
std
mov
mov
or
sbb
jg
xor
push
adc
stos
sub
or
loop
xor
xor
arpl
jl
iret
sub
push
stc
sbb
add
out
jp
push
sbb
mov
loop
add
xlat
adc
mov
ret
setne
dec
cmp
stos
call
ss
ljmp
mov
test
addr16
aam
loop
cmpsb
adc
mov
cmpsl
ds
pop
test
pop
push
shl
pop
shr
test
into
shll
test
das
xor
xchg
adc
andb
stc
and
cli
hlt
mov
cmp
je
fmul
push
mov
jge
or
xchg
and
out
xchg
icebp
sub
xorl
sarb
in
adc
mov
xchg
icebp
lds
repz
movsl
mov
jns,pn
jle
xor
sbb
mov
jmp
pop
mov
dec
xchg
sub
jnp
std
cld
lea
jmp
aaa
hlt
ror
add
lods
lret
push
inc
inc
lret
daa
mov
imulb
xchg
pop
sub
ds
sahf
push
mov
and
push
incb
fiadds
pushl
mov
and
or
loop
mov
lret
inc
lcall
mov
mov
stc
shl
fwait
jns
mov
scas
or
or
jns
pop
mov
enter
jbe
push
add
xor
xchg
inc
in
ficompl
lret
pop
push
sub
push
lret
cmpsb
mov
adc
or
jnp
sub
mov
sbb
adc
das
sti
divb
mov
and
test
rcrb
aas
cmp
and
loope
sub
ds
cld
cld
xchg
mov
push
add
inc
and
stc
pop
fnstcw
jmp
enter
in
push
scas
imul
adc
mov
jns
mov
xchg
jl
add
sarb
and
popa
cmp
adc
scas
insb
xchg
fistps
js
mov
cmc
dec
jl
or
shl
xchg
cmp
loopne
pop
mov
jmp
mov
mov
ret
jo
sub
and
xchg
shlb
addr16
mov
inc
sub
jno
and
lret
fnstenv
addr16
jb
scas
scas
xchg
dec
sub
pop
cmpsb
mov
push
adc
ds
dec
loop
push
xchg
andb
push
and
xchg
mov
sbb
dec
shrl
sbb
sub
xor
and
cwtl
fsubrl
imul
xchg
dec
inc
sbb
lret
adc
push
gs
and
or
cmp
mov
xchg
dec
dec
lret
dec
push
add
xchg
je
sub
loopne
or
mov
into
jg
or
push
cld
pushf
pusha
inc
mov
out
repnz
pop
rcr
pop
mov
add
movsl
dec
out
fists
or
dec
fidivs
int
cmp
cwtl
ja
lds
into
ds
push
das
inc
mov
mov
mov
cld
push
xor
in
das
add
push
int
sbb
dec
mov
mov
hlt
roll
jb
stos
pop
in
sbb
cmp
jno
in
xor
repnz
mov
sbb
push
dec
mov
cmp
imul
and
ret
mov
push
xchg
cmp
cmp
push
jg
adc
scas
xchg
inc
dec
rcll
xor
stc
mov
and
test
popa
pusha
push
xchg
mov
add
xor
ja
outsl
outsb
popa
imul
lcall
jne
testb
int
insl
in
push
test
mov
add
jno
xchg
in
in
adc
stos
insb
cmp
leave
xchg
lea
scas
ja
push
jle
lcall
pop
rorl
pop
pop
test
ffreep
int
and
mov
les
push
cmp
or
loope
and
mov
cmc
and
push
loope
mov
mov
mov
pop
dec
in
fucom
pop
imul
push
stos
shll
mov
jmp
mov
in
repz
adc
push
je
movsb
movsl
pop
jne
cmp
xlat
not
movsl
pop
das
dec
xor
dec
out
imul
into
or
movsb
popf
mov
ds
cmpsl
xchg
test
pop
outsl
mov
fmuls
or
mov
jbe
loop
idivb
xlat
inc
iret
dec
sub
jnp
sub
jmp
mov
push
cmp
mov
outsb
scas
push
out
pop
mov
icebp
lea
fucomi
xchg
push
add
xchg
out
hlt
popf
mov
inc
cmp
lcall
mov
out
adc
gs
pop
add
add
xor
push
das
push
pop
shll
gs
icebp
cld
dec
dec
decl
mov
cmp
insb
xchg
mov
push
fsubl
and
push
mov
xlat
in
sbb
fisubs
rcrb
mov
shl
into
xor
sbb
xor
push
xor
or
pop
cmp
ljmp
add
mov
enter
jnp
and
lods
jle
fdiv
mov
int3
fidivrl
int
xor
lds
add
into
cld
stos
cmp
out
testl
inc
and
dec
pop
mov
inc
iret
mov
mov
jo
inc
add
sbb
or
and
out
inc
orb
add
pushl
sahf
insb
sub
mov
out
dec
sub
lods
push
and
mov
stos
jo
enter
std
jl
dec
repz
inc
inc
sbb
stos
fdiv
jae
dec
xchg
out
add
stos
dec
nop
adcb
xor
in
mov
mov
fs
and
lcall
pushf
pop
dec
into
mov
dec
xchg
sub
push
xchg
pop
cmc
insl
sbb
mov
jne
xor
cmpsb
stos
and
mov
std
movsb
pusha
nop
push
mov
aaa
lret
rcl
jno
rorl
xor
mov
addr16
pop
imul
rol
aaa
js
rorl
add
mov
and
cmpsb
or
mov
pop
scas
jnp
addr16
mov
addr16
mov
enter
jb
mov
adc
pop
out
es
daa
pop
push
push
cmp
leave
mov
popa
out
lds
les
inc
dec
add
and
fisubrl
nop
sbb
in
incb
js
shrl
bound
cltd
enter
jno
fcoml
mov
sub
shrl
cmp
movups
jg
loopne
test
js
fstpt
rorb
pop
adc
out
dec
scas
nop
dec
fdivrp
add
in
shll
clc
or
pop
xchg
mov
adc
lahf
xlat
jnp
sub
mov
out
lea
imull
cmpsb
xchg
dec
cmp
jl
jo
jecxz
cmpl
inc
cwtl
cmpsl
jns
es
mull
std
ljmp
bound
out
jg
lahf
pop
jecxz
jl
add
insl
push
pop
xchg
hlt
ja
push
out
rcrl
sbb
call
sbb
aam
dec
xor
lea
arpl
jo
add
cmp
adc
into
jne
jo
sahf
pop
imul
rcl
or
lret
cmp
cmpsb
rorb
add
add
arpl
jg
lods
inc
in
or
add
ja
pop
into
adc
roll
cmp
cld
jge
sahf
hlt
aas
push
push
jne
js
enter
sbb
in
ficoms
xchg
add
sub
addl
jnp
mov
insb
pop
and
xor
mov
test
pop
testb
or
jl
mov
xchg
inc
push
jbe
popa
call
mov
xor
js
movsl
in
pop
mov
push
lock
cmp
gs
sub
mov
scas
xchg
icebp
das
adc
mov
decl
push
jne
hlt
push
nop
pop
lods
push
test
jns
pop
sti
stos
bound
xchg
mov
movsb
loopne
sub
mov
jnp
out
pop
ljmp
hlt
fstpl
ljmp
adc
stos
inc
jns
dec
push
test
mov
jne
mov
js
fcoms
mov
mov
jnp
in
or
xchg
enter
jecxz
test
mov
adc
aad
int3
xchg
outsb
popl
push
pop
push
sti
lret
xchg
insb
pop
push
sub
cmpsb
cmp
inc
mov
imul
xor
mov
pop
pop
out
pop
fwait
or
test
jg
push
adc
mov
aam
xor
lds
mov
pushf
call
std
ss
mov
movsb
out
xchg
cmp
mov
pop
mov
jmp
sub
int
inc
shrl
fdivl
ror
pop
iret
mov
aad
fsubs
addb
mov
sub
push
mov
fidivrl
jnp
mulb
movsb
aas
int3
add
cs
sub
xchg
jg
add
jmp
xor
shlb
sbb
xchg
lahf
cltd
sbb
or
sub
repz
xchg
dec
push
cmp
xor
xchg
mov
dec
and
arpl
mov
cwtl
repnz
mov
mov
pop
test
mov
loopne
out
dec
icebp
cmp
mov
ss
xchg
pop
mov
and
repnz
mov
dec
aaa
cmp
sub
jg
imul
clc
movsb
and
add
lret
adc
mov
push
int
inc
cmp
out
xlat
xchg
push
test
sbb
es
lcall
int
iret
pop
and
insb
fcomps
inc
mov
sbb
movsb
sbb
xchg
mov
ret
xor
xor
xor
pop
invd
inc
bnd
rcrl
dec
gs
std
fistl
out
popf
popf
rcl
or
mov
xor
pop
out
dec
pop
jcxz
mov
xchg
int
mov
sub
roll
dec
mov
sbb
cmp
dec
fs
mov
add
test
rolb
push
call
decl
mov
bound
mov
das
jmp
ss
add
xor
in
sub
xchg
sub
dec
mov
inc
sub
test
sbb
repz
xchg
mov
mov
mov
mov
ret
sbb
sarb
jl
add
xchg
adc
and
xchg
sub
and
cmpsl
insl
mov
sbb
xchg
stos
std
pop
negl
pop
clc
mov
mov
int
data16
mov
push
je
push
adc
shlb
jnp
sbb
arpl
and
jecxz
in
push
fimull
testb
fcmovbe
inc
out
int3
mov
xchg
adc
and
push
loope
pop
shll
out
lods
push
dec
es
ja
daa
dec
xor
ja
in
icebp
inc
test
lods
xorb
rol
pop
sbbb
mov
je
bound
pop
jno
cmp
pop
sbb
fdivs
sbb
jecxz
std
mov
xchg
fiaddl
add
xlat
addl
ds
repz
lahf
xor
mov
pop
xor
jae
negb
repnz
sbb
popl
imull
mov
inc
pop
notb
mov
out
push
fwait
pop
mov
inc
jmp
clc
dec
xchg
lods
leave
fnstsw
pop
and
scas
stc
pop
mov
push
sbb
sbb
lods
sbb
adc
lds
loop
gs
in
mov
outsl
jo
jle
xchg
int
add
jmp
pop
pop
mov
fisubrs
sub
inc
add
pop
jecxz
xor
pop
outsl
inc
pop
adc
ret
sub
or
cmp
cld
sbb
pop
cmp
insb
mov
test
loope
sub
popf
jecxz
jg
ret
mov
out
or
mov
lods
cmp
in
shr
aas
adc
je
test
ret
add
xchg
pop
fldl
addr16
mov
dec
jo
push
add
dec
adc
rcrl
mov
dec
xchg
in
mov
xchg
jmp
fcmove
int
test
inc
push
ss
in
xor
cmp
icebp
jne
popa
mov
mov
add
dec
xor
out
cmp
pushl
sub
arpl
pop
or
mov
jge
movsb
mov
fiadds
nop
stos
or
in
inc
inc
or
imul
push
aas
pop
jae
pop
sub
mov
addr16
cmp
pop
ss
push
ret
fistl
jp
xor
or
test
enter
mov
loope
and
bound
je
cli
pminub
sbb
icebp
cmc
jecxz
sub
hlt
xchg
fld
xor
ret
adc
sbbl
ds
push
lcall
adc
xchg
xchg
aam
in
in
das
push
dec
movl
adc
fs
test
inc
xchg
dec
pusha
xchg
popf
jp
cmpsb
mov
mov
ret
push
add
mov
clc
aad
adc
sar
jbe
jge
jmp
jmp
cltd
push
lret
sbb
lods
insb
push
jbe
call
out
into
out
mov
in
lds
or
cmpsb
js
adc
and
lock
and
pushl
stc
push
fidivs
fldl
mov
js
mov
lock
scas
mov
cwtl
popf
jns
mov
pop
xchg
repz
xor
xchg
inc
popa
xchg
inc
insl
mov
lahf
test
adc
rep
pop
add
aam
mov
pusha
shrb
and
jg
add
xchg
mov
sbb
jp
pusha
mov
insb
xor
and
jnp
je
mov
aad
mov
xchg
pushf
scas
add
test
cmpsl
sbb
ffree
push
out
cmp
shlb
xchg
jmp
into
and
mov
inc
jl
pop
pop
pop
jmp
add
cmp
into
inc
push
push
mov
test
aaa
lea
loop
pop
loop
sti
mov
xor
aad
mov
cmp
aaa
push
repz
mov
test
imul
out
and
add
mov
add
int
outsl
in
sub
mov
sbb
outsb
jge
out
incl
pushf
push
iret
int
push
cwtl
mov
mov
ljmp
enter
pop
cmpsb
xchg
push
add
call
adc
test
mov
cltd
andb
and
jmp
mov
mov
in
insb
mov
call
cli
add
out
adc
mov
jno
mov
enter
mov
mov
repz
ljmp
mov
in
insb
inc
pop
fs
popf
cmpsb
mov
pop
sbbb
scas
push
and
ja
sahf
notl
call
in
jmp
out
movsl
cltd
je
add
jno
cmc
push
mov
icebp
inc
mov
jge
pop
dec
out
into
sub
in
imul
mov
dec
lods
sub
inc
les
shll
test
mov
xor
xor
dec
xchg
cmp
pop
inc
push
inc
ret
sbb
popa
xor
mov
stos
nop
ret
inc
std
or
push
xchg
pusha
jno
pop
into
inc
insl
and
sbb
das
hlt
movsl
ja
cmpsb
sub
loope
add
mov
mov
aas
mov
mov
xchg
lds
jg
stos
fwait
mov
xor
daa
mov
mov
dec
xor
adc
xor
imul
test
popa
jno
jp
mov
fdiv
in
xor
lods
ja
pop
fs
pushf
xor
pop
jle
cmp
js
mov
and
jge
add
rclb
cmp
gs
lds
notb
inc
xor
jb
adc
xchg
insl
pusha
jo
lds
sub
add
stos
sub
xor
ret
int3
loopne
push
sub
mov
and
test
addr16
xor
mov
js
xor
xchg
std
aad
movsl
adc
mov
sbb
stos
lock
popa
push
cwtl
into
add
jmp
ja
jne
sar
imul
adc
cs
fcompl
mov
cmc
pop
rcl
ret
std
out
xchg
inc
xor
inc
cmp
jl
aam
call
in
mov
fisttps
mov
lods
dec
add
mov
lcall
pop
push
insb
test
xchg
iret
adc
scas
aad
pop
sbb
inc
ds
xor
popf
insb
cmp
pop
inc
and
xor
cld
arpl
mov
push
fldcw
movsl
mov
nop
pushf
cltd
testb
cmp
std
dec
push
stos
fcomps
mov
pop
push
int3
jecxz
dec
mov
testb
add
jg
push
dec
pop
movsl
int
dec
bnd
jle
inc
xor
jnp
jl
and
or
and
stos
sub
xor
out
loope
ja
pop
push
les
aam
mov
out
jmp
sbb
push
xorb
loop
pusha
das
mov
shrl
lahf
push
dec
add
stos
adc
leave
rolb
test
and
dec
int
xor
out
sub
cmpsb
lods
icebp
mov
stc
push
out
pop
jno
xchg
ja
pop
andl
xchg
outsb
cmp
test
aaa
jecxz
out
mov
push
pop
out
adc
add
dec
and
push
sbb
test
out
inc
insl
rcr
jl
sti
lret
fildl
pop
leave
popa
fwait
hlt
pop
xchg
loope
enter
cld
or
int
pushf
cmp
clc
fistpll
add
icebp
pusha
push
loop
adc
ret
xchg
jno
jge
cmp
hlt
cltd
shlb
sahf
jg
adc
aad
add
aad
pop
call
adc
push
xlat
mov
cs
jge
mov
cmc
scas
xchg
push
imul
lods
js
test
je
movsl
sbb
ljmp
mov
enter
jns
pop
pop
mov
jge
sub
insb
out
leave
push
add
ja
push
loop
test
loope
jno
imul
cmp
addr16
jp
push
jae
xor
xor
clc
mov
stos
enter
xor
mov
pop
lcall
lock
push
jns
ja
mov
lcall
arpl
test
jle
mov
movsb
std
stc
jno
mov
adc
or
cwtl
dec
mov
movsb
mov
loope
lea
repz
push
jge
stc
lock
fisubrl
ja
jle
idivb
mov
fsubr
jmp
jns
std
pusha
aam
icebp
sbb
out
bound
je
xchg
ds
dec
pop
loopne
xchg
fwait
push
sbb
gs
dec
sahf
es
orb
jbe
jp
mov
pop
mov
pop
and
mov
push
jp
fwait
push
cmpsl
adc
jo
or
push
sbbl
xchg
xchg
enter
jg
mov
jb
sbb
stos
nop
enter
sbb
jge
int3
sub
dec
jle
sbb
adc
out
mov
adc
loop
fptan
inc
ja
popa
movb
fneni(8087
and
in
imul
ja
jb
mov
xchg
push
das
mov
xor
or
push
mov
jle
scas
fisttpl
in
inc
jnp
lret
xor
sub
cmc
test
js
lret
xor
push
mov
or
cmp
mov
mov
xchg
pop
inc
fs
pop
addr16
lcall
stos
jle
cs
cmp
test
dec
int
xchg
inc
fists
ljmp
insb
mov
and
pop
dec
cmpsl
fsub
jecxz
xchg
nop
jmp
punpcklbw
insb
mov
roll
imul
inc
jmp
jnp
roll
cmp
nopl
stos
inc
or
push
mov
jo
pop
jo
xor
sub
and
and
jne
imul
inc
insl
fwait
ret
bound
xabort
mov
dec
push
pop
pop
pop
push
xor
push
stos
inc
mov
loopne
xor
fiaddl
mov
in
push
cwtl
adc
les
push
jp
jmp
sbb
imul
add
fsubrl
push
xor
das
in
daa
clc
inc
pop
enter
out
mov
sbb
hlt
dec
dec
sub
mov
cmpsb
xchg
xor
out
dec
negl
stc
push
ja
xchg
popf
mov
fists
cld
flds
loopne
and
xor
jnp
mov
mov
jmp
mov
dec
push
aas
fidivl
ljmp
xchg
xor
sbb
aaa
shr
das
mov
xchg
std
and
sub
loop
std
mov
mov
xchg
dec
sahf
aaa
xorb
in
clc
push
mov
mov
add
je
mov
test
out
pop
push
mov
and
shrb
icebp
cwtl
addb
pop
std
mov
mov
mov
data16
xor
pusha
push
fs
loopne
js
mov
pslld
dec
jb
in
or
cld
fucomi
jmp
dec
jecxz
cmc
mov
mov
cltd
push
pop
pop
mov
rol
mov
mov
mov
jg
rcll
lea
jae
sub
push
ss
or
jg
dec
adc
mov
fiaddl
les
pop
jecxz
sub
cmp
mov
jl
jbe
mov
mov
cmp
out
test
jb
dec
pusha
fcomp
roll
inc
cmp
stos
nop
add
and
stc
daa
mov
pop
push
aad
lods
or
cmp
loope
in
push
movsl
jle
pop
aaa
rol
dec
icebp
push
out
out
subl
sub
bound
mov
stos
dec
and
xor
add
ja
xchg
push
pop
lcall
arpl
insb
test
pop
lods
punpckldq
pusha
pop
mov
mov
push
js
lahf
ja
jp
mov
out
jns
mov
jo
out
cld
fnsave
fistl
std
or
mov
popf
clc
repz
leave
xor
inc
inc
and
jp
cs
ds
iret
mov
rcr
cmp
pop
cmp
andl
xchg
daa
inc
jl
into
insb
push
adc
pop
sbb
scas
and
enter
mov
clc
pusha
out
dec
lret
fdivrl
adc
xchg
mov
mul
and
cmp
test
pop
dec
push
sbb
mov
mov
imull
sbb
js
mov
outsl
mov
stc
mov
cmp
bound
cmp
mov
aas
lcall
lcall
xchg
pop
movsb
and
std
out
adc
sub
cli
testl
fisttpll
call
lock
dec
adc
add
add
hlt
into
iret
cld
mov
push
push
or
push
dec
dec
imul
popl
cmp
lcall
cmp
xchg
test
push
or
rorl
aad
jge
insb
imul
scas
repnz
cwtl
loopne
dec
add
testl
lcall
pop
icebp
mov
adc
mov
adc
rcl
or
movsl
sbb
imul
cmp
cmc
loope
sub
fnstenv
or
js
and
jle
clc
adc
dec
mov
mov
out
aas
and
push
loopne
cltd
andl
leave
lods
lods
fs
popa
xor
leave
sub
push
mov
pop
les
aam
pop
mov
mov
adc
mov
xchg
into
jmp
xor
push
lods
mov
jg
scas
push
pop
imul
imul
inc
jmp
jo
and
sahf
fisttps
shr
fsubrp
jmp
sarb
ret
mov
aam
lcall
jo
sbb
lock
subl
pop
inc
shlb
dec
cmp
pushf
add
lcall
dec
dec
mov
xor
pop
push
lcall
subb
xchg
xchg
aad
out
cmp
test
and
ljmp
cmc
cli
jnp
lods
adc
mov
std
addr16
dec
push
mov
fdivs
inc
mov
add
mov
inc
sbb
xchg
jp
outsb
pop
mov
stos
xchg
ret
lock
jb
push
cmp
fisubs
movsb
in
sub
call
adc
rcrl
into
jecxz
iret
aas
adc
mov
push
ja
add
cmp
sti
fs
mov
movsb
pop
push
add
or
jbe
xchg
jo
sub
add
mov
loopne
jge
adc
inc
pop
rolb
inc
mov
mov
jp
xor
inc
pop
ds
inc
adc
stc
into
lcall
jne
mov
push
lret
lret
push
push
fsts
out
test
es
pop
daa
lock
jnp
jle
test
xchg
call
shll
int
xchg
or
loop
in
rorl
arpl
idivb
pop
call
outsb
fldl
xchg
addr16
xchg
sbb
ss
adc
cmpsl
mov
push
lret
lock
add
sub
mov
aad
in
inc
mov
stos
sbb
leave
aad
data16
sub
pop
xchg
call
inc
sbb
mov
cmc
pop
stc
cmp
add
scas
jle
pop
out
test
push
fimull
pop
cli
cltd
xor
mov
je
imul
cmp
orl
repnz
add
lods
lret
mov
mov
ret
movsb
fwait
pop
or
mov
mov
lea
outsl
out
mov
pop
fldcw
lret
outsb
lret
mov
mov
mov
cmc
mov
movsb
mov
cmp
jecxz
jl
push
ja
xchg
ret
cmp
repnz
push
xor
aas
cld
mov
lods
frstor
sub
push
addr16
push
sbb
cmpsl
dec
jmp
ss
subl
aas
jo
mov
inc
jp
jle
xor
xorl
icebp
inc
test
fwait
add
xlat
dec
stc
and
test
adc
out
stos
mov
pushf
rorb
ja
repz
loopne
movsl
lock
xor
je
adc
orl
aam
push
faddp
adc
movsb
adc
stos
imul
push
jns
test
add
and
popf
flds
or
adc
mov
and
xchg
cmp
push
xor
xor
or
or
sub
lods
loop
jns
subb
pusha
dec
adc
inc
bound
inc
cmp
fcomps
arpl
dec
mov
sti
mov
mov
icebp
cmp
mov
xor
adc
xchg
sub
xchg
xchg
aam
shlb
sahf
add
and
popa
or
pop
mov
test
inc
test
imul
push
pushf
xlat
scas
ret
mov
ds
push
pop
pop
jne
orl
stos
pop
outsl
pop
mov
adc
out
cmpsl
iret
dec
add
lock
push
or
leave
pop
dec
lcall
mov
xchg
push
mov
insl
adc
inc
cmc
enter
lahf
push
insl
jl
push
adc
add
push
ret
les
repz
loop
xchg
in
cli
or
lret
movsb
pusha
aad
ds
aas
in
or
mov
xchg
cmpsl
mov
xchg
mov
mul
mov
mov
enter
outsl
cmp
jle
xchg
mov
sbb
insl
sub
into
xlat
push
push
into
or
outsl
push
xchg
out
enter
push
imul
jns
out
inc
push
cmp
fisubl
mov
push
jp
aas
xchg
fmuls
pop
push
icebp
mov
gs
pop
push
pop
push
push
mov
and
cli
pusha
bound
cmp
jle
js
stos
ljmp
loopne
lret
fcmovu
int
mov
mov
es
shll
mov
stc
cmp
mov
xchg
jge
call
nopl
sbb
js
xor
and
shl
mov
and
mov
test
sbb
or
cmp
mov
push
mov
mov
adc
adc
mov
bswap
jmp
sbb
mov
mov
xor
stos
jne
movsl
cmpsl
ja
rcrl
std
insl
inc
mov
test
pop
adc
push
mov
shrl
jp
cmpsb
stc
loope
jecxz
pop
call
lds
daa
js
call
arpl
out
lret
mov
mov
pop
jecxz
int
pop
in
push
add
pop
mov
jecxz
dec
jo
daa
and
xchg
dec
xchg
lds
fincstp
sbb
in
lret
dec
push
stos
into
mov
popf
jg
fisttpl
lret
in
aaa
sbb
inc
and
scas
lret
or
push
daa
rcll
cmpsb
daa
dec
adc
jbe
inc
xchg
inc
int3
aad
pop
aas
cs
sub
mov
les
decb
sti
jge
and
mul
js
mov
js
repz
xchg
dec
push
mov
lahf
mov
adc
jb
xor
xor
imul
scas
rcrb
sub
push
gs
mov
xchg
aaa
mov
pop
leave
sub
cmp
imul
pop
cs
mov
out
pusha
lods
adc
mov
fs
divl
jo
xor
dec
iret
cmc
mov
inc
sbb
and
loope
ljmp
dec
adc
andb
add
jmp
ljmp
lret
mov
sti
aas
adc
sub
cmp
cmp
cltd
xchg
sub
notl
pusha
lret
outsb
adc
push
lret
dec
mov
inc
mov
cmp
js
lods
vmwrite
ficomps
pop
or
hlt
clc
test
pop
jae,pt
jg
ds
sbb
aas
repnz
lret
push
dec
cmp
lds
fwait
adc
aas
shrl
sbb
clc
sbb
rcrl
dec
pushf
adc
aas
mov
leave
aas
mov
data16
fstps
pusha
fnstsw
mov
mov
popa
popf
out
push
scas
xlat
int
leave
and
pop
mov
pop
pop
pop
lds
ret
ss
insb
and
xor
mov
arpl
cmp
dec
sti
icebp
test
ss
scas
sbb
clc
sbb
dec
fld
mov
mov
stos
lods
push
sahf
and
bound
iret
push
jae
ljmp
icebp
clc
mov
mov
mov
mov
xchg
adc
pop
inc
aaa
add
xchg
lret
pushf
jns
jecxz
xlat
popf
es
adc
pop
stc
out
js
push
jp
inc
xchg
push
shlb
int3
cmp
mov
jg
mov
icebp
ret
jbe
leave
jns
cmp
pusha
cmp
cmp
loopne
xor
mov
push
lret
dec
mov
addl
cmp
pop
lret
notb
mov
inc
lds
and
call
stos
and
cmp
cmpsl
push
aam
mov
mov
and
daa
nop
dec
dec
loopne
fildll
push
xorb
adc
mov
lret
mov
int3
into
mov
adc
cmc
mov
pushf
imul
fcomip
mov
dec
clc
inc
jae
cmp
out
pop
sbbl
std
xor
pusha
pushf
or
in
adc
add
into
xor
mov
out
add
bound
jbe
push
and
iret
mov
pop
jns
or
fistpl
popa
mov
fnstcw
pop
movsl
mov
addr16
insb
mov
js
inc
push
and
leave
xor
inc
negl
sub
movsl
pop
aas
mov
out
mov
sub
lea
jo
xorb
mov
push
pop
xor
push
sbb
sbb
adc
mov
out
jg
aad
cmp
sbb
push
pop
dec
out
or
dec
sbb
arpl
outsb
mov
dec
push
mov
fwait
cmpsb
cwtl
and
jl
or
call
mov
jne
mov
push
negl
sbb
jne
js
loope
scas
mov
ds
test
jb
loope
mov
mov
sbb
mov
mov
push
inc
jle
or
sub
sub
dec
fs
mov
lock
jmp
loope
cltd
inc
and
cmpb
push
or
cwtl
mov
imul
pop
dec
mov
sahf
or
or
push
sub
xlat
or
push
aas
jmp
jp
mov
mov
fidivrs
add
call
pop
rorb
call
dec
mov
mov
icebp
pop
out
inc
fisubs
xchg
dec
test
in
out
push
ss
orl
adc
jl
shl
jae
aad
mov
push
xchg
lds
mov
aad
add
pop
hlt
push
and
adc
mov
sbb
adc
out
lds
shll
test
aaa
mov
pop
pop
pop
stos
mov
je
mov
add
push
inc
push
rcr
lock
jp
xchg
leave
cmpsb
dec
and
test
jne
lds
arpl
loope
and
gs
and
sbb
push
outsl
and
sub
xchg
jp
in
stos
push
sub
push
jno
sbb
pop
insb
sbb
mov
call
aas
cmpsb
movsb
push
push
adc
push
aas
add
push
add
xor
cmpsl
jno
popa
cmc
in
sub
or
js
repnz
dec
push
inc
cld
pop
mov
dec
test
and
adcb
adc
sbb
popa
sti
xchg
ds
into
hlt
mov
push
adcb
jge
xlat
sub
mov
in
mov
outsb
mov
mov
cmp
arpl
cmp
mov
cmc
pusha
dec
testb
mov
sbb
xchg
stos
xor
xchg
popf
movsb
push
cwtl
sbb
cs
ret
adc
or
lods
popf
jae
rcrb
add
xchg
jo
dec
sbb
xchg
xchg
popf
adc
je
lahf
aas
jno
gs
dec
inc
cmp
movsb
shrl
int
xchg
inc
jnp
inc
mov
xor
adc
unpckhps
fsubp
das
pushl
jle
aad
xchg
mov
cwtl
jno
mov
and
test
inc
cmp
jmp
adc
enter
and
lods
jbe
and
or
aaa
push
xchg
mov
add
sbb
sub
in
sbb
sub
sti
mov
call
xchg
mov
ljmp
pushf
jmp
mov
cld
fisubrl
cmp
xchg
mov
mov
mov
pop
inc
pusha
imul
sub
in
movsl
das
ds
jne
mov
mov
mov
loopne
jmp
and
test
add
pop
xor
popf
les
out
gs
call
inc
mov
lock
push
fcmovnbe
inc
push
xchg
fadds
mov
mov
or
cmp
pop
adc
dec
pop
jne
jb
test
pushf
or
lods
pop
xchg
push
std
dec
adc
mov
cmp
movsl
pushl
fcomip
push
imul
push
add
sub
test
fldt
mov
mov
arpl
lret
adc
push
jge
xchg
int
xchg
push
mov
pop
xor
insl
mov
lcall
inc
dec
jno
fiaddl
lods
imulb
push
xchg
js
lds
test
push
add
jge
and
test
mov
jno
mov
adc
cmp
push
xor
jae
insb
push
xchg
popa
loop
cmp
jno
fstl
mov
push
not
jb
enter
test
cmp
out
lds
outsl
stos
xlat
sahf
addl
or
cmp
sbb
and
adc
test
aaa
and
jo
fldenv
rol
or
mov
sub
mov
push
xor
inc
jnp
das
or
inc
xchg
rcl
mov
scas
push
rcrl
pushf
shlb
inc
add
xchg
ret
xor
es
sbb
xor
aam
pop
scas
push
popa
test
addr16
adc
hlt
pop
lock
xchg
ljmp
mov
fs
lds
cmp
cli
daa
push
jle
fdivrs
xor
data16
xor
add
push
cvttps2pi
add
dec
mov
in
push
stos
aaa
das
sub
js
loop
jbe
add
cmp
lcall
cld
idivb
push
push
or
mov
sub
jne
pop
sbb
sbb
stc
iret
daa
push
pushf
sarb
and
inc
rcrl
repnz
xor
jo
pop
mov
add
sbb
push
mov
add
pop
mov
icebp
popf
iret
lret
and
arpl
sub
pop
test
sub
xchg
push
sbb
cltd
or
mov
stos
popf
out
cli
cmp
rcrb
mov
xor
or
pop
and
in
adc
adc
gs
xchg
mov
pop
mov
add
lods
insb
roll
lock
in
int3
inc
mov
lret
mov
pop
sbb
or
ds
mov
inc
ja
call
jae
mov
leave
inc
sbb
mov
mov
pushf
popf
push
aam
add
fadd
sub
add
loope
call
xor
xchg
jbe
mov
add
mov
mov
sahf
jo
gs
mov
pop
pop
imul
or
pop
cmc
hlt
fdivs
cmpl
movsb
aad
lods
lcall
and
aam
or
jmp
xor
pop
fcoml
scas
pop
jns
and
xor
sbb
inc
ret
fldl
and
mov
pop
adc
jbe
cmpsb
scas
mov
int3
mov
dec
inc
cmpsb
cwtl
mov
adc
imul
bound
lds
mov
mov
lcall
in
and
mov
lret
jge,pt
xchg
pop
bts
xchg
mov
jl
test
pushf
scas
mov
inc
insl
push
or
shl
jl
mov
mov
nop
arpl
decl
fdivl
jge
jne
and
inc
js
stos
mov
mov
loopne
test
test
and
jae
cmp
loope,pt
pop
add
adc
sub
cmp
push
in
ror
out
cld
mov
lahf
inc
stos
push
das
out
jl
mov
hlt
push
incb
stos
push
sbb
test
test
pop
mov
sahf
sbb
mov
sbb
pop
pusha
dec
push
daa
ja
sub
lods
mov
mov
mov
sub
jno
xor
sti
jmp
fldl
lea
push
xor
inc
jno
addr16
fisttpl
pop
enter
adc
xchg
xchg
scas
fucomp
dec
inc
int3
mov
out
dec
and
add
add
cmpb
shll
loopne
je
mov
cli
pop
lea
and
jb
sti
dec
pop
dec
fs
fisttpl
mov
popa
jp
pop
insb
nop
add
adc
push
aam
inc
adc
mov
lods
sahf
push
or
aas
arpl
ficoms
ds
std
jge
std
pop
xchg
iret
inc
cmp
push
loopne
pop
stc
push
sub
cmpb
push
lcall
jb
jge
mov
nop
movsl
negb
test
lcall
popl
dec
jg
push
orl
push
cmpsl
adc
or
aad
jae
cli
and
cmp
and
mov
or
sub
sahf
in
inc
xor
testl
pop
and
inc
iret
mov
jle
test
fidivrl
and
movsl
fucomp
inc
dec
repz
cmp
repz
mov
xchg
push
loope
fsubs
push
jns
cld
mov
pop
adc
jecxz
xchg
jg
leave
test
pusha
dec
pop
xlat
inc
inc
repz
xor
pop
jg
jne
mov
pop
cmp
push
pop
lea
adc
xchg
aaa
sub
cwtl
imul
cmp
pop
jecxz
inc
and
stos
xor
jmp
mov
pop
popa
rol
mov
subb
inc
inc
arpl
outsb
mov
adc
and
cmp
push
xor
push
mov
pop
pop
mov
or
inc
sbb
out
inc
cltd
jg
pop
pop
pop
in
mov
mov
shlb
mov
loop
nop
xchg
inc
lahf
jecxz
mov
cmpsb
xchg
cmpsb
ret
fstl
jo
inc
mov
lods
test
jge
sbb
cs
push
das
iret
sahf
sub
les
mov
aad
cld
addr16
call
xor
imul
in
aaa
adc
jno
je
scas
mov
addr16
jnp
or
mov
fists
jb
adc
ficomps
cmp
mov
popa
aaa
push
xchg
adc
cs
into
sub
xchg
bound
into
cltd
rcrb
test
or
and
jge
xor
sub
adc
inc
inc
add
xlat
jle
shlb
aam
in
push
sub
popf
mov
mov
push
das
dec
dec
cmp
fdivrs
jecxz
test
jno
or
add
faddl
out
dec
mov
jbe
pop
lret
add
push
mov
ljmp
enter
roll
sarl
fst
jle
sub
fwait
lahf
dec
xchg
popa
xchg
ds
jp
dec
testl
mov
sbb
les
mov
loop
pop
and
loope
push
stc
dec
mov
in
pop
in
dec
mov
decb
pop
sti
inc
add
sbb
inc
inc
jns
in
insl
mov
and
inc
lock
insb
mov
loopne
sbbl
dec
lret
filds
jbe
inc
cs
cmp
adc
imul
enter
shlb
pop
cmp
lcall
inc
push
sub
add
int3
sub
sub
std
adc
lgs
or
sbb
jne
mov
push
push
sub
mov
ret
mov
xchg
inc
lret
lock
punpckldq
rclb
adc
ds
jle
sarb
push
imul
mov
add
dec
mov
fldl
ror
cli
ret
jge
cmp
in
hlt
sbb
dec
movsl
xor
jle
mov
fsts
dec
sbb
aam
cld
mov
sbbl
ret
xorl
push
arpl
dec
add
cmpsl
inc
in
mov
enter
pop
xor
das
mov
mov
clc
pusha
jnp
xchg
and
push
in
aad
bound
out
mov
mul
cmp
fisttps
inc
sub
lock
popf
sub
push
sbb
clc
scas
push
call
mov
sub
sbb
jge
or
mov
ljmp
flds
pop
shll
lods
cltd
cmc
lret
cmc
mov
jge
mov
int3
cmpsl
sub
test
mov
push
popa
out
jno
icebp
cmp
cmpsb
stc
xchg
icebp
mov
dec
pop
pushf
mov
rclb
dec
in
xor
sbb
mov
fnstenv
push
lret
xor
add
jnp,pt
std
aaa
imul
push
ljmp
stos
push
mov
adc
xchg
or
rclb
lahf
push
fldenv
mov
dec
adc
jnp
jns
adc
int3
int
sub
int
lea
ret
mov
shlw
mov
lcall
stc
pop
xchg
into
repz
push
out
iret
add
outsb
sub
sub
cmp
cmp
xor
push
pop
sub
xchg
shrb
neg
mov
lcall
sbb
or
and
lods
xchg
push
cmp
inc
int
imull
mov
cmp
jp
pusha
out
pop
pop
insb
ret
xchg
and
stos
lock
int
cmp
aad
push
cmpsl
ret
andl
cwtl
push
fxch
lds
fs
pop
inc
inc
mov
or
or
xor
mov
xchg
add
adc
sbb
add
stos
jecxz
sub
add
jmp
mov
lods
jecxz
lock
imul
scas
lods
dec
cmp
cwtl
xchg
mov
jl
xchg
test
fsub
shll
loope
xchg
fists
addr16
cmc
jmp
in
scas
iret
movsb
mov
adc
xor
mov
xor
mov
push
mov
xchg
and
add
xor
pop
lds
imul
out
filds
pop
cld
lods
repz
and
int
jb
xchg
mov
inc
dec
stos
mov
mov
jp
pop
push
inc
inc
cmp
pop
push
pop
push
out
jp
out
fisubrl
or
xor
cmp
mov
loope
movsb
cmp
push
out
lds
imul
daa
lds
jbe
je
pop
sahf
xchg
fwait
inc
js
and
adc
js
jo
lcall
xor
sub
xchg
jb
pop
lret
cmpl
andl
mov
xchg
cli
fstpl
mov
xchg
sbb
add
int
pushf
fwait
dec
sub
push
lcall
push
jae
mov
mov
push
dec
add
mov
push
add
push
inc
fisttps
dec
outsl
xor
in
lods
nop
jne
aad
cli
outsl
iret
insb
ds
jg
mov
add
daa
add
push
ja
mov
loopne
fiadds
inc
test
pop
outsl
jo
xchg
jmp
pop
jmp
sub
imulb
lods
imul
adc
cltd
pop
jb
aam
and
imul
insb
mov
out
or
les
xchg
jno
lcall
test
pop
in
hlt
insb
or
mov
lret
in
dec
mov
mov
xlat
fdivrs
xchg
fsubrl
ljmp
xorl
xor
jge
test
insl
push
inc
inc
std
lret
mov
or
fldl
push
push
mov
mov
iret
pop
stos
push
es
mov
decb
std
xorl
imul
sti
ja
dec
sub
mov
imul
pop
sbb
fbstp
inc
aam
xchg
cmp
rorb
add
add
test
aam
adc
jne
jo
int
lret
gs
pushf
aad
mov
ficoms
inc
pusha
or
lods
fdivs
add
imul
lods
into
push
push
ret
popa
jo
xchg
divb
inc
nop
fs
xor
test
dec
pop
movsb
iret
inc
scas
fisttps
and
pop
enter
mov
sbb
addb
cld
icebp
out
mov
cmp
push
xchg
std
mov
ret
mov
test
lds
cmp
sbb
or
lock
fwait
jns
iret
enter
jnp
in
scas
ret
aad
ss
leave
fidivs
push
inc
cld
inc
in
cld
std
sbb
stc
push
test
mov
push
scas
mov
out
mov
out
xchg
bound
push
xor
dec
adc
jle
add
neg
test
xchg
pop
add
leave
clc
xchg
ljmp
push
shll
or
cmpsb
push
movlps
mov
sbb
aaa
add
adc
aaa
insb
fdiv
mov
test
dec
dec
jb
lods
ret
sbb
out
mov
aaa
push
loop
lcall
ret
mov
aas
inc
adc
or
fldl
jle
shl
push
push
and
out
sbb
push
or
lahf
fmull
pop
shll
mov
out
mov
gs
fwait
mov
cli
jno
xchg
fdivs
jno
ds
mov
add
clc
cmpb
xchg
loop
push
xchg
cmp
cmp
or
lahf
xchg
arpl
push
pop
lds
push
fs
and
add
push
push
mov
int3
and
dec
jge
xchg
jmp
int3
xorl
test
and
or
adc
mov
dec
in
or
cld
std
pop
shlb
mov
hlt
fs
mov
add
pop
jecxz
sub
scas
xchg
lahf
fbld
movl
push
sarl
xlat
jle
push
jnp
out
mov
in
push
cltd
mov
mov
aas
popf
orl
pusha
mov
out
out
sub
fs
mov
sbb
inc
pop
cli
sbb
scas
aad
stos
shrl
hlt
rorb
xchg
mov
or
fdivs
into
jb
nop
xchg
sti
into
xorb
fsubl
push
jmp
jl
fisttps
int3
lods
into
mov
das
pop
cmpl
mov
mov
mov
xchg
mov
lea
shll
cmc
add
jo
lret
mov
test
je
xchg
test
lret
jne
adc
dec
cltd
and
xor
outsb
sbb
dec
sbb
cmp
mov
mov
xchg
dec
loop
xor
pop
sub
push
inc
xchg
adc
sbb
pushf
orb
int3
pop
dec
fists
lock
cmpsl
stos
stos
xor
mov
add
mov
xchg
adc
cmpl
sub
cmp
mov
sti
scas
test
xchg
repz
fcoms
xor
pop
lods
in
ss
xchg
mov
sbb
fidivl
mov
cs
and
popa
cld
dec
imul
push
int3
in
mov
adc
pop
pop
pop
idivb
rcrl
ss
outsb
push
push
xchg
and
cmpsl
dec
xor
jmp
popf
xchg
or
mov
push
int3
mov
fildl
add
out
negb
fwait
xor
bound
cmp
fcmove
cmp
bound
test
xlat
cmp
push
fadds
pop
sub
sbb
rcll
fsub
jnp
daa
dec
mov
adc
aam
dec
into
movsb
push
sub
jecxz
cmp
loopne
or
sub
and
jno
mov
cmp
lcall
cmp
adc
pop
pop
pop
out
dec
mov
mov
inc
mov
jo
clc
fidivrl
into
add
xchg
jl
mov
daa
jne
out
jge
stos
mov
frstor
xor
movsl
insl
shll
std
jbe
fs
ficoms
lea
cmpb
push
adc
enter
push
cmpsb
cmpsb
rol
es
loope
sbb
loop,pt
push
xchg
cmp
mov
sub
ljmp
inc
jnp
ret
adc
inc
jle
int
push
nop
dec
hlt
jne
xchg
fs
jns
repnz
sub
hlt
push
lea
mov
mov
add
push
sbb
pop
xchg
cmp
add
mov
call
fmuls
or
cmp
lea
out
and
cmpsl
xor
mov
lahf
fidivrs
adc
cmc
mov
adc
loope
insl
mov
out
fisubl
jo
xor
ss
les
lcall
cmovge
push
push
rorl
pushf
jecxz
push
movsb
jb
scas
in
jmp
add
les
aam
xchg
pop
lret
movsb
out
or
test
daa
clc
nop
cld
fldl
aaa
sbb
xor
lods
aam
pop
or
repnz
loopne
adc
push
cmp
arpl
mov
dec
out
testl
push
std
pop
sarb
sub
adc
xchg
out
jg
lea
push
testb
inc
fidivs
int
popa
psrlq
jbe
int
cmp
outsl
int3
push
loop,pt
shll
imul
stc
pop
out
iret
mov
mov
je
pop
setb
pop
mov
xchg
repnz
ror
pusha
fcmovu
hlt
dec
dec
add
add
lods
aas
inc
in
repz
or
push
mov
or
xchg
sub
bound
xchg
sub
or
shll
icebp
dec
mov
icebp
leave
pop
mov
adc
and
push
adc
cmc
or
cld
sub
push
and
xchg
lcall
dec
dec
add
loop
sti
dec
popa
adc
mov
mov
and
aad
lds
mov
lods
repz
or
imul
out
jnp
sbbl
xchg
push
inc
sbb
adc
and
jp
mov
fs
mov
jbe
loop
lcall
aad
add
popa
mov
stc
test
aad
and
dec
mov
cmp
daa
repnz
fstpt
push
das
enter
ljmp
mov
or
aam
je
add
jno
lret
popa
test
les
loop
cmp
add
push
push
pop
test
cmp
pop
jb
iret
in
mov
cld
mov
ss
xchg
sbb
nop
pminub
sbb
xor
icebp
das
outsl
pop
sarb
sub
insl
jge
mov
outsl
or
pop
xchg
fisttpl
sbb
jle
cwtl
call
fstl
je
aas
push
leave
push
dec
or
loop
xchg
adc
enter
lods
sbb
mov
int3
mov
jge
and
sub
jge
dec
hlt
push
jecxz
ret
sub
daa
stc
repnz
xchg
push
stos
xlat
or
inc
pop
jmp
dec
mov
subl
in
mov
rorl
mov
sub
shrl
push
ljmp
imulb
pop
scas
push
icebp
sbb
and
int
sub
inc
or
mov
inc
cmpsl
lods
clc
sbb
xor
xchg
bswap
push
into
stos
inc
add
nop
or
add
jb
jnp
loopne
mov
stos
call
in
and
jg
adc
fidivs
xor
lret
into
dec
std
xor
out
dec
enter
enter
hlt
mov
cmpps
popa
test
dec
nop
rcrb
imul
xchg
jb
and
xchg
mov
push
mov
dec
mov
outsl
and
and
jne
out
nop
xlat
sub
test
xor
jp
outsb
cmp
pusha
and
mov
add
xchg
cmp
arpl
jl
punpckhdq
pop
pop
dec
lock
lds
xor
in
and
iret
imull
jae
push
mov
pop
cmp
xchg
bound
out
adcl
add
sub
add
add
aaa
and
loopne
pop
dec
icebp
jg
inc
outsb
scas
imul
dec
pop
clc
mov
mov
sahf
sbb
dec
fstp
out
addl
mov
js
movsb
add
jns
stos
sbb
test
lods
jecxz
bound
fistl
mov
ds
test
jo
push
test
dec
sub
jmp
test
cmpsb
inc
scas
mov
mov
fldcw
in
mov
push
pop
cmpsb
insb
cmpl
sub
xchg
add
imul
rcll
lahf
jbe
push
cs
mov
test
add
push
and
adc
jle
js
dec
rorb
repz
or
xor
fcomps
leave
push
push
add
rclb
fcoms
jo,pn
mov
loope
jecxz
push
sbb
ljmp
repnz
stos
adc
jne
out
inc
test
sub
pop
and
cmpb
das
add
popf
jl
in
imul
sti
notb
push
in
shl
jg
push
sbb
rcl
pop
xchg
inc
xchg
dec
adc
xchg
and
sub
aas
nop
adc
sub
jbe
out
xor
sub
gs
out
jno
pop
jnp
cli
into
xchg
add
and
push
mov
inc
mov
push
loopne
sub
pop
cmp
pop
insb
sub
pop
lods
mov
lea
and
call
lret
xor
and
sbb
dec
add
cltd
dec
lods
push
andb
std
loope
adc
dec
sbb
mov
mov
add
mov
adc
lods
xchg
in
jp
pop
jl
push
bound
aas
rorl
jns
nop
jg
test
inc
add
push
add
push
scas
push
int3
or
insl
and
cmp
or
inc
pop
fcoml
add
sahf
xchg
adc
popf
lcall
out
xchg
jbe
mov
push
fbld
js
out
ret
shlb
inc
icebp
mov
lahf
ret
stmxcsr
push
push
adc
addb
cmp
movsl
push
pop
sbb
ljmp
cmp
push
popf
in
dec
addb
mov
cmp
fnstenv
inc
clc
xchg
insb
push
neg
mov
jmp
xlat
int
push
lds
sbb
sbb
in
dec
mov
movsl
push
xchg
pop
test
sbb
push
sbb
inc
iret
inc
in
pop
xchg
push
adcl
mov
pop
addr16
push
xor
daa
sbb
add
loope
aad
psrad
insb
imulb
clc
in
jae
cmpsb
add
rorb
mov
inc
sub
mov
sbb
shr
xor
push
push
cmp
out
hlt
inc
cmpsl
inc
fsubrs
mov
lock
icebp
add
push
aaa
jge
enter
stos
add
sub
mov
xlat
pop
out
lds
inc
mov
mov
push
mov
xchg
push
loope
jne
dec
ljmp
stos
xchg
fwait
in
insl
out
sub
and
shrl
jns
mov
pop
mov
shlb
cltd
js
jae
lahf
sub
in
inc
xchg
insl
lsl
fwait
out
sub
mov
mov
adc
add
gs
call
jne
sbb
daa
push
xor
inc
cmpsb
divb
xlat
push
imul
mov
and
mov
inc
data16
dec
test
dec
fcomip
negb
mov
sub
cmpb
cvtdq2ps
cmp
mov
dec
and
sbb
xchg
add
inc
outsb
adc
pop
push
nop
add
repnz
push
icebp
dec
icebp
sub
cmp
push
pop
fldt
out
ds
pop
js
mov
dec
not
jnp
cmp
dec
test
lahf
sbb
push
idivb
fldl
and
xor
jge
mov
xor
nop
or
xor
loope
mov
sub
pop
mov
std
das
lcall
adc
mov
pop
out
and
fdiv
popf
cmp
sub
xor
aam
xor
jp
rol
add
adc
aam
add
mov
jnp
outsb
sbb
fidivs
js
in
adc
test
js
loope
mov
jle
mov
shlb
mov
jecxz
aas
xor
lret
pop
arpl
fsubs
fisubrl
enter
aam
test
pop
jne
xlat
lcall
pusha
sbb
sbb
inc
mov
hlt
inc
inc
cmp
lcall
xor
push
or
shlb
icebp
out
jae
xor
inc
cs
jg
int3
out
pop
idivl
jmp
in
jo
mov
repz
mov
rolb
mov
iret
xor
loopne
jmp
cmp
inc
in
jge
or
mov
xchg
jne
jae
mov
adc
fcomps
call
pushf
les
mov
xchg
mov
fldcw
sbb
call
push
lods
imul
or
mov
test
cmc
ret
xchg
aam
fsubs
je
jmp
pop
push
cmpsl
loope
push
sahf
mov
iret
push
pop
jbe
fcmovu
mov
mov
jae
idiv
xor
in
sbb
inc
lods
jle
daa
dec
pop
scas
sub
std
xor
imull
xchg
or
lods
xchg
cmc
loop
push
xchg
shlb
push
faddl
xor
jb
in
ds
xchg
xchg
fwait
push
in
jne
mov
sub
mov
cwtl
ret
sub
movsb
xchg
cmp
in
call
insl
push
inc
adc
dec
nop
and
pop
adc
or
in
sbb
bound
mov
fcoms
shll
xchg
mov
lods
inc
movsl
stos
cmpsb
push
out
dec
cld
flds
or
cmc
push
and
inc
cltd
subl
mov
push
cmp
inc
jns
mov
pop
jno
dec
rorb
mov
stos
add
call
mov
imul
sub
jmp
jb
or
fldenv
add
outsl
adc
pop
push
shrl
jmp
divb
sub
fdivl
mov
dec
loop
mov
push
inc
aaa
and
jle
inc
mov
inc
cmp
shlb
push
inc
sub
loope
jno
scas
mov
mov
insb
shll
cmp
sub
loope
adc
sbb
cmp
and
imul
xchg
inc
hlt
pop
ret
lds
iret
add
fidivl
cld
sti
sbb
sub
push
push
xchg
insb
ds
and
add
jo
into
push
xlat
fdivs
gs
imul
sbbb
leave
mov
and
fdiv
push
inc
into
fiadds
sub
cmp
clc
add
add
xor
dec
add
je
lcall
lds
out
mov
lahf
cmpb
repnz
adc
call
jle
fsts
cmp
push
mov
and
mov
push
stos
pop
xchg
adc
mov
xchg
push
fsubrs
decb
jns
cltd
xchg
lret
into
addr16
cmp
scas
outsb
pop
pusha
xchg
repnz
push
mov
cmp
nop
push
xor
in
pslld
rcll
push
jnp
and
lods
pop
jnp
bound
imul
mov
dec
pusha
jo
lock
cmpsb
pushf
cmpsl
js
and
aas
inc
sbb
mov
fstps
enter
dec
xlat
jbe
in
jle
ficompl
inc
sahf
arpl
shll
bound
addr16
loope
divl
inc
cmp
push
mov
jmp
mov
push
push
jb
xchg
mov
mov
lods
mov
outsb
sbb
mov
mov
pop
push
fxch
fnstenv
rorb
popa
stc
mov
js
cmp
jno
push
mov
lds
in
loopne
mov
scas
xchg
dec
fsub
popf
mov
test
mov
loop
add
outsb
sbb
mov
shr
cs
test
icebp
sarb
int3
call
cmpsl
lods
jecxz
ds
mov
adc
roll
sbb
pop
mov
mov
cs
fidivs
push
fsubp
rcrb
lock
aam
aas
shlb
dec
pop
mov
pop
sti
adc
cmp
cld
adc
mov
push
xor
lcall
lds
jnp
mov
pop
mov
jmp
pop
in
aad
mov
mov
shlb
rcl
adc
pop
clc
cltd
sbb
mov
and
pop
pop
jg
pop
stos
inc
mov
jo
sahf
jae
aas
mov
ret
lock
xchg
aas
scas
gs
lds
dec
in
jno
imul
stos
bnd
adc
xchg
inc
sbb
xor
sbb
scas
mov
enter
int3
cmp
in
xchg
xor
pop
push
dec
adc
cmp
dec
xchg
aad
imul
dec
imul
mov
scas
mov
cmpsb
fiaddl
and
out
gs
stos
mov
fisttpll
sub
inc
sti
pop
or
and
stos
insb
lods
push
lods
pop
jno
into
sbb
xchg
and
out
lds
stc
mov
mov
xor
or
xchg
xchg
pop
sahf
cmp
inc
xor
js
xor
cmpsb
cmc
js
mov
xor
jno
mov
cld
push
add
jge
pop
js
cmc
ja
cmc
addr16
xor
inc
setno
pop
inc
add
push
push
push
cmp
jg
data16
dec
inc
out
push
jmp
inc
lods
cld
sahf
jg
mov
icebp
sbb
jo
dec
mov
mov
mov
push
mov
mov
lcall
into
adc
add
sub
shl
cmpl
and
std
sbb
inc
fimull
in
xchg
orb
aaa
jl
push
popf
inc
dec
dec
sub
cld
adc
bound
mov
in
sbb
mov
je
xchg
mov
je
in
insb
sub
fcomps
fs
push
mov
xchg
lods
mov
gs
mov
dec
adc
jecxz
sub
or
incb
test
daa
stos
movsl
xor
pop
jmp
outsl
and
sub
mov
push
lret
inc
ds
and
inc
xor
jb
inc
or
mov
fisubrl
jecxz
jnp
cmc
dec
mov
imull
and
test
pop
imul
or
bound
sbb
das
adc
jo
ss
into
jae
xchg
faddp
incb
jae
sub
outsb
shl
pop
or
inc
mov
fdivrs
shr
mov
iret
aam
add
ja
inc
pop
ret
inc
ficomps
or
fildl
add
clc
cld
cmc
add
xchg
mov
xchg
aam
out
cwtl
daa
je
and
cmpsb
xchg
mov
leave
cmp
sbb
cmp
faddp
adc
add
out
repz
stos
xor
xor
inc
jg
jne
insl
cmpsl
inc
pop
add
sti
inc
and
cs
mov
aad
xor
xchg
sub
mov
leave
pop
in
xchg
cwtl
scas
dec
loop
fimuls
les
mov
rolb
call
in
cmpsl
inc
inc
or
mov
xchg
add
rolb
mov
or
push
inc
push
jne
inc
jns
dec
imul
adc
push
popf
inc
xchg
scas
inc
outsb
and
xor
clc
cmpsb
and
test
jl
ret
dec
les
push
ss
xchg
ss
ja
cmp
inc
mov
or
xor
pop
ja
stc
mov
bound
push
arpl
push
icebp
movsb
data16
es
add
xor
push
lock
push
rcl
jo
jne
mov
hlt
stos
xlat
lret
aam
stos
cmp
decb
cwtl
push
stos
ds
popa
popa
jg
or
xchg
insb
push
ja
push
sahf
les
lret
dec
pushf
int
xchg
rcrb
mov
jg
int3
fwait
push
push
test
cli
lret
ds
cltd
or
xchg
jbe
adc
or
shr
test
xor
mov
xor
sbb
scas
insl
sti
dec
and
sub
xchg
leave
loop
pop
sub
fadds
mov
cmp
mov
in
xchg
outsl
pop
stos
dec
popf
inc
jbe
mov
pusha
movsb
pop
mov
pop
imul
pop
imul
jno
movsl
movsl
mov
cmpsb
dec
mov
jae
sub
sarl
imulb
sti
stos
aaa
andb
adc
mov
ja
cmc
push
push
out
pop
mov
incl
out
mov
fnsave
pop
push
inc
imul
int3
divb
stos
xor
cmp
daa
stc
das
gs
bound
addl
sbb
push
inc
push
xor
leave
fsubl
fadds
aam
and
jnp
repz
add
out
pop
lods
dec
xchg
fwait
aam
add
fiaddl
adc
xlat
call
dec
jle
cmpsb
ret
pusha
rcrl
ret
xchg
pop
sub
push
or
decb
rcrb
stos
cmpsl
std
fcomi
adc
add
adcl
lods
jbe
leave
or
pushf
inc
es
xor
movsl
cltd
lcall
inc
es
leave
idivb
sbb
div
pop
into
jp
rcll
or
or
lock
jno
sub
push
xchg
fmull
adc
fld
mov
cmp
push
pop
jl
fsts
pop
add
jmp
mov
and
mov
mov
cli
push
lret
cmp
int3
mov
cmp
popl
fisubs
xchg
es
dec
inc
pusha
jle
pop
push
pop
add
or
loop
das
adc
dec
pop
lret
fsts
jmp
in
pop
xlat
or
jbe
nop
stos
or
fdivs
mov
mov
clc
mov
or
xchg
xchg
neg
mov
jne
fisubs
dec
inc
mov
sti
and
and
and
or
pop
mov
or
mov
insb
ljmp
or
push
les
xor
sti
adc
push
imul
lahf
inc
xchg
pusha
adcl
roll
mov
jl
lock
push
cmp
cld
imul
pop
jp
pop
xrelease
mov
aam
gs
mov
or
rolb
xchg
rclb
push
sbb
in
fildl
sbb
dec
cmpsl
xchg
push
cmp
lods
jae
pop
xor
adc
out
mov
scas
sub
leave
je
xor
xchg
sbb
es
and
adc
push
int3
repz
dec
movsb
in
addr16
push
rcrl
fcmovnb
push
inc
aaa
dec
scas
test
jg
aas
dec
xchg
outsb
xchg
mov
addr16
xor
insl
bnd
pop
pushf
leave
or
out
mov
add
xor
dec
arpl
repnz
insb
fs
adc
xchg
jbe
xchg
pop
psubusb
xor
sbbb
faddl
iret
cvttps2pi
push
incb
push
mov
test
inc
add
push
push
xchg
pop
aad
fwait
pop
fistpl
movsb
jno
ficompl
sbb
andb
sub
pop
ret
mov
dec
xor
std
mov
shl
rolb
test
outsb
xor
stc
mov
fisttps
sub
mov
lret
iret
nop
std
insb
or
xor
cmp
sahf
fadd
sub
add
test
cmp
in
xchg
mov
cli
xor
fisubrl
xchg
xchg
cmpsl
mov
popw
scas
std
js
mov
mov
cmp
push
loopne
outsl
mov
mov
out
hlt
sub
sahf
xlat
cmpsb
lock
pop
out
loope
sub
xchg
dec
in
lahf
and
stos
testl
test
in
add
add
ja
cmpsl
cmpl
imulb
cmp
xchg
enter
xchg
dec
lcall
or
insb
dec
mov
bound
pushf
push
dec
dec
xorl
push
or
ret
xor
out
add
int
fstl
pop
aad
sbbl
jp
pop
test
shlb
pop
iret
outsl
push
mov
aam
xor
add
jle
or
shlb
sub
sub
dec
xor
cmp
stos
in
out
repz
movsl
ds
movsl
js
into
shll
sbb
lods
mov
mov
jle
loopne
repz
ret
jecxz
mov
jne
mov
shrb
test
pushf
shll
repnz
out
jno
dec
mov
xchg
and
mov
cmp
pop
adc
push
pop
arpl
cli
lcall
push
data16
mov
das
ss
insl
pop
setbe
stc
mov
stc
aas
test
jp
push
inc
pop
xchg
dec
adc
lods
stos
cmp
mov
mov
cli
orb
and
jns
push
movsl
shl
push
lea
je
dec
sbb
mov
call
out
mov
lea
mov
mov
inc
iret
sbbl
jecxz
adc
lret
mov
repz
addr16
mov
cmp
cmp
andb
jmp
pop
xchg
or
sbb
mov
cmc
dec
movsb
repz
add
cmpsb
mov
mov
push
push
add
lret
mov
and
pop
adc
test
or
cmp
enter
xor
push
stos
aaa
stos
and
enter
mov
lret
clc
fisubs
roll
neg
movsl
ja
mov
push
jmp
pop
sbb
jp
sbb
jo
push
cld
push
and
pushf
mov
pop
lods
add
repnz
xlat
addr16
push
sbb
mov
and
push
es
xor
add
cmp
pushf
cwtl
ja
mov
inc
xchg
aam
lret
jne
bound
imul
aad
push
adc
je
pop
aad
pushf
ret
push
shrb
and
test
push
out
push
testl
pushl
leave
push
adc
jbe
sahf
cmc
mov
cltd
xor
ficoms
leave
shlb
sub
jmp
cmp
dec
leave
cmp
int
and
or
ret
mov
icebp
dec
add
mov
fldt
rolb
out
notl
loopw
shlb
push
scas
insl
jb
repz
fisttpl
stc
sbb
adc
adc
movsb
das
dec
xor
in
pop
in
jnp
mov
rcll
test
outsl
xor
mov
jmp
jle
inc
popa
mov
out
or
add
dec
push
std
dec
pop
mov
call
mov
dec
pop
xchg
leave
clc
sbb
test
mov
aam
data16
lret
pop
xchg
int3
mov
xchg
repnz
xor
sub
xchg
xchg
sub
mov
mov
inc
ret
mov
dec
aad
lret
es
mov
xor
mov
jp
mov
lds
mov
pop
mov
xor
xchg
sbb
in
add
dec
push
add
in
pop
lods
pop
popa
add
out
arpl
repz
inc
xor
stc
aas
cs
pop
ja
add
xchg
sub
pop
sbbl
xchg
test
lds
inc
or
mov
jl
nop
xchg
out
into
sub
jb
in
out
sbb
mov
je
test
push
jb
sbb
mov
imul
pop
xor
push
xor
or
xor
pop
imul
hlt
dec
fists
arpl
icebp
test
jns
mov
aad
insb
push
std
push
cmpsl
popf
std
sub
out
jg
inc
sbb
ss
sbb
js
inc
sbb
lds
pop
int
lods
xlat
cmp
out
pop
imul
mov
mov
sub
fmul
pushl
addr16
adc
cld
int
jle
push
gs
jne
in
xor
adc
and
xorl
enter
or
test
inc
aam
inc
mov
rcrl
adc
addr16
ss
lock
aam
adc
jmp
enter
mov
cmp
cmpl
in
lods
cld
sub
test
mov
data16
xchg
ja
xchg
sti
xor
add
shlb
push
inc
add
cmp
jb
fdivrs
xchg
sbb
lcall
xlat
rorl
mov
dec
fildl
push
popf
fildl
pop
mov
test
stc
rcrl
cld
push
mov
xchg
mov
pop
lret
gs
loop
scas
ret
pusha
xchg
aad
shll
jmp
les
imul
repz
js
or
in
push
push
scas
cwtl
mov
imul
mov
inc
cmp
mov
icebp
mov
mov
xchg
test
xchg
jge
ret
xchg
adc
cltd
ret
fmuls
in
popa
es
dec
rcrw
mov
lret
rcll
rclb
mov
adc
push
mov
dec
jmp
sbb
push
adc
dec
dec
jb
popl
in
jb
and
dec
dec
fcoml
push
movsb
xchg
pop
xchg
stc
insb
jb
jo
xchg
jne
add
icebp
or
das
test
mov
loop
push
movsl
mov
sahf
enter
mov
pop
imul
dec
and
push
rclb
mov
sbb
aas
and
push
add
xor
dec
pop
fisubl
push
and
push
popa
adc
pop
adc
inc
mov
pop
out
xchg
pop
nop
add
sub
mov
xchg
push
adc
and
sbb
lcall
pop
cmc
mov
pop
mov
lret
sahf
sahf
mov
sbb
push
inc
lret
sbb
inc
les
and
sub
loop
out
stc
lcall
jae
popf
popf
je
nop
pop
movsl
cmc
movsl
mov
xchg
mov
sbb
mov
adc
mov
cmpsb
sub
sbb
xchg
push
mov
xor
nop
cmpsl
cltd
dec
jne
push
fisubrs
out
xor
loopne
icebp
into
data16
push
mov
xchg
rclb
cld
or
lods
add
adc
dec
enter
sbb
xor
cmpsb
jbe
out
pop
sbb
mov
test
push
push
push
xor
mov
in
pusha
enter
in
repnz
xchg
add
sub
mov
into
mov
jns
fidivrs
aas
movhps
scas
sbb
xchg
cmpsl
sar
sub
add
out
xor
cmpsb
and
sub
mov
pop
sbb
clc
je
outsb
dec
and
jmp
daa
push
and
lods
mov
add
insl
dec
adc
push
fists
fildl
dec
mov
or
divl
pop
movsb
mov
aad
insl
iret
pop
sti
jl
jo
stos
jle
jle
notl
push
adc
lret
iret
rorb
inc
ss
loopne
mov
std
and
pop
dec
mov
push
jmp
sub
xor
in
sub
ss
sbb
loope
lcall
and
mov
hlt
add
xchg
movsb
shll
in
int
push
cs
in
jne
cmp
out
mov
dec
jg
lret
negb
cmp
xor
icebp
adc
inc
mov
cld
test
sub
je
ljmp
aam
and
and
fsubs
xor
das
or
movsl
mov
lock
fwait
pop
mov
addr16
mov
pop
xor
aam
jl
jns
xchg
adcb
loope
push
jnp
xor
jb
cmp
inc
sbb
aam
dec
mov
mov
test
push
xchg
fstl
or
dec
pop
test
mov
ret
mov
xor
mov
xchg
stos
adc
mov
arpl
in
mov
xchg
or
popa
es
pushf
sbb
jne
ja
mov
xchg
push
mov
adc
sub
sub
push
in
push
int3
incb
icebp
xchg
out
sub
inc
in
insl
mov
insl
shlb
pop
adc
sub
aam
lods
sarb
add
inc
idivl
add
jp
mov
gs
pop
andl
das
inc
out
bound
ret
xchg
push
cmp
jmp
add
aas
mov
fnstsw
insl
mov
mov
paddw
mov
mov
xor
cmpb
rcrl
sub
lds
sbb
push
gs
repnz
sub
inc
outsb
push
call
rclb
decb
movsb
mov
push
push
adc
inc
jp
aam
pop
add
ja
outsb
int3
pop
adc
loope
sbb
inc
adc
cmpsl
sbb
xchg
pop
jo
inc
xor
fmul
pushf
jecxz
xchg
cmp
addr16
and
mov
test
dec
je
hlt
dec
hlt
js
pop
insl
in
fisttpll
or
xor
or
or
mov
pusha
adc
idiv
mov
or
inc
ja
dec
push
aaa
xlat
sub
lahf
pop
pop
lret
repz
dec
shlb
xchg
sbb
ret
mov
dec
ljmp
repnz
das
push
cmp
pop
hlt
insl
dec
jg
mov
lcall
push
cmp
push
sub
mov
rcll
or
lret
addl
sub
stos
sti
add
cmpsl
daa
in
adc
sub
mov
dec
test
jmp
inc
xor
or
fimuls
cmp
mov
outsb
mov
loope
fistl
xchg
aad
arpl
push
add
jo
push
mov
scas
xchg
jmp
fs
cld
pop
aam
les
push
mov
adcl
xor
sbb
insl
mov
xor
ficomps
push
push
mov
jne
or
cld
clc
push
fucomp
and
cmpsl
shll
ds
int
dec
mov
add
xchg
pop
imul
jb
dec
cmp
xor
cwtl
and
dec
and
fnstcw
xchg
or
mov
jnp
sarl
sub
sarl
jbe
ret
or
adcl
mov
pop
ja
push
out
jnp
out
les
in
xchg
out
faddp
stos
mov
cmp
mov
add
jp
ret
cmp
ds
jne
mov
dec
sahf
icebp
pop
movsb
jl
mov
scas
nop
jmp
jb
cmp
call
sbb
sub
incl
push
clc
sbb
mov
orl
lock
mov
jp
adc
pop
ss
out
mov
popa
roll
fs
mov
ret
mov
iret
imul
insb
scas
and
add
or
xchg
or
sbb
push
popa
add
testb
mov
imul
inc
mov
jle
lods
xchg
loop
mov
cltd
mov
sub
dec
push
shld
or
adc
aad
ljmp
notrack
mov
ds
xor
mov
jp
inc
cmp
data16
test
mov
ds
stc
sbb
push
sbb
or
mov
ljmp
loopne
adc
ds
sahf
mov
test
fwait
push
fisttpl
adcb
fcomps
adc
iret
divl
xor
lret
scas
sbb
lds
jo
or
dec
pushf
lock
sbb
mov
cmpsb
addl
pop
mov
mov
fldenv
xor
push
test
mov
lods
xor
push
test
movsl
dec
xorl
sub
jno
outsb
adc
cli
iret
pop
jb
xchg
scas
mov
cmpsb
xor
imul
and
add
sub
and
push
sahf
movsl
fisttps
cld
addb
ffreep
fmuls
jns
stos
xchg
sbb
mov
inc
xor
in
sbb
mov
or
pop
fucom
ja
cmp
dec
in
cmpsb
mov
and
sub
popf
mov
inc
add
lods
ret
pop
pop
push
xchg
mov
js
js
mov
pushf
std
lods
popa
les
and
in
dec
mov
nop
dec
jb
xor
adc
mov
pop
stos
jecxz
rorl
fidivrs
clc
push
ds
mov
mov
insl
pop
or
cmp
xchg
lret
cmp
adc
push
mov
mov
dec
scas
jno
daa
pushf
adc
push
sti
inc
jecxz
std
adc
bound
popf
xchg
cmpsb
stc
pop
pop
xorl
int
pop
mov
pop
sub
ljmp
rorl
js
cmp
orl
popa
xchg
pop
pop
aad
add
icebp
xchg
aaa
sub
sub
int3
jge
stos
mov
mov
aad
aam
sti
sub
test
fcom
lret
add
adc
xchg
movsb
sbb
inc
jbe
push
mov
int
lods
push
jmp
sti
pop
jp
shrl
int3
adc
lods
int3
cld
inc
cld
dec
jecxz
sbb
idivl
fnstcw
sbb
ret
mov
cmc
and
test
mov
aad
or
out
mov
sti
and
outsb
adc
xor
fidivrs
or
lahf
std
cmp
xor
push
clc
fildll
cmp
xchg
mov
nop
pop
xlat
add
xchg
adc
in
sub
cld
mov
mov
test
les
inc
call
js
fidivs
dec
jb
mov
jns
sti
or
jne
sbbb
test
cwtl
fiadds
dec
pushw
sub
push
jg
mov
pop
inc
jge
lahf
dec
sub
pop
pop
sbb
push
cmpsl
pop
adc
sub
xlat
pop
hlt
or
sarb
xor
xchg
sbb
scas
or
mov
xchg
adc
mov
and
sbb
adc
dec
inc
lahf
cmpsb
fs
pusha
adc
add
pop
add
sbb
lahf
mov
stos
in
and
daa
and
in
cmp
in
pop
aad
mov
dec
fsubrs
inc
hlt
sub
ljmp
jge
xor
pop
lret
shrb
cmpb
popf
lcall
mov
in
fisttpl
pop
enter
call
jo
into
sub
sub
js
ret
outsb
mov
orl
out
je
cmpsl
shrl
mov
and
cmp
inc
popa
push
jecxz
add
add
cld
pop
add
cmp
cmpsl
sub
rorl
xlat
jno
daa
mov
inc
popa
push
ja
add
push
push
push
or
orb
and
adc
push
mov
js
dec
test
aam
int3
call
mov
cmp
sbb
cmp
test
sbb
add
push
bound
mov
or
lods
out
pop
mov
cmp
jecxz
add
sub
dec
sub
rol
outsl
stos
loope
fdivrl
mov
sub
stos
pushf
cmp
fwait
push
cmp
std
push
jg
xor
inc
lds
or
ss
and
dec
xchg
adc
cs
leave
imul
jg
sbb
or
jo
arpl
or
les
xor
fmuls
sub
cwtl
ja
and
hlt
lea
outsb
imul
lods
pop
pop
lcall
sub
out
adc
aam
pop
add
divl
cmp
xchg
xchg
jae
sub
loope
outsl
and
js
out
push
mov
xor
leave
pop
lock
fsts
pop
sub
int3
ljmp
shll
sub
int
sarb
cmpsb
test
sub
leave
mov
sbb
xor
cmp
fwait
icebp
sbb
cltd
inc
lea
in
pop
xor
sbb
cwtl
lods
dec
pop
pop
xchg
imul
mov
int3
and
sub
cmp
movsl
dec
pop
mov
test
xor
jmp
adc
repnz
in
push
fwait
std
nop
scas
mov
pop
cmpb
std
mov
fld
out
sbb
xor
movsl
xor
dec
mov
mov
sbbl
add
inc
test
pop
out
stos
mov
pop
popa
or
popf
or
into
adcb
mov
cmp
xor
fadds
jge
fwait
leave
into
mov
mov
dec
xchg
loopne
cmpl
mov
repz
or
xor
mov
xchg
rcl
arpl
mov
adc
dec
das
inc
push
fs
jb
sarl
cmc
and
mov
dec
imul
pop
inc
mov
mulb
push
fs
mov
xor
aaa
mov
jecxz
int
jmp
mov
add
mov
movsb
mov
xchg
cmpsb
sub
dec
adc
jne
pushf
mov
lds
pop
mov
sub
mov
pop
push
adc
outsl
shr
push
ds
iret
push
sub
mov
push
jb
mov
sbb
gs
loop
mov
cmp
mov
xchg
stos
loopne
mov
xor
jp
mov
pop
dec
push
mov
xor
es
ljmp
jno
insb
mov
sub
cli
pusha
push
ljmp
cmp
xchg
jns
pop
pop
add
adc
jge
stos
jge
adc
push
jg
or
lods
or
xor
cmp
loopne
in
lahf
push
aad
push
unpcklps
jmp
jl
inc
ror
jmp
push
fildl
jg
jp
into
notb
mov
cmc
mov
xor
inc
inc
mov
and
jae
test
call
sbb
out
lods
or
sarl
loope
stc
aaa
imull
cltd
addb
mov
mov
add
mov
je
inc
adc
mov
xchg
mov
loope
add
mov
cmpsb
adc
xor
cmp
je
pop
mov
movups
mov
movsb
dec
mov
adc
adc
call
xor
add
les
xchg
lahf
and
jle
ljmp
jp
js
adc
xor
xlat
adc
pop
or
mov
push
es
mov
loope
mov
cli
jmp
test
pop
out
sub
cmc
inc
push
mov
shr
repnz
in
adc
xchg
mov
rcrb
das
dec
xchg
fstp
push
or
dec
dec
test
data16
lahf
popf
stos
aas
add
or
jno
push
rcll
sbb
xchg
jp
insb
mov
sub
cmp
enter
nop
fisubl
or
jbe
test
adc
dec
jg
popf
das
jp
or
stos
incl
cld
xchg
inc
cmp
dec
ficompl
call
scas
pop
scas
pusha
ss
jnp
cmp
cmp
icebp
or
test
cmp
lret
push
add
sbb
mov
sahf
mov
movsb
adc
mov
cwtl
mov
pop
loop
jl
cmpsb
andb
test
hlt
xchg
enter
mov
cmp
jle
mov
xor
jg
mov
lret
inc
and
gs
movsb
lock
out
into
call
stos
add
test
mov
es
mov
loop
lahf
clc
clc
mov
cli
inc
add
jb
push
popl
sarb
mov
jp
sub
and
cmp
popf
or
cmc
push
jl
push
inc
push
mov
push
cmp
jmp
aas
jae
xlat
pop
repz
mov
mov
ljmp
sub
add
subb
insb
xor
scas
and
lcall
test
psrlq
in
js
adc
nop
cmpsb
scas
test
sub
add
outsb
pop
int3
sbb
lret
nop
and
out
cli
dec
orb
adcb
push
test
mov
sbb
cmp
push
pop
dec
aad
int3
xor
ror
in
mov
outsl
or
and
loope
ja
lcall
cmc
mov
loope
jecxz
jle
cmpsb
mov
test
dec
repz
clc
and
cmp
imul
movsb
jno
movsl
xor
flds
test
mov
push
push
cli
popa
in
mov
and
imul
jns
fucom
mov
enter
pop
xchg
out
push
sub
mov
jle
mov
sahf
data16
fmul
jno
iret
in
lea
mov
repz
emms
push
fcmovu
mov
cmc
mov
or
pop
lods
out
push
pop
aas
aas
stos
movsb
or
es
push
push
frstor
mov
dec
sub
mov
aaa
pop
repnz
in
and
xchg
cmp
xchg
imul
adc
mov
inc
sub
lret
jb
add
vpunpcklbw
or
insb
fildl
cmp
pop
dec
jns
test
cld
fiaddl
aad
rorl
insb
push
inc
imul
mov
push
ljmp
sarl
ljmp
lret
addr16
daa
adc
in
sub
cmp
inc
enter
pop
les
or
inc
rorb
xchg
fcomip
lods
push
sar
wbinvd
adc
hlt
xor
or
pop
imul
jecxz
push
dec
dec
jb
pop
lcall
aas
adc
or
mov
mov
jmp
dec
pop
rorb
lret
and
aas
test
mov
mov
xor
mov
sbb
push
mov
idivb
loopne
jge
sub
jo
pop
adc
jmp
push
in
jns
fiadds
and
insl
sbb
jae
popf
scas
push
shlb
rcll
in
aaa
sub
scas
or
sub
jbe
add
jecxz
adc
je
inc
and
dec
mov
scas
add
aas
push
dec
cmp
cmpsl
out
loope
ds
add
shl
icebp
sbb
fwait
jp
mov
pop
mov
aad
xchg
lahf
test
lods
jp
pop
out
xchg
movsl
ss
xchg
test
and
sbb
out
imul
sub
es
or
xor
scas
xchg
pusha
mov
shrl
int
iret
mov
lds
lret
add
out
outsl
mov
icebp
ret
dec
adc
ss
dec
adc
pop
pop
fucomi
aas
inc
shr
loope
cmp
cmp
ljmp
fisttpl
pushf
enter
out
and
lret
add
outsl
mov
ja
mov
mov
lock
mov
nop
pop
repnz
outsb
aad
stos
dec
inc
adc
repz
sub
or
pop
and
pop
movsl
add
inc
loop
xchg
in
lea
pop
and
rcr
cmp
sub
popa
loop
fwait
pop
xchg
fistl
bound
in
xor
push
clc
pop
ret
ds
mov
shll
lahf
enter
adc
mov
xor
test
dec
out
push
std
xor
fcomps
lahf
inc
shll
dec
rol
fstl
cs
xor
imul
and
int3
mov
les
mov
jecxz
mov
das
xor
xchg
mov
push
out
pushf
adc
mov
cmp
push
push
xor
icebp
pop
aas
cmpsl
lret
and
popa
pop
gs
pop
push
insl
pop
cwtl
cs
aaa
jo
into
ss
addr16
inc
add
sub
push
mov
inc
ljmp
pop
add
icebp
or
pop
fisubrs
aaa
jae
cld
lret
xchg
out
push
cmpsb
mov
mov
push
in
cmp
in
setle
and
cld
outsb
out
sub
and
lods
fmuls
cmp
es
push
jle
hlt
mov
mov
ja
sbbl
jae
sbb
sub
scas
adc
popf
lret
xchg
mov
jnp
stos
and
nop
aaa
pop
mov
lahf
jb
cmpsb
ficomps
arpl
pop
and
jmp
aam
mov
test
push
push
enter
dec
mov
xor
lahf
fildl
sub
sub
inc
cmp
xchg
rolb
jno
push
ljmp
outsl
ja
pop
pushf
mov
cmp
int3
cmp
cmp
bound
sbb
sub
jp
rcll
dec
mov
out
je
sahf
icebp
faddp
pop
push
push
cmpsb
clc
push
pop
shlb
pushf
cs
jp
shl
add
mov
sub
inc
inc
and
mov
xchg
adc
add
sub
inc
aam
arpl
jl
cmp
aad
adcl
sbb
jae
test
inc
ret
cs
inc
cmpsb
mov
or
jnp
mov
arpl
dec
push
hlt
je
stos
xchg
shl
jbe
mov
mov
aad
sarb
pop
outsl
fadd
fiadds
and
cli
push
cs
push
or
fnstsw
in
inc
mov
cmpsb
xchg
pop
shlb
mov
sahf
outsb
sub
add
daa
repnz
ret
mov
xchg
mov
sbb
xorl
cmpsb
pop
repz
mov
jne
or
pop
mov
movsl
bnd
fldln2
cmpsl
add
pop
dec
sub
sbb
insb
lret
faddl
push
dec
fwait
pop
or
pop
jne
loop
adc
aam
lods
mov
adc
push
cmp
movsb
in
data16
mov
mov
loopne
inc
xor
test
outsl
and
lahf
ret
xchg
cmc
idivl
pusha
test
mov
or
and
movsbl
sbb
mov
in
cmpsb
repnz
data16
pop
push
push
lcall
sub
ja
mov
mov
mov
int3
movsb
cli
out
inc
xor
push
mov
out
xchg
sbb
sarb
gs
fidivl
js
adc
cmpsb
mov
addl
in
ss
iret
mov
lret
and
mov
ljmp
add
mov
cmpsl
dec
add
and
inc
pop
mov
icebp
mov
add
shlb
add
lsl
mov
lds
loope
push
fs
cmpsb
xor
dec
out
data16
xchg
pop
sti
lcall
mov
and
pop
and
mov
imul
dec
jns
inc
xlat
je
xor
mov
aas
pop
mov
movsl
aas
pop
mov
lods
js
imul
cwtl
push
shrl
aaa
jae
repz
gs
dec
push
rcrb
repz
nop
add
or
gs
sub
or
insl
shrb
adc
cmp
push
lret
iret
es
fs
sbb
ret
dec
add
fwait
adc
aas
mov
mov
fwait
xor
loopne
inc
jbe
loopne
mov
sahf
sti
mov
cmp
enter
pop
jb
lcall
jg
sub
test
enter
xchg
or
or
pop
es
mov
sbb
inc
sbb
pop
mov
push
ss
cmp
add
cwtl
in
push
fmull
xchg
sub
int3
and
cmpsl
leave
cmp
xchg
add
in
out
subb
pop
movsb
int3
xchg
lea
int
dec
pop
xchg
imul
adc
rolb
add
sahf
mov
mov
jns
and
xchg
scas
pusha
clc
sbb
cmpsb
adc
add
mov
and
sti
push
cwtl
jo
cmp
and
in
cmp
and
insb
rclb
out
xchg
add
sbb
lods
sti
or
hlt
xchg
cmpb
dec
out
daa
in
jle
or
rolb
mov
arpl
repz
and
insl
cmp
adc
push
mov
mov
jp
xchg
push
test
mov
lea
ljmp
popa
pop
repz
jno
mov
mov
icebp
stc
pop
mov
inc
pop
add
movsl
pop
dec
into
cmp
jnp
les
orl
stos
out
xchg
mov
cli
fs
push
data16
pop
jp
push
out
inc
aam
mov
cmpl
scas
jecxz
fsubrl
xchg
dec
xchg
push
or
push
add
in
test
aad
or
das
mov
mov
or
ljmp
fs
adc
stos
sub
sbb
mov
dec
mov
std
fmulp
popf
loope
push
mov
and
mov
cmc
lds
mov
xchg
mov
sbb
cmpsl
dec
in
insl
movsb
xor
or
sbb
jns
sbb
fs
mov
lahf
loop
scas
inc
lods
in
add
int
mov
mov
mov
je
mov
push
inc
and
and
dec
lahf
add
or
push
aas
sbb
cmp
leave
fs
jns
sbbb
repz
or
mov
movsb
jo
push
sbb
test
sahf
xor
call
sbb
lcall
or
out
je
push
sahf
shrl
bound
icebp
xor
sub
jae
adc
lahf
mov
imul
aaa
xor
sub
shl
or
pop
ret
mov
xlat
jg
ds
push
cmp
pop
cmp
cmp
jle
mov
pusha
insl
lea
lahf
xor
repz
adc
mov
pop
js
lods
add
xor
mov
sub
std
ja
cld
ljmp
xor
leave
push
mov
and
push
enter
stc
ja
inc
and
loope
fisttps
jnp
fcomi
into
inc
in
dec
push
xchg
or
add
out
popf
stos
fidivrs
sub
and
enter
cmc
les
jb
ljmp
cmpsl
scas
out
cmpl
ret
cmp
xchg
dec
jns
pop
movsl
sti
fdiv
add
cmpsb
sahf
ret
xchg
push
xchg
mov
or
mov
mov
scas
in
shlb
push
gs
xchg
lock
jo
shrb
cmp
sub
mov
cmp
adc
cmc
out
leave
xor
push
aam
es
mov
push
loope
or
iret
mov
push
arpl
leave
cltd
mov
mov
sub
cmc
lahf
mov
adc
outsb
test
loopne
in
mov
pop
dec
clc
rcrl
ret
xor
jno
lds
in
cmc
dec
lods
sbb
sbb
and
dec
aas
xor
add
rcrl
cli
lret
es
fcom
nop
std
out
inc
outsb
nop
hlt
pop
inc
dec
jae
and
and
roll
scas
mov
pushf
xchg
sub
add
repnz
mov
dec
xchg
fcoml
push
loope
imul
inc
loopne
lock
and
jne
in
sbb
cmc
or
mov
cmp
mov
inc
xchg
std
adcb
dec
mov
xorl
std
cmp
mov
pop
push
jno
popa
dec
andb
fisttpll
mov
popf
orl
shl
enter
fbstp
movswl
sarl
loope
loope
mov
stc
inc
dec
inc
je
push
sbb
jo
lret
repz
or
jmp
sbb
xor
sub
arpl
add
xlat
lods
mov
notl
fs
andb
test
adc
clc
xchg
xor
fimull
push
mov
mov
imul
test
sub
hlt
int
sbb
in
sahf
into
push
add
shl
and
or
mov
add
mov
dec
jp
scas
mov
cmp
jecxz
mov
mov
xchg
scas
cmpsl
jnp
hlt
xchg
addb
ja
mov
and
mov
pop
cwtl
xchg
stc
filds
popl
jl
push
lret
inc
jg
or
pop
add
sbb
mov
inc
jne
inc
int
outsl
stc
cmc
jge
dec
movl
outsb
in
sbb
pushf
pop
add
lahf
inc
mov
sti
mov
or
push
cli
jg
dec
pop
dec
xchg
test
mov
shlb
popl
xchg
dec
adc
jb
and
mov
lret
clc
dec
inc
push
adc
call
adc
lock
popf
fisubs
aaa
andl
test
push
das
mov
cmp
pop
aam
rolb
and
pop
fst
mov
xchg
sbb
lea
xor
mov
das
xor
jns
loopne
pop
fcmovb
sbb
loop
cli
xchg
repz
inc
shll
mov
imul
mov
push
movsl
xor
fsubl
sub
xor
arpl
mov
rolb
mov
fnstenv
push
add
lds
lods
inc
mov
mov
jo
sub
mov
movsl
jg
pop
add
mov
push
sbb
jle
xchg
mov
bound
xchg
gs
bound
xchg
popa
add
adc
std
in
fs
push
sti
testl
mov
cwtl
mov
mov
mov
stos
sbb
stos
cmp
inc
add
sub
dec
xchg
outsl
divb
or
stos
fwait
cmpsl
lret
daa
in
mov
jge
repz
gs
add
mov
stos
repnz
xor
arpl
jne
ljmp
jns
es
jae
xchg
and
mov
mov
add
cltd
mov
xchg
add
outsb
mov
or
inc
mov
fwait
mov
in
pop
les
jbe
les
sti
int3
xor
addr16
jno
movl
mov
inc
adc
fs
jmp
aam
cmp
xchg
pop
sbbb
cmc
iret
mov
mov
movsl
or
jnp
push
push
jbe
xchg
xchg
pop
or
cmpsl
pop
push
jg
mov
mov
call
fucomi
lods
imulb
push
ret
imul
ss
les
jo
fisttpll
inc
lea
xchg
add
repnz
jge
gs
jle
push
dec
arpl
pop
gs
and
and
pop
aaa
sbb
insb
icebp
sbb
sub
inc
dec
nop
cwtl
sbb
push
push
push
sti
dec
int3
shll
sub
outsl
icebp
sbbb
ret
test
sub
fnsave
and
shll
ss
mov
mov
push
inc
mov
shl
leave
push
js
and
xchg
mov
movsl
mov
in
sahf
rolb
cld
imul
hlt
and
aad
add
idivl
cwtl
insb
loopne
mov
jne
or
and
ja
push
push
and
xor
inc
mov
test
les
in
lret
cld
in
mov
jl
repz
cmp
adc
pop
adc
dec
pop
nop
mov
mov
std
scas
ja
mov
or
shll
dec
imul
pop
stc
addr16
loop
shrl
push
mov
fdivr
inc
mov
add
lcall
ds
mov
push
sbb
or
ss
or
sub
mov
dec
cwtl
and
push
push
lds
sarb
mov
cmp
push
cbtw
pop
fisubs
fwait
jl
mov
inc
sbb
push
cmp
cltd
mov
pop
sub
in
repnz
fsubp
arpl
popf
or
arpl
inc
adc
stos
repnz
push
mov
pop
xor
xchg
xor
sti
lods
push
or
cmp
mov
mov
mov
push
cwtl
mov
xchg
adc
add
cmc
and
std
jo
pop
dec
mov
inc
xor
and
jns
push
dec
jg
pop
into
cmpsb
shlb
adc
push
in
push
xor
adc
xor
push
jae
and
jg
rcll
inc
sbb
cli
daa
int3
or
cmc
mov
mov
arpl
inc
cmc
sbb
and
jmp
pop
adc
movsl
pushf
xchg
jecxz
loope
adc
outsl
mov
add
das
mov
add
jecxz
push
cmp
test
sbb
jge
ljmp
icebp
loope
jle
in
dec
push
push
push
stos
test
divb
add
pusha
repnz
fstl
sbb
cmc
lods
mov
add
or
cmp
ret
int
leave
xchg
cmc
mov
stc
jecxz
push
bnd
aaa
jle
and
scas
adc
push
jo
pop
push
sarl
mov
mov
repz
jo
test
mov
pop
mov
adc
subl
cwtl
fmul
mov
test
stc
mov
add
sub
lret
or
mov
in
or
dec
dec
inc
jbe
fsubrl
pop
lock
daa
dec
lock
adc
inc
arpl
rcrl
cmp
shll
dec
xor
add
sbb
mov
jp
int3
mov
mov
sti
gs
stc
lret
loopne
push
icebp
aas
nop
sub
mov
dec
lock
xor
jmp
mov
lods
mov
in
int
sub
push
sbb
lods
scas
lcall
das
lret
in
je
add
xchg
add
mov
cltd
int3
negb
lret
adc
into
mov
sti
sbb
test
scas
inc
mov
dec
dec
adc
cmp
das
fwait
mov
xor
or
push
fdivl
in
adc
mov
mov
punpckldq
fnstcw
cld
add
push
and
cs
xlat
or
xchg
sbbl
push
popa
mov
lods
test
sub
cli
pop
mov
mov
inc
pop
cmpsl
add
shlb
mov
shl
adc
imul
push
testb
dec
test
mov
fsts
dec
mov
inc
int3
pop
mov
pushf
gs
and
fs
cmc
lds
jecxz
adc
lahf
int
push
ret
aaa
or
fstp
mov
lret
in
inc
lret
mov
imul
scas
xchg
popa
or
popa
mov
cmp
outsl
mov
pop
jecxz
cmp
outsl
jge
test
dec
mov
sbb
and
sahf
inc
in
pusha
popa
aaa
pop
sub
and
fs
out
mov
enter
and
and
shlb
cmp
push
jmp
inc
push
mov
xchg
xor
adcl
loopne
scas
sahf
cltd
inc
jecxz
push
cmpsl
or
push
leave
push
movsl
mov
jae
adc
and
idivb
cwtl
mov
js
ret
fstp
push
dec
insl
fcoms
fldcw
cmp
sahf
mov
lret
into
lea
sahf
sub
and
sti
pminsw
sub
sbb
pop
inc
outsb
repz
xor
and
inc
testb
cmp
adc
mov
int
scas
aad
push
dec
inc
cmpl
out
push
ficoml
pop
inc
mov
ja
popf
mov
mov
cmp
sbb
fdivrp
loopne
push
mov
shl
push
dec
xor
es
outsl
mov
rcrl
lahf
sub
ret
stos
mov
out
test
movsl
pop
sbb
inc
dec
sub
mov
mov
pop
add
hlt
sbb
and
int
xor
push
push
jo
andl
inc
push
lret
xchg
inc
jbe
out
cmpl
sub
gs
xor
dec
xchg
dec
xchg
cmp
push
push
adc
mov
aas
and
idivb
and
mov
in
pop
cmp
mov
outsb
mov
stos
out
ficompl
dec
xorb
push
dec
and
push
fadd
mov
xor
push
jmp
shlb
adc
bound
lea
out
sub
xchg
mov
addl
fistpl
test
adcb
in
xor
je
orb
mov
dec
adc
inc
dec
mov
add
mov
adc
push
adc
sbb
mov
outsl
testl
mov
add
jns
stos
pop
pop
call
pop
xor
test
popa
rolb
test
or
andl
push
sbb
adc
jno
pusha
adc
mov
lret
push
outsb
cmp
js
stos
xor
clc
cltd
call
dec
shrl
pop
pop
push
dec
data16
mov
sub
imul
scas
inc
xchg
inc
mov
lret
inc
add
mov
add
addr16
outsl
in
lds
fstpl
clc
mov
adc
hlt
out
cwtl
subb
cmp
jnp
or
mov
pop
sti
fs
jl
push
iret
mov
pop
pop
cmc
mov
and
clc
adc
cmp
add
add
test
ss
adc
pusha
fadds
dec
mov
ja
xchg
test
aas
adc
call
mov
inc
jle
sar
scas
cmp
mov
call
jne
and
lret
inc
mov
add
mov
out
cmp
pop
cmp
arpl
shll
scas
stc
sub
lds
cmp
mov
mov
into
mov
mov
push
sub
push
dec
and
dec
cmp
aam
loopne
push
cld
out
mov
shrb
addr16
daa
jmp
jle
nopl
aaa
enter
sbb
jecxz
xlat
les
je
cmp
js
sub
jnp
push
out
mov
std
test
push
jbe
addl
mov
cmp
lods
lock
jmp
adc
mov
roll
lret
add
sbbl
jl
inc
lret
and
lds
insb
daa
pop
xor
dec
adc
and
mov
nop
scas
sub
add
ds
pop
mov
sbb
or
xchg
add
or
lahf
cli
insl
into
jp
orb
mul
sbb
in
sti
in
jno
mov
and
cmovge
lods
shrb
pop
xor
sbb
scas
std
jns
inc
js
cltd
sbbl
ss
sarb
andl
jecxz
and
jle
mov
leave
or
movsl
mov
arpl
out
jecxz
pop
add
mov
pusha
movsb
mov
push
imul
adc
lds
cld
mov
mov
insl
mov
pop
cs
or
ror
ljmp
mov
inc
out
sbb
aad
cld
aam
imul
fimuls
add
shrb
push
out
shrb
lcall
jns
pop
xchg
mov
std
imul
arpl
in
icebp
or
je
repnz
nop
cmc
icebp
sub
cmc
xchg
aaa
dec
ret
scas
imul
imul
jb
data16
jge
into
inc
adc
test
add
push
in
lahf
sub
and
pop
lods
push
mov
add
addb
cltd
or
lcall
in
jl
dec
jecxz
inc
dec
je
push
pop
push
addb
test
push
adc
sub
lock
in
iret
push
dec
or
fadds
dec
mov
or
mov
insb
les
lods
or
inc
push
mov
shrl
ljmp
aaa
pop
xchg
jecxz
push
out
div
sub
in
adc
in
fucomip
and
xlat
jge
or
mov
mov
lds
jecxz
in
sbb
inc
fiadds
adc
jl
nop
push
sbb
cmc
jl
dec
sarl
xlat
xchg
pop
mov
fwait
mulb
add
mov
inc
adc
mov
dec
sub
cmc
idivl
out
xchg
sbb
jb
xor
push
mov
insb
cmpsl
xor
aam
leave
ja
and
mulb
xor
das
mov
and
mov
cmp
and
popa
int3
mov
cltd
enter
jae
pop
sbb
lahf
sar
adc
and
fstps
push
mov
movsl
mov
push
dec
gs
lock
std
ds
cmp
rclb
mov
fdivl
mov
cmc
add
test
dec
mov
scas
sub
mov
ret
cmp
out
fdiv
cltd
and
fidivrs
dec
mov
and
xor
iret
cwtl
insb
cmp
fisttpll
cmp
shlb
fbstp
jo
and
int
neg
jmp
pop
enter
add
pop
adc
stos
xor
pop
inc
add
sub
push
mov
in
stos
jmp
inc
xor
sub
call
test
lds
popa
int3
mov
in
das
adc
mov
in
push
movb
rcll
sahf
sti
sub
push
das
mov
xchg
scas
and
xor
test
cs
inc
sub
adc
xchg
jmp
lret
xor
out
stc
mov
arpl
xor
pusha
pop
mull
mov
inc
xchg
mov
jb
sub
pop
jp
dec
jecxz
insb
jno
inc
sub
pop
lret
imul
lds
dec
inc
ret
leave
mov
inc
dec
jns
lcall
mov
inc
add
push
loop
pop
mov
xchg
mov
mov
jno
xor
xchg
imul
jns
cwtl
pop
and
movsb
push
jns
add
out
daa
push
cmc
ret
insb
or
inc
les
rolb
mov
mov
std
cmp
daa
ds
adc
mov
sub
xor
cwtl
cmp
arpl
sahf
lods
push
cs
mov
add
outsl
dec
stos
sarb
sbb
xchg
xchg
test
sbb
cmp
adc
mov
add
adc
inc
test
jo
inc
subl
mov
rcrb
test
sub
xor
bound
test
test
inc
lret
pop
or
cmc
xor
adc
push
sub
subl
cwtl
icebp
mov
mov
mov
nop
out
mov
jp
jle
adc
je
jecxz
jp
ret
int3
stos
test
loopne
and
pop
mov
inc
ds
loop
push
in
in
dec
inc
ja
adc
ljmp
jnp
cmp
mov
loop
inc
das
xchg
aam
fs
push
fs
sub
mov
out
sti
mov
xchg
or
lods
das
ja
adc
int
ja
inc
dec
rcll
mov
cwtl
sbb
inc
sbb
and
mov
mov
stc
lret
sub
js
pop
das
adc
stos
push
mov
push
push
and
xchg
lea
push
push
inc
inc
stc
cltd
into
iret
add
jl
test
imul
es
incl
cwtl
jecxz
cmpsb
lock
mov
sbb
pop
dec
arpl
push
add
data16
add
loopne
cltd
subb
lea
pop
js
mov
xchg
ret
or
mov
lahf
cmpsl
xlat
jl
ss
stc
inc
aaa
adcb
push
add
jg
pop
cmpsl
or
mov
call
or
xor
fisubrs
mov
out
sbb
outsl
pop
xor
gs
out
mov
and
sub
adc
out
or
fwait
stos
enter
testl
hlt
sahf
pop
dec
mov
sar
stos
cmp
ljmp
sub
push
dec
sbb
and
push
mov
sbb
cltd
subl
push
jg
ss
fwait
mov
inc
test
pop
mov
int
fsubrl
cltd
lcall
call
add
jle
xchg
cwtl
add
pop
test
out
jne
xchg
out
cs
xor
xor
pop
daa
pop
loopne
mov
arpl
fildl
inc
and
xchg
imul
sbb
loop
jae
cmp
stc
mov
fiadds
adc
stos
mov
call
adc
leave
incb
xchg
test
sub
cld
mov
pop
xor
les
push
out
ds
roll
pushf
mov
adc
popa
in
nop
or
in
fistps
and
int3
xchg
enter
lea
cwtl
cmpsl
fistpl
pop
pusha
dec
add
mov
inc
jb
pop
dec
pop
mov
repnz
push
inc
inc
and
dec
add
pop
mov
ds
lret
aas
xor
mov
add
xchg
xchg
sbb
mov
dec
pop
or
idiv
sarl
cmp
fldl2e
sub
adc
pushf
popa
and
mulb
pop
adcl
sbb
lahf
jg
mov
or
inc
rclb
pop
aam
dec
sbb
out
xchg
mov
pop
mov
aam
aas
shll
icebp
test
lahf
fiadds
js
mov
stos
out
lret
cmp
mov
push
lahf
push
dec
mov
or
into
inc
inc
fimull
xchg
imul
or
lret
push
lahf
ljmp
dec
xchg
and
cmp
repnz
pop
mov
xor
xchg
outsl
add
or
shl
sbb
mov
repz
mov
into
dec
daa
testl
jbe
outsb
lret
xchg
nopl
cli
outsl
lock
mov
fnstcw
mov
push
arpl
inc
xor
scas
test
dec
imul
and
aaa
sbb
and
lods
mov
cmp
xchg
sub
incb
jnp
inc
mov
test
lock
out
push
test
xchg
mov
jp
movsl
out
data16
clc
andl
dec
mov
fcmovu
mov
adc
inc
jmp
leave
sub
and
push
mov
adc
mov
sbb
ljmp
fcomi
sub
mov
or
jb
aaa
cmpsl
jno
test
out
or
cmc
push
pop
pop
sbb
gs
out
dec
xlat
lret
push
fistl
test
lahf
xor
push
dec
cmp
push
push
stos
inc
out
testl
cs
unpckhps
mov
pop
jae
dec
jno
mov
lods
push
or
gs
sbb
aaa
inc
js
aas
push
loopne
cs
lods
or
mov
jb
pusha
cmp
nop
adc
lods
push
inc
sub
leave
xor
xor
outsb
jge
cmp
loope
stos
jp
daa
jne
and
cmp
fcomps
rcrb
movsb
lea
pushl
rcrl
mov
mov
cmp
es
jl
mov
jecxz
adc
call
popf
jno
into
inc
dec
repnz
xchg
and
and
cmp
mov
sub
sahf
sub
mov
mov
cmp
cmp
cmpsb
shrb
test
jle
dec
xchg
aaa
pop
notl
in
ret
into
push
into
bound
loopne
xchg
ficompl
add
sub
fiadds
stos
subl
inc
cmp
xor
xchg
ja
mov
stos
pusha
pop
xlat
bound
lea
sbb
ret
push
mov
add
aad
fsubrl
inc
cmp
push
mov
add
jg
mov
add
fwait
or
adc
inc
fmul
inc
push
sub
inc
add
fistpll
hlt
lea
dec
mov
dec
jge
push
mov
fidivs
push
hlt
or
push
xchg
aam
push
stc
test
cmp
imul
and
jecxz
cmpsb
stc
in
mov
jb
orb
dec
sub
xchg
rcrb
xchg
aam
jb
sbb
xchg
daa
mov
sti
adc
adc
aam
ljmp
daa
jg
ror
clc
fbstp
bound
sub
int3
add
shl
push
mov
sahf
lret
fisubrs
data16
ret
xchg
data16
ret
mov
scas
xchg
cmp
lret
jbe
add
adc
in
idiv
int
gs
scas
mov
ret
out
xchg
jo
addr16
mov
fildll
adc
jg
inc
ja
pop
popa
and
in
and
mov
adc
ljmp
lods
mov
ret
mov
pushf
and
loopne
pushf
sbb
mov
fs
xor
popf
mov
jle
or
rolb
stc
push
and
and
xchg
push
adc
arpl
push
sbbb
xchg
sub
mov
inc
jae
mov
sbb
gs
xor
stc
dec
icebp
push
test
lcall
mov
clc
jmp
fs
stos
enter
xchg
cmpsb
mul
mov
cmc
sbb
les
lea
movsl
aaa
and
adc
movl
pop
hlt
xor
fs
cmpsl
test
je
popf
fdivr
loope
leave
lods
inc
addr16
add
loop
loop
lret
mov
loop
pop
cltd
or
jo
xor
mov
sahf
int3
jecxz
or
jnp
add
inc
mov
icebp
inc
fdivl
cld
mov
adc
call
and
sub
shrb
cs
inc
mov
out
dec
sub
pop
rcrl
pop
push
mov
mov
dec
sub
nop
sbb
cmp
outsb
push
testl
xor
adc
mov
fadd
stos
sti
popf
cwtl
aas
inc
sti
jb
xlat
cmp
mov
popf
push
xlat
movsb
lahf
sbb
xchg
repnz
stos
mov
mov
test
push
add
pop
push
add
movsl
pop
andl
xor
sahf
movl
add
jne
inc
shrb
or
mov
int
and
and
sbb
adc
cmc
push
mov
sub
pushf
cmpsb
daa
sbb
orl
mov
sbb
aam
jbe
test
clc
leave
sub
sahf
add
xchg
or
mov
cmpsl
fistl
mov
in
push
jae
je
add
dec
pop
jp
mov
negb
fcoml
test
test
repz
xor
sub
les
adc
mov
lahf
and
icebp
pop
shll
mov
adc
mov
push
mov
rclb
loope
add
jle
fs
mov
or
int
jb
mov
inc
lea
call
add
mov
or
jo
mov
push
mov
out
pop
pushf
mov
fbld
scas
jno
jno
and
push
das
lock
and
inc
dec
daa
cltd
sbb
fmull
data16
xor
push
cmp
or
scas
pusha
subb
jp
jp
mov
xlat
out
sbb
ljmp
fwait
sub
xor
jmp
insb
push
fisttpll
es
xlat
mov
pusha
mov
lods
mov
and
pop
subl
push
loopw
xor
or
pushl
loop
lods
push
jne
sbb
xchg
xor
inc
repz
adc
daa
stos
and
outsb
outsl
xchg
dec
adc
popa
out
pop
adc
xchg
push
bound
lret
and
jle
pop
xchg
xchg
imul
and
leave
xchg
xchg
inc
mov
add
sti
cld
loopne
jl
xchg
sub
cltd
pop
insl
push
out
sbb
xchg
mov
cld
mov
cli
mov
cmp
in
shrb
xor
out
fsub
cmpsl
cltd
jmp
pop
ljmp
mov
inc
int
or
xchg
nop
push
outsb
dec
mov
jb
js
or
or
push
lret
or
adc
cmp
xchg
cmpsl
or
loopne
or
sbb
lds
sahf
pop
dec
arpl
ds
sbb
rcr
jp
pop
pop
insb
pop
rcrb
cmp
add
jp
fbld
mov
xor
fisubrl
test
iret
and
mov
rcr
loop
test
out
pop
iret
aad
mov
mov
and
movsl
sbb
data16
push
push
insl
fdivs
dec
cmc
jecxz
sub
lea
shll
lea
push
mov
les
push
inc
dec
jg
sbb
popf
lock
out
jno
xchg
repz
out
outsb
jge
push
stos
jle
mov
push
addr16
xor
mov
xor
sub
repnz
adcb
ss
cmc
pop
imul
aam
gs
adc
scas
mov
inc
xchg
push
and
fs
xlat
inc
inc
inc
dec
fisttps
loope
xor
mov
mov
cmp
push
gs
cmp
inc
and
inc
mov
push
shlb
addr16
xchg
in
rorb
shll
sbb
mov
or
sbb
and
imul
mov
mov
xor
lcall
push
es
sub
rorl
fdivrs
sub
mov
xor
inc
mov
or
sbb
dec
cmpsl
and
adc
cmp
out
push
bound
push
fidivl
mov
cmpsl
call
xchg
mov
pop
mov
cmp
bound
or
inc
lds
mov
mov
mov
sahf
rep
fistpl
sub
push
jo
mov
in
push
popa
ret
mov
push
inc
je
mov
jne
dec
in
icebp
xor
std
pop
dec
cli
pop
movsb
push
push
call
mov
aam
dec
das
frstor
pop
imul
pop
adc
aam
add
fisubs
mov
out
xor
popa
imul
test
sbb
jg
arpl
shr
ret
pop
mov
shr
cs
mov
mov
jg
mov
out
sbb
pusha
dec
or
cltd
push
mov
mov
adcl
pusha
cmp
sbb
mov
jl
mov
add
xchg
pop
adc
fnstsw
sbb
popf
adc
cmc
xchg
std
jo
add
cmp
cwtl
fisttpl
push
dec
test
popa
or
rolb
ja
fwait
sbbb
movsl
stos
jae
sahf
fcomp
in
push
les
cmp
inc
jl
loopne
inc
in
push
jbe
or
and
imul
and
cltd
sub
jge
jo,pn
jbe
inc
aas
sub
lcall
dec
mov
in
sbb
mov
sarl
cmpsl
dec
imul
cmc
imul
pop
xchg
mov
mov
mov
or
test
stos
popa
and
xor
imul
push
mov
rcrl
pop
push
mov
outsl
out
mov
mov
outsl
mov
sub
fdivp
stos
daa
push
sub
in
jp
cltd
cmpsl
jns
push
pop
mov
push
shlb
push
ret
int
or
jb
xchg
xchg
jb
and
or
push
inc
shrl
fimuls
shl
adc
dec
xor
iret
das
shlb
push
bound
mov
mul
call
fisttpl
lcall
cltd
and
addr16
fisubl
nop
inc
mov
pop
xchg
jnp
pop
aas
into
pop
insl
push
xor
jne
and
outsb
cld
mov
jae
test
or
loope
les
pop
mov
lock
and
xchg
xchg
sar
fcomps
popf
stos
clc
jge
sbb
clc
cmp
dec
dec
mov
adc
xor
ret
mov
mov
push
ret
jge
rcll
das
push
mov
xor
cmp
popa
add
push
xor
wrmsr
aad
sbb
pop
ret
iret
fwait
jns
adc
in
imull
popf
insl
pusha
in
mov
and
sbb
cmp
arpl
xor
fisttpll
jo
xorb
adc
movsb
dec
adc
or
cltd
mov
jecxz
aam
mov
sahf
les
das
movb
and
bound
popa
pop
gs
mov
push
cmp
mov
in
lock
mov
cmpsb
loopne
jecxz
test
je
mov
popf
int
cmp
mov
inc
sbb
mov
mov
inc
xor
sbb
sbb
jle
fwait
daa
mov
mov
mov
xchg
mov
mov
dec
xor
repz
mov
push
mov
lahf
mov
mov
mov
stc
dec
ss
mov
pop
sti
mov
xchg
pop
jecxz
enter
jecxz
in
xor
mov
in
xchg
cmpl
or
lds
pop
insb
cmp
inc
or
push
ds
jge
xchg
push
loopne
das
das
pop
xchg
lods
xorb
fsubrs
or
mov
cmp
out
fistpl
sub
and
insl
cmp
out
outsb
repnz
cmp
push
jno
int
or
and
ret
cmp
mov
jmp
ret
xchg
add
xlat
sub
jle
push
mov
repnz
clc
cmp
pop
out
cmp
pop
ret
cmpb
ja
cmp
xor
cmp
int
call
jne
push
push
adc
inc
add
fbstp
push
cs
jb
incb
push
pop
or
xchg
and
sbb
pop
mov
push
xchg
shll
repz
ljmp
das
adc
pop
fs
rorl
repz
test
aaa
pop
cmp
js
rclb
add
mov
mov
sbb
push
xchg
test
dec
aad
pusha
cmp
fistl
mov
add
jp
mov
inc
mov
push
xor
cmc
lods
dec
stos
inc
cmp
jecxz
nop
adc
hlt
xchg
scas
cmp
dec
out
mov
push
pop
cmp
lock
loop
test
fidivrl
push
jle
sub
xchg
pop
jne
xchg
add
mov
pop
mov
push
xor
sbb
lret
in
std
jp
pop
add
jne
push
lcall
inc
cmp
and
mov
repnz
pop
rcrl
jne
mov
or
cli
mov
fcoml
rcrl
cmpsl
stc
pushf
std
hlt
mov
cmp
sbb
std
mov
mov
sub
and
jl
in
ss
or
add
rcll
lret
repnz
popf
adc
xorb
fstpt
xor
ja
test
ljmp
ss
mov
aad
xchg
pop
xchg
jno
jne
push
add
std
jae
or
inc
outsl
cmp
ljmp
sub
xchg
test
repz
test
pop
fsubr
clc
mov
lods
mov
xchg
and
inc
cli
mov
xchg
scas
movsl
add
xor
incl
dec
in
in
test
xor
int
sahf
repnz
fisttpl
adc
out
loopne
xor
cmp
lods
or
add
cmpsl
mov
test
insb
ss
mov
push
pop
jnp
mov
add
test
aaa
je
out
and
notl
mov
pop
call
arpl
push
stos
fdivs
insb
mov
jne
jmp
push
fs
loope
dec
aam
clc
fldl
gs
xchg
sub
push
je
imul
and
push
mov
movsl
add
into
imul
or
add
xchg
jns
jge
popa
mov
jmp
mov
mov
sbb
cs
in
mov
lods
clc
fnstsw
test
insb
fiadds
outsb
push
dec
mov
loopne
fidivrl
push
cmpsl
arpl
cltd
into
mov
or
mov
mov
sub
clc
shll
inc
movsb
pusha
mov
xchg
call
pop
xchg
stos
out
cwtl
jae
sub
sub
or
pop
dec
popa
xlat
adcb
fcmovne
mov
mov
jae
xchg
sub
sbb
and
xchg
pop
das
iret
jnp
out
loopne
jecxz
push
and
insl
or
sarb
xchg
mov
cmp
jge
gs
jo
xchg
dec
scas
and
sub
xor
mov
push
aam
out
push
xlat
es
sbb
cmpsb
out
jo
movsb
and
popa
dec
xchg
push
xor
int3
stos
cmp
inc
mov
int3
add
popf
mov
or
jns
ret
inc
negb
cmpsb
add
mov
fdivrl
sbb
xchg
cmp
or
das
jb,pt
ja
test
jns
enter
xor
xor
imul
pushf
data16
mov
jmp
orl
aad
nop
inc
mov
rclb
negb
mov
pop
fdivp
fisubl
repz
or
cmp
in
and
cmp
inc
into
add
ja
mov
or
mov
sub
lea
cwtl
add
jo
add
add
sub
cld
ret
mov
xchg
nop
sbb
jnp
lea
sub
out
jmp
jmp
imulb
test
push
xchg
nop
pop
xor
adc
push
and
xorl
or
icebp
nop
je
mov
add
push
jnp
movsl
sarl
xlat
aas
sub
adc
cs
dec
test
push
sub
or
xchg
jmp
mov
insb
push
xchg
mov
pop
loope
fisubs
insl
ror
push
xor
xor
mov
les
add
push
push
mov
es
add
je
adc
mov
out
mov
or
add
push
test
xchg
push
insl
and
addl
jp
jmp
lcall
cmp
jo
or
mov
ret
in
push
mov
fwait
jp
sub
mulb
les
nop
sahf
jnp
in
push
mov
jbe
aad
mov
mov
and
jbe
xchg
stc
dec
cwtl
sub
inc
mov
pop
sahf
xor
faddl
and
mov
and
adc
out
push
mov
dec
je
pop
scas
shlb
stos
inc
call
movsb
cmp
outsb
mov
jl
jp
shlb
idiv
or
es
xchg
or
lret
or
shlb
sahf
icebp
pop
adc
dec
outsl
ss
adc
push
add
in
popa
sbb
sti
cwtl
mov
popl
push
in
adc
jbe
sub
loop
adc
mov
xchg
nop
jmp
jecxz
add
push
jns
mov
jns
outsl
loope
adc
ds
lret
pop
jmp
jns
ret
xchg
out
push
push
mov
jnp
aad
jnp
movsb
xor
pushf
fdiv
das
pop
push
mov
js,pn
gs
fwait
imul
fdiv
pop
hlt
or
lds
int
subb
aad
adc
xchg
xchg
ret
dec
pushf
out
add
lock
pop
push
push
dec
idivl
jecxz
inc
hlt
pop
mov
adc
sub
sub
sbb
adc
jnp
gs
cwtl
push
lods
and
push
ds
mov
adc
clc
sbb
ret
dec
push
xor
dec
jecxz
insb
out
cld
in
test
dec
std
fsincos
adc
jge
popf
cltd
lea
and
xchg
mov
inc
das
int
neg
adc
ficompl
jbe,pn
xor
jns
pop
pop
cltd
mov
lds
sarb
or
pop
xchg
enter
xor
jg
lock
daa
push
mov
xlat
cmpsb
adc
xchg
pop
dec
dec
mov
les
aad
lds
test
das
lods
inc
loope
pop
adc
stos
jo
sub
das
aad
cmpsb
xchg
out
in
sub
pop
mov
xlat
call
xchg
or
es
pop
cmp
shrl
cmpb
test
ljmp
mov
aaa
or
and
jp
cmp
cmpsb
outsl
pusha
jne
sub
leave
lock
push
sbbl
in
xor
jae
shrb
xchg
ror
adc
cmovl
test
aam
adcl
cld
mov
jne
mov
js
fidivl
pusha
stos
add
je
test
push
sbb
pcmpeqd
xchg
cmp
test
mov
imul
adc
push
jbe
mulb
or
mov
sahf
jle
clc
aas
js
cmp
xor
xchg
rcl
into
push
nop
out
xlat
ds
dec
leave
popf
test
inc
push
mov
rol
pop
and
jnp
pop
jnp
push
ljmp
jecxz
mulb
mov
add
js
popa
xorb
out
mov
mov
hlt
xchg
imul
jns
lods
data16
jae
cmp
idiv
std
jnp
les
xchg
pop
out
fistps
jl
mov
jl
bound
out
or
sub
call
xchg
jo
add
negl
cmp
mov
movsl
imul
pusha
mov
sub
sub
jb
adc
shl
mov
sti
cli
shll
adc
gs
mov
add
in
movsl
fistl
push
pop
pop
xor
or
imul
fs
insl
xchg
stc
fnstcw
inc
inc
shrl
cmp
push
sub
cmp
sub
dec
shlb
push
dec
testl
mov
jecxz
mov
pop
inc
lret
mov
in
inc
ds
cld
mov
inc
fstps
push
and
cltd
adc
repnz
add
push
dec
loop
cmc
int
push
add
sbb
xor
push
test
or
aaa
stc
cmp
pushf
repnz
stc
pop
sbb
mov
sub
in
inc
xchg
aaa
int3
inc
xchg
fimuls
sbb
lret
fstps
dec
mov
and
cli
psubb
dec
sbb
lahf
ja
xchg
inc
ret
fistpll
inc
stos
dec
jb
bound
popf
movsb
ret
cli
out
ljmp
or
mov
jg
xchg
aam
jno
jg
dec
and
cli
push
sbb
mov
iret
outsb
cmpsb
add
stc
and
ds
xchg
sti
inc
std
mov
jle
pop
test
int3
pop
or
aad
push
mov
hlt
mov
add
inc
mov
sbbb
in
in
gs
repnz
test
fs
dec
xchg
out
movb
xor
or
jno
popa
pop
xlat
adc
std
xor
mov
jg
xchg
mov
mov
push
sahf
mov
scas
mov
jae
leave
pop
mov
in
ret
aas
pop
inc
or
and
loop
sub
add
xchg
pushf
or
cmpsl
xor
popf
test
in
push
test
mov
out
popa
ja
dec
pushf
and
pop
scas
andl
aam
ljmp
test
ret
adc
sub
mov
cmpsb
mov
ljmp
sbb
mov
ja
mov
dec
adc
ss
rol
pop
mov
jg
lock
mov
inc
popa
in
add
cmp
rorb
pop
hlt
repz
push
lea
mov
pop
cwtl
pop
push
lods
ret
sbb
push
iret
push
psllq
sarl
jbe
shrb
sbb
data16
jno
aam
test
lods
stos
out
push
lcall
cs
daa
add
jmp
sub
je
out
hlt
rol
js
inc
adc
test
pop
sub
jp
insl
shr
stc
js
frstor
fsubrs
add
popf
std
lock
ljmp
movsl
ljmp
stos
jbe
dec
sub
push
adc
or
shll
or
in
outsl
add
cli
in
aad
add
rcrb
movsb
nop
in
mov
add
scas
jno
in
add
rcr
or
ljmp
jg
movsb
in
sarb
scas
jb
cmpsl
jl
jl
pushf
jae
sub
xor
in
out
ja
inc
lds
cmpsb
sti
roll
adc
fdivrs
fs
jmp
lcall
dec
sub
dec
push
xor
xchg
sarl
out
lods
pop
mov
xchg
sub
or
stos
and
pop
mov
test
mov
repz
jbe
in
push
aas
fcomip
in
bound
shlb
jge
jecxz
push
xlat
or
mov
inc
xor
adc
jns
out
inc
fidivs
adc
insb
fidivrl
push
repz
ret
mov
and
test
cmp
lahf
addr16
mov
icebp
hlt
jb
mov
push
test
adc
jnp
fstl
jp
mov
adcb
outsb
pop
or
xlat
add
fsts
mov
daa
mov
or
cli
push
repnz
push
incl
mov
std
hlt
cmpsl
pop
push
push
aad
jge
dec
cmpsl
pop
fiaddl
xchg
pushf
cmc
arpl
mov
notb
pushf
cltd
add
push
cmp
xlat
push
enter
testl
xchg
call
into
in
in
mov
and
int
lods
mov
loope
jg
test
inc
imull
add
cmp
mov
cld
jmp
cli
jmp
jl
and
mov
push
cld
lret
jg
adc
and
jmp
jnp
out
out
int
mov
push
mov
dec
imul
add
cs
mov
mov
sbb
dec
dec
pop
pop
sub
sub
and
mov
and
sbb
mov
inc
push
test
int3
sbb
push
loope
stos
inc
add
cmp
aas
ret
mov
and
inc
mov
shll
lcall
pop
popf
rcrb
movb
imul
and
cmpsb
in
cmp
pusha
cmp
mov
xchg
pop
arpl
cmp
nop
test
sub
pop
sar
xor
repz
jl
pop
pop
vpsubd
push
pop
adc
xchg
add
mov
cmp
cmpsb
fsubp
cmp
lea
or
jnp
and
or
imul
cwtl
movsl
lods
cmp
xor
or
loope
in
xchg
cmpsb
cwtl
push
icebp
jbe
jle
addb
adc
test
roll
out
cmc
test
fstps
daa
inc
push
lods
in
mov
cmp
mov
testl
addr16
pmaxsw
cmpsl
ret
xor
ret
jmp
jno
jge
pop
int3
and
push
test
movsb
cmp
jg
lahf
mov
jg
xor
add
xchg
aad
or
jp
bound
cwtl
add
stos
ss
xchg
cmpsb
dec
ja
les
scas
push
into
ljmp
or
and
adc
dec
adc
cltd
ror
out
or
daa
hlt
in
jge
push
leave
jno
ds
sbb
xor
mov
arpl
je
mov
jo
jp
push
out
jne
xchg
loopne
xor
mov
mov
xchg
xchg
mov
lock
adc
lock
ret
xchg
mov
lods
sbb
or
adc
fxch
fs
mov
stos
adc
mov
es
and
sub
movsl
daa
dec
push
mov
xchg
pop
push
lahf
jo
cs
jg
fildll
mov
xor
cmp
popf
or
icebp
fistpll
mov
hlt
inc
leave
pop
shll
dec
das
jb
cmp
in
pop
cmc
push
loopne
faddp
pop
shll
cmp
push
lret
cmp
xchg
cs
popfw
out
orl
loope
mov
mov
mov
sub
test
sbb
rcrl
rolb
lods
ja
in
stos
push
das
unpckhps
push
adc
das
add
es
jo
data16
stc
xor
xchg
mov
je
loopne
mov
outsb
xor
aas
ficomps
mov
scas
sahf
frstor
mul
pop
mov
fisttpll
in
xchg
fidivrl
inc
popfw
xchg
dec
add
sbb
xchg
cmp
ss
mov
add
lods
rolb
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
je
call
sahf
jne
ss
pusha
pop
push
loope
iret
and
leave
fdivr
cmp
cmp
cmpsl
mov
and
data16
push
and
shl
push
in
mov
pop
insb
sub
jne
or
xchg
push
and
adc
cmp
bound
jae
test
mov
inc
xchg
rolb
bound
cmpsl
push
jecxz
cld
xor
das
mov
lock
push
sub
cmp
mov
stc
das
push
mov
mov
aaa
lret
dec
cmpsl
mov
push
fnstcw
clc
fcmovne
mov
mov
pushf
lcall
pop
add
fcoml
and
imul
pop
inc
inc
rcr
pop
daa
jg
pop
sbb
fs
cmp
push
lahf
bound
mov
mov
dec
xchg
hlt
push
lods
fisubl
mov
mov
nop
pop
cmc
subb
rcrb
or
ljmpw
xor
fbstp
push
jl
adc
pop
mov
pop
sbb
pop
dec
mov
vpsllw
push
movsl
adc
xor
or
call
scas
inc
clc
xor
dec
aas
stos
sahf
iret
stos
lds
add
mov
cmp
cmp
dec
fnsave
arpl
jecxz
lahf
adc
dec
jecxz
scas
mov
sub
testl
inc
mov
push
enter
xor
sub
jg
lret
enter
mov
stc
cmp
test
incb
mov
sahf
call
jle
das
cmc
test
test
dec
xchg
in
adc
movsl
das
mov
cmp
mov
loope
sub
outsb
out
negb
outsl
lea
fwait
pop
jno
mov
dec
pop
inc
jo
testl
mov
jne
lea
dec
out
or
cmp
mov
pop
pop
lret
and
cmp
push
stos
or
mov
mov
es
and
add
jl
mov
adc
xchg
jb
pop
mov
int3
mov
sub
out
add
ret
pop
test
push
xchg
std
pop
fyl2x
dec
add
push
xlat
push
adc
push
or
jmp
xor
mov
shlb
fwait
xchg
out
lret
xchg
xchg
lea
ret
xchg
icebp
push
arpl
sub
fidivrs
sbb
mov
and
pop
cwtl
xor
and
test
mov
shll
pop
xlat
cmpsl
imul
std
lcall
fnstenv
xor
cmp
dec
inc
mov
shrb
xor
or
loop
push
jnp
imulb
mov
adc
pop
out
cltd
push
lock
adc
sbb
ret
jp
addr16
cmp
shll
scas
mov
imul
jle
pop
call
inc
je
aam
loopne
inc
xchg
test
imul
adc
dec
and
int3
les
mov
sbb
andl
fnstenv
jb
fstpt
mov
mov
jle
sarl
adc
jne
fsubs
ficomps
lods
mov
iret
xchg
loopne
inc
aas
sti
in
hlt
divb
out
lcall
lahf
xor
fisubrl
in
movsb
lret
stos
inc
popa
dec
push
fcomps
dec
jge
stos
int
jmp
icebp
cmp
mov
sub
iret
push
out
fldl
jmp
push
sbb
adc
jmp
mov
int3
mov
jmp
into
shl
outsw
out
cmp
sub
push
inc
jae
xor
fsub
add
stos
jbe
lret
xor
in
lods
pop
test
add
adcl
cmp
jno
add
aaa
ret
cmpsl
push
mov
sub
movsb
push
inc
xor
push
movlps
cld
test
lret
mov
scas
ds
pop
lods
cs
pop
cmc
mov
push
cmp
sub
scas
sbb
and
in
sarb
out
jp
stos
jmp
cmpsl
ss
xchg
push
xor
incb
notl
xor
cmp
cs
cltd
lcall
xor
je
add
out
out
inc
pushf
test
iret
outsb
lret
cmpsl
fisubrs
jo
scas
fildll
mov
dec
push
sbb
sbb
jne
scas
dec
sti
mov
or
ljmp
out
jo
js
xor
sbb
inc
insb
outsl
jp
jecxz
call
mov
in
and
lret
pusha
shrl
in
jns
adc
movsl
lret
mov
ss
es
xchg
or
ljmp
and
dec
push
aad
repz
aad
cs
inc
dec
das
cmp
in
pusha
mov
push
push
pop
sub
mov
add
scas
out
fisttpl
cmpl
add
repnz
mov
stc
and
mov
not
jns
sbb
daa
sbb
pop
mov
cmp
aaa
jmp
sub
adc
scas
aas
and
lds
jge
push
push
std
cmp
popf
test
mov
mov
int3
ds
adc
xchg
fimull
arpl
test
push
das
push
jecxz
rcll
aaa
imul
cmp
sub
insb
mov
cmc
scas
out
or
jno
mov
xchg
fadds
sti
jge
ret
xchg
jo
mov
or
adc
pop
xchg
push
test
adc
inc
mov
jb
adc
inc
shrd
cli
ja
cli
je
lret
lea
outsb
xchg
outsb
aas
test
cli
xchg
lret
cmc
sub
jl
enter
scas
arpl
mov
sbb
sub
dec
imulb
enter
loope
lock
jmp
ret
dec
insb
frstor
push
out
clc
dec
inc
pop
and
push
xchg
aad
mov
pop
mov
push
lods
pop
mov
or
push
sahf
cmp
xchg
add
fsubl
and
mov
push
or
call
pop
mov
sub
or
int
outsl
ss
popa
cs
adc
sub
loope
mov
test
mov
or
or
divb
es
data16
fdivrl
push
out
clc
dec
jg
sti
mov
data16
clc
cltd
sahf
xchg
add
dec
int3
sub
iret
lock
ja
shrb
sbb
pop
xor
mov
xchg
lods
xchg
psrlw
imul
fsub
lock
fisubrs
pop
loopne
test
stos
cmovnp
lret
fldt
sbb
out
push
fmull
push
arpl
fidivl
cli
lds
jp
cmpsl
mov
shr
or
lret
stc
leave
sahf
sub
xor
aad
jb
insl
jl
and
sub
add
cmpsl
lcall
inc
and
fnstenv
jb
pop
movsb
stos
sbb
and
mov
mov
add
test
shll
pop
loop
popa
imul
cmp
fnstsw
ljmp
adc
fwait
hlt
sbb
out
mov
negl
pop
cmp
outsb
hlt
inc
sub
mov
sbb
test
pop
pop
xchg
mov
rorl
or
xor
stc
testb
sbb
shrb
xlat
cmp
pop
mov
stos
lods
lods
add
lret
js
ret
lock
out
std
out
inc
push
cmp
outsl
jle
fists
push
jl
jecxz
shl
jle
or
cmp
and
pop
popa
xlat
jbe
pop
out
aam
mov
jo
cmp
inc
test
scas
out
das
dec
pop
cwtl
iret
ja
hlt
xchg
in
je
icebp
inc
popa
mov
inc
inc
lea
insl
repnz
popf
cmp
sbb
sarl
inc
dec
adc
cmpsb
fsts
aaa
jno
cmp
enter
aas
mov
stos
cmpl
hlt
inc
sysenter
xor
jbe
fldz
in
out
and
out
cmp
mov
das
movsb
std
push
je
nop
lds
rclb
cltd
xor
setnp
or
cmc
popl
es
mov
xor
pop
aaa
int
adc
fs
cmp
pusha
addr16
xchg
push
sti
mull
insb
cltd
ret
icebp
adc
ds
inc
and
adc
mov
ds
xor
push
cmpsb
popa
loopne
std
ljmp
ret
in
out
mov
stc
xor
xlat
loope
xlat
dec
add
out
xor
and
cmp
pop
fstl
pop
movsl
insl
and
add
outsl
mov
addr16
test
movsl
bound
xlat
xor
movb
cmp
ss
mov
out
jns
arpl
int
insb
push
aad
adc
mov
xor
ds
popa
xor
lods
inc
sti
adc
or
xlat
clc
aad
jno
repnz
mov
jmp
xchg
idivl
sbb
outsl
and
sbb
faddl
sbbl
mov
les
mov
out
sti
push
jo
cmp
add
ret
mov
mov
inc
out
rcll
pop
push
and
push
insl
aas
daa
icebp
js
loop
mov
test
pop
or
arpl
outsb
sub
sub
sahf
ljmp
inc
jnp
and
je
shl
adc
lock
enter
mov
loop
repnz
js
and
push
push
nop
push
dec
ret
iret
repz
mov
cmp
mov
push
cmp
fldcw
mulb
jp
mov
mov
push
push
push
dec
push
inc
sahf
xlat
xor
iret
into
mov
xchg
push
lock
sbb
out
sbb
subb
jae
ret
mov
xchg
adc
mov
stc
mov
addr16
fsubrl
cwtl
adc
fcomi
or
jp
imul
repz
add
data16
shlb
jmp
cwtl
dec
xchg
mov
scas
test
test
push
fstps
fisttpl
popa
clc
pop
dec
or
lret
push
test
pop
push
enter
sbb
and
xor
out
lret
cmpsl
and
js
movsl
shrb
pop
gs
mov
xchg
ss
push
inc
mov
or
ss
movsb
test
out
add
mov
js
xor
jecxz
out
popf
stos
or
sbb
rcll
out
cs
repnz
out
arpl
push
xchg
lds
mov
xchg
lahf
pusha
fcomi
hlt
xor
and
inc
movsb
aad
push
cltd
sbb
xchg
lcall
cmp
pop
cli
insl
fst
jo
pop
push
lret
mov
fisubrs
popa
dec
mov
out
lea
xor
out
mov
or
daa
push
cmc
sarl
mov
clc
leave
sub
leave
sub
fdivl
loop
fnstcw
add
loope
add
out
inc
push
fsts
push
fisubs
mov
mov
sub
add
dec
sub
aam
inc
ret
cmp
jne
or
pusha
sub
dec
icebp
dec
push
xor
and
push
cmp
mov
add
les
ss
push
call
cmp
imul
xor
push
popf
fidivs
mov
or
xor
movsl
push
add
or
mov
cs
test
hlt
pop
inc
cmp
test
add
je
push
faddl
jge
repz
pop
testl
sub
jns
fstps
data16
int3
xchg
fadd
imul
add
call
mov
pop
jg
mov
dec
cli
push
popf
enter
repz
pop
mov
inc
pushf
popa
loope
loopne
paddq
or
test
inc
adc
shrb
cmp
les
out
pop
dec
push
mov
sub
lods
jae
push
jle
push
je
insb
ds
sbb
std
mov
sub
sub
ja
sub
push
icebp
loop
out
add
adc
mov
out
popf
out
ret
xchg
and
out
shll
lods
cmc
imul
push
stc
test
cmp
mov
sbb
pop
out
jns
shll
outsb
std
bound
and
data16
xor
lock
aam
shrl
sub
add
icebp
in
aad
mov
push
fwait
dec
popa
xlat
cmp
xor
push
test
cmp
xor
lcall
fdivrs
and
in
add
mov
or
xor
and
cmp
pop
push
push
mov
jb
ja
push
sbb
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
