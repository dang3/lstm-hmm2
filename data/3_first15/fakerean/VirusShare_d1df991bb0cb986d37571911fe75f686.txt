sbb
add
dec
out
pusha
jp
lea
mov
ret
idivb
popf
je
shll
sbb
xor
add
scas
inc
cli
gs
jle
push
mov
add
push
jno
adc
rcrl
cmp
arpl
into
inc
lods
out
sub
mov
stc
movsl
out
out
call
lds
mov
lods
push
pop
jae
dec
pop
mov
jle
call
mov
leave
mov
sbb
pop
jnp
xchg
mov
and
sbb
data16
push
pop
adc
int
push
sbb
sbb
jnp
jle
pop
jge
sub
pop
jmp
sub
int
jl
ljmp
cltd
mov
insl
pusha
fcomps
mov
mov
push
out
les
adc
out
inc
or
mov
mov
pop
mov
ljmp
pop
dec
and
insl
shl
mov
stc
xlat
mov
lods
test
test
mov
ret
sbb
jns
jbe
dec
jns
orb
lret
dec
cmp
xor
inc
add
mov
xchg
scas
xchg
mov
add
mov
pop
out
sub
les
and
pop
cmp
and
pop
adc
jmp
push
lods
fnstenv
mov
sets
loope
dec
leave
sub
or
or
and
mov
sbb
cmpsl
test
nop
mov
int
mov
inc
mov
aam
insl
sbb
fdivrs
in
in
out
mov
dec
popf
jg
mov
cwtl
mov
call
jo
dec
aas
mov
pop
dec
push
test
sub
push
addr16
mov
mov
adc
add
push
mov
lahf
xlat
inc
inc
dec
imull
ss
addl
imul
cli
js
cltd
sarl
in
test
xor
mov
addr16
sub
sub
push
std
adc
fwait
popf
in
sti
bswap
adc
mov
inc
mov
add
push
add
dec
adc
divb
pushf
xchg
repz
out
inc
dec
arpl
pop
or
push
sti
xchg
fwait
dec
jb
arpl
adc
and
push
enter
pop
cltd
add
add
jbe
jmp
ficoml
rolb
fidivrs
cmovb
ljmp
mov
or
push
fcomps
inc
insl
lahf
sahf
loope
push
and
les
sub
push
loopne
xor
sahf
mov
dec
and
and
xor
addr16
mov
xor
sbb
mov
icebp
inc
sub
scas
xchg
popf
xchg
xchg
pop
jp
mov
subb
fcoml
dec
enter
xchg
or
jnp
and
inc
mov
loop
push
and
sub
cmc
mov
add
push
sahf
pop
out
xchg
pushl
xchg
fucomip
fistl
fcmovb
push
or
cwtl
daa
pop
xchg
lea
filds
sbb
jmp
das
inc
dec
outsb
push
push
push
mov
inc
or
rclb
into
mov
ror
dec
dec
out
punpckhqdq
ds
cmp
xchg
cmpsb
mov
and
mov
int
jnp
movsb
sbb
aaa
lods
daa
add
in
lds
dec
cld
mov
mov
sub
aam
add
stos
in
pop
pop
xchg
mov
or
loopne
popf
inc
aas
lahf
les
pop
lahf
testl
ds
add
leave
sub
push
push
dec
dec
mov
repz
dec
aad
xchg
cmc
fisubs
fistpll
mov
xor
je
flds
stos
mov
push
push
in
pop
ret
stc
stos
mov
out
hlt
jno
into
sub
pop
sub
int
mov
and
cltd
in
into
movsl
jmp
lods
incl
mov
mov
pop
out
and
mov
sbb
push
jg
jmp
ss
dec
add
add
aam
cmp
xor
lahf
gs
bound
leave
pop
jbe
sbb
pop
mov
shll
inc
add
fidivrl
lea
push
pop
mov
aad
imul
ljmp
daa
jbe
repnz
inc
inc
mov
popf
or
std
ret
sbb
ret
lods
push
dec
scas
xchg
insl
adc
ljmp
cmc
movb
add
dec
js
jecxz
dec
clc
inc
in
sub
push
and
imul
cmp
cmp
addb
jae
aaa
sahf
rorb
cmp
and
clc
lock
cmp
pop
lret
and
sets
jae
loop
frstor
ret
lods
inc
mov
sbb
inc
daa
les
pop
push
movsb
sbb
xchg
insl
dec
mov
mov
gs
xchg
mov
mov
cld
push
push
outsl
scas
aas
mov
shrb
xor
fcomp
sbb
jg
push
mov
arpl
stos
pushf
pop
in
loopne
sti
idivl
mov
mov
xchg
add
add
xchg
push
sub
loop
stos
sbb
subl
aam
jo
test
and
dec
insl
aad
sub
pop
adc
dec
in
arpl
ja
mov
ss
loopne
leave
push
pop
inc
dec
jo
lds
pushf
add
out
pop
dec
jp
popa
pop
js
int
lcall
xchg
fisubs
or
int3
inc
lcall
insl
sbb
jae
inc
jg
hlt
daa
mov
inc
das
pop
and
fistl
lods
cmp
xor
sub
mov
push
jne
cmpsl
ss
lret
outsl
shlb
xor
push
push
or
aas
orb
adc
aas
push
or
pop
scas
xor
std
sbb
cli
fdivs
mov
aaa
std
out
ss
push
xchg
mov
or
test
mov
gs
shrb
xor
test
xor
jle
pop
iret
mov
nop
pop
jne
cmpsb
lret
dec
sbb
cltd
jae,pt
jle
aam
jns
lock
cld
dec
sbb
add
xor
stos
inc
pop
lret
pop
fcompl
pushf
mov
out
hlt
ljmp
sbb
or
jb
mov
ds
dec
stc
pop
sbb
or
push
enter
sarb
cwtl
shlb
std
ja
mov
mov
pushf
cmpsb
daa
jb
shlb
xchg
int3
pinsrw
push
addr16
push
mov
mov
enter
ss
shll
lcall
cmp
js
cmp
add
je
cli
jge
cltd
arpl
outsb
mov
push
xor
jl
add
das
sub
push
fdivrs
inc
data16
mov
cld
and
jns
pop
or
and
inc
xor
cmp
sub
es
ret
dec
stos
loopne
add
arpl
les
or
dec
xor
cmp
sub
popf
and
inc
and
jns
adc
sbb
inc
lahf
pop
push
jbe
inc
test
mov
mov
sub
jb
dec
in
jg
loopne
push
cmpsl
scas
pop
adc
push
outsb
push
xchg
push
pop
pop
push
push
in
xchg
dec
sub
inc
sub
gs
add
xor
sbb
sbb
out
arpl
imul
cmp
fistpl
scas
loop
inc
sub
clc
push
fcmovbe
test
inc
shlb
ja
xchg
adc
psrad
in
ffree
ja
into
hlt
ss
hlt
imul
mov
out
orl
inc
lahf
call
les
add
jae
fcompl
mov
das
push
sub
xchg
sahf
lretw
test
push
mov
fwait
dec
mov
aaa
xor
ret
lret
mov
xor
pop
adc
movsb
pop
add
adc
cltd
mov
mov
or
scas
in
hlt
dec
test
or
add
stos
pop
arpl
mov
mov
clc
ret
sbb
pop
xchg
lret
movsb
pop
mov
outsl
cmp
loope
cs
movsb
std
scas
xor
adc
cld
lret
push
cmp
xor
insl
mov
push
jno
add
or
add
dec
sbb
xor
xchg
mov
or
cmp
cmpsl
cmp
sarb
rorb
cmp
xor
sbb
scas
fsts
lds
push
int
int3
inc
pop
inc
stos
xchg
cmp
inc
mov
dec
mov
sbb
das
cmpsb
in
adc
pop
pop
lods
mov
popf
pusha
lods
and
out
outsl
sub
popa
sbb
les
aas
pushf
push
sbb
xchg
xor
or
inc
pop
and
inc
xor
aam
ret
inc
jnp
inc
pusha
xor
push
jb
loopne
daa
fidivrl
xor
cmp
jge
push
adcl
fdivs
push
dec
jg
xor
lcall
rcrl
ret
fmull
lds
adc
stc
pavgw
je
or
cmc
xlat
pop
adc
mov
jge
xorl
jp
jge
pop
repnz
scas
mov
mov
or
push
das
push
sbb
lods
jae
mov
sbb
leave
jno
mov
gs
mov
adc
fwait
les
and
jnp
stos
dec
dec
push
je
xchg
inc
or
ss
xor
xchg
sub
cltd
test
sbb
ds
dec
pop
inc
enter
pop
mov
sub
xchg
cmp
out
js
lahf
inc
gs
inc
sub
daa
xor
mov
dec
add
pop
fadd
aam
sbb
lahf
je
roll
inc
or
aaa
sbb
mov
cwtl
mov
lea
and
cwtl
inc
inc
aas
shll
dec
nop
das
aam
push
mov
jne
iret
dec
cmp
hlt
mov
add
testl
xchg
nop
dec
scas
fbld
xor
inc
call
add
sub
loope
pop
outsl
jg
and
cli
outsb
push
xchg
mov
testb
inc
into
mov
frstor
xor
xchg
pop
or
movl
aaa
pop
lahf
mov
cmp
push
mov
rcll
xchg
sbb
sbb
jns
xor
dec
cmp
int3
es
sub
dec
stos
mov
addr16
out
sbb
repz
testb
jle
shl
daa
ss
sub
adc
or
push
repz
xor
mov
mov
mov
xor
sbb
pop
fdiv
xchg
jle
jge
push
outsb
jns
mov
mov
push
fbld
lret
in
arpl
adc
aad
pop
std
jle
sub
lods
mov
pop
inc
push
pop
scas
push
into
push
fnstcw
mov
imul
xlat
cmp
pop
test
mov
out
cltd
xlat
adcb
inc
sub
arpl
repz
ss
xchg
inc
push
mov
les
inc
cli
jae
cmpsb
sbb
dec
xchg
shlb
scas
mov
jno
ret
scas
loopne
hlt
mov
mov
rcrb
rclb
loope
jbe
sub
das
decb
jp
fwait
pop
mov
adc
pop
out
fbld
push
pop
aas
mul
mov
pop
jbe
stos
xchg
cmp
or
inc
cld
xor
fstpt
jle
jmp
pop
pusha
hlt
jecxz
push
xorb
aad
pusha
pop
pop
loope
cltd
repnz
xchg
cltd
idivl
and
sbb
mov
movsl
icebp
leave
es
loope
into
add
ret
pop
sub
push
dec
xor
push
insb
lret
sub
xchg
lea
push
inc
push
inc
inc
pop
mov
add
mov
pop
cmp
daa
or
lahf
rcrb
add
jne
mov
adc
scas
jns
lcall
ds
popa
xor
and
sbb
cmpsb
rol
sub
lret
enter
cmp
gs
scas
cmc
dec
xchg
addr16
cmpsb
xor
movsl
add
xor
dec
jb
add
mov
push
and
mov
jg
loopne
ja
xchg
popf
into
xchg
xor
jno
bound
mov
fnstenv
cltd
sub
lds
add
inc
outsl
arpl
imulb
ret
mov
das
hlt
push
push
mov
movsl
jecxz
pop
jo
mov
repnz
inc
aad
fisubl
ficomps
arpl
dec
jle
cmp
sbb
imull
loop
xchg
out
inc
shr
mov
push
jmp
add
cmpsb
xorb
adc
dec
jle
adc
shll
aaa
pop
xchg
ret
inc
adc
mov
push
cmc
rcl
mov
inc
sub
pushf
push
arpl
frstor
xchg
cltd
leave
lcall
sti
mov
stos
adc
faddl
jge
test
xchg
subl
mov
mov
lcall
add
pushf
mov
xchg
mov
push
mov
and
mov
inc
in
repz
std
cltd
rcrb
and
mov
mov
lahf
ret
or
sbb
pop
dec
add
push
pop
jb
pop
int3
scas
lret
aam
dec
push
dec
sub
cwtl
adc
outsl
js
cs
sti
lods
loop
fnstenv
pop
stc
jmp
add
subb
daa
das
lds
xchg
jne
nop
xor
jae
cmpl
pop
loope
stc
scas
daa
hlt
dec
mov
bound
jno
lods
mov
lock
jae
mov
sarb
pop
icebp
and
mov
lret
push
inc
sti
jge
movsb
mov
jae
add
inc
and
adc
or
xchg
fwait
divb
dec
js
lcall
and
fwait
cmc
daa
xor
pop
les
je
adc
sbbb
adc
outsl
mov
cmc
js
fcoml
shr
sub
jg
outsl
xchg
sub
adc
div
shll
mov
mov
stos
fdiv
sub
mov
push
adc
test
cld
adc
out
cmp
out
loop
xlat
dec
inc
adc
notl
sub
xchg
push
int3
xchg
inc
cli
push
cli
pushf
inc
jnp
mov
pop
inc
mov
xlat
inc
fdivrl
cmpsb
iret
mov
into
aad
mov
inc
loop
pushf
scas
push
mov
adc
outsb
gs
lahf
stos
mov
sub
lock
inc
ror
xor
ljmp
jp
popf
decl
mov
in
adc
lods
xor
ja
mov
test
pop
pop
adc
sub
repnz
nop
sub
push
cmp
xlat
sub
addb
pusha
inc
pop
push
test
lea
pop
mov
lret
ds
mov
std
enter
xor
lahf
xchg
xor
rcll
cwtl
test
xchg
scas
jmp
add
int
lret
pop
push
je
mov
scas
dec
cs
cmc
sbb
aad
filds
jg
add
dec
jb
out
adc
xchg
lods
hlt
test
cli
hlt
add
push
loop
sti
aad
cmpsb
jno
je
xchg
testb
imul
enter
lock
scas
dec
roll
out
cmp
inc
add
and
sbb
enter
lcall
mov
jne
into
push
xlat
lahf
movsb
std
mov
ss
xor
mov
cld
div
lods
xchg
pop
test
lock
cmp
lret
dec
imul
mov
cwtl
aam
fs
adcb
in
sbb
dec
pop
xchg
ret
dec
mull
xchg
pop
jns
cmp
dec
stc
cs
insl
pop
sub
xchg
xchg
lret
out
dec
sbb
mov
mov
add
repnz
xchg
imul
lods
xor
dec
push
sub
mov
sarb
popa
mov
cmp
cmpsl
xchg
mov
cmp
out
sub
ror
sub
xor
les
movsl
dec
pop
dec
pop
inc
or
stos
fdivp
push
cmp
lret
imul
push
out
or
sbb
cwtl
adc
std
aas
in
inc
out
mov
daa
ljmp
push
add
das
push
lcall
clc
cmpsb
cmp
push
mov
movl
incl
lods
or
cmpsl
movsl
xor
xchg
lods
ret
test
mov
adc
jmp
hlt
mov
mov
les
test
cwtl
xor
stos
xchg
ret
rclb
sahf
je
leave
cmp
repnz
xchg
pop
loop
clc
sub
sub
loopne
pusha
loopw
daa
add
lahf
sub
out
push
subb
dec
in
lret
mov
pushf
adc
mov
les
adc
push
sub
add
xchg
mov
js
xor
cmp
out
cmp
and
dec
cmc
jns
mov
add
decb
ret
iret
pop
mov
inc
mov
arpl
call
shl
add
in
inc
xchg
loop
test
inc
push
sub
pop
jmp
or
cmp
adcb
cmp
add
imull
mov
ficoml
in
int
mov
scas
shll
pop
cmp
mov
daa
stos
sub
mov
stos
inc
and
xchg
mov
out
outsb
int
xchg
clc
pusha
movsb
adc
jns
mov
ret
das
cmp
jmp
sbb
aam
ss
test
inc
dec
stc
push
jmp
jo
repz
mov
mov
cmp
gs
xor
bound
push
mov
push
aas
fcmovnb
xor
jne
and
pop
jg
iret
lahf
mov
enter
into
mov
xchg
push
sbb
mov
mov
fmuls
or
and
aaa
jp
test
jmp
pop
mov
das
rcrl
pushl
xor
cmp
inc
jl
jbe
xchg
mov
mov
pop
pop
and
pop
loop
stc
inc
adc
mov
push
dec
inc
and
cmp
jns
pop
test
push
subb
subb
sbb
fimuls
and
jmp
out
add
repnz
and
push
shrb
jmp
jne
pusha
xor
or
xor
push
cltd
inc
lods
ret
and
rcr
mov
aam
int
ror
in
mov
imul
sbb
adc
repnz
test
add
push
cmp
out
loop
jmp
aam
icebp
cmpb
les
stos
dec
rcrl
mov
lea
sub
dec
addr16
jae
inc
popa
out
pop
jg
aam
fstpt
xor
mov
enter
mov
cwtl
and
lods
mov
lods
pusha
sub
jle
add
divb
add
mov
mov
mov
jno
mov
icebp
xchg
mov
push
in
push
sub
jl
pop
mov
and
push
jp
in
pop
xchg
and
push
jbe
lods
js
movsb
aad
mov
lea
test
cmp
pop
hlt
xor
push
xchg
cld
fidivrs
sti
call
inc
push
push
add
cmp
aam
arpl
add
add
mov
lret
jnp
cmp
sub
mov
push
mov
cmc
mov
test
loop
mov
adc
bnd
pop
or
fdiv
sub
mov
adc
push
mov
dec
or
fidivl
daa
es
dec
stc
ja
scas
mov
pop
into
insb
sbb
out
popl
nop
or
xlat
push
add
cmpsb
xchg
adc
into
test
lock
loopne
je
movsb
ljmp
lahf
subb
push
pop
pusha
push
out
adc
aas
std
ja
jg
aas
or
in
push
mov
xchg
jmp
stc
jg
dec
inc
sub
add
das
pusha
adc
scas
movsl
aas
or
pushf
mov
and
popa
pop
xor
fisttpl
cli
lock
lret
inc
data16
jns
outsl
roll
test
daa
inc
pop
mov
jg
outsb
andb
xor
pop
loop
xchg
test
xor
jmp
and
shlb
lds
jmp
add
rol
mov
xchg
mov
lea
pushf
sub
and
sti
test
lcall
xchg
subl
xchg
enter
adc
jmp
xor
nop
adc
jo
xchg
pop
push
xchg
inc
dec
aam
lret
fdivl
mov
sahf
inc
repnz
pop
cmpsl
inc
testl
hlt
inc
je
pop
or
gs
xor
fstps
add
andb
loop
inc
jecxz
scas
or
shlb
push
pop
fistps
lds
clc
cmc
mov
outsb
xor
cmpsl
jle
ja
fnstsw
lock
sub
bound
mov
aaa
and
test
stc
outsb
js
push
jl
movb
loope
sti
lret
jns
cltd
mov
ja
pop
push
mov
push
pop
cmpsl
notl
jl
mov
call
xchg
cwtl
cld
mov
outsb
leave
add
scas
neg
jmp
jle
call
push
cmp
sbb
jle
mov
jo
lahf
cmp
sbb
sub
jns
sub
sbb
cmp
adc
cwtl
outsb
jb
cmpl
jne
pcmpeqw
out
outsl
mov
in
movsl
test
cmpsl
push
lret
nop
loopne
xchg
stos
push
in
xchg
xorb
jl
sub
cmc
adc
dec
push
ljmp
mov
sub
inc
insl
push
fiaddl
loop
fimull
sbbb
subl
pop
jp
lret
lods
into
add
pop
mov
nop
or
movsl
cmp
dec
sub
xlat
inc
ds
sbb
data16
xchg
icebp
mov
sbb
jl
jnp
loop
mov
addr16
lret
and
xchg
adc
cmp
and
jecxz
int3
dec
shrb
and
dec
bound
aaa
les
or
xor
mov
ljmp
popa
adc
xchg
addr16
pop
mov
iret
or
insl
sbb
fidivrs
nop
push
loop
or
ja
xor
or
mov
loopne
pop
cmpsb
sbb
outsb
sbb
lret
adc
xchg
xor
push
xchg
or
xchg
scas
adc
push
js
ja
mov
arpl
stos
add
push
cmp
loope
cmp
jbe
and
stc
aam
mov
dec
mov
push
dec
pop
aad
aas
loope
cmp
pop
pop
cmp
les
cli
aas
aam
ljmp
popf
xchg
test
and
pop
sahf
rcll
out
fimull
fdivr
mov
out
jle
les
jnp
hlt
push
aaa
or
popa
or
cmp
lret
push
pushf
fistl
popa
xor
das
sub
and
cmp
das
insl
insb
jbe
outsb
pushf
xor
fsub
cmp
sbb
arpl
or
incb
in
out
lahf
das
push
xchg
js
imul
ret
loop
mov
inc
jecxz
push
xor
push
lcall
jecxz
mov
dec
add
mov
push
scas
movsb
add
addr16
inc
dec
inc
xchg
xlat
or
xchg
pop
int
xchg
mov
pop
bound
mov
pop
mov
in
add
sbb
cmovno
jle
addr16
in
add
pop
xor
adc
data16
sub
sub
or
xchg
xchg
lea
out
aas
xchg
jg
add
pop
xchg
popf
and
loope
dec
dec
cs
dec
stc
jns
mov
test
or
push
xchg
call
ret
mov
js
js
cltd
testl
icebp
or
cmp
cli
test
xor
dec
sbb
jbe
insl
or
or
mov
mov
push
xor
jb
mov
jbe
jmp
inc
fisttps
mov
pusha
ror
inc
aam
cmc
mov
mov
or
rorl
cmp
mov
aam
xor
push
pop
stos
je
mov
lds
mov
dec
aad
jp
inc
sub
test
leave
push
insb
sbb
sbb
add
andb
cmp
sbb
adc
and
outsb
or
in
daa
xchg
and
xor
pop
jp
pop
xchg
cmp
enter
lret
add
jb
pop
jmp
imul
and
xor
mov
test
sub
negl
pushf
cmp
fcoml
lahf
xchg
pushf
es
pop
into
and
fcoml
mov
imul
sbb
and
pop
rep
pop
js
cmpsl
mov
sar
push
dec
rcll
in
gs
or
sub
and
xor
clc
pop
xchg
mov
sub
mov
stos
cmp
shlb
dec
ret
movsb
cmp
dec
push
testl
xor
cs
scas
cs
mov
cli
scas
push
dec
out
lods
into
loope
pop
into
dec
test
outsl
jmp
aad
and
leave
inc
and
mov
sub
jno
jmp
int3
mov
ss
inc
dec
jmp
or
imul
xlat
aaa
lahf
test
pop
mov
cmp
xchg
insl
pop
lods
mov
fdivp
or
stos
cmc
xchg
cmp
cmpsl
sub
test
call
lret
sub
add
repnz
add
mov
jne
mov
push
mov
xor
icebp
sar
sub
cli
pop
stc
inc
imul
push
out
aaa
jg
adc
shrl
enter
add
push
push
adc
popa
push
mov
add
push
rol
mov
add
jmp
test
jo
mov
mov
xchg
shlb
sti
xorb
hlt
faddp
add
cmp
lds
lods
sub
add
test
dec
mov
pop
xlat
jbe
mov
in
jo
jecxz
enter
xor
aaa
lret
lahf
xchg
adc
jb
stos
repnz
test
out
xor
mov
sub
inc
movsb
or
xchg
nop
and
xchg
std
stos
int
lret
sub
test
imul
jb
fmull
inc
jmp
rcrl
loop
shrl
pop
adc
lds
insl
or
pop
mov
cmc
in
int
sbb
call
stos
jns
push
movsb
dec
mov
ret
into
xor
jmp
out
push
or
cltd
dec
repz
add
lock
test
sub
inc
sub
pop
sbb
or
test
stos
and
adc
cli
or
popf
ret
es
bound
add
stc
mov
mov
xchg
das
test
les
ljmp
xchg
and
clc
in
mov
movsb
in
mov
sbbl
push
mov
sub
sti
sbb
ficoms
xchg
sub
outsl
dec
push
sub
or
aas
dec
ja
cmc
arpl
sahf
ffree
sub
xchg
and
pusha
xchg
or
add
mov
dec
push
icebp
push
rclb
cmp
ror
out
lds
mov
mov
mov
int3
scas
cmp
aam
mov
sub
loope
andl
dec
add
mov
cld
fs
rorb
push
push
test
pop
xor
test
push
rcrb
mov
negb
cmp
insb
pop
push
pop
adcb
lret
fwait
jl
subl
ds
and
sbb
addr16
pop
and
inc
cli
cs
push
adc
scas
cltd
mov
and
mov
test
or
cmp
js
ss
nop
and
popf
xor
xor
fs
push
je
or
sahf
fcoms
sahf
lcall
out
popf
les
sub
dec
lcall
xor
mov
sub
add
push
outsl
xchg
and
or
fldenv
lret
fistpl
cld
std
inc
sub
jmp
hlt
push
xor
sbb
sahf
out
call
pop
stc
aad
push
ret
rcll
xor
mov
xor
mov
fucomp
lret
cmp
insl
out
sub
cmp
test
cli
in
cld
call
lahf
jl
sub
xchg
pop
dec
popf
push
jmp
mov
fisubs
sub
sahf
rolb
dec
out
sbb
notl
cmp
subl
pop
sbb
sbb
cltd
sbb
mov
push
xor
pop
addb
lock
shlb
cmpsb
cmp
dec
xlat
mov
or
adc
daa
fistl
imulb
add
filds
scas
add
pusha
adc
imul
shlb
pop
cmp
mov
mov
ja
adc
loopne
jns
cmp
mov
cmp
inc
push
mov
stos
nop
mov
bound
add
cwtl
sbb
mov
adc
pop
cmpxchg
jnp
xchg
sbbb
repz
loop
mov
andl
inc
addb
pop
sbb
push
sahf
fcompl
in
leave
idivb
mov
and
scas
into
sbb
idivb
push
imul
pop
ss
xchg
lret
xor
ret
ret
push
inc
movsb
pop
aas
mov
es
lock
push
aas
cmp
or
and
sub
pop
lods
in
jb
in
cmp
xchg
dec
push
xor
cld
out
push
sub
mov
dec
outsl
stos
sbb
lcall
xor
and
movsl
mov
jg
inc
std
xchg
fidivrl
jmp
test
xchg
ss
sub
shrl
sbb
mov
add
clc
call
add
sub
xchg
aaa
sbbb
lods
aaa
divb
dec
mov
divl
sti
pop
mov
lcall
dec
pushf
jp
dec
or
push
pushf
ds
adc
and
xchg
loope
bound
xchg
mov
test
dec
loope
xchg
prefetchw
xchg
popa
outsb
jl
inc
fdivrp
mov
xchg
mov
add
xorl
pop
jne
subb
enter
jp
and
xchg
pop
test
xor
stos
mov
fcompl
sbb
inc
jp
or
and
test
cmp
fldt
push
cmpsb
pop
fdivrl
insw
inc
mov
imul
lret
lahf
sbb
xlat
dec
adc
dec
aaa
fisttpl
push
outsb
and
test
mov
and
pusha
push
xor
mov
pop
pop
cmp
roll
dec
scas
sbb
cmp
add
mov
cmp
test
jbe
repnz
push
cmpl
in
adc
mov
loop
in
lahf
ljmp
mov
call
dec
stc
aam
iret
push
fsts
push
aad
jle
mov
repnz
xor
div
aam
outsl
cli
mov
lock
mov
sbb
xor
and
xor
cmpsl
repnz
nop
or
or
mov
fstps
cmp
adc
into
inc
or
scas
out
inc
sub
sarl
sbb
data16
mov
js
mov
pushf
lock
push
jmp
xchg
shl
mov
fdivl
adc
add
cmc
mov
add
jne
loopne
bound
mov
int
lss
dec
sbb
xor
leave
mov
jle
mov
rclb
jmp
sti
and
js
mov
sbb
jle
xchg
decl
sbb
dec
jmp
js
cmp
xor
inc
sbb
iret
into
and
scas
and
iret
xor
jbe
jae
cmp
in
push
jle
icebp
push
mov
cld
xchg
cmp
cmp
popa
add
lock
lcall
xor
orl
fdivs
cmp
mov
and
pusha
out
pushf
ret
inc
pop
insb
shlb
adc
shrb
test
mov
aas
or
lret
inc
out
push
sbb
push
in
inc
adc
pop
or
cltd
sbb
pop
aad
jae
pop
icebp
out
xchg
stos
cmp
sbbb
stos
add
sub
lret
xor
fldl
or
sbb
int
pop
fbld
jecxz
addr16
push
jecxz
cltd
in
scas
aad
fldcw
inc
in
out
add
fcmove
or
jno
and
sbb
xor
addr16
inc
and
jne
lret
cmp
xchg
fs
ret
adcb
cmpsl
dec
rorb
push
pop
insl
mov
cmc
fwait
hlt
stos
pop
out
mov
call
bound
jne
ds
hlt
jne
or
fcomi
call
inc
xlat
scas
fldcw
aas
xchg
mov
add
mov
push
pop
mov
jne
dec
or
xor
stos
call
cmp
mov
sbb
or
mov
sub
mov
ss
int3
sub
cmp
cltd
xor
add
and
or
sbb
add
pop
std
neg
xchg
pusha
leave
adc
jns
push
sahf
punpckhwd
add
add
roll
sbb
out
test
sub
mov
sti
xor
orb
clc
cmpsl
add
insb
xchg
test
cs
push
jmp
and
jae
test
ja
ret
and
and
xor
jp
das
xchg
jno
xor
push
mov
and
lahf
mov
cltd
out
push
inc
inc
sub
int
std
fistps
mov
mov
jecxz
fwait
in
jb
pop
add
push
xchg
adc
cmp
shrb
mov
ficoms
rolb
popl
bound
shlb
rcrl
cmpsl
xchg
xor
pusha
fimull
repnz
sbb
jo
fs
jle
xchg
popa
mov
das
insb
nop
lock
mov
rolb
aaa
imul
jne
fs
add
jnp
loop
mov
xor
fistl
mov
pop
inc
test
fs
loope
push
xchg
das
pop
loope
cwtl
cmp
pushf
xchg
arpl
pop
adc
fidivs
add
pop
inc
cwtl
pop
fbstp
pop
shlb
dec
addr16
inc
fnstcw
add
mov
icebp
rcr
xchg
cwtl
dec
inc
sub
pushf
shr
lods
and
dec
push
call
call
pop
ss
loopne
les
mov
lea
push
xchg
mov
lea
fs
mov
add
xlat
sub
lahf
adc
push
and
in
sbb
add
and
or
pop
arpl
icebp
xchg
mov
scas
movsb
daa
hlt
pusha
adc
imul
loopne
mov
adc
adc
cmp
out
lea
inc
hlt
or
add
addr16
test
dec
adc
and
inc
xor
sbb
xchg
leave
cld
stc
inc
adc
push
loopne
adc
add
test
mov
cld
clc
xchg
xor
push
test
mov
gs
cmp
xor
test
lret
jle
xchg
inc
or
jl
adc
lds
ret
out
mov
jb
push
mov
push
mov
stos
jno
xchg
outsl
ret
pop
sub
xchg
sub
das
cmp
bnd
inc
fstpl
std
cmp
mov
push
rorb
mov
cmp
mov
cltd
js
dec
pop
pop
pop
push
ss
fidivl
out
cmp
inc
inc
pop
dec
pushf
out
cmp
in
les
dec
pusha
stc
fwait
or
jmp
out
and
xchg
push
inc
push
test
movsb
jp
andb
sahf
pop
pop
add
xor
dec
icebp
pop
push
out
xor
jle
push
inc
mov
sbb
movsb
mov
mov
loopne
andl
mov
int3
jge
jl
pop
int3
push
xor
dec
ja
inc
jle
js
mov
fildll
xchg
test
mov
mov
jbe
lahf
in
push
insb
and
fdivr
dec
pop
adc
jl
ret
xchg
or
insb
pop
add
add
jmp
movl
ds
stos
xchg
cmp
fiaddl
mov
pop
inc
jbe
push
aaa
push
cltd
scas
popf
or
inc
test
add
lcall
and
cs
test
movsb
pusha
adc
or
in
inc
dec
cmp
fsubrs
shll
cmp
push
sub
gs
mov
adc
cli
aad
sti
lea
mov
fcmovnu
fsubr
xchg
lock
sbb
sub
mov
pop
popa
in
addr16
fldt
mov
xchg
add
outsl
sub
into
inc
inc
and
add
pusha
xorb
mov
dec
jno
test
imul
jmp
jnp
popf
xchg
iret
int3
xor
push
or
mov
or
hlt
xor
call
push
fistl
mov
mov
hlt
sbb
cmp
cwtl
pop
int3
jg
loop
cmp
push
jae
cmp
mov
jno
mov
stos
cmp
lea
pop
clc
push
mov
push
js
out
popf
xchg
or
in
jb
pop
inc
out
outsl
xchg
insb
inc
inc
ljmp
mov
dec
repnz
sarb
int
subl
jmp
jnp
sub
fdiv
popf
in
mov
imul
push
adc
sbb
cmp
inc
xchg
dec
jmp
or
cmp
int
insb
jo
cmp
scas
push
test
xor
xchg
sahf
pusha
mov
hlt
jno
inc
in
pop
mov
stos
clc
into
add
xchg
xlat
shll
mov
sahf
xchg
push
rolb
mov
std
push
shlb
aam
pop
shr
mov
jnp
adc
out
adc
sbb
es
ds
les
lahf
aad
outsb
pop
sub
jecxz
scas
push
mov
and
es
stos
test
pop
sub
mov
xchg
add
pop
jg
and
dec
lret
jne
gs
mul
push
loop
mov
mov
jecxz
int3
xchg
jae
dec
xchg
call
lcall
fwait
jb
leave
fldt
daa
mull
mov
sub
sub
sarl
dec
subb
and
pushf
lds
mov
and
inc
push
iret
adc
shl
dec
mov
sub
aam
push
sbb
loope
mov
pop
pusha
repz
or
test
nop
xor
test
shlb
xor
stos
dec
daa
ud1
mov
repnz
sbb
movl
sarl
xor
divb
popl
fdivr
xor
subl
lods
cmp
dec
xlat
add
inc
mov
cmp
jmp
fcoms
inc
fstl
outsl
mov
sahf
hlt
pusha
in
daa
imul
mov
shll
jb
dec
addb
add
mov
adc
cwtl
push
cltd
nop
xor
push
shll
mov
je
jecxz
xchg
rcrl
mov
in
push
xchg
aas
fistl
out
test
sbb
inc
fdivrl
popf
add
sub
dec
divl
xchg
mov
aaa
or
jle
fdivrs
es
stc
push
inc
cmp
and
pop
int
push
xchg
and
ja
scas
sub
ret
jno
ss
cmc
add
scas
xchg
cmp
jmp
lea
push
cs
or
cmp
push
fs
jb
sub
push
loop
movsb
push
push
pop
popf
es
xor
jbe
es
je
pop
or
pop
cmpsl
xchg
jp
sub
push
aaa
sti
cmp
aam
pop
mov
loop
nop
sbb
or
push
push
out
jnp
mov
inc
mov
jnp
and
push
ret
loop
mov
neg
out
fstpt
data16
cld
or
pop
push
imul
popfw
daa
jo
or
iret
xchg
neg
mov
sbbb
pop
fistpl
sbb
add
repz
adc
push
xchg
je
adc
dec
xor
fcoml
sti
add
aaa
add
mulps
bound
xchg
add
dec
lahf
xchg
outsb
sbb
fisubs
test
lods
loope
lcall
push
nop
nop
xor
mov
mov
stos
mov
push
leave
data16
or
push
dec
shll
sarb
sahf
push
call
mov
cwtl
in
hlt
add
lahf
pop
push
daa
cmp
pop
in
out
mov
sahf
ror
and
dec
test
pop
sub
jecxz
or
xchg
and
push
push
fcomps
adc
adc
je
lahf
dec
xchg
pop
jb
lret
inc
or
sbb
sub
repz
push
pop
or
sbb
pop
sbb
in
je
gs
addr16
movsl
ds
out
jp
and
dec
rcr
fwait
xchg
lock
or
sahf
ret
jle
lods
mov
sbb
loopne
mov
outsb
xchg
adc
mull
jge
mov
icebp
ss
lret
xor
test
repnz
inc
sbb
icebp
sub
pop
lods
into
sbb
inc
adc
mov
inc
mov
aas
and
xchg
ffree
fcmovne
xor
out
loopne
jae
hlt
push
scas
rorl
dec
leave
add
lret
movsl
pop
dec
push
int
xor
insb
ss
popf
mov
enter
sbb
pop
movsl
or
sub
xor
fldcw
mov
jae
or
sub
fwait
ljmp
popf
mov
and
sbb
fidivl
loopne
mov
rorb
jne
int3
push
or
jns
mov
adc
bound
sbb
inc
shll
dec
pop
ss
iret
inc
inc
negb
inc
js
fildll
or
sbb
scas
mov
and
mov
test
cwtl
outsl
in
mov
dec
nop
sbb
cli
and
jecxz
aaa
xor
jne
inc
pop
mov
jne
imul
push
sbb
imul
in
or
dec
shl
imul
sub
cmp
rorl
push
sti
incb
mov
push
and
test
sahf
xor
fimuls
in
jns
mov
inc
mov
bound
insl
mov
add
sbb
ficoml
add
push
or
in
sub
imul
inc
push
sbb
int
jecxz
lahf
mov
mov
xchg
xchg
and
dec
jecxz
cmp
sar
dec
push
call
inc
add
das
lock
cltd
aam
inc
sub
and
sub
lahf
mov
sub
outsb
mov
int
mov
push
pop
jl
push
cmp
xchg
addb
sub
pop
pop
pop
in
lret
andl
mov
pop
dec
add
movsl
notb
xlat
mov
or
dec
add
push
sbb
sub
in
push
xchg
pop
jmp
xor
jl
xor
push
push
jno
or
test
sub
mov
push
sbb
mov
and
ret
add
jp
lret
out
pop
mov
scas
add
dec
daa
jmp
mov
cmc
out
lcall
mov
iret
lret
xor
leave
mov
in
mov
fidivs
mov
sbb
mov
mov
xchg
out
pop
arpl
cmp
xchg
push
inc
je
scas
fistl
xlat
cli
lds
xchg
jg
inc
nop
test
xor
in
xchg
pop
hlt
pusha
inc
test
xchg
imul
add
xchg
push
fadds
cmp
jg
lret
inc
sti
or
pop
fmuls
fldt
sti
sbb
mov
cmpsl
xor
push
lret
push
repz
aas
lcall
scas
pusha
push
push
mov
lcall
test
sub
nop
and
ret
arpl
movsl
dec
jae
shl
lods
loope
inc
jno
add
pusha
jmp
stc
lea
ret
inc
std
mov
cmc
pop
out
xor
and
jecxz
push
sub
mov
sub
pop
mov
std
rcl
fincstp
prefetch
inc
in
cmp
mov
incl
js
inc
bound
jge
dec
adc
test
xor
lahf
fists
out
jmp
lahf
pop
add
sbb
xchg
xor
pop
jp
inc
mov
push
cmp
out
out
aaa
jne
sub
scas
mov
adc
loope
movsb
cmp
mov
mov
fnstsw
scas
xchg
dec
outsl
cmp
enter
leave
fs
mov
das
adc
xchg
adc
sub
xorl
aam
mov
cmp
pop
inc
outsl
sahf
mov
incl
sbb
data16
adc
mov
adc
rorl
outsl
xchg
inc
ds
icebp
icebp
mov
pop
sub
jbe
mov
or
inc
xchg
mov
ss
iret
and
leave
pop
scas
adc
and
mov
nop
test
add
dec
into
mov
fcoms
pushf
lds
jae
nop
shlb
mov
mov
xchg
mov
add
sbb
pop
rolb
rolb
mov
mov
pop
push
lea
ret
dec
lahf
cmpb
mov
mov
mov
sub
mov
je
data16
es
or
mov
out
cs
inc
or
out
lahf
int
cli
jnp
jmp
pop
inc
and
lds
ss
jl
nop
xorl
fiadds
push
inc
adc
inc
fs
scas
dec
rclb
out
sub
mov
xor
call
jmp
push
sarl
adc
test
loopew
test
dec
ja
mov
jb
in
push
aam
gs
imul
jecxz
mov
cmp
das
jmp
outsl
sub
out
jno
sub
mov
jg
stc
sub
and
push
pop
push
hlt
addr16
dec
lea
and
jns
jo
jns
bound
in
mov
add
lcall
push
mov
test
pop
add
xchg
sub
sbb
imul
scas
inc
jns
mov
in
stos
popf
adc
add
popa
out
aam
negb
adc
dec
jbe
xchg
out
sub
lahf
pop
mov
mov
notb
sbb
dec
lock
in
jae
jno
push
fisubs
jl
dec
cmp
sbb
cmp
push
lea
adc
mov
mov
jo
jo
pushf
jbe
dec
and
and
cmpsb
rorl
rcrb
aam
call
or
mov
das
hlt
push
outsl
mov
pushl
outsb
xchg
jnp
mov
dec
pop
int3
pop
vmovshdup
test
mov
cmp
add
adc
aad
pop
xchg
mov
xchg
cmpsb
std
cmp
pop
imul
fs
loop
je
jl
xchg
mov
adc
aad
clc
sbb
gs
filds
in
sbb
mov
push
leave
jmp
sub
cmpsl
clc
test
sbb
cwtl
lret
pop
jl
adc
xor
xchg
push
mov
cmp
stos
push
push
daa
or
sbb
push
cmp
test
add
xchg
je
loope
repnz
sbb
repz
rorb
aam
push
mov
jo
mull
cmc
xor
aam
lea
xor
add
jb
jp
sahf
inc
bound
arpl
movsb
hlt
inc
mov
dec
inc
fiadds
imul
lahf
ret
lea
xor
fdivrs
shll
add
push
xchg
push
cs
movsb
ret
xor
add
or
and
and
popa
repnz
negb
push
inc
aas
insl
dec
mov
push
cmpsl
sbb
aas
xor
test
shrb
out
jp
rep
loop
or
cmp
jecxz
ds
clc
aad
cmp
adc
adc
or
pop
ret
push
scas
pop
leave
fwait
mov
gs
add
xor
jmp
je
xchg
add
add
cli
adc
out
aam
adc
fsub
or
xor
faddl
insb
mov
mov
shll
hlt
fadds
mov
fiadds
scas
mov
andb
xchg
and
into
insl
addl
push
inc
xor
xchg
mov
and
adc
adc
loopne
into
jns
lods
fsubrl
icebp
sti
pop
out
jmp
sbb
mov
push
ret
les
js
in
faddl
push
jne
push
jg
cs
repnz
pop
or
jae
enter
mov
sbb
pop
inc
test
cmp
sbb
xchg
mulb
fmul
inc
aaa
lret
ss
push
test
dec
mov
jns
adc
test
hlt
mov
inc
jecxz
push
pop
fwait
inc
pop
lahf
mov
xchg
rclb
sub
mov
cwtl
mov
dec
rol
dec
jne
stos
xchg
notb
repnz
push
repnz
mov
scas
mov
andl
test
cli
mov
lea
in
xor
and
mov
push
adc
and
std
in
add
ss
repnz
xchg
mov
sahf
jb
adc
mov
mov
lahf
lahf
add
xor
mov
inc
dec
mov
fs
jb
outsl
pop
xlat
cmpb
insl
xchg
pusha
sti
sbb
xchg
add
les
iret
inc
cmp
movsb
jbe
imul
cmp
mov
sbb
jl
enter
cmp
pop
jae
imul
fmul
and
repnz
inc
mov
mov
stos
iret
fists
and
jno
or
xchg
jl
cltd
test
add
ret
jecxz
scas
mov
loop
fstpl
sti
call
mov
inc
cmp
mov
xchg
dec
pop
iret
test
out
push
das
outsb
pop
in
xor
pushf
shr
xchg
jp
test
adc
js
pop
rclb
sbb
inc
cmpsb
xor
hlt
lahf
imul
mov
dec
daa
idivb
stc
adc
mov
sbb
mov
clc
ja
fisubl
lds
cmp
nop
in
mov
mov
push
aad
gs
aam
fsubl
sti
adc
sub
ja
push
lahf
or
dec
lret
xor
sbb
pop
sbb
jo
mov
and
lea
pop
xor
adc
xor
and
imul
mov
xor
in
sahf
cmpsb
in
xchg
or
hlt
mov
xchg
cmp
je
inc
test
lret
xchg
aam
fwait
outsl
test
mov
mov
ljmp
nop
cs
iret
or
push
sub
pop
and
dec
push
hlt
out
jns
xchg
out
push
dec
out
xchg
rorb
cmp
scas
mov
jnp
pop
rcr
xor
dec
or
in
fistpll
sub
xchg
cmp
push
inc
xchg
cmp
aas
adc
cmp
ljmp
iret
mov
inc
jge
pushf
cmp
rep
xor
ret
and
dec
or
ret
aaa
mov
pop
imul
jmp
fnstenv
push
or
mov
cs
fwait
push
ja
adc
test
xchg
addr16
adc
int
ffree
sbb
sahf
sub
inc
test
xlat
inc
in
pop
add
mov
popf
lret
testl
jmp
adcb
jge
push
sysenter
pop
add
call
dec
jnp
imul
mov
addr16
pop
jb
sub
idivb
dec
mov
and
dec
mov
cmp
movsb
or
xorb
cld
xor
sub
stos
mov
pusha
popf
test
sahf
cmc
fsubs
adc
iret
mov
cmp
arpl
jp
push
dec
ds
inc
mov
imul
xchg
pop
adc
jo
or
adc
repnz
jns
and
push
inc
dec
push
pop
mov
mov
sbb
rep
mov
icebp
mov
cmp
pusha
cmp
mov
fsubl
js
dec
sub
mov
xorb
push
push
testl
push
mov
push
popa
xor
rcrl
pop
cmpsb
and
loopne,pt
cs
mov
lods
xor
pop
sub
jecxz
mov
imul
loope
stos
es
aas
lock
mov
jle
aad
pop
into
insl
or
push
or
lret
and
sub
testl
mov
mov
adc
dec
xchg
push
jne
jl
pop
dec
jecxz
lods
test
xor
sbb
and
pop
jecxz
pop
cmp
dec
adc
int
sahf
xor
or
or
xchg
lods
mov
inc
in
sbb
dec
pop
mov
adc
push
stc
scas
push
mov
std
out
xor
call
imul
fs
fadds
xor
push
adc
jns
xchg
xchg
adc
xor
push
test
std
scas
xchg
lret
sbb
and
cli
mov
pop
dec
ror
outsb
test
push
pop
insb
rclb
sub
adc
in
jecxz
xchg
push
test
bound
int3
jb
xchg
ds
pop
fcoml
push
cmp
mov
jb
sbb
sbb
jns
sbb
shll
and
push
or
int
jp
cltd
inc
cs
sub
and
enter
scas
push
adc
out
push
jno
pandn
xchg
and
and
in
xchg
js
scas
sbb
roll
mov
arpl
pop
and
mov
inc
lods
inc
mov
xor
in
movsb
inc
sub
dec
in
xchg
xor
loop
xchg
mov
stos
xor
add
mov
rorl
cli
jecxz
cmc
and
mov
cmc
dec
mov
aad
ficompl
pop
sub
xor
dec
cltd
fmull
icebp
jge
xlat
test
cltd
inc
push
in
jg
adc
clc
sub
lock
jbe
xor
clc
out
lods
loop
lods
test
add
adc
jle
in
jg
mov
sub
sbb
paddusw
orb
daa
xchg
xor
lods
pop
jl
sub
push
popa
out
xchg
shlb
mov
jae
lods
cbtw
lahf
shll
mov
pop
lds
jbe
sbb
rolb
push
and
int
ret
mov
push
cmp
cld
loope
lock
xchg
sub
push
push
xchg
out
shll
lock
xor
push
xchg
sub
outsl
rclb
ds
adc
sti
mov
cmp
and
xlat
ret
fisubrl
ss
out
pop
push
jmp
popa
pop
dec
sub
lcall
mov
sub
cwtl
pop
adc
mov
imul
movsl
or
dec
ss
cltd
fcoml
sbb
sbb
outsl
pop
cmpsl
dec
ds
add
cld
imul
jne
sbb
fiadds
sub
out
psrld
test
ret
xchg
ja
xorb
dec
dec
mov
lock
dec
and
pusha
test
fistps
push
mov
test
jb
lcall
push
ret
sub
dec
fwait
movsb
ljmp
cmpsb
mov
xchg
cltd
es
out
movsl
pop
dec
inc
and
jnp
ret
out
cmp
push
cwtl
push
in
ja
mov
mov
adc
testb
aas
and
lret
sbb
xchg
out
dec
mov
mov
cmp
add
pop
push
in
jo
fs
in
mov
mov
in
dec
cld
or
ffreep
xor
mov
mov
stos
fisubrs
das
adc
int
test
paddw
push
sti
pop
lret
cwtl
int
sub
jle
popf
scas
push
add
sbb
iret
jnp
lock
sub
xchg
jge
shll
sarl
mov
test
clc
es
xor
jne
cmpsl
clc
stos
lock
mov
out
mov
inc
out
iret
nop
add
sti
das
mov
cmpsb
test
dec
les
sbb
mov
mov
dec
xchg
xchg
mov
jns
pop
inc
adc
aaa
push
mov
jp
clc
mov
stc
mov
pop
jge
sahf
lahf
rcrl
lea
push
add
mov
or
add
stc
scas
jg
xlat
jecxz
lds
loopne
jb
mov
sti
jb
dec
ret
mov
cmpsl
pop
imul
sahf
loopne
or
push
cmc
jmp
jb
loopne
pop
cmp
stos
add
xor
adc
call
dec
sub
test
add
lret
lds
das
adc
mov
cmpsl
aam
dec
dec
js
dec
inc
ss
ljmp
cmp
add
sbb
mov
push
fdivs
dec
hlt
je
dec
xchg
subb
clc
shl
sub
mov
loopne
js
mov
mov
jmp
stos
loope
rcll
fwait
mov
or
mov
imul
icebp
ficompl
mov
movsl
and
pop
sbb
mov
les
mov
push
gs
mov
lock
and
lods
lock
stc
rcrl
popf
pushf
sbb
imul
pushf
outsb
fwait
push
into
arpl
stos
mov
mov
pop
mov
loopne
cmp
dec
push
jne
push
fistpll
mov
xchg
mov
filds
mov
testl
inc
xor
movsb
sbb
test
inc
adc
or
and
lds
add
int3
loop
adc
adc
lods
xor
int3
jecxz
pop
mov
stc
mov
iret
mov
xchg
mov
sti
or
jnp
inc
lock
push
es
mov
sub
in
and
shll
movl
sbbb
jge
and
and
lahf
jge
jb
sar
test
and
ss
cmpb
inc
pop
daa
daa
jno
xor
fisubrs
aaa
stc
sbb
incb
in
sbb
cwtl
aas
dec
xor
push
andb
jne
daa
push
sub
cmc
xchg
rclb
test
lcall
imulb
je
add
dec
cltd
sub
lret
repnz
inc
js
cmp
cmpsl
cld
pop
pop
mov
shrl
ror
adcl
fwait
out
adc
fistpll
out
test
mov
arpl
je
sub
xor
or
je
pop
add
xorl
push
lret
jno
cmpsb
xchg
add
test
fildll
imull
loopne
iret
mov
out
cmp
decb
out
bound
call
loopne
icebp
shll
fdivp
mull
lcall
jbe
add
stc
mov
fsts
sub
jge
mov
xchg
or
mov
sub
sti
bound
or
xor
push
xor
rep
shll
or
out
add
into
cs
push
pop
pusha
fidivrl
and
pop
jp
mov
push
daa
mov
fsubrl
sbb
xchg
push
inc
cmp
xchg
shll
or
xor
mov
or
pop
or
jge
pop
sub
movl
ret
inc
or
xor
ja
repnz
or
adc
insb
xor
lcall
cmp
bound
mov
in
xorl
orl
loopne
clc
fildl
and
ss
cmp
mov
mov
loop
xor
pushf
and
mov
cmp
lret
fisttpl
es
out
shll
mov
stos
fldl
sub
xchg
shll
mov
pop
repnz
lcall
cld
shl
shlb
lock
mov
jne
addr16
mov
sub
mov
sti
orl
rol
je
pop
push
jle
jb
dec
jne
pop
mov
inc
fdivrs
pop
or
add
lods
or
in
jge
in
cli
dec
gs
movsb
mov
insl
mov
cmp
push
test
jns
push
subb
out
icebp
cwtl
test
cmp
stos
mov
andb
sub
cltd
nop
and
scas
lahf
stos
das
pop
adcl
xor
mov
not
xor
outsb
shrl
cld
aam
push
movsl
xor
clc
xchg
mov
fmull
cmpsl
in
xor
push
xor
xor
fdivl
and
mov
stos
or
stos
mov
arpl
outsl
jo
inc
mov
push
out
pop
pop
scas
sub
gs
ret
dec
cmp
xor
pop
mov
insl
in
or
xchg
inc
fst
popf
out
ja
inc
imul
and
lods
repz
clc
popf
in
inc
push
fs
jmp
cmp
repnz
in
jg
and
xlat
popa
shlb
mov
in
mov
cmp
mov
push
dec
pusha
jp
cmpsb
ror
dec
mov
mov
sahf
out
pop
dec
lods
movsb
sub
fucomp
sbb
or
mov
outsl
test
movsb
xchg
out
mov
jg
test
test
aaa
sub
add
idivl
push
sub
cmp
mov
mov
call
pop
add
in
lods
sbb
aaa
dec
hlt
aam
inc
xor
sub
push
pop
jbe
shlb
or
xor
ret
jge
sub
inc
pushl
call
mov
inc
xadd
jnp
adc
mov
neg
movsl
lods
inc
and
clc
adc
outsl
jns
pushl
mov
repnz
scas
call
xor
xchg
mov
push
or
lret
sbb
mov
popf
lods
jo
mov
and
shl
xor
jnp
add
fimull
jmp
xchg
daa
inc
ret
in
dec
lahf
pop
fmul
nop
outsb
adc
movsl
sub
vmwrite
mov
inc
adc
mov
rorb
pop
and
xor
daa
xchg
pop
mov
push
int
notl
xchg
test
das
sbb
push
push
cmp
fdivr
cmp
dec
stos
sti
inc
scas
push
jno
in
lret
or
dec
push
push
lret
pop
xor
xor
lcall
les
xor
jno
mov
pop
mov
inc
push
pop
int
in
lcall
xchg
ror
adc
test
pop
mov
popa
test
mov
call
mov
add
or
or
xchg
xchg
aad
ja
out
xchg
fbld
inc
push
dec
scas
push
push
jns
push
popf
icebp
or
sub
nop/reserved
push
inc
popl
pop
and
jb
sbb
lock
and
pushf
xchg
cli
mov
or
fisubrs
dec
sub
xchg
mov
aam
inc
clc
lock
inc
jns
pop
clc
test
mov
shlb
push
sub
je
in
in
dec
lods
adc
ljmp
test
xchg
test
cmp
popf
jb
lods
sbb
movsb
push
popf
mov
sbb
mov
inc
test
xchg
cmp
sarb
mov
sub
and
sub
cs
push
ja
or
cmpsl
and
jns
sarb
mov
sbb
or
push
fmull
dec
inc
jae
hlt
ds
out
loop
shl
addr16
in
adc
pop
inc
cs
out
add
jns
dec
sub
sti
cmp
push
imull
and
sub
mov
sub
or
mov
lds
mov
cmp
xor
mulb
and
add
out
sbb
lods
cld
cli
dec
mov
and
adc
fisubs
shll
mov
jns
fildll
ljmp
ss
mov
out
stc
jbe
add
jb
xor
mov
jno
inc
dec
sub
xlat
add
popa
xor
jnp
insb
aaa
inc
push
sub
and
xchg
push
add
jb
in
cld
cli
mov
mov
rolb
sar
push
sub
enter
adc
cwtl
lea
lret
scas
cmp
xor
inc
push
cmp
and
inc
sbb
push
pop
cmp
xor
xchg
pop
or
adc
mov
jl
sub
aas
repz
mov
popf
adc
jne
mov
popa
in
lods
cmp
leave
data16
or
mov
std
addb
sbb
xchg
push
iret
sbb
mov
xlat
add
mov
out
rcl
push
mov
adc
push
sub
js
nop
aas
sub
mov
icebp
cmpl
out
jne
xchg
insl
adcl
test
lret
mov
test
mov
popa
es
pop
mov
out
cmp
nop
jg
and
add
in
ja
mov
adc
xchg
cltd
sbb
sbb
cli
dec
sti
or
movsb
sub
cmp
inc
xor
mov
cmp
add
fldt
sbb
jne
mov
mov
nop
in
jp
jno
lods
dec
inc
imul
cmpsl
push
dec
sub
inc
push
and
push
sub
sarb
and
sbb
movsb
insl
mov
sub
sbb
xchg
cmp
pop
faddl
pop
and
pop
pushf
mov
or
inc
pop
arpl
sbb
pop
add
xor
and
loopne
rolb
rolb
scas
notl
pop
push
inc
cmp
cli
fildll
mov
push
das
push
sbb
mov
push
adc
sub
mov
mov
jg
enter
xchg
int
lods
out
adc
add
add
mov
out
mov
cld
outsb
jns
sarl
add
jle
or
pop
dec
xchg
jmp
lahf
mov
ret
sub
in
xchg
ss
cmp
dec
imul
pop
cmpsb
movsb
sbb
lock
lret
and
fucom
push
push
sarb
add
loop
mov
testb
aam
test
or
cmp
int
pop
lods
ljmp
or
cmpsb
sub
outsl
mov
jle
testl
pop
pushf
subl
adc
jmp
subb
add
cmp
es
lock
push
mov
xchg
pushf
mov
cmp
fisubs
lods
jno
aam
aam
push
lret
lahf
mov
and
mov
stc
dec
xor
or
add
mov
adc
mov
sti
in
sbb
push
pop
jecxz
sbb
cvttps2pi
add
shrb
loopne
aaa
cmp
sarb
mov
push
fistl
sti
jnp
or
frstor
dec
or
fildl
or
add
out
or
sub
pop
popf
imul
js
or
sbb
iret
pop
sbbb
xor
rclb
icebp
test
or
jbe
fsubr
out
cmp
daa
push
push
sbb
cli
dec
mov
lea
cmpb
das
add
call
sub
inc
loope
fwait
jo
inc
ljmp
mov
push
fcmovnbe
sbb
jecxz
enter
iret
lds
loopne
rorl
lea
rcrl
arpl
mov
jno
stos
cmp
xlat
xor
enter
jecxz
andl
jg
insl
add
in
call
test
push
adcb
cmp
lcall
fistpl
out
dec
xchg
mov
cmpsl
or
pop
std
sub
inc
movsl
rcl
in
mov
sub
pop
dec
sub
inc
in
call
jnp
jo
stos
lret
nop
and
gs
test
sbb
aad
and
orl
pushf
mov
cmp
pop
or
pop
popa
add
lret
lahf
mov
js
cmp
call
out
clc
mov
adc
or
cltd
push
inc
dec
sahf
and
pop
mov
xor
cmp
cmp
mulb
xor
aad
pusha
sbb
ss
mov
fimull
cwtl
xorb
jns
pop
mov
das
call
jmp
or
or
sahf
push
dec
std
fs
aad
inc
mov
popa
shlb
mov
xchg
mov
ds
nop
popf
adc
and
ds
imul
add
cmpsl
and
out
pop
add
nop
adc
jmp
sub
pop
add
push
or
mov
out
sahf
pushf
dec
push
mov
movsl
ljmp
das
mov
or
sbb
repz
clc
movsb
cwtl
mov
or
adc
cmpsl
leave
cwtl
insl
xchg
xchg
mov
add
and
into
aaa
cmp
xchg
out
ficompl
xor
cmp
jno
lds
pop
inc
cld
std
stc
enter
jmp
jmp
inc
stos
xchg
xor
lret
cs
cld
sub
lds
icebp
int3
cmp
cmp
jo
leave
cwtl
aam
ret
and
and
jg
sbb
or
pop
test
mov
fstpt
fstl
push
insl
test
stc
pop
movsl
loopne
aad
push
aam
sub
mov
js
mov
add
aam
mov
and
cwtl
mov
cld
xchg
adc
push
or
cmova
pushf
jno
mov
lret
push
roll
mov
ljmp
cwtl
movsb
cmp
stos
jmp
js
and
shll
mov
add
push
jle
sbb
rolb
dec
mov
sub
push
mov
movsb
pop
jmp
lret
out
adc
xchg
out
sub
icebp
add
repnz
push
xor
adc
pop
pop
movsl
xlat
gs
aaa
std
mov
xchg
das
cmpsb
int
push
inc
and
push
or
pushf
test
and
or
cmpsb
fs
jns
sbb
test
sbb
or
pop
notl
sbb
add
mov
sbb
xchg
stos
push
rcll
rolb
mov
mov
ret
test
dec
dec
pop
repnz
hlt
mov
test
dec
addb
stos
lret
int
xor
sbb
pop
aaa
es
bound
mov
aas
rcrl
aam
test
addr16
dec
fwait
and
xor
ss
arpl
sbb
cwtl
push
xchg
pop
or
jmp
fadd
pop
mov
or
jns
adc
adc
test
mov
pop
cmp
xor
mov
mov
dec
nop
pop
lar
jns
mov
sbb
pop
flds
push
or
fsub
int3
in
xor
add
mov
lds
leave
sbb
pop
dec
sub
adc
ficoms
or
cmc
cmp
jo
mov
enter
fisttpl
mov
mov
sbb
inc
stos
fldenv
pusha
jns
fdivrp
pop
pop
enter
dec
and
mov
lods
sbb
bound
push
enter
sahf
inc
inc
test
loopne
push
movsb
cwtl
cmp
ljmp
fiadds
mov
push
sbb
dec
outsl
clc
jo
sti
leave
push
nop
pop
cmp
mov
or
pop
leave
xchg
fimull
lods
nop
mov
enter
inc
hlt
jecxz
arpl
in
push
jle
pusha
push
pop
jg
mov
push
test
loop
mov
lahf
rcll
stos
jmp
jp
cmp
aam
xor
mov
dec
lahf
dec
mov
and
inc
push
in
cmp
cltd
push
mov
and
cmp
mov
sbb
and
fnsave
cli
movsl
jbe
push
loopne
dec
dec
mov
aaa
dec
or
jecxz
neg
mov
jle
jecxz
aad
pop
bound
sti
iret
mov
jns
xor
sarb
in
ss
idivl
jae
mov
xchg
dec
les
xor
sbb
add
call
imul
xchg
xor
rorb
push
cmp
imul
fisubrs
shrl
add
adcl
outsl
aas
insb
lahf
jnp
aas
lods
push
addl
dec
or
in
movsb
ss
pusha
xor
loop
leave
xlat
ja
jecxz
jge
mov
xchg
xor
pop
sbb
cmpsl
push
inc
test
sti
cmpsl
mov
dec
fnsave
popf
or
cmp
rolb
cmc
dec
pusha
dec
call
and
ss
xor
sbb
xor
lret
loopne
sub
xchg
repz
and
add
jae
lret
or
mov
iret
pop
sub
mov
scas
lock
ret
push
fwait
lods
das
in
push
pop
roll
xchg
jb
frstor
out
aad
js
mov
add
sahf
xor
and
in
sbb
fimuls
stos
mov
mov
mov
jns
out
sti
xchg
mov
sbb
dec
lods
pop
mov
mov
adcl
mov
repnz
xor
cmp
pop
sbb
adcb
fcmovb
loop
test
and
push
das
outsb
sti
cmp
cmp
sub
movsl
adc
call
daa
sahf
and
cwtl
les
popl
imul
in
mov
dec
xor
xchg
imul
push
mov
lock
mov
lcall
xchg
xlat
xor
pop
jne
mov
lret
push
aas
std
xchg
repnz
aad
push
leave
lock
and
test
xor
xchg
je,pn
stos
out
iret
xchg
push
adc
pop
xchg
cmpsl
hlt
jp
xor
in
loope
mov
rcr
jae
xor
dec
lea
mov
fmull
inc
push
es
outsb
jecxz
cli
stos
sbb
je
adc
xlat
fbld
push
out
mov
insl
pop
ret
in
fsubrl
ja
dec
pop
sbb
xchg
jne
clc
lods
xchg
lret
pop
aas
sub
out
popa
mov
insl
daa
pop
test
cmp
adc
push
in
rolb
repnz
js
fucomip
dec
arpl
lret
enter
loop
mov
fcomps
sub
or
xorb
sbb
and
pop
fnsave
test
out
mov
nop
movsb
add
mov
clc
mov
fcmovne
add
aaa
xchg
mov
sub
xor
pushf
mov
js
test
xchg
or
lret
andb
push
xchg
insb
sbb
pop
std
daa
and
filds
lret
mov
enter
lods
fisubrl
scas
and
push
add
repz
mov
mov
pushl
ljmp
dec
ud2
das
stc
pop
out
cmp
add
xor
sbb
adc
pop
add
cmp
out
insb
cmp
outsl
jle
inc
gs
mov
cld
push
shrb
test
cmp
addr16
jle
and
cmp
fcomps
shlb
mov
dec
dec
inc
hlt
setno
push
scas
out
push
lret
icebp
sbb
cmpsb
jns
bound
sbb
and
test
xchg
and
jo
leave
inc
mov
cmp
je
test
mov
xchg
je
int3
push
and
adc
adc
inc
sbb
or
fdivl
push
test
mov
out
loopne
sub
adc
add
add
data16
in
sbb
cmpl
mov
pop
adc
loop
and
and
xor
and
into
pop
lds
sbb
or
inc
add
enter
pushf
sbb
test
fucomi
add
or
lock
inc
out
adc
insl
cmp
mov
mov
pushf
fldcw
rcrl
jecxz
loopne
fwait
jl
sub
and
mov
out
out
add
and
jo
jmp
xchg
ret
out
ret
sbb
int
and
loope
aam
xchg
cmp
jae
sub
pushf
out
pop
adc
sbb
inc
push
adc
hlt
stos
jo
mov
in
cmp
test
inc
scas
fmuls
pop
adc
jmp
repnz
dec
cltd
popf
add
or
out
scas
and
in
or
aad
stc
leave
loope
inc
aaa
sbb
arpl
xchg
fwait
mov
xchg
out
icebp
jmp
into
cmp
stos
mov
iret
into
pop
jb
aas
call
mov
test
cmpsb
out
testl
sbb
rclb
dec
or
movsb
xchg
hlt
or
push
cmp
loopne
fs
fists
cmp
push
dec
and
out
leave
lcall
daa
neg
inc
enter
xor
mov
pop
fcompl
xchg
mov
mov
dec
mov
aas
and
xchg
sub
fcoms
vmulps
std
iret
pop
stos
push
out
sub
dec
adc
xor
mov
jp
lcall
adc
cmp
xchg
cmp
mov
xor
sbb
scas
jmp
pushf
push
pop
xchg
daa
sarb
gs
jg
out
push
popa
xchg
std
adc
imul
lods
or
fdivrs
adc
inc
push
mov
jnp
mov
or
lret
dec
or
and
aam
testl
sbb
jo
insl
pop
loopne
xor
aaa
addr16
stc
mov
cmp
sub
mov
out
xor
sbb
lahf
and
sbb
mov
xor
shl
dec
push
push
pop
sbb
cmpsl
or
sbbb
sub
mov
fcoml
test
jb
popf
nop
jmp
int3
push
and
dec
xchg
pop
sub
outsb
jo
inc
mov
mov
xchg
sub
outsb
add
mov
out
push
scas
fbld
imul
add
add
inc
push
or
jmp
mov
sarb
xlat
in
mov
fwait
lea
mov
pop
clc
popa
aam
test
mov
shlb
jmp
dec
jae
hlt
loopne
test
push
mov
xchg
aas
dec
add
jo
add
adc
push
jo
adc
and
stos
test
iret
sbb
std
aad
es
in
pop
gs
inc
adc
cs
loopne
mov
cmp
mov
add
jle
jl
push
cmc
jne
stc
in
aas
sbb
lea
mov
xchg
add
xor
pop
mov
mov
sti
xchg
dec
push
stos
mov
insb
cltd
xchg
add
cltd
sbbl
xor
leave
cwtl
xchg
leave
adc
adc
orb
pop
bound
lock
xchg
mov
push
std
add
cs
das
jg
leave
or
mov
and
cmp
xor
mov
and
inc
adc
jnp
sub
xchg
inc
cld
push
xchg
xor
fs
pop
sbb
ljmp
push
fdivr
xchg
jmp
or
push
test
stc
xchg
adc
push
sahf
sub
test
pop
adc
std
sub
hlt
inc
xor
cmpsl
std
pop
out
arpl
rol
mov
mov
bound
orb
ret
mov
add
outsl
scas
into
xor
aad
loopne
negb
mov
lods
mov
lea
mov
sbb
test
outsb
lods
inc
fs
add
sub
sbb
sti
adc
ja
adc
xor
sub
push
fdivrp
imull
cmp
xor
lahf
dec
xchg
fmull
shlb
push
jae,pt
mov
aam
int
roll
cmc
mov
pop
xor
mov
bound
add
cmp
mov
inc
mov
mov
out
add
jmp
pop
or
jmp
add
xchg
adcb
jl
push
mov
xor
pusha
sbb
aad
test
inc
ja
gs
in
sbb
out
adcb
sti
fbld
sub
pop
jns
jb
mov
and
push
lret
cs
test
test
jb
dec
jle
and
mov
js
mov
and
fists
lahf
imul
cld
cmpsb
filds
div
jns
sets
mov
lahf
rorb
icebp
pusha
cmc
mov
sub
add
push
out
add
jge
sbb
or
movsl
sar
sbb
mov
lock
ret
sbb
fdivrs
daa
in
das
mov
lea
pop
mov
mov
mov
mov
fsubs
jns
mov
sub
cmp
and
sub
cltd
and
mov
sbb
push
sti
sahf
sub
push
int3
jae
gs
ja
and
mov
in
divl
daa
inc
ficoms
dec
cmp
xorb
scas
pushf
dec
aam
and
in
test
cmc
pop
sub
push
dec
add
inc
push
adc
bound
and
push
dec
sbb
sbb
lahf
stos
or
and
inc
dec
movsl
mov
jle
sti
push
push
adc
inc
and
sbbb
stc
cltd
es
pop
sbb
mov
mov
pop
cmp
jl
pop
mov
je
mov
insl
pop
mov
lea
mov
ljmp
insb
mov
xchg
jo
sbb
mov
pop
mov
push
push
mov
dec
xchg
jno
sbb
add
movsl
jno
stos
sbb
push
incb
outsl
push
out
test
insl
or
imul
dec
adc
sub
loope
in
mov
mov
sub
outsl
inc
cwtl
sub
xor
mov
mov
inc
stos
movsb
ret
out
loop
repz
mov
mov
fldt
bound
repz
aad
cwtl
bound
mov
les
test
cli
divl
push
push
lea
nop
cs
sbb
jg
pusha
ficoms
mov
int
movsb
outsl
movsl
push
or
enter
adc
mov
in
xorb
xor
xor
sub
mov
sbb
enter
gs
js
pop
cmp
inc
xor
iret
mov
xchg
mov
in
sbb
popl
stos
daa
add
cmp
lea
popa
mov
insb
pop
cmpsl
mov
repz
lahf
cwtl
std
dec
xor
jge
adc
sbb
pop
pop
sub
xor
and
ljmp
stos
mov
test
faddp
loopne
sbbl
push
dec
pusha
pop
repz
pop
add
push
mov
cmp
and
jge
shl
mov
adc
lock
test
push
aaa
inc
sub
cmp
dec
xchg
or
or
lock
push
call
pushf
add
ficoml
xchg
dec
inc
cmp
or
loop
add
cltd
cmp
add
mov
test
pushf
mov
adc
sbb
pushl
cmp
stos
xchg
movsb
pop
adc
cmpsb
lret
les
roll
and
shlb
lret
in
xor
or
add
or
dec
outsl
repz
decl
jle
mov
xchg
std
cwtl
adc
mov
std
pop
jp
mov
lret
mov
push
addr16
mov
xor
lock
xchg
cmc
cmp
sub
lods
cmpsl
cli
dec
or
or
inc
rorl
lret
les
pusha
leave
sub
sub
mov
negb
mov
adc
jmp
jge
sub
dec
in
repnz
pushl
jb
push
lea
sub
cmp
popf
push
in
nop
mov
add
inc
xlat
orb
and
cli
insl
shrb
leave
jbe
pusha
or
add
out
pop
test
and
push
xchg
push
cmp
mov
or
movsb
pushf
cld
fimuls
xchg
adc
cltd
into
inc
dec
jbe
mov
out
inc
test
jmp
adc
jmp
sbb
sbb
cmp
xchg
testl
mov
ret
aad
add
xchg
je
loope
lret
idivl
icebp
faddp
out
mov
ret
sub
es
or
divb
sub
xor
push
lcall
iret
pop
test
sub
lahf
enter
cs
xchg
js
mov
hlt
shlb
sti
testb
es
fimuls
inc
sub
jp
jle
adc
cmp
or
xlat
mov
jecxz
mov
xlat
sbb
dec
fistpll
ret
push
jns
jmp
mov
jo
xchg
pop
inc
stc
test
popa
xor
mov
inc
leave
dec
mov
xor
pop
xchg
mov
call
push
add
inc
imul
fadds
push
scas
cwtl
test
loop
pop
add
shlb
and
adc
adc
add
data16
or
lock
inc
mov
push
sbb
push
jmp
pushl
xchg
inc
xor
fisubs
jle
pusha
test
scas
je
fadds
aad
xor
rcr
clc
jg
add
pop
das
pushw
test
xor
xlat
lret
ds
scas
repnz
stc
sub
mov
inc
or
gs
fsubl
into
add
and
jp
cmp
repz
out
jecxz
iret
testl
ja
rolb
xchg
rorb
mov
cmp
xor
sub
adc
inc
push
xchg
lret
inc
push
into
sar
lret
fsubl
addr16
out
push
subl
adc
in
jl
stos
adc
in
test
test
test
subl
sbb
push
dec
jae
jo
ds
xchg
push
dec
xlat
push
push
sub
mov
addl
fsts
jns
fidivrl
sub
scas
dec
aas
lods
enter
cmp
stos
fdiv
icebp
dec
mov
bound
push
ja
cmp
or
outsb
cmp
jg
das
pop
fwait
jecxz
jne
mul
cmp
or
cmpsl
or
xchg
jecxz
or
xor
adc
xor
shlb
push
sbb
sbb
jmp
mov
je
clc
lret
push
nop
das
mov
push
mov
je
adc
mov
fmull
push
lock
cli
dec
movsl
hlt
jecxz
xchg
or
push
stos
popf
and
adc
jns
and
or
lds
out
in
sbb
mov
pop
lds
lods
into
xor
push
mov
add
andb
or
jo
lock
in
mov
sbb
out
int
cmpsb
out
dec
pop
pusha
je
lret
push
inc
inc
push
xorl
gs
adc
push
fildll
cmp
ds
push
xchg
gs
icebp
sti
adc
mov
outsl
mov
lds
hlt
and
popa
jno
mov
test
fnsave
fimuls
repnz
cmc
stos
pop
pushf
notb
and
divb
xor
xchg
add
pushf
xor
adc
imul
loope
xchg
add
cltd
fidivrl
addr16
sub
loopne
loop
outsl
sahf
inc
out
in
or
push
mov
mov
stc
nop
mov
sub
ljmp
cmp
jne
cmp
xchg
add
pop
stos
xchg
push
dec
mov
lahf
cmp
js
mov
xchg
aad
add
cmp
jbe
jno
stos
adc
jg
lret
arpl
sub
repz
adc
shl
xchg
adc
arpl
jl
loope
add
jo
lahf
xchg
leave
pop
mov
mov
push
les
lahf
loope
lds
ficoms
insb
pop
cmpsb
dec
push
outsl
mov
mov
push
pop
jns
enter
adc
jae
adc
adc
pop
clc
jl
les
sbb
pop
and
stos
mov
push
push
roll
jbe
fstl
mov
pop
shll
arpl
xchg
mov
aad
movsb
mov
xchg
push
loop
ss
ja
movsb
mov
imull
dec
add
and
fwait
xchg
mov
lcall
loope
mov
movsl
push
sub
push
add
adc
scas
add
pop
add
jecxz
xchg
fldenv
bound
cmp
int
insl
mov
cli
adc
sarb
cwtl
pushf
and
fidivs
mov
xrelease
mov
pop
mov
push
and
xchg
push
inc
mov
pop
sbb
xchg
xchg
pop
addr16
mov
and
cmp
xchg
hlt
mov
or
idivl
adc
xor
aam
pop
cmp
rcr
imul
stos
inc
push
cltd
js
rorb
mov
adc
mov
shll
xor
xchg
lock
adc
aam
out
lods
lds
out
push
fldl
loope
insl
jle
fcompl
insb
hlt
mov
sahf
xchg
loop
wbinvd
mov
call
nop
loopne
dec
test
pop
xchg
into
and
sub
inc
push
dec
loope
mov
pop
faddl
pop
cld
icebp
jae
mov
es
sti
or
mov
jge
insb
lret
adc
popa
pop
movsl
xchg
sbb
movsb
clc
cmp
jae
xor
sub
push
cli
out
imul
das
test
icebp
mov
pop
push
movsb
cmp
or
sbb
mov
out
push
mov
stos
mov
mov
push
sti
push
mov
sub
aad
xor
loopne
icebp
add
jb
lret
fcomi
cmpl
pop
or
sbb
xchg
sbb
add
nop
xchg
jp
test
pop
arpl
lods
pop
nop
cmp
ret
or
adc
jno
lret
add
prefetcht0
notl
push
push
jp
lret
fimull
std
push
xchg
loopne
cmp
xlat
mov
repz
jb
lea
icebp
and
cli
insl
inc
sbb
mov
cmp
add
jle
pop
sub
ds
xor
popa
pusha
movsb
push
inc
fwait
sbbl
shl
roll
inc
scas
xor
loop
add
in
pop
add
aaa
add
dec
test
ret
int
pshufw
lahf
add
int
jge
mov
insb
sarl
jbe
fsubrs
dec
repnz
jle
iret
pop
jo
push
dec
fsubrl
in
das
pop
and
xor
mov
sarl
pop
sbb
sbb
std
nop
fnstsw
pop
add
jmp
out
in
sahf
and
mov
inc
out
lret
dec
and
test
mov
jne
adc
sub
add
cmp
mov
rorl
adc
mov
ss
fisubs
mov
xchg
mov
dec
movsl
insb
mov
dec
and
mov
stos
std
roll
adc
adc
mov
je
out
fisubrl
push
pusha
mov
fs
mov
sbb
iret
mov
addr16
mov
inc
aad
cmp
cmp
jo
fwait
scas
dec
inc
sahf
outsl
outsb
lock
fs
add
xchg
arpl
xchg
and
xchg
sbb
arpl
mov
stc
adc
inc
mov
shrl
insb
add
add
fiadds
or
mov
sub
pop
mov
push
fcompl
inc
inc
mov
sbb
jmp
and
dec
out
xor
mov
adc
inc
cwtl
mov
inc
jge
pop
jge
pop
mov
gs
das
test
push
test
cmp
dec
or
aas
xchg
jb
stos
adc
lds
mov
es
pop
push
cmp
das
and
add
sahf
jmp
ret
mov
push
cmp
add
scas
ret
push
or
popa
adc
push
je
popf
xchg
movsl
adc
cmp
test
pop
mov
xchg
lahf
dec
inc
mov
std
clc
push
shlb
pop
cmpsb
add
mov
rcr
movsl
jge
mov
jae
adc
lret
dec
dec
mov
in
popa
add
out
not
jecxz
adc
ret
xlat
xor
aaa
sti
movsl
add
into
jecxz
ret
or
mov
jo
dec
mov
cltd
gs
jmp
push
test
xor
xrelease
mov
lahf
dec
dec
sbb
sbb
addr16
outsl
push
fbld
inc
xchg
hlt
dec
push
arpl
lods
jnp
je
je
or
je
inc
mov
addr16
push
push
add
adc
inc
nop
jmp
pop
pop
sbb
cmpsl
and
jecxz
mov
insb
jno
loope
loope
ret
lret
mov
arpl
jnp
jnp
loop
or
sbb
jmp
sbb
xchg
adc
jl
fldl
loopne
cli
cmp
jmp
mov
popf
enter
mov
xchg
cltd
mov
or
sbb
pop
sbb
lea
xor
hlt
mov
and
mov
or
cmc
fsubr
lds
fsubp
mov
stos
aad
cs
out
sbb
add
xchg
cmp
add
or
jno
jo
inc
dec
xchg
push
and
data16
mov
cmpl
inc
adc
mov
push
mov
out
pop
mov
sbb
sbb
jge
pop
daa
cwtl
outsb
arpl
fisubrs
sbb
std
xchg
jp
sbb
pop
loope
pop
push
mov
xor
pop
ss
cltd
into
aad
push
adc
fidivrs
sbb
loopne
mov
adc
cmp
cs
std
cmpsl
cmp
and
cmc
jns
xor
mov
rcrb
dec
test
mov
fildl
sub
push
pop
sti
xchg
in
fldl2t
jns
xor
imul
test
aam
mov
rcr
ss
jnp
loop
sbb
sub
xor
rcll
test
xchg
shl
pop
pushf
mov
loopne
mov
xor
jns
ja
mov
mov
lock
fimuls
jbe
push
mov
pop
dec
jp
and
sub
idiv
dec
orl
out
push
negl
jnp
jnp
int
in
inc
cmc
sbb
mov
jo
xchg
sbb
outsb
out
jp
in
insb
mov
repnz
mov
icebp
mov
ljmp
sbb
sbb
imul
dec
cli
mov
sbb
mov
dec
xchg
out
mov
xchg
stos
sbb
push
stos
inc
add
push
ds
push
pop
nop
mov
out
call
mov
repz
add
and
jle
xchg
and
jnp
sahf
dec
jo
pop
jmp
xchg
js
daa
adc
std
or
out
lahf
fisttps
xchg
mov
or
push
dec
dec
int
into
adc
cld
and
xchg
and
adc
mov
sbb
xor
or
mov
es
mov
sti
xchg
xchg
clc
push
sub
mov
aam
int
and
pushf
gs
icebp
mov
or
leave
lret
std
xchg
xchg
jbe
loop
mov
lds
mov
cmpsl
scas
mov
sub
adc
loope
scas
and
mov
sbb
fwait
pop
or
fadd
outsb
stc
imul
rorb
shl
fstps
fidivl
jo
scas
lret
pop
clc
fwait
lcall
icebp
mov
sbb
sbb
fistpl
loopne
lcall
insb
fs
jmp
inc
jnp
pushf
pop
dec
pop
iret
or
add
jnp
sbbb
push
adc
fwait
iret
inc
add
adc
ljmp
mov
loope
bound
add
xlat
cmp
in
andl
mov
call
fnstcw
mov
sub
into
outsl
aaa
mov
fidivs
out
sub
xchg
push
addr16
inc
add
jl
outsb
fsubl
fwait
test
jb
js
push
push
mov
mov
fists
pusha
lds
mov
or
mov
enter
pop
popa
out
lock
leave
mov
push
stos
mov
lcall
faddl
or
xor
nop
xor
and
jg
push
jle
cmp
sbb
adc
push
js
and
outsl
cli
cmp
rcll
dec
sub
xchg
mov
inc
adc
jmp
lea
push
push
fcmovne
int3
lret
mov
mov
adc
pop
das
xor
dec
xlat
dec
lahf
mov
mov
fidivrl
mov
sbb
xchg
sbbl
data16
stc
sub
pop
insb
mov
int
fcoms
pop
lret
andl
pextrw
pop
test
test
pop
mov
shll
enter
pop
cmpsl
dec
testb
test
loopne
mov
sbb
sbb
ret
xor
fsubrl
insl
mov
inc
pop
nop
or
add
sub
xchg
outsl
and
rorl
fcoml
cwtl
imul
enter
jnp
or
rcr
cwtl
dec
inc
adc
dec
out
std
add
jmp
jg
scas
mov
push
add
push
add
pop
pop
adc
add
je
sbb
fistps
insb
out
sbb
ret
or
mov
cmpsb
call
mov
hlt
xchg
mov
jl
cmpsl
cmp
pusha
xchg
lods
xchg
test
sbb
sub
xlat
je
dec
push
out
fs
sbb
pop
xlat
mov
mov
stos
lods
xor
inc
leave
cmp
movsl
ret
mov
sub
pop
ds
sub
out
sub
aaa
movsb
je
jle
lcall
daa
cmp
popf
nop
push
gs
or
mov
dec
and
cmp
mov
push
lahf
add
shrl
ds
mov
fisubs
jge
out
add
pop
push
or
les
push
xlat
cmp
push
std
jle
mov
jecxz
cld
data16
fildl
mov
dec
xchg
ljmp
jmp
imul
ds
nop
test
mov
stos
adc
sti
in
cmp
rcrb
mov
push
ret
and
jecxz
inc
js
mov
test
gs
out
cli
ljmp
mov
cli
js
mov
insl
sbb
push
out
sahf
mov
subl
adcl
fdivrs
mov
mov
xchg
ja
push
cwtl
das
ret
xchg
cmpsb
dec
and
add
lret
push
sub
pop
mov
mov
dec
push
fs
add
scas
shr
dec
push
imull
mov
push
jb
mov
sbb
cmp
out
rorl
mov
jne
cmp
and
sbb
mov
aad
ljmp
repnz
lahf
sub
rcrb
jbe
lcall
stos
roll
add
jl
inc
push
sbb
out
inc
jmp
sub
pop
icebp
pop
hlt
les
jmp
sbb
dec
push
clc
imul
lret
icebp
iret
jl
cmp
mov
pop
xor
push
cld
jmp
inc
sbb
test
loope
lea
mov
ds
or
mov
mov
fisubl
push
cmp
mov
mov
cmp
xchg
add
add
xor
adc
ljmp
ja
lret
out
inc
out
xchg
dec
std
mov
shl
mov
lea
lods
iret
mov
roll
add
and
mov
sub
add
adc
pop
in
mov
mov
rolb
xchg
dec
and
push
sbb
add
out
test
jb
out
into
push
cld
xchg
sbb
mov
or
cmp
push
out
sbb
std
mov
jg
xor
add
fisttps
js
mov
leave
das
nop
mov
in
jnp
xchg
mov
xchg
and
hlt
lock
lods
adc
sahf
or
or
pop
and
outsb
pushf
cmp
or
inc
jb
push
les
xchg
sbb
sbb
inc
sbb
mov
xor
xor
test
jno
loopne
add
cld
shlb
data16
push
dec
mov
and
pop
lret
loopne
dec
scas
sub
lods
mov
sbb
insb
rclb
sub
jne
xor
sbb
xor
test
iret
sti
mov
adc
jle
out
clc
fucom
mov
push
or
insb
mov
pop
or
dec
push
lahf
and
xlat
push
adc
negb
ret
lcall
pop
incl
sti
hlt
sahf
shrl
adc
cmp
sbb
or
mov
daa
idivb
mov
cmpsl
pop
clc
nop
jge
mov
sbb
bound
mov
push
sbb
sub
jno
xchg
sbb
push
movsl
mov
int
push
arpl
xor
leave
pop
cmpsl
js
or
inc
mov
jo
lret
mov
pop
pop
ret
dec
xchg
loope
std
dec
jnp
shll
stos
add
fdivl
test
rorl
dec
rorb
or
push
cmp
lcall
loopne
lcall
pop
in
xor
movsb
mov
ss
mov
xchg
out
das
pop
adc
pop
add
daa
or
cmc
mov
cmp
ja
or
mov
les
insl
shrb
lcall
je
mov
fildl
fdiv
test
andl
aam
fdivl
mov
xchg
aad
push
das
fiaddl
enter
rcll
adc
push
int
pusha
mov
push
cld
dec
pop
sub
ss
pop
insb
rclb
xchg
push
ds
sbb
adc
lret
hlt
xchg
scas
insb
mov
mov
jo
inc
mov
mov
dec
je
pop
cmp
arpl
in
sub
roll
mov
push
pop
daa
pusha
js
scas
mov
mov
je
add
imul
cli
lret
mov
mov
inc
add
push
or
jecxz
mov
pop
cmp
arpl
mov
inc
push
dec
data16
fldl
mov
dec
inc
ds
pop
ret
dec
inc
mov
jge
and
sbb
pop
movsb
xor
stos
pop
jne
sub
lods
sub
flds
ds
out
and
push
and
jecxz
in
jp
faddp
pop
stos
sub
fs
xor
sbb
aam
inc
dec
push
push
adc
stos
xlat
and
add
pop
stos
std
stos
and
jnp
movsl
cmp
clc
or
jp
sbb
mov
dec
dec
std
std
repnz
scas
fisttpl
dec
inc
stos
ret
clc
dec
inc
fistps
rorl
sbbb
stc
mov
push
dec
enter
loop
pop
shlb
cmp
fadd
or
lret
lcall
std
add
aam
xchg
push
jge
jmp
or
subl
jb
in
pop
pusha
dec
mov
jb
push
mov
out
or
cwtl
sbb
dec
rcll
dec
xchg
sbb
addb
loop
add
and
adc
and
les
loop
mov
aas
repnz
ss
push
inc
int3
push
push
fcompl
xchg
faddp
clc
add
les
push
mov
and
mov
stos
lret
ja
dec
mov
mov
nop
scas
cld
pop
jl
ror
add
xchg
xchg
jno
and
aam
pop
movsb
mov
jmp
push
sbb
dec
out
rcr
mov
prefetchw
mov
shl
xchg
aas
test
adc
adc
xchg
sbb
mov
mov
adc
mov
lods
mov
bound
push
pop
cli
jle
scas
les
je
nop
stos
subl
shll
stc
inc
repnz
sbb
xchg
and
sub
and
inc
inc
cld
and
jmp
movsb
loope
cmpsl
popa
dec
out
out
inc
dec
or
in
xchg
cltd
xchg
mulb
mov
test
lods
pushf
jle
push
dec
xchg
loopne
jg
mov
add
pop
into
mov
rorb
sub
pop
hlt
stc
lahf
jb
jge
cmp
pop
adc
mov
lods
bound
fisubl
add
rolb
cmp
fldt
rclb
lods
or
in
add
adc
or
icebp
sub
lods
push
movsl
sti
pushf
push
pop
movsl
sub
mov
pop
fcoms
lret
dec
sub
mov
xor
cmp
insl
jge
cmpsl
aas
adc
mov
outsb
int3
mov
jge
jl
add
neg
mov
inc
or
inc
sub
iret
pushf
add
sbb
std
jns
mov
cwtl
int
pop
jb
jnp
pop
loope
lods
sub
dec
lahf
dec
pop
lds
push
out
fnstcw
idivl
les
mov
or
mov
pop
repnz
adc
bnd
ficomps
mov
cs
mov
adc
mov
fadds
les
xor
mov
xchg
inc
or
xchg
inc
addb
and
test
ds
nop
jp
and
ds
add
ljmp
inc
cmp
in
pop
pop
sbb
std
mov
inc
into
in
mov
and
insl
push
pop
and
mov
push
fildll
add
and
hlt
pushf
daa
in
rcrb
mov
pop
cmp
leave
push
iret
xchg
dec
daa
or
gs
outsl
jl
jnp
mov
arpl
cmp
jmp
pop
lcall
add
aaa
mov
out
cmp
loopne
in
movsb
fs
shrl
es
ret
xchg
pop
je
aad
cmc
andl
aas
sub
push
scas
lahf
lahf
pop
inc
mov
xchg
insl
psrad
ret
jnp
arpl
sub
sti
outsb
sbb
iret
jb
sub
xchg
push
adc
push
aas
shll
jno
add
push
data16
xchg
add
sbb
xchg
fdivs
jne
jecxz
cmp
scas
adc
fildll
push
xchg
movsl
call
jmp
xchg
test
adc
push
cmpsb
inc
ljmp
jle
jp
out
cmp
cmpsb
enter
stos
idivb
leave
push
lods
scas
ljmp
adc
mov
mov
js
inc
push
or
js
jb
mov
mov
xchg
sub
roll
jo
popf
xchg
sub
test
cs
cli
int
in
test
ret
jns
scas
test
jmp
pop
mov
sbb
and
adc
xchg
push
leave
dec
popa
fwait
or
fdivl
stc
in
adc
inc
xchg
mov
xlat
mov
cmp
scas
jp
out
cld
cmp
sub
sarb
jp
cmc
lods
push
arpl
push
ja
cmp
sbb
clc
xchg
xor
push
sahf
out
inc
and
jmp
lds
xor
jg
subl
mov
push
insl
xchg
sbb
pop
cli
das
dec
ret
and
mov
sbb
popa
jecxz
xchg
scas
mov
cmc
inc
cmp
pop
push
repnz
push
cmp
cli
dec
mov
mov
cmp
clc
sbbb
or
inc
inc
pop
mov
add
lret
enter
sbb
xor
out
mov
clc
and
imulb
push
pop
divb
ja
stc
sbb
fldt
sub
sbb
testl
inc
lock
ja
jge
cs
repz
add
clc
dec
fldcw
loopne
neg
icebp
shl
pushf
clc
xchg
and
stos
mov
ret
jge
push
scas
ljmp
std
lahf
cmpsl
cmc
push
shll
dec
les
xchg
fldcw
aad
aad
add
mov
dec
aad
repnz
pop
dec
out
icebp
adc
enter
lods
lods
lock
jb
push
loop
mov
pop
mov
cmp
cmc
movsl
movsb
lret
push
sbb
jb
lea
or
testb
xor
push
pop
stos
push
sbb
cs
aaa
cs
je
into
pop
movsb
add
fadd
orl
push
rcrl
xchg
mov
popa
lahf
lods
add
xchg
mov
popf
loop
mov
lock
int3
lret
ss
or
gs
adc
mov
out
mov
ror
out
inc
xchg
xchg
inc
add
mov
loop
or
dec
push
adc
pop
or
and
test
mov
xlat
or
push
pop
mov
and
jl
insb
mov
hlt
mov
xchg
pop
inc
jo
adc
xor
test
icebp
loop
adc
int
mov
adc
add
mulb
enter
cmp
idivl
xor
sub
sarb
cwtl
sub
xchg
jae
int
std
ja
adc
sub
or
mov
jg
loopne
bound
adc
xor
filds
fisubrs
add
mov
rclb
mov
addr16
test
lea
sbb
xor
in
pusha
add
icebp
int
ds
push
lods
fistpll
movb
pushf
inc
jmp
xor
xchg
fwait
push
jecxz
xor
sti
pop
cmp
inc
bound
lret
cs
push
dec
into
jmp
cmp
lahf
push
dec
imul
xor
jg
outsb
fiadds
xlat
test
dec
jle
pop
push
test
retw
clc
mov
call
sub
leave
lahf
out
xor
clc
enter
in
imul
pop
rol
push
push
jge
pop
ss
mov
pop
in
divb
out
mov
adc
push
bound
push
into
jle
nop
imul
pop
push
sahf
fdivr
cltd
cwtl
dec
or
push
or
lods
mov
jmp
shrl
mov
inc
bound
out
mov
push
mov
pop
cmpb
add
mov
es
push
jg
xlat
data16
aad
fs
enter
jmp
push
mov
rclb
repnz
in
mov
aaa
int
jl
push
inc
orb
aad
push
outsb
and
xchg
xor
imul
cmpsb
in
sbb
sbb
les
js
or
aad
fwait
arpl
jbe
mov
xchg
mov
movsb
mov
jecxz
add
fdivr
repnz
sub
and
loop
and
lock
mov
jp
jp
addr16
movsb
stc
insl
and
ja
vpacksswb
pop
lcall
jl
out
or
xchg
and
aas
movsl
pop
outsl
push
insb
sbb
insl
lods
jns
ljmp
sbb
sbb
lret
aam
push
pop
in
stos
dec
add
cmp
xchg
and
inc
repnz
fistl
xor
push
addr16
scas
sahf
xor
push
add
les
into
mov
add
wbinvd
lret
subl
cmpsl
adc
sub
mov
popa
pop
or
mov
and
sub
or
fcoms
or
mov
popf
repz
shlb
pushf
jmp
js
leave
dec
and
or
gs
jle
repz
add
mov
lds
xlat
jle
test
aas
cmpsb
sbb
fs
pop
mov
out
jae
mov
inc
jge
loop
icebp
jne
pusha
adc
push
test
add
cmc
cmovbe
out
xlat
shll
push
cmpsl
dec
mov
add
add
popl
inc
or
pop
shrl
dec
or
lea
int3
xchg
or
pop
mov
or
lcall
push
call
ret
sub
jle
jnp
mov
pop
push
ljmp
mov
or
inc
frstor
shll
sub
mov
ja
movsl
fisubrs
cld
xchg
aaa
jbe
ret
pop
scas
push
xchg
mov
out
rolb
jne
pop
sub
stos
push
out
cmp
cmp
or
repnz
das
or
sub
jmp
and
mov
scas
test
mov
mov
dec
dec
out
push
out
das
clc
sub
iret
mov
mov
mov
addr16
leave
xor
les
in
popf
pop
mov
scas
outsl
js
fcompl
mov
sub
repnz
xor
insl
sti
push
push
xor
movsl
popf
push
fwait
add
push
mov
inc
imul
int3
add
ffreep
and
dec
call
loope
iret
cmp
sbb
sub
and
xchg
call
mov
js
shll
mov
leave
data16
rolb
inc
dec
push
lahf
sub
scas
addb
das
inc
inc
pop
lods
fsubrl
jb
imul
fwait
aas
dec
movsb
repz
out
jo
jge
ffreep
call
cmp
adc
xchg
adc
or
mov
cmc
sti
insb
lea
dec
sub
ljmp
fsubl
lahf
rolb
and
xlat
dec
or
pop
ds
rcll
in
popf
push
pcmpgtw
xlat
cli
dec
das
cmp
dec
or
out
mov
ret
sbb
cmp
jmp
movsl
das
mov
mov
mov
mov
aam
inc
arpl
dec
jle
cmp
mov
out
adc
rorl
cltd
lods
push
aaa
sub
sar
mov
inc
popf
enter
ljmp
shrl
and
sahf
popl
inc
mov
push
xchg
into
adc
sbb
out
dec
sbb
jne
add
test
sbb
cmp
insb
push
test
std
mov
xchg
pop
push
jp
or
lock
mov
jbe
mov
popa
pop
sbb
mov
in
adc
adc
or
sbb
dec
mov
repz
nop
cs
cld
dec
stos
mov
and
adc
insb
adc
imul
lods
aas
sahf
jae
jb
dec
mov
out
mov
mov
push
xchg
pop
mov
in
jecxz
bound
adc
adc
arpl
lcall
stos
adc
pop
mov
cmpsb
sti
mov
mov
sub
pop
pop
test
orb
cwtl
xor
jmp
out
ljmp
iret
inc
dec
inc
fadds
pop
in
in
insl
cmpl
insl
sbb
fdivl
outsl
icebp
push
decl
sbb
jmp
xchg
lods
lods
lock
mov
mov
sbb
mov
pop
pop
lock
daa
popf
mov
sub
aad
sub
jnp
sti
mov
add
xchg
ja
aad
jmp
mov
cli
dec
movsl
lret
xor
mov
lret
divb
pushf
jl
jns
mov
out
mov
xor
iret
jg
cltd
sahf
pop
xor
jmp
xchg
rcll
cmp
jo
stos
mov
mov
push
in
negb
ret
mov
cwtl
mov
cmpsl
cmp
jno
bound
cmp
scas
icebp
jae
or
sbb
imul
insl
push
sbb
jns
xchg
loopne
sbb
cmp
das
repz
dec
into
xchg
mov
jb
or
sahf
out
dec
xchg
leave
pusha
stos
cmpsb
call
pop
daa
out
fcomi
xor
pop
test
jae
je
mov
aaa
sti
adc
mov
adc
push
adc
insl
mov
test
sahf
ds
push
sbb
cs
or
dec
inc
lcall
loope
cs
mov
outsb
inc
loop
jge
adc
pop
in
jno
in
divb
push
inc
jns
push
outsl
pop
push
mov
aam
xor
xchg
imul
adc
aam
into
xchg
cmp
or
js
mov
das
push
roll
cltd
push
sub
or
fdivrs
or
test
push
daa
xor
out
sbb
inc
jle
roll
clc
out
lods
dec
mov
test
cmp
push
and
mov
push
or
add
fisttps
arpl
pop
popf
mov
pop
imul
lret
mov
movsl
jno
out
das
shrl
jae
push
xor
add
xchg
xchg
pushf
test
pop
jb
psrad
sub
cmp
pushf
xchg
mov
or
shll
adc
loop
repnz
sbb
cltd
sbb
in
inc
pop
leave
sub
mov
mov
mov
idivl
dec
push
lahf
scas
xchg
in
imul
int
shrb
push
int
adc
fisubs
mov
mov
add
jae
mov
decb
imul
mov
pop
add
mov
jmp
jne
cwtl
popf
cld
lret
enter
test
test
lahf
and
jle
int
pop
je
dec
lock
in
iret
mov
or
sub
rol
test
pop
stos
cmp
adc
add
out
add
xchg
sub
xor
pushf
pusha
out
lahf
daa
inc
xchg
enter
push
sbb
push
push
mov
sbb
sub
jp
mov
cs
adc
and
out
cld
loopne
int
and
mov
xchg
mov
add
std
call
pop
in
dec
add
call
in
ljmp
push
jmp
add
xchg
and
outsb
or
push
insl
cmpsl
call
jbe
fidivl
jmp
addb
int
xor
jge
jae
js
adc
pop
or
mov
loope
cmp
cltd
jbe
pop
and
dec
sbb
jecxz
inc
and
std
push
scas
std
orb
dec
pop
mov
dec
mov
jecxz
add
mov
jg
shrb
nop
inc
aaa
and
out
pop
out
xlat
movsb
pop
add
jp
bound
push
inc
mov
inc
mov
neg
mov
into
arpl
xor
push
pop
lods
ds
sbb
push
dec
push
cs
mov
clc
hlt
mov
ss
fs
xchg
shll
sbb
or
xchg
mov
popf
cmp
jns
out
in
pop
push
dec
push
ror
hlt
aam
xlat
pop
loopne
push
ret
push
fdivrs
fidivl
xor
loopne
mov
mov
mov
jb
cs
sub
lahf
xor
xor
add
mov
ret
xchg
js
cmpl
ja
stc
inc
das
lds
fildl
leave
out
out
add
add
jne
xor
cmp
mov
decl
in
or
in
ret
xor
dec
pop
rcrl
cmp
test
mov
mov
dec
push
xchg
int
cmpsl
ja
jl
pop
dec
push
stos
pushf
das
xchg
add
sub
in
repnz
dec
cmpsl
sbb
pop
rolb
cmpb
sub
test
push
push
pushf
fsubrs
fsubrl
mov
xorl
push
testl
cmp
xchg
popf
nop
push
mov
movsb
mov
pop
lret
stos
lock
xor
aad
push
inc
add
pop
jecxz
popa
lds
mov
dec
in
cmp
sbb
int3
andl
mov
ret
in
int3
mov
rcrb
xchg
flds
arpl
add
mov
mov
mov
pop
inc
enter
push
xor
push
push
xor
jne
pop
adc
gs
xorl
inc
cmovae
lahf
mov
cmpps
repnz
mov
mov
mov
mov
jb
push
xlat
stc
pop
nop
push
repnz
jae
push
frstor
stc
xchg
mov
test
inc
or
push
add
sbb
add
sahf
cmpsb
push
sbb
push
dec
and
add
adc
mov
add
xchg
push
fsubp
inc
cmp
mov
cltd
jg
xchg
ljmp
push
sub
call
pop
test
sbb
loopne
dec
test
leave
hlt
aas
cmp
jecxz
aaa
js
test
loope
or
mov
jae
mov
adc
xor
mov
test
mov
fnsave
mov
inc
je
in
mov
dec
data16
jecxz
ja
outsb
mov
dec
pop
test
mov
push
movsl
aaa
push
scas
idivl
or
in
inc
mov
outsb
lods
dec
mov
add
sbb
mov
sub
mov
das
fstps
enter
sbb
int
mov
xchg
push
jne
mov
cmpsl
scas
fs
and
jne
and
push
and
fisubs
in
test
test
aaa
push
push
div
mov
jl
xchg
push
loope
movsl
jmp
adc
lds
lea
sub
lock
add
fisttps
rcl
xchg
mov
mov
xor
pop
mov
in
push
or
out
or
or
sub
pop
bound
mov
xchg
mov
jmp
ror
xor
ss
fs
ds
mov
enter
fcoms
mov
adcb
mov
jmp
in
or
push
pop
dec
in
das
addr16
leave
adc
push
adc
push
or
xorb
ja
nop
std
xor
mov
inc
fcmovbe
nop
ljmp
ds
outsb
sarl
iret
push
pop
sbb
idivb
pop
jmp
push
jbe
cmpsl
jns
dec
sub
repz
sbb
inc
push
add
sbb
ret
push
aas
test
sbb
adc
sbb
mov
rolb
and
fs
jbe
movsb
jmp
adc
push
xchg
mov
push
dec
fdivl
jne
pop
cmp
mov
or
adc
lcall
ljmp
jno
mov
mov
or
jl
das
xor
jmp
mov
and
fisubl
mov
xchg
pop
jecxz
test
cmp
mov
fidivrs
xor
rorb
mov
lret
xchg
sbb
icebp
dec
sar
sbb
pop
mov
arpl
vmwrite
pop
pop
jb
sub
aam
divb
ljmp
adc
pop
mov
or
mov
add
mov
gs
sbbl
loope
jo
notb
inc
insb
dec
out
out
ja
nop
jp
push
push
pop
add
divl
iret
push
shlb
aas
sbb
call
xor
ret
loop
mov
jmp
lret
jo
xchg
dec
in
ret
xchg
cwtl
and
or
mov
pop
gs
and
sub
aas
imul
loop
fwait
mov
shrb
rcrb
add
jbe
enter
pop
xlat
cli
adc
insl
scas
mov
inc
faddl
jecxz
and
inc
cmp
fidivrl
push
and
je
jmp
add
out
dec
fldenv
mov
rcr
or
cmpsb
into
lret
add
xor
inc
das
call
push
in
jp
or
push
idivw
flds
mov
add
repnz
and
btrl
mov
sbb
imul
jne
cwtl
cmp
iret
cmpsl
mov
mov
xor
icebp
loopne
mov
inc
xchg
mov
icebp
outsl
and
xor
and
and
or
jnp
add
mov
add
ds
jl
fildl
pop
in
push
cwtl
push
std
popa
xchg
jmp
fcoms
or
inc
inc
and
sub
add
push
enter
cmp
push
mov
hlt
repnz
and
mov
xor
cltd
adc
mov
dec
aam
loopne
push
into
adc
addb
adc
leave
adc
imul
sub
mov
outsb
xchg
je
ljmp
mov
je
mov
adc
cmp
jmp
movsl
std
push
mov
movsl
push
inc
dec
add
push
call
or
jne
cmpsl
add
insb
pop
fstp
icebp
test
inc
jle
pop
int
les
xchg
adc
push
rcrb
push
loope,pt
ret
out
jle
inc
pop
fsubs
xchg
ljmp
movsl
and
inc
fadd
mov
daa
mov
rorl
sahf
push
dec
in
imul
loopne
loope
sbb
cltd
fnsave
stos
add
mov
mov
pusha
xchg
pushf
push
ljmp
ret
frndint
pop
fadd
or
lcall
ds
stos
rcr
push
lods
jae
shlb
xchg
jno
sub
sbb
dec
lcall
mov
stos
loopne
std
loopne
out
add
cmp
cmp
jo
rdtsc
xchg
fidivl
insl
fsubrl
cmp
mov
mov
sub
aas
cmp
push
mov
push
xchg
shrl
add
sbb
cmc
ret
ds
outsb
inc
imul
or
ss
pop
aaa
dec
mov
nop
out
cmp
cmp
mov
push
dec
mov
sbb
lahf
rorl
sub
inc
pusha
mov
xor
test
aaa
sbb
jmp
aad
or
sar
push
shl
int
pop
inc
mov
jo
and
arpl
sbb
jp
mov
subb
stos
sbbl
push
scas
gs
and
das
shlb
fildll
roll
movsl
jle
xchg
pushf
push
push
push
add
dec
push
sbb
mov
and
cmp
out
and
cmc
pop
cmp
daa
insb
ja
pop
in
lret
mov
adc
out
lret
sahf
filds
out
dec
imul
movsl
clc
repnz
addr16
push
cmp
inc
mov
mov
push
inc
in
ds
sbb
mov
in
pop
push
dec
jo
je
rclb
data16
inc
sbb
xor
mov
mov
scas
fnstsw
or
push
push
jne
xchg
fwait
out
adcl
cmc
or
lret
cmpsb
pop
adc
jle
fistl
dec
sub
call
sahf
mov
dec
sbb
and
in
mov
jb
xchg
lds
inc
add
jae
sbb
lea
mov
mov
dec
xor
xchg
stos
push
out
scas
or
test
sbb
pop
push
add
out
jg
sti
pop
sbb
mov
dec
mov
testl
mov
mov
mov
out
test
jp
sbb
popa
fists
xchg
and
lea
jb
mov
insb
dec
neg
push
insl
pop
outsb
adc
out
out
ret
adc
cmpb
iret
cmc
data16
mov
mov
mov
xor
stos
js
jb
adcl
sbb
inc
inc
ljmp
or
inc
inc
mov
sbbl
sbb
imul
cmc
cmp
jns
sub
xor
out
in
dec
xlat
dec
lahf
stc
pushf
rcr
aad
aaa
negl
push
and
es
lahf
mov
daa
sub
shrb
sub
es
mov
out
mov
jmp
scas
test
dec
movl
test
rorb
std
mov
jmp
add
add
fstpl
test
fwait
or
inc
mov
idivb
push
cmc
add
je
rcl
repnz
pop
addl
push
sahf
cmpps
fisttps
cs
ds
sbb
xor
jnp
xchg
xor
in
add
and
sub
repnz
aaa
and
sti
sub
lea
int
mov
ffree
lret
push
shrb
dec
into
movsl
iret
fs
jb
adc
popf
jmp
cmpsb
xchg
sti
test
push
lahf
jecxz
js
repnz
fimuls
dec
jmp
adc
jl
mov
jecxz
dec
daa
in
sarl
push
and
insl
dec
jb
les
xchg
cmp
xchg
icebp
scas
popa
mov
xchg
and
and
and
mov
mov
lret
pop
movsb
imul
inc
movsl
jp
pop
sysenter
idiv
ret
xor
stc
pushf
sub
push
dec
out
mov
pop
decb
iret
shll
in
into
std
cmpsl
lret
or
sub
outsl
lret
pop
xor
xor
les
sub
lret
push
inc
loop
data16
adc
jno
inc
popa
inc
test
rorl
mov
mov
mov
xor
jecxz
dec
cmp
scas
fsubrs
test
stos
mov
flds
cld
cmp
aas
std
out
xchg
in
lcall
hlt
lock
in
repnz
sarb
shll
jle
nop
mov
jbe
pop
mov
fwait
idiv
in
outsb
dec
cmp
pop
in
movsl
dec
or
mov
jae
or
lds
adc
enter
add
adc
setg
inc
into
inc
mov
addr16
add
mov
enter
call
jne
mov
push
xor
xchg
ja
sub
sub
pop
sbb
add
outsl
leave
jb
mov
adc
in
mov
mov
lcall
and
fists
jae
loope
pushf
test
movsb
cvtps2pi
imul
shlb
ror
adc
jno
cmp
jge
push
jb
xchg
fnstsw
test
scas
pushf
sub
xor
pusha
sub
xchg
sbb
mov
xchg
pop
inc
jns
shr
lret
mov
std
lods
dec
cmp
cmpsl
jnp
sbb
sbb
in
call
or
jecxz
movsb
pop
cmp
testl
test
pop
pop
sub
add
fstpt
divl
pop
add
cmp
addr16
out
out
pop
and
sub
or
mov
rolb
bound
jecxz
cmpsl
test
jmp
push
cmp
rcl
and
aas
pop
rcrl
cmp
rcl
lods
loope
inc
xor
jo
subb
lds
movsb
popf
cmc
cmp
lcall
dec
push
out
or
mov
lcall
and
or
sbb
mov
xchg
in
add
aas
shr
insl
leave
aam
or
inc
or
dec
scas
aaa
stc
cmp
xchg
daa
mov
aaa
sbb
ror
dec
jbe
es
icebp
xchg
push
fldcw
mov
add
add
add
ljmp
iret
out
popa
xor
mov
or
mov
int3
push
cmc
cwtl
cmp
in
mov
jmp
lods
sub
leave
adc
pop
in
daa
out
sahf
out
fbld
pop
dec
out
xchg
pop
jae
sbb
xor
push
jecxz
lock
xchg
scas
sub
fnsave
and
pop
scas
sub
or
xchg
add
add
lea
pop
or
fists
in
out
je
imul
mov
test
mov
mov
ja
jo
xor
pusha
push
push
fiaddl
icebp
mov
mov
pusha
cmpsb
clc
aam
sar
cmp
or
xor
out
add
xorb
xorb
out
mov
pop
dec
rcrb
lret
xchg
sub
or
mov
js
sbb
addr16
sahf
cmp
insl
into
jne
xchg
and
cmp
mov
fmuls
outsb
aam
cmp
fildl
scas
dec
stos
icebp
xchg
lahf
push
mov
mov
lret
sbb
xchg
mov
cmc
dec
pop
dec
roll
push
cmpsb
outsl
jbe
in
iret
pop
ret
mov
push
jnp
and
loope
mov
stos
push
or
test
mov
cs
test
ljmp
dec
mov
xchg
lret
sbb
test
push
inc
push
int3
and
aaa
or
mov
sbb
push
add
xor
xchg
mov
xchg
dec
fcoms
xlat
out
mov
scas
push
je
out
jmp
mov
or
jo
mov
test
or
sub
sar
and
insl
shrb
inc
lret
loopne
inc
pop
lea
or
hlt
lahf
shrb
cmc
xor
addr16
rclb
jg
popa
aaa
sub
test
add
imul
addr16
and
push
mov
mov
das
scas
cmpsb
movsb
xchg
lods
pop
cli
jmp
and
and
test
xchg
out
xor
jo
jp
nop
mov
push
adc
adc
pop
pushf
sub
pop
cltd
cmp
pop
xchg
mov
mov
mov
xchg
push
lods
in
repnz
mulb
mov
shr
inc
or
sub
mov
mov
stos
scas
jnp
xor
subl
jl
sbb
push
pop
icebp
jae
divl
or
sub
jmp
inc
clc
sbb
gs
adc
sbb
cmc
mov
pop
dec
out
rorb
mov
add
xchg
pop
sbb
outsb
xchg
popf
pop
sub
sub
daa
cmpsl
shll
int
xchg
sbb
sbb
mov
jle
arpl
inc
cmpsb
pop
out
mov
and
scas
xorb
sbb
cmp
pop
arpl
stc
lea
into
push
push
sti
testb
leave
ror
bound
push
add
and
adc
int3
sub
pusha
and
outsb
adc
in
negl
adc
pop
rcrl
add
and
je
in
dec
imul
mov
std
mov
jne
dec
sbb
push
stos
mov
lret
cmp
lahf
push
dec
in
es
shlb
in
jl
sbb
lahf
push
inc
je
push
stos
sub
subb
push
orb
mov
insl
ret
ret
jmp
cs
xchg
pop
ds
sarl
xor
lods
adc
test
push
jbe
pop
inc
ja
jns
jns
stc
rorb
sbb
es
aaa
sbb
jmp
cmpb
jge
mov
mov
xlat
jae
lahf
lret
mov
mov
insl
addl
pop
iret
popa
fnstsw
repnz
add
imul
insl
outsb
arpl
mov
sbb
scas
jge
stc
sbb
inc
dec
mov
imul
std
das
add
insb
dec
mov
mov
insl
push
mov
js
adc
push
lea
or
xchg
in
xchg
push
mov
testb
pop
sub
in
cltd
xor
mov
cmp
xor
push
adc
int
xchg
scas
adc
add
xchg
pusha
xor
cmp
and
xchg
lock
adc
or
push
mov
fistpl
or
pop
popa
pop
mov
push
jp
fstpt
add
scas
ds
sbb
cli
das
xchg
ret
jno
dec
pusha
xor
pop
pushf
or
and
lcall
call
lret
int3
out
andb
mov
pop
jecxz
imul
jle
scas
inc
mulb
aaa
fcmove
in
mov
xor
mov
inc
pop
xchg
inc
pop
jp
aas
cmp
adc
daa
xchg
sub
mov
arpl
cmpb
mov
inc
nop
cmp
push
mov
xor
xor
fs
and
lret
js
sub
fs
pop
sahf
out
sub
or
pop
xchg
cld
movsl
pop
pusha
jecxz
sbb
ds
loopne
xor
jp
sahf
test
pop
inc
mov
mov
xchg
out
rcll
cmp
das
jmp
scas
int
int
imul
lahf
cmpsl
xor
loope
jp
shrl
cs
push
mov
mov
mov
push
xchg
repnz
sub
insb
pop
add
fldenv
inc
sub
ja
dec
push
imul
test
pop
push
jl
out
cmp
push
jp
mov
jae
insb
cmp
imul
dec
lret
jo
daa
mov
jmp
loop
xchg
sub
enter
stos
fisubrs
and
adc
xchg
xchg
push
pop
pop
mov
push
mov
fcoms
pop
or
cli
dec
cld
lahf
adc
xchg
xchg
push
sbb
out
push
js
push
jnp
aaa
and
and
push
repz
add
cmp
lret
add
mov
or
aad
jl
ret
mov
cmc
imul
xlat
xchg
sub
andl
imull
sub
inc
xor
mov
mov
adc
repz
clc
mov
xchg
imul
and
sub
lds
movsb
clc
stos
loopne
mov
int
aas
pop
mov
jmp
push
mov
push
mov
fdivp
push
jle
jnp
mov
aaa
dec
lahf
mov
mov
jnp
push
push
mov
mov
int
ja
lcall
stc
lock
gs
fiadds
or
mov
push
and
pop
mov
push
xchg
xchg
cmp
pop
int
cmp
inc
js
lods
jmp
jo
pop
es
mov
push
jmp
fbstp
jge
jne
or
pop
cmp
mov
bound
pop
lahf
ja
adc
add
or
imul
enter
add
imul
int
jmp
mov
inc
push
mov
call
add
rclb
add
or
mov
pop
push
sbb
jno
lea
repz
push
fnstenv
mov
mov
pop
sahf
pop
lods
dec
cmp
cmpsl
shl
fldenv
mov
fwait
cmpsb
daa
xorl
movsb
fsts
or
mov
arpl
sbb
and
test
pop
loope
xchg
neg
xchg
in
es
fidivs
outsb
add
cmp
jbe
cmove
sbb
push
pop
lock
dec
push
lea
enter
popf
mov
xor
int3
call
movsb
push
in
stc
jl
add
nop
daa
in
inc
pop
in
jge
sbb
fiaddl
pop
add
aas
out
ss
and
ret
addr16
push
add
adc
std
aad
sbb
xchg
mov
fsubl
out
jbe
roll
ja
inc
jge
mov
mov
adcb
sub
rorb
mov
and
mov
xchg
in
adc
fiaddl
xchg
jl
adc
outsl
sahf
cmovae
test
leave
mov
bound
xor
shll
add
andl
inc
repnz
icebp
aas
cs
in
hlt
mov
fwait
inc
and
pusha
adc
add
popa
lcall
add
jmp
int
and
push
cmp
shr
imul
sub
loop
ljmp
adc
jp
mov
dec
rcrb
dec
sti
scas
mov
mov
pop
pop
push
pop
fadd
and
fadds
test
cwtl
mov
mov
ds
or
out
push
cmp
mov
pop
out
dec
mov
dec
push
sub
mov
xchg
push
add
mov
enter
xor
divb
hlt
and
push
cmpsb
cmc
mov
iret
repz
fwait
push
div
pop
lret
push
or
out
pop
jo
or
mov
and
push
dec
jp
int
adc
call
pop
and
pop
mov
out
xchg
xchg
insb
mov
mov
fucomip
in
mov
adc
cwtl
iret
xchg
push
sub
dec
leave
ja
xlat
mov
ret
jle
inc
pop
pextrw
popf
mov
test
adc
inc
cwtl
mov
dec
mov
aam
jno
mov
shll
lods
push
imul
sbb
fsubrs
mov
outsl
xchg
and
xor
movsb
push
jbe
jecxz
flds
fcomps
cmp
pusha
shll
or
mov
nop
xor
push
outsl
mov
xchg
cli
outsb
stc
rorl
ljmp
xlat
xlat
jbe
add
scas
fdivl
out
stos
fdivrs
xchg
jge
test
out
out
test
cld
imul
cltd
jp
clc
icebp
in
cld
dec
or
dec
pop
add
dec
jmp
daa
adc
roll
cmp
xor
adc
cmp
repz
fcomps
fcomi
mov
mov
or
jns
adc
lret
pop
test
sub
imul
push
adc
add
mov
sbb
nop
sahf
mov
push
leave
pop
jg
cmp
pop
jg
lds
pusha
push
dec
sti
xchg
jae
outsl
sbb
mov
xor
cltd
jl
sbb
and
insl
lds
mov
or
in
sbb
jmp
add
cltd
mov
je
js
mov
mov
inc
insb
jo
into
popf
mov
xlat
stos
push
cmpsb
mov
loopne
decb
mov
std
dec
icebp
call
add
imul
sub
dec
adc
in
icebp
leave
test
fadd
jb
scas
sub
push
push
jbe
jns
js
lret
mov
inc
or
xor
xor
cld
mov
jno
and
jbe
dec
aam
stos
and
je
add
stc
xchg
test
mov
insb
cld
jge
jmp
jns
dec
and
stos
mov
test
pop
sub
sbb
and
mov
js
sti
push
aam
ja
or
pop
sbb
or
dec
xor
lods
cmp
inc
mov
lahf
clc
add
cmpsl
test
and
ja
add
dec
pop
mov
sub
popa
pop
or
out
mov
push
xchg
ljmp
xor
xchg
std
or
lret
xchg
hlt
jne
cli
pushf
sub
sub
inc
sbb
sub
xchg
call
mov
mov
shll
add
shlb
lods
sbb
pop
stos
dec
jnp
test
push
lea
add
mov
jg
hlt
ss
out
jne
int
jnp
das
push
xor
mov
sahf
fdivr
dec
stos
or
cs
test
xchg
sbb
lcall
pushf
incl
clc
pop
xchg
jle
daa
cmp
xor
repz
inc
push
inc
daa
mov
or
out
out
aad
lock
cmpsb
mov
add
sbb
int
mov
out
or
in
in
sbb
in
rorb
aaa
sbb
cli
or
mov
mov
lods
inc
lret
inc
inc
mov
std
jmp
ror
pop
inc
in
dec
adc
cmp
sbbl
or
mov
stos
xchg
aaa
bound
test
xor
ljmp
ja
adc
out
cmp
test
sbb
in
out
mov
nop
rorb
frstor
xchg
ja
jge
imul
mov
mov
mov
mov
and
sbb
xor
sbb
jb
xchg
push
loop
aad
xchg
sub
sub
imul
cmc
and
cmpsb
push
xor
lds
dec
scas
adc
xor
cmp
fildll
cmpl
xchg
iret
jmp
dec
sbb
in
sbb
inc
or
les
sbb
inc
imul
jb
cli
mov
movsl
std
rol
push
jbe
jns
sahf
scas
cmc
dec
lds
out
lock
cmp
and
and
daa
xchg
or
in
mov
fidivs
jae
lcall
pop
pop
pop
mov
iret
stc
adc
adc
xchg
pop
pop
je
mov
push
in
xchg
jl
sub
popa
in
popa
dec
test
pop
mov
xchg
sub
mov
and
test
sub
pop
stos
mov
add
aam
mov
cwtl
xchg
pusha
sbb
in
inc
or
dec
data16
pop
xchg
push
lods
enter
cs
xor
stos
ret
in
cltd
outsl
xchg
mov
gs
rolb
dec
pop
inc
sahf
lds
enter
jle
mov
xor
in
je
adc
les
cmp
neg
cltd
push
cltd
mov
enter
sti
xchg
mov
data16
push
or
hlt
jl
adc
mov
mov
repnz
rclb
mov
sahf
scas
push
enter
mov
nop
test
cwtl
add
jnp
pop
movsl
inc
xor
imulb
sbb
inc
jl
push
aam
mov
addb
inc
push
sub
aas
xchg
lods
leave
mov
aas
or
mov
inc
inc
push
mov
je
cmp
mov
jno
rclb
or
inc
movsb
xor
lds
sbb
mov
lcall
mov
pushf
test
adc
inc
test
inc
inc
mov
dec
cmp
data16
sbb
inc
stos
fcoms
loopne
jno
scas
fwait
in
inc
add
or
popf
decl
dec
push
mov
lea
xor
inc
add
and
lcall
movsb
ja
jp
je
cmc
jns
je
lds
aam
mov
shll
mov
out
ss
pop
dec
pop
ja
xlat
fistpl
stc
sahf
sbb
or
aad
fdivrl
jbe
mov
out
stos
out
xor
sbb
dec
xor
fisubs
jmp
mov
jns
dec
xor
in
lret
loopne
js
adcl
repnz
je
mov
int3
mov
add
add
outsl
into
icebp
lret
lds
bound
cwtl
sbb
dec
lea
lcall
lret
test
imul
bound
fisttpl
sub
lret
or
daa
and
mov
out
add
cmp
rorl
out
lods
mov
add
arpl
insb
insb
dec
adc
xlat
fisttpll
nop
inc
test
adc
mov
xor
es
call
fisubrs
cmp
push
enter
xor
inc
cmp
jle
mov
mov
stos
add
cmp
imul
pop
lods
dec
and
lods
enter
js
push
lods
sub
cwtl
push
mov
ret
inc
adc
dec
pop
push
push
or
jne
cltd
outsl
sbb
mov
xor
pop
inc
out
and
xchg
mov
in
mov
jecxz
jbe
out
sldt
gs
push
jge
dec
dec
sahf
lea
cwtl
jb
adc
fiadds
daa
sub
das
pop
lret
or
and
inc
out
mov
xchg
sbb
pushf
dec
xor
movaps
fadd
mov
push
jnp
cmp
pop
sbb
xor
or
pusha
dec
fs
mov
stos
jbe
push
dec
pop
lea
push
add
lcall
or
inc
lods
lods
xchg
xchg
cmc
jns
fcomps
lret
scas
js
add
sbb
push
into
xchg
xor
das
cmpsl
add
mov
jecxz
test
inc
push
ss
inc
ficoms
or
sub
shl
mov
pushf
pop
xchg
jl
aam
fistl
cmpsb
ret
lods
stc
lock
clc
inc
push
clc
stos
and
adc
rcrb
cmpsb
mov
lock
decb
sbb
test
stos
pop
inc
iret
jae
and
push
lods
jbe
rorl
pop
xchg
mov
pop
add
pop
popa
mov
lcall
repnz
sahf
xchg
push
sub
loope
inc
cmp
push
push
sti
sbb
iret
xor
jmp
mov
sbb
jg
mov
jo
insl
mov
add
sbb
addr16
push
add
aam
aaa
ds
mov
popf
push
and
push
dec
je
add
lcall
mov
fadds
pop
aad
jle
or
repz
aas
mov
inc
jp
dec
xor
mov
sub
sub
cmc
test
fs
sub
and
enter
pop
lret
cld
arpl
mov
push
inc
data16
imul
xchg
pop
sbb
lcall
bound
repz
xchg
jmp
pop
test
mov
pushf
stos
dec
stos
pop
aad
les
std
int
dec
int
orps
mov
les
or
dec
mov
push
test
dec
mov
sahf
push
and
enter
mov
shlb
das
loop
jb
push
or
adc
inc
cmp
jp
cmp
arpl
cmp
jl
and
sub
xor
repz
xor
ret
inc
outsb
push
push
jns
lret
pop
je
sub
jo
test
cmp
or
mov
or
aam
stos
cmpsl
jns
push
and
stos
outsl
aaa
adc
mov
xlat
lock
pop
mov
jnp
out
inc
pop
xor
ja
mov
xor
adc
std
adc
push
arpl
pop
jg
or
outsl
lret
in
sbb
mov
sbb
pop
xchg
add
pop
inc
rcll
mov
jne
fnstcw
rolb
rorb
popf
cmp
mov
xchg
lret
push
mov
scas
sbb
int3
push
mov
lods
cli
arpl
push
mov
in
cmpsb
sbb
lods
mov
cmp
js
push
jg
and
ds
xchg
jb
sub
mov
ja
shrl
mov
sbb
es
xchg
enter
insb
testl
fimuls
xor
daa
and
mov
cmp
loop
int3
fwait
jle
cmp
insl
lds
lahf
xchg
movsl
mov
mov
pop
mov
dec
int3
out
mov
push
bound
inc
mov
repnz
add
in
mov
pop
lret
mov
or
inc
mov
out
and
xchg
mov
outsl
ffree
movsb
xchg
popf
lds
dec
test
popa
and
cmc
aas
sub
fcmove
decl
in
mov
insl
clc
fistpll
mov
adc
push
mov
cld
xor
subl
inc
jg
lret
movsl
test
adc
push
and
lahf
test
das
in
cli
je
jns
sub
clc
push
gs
cmp
int
jns
imul
test
pop
fnstenv
xor
pop
cmp
xlat
jecxz
xor
cmp
lret
ja
cwtl
dec
xchg
in
lret
inc
push
mov
stc
inc
in
or
mov
sub
cs
adc
fcomp
mov
or
enter
push
gs
je
jmp
jb
and
or
sbb
jmp
or
sbb
lock
outsb
into
mov
scas
jne
push
movsb
xchg
mov
xor
jge
mov
jno
jb
pop
nop
push
outsb
inc
mov
xor
jl,pt
push
hlt
in
ret
enter
inc
bound
shlb
test
fildl
push
stos
dec
jge
sub
les
aad
sbbb
add
dec
adc
mov
and
movl
scas
add
fbld
or
fldl
repz
cmp
mov
imul
lea
clc
shll
add
lods
mov
or
in
mov
and
aam
xchg
lock
out
aam
sub
cmpsb
std
pushf
repnz
adc
adc
iret
movsb
stos
cmp
cld
jle
inc
push
jo
xor
inc
leave
mov
sbb
adc
shr
mov
cmp
lahf
stos
in
sbb
aam
inc
push
in
mov
es
inc
cs
into
sti
stos
lcall
mov
gs
sub
push
dec
or
jge
dec
pop
jo
inc
mov
jne
xchg
jns
jge
leave
inc
outsl
stos
or
cmp
adc
bound
pop
mov
pop
std
les
push
imul
and
inc
jmp
adc
jmp
int
sub
gs
cwtl
cmpsl
pop
xchg
out
mov
push
jp
sarl
adc
lahf
dec
cmp
stos
lods
push
push
rolb
dec
cmpsb
or
sub
dec
cwtl
out
aam
cld
pop
xor
sbbl
aaa
gs
lock
cmpsl
cmp
and
jns
aam
mov
sbb
adc
sarb
push
cmp
shll
add
lea
jp
movsb
cmp
jl
cmp
fistps
push
mov
dec
add
aam
repz
ss
push
js
jb
enter
pop
cmp
in
daa
lret
cmp
cmpsb
pop
lods
mov
mov
push
sub
test
sub
push
gs
shrl
xor
mov
in
cmp
pop
cwtl
js
xor
lock
push
dec
and
pop
mov
jmp
scas
sub
std
jnp
ret
sarl
in
cwtl
clc
adc
div
or
mov
mov
ror
add
push
mov
lret
insb
les
jns
orl
xor
imul
repnz
in
mov
das
xchg
loopne
mov
ss
testl
and
adc
out
sbb
dec
adc
sbb
mov
shlb
ret
cmp
pusha
movsb
sub
test
sub
and
inc
xor
cli
or
mov
nop
insb
lods
mov
sbb
adc
mov
shr
hlt
or
pop
adc
das
rolb
imul
xlat
pop
cmp
xchg
jb
cltd
rorl
cmpsb
dec
loopne
xchg
lret
mov
test
lods
and
sahf
insb
sti
int3
adc
inc
pop
xorl
iret
pop
jno
push
movsl
enter
ja
and
xchg
test
xchg
xor
push
repz
xchg
icebp
mov
inc
ljmp
xorb
movsb
sub
jns
dec
fs
pop
push
lret
mov
outsl
and
cmc
dec
pop
push
or
push
xchg
inc
rdpmc
push
or
leave
dec
pop
test
fstpt
mov
sub
mov
es
xchg
push
ret
dec
jb
jbe
push
mov
out
shlb
bswap
push
mov
mov
ss
push
pop
jge
dec
test
lock
sub
cmpsl
out
push
jmp
leave
scas
xor
aaa
xchg
xchg
stc
pop
dec
daa
add
das
loope
inc
aaa
dec
lods
mov
orb
cmp
imul
in
bound
scas
sbb
or
xlat
arpl
pushf
in
decb
jmp
or
or
test
xchg
dec
mov
mov
repz
loope
xchg
jmp
jecxz
push
xchg
xchg
xchg
sbb
pop
dec
adcl
adc
lock
jne
jmp
cmp
mov
test
or
and
jbe
in
add
jge
cmp
pop
mov
insl
adc
or
sub
adc
and
and
in
repz
ret
add
add
pop
inc
add
sub
adcl
and
push
or
jl
test
into
mov
sub
xor
xchg
sub
xor
xlat
out
mov
mov
sub
sbb
push
into
scas
cmc
inc
and
leave
ret
inc
pop
lahf
adc
jo
inc
cmp
lds
stos
mov
gs
inc
stos
shl
jne
adc
imul
js
cmp
dec
int
xchg
mov
or
add
inc
sbb
mov
cmp
mov
repnz
pushf
lea
cld
pop
cmp
jmp
loopne
aad
xchg
jecxz
mov
pop
xor
inc
xlat
mov
std
push
jecxz
jp
mov
jno
out
rclb
iret
fwait
push
add
lahf
das
push
not
outsb
into
ret
lods
mov
aas
mov
jl
cld
cltd
mov
adc
mov
aad
sbb
adcb
sbb
add
mov
mov
xlat
mov
jns
jg
cmpsl
mov
mov
sbb
cmp
or
je
mov
loop
mov
mov
push
jle
mov
out
pop
pop
mov
sbb
insl
jbe
adc
xchg
dec
xor
iret
int
pop
adc
lcall
std
adc
add
fadds
fdivrs
xchg
cld
cmp
and
out
in
xchg
sbb
jb
in
lret
into
out
mov
mov
clc
movsb
loopne
xchg
sbbl
fs
add
lea
push
sub
dec
divl
sti
jmp
fsts
fmuls
sti
dec
test
cs
outsb
mov
and
jecxz
aad
pop
in
aad
add
repnz
add
stos
xor
xor
daa
out
hlt
pop
mov
xor
sub
inc
mov
mov
sbb
hlt
mov
bound
mov
pop
cmpsb
ret
sbb
outsb
cmp
jl
pop
std
outsl
dec
xchg
enter
sbb
jae
add
mov
pop
dec
fidivs
dec
sbb
sbb
scas
mov
cs
or
and
jecxz
xchg
dec
adcb
push
or
ds
leave
and
add
adc
enter
dec
addr16
inc
jmp
jg
mov
mov
inc
pop
push
arpl
nop
in
imul
cld
mov
add
pusha
sub
cltd
push
xlat
rep
mov
pop
out
lods
mov
fwait
xchg
lds
jo
shrb
leave
and
mulb
aas
pop
aas
dec
ror
arpl
cmpsb
push
test
mov
lcall
in
or
mov
or
adc
les
sti
and
bound
sbb
push
ret
xor
shl
js
jo
add
cmpsb
int
mov
add
or
out
jo
mov
fcmovbe
sub
and
pop
xchg
into
filds
push
or
cltd
mov
lahf
add
sbb
cmpsb
cmpsb
hlt
adc
in
fcoms
popf
xor
cmpsl
mov
stc
adc
cs
lock
xchg
jle
pop
scas
push
push
and
xor
imul
insl
add
arpl
lods
enter
imul
sbbl
add
push
out
fmuls
sbb
insl
jne
lahf
movsl
shll
notl
mov
cmp
inc
repz
lock
imul
nop
or
mov
xor
sbb
sbb
lcall
inc
test
inc
iret
mov
popf
cmpsl
cmp
push
xchg
fcomp
fdivl
add
std
outsb
call
push
sbb
sub
cmpsb
hlt
arpl
call
mov
pop
jbe
or
aaa
push
xor
xchg
inc
and
sub
mov
pop
lcall
lock
enter
pop
mov
movsl
inc
je
inc
scas
cmpsl
popf
mov
fnstenv
push
nop
inc
push
je
in
pop
fwait
int3
dec
mov
or
loope
adc
std
fisubs
or
stos
and
movsb
es
cmp
movsb
movsl
aad
das
popf
jmp
mov
mov
sti
arpl
xor
scas
push
es
push
je
sub
mov
push
jnp
add
lahf
divl
jmp
ss
lods
testl
push
in
aam
not
mov
shl
adc
pop
in
mov
pop
add
add
insb
pop
adc
test
aaa
das
clc
and
imul
arpl
jge
cmp
addr16
lods
mov
daa
mov
pop
sub
jb
sub
mov
in
fwait
int3
add
mov
adc
mov
push
lret
xor
aaa
jmp
push
xor
inc
adc
ret
add
jo
in
push
popf
in
cmp
sti
mov
adcb
mov
cmp
stos
xor
xchg
jae
loope
pop
xchg
popa
ds
cld
rcll
and
nop
xchg
pop
sbb
jbe
jno
outsl
mov
xchg
or
daa
xor
xor
mov
pusha
inc
mov
adc
lret
outsb
cwtl
xchg
sub
lea
mov
inc
jo
mov
and
mov
aas
rcrb
mov
clc
mov
fisttpl
mov
pop
adc
stos
dec
inc
jmp
sub
and
sbb
out
xchg
mov
or
jne
push
jl
in
scas
aad
orl
dec
stos
xchg
daa
push
jns
or
mov
cs
and
mov
xchg
jno
dec
jnp
and
cmp
mov
sub
scas
mov
jg
daa
imul
push
lds
dec
push
xlat
mov
imul
fnstcw
pop
rcrl
in
pop
inc
push
jp
cmp
sbb
push
fbstp
and
push
ret
cltd
hlt
repz
movsb
mov
ds
or
rclb
insb
leave
ret
jns
mov
daa
mov
mov
bswap
insb
mov
scas
cltd
insl
mov
movsb
cmpsb
lods
mov
mov
xor
push
loopne
scas
cmp
and
stos
std
sub
repnz
adc
insl
cwtl
cltd
cmp
jno
ret
cli
gs
xchg
js
cmp
or
jo
or
stos
stos
xor
adc
push
popa
rep
adc
insl
inc
lea
sbbb
clc
push
mov
xor
fs
stos
fcoms
aam
leave
lods
jmp
and
xchg
adc
ret
sahf
lods
mov
xor
adc
loopne
push
int3
xchg
sub
sbb
sub
mov
push
cs
ljmp
cltd
push
cli
aam
xor
std
adc
rorl
in
xor
xor
push
das
pop
inc
xorb
mov
fnsave
and
out
push
sbb
add
add
jge
mov
push
sbb
inc
lcall
iret
scas
mov
adc
add
mov
adc
stos
jp
jb
call
push
aas
das
mov
fimull
stos
repnz
mov
cmpsl
aam
scas
fldt
dec
int
jge
mov
insb
adc
into
push
dec
mov
pop
adc
push
cs
pusha
les
cmpsb
adc
and
adc
xchg
cmpsl
int3
push
or
jnp
jno
cmp
repz
cmp
adc
push
sub
or
sub
nop
scas
imul
xchg
push
dec
jns
jae
aas
gs
shlb
mov
fcoml
lcall
rcl
sub
jmp
pop
push
pop
cwtl
add
leave
cmp
cmc
push
push
sbb
icebp
pop
insb
mov
dec
cmp
sbb
mov
arpl
ja
dec
ficompl
jne
add
xchg
add
dec
shr
aas
push
sarl
push
int
add
sub
xchg
xchg
js
xchg
pop
into
lahf
inc
out
jg
adc
std
push
and
aas
xchg
inc
popf
pop
adc
loop
xor
sub
mov
shll
inc
lea
bound
sub
mov
js
repz
cmp
gs
mov
add
pop
test
nop
mov
pop
loope
popa
or
adc
sbbl
movsb
leave
jbe
test
jmp
sub
dec
fdivs
xor
inc
cmp
int3
mov
mov
lret
jle
jns
iret
mov
enter
adc
gs
les
mov
ja
xor
mov
in
xchg
pop
movsb
lret
inc
int3
and
pop
rcll
cmp
mov
mov
stc
pop
jns
stc
jo
loope
sbb
pop
mov
and
xor
pop
leave
xchg
sub
test
lock
push
lds
mov
imul
xchg
ljmp
cmp
cld
rcrl
or
pop
call
pop
cmp
in
xor
into
mov
bound
lods
inc
out
xor
adc
mov
xor
mov
cmpsb
or
clc
mov
mov
test
mov
xor
mov
sahf
mov
imul
xor
push
in
jl
mov
cs
stos
sbb
lea
mov
inc
dec
pushf
jnp
jnp
adc
or
gs
shlb
pushf
shrl
add
stos
pop
add
xchg
lods
inc
jle
int
adc
mov
in
xchg
mov
gs
mov
sbb
fidivs
jnp
or
hlt
std
jno
pop
std
sub
test
iret
stc
arpl
xorl
lret
movsl
das
sub
and
and
push
or
jmp
dec
push
or
leave
jp
dec
sub
scas
movsb
into
scas
loopne
and
out
stos
arpl
lods
scas
adc
adc
jge
push
inc
gs
dec
fsubrs
cmp
inc
stos
add
ret
loopne
les
add
push
test
add
lahf
pop
int3
subl
in
jbe
sbb
and
sub
sbb
cmpsb
pusha
daa
outsb
jbe
xchg
mov
adc
sub
out
push
and
inc
push
or
add
pop
loope
sbb
movsl
es
sub
mov
sbb
and
lahf
insl
inc
jbe
movsb
ss
jae
inc
jmp
sbb
out
mov
icebp
stc
mov
and
sbbl
xchg
outsb
mov
repz
fcompl
popa
rcrb
add
stc
pusha
pop
sbb
lahf
orl
cmp
enter
movsb
push
xchg
pop
mov
roll
data16
dec
xor
mov
or
bnd
mov
sbb
mov
dec
loope
icebp
mov
icebp
cmp
push
int
inc
mov
std
mov
xor
cmp
stc
or
arpl
jo
cltd
insl
lods
movsb
xchg
repz
enter
scas
push
jmp
mov
jg
fdivs
cwtl
lods
pop
scas
mov
add
repz
dec
mov
cltd
out
int3
frstor
push
jae
jo
add
fistpl
aaa
hlt
jecxz
cmpsb
fisttpll
push
sbb
in
pop
sub
sahf
adc
aas
or
mov
test
push
push
in
pop
aam
cmp
addr16
dec
int
lcall
mov
push
cmp
aas
fld
sub
fnstenv
addl
mov
xor
daa
arpl
sahf
pop
jl
xor
jl
or
cmpsl
sysexit
push
in
stos
inc
inc
lds
xchg
in
dec
aam
add
daa
subb
inc
sub
test
dec
push
ja
mov
popf
fnsave
lahf
out
inc
and
adc
inc
push
inc
stc
shlb
mov
sbb
xor
cmp
jo
mov
xor
std
ds
adc
idivl
mov
xchg
push
pop
pusha
into
add
and
int
mov
das
pop
xor
add
imul
xchg
push
sbb
lcall
adc
js
test
push
ljmp
les
enter
sbb
or
mov
bnd
cli
jb
test
mov
stos
dec
in
in
js
stos
cltd
sub
enter
mov
imul
sub
lret
jnp
test
xchg
subb
loope
int3
aas
rorb
dec
insb
lcall
dec
pop
insl
pusha
xchg
into
mov
pusha
and
jae
jl
cmpsl
cmpsl
fsubs
pop
xchg
add
pop
sbb
dec
pushf
aad
xor
lock
sbb
jmp
pop
xchg
inc
in
cli
or
loopne
dec
dec
xchg
jg
mov
mov
outsl
scas
clc
mov
xchg
imulb
negl
mov
mov
sub
mov
jle
cmp
mov
cmp
push
dec
inc
or
add
sbb
stos
aaa
pop
inc
popa
pop
mov
cmp
sahf
pop
push
icebp
enter
outsb
js
add
dec
out
pop
xchg
sub
mov
pop
rcrl
out
cs
dec
jmp
leave
bt
sti
jns
jnp
clc
jmp
and
dec
jne
call
xchg
and
adc
push
lods
lods
nop
iret
add
inc
lahf
xchg
pop
or
lods
idiv
dec
and
cli
dec
rcrl
push
mov
cltd
sahf
lret
xchg
sti
mov
push
clc
ficomps
insl
add
ja
jnp
in
fildll
popa
pop
loopne
movsb
push
dec
sbb
shlb
xchg
inc
bound
pop
xchg
sbb
es
out
push
xchg
repz
sub
int
ror
fwait
ret
xor
in
xchg
mov
jnp
and
lods
mov
test
andl
sbbb
sub
jge
bound
cmp
xor
int3
dec
xchg
add
fdivs
xchg
repz
hlt
jb
push
pushw
addr16
xorl
lds
xor
pusha
sub
js
sbb
or
push
push
cmc
pop
add
aad
subl
lret
aam
sbb
xchg
mov
aad
and
pop
repnz
lds
add
clc
ja
mov
movsb
dec
ja
adcb
fcomps
into
or
cmpsb
inc
xor
mov
out
dec
cmp
and
ret
ret
and
mov
sub
insl
stc
dec
sahf
add
dec
mov
push
fbstp
sub
xchg
sbb
mov
pop
mov
jns
or
aam
add
inc
adc
bound
jne
cmp
iret
std
test
out
popa
pop
or
out
xchg
stos
add
pop
lahf
test
and
outsl
call
xor
andb
push
jl
mov
or
push
xor
xchg
and
inc
xchg
filds
insl
or
jnp
xchg
inc
dec
push
in
push
loop
mov
sub
mov
loope
lcall
sbb
adc
mov
enter
in
adc
xlat
in
dec
fwait
cltd
mov
testl
lock
inc
into
or
mov
mov
lea
rcll
pop
or
aam
sub
frstor
xchg
subl
or
xor
scas
or
xor
inc
lock
jae
movsb
push
out
adc
add
xchg
xchg
ja
ss
lea
sahf
inc
jge
je
lahf
clc
bound
add
add
push
outsl
xchg
mov
dec
mov
jge
mov
mov
aaa
shlb
mov
and
xor
jle
leave
pop
fdivs
mov
int
jle
enter
cmp
push
in
jb
insb
das
fst
lahf
clc
sub
mov
inc
cmpsl
push
repz
popa
jno
in
arpl
call
adc
add
cmp
mov
sbb
ret
addb
push
test
leave
cmp
lds
or
add
jnp
push
popf
rclb
or
sbb
cmp
iret
push
sbb
loop
xchg
dec
push
dec
add
fstl
sub
xor
rolb
or
xchg
cmp
pop
push
mov
add
jge
adc
addl
xchg
mov
js,pn
cmp
aad
sbb
dec
dec
cld
inc
movsl
and
pushf
lahf
je
xchg
or
inc
push
mov
inc
pop
lret
insl
test
outsb
mov
push
int
push
cs
add
and
add
in
test
adcb
ret
nop
xor
orb
inc
daa
js
hlt
std
dec
ror
fwait
cmp
xchg
jp
push
mov
insl
das
sub
inc
dec
inc
xchg
push
lret
and
insb
sub
iret
je
adc
sub
bound
push
clc
int
arpl
repnz
iret
xchg
pop
inc
pop
pop
cmp
sub
addb
mov
adc
jo
lret
fisubs
in
fnsave
cmp
and
mov
pop
enter
into
loope
ficompl
sbb
scas
cld
inc
jecxz
mov
sahf
inc
adc
dec
push
or
pop
sti
or
andb
xor
and
push
sahf
sub
lret
cmp
test
push
inc
inc
stos
dec
movsb
test
lret
aaa
cpuid
xchg
into
cmc
js
inc
mov
dec
sahf
sti
mov
cmc
stc
cmpsb
cmpsb
push
mov
fmull
rclb
sub
mov
outsb
xchg
clc
jmp
dec
xchg
idiv
das
add
repz
adc
das
outsb
sahf
cltd
outsb
std
mov
imul
icebp
insl
cmp
cmpsb
outsl
jne
or
sbb
dec
ffreep
xor
jae
aad
mov
xor
xlat
imul
into
jecxz
jmp
out
ss
xchg
mov
xchg
lret
jnp
sbb
loopne
inc
ror
inc
jb
out
stc
stos
stos
std
orb
test
xchg
mov
jnp
fs
cwtl
cmpsb
jg
xor
dec
dec
pop
arpl
shlb
adcb
xchg
mov
jae
pop
pushf
mov
jle
or
mov
cmp
sahf
or
addr16
adc
push
call
pop
je
pop
pop
sbb
lcall
inc
int3
out
in
inc
enter
jmp
dec
pop
or
pop
rcrl
daa
xor
test
pop
insb
test
xchg
sbb
lcall
mov
adc
jns
cmp
pop
lret
ret
call
inc
mov
pop
cmp
jbe
das
fstpl
jmp
mov
and
inc
loop
insb
adc
scas
cli
sbb
and
test
sarb
sahf
dec
hlt
mov
push
orb
dec
xchg
fs
jbe
fdiv
push
push
ret
xor
andb
inc
jns
xchg
fs
lret
movsl
les
movsb
and
cli
aaa
ss
inc
out
stos
icebp
out
int3
xchg
cmpb
and
sbb
xchg
jl
jb
loope,pn
iret
std
addr16
add
adc
imul
sahf
cmp
popf
sbb
adc
mov
push
jp
inc
mov
or
xchg
inc
push
ljmp
cmp
xchg
jecxz
bound
repnz
push
cld
inc
mov
mov
mov
xor
aad
ljmp
loope
add
mov
jae
xor
cmp
mov
imul
andb
add
mov
lock
mov
movsb
popa
pop
push
dec
jmp
push
leave
xlat
sbb
not
xchg
fsts
outsb
les
sub
mov
jp
push
clc
shl
cltd
cmp
cwtl
and
leave
jne
push
orb
cmp
incb
dec
cmp
cmp
in
or
les
lods
sub
cmp
sub
stos
or
and
mov
inc
dec
push
dec
fimull
or
inc
inc
into
mov
call
cmp
mov
add
or
inc
adc
inc
add
push
dec
sbb
sete
lock
xchg
addr16
daa
jg
cbtw
pop
mov
or
daa
jae
pushf
or
adc
out
scas
sbb
popf
push
jb
lds
fwait
sti
dec
xchg
insl
cmp
repnz
pop
shlb
int
sbb
orl
insl
cld
mov
sbbl
push
clc
xor
fisubrs
inc
out
cmp
out
xchg
inc
dec
cld
mov
jns
ljmp
stos
iret
shr
xor
scas
and
cmpl
xor
cmc
add
out
sub
daa
mov
cmpsl
loope
and
fdivl
ss
dec
push
dec
std
sbb
lds
pop
adc
dec
push
cmp
sbb
enter
add
push
std
icebp
inc
xchg
xor
pop
mov
mov
dec
and
daa
insl
push
jo
add
nop
mov
shll
repnz
push
ret
add
scas
mov
jp
sbb
adc
leave
loope
repnz
fmull
mov
out
call
jo
mov
inc
fcoml
mov
pop
add
mov
push
adc
les
pop
push
mov
or
cmp
or
add
in
sub
icebp
cmp
dec
mov
icebp
pcmpeqw
jno
push
adc
cmp
es
int3
push
push
adc
mov
add
outsb
scas
pop
mov
in
loop
jmp
stos
jb
inc
sub
imul
cmp
sub
fs
repnz
jnp
mov
jmp
and
lcall
mov
push
and
cmpsl
subb
outsb
pop
loop
pop
jbe
pop
ja
int
lahf
out
push
sub
aas
and
pop
in
mov
fnstenv
ss
lods
or
sti
gs
add
or
mov
push
sbb
inc
push
cmp
cli
pop
xchg
jle
dec
clc
scas
call
shrb
cld
mov
mov
call
mov
lds
lret
movsb
push
cltd
sub
push
sbb
inc
pop
mov
hlt
add
push
insl
in
out
out
int3
ret
sbb
adc
in
pop
push
inc
mov
bound
pop
inc
psubb
aas
dec
cmp
call
test
jmp
sbb
js
lcall
or
sub
lods
test
jmp
push
in
aam
mov
arpl
push
mov
addl
jle
mov
mov
pop
adc
rcr
insl
sbb
xchg
jg
sub
lret
jmp
xchg
xor
xor
or
cwtl
jne
or
jg
dec
sti
xor
shr
pop
idiv
push
adc
dec
and
sub
mov
fsubr
mov
or
push
xor
inc
cltd
xor
mov
xor
inc
pop
loope
cmp
movsb
xor
or
lahf
inc
inc
rclb
push
popf
test
shrl
cmp
stc
push
inc
xchg
ja
dec
sub
lret
mov
mov
add
hlt
out
in
imull
fdivr
stc
cmp
dec
lods
adc
es
leave
sbb
xor
dec
dec
sbb
push
xchg
scas
pop
into
and
add
dec
out
pop
mov
sbb
dec
js
jl
out
data16
push
gs
mov
push
mov
fisubl
ljmp
shlb
nop
addr16
stos
mov
shlb
lock
dec
adc
pop
sub
ret
lret
mov
pop
aas
add
ret
jmp
jno
addr16
pop
mov
in
sbb
xlat
push
loopne
jb
std
lcall
loope
push
mov
sbb
pop
mov
xor
pop
nop
pop
adc
int
inc
loope
inc
shl
inc
cli
rclb
aaa
or
ljmp
imul
pop
mov
dec
out
stc
or
loopne
loop
xchg
mov
in
scas
jmp
nop
mov
cltd
sti
pop
mov
cwtl
pop
mov
mov
sub
sub
dec
mov
lret
jle
outsb
fsubrs
int3
faddl
int3
sub
aaa
std
jns
xor
push
lea
and
shrb
std
insb
stos
repnz
test
fidivrl
xor
leave
jo
add
or
mov
adc
js
int
inc
gs
xchg
push
mov
int3
sub
test
jle
dec
ret
mov
jmp
mov
push
sub
push
sub
mov
fstps
pop
mov
jns
add
push
adc
subl
push
adc
ja
push
lock
sbb
pop
test
jo
pop
mov
pop
sub
inc
sbb
mov
lahf
dec
testl
jecxz
dec
push
or
sbb
cld
jp
push
mov
jne
jg
jne
sub
mov
cwtl
push
mov
xorl
cwtl
xchg
ss
push
sbb
idivb
addr16
push
pushf
nop
sub
je
add
pop
jne
adc
imul
cli
test
pop
mov
mov
popf
aam
push
add
cmp
pop
jecxz
gs
mov
sti
dec
jl
or
and
mov
ret
xor
mov
mov
adc
lcall
cld
and
push
in
repnz
dec
iret
outsl
cmc
xchg
sub
inc
out
ljmp
stos
mov
mov
clc
insl
inc
push
nop
push
or
stos
mov
mov
popf
inc
hlt
hlt
add
mov
push
gs
mov
or
dec
scas
or
lods
and
jo
mov
xchg
xchg
scas
stos
dec
jmp
mov
repz
movsb
dec
push
or
dec
mov
outsb
pop
push
or
ljmp
cltd
je
push
xor
mov
das
dec
cmpsb
lds
sub
fisttpll
imul
outsb
ds
inc
inc
pop
dec
xor
push
dec
mov
movsl
inc
cltd
sbb
cli
rolb
xor
pop
mov
fidivrl
sbb
ljmp
push
pop
push
std
fildl
pop
popf
push
pop
cmp
jb
mov
sbb
mov
mov
sub
testb
ret
je
push
leave
cmp
outsl
jns
es
add
fiadds
outsl
andl
bound
out
push
mov
xchg
or
add
pop
jnp
stc
cmp
movsl
mov
imul
data16
mov
sub
xor
jnp
stos
mov
fiaddl
lret
into
mov
loopne
sub
cwtl
mov
fnstsw
add
adc
addr16
les
mov
lods
cs
shlb
div
orl
fxch
sub
adc
lock
dec
add
test
clc
ret
scas
inc
jnp
movb
push
pop
add
mov
ret
jbe
les
arpl
sub
cmp
jp
xchg
int3
cli
push
out
std
pop
push
push
repnz
jns
loop
inc
add
dec
push
adc
fidivs
mov
shlb
lret
mov
lods
hlt
outsl
test
call
push
mov
call
rol
scas
imul
add
das
add
xchg
xchg
push
cli
push
loop
cli
je
das
jl,pt
pusha
icebp
lret
in
aam
out
negb
jle
mov
test
gs
rolb
fstpl
mov
xchg
push
xor
mov
pop
push
mov
sub
xchg
sarl
aaa
xlat
pop
scas
insl
das
imul
add
sbb
fsubrl
call
shrl
add
jle
push
ret
sbb
jo
and
cmp
xor
loopne
inc
dec
inc
xor
call
lret
jno
ja
xchg
add
mov
jo
call
or
or
push
pop
ja
mov
je
mov
xchg
ljmp
fs
inc
add
mov
in
ljmp
gs
out
shl
jae
xchg
mov
psrld
lods
fimuls
imul
sbb
add
dec
jno
mov
arpl
xchg
mov
sarl
iret
mov
inc
push
sbb
mov
mov
xor
inc
lods
adc
add
xchg
lret
and
icebp
sbb
lods
add
jne
in
cwtl
mov
daa
jae
jge
jl
add
sbb
mov
repnz
imul
scas
dec
sbb
mov
ss
ja
out
orl
adc
xor
mov
xchg
mov
and
fdivr
mov
pop
mov
scas
out
lods
andb
shll
and
cltd
fcoml
inc
mov
leave
mov
or
mov
inc
and
adc
adc
mov
fnstenv
les
and
xor
lods
add
fwait
outsl
xor
cmp
mov
les
xchg
cmpsl
test
mov
jge
test
repz
mov
cmpsb
push
mov
jecxz
mov
jcxz
sti
cwtl
sbb
mov
mov
dec
into
lcall
mov
dec
loopne
repz
pop
cli
int
loopne
aad
js
addl
mov
xchg
jae
inc
push
popf
icebp
push
fcoml
xorb
cmp
mov
shlb
add
insb
and
cmp
shlb
xor
sub
shrb
push
xor
or
iret
push
xchg
scas
xor
cld
jge
xor
popf
test
xchg
jmp
pop
xlat
fimuls
xchg
sahf
das
mov
fstpt
cmp
xbegin
lahf
lcall
add
into
cmp
jb
adc
fidivs
mov
mov
xchg
pop
xchg
push
mov
mov
movsb
pop
xor
lea
sub
mov
pop
mov
sub
xor
jg
lea
stc
sbbw
loopne
sahf
sti
mov
xorb
add
scas
int3
add
push
sub
mov
push
mov
fwait
test
xor
stos
sub
pop
pop
push
ja
stos
dec
sbb
sbb
push
push
add
rcll
imul
movsb
shl
sbb
sub
lea
lea
fldcw
sbb
xchg
test
ljmp
dec
xchg
xchg
cmp
loop
stc
mov
fimuls
das
movsb
add
enter
bnd
sub
aaa
out
push
xchg
jp
insb
jne
mov
push
and
pushl
or
pop
adc
jp
aad
mov
shrl
pop
push
pop
outsb
cmp
mov
stc
inc
not
jo
cli
sub
pop
inc
dec
xchg
fs
xor
leave
ss
aad
out
push
das
sarl
and
in
aam
xor
jno
cmp
loop
cmp
imull
mov
pop
dec
test
or
mov
jg
or
mulb
sbb
fs
outsl
mov
out
clc
jo
sbb
mov
or
or
jl
mov
leave
xchg
bound
out
xchg
lods
pop
xor
cmp
xor
pop
and
insb
inc
adc
repnz
fldenv
insl
lock
jae
mov
cmc
jmp
fdivrl
mov
sub
and
add
fimuls
xchg
lret
xchg
gs
add
lock
sbb
pop
xchg
pop
insb
inc
mov
cmp
movsb
cmpsb
sbb
add
popf
adc
repz
in
stos
mov
pop
inc
push
pop
jnp
pusha
inc
mov
jge
movsb
inc
aas
inc
xor
scas
les
ss
into
je
sub
and
mull
mull
push
popf
pop
push
sti
out
or
cli
xchg
gs
dec
scas
jge
mov
xor
rolb
adc
int
cmp
push
mov
outsl
es
or
test
add
add
ret
jl
push
iret
pop
cltd
jno
imul
loop
xchg
lahf
in
aas
xor
mov
shrb
dec
fwait
push
cltd
adc
xchg
cltd
sub
push
xlat
pop
popf
xlat
mov
mov
dec
and
xchg
fstl
pushf
mov
sub
cmp
out
stos
dec
out
in
shr
jne
fwait
lea
push
out
push
ds
pop
or
xchg
loopne
jmp
mov
cmp
fwait
jae
gs
cmpsl
pop
jb
enter
popa
cmp
das
pop
je
stc
xor
negl
movsl
mov
fptan
mov
xchg
insl
data16
mov
call
jecxz
popf
mov
dec
sbb
xchg
bound
loopne
jne
pop
pusha
pop
stc
add
aad
adc
pop
mov
sbb
stc
repz
nop
mov
mov
add
add
mov
inc
fiaddl
pop
pop
mov
mov
or
cmp
dec
xchg
je
jo
sarl
insb
lahf
and
je
dec
adc
sub
or
mov
repz
daa
test
jle
out
inc
xchg
jb
mov
daa
lods
fistl
pop
es
icebp
ret
in
std
xchg
scas
jo
cmp
mov
and
daa
sub
js
mov
or
je
jmp
inc
daa
mov
mov
push
out
addr16
fsubr
sbb
add
out
inc
in
mov
xlat
in
inc
jp
mov
add
lcall
mov
dec
xchg
ds
push
mov
enter
push
pop
inc
cmp
sbb
fnsave
jno
in
push
xor
xor
ret
jl
inc
adc
sbb
imul
xchg
fwait
push
mov
rclb
lret
roll
and
outsl
mov
outsb
push
dec
jle
enter
cmp
ss
or
mov
daa
jns
loopne
xlat
push
xor
cmpsl
dec
cli
shlb
sub
cmpsb
cmp
fistpl
push
pop
cmp
or
adc
dec
sbb
inc
lret
mov
jns
in
test
mov
mov
jg
push
mov
lds
push
dec
push
aas
sbb
out
fisubl
jl
pop
push
push
mov
notl
xor
dec
out
ffreep
icebp
sbb
fcomps
mov
add
mov
fisttps
xchg
int3
clc
adc
ret
scas
jnp
xchg
mov
xchg
mov
mov
adc
mov
xor
sub
ljmp
jnp
cltd
out
inc
shll
jns
mov
shll
sbb
mov
std
decb
xchg
cs
mov
jbe
fmuls
incl
sti
cli
popa
cltd
les
add
aas
adc
adc
inc
out
ret
cld
lock
xor
cs
in
stos
cwtl
sbb
in
push
inc
lret
imul
stos
and
push
iret
jmp
sub
sub
imul
int3
cmc
or
call
cmp
jge
lret
mov
out
adc
loopne
aad
sti
incl
sti
inc
les
cmpsl
push
in
cli
xor
xlat
adc
adc
xlat
pop
inc
imul
push
test
and
dec
mov
adcl
movsl
and
or
xchg
inc
repz
cmp
mov
xor
addr16
push
xchg
movsb
sbb
xchg
mov
pushf
ss
outsb
ret
pop
in
adcb
adc
pop
mov
xchg
inc
ror
mov
or
call
xchg
jno
int3
inc
mov
mov
xor
push
cmp
pop
cmp
js
cmp
mov
in
ret
inc
lods
movsb
xchg
sbb
or
into
mov
pop
jne
dec
mov
mov
inc
shr
xchg
cwtl
inc
mov
rcrb
and
and
mov
addr16
lahf
fucom
sbb
jnp
pop
inc
push
pusha
mov
xor
add
push
or
add
roll
std
jecxz
enter
adc
cwtl
xlat
scas
pushf
add
jge
test
fildll
lret
xlat
scas
push
ds
sub
cmpsb
inc
push
adc
bound
mov
movsb
testl
leave
xchg
and
xchg
push
jno
mov
repnz
inc
or
test
add
sbb
jmp
sub
das
jns
sub
jno
icebp
push
data16
iret
hlt
push
jns
out
into
jge
push
je
xor
and
cmp
xchg
xchg
sahf
lock
jle
adc
jmp
jb
sahf
cmp
dec
int3
je
rorl
and
movsl
mov
imul
mov
jns
pop
mov
mov
mov
mov
rolb
xchg
loopne
bound
ss
dec
fadds
xchg
mov
sbb
test
movsl
push
out
pop
mov
cmc
rorb
std
pop
lcall
sbb
ds
pop
mov
fucomi
std
push
mov
lods
rol
cmp
mov
hlt
lods
lock
pop
xchg
add
jae
mov
icebp
cmc
cld
jmp
in
mov
fdiv
sub
mov
or
and
mul
lcall
adc
icebp
aad
int
fmulp
popa
out
lea
das
sbb
pusha
mov
shrb
imul
jne
stos
repnz
call
or
sub
mov
adc
movsb
jecxz
mov
outsb
sub
cmpsb
test
lret
push
call
xchg
js
inc
cmp
jns
or
dec
or
cli
xor
jo
dec
adcb
aas
dec
inc
aas
dec
imul
lret
daa
mov
add
dec
add
pop
test
call
mov
sti
or
push
pushf
pop
cltd
inc
pop
sub
push
inc
mov
fistpll
pop
sbb
insl
cli
dec
stc
orb
out
mov
xor
fimull
mov
xor
ror
sahf
mov
or
sbb
ffree
sti
jb
fwait
outsb
int3
jp
stos
into
and
cs
test
sti
and
cmpsb
mov
inc
xlat
dec
and
lods
push
ret
insl
fiaddl
outsl
mov
nop
icebp
lock
jmp
or
inc
dec
pop
test
add
call
add
adc
cs
outsl
fcmovnb
out
add
pop
mov
sub
dec
sub
aaa
lcall
or
outsb
pusha
xchg
add
mov
xchg
out
push
rdtsc
cmc
aas
cmp
pop
pop
mov
stc
pop
xor
ja
dec
mov
cmpsl
out
dec
sub
push
fwait
inc
lods
aam
mull
xchg
in
xor
mov
mov
data16
dec
inc
cltd
daa
inc
sbb
call
xor
imul
sub
xor
cmp
sbb
push
dec
popa
or
lret
pop
mov
repnz
mov
xor
lods
xor
push
test
rcrl
xor
sub
out
loope
dec
int3
dec
sti
jmp
insl
xor
fucomi
lds
clc
mov
movsb
push
test
mov
mov
sub
sbb
xor
in
dec
cld
ret
subb
loopne
and
ret
and
cmc
cmc
xchg
add
add
mov
aas
je
mov
shlb
add
mov
ds
pop
in
inc
sbb
into
bound
repnz
mov
rorl
add
arpl
cmpsb
cmp
lahf
nop
rcl
pop
fcmovnbe
mov
insl
push
aam
in
mov
aaa
rorb
mov
push
or
mov
adc
xchg
daa
inc
mov
jp
mov
push
sub
loop
mov
inc
add
imul
and
test
pop
jle
rclb
xchg
push
jnp
fs
cmp
adcl
loopne
sbb
ljmp
xchg
dec
or
xchg
push
mov
sub
std
lods
or
cld
scas
pusha
pop
loopne
cmp
or
sub
or
dec
add
push
or
inc
lret
xchg
and
jl
out
lds
cmp
adc
xor
out
and
or
repnz
in
cmp
mul
in
push
in
xor
mov
sub
jmp
pop
push
imul
or
add
cmc
add
mov
lret
jg
adc
sub
imul
fists
arpl
adc
in
push
xor
cmc
rorb
scas
js
shlb
xchg
push
pop
pop
das
outsl
stc
ds
pop
mov
sbb
repnz
lcall
repnz
dec
sbb
fsub
call
push
test
pop
xchg
xchg
fwait
popf
mov
in
movsl
fsts
fisubrl
mov
jns
cs
stc
fmull
push
insb
bnd
pop
and
sar
hlt
fnstenv
dec
adc
dec
imul
fcoml
ss
jecxz
push
cmc
push
daa
push
push
pop
mov
mov
jecxz
daa
push
pop
push
ror
jle
add
dec
sahf
jp
and
adc
mov
lods
mov
xor
jl
test
jecxz
fs
mov
dec
js
ja
mov
dec
inc
or
lds
in
adc
xchg
pop
push
jno
xchg
push
add
daa
divl
sbb
es
xchg
mov
inc
or
pop
add
xor
out
xchg
fldcw
mov
popa
xchg
out
sub
mov
shl
mov
ja
test
and
push
xor
call
add
js
jno
popf
mov
push
jnp
fidivrl
jnp
das
mov
push
push
addb
or
addr16
and
inc
loop
movsb
sub
addl
mov
cmp
mov
shlb
out
lds
xchg
in
add
pop
or
fadd
cmpsl
ret
fstps
jb
fists
sub
int
xorl
jle
xchg
xor
iret
or
es
lahf
out
xor
mov
loope
lods
movsl
pcmpeqd
sbb
mov
arpl
fistps
and
sub
in
addr16
inc
jmp
dec
bound
jecxz
iret
or
scas
and
jl
insb
test
sbb
or
mov
scas
pop
xor
add
leave
pushf
jno
aad
mov
outsl
jp
xchg
xchg
lds
outsl
icebp
inc
loope
cltd
ret
adc
sbb
xchg
and
aaa
aaa
xchg
sub
cmc
xchg
inc
jae
mov
stos
aas
sbbb
das
pop
inc
test
mov
je
jmp
daa
popf
add
dec
arpl
pop
test
pop
pop
mov
jne
test
jno
fcomi
mov
xor
rclb
xchg
in
and
aam
jae
jne
pop
sbb
dec
add
cmpsb
adc
es
xchg
mov
cld
mov
mov
inc
fcmovbe
mov
cmp
cli
mov
popa
popf
or
cmp
bound
mov
subb
pop
xor
cmpsl
push
xchg
stos
cmp
ja
cs
mov
adc
add
mov
popa
scas
or
mov
imul
cwtl
sahf
out
in
mov
pusha
jno
jge
xchg
xchg
mov
pop
lahf
jne
je
dec
adc
lock
out
data16
popa
adc
sbb
int
cmp
or
mov
je
push
arpl
aaa
push
mov
mov
sub
movsb
or
jno
sbb
lahf
enter
lret
sbb
ret
pop
fcomi
bnd
mov
std
jge
cmp
loopne
or
sbb
push
mov
ja
icebp
outsl
and
push
sub
in
cli
add
mov
data16
sti
sbb
xor
lods
mov
mov
sahf
ja
cltd
ja
mov
mov
insb
jno
insl
scas
inc
xor
push
dec
add
cmp
out
xchg
mov
stos
jle
push
call
sbb
and
lds
fldenv
mov
xor
popf
mov
push
inc
dec
xchg
ret
pop
imul
sub
jo
or
jnp
leave
ret
sbb
jl
aaa
dec
sbb
fldt
fadds
lods
dec
ds
jp
mov
push
adc
lea
fcmovnbe
inc
pop
in
imul
lcall
out
jne
inc
faddl
mov
mov
jge
pop
mov
add
rcll
add
xchg
sub
jae
pop
pop
inc
xlat
in
and
loopne
dec
loope
adc
das
push
sbb
sbb
mov
inc
int3
mov
mov
sub
int
or
and
dec
aad
sbb
call
in
jnp
rorl
jmp
push
mov
test
jo
test
adcb
popf
jo
int3
lds
push
cmp
pop
xlat
mov
push
cltd
sbb
jb
mov
lods
mov
pop
les
mov
mov
add
push
inc
sub
mov
mov
sub
ja
add
stos
push
outsl
insl
xchg
mov
xchg
mov
jecxz
inc
lret
bound
mov
mov
insb
scas
mov
sub
data16
bound
sbb
jo
xchg
cmp
mov
shl
dec
nop
pushf
dec
jecxz
rcll
out
or
decl
pop
icebp
jno
xchg
xchg
push
test
sub
or
bswap
ret
ss
inc
into
andl
sarb
popa
sar
jecxz
cmc
mov
sub
inc
push
shll
outsb
push
out
lods
and
roll
mov
into
push
leave
daa
stos
jp
xor
jo
dec
mov
mov
sub
or
jmp
pusha
xor
xchg
mov
xchg
stos
aad
flds
and
or
mov
pop
jnp
mov
inc
test
cli
jnp
popf
push
sbb
add
jmp
sti
add
xchg
cmp
xchg
cltd
add
imul
testl
orps
xorl
add
das
ret
push
es
or
outsl
subb
sub
and
mov
test
test
cld
stos
addb
mov
loopne
push
cmpsb
mov
test
fs
xchg
popa
sbb
mov
adc
or
mov
jae
ss
dec
pushf
rol
dec
push
xchg
fistps
movsb
fsubr
in
arpl
shll
or
xchg
pushf
int
xchg
out
jecxz
rorl
inc
aad
scas
dec
push
sbb
fsts
mov
jmp
leave
cld
xor
pop
push
loopne
cltd
imul
inc
faddl
sbb
imul
int
imul
inc
jne
popf
add
and
jne
push
test
adc
push
incb
xchg
add
mov
fmull
jo
and
js
lcall
movsb
lods
adc
js
bound
sub
mov
ds
sub
addb
cld
cmp
sbb
aad
stc
push
and
jge
pop
repnz
shrl
movsb
es
and
scas
pop
cmp
push
jg
faddl
test
jno
out
mov
or
imul
or
pop
push
imul
divb
into
push
repnz
jno
inc
mov
cmp
in
clc
stc
sub
imul
ret
cltd
add
lret
out
pop
arpl
imul
push
xlat
in
or
aaa
lea
push
cmpsb
call
dec
int
stos
xor
sub
xchg
sarb
ja
jno
mov
mov
or
stc
orl
pop
mov
rcll
pop
pop
int
dec
fisubrs
stos
pop
imul
or
nop
test
inc
sub
gs
lret
pop
insb
mov
pop
aad
ljmp
or
dec
mov
pop
lret
mov
or
test
dec
mov
push
cwtl
js
int3
or
lret
jo
fsub
dec
arpl
rolb
pushf
or
add
js
fsubrs
fadds
mov
rcrb
mov
xchg
xchg
xchg
xchg
or
jecxz
sub
mov
push
pop
mov
int
push
movsb
pop
xor
imul
pop
stos
ret
fsubrs
cmp
or
jbe
mov
sbb
dec
cmpb
test
xchg
xchg
out
mov
iret
addb
sarb
ret
adc
mov
cmp
aaa
into
ljmp
loope
jl
sti
and
js
sub
adc
push
shlb
aad
push
stos
push
cmp
lcall
inc
adc
push
mov
adc
mov
add
xchg
inc
repz
subl
lcall
das
sbb
shll
inc
bnd
mov
out
shll
rolb
pop
ss
cmp
out
jmp
test
push
lcall
dec
inc
add
inc
push
leave
ss
jle
add
pop
pushf
mov
or
pop
inc
inc
js
pop
mov
xchg
mov
push
mov
push
dec
addr16
mov
or
push
stos
dec
push
aaa
mov
pop
dec
ljmp
pop
cmp
fs
jnp
xor
outsl
mov
movsb
sub
shlb
mov
lret
mov
mov
mov
mov
and
dec
jnp
clc
jbe
sbb
std
add
inc
in
fdivs
in
daa
xor
mov
mov
pop
xchg
test
and
jbe
push
jno
xchg
nop
out
adc
cmp
cmpsl
aas
cld
out
shll
and
lock
enter
pop
pusha
orb
sti
int
and
jae
das
mov
ficoms
insl
mov
pop
inc
pop
leave
dec
xor
and
loope
dec
mov
xchg
push
inc
out
or
rcrl
sbb
cmc
stc
out
mov
xorl
js
cli
lods
sti
andl
lock
bound
xlat
adc
or
push
push
ficompl
out
or
rcrb
mov
or
lea
nop
and
bound
mov
mov
retw
jae
add
aas
xchg
cmp
arpl
iret
aas
and
subps
ja
mov
cld
jp
movl
adc
test
rolb
cmp
arpl
daa
xchg
fldt
enter
mov
push
mov
mov
mov
lds
xlat
inc
add
in
fdivl
mov
inc
xchg
mov
add
inc
cmp
or
mov
push
rcrl
gs
mov
fistpl
or
test
ds
and
pop
add
mov
cli
arpl
out
insb
sub
mov
es
inc
les
jns
or
push
xchg
and
mov
and
outsl
das
xor
jecxz
sub
mov
inc
lret
cmp
cmpl
add
sahf
das
mov
add
call
popf
bound
dec
out
cmp
mov
xchg
push
nop
mov
mov
jmp
lea
adc
mov
movsb
mov
hlt
shr
push
or
ss
cmp
push
fucomi
dec
imul
push
fs
stos
add
cmpsb
inc
lock
dec
jmp
clc
cld
push
mov
and
push
jne
add
pop
jmp
pusha
cmpsl
mov
adcb
mov
pusha
or
inc
xor
dec
orl
mov
arpl
repnz
inc
in
int3
mov
mov
stos
adc
push
cltd
add
dec
leave
mov
loopne
dec
insl
out
lock
repnz
push
in
mov
fs
mov
vpunpckhqdq
hlt
movsl
pop
cwtl
jb
std
aad
data16
loopne
adc
and
xor
inc
jns
pop
cmp
jp
push
shll
int
addl
movsb
pop
mov
mov
mov
shl
ljmp
add
sti
push
sbb
mov
sbb
dec
adc
iret
outsl
xlat
insl
loopne
xchg
imul
or
mov
divb
sub
ret
lcall
mov
cmp
inc
inc
mov
fdivr
xchg
in
dec
icebp
cmp
pop
test
cmc
push
or
leave
dec
pop
xchg
lds
jo
sahf
mov
add
jns
jne
scas
in
out
sub
lods
xchg
mov
pop
hlt
mov
ja
jp
fwait
mov
scas
outsb
jb
mov
jmp
cli
cwtl
inc
push
push
aad
xor
icebp
mov
gs
xlat
add
jns
add
mov
jl
es
iret
mov
mov
stos
sbb
mov
insl
andl
bound
std
cmp
jg
inc
push
mov
call
sbb
cmpsb
dec
mov
fbstp
inc
pop
cwtl
push
or
shlb
std
insl
push
cmp
ds
test
or
adc
in
sti
sbbl
push
lgs
push
cmp
xchg
mov
xchg
bound
arpl
int
cld
movsb
test
mov
leave
arpl
xor
je
add
sti
mov
add
mov
jle
or
out
loope
test
nop
or
xor
xchg
cmp
jmp
enter
test
loop
adc
lods
lea
xor
jge
data16
cld
out
jp
pop
jg
pop
adc
pop
mov
push
add
mov
insl
xchg
mov
repnz
std
dec
pop
mov
loop
sbb
or
jp
lret
jns
mov
icebp
loope
mov
popa
enter
aas
mov
shlb
scas
or
into
jns
lret
sub
shrl
ret
push
rcrl
in
shll
cmpsb
sub
adc
pop
sarb
push
repz
jmp
push
xor
inc
clc
jne
mov
in
mov
xchg
pop
push
notl
je
es
out
lea
pop
sbb
lock
cmpb
mov
fdivrs
xchg
inc
sbb
cs
test
es
cmp
and
or
jno
rcll
sub
adc
dec
dec
inc
sub
icebp
dec
out
xor
fidivs
int3
mov
or
jno
cmc
imul
movsl
fwait
sub
fstps
sti
mov
or
imul
jne
clc
cwtl
add
pop
jmp
cli
xor
dec
insb
lods
jnp
push
jle
fbld
aad
cmpsb
lcall
xorl
repnz
push
repz
inc
in
test
ret
daa
sbb
aas
pop
outsl
scas
aam
push
mov
repnz
in
stc
jle
call
mov
movsb
lcall
cli
seto
out
xor
cli
lock
jo
and
push
sub
xchg
mov
popa
into
dec
movsl
add
mov
leave
mov
gs
clc
fimuls
inc
imul
jecxz
xor
mov
jle
add
out
pop
fsts
cmpsb
pop
leave
sub
jo
mov
xchg
adc
insl
int3
shll
les
xor
stc
fwait
loop
mov
insl
pop
mov
mov
lret
jnp
mov
jmp
push
ja
jns
sbb
lcall
sub
jp
neg
jo
inc
aad
dec
jae
push
adc
fisubs
push
call
and
subb
iret
mov
arpl
inc
inc
jmp
ja
es
sbb
xchg
test
adc
int
jmp
in
in
out
push
imul
imul
pop
cli
lea
movsb
aas
inc
stc
dec
jb
sbb
in
in
fistps
outsb
lret
ficoml
sbb
mov
in
xor
push
scas
add
outsl
in
xor
mov
mov
fidivs
and
cmp
aas
push
or
arpl
outsl
jmp
cmc
mov
xor
repz
aas
insl
int
xchg
cmp
push
mov
pushf
in
pop
add
rep
sar
nop
mov
cmc
test
test
xchg
xor
dec
daa
push
hlt
in
jbe
jmp
jl
xlat
shlb
add
or
icebp
bound
inc
popa
sarl
addb
lahf
or
sub
push
mov
xchg
movsb
dec
mov
mov
shll
jge
dec
xchg
es
mov
jbe
in
push
dec
dec
lret
lock
push
jg
div
push
cmp
pop
push
cmp
adc
and
mov
cmc
jae
or
dec
sbb
sub
push
push
adc
jo
divps
fists
popa
fldenv
bound
dec
shll
mov
push
lahf
fwait
xchg
xchg
lret
pop
sbb
popa
stc
pop
push
je
and
stc
mov
inc
cmp
sti
adc
jb
sbb
repnz
mov
push
and
or
fwait
clc
jl
jl
xor
sub
xor
cltd
add
rcrb
xor
rolb
jecxz
data16
cld
inc
push
aam
pop
rorb
fcoms
enter
ss
fcomp
or
mov
mov
mov
adcb
ja
aam
gs
push
outsl
sbb
adc
test
jl
mov
pop
xlat
inc
mov
ficompl
mov
mov
sbb
test
add
xchg
in
mov
mov
and
imul
inc
sub
jnp
mov
mov
bnd
mov
xchg
mov
jg
cmc
jbe
leave
or
inc
inc
enter
ret
out
js
jp
arpl
pop
imul
push
ret
out
jecxz
pop
jp
cs
xchg
cmp
adc
inc
cmp
push
jmp
jno
or
mov
mul
pop
lods
xacquire
inc
push
pop
mov
jp
int
orl
ljmp
fnstenv
jo
push
cmp
hlt
xchg
roll
lcall
loope
clc
mov
jno
push
sbb
adc
push
loope
adc
insl
ss
inc
js
shr
sarb
lods
and
mov
mov
enter
jno
push
mov
fiaddl
stos
jne
test
xor
dec
bndstx
int
fistl
inc
in
jle
jo
stc
mov
push
push
fadd
inc
roll
scas
sbb
dec
and
mov
pushf
or
cmp
mov
cmp
ljmp
dec
cmpsl
movsb
push
call
pop
test
xor
cli
mov
jle
lds
dec
ret
test
rclb
add
jno
stc
mov
adc
jp
enter
mov
mov
fdivr
or
xchg
cli
es
ss
ljmp
pushf
je
mov
mov
mov
test
xchg
sbb
adc
jp
les
mov
push
stos
ja
mov
jbe
push
ljmp
dec
decl
fidivl
mov
outsl
sub
sub
mov
dec
stos
lds
filds
xor
lahf
push
out
push
cmp
pop
shr
cmp
and
ljmp
mov
mov
adc
inc
jnp
ret
jl
or
mov
or
xor
dec
jg
cltd
stos
push
mov
leave
dec
in
bound
hlt
pusha
loopne
jge
in
add
ret
scas
mov
push
hlt
fnsave
or
jmp
push
xchg
adc
jle
pop
cmp
xor
pop
xchg
add
add
mov
xor
fucom
dec
dec
test
mov
or
fcmovnbe
adc
push
std
gs
outsb
or
and
jle
cltd
sbb
movsb
popf
faddl
ret
push
pop
sub
and
cltd
push
dec
push
push
ret
dec
xchg
int
jbe
and
jmp
das
sahf
add
mov
fisubl
cmc
idivb
push
fwait
jo
dec
or
testb
pusha
lret
dec
or
or
cmp
loop
adc
mov
jae
pushf
mov
add
icebp
movsb
divl
lret
adc
dec
xor
cmp
adc
jg
test
adc
rclb
jle
xor
out
or
push
cmp
int
aaa
hlt
scas
xchg
sbbb
lds
in
cmp
xor
mov
pop
fisubs
cs
or
imul
jmp
fs
mov
mov
sub
cmp
in
push
mov
inc
jge
and
cltd
mov
and
cwtl
ss
loope
jecxz
adc
or
out
adc
adc
push
movsb
cmp
stc
pushf
mov
pop
data16
sbb
and
fiadds
sub
in
cmp
push
mov
sbb
ljmp
test
sbb
es
test
cmc
pusha
mov
je
adc
lret
mov
stc
xchg
pop
xor
and
jb
icebp
adc
aad
and
cltd
pop
lahf
loop
test
std
out
dec
fstps
xchg
imul
cs
pop
and
gs
or
pop
sub
push
or
or
jne
arpl
lods
xchg
lahf
sbb
mov
popf
dec
xchg
ret
push
adc
push
xor
int3
inc
jmp
dec
pop
jo
enter
insb
pop
loop
or
mov
hlt
mov
add
xor
mov
push
cmp
sbb
xchg
add
cmp
mov
fwait
imul
sbb
jns
lret
pop
or
test
push
pushf
bound
fwait
test
add
xor
fdivl
clc
and
andl
test
mov
das
sti
jne
ljmp
adc
clc
xchg
mov
bound
popa
daa
push
std
dec
test
adc
fisubl
cmpsb
xchg
mov
pusha
fnsave
repz
inc
dec
sbb
std
jne
inc
sbb
stc
outsb
rolb
call
mov
inc
mov
pop
scas
mov
leave
pop
mov
cmp
pop
imul
xchg
sbb
sub
or
xchg
mov
xor
cmp
lods
out
cmp
push
fisubrs
add
shrl
icebp
jp
jmp
enter
sub
in
inc
and
xor
fwait
mov
sbb
adc
add
cmp
stos
rorb
ljmp
mov
out
or
sbb
rcrb
and
and
or
sub
out
jp
pop
push
cmpsb
adc
inc
mov
cmp
cmp
push
stos
daa
push
lock
pushl
xor
pop
adc
hlt
insb
int
sub
imul
mov
iret
jg
sub
cs
pop
pop
jg
orb
mov
cmp
or
insl
out
hlt
mov
pop
arpl
push
leave
mov
out
pop
xor
push
mov
outsl
inc
mov
push
add
inc
push
repz
mul
dec
mov
add
rcrb
jge,pn
dec
cmc
cli
scas
mov
mov
iret
imul
sbb
jg
inc
outsb
imul
mov
or
out
arpl
mov
push
dec
icebp
call
stos
push
adc
and
lea
jns
sbb
mov
dec
push
insb
aas
sbb
test
lods
add
out
stos
fmuls
loopne
sbb
cmp
psadbw
or
mov
subb
stos
mov
lret
push
in
sahf
xor
imul
call
mov
jnp
jmp
aad
inc
pop
mov
xchg
pop
gs
adc
or
push
and
jae
and
pop
push
xchg
sbb
lcall
scas
test
dec
mov
jmp
sbb
pop
mov
loope
ja
cli
fsubp
cld
leave
aas
lea
push
dec
cmpsb
cltd
add
inc
xchg
cli
add
dec
mov
jg
pusha
addl
sarb
mov
loopne
jnp
stc
add
xor
lret
xchg
out
in
mov
sbb
xor
mull
mov
fistps
movsb
xchg
cmpl
mov
push
mov
mov
xchg
cmp
sub
incl
lret
push
cwtl
jne
or
ret
mov
pop
or
in
xchg
loop
mov
sub
movsb
dec
mov
sub
mov
test
in
div
jo
insb
jo
or
dec
jnp
sbb
insb
fs
adc
xchg
push
je
outsb
in
add
cs
shlb
je
lea
add
scas
sar
adc
xchg
mov
into
xchg
test
mov
stos
xchg
jp
out
jne
push
cmp
mov
aad
incl
jno
push
inc
ficoms
dec
jae
add
jno
sahf
mov
or
je
arpl
stos
add
movsb
mov
gs
xorb
mov
fisubs
fwait
xor
cltd
or
shrb
scas
stc
mov
lds
rcrl
push
rclb
inc
insb
movsl
add
or
ja
aam
inc
ds
testl
loope
lods
sub
add
fwait
add
or
mov
jle
notl
loopne
add
pop
ja
add
ret
jae
in
cli
repnz
mov
push
cmpsl
fisubrl
cmp
adc
ret
inc
jle
push
inc
int3
jnp
call
jb
fs
cmp
pop
push
pop
push
push
dec
jge
dec
or
popf
mov
aaa
out
adc
cltd
xchg
aam
pop
jae
pop
sub
je
pop
push
inc
push
mov
jp
stc
jl
cmc
into
outsb
adcl
xor
push
nop
jb
cwtl
adc
pop
outsb
stos
cmp
xlat
cwtl
add
mov
xchg
mov
hlt
mov
daa
ss
rolb
addr16
test
or
xor
and
fwait
repnz
adc
pop
stc
psrld
cltd
in
mov
cmp
mov
dec
pop
jmp
mov
adc
or
daa
loopne
es
idivb
pop
pop
jb
xor
jg
pop
insl
into
mov
sbb
xor
sarl
out
xchg
cwtl
insb
in
test
lret
mov
orl
movsb
mov
xlat
ss
inc
orl
or
xor
cmpsl
xor
jge
stc
jb
cmp
roll
andl
xor
clc
add
bound
flds
imul
in
inc
inc
jmp
jns
imul
push
xchg
inc
into
dec
loopne
push
lcall
cwtl
push
cmp
stos
xchg
js
lahf
ficompl
pop
mov
mov
jno
leave
cmp
ss
add
fdivrs
sub
ja
loop
js
push
xor
jp
sbb
inc
jg
jo
adc
sbb
por
xor
jg
stos
sub
sbb
adc
or
insb
sub
push
mov
pop
jb
into
icebp
xchg
aam
fidivs
fildll
lcall
dec
or
xor
jmp
aas
sti
sub
fnstsw
mov
ljmp
add
ljmp
mov
cmpb
lret
into
sbb
enter
pusha
in
jnp
out
nop
ret
sahf
mov
sbb
mov
mov
loop
push
outsb
mov
out
lea
cmpsb
out
jmp
xorb
and
and
jmp
add
arpl
bound
clc
out
lahf
sub
mov
insl
pop
mov
jae
rol
or
rorb
lret
ficomps
add
aaa
push
hlt
jmp
adc
cmp
ds
push
xor
enter
cmp
mov
mov
or
aaa
cwtl
imul
cmpsb
dec
sbb
mov
bound
into
in
and
xor
xchg
mov
push
ret
or
lods
and
hlt
push
sbbb
loope
mov
mov
imul
shrl
dec
lcall
adc
test
nop
outsl
pop
push
mov
push
data16
adc
cltd
pop
idivb
call
in
jmp
popf
lahf
mov
ljmp
ljmp
jmp
xchg
or
mov
mov
sbb
repz
sbb
cwtl
cmp
je
lea
in
xor
pop
js
mov
adc
inc
jae
xor
scas
cli
push
imul
adc
xchg
and
add
mov
and
pop
cld
stc
cmp
jae
push
jb
xchg
test
shrb
stos
jae
popa
js
push
lods
out
mov
mov
jl
shll
adc
cmc
add
push
push
sbb
sub
xor
xor
cmc
mov
xchg
pop
jb
jmp
xchg
xchg
dec
lcall
das
rcll
leave
mov
iret
loope
sti
into
mov
and
scas
leave
loop
addr16
movb
pushf
fadds
arpl
aam
mov
push
inc
je
xchg
dec
out
jae
aad
jmp
dec
and
loop
pusha
adc
xor
repnz
xchg
or
rclb
lret
hlt
dec
mov
jne
fcmovbe
xor
sahf
mov
out
jb
jo
xchg
call
in
es
mov
cmpsl
xchg
hlt
shr
push
dec
fwait
xchg
xor
dec
andb
pop
mov
lock
pusha
test
mov
std
insl
js
mov
inc
mov
mov
and
pop
imul
cmpsl
jo
les
cmc
fucom
into
stos
inc
popf
lock
and
lods
sbbb
dec
mov
sbb
fnstsw
gs
push
in
cmpsl
push
lock
lret
push
frstor
sbb
lret
pushf
jo
aaa
js
mov
jge
das
push
lahf
jp
test
in
sbb
jbe
mov
les
ret
frstor
out
popf
enter
popf
data16
jge
adcb
loopne
xchg
jg
or
inc
test
ss
outsb
mov
xchg
subl
in
inc
insl
inc
adc
pop
sbb
jne
pop
shrb
enter
lods
mov
inc
mov
je
lret
xor
int3
mov
sub
mov
cwtl
imulb
push
fstl
pop
arpl
sub
inc
loope
fstl
jle
dec
pop
ret
lods
xchg
xchg
out
push
or
mov
mov
lret
xchg
test
rcl
dec
xchg
std
div
pop
int3
sbb
mov
adc
jmp
mov
push
add
aam
sub
insl
inc
sbb
ror
and
push
sbb
enter
stc
lea
pop
or
mov
lods
xor
rcrl
aad
jmp
cmovbe
mov
push
push
test
dec
shll
stc
leave
addr16
mov
cld
mov
stos
and
and
cmp
cmpsb
push
loopne
pusha
call
je
and
mov
mov
push
sti
mov
dec
sbb
sbb
and
xchg
jl
inc
xchg
out
add
test
push
jmp
jg
cmpsl
xchg
lcall
inc
cmp
sub
adc
test
mov
jg
aam
mov
test
inc
insl
and
xor
clc
or
lcall
pop
xchg
adc
jne
mov
inc
mov
rcrb
mov
push
mov
mov
in
lcall
in
icebp
cmp
mov
popa
pop
fcoml
pop
mov
push
notl
hlt
adc
mov
adc
mov
dec
mov
xchg
repnz
inc
jns
addb
inc
mov
notl
or
cmp
in
pop
pop
iret
mov
xor
pop
cmpl
fisubrl
push
jb
inc
mov
mov
cmp
ja
xor
test
nop
clc
ret
out
icebp
pop
cmpsl
xchg
jns
add
stos
pop
notl
inc
mov
shrl
pop
push
ret
push
ja
mov
data16
mov
add
in
xchg
add
cmp
shll
pop
cmp
mov
inc
imulb
mov
sbbl
data16
loope
xchg
and
jb
int
and
xchg
nop
jae
scas
jl
lret
test
or
popf
xor
loop
xchg
inc
mov
ret
pop
out
xor
adc
imul
sti
pop
mov
and
mov
mov
or
and
xor
les
ja
mov
dec
sbb
sub
xor
adc
ljmp
movl
scas
outsl
xchg
xlat
xchg
divl
xchg
xchg
pop
cmp
sbb
mov
stos
mov
aaa
and
dec
insb
and
inc
mov
daa
movsb
fidivrs
ds
pushf
call
rorl
popf
call
int
addl
jmp
push
loope
pop
je
adc
xor
out
push
mov
lcall
adc
xorl
ret
and
xchg
xor
adc
cld
mov
sub
xor
pop
lods
fdivrl
xchg
push
inc
es
pop
cmp
xchg
xor
adc
jmp
jg
push
fcomps
mov
clc
jmp
add
int
imul
dec
inc
in
aaa
repz
or
sti
pop
in
dec
jb
pop
pop
out
dec
test
out
adc
push
jno
cmp
leave
int3
adc
das
or
jbe
popa
push
js
dec
cmpsl
lahf
adc
sub
test
bound
in
pop
les
fbld
pop
adc
inc
mov
mov
ret
mov
fstl
pop
fwait
lcall
dec
dec
loop
mov
call
lret
push
mov
shl
sbb
inc
cli
mov
lret
mov
lock
dec
jecxz
loope
flds
popf
inc
mov
mov
push
movl
pop
sbb
stos
cltd
cs
hlt
or
mov
push
sub
inc
sbb
mov
arpl
arpl
addb
insb
shlb
sbb
and
sbb
out
mov
rorl
lcall
fsubrp
push
xchg
inc
test
leave
xchg
pop
ret
push
orl
push
dec
push
mov
movb
outsl
mov
jbe
fucomip
stos
gs
jmp
pop
jae
out
add
sub
ss
cli
adc
dec
nop
popa
inc
mov
lahf
std
jb
and
ljmp
ja
aas
int3
in
les
push
mov
icebp
sbb
gs
out
daa
sub
lock
adc
sub
lock
test
sahf
cmp
sub
cld
lahf
adcl
mov
xchg
scas
dec
xor
vcvtss2sd
fs
outsl
leave
sarl
sub
je
jne
push
xlat
mov
xchg
push
daa
ds
pop
jl
cmpsl
daa
inc
sub
jb
test
std
test
aad
mov
in
adc
inc
addl
scas
add
test
sti
shll
xchg
adc
pop
pop
mov
adc
loopne
fiadds
imul
jg
mov
jmp
dec
cmp
sbb
in
xchg
lret
ljmp
cmp
adc
sbb
or
jp
cwtl
rcr
mov
in
inc
sbb
jmp
adc
push
xchg
lock
push
dec
jp
xchg
add
lret
lcall
ljmp
push
out
nop
pop
loope
nop
push
inc
xor
fbstp
jne
pop
push
arpl
ja
pop
or
push
pop
stc
xchg
sub
fwait
movsl
aaa
pop
and
add
cmc
mov
insb
cmp
loopne
xlat
imull
frstor
dec
mov
xor
imul
add
pop
mov
adc
sarb
lods
jp
mov
mov
rclb
xchg
inc
jmp
lods
lods
or
add
jo
sub
xlat
jns
gs
mov
or
das
insl
mov
or
cld
add
std
adc
mov
push
jl
sti
stos
cmp
stc
movsl
xchg
fisttps
mov
jg
xchg
mov
jne
cmp
out
mov
or
cmp
xor
pop
pop
xchg
cwtl
push
mov
ficoms
addb
xchg
push
das
mov
stos
inc
lret
dec
flds
pusha
and
shrl
mov
das
mov
test
outsb
scas
add
mov
lretw
sbb
out
mov
subl
ss
inc
outsb
test
addb
inc
jnp
pop
sub
sarl
push
clc
inc
mov
enter
fs
in
push
sbb
cltd
push
filds
adc
pop
out
sub
xchg
or
adc
inc
and
cld
loope
xchg
inc
push
iret
jb
nop
or
mov
mov
aas
pop
cld
xchg
sbb
mov
cmp
push
jne
cmp
dec
leave
or
sbb
or
popf
mov
aas
push
jg
push
or
roll
xchg
pop
fwait
or
xchg
sub
dec
fucomp
ret
loopne
mov
rolb
sub
mov
orb
jecxz
iret
adc
cmp
mov
sub
pop
mov
ret
and
sub
aas
inc
adc
bound
js
or
out
add
ja
int3
std
aas
adc
dec
fnsave
mov
iret
push
je
pop
ret
enter
push
shll
ffree
addr16
add
sbb
clc
jno
pop
sbb
stos
mov
xchg
inc
mov
data16
push
mov
jb
ret
aad
xchg
xorl
maskmovq
divl
stc
adc
int
movsb
xor
lds
sbb
pop
shrb
mov
add
cld
cmp
add
inc
xchg
cld
and
scas
rolb
int
imul
pop
popa
push
lret
or
fildll
or
cmp
jge
fildl
testb
push
jae
jo
popf
jnp
xchg
add
lcall
add
add
scas
ret
iret
idiv
cmp
push
clc
xor
int3
cmc
pushf
adc
push
aam
mov
mov
repz
mov
push
add
mov
cmpsl
sarb
xchg
leave
js
into
jb
movsb
leave
push
dec
addr16
out
xor
mov
andb
or
mov
testb
push
mov
stos
cli
sbb
cmp
sub
clc
sarl
xchg
outsb
inc
cltd
ja
inc
add
push
push
mov
mov
fbstp
mov
mov
sahf
xor
lcall
scas
lea
loopne
ds
mov
popf
pushf
push
dec
into
sbb
sbb
xbegin
cs
push
mov
cwtl
xchg
daa
insb
xor
inc
sbb
orb
sub
mov
shlb
xor
inc
fimuls
enter
pushf
and
je
scas
xor
sti
pop
out
sti
dec
sbb
iret
inc
in
cmp
sub
jnp
xor
or
imulb
mov
fimuls
jl
nop
xchg
sbb
or
mov
rcrl
jecxz
xor
mov
xabort
out
lods
daa
and
mov
subl
cmp
pushf
adc
dec
lock
pop
sub
jg
outsl
fiaddl
mov
js
hlt
lods
mov
sub
push
cwtl
fwait
sub
bound
imul
hlt
push
mov
pop
xchg
sbbb
or
xlat
ret
pop
sbb
outsb
out
cmp
push
shlb
push
jecxz
sarb
mov
dec
adc
shll
xlat
mov
xor
add
xor
fcoml
mov
mov
gs
mov
inc
dec
and
int
jne
xchg
sbb
xor
xchg
sbb
out
sbb
xchg
pop
or
rcl
jp
or
mov
js
dec
repz
xchg
dec
out
jo
aaa
jbe
popa
xchg
pop
loopne
scas
add
mov
and
incl
push
in
mov
js
mov
ds
push
push
mov
ds
lret
outsb
femms
xchg
inc
jmp
push
lods
jns
sub
into
jo
xchg
sbb
mov
pop
mov
popf
jl
out
dec
mov
pop
lcall
xchg
pop
sub
in
inc
imul
jne
xor
movsl
inc
data16
mov
jecxz
lock
pusha
jo
cld
mov
je
inc
xor
xlat
mov
imul
jmp
repz
imul
sti
mov
insb
and
ret
enter
out
lahf
adc
aaa
stos
loopne
mov
movsb
inc
out
cli
dec
xchg
add
fcomps
sbb
lret
mov
test
adc
test
push
xchg
rorb
dec
ret
adc
dec
xchg
dec
cwtl
mov
mov
not
test
scas
xor
add
jl
ja
pushf
dec
mov
pop
push
xlat
jns
adc
mov
call
jle
push
into
mov
xchg
sbb
cwtl
aaa
inc
aad
aas
imul
jmp
lret
xchg
std
push
sub
pop
in
icebp
and
mov
loopne
mov
mov
pushf
data16
das
loopne
pop
add
mov
xchg
push
movsb
push
xchg
insb
mov
mov
subb
xchg
pop
movsl
jbe
jae
cld
out
in
jle
in
je
scas
outsl
insb
inc
pop
aam
pusha
rorl
sbb
sbb
inc
in
nop
xchg
mov
popa
call
push
dec
mov
nop
repnz
xchg
stos
jb
jns
clc
jp
add
fucomip
fsubr
popf
jmp
or
cmp
jne
loope
mov
pop
pop
adc
adc
shlb
xor
adc
inc
pop
lock
rcl
push
xor
ror
cwtl
sarl
inc
rorl
fsubrs
js
pop
push
sub
mov
cmpsl
rcll
xchg
lds
pop
sbb
adc
sbb
data16
jnp
inc
loopne
scas
dec
lret
andb
add
cmp
mov
lds
inc
movsb
mov
push
xchg
in
stc
and
xor
jl
aad
xchg
loopne
stos
ss
fwait
outsl
jge
xchg
shl
in
setp
sar
jg
ret
mov
mov
in
test
xor
mov
daa
out
clc
loop
cmc
inc
jp
outsl
xor
in
push
or
dec
mov
addr16
das
cmpsb
imul
or
out
fwait
mov
dec
add
xchg
lds
pushf
repz
das
outsl
mov
push
dec
sahf
cmp
inc
add
ds
pop
js
lods
dec
ss
lock
fists
xchg
dec
pushf
loope
mov
jno
push
xchg
cli
and
mov
data16
loope
popa
imull
push
repz
jge
mov
sub
mov
punpckhdq
rolb
sbb
xchg
pop
or
fildl
adc
adc
cmp
pop
mov
cld
sbb
sub
adc
enter
push
jp
repnz
add
xchg
movsl
enter
aad
jp
cwtl
imul
decl
mov
pop
shr
or
fwait
lods
or
jns
jbe
xor
mov
and
jb
test
dec
jp
mov
nop
xchg
or
xchg
fwait
fwait
xchg
mov
jb
addr16
out
sbb
jge
test
int3
inc
imul
imul
ret
movsl
ficoms
xchg
out
inc
and
jge
ret
filds
std
inc
insb
das
pop
pop
inc
cmp
jno
xlat
sbb
insl
fdivrl
sti
fimull
and
dec
rcll
mov
jle
jle
out
cs
dec
shrl
sub
mov
jne
sbb
push
cmp
add
shrb
xchg
pop
jo
mov
fidivl
xor
adc
in
test
push
mov
dec
mov
dec
push
xlat
aaa
adc
call
iret
mov
in
insl
and
adc
adc
loopne
jl
cmpsl
sub
testl
push
movsb
cmp
sub
mov
out
sub
aaa
fsts
or
inc
inc
inc
ret
push
dec
shlb
imul
fwait
iret
popf
jle
xchg
mov
xlat
rcrl
enter
out
daa
ds
enter
cli
inc
pop
push
lock
jae
add
leave
xchg
pop
jo
mov
mov
mov
adc
insb
fcmovnu
mov
int
dec
mov
mov
mov
pop
xchg
repnz
jmp
movb
test
inc
scas
sbbl
jmp
outsb
lock
call
movsb
lods
leave
add
mov
outsb
insl
sub
and
out
mov
jge
jmp
jne
sub
push
pop
push
pop
jge
dec
and
imul
int3
mov
sbb
mov
mov
adcb
leave
add
add
adc
sub
add
mov
xchg
fiadds
adc
das
jb
dec
roll
ret
jno
nop
mov
lods
ret
out
punpckldq
rsqrtps
push
xor
in
loop
jb
add
lea
pusha
jmp
push
jmp
movlps
nop
adc
sub
jge
mov
mov
gs
push
dec
dec
out
gs
je
pop
hlt
push
mov
aam
sarb
mov
cli
into
inc
and
push
jne
cltd
clc
fsts
mov
inc
outsl
sub
subl
sub
cmp
jle
jmp
xor
je
add
ja
xchg
sub
jmp
dec
cmp
je
aam
sar
push
in
or
fisttps
cmp
lcall
pop
insl
in
dec
sub
lcall
movsl
xchg
insl
jmp
nop
outsb
mov
mov
xchg
xchg
cmp
mov
sbb
pusha
in
dec
sub
dec
or
add
xchg
adcl
sub
mov
jo
repz
pop
lods
cmpsl
or
or
add
test
enter
dec
inc
lcall
arpl
imul
adc
aam
das
pop
mov
fists
outsl
shll
das
fs
aas
mov
and
push
inc
or
aas
lcall
mov
and
out
and
pusha
cmp
repnz
mov
fadds
inc
repnz
call
inc
push
push
xchg
inc
mov
jmp
idivb
negl
xchg
cmpsl
adc
dec
sbb
adc
sbb
iret
stos
adc
mov
cmovnp
add
lds
enter
sub
aas
cmp
mov
jb
cmpsl
inc
out
cld
and
std
sub
pop
cwtl
sbb
cmp
xchg
pushf
stc
fisttpl
pop
out
addr16
inc
shll
ss
cmp
mov
leave
in
fcoml
push
loope
jmp
xor
pushf
push
cli
push
inc
dec
pop
rcrb
test
add
lods
push
test
pushf
add
cmpsl
fbld
adc
ja
scas
add
stos
and
pop
jmp
fsts
leave
repnz
dec
aam
cmp
push
jle
xlat
cmc
xchg
outsl
icebp
lret
in
lods
ret
push
or
ss
push
icebp
xor
rol
add
stos
jg
mov
mov
loopne
jmp
pop
mov
mov
popf
loop
dec
or
sbbl
dec
sub
pusha
int
lret
push
cmp
mov
mov
arpl
into
xchg
nop
hlt
sahf
pop
cmp
loopne
loop
push
aam
push
adc
es
sub
fisttps
xchg
loope
or
das
mov
jmp
or
aas
sub
sbb
lret
add
adc
inc
cmp
adc
call
int3
pusha
xchg
jb
xchg
inc
mov
imul
add
inc
sub
xor
aad
cs
xchg
mov
mov
filds
aam
mov
sbb
daa
addb
incb
scas
mov
fwait
jnp
dec
sub
es
jl
jp
lock
add
arpl
pop
leave
in
jbe
inc
in
xchg
mov
cs
or
cmp
sbb
fcmove
sahf
xchg
icebp
xor
daa
push
inc
adc
mov
xor
arpl
daa
dec
arpl
and
or
push
xor
loop
sbb
int3
imul
xchg
ljmp
in
mov
lds
pop
add
adc
jo
mov
rcl
mov
out
xor
out
leave
cli
mov
cli
sub
nop
adc
xchg
jge
adc
fmul
jecxz
sbb
mov
mov
lods
sub
or
mov
pop
push
test
shlb
sbb
in
enter
xor
cld
mov
sub
std
ret
cs
mov
loop
add
mov
daa
aam
fwait
xor
add
adc
fidivrl
test
rcl
inc
mov
pushf
int
dec
dec
jp
xchg
jbe
xchg
push
stc
add
sbb
push
repz
sbb
inc
out
sbb
dec
mov
pop
mov
shl
aam
nop
int3
iret
pop
mov
xor
jp
scas
sub
pop
push
rcrl
xchg
sahf
fisttpl
mov
xchg
int
movsb
std
clc
int3
and
adc
daa
jnp
out
arpl
xchg
ds
or
mov
xchg
or
shll
jmp
or
fadd
or
push
aad
test
and
push
in
adc
mov
das
call
lods
jae
or
ret
adc
int
sbb
xor
jge
cmp
js
popf
add
stos
xor
aad
out
pushf
inc
sub
pusha
mov
sbb
ror
xchg
add
cwtl
cmp
mov
fisttpl
sub
lahf
or
imull
cmc
pop
sub
and
sahf
mov
test
cld
and
pop
call
orl
cld
hlt
ss
sti
movsb
adc
dec
data16
das
jbe
xchg
cmpsb
pusha
lahf
imul
insl
popf
into
inc
ljmp
push
ja
repz
stos
jbe
or
sti
pusha
add
insw
aaa
ja
js
mov
sub
notl
push
lcall
pop
add
outsb
and
arpl
pop
out
insb
pop
xchg
sbb
daa
mov
lret
aaa
jnp
mov
inc
fs
sub
lret
mov
enter
sarl
fs
dec
std
into
dec
or
jb
mov
pusha
inc
inc
xor
icebp
mov
xchg
mov
jnp
andl
scas
jne
jge
adc
lea
insb
sahf
mov
data16
sub
jmp
sub
mov
xchg
test
fldl
loope
mov
inc
inc
cld
add
in
pop
push
mov
loop
and
mov
sub
clc
aas
sti
sti
mov
js
aaa
sti
movb
mov
ret
pushf
icebp
pop
add
lcall
mov
push
mov
popa
dec
stos
and
inc
ficoml
add
xchg
cmpsb
dec
movsb
scas
lea
hlt
mov
xchg
lret
inc
dec
mov
js
cmp
sub
push
xchg
aam
jle
cmp
cmp
and
fcomps
je
dec
inc
cmpsb
fistps
imul
push
xor
loop
cmp
stos
sbb
push
add
and
inc
xor
push
xchg
cmp
arpl
sbb
cmpsl
push
push
test
sub
movsl
mov
ja
and
mov
dec
movb
fcoms
cmp
jg
test
les
cli
enter
or
push
daa
lods
loope
fidivrl
sub
or
aas
daa
mov
jle
cmp
sub
and
mov
lcall
add
dec
popl
xor
xor
movsl
mov
scas
mov
dec
mov
ss
jmp
sti
sub
jl
jg
push
out
xchg
xor
jo
dec
ljmp
clc
pop
adc
lahf
add
nop
push
pop
pop
mov
je
xchg
and
push
jo
lret
adc
scas
pop
dec
xor
rclb
sbb
mov
imul
fucomi
fwait
idivb
cmp
pop
pop
cmp
pop
xorl
fwait
mov
mov
sub
andb
cld
xchg
mov
int
stc
stos
repnz
add
icebp
lods
cli
sti
pop
lret
xchg
cwtl
mov
cmp
inc
je
adc
add
push
insb
push
xchg
add
adc
and
lret
jle
cmpsb
mov
stos
std
adc
inc
ret
xor
fidivrl
inc
clc
add
addr16
jne
pop
pop
lret
and
lock
je
dec
frstor
imul
shl
popaw
lret
daa
fadd
fdivr
iret
ret
cmp
pop
jl
fucom
inc
insb
sub
lret
inc
mov
testl
or
add
mov
div
outsb
mov
and
adc
sub
std
mov
aas
jp
ret
leave
push
mov
scas
dec
jae
pop
jno
jae
sub
cmp
adc
jp
sbb
cmp
mov
mov
add
jecxz
aas
mov
call
in
mov
leave
dec
push
repnz
sahf
jb
into
or
mov
test
fwait
cmp
jns
movsb
sbb
jae
movsl
xor
lcall
enter
cmp
adc
aad
push
pop
outsb
imul
rorl
push
jle
sub
and
sahf
xchg
mov
push
cmp
add
orl
mov
mov
push
add
cltd
lds
lret
shlb
mov
add
sti
cld
fimull
pop
gs
lret
enter
mov
pop
mov
loope
xchg
out
imul
mov
fsubp
mov
das
insl
insl
and
or
movsl
xchg
test
or
and
popa
jmp
and
ja
aas
mov
loop
leave
xchg
in
in
mov
gs
inc
dec
xchg
stos
fistl
xchg
inc
cli
iret
xor
movhps
cld
aaa
test
clc
nop
or
shll
lds
adc
and
mov
rcrb
test
rcrb
sub
dec
lret
pop
scas
aaa
push
mov
fidivs
and
pop
stc
and
pop
out
mov
clc
imul
test
clc
inc
cli
dec
xchg
aad
jns
cmpsl
cli
cld
mov
gs
daa
rorl
lcall
xchg
insb
sbb
pop
mov
sub
in
cltd
dec
push
pop
or
out
lods
in
scas
pop
shlb
mov
pop
mov
mov
dec
dec
push
and
mov
and
xor
sub
addr16
sbb
pushf
add
cs
push
add
jle
push
popf
lahf
dec
mov
fdiv
out
push
xchg
sub
sub
fs
jae
mov
mov
mov
sti
mov
sbb
out
lods
test
xchg
addb
sbb
popa
stos
outsb
push
xchg
mov
inc
aaa
push
inc
sub
or
dec
loopne
inc
inc
mov
addl
fldenv
xlat
dec
iret
stos
mov
jo
mov
cmpsb
lock
cwtl
mov
movsb
or
lock
xchg
sub
adc
cs
fbld
jge
mov
push
dec
call
pushf
imul
xor
imul
sbb
ret
cmp
mov
dec
mov
fmul
add
cltd
ljmp
lock
shlb
pusha
je
pushf
inc
out
test
int
mov
nop
std
dec
loope
fisubl
cld
push
sub
scas
xlat
test
jl
lods
push
imul
xchg
cmp
sbb
ljmp
cmp
push
fbstp
inc
iret
cmpb
loop
sahf
push
hlt
and
xchg
insb
scas
inc
shrb
xchg
pop
adc
lds
sbb
xchg
add
push
aad
sbb
insl
mov
mov
sub
jle
and
xchg
sbb
mov
dec
push
sbb
mov
sub
les
fldt
fidivrl
mov
aas
nop
in
mov
fdivrs
mov
sti
loope
xchg
lret
pop
imul
jo
inc
movb
js
mov
cmpsb
mov
lea
and
jge
cmp
cmp
and
imul
sbb
out
inc
mov
xorl
pusha
sbb
pop
xor
xchg
cld
xor
push
mov
jns
and
dec
push
in
mov
jae
lcall
rcrl
cbtw
sar
rcrb
jo
inc
xchg
test
es
data16
inc
jo
xor
jp
and
addr16
mov
dec
test
sub
push
scas
inc
pop
mov
in
sub
outsl
cmp
push
add
ds
push
fcoml
inc
xor
push
mov
bnd
in
movsl
mov
adc
mov
cwtl
gs
inc
push
mov
jnp
gs
and
loopne
pop
adc
into
insl
jns
daa
cmpsb
adc
cmp
inc
cmc
repz
cmp
and
ret
fimull
dec
mov
cmp
cmp
push
inc
mov
mov
pop
inc
pop
mov
repnz
dec
jbe
pop
sub
icebp
testl
pop
jbe
jecxz
leave
mov
ret
dec
adc
mov
test
mov
and
adc
or
push
inc
jecxz
adc
aad
pusha
outsl
leave
lret
mov
push
jmp
or
or
stos
push
icebp
inc
cmpsb
movsl
inc
pop
arpl
cmp
rcrb
jbe
push
sar
and
dec
outsl
cwtl
push
cmp
add
ret
jo
cmpsl
popf
int3
mov
cmpsl
mov
push
mov
adc
bound
xchg
mov
sbb
mov
lret
cmpsb
test
movaps
test
sub
test
js
movsb
shrl
out
loope
adc
cmp
clc
sbb
sbb
imul
mov
adc
inc
add
pop
dec
xor
pop
and
dec
enter
scas
lods
testb
cmp
xchg
and
in
dec
es
int3
push
pop
sbb
xchg
inc
enter
inc
ror
jae
into
stos
inc
push
fsub
out
add
movsl
push
lea
fsubs
shlb
cmpsb
inc
jge
int3
repnz
push
jmp
aas
imul
mov
fstl
inc
rorl
jb
and
fmull
jle
nop
dec
cmp
push
push
xchg
cmp
xchg
cmc
adc
adc
mov
rcl
xchg
shlb
mulb
pop
cmpsl
cmp
test
es
pop
push
pop
addr16
into
pop
lds
mov
rclb
cmp
cld
adc
daa
inc
ss
jnp
sbb
inc
cs
pop
gs
leave
daa
or
jbe
test
scas
decb
sub
mov
imul
int
fbstp
xor
pop
loop
xor
cltd
push
test
shlb
pop
shl
cmp
dec
inc
mov
sbb
arpl
cmp
subb
mov
lods
mov
orl
xchg
or
and
adc
or
movsl
loop
inc
push
int
mov
inc
push
pop
data16
in
pop
mov
lcall
mov
fdivrl
decb
push
pop
notl
or
in
jmp
rorb
mov
addr16
pop
push
daa
lret
lcall
andl
jae
adc
pop
rorl
jo
xchg
imull
sub
pop
out
xchg
xchg
stos
loopne
pop
mov
add
or
mov
ficompl
fldcw
xchg
jmp
outsb
call
fstl
pop
mov
loopne
and
jle
jecxz
mov
xor
mov
fdivrs
sbb
pop
or
icebp
outsl
or
xchg
xchg
sbb
and
loope
mov
loopne
stos
in
jno
xor
or
pop
sbb
bnd
push
pop
jg
jne
xchg
sbb
mov
cs
les
test
movsb
xor
cmc
clc
scas
adc
xchg
cmp
xchg
mov
movsl
pop
ret
fnsave
dec
pop
jmp
rorl
adc
loop
es
fnstenv
dec
dec
fcmovne
lcall
xchg
lods
sbb
rcl
pop
adc
xor
mov
gs
or
in
dec
bound
cmp
mov
mov
sti
pop
loop
loopne
jbe
inc
fsub
out
bound
iret
add
adc
sub
dec
lahf
pop
js
sbb
and
shll
lods
mov
xchg
xor
std
scas
xorl
cmpsl
mov
stos
mov
or
rclb
mov
xchg
sub
mov
add
fidivl
sub
fldl
sub
icebp
add
nop
pusha
pop
push
cmp
idivb
fisubs
lcall
loop
scas
arpl
stos
jne
out
test
sub
mov
aaa
sub
enter
das
or
fistl
inc
mov
and
jne
mov
and
icebp
jle
fdivrl
psubw
ljmp
sub
xchg
out
pop
mov
and
jle
lods
jle
in
inc
mov
add
movsb
in
jecxz
pop
cmp
mov
add
xor
shr
ja
stos
sub
lods
cld
iret
xor
jg
mov
je
pop
pop
and
or
scas
popa
fdivl
mov
and
stc
lods
test
gs
ljmp
test
jo
xchg
je
jmp
mov
push
iret
lret
mov
adc
add
iret
inc
xchg
loopne
filds
inc
add
push
xor
mov
pmulhw
stos
fwait
cmp
lds
or
lock
int3
jecxz
andb
clc
popa
sub
fnsave
jge
movsb
andl
inc
push
outsl
cs
scas
pop
idivb
rorb
jp
mov
daa
xchg
cwtl
cmc
fimuls
adc
les
clc
adc
in
push
or
icebp
or
xor
stos
imul
jmp
sbb
mov
mov
mov
dec
lcall
mov
inc
mov
mov
pop
lds
xor
mov
mov
jl
mov
jle
mov
or
dec
push
sbb
cmpsl
fldt
cmp
icebp
loop
das
jge
pop
xor
mov
push
mov
cltd
push
xchg
sub
mov
lods
loopne
fidivl
shr
cmp
lcall
jmp
xchg
sbb
aaa
inc
jo
rcr
mov
pop
pop
and
nop
int
mov
jno
lret
cltd
jae
fs
or
les
je,pn
push
ret
retw
push
jmp
mov
gs
xchg
ss
insl
lahf
imul
cwtl
popf
pop
pop
andb
push
insl
jmp
mov
por
mov
sahf
aaa
in
icebp
jne
repnz
inc
test
mov
dec
push
or
fadds
xlat
mov
dec
push
xchg
cmc
pop
xor
stc
jle
adc
push
mov
aam
xorb
jns
out
jl
sbb
fst
sbb
dec
sub
loop
loop
in
pop
mov
and
and
push
iret
ret
xor
jl
in
pop
nop
xor
mov
shl
sub
and
test
mov
fldcw
xchg
lods
inc
cli
sbb
mov
jb
lds
mulb
mov
jmp
mov
sbbl
xlat
xchg
pop
or
das
inc
outsl
mov
jb
xorb
and
lods
mov
or
lea
add
ja
mov
lods
ljmp
cmp
sbb
push
call
cwtl
dec
add
xor
dec
jmp
xlat
adc
cwtl
pop
mov
lods
lds
sub
xchg
jl
rclb
fldl
ret
aas
push
dec
adc
scas
xchg
fs
daa
push
call
in
xchg
scas
inc
sbb
movsb
mov
rolb
push
fcomip
aam
test
inc
int3
sbb
in
enter
push
cld
outsb
out
cmp
adcl
clc
into
adc
cmpsb
dec
cmp
cmp
fldt
gs
push
mov
pop
loop
pop
jl
dec
cmp
jge
sub
loop
or
mov
gs
daa
loop
pop
add
add
mov
xchg
les
div
dec
sub
testl
pop
inc
xor
adc
out
mov
shl
adc
dec
mov
sbb
jl
xor
fs
iret
pop
in
xchg
test
push
xor
mov
or
mov
mov
xchg
sahf
loope
jbe
rorb
jae
loopne
fs
mov
rcrb
pop
xchg
mov
inc
faddl
out
test
jg
rorb
sti
fnstcw
out
sub
pop
or
sub
test
jl
or
jne
inc
inc
repnz
bound
jecxz
iret
and
clc
push
mov
lret
mov
ret
mov
mov
cli
fsubs
scas
rolb
mov
adcl
jb
and
pushf
fwait
imul
or
add
push
xor
push
shl
out
xor
sub
imul
mov
dec
loope
insb
mov
inc
dec
mov
test
inc
adc
ja
or
and
cmp
xchg
scas
push
cmpb
and
lret
sub
ret
jl
sub
scas
push
repz
mov
sub
or
stos
xchg
ds
mov
xchg
orl
inc
roll
pop
test
mov
cld
fildl
out
dec
fwait
inc
xchg
cmp
xor
or
pop
and
out
jnp
iret
aad
and
jo
mov
mov
mov
loope
cli
lret
xlat
or
pushf
ljmp
pop
repz
bound
shrb
xor
mov
dec
fbstp
frstor
xchg
lods
sub
cwtl
add
fucomi
aas
pop
cltd
loop
xlat
test
inc
jnp
or
jecxz
mov
inc
adc
fadds
or
unpcklps
push
sub
inc
ja
loopne
xchg
sbbb
mov
sub
fdivrl
jmp
outsl
cmp
rcl
in
dec
adc
adc
jae
cmp
xchg
rolb
loop
jo
sbbl
clc
sub
enter
sub
dec
pavgb
cmpl
in
dec
mov
popf
das
push
sub
imul
pushf
sbb
sub
inc
jg
inc
jns
ltr
aaa
enter
lcall
xchg
inc
sub
mov
lods
add
lods
scas
pop
cltd
out
pop
outsb
sub
cmpsb
aam
lds
in
stos
call
xchg
mov
int
xchg
mov
mov
rcl
jo
stc
inc
pushf
sub
push
or
ja
mov
mov
hlt
fucomp
lcall
fs
mov
push
cmp
jnp
mov
shrl
inc
repnz
test
and
and
test
popa
in
ja
adc
inc
ljmp
jns
fwait
das
in
mov
stos
sbb
push
mov
out
jge
cmp
shrb
lahf
sbb
mov
enter
jl
cmp
sub
inc
imul
ja
jo
xor
push
push
add
bound
push
jle
cltd
cld
xchg
push
xchg
ret
fucompp
in
ds
daa
pop
loope
fcmovbe
mov
push
cmp
fistpll
in
sub
shl
mov
jns
mov
loopne
push
cmovp
fdivrs
push
repz
fs
pop
sub
pop
push
loope,pt
push
js
and
xchg
stos
dec
mov
mov
in
cld
sbb
in
mov
mov
add
xchg
cld
add
cld
clc
mov
hlt
or
out
imul
sub
aaa
jl
lret
and
repnz
mov
dec
pop
inc
mov
repnz
ja
push
mov
and
jecxz
fs
inc
ds
xor
mov
subb
stc
pushf
mov
xlat
inc
fcmovu
inc
ret
sub
cli
in
jg
lods
and
repz
cmp
test
fimull
insb
and
jae,pn
add
mov
push
pop
das
in
and
inc
push
cmc
adc
and
ljmp
in
xchg
ja
dec
sub
stc
lret
jecxz
inc
jp
lods
std
jne
dec
and
outsb
add
lods
xchg
sbb
insl
mov
jbe
cmc
cmpsl
call
movsl
imul
or
jbe
pop
pop
jp
adc
adc
jne
jbe
repnz
push
dec
popf
lret
mov
pop
int3
lea
push
fs
jns
and
aas
xchg
cmpsl
push
or
mov
arpl
pop
ja
push
add
xchg
xor
fidivl
mov
dec
fdivs
jnp
cmp
pusha
das
cmp
push
xchg
mov
daa
sbb
mov
shl
and
hlt
movsb
pop
xchg
mov
pop
mov
fisubl
and
mov
mov
aad
lret
xor
mov
pop
cmp
pop
out
mov
ficoml
add
cmpl
push
add
push
movb
jo
sub
and
jno
test
test
out
or
pop
add
fldcw
jecxz
inc
xor
jns,pn
and
aad
push
popa
js
and
scas
inc
xor
dec
cmpsb
cltd
mov
mov
ja
call
xchg
rep
jb
inc
mov
and
pushf
pop
jo
call
out
jecxz
out
call
or
mov
push
adc
data16
xor
mov
xlat
xchg
sbb
xchg
lods
int3
xchg
adc
sub
add
push
cmovns
outsb
pop
dec
sub
divb
and
jbe
lret
hlt
stos
push
dec
nop
mov
rcrl
int
aaa
pop
out
push
sub
jne
xchg
in
stc
lock
lret
pushf
jns
mov
cmp
movsl
sub
push
inc
or
lcall
xchg
mov
sti
in
insl
int3
sbb
imul
cmp
cmp
pop
add
xor
cltd
sbb
adc
sub
stc
mov
or
bound
pop
mov
outsl
pop
sarb
or
mov
dec
jo
fdivs
icebp
push
cmpw
xor
or
cmp
aam
fnsave
fs
int3
push
loopne
outsb
ret
inc
xchg
cmp
arpl
fdivl
mov
insb
mov
lds
mov
pop
lcall
fwait
dec
rorb
test
dec
loope
mov
flds
pop
ret
sub
xchg
test
push
xor
insb
or
cli
loope
lret
and
mov
fstl
and
gs
popf
mov
push
dec
in
jo
das
out
mov
pop
and
fcompl
xor
cmc
cld
in
aaa
sbb
lock
jbe
nop
test
mov
into
mov
adc
stos
or
mov
xchg
xchg
sti
aam
mov
mov
stc
and
fisttpll
xor
cmp
jg
sub
push
ja
cmp
or
movsl
pop
jnp
lock
push
dec
bound
hlt
mov
add
test
cmp
cmpsl
test
stos
lahf
sub
mov
adc
fwait
cmc
push
mov
pop
lock
inc
std
insl
inc
pop
inc
mov
orb
scas
mov
sub
andb
or
mov
sbb
adc
pop
fs
dec
dec
cwtl
test
clc
fsts
or
pop
or
out
ret
xchg
xchg
popf
gs
sbb
icebp
and
mov
lahf
mov
cmpsl
ja
das
flds
hlt
jnp
push
mov
or
dec
jbe
or
dec
mov
mov
dec
xchg
fcomi
inc
outsl
pop
movsb
dec
cltd
cmp
das
pop
stos
ja
clc
or
sub
xchg
add
sbb
shll
push
int
push
test
psubw
xchg
xor
xor
ljmp
mov
in
cmp
out
cmpb
sub
lock
mov
mov
int3
dec
cmp
popa
pop
and
xchg
dec
pusha
xchg
mov
jp
mov
scas
js
mov
jbe
nop
xlat
inc
mov
sub
leave
xlat
jl
sbb
cmp
dec
mov
xchg
push
jnp
mov
gs
movsl
cmpsl
inc
out
dec
cmp
xchg
mov
mov
arpl
cmp
cmpsl
add
cmp
mov
les
xchg
fwait
mov
inc
es
adc
mov
push
imul
add
inc
pop
stos
call
mov
mov
popl
push
inc
mov
mov
cs
inc
or
stc
int
shlb
pop
fdivrs
mov
push
mov
imul
pop
lret
mov
and
or
jbe
and
xchg
popa
aad
fnstenv
lcall
nop
arpl
shrl
mov
sbb
shrb
ljmp
and
and
fimull
popa
insb
inc
lcall
push
jg
inc
je
or
push
enter
mov
xor
pop
cmp
cmpsb
inc
adc
das
js
inc
fisubs
cmp
sbb
xchg
push
sub
dec
xor
jmp
imull
pushf
xchg
test
add
jb
stc
mov
scas
outsl
shrl
out
mov
add
fs
xchg
or
lods
ficompl
inc
enterw
cs
repz
aas
scas
adc
xchg
in
mov
roll
inc
jno
push
sub
imul
fdivrp
repnz
jnp,pn
adc
push
ret
ljmp
mov
rcrl
adc
jne
mov
sub
pop
fiadds
dec
imul
data16
lods
aaa
lods
cs
testl
jl
mulb
pop
fprem
add
xor
cmovg
add
cmp
outsl
test
paddsb
dec
dec
fisubs
cld
push
xstore-rng
cmpsl
add
insl
scas
xchg
push
push
add
les
imul
lret
dec
cmpsb
sbb
insb
testb
pop
iret
and
loop
aas
out
adc
cmpsb
leave
sbb
mov
sub
jnp
dec
and
push
dec
dec
fidivrs
cmp
xor
rorl
std
push
xor
sbb
cli
inc
fcmovne
xchg
fimuls
mov
push
xchg
dec
xlat
adc
loopne
xchg
inc
mov
xchg
dec
sbb
shll
cs
ret
add
jl
xchg
pushf
addb
popf
cmpsl
and
dec
pushf
inc
sub
push
fdivl
pop
and
mov
sbb
orb
cmp
sub
cmp
loope
into
int3
inc
mov
lcall
lock
fcoml
stc
push
insl
mov
pop
sbb
rcrb
ss
xor
clc
int3
notl
mov
pushf
popf
je
out
xchg
addr16
mov
add
divl
out
xor
cmpsb
loope
sub
sub
jae
adc
pop
and
jl
fs
das
addr16
mov
lds
push
inc
aaa
mov
inc
sbb
clc
dec
mul
daa
dec
insb
pop
jmp
je
pop
add
adc
or
daa
sub
icebp
fcomps
jl
jns
in
nop
stos
sbb
rol
push
push
frstor
jae
dec
jmp
ljmp
jmp
out
jmp
fwait
adc
loopne
push
or
lods
fs
lcall
jns
dec
push
xchg
mov
sbb
mov
mov
ficoms
jmp
incb
aaa
mov
and
fsubl
adc
add
push
mov
lods
push
xchg
xchg
movsb
lock
test
push
push
loope
mov
xor
xor
repz
or
test
push
mov
sbb
jl
mov
pop
sbb
icebp
jle
and
lcall
mov
cmpsb
sbb
push
jbe
loope
xchg
rcr
mov
out
push
dec
divb
jae
out
ljmp
sub
inc
adcl
xor
je
xchg
adc
cs
iret
loopne
push
in
pop
rep
fists
add
mov
mov
rcrl
test
mov
popa
mov
ljmp
test
dec
dec
and
es
push
imul
dec
xor
dec
jg
and
subl
dec
andl
rol
adc
loop
jmp
sub
je
je
int
loopne
popf
mov
mov
iret
movsl
stos
cmp
aas
jne
xor
xchg
or
mov
daa
xchg
jne
sub
sub
inc
lods
iret
hlt
push
mov
mov
test
xchg
pop
mov
or
and
stos
scas
pop
or
fs
idivl
cmpsb
jl
or
addl
es
pop
icebp
add
adc
jae
fmuls
lds
and
cli
mov
xchg
jle
lcall
cld
fabs
fdivs
sbb
sbbb
popf
nop
and
jnp
xchg
and
lahf
push
inc
xchg
in
test
cmp
inc
mov
push
incb
cwtl
pop
leave
pop
mov
jmp
adc
xchg
ljmp
cltd
xor
pop
mov
stos
call
ja
int3
cs
sbb
enter
jne
sbb
mov
pop
push
out
xor
test
sub
adc
pop
inc
testb
imul
cmp
bound
fistpll
xchg
cmp
add
jmp
aas
jl
inc
xchg
cld
fstl
sbb
xlat
mov
mov
jmp
ret
shll
xchg
cld
stc
add
mov
or
stos
pop
jbe
je
xor
fs
dec
mov
add
nop
imul
in
jecxz
mov
inc
lret
aaa
leave
test
and
jg
inc
mov
lods
mov
pop
shr
lret
or
mov
mov
popa
dec
and
xlat
out
arpl
cld
lea
jno
cmp
push
leave
jle
add
dec
xor
sbb
insb
data16
pop
jmp
mov
rcrl
xchg
mov
add
imul
sub
negb
ds
fadds
rcrb
sub
xor
cmpsb
inc
pop
push
inc
call
lcall
adc
inc
cmp
xchg
fcoms
push
adc
imul
repnz
cmp
add
ja
in
divb
adc
add
pop
push
in
out
repz
fsubs
adc
test
add
or
mov
mov
pusha
mov
jmp
and
popa
adc
icebp
mov
stos
sub
div
cmp
mov
movsl
xchg
xchg
xchg
adc
je
stos
out
lea
and
push
or
into
rol
jne
ret
push
pop
jno
std
pop
lahf
mov
lds
mov
mov
sbb
or
pop
sbb
mov
fisubrl
jb
push
movb
pop
or
jle,pt
mov
mov
cmc
outsb
frstor
fmul
bound
xchg
daa
mov
ret
notb
lcall
sub
cmc
sub
cltd
jno
mov
pushf
dec
jbe
push
out
lock
mov
and
or
loope
test
push
sbb
push
inc
in
mov
cltd
sub
insl
push
stos
mov
idivl
pop
ds
inc
xchg
lahf
fiadds
mov
shrb
add
pop
lods
jnp
sub
xchg
sbb
aad
xchg
inc
in
scas
int
mov
jbe
divb
push
and
pop
bound
mov
daa
ljmp
rcrl
movsb
cmp
ja
fnstsw
loopne
sub
xchg
mov
sbb
mov
jecxz
xchg
fisubrs
in
jbe
jae
mov
imull
popf
jle
mov
inc
push
shlb
sub
out
pusha
call
push
out
pop
addb
dec
enter
scas
mov
inc
sub
enter
aas
xlat
rcl
adcb
xor
sub
repnz
push
dec
jno
imul
mov
inc
outsl
in
andb
jge
cld
jmp
hlt
mov
out
cmc
sti
inc
mov
jae
adc
xlat
mov
das
hlt
pop
loop
pop
shlb
imulb
sbb
fs
mov
ss
into
scas
jl
daa
and
push
into
jecxz
in
push
or
scas
je
in
push
aam
xchg
jmp
sbb
add
inc
pop
and
nop
sti
mov
test
jmp
pop
mov
xor
rcl
loopne
ret
aad
int
xor
xchg
push
bound
mov
std
cmpsb
pop
data16
lock
or
std
mov
xor
xor
adc
imul
xchg
subl
xchg
aaa
jno
aaa
push
fucomip
dec
out
sbb
test
rorb
leave
and
cmp
xchg
aaa
xchg
dec
std
inc
push
jo
add
insl
or
sub
iret
movsb
push
in
shll
mov
pop
jmp
cwtl
scas
leave
pop
and
jmp
mov
dec
cmp
cltd
pushf
xchg
cmc
arpl
sub
cmp
adc
inc
out
mov
cmc
popa
mov
rolb
jmp
popf
jecxz
pop
pop
sub
insb
xchg
gs
mov
jo
out
int3
ds
xchg
movsb
mov
pop
cmpxchg
sub
lods
jbe
and
mov
fucomp
push
push
loopne
mov
jmp
or
lods
shrb
cmp
pop
jl
das
cmpl
xlat
lcall
loop
scas
add
pop
push
rolb
aam
into
jb
movsb
jbe
in
push
push
dec
jg
push
mov
inc
divb
mov
push
dec
jl
dec
inc
mov
push
mov
out
mov
lahf
fistpl
lea
lock
push
or
and
loopne
sbb
ret
push
mov
fisubs
movd
daa
fsts
xor
popa
sub
jmp
jb
mov
mov
adc
push
out
inc
xchg
adc
scas
fwait
xchg
lea
mov
and
ja
pop
mov
sbb
xchg
pop
push
ficomps
enter
or
lahf
add
mov
shl
xor
je
add
shlb
xor
sbb
sbb
fmul
jg
repnz
jbe
int
mov
fsubl
movsl
aam
sub
jbe
push
int
sbb
inc
dec
sub
mov
cmp
rcrl
push
jmp
out
dec
push
out
add
daa
aam
sub
sbb
xchg
mov
aad
fwait
arpl
shl
push
fstl
bound
pop
cwtl
push
loope
clc
lds
test
pushf
jp
mov
outsl
xchg
push
sub
test
jle
inc
dec
inc
mov
dec
es
xchg
mov
fdivrp
or
lds
movsb
notl
mov
pushl
xor
jg
es
imul
add
test
and
ficoml
fildl
mov
aas
les
sarb
and
aas
and
lret
out
sbb
jmp
pop
sar
mov
outsb
adc
fbstp
mov
pop
dec
cmp
lock
jl
adc
jle
jo
gs
dec
sbb
add
popa
fcompl
xchg
shrl
or
sub
mov
jmp
cmp
pop
in
fsub
jo
push
jecxz
sub
pop
sub
or
adc
push
pop
mov
xor
fdivs
test
add
mov
dec
fs
xlat
xchg
scas
dec
out
mov
pop
ljmp
out
into
cld
xchg
imul
in
and
or
xchg
mov
mov
and
pop
mov
insb
repz
push
xchg
mov
jl
pop
push
stos
mov
pop
loope
inc
lret
aaa
add
mov
push
and
repz
aad
pop
rcrb
xchg
dec
push
inc
push
mov
pop
int3
adc
inc
aaa
fcmovu
mov
mov
test
mov
sbb
shrb
imul
cmp
pop
jbe
stc
dec
pop
jecxz
jg
cltd
out
in
shrb
pop
pop
push
jne
mov
insb
shl
sbb
pop
jge
adc
jo
fidivs
xchg
test
mov
inc
xchg
lret
mov
fisttpl
pop
and
mov
in
fwait
popa
and
leave
adc
mov
push
push
jno
jmp
sub
sbb
pop
push
divl
js
pop
pusha
adc
pushl
mov
fwait
add
sub
int
fxch
mov
lcall
loopne
into
sub
div
lret
xor
cmp
xor
outsl
mov
inc
sbb
or
dec
movsl
outsb
xor
xor
shll
add
xchg
repnz
mov
jg
pop
xor
jno
jmp
push
dec
iret
test
add
push
loopne
dec
icebp
push
into
xor
icebp
ja
xlat
roll
cld
jns
add
add
test
push
addl
xchg
sbb
adc
inc
dec
push
daa
mov
add
popa
shrl
xor
pop
cmp
stos
call
lods
add
test
loopne
mov
push
dec
movsb
jmp
fmull
popa
xchg
push
lret
add
data16
adc
scas
lock
int3
pop
jg
cmpb
ss
cmpl
fs
imul
rolb
enter
jne
leave
icebp
push
loope
mov
mov
add
xor
inc
push
popa
fs
xchg
dec
popf
cltd
sub
outsl
int
les
xchg
jnp
adc
sub
popl
test
or
and
dec
sub
or
scas
out
dec
lods
adc
iret
std
jle
xchg
sub
add
ffree
jge
les
bound
xlat
pop
sub
gs
in
pop
ja
inc
lret
mov
jae
mov
ret
sbb
in
and
dec
or
out
and
dec
addr16
scas
add
arpl
pop
xor
dec
inc
lcall
or
das
adc
ret
adc
mov
pop
or
pop
add
adc
xor
mov
cs
xchg
sti
lds
adc
popa
out
inc
push
push
xor
loope
cmpsb
fsts
rcll
les
int
int3
push
sti
frndint
fcoms
pop
mov
mov
mov
inc
xchg
xchg
pop
push
mov
and
stos
addr16
mov
fxch
pusha
mov
adc
or
test
push
loope
out
sbb
push
mov
outsl
in
and
xchg
and
cmp
push
and
or
push
out
dec
repnz
movsl
sub
jecxz
mov
test
mov
push
cmp
stc
aad
xchg
mov
push
iret
dec
out
lock
bound
das
fcoms
pop
mov
sub
xchg
out
sbb
cmp
lret
jno
mov
adc
es
cmp
sbb
or
add
cmpsl
pop
mov
outsb
add
adc
mov
ret
fcomps
lds
int3
in
aas
and
dec
xor
sbb
push
and
xchg
cwtl
jp
ljmp
outsb
lock
inc
sahf
scas
call
pop
mov
adc
and
in
add
mov
and
cmpl
push
int3
xchg
das
mov
push
cld
cmc
testl
sbb
adc
mov
xrelease
leave
push
xchg
ja
mov
arpl
mov
andb
scas
stos
jnp
mov
xchg
sub
clc
mov
sub
mov
js
push
mov
sbb
xor
and
sarb
add
xlat
mov
iret
cltd
inc
stos
xor
jl
roll
shl
test
mov
cltd
fnstcw
stc
int3
sub
dec
loop
or
and
imul
push
repnz
cmp
push
imul
inc
lret
or
mov
adc
adc
pop
in
in
pop
insl
push
aas
out
movsl
aam
fdivr
and
add
add
imul
repnz
inc
push
int3
aad
test
add
aam
adc
clc
pop
add
data16
sbb
lods
insl
gs
mov
dec
outsb
loopne
push
andb
scas
sti
sub
lea
xor
sbb
sub
es
inc
outsl
xchg
fnstcw
mov
mov
cmp
xchg
movl
es
mov
mov
std
mov
cmp
ljmp
dec
fcoms
shlb
insb
and
push
mov
push
adcl
sbb
cmpsl
icebp
call
pusha
and
leave
lahf
out
jb
xchg
jp
push
or
daa
loop
movsb
xchg
mov
mov
sub
pop
movsb
int3
mov
in
cs
jb
sbb
mov
xchg
jnp
mov
fisubs
int3
loopne
into
dec
call
bound
mov
movsb
subb
and
test
dec
and
into
xchg
and
gs
or
inc
adc
daa
jmp
repnz
adc
out
scas
or
movsl
cmp
shl
and
xlat
cmpsb
ja,pn
nop
jo
out
pop
jnp
or
insl
pop
call
imulb
xchg
outsb
sub
fldcw
fxch
out
fists
repz
adc
sbb
sbb
loop
add
xchg
xchg
or
int3
test
daa
xchg
jns
fbstp
xor
in
xor
sahf
mov
adc
cli
fucomi
pop
loop
xor
adc
push
xchg
jbe
or
push
scas
mov
inc
xor
jge
lods
jecxz
inc
adc
ja,pt
mov
cmpsb
test
jl
mov
sub
jno
dec
and
xor
outsb
jle
or
mov
adc
into
fwait
pushf
lods
jno
cltd
jne
out
imul
int
bound
mov
mov
cmp
dec
js
andl
mov
jg
je
xchg
cmpsb
cmpsb
cmpsb
daa
pop
push
jecxz
push
xor
mov
fmuls
fldcw
in
sub
and
rorl
ja
adc
fdivr
push
imul
fisubrs
popa
add
ljmp
mov
into
out
in
xchg
loop
inc
ficomps
les
in
push
rolb
adc
mov
sub
in
dec
mov
lock
inc
pop
xchg
test
jmp
pop
mov
pop
mov
push
or
xchg
sbb
jnp
mov
mov
dec
pop
out
cmc
inc
test
mov
into
outsl
shrb
jbe
and
test
lahf
dec
test
inc
cltd
mov
pop
pop
sahf
sub
cwtl
inc
mov
dec
scas
push
into
inc
aam
adc
jecxz
emms
sub
add
add
pop
roll
ret
cmpsl
mov
es
sarb
and
mov
cmp
lods
sbb
addl
test
scas
jae
xor
cwtl
sbb
dec
push
xchg
mov
dec
or
js
idivl
cwtl
cmp
dec
jge
push
sti
mov
or
rorb
imul
std
loope
mov
xchg
je
xlat
mov
xchg
outsl
sahf
push
jg
and
dec
inc
sbb
data16
aad
mov
jmp
pushf
sub
cmpsl
pop
push
mov
les
mov
js
and
rcll
and
pop
out
out
rorb
insl
dec
cltd
xchg
lea
ljmp
mov
or
out
dec
dec
in
test
jp
pop
cld
jno
xchg
pop
mov
lahf
push
test
pop
icebp
stc
rcpps
ja
push
or
out
mov
mov
cmpsl
push
cmp
leave
cmp
add
push
ljmp
jge
es
dec
adc
cmpsb
xchg
lods
jne
push
lcall
lds
jge
push
mov
or
ficompl
in
es
mov
jmp
ja
test
mov
aad
sbb
pop
cld
mov
inc
shlb
jmp
cmpl
addr16
push
inc
sub
xchg
fldl
int3
test
in
hlt
movsl
repnz
lods
js
movsb
lret
dec
cmp
jl
sub
cli
ror
or
or
dec
adc
mov
xor
movsb
addb
shrl
outsl
dec
movsb
mov
lret
shll
pop
or
fmull
insl
rcr
cmpsl
repz
sbb
scas
ret
ljmp
cld
push
out
cmp
jge
fcoml
std
inc
sub
stc
cmp
push
xor
pop
outsl
fstpl
xchg
aad
push
and
hlt
mov
mov
push
add
into
imull
addr16
lods
imulb
xchg
clc
pop
movsb
push
scas
jge
into
mov
xchg
adc
es
scas
fidivl
aaa
lock
repnz
cmp
pop
pop
icebp
pop
icebp
pushf
fisubrl
add
vpunpckhwd
cli
fwait
div
and
sub
pusha
jg
sbbl
ret
js
arpl
lds
jns
cmc
lret
push
mov
out
xor
pop
rcrb
sub
das
imul
push
sbb
jmp
in
std
and
out
hlt
insl
cltd
bound
fcomps
fidivrs
hlt
mov
clc
lock
clc
cmp
jo
adc
in
fisttpll
adc
movaps
loopne
bound
hlt
scas
and
jg
adc
and
cli
mov
mov
push
pushf
adc
xchg
sti
sbb
aas
mov
add
pop
dec
xchg
outsl
fdivl
dec
mov
je
lahf
out
cwtl
dec
jecxz
fwait
daa
popf
into
mov
jge
inc
dec
leave
cli
idiv
leave
out
fistpll
push
pop
dec
rol
xor
aad
insb
rorl
sub
daa
mov
xor
push
pop
dec
mov
adc
sub
pop
xor
sbb
mov
cmpsb
stos
clc
mov
mov
xor
js
xor
dec
loopne
jbe
bswap
roll
or
jbe
in
push
xchg
mul
mov
xor
inc
mov
test
cmp
push
call
enter
scas
xor
jecxz
push
add
pop
mov
shrb
fs
jecxz
mov
adc
ds
inc
outsb
pop
push
test
sub
pushf
sbb
loop
cmp
aaa
ljmp
std
mov
mov
dec
movsl
shll
les
stos
sarb
bnd
out
mov
popa
sbb
out
mov
mov
add
xor
cmp
push
cwtl
scas
sub
clc
mov
or
mov
push
pop
pushf
jp
xchg
or
into
rcrl
out
jne
loope
mov
mov
fs
mov
test
lea
testb
data16
stc
pop
cmp
jnp
xchg
call
cmp
sahf
gs
leave
pop
js
popf
adc
lds
inc
inc
bnd
adc
fildll
dec
xorb
rcl
sbb
imul
xor
cmc
popf
mov
call
sbb
or
in
mov
mov
cmpsl
cmp
scas
mov
in
pop
ds
stos
cmpsl
lea
add
xchg
lret
dec
sbbb
push
dec
sbb
int
adc
outsl
xchg
mov
push
sbb
fbld
lods
and
mov
cmp
sub
add
pop
jb
cltd
fistl
aaa
mov
sub
jno
imul
jp
sub
mov
sbb
andb
jge
jae
xor
pop
in
mov
and
adc
cmp
mov
lock
andb
insb
push
pop
cmp
push
inc
jo
lds
popa
fsts
cld
pop
pusha
int
pop
aaa
sbb
cmova
xchg
ds
or
fcoms
cmp
pop
test
orb
pop
ds
and
not
add
imul
popf
movsl
push
popa
jns
pop
adc
test
outsb
dec
sti
scas
push
dec
bound
pop
test
shll
jle
and
aaa
fisubrl
in
pop
adc
or
adc
mov
scas
dec
dec
out
ds
into
and
push
insl
and
jmp
xchg
loop
adc
dec
push
adc
ja
push
mov
mov
sub
sbb
mov
ret
inc
scas
jne
xchg
xchg
sub
push
insb
inc
subl
pushf
mov
or
inc
arpl
sbb
sub
jl
push
sbb
cmp
push
adc
mov
sbb
sbb
mov
dec
pop
loop
adc
imul
das
add
xchg
ss
insb
negl
cs
xchg
test
insl
cmp
lods
js
xchg
lds
gs
cmc
cli
adc
testl
xlat
jbe
pop
or
inc
jmp
xor
into
adc
mov
lret
push
pop
inc
lahf
andl
jmp
lcall
test
popa
cli
mov
sub
xlat
cwtl
jle
cmp
iret
int
mov
out
negl
and
ret
sub
mov
sti
xchg
jne
mov
fstps
jmp
addl
xchg
aaa
pop
dec
pop
adc
jp
adc
mov
jp
enter
in
push
jnp
cmp
shrl
iret
adc
xchg
hlt
out
gs
sahf
scas
ret
arpl
mov
adc
adc
imulb
leave
xchg
add
shrl
mov
stc
jbe
sbb
in
stos
mov
or
xchg
and
gs
sbb
dec
in
mov
sbb
das
xorb
lods
bound
cmp
xor
adc
xchg
ds
mov
add
sbb
inc
mov
cld
and
mov
jne
scas
test
sub
pop
push
inc
ds
push
es
lods
fsts
xor
lret
ficompl
lahf
lods
movsl
ret
mov
scas
inc
mov
xor
mov
sbb
jge
fwait
cmp
enter
and
popa
fildll
push
outsb
jecxz
aad
gs
xchg
jbe
hlt
aaa
fldt
jno
dec
cltd
jecxz
cmp
ss
fcmovbe
push
push
ret
rolb
lcall
ja
pop
test
call
and
std
dec
xchg
cmp
dec
push
jge
rcl
lret
addl
mov
push
fcompl
or
xchg
cld
jns
pushf
mov
scas
and
cmpsl
stc
imul
xchg
push
int3
lds
push
lahf
aas
mov
cmp
movsb
pop
pusha
mov
mov
loop
in
jno
mov
push
sbb
or
ret
dec
bswap
pushf
pop
cltd
insl
lret
push
adc
jbe
sub
cli
mov
xchg
and
xchg
push
xchg
jae
and
and
aaa
pop
testl
and
mov
stc
in
add
mov
faddp
or
in
and
adc
pop
fcoms
scas
sbbb
pop
sti
fcomi
xlat
sbb
and
mov
add
stc
pop
mov
loop
and
int3
or
pop
or
xchg
lock
mov
idivl
lock
subl
idivl
push
mov
mov
inc
fsubr
jge
das
dec
cmp
mov
mov
xlat
mov
pop
add
jo
pop
int3
fidivrl
push
lock
sbb
mov
cwtl
cmp
mov
push
in
icebp
sbb
ds
cmc
imul
mov
pop
sarl
subl
js
jmp
pop
pop
push
mov
push
vmread
inc
mov
pop
sub
scas
out
and
pop
fstl
jle
xor
mov
push
push
es
pop
xchg
mov
push
adc
pop
repz
jg
bound
mov
sbb
dec
dec
push
stos
mov
mov
pop
inc
mov
pop
fistl
mov
dec
and
ds
incb
xchg
jl
and
dec
mov
sahf
adcl
rolb
xchg
dec
xchg
sub
push
adc
jb
mov
cmp
xchg
xor
shlb
cmp
or
fnstcw
fmull
jb
cmp
shlb
or
cmpsl
xchg
mov
ljmp
dec
pushf
add
jnp
loop
xor
dec
xlat
push
xor
in
leave
es
aas
inc
call
inc
test
divb
jnp
aas
sbb
iret
aaa
out
mov
add
pop
das
mov
insl
sti
adc
and
adc
jb
add
pop
rcrl
adc
cld
sub
mov
push
cli
sub
lret
idivl
lods
in
sbb
aam
or
aaa
or
sbb
mov
enter
pop
jp
jmp
push
fwait
jb
repz
adc
ret
xor
ja
jb
or
ss
sub
scas
mov
add
sbb
pop
push
dec
adc
inc
jl
sbb
pushf
sub
jl
arpl
mov
ss
add
xchg
sub
dec
sbb
sbb
mov
push
or
add
ror
jo
pop
xchg
jg
in
pop
sbb
rcr
mov
shr
add
and
cs
into
nop
jno
call
sub
mov
out
in
mov
mov
stos
mov
xor
ret
dec
mov
xor
push
mov
mov
cmp
xor
push
jne
loopne
out
outsb
mov
pop
out
or
mov
cwtl
adc
pushf
pushf
out
cltd
add
cmc
loope
mov
test
rcr
fisubl
mov
xlat
cs
adc
lret
popf
jge
pop
and
test
lods
or
rclb
xor
dec
add
enter
mov
out
shrb
jg
push
lahf
push
jge
jns
mov
jmp
aaa
mov
dec
xchg
nop
inc
lcall
movsl
enter
mov
xor
fcomip
adc
les
sbb
cwtl
jae
je
dec
popa
mov
loopne
xor
add
push
int
test
sbb
mov
mov
jmp
pop
sub
es
popf
pop
sub
cmpsb
popf
aad
mov
sbbb
pop
fldl
int
inc
cmc
shlb
mov
test
or
popf
or
jl
movsl
mov
lahf
in
xor
inc
mov
jns
cmp
pop
les
idivl
stc
mov
jecxz
in
mov
in
push
dec
fs
xlat
sbb
xchg
mov
sub
add
scas
int3
and
inc
inc
stc
jecxz
lods
fdivrs
xchg
adc
jne
push
jp
or
adc
pop
jns
xchg
pusha
outsl
jg
mov
xor
xorl
inc
std
data16
ja
pushf
xchg
test
and
cmp
mov
sbbl
mov
or
xor
aas
pop
inc
mov
sbb
cmp
xor
dec
cwtl
outsl
jae
lcall
add
insl
movl
nop
cltd
jnp
outsb
and
sub
bound
sub
or
mov
outsb
mov
sahf
ds
shll
add
sbb
loopne
add
call
inc
pop
rclb
out
sub
jle
xlat
push
pusha
xor
stos
xor
sub
lods
mov
dec
jno
jp
in
addb
mov
out
and
jae
hlt
enter
jno
xchg
fsub
inc
xor
add
xchg
rorb
mov
xchg
repz
ja
sbb
add
fscale
cmpsl
test
cmp
cmp
xchg
fucomi
dec
push
sbb
outsb
pop
mov
pop
mov
pop
mov
mov
cmpsb
call
or
jecxz
cltd
xorb
pusha
or
lds
dec
loop
pop
or
mov
mov
mov
mov
fcoml
push
test
jp
daa
adc
sbb
popf
mov
add
dec
js
imul
aad
fistl
mov
data16
data16
sarl
mov
rorl
lahf
pushaw
add
inc
pop
cmpsl
cmpsb
push
lret
add
fs
rcrb
jg
aaa
out
int3
shlb
push
xor
push
pop
rolb
bound
jmp
mov
aam
adc
jl
pop
sub
pcmpgtd
add
popa
out
cmp
jbe
stos
nop
insb
shlb
cwtl
xchg
add
or
or
pop
inc
cwtl
xchg
sbbl
iret
xchg
insl
lea
stos
sub
pop
pop
xchg
mov
fucomp
ja
out
repnz
mov
imul
cmovb
push
inc
sub
xor
add
sub
testb
mov
shll
ret
mov
test
rol
ja
test
sub
into
les
ret
add
sub
sbb
scas
push
sub
jbe
out
push
mov
sbb
ds
xor
fbld
push
repz
jnp
push
mov
js
cli
mov
test
sub
in
xchg
int
cltd
popa
call
sbb
dec
and
push
cmpsb
cwtl
inc
sub
mov
call
je
les
int3
ljmp
mov
data16
dec
jno
mov
insb
xor
xlat
xor
je
clc
negl
mov
pop
call
addr16
mov
cmpsl
gs
cld
cwtl
cli
shll
dec
cmpsb
push
mov
mov
dec
dec
aad
xor
aas
cmp
jb
das
ret
adc
andl
xor
mov
scas
jne
xor
pop
add
push
loop
adc
and
sbb
cli
dec
push
adc
dec
out
stos
add
sbb
cmp
sbbb
xchg
mov
jae
aad
dec
addb
dec
int3
leave
cmc
and
rcrb
add
dec
pop
dec
sti
decb
cmp
rcrl
pop
cmp
or
shll
add
mov
cmp
mov
mov
in
mov
movsb
and
dec
pushf
sbb
pop
sbb
cmc
loop
in
mov
mov
pusha
sahf
mov
mov
stos
movsl
cmc
and
or
iret
outsl
mov
test
sub
xchg
pop
popa
ret
xorl
xchg
cwtl
xor
leave
adc
adc
fisttpll
xor
xchg
sbb
inc
adc
popa
xor
mov
jo
or
jge
pop
cmp
adc
mov
mov
lret
sbb
arpl
jle
les
scas
sbb
add
aad
dec
sti
lret
lcall
jl
add
push
or
icebp
jo
aaa
arpl
mov
cmp
cmp
pop
js
sbb
je
adc
mov
push
sahf
jl
rolb
ds
jecxz
imul
bound
xchg
push
inc
add
xor
rolb
jmp
loop
mov
mov
fists
lock
jb
xor
push
out
mov
punpckhdq
xor
pop
ljmp
lret
outsl
bt
psubw
aam
sbb
fdivl
test
sbb
xchg
pop
push
lods
scas
mov
inc
loopne
push
pop
stos
cmp
lea
out
adc
inc
push
bound
and
sbb
ret
cmp
outsl
sub
push
lret
mov
push
les
inc
ret
hlt
dec
mov
mov
shr
xor
pushf
je
cmpsb
dec
xchg
ja
mov
mov
out
rcrl
add
hlt
jl
scas
push
add
shrl
cmp
out
dec
or
mov
scas
lret
add
ja
ficoms
push
mov
cmpsb
push
out
in
pop
inc
outsl
fisttps
inc
dec
fnstsw
sbb
mov
jb
sbb
mov
adcl
js
call
xlat
ds
sub
dec
dec
xchg
jae
je
adcl
sub
jp
gs
sahf
rcll
repnz
mov
mov
es
push
or
inc
mov
inc
xchg
mov
stos
addr16
mov
push
in
push
arpl
pop
push
dec
pop
sub
add
bound
in
sbb
cld
arpl
sub
out
je
pop
dec
fwait
sub
sub
std
xor
in
jmp
lock
jno
xchg
adc
push
js
sub
push
fiadds
enter
daa
mov
jl
fstpt
ret
xchg
lret
pop
sub
lods
xchg
xchg
in
pop
push
out
pop
cld
scas
and
jmp
add
cmp
mov
push
inc
mov
hlt
pop
test
mov
mov
call
jo
iret
jecxz
lods
jle
or
pop
int3
xchg
popl
testb
push
and
mov
incb
and
or
sbb
lods
add
sbb
xchg
and
cmp
in
jle
mov
ja
pop
ljmp
inc
mov
sbb
pop
push
lea
fwait
jecxz
sub
outsl
fbstp
push
add
lds
xchg
mov
lea
loope
sub
leave
clc
pop
mov
adc
call
xchg
xchg
pop
out
xor
mov
js
aam
scas
cld
fisttpll
and
mov
in
pop
sbb
into
and
stc
inc
iret
and
pop
and
xor
outsl
addr16
push
xor
sub
cmc
cld
xchg
in
pop
pop
js
das
addr16
jae
ret
into
inc
xchg
xchg
js
cmp
dec
jnp
or
or
xlat
and
push
and
out
push
loop
mov
loope
mov
lods
and
mov
mov
sub
aaa
sub
pop
xor
faddp
xor
lret
imul
cmp
je
mov
xchg
js
cmp
rclb
push
mov
dec
pushf
cmp
fisubrs
lds
mov
push
in
loopne
repz
in
cmp
push
dec
push
sti
outsb
mov
scas
pop
push
cmp
shl
movsl
scas
sahf
sahf
mov
inc
aas
adc
mov
mov
dec
add
jecxz
popa
repnz
push
mov
popf
cmp
pop
dec
inc
add
inc
mov
cmp
jae
out
jno
fsubl
repz
out
insb
das
jnp
stos
xchg
js
ljmp
loopne
mov
adc
jl
jp
shr
sbb
and
enter
popa
pop
sahf
lret
inc
enter
pop
xchg
dec
test
icebp
clc
lods
xlat
fsubs
repz
and
clc
cmpsb
or
loop
pop
inc
mov
and
mov
insl
clc
imul
or
sbb
lret
and
sbb
cltd
jge
call
push
push
adc
mov
pop
dec
fwait
inc
adc
fs
mov
push
push
dec
jle
pop
mov
xlat
mov
sub
add
push
inc
sub
inc
out
inc
jne
test
lock
repnz
fsubs
mov
mov
add
mov
jb
call
outsl
mov
int3
nop
fidivl
loop
mov
std
out
cmp
dec
mov
shll
in
lds
test
push
xchg
xor
enter
bound
push
cmp
adc
js
cmp
sbb
out
sub
xchg
lods
push
das
sbb
add
int
pop
out
cmp
shlb
mov
sub
inc
stc
dec
add
adc
fcoms
lods
rolb
or
mov
in
sbb
jne
mov
lea
mov
data16
aad
pop
pop
pminub
addr16
stos
push
xor
and
mov
mov
movsl
rolb
mov
ret
clc
outsb
and
ja
mov
push
push
aad
jne
movsl
mov
xchg
and
push
scas
xor
les
cmp
inc
sub
adc
les
neg
jns
mov
scas
jmp
mov
lret
test
xor
repnz
ficoml
cli
jns
imul
sub
cmc
dec
pop
into
add
sti
popf
xor
push
fnstenv
push
lods
push
mov
mov
push
shll
pop
test
mov
insl
mov
ret
lahf
iret
insb
lock
push
pusha
sub
or
sbb
mov
cmp
movsb
cwtl
pusha
sbb
lds
pusha
cmpsb
cltd
test
fsubr
icebp
mov
or
and
mov
arpl
fists
je
jae
xchg
add
fs
pop
mov
mov
or
push
cmc
inc
das
xorl
loopne
rcrb
mov
cmpsb
bnd
fdivr
cmp
mov
jo
in
std
jge
cs
or
cmp
xor
sbb
mov
cltd
jge
cmc
mov
ds
ds
aam
repnz
pop
add
in
push
popf
test
xchg
xchg
rclb
dec
imull
fsubs
pop
daa
pop
test
fiadds
mov
push
in
dec
xor
insb
mov
cs
pusha
outsb
jp
enter
gs
rol
or
sbb
imul
jp
mov
add
fisttpll
out
sub
or
hlt
push
shll
stos
into
ret
mov
mov
rolb
mov
mov
stc
out
dec
jnp
sbb
roll
popf
bound
mov
dec
call
out
push
int
shr
cmpsb
jge
in
adc
mov
pop
jb
and
cmp
push
test
pop
popf
mov
push
lods
test
shll
mov
push
cli
lods
and
or
jg
adc
or
jb
mov
imul
out
push
je
out
movsl
roll
xor
pusha
rcll
data16
add
data16
mov
inc
loope
out
fidivs
loope
js
clc
out
and
fs
icebp
mov
pop
and
jg
pop
aaa
das
test
and
push
sub
mov
inc
inc
lds
xchg
mov
pusha
mov
popa
movsl
lahf
loope
lcall
loopne
jmp
mov
mov
mov
sahf
cltd
gs
push
mov
jb
subb
jmp
xor
adc
jl
xchg
and
mov
and
inc
ret
pop
mov
inc
mov
ficompl
sub
repnz
shrb
clc
ss
je
imul
jg
mov
xor
push
adc
addr16
xor
lret
mov
push
fidivs
stos
or
mov
les
mov
fdivs
sbb
jl
dec
jmp
ds
mov
imul
out
cmp
js
lret
cmp
push
dec
pop
add
lret
mov
dec
ficomps
add
movsb
jo
adc
pop
push
or
popf
mov
dec
shld
out
sub
in
add
mov
subl
ret
enter
jle
cmp
push
mov
test
and
loope
jecxz
mov
ret
loope
push
xor
jmp
imul
push
push
insb
add
filds
out
xchg
out
add
andb
and
movsl
jno
in
repz
mov
cwtl
movsl
inc
push
cwtl
data16
push
inc
pop
jo
and
jle
orl
cmp
pop
jmp
adc
bound
cmp
in
dec
or
push
sbb
xchg
stos
sbb
clc
add
mov
sbb
inc
jl
jp
adc
movsb
and
push
xchg
xchg
mov
test
shlb
repz
out
clc
test
daa
movsl
jne
daa
out
pop
and
rorb
or
rorl
mov
cmpb
test
mov
ret
pop
add
jle
or
push
xor
mov
mov
in
sub
ret
int
mov
in
mov
jecxz
sbb
or
jmp
and
xor
xchg
sub
pop
insl
mov
push
push
out
cmc
adc
xchg
in
idiv
test
jl
shll
jo
and
repnz
and
in
xor
push
mov
movsl
mov
popf
aad
mov
femms
pop
fidivl
cmp
dec
popf
mov
cmc
pop
lcall
sub
adc
aas
imul
dec
shlb
mov
jmp
repz
dec
aad
lahf
popf
mov
leave
cmp
mov
inc
stos
shl
pop
mov
jg
jl
lods
repnz
mov
inc
int
dec
cs
aam
push
jecxz
out
sbb
jbe
enter
outsl
jmp
push
cmp
cmp
or
movsb
cld
pop
lea
adc
popl
movsb
in
test
mov
sahf
jp
jecxz
sbb
lret
push
ficomps
cld
test
sbb
pop
push
or
sbb
cwtl
jno
sub
shlb
jg
pop
mov
pop
stos
and
xor
in
call
shlb
mov
xchg
out
jge
lods
fs
mov
inc
inc
imul
push
nop
pop
xchg
xor
aaa
pop
arpl
mov
mov
push
subb
jl
adc
loop
cmp
pop
fiadds
mov
pop
sahf
cmp
mul
ja
testl
inc
call
lods
imul
dec
push
ret
loope
or
xor
lock
jne
gs
test
add
inc
cmp
movsl
pop
add
add
push
imul
mov
mov
add
ljmp
and
cmc
stc
icebp
push
out
rcrb
repz
pop
mov
lea
movsl
push
push
popa
adc
mov
aas
jbe
cmp
xchg
cmpb
dec
mov
iret
cmp
cwtl
arpl
jns
mov
and
push
inc
mov
sar
inc
jmp
mov
das
add
lods
fisubl
call
cmp
leave
mov
hlt
mov
in
lahf
data16
inc
xor
nop
jmp
or
jmp
mov
clc
add
arpl
mov
cmp
or
add
mov
in
add
les
xchg
dec
push
loopne
test
sbb
dec
and
xchg
les
test
push
fwait
out
std
lahf
xchg
pop
xchg
add
into
sub
test
mov
je
inc
mov
jge
inc
push
sub
lods
dec
popa
jbe
mov
mov
sub
inc
loope
xlat
adc
lahf
sbb
xor
mov
fsubrp
imul
sbb
push
in
and
sbb
push
xchg
fisubl
insb
cmpsl
repz
ret
lods
loop
xor
cmp
or
subl
les
jmp
clc
inc
arpl
push
test
pop
subl
cmp
inc
lret
stos
mov
lea
adc
mov
jae
pop
insb
popf
rorb
dec
jbe
enter
mov
out
mov
hlt
sahf
int
xor
pop
pop
push
mov
pop
jle
test
les
mov
inc
xor
adc
ja
or
sub
cmpsl
pop
loope
ret
sub
ljmp
jg
mov
sbb
rolb
xchg
in
dec
mov
jecxz
rolb
lcall
pop
ret
push
scas
aam
sbb
int3
sbb
add
cmpsb
ss
jl
adc
xchg
or
test
adc
sbb
xchg
punpckhwd
xorl
adc
aaa
xchg
mov
xor
xchg
pop
xor
rorl
cld
cmpsl
insb
fcomps
sbb
lods
es
bound
call
jle
sbb
aad
aas
fwait
pop
and
loope
popf
or
add
mov
mov
scas
cmpsb
out
fsubs
push
push
adc
mov
sub
bound
lcall
dec
push
pop
fcmovnu
sbb
push
ja
les
shl
sahf
test
das
sbb
xchg
jmp
jne
jnp
test
add
jge
leave
jmp
cmpb
js
jle
sti
or
addb
dec
mov
xor
sub
andb
xchg
subb
sub
jbe
adc
ret
cmp
xor
and
jbe
pop
in
jns
idivb
addb
add
fistl
sub
data16
cmpsb
jbe
int
or
sbb
sbb
push
mov
test
jp
sub
lret
mov
sub
push
mov
fidivrl
inc
lret
dec
pusha
lods
das
mov
mov
mov
mov
in
jge
and
or
sti
jbe
jg
cmp
mov
mov
cmp
jle
imul
mov
pop
hlt
jge
bound
sub
test
inc
outsl
daa
and
fimuls
test
mov
cmpsl
stos
sub
scas
bound
hlt
push
xchg
pusha
nop
sbb
or
push
pop
test
mov
jo
jge
jb
inc
addr16
mov
fistps
cmp
or
movsl
xchg
lods
dec
jl
out
cmp
sti
andb
jo
ss
mov
pop
ljmp
pop
loop
int3
or
jns
cmp
mov
pusha
ja
pop
jb
jbe
or
xchg
addr16
pop
pop
fwait
xchg
dec
das
repz
testl
or
mov
ss
lock
lret
addl
call
xor
lods
sahf
dec
loop
adc
pop
fld
inc
scas
dec
iret
xchg
das
and
cmp
icebp
sbb
add
inc
inc
stc
jl
xlat
mov
fidivrl
inc
cmp
wbinvd
and
in
fsub
dec
jne
test
jno
add
fs
loope
and
and
push
cmp
pop
jae
or
cmp
cli
sub
dec
xchg
cwtl
adc
or
nop
adc
lcall
push
inc
cwtl
in
mov
mov
xchg
pop
out
test
cmp
sub
lods
les
out
cmpb
add
jno
shr
add
push
cs
mov
xorl
int3
lods
pop
mov
test
test
sbb
repz
enter
xchg
stc
push
xorl
adc
cs
and
pop
xchg
adc
inc
pusha
cld
cltd
loop
outsl
scas
stos
add
inc
paddq
lret
aaa
scas
imull
sub
scas
jbe
in
jmp
dec
loopne
pop
sub
dec
adc
jle
add
jns
dec
push
dec
roll
mov
bound
mov
adc
stos
jl
outsb
mov
je
lcall
ljmp
mov
icebp
xlat
fisttpl
sub
cmpsb
cmp
call
int
sub
nop
negb
insb
enter
lock
push
xor
repnz
or
add
sub
in
push
push
je
dec
ss
ds
dec
push
xchg
pop
adc
aas
push
push
stc
xchg
inc
sbb
cmp
out
mov
fwait
cmp
pop
ret
loope,pn
dec
test
fsubrl
call
in
out
inc
ljmp
shl
scas
ret
ror
clc
cltd
aas
bound
call
pop
dec
dec
and
inc
stos
push
aas
aas
mov
xchg
aam
and
mov
out
xchg
stc
fwait
dec
mov
rorb
jne
xchg
adc
shl
shll
xchg
mov
dec
dec
sub
jmp
push
leave
jp
push
in
or
mov
xchg
sub
sbbb
call
iret
ret
cmc
jns
std
sbb
jne
dec
jge
divb
sbbb
lcall
and
in
jnp
sub
sbb
sbb
xchg
push
in
nop
rclb
cmp
popa
int3
ja
jo
push
mov
int3
cmpsl
xor
or
xchg
add
in
imul
push
inc
mov
outsl
sub
adc
das
gs
mov
and
sub
xchg
fxch
cmp
jl
add
inc
inc
insl
mov
iret
add
adc
jl
push
jp
or
xor
mov
or
divb
cmp
or
jno
mov
xchg
cmp
dec
enter
mov
jnp
lock
arpl
dec
mov
dec
mov
pushf
aam
cmpsb
aam
xor
shll
cltd
iret
js
scas
push
xor
push
or
cmp
fs
repz
aam
and
lea
jbe
test
pslld
pop
lcall
adc
movsl
sbb
xchg
jne
or
cld
and
dec
push
mov
mov
in
or
lahf
pop
aaa
mov
add
or
cmc
mov
imul
pushf
mov
xchg
icebp
sbbb
pop
faddl
cltd
adc
out
je
test
adcb
cmpsl
sbb
add
mov
fmuls
ss
arpl
mov
lock
push
lahf
insl
rol
lock
loope
imul
cmpsb
sub
movsl
push
pop
into
jg
xor
sbb
idiv
rcrb
icebp
mov
test
inc
xchg
xchg
cmp
fmulp
jne
test
leave
test
xlat
dec
ss
dec
jp
push
mov
inc
aas
in
inc
adc
xor
insl
xor
lahf
jae
loope
dec
dec
mov
xchg
mov
cli
and
or
inc
gs
je
clc
cmp
mov
pop
add
jns
inc
xchg
fsubrl
push
add
test
movsb
mov
lcall
les
scas
lods
sahf
sbb
sti
loop
fwait
sub
test
fstpl
out
mov
aaa
push
xor
std
sbb
shll
push
aad
xchg
xorb
and
sti
aad
lods
push
aaa
inc
iret
mov
and
ret
lods
pushf
ljmp
test
inc
addr16
push
sarb
ds
ret
cmpsl
add
or
pop
cmc
sub
ljmp
ds
les
xor
mov
int3
icebp
or
sti
or
push
inc
dec
pop
stc
fstps
dec
jno
cmp
cli
outsb
stos
push
xor
push
cmp
ret
repnz
outsl
iret
pop
sub
js
icebp
push
xor
shl
cmp
fcomp
incl
outsl
mov
xchg
ss
cli
mov
mov
loopne
push
adc
pop
mov
pop
sub
gs
sub
push
sbb
inc
jmp
dec
sbb
add
imul
or
xchg
xchg
mov
movd
add
sbb
imul
test
outsl
fs
hlt
repnz
shr
ret
sub
jb
outsb
inc
push
lcall
lahf
and
lret
imul
dec
popf
repz
movsb
jnp
mov
test
xchg
aad
pop
stos
dec
push
adc
sub
in
cmp
inc
adc
mov
cmc
or
loop
lcall
xor
test
xchg
mov
pop
add
xor
idivl
hlt
dec
inc
ljmp
ljmp
or
sub
mov
push
dec
xor
cmpsb
sahf
dec
std
adc
mov
fstl
cwtl
cmp
ja
push
cmp
pop
icebp
add
mov
push
cmp
pop
mov
bnd
push
ds
out
fadds
jb
sahf
cmc
jmp
nop
or
ror
in
lds
pop
jne
sub
jle
hlt
mov
mov
add
jbe
sub
dec
inc
std
sub
jecxz
cld
adc
cmc
aaa
pop
xchg
or
sti
pop
add
mov
sub
leave
mov
adc
rcr
cmp
ja,pn
xchg
and
js
data16
mov
cmp
pop
jnp
ret
daa
fcomip
and
pop
add
mov
fs
lea
popa
sti
fcom
pop
mov
in
xchg
sbb
lret
gs
dec
inc
pop
xor
xor
mov
jbe
sarb
sub
xchg
xor
cmp
mov
xchg
push
mov
popa
xchg
addl
lahf
shl
or
push
inc
in
jp
das
dec
adc
pop
enter
iret
push
push
nop
jle
mov
testb
push
cli
in
adc
enter
xor
or
sbb
cmp
pusha
cwtl
mov
push
mov
scas
int
and
jmp
imul
test
push
outsl
repz
pop
adc
shrl
sti
sbb
pop
movsl
push
mov
bound
push
pop
pop
cmpsl
jge
xor
push
fs
pop
ja
loopne
fs
sbbl
mov
pop
cmpsl
out
in
sub
sbb
mov
insb
push
enter
jno
cmpsl
into
bound
int
fldt
pusha
lret
inc
push
pusha
sub
add
add
wrmsr
imul
insb
push
dec
hlt
sbb
dec
ret
cld
imul
or
push
or
lret
stc
mov
fmull
push
les
pusha
mov
inc
int3
sbb
inc
movsb
mov
mov
cmp
sub
cmpsb
cmp
cmp
adc
xchg
jecxz
je
fdiv
mov
cmpsl
sub
sbb
sub
outsb
xchg
ja
lea
lods
or
fiaddl
xor
sbb
stc
add
ljmp
decl
mov
adc
cmp
call
cli
pop
mov
hlt
in
push
sub
sub
inc
out
xor
push
pop
mov
daa
mov
push
inc
xor
xchg
sbbb
mov
movups
mov
in
sbb
int
stc
neg
arpl
jb
add
imulb
sub
lahf
xchg
out
andb
xor
mov
pop
stc
mov
pop
inc
loope
sub
call
fdivrl
inc
or
mov
inc
xchg
lock
xchg
popa
lea
lret
or
cld
sub
fcomps
mov
lock
and
mov
mov
shlb
fildll
dec
test
adc
icebp
xchg
shr
mov
fidivrs
dec
or
das
xchg
xchg
in
stos
aaa
jae
stos
mov
dec
cmp
and
xor
jno
enter
jo
cmc
fisttps
repnz
inc
idiv
iret
rcrl
and
hlt
ret
mov
xchg
ret
dec
sbb
fs
lret
rcrb
mov
sub
jo
outsb
and
cld
and
xchg
ds
mov
cwtl
addr16
dec
jmp
or
dec
lret
shlb
push
rcll
pop
jb
in
adc
adc
inc
adc
xchg
out
mov
cmp
int
jl
add
add
adc
dec
mov
lods
stos
or
fnstcw
fsub
add
add
repz
cld
test
pop
testb
out
jb
xchg
insl
test
pop
repnz
and
in
outsl
mov
mov
cmp
cmp
add
cmp
inc
push
ret
adc
cmc
imul
daa
stos
cmp
mov
inc
xorb
pop
fnstenv
sub
call
inc
adc
xor
cmp
dec
pop
cmp
inc
mov
cmpsl
rcr
xor
loope
stos
inc
xor
stos
sub
inc
lcall
xchg
lcall
xor
mov
lods
xor
sar
and
cmp
pusha
sbb
lret
movsb
and
ficomps
cltd
loop
stc
sub
cmpb
bnd
ret
and
and
popa
sahf
push
cmp
fistpll
movsb
jl
xchg
add
aaa
ret
les
aaa
ljmp
sahf
in
pop
mov
jg
dec
inc
jne
push
les
cmpsl
bound
aas
and
ja
pop
fisubl
outsl
into
les
aas
dec
aam
mov
lret
les
roll
xchg
rcrl
lods
ficompl
in
enter
xchg
jne
jnp
mov
mov
mov
sar
sti
lea
inc
dec
ljmp
into
xor
je
xchg
adc
push
xchg
sbb
push
movsl
repz
loop
sub
sar
subb
pop
push
jns
clc
or
push
cwtl
xchg
testb
das
stc
adc
sub
popa
std
and
movsl
push
dec
fdivrl
popa
jle
xor
testb
inc
in
pushf
pop
inc
in
dec
adc
fdivs
or
xlat
lods
sbb
pop
ljmp
cmp
loop
inc
popf
pop
cli
pop
lock
dec
stos
sahf
pop
rcrb
addr16
sub
cmp
mov
fcompl
add
xor
cmp
out
and
mov
add
movsb
lcall
pop
adc
stc
adc
push
mov
push
sbb
cmpsl
pop
cmp
hlt
and
push
xchg
push
call
lods
addr16
sub
cli
gs
in
loope
push
inc
fldcw
scas
pop
xorl
aam
pop
inc
and
pop
adc
call
sbb
out
pop
lret
dec
add
mov
mov
push
scas
xchg
jge
cmpsb
dec
pop
leave
pop
pusha
rcrb
mov
ret
push
push
xchg
push
sub
push
jb
call
imul
sbb
fisttpl
pushf
aas
jmp
aam
sbb
add
push
leave
pop
xor
mov
outsl
aaa
clc
mov
or
lods
push
or
xchg
pusha
loop
cmp
popa
pop
js
clc
inc
jne
and
scas
scas
mov
add
fadds
pop
outsb
xor
cli
sub
cwtl
incl
std
mov
or
in
dec
adc
jb
jle
test
mov
and
jb
cmp
in
aam
repnz
das
mov
les
or
scas
adc
sbb
dec
mov
or
lahf
test
pushf
inc
and
out
stos
sbb
outsb
test
stc
repz
loop
dec
mov
int
into
dec
inc
pmaxub
xor
aam
js
je
sbb
lcall
scas
xchg
in
or
imulb
ror
clc
mov
mov
jne
in
dec
lahf
insl
rorl
xchg
leave
xlat
push
out
add
push
mov
lret
xchg
pop
mov
ljmp
cli
push
sti
in
push
and
mov
icebp
cmp
xor
int
xor
pushf
sti
sub
call
je
xchg
mov
xchg
pop
pop
outsb
rcl
cmp
or
nop
sarb
lods
cmp
cwtl
xor
mov
or
fwait
jg
jae
lods
and
popf
cmp
xor
pop
fs
push
arpl
das
test
add
dec
jne
cmp
push
addr16
add
in
jbe
mov
add
push
inc
rorl
or
addr16
out
adc
and
fisubrs
mov
call
inc
pop
mov
push
push
mov
js
les
cmc
movsl
ret
and
iret
and
mov
xor
and
mov
push
xor
mov
ret
inc
push
icebp
mov
iret
mov
test
pop
push
ficoml
push
cmpsb
mov
xor
rolb
xchg
cmpsl
in
dec
push
adc
pop
fwait
pop
mov
xchg
test
inc
cld
cmp
dec
mov
pop
pop
mov
pop
or
pop
test
test
jo
test
rol
mov
cmp
jb
stos
mov
dec
adc
and
es
iret
dec
fstl
adc
cmp
add
inc
outsb
inc
sbb
dec
push
mov
cmp
dec
aaa
push
and
test
add
sub
jno
push
out
mov
inc
mov
icebp
hlt
inc
inc
jb
lds
icebp
loop
mov
inc
faddl
sbb
fwait
adc
jge,pn
sbb
xor
andl
mov
push
mov
jp
cmp
cmc
stos
jge
ja
fdivr
mov
cmp
pop
nop
inc
into
cwtl
fwait
push
sub
aas
or
add
mov
fimull
inc
push
lret
push
jns
leave
jl
loop
adc
rolw
or
js
jnp
repnz
push
adc
stos
mov
mov
cmp
in
pop
dec
int
arpl
mov
add
jecxz
mov
popl
and
in
mov
es
int
add
gs
push
loope
lock
xchg
or
jb
add
test
outsb
mov
ljmp
lods
lds
pop
pusha
fldenv
jmp
or
ljmp
out
cwtl
loopne,pt
test
sbb
hlt
push
je
inc
imul
and
jl
add
out
xor
sbb
popa
and
icebp
pop
je
fldenv
loopne
daa
push
jne
test
pop
push
ss
leave
out
test
fidivrl
clc
lea
sbb
loope
jbe
jp
cld
cmpsl
push
sub
mov
imul
xchg
sub
lods
xor
fidivrl
jmp
in
pop
inc
pop
in
adc
cmpsl
std
lahf
adc
dec
or
stc
fs
or
jecxz
loope
dec
xor
rorb
add
mov
dec
sbb
out
inc
shrb
dec
jge
cmp
pushf
insb
outsl
adc
inc
out
mov
les
stos
shlb
add
push
outsl
not
imul
fs
sbb
jne
inc
outsl
pop
xchg
lods
add
ret
addr16
movsl
clc
cltd
mull
lock
inc
icebp
std
repnz
fidivrs
outsb
sub
or
jne
daa
sbb
popa
hlt
sub
pop
cli
cmp
lret
push
cltd
or
pusha
cmp
flds
fwait
and
mov
insl
loopne
sub
add
jns
sahf
sahf
cmp
jae
sub
mov
mov
test
and
dec
inc
aas
cmpsl
xchg
mov
add
mov
jge
mov
roll
mov
movsl
dec
inc
test
mov
aas
xor
mov
inc
loope
cmp
stos
cmpsl
add
mov
adc
push
or
ljmp
or
add
push
xchg
inc
or
mull
pop
popa
scas
push
mov
mov
mov
mov
mov
data16
pop
imul
sbb
imul
jl
les
ficompl
ficoms
jne
dec
out
inc
cli
test
call
mov
movsb
mov
aas
in
cmp
ds
std
stos
jp
or
lahf
stc
cmp
popf
ja
stos
xor
push
into
push
push
sbb
addr16
jbe
jns
mov
add
cmp
dec
sbb
pop
sub
imulb
cmpb
loopne
bound
jns
push
and
inc
mov
cs
mov
jne
das
or
call
aas
adc
mov
cmpsb
sbbl
jo
xchg
scas
push
cmpsl
add
pop
push
jae
jmp
sub
scas
sub
pop
shlb
sbb
movsl
ja
ret
aam
dec
adc
in
mov
jle
test
pop
ret
movsb
cmp
jo
test
pop
cmpsb
jae
mov
ret
sti
rcrb
xchg
jae
pop
out
ds
insl
mov
sbb
jae
push
aad
inc
lea
sub
mov
pop
push
pushf
xor
push
paddusw
lahf
push
cld
rcl
fwait
cs
jge,pt
jle
outsb
sbb
ss
inc
push
xor
inc
inc
mov
stc
jmp
mov
mov
push
xchg
xor
cwtl
shrl
jecxz
inc
adc
mov
push
xlat
dec
mov
ret
inc
fs
dec
push
mov
adcl
aam
mov
mov
pop
push
hlt
test
fldt
xchg
pusha
push
fstpl
ljmp
xchg
pusha
jno
mov
out
daa
push
mov
jge
cmp
fcomi
fwait
call
lea
test
inc
imul
gs
jle
aad
test
adc
int3
sub
mov
loopne
xor
sub
jae
cbtw
or
cmpsb
in
cmpsl
stc
sahf
leave
xchg
push
in
or
fildl
imul
jo
or
and
rcr
in
push
and
rclb
cmp
xor
lock
dec
pop
push
clc
jecxz
rcr
jnp
push
dec
aas
mov
xor
sbb
dec
pushf
push
pop
cltd
xor
push
sub
fstl
ss
jne
cmp
sahf
ror
rcrl
pop
sti
jmp
ret
cmpl
cmp
cmp
cmpsb
cmc
cmpsl
or
xchg
icebp
loope
xor
or
lds
sub
or
mov
jo
gs
ds
pop
insb
jp
insl
mov
push
test
mov
or
mov
lods
int3
sbb
pop
push
adc
ror
adc
loope
jo
out
xor
out
sbb
popf
mov
push
les
and
push
add
jle
inc
add
negb
insb
or
cmpsb
je
shr
mov
adc
aas
sti
add
mov
js
mov
mov
inc
pop
lock
inc
int
into
adc
sbb
je
xchg
sbb
push
inc
jns
dec
in
pop
repnz
imul
jg
sub
and
xchg
or
ljmp
insb
inc
int
mov
pop
sbb
xchg
js
inc
and
push
add
xor
insb
fisttps
call
dec
pop
decl
fisttpll
inc
adc
orl
cmpsl
and
ljmp
jg
mov
push
insl
repz
add
cld
sbb
and
pop
jnp
pop
sbb
push
hlt
stos
push
loopne
in
push
mov
cmp
push
in
lcall
pop
cmp
pop
sub
pop
popf
or
and
into
mov
les
arpl
add
loop
jle
pushf
fmull
dec
sub
mov
movsb
aad
int
out
xor
push
xor
xor
pop
movl
xor
pop
dec
das
mov
mov
mov
rorl
out
mov
mov
or
jae
aaa
and
outsb
scas
imul
int
cmp
jbe
jne
xor
lea
sub
pop
sbb
cli
jns
es
ret
call
or
outsl
imul
cmp
loop
cmp
in
sub
ds
in
fs
xor
imul
daa
pop
push
mov
mov
xorl
lret
arpl
movsb
lds
pushf
in
push
inc
arpl
and
inc
shrl
jecxz
les
out
popf
dec
movsl
dec
test
dec
addr16
rolb
imul
cmp
fadds
mov
jp
mov
ficoml
adc
sub
fs
or
push
in
pop
or
lahf
movsb
mov
cmc
mov
adc
int3
xor
jge
cmp
add
mov
dec
and
std
add
push
or
and
test
leave
les
sbb
sahf
dec
jmp
mov
and
addr16
xor
adc
shlb
sub
mov
in
scas
mov
loop
fstps
lret
add
mov
mov
push
repnz
mov
mov
or
xchg
fcoml
stos
xchg
mov
sub
enter
adc
scas
cltd
cld
lcall
xor
aam
ja
pop
mov
into
jb
call
lcall
xor
xlat
icebp
clc
dec
sub
fucom
pushf
pop
push
out
xor
in
shll
scas
inc
ja
mov
or
jl
mov
xchg
sbb
loopne
out
rcrb
sbb
mov
mov
stos
imulb
frstor
lret
imul
jb
xor
dec
or
xor
rclb
outsl
jns
pop
subl
mov
inc
fsubrl
shl
scas
inc
jmp
xor
fdivl
stos
outsb
jns
pop
mov
mov
loopne
test
sbb
adc
aam
push
sub
ds
pop
shlb
inc
icebp
out
jae
jecxz
push
dec
cs
pop
jl
mov
data16
je
fisubrs
xor
adc
pop
xor
imul
sub
xor
lock
mov
ds
orb
data16
xchg
push
jno
sub
movsl
sbbb
cs
pop
repnz
adc
mov
mov
mov
mov
dec
sbb
and
mov
inc
and
sub
pop
idivl
int3
mov
lret
subb
in
and
loope
rcl
shl
xchg
inc
insb
loope
or
xchg
iret
sbb
leave
inc
lea
and
xor
lahf
es
dec
mov
sub
scas
add
ret
in
cmc
arpl
sbb
mov
lods
jns
mov
sbb
scas
es
inc
int
xchg
cmc
sti
inc
inc
sub
pop
push
inc
setno
add
dec
insb
mov
xchg
sub
xor
jmp
mov
jno
push
mov
adc
push
dec
movsb
mov
xor
push
in
cmp
lahf
sbb
int3
scas
fmull
add
dec
pop
enter
data16
rolb
test
adc
dec
ds
hlt
xorb
push
mov
or
inc
add
enter
fidivl
cmpsb
push
mov
inc
mov
je
mov
aas
push
or
mov
pop
and
and
movsl
dec
lock
sbb
test
sbb
mov
xchg
in
lods
stc
cli
mov
rcrl
inc
jno
xchg
pusha
movsb
xlat
xorb
sbb
adc
mov
jne
pop
mov
sbb
mov
rol
cld
adc
push
ret
and
cmpsl
cmp
or
scas
aad
jle
daa
imul
mov
ficomps
jae
ret
int
fsubr
sbb
mov
sbb
xor
dec
leave
out
inc
movsl
or
adc
insl
fidivrl
adc
das
cmp
jbe
jae
cli
push
je
ljmp
sbb
xchg
rorl
fnstsw
insl
aad
pop
ret
movl
inc
insb
inc
clc
subb
enter
mov
mov
push
xchg
and
or
ficoml
stc
lea
aad
imul
fistps
rsm
data16
and
sub
dec
adc
daa
sbb
and
xchg
rclb
int
out
aad
or
lcall
push
lds
sub
cltd
inc
insb
test
lret
aaa
out
stc
scas
mov
cmpsl
mov
or
imul
sub
push
rcl
dec
push
xchg
and
pop
sti
cltd
lahf
pop
sbb
push
test
das
test
je
lcall
dec
out
nop
in
fwait
inc
mov
call
aad
hlt
pop
push
pop
mov
hlt
mov
jp
dec
mov
out
inc
xchg
xor
cli
scas
inc
or
nop
jl
jno
adc
rolb
std
pop
pop
jbe
addr16
test
lcall
loope
jg
sbb
adc
rorb
push
gs
pop
jne
stc
mov
jb
sub
out
loopne
sti
inc
cs
out
mov
fimuls
vandnps
aas
test
je
lock
aas
loopne
and
movsl
push
xchg
ds
aaa
lcall
inc
jo
jns
xchg
subl
xorb
daa
jae
cwtl
xor
cltd
vpandn
adc
push
mov
or
xlat
outsb
or
rol
rol
and
ret
inc
cmp
hlt
fldl
push
lcall
movsb
fs
pop
mov
lea
aam
mov
or
pop
dec
test
fcomip
dec
pop
xchg
arpl
leave
jp
repz
fnstsw
aam
xor
fsubl
and
cli
xchg
rclb
out
mov
mov
test
mov
or
fcoms
lcall
pushf
lret
arpl
and
or
mov
mov
cmp
cmpsl
sarb
sbb
mov
xchg
pop
pop
push
and
ljmp
pop
xchg
add
out
sahf
fisttpl
sti
shrb
inc
sub
call
inc
pop
jae
add
lods
push
mov
addl
inc
lcall
xor
mov
mov
or
test
mov
shlb
cmpsl
inc
aas
xchg
push
dec
sbb
mov
icebp
lcall
sbb
fwait
cmc
jmp
ja
jo
inc
inc
xor
shrl
add
mov
imull
out
adc
fsubrl
inc
add
daa
cmp
rol
and
shl
sbb
jp
leave
inc
push
push
sbb
jp
adcb
jns
mov
add
inc
enter
test
push
movsb
fs
iret
pop
xchg
mov
mov
xchg
xchg
and
push
push
or
rcll
adc
mov
or
rclb
jbe
sub
add
movsb
mov
lret
nop
push
xchg
pushf
ljmp
xor
insb
and
pop
lahf
sbb
cmp
aam
leave
mov
pop
jge
or
in
cmpb
jne
jbe
pop
or
lds
xchg
btc
sti
adc
and
add
repz
shll
mov
dec
repnz
test
add
lea
in
jl
cmp
adc
cld
int3
or
pop
movsl
mov
add
rcl
cmp
sub
mov
inc
loopne
cmc
in
cmc
movsl
fbld
pusha
mov
add
ja
out
or
pop
out
sub
push
jne
lret
mov
push
pop
daa
xor
adc
xor
xor
pop
daa
and
mov
add
decb
xor
jne
cli
stos
push
add
cmp
inc
push
enter
decl
xchg
ljmp
push
pop
mov
mov
je
test
out
test
sub
adc
push
ds
jnp
pop
mov
imul
loop
push
mov
std
mov
mov
and
fcmove
jo
adc
data16
lds
pop
aaa
sub
gs
out
ss
mov
jns
enter
push
sub
arpl
adc
jl
push
cli
ret
jle
and
je
cmp
and
xor
and
ja
divl
movsl
ss
jbe
test
jno
out
leave
xor
jno
in
out
or
gs
repz
mov
arpl
pusha
dec
sub
stc
ljmp
out
rorl
fldenv
jb
pop
sahf
mov
sbb
push
mov
fistpl
pop
add
movsb
bound
shlb
sbb
sbb
scas
dec
jg,pn
xchg
lock
mov
loope
add
shll
mov
pop
fcmove
sbb
mov
bnd
loopne
frstor
movsl
mov
adc
push
pop
jb
gs
test
ja
mov
jmp
in
xchg
jl
int
pop
or
in
xor
cld
sbb
in
popa
sete
mov
or
cmp
jle
icebp
ds
jbe
inc
mov
xchg
push
scas
mov
int3
stc
cltd
push
aaa
fdivrl
gs
and
pop
imul
das
cmpl
les
push
mov
xlat
cmp
cmp
into
push
xor
in
into
cmc
jns
sbb
punpckldq
sub
outsl
mov
popa
or
pop
and
or
ljmp
sbb
jl
dec
jmp
iret
mov
push
pop
jnp
cmpsl
mov
pop
xor
mov
pop
sbb
sbb
stc
fmull
outsl
xor
addr16
lea
movsb
pushf
sub
mov
negl
xchg
mov
sbb
xchg
fs
dec
call
mov
push
call
and
jb
dec
cmpb
fisttps
mov
inc
cmc
dec
pop
jbe
stos
or
test
mov
xchg
ret
fwait
or
mov
jl
test
imul
cmp
imul
aad
arpl
shll
mov
dec
cwtl
and
into
add
aad
dec
or
ret
inc
int3
mov
out
outsl
jp
xor
xor
mov
pop
dec
sti
pop
bnd
sub
cmp
out
cs
sar
xchg
nop
lods
aam
or
cli
add
sbbl
iret
hlt
fwait
pop
out
clc
and
inc
inc
mov
iret
add
and
cmpsb
mov
cltd
in
lret
shll
mov
mov
sub
sub
adc
ror
test
je
dec
and
pusha
push
fwait
pop
cmp
js
scas
push
nop
or
sub
cmpl
xchg
or
xchg
sub
pop
adc
fdivrs
add
out
clc
pop
jno
loope
dec
loop
dec
mov
leave
mov
rcrl
and
lock
dec
cmpsb
daa
repnz
test
jnp
mov
out
sahf
int3
scas
call
adc
adc
cs
add
fsubrs
cmp
leave
rcl
into
cmp
mov
or
pusha
pusha
in
lahf
add
daa
sub
pop
xchg
or
mov
xlat
mov
xchg
lahf
mov
xchg
sbb
test
aam
and
xor
lret
data16
rep
ja
cvtpi2ps
xlat
jle
xlat
inc
sub
xlat
jl
pop
mov
outsb
inc
lcall
nop
mov
dec
std
mov
xor
mov
mov
loop
xchg
add
push
daa
sub
les
pop
dec
fcoms
sub
xor
pop
cmpsb
xchg
xor
lcall
cmpsl
daa
mov
push
mov
out
int
addr16
xchg
ds
mov
subl
or
insl
repz
out
push
pop
test
fmull
aas
inc
sbb
ss
imul
scas
and
aas
addl
xlat
or
lret
jae
cli
call
xor
xor
idivl
jb
xchg
fcoml
nop
add
fstps
mov
test
cmp
lahf
or
mov
adc
mov
inc
and
pop
sbb
movsl
inc
pop
inc
pop
mov
imul
push
rol
mov
pop
scas
push
stos
sti
lds
or
mov
dec
lahf
rcrb
cmpsb
mov
stos
jl
mov
aad
test
or
lods
add
mov
pop
sti
inc
xor
mov
push
pop
fwait
add
shrl
or
fdivrs
dec
outsl
enter
jmp
and
or
test
test
mov
stc
repz
inc
lcall
add
cmpsb
jl
into
jp
adc
in
xor
pop
outsb
outsl
stos
mov
out
das
aam
push
cmpb
cmp
sub
test
movsb
xor
sub
in
xor
cmpsl
mov
popl
outsl
int
push
add
leave
lea
repz
mov
out
cltd
mov
paddsw
push
in
out
mov
xchg
into
and
xor
ds
loop
pusha
pop
pusha
xchg
xor
cmp
fsubl
mov
xchg
fwait
xor
loop
lods
stc
and
ret
cmp
mov
and
inc
pop
lea
mov
jge
jmp
ficoml
mov
xlat
push
movsl
cmpb
cmpsb
mov
movsb
imul
xchg
xlat
adc
pusha
lock
icebp
xchg
lcall
add
leave
inc
fcompl
scas
mov
pop
mov
sub
inc
hlt
call
inc
pop
adc
cmc
pop
jo
decl
mov
out
icebp
cmp
fs
lock
cwtl
jnp
push
jno
lret
iret
fs
dec
cmp
in
push
int3
sub
cld
push
bound
jl
dec
mov
mov
jl
cmp
add
loope
adc
in
add
lds
and
mov
pop
or
pop
cmp
xor
fsubr
in
stos
adc
mov
scas
cmpl
add
xor
xor
add
sub
jns
addr16
lcall
cmpl
mov
mov
mov
jp
arpl
loop
xor
pop
jge
pop
je
push
movsl
and
push
stos
pop
cmp
fwait
cltd
call
aas
add
ret
in
jnp
fdivs
aaa
adc
add
jno
xchg
xor
jnp
sub
arpl
outsb
push
adc
scas
add
repz
jo
adc
lds
fsubl
inc
add
push
mov
outsb
jb
cmp
fcompl
shrb
or
out
ret
jle
push
stc
jno
addl
cmpsl
mov
je
mov
and
sbb
cmpsb
and
xchg
push
hlt
pop
fcmovb
rorb
add
mov
pop
push
es
mov
pop
xchg
ret
pop
inc
fisttpl
or
or
bswap
addr16
hlt
sub
insl
cli
enter
enter
int3
cmpsb
push
movsl
sbb
push
stc
mov
aas
pop
mov
test
les
in
mov
xor
pop
or
adc
pop
outsb
aas
mov
jne
imul
xchg
cmp
mov
xchg
xchg
in
pop
test
mov
adc
lods
popa
loope
enter
std
push
mov
jg
jge
jmp
jns
lahf
mov
xor
xor
idivb
adc
jo
jb
mov
das
mov
sub
mov
rolb
push
sub
leave
movsl
mov
mov
shrb
jge
cmpsl
ret
cli
xchg
das
fisttps
sub
stos
mov
leave
and
mov
cmpsb
mov
xlat
cmpsb
mov
mov
fisttps
xchg
jge
dec
popa
inc
add
ret
out
and
inc
push
js
sarl
movsb
mov
fldcw
mov
pop
inc
push
fsubs
fstps
testl
or
ret
repnz
xor
sub
movsb
es
sarl
xchg
jb
movsl
in
jg
fcoml
in
add
cwtl
inc
int3
mov
inc
outsb
mov
in
adcb
push
add
arpl
dec
imul
sub
mov
or
test
or
sub
xor
shrb
mov
lcall
add
jns
dec
in
and
jae
mov
lret
adc
lds
jbe
in
inc
add
ss
inc
nop
inc
inc
sub
mov
jae
scas
addl
aas
nop
xchg
movsl
and
aaa
or
movsl
xlat
shr
jecxz
jl
sbb
dec
lds
icebp
mov
cld
sub
xlat
imulb
inc
into
add
popa
fdivrl
aaa
in
xor
and
xlat
cmp
out
out
sahf
insb
cmp
mov
or
cbtw
xchg
andb
pushf
cwtl
mov
movsb
jle
shlb
jecxz
jo
and
cltd
mov
gs
xchg
mov
xchg
push
call
test
lret
out
cmp
pop
xchg
fs
lret
or
mov
xor
out
xor
cs
xor
xor
andb
test
orl
pop
cmp
lds
dec
xacquire
nop
imul
cmp
dec
jp
sti
dec
push
ret
test
mov
rcrb
scas
cmp
repz
pop
lods
pop
push
jns
lea
mov
xlat
cmp
mov
xchg
scas
pushf
cld
enter
mov
mov
mov
scas
test
jne
inc
sbb
mov
std
mov
inc
fsts
dec
int
push
cmc
data16
outsl
pop
lds
sub
xchg
xor
mull
fld
xor
dec
dec
fisubrs
inc
sarb
leave
mov
divb
fs
sahf
mov
into
or
jl
pop
repnz
fisttpl
test
push
dec
xchg
sahf
add
scas
cmp
movsl
adc
mov
into
mov
xchg
mov
lcall
notl
dec
push
jmp
xchg
push
sbb
sub
les
fwait
divb
repz
pusha
jne
sub
xor
lods
leave
push
xor
mov
pop
cld
mov
lds
jae
push
fstpt
jl
pusha
mov
shrb
push
and
insl
xchg
fisubrs
push
cmp
jge
xchg
shr
test
sahf
aas
or
and
insl
xchg
jmp
pushf
inc
pusha
jmp
jp
mov
dec
mov
aam
cmp
mov
decb
popf
movsb
out
call
sub
add
pop
incl
xchg
cmp
cmp
jge
ret
and
sbb
adc
outsl
mov
lock
jmp
dec
cltd
cltd
sahf
jmp
jmp
mov
add
add
faddl
or
push
shrb
mov
or
dec
and
cli
inc
lea
sbb
jae
fdivrl
lods
leave
jns
inc
push
int3
dec
cwtl
inc
movsb
ja
gs
inc
and
xchg
jns
sbb
bound
sub
jg
xchg
nop
movsb
insb
insl
jle
adc
mov
in
aam
das
jnp
in
outsl
pushf
fs
lods
dec
adc
lcall
cmp
stc
out
addb
push
lods
mov
mov
or
in
test
push
js
push
xchg
xchg
sub
mov
pop
cli
outsb
xchg
or
push
rcr
dec
mov
push
fwait
jne
xor
sub
xchg
outsl
pop
mov
stos
sbb
mov
dec
icebp
adc
adc
xor
mov
mov
in
stos
lock
mov
cmp
xchg
adc
int
or
test
addr16
scas
stos
inc
add
int3
mov
andl
insb
popf
push
jne
fdivr
lcall
inc
insl
cmc
cmp
dec
sbb
movsl
fs
arpl
mov
mov
pop
repnz
daa
sbb
mov
dec
bound
mov
ds
imul
mov
inc
mov
int3
pop
jne
rcll
mov
out
lds
fnstcw
or
popf
pop
fidivs
add
sub
dec
out
xchg
cmp
mov
arpl
and
or
pop
je
adc
xor
dec
push
xchg
jl
mov
rorb
dec
movsl
ret
and
and
jno
lret
jecxz
or
and
fisttpl
xor
popa
rcrl
mov
in
out
or
add
inc
cmp
cwtl
push
jnp
sbb
or
sbbl
push
mov
sbb
mov
push
enter
cmp
fstpt
es
push
orl
or
mov
jo
inc
movsl
jp
movsb
ja
jle
cltd
dec
push
sarl
or
mov
shrb
xchg
and
pop
xchg
lods
daa
shll
adc
sbb
xlat
mov
xlat
cmp
out
mov
das
pop
mov
scas
adc
jnp
adc
pop
mov
xchg
out
loope
and
xchg
loope
mov
adc
fcomps
cmp
js
idivb
sub
jae
xchg
std
dec
cmp
cltd
cltd
adcb
jne
inc
push
jg
addr16
popl
or
dec
cltd
inc
jns
jns
jle
out
push
xlat
aaa
lahf
xchg
mov
icebp
sub
repnz
cs
dec
jno
push
icebp
out
rolb
daa
pop
fcom
into
pop
adc
stos
roll
xor
popf
mov
cwtl
xor
push
and
cmpsl
dec
jg
sbb
mov
test
loope
in
sbb
cli
cmpl
adc
cmpsl
pushf
mov
clc
mov
rorl
push
pop
loopne
mov
mov
imul
add
xor
aam
nop
inc
xorl
shlb
cmp
addr16
sbb
bnd
loopne
mov
lahf
andb
dec
inc
mov
adc
sub
stc
push
in
inc
clc
dec
and
fs
cmpl
adc
and
sub
and
or
and
leave
rcrl
movsb
jg
cld
sahf
dec
push
rolb
adc
push
jne
mov
lea
mov
inc
loop
pop
dec
lea
xor
add
shl
cmpl
lock
inc
cld
sti
mov
sar
xlat
dec
jmp
and
popa
lcall
mov
xchg
and
in
jp
mov
xor
add
jae
cli
or
inc
mov
mov
imul
imul
lea
inc
nop
repz
push
jle
cmp
js
fildl
fdivl
sub
lret
xchg
js
jb
loopne
sbb
test
sub
pusha
scas
arpl
cmpsl
aam
out
jmp
dec
aad
loop
shll
pusha
cmpsl
xchg
adc
push
xchg
test
int3
sub
mov
dec
test
inc
xchg
lcall
ljmp
out
add
push
flds
push
sbb
insl
pcmpgtb
andb
lcall
test
popf
frstor
stos
inc
mov
sbb
sub
sub
addr16
andb
fadd
adc
aas
jmp
stos
mov
stos
repnz
push
inc
repz
test
cmp
ret
add
dec
xor
mov
sub
jbe
cmp
push
mov
fnstcw
subl
sbb
sbb
or
mov
push
sbb
outsb
outsl
loope
enter
push
cmp
mov
sbb
cmp
xor
mov
dec
sbb
lcall
push
out
adc
dec
out
imul
xchg
arpl
dec
jg
sub
add
out
mov
jmp
imul
fistpl
xor
mov
sti
inc
outsl
daa
scas
jecxz
adc
mov
nop
lahf
xchg
dec
subb
xchg
inc
gs
fdivrl
cld
outsl
or
mov
pop
push
cmpl
xor
bound
ljmp
jp
ljmp
mov
in
ret
out
mov
mov
out
inc
and
jns
or
mov
add
lcall
xchg
sbb
sbb
fisubrl
das
pandn
fbstp
pop
mov
xor
shll
scas
sub
add
dec
add
mov
cmp
push
cmc
dec
mov
dec
fstl
stos
stos
stc
lods
fistpll
inc
adc
or
mov
outsl
mov
and
add
pop
addr16
scas
mov
xor
imul
in
mov
mov
and
pop
outsl
cmp
mov
jl
jge
cmpsl
ror
inc
xchg
or
sub
xchg
push
xchg
lcall
pop
push
add
test
push
cwtl
test
jle
insl
fcompl
push
and
pop
cmp
cmc
mov
into
shlb
dec
test
scas
sub
xchg
cmp
mov
dec
sbb
dec
dec
aad
into
idivb
xchg
test
rcrb
dec
dec
push
xorb
out
dec
adc
sbb
and
orb
addr16
adc
jae
pop
loope
or
fidivrs
lea
push
std
sbb
hlt
cld
test
insb
clc
divl
fmuls
sti
adc
ss
movsb
xor
icebp
cmpsb
sub
push
xor
mov
sbb
push
push
jo
push
push
mov
scas
dec
pmulhuw
sbb
or
add
addr16
pop
das
call
jae
insb
and
out
mov
xchg
roll
push
aad
bound
popa
mov
or
cmp
and
or
rcl
je
pop
insl
sbb
cmp
adc
xchg
loopne
stc
xor
inc
fisubrs
mov
out
orl
sub
dec
push
and
stos
inc
dec
pop
cs
test
test
out
lahf
cmp
shrl
in
in
les
aam
sti
push
fistpll
pop
lret
pop
sahf
cmc
jg
push
ret
call
xchg
repnz
faddp
int
add
sbb
repz
add
stc
loope
pop
into
std
xor
call
mov
mov
in
fsubs
mov
mov
xchg
icebp
inc
cmp
lock
cmp
adc
xchg
xchg
arpl
int3
or
add
ljmp
push
negb
sub
mov
pop
stos
cmp
mov
push
icebp
cmpsl
testl
sbb
add
enter
lods
sub
fsubrp
pushf
mov
cmp
adc
mov
rcrb
cmp
inc
rcrl
test
idivl
mov
shrb
mov
inc
cltd
xchg
repz
icebp
jb
and
mov
and
into
std
mov
cltd
mulb
jb
pop
adc
dec
xchg
jns
mov
xor
sbb
insl
stos
fisttps
or
roll
and
inc
mov
xchg
lret
and
pop
adc
mov
push
push
mov
cmp
add
test
and
enter
out
ror
add
leave
sub
ja
or
mov
inc
bound
or
cmp
jne
cwtl
sti
in
aaa
daa
rcl
jb
pop
lcall
div
jo
imul
jge
movsb
leave
popa
mov
cwtl
data16
mov
les
mov
mov
or
and
enter
lret
ficomps
ret
jbe
ffreep
imul
mov
cmp
sbb
inc
add
test
in
test
inc
pop
or
ret
fdivs
dec
push
xchg
pop
mov
nop
in
fists
mov
fcoml
movsl
inc
adc
pushf
mov
outsb
pop
and
lods
xor
xchg
stc
loope
negl
xchg
lods
add
les
icebp
cli
stos
cmp
pop
aas
std
pop
mov
sub
push
das
and
les
sub
sti
xlat
push
std
mov
movsb
cmp
push
push
mov
mov
mov
or
cwtl
mov
or
test
orb
jge
movsb
scas
jns
data16
jmp
mov
jno
addb
fsubs
lahf
sarb
fs
lds
fstpl
mov
iret
mov
xchg
pop
and
cmp
push
add
iret
pop
repz
inc
push
jmp
dec
outsb
pop
jmp
sub
sarl
push
out
mov
and
pop
cmp
das
addr16
test
inc
sbb
mov
lods
fucomp
scas
xor
pop
push
lock
repnz
xor
inc
ret
pop
dec
jp
inc
cmpsl
mov
test
inc
sbb
jle
xchg
je
js
fdivr
cltd
cmp
bound
rcll
sub
in
dec
xchg
pop
xor
mov
xor
adc
push
lea
pop
dec
hlt
xor
bound
add
fnstcw
shlb
sub
cmp
mov
sub
jmp
repz
ror
rorl
push
sub
rclb
icebp
lods
xchg
fstpt
jne
fbstp
jl
mov
ljmp
hlt
outsb
cli
adc
fdivs
je
inc
loop
xchg
jmp
xchg
inc
mov
jmp
or
cmovae
mov
lock
hlt
xchg
icebp
call
mov
loop
out
or
mov
lds
mov
inc
daa
in
aam
push
mov
lea
cmpl
mov
inc
cmc
loope
jae
pop
je
push
push
or
out
fwait
mov
repz
push
xor
xor
rcrb
cmc
cwtl
cli
xor
es
pop
cld
sti
pop
adc
and
aad
xchg
xchg
mov
inc
test
push
mov
pop
cmp
and
xchg
cmp
mov
subl
and
rclb
aas
pop
jno
js
mov
std
js
out
cld
jp
cs
lcall
cli
and
les
or
or
add
inc
fadds
das
pop
icebp
dec
fiaddl
xchg
icebp
push
dec
pop
in
mov
pop
xchg
pop
add
or
ret
and
andb
gs
push
and
lahf
dec
outsl
arpl
sti
scas
imul
inc
cmp
inc
adc
rcrb
mov
add
cltd
fs
fwait
and
adc
and
mov
sbb
adcl
add
pop
sti
fiaddl
in
push
mul
and
nop
loope
jo
les
mov
rol
shrb
testb
fsts
ds
and
bound
pushf
pop
int3
pop
pop
lea
int3
xor
sub
sbb
popf
fldt
xor
xchg
loopne
mov
loopne
hlt
pop
mov
je
or
xor
push
cmp
in
bound
push
add
lods
hlt
jp
and
into
mov
jae
inc
inc
fsubl
push
mov
cmp
aaa
sub
loop
loopne
imul
ds
xchg
test
jp
pop
rcr
cmpsb
pushf
rcr
test
aas
sbb
dec
xor
orl
cmp
mov
repz
xor
cmp
lcall
dec
cwtl
pop
call
les
mov
or
orl
outsl
mov
adc
out
stos
or
movsl
repnz
mov
pushl
cwtl
popf
add
insl
xor
mov
mov
sbb
push
jns
cltd
test
inc
pop
push
fstps
rorb
sub
jge,pt
lock
cwtl
aaa
push
jp
sti
push
pop
cmpsl
adc
lods
lret
sarb
cmp
pop
or
xor
test
inc
iret
enter
inc
jg
cmp
call
mov
push
or
loopne
xchg
int
jno
mov
mov
ds
mov
xor
inc
xchg
push
lods
imul
fsubr
loop
or
pop
sbb
dec
js
adc
loopne
das
or
mov
or
mov
cmp
sbb
adc
cs
cmpsl
pusha
aaa
and
mov
mov
imulb
mov
jae
popa
pop
lahf
cmp
sbbb
adc
sahf
or
pop
ret
repz
mov
or
mov
ss
test
mov
sbb
leave
repz
or
inc
jno
mov
mov
jbe
pop
adc
or
push
rolb
lahf
pop
push
fstl
not
dec
xchg
xchg
insb
push
into
shll
cmp
jae
inc
dec
rcrb
dec
lea
test
cmc
sub
or
mov
jno
mov
mov
mov
mov
jae
adc
push
xchg
mov
mov
rcrb
jle
push
fcmovb
mov
into
sbb
mov
inc
arpl
xchg
adc
js
loop
dec
testl
xor
or
xchg
out
dec
dec
mov
movsb
and
fdivl
insl
jmp
sbb
and
xchg
or
rcl
xchg
push
or
cmc
mov
cmp
in
nop
mov
add
push
mov
mov
hlt
add
push
outsl
xor
insb
sub
je
sbb
jle
cs
dec
out
loop
aas
shlb
iret
shll
aaa
mov
push
add
jns
add
cs
repz
inc
or
daa
mov
mov
clc
rcll
aam
daa
mov
sahf
test
outsl
hlt
mov
ljmp
cmp
sub
pop
fninit
adcl
sbb
cmp
sti
pop
push
jl
and
nop
fcomi
or
lds
mov
inc
rolb
stc
xchg
mov
pop
ja
ja
enter
cmp
stos
jle
notl
lods
incl
push
lock
inc
in
imul
or
rclb
negl
addl
add
sbb
sarb
cmp
and
xor
cmc
mov
sub
lds
ljmp
test
shlb
jle
sbbl
mov
push
push
jle
xchg
notb
fs
sub
fistl
add
pop
nop
sbb
cmc
jecxz
lock
orb
mov
out
outsb
dec
xchg
mov
cld
lcall
mov
mov
adc
mov
loope
andb
call
push
sbb
push
repnz
cmp
xchg
add
push
mov
out
add
dec
inc
mov
andb
jg
movsb
dec
push
imul
out
mov
mov
cmp
andl
hlt
mov
xchg
cmp
pop
sahf
mov
sbb
xchg
rorb
fsubl
nop
xchg
pop
and
jge
lds
out
adc
loop
push
je
jae
sti
mov
dec
or
lcall
jbe
xlat
or
movsw
adc
outsb
in
mov
jns
insb
out
pop
lret
inc
and
mov
mov
fwait
sub
lea
or
enter
shr
in
or
sub
ja
lods
cmpsl
xor
imul
add
pop
sbb
pop
cld
ds
in
or
mov
push
bound
sahf
lcall
or
pop
shll
rolb
lcall
test
mov
mov
call
cmp
fmuls
sbb
sbb
and
add
popf
mov
movsl
jo
call
mov
mov
sbb
mov
inc
sbb
outsl
dec
jge
sub
jle
shll
lods
fsqrt
call
push
loope
and
xorl
sub
popf
mov
mov
inc
and
push
mov
sub
test
std
add
je
mov
xor
mov
push
insb
setae
push
inc
xlat
lock
mov
fwait
push
imul
mov
dec
imul
push
in
sbb
mov
xchg
jmp
shrl
mov
jne
in
pop
jno
lcall
popf
dec
and
adc
pop
pop
movsb
clc
push
fldt
sbb
jp
std
dec
cmp
sub
xchg
push
popa
xchg
fistpl
fwait
adc
sti
or
inc
dec
jl
cld
sbb
test
adc
faddl
mov
ljmp
loopne
pop
je
scas
jl
lcall
popl
test
fsubrl
repnz
and
or
in
sbb
push
mov
xor
adc
push
outsl
mov
pusha
mov
jle
inc
xlat
je
jbe
out
xor
daa
call
in
xchg
dec
sbb
mov
adc
aas
jmp
jg
pusha
adc
cmp
fnsave
ss
aam
inc
cmp
les
adc
cmp
lret
xor
in
sarb
xchg
stc
pop
inc
xchg
sbb
popa
sti
xor
jns
jg
jo
dec
dec
add
jp
mov
gs
push
ffreep
jge
mov
push
jae
out
adc
stc
pop
call
adc
inc
cwtl
scas
test
ja
mov
mov
sub
inc
out
cmp
scas
and
sub
fst
int
xlat
jns
xchg
push
jecxz
mov
cs
pop
movsb
dec
stc
cltd
pop
jns
aad
push
cmp
xor
call
xchg
fdivs
xchg
js
loope
paddusw
dec
xor
popf
inc
loope
addl
lea
xor
mov
mov
xor
sub
and
aaa
xor
das
jb
adc
notb
cmp
mov
enter
roll
repz
pop
cmp
popf
mov
add
dec
test
push
jnp
cli
jb
loopne
cmpsb
ja
pop
adc
mov
cmpsb
mov
fwait
lret
les
cli
and
xchg
rorb
xlat
jmp
cmp
loope
pmulhw
pusha
jbe
mov
outsl
mov
xlat
popa
sahf
xchg
stc
fnop
call
fwait
mov
lock
sub
xadd
pop
int
xor
xchg
loop
jne
mov
lods
popf
iret
test
jmp
pop
out
in
call
lods
mov
jb
mov
rcl
imul
pop
jns
adc
xor
leave
lret
mov
mov
adc
cmc
testl
add
aam
aam
and
aas
scas
out
xchg
sub
mov
xchg
xchg
scas
cmp
shlb
frstor
dec
fdiv
addr16
mov
les
ljmp
movsl
sub
xor
mov
inc
pushf
or
xchg
cwtl
xor
pusha
out
inc
js
cmpsl
cs
pop
mov
fisubrl
sub
lret
pop
push
cmpsb
or
xchg
add
and
rolb
rorb
inc
jae
imul
jp
pop
lahf
cmpsb
add
and
mov
mov
aad
pop
xor
adc
pop
in
test
adc
fs
es
jp
repnz
push
bswap
sub
fwait
loope
jge
sub
sub
mov
mov
adc
insb
adc
cmc
pop
jmp
jmp
push
mov
push
call
jecxz
mov
jnp
pop
jno,pt
stos
subl
mov
adc
js
jge
dec
lods
jle
push
hlt
leave
fucom
jne
lret
dec
xchg
roll
in
bound
add
dec
out
andl
or
notl
call
jb
xchg
or
lea
clc
daa
xchg
xor
outsl
sbb
insb
cltd
xchg
orb
inc
jb
dec
fmull
pop
cmp
xchg
mov
jl
dec
into
dec
mov
divl
clc
jnp
test
ret
cmp
lret
cmp
inc
jo
or
ds
addr16
cwtl
push
loope
int
sbb
push
and
mov
cmp
imull
push
sbb
jae
mov
inc
add
in
das
dec
cmpsb
cmp
xchg
pusha
cmpsl
popf
mov
xorl
stos
sbb
aad
ret
dec
jp
adc
add
push
adc
leave
push
xor
push
fs
es
and
jbe
out
test
dec
jg
mov
loopne
fildll
shrl
fidivl
popf
outsl
lret
iret
outsb
xchg
and
mov
adc
jbe
out
addl
dec
cld
dec
inc
mov
les
push
test
cmp
pop
jmp
and
sarl
adc
mov
lret
dec
aas
shll
push
xchg
addr16
jo
adc
lods
scas
add
xchg
ret
cmp
inc
and
cli
dec
xchg
mov
je
xchg
sahf
lret
scas
dec
mulb
xor
inc
mov
scas
ficoms
in
fistpll
stc
test
push
xor
pop
stos
cmpsb
pushf
aad
or
sti
push
mov
adc
jns
add
mov
cs
les
fisttpl
dec
les
mov
enter
or
in
movsb
inc
pop
pop
pop
or
inc
repz
add
jne
rcrb
pop
and
das
jge
repnz
mov
stos
mov
jle
out
dec
std
pop
mov
mov
sbb
xchg
jge
mov
push
iret
movsl
bound
loopne
into
fwait
pop
notl
mov
cmc
loope,pt
fs
or
jbe
xchg
mov
cltd
shr
aas
mov
arpl
test
xor
fimuls
arpl
cmp
inc
scas
jp
jbe
push
jnp
mov
or
and
sbb
movsb
and
aam
dec
fstsw
jl
cmp
cmp
xorl
jnp
jp
mov
jnp
es
inc
dec
pop
mov
push
mov
xchg
nop
popa
mov
call
pop
roll
mov
outsb
divl
loop
into
cmc
test
jl
adc
fdivrl
cmpsl
sbb
scas
aas
xlat
lahf
cmpl
xor
push
cli
mov
es
cmp
fstl
sub
adc
decb
or
push
mov
fs
mov
mov
in
sub
jne
aas
xor
notb
cmp
pop
mov
stos
sub
adc
xor
and
sbb
es
xor
rolb
cmpsb
mov
fs
or
pop
insw
jle
sar
incl
lcall
fsts
in
cmpsb
mov
lahf
push
cltd
and
xlat
loop
ja
aam
dec
push
add
xor
leave
pop
push
pop
jns
push
xchg
lds
add
and
mov
sbb
mov
push
jo
mov
mov
push
ret
out
in
imul
rorl
mov
cmpsl
fistl
pop
out
mov
in
dec
jnp
or
mov
es
mov
out
pop
mov
or
mov
or
fimuls
dec
hlt
xor
sahf
mov
adc
js
test
cmp
cltd
add
out
jecxz
mov
push
or
adc
out
out
dec
push
inc
or
or
xchg
xor
pop
cmp
dec
bound
add
subb
out
mov
ret
push
roll
push
pop
cwtl
jb
jg
mov
mov
dec
out
cli
xor
in
imulb
mov
divl
xor
jns
add
dec
pop
and
jbe
mov
sub
dec
xchg
enter
sbb
int
aaa
add
xor
add
sbb
push
push
jns
into
dec
stc
in
lret
dec
data16
scas
mov
lret
lods
pop
int
fmull
outsl
xor
or
mov
pop
icebp
xchg
add
aaa
loopne
inc
jmp
dec
xor
dec
lea
add
int
push
jle
add
cmp
test
repz
enter
push
clc
or
jl
add
pop
out
mov
aaa
mov
icebp
sbb
arpl
movsl
int
inc
loopne
int3
pop
jecxz
dec
frstor
nop
mov
jno
mov
repz
inc
or
or
lcall
cs
cmp
lahf
push
adc
mull
out
mov
xchg
or
mov
dec
out
pop
dec
subl
xor
fbld
mov
inc
push
mov
mov
inc
shr
push
sahf
ds
imul
imul
mov
fnsave
aad
xlat
jp
shlb
push
enter
out
mov
xchg
and
je
push
push
out
jle
in
jle
adc
gs
adc
sysexit
dec
mov
imul
test
clc
mov
lods
push
inc
or
add
clc
dec
push
pop
mov
arpl
lcall
sbb
jg
mov
push
jne
dec
jne
rcrl
out
stos
or
aam
xor
mulb
shrb
and
sub
cltd
inc
mov
adcl
bound
and
fadd
fbstp
fwait
fdiv
test
jp
cmp
fidivrl
nop
test
test
or
xor
cltd
inc
lcall
jl
push
adc
pop
decl
xchg
cmp
jno
sbb
pop
xor
xor
repz
fsubl
movsl
leave
add
jbe
stos
mov
inc
xor
popf
mov
pop
inc
mov
jmp
fsubp
dec
or
xor
in
inc
imul
je
mov
jmp
push
fnstsw
cmp
and
cs
nop
adc
repnz
push
cmp
inc
rcll
push
outsl
pop
and
sub
push
ret
test
fsubs
cs
adc
push
dec
xchg
pop
pop
je
lahf
push
xor
bswap
add
xchg
adc
leave
cmpb
out
es
or
xorl
bound
fisttpll
mov
and
cmpsl
cld
test
push
inc
leave
pop
fsubrs
fmull
adc
xchg
fwait
xchg
dec
jmp
decb
inc
fcomps
xchg
mov
cld
sbb
pop
cmp
stos
mov
sahf
aad
sbb
pop
fwait
pop
mov
addr16
sbb
xchg
leave
outsb
inc
shrl
jo
adc
lret
add
ror
jecxz
adc
in
insb
and
icebp
inc
and
push
sbb
lret
arpl
gs
imul
push
or
jge
cmc
push
add
inc
test
fidivrl
lods
pop
aam
pop
add
pop
imul
fldcw
mov
ret
add
out
into
ret
std
pop
orb
pushf
int
jae
adc
loope
and
scas
sbb
pop
ss
and
cmc
sub
shll
insb
repnz
clc
inc
lahf
xor
loope
ja
adc
push
outsl
push
clc
and
dec
sbb
in
mov
push
fdivr
mov
push
sub
push
sti
sar
faddl
jae
testl
mov
iret
shr
in
fwait
or
add
sub
mov
aas
inc
add
pop
and
stos
dec
jmp
lods
loope
in
adc
jnp
add
jne
lock
daa
cmp
and
and
pop
fs
add
enter
js
clc
jmp
nop
push
das
loopne
fcoms
pushfw
and
xlat
sub
icebp
pop
cmp
icebp
int3
cmp
xchg
jecxz
and
sbb
xchg
sbb
push
in
fs
leave
pop
es
cld
dec
pop
fwait
jbe
add
repnz
inc
or
scas
jl
pop
push
or
jae
sti
pop
pusha
and
push
test
jp
pop
arpl
sbb
mov
jmp
rcll
hlt
cld
cmp
lret
addb
add
jae
jmp
popa
lea
mov
push
pop
cltd
cmp
idivl
cwtl
xchg
add
bound
or
cmpsb
cmp
add
jnp
mov
cld
adc
sub
faddl
or
dec
pop
repz
out
dec
andl
mov
test
cmp
popa
mov
fidivrl
inc
lea
jmp
pop
mov
lret
xchg
sbb
push
dec
jge
add
mov
test
dec
xor
push
cmpsl
xor
pop
cmp
ljmp
lds
stos
mov
ret
mov
mov
adc
es
push
fadd
mov
mov
jle
pushf
dec
push
inc
addr16
cmc
dec
mov
mov
jl
lret
mov
daa
call
sbb
push
scas
into
in
mov
cmpsb
xchg
in
pusha
cmp
push
adc
pop
jle
loop
cmpsb
out
rorb
jb
mulb
ss
mov
sbb
jb
push
cmpsl
pop
push
loop
dec
xchg
xchg
adc
dec
lods
daa
jecxz
xchg
jge
lahf
fcoml
mov
jno
push
ljmp
sbb
fdivr
rcrl
mov
mov
mov
mov
mov
cli
pop
std
popf
mov
jno
rolb
and
outsl
ficoms
mov
dec
scas
pop
sub
es
imul
enter
sub
ljmp
dec
out
arpl
jbe
xchg
and
and
rolb
andl
adc
xor
xor
xor
push
es
in
div
pop
pop
cmp
push
ficoms
xor
pop
xchg
stos
dec
xchg
fcomps
adc
cmp
aaa
xchg
lcall
mov
mov
xchg
jno
test
pop
inc
cmc
mov
mov
xor
jnp
inc
mov
mov
sub
and
ljmp
cmp
je
xchg
daa
insb
into
dec
sti
dec
jb
arpl
and
lret
in
push
or
fmull
arpl
adc
mov
push
jns
addr16
sub
add
inc
mov
in
ret
test
bound
les
movsl
jmp
mov
push
ja
imul
xor
das
inc
jb
jle
jo
adc
xchg
das
mov
mov
and
js
sti
xlat
mov
js
lahf
lret
sbbl
out
xor
add
pop
inc
inc
and
cs
jb
or
sbb
adc
ja
lods
scas
cs
scas
mov
xchg
mov
movsb
mov
xlat
push
jb
sahf
pop
inc
leave
out
mov
jnp
xchg
and
stos
sub
cmp
pop
out
mov
mov
sub
cpuid
mov
popa
xor
shl
xchg
sub
add
popf
dec
pop
jge
xchg
xor
lea
xor
imul
mov
cmp
in
mov
loop
outsl
jle
jno
sbb
bound
pop
int
mov
pop
ret
in
inc
stos
cld
push
push
inc
inc
mov
lods
lock
dec
fucom
rorb
dec
test
sti
fnsave
mov
or
cmp
jg
gs
dec
add
xchg
cmpsl
jno
pop
inc
cmp
xchg
cmpl
cmp
fstps
lods
sbb
jns
stc
inc
sti
cmpb
xchg
jbe
sbb
fisttpl
pop
rcl
movsb
sub
add
cmp
jno
out
push
shr
repz
enter
inc
sar
nop
dec
stos
outsb
mov
icebp
das
xlat
or
mov
pop
hlt
out
push
push
push
mov
ret
iret
push
out
test
jb
sbb
lods
fcmovu
lds
mov
adc
arpl
repz
lods
decl
das
and
insb
xchg
dec
rol
xor
adc
int
push
subb
adc
fs
sbb
jge
pop
xchg
bound
ficoms
mov
cmp
jnp
xor
adc
popf
sub
je
ret
mov
xor
loope
mov
mov
xor
pop
call
dec
inc
ret
pop
pop
pop
ja
pop
jb
mov
imul
push
das
dec
and
fisttpl
mov
cmp
cwtl
jp
cmp
cmpsl
jne
aam
or
stos
sbb
inc
jg
je
pop
lods
xchg
push
xor
and
xchg
cmp
xchg
ret
push
loopne
insl
add
test
mov
insl
sbb
xchg
movsb
lods
jg
jbe
pop
sbb
xchg
pop
add
ds
add
sahf
insl
jae
fists
add
or
scas
or
fistpll
aaa
cmp
pop
int
cwtl
loop
mov
adc
dec
add
push
add
cltd
cmpsl
or
jno
stos
jle
ret
in
mov
mov
fnstsw
je
xchg
jle
xchg
pop
xchg
add
mov
je
outsl
mov
idiv
and
jp
inc
jg
mov
or
mov
out
repnz
push
cmp
hlt
js
push
outsb
imul
jmp
out
rep
loopne
fisubrs
jg
dec
cmp
aaa
lcall
rcr
les
inc
gs
sbb
in
or
fs
psubw
mov
pop
loopne,pn
mov
jno
loop
hlt
cmp
add
int3
test
pushf
clc
sub
mov
iret
js
dec
jnp
mov
dec
mov
fdivs
mov
or
test
out
popf
andl
sarb
cmpsl
push
pop
mov
out
inc
adc
jae
mov
fwait
testl
xor
push
xorl
out
jns
push
je
pop
or
ret
or
rolb
pop
mov
dec
and
cmp
xchg
jae
push
pop
xor
lcall
sbb
fidivrl
les
stos
adcl
add
xchg
imul
iret
daa
adc
test
pop
aas
sub
out
jo
adc
gs
cwtl
imul
fidivrl
xor
out
fwait
cmpsb
adc
jae
xchg
hlt
dec
inc
hlt
fwait
into
in
rcrb
mul
xchg
repnz
repz
xchg
fldenv
aam
mov
push
lea
imul
mov
inc
out
dec
frstor
jae
dec
xor
aam
ret
enter
in
push
pop
push
inc
testl
mov
ss
push
in
sbb
mov
pop
jp
cli
fidivs
adc
jp
gs
push
repz
int
call
cmc
frstor
orb
fdivrs
cmpsb
int3
cmc
or
in
mov
inc
dec
pop
int
insl
dec
sub
pop
es
div
mov
lds
rclb
mov
sbb
dec
aam
movsb
dec
mov
mov
in
cmp
add
mov
sahf
mov
roll
pop
loopne
cmp
or
jp
int3
dec
int3
out
xchg
push
add
shll
pop
push
je
cmp
and
adc
sbb
in
mov
push
cli
dec
jp
lret
aas
shl
scas
repz
inc
hlt
sub
sbb
bound
fucomi
mov
fwait
jo
pop
imul
icebp
and
lock
sub
pop
jl
int
push
jbe
jmp
cld
test
mov
insb
mov
push
mov
jl
jmp
mov
test
jnp
out
pop
adc
or
mov
dec
bound
inc
adc
insl
lods
xchg
sub
test
adc
push
add
shrl
cmpsl
cmp
scas
cli
scas
cmp
cmpsb
mov
stc
shll
pop
repz
insb
sub
pop
lock
or
outsb
arpl
sbb
cli
loop
adc
mov
out
in
mov
and
loop
movsb
scas
in
jns
adc
xor
jnp
das
dec
inc
add
jl
jp
stos
cmp
bound
xchg
dec
insb
xchg
in
lds
dec
pop
test
and
jecxz
lods
cmp
xchg
mov
mov
sub
jmp
stos
mov
jmp
cli
icebp
subl
inc
and
fidivl
and
fldt
and
dec
lods
jecxz
adc
mov
push
push
mov
pushf
push
push
add
jo
int3
add
and
iret
mov
jp
shll
fldl
xchg
lret
sub
xchg
add
rcrl
outsl
repnz
cltd
cmpsb
insl
stc
inc
inc
scas
mov
ljmp
stos
lods
sub
inc
lock
pop
sub
fs
jns
or
cld
pop
dec
pop
push
sbb
or
cltd
pop
add
fwait
push
sbb
xchg
lock
mov
loopne
xor
nop
mov
div
or
clc
lds
pop
sub
jl
mov
inc
popf
pop
test
add
cmp
cmp
js
dec
ficomps
rcrb
mov
ss
daa
or
into
push
enter
dec
cmp
mov
lods
pusha
mov
cld
mov
mov
in
add
lock
add
lods
and
movsl
imul
popa
mov
add
cmp
mov
outsb
js
fistpll
cmpl
in
xor
mov
jb
jno
dec
mov
mov
push
movsl
cld
xchg
xchg
xor
mov
out
out
aas
adc
jg
or
adc
mov
xor
jne
fbld
xchg
fiadds
dec
int3
xor
shrb
aam
inc
mov
es
int
out
mov
jmp
scas
jae
leave
dec
jge
jbe
ja
fwait
cwtl
divl
pop
shll
adc
xlat
or
mov
sub
xor
out
mov
inc
pop
sub
jno
mov
daa
push
pop
and
sub
mov
dec
lahf
dec
js
cmp
insb
xor
jmp
insb
cld
jge
mov
add
xor
or
nop
cbtw
fisubs
mov
xor
fisubs
push
mov
cs
xor
adc
pop
call
sub
and
insb
adc
lock
inc
cmpsl
jno
pop
aad
sub
sbb
clc
and
adc
mov
in
push
jns
jne
xor
ret
ret
orl
lods
frstor
xchg
inc
jnp
fstl
or
push
dec
scas
enter
test
push
repz
xadd
cwtl
pop
pop
repz
sbb
jo
push
inc
add
fwait
jbe
roll
dec
fcmovu
fwait
mov
xchg
sub
lret
addl
lock
jmp
sbbl
adc
arpl
fcomp
inc
das
push
cmpsl
repz
pop
je
add
pushf
into
dec
jge
pop
enter
add
test
fsubs
call
pop
lahf
xor
daa
jbe
imul
rcll
mov
outsb
jne
insb
add
xchg
and
xor
aad
push
add
and
cmpsb
repz
pop
loope
push
sub
repnz
cmp
lahf
mov
xor
mov
mov
adc
push
cs
scas
adc
pop
ret
mov
xchg
push
sub
dec
cmp
insb
mov
lret
and
pop
jo
mov
in
cmpsl
aas
push
hlt
sub
mov
sahf
ret
mov
or
or
and
shll
clc
adc
test
mov
jg
xchg
pop
movsb
jp
out
dec
xor
adc
call
cmpsb
or
daa
insb
loope
add
pop
and
fst
mov
shrl
or
mov
mov
sbb
mov
les
sub
push
leave
sub
stc
sbb
jnp
adc
ret
mov
fldt
ret
cwtl
push
in
loopne
imul
fisubl
inc
xchg
in
mov
pop
gs
aas
xor
loopne
fucomip
in
push
icebp
popf
imul
mov
inc
test
cmpsb
test
nop
jbe
loope
aam
jb
pushf
adc
jne
loope
jle
push
sbb
add
lea
icebp
test
movsb
imul
stos
or
imul
adc
sbb
jecxz
pop
mov
inc
fs
mov
lahf
cmp
hlt
arpl
inc
adc
orb
stc
xor
dec
lock
cs
add
and
subb
push
fucomi
inc
sti
push
or
push
cwtl
jg
mov
ror
jb
sub
jnp
nop
popf
das
jo,pt
jle
ret
and
insb
push
xor
sbb
push
js
imul
mov
and
test
shl
xchg
in
leave
xchg
push
scas
adc
fs
jbe
xchg
jmp
push
sar
inc
pop
call
test
sbb
xor
cwtl
andb
cld
sub
imul
roll
hlt
cli
push
xchg
sti
xchg
mov
push
xchg
scas
fadds
sub
pop
sub
push
push
in
dec
popf
addb
fcomp
mov
imul
push
mov
add
mov
ret
iret
aam
push
and
dec
les
ja
out
stos
cltd
xor
push
mov
fs
mov
xchg
and
fmul
add
cmp
ret
adc
inc
fisubrl
adc
aad
or
sub
ret
jmp
movsl
lock
adc
std
adc
sub
fcom
out
jl
push
cmp
mov
std
mov
or
xor
push
pop
or
cs
sub
add
loope
adcb
mov
decl
jl
inc
sbb
loope
aad
jno
pop
pop
fldenv
push
fildl
xor
cli
mov
add
test
lcall
inc
imul
aam
subl
ffree
xchg
ljmp
lock
jmp
mov
mov
mov
push
fisubrs
repz
dec
and
adc
xor
aaa
adc
gs
pop
lock
push
sub
out
and
adc
pusha
add
jg
js
fisttpll
mull
xchg
adc
in
rorb
mov
mov
fbstp
inc
cmpsl
dec
lcall
and
add
xor
out
xchg
imul
sub
iret
mov
sarb
mov
fnstcw
sbb
scas
xchg
outsb
add
fisubl
and
sbb
pushf
jns
int3
adc
hlt
imul
cmp
mov
int
jg
loopne
sub
xchg
test
ret
imul
gs
loopne
fwait
xchg
dec
mov
aaa
mov
mov
or
and
repnz
adc
fidivl
push
push
pop
addb
int
pop
inc
cmp
xchg
jae
sub
test
sbb
xlat
cwtl
dec
sarb
rolb
xlat
inc
xchg
xor
nop
mov
push
fwait
mov
rep
jb
sbb
das
popa
cmpl
jg
das
mov
outsl
fwait
xlat
jb
xchg
mov
jno
arpl
jno
or
dec
enter
mov
lea
stos
inc
enter
jp
sub
jne
iret
fiaddl
push
add
jecxz
xchg
loopne
mov
dec
sbb
int3
cmp
jbe
jmp
lds
cwtl
cld
lds
in
push
push
mov
iret
cmp
adc
pop
cs
and
dec
dec
sbb
or
mov
lret
lock
push
pop
and
pop
leave
lahf
or
xchg
es
ljmp
pop
or
sti
inc
repnz
or
xchg
repz
jecxz
pop
jbe
aad
dec
call
inc
iret
push
popa
pop
nop
inc
xor
add
jns
cmp
and
jp
sub
pop
xor
loop
adc
and
outsb
and
cmp
lock
fdivs
stos
mov
xor
xchg
pop
push
insl
pop
dec
mov
mov
push
les
xchg
pop
lahf
pusha
imul
xchg
andb
jle
orb
cmp
rcrb
aam
fimuls
mov
enter
outsl
repnz
aas
dec
hlt
jg
icebp
mov
or
jg
sub
push
cmp
jp
daa
iret
into
repnz
fxch
popa
cmp
jmp
cmpsb
and
cs
adc
mov
add
pop
jb
pop
outsl
or
mov
fcomps
dec
test
stos
mov
xchg
je
in
and
mov
mov
iret
clc
hlt
xor
lods
into
andb
fcmovbe
sbb
addb
fucomip
lcall
pop
insl
jge
nop
jae
jmp
sbb
ds
mov
ffreep
lds
and
mov
sbb
mov
roll
fcompl
loope
push
adc
mov
daa
cwtl
pop
cmp
pop
pop
add
cli
mov
icebp
pop
jmp
xchg
in
mov
into
in
pop
cwtl
add
jmp
repz
inc
sbb
popf
xor
gs
test
xchg
fldcw
jns
jp
les
jns
add
mov
loopne
lahf
xor
mov
je
push
or
fiadds
sbb
sahf
mov
fsubrs
jge
xchg
inc
icebp
pop
pusha
push
xor
clc
pop
pop
insl
cmpsb
icebp
loopne
lds
es
sub
outsl
sub
push
roll
mov
fwait
lahf
mov
into
xchg
dec
adc
cltd
lock
mov
aas
lods
cmpsl
xchg
jne
sbb
dec
mov
mov
dec
push
shrl
cmpsl
xchg
push
ss
mov
and
cmc
pop
add
lret
mov
out
inc
scas
sub
adc
sbb
test
xchg
and
pusha
test
loope
cmp
pop
fistpl
sbb
push
add
lea
fisubs
es
stc
jnp
mov
mov
icebp
and
test
lods
add
cld
jg,pt
les
roll
ds
jmp
test
test
add
push
pushl
sbb
xchg
push
mov
dec
inc
pop
mov
and
sub
jg
outsb
test
out
push
out
inc
pop
sahf
push
rcll
sbb
cmp
lds
gs
es
lret
imul
aad
mov
test
arpl
sahf
addl
mov
aas
je
scas
pop
sbb
push
mov
lret
xor
dec
pop
daa
add
xchg
outsb
mov
out
in
cmpsb
ljmp
and
pop
ret
outsb
shlb
out
adc
mov
jge
mov
popa
jecxz
jbe
pop
sbb
cmpsl
jle
pusha
push
fnstenv
test
mov
jmp
mov
insl
adcb
fnstsw
mov
and
pop
push
ss
cltd
xchg
pushf
push
mov
mov
out
into
dec
daa
rcll
out
mov
sbb
or
into
sti
mov
filds
mov
push
and
jbe
rcr
push
sbb
gs
fimull
stos
xchg
cmp
aam
add
mov
jl
push
cmp
jp
sbbl
pop
fidivrl
mov
in
mov
cmpsl
cli
dec
cwtl
or
or
leave
xchg
or
repnz
in
xchg
dec
cmp
lds
in
data16
fisubl
addb
xchg
inc
insl
hlt
ret
cmp
inc
fwait
movsb
mov
sahf
jae
fidivs
popf
fcmovbe
mov
xchg
mov
inc
xchg
jo
loop
fcmovnb
xor
jp
adc
iret
jge
repnz
pop
xlat
push
xchg
arpl
rorl
insb
cmpsl
es
mov
sub
jecxz
pop
and
mov
int3
cmp
fsubrl
cmc
xor
test
pop
jecxz
xor
mov
ret
jmp
loopne
cmp
loop
inc
and
movsl
sub
push
sahf
sahf
mov
dec
lret
bound
inc
out
mov
push
xchg
jo
add
mov
adc
push
lahf
pop
js
xchg
sbb
mov
sbb
inc
add
in
pop
cltd
inc
push
pop
mov
xor
push
pop
or
fisttps
or
xchg
daa
das
adc
adc
stos
mov
cli
add
enter
movsb
adc
movsl
jb
cmp
mov
imul
cmpb
sub
int
mov
adc
jbe
sbb
xchg
fisttpl
mov
push
jae
xchg
dec
mov
sub
loop
addr16
sbb
inc
push
repz
lds
dec
add
test
adc
ljmp
cmp
xchg
xchg
pop
pop
ss
dec
push
insl
repz
imul
or
and
jg
xchg
imul
sub
xchg
pop
outsl
cmpsl
repnz
loop
sub
mov
mov
dec
sbb
mov
push
or
cmpb
ds
cltd
call
stc
sbb
daa
mov
and
jmp
loope
or
mov
mov
inc
int3
cmp
cmp
test
mov
xchg
call
pop
xorl
mov
fbld
cmp
fbld
push
push
sbb
lret
daa
call
xor
aad
pop
add
mov
daa
xchg
lret
or
mov
fcos
sti
pop
mov
rcl
rcrl
jbe
push
push
fs
push
xchg
addr16
test
ffree
mov
dec
push
out
mov
pop
inc
inc
fs
imul
loop
cli
sbb
insl
out
sub
dec
call
int3
pop
cltd
and
iret
cmp
jmp
das
cmp
icebp
jne
clc
mov
and
sub
test
xlat
xor
pop
push
cli
movsl
push
mov
test
sahf
stos
adc
mov
cmp
inc
repz
or
sahf
mov
test
mov
mov
mov
stc
inc
inc
mov
das
hlt
push
leave
cld
jle
mov
xchg
mov
nop
pushf
sbb
pop
jnp
enter
mov
jne
and
sub
cli
cmpsb
cmpsl
iret
test
int3
sbb
je
inc
stos
rcrb
aam
mov
lods
xchg
int3
xor
fbstp
movsl
push
ja
and
inc
or
sub
frstor
popf
leave
sub
pop
xlat
ja
out
or
or
rcrl
in
mov
pop
inc
lcall
out
dec
cwtl
faddl
stos
cmp
dec
sbb
xchg
dec
fists
rcrb
pushf
dec
xchg
xchg
fisttps
xchg
call
in
int3
out
sti
into
into
push
out
loopne
pop
aaa
xchg
xbegin
add
bound
hlt
daa
cmp
subb
lret
cmp
shrb
fmuls
push
imul
jno
xchg
xchg
js
repz
fldt
sub
icebp
test
pop
or
inc
fcmovne
fidivrl
imul
xchg
cli
pop
and
adc
aam
ds
in
lret
rolb
stos
out
jle
sar
jae
add
pop
push
shlb
and
ds
or
test
and
rcrb
cmp
mov
push
sbb
push
iret
pop
lret
daa
shll
sub
jno
adc
push
rolb
subl
in
sub
mov
jne
mul
neg
sbb
shll
inc
xor
shl
idiv
outsl
dec
push
mov
mov
adc
pushf
mov
xchg
add
outsl
mov
push
sar
pusha
and
lods
nop
add
adc
lods
xor
shrl
loopne
fcompl
movb
cmc
inc
in
sbb
sti
mov
and
lahf
loop
inc
repnz
dec
push
adc
jno
push
cmp
lahf
int3
addr16
ret
pop
inc
fildl
mov
push
movsb
push
or
inc
add
inc
xchg
jmp
xor
lods
pop
hlt
je
pop
push
sub
out
pop
sbb
fisubrs
jae
mov
jmp
or
cwtl
shr
faddp
xor
out
das
sahf
loop
inc
fdiv
jecxz
and
pause
pop
jae
mov
pop
dec
mov
jae
inc
cwtl
pop
icebp
popa
sub
insb
push
cmp
add
xor
sbb
dec
jbe
dec
pop
jb
cmp
mov
sbb
and
nop
push
das
push
outsl
cwtl
sbb
cwtl
inc
fistpl
subb
adc
mov
popf
and
int
push
mov
imul
jno
xchg
cltd
stc
rclb
dec
std
mov
inc
test
mov
adc
rol
adc
mov
sub
sub
repz
jbe
pop
add
or
orl
xchg
cmp
andl
inc
push
dec
add
loope
add
cmpsl
in
and
mov
insl
dec
cli
xor
pop
and
roll
clc
popf
mov
push
push
cmp
insl
sbb
jo
repnz
fwait
test
xchg
and
and
adc
rcpps
dec
xchg
xchg
adc
test
mov
sbb
fwait
pop
jb
test
xor
xchg
mov
test
popa
cmpsl
fiaddl
idiv
mov
mov
sub
addr16
or
add
ss
push
push
dec
mov
push
mov
lret
iret
cmp
mov
mov
enter
jb
test
loopne
add
push
add
pop
adc
and
movsl
subb
fcomi
add
push
xorl
cmp
pop
dec
out
xor
inc
fwait
movsb
dec
push
leave
mov
ficoml
lods
and
ret
sub
test
cld
aas
out
add
aam
enter
ds
int
dec
push
cmpsb
stos
mov
sub
and
and
inc
xchg
pop
pop
nop
inc
or
mov
call
lods
sarb
push
pop
jb
es
pop
popa
sbb
aam
xor
cld
ret
cmp
inc
enter
pop
mov
adc
int
test
fadd
orb
sub
xchg
ss
test
jb
dec
ds
sub
les
stos
call
call
movsb
decb
push
sub
lods
inc
bound
mov
lea
ja
cmp
pushf
adc
push
fs
test
loope
sarl
mov
iret
pop
cltd
mov
and
lea
inc
inc
into
psubsb
mov
in
pop
out
push
push
gs
jae
or
xor
xor
pop
les
stos
lods
cld
fwait
aad
push
call
stos
sbb
xchg
adc
mov
int3
xor
cli
hlt
lcall
repz
and
xor
add
sub
mov
addr16
mov
ljmp
sub
mov
mov
mov
cmc
inc
data16
sub
add
inc
out
in
cmp
in
movsl
movsl
jno
sbb
xor
ss
pop
out
out
aas
push
sub
xor
out
cmp
xchg
icebp
leave
push
cli
jb
mov
inc
or
dec
idivb
push
fucomi
sub
sub
sub
inc
into
xchg
popf
mov
mov
iret
arpl
mov
lods
xchg
rclb
jo
stc
js
lcall
or
jmp
jl
and
pop
xchg
xchg
js,pt
mov
shr
push
or
xchg
or
pavgb
cmp
js
jmp
sbb
xor
aaa
test
sbb
fwait
xchg
cmpsl
or
aam
xor
mov
int3
sbb
test
movsb
xchg
ret
mov
adc
popa
es
test
or
insb
adc
movsb
and
sub
fists
or
mov
jmp
mov
in
mov
fs
xor
arpl
inc
xor
sub
dec
frstor
and
movsl
add
xlat
mov
jge
or
mov
pmaxsw
add
in
xorb
rcll
sub
bound
inc
neg
mov
sub
adc
xor
ret
leave
mov
enter
mov
dec
mov
mov
jbe
jb
cmp
andb
bound
jbe
jg
out
mov
dec
fdivr
es
enter
ja
fidivrl
xor
imul
mov
into
xchg
incb
xchg
outsb
push
ja
sub
and
imul
mov
sbb
in
push
sub
push
pop
nop
pop
call
mov
mov
push
repnz
jg
jmp
mov
mov
mov
sub
xor
arpl
pop
sbb
xchg
int
mov
cmc
sarb
and
add
dec
and
sub
repnz
adc
std
add
stos
movsb
dec
xchg
jl
dec
inc
call
fldcw
scas
test
mov
mov
loopne
cmp
enter
cs
adc
call
sti
inc
pop
dec
push
or
in
xchg
imul
mov
cmp
out
out
in
into
cmp
pop
mov
jae
inc
push
sub
imul
sub
push
insb
pop
jecxz
cmpb
xchg
add
pop
insb
sub
and
loop
mov
add
daa
out
scas
loopne
arpl
icebp
lods
out
mov
xchg
xor
mov
iret
mov
loopne
jg
and
sarl
pop
cmpsl
cmpsb
imul
pop
popf
jg
mov
dec
cld
pop
fcoml
movsb
or
nop
adc
xchg
pop
movsl
xor
and
cmpsb
add
sahf
mov
add
mov
cmp
sbb
negb
sti
xchg
jge
std
insl
or
inc
jl
pushf
jb
fildll
dec
xor
out
loop
enter
add
push
add
push
js
popa
xchg
dec
out
xor
sub
mov
ret
addr16
pop
add
cmp
hlt
lea
inc
cli
xchg
jbe
xor
lds
repz
xor
and
adc
pop
jns
ror
mov
call
loop
jb
dec
xchg
jo
scas
or
test
test
pushf
cmp
std
push
ljmp
sub
cs
leave
adc
dec
les
movsb
xor
push
jns
imul
or
pop
pushf
out
jecxz
jl
fcom
jae
push
and
pop
push
imul
out
push
pusha
and
adc
flds
out
push
out
fwait
xchg
cmp
sbb
pop
out
sbb
pop
mov
add
test
repnz
mov
scas
or
inc
scas
mov
push
jo
xchg
xchg
or
dec
jle
popa
add
out
pushf
adc
in
sbb
jle
inc
mov
jns
xchg
mov
test
add
test
mov
negb
sub
iret
aam
adc
int3
xor
ljmp
jno
sbb
push
cmpsl
dec
ljmp
in
jmp
lds
sbb
jmp
lods
stc
ss
sub
fwait
adc
or
sub
dec
cmp
aad
loopne
jg
daa
loope
arpl
dec
add
enter
or
out
xor
cmp
add
inc
dec
andb
loop
or
mov
inc
add
mov
icebp
iret
outsb
pop
pop
rolb
pop
jp
mov
addr16
gs
sbb
cli
into
mov
js
adcb
add
pop
mov
repnz
cmp
dec
into
rcr
sti
xchg
cs
ret
fwait
ret
mov
ljmp
xchg
icebp
in
and
pop
adc
loop
sub
jnp
mov
xlat
mov
mull
adc
jmp
inc
iret
mov
test
outsl
jmp
lret
mov
inc
jmp
lcall
pop
movsb
ja
std
std
cmp
in
sbb
jge
shr
xchg
imul
hlt
ret
inc
pop
or
iret
test
inc
push
stos
inc
fwait
hlt
pushf
lock
fsubrs
dec
push
push
test
xchg
mov
jg
sub
xor
lods
in
lcall
mov
rcr
cld
out
mov
cs
mov
mov
push
mov
sahf
rorl
jno
push
jp
mov
popa
insl
ja
mov
inc
xor
cmpsb
dec
int3
fldt
insb
dec
cmp
xchg
inc
insl
add
jnp
andl
nop
mov
test
out
je
xchg
mov
push
cwtl
stc
or
mov
jbe
call
dec
out
pop
push
jg
inc
hlt
add
xchg
arpl
jns,pn
bound
imul
pop
daa
das
mov
icebp
cmpsb
out
mov
xchg
mov
sahf
fistps
daa
js
addl
mov
daa
xlat
mov
fmuls
fistpl
pop
loope
andl
push
mov
dec
imul
sub
xchg
imul
add
and
fbld
outsb
or
dec
scas
es
cmpsl
mov
in
sub
cmp
daa
sub
sub
xor
in
ficoml
mov
aaa
loope,pt
push
fsubl
jmp
push
push
out
mov
out
icebp
cmp
jbe
mov
mov
dec
sbb
je
ss
push
or
add
push
scas
xor
inc
sbbb
cmp
inc
stos
bswap
xchg
add
mov
sub
mov
mov
call
mov
scas
xchg
std
mov
mov
loopne
jno
pop
jbe
xchg
xchg
push
push
gs
pop
push
push
cltd
pop
popl
mov
sahf
sbb
inc
sar
and
mov
imul
mov
add
pushf
pusha
rol
les
cmpsl
cmpsb
rcl
pop
dec
repnz
arpl
xchg
aaa
es
push
sahf
push
mov
sub
sub
ljmp
push
fldt
dec
push
movsb
mov
insl
ljmp
pop
aam
sub
xchg
sbbl
sbbb
sbb
int
imul
push
imul
das
insb
leave
ret
lret
loopne
xor
xor
pop
cmp
jecxz
mov
arpl
loope
inc
cmpsb
jl
fsubrl
fildl
fcomip
dec
cmc
mov
mov
arpl
push
out
push
test
in
sub
inc
outsl
adcb
pop
lods
addl
mov
xor
dec
add
sbb
sub
jge
push
lahf
loope
repz
and
dec
inc
cmp
aam
mov
dec
sbb
mov
in
loopne
jae
push
dec
mov
movb
out
xor
in
insl
loopne
push
rcr
inc
pop
pushf
pop
add
movsb
rclb
dec
jnp
push
sti
cmp
sub
mov
outsl
aas
add
xchg
sbb
mov
ljmp
movsb
test
mov
mov
repz
inc
dec
dec
jecxz
enter
mov
push
push
sbb
cmp
cmc
inc
pop
xchg
pop
iret
pop
mov
hlt
js
fs
int3
icebp
lods
jb
xchg
fwait
je
or
jno
cld
mov
outsl
jecxz
roll
and
std
xchg
push
cmp
mov
jge
xor
mov
push
pop
dec
inc
jmp
dec
hlt
sub
nop
xchg
inc
cmpsl
jmp
cli
sbb
aaa
mov
or
aam
aam
js
adc
mov
sti
shlb
divb
pop
inc
pop
xor
lds
inc
and
mov
jb
xor
mov
jge
movsl
sub
adc
jnp
sub
dec
add
jle
mov
leave
imul
and
xor
test
in
das
dec
fdivrl
xor
xchg
dec
data16
scas
sarl
add
insb
sarb
mov
outsb
inc
lods
data16
sbb
jb
cs
push
std
push
fcmove
stc
fcomip
sti
jns
fwait
pushf
cltd
mov
ficoms
sbb
mov
ret
jp
cs
ds
jl
popf
fs
loop
sbb
adc
and
rcrl
mov
js
iret
mov
pop
pop
aam
sub
inc
fidivrs
std
xlat
popa
mov
lods
dec
push
mov
test
mov
stc
daa
std
lock
imul
mov
mov
or
jge
xchg
push
mov
rcrb
das
cltd
mov
lret
mov
pushf
repnz
inc
sbb
jp
lret
out
and
jae
add
adc
mov
movsl
je
inc
in
push
xchg
jl
pop
inc
sbb
aam
xor
loopne
lds
jecxz
mov
stos
xor
lret
stc
imul
pop
cmp
pop
fstps
mov
lcall
push
loope
js
pop
addr16
fstl
cld
mov
aad
gs
lretw
mov
jae
cwtl
andl
pop
push
sub
cwtl
cltd
pushf
movsb
sub
cmc
call
ss
ret
popa
mov
jb
addr16
inc
pop
dec
not
lods
fistpl
xor
dec
xchg
cmp
out
in
push
stc
je
jae
lods
fldt
imul
fimuls
and
lret
inc
jg
addl
mov
scas
jmp
icebp
addr16
std
adc
ljmp
sbb
xchg
mov
lret
hlt
pop
inc
xor
leave
test
iret
jno
add
jnp
dec
das
mov
dec
icebp
adc
cltd
cmp
lods
jmp
stc
xchg
jp
push
push
int3
aas
xor
mov
pop
push
xchg
mov
mov
sub
int
repz
jb
and
gs
push
repz
mov
int3
cmp
add
pop
arpl
dec
shlb
into
pusha
int
pushf
sub
sub
xor
bound
outsb
lods
outsl
xchg
push
lds
mov
int
mov
outsl
rorb
in
adcb
dec
rorb
inc
das
push
jp
inc
cmp
insl
pop
sbb
inc
adc
lret
fdivr
jne
outsl
mov
lods
xchg
sbb
adc
mov
ja
cwtl
sbb
xchg
ret
mov
cmp
cld
incl
sbb
icebp
test
add
sub
dec
jmp
ds
and
mov
loope
hlt
lds
loopne
shlb
pop
fists
lds
and
add
lods
xchg
xor
push
test
das
test
js
mov
addr16
adc
call
lcall
xor
xor
sub
aaa
out
fnstenv
inc
or
cmpb
dec
or
xlat
xor
pop
es
push
leave
dec
add
mov
dec
rcrb
cs
lods
jecxz
sahf
mov
mov
ljmp
sbb
dec
and
or
mov
dec
cmp
aam
dec
lret
inc
pop
push
lea
jmp
dec
lds
mov
negl
pop
push
sti
sbb
adc
jl
out
addr16
jne
testl
sbb
or
add
pop
arpl
fisubl
ss
pop
or
rorb
rol
mov
mov
pop
arpl
int
js
inc
les
in
int3
inc
push
or
xor
movsb
jb
xor
add
push
mov
aam
adc
ljmp
test
in
lea
loop
movb
mov
jno
stc
out
test
fisubrl
or
xchg
dec
rorl
jge
out
push
stos
leave
mov
mov
lret
xor
lea
scas
xchg
pop
out
inc
sub
mov
inc
andl
fcmovb
in
mov
and
cmp
scas
jnp
test
aas
push
call
loopne
xor
sarb
fldt
not
dec
or
mov
dec
sbb
mov
mov
pop
sti
cmpsl
add
or
test
in
clc
adc
fs
pop
cs
cmp
inc
push
data16
icebp
adc
outsl
shlb
ret
dec
push
inc
push
stos
notb
shll
addr16
divb
pushf
incl
xlat
dec
mov
test
inc
sahf
add
inc
in
stos
adc
mov
jae
lock
sti
xchg
lock
out
push
popf
mov
out
mov
jl
and
sahf
movsl
loop
xor
mov
jne
stos
mov
dec
insb
jmp
cmpsb
scas
sbb
incb
or
out
sub
sbb
jnp
ljmp
jmp
add
call
nop
inc
push
cmpsl
ja
mov
jbe
xchg
shll
inc
push
jns
xchg
inc
aas
add
mov
fimull
cmpl
fstpl
divb
pop
jl
lds
mov
xchg
inc
cmp
es
jne
mov
cmp
imul
or
movsb
loopne
dec
adc
add
lock
mov
dec
adc
add
mov
out
or
cmp
repz
call
pop
push
into
frstor
inc
das
push
std
sub
lret
jg
jge
mov
pop
cmp
bound
insb
out
push
mov
fbstp
xchg
dec
cwtl
enter
or
xchg
mov
push
nop
mov
inc
addl
inc
into
fdivrl
or
xor
mov
sub
or
lret
push
push
je
inc
aam
add
dec
call
xor
pop
mov
or
sbb
test
ds
lret
ss
xchg
cmovno
push
rcr
jecxz
mov
sub
mov
inc
cltd
xor
sahf
sti
push
hlt
xchg
das
icebp
cld
adcl
sbb
add
cmc
xchg
sbb
xor
push
outsb
out
test
mov
mov
sbb
inc
loopne
sbb
js
cmpb
sarb
mov
xor
aad
sbb
xor
clc
mov
sbb
xchg
mov
push
scas
dec
sub
daa
out
lahf
inc
xchg
mov
jae
pop
and
sub
adc
or
push
pop
jb
push
mov
shl
nop
insb
push
enter
push
hlt
jb
ret
idivl
mov
xlat
sbb
cmpsb
cwtl
pop
outsb
mov
dec
ror
pushf
loop
into
loopne
lahf
or
mov
rorb
cmp
lret
int
ss
sti
popf
jmp
in
and
cmp
cmp
fcmovnu
sbb
jle
fildl
mov
jbe
cmp
jb
adc
mov
dec
test
jo
sbb
mov
ljmp
cmp
mov
and
xchg
sbb
jbe
adc
push
xchg
or
xchg
out
sbb
dec
dec
xchg
fstpl
cmp
jns
popa
dec
sbb
sub
jne
xchg
push
lods
fs
pusha
ja
aaa
out
mov
push
sbb
je
std
mov
sbb
test
pop
jmp
fsts
jo
mov
ljmp
pusha
sub
cmp
pop
adc
das
jmp
add
mov
imul
jl
repnz
push
movsl
xor
xchg
xor
ja
cltd
add
sbb
call
vpsllw
add
xor
movsb
xchg
or
mov
ss
js
inc
push
lock
jne
addr16
js
xchg
fucom
je
lock
and
cmp
mov
nop
lret
int
sbb
lock
xchg
inc
out
pop
sub
push
leave
push
cmc
push
rcr
nop
lret
dec
sahf
mov
aas
roll
xchg
xchg
imul
test
mov
xchg
ds
push
movsl
popa
inc
mov
shr
sub
push
fmuls
inc
push
test
ja
ljmpw
cmpl
lds
pop
jae
rcrl
das
in
cli
mov
mov
pop
mov
xchg
dec
cmp
dec
test
in
cwtl
and
pop
mov
jl
lods
add
lods
push
aas
imul
jle
arpl
pop
or
lret
mov
in
stc
stos
jmp
fwait
mov
pop
scas
mov
roll
sub
inc
imull
add
xlat
daa
fbld
cld
or
lods
out
dec
call
and
jae
adc
roll
enter
mov
sti
cmp
adc
pop
nop
lcall
dec
or
xchg
push
leave
or
iret
dec
cld
shlb
scas
sbb
inc
cmp
rclb
push
imul
add
addr16
cmpsb
ds
xchg
fimull
call
jno
bswap
cs
jge
mov
imul
push
aad
dec
add
fyl2xp1
test
sub
push
mov
inc
cltd
add
and
xor
cmp
data16
add
cmp
clc
add
jg
fcmovb
pop
xchg
lea
mov
xor
mov
dec
flds
int3
jl
outsb
and
jp
mov
enter
out
stos
shlb
loope
dec
adc
jnp
rclb
jnp
adc
cmpsb
push
or
sub
cmp
dec
adc
xor
or
sbb
ljmp
scas
jle
cmp
inc
leave
inc
mov
test
lahf
insb
jns
cld
ret
das
add
imul
shlb
add
mov
cmp
data16
and
mov
fucomip
mov
addr16
and
gs
cmp
rcll
fdiv
shl
and
add
dec
add
cmc
push
xchg
and
idivb
sbb
dec
sti
fcomps
dec
pop
and
inc
ljmp
add
rol
mov
scas
adc
int3
xchg
xchg
xlat
cmp
movsl
cmpl
les
mov
hlt
ljmp
mov
cwtl
inc
fidivrs
mov
mov
xchg
lcall
sbb
cltd
pusha
jo
aad
shl
cmpsb
leave
dec
mov
sub
popf
mov
outsl
inc
mov
sub
pop
mov
roll
call
xchg
mov
shlb
sub
dec
out
sbb
adc
in
dec
mov
pop
inc
push
dec
jge
and
clc
sub
sbb
test
stos
ret
xor
adc
loopne
sbb
repnz
push
mov
mov
mov
push
mov
cwtl
adc
dec
jmp
pop
mov
mov
cmp
mov
mov
mov
xchg
jne
div
inc
jmp
sbb
stos
inc
push
movsb
adc
dec
mov
call
into
aas
cmpsb
fmul
cs
mov
cmpsl
fildl
xor
enter
lea
mov
dec
and
dec
insl
arpl
adc
shrl
sub
push
jl
dec
mov
inc
fimull
sub
mov
out
in
rolb
mov
inc
jo
lea
clc
roll
fisttps
pop
ffree
pop
xchg
int3
pop
pop
inc
mov
adc
or
xchg
dec
shll
or
insb
cmp
rorb
loope
movsl
mov
movsb
xlat
mov
lcall
or
cli
inc
test
sub
push
repnz
iret
pop
nop
and
lods
jo
cltd
out
das
ja
mov
jge
cmp
sti
or
inc
ret
mov
mov
mov
dec
jbe
xchg
pop
mov
inc
mov
sbb
movsb
imul
inc
scas
test
movsb
dec
aad
xor
or
inc
cmc
dec
shlb
push
shlb
mov
test
fcompl
push
vshufps
jmp
stc
and
pushf
mov
adc
int
xchg
inc
cmpsb
dec
jb
fstpl
in
jge
cmp
outsl
xchg
add
mov
imul
lcall
add
test
test
push
in
sbb
mov
rclb
xchg
dec
sbb
dec
jle
cmpsb
nop
decl
pusha
sbb
stc
insl
popa
push
inc
fsubrs
data16
mov
scas
imul
mov
mov
jge
cmpsl
icebp
xor
push
addr16
pop
cld
mov
sub
enter
clc
mov
or
pop
mov
ljmp
lahf
adc
sbb
std
test
cmpsl
cmpsb
jns
push
xchg
addb
aas
clc
jo
inc
add
xchg
jmp
gs
in
inc
arpl
loope
popf
sub
lea
repnz
sti
cmp
lcall
inc
jns
mov
fcomps
movsl
loop
insb
testl
ja
and
pop
fdivs
jae
add
push
cltd
xchg
xor
cmp
repz
repz
and
imul
cld
adc
insb
sbb
push
lret
jne
adc
mov
xchg
xchg
and
cmpsb
dec
pop
xor
in
or
aad
arpl
daa
or
push
adc
roll
aas
out
pop
sbb
cli
dec
cld
lods
pusha
sub
test
mov
cmpsl
or
movsb
xor
adc
pop
adc
aam
scas
scas
das
shl
fnstenv
cmc
or
fisttpll
sbb
cwtl
js
cmp
xor
stc
push
mov
sti
jle
jl
fmul
out
shrl
add
out
lock
pushf
sbb
mov
adc
mov
call
inc
cmc
rclb
xor
or
jo
scas
sub
jno
mov
jp
xor
mov
int
push
jb
movsl
int3
stos
sbb
add
push
cmpsl
jbe
jbe
ret
jecxz
subl
sub
cmc
iret
pop
dec
sub
xor
inc
jnp
dec
jecxz
jp
add
mov
sub
sub
jno
push
jnp
dec
mov
test
dec
inc
lcall
pop
iret
jno
nop
out
or
and
sbb
shrl
idivl
dec
lds
push
sbb
sub
or
movsl
cli
mov
sub
shlb
insl
jne
fcoms
rorl
and
ret
je
in
lret
sbb
jns
mov
lods
cld
mov
shl
mov
pushf
jnp
adc
or
cmp
push
push
pminub
push
arpl
stc
push
int
stos
fstps
test
dec
scas
pusha
mov
cli
rclb
lcall
dec
cld
jl
push
in
jmp
lcall
push
ja
divb
repz
pop
mov
insl
add
leave
shrl
jmp
and
imul
ret
jle
jmp
jge
ret
orl
push
pop
lahf
pop
push
xor
cmc
mov
adc
push
pop
shlb
test
inc
add
lock
sbb
and
cmp
inc
dec
jl
lods
pop
sbb
movsb
mov
mov
sbb
push
dec
clc
insl
negb
sahf
fidivrs
adc
mov
fs
sahf
shrl
lea
sub
jge
adc
sbb
cmp
dec
cmpsl
sub
ljmp
xchg
inc
test
dec
add
cmp
add
add
inc
adc
xchg
cltd
push
lret
xor
ss
jge
imul
loope
dec
push
adc
cltd
mov
lods
mov
cld
scas
or
data16
cli
xchg
or
push
fs
incl
or
jno
push
mov
movsb
and
ja
in
sub
xor
std
outsl
and
cmp
jecxz
mov
pop
pushf
mov
or
mov
and
stc
sub
in
bound
lret
test
mov
mov
pop
add
outsl
jo
xorl
int
sahf
cli
sub
mov
aaa
and
jle
lret
mov
and
jge
lods
jl
test
je
pop
fs
push
sbb
add
mov
mov
popa
or
pop
inc
setp
stos
loopne
aaa
jmp
mov
lcall
jp
mov
call
add
add
movsl
jecxz
adc
sti
jp
fs
ljmp
test
shr
add
push
mov
cmp
cmp
mov
xchg
lds
jae
jp
dec
cmp
jb
ret
decl
js
clc
mov
ljmp
xchg
call
inc
jmp
dec
movsl
sbb
out
ljmp
andb
ss
flds
xchg
or
sti
jnp
lret
push
popa
aad
jno
xor
dec
cld
xor
lea
push
xor
imul
dec
stos
mov
adc
cmp
adc
xchg
add
sbbb
sub
outsb
in
xchg
roll
idiv
jns
mov
and
mov
cmp
xchg
mov
push
sbb
pop
repz
dec
aaa
insl
ret
pushf
out
cmpsl
mov
test
sub
stos
cltd
adc
adc
or
xchg
shll
fstpt
and
cmc
add
das
iret
jnp
pop
jbe
jecxz
or
inc
mov
outsl
rclb
scas
int3
pushf
movaps
cmpsl
in
mov
in
in
xor
mov
jecxz
dec
sub
dec
insb
stos
cmp
nop
add
jb
les
mov
popa
add
icebp
stos
sub
lret
xchg
xchg
pop
xor
inc
sub
dec
sbb
push
test
rcl
jo
xchg
cmp
loopne
notl
rcrl
and
daa
adc
and
push
xchg
xor
inc
aas
call
sbb
cmp
lods
mov
pop
and
mov
and
xchg
dec
or
sbb
jb
and
idivl
jns
imul
jge
adc
fisubl
xchg
adc
lea
push
rcrl
pop
addl
or
pop
shll
cmp
cmp
sub
pusha
mov
sub
shlb
scas
call
scas
mov
jae
fsub
mov
sub
ret
cmp
add
int3
xchg
inc
mov
out
fisubl
cmp
pop
ja
jae
xchg
fwait
jl
xchg
insb
xorl
dec
and
test
test
add
adc
jns
inc
insl
cmc
dec
daa
lods
cli
pop
mov
dec
lret
inc
mov
pop
sti
cmp
mov
mov
mov
jo
les
xchg
mov
and
cmp
and
ror
and
stos
aas
jbe
cmpsl
mov
pop
jg
cmp
cld
mov
pop
lods
sbb
push
mov
movsb
sub
ds
ret
pop
inc
cs
inc
xchg
ljmp
and
fiaddl
mov
xor
sub
sbb
rclb
push
sub
ds
push
jo
addl
popf
sub
test
clc
std
adc
xor
and
rcrb
arpl
inc
jl
js
pop
mov
arpl
sub
sti
xor
in
test
cli
inc
std
sbb
xor
push
das
loope
cli
jno
add
lods
ss
mov
jecxz
loope
push
shlb
mov
or
mov
icebp
scas
rorl
call
shll
cmpsl
fwait
jecxz
or
and
mov
adc
mov
dec
jne
shlb
call
jne
popf
inc
xor
gs
add
enter
test
mov
test
pop
pop
aam
pslld
jbe
or
push
ja
fs
add
add
cld
cmp
sub
fdivs
mov
rol
shll
lret
adc
insb
pop
xchg
dec
icebp
addr16
mov
jb
inc
iret
cmp
repz
jno
inc
inc
icebp
mov
fsubr
cwtl
arpl
jle
mov
xor
fistl
jae
adc
insl
shlb
pop
andb
movsb
cli
loopne
jmp
sbb
addr16
je
mov
sub
push
stos
push
add
insl
jbe
sbb
xchg
and
ror
push
pusha
stos
stos
inc
or
mov
push
rcrl
cmp
in
int
pop
imul
in
negl
cmp
mov
lret
push
pop
lea
andb
pushl
cmp
sub
add
loopne
popa
sbbl
enter
sub
and
sbb
cwtl
push
call
cmp
ljmp
jp
dec
xchg
sahf
fcomi
add
imul
ret
outsl
mov
clc
or
leave
stos
mov
rcrb
sbb
jl
sarb
iret
rcr
mov
hlt
inc
popf
push
and
fmuls
pop
jns
dec
mov
jecxz
test
mov
jmp
cwtl
or
xor
pmullw
push
je
test
cmp
add
pop
pop
xchg
es
adc
push
ljmp
mov
cltd
mov
cmp
ds
aaa
xchg
scas
pop
outsb
addr16
bound
into
push
inc
adc
pop
jb
fldenv
ret
pop
dec
stos
lret
inc
rep
mov
pusha
add
lods
push
std
lds
jnp
inc
cmc
loope
rorl
popf
out
sub
rep
in
fidivl
shr
imul
or
not
add
mov
push
and
xor
lret
aad
mov
and
mov
std
stos
xor
sbb
add
ss
jg
aas
pusha
sub
cmp
sub
fimull
or
sbb
push
sbb
jns
jno
mov
cmp
dec
jg
aaa
dec
inc
dec
cmp
pop
mov
fadd
pop
cpuid
adc
add
scas
and
repz
pop
loopne
push
int
pop
mov
stc
cmpsb
mov
aam
fs
insl
sub
cltd
repnz
jg
push
in
nop
aam
test
in
xchg
push
inc
bound
insb
shlb
out
add
imul
test
pop
cmp
mov
xchg
xchg
mov
and
pop
xlat
repnz
dec
scas
ret
hlt
mov
into
out
mov
inc
in
lea
jne
dec
mov
gs
adc
xor
lret
pop
pop
cs
xlat
orl
cmpsl
xchg
pop
sbb
bound
inc
nop
pop
jecxz
dec
insl
loop
mov
mov
int3
or
lret
mov
push
xor
push
aam
xchg
iret
flds
mov
pop
movsl
inc
aaa
loop
ret
in
dec
pop
mov
xor
testb
dec
cmp
es
jge
cwtl
jp
test
mov
sub
ljmp
fsts
popf
out
inc
test
adc
sub
mov
adc
inc
stos
lods
arpl
push
xchg
push
cmp
lret
jbe
lea
out
inc
inc
lret
push
xor
call
cmp
enter
add
sti
in
add
cmp
cmpsb
lcall
aam
call
sbbl
push
and
mov
cmp
ret
test
ret
pop
popf
mov
loopne
cmpsb
ljmp
push
mov
mov
dec
out
mov
lahf
imul
push
jle,pt
test
fiadds
rorl
mov
sti
ds
repnz
push
loop
sub
push
les
jb
or
out
pop
cli
or
adc
cs
jns
gs
stos
or
out
fcmovnb
mov
sbb
push
ret
cmpsb
ljmp
clc
mov
in
test
inc
or
jno
iret
aam
push
in
stos
shlb
mov
xchg
dec
pop
cltd
jg
xchg
mov
pusha
loopne
popa
add
push
pop
addr16
les
es
dec
adc
test
lret
out
xchg
add
bswap
mov
fcompl
shlb
cmpsb
sub
movsb
push
add
loopne
movsl
jge
or
in
inc
sub
adc
adc
imul
jae
imul
cmp
testl
sqrtps
shlb
xchg
aad
push
test
out
ljmp
pusha
cmpb
push
pop
fcom
repz
cmp
das
jae
jbe
adc
cmc
inc
fs
push
mov
mul
xor
inc
dec
out
mov
cwtl
inc
incb
sub
sub
sub
loop
stos
pop
xchg
shlb
adcb
and
xor
int
jns
mov
ds
mov
and
add
inc
mov
call
jmp
pop
stos
fucomi
inc
inc
cmp
xchg
jle
pop
or
shrb
movsl
std
cmp
push
call
loop
nop
rcl
loope
es
mov
mov
in
xchg
adc
inc
xchg
mov
test
test
pop
rep
imul
pop
mov
cli
xor
aas
aam
push
adc
ret
loopne
mov
fs
loope
daa
pushf
mov
mov
aad
ret
mov
pop
iret
dec
xchg
pop
xlat
mov
sbb
sub
bound
cmp
and
inc
fsubrl
sub
mov
xlat
mov
mov
pop
inc
insb
inc
inc
mov
roll
xlat
stos
xchg
out
or
test
sbb
jbe
pop
loopne
xchg
cmp
or
leave
mov
inc
cmc
xor
inc
sub
mov
mov
jo
and
and
or
xchg
push
fisubrs
push
jl
call
outsl
adc
sub
arpl
ret
xor
arpl
sub
inc
popa
mov
sbbb
mov
out
test
repz
cmp
mov
cld
sbb
mov
mov
add
push
test
stos
dec
push
pop
or
cmp
hlt
jge
enter
fnsave
divl
mov
shlb
ja
lock
add
adc
add
out
inc
loop
cmp
das
sub
outsb
cmp
ret
stos
and
pop
jbe
mov
jae
xor
push
femms
sarb
push
lahf
adc
fs
jb
push
mov
cmp
pop
inc
insl
inc
ret
ja
fdivl
pop
or
xchg
or
jge
pop
mov
push
dec
jns
or
aam
cli
dec
imul
sub
push
mov
fyl2x
sbb
mov
dec
cmp
cmp
in
sarl
movsb
sbb
xchg
xchg
mulps
cli
icebp
sub
call
pop
dec
es
inc
test
aaa
fs
push
adc
sub
mov
aad
xchg
xor
outsb
adc
jp
loop
inc
push
pop
or
jo
jo
pop
lret
insl
jbe
mov
dec
jbe
sarb
cwtl
imul
call
sar
or
pop
das
test
lcall
jecxz
push
cmp
pop
push
inc
aaa
pop
mov
mov
or
inc
push
lds
sarl
jl
add
repz
insl
sbb
mov
push
or
aad
sarl
or
and
sbb
dec
lret
sbb
imul
call
inc
lret
loope
enter
inc
aas
inc
mov
fs
out
pop
and
jb
int3
xor
dec
inc
mov
xor
ret
call
inc
add
jecxz
loope
push
les
test
jae
xor
notl
jne
jo
push
clc
outsl
mov
or
jmp
negb
cli
and
cltd
stos
push
pop
inc
cmp
xchg
das
test
jno
inc
popa
pop
jl
lods
sbb
dec
dec
aad
fucomip
and
xor
mov
cli
xchg
in
popa
add
pop
ljmp
mov
push
out
mov
in
sub
insl
cmp
mov
popa
pop
out
rcrb
jg
insl
push
add
push
inc
ss
sbb
sti
push
sub
xchg
repz
das
pop
aaa
int
ss
xor
adc
hlt
mov
xor
dec
in
lahf
imul
mov
xchg
bound
movsb
js
into
fimuls
insl
xlat
bound
push
push
in
add
dec
mov
pop
pop
jmp
sbb
mov
jnp
xor
hlt
mov
or
aam
push
jge
sub
jg
cmc
mov
fnsave
int3
or
addl
pop
iret
std
mov
lar
mov
sahf
jns
dec
repnz
mov
inc
addr16
sub
lret
adc
int3
push
dec
rcrb
out
mov
and
das
jge
lcall
loope
into
lea
jl
pop
mov
and
xchg
in
negb
push
xchg
push
mov
data16
cld
pop
dec
sar
jb
jg
and
dec
mov
mov
cmpsl
mov
jecxz
cmp
xchg
pop
fisubs
ret
sti
pop
mov
mov
mov
push
test
inc
call
mov
cmp
push
mov
push
and
out
leave
mov
and
pop
ret
adc
iret
pushf
dec
jle
hlt
addl
cmp
cmp
inc
xchg
insl
cmp
or
mov
push
test
out
jge
adc
lahf
cmpsl
fistpll
mov
call
shrb
sub
mov
pop
sub
in
iret
iretw
pushf
dec
shlb
fidivs
pop
and
jns
lock
clc
cmc
lahf
sbb
mov
jge
sbb
addr16
test
jp
sahf
sbb
hlt
or
inc
dec
ds
addl
stc
or
leave
adc
cmp
cmpb
imul
das
cmc
mov
mov
or
add
pop
jmp
jle
xlat
and
inc
lods
jno
mov
push
lcall
popa
lea
jg
lds
mov
fucom
rorb
pop
scas
xor
mov
push
fs
int
repz
inc
pop
xchg
movsb
into
inc
cmp
adc
dec
sub
mov
das
sahf
xchg
repnz
cltd
rorl
mov
fidivl
xchg
jle
or
inc
mov
icebp
jnp
push
jmp
addr16
adc
mov
loopne
popf
cmpsl
cmpsb
sub
lea
jnp
pop
push
icebp
push
movsl
ret
and
mov
mov
push
xchg
enter
int3
clc
or
ret
pusha
mov
dec
pop
inc
push
fs
test
mov
out
mov
mov
push
and
lock
pop
jle
sub
lock
dec
and
jmp
stos
in
loope
pushf
dec
loop
mov
cli
aas
leave
and
imul
setno
sub
stos
loop
aam
in
mov
and
shr
lret
xchg
mov
out
pop
test
jns
push
pop
cmp
cmpsl
or
test
sbb
rorl
in
push
mov
mov
les
imul
out
sti
mov
xchg
mov
ret
add
ficoms
sbb
xorl
xchg
insb
in
insl
inc
cmp
jge
adc
hlt
push
lock
xor
xor
cld
adc
lret
jmp
mov
stc
fldt
ss
mov
mov
jp
outsl
or
dec
movsb
push
mov
jl
lds
mov
frstor
mov
add
xor
jp
sbbl
imul
hlt
adc
push
test
mov
cld
lret
or
ret
jae
push
cmp
mov
call
jae
fstpl
mov
mov
popa
dec
stos
xor
or
xchg
ljmp
dec
lret
popf
ss
mov
jb
push
inc
push
xor
testl
daa
mov
cmp
pushf
test
scas
push
pop
inc
das
rclb
aam
lock
int3
ja
call
jg
cmpsl
dec
ds
enter
popa
mov
jmp
cltd
je
add
push
adc
sub
lret
jo
popf
xchg
jno
psllw
shrb
call
fisttps
sub
shl
mov
jnp
aaa
movsl
out
add
or
fmull
nop
xlat
jp
inc
push
sahf
ljmp
imul
push
xor
mov
mov
xchg
mulb
adc
in
out
movsl
and
out
sbb
inc
mov
sti
mov
push
imul
cmp
or
lahf
cmp
mov
inc
adc
arpl
xor
jae
inc
shl
mov
in
xor
and
loope
dec
shrb
push
pusha
cmpb
sub
dec
sahf
or
mov
roll
push
daa
push
and
call
aas
push
cmp
pop
xchg
dec
cmc
adc
xlat
jo
lret
pop
imull
push
add
and
pop
push
jmp
iret
xor
lock
fsts
jb
mov
pop
outsb
or
jb
out
popf
mov
xchg
mov
leave
out
lret
push
jnp
daa
xchg
mov
push
push
cmp
sub
clc
out
shrb
leave
and
xchg
pop
jne
mov
add
inc
cmp
and
xchg
mov
outsb
mov
dec
cmp
inc
or
gs
cmp
fadd
xor
adc
test
push
and
inc
jns
add
push
es
sub
xchg
js
dec
mov
movsb
icebp
or
ljmp
mov
sub
jl
pushf
or
pop
outsl
mov
stc
cltd
fmul
popa
in
and
mov
pop
into
nop
stos
and
lcall
add
mov
and
jno
in
out
pop
dec
test
jecxz
mov
in
inc
cmpsb
mov
cmp
inc
add
icebp
jno
jmp
sbb
add
out
or
push
dec
punpckldq
push
mov
mov
pop
shr
xor
dec
dec
testl
dec
adc
dec
or
outsl
data16
icebp
add
jnp
pop
adc
xchg
push
xchg
lods
mov
sub
cmc
je
inc
xor
enter
bound
push
mul
dec
sub
insb
xchg
std
sbb
pop
aaa
mov
ja
xlat
mulps
pusha
xor
mov
or
xchg
lods
out
call
jo
mov
mov
cltd
sahf
das
shlb
sbb
test
inc
jp
stos
stc
dec
clc
and
sbb
jecxz
repz
fsubrl
push
sahf
out
fstpt
gs
clc
and
adc
mov
imul
les
push
repnz
jbe
pop
xchg
sub
xlat
int
lret
dec
pop
pushf
jnp
ds
pop
jge
cmpsb
add
mov
or
cmp
jno
repnz
lahf
out
sub
pop
cmp
lods
mov
dec
push
cmp
push
mov
pop
xchg
mov
outsl
jmp
lcall
fwait
sbb
ja
sbb
xchg
mov
push
inc
les
jbe
nop
or
insl
mov
hlt
pop
jge
adc
xchg
cld
scas
or
and
gs
es
add
fwait
mov
xchg
mov
js
mov
cmp
and
insl
mov
adc
push
sti
jmpw
movsl
xchg
adc
out
test
push
add
xor
bound
jns
in
mov
adc
rcll
imul
fnstcw
adc
repz
and
xchg
fldl
jg
and
notl
cli
jmp
cmpb
clc
sbb
push
cs
scas
sub
cwtl
and
sbb
iret
xorb
and
clc
scas
jbe
pushf
xor
jmp
mov
ficomps
sti
push
nop
cmpsl
adc
cmpsl
cli
pop
inc
subb
inc
shlb
rcrl
jae
insl
dec
jecxz
daa
sarb
idivl
add
fwait
and
cwtl
sub
push
in
cld
xor
les
icebp
fisubrl
xchg
into
repz
dec
js
mov
sub
loopne
lcall
in
sbb
enter
loope
aaa
dec
xor
loopne
add
lret
out
js
cmp
mov
imull
repnz
mov
pop
push
cld
bound
aam
xlat
push
insb
adc
cmp
and
popl
andb
or
lret
cmp
lock
pop
popf
or
push
inc
addr16
fs
das
and
sbb
sbb
adc
mov
pop
ret
stos
das
sub
repz
pop
popa
fs
push
sub
add
cli
inc
arpl
imul
test
ret
in
inc
sub
add
pop
outsb
out
or
lods
mov
je
mov
dec
testb
decl
cmp
jae
xor
adc
jl,pn
jae
push
ret
sub
scas
and
dec
push
fistpl
push
pop
fsubp
stc
cmpsb
mov
cwtl
int3
es
mov
sub
loop
push
nop
repnz
lods
xchg
int3
cmc
iret
pop
nop
add
push
movb
popa
outsb
push
movsb
movsl
mov
jnp
sbb
adcl
lret
or
jmp
ret
mov
mov
std
test
xor
pop
sti
mov
cli
ror
adc
lock
mov
iret
cmpsb
xor
scas
nop
jl
in
lea
cwtl
inc
icebp
dec
push
mov
jb
push
test
sbb
xchg
lods
jl
and
faddl
fs
sub
jmp
dec
movsl
lods
int3
int3
shrb
inc
adc
pop
jne
sbb
ret
cmp
sbb
sahf
lods
xor
jbe
into
jge
fcoms
insl
xor
nop
aas
dec
push
and
aad
icebp
xor
pop
xchg
call
jecxz
add
in
pop
xor
inc
push
mov
mov
mov
clc
jo
jge
ret
iret
sub
jp
push
clc
ljmp
mov
out
fabs
sub
fnstcw
lods
jbe
rclb
movsb
push
push
lahf
add
jbe
inc
ret
test
aaa
andb
pop
add
rcrb
jmp
mov
and
movsl
mov
stos
adc
fld
push
jp
jo
cs
jecxz
lods
leave
and
lcall
dec
push
cli
pusha
pop
sub
bound
sbb
or
mov
mov
adcl
mov
push
ret
push
loopne
pop
cmp
mov
in
enter
cmp
sub
xchg
jb
xchg
je
push
cmp
neg
dec
jnp
lea
imul
xor
lock
mov
xchg
popa
xchg
popl
bound
xchg
push
push
mov
loope
mov
leave
in
jp
lret
mov
lahf
lcall
inc
loopne
mov
dec
jg
or
lods
xor
xchg
mov
jge
rorb
and
inc
outsl
addr16
xor
jge
xchg
int3
movsl
dec
stc
lahf
push
pop
or
mov
stos
je
nop
lret
clc
adc
adc
mov
dec
shll
push
pop
xchg
jecxz
lahf
fadd
adc
mov
adc
mov
pop
push
fwait
push
addr16
aas
movsl
xor
sub
int
cmp
xchg
fisttpl
test
or
and
sbb
jmp
mov
and
jecxz
in
cltd
and
mov
sbb
sbb
inc
pushf
adc
dec
je
mov
dec
push
mov
xchg
sti
jg
pushf
iret
cmp
out
sub
arpl
xor
clc
add
push
int
ja
lret
mov
mov
add
test
add
cld
ss
and
hlt
cmp
and
jmp
inc
icebp
xor
psubusw
sti
and
xchg
loop
mov
aam
inc
rcl
out
lods
movups
std
sbb
call
pop
je
xchg
sbb
out
test
bound
lret
out
sbb
sub
sub
addr16
xor
imul
or
cmp
ja
sahf
sub
xchg
pushl
movsb
xor
pop
dec
inc
xchg
jge
stos
push
sbb
jle
sub
mov
xchg
in
push
xchg
adc
mov
cmp
repz
cwtl
pushf
push
push
jmp
pop
fsubrp
mulb
cld
jmp
pop
nop
popa
mov
mov
sub
daa
loope
sub
icebp
xchg
lea
into
inc
cmpsl
ljmp
lds
dec
test
inc
repz
xchg
je
pop
pop
adc
jmp
in
sarl
outsl
lahf
xchg
lds
mov
dec
mov
mov
fnstcw
dec
dec
roll
ja
es
icebp
xlat
push
lock
jecxz
ds
or
lahf
aad
bound
faddl
add
sub
les
xorl
xor
adc
lretw
lret
mov
or
imul
xlat
mov
cli
and
icebp
xchg
cld
sbb
xchg
test
pop
add
push
mov
idivb
popa
or
iret
cmp
dec
mov
inc
push
mov
lods
pop
fldl
xor
popa
mov
jp
cmc
jae
idivb
inc
out
mov
je
mov
test
sbb
fdivr
xor
dec
mov
jns
ja
cmc
xchg
cs
pop
loope
jne
fcoml
int
pop
mov
jbe
repz
out
mov
dec
mov
fisubl
ror
xchg
xchg
push
ds
cmp
dec
mov
adc
popa
sbb
divb
jmp
fidivrs
popl
aas
nop
sahf
push
mov
aaa
icebp
push
shrb
fwait
pusha
mov
ss
mov
or
neg
and
sbb
orl
mov
xchg
sbb
cmpl
cmp
sbb
aas
pop
sub
xor
xchg
addr16
mov
push
out
add
notl
dec
cmpsb
das
push
lahf
sbb
or
sub
inc
push
dec
insl
arpl
cmpsl
pop
sti
test
inc
pop
cwtl
pop
rcl
aaa
popa
mov
sub
push
and
adc
mov
mov
dec
lcall
stc
js
mov
mov
ss
sbbl
std
adc
insl
inc
pop
loopne
ljmp
jle
rolb
mov
adcl
cmp
xor
addr16
dec
mov
ljmp
xchg
or
out
rcrl
leave
jle
pop
scas
sub
loop
adc
mov
mov
adc
inc
cmp
in
daa
test
mov
mov
test
aam
inc
ret
adc
insb
popl
mov
and
mov
adcl
mov
and
adc
fiaddl
lret
pop
xchg
jl
in
mov
cltd
sub
mov
cs
das
loop
xchg
pop
scas
mov
leave
mov
fcomp
xor
and
bound
or
mov
out
psubw
loope
pop
cltd
scas
outsb
lods
es
push
pop
shrl
pop
ucomiss
std
sub
cmp
sub
mov
adc
pop
jg
icebp
cmp
jb
inc
push
pop
cmpsl
add
aas
mov
mov
xchg
mov
add
push
outsl
outsl
repnz
ret
sbb
mov
adc
add
ljmp
xchg
jp
scas
out
pusha
push
lods
jo
cli
and
orb
adc
in
pop
pop
push
xor
fwait
lahf
or
mov
pop
pop
js
add
std
loopne
bound
aad
pusha
jne
inc
cmp
and
mov
loopne
mov
aam
cmp
xor
shrl
rclb
mov
fimull
push
push
loop
scas
push
ss
sbb
push
popf
imul
cmp
iret
pop
cs
aas
mov
mov
mov
xor
shll
out
addr16
add
mov
pusha
jno
jle
sbb
lea
or
movsb
push
js
xchg
adc
sub
pop
push
mov
dec
pop
mov
ljmp
ljmp
push
mov
arpl
aam
cli
fcomp
les
push
mov
push
inc
daa
and
std
xchg
pushf
sbb
cmp
int
dec
loopne
mov
pushf
out
mov
xor
or
xor
dec
shll
jmp
negl
pop
push
and
or
adc
xchg
rcr
leave
mov
lock
les
push
stos
in
mov
pop
mov
insb
mov
test
pop
push
sbb
mov
xchg
mov
pushf
rclb
add
stos
sbb
xor
in
cmp
pop
rolb
outsb
mov
in
add
jecxz
jge
jmp
xchg
cmpsl
xor
push
xchg
and
andps
pushf
cli
sub
pop
push
adc
fcompp
loope
mov
sti
inc
jge
xor
dec
xor
xchg
cli
mov
data16
sbb
stc
ds
xor
loope
push
or
xchg
cmp
cmp
mov
lret
or
cmp
fisttpll
dec
push
cmp
pop
jae
push
sub
mov
cltd
dec
lahf
mov
mov
push
sbb
ss
fs
xor
sbb
rcr
mov
in
mov
repnz
shll
dec
movsl
aas
dec
dec
xchg
mov
shlb
xchg
inc
sbb
sub
or
mov
popa
mov
lods
push
aam
fcompl
mov
jae
push
data16
or
push
sub
add
lds
cmp
addr16
mov
adc
sub
fcomps
test
or
divb
sub
sbbl
and
aas
movsl
gs
mov
cmp
outsb
add
cmp
sub
push
in
lods
jae
jg
andl
stc
fisubl
or
or
in
jns,pn
adc
filds
sbb
jl
push
xrstor
std
lahf
or
adc
cmpsl
jbe
dec
lods
loopne
jg
nop
ljmp
mov
mov
xchg
adc
mov
xchg
inc
adc
rorb
mov
out
test
mov
add
cmp
xchg
jne
cwtl
mov
rol
xchg
orl
or
lahf
mov
insl
addr16
in
scas
cli
add
or
imul
xor
je
inc
push
ja
test
ja
outsb
xor
negl
add
sub
add
mov
push
sub
jge
shl
inc
loope
adc
aaa
pushf
cwtl
icebp
push
aas
and
je
lea
adc
ficompl
std
pop
push
lock
inc
adc
insb
xor
xor
ja
jecxz
mov
lcall
jmp
mov
push
add
jl
cmp
and
xor
lea
push
cmp
push
and
repnz
les
xchg
rep
aaa
push
fildl
sub
mov
jl
ffree
sub
fisubrl
test
xchg
xor
cmc
rorl
xchg
sub
push
ror
push
repz
sbb
mov
mov
mov
jne
fsubrl
pop
sbb
and
aaa
xor
push
lret
stos
fbld
mov
inc
push
adc
in
cmp
sti
mov
pop
push
cmpsb
cmpl
out
comiss
popa
add
loop
xchg
mov
lock
lock
mov
ds
stc
cmp
imul
ret
sbb
sub
dec
out
xchg
insl
mov
out
dec
jns
mov
dec
je
inc
out
push
mov
cmpl
add
add
popa
int3
les
xchg
push
nop
sar
mov
jle
arpl
hlt
icebp
aaa
jle
mov
and
cmp
jnp
xchg
jg
xchg
aas
sbb
push
cmp
push
fstps
mov
cmp
fmull
shr
repz
pop
add
repnz
fs
push
pop
pusha
dec
pop
pop
movsb
and
out
stos
cs
jp
lret
repnz
incb
and
cmp
sbb
adc
test
je
jo
xchg
lock
inc
in
dec
sbb
or
dec
xor
ret
enter
jmp
ficompl
arpl
leave
scas
lea
in
push
mov
fisttps
and
addb
std
jae
jmp
pop
in
lock
push
int3
addr16
xchg
rorb
mov
jg
jnp
jp
push
scas
sbb
insb
div
cld
ljmp
inc
js
scas
xorb
jae
rcll
adc
jns
xlat
leave
push
scas
imull
vaddsubpd
loop
pop
test
aas
addr16
inc
jmp
popa
or
cltd
jnp
lret
add
mov
xchg
ror
sub
jae
pop
test
and
out
shrl
mov
insb
lods
cmpsl
scas
mov
loop
push
sarl
xor
adc
or
lret
sbb
negl
imulb
sub
dec
push
and
xor
sbb
test
ljmp
movsb
mov
xchg
and
shrl
movsb
ret
popa
fstpt
mov
xchg
sbb
xchg
test
xorb
push
cmpsb
mov
icebp
cmpsb
mov
mov
idivb
fnstsw
pop
push
jmp
sub
and
movsl
pop
ljmp
cmp
adc
outsl
arpl
jmp
into
outsb
sub
cltd
cltd
sbb
sbb
cmc
iret
pop
gs
scas
lods
stc
pushf
adc
cmp
jns
cs
or
repz
cmp
scas
push
push
icebp
pop
xchg
inc
jl
pop
xchg
pop
jno
xchg
jecxz
pop
cli
xchg
dec
js
or
cmp
ret
aas
and
lret
mov
out
out
or
and
sbb
dec
je
and
xchg
mov
jmp
cmp
shrb
outsl
adc
mov
in
xchg
movsl
jb
adc
lods
popf
mov
pop
push
mov
sahf
dec
fstpt
shrl
dec
add
movsb
js
push
iret
insb
popa
push
mov
lods
adc
or
loopne
mov
ret
mov
and
pop
adc
jg
jne
test
push
popf
and
push
jo
mov
xor
test
inc
addr16
cmp
mov
mov
push
pushf
shll
xor
outsb
sub
sti
mov
push
sti
pop
rcrl
fimuls
mov
stos
enter
push
xchg
push
mov
mov
xchg
adc
clc
addb
adcb
sbb
sahf
scas
mov
or
add
dec
shr
rcll
addr16
adc
add
xor
orl
pusha
int
jns
xor
out
data16
dec
sbb
and
rdtsc
test
xchg
cmpsb
mov
dec
mov
out
test
fisubrs
cwtl
ret
or
mov
lods
data16
push
mov
pop
aas
cld
mov
pop
fidivl
pushf
sub
xchg
mov
adc
xchg
pop
dec
imul
popa
push
fisubrs
lds
jnp
lods
adc
or
int
cli
leave
loop
or
fdivrs
xor
push
inc
lods
cld
aas
inc
stos
xchg
cmp
mov
mov
jne
and
flds
imul
jecxz
mov
jle
mov
fadds
lcall
into
adc
sahf
iret
cmp
sub
mov
jmp
movsl
int3
and
dec
fisubrs
call
push
mov
cmc
mov
adc
imul
stc
xchg
bswap
push
sub
into
ja
mov
push
scas
mov
dec
mov
mov
jnp
mov
xor
movsb
add
aam
mov
aam
lret
and
mov
add
pop
mov
incl
loope
mov
mov
mov
in
mov
push
fdiv
lods
call
rcrb
sbb
mov
xchg
push
popa
cmp
lcall
fs
loope
pop
xor
pop
pop
negb
insb
int3
sbbb
add
mov
inc
add
cld
test
lods
fwait
sarl
dec
mov
test
push
aam
cld
mov
jo
mov
push
add
xchg
lret
xchg
mov
out
lods
pop
imul
aam
int
pop
push
jbe
fdivr
ret
cmpsb
add
or
outsl
adc
icebp
or
into
mov
mov
inc
sub
in
or
mov
mov
out
xchg
jp
sub
mov
test
shll
xchg
lcall
xor
ficoml
xor
jbe
mov
mov
cmp
fwait
xchg
adc
fcom
das
mov
std
ss
std
xchg
sbb
jmp
sbb
xlat
cmp
add
cmp
push
xchg
or
test
mov
outsl
sub
mov
add
and
adc
fs
xchg
lds
mov
pop
or
dec
in
push
fnstenv
jo
push
cmc
cwtl
lods
das
gs
sub
repnz
hlt
xchg
jp
jne
mov
ljmp
jg
cld
adc
inc
xchg
mov
int3
popa
stc
sbb
addr16
notl
test
adc
into
pop
dec
ret
lcall
pop
es
jns
bound
leave
cmpsb
inc
adc
insl
addr16
sbb
jb
aaa
pop
mov
adc
mov
jl
sub
sbb
cmc
or
pop
inc
les
adc
les
mov
nop
mov
in
addr16
jecxz
fistps
push
cmp
stos
jl
shlb
lret
or
lds
xor
adc
jb
sbb
popf
hlt
frstor
stos
aad
and
adc
mov
cmp
sbb
je
aas
std
pop
imul
leave
fisubrl
es
mov
shlb
xor
and
sub
or
sahf
sub
loop
adcb
jg
add
psubd
adc
push
jge
lock
test
cmpb
add
jae
in
push
adc
cmpsl
shr
sub
cwtl
es
push
pusha
jp
mov
add
add
insl
ret
enter
jecxz
sbb
in
mov
or
imul
mov
rclb
movsb
enter
ss
cmp
call
pushf
mov
stc
test
and
or
mov
lahf
pop
sbb
adc
ljmp
mov
enter
cmp
in
mov
cld
inc
dec
in
sbb
mov
jg
add
ret
scas
mov
push
orl
sub
xchg
push
push
cmpsl
fisttpll
popa
daa
sarb
rclb
dec
xchg
xchg
fnstsw
leave
mov
mov
mov
jp
xchg
out
out
and
hlt
adc
xor
dec
sbb
ljmp
lea
push
pop
adc
and
cld
xor
imul
pushl
add
outsb
jle
cmpsb
in
lret
int3
push
ljmp
sub
adc
xor
sbb
out
aaa
and
push
imul
add
cmpsb
pop
out
dec
enter
xchg
jle
adc
nop
sbb
outsb
cmp
push
addr16
jle
jnp
scas
testb
or
jg
mov
sarb
mov
mov
and
or
cmp
test
repnz
iret
cwtl
jge
sub
addr16
loopne
aam
insb
inc
ret
sub
lret
in
jne
scas
or
or
movsb
xchg
mov
xchg
jle
in
add
rcrb
pusha
sub
outsl
sub
sti
xor
jb
scas
sbb
adcl
inc
mov
mov
jl
pop
dec
iret
pop
ds
jne
dec
xchg
xor
stc
push
hlt
pop
mov
jle
jnp
mov
test
dec
das
call
adc
es
jae
inc
fdivrs
mov
xor
mov
xchg
es
mov
and
mov
loopne
or
movsl
push
and
sahf
push
mov
mov
aad
sti
arpl
mov
push
push
pop
and
shlb
xchg
xor
out
pop
cmpsl
jns
das
dec
xorb
jecxz
inc
cld
js
data16
pushf
sub
and
dec
xchg
mov
push
pop
sub
push
popa
add
iret
jo
inc
sbb
xchg
leave
mov
and
jecxz
push
dec
lds
cmpsb
push
inc
sti
mov
cli
cmp
xor
mov
mov
mov
jo
cmp
aam
sub
or
stos
pmullw
xor
inc
inc
push
leave
das
mov
push
in
dec
loope
and
push
xchg
add
dec
cmp
cmc
cmp
add
ja
scas
repz
add
shrl
xchg
or
add
ljmp
fiaddl
loopne
or
insb
push
sub
or
lods
gs
cs
and
sbb
out
test
stos
rolb
mov
js
fstpt
cmp
pusha
xor
push
sbb
sti
push
addr16
notb
xchg
lea
pop
pop
lahf
cld
rclb
rcll
das
out
pop
aas
xchg
push
fisttps
mov
popf
scas
clc
inc
scas
fsub
lret
int
out
push
sarb
jae
dec
out
mov
push
insl
stc
loope
add
sub
mov
adc
xchg
pop
inc
xchg
xchg
xor
int3
aam
xor
notb
cmpsb
or
pop
push
xchg
or
jmp
dec
arpl
adc
xchg
cli
xchg
sti
das
push
cmp
add
test
add
test
jle
sahf
ret
jbe
or
xchg
rcr
in
dec
xchg
ror
lods
std
xchg
cwtl
jge
push
lock
mov
test
ret
call
inc
add
clc
cwtl
add
js
xchg
mov
xchg
or
leave
xor
enter
flds
jo
dec
jnp
cmp
cmpsl
stos
cmp
cmp
nop
jg
fidivs
outsl
pop
fisubrl
mov
cmc
pop
scas
inc
sub
enter
div
mov
adc
loop
mov
aad
pop
dec
xchg
jns
xchg
iret
mov
push
push
push
daa
fimull
jge
pop
inc
lcall
lahf
cmpsl
jbe
fcmovnbe
cmp
mov
in
jecxz
arpl
iret
into
sub
add
loope
or
fnsave
push
pop
adc
aad
dec
ljmp
or
adc
test
insl
mul
aam
xor
shr
adc
mov
sbb
bound
into
dec
adc
neg
cmpsl
or
aas
lcall
mov
mov
shlb
rorl
cwtl
mov
scas
mov
add
fildll
faddp
aaa
mov
inc
mov
js
jl
mov
jo
inc
push
mov
cmc
movsl
stos
mov
fcompl
or
dec
cmp
push
ljmp
lret
pushf
dec
push
rcll
sub
cltd
into
mov
imul
mov
mov
sbb
mov
stc
cmpsw
inc
nop
push
int
xor
loope
push
mov
scas
sbb
pop
or
or
mov
and
out
in
jle
outsl
xor
pop
push
hlt
test
xor
int3
js
add
ds
loopne
mov
pop
es
xchg
je
cwtl
stos
inc
xor
ficomps
xchg
outsb
popf
in
icebp
pop
fdivl
call
in
test
ja
hlt
inc
dec
adc
popa
sub
sbb
pop
fidivrs
push
xchg
insl
imul
adc
dec
mov
sbb
stc
xchg
and
xor
push
call
mov
cmp
and
in
mov
lods
into
loope
andb
lods
fnstsw
inc
in
and
rorl
cmc
test
inc
inc
sub
xchg
push
and
xor
andl
or
pop
in
icebp
sarl
dec
popa
xchg
pop
stc
mov
mov
sub
adc
jge
andl
cmp
and
loop
sbb
push
mov
xchg
push
push
rcrb
adc
aad
xchg
mov
push
rol
inc
in
mov
push
popl
push
rcrb
imul
shl
nop
push
rcl
bound
cmpsb
sahf
gs
jle
bnd
jno
cmpsl
or
sub
pusha
jne
je
dec
jl
rolb
sub
adc
push
jo
jns
xchg
xchg
mov
mov
dec
or
aas
mov
pop
sahf
inc
push
mov
mov
xchg
or
sub
jbe
push
jnp
in
test
dec
push
in
xchg
or
mov
cld
mov
jne
popf
testb
mov
mov
shll
jno
cmp
pop
inc
dec
ds
popf
mov
cmpsb
sbb
dec
dec
xor
or
jbe
xor
in
mov
lret
rclb
sub
jo
imul
pop
ja
dec
clc
and
mov
pop
aad
and
into
lods
jnp
ret
dec
add
es
scas
testl
in
xor
adc
xor
ret
aam
jl
mov
push
mov
mov
inc
and
jl
das
push
sub
mov
sub
pop
sub
mov
cmp
jae
pop
data16
adc
out
jne
xor
out
sahf
or
cmp
shrb
inc
into
fidivs
jmp
mov
stos
sub
aam
movsl
push
or
fldenv
enter
or
mov
popa
mov
mov
cmp
cmp
cs
pop
sahf
push
or
sbb
sbb
mov
jmp
ror
push
pop
out
adc
push
out
lret
push
lahf
inc
pop
jne
push
adc
pop
hlt
lds
fidivl
jle
push
xchg
jbe
add
mov
mov
mov
clc
pushf
xchg
fidivl
shl
mov
pop
push
les
or
add
adc
adc
scas
aaa
cmp
cmpsb
lock
and
cmc
outsl
movsl
cwtl
push
cmpsb
mov
add
or
pop
int3
dec
shrb
cld
add
push
ds
xor
mov
lods
notl
inc
rcr
inc
cwtl
pusha
fimull
push
pop
mov
xchg
pop
mov
pop
pop
jle
jb
mov
ss
stos
xchg
out
add
repnz
add
pop
mov
push
cli
fs
push
sub
inc
xlat
jge
jno
sub
add
and
rcrl
rol
sbb
fstl
negl
neg
loop
fiadds
sbb
inc
lcall
sbb
lds
shlb
sbb
adc
fcomip
and
add
std
cmpsb
cmp
movsb
out
push
pop
sub
xor
push
in
test
cmp
xchg
jecxz
pop
xchg
adc
ljmp
test
or
jo
cmp
out
push
fisubl
movsb
popa
add
jo
mov
cmp
xchg
cmp
lods
pop
sbb
lret
imul
adc
out
int3
les
jmp
decl
jb
jle
and
adc
into
mov
cltd
dec
cmp
add
jae
in
jle
loop
inc
cmpsb
leave
dec
clc
mov
mov
call
out
pusha
lods
cli
jbe
push
incl
jne
xchg
out
or
ja
or
sbb
mov
sahf
leave
push
das
mov
add
rolb
sub
xor
test
dec
loope
mov
out
sbb
outsb
mov
test
pop
mov
mov
ffreep
dec
xor
ss
mov
imul
adc
adc
xor
xchg
or
into
cmp
dec
push
dec
jmp
xchg
sub
in
sbb
adc
ja
negb
pop
mov
stc
pop
mov
shrb
imul
pop
stos
ret
jnp
fstpt
das
mov
sbbb
stc
dec
sub
xor
outsb
int3
scas
xchg
je
add
jmp
xrelease
dec
mov
sub
idivl
or
call
in
mov
in
add
mov
imul
scas
push
jg
adc
repnz
pop
sbb
mov
push
aas
xchg
xchg
mov
xchg
rclb
mov
and
mov
scas
pop
pop
lahf
bound
and
movsl
sbb
push
dec
inc
push
scas
stc
add
rorb
data16
loope
lret
je
mov
adc
push
lods
fadds
mov
stc
add
sti
pop
pop
stos
je
loop
enter
and
add
adc
mulb
aam
leave
es
dec
mov
notb
test
xor
cmp
mov
jl
sbb
shlb
cmp
jns
into
adc
icebp
rcll
in
xchg
mov
or
es
mov
cmpsl
mov
jg
xchg
cmp
jp
xor
pop
cmp
sahf
int3
cmc
add
cltd
mov
add
fldt
sbbl
sub
cmp
add
pop
mov
sub
cmp
sub
jp
jae
in
fistpll
in
leave
pop
fs
mov
aaa
push
mov
and
add
inc
movsb
notb
mov
and
add
push
xor
add
iret
mov
mov
xchg
mov
pop
cmpsb
xor
pusha
inc
pop
in
out
lret
lods
fbstp
shll
jo
jp
mov
fiaddl
mov
inc
das
shl
call
jne
push
iret
scas
jge
gs
bound
adc
scas
inc
ljmp
ffree
popf
push
mov
inc
jg
push
nop
int3
dec
jl
sti
and
lods
mov
sub
addr16
adc
jle
scas
imul
adc
or
jecxz
nop
jb
inc
dec
xchg
fstl
loope
out
cmpsl
jecxz
sbb
sbb
nop
and
nop
insb
sbb
adc
dec
imul
adc
cmpsb
mov
mov
addb
push
mov
dec
or
jno
cmp
push
std
cmp
fwait
xchg
jnp
push
pop
sbb
dec
int
pop
xchg
outsl
out
push
jecxz
and
in
lea
movsl
daa
ljmp
mov
jmp
stc
mov
inc
movsl
mov
mov
and
mov
pop
fdivrl
outsb
adc
push
or
push
or
sti
out
icebp
xchg
lock
fwait
xor
pop
add
push
and
pop
idivb
jne
movsb
adc
cmpsl
repnz
push
mov
and
int
jo
push
out
pop
xchg
xchg
bound
rcr
mov
sbb
imul
scas
lcall
jbe
lea
lods
movsl
jl
ret
in
gs
add
sahf
lock
adc
shll
jge
pop
cs
ficompl
data16
dec
and
xor
lea
imul
mov
int3
iret
adc
mov
gs
xchg
pop
out
cmp
out
adc
loop
aas
jle
insb
fldl
xlat
mov
jb
inc
adc
test
leave
jne
lds
cwtl
pop
mov
sti
mov
sub
xchg
push
adc
rcrb
adc
sbb
fdivs
push
stos
pop
mov
jmp
xchg
out
imul
dec
add
xchg
jne
adc
neg
out
mov
pop
mov
insl
test
cmp
mov
xor
out
in
sahf
pop
sbb
push
and
and
mov
adc
into
pop
aas
scas
add
push
int3
int3
dec
leave
test
int3
mov
sbbl
pop
xchg
in
add
pop
lods
enter
inc
xchg
cmpsl
mov
pop
test
outsl
movb
mov
jns
push
cmc
cmp
and
mov
addr16
mov
mov
icebp
add
or
xchg
sub
jnp
mov
daa
pop
and
sbb
inc
add
ror
cld
lret
dec
or
mov
jb
rolb
adc
insl
fadd
inc
push
mov
mov
push
cmp
sbb
pop
xor
rcrb
mov
dec
sarl
mov
push
sbb
sbb
xchg
in
fchs
push
xchg
flds
pop
dec
push
xchg
xchg
or
mov
cmpsb
pop
cwtl
call
div
sbb
sbb
test
hlt
jbe
imul
or
in
lahf
shrl
lret
imul
mov
and
mov
jnp
jae
push
test
fistps
jne
xchg
cmp
int3
mov
cld
pop
outsb
fstpt
leave
imul
das
sub
cmp
jnp
sbb
xor
xchg
subb
push
or
into
xor
flds
in
cli
aam
mov
inc
ror
lret
add
xor
sbb
mov
jecxz
fisttpll
stc
stc
movsl
cmp
cltd
sub
test
lods
lock
into
sub
jo
adc
mov
sti
sub
and
xor
arpl
mov
daa
aaa
jo
ret
out
xor
pushf
repz
jmp
xor
mov
push
mov
push
xchg
mov
inc
pop
out
pop
dec
outsl
fstl
pop
jle
pop
dec
pushf
nop
lret
fcomps
xlat
xchg
mov
mov
cmpl
loopne
xchg
aas
lods
push
or
mov
adc
addl
cmpl
pop
inc
dec
jno
je
ret
shlb
cmp
xlat
imul
mov
iret
js
xchg
pushf
jp
cmp
pop
movsl
sbb
xor
inc
jae
add
cli
rcl
jge
fldcw
inc
dec
pop
pop
mov
dec
pusha
pop
xor
sub
inc
add
ret
bswap
into
cmpsb
xlat
xchg
adc
mov
xchg
out
or
jb
mov
imul
and
xor
pop
adc
mov
aas
jp
inc
fsts
mov
addr16
xor
outsb
xchg
lods
cwtl
jge
or
scas
bound
scas
or
cmp
fiaddl
ja
rcrl
add
adc
stos
pop
jmp
jecxz
ret
sbb
lock
mov
cmpb
xlat
icebp
loop
ret
fcoms
std
test
mov
decl
aad
jns
cmp
push
dec
cmpsl
repz
mov
dec
adc
inc
jge
pop
lock
pushf
pop
sete
cltd
or
mov
addr16
hlt
xchg
sub
mov
mov
int
dec
call
es
push
adc
cltd
xor
decb
cld
sub
xchg
cmc
aas
jbe
or
mov
into
mov
scas
or
das
loope
pop
fisttps
jge
sti
imul
mov
xchg
push
leave
call
mov
insb
xchg
xorl
adc
call
push
loopne
addr16
fdivrl
xchg
xor
addb
push
xchg
cld
pop
in
lock
xchg
dec
push
push
jno
inc
je
dec
sbb
ljmp
shlb
cltd
jbe
pop
insb
fnstenv
iret
arpl
sub
call
push
rcrb
iret
mov
mov
aam
mov
push
dec
mov
dec
push
inc
mov
cmp
mov
or
push
movntps
jge
lock
mov
and
sub
sub
and
outsb
test
jmp
mov
scas
push
test
incl
mov
ret
push
not
inc
dec
int
mov
movsl
mov
int3
mov
jno
adc
push
insb
adcl
punpckhbw
notl
addl
fs
sub
repnz
sbb
sub
stc
jmp
jnp
pop
mov
fmull
inc
sub
mov
leave
ror
or
mov
sub
cmp
jo
mov
cmc
mov
mov
sub
cmp
xorb
lods
xchg
push
sbb
add
in
test
or
mov
jl,pt
popa
xor
adc
addr16
sarb
shr
mull
enter
js
inc
inc
test
fidivs
lods
inc
push
xor
into
mov
int
and
jno
add
loope
mov
cmp
dec
pop
push
xchg
xlat
arpl
idivl
ret
push
cwtl
xorb
dec
sub
out
lcall
lods
rolb
and
add
inc
fisubrl
mov
inc
sbb
arpl
add
lods
test
push
mov
jp
lcall
andl
aam
fs
mov
inc
andb
adc
push
xchg
loope
mov
sbb
jge
stc
push
or
mov
insb
or
test
lods
inc
push
dec
jbe
andl
outsl
out
mov
jno
add
lea
mov
sub
gs
cwtl
cli
pop
pusha
fwait
loopw
popa
mov
mov
stc
sbb
pushf
insl
push
sbbl
cmp
rolb
cwtl
lods
jae
add
or
mov
jecxz
xlat
add
outsl
insb
mov
fcoml
loop
sahf
add
out
in
adc
xor
sub
pop
push
jmp
xchg
cmp
or
push
push
lods
nop
pop
and
push
jbe
dec
fdivr
push
push
lods
aaa
adc
fimuls
dec
push
push
rorb
lods
push
push
lock
cmpsb
andl
movsb
adc
notb
pusha
hlt
lcall
out
xchg
lods
push
push
and
fnstcw
lcall
mov
shll
fwait
mov
je
add
xor
nop
xor
popl
fcmovb
xlat
mov
pop
mov
into
cmp
out
dec
xchg
or
scas
dec
lcall
inc
jb
lahf
les
sub
enter
push
sbb
sub
fdivp
mov
inc
rcll
push
das
loopne
push
ret
lods
push
test
divb
add
jno
mov
stc
jb
add
inc
adc
sbb
pop
mov
xor
cmp
in
inc
cwtl
int
loop
fbstp
rorl
jnp
cmp
movsl
mov
mov
pop
pop
frstor
jae
fidivs
xor
push
shlb
scas
sub
adc
pop
push
mov
out
outsl
incb
mov
daa
mov
mov
loopne
cli
dec
mov
jae
loope
shll
pop
sub
cmp
pop
flds
mov
push
jle
adc
sbb
push
testb
pop
pop
jle
mov
fs
jo
les
lds
fadds
lds
push
mov
ret
and
ds
iret
enter
call
mov
inc
push
push
nop
icebp
pop
sub
dec
loope
cmpl
insb
push
sti
js
in
push
popa
outsb
push
insl
and
mov
adc
sub
jae
push
loop
mov
mov
cmp
jecxz
xor
mov
xor
fwait
mov
arpl
adc
add
sahf
in
stc
xor
jle
push
mov
mov
sti
or
cmp
dec
dec
xlat
jl
cmpsb
adc
nop
fs
sbb
clc
daa
push
std
mov
or
fisubs
imul
mov
das
sti
lcall
sbb
sub
fldcw
adc
mov
inc
fs
pop
push
pusha
lods
jmp
sub
lods
inc
pop
xor
imul
push
popf
sarl
sti
rcrb
int
push
push
mov
lcall
jg
mov
sbb
subl
sub
push
ds
int3
stc
jo
or
pusha
adc
mov
leave
scas
mov
mov
xchg
ret
icebp
adc
lods
jno
adcb
lods
imul
outsb
inc
shrl
dec
pop
popa
xor
push
jns
aas
mov
out
jg
sbb
push
pop
jo
jno
and
jno
ljmp
lea
rorb
pop
mov
pop
les
sub
negl
ss
mov
xchg
cmp
jmp
mov
es
add
mov
xchg
jne
and
idivl
aaa
pop
into
les
pop
outsb
sahf
sub
or
dec
pop
and
shll
dec
mov
ret
jecxz
stc
in
clc
sbb
jb
or
sub
popa
leave
sbb
lock
mov
dec
lahf
adc
inc
mov
push
enter
es
out
pop
mov
adc
and
add
insb
push
lcall
pop
int
adc
out
push
sbb
lea
jb
test
jb
mov
fs
ficompl
mov
cmp
shlb
aaa
das
jecxz
decb
pop
xor
hlt
shlb
add
ret
xor
xor
and
icebp
cmp
mov
mov
xchg
jne
rol
mov
lahf
shr
inc
lods
pop
pop
enter
mov
mov
pop
fisttps
xor
wbinvd
adc
mov
mov
jle
cli
hlt
ret
fwait
cwtl
lcall
sbb
mov
xchg
ror
decb
aaa
xchg
mull
subb
das
push
loopne
sti
adc
arpl
push
adc
out
pop
lea
call
fcmovne
stc
lret
aaa
sbb
subl
dec
daa
sub
jmp
les
flds
adc
push
jl
jecxz
push
cmp
xchg
test
push
scas
pop
ss
ficomps
dec
lret
xchg
divb
test
jmp
adc
sub
imul
ds
roll
popa
xlat
popa
pop
pop
bound
mov
mov
inc
jae
lods
shll
xor
and
inc
push
add
in
xor
loope
cmpsb
rclb
jo
dec
cs
incl
xor
mov
adc
and
xchg
or
sbb
dec
mov
and
ds
push
add
cld
fwait
mov
adc
push
cltd
or
cs
or
and
insl
cmpsb
mov
insb
dec
xchg
push
sub
mov
xchg
inc
repnz
loopne
mov
leave
repnz
cmp
in
enter
test
mov
add
cmp
cmc
ds
mov
lahf
inc
adc
sub
push
add
lock
mov
jno
pop
mov
mov
fisubrl
int3
push
sbb
and
jo
arpl
jb
hlt
inc
sbb
mov
push
cltd
adc
js
cmp
movsl
aad
cmpsl
stos
or
pop
lock
add
push
or
adc
dec
inc
loop
push
mov
dec
int3
xor
movsb
les
shlb
aam
inc
jmp
sbb
sub
sti
inc
and
xor
je
ds
dec
or
repz
xchg
outsl
sbbb
cmpsl
cmpsl
pusha
adc
pop
dec
mov
adc
and
jne
pop
push
mov
clc
inc
mov
outsb
xlat
add
jecxz
adc
fstpt
sbb
jmp
mov
push
sarl
pop
pop
popf
stos
clc
aaa
or
jg
addl
fs
fsub
dec
fnstcw
es
mov
inc
add
imul
orl
fwait
cltd
inc
mov
jnp
cmp
repz
xchg
loope
icebp
lods
lea
lods
cld
inc
test
xchg
xor
aaa
dec
inc
je
les
in
dec
mov
mov
mov
data16
popf
mov
into
pop
movsl
cltd
mov
push
xchg
cwtl
test
push
negb
filds
jmp
testb
dec
add
push
add
in
scas
xor
lret
fsubrp
adc
push
gs
pop
cmp
mov
lods
mov
or
xchg
nop
mov
jnp
lds
adc
inc
fistpll
push
pop
in
sbb
pop
mov
xor
dec
adc
in
repnz
mov
inc
lret
outsl
notb
adc
stc
outsb
movsl
shl
pop
xchg
jnp
mov
inc
arpl
ficompl
inc
sbb
or
enter
inc
faddl
jno
add
inc
fs
in
jl
mov
dec
mov
mov
and
inc
mov
divl
popf
push
adc
fs
pusha
scas
test
jne
jmp
adc
shrl
pusha
movsl
lds
out
fildll
pushf
mov
out
bound
xchg
mov
jle
test
push
outsl
pop
mov
imul
ret
div
push
add
aas
push
mov
lock
xchg
rcrl
in
mov
cli
repz
lods
loopne
dec
test
divb
neg
pop
xor
xor
xor
nop
out
sub
mov
inc
adc
mov
loop
in
and
dec
pop
jecxz
movsl
sub
adc
aas
inc
pop
add
daa
sbb
adc
fs
lock
loope
pop
inc
push
pop
add
out
int
popf
int3
push
sahf
shll
sub
dec
lods
lea
loope
in
loopne
or
shlb
mov
cmp
stos
fdiv
add
or
mov
imul
mov
test
mov
sub
outsl
inc
push
mov
addr16
pop
sub
mov
fcomi
in
fmuls
mov
cwtl
fldt
loope
test
inc
pop
and
dec
mov
jo
mov
inc
push
sub
shrl
inc
cs
in
or
in
pop
mov
pop
jge
outsl
cltd
inc
movsb
gs
push
in
dec
adc
mov
xchg
xchg
xor
and
cmp
pop
loop
xchg
shll
xor
lods
push
adc
ds
pusha
lcall
rcl
mov
mov
lcall
or
dec
adc
daa
pop
jmp
aas
cmp
jge
rcll
shr
ljmp
xchg
int
mov
xlat
in
out
jmp
dec
inc
pop
jae
or
loopne
decb
test
arpl
neg
push
fcmovnb
in
fadds
or
mov
and
jno
push
mov
jnp
test
stos
ja
adc
jecxz
insl
jno
sbb
push
sub
and
int3
lea
in
push
mov
cltd
jo
daa
fists
das
inc
sbb
cmp
sub
mov
add
fwait
dec
je
xchg
ss
insb
into
test
das
imul
cmpsl
inc
mov
icebp
dec
jne
add
gs
je
mov
in
push
movsl
fiaddl
xchg
mov
rclb
bound
lea
cs
push
aam
inc
sub
and
mov
sub
inc
shll
pop
push
and
int
roll
xchg
cmpsl
sub
insb
xchg
dec
ljmp
push
dec
scas
or
lds
xor
xchg
andb
mov
cmp
movsw
mov
and
stos
mov
and
in
ljmp
lock
mov
pop
in
jecxz
inc
push
dec
shll
ja
inc
and
jo
or
stc
or
loopne
push
imul
cmpsl
xchg
push
mov
je
pop
loope
xor
mov
push
push
repnz
test
jne
xorl
cltd
jp
sahf
imul
mov
push
push
mull
push
stc
in
push
mov
mov
jb
pushf
jno
mov
mov
loopne
mov
mov
mov
shll
cld
add
inc
arpl
ljmp
mov
add
data16
inc
adc
adc
push
xor
pop
sbb
arpl
cmp
jno
enter
lret
sahf
outsl
xchg
popa
imul
cmp
jne
pop
jne
push
jecxz
stos
xor
in
cmp
add
outsl
lock
jg
fldl
or
sbb
cs
mov
movsb
outsb
jecxz
in
or
popf
scas
mov
jp
rorb
ret
adc
jmp
scas
mov
je
loop
mov
mov
mov
shrb
or
sbb
xchg
or
mov
aas
fcoms
mov
sub
sbbl
pop
sub
xor
xchg
add
lret
sub
mov
fstps
inc
jnp
adc
gs
push
shll
push
cmp
push
sbb
repnz
add
cmp
fistps
mov
mov
and
fistpll
pop
nop
ret
sbb
aas
pop
in
nop
sbb
es
mov
mov
call
dec
xor
dec
push
dec
pop
jle
push
dec
std
xchg
out
cltd
pop
push
inc
arpl
sbb
mov
das
mov
cli
nop
cli
adc
jp
mov
pushf
jns
sub
leave
push
push
xor
clc
mov
fs
jmp
jl
sub
mov
jae
stos
divl
dec
jle
ret
notb
cmp
push
add
add
push
xchg
enter
shrl
add
mov
repnz
xor
mov
cwtl
flds
mov
pusha
add
out
fwait
mov
popf
rcl
insl
icebp
dec
push
test
stos
pushf
xor
jae
sahf
dec
or
je
sti
stc
in
shll
mov
lret
fcmovbe
out
movsb
adc
jg
ss
mov
mov
push
jno
out
pop
in
scas
jp
xchg
mov
cld
std
jl
lret
jnp
sub
scas
cwtl
inc
rcrl
jecxz
je
dec
adc
adc
test
outsb
mov
int3
and
and
pop
cmc
inc
push
lret
jmp
push
dec
imul
mov
mov
sbb
dec
push
data16
push
jae
nop
cmpsl
nop
imul
stc
add
mov
add
xor
jnp
push
fisubs
mov
and
cmpsl
mov
nop
fdivrs
sahf
pop
sbb
fists
std
dec
lods
mov
ss
popa
or
add
xchg
movsl
cmpsl
in
mov
jne
fdivs
inc
fstpt
pop
push
sbbb
cmp
scas
adc
insb
inc
inc
jg
xor
inc
pop
int3
jecxz
clc
ja
mov
cmp
les
scas
cld
dec
addr16
loope
jge
movsb
or
xor
sub
sarb
fisttpll
andb
ret
pop
dec
cmpsl
cwtl
jae
out
inc
xchg
outsb
lea
inc
push
jp
and
pop
mov
xor
sbb
adc
add
leave
cmpsl
mov
jge
inc
cld
xchg
insl
sahf
gs
arpl
mov
xchg
in
mov
mov
enter
dec
in
pop
repnz
mov
cmp
pop
lahf
aas
sub
clc
sbb
cwtl
xor
outsb
add
adc
les
or
leave
cmp
stc
xchg
aam
dec
add
jb
jo
int3
mov
mov
iret
xchg
add
or
ficompl
call
mov
ror
jecxz
dec
mov
and
pop
shll
push
icebp
sti
push
dec
mov
inc
mov
sub
jno
repz
loop
and
stc
mov
pop
adc
adc
sub
dec
loop
xchg
dec
insl
push
jge
jle
hlt
push
jbe
mov
pop
loop
add
call
pop
xchg
and
dec
pop
sbb
add
mov
in
ror
and
shlb
adc
int3
xor
test
mov
mov
and
out
test
ds
mov
pop
and
les
js
divl
push
xchg
ret
jae
loop
xor
mov
dec
ss
je
test
mov
jg
aaa
mov
out
or
mov
sbb
cmp
addr16
pop
sti
loop
sbb
push
sub
mov
xchg
mov
jle
sbb
mov
rolb
mov
adc
xchg
outsl
fsubs
jbe
dec
in
arpl
in
leave
out
pop
mov
pop
lock
dec
cld
lret
fistpll
sub
jge
jmp
cli
js
inc
mov
icebp
sbb
xor
cld
xchg
test
add
insl
shl
mov
add
aam
ja,pt
pop
and
inc
add
pop
jnp
aas
lret
push
ja
xchg
cltd
lea
out
and
mov
or
adc
loop
and
inc
mov
fucompp
pop
push
push
push
mov
pusha
aam
cmpsb
je
add
inc
loopne
and
sub
or
add
faddl
outsl
sbb
rolb
add
sub
int3
push
add
sub
loope
xchg
or
jmp
jecxz
rcr
mov
add
outsl
cmpsb
fucompp
mov
in
out
inc
mov
or
dec
rcl
test
out
repz
xor
dec
sbb
loop
or
lahf
mov
ja
adc
mov
je
je
sbb
shrl
insb
add
xchg
stos
sbb
and
ljmp
inc
arpl
into
push
into
mov
cs
scas
rorl
sub
aaa
into
push
std
sub
inc
jge
dec
ret
mov
test
push
lods
or
aad
jnp
ja
pop
xchg
jmp
push
or
dec
xchg
stc
mov
fadds
ljmp
mov
in
es
test
mov
xchg
hlt
mov
sti
mov
and
nop
inc
add
sbb
push
xor
pop
fcoml
push
mov
push
outsl
dec
sub
mov
dec
out
pop
lcall
dec
pushf
scas
cmp
insb
pusha
pusha
inc
xor
lods
leave
jg
xchg
in
push
out
mov
lretw
bound
shll
mov
test
cmp
stos
leave
jb
xchg
int3
hlt
xchg
dec
or
push
ljmp
inc
pop
outsl
popf
mov
neg
mov
mov
test
cmp
cmpsl
mov
fnstenv
pop
ror
or
andl
cmpsl
outsl
sbb
xor
into
movsb
xor
or
dec
cmp
or
sbb
sub
sub
icebp
or
pop
sub
push
insl
imul
mov
fsubs
dec
ret
pop
cli
rclb
lret
jmp
rolb
leave
in
adc
mov
pop
xor
movsb
insb
pop
jp
or
callw
mov
out
or
cmp
sbb
data16
sbb
fcoml
les
inc
dec
dec
mov
decb
je
sahf
lea
dec
leave
loopne
adc
push
imul
loopne
in
adc
mov
test
or
dec
rol
dec
jbe
aas
sbb
jnp
loop
add
ss
fs
mov
jns
fdivrs
fidivs
imul
je
jno
icebp
push
sub
lret
mov
je
fisttpl
and
sbb
adc
pusha
mov
aas
hlt
mov
roll
xlat
lretw
fidivl
push
mov
and
sbb
or
sahf
jbe
inc
scas
xchg
pop
imul
dec
iret
sub
insb
call
dec
push
inc
das
xor
push
arpl
mov
and
int
cli
test
mov
cmp
lods
cld
ljmp
jecxz
or
mov
pop
aam
sti
leave
sbbl
addr16
ljmp
pop
xor
outsl
and
push
jae
mov
mov
lcall
ret
cmpb
and
out
xchg
push
gs
and
popa
cmp
subl
adc
sbb
call
repnz
dec
leave
clc
add
xchg
dec
jg
loop,pt
pop
or
inc
inc
jge
or
dec
repnz
call
or
or
xchg
pop
ja
cmpsl
fadd
xor
fldt
xorl
mov
das
push
out
mov
xchg
add
add
or
mov
mov
imul
ds
clc
scas
int
shlb
mov
ja
lock
mov
mov
cmp
ja
ror
pop
mov
test
dec
and
cmp
or
clc
out
lea
xor
fistpl
jl
push
test
sbb
ret
add
push
repz
mov
ret
ret
cmp
repz
cwtl
pop
push
fildll
inc
mov
mov
add
je
mov
dec
dec
das
sbb
mov
mov
cmc
jmp
or
fists
inc
or
add
fdivrl
adc
out
cmpsb
gs
imul
jne
imul
scas
or
fdiv
cmpl
leave
shll
pop
cmp
popf
pop
push
dec
add
loop
ja
xchg
lods
mov
add
push
xlat
sub
out
aad
pusha
mov
mov
into
xor
jp
lcall
adc
iret
cmp
push
xor
shrb
ljmp
cld
gs
sbb
mov
adc
fs
leave
je
xor
jp
and
arpl
pop
jae
and
out
ss
movsl
mov
or
adc
pop
arpl
xor
inc
ljmp
add
sbb
dec
jae
xchg
lret
mov
xchg
ficoms
popf
inc
jne
lock
jbe
addr16
or
repz
xor
pop
cld
pop
xor
mov
inc
mov
sbb
aad
xor
das
xchg
push
mov
and
jbe
daa
mov
jbe
sbb
jmp
and
scas
lods
repnz
fwait
pushf
cmp
lcall
mov
fisubl
shlb
call
pop
xchg
xchg
data16
jns
jmp
inc
lds
rdtsc
and
push
jmp
lret
shr
xchg
repz
adc
pop
lods
mov
add
xchg
mov
jl
fistpll
mov
xchg
or
xor
cwtl
push
mov
jle
ss
ret
ss
out
lcall
add
inc
dec
sub
jbe
push
popa
mov
je
push
leave
mov
or
push
mov
dec
and
subb
imul
push
fsubrs
fwait
inc
call
or
ja
cmp
or
push
mov
shl
cld
insl
sbb
test
mov
dec
pop
mov
push
test
ja
mov
dec
fildll
jnp
gs
xchg
movsl
leave
inc
inc
inc
popa
mov
cmpsb
lcall
ret
sti
xchg
sub
rorl
mov
stos
fs
lds
aad
xchg
add
push
mov
and
imul
push
cmpl
xchg
gs
shlb
daa
inc
or
dec
in
jo
add
adc
jmp
push
push
add
movsl
and
lods
cmpsb
jp
xchg
jns
xchg
out
sbb
dec
inc
sbb
xchg
dec
add
cld
mov
or
pop
movsb
mov
push
push
cli
nop
lcall
sarl
inc
iret
stc
test
bound
ja
loopne
es
mov
pop
mov
lods
aaa
loopne
mov
push
add
ljmp
inc
dec
scas
jmp
rorb
fs
or
push
mov
jno
cmp
roll
mov
cmp
or
pop
in
lds
shl
pop
xor
div
xchg
leave
and
repnz
pop
sub
jb
pop
push
push
sub
sti
cmc
and
subl
jle
inc
jg
arpl
shlb
in
ficoms
dec
int
mov
aas
jmp
push
repz
lea
sub
or
mov
adc
pop
or
pop
pushf
mov
dec
aaa
inc
int3
xchg
mov
fsubl
sub
not
subb
adc
push
pushf
sub
and
adc
mov
and
js
in
cmp
push
emms
outsb
ds
dec
loopne
sbb
mov
cmp
test
add
mov
out
pop
das
xchg
xlat
pop
inc
sbb
movsl
jb
es
pop
rcrb
hlt
insb
inc
lea
data16
loopne
push
jns
outsl
mov
not
cmpsl
leave
scas
lcall
inc
shll
sub
sbb
push
out
arpl
js
xor
test
push
pop
mov
pop
sarl
add
push
dec
pop
daa
push
jp
enter
xor
cld
add
bnd
push
adc
push
shlb
sub
xchg
and
add
xor
or
xchg
es
adc
outsb
add
outsb
cmpb
dec
lret
dec
in
loope
push
sub
insb
mov
dec
int3
jmp
inc
push
daa
jg
jo
jmp
pop
jp
xchg
insl
adc
rcrb
out
fnstsw
lods
push
inc
jb
push
inc
call
popf
sbb
iret
or
insl
pop
lret
mov
add
cltd
ss
sti
aaa
adc
jae
outsb
in
popf
cltd
gs
mov
aam
cmp
or
popa
xchg
push
mov
or
fnsave
sbb
loope
push
popa
mov
inc
int3
jb
and
stos
adc
jae
sub
pop
xchg
sub
cmpsb
jne
or
mov
xor
xor
or
jbe
pop
jle
mov
cmc
adc
mov
push
mov
push
fisubl
sbb
sbb
inc
push
mov
mov
and
dec
dec
fs
adc
test
fbstp
push
sti
and
ss
ss
and
push
pop
xchg
lea
push
jnp
jl
mov
daa
or
or
lret
lock
adc
rolb
sub
jge
xor
mov
jbe
add
cmpsb
push
xor
fisubl
mov
js
dec
mov
or
or
jle
scas
test
vunpckhps
popa
cld
sbb
cmp
sti
jne
sarb
cs
into
push
xorb
mov
notl
xlat
adc
in
fisubs
sub
pop
clc
push
or
daa
dec
int3
xor
fwait
jno
xor
adc
or
xor
jbe
or
cld
rcl
lret
out
daa
pop
pusha
mov
push
cltd
add
mov
mov
jmp
sub
insl
mov
mov
jns
fnsave
stc
lret
in
mov
lds
rcll
add
daa
pusha
hlt
mov
xchg
push
and
lret
dec
push
stos
test
push
mov
enter
mov
in
push
pop
mull
xchg
cld
xor
xchg
pop
lock
stos
push
sbb
xlat
jl
sub
enter
mov
pop
and
fwait
test
xlat
bound
sti
add
push
loope
jno
inc
mov
cltd
xchg
dec
pop
push
arpl
inc
dec
dec
lret
bound
push
scas
or
sbb
div
xor
jnp
xchg
xchg
push
iret
add
xchg
fldl
dec
rcl
xchg
call
mov
sbb
jecxz
jmp
movsb
enter
repz
ret
imul
xchg
in
mov
jg
mov
or
sub
pushl
aad
pop
ret
sti
fbld
jb
call
rorl
mov
fnsave
sbbb
xchg
scas
mov
stos
cmpsb
mov
dec
dec
test
cld
popa
mov
ds
jg
frstor
fxch
jl
xchg
mov
cmpsb
mov
inc
pop
out
enter
jecxz
mov
sti
jmp
sbb
std
inc
jmp
insl
ja
sub
cmp
push
dec
cmp
push
ss
xlat
in
out
inc
mov
push
sbb
adc
cmp
rclb
lret
je
iret
outsb
mov
xchg
mov
ja
lds
mov
fisubrs
hlt
in
ds
test
push
add
jg
push
jl
ret
lret
insl
gs
and
mov
sub
aas
sub
xchg
movsb
int
pop
scas
in
popl
stos
int
iret
pop
cmpl
mov
sti
test
xchg
add
stos
clc
add
pop
out
jno
lahf
push
clc
inc
mov
cmp
movsl
stc
add
cmp
imul
mov
cs
sbb
mov
inc
cmp
pop
movsl
fldl
jmp
movsl
jmp
imul
in
notb
xorl
outsb
dec
inc
xlat
call
out
stc
fiaddl
or
and
push
add
movb
jle
cmpsl
mov
shl
cs
add
sarl
jmp
dec
daa
fwait
add
push
adc
dec
std
shrl
ja
xor
push
ret
fdivrs
daa
xor
ret
pop
lea
jmp
mov
fnstenv
push
bound
mov
push
push
mov
and
shll
lock
mov
sub
pop
stos
xor
enter
sub
xor
fsubl
sbb
fsubs
jge
mov
push
mov
adc
mov
mov
insl
xchg
lods
sub
mov
cmp
cmp
jmp
test
xor
pop
or
fisubl
cmp
pop
mov
cli
addr16
sarl
dec
es
call
or
int
add
mov
imul
shrb
ret
hlt
adc
adc
pop
xor
xor
add
add
rol
push
stos
out
out
jnp
imul
pop
or
jge
xchg
or
data16
bound
pop
adc
xor
test
fcomps
arpl
xorb
pushf
mov
adc
xor
dec
jmp
dec
cmpsb
mov
push
mov
xlat
jecxz
mov
sub
aam
lret
mov
fimuls
test
mov
push
stos
and
mov
arpl
xor
push
push
jbe
jg
cmp
mov
loopne
push
adc
in
and
mov
cmpsl
dec
and
dec
scas
call
mov
in
rclb
aas
arpl
push
fs
in
lcall
lcall
nop
pusha
mov
dec
aas
xor
imul
sub
jbe
inc
cs
lods
sub
adc
add
popf
outsb
xchg
rcll
call
push
pop
or
cmp
push
or
inc
mov
push
add
jp
movsb
lahf
fimull
scas
pop
arpl
adc
or
fmulp
jbe
add
xchg
adc
les
ud2
fnsave
sub
repz
aad
arpl
aas
mov
cmp
popa
repz
lock
pop
mov
insl
in
call
mov
pop
int
and
shlb
test
scas
je
push
cmp
inc
movsb
ret
bound
jmp
pushf
fsubs
push
xchg
jg
gs
adc
xchg
sub
iret
fsubl
jo
pop
pop
hlt
xor
xchg
adc
pop
clc
dec
shufps
std
adc
xchg
ja
mov
sti
xor
fsts
or
clc
mov
jne
mov
mov
xchg
popa
xor
dec
test
popa
adc
pop
mov
xlat
adc
adc
push
or
inc
outsl
xchg
iret
mov
outsl
loope
popa
dec
push
adc
adc
adc
push
mov
pop
mov
add
insl
out
sti
fsubs
add
cmp
jo
call
adcl
orl
or
push
fcmove
or
push
adc
inc
iret
repz
adc
adc
lods
cmp
stc
lea
arpl
mov
aaa
lret
clc
xor
roll
rol
gs
or
cmp
or
cmp
data16
mov
repz
sahf
outsb
dec
cmc
mov
add
xchg
cmc
xor
xchg
lods
jg
aas
fisubl
push
movsl
ret
imul
and
mov
inc
and
fs
stc
jns
or
cmpsb
fnstcw
cs
push
outsl
lods
fbld
xchg
lea
xor
or
clc
rcl
mov
push
mov
push
push
dec
push
and
les
jge
in
dec
test
push
add
les
adc
shll
xchg
fisubrs
sahf
out
icebp
dec
cmp
add
mov
mov
push
inc
mov
pop
mov
dec
repnz
jne
imul
add
sbb
cmpsb
sbb
sti
xlat
mov
scas
repnz
lock
mov
add
and
cmpsb
mov
popa
or
push
ljmp
mov
subps
out
jge
pop
cmc
cltd
lahf
cwtl
lcall
mov
xchg
in
xchg
and
add
cli
and
out
inc
dec
loope
imul
in
das
addr16
push
sbb
hlt
xor
jl
cmp
inc
imul
ds
repnz
jnp
cld
data16
xchg
mul
or
pop
jg
in
pop
into
nop
cld
in
adc
xchg
lods
outsb
fldcw
lock
and
clc
ds
mul
inc
in
pop
aaa
incb
jb
mov
mov
data16
push
and
outsl
push
mov
inc
and
and
xchg
out
mov
add
push
imul
outsl
jns
fisttpll
sahf
stc
lods
addr16
in
pop
jno
sbb
pop
js
incb
sbb
ljmp
ja
xor
sub
fildll
jno
fmull
and
sarl
dec
je
dec
mov
in
mov
xorl
jno
cmp
sub
cmp
mov
xchg
cmp
mov
clc
and
mov
adc
or
mov
fbld
sbb
outsl
leave
insb
test
mov
lcall
or
adc
popa
fstp
cmp
jno
test
test
jmp
or
pop
loopne
idivb
movsb
pop
fidivrs
jmp
dec
sbb
ret
pop
stos
cmp
aam
orb
aaa
shl
jno
xchg
test
push
movsb
jno
mov
scas
sbb
dec
enter
int
imul
insb
cmovnp
pop
add
add
jl
repnz
inc
dec
mov
idivb
clts
mov
add
sbb
mov
add
jge
pop
jnp
cli
outsl
clc
mov
mov
jns
adc
inc
out
adc
test
notl
sahf
movsb
push
sbb
inc
repz
pushf
lds
cmpsb
cmp
mov
pop
or
mov
dec
int
lods
jmp
mov
insl
sbb
mov
xor
mov
sbb
lock
cmp
outsl
insb
in
and
mov
pop
fcoms
sub
dec
sbbl
sub
mov
add
push
pop
repnz
adc
lock
jle
addr16
dec
lock
outsb
cltd
test
adc
js
fisttps
fimull
pop
xchg
cli
add
sti
aaa
rcll
jle
sub
lret
inc
sahf
aam
out
xchg
lcall
sub
fadd
xor
or
inc
inc
movb
sub
mov
adc
outsb
cwtl
xchg
mov
jb
add
lcall
sbb
dec
movsl
notl
push
mov
jg
das
pusha
adc
jle
add
call
sbb
and
test
fcomps
cmpsb
inc
push
push
and
sub
sti
xchg
add
es
and
cltd
movsb
jne
mov
int3
push
jns
adc
outsb
or
out
adc
cs
jle
in
xchg
or
aaa
sahf
push
fldenv
mov
mov
aad
xchg
push
mov
or
out
lods
pop
and
pop
movsl
and
stos
enter
fstp
inc
scas
push
inc
cld
cmp
ffree
rolb
lret
xor
int3
xchg
aam
xchg
pop
aas
clc
push
xor
sbb
and
or
pop
sahf
je
aaa
cmp
mov
jl
mov
out
cld
cli
dec
pop
mov
add
rolb
dec
xchg
jae
dec
or
jns
fildll
test
mov
mov
nop
adc
stc
sub
sbb
sub
fbld
shll
imul
scas
push
movsl
popa
mov
push
xlat
adc
mov
ret
dec
mov
fdivrl
cmp
cmp
mov
pop
or
sbb
and
test
dec
xchg
pop
inc
stos
fwait
sub
stos
out
inc
gs
bound
add
xchg
jno
lods
push
xchg
or
movb
xchg
les
mov
bound
sti
in
mov
cmpb
sub
nop
js
iret
hlt
std
adc
push
loope
push
iret
mov
push
jl
adc
jae
in
sbb
icebp
imul
ja
hlt
dec
and
dec
mov
arpl
les
test
mov
pop
addl
inc
sub
idivl
sti
push
inc
add
call
jne
and
insb
popf
int
pop
cmp
dec
mov
mov
mov
pop
inc
pop
lods
push
out
leavew
std
popf
push
fldcw
push
sbb
xchg
shr
or
dec
add
pop
xor
jp
mov
push
jg
xchg
das
loope
stos
sbb
mov
fsubr
dec
xor
aam
es
ds
xor
testl
inc
sub
mov
scas
aam
add
xchg
ficompl
push
lods
xchg
xor
pop
jne
in
mov
jae
xchg
push
mov
repnz
sub
movsl
inc
mov
adc
push
add
xlat
mov
mov
pop
jle
ret
movsb
cmp
enter
lock
loopne
ljmp
jmp
pusha
pop
daa
popf
scas
xor
loope
mov
xchg
bound
push
sbb
jp
scas
sbb
sbb
pop
or
jmp
sbb
stc
cmp
addps
dec
jns
sbb
inc
nop
aas
pop
jno
in
or
test
insl
or
sbb
inc
in
pop
pop
out
mov
mov
cltd
push
dec
fidivrl
dec
inc
ss
jbe
test
mov
and
xchg
rcrb
or
loop
push
imul
push
inc
push
pop
in
lahf
out
xchg
mov
scas
add
xor
sbb
xlat
inc
mov
push
jmp
pop
inc
shl
xor
cltd
cmp
fdivs
xchg
push
lret
inc
repnz
pop
aas
jae
jo
ja
in
outsl
test
lods
xor
aad
bound
jnp
add
xchg
inc
xchg
call
pop
pop
xchg
jl
imul
in
sbb
add
faddp
cmp
in
push
test
enter
add
and
mov
and
mov
jb
or
into
mov
xchg
push
mov
mov
push
int3
inc
test
scas
mov
lods
push
and
je
stos
sbb
enter
enter
cld
or
mov
icebp
leave
xor
mov
push
push
jae
nop
cli
clc
enter
insb
mov
cmp
adc
loop,pn
pop
idivl
xor
sbb
mov
sub
mov
or
lods
enter
cmp
add
repz
inc
sub
cmp
lods
and
sub
add
popa
fisttps
xchg
flds
push
rcrl
scas
mov
jns
cmp
xor
mov
sbb
test
or
lods
pop
jno
mov
dec
mov
sbb
enter
pop
sub
jmp
mov
out
call
adc
or
fwait
xor
lods
jecxz
out
cmp
push
xor
or
test
outsl
or
addr16
pop
add
jns
xchg
pop
clc
xchg
push
stos
push
aam
sub
push
xchg
and
daa
pop
xchg
pop
pushf
mov
mov
sub
subb
push
mov
insb
sahf
push
sub
cmpsl
mov
mov
inc
popa
data16
xchg
xchg
leave
sbb
int
fsubrs
jbe
add
push
fidivrs
and
jmp
leave
cli
rcr
test
dec
in
sbb
or
xor
out
mov
jle
mov
mov
push
mov
insl
add
pushf
arpl
mov
es
lock
outsb
sub
mov
inc
enterw
je
enter
loope
or
mov
jle
les
fimuls
push
in
int3
push
dec
push
movsb
ret
movb
xchg
mov
das
and
inc
or
je
std
jne
inc
gs
ret
cwtl
pand
popa
std
andl
pop
popl
lock
inc
sub
dec
push
cmp
xor
push
pushf
rorl
or
inc
into
add
loopne
lcall
jmp
or
idivb
mov
nop
and
sbb
cmpsl
sub
pushf
inc
hlt
push
or
push
jmp
sub
xor
cs
push
adc
cmp
mov
sbb
dec
je
mov
push
jne
mov
mov
lret
cmp
cmp
lret
je
xchg
jp
cmp
out
subb
js
scas
sbb
or
andb
cli
sar
lods
xchg
je
std
mov
sahf
sbb
cmpsl
pop
and
imul
pop
dec
dec
add
mov
lds
addr16
sbb
jae
cli
dec
add
xor
out
aad
test
fimull
loopne
pusha
sbb
cmp
icebp
inc
mov
sarb
add
xlat
inc
dec
ds
cmp
fstl
scas
xor
ret
je
cmp
mov
cmp
inc
in
stos
jmp
add
mov
mov
add
call
mov
mov
in
and
mov
ja
lods
cmc
sub
mov
pop
imul
pop
test
or
ljmp
cmpsl
ljmp
shl
scas
cwtl
mov
and
cli
shll
push
adc
pop
push
scas
mov
jle
fcmovu
cwtl
int3
sahf
sub
out
xchg
insb
in
aas
mov
jo
pop
sbb
fbld
sahf
sub
sbb
psrlw
repz
dec
call
pop
stos
repz
push
inc
int3
insl
or
mov
sub
imul
jl
hlt
cmp
and
mov
daa
fdivrs
dec
adc
cmp
sub
sbb
imul
sbb
mov
adc
pushf
lods
es
push
mov
xchg
bound
lret
xchg
je
mov
insl
scas
mov
jne
jnp
mov
mov
mov
mov
popf
push
mov
stos
stos
insb
out
mov
mov
ret
in
push
pushf
addb
cmp
and
jae
int
and
jb
retw
push
lock
sub
mov
lret
cltd
rol
mov
pop
inc
or
pop
rol
dec
scas
mov
push
imul
jae
xchg
ret
inc
lds
scas
aam
and
in
std
sub
mov
inc
xchg
fsin
popa
insl
push
mov
xor
icebp
cmp
fbstp
stc
push
push
cmp
aam
mov
neg
push
sub
in
mov
sub
xchg
mov
sti
stos
test
pop
mov
insb
jp
or
lds
jb,pn
jae
scas
dec
pop
mov
fcos
nop
mov
fisttps
mulb
repz
inc
cmp
cmpsb
clc
jecxz
out
stc
sbb
fsubrs
jge
iret
movsl
int3
std
adcb
inc
sub
lds
mov
jnp
and
adc
mov
les
fcompl
inc
jle
es
ret
and
mov
xor
fstpl
outsl
pop
icebp
outsb
mov
dec
add
es
pop
test
cld
xchg
adc
insl
add
clc
adc
into
jle
mov
imul
sbb
outsb
jbe
xor
xchg
clc
hlt
scas
sub
rcl
ss
fs
inc
or
insb
xchg
xchg
cltd
mov
mov
pop
aad
push
sub
mov
loopne
shl
pop
and
xor
pop
jge
mov
cltd
push
sti
fstl
push
jge
movsl
push
or
shll
aas
decb
mov
lds
cmp
lret
xchg
popf
rorb
repz
pop
xchg
aad
leave
sub
loopne
pop
dec
inc
mov
in
sbb
xlat
sti
daa
inc
inc
stc
mov
add
sub
mov
jae
ljmp
shrl
daa
hlt
jecxz
cmc
mov
add
push
scas
inc
out
jnp
jmp
bswap
add
lret
clc
pop
fcompl
daa
icebp
mov
mov
pop
jmp
mov
shrb
dec
iret
and
jns
or
lret
iret
outsl
add
les
dec
data16
xchg
out
pushf
add
movsb
in
cmpsl
mov
inc
fsubs
xor
shll
dec
adc
adc
jle
sbb
push
in
push
sbb
inc
out
pushf
and
sbb
dec
or
dec
or
mov
es
add
loope
daa
adc
test
inc
divl
xchg
pop
mov
out
lret
xor
jge
sbb
push
or
into
lret
in
leave
or
popa
and
cmp
rcrb
cmc
cmp
loopne
jge
jb
in
cmc
jb
jo
ds
push
inc
mov
pop
push
aam
or
push
decb
push
hlt
xor
iret
subl
cmc
pop
jne
lahf
mov
aas
mov
xchg
dec
xchg
clc
cltd
and
arpl
outsb
aad
stc
daa
jne
es
data16
sbb
jnp
pop
mov
dec
les
in
cli
push
mov
icebp
xchg
lods
inc
outsb
jle
lahf
or
lret
pop
outsb
loopne
xbegin
lock
mov
push
test
lods
test
jnp
fdivrs
test
pop
inc
adc
int3
loop
and
js
adc
stos
sti
mov
inc
xor
fnstcw
inc
or
test
mov
and
enter
xor
cwtl
adc
cmp
aaa
xor
fsubs
xor
dec
out
xchg
jg
test
outsl
test
ja
adc
pop
sub
mov
cmpsl
mov
push
adc
xor
inc
sbb
xor
sbb
std
cmp
lea
mov
test
cmp
add
lcall
aad
fcomps
fcompl
movsb
test
or
adc
in
fiaddl
pop
das
test
push
leave
xor
aad
fucom
jo
adc
and
fistl
mov
test
dec
dec
xchg
xor
xor
ja
mov
jge
iret
dec
fs
fwait
gs
rcll
dec
imul
mov
testb
mov
fstpt
pop
pushf
out
loope
inc
lds
cwtl
in
je
hlt
mov
out
sahf
and
or
sub
push
mov
dec
add
cmp
push
xchg
data16
sbb
mov
push
aad
pop
sub
jl
inc
jle
cmp
or
clc
pop
mov
call
scas
dec
or
xchg
cmp
arpl
mov
jo
mull
fcmovne
inc
sbb
negl
shrl
push
leave
dec
and
mov
divb
mov
in
sbb
in
cld
dec
popf
ret
cmp
jne
sbb
push
cmp
lcall
dec
lcall
cs
mov
or
sti
pop
pop
lods
aad
pop
testl
push
std
packsswb
pop
insb
and
lods
daa
jbe
ss
pop
mov
mov
cmp
rclb
in
aaa
mov
std
das
push
movsl
mov
rcr
add
dec
push
adc
ss
je
pop
adc
inc
cmp
add
in
mov
xchg
es
clc
fistpl
pop
xorb
pop
ret
subb
dec
stc
sbb
scas
repnz
aaa
cmp
dec
add
subb
xchg
fisubl
les
xchg
and
dec
cwtl
mov
cmp
cmp
xor
add
mov
sar
int
test
int
andb
dec
push
and
icebp
push
lods
pop
push
dec
jnp
pop
adc
inc
repnz
rclb
int3
cmp
stc
pop
cmp
lods
adc
insb
out
sub
imul
and
mov
subl
cwtl
ljmp
jb
push
dec
push
jno
push
and
adc
xor
cltd
ja
sub
push
mov
push
lods
jmp
mov
mov
out
mov
xchg
jb
cli
fninit
or
cmpsb
repnz
jb
jp
cmp
cmpl
xchg
orb
push
iret
pop
inc
fs
push
add
mov
stc
shrb
hlt
or
or
in
jbe
jl
rcrl
and
mov
dec
dec
sbb
outsl
mov
outsb
out
mov
inc
push
or
ficoml
sbbl
dec
inc
mov
int3
fwait
cbtw
sub
xchg
sub
cli
push
dec
inc
cli
orl
stc
push
pusha
sbb
cmp
mov
mov
xlat
push
push
int3
ja
clc
or
cwtl
push
adc
sbb
lock
btc
movsl
ds
jge
mov
xchg
jl
jns
stos
jo
add
and
jmp
in
push
adc
mov
mov
and
js
jno
shlb
lock
mov
shlb
fmul
lock
insl
pop
scas
sub
leave
jb
bound
js
inc
jne
test
xchg
push
sti
lds
imul
fcompl
aad
mov
cmc
adc
insb
mov
sbb
push
dec
mov
dec
xchg
movsl
sub
dec
pusha
inc
lds
sbb
xorl
test
int3
sub
mov
mov
dec
inc
cltd
mov
push
imul
cmpb
in
xchg
push
sbb
push
sbb
incb
testl
pop
shl
stos
push
scas
push
testl
add
xchg
iret
mov
xor
pop
sbb
push
aam
dec
rcrb
and
xor
mov
sub
ret
cs
xorb
sti
cmp
call
xchg
adc
fs
inc
jb
and
and
add
imull
pop
rcll
fcomi
loop
mov
mov
jb
and
mov
gs
xor
inc
inc
inc
addr16
adcl
cmpsb
xor
mov
jg
insl
sbb
in
ret
cmp
lret
enter
inc
pushf
sub
ret
adc
lcall
ljmp
xchg
imul
mov
adc
and
push
insb
mov
sbb
loopne
repz
das
inc
js
fs
push
mov
inc
popa
shlb
stos
fwait
shll
sbb
sbb
pop
pop
jmp
and
sbb
outsb
int
hlt
shr
or
mov
adc
lret
in
div
cmc
cmp
mov
clc
cmp
aas
mov
and
pop
or
inc
push
xchg
inc
adc
insl
add
je
aaa
icebp
fucom
sub
jle
roll
mov
fdivrs
adc
sbb
addr16
ret
cwtl
in
mov
mov
cmc
fs
mov
and
sub
rclw
nop
sub
xlat
push
arpl
adcb
mov
in
lds
fidivl
mov
in
dec
sbb
lret
sbb
or
loope
lret
addr16
pop
sub
pop
inc
add
fcmovbe
mull
mov
inc
es
lret
dec
cmp
test
fdivs
pushf
and
jo
push
and
movsl
push
push
inc
push
push
cmp
mov
stc
lea
dec
push
xor
adc
jno
iretw
jbe
out
mov
div
into
inc
je
in
mov
out
mov
jmp
shlb
jne
pop
push
fldt
dec
mov
and
pop
xor
mov
es
inc
pop
es
sub
movsl
cmc
xor
xlat
jmp
pusha
ret
aam
test
repz
shll
jl
pop
jno
xchg
in
into
in
jle
loope
pusha
inc
push
mov
add
sbb
dec
add
push
dec
test
scas
lds
xchg
inc
inc
fsubrs
pop
mov
mov
cmp
enter
add
pop
and
in
test
lret
outsl
ss
mov
fwait
or
into
pop
inc
dec
and
mov
test
lcall
adc
sbb
scas
ljmp
adc
and
testl
test
push
ds
dec
dec
std
cltd
jbe
imul
outsb
or
out
aas
mov
lret
repz
aam
mov
in
popa
xor
cld
jb
pop
fistps
repz
xchg
jne
hlt
dec
imul
mov
pop
fs
loope
cli
mov
jge
addl
cwtl
cmp
test
fsub
sbb
cwtl
divl
sbb
leave
pop
mov
movb
inc
push
xor
rcrb
xchg
sub
lea
outsl
cmp
sbb
xchg
andb
fimuls
and
cmc
out
repz
mov
jge
xchg
cmc
mov
cmpsl
mov
push
and
cmc
scas
dec
jne
aaa
mov
cld
fstl
out
cwtl
cmp
jo
dec
xor
ja
mov
mov
push
es
bound
or
shl
xchg
shll
mov
push
sbb
popf
popa
lret
and
jno
enter
or
iret
out
jle
out
pop
pop
imul
mov
popf
adc
int3
sbb
dec
pop
cmpsb
mov
rsqrtps
stos
jle
in
sub
das
mov
test
cmpsl
or
mov
pop
in
test
xor
add
outsb
jl
inc
loopnew
jnp
rorl
lods
ds
fsubr
insb
jne
ret
jae
xor
push
cwtl
push
das
jnp
xchg
imul
sahf
add
push
int3
push
scas
jge
and
jnp
addl
sti
aad
scas
xor
jg
repz
pop
sbb
add
enter
shlb
or
mov
orb
mov
rclb
popa
xor
adc
int
mov
aam
hlt
fldt
test
cmp
jae,pt
jnp
addl
push
mov
push
mov
mov
sbb
push
add
mov
inc
rorb
arpl
dec
push
sbb
gs
outsl
addb
stos
pop
orl
cmp
dec
jae
andl
ficoml
inc
fbld
dec
adcb
xchg
jg
insb
adc
or
or
les
xor
and
in
sub
call
jne
jbe
push
adc
sub
pushl
out
adc
fbstp
mov
jg
xor
jns
mov
jns
sub
add
jl
enter
outsl
cmpsb
cmp
sub
out
aad
sub
movsl
add
xchg
out
lds
cmp
insb
ljmp
xchg
fwait
fidivrl
jne
adc
add
xor
or
cmp
call
jg
inc
stos
sahf
int3
xor
mov
xor
or
inc
jae
pop
cld
push
cltd
jle
sbb
js
icebp
mov
and
idivl
xchg
aaa
int
ret
xchg
push
movsb
dec
push
int3
adc
pop
push
xchg
aam
je
jp
sarb
mov
stc
fs
fwait
lods
lock
push
or
mov
mov
int3
add
lcall
pop
or
shl
pop
push
aas
mov
xor
jecxz
jge
stos
pop
outsl
xor
pop
test
sbb
pop
push
pop
loope
daa
jg
cs
xor
mov
fildll
gs
jb
dec
movsl
or
inc
inc
xor
cwtl
jns
stc
xchg
ret
shr
in
mov
insl
jae
and
adc
dec
pushf
push
and
dec
xchg
stos
mov
jb
xchg
sti
fisttps
xorl
movsb
fwait
cwtl
xchg
mov
dec
popa
pop
fldl2t
sarl
out
fs
adc
jbe
adc
and
xchg
hlt
add
and
or
inc
rcl
jae
inc
gs
fcomps
test
cmp
out
mov
imul
sti
icebp
jge
pop
pop
jb
out
popa
iret
mov
andl
pushf
jge
ljmp
xchg
loope
mov
pop
es
pop
test
dec
ret
mov
dec
pushf
jo
and
mov
int3
sub
pop
test
ret
loop
fcmovb
ret
jecxz
cmp
out
cmpb
xchg
cmc
ret
arpl
mov
aaa
js
pusha
jb
inc
insl
rcrl
mov
orb
mov
mov
cmp
cli
inc
mov
dec
pop
push
and
dec
cmp
stc
mov
fists
sub
mov
lahf
pop
jecxz
aad
lahf
sub
aaa
mov
cmpsb
fisubs
rclb
orl
jle
and
js
xor
les
xor
sub
popf
push
int3
pop
in
jno
cltd
imull
shl
cmpsb
xor
jne
adc
jnp
imul
hlt
push
jae
test
cmp
mov
dec
mov
cmp
shll
cli
lods
jb
das
int
enter
loop
jge
inc
dec
mov
add
out
mov
lret
out
iret
mov
xchg
sbb
cmp
jmp
in
mov
fsts
mov
pop
jae
lcall
xchg
sub
xchg
xchg
pushf
enter
dec
movsl
outsb
dec
gs
pop
repnz
ja
shll
xchg
dec
mov
aam
imul
mov
sbb
inc
sarb
out
cmp
int
data16
lret
jmp
fistpll
pusha
ret
jae
imul
jae
mov
or
push
neg
xchg
adc
cltd
repz
jne
addr16
mov
xchg
mov
inc
fistl
add
cmp
imul
cmp
push
fmuls
cmp
jp
jg
mov
ror
lods
mov
xchg
xchg
fisttps
and
adc
jbe
sub
xchg
call
jns
xchg
std
sbb
adc
fstpl
std
in
xchg
int
dec
dec
xchg
rorb
jg
fucomp
aad
insl
xor
adc
jno
dec
sahf
mov
sbb
cmp
cltd
iret
adc
scas
ficompl
rorb
enter
loop
dec
ljmp
and
lods
shlb
mov
adc
push
sbb
push
cmp
lahf
mov
nop
add
mov
mul
sub
pop
insl
add
jl
push
sub
pusha
inc
daa
ret
jbe
mov
icebp
push
sbb
bound
outsb
cli
and
ret
push
insb
jnp
rorl
sub
jle
testl
gs
sbb
lahf
jp
cmpsl
sahf
jg
pop
pop
fwait
mov
lods
or
das
or
mov
pushf
dec
inc
jbe
out
inc
mov
andb
out
mov
jae
push
mull
push
xor
out
mov
pop
dec
in
push
jg
fmuls
xchg
jne
pop
sub
fdivrl
pop
aad
lret
mov
cld
jnp
sahf
sub
and
es
dec
std
adc
sbb
rorl
ss
ljmp
es
adc
scas
jo
lret
in
daa
rcll
sub
push
mov
test
incl
into
push
jle
xor
pop
jne
mov
sarl
test
mov
aaa
out
out
inc
fsubrp
cli
and
into
loope
subb
mov
fdivp
iret
ret
ljmp
xchg
mov
sbb
cmpsl
add
pop
dec
jo
loope
or
sbb
rclb
enter
jns
movsb
or
cmp
data16
mov
adc
outsb
dec
mov
cld
or
scas
fidivrl
aad
dec
cmp
addr16
cmp
fwait
pop
pop
rcr
push
pop
dec
aad
xchg
pop
ds
dec
jmp
dec
inc
data16
pop
stc
mov
pushf
jl
insb
push
aam
inc
xchg
les
push
xchg
mov
les
push
sub
addr16
cltd
std
cli
repnz
mov
xchg
adc
lret
cmp
dec
pushf
out
lods
cmp
xlat
pop
pop
jne
cmpsl
push
inc
je
subl
pop
jmp
pusha
mov
gs
insb
sub
sbb
in
cmpsl
and
push
jmp
cmp
sbb
cs
gs
outsb
xchg
mov
je
sbb
xchg
add
ja
mov
cmc
sti
pop
pop
out
xchg
hlt
cmpsb
cmp
sti
add
adc
dec
jle
outsl
in
pop
jb
movsl
pop
jmp
aas
and
pop
push
mov
cwtl
js
movl
inc
xor
cmp
es
ftst
lcall
insb
sbb
and
adc
jb
and
jbe
mov
jl
xor
sub
dec
push
push
mov
mov
stc
sbb
call
shlb
int
jecxz
cmp
loop
popa
fwait
cltd
test
dec
jne
dec
pop
out
jae
ret
pusha
jg
ss
jae
jno
arpl
rcrl
xchg
jle
inc
lods
cmp
add
cmp
jne
dec
jecxz
xor
cmp
js
fisubs
mov
enter
jge
ficomps
sahf
rcpps
mov
sub
mov
cwtl
cmc
loop
inc
pop
std
push
mov
and
icebp
shll
mov
push
pop
decl
cmp
arpl
cs
inc
sub
xlat
jb
cmp
cmp
cmp
sbb
xchg
add
es
in
aam
test
xor
cmpsb
mov
mov
inc
mov
test
or
shrl
or
addl
inc
fsincos
add
daa
shr
mov
clc
cltd
mov
pusha
and
stc
leave
mov
mov
xor
arpl
dec
in
into
sbb
push
sub
pop
mov
stos
inc
pop
mov
sub
lret
sbb
test
mov
ret
call
adc
sub
add
lds
pop
call
mov
jecxz
add
enter
mov
pop
int
cmp
sub
mov
mov
movsl
sbb
jge
test
dec
jmp
rorb
shll
in
in
imul
push
or
call
fmuls
or
std
imul
mov
push
mov
push
imul
sbb
popf
cltd
and
test
xchg
pop
shrl
xor
ffree
xchg
icebp
push
pop
sbb
or
loopne
and
inc
mov
mov
aas
inc
fnstcw
adc
push
in
cmpsl
out
xor
pushf
aam
cltd
cmp
adc
jmp
xchg
fmuls
adc
test
xchg
jg
test
push
scas
jns
pop
sbbb
lahf
push
or
in
lods
push
idivl
push
cmc
test
mov
shr
dec
aam
daa
pop
xorb
sbbb
mov
xchg
and
lea
sub
arpl
dec
test
push
jg
adc
mov
aam
mov
lret
daa
lahf
cwtl
mov
pop
add
sub
idiv
mov
test
mov
ss
ret
mov
xlat
lods
int3
gs
ficoml
sti
and
mov
fiadds
stos
sbb
jae
jge
scas
test
imul
mov
push
aad
xchg
lods
mov
sahf
int3
shl
loopne
lret
stos
sub
pop
pop
and
test
jl
sbb
sbb
ja
dec
sbb
outsl
into
cli
sub
fmul
xlat
mov
stc
inc
jo
jle
mov
inc
addr16
rclb
mov
push
xchg
mov
insb
xor
mov
mov
int3
push
jae
mov
daa
sahf
aam
cmp
roll
nop
xchg
dec
ret
movsb
sub
imulb
leave
outsl
scas
fstpl
lahf
xchg
ja
adc
mov
xchg
fdivrs
mov
rcll
lret
adc
out
loope
jne
add
xchg
addl
addr16
xchg
dec
push
in
mov
and
fwait
comiss
cld
mov
add
cmc
cmp
imul
inc
cmp
adcl
leave
jecxz
repnz
insb
rolb
adc
jp
dec
lock
in
xchg
in
xor
test
jne
jb
orb
add
xor
jnp
mov
fldcw
dec
mov
bound
pop
rorb
push
cltd
lock
gs
push
scas
adc
cmp
in
int3
and
mov
icebp
sub
leave
iret
es
mov
mull
cmp
jg
cmc
mov
shlw
pop
leave
dec
jp
icebp
jecxz
dec
aad
push
leave
popf
lahf
pop
ss
mov
sub
push
mov
leave
aaa
mov
ja
lods
call
sbb
cmpsl
mov
les
cli
int
mov
xor
aam
xchg
adc
cli
jne
or
push
popf
mov
pop
rorl
inc
fsubrp
mov
mov
std
jp
inc
outsl
shll
inc
aaa
jbe
mov
adc
rorl
scas
add
pop
jo
test
je
cmp
mov
mov
push
cmp
out
in
pop
mov
mov
scas
or
jmp
mov
movsl
sub
cltd
and
out
mov
aaa
out
fnstenv
daa
sbb
fptan
sub
lods
filds
mov
mulb
subl
jp
divb
inc
stos
shll
push
popf
into
jne
pop
scas
inc
iret
std
mov
arpl
dec
push
xor
scas
adcl
dec
pop
aad
mov
stc
shll
xchg
xchg
adc
push
aam
sub
or
fimull
jge
fucomp
mov
xchg
mov
adc
jae
movsl
push
adc
add
es
mov
xor
mov
cmpsb
sbb
pop
lods
pop
xor
xor
jp
jmp
mov
ds
sub
outsl
cmp
push
shl
les
lds
or
jmp
mov
adcb
cmc
cmp
jns
xchg
mov
jmp
in
pop
insl
sbb
or
mov
imul
inc
mov
out
movsl
pushf
arpl
shrb
insb
test
cmp
stc
outsl
push
mov
ds
mov
mov
pop
lcall
je
adc
add
cmp
mov
or
mov
sub
mov
mov
inc
call
or
andnps
jns
adc
mov
jnp
cld
into
lods
cld
sahf
shrl
cmpsl
mov
test
outsb
and
cmp
int3
jmp
add
dec
idivb
aam
cmp
cmp
cmp
mov
stos
mov
adc
popf
mov
lea
fildl
pop
mull
fsubrl
sbbb
aas
cmc
call
pop
enter
out
in
pop
mov
add
mov
add
sub
inc
fildll
daa
mov
xor
call
daa
outsl
outsl
aaa
push
repz
and
adc
jno
cmp
xchg
dec
js
add
ret
pusha
push
mov
std
mov
inc
dec
shlb
nop
fwait
cmc
pop
nop
jecxz
mov
pop
push
sbbl
jmp
sbb
xor
mul
jne
out
mov
dec
and
les
cs
test
adc
pop
xchg
jnp
inc
in
sbb
arpl
sbb
cmc
int
int3
mov
dec
mov
mov
mov
dec
pop
pushf
sub
ret
mov
mov
mov
bnd
outsl
jmp
sahf
inc
jmp
xchg
dec
pop
mov
sti
outsl
jae
pushf
outsl
sar
mov
push
pop
aas
pop
rolb
les
sub
adc
mov
fcmove
call
push
movaps
sahf
inc
fwait
cmp
cmp
lods
aaa
repz
adc
data16
xor
xor
dec
lcall
jmp
jb
adc
or
out
push
in
mov
inc
mov
fistpll
inc
aad
inc
dec
dec
in
mov
add
in
add
out
fldl
dec
adc
daa
or
xchg
push
ficomps
sti
mov
fsubrl
inc
fdivp
out
sub
mov
and
sub
jno
pop
lahf
sub
lods
faddl
in
bnd
xchg
lret
inc
adc
xor
mov
jecxz
or
mov
sbbl
insl
add
test
repnz
or
push
andl
sub
ja
in
pusha
jns
inc
test
jp
push
mov
push
mov
cltd
xchg
inc
gs
repz
fidivrl
add
or
pusha
call
test
xor
lahf
adc
mov
ror
adc
ret
out
cld
or
mov
pop
faddp
pop
stc
mov
mov
js
shll
cs
add
or
sbb
scas
push
int3
aam
fstl
sbb
pop
cmp
push
scas
movl
cmp
sbb
mov
mov
stc
mov
inc
call
cmp
jg
cmpsl
mov
mov
mov
mov
dec
int
fidivl
leave
cmp
xor
push
pop
dec
dec
jge
rclb
lahf
or
mulb
aaa
fucom
jp
mov
pop
rcl
fildl
mov
mov
pop
mov
aad
and
orb
mov
aam
das
enter
mov
sbb
js
pop
movsb
popa
sub
jbe
xchg
mov
jb
mov
int3
mov
sub
cwtl
xchg
jmp
gs
cmp
push
jmp
sbbl
fwait
out
sbb
mov
xchg
add
lods
xchg
mov
shl
xchg
jbe
push
and
iret
cmp
or
jmp
jecxz
pop
and
adc
or
jo
ss
pop
pop
mov
inc
or
cltd
mov
xor
push
jmp
jmp
mov
leave
sarl
cmp
adc
ja
aam
jb
in
mov
add
sahf
xchg
xor
mov
fldcw
sub
mov
lods
cmp
test
pop
inc
cmp
sbb
stos
add
fildll
push
jp
mov
xlat
fistpl
clc
lods
bnd
cmpsb
fisubrl
xor
lds
lods
pusha
fiaddl
daa
lock
sti
pop
in
and
gs
in
popl
cli
push
pop
mov
xchg
scas
lea
and
test
addr16
sbb
fisubrl
dec
scas
out
nop
add
inc
arpl
inc
push
jmp
mov
sbb
mov
pop
subb
loopne
in
mov
mov
in
in
sti
and
aad
ret
in
xchg
or
je
gs
sub
sub
xor
es
dec
mov
cmpsb
dec
cld
inc
or
xchg
sub
repnz
mov
mov
stc
js
dec
cmp
outsb
aad
stos
out
lods
pushf
fwait
dec
pop
test
in
or
sub
jns
push
inc
mov
shl
lret
xchg
mov
in
fadd
out
sub
add
in
cwtl
aad
out
pop
and
jnp
ss
jnp
stos
jae
sbb
jmp
aam
lret
sbb
bound
mov
popf
sub
pop
jae
fcmove
jl
fsubrp
pop
bnd
arpl
lock
fisttps
iret
lods
jmp
jno
stc
or
sbb
jecxz
adc
aam
dec
nop
aas
xlat
jne
fwait
jl
pop
sarl
jg
sbb
push
mov
js
lahf
mov
mov
add
lcall
sub
mov
cs
sub
jp
pop
xchg
mov
mov
jp
out
mov
vmread
or
jo
out
ljmp
jge
and
arpl
insl
lods
enter
scas
jecxz
stos
xchg
sub
popa
pop
pop
mov
xor
sbb
ss
mov
jnp
mov
inc
movsb
mov
sub
sub
fcoms
jmp
dec
lds
mov
sbb
jecxz
fwait
push
mov
shr
mov
icebp
mov
add
stos
bound
jae
push
loopne
cwtl
fildl
in
das
push
push
sub
sbb
push
mov
sahf
add
xor
clc
jle
fidivrl
inc
mov
mov
xchg
lcall
repnz
out
xchg
into
add
mov
shll
aaa
sub
push
or
pop
mov
xor
shlb
stos
fisttpl
call
fstpt
cmp
cmp
cmp
test
es
repnz
cwtl
loop
mov
pushf
orb
jmp
jg
or
jnp
mov
mov
adc
out
rcrb
es
jno
cmp
stos
in
jae
pop
es
push
stos
leave
int
xor
or
inc
scas
cmp
in
push
nop
lods
inc
xchg
xor
jmp
xor
insl
jp
iret
js
stc
adc
mov
js
mov
arpl
mov
mov
out
push
pushf
insl
cmp
pop
addb
push
jg
adc
pop
xor
push
mov
mov
int3
push
ja
insl
cs
or
aaa
pop
dec
shlb
cmpsb
enter
jmp
cltd
sahf
and
xchg
insb
xchg
ficompl
lods
fisubl
mov
aad
and
and
jo
push
and
jmp
hlt
mov
pop
pop
in
fldenv
jno
sbb
ror
imul
test
pop
pusha
mov
push
jnp
pop
xchg
std
mov
sub
leave
push
addb
sbb
test
dec
push
jmp
add
jge
xor
rcrb
inc
add
add
adc
pop
push
xor
test
clc
leave
addl
fildl
psllq
push
cli
jns
dec
jns
insl
mov
sti
xor
outsl
fs
jns
jno
xor
enter
pop
cwtl
lea
mov
adc
or
ljmp
xchg
cmc
sbb
dec
push
dec
pop
adc
mulb
out
gs
mov
jne
out
jg
std
push
cmpsb
jle
stos
xor
test
cmpb
or
push
ja
je
cli
adc
mov
xchg
daa
movsb
in
add
das
xsaveopt
imul
jno
jne
adc
push
push
dec
lret
pop
mov
sub
inc
je
repz
xchg
sub
mov
jmp
jno
mov
test
or
add
cmp
xchg
fwait
xchg
mov
inc
lret
test
fwait
adc
es
add
int3
xor
push
adc
sbb
es
push
dec
rcr
imul
and
push
fidivrs
xchg
fbld
mov
sub
push
lret
aaa
mov
push
add
aas
mov
loop
je
jb
push
mov
mov
jmp
leave
pop
and
fldcw
xor
push
jo
mov
push
lods
push
loopne
lock
add
aad
add
jle
fwait
scas
call
dec
dec
mov
notl
dec
stc
sbb
rclb
sbb
or
sub
lretw
dec
jb
roll
and
in
les
or
call
add
pop
jmp
ja
mov
mov
mov
ljmp
ret
cmp
in
mov
adc
bound
scas
insl
xchg
jns
xor
es
cmp
es
add
sub
cmpb
cmpsb
jo
bound
loope
adc
cmp
sub
jae
test
sti
outsb
dec
mov
jne
adc
lods
pop
fwait
cmpsl
push
loopne
stos
jo
add
sahf
pop
add
cwtl
shlb
testl
fistl
push
sti
lcall
in
and
out
or
xchg
inc
js
or
ret
add
cmp
and
iret
cmp
loop
popf
lock
in
jno
in
sub
lret
lods
stos
es
dec
add
sbb
imul
jge
inc
mov
mov
sub
fidivrs
lcall
xchg
ret
decb
lods
mov
cmp
fcmovne
cmp
adc
cmp
repnz
add
xor
adc
divl
xchg
mov
cmpl
je
cmp
rorl
lods
stc
adc
cwtl
xor
mov
inc
or
icebp
push
fbstp
fwait
adc
sti
dec
insl
mov
inc
popa
adcb
sub
sub
loope
int3
divl
pop
popf
xchg
sarb
dec
stos
sar
daa
out
shrb
in
add
mov
jne
mov
sub
mov
outsl
call
dec
jbe
pop
and
ss
mov
int
sbb
das
sti
cli
out
jbe
into
mov
mov
in
dec
pop
mov
adc
stos
mov
lret
jb
add
imul
pop
mull
sbb
jecxz
clc
aam
sub
dec
fcompl
mov
push
mov
xor
lods
mov
nop
sbb
stos
lea
xor
lock
and
enter
scas
les
xor
sub
push
sbb
outsl
mov
femms
xchg
adc
jb
pop
mov
pop
fbld
rclb
push
mov
jns
add
movsl
xor
shll
insl
xchg
loope
fistps
add
xor
push
and
and
pop
cmp
push
subl
xchg
in
in
push
and
mov
push
scas
inc
xchg
hlt
pop
mov
inc
inc
cmp
fs
popf
mov
cmp
lahf
xor
ss
cmpsb
inc
out
jnp
jne
imul
popa
cmp
fsub
in
fmull
das
bound
enter
jmp
pop
insl
add
or
fcomps
pop
adcl
xor
idivb
mov
mov
pop
pushf
movsb
jp
sbb
sbb
xor
inc
add
sbb
sti
cli
inc
sbb
mov
into
lods
shlb
das
inc
jnp
sti
loop
add
adc
cmp
sbb
bound
mov
nop
cwtl
cs
aad
sbb
lahf
fs
mov
inc
dec
loope
loop
hlt
gs
sub
pusha
pop
jmp
xchg
sbb
cwtl
inc
dec
dec
pop
add
pop
insb
aad
scas
and
mov
jo
mov
iret
sub
inc
insb
push
mov
outsl
repnz
lods
or
mov
je
sarb
out
cli
mov
cmpsl
mov
aas
lcall
jbe
gs
xorl
cmp
mov
fidivrs
std
out
or
xor
pop
ficompl
icebp
insb
inc
fsts
loope
int3
mov
stc
cltd
shlb
mov
in
cmp
push
xor
insl
mov
xchg
cwtl
jmp
mov
push
lcall
xor
mov
and
int3
dec
sti
scas
push
sub
jmp
pop
xor
decl
adc
jecxz
cmp
add
lds
lea
loopne
es
insb
movsl
jmp
mov
fcmovnu
adc
jbe
aas
sbb
lahf
shrl
xor
add
das
mov
add
push
pushf
mov
sbb
jns
test
fildl
sbb
stc
aad
data16
xchg
sbb
dec
inc
out
fsubrs
xchg
mov
and
lahf
xchg
xchg
mov
pusha
and
push
xchg
jecxz
lock
rcll
dec
test
inc
inc
pop
lock
sub
test
inc
add
push
pushf
pop
jg
popa
mov
sub
pop
lock
xchg
adc
cmp
hlt
jo
jmp
and
outsb
jmp
add
adc
ret
dec
cmp
into
test
xchg
loopne
sbb
stos
das
fdivrs
mov
aam
imul
popf
lret
lods
ret
out
pop
in
in
or
mov
xchg
jbe
aam
mov
loopne
push
cmpsl
and
mov
fisubs
cmpsl
and
adc
xchg
push
cmp
bswap
and
mov
mov
xor
xor
repnz
adc
and
cmp
sub
jle
jno
adc
jge
or
ror
mov
aam
mov
fiaddl
stos
dec
clc
sbb
jg
jg
adc
repz
fwait
dec
and
adc
mov
sub
adc
and
out
add
and
call
popf
dec
and
cmp
decl
outsl
or
jmp
out
lahf
mov
sbb
adc
mov
xlat
dec
mov
and
xchg
mov
ficoms
into
cld
cmp
jmp
mov
stos
fnsave
sti
sbb
pop
je
xlat
mov
xchg
scas
pop
hlt
mov
mov
sbb
lods
add
lods
xor
xor
pop
push
idivb
inc
outsl
mov
cmc
popa
inc
scas
fstl
sbb
imul
lret
cmpsl
icebp
pop
filds
ja
lods
and
sarb
adc
pusha
fdivl
xchg
mov
xchg
inc
push
popa
clc
in
repnz
add
out
add
lock
dec
imul
shrb
mov
int3
neg
cltd
sub
jp
leave
xor
sbb
mov
add
shr
into
test
mov
sbb
fbld
fs
mov
xor
jle
mov
testb
jo
out
aaa
ror
rcrl
mov
mov
mov
insl
mov
lahf
call
inc
cmp
cmpsl
mov
sub
jmp
nop
jle
insl
ficoms
push
cmpsb
out
sub
insb
cmp
jg
lock
add
pop
testl
hlt
sub
test
push
pusha
jb
pop
push
push
les
push
lret
cmpsl
cli
xchg
addr16
xchg
mov
jbe
xor
cmp
lahf
mov
xor
loop
add
std
or
jecxz
mov
scas
cmp
pop
out
jno
fwait
icebp
rep
addr16
adc
mov
or
aad
inc
add
push
add
inc
mov
pop
mov
loopne
mov
les
insb
pop
in
ret
shll
movb
mov
jb
js
rclb
pop
cmp
shld
sub
idiv
mov
ficoms
inc
ret
gs
ja
adc
jg
imul
xor
aas
mov
jp
adc
movsl
xor
mov
aam
sub
ss
es
fs
cltd
dec
lret
lea
fiadds
and
fnstcw
pop
jl
push
mov
mov
gs
and
pop
pop
pop
xor
mov
out
imul
jnp
dec
xchg
xlat
arpl
mov
loopne
inc
imul
das
inc
fwait
gs
shlb
mov
adc
or
push
lea
mov
jns
sub
lret
fmul
inc
daa
xor
cmp
les
cli
rcll
inc
inc
pop
xor
mov
lret
subl
push
rcll
cmpsl
inc
xchg
insb
roll
sbbb
icebp
daa
xchg
push
jo
jae
ljmp
je
das
cli
lods
repz
scas
push
xor
cltd
push
in
sub
mov
add
push
rcrb
mov
jmp
jns
mov
pop
lahf
out
push
dec
idivl
jp
shrb
mov
insl
flds
pop
and
add
sbb
pop
mov
fs
pop
jecxz
rorb
and
xor
addr16
aaa
push
push
clc
and
imul
jmp
mov
out
lret
or
mov
push
jo
sub
enter
mov
or
push
or
or
mov
test
js
push
rorb
or
insb
mov
sbb
outsl
xchg
stos
or
push
pop
loopne
mov
sbb
in
mov
dec
jb
pop
mov
mov
cmp
outsb
scas
pop
stc
leave
int
adc
jae
es
mov
mov
push
and
out
jo
push
pop
popf
or
pop
mov
pop
and
dec
jle
sbb
xor
xchg
push
mov
dec
push
movsb
clc
cltd
popf
pop
push
dec
daa
xchg
sub
cmpl
jg
cmp
in
xor
dec
aaa
jl
mov
stc
adc
push
adc
out
js
test
inc
ficoms
in
lods
lret
and
or
xchg
sbb
fmuls
jne
mov
sbb
fs
pusha
out
adc
sub
cmp
leave
xchg
xor
xor
dec
fstl
fadds
sbb
inc
lods
cmp
sti
ss
adc
push
pop
jns
and
sub
roll
int
subb
push
lret
push
out
repz
movsb
jmp
outsl
negl
outsl
inc
jecxz
ret
fnstsw
push
push
lahf
mov
push
mov
xor
idivb
jo
inc
add
inc
pop
fldt
push
xchg
testb
stos
js
push
jecxz
mov
out
or
js
mov
fimull
sub
or
jae
or
mov
repz
sub
jmp
divl
jb
mov
jno
sub
test
lds
add
mov
leave
cmp
std
mov
lret
cmp
rorl
dec
iret
dec
push
mov
pop
rcrb
lret
rorl
rol
call
sub
movsb
insb
fcoml
pop
and
aam
inc
xchg
xor
aas
repz
mov
sbb
jnp
xchg
dec
cmp
sub
movsl
and
adc
out
mov
sub
and
cmp
js
jg
data16
call
dec
sahf
popa
lahf
xor
dec
xchg
fistpl
fnstcw
das
imul
movsb
pop
inc
add
in
scas
jle
jo
sbb
push
roll
lods
fwait
lahf
dec
addl
mov
mov
adc
test
mov
xorb
push
mov
pop
mov
int
push
mov
aam
cmp
insl
ja
div
mov
inc
cmp
ss
mov
sbb
pop
or
dec
push
repz
cmpsl
popf
sbb
dec
ret
lods
cmp
mov
ss
mov
or
xchg
pop
and
test
shlb
xchg
xchg
xor
call
ljmp
jl
sbb
out
int3
ss
out
sub
insb
fsub
xchg
imulb
jge
push
movsb
mov
and
jecxz
clc
inc
cmp
jg
lods
sub
ficompl
jnp
cmp
mov
das
inc
dec
inc
mov
mov
sub
or
js
push
and
outsl
sbb
mov
mov
stos
xor
and
cmp
mov
push
inc
sub
inc
fs
mov
push
in
int3
xchg
sbb
imul
lret
out
sub
idivb
pop
insb
cmp
add
xchg
mov
ljmp
sahf
mov
cmp
jecxz
repnz
mov
fst
sub
mov
add
dec
inc
in
jno
movsl
fsubr
xchg
cmp
int
add
scas
inc
ss
in
arpl
fldcw
add
in
sbb
imul
sbb
cmpsb
shlb
push
push
and
les
adc
mov
ret
cld
pop
sub
pop
iret
lret
xchg
pop
stos
lock
aam
sub
sarl
mov
mov
sub
mov
divb
xor
mov
loopne
mov
xor
dec
in
pop
sbb
test
cwtl
mov
aad
mov
into
push
mov
mov
imul
pop
and
add
and
mov
scas
out
sti
insb
sbb
shrb
insb
je
inc
flds
push
mov
into
sbb
repz
ret
out
jns
ficomps
imul
addr16
and
and
es
xorl
pop
fs
mov
dec
lds
push
data16
mov
inc
dec
repz
scas
das
mov
lret
scas
sti
nop
cmp
jmp
add
cmp
xor
ret
mov
movb
sub
ds
loop
lods
imul
inc
dec
inc
and
ret
pop
cmp
dec
imul
mov
jnp
xchg
sub
add
fs
adc
push
jp
jb
mov
loope
push
daa
jle
iret
xor
leave
shrl
pop
popf
outsb
jbe
xchg
cmp
call
cs
mov
call
les
pop
push
lret
mov
out
fisubrl
leave
in
dec
stos
dec
add
xchg
iret
mov
repnz
xlat
sbb
mov
cwtl
shl
arpl
xor
mov
add
ljmp
or
push
cmp
fildl
andl
inc
test
inc
dec
loopne
sbb
jno
jmp
add
scas
fisttpll
cmp
push
gs
cltd
cli
imul
pushf
xor
lahf
fsts
xchg
arpl
jb
dec
cmpb
mov
jnp
insb
vphaddubw
loop
stos
insl
aad
orl
into
fiadds
jo
cld
mov
loope
jecxz
aam
lock
andl
ss
xchg
out
xlat
leave
push
push
enter
call
dec
add
or
adc
dec
add
sbb
jecxz
std
and
sub
es
stos
pop
cltd
inc
lods
pop
sbb
inc
push
lds
cmp
xchg
sub
pop
jp
jb
notl
outsl
jno
inc
xor
xor
rcl
xchg
lock
add
not
jmp
call
lahf
jmp
cmpsl
jmp
inc
xor
test
pop
mov
push
sub
lret
dec
int
xchg
das
leave
or
jp
and
lods
cmpsl
push
push
xchg
insb
das
mov
lds
popa
dec
mov
addr16
mov
in
and
ret
ds
stos
clc
jbe
dec
jg
cmp
xlat
xchg
and
arpl
ss
js
or
lret
xor
xchg
push
sbb
cltd
mov
sbb
scas
fnstenv
mov
push
in
or
mov
mov
lods
fs
or
ljmp
push
mov
push
sbb
sarb
jb
push
jnp
xor
dec
xor
shll
cld
xor
jae
shll
shlb
mov
pop
lods
jg
cwtl
test
push
dec
add
sbb
lahf
cmp
scas
and
dec
shl
stos
pop
out
iret
je
xor
loope
mov
xchg
cli
cmp
dec
test
std
pop
sbbb
test
movsb
and
adc
ds
test
shlb
cs
test
xlat
inc
call
adc
movsl
stos
jnp
int
fstps
inc
dec
shlb
popa
pop
cmp
in
mov
cmp
adc
in
or
js
push
lahf
jecxz
push
cli
shl
aaa
sub
jo
mov
xchg
adc
mov
imul
lahf
pop
jle
xchg
imul
cmp
aam
sbb
popf
mov
pop
cltd
fsubl
add
pop
mov
pushf
or
xor
dec
mov
mov
sub
cli
adc
mov
jecxz
cmp
in
fwait
adc
add
xor
pushf
scas
mov
add
scas
imul
out
add
mov
mov
mov
mov
sahf
std
cli
inc
ret
leave
mov
jns
jmp
and
jne
nop
sbb
cli
xlat
cmp
sbb
xor
add
rclb
jp
shll
push
cmp
mov
adc
cmp
sub
and
lcall
xor
jmp
jns
jmp
dec
mov
clc
push
iret
mov
call
aas
das
test
icebp
jno
imul
xor
ret
cmp
idivl
bound
xor
or
test
jmp
push
cmp
mov
iret
jbe
pop
dec
mov
mov
rclb
in
sub
cmc
xchg
leave
inc
jge
mov
add
and
or
mov
sub
daa
es
mov
insl
out
sbb
cmc
pop
push
sub
stos
mov
aam
out
xor
int
mov
add
mov
aam
movsb
add
fdivs
cmc
push
lds
push
test
dec
adc
mov
jg
cmp
inc
fistl
cmp
scas
and
cld
adc
subl
repnz
push
sbb
sbb
push
hlt
es
pop
mov
add
and
pushf
mov
adc
cmpsl
lods
in
cmp
mov
sbb
push
jl
jb
pushl
push
movsb
aam
push
mov
loopne
aad
iret
or
dec
pushf
pop
cs
imul
fs
clc
push
outsl
aaa
mov
mov
push
bound
mov
iret
int3
movsl
inc
popa
imull
lock
std
jb
mov
mov
adc
addb
mov
subb
fldl
push
out
xchg
mov
fbstp
and
nop
aad
pop
sbb
neg
jns
cmp
aas
inc
mov
out
pusha
mov
in
stos
adcb
xchg
jne
xchg
sub
sub
jnp
mov
rorb
sub
inc
mov
dec
insl
jl
aas
inc
inc
arpl
adc
cmp
in
dec
mov
push
test
inc
ss
fildll
addr16
mull
dec
inc
incl
push
push
push
adc
jo
popf
xchg
xor
adc
fistl
fisubrl
int
mov
mov
out
pop
pop
xor
mov
bound
cmc
pop
cmpsb
loope
jecxz
jmp
ficompl
into
push
sub
jle
insb
imul
repz
movsl
clc
fdivrs
test
dec
pop
mov
pop
cmp
sahf
mov
das
out
jns
add
js
pop
es
dec
daa
mov
fsubs
scas
ret
jb
out
jno
in
cwtl
movsl
mov
ret
inc
lret
cmp
mov
sub
jp,pn
inc
sub
dec
mov
rcrb
je,pt
mov
pop
sub
and
into
stc
std
xor
adc
jae
and
push
xchg
into
jnp
inc
or
adc
xor
xor
adc
dec
xchg
xchg
icebp
jg
ret
jb
pusha
and
jmp
sbb
xchg
xchg
and
cmp
int3
mov
mov
mov
ror
xchg
mov
cld
std
shll
cli
mov
lret
enter
jmp
sbbl
es
push
pop
stc
jbe
mov
cmpb
hlt
adc
jne
push
and
inc
es
lds
out
popf
adc
xor
andl
push
sarl
sbb
push
inc
lock
cmp
cmpw
mov
sbb
movsb
dec
call
lds
push
add
push
and
inc
lcall
aam
in
xchg
xchg
push
cmp
ret
mov
cwtl
add
inc
push
imul
lcall
in
gs
pop
lret
add
push
cld
mov
out
xor
lahf
lods
push
int3
dec
dec
dec
sbb
fisttpl
add
xor
or
fisttps
inc
mov
movb
mov
cmp
test
xchg
sbb
lret
mov
push
xor
ds
mov
sti
dec
mov
pushf
mov
xor
pop
xchg
repnz
inc
cmp
fwait
jmp
hlt
pusha
mov
xchg
xchg
cmp
enter
repnz
sbb
int
add
and
jecxz
push
mov
adc
cmpb
add
push
outsl
inc
ret
inc
dec
pop
pop
sub
fistl
clc
push
add
pusha
mov
test
xor
lcall
sbb
pop
and
shrb
mov
jbe
aaa
push
sti
cld
jecxz
cmpsb
adc
decb
andb
lods
sbb
jg
std
stos
es
sub
ret
in
mov
jbe
sub
lret
out
addl
fsubrs
pop
pop
lds
out
xchg
sub
and
cmp
repnz
xor
cmp
jecxz
cwtl
inc
in
clc
cmp
sub
insb
imul
xchg
mov
push
outsb
pusha
addr16
pop
iret
xor
adc
scas
lods
xor
cwtl
fdivl
mov
cmp
and
jmp
inc
fcomi
lahf
adc
push
ljmp
dec
jmp
das
or
ret
add
or
fsubrl
addl
jne
jmp
adc
popf
movsl
add
icebp
mov
clc
out
xor
int
mov
movswl
push
mov
pop
ss
mov
fbld
imul
push
std
jbe
jle
pop
xor
ja
pop
push
fbstp
push
bound
xor
dec
mov
add
mov
xchg
push
loop
mov
xor
ljmp
daa
iret
xor
lret
pop
xchg
jae
aam
push
and
inc
sahf
mov
lcall
fcomps
dec
push
xchg
xor
xchg
xor
sub
and
xor
cmp
xor
inc
js
xor
popf
dec
je
pushf
and
jp
out
in
jmp
movsb
in
and
adc
push
fistpll
mov
pop
sbb
fs
cmp
jnp
cmp
jl
pop
mov
inc
push
insb
sbb
in
enter
dec
sub
adc
push
xchg
ljmp
and
fidivl
xor
sub
lock
imull
adc
xchg
fsts
sahf
cmp
test
dec
icebp
loope
imul
mov
lfs
xor
mov
roll
cmpsb
je
int3
xor
pop
jmp
in
mov
dec
or
sbb
clc
push
andl
fwait
nop
push
push
pop
sub
pop
mov
jb
pop
lahf
push
lods
sbb
jne
inc
mov
sbbb
into
shrl
js
xchg
mov
sub
cmpsb
adc
adc
sub
inc
dec
jns
dec
in
test
inc
aad
into
cmp
dec
lret
fistpll
adc
add
test
sub
and
push
xchg
jp
push
adc
mov
inc
adc
aas
cmp
les
and
loope
xchg
mov
mov
push
or
jmp
fsts
pop
enter
test
and
in
sub
lret
jns
pop
jle
cmp
imul
in
ss
dec
pop
push
pop
cmp
notb
jne
enter
ds
cli
push
push
mov
dec
fdivrs
xchg
jbe
pop
cmpsb
mov
les
mov
popf
decb
jle
movsl
daa
testb
dec
es
sbb
dec
jne
jmp
fnstenv
arpl
sbb
sbb
cmp
jecxz
in
ss
in
adc
cmp
decb
xor
and
jp
data16
dec
xchg
sahf
push
movsb
ss
cmpsb
dec
xor
test
je
mov
addr16
inc
or
and
dec
mov
or
lahf
dec
ret
clc
in
test
pop
cmp
inc
rol
fs
popa
xchg
and
addb
insb
mov
jl
popa
into
aad
out
mov
gs
sbb
std
dec
pop
clc
imul
mov
xorl
pop
lcall
out
mov
sbb
xchg
cmc
hlt
adc
sub
mov
shl
ja
push
dec
mov
mov
pop
dec
sbb
out
xchg
xchg
je
jb
inc
xor
lret
or
dec
call
gs
pop
mov
xor
sahf
mov
stos
mov
sub
lds
jnp
data16
js
shrl
aad
cmp
cmp
pop
sahf
pop
mov
lods
pop
cmp
ficoms
aam
mov
jg
mov
and
push
popf
leave
mov
xor
cmp
out
push
jle
sbb
data16
fsubl
pop
sub
pushf
popf
sti
adc
mov
dec
mov
fists
sbb
outsb
push
lahf
popf
jmp
in
sbb
inc
xchg
js
add
cmp
mov
xchg
push
sub
scas
jecxz
shrb
dec
jbe
mov
lret
in
int
stos
xchg
xchg
ret
adc
xchg
fmull
sbb
xlat
sbb
cmp
xchg
mov
div
xchg
pop
adc
adc
push
xchg
mov
mov
jno
mov
dec
sub
xor
jg
ds
fsubrp
inc
ss
movsl
loopne
les
xor
imul
adc
rol
popa
popa
sub
rcll
or
push
das
push
mov
inc
add
xlat
js
ror
int
dec
sub
xor
and
ret
leave
stc
sub
scas
xor
sti
mov
in
xchg
xchg
dec
pop
nop
pop
pop
mov
xchg
hlt
fildll
in
jl,pn
shll
sbb
inc
or
cli
mov
hlt
imul
clc
scas
js
push
pusha
push
das
mov
out
addl
in
stos
jmp
lret
push
inc
xor
mov
insb
jbe
push
in
cmp
into
nop
pushf
mov
sbb
rorl
inc
rcr
inc
pop
xor
mov
sub
jae
out
test
jno
fdecstp
mov
inc
jle
and
subb
mov
rorb
mov
mov
jmp
cmc
mov
into
mov
push
jecxz
jp
aaa
or
adc
adc
add
mov
negl
jl
sbb
fwait
subb
jecxz
movsl
jle
adc
push
mov
cmp
cmp
insl
adc
jecxz
xlat
fldl
push
push
jp
into
icebp
sub
push
stos
enter
or
cwtl
jl
mov
sbb
cld
mov
test
push
daa
fildll
hlt
xorb
push
cmp
push
inc
cmp
push
jmp
daa
mov
add
cltd
rclb
jge
xchg
div
dec
xchg
pop
mov
insl
xchg
jge
je
popf
xor
xchg
and
out
jg
lock
cmp
jnp
incl
and
sub
stos
xchg
jle
cmpsb
push
cli
or
fbstp
xor
adc
imul
jb
and
xor
out
mov
outsb
movsl
arpl
out
ja
aam
xchg
outsb
popf
cmova
or
cli
adc
dec
sbbb
inc
xchg
aas
fwait
leave
lea
ret
out
lea
into
adc
fwait
or
push
insl
lea
int
or
xchg
pusha
mov
dec
daa
inc
add
in
dec
jmp
jne
test
dec
adc
mov
adc
xor
and
inc
jne
mov
pop
dec
dec
mov
jecxz
aam
mov
pop
adc
std
sub
adc
out
xchg
lock
jns
test
jmp
mov
push
jns
sub
jmp
insl
mov
push
lcall
int
idivl
mov
inc
mov
pop
rcrl
pop
out
mov
xorb
pusha
bound
inc
jecxz
movsl
cmp
sti
divb
mov
repz
js
sub
popa
pop
and
shlb
mov
jmp
mov
push
mov
adc
ja
sub
mov
arpl
sub
sbb
popa
jmp
neg
push
xor
and
pop
mov
aaa
dec
xor
xor
push
adc
in
push
popf
les
mov
dec
mov
xchg
bnd
mov
cmp
mov
scas
mov
nop
jmp
push
mov
xchg
ds
insl
add
push
sub
dec
icebp
ss
outsb
adc
les
fstl
mov
jno
cmpsb
mov
mov
aaa
lahf
push
js
out
leave
outsb
jo
pusha
shlb
lret
inc
pop
mov
or
roll
dec
mov
aam
and
jne
mov
lret
cli
outsb
jns
jge
shl
mov
in
arpl
jecxz
cld
sub
pop
dec
and
add
xchg
and
pusha
sbb
mov
sti
call
jg
mov
sbb
daa
test
mov
mov
out
mov
test
scas
push
add
insl
in
sbb
and
cwtl
pop
div
andl
je
pop
gs
arpl
mov
sti
inc
test
inc
test
adc
mov
mov
sub
push
pop
popl
pop
popa
mov
das
nop
rclb
inc
imul
pop
aaa
sbb
clc
fcmove
hlt
mov
sti
inc
jne
fdivr
and
cld
fwait
jge
add
fildll
and
xchg
dec
mov
add
mov
jnp
cmp
jecxz
add
mov
mov
sbbl
aas
xchg
xor
cltd
daa
add
push
les
fucom
lock
fcompl
xor
xchg
fadd
push
lcall
jbe
cmpsb
mov
mov
test
and
mov
shlb
jmp
push
sub
ror
test
in
jne
mov
cld
fdivrs
mov
adc
pop
push
xchg
js
inc
mov
jb
jmp
sbb
xor
pop
mov
lds
jle
cmpsl
dec
adc
sbb
fs
push
push
or
sbb
out
test
sub
rcl
xor
and
xchg
hlt
sbb
fsts
popa
fsubrs
pop
test
push
aam
push
imul
aam
ss
xor
and
das
and
test
mov
jmp
xor
scas
sbb
xchg
mov
add
in
test
imulb
cmpsl
mov
in
dec
inc
xor
push
pop
jg
loopne
cmp
hlt
inc
or
mov
mov
push
mov
fmulp
fists
cmp
and
outsb
push
dec
pop
test
push
out
cmp
shrb
sub
cld
gs
adc
std
cmp
push
in
gs
cmc
jb
std
leave
icebp
int
sti
xchg
or
lahf
inc
and
pop
test
bound
fisttpl
xor
loop
xor
fisubl
int3
pop
or
lahf
js
inc
lret
dec
add
lods
shlb
or
jbe
imul
mov
stos
insl
sbbb
push
mov
and
xchg
xlat
hlt
mov
xlat
mov
fcomps
pop
js
mov
aas
addr16
out
jp
into
add
push
movsl
add
int
imul
push
adc
push
mov
pop
sbb
test
xchg
pop
sub
sub
cli
or
inc
popf
add
aaa
mov
imul
movsl
call
cmpsb
push
add
jns
enter
outsb
xor
add
or
mov
xchg
sahf
sarb
loop
sarl
xchg
mov
inc
into
outsb
dec
repnz
andl
repnz
bound
inc
jle
sbbl
xchg
mov
sahf
push
lods
xchg
mov
rcl
movsl
and
cs
xchg
pop
cmpsl
pop
mov
push
jns
inc
out
insb
stos
lods
das
cld
movsb
js
xchg
cmp
cwtl
js
insl
iret
push
ds
mov
and
and
jne
fsubrl
pop
cmp
loop
daa
adc
push
cmp
loope
and
lcall
loopne
es
insl
xlat
insb
test
bound
aam
lret
xor
lea
pop
call
stos
sbb
filds
push
inc
in
movl
in
lock
jp
loopne
leave
xchg
jle
push
xchg
stc
outsb
shl
insl
sbb
inc
scas
mov
data16
outsl
cmc
mov
adc
pop
adc
rorl
scas
and
inc
fstpt
dec
fwait
cmp
mov
pop
push
sbb
cltd
fsubl
movsl
clc
es
les
fsts
add
push
cli
mov
jbe
ds
js
lock
sub
xor
shlb
adc
data16
nop
jo
pop
add
insl
mov
sahf
xor
ret
and
pop
cmp
lea
xor
cs
xlat
gs
movsb
pushf
push
leave
cmpsl
ljmp
ja
movsb
mov
outsl
stos
push
lret
std
nop
push
inc
inc
repz
cmpsb
aas
push
xchg
xchg
or
adc
mov
arpl
mov
cmp
add
stc
push
push
insb
xor
add
rolb
loopne
and
dec
aas
xor
das
lock
sub
test
inc
aas
nop
inc
mov
push
xchg
xlat
push
add
xor
shlb
pop
and
outsb
mov
cmp
lods
and
out
or
lahf
push
rcll
in
mov
sub
leave
fwait
lcall
loop
mov
mov
cwtl
xchg
and
jecxz
das
jns
adc
mov
push
xchg
add
rcr
shlb
lock
movq
repz
jecxz
mov
scas
test
imul
stos
pushf
pop
arpl
aad
push
out
adc
cmp
psrld
jno
push
mov
mov
jns
js
repnz
andb
and
xorl
mov
iret
stc
sbb
push
dec
adc
arpl
inc
test
jmp
inc
mov
sarl
fldcw
stos
jne
cltd
xchg
xor
mov
call
aaa
and
lea
sub
popl
xchg
int3
push
in
adc
fisttpl
ret
out
repnz
push
je
adc
inc
cld
js
cli
cs
das
aaa
adc
stc
mov
ja
sub
add
dec
mov
rclb
movsb
daa
cmp
shrb
ja
jge
xchg
add
test
push
jle
jne
fsubrs
adc
rorl
dec
loope
add
pop
nop
push
cmc
sbb
rcll
orl
sub
rcr
mov
pop
xchg
xchg
in
aad
insb
mov
popa
adc
pop
imul
fsts
jecxz
mov
cmc
cmc
pop
lock
into
sub
int
add
movsb
adc
outsl
lcall
std
in
in
mov
pop
pop
orl
xchg
dec
push
call
cmp
stc
adc
adc
push
lcall
mov
lock
out
jo
inc
xlat
xchg
push
cmp
leave
and
rclb
inc
sbb
pop
leave
or
cmp
add
push
push
pop
sub
in
push
sub
sub
fs
jge
imull
fistpl
lsl
jnp
cli
ret
mov
and
jg
inc
js
push
jns
data16
into
push
jno
jno
cltd
leave
outsl
imull
jne
popf
xor
mov
lret
jns
sub
mov
add
mov
sub
repz
pop
ja
xor
testb
mov
enter
addr16
push
fstl
sub
sub
mov
xor
test
int3
xor
cmp
int3
adc
add
add
sti
cmpsb
pushf
push
shrl
cmp
cmp
mov
sti
push
out
pop
cmovne
test
and
push
outsb
xchg
mov
cmpsl
aaa
out
lret
mov
inc
mov
inc
mov
stos
or
notl
mov
xor
cmp
in
xchg
add
xchg
ret
mul
in
adc
int
or
shrl
leave
sub
xor
add
fstps
jno
test
ret
or
pop
stos
cmc
std
jg
or
rcrl
inc
and
push
mov
sbb
adc
and
loopne
jbe
popa
cwtl
pop
jmp
jle
xor
loope
jae
mov
jmp
fiaddl
and
imul
mov
pop
roll
cmp
jg
out
sbbl
jl
arpl
cmp
inc
cmp
aad
iret
dec
jl
in
gs
cmp
ja
fiadds
clc
sub
adc
pop
add
mov
sub
test
shlb
mov
popf
gs
sub
push
lods
test
jmp
sub
dec
or
adc
mov
in
aad
mov
and
push
das
push
out
inc
pop
cltd
jg,pt
push
xchg
call
aad
out
or
xor
add
push
add
cmp
mov
sub
inc
pushf
ficoml
or
mov
test
or
cwtl
shr
dec
xchg
inc
pop
out
mov
sub
test
in
xlat
hlt
mov
sbb
in
aam
inc
int3
or
jnp
inc
mov
xor
xchg
in
jmp
aas
mov
dec
xor
mov
enter
movsb
fwait
int3
jo
mov
js
imul
mov
inc
adc
outsb
adc
add
cld
fldcw
lea
and
sbb
lea
push
and
nop
xor
push
out
inc
push
mov
insb
shrb
aaa
insb
mov
adc
shl
ss
jmp
cwtl
and
imul
in
loopne
scas
cmp
xchg
xchg
cmp
andb
fildl
in
ror
add
cmpsb
ljmp
sbbb
sbb
xor
or
shlb
lahf
mov
jb
xor
shl
into
scas
in
aam
and
shrb
pop
sahf
pop
or
mov
xchg
or
mov
dec
cwtl
push
cwtl
ljmp
jle
mov
jbe
pop
xor
adc
xor
xor
imul
mov
mov
and
js
mov
or
mov
cmc
push
cmp
mov
pop
inc
fdivrs
xor
rcll
pop
dec
adcb
sarl
jnp
mov
adc
ret
addr16
fiaddl
loop
jecxz
lea
js
lahf
jmp
mov
call
xchg
das
and
out
pop
cmp
xor
pop
adc
stos
loop
fisttpl
fwait
mul
sahf
mov
sbb
xchg
rcrb
mov
arpl
jns
adc
jnp
rcrl
cmp
fwait
push
out
into
or
pop
inc
mov
stos
mov
out
mov
pop
lods
ret
mov
cs
jbe
pop
aad
sub
or
scas
or
add
pop
inc
pop
jbe
or
sbb
rcrb
loopne
add
jo
addr16
inc
shll
jl
mov
lods
nop
xchg
inc
add
xlat
iret
in
je
sbb
repz
ja
int
divl
ret
pushl
lods
jge
or
sbbl
popa
jne
inc
or
dec
inc
add
push
fists
sub
sbb
xchg
push
push
leave
pop
push
les
fsub
sbb
push
push
mov
sahf
int
sbb
lds
jns
push
push
lret
dec
pushaw
push
pop
adc
push
mov
arpl
inc
iret
addl
mov
adc
aad
push
lds
idivl
xchg
or
sbb
mov
dec
cwtl
outsb
pop
fwait
jbe
push
dec
add
xor
inc
and
jo
lret
adc
add
fldcw
dec
add
out
sbb
shlb
or
mov
sbb
mov
mov
push
fcomps
into
lret
dec
imul
pusha
jle
cmpsl
pop
leave
mov
out
ret
lock
dec
cmp
jnp
sahf
xor
inc
xchg
adcb
pop
rclb
mov
out
cmp
mov
fcompl
or
sbb
or
cmp
sahf
or
std
mov
inc
pop
xchg
adc
in
imul
pop
addr16
insl
loopne
insl
imul
push
or
dec
mov
xor
push
popa
mov
inc
outsb
adc
andb
cmp
mov
push
stc
imull
adc
ss
or
jp
outsl
nop
mov
xlat
and
aad
cltd
mov
test
out
jle
cmp
out
mov
xchg
push
scas
sub
xchg
cmp
inc
pushl
xchg
and
aaa
aas
es
or
jg
pop
lods
vmovss
inc
negl
lock
xor
fcomps
scas
imul
push
pop
test
pop
sub
sbb
jno
lret
test
mov
mov
mov
les
sbb
push
adc
xor
clc
pop
or
push
mov
call
jae
loop
fdivp
and
add
push
xchg
or
cmc
fs
mov
push
cltd
push
cld
pop
lods
xchg
pop
cmp
shrb
jo
aas
jecxz
adc
inc
sub
mov
adc
sbb
repnz
and
sbb
sbb
or
aam
gs
xchg
shr
and
or
jmp
pop
hlt
repz
rclb
imul
jae
inc
das
mov
mov
jns
xchg
aaa
pop
in
filds
lds
repz
les
scas
out
in
ljmp
push
push
xor
push
cmpsb
inc
mov
in
pop
mov
dec
andb
mov
cwtl
push
out
xor
mov
int3
xor
and
js
shrb
ljmp
inc
mov
xor
xor
mov
mov
outsl
jecxz
jnp
mov
dec
dec
sbb
mov
sbb
imul
mov
cmp
push
mov
and
test
push
mov
and
mov
jns
and
insb
outsb
repnz
xchg
jb
outsl
leave
stos
push
xor
loope
sub
cwtl
or
inc
xor
fldcw
xor
ficoml
add
in
test
fstpl
mov
mov
test
lock
sbb
clc
push
mov
xchg
lock
fdivl
cli
test
lret
out
test
scas
pop
add
cli
xor
inc
dec
stos
xchg
fwait
cmp
data16
mov
mov
faddp
ds
aad
push
pushf
inc
insl
test
mov
cmpl
fistl
jmp
push
pop
rorl
add
sti
test
mov
ljmp
mov
dec
repnz
ja
pop
out
or
loop
mov
xchg
loopne
jl
mov
popf
sbb
mov
jge
xchg
in
xor
add
inc
mov
scas
push
aam
jmp
imul
inc
push
mov
or
out
out
js
sub
xlat
mov
xor
and
mov
xchg
stos
mov
mov
push
push
daa
lcall
imul
jne
cmpsl
inc
and
xchg
mov
imul
aaa
aaa
xchg
fwait
call
mov
or
scas
hlt
and
xchg
or
mov
mov
test
inc
pop
push
fisubrl
fidivl
call
cmpsl
fcom
push
mov
sahf
inc
sbb
push
pop
lods
je
or
sub
xchg
data16
imul
rolb
scas
insl
jne
pop
sbb
mov
lods
cli
inc
add
xor
mov
fildl
mov
lahf
mov
push
jne
mov
sub
or
inc
dec
cmp
gs
js
jnp
push
inc
addr16
or
ret
out
daa
and
mov
test
xchg
mov
nop
adc
ljmp
and
pop
imul
dec
ljmp
mov
xchg
jb
ds
insb
jnp
sbb
das
adc
test
int3
lds
and
add
adc
movsl
inc
bound
andb
lds
or
fimuls
adc
fs
sbb
jg
shr
icebp
das
sbb
jle
jae
lret
sahf
fxch
pop
testl
xor
cmp
xor
xlat
js
fnstenv
std
outsl
mov
xor
push
adc
mov
or
and
push
mov
popa
nop
mov
pop
sub
imull
es
sbbl
add
dec
mov
jne
xchg
shlb
shll
lret
dec
mov
cmp
lcall
xor
fidivrl
xlat
dec
nop
adc
repnz
cmc
lret
push
stc
push
and
jp
incb
cs
insl
xchg
sbb
and
dec
std
lea
dec
notb
sub
ljmp
movsl
xor
mov
in
je
stos
dec
sbb
call
cmpsb
cmp
je
xchg
sbb
pusha
outsb
xlat
mov
lock
scas
dec
adcb
inc
shlb
insl
jo
cmpsl
imul
cltd
pushf
mov
cmp
in
mov
cmpsl
decb
pushf
sbb
push
or
xor
int
frndint
adc
sbb
shlb
xchg
das
cmp
sub
and
jb
pop
nop
cmpl
test
and
pop
hlt
negb
sbb
inc
adc
iret
dec
scas
or
scas
mov
sbb
mov
jno
inc
xchg
movsb
clc
mov
push
sarl
cmp
and
outsl
mov
dec
ljmp
cmp
jbe
jecxz
inc
test
scas
sbb
jl
push
hlt
or
shll
nop
int3
jmp
cmp
lret
lods
mov
mov
out
int3
out
jnp
loope
test
jbe
xor
fadds
jecxz
out
stos
cli
and
testb
lahf
cs
push
cld
dec
stos
and
mov
in
aaa
sbb
inc
and
data16
add
jmp
pop
sub
leave
std
xchg
pop
shrb
movl
mov
and
add
or
jle
stos
mov
imul
movsb
jns
dec
xchg
add
scas
outsl
into
xor
out
test
lahf
testb
mov
call
loope
fmulp
sbb
testb
xor
xchg
xchg
adc
lcall
push
adc
movsb
or
in
pop
mov
jp
sub
push
jg
push
or
mov
xor
mov
sbb
mov
mov
enter
sti
dec
arpl
sbb
psllw
xchg
sti
pop
add
lods
push
loopne
aas
out
push
and
mov
fmuls
fistpl
mov
sahf
popf
dec
mov
dec
stos
notb
cwtl
mov
lock
mov
xchg
test
add
pop
clc
xor
test
imul
jne
xchg
xor
adc
or
icebp
adc
dec
mov
ljmp
pop
sti
mov
inc
sti
ljmp
arpl
xchg
cli
jbe
inc
scas
fadds
xor
fwait
pop
ret
sbbb
adc
cmp
or
xor
mov
int3
push
inc
int3
mov
add
xchg
xor
and
xchg
add
and
cmp
add
add
rcr
lds
sbb
xchg
popa
je
add
mov
adc
insl
jle
xor
add
test
ret
stos
push
fdivrp
xchg
icebp
lcall
adc
imul
lahf
jg
or
cmp
lock
or
aam
clc
enter
xlat
jl
xchg
push
out
cli
adc
stos
out
push
and
push
cmpl
add
shr
hlt
fld
leave
mov
scas
int3
jne
insl
lds
dec
out
fxrstor
insb
mov
sahf
xchg
ss
mov
inc
mov
xchg
mov
mov
movsb
pushf
in
out
decb
pop
push
shrl
jbe
aas
test
lret
int3
clc
lcall
jmp
sub
push
inc
scas
push
inc
sti
jge
fnsave
xchg
lods
iret
aas
cmc
dec
sbb
xchg
add
repz
mov
sub
add
inc
pop
test
dec
ret
sbb
cli
push
mov
scas
mov
lds
andb
dec
in
adc
cmp
mov
cli
jge
mov
pop
fistpl
or
scas
ret
jge
hlt
and
inc
cmc
stos
shlb
mov
add
mov
jl
jge
mov
fcomps
es
cmp
dec
adc
mov
push
xor
les
aas
cmp
xchg
push
dec
cmpsl
adc
daa
enter
sub
add
xchg
ljmp
and
pusha
inc
mov
mov
lds
cltd
mov
movsb
pop
mov
loop
push
stos
cli
adc
stc
cmp
clc
xchg
popf
mov
dec
dec
jg
fbld
aaa
pop
pushf
or
pusha
movsb
mov
xor
lret
mov
dec
clc
bound
cmp
mov
mov
jo
xchg
pushf
mov
aad
outsl
leave
sbb
lods
mov
cld
add
aam
ljmp
jge
sbb
xor
pop
sti
xor
add
push
adc
mov
outsb
stos
leave
or
or
out
push
xor
outsb
test
adc
or
mov
nop
jne
cmp
xor
cs
test
fmul
xor
jo
xchg
es
mov
popf
xchg
kaddw
xchg
and
push
mov
ja
loopne
mov
push
jp
or
dec
leave
imul
xchg
fildl
call
sbb
lret
mov
andl
cs
jne
idivb
fildl
call
dec
rcr
loop
mull
scas
jmp
pop
sub
test
jae
sbb
add
loop
pop
lea
cwtl
das
xor
sub
jl
test
jmp
lds
jae
mov
xor
cmp
imulb
push
pop
ljmp
jbe
inc
mov
xchg
or
mov
or
mov
lods
cmp
jnp
out
xchg
pop
sbb
lock
ljmp
aam
add
push
dec
hlt
test
mov
cli
pop
mov
xchg
test
dec
dec
lods
daa
and
cs
lahf
ja
mov
push
lds
push
inc
pminsw
jge
fdivrs
in
pop
ror
sub
push
add
push
int
inc
mov
xchg
test
in
push
sahf
fbstp
xor
lahf
sub
int
push
dec
or
jg
add
int3
mov
jg
mov
loopne
daa
shl
je
dec
push
test
stos
jbe
fdivl
leave
test
cmp
cmp
xor
fldl
push
cmp
mov
mov
call
scas
in
jo
divb
enter
scas
add
cltd
xchg
mov
fdivp
lret
and
lods
fisttps
jo
fs
mov
mov
or
clc
ja
mov
jbe
cltd
jne
adc
bnd
aas
xchg
inc
inc
aaa
lret
add
stos
mov
or
cmp
adc
into
inc
jno
and
lds
test
loope
mov
mov
xor
mov
lret
mov
sbb
inc
andb
dec
scas
cmpsb
and
in
jnp
mov
xchg
and
out
mov
dec
xchg
push
jecxz
leave
pop
scas
xchg
popf
insb
jl
arpl
notl
insb
add
loopne
sbb
fmul
jl
fdivl
ss
enter
iret
dec
push
outsb
add
lret
mov
fildll
mov
adc
mov
adc
jp
jmp
lahf
fists
in
cmp
sub
outsl
mov
test
ja
movsb
xchg
xchg
inc
push
hlt
mov
and
push
cmpsl
mov
push
pop
repz
fildl
inc
inc
cmp
lds
cmp
dec
iret
and
inc
xchg
js
insl
out
inc
ljmp
loop
jl
dec
xchg
jl
cmp
aam
mov
fidivl
jg
dec
push
or
fs
pushf
and
clc
mov
sub
addb
pop
or
andb
xor
enter
sub
mov
xchg
xor
in
xor
sub
add
flds
inc
cltd
ja
ja
jae
mov
and
clc
push
lcall
jmp
int3
pushl
stos
lods
sbb
subl
shlb
es
dec
clc
es
cmpb
scas
fs
das
mov
lcall
lock
aaa
jmp
cltd
bound
sar
std
xchg
test
pop
popf
out
leave
testl
in
shl
pushw
add
inc
xor
xlat
std
pop
scas
fcmovb
out
add
addr16
icebp
pop
out
sbb
outsb
daa
cli
psubsw
pop
lods
push
fdivs
into
std
loopne
loope
add
mov
addl
fcom
add
std
mov
ss
jle
sub
jmp
or
gs
mov
into
or
popa
sub
imul
pop
lret
pop
push
fisttpll
out
fsub
sub
pushf
ljmp
mov
insb
negl
shld
rorl
push
pop
into
xor
nop
mov
mov
mov
or
mov
int
or
inc
pop
clc
jmp
pop
clc
push
jo
lods
mov
div
fiaddl
bound
ret
mov
repz
outsl
ss
imul
aam
pop
insl
fidivl
sbb
pop
popf
push
call
dec
sbb
rcrl
ja
imul
and
lcall
mov
fisubl
ficomps
nop
add
pop
fdiv
mov
push
outsl
rcrl
out
push
divl
cmp
xchg
xchg
ja
sub
lock
testb
xchg
rcrb
mov
imul
lahf
push
push
scas
hlt
sub
xchg
shll
adc
mov
fwait
loop
or
xor
sub
fs
movsb
andl
push
pop
xor
ja
aam
inc
cmp
popa
repnz
inc
jnp
imul
std
cmpsl
inc
mov
xor
xchg
aas
mov
and
adc
jno
cs
pop
pushf
int3
sub
push
adc
dec
add
leave
out
int
neg
push
sub
stc
xchg
or
or
and
stos
pop
pop
aaa
push
jmp
fdivrl
lret
in
sbb
out
sub
fcomi
add
xchg
xor
icebp
sbb
mov
movsl
ror
xchg
gs
mov
daa
leave
inc
arpl
les
outsb
inc
int
or
lret
pmuludq
mov
cmc
shll
ss
mov
sbb
mov
mov
call
nop
mov
dec
imul
xchg
inc
xchg
cmpsl
cmp
cmp
shll
adc
rclb
adc
mov
or
shlb
testb
ds
mov
xchg
pop
xor
jns
jae
inc
push
int
dec
clc
fidivrs
pop
inc
pop
psubusb
or
push
xchg
push
data16
rcrb
jle
fiaddl
test
stos
les
je
sub
push
ds
and
stos
sahf
cmpsb
and
fstl
mulb
lcall
shll
mov
hlt
sub
stos
mov
add
dec
adc
outsb
mov
mov
fisttps
jecxz
lods
das
pop
or
aas
in
mov
and
shll
scas
mov
xchg
shr
in
movsb
imul
push
ficomps
insb
mov
js
jnp
lock
outsl
stos
in
ss
jle
xchg
sbb
sub
stos
loop
js
jo
push
push
mov
mov
jo
push
add
aad
cmp
adc
pushf
sbb
ds
jp
sub
arpl
cld
iret
xlat
add
cmp
inc
repnz
arpl
push
in
test
pushf
cmp
lcall
bound
andb
xchg
lods
sbb
cs
mov
jecxz
scas
cmp
inc
js
xchg
jge
stos
mov
jnp
popl
add
fcmovnbe
inc
cmp
insb
cmp
push
dec
jmp
adc
xchg
pop
mov
sbb
cmp
out
push
jmp
fdivs
hlt
lcall
fwait
xor
jmp
addr16
push
mov
insb
or
into
pop
push
push
aam
mov
bound
dec
xlat
sar
sbb
mov
xor
pop
dec
shlb
xchg
stc
les
testl
rcrb
shll
inc
bound
mov
insb
mov
mov
mov
cmp
pop
cld
sub
insl
and
cld
idivl
aad
push
push
sub
xor
insb
pop
out
jo
xchg
into
std
sub
icebp
mov
xchg
hlt
dec
pop
mov
shlb
lret
inc
nop
jno
icebp
xor
cs
dec
jg
in
in
jb
out
inc
repz
jae
cld
pop
add
mov
mov
pop
sub
mov
sub
push
mov
call
fldt
or
and
jno
sub
scas
add
pop
sbb
daa
lahf
mov
jns
sbb
sarl
mov
outsb
fwait
xchg
mov
popa
shll
mov
xor
notl
aaa
add
mov
add
push
pop
lahf
cmpsb
roll
outsl
leave
cmp
pop
repnz
outsl
xor
sbb
xchg
mov
mov
inc
xor
dec
or
xor
mov
mov
mov
int
repz
repnz
scas
and
or
inc
and
inc
push
cmpsb
sub
aaa
inc
call
out
shlb
addr16
and
mov
dec
mov
xchg
mov
push
lock
push
cli
movsl
mov
in
in
fs
or
enter
push
mov
inc
stos
lea
or
inc
jb
out
aad
lods
dec
sub
xchg
and
mov
aaa
jecxz
or
enter
out
fwait
jno
dec
stos
sub
mov
test
sti
mov
xchg
add
int3
insb
leave
dec
aas
inc
xchg
mov
pushf
sahf
daa
fdivrl
jb
lods
dec
pusha
sbb
loop
int3
mov
xor
push
rcrl
push
and
inc
iret
leave
xchg
pop
ja
rcll
test
arpl
sbb
and
insl
push
sbb
shll
cmp
in
test
cmp
jge
mov
mov
pop
roll
or
xor
jnp
pop
xchg
cmpsl
mov
push
scas
sahf
aam
inc
aas
loop
inc
cmp
flds
aam
xchg
in
adc
test
mov
push
daa
out
rcll
push
push
pusha
adc
shll
pop
push
stc
and
xlat
dec
cmpsb
cmp
faddl
cltd
xor
cmp
jns
fildl
inc
rol
add
mov
repnz
adc
in
aas
jne
fdivrl
dec
jp
inc
cltd
mov
bt
je
xchg
or
test
in
mov
cli
mov
xchg
xchg
sub
cmp
fdivl
cmpsb
fstpt
jb
roll
mov
adc
pop
pop
pop
jo
xor
movsl
js
push
mov
adc
out
lods
jae
mov
push
jae
stos
and
push
mov
add
xor
jbe
pop
pop
cli
push
shrb
push
xchg
insl
inc
fwait
hlt
dec
or
enter
or
aas
inc
adc
nop
mov
lods
cmp
mov
ret
test
pop
stos
ret
pusha
xchg
xchg
cmp
int3
sub
mov
incb
lcall
rcr
loopne
and
jp
stc
repnz
out
stc
mov
xor
mov
fidivs
imul
or
js
in
adc
pop
in
xchg
xor
mov
scas
and
jno
jg
lcall
mov
and
inc
jb
sub
pop
pop
push
addl
mov
enter
fcmove
mov
insb
mov
and
mov
nop
ja
inc
add
mov
ror
mov
jl
outsl
das
imul
inc
insl
cmc
or
cmp
repnz
pop
push
gs
dec
mov
or
dec
inc
in
pop
jno
jb
lods
xor
pop
prefetchw
dec
fld
scas
arpl
mov
in
cwtl
xchg
sbbb
lcall
sub
leave
jb
sbbl
je
adc
add
xor
cli
into
stc
inc
or
cmp
add
xorl
pop
mov
leave
push
jbe
mov
int3
jge
pusha
and
sub
es
inc
lcall
mov
stos
push
fcom
mov
add
lock
cmp
push
pop
lcall
cmp
cmpsl
jp
jae
mov
push
fildl
dec
xchg
ficompl
xchg
cs
cwtl
push
cmpsl
jp
jp
jmp
and
mov
cmp
imul
cwtl
push
cmp
mov
das
sub
movsl
imul
nop
lcall
and
mov
idiv
mov
loopne
xor
loope
pop
lods
call
push
push
push
movsl
inc
pop
inc
mov
test
ljmp
popl
jecxz
lock
hlt
push
push
pushf
shrb
pop
adc
push
cli
movsl
jne
pushf
or
pop
or
adc
mov
data16
sbb
jle
loop
pop
out
iret
insb
jns
hlt
int3
cmpsb
repz
pop
fistpl
mov
push
out
lret
adcl
inc
pop
adc
sub
or
sbb
mov
in
sbb
lods
lods
iret
cli
je
mov
loope
cs
inc
test
cld
aas
cli
out
rolb
jnp
lods
push
xchg
test
test
pusha
pop
bound
inc
jae
je
mov
push
sbb
fimuls
call
mov
lods
ljmp
fisttpll
lret
cmp
dec
ja
sbb
sbb
mov
ret
mov
jg
pop
cmp
and
not
fildll
xchg
adc
mov
push
ficompl
ret
cwtl
dec
icebp
frstor
and
lahf
jbe
mov
pusha
cmpsl
adc
icebp
lahf
pop
out
push
imul
pop
daa
jge
mov
xlat
fldenv
mov
push
push
je
push
bound
cld
pop
xlat
int
rcl
or
fcompl
mov
int3
cmp
ds
jae
popa
xor
or
lods
adc
js
or
mov
clc
pop
push
mov
sub
mov
jmp
dec
cmp
and
js
icebp
popa
je
mov
or
dec
fisttpl
movsb
dec
outsb
repz
out
jg
jb
popl
pop
aas
ds
dec
jnp
aaa
popa
push
aaa
sarb
jae
cmp
or
pop
dec
mov
mov
loopne
or
fcoms
or
lods
push
sub
fsub
andl
loope
xchg
add
mov
sbb
sbb
pop
dec
jno,pn
scas
jmp
or
in
jge
cmp
cwtl
lahf
clc
xor
inc
movsl
and
and
out
add
pop
push
jmp
mov
lahf
ja
xchg
sarb
xor
in
and
push
ret
inc
xor
xor
mov
insl
push
paddusb
divl
push
shrb
jbe
or
cmp
jbe
pop
push
mov
adc
arpl
pusha
sar
leave
mov
xchg
lret
sbb
push
out
hlt
fwait
jl
popf
out
pop
pop
xor
popf
test
outsl
scas
mov
jno
mov
outsb
cmp
cmpsb
cld
scas
adc
jecxz
data16
andl
cmpsl
repz
je
in
or
push
pop
push
scas
and
loope
inc
mov
les
mov
jbe
je
or
xlat
cmpl
mov
mov
jge
es
insb
sub
movsl
inc
leave
jg
xor
push
adc
sub
stos
add
and
mov
push
xor
mov
mov
jns
or
sbb
cmp
scas
out
cmpsl
lods
push
shlb
bound
test
aad
inc
sub
js
stc
cmc
pop
repz
mov
jle
xchg
les
xchg
mov
lret
mov
mov
ret
mov
push
enter
inc
repnz
stc
adc
fimull
nop
out
sub
int
sub
pop
mov
mov
fimull
cmp
jmp
mov
pop
mov
pop
push
inc
inc
jns
in
mov
out
subb
mov
cli
fs
xor
mov
push
lret
push
dec
test
mov
pusha
in
jle
mov
push
push
mov
cmpsl
scas
cmpsl
xchg
mov
push
dec
mov
imul
call
lahf
xor
in
shll
gs
xchg
sbb
call
std
jbe
cmpsl
lock
test
imul
xchg
imul
test
lea
push
js
mov
mov
add
aaa
dec
cmp
cmp
sub
mov
jb
sti
enter
sbb
shrb
fwait
sbb
push
dec
pop
or
add
pop
add
pop
push
cs
scas
cmp
pop
add
dec
mov
test
or
mov
mulb
xor
cmp
dec
rorb
lods
mov
scas
rcr
inc
nop
xor
repz
in
aad
insb
jmp
dec
cmp
popa
mov
jl
pushf
jmp
lret
inc
or
and
lods
and
outsl
or
jo
and
rcll
fstps
and
lock
push
sbb
sbb
icebp
ja
stos
fs
mov
mov
jne
sub
sbb
loopne
data16
add
adc
ret
sbb
push
mov
orb
sbb
daa
ret
in
pop
pop
mov
cmp
sbb
rorl
test
xor
nop
ljmp
out
lds
in
xor
insl
adc
and
xchg
loopne
inc
mov
push
cmp
arpl
pop
sub
aaa
xor
cltd
mov
dec
cmp
aas
arpl
adc
adc
pop
and
js
scas
into
sub
add
lahf
adc
out
ds
sub
pop
and
sub
test
or
fldl
xor
cs
dec
xlat
jmp
adc
jb
adc
or
es
rolb
cltd
fbld
xchg
xchg
push
push
inc
lods
fnstsw
or
and
push
sbb
lods
xlat
ja
pop
cs
imul
sarl
adc
xor
or
test
inc
jl
ja
sub
mov
sahf
xor
orl
out
aaa
xorb
or
dec
push
cmp
pop
scas
ljmp
mov
in
push
mov
mov
dec
shll
in
shrb
mov
das
sub
dec
xchg
int3
or
cli
dec
cmpsb
add
shrl
shlb
sbb
pop
sti
inc
int3
cmc
mov
std
pop
sub
mov
mov
aas
rcll
xor
adc
mov
push
mov
ficompl
ret
out
xchg
ffreep
push
dec
js
sbb
xchg
js
add
pop
jg
addr16
push
insb
lods
mov
sub
pop
adc
hlt
dec
add
out
pusha
inc
pop
lds
andb
push
ucomiss
clc
aaa
dec
push
sub
cmp
pop
outsb
inc
jae
inc
in
xchg
adc
ja
cmp
jns
leave
push
ret
xchg
leave
js
out
das
sbb
xchg
pop
sub
jb
loopne
push
and
pusha
adc
adc
faddp
ret
icebp
sub
mov
mov
sbb
sbb
mov
mov
pop
cmp
ror
xchg
xor
jo
scas
pop
dec
push
out
lret
imul
lahf
mov
mov
je
push
ja
iret
and
xor
sub
sub
xor
pop
add
pop
movsb
inc
lods
fisubrs
xchg
andb
cmp
out
leave
xchg
test
imul
movsl
cmpsl
and
xchg
je
bound
push
test
pop
sbb
orb
clc
outsl
and
loopne
push
mov
popa
push
shl
in
mov
nop
sbb
mov
mov
xor
rorl
popa
orl
loope
in
lods
jle
leave
movsl
in
lea
xor
stos
dec
divb
or
cs
into
mov
inc
sub
mov
or
jnp
mov
jg
mov
out
cwtl
push
jge
outsb
sub
filds
sbb
out
cmp
inc
insl
cmp
out
xchg
push
fsts
scas
sarl
push
xor
es
data16
xchg
and
dec
mov
lods
pop
sub
xchg
mov
inc
ds
scas
je
sub
jg
sarl
mov
jecxz
mov
jmp
gs
adc
daa
mov
imul
insl
nop
shl
ds
das
loope
sub
and
sub
iret
popa
test
loope
xchg
xor
jmp
ljmp
xchg
fistpl
movsb
mov
push
repnz
enter
lods
notl
add
mov
or
enter
call
lret
fnsave
mov
fldenv
mov
loope
mov
int3
xor
aaa
or
lods
je
jle
aaa
dec
in
xor
xor
mov
mov
aad
pusha
aad
lcall
gs
or
push
jge
add
xchg
cmp
imul
aam
cmc
loopne
mov
add
into
fwait
jno
or
test
js
add
push
dec
xlat
add
adc
lea
fisttpll
ja
fmulp
push
pop
sti
or
movsb
fildll
dec
inc
repz
in
imul
fists
adc
pop
add
mov
sbb
push
leave
adc
sub
cld
or
mov
pusha
loopne
and
mov
adc
cmp
stos
cmp
lcall
mulb
jae
mov
jg
fisubrl
pop
xchg
cmc
dec
xchg
cmp
stos
cmpsl
xchg
leave
mov
stos
daa
adc
aas
sub
mov
dec
mov
inc
push
out
pop
mov
cmpb
dec
pop
insl
sub
xchg
add
cmp
cmp
in
insb
mov
into
lds
int
daa
jmp
sbb
inc
mov
mov
xor
fadd
mov
int3
hlt
imul
xchg
dec
aad
sahf
push
pop
rcrb
in
cs
mov
ror
jl
mov
cmp
ret
mov
mov
xchg
dec
hlt
shll
cmc
stos
adc
stos
and
dec
jnp
sbb
mov
gs
int3
sbb
mov
idiv
rorl
inc
and
fsubs
cmp
stos
hlt
das
fucom
and
arpl
cltd
loope
add
out
movsl
lret
mov
das
mov
add
pop
std
ljmp
cmp
push
xchg
mov
loopne
add
push
adc
push
jbe
lds
outsl
mov
popf
mov
addb
lods
xor
push
out
mov
pusha
adc
mov
mov
cmpl
dec
test
cwtl
sbb
outsl
push
movsl
movsl
idiv
cmp
xor
stos
out
test
xchg
dec
negl
cwtl
adc
loopne
and
pushl
push
xchg
add
jl
les
sub
out
or
dec
fwait
lea
adc
int
sbb
or
adc
xchg
push
jnp
ljmp
out
lock
cmc
fs
jmp
xor
mov
or
pop
nop
cmp
sub
loop
js
cmpsb
push
lcall
ds
stos
pop
les
cmp
test
jmp
outsl
test
xchg
or
sti
bound
cmp
test
cs
or
add
xchg
sbb
mov
cltd
lods
notl
stos
in
in
push
daa
mov
lds
adcl
and
out
test
fs
fldz
pop
sub
ret
je
mov
xchg
movsl
cltd
gs
adc
insl
push
push
sub
jmp
cli
out
jo
sub
stos
jb
or
lock
jle
xor
dec
rcl
mov
inc
mov
nop
ret
mov
add
in
xchg
push
mov
lods
push
jecxz
inc
adc
pop
jae
ror
sbb
push
ret
sbb
push
test
stos
push
adc
popf
addr16
mov
not
mov
lock
fs
push
pop
pop
cmpsb
push
iret
dec
sub
and
jecxz
adc
sub
xchg
sbb
in
out
loop
sub
inc
pop
lahf
push
pop
mov
rclb
dec
push
into
push
push
sub
jns
sbb
fadds
test
and
addl
insb
mov
and
in
sbbb
jno
add
mov
mov
mov
fimuls
popf
ficoms
shl
dec
xor
loope
loopne
jno
xlat
add
mov
dec
or
test
push
cwtl
dec
add
aaa
fsub
xchg
jecxz
push
lret
push
inc
decl
xchg
in
ds
test
mov
leave
dec
pop
add
sahf
gs
leave
or
dec
loopne
ljmp
mov
cmp
shrd
insb
xor
push
cmp
mov
or
dec
jp
sub
iret
arpl
sub
xlat
repnz
xchg
fwait
sub
arpl
ret
lds
mov
jmp
in
rolb
lock
test
ss
ret
adc
outsl
sahf
in
lcall
mov
aam
lret
pop
cmp
pop
and
mov
dec
daa
sahf
push
icebp
paddusw
scas
out
aas
dec
leave
jl
ret
lcall
cmp
repz
rcrl
pop
fcomps
push
pop
inc
or
in
mov
add
dec
out
test
repz
xchg
mov
out
in
test
int3
insb
inc
push
enter
fwait
notl
jle
cmp
add
lock
das
not
scas
and
xlat
add
pop
dec
popf
jae
adc
fs
mov
sbb
xchg
sbb
pop
pop
mov
mov
jno
or
into
lahf
lds
inc
cmp
push
xchg
lret
pop
push
call
mov
out
jg
fidivrs
sbb
jge
mov
mov
xlat
js
int
aas
mov
or
push
and
fbld
dec
imul
jle
sbb
lcall
jge
add
xor
jno
cltd
enter
aaa
adc
xor
cli
and
xor
jne
mov
inc
cli
cmc
cmp
sub
data16
mov
pop
dec
inc
js
mov
lods
inc
out
lock
or
add
enter
cmpsl
enter
dec
jb
sub
in
add
jl
iret
push
lret
into
mov
jo
and
cli
pusha
loope
data16
fldt
fmuls
add
add
xchg
sbb
push
xchg
lea
push
jge
xor
movsl
push
xor
ret
xor
aaa
sub
bound
xchg
lock
sub
jns
add
movsb
and
sti
mov
insl
scas
dec
inc
dec
inc
dec
adc
in
jne
sarb
mov
mov
jbe
cmp
pop
jp
iret
out
dec
fsubl
adc
or
sarl
xlat
lcall
out
mov
cld
icebp
cmp
iret
nop
pop
lods
leave
sbb
push
inc
jb
inc
pop
xchg
imul
loop
incb
add
aaa
pop
aaa
or
mov
inc
sub
pop
daa
in
scas
cmp
das
mov
mov
cmpl
jbe
push
jne
stos
jne
enter
ror
push
xor
out
pop
add
add
sub
cli
das
xor
mov
mov
addr16
cwtl
repz
jp
pop
push
xchg
test
jno
xchg
pushf
insl
dec
pop
mov
mov
jecxz
mov
push
mov
add
add
jns
mov
imul
push
in
cmp
ja
xor
lea
les
adc
sbb
out
leave
dec
ljmp
outsl
das
pusha
cmp
add
xchg
jle
mov
inc
xchg
loope
xchg
push
jp
sbb
mov
xchg
sbb
gs
inc
popf
loopne
int
lret
ljmp
outsl
xchg
inc
mov
sub
scas
in
sbb
in
aaa
std
or
std
mov
sub
add
adc
xchg
push
inc
sub
mov
mov
inc
cmpsb
sbb
fstps
mov
nop
inc
cwtl
dec
xchg
pop
mov
pop
xor
fstpl
jmp
pop
adc
fbld
sub
adcb
jmp
shll
inc
int
xor
ss
mov
addr16
inc
sbb
sbb
mov
mov
nop
cmp
pop
decb
and
in
pop
aam
mov
inc
jle
sub
xor
dec
sti
sbb
test
pop
testl
pop
ret
add
push
test
push
movsb
adc
rol
fstpl
sub
test
cmp
mov
jbe
xchg
daa
cltd
mov
sub
mov
inc
ficomps
mov
dec
pop
pop
xchg
mov
or
inc
test
mov
inc
cmpsl
xchg
enter
sbb
outsb
roll
stos
add
or
loopne
nop
mov
cmp
rol
test
mov
adc
cltd
mov
test
pop
insb
call
mov
stos
cmpsl
lret
flds
push
call
and
mov
cmp
in
xchg
sub
out
mov
popf
pop
pop
lods
or
lea
fs
mov
enter
sti
jecxz
sub
scas
cmp
imul
inc
and
mov
xlat
fs
push
mov
dec
jnp
rcrl
lgs
arpl
cmp
or
divl
fmuls
out
insb
movsl
xor
les
imul
lret
loope
ret
stos
pop
pop
and
jge
sub
dec
xor
sub
aam
jmp
inc
sbb
pop
fwait
push
or
stc
jg
mov
mov
stos
aaa
mov
orb
test
mov
int
frndint
jle
into
jg
pop
mov
das
mov
cmp
push
movsb
mov
fisubrs
pop
nop
inc
lahf
or
dec
push
push
into
mov
push
inc
jne
xchg
jns
in
sbb
cmp
test
leave
std
daa
push
push
iret
sbb
cs
dec
flds
and
cmp
sbb
test
push
insl
inc
sub
mov
add
mov
aad
lcall
sub
cmpsb
subl
pushw
add
mov
insl
in
pop
cmpsb
cmp
cwtl
dec
or
mov
jge
sarb
orb
jb
arpl
xor
cmp
psllq
jge
mov
sub
mov
pop
xor
clc
push
cli
or
test
into
frstor
sub
pop
popa
push
mov
sub
push
repz
mov
fs
sbb
das
cmp
mov
dec
in
icebp
mov
test
and
xor
add
popf
mov
rcrl
lds
aas
fists
add
jne
xor
cwtl
inc
inc
js
jns
out
xchg
xchg
scas
cs
dec
pop
sbb
adc
push
les
ja
adcl
push
xor
fdivl
cli
movsl
sbb
repz
mov
push
lods
pop
in
push
cmc
and
xlat
mov
mov
in
das
jns
cmp
xor
xor
push
fmuls
rol
push
sub
addl
fdivrs
xor
sub
mov
mov
and
sub
inc
add
mov
pop
iret
jb
je
push
out
shrb
aas
jl
bndldx
xchg
pop
ss
cs
ret
mov
adc
mov
xorb
pop
jnp
mov
sbb
sub
inc
pushf
lahf
mov
dec
xchg
iret
push
pop
jmp
pop
sbb
cmp
cmpsl
leave
pop
mov
mov
mov
cvtpi2ps
jb
in
xchg
add
adc
cmc
loope
mov
ja
jl
adc
add
cmp
adcb
jbe
sbb
aas
dec
adc
repz
pop
adc
jle
popf
lods
adc
dec
out
lods
sub
push
inc
enter
faddl
adc
push
and
or
and
mov
rclb
clc
xlat
xchg
and
outsl
shlb
ficompl
push
pop
aam
push
leave
test
dec
mov
add
xor
test
imul
jp
and
into
fsubr
cmp
stos
cli
popa
and
mov
pop
cmp
lahf
jbe
push
pop
push
or
int
das
sarl
jb
lret
adc
pusha
jp
push
xor
mov
loop
pop
mov
lret
or
xchg
inc
sbb
cmp
lahf
repz
fsubrl
cmpsl
lret
fidivrl
jns
cmc
push
cs
push
mov
stos
clc
push
inc
push
xchg
lods
cmp
or
and
and
push
xchg
les
aaa
cmp
mov
popa
stc
add
out
movsb
lret
cmp
mov
mov
inc
stos
leave
cmc
pop
pop
mov
pusha
popa
xchg
out
jge
pop
or
les
fcmovbe
call
stc
popf
dec
mov
jp
inc
mov
loope
dec
mov
dec
xor
enter
icebp
in
xchg
dec
repnz
in
in
inc
in
push
push
icebp
mov
jno
push
and
das
fiaddl
std
mov
pushf
hlt
xchg
sbb
jl
iret
pop
out
test
sbb
dec
or
push
xchg
sub
xchg
jb
sbb
sub
stos
xchg
lds
dec
mov
xlat
ficomps
mulb
pop
out
dec
mov
js
sbb
adcb
jmp
fst
int3
in
fdivr
cmp
xchg
push
push
push
lcall
movsb
stc
inc
push
ret
cmpsb
cmp
les
aam
sbb
les
out
bound
sub
scas
add
or
mov
decb
lods
std
jl
lret
mov
repnz
cltd
mov
mov
in
jle
fnstcw
and
xor
xchg
test
clc
jl
pop
aam
popa
sub
pop
mov
aas
test
ficoms
data16
mov
adc
mov
inc
sbb
xchg
add
divl
adc
xchg
jno
lods
mov
mov
jg
out
sbb
adc
or
call
xchg
jbe
repnz
mov
jb
icebp
adc
popa
lds
dec
lret
add
mov
cmpsb
lea
mov
xor
ret
in
and
push
dec
dec
dec
mov
out
mov
xchg
xor
add
pushf
cmp
push
stos
js
dec
ds
xchg
testl
push
xor
stc
negb
mov
sti
stos
cmpsl
pushf
jnp
pop
add
daa
xchg
add
cwtl
jnp
loop
out
adc
inc
mov
fnstcw
mov
faddp
jo
js
mov
loopne
pop
cmc
mov
adc
imul
pop
leave
sti
lods
rclb
pop
inc
lock
into
scas
jae
shll
push
xchg
mov
lcall
adc
cmp
repnz
pop
popf
mov
imul
out
cmp
adc
cli
arpl
ss
test
mov
or
sti
cwtl
lret
imul
push
and
mov
cmp
lret
sbb
dec
pop
loopne
ds
int3
ret
lret
fidivl
and
fdivrl
pop
ret
movsb
into
or
cltd
sti
outsb
ret
cmp
outsb
outsl
mov
sar
arpl
pop
es
add
mov
pop
stc
dec
neg
leave
pushf
xor
hlt
xor
jmp
adc
adc
fadd
arpl
jns
xor
adc
cmp
push
cmp
push
jmp
cmp
ret
dec
popa
xor
int3
addr16
das
shrl
repnz
xchg
or
loope
lret
cmp
aad
mov
out
es
inc
data16
cmp
inc
call
mov
pop
jbe
dec
sub
lods
in
mov
lahf
cs
mov
jp
push
pop
push
popa
pop
loop
cmc
cmp
mov
sbb
jb
bound
ret
dec
fsubr
popa
pusha
and
adc
mov
push
inc
negl
mov
out
cmp
xor
pop
sub
cwtl
popa
or
icebp
in
scas
cmp
mov
es
ds
pop
test
xor
cmp
push
inc
mov
ds
test
add
sbb
loope
mov
sbb
inc
movsl
xchg
mov
jp
sub
dec
cmpsl
jmp
sub
or
or
fdivrs
call
imul
pop
test
aaa
adc
pop
dec
test
push
into
test
jge
std
aam
jp
dec
mov
push
sub
push
push
mov
cld
icebp
icebp
adc
out
xor
into
sub
and
les
out
arpl
adc
lods
addr16
sti
jmp
jo
push
gs
inc
ja
push
mov
jg
jae
cmp
mov
dec
stos
idivl
mov
jge
cmp
fsubs
lahf
mov
cmpsb
lods
fcmovu
loopne
sbb
cmp
cmpsb
popa
rorb
out
inc
xchg
push
jecxz
cltd
imulb
push
rorl
call
add
out
sti
push
jle
or
pmulhw
lods
push
cmp
stc
mov
insb
cltd
cwtl
les
stc
jmp
aad
es
push
loope
xchg
add
in
mov
daa
stos
ss
fbld
scas
out
pop
enter
pop
mov
in
adc
hlt
icebp
cld
pop
ret
lret
popa
mov
leave
pop
loopne
mov
lock
mov
or
add
cmpsb
das
aam
les
dec
dec
cli
scas
fldenv
add
and
lahf
ret
jb
or
rorb
js
aam
inc
shrl
sahf
jo
shlb
enter
lods
dec
add
fwait
jnp
imulb
sarl
or
adcb
loopne
mov
ja
scas
fbld
scas
mov
ret
xlat
aas
in
inc
adc
xor
mov
mov
push
rcl
jne
mov
or
push
movsl
idivb
cs
mov
negl
out
enter
imul
dec
inc
or
pop
roll
scas
sti
vpaddusw
jle
and
shlb
pop
pop
adc
shrl
aaa
adc
adcl
rcl
inc
xor
jae
xor
jb
jl
lret
adc
cmp
push
out
lea
pop
outsb
fcomp
pop
rolb
insl
pop
cmp
mov
daa
jo
or
ret
fdivr
nop
lret
shlb
push
mov
sbb
out
mov
call
xchg
out
adc
cmp
mov
or
adc
in
dec
stc
int
pop
jecxz
push
xor
shrb
cltd
pop
pop
push
jp
lret
lock
push
loop
lcall
add
push
int3
dec
push
pushf
sub
xchg
rolb
stc
shr
pop
rolb
jle
sub
ds
nop
int3
mov
xchg
test
push
jp
fisubs
mov
sub
adc
xor
ss
ret
cmpsb
and
cmpsl
orb
fimuls
sub
sets
sbb
shlb
shll
mov
add
cmpb
adc
jl
test
mov
add
repnz
mov
add
rcr
arpl
lret
in
ds
outsl
ja
das
xor
fsubl
add
ds
scas
faddl
and
imul
addr16
out
mov
inc
push
scas
in
les
jp,pn
int3
out
pop
pop
jb
test
mov
idivb
push
lds
and
pop
xorl
fwait
jmp
cmovne
mov
sub
mov
nop
pop
outsb
xor
scas
and
mov
call
scas
mov
rclb
or
dec
ja
xor
add
dec
dec
dec
jp
aam
cmpsl
faddp
daa
das
add
sbb
adc
movsl
and
mov
pusha
cmp
into
jmp
stc
lods
mov
or
and
dec
ret
sub
repz
mov
stos
fwait
mov
test
cltd
inc
sub
push
mov
jns
xchg
ret
loope
mov
and
cltd
cmp
jge
xchg
outsl
ja
inc
and
je
dec
add
call
or
aaa
sbb
dec
fisttps
adc
cmpsl
insl
repnz
iret
xchg
es
sti
lds
daa
jns
fdivl
rorl
arpl
dec
ficoml
xchg
fstps
gs
into
cmpsb
dec
and
movsl
and
pushl
addr16
mov
dec
pop
ja
inc
and
in
out
pushf
icebp
int3
insb
movsl
inc
out
sub
xor
inc
push
in
xor
cmpsl
sbb
mov
mov
movsb
push
and
dec
pop
sub
in
iret
jnp
xchg
xor
mov
arpl
cmp
jmp
icebp
mov
or
jp
es
mov
jnp
xchg
pushl
xor
adc
cli
xchg
mov
push
lcall
jl
jg
inc
mov
adc
shl
icebp
mov
scas
mov
fiadds
add
cmp
ffreep
xor
cwtl
ja
push
xor
fcmovnu
xchg
or
cmpsb
jle
fimull
sub
shl
lods
testb
sub
adc
jecxz
fs
pop
test
scas
sub
in
jmp
fs
lods
mov
mov
cltd
xchg
mov
int
fcomi
pushf
cmp
cmp
and
sub
xchg
mov
push
jnp
jae
push
les
inc
hlt
jecxz
pop
sbb
loopne
hlt
fidivrs
xor
loop
sti
int3
in
insl
adc
sarl
scas
fisubrs
in
pop
jne
xor
inc
stos
cld
inc
add
lret
lahf
mov
xchg
lret
adc
sub
xchg
test
cmpsb
repz
dec
mov
push
adc
shll
sbb
inc
push
fldt
push
divb
mov
mov
mov
or
push
jmp
int
cmpsl
xchg
sbb
lds
sub
scas
jno
cmp
push
jb
push
push
out
shlb
xlat
mov
sbb
test
jbe
and
jbe
jp
or
orb
push
mov
adc
mov
imul
iret
pushf
xor
or
mov
fnstenv
into
inc
rclb
dec
filds
fs
mov
push
int3
pop
pop
cmp
addr16
and
adc
in
xor
pop
or
xor
sahf
adc
mov
test
cmp
adc
xor
pop
hlt
dec
call
test
mov
xchg
cli
std
adc
mov
icebp
sub
xor
jl
nop
cmpsl
adc
loope
adc
cmpsb
inc
push
jns
sahf
cltd
dec
push
pop
daa
mov
and
sub
mov
lret
iret
add
arpl
data16
xor
adc
lods
mov
mov
ss
pop
cmp
movsb
mov
add
xchg
aad
inc
mov
daa
repz
in
push
loop
adc
push
stc
rcrl
pop
repz
lcall
pusha
lret
out
lret
mov
clc
fildll
add
test
movaps
mov
sti
call
cmpl
scas
aaa
mov
mov
inc
sub
outsl
jge
mov
rcl
jns
out
stos
shll
cmp
in
je
in
cli
or
lds
adc
in
xchg
fiadds
mov
push
jnp,pt
push
mov
sbb
jb
imul
out
pushf
mov
mov
loopne
pop
sub
mov
in
pop
mov
push
sbb
inc
pop
ss
add
add
xchg
inc
out
fwait
leave
test
sub
fisttpl
cs
mov
lods
stos
lds
out
mov
test
add
cld
mov
sub
xchg
mov
rorb
and
mov
add
pop
mov
sub
int3
push
dec
cmp
add
loop
mov
xor
mov
lret
mov
mov
xchg
xor
xchg
mov
jae
xor
mov
icebp
test
xor
push
ljmp
pop
das
ret
rorb
lock
cmp
inc
cs
jnp
cmp
out
fsubrl
movb
dec
das
push
sbb
or
xor
sarb
cmp
sbb
mov
mov
inc
fstpt
cmpsl
pop
pop
push
js
add
sub
push
imul
xchg
mov
sarl
xchg
or
cwtl
cli
pop
out
sub
add
sub
ret
mov
pop
lods
and
jno
jge,pt
movsl
mov
test
and
jae
sbb
cwtl
in
int3
aas
das
dec
and
push
lea
lret
and
xor
sub
inc
jns
xor
in
mov
lods
cwtl
and
or
pusha
mov
mov
pop
inc
sbb
mov
dec
dec
push
mov
std
push
adc
or
cmp
insl
mov
movsb
mov
lret
int
mov
xor
cmp
sub
cmp
es
mov
or
stos
popa
dec
push
jno
scas
push
int3
mov
mov
xchg
jl
in
pushf
pushf
add
and
ljmp
fnstcw
and
mov
repnz
arpl
push
dec
xor
es
popa
mov
dec
sbb
cmpsb
mov
sub
fnsave
fs
push
insb
push
dec
gs
jo
inc
loope
cmp
add
xchg
sub
jge
adc
dec
fcoms
adc
pop
out
mov
pop
sbb
sbb
insl
jge
or
adc
rorl
ja
and
inc
sbb
jae
dec
jecxz
leave
mov
lahf
adc
loop
test
out
int
shrb
inc
out
cli
cmp
cmpsb
pop
mov
cmp
out
xchg
lods
fistpll
pop
jns
inc
cmpsl
inc
push
or
mov
rcr
lret
mov
xlat
nop
or
adc
aas
ljmp
das
pop
loope
inc
and
xlat
je
mov
pop
hlt
imul
repnz
jl
xor
lds
mov
aaa
in
rcll
and
cmove
bound
inc
dec
sbb
stos
jl
mov
cmp
aaa
sbb
jp
jno
sbb
out
mov
add
aam
fcoms
mov
out
daa
shlb
inc
aad
xor
fildl
push
into
clc
lret
test
mov
cmp
loop
fsubl
adc
dec
imul
add
test
inc
inc
orb
fs
pop
imull
sbb
scas
and
je
or
les
int3
jnp
mov
jae
icebp
adc
out
push
stos
pop
sub
lret
lods
pop
pop
mov
test
xor
mov
jmp
pushf
fnstsw
jmp
ss
sarb
mov
or
mov
or
enter
mov
sahf
nop
mov
pop
push
leave
movsb
pop
ljmpw
scas
in
mov
filds
adc
add
sbb
fs
jno
jae
mov
ds
outsb
fstps
push
daa
push
mov
sub
adc
in
sub
or
fs
jbe
lcall
cs
add
movsl
adc
mov
fmuls
sahf
rcrb
cltd
mov
jbe
ja
pop
daa
test
or
fdivrp
sub
mov
loopne
jb
or
bound
js
lds
and
int
mov
in
sub
pop
lahf
mov
xchg
dec
xchg
lret
push
mov
push
dec
outsl
insl
cmp
js
subb
mov
lock
inc
xchg
inc
cli
sti
imul
inc
inc
stc
pop
inc
sbb
lods
lahf
adc
adc
mov
mov
xchg
or
and
rcr
sbb
popa
inc
fnstsw
dec
outsl
jmp
nop
jg
rsm
stc
icebp
mov
sbb
sbb
mov
lds
notb
leave
cli
shrb
inc
mov
gs
fs
lds
xor
sbb
inc
mov
jmp
cmp
pusha
testb
xchg
dec
mov
lahf
sahf
xchg
std
in
andps
daa
mov
repz
mov
inc
dec
mov
xchg
fcoml
push
dec
push
mov
jge
mov
sarl
xchg
fldcw
mov
in
push
add
sub
sbb
outsl
in
mov
fisttps
inc
rol
leave
das
push
es
add
and
mov
add
push
inc
mov
gs
inc
push
sbb
fidivl
mov
push
and
adc
cmc
mov
popf
add
icebp
in
pop
pushl
push
lret
seto
outsb
xchg
imul
push
lea
dec
fxch
in
adc
loope
decb
mov
leave
call
sbb
dec
out
ret
mov
shll
mov
fadd
mov
cmp
jecxz
test
pop
dec
jg
jmp
movsb
idiv
jecxz
out
xchg
jb
xor
je
in
cmpsl
add
filds
mov
repnz
lret
pop
lahf
cli
in
and
sbb
push
in
or
add
jle
cmpsb
aad
je
lret
popf
push
es
mov
lea
mov
cltd
fsubs
and
lcall
std
sbb
cmpsb
lea
add
xchg
aad
add
out
xchg
sub
mov
fldcw
lahf
or
cmpsl
aas
push
push
outsl
ja
jno
adc
xchg
arpl
mov
push
mov
push
jns
pop
andb
fidivrs
test
push
ret
outsl
pop
testl
jg
lods
adc
xor
cmp
sbb
repz
pop
and
gs
in
mov
dec
pop
sbb
mov
mov
cmpsl
xor
or
shl
dec
mov
iret
sub
pop
and
out
outsb
lret
cmp
ret
js
or
fidivrs
mov
jnp
int
arpl
popa
jnp
mov
inc
pminub
push
in
and
ja
and
push
or
pop
stos
and
cmp
fstps
push
xchg
dec
popa
inc
push
jne
adc
mov
aaa
test
adc
push
out
push
fbstp
cmpsl
outsl
dec
std
loope
push
andb
jb
mov
in
pop
push
mov
aad
je
jnp
out
and
gs
arpl
out
add
jl
jp
insb
mov
jnp
cltd
jge
inc
bound
addr16
data16
sbb
data16
or
lea
out
movsb
xchg
and
xor
mov
xchg
jne
insl
xchg
popa
in
xor
mov
mov
add
inc
movsb
xor
mov
push
lds
xor
sbb
and
pusha
sbb
fs
add
gs
adc
iret
cmpsb
aad
outsl
cmp
inc
cltd
push
jne
ret
in
dec
rolb
inc
movsb
adc
mov
adc
xor
rcll
adc
je
cmpl
cmpb
testb
adc
push
cmp
daa
cs
xchg
cmp
sub
ret
inc
pop
push
push
push
stc
inc
int3
sahf
ss
xchg
rcrb
and
fwait
sub
xlat
mov
fdivrl
push
in
flds
mov
loope
jg
call
ret
test
cmp
mov
ret
jecxz
addr16
sbb
test
lds
push
in
or
movsl
xchg
and
mov
andb
sbb
pop
mov
scas
mov
push
rclb
int3
mov
jecxz
xchg
mov
shlb
jo
jle
push
pop
test
jb
call
or
and
in
outsb
test
pop
add
loopne
fcompl
mov
mov
jns
mov
movsl
sarl
hlt
xchg
je
cli
push
adc
lret
mov
mov
xor
repz
push
ret
cmp
imul
push
jl
adc
push
sbb
pop
call
shrl
push
fildll
sbb
movsl
mov
xor
out
push
inc
pop
xchg
addb
scas
add
push
pop
jns
jns
mov
lcall
sub
mov
xlat
shrl
mov
pop
andl
subl
cmp
sbb
mov
pop
or
hlt
xchg
xor
mov
sub
inc
int
dec
xchg
mov
fldenv
push
pop
cmp
mov
or
mov
cli
rcrl
test
loopne
in
cmp
inc
sub
jmp
jecxz
mov
ds
add
jmp
push
icebp
je
adc
imul
mov
inc
loopne
mov
cmp
add
int
leave
shll
aaa
int3
jnp
test
jne
lahf
xor
insb
sbb
ret
ret
push
dec
popa
push
pop
sbb
fmuls
sahf
in
adc
xlat
lods
dec
sbb
ja
adc
pop
sbb
movsb
mov
add
xchg
sbb
cmp
test
insl
mov
push
push
inc
lret
in
xchg
and
mov
sbb
es
leave
adc
js
test
std
sub
sub
gs
es
sbb
dec
lahf
xchg
lea
int3
test
cmp
lcall
jge
cmp
xor
dec
cmp
mov
enter
aam
mov
push
ljmp
push
mov
mov
arpl
popa
mov
aam
out
das
and
int
dec
push
sbb
movl
adc
and
inc
cli
out
dec
repz
cmp
adc
fdivs
and
xor
xor
lods
xchg
xchg
movsl
push
and
push
sbb
pop
jno
add
push
xor
cmpsl
mov
cmc
pop
mov
leave
jns
sbb
icebp
sbb
bound
mov
xchg
push
push
jae
sti
dec
lcall
out
stos
pop
sub
xor
jge
inc
inc
cmp
dec
mov
add
test
aam
inc
ja
insl
js
int
mov
loop
fmull
dec
xor
andb
in
push
into
stos
lahf
ror
rcrl
adc
sub
mov
imul
stos
sub
push
or
dec
ret
leave
xchg
icebp
ds
movaps
pop
push
andb
hlt
lods
call
inc
mov
jb
ss
fcmovb
mov
or
cmp
ret
insb
outsl
mov
jne
insl
push
mov
cmp
bound
idivb
sub
sub
enter
imul
and
jnp
pop
loop
pushf
aas
pop
inc
mov
std
nop
mov
cmpsb
out
popf
xchg
pop
inc
mov
ret
sbb
mov
aad
scas
mov
sbb
enter
adc
jmp
cmp
xchg
out
sar
repz
popa
fisubrl
push
lods
sub
lahf
mov
jo
ja
sti
and
sbbb
pop
mov
jae
or
jmp
jne
mov
les
cwtl
adc
daa
pop
lret
dec
pop
movsl
imul
cmp
dec
push
jae
push
sub
frstor
das
jnp
in
push
bound
sti
cmp
pop
xchg
lods
insb
dec
or
insb
pop
mov
std
pop
jle
aad
push
loop
pop
gs
dec
clc
inc
sub
cmp
cld
mov
lret
mov
scas
cmp
loopne
pop
fldenv
sub
and
sbbl
stos
cmpsl
jo
pop
fsub
lret
pop
stos
mov
pop
addr16
xlat
sbb
xor
xlat
pop
pop
mov
sbb
test
outsb
and
xchg
loope
scas
aad
sti
push
xchg
arpl
pop
bound
sub
pop
xchg
insb
sub
mov
mov
jb
jge,pn
pop
jbe
inc
push
stos
pop
xchg
xor
mov
push
adc
data16
xchg
repz
or
fwait
bnd
rol
imul
xor
in
push
scas
test
jecxz
xor
repz
lods
iret
xchg
stos
adc
adc
mov
cmp
dec
pop
and
cmp
mov
lret
and
sbb
pop
lock
xorl
push
sti
dec
in
lcall
mov
push
and
cmpsl
subb
scas
jmp
adc
jae
lcall
jp
repz
lds
sbb
mov
flds
adc
mov
xchg
aas
mov
inc
pop
pop
push
loop
sbb
lea
mov
lds
dec
js
dec
add
ret
adc
push
sub
xor
daa
jae
push
mov
rol
movzwl
dec
out
mov
popf
mov
gs
or
movsb
jae
sub
push
jp
in
adc
mov
es
pop
hlt
out
leave
jp
loope
in
outsb
ret
outsl
jg
out
and
mov
sub
les
push
cmp
mov
aad
test
fs
scas
repz
cmpsl
jg
stc
mov
aad
add
loope
xchg
jo
fcmovb
into
iret
flds
lret
test
add
in
mov
loop
psubb
cmp
cmpxchg
enter
push
mov
mov
push
insb
out
lcall
sbb
ret
ffreep
push
dec
sbb
mov
push
gs
cs
test
add
mov
push
adc
cmp
movsb
inc
aam
inc
and
jp
test
xor
mov
adc
or
repz
push
dec
push
fmuls
sahf
sbb
and
je
add
xchg
dec
mov
in
fnstsw
or
dec
addr16
and
dec
pop
jb
sub
xchg
xor
cmpsb
add
cmp
xchg
mov
out
or
fs
push
mov
mulb
scas
adcl
test
es
cmp
cltd
adc
add
xor
and
popa
and
or
inc
inc
dec
cmp
jne
or
scas
inc
imul
gs
and
or
insl
pop
mov
adc
pop
scas
pop
jbe
pusha
lahf
sbb
into
mov
fidivrl
sbb
ds
push
sbb
inc
sub
call
pushf
mov
mov
and
sub
cmpsl
aam
stos
out
push
mov
shl
adc
adc
jo
pop
mov
insl
cwtl
mov
sub
xchg
xchg
addr16
in
dec
pop
push
out
or
lods
mov
mov
sub
in
pop
or
jae
nop
mov
sbb
sbb
adc
into
dec
into
pop
xor
ret
xchg
dec
dec
test
shr
inc
repz
mov
or
add
out
pop
aad
jge
movsb
loopne
xor
jnp
sub
lea
les
mov
jae
lods
sti
repz
adc
dec
out
popf
push
shll
mov
xchg
push
call
jo
negl
in
jp
mov
arpl
pusha
xor
sub
dec
jp
movl
imul
test
lret
push
mov
mov
popf
xchg
mov
mov
xchg
leave
aad
inc
xchg
jmp
ljmp
mov
out
mov
ret
aaa
and
cltd
mov
dec
movl
inc
add
ljmp
xor
push
inc
or
adc
popa
inc
test
jne
pop
rorl
es
iret
jg
divb
sahf
pop
sbb
aam
pop
ss
fnstsw
push
sub
cli
rcpps
out
popa
push
test
lcall
sar
or
hlt
aam
andl
fisubl
jae
dec
dec
mov
sbb
nop
mov
rol
jle
into
sub
sub
imul
xor
cmc
pop
sbb
adc
rclb
sbb
pop
pop
adc
ja
dec
jle
add
and
test
jne
adc
lcall
push
test
sbb
das
cltd
stos
jg
mov
dec
lea
pop
pop
pop
push
xchg
xchg
popa
out
dec
cmpsb
pop
popf
mov
or
in
jno
jo
out
test
add
jb
pop
imulb
repz
push
addr16
pop
jno
mov
and
arpl
push
mov
mov
inc
bound
inc
ret
sbb
dec
jae
adc
push
inc
sub
push
pop
sub
cmp
out
adc
mov
mov
push
gs
push
cmp
pop
mov
pop
cli
dec
ffree
cmp
inc
push
adc
in
add
rorl
bound
jb
cmp
rorb
add
mov
scas
dec
test
leave
adcl
add
jl
cmp
pushf
adc
sbb
insl
sbb
test
mov
and
int
push
in
loop
pop
push
push
xchg
gs
and
unpckhps
adc
in
popl
jge
mov
je
cmp
pop
test
test
pop
xchg
push
fimull
lea
hlt
shrb
lods
dec
adc
push
jns
mov
adc
loope
movsb
sbbl
rorb
mov
iret
adc
mov
outsb
inc
dec
adc
sti
or
and
xchg
mov
loope
sarb
ds
test
sahf
pop
inc
fidivrs
dec
jnp
in
imul
mov
add
cmp
daa
lret
aad
mov
mov
cmc
add
push
lods
and
and
cmpsl
push
mov
xchg
lods
cmp
dec
jg
mov
inc
push
cmp
pushf
jae
js
dec
xor
dec
add
xor
ss
sub
inc
repz
and
shrl
cmp
in
dec
ret
xor
sbb
add
and
lods
out
lret
movsl
cmp
xchg
push
and
shl
jno
xor
mov
nop
sbb
jl
push
jno
or
mov
sbbl
xchg
and
mov
push
jmp
adc
xor
lret
fwait
xor
icebp
lcall
rol
data16
sarl
call
ja
mov
aad
scas
and
cwtl
out
xor
push
das
sbb
dec
adc
sbb
push
mov
arpl
pop
cmp
mov
pop
or
mov
outsl
mov
sub
test
push
pop
jg
push
cli
push
and
add
inc
jbe
mov
sbb
ljmp
testb
out
shll
aaa
mov
cmpsl
cmpsl
leave
aas
sbb
and
pop
popa
mov
xchg
inc
cmpsb
idivb
int3
aam
out
dec
dec
mov
imul
mov
call
mov
inc
mov
cmpsb
cmp
dec
push
outsb
std
adc
mov
ret
xchg
add
repnz
out
pop
adc
or
jbe
loop
inc
xchg
clc
push
push
int
paddusb
pusha
ja
add
int
push
or
and
stos
mov
jae
sti
faddl
lods
mov
push
inc
test
fwait
sub
fisttpll
sbb
stos
adc
int
dec
dec
sbb
test
les
hlt
lahf
mov
or
sub
pushf
xchg
sub
pop
push
sub
std
lods
dec
and
xor
iret
js
aas
adc
mov
fistpl
sbb
adc
std
push
xchg
mov
not
push
dec
fsub
or
dec
cltd
fsubs
pushf
aaa
js
movsl
outsb
aas
jns
int3
sbb
mov
jl
popa
jl
cld
mov
enter
scas
andl
dec
inc
xor
not
cmpsl
mov
push
dec
push
pop
mov
lds
ss
or
xor
cmp
push
pop
jae
jns
repz
add
mov
add
cmp
pop
xchg
stc
push
adc
mov
mov
fs
loop
jns
lods
mov
orb
mov
dec
ja
bound
jno
lods
push
lea
add
sub
jecxz
bound
sbbb
outsb
dec
jle
movsb
repnz
dec
pop
mov
pop
in
arpl
jecxz
adc
xchg
movsb
jns
push
ficoms
and
or
sbb
fsubrp
jns
mov
mov
enter
pop
fiadds
inc
push
inc
fisubl
and
loop
dec
mov
hlt
xchg
add
mov
inc
sbb
sbb
imul
lret
adc
int3
adc
fidivl
jl
rorl
xchg
dec
xchg
sub
test
mov
arpl
sub
jno
sbb
mov
lcall
sub
cmpsl
mov
bound
sub
shlb
pop
mov
cmp
movsb
push
or
push
loop
or
sub
push
cs
xchg
push
mov
fs
cmp
jmp
les
das
sub
aad
add
es
test
jl
sbb
push
add
pop
mov
push
loopne
cmp
ds
in
pop
cmp
xchg
fcoms
cmpsl
xor
sbb
scas
jecxz
imul
push
pcmpeqd
mov
sbb
ljmp
mov
jmp
mov
shll
inc
sub
icebp
sbb
inc
in
mov
bound
mov
sarb
andb
int
fwait
jno
sub
mov
mov
imul
xor
mov
jno
lock
mov
stos
push
xchg
dec
mov
rclb
jno
sub
cmc
inc
adc
mov
mov
fistpl
mov
mov
lcall
js
shll
test
jl
pop
push
testb
int
xor
cmp
cwtl
mov
mov
push
or
popa
xchg
arpl
loop
js
punpcklwd
pop
mov
mov
pop
ret
cmc
sub
or
int
lock
cmp
call
jecxz
out
loop
scas
popf
popa
in
outsl
mov
mov
jmp
mov
dec
jae
les
or
push
jo
cmpsl
jb
pusha
pop
hlt
mov
and
mov
rclb
or
je
pop
inc
pop
cmp
pusha
pop
repnz
fists
lds
stos
insb
push
push
cmp
ds
mov
or
mov
fdivrs
test
cmp
sbb
sub
iret
push
dec
pop
outsl
xchg
cltd
call
es
xor
or
or
pop
call
dec
mov
mov
mov
out
jp
sbb
dec
lcall
test
push
fs
pop
pop
mov
xor
push
and
xchg
lret
jecxz
or
jns
sarl
cmpsb
and
adc
sahf
mov
pop
dec
aam
mov
sub
and
lahf
lea
ret
push
mov
sarb
repnz
call
lcall
inc
mov
add
mov
adc
lods
lret
sti
mov
mov
and
mov
mov
xor
mov
xor
test
xchg
call
push
ja
and
stos
mov
pusha
in
jl
add
jo
call
divl
ret
inc
mov
push
scas
aaa
pop
lret
scas
outsl
mov
or
out
dec
inc
mov
dec
fstps
jge
gs
cmp
stos
test
adc
js
repz
movsl
int
fisubl
add
sbb
ja
or
stos
ss
sti
lahf
add
out
test
or
xchg
push
testb
fnstenv
ja
mov
xor
movsl
outsb
cmpsb
ljmp
mov
and
dec
mov
aas
out
outsb
jne
dec
push
xor
cmp
xorb
sbb
sub
jno
sub
or
outsl
or
dec
gs
sbb
in
jb
sbb
rclb
clc
and
push
ret
das
sbb
hlt
pop
mov
cmpsb
or
pusha
inc
adc
stos
aas
test
jmp
mov
aas
cmc
lods
jle
call
cwtl
and
loope
inc
add
dec
cmp
stos
dec
dec
or
leave
dec
xchg
test
push
clc
cmp
iret
or
xchg
scas
sub
hlt
iret
and
inc
bound
sub
adc
mov
and
movsl
jmp
ret
divl
movntps
out
lahf
dec
mov
mov
fucom
mov
sbb
loop
push
mov
jp
test
fs
pop
mov
xor
icebp
jae
ja
inc
push
repnz
cmp
lods
stos
cmp
mov
push
jecxz
ljmp
fldcw
mov
js
and
lods
jp
mov
mov
dec
and
push
roll
aaa
mov
xor
adc
in
aaa
inc
add
sub
cmpsb
sub
mov
leave
pop
int3
or
xor
repz
cmp
test
ret
jl
xlat
pop
hlt
mov
lds
movsl
lods
xor
mov
add
push
lock
cmp
out
inc
or
mulb
mov
mov
push
inc
enter
xor
cmp
and
movb
clc
push
push
fnsave
jecxz
jge
cwtl
pop
cltd
add
pop
dec
scas
incl
mov
cmp
test
movzbl
jno
mov
adc
cmp
test
inc
cli
mov
cmp
mov
sahf
movsb
lcall
jmp
pop
pop
or
andl
mov
xchg
and
in
inc
add
sbb
cld
jge
jns
sub
sub
lahf
push
inc
xor
sub
inc
cmp
loopne
sbb
ret
mov
ret
imul
test
fimuls
push
sarb
movsl
subb
leave
pop
stos
sub
cs
insl
sbb
mov
push
pop
pop
mov
mov
das
in
ret
push
jp
out
pop
and
sahf
loop
jns
sub
or
mov
js
repnz
lcall
out
insb
xchg
sbb
dec
or
nop
scas
mov
push
pop
nop
jle
pop
pop
aas
and
mov
int
lods
fidivrs
mov
sub
mov
pop
inc
shll
cmp
push
jbe
pop
icebp
out
push
je
adc
cmp
mov
adc
sub
mov
gs
jnp
imul
std
test
pop
out
ds
xor
shl
lcall
pop
lret
enter
fldt
sti
mov
sahf
dec
addr16
popf
jge
sbb
lods
sub
popa
and
out
jge
scas
je
shrl
es
and
sub
lfs
push
pop
loope
arpl
in
cmp
jg
mov
test
mov
ja
jmp
dec
stos
mov
mov
ficoml
and
jle
lret
inc
mov
jb
dec
sbb
shll
in
jecxz
daa
aaa
leave
adc
rorb
mov
cmp
test
outsl
and
popf
push
out
iret
popa
lret
adc
jle
inc
movsb
loope
mov
rorb
fstpl
insb
or
aad
jo
shll
loope
xchg
aaa
nop
sub
icebp
aaa
inc
data16
cmp
gs
cs
inc
or
push
push
cli
sub
xchg
flds
mov
inc
or
dec
rolb
pusha
stos
inc
loop
xchg
test
rorb
or
or
std
push
stc
adc
loope
ja
sbb
fdiv
cmp
movsb
push
push
or
mov
nop
xchg
or
dec
xchg
test
pop
cld
or
sub
mov
rolb
fcmovbe
loopne
dec
fbld
mov
in
adc
jle
scas
xchg
dec
sub
mov
ror
ror
or
adc
add
rcrb
adc
outsb
mov
add
lret
xchg
call
lcall
insl
push
sub
int3
cs
push
jae
hlt
popf
inc
cmovs
cmp
adc
sub
sbb
or
inc
rep
xor
sahf
movsl
out
cmp
cltd
push
int3
lods
ljmp
pop
and
imull
fwait
push
mov
nop
jno
decb
dec
cmpsb
arpl
inc
inc
and
arpl
in
psubw
das
push
adc
push
pcmpeqb
js
xchg
aas
out
mov
int3
addr16
and
push
icebp
fisubl
jo
sbb
dec
sub
cld
enter
call
repz
repnz
pop
dec
mov
and
mov
mov
pop
adc
out
dec
addr16
mov
jns
push
je
pushf
jbe
mov
ret
dec
sub
sahf
pop
addr16
or
je
add
in
dec
cmp
lcall
xor
test
push
loopne
out
pop
in
mov
mov
fwait
stc
lsl
inc
imul
pop
inc
rcrl
inc
push
ljmp
fstpl
inc
iret
push
pop
cmp
loope
or
mull
addl
fidivrl
add
inc
adc
add
aad
mov
xchg
sub
pop
mov
push
xchg
outsb
xchg
aam
popl
mov
add
dec
sahf
fdivrs
cwtl
jle
cld
inc
sub
aaa
cld
jo
sarl
xlat
or
sub
push
jne
dec
repnz
ret
inc
pop
outsb
jbe
into
ret
push
cld
insb
into
inc
jge
pop
mov
mov
aas
push
jmp
adc
adc
cmp
sub
mov
cmp
pop
inc
push
mov
and
adc
into
sbb
or
sbb
push
pop
fidivs
mov
push
jae
sbb
imul
ret
or
xor
mov
out
push
cmp
pop
and
notb
mov
js
out
cltd
xor
lock
stos
or
xor
stos
mov
dec
sbb
mov
push
repnz
gs
pop
stos
xor
mov
mov
test
je
aad
adc
cs
insb
jecxz
pop
test
mov
push
pop
popf
sub
sahf
xchg
mov
enter
shll
aam
je
add
lds
pushf
mov
mov
in
mov
bound
adc
filds
inc
in
inc
aaa
lret
nop
outsb
gs
mov
mov
adcb
mov
cmp
out
and
icebp
sti
jne
imul
fnstenv
add
xor
sahf
push
mov
xrstors
shrb
inc
lods
push
pop
dec
cmp
rorl
or
jne
xor
jmp
or
std
xor
and
push
mov
inc
pop
adc
inc
sbb
mov
and
loop
inc
jmp
test
xchg
xchg
xchg
mov
mov
cmp
adc
rorl
mov
push
mov
mov
cmp
xchg
mov
leave
push
cmp
ss
daa
leave
repz
dec
imul
lods
imul
adc
mov
ja
add
and
push
aaa
fsubrl
cld
outsb
jecxz
jmp
icebp
cmp
pop
or
push
mov
js
jmp
mov
sub
xchg
inc
xor
lock
adc
fldcw
or
sti
mov
and
dec
jecxz
pop
mov
or
cmp
mov
mov
fprem
cmpsl
mov
scas
into
mov
xchg
fdivr
dec
gs
dec
push
mov
cmp
imul
pop
push
ret
icebp
mov
push
dec
ret
push
xchg
xor
lahf
frstor
jo
inc
jb
lret
lods
imul
js
adc
mov
push
mov
mov
or
jbe
xor
stos
mov
hlt
xchg
lock
sub
xor
leave
fsin
pop
jge
test
jecxz
mov
lcall
inc
pop
and
jmp
pop
test
jle
jmp
dec
lcall
popf
and
push
aam
pop
inc
jmp
jnp
in
fildll
jl
sub
push
out
cmp
push
mov
xchg
jae
jne
sub
push
fstpl
xchg
les
fcompl
out
jge
outsb
nop
mov
or
add
repnz
xor
mov
out
sub
cmp
adc
dec
jmp
adc
sub
sbb
and
sub
in
imulb
loope
or
popf
cltd
sub
sbb
mov
sahf
adc
lret
dec
pop
cld
fdivrs
adc
cmp
mov
dec
adc
adc
and
pop
or
in
lret
fisubs
pop
addr16
push
loope
es
arpl
loope
shl
daa
cmp
dec
ret
rorb
ljmp
pushf
sbb
mov
arpl
ss
xlat
adc
or
outsl
pop
mov
jge
xchg
mov
movsl
xor
cltd
xor
jo
clc
aas
sarb
jb
pop
and
mov
into
jns
xorb
mov
scas
or
cwtl
mov
xor
es
pusha
sti
pop
std
sbb
pop
xor
imul
and
adc
mov
fs
in
popf
int3
mov
roll
pop
fldenv
fucomp
adc
test
mov
outsb
std
je
sub
mov
jns
pop
fildll
scas
repnz
outsl
push
lods
stos
add
sbb
push
inc
fidivl
popa
mov
rcrb
sarb
xlat
out
mov
les
jno
divl
dec
push
idivl
add
mov
pop
rclb
inc
in
das
add
adc
das
sar
fnstcw
pushf
jl
pop
xor
popa
jo
pop
xchg
adc
lock
push
dec
js
xor
adc
cmp
mov
xor
inc
iret
rclb
rol
sub
fldenv
or
repnz
stos
negl
ret
addb
or
adc
ds
sahf
mov
add
fidivl
inc
mov
sub
arpl
mov
nop
dec
and
aam
xlat
mov
mov
cli
aam
fldcw
push
cs
add
and
std
aaa
mov
loop
stos
mov
movsb
jecxz
dec
and
add
sub
stos
dec
dec
mov
lret
fisubs
out
jl
aas
or
adc
outsb
xchg
jp
lock
shlb
mov
mov
stos
movsl
pop
pushf
pop
push
cmpl
aas
test
out
cs
cmp
cmp
push
stc
cld
dec
sbb
pop
inc
fnsave
mov
loop
mov
push
das
lods
or
sub
sub
daa
jo
push
sbb
cmp
cld
xor
xor
lret
push
push
adc
out
imul
insl
xor
xchg
or
ret
iret
loope
or
movsb
cmpsl
insb
add
adc
mov
adc
xchg
mov
xor
imul
outsb
test
jmp
jp
repz
cmp
and
xor
mov
bound
and
clc
mov
fists
push
adc
jge
out
inc
lods
xchg
orl
mov
addr16
leave
pop
lods
add
and
leave
fdivrl
cld
roll
jg
adc
xor
and
jae
adc
dec
dec
insb
out
sbb
into
loop
adc
icebp
es
push
pushf
or
sub
fstl
fldenv
mov
push
les
mov
and
out
sub
push
adc
lret
repnz
fmuls
xorb
aas
sub
jb
fsubrp
leave
pushf
mov
lahf
std
popa
inc
daa
xor
fsubr
je
sbb
test
repnz
adc
dec
xchg
add
int
push
int3
ljmp
mov
mov
lock
mov
push
sub
jg
mov
cmp
cs
mov
call
jg
push
flds
into
xlat
test
sarb
movsl
mov
sub
xchg
fdivrs
sub
rcr
xchg
into
enter
hlt
xchg
imul
inc
xor
sahf
int3
xlat
push
ja
pop
pop
test
jns
ficompl
lea
cld
movsl
sub
jo
das
mov
sahf
adc
inc
sarb
push
shlb
adc
aas
ret
das
jmp
jp
mov
gs
imul
imul
xor
cltd
xor
jecxz
pop
inc
sbb
fwait
adc
jge
sti
scas
loope
lods
nop
or
stos
fisubrs
ret
or
cmpsb
jbe
push
mov
pushl
insl
leave
loope
int3
loope
and
das
das
push
adcl
mov
cmp
jns
adc
dec
xchg
cmp
fwait
or
int3
mov
xchg
push
xchg
inc
xor
mov
mov
dec
out
sbb
sarl
adc
sub
mov
xor
cmp
daa
mov
out
mov
push
cmp
addr16
sbb
lods
lahf
mov
sbbb
xchg
mov
popf
out
inc
xchg
xchg
int3
js
jl
jo
and
mov
lret
sbb
and
inc
stos
sbb
inc
and
pop
ds
jno
dec
jnp
push
xor
mov
push
aam
pop
out
sub
sbb
cmpb
pop
mov
pop
jg
imul
rorl
inc
ljmp
repz
icebp
sahf
fcom
outsb
ret
inc
dec
xchg
and
fbstp
push
xchg
shlb
mov
int3
adc
es
mov
fstps
nop
pop
dec
pop
mov
cmp
cltd
pop
mov
das
and
push
jl
jl
aas
sbb
sbb
int3
ljmp
divb
mov
mov
lahf
jnp
xchg
add
push
jmp
xchg
enter
popa
push
es
jmp
scas
mov
shlb
sub
mov
inc
cmp
xor
push
subb
mov
sub
fadd
test
pop
or
mov
aam
sub
outsl
outsb
sub
mov
nop
mov
pop
sarb
mov
enter
and
mov
lods
sahf
sete
sti
push
arpl
jb
das
or
es
sub
fucom
push
cli
lret
cld
sbb
hlt
xchg
mov
lds
jle
scas
sbb
push
sub
out
aad
addr16
pushf
data16
call
inc
inc
xchg
cmc
sbb
scas
mov
adcb
push
or
jmp
fldl
sbb
mov
ficomps
int
fbld
mov
lods
sub
xchg
mov
iret
jge
xor
sahf
pop
mov
mov
shr
incl
inc
testl
or
imul
xchg
pop
rcll
int3
push
xchg
test
divb
pop
shlb
inc
and
fcoms
add
inc
adc
inc
jb
sbb
daa
mov
dec
dec
mov
shlb
leave
add
fidivrl
mov
pop
addr16
icebp
clc
out
xor
and
cmpb
ret
push
sbb
and
adc
cmp
or
lea
sbb
cwtl
jb
fwait
lahf
dec
mov
addr16
test
and
mov
xchg
dec
enter
jno
mov
dec
jmp
xrelease
pop
out
idivb
rorb
mov
cmp
out
and
ret
jne
lahf
lods
pushf
sti
pop
mov
dec
imul
es
xchg
jl
insb
push
notb
jb
repnz
inc
in
fsubrs
adc
enter
cmc
lea
xchg
and
mov
aas
mov
and
push
push
daa
or
mull
push
add
out
rclb
int3
lea
jl
nop
movsb
dec
push
std
mov
cmp
data16
adc
and
bound
cmp
jle
fmuls
fcomip
lods
movsb
mov
mov
mov
pop
pop
fistl
cmpsl
dec
enter
mov
pop
outsb
cmpsb
call
adc
pusha
dec
jmp
jmp
mov
pop
enter
cwtl
adc
shrl
pop
addr16
jo
insw
ret
movsl
ds
test
mov
sub
stos
jae
lods
popa
fidivrs
mov
scas
add
out
xchg
jle
pop
or
push
roll
mov
test
sbb
scas
mov
jmp
adc
push
ja
pop
je
adc
ret
aaa
dec
sbb
iret
adc
push
adc
dec
mov
test
cmp
in
adc
les
outsb
sbb
add
add
add
pop
mov
cmp
sti
stos
adc
outsl
test
popf
lods
fnsave
xchg
push
mov
pop
cs
mov
mov
cmpsl
iret
dec
push
sub
lret
or
xchg
jp
dec
jmp
xchg
loop
add
loop
inc
sti
and
mov
add
or
sbb
test
mov
mov
sbb
and
repz
div
sahf
inc
movsb
xor
fiadds
adc
jae
jnp
popl
jbe
jge
xor
mov
mov
ret
xchg
hlt
je
int3
aad
push
shrb
mov
repnz
pop
jl
outsl
inc
loope
mov
jo
jmp
mov
or
imul
xchg
push
add
jl
sbb
add
cld
sub
dec
cmp
mov
push
icebp
push
ret
cmp
dec
push
push
pop
movsl
adc
inc
sbb
or
std
into
sahf
mov
mov
je
icebp
test
mov
xchg
pushf
ss
stos
and
cltd
jo
inc
push
sub
pop
scas
pop
addr16
push
jl
sub
adc
pop
or
lcall
push
or
pop
jo
clc
stos
or
mov
push
out
mov
dec
add
push
cmp
xchg
lods
js
mov
arpl
mov
push
out
loope
dec
out
mov
or
adcb
daa
cmp
gs
mov
int3
mov
or
dec
cmc
jmp
add
cmp
dec
xor
add
aaa
aam
rcr
call
add
jne
mov
sub
popf
mov
or
btc
ljmp
int
dec
cmp
push
mov
fwait
pop
adc
lea
push
sbb
jnp
ret
jbe
xchg
push
lds
jne
mov
rcl
aaa
and
sahf
dec
adc
gs
jne
xor
mov
mov
mov
dec
lds
jno
iret
inc
popa
xchg
jmp
xor
pusha
test
jmp
jne
push
bound
stos
into
imul
in
mov
mov
addr16
xor
shrb
add
mov
out
mov
rcrl
dec
jecxz
outsl
ss
push
shlb
aam
fs
adc
subb
lret
cmp
and
addr16
add
push
int3
and
int
aaa
xor
and
xlat
pop
cmp
jb
shlb
out
sbb
lret
fisubrl
pushf
jno
in
cmp
mov
notl
jae
in
in
pop
add
incb
xchg
or
pushl
mov
and
aaa
push
iret
iret
ret
stos
lods
jge
dec
adc
push
lcall
popf
xor
or
inc
cmp
sbb
mov
cmp
dec
aad
loope
fsubrl
test
aad
push
out
aam
sti
movsb
iret
push
ffreep
push
adc
jp
hlt
xor
push
roll
pop
mov
dec
pushf
cmp
repz
test
xchg
cmp
mov
mov
jle
cld
or
sub
xchg
outsl
xor
mov
jns
mov
and
iret
ds
in
insl
jmp
mov
ficompl
push
xor
ret
loope
dec
sub
jge
filds
cmp
mov
orb
push
lods
add
notb
aam
and
xorb
pop
mov
icebp
fnstenv
movsb
xchg
fildll
xchg
jnp
push
imul
jbe
jp
test
cmp
repnz
call
mov
mov
cs
sbb
into
jno
fcomp
cmp
and
push
andl
es
scas
push
movsl
add
out
sub
inc
int3
fdivl
aad
jp
inc
mov
jmp
int3
push
js
mov
lock
and
adc
mov
gs
rclb
test
sub
cltd
mov
out
mov
xchg
idivb
xchg
mov
adc
dec
or
scas
and
in
repz
and
add
xor
outsl
cmp
jg
ret
cmp
lds
adc
or
pop
add
mov
jae
loope
xchg
subb
arpl
adc
out
pop
addl
pop
or
add
push
add
mov
movsl
mov
push
add
sbb
or
and
cmpsb
hlt
mov
dec
daa
imul
sbb
ja
xchg
les
jns
stc
out
xor
adc
test
pop
movl
mov
shll
lret
inc
imul
filds
cmp
push
xchg
push
loope
scas
mov
sub
leave
in
add
mov
mov
lods
nop
inc
mov
xor
mov
dec
into
stos
mov
std
xchg
in
cwtl
pop
test
sub
jnp
sbb
lock
inc
sbb
lret
jmp
sbb
fidivrs
pusha
out
stos
adc
jbe
cmp
jbe
cmp
sub
and
mov
sbb
jp
negb
inc
xchg
insl
lods
jecxz
lods
fwait
outsb
rcl
les
test
daa
ret
jp
push
or
lds
les
inc
mov
xor
or
mov
adc
ja
into
das
mov
pop
mov
sub
mov
loopne
mov
outsb
cs
aaa
pushf
std
insb
movsl
xchg
jo
inc
mov
pop
stc
sub
dec
add
imul
push
in
or
jne
iret
lds
pop
mov
add
xor
dec
fldenv
cltd
int
jae
xchg
sub
xchg
mov
les
xchg
sbb
xor
nop
enter
mov
rcrl
mov
addr16
ret
bound
inc
gs
pxor
scas
dec
jae
and
push
dec
out
stos
fisubs
out
stos
adc
sub
imul
xchg
loop
add
push
fsubl
fcomps
fcompl
mov
mov
lock
inc
std
push
sbb
xchg
push
movsb
dec
jl
cmp
mov
movsl
test
push
sbbb
imul
out
shrl
fnsave
int3
inc
jp
mov
fisubl
shll
hlt
adc
jae
and
or
hlt
dec
jmp
sbbl
bound
insb
imul
js
sarb
rcrb
jmp
rorl
mov
out
test
xrelease
ret
push
fs
sub
and
inc
add
lcall
in
push
mov
cmpsb
orl
xor
jp
cmpsb
iret
fsubl
daa
adc
push
mov
sub
fnstsw
fcompl
gs
pop
fimuls
xor
sub
shrb
dec
inc
fistl
ret
dec
das
sahf
lea
or
xchg
out
es
arpl
mov
adc
xchg
in
insl
mov
inc
pop
pop
pop
aaa
jecxz
pop
pusha
add
xlat
jp
add
cmp
mov
inc
repnz
jmp
das
icebp
pop
pop
dec
and
movsb
scas
sub
sbb
cmp
insb
or
xchg
lret
inc
push
adc
adc
sbb
inc
adc
dec
test
cmp
popf
push
adc
je
and
aaa
test
in
adc
and
inc
outsb
add
test
and
dec
xchg
movsl
imul
negl
sbb
adcl
aas
inc
inc
mov
les
aam
push
sbb
andb
stos
jmp
sub
loopne
out
fbstp
rcrl
sbb
xor
js
push
push
and
or
pushf
cmpsl
jae
ds
scas
lea
jp
or
data16
cli
adc
push
cmp
cld
pop
and
pop
sbb
xchg
pop
ja
mov
nop
mov
or
ret
and
nop
sub
fcmovnb
adc
iret
and
nop
paddusw
icebp
dec
mov
add
push
add
dec
cmc
leave
dec
shl
xchg
in
lcall
jmp
lea
and
call
pop
fsubrl
je
clc
orb
pushf
xchg
push
pusha
ficoml
cmc
fcomp
cs
dec
cmpsb
mov
jge
shrl
repz
dec
jb
mov
mov
ljmp
in
push
mov
mov
rcrb
mov
ds
adc
js
arpl
jae
add
fs
aad
sbb
mov
mov
clc
fidivrl
mov
fwait
call
xchg
adc
push
cltd
ficompl
and
fwait
inc
flds
or
outsb
imul
cmpsb
sarl
mov
mov
xor
or
ret
mov
sbb
sbb
xchg
cmc
dec
pop
add
ja
pop
or
push
push
ret
outsb
and
sbb
jmp
lret
orl
adc
add
add
fildl
sub
aad
out
arpl
xor
mov
scas
ja
cld
mov
dec
insl
mov
js
adc
setl
outsb
ret
add
push
sub
or
das
out
mov
sarb
aad
cmpb
sbb
push
mov
jns
push
add
adc
and
sbb
cmp
sub
out
aad
fucomi
jo
stos
jl
and
push
sbb
inc
pop
cmovl
xor
ret
cli
ds
jecxz
lds
mov
insb
add
sub
in
push
dec
cltd
inc
mov
mov
jmp
clc
xor
movsl
inc
imulb
pop
enter
pusha
inc
mov
outsl
adc
dec
pop
or
sub
nop
divb
mov
popf
jbe
mov
mov
or
fidivrl
push
or
hlt
scas
shll
or
shrb
mov
pop
adc
xchg
in
test
je
out
lahf
xor
pmaxsw
mov
std
add
test
push
jl
cld
call
fisttps
js
or
dec
shrb
lock
pop
lcall
pop
adc
lds
xor
and
xlat
fcoml
mov
or
jle
push
lds
pop
pushf
rolb
sbb
sbb
inc
aad
fidivrl
jo
jle
xor
pop
xor
mov
cmpsb
setne
fdivr
push
rclb
mov
cmp
mov
shrb
dec
pop
ret
in
adc
add
sbb
and
mov
lods
aad
xor
testl
jmp
stos
sub
pop
into
lret
mov
out
fcoml
xchg
decb
and
mov
cmp
push
loope
adc
pusha
jge
dec
stos
hlt
cltd
aad
jb
lock
inc
jp
xchg
mov
shl
adc
xchg
pop
jns
mov
lods
hlt
jbe
decl
lret
repz
ficoml
rclb
mov
push
insl
out
addr16
mov
loopne
sarl
and
jae
sub
popa
cs
jo
bswap
mov
dec
scas
inc
bnd
insb
mov
dec
sub
xor
mov
push
pop
loop
imul
mov
sbb
lock
popa
iret
or
outsl
mov
mov
sub
fwait
dec
icebp
sarb
pop
stc
mov
sub
aas
jmp
dec
pushf
push
mov
out
ret
pop
bound
shrb
mov
xor
pop
xchg
rcr
out
and
outsb
pop
inc
jnp
or
mov
into
pop
jae
xchg
mov
sbb
in
jbe
loop
add
jo
divl
push
add
adc
pop
jmp
inc
pop
or
fnstenv
inc
pop
xorl
and
loop
inc
data16
mov
or
in
pop
mov
sahf
xchg
mov
into
sbb
pop
aad
pusha
and
sbb
jb
in
pop
lcall
dec
fidivrs
add
adc
rcrb
jecxz
lods
stos
push
idivl
flds
pop
addr16
cld
dec
cwtl
mov
xor
pop
mov
icebp
js
std
sbb
xlat
loopne
repnz
mov
push
scas
sbb
fucomp
cmpsb
jae
adc
and
mov
fnsave
inc
pop
popa
pop
sbb
rorb
movsl
je
das
dec
inc
pop
out
dec
jg
int3
enter
pop
mov
out
call
add
sbb
mov
loop
es
cmp
inc
popf
mov
dec
dec
add
add
cmpsl
jg
ss
in
xchg
xchg
fisttps
sti
or
or
cltd
and
xor
lods
adc
and
ret
mov
mov
push
outsb
mov
repnz
cmc
pop
mov
lods
dec
inc
repnz
adc
xchg
fwait
cmc
enter
xchg
pushf
mov
cmpsw
es
sbb
aas
ret
add
out
lret
movsl
xor
mul
dec
and
jmp
in
cmp
das
cs
and
push
or
sahf
inc
popf
pop
push
adc
jmp
loopne
and
lcall
pusha
xchg
jno
pusha
xlat
mov
mov
sbb
incl
addr16
pusha
push
push
mov
xchg
push
addr16
jbe
mov
shll
popa
movsl
adc
sti
sbb
sub
mov
in
mov
inc
out
insb
push
mov
inc
adc
lock
mov
cvtdq2ps
shll
mov
sub
and
ftst
test
dec
scas
out
divl
or
push
popf
or
pop
cmp
sbb
mov
fwait
mov
lds
mov
push
adc
pop
add
fildl
daa
jo
jmp
mov
cld
xchg
mov
push
push
out
jge
loop
sahf
mov
mov
xchg
popa
and
mov
dec
cmp
es
jp
jns
add
jecxz
adc
in
das
mov
ret
rclb
sub
and
xor
mov
cmp
dec
jns
dec
push
shrd
ret
mov
add
sbb
add
mov
imul
inc
sbbb
inc
nop
jge,pt
mov
imul
inc
adc
or
or
clc
sub
push
mov
ljmp
out
xchg
ljmp
out
cwtl
ret
or
ss
cli
mov
sbb
mov
push
pop
or
out
int3
movsb
cmc
loope
orl
cmp
mov
dec
cwtl
je
xchg
ja
mov
mov
mov
and
out
add
into
push
std
fmulp
nopl
fnstsw
mov
mov
ljmp
faddp
jl
mov
pop
lahf
clc
mov
iret
pop
testb
sti
adc
lods
adc
fistpl
add
mov
insb
leave
ror
pop
rcr
shlb
jmp
cltd
out
xchg
pop
movsb
shrl
fisubrs
sbb
cltd
inc
or
lret
sbb
push
rorb
subb
sahf
add
std
or
adc
xor
movsl
mov
mov
mov
test
inc
fistl
sub
inc
negl
sahf
cltd
cmp
or
adc
adc
and
mov
or
ljmp
call
sub
andl
adc
cmp
rcrb
or
fmuls
add
xor
cwtl
ljmp
push
xor
iret
cmc
adc
sub
dec
mov
js
dec
push
inc
fcomp
xchg
mov
fistl
push
orb
rcrb
xor
xchg
mov
mov
daa
sbb
das
sarl
xchg
jnp
xorl
in
adc
add
int3
jno
in
mov
add
lcall
jnp
xor
ret
arpl
jg
lock
nop
insl
mov
sarl
pandn
dec
fxtract
xchg
inc
sti
test
cld
icebp
sbb
in
add
decl
xchg
arpl
std
mov
pushf
push
jne
pop
jne
sbb
fnstenv
decl
pushf
stos
push
jne
scas
cltd
movsb
jo
adc
scas
cmp
cmpb
xor
scas
fldenv
movb
scas
sub
sub
mov
mov
pushf
movsb
rcrb
lahf
xor
out
add
pop
add
stos
push
int
lea
mov
mov
cmc
xor
mov
out
scas
ret
dec
add
int
jmp
outsl
in
push
push
addl
lcall
insl
bound
popf
ret
enter
or
sahf
stos
hlt
and
mov
pop
add
cmp
sbb
in
inc
jg
xlat
gs
sub
adc
dec
imul
cmc
stos
js
aaa
imul
cltd
mov
dec
mov
push
jnp
dec
out
adcb
mov
push
call
pop
aam
shlb
push
pop
add
and
pop
jno
imul
adcl
icebp
ret
stc
insl
xchg
outsb
inc
fmuls
sub
lock
popf
and
and
shl
or
pop
movl
aas
and
negl
adc
sub
enter
jno
mov
push
notl
adc
daa
gs
clc
aad
clc
dec
fwait
shrb
filds
sbb
xchg
aad
aas
ss
push
lret
lds
push
mov
and
pop
sarl
insl
inc
das
ds
lret
out
popf
pop
dec
push
imul
out
mov
enter
movsb
add
cmpsb
add
cmp
stos
xor
mov
sub
data16
jmp
sahf
pop
sahf
scas
hlt
ret
inc
es
sbb
fimuls
outsl
out
jge
pop
add
jmp
orl
push
clc
xchg
mov
movsb
pop
pop
dec
adc
and
push
sub
aam
dec
in
outsb
cmp
jp
add
sub
movsb
imul
cmp
jp
mov
lret
mov
or
mov
fistpll
sub
xchg
or
mov
inc
inc
and
pop
addb
sub
dec
jecxz
mov
and
cmp
hlt
repnz
loop
xchg
or
test
cmp
jp
xchg
and
push
jecxz
bound
daa
icebp
mov
cltd
push
jle
arpl
je
cmc
test
das
mov
xorl
xor
and
stos
inc
lea
cmpsb
rolb
push
sub
iret
sahf
fwait
push
std
pop
out
repz
daa
ret
adc
hlt
inc
out
jle
push
xchg
mov
pusha
sub
in
sub
mov
fsubs
xchg
sub
jo
sub
add
add
outsl
loop
push
cmp
imul
inc
ljmp
pop
sub
add
inc
add
inc
into
mov
in
mov
fadds
cmp
dec
sbb
dec
dec
push
pop
fwait
mov
stos
inc
jp
mov
out
cld
lcall
fcompl
cmpsb
jmp
xchg
jge
out
push
mov
mov
adcb
jb
add
nop
jns
ds
xchg
mov
cmc
jp
jb
mov
sub
jns
push
xchg
loop
gs
loope
add
daa
xorl
es
xchg
add
insb
cmp
das
sbb
enter
negb
push
out
lods
or
cli
push
and
in
mov
xchg
fcmovb
mov
sti
push
pop
inc
call
mov
sbb
pop
out
xor
loope
in
divb
pop
scas
aaa
ficoms
push
insl
jl
adc
inc
mov
mov
xchg
or
call
push
shrb
jno
lock
popf
jl
pop
xchg
add
xchg
cmp
xchg
xorl
repz
jne
fsubr
fcoml
pop
sbb
dec
daa
ljmp
inc
rolb
aas
add
mov
js
imul
pusha
add
lods
or
movb
cwtl
shl
mov
jl
je
sub
test
jmp
push
dec
or
fistl
and
mov
faddl
das
pop
pusha
js
mov
add
jo
jle
pusha
inc
jmp
sub
mov
pop
mov
leave
subb
pushf
inc
cmp
mov
xor
cli
push
jge
add
mov
push
push
inc
adc
and
mov
ret
mov
icebp
add
xor
aaa
mov
pop
stos
mov
jbe
mov
cmp
mov
mov
jl
xor
cmp
push
jp
pop
stos
mov
leave
movb
mov
stos
iret
pusha
subb
scas
mov
dec
adc
fs
aam
sub
cmp
test
loop
hlt
cli
mov
xchg
lcall
sub
push
decl
or
mov
jg
mov
imul
pop
mov
daa
jbe
inc
dec
mov
cli
call
mov
mov
mov
dec
pop
jl
int3
imul
xchg
sbb
jg
adc
inc
cmp
jecxz
movsb
jmp
add
pop
in
data16
inc
orps
or
aas
incl
lea
push
divl
lods
jno
iret
pop
push
int
pop
imul
jmp
xchg
sub
or
sub
mov
aas
movsb
test
push
dec
sbb
jmp
push
cmp
lcall
out
pop
pop
mov
cmp
or
imul
fcoml
or
mov
inc
sarl
sbb
jge
dec
and
pop
popa
das
leave
mov
and
data16
fadds
dec
iret
mov
push
and
adc
ja
adc
rorl
mov
fisttpll
push
mov
sub
xor
ret
cmp
out
cs
enter
loope
imul
outsl
dec
xor
jge
fs
pushf
xor
mov
call
stos
sarb
inc
push
into
pop
sbb
ss
jle
mov
or
mov
clc
out
rep
lahf
ror
aas
jb
iret
repz
adc
outsl
gs
and
testb
sub
dec
imul
jne
mov
lret
mov
mov
aam
pop
and
int3
xor
add
xor
bound
cmp
into
mov
fcomps
jg
cmpsb
cwtl
sti
call
cmp
jle
std
push
inc
fwait
fwait
mov
bound
leave
mov
sub
bound
sbb
or
inc
xlat
push
jg
lret
mov
arpl
mov
adc
cmpsl
mov
jmp
les
enter
aad
les
push
lea
mov
mov
jge
pop
add
frstor
sub
push
mov
xchg
sub
push
std
mov
or
dec
inc
xchg
and
test
sbb
cmp
xchg
and
aaa
add
jmp
mov
pop
and
repz
hlt
mov
pop
pop
int
insb
fwait
pop
test
jmp
jno
and
out
stos
add
hlt
repz
lahf
insb
cmp
jle
xchg
push
scas
ficoms
dec
mov
sbb
dec
inc
lret
mov
and
sbb
add
lock
jecxz
ret
orb
dec
mov
sarl
xchg
push
pop
insl
jb
mov
test
inc
jg
leave
cmp
inc
mov
bound
add
add
pop
dec
pop
pop
nop
fsts
pop
xor
fcomps
push
mov
xchg
cmpl
ss
lods
xor
lret
mov
mov
cmp
movq
jmp
pusha
sub
ss
popa
push
pop
pmaddwd
lret
jae
ss
mov
repz
test
shr
xor
js
dec
cmp
lahf
shll
out
test
and
or
xor
in
cmc
xor
stc
imul
inc
inc
sub
addr16
lcall
pop
jnp
sarl
fimuls
sub
xchg
out
dec
int3
pop
pop
mov
aaa
lods
pop
cs
enter
mov
out
loopne
sub
ja
inc
pop
pop
lret
pop
xor
jle
mov
aas
fwait
and
add
fwait
add
mov
xchg
mov
into
mov
cmp
aad
dec
rcl
cltd
ficoms
push
xchg
inc
dec
insl
lret
jmp
sbb
jno
mov
cmp
dec
jo
popa
insl
cmp
shll
push
movsl
stos
clc
cltd
and
mov
dec
popf
jge
mov
jnp
push
sbb
sbb
mov
out
movsb
incb
and
cmp
cmp
push
in
mov
push
fs
sahf
inc
neg
push
test
lahf
jmp
cmpsb
insl
jno
data16
dec
addr16
and
mov
lcall
lret
roll
pop
xchg
push
cwtl
daa
dec
rol
add
and
fcmovb
mov
dec
shll
sbb
lret
mov
pop
add
pop
movsb
sti
popa
cmp
aaa
or
or
int
enter
mov
mov
mov
sbb
sbb
mov
incl
lret
lods
popf
pop
sub
pusha
pop
push
inc
test
jle
mov
icebp
repnz
test
adc
call
jo
push
mov
jbe
sbb
jne
insl
outsl
cmpsl
inc
sbb
in
dec
out
xchg
cs
push
cmp
cwtl
ja
sbb
mov
pop
jae
xchg
leave
sbb
aam
mov
filds
sbb
lock
lea
nop
or
lahf
adc
cmpsl
sbb
insl
and
cmp
push
in
cmp
enter
aas
mov
repz
out
ds
fstl
or
and
sub
stos
sub
jnp
imul
pop
add
in
jns
fucom
jbe
gs
cmc
cmc
add
cmp
adc
and
lcall
push
lahf
movb
enter
dec
mov
push
cs
jle
mov
pop
repnz
cmp
mov
mov
iret
pusha
xor
add
ljmp
andl
int3
in
jle
or
xlat
jne
dec
adc
or
pop
pop
movl
rcll
xor
mov
popf
adc
inc
inc
add
mov
jnp
mov
dec
testl
dec
xchg
pusha
addr16
shlb
jno
jae
cmp
pop
inc
lods
lret
imul
push
mov
scas
test
pop
fwait
out
std
lods
test
add
add
push
js
mov
js
xchg
sbb
inc
ret
or
mov
out
jmp
and
aas
or
adc
stc
mov
adcl
nop
sub
sub
test
fsqrt
mov
sub
je
add
sahf
call
sub
add
addl
insl
jp
mov
or
lea
sti
push
es
xchg
fadd
inc
aad
pop
pop
popf
jno
mov
bound
jecxz
mov
and
mov
xchg
jg
jmp
stos
rcrl
lret
enter
imul
sahf
es
aad
mov
xchg
mov
lcall
and
xor
scas
pop
xor
xor
inc
inc
imul
sbb
or
ficoms
pop
fdecstp
dec
je
jmp
js
push
pop
ret
popf
adc
leave
movsw
cmc
ljmp
and
pop
prefetch
or
lds
dec
negb
xor
out
push
dec
mov
xor
jne
xchg
ret
jne
aaa
ret
mov
les
popa
adc
lds
mov
shll
mov
fidivrs
xchg
sub
mov
push
adc
xlat
xchg
repnz
mov
dec
mul
fstpt
movsl
sub
fcmovnu
inc
or
pop
lsl
adc
push
mov
test
subb
sub
adc
daa
scas
sahf
ljmp
filds
pop
sbb
mov
sub
pop
sti
cmp
sub
adc
and
add
cli
jmp
xor
jb
adc
pop
mov
std
push
push
fisttpl
mov
sub
mov
std
jmp
addr16
lock
mov
je
sub
sub
arpl
mov
jecxz
movsl
es
mov
insl
jmp
adc
addr16
adc
jecxz
xadd
rcl
pop
mov
xchg
push
or
push
jne
insb
adcl
sbb
mov
ja
ja
or
cmp
dec
loop
cmp
push
je
outsl
mov
inc
out
lcall
add
fdivrs
mov
cmp
repz
test
push
ret
fisttpll
mov
ljmp
testb
push
lods
lret
in
imul
xchg
icebp
pop
pop
imul
fdivl
dec
mov
iret
movsb
push
shrl
and
or
out
pop
outsb
pushf
dec
and
sbb
jbe
repz
shlb
and
mov
inc
mov
fwait
push
aaa
jmp
fiadds
sub
inc
push
cs
mov
pusha
xchg
mov
sar
dec
shr
pop
out
data16
xor
aam
data16
mov
stos
jo
and
mov
sarl
cmpsl
or
stos
mov
xchg
sbb
dec
nop
adc
pop
mov
cmp
outsl
rorb
sarl
or
push
inc
dec
aas
xchg
adc
hlt
sub
in
out
mov
mov
cmp
decl
pop
push
adc
je
andb
aam
cmp
jge
dec
add
movsl
in
sbb
or
incb
in
fsubrp
pop
repz
movsb
frstor
or
adc
cmpsl
popa
inc
incb
push
fwait
mov
and
push
jbe
in
loope
fsubl
dec
insl
repnz
and
setle
and
cmpb
jecxz
pop
scas
lock
push
mov
sub
jmp
inc
addr16
out
sbb
pop
jmp
cld
cmp
aad
mov
loop
or
ret
jnp
jle
je
pop
mov
psraw
aas
das
pop
inc
gs
fs
imul
stos
push
xor
cmp
adc
adc
add
xor
cltd
shlb
outsb
inc
lret
xchg
cltd
xchg
mov
mov
inc
mov
outsl
cmpsl
inc
sbb
mov
jne
call
sub
pop
sub
cmp
in
in
xchg
jge
daa
loopne
adc
pop
lahf
gs
push
or
cmpsl
ss
pop
dec
je
pop
xchg
mov
and
lcall
adc
jmp
in
sbbl
fwait
das
dec
cmpsb
fscale
fists
and
repz
sti
jle
xchg
mov
sub
subl
arpl
lahf
das
test
cld
pushf
xchg
mov
stos
sbb
fistps
roll
sarb
stos
inc
mov
mov
rcrl
mov
jp
and
fisttpl
mov
jo
sti
or
mov
fldl
mov
sbb
push
stc
mov
add
gs
call
movsb
in
lret
jmp
leave
sbb
cmp
cmpsb
je
cmpsl
lods
push
xadd
into
mov
outsb
popa
jg
pop
cwtl
sub
cli
xchg
xchg
mov
std
sub
xor
dec
popf
pushf
or
jecxz
pusha
mov
jl
or
mov
cltd
lods
and
xchg
jo
addr16
push
inc
add
jle
add
iret
outsl
shll
sbb
mov
mov
ret
sbb
inc
jl
jmp
sbb
insl
int
ljmp
cs
lahf
ljmp
dec
imul
mov
mov
pushl
dec
in
out
outsb
sahf
cmp
fsts
fnstcw
jmp
les
insl
test
sbb
cmp
dec
es
ja
bound
adc
pop
add
xor
hlt
andl
pop
mov
and
rcll
test
fxch
jl
dec
mov
jecxz
xchg
jg
scas
push
ret
mov
pop
mov
outsb
fwait
jne
adc
xchg
out
xor
xor
stc
ss
jmp
outsl
jle
test
fisttps
ljmp
and
dec
ss
scas
or
jge
xchg
sbbb
inc
insl
ss
test
decl
frstor
repz
ficomps
icebp
test
adc
xchg
bound
xor
pop
int3
mov
sub
cmp
sub
adc
or
push
or
fcomps
pop
or
fistps
jp
inc
push
les
push
sub
xor
dec
ret
mov
cs
mov
js
sbb
pop
mov
and
pop
fdivs
fdivrs
pop
xor
dec
sbb
jbe
addb
cmp
sbb
cmp
mov
stos
or
int
mov
jge
jle
imul
mov
mov
fmul
shll
xor
rcll
js
xchg
stos
ljmp
adc
mov
dec
xchg
push
fisttpll
jb
hlt
pop
xchg
movsl
call
mov
push
leave
arpl
test
into
arpl
cmpsl
xchg
mov
test
into
dec
jecxz
cli
aad
subl
dec
aaa
loop
movntq
sbb
mov
xor
and
lret
test
pop
out
test
jmp
clc
jno
pop
lds
push
adc
test
out
mov
loop
jmp
and
mov
push
out
stos
push
cwtl
push
or
pop
fcmovbe
jb
cwtl
or
shl
fdivrs
imul
push
push
lahf
nop
push
xchg
add
push
lahf
aas
cmpsl
push
sbb
cltd
add
aad
jg
pop
pop
rcr
das
shlb
pushf
cwtl
fs
in
push
fwait
stos
jge
pop
enter
sarl
dec
stc
xchg
jge
daa
cmp
push
in
popa
sbb
xchg
mov
test
lret
outsl
out
sub
or
or
pop
and
aad
ret
push
xchg
sbb
push
xchg
add
mov
xchg
icebp
int
xchg
repz
sbb
inc
sub
cwtl
stos
dec
imul
andw
fistpll
pop
cmp
test
push
movsl
mov
push
fisubl
inc
push
inc
je
cwtl
cltd
add
xchg
test
cli
loop
dec
das
dec
cmp
pop
daa
lea
cmpsb
mov
cmp
mov
pop
sbb
loop
aas
push
lods
add
loop
pop
xorb
jno
daa
mov
mov
js
rolb
outsl
xchg
lcall
fsubrs
push
xchg
lahf
stc
xchg
inc
sbb
xor
test
jo
ss
stos
cmp
pusha
inc
loopne
fisttpl
jne
aas
inc
mov
and
in
icebp
ljmp
push
call
clc
pop
sarb
js
aas
daa
jge
add
jbe
adc
lcall
adc
adc
sahf
cmp
lea
jns
jbe
sarb
cs
aaa
dec
pusha
push
mov
es
test
jecxz
cmp
sar
rorl
mov
std
fldenv
push
cmp
mov
xchg
cmp
outsb
sub
mov
je
test
mov
jle
cmp
jg
fs
or
test
push
cltd
xor
stos
jmp
xor
xchg
scas
mov
pop
stos
mov
js
mov
push
ss
into
iret
sti
inc
mov
add
aad
out
pop
xchg
cmpsb
test
mov
push
add
jo
ss
das
sub
mov
sti
xchg
pop
insb
call
mov
clc
mov
push
xor
pop
ljmp
inc
cmpsl
inc
push
in
roll
jp
iret
xor
cmp
cmc
repnz
ja
ret
inc
adc
sub
in
das
inc
das
ret
sub
inc
xor
sbb
cmp
inc
jb
bnd
fmul
mov
and
lea
lahf
dec
fs
or
sbb
imul
mov
decl
sub
jne
jp
aam
insb
jmp
int
sbb
roll
fisttpll
aam
aas
popa
pop
lods
call
xor
or
int
addr16
jp
add
test
push
or
rorl
enter
pop
rorl
push
xchg
adc
mov
imul
xchg
pop
mov
lods
cmpsl
outsb
out
loope
ffree
add
mov
shlb
cmp
or
inc
dec
dec
nop
out
sbb
es
mov
test
add
adc
ficoml
adc
scas
or
xchg
mov
das
adc
pushl
pop
loop
bnd
addr16
nop
jae
or
push
icebp
cli
orl
movsb
inc
and
jne
xchg
arpl
sbb
xchg
fs
fwait
mov
fimull
imul
push
inc
pop
incl
test
fidivrs
jmp
sbb
fs
mov
aad
or
idiv
xchg
cmpsb
inc
aad
popa
insb
outsb
mov
fisttps
xor
and
sti
pop
cmp
aas
in
dec
jge
neg
push
mov
rcrl
add
idivb
leave
dec
and
and
in
loopne
add
scas
mov
idiv
in
movsb
xlat
cld
pop
lods
lods
test
in
jle
imul
push
inc
int3
or
sub
nop
rorl
jae
stos
xchg
aas
add
add
jecxz
push
sub
sbb
in
xchg
xorb
pop
fs
pop
insl
in
loope
loop
inc
push
push
xchg
xchg
les
pop
sbb
dec
xor
push
out
in
dec
adc
out
adc
mov
cmpsb
push
jae
insl
fdiv
in
cmp
jecxz
adc
std
push
sub
jmp
xchg
aad
das
mov
daa
mov
sub
lcall
wrmsr
push
dec
bound
mov
cmp
lret
es
push
stos
divl
jl
mov
xchg
inc
push
dec
sbbb
mov
jecxz
mov
mov
fs
aam
roll
push
cmpsb
add
movsl
scas
adc
pop
push
pusha
mov
xchg
add
mov
and
test
lret
xor
int
add
mov
fucomi
jns
fwait
or
negb
cmp
sub
imul
outsl
push
push
decb
int
adc
xchg
or
push
cltd
fildl
mov
fsubr
outsb
dec
mov
mov
mov
pop
mov
inc
inc
loopne
js
xor
push
pop
test
adc
popf
inc
loope
loopne
jns
xchg
jmp
stc
in
jno
es
hlt
repnz
mov
sbb
scas
inc
xor
or
pop
les
pop
push
add
out
shld
jb
push
add
push
jno
gs
and
out
push
gs
std
push
pop
int
inc
in
cmp
lea
fs
mov
pushf
jge
xor
out
mov
inc
mov
shl
inc
mov
mov
add
ds
and
and
inc
push
jecxz
into
push
sbb
data16
push
mov
mov
mov
dec
adc
jae
and
cmpl
xchg
movsb
repnz
sti
cld
imul
pop
pop
add
stos
xchg
jns
and
push
lret
xor
aas
stos
addr16
call
cmpsl
insl
cwtl
pop
mov
fimuls
fstpl
cmc
xor
or
int3
xor
out
nop
in
stos
dec
fucomi
lock
sub
jbe
test
jae
and
dec
xor
pop
xchg
inc
rorb
xchg
mov
hlt
cmp
call
push
sahf
nop
push
dec
icebp
adc
int
call
mov
and
pop
push
mov
fildl
movzbl
pop
call
repz
pop
mov
xchg
mov
xchg
pop
movsl
push
sbb
iret
or
cmp
sti
das
out
add
xor
xchg
aaa
mov
mov
mov
xchg
int3
ds
repnz
sti
insb
shll
jl
xchg
cmp
dec
das
call
and
daa
adc
cmp
jns
lret
js
je
pop
and
dec
adc
out
je
push
fbld
insl
jl
addr16
lods
sti
sbb
rorb
jne
mov
out
lock
jmp
inc
sub
adc
loope
push
popf
xchg
leave
fimull
popa
scas
push
xlat
enter
jno
xchg
jle
mov
push
in
mov
scas
jbe
out
mov
mov
inc
mov
sub
cmpsl
xor
pop
cmpxchg
mov
push
movsb
bound
push
and
pop
movb
shrl
bt
mov
stos
xor
dec
cmp
cli
jb
sbb
inc
mov
add
push
sub
cld
pusha
or
test
pop
jp
popa
jge
fcompl
repz
outsl
cmp
arpl
sti
mov
push
inc
sahf
adcl
sbb
xchg
push
jl
mov
jno
sub
aaa
data16
inc
adc
pop
and
sbb
bnd
imul
xchg
rclb
aad
repz
sub
cmp
ja
in
push
fimull
imul
xchg
push
dec
scas
push
dec
pop
test
int
jle
leave
mov
cmp
mov
cmc
hlt
xor
stos
pop
jg
sbb
std
push
jmp
or
idivl
mov
rcll
fcom
in
incl
mov
lds
push
inc
cmpl
push
mov
inc
test
fsubs
cmp
das
leave
jecxz
rorl
pop
jl
push
xchg
test
jl
mov
lea
jp,pt
imul
test
jp
xor
je
fdivrp
fdivrl
jbe
adc
shrb
sub
orb
push
repz
cwtl
fstpt
rcrl
sbb
cmp
cmp
add
das
leave
rcrb
das
sarl
xor
xor
aaa
pop
loope
mov
or
icebp
sbb
js
aam
cmp
mov
cltd
ljmp
sub
ja
aam
jecxz
mov
into
push
xor
pop
scas
roll
sbb
sti
lea
jle
add
cmc
xchg
inc
ffree
push
outsl
addb
sub
iret
pusha
xor
jle
pop
inc
movb
in
xchg
ret
inc
cmc
xlat
xor
fldcw
in
push
arpl
test
xor
shrl
dec
pop
jns
sub
ss
pop
inc
mov
mov
sbb
pushw
push
stos
shlb
cli
pop
pushf
out
mov
jmp
ljmp
loop
mov
mov
jg
shll
lcall
sub
rorb
test
sbb
out
sbb
shrl
dec
enter
push
jmp
or
sahf
in
and
and
sti
pop
mov
lcall
and
mov
in
xor
xor
repz
sbb
ret
and
cmpsl
add
icebp
jno
pop
icebp
jecxz
dec
dec
ja
and
xlat
push
pop
mov
or
jge
jo
shll
xchg
pusha
jl
pusha
stos
xchg
mov
roll
xor
push
sbb
out
jo
das
insl
add
add
out
jnp
push
fs
push
test
popf
imul
inc
xor
push
je
jne
je,pt
sbb
sbb
iret
pop
shlb
push
dec
adc
xchg
pop
sbb
sub
nop
icebp
arpl
pop
xor
sbb
cmpl
leave
in
mov
mov
cwtl
and
repnz
imul
sbb
inc
scas
loopne
mov
sub
xchg
pop
sub
jae
cli
xor
lds
je
jl
enter
into
addr16
sub
pop
sub
lahf
stos
mov
cmp
jecxz
inc
mov
xor
mov
scas
sarl
pop
xlat
roll
cmc
cmp
into
stos
inc
decb
xchg
dec
repz
push
inc
arpl
aaa
pop
ljmp
mov
mov
pop
test
jecxz,pn
push
stos
jp
xchg
shl
push
stos
fstp
int3
cmp
les
push
dec
lcall
adc
and
scas
leave
push
jb
cmp
out
shl
call
inc
idivl
add
repz
cs
lcall
lock
inc
pop
push
mov
add
lret
aam
repnz
movsl
mov
mov
repnz
mov
lock
insl
xor
mov
loop
lret
jnp
andl
and
inc
addb
mov
dec
push
pop
push
dec
pusha
shll
and
test
sbb
ret
or
stos
and
nop
push
in
xchg
repz
xchg
fcoms
enter
repz
cmc
mov
negb
mov
roll
ffree
lods
fidivl
fldt
scas
cmp
xchg
scas
inc
jmp
push
into
mov
fs
mov
cmpb
popa
cwtl
xchg
fcmovne
sbb
test
mov
add
fwait
bound
divb
or
xchg
xor
into
js
cwtl
mov
insl
fstl
ljmp
mov
fildl
popa
daa
stos
add
push
hlt
cs
enter
adc
push
mov
or
cmp
cltd
or
or
insb
xchg
xchg
add
jns
enter
cmpsl
shll
add
or
mov
jg
addr16
gs
adc
stos
in
push
mov
mov
xchg
cmp
inc
shrb
jp
cld
and
nop
jecxz
mov
cltd
icebp
ret
cmp
arpl
jle
jl
cmpl
repnz
jnp
add
mov
out
jg
cmp
popa
sbb
sub
jle
aad
out
xor
mov
push
jns
jnp
and
add
adc
jbe
inc
bound
lret
clc
sti
jle
out
jne
movl
mov
jmp
sbb
ljmp
dec
and
and
inc
jecxz
pop
dec
dec
push
bswap
daa
aas
cmpsb
hlt
xchg
int3
add
lcall
nop
jne
data16
cmpsb
orb
cltd
std
movsl
mov
mov
fs
cli
sub
sub
jb
xor
mov
jl
popf
data16
cmc
arpl
push
ffree
fs
xchg
lods
sbb
cmp
xor
dec
hlt
repnz
mov
lock
adc
or
mulb
xor
dec
cs
roll
ret
aaa
movsl
das
clc
sub
ds
fabs
shrb
and
push
push
out
lock
push
insb
mov
or
pop
push
cmp
fdivl
cs
fidivrs
mov
addb
je
jecxz
repnz
adc
lcall
jle
cmpsb
pop
ja
add
mov
call
cmc
cltd
fucomi
sahf
dec
pushw
cs
sub
bound
or
je
fdiv
or
mov
loop,pn
pushf
adc
loop
test
ficomps
in
out
jge
imul
es
sub
sbb
xlat
cmp
test
sti
push
hlt
movsb
orb
aaa
add
xor
inc
xchg
mov
sbb
aad
jp
pop
add
stc
or
mov
pop
shrd
or
cltd
pop
dec
mov
or
out
in
shll
mov
mov
js
push
xlat
mov
rcll
nop
and
push
pop
in
dec
js
dec
cmp
xchg
hlt
stos
mov
xor
or
jmp
adc
loope
nop
lcall
sbb
test
in
les
outsb
addr16
movsl
je
mov
lcall
pop
jo
and
dec
mov
mov
and
jmp
or
add
cmp
shll
sbb
insb
jb
mov
fwait
dec
pop
and
inc
lcall
hlt
jle
outsb
inc
aad
dec
or
outsb
iret
and
adc
lcall
icebp
xchg
pop
pop
lock
sub
in
add
pop
push
jg
loop
jae
clc
add
out
and
sbb
and
push
inc
adc
sbb
xchg
cmpsb
cmpsb
rcrl
jle
loope
mov
mov
inc
popa
mov
inc
mov
mov
test
or
mov
ret
pop
jp
mov
popf
cmc
mov
lret
arpl
aaa
cmp
scas
mov
adc
dec
dec
push
js
repz
ss
pop
notb
mov
icebp
in
add
fsubrl
sti
cld
ljmp
jecxz
pop
xorb
aad
inc
sti
cmp
pushf
pop
xor
or
inc
loopne
pop
fistpl
fs
outsb
cmpsb
fistpl
in
icebp
mov
xchg
scas
inc
jecxz
cmp
adc
mov
push
jmp
adc
sbb
jb
mov
xor
and
sarl
ljmp
push
cltd
data16
fst
add
mov
inc
test
jae
daa
lcall
data16
out
sbbb
js
in
jb
lret
loope
push
xor
imul
popf
dec
or
int3
les
inc
int3
xchg
inc
dec
jne
les
loopne
jmp
clc
add
aaa
cmpsl
mov
fdivl
test
clc
mov
mov
cltd
and
stos
sbb
push
imul
pop
adc
imul
fwait
scas
jecxz
test
call
enter
test
mov
addr16
nop
arpl
ret
mov
xchg
jnp
jbe
sahf
sub
sahf
arpl
xchg
jmp
sahf
leave
cmpsl
filds
jns
pushl
mov
loopne
out
stc
add
or
nop
jge
sti
adc
movsb
sahf
adc
xchg
inc
and
add
and
aad
inc
add
cltd
push
mov
adc
dec
stos
jle
test
mov
jmp
mov
cwtl
clc
out
dec
sbb
sahf
test
loope
movsb
push
mov
inc
mov
je
mov
shlb
sub
shl
cs
pop
and
test
inc
popf
mov
and
xchg
or
loop
in
add
addr16
shl
std
push
hlt
test
jno
dec
enter
sub
mov
ret
imul
cld
std
test
push
arpl
push
stos
mov
or
in
sbb
aam
fimuls
push
ret
sub
sahf
cli
or
pop
in
addr16
pop
push
pop
inc
pushf
pop
imul
mov
push
frstor
je
rcll
mov
clc
ds
mov
cmp
push
outsl
out
gs
cld
push
inc
adcl
leave
sub
add
call
dec
out
fistps
movsb
pusha
jb
or
xchg
inc
sbb
std
stc
sub
xchg
jl
fsubl
cwtl
fbstp
or
xor
insb
out
fstpt
imul
rorb
shrb
adc
sbb
adc
push
xchg
aas
mov
mov
imull
test
mov
subl
sahf
jge
lret
std
adcb
rcll
push
mov
dec
nop
push
lcall
jno
sub
xor
ficoml
inc
addl
mov
xor
in
movsb
out
mov
fldcw
push
add
and
push
push
cmp
mov
xchg
js
inc
push
jp
push
stc
xor
jle
test
pop
in
popf
insl
jae
mov
mov
jno
sbb
cmc
pop
dec
mov
aaa
cli
pusha
pushf
pop
mov
push
mov
or
sub
movsb
jbe
out
xor
pop
mov
out
push
mov
sbb
aam
push
or
mov
cmp
int
mov
push
popa
or
mov
push
stos
sarb
decb
aam
loopne
sarb
loope
or
cmp
lock
xor
or
mov
fs
pop
das
or
dec
push
enter
cmpsb
stos
sub
add
out
popf
lret
push
xchg
loopne
sbb
cmp
sub
add
sbb
fbstp
mov
inc
mov
push
add
mov
sbb
popa
icebp
ret
xor
mov
cmp
sahf
test
aad
dec
sbb
sub
call
inc
insb
mov
xchg
les
pop
clc
mov
lock
xchg
lods
push
cs
mov
insl
add
push
xchg
ljmp
lock
in
lock
ljmp
pop
loop
in
fsubs
movsl
mov
and
inc
insl
dec
fdivrl
sbb
xchg
pop
inc
xchg
jp
sbb
lods
aad
jo
cld
loopne
imul
adc
xchg
in
or
jns
pusha
imul
mul
or
jns
dec
sbbl
xchg
inc
movsb
fwait
cmp
stos
cmp
andl
lock
mov
mov
loopne
out
sub
add
xchg
dec
popa
sti
lahf
xchg
out
pop
enter
cmp
mov
cmp
test
mov
or
mov
jmp
sbb
popl
add
jne
repnz
mov
adc
out
enter
adc
cli
bound
jecxz
call
in
jb
sti
jo
mov
js
dec
sbb
pushf
loopne
push
decl
imul
mov
fcomip
notb
mov
andb
mov
or
fnstsw
addl
loop
aas
pop
movsb
leave
adc
xchg
xor
loopne
push
or
in
lcall
repz
pop
mov
mov
in
push
add
divl
xlat
jecxz
push
imul
insb
test
lds
ss
test
stc
movsb
and
or
push
inc
loop
pop
and
pop
or
imul
andl
jl
mov
fnstenv
mov
imul
enter
push
inc
test
enter
mov
orl
mov
test
sbb
add
pop
lcall
jg
cmp
pop
mov
jmp
jb
pop
popa
iret
ret
outsl
into
and
insl
xor
ds
xlat
scas
shl
jecxz
cmpl
and
mov
fistpll
and
or
add
pop
addb
adc
pop
and
lret
pop
sbb
inc
rcrl
jle
sti
in
push
fisttps
or
mov
mov
mov
mov
enter
arpl
sbb
xchg
test
popa
imulb
mov
pusha
rolb
cmp
mov
mov
insl
cmc
les
insl
repnz
fwait
ss
fwait
cmpsl
call
test
ficoms
lods
cwtl
mov
jmp
jo
stc
add
test
push
insb
stc
push
xor
cmp
dec
repz
scas
shlb
ja
cmc
sbb
stos
mov
jns
shl
mov
fbstp
scas
sub
and
pop
adc
stc
sub
mov
inc
xlat
mov
aad
setg
divl
rclb
inc
lret
mov
jbe
sbb
or
mov
popa
jno
aaa
mov
loope
or
repz
cmpsb
xchg
sub
sarl
push
push
aas
sti
pop
mov
jle
shl
adc
cmp
movsl
cmp
stc
jo
jnp
in
sub
imul
inc
xchg
out
push
jmp
cmp
fdiv
lods
mov
cmovb
inc
adc
negb
loope
xchg
adc
cmp
dec
sbb
leave
loop
push
inc
cmp
push
aas
bound
aad
ror
adc
sbb
inc
fcoms
popf
fs
adc
jns
cld
sub
cmp
sbb
jl
call
roll
push
stos
xor
adc
enter
jecxz
aas
daa
aad
out
sbbl
mov
jle
pop
pop
test
ret
rolb
jno
stos
aam
aad
ja
dec
sub
inc
idivl
mov
lcall
es
jmp
xor
dec
adc
pop
leave
movsb
scas
push
and
sub
push
ds
push
jno
lock
mov
dec
cmpsb
fidivl
dec
mov
push
sbb
enter
add
aas
and
nop
sub
and
enter
leave
pop
mov
movsl
outsb
xchg
jbe
lods
hlt
mov
jo
fistl
xor
or
or
clc
jl
not
popa
sbb
stos
sub
xchg
xorb
dec
cs
enter
sahf
lret
xchg
jnp
test
lock
popf
stos
ret
fsubp
addl
in
pop
ret
clc
scas
insl
dec
cli
push
sub
jp
repz
cli
xor
sub
into
and
in
rcrb
lret
dec
test
popf
lcall
mov
add
adc
xchg
add
fnop
repz
shrb
add
or
int
shlb
in
cli
je
cmp
sbb
mov
fs
push
and
mov
sti
jmp
jb
mov
jmp
xor
dec
add
sahf
and
arpl
nop
divl
inc
cmp
leave
into
cmp
sub
pop
push
mov
push
cmp
jg
jecxz
popa
and
lods
ret
push
lods
pop
andl
fldl2t
data16
inc
int
jl
push
mov
fwait
inc
rcrl
and
xchg
or
cmpsb
ds
je
pop
mov
loop
mov
dec
pop
popf
aam
pop
mov
cmpsb
jge
mov
imul
sbb
or
loopne
fsubrl
test
fmul
xchg
fwait
sub
inc
inc
mov
xchg
repnz
jge
cmpsb
sti
mov
sub
sbb
roll
scas
jmp
adc
mov
xchg
outsb
xorl
scas
xor
push
fildl
in
mov
pop
loope
and
xor
mov
cwtl
rorb
scas
imul
das
out
xor
add
inc
pop
xchg
int
mov
mov
mov
clc
push
jb
fistpl
jecxz
mov
xchg
xchg
shlb
js
or
pop
push
jnp
in
in
xchg
bound
push
lds
cmp
ljmp
daa
roll
push
mov
or
jbe
mov
setl
les
das
cltd
push
push
iret
and
mov
or
ss
jg
mov
lldt
fildl
mov
popa
jnp
jl
mov
leave
pop
std
imul
repnz
lods
xor
popf
loop
xchg
addr16
shl
jp
mov
adc
lret
rclb
into
dec
out
aas
arpl
dec
int
mov
pop
push
jp
insl
push
jne
pop
daa
fcoms
jno
pop
sbb
jb
and
inc
cmp
add
mov
xchg
inc
movsb
cld
and
mov
inc
ds
clc
cmpsb
popl
inc
dec
push
cli
dec
mov
out
and
mov
fisttpl
mov
xor
sahf
jno
out
nop
mov
dec
sub
call
out
mov
pop
daa
jle
in
mov
sahf
orb
lret
lahf
leave
insl
ss
push
in
pushf
fsubs
or
fistpl
xchg
js
movsl
jg
popf
scas
jg
jg
mov
xchg
lret
adc
jle
adc
out
testl
sbb
imul
jp
push
or
lods
cld
idivl
jnp
cmp
pop
lcall
mov
xchg
fildl
push
sbb
ljmp
cmp
sbb
mov
xor
out
mov
pushl
popa
arpl
pop
sbb
fmuls
psrlw
dec
push
out
add
in
or
mov
in
mov
out
push
lock
dec
aas
sub
addr16
hlt
aam
sbb
shr
pop
bnd
lcall
std
xchg
xor
subl
dec
test
insb
mov
movsb
mov
and
jns
int
jo
imul
inc
das
shll
cmp
pusha
mov
cmp
inc
call
or
xchg
sti
imul
ficompl
sahf
add
and
insl
and
das
mov
test
sub
fsubrp
ret
mov
jno
sub
cli
pop
test
int
xor
outsl
mov
js
jne
mov
jmp
lock
inc
mov
sbb
es
aad
mov
cmp
or
xor
ret
pop
aad
xchg
jl
dec
rclb
negb
cld
adc
mov
sbb
aas
ficoms
lcall
stos
loopne
aaa
cmpsb
sbb
mov
push
sub
mov
and
insl
pop
es
mov
popa
je
lods
ds
fimuls
scas
scas
mov
and
mov
sbb
call
aas
mov
dec
xchg
pop
mov
jg
cltd
push
in
mov
mov
pop
arpl
fdivp
out
pop
fcmovnb
out
mov
xlat
loopne
xchg
push
jns
jno
dec
mov
cltd
sbb
mov
mov
lret
and
enter
add
loopne,pt
movsb
dec
push
clc
stos
fsts
mov
adc
pop
sbb
inc
loopne
insb
push
je
enter
popf
jnp
xchg
dec
dec
inc
adc
pop
pop
iret
dec
push
dec
add
movsb
stos
mov
sub
cli
scas
sub
adc
adc
loopne
xor
mov
pop
push
or
push
lea
mov
xlat
dec
adc
loop
push
pop
lret
xchg
test
test
cmp
mov
call
pop
dec
xchg
or
repz
mov
xor
push
stos
subl
pop
jg
or
daa
xor
jge
mov
cmpsl
mov
mov
hlt
sub
push
and
lret
es
xor
stos
or
lcall
adc
scas
jnp
hlt
or
imul
aam
add
pop
mov
les
jne
loopne
cmpsl
or
inc
push
lea
adc
lcall
mov
sub
sbb
popf
sar
aad
ljmp
mov
jmp
and
mov
lods
int3
popf
jne
dec
xchg
arpl
xorb
shrl
push
or
mov
inc
aad
or
jae
xor
xchg
rclb
in
je
jle
dec
xor
xchg
sahf
sbb
lds
movsb
test
or
or
leave
sbb
out
lret
jb
out
sbb
sbb
repnz
pop
xlat
push
mov
je
test
inc
sub
sahf
idiv
movsb
dec
addr16
jae
icebp
jno
xchg
dec
dec
push
sbb
pop
and
mov
and
call
lods
sbb
or
cmp
lock
mov
imul
jmp
std
mov
jo
pusha
jbe
mov
in
ret
mov
or
add
push
lret
stos
push
testb
lahf
sbb
in
repnz
sar
or
in
cmc
fs
loope
and
lock
mov
push
mov
and
mov
mov
insl
mov
int
push
mov
shrb
getsec
add
adcb
out
or
inc
loopne
add
lcall
lahf
jmp
pop
jmp
pop
pusha
mov
pop
dec
insb
sbbl
mov
sti
cmc
stos
xchg
es
pop
sbb
pop
ret
mov
lods
cmp
and
test
add
mov
rcrl
fstl
pop
sbb
ss
lahf
insl
fidivs
and
sub
aam
popa
popf
push
xor
sbb
jl
imul
inc
xchg
int3
jg
mov
or
inc
mov
mov
push
dec
int3
aaa
mov
out
aas
jmp
sahf
movsb
push
fmul
add
push
imul
inc
push
add
push
fsubl
jno
cmpsl
hlt
rcrb
pop
mov
xchg
sub
sti
sbb
sbb
cmp
push
dec
das
push
sahf
shr
aaa
cld
cmp
push
imul
pop
nop
std
fiadds
stos
xor
ja
fdivrp
lods
mul
and
mov
imul
xchg
xor
cs
and
and
cmc
xchg
sub
call
lcall
cmp
mov
mov
lods
hlt
mov
js
cld
mov
push
test
movsl
adc
and
and
mov
adc
or
mov
lret
out
aad
sti
lods
sti
or
jbe
icebp
xchg
jo
or
rcll
and
adc
push
push
push
jbe
ljmp
ljmp
sub
xchg
insl
stos
cmpsb
mov
mov
mov
cld
aas
mov
mov
xchg
fs
jae
pusha
int
shlb
sub
rsm
dec
sub
movsl
fwait
lret
xor
dec
dec
jno
aas
jge
ds
outsl
adc
xor
incb
fbstp
mov
dec
in
and
enter
pop
push
push
es
inc
mov
repnz
pop
dec
test
mov
pop
das
xchg
xor
xlat
add
aas
pushf
dec
inc
inc
inc
dec
enter
pop
xchg
adc
jne
mov
jmp
xchg
sbb
rcrb
orb
cltd
mov
shl
aad
push
inc
sub
aam
iret
adc
fiadds
jle
pop
int3
pusha
xchg
mov
cmp
xchg
fnstcw
dec
dec
mov
sbb
mov
loope
mov
inc
mov
or
jns
movsb
xor
jae
fnstcw
dec
mov
xor
sbb
in
divl
and
mov
stos
xchg
or
jne
outsl
pop
pop
ret
cmp
insb
pop
shll
orb
mov
fcomps
and
pop
fcmove
jle
aad
sub
add
mov
jmp
loopne
xlat
push
and
out
mov
sub
add
sub
mov
xchg
pushf
in
mov
cmp
sub
cmpsb
lock
aaa
das
mov
cmpsl
mov
and
out
jecxz
cli
pop
dec
lret
stos
arpl
shlb
testl
insb
pop
fldl
fcomi
in
cmp
lods
dec
push
ss
cli
xlat
lods
lds
mov
xor
ljmp
cmp
lea
pop
insb
sbb
in
jl
adc
pop
jl
in
idiv
dec
mov
out
mov
cmp
mov
loope
aad
cltd
mov
sbb
pop
lods
mov
jb
clc
xchg
pop
push
jo
in
push
xchg
in
std
cmp
in
mov
gs
jmp
jmp
repz
inc
sti
stos
test
dec
sub
pop
xor
sub
movsb
sub
lahf
sbb
add
fldt
add
mov
stc
dec
jo
lret
mov
jmp
pushf
insb
popf
xor
imul
xor
xor
ficompl
sahf
cwtl
mov
or
lret
jecxz
dec
cmp
pop
sub
xor
sbb
mov
out
xchg
jp
mov
jecxz
ljmp
popf
jae
data16
cld
dec
mov
sub
insl
adc
mov
adc
push
add
mov
orb
rcrb
jge
mov
sub
mov
fsub
addb
sbb
add
push
mov
jp
punpckhwd
mov
fs
loope
mov
in
inc
inc
jecxz
popf
pop
cmp
in
dec
enter
int
pop
cli
outsl
shll
or
mov
nop
jnp
or
mov
jae
mov
jno
mov
insl
dec
bound
ljmp
or
sub
jl
inc
popf
sbbb
sub
test
jmp
mov
dec
push
cltd
imul
aad
cmc
pop
aad
in
sbb
and
ret
push
mov
pusha
pop
in
fwait
test
leave
jmp
data16
fcmovnb
mov
lock
dec
inc
call
cmp
pop
fdivrl
andb
or
inc
dec
dec
das
das
cmpb
stc
push
push
adc
push
dec
es
mov
and
psubb
mov
dec
push
and
out
fnsave
insl
int3
cmp
subl
ret
sbb
push
pop
fdivrs
adc
pop
pop
inc
cmp
pop
lret
jecxz
outsb
aaa
pop
cltd
movsb
inc
and
sub
cld
dec
cmp
push
add
outsl
mov
mov
xor
insb
sbb
sub
dec
imul
inc
xor
sti
sbb
cmpsb
shlb
sub
dec
add
es
in
jnp
pop
sub
mov
movsb
jle
icebp
pop
mov
jno
into
rorb
pop
hlt
out
jg
xchg
in
push
cltd
fdivl
ret
ja
pop
ret
nop
popf
xchg
adcl
cmp
fsubs
gs
sub
push
lcall
les
hlt
gs
mov
shl
push
fsts
adc
sbb
lds
push
pop
or
nop
mov
xor
fistpl
scas
jo
cmc
into
pop
mov
sbb
and
out
pop
dec
popl
pop
sub
pop
cltd
cwtl
mov
pushf
mov
aaa
push
in
mov
loop
or
and
call
imul
inc
push
mov
dec
lret
inc
cs
jae
or
pop
push
mov
mov
xchg
push
mov
stos
push
sub
inc
popa
loop
sbb
push
add
adc
or
mov
or
xlat
nop
call
aas
pop
test
or
adc
push
scas
push
outsb
ja
mov
pop
jno
push
lods
daa
movsb
imull
push
fwait
pop
sarb
movsl
mov
sub
mov
push
lods
mov
cs
mov
sub
sub
cmp
enter
subb
xchg
xchg
or
xchg
aas
dec
mov
insl
adc
push
cmpsb
mov
cmp
test
fisttps
inc
aas
add
ret
dec
jae
test
and
daa
adc
xor
clc
sub
pushf
movl
mov
orb
push
mov
pop
push
lods
in
xchg
loopne
movsl
loopne
add
rcrb
hlt
cmp
outsl
cmpsb
and
and
dec
sbb
lcall
mov
test
push
mov
adc
adc
pusha
add
call
mov
rcrb
loop
cli
xchg
or
pop
push
mov
cmp
sub
bound
dec
out
pop
adc
jo
cmp
xchg
mov
pop
jnp
inc
inc
ret
add
shll
dec
add
mov
xchg
shl
mov
inc
cmp
mov
pop
pushl
ficoml
std
xor
jno
cmp
js
push
fcmovu
clc
lock
stos
popf
add
sbb
xor
insl
xchg
dec
xchg
stos
or
xor
jae
ja
fisttpl
mov
out
sbb
push
cmp
sti
stos
xchg
sbb
xor
dec
data16
fiaddl
jp
mov
movsb
dec
inc
sub
aam
pop
pop
sbb
idiv
mov
aaa
inc
sub
sbb
in
jle
std
mov
fcmovb
sbb
pop
mov
pusha
loope
and
shrb
adc
mov
lods
pop
pop
sub
dec
imul
mov
jae
insl
fsubrl
lods
fimuls
add
pop
jp
enter
fcoms
mov
sbb
mov
add
out
mov
xchg
js
inc
mov
ds
push
loop
aam
jmp
test
mov
test
cmpsb
dec
mov
push
dec
nop
mov
push
mov
cli
leave
jecxz
xor
pushf
pop
daa
aaa
popf
mov
or
mov
and
mov
mov
fldln2
aam
aad
insb
dec
imul
loop
fwait
jns
aaa
dec
lret
sbb
lock
jg
mov
and
mov
js
iret
pop
popf
cmp
push
pusha
mov
inc
mov
push
lret
and
pop
xor
push
stos
nop
mov
or
pop
sbb
pushl
jp
adc
push
out
js
test
aaa
adcl
addr16
es
adc
xlat
xor
loop
xchg
jmp
xlat
aam
je
clc
jl
out
rcl
pushf
out
mov
adc
inc
sti
in
fbld
call
mov
fs
enter
sarl
pop
cmp
gs
jl
fildll
shrl
mov
jmp
lcall
mulb
and
ret
dec
push
pop
xor
add
imul
cmp
pop
negl
lahf
test
mov
out
push
xchg
test
out
and
push
out
rcrb
mov
stos
inc
cli
jnp
shlb
mov
pop
orl
xchg
clc
and
insb
push
or
push
cmp
push
dec
fnstcw
mov
aaa
lcall
jb
test
xor
adc
cmp
test
jnp
sub
enter
adc
jl
iret
cli
mov
mov
jg
cmp
mov
outsl
sarb
rorl
adc
xchg
sub
sbbl
push
dec
sbb
cmp
pop
mov
lahf
sti
test
mov
mov
stc
roll
xchg
fnstcw
adcl
cmp
xor
pop
push
into
lods
mov
xchg
lcall
mov
int3
adc
or
cltd
and
in
dec
in
cmp
cmpsb
fisubl
aas
pop
int
jnp
test
incb
ljmp
dec
cmp
mov
das
xor
xor
es
aam
cltd
xor
push
loope
and
push
incl
lods
inc
dec
subl
mov
jns
push
xorl
xor
pop
test
cli
ds
sub
sub
sub
sbb
xorb
push
outsb
push
jp
pushf
mov
inc
push
stos
and
mov
pop
xor
stos
add
jg
xchg
adc
es
jns
dec
lods
daa
mov
push
ret
jnp
inc
push
inc
xor
scas
adc
mov
adc
mov
add
xor
jmp
call
hlt
fsubs
dec
rcr
jecxz
jmp
push
aam
daa
jecxz
outsb
pop
cwtl
lods
jb
aad
fsubrl
scas
cmc
mov
jge
inc
mov
xchg
push
push
push
negb
sbb
jmp
addr16
in
adc
pop
sbb
or
sbb
call
jae
mov
testl
pop
pop
sub
out
xchg
cmp
push
mov
pop
jmp
clc
bound
movsb
pop
dec
mov
and
mov
push
js
pop
or
movsl
jp
cmp
loop
and
fistl
cmpsl
cmp
adc
jne
and
jb
xchg
sti
xor
ds
leave
inc
outsl
fs
jge
out
stos
imul
cmp
out
sub
and
jle
lahf
fs
cmp
cmp
add
sarb
lcall
push
scas
inc
xor
negl
mov
fwait
xchg
jmp
aad
popa
jle
mov
add
lea
daa
rcl
cld
mov
or
ds
lods
pop
sahf
lea
jge
add
xchg
lea
repnz
clc
hlt
imulb
cmp
addr16
lret
rolb
jge
fidivl
push
xchg
leave
rcrb
lods
adc
mov
sti
sbb
add
ds
fisubrs
cmp
cmc
sbb
icebp
cli
or
mov
xchg
pushf
pop
hlt
push
and
dec
mov
push
lahf
xchg
or
xor
add
dec
lods
mov
out
lret
xchg
rorl
cmp
repz
outsl
jne
sahf
ds
popa
shr
bnd
jmp
inc
movsb
dec
fwait
iret
sub
and
sbb
cli
cmp
ja
ret
mov
sub
cld
add
call
jne
icebp
iret
mov
pop
cltd
or
clc
daa
lahf
mov
cmp
popa
and
mov
lock
aam
and
hlt
movb
mov
mov
xor
sti
call
mov
xor
test
movsl
pop
mov
movsl
mov
add
jecxz
inc
cmp
push
int
xchg
in
push
mov
push
test
jno
adc
sarb
ljmp
adc
jb
pop
adc
or
stos
mov
and
dec
jg
adc
xor
mov
ficoms
sbb
adc
cltd
lea
lea
leave
inc
xchg
test
pop
jmp
cmpb
xchg
mov
jne
push
sub
mov
iret
roll
into
jno
outsl
cmp
sti
xor
adc
mov
insl
jp
daa
jbe
cmpsb
xlat
enter
xchg
mov
sbb
dec
data16
in
pop
xor
fs
xchg
dec
cwtl
adc
mov
push
mov
es
dec
in
outsl
fbstp
aad
and
aam
mov
out
js
out
mov
faddl
dec
mov
imul
pop
xchg
add
idiv
test
dec
fnstcw
mov
push
mov
fcmovbe
enter
sar
std
gs
cmp
pop
adc
xchg
dec
repnz
outsl
jno
ljmp
pushf
add
jl
daa
sub
cmpsb
jo
insb
shrl
das
xor
push
test
sub
pop
insb
das
es
sbb
ljmp
jmp
adc
xor
cmp
add
jle
dec
pop
mov
mov
call
or
test
mov
or
dec
mov
mov
sarb
mov
inc
dec
cli
push
jae
test
ja
dec
fimuls
movsl
int
xchg
es
insl
jge
les
cmp
mov
call
sbb
sbb
fistps
out
cmp
shrl
adc
lods
lret
or
mov
xchg
in
pop
push
cmp
and
lea
dec
and
cs
cli
frstor
jle
test
sbb
lret
or
movsl
out
adc
inc
xor
add
adc
or
adc
mov
inc
mov
fdivrl
lahf
jge
lds
xchg
dec
test
mov
mov
jno
sub
xchg
mov
clc
int3
jbe
in
jnp
out
sub
jp
or
jge
add
out
mov
mulb
jge
idivb
jns,pn
add
test
pop
push
or
fmull
hlt
stos
mov
je
out
push
outsb
imul
pop
inc
push
imul
sbb
cli
push
inc
fisubl
lret
jmp
in
lcall
ret
popa
test
pop
std
push
mov
push
loopne
lahf
sub
sti
xor
mov
mov
mov
pop
xchg
cmp
insb
mov
jo
mov
ficomps
and
sti
xchg
mov
ds
add
fdivs
in
push
add
cli
fimull
sbb
cmp
in
rclb
lahf
fistpl
movsb
mov
sbb
pop
dec
or
nop
xor
aas
stc
ss
in
popa
mov
mov
xor
xchg
push
insb
fcomps
aaa
or
mov
or
outsb
lret
les
test
adc
and
ljmpw
sahf
sti
aad
pop
xchg
loopne
lahf
sahf
lcall
nop
sub
insl
or
ud0
ret
sbb
inc
mov
inc
inc
mov
pop
push
lret
jae
sbb
sbb
imull
movsb
div
out
xor
imul
stos
cmp
int3
push
das
movsb
sbb
inc
xchg
out
mov
and
cmp
xor
enter
sbb
dec
fldl
ret
mov
sub
push
je
cmp
dec
pushf
pop
hlt
push
mov
mov
sahf
xchg
dec
sbb
jno
inc
stc
gs
adc
xchg
out
sti
stc
sbb
outsb
adcl
cmpsl
cwtl
inc
lods
rcl
dec
scas
adc
leave
xor
mov
push
mov
aad
scas
in
adc
add
mov
cmc
arpl
test
and
adc
cmp
add
dec
and
pop
jo
or
test
test
mov
popa
xorb
xor
jb
and
sbbb
xchg
sbb
xchg
sbb
sub
movsb
push
ljmp
cmp
adc
adc
push
xchg
stos
push
fs
add
mov
push
ljmp
pop
push
inc
mov
in
xchg
fmuls
sbb
lret
stc
add
jne
roll
test
xchg
inc
lds
addr16
push
pop
test
jl
neg
pop
mov
repnz
or
enter
ds
pop
pop
imul
call
inc
movsb
inc
mov
add
loop
xorb
add
sti
jne
sub
aam
dec
adc
jge
or
sbbb
mov
cmp
inc
sti
jno
mov
sub
scas
mov
inc
push
mov
mov
add
mov
fadds
out
jmp
fwait
xchg
ljmp
or
and
adc
std
push
scas
inc
cmp
mov
mov
out
popa
lcall
dec
xor
xorb
jge
adc
mov
imul
jne
inc
incl
jmp
insl
xor
cmpsb
add
pusha
test
pushf
mov
mov
xlat
mov
std
dec
lcall
adc
jbe
and
jb
push
aam
out
push
xor
adc
mov
mov
mov
jp
xchg
xchg
cmp
fs
jge
inc
jb
xchg
gs
loopne
test
out
popl
mov
jg
xchg
pop
icebp
daa
aad
lea
sti
mov
and
jp
or
dec
call
and
mov
dec
out
mov
aaa
push
cwtl
icebp
mov
push
cltd
or
mov
add
add
daa
and
call
fisubs
out
jo
mov
clc
loope
repz
incb
lcall
icebp
sbb
and
iret
xor
mov
inc
push
mov
xchg
mov
jnp
das
mov
es
mov
gs
jl
pushf
insl
addr16
lcall
mov
adc
mov
aaa
int
in
mov
push
roll
or
mov
out
nop
data16
or
clc
rolb
fildl
js
inc
adc
pop
lcall
mov
pushf
js
push
rorl
lock
ja,pn
fs
rcl
repz
das
jo
aaa
mov
sbb
sbb
mov
insb
fwait
ja
dec
mov
cs
xchg
jle
pop
cs
mov
lods
xchg
jo
mov
sarb
sarl
jbe
movsl
sub
mov
jmp
push
mov
mov
int
setns
std
mov
call
rcrb
sub
push
push
mov
es
stos
ss
repz
sbb
scas
xor
out
xor
dec
inc
sub
pop
repnz
adc
lea
sub
push
bound
push
xchg
arpl
push
sti
dec
inc
negb
inc
sub
lcall
ja
bound
lahf
dec
mov
mov
sahf
fiadds
std
insl
pusha
paddusb
and
stos
fidivl
js
xor
mov
js
jne
xchg
lcall
repnz
imul
out
dec
gs
xor
xchg
pop
ja
das
hlt
repnz
lret
sbb
cmp
out
fcmovbe
inc
lods
gs
jbe
movsl
mov
xchg
aaa
std
scas
add
fcoml
movsb
adc
mov
mov
inc
test
dec
stos
xchg
adc
aam
stos
aam
roll
mov
xor
push
fstl
dec
mov
push
pop
jge
test
push
lret
xchg
ds
jb
mov
pop
hlt
jecxz
ljmp
stc
jb
roll
or
aas
xchg
jae
jb
dec
imul
inc
sub
fisubrs
mov
stos
pop
sahf
mov
lahf
push
jb
xchg
or
adc
into
push
lods
wbinvd
fsub
jmp
mov
push
stc
roll
inc
mov
sub
mov
roll
dec
xchg
mov
ret
hlt
loopne
lea
movsb
xor
mov
xor
popf
lea
dec
jae
mov
mov
sbb
dec
mov
pop
imul
mov
dec
xchg
mov
outsb
sbb
pushf
lock
cmp
or
ficompl
push
mov
sub
sub
outsb
pusha
data16
leave
fmull
ja
sbb
pop
xchg
in
pop
roll
fdivs
mov
in
jge
mov
cmp
xlat
ret
jae
mov
cmp
ret
clc
test
ljmp
cltd
fnstcw
xor
dec
xlat
jecxz
sbb
loope
mov
cmp
cmp
imul
jp
in
pop
jns
mov
rcl
std
ljmp
jb
and
mov
dec
and
xlat
enter
cld
das
inc
cmpsb
xchg
bound
cmp
mov
inc
aam
inc
push
sub
int
push
jp
out
sub
sub
ljmp
xchg
ret
adc
shll
pop
stos
pop
scas
ds
sbb
xchg
xlat
insb
dec
push
stc
push
loop
xor
inc
cmpsb
and
push
les
mov
push
xor
hlt
cs
loope
jl
ss
sub
std
repnz
ret
repz
test
mov
js
das
lds
push
dec
mov
cmpsl
xlat
and
push
inc
cmp
out
mov
mov
cmp
out
sbb
ret
gs
lahf
ficompl
sbb
pop
and
adc
pop
push
cli
aas
push
nop
fstpt
jae
cmp
xchg
pop
test
push
fnsave
fsubp
fwait
out
out
test
test
popa
xchg
sbb
imul
jb
sti
mov
lock
or
stos
jmp
imul
adc
push
mov
inc
pop
notb
inc
lock
mov
in
xchg
imul
pop
addb
mov
cmp
pop
sub
inc
xor
js
lret
dec
jge
sbb
cmp
or
mov
mov
popf
lcall
mov
add
mov
cmp
sub
xor
pop
mov
imulb
and
inc
movsl
fldcw
popf
and
out
lods
or
xor
out
mov
mov
dec
push
addr16
ja
push
hlt
lret
pop
add
cmp
mov
mov
das
inc
lods
leave
mov
xchg
push
iret
int3
in
jg
js
cld
jnp
push
mov
outsl
mov
aam
insl
popa
push
push
es
adc
daa
sbb
mov
rorb
ret
insl
fisubl
pop
fwait
cwtl
pop
or
add
add
iret
in
jl
daa
add
imul
test
sub
add
jae
popf
pop
enter
stos
inc
lret
pop
popa
lret
dec
sbb
push
push
scas
ds
pop
lock
shr
bound
adc
mov
imul
fnstcw
dec
fdiv
shlb
sbb
in
in
lock
pop
mov
adc
gs
pop
sub
outsb
mov
cmp
ljmp
xchg
bound
adc
in
in
xchg
add
pusha
sbb
repnz
inc
cs
mov
je
jge
mov
dec
lret
and
xchg
sbb
insb
xchg
cmp
aam
mov
mov
xchg
out
test
rcll
popa
arpl
lods
add
and
or
adc
mov
dec
aad
dec
jg
cld
add
stos
sbb
jle
sbb
adc
xchg
cmpsb
sarl
cltd
ljmp
repz
aaa
das
punpckhbw
scas
push
int3
xorl
mov
je
sub
dec
fcompl
inc
mov
ljmp
shrb
lahf
cmc
inc
int
jne
adc
ss
addr16
loop
mov
and
lret
pop
push
dec
mov
push
into
pop
sbbl
mov
cmp
cmp
jb
add
jbe
lret
jnp
xchg
movsl
cli
aaa
dec
into
push
add
scas
arpl
sbb
loopne
jecxz
cs
scas
rol
mov
mov
movb
mov
inc
jle
sahf
mov
jl
call
mov
mov
sarb
push
xchg
push
subb
mov
mov
lds
aas
pusha
mov
test
lds
out
lret
add
add
xchg
adc
fdivrl
popf
cld
fwait
movsl
sbb
in
sarl
mov
lret
fdivl
push
mov
fnstenv
or
subb
popa
push
inc
jmp
cld
xor
inc
jb
daa
lds
cwtl
ja
scas
cwtl
je
test
adc
jns
cmpsl
mov
push
inc
scas
test
mov
into
cmp
sub
stos
jge
jp
cmpsb
in
and
xchg
or
insb
and
stc
push
mov
pop
pop
lret
lock
inc
or
subl
jno
jp
out
enter
inc
mov
pop
ret
push
call
xchg
repz
jmp
pop
add
data16
dec
sbb
xchg
push
mov
flds
push
repz
rclb
ljmp
pop
inc
cmp
xor
mov
xchg
xchg
sub
xorb
test
add
fwait
push
hlt
jle
xor
sbb
or
pop
mov
push
pop
pop
dec
lods
push
push
mov
orb
jbe
icebp
xchg
pop
jmp
push
mov
mov
fwait
cmp
sub
insl
sub
outsl
xlat
jno
jg
mov
inc
jle
adc
shrl
daa
mov
cs
ss
rclb
push
push
push
sti
mov
adc
cmpsb
daa
lods
xor
rol
pop
lea
or
fmull
push
cli
pop
cltd
adc
mov
sbb
sub
mov
push
dec
xchg
les
subps
scas
orb
jb
push
cmp
addl
push
repnz
dec
lock
fnstsw
icebp
dec
pop
stc
mov
scas
jmp
jo
inc
or
cmp
mov
dec
arpl
aam
add
popa
mov
movsb
in
aaa
jl
mov
jb
pop
cmp
and
dec
or
xchg
incb
das
add
xchg
adc
lock
mov
sahf
insl
icebp
std
push
mov
mov
add
shl
jg
xchg
pop
cltd
sub
xchg
inc
mov
repz
loop
out
jg
jo
push
clc
sbb
jecxz
cwtl
insl
pop
fstpt
lahf
or
jno
dec
mov
xchg
jmp
shlb
or
mov
or
aam
es
adc
sti
mov
data16
add
dec
loopne
jle
mov
popf
or
lret
jno
mov
lock
cmpsl
cwtl
hlt
dec
test
push
repnz
mov
dec
scas
test
test
push
cmpsl
pop
test
cld
xor
fwait
xor
mov
pop
lods
ret
sbb
pop
fdivrs
outsb
cmp
loop
dec
loopne
cwtl
loop
in
stos
mov
lea
jg
pushf
jecxz
pop
jge
and
mov
rcrl
dec
jge
out
icebp
std
pop
mov
mov
js
jnp
push
cltd
mov
and
inc
pop
pushf
push
dec
movsb
in
lods
cmp
mov
aam
cltd
clc
not
push
aas
dec
or
fbld
jge
push
lock
adc
cmp
xor
ret
in
push
cmp
inc
xchg
test
cmpsl
jl
ljmp
push
into
in
lods
mulb
inc
or
rorb
mov
outsb
loope
inc
pop
pop
lret
inc
mov
mov
sahf
hlt
pop
dec
outsl
sbb
outsl
out
add
insb
cmp
insl
jecxz
xchg
mov
xor
in
das
jb
cmp
mov
rcr
push
inc
xorl
scas
ret
clc
das
and
mov
int
imul
std
cmpsl
test
sbb
ret
pop
adc
mov
cmpsb
xchg
push
lods
stos
lret
dec
add
xchg
adc
jecxz
jle
out
sub
cmp
pusha
fucomi
cmpsb
pop
mov
idiv
mov
out
rolb
es
lods
or
out
mov
xchg
sti
adc
insl
cmc
test
loopne
fisttpll
adcb
insl
insb
mov
mov
test
sub
push
jbe
shlb
fs
fcmovnb
push
mov
das
rorl
mov
adc
ficoml
pop
sbb
and
sub
aas
dec
push
push
pop
leave
sbbb
xor
pop
lods
jmp
rorb
adc
cli
mov
push
mov
adc
push
cwtl
jns
jbe
aaa
ljmp
mov
add
popa
testl
mov
data16
stos
mov
sahf
dec
or
mov
jne
shll
adc
dec
stc
out
popa
jo
adc
xor
mov
test
xor
and
cltd
dec
lods
pop
cmpsb
add
loop
jne
xor
ds
jl
jecxz
rcrl
leave
cltd
xorl
out
mov
imul
adc
call
jae
mov
adc
dec
dec
arpl
push
icebp
and
sbb
test
adc
pop
leave
pop
mov
push
movsl
mov
sub
mov
lahf
insb
and
jae
mov
xchg
rol
jp
stos
cmp
incb
int
xchg
mov
mov
push
mov
enter
push
movsb
inc
jno
imul
stc
push
jbe
loope
mov
test
je
out
rclb
out
cmpsb
test
or
and
jle
sbb
sub
and
jo
jp
jo
fs
flds
sbb
js
add
add
sub
xlat
idiv
or
lea
insb
sbb
sub
icebp
push
bound
cmp
pmaxsw
xor
mov
outsl
testb
cmp
fs
add
scas
mov
push
fwait
in
xchg
push
daa
jge
pop
mov
ljmp
jg
or
jae
xchg
imul
fadd
jp
and
comiss
test
fildl
cmp
mov
or
ret
xchg
loopne
jge
mov
cld
insl
push
xor
loopne
jo
push
sub
cs
mov
scas
cld
arpl
js
aaa
fnstcw
into
pop
aaa
lds
ficoms
outsl
mov
fildl
je
mov
mov
mov
std
or
mov
inc
push
sbb
push
xorb
dec
mov
or
xchg
xchg
add
add
adc
clc
mov
cmp
test
out
mov
sahf
or
add
bound
xlat
inc
shll
pop
mov
or
icebp
clc
lods
dec
push
xchg
dec
sbb
ja
mov
outsb
popf
js
add
rcrl
shrb
lret
pop
xchg
dec
jnp
imul
lcall
xchg
ljmp
push
aaa
std
mov
negb
lahf
mov
ljmp
jne
cmp
test
xchg
gs
out
fnstenv
lock
popf
data16
rcrb
stc
shll
mov
dec
push
aad
cmp
mov
pusha
pop
insb
xor
iret
or
sarb
adc
jae
les
jg
jmp
add
xchg
jecxz
pop
or
mov
jno
pop
add
xchg
mov
pop
add
rcll
out
loope
loopne
mov
pop
add
add
outsb
in
and
lods
test
and
icebp
adc
arpl
pop
inc
inc
data16
insb
jb
push
mov
inc
cwtl
mov
js
sub
jns
xchg
mov
mov
and
insl
bnd
shlb
xchg
mov
sbb
mov
xor
lcall
push
pushf
jno
push
dec
jno
test
aam
adc
movsl
jns,pt
pop
sti
stos
sub
test
fcoms
dec
stos
sbb
mov
ljmp
mov
iret
in
sub
xor
arpl
in
cmp
sbb
mov
dec
imul
outsl
or
in
dec
cmp
iret
sbb
in
cmpsl
push
jae
fisttpl
pop
js
out
lret
mov
jnp
or
xchg
push
mov
xor
incb
and
outsl
jb
xor
jo
rcrl
push
jl
mov
push
xlat
sti
cld
adc
int3
aaa
xchg
sub
in
add
xchg
pop
mov
mov
idiv
pop
sbb
xor
jns
fimuls
mov
outsb
sbb
push
sbb
in
cmp
fdivl
xchg
jg
pusha
daa
adc
sub
mov
lahf
jg
fbstp
inc
mov
fucomi
push
mov
outsl
stos
pusha
loopne
stos
scas
pop
inc
sub
dec
andb
and
jecxz
jae
dec
andb
xchg
ljmp
add
mov
jno
nop
xchg
adc
cmp
aam
lahf
xchg
shll
mov
pusha
push
int3
movsb
jnp
lods
jg
mov
out
sahf
lret
xchg
xor
inc
lds
fadds
pop
dec
sub
gs
leave
inc
out
push
icebp
scas
inc
xor
loop
mov
pusha
insl
test
mov
popa
push
fcoml
xchg
jp
xchg
mov
adc
sub
call
jge
lds
jl
mov
cs
xor
lret
cmc
adc
leave
fldcw
and
test
inc
pop
add
bound
dec
inc
aad
in
loopne
insl
xchg
xchg
popa
pop
in
xor
cmp
lahf
push
call
dec
je
jp
xchg
gs
enter
jp
sahf
sti
cmp
es
mov
jecxz
repnz
mov
fidivl
sub
dec
fdivrs
dec
iret
sti
or
das
bound
cmp
imul
daa
xlat
int
mov
inc
adc
mov
ret
or
mov
pop
dec
mov
inc
mov
pcmpgtd
loope
xchg
pop
cmp
sbb
sahf
dec
scas
xor
sub
jno
shrb
xor
shrl
push
push
push
loopne
mov
mov
fildll
mov
lods
iret
imul
mov
fdivrl
cmpsl
and
cmp
sbb
xor
mov
push
call
movsb
mov
sarl
shlb
mov
and
cmpsb
push
daa
sub
insb
sarl
icebp
push
jae
push
inc
rcrl
dec
push
cmovle
pop
dec
xchg
fistl
jmp
shr
lock
in
pop
dec
in
cli
ljmp
adc
cmc
cmpsb
fcoml
jge
jmp
sub
pop
hlt
fidivs
add
jae
ss
mov
xchg
cltd
push
out
push
push
fbld
and
imul
sub
dec
popf
mov
outsb
mov
push
sbb
insb
pop
add
stos
pop
dec
rclb
lds
xchg
xchg
lret
mov
sub
xchg
push
test
or
pop
mov
and
mov
in
jl
pop
jecxz
ja
pop
sub
arpl
push
scas
or
lret
push
xchg
mov
mov
std
mov
pop
ret
jno
cmpsl
int3
inc
mov
inc
mov
pusha
xchg
inc
jne
pop
fadds
push
sarl
xchg
stos
aad
add
adc
test
stos
mov
sub
jo
adc
je
bound
xor
test
repz
pop
pop
outsl
repnz
test
cmp
aam
adc
jnp
adc
fpatan
xor
xchg
inc
cmpsl
adc
lea
mov
or
adc
inc
pop
lods
sbb
adc
insl
adc
add
bound
add
insl
push
mov
es
jo
push
lret
movsb
sahf
xor
cltd
loop
mov
test
mov
mov
je
loop
in
aad
push
cmpsl
sub
jno
push
jae
jg
push
mov
push
pop
push
xchg
xchg
sarb
push
ret
mov
mov
push
es
or
pop
dec
int3
int
mov
dec
sbb
inc
mov
xchg
test
sti
repnz
repz
xor
mov
pop
and
test
inc
cmp
adc
jb
rolb
sbb
push
mov
daa
enter
nop
mov
cmp
inc
stos
lock
add
jne
and
sub
in
jae
test
filds
scas
dec
mov
lahf
mov
loop
xchg
xor
jle
xchg
and
cld
inc
fidivrl
and
fcoml
dec
insl
bound
lahf
mov
adc
rcll
fcoml
clc
movsl
xchg
dec
mov
rclb
movsl
cmpb
call
add
loopne
mov
fcompl
jecxz
cmpsl
push
fistl
movsb
shrb
nop
xor
inc
mov
push
xrelease
sub
cmpl
xchg
mov
hlt
test
push
jb
xlat
dec
mov
stos
mov
jb
inc
xor
mov
outsl
adc
fwait
lods
hlt
dec
adc
imul
test
daa
sbbl
mov
fsubrs
add
das
mov
push
mov
mov
outsb
mov
pop
popl
ja
add
cmp
mov
cmp
aas
mov
cmpsl
sbb
out
xchg
sbb
mov
and
fdivrl
sbb
add
imul
idivl
mov
notl
ja
push
iret
aaa
fnsave
adc
pop
add
das
mov
pop
push
les
dec
lret
adc
cmp
pop
mov
lods
mov
pop
pop
mov
adc
dec
aaa
pop
sbb
cmp
add
push
sub
xor
idivl
xor
movsb
jmp
loopne,pn
xchg
or
cld
or
or
adc
lods
and
jae
icebp
mov
sbb
inc
ficomps
loopne
mov
jns
xlat
rclb
pop
pop
or
cwtl
push
sub
lea
mov
popf
xor
rcll
lock
cmpsl
inc
mov
in
lock
das
sbb
jbe
in
jle
out
jmp
insl
jmp
or
mov
loop
sbb
aaa
test
mov
jl
add
dec
je
addr16
sbb
pop
adc
insl
push
es
notl
fidivrl
sub
sbb
push
mov
mov
adc
fs
lods
jno
mov
aas
shl
mov
and
imul
js
pop
dec
cld
pop
mov
inc
xor
mov
jecxz
loope
xchg
and
test
xchg
loope
and
push
jecxz
lahf
cmpsb
loope
add
sub
in
mov
sti
rolb
es
mov
pop
rclb
fnstsw
ja
xor
inc
sub
das
push
lahf
popf
ret
dec
out
lods
dec
sbb
leave
add
addr16
sahf
lret
in
pop
jne
xchg
test
test
adc
pop
ds
or
je
inc
lcall
xchg
mov
dec
xlat
scas
ja
push
inc
imul
or
out
mov
in
out
add
popa
xchg
adc
cld
insb
lods
inc
jg
mov
ficoms
jo
mov
mov
jmp
xor
in
popa
gs
or
add
je
sub
mov
jns
repz
mov
fdivs
cmp
ret
cwtl
test
lret
xchg
xchg
imul
pop
jp
jl
call
movsl
push
xchg
fxch
loopne
popa
push
arpl
lea
popa
popf
ret
shl
xchg
adc
lds
orl
push
xchg
ret
or
cmp
mov
jl
clc
inc
outsb
xor
inc
pop
mov
imul
shr
ljmp
pop
push
test
dec
les
mov
dec
sbb
jbe
jo
pop
inc
mov
jb
sub
jecxz
loope
dec
inc
in
cmpb
sbb
pop
mov
int
in
ss
dec
fimull
push
sahf
sahf
roll
cmpsl
scas
dec
addr16
adc
inc
pop
sbbb
inc
pop
pop
ret
push
pop
jp
rcll
mov
and
lahf
loope
sub
add
das
pop
icebp
or
sahf
mov
jb
dec
add
outsl
aas
gs
inc
outsb
mov
and
jnp
push
xlat
xor
mov
sub
jp
call
xchg
mov
cmp
lcall
push
inc
js
es
add
pop
jae
sbb
fnstenv
scas
cltd
sti
adc
mov
xchg
mov
andl
pop
sub
js
fisubrs
imul
lods
sbbb
dec
or
pop
sub
out
adc
push
das
push
arpl
jge
mov
pop
aaa
xchg
fildl
push
xor
subb
fwait
cmpsl
sbb
icebp
mov
or
movsb
dec
mov
adc
sti
dec
call
mov
loop
scas
jb
fidivs
dec
sub
cmpl
test
scas
inc
aad
scas
andl
inc
daa
or
out
mov
cwtl
mov
push
mov
andl
dec
add
jne
inc
push
lahf
js
or
cmp
dec
sub
clc
xorl
adc
adc
sub
popa
ficomps
pop
aad
sbb
push
add
jp
adc
xchg
jg
push
push
jl
repz
add
and
outsb
data16
popa
js
fcmovne
mov
inc
push
push
sti
aam
daa
repz
int
mov
insl
cmp
xor
inc
jmp
gs
faddl
dec
pop
dec
sub
cmp
mov
lea
add
in
sbb
rolb
jns
in
movsb
xor
shll
lcall
shlb
jge
insb
daa
ds
js
inc
out
imull
pop
leave
ja
cmpl
rcrb
push
sub
cmpsb
sbb
mov
add
popf
popl
push
xorl
mov
aaa
dec
loopne
pop
and
or
aam
inc
xchg
int
dec
sub
out
or
sahf
sbb
xor
pusha
xor
cld
js
adc
fidivrs
push
pusha
dec
mov
xor
dec
fildl
pop
jmp
xlat
and
std
sub
add
dec
cmp
popl
and
mov
inc
cmpsb
cmc
jl
gs
fisubs
adc
lcall
mov
add
in
adc
and
inc
repz
mov
jge
jo
inc
mov
xor
mov
lcall
mov
lret
outsl
add
repnz
ret
mov
inc
data16
jb
inc
mov
mov
rclb
adc
dec
jmp
pop
add
stos
daa
sbb
repz
inc
in
cmp
cli
test
popf
pop
xchg
stos
roll
pusha
jl
enter
sub
stos
xchg
imul
ror
push
xchg
in
les
sbb
fildl
cld
js
push
and
cmp
js
mov
mov
aas
add
popf
push
mov
sbb
lret
mov
jg
push
push
nop
sti
ss
cli
jmp
xor
fidivrs
andl
inc
fadds
push
mov
push
jecxz
out
add
sbb
xchg
dec
xor
jne
mov
jno
mov
xlat
std
sbb
inc
cmpsb
imul
adc
mov
inc
or
repnz
hlt
cli
sbb
mov
popa
fsts
mov
outsb
or
divl
dec
adc
inc
gs
lcall
mov
mov
cmp
aam
cmpsl
xor
push
in
bound
inc
push
movsl
popl
das
adcl
mov
cld
repnz
add
jbe
lret
daa
fstps
pop
loopne
jno
cltd
xor
add
mov
mov
jle
cmp
jns
add
testb
mov
mov
sub
scas
pushf
lret
int3
or
ror
ljmp
test
mov
ret
sbb
sub
test
fbstp
loope
cmc
jmp
cmp
out
stos
iret
ret
fsubl
pop
loopne
pop
and
cmp
js
add
fabs
out
push
push
adc
sbb
bound
jne
repnz
mov
push
pop
mov
cmp
or
adc
andl
popf
arpl
add
call
xchg
insb
ficoms
adc
dec
dec
aam
enter
jno
adc
ficompl
test
xor
adc
test
or
mov
inc
adc
jae
mov
enter
test
dec
push
xor
sub
push
push
mov
and
dec
inc
pop
pop
les
in
rcll
andb
xchg
imul
jl
xor
xor
lock
pop
xor
out
or
rolb
cmp
cmp
test
jbe
xor
shll
sti
jno
mov
dec
pop
xlat
cmp
jg
jmp
push
cmpsb
scas
repz
mov
aas
push
fucom
fldenv
fdivrs
mov
add
popf
cltd
mov
mov
das
add
and
lods
adc
mov
out
add
out
jno
outsl
aas
add
lods
xlat
fwait
jle
lcall
cmpsb
pop
jecxz
pop
inc
push
js
add
mov
clc
inc
addr16
pop
push
dec
mov
popa
mov
inc
xor
nop
in
pop
mov
sbb
xchg
mov
or
xchg
mov
lea
mov
or
aas
jmp
fbstp
adc
repz
ss
pusha
mov
imul
or
outsb
jle
xchg
adc
pop
pop
or
aaa
mov
sahf
mov
lods
adc
jp
inc
fisubrs
mov
lahf
cmpsb
adc
mov
sbb
add
stc
or
sahf
adc
cli
xchg
push
daa
mov
scas
sub
js
nop
xchg
cmp
and
fcompl
sbb
cltd
cwtl
dec
or
add
es
cmpsl
mov
cmp
inc
stos
hlt
lcall
inc
shll
loopne
rclb
or
outsb
push
xchg
pop
jb
fiaddl
pop
cmpb
dec
sbb
das
and
push
std
mov
loop
mov
mov
mov
xchg
imull
mov
cmpsb
insl
scas
iret
pop
jae
jns
xor
dec
aaa
adc
fidivs
push
test
sub
or
cmp
outsb
mov
jnp
jl
lcall
std
shl
mov
jns
lret
insb
aaa
sbb
in
lea
inc
sbb
movsl
lock
cmp
sbb
outsl
jl
mov
shrl
clc
pushf
jp
mov
jb
add
xchg
int3
xchg
mov
cmpl
dec
push
pop
adc
mov
dec
test
daa
mov
ret
jns
jo
sub
jmp
push
bound
aaa
pop
js
mov
xchg
mov
scas
xor
mov
xchg
lret
ret
std
roll
rcll
jno
adcl
mov
insb
aam
les
popf
inc
jge
sahf
sahf
dec
add
jno
hlt
xchg
add
sarl
std
adc
push
xor
lods
icebp
pushf
jl
add
and
bndldx
movsl
imul
xchg
xor
xchg
hlt
subl
inc
mov
adc
sub
sbb
aam
repnz
mov
mov
adc
xchg
mov
adc
push
icebp
je
mov
std
stc
push
mov
jmp
js
gs
jecxz
ficomps
push
inc
mov
or
hlt
pop
in
dec
or
adc
pushf
jl
and
inc
sbb
lret
cli
aad
pop
clc
pop
push
mov
mov
mov
scas
and
cmp
test
shll
dec
pop
pop
xchg
repz
sti
addl
leave
pushf
fcompl
jge
mov
mov
lds
push
jo
pop
repnz
clc
jp
xor
pop
ret
xor
adc
cmp
and
data16
std
add
mov
jg
pop
das
in
lods
je
ror
jne
xchg
lret
jo
pop
jbe
rorb
mov
or
imul
xchg
sbb
lcall
jp
jnp
jns
jb
push
sti
xchg
lock
rcll
and
add
adc
lods
sbb
jae
out
inc
xchg
xchg
lock
es
jns
lods
aaa
out
cmpsl
pop
mov
lods
dec
pop
movb
inc
mov
adc
and
in
xorl
jbe
addr16
inc
stos
push
cmp
xor
inc
ss
push
inc
jl
push
call
test
cmp
adcb
jle
cltd
inc
lods
jmp
lret
cmpl
repz
adc
lret
xor
pushl
rorl
xchg
mov
push
xchg
cmp
scas
xor
or
cmp
rcrl
out
lcall
xor
push
cld
mov
leave
sub
lret
movsl
lret
sahf
adc
fstl
lcall
aad
out
shrb
mov
clc
sub
mov
mov
div
mov
inc
loopne
xor
add
sbb
pop
inc
jg
cli
outsl
jmp
jle
roll
dec
cmpsl
xlat
repnz
pop
inc
or
clc
pushf
and
mov
out
ds
cmp
ret
adc
pop
mov
lods
orl
testl
test
pop
push
sub
mov
fildll
add
pop
mov
adc
repz
jmp
mov
mov
push
int
cmpsl
jae
mov
mov
dec
add
data16
ret
mov
mov
adc
mov
sbb
jp
dec
inc
jno
loope
out
or
enter
jp
aaa
sbb
stos
mov
xchg
bound
ret
rcrl
fdivs
into
jp
xor
inc
aad
mov
into
cmp
push
pop
mov
xchg
fs
cli
cmove
sub
je
pop
sbb
lcall
sbb
mov
and
sbb
adc
cmp
pop
sbbl
paddb
inc
out
jo
in
mov
jg
sub
cwtl
pusha
inc
rcr
popl
enter
hlt
in
or
mov
pop
rorb
inc
int3
sub
ret
pop
je
xchg
int3
repnz
cld
mov
and
mov
sbb
xor
pop
icebp
lret
movsb
fucom
lahf
pop
in
cmpsl
dec
imul
ja
cmpsb
movl
sbb
inc
adcb
in
test
cmp
inc
out
xchg
fistl
fcmovu
aad
leave
jnp
jbe
jbe
push
push
push
sub
dec
scas
mov
pusha
xor
mov
sbb
sar
mov
mov
int3
jmp
mov
cld
int
fisttpl
pop
xor
fdivl
lret
pop
sub
cmpsb
push
mov
pop
pop
dec
sti
iret
mov
out
arpl
das
cmp
loope
inc
aad
outsb
mov
mov
mov
jno
or
sub
iret
hlt
scas
out
lea
jno
rcrb
rorl
pushf
or
pop
adc
cmpsb
xor
mov
sahf
and
inc
mov
pop
jb
cwtl
sahf
xor
or
out
mov
jg
adc
xor
test
sbb
pushf
icebp
pop
or
lea
pop
xor
cmp
cmc
test
add
cmp
sbb
mov
pop
jle
fldenv
or
or
mov
idivl
and
sbb
cmp
aas
addb
mov
and
jmp
outsb
fcoml
mov
xchg
stos
mov
cmp
push
pop
xchg
jmp
mov
mov
and
push
test
cs
sub
fmull
gs
out
and
std
sub
sbb
stos
push
cmpsb
int
out
mov
inc
in
fmuls
bndstx
jp
xchg
sub
sbb
xor
test
nop
mov
fisttpll
les
bnd
in
cmpsb
into
hlt
enter
arpl
and
scas
fisubrs
outsl
dec
sub
pop
icebp
xor
inc
jle
stos
scas
dec
sub
push
aas
bound
mov
dec
aam
jg
add
mov
into
std
sub
popf
pop
xor
addb
pop
jmp
lret
adc
in
mov
popa
inc
ja
mov
cmp
mov
push
int3
and
pop
into
js
cmpsb
mov
sbb
inc
cmpsl
rorb
bound
mov
cmp
dec
pop
stos
fdivrp
call
jae
clc
pop
popf
adcl
cmp
mov
cmp
orl
cmp
negb
pop
inc
xor
push
cmpl
adc
xchg
cmp
add
adc
fwait
xor
push
dec
outsb
jae
arpl
sub
inc
out
je
gs
test
jmp
xor
imul
dec
inc
in
push
xchg
call
xchg
imul
ljmp
fsubp
fidivs
sbb
cmpsb
jge,pt
cmp
fimull
or
test
stos
push
mov
and
push
hlt
mov
fiadds
lret
es
test
stc
pop
jmp
aad
cltd
gs
xor
mov
jge
movsb
je
aad
and
imul
stos
jmp
sub
daa
xchg
and
xsavec
test
mov
pop
mov
xor
pop
scas
sub
push
dec
cmc
push
xor
jl
loop
or
jne
loopne
jns
arpl
lret
cmp
int3
fs
popf
sbb
jbe
mov
jmp
and
mov
das
pop
jle
leave
pop
mov
sbb
pop
aaa
jbe
adc
push
data16
sbb
cmc
loope
push
pop
xchg
repnz
outsl
xchg
rclb
orb
mov
jp
leave
daa
push
xchg
cmp
rol
pop
inc
xor
jecxz
mov
lds
rolb
stos
add
jge
or
sub
aas
mov
stos
adc
cmp
sbb
sub
stos
out
pop
ret
repz
pop
push
addr16
mov
or
sub
fstpt
cli
pop
mov
sbb
daa
outsb
adc
sub
in
sub
or
cmp
and
push
call
or
cmp
xchg
mov
mov
and
clc
add
cmpsb
lret
arpl
dec
cld
add
std
cmc
test
inc
aad
sahf
sti
sahf
xor
js,pn
xor
cmp
fwait
jl
jecxz
scas
or
xor
jns
fnsetpm(287
sub
cs
cmp
add
add
push
ljmp
out
mov
scas
sbb
hlt
pop
daa
cmp
inc
sub
xor
out
int
push
lea
push
insb
in
psadbw
cmpl
test
shll
jmp
sbb
jmp
or
fiadds
xor
pop
arpl
int3
stc
mov
xor
mov
insb
inc
mov
icebp
pop
out
popf
aad
add
sub
jecxz
daa
dec
insb
shll
pop
and
mov
push
test
ret
pop
or
test
cs
lods
xchg
sahf
fucom
xlat
jo
push
push
cmpsb
jae
imul
outsl
jns
fs
cltd
aaa
pop
imul
fwait
cmp
xchg
out
rcrb
push
add
xor
jnp
sub
js
ds
out
std
aad
dec
ljmp
dec
pop
mov
stos
lock
mov
push
and
out
pop
inc
jae
mov
mov
sub
and
push
mov
lea
xlat
insl
pop
dec
incl
push
stos
aad
push
es
xor
adc
ret
and
and
sbbb
sub
lods
push
sbb
inc
and
mov
dec
lcall
fiadds
pop
lahf
and
ljmp
inc
push
ficomps
and
and
mov
in
dec
insl
sti
jnp
mov
inc
xchg
adc
xchg
pushf
sub
sbb
mov
pop
in
orb
movsl
shll
xchg
lahf
sbb
ljmp
jo
cmp
jmp
fcoml
push
ja
cs
test
inc
call
dec
or
incb
or
mov
inc
xchg
rcrb
stos
dec
and
ljmp
sbb
jns
ret
test
xchg
sbb
insl
in
lock
sti
ljmp
stos
pop
addb
pushf
ljmp
mov
sub
jecxz
addb
mov
dec
out
stos
jecxz
cmp
pop
stc
adc
int
mov
jle
daa
rcrl
xlat
fldl
daa
packsswb
inc
popf
std
mov
dec
dec
fadds
mov
sahf
test
iretw
jo
into
add
mov
sub
in
shl
sub
movsl
loope
pop
aaa
cli
rorb
xchg
cmp
in
roll
imul
jae
sbb
in
jo
and
out
and
xchg
fs
mov
mov
sub
jmp
add
push
jle
cmp
xchg
pop
ss
jo
lret
mov
xchg
adc
push
imul
pop
inc
cli
aas
or
out
add
scas
out
scas
lret
dec
sub
movsl
and
inc
jl
sub
stos
gs
shlb
icebp
or
test
xchg
mov
add
ret
push
addr16
fcoms
mov
lods
sub
xor
pop
cmpsb
popf
add
lret
sbb
jbe
and
nop
mov
js
mov
jecxz
test
inc
popa
adc
cmp
jbe
lods
dec
xchg
popa
xchg
mov
sbb
daa
push
xchg
mov
dec
inc
mov
jae
jo
sbb
push
fsubs
jmp
adc
and
fisubl
sbb
sub
push
pop
das
mov
fsubrp
xor
pop
scas
or
add
in
pop
test
dec
lods
aas
dec
push
test
fiadds
cli
jle
push
testl
mov
in
popf
sbb
mov
mov
iret
adc
into
sbb
cld
in
sbb
and
mov
adc
xchg
pop
xor
lods
xchg
push
pop
lods
into
sub
cmp
jnp
dec
add
sbb
mov
cs
movsb
movb
repz
bound
in
or
sbb
xchg
leave
test
aam
cld
sub
pop
push
jb
dec
adcb
adc
mov
popa
or
lds
incl
pop
jecxz
and
xor
push
clc
lret
rcll
aaa
jae
call
push
dec
adc
jmp
fisubs
lcall
test
imul
movsb
pop
mov
ljmp
adc
add
dec
mov
ror
mov
or
pop
lods
mov
test
lcall
and
inc
movsb
mov
xor
cmp
clc
adc
or
sti
int
repz
lahf
add
loopne
icebp
adc
push
les
ljmp
outsb
fdivl
pop
sub
testb
scas
sbb
and
push
push
mov
xor
xchg
push
push
arpl
and
cmpsb
imul
ret
push
ror
in
xor
repnz
jno
stos
sarb
shlb
aas
pop
frstor
test
pop
repz
pop
cld
das
iret
sbb
int
dec
sub
iret
cli
mov
jae
adc
jns
fs
out
mov
in
out
pop
push
popa
xor
jae
in
xor
add
pop
shlb
sarb
cmpsl
dec
popf
mov
sti
jl
cmp
inc
enter
sub
mov
loop
xchg
fwait
adc
dec
pop
fmull
out
pop
sub
mov
or
pusha
negl
jg
add
shll
jnp
mov
lahf
cmpl
cmpsb
jl
push
inc
mov
inc
mov
jnp
shlb
out
out
outsb
jmp
add
arpl
rclb
test
std
and
je
in
sbb
mov
mov
adc
ficoml
loopne
pop
es
add
xor
hlt
sbb
lods
jne
xchg
sub
push
push
xchg
pushf
xchg
add
push
in
push
pop
and
and
fdivrp
cltd
xchg
or
and
mov
push
or
dec
jne
lods
pop
jno
call
mov
out
or
stc
xor
notl
inc
or
adc
mov
je
sub
out
adc
pop
mov
jae
sub
pop
pop
lret
clc
xchg
ret
pop
jp
push
push
adc
repz
scas
dec
fsubl
sub
jae
xchg
mov
in
testl
loope
adc
inc
fnstsw
mov
xlat
jo
pop
shll
mov
addr16
ljmp
andl
orl
sbb
shlb
sti
cmc
out
shl
loope
jle
dec
xchg
fcoml
into
mov
push
sub
test
and
les
test
neg
nop
aad
les
push
jle
add
lods
mov
ret
ds
jmp
loope
aas
lock
jnp
sub
fucomp
dec
or
mov
push
repnz
mov
mov
sti
cmc
daa
mov
pop
lock
xor
rorl
jne
loope
shlb
cmp
push
insl
dec
and
movsb
mov
pop
jg
das
add
testb
lcall
lods
subb
out
mov
sub
popa
sub
dec
movsb
repnz
lret
dec
sub
push
jle
sbb
adc
jno
pop
add
int
push
cmp
mov
pop
jle
add
sbb
sbb
test
les
sub
hlt
sbb
inc
outsl
jmp
fnstenv
sahf
xor
lock
loopne
pop
cmp
xchg
jmp
push
fidivrl
push
mov
jecxz
adc
adc
int3
and
daa
ja
xor
mov
pop
in
hlt
nop
test
test
enter
in
popa
sti
mov
movsl
xor
or
mov
fsubl
out
push
pop
or
gs
stos
adc
cmpsl
rcr
push
inc
cs
and
pop
sahf
addl
fisttps
and
shrb
dec
lcall
fildll
fbld
popa
fwait
jge
dec
push
xor
and
jecxz
and
rorl
push
jne
xchg
pop
mov
loopne
rcl
js
dec
loop
test
movsl
add
xchg
dec
imul
xor
push
ret
mov
adc
lds
and
scas
xchg
push
sti
shrb
fimull
leave
jle
cltd
call
sub
pop
adc
sub
pop
mov
cwtl
push
adc
int
mov
sub
xchg
lcall
mov
pop
xor
lahf
sub
mov
inc
data16
mov
divl
xchg
test
sbb
out
add
nop
rorb
jmp
leave
out
imulb
jg
mov
pusha
jecxz
test
cwtl
pop
or
jg
mov
xchg
enter
push
xchg
xor
rcll
icebp
push
xorb
xchg
lret
pop
repnz
sub
and
clc
mov
cmpsl
xor
in
int
add
jle
add
cmpsl
jle
out
mov
add
lret
adc
inc
rcl
sub
adc
add
rcr
pop
push
in
lcall
or
or
cmpxchg
jmp
mov
push
mov
mov
cli
or
mov
rclb
test
or
or
mov
out
pusha
stos
repz
xchg
or
stos
cmpsl
sub
adc
or
aad
adc
lods
enter
inc
push
scas
jl
pop
cltd
ret
fisttpll
cmc
push
mov
sarl
sub
jno
dec
add
jno
push
jle
cmp
and
loope
sub
adc
mov
inc
shlb
mov
loope
stos
stos
xchg
daa
jg
pop
xor
insb
sub
dec
popf
mov
loopne
mov
and
push
cmp
jl
mov
cs
dec
jg
mov
daa
aaa
push
inc
out
jb
loopne
aad
jecxz
inc
adc
dec
xchg
and
mov
push
mov
stos
xor
je
lea
mov
iret
dec
xlat
and
lret
xor
xlat
cld
xchg
clc
cwtl
hlt
cld
pop
jns
push
rol
xor
cmp
add
icebp
and
mov
inc
xorl
decl
and
jl
outsl
insb
ret
mov
mov
xchg
or
pop
repz
shlb
sub
sbb
dec
and
int
call
jo
test
dec
andb
lret
inc
lea
dec
in
push
push
cmp
lods
adc
jno
je
mov
aaa
pop
fdivp
js
lret
mov
aad
xor
outsb
jg
out
or
and
or
loope
sbb
aaa
jmp
movl
mov
dec
push
popa
sbb
fcmovnu
daa
imul
mov
loopne
add
test
cmpl
inc
xchg
inc
sub
adc
sub
call
shl
pop
nop
adc
pop
fbld
std
fs
mov
jp
fisttpll
add
jl
push
cli
jo
es
cwtl
pop
sub
cmp
sub
jecxz
sbb
jge
addr16
inc
sbb
mov
loop
ret
mov
aaa
pop
jnp
jmp
nop
push
sbb
jp
loopne
jns
push
rorb
pop
push
push
fstl
push
pushf
hlt
add
or
fistl
scas
in
sbb
pop
aas
lahf
jno
mov
notl
popf
xor
int3
ret
adc
pop
xor
shrb
into
cltd
call
decl
cli
jns
pushf
xchg
add
push
push
jno
in
or
inc
xchg
sub
sbb
mov
inc
jle
shl
add
jmp
les
enter
adc
pop
or
mov
xchg
cmp
sub
xor
das
push
jbe
pop
scas
cmp
in
dec
adc
xor
loop
loope
xor
push
flds
jnp
dec
sub
push
in
and
jmp
out
xchg
mov
mov
add
and
cs
icebp
fisttpll
hlt
jo
addl
lds
fnstsw
cmp
rolb
lock
stc
scas
and
mov
roll
jg
dec
hlt
pop
adc
loop
mov
or
dec
cld
cmpsl
mull
pushf
dec
jp
adc
fsubp
in
jns
mov
pop
pusha
rorl
repz
xchg
xor
sub
and
dec
push
pushf
jmp
cli
pop
add
ss
fimull
in
outsb
and
mov
shll
test
movsl
popa
mov
hlt
and
mov
and
adc
mov
dec
gs
lret
fcoml
into
repnz
jae
int3
sbb
popa
mov
in
adc
push
rclb
je
push
lods
or
mov
mov
jne
push
dec
inc
dec
pop
fwait
and
jne
mov
data16
push
leave
in
pushf
lea
out
mov
mov
inc
mov
pushf
rcrl
ds
hlt
jns
jp
push
adc
addr16
lods
stos
add
add
jne
test
les
jg
cli
ljmp
xor
andb
movl
test
stos
ljmp
push
xchg
out
lahf
lret
push
mov
inc
inc
inc
aam
sti
popf
out
das
add
lds
clc
sbb
mov
popa
ret
xor
stc
adc
mov
mov
cs
fdiv
xlat
inc
xor
push
pop
arpl
xlat
pop
xchg
mov
fsubs
int
xchg
outsb
arpl
mov
pop
stos
mov
jg
test
ss
xor
pop
in
mov
add
cmp
lods
cmpsb
scas
hlt
repz
mov
and
mov
imul
push
clc
pop
mov
or
popa
sbb
arpl
xorb
mov
push
inc
in
repz
leave
aad
pushf
aaa
pop
leave
mov
pop
adc
aad
in
or
gs
mov
and
dec
cmc
stos
std
pushf
cmc
mov
xchg
testb
pusha
popf
adc
cmp
out
adc
scas
push
nop
mov
sub
add
dec
adcl
mov
xchg
outsb
ja
ret
sbb
jne
imul
push
xchg
subb
gs
mov
xchg
mov
cmpsb
sub
jle
mov
pop
loope
jg
sub
adc
push
das
mov
mov
repz
mov
adc
int3
jbe
out
int3
add
inc
mov
lds
aam
mov
lock
aas
pop
pop
stos
xchg
or
ds
dec
cld
inc
mov
cmp
aam
icebp
mov
and
xchg
jmp
push
adc
call
data16
push
dec
popf
jle
lock
xor
mov
jl
cs
jecxz
mov
inc
cmp
mov
lcall
cmp
mov
and
andl
xchg
or
popl
xor
test
pop
daa
enter
lds
jmp
cs
jmp
ja
test
push
xchg
daa
loopne
jmp
push
or
adc
add
fwait
aas
fs
fwait
adc
test
or
mov
mulb
adc
cmp
aam
xorl
call
pushf
shlb
in
lods
cmpsb
jle
lea
fcomps
imul
shll
xor
add
mov
es
inc
enter
outsb
cld
cwtl
mov
daa
outsl
mov
fidivrl
fs
inc
xor
sahf
adc
and
mov
sub
and
fcompl
mov
and
mov
mov
pop
xor
sysenter
mov
and
sub
aas
or
mov
adc
jmp
jge
push
fxsave
add
add
adc
cmp
testb
shrl
loopne
xchg
sbb
adc
mov
ret
lock
and
sbb
mov
lahf
fidivrs
ja
popa
clc
inc
xchg
lock
add
mov
rcl
dec
jmp
jnp
imul
jl
or
adc
fsts
insl
in
popa
mov
divb
cmp
or
test
push
jbe
and
test
sar
fnstsw
or
xor
mull
add
clc
pop
fnsave
mov
pop
sub
pushf
xor
stc
leave
lods
add
add
sub
jmp
pop
flds
hlt
push
outsb
out
orl
out
add
mov
push
push
int
dec
xor
pop
out
or
sub
insb
and
les
loop
icebp
lret
jmp
aam
inc
inc
mov
movsl
insb
aaa
jge
mov
scas
sub
lret
jl
jno
in
pop
inc
cmpsl
scas
popf
test
rorb
movsb
mov
fwait
std
push
lret
aad
jnp
int3
add
xchg
je
scas
mov
ret
jno
pop
or
inc
arpl
ret
in
add
push
aam
and
rcrb
mov
aam
in
ja
push
pop
add
fisttps
ljmp
sbb
repz
sbb
sti
push
sub
fdivrl
push
pop
sti
and
mov
pop
test
icebp
cmp
mov
dec
mov
rcrl
cli
ret
sbb
dec
xor
mov
in
les
sti
xor
shll
test
cli
sub
jl
pop
cwtl
sarl
sub
jge
push
xchg
sarb
addr16
sbb
jecxz
in
xchg
xchg
test
fnstcw
dec
mov
inc
mov
add
sub
dec
pushf
test
pop
fimull
movsb
inc
in
lret
out
mov
mov
subb
mov
jno
mov
sbb
test
ja
adc
and
and
out
cmp
adc
push
dec
cmpsl
dec
lcall
repnz
jg
incb
mov
fwait
out
mov
jb
xchg
aaa
lcall
dec
lods
mov
addr16
dec
and
mov
enter
mov
jbe
push
outsb
lcall
insb
sub
cmp
loopne
mov
loopne
aam
aaa
std
les
and
jbe
enter
and
push
push
orl
scas
xchg
fistps
sbb
adc
mov
pop
mov
orl
cltd
or
rol
out
and
pop
mov
pop
mov
push
sub
pop
movsb
das
test
aam
pop
loope
hlt
mov
es
clc
fnstsw
inc
mov
out
push
or
mov
movsb
iret
cwtl
pop
pop
pushf
in
inc
shll
mov
push
xor
pushf
xchg
xchg
scas
out
ror
lret
and
xor
sub
jno
cltd
add
dec
mov
dec
gs
xchg
es
xorl
jae
add
rorl
sub
ficompl
mov
mov
adc
fiaddl
and
pop
loope
xchg
push
int3
mov
fcmovb
pop
push
jno
jns
adc
adc
arpl
shll
add
dec
mov
rcl
xchg
jbe
icebp
out
pop
sub
repnz
mov
xor
loop
bound
sbb
jg
arpl
movsl
lods
push
mov
lock
fldcw
cmpsl
cli
and
mov
in
mov
push
sbbb
adc
adcl
btr
cld
xor
test
adc
adc
in
nopl
dec
test
jns
adc
movl
push
mov
and
shll
and
test
pop
pop
mov
or
sahf
cmp
sub
fstp
or
dec
inc
add
loope
test
dec
popf
popa
pusha
lcall
shlb
fildl
lock
cmpsb
shr
xorl
jmp
and
pop
jge
push
test
mov
dec
pop
or
fiadds
sub
imul
mov
push
cmpsb
add
pop
push
test
add
cmp
dec
or
lret
cmp
pop
shlb
xchg
imul
adc
dec
dec
xchg
pop
call
popf
enter
in
scas
pop
lcall
sub
or
adc
push
cs
push
pop
cmpsl
es
inc
pop
test
mov
out
fstl
pop
push
ja
jl
dec
mov
mov
mov
push
xor
cmp
sti
mov
std
popa
adc
pusha
dec
dec
fldenv
lods
les
sbb
cmp
push
inc
xchg
xor
dec
insb
xchg
mov
cwtl
cld
xchg
pop
sbb
out
or
popf
ja
movsl
dec
push
inc
int3
les
fwait
icebp
les
jmp
mov
test
scas
jns
jge
das
inc
push
mov
das
jecxz
mov
mov
xchg
cltd
sti
sbb
and
mov
inc
jae
pusha
mov
add
ffreep
lea
xchg
adc
sub
cmp
insl
divl
add
and
mov
mov
mov
fstpt
cld
xchg
cmp
iret
aad
dec
outsb
xchg
mov
mov
addr16
cmp
inc
cmp
std
mov
scas
sub
arpl
adcb
es
notb
out
and
jae
mov
mov
sub
in
hlt
hlt
or
popf
imul
adc
test
dec
mov
sbb
repz
cmp
mov
jp
sbb
push
sbb
ret
mov
xlat
ja
mov
int
or
push
fistpll
test
fsubr
cmp
ficomps
jns
icebp
mov
adc
out
call
xor
aad
mov
mov
data16
push
ret
xchg
xor
and
iret
xorl
mov
jmp
out
push
mov
mov
pop
mov
imul
nop
in
and
fisubrl
dec
aad
and
pop
pop
cld
push
in
testb
add
mov
lds
add
in
mov
mov
mov
mov
lahf
mov
xchg
dec
in
add
push
test
mov
fwait
sbb
sub
mov
and
jae
push
dec
inc
inc
pop
pop
test
sti
ja
jae
mov
pop
xor
lods
out
inc
clc
je,pt
leave
rorl
xchg
add
sbb
xchg
scas
stc
cmp
xor
faddp
cmp
adc
mov
and
adc
pop
sub
xor
popa
test
lea
clc
test
dec
adcb
mov
mov
push
mov
inc
mov
scas
or
gs
push
jne
push
jp
push
out
mov
test
add
cld
hlt
or
aaa
adc
sbb
lret
int
lds
mov
or
or
xor
dec
jbe
add
mov
pop
pop
sub
jp
jp
daa
mov
pop
push
lahf
or
in
adc
push
sbb
fildl
jnp
or
shll
inc
lret
fmull
neg
out
push
xchg
sub
sub
cmp
or
cmp
imul
pop
cmpsb
inc
nop
bound
push
pop
pop
andb
mov
jno
sbb
enter
inc
dec
gs
and
cmp
frstor
pop
adc
hlt
jae
inc
fists
pusha
and
adc
pusha
cmp
xchg
xchg
mov
add
lret
or
dec
push
loope
push
enter
jbe
pop
xchg
jnp
test
addl
xlat
stos
fwait
and
push
lea
mov
dec
pop
cmp
lret
test
lods
pop
push
adcl
out
sbb
call
out
pop
pushf
xchg
add
into
clc
push
ss
lods
cmpsb
xchg
decl
pop
sbb
push
pop
xor
cmp
bound
mov
pop
mov
nop
sub
loop
enter
push
mov
xchg
clc
imul
sbb
cmpb
pop
incl
pop
icebp
ljmp
ret
adc
push
lret
mov
fcmovbe
je
xchg
dec
stos
xor
add
jge
dec
imul
jbe
mov
cmp
aad
push
sub
sbb
and
sub
roll
insl
test
lret
push
clc
jbe
inc
push
int3
inc
mov
push
cwtl
imul
insl
xchg
mov
xor
dec
nop
mov
adc
mov
xor
cmp
and
mov
std
lret
lcall
in
dec
jnp
mov
inc
outsb
iret
or
mov
aaa
sub
int3
sub
testb
jnp
in
ret
xor
ss
xchg
mov
and
ret
jbe
jle
pop
fwait
test
dec
cmpsl
and
jge
add
lods
xchg
enter
push
sbb
mov
pop
lret
push
pop
or
in
push
mov
jb
in
jnp
nop
mov
lds
sbb
in
es
xchg
dec
mov
push
out
inc
imul
inc
lods
in
mov
mov
fistl
push
or
xchg
shrl
rcrl
iret
push
out
popa
sbb
xor
dec
loop
xorb
push
adc
fcmove
sub
ss
mov
ret
fisttps
jmp
sub
out
sbb
or
add
mov
lahf
push
data16
jmp
mov
arpl
movsb
xchg
fadds
sbb
jbe
mov
add
lds
dec
jns
mov
jno
leave
orb
mov
insb
xchg
stos
jp
sbb
ss
test
std
negl
push
xchg
cli
cmp
mov
iret
arpl
jle
lret
js
addr16
aaa
jbe
cmp
inc
pusha
int
stc
jae
mov
filds
enter
sub
rcrl
mov
fdivr
adc
push
pop
mov
hlt
scas
iret
sbb
mov
adc
cld
div
out
enter
aad
cmp
scas
leave
adc
inc
add
je
sub
jg
pop
fildl
xor
cmp
xchg
fildll
jge
fnstenv
mov
cmpsb
push
loop
mov
add
jns
mov
test
and
xor
push
fbstp
in
jnp
mov
movsb
sub
push
pop
fmuls
sub
sbb
stos
lods
scas
lods
lret
mov
fcompl
pop
adc
lahf
ljmp
rcrl
in
inc
stos
jge
aad
fs
outsb
dec
ret
mov
dec
ljmp
cmc
mov
outsb
mov
add
imul
test
mov
xor
test
inc
jmp
dec
push
dec
cmpsl
in
aam
in
push
jnp
adc
mov
inc
pop
jmp
leave
pop
int
rcrl
pop
int3
xor
pop
imull
enter
push
subl
xchg
mov
out
into
sub
push
aad
jbe
clc
repnz
sbb
popf
lods
cltd
xchg
jbe
push
mov
cmpsl
repnz
or
sahf
incl
xchg
sbbb
sbb
jg
popf
push
sti
pop
lcall
je
jge
in
mov
ret
out
pop
and
adc
fists
ljmp
mov
ja
dec
mov
sub
fimull
call
push
jecxz
adc
lock
pop
inc
xchg
pop
shl
dec
xor
mov
add
push
movsl
and
cmp
fcmovbe
adc
pop
xor
addr16
cmp
sub
je
cwtl
cld
iret
adc
and
add
stos
sub
gs
cwtl
mov
sahf
in
cld
leave
and
in
xor
outsl
out
je
sub
add
mov
enter
enter
sub
repz
std
jmp
jbe
xor
out
push
push
iret
cmp
xchg
mov
xor
cli
out
cwtl
dec
rorl
mov
dec
sbb
fs
xchg
out
cmp
in
cmp
stc
pop
jb
ds
and
jae
enter
int3
leave
hlt
cli
and
mov
pop
dec
std
mov
cmc
or
and
sub
inc
fldcw
mov
mov
sub
mov
or
and
pop
rcrl
aas
pop
aam
jge
pusha
mov
out
das
in
mov
push
jbe
sbb
je
add
xor
xor
xchg
dec
dec
popa
lcall
test
sub
jmp
mov
test
add
mov
sti
add
ja
loop
sub
sub
or
roll
daa
push
jg
inc
sbb
lret
idivb
jns
std
push
xchg
jno
and
sub
jmp
xlat
xor
rcll
lock
mov
mov
das
lock
insl
and
dec
ja
fidivrl
je
pushf
aaa
addr16
or
in
jle
mov
mov
push
addr16
xor
lock
pusha
int3
add
fs
inc
jae
mov
aam
aad
mov
adc
xor
or
push
insb
jmp
shlb
pop
rorb
mov
push
or
mov
add
rolb
into
cmp
xlat
lock
orb
stos
push
or
rcl
sub
mov
lahf
add
fdivrs
pop
out
adc
out
adc
fldcw
xor
fs
adc
ud1
push
sbb
cmp
xchg
mov
lcall
rcr
icebp
sbbl
das
mov
push
lea
mov
xor
pop
nop
daa
std
movsl
shr
mov
and
sub
jne
pop
inc
xchg
mov
jl
lea
insb
shr
inc
fwait
out
jp
cmp
sbb
xlat
out
dec
mov
xchg
pop
movsb
js
addb
mov
sbb
daa
lret
ds
insl
cmp
jle
and
pop
sbb
or
ja
and
cmpsl
or
cmpsb
cmp
lret
ss
jbe
sbb
cmp
jae
push
jbe
mov
push
inc
cmp
push
mov
adc
lret
imul
shl
push
cmp
dec
stos
push
push
and
movsb
fdivrl
xchg
cmp
inc
mov
test
negb
jmp
scas
outsb
cmp
mov
dec
inc
or
cmc
push
arpl
ljmp
outsb
int3
sbb
cmp
mov
mov
into
add
imul
pop
adc
mov
dec
cli
pushf
mov
mov
adc
sbb
and
pop
pusha
icebp
fcmovnbe
lea
mov
outsl
cmp
in
mov
push
cmp
in
int
data16
std
mov
sub
cmp
pusha
lock
and
mov
dec
and
icebp
xchg
sbb
pop
gs
or
push
dec
out
mov
push
mov
ret
std
sub
jp
mov
jge
divb
jg
mov
dec
jge
push
cmp
negb
pop
popl
fadd
jo
cltd
jmp
les
lcall
mov
xchg
aam
cmpsb
mov
xchg
shrb
xor
not
insl
in
mov
inc
lret
arpl
mov
outsb
test
inc
add
in
sub
lret
sbb
and
xor
cmp
pminub
or
mov
push
adc
pop
cmp
or
fsubs
cld
push
int
js
adc
push
mov
pop
rolb
jmp
cmp
daa
inc
stos
shl
int3
fsubl
dec
push
adc
shlb
sahf
loope
push
dec
fisubrs
mov
lcall
inc
call
jno
mov
mov
stos
flds
xchg
xchg
adc
adc
aaa
fcompl
jl,pn
dec
push
mov
int3
orb
cmp
ds
mov
xchg
aas
push
into
jbe
add
or
add
xchg
insl
mov
scas
sub
xchg
stos
inc
setle
fs
rolb
cs
and
jle
mov
jmp
cld
add
aam
inc
ret
cltd
lods
jns
enter
mov
ret
sbb
adc
pop
stos
xor
iret
pop
xchg
test
sbb
and
pop
sub
sub
mov
push
lret
cmp
adc
cmp
xchg
mov
cmpsl
shrl
xchg
xor
aam
cli
fdivl
mov
movsb
pop
es
add
out
repz
jg
aam
test
jne
jb
in
shll
xor
int
stos
push
fmull
cmp
mov
push
push
addl
mov
movsl
and
add
in
iret
push
aad
lods
lods
out
repnz
push
in
mov
push
dec
mov
dec
cltd
add
in
jns
inc
xchg
cs
cmpsl
cmpsb
mov
pop
ja
dec
fnsave
in
and
shrl
lds
jl
jge
cmp
loope
and
dec
jmp
lock
shlb
or
jo
or
mov
push
out
sub
sbb
or
je
dec
add
in
in
std
sbb
and
sbb
cmpsl
pop
cwtl
cld
jns
bound
jo
push
push
iret
mov
iret
stc
cmp
jo
cmc
sbbl
pop
lret
xchg
mov
addr16
inc
pop
add
or
int3
cmp
push
xchg
or
sahf
mov
jnp
or
dec
sub
stos
jl
cld
mov
mov
loopne
ss
subb
andl
mov
mov
movaps
push
pop
mov
addl
ret
inc
mov
in
fwait
aas
int3
call
sub
hlt
clc
fs
movsl
popa
cmp
xor
pop
rcrl
aaa
dec
add
into
inc
leave
mov
jb
mov
std
adc
iret
ss
pop
push
icebp
inc
scas
enter
cmp
ficomps
inc
js
pop
add
sub
dec
mov
push
push
sti
inc
mov
xchg
popf
cli
push
pop
push
or
inc
std
mov
out
push
adcb
sub
test
inc
stc
sub
ljmp
xchg
mov
cmpl
or
cwtl
jecxz
ljmp
pop
jge
jl
jmp
sub
movaps
pop
aas
mov
hlt
and
mov
pop
mov
cmpsl
lds
out
mov
dec
cwtl
add
adc
dec
enter
leave
popa
sub
pop
notb
scas
or
push
jmp
fwait
and
ja
cmp
and
mov
jnp
ret
loope
les
jbe
xor
cmp
sbb
xchg
decb
or
push
test
insb
or
or
and
test
into
cli
shrb
sbb
sbb
icebp
loop
and
or
xor
les
jge
mov
mov
ljmp
inc
iret
xor
cmp
jnp
jge
xchg
xor
test
jle
repz
movsbl
inc
sub
add
mov
out
inc
inc
xor
clc
xor
shl
pop
or
add
cmp
push
pop
jecxz
sbb
addr16
int
test
mov
mov
and
add
outsl
xor
xor
gs
cwtl
xchg
jge
xor
push
sbb
popf
add
call
fdiv
push
xor
mov
pop
or
popa
adc
fs
std
imul
fwait
push
cpuid
mov
test
push
pop
ret
jbe
inc
cli
mov
outsb
jecxz
sbb
sub
fnstenv
jno
iret
push
mov
cmp
pop
in
jl
push
xchg
cmp
sti
lahf
ljmp
adc
mov
addb
push
gs
inc
dec
pop
xlat
pushf
push
xchg
xchg
and
pop
push
scas
jle
and
and
dec
mov
test
cmp
sahf
stos
inc
fnop
dec
daa
hlt
test
vmwrite
les
pop
jb
add
lret
mov
dec
and
ret
mov
mov
inc
shl
fildll
sub
pop
sbb
ret
mov
add
test
dec
adc
jge
ljmp
adc
lea
mov
xor
and
fiaddl
mov
es
add
fs
mov
add
mov
adc
inc
mov
ja
adc
insb
or
lea
scas
push
je
mov
cmp
fidivs
sbb
add
fs
mov
mov
xor
cmp
cmpsb
mov
outsl
pusha
mov
mov
pushw
xchg
scas
aaa
mov
stc
xor
les
movsb
pop
pop
lods
cmp
js
pop
jne
mov
pop
mov
mov
mov
mov
add
cwtl
int
testb
inc
cmp
out
int3
jbe
or
pop
push
push
scas
insb
test
rolb
fdivrs
xchg
push
stos
jo
jns
xchg
jp
test
cltd
cmc
mov
lds
std
inc
jecxz
sbb
jne
adc
fimull
dec
out
push
lock
mov
outsl
scas
mov
jp
psubusb
scas
out
mov
pusha
sub
mov
sbb
xchg
jno
pushf
fisubrs
addr16
roll
sub
xchg
jae
inc
inc
iret
cwtl
and
jl
fstl
mov
xchg
pop
mov
cs
leave
push
das
leave
mov
lahf
daa
lret
add
mov
dec
jb
sti
and
cmp
movl
nop
sub
cmp
test
fisubrl
xchg
pop
and
arpl
inc
test
popf
decb
jnp
shl
dec
bound
lahf
mov
mov
pop
mov
xchg
loop
jno
mov
stos
add
push
pop
std
xchg
andb
mov
add
adc
pushf
fstpl
cli
scas
push
xchg
ss
add
push
adc
cmpsb
into
pop
rcrb
je
jp
xchg
arpl
inc
xor
in
cmpsl
pop
and
movaps
lds
add
fcomi
mov
subl
inc
movl
dec
fnstsw
fldcw
in
cmpsl
cld
xchg
ljmp
push
aad
sarl
fisubs
test
or
add
popa
dec
pop
sbb
cmp
dec
mov
xor
sbb
mov
das
or
sub
sbbl
test
scas
push
push
adc
sti
cmpb
lret
cmp
inc
or
push
jb
lock
mov
add
fpatan
ret
xchg
and
lds
and
int3
popa
sti
push
insb
lods
jle
add
push
and
mov
iret
jbe
imul
sbb
mov
jecxz
and
xchg
stos
pop
xchg
into
scas
adc
leave
jns
pop
sub
testl
int3
nop
pusha
popl
mov
lret
rcll
mov
out
jno
lea
adc
imul
clc
mov
orl
cmp
mov
add
shrl
adc
sbb
adcl
gs
ficoml
xor
push
mov
push
sbb
xchg
dec
push
mov
movq
mov
or
jge
xchg
scas
and
xchg
add
inc
dec
or
mov
sbbb
ss
dec
imul
pushf
idivb
fisubs
hlt
fdivrl
lods
mov
fwait
mov
aad
in
enter
fld
mul
jmp
mov
popf
or
jbe
cwtl
or
push
xor
dec
xor
roll
movsl
enter
or
add
pop
int3
int
iret
sbb
out
std
lods
push
cs
scas
mov
std
mov
nop
adc
ds
mov
lock
jno
xor
mov
icebp
in
adc
adc
aam
leave
das
outsb
scas
jns
sbb
jge
mov
push
lock
sub
je
test
and
test
sub
imul
data16
jmp
mov
pop
or
push
xchg
data16
incl
or
mov
fadds
in
adc
in
scas
sti
movsb
shrl
ljmp
shl
loopne
xor
mov
sbb
mov
mov
sar
out
jmp
hlt
and
cmpsl
in
fildll
pop
jne
test
cwtl
scas
ret
xor
testb
popf
test
and
and
call
fwait
cwtl
int3
pusha
jp
adc
test
js
cs
inc
inc
mov
loope
add
sub
lea
jp
add
sbb
mov
arpl
scas
divb
movsb
fcomps
daa
mov
adc
test
out
inc
icebp
popf
and
xor
fisubs
pop
inc
xchg
pop
lcall
test
push
mov
sbb
in
adc
mov
clc
addr16
push
mov
ss
xchg
cwtl
cmp
or
int
fwait
lahf
scas
mov
imul
repz
mov
fmull
rorl
arpl
repnz
data16
lds
loope
inc
and
daa
inc
or
fsts
mov
mov
push
in
push
cmpsl
popf
and
or
test
imul
mov
jle
jge
loopne
cld
pushf
bound
mov
ja
mov
xchg
xor
adc
mov
or
cmp
push
int
test
test
pop
das
scas
mov
faddl
mov
push
xchg
pop
dec
xchg
int3
inc
bound
push
int
fisttpll
jnp
cmp
mov
lds
es
mov
adc
add
push
xchg
test
or
xor
pop
push
aas
aas
cmpsl
mov
insb
rcrl
dec
cmp
loopne
xor
stos
mov
out
mov
mov
cmpsl
fsubrs
mov
scas
andb
sbb
call
test
pop
shlb
xchg
bound
or
xchg
shl
stos
push
xchg
cmc
fildll
int
incb
mov
pusha
pushf
sbb
adc
rcrb
cs
enter
pusha
sahf
icebp
mov
jbe
cwtl
jne
shr
mov
xchg
or
adc
in
mov
or
idivb
imul
mov
push
das
mov
push
sbb
into
pop
push
loopne
push
push
push
xchg
jg
add
jl
xchg
loope
aas
fmull
jae
movl
push
inc
ja
push
push
add
filds
dec
loop
mov
ficoms
mov
lds
lea
popf
cmp
dec
or
mov
test
lods
push
push
xor
mov
push
subb
clc
sbb
mov
jno
bound
push
mov
or
xchg
sub
filds
mov
daa
inc
sbb
es
pop
mov
popl
pop
popf
ss
insb
out
push
jnp
sti
cmc
mov
outsb
sahf
es
cs
fmuls
movsl
pop
daa
ja
insb
and
pushf
jge
add
push
les
mov
xor
sub
lds
xor
add
test
rcr
jg
fstpt
push
sbbl
or
mov
cwtl
push
xor
loope
mov
jp
lock
mov
lds
mov
test
lods
popa
jl
lahf
out
inc
mov
dec
or
mov
cmp
jae
lcall
lret
pop
adc
pushf
fcoml
addr16
fs
stos
cmp
inc
push
pushf
cmp
fwait
clc
cwtl
dec
lret
mov
scas
adc
push
sbb
mov
int3
inc
test
aas
lret
jmp
jg
lods
aad
or
or
insl
jge
jmp
pop
cwtl
jle
dec
push
push
out
add
xchg
lahf
cmp
lds
cmp
lcall
pop
enter
nop
xchg
cmp
rclb
repnz
cwtl
rol
pop
std
cld
sub
jnp
sbb
aad
call
adc
xchg
mov
inc
or
rcrb
rolb
push
jl
cmp
xor
xor
test
test
imull
cmpsb
sbb
push
lock
lcall
subl
mov
add
mov
hlt
sbb
push
das
das
push
fwait
cltd
mov
xor
lahf
insl
addr16
addr16
scas
nop
mov
mov
stos
into
lods
out
out
ss
lods
movsl
dec
fsts
andb
mov
in
or
inc
lods
jl
jbe
cmp
jge
inc
push
and
out
sub
repz
pop
pop
mov
dec
cmp
mov
js
leave
sbb
or
orb
or
bound
add
or
or
pop
cmp
daa
pop
cmc
fcoms
aad
in
inc
push
ret
fsubrs
push
lods
xchg
xlat
add
loope
mov
dec
sti
cmp
mov
xchg
aad
xchg
sbb
int
pusha
jge
mov
add
and
fscale
pusha
lods
mov
divb
stc
push
outsb
inc
inc
test
adc
mov
xlat
sbb
sbb
jmp
add
inc
cld
ror
das
or
das
loope
mov
cmp
stos
mov
xchg
sbb
adc
or
and
ret
xchg
sub
xchg
cmp
xchg
stos
cmc
enter
adc
xor
inc
cmp
pop
sub
movsb
inc
mov
stos
daa
jecxz
pusha
push
pop
orl
lret
sbbb
pushf
or
mov
or
lods
sub
fwait
or
sub
test
dec
add
sbb
push
mov
xor
enter
or
jge
jne
mov
in
and
scas
xchg
dec
insl
fwait
call
mov
mov
jno
icebp
jmp
lods
in
lock
xor
daa
push
clc
mov
leave
jmp
pop
pop
enter
sub
cmp
mov
adc
out
mov
fbld
ja
out
lcall
and
sbb
insl
jno
enter
inc
movl
cmc
into
push
sar
inc
pop
loopne
fisubs
test
cmp
cs
out
mov
je
dec
push
jns
movsb
aam
leave
roll
pop
cld
pop
cli
pop
xor
dec
ja
xchg
dec
fisubrs
xchg
add
jmp
cmp
enter
push
pushf
jb
add
subb
aam
push
lret
fbld
imul
data16
add
and
inc
mov
mov
divb
iret
xchg
mov
fcmovne
rolb
xchg
cmc
adcb
shrl
jle
xor
dec
insl
xlat
pop
fs
inc
mov
inc
mov
inc
iret
add
or
mov
shll
lret
mov
fidivrs
fs
adc
faddl
add
sbb
inc
xchg
mov
stc
push
cmpsl
fnstcw
mov
jmp
cs
cltd
pop
mov
cli
test
lods
xchg
push
shll
add
clc
push
mov
dec
test
lds
jb
pop
jo
inc
jl
jae
jge
pusha
push
dec
xchg
push
push
daa
push
push
fidivrs
pop
inc
inc
sbb
es
inc
das
xchg
and
add
xor
flds
add
stos
in
mov
fcomps
sbb
adc
xchg
mov
adc
push
js
nop
stos
and
cmp
int
push
xchg
std
imul
fbld
arpl
adc
mov
mov
push
fisubs
arpl
mov
lods
int
fdivl
pusha
push
fimull
or
inc
adc
es
lea
shll
inc
sbb
sti
push
push
jecxz
jbe
dec
dec
xor
imul
sbb
les
mov
popf
fwait
shrl
lods
stos
pop
inc
sbb
aam
movsb
outsb
cltd
shlb
pop
inc
movsl
imul
dec
mov
pop
mov
cmp
inc
mov
popa
jno
jnp
add
jb
xchg
lock
out
les
aas
clc
dec
test
dec
inc
push
adc
out
dec
loope
ret
sbb
inc
es
mov
xchg
pop
inc
fwait
cmc
mov
jg
stos
xor
or
dec
into
dec
cmpb
orb
inc
push
jns
int
je
cmp
mov
dec
into
pop
mov
pop
cltd
xchg
or
ret
or
cmc
jns
ljmp
jb
xchg
daa
push
test
hlt
mov
inc
stc
inc
lds
hlt
lods
jne
mov
sub
js
in
addr16
and
cmp
stos
sub
out
mov
xor
enter
insb
jbe
jmp
in
mov
pusha
cmpsl
mov
insb
fisubl
xchg
repnz
mov
mov
mov
jecxz
pop
adc
cmpsl
pop
add
or
ss
sbb
dec
rcr
mov
call
push
cltd
jmp
mov
xchg
rcr
jo
cltd
mov
ds
pop
movsl
pop
inc
mov
jle
mov
punpckhwd
icebp
push
insb
repz
arpl
gs
je
das
sub
imulb
dec
movsb
data16
push
sbb
dec
aas
add
scas
test
dec
sbb
or
adc
sub
add
jae
add
rcr
mov
mov
mov
sarb
pop
js
push
mov
ja
out
fcoml
out
nop
loope
cmp
lret
std
cmpsl
insl
inc
jbe
cmpsl
sub
sbb
popa
negb
xchg
jns
int3
mov
and
jecxz
or
jb
xchg
pop
mov
inc
sbb
push
cmp
repz
add
and
repz
lods
daa
sub
pop
push
outsb
ja
jp
sbb
mov
mov
je
jne
add
jmp
cltd
js
pop
lcall
in
and
and
rorl
lahf
inc
jmp
scas
sbb
es
sub
jge
and
in
insl
xchg
dec
adc
scas
xchg
idiv
add
int3
shlb
cmp
fiaddl
push
push
or
add
adcl
xor
pop
cltd
dec
pop
enter
cmc
jns
xchg
or
je
setl
dec
xor
sbb
lea
lcall
addl
and
mov
insb
in
dec
xchg
cli
cwtl
das
loope
scas
mov
xchg
pop
movsl
lods
fildl
xchg
sahf
fistpll
js
pop
hlt
xchg
xchg
mov
xchg
and
xchg
out
jmp
test
lret
cmpsl
xor
xchg
mov
cmp
in
outsb
mov
jne
push
lock
xchg
repz
aas
push
push
dec
stc
jp
mov
aad
into
and
jl
dec
or
adc
mov
fsubrl
loop
and
pop
mov
ret
push
push
and
jg
inc
mov
iretw
adc
xor
cs
mov
jmp
sbb
sbb
cmp
mov
pop
lcall
mov
add
mov
aad
iret
addl
ds
lcall
stos
jb
outsl
addr16
test
dec
mov
test
popa
subl
daa
sbb
lret
daa
push
dec
dec
push
cmc
loope
jecxz
mov
mov
xchg
jns
mov
sbb
out
xchg
inc
dec
shll
push
jl
mov
or
sub
cmp
mov
adc
ljmp
mov
negb
xchg
mov
stos
adc
xchg
add
int
ja
mov
inc
cmpsb
fmuls
rcrl
xchg
fdivr
mov
std
cmp
in
xor
add
idivl
ss
xchg
sahf
jno
fs
jbe
je
dec
add
adc
push
fs
mov
jl
sahf
roll
pop
adc
cwtl
sbb
jp
pusha
fdivs
je
cltd
or
add
sbb
mov
mov
inc
pop
movsl
xor
je
sbb
gs
aaa
jge
lret
cld
sub
sbb
mov
pop
cmpsb
in
das
and
fcomps
fisubrl
pushf
push
sti
jl
sbb
stos
push
out
pop
movsb
sub
dec
repnz
lret
sbb
push
pushf
adc
movsl
mov
out
jl
aad
incl
mov
sbb
sbb
sbb
js
fwait
and
jle
pusha
lret
xlat
mov
push
ror
rcll
test
mov
dec
mov
xchg
lahf
push
push
inc
subb
adcl
repnz
and
mov
sarb
cmp
xchg
mov
loopne
sub
mov
outsb
jecxz
push
dec
cmp
add
in
fnstcw
out
and
aam
lret
mov
in
bound
int3
jg
add
out
outsb
push
xchg
or
or
int
adc
or
outsb
or
cld
test
loop
or
or
cwtl
and
xor
and
inc
mov
repnz
xor
push
cltd
shl
sbb
jg
orl
sub
or
xchg
movsb
mov
mov
cmc
pushf
mov
rcrl
rcll
jge
fldl
mov
mov
cmp
xchg
pop
test
xchg
or
and
testl
mov
stos
mov
fwait
je
div
sub
or
leave
cmp
mov
data16
or
popf
pop
bound
test
scas
or
inc
xor
mov
hlt
shrb
mov
stos
in
shll
ss
push
js
mov
xchg
pop
mov
mov
mov
addr16
jge
push
inc
mov
mov
lea
nop
dec
rclb
jecxz
inc
push
pop
mov
addl
jmp
mov
pop
cmpsl
pop
pop
fisubrl
pushf
add
mov
push
mov
adc
adc
out
dec
fdivs
imul
jbe
popa
pop
cmp
mov
aas
mov
pop
lods
xlat
sub
lods
das
rcl
mov
into
aas
fiadds
add
inc
rcl
xchg
push
shlb
mov
lret
xor
fisttpl
sahf
inc
inc
jmp
lds
icebp
lret
sub
ljmp
pop
inc
add
orl
push
aam
and
aas
imulb
pop
lea
dec
cmpsb
xchg
cwtl
pop
add
cli
popl
and
dec
ja
call
cli
dec
dec
mov
adc
dec
sbb
rcl
push
and
shlb
and
fistps
jp
in
cmc
sbb
aas
sahf
mov
jnp
add
outsb
in
es
and
jecxz
or
icebp
mov
popf
addr16
movsl
loopne
add
cwtl
mov
push
aam
repnz
mov
fiaddl
cmpsl
jo
call
jp
aad
repnz
or
jb
or
mov
push
loop
inc
jb
pop
jle
sub
arpl
hlt
jno
add
sbb
cmp
into
repnz
les
test
xlat
dec
xor
lock
jno
cmp
in
leave
pop
or
mov
pop
js
inc
pop
test
xchg
insl
mov
into
cmp
jge
mov
dec
xor
in
outsb
out
mov
ss
mov
aaa
inc
rcr
mov
cmp
xchg
gs
ljmp
xor
jb
xchg
mov
adc
fnsave
inc
in
shlb
mov
lahf
ja
mov
mov
push
pop
loop
shl
cs
xchg
lods
ret
setl
ret
fisubl
push
in
clc
dec
fsubrs
ds
jg
fs
clc
sbb
push
or
insl
and
scas
test
mov
pop
decb
or
inc
dec
gs
ret
jae
cltd
push
cmp
fwait
sub
xchg
lahf
lahf
repnz
pop
ss
popa
pop
nop
es
push
sub
mov
mov
cmpsb
jge
in
xchg
add
or
jno
repz
lea
bound
and
popa
scas
lock
ss
cmp
lcall
jo
inc
imul
mov
xor
ss
fnstsw
jmp
cmp
cli
push
lahf
outsl
mov
xchg
cmpsl
testl
mov
pop
cmp
dec
test
sub
xlat
xchg
inc
push
mov
sbb
mov
ljmp
out
pop
cld
add
xchg
pop
jmp
stos
into
jae
add
cmp
cmc
jmp
mov
xchg
je
sahf
out
bound
testl
sbb
sbb
out
push
mov
popf
mov
fmull
pop
mov
nop
add
adc
imul
loope
shrb
push
jae
stos
cmovbe
or
xor
push
xchg
cmp
lret
lahf
lds
icebp
movsl
outsl
pop
sub
sbb
int
test
ljmp
mov
fs
jle
mov
xchg
jmp
pop
add
loope
mov
and
dec
out
adc
mov
mov
cmp
int3
xor
jl
js
mov
in
sarl
loope
rorb
aas
ja
adc
insb
inc
pop
or
fs
sahf
icebp
mov
push
mov
insl
push
adc
idivb
mov
popa
mov
clc
cmp
sbb
shll
add
or
xchg
or
js
mov
xchg
push
mov
cmp
and
jle
lods
lahf
xchg
jmp
xchg
cmc
aaa
inc
subb
xor
insl
xchg
mov
mov
adc
pop
loopne
aad
jl
cmpl
lds
stc
sub
idivl
jmp
and
xor
in
dec
shrl
xchg
pusha
clc
roll
loop
and
in
sbb
cmp
sbb
int
gs
push
push
popf
adc
sbb
push
inc
aam
pop
into
jp
adc
aad
mov
xchg
jne
sub
imul
aas
jno
aam
insl
rolb
push
insl
je
push
jno
cs
dec
fdivs
jp
movsl
dec
dec
push
push
sar
xlat
loop
jecxz
sub
jge
dec
mov
add
loope
sahf
jnp
pop
test
fcompl
jns
leave
jae
dec
mov
outsb
xchg
bound
repz
xchg
jne
mov
cmpsl
repnz
push
and
jo
imul
mov
inc
sub
mov
test
push
stos
outsl
mov
pop
shrb
inc
ja
inc
cwtl
xorl
sub
rcrb
dec
pusha
cltd
stc
iret
pop
scas
push
push
rolb
movsb
cmp
inc
dec
mov
js
xchg
test
mov
mov
pop
mov
add
call
mov
cmp
mov
in
gs
sbb
cltd
mov
ret
nop
in
push
pop
xchg
inc
gs
gs
push
scas
or
cmp
mov
push
xchg
push
jo
inc
mull
ret
mov
mov
pop
push
cld
dec
ljmp
sbb
add
pop
xlat
and
sub
shlb
imul
adc
inc
and
leave
cld
sub
and
enter
lods
push
sub
cmp
pop
loopne
mov
push
adc
and
adc
cmpsl
int3
loope
add
dec
push
lret
ljmp
cli
out
rcrb
xor
pop
or
shrl
test
sbb
adc
addr16
ljmp
pop
sarl
pop
arpl
mov
movsb
loopne
mov
adc
jmp
cmp
jle
test
add
addr16
add
inc
inc
push
sub
ficoms
mov
enter
lcall
cmc
aam
inc
test
pop
js
pop
dec
adcb
or
in
mov
or
jmp
mov
fildll
mov
jecxz
cmp
mov
movsb
aad
out
fwait
or
jmp
mov
idivl
xchg
mov
sub
jo
inc
aam
int3
or
adc
loopne
cld
sub
dec
mov
jnp
das
jnp
jno
inc
pop
ja
into
sbb
mov
aam
add
divb
inc
imul
stc
lret
cmp
sbb
push
in
adc
bound
mov
sarb
popf
cmpsb
outsb
and
mov
adc
repz
in
jl
sbbb
mov
cmp
xchg
dec
stos
shrl
pop
outsb
das
hlt
jns
push
aaa
mov
push
leave
arpl
xchg
mov
adc
das
mov
pop
push
mov
pop
adc
imul
fildl
loop
cmp
bound
cmp
or
imul
inc
scas
and
lods
int3
xor
cmp
mov
mov
push
repnz
sbb
sahf
mov
xor
add
xor
push
std
dec
imul
jecxz
dec
cli
push
pop
arpl
sub
xchg
add
leave
mov
mov
ret
adc
std
jg
push
cmp
mov
or
sbb
arpl
jmp
jge
test
stos
arpl
adc
sbb
or
xor
xchg
repnz
or
fisubl
jno
addl
clc
lods
push
aas
add
out
mov
sbb
or
test
cmc
jo
sti
sub
jne
js
push
jecxz
jne
mov
or
imull
jne
jge
pop
cwtl
mov
mov
cmp
sub
loop
cld
xchg
dec
lcall
sub
js
or
xchg
and
jecxz
jg
scas
js
arpl
dec
cmpsl
inc
mov
cmp
sbb
fildl
push
mov
adc
cmp
loope
mov
mov
inc
call
add
xchg
daa
arpl
pop
adc
mov
out
cmp
dec
jne
fidivrl
jle
aam
test
xchg
jno
mov
aad
mov
lret
push
xchg
mov
sub
rcrb
call
fcomps
xchg
pop
ljmp
inc
sbb
mov
mov
push
add
xor
lret
daa
stos
xor
idivb
jno
add
mov
fcmovnb
out
jg
iret
push
and
add
test
lcall
jo
and
dec
inc
insl
inc
ds
out
shl
repnz
sahf
pushf
xchg
call
fdivrs
or
jmp
test
xor
fmul
dec
jmp
push
enter
mov
pop
jmp
loope
inc
jl
and
aaa
pushf
call
cmp
push
inc
je
push
push
test
xchg
rolb
ja
pop
and
mov
inc
xchg
dec
mov
mov
cwtl
movl
mov
cmp
test
gs
mull
push
mov
or
dec
aaa
push
test
data16
mov
mov
jmp
and
and
push
mov
movsb
gs
das
dec
xorb
jnp
or
or
mov
jecxz
fiaddl
dec
loop
add
pop
pushf
push
in
test
das
cs
sub
sbb
lods
sbb
sbb
lahf
jb
push
pop
int3
in
xor
cmp
push
sbb
loopne
inc
xor
mov
push
addl
lret
lret
sub
lds
movsl
insl
enter
adc
jge
nop
sub
movsl
cmp
gs
scas
dec
sub
cmc
cli
adc
push
xchg
or
mov
xchg
mov
xchg
insb
or
inc
test
lret
add
in
xchg
push
lret
adc
das
dec
je
or
and
call
sbb
iret
ljmp
outsb
aas
popf
sub
jne
xchg
fst
stc
push
fsubrs
cltd
jne
mov
or
xchg
push
fdivl
pop
inc
push
scas
or
jl
sbb
adc
repz
mov
scas
push
ds
jbe
fs
lret
xchg
mov
sets
in
sub
shrb
mov
push
jnp
cwtl
jmp
int3
leave
pop
xchg
lea
inc
sbb
in
jo
arpl
lret
push
rclb
add
rclb
sub
ret
popf
push
cmc
testl
iret
arpl
pop
lret
fdivs
inc
aas
repz
push
loopne
jg
lret
repnz
add
imul
jecxz
cs
adc
or
sbb
jl
jg
mov
enter
or
adc
or
arpl
je
add
jnp
jle
stos
jecxz
jns
xchg
test
inc
add
daa
xor
stos
rorb
in
ss
inc
clc
pop
sbb
call
push
ds
faddl
inc
shrb
mov
mov
aas
xchg
fistpll
mov
fmul
bnd
movsl
or
jge
sti
or
push
outsl
aam
es
sub
repnz
enter
mov
xlat
fidivs
cmp
insl
insl
cs
js
push
lock
js
add
in
mov
jle
pop
xor
mov
cmp
shll
pop
je
subl
jae
repz
repz
test
daa
call
nop
lahf
jnp
outsl
jp
fs
jo
sti
sub
mov
movsl
repz
jmp
dec
cmpsb
ds
fisubrs
popf
mov
popf
inc
pop
push
call
fmull
xchg
add
sub
jge
fcoms
stos
jecxz
mov
imul
mov
aaa
mov
int3
loope
mov
jmp
lods
hlt
lock
xchg
lcall
mov
lock
sbb
aad
push
dec
out
es
lahf
call
add
xchg
dec
pop
cmp
popf
adc
clc
pop
popf
mov
loopne
loope
ja
insl
cmp
outsl
push
mov
sub
xlat
leave
xchg
aaa
and
aam
push
cmpsb
mov
add
adc
js
loopne
pop
bound
icebp
pop
cmc
pusha
dec
out
or
popf
out
mov
pushf
sbb
idivl
or
out
pusha
push
push
push
movl
jge
ljmp
in
dec
ret
mov
ret
lds
cmp
jge
or
xchg
rcrb
nop
ljmp
jbe
popf
into
add
or
fistpl
fwait
pand
push
cltd
rorl
popf
inc
add
sti
stc
jmp
movsb
das
aam
and
jecxz
mov
mov
push
fdivl
cmpsb
add
sbb
sbb
mov
imul
negb
dec
xchg
xor
mov
fwait
mov
cmp
fisubl
xchg
dec
dec
aaa
loope
mov
push
jecxz
int
push
sbb
in
scas
xor
je
imul
push
add
sbb
call
popa
orb
dec
inc
xor
dec
in
sbb
loope
or
outsl
leave
inc
lea
fcmovne
cmpsb
pushf
jl
imull
dec
push
daa
aad
loop
mov
push
cmpsl
pop
dec
sbb
xor
xor
sbb
pop
fidivs
cmp
xchg
cli
push
xor
jecxz
inc
push
pop
inc
out
push
push
pushf
cmc
xchg
jae
xchg
xchg
mov
ljmp
mov
repz
cmpsl
cmp
cmpsl
fiadds
cltd
mov
in
mov
outsl
repnz
push
fwait
lods
mov
mov
scas
clc
rcr
lock
push
inc
enter
ljmp
xchg
imul
mov
mov
outsb
arpl
jle
adc
sbb
loope
xchg
movsb
pop
inc
add
xchg
fcmove
pop
inc
sub
add
stc
mov
cwtl
jno
pop
xor
mov
pop
cmp
clc
cwtl
cmp
orb
sti
aam
sub
and
sti
out
cmp
popf
cmp
pop
cltd
cmp
push
arpl
rcrl
andl
mov
dec
pop
cmp
pushf
sub
mov
sub
push
fdivp
mov
dec
stos
test
aad
xchg
fcomi
iret
stos
test
mov
adc
inc
jmp
push
xor
xor
lcall
adc
cmpsl
fidivl
and
outsb
pop
or
ret
add
rep
lahf
adc
adc
dec
sub
cltd
mov
cmp
add
xor
jbe
mov
out
cmp
inc
xchg
sbbb
mov
rcrb
mov
jo
mov
cs
loope
mov
movsl
push
into
inc
imul
es
outsl
adcl
mov
add
cmpsl
pop
adc
pop
fucom
cs
or
insl
dec
xlat
cs
xchg
mov
mov
pop
fcomps
pop
dec
call
std
fimuls
lea
vcvtps2pd
jle
aaa
mov
mov
pop
or
test
jo
add
lcall
insl
or
sbb
fld
pushf
fs
rsm
fnstsw
cmpsl
subl
adcb
movsl
mov
out
sbb
jg
test
jno
xchg
outsl
inc
xor
popa
pushf
push
or
sub
jp
in
dec
dec
lahf
jo
por
jb
mov
adc
adc
negb
mov
out
xchg
and
inc
mov
repnz
pop
imul
inc
xor
push
lahf
out
xchg
popf
dec
lods
rcll
ret
dec
mov
jns
inc
xlat
pop
mov
dec
inc
jecxz
jmp
xchg
jmp
js
insb
mov
pop
pop
adc
sub
and
add
mov
imul
rcr
cmp
xchg
mov
dec
cmp
loope
dec
addr16
lcall
inc
cli
mov
inc
xchg
popa
rorl
imul
dec
imul
jno
adc
add
lcall
pop
gs
mov
mov
inc
ret
lock
adc
dec
sar
into
adc
out
sbb
aaa
dec
arpl
push
scas
repz
aam
mov
mov
add
and
scas
push
fstpt
or
xor
jl
inc
push
cmp
test
dec
mov
push
xor
cwtl
loope
push
lods
mov
fidivl
incb
in
mov
out
push
into
popf
sbb
gs
adc
movsb
fmuls
in
or
rorb
mov
jbe
lret
jae
mov
mov
daa
std
add
pop
cmp
ret
sub
int
pop
cmp
movsb
rcrb
sub
mov
and
cltd
lret
fidivrl
loopne
add
jb
cmp
fucomp
or
sub
outsl
pop
add
sub
jne
out
fistl
jno
in
out
les
push
jne
sbb
pop
into
insl
shrl
sbb
add
sbb
mov
xor
ljmp
jnp
cwtl
push
inc
xor
adc
in
mov
pop
or
popf
arpl
and
ja
sub
push
jle
push
dec
fsubl
fcomi
cli
imul
cmp
outsb
jne
arpl
sub
adc
scas
xor
mov
in
lahf
xor
popa
jo
mov
jns
dec
mov
add
das
movsb
fdivs
add
jge
int3
jb
mov
push
xor
mov
xchg
mov
jae
cltd
jg
jl
je
lds
pop
scas
sub
shrb
push
outsl
inc
cmp
jns
stc
mov
lds
xchg
mov
icebp
sbb
push
imul
incl
int3
pop
popf
cmp
sbb
testl
cmp
mov
ficompl
cmpsl
add
arpl
push
mov
xchg
inc
fldenv
dec
jl
aad
outsl
fadds
int3
pushl
jmp
and
dec
repz
hlt
sub
mov
aam
mov
repz
arpl
dec
jp
test
xchg
repnz
xor
gs
jle
jg
fisubs
mov
mov
xor
xchg
leave
movb
cmp
orl
lahf
adc
xchg
mov
sti
lea
xchg
sti
adc
aad
add
mov
into
inc
jecxz
push
decb
dec
lcall
add
xor
jno
pop
cltd
insb
das
shr
shll
xor
je
fisubrs
out
es
or
dec
shrl
test
stos
sub
dec
mov
dec
aas
mov
cld
sbb
rol
pop
lea
insl
mov
mov
movsl
sarl
test
and
mov
mov
bound
outsb
mov
in
pusha
pop
cld
mov
arpl
mov
and
in
add
stos
mov
xor
dec
cmp
mov
mov
lcall
cmp
ds
cmp
rcll
pop
jge
lock
inc
jo
inc
mov
jbe
dec
xlat
dec
add
cli
jne
shlb
xchg
out
data16
loope
adc
adc
les
cwtl
test
inc
add
adcb
xor
cmc
cmpsl
push
sbb
jecxz
cmp
iret
lock
sahf
pop
das
outsb
pop
pop
fbld
stc
mov
popa
orb
mov
testb
daa
push
push
lea
mov
jge
sbb
or
lcall
pop
scas
inc
lods
daa
sub
popf
cmc
add
fwait
xchg
pop
ljmp
push
mov
imul
xor
sub
lds
jl
and
mov
jae
mov
mov
daa
bnd
xchg
pop
xor
push
scas
pop
test
and
mov
xor
leave
cmp
pop
push
jmp
lret
insl
cmp
mov
jne
mov
xchg
sbb
loopne
push
jns
icebp
test
loop
mov
xchg
rcrl
sub
arpl
inc
ja
jae
xchg
sbb
addr16
repz
inc
mov
imul
stos
sub
leave
adc
push
aaa
lds
aaa
pop
dec
test
add
aam
and
jmp
in
sahf
lret
mov
mov
push
push
adc
mov
mov
les
js
push
outsl
mov
mov
insl
jne
addl
push
dec
jne
lods
fidivrs
mov
sbb
xor
push
fwait
movsb
dec
test
insl
pop
lods
jl
je
paddsb
stc
jbe
int
pop
push
add
cmp
popf
mov
xchg
andl
xor
nop
es
stos
stos
int3
iret
mov
out
xor
js
and
dec
pop
jg
push
scas
cmp
sub
int3
mov
dec
cmp
sarb
arpl
jne
xchg
sub
arpl
in
sub
ja
jo
wrmsr
test
xchg
jle
arpl
sub
mov
out
leave
lret
loopne
pop
mov
sbb
jl
sbb
leave
sbb
adc
or
xchg
xchg
in
jle
push
xchg
cmp
data16
jp
mov
test
push
xor
push
out
sub
aam
or
fldenv
sahf
mov
jecxz
lods
adc
pop
cmp
aad
push
mov
xor
mov
xchg
das
push
fstpt
mov
scas
in
dec
xchg
decl
inc
lea
mov
cwtl
pop
out
pop
pop
loopne
sub
loop
push
xlat
xchg
jno
out
xchg
push
daa
sbb
loop
es
push
bound
daa
pop
jbe
adc
insb
mov
daa
pop
pusha
sbb
jb
pop
fistpl
es
sar
sub
xor
out
mov
dec
sbb
mov
cli
mov
or
js
imul
setne
add
or
sub
enter
daa
and
and
mov
mov
adc
mov
pop
mov
sarl
out
hlt
or
hlt
addr16
sbb
imul
pop
jp
inc
jl
mov
dec
aaa
in
dec
adc
sar
fmull
rcrl
rcr
lods
or
mov
xlat
mov
cmp
das
loop
repnz
insb
sti
xchg
cmpsb
jecxz
popa
xchg
fwait
sbbb
out
xchg
dec
push
daa
add
int
sarl
js,pt
xchg
data16
sbb
xor
xor
movsl
rorb
pushf
mov
xchg
sti
iret
pop
xchg
mov
xchg
pop
add
daa
sti
add
nop
mov
mov
mov
cmp
stos
lahf
and
enter
cmpsb
xor
mov
xchg
jecxz
aaa
dec
rcrl
cld
adc
arpl
and
das
mov
roll
cmp
mov
sbb
fdiv
adc
ja
lahf
into
push
fcomip
and
jl
push
in
mov
mov
mov
and
test
lcall
lahf
inc
inc
jl
aaa
mov
add
sarb
insl
inc
packuswb
or
add
cmp
or
mov
sbbb
fldl
pop
fistl
mov
out
pop
cmc
mov
movsl
cltd
lea
jb
sub
mov
cmc
push
jo,pt
pop
insb
and
fcmove
cmpl
sarl
and
pop
shl
lcall
mov
xchg
idivb
mov
lret
js
push
aad
cwtl
cwtl
jae
ret
add
popa
aam
inc
into
xchg
or
dec
mov
jecxz
mov
ret
and
and
mov
xor
push
sub
mov
ret
es
out
fcoms
mov
ds
rorl
std
fldcw
into
insl
cld
xor
inc
cmp
into
sbb
lods
sub
iret
popf
les
xor
js
repnz
out
in
test
add
sbb
data16
mov
mov
arpl
test
cld
cmp
sub
pop
mov
mov
pop
dec
lahf
mov
outsb
xor
ret
mov
scas
mov
mov
test
jne
daa
das
arpl
mov
or
or
test
scas
xchg
mov
xchg
pop
les
mov
pop
subb
lahf
add
stc
sub
pusha
imull
sub
or
out
pop
sub
call
mov
bound
and
add
out
and
scas
fwait
mov
outsb
sbb
dec
inc
dec
hlt
lds
jle
cmp
loop
das
clc
pop
pop
cmp
jp
insl
incl
inc
mov
pop
xchg
xor
inc
inc
pusha
or
bound
aas
push
cmpsb
inc
cmpb
cli
push
sub
leave
add
lcall
stos
pop
pop
adc
inc
sarb
mov
push
add
cltd
sub
cmc
inc
or
fwait
or
xchg
lret
imul
data16
fbld
bound
das
lock
or
push
adc
nop
aas
add
xchg
push
scas
and
dec
pop
sbb
shrb
insb
cmp
subb
xchg
xchg
in
mov
sub
addb
cmpb
cmp
push
gs
inc
mov
cltd
cli
mov
mov
cmpsb
dec
arpl
mov
pusha
call
sub
leave
jnp
and
stos
ret
out
popf
cs
int
orb
adc
in
rolb
into
jg
mov
popa
int3
cmpsb
jno
jg
pop
out
imul
dec
fwait
pop
or
sub
js
and
test
jle
adc
ljmp
cmp
lret
popa
ret
rcrl
or
shrl
in
dec
dec
mov
push
testb
fldenv
icebp
dec
jns
sub
and
mov
mull
mov
cwtl
cmpb
out
cmpsl
data16
shll
mov
fistpl
xchg
push
into
inc
test
pop
xchg
ficomps
mov
popf
popa
leave
mov
leave
fidivl
sbb
enter
sub
mov
call
mov
sub
repnz
out
xchg
xor
pop
icebp
adcl
push
cmp
pop
cmp
mov
push
in
xchg
or
inc
inc
shl
mov
sub
push
mov
xor
out
pop
punpcklwd
mov
cmp
xor
and
popa
push
lcall
add
hlt
cmp
add
or
fisttps
lcall
cmp
fmull
fldcw
mov
inc
aaa
rolb
pop
pop
cmp
cmpsl
mov
outsb
shll
rorb
cltd
mov
in
pop
push
mov
leave
idivb
cmpsl
sarl
test
mov
inc
inc
mov
or
push
fdivrs
dec
pop
stos
nop
jbe
inc
xor
jge
dec
pop
xchg
pop
fs
das
cmpsb
lods
pop
shrb
and
jge
popf
jae
cs
push
lods
and
sti
and
int
jecxz
jecxz
out
pop
xor
shlb
jp
cmp
enter
cmp
imul
inc
fsubs
push
adc
stos
inc
inc
les
les
or
stos
lods
pop
and
xorb
jno
lds
dec
stc
sar
cltd
pop
mov
inc
sahf
pop
bound
loopne
repz
shlb
cwtl
fcomi
inc
and
outsb
mov
ja
clc
push
or
xor
call
fisttpll
test
inc
ret
out
inc
cmp
xor
cs
mov
outsb
repz
lcall
xor
in
pop
add
aas
test
aas
adc
lret
inc
xchg
aad
sub
xchg
popf
sbb
cld
xlat
rep
and
mov
fstps
mov
out
sub
test
cwtl
imull
sbbl
ljmp
fs
xchg
loopne
mov
aas
pop
add
repz
stos
adc
cli
xor
cmpb
fwait
mov
dec
sub
fadds
xchg
divl
loope
mov
cmpsb
xchg
jge
rorl
addl
movlps
cmp
and
mov
xor
das
sbb
imul
mov
cmp
js
pminub
xor
in
mov
push
insl
mov
inc
ret
and
popf
sub
add
mov
jmp
popf
std
fwait
and
xor
popf
add
pop
jne
shlb
lock
xchg
xor
pop
pop
repz
dec
jmp
xor
mov
mov
std
xchg
ds
jbe
repz
inc
loope
rorb
cmp
rorb
push
int
cmp
pop
call
xlat
cmp
pop
shll
or
mov
adc
push
outsl
pop
inc
add
add
insb
lret
xor
sbb
and
lea
test
sbb
hlt
mov
inc
dec
pusha
cs
mov
xlat
ja
or
shld
cmpsl
inc
jp
sub
pop
call
dec
out
push
add
xor
mov
nop
mov
mov
cmp
mov
daa
aas
sub
pop
outsl
sbb
dec
mov
mov
adc
jl
sbb
lods
mov
iret
cld
mov
xchg
in
cwtl
cmpl
pop
jae
test
mov
lods
adc
inc
popf
imul
pop
adc
repz
sbb
dec
mov
movsl
rol
push
jl
xchg
je
dec
mulb
pusha
xchg
cwtl
mov
nop
xor
mov
aad
lahf
lea
test
xor
mov
mov
stos
jecxz
loop
mov
clc
adc
cmp
and
int3
aas
pusha
mov
stc
xor
scas
mov
rclb
repz
push
jg
adc
pushf
int3
mov
mov
mov
scas
adc
pop
insl
dec
fld
std
push
fmull
and
jae
test
jg
sbb
push
int3
pop
xchg
fcmovbe
add
loopne
pop
aam
lods
mov
xor
xchg
mov
popf
xchg
arpl
stc
shr
push
dec
push
dec
dec
mov
mov
mov
push
sbb
or
cli
js
int3
cmpsb
or
cli
sub
fists
imul
test
xor
cmp
lds
faddp
sbb
inc
popa
push
jae
jmp
mov
int
mov
push
fisubrs
cmp
dec
pop
insb
rcr
inc
inc
xchg
xchg
and
fsubs
inc
add
dec
and
add
lret
test
mov
outsb
fwait
test
add
mov
and
ret
bound
mulb
outsb
insb
push
or
jnp
mov
jb
test
cmpsl
push
mov
or
mov
movsb
and
test
test
mov
mov
inc
loop
out
jmp
mov
lods
jmp
xor
xchg
out
cld
mov
add
stos
mov
pop
jb
stc
stos
xor
out
sbb
ficomps
xchg
or
icebp
cli
pusha
lahf
jle
lahf
cmp
pop
adc
aam
fmuls
ds
jp
test
mov
jge
je
mov
inc
sbb
ljmp
out
stos
lcall
add
js
int3
sbb
jge
cltd
int
stos
aam
sbb
dec
andl
out
push
mov
cmp
dec
pop
pop
sarl
pop
push
outsb
xchg
fisttps
adc
in
push
pushf
icebp
loopne
push
lds
data16
outsl
movhps
lret
pop
xchg
shl
mov
sbb
sbb
sbb
stos
std
nop
cmpsb
call
inc
inc
mov
mov
mov
mov
cwtl
div
fisubs
xor
lea
and
mov
xlat
stc
dec
test
stos
mov
jp
mov
pop
mov
pop
jp
or
and
cmp
mov
jno
add
fcoms
push
cmpsl
jle
inc
inc
test
in
popf
test
das
jbe
sub
inc
fstpt
sub
icebp
add
es
add
testl
fs
cld
inc
ret
mov
sbb
push
mov
scas
leave
cmc
int3
cwtl
rorb
scas
or
popf
mov
sar
pushf
pop
jle
jno
xor
rol
ss
sub
xorl
jge
jmp
cltd
test
adc
out
ss
mov
inc
lods
pop
ja
jmp
insb
pop
dec
cmp
imulb
ljmp
sub
pop
jne
out
fwait
or
out
out
push
jmp
movsl
cs
sbb
jmp
rcr
mov
xor
cmp
insb
xchg
sub
scas
or
push
sbb
fldcw
push
xor
in
mov
inc
imul
pop
add
stos
je
test
push
fstps
pushf
mov
cmpsl
in
and
mov
lock
mov
popf
imul
pop
loop
lahf
jae
mov
pop
xor
push
jne
or
inc
xchg
pop
pop
in
cmp
push
mov
or
and
jle
fwait
sub
in
and
sub
sub
js
hlt
aaa
xchg
icebp
mov
mov
push
pop
cmpsl
mov
adc
movsb
lock
push
sahf
dec
lcall
in
imul
imul
jl
lock
js
pushl
test
sub
push
jns
xchg
cmp
or
jp
jns
sub
mov
fnstsw
subl
movsb
lock
dec
and
ret
jne
adc
inc
sub
les
sbb
insl
jne
test
lret
xlat
mov
or
lods
scas
call
inc
jb
cmp
jno
idiv
mov
lret
sahf
gs
mulb
inc
popf
mov
int
xor
in
insb
xchg
push
ss
outsl
fwait
sbb
fistpll
test
jne
push
add
ret
cmc
bound
mov
dec
cmp
jle
xchg
fadds
sbb
shrl
and
sub
dec
out
push
pop
mov
js
jl
jae
ljmp
adc
lds
cmpsl
out
add
mov
bound
inc
clc
ja
cmp
mov
les
mov
jb
add
inc
cmp
lcall
inc
cwtl
sbb
push
ret
sbb
xchg
adc
mov
imul
adc
outsl
push
xchg
adc
xchg
lahf
xor
pusha
adc
push
xchg
push
cltd
sbb
adc
stos
nop
and
mov
notb
aas
push
or
push
push
enter
stc
les
dec
lea
lret
mov
jg
add
dec
jge
in
insl
xchg
lahf
test
scas
loopne
test
cld
in
ret
out
sbb
sub
mov
stc
in
mov
pop
out
pushf
inc
roll
sbb
rcrl
fcompl
xor
shlb
push
call
notb
push
repz
jbe
inc
scas
add
dec
ds
pop
test
mov
ljmp
inc
mov
or
and
imul
neg
out
push
mov
call
sbbl
pusha
and
and
rcr
cmp
hlt
in
js
sub
cmpsb
fdivs
test
cwtl
and
dec
xlat
loopne
jmp
jp
jne
dec
xchg
jb
mov
cmp
js
xchg
xchg
cwtl
mov
inc
cmp
aas
xor
xor
push
pop
add
stos
pop
and
lock
inc
pop
or
lret
orb
out
xlat
xor
jp
mov
jp
cmp
mov
dec
inc
lret
out
adc
stc
inc
or
js
and
ja
mov
testl
lods
jno
popa
pop
and
clc
cmc
or
push
dec
lahf
hlt
xchg
adcb
cmp
test
sbb
inc
mov
lahf
inc
inc
sbb
fistl
mov
and
fs
bound
xchg
ja
incb
andl
js
cld
repz
adc
adc
test
push
loop
lods
clc
mov
test
and
lcall
icebp
pop
lods
xor
xchg
outsl
pusha
repz
and
insb
fsubp
and
clc
neg
xchg
push
push
stc
movsb
xchg
mov
fwait
cli
and
sub
adcl
das
push
cmc
mov
mov
ljmp
xchg
sarb
hlt
sub
push
jns
xchg
sub
push
daa
and
sbb
sub
ret
add
mov
not
pop
adc
imul
aaa
dec
fwait
pop
scas
xor
jecxz
pop
outsb
fdivs
lods
cs
xchg
ret
or
dec
insb
pop
das
xchg
repz
jecxz
ret
xchg
loop
movsl
inc
jns
das
nop
xor
sub
addb
rol
sbbl
dec
clc
push
or
dec
fcmove
jb
in
stos
lods
hlt
xchg
inc
loope
mov
rcl
pop
cld
je
xchg
jge
test
stos
sub
stos
pop
jne
rcrl
cmpb
cmp
jge
dec
mov
dec
bound
into
add
pop
rolb
and
out
xchg
addr16
out
std
and
out
lcall
inc
popf
gs
ja
mov
cltd
push
or
call
mov
xchg
add
ficompl
imul
pop
jbe
movsl
add
jnp
push
notb
sar
xor
sbb
cli
dec
push
xor
cmp
popf
mov
inc
lea
cmp
pop
in
rcrl
loope
hlt
xor
loope
stos
xchg
aaa
cld
movsb
sbb
aad
out
sahf
sub
fwait
xchg
lods
rcrb
outsl
int
out
jbe
xchg
cwtl
insl
sbbl
cwtl
inc
add
test
inc
adc
jns
cmp
jle
pusha
lahf
scas
push
jbe
test
jmp
dec
and
push
jo
jae
jno
scas
ja
xchg
icebp
pop
adc
jnp
inc
cpuid
push
xchg
pusha
jne
in
adc
aam
cmp
fcmovnbe
add
je
sub
andl
sbb
repz
xor
fimuls
in
xchg
andl
daa
rclb
mov
std
mov
mov
out
or
inc
pop
ja
jo
insb
cmp
inc
sbb
cmp
repz
sbb
sub
mov
je
lods
pop
push
push
pop
ss
sbb
outsl
subl
dec
xchg
mov
jae
pop
movsl
mov
xchg
test
movsb
enter
imul
mov
mov
xchg
adc
lods
push
push
loope
mov
xlat
pop
push
inc
testl
and
sub
ffree
jecxz
rcrl
insb
or
fwait
imul
data16
shl
sbb
jbe
sbb
aad
xlat
out
dec
inc
out
inc
in
sbb
ret
rorl
jge
aam
jmp
loop
lods
clc
adc
xchg
push
inc
sub
and
fucomp
push
icebp
shr
cmp
push
cmpsl
dec
lret
cwtl
adc
adc
xchg
fistps
daa
jbe
add
into
inc
pusha
in
fstps
ror
int3
cmp
sbb
popf
jbe
sub
sub
xor
in
test
mov
nop
sbb
rcrb
js
jg
jne
aad
movd
in
aam
push
stos
imul
daa
and
pop
lret
pop
in
xlat
xor
gs
addr16
push
xorl
add
repz
xchg
fmull
stc
sub
or
fstl
imul
jecxz
clc
sbb
jecxz
cmp
dec
mov
xchg
aam
xor
clc
inc
shrb
xor
jle
mov
add
push
xchg
mov
daa
pop
pushf
clc
mov
fimull
pop
test
push
rolb
das
dec
adcl
outsl
stos
push
adc
movsl
jge
xor
push
mov
in
push
pushf
enter
into
popf
pop
cmc
push
das
mov
call
and
mov
stos
insb
xchg
push
mov
push
xor
xor
fisttpll
in
dec
pushf
push
mov
inc
cmp
and
aas
sbb
aad
sbb
xchg
iret
and
or
sub
test
leave
sahf
push
xchg
adc
add
push
ret
mov
jmp
fisttpll
aaa
jne
xlat
or
call
iret
adc
mov
cmp
enter
jmp
into
test
and
sbb
mov
xchg
pop
mov
mov
out
jmp
pusha
movsl
aad
movsl
dec
xchg
fsubp
fldt
mov
or
pop
lahf
add
gs
mov
mov
cmpb
or
mov
test
xchg
cmc
add
push
sub
mov
add
stos
mov
jns
mov
cmp
and
xor
cli
mov
loopne
fwait
mov
dec
cmpsb
xchg
push
fadds
fs
outsb
adc
pop
jno
or
jl
outsb
test
int3
jp
jnp
mov
insl
sbb
sbb
daa
loop
aas
pushf
push
push
push
sahf
push
fstl
shl
jnp
xor
mov
jno
mov
ds
bound
dec
dec
cld
insb
es
mov
andb
push
xchg
adc
add
fisttpll
jecxz
xor
push
std
mov
lods
add
xchg
ret
cmp
ret
push
mov
or
gs
dec
outsb
and
sub
cwtl
or
inc
lock
mov
imul
sbb
jns
mov
lock
ja
cmp
pop
sub
xchg
aam
push
insb
into
aaa
pop
aaa
out
add
and
mov
jo
jmp
mov
dec
repz
nop
mov
cmpsb
test
xor
jecxz
ja
out
cld
loopne
xchg
or
jns
inc
cmp
inc
shrl
inc
jge
int3
sbbl
cmp
out
out
cmp
sub
stc
popf
insl
andl
jp
adc
add
xor
cmp
sbb
push
cld
imul
loopne
push
jg
adc
inc
add
adc
inc
loop
fnsave
shrb
mov
sub
lds
push
mov
es
js
shll
gs
sub
sub
sub
out
and
sub
aas
dec
daa
dec
not
mov
jo
pop
fwait
lretw
mov
lret
add
push
cs
stc
int3
cmp
add
jmp
push
dec
mov
sub
xor
pop
sti
cs
add
sub
mov
daa
and
fs
ljmp
push
insb
adc
jae
inc
fidivrs
mov
scas
es
sbb
xor
sbb
mov
sarb
mov
enter
xor
ja
loope
std
cmp
xor
shl
cmp
lcall
ds
insl
add
push
sti
insl
jbe
xor
ss
movsb
adc
or
notb
cld
add
ljmp
xlat
pop
jecxz
loop
aaa
loope
cwtl
ret
mov
aas
mov
and
cs
lcall
pop
xchg
sub
jp
pop
push
imul
int
sarb
decb
sub
sub
adc
mov
aas
push
repz
popf
aad
and
in
pop
ja
pop
ss
xchg
popf
scas
sub
or
ss
aaa
fsts
notl
xchg
lahf
jp
js
pop
rcrl
jne
push
and
out
jg
adc
leave
cmp
jo
sbb
jecxz
inc
mov
mov
fiadds
dec
jmp
lcall
mov
add
pop
lcall
adc
xchg
sbb
dec
out
xor
subl
jle
addb
jge
xorl
pop
arpl
clc
or
cs
hlt
push
hlt
mov
push
mov
insl
cmp
sarb
sar
mov
jnp
aaa
repnz
ret
ja
jecxz
adc
and
and
push
jl
sti
inc
frstor
ret
cs
dec
iret
pop
mov
inc
loopne
and
inc
dec
mov
mov
ss
insl
jns
or
add
adc
fisubrs
daa
leave
data16
mov
repz
sub
mov
call
movsl
add
inc
sbbb
xor
xchg
decb
mov
ds
jmp
ret
cmp
daa
sub
out
out
mov
pop
mov
pop
iret
sub
test
push
lahf
pop
int
loopne
aam
and
data16
or
xchg
mov
in
push
mov
xchg
mov
lahf
nop
jl
out
out
jae
push
fisttpll
pop
test
jecxz
js
insb
lock
and
stos
call
push
out
xchg
das
xchg
addr16
and
pop
pop
das
bound
sub
aam
inc
dec
cmp
gs
test
cs
ret
cmp
es
cwtl
cmp
or
dec
mov
mov
push
adc
push
aam
shll
jle
xchg
xor
xchg
and
aad
test
mov
add
subl
xor
inc
add
outsl
mov
xor
mov
lret
push
lret
lds
repz
sbbl
pop
pushf
and
inc
dec
rol
dec
pop
fbstp
add
lcall
rcll
xor
lds
leave
inc
sub
popf
fucomi
hlt
lcall
jns
cmpsl
dec
loopne
push
sahf
ja
xchg
sbb
leave
inc
test
je
xchg
dec
icebp
inc
push
mov
scas
xor
mov
inc
sub
xchg
and
jge
outsl
lea
daa
rol
daa
jnp
call
or
inc
bound
es
ret
mov
mov
sbb
inc
dec
jg
lcall
pop
sub
xor
push
cmp
jg
stos
mov
jbe
pop
pop
std
setl
jae
rcrl
inc
mov
cmp
leave
pop
or
in
fcmovnbe
ret
lcall
cmp
fmull
jns
out
fdivrs
xor
repz
iret
repnz
fldenv
cmp
sti
repz
outsb
pop
shr
dec
mov
jl
adc
mov
popa
cli
shrb
pusha
mov
mov
adc
outsl
cltd
arpl
or
mov
pushf
xchg
pushf
push
mov
popa
mov
int3
xchg
mov
mov
sub
cmp
or
mov
int3
add
out
inc
and
sub
test
mov
std
in
in
push
cmpsl
cmp
or
cld
out
pop
js
jne
js
push
sub
mov
int
int
lock
adc
outsl
cmpsb
imull
sbb
leave
add
mov
mov
sbb
jae
stos
icebp
mov
adc
push
in
rcl
fcmovne
push
pop
dec
inc
imul
pusha
or
mov
push
lods
sub
mov
repnz
mov
push
xor
or
cmc
in
loopne
aad
decb
push
or
jbe
adc
imul
jns
jg
popa
mov
xchg
incl
sbb
cmpsb
add
fs
das
fstpt
in
cld
dec
popf
insl
in
pop
lock
insl
adc
sbb
imul
rcrl
out
xlat
cld
xchg
mov
sub
mov
mov
and
out
cltd
cmp
mov
cld
gs
cmp
mov
sbb
lds
xchg
scas
insl
cltd
js
aas
loope
int3
in
hlt
cmp
xor
notb
lods
pusha
insl
ret
pop
mov
adc
xchg
mov
and
shll
jge
mov
pop
mov
xchg
xchg
sub
loope
adc
jbe
inc
out
add
xchg
mov
lea
cwtl
filds
sbb
les
shll
ret
push
pop
push
jle
jbe
sub
fnsave
pusha
add
repz
pop
test
pop
mov
fisubrs
add
mov
popl
pusha
push
mov
push
mov
push
sbb
adc
mov
andl
not
jp
out
or
pop
dec
scas
jp
lods
fwait
insb
mov
dec
mov
repnz
es
xor
add
dec
out
add
pop
xchg
sub
hlt
add
pop
movb
icebp
xchg
cli
cmp
lock
pop
imul
add
mov
fs
cmp
lea
daa
cwtl
jns
jno
adc
stos
sahf
jnp
psubsb
xchg
imul
in
dec
push
sbb
shl
adc
rclb
cltd
pop
fildl
push
lret
push
arpl
sbb
rolb
jb
repnz
mov
mov
adc
sbb
sarb
mov
pop
xchg
jl
add
mov
xor
sbb
pop
filds
pushf
jno
inc
or
out
and
jecxz
jl
xchg
out
adc
pop
test
fidivl
cmpb
scas
mov
inc
sub
cmp
push
adc
push
xchg
jecxz
push
and
fildll
arpl
dec
mov
scas
cmc
ss
jb
pop
lcall
sbb
xor
fnsave
fidivrs
or
daa
in
xchg
pop
push
insl
or
jbe
setbe
shrl
into
push
lret
fldl
testb
push
pop
pusha
cmpsb
dec
stc
jbe
stos
out
ret
mov
pusha
fisttpll
sbb
sarl
mov
popf
mov
cmc
xchg
sbb
cmp
and
xor
rcl
mov
scas
push
and
sbb
inc
cld
xor
cwtl
sbb
pop
hlt
lods
add
or
iret
pop
push
lods
push
cwtl
add
orb
cmpsl
scas
int3
fcmovu
repnz
out
lret
subb
mov
out
scas
cmpsw
adc
div
hlt
sbb
icebp
scas
lcall
aas
outsl
adc
repz
popf
mov
icebp
fwait
pusha
ja
mov
jne
loope
xor
sbb
pop
jns
insb
aas
jmp
iret
cwtl
ret
sbb
enter
mul
les
arpl
and
or
shlb
adc
subb
dec
or
dec
adc
repnz
test
sub
cmp
or
and
rcrb
cli
out
popa
jecxz
loopne
sub
std
jns
xchg
int3
cmpsb
push
popa
jo
sub
ret
adc
or
dec
push
out
mov
add
push
cmpb
sbbb
idivb
pop
outsl
fildll
cmc
inc
dec
or
addr16
es
fxch
mov
push
sarl
inc
add
scas
add
mov
inc
data16
sarb
clc
ret
std
sbb
cli
out
lret
lods
outsl
jecxz
je
aam
dec
dec
pop
ficoml
or
lock
or
cld
mov
jo
adcb
daa
nop
ret
cwtl
lret
mov
cmp
test
loop
lock
inc
aad
sahf
xchg
jecxz
idiv
xchg
stos
cmp
mov
inc
sti
push
sub
mov
xlat
and
xor
int
das
mov
dec
test
nop
push
and
pushf
test
sub
cwtl
or
sub
mov
fcoml
arpl
in
jb
into
imul
lcall
xchg
dec
dec
or
sbb
inc
sub
test
ljmp
xchg
pop
sub
lahf
xchg
jg
mov
xchg
int
ret
dec
pop
fsubr
sbb
dec
jecxz
jbe
sbb
jns
mov
stc
aad
dec
mov
jnp
clc
or
push
cmpsb
mov
cld
mov
adcb
int3
cmp
repz
inc
or
cmp
mov
mov
mov
xor
fdivrl
cmc
dec
je
out
mov
ja
ret
xchg
roll
daa
orl
mov
cmp
mov
mov
mov
pop
dec
dec
in
pop
stos
jae
aaa
lea
fcoml
mov
push
lret
daa
sub
lods
mov
arpl
arpl
jmp
roll
ja
push
sbb
xlat
inc
inc
jnp
or
popf
push
jmp
mov
sbb
pop
adc
dec
mov
inc
mov
call
iret
dec
aam
adc
mov
jbe
or
in
xor
xor
stos
test
cs
mov
push
cmp
insl
int3
test
dec
push
inc
mov
sbb
sti
xor
mov
mov
js
pop
dec
sub
ss
push
cmp
mov
push
ss
fprem
inc
cmpsb
pop
add
push
fs
ja
cmp
addr16
xchg
sbb
dec
icebp
bound
xchg
scas
mov
aad
insb
cli
mov
insb
mov
jmp
and
inc
ljmp
mov
testl
cmp
dec
ret
aas
and
imul
or
mov
js
sti
cmp
mov
hlt
sub
sbb
imul
lret
pop
mov
loope
xor
fisttpll
lock
cltd
loopne
mov
xor
fnstsw
sahf
jl
pop
aas
sbb
aas
out
stos
cs
mov
mov
mov
push
aas
jo
popf
inc
jnp
mov
mov
and
loop
int
test
lock
mov
loope
std
subb
jmp
ret
out
xor
outsb
mov
pop
mov
das
in
lock
addr16
mov
jl
xor
jl
add
imul
outsl
push
movsl
imul
push
insb
mov
xlat
lcall
xchg
rcll
lods
insb
jle
xchg
and
fcmovu
adc
or
jle
xor
cmp
push
sbb
clc
ja
cmp
pop
inc
out
push
mov
lods
or
push
dec
cwtl
mov
jl
jns
push
push
inc
movb
lods
scas
xorb
mov
cmp
and
sti
sahf
mov
pop
inc
pop
imull
push
mov
pop
jno
mov
jno
mov
rclb
ljmp
fsubp
cmp
and
push
ss
ja
and
orl
adc
daa
outsb
lea
adc
push
cmp
pop
mov
and
push
adc
lock
and
pop
out
pop
int3
arpl
int
arpl
xor
imul
in
test
inc
mov
jbe
std
daa
mov
rorl
iret
lret
mov
sub
outsb
shll
mov
jl
inc
popa
fsubs
xor
sbb
add
out
inc
inc
cmp
movsb
sub
cmp
jb
sbb
jmp
jmp
and
mov
add
sub
stos
inc
fdivr
ljmp
mov
mov
xchg
fisubl
mov
mov
out
movsl
jmp
sub
adc
insb
pcmpgtw
in
call
stos
mov
cwtl
mov
inc
cs
int
xor
fs
xchg
xchg
dec
mov
fucom
push
jno
stos
test
lret
fwait
clc
popa
in
shll
sbb
div
scas
shl
into
insl
mov
js
stos
mov
pop
mov
dec
popf
push
push
fldt
and
stc
push
testb
mov
mov
nop
pop
cs
int3
jo
mul
and
xor
mov
cmp
and
adc
xor
or
clc
lcall
sbb
loop
add
pop
jno
jnp
ds
pushl
pop
addl
imul
scas
lret
add
test
adc
push
loopne
mov
jmp
jbe
jne
lcall
dec
call
jnp
stos
xchg
sete
repz
sub
mov
and
movsb
outsb
pop
sbb
cmp
or
fidivl
push
mov
xchg
fnstcw
iret
mov
hlt
push
cmpsb
movsb
sbb
shl
subb
bound
testb
data16
pop
stos
aad
loopne
adc
pop
stc
mov
xor
mov
cmp
push
popa
fldt
sub
push
xor
jp
rcrb
imul
shll
pop
push
or
mov
mov
sarb
movb
xchg
lret
enter
in
adc
pop
dec
or
loope
fnstsw
dec
xchg
push
imul
pop
inc
daa
mov
inc
shll
repnz
xchg
ljmp
jle
incb
adc
fstpl
push
in
ret
sbb
push
cmp
xchg
outsl
aaa
push
jbe,pt
das
dec
jge
test
mov
xchg
xchg
test
rolb
fcoms
arpl
add
dec
and
loopne
cmp
mov
dec
lahf
or
dec
cmpsl
sbb
xor
jae
xor
ret
fst
mov
push
mov
or
roll
rcrl
dec
mov
data16
fldt
xchg
and
stos
add
dec
dec
outsl
add
out
sub
push
mov
jmp
xor
jl
push
push
popf
mov
pop
hlt
cmpsl
call
mov
jne
arpl
out
aad
mov
sbb
mov
sti
jb
mov
cmp
xchg
and
jns
cmp
dec
xor
xor
or
pop
pop
loop
push
fs
pop
filds
rcll
movsb
inc
mov
fldcw
or
loope
ja
xchg
inc
push
dec
pop
xchg
scas
in
push
bound
out
aam
push
add
xchg
pop
in
aad
scas
cmp
mov
clc
scas
lcall
xchg
xchg
out
cmp
shll
push
jnp
inc
add
push
pop
scas
inc
ljmp
arpl
and
sbb
arpl
jno
insl
cmpsb
xchg
or
sti
addr16
add
pushf
jecxz
mov
dec
xchg
cmpsl
lds
mov
movsb
dec
dec
add
cmp
pop
inc
lea
jp
cs
inc
sbb
cwtl
aaa
int3
pop
jo
sahf
enter
sub
and
mov
sarb
loope
inc
jg
mov
sub
cmpsl
cltd
sbb
pop
pop
out
enter
leave
sahf
test
out
das
jge
sub
mulb
mov
lcall
aam
inc
faddl
ror
push
push
jmp
or
jb
xchg
aad
pop
icebp
inc
mov
dec
pop
or
sbb
xchg
sbb
mov
fistpll
xchg
adc
arpl
arpl
or
lcall
xchg
in
sub
sti
jmp
out
lods
lcall
data16
jae,pt
fistpl
or
repz
sub
cmc
mov
fldt
pop
insl
bound
mov
or
cwtl
mov
rolb
adc
and
or
pop
mov
mov
pusha
push
aaa
adc
aad
stos
imul
sub
insl
dec
adc
ss
cmpsl
cmp
mov
or
aam
cwtl
add
mov
in
xchg
add
sti
ja
dec
inc
das
nop
ja
popa
xchg
dec
or
lret
js
pushf
push
rep
inc
and
out
sti
jle
mov
xchg
outsb
and
xor
sbb
xchg
jle
mov
stos
or
jb
iret
and
jecxz
cmp
sub
and
rorb
or
sbbl
ret
cwtl
lret
push
sahf
int
rorl
pop
dec
fldt
xor
cmc
aas
mov
movsb
fisttps
dec
fnstenv
jecxz
pop
int3
and
mov
push
or
loope
xor
cmp
fwait
fwait
into
nop
dec
xchg
btc
cwtl
imul
out
das
jg
fsts
push
aas
loope
xor
fcmovne
fdivr
sub
jmp
repnz
imul
cmp
pop
sbb
cmp
daa
lods
hlt
jns
and
imul
cmpsb
loop
subb
or
aas
xchg
jne
call
xchg
adc
out
ds
lea
adc
gs
jl
xor
les
lahf
addl
cld
mov
insb
cmp
xchg
cmp
inc
sub
inc
mov
push
mov
adc
push
jnp
imul
adc
repnz
sbb
add
enter
sbb
pop
mov
xor
pop
daa
cmp
or
xchg
xchg
and
mov
sarl
mov
dec
adc
ret
or
adc
adc
mov
pop
mov
and
das
mov
cld
cwtl
pop
pop
pop
cwtl
push
out
andb
add
mov
xchg
hlt
dec
insl
imul
push
push
imul
shll
cmp
ret
mov
or
or
adc
fsts
inc
fucomip
adc
fistpll
push
add
mov
lahf
repnz
mov
mov
repz
or
pop
xor
cwtl
cs
mov
outsl
pop
imulb
inc
inc
in
mov
push
cmc
dec
aam
aaa
lods
jecxz
add
xchg
lods
cwtl
dec
aas
xor
inc
jg
fldt
dec
jge
jne
inc
pop
add
into
fnstenv
add
inc
jo
mov
test
es
push
adc
add
mov
cwtl
vmwrite
out
test
mov
pop
subb
test
out
std
fildll
jns
mov
andb
aam
js
and
mov
jbe
xchg
mov
sarb
mov
ss
setbe
and
out
jbe
pop
call
pop
push
aaa
test
mov
jle
gs
out
jae
shrl
push
pusha
cmp
adc
jl
mov
out
inc
shll
enter
loopne
movsl
cmpsb
inc
add
movsl
sti
add
cld
insl
pop
mov
in
int
ret
cmp
test
loop
rcll
fisttps
in
xchg
or
test
out
aas
jne
sbb
cmp
repnz
adc
jl
add
or
sub
scas
icebp
out
pop
ds
icebp
or
idivl
fwait
inc
pop
cs
lods
bound
clc
outsb
pop
or
sbb
mov
pop
les
and
stos
dec
subl
xor
js
aam
sub
imul
push
cwtl
jge
and
std
mov
pop
lds
cmp
xor
sbb
fidivs
push
push
inc
lea
in
out
mov
mov
mov
mov
es
repz
jne
es
lahf
mov
ljmp
mov
and
loope
mov
xchg
cli
cmp
shrb
iret
mov
mov
subl
les
jno
inc
push
dec
test
cli
rorb
xor
push
aas
jno
push
fisttpll
std
int
lods
pop
iret
mov
push
pop
mov
jge
movsb
mov
xchg
xlat
jae
mov
xor
sarb
das
mov
lds
negb
scas
cmp
add
pop
xchg
lock
daa
aas
js
pop
clc
stc
cmpsb
push
ljmp
movsb
inc
xchg
pop
push
jmp
mov
pop
mov
lock
sub
mov
hlt
mov
xor
xchg
imul
xchg
cmc
lods
push
sbbl
push
test
cmp
pop
loopne
mov
mov
pop
adc
orb
and
test
or
mov
in
xor
sub
mov
loopne
add
pop
pop
out
ja
pusha
outsl
test
lahf
cmpsb
xchg
xchg
add
mov
add
mov
iret
jb
fcomp
mov
mov
xor
or
mov
dec
int
and
sahf
es
stos
add
adc
insb
pushf
les
loop
gs
push
loopne
lahf
or
pop
das
stos
mov
dec
dec
xor
pop
push
xor
mov
shrl
outsl
das
js
pop
cmc
add
loop
cmp
out
and
xor
mov
mov
push
sar
arpl
hlt
les
mov
or
stos
jne
adc
and
jnp
inc
xor
inc
enter
push
mov
rol
cli
cmp
inc
ja
leave
mov
movl
pop
stos
in
mov
ror
mov
movsl
aaa
xchg
sti
and
xchg
aam
std
out
jb
pop
iret
push
sub
dec
push
ja
or
lea
imul
or
xchg
add
mov
mov
adc
lock
fs
mov
fisubs
inc
mov
mov
js
rcl
fmuls
arpl
xor
add
inc
adc
fldln2
cmc
js
sbb
mov
stos
xor
xor
pop
stos
pop
pop
stc
add
ss
push
outsb
mov
push
push
movsl
into
jecxz
jmp
bound
gs
pop
hlt
lods
mov
out
mov
mov
mov
push
xchg
xor
mov
fincstp
push
add
or
adc
jle
dec
sbb
popf
xchg
pop
shlb
int
data16
test
xor
cmp
or
mov
rcrl
xchg
mov
cmp
mov
int3
mov
add
sub
sub
shll
lds
aam
in
fcoms
fadd
xor
leave
lahf
sbb
jle
cmp
add
cmpl
inc
xchg
dec
les
jle
jle
pop
and
and
ja
jge
adc
or
lock
or
cwtl
dec
out
ljmp
addl
xor
mov
xchg
mov
xor
add
in
cmp
lods
add
lea
pop
ds
faddp
sbb
push
sbb
push
sti
pop
xor
inc
cmp
and
sub
and
pop
mov
mov
mov
cmc
fcomip
bound
push
mov
sub
hlt
enter
sbb
mov
aas
add
mov
sahf
nop
fstpl
or
rcll
push
mov
mov
lods
push
cmp
jl
daa
mov
inc
fldcw
xchg
mov
in
and
sub
sub
mov
mov
jo
repz
dec
stos
ja
push
mov
test
pop
cmp
jae
lret
bound
xchg
dec
mov
leave
mov
in
andb
hlt
int
fiaddl
push
or
mov
imul
inc
ret
sbb
or
pop
test
push
push
mov
fs
jg
mov
mov
popf
mov
add
xor
mov
adc
jns
sbb
outsl
sub
addb
inc
in
in
mov
cmpsl
inc
pop
fldenv
add
inc
jle
inc
push
xor
adc
inc
xchg
fcoms
pop
jl
jle
xchg
jae
ffree
mov
std
clc
scas
push
xlat
xchg
rolb
and
inc
ffree
xor
dec
mov
and
les
shll
loopne
mov
push
sarl
outsb
repnz
fbld
int3
jb
mov
cli
insb
inc
ret
mov
jge
push
mov
ror
xchg
xchg
cli
sti
addl
mov
pop
jg
enter
or
outsb
fldenv
lock
add
notl
dec
jae
xlat
add
push
xchg
or
push
test
sub
jmp
mov
xchg
xor
sarl
pop
stos
cwtl
add
and
in
sbb
add
enter
enter
push
push
pop
fbstp
dec
push
mov
mov
inc
into
push
test
lea
mov
jno
pop
jns
push
xorb
iret
inc
add
mov
test
shll
xchg
rolb
lods
push
test
lret
mov
xchg
xchg
sbb
icebp
jbe
ret
mov
fldl
daa
lahf
test
das
fwait
mov
inc
lds
sbb
popf
xchg
fwait
inc
call
aaa
insl
sbb
mov
dec
xor
xor
ljmp
das
rclb
repz
les
data16
add
lahf
cmp
cmp
stc
ror
clc
mov
adc
stos
aaa
or
sar
mov
pop
data16
pop
dec
sbb
cmpl
push
loop
sub
rol
movsb
loopne
pop
sbb
iret
mov
cmp
xor
adc
xor
insb
fdiv
das
aaa
jb
push
cli
pushf
adc
ret
push
jmp
std
xchg
adc
ret
in
clc
add
xor
inc
mov
jg
mov
dec
insb
insb
or
ljmp
xchg
es
movsb
push
mov
cmp
sahf
mov
sbb
pop
sub
dec
cwtl
icebp
xorl
fisubrs
shrb
push
lcall
mov
sub
icebp
cs
pushf
es
xor
sti
mov
lds
xor
sub
push
mov
out
jnp
or
loopne
lret
insb
add
and
jge
xor
dec
sub
addr16
test
pxor
std
imul
push
dec
sbb
push
or
mov
dec
ficompl
or
repnz
xchg
push
in
les
aad
adcb
addl
sbbb
cld
dec
mov
pop
mov
mov
cmp
popf
sub
sub
cmpsb
mov
pop
outsb
sbb
pop
insb
shl
cs
les
xchg
inc
int
es
push
cmc
pusha
lds
les
sbb
push
leave
lods
mov
pop
xor
fimuls
or
insl
pop
xchg
test
fnstcw
bound
jne
lock
push
int3
and
jmp
xchg
popa
inc
mov
xor
cwtl
adc
test
sahf
adc
leave
and
mov
pop
xchg
aam
fcoms
or
xchg
subb
adc
sub
cmp
jns
mov
push
mov
push
add
sbb
pop
jl
aam
push
adc
andb
rorb
out
jo
xchg
adc
mov
mov
mov
or
insl
jae
repz
or
lods
or
aam
ret
enter
push
or
aaa
lahf
mov
jl
fcmovne
lcall
push
inc
movsl
movsw
xor
xor
leave
or
sar
xchg
sub
rorl
push
imul
pop
sahf
or
mov
test
fidivrs
in
ss
mov
inc
mov
repz
sub
push
repz
fildll
mov
leave
rcll
add
fistpl
sbb
adc
ss
mov
jle
je
pop
or
inc
ret
sbb
insb
pop
mov
lahf
push
dec
std
outsl
add
cmpsb
in
fisttpll
hlt
cltd
add
xchg
test
pop
fwait
lods
inc
int
add
sub
cmp
aas
pop
inc
cmpsl
jg
xchg
ret
cs
xchg
push
add
cltd
sub
push
mov
inc
scas
push
sub
dec
lcall
lock
pop
repnz
push
xor
mov
std
pop
aas
pop
shrl
popa
jo
and
jmp
repz
mov
push
and
xchg
cmp
out
test
add
mov
loope
sbb
mov
inc
add
push
jp
fmuls
xchg
das
bound
and
fisubrs
ds
popf
dec
or
fisttpl
sbb
jle
pusha
sbb
fs
sbb
xor
shll
push
mov
and
inc
push
cmp
data16
push
pop
mov
mov
or
gs
aas
xchg
lock
jbe
stc
push
fs
dec
imul
lret
push
mov
es
int3
lods
mov
fstl
inc
shrl
jno
ret
xor
pop
mov
jns
out
cmp
stc
mov
and
cmp
mov
jae
fisttps
aas
mov
adcb
iret
loopne
mov
pop
sub
lock
and
sbb
inc
leave
cltd
jmp
shr
dec
test
mov
clc
movsb
nop
pop
mov
xchg
xor
add
rorl
sub
jle
aam
xchg
aas
sbb
mov
pop
dec
sub
icebp
sti
adc
in
and
icebp
push
pop
ds
xchg
cmpsl
pop
push
xchg
imul
adc
mov
xchg
xchg
mov
loop
mov
ds
fiaddl
pop
mov
xor
mov
daa
and
cmp
es
mov
push
int3
or
lahf
std
rorl
in
ljmp
rclb
or
push
push
test
xor
push
push
pushf
hlt
iret
arpl
or
data16
jmp
inc
and
mov
mov
gs
jle
aad
aas
mov
lds
aas
jge
mov
inc
sbb
cmp
jle
outsb
sarl
lea
mov
pop
cmp
fnstsw
push
push
dec
jns
into
cmp
das
cmp
xchg
cmpsb
push
jb
xchg
mov
clc
sub
sbb
in
mov
div
lfs
jmp
inc
stos
lock
push
push
inc
mov
push
rorb
lds
inc
lds
imul
xor
les
les
fadd
bnd
imul
sub
enter
sub
movnti
out
aam
push
in
std
jle
fldl
int
push
pop
lea
sub
pop
sbb
cwtl
lret
bound
loop
dec
jle
xor
jbe
xchg
pop
cmp
sbb
xchg
sbb
mov
in
add
sahf
imul
stos
aam
jnp
inc
pop
push
cmp
dec
cs
push
stos
jbe
insl
stos
mov
xlat
mov
jle
sub
hlt
jg
subl
icebp
fstpl
std
dec
xor
xlat
rcrl
push
inc
adc
mov
outsl
dec
sub
push
leave
sub
popf
adc
lods
xchg
ss
mov
inc
movsl
fisubrl
sarb
mov
fildll
pop
push
adc
sbb
jp
pop
adc
lods
dec
jecxz
imul
adcb
xor
aad
push
sub
sub
out
cltd
rcll
shll
fbld
pop
sbb
pushf
jne
and
lcall
icebp
jb
cli
mov
lcall
mov
aaa
ret
icebp
sbb
lret
lods
push
mov
ljmp
mov
inc
adc
push
sub
sbb
adc
aaa
mov
sub
fwait
inc
mov
mov
xlat
add
stc
add
push
xor
in
adcb
int3
adc
cmp
pop
push
jb
inc
cmp
mov
jp
sub
les
leave
jnp
lods
xor
shll
mov
int3
adcb
out
jge
fstl
mov
sub
jl
jge
xchg
xor
iret
dec
js
sbb
lret
shll
movsl
out
lret
fnsave
les
nop
fbld
hlt
mov
jmp
mov
das
sub
subl
xchg
test
mov
movsb
sti
arpl
ljmp
jmp
xor
cmpb
rorb
out
inc
xchg
adc
dec
shrb
sahf
jnp
lret
repnz
dec
sbb
in
dec
jb,pt
dec
ret
shrb
mov
cmpsb
inc
sbb
fcmovne
hlt
or
mov
add
mov
test
inc
mov
fstpl
xchg
dec
and
cmp
lcall
fimull
es
ds
repnz
in
inc
pusha
mov
jg
jmpw
cwtl
or
fnstsw
out
inc
out
pushf
fsubrp
add
push
mov
mov
fldl
sti
ret
jns
cli
icebp
push
push
mov
jae
inc
adc
mov
pop
xchg
jb
mull
fdivs
push
jl
mov
mov
push
mov
cs
cmp
jle
sub
sub
add
mov
mov
rcrb
addr16
std
jl
jb
add
jno
je
inc
repz
shrb
xlat
add
sbb
cli
or
sbbb
repz
into
fcomi
rcrl
add
out
loopne
xchg
sbb
cmp
lcall
mov
das
push
push
sub
jge
xlat
pop
lret
sbb
lahf
test
xchg
hlt
add
lret
and
mov
jecxz
fbstp
add
in
in
fsubs
cmp
cmp
lock
data16
xor
cmp
out
jne
sbb
add
pop
mov
add
enter
sub
jbe
sub
pushl
cmpsb
mov
hlt
cli
andl
shrl
cli
mov
fdivrs
in
xchg
out
call
addl
out
fs
or
scas
enter
pop
fiaddl
leave
adc
dec
push
adc
cmpsb
pop
lods
es
inc
pop
mov
mov
mul
and
gs
add
test
into
int3
std
imul
popa
call
add
movsl
and
mov
cs
or
iret
insb
mov
shrl
int3
loopne
sub
in
stos
xchg
inc
pop
mov
imul
mov
mov
jno
pop
mov
adc
in
testb
add
scas
shrb
ficompl
movsl
pop
jl
pop
sub
mov
aad
sbb
jge
or
jle
pop
in
adc
arpl
fstl
jbe
sbb
inc
addb
add
std
jmp
push
cmc
clc
imul
sbb
mov
andb
out
push
enter
lret
pop
mov
push
push
je
mov
cmp
dec
dec
inc
pop
push
int
jo
add
rcll
xchg
lret
add
aaa
push
iret
adc
jle
mov
mov
inc
mov
xlat
ret
lods
and
arpl
dec
xor
or
and
je
cmpsl
jno
sbb
mov
jmp
cmpsl
add
adc
jmp
inc
iret
mov
mov
push
or
mov
pop
popf
mov
data16
stos
mov
push
les
xchg
cli
int
push
lods
ficoml
bound
add
in
or
mov
call
sbb
into
cmp
sarb
add
inc
cmc
std
int3
adc
cmp
lret
ja
test
push
mov
je
fidivs
push
fstps
xchg
iret
adc
ffreep
sbb
push
icebp
imul
leave
jge
popf
pop
mov
dec
aam
sub
add
jmp
hlt
sub
ret
xor
mov
lea
adcb
mov
dec
push
in
nop
into
mov
mov
lds
sti
ss
push
daa
and
add
popf
cmp
push
pop
xlat
in
fs
inc
fistpl
xor
lcall
cli
in
xchg
ljmp
in
push
dec
cmp
or
lret
out
dec
add
inc
loopne
xor
pop
je
adc
and
sub
push
sub
xor
pop
lea
mov
out
mov
xor
pop
fisttps
add
ror
or
or
mov
add
and
jmp
xchg
rorb
ss
popf
sub
sub
mov
popf
push
es
dec
or
add
xsaves
repnz
adc
dec
imul
adc
in
shlb
cmp
jp
movsb
nop
cmp
sub
imul
or
imul
lret
xor
xchg
hlt
js
pop
add
and
test
inc
data16
mov
hlt
jp
push
mov
fcmove
mov
sarl
das
movsb
pop
adc
jbe
push
mov
add
cmp
das
out
or
or
in
out
add
sub
icebp
arpl
sub
loopne
and
add
scas
sbb
pop
sbb
daa
adc
cmp
sbb
cmp
iret
pusha
xchg
mov
fstl
push
jns
fxtract
mov
in
dec
or
dec
push
push
mov
sbb
jl
insb
sbb
punpckhwd
cmp
xchg
repnz
pushf
inc
adc
sub
push
inc
or
push
shl
out
repnz
sub
ja
xor
mov
movsb
pop
xchg
into
in
cmpsl
cmp
or
movsl
mov
xor
stc
aas
inc
and
and
push
das
gs
mov
int
sbb
jecxz
add
push
mov
fildll
inc
cmp
xabort
out
push
add
xlat
jl
sahf
lock
aas
aam
imul
add
orl
enter
inc
sahf
in
andl
jb
outsl
inc
xchg
cmp
mov
shl
popa
mov
xchg
inc
icebp
pop
aad
leave
jge
pop
lds
jb
sahf
enter
jp
popf
aad
cltd
dec
js
lea
inc
aas
add
mul
cmp
fistps
mov
lds
or
ljmp
push
insb
adc
or
rclb
mov
or
insl
loopne
mov
out
stos
jecxz
gs
pop
test
pop
mov
lcall
test
xchg
dec
pop
adc
bound
out
xchg
pop
pop
mov
mov
pop
mov
fwait
addb
inc
cli
mov
adc
rcrl
imul
addb
ret
stc
pop
dec
mov
xor
and
and
in
mov
loop
xchg
out
sti
in
mov
cmp
adc
les
pop
pop
cmp
ja
inc
jl
adc
push
aaa
cwtl
pushf
in
dec
dec
out
ds
idiv
and
adc
int3
push
cmp
dec
outsl
dec
jp
rcll
das
xor
scas
out
adc
cltd
aaa
les
cmp
xchg
insb
cltd
push
push
inc
bound
jbe
xchg
call
rcr
mov
sbb
jnp
mov
fdivs
or
stos
test
popf
cld
movsb
sbb
pop
std
aad
or
in
std
mov
test
ret
bound
data16
and
imul
enter
sti
adc
pop
pop
fsubl
daa
cmp
and
mov
loopne
hlt
mov
inc
cmpsl
cld
ds
shrl
xor
jne
add
out
cmpsb
sub
xor
xor
dec
int3
pop
add
xchg
mov
ret
add
cmp
inc
ret
mov
push
loop
pop
inc
push
mov
push
xchg
iret
sub
push
mov
adc
sub
das
aad
mov
insl
sbb
fxch
lods
jp
jecxz
test
mov
enter
imul
aad
stc
movntq
das
aam
fs
clc
push
aad
dec
mov
arpl
push
sub
scas
jno
fwait
sbb
arpl
test
test
pop
push
jns
push
stc
aam
sub
or
loope
rcl
and
and
or
or
sub
fwait
xchg
mov
out
xchg
into
add
mov
out
cmpsb
sbb
xchg
cwtl
nop
cmp
cmp
fcompl
xchg
ret
popf
push
jl
pushl
pop
mov
xchg
in
test
cltd
ficompl
pop
test
std
adc
lea
mov
scas
negl
imul
mov
mov
mov
inc
pop
cmp
ja
xchg
mov
or
and
dec
repnz
in
lock
movsb
or
loopne
clc
out
mov
sub
push
dec
ljmp
mov
in
sbb
loop
jne
lods
jbe
xchg
sub
movsl
jecxz
mov
xchg
push
mov
add
sub
dec
xchg
mov
dec
push
notl
leave
mov
mov
pushf
pusha
adc
push
mov
es
mov
jg
dec
stos
pop
sbb
cli
rclb
push
push
out
aas
inc
jno
sbbb
inc
outsb
jge
iret
gs
push
ss
mov
dec
and
leave
fldl
add
push
sbb
fdivl
push
gs
mov
mov
push
add
inc
mov
mov
cmc
fs
cmp
pushf
decb
xor
mov
inc
sbb
pusha
dec
push
neg
or
inc
out
and
sbb
mov
les
rcrl
test
add
xchg
inc
lahf
sbb
out
sbb
xor
xor
aas
sbb
iret
lods
dec
outsb
test
sbb
fstpl
fsubr
jbe
jmp
mov
xor
sub
sahf
xlat
xchg
shll
stos
pop
dec
add
call
xor
lods
ret
jp
mov
call
imul
xchg
add
mov
ror
add
pop
push
push
out
imul
hlt
cli
push
cmovbe
les
or
orb
jbe
cmp
sbb
pop
sbb
mov
enter
hlt
push
or
or
cmp
bound
std
gs
andb
push
jb
nop
int3
cmp
in
int
imul
inc
leave
jb
mov
lods
inc
ss
or
in
rcrl
js
push
dec
mov
mov
sahf
mov
je
xchg
mov
or
ficoml
leave
popf
cmp
pcmpeqb
xchg
out
cmp
or
and
cmp
dec
fisttpll
mov
push
jg
cmc
and
fiadds
mov
and
adc
mov
ja
jle
adc
bound
xchg
xchg
fwait
negl
or
test
out
xchg
lods
xchg
stos
lret
mov
mov
fisttps
cmp
sub
or
adc
lcall
pop
fld
std
or
aad
fs
push
bnd
pop
int3
andl
ja
xlat
dec
mov
lds
vsubss
int3
in
imul
push
sahf
out
frstor
push
ret
mov
push
push
test
mov
mov
shlb
mov
fdivr
xchg
and
or
testb
outsl
pop
mov
sbb
adc
dec
xchg
fsts
xor
ljmp
rcr
js
dec
sub
add
push
hlt
xor
ds
jb
xchg
adc
jno
push
out
pop
mov
mov
ret
fbstp
fadds
mov
incb
das
push
xchg
cmc
lea
fbld
inc
bound
lret
cmp
cs
enter
popf
sub
mov
or
mov
and
callw
xorl
push
dec
mov
inc
pop
cmp
ror
sub
cmpl
bnd
sub
dec
cmp
leave
out
push
jmp
aaa
jecxz
lods
and
mov
fwait
bound
stc
cmp
xor
insl
mov
movsw
cwtl
sbb
stc
out
int3
mov
sbbb
in
sub
fs
adc
imul
das
mov
jbe
or
lea
cwtl
scas
push
and
iret
mov
rol
insb
cmc
shrb
pop
mov
dec
aad
std
or
jns
mov
xchg
lret
imull
and
pminsw
adc
add
mov
jo
lds
xchg
jge
mov
xchg
mov
les
test
lret
daa
outsl
lock
out
push
repz
cs
lock
push
movsb
mov
xor
mov
pop
aam
ret
mov
sbb
rol
out
adc
adc
inc
adcb
pop
mov
inc
dec
incl
xchg
xor
lods
mov
test
cltd
pop
or
add
adc
mov
mov
dec
test
or
fiadds
orb
dec
jle
movsb
add
int3
sub
inc
aaa
lahf
mov
ret
sub
int3
sub
cmpb
and
xchg
mov
sahf
pop
add
pop
test
mov
dec
fwait
test
sbb
mov
fcomps
je
clc
popa
adc
js
sub
insl
and
cli
ds
xchg
sbb
clc
mov
sub
insl
mov
insb
bnd
cmp
push
mov
fs
jae
addr16
push
loop
and
xchg
mov
pop
fwait
mov
xchg
les
in
out
lods
les
push
and
lds
or
outsl
lret
fdivs
test
jae
and
popa
iret
clc
std
fsubrl
std
loopne
lds
inc
xchg
in
push
insb
jae
xchg
jg
push
inc
sar
lds
sub
vorpd
inc
call
add
hlt
pop
inc
pop
fwait
popa
dec
xchg
pop
jmp
cld
xchg
ss
mull
fdivrp
movsl
andl
adc
xlat
hlt
dec
jecxz
fbld
outsb
call
lock
mov
xor
sbb
enter
jge
andb
jo
aad
sahf
daa
lret
add
xchg
mov
mov
jl
inc
hlt
sbb
mov
iret
std
or
sbb
or
outsl
jnp
shrl
fs
lret
pop
and
xchg
push
inc
and
jns
lcall
cmpsl
data16
jae
add
mov
pop
xchg
out
popa
or
xor
jp
push
ds
lret
fcoml
push
pushf
out
sbb
and
popa
dec
inc
bound
mov
cltd
and
push
xchg
mov
notl
inc
sbb
arpl
idivb
dec
les
pop
pop
jbe
mov
jg
aad
das
push
xchg
aas
or
push
arpl
pop
dec
push
movl
dec
push
push
bnd
mov
mov
jmp
outsl
popa
mov
inc
mov
inc
xchg
push
push
mov
jge
sub
test
mov
inc
aas
insb
out
dec
sbb
and
std
xor
div
cmpsb
mov
xchg
in
rcl
mov
mov
push
mov
push
ss
dec
sbb
hlt
inc
cmp
mov
jmp
fisubrl
and
and
jmp
inc
add
sahf
ror
fbstp
inc
test
mov
mov
jb
push
in
fldl
adc
inc
jno
idiv
fcomi
leave
test
jl
shlb
pop
xchg
pop
push
xchg
push
push
dec
cwtl
jecxz
mov
xor
mov
pop
iret
jl
call
cmpsl
pop
mov
adc
sbb
pop
ret
jae
dec
ljmp
sbb
mov
pusha
xchg
decb
adc
xchg
inc
call
cld
mov
sti
pop
xor
and
adc
fisttpll
aaa
xchg
mov
xchg
pushf
add
inc
sub
add
test
lods
inc
pop
iret
pop
lahf
inc
pop
test
popf
sbb
aaa
aas
dec
cmpsb
je
adc
push
ret
pushf
movsb
fs
cmpsl
in
cmp
add
dec
mov
add
hlt
add
aam
js
jle
enter
adc
imul
mov
fdivrl
outsl
popa
xchg
jmp
cmp
stc
bound
mov
sahf
daa
jbe
in
adc
or
xchg
into
lock
cwtl
lret
lock
xchg
fsts
jg
stos
addr16
aaa
gs
test
lods
movsl
adc
inc
cmc
jns
cmp
scas
loope
jno
pushf
lea
dec
sbb
orl
sti
dec
push
inc
in
xchg
popf
imul
jnp
lock
jno
push
push
cs
outsl
sbb
mov
out
leave
dec
adcl
lcall
mov
cli
and
test
jb
jns
lods
jp
dec
sbb
pop
or
iret
fwait
or
xor
ret
sub
cmp
mov
adc
dec
mov
ret
sub
and
aas
stc
arpl
ss
mov
xchg
mov
jnp
push
arpl
nop
cmpsl
lret
imul
testl
xchg
inc
popa
sbbb
aaa
call
and
enter
inc
in
pushl
pop
push
mov
xchg
fldl
cmpsb
divb
pop
lret
cmp
int
xchg
push
push
mov
mov
xor
mov
in
add
push
and
pushf
fiadds
add
aad
push
add
mov
imulb
stos
add
filds
xchg
out
lock
mov
push
loope
and
enter
aas
push
cmp
in
jl
dec
mull
cmp
int3
xor
out
mov
ret
jle
pop
jmp
xchg
xor
cmp
mov
mov
pushf
jl
push
sub
fsubl
ret
or
pop
popf
ss
cmpsb
aam
pop
mov
sbb
add
lret
xchg
dec
mov
inc
mov
gs
xor
pop
jg,pt
ljmp
test
add
sub
out
dec
or
fnstenv
shll
arpl
adc
jo
push
ficoms
repz
mov
sahf
int3
xchg
in
sti
popa
pop
dec
adc
in
dec
pop
and
xorl
shlb
jle
xor
test
ljmp
aaa
insl
add
jp
daa
jecxz
cmpxchg
mov
lcall
daa
dec
iret
sbb
shll
idivb
movsl
les
ds
sbb
push
loope
xor
fcoms
cli
popl
fcompl
inc
hlt
mov
mov
lret
in
pop
stc
xchg
jnp
xchg
jmp
les
lcall
mov
int
sbb
or
test
add
dec
pushf
fistpll
pop
lods
adc
repz
jge
repz
jmp
mov
les
add
test
jbe
inc
xchg
lret
mov
jne
sub
xchg
add
addr16
out
cmovs
cli
dec
aam
xorl
dec
jle
scas
out
cwtl
rorw
mov
outsb
das
pusha
movsl
pop
lcall
outsl
jne
daa
test
ret
fs
outsb
mov
rorb
xor
pop
cmc
mov
idivl
pop
dec
fwait
push
mov
jbe
lahf
sbb
test
fistpll
inc
push
cmpsb
jno
loopne
jecxz
add
mov
xlat
hlt
cmp
inc
shl
mov
dec
pop
sbb
fldcw
xchg
lcall
mov
pop
push
movhps
jle
outsl
mov
mov
adc
imul
movsb
xchg
stc
add
in
jmp
bound
into
movsb
dec
mov
mov
je
and
cs
adc
sub
outsl
xlat
mov
push
fistpl
jge
ja
cmp
sub
ds
mov
pop
iret
jle
adc
fs
lcall
add
shlb
rorl
data16
xlat
sub
dec
roll
inc
xor
sbb
lea
call
cmpsl
fwait
mov
cmp
mov
sub
mov
mov
lahf
repnz
pop
mov
or
movsb
adc
movsl
scas
or
dec
jns
push
xor
sub
sub
pop
adc
pop
sub
decb
mov
adc
sub
pop
hlt
dec
repnz
and
loop
int3
fwait
je
iret
repnz
stc
cli
enter
arpl
pop
xor
dec
lods
or
test
repz
add
shl
and
mov
scas
pop
pop
cmpsl
fwait
into
orl
loop
sub
mov
xor
push
jbe
lods
mov
loopne
or
arpl
jae
lods
mov
aam
mov
data16
mov
mov
repz
lcall
jne
dec
shll
push
insb
xchg
xchg
adc
lret
sub
add
cltd
popf
imul
push
jg
repz
sub
loopne
mov
mov
sbb
mov
in
inc
lcall
dec
add
inc
push
push
jle
aad
and
sub
inc
inc
out
and
aam
adc
jnp
sbb
loop
xlat
add
leave
add
push
sar
mov
add
jno
cld
and
pusha
push
dec
or
mov
repnz
orl
mov
lds
rcr
add
clc
inc
jmp
into
or
mov
add
dec
call
popa
and
dec
push
jnp
ds
pop
xchg
or
and
inc
cld
insl
mov
add
jbe
shlb
jns
jbe
mov
dec
fstp
inc
sbb
ja
cmp
clc
push
inc
cmp
pop
adc
sub
cmpsb
xchg
inc
test
in
dec
mov
lods
aad
addr16
fildl
fsubrs
insb
int
jecxz
inc
mov
sbb
sbb
push
add
sub
add
iret
jbe
jb
mov
jno
jecxz
imul
jbe
sbb
jecxz
jae
fnstsw
clc
jmp
mov
js
int3
call
push
mov
jnp
push
jbe
or
jle
xor
pop
cmp
daa
out
nop
jmp
repz
adc
inc
rcr
add
mov
push
jl
clc
xchg
shlb
sub
in
mov
jp
imul
sub
loop
mov
jne
push
mov
pop
das
fdivs
rcrl
cmpsb
sub
pop
aad
andb
xlat
inc
lds
pop
sub
inc
enter
mov
fcmovu
popf
test
push
pop
jb
jmp
pop
sbb
mov
mov
cmp
sub
mov
dec
loope
and
dec
xchg
cmp
inc
xor
in
adcb
insl
sub
jbe
movsl
cltd
dec
inc
adc
cmp
xchg
add
jns
push
divl
les
daa
add
push
mov
insb
xchg
imul
stc
mov
xchg
pop
and
push
dec
stos
cmp
mov
fiadds
mov
sbb
aad
mov
lock
adc
stos
adc
dec
adc
cmpsl
sbb
adc
pop
stos
cmp
mov
daa
add
adc
rcll
stos
adc
fucom
xchg
dec
cmpsl
jb
xor
rolb
sbb
dec
lret
push
cmc
arpl
or
inc
pop
jo
outsb
lods
xor
mov
xchg
mov
int
jle
fdivr
call
add
ror
dec
xor
xor
jmp
inc
sbb
clc
lds
jmp
add
and
loope
xor
imul
push
xchg
shlb
mov
je
cmpsl
or
mov
xor
loop
js
xchg
movsl
lods
idivl
cmp
add
je
xchg
insb
add
lock
and
mov
jp
jmp
mov
loop
test
iret
add
jae
mov
jo
adc
out
in
xor
gs
sub
mov
sahf
sub
jmp
scas
pop
pop
push
nop
stc
cs
and
gs
aad
pop
xor
movsb
pop
cltd
loopne
or
cli
cmp
cmp
fstpl
icebp
mov
mov
std
dec
and
sahf
int
icebp
ja
adc
inc
add
and
popf
xchg
int
mov
or
ds
test
in
jp
xor
pop
dec
inc
movsb
shrl
cltd
nop
insb
movsl
iret
repz
mov
inc
xchg
lds
addr16
xor
pop
in
adc
or
fwait
xchg
mov
cltd
pushf
and
mov
xchg
scas
cmp
push
outsb
push
cmc
jecxz
mov
xchg
inc
push
mov
and
inc
inc
shll
addr16
cli
fwait
andl
and
fisubl
add
lahf
popf
out
inc
xchg
cmpsl
lahf
jp
sahf
jmp
mov
pop
mov
xchg
lahf
cli
xor
mov
dec
push
mov
int
fcmovnu
sbb
sub
daa
repz
xchg
addr16
cmp
jg
and
out
xchg
mov
icebp
int
pop
push
rcll
pop
fwait
mov
add
int3
xchg
mov
sbb
jbe
call
or
ret
aam
nop
mov
add
jg
subb
adc
dec
jne
add
jle
dec
and
jg
adc
stos
push
or
aam
daa
sbb
rcl
out
xchg
push
imul
sahf
pop
es
ljmp
in
xlat
mov
adc
enter
fstl
in
sub
mov
mov
dec
mov
clc
lcall
fdivrl
jnp
mov
int
ficoml
add
xchg
mov
lret
lods
push
mov
addr16
cmpsl
xor
sub
cmp
jae
sbb
scas
dec
cli
test
cmp
and
aam
add
push
xchg
aad
add
push
call
push
push
jb
xchg
ds
imul
adc
movsb
mov
mov
push
mov
mov
dec
scas
enter
add
or
ret
dec
in
in
xor
inc
daa
call
inc
mov
pop
sub
scas
pop
mov
iret
lods
pushf
push
or
fsts
sbb
outsb
cmp
cmpsb
movsl
notb
xorl
jl
mov
xchg
lock
sbb
and
xor
addl
jbe
sbb
jo
or
sbb
js
stos
sti
cs
fildll
clc
and
xchg
sbb
add
adc
inc
adc
jbe
negl
dec
dec
jae
lods
sub
std
jecxz
pop
ror
je
adc
stos
shlb
mov
loopne
mov
sub
xchg
cmp
aam
sbb
jge
and
rcl
inc
int
adc
movsb
xchg
lods
movsl
sub
in
arpl
mov
and
xor
cmpsb
mov
std
pop
mov
mov
cmp
adc
xor
arpl
or
adcl
leave
inc
mov
int
push
inc
sbb
call
popa
adc
inc
scas
xchg
mov
inc
cmp
nop
push
nop
mov
xor
mov
xchg
push
xor
pop
jbe
imul
dec
jnp
sbb
xchg
shlb
lods
push
lods
stos
inc
cwtl
jle
into
jne
and
cmpsb
aam
jno
das
jno
mov
cli
fdivs
adc
mov
scas
push
add
push
mov
in
arpl
mov
jb
mov
stc
pop
sbb
pop
jg
fists
flds
mov
xor
cmp
stos
dec
movsl
scas
adc
sbb
sbb
sbb
fwait
cmp
sub
mov
lds
sbb
dec
fadds
out
outsb
into
sub
repnz
and
xchg
movsb
enter
jns
push
fildl
mov
sbb
mov
dec
sub
andl
push
xlat
sahf
in
insl
fdivr
jno
xchg
repnz
dec
shlb
pop
push
mov
movb
mov
bts
cmpb
test
into
cwtl
sbb
mov
testb
mov
stos
add
push
sbb
pop
cmpsl
loope
pusha
in
lods
mov
add
dec
dec
add
les
into
and
cmpsb
and
test
add
int3
and
pop
sbb
shl
lock
jl
frstor
mov
push
cmc
cmp
and
mov
mov
mov
dec
push
xchg
lds
sub
mov
fstpl
adc
jbe
les
mov
mov
jl
xor
enter
add
stc
mov
imul
mov
test
cmpsb
scas
mov
popf
outsb
sbb
lds
mov
lcall
lret
insb
lret
mov
pop
sub
push
test
push
sbb
fwait
adc
popw
ds
stos
add
push
adc
jo
fisubl
lret
in
lds
cltd
test
sbb
cmp
in
adc
pop
sub
or
xchg
mov
dec
pop
mov
jg
in
pop
mov
inc
cwtl
push
fisubl
test
dec
push
ljmp
clc
aaa
lret
sti
mov
xor
xchg
scas
dec
pop
cmp
lret
or
pop
lcall
xchg
arpl
sbb
xor
lds
movsl
mov
and
hlt
dec
jecxz
lahf
les
mov
sbb
test
jne
jbe
pop
shrl
aad
loope
sub
xor
push
pushf
fsubrl
jle
insl
scas
jnp
adc
dec
data16
cmp
xchg
or
movsl
lret
pop
and
sub
movsl
push
cmp
mov
mov
xchg
cmp
or
fisttps
insl
lods
pop
mov
jnp
rcr
outsb
inc
jmp
push
pop
dec
jle
jae
iret
add
jge
and
out
lahf
pop
nop
xor
mov
out
popf
mov
pop
test
ss
push
push
jae
call
loop
in
push
sbb
sub
loopne
ror
mov
sbb
in
jo
out
sub
aad
inc
enter
or
xor
fimull
iret
push
push
pop
pop
lcall
lahf
pop
xchg
jno
lock
mov
sub
push
sub
shll
mov
or
fwait
push
sub
and
inc
xchg
cmp
outsl
lret
cmpsl
movsl
or
push
cli
mov
repnz
xor
lret
mov
dec
inc
inc
clc
into
push
outsl
daa
mov
push
arpl
outsl
mov
inc
out
or
scas
mov
scas
stc
inc
mov
lds
cmp
cmp
jno
mov
cltd
test
cli
cltd
mov
mov
fnsave
adc
dec
mov
pushf
aam
lds
leave
repnz
mov
xchg
dec
mov
and
or
adc
mov
add
or
push
jne
inc
lret
cmp
xchg
call
cmp
lcall
les
mov
lods
xor
int3
std
and
pmuludq
std
mov
ja
dec
jb
dec
pop
or
cmp
out
cmp
add
inc
pop
mov
nop
cmc
sub
cltd
lea
and
sti
jae
xchg
cmp
rcrb
mov
dec
sarl
xor
add
movsb
aad
pop
loop
push
and
inc
cmp
jo
add
add
fldcw
incl
xchg
ds
stos
push
pop
cmpb
jle
xchg
cmp
lea
cmpsl
xchg
mov
mov
aad
pop
sub
nop
adc
lcall
data16
push
dec
dec
push
adc
in
add
pop
dec
addr16
loope
push
in
cli
jmp
push
repnz
stos
sbb
mov
cli
fiadds
mov
lea
out
jnp
daa
test
push
and
pop
in
add
add
pop
push
jnp
jo
push
mov
std
imul
sarb
out
or
cmp
in
fdivrl
cmp
xchg
jb
call
bound
cmc
sbb
loopne
mov
bound
push
add
adc
inc
pop
or
call
mov
mov
jne
into
out
xor
mov
out
and
jae
fimuls
bound
and
pushf
mov
daa
xor
dec
pop
pushf
outsl
fsubrs
push
pushf
and
je
cmpb
lods
add
les
jbe
push
push
test
nop
sub
outsl
sbb
jmp
testl
jns
or
lcall
jge
lods
mov
lock
mov
sti
cmc
rol
jge
xchg
lock
adc
stc
aad
sahf
mov
in
push
pop
and
push
xchg
xlat
push
push
or
lods
mov
push
mov
push
popa
cli
aaa
push
lahf
lret
repnz
pop
movsb
sti
inc
shlb
cmc
das
xchg
sub
xor
ret
ljmp
test
mov
nop
arpl
lcall
dec
dec
add
std
sbb
mov
or
cmp
or
mov
int
mull
xchg
sbb
leave
rcpps
mov
mov
divb
lret
out
mov
push
cmp
fiaddl
pop
adc
adcb
pushf
psrlq
jnp
int
add
lcall
aas
rorb
loop
cmp
xchg
pop
xchg
cmp
int
mov
lds
push
jle
popa
rolb
pop
cltd
insb
out
bound
dec
loop
sbb
shlb
push
popa
das
mov
or
push
cmpsb
push
mov
push
mov
mov
dec
iret
loope
inc
aaa
imul
out
mov
imul
hlt
ret
out
mov
enter
popa
orl
call
add
sti
push
dec
outsl
decl
loop
push
and
cmp
jl
orl
dec
subb
sbb
pop
loope
push
xchg
imul
pop
outsl
orb
and
aad
dec
fmul
icebp
mov
outsl
jecxz
pinsrw
data16
repnz
pop
sti
loope
push
cli
jmp
jne
int
or
cmpsb
xor
fsubs
aas
mov
adc
jne
mov
and
clc
jbe
mov
movl
clc
mov
jb
cmp
jle
dec
lret
adc
es
jbe
test
jae
cmp
js
or
push
imul
fildl
cwtl
lea
pop
rclb
or
sub
push
mov
mov
fcmovnb
or
jne
jle
fwait
jae
jmp
lret
push
jl
jmp
icebp
xor
leave
insl
adc
std
mov
lret
jns
or
lret
cmp
rorl
fmulp
movsl
movsb
movsb
out
pop
add
add
lcall
sarb
cs
add
int
add
rorl
inc
mov
sbbb
bound
add
data16
jle
pop
repz
sub
icebp
xor
je
lea
lds
andb
scas
jmp
loope
dec
pop
imul
mov
pop
mov
adc
mov
mov
call
pop
sub
fwait
test
shrl
adc
dec
or
sbb
cmp
and
shlb
jg
jl
mov
mov
das
je
movsl
pop
ljmp
je
xor
jl
mov
inc
rcl
les
std
inc
arpl
popa
cmc
xor
add
or
fsubs
mov
stos
jb
fisubrl
cltd
dec
cmp
int
xor
outsb
pop
jecxz
pmuludq
les
call
into
pop
lea
xchg
lods
dec
aad
cmp
rcll
pop
or
sub
lods
cmp
sub
mov
xchg
dec
adc
in
arpl
xchg
popf
xchg
es
jne,pn
mov
insl
sbb
adc
loopne
add
pop
je
loopne
out
in
aad
mov
inc
imul
sarb
cltd
test
dec
mov
inc
jae
imul
fstps
sbb
cmp
ror
cld
xorl
je
sub
jno
pop
dec
lea
jl
popl
cmp
mov
sbb
mov
jae
in
jbe
jecxz
scas
leave
xchg
xchg
adc
cmp
xor
sub
mov
cmpsl
push
mov
das
adc
dec
ss
in
rorl
jmp
movsb
in
add
lea
hlt
pop
fdivr
cmpb
pop
push
sahf
es
sbb
jg
sahf
sbb
jmp
jl
sub
je
adc
fcmovnbe
mov
sbb
nop
cmp
and
mov
mov
fcmovnbe
mov
and
cmpsb
push
add
add
push
xor
jle
jbe
or
popl
sub
push
inc
out
mov
lods
xchg
pop
cld
in
dec
mov
arpl
push
inc
mov
xor
and
orl
fildll
jmp
adc
mov
mov
xor
cmp
cmp
sub
pop
push
shr
scas
jg
into
imul
jecxz
xor
or
jne
jno
out
dec
imul
ficoml
jae,pt
adc
cli
pop
mov
scas
aam
cmp
inc
insb
nop
pushl
stc
or
dec
sub
xor
int
add
test
mov
ja
push
sub
add
movb
xchg
cmpsl
test
adc
rcrl
sbb
push
loopne
insb
faddp
cli
xor
lcall
ljmp
mov
cmpsl
test
outsb
xor
mov
daa
xor
es
inc
cmp
pop
rcrl
enter
mov
mov
outsb
lret
xchg
stc
ds
ja
mov
dec
lods
test
clc
push
stos
push
loop
pop
jecxz
pushw
cvtps2pd
push
lahf
sar
jp
into
jg
lcall
sub
mov
test
and
or
decl
sbb
or
cmp
push
adc
mov
xor
inc
fldt
test
xchg
out
leave
into
xor
nop
out
xor
test
fisubrl
adc
sub
lahf
add
mov
imul
push
int3
dec
ret
data16
insl
jns
rolb
aaa
call
in
sbb
rcrb
jp
iret
lret
sbb
mov
inc
cmp
adcb
xchg
pop
adc
mov
fstpt
out
inc
mov
inc
sti
pop
push
inc
scas
jne
sbb
inc
and
sbb
int
mov
pop
outsb
mov
adc
addr16
fdivl
test
dec
and
daa
in
fdivr
and
pop
and
jl
xchg
cmp
mov
in
add
sbb
inc
out
xchg
imul
sbb
aas
add
cwtl
dec
mov
push
in
and
decl
push
sub
gs
xor
or
jns
popl
popa
movsb
xor
adc
test
dec
ret
sub
pop
dec
insl
int
push
insb
xor
pop
int
xchg
int
test
sbb
jbe
mov
movl
test
dec
or
in
mov
in
fimuls
into
stos
or
incl
insb
fisubrs
ss
lods
ret
push
mov
cltd
or
cwtl
fcom
std
or
shl
pop
shrb
sbb
lret
or
fcomip
nop
aad
aad
xor
mov
stos
out
or
std
pop
sub
popf
mov
mov
pop
push
cmp
nop
out
out
push
cmp
je
fwait
adc
lds
adc
ja
sti
outsb
push
shlb
loope
or
or
fistps
xchg
andb
mov
jecxz
scas
xlat
insb
rcl
pop
sub
out
jg
mov
dec
mov
push
test
pop
xchg
mov
add
mov
lods
mov
jno
jne
std
inc
dec
dec
out
sti
out
test
fs
aas
call
lahf
scas
lea
xchg
mov
lods
jae
pop
cmp
imul
or
mov
call
push
jbe
fcmovnb
sub
adc
imul
pop
or
mov
xor
push
stos
out
arpl
je
and
jge
test
sbb
push
daa
jns
push
mov
sub
jl
or
ljmp
in
xor
jge
mov
aam
mov
jecxz
or
int3
pop
outsl
imul
je
xlat
jae
repnz
aad
ss
sbb
das
sub
pop
imul
cmp
sub
iret
in
mov
mov
dec
or
les
mov
shl
roll
xchg
xor
sbb
es
jecxz
idivb
mov
sbb
push
mov
sub
xlat
xor
sub
hlt
enter
xor
shll
sub
xchg
mov
jno
imull
push
push
aas
dec
mov
push
mov
add
dec
or
or
aam
out
imul
jb
jae
mov
cmp
mov
inc
mov
or
fdivrp
sbb
psllw
adcl
mov
loop
adcl
and
pop
and
es
pop
cmp
divl
out
add
push
stos
pop
mov
mov
sbb
push
and
inc
repnz
loope
mov
aam
mov
nop
psubusb
pop
lcall
pushf
jl
ds
movsb
push
test
pop
xor
ja
dec
imul
and
mov
mov
push
adcb
imul
subl
mov
pop
jge
div
push
movsb
cmp
out
decl
orl
xchg
and
fs
mov
push
push
push
xor
mov
or
inc
add
movsl
or
testl
sbb
neg
adc
xor
cmp
addb
push
jns
xchg
test
mov
jbe
lock
in
xor
into
xor
mov
xor
iret
xchg
xchg
and
lds
pop
push
stos
mov
xchg
cmp
rcrl
into
addr16
rcll
push
xchg
lods
decb
mov
xor
mov
dec
mov
insb
aam
cmp
aaa
addl
sub
push
push
rorb
ret
jl
adc
xor
pop
cltd
or
ss
inc
stc
cmp
lods
out
sub
shlb
mov
test
adc
inc
pop
nop
push
pop
xlat
xchg
push
je
mov
fldenv
mov
outsb
and
fwait
lods
popa
mov
jo
push
andnps
popa
or
push
rcr
cmp
es
push
fs
lods
jmp
cmp
adc
dec
jne
ret
mov
mov
clc
into
jp
into
jp
push
mov
sbb
mov
dec
ficompl
mov
aad
pop
movsb
sahf
clc
pushf
lods
push
cmpsl
xchg
dec
les
sahf
push
add
imul
add
xor
lods
mov
adc
pop
xchg
stos
mov
pop
lahf
int3
fldt
shlb
jmp
aad
adc
cmp
dec
jge
movsl
adc
ss
jne
cwtl
jle
movsl
and
mov
add
fmul
popa
jo
shll
ret
hlt
cld
dec
test
test
mov
fldcw
cwtl
inc
add
popf
push
mov
push
push
xchg
sub
mov
mov
ficoms
cmp
inc
dec
out
inc
pop
jbe
cld
iret
in
fisttps
mov
ret
push
mov
pop
or
dec
add
jae
mov
in
pop
sub
aad
xor
cmp
sub
fsub
push
xor
cmp
test
push
fisubs
xor
out
sbb
shlb
dec
mov
movsb
es
jo
cmpsb
or
fisttps
out
cmp
sub
fcompl
fisubl
xchg
jno
adc
test
jo
xor
and
mov
pop
ficompl
jo
sub
pop
btc
dec
or
mov
cli
ja
mov
mov
cltd
test
movsl
jge
jno
push
test
decb
add
lea
push
and
scas
ret
loop
xor
arpl
arpl
std
jb
fstpl
or
pop
dec
outsl
mov
scas
imul
out
mov
lods
lcall
lret
dec
add
rcl
jg
loopne
inc
pop
rcrl
in
xchg
cmc
loope
inc
push
lcall
push
clc
mov
xchg
and
push
xor
pusha
xor
mov
sub
sub
int
xlat
ds
push
sub
int3
fnstenv
insl
lods
pop
sti
cmp
hlt
repz
inc
or
fistps
pop
mov
dec
aad
dec
sub
out
call
imul
ficomps
or
cmp
inc
ss
shl
xchg
test
aad
lcall
xor
cmp
add
mov
stos
adc
push
xchg
repnz
clc
jnp
pop
add
cli
mov
mov
std
adc
cmp
fnstenv
mov
sbb
repnz
repz
pop
inc
int3
test
movsb
jnp
lds
or
sbb
outsb
lahf
or
bound
jmp
adc
xchg
xorb
jl
stos
data16
pop
push
push
or
inc
daa
ror
mov
out
sbb
jb
xor
adc
cmp
xor
fdecstp
push
sub
xchg
nop
outsl
jo,pn
add
insb
jp
sub
add
jb
sbb
sbb
hlt
out
push
xlat
gs
outsb
lret
out
imul
inc
dec
adc
rclb
fdivr
xchg
out
lock
stos
push
pop
or
xchg
inc
aad
movsb
fldenv
ret
shlb
imul
subl
cmp
lahf
xor
push
inc
push
and
outsb
mov
cwtl
xchg
mov
jns
lcall
into
xchg
mov
mov
xor
mov
lea
leave
push
lfs
imul
xor
or
sbb
rclb
inc
jbe
fcmovbe
rcrb
jbe
in
rol
rorb
inc
testb
or
sub
orl
ret
je
fsubrs
pop
in
cli
nop
insb
into
xor
cmc
xor
dec
ret
or
add
xchg
mov
pop
pop
loope
scas
es
xor
pop
sub
lcall
or
cwtl
xchg
lods
jecxz
aaa
shll
addl
ds
and
scas
js
stos
call
mov
push
xchg
cmp
dec
fadd
ret
int
inc
mov
sarb
nop
fwait
xlat
mov
xor
mov
jbe
cmp
xor
ljmp
xlat
xchg
mov
ret
sarl
dec
mov
xor
or
rcr
mov
scas
leave
bound
adc
inc
ja
mov
or
daa
fcoms
rcrl
lods
addr16
fdivl
jne
in
cltd
fisttps
cld
or
cltd
mov
xor
lret
fs
xor
cmpl
push
inc
lods
lret
repz
mov
xchg
cmc
mov
mov
sub
hlt
das
push
or
fmulp
movsb
cltd
pcmpeqd
cmpsb
ret
jo
or
inc
lret
adc
or
mov
dec
xchg
cwtl
dec
inc
insl
cmpsb
cmc
pusha
xor
inc
shl
pop
or
sub
in
int
xchg
adc
cld
mov
cmpsl
pop
xchg
xchg
dec
lcall
pushf
fildll
ret
mov
test
xor
and
shrl
mov
lods
jo
cmp
add
ljmp
dec
mov
stc
inc
dec
push
cmp
mov
sbbl
nop
sbb
in
push
stos
mov
adc
or
xchg
jmp
inc
cltd
movsb
jg
pop
in
cmp
or
push
pushl
jmp
mov
lea
stos
jnp
sub
std
sub
loope
mov
repnz
subl
mov
aaa
daa
mov
adcb
popf
inc
cmc
cwtl
inc
sub
push
in
jle
sar
mov
dec
mov
not
xor
dec
mov
comiss
in
insl
call
sbb
add
sbb
scas
test
mov
cmp
iret
aam
outsl
loope
xchg
cmp
gs
movsb
jb
movsb
mov
loope
sub
sub
loopne
or
adc
mov
mov
pop
mov
out
jne
cs
mov
mov
push
xchg
jb
movsl
lret
lods
dec
pop
add
mov
inc
cmp
ffreep
jle
in
and
addr16
pop
clc
cs
leave
mov
in
cmp
adc
push
addl
and
mov
xchg
in
add
jmp
loop
repnz
mov
mov
inc
bound
sbb
stc
and
xchg
dec
add
cmpsl
jns
fisttpll
pop
pop
adc
sbb
push
and
push
push
inc
xchg
ljmp
nop
in
movsb
xchg
ret
daa
icebp
and
mov
pushf
sub
cmp
or
notl
adc
insl
sbb
push
js
lcall
jbe
sbb
imul
lret
push
xlat
jns
add
inc
out
and
xlat
mov
dec
xor
xchg
sbb
fidivl
mov
mov
xor
call
push
mov
sbb
pushf
nop
cs
loopne
jbe
xchg
fcmovb
cmp
cs
mov
addr16
and
mov
adc
mov
jge
jnp
leave
lret
xchg
mov
lahf
call
and
push
inc
jge
pop
aaa
mov
mov
cwtl
aas
mov
sbb
cmove
cmc
ds
aas
pushf
repnz
gs
mov
and
pop
sub
lock
popa
push
dec
iret
fcmovb
and
lds
sbbb
lcall
lock
cmp
scas
jmp
stc
xor
xchg
popa
divb
adcl
rcrl
jmp
cli
rorl
sti
int3
mov
adc
loope
test
cmp
neg
sbbl
fdivrs
sub
test
pop
dec
mov
je
std
jo
in
lret
stc
lret
mov
inc
in
nop
sbb
js
adc
add
lock
or
iret
jnp
push
push
lods
sub
shll
div
xlat
xor
mov
loope
int3
mull
and
pop
lret
push
stc
out
xor
jge
mov
push
jb
in
les
loopne
in
sub
sub
mov
mov
lret
mov
popf
cmp
fldenv
push
imul
int
xorb
mov
pop
test
popf
cmp
xchg
popf
repz
ljmp
adc
push
xchg
in
sar
test
test
lcall
js
jbe
mov
sbb
mov
lret
jg
add
aad
and
jne
jl
sahf
mov
and
rcrb
adc
fwait
shll
fdivrs
mov
xor
inc
subb
sbb
outsb
push
mov
pushf
es
shl
pop
push
shlb
pop
adc
sahf
test
jle
jle
cmpsb
ret
xor
lcall
inc
or
aad
push
leave
daa
mov
xchg
call
aas
shll
fisubrs
add
jo
neg
cmp
cmpb
xchg
xchg
mov
pop
aaa
adc
loop
xchg
sbb
ret
push
stos
inc
aad
xchg
das
aaa
add
mov
movsl
pusha
or
push
pop
adc
ja
cs
sar
stos
adc
mov
mov
rclb
jb
add
jno
int
jo
pop
iret
divl
cmp
bnd
fildll
fldt
pop
mov
xchg
sahf
xor
loope
cmpb
sbb
test
xchg
repz
outsb
inc
sbb
stc
dec
aas
xlat
mov
aam
mov
scas
sahf
dec
shrb
cmc
adc
adc
cmp
jno
testb
jns
loop
fisttps
mov
add
fbstp
jp
jmp
xchg
ss
loopne
adc
and
int3
xor
test
and
add
out
imul
sahf
push
dec
adc
sbb
mov
rclb
sahf
imul
andb
add
loope
cmpsb
scas
shlb
insl
call
adc
inc
adc
xchg
imul
movsl
sbb
aas
cmc
gs
pop
add
inc
sbb
add
fisttps
ret
ror
loop
jmp
out
ljmp
cmc
cmpsl
scas
aas
or
idiv
sarl
mov
xchg
aaa
in
ret
stos
push
jno
sar
sub
scas
mov
xchg
lret
xchg
jmp
mov
push
out
mov
setne
push
daa
insl
sbb
movsb
add
out
imul
test
jge
mov
inc
shll
lods
mov
stos
adc
pop
cli
fs
add
push
lret
pushf
mov
cltd
cmpsb
les
in
fs
sbb
pushf
int3
jne
xor
cmp
cmp
mov
push
cmc
inc
popf
cwtl
cld
add
and
jne
lret
xchg
push
mov
stos
addr16
nop
pop
popf
std
mov
roll
adc
cli
jge
sbb
jp
xor
shlb
xchg
sbb
pop
fsub
insl
outsl
lret
inc
scas
loopne
in
ja
ja
pusha
les
xchg
pop
dec
repz
lods
ret
pop
call
lds
cli
xchg
adc
sub
xor
in
ss
xchg
ficoml
loop
lret
test
mov
aaa
imul
lret
cmp
add
xor
push
lea
fnsave
sti
xor
xchg
sti
jno
mov
movsl
repz
pop
nop
inc
je
or
pop
inc
sub
ficomps
insb
xchg
rorb
inc
dec
rcrl
pushf
sub
in
mov
pop
fsubs
xor
sub
roll
test
mov
mov
daa
or
cli
cld
jne
xchg
in
jg
adc
push
inc
jecxz
xchg
xchg
pop
jp
sarl
xor
bound
jnp
lods
pop
xor
mov
mov
in
xchg
aad
pop
or
jp
aas
in
mov
xor
mov
dec
jl
jb
push
add
aad
pop
adc
cmp
test
jmp
sbb
or
movsl
sbb
stos
push
adc
insb
or
sbb
dec
lods
or
inc
or
push
inc
add
adc
push
or
bound
push
or
sbb
loop
mov
outsl
pop
stos
lahf
mov
push
mov
shrl
xchg
andl
fsubs
adc
mov
js
add
std
subb
push
loopne
mov
outsb
lret
imul
imul
imul
scas
int3
jne
lods
test
xchg
sub
scas
daa
and
mov
pop
jmp
std
ffree
adc
mull
mov
mov
xchg
or
mov
lahf
and
int
mov
fistpll
cmpsl
lahf
out
into
sbb
stos
inc
insl
add
or
mov
test
xchg
in
pop
fdivrs
andb
and
rcrb
xor
nop
out
cli
sub
add
dec
out
xchg
cld
cmp
jb
adc
movsl
xor
lods
cmpsb
mov
es
push
dec
ss
movsl
adc
dec
ficoml
pop
es
sub
jns
mov
cmp
xchg
fxch
in
arpl
mov
push
push
sub
mov
mov
js
sub
xchg
out
fisubl
push
push
jecxz
or
pop
xchg
cmc
xadd
pop
cmpsl
push
mov
sarb
ljmp
mov
in
popf
iret
sub
repz
cs
pop
sbb
sti
pushf
hlt
mov
enter
inc
cmp
mov
addr16
and
rolb
int
enter
dec
mov
lock
dec
add
fucom
andps
fnstsw
mov
mov
pusha
cs
and
in
fdivs
inc
aam
jg
aas
popa
cli
push
lods
jbe
sbb
pop
cmp
lock
sti
in
rclb
into
adc
call
mov
stc
xorb
and
dec
mov
repnz
mov
jnp
sbb
jg
xchg
vaddsubps
pop
lods
cmc
neg
xor
dec
outsb
sub
sub
adc
es
mov
pop
inc
xchg
xor
mov
cmp
pop
int
mov
in
sbbl
lock
ss
dec
mov
sub
aaa
inc
push
shlb
jl
lds
int
xchg
and
inc
add
imul
arpl
test
dec
in
sub
fldcw
decl
cli
xor
xchg
movsb
xchg
lods
fistl
shrb
out
push
andl
sbb
insb
inc
sub
movsl
mov
dec
popa
inc
pop
mov
jne
adc
je
inc
repnz
daa
sbb
lods
mov
sub
mov
cwtl
push
mov
mov
push
popf
jg
outsb
xchg
dec
jge
mov
ficompl
push
pusha
and
inc
loop
aaa
inc
shll
and
add
std
mov
pop
push
inc
movsl
fadds
in
icebp
push
sub
jb
imul
mov
les
in
int3
outsl
hlt
dec
jle
pop
movsl
cld
inc
imul
xchg
mov
test
cmp
cmp
dec
test
cmpsb
sbb
cwtl
dec
push
mov
push
pop
push
fsincos
pop
sbb
dec
ljmp
dec
sbb
and
out
test
and
ss
std
int
or
ret
dec
mov
andb
adc
pop
andl
cmpsb
test
cmp
addr16
jno
out
std
test
scas
jns
cld
cli
and
movsb
rcl
add
push
pop
jmp
inc
push
divl
pop
ljmp
fwait
inc
sahf
outsb
pop
dec
ja
popf
mov
enter
sbbl
cmpsb
ja
or
inc
fcmovnbe
cmp
inc
sahf
jmp
sti
out
test
mull
or
pop
ror
lcall
les
lret
jg
or
movsl
ds
in
sbb
lret
fisubrl
loop
push
mov
and
cmp
push
push
pop
jp
mov
lea
jge
cmpsb
test
xchg
imul
pop
les
cmp
xchg
sbb
lahf
sub
xor
cltd
std
mov
adc
lahf
adc
cmp
push
fwait
mov
lcall
xor
gs
and
imul
sbb
rcl
loopne
mov
les
stos
push
fwait
push
es
int3
ss
cmp
adc
mov
std
idivb
ljmp
dec
xor
push
stc
mov
xor
mov
or
cli
add
mov
outsb
push
and
push
mov
and
or
mov
mov
cmp
out
es
cs
mov
and
xchg
inc
es
add
sbb
out
mov
out
mov
jle
mov
cmp
jo
call
fisubl
inc
pop
popf
cmpsb
xor
cwtl
or
andb
out
inc
mov
pop
adc
fbld
jecxz
mov
cmpsl
dec
fs
shrb
shll
rorb
fidivs
cwtl
cs
and
cmp
stos
mov
push
jmp
cld
push
xchg
out
int3
scas
push
inc
xchg
xor
in
fmul
mov
dec
sbb
mov
mov
dec
jecxz
mov
dec
and
sub
mov
popw
pop
ficompl
dec
lahf
ret
mov
jmp
push
inc
mov
add
dec
std
pop
and
andl
es
push
mov
push
ljmp
sbb
xchg
fcoml
dec
mov
cmpsl
gs
sbb
mov
in
mov
mov
mov
jnp
nop
xchg
dec
pop
aaa
or
loop
fwait
add
cmp
iret
cmpsl
add
adc
xchg
addb
pop
js
push
mov
adc
incb
sbb
mov
lcall
xchg
mov
jge
xchg
jg
das
push
cwtl
dec
lods
inc
mov
xchg
mov
lds
mov
bound
push
mov
lret
lea
cmp
pusha
jle
jae
daa
sub
add
insl
shlb
sub
insb
xchg
and
ficoms
sti
adc
addl
lock
dec
xor
insl
sahf
mov
lods
sub
xchg
je
xchg
sahf
dec
mov
add
sbb
jbe
movsl
ljmp
mov
cmp
mov
out
add
lods
int
lret
gs
and
int
xchg
in
movsl
xchg
or
cmp
into
fwait
popa
negb
jmp
mov
sub
inc
mov
adc
lret
jae
add
fistpll
adc
movsb
dec
xorl
or
cmp
jbe
xchg
lock
sub
pop
decl
xchg
pop
xor
subb
mov
pop
out
jmp
sbb
inc
add
leave
adc
fsubrl
popa
cltd
jb
dec
jne
xor
rol
insl
push
xchg
pushf
test
adc
mov
xchg
jo
push
notb
ds
popf
std
in
insb
mov
fnstsw
aad
repnz
loop
cmp
dec
xchg
cmp
or
nop
cmp
lret
inc
lods
adc
mov
jg
jb
push
mov
add
cmp
daa
jae
pop
dec
stc
out
push
repnz
fcmovne
sub
dec
xchg
outsb
dec
scas
decb
ret
lret
je
test
dec
xor
sar
jnp
xchg
cld
push
dec
jo
adc
bound
and
mov
in
push
in
lret
testb
push
dec
xor
into
loope
cmpsl
popf
or
jmp
pop
daa
and
faddl
cltd
in
scas
sub
jo
fldl
xchg
ja
dec
sub
mov
jae
pop
mov
das
rcr
and
or
je
ja
xchg
inc
or
xor
cmp
arpl
movsb
push
test
mov
popa
daa
nop
push
rorb
lret
jge
mov
imulb
popa
mov
adc
mov
call
sub
je
int
pop
xchg
loopw
sahf
cmp
sbb
es
adc
xchg
filds
cmpb
sbb
dec
jno
mov
fcomip
mov
inc
jp
fwait
and
sbb
subl
or
lods
cmpsb
push
mov
sub
mov
dec
mov
jl
push
lods
cmc
cld
shl
xor
fcmovnu
mov
mov
pop
or
enter
push
dec
jecxz
xor
mov
ljmp
inc
cmpsb
sub
sub
add
sub
mov
cmpsl
lods
adc
orl
div
movsb
cmp
push
fisubs
adc
mov
xchg
add
popf
les
popa
mov
xchg
repz
push
aam
sbb
cltd
mov
push
sbb
and
dec
in
in
stos
sbb
xchg
jns
mov
mov
pusha
jl
loopne
mov
push
jg
xchg
jne
mov
and
out
sub
int
add
jbe
and
jecxz
leave
sub
or
xor
mov
test
cmc
ja
mov
sarl
shlb
dec
jno
or
out
mov
mov
inc
push
xchg
add
aaa
je
mov
fdivs
repnz
lea
scas
jmp
cmpsl
movb
sbb
icebp
mov
ret
je
dec
jecxz
ficoms
pop
add
add
popf
push
stos
inc
mov
xchg
push
mov
pop
cmpsb
pusha
repnz
pop
fisubs
mov
imul
lcall
imul
jecxz
cmc
gs
mov
sbb
lods
aam
xor
out
mov
cmp
mov
mov
xchg
fldl
cmp
fst
mov
fimuls
xor
mov
sahf
andb
add
or
lock
jecxz
arpl
xchg
or
jge
dec
jns
xchg
aam
out
jp,pn
mov
cmc
and
test
je
xchg
shrl
push
in
and
xchg
lea
js
test
mov
mov
inc
adc
mov
inc
mov
sbbl
das
pusha
push
daa
rcl
imul
jae
arpl
push
push
lcall
out
fnstcw
mov
ret
xor
xchg
sub
mov
adc
sbb
push
shll
test
imul
mov
xor
jp
mov
jns
pusha
mov
push
jecxz
xor
xor
repz
clc
bound
dec
jmp
in
inc
inc
mov
sbb
mov
pop
addr16
mov
out
push
jecxz
xor
dec
sbb
inc
test
dec
jo
sbb
and
ret
inc
scas
sub
xor
rclb
addl
femms
lcall
rclb
loopne
lods
push
repz
sbb
pop
notb
mov
pop
mov
jle
aam
imul
cmp
lret
cmp
cmp
mov
push
jl
or
xor
test
scas
leave
push
iret
sbb
pop
cmpsl
lcall
stc
pop
sti
sbb
push
es
and
cmpsb
movsb
test
fdiv
orb
scas
enter
insb
dec
mov
add
in
imull
dec
xchg
lea
pop
notb
xchg
into
cmp
fwait
lock
aam
lds
in
pop
inc
pop
aad
sub
mov
xor
sub
insl
add
sti
ret
xor
adc
and
adcb
stos
movsl
push
outsb
push
adc
ja
dec
scas
adc
or
lods
lds
and
cltd
xor
sub
mov
iret
cmp
outsb
movsl
rolb
xor
fnstcw
xor
pop
xchg
xlat
xchg
mov
inc
push
outsl
sahf
lock
mov
rorl
cli
xchg
loope
pop
mov
dec
mov
cltd
test
add
or
aaa
sub
sub
jle
ds
call
int
lock
icebp
std
jbe
push
test
cmp
out
jne
sub
and
inc
xchg
rclb
jbe
sbb
xor
xchg
repnz
imul
iret
inc
ds
mov
gs
sub
es
in
outsb
sbb
aas
pop
inc
sbb
pop
call
add
xor
cmc
pop
scas
mov
sub
cwtl
pop
lret
hlt
cmpsb
mov
shlb
push
pop
aad
or
loopne
jo
jg
popf
lds
jle
add
dec
test
inc
scas
dec
mov
shlb
dec
fs
lcall
sbb
outsb
jnp
mov
in
dec
pop
movsl
fucomi
sub
push
mov
jp
mov
sbb
cmp
mov
aaa
movsb
sub
or
fwait
daa
pop
adc
mov
cmp
pop
mov
imul
outsl
mov
add
xchg
push
in
inc
pop
iret
insb
stc
jo
push
into
imul
ret
xchg
xor
je
test
xor
xchg
cmp
cwtd
lret
shrb
pop
outsb
ret
add
pop
jbe
stos
fs
rolb
mov
testl
ljmp
jns
je
inc
loopne
or
sub
stc
adc
dec
mov
sbb
shr
jle
shl
ss
sbb
lods
mov
pop
or
insb
mov
adc
inc
mov
ljmp
in
call
es
mov
mov
jno
out
lcall
mov
mov
in
clc
push
xchg
into
packssdw
cmpb
outsb
shlb
ds
in
popf
jne
add
ficoms
xchg
scas
and
lock
xor
insb
sub
idivl
xchg
jnp
inc
jge
hlt
shrl
jl
out
jbe
subl
xchg
ret
inc
cmp
mov
stc
mov
addl
jnp
pop
repz
arpl
xchg
loop
or
dec
lods
mov
in
pop
lret
pop
xor
out
mov
iret
mov
nop
nop
pop
inc
cld
out
xor
nop
dec
fs
jnp
pop
hlt
aad
test
and
jl
in
push
out
test
imul
add
push
dec
pop
xorl
dec
loopne
stos
arpl
test
shl
mov
xor
mov
cmpsl
fisubl
imul
ret
jo
add
inc
into
adc
jmp
js
jp
mov
test
cmpsl
dec
stc
cmp
xor
addl
sub
mov
stos
xchg
mov
jnp
and
icebp
or
push
insl
sub
sub
imul
stos
mov
adcb
mov
andl
lods
call
dec
fisubl
pushf
mov
std
je
jle
add
popa
adc
lods
popf
fidivs
or
les
shrl
push
mul
adc
jb
stos
out
sub
dec
adc
mov
hlt
and
sub
mov
dec
dec
lahf
in
sarl
jns
out
xcrypt-ecb
cmpsl
push
mov
loope
mov
scas
imul
or
jecxz
cld
loopne
xor
bound
imul
cmp
xlat
mov
lea
mov
and
stos
jb
arpl
leave
jl
in
sub
mov
cmpsl
mov
mov
aas
add
xchg
and
pop
sub
popa
push
adc
mov
xor
dec
sub
cs
sub
adc
cmp
pop
lcall
rolb
stos
ror
add
push
lret
push
mov
mov
push
and
dec
mov
das
jg
ja
repnz
sbb
jle
adc
js
fistl
es
fildl
je
adc
lods
xor
out
stc
push
cmp
ret
mov
int
mov
push
fcmovne
aad
cmp
and
mov
shlb
jne
cmp
mov
jecxz
push
pop
mov
xor
insb
outsl
xor
orl
or
notb
nop
xor
adc
mov
add
xor
and
out
pop
out
test
in
jmp
stos
push
adc
jecxz
mov
push
xchg
pop
inc
pop
cld
push
incl
aaa
mov
sub
out
mov
jecxz
pop
ds
xchg
dec
inc
sbb
sub
mov
push
ss
mov
sub
test
mov
loope
adc
inc
xor
in
push
fidivs
enter
cmpl
dec
addr16
sbb
mov
adc
push
and
cmp
push
mov
rcrl
or
inc
xor
and
lahf
sbb
mov
adc
hlt
stos
push
fs
add
pop
jnp
and
out
push
and
mov
pop
mov
add
inc
fcomp
es
or
sti
cmp
xchg
clc
stc
jnp
add
jl
ret
sub
fidivs
pop
push
mov
mov
lret
mov
add
scas
cltd
sbb
xchg
mov
jmp
push
aas
add
xlat
test
test
sbb
test
int3
iret
inc
sarb
cmp
int
xchg
test
mov
sub
aaa
out
insb
or
jp
jno
cltd
in
lcall
fisubl
arpl
mov
xchg
or
jnp
pusha
je
lea
xor
ret
xor
inc
push
jno
cmp
out
mov
mov
push
cmp
popf
sbb
mov
pcmpeqw
es
mov
subl
xchg
pop
in
sub
iret
and
mov
xchg
leave
pop
js
pop
stc
movsl
adc
rolb
mov
inc
mov
xor
lret
subb
cmp
enter
iret
cltd
or
pop
mov
in
out
nop
jge
or
fnstsw
fcomi
adc
divl
sub
cmp
dec
dec
std
movsb
out
ss
lods
sbb
out
cmp
xchg
jae
rcl
sbb
divb
sbb
xor
jg
int3
or
push
dec
add
xor
or
xchg
loopne
subb
cli
mov
or
daa
sbb
popa
stc
cmp
sarl
repz
add
cmp
sahf
mov
incb
gs
ret
callw
movsb
popa
les
add
ret
push
aad
lock
sarl
ret
xchg
push
push
out
std
mov
cmpl
shrb
mov
cli
fsubs
jl
mov
daa
dec
addr16
mov
adc
push
jno
xor
out
cmp
xchg
jle
cmp
sbb
aam
mov
ret
das
pop
flds
andnps
imul
hlt
test
push
inc
adc
add
js
or
push
call
cmp
movsb
jo
push
aaa
and
imul
jo
in
sbbb
and
push
adc
dec
gs
adcl
outsb
or
and
mov
aaa
popa
push
pop
jne
xor
and
call
sahf
faddp
or
arpl
dec
out
cwtl
or
mov
ja
imul
sub
popl
ja
xor
ror
sub
mov
fdivr
push
push
jno
mov
add
mov
daa
ret
mov
cld
and
adc
fcmovne
or
sub
inc
inc
lahf
jno
push
adc
cld
dec
and
pop
into
movsb
jle
mov
add
push
fwait
xchg
push
andps
repz
xor
mov
xlat
jecxz,pn
pop
out
adc
xchg
sbb
mov
lcall
les
push
stos
xchg
and
je
sub
fistl
dec
pushf
idiv
outsb
push
ja
lds
add
out
sbb
sbb
mov
sbb
fistl
std
lods
mov
leave
dec
push
inc
cld
pushf
fwait
pop
xchg
push
and
arpl
mov
jecxz
inc
test
mov
jae
sarl
cld
push
fsubr
jb
cwtl
fisubrs
xchg
push
fisttps
orb
jecxz
inc
dec
push
orl
jne
sub
fcomps
cld
roll
sbb
pop
lea
inc
or
das
mov
adc
xor
dec
and
pop
in
sub
addr16
push
jo
sbbb
movsb
fwait
rcr
push
cli
out
or
ljmp
dec
mov
push
mov
add
mov
adc
test
push
pop
ret
shl
pop
cmp
mov
es
call
mov
xchg
jns
nop
adc
aad
sub
mov
sub
push
dec
call
mov
dec
cmp
pop
jae
fmul
xor
lds
lret
shll
inc
cmp
in
mov
mov
pop
push
gs
scas
jmp
je
push
lea
dec
mov
add
and
sbb
int
push
std
sar
mov
cmp
xchg
jl
dec
add
in
stc
cmc
adcl
pop
cmpsb
dec
xor
mov
add
sbb
into
mov
sbb
loope
iret
rclb
push
jge
fsubr
lcall
sub
push
ds
fldenv
xor
ret
xor
ror
cmpsb
lret
test
sub
in
lcall
pop
imul
cld
add
cmpl
mov
rcrb
fxtract
repnz
cmp
and
jmp
pop
jns
fbstp
popf
add
sub
jl
lods
mov
testb
xchg
mov
bound
dec
loopne
push
cmc
inc
push
loop
aas
test
push
cmpsb
imul
icebp
or
inc
sbb
imul
mov
lahf
cmp
in
dec
or
fcmovbe
mov
lret
fwait
jge
pop
jecxz
push
jo
sbb
pop
pop
pop
lods
inc
lret
repnz
test
shrl
pop
and
pop
lock
divl
out
fucomip
xchg
inc
popf
mov
cmpsb
pop
jae
inc
loope
pop
daa
mov
imul
adc
jge
sub
arpl
inc
xchg
or
cmp
into
pop
jnp
int3
mov
test
mov
xor
jmp
inc
adc
cmpsl
fs
adcb
cld
sub
sub
bound
or
mov
aaa
mov
dec
ret
mov
scas
test
and
imul
add
sbb
es
xor
stos
lea
mov
push
inc
dec
pop
loopne
mov
notl
mov
mov
inc
ret
iret
mov
test
push
stc
out
es
cmp
fs
into
push
dec
sbb
cli
stos
jmp
dec
test
xchg
inc
xor
inc
xor
or
stos
mov
jg
mov
mov
or
fnstsw
fwait
ret
lahf
lret
sbb
pop
mov
inc
pop
mov
jo
dec
mov
flds
pushl
in
sub
dec
xor
jl
add
cmp
cmp
push
mov
out
mov
movsl
mov
cmp
popa
gs
push
mov
inc
sub
pop
imul
mov
push
repnz
inc
sub
push
xor
pop
sub
sti
mov
xchg
shlb
movsb
mov
shlb
ss
adc
jge
in
and
icebp
repnz
repnz
movsb
mov
cmp
clc
daa
sahf
rorl
ret
or
ret
cmp
push
adc
adc
push
rclb
and
xor
jle
sbbb
ficomps
loope
jnp
repz
push
call
sub
pusha
lret
mov
cwtl
lea
jb
and
in
imul
and
inc
add
dec
push
andb
test
push
in
call
movsl
xor
lods
adc
xor
adc
mov
or
push
push
jb
mov
imul
sub
daa
jbe
sbb
sbb
add
ss
pop
cmc
xchg
add
cld
rorb
xchg
sub
daa
xchg
or
je
rep
les
push
call
mov
jno
lcall
pop
mov
pushf
push
push
imul
pinsrw
ja
cmp
movsl
xor
sub
mov
xchg
orl
jge
mov
roll
and
mov
idivb
add
and
fnop
dec
xorl
push
xchg
sub
dec
lock
scas
sbb
dec
xchg
lock
loopne
bound
mov
mov
inc
daa
pop
jmp
scas
mov
test
je
aas
arpl
inc
inc
dec
mov
mov
jne
ret
mov
ja
xor
push
jae
mov
jge
in
fsubs
inc
clc
push
and
dec
addr16
mov
sbb
mov
mov
jle
add
fcoms
shll
inc
std
or
arpl
jne
test
shlb
daa
mov
stos
cli
loope
jmp
stos
fs
pop
sbb
ss
in
or
mov
mov
scas
inc
loope
sbb
pop
inc
js
jg
jb
add
stos
mov
in
jnp
jmp
push
xor
movsl
and
xor
ret
sti
inc
mov
sbb
dec
xchg
xlat
push
scas
ljmp
xor
jbe
xchg
insl
add
jp
addr16
imul
mov
adc
sbb
adc
in
pop
fcmovbe
dec
or
push
dec
sbbl
pop
leave
pop
pop
adc
add
cmp
pusha
mov
test
cmp
int
push
jnp
sub
pop
sub
pop
nop
mov
cmp
push
out
test
movsb
test
cli
mov
dec
sub
adc
cld
sub
decb
jp
jle
aam
jbe
loopne
scas
dec
icebp
movsl
jno
lea
and
cwtl
cmp
push
stos
dec
or
insl
add
repz
sbb
imul
sahf
and
jmp
or
insb
sub
shrb
orb
mov
sarb
xchg
pxor
push
in
cmpsl
hlt
popf
dec
repz
sbb
fdivp
and
sub
sub
mov
mov
popa
xlat
jnp
or
in
hlt
push
adc
and
fstp
lcall
pop
push
push
push
in
pop
dec
je
xchg
inc
push
into
wrmsr
ljmp
outsb
mov
xchg
push
mov
addl
xchg
ljmp
sub
xlat
cmp
adc
pop
adc
xor
sub
xchg
hlt
jl
loopne
pop
cmpsl
pop
or
adc
aas
adc
nop
xor
adc
aam
cmp
cmpsl
dec
xchg
orl
jae
xor
imul
mov
adc
movb
lret
dec
jne
push
xchg
roll
jns
data16
into
push
ds
aam
imull
in
add
mov
and
mov
or
fwait
mov
stos
mov
sub
push
inc
jb
lret
mov
sub
out
pop
inc
adc
rcrl
fistps
outsb
lock
adc
sub
ljmp
fisubs
xor
lahf
cmp
mov
shlb
movsl
scas
or
or
cmp
out
loopne
mov
adc
jns
movsb
out
sbb
insl
cmp
adc
ds
data16
cmp
mov
cmpsb
sarl
mov
pop
or
mov
jne
arpl
mov
xor
rolb
mov
out
mov
add
enter
bound
xchg
pop
ss
lds
imul
test
jb
jne
inc
fwait
addr16
in
sbbl
and
push
xchg
aaa
cmp
mov
bound
and
stos
scas
clc
std
cmp
fdivs
call
jnp
mov
cltd
orb
pop
pop
ljmp
movsl
outsl
in
cmpb
inc
and
int3
js
pusha
iret
mov
add
sub
cli
lods
adc
out
pop
xorb
outsb
ss
outsb
dec
call
popf
addb
test
aad
test
pop
fimuls
push
lea
push
sub
je
out
mov
add
rol
daa
mov
cld
xor
gs
pop
mov
stos
leave
mov
mov
stc
mov
adc
and
shll
xor
int
in
push
rcrl
cmp
inc
pop
jae
and
adc
dec
sbb
das
jo
mov
mov
cmp
rorl
imul
stos
shll
int
mov
pop
cmp
fmulp
xchg
push
xor
call
imulb
imul
xchg
fisubrs
dec
inc
or
xor
pshufw
movsl
fldenv
filds
lret
pushf
xchg
pop
clc
iret
rorb
or
jno
jmp
cmpsl
lcall
jg
iret
inc
mov
test
dec
push
repz
int3
jbe
mov
fwait
insl
and
out
cli
jp
or
mov
mov
xor
nop
xchg
push
xor
lret
push
faddl
outsl
or
push
fstpl
cmp
ds
adc
bound
sub
sahf
sub
movsb
xchg
icebp
sbb
sub
leave
push
xchg
dec
mov
outsb
rcll
jl
pop
sbb
ds
movsl
adc
or
sub
leave
push
dec
dec
roll
addr16
push
int3
ss
mov
push
pop
jl
pusha
jg
mov
cltd
cltd
add
push
xchg
test
icebp
push
mov
and
lods
mov
inc
mov
rcrb
loope
jle
sahf
xchg
cmp
sbb
mov
lds
pop
cltd
and
jb
js
inc
push
pop
push
inc
push
pop
movsb
cld
shll
loopne
and
fdiv
mov
inc
sbb
idiv
mov
jmp
mov
inc
cmp
out
inc
sbb
test
sbbb
in
or
lret
jl
add
daa
sub
pop
leave
jae
push
gs
sub
arpl
filds
stos
bound
flds
sub
ret
mov
leave
adc
sub
in
dec
in
adc
aaa
adc
cmp
int
aad
mov
cwtl
cmp
mov
cs
icebp
push
test
lods
push
sti
int
adc
test
jo
nop
cmpsl
sbb
sbb
subb
cmp
dec
cld
jns
push
dec
loope
data16
jmp
cmp
shll
pop
scas
xchg
jp
sub
test
cmpsb
pop
adc
mov
mov
in
fildll
xchg
sbb
push
sbb
sbbl
pop
bound
cmp
jle
popf
inc
xchg
push
xchg
mov
jge
and
insl
xor
cltd
roll
mov
fcoms
jmp
pop
mov
add
cmc
push
hlt
mov
ljmp
popf
add
or
fisubl
jb
push
sub
cmpsb
sub
cli
aam
xchg
push
bound
out
jge
or
or
aas
ret
jecxz
je
push
adcl
or
mov
enter
lods
cmp
sub
inc
popl
test
mov
pop
xchg
inc
leave
pop
mov
movsb
sbb
mov
add
jae
out
jo
add
or
pop
jmp
in
jno
xor
insl
in
inc
mov
push
outsl
push
jl
push
adc
sub
ret
popf
movsb
mov
stos
pusha
lcall
add
and
jl
adc
mov
movsl
mov
ret
mov
or
loopne
dec
mov
mov
xor
or
xchg
dec
inc
xchg
popa
sbb
insb
clc
push
lods
add
inc
movl
add
push
push
push
mov
gs
cmp
mov
mov
add
or
out
dec
inc
ret
and
sti
mov
test
packuswb
and
add
ja
xorb
sarb
dec
xor
jae
fcmovnu
aaa
in
mov
fs
insl
and
xor
mov
in
push
jp
xor
jbe
rcll
sub
enter
lret
shlb
ljmp
lcall
stos
push
cmp
push
push
inc
or
pop
mov
push
or
or
jp
lods
adc
loopne
sub
mov
pop
push
pushf
add
sbb
out
addr16
loope
out
mov
mov
and
jne
push
jecxz
add
ret
dec
or
scas
or
data16
int3
or
mov
rcrl
in
iret
out
pop
lret
popf
imul
dec
fcoml
mov
or
das
adcb
shrl
dec
scas
push
mov
sub
lcall
xor
repz
testl
mov
and
jae
repz
roll
das
pop
mov
mov
or
push
cmpsb
push
fsts
std
mov
pop
dec
inc
mov
mov
jnp
test
or
jge
pop
add
mov
addr16
fmulp
iret
adcl
push
push
xchg
test
jbe
lahf
dec
jle
sahf
rolb
movsb
push
jb
stc
xchg
orl
repz
sbb
cmc
jp
sbb
pop
inc
arpl
push
add
ja
pop
movl
and
sbb
ljmp
pushf
adc
ss
push
dec
push
pop
lahf
call
dec
xchg
sub
sub
mov
add
pop
shll
rcrl
push
lods
sub
cmp
jge
lock
push
sti
in
pop
xor
xchg
or
xchg
arpl
aad
ss
jge
dec
cmp
xchg
pop
popa
test
das
lcall
pop
push
leave
test
xor
xchg
ja
in
xchg
push
xor
ds
mov
outsb
pop
pop
and
clc
add
mov
pop
clc
rorb
dec
cmp
ss
jae
cmp
or
jne
mov
pop
push
scas
cmp
in
mov
pop
push
scas
int
test
sub
adcl
cmp
adc
and
sub
and
pop
push
inc
pop
aad
xor
cld
fisttps
push
mov
enter
insb
imul
pop
sub
fsubrp
xchg
loope
mov
sub
roll
jle
je
lods
sbbb
lahf
gs
push
in
and
sbb
cmp
mov
aad
scas
dec
xchg
cli
scas
or
pop
dec
sub
add
imul
mov
ja
addr16
call
test
and
mov
call
jg
pop
inc
push
adc
push
rorl
into
je
stos
push
mov
aad
stc
aaa
inc
sub
ret
lea
sarb
js
aad
jns
adc
mov
pop
rcrl
inc
lock
sub
mov
and
repnz
dec
and
inc
xchg
jne
fwait
pop
push
sub
pop
and
fcmovbe
test
pop
arpl
mov
adc
iret
imul
sbb
scas
sbb
jg
repnz
test
scas
push
cmc
dec
jle
inc
sti
mov
in
scas
or
int3
push
orl
mov
cmpsl
dec
in
xchg
lock
jl
cwtl
daa
mov
mov
ljmp
pop
shll
aaa
clc
xchg
inc
shll
pop
mov
mov
imul
fistps
add
aas
dec
xlat
clc
sbb
popa
pop
cmpsb
in
mov
xor
mov
xor
shrb
pusha
pop
dec
out
fmul
popa
testl
cmpb
xchg
push
cmp
mov
mov
incl
cli
sahf
inc
push
dec
lods
mov
rorb
mov
xchg
inc
lahf
dec
add
inc
lea
fnstcw
jns
sub
cmc
or
in
mov
in
dec
sub
lret
xor
push
cmp
aaa
mov
fdivrs
das
int
inc
ret
xchg
sub
data16
pop
shll
jl
pop
test
xlat
xchg
pop
dec
or
xchg
rcrl
sahf
xorl
mov
lock
stos
or
cmp
ss
and
addr16
les
loopne
test
out
jecxz
cmp
jo
sub
pop
xor
or
mov
add
fisttps
jecxz
lods
jno
push
push
cmp
aad
mov
xchg
aaa
call
nop
push
pushf
jno
imul
fwait
lea
dec
xor
sbb
pushf
or
out
add
jp
push
stc
pusha
jmp
lods
cmc
xchg
lahf
xor
mov
or
add
mov
mov
jnp
push
mov
pop
pop
push
push
int
cmp
push
xchg
push
cmp
arpl
xor
or
rolb
out
dec
out
arpl
push
sub
stos
xchg
scas
clc
pop
fisubrs
jecxz
pop
shlb
popf
insl
ret
or
push
call
fs
mov
ljmp
sub
or
sbb
popa
lcall
xchg
sahf
imul
push
dec
or
das
mov
pop
jo
test
in
or
addr16
in
cmpb
xor
lahf
sbb
mov
dec
int3
imul
push
stos
pop
orb
fildl
lods
mov
add
jecxz
push
cmovae
inc
nop
stos
cmc
mov
sub
lods
xchg
push
lret
outsb
std
popf
pop
mov
out
cs
inc
mov
push
xor
jno
mov
push
jne
lods
or
out
cmp
mov
sub
lds
pop
push
arpl
mov
fdivrl
push
fs
inc
and
stc
bound
and
inc
xchg
inc
jae
sub
stos
hlt
inc
dec
dec
lods
fucom
adc
push
dec
stos
add
test
fmulp
cmp
cs
ljmp
lret
or
popa
ret
pop
popa
xor
adc
inc
inc
mov
cli
scas
ds
and
rclb
mov
adc
cmc
mov
imul
ja
jmp
jmp
in
jns
leave
jg
icebp
bound
xchg
subl
mov
hlt
leave
shrb
popa
fsubs
cmp
inc
pop
jbe
push
loopne
aam
xor
aad
push
mov
inc
pop
insb
xor
pop
pusha
add
cltd
idivl
jb
je
cmovp
adc
jecxz
cmp
gs
inc
and
fsubl
jp
imul
data16
sub
mov
cmp
xor
push
or
xchg
cli
xor
scas
inc
outsl
outsb
mov
mov
sbb
lods
int3
mov
aas
fdivl
popa
pop
lods
xchg
jp
push
movsl
add
sbb
jmp
shll
mov
int
enter
xchg
cs
push
adc
pop
inc
cmp
pop
clc
repz
inc
sti
lds
clc
sbb
adc
loopne
jmp
cmp
dec
je
jge
inc
enter
lds
xchg
addr16
imul
movsb
inc
dec
out
lds
mov
out
add
jecxz
sbb
pop
bndstx
sub
mov
adc
mov
push
adc
jg
cmp
std
xor
out
jne
movsb
pop
lea
addr16
mov
loopne
loope
and
and
bound
imul
arpl
lods
jbe
mov
mov
adc
aas
jg
push
adc
push
das
jne
mov
lcall
push
sbb
loop
mov
inc
xor
faddl
rcll
dec
add
pop
in
out
jne
mov
mov
or
cmpsb
or
mov
or
out
push
enter
inc
mov
movsl
jbe
mov
icebp
pop
dec
rcl
jnp
and
imul
fldl
and
xor
xor
cltd
jl
dec
lcall
repnz
jb
push
push
call
loopne
enter
xchg
xor
shrl
cli
fldenv
popf
sahf
cld
add
fsts
sub
dec
or
ja
push
or
mov
pop
xchg
mov
jge
scas
gs
leave
dec
loope
mov
out
int3
popa
sbb
mov
mov
mov
negl
icebp
out
add
xchg
dec
xor
and
adc
sub
inc
mov
jns
fmulp
leave
jge
int3
out
mov
fs
push
inc
lock
dec
push
movsb
shll
test
xor
fwait
ret
cmp
adc
fmuls
push
inc
rcrb
mov
arpl
cmp
sbb
cmp
dec
xchg
pop
and
cmpsb
shr
cmp
pop
addb
mov
add
hlt
pop
xor
xchg
imul
cwtl
lret
test
jne
xor
daa
ret
cs
pop
loope
jp
shlb
and
into
cli
out
and
xchg
sub
es
sti
xor
out
fistl
loop
inc
jp
testb
pop
fucomp
push
stc
movsb
inc
test
ret
xor
mov
mov
jbe
aam
pop
shl
inc
mov
jp
fbld
push
dec
test
or
sti
mov
aaa
sbb
adc
cmp
insl
jg
pusha
in
ja
divl
or
aas
addr16
push
cwtl
insl
dec
ds
call
xchg
in
or
xlat
jae
int
sbb
clc
mov
rcrb
aaa
cmp
jl
mov
gs
movsb
dec
and
jae
movsb
test
movsl
pop
xchg
testb
jge
xchg
push
lds
push
jl
ljmp
pop
add
adcl
sub
xchg
jns
jl
xchg
outsb
mov
mov
aaa
sti
mov
dec
flds
or
sti
mov
pop
ret
push
xchg
xchg
dec
pop
and
mov
js
test
stos
xor
sbb
dec
fld1
out
shll
xor
inc
pop
inc
test
and
cmp
insb
push
call
lea
pop
xor
ss
dec
inc
mov
and
aas
pop
inc
dec
insl
inc
movsl
push
add
rol
cmp
cmp
out
xor
imul
lods
in
cmpsb
pop
vmovlps
mov
nop
fnstenv
repz
add
and
sub
cld
mul
out
xchg
stos
mov
mov
f2xm1
lahf
or
add
test
pop
jecxz
popf
shl
das
rcl
push
mov
js
fcoms
xor
rcll
loop
mov
jb
inc
push
jns
stc
mov
pusha
popf
aaa
in
jl
shll
popa
sahf
cmc
mov
ret
dec
mov
mov
int
ret
nopl
shlb
dec
xchg
jae
xchg
rolb
xchg
xor
pop
js
pop
in
push
and
dec
inc
push
jno
mov
aam
popf
jle
faddp
or
xor
dec
aaa
pop
sbb
mov
or
xchg
sar
mov
inc
mov
out
and
pop
adc
xchg
or
ss
mov
fs
push
adc
adc
jno
enter
loop
cld
rcrl
add
iret
cmpsl
insb
add
fimull
mov
mov
cmc
dec
enter
rolb
xchg
fadd
into
dec
add
cli
imul
mov
iret
lret
fwait
divl
mov
gs
int
mov
dec
mov
jp
mov
fwait
insl
test
pop
sub
adc
mov
leave
fwait
sahf
outsl
add
add
std
or
mov
enter
sbb
es
or
scas
sub
mov
rorl
mov
test
jb
pop
out
test
xor
int
pusha
dec
into
aas
mov
pop
jle
jle
cli
lock
adc
mov
xchg
mov
testl
xor
lock
fcompl
arpl
popa
and
and
mov
or
fcmovnbe
repnz
aad
mov
test
xchg
sti
push
fcmovu
pop
or
jno
cmp
sbbb
test
imul
push
insl
jno
shrb
js
or
inc
popa
loope
push
and
pop
shlb
add
sub
call
mov
push
imull
xchg
pop
xchg
int
ret
jecxz
popa
pusha
das
sub
addl
pop
roll
pop
push
push
out
mov
jl
out
dec
bound
and
mov
in
jae
sbb
jo
lods
int3
jge
pop
lret
out
jge
fisttpll
in
jle
stos
gs
jle
jle
add
mov
or
or
dec
clc
and
push
movsb
into
imulb
pop
jbe
adc
sub
dec
push
mov
lret
and
lods
imul
sbb
sbb
sbb
sub
or
daa
sub
pop
in
jb
dec
rolb
lock
cmp
add
aad
out
aas
adc
out
test
jg
out
mov
mov
test
out
gs
push
aad
inc
test
sbb
push
cli
push
dec
insb
stos
jp
addr16
or
fstps
sub
stc
call
test
int3
mov
ficoms
xor
popa
stos
mov
and
mov
jg
cmp
adc
lahf
sbb
inc
jns
add
into
pop
jne
jbe
sub
mov
push
push
inc
arpl
xchg
inc
bt
daa
subl
push
dec
sbb
cmp
or
int
fstpl
call
int3
test
cmp
add
dec
dec
mov
mov
fimuls
push
sbb
mov
repnz
xchg
jbe
jne
dec
sti
loop
in
pop
mov
xor
aaa
flds
mov
sbb
mov
or
push
push
es
jg
mov
stos
push
push
icebp
aas
mov
gs
adc
and
mov
shl
cmp
cmp
mov
cmp
mov
mov
push
cs
fisubrs
add
mov
int3
test
loopne
out
out
fnstsw
ljmp
push
sub
jns
out
shrb
mov
pop
imul
flds
pusha
sti
cmp
enter
push
cmp
fbld
lret
cltd
xor
cmp
or
js
test
mov
xorl
int3
push
scas
std
icebp
cmp
sbb
imul
clc
insb
xorb
mov
inc
xor
xchg
push
push
into
pop
data16
dec
xor
or
hlt
test
push
dec
nop
jnp
mov
add
adc
fsubr
into
cmp
mov
fadds
and
mov
mov
xor
fidivs
mov
scas
cmp
jp
lods
subl
mov
jp
xchg
or
aam
xchg
lret
shlb
out
enter
aas
xchg
fdivr
adc
mov
rolb
or
pop
fwait
loop
inc
pusha
and
push
or
movsb
popf
ss
insb
pop
vaddss
incl
scas
inc
add
mov
int3
imul
mov
adc
inc
arpl
gs
insl
mov
aas
mov
or
int3
lret
sub
push
or
popa
xor
mov
aad
dec
push
insl
mov
cmpsl
jns
std
push
adc
sbb
mov
xchg
rorl
int
repz
cmp
shll
inc
rolb
dec
shlb
jmp
mov
shlb
xlat
inc
insl
add
rcll
pusha
in
cmp
push
mov
pop
adc
mov
push
mov
sahf
add
ret
push
jns
pushf
mov
decl
inc
leave
or
mov
lds
movsl
dec
add
out
jg
lods
xchg
pop
lds
cmp
push
pop
popf
loope
mov
cmpsl
pushf
sbb
addr16
insl
aad
dec
mov
xchg
ficompl
rcr
and
das
mov
xchg
shlb
in
adc
shrl
mov
cli
insl
imul
je
adc
pop
pop
inc
test
jbe
scas
out
popf
mov
fdivs
sub
inc
mov
jl
mov
push
or
xor
push
test
fucomip
scas
mov
shl
cs
mov
sar
scas
cmp
inc
xchg
mov
xor
lahf
jnp
lcall
popa
lret
mov
pop
loopne
push
pop
loop
mov
push
and
lret
in
shrl
dec
out
mov
leave
mov
jmp
mov
mov
add
test
cltd
jge
aad
mov
sbb
das
out
sbb
jp
mov
dec
mov
mov
hlt
les
push
xchg
fstpt
dec
xor
jnp
mov
int
cld
adc
test
daa
or
dec
in
dec
lret
xor
jecxz
rcl
and
insb
loope
sbb
addr16
aam
cli
enter
and
shll
inc
fucomip
movsb
out
mov
popa
int
pop
ljmp
movsb
inc
sub
xchg
xchg
inc
mov
mov
pop
hlt
cltd
iret
outsb
dec
lods
lret
cmpsb
xchg
inc
or
stc
dec
add
into
adc
scas
iret
jge
fidivrs
in
popa
rol
mov
jecxz
shll
pop
popl
addr16
lahf
and
lret
xchg
in
cli
aam
mov
cmp
mov
mov
test
imul
out
inc
mov
cwtl
lods
fstps
inc
dec
xor
adc
push
cwtl
out
push
arpl
xlat
or
test
ja
or
sub
sbbb
mov
lret
into
outsb
mov
lea
lods
or
mov
sub
mov
cli
fs
mov
or
mov
xlat
dec
lock
xlat
out
insb
mov
or
pop
shll
jno
mov
cmp
and
or
push
lret
mov
pushf
mull
mov
xchg
xchg
pop
inc
cltd
mov
test
icebp
or
adc
scas
testl
fwait
dec
lods
ja
adc
sub
jnp
dec
mov
adc
addr16
fmull
cmp
bound
dec
das
pop
call
sub
or
dec
or
lods
mov
push
in
call
ljmp
arpl
shll
imul
push
lahf
arpl
aas
jp
xor
jo
cmpsb
or
hlt
aaa
jns
fs
cmp
inc
fmuls
push
popf
rcll
pop
xchg
sbb
call
xchg
cs
mov
jbe
repnz
lock
push
je
popf
out
inc
pop
mov
mov
punpcklbw
xchg
cmpsl
incb
xor
mov
aam
sub
inc
pop
iret
add
xchg
dec
nop
mov
aad
sub
jecxz
loop
ss
jae
and
data16
fs
mull
or
push
imul
ljmp
fsts
sub
call
cmp
jge
das
loope
push
test
bound
cmc
xchg
dec
js
clc
loope
in
lcall
and
sbb
in
les
lcall
xchg
mov
cwtl
xchg
jne
ljmp
sub
mov
fstpt
mov
xchg
mov
arpl
mov
outsl
cmp
mov
adc
stc
aaa
ror
mov
xor
sarb
shlb
js
cmpb
xchg
das
roll
ja
add
pop
outsl
and
out
jb
fwait
mov
adc
test
sub
iret
jae
sbb
mov
cwtl
jmp
std
mov
sub
movsb
sbb
mov
or
add
cmc
icebp
aaa
mov
jbe
pushf
in
mov
mov
dec
shll
cmpsl
sub
pop
and
push
and
mov
push
pop
push
inc
stos
sbb
push
test
adcb
or
or
dec
mov
and
ret
and
sarb
mov
mov
out
lret
ret
in
cmp
adc
xlat
mov
fadds
sub
mov
rorb
pop
add
js
test
dec
sub
loope
icebp
repnz
xlat
cmp
sbb
ja
or
cmc
and
fsubs
clc
jbe
sub
jae
adc
push
das
cli
or
cmpl
sarl
and
into
scas
loopne
add
popf
mov
pop
outsl
movsb
mov
cmp
in
xchg
fs
leave
sbb
push
cld
add
sbb
js
pop
out
push
xor
inc
adc
xchg
aad
xor
pusha
push
repz
jnp
js
adc
movsb
mov
mov
or
pop
scas
jg
ds
out
sbb
sbb
repz
and
mov
ret
adc
xchg
sbb
pop
inc
ss
and
call
daa
in
and
stos
cltd
mov
into
push
and
andb
out
mov
mov
movsl
mov
inc
sub
lahf
inc
jge
push
test
and
xchg
xchg
mov
dec
sti
movsb
mov
std
stos
sahf
push
lds
out
jns
jle
ret
dec
push
ss
adc
lea
fistps
dec
test
ret
int
je
push
popa
cli
xchg
lret
push
clc
push
arpl
adc
test
cmpsb
pop
std
fwait
clc
iret
mov
jl
les
jl
popa
fmulp
in
movsl
mov
cltd
xorl
cli
repnz
push
xchg
add
cli
cmp
fs
adc
dec
jg
push
mov
xlat
and
pop
cld
insl
cmpsl
add
jne
es
adc
cmpsb
pop
jge
push
or
or
rol
outsb
jl
mov
out
lods
sub
ss
subl
icebp
imul
pop
sbb
fcmovu
adc
xchg
sub
lahf
pop
mov
lret
or
push
sbb
ds
xor
pop
repnz
sbb
jge
mov
jae
insb
add
xor
in
and
pusha
cmp
push
cmpsl
push
lcall
test
clc
mov
xor
mov
imul
sbb
rclb
or
cltd
jno
dec
mov
addr16
test
jl
mov
lds
jp
add
adc
aas
adc
mov
push
hlt
sub
mulb
sti
mov
jnp
jg
pop
loop
or
cmp
fadds
out
repz
repz
cmp
xor
adc
es
push
sbb
sbb
xchg
mov
pop
sub
jae
int3
lea
movsb
les
push
scas
pusha
add
and
jb
jae
and
cmpsl
push
or
stos
push
sti
push
sti
xchg
std
dec
mov
imul
insb
icebp
inc
adc
inc
ja
mov
mov
outsb
rorb
sub
outsl
push
out
test
test
movsb
mov
mov
in
mov
mov
testb
icebp
pop
or
cmp
popa
inc
and
xchg
mov
jnp
inc
imul
lods
ja
sbb
dec
addr16
adc
or
shl
mov
jns
pusha
pop
cld
imul
jl
mov
out
pop
fdivrl
dec
lods
mov
rcrl
imul
inc
addl
dec
or
jnp
mov
insb
inc
loopne
jne
fs
int
push
sub
and
imul
mov
and
push
and
jle
fldt
shr
xor
jmp
cwtl
loopne
fisubs
mov
mov
push
je
arpl
sbb
fldt
stc
inc
sbb
popa
adc
into
test
aam
ret
fs
inc
push
cltd
in
jg
mov
pusha
out
cmp
cmp
ret
mov
scas
stos
not
outsb
cmpl
pop
sti
sub
jmp
addb
insb
cmc
loop
fwait
fs
adc
bound
or
ljmp
lret
inc
mov
cli
fdivp
adc
fistl
cs
push
movsl
cmpl
inc
pushf
mov
cmp
hlt
mov
int
fisubl
out
xchg
dec
and
jl
popf
push
cmp
iret
xor
dec
arpl
rcrb
clc
pop
pop
fwait
mov
mov
inc
xchg
dec
push
jno
arpl
dec
pushl
ret
pop
das
push
lret
es
clc
bound
mov
mov
add
mov
sbb
mov
out
lock
jl
push
pop
scas
ret
dec
xor
cmpl
scas
pop
sbb
add
jae
inc
and
arpl
lret
mov
int
jae
sbb
sbb
push
mov
cmp
js
bound
hlt
xor
inc
out
push
xchg
push
stos
and
cmp
mov
jmp
inc
cmp
aad
adc
pop
test
cmp
mov
xchg
push
test
mov
popa
test
mov
sub
fisttps
lret
enter
aad
xchg
xorb
jns
ljmp
inc
xchg
ljmp
pushw
add
stos
mov
pop
or
mov
lea
mov
inc
fcoms
sub
cwtl
loope
pop
jmp
sub
clc
cmp
mov
sub
xor
aas
jnp
shll
in
add
push
paddq
jae
lcall
movsb
push
pop
xor
mov
xchg
out
xchg
hlt
cmpsl
call
out
push
add
inc
jg
mov
movsb
fnsave
aas
cwtl
jecxz
repz
mov
call
les
add
shlb
push
je
push
jmp
popf
mov
dec
xchg
cmp
inc
inc
mov
in
lretw
inc
ror
ret
mov
repz
xor
in
addb
and
xchg
std
or
out
es
out
movsb
xor
sub
repnz
cmpsl
mov
insb
es
mov
sub
lods
enter
sub
shlb
out
cmp
nop
inc
lea
lahf
cwtl
pop
lcall
aam
iret
ljmp
cs
ret
cmp
insb
mov
jne
addr16
jne
sub
jge
mov
jb
mov
les
add
xchg
test
or
dec
es
and
iret
push
xor
loope
sbb
jmp
fcmovbe
mov
je
mov
xchg
xor
jnp
bound
add
add
fwait
rcrl
sub
movsl
fisttps
and
js
mov
call
pop
xchg
cs
mov
imul
cmp
es
aad
ss
xor
ljmp
loop
mov
shrb
lcall
or
imul
popf
cmpl
inc
sub
jge
mov
mov
fcomps
sub
scas
sbb
jecxz
mov
mov
inc
lods
ljmp
or
sarl
and
add
sub
push
jae
jg
sbb
jecxz
xchg
add
push
into
xor
inc
lcall
xor
add
test
or
lret
xor
ret
mov
lret
adc
into
and
fwait
mov
js
jae
mov
in
fistl
push
xorb
fwait
lods
rsm
mov
mov
aas
fcomip
call
adc
cwtl
adc
lret
imul
mov
orl
xor
xorl
dec
xlat
or
das
mov
mov
test
adc
nop
cli
xchg
fcmove
xchg
pushf
in
cmc
daa
lea
test
out
ds
mov
mov
sarb
pop
data16
jb
dec
sub
aad
xchg
arpl
mov
cmp
aad
add
mov
ret
in
xor
pop
ret
aam
ss
adc
inc
push
clc
int
adc
adc
rcll
aas
int
add
or
mov
add
idiv
mov
xor
jle
daa
lds
xor
pop
mov
add
je
and
jno
cmp
fadd
sbb
mov
cmp
divb
bound
out
aas
int3
mov
jo
push
mov
bound
fs
mov
icebp
add
mov
push
fs
jp
xor
lods
jmp
lret
out
fldcw
or
cli
cmp
cmp
imul
sbb
xor
ss
push
dec
jno
das
inc
pusha
das
test
jb
cltd
mov
test
lcall
push
xrelease
roll
dec
ficompl
or
mov
mov
cmpsl
mov
jnp
movsl
mov
in
sarb
lcall
cmp
mov
adc
lods
rcrb
jmp
fwait
dec
scas
addl
jne
fabs
sub
pop
mov
enter
jno
xor
stos
nop
daa
mov
imul
imul
mov
sti
sub
insb
mov
push
shll
or
call
movsb
pop
sarl
xor
jae
incb
cli
dec
or
in
mov
xchg
adc
dec
or
rol
mov
pop
xchg
and
mov
and
scas
roll
imul
adc
sub
mov
dec
pusha
push
push
push
mov
sub
ds
stos
sbb
out
bound
add
adc
push
push
push
cmc
rcll
je
mov
sub
imul
icebp
adc
dec
xlat
sub
add
xchg
shlb
jbe
cwtl
fnstsw
loop
ja
sub
scas
inc
stos
imul
test
shl
aas
in
and
xchg
add
lock
popa
pusha
repnz
cld
push
pop
push
jecxz
shll
xchg
and
repz
adc
or
pop
jmp
les
insb
jbe
mov
jmp
test
push
or
loopne
das
data16
cmpsb
out
loopne
insl
pop
xchg
sar
mov
mov
push
jl
jge
dec
sti
movsl
inc
imul
add
dec
cmp
jl
call
jp
pop
sub
adc
mov
push
lret
mov
and
push
cmp
push
ljmp
loopne
lea
jb
mov
inc
ja
push
xor
lret
jge
push
push
dec
adc
jae
out
lock
lods
dec
lods
pop
iret
mov
movsb
and
int3
data16
lret
icebp
movsb
cmc
fnstsw
out
mov
push
mov
dec
lea
sbb
adc
jnp
xchg
push
xchg
lods
dec
jecxz
dec
push
lds
or
mov
xor
mov
out
xor
fistps
rcl
or
daa
jp
lcall
cmpsb
sub
test
mov
jmp
xor
xor
pop
jg
xor
mov
ljmp
popa
lret
hlt
or
hlt
or
icebp
pop
lock
popf
in
loop
repz
test
push
and
jns
lock
jge
imul
cld
outsl
mov
mov
mov
sbb
fildl
lahf
in
data16
inc
adc
pop
cmp
fnstenv
mov
mov
sbb
fisubrl
mov
pop
les
dec
je
xchg
rorb
pusha
pusha
ljmp
cmpsb
jnp
lcall
inc
push
adc
or
sbb
pushf
dec
sub
xor
push
mov
lahf
je
pop
fcoms
xchg
mov
cs
sbb
mov
push
mov
mov
lods
dec
cmc
inc
sbb
adc
push
cmp
inc
push
push
add
xchg
push
mov
imul
jl
gs
hlt
lods
pop
jo
aaa
fdiv
mov
and
je
test
pop
and
sbb
ljmp
adc
mov
push
movsb
mov
rcrb
add
sbb
or
scas
xor
mov
inc
aaa
andb
push
loope
mov
sahf
mov
add
es
stos
jne
and
stos
es
push
cmp
mov
or
aas
cmpb
push
push
push
mov
pushf
pushf
in
testl
stos
xchg
mov
js
mov
lahf
or
pop
cmp
lret
mov
push
xor
xchg
roll
insl
test
stos
xor
sbb
aas
dec
push
loop
xor
push
mov
inc
cmpsl
cmp
adc
out
cmpb
mov
jge
or
jl
adc
shrl
inc
jae
inc
jns
cwtl
push
scas
ds
test
push
movsbl
sbb
and
and
repnz
sbb
ljmp
dec
push
xchg
cmp
cmpsb
pop
cmpsb
xor
inc
in
sub
mov
int
hlt
cmpsb
ret
push
sub
pop
push
mov
add
xlat
mov
or
cmp
adc
inc
cwtl
jbe
and
icebp
aaa
gs
dec
ss
jo
into
mov
inc
int3
roll
cmp
jno
mov
test
cmp
xor
outsl
xor
mov
jmp
int
jg
popa
mov
cld
mov
sti
out
pop
fcoms
in
dec
rorb
or
ja
or
mov
cltd
pop
mov
in
mov
cli
pop
xchg
cli
fs
xchg
iret
shld
lods
pushf
jp
ljmp
or
jae
cltd
ret
outsl
movsb
cmpsl
into
addr16
out
and
outsb
test
in
sbbl
pop
bound
arpl
aad
pop
sbb
arpl
sbb
pusha
add
mov
getsec
jmp
frstor
mov
cld
mov
sub
dec
lods
jns
jo
mov
daa
sub
and
hlt
adc
pop
ja
mov
and
lods
test
bound
idivl
jecxz
adc
or
sub
adc
mov
add
pop
xchg
flds
rorl
test
inc
movsb
jns
hlt
fiadds
arpl
push
loop
aaa
in
lds
xchg
mov
cmpsl
fcoml
xor
loope
rorl
xchg
pop
inc
lahf
sti
pop
cmp
fildll
or
push
sbb
xor
add
es
sbb
ja
or
xor
xlat
sub
or
or
inc
pop
fdivs
rolb
add
sbb
stos
dec
nop
inc
fmuls
xor
pop
cmp
dec
sbb
sbb
cmc
adc
js
mov
test
mov
fidivrl
add
fs
popf
stos
sub
push
scas
and
push
cmpsl
cmc
or
add
stos
adc
int
test
mov
and
xor
in
pusha
sbb
rcl
push
and
cmp
xchg
outsb
add
std
fdivl
jnp
ficompl
mov
daa
jle
push
push
cmpsl
push
or
cwtl
push
andb
and
mov
adc
mov
sarb
or
inc
push
jnp
sub
and
shrl
adcl
cmp
lods
and
dec
in
or
insl
mov
add
sti
stos
jmp
leave
daa
and
ljmp
pop
sbb
imul
mov
ret
push
sbb
imul
test
cmp
cmp
push
inc
jp
push
mov
ss
pushf
xor
repnz
clc
mov
fmull
push
add
and
pop
mov
jae
xchg
insl
cmc
push
clc
sub
loopne
leave
jl
cmpsb
lea
fs
xchg
push
pop
lret
int
or
xchg
jp
es
pop
dec
add
mov
repnz
dec
mov
inc
xor
pop
lahf
and
inc
hlt
inc
pop
scas
pop
cwtl
jae
pop
rorb
test
aas
loopne,pn
scas
stos
inc
cmpl
cmp
cli
aaa
cli
movd
stos
jl
jg
xor
add
movsl
pop
out
imul
push
loope
lea
xchg
dec
nop
inc
jo
inc
inc
mov
repnz
xchg
mov
push
lock
movsb
sub
repz
outsl
ljmp
push
rcll
add
sub
test
jne
jne
and
out
cmp
bound
mull
mov
cmp
pop
jne
scas
repz
in
cmpsb
rcl
jbe
mov
into
jb
lea
mov
std
lea
pusha
and
adcb
adc
out
xchg
mov
jmp
push
fstl
inc
ret
and
loopne
das
aam
js
aam
out
sub
pop
pusha
adc
fisubl
repz
inc
push
pop
fcompl
push
mov
inc
jb
push
mov
sub
cltd
xchg
lock
inc
mov
les
cmp
es
mov
in
sti
es
loope
les
and
ljmp
or
cmp
add
roll
mov
out
lea
test
mov
aad
aas
popa
inc
jb
test
fs
in
pop
int
pop
push
mov
rorl
push
pop
dec
mov
test
xchg
mov
push
jp
ds
pushf
and
mov
mov
xor
jmp
sbb
mov
push
sbb
xchg
outsb
cmpl
into
ljmp
rcr
imul
add
push
push
daa
xchg
rcrl
test
movb
sarl
int3
test
xor
add
push
jb
lcall
mov
jnp
dec
xor
mov
add
cmp
scas
nop
das
cmpl
sbb
sarl
jb
mov
push
mov
push
xor
in
mov
jb
dec
mov
mov
shrb
lahf
jmp
dec
hlt
outsb
or
jp
lds
add
cmp
out
sbb
xchg
pop
inc
outsb
lods
or
push
lea
rcr
pop
bound
mov
decl
insl
mov
push
outsl
imull
ss
xchg
mov
bound
push
outsb
cwtl
jle
inc
xchg
push
js
dec
sbb
popf
mov
jmp
inc
mov
pop
cmp
push
fidivs
jmp
stos
test
xor
cld
push
jmp
test
notl
lods
test
inc
sub
sbb
ljmp
cmc
es
cmp
add
cmp
test
hlt
dec
sbb
cmpsl
sbb
sarb
mov
ror
or
dec
mov
loopne
pop
scas
push
sub
xor
mov
pop
adc
dec
fnstenv
xchg
scas
add
pop
pmaxub
sub
sahf
and
and
xor
rorb
push
jo
lock
cmp
mov
ljmp
push
add
stos
xor
mov
das
rcrl
mov
jnp
addl
hlt
and
lods
dec
xor
push
xor
sbb
add
fucomi
push
sub
inc
pop
fimull
cwtl
mov
pop
scas
and
pop
addr16
shll
cmp
repz
and
adc
mov
mov
pop
pop
fwait
adc
in
sub
xchg
pop
dec
xchg
push
shlb
or
ret
mov
cmp
push
ret
and
inc
push
sbb
mov
pop
push
mov
out
cli
in
pop
and
xorl
enter
and
mov
ret
pop
mov
dec
fs
lods
ja
loopne
inc
pop
cmp
xor
aaa
push
lcall
arpl
fistps
mov
imul
ret
dec
dec
lret
push
ret
mov
cmpsl
insb
nop
sub
sbb
inc
daa
cbtw
movsl
lcall
sbb
insb
sub
cmp
enter
dec
out
test
fidivl
jge
jns
cwtl
popa
shll
scas
cld
mov
gs
sub
imul
and
cmp
icebp
nop
scas
sbb
or
adc
outsb
idivb
xchg
dec
cmp
pop
add
movsl
xlat
mov
sahf
arpl
bound
mov
pusha
jge
push
loope
add
test
fstpt
mov
mov
adc
imul
data16
andl
push
outsl
pop
shr
out
gs
adc
xchg
insl
xchg
aaa
sbb
subb
pushf
push
stos
or
mov
outsl
xchg
adc
push
push
inc
int
mov
es
js
iret
in
popf
repz
insl
and
daa
aam
pop
aas
cld
lock
and
test
inc
adc
sub
push
dec
or
or
xchg
addr16
rcll
imul
mov
adc
jmp
mov
repz
scas
out
push
aaa
mov
adc
addr16
pop
add
clc
in
not
or
cmp
fmulp
and
arpl
sub
inc
stos
lods
mov
or
push
adc
fs
or
into
fstpl
inc
jne
bnd
nop
pop
shll
xchg
adc
xchg
je
mov
or
cmp
out
mov
mov
jae
inc
xlat
dec
insb
scas
xchg
xor
jbe
test
mov
rorb
mov
pop
sar
or
hlt
in
push
hlt
xchg
xlat
push
leave
sub
rcrl
jno
je
scas
and
push
enter
cs
stc
and
insl
xchg
mov
mov
call
push
fdivrl
add
sub
inc
cmc
and
lock
jle
sarl
sbb
or
ja
pop
stc
ret
or
xor
std
imul
push
xchg
pop
jg
test
pop
sbb
or
mov
stos
lds
scas
jne
sarb
jno
adcb
mov
mov
xor
sti
push
mov
dec
mov
pop
notl
jl
dec
jns
filds
inc
xor
sbb
pop
sub
sarl
fs
dec
loop
cmp
mov
sbb
xchg
daa
mov
ja
adc
insb
mov
inc
pop
fisttpl
xchg
jp
sub
xor
out
in
inc
inc
cmp
pusha
push
ficoms
test
mov
mov
movsb
dec
inc
stos
mov
mov
cltd
jp
out
adc
hlt
cmpsb
mov
mov
sbbb
adc
lret
leave
lock
xor
outsb
enter
iret
ret
lods
loop
addr16
fstl
pop
les
push
mov
jo
and
or
mov
xor
mov
add
sbb
movsl
fsubr
or
sub
cld
cmc
call
bound
iret
cmc
mov
xor
push
jnp
in
push
test
xor
jle
fcompl
pop
rcr
repz
pop
loope
cmp
push
mov
jge
jns
jae
xor
aas
mov
or
add
lea
lds
cmp
repnz
aad
in
xor
push
mov
loopne
mov
mov
and
push
sti
sub
pop
mov
hlt
shl
in
push
dec
pop
pop
push
dec
inc
mov
in
imul
test
mov
lret
sub
adc
dec
mov
test
mov
mov
rorl
in
aas
clc
mov
push
aas
sahf
in
insl
mov
mov
mov
lret
xor
sbb
loop
insb
pop
sbb
cld
out
xchg
jo
out
mov
aad
adc
cmp
xchg
fistps
xchg
repz
cli
addr16
mov
xchg
scas
push
cmpsl
nop
in
mov
push
aam
icebp
je
fistpll
sub
add
push
std
sbb
sbb
stc
mov
dec
xor
mov
pushl
das
jge
fstl
out
xor
push
mov
push
arpl
cmp
cli
insl
mov
pusha
je
dec
cmp
mov
xchg
popf
das
pop
fnsave
outsl
push
and
add
andl
jb
mov
lahf
cwtl
or
fnstcw
dec
jmp
push
push
pop
add
mov
push
jne
ljmp
pop
jl
scas
and
jge
fs
mov
aas
pushl
xchg
inc
es
mov
and
loop
inc
fnstenv
xchg
add
add
xor
dec
arpl
shrl
fidivrl
mov
popa
jp
arpl
rorl
cmc
push
cmp
lds
inc
lcall
mul
and
jmp
flds
lahf
or
sbb
les
ds
xchg
pop
repz
mov
out
addb
jl
mov
xchg
popf
xor
mov
lret
add
and
jg
jg
sbb
xchg
add
ror
out
ficoml
sub
outsb
scas
or
sbb
scas
daa
mov
or
outsb
mov
sti
sub
shl
fwait
adc
fcos
xlat
gs
push
popa
loope
pushf
test
push
pop
aam
call
in
xor
dec
add
std
pop
mov
rcrb
ret
nop
movsl
adc
popa
add
fadds
push
inc
inc
jbe
mov
repnz
lret
jge
sahf
fistpll
pop
push
out
insl
dec
push
cli
cmp
push
aaa
in
jbe
mov
adc
or
adc
inc
adc
cs
inc
mov
mov
nop
mov
scas
repnz
lods
push
mov
push
and
loopne
mov
imul
mov
xor
mov
js
mov
cmp
lcall
cmpl
pop
sub
ret
xor
sahf
mov
mov
jbe
jnp
faddl
lret
jno
clc
cmp
daa
dec
push
jg
and
pop
pusha
repnz
xchg
cmpsl
loope
or
roll
or
test
fisubs
dec
int3
or
test
jmp
jecxz
into
aaa
and
shrl
data16
repz
subl
out
lods
inc
shll
and
test
int
js
idivb
sar
xchg
fstl
push
xorb
sbb
fisubs
push
xor
pop
movsl
ret
imul
fistl
popa
xchg
into
in
jle
dec
adc
jb
int3
out
test
and
jmp
push
mov
cli
pop
jle
movsl
adc
arpl
scas
int3
pop
sar
ret
sub
sti
in
lods
arpl
cltd
push
dec
pop
inc
lcall
lea
aas
push
cmp
divl
movsb
adc
sarl
jmp
mov
dec
jl
lahf
mov
mov
xchg
pushf
shll
outsl
pop
out
stc
cmp
inc
jg
sbb
sbb
int
fdivrl
xlat
xor
sar
xchg
popf
and
mov
pop
adc
sahf
aas
or
fldl
hlt
or
test
sbb
ret
scas
and
xor
adcb
pop
sbbl
push
adc
adc
call
mov
inc
cltd
mov
and
mov
xor
or
movsl
mov
movsl
ds
lea
xchg
push
sub
lock
sub
insb
loop
call
out
mov
imul
lret
push
decb
shll
lock
fildll
mov
lods
into
sub
xor
lahf
and
lock
mov
inc
mov
pushf
cmp
jge
decl
gs
popa
test
fisttpll
cli
inc
dec
jae
mov
sub
xor
mov
sub
int
push
xchg
sbbl
pop
stc
add
pop
mov
adc
fmulp
jne
cld
xor
xor
adc
mov
cltd
mov
fldt
ss
pusha
push
jb
iret
movsb
je
and
mov
push
cmpsb
out
push
cmp
out
fiadds
insl
lods
xchg
or
icebp
fdiv
or
sbb
dec
sbb
aas
push
xchg
fcomps
fimull
or
cmp
add
push
xchg
pop
adc
dec
cli
test
mov
mov
bound
jne
xor
add
aaa
pusha
dec
pop
stos
dec
add
int
mov
lods
jg
ds
jle
into
test
data16
and
inc
mov
test
cwtl
insl
aaa
pop
sub
push
mov
scas
lods
jo
leave
xlat
jne
push
loope
dec
jo
xchg
or
inc
hlt
je
add
cmp
fwait
loopne
inc
jmp
lahf
popf
add
cwtl
popa
hlt
xor
scas
mov
sahf
dec
adc
cmp
add
jge
repz
es
sub
mov
pop
jo
int3
and
jne
xor
inc
push
push
and
ds
fstpl
ret
popa
push
outsb
jns
inc
jnp
aas
add
nop
faddl
jp
test
or
clc
xor
xor
inc
inc
mov
stos
rcll
adc
xchg
mov
cmp
add
push
clc
adc
bound
mov
pop
and
fistps
hlt
scas
xchg
inc
push
xor
das
add
andb
push
and
fs
add
popf
into
std
sub
stc
ffreep
mov
push
fs
push
stc
cmpsl
imul
jg
pop
xchg
cmp
pop
jge
pop
stc
leave
jnp
mov
inc
stos
into
jo
test
ret
mov
mov
test
push
xchg
xlat
or
mov
sahf
inc
pop
xchg
jno
pushw
xchg
nop
jns
fs
imul
mov
xchg
xor
pop
cli
out
sti
aam
nop
in
jl
dec
enter
aaa
fistps
push
and
and
sbb
cmp
jnp
xchg
punpckhdq
mov
pop
mov
loopne
in
inc
xchg
inc
leave
mov
inc
mov
mov
inc
aaa
aam
int
int
mov
fwait
shll
adc
test
sbb
les
mov
std
cmp
jge
sbbl
push
hlt
adc
xor
mulb
or
or
addr16
jns
sti
and
stos
jmp
mov
rdmsr
cmp
add
and
mov
xor
mov
outsb
outsb
aas
sahf
lods
loopne
xchg
jo
jo
mov
cmpsb
xchg
jmp
insl
scas
scas
clc
xor
std
divl
out
adc
dec
nop
xchg
push
jb
push
icebp
ret
notl
cs
jns
mov
xor
scas
push
sbb
outsl
dec
dec
pop
cltd
test
inc
ficompl
fdivs
lods
pop
int3
fdivrl
add
add
arpl
mov
faddp
lahf
mov
lock
sbb
mov
jo
scas
jp
add
jbe
dec
popf
sahf
scas
inc
scas
mov
lret
push
shll
movsl
sub
loopne
lret
sbb
mov
add
dec
out
lds
insl
mov
lahf
dec
das
ja
or
mov
fstps
sar
xchg
arpl
xor
or
int
mov
push
push
fidivrs
mov
mov
xchg
and
cltd
ss
icebp
adc
data16
dec
sbb
scas
scas
jnp
add
scas
dec
jl
in
fstpt
stos
jl
or
repz
sbb
sbb
fcoml
xor
mov
inc
dec
adc
pop
xchg
xchg
dec
gs
dec
push
fcomps
jge
mov
inc
mov
cmpsb
push
mov
xchg
inc
in
das
mov
push
mov
mov
nop
pop
arpl
cmp
icebp
sbb
jne
mov
adc
inc
jecxz
lahf
or
dec
rorb
add
jle
dec
push
sbb
push
or
sti
mov
sub
lods
jp
cmp
add
in
out
shld
js
cwtl
pop
sbb
adc
into
pushf
repz
arpl
xchg
cmpsl
es
mov
lahf
mov
push
movsb
pushf
cltd
pusha
adc
cmp
and
leave
dec
clc
cmpsb
inc
push
loopne
das
insl
dec
aas
dec
sti
sub
int
or
cmp
xor
dec
bound
xchg
nop
ret
mov
and
push
dec
insl
aas
xchg
shl
add
iret
and
inc
ret
fisubl
bound
sarl
and
ja
jae
or
stc
pop
push
aaa
dec
mov
and
xor
pop
das
call
fidivrs
inc
inc
inc
jl
loop
and
scas
and
icebp
enter
push
sbb
adc
jns
cmp
movsb
in
mov
btcl
fidivrs
mov
and
scas
xor
lahf
pop
fmulp
pop
popf
jp
lahf
outsl
jge
adc
fadd
cs
or
rolb
sbb
and
pop
pop
inc
std
push
mov
or
push
lock
out
mov
call
cmpsl
inc
xchg
jae
loopne
enter
repnz
or
imul
mov
xchg
repz
push
jne
push
bound
xchg
and
loop
ljmp
jo
pop
movsb
cli
dec
adc
pop
icebp
insb
ja
and
out
push
insl
xor
xchg
mov
jb
sub
sarl
dec
adc
pop
push
dec
shll
pushf
and
sub
scas
pop
aas
sub
jecxz
mov
int3
xlat
into
mov
jl
call
pusha
push
xor
push
sub
scas
lcall
les
sarb
insb
sub
rcl
ljmp
repnz
mov
aaa
pop
call
push
movsl
cmp
pop
int3
ficoms
inc
jnp
and
enter
mov
adc
out
xchg
fs
mov
movsb
imul
scas
sub
inc
int3
adc
pop
mov
fcos
jns
sbb
cli
add
cltd
ja
adc
cmpl
mov
lcall
dec
imul
dec
jae
ret
addr16
insl
pop
repz
aaa
jg
mov
cltd
xchg
inc
in
jbe
lods
or
cmp
sahf
pop
out
lcall
xor
dec
mov
movsb
xorl
add
scas
jl
shl
cmp
stos
mov
ret
push
mov
mov
cmp
scas
imul
sub
ja
test
ljmp
pop
orb
cmpb
cli
clc
cmp
cmp
fildl
mov
nop
lods
or
test
fdivl
mov
cmpl
add
addr16
in
push
cmpsl
jb
cmp
fstps
sub
sbb
cmp
xchg
push
jmp
shlb
popf
out
lods
sub
push
nop
andb
lcall
xor
xor
dec
pushl
sub
int3
pop
sub
pusha
insl
jg
sub
movsl
push
mov
inc
add
inc
mov
mov
pop
fistps
cwtl
and
and
cmp
cmp
pop
inc
push
out
mov
lds
cmp
ror
das
pop
call
outsb
cmpsb
add
cwtl
xchg
scas
leave
cltd
nop
sub
pusha
xor
and
arpl
test
movsl
xor
push
cli
xchg
cmp
xchg
les
inc
mov
mov
repz
or
movsb
lock
xchg
popa
je
push
in
pop
ret
std
lea
or
icebp
ds
pop
mov
dec
mov
pop
or
sbb
dec
addb
ds
or
mov
push
push
fcom
frstor
inc
pop
mov
mov
push
sub
mov
and
ds
icebp
dec
jno
std
lods
fstps
jnp
lahf
cld
and
test
les
push
loop
loop
pop
xchg
into
lods
dec
fbld
add
jle,pn
xor
cmpsl
dec
dec
and
insl
cwtl
pop
dec
test
xchg
pop
nop
pop
jle
bound
xchg
roll
add
xor
xchg
ret
cltd
mov
popl
frstor
sbb
popf
mov
rorb
in
jb
loopne
push
rolb
mov
xchg
inc
movsl
cmpsb
xchg
stos
popa
int3
mov
sahf
xlat
fsubrp
xchg
adc
iret
sti
jmp
jnp
pop
push
test
divl
push
cmpsb
mov
xor
xor
push
pop
lds
sbb
dec
data16
int
mov
push
xor
lret
stc
jb
lock
jae
ja
inc
ljmp
paddusb
sub
push
repnz
mov
mov
inc
movsb
push
dec
imul
sub
bound
mov
ret
lret
cmp
cmc
cmp
mov
pop
jno
or
test
xchg
ds
cld
test
pop
add
mov
imul
rcrl
popa
xchg
pop
xchg
cltd
jae
enterw
sbb
mov
test
xchg
mov
js
js
push
ja
mov
repz
push
xor
clc
push
popf
lock
cmc
sarb
call
ja
in
addr16
pop
ret
ror
fcmovne
scas
fldcw
aas
rcrl
ljmp
adcl
inc
sahf
mov
mov
rep
cwtl
dec
mov
lock
push
sub
pop
repz
sub
sub
in
xchg
and
mov
cld
and
dec
cmp
mov
ss
outsb
scas
outsl
jmp
push
and
loop
xor
fsubl
shlb
popa
dec
add
pop
dec
iret
lret
or
lock
stc
aam
psubw
pushf
jl
pop
loope
cmp
jmp
xchg
add
xchg
loop
mov
mov
pop
add
js
pop
add
insl
push
dec
lods
out
repnz
pushf
sbb
mov
or
incb
clc
js
xchg
xchg
sbb
stc
inc
negb
pop
aas
sbb
jb
into
sub
xchg
lds
ret
dec
bound
shll
xor
fdivp
ja
frstor
fwait
adc
cltd
add
pop
mov
loopne
es
jo
fstl
pusha
mov
inc
push
adc
push
mov
rcr
push
push
cmp
mov
pop
test
daa
cmpsl
in
negl
in
mov
int3
or
fxch
shll
mov
test
andb
scas
mov
xchg
jl
notb
jae
pushf
pop
mov
cwtl
adc
xchg
pop
es
inc
scas
mov
jle
inc
add
jo
insb
cmp
add
dec
add
repz
pop
imul
and
cmp
orb
sahf
cmp
jno
aad
dec
cld
scas
inc
cmp
adc
imul
jb
stos
jmp
int3
pushf
subl
ljmp
dec
scas
xor
arpl
mov
pop
je
loop
popa
out
popa
ja
nop
mov
push
mov
dec
lret
adc
sti
loopne
lret
xchg
aaa
push
sahf
shrl
cmp
stos
mov
push
pusha
je
js
mov
pop
popf
cli
in
ljmp
ss
jns
fs
popa
mov
imul
add
inc
push
std
outsb
ror
mov
addb
mov
jmp
rclb
push
and
rclb
xchg
hlt
push
arpl
rcl
adc
xor
fisubs
fistl
fimull
jbe
jle
lcall
dec
sbb
xchg
fs
insb
in
mov
pusha
test
movsb
out
dec
mov
fld
jnp
adc
mov
sbb
enter
insl
lahf
sbb
xchg
add
mov
pop
mov
ljmp
loope
and
cwtl
mov
fisubs
push
nop
ret
cmp
subb
rolb
add
sti
insl
sahf
and
jge
neg
push
dec
lcall
push
xor
ds
jl
mov
imul
inc
push
or
push
push
mov
in
fldcw
lds
dec
push
fs
out
and
dec
das
movsb
in
jo
das
bound
and
stos
lcall
push
leave
inc
push
mov
ficompl
test
fadds
xor
xchg
jae
fcmovnb
dec
or
push
mov
jge
jl
push
test
loopne
es
int
pop
pop
xorl
push
jnp
jge
stc
jmp
les
repnz
cmp
in
xchg
adc
xchg
movsl
in
add
push
nop
frstor
or
stos
mov
in
aam
es
pop
xchg
mov
xchg
and
jp
jb
aaa
push
std
or
enter
movsl
mov
jecxz
inc
dec
lret
sbb
scas
sub
sbb
mov
xchg
xchg
xor
jg
xchg
inc
lret
mov
test
in
sbb
sbb
aas
mov
mov
mov
cmpb
mov
inc
and
mov
lahf
xor
inc
mov
xchg
test
out
out
addr16
insb
jmp
movsl
das
scas
stos
pop
xor
push
adc
int3
add
mov
gs
out
mov
ljmp
add
test
ja
pusha
mov
pop
sub
cmp
lods
xchg
loop
cld
pop
popa
jne
adc
pop
xchg
pop
movsb
pop
adc
fdivr
test
push
testl
pop
rcl
jo
mov
sub
hlt
jo
mov
mov
mov
xchg
dec
ljmp
push
push
andl
cmpsb
dec
mov
loopne
aaa
and
sub
test
pop
xchg
jae
sbb
scas
mov
outsl
sub
jge
es
sub
movsl
push
sub
in
test
in
test
or
fistl
aad
dec
and
mov
push
inc
inc
mov
xchg
imul
sub
inc
mov
pusha
sub
push
mov
and
push
movsb
dec
jbe
lock
shll
push
pushf
xchg
cmpsl
stos
mov
cmpsb
les
jb
enter
scas
jns
inc
insb
ret
shrb
adc
jp
jb
lea
jp
mov
in
xchg
sub
cmpsb
in
ficomps
lcall
and
in
cmp
pop
xchg
inc
mov
repnz
push
orl
cli
add
jbe
lock
xor
stos
dec
imul
sbb
enter
test
mov
inc
xchg
pushf
inc
cmpsl
pop
stos
ja
mov
pop
pop
push
sbb
sti
xchg
add
xchg
ss
pop
popa
outsl
cmc
loope
stc
jge
dec
lret
outsl
jle
sbb
mov
sahf
out
sbb
daa
xchg
and
push
hlt
int3
dec
repnz
inc
out
xchg
imul
stos
aas
cmp
lea
in
outsb
leave
jge
stos
mov
es
sbb
icebp
cmp
testl
cmpsl
jnp
lret
xlat
dec
mov
lret
lret
aam
std
jmp
push
leave
push
add
lahf
ljmp
mov
xchg
add
pop
and
jo
fldenv
out
ret
fs
mov
nop
mov
andl
jno
mov
xchg
insb
mov
insb
xabort
mov
cld
xchg
cmp
lret
imul
xchg
fsts
dec
pop
ds
data16
stc
aaa
mov
mov
add
adc
xchg
je
daa
jecxz
pop
aas
lock
pop
leave
fdivr
ret
sbb
loop
ss
out
movsb
xchg
add
dec
movsb
push
xor
fcoml
adc
adc
sub
pop
test
repz
inc
mov
aaa
lods
mov
pop
cmp
in
add
cmp
xlat
sub
xlat
je
jnp
mov
out
mov
insl
stos
stos
push
mov
lods
jne
mov
inc
sti
enter
loopne
adc
sahf
insl
add
mov
sbb
dec
movsb
ljmp
push
stos
sahf
ret
shrl
cmp
test
ja
shrb
stos
fldt
xor
test
pop
negb
xor
sub
aaa
outsl
dec
push
sbb
loope
jno
mov
adc
fwait
xchg
fcompl
imul
jmp
sbb
arpl
xchg
xchg
outsb
fdivr
movsl
cmp
adc
jo
movl
or
adc
add
xchg
add
cmp
insl
fcomp
repnz
or
mov
lds
es
ret
jb
sub
xor
push
xchg
add
mov
push
mov
cmp
outsl
pop
gs
stc
pusha
into
xchg
js
mov
push
lcall
xchg
xchg
cmpsl
loop
jae
and
in
lret
mov
mov
mov
arpl
out
mov
fsubrl
mov
scas
jecxz
mov
and
mov
sub
or
sarb
mov
or
pop
test
sub
sub
scas
adcl
inc
in
outsb
inc
rol
or
pop
in
mov
and
pop
std
mov
jns
xor
and
jp
mov
ljmp
icebp
mov
insl
sbb
fisubl
lods
leave
cmp
xor
jne
stos
adc
ja
int
mov
mov
xchg
sbb
loop
xor
xchg
insl
call
and
es
je
sub
sub
and
in
jl
adc
mov
or
push
push
in
inc
xchg
or
jae
push
fsubs
out
lock
sbb
sub
adc
rcr
mov
shrb
push
enter
pop
movsl
scas
fwait
inc
sub
bnd
inc
adc
dec
sbb
pop
jg
mov
mov
add
hlt
xor
jg
jb
js
or
repnz
jge
lods
mov
adc
jecxz
out
pop
cld
pop
bound
in
push
sub
call
mov
adc
inc
jp
sub
jp
pop
out
fmul
icebp
aam
in
test
das
mov
jo
cld
stos
les
cmp
sub
outsb
add
and
jnp
imul
dec
xor
cltd
pop
mov
iret
les
popa
push
fwait
lds
cmp
inc
mov
mov
shlb
sti
rcll
fcmovbe
jmp
or
mov
stos
scas
mov
aad
mov
cmp
divb
fcomps
ret
lret
cmpsl
jns
hlt
fdivrl
inc
dec
xchg
rolb
pop
sbb
movsl
push
out
xorl
mov
nop
je
mov
jmp
push
push
sbb
pop
test
psubsb
shll
rcrb
adc
stos
enter
sbb
ficoml
loope
push
es
and
ja
es
jecxz
xchg
inc
pop
mov
or
sub
mov
into
test
stos
lret
popa
xor
mov
es
js
mov
pop
sti
loop
push
mov
mov
daa
xchg
mov
out
popa
stos
int3
add
push
into
pop
pop
jae
mov
mov
push
mov
ret
leave
rsm
mov
in
int3
and
cltd
dec
mov
pop
sbb
js
mov
xchg
loope
jno
imul
jmp
into
lock
pause
push
ret
jl
loope
mov
mov
mov
popa
cmp
mov
jp
sub
movsb
inc
loop
sbb
xchg
inc
mov
test
popl
jo
inc
mov
and
dec
insl
cmp
lahf
daa
movsb
mov
cmp
pop
subb
aaa
push
mov
shrl
fnstsw
imul
xchg
fadd
and
add
ret
lock
mov
aaa
in
mov
sbb
sarb
sbb
inc
pop
lahf
hlt
cwtl
cwtl
cmp
pop
pop
and
jg
jb
mov
ljmp
pusha
or
sub
or
xchg
stos
aam
jmp
mov
out
xor
imulb
cmp
gs
aas
mov
pop
push
xchg
mov
popa
lea
aad
cmpsl
std
arpl
and
inc
enter
mov
sbb
aad
in
dec
icebp
dec
push
call
xor
leave
xor
cmc
xchg
mov
sub
aaa
mov
std
lods
push
jnp
test
pusha
push
mov
push
je
push
hlt
and
jp
mov
add
arpl
rclb
and
scas
mov
adc
gs
jmp
xchg
dec
scas
add
pop
jbe
andl
scas
xchg
jg
fisubrl
lahf
jo
lret
jge
adc
dec
fcompl
adc
and
jp
fisttps
jl
jecxz
xor
mov
icebp
int
adc
sarl
fimull
lret
mov
jle
je
mov
insb
int
xchg
sbb
xchg
or
dec
xchg
scas
cwtl
les
decl
jno
jmp
mov
movsb
mov
xor
fcompl
lcall
cmc
and
xchg
ss
loopne
ljmp
insb
jp
lock
adcl
aad
sbb
or
rorl
ret
sub
lahf
push
pop
pop
fucomp
push
loope
jp
scas
or
dec
fwait
mov
inc
xchg
jno
js
fdivl
ret
mov
push
push
cmp
rcll
fists
jo
mov
outsl
dec
imul
fwait
arpl
mov
bound
rcrb
cmp
push
dec
lods
dec
mov
mov
es
pusha
cwtl
ficomps
jbe
outsb
push
sub
stos
mov
dec
out
mov
addb
cmp
call
mov
mov
sub
or
popf
xchg
cli
mov
and
adc
push
rcl
mov
ret
mov
insl
and
dec
fwait
in
cmp
xchg
decl
cmp
mov
lret
jb
into
or
in
mov
jae
jnp
mov
mov
cld
mov
ja
call
stos
pop
cmpsl
jl
ds
insl
daa
jecxz
sbb
arpl
mov
jmp
xorl
and
pop
aad
xor
mov
sbb
mov
shrl
lock
or
sub
movb
fistl
sub
jo
fidivrl
add
cmp
testl
std
xchg
ret
repnz
orl
enter
jle
xchg
adc
or
mov
adc
pop
add
push
mov
xlat
cmp
pop
add
fiadds
bound
mov
sahf
das
mov
cmc
add
mov
pop
mov
mov
mov
adc
add
cmpsb
push
cltd
leave
mov
mov
arpl
shrl
or
jmp
jmp
cmp
pmaxub
xchg
mov
mov
outsl
test
ljmp
out
cmp
push
repz
rcrl
repnz
xor
inc
pop
fwait
sbb
jo
inc
push
in
push
push
mov
fisubs
and
adc
and
aas
xlat
or
mov
fdivp
outsb
dec
push
insl
push
stos
jo
aam
jnp
in
sub
ret
inc
xchg
int
adc
fimull
lret
and
jns
mov
cs
jbe
pop
test
inc
loop
js
iret
cmp
scas
lds
xchg
add
cmpsl
push
in
xchg
push
dec
je
xor
ret
mov
jg
in
inc
loopne
sbb
jl
pop
mov
arpl
stos
ficomps
cmpsl
insl
fdivl
mov
into
and
xorl
sbb
mov
jne
lret
mul
xor
mov
nop
push
orb
mov
jge
cmp
jb
cmc
add
mov
fdiv
jnp
adc
enter
cmp
mov
cmp
jno
out
jo
pop
fsubs
jle
dec
xchg
sub
and
pusha
fists
mov
mov
lcall
lock
das
addl
das
imul
and
dec
and
bound
cmp
mov
dec
xchg
scas
pop
es
divb
scas
sub
pop
dec
lock
jnp
xor
xchg
divl
sub
les
iret
stos
adc
shll
ret
push
out
pop
icebp
insl
mov
clc
sub
lock
incb
jnp
lret
pusha
cmpsl
and
mov
pusha
add
outsl
cmp
sbb
xchg
call
mov
or
pop
aas
xchg
inc
mov
cmc
insl
inc
fwait
insb
mov
lret
daa
cltd
inc
ret
push
ljmp
into
mov
shlb
jne
in
mov
sbb
scas
adc
inc
jno,pt
and
pop
mov
or
std
imul
push
xor
into
test
int
mov
hlt
addr16
out
add
cwtl
add
jg
in
stc
notl
mov
loopne
ficoms
jmp
dec
mov
mov
push
es
stos
push
adc
xlat
xchg
jmp
mov
and
pushf
sbb
adc
fstpl
lahf
fdivrs
loopne
xchg
notb
add
inc
mov
sub
sub
mov
add
iret
outsl
bnd
mov
xchg
jbe
mov
ret
out
or
fwait
int3
out
pop
pop
pop
inc
or
dec
pop
fstpl
ror
fldenv
push
add
mov
aad
fcomps
or
adc
insl
mov
js
adc
jb
out
stos
outsb
shrl
xor
pusha
sahf
mov
outsb
mov
fld
pop
loop
mov
ret
mov
jno
ret
daa
pusha
inc
pusha
push
outsl
dec
xchg
jmp
xchg
xor
lcall
outsb
cmp
pop
sub
inc
lea
add
cmc
cltd
in
ret
jmp
push
push
or
mov
or
movsb
sub
dec
sub
or
mov
ret
push
orb
mov
jmp
sub
cs
and
push
mov
mov
inc
push
jecxz
mov
sarb
sub
push
out
sub
push
mov
ror
xchg
mov
push
mov
and
xchg
rolb
adc
js
fiadds
dec
les
mov
inc
jl
pop
sub
cs
mov
andl
inc
je
inc
stos
repnz
in
cmpsl
xchg
jno
pop
repnz
sub
jmp
cmp
xlat
cmpsl
frstor
mov
mov
xchg
cld
pop
pop
aad
mov
mov
add
imull
shll
mov
gs
pushl
or
mov
in
stos
mov
or
enter
js
sub
fcoml
push
out
movsb
sbb
aad
push
stos
les
scas
xchg
in
pushf
divl
push
mov
add
mov
insb
aas
dec
xchg
mov
xor
aad
lea
mov
fdiv
aad
pop
lds
ja
insb
aas
fmul
inc
lods
in
dec
insb
cmp
adc
cltd
cmpl
add
push
sbb
stos
fmull
mov
adc
lret
cmp
jne
push
ror
jp
roll
ja
sbb
fndisi(8087
in
dec
fdivl
push
or
outsl
xchg
push
pop
int
xchg
movsl
sbb
mov
aaa
and
movsl
sbb
xchg
shlb
and
sbb
or
jo
xor
xchg
xchg
sbb
loope
cmp
pop
roll
loope
out
dec
jmp
testl
lock
mov
sahf
insb
pop
imul
push
jle
jb
fiaddl
lods
sbb
mov
out
mov
out
jb
test
jge
insl
imul
stos
adc
icebp
or
outsb
icebp
aas
addr16
sbb
imul
pop
xchg
lods
mov
out
jmp
add
push
or
testb
or
xchg
mov
lock
repz
scas
xchg
call
inc
mov
sarl
push
pop
jp
shrl
inc
imulb
adc
gs
mov
push
ficomps
roll
xorb
rcll
addr16
sbb
lds
cs
cmp
inc
decl
clc
aam
gs
fdivs
lahf
push
push
xlat
sub
pop
sbb
aas
das
movsb
jno
ja
aam
cld
std
mov
jp
lods
out
test
or
dec
xchg
jnp
adc
and
pop
pop
sub
test
je
lret
test
inc
sub
ja
popf
mov
cld
cltd
or
pop
xchg
fstpt
dec
xor
in
cld
scas
pop
cld
inc
adc
pusha
sbb
insb
out
out
or
lcall
mov
mov
pop
push
sub
sub
mov
into
lock
lea
and
and
push
mov
cs
leave
dec
idivl
ffreep
loopne
push
notl
push
clc
add
xchg
jbe
push
mov
icebp
mov
clc
push
add
sub
mov
testb
cld
push
inc
out
aad
cwtl
nop
sbb
lock
and
in
and
fcmovbe
test
in
lret
enter
ljmp
int3
rcl
sub
iret
lret
scas
aaa
stos
pop
and
mov
les
xchg
inc
lods
lret
xor
sahf
sbb
xchg
lcall
imul
outsb
cld
mov
pop
aad
adcl
ja
push
in
ret
xor
pop
lods
daa
push
push
lods
mov
shl
cmpsb
pop
mov
add
call
cmp
adc
out
mov
xchg
scas
jmp
pop
dec
pop
and
popa
xchg
add
dec
mov
jne
es
aad
jne
imul
aaa
in
out
loope
adcb
mov
jp,pt
cmp
pop
jo
xor
xchg
iret
lahf
and
sub
cld
test
lods
movsl
xchg
and
xor
dec
add
push
fs
pop
data16
mov
sarb
sbb
shlb
cmp
push
xor
aam
cltd
sub
ficomps
mov
sub
lds
mov
jae
inc
adc
jne
xor
fwait
pop
jmp
and
push
mov
cmp
ds
sbb
mov
cmpsl
mov
mov
das
lock
add
cmp
pop
inc
ret
leave
jb
aaa
leave
daa
push
fs
add
and
or
popa
jno
or
sahf
sub
add
repnz
insb
and
push
push
lds
push
int3
frstor
cld
xchg
adc
mov
fimull
pop
jp
pop
mov
xchg
out
sub
fldcw
in
hlt
cmp
outsl
test
lahf
stos
loopne
flds
jge
pop
inc
push
out
mov
stos
xchg
ljmp
std
push
icebp
dec
dec
shlb
push
adc
jne
mov
pop
gs
adc
xchg
movsl
xchg
inc
push
jno
nop
pop
stc
cltd
sahf
out
sbb
iret
mov
push
inc
fimull
push
jmp
and
and
mov
mov
faddp
jmp
push
movb
icebp
add
sub
int
mov
mov
xchg
mov
test
mov
adcb
int3
xor
cmp
inc
pop
push
cwtl
inc
je
data16
mov
jae
cmp
cli
dec
or
in
adc
jge
mov
cmp
cmp
jae
cld
cmp
and
out
sub
mov
mov
xor
testb
pop
push
cmpsb
pop
add
pop
lret
sbb
inc
inc
daa
movsl
add
in
xor
adc
cmpsl
enter
xchg
test
and
cli
js
and
mov
icebp
cli
jmp
data16
xchg
mov
jle
pop
insl
iret
shll
jns
pop
adc
and
dec
ret
mov
mov
js
add
mov
cmp
cmp
rorb
cli
out
mov
fmuls
sbb
sub
test
ds
movsl
mov
cwtl
movsb
pop
ret
cmp
lahf
cmpsb
dec
inc
pop
add
push
inc
xchg
sub
inc
adc
dec
mov
faddl
or
mov
movsb
inc
mov
int3
mov
add
push
pop
test
stos
add
lea
push
lret
add
xorb
test
sub
sub
sbb
mov
insl
insl
fimull
add
hlt
fisubs
sbb
jp
clc
pushf
add
loopne
clc
pop
shr
push
pop
xchg
shll
ss
push
jl
xor
bound
aam
aam
push
mov
pop
insl
ss
loopne
xor
sbb
sti
stos
dec
into
stos
shll
sub
xor
sbbb
dec
push
enter
xchg
cmp
cmp
pop
out
movsl
repz
aad
outsb
push
imul
call
fidivrs
mov
icebp
push
pop
pop
inc
cmp
je
shll
fnstenv
mov
inc
xor
pusha
push
iret
mov
fs
ret
or
add
or
dec
jbe
xchg
stos
push
inc
or
shlb
ja
cmp
test
sbb
pop
cmc
cmpsb
inc
jae
add
fisttps
mov
clc
pop
mov
ret
ret
js
lock
fisttps
mov
dec
andl
idiv
ret
sbb
adc
add
pop
sbb
inc
pushf
out
jmp
xchg
mov
popa
inc
fistps
mov
or
fistpll
jmp
movsl
or
mov
pop
imul
sub
aaa
push
jle
add
jp
cmc
js
push
dec
lretw
push
js
sbb
lds
jo
hlt
cmp
dec
mov
imul
pop
imul
mov
xchg
cmc
cli
vmovupd
ds
sub
adc
pusha
popf
sub
sub
and
jns
rol
je
sub
in
jns
or
jge
and
fmuls
mov
mov
stc
rcl
add
mov
adcb
fsubp
xor
or
lahf
ret
inc
sbb
shlb
stc
sbb
movsb
nop
mov
push
push
pushf
and
sub
in
ja
jns
sub
mov
fcom
testb
rolb
mov
clc
jo
orl
test
mov
aad
test
mov
fwait
test
xor
imul
popf
mov
into
adc
scas
popa
hlt
xchg
ret
mov
xchg
jbe
dec
iret
mov
jnp
mov
jbe
and
data16
push
enter
or
insl
adc
or
adc
mov
xor
mov
test
out
sub
mov
fisubs
mov
mov
add
cmpsl
adcl
shlb
test
push
sub
mov
and
mov
inc
add
inc
lods
sbb
fildl
rcrl
ud2
pusha
frstor
in
aam
fwait
sbb
pop
push
out
test
or
cmp
adc
shlb
je
lcall
add
int3
push
les
xor
lds
fldenv
adc
aam
jmp
pop
rcll
loop
test
lcall
inc
into
jle
mov
push
test
lock
sub
sub
notl
std
sub
mov
inc
js
xor
pop
add
movsl
loop
cmpsb
int3
scas
sbb
sbb
xor
xor
nop
dec
addl
mov
into
add
and
or
mov
mov
das
inc
arpl
xchg
push
mov
out
xor
mov
mov
pop
jo
xor
sbb
aam
xor
setp
mov
push
pop
fidivl
cmpsb
inc
aas
das
adc
mov
int
xchg
xchg
pop
sbb
inc
lock
fs
jge
cmpsl
imulb
jg
fistpll
dec
call
inc
into
cmp
mov
jl
fmull
les
pop
sti
int
add
cmc
jl
ljmp
les
adc
hlt
mov
mov
scas
addr16
out
jnp
pop
jmp
mov
pop
or
outsl
stos
sub
mov
int
xchg
clc
lock
std
fwait
test
inc
jno
sub
rcll
test
add
inc
clc
cmc
in
mov
xor
xor
stc
iret
xor
jge
adc
and
sbb
inc
int
lahf
into
cmpsb
into
jp
push
mov
jne
sbb
and
sub
ss
jns
cmc
lcall
inc
data16
pop
fs
mov
xchg
jl
pop
pop
stos
jnp
out
cmpsl
pop
push
or
shrb
mov
out
fs
push
dec
jb
xchg
out
xchg
out
aas
int3
cli
mov
jmp
insl
mov
movsl
daa
and
int
mov
xchg
xlat
lock
cmp
xor
test
outsl
repnz
hlt
inc
add
popa
gs
mov
cmp
addb
mov
idivb
test
jae
test
mov
xchg
dec
add
das
add
stc
roll
and
inc
imul
xor
rolb
iret
imulb
fistpll
shr
inc
pop
fadd
sti
mov
mov
mov
push
push
xchg
sbb
adc
xchg
cs
sarl
adc
shrl
out
sbb
jecxz
leave
jns
hlt
lds
lods
xchg
enter
int
lods
xchg
adc
das
xchg
push
fs
xchg
call
xchg
push
fdivrl
arpl
sub
das
mov
inc
outsb
scas
imul
andl
sbb
cmp
push
xor
test
sti
test
mov
clc
mov
push
enter
adc
cmp
aaa
pop
repz
jmp
mov
cmpsb
jecxz
mov
pop
jne
or
sbb
idivl
fisttpl
or
and
push
fisttpl
dec
push
into
push
enter
mov
sub
dec
in
pop
xor
popf
outsl
std
add
fcoms
lods
pop
xchg
add
rcrb
test
jecxz
adc
push
aas
mov
cs
or
stos
lahf
imul
lret
subl
lods
idivb
sti
iret
aaa
sbb
hlt
std
push
rcrb
stos
lcall
mov
push
test
or
aad
dec
push
and
jnp
mov
xchg
and
repz
out
sti
in
ds
sub
imul
cmp
nop
push
push
test
test
adc
sbb
arpl
adc
ret
mov
test
out
cmpsb
int3
in
pop
bound
and
mov
inc
xchg
insb
or
dec
std
xchg
bswap
imul
add
and
dec
xchg
sub
dec
jae
xor
clc
call
xor
mov
mov
or
out
ret
sub
popa
jge
jl
jo
sub
sub
cmp
test
lret
inc
dec
jp
xor
ret
adc
sub
fnstenv
xchg
pop
adc
dec
jl
sub
add
mov
cmp
in
shll
inc
sbb
lods
mul
or
and
dec
dec
sub
enter
push
sahf
out
sub
jno
xchg
mov
jg
shl
rolb
xchg
lgdtl
nop
shlb
sti
xorl
pop
les
in
hlt
mov
pop
lahf
and
and
or
clc
push
sbb
fdivr
mov
mov
and
adc
add
mov
sti
push
push
iret
ds
mov
xchg
lcall
jp
pop
jl
clc
mov
jle
jl
aad
push
push
stc
out
js
inc
popf
test
cmp
hlt
jnp
fwait
call
rorb
lea
sti
and
repz
imul
sbb
lahf
clc
fiadds
clc
jecxz
or
xor
pop
mov
add
ss
add
cmp
aaa
leave
pop
push
sbb
shlb
jb
mov
adc
xchg
mov
roll
out
xchg
and
stos
jae
sub
sbb
daa
jle
iret
adc
sbb
test
clc
or
jno
add
icebp
iret
adc
test
jp
inc
jne
jns
jl
in
int3
sub
xchg
xchg
inc
les
pushf
push
mov
pushf
add
les
adc
std
js
fbstp
fsubrs
fadds
loop
xlat
push
lds
data16
hlt
xchg
hlt
xor
aam
adc
sub
icebp
mov
leave
mov
insl
shlb
sub
mov
mov
movsb
jmp
push
mov
push
sub
rolb
setnp
cmpsl
andb
push
lods
xor
or
or
roll
xchg
mov
bound
and
push
dec
movsb
and
xchg
or
dec
dec
inc
inc
orl
enter
daa
mov
xlat
lock
and
ss
cmc
ss
sub
jne
adc
fs
roll
stos
cli
mov
push
and
sbb
ds
cmp
fs
or
cmc
cmp
jae
dec
and
lahf
jmp
outsb
fdiv
popl
fidivrl
insl
lds
test
loopne
enter
lods
dec
jmp
addb
mov
xor
ret
sti
push
arpl
cmp
pop
leave
mov
sbb
jo
mov
aad
sar
and
test
dec
ret
testb
cmp
jne
mov
cmc
sbb
push
mov
add
outsb
in
ret
add
cmp
cmp
cmc
or
mov
and
jns
aas
aad
call
and
and
jmp
enter
out
inc
jae
xor
jns
fsubs
inc
mov
push
cmp
adc
jmp
jge
xor
and
andb
leave
mov
mov
push
aam
sbb
movsl
ret
pop
pop
int
and
sbb
test
out
adcb
and
xor
in
push
pop
arpl
xlat
imul
mov
sub
out
sub
push
pop
mov
imulb
out
stos
inc
pop
dec
pop
mov
push
out
decl
lea
arpl
xor
pop
inc
aas
add
imul
decl
jmp
in
dec
mov
or
pop
lret
subb
fstl
fisubrl
xchg
bound
hlt
das
sbb
inc
lods
mov
jle
cmc
ret
dec
cmp
push
sbb
push
repnz
mov
aad
cmp
daa
pop
adc
out
insl
sbb
rol
mov
and
mov
repz
sub
push
sti
push
mov
aaa
shl
and
and
or
mov
sbb
jae
int3
jo
cld
mov
test
jnp
aad
cmp
nop
cmp
xchg
dec
movsb
in
and
cmpsl
jle
ret
and
or
out
and
mov
lods
push
push
movsb
cld
mov
jb
out
cmp
jae
lret
xchg
popf
xchg
data16
repnz
movsb
mov
out
je
mov
xor
orl
lds
sar
rolb
sarb
mov
mov
mov
ss
pop
lret
cmp
sbb
iret
dec
lahf
int3
addr16
out
xchg
mov
dec
push
js
cwtl
cli
mov
and
sub
xlat
dec
ljmp
jl
cmc
lods
mov
fcomip
or
mov
gs
pop
xchg
movsb
and
sbb
sarb
mov
add
scas
sbb
push
loop
jp
inc
dec
jl
mov
mov
jg
add
insl
sbb
movl
push
sub
leave
push
xchg
std
fdivs
cli
rolb
out
mov
adcl
pop
shll
push
es
in
dec
aaa
sbb
or
insl
out
and
xchg
sub
xchg
cmp
xor
xchg
scas
cmc
imul
mov
mov
rolb
repnz
sbb
fsts
jns
mov
out
cmp
mov
xor
jecxz
adc
mov
or
pop
rcrl
daa
ret
test
mov
repz
iret
inc
cs
and
ds
pop
pop
out
ret
cmp
adc
lret
fisttpll
aad
push
jo
cmp
sub
mov
add
mov
fs
inc
pop
add
hlt
imul
inc
imul
into
lret
enter
mov
call
dec
push
and
or
add
leave
lret
add
lods
push
inc
lret
cltd
icebp
dec
call
int3
call
aaa
push
rcrl
sbb
fimull
movsb
int
jp
cmp
xlat
dec
outsb
mov
mov
fnstcw
cmp
jne
inc
mov
add
mov
or
push
cmp
shll
push
pop
mov
lahf
or
push
pop
pop
push
adc
sti
xor
sub
negl
stos
in
fstpt
jg
test
jo
pushf
stc
js
sbb
pop
or
add
test
subb
out
dec
inc
test
sbb
mov
sbb
imul
and
jns
ljmp
sub
stos
mov
daa
mov
outsl
in
dec
push
mov
js
xchg
mov
addr16
mov
xor
mov
inc
jae
test
dec
mov
cmp
bound
mov
xchg
cld
popa
pop
cmp
mov
mov
in
xor
pop
les
push
jecxz
leave
sbb
pop
dec
bnd
mov
nop
inc
addr16
incb
test
push
push
nop
lcall
test
push
push
mov
xchg
mov
sub
lret
sub
ljmp
test
pushf
icebp
out
mov
add
or
stos
jae
aam
pushf
sub
xor
lret
cli
push
insl
pop
jmp
jns
leave
mov
inc
dec
or
fwait
jmp
sbb
stos
in
cltd
cmc
inc
dec
rorl
jae
add
and
int
pop
movb
adc
mov
pop
imul
xlat
xor
int3
inc
insl
push
ret
int3
mov
subl
inc
mov
fst
xchg
mov
inc
jmp
add
out
ficompl
fsub
jne
sbb
lock
jb
sbb
mov
in
pop
ss
in
add
dec
dec
mov
outsl
shll
mov
mov
rcrb
pop
ja
out
jmp
outsl
push
enter
outsl
out
cli
mov
inc
popf
dec
dec
adc
or
cmp
jnp
int3
not
push
jne
cmpsb
lret
into
pop
jo
lret
lds
xchg
test
mov
mov
dec
push
inc
scas
jae
orb
sti
cmp
xchg
jle
lcall
test
fidivl
test
sbb
in
adc
push
in
xor
leave
dec
cmp
xchg
jmp
xchg
clc
lcall
shll
add
repz
sub
rcrl
push
mov
clc
popa
push
inc
add
and
jmp
or
jge
fdivrl
lcall
iret
and
lcall
push
add
pop
push
ror
in
inc
addr16
ret
and
aad
fs
lea
scas
mov
xchg
daa
push
ss
inc
or
or
inc
ljmp
xchg
cmpsl
fistpll
pop
push
pop
adc
and
iret
dec
or
bswap
insb
xor
add
mov
xchg
or
std
xor
mov
dec
sar
stc
mov
adc
fstp
cmp
add
das
jl
aad
sub
push
mov
es
push
mov
dec
sbb
sub
add
in
addr16
int3
cmpl
dec
movsl
push
adc
stos
jo
andb
add
scas
iret
pushf
cmp
shrb
scas
dec
imul
cmp
js
test
sub
in
bound
push
loope
loopne
movsw
add
test
xlat
popa
gs
and
out
mov
dec
mov
cmp
out
mov
jbe
aad
mov
push
testb
dec
xchg
mov
and
daa
sbb
dec
push
add
es
inc
xchg
jmp
mov
add
data16
in
je
pop
mov
arpl
mov
push
outsb
pop
call
dec
popa
call
jnp
loopne
add
xor
sbb
jl
pop
pop
mov
ret
push
sbbb
outsl
mov
sub
or
decb
inc
in
jle
out
jg
xlat
xchg
aad
scas
add
dec
jbe
or
inc
insl
pop
mov
add
adc
add
jmp
sub
inc
and
jne
lods
xchg
jno
nopl
mov
pusha
and
adc
sub
js
cli
mov
lds
jnp
ljmp
cwtl
pop
inc
adc
lahf
and
fcoml
mov
lods
std
xor
sar
movsb
clc
les
dec
frstor
out
jb
vpsrlq
leave
icebp
sbb
pop
jne
leave
adc
jecxz
iret
cmp
idivb
mov
adc
add
mov
sub
stos
pushf
cmpsl
fisubl
ljmp
jge
sub
aaa
xchg
add
mov
xor
xchg
add
push
dec
add
and
mov
je
mov
mov
dec
push
mov
arpl
movsl
loop
idivb
xor
sbb
or
cmp
popl
je
aaa
jge
in
outsl
notl
xor
xor
or
aaa
ret
inc
or
push
scas
mov
dec
or
dec
push
ds
mov
sti
imul
test
mov
ret
aad
mov
pushw
into
mov
insb
mov
jns
into
jle
stos
sbb
xchg
rcrb
xchg
and
mov
or
or
je
inc
in
add
push
dec
mov
adc
movsb
cmp
add
push
and
xor
xchg
fiadds
jb
andl
push
pop
push
inc
jmp
push
fildll
or
lcall
adc
incl
cld
push
shrb
inc
add
mov
fwait
pop
out
jnp
rclb
insb
adc
icebp
pop
jbe
or
out
sub
lock
adcl
incb
jge
jne
popl
std
test
or
lods
notl
lret
cmp
jecxz
cli
movsl
outsl
sub
sub
inc
test
pop
outsb
cmp
inc
jmp
imul
push
cli
adc
clc
and
adc
inc
adcb
jge,pn
test
mov
xlat
lods
adc
xchg
ss
mov
inc
dec
das
jmp
das
jo
cmp
xor
add
ljmp
in
fimull
rclb
fs
stos
scas
aaa
mov
lea
scas
pop
imul
xchg
and
and
call
sysenter
jo
roll
je
push
das
or
jge
mov
jp
mov
stos
and
imul
fwait
or
push
ss
fucom
rcrl
inc
pmulhuw
and
mov
in
out
fbld
ds
orb
iret
sbb
ds
jns
mov
xchg
test
adc
lahf
xchg
das
pop
and
aam
push
inc
mov
sbb
shll
ljmp
inc
dec
or
or
cmp
or
test
mov
jns
jo
xor
divb
lea
inc
jo
push
das
insb
cltd
ja
inc
xchg
xchg
mov
ret
lcall
fmul
add
hlt
dec
icebp
sub
and
push
fcoms
std
in
es
xor
and
jae
jmp
push
stc
add
roll
int
faddl
ja
and
loope
inc
jno
das
add
jne
xchg
ffree
cmp
adc
clc
sbb
inc
stos
jno
dec
push
fwait
lahf
incb
sbb
mull
out
popf
mov
or
jl
sub
insb
sar
mov
out
inc
aam
fadds
xor
lea
shlb
pop
sbb
fstps
or
push
jmp
lods
popf
or
les
dec
xchg
nop
xchg
je
push
out
or
inc
out
push
fmull
push
lcall
rolb
add
stos
stos
int
add
sti
stos
mov
xor
stc
outsl
gs
fdiv
add
cs
std
xchg
xor
xor
xor
icebp
fimuls
sti
out
std
inc
mov
jle
mov
or
hlt
adc
lea
jo
out
loopne
sub
aad
cwtl
ss
cmpsb
pop
sti
pop
xchg
push
adc
and
cwtl
fnstenv
or
xchg
adc
insb
bound
push
or
inc
andl
pop
arpl
imul
stos
mov
mov
add
jno
sbb
sbb
pusha
in
mov
ljmp
jb
pop
pushl
push
out
cmpl
inc
fcomps
and
mov
repnz
jbe
pop
xchg
mov
mov
frstor
pop
push
dec
sbb
popf
mov
add
jo
adc
adc
clc
outsl
loope
or
bound
imul
fstpt
lock
lds
cli
push
inc
dec
fsubl
loop
mov
xor
pop
out
pop
int
xor
xlat
mov
and
mov
push
xchg
adcl
imul
negl
in
add
es
push
fdivrs
pusha
testb
sbb
roll
ljmp
xchg
push
mov
and
repz
mov
lods
andb
aad
ret
shll
ljmp
jns
jne
cmp
mov
pop
aaa
dec
mov
push
jnp
and
cwtl
test
cmp
sbb
inc
push
inc
mov
dec
iret
hlt
and
test
lods
or
sbb
imull
or
icebp
nop
sbb
ja
arpl
clc
adc
out
pop
popa
push
cmpsb
xchg
jae
jbe
add
or
clc
mov
pop
idivl
jnp
movsb
push
or
sub
sbb
stos
or
mov
sbb
xchg
stos
mov
sbb
or
mov
dec
push
jno
mov
test
push
int
jns
adc
push
pop
xchg
stc
outsb
sub
cli
cwtl
adc
decb
insl
pop
aad
in
out
mov
sbb
fdivrl
and
xor
mov
xchg
int
sub
xor
inc
inc
mov
inc
cmc
push
mov
jg
out
push
push
mov
jo
outsb
mov
mov
dec
or
ss
hlt
pop
push
lahf
xor
sub
xchg
dec
sub
loop
fcomp
imul
add
sti
out
fadd
data16
pop
or
stos
ret
push
ljmp
sub
dec
dec
cmc
mov
icebp
ja
movb
popl
das
or
int3
mov
cmp
test
mov
mov
cmovb
addl
mov
push
push
shl
in
pusha
push
arpl
xchg
push
mov
lock
xchg
pop
or
cwtl
dec
adc
fildll
popa
mov
sub
dec
xchg
movsl
sar
pop
sub
call
or
mov
cmpsb
xor
sahf
sub
xor
test
cmp
in
xor
popa
push
cmc
dec
shlb
fstpl
mov
mov
insl
loope
dec
fs
fmull
sbb
cmpb
xor
xor
divps
adc
mov
mov
and
adcl
dec
cmp
bound
pop
jmp
add
push
test
and
jo
addr16
imul
pop
nop
xchg
daa
and
sahf
dec
scas
cmc
cld
mov
arpl
lahf
aaa
or
push
mov
dec
adc
daa
mov
addb
adc
shll
cmp
push
cmpsb
inc
pop
sub
fstpt
ret
data16
adc
in
mov
js
add
out
mov
mov
lock
sub
jno
movsl
sbb
frstor
adc
mov
sti
add
and
mov
insb
sbb
xchg
and
xchg
add
loop
pusha
roll
ljmp
leave
or
push
enter
sbb
mov
bound
cmc
xchg
xor
jp
enter
imul
sub
push
adc
gs
jl
int
std
jb
sbb
insb
icebp
add
es
leave
dec
jb
dec
jno
inc
and
mov
cs
cmpsb
sbb
dec
or
popa
push
out
fcmovnb
mov
lret
les
loope
xlat
adc
subb
jnp
call
cmp
aam
dec
sbb
adc
cmc
mov
inc
js
pop
imul
js
mov
mov
sahf
sub
xchg
pop
or
rcll
lock
call
lods
das
cs
fistpll
andb
outsb
mov
mov
rorl
das
stos
ljmp
cmpsl
xchg
sti
pop
sbb
mov
push
push
ds
or
push
dec
add
and
imul
push
cltd
outsl
fcomi
or
scas
jae
pusha
adc
lret
lahf
add
push
mov
test
ret
sub
inc
jle
js
insl
jle
std
xchg
lods
or
sbb
inc
pop
ljmp
xchg
push
daa
loope
push
add
test
aas
lret
fsubl
movsb
aam
sbb
sarl
cmp
xor
pop
push
dec
jne
dec
fnstenv
jae
repnz
dec
push
or
xlat
mov
mov
jae
pop
sbb
adc
push
push
test
cmp
push
push
xchg
cmpsb
adc
xor
out
ror
xor
iret
cmp
cmp
jecxz
frstor
fwait
repnz
xchg
sti
fdivs
mov
cmpsl
xchg
xchg
mov
and
add
lret
push
mov
mov
dec
xor
inc
ljmp
into
mov
mov
mov
xchg
stos
xchg
ret
cmpsl
and
insb
dec
fwait
cmp
clc
in
xchg
je
into
fimuls
mov
ror
xchg
jae
push
mov
dec
int3
cmp
lcall
call
movsl
in
filds
mov
mov
mov
in
xchg
test
jne
jnp
cmp
and
xor
mov
cmp
push
test
in
aad
inc
rcll
pop
sub
add
dec
addb
pop
add
repnz
and
nop
sbb
jecxz
icebp
add
jp
cld
test
mov
aaa
or
xor
bound
test
add
lods
testb
jg
lock
push
arpl
mov
push
sbbb
js
push
mov
hlt
movb
mov
xor
mov
push
lea
shrb
adc
cs
sub
pop
xor
add
jb
sub
ss
sbb
loopne
test
mov
inc
das
cmp
cmp
lods
mov
fildll
pop
fcomip
dec
push
lds
adc
dec
lods
mov
push
cwtl
mov
les
outsl
ret
outsb
fwait
repz
or
pop
imull
pop
lret
xchg
mov
mov
hlt
cs
repnz
aas
xor
popf
sub
sub
pop
daa
pop
movd
sub
dec
mov
popf
or
pop
ljmp
xchg
ret
loope
mov
push
mov
dec
shl
push
cmp
mov
add
jb
mov
in
and
je
mov
outsb
mov
add
pop
leave
pop
les
mov
aad
cmp
loope
sub
fdivrs
add
fisubrl
add
mov
jl
int3
movsb
sub
fwait
je
push
cmp
jo
xchg
pusha
jle
lahf
inc
lods
enter
daa
rcrl
fcmovu
cmp
push
xchg
stc
pop
pop
add
mov
out
cmp
popf
insl
jmp
shlb
add
stc
adc
add
sub
inc
fwait
cs
sbb
insl
hlt
xchg
stos
outsl
pop
mov
dec
xchg
mov
negl
popa
rcrb
aad
test
pop
jp
xchg
xchg
pop
aaa
out
lods
jp
pop
pop
hlt
shrb
mov
scas
push
sub
xchg
pop
and
or
jl
adc
nop
call
daa
inc
aaa
in
mov
cltd
movsb
out
mov
or
in
xchg
repnz
mov
pop
or
mov
mov
imul
scas
mov
mov
and
andb
pop
add
ret
mov
icebp
ret
fcompl
add
loopne
rorl
xorl
fmulp
fisttpll
sub
adc
sar
or
sbb
adc
push
js
sti
das
and
orl
sbb
mov
aas
fxtract
fbld
inc
mov
icebp
mov
mov
je
jle
mov
mov
dec
cld
pop
xor
sbb
add
jns
ret
xchg
popf
enter
incl
jecxz
in
int3
notl
add
mov
jecxz
rorl
mov
das
adc
pop
add
mov
lea
iret
aam
cmp
scas
mov
mov
stc
mov
in
dec
jne
cmp
movsl
dec
or
std
repnz
xchg
mov
jo
inc
xor
pop
and
jbe
scas
jmp
dec
dec
push
dec
out
lret
sarl
lcall
xchg
push
pop
je
aad
adcl
cmp
int
mov
cmpsl
sbb
jecxz
mov
lret
jns
adc
mov
mov
jmp
mov
fsubs
pop
pop
add
pop
inc
push
cmpl
stos
lock
in
push
scas
addb
aaa
fs
sarl
sub
daa
sub
cmp
lahf
stos
jnp
pop
adc
call
cmp
jae
addb
popa
ret
sub
sbb
cmpsl
addb
mov
data16
subb
add
enter
add
mov
xchg
out
ds
mov
insb
or
in
sub
cmp
lahf
mov
and
in
test
or
jmp
xor
decb
inc
fistps
jnp
jne
popa
xchg
stc
or
jl
inc
push
fbstp
ljmp
clc
cmp
xor
add
daa
xor
div
mov
pop
lcall
icebp
mov
cmc
inc
inc
cmp
push
sub
rorl
lcall
cmp
pop
test
fs
mov
pop
sbb
sahf
fwait
pop
les
add
je
and
mov
mov
cltd
testb
jg
or
shrb
cmc
test
in
imul
xchg
mov
ds
xor
jmp
stc
test
retw
fildl
sahf
jne
sbb
stos
add
jl
fsts
adc
xchg
arpl
add
pop
repnz
jbe
and
enter
xchg
adc
rcl
lcall
lock
sbb
les
mov
ss
dec
scas
test
pcmpeqd
cmp
dec
addl
push
push
jb
pop
in
or
jl
pop
nop
push
sti
push
aad
shlb
inc
mov
std
sub
pop
mov
dec
stc
and
inc
or
les
outsl
rcl
ss
iret
and
in
pop
fwait
loopne
pop
mov
pop
cmp
mov
jbe
into
into
mov
and
cmp
cltd
pushf
aad
fistpl
lcall
aam
stos
jbe
jge
cmp
dec
xor
test
cmp
pop
stos
rol
push
pushf
mov
frstor
lcall
lods
jnp
mov
dec
jbe
mov
es
shrl
movsl
dec
and
and
test
mov
sbb
leave
jbe
sub
push
bnd
push
das
mov
cltd
stc
jnp
icebp
adc
ss
imul
iret
popa
dec
mov
adcl
or
in
inc
std
jbe
fdivrl
jmp
or
push
dec
jne
xor
int
lods
and
sbb
xor
shrl
fisubs
insb
and
pushl
pop
push
rclb
xor
cmp
loop
or
ds
cltd
cs
ror
add
sbb
mov
xchg
scas
adc
orb
nop
mov
sub
and
inc
das
xor
aam
sbb
dec
pusha
rcrl
and
adc
mov
sbb
int3
mov
movsb
test
or
push
cmp
or
cwtl
fisubrl
sbb
cmpsl
insl
pop
cli
popa
xchg
and
iret
mov
jns
outsb
xor
push
nop
jge
popf
jne
jno
test
das
xchg
jmp
sti
int
push
in
shll
ljmp
mov
or
scas
cwtl
sbb
lods
xlat
adc
dec
mov
cltd
add
adc
rep
mov
dec
orb
insb
movsb
addl
pop
aas
mov
or
jae
jns
movsl
mov
pop
or
adc
jle
int3
xor
insb
fwait
and
inc
xor
rclb
jb
fidivl
inc
stos
call
rcll
sub
stc
or
in
out
dec
cmp
push
ret
scas
push
mov
or
cmp
shll
mov
and
in
notl
add
dec
xchg
cmp
jle
push
mov
inc
inc
lods
or
adc
shrl
fistps
ds
add
sub
mov
cmp
pop
fcoms
and
aad
adc
jle
adc
in
roll
jae
cmc
push
dec
xor
test
xlat
lea
fucomp
mov
xor
hlt
mov
sbb
addb
push
lret
int3
sbb
fists
xor
aaa
fwait
cmp
dec
or
xchg
mov
sbb
ret
sahf
inc
push
inc
dec
add
stc
ret
cmpsb
insb
ljmp
orl
ljmp
inc
jle
adc
inc
rorb
xchg
pushf
jmp
mov
sbb
addr16
aam
xor
sub
adc
xorl
cli
adc
fld
dec
and
shrl
adcb
xor
dec
div
pop
mov
insb
ss
pop
mov
clc
cwtl
jge
fldl
jmp
mov
movsb
lods
xchg
shll
mov
xor
jmp
int3
dec
mov
test
hlt
sbb
push
mov
push
xchg
outsl
aad
je
in
xchg
inc
mov
test
cltd
inc
push
lcall
jae
rcll
jnp
xchg
inc
fisubrl
out
mov
xchg
test
add
or
bound
data16
xchg
sbb
jmp
sub
jmp
mov
and
cltd
cmp
mov
jns
cld
mov
jbe
and
pushf
fwait
aas
cmpsl
sub
xchg
int
fisubl
addr16
cmp
nop
pop
xor
int3
sbb
mov
adc
xor
mov
out
movsb
xchg
mov
xor
inc
jnp
fldl
dec
sbb
imull
or
cmpsb
xchg
lcall
mov
adc
cmp
jne
clc
xor
jl
cmpsl
sub
sub
inc
jnp
and
stos
jecxz
push
xchg
test
inc
mov
jmp
push
and
sbb
dec
test
sub
fildll
push
outsl
pop
pusha
test
andb
mov
in
jns
fnsave
pop
rorb
repnz
movsb
or
mov
ljmp
out
jno
pop
fistpll
or
stc
addb
call
emms
pop
xor
add
fnstsw
xchg
jbe
dec
inc
jbe
jno
jbe
leave
dec
scas
sub
mull
inc
sbb
fsubrs
test
mov
dec
pop
dec
wbinvd
jo
mov
imulb
or
dec
fstl
inc
aaa
cmc
xlat
fdivrl
enter
addl
cmc
ss
xchg
enter
jne
add
sti
test
leave
mov
in
mov
in
mov
xor
stos
jecxz
lods
and
call
xor
or
pop
mov
fsts
xchg
adc
scas
enter
pop
dec
ja
decl
sti
or
jecxz
out
unpcklps
int3
test
aam
idiv
mov
jno
sbb
je
fdivp
bound
es
in
loopne
scas
xchg
sub
or
clc
int
stos
stc
nop
xchg
sbb
jnp
stos
enter
outsl
shl
ficompl
arpl
jge
fistl
call
ret
je
imul
jp
or
pop
rcll
add
enter
loopne
mov
mov
and
imul
mov
jp
addl
add
sub
sarb
imul
popf
push
ljmp
sub
out
jb
cmp
jmp
push
push
pop
aam
mov
jmp
or
mov
bound
or
xchg
std
inc
sub
mov
psrlq
pop
popf
int3
jnp
bswap
pop
sbb
add
pop
cld
mov
mov
inc
test
xchg
mov
jns
adc
mov
jle
add
cli
inc
xor
and
and
shrl
shll
repz
cld
stc
fs
jl
pop
sub
stos
cmpb
or
nop
sub
mov
xchg
outsl
fidivs
lds
notb
mov
hlt
mov
xchg
cmp
outsl
mov
pop
push
jle
stos
sub
decb
add
adc
adc
or
and
dec
fwait
push
push
or
in
popfw
dec
mov
outsl
test
cmpl
cmc
test
sbb
push
mov
mov
shll
mov
cmp
popf
imul
iret
shrb
data16
rcll
iret
dec
xor
ret
fidivs
jnp
dec
lods
mov
pushf
cmc
pop
and
ja
mov
and
cmp
shl
adc
mov
stos
movsb
push
movsb
repz
mov
scas
cld
lret
arpl
mov
and
in
enter
pop
nop
add
ja
pavgw
outsb
jo
cmp
mov
dec
mov
lods
test
inc
inc
hlt
add
adc
sbb
icebp
clc
fldenv
mov
adc
inc
cmp
push
addr16
pop
cmp
fwait
lgs
jne
mov
mov
xorl
lret
dec
xlat
and
xchg
lea
scas
pop
add
sub
or
mov
bound
xchg
xor
aad
jp
push
jae
enter
cmp
pusha
pop
or
aas
sub
jno
in
jo
fs
lcall
jno
loop
inc
mov
cld
mov
sub
mov
sub
repz
cs
nop
repnz
cmpsb
sbb
ds
push
shlb
ss
popa
dec
mov
cld
pop
push
test
or
dec
adc
mov
lock
or
call
add
es
mov
popa
mov
xor
cmpsl
dec
inc
pop
mov
aad
lock
mov
dec
aaa
sub
sbb
or
shlb
aam
test
cmpsb
fstpl
mov
mov
mov
sti
rorl
and
push
or
adc
add
lret
fsts
cmp
mov
sub
das
sbb
mov
sbb
adc
push
fnstenv
aam
jae
sbb
fidivrl
rcll
mov
leave
je
xor
call
cmp
add
dec
sbb
scas
cmpsl
cmpsl
dec
ret
push
addr16
out
lea
jle
gs
iret
leave
btr
out
dec
nop
push
out
in
subb
test
push
jbe
dec
rorl
test
mov
aas
test
out
rorl
xchg
gs
pop
or
sti
push
out
int
in
sbb
lods
fstp
add
mov
adcb
mov
fnstsw
in
scas
and
push
pusha
out
cmpsb
and
repnz
pop
cmp
cmpb
or
pop
sub
mov
or
mov
scas
mov
adc
insl
je
xchg
ja
es
and
push
daa
dec
mov
jmp
push
xor
ret
inc
or
imul
aas
push
negb
stos
pusha
in
out
mov
xchg
lahf
xor
xor
push
jns
cmp
movl
js
aad
cmpsb
dec
rcr
out
sbbb
loope
cmp
sbb
cltd
sahf
test
mov
inc
ds
mov
jge
inc
inc
mov
sbb
lods
jns
mov
xchg
cld
scas
sbb
sbb
dec
cmc
or
mov
stc
inc
aaa
jae
adc
stos
jmp
outsl
push
fistpl
std
and
jbe
repz
ficoms
pop
adc
push
mov
sbb
pusha
in
push
dec
pop
jbe
insb
test
fs
out
push
mov
aaa
sahf
mov
xor
lods
shlb
js
aam
into
add
rol
or
pusha
adc
adc
in
sub
inc
in
or
push
pushf
rcrb
out
cmp
gs
sahf
xchg
add
cld
mov
cmpsb
mov
jp
push
pop
add
pop
loop
jno
and
and
mov
xchg
and
out
roll
pop
ja
pop
add
jmp
cmp
test
xchg
icebp
outsb
fisubrs
jne
adc
test
lods
movsl
outsb
loope
add
inc
add
inc
lods
jae
outsb
pop
sub
sti
lock
je
push
insl
push
fldcw
loop
in
scas
cwtl
roll
cltd
push
repz
ja
in
xchg
repnz
and
cli
sub
bound
adc
and
inc
outsb
mov
xorl
xchg
lds
push
adc
fsubrl
add
cmpl
sub
add
xchg
lcall
andb
data16
daa
push
xchg
ret
imul
fwait
dec
insl
pushf
adc
pop
stos
adc
fmull
arpl
jp
and
les
je
call
bound
cs
push
xor
lahf
in
cmpsb
callw
jno
pop
sarb
sbb
mov
mov
mov
sbb
mov
inc
fs
xor
das
cmp
loop
pop
les
aaa
aas
cmp
mov
mov
loopne
or
pop
outsl
mov
lcall
mov
sti
mov
enter
push
jns
cli
adc
fcomip
ret
mov
adc
sbb
jnp
arpl
fs
push
mov
push
scas
ror
mov
fldt
sbb
roll
cli
add
das
cmpsl
sub
and
cvtps2pi
aam
add
push
shl
lods
inc
inc
je
je
jg
cmpl
mov
inc
xchg
andb
scas
dec
gs
nop
sbb
andl
xchg
aam
std
push
mov
pusha
or
mov
out
test
sub
dec
in
es
icebp
out
cwtl
pushf
jnp
in
stos
test
dec
push
test
ja
push
stos
xor
mov
jmp
xlat
mov
rolb
pop
sub
mov
daa
pop
or
repnz
mov
mov
jns
int
repz
or
addb
jno
jbe
pop
lret
adc
lds
inc
rcl
lods
aad
inc
into
cmp
std
push
pushf
jb
jae,pn
es
push
popl
ret
jo
pop
mov
cmp
jns
cmp
push
sahf
movsb
xchg
inc
jecxz
outsl
xchg
ja
xchg
cli
adc
pop
mov
or
sbb
sbbb
cmc
inc
shlb
movsl
pop
inc
out
fisubrl
int3
pop
nop
pusha
int3
or
movzbl
outsl
int3
xor
jle
lock
mov
xchg
xchg
mov
mov
gs
mov
sbb
outsl
push
je
adc
cmpsl
mov
bound
adc
popa
pop
aam
mov
pop
stc
flds
shll
xchg
dec
dec
pop
movsl
jmp
xor
mov
pop
mov
clc
mov
mov
fsubp
xchg
clc
sti
and
insb
test
push
mov
aad
cmp
mov
xchg
jmp
in
pop
fistpll
pop
and
add
popf
sti
add
in
push
inc
jne
ret
xchg
xchg
push
popa
and
inc
in
scas
dec
aas
jmp
in
add
jmp
inc
dec
rorl
test
inc
cmp
jmp
fisubrs
dec
nop
add
lods
or
and
xor
cwtl
gs
jns
or
or
mov
inc
mov
xlat
dec
dec
mov
hlt
idiv
scas
or
lret
mov
xchg
dec
add
fistps
mov
inc
imul
dec
add
pop
sbb
mov
leave
das
add
inc
and
out
int3
jle
int3
setne
inc
mov
and
cmp
sub
inc
sbb
ss
rcr
mov
idiv
mov
xor
aad
les
or
subl
stc
dec
ljmp
mov
xor
push
mov
lods
fs
stc
pusha
adc
repz
jle
mov
in
mull
loopne
mov
arpl
addb
ret
or
out
mov
push
fdiv
cli
sbb
jecxz
or
inc
cmp
mov
pop
in
sbb
loope
nop
mov
push
stc
stos
or
shlb
push
aad
lods
dec
stos
pop
int
pop
fildll
fcoms
dec
mov
push
add
sub
dec
test
jmp
sub
inc
je
xchg
mov
and
add
out
sub
les
sbb
mov
mov
repz
scas
dec
scas
mov
xchg
sbb
mov
mov
rorl
loopne
mov
mov
mov
aaa
shlb
imul
fcoms
xchg
cmpsl
bsf
pop
bound
loop
fs
fcomps
js
lods
scas
pop
xchg
push
push
int
cmp
push
pop
adc
xchg
loop
jne
pop
repz
stc
xor
mov
and
pop
jmp
loope
pop
js
inc
iret
sbb
xchg
leave
ljmp
push
clc
outsl
insl
pop
mov
cltd
inc
fs
pop
cmp
insl
push
cld
lcall
xor
je
data16
sub
or
sub
push
push
xor
pop
pop
pop
das
adc
ss
int3
insb
stc
sub
and
cmp
xchg
jmp
cmpsl
loopne
lds
xor
jo
push
lea
daa
outsb
aas
orl
xchg
das
dec
test
cmp
mov
mov
loop
xchg
gs
cmp
sub
mov
sbb
xchg
adc
repz
sbb
stc
pop
es
sbb
in
scas
push
sbb
in
push
mov
ss
xchg
push
and
and
out
sbb
mov
cmc
lds
ljmp
sub
sbb
jns
aam
xchg
test
in
out
fcom
sub
cli
sbb
in
mov
call
cmp
rorb
cmp
xor
mov
pop
or
add
fldt
xor
push
into
adc
sahf
stos
push
push
adc
adc
icebp
adc
mov
daa
icebp
dec
xor
stc
je
pop
call
shl
mov
push
lret
dec
mov
cld
fldl2e
mov
daa
repnz
mov
insl
enter
xor
stc
xchg
fildll
sbb
testb
jb
stc
add
movsl
fmul
mov
push
jg
pop
scas
repz
lret
enter
je
sti
sub
daa
xor
scas
js
jp
dec
shlb
xchg
fisubl
aad
rorl
shrb
cmc
xchg
mov
jmp
mov
outsl
in
nop
orb
xchg
rcl
sub
adc
and
dec
mov
cmc
cli
out
mov
jge
daa
jge
shll
aaa
rcl
mov
test
cwtl
adcb
jbe
pusha
icebp
gs
adcb
repz
testb
mov
movsl
mov
lret
mov
add
ja
cld
xor
sbb
ja
cmc
and
jp
ja
pusha
pop
xchg
and
repz
adc
hlt
xor
out
shr
aad
jle
sub
jle
cmp
cmpsl
mov
dec
pushf
aad
jg
mov
sub
popl
out
scas
mov
int3
movsb
mov
lret
push
fsubl
mov
ffree
pop
enter
aad
and
pop
ja
js
xor
xchg
ds
jmp
test
or
mov
add
xor
int
inc
or
das
xor
addr16
test
sahf
les
test
mov
cmp
add
fsubrl
jne
mov
popa
mov
add
aas
adc
jle
movsb
or
inc
out
add
push
mov
sub
aam
dec
int3
int3
mov
sbb
xchg
pop
fs
aaa
pop
sahf
add
push
sahf
lcall
adc
arpl
push
mov
jbe
lea
lcall
sub
mov
jmp
js
leave
stos
pop
scas
adc
jmp
aam
cli
gs
dec
nop
or
je
rcll
sbb
sub
fnstenv
nop
das
testb
cmp
dec
leave
and
sub
pop
out
mov
lret
call
lcall
repnz
sbb
jnp
push
mov
in
clc
js
test
movsb
hlt
sub
xchg
or
test
xor
lods
icebp
mov
add
nop
mov
sarl
shrb
mov
lods
or
pusha
adc
mov
pop
cmc
cmp
sub
in
mov
mov
repnz
pop
inc
insb
dec
in
cmc
rcl
xor
hlt
and
lret
mov
sbb
add
arpl
xor
mov
push
fdivr
clc
or
adcl
in
push
cmp
mov
verw
sub
xorb
das
jl
mov
dec
fiadds
in
pusha
out
and
fs
xor
rorl
add
sbb
pop
mov
insb
shrl
stos
push
sbb
rcll
sub
sub
shlb
xor
mov
arpl
insb
stos
es
jb
fwait
push
mov
cmovle
pushf
aas
sbb
inc
jne
inc
mov
test
sti
outsb
movsl
mov
cmp
dec
push
into
push
in
sub
shr
pop
jno
ret
pop
bsf
add
das
int
mov
fcompl
add
dec
push
sub
mov
pop
sbb
addl
xchg
mov
outsl
mov
mov
addr16
popf
sub
aas
mov
sbb
inc
cmpsl
mov
mov
sbb
lock
sarl
push
inc
push
jb
pop
aad
pop
mov
bound
in
fsts
ds
lcall
outsb
fs
xchg
test
out
addr16
mulb
jp
mov
inc
dec
sahf
sub
bound
mov
fdivr
test
and
push
dec
sbb
je
ds
mov
in
pop
aad
pop
or
push
jl
jb
ss
sub
push
add
push
mov
aaa
divb
xchg
rol
enter
std
jge
adc
repnz
cmpsb
cltd
adc
cmp
add
mov
or
mulb
lods
xchg
jecxz
outsb
shrb
mov
adc
shlb
es
or
cmc
repz
data16
push
test
adc
jge
aad
imul
dec
lret
mov
sbbb
jp
push
shll
stos
cmc
dec
into
mov
mov
cmp
xchg
imul
fldenv
hlt
sub
pop
icebp
imul
xor
loope
add
or
adc
xchg
out
arpl
in
ss
pop
adc
push
aaa
pop
pusha
push
cmp
mov
jl
dec
cltd
or
jb
insb
test
jb
dec
lods
sbb
sbb
xor
xchg
jl
pop
fdivr
mov
cmpb
rolb
jo
in
pop
pop
mov
cli
mov
cwtl
popf
fdivrs
ja
sub
rolb
mov
in
or
in
pop
xchg
sbb
jne
mov
add
pop
insl
jne
jp
mov
in
cld
mov
push
mov
movsl
inc
mov
jb
pusha
xor
adc
mov
mov
jbe
or
loop
or
and
loopne
ret
adc
cmp
lret
iret
dec
addr16
lods
movsb
imul
xchg
lcall
iret
mov
cmc
jecxz
fwait
pop
loopne
adc
cmp
mov
repnz
movsl
enter
cmp
sub
mov
sbbl
add
loop
das
push
xchg
or
lret
xchg
jmp
cmpsl
cwtl
shll
fwait
xor
pushf
sub
jmp
sbb
xlat
mov
mov
cmpb
movsb
sub
lock
pop
pop
movsl
dec
arpl
cmp
jno
cmc
in
cmp
xor
clc
fwait
out
sub
js
out
mov
dec
dec
lock
xor
mov
es
pop
mov
xor
stos
xor
lods
mov
mov
sbbl
test
scas
cltd
daa
pusha
ds
sti
lea
cmp
fldt
pop
dec
cs
ficoms
jbe
xchg
push
sub
mov
cs
jbe
pop
rorb
sbb
hlt
lret
outsl
sub
cmpb
jecxz
jg
addr16
mov
jo
clc
testb
test
pop
jb
mov
sarl
ljmp
jno
fbld
sbb
pop
adc
push
mov
mov
std
pushf
pop
push
dec
insl
mov
push
jbe
shrl
cltd
sub
fsubs
push
cmc
mov
and
cmp
and
loope
dec
xchg
add
fiadds
sub
xor
dec
in
dec
stos
push
repz
pop
mov
mov
test
push
lods
sar
shrl
sbb
push
pop
ljmp
insl
inc
mov
cmpsl
mov
pop
adc
stc
out
push
mov
adc
nop
inc
adcl
loopne
sbb
cmp
cs
push
aaa
add
sub
xor
in
adc
jo
into
neg
sub
and
les
pop
or
sbb
bound
add
mov
cmp
ja
arpl
jmp
push
ja
lahf
push
lds
int3
mov
xlat
lock
sub
cmp
push
push
mov
and
sub
js
stc
mov
inc
shll
int3
push
or
test
test
subl
or
jb
mov
jns
rcll
push
in
hlt
in
xlat
push
push
mov
cmpsl
sub
in
pop
and
imul
orl
mov
push
iret
mov
pop
cmp
and
mov
fnsave
push
fwait
cmp
divl
jns
push
leave
xor
les
dec
dec
gs
mov
xchg
js
cmpsl
gs
jecxz
lock
in
enter
xorl
pop
rol
stos
xor
popa
fdivrp
push
mov
fimuls
movsl
ret
mov
adc
std
sbb
or
cmp
lret
stos
loope
test
test
sub
push
sbbl
pop
xor
jne
jo
or
push
jo
andl
in
imul
outsb
pop
dec
nop
and
ja
shrl
push
test
jae
mov
pop
fdivs
cmp
ds
push
punpcklbw
lahf
dec
mov
lahf
fdivrs
lods
cmp
sbb
mov
dec
pop
jo
mov
bound
icebp
push
pop
fdivrp
mov
lods
addr16
mov
stc
pop
mov
add
jp
pop
outsb
jnp
mov
fbld
scas
dec
clc
stc
aas
lock
sub
mov
aaa
xor
fimull
in
sub
arpl
fwait
or
pop
cld
push
out
adc
addl
xor
adc
dec
aad
push
pop
pop
leave
test
jmp
jmp
jl
lock
push
xor
mov
xor
ret
out
sbb
decl
and
call
fwait
es
movsb
mov
repz
es
or
inc
pop
dec
cltd
sub
push
sbb
das
loopne
sbb
inc
dec
icebp
cs
ds
mov
dec
sbb
mov
sub
sbb
iret
push
or
dec
leave
and
stc
aad
cmp
insb
es
out
jbe
jmp
mov
push
cld
mov
dec
out
ja
or
cmp
sahf
or
sub
jge
jns
sbb
inc
jp
movsl
sub
push
jbe
xchg
and
stos
adc
add
fldl
push
rorb
movsb
and
jns
mov
sbb
aam
faddl
mov
jmp
push
std
pop
lahf
cmp
aas
sbb
xor
popf
sbb
and
adc
jg
shl
stc
stc
ss
adc
push
xchg
cmp
scas
imul
mov
cltd
in
cmpsl
icebp
clc
test
jle
mov
jmp
js
je
inc
mov
add
lret
push
mov
shr
xor
or
hlt
cmp
test
fwait
pushf
add
or
push
icebp
test
loop
stos
test
mov
dec
mov
xchg
ds
inc
movsb
and
lods
jle
shlb
out
mov
jp
mov
push
hlt
leave
ss
pop
fists
push
lahf
in
xchg
es
inc
adc
or
push
in
jns
rorl
sbb
lahf
in
mov
loop
sub
insl
pop
test
fwait
mov
scas
dec
and
cmp
mov
test
int
xchg
and
sbb
test
mov
adc
cmpsb
and
rol
mov
sti
es
loop
or
inc
xor
sub
faddp
sbb
inc
movsl
test
lods
push
xor
xchg
mov
pop
jae
test
lds
imul
test
sar
push
push
mov
fwait
das
or
pop
aam
sbb
leave
idiv
cmp
repz
mov
lods
ds
inc
pushf
pop
ficoms
ficoml
and
in
out
xor
cmp
fcoms
pop
std
mov
cmc
cmp
dec
xchg
mov
aad
mov
mov
int
cmpl
jns
rcr
xor
fs
xor
test
push
or
test
cli
mov
and
dec
iret
sbb
jg
pop
push
loopne
adc
nop
cwtl
pop
fadds
or
mov
addl
sbb
adc
mov
insb
mov
mov
ficoml
aam
stc
mov
dec
ffree
jp
roll
jbe
adc
sbb
xor
lods
or
sahf
ret
dec
rolb
fstpt
sub
enter
adc
jmp
data16
jnp
push
mov
fisttpl
push
cwtl
jb
jae
and
das
stos
outsb
and
stc
sbb
dec
fmul
add
xor
jecxz
loopne
mov
idivl
fs
adc
in
shll
ror
mov
arpl
mov
enter
or
ss
sahf
xchg
cltd
jno
call
es
sub
loop
mov
jb
cmc
mov
push
testb
sbb
pop
dec
daa
ss
bound
dec
mov
jg
dec
jl
xchg
mov
mov
dec
insb
xchg
loop
fs
lock
mov
xchg
sbb
je
lds
rorl
and
bnd
pop
add
adc
clc
adc
sbb
jmp
push
call
xor
xchg
push
int3
inc
out
sub
pop
add
loope
insl
push
xor
pop
inc
push
jecxz
xor
mov
jbe
stc
mov
imul
dec
mov
sub
dec
sub
mov
into
pop
jge
jbe
call
in
xchg
bound
fld
inc
adc
cmc
jge
jb
add
fbstp
aas
lret
adc
cmp
push
adc
and
out
flds
daa
fs
pusha
les
inc
lds
mov
out
jae
pop
add
add
testb
lret
in
lret
pop
dec
sbb
int
or
sbb
movsb
push
repnz
mov
mov
sbb
lret
out
inc
jno
pop
xor
adc
loopne
mov
les
daa
or
dec
inc
mov
push
pop
hlt
or
hlt
ret
mov
xchg
nop
cli
or
js
mov
add
add
jge
jg
adc
push
mov
call
loop
roll
xor
aam
pop
adc
mov
aad
mov
movsb
sub
sub
mov
sahf
ror
loope
mov
adc
dec
fwait
mov
stos
jl
mov
cli
mov
int3
ja
lea
pop
push
dec
rol
outsb
stos
mov
out
cmp
pusha
loopne
mov
lret
inc
inc
imul
mov
cld
fisubs
pop
pop
push
mov
xor
nop
int
inc
shrb
ljmp
mov
rclb
add
mov
sti
cmp
repnz
rcrl
inc
sub
mov
xor
mov
push
arpl
pop
cmpsl
sub
stos
sbb
lods
cmp
xchg
int3
jb
dec
scas
enter
sbb
lds
push
repnz
push
push
inc
or
cmp
push
nop
stos
fadd
cmpsl
inc
sub
addr16
push
mov
pop
or
cmp
std
lret
add
icebp
rcll
je
ret
cld
mov
jecxz
jecxz
mov
pop
push
notb
push
pop
inc
call
push
cmp
in
loope
or
add
mov
cltd
pushf
cs
push
cmp
rcr
cmp
loope
mov
jae
dec
ror
test
jno
sbb
cli
in
out
out
sti
and
adc
xchg
xchg
aad
lock
je
adc
xchg
sbb
push
dec
test
xor
mov
fwait
lret
sub
mov
mov
or
int
les
insl
stos
add
cltd
jno
xchg
sub
mov
pop
out
andb
xchg
nop
mov
mov
and
jns
jmp
xor
stc
push
jle
or
push
sti
gs
push
divl
sti
push
push
outsb
mov
ret
mov
aas
aad
sbb
je
dec
mov
gs
mov
push
pop
iret
scas
push
pop
loope
jns
les
sti
pop
adc
rorl
test
ficomps
and
out
sahf
mov
insb
mov
fistl
out
sarl
jb
push
test
sbb
in
int3
adc
push
std
and
in
xchg
orb
imul
lea
outsb
dec
add
xchg
out
and
std
insl
fidivrs
push
mov
add
inc
jg
sbb
xchg
jb
mov
mov
push
cltd
mov
ljmp
and
inc
bound
mov
add
lcall
mov
pop
aad
and
xor
sub
xor
iret
xor
stos
insb
enter
xchg
mov
push
sub
mov
scas
sub
add
dec
xchg
pop
mov
mov
shlb
pop
mov
pop
into
mov
add
stos
and
sarl
loope
xchg
sti
dec
shlb
pop
addb
sarl
inc
test
jle
xchg
mov
repnz
sub
xchg
inc
jmp
ja
ficoms
and
add
mov
inc
cltd
movsl
out
andb
push
jecxz
sbb
jp
xor
push
notl
sbb
aam
cmp
mov
lods
or
loop
xor
std
lea
cmp
sbb
out
movsl
mov
pushf
idiv
sbb
or
pop
pop
inc
push
inc
pop
push
pushf
sub
push
into
mov
inc
and
in
or
mov
pop
arpl
in
adc
rorl
inc
pop
and
xchg
sbb
or
jg
ret
mov
jmp
js
push
cmovs
imul
mov
ljmp
add
pop
pusha
mov
loopne
lret
jmp
sbb
loope
test
and
faddp
sbb
push
pop
sti
fmuls
add
jo
push
roll
jnp
cmp
xor
incl
push
mov
pop
push
mov
divl
and
adc
lcall
cmp
stc
cs
push
lahf
gs
push
in
dec
icebp
xacquire
push
sub
pusha
nop
jp
pop
pop
jmp
mov
pop
mov
loopne
dec
testl
add
repz
iret
and
insb
mov
pop
imul
mov
arpl
push
xchg
sbb
inc
mov
arpl
push
and
fildl
hlt
shrl
scas
jl
and
add
push
and
push
insl
incb
xchg
dec
cli
incl
adc
repz
and
mov
shlb
test
lret
das
inc
push
fs
test
xor
or
sbb
or
inc
adc
fsubrs
jae
cmp
js
cld
cmp
ljmp
pop
int
ret
ret
idivl
fsqrt
sbb
inc
mov
mov
fcom
aad
int
shll
repz
jp
jecxz
add
enter
dec
inc
add
inc
and
adc
mov
arpl
add
enter
addr16
and
add
jns
inc
push
add
out
sub
loope
pop
jmp
leave
stc
insb
icebp
push
insl
mov
jbe
sbb
xlat
in
cmp
ja
mov
and
or
pusha
add
ss
jbe
or
lea
sti
cwtl
insb
adc
mov
pop
xorl
stos
outsl
mov
sti
daa
sbb
xchg
adc
mov
outsb
mov
add
shll
cld
sub
movb
ret
or
int3
adc
mov
repnz
or
xchg
pop
repz
shll
scas
mov
jb
mov
xlat
lahf
cs
data16
mov
fildl
xor
std
call
fmull
jle
xchg
psubusb
add
or
ret
outsl
or
arpl
inc
lock
js
sub
push
jg
or
out
or
cwtl
sub
stos
add
inc
sti
xchg
hlt
in
inc
mov
loope
jno
xor
mov
or
xchg
add
rol
in
mov
insl
sbb
divb
mov
scas
stc
xchg
jle
jb
xlat
lret
inc
fisubl
jmp
mov
out
cmp
xor
mov
sbb
dec
xchg
jge
and
inc
test
pop
leave
sbb
xlat
push
pop
ljmp
mov
ror
sahf
pop
xor
stc
rcl
ret
add
mov
xchg
inc
cmp
mov
pop
pop
jmp
cmpsb
lds
cs
sub
pop
cmpsl
or
xchg
sub
jle
cmc
out
imul
call
int3
mov
in
cmc
jp
jnp
cltd
add
or
arpl
push
or
jl
pop
jae
inc
pusha
inc
in
mov
pop
andl
cmp
mov
xchg
lods
movsb
stos
je
push
cld
sub
insl
clc
icebp
ds
cli
jb
sti
push
fwait
mov
popa
sti
or
loopne
jb
pop
daa
mov
call
adc
mov
or
std
push
push
loope
popf
mov
imul
inc
fidivrs
inc
xchg
mov
push
pop
cmc
leave
jno
shl
push
mov
fdivrs
je
or
pop
mov
xchg
pop
mov
jmp
adc
and
in
inc
push
stos
inc
inc
jne
movsl
cli
popa
xchg
sbb
xchg
lods
mov
xchg
dec
lods
mov
lods
fcomps
pusha
cmpsl
pop
icebp
sub
and
lods
dec
mov
pop
or
push
mov
lcall
adc
bound
js
inc
and
and
lock
daa
repnz
mov
jno
jns
imul
aas
cmp
pop
mov
stos
cmp
adc
pop
xorl
pop
mov
adc
push
fildl
movsl
mov
das
push
inc
push
and
ret
dec
xchg
pop
loope
mov
push
stos
adc
sub
jg
push
fisubrs
add
addb
sbbb
xchg
sbb
fnstsw
mov
fwait
mov
mov
leave
test
pushf
mov
push
inc
jno
iret
sbb
cmc
repz
es
int3
das
or
cmc
fcompl
loope
stos
xlat
mov
sbb
int
leave
sbb
xchg
and
pop
fiadds
pop
pop
cmp
clc
fsubl
xor
dec
pop
pop
adc
shlb
loope
and
daa
sar
xchg
push
pop
roll
cmp
aam
pushf
push
int
push
pop
test
sarb
loop
loopne
push
cs
sarl
sbb
dec
jns
dec
lods
cmpsl
add
mov
pop
test
scas
int
mov
in
cmpsl
movsl
icebp
ja
hlt
cmc
jno
stc
add
nop
mov
loopne
sub
sti
inc
mov
or
inc
andb
sbb
dec
jle
popf
sub
stc
xchg
jns
or
jno
xchg
adc
adc
das
lret
xchg
test
repnz
mov
std
aam
lock
xchg
sub
filds
push
int3
lahf
push
dec
mov
mov
dec
test
sbb
scas
bound
pop
outsb
xchg
in
incl
dec
shrb
mov
cmc
sahf
push
xlat
xchg
xor
push
popa
ds
and
mov
jae
or
or
je
sbbb
xchg
push
pop
mov
leave
dec
ljmp
fs
mov
cs
xchg
sub
stc
xor
xchg
enter
and
ret
xchg
js
popa
xorb
fnstsw
das
fnstenv
inc
pop
lret
mov
jb
add
sub
mov
cmp
sub
mov
sub
mov
inc
xor
int3
pusha
mov
ret
jns
out
aaa
xchg
push
xor
and
rcrl
fisubrs
fcmovbe
orl
scas
dec
leave
lret
inc
xchg
cmp
push
mov
inc
insl
xchg
sbb
das
and
cs
jmp
inc
adc
push
add
enter
mov
push
fs
mov
test
pop
mov
aam
das
movsb
sbb
jl
sub
daa
sbb
out
mov
andl
push
or
fsubrp
jae
cmp
repz
mov
add
cmc
adc
fwait
mov
imul
mov
loope
or
sub
mov
ss
inc
flds
and
ljmp
cmc
adc
dec
aaa
into
popf
out
jae
jl
nop
in
sub
xchg
adc
inc
fcoml
mov
xor
pop
ret
fdivrs
cmp
fiaddl
sub
cmp
adc
std
daa
sar
mov
mov
push
leave
mov
mov
test
dec
xchg
sub
dec
jp
xor
mov
sbb
or
inc
inc
idivl
mov
dec
mov
push
and
add
pop
push
mov
in
mov
out
add
adc
fcoms
xchg
scas
gs
jmp
ret
nop
stos
loopne
or
sarl
mov
or
pushf
xorl
add
mov
mov
and
popa
sub
jb
in
aad
faddl
ret
decl
sti
out
mov
enter
es
pop
je
push
scas
imul
iret
pop
ret
jne
addb
mov
shrl
cmp
sti
cmp
or
mov
mov
dec
call
mov
xchg
sub
cmpsb
mov
adc
adc
fs
inc
inc
add
sub
mov
ficompl
mov
dec
sbb
mov
sbb
push
mov
das
xchg
lcall
out
mov
jne
test
stc
cmp
aad
es
sub
sbb
frstor
xchg
test
cltd
or
inc
push
mov
aad
dec
out
jp
xchg
pop
xlat
mov
clc
or
jbe
sti
sbb
cltd
sarl
outsb
sbb
push
clc
imul
les
cltd
dec
fiadds
daa
js
push
push
pop
add
push
inc
sbb
aaa
mov
bound
and
bound
jae
js
push
push
dec
mov
int
dec
sbb
mov
fs
sbb
les
mov
pop
pusha
xchg
mov
lods
imul
scas
dec
stc
fsubrl
and
cmp
fcoms
xlat
push
mov
dec
xlat
inc
pushw
cs
sets
pop
inc
mov
adc
fstpt
sub
adc
sub
mov
pop
stos
adc
mov
cmc
lcall
adc
xchg
sbb
bound
movsb
outsl
cli
sub
adc
lahf
mov
jge
mov
mov
pusha
push
stos
add
ss
je
dec
call
nop
push
xor
loope
push
ljmp
or
sahf
jnp
xchg
arpl
or
movl
pushf
jno
dec
jle
jae
aaa
daa
addl
dec
fdivl
xor
push
xchg
jnp
test
and
jle
cmpsb
stc
addr16
movsl
adc
call
cwtl
lret
out
dec
cwtl
repz
call
bnd
loopne
jnp
lahf
mov
inc
xlat
pushf
jp
dec
xchg
cld
paddusb
or
mov
addb
or
cmp
mov
adc
movsl
movsb
rclb
add
repnz
dec
cltd
mov
test
loopne
cs
mov
push
ds
mov
dec
cld
push
addr16
xlat
mov
inc
outsb
ljmp
pushf
add
sub
jge
pshufw
lea
cmp
adc
mov
xor
scas
mov
into
jns
mov
cltd
mov
xchg
hlt
test
mov
leave
lds
jns
add
je
add
jne
lcall
lods
mov
sub
std
int3
loop
push
adc
mov
inc
test
sub
in
shl
cltd
scas
hlt
cmpb
push
decb
ds
fwait
xlat
les
push
mov
cs
insb
pop
fwait
arpl
ficompl
cltd
adc
dec
icebp
call
sbb
out
mov
sbb
and
jae
mull
push
cmpsb
loop
pusha
push
xchg
clc
or
loop
cmp
in
movsl
iret
mov
add
cmp
fwait
jne
push
es
insl
or
and
push
dec
das
ja
pop
push
sub
push
mov
mov
fs
xchg
cs
lods
ret
fsubrs
lcall
pop
sub
dec
adc
jb
mov
jb
lret
push
test
lock
aam
add
stc
push
adc
lods
xchg
sub
out
xlat
xchg
lods
outsb
jge
inc
push
mov
sbb
roll
sub
repnz
scas
mov
ret
xor
fidivrl
cmp
addr16
mov
fs
lea
jnp
jno
adc
mov
xor
xor
int
and
pusha
adc
xor
mov
pusha
in
cmp
cmpsl
jae
iret
idivb
jmp
int
mov
or
cld
inc
ficoms
and
inc
cmp
sub
or
push
xor
call
jmp
outsl
mov
dec
je
mov
dec
daa
mov
js
push
xor
mov
in
push
out
sbb
push
pop
dec
and
aam
enter
sub
dec
cmp
test
xor
out
cld
mov
out
shll
jno
mov
scas
shl
mov
fdivs
or
jnp
scas
shlb
jecxz
pop
push
cmp
aam
movsl
aas
inc
sbb
sbb
xor
dec
mov
in
fs
shl
in
push
insb
sbb
fdivrs
data16
out
pop
rorb
inc
cs
mov
xor
lcall
xorb
xchg
cmp
cmp
dec
lcall
loopne
psubd
adc
aas
xor
pop
clc
stos
and
das
inc
mov
aas
repnz
sub
js
pop
cmp
in
cmp
lret
inc
xor
popf
imul
dec
mull
push
sbb
dec
jb
loopne
inc
or
leave
mov
and
xor
in
jae
out
leave
enter
cld
and
xor
add
cltd
lahf
and
mov
push
push
and
sahf
icebp
or
fwait
test
iret
stos
jl
loop
cmpsl
loopne
test
fisttps
push
push
cmp
loope
outsb
pushf
mov
xchg
into
fiaddl
rcrl
add
add
ret
es
int3
pop
dec
sub
mov
sub
sub
shll
call
stc
jl
das
aam
stc
add
fldt
lcall
mov
pop
cmp
xchg
and
xor
mov
insb
out
addr16
mov
pop
jg
pop
and
es
mov
ror
mov
test
loope,pn
xchg
pop
shrl
push
ss
xchg
mov
cmp
test
push
cmp
test
jb
add
dec
inc
mov
dec
xchg
pop
sbb
push
mov
pushf
sbbl
les
insb
cltd
in
mov
icebp
cs
test
pop
mov
adc
mov
dec
pop
jecxz
leave
scas
add
cwtl
cmp
or
xchg
and
cwtl
sbb
test
mov
jmp
mov
mov
das
jae
jno
xchg
out
addl
inc
adcl
in
mov
mov
sbb
call
sbb
fldl
stc
aas
cmpsl
or
or
xchg
sbb
sbb
sbb
orl
imul
cli
or
mov
lock
sbb
dec
les
sub
rcr
inc
and
enter
xchg
out
cmp
sbb
pop
add
sbb
stc
test
loop
jge
pop
push
mov
loopne
inc
sub
ficompl
and
jle
dec
daa
push
push
mov
rcl
cltd
andb
push
in
shrb
cmpsb
mov
cmp
testb
iret
ret
movsl
lahf
cmpsb
pop
ljmp
cmc
ret
mov
lcall
xrelease
push
xchg
cmp
xor
out
or
dec
inc
sub
cmpsb
test
pop
xchg
add
xchg
imul
or
inc
add
pop
out
mov
aam
xor
test
pop
jb
aaa
xor
jbe
dec
scas
jl
scas
pop
mov
icebp
xchg
jg
out
icebp
pop
push
fld
enter
push
les
clc
rcl
xchg
aam
cmp
or
pushf
jno
pop
add
push
pop
lcall
fsts
dec
dec
sti
test
or
ds
in
inc
ljmp
fsubs
xchg
cmp
notb
movsb
xor
jmp
adc
out
sahf
push
dec
int3
xchg
lds
jb
xchg
dec
jmp
enter
jo
ja,pt
mov
call
js
push
and
lcall
cmp
and
aas
xor
or
lahf
imul
sbb
mov
sbb
inc
shrb
je
cwtl
cmpsb
xor
fsubrs
jo
div
and
andl
push
jno
adc
xchg
dec
fdivrl
stos
inc
pop
xor
or
jbe
test
dec
fcmovnu
movsl
cmpsb
jge
cltd
addr16
cwtl
cmp
and
mov
push
movsb
or
fs
inc
mov
xchg
jge
test
fiadds
push
std
stos
enter
ficoml
out
dec
xor
std
test
mov
pop
leave
push
sub
push
cltd
scas
fldl
jnp
jmp
jg
xchg
xor
test
mov
cld
mov
xchg
movsb
pop
js
inc
je
mov
ds
xchg
xor
mov
push
adc
xchg
sub
xchg
sub
mov
aaa
dec
dec
cmp
sbb
add
inc
ds
jmp
ljmp
push
repnz
fcoms
fsubs
or
jae
pop
add
cmp
gs
jae
loop
sub
jbe
out
jo
jno
neg
sbb
jns
add
es
out
xchg
mov
jp
test
mov
adc
test
inc
stc
jge
dec
pop
jnp
and
test
xor
mov
insb
dec
push
arpl
inc
int3
and
lods
inc
outsl
jnp
fnstenv
pop
xchg
mov
xchg
jmp
leave
jae
pop
scas
in
jns
add
mov
cmp
in
mov
push
or
cli
push
or
or
add
xchg
jg
repz
shll
dec
shl
pusha
mov
icebp
cli
and
pusha
adc
sbb
jl
add
icebp
lock
cmp
fists
mov
cmp
aam
loopne
mov
mov
mov
jg
dec
add
cld
sbb
int3
sub
insb
int3
push
push
mov
sbb
fs
ljmp
and
push
je
and
dec
pop
mov
push
loop
xchg
lea
das
xchg
mov
and
add
sbb
data16
sbb
cmp
lcall
inc
cwtl
push
dec
jge
incb
mull
xchg
mov
out
adc
enter
xor
inc
inc
pop
mov
mov
mov
out
jge
xlat
jecxz
rorl
and
and
inc
cld
inc
divl
mov
jnp
pop
dec
fsubrp
test
jns
push
mov
push
push
jp
xchg
lock
sub
or
lret
hlt
and
xchg
mov
out
lret
fcoml
repnz
faddl
arpl
enter
fldpi
inc
ret
cmp
fwait
aam
roll
int
jne
inc
popf
xor
sbb
lods
dec
mov
in
cmpsl
xchg
cltd
clc
rolb
fidivrs
shl
lret
sub
mov
fstps
pop
sar
repnz
loopne
xchg
lahf
jg
test
je
mov
stc
xchg
pop
imul
sbb
and
rcrb
mov
mov
lret
mov
sbbl
push
push
jne
scas
push
iret
inc
mov
jbe
stos
pop
mov
xchg
mov
insb
pop
mov
cltd
ficomps
sahf
cmp
pushf
cmp
imul
scas
jmp
movsl
mov
test
xor
xchg
shll
jbe
nop
xchg
and
ja
pop
ret
jae
pop
sub
mov
aad
cmp
cmc
cmc
dec
cmpsw
jg
inc
addr16
subl
aas
icebp
jnp
push
xor
adc
movsb
and
sbbl
cmp
aam
xchg
xor
mov
adc
pop
testb
hlt
dec
leave
movsb
jle
and
pop
cmc
xlat
mov
cmc
loope
mov
mov
dec
shlb
insl
ret
fisttpll
adc
mov
stos
adc
jge
dec
xchg
mov
jo
mov
call
les
or
xchg
mov
push
push
in
fdivrs
js
stos
dec
les
or
test
dec
sub
mov
inc
jle
pop
inc
int3
rcl
roll
sbb
lret
mov
mov
sbb
xor
mov
mov
cmpl
or
fiaddl
xor
icebp
or
imull
mov
push
aam
int3
xchg
pop
cmp
cmpsl
mov
jp
jl
lea
pop
xchg
mov
sub
pusha
push
jle
sbb
xchg
jecxz
movsb
xchg
adc
jge
add
fidivrl
gs
pop
int3
or
sbb
fmuls
sbb
outsl
push
popf
pop
xor
repnz
mov
inc
and
out
xchg
pusha
cmc
push
das
fdivs
scas
stos
push
add
xchg
loop
scas
std
pop
mov
pop
inc
lods
jmp
ss
pop
push
cmp
and
mov
cmp
sub
pop
cmp
xchg
scas
xor
xor
dec
in
mov
inc
hlt
rcrl
hlt
inc
mov
inc
or
jecxz
imul
or
adc
stos
fwait
mov
mov
or
enter
xor
and
mov
rorl
pop
push
xchg
enter
jmp
std
sbb
loopne
dec
sub
hlt
test
shlb
sbb
dec
pop
or
ljmp
sub
call
xchg
sbb
adc
xchg
mov
jbe
xor
testb
jo
jno
sbb
jno
mov
cmp
gs
adc
push
ss
mov
inc
in
xor
in
fcmovne
pop
out
dec
inc
adc
aad
repnz
adc
dec
lahf
xchg
or
jecxz
das
in
pusha
notl
clc
push
popa
xor
dec
mov
or
stos
std
mov
or
stos
dec
test
sub
into
cmp
inc
daa
rclb
xor
rolb
mov
jne
push
push
sbb
cmp
cld
mov
ret
and
dec
sbb
cmpsb
gs
sbb
xchg
push
scas
stos
sti
push
push
jp
push
into
and
adc
subl
mov
test
and
adc
lahf
mov
adc
mov
out
push
push
or
test
mov
cmp
jae
cmpsb
or
arpl
hlt
cmp
and
jbe
push
dec
stos
pushf
inc
jno
cs
dec
fiadds
stos
test
nop
aaa
in
xchg
bound
mov
test
incb
movsl
or
inc
emms
out
movsb
jbe
loop
fnstsw
cmc
iret
sbb
push
mov
popf
in
lds
xlat
xchg
cbtw
bound
in
sbb
or
sub
scas
xlat
imul
add
sub
pop
idivl
dec
mov
pop
xchg
es
mov
int3
fmulp
sub
adc
mov
addl
js
jge
pusha
fiaddl
sti
fstps
mov
lock
shlb
mov
push
and
pop
jp
push
test
push
cmp
and
xchg
lret
jno
adc
scas
mov
jns
ret
pusha
mov
loop
mov
adc
aaa
loop,pn
ja
testl
in
xchg
xor
sub
loop
push
xchg
std
imulb
insl
repnz
imul
sub
and
sub
sbb
push
jg
mov
loopne
repnz
inc
dec
mov
push
inc
lahf
cmp
or
mov
mov
pop
sub
fildl
stos
or
jns
ja
mov
add
adc
stos
pusha
pop
out
arpl
repz
ret
mov
xlat
adcl
out
and
jecxz
xor
cli
pop
jecxz
es
inc
sbb
xchg
into
push
push
pop
dec
adc
jae
adc
rorb
push
jmp
js
cli
add
adc
fisttpll
sbb
inc
cmp
jmp
and
popf
push
int3
in
xchg
jl
fmul
shl
or
push
or
cmovge
lahf
cmp
adc
inc
dec
dec
push
mov
cmp
insb
in
in
jge
test
xor
adc
pop
xlat
insb
mov
aad
adc
or
fs
push
inc
mov
retw
ret
mov
es
lds
mov
pop
add
mov
stos
and
ret
popa
daa
ret
sbb
stc
enter
jl
push
push
sbb
mov
sar
cmp
and
inc
jg
jl
les
and
psrlq
cmpb
pcmpgtw
ljmp
or
mov
out
movsb
cmp
lcall
push
lret
sbb
dec
mov
add
fs
sub
in
into
or
inc
add
call
es
hlt
je
popf
dec
or
lahf
mov
mov
add
scas
jmp
sbb
movsl
iret
fwait
aad
mov
fidivrl
adc
mov
dec
aad
outsl
pop
popa
xchg
inc
sub
aad
lods
and
data16
xchg
or
test
lcall
call
loope
and
cs
js
adc
or
test
test
enter
rcrl
inc
sbb
outsl
push
icebp
pop
enter
xor
idivb
inc
inc
outsl
bound
mov
jae
shll
decb
cmp
iret
adc
lahf
jmp
dec
xchg
mov
std
mov
subl
sbb
mov
notb
mov
pop
ja
push
bound
insl
aas
dec
mov
xchg
test
and
nop
xchg
test
nop
cmp
sub
push
int
in
mov
sbb
cmpsb
pusha
lahf
frstor
into
out
jmp
leave
sub
mov
mov
add
shll
jnp
sub
xchg
in
add
adc
ret
xor
test
mov
in
stos
pop
sub
push
adc
insl
push
or
pop
adc
lds
outsl
ljmp
in
cmpsl
push
mov
xchg
jnp
pop
xor
xchg
and
addl
arpl
int
push
xorl
push
jae
cmp
xchg
add
jo
imul
or
xor
sub
inc
idivb
data16
jle
adc
or
call
outsl
jmp
repnz
pop
outsl
les
mov
mov
sti
dec
imul
xor
add
mov
cmp
mov
push
jnp
adc
pop
incl
sahf
cwtl
xor
jne
dec
mov
jnp
push
cli
lea
in
jge
push
je
pop
xchg
in
dec
loopne
int
push
insl
mov
popa
push
in
or
jb
xchg
aad
push
push
fbstp
cmp
rcll
adc
in
mov
mov
cmp
add
push
fwait
test
push
jno
dec
sarl
fwait
pop
xchg
adc
test
rcrb
adcb
sti
pop
adc
adc
leave
and
stc
xor
dec
pop
and
xorl
jge
daa
cmp
dec
fsubs
xchg
cwtl
sub
push
ds
jp
pushf
mov
ds
in
out
icebp
js
ud2
jecxz
outsb
fs
inc
es
xlat
mov
and
mov
fmull
jecxz
pop
cmp
jnp
xor
fnsave
mov
add
jno
mov
adc
stc
fmull
dec
cmp
test
gs
xor
test
cmpsl
stc
sbb
sbb
xchg
mov
add
mov
stc
xor
jmp
mov
leave
arpl
pop
pop
push
ljmp
cmp
int3
adc
xor
shlb
xchg
loopne
xchg
mov
xchg
push
adc
mov
fnstcw
and
cld
cli
mov
adc
mov
js
xor
jl
call
cwtl
sub
mov
scas
jne
into
stos
out
sbb
push
out
stos
faddl
dec
pop
hlt
das
gs
out
fwait
and
pop
es
mov
in
pop
xor
shlb
sbb
inc
call
insb
pop
out
inc
fsubs
lret
lahf
mov
mov
in
lods
std
lret
inc
in
shrl
and
addr16
adc
and
dec
mov
movsl
jae
ja
or
fs
push
in
or
mov
or
mov
out
sbb
adc
test
addw
into
add
std
add
mov
dec
pop
push
xor
mulb
out
stc
and
cmp
cmp
aas
imul
dec
data16
imul
loope
mulb
lahf
repz
fldt
mov
mov
dec
xor
push
in
mov
orb
out
pop
or
rolb
mov
aaa
pop
jb
fdivrs
lods
sbb
pop
push
hlt
jns
jae
mov
mov
jecxz
jge
push
cld
jl
ret
jb
out
cmpsl
out
add
jbe
and
insb
rcrl
inc
xor
loopne
fistpll
inc
adc
inc
dec
xchg
icebp
dec
jno
je
sbb
and
jno
sahf
call
and
lea
rcll
xor
mov
lods
je
xor
jge
inc
mov
pop
push
push
and
insl
lock
xor
cwtl
cmc
inc
sbb
jo
mov
and
aas
xchg
call
pop
jge
cmp
lret
subl
pop
fstpl
in
inc
jge
not
imul
or
pop
pop
ror
loop
push
test
mov
sbb
pop
ja
sub
xchg
and
mov
jno
pushf
cmc
cwtl
sbb
loopne
xor
cld
and
out
mov
cmp
inc
leave
in
outsl
dec
mov
outsb
sub
hlt
enter
cmp
and
imul
inc
leave
mov
pusha
mov
inc
cli
pop
or
fldcw
pop
sbb
add
push
loope
scas
repz
addl
scas
inc
or
cmp
iret
add
dec
dec
inc
jnp
sub
lods
xchg
stc
in
xor
jecxz
xchg
xchg
adc
repz
jecxz
std
push
lods
movsl
mov
fisttpl
mov
push
pop
push
leave
dec
inc
push
pop
sbb
arpl
rcrb
xchg
jge
sbb
lock
cmp
mov
lret
mov
or
fs
or
jne
pusha
movsb
add
mov
fs
icebp
ds
dec
int3
xchg
push
clc
sub
jecxz
rol
cmp
js
mov
fldt
inc
inc
xchg
push
add
nop
cmp
insl
jb
adc
outsb
outsl
adcb
or
cld
lods
lahf
add
xor
cltd
sarl
xchg
dec
sahf
add
push
in
adc
mov
cwtl
adc
sahf
mov
inc
xor
jle
ficoml
dec
add
into
sbbl
testb
mov
pop
bound
loope
mov
mov
jl
jno
push
sub
mov
push
jae
pop
xchg
test
and
mov
shl
sarl
stos
test
out
je
push
stos
or
dec
in
movsl
adc
stc
cwtl
dec
xor
dec
cmc
js
mov
iret
repz
mov
cltd
pop
je
xor
rorl
xorl
imul
inc
mov
xchg
lcall
repnz
in
and
gs
je
stos
leave
jge
dec
jae
rcll
fcmovbe
mov
mov
shrb
cs
xchg
and
jb
idivl
ret
out
or
imul
nop
scas
in
push
add
mov
or
adc
loop
jmp
adc
pop
jo
in
inc
out
cwtl
xchg
sub
jnp
sbb
test
inc
jg
inc
fistpl
push
fmuls
jbe
iret
push
mov
sbb
or
inc
out
out
xor
test
lcall
pop
and
pop
pop
inc
push
dec
cld
jp
insl
stc
cmp
xchg
stos
or
imul
aas
outsb
nop
xor
gs
or
fnstenv
add
mov
sbbl
daa
rcll
sbb
testb
or
call
cmp
ja
inc
cwtl
pushf
fdivrp
icebp
mov
and
imul
or
sbbb
rcll
ret
lea
cmpsl
dec
gs
pusha
mov
or
mov
int
push
push
fiaddl
dec
mov
sbb
dec
pushf
pop
dec
inc
sbb
loope
dec
add
mov
lods
mov
psubd
xor
mov
bound
adc
or
aas
push
mov
dec
addr16
mov
adc
jmp
mov
shll
pop
std
and
push
jle
sub
or
enter
adc
test
jmp
xchg
and
and
xchg
lock
je
popf
dec
jnp
ficompl
das
sbb
out
insl
pop
ds
xlat
cs
pop
iret
sbb
cmp
push
jmp
imul
mov
mov
mov
lret
add
jns
mov
sub
xchg
mov
xchg
aaa
mov
lret
leave
sahf
daa
arpl
and
stc
loope
jl
mov
dec
es
stos
mov
es
push
mov
in
push
jno,pn
int
or
cmpsb
iret
mov
popa
xchg
iret
cs
loope
cwtl
mov
inc
incl
mov
es
add
mov
jp
sub
jge
xchg
jmp
add
sub
xor
test
enter
pop
sahf
pop
pop
andb
loopne
xchg
jl
or
mov
cmp
adc
pop
mov
icebp
push
incl
aad
js
jae
inc
cld
cmpsb
dec
jge
in
std
ja
push
enter
out
sbb
sbb
mov
fs
adc
scas
push
cmp
pop
mov
test
mov
out
ja
xchg
addr16
pop
or
ret
and
xor
bound
adc
fwait
sbb
lea
lea
ss
filds
int3
sub
add
lret
push
in
pop
loopne
arpl
sbb
lea
repz
cld
mov
xchg
jno
pop
xchg
arpl
pop
inc
mov
or
adc
arpl
xchg
rcl
mov
in
cmp
scas
mul
mov
dec
fistps
dec
sbb
xlat
push
mov
dec
adc
mov
movsl
gs
faddl
inc
idivb
mov
or
add
xor
jne
push
pop
pop
push
movb
mov
inc
add
enter
cwtl
adc
ljmp
sbb
inc
sub
xchg
mov
jg
xor
test
jl
scas
ss
mov
and
imull
rorb
clc
mov
lret
and
ds
pop
mov
sbbb
push
pushf
pushf
loop
pop
inc
bound
in
test
mov
xchg
sub
in
jbe
cmp
add
adc
js
lea
cli
xor
ds
xor
ret
cltd
mov
repz
ljmp
push
mov
inc
push
aaa
push
and
popa
shrb
pop
sbb
nop
adc
cmp
pusha
call
cmp
adc
add
lods
fs
cli
sub
fwait
sahf
xchg
xchg
fnstcw
cmc
jge
xchg
add
sti
xlat
adc
cld
fisttpl
add
lret
jae
sbb
aad
xchg
adc
lods
xchg
js
cmpsb
fstps
push
cmpsb
int
pop
movsl
mov
push
imul
lret
not
imul
ret
xchg
es
cld
daa
aam
or
leave
mov
cmpsl
enter
int3
jecxz
dec
repnz
push
xor
pushf
jg
leave
xlat
mov
push
out
xchg
add
push
das
out
insb
xor
mov
push
test
jbe
mov
lcall
clc
inc
mov
fistps
lods
and
aad
movsl
lods
into
lods
pop
and
or
out
cmpsl
adc
pusha
sbb
and
jp
mov
adc
rolb
rcrl
int
push
lret
mov
rorb
add
mov
popa
pop
test
dec
push
sbb
sub
adc
fimuls
leave
outsb
and
inc
mov
mov
pop
mov
jb
icebp
mov
jno
sbb
push
and
inc
rcll
fisttps
xor
shlb
push
fidivrl
std
jecxz
or
xchg
rorb
leave
dec
add
fucom
iret
jmp
fidivs
push
sbb
xchg
dec
divl
lock
cmp
insb
stc
sub
jns
inc
inc
xor
xchg
fs
cwtl
dec
mov
loope
inc
dec
or
aad
lods
push
lretw
mov
sub
fs
push
or
cmp
push
inc
sti
jmp
iret
dec
cmp
xor
mov
mov
or
jns
xchg
xchg
dec
sbb
dec
and
adc
test
jns
jp
dec
int
mov
clc
pushf
and
jmp
sub
cmc
and
pop
jne
mov
jl
bound
cltd
and
test
in
test
add
movsl
push
sub
and
push
mov
punpckldq
cwtl
cltd
sbb
int3
and
inc
hlt
orl
push
cmp
xlat
stos
pop
repz
push
push
jg
xorl
push
ret
inc
cmp
lds
aam
ret
movsb
out
lds
dec
push
xlat
xorl
sbb
mov
push
dec
inc
push
sahf
jge
ret
ret
dec
pop
aaa
cmove
adc
pop
nop
cltd
pop
int
xor
jno
sbb
divl
jmp
dec
jp
popf
cmp
lahf
lzcnt
sub
or
xchg
imul
jo
data16
cs
cld
add
testb
enter
xchg
popf
loopne
add
dec
outsb
jnp
push
dec
fdiv
ret
js
mov
push
mov
enter
mov
pop
jae
mov
xor
sbb
outsl
shr
sbb
lods
into
add
in
leave
inc
or
shr
fisubrs
clc
comiss
fsubr
je
repnz
push
fs
pop
cmp
jmp
mov
xorb
in
inc
jg
push
les
xor
ljmp
in
fstpl
bound
ja
les
lret
mov
sub
imul
hlt
scas
mov
arpl
push
pop
rorb
fsubrs
fs
rcrb
in
add
das
push
xchg
inc
or
das
nop
mov
fucomp
cs
jmp
xchg
int
xchg
sbb
xor
mov
or
enter
sahf
loopne
mov
lods
push
adc
dec
jo
pop
jb
lods
and
or
jecxz
add
es
cmp
sub
xor
pop
shl
inc
iret
test
jbe
mov
fldl
mov
dec
test
std
pop
iret
push
fadds
or
stc
dec
shll
lods
imul
xchg
pop
insb
sub
jne
insl
out
in
adc
xlat
test
mov
push
pusha
xchg
dec
xchg
mov
std
push
xchg
ss
xchg
sbb
das
add
lds
dec
ret
js
call
outsb
or
aam
fxch
jb
lock
jae
sbb
or
jnp
shlb
ret
pop
or
jns
inc
xor
pop
push
aam
je
sub
inc
mov
sbb
shrl
test
push
sarl
fisubl
js
pop
addr16
cmp
int3
mov
mov
dec
or
push
mov
xchg
lea
mov
adc
es
inc
faddl
inc
mov
loopne
push
aam
mov
call
xor
inc
pop
fwait
cmp
enter
sbb
sub
push
inc
test
inc
inc
int
sarb
daa
inc
jecxz
xor
bound
je,pt
inc
and
mov
gs
pop
iret
cmp
inc
loope
shl
in
int
sti
fdivr
movsb
or
jno
sub
inc
or
stos
imul
cmc
cmpsb
dec
je
pop
mov
lea
xchg
xorl
xor
je
insb
gs
imul
xor
jae
dec
cmp
adc
lock
dec
pop
adc
push
xchg
dec
stos
inc
int
lds
xchg
xor
pushf
cmp
lods
jecxz
clc
pop
mov
and
dec
out
jmp
rorb
push
mov
add
jecxz
jno
aad
dec
adc
daa
sbbb
pop
jmp
fwait
movsb
addr16
mov
or
inc
mov
cltd
mov
pop
xchg
filds
pop
ret
sbb
sub
fdivl
adc
ja
movsl
sub
out
pop
popf
pop
jmp
adc
mov
cmp
imul
adc
pop
fucomip
insl
xor
inc
and
add
out
push
and
int3
dec
icebp
repz
pop
js
lret
inc
arpl
push
jne
daa
rorl
push
out
cmpsl
mov
mov
in
mov
xchg
lods
mov
aaa
cmpsl
xor
mov
ss
mov
mov
cli
xchg
es
or
lret
jmp
dec
jbe
out
sub
gs
push
fnsave
ret
jg
mov
push
cs
test
imul
jnp
jle
mov
add
mov
cmpb
mov
pop
adc
mov
lds
mov
lock
add
lds
xor
mov
test
push
repnz
out
mov
loope
jp
push
jb
int
outsb
xchg
jo
mov
push
out
lret
adc
js
sbb
push
dec
adc
sub
out
and
xchg
scas
hlt
int
ret
daa
outsb
push
mov
cld
ljmp
cmp
xlat
in
mov
add
lock
mov
mov
dec
dec
jns
push
call
cwtl
sbbb
je
jp
dec
clc
lea
jl
sbb
popa
inc
cmp
imul
cwtl
inc
stc
mov
sbb
jecxz
in
rcl
int
andl
mov
pop
xchg
cmp
cmp
js
and
mov
inc
sar
cmpsb
into
mov
stos
sub
ljmp
jo
dec
lock
mov
jnp
js
add
or
xchg
leave
push
pop
js
push
mov
inc
dec
push
pop
imul
repz
mov
incl
mov
dec
sbb
fmull
call
fcmovnu
aas
mov
jbe
sarl
adc
cmc
mov
ds
pop
popf
xor
mov
data16
stos
push
sti
mov
test
jo
sbb
pop
sbb
shrb
and
or
rcll
fcomip
sbb
jmp
pusha
mov
nop
jmp
jmp
mov
or
cli
into
int3
pop
pop
inc
pop
dec
mov
pop
mov
popa
fucomp
pushf
cmp
cmp
fidivl
xchg
ja
and
sub
xchg
jp
roll
es
int3
cmp
shlb
fmuls
testl
sarl
pop
xor
push
add
aad
popa
sub
add
das
mov
es
add
lahf
mov
fsubp
push
sbb
shlb
mov
sbb
sti
push
aaa
sbb
xchg
cmc
clc
add
jle
ja
stc
lcall
jle
imul
repnz
inc
add
pop
push
mov
out
lea
mov
pusha
stos
xchg
mov
inc
mov
cmp
inc
mov
sarl
mov
loopne
adc
bound
mov
gs
insl
mov
scas
enter
sbb
inc
sbb
je
ja
pop
sbb
sub
push
shrl
adc
inc
push
ds
loope
sbb
sub
into
cmp
lock
sbb
test
inc
lret
and
out
into
or
test
test
rcll
scas
push
and
out
subl
push
cmpb
rorb
fildll
lods
add
or
inc
ljmp
std
shr
xor
in
call
cmp
cmp
xor
movsb
cmp
add
xchg
mov
jmp
mov
jae
ja
icebp
xchg
hlt
cmp
dec
addl
push
lret
mov
push
ss
and
push
fwait
mov
jmp
aam
movsb
aaa
test
sbb
or
sbb
movsl
in
leave
aaa
pop
cmp
in
daa
bsr
lret
push
sbb
push
xor
inc
fistpll
push
adc
jmp
gs
inc
aam
pusha
sarb
repz
push
shlb
in
pop
cmp
xor
mov
lds
ds
out
and
jl
mov
cli
xchg
fdivl
pop
aas
mov
lea
lods
lods
ss
jecxz
jbe
jmp
mov
add
pop
jle
and
and
jge
and
idivl
stos
cwtl
ficompl
out
es
in
xor
ficomps
sti
xchg
mov
insb
adc
jb
dec
in
push
mov
movl
push
addr16
push
pushf
adc
cli
cmp
and
scas
cltd
hlt
data16
test
mov
int3
pop
bound
add
inc
or
lods
es
aam
out
mull
sbb
push
outsl
jmp
sub
mov
std
ljmp
push
hlt
inc
dec
sub
outsb
mov
mov
lahf
adc
xchg
insb
or
xchg
add
ja
ret
fisttps
sti
push
dec
rorb
rcrl
adc
pop
and
mov
add
incb
or
jb
pop
loopne
inc
ja
xor
iret
inc
test
inc
inc
sub
pop
lahf
jb
add
mov
enter
xor
in
xorl
mov
mov
add
stc
lret
addr16
inc
and
cmp
subb
mov
call
mov
jmp
pop
sbb
insb
sti
jne
sub
cmpsb
sbb
out
sub
int
cmp
cmpsb
fdiv
cmp
arpl
arpl
fimuls
jg
scas
das
fldl
mov
mov
rcrb
xchg
clc
js
jo
dec
mov
arpl
jmp
cmp
xchg
aam
jmp
jp
xchg
loop
out
sbb
cmp
lcall
addr16
cld
addb
scas
add
repnz
and
jle
fs
xchg
fistps
sub
cli
mov
sbb
test
imul
aas
orb
cmpsb
mov
or
clc
les
xchg
cld
xor
popa
xor
bound
imul
dec
sub
repnz
add
xchg
xor
ds
das
pushf
test
jnp
inc
and
roll
pop
sbb
pop
push
adc
sbb
test
xchg
jne
mov
cmp
xchg
sub
sub
shr
ret
push
dec
add
mov
imul
repz
loopne
stos
or
sbb
les
call
mov
cmp
dec
xlat
jae
lahf
daa
adc
fcmovnbe
and
sbb
nop
or
push
rcrb
arpl
into
int
cmc
push
inc
clc
jns
inc
pop
pushf
mov
mov
inc
and
vcvtps2dq
xor
test
xlat
in
lds
cmp
dec
dec
mov
cs
add
and
mov
fnstsw
adc
mov
jmp
dec
cmc
insb
push
ja
shlb
lcall
jp
pop
mov
sarl
add
imul
adc
cmp
jecxz
aad
clc
cmp
mov
push
shrb
stos
sub
push
xor
xchg
clc
mov
in
cli
add
pop
test
jno
orb
movsl
inc
inc
sbb
jecxz
mov
repnz
sbb
rclb
cli
gs
adc
test
add
filds
mov
mov
bound
cmpsl
cmp
pop
pop
testl
jno
fdivr
pop
stc
add
dec
popa
xchg
nop
xchg
xchg
sbb
cmp
add
mov
or
ja
aaa
push
dec
push
pop
lahf
add
mov
mov
shlb
mov
cs
or
lds
sub
repz
add
outsl
fcomip
adc
rorl
fstpt
jns
mov
out
out
popf
inc
mov
mov
sbb
xchg
jnp
loope
sub
mov
pop
sbb
sub
daa
xchg
push
fs
sub
jl
jbe
xor
adc
push
inc
xchg
mov
cld
out
push
mov
test
xor
jbe
lds
or
test
cmpsl
inc
push
cmp
mov
pop
stos
jmp
or
cmpsl
ljmp
mov
add
and
in
shl
movsb
push
xor
imul
imul
ss
dec
bnd
sub
cltd
imul
mov
cltd
out
inc
stos
jge
jg
imul
or
inc
mov
nop
scas
sub
jae
and
and
loope
xchg
xchg
aad
adc
imul
pop
push
les
aas
xor
mov
loop
cmp
xchg
fldl
sahf
lods
adc
and
mov
lcall
pop
pop
pusha
and
cmc
pop
lods
dec
mov
idivl
inc
cmp
mov
rcr
mov
mov
fcom
cmp
jle
cmpl
daa
xlat
mulb
cmp
adc
xchg
cmc
xor
out
out
arpl
popa
cwtl
jmp
xchg
ds
mov
xlat
in
je
fwait
lock
lret
pop
mov
adc
filds
jge
inc
jge
or
je
cld
ret
lods
or
iret
pop
pop
inc
mov
cmp
add
addr16
jb
mov
or
and
ljmp
sbbl
movsl
call
test
pop
rorl
cmpsw
repnz
pop
add
xchg
push
shr
jecxz
dec
mov
add
dec
mov
lock
mov
andl
dec
out
push
lret
cmp
ret
leave
leave
or
or
jmp
inc
jp
mov
test
ror
xor
lret
push
test
shl
dec
xor
scas
sti
or
jg
stos
xor
stos
cmc
scas
pushf
int3
cld
xor
mov
jmp
int3
jmp
xor
stos
insl
ret
dec
xchg
or
adc
pusha
sahf
inc
xor
in
mov
jbe
mov
int
dec
das
ficomps
mov
sbb
ror
mov
and
mov
cmc
and
into
sbb
fisttpl
lcall
out
xchg
sub
add
into
ret
adc
cmp
daa
sbb
cmp
jb
packuswb
jo
aaa
dec
cld
cltd
rcrl
sahf
outsb
jne
mov
stc
pop
add
enter
out
sti
inc
enter
pop
cmc
aad
dec
mov
and
and
out
stos
mov
mov
cld
cmp
movsl
cmp
push
ja
jb
in
add
pusha
pop
dec
inc
or
mov
addr16
addr16
lds
push
stc
xchg
jecxz
inc
cmp
cmc
cmpl
sbb
dec
sub
xchg
daa
mov
in
jle
lea
xor
add
into
je
pop
mov
ficomps
mov
aas
mov
repz
pop
xchg
xchg
int3
or
or
mov
fwait
adc
mov
sub
fldcw
mov
pushf
les
inc
sub
adc
std
push
in
jge
mov
add
les
xchg
pop
lods
ljmp
jno
xchg
out
xchg
add
sahf
lock
mov
test
sub
add
imul
and
orl
iret
leave
in
ret
push
aad
insl
cltd
into
je
addb
or
push
repz
in
jbe
push
add
mov
aas
mov
or
lcall
std
mov
stc
fstps
push
and
mov
xlat
popf
dec
test
call
cmpsb
nop
mov
pop
jle
cltd
mov
pop
sub
xor
outsl
sub
or
inc
push
shrb
add
add
sbb
dec
pop
je
idiv
and
pushl
scas
popf
clc
out
popa
pop
int
cs
mov
push
inc
dec
adc
mov
inc
sub
pop
in
adc
xchg
dec
inc
adc
adc
pushf
jo,pn
mov
jp
lea
enter
add
shlb
aas
push
add
pop
lock
dec
jno
add
ret
inc
sub
mov
push
jp
je
jne
scas
sub
clc
ret
sbb
test
jne
push
into
pop
insb
jp
incl
or
cmp
pop
in
sbb
sbb
xchg
pop
movsb
movsb
gs
xchg
iret
push
aas
dec
mov
cmc
ljmp
adc
out
push
imul
add
insb
mov
jge
jae
sarb
lea
or
mov
mov
les
sbb
insb
mov
stos
push
or
cltd
xchg
sti
pop
add
or
aam
test
and
rcrl
pop
and
mov
jmp
fadd
mov
cmp
and
xor
sbb
mov
iret
std
imul
loopne
outsb
xor
inc
xchg
mov
sbb
cmp
cmpsl
mov
lcall
ljmp
or
repz
rcl
fidivl
sub
fucomp
and
xor
int3
xchg
lea
mov
adc
stos
mov
int3
jnp
mov
inc
push
scas
jl
mov
leave
adc
push
pop
push
clc
jo
xchg
mov
std
sbb
hlt
call
add
pop
in
rep
lcall
inc
ja
dec
sahf
pop
aad
inc
int
mov
fcomps
xchg
std
jbe
jns
xchg
jl
rcrb
dec
and
mov
sbb
enter
xor
jnp
inc
nop
xchg
fwait
lea
icebp
sbb
xor
xchg
or
addr16
sub
push
movsl
mov
xor
bound
je
push
arpl
push
mov
popa
fsubrl
adc
sarl
mov
out
mov
pop
dec
andl
lret
cmp
jecxz
mov
adc
or
test
push
loop
mov
repz
arpl
mov
dec
movlps
lods
in
inc
in
push
lods
scas
and
inc
and
int
int3
fcoml
rcrb
and
cmp
or
imul
fs
pop
arpl
push
cmc
pusha
push
leavew
push
bound
lahf
dec
and
add
out
xchg
mov
stos
sub
mov
jge
adc
fisubs
pop
es
add
jecxz
push
jl
and
mov
xor
cmp
imul
push
jl
or
in
adc
pop
add
popf
jnp
add
adc
push
out
lret
dec
cli
mov
xchg
push
pop
push
cmpl
testl
xor
push
in
inc
adc
cmpsl
or
cmp
enter
cmp
mov
mov
dec
cmpsb
inc
push
test
mov
pop
outsb
jno
xor
dec
stos
add
icebp
add
adc
inc
cmp
or
mov
mov
hlt
jecxz
add
ljmp
jo
push
inc
jecxz
repnz
adc
and
xchg
jb
xchg
push
int3
or
flds
inc
pop
cmpl
inc
into
shlb
xchg
jmp
aad
inc
ja
pop
mov
dec
jmp
adc
adc
and
les
xchg
or
dec
sahf
mov
mov
negb
cmp
and
lcall
mov
dec
enter
dec
sub
push
outsb
enter
push
sbb
inc
testl
scas
flds
lds
mov
movsb
pushf
neg
imul
xchg
sbbl
jno
add
adc
je
and
ds
push
inc
js
dec
dec
xor
shlb
out
sub
scas
nop
addl
fsubrs
push
mov
or
sbb
inc
fsubl
push
fidivl
out
fadd
add
ja
and
mov
sub
leave
inc
lods
cs
inc
dec
sbb
pop
ret
adc
scas
cmp
clc
out
movsl
loopne
push
sbbl
fs
push
ret
dec
dec
nop
xchg
fs
jle
mov
test
loopne
cmp
fbld
loopne
push
clc
ss
inc
scas
jno
lods
outsb
jb
hlt
jo
sahf
xlat
outsl
sbb
lea
jg
mov
repnz
dec
mov
cmpsb
sbb
ret
sub
aaa
pop
cmpsb
cmpsb
push
into
add
fsubr
loope
aas
jne
movsb
push
xor
sbb
stos
inc
push
and
push
stos
add
jmp
fldl
in
cwtl
inc
mov
movsl
popf
push
push
movsl
mov
mov
push
fs
fcmovnb
dec
aad
pop
or
fs
inc
pop
jae
jbe
clc
mov
push
subb
test
mov
cli
repz
stos
aas
jle
das
mov
xchg
xchg
inc
bound
das
xor
cmp
out
mov
jno
adc
insl
and
fcoms
fbstp
mov
in
mov
cmpsl
pop
inc
fbstp
call
xchg
js
push
or
cmpsb
jle
jl
pop
jne
inc
repnz
sub
mov
xor
scas
dec
lret
or
addr16
sbb
dec
mov
jg
ds
mov
xchg
fstl
out
xor
inc
sub
push
push
and
mov
shlb
and
and
jo
and
insl
inc
rol
arpl
test
dec
insl
inc
js
lret
push
cmc
fucom
pop
push
jp
inc
pop
vcvtsd2si
shll
xor
fsubrl
out
adc
push
xchg
push
push
inc
out
adc
sub
mov
daa
imul
adc
adcl
mov
packssdw
sahf
ljmp
sub
test
xchg
aad
jl
inc
dec
je
add
mov
test
pop
into
dec
pop
out
mov
daa
fildll
inc
imul
in
pop
sub
loop
enter
lcall
loopne
or
inc
frstor
push
inc
dec
push
fs
pop
jge
ss
aaa
or
faddl
inc
xor
cmpl
das
cmpsb
jns
xorl
jg
mov
mov
jae
push
mov
lods
push
xor
push
add
pop
push
sub
int3
addb
pusha
xor
pop
mov
inc
push
daa
add
in
shrl
out
push
cmp
pop
xlat
popf
outsb
push
in
arpl
and
mov
push
jg
sub
fwait
les
adc
sarb
je
sbb
out
pop
adc
mov
jge
movsb
in
movsb
cmp
pop
push
daa
enter
cmp
mov
inc
lret
add
fwait
lds
fcoml
cmp
jnp
adc
mov
add
xchg
jo
cltd
in
out
add
xor
cmp
out
push
jmp
mov
je
sub
cmp
mov
xchg
sub
sbb
ljmp
add
out
jge
test
inc
cmpb
icebp
clc
jnp
fsubs
lahf
aam
adc
mov
pusha
jns
push
add
dec
lock
fsubl
or
lock
hlt
fcoml
cld
pop
in
out
cmp
mov
pop
loop
sarb
push
add
adc
mov
mov
dec
in
sbb
inc
mov
and
out
aad
xchg
repnz
aaa
int3
out
pop
push
add
dec
pusha
pop
rclb
ret
mov
iret
cltd
xor
push
fadds
jne
pop
mov
sbb
inc
and
out
add
mov
arpl
mov
addr16
pop
push
xor
pop
imul
jae
mov
add
jne,pn
sti
repz
and
push
mov
lret
mov
inc
jbe
mov
lds
clc
cltd
jno
notb
int
inc
pop
lods
mov
add
aas
mov
push
cmpsb
cmc
pop
sub
pop
jbe
xchg
and
pop
sub
push
in
insl
dec
test
pop
repnz
push
je
xchg
or
cli
cs
lods
cmp
and
mov
push
insb
in
aam
shll
xlat
sahf
cmc
mov
pop
ret
stos
mov
mov
cwtl
push
mov
subl
mov
rcrb
inc
push
lcall
stc
xchg
in
out
pop
pusha
outsl
jmp
pop
mov
adc
outsl
sahf
cmc
loop
xchg
into
ss
pop
in
lahf
js
xor
or
ds
and
leave
cmp
sub
add
push
mov
lock
into
mov
push
and
stc
sbbl
scas
fstl
mov
push
or
adc
insl
test
mov
add
or
lds
inc
stc
jecxz
loop
pop
es
xor
sbbl
pop
mov
mov
sub
push
outsl
cwtl
xor
sub
dec
sbb
push
daa
jbe
loop
shrb
dec
push
sub
dec
fwait
pop
outsl
hlt
ret
aas
flds
push
adc
notl
xor
loopne
jp
cmpsl
loopne
ret
repz
daa
and
adc
les
ja
pop
ficompl
movb
inc
pop
xlat
mov
inc
and
mov
mov
adc
jl
out
pop
dec
pop
mov
lods
aam
xchg
cmpsl
repz
into
jae
or
rcr
add
pop
xor
sub
in
stos
int
jge
push
xor
pop
sbb
out
add
xor
cmp
push
adc
popf
push
outsl
xchg
xchg
in
lret
int3
fmulp
and
or
sarb
cmp
jmp
fidivs
inc
jge
pop
aaa
shll
fnclex
mov
sub
iret
fstl
cltd
test
movsbl
pushf
into
std
dec
push
fmull
cmp
mov
xchg
iret
test
imul
mov
jg
js
popa
cmp
cmp
andb
pop
xchg
adc
ljmp
cmp
loopne
sbbl
sub
sub
mov
push
insl
sub
sbb
xorl
inc
mov
jae
aas
aad
pop
gs
ss
cs
nop
sbb
mov
das
in
rcrl
outsb
repz
lds
push
jb
mov
in
mov
sub
ror
mov
nop
fidivrl
ret
aaa
mov
aad
mov
mov
mov
pop
adc
in
jg
mov
and
out
pop
pop
jl
and
jge
cmp
xor
fstl
mov
in
and
inc
cmpsl
jle
xor
aad
test
xor
xchg
pushf
pop
scas
lock
loope
call
mov
cmc
dec
ja
stos
rcr
js
stos
std
push
movsb
lock
outsl
or
and
adc
popa
loopne
mov
inc
fs
imul
jb
fbld
aam
notl
dec
repnz
roll
and
jecxz
stos
es
shll
dec
in
neg
add
in
je
int3
js
stos
rorl
sahf
ds
pop
push
cmp
adc
rolb
data16
cld
les
aad
xor
and
xchg
cmpsb
out
arpl
mov
insb
pusha
add
add
out
push
jmp
inc
mull
xor
inc
mov
dec
mov
or
xchg
fsubr
fimuls
cmp
jns
and
cld
cmc
test
std
aad
adc
in
and
inc
push
mov
ss
jne
stos
or
scas
xchg
pop
lret
cs
movsb
jecxz
idivb
lret
lds
push
or
insl
jne
test
push
jmp
mov
push
lods
movsl
mov
daa
add
leave
cld
mov
sbb
mov
inc
sbb
test
dec
in
in
or
mov
pop
or
sahf
and
jb
sbb
aam
cmp
imul
mov
movsb
fisubrl
push
sbb
push
dec
sub
cmp
inc
sti
push
mov
bound
add
aam
cmp
adc
stos
shll
in
mov
dec
subl
xor
inc
out
jle
xchg
mov
fiaddl
dec
ret
dec
sbb
repz
pop
pop
negb
sub
push
dec
jge
mov
into
imul
adc
add
rclb
icebp
adc
dec
push
sbb
push
jle
outsl
loop
ret
rorb
mov
int
sub
hlt
inc
call
lahf
mov
insl
pop
mov
sbb
addr16
divb
cmc
out
sbb
jecxz
sti
mov
cmp
sub
or
and
loopne
or
mov
xor
dec
dec
mov
jo
sub
call
sub
dec
push
cmpsl
sub
dec
xor
mov
inc
iret
jp
fldt
and
xor
neg
push
int3
pop
cmp
inc
jg
inc
out
sub
leave
push
ds
incb
pop
xchg
push
cmp
sbb
aam
mov
out
jmp
outsb
pop
adc
cmpsl
mov
dec
cmpsb
and
cltd
fs
addr16
add
mov
out
mov
loop
inc
lock
stos
pop
mov
je
pop
popl
push
aad
and
mov
push
das
fdivrs
rcr
adc
adcl
push
sbb
pop
fs
jmp
push
test
dec
jmp
inc
dec
cmp
insl
ja
and
xchg
movsl
and
xor
dec
mov
dec
xor
cmp
cmp
push
push
push
xchg
aam
and
add
stc
or
cmp
xor
imul
inc
xor
xor
or
sbb
pop
push
pop
fdivrs
pop
jge
pusha
jbe
push
fnsave
shl
fidivl
or
sub
repnz
pop
es
dec
std
add
shl
mov
arpl
neg
in
sarb
adc
out
pushf
jns
push
out
out
jno
in
fnsave
sahf
xchg
in
out
xor
inc
lahf
jmp
xchg
cltd
push
xchg
xchg
and
fidivs
fbstp
mov
add
pop
loope
cmc
add
or
stc
sti
cltd
inc
jns
ds
aaa
dec
mov
inc
mov
sub
addl
inc
or
xchg
jns
jp
fs
mov
mov
insb
std
dec
insb
cmp
cltd
lods
in
push
sbb
repz
mov
xchg
sahf
xlat
add
dec
ret
mov
cld
sub
ret
xchg
jg
sbb
add
inc
mov
xor
sar
sahf
add
sub
in
js
pop
mov
pop
addr16
dec
fimuls
or
xchg
and
out
pop
jmp
push
fidivs
shrl
xchg
lea
sub
stos
ret
sub
pushf
mov
add
stc
jne
or
lret
jecxz
mov
xchg
cmpsl
dec
dec
jmp
cli
pop
jge
or
push
and
adc
xchg
insl
inc
push
andl
xor
out
mov
add
ret
das
aam
jmp
lods
test
outsl
push
inc
xchg
cld
sub
loope
clc
sahf
stc
push
mov
adc
sbb
sbb
xor
mov
lret
nop
xlat
iret
pop
flds
pushf
cmpsb
movsb
int
mov
ja
mov
cld
les
add
scas
int3
and
cwtl
pop
aam
xchg
dec
mov
push
rcrl
outsb
mov
adc
push
scas
mov
enter
cmpsb
pop
int
xlat
aad
inc
and
scas
dec
sub
mov
push
dec
daa
pop
mov
xchg
xchg
cld
daa
insb
lret
inc
cwtl
out
shr
inc
xor
or
and
test
lret
fsubs
pcmpgtw
mov
and
dec
and
push
test
insb
subb
jnp
dec
push
in
jnp
add
loope
lret
movsb
scas
push
push
iret
js
jp
mov
les
add
loopne
cltd
rorb
inc
adc
xor
ret
push
notb
mov
sbb
rcll
push
inc
movsb
pushf
add
lcall
mov
jbe
and
loope
cmp
ret
xor
and
and
push
xor
imul
mov
add
cwtl
push
sbb
aam
jle
test
out
mov
int3
sub
sub
sbb
and
lods
cmc
sti
sbb
test
mov
flds
ja
movsl
push
mov
repnz
adc
shrb
lods
mov
push
fldl
push
mov
fldl
mov
mov
shlb
faddl
loopne
push
pushf
js
and
test
pop
nop
xchg
lods
and
add
mov
les
stc
mov
xor
insb
rcl
fwait
add
jns
add
mov
out
mov
loopne
mov
lea
jae
enter
insl
add
aam
shl
jg
mov
sti
stos
jae
out
mov
add
hlt
xchg
adc
in
daa
out
add
mov
jmp
sbb
xchg
scas
xor
dec
andl
xchg
xchg
stos
push
add
inc
jle
fbstp
xlat
outsb
dec
and
fsubs
push
stos
pop
sbb
pop
rol
imull
and
sbb
lds
lods
sbb
fidivrl
pop
test
lods
repz
and
cltd
xchg
xor
sub
ficoms
cld
sub
adc
sbbb
icebp
sub
push
les
add
fistpl
push
push
add
fisttpll
add
punpckhbw
dec
and
sub
outsb
xor
mov
loop
ss
jbe
lea
or
ja
sbb
mov
test
mov
mov
or
and
lds
std
dec
popf
repnz
mov
ds
mov
lds
mov
and
rcrl
pushf
inc
push
ret
mov
sti
lret
add
ja
neg
scas
jecxz
inc
lret
movsb
push
xorb
cltd
push
ret
xor
jae
mov
into
ja
mov
lahf
pop
add
in
jae
cli
jbe
pop
setae
xchg
sbb
push
mov
dec
or
add
mov
xor
add
cmp
pop
lea
shlb
fucomi
sub
lods
pop
out
xor
mov
outsb
in
jp
inc
popf
ret
xchg
and
outsb
nop
pop
inc
sub
ret
enter
aaa
jmp
cld
or
ds
xorb
mov
das
das
cmp
js
and
xor
dec
sbb
push
cmp
sbb
xlat
dec
xchg
mov
clc
or
out
stos
fmuls
or
mov
outsb
cmp
data16
add
bound
enter
xchg
lock
orb
and
fs
cld
test
test
pop
add
sbb
ljmp
dec
and
rep
out
or
dec
mov
mov
pop
mov
shrl
mov
sti
push
cmp
jb
aaa
mov
mov
mov
or
mov
mov
push
fcom
lret
push
clc
ftst
xchg
test
sub
xor
arpl
add
pop
pushw
mov
popa
mov
pop
test
push
sub
daa
outsl
outsb
jbe
push
cwtl
mov
mov
lahf
inc
inc
fsubrs
fadds
repz
mov
ds
lock
cli
shrl
xor
out
mov
fs
mov
iret
and
dec
xchg
sbb
loopne
jb
dec
sub
outsl
push
dec
xorb
repz
push
daa
mov
call
and
hlt
mov
push
push
das
andl
scas
repz
dec
addl
scas
ficompl
push
jo
aaa
mov
mov
repz
enter
pop
hlt
into
cmpb
stos
sbb
mov
jmp
and
jnp
cmc
xlat
fs
push
fs
sbbl
insl
cmp
sub
push
insl
or
mov
dec
repz
sarl
ljmp
lea
sub
pop
stc
and
outsl
sti
xchg
test
ret
fadds
sub
cs
dec
and
inc
push
jle
cld
mov
mov
loope
sub
pop
pop
mov
leave
mov
jmp
jno
mov
pop
or
mov
insb
in
fstpt
negl
sbb
sub
ds
das
popa
and
call
adc
sub
add
arpl
pop
mov
jbe
and
mov
dec
mov
xlat
dec
pusha
inc
and
and
add
dec
test
or
mov
mov
daa
xchg
jge
int
adc
inc
push
jmp
ret
stos
jmp
or
and
popa
daa
icebp
dec
jns
mov
cmp
cli
sbb
repz
mov
mov
out
mov
mov
sahf
xchg
inc
sar
repz
fistpl
daa
mov
pop
out
lods
imul
and
rol
xlat
mov
xchg
repnz
push
movsb
mov
fisubrs
jns
push
and
decl
loope
or
cmp
je
and
xor
mov
repnz
push
mov
push
mov
insl
inc
mov
mov
fidivl
shl
mov
pop
repnz
mov
movsb
sub
add
and
loopne
cmpsb
rcrl
mov
movsb
subb
dec
pushf
and
adc
and
mov
data16
jge
out
pop
cmp
mov
rorl
daa
inc
ror
mov
or
lods
stos
add
mov
sub
mov
dec
mov
jle
das
lret
test
mov
stos
js
loop
and
mov
adcl
sbb
cmc
mov
notb
mov
in
test
fstps
adc
subl
in
xor
xor
pop
clc
xor
ret
repz
push
inc
mov
loop
shll
and
inc
jp
mov
out
pop
int
xchg
ffree
lods
test
std
shl
and
ret
jnp
jne
or
jae
fcoml
iret
movsb
roll
popf
fisubs
adc
push
xchg
xor
add
out
push
mov
fdivr
xchg
in
dec
jp
shll
in
fistpll
sub
xchg
mov
fisubrl
out
mov
sbb
and
add
std
mov
push
mov
fs
fnstcw
add
insl
and
imul
lods
andl
cmp
repz
sti
je
out
fiadds
add
lock
and
adc
sbb
add
mov
int3
push
into
xorl
xor
xor
or
inc
cmp
lcall
xchg
insb
daa
mov
dec
and
xchg
icebp
test
test
pop
cld
pushf
push
fists
mov
jno
int3
or
push
mov
outsl
adc
xchg
pop
jle
pop
jg
push
jp
call
stc
cmp
jae
and
movsb
cmp
int3
pushf
mov
jns
jno
imulb
mov
int
xchg
xchg
xlat
pop
inc
push
add
lea
pop
lret
fidivs
mov
dec
cmpsb
inc
mov
fdivr
pop
daa
mov
xor
push
mov
inc
adc
outsb
rclb
out
mov
cmp
push
shl
xchg
jne
in
cmp
movsl
les
je
push
aam
sub
jle
jns
je
dec
jp
jb
xor
xlat
mov
push
and
in
lods
inc
xchg
jnp
mov
shlb
mov
xchg
inc
es
xchg
push
popl
jl
jle
rcrb
xor
shr
lcall
mov
mov
js
adc
mov
ret
mov
inc
mov
sub
jl
mov
sbb
sbb
out
lcall
in
push
xchg
int
popl
stos
shrl
outsl
out
cmp
pop
and
adc
fwait
repz
dec
sub
fldcw
dec
push
mov
sbb
stos
in
aad
sub
scas
das
sbb
mov
in
cwtl
aad
xlat
push
xor
mov
loopne
sbb
push
in
mov
mov
loop
decb
test
push
cmpsl
mov
jmp
sub
daa
cmp
jl
push
or
mov
and
clc
mov
sbb
push
sbb
test
out
pop
sub
fidivs
cmc
repnz
xorb
mov
push
push
cld
sbb
sub
popa
dec
sub
mov
pop
cld
lret
subl
in
rcr
icebp
rorl
adc
pop
pop
test
cmp
aam
jne
fldcw
arpl
int
in
push
jge
movsl
loopne
or
pop
dec
scas
movsb
push
cmpsb
sti
dec
mov
xlat
add
cmp
adc
sub
ds
jle
popf
mov
xor
insb
mov
outsb
in
mov
adc
mov
sbb
clc
push
jecxz
jg
pushf
push
pop
adc
clc
nop
jge
lock
and
lcall
dec
clc
xchg
push
lods
jp
inc
cmpsl
gs
arpl
sbb
lods
jg
out
inc
xor
mov
cmp
lahf
dec
repz
in
pop
sbb
fsubr
ja
hlt
inc
jo
sub
lods
imul
cmp
add
sbb
aad
lahf
lock
lahf
repnz
adc
repz
ss
or
and
and
gs
lahf
adc
je
xor
ds
cmp
outsb
rolb
test
cltd
push
loop
jnp
push
cmp
xchg
inc
and
ss
dec
pop
mov
dec
out
inc
lahf
lahf
outsb
outsl
sbb
xor
adc
xchg
adc
loope
lret
in
or
rcrl
imul
leave
push
push
jo
dec
std
mov
push
movl
pop
push
stc
out
int
lock
mov
mov
shlw
ret
mov
fcomps
pop
xchg
iret
mov
xchg
cwtl
call
pop
mov
fnstenv
fidivrs
mov
cmp
aam
je
lods
adc
stc
xchg
out
fnsave
pop
push
int
jno
push
or
mov
imul
xorl
xchg
xor
ret
dec
mov
push
out
mov
xor
in
fmull
jns
nop
xchg
xlat
or
lods
push
out
jg
mov
dec
mov
or
mov
bound
clc
fldcw
pop
sti
xchg
add
addr16
std
jmp
jns
cmp
inc
inc
mov
jle
mov
and
cmpsl
popa
popf
icebp
idivl
lret
stc
cmp
in
xchg
cmp
mov
addr16
call
dec
sub
jge
and
jnp
and
in
clc
mov
cs
cltd
sub
adc
nop
cmp
daa
inc
lds
inc
shl
fs
jnp
sar
clc
mov
fstl
dec
add
pop
pop
cmc
push
fnstcw
and
ja
xchg
jno
cmp
bound
test
call
out
mov
mov
xor
out
mov
fdivrl
in
mov
nop
cmp
std
sti
xor
xor
lds
mov
imul
sub
ds
movsl
testl
adc
jb
rep
inc
sbb
add
loopne
shl
loopne
test
adc
les
sub
scas
mov
insb
daa
jge
push
xor
add
pop
test
push
xchg
and
jbe
push
cmc
ret
call
or
das
stos
mov
arpl
mov
mov
loopne
cs
pop
mov
ljmp
inc
and
inc
fld
dec
lret
in
in
int3
sbb
aad
add
xchg
mov
mov
and
cmpsb
and
ja
imul
mov
jg
rorb
sub
dec
mov
cmp
adc
mulb
pop
dec
and
lds
xchg
and
sarl
mov
mov
fnstcw
jecxz
sub
pop
sbb
ror
imulb
and
push
mov
loope
icebp
stos
mov
cwtl
ss
vmread
leave
into
loopne
ja
inc
pop
and
and
stos
test
addr16
or
je
or
rorl
js
adc
pop
rcrb
push
call
push
ret
mov
push
addr16
push
inc
cmp
mov
outsl
mov
mov
push
in
cli
shl
cwtl
test
mov
into
sbb
in
aam
push
sbb
shl
or
rolb
popa
push
gs
sub
lret
pop
aam
jmp
xor
xor
mov
mov
aas
in
int3
dec
aad
push
add
mov
jl
call
lods
jecxz
cmpsl
es
aas
inc
iret
sbb
dec
loop
mov
hlt
inc
ja
xor
dec
mov
fnstcw
rcrb
les
fdivrs
cwtl
lods
jo
xor
mov
dec
cltd
push
mov
and
cmp
out
icebp
andl
out
and
ja
test
scas
stos
test
cmpsl
adc
mov
xor
repz
mov
lret
dec
paddsw
aas
data16
arpl
aas
js
inc
or
adc
dec
bound
jp
shrb
test
sbb
jge
clc
mov
sbb
aas
sbb
nop
jne
dec
lret
mov
cmpsl
test
lcall
pcmpgtd
push
fldenv
ret
lret
push
push
bound
rorl
xchg
mov
xor
cmp
sub
and
mov
mov
cmp
jmp
cmp
mov
xchg
or
jmp
xor
jno
xor
aaa
scas
cmpsl
jmp
rcll
mov
int3
inc
sub
ljmp
inc
sub
cs
push
mov
xor
cltd
cwtl
lahf
outsl
repz
adc
fdivl
bound
push
jl
fcomps
call
push
push
sbb
ret
xlat
bound
stos
out
sub
jne
mov
out
in
das
xchg
cld
test
cmp
mov
xchg
into
js
add
mov
and
test
sbb
add
cmp
inc
xchg
call
stc
aad
push
jb
cmp
popf
loopne
fiaddl
push
push
adcb
xor
xor
and
les
sub
xchg
pop
inc
je
add
in
lock
inc
push
pop
push
in
rclb
jmp
pop
nop
mov
push
ds
mov
inc
push
add
add
lcall
sahf
jl
xor
dec
cltd
dec
je
call
movsl
mov
in
outsl
push
mov
fucom
faddl
dec
inc
das
leave
rorb
or
arpl
xchg
loopne
cltd
mov
lret
xlat
mov
in
leave
xchg
and
sub
add
adc
pop
mov
dec
cmp
mov
int
mov
push
movsb
cmp
sbb
dec
jnp
adc
fisubrl
lret
mov
aam
mov
pushf
insb
cmp
sbb
mov
xor
xor
jecxz
mov
mov
xchg
adc
sub
xchg
movsb
scas
push
jbe
out
xchg
adc
jmp
push
popa
aad
insb
fisttps
popa
dec
lret
sbb
sbb
sahf
push
rol
add
push
add
test
cmpsb
jae
insl
dec
negb
pop
mov
dec
addr16
aam
jae
xchg
sbb
xchg
jle
lods
cli
sahf
movsl
test
and
movsb
out
add
test
push
fnsave
repnz
in
adc
jmp
repnz
xor
push
popf
mov
mov
hlt
dec
pop
repnz
mov
fcompl
push
imul
popf
mov
sub
sub
and
sbb
scas
addb
cwtl
aaa
mov
sub
dec
pop
mulb
lods
cmpsb
lret
imul
jb
jmp
xor
in
ret
push
outsb
xchg
aam
enter
xor
sub
cs
icebp
cli
shlb
mov
je
xor
mov
loopne
cltd
inc
enter
sahf
mov
sarl
ds
sarb
sbb
out
inc
cld
cltd
push
cmpsl
mov
jo
pop
or
std
xor
outsl
mov
mov
in
stos
or
notb
and
inc
push
shrl
cmpsb
icebp
js
add
addr16
sti
mov
fcmovnb
jecxz
scas
mov
xor
scas
loope
jns
fldl
xor
fisttps
jae
icebp
ja
pop
orb
jg
bound
inc
xchg
divb
inc
mov
mov
out
insl
call
lods
popa
hlt
mov
and
jbe
inc
xor
mov
jne
mov
in
cmc
push
mov
mov
jno
int
mov
movsl
mov
inc
jno
mov
hlt
insb
push
out
jge
test
ret
outsl
jbe
scas
pop
aad
push
push
mov
sub
inc
jo
xchg
cmp
pusha
sbb
je
cltd
imul
mov
sbb
roll
pop
xor
sbb
xor
inc
mov
iret
hlt
ss
xlat
and
cmpb
in
lahf
mov
xchg
cwtl
xor
dec
mov
imul
orl
popa
out
test
adc
fdivr
scas
sbb
push
push
mov
lahf
int
notb
popa
pop
fidivrs
push
mov
hlt
lret
aad
je
in
jecxz
add
mov
bound
imul
insl
fisubl
xchg
push
or
push
rcl
fcompl
shrl
ds
imul
enter
sbbb
mov
out
pop
addl
adcl
scas
push
lea
jnp
js
repz
ja
out
dec
imul
aam
out
jae
rol
cmp
fmuls
cmp
push
int
inc
dec
push
sub
jno
add
jle
ljmp
and
leave
sbb
add
jns
push
pusha
stos
mov
aam
lahf
outsl
pop
fidivrl
mov
push
xor
add
mov
jge
mull
dec
mov
and
repnz
cmpsb
movl
dec
or
push
sub
fstps
fisubrl
loope
sbb
jns
lret
jae
push
sbb
inc
repnz
add
cs
inc
lock
imul
inc
rclb
mov
mov
push
aaa
es
cli
loop
mov
into
jp
aas
jmp
movsb
shll
jo
cmp
xor
xchg
in
aas
dec
outsl
sbb
jbe
mov
cmc
negb
int
pop
lock
push
or
mov
flds
sbb
rclb
xor
es
cld
std
push
dec
or
fcoml
fwait
sub
shrb
xchg
int
xchg
es
inc
lods
or
sti
or
sub
and
adc
loopne
cmp
jle
push
add
mov
mov
cmpsl
test
sti
loope
sub
lock
xlat
mov
mov
inc
stc
jle
xchg
ljmp
inc
xor
pop
push
pop
ret
nop
test
test
jb
pop
cmovs
cmpsl
push
sub
movsb
inc
rol
jbe
xor
dec
ficoml
pusha
push
mov
in
lcall
fs
pop
negl
jnp
cli
push
or
mov
and
cmp
addr16
add
xchg
mov
add
inc
xchg
adc
mov
je
stos
mov
mov
lret
push
mov
jge
fld
push
lock
es
cmp
es
dec
xor
addr16
push
pop
inc
dec
push
push
mov
push
pop
mov
or
popa
es
dec
sbb
cmp
int3
sub
xchg
orl
adc
mov
and
inc
sbb
aam
xchg
xchg
int
movsl
sub
pop
and
push
imul
es
loopne
or
mov
sbb
dec
xchg
pop
lods
repz
popf
jae
push
roll
data16
or
jmp
addb
js
cmp
jge
push
push
dec
mov
adc
mov
ljmp
gs
movsl
test
xchg
fdivs
fdivrs
jge
jb
xchg
inc
mov
icebp
jbe
xchg
out
std
cmp
pop
adc
push
jl
dec
add
orl
lcall
jge
xor
rcrl
pop
js
jnp
push
aam
les
cmp
ret
int3
adc
fwait
imul
test
inc
and
sti
stc
xchg
stos
push
in
leave
je
test
add
aad
inc
mov
jne
lods
pop
movsl
dec
dec
leave
push
jecxz
push
cmp
outsl
mov
cmp
outsl
mov
fs
jg
fadds
das
pop
ss
inc
pop
pop
pop
fisubrs
adc
or
or
xchg
xchg
jb
xor
adc
shl
js
pop
movsb
rorl
iret
jns
sub
jmp
pop
mov
dec
dec
xlat
dec
roll
jecxz
outsl
mov
xor
or
leave
repz
pop
outsb
inc
mov
xor
cld
testb
imul
xchg
shlb
mov
xor
insl
mov
scas
es
xchg
jns
push
cmpsl
loop
or
jno
rol
stos
xor
and
add
dec
xchg
pop
jmp
sbb
dec
in
xchg
or
push
add
stc
mov
pop
add
test
add
adc
ds
movsb
stos
and
mov
pop
and
add
movsl
jne
mov
test
jno
dec
mov
js
pop
adc
xchg
push
mov
push
mov
and
inc
lock
push
add
sarl
rclb
sahf
ret
push
out
hlt
mov
sub
ja
mov
fstl
les
leave
jl
bound
jl
stos
movhps
xchg
scas
mov
subl
jle
xor
mov
cltd
popa
pop
es
cmp
inc
ja
mov
push
icebp
std
lret
icebp
sub
sbb
iret
mov
scas
ud2
fwait
scas
adc
inc
imul
aaa
and
push
es
push
push
pop
ja
and
mov
cmp
iret
out
dec
in
lea
add
outsb
outsl
sbb
push
or
stc
ret
dec
aam
ret
shrb
jbe
adc
les
mov
lods
and
mov
mov
and
pop
sub
xchg
adcl
pop
mov
dec
mov
call
sahf
sub
mov
int3
xchg
push
jb
std
testb
adc
jne
ss
push
pop
lods
ja
cmp
fdivrp
lret
cmp
add
jge
jmp
cwtl
inc
and
nop
loope
popa
movsl
sub
clc
inc
stos
cmp
popa
push
jg
rcrb
mov
dec
jnp
gs
mov
or
mov
push
push
xor
leave
arpl
or
mov
inc
sbb
dec
outsb
leave
jo
mov
mov
lcall
push
test
cmc
and
hlt
push
insl
pop
dec
jb
jmp
mov
sbb
fcoml
xor
sbbb
and
out
xchg
callw
imul
aaa
insb
aad
adc
xor
andl
sti
repz
std
loope
call
jo
jg
mov
aad
imul
lds
xchg
cmpsb
stc
jb
lret
scas
jp
insl
cld
imul
insb
dec
aaa
out
rolb
sahf
in
jg
xorb
dec
mov
daa
in
push
loope
or
js
mov
mov
xchg
and
mov
mov
or
dec
mov
pop
pushf
mov
and
dec
je
lock
ja
xchg
pusha
push
mov
add
nop
push
sbb
std
mov
inc
pushf
xchg
pop
out
shll
int3
inc
sar
mov
hlt
out
bound
in
add
inc
xchg
pop
daa
les
dec
inc
dec
enter
mov
lahf
ss
int3
jp
in
sub
das
pusha
jae
jb
scas
es
and
loopne
ret
test
inc
xchg
mov
popf
mov
cmc
aad
or
fldenv
and
jae
rorb
or
cwtl
ret
pop
jae
cltd
test
sti
mov
adc
jo
arpl
pop
int
sahf
push
xor
lret
jo
xchg
sbb
ss
call
push
pop
sub
imul
dec
lcall
outsb
jge
push
and
icebp
jne
add
lods
std
fdivp
and
inc
mov
movb
dec
sti
jae
iret
push
inc
dec
arpl
xchg
inc
pop
int3
cwtl
into
roll
sbbl
std
inc
cmc
ja
fldt
fidivrs
mov
das
repnz
jge
mov
mov
sub
rcl
repz
or
add
adc
jne
push
mov
mov
fs
xchg
ss
jg
rol
dec
int3
and
mov
xchg
xchg
mov
adc
dec
je
lahf
pop
lcall
mov
out
popa
sti
adc
std
xor
in
add
inc
jb
mov
xor
addr16
push
popf
daa
int3
mov
adc
xchg
out
xor
or
repz
adc
jo
loope
iret
add
mov
or
into
repz
cmc
lret
mov
adc
jb
mov
stc
loope
mov
inc
or
ss
jb
cmpsb
ficomps
mov
add
loop
inc
pop
aas
mov
mov
mov
into
jge
and
shl
inc
jo
lds
pop
xor
movl
or
mov
ds
mov
test
test
aad
jge
insl
insl
mov
in
imul
fists
cmp
leave
xchg
fbstp
int
stc
pop
mov
sbb
push
lret
jg
bound
adc
aaa
mov
mov
test
arpl
dec
fists
cmp
sbb
pop
cmc
cmc
aad
push
push
add
loop
add
mov
mov
fbstp
fwait
pushf
mov
push
push
daa
pop
fmuls
xchg
sub
outsb
dec
jl
or
add
outsb
gs
pop
xor
in
inc
push
repz
pop
jbe
shrl
sahf
insl
add
jecxz
dec
dec
inc
xchg
mov
jb
pop
inc
lahf
sub
add
sub
push
ljmp
adc
dec
adc
jmp
loopne
mov
sahf
int3
push
dec
in
gs
inc
mov
jecxz
jg
xchg
outsl
sbb
inc
xchg
mov
dec
je
add
stos
push
dec
add
xchg
jne
xchg
cmc
sbb
xor
push
push
and
shl
xchg
cltd
push
xlat
inc
call
pop
into
out
in
push
jge
mov
pop
int
lea
xlat
aad
cwtl
data16
stos
xlat
pop
push
and
rcrb
cmp
leave
lcall
ret
enter
das
bound
cmp
jmp
jmp
lods
push
std
xchg
cli
call
push
pop
bound
std
hlt
std
cli
jne
pop
inc
jmp
cs
mov
dec
repz
ja
aas
sub
sbb
sbb
andb
out
push
push
iret
or
int
nop
and
mov
mov
pop
mov
subb
xchg
xor
outsl
jo
and
call
ja
in
cmpsb
or
adc
aas
add
xchg
add
call
ret
pop
fwait
shrl
or
es
je
jle
subb
mov
std
fwait
xor
push
adc
cmp
push
lahf
or
xchg
mov
mov
pop
and
adc
mov
stos
lds
xchg
cwtl
sbb
mov
call
pop
in
jmp
sbb
xor
cwtl
outsl
xor
dec
pop
dec
pop
add
and
mov
sti
shrl
repz
mov
push
jne
rorl
jl
js
xchg
loope
add
outsb
lahf
add
stos
xchg
jae
pop
mov
xchg
sub
aam
enter
cvtps2pd
pop
adc
mov
cs
adc
lock
adc
pushl
jae
pop
repnz
out
mov
push
sbb
mov
outsb
outsl
mov
sar
sub
add
daa
test
outsb
push
iret
sub
pop
add
mov
and
cld
pop
push
int3
xchg
xor
mov
xchg
clc
push
das
dec
fstps
sub
cmp
insl
clc
push
inc
sub
outsb
mov
bnd
xchg
js
cs
int
cmc
mov
fs
negb
cmp
and
mov
sub
out
sub
mov
data16
shll
dec
aas
push
lds
sbb
push
leave
clc
clc
adc
in
or
mov
mov
pop
pusha
cwtl
fdivrl
mov
xchg
push
test
xorl
mov
mov
je
lahf
adc
cmp
repnz
fwait
sahf
addr16
push
add
cmp
jl
inc
add
ljmp
negl
sbbl
lods
aad
divl
pop
pop
movsb
mov
lock
and
push
dec
shl
inc
in
test
cmc
cmpsb
test
js
push
sub
jns
and
inc
dec
aam
lea
pop
pop
add
push
push
sbb
push
mov
dec
mov
adc
push
sbb
daa
jno
cmp
flds
jge
push
je
es
xor
ss
data16
pop
out
daa
int
lcall
out
cmp
and
fistpll
sbb
jb
push
push
cwtl
hlt
mov
add
daa
aam
or
negb
insl
xchg
mov
sahf
inc
dec
and
cmpsl
add
push
imul
push
daa
inc
repnz
xchg
int3
lds
test
jg
loope
mov
movsl
lods
cs
jae
popf
push
test
lods
out
in
add
xor
mov
dec
push
rorl
and
cmpsb
incl
adc
scas
out
out
inc
pushf
adc
loop
inc
mov
xchg
test
sbb
daa
rolb
js
push
arpl
adc
js
jns
out
cmp
scas
pop
scas
aas
mov
mov
iret
jb
push
pop
push
lret
mov
mov
icebp
fwait
pop
push
push
shlb
pop
add
sbb
cmp
pushf
imul
movsb
scas
jne
or
add
adc
mov
cli
sbb
or
adc
mov
mov
adc
pop
lret
xchg
pushf
sbb
clc
jg
in
push
cmp
xchg
test
dec
sub
inc
pop
mulb
sarb
shr
imul
pop
or
pop
sbb
into
aas
scas
into
jp
das
sbb
mov
jg
cmp
ljmp
negl
andl
push
sbb
nop
ret
rcr
dec
js
mov
je
scas
imul
mov
adc
push
cmp
cmp
popf
fisubl
cmpsl
sbb
mov
or
les
lock
mov
and
lock
fcoms
into
add
icebp
mov
outsl
lahf
inc
xchg
js
inc
pop
adc
cmp
roll
insl
enter
xor
xchg
aam
xor
pop
push
clc
int
mulb
mov
fdivrp
lret
sub
sbb
arpl
lcall
inc
stos
ds
jle
push
fucom
pop
xchg
sarl
dec
cmpsb
mov
push
jne
mov
imul
xor
and
pop
push
in
adc
push
ret
stc
push
mov
push
cmp
mov
pop
add
not
rorb
add
std
in
les
fwait
xor
add
cltd
loopne
in
outsb
int
stos
into
aam
xlat
and
push
inc
adc
jg
add
jae
xorl
push
jmp
inc
mov
cmp
xor
cld
mov
and
and
gs
fiadds
insl
adc
pop
pop
or
or
adc
mov
mov
pop
cmp
mov
xchg
mov
clc
add
fsubrp
jge
dec
mov
imul
dec
add
movsl
mov
xor
sbb
mov
bound
jp
add
cmp
and
mov
insb
dec
addr16
add
cmc
in
ficomps
jo
movsl
adc
stc
mov
and
out
lret
and
xorl
repz
stos
add
andl
xlat
xor
xor
sbb
mov
popa
add
pop
cwtl
pop
jo
orb
mov
xor
push
cwtl
jae
fwait
jb
lea
pop
jo
stc
xchg
das
cmp
and
mov
je
in
notb
pop
or
sub
xchg
adc
sbb
cmpl
stos
enter
dec
cs
and
mov
movsl
add
int3
or
ja
out
outsb
cmp
mov
mov
cld
stc
push
jg
push
adc
pop
jl
dec
dec
sbb
mov
cmp
xor
daa
adc
int3
shl
lock
ret
xchg
pusha
cmp
mov
fs
leave
push
sbb
nop
xor
rol
jmp
xor
outsb
ret
fs
pusha
aaa
subb
int
sbb
pop
xchg
idivb
shr
cmp
ret
sub
jnp
push
xchg
addr16
dec
clc
xchg
push
jp
inc
jl
inc
cltd
stos
jp
inc
add
sub
mov
movsb
inc
push
aam
icebp
cmpsb
inc
daa
cmp
aaa
hlt
out
xchg
inc
ss
push
pop
or
xor
push
iret
dec
icebp
push
jb
pop
fcomp
lret
into
enter
std
lahf
loop
mov
and
lods
jecxz
lahf
or
jmp
mov
jb
dec
dec
ret
mov
mov
cmp
ret
or
dec
push
shll
mov
fdivrs
mov
insl
push
inc
movsb
orb
cwtl
xchg
xor
jb
mov
and
jmp
mov
int
dec
sbbb
push
add
mov
sub
jmp
gs
test
gs
cmpsl
gs
mov
add
mov
xor
dec
xchg
jecxz
dec
cmp
flds
or
xchg
adc
sub
clts
or
cmp
pop
and
aas
cmp
jbe
les
jle
add
pop
mov
out
ja
es
push
cmp
lea
sub
leave
jb
outsb
movsb
dec
bnd
cmpsl
cld
pop
cmp
push
add
push
and
and
mov
inc
adc
addr16
jg
add
imull
mov
and
push
loopne
das
dec
pushf
aam
mulb
call
stos
insb
pop
xor
out
xchg
mov
das
ljmp
cmp
testl
mov
xor
dec
jmp
or
jmp
xchg
imull
xor
and
and
mov
andb
not
fldt
cltd
test
mov
push
push
mov
test
or
test
movsb
push
outsl
xor
sbb
cltd
sub
inc
adc
pop
mov
or
jg
ds
jb
mov
aaa
ret
ds
mov
sub
mov
ret
push
sbb
mov
inc
push
pop
or
jp
movsb
and
adc
mov
stc
inc
push
das
pop
leave
xor
stos
scas
fcoms
jns
pop
dec
arpl
scas
xor
push
sahf
dec
lcall
adc
mulb
fstp
ljmp
ret
sahf
movsl
cmp
mov
pop
aaa
fiaddl
ds
shll
pop
in
fbstp
push
lds
sarb
push
add
push
mov
outsb
xchg
ret
mov
jmp
aaa
dec
lods
lods
insl
adc
mov
sub
inc
repnz
shl
mov
lcall
lods
cmp
stos
cmpsb
pop
jno
push
scas
pop
imul
je
xor
fs
insb
jns
mov
push
sbb
in
lea
bound
jno
and
mov
sbbl
and
jp
pop
push
testb
lock
jge
xlat
les
push
jbe
xor
mov
pushf
xor
shll
push
in
dec
lcall
mov
js
popf
je
out
xor
xchg
in
cmc
stc
andl
repz
jno
aad
push
mov
mov
repz
movsb
jmp
loopne
adc
ja
adc
inc
cmp
negb
outsl
jns
sub
imul
add
push
repz
fmul
or
jp
fmuls
mov
dec
jl
dec
mov
fs
int3
inc
out
ds
mov
lods
iret
aas
leave
dec
jmp
jp
bound
ficompl
add
jbe
lret
pop
dec
pop
popf
push
imul
jp
push
mov
out
dec
dec
pop
gs
pop
popf
bound
xchg
lahf
call
sbb
dec
cmp
and
shr
jecxz
call
icebp
mov
repnz
cmpsl
fcompl
dec
cltd
pop
daa
push
xchg
dec
repz
push
cmp
xchg
je
in
push
jb
dec
mov
mov
xchg
mov
or
add
fildl
ja
sub
sub
adc
scas
es
insl
sbb
in
and
jmp
or
lock
push
xchg
add
scas
jl
repz
and
mov
sbb
dec
aad
sbb
enter
jg
iret
and
sbb
cmp
jo
call
inc
jo
jp
aas
lahf
jecxz
mov
enter
sbb
mov
lea
lods
sbb
mov
pop
popf
add
rorl
repnz
bound
pushf
fnstenv
mov
movsb
jl
ss
jnp
es
push
shll
aam
mov
int
jg
mov
lret
popa
add
cmpsb
jg
fs
sti
adc
lods
in
addr16
xor
aam
dec
sarl
stos
adcb
pop
fwait
cli
xlat
dec
jl
inc
rclb
cltd
mov
inc
push
fisubl
popf
popf
in
cmpb
add
sub
repz
pusha
cmpb
aad
add
cld
mov
test
bound
sub
sub
and
adc
adc
cmp
lock
fwait
mov
pusha
push
movsb
testb
pop
sbb
mov
sub
test
aas
dec
add
xchg
sbb
cmp
and
movsb
arpl
xor
add
sub
or
mov
mov
std
mov
enter
cmp
pop
imul
xchg
in
xchg
add
adc
repnz
sub
push
mov
in
pop
bound
mov
out
subl
dec
jne
mov
mov
test
sub
sub
es
lods
jb
rorl
stos
pop
imul
and
xchg
movsl
xchg
stc
fs
dec
adc
insb
pop
mov
in
inc
bound
and
stos
repnz
inc
cld
jl
jb
pop
sbb
jle
ljmp
loopne
mov
adc
push
mov
pop
shll
cmpxchg
das
in
push
ljmp
xchg
mov
addb
cwtl
mov
aad
rcrl
out
mov
sbb
mov
loop
pop
adc
out
sub
sub
and
test
push
cwtl
in
inc
cmp
sub
and
and
dec
sbb
insb
push
sbb
jae
shll
jmp
es
xor
sbb
in
jns
mov
sub
hlt
mov
lods
scas
mov
repz
jge
cmpsb
jno
pusha
lock
pop
ljmp
das
or
in
icebp
push
sbb
dec
adc
push
jl
dec
add
fcoms
mov
mov
ja
insl
sub
mov
jl
cld
fcmovnu
daa
sbb
sub
mov
jle
mov
cmp
push
ret
pop
mov
fwait
lcall
out
mov
in
ret
std
push
push
pushf
test
mov
aas
lds
sbb
jne
push
xchg
inc
inc
mov
sbb
dec
clc
sbb
and
mov
dec
pop
ja
xorb
cmpsb
adc
sti
xor
xor
xchg
mov
stos
scas
mov
out
cmp
sbb
dec
mov
sub
push
and
inc
addr16
lahf
and
je
push
pushf
pop
xor
test
mov
or
cmpb
jb
cmpsb
pop
int
xchg
inc
into
into
mov
sbb
outsb
add
loopne
and
lcall
ret
repz
loop
xchg
jae
ret
repnz
and
loopne
push
push
mov
sbb
cmp
inc
jne
sahf
dec
push
lods
xchg
pop
out
fs
cmc
jbe
mov
inc
frstor
cwtl
outsl
or
insb
sbb
mov
jg
les
mov
mov
sbb
ficoms
adc
xchg
inc
sub
xorb
or
movl
jae
add
dec
lds
loope
jnp
cmc
mov
js
mov
add
jge
sub
cs
adc
clc
push
outsl
clc
push
cltd
mov
aam
pop
jo
dec
loop
or
sarl
jl
scas
shrb
jmp
mov
subl
xorb
mov
inc
cmpsl
bound
dec
xor
aas
dec
movsl
repz
iret
and
mov
lea
sub
xchg
fldenv
adc
or
outsb
jno
xchg
jb
xor
mov
adc
dec
fstpl
fbstp
cld
jle
fisubl
pop
inc
pop
sbb
mov
popf
fstpl
adc
and
inc
lock
mov
popf
fwait
push
sahf
xor
in
xorb
adc
pop
adc
gs
popf
cwtl
sbb
mov
out
lret
xchg
sarl
xor
dec
or
daa
dec
ja
adc
push
or
into
add
dec
jge
xchg
in
push
pop
and
or
in
hlt
adc
and
sahf
aaa
test
dec
inc
cs
shl
movnti
adc
repz
jge
lock
test
sub
xor
sub
pop
xchg
ficoml
mov
adcb
jmp
outsb
and
push
mov
xchg
or
dec
jae
insl
add
and
add
push
xchg
mov
cmp
outsb
sub
inc
cmpsb
leave
cs
in
jae
sub
mov
insl
cmpsl
sti
push
test
out
or
jne
jp
lret
imul
push
or
xchg
jae
jne
sbb
sub
lea
into
syscall
or
sub
adc
inc
js
or
adc
sbb
mov
xchg
xor
in
mov
mov
ljmp
pop
and
inc
lock
lahf
push
rorl
inc
icebp
xchg
sbb
dec
inc
mov
add
lods
pop
repnz
and
adc
mov
cmp
mov
das
es
insl
sub
jnp
push
cwtl
or
idiv
sbb
jecxz
scas
mov
inc
mov
jbe
adc
jne
mov
add
xchg
lret
js
mov
mov
stos
inc
or
lock
jl
test
shrl
cmp
pop
je
cmp
js
jns
cli
mov
lods
jmp
cli
in
inc
dec
and
adcb
mov
mov
add
mov
lods
mov
fstpt
mov
lret
jns
sbb
ljmp
push
or
jge
inc
aad
int
mov
inc
pop
jle
dec
sub
add
data16
mov
sbb
adc
fistps
dec
jns
js
pop
es
std
jmp
in
mov
jns
enter
nop
sbb
aas
jno
int3
pop
mov
add
ds
jb
daa
jle
mov
jg
or
add
fiaddl
and
pop
icebp
inc
fidivl
movsb
loop
in
aas
add
adc
inc
xchg
stos
adc
in
jno
push
in
rcrb
push
sbb
mov
nop
pusha
or
adc
aam
rorl
ret
jnp
adc
mov
loop
test
jnp
negb
mov
push
push
repnz
jge
xchg
inc
mov
gs
hlt
xor
adc
leave
or
ret
and
pop
mov
push
mov
jecxz
pop
mov
jo
mov
xchg
jmp
cmpsl
push
je
and
rcll
xchg
sub
adc
lret
sbb
cmp
into
and
mov
bound
stos
ljmp
fdivrs
nop
popa
adc
push
je
push
jne
push
cltd
hlt
pop
popf
push
adcb
sbbb
movsl
imul
cld
sub
adcl
adc
push
pop
mov
xchg
stc
mov
inc
sbb
xor
aas
jge
aaa
ljmp
mov
std
int3
dec
lock
jl
sub
addl
test
sub
sar
pop
mov
jge
ret
jcxz
xchg
push
inc
popf
scas
sbb
sub
mov
xchg
shll
rcrl
je
xor
cmp
imul
pusha
mov
and
push
out
fsubl
mov
lret
arpl
mov
xchg
xchg
pop
inc
pop
mov
in
pop
gs
negl
test
push
mov
iret
adc
or
ljmp
insl
fwait
mov
jecxz
jmp
imul
jg
loope
test
cmp
mov
sbb
add
mov
cld
inc
ljmp
lods
xchg
xor
or
and
inc
icebp
mov
fwait
jnp
ss
cmp
jmp
ljmp
cwtl
cmp
sarb
in
out
sbb
add
out
std
cmc
das
pop
rclb
xor
mov
lods
fsubrl
clc
mov
ds
adc
rcrl
fwait
enter
sub
cli
sub
mov
outsb
dec
sbb
adc
add
push
outsb
mov
dec
mov
dec
divl
push
ss
dec
add
ret
mov
mov
sub
pop
mov
clc
ficoms
inc
adc
pop
mov
ucomiss
push
mov
jmp
pop
pop
aam
inc
stc
pop
icebp
adc
loopne
gs
push
pop
insb
fs
test
stos
or
es
inc
and
dec
cmp
cli
sbb
int
mov
lahf
jmp
sbb
or
in
std
push
xchg
pop
out
push
das
roll
in
test
xchg
mov
add
pop
ficompl
mov
fistps
mov
or
dec
outsl
ja
addl
aaa
pop
xchg
pop
push
data16
mov
mov
xchg
call
into
mov
ficoms
inc
mov
inc
lret
cmpb
jge
xor
inc
cmp
mov
cmp
add
sarb
pop
lcall
jb
add
neg
out
and
out
pushf
xchg
adc
lock
test
mov
loope
inc
popa
faddl
dec
jp
cmp
or
test
sbb
out
add
shll
call
loopne
xor
xchg
push
pop
lock
and
xchg
or
dec
dec
mov
call
cmpsb
jnp
mov
sarb
cmp
iret
aam
call
mov
dec
js
scas
into
mov
fcomip
add
pop
adc
arpl
inc
sub
mov
mov
in
rol
pop
sbb
inc
outsl
lret
movl
dec
dec
pop
pop
lods
out
sar
js
iret
stos
jb
dec
pop
mov
imul
sti
int
mov
lock
sbb
int3
out
pushf
jae
add
sub
mov
mov
or
dec
movsb
pusha
jecxz
sbb
xchg
shr
leave
arpl
cmp
or
jp
mov
cmp
clc
fildll
cmp
scas
push
outsl
fcomps
ficomps
cld
adc
stc
ret
addl
flds
dec
in
pop
mov
aaa
mov
pop
inc
nop
mov
cmp
mov
inc
sbb
mov
cmp
inc
inc
sbb
outsb
cmp
pop
mov
and
ret
fwait
test
ja
inc
cmp
jbe
dec
enter
scas
sub
jns
push
rol
pop
mov
cmpsb
mov
sub
push
rolb
in
mov
or
rorl
pop
test
dec
dec
insl
mov
push
jecxz
push
ljmp
aas
mov
lds
push
jnp
xor
paddb
xor
and
call
push
pop
sbb
add
push
jmp
out
fiadds
fs
sub
jns
sub
push
and
xchg
popa
inc
mov
rcrb
sub
fists
dec
sbb
mov
js
xor
movsb
cmp
loopne
int
push
pop
std
xchg
pop
fcomps
xchg
ds
mov
in
fcmove
mov
fdivr
and
out
jle
ds
sub
sbb
inc
cltd
mov
add
adc
inc
pop
testb
sbb
sahf
ss
mov
adc
xchg
scas
jnp
lcall
js
fwait
fs
inc
scas
pop
mov
mov
mov
dec
jo
lret
mov
xor
lock
hlt
xchg
rcll
pusha
cltd
cmp
sbb
mov
jge
repnz
or
dec
jo
mov
movsl
xchg
lods
sbb
adc
pop
and
and
mov
sbb
outsb
mov
and
rcr
xchg
push
jge
daa
out
fdiv
lock
mov
dec
or
xchg
std
insl
dec
cmc
repnz
jb
test
fstl
mov
pop
rclb
pop
movsl
xchg
and
or
add
jae
cmpsl
sbb
inc
sub
push
daa
int
pop
push
dec
push
cmp
mov
sub
xor
or
sbb
push
push
xchg
js
mov
ret
lods
and
sbb
sub
cmc
mov
xor
inc
js
adc
push
ret
fidivrl
mov
insl
test
cmp
pop
popf
dec
outsb
ljmp
sahf
jbe
aad
inc
xchg
nop
cmpsl
and
mulb
xchg
ds
sbb
mov
mov
cs
or
test
lret
in
jne
daa
gs
adc
repnz
scas
jno
popa
or
adcb
out
push
or
cmpsb
jg
cmp
mov
pop
lea
aad
rcrb
popl
int3
movsl
ss
inc
cmpsl
mov
sbb
out
in
les
push
lods
push
loope
mov
add
xor
jbe
fstpl
pop
aaa
mov
int3
mov
push
and
jno
mov
add
inc
push
adc
test
rclb
inc
adc
sub
bound
dec
or
hlt
leave
addr16
cltd
push
xchg
leave
adc
popa
mov
xlat
sahf
test
add
cld
jne
std
jg
jg
or
mov
dec
jmp
and
aaa
mov
jno
das
aaa
push
adcb
fistps
push
pusha
inc
loop
pusha
mov
xchg
or
jecxz
adc
in
jp
pop
ficompl
test
mov
push
mov
outsb
lahf
rcr
popf
cmp
movsl
stc
inc
notl
ret
or
inc
cmp
mov
and
fwait
inc
push
jecxz
cwtl
pop
inc
mov
pop
jmp
adc
call
int3
lret
call
shrb
movsb
and
mov
jge
xor
mov
mov
adc
inc
aad
es
test
out
lods
jg
out
test
fldenv
inc
mov
les
rorl
jge
sub
pop
popl
add
rcll
mov
add
mov
cs
pop
stos
test
ss
dec
or
mov
jbe
mov
daa
es
pop
mov
mov
jnp
push
dec
mov
mov
out
cmp
outsl
adc
pop
sub
jno
andb
or
mov
cld
js
insb
push
imul
scas
rcrb
xor
jno
mov
adc
xchg
test
cmp
ret
insb
mov
aad
sub
mov
add
add
mov
js
mov
iret
inc
and
dec
js
jnp
and
addl
and
rorl
in
stos
sarb
lcall
push
mov
test
adc
daa
sbb
loopne
and
pop
test
jle
cmp
ja
lods
les
pop
xchg
imul
sub
dec
repz
and
cmp
shrb
jns
rcl
cmpsb
xchg
outsl
std
in
push
divb
cmpsb
xorb
insl
mov
dec
inc
inc
dec
int
push
pop
jl
andl
jbe
daa
popa
cmp
mov
pop
jne
push
jle
hlt
jp
add
fldenv
and
call
inc
jmp
adc
xchg
add
lret
js
xchg
mov
hlt
add
xchg
jbe
sbb
leave
hlt
add
sar
sbb
stc
int3
add
xlat
ss
enter
add
mov
sti
js
pop
mov
in
ret
mov
inc
cmp
rcr
fmuls
rcr
xor
js
jmp
jmp
mov
xchg
xchg
les
ficoms
insl
mov
add
cmp
loop
lea
lock
inc
mov
cmp
dec
fwait
cmp
xor
or
push
pop
xchg
test
xor
mov
ljmp
arpl
or
sub
and
xchg
and
sub
mov
jg
xor
loop
jecxz
and
in
or
dec
arpl
jo
sbb
lret
mov
pop
ja
rcl
je
dec
repz
dec
mov
int
shll
cmpsb
incb
stc
icebp
cld
push
xchg
mov
das
and
jg
popf
push
push
nop
xchg
sahf
push
rcll
fstpt
add
or
cmp
jecxz
adc
and
mov
inc
movsl
and
das
stos
lahf
and
enter
in
and
es
jno
adc
scas
sub
out
out
gs
out
or
imul
push
clc
push
lds
cmp
sahf
xchg
mov
cmp
and
xchg
cmp
aad
xor
or
inc
jno
xchg
out
into
push
pop
jge
sbb
mov
fsub
jg
stos
or
sbb
xor
pop
nop
sbb
inc
dec
push
aaa
sbb
xchg
pop
inc
popf
lea
cmp
lods
mov
jbe
sub
jb
cld
jg
test
cli
out
out
daa
add
shlb
in
sbb
sbb
sub
and
stos
mov
mov
nop
inc
stos
fisubl
daa
sub
sbbb
movsl
pop
loop
lea
inc
pop
in
cmp
mov
xchg
test
aaa
mov
inc
inc
pop
add
jnp
push
add
jp
lods
and
roll
push
das
dec
add
ficomps
popf
sbb
xlat
mov
dec
lods
jae
mov
mov
mov
pushf
fiadds
xchg
bound
dec
sub
push
nop
dec
rcll
dec
jp
jle
lret
mov
xchg
in
lret
jmp
push
aad
mov
popf
movsb
addr16
pop
and
outsl
lods
cld
xor
xchg
rorb
jmp
sub
fsts
mov
ljmp
cs
imul
scas
mov
jle
jp
jg
cmp
movsl
cmp
dec
push
call
sbb
dec
stos
insl
xchg
test
es
dec
xchg
call
cmp
lods
push
xor
dec
jno
sbb
sbb
inc
or
or
in
call
stos
daa
sti
inc
and
inc
jnp
out
sbb
inc
mov
jmp
xor
enter
js
or
and
jbe
pop
sub
lods
lock
and
iret
nop
cld
jle
push
aas
aad
std
sub
call
in
sbb
js
out
test
jns
and
lret
push
jge
mov
or
adc
sbb
iret
or
dec
dec
call
mov
xchg
ret
scas
mov
and
adc
cmp
adc
cmp
in
or
addb
fistpl
icebp
adc
std
sub
and
pop
in
mov
out
cmpsb
addr16
mov
push
aam
cli
aaa
sub
dec
push
pusha
rcll
in
test
fcomps
adc
icebp
popf
shll
rorb
and
push
pop
repnz
in
cmpsb
and
jle
push
ret
dec
fistpll
fisttps
outsb
pushf
addps
test
int
outsl
in
xchg
fildll
test
push
ja
xor
hlt
das
cvtdq2ps
jb
scas
aaa
jae
or
ljmp
inc
inc
sbb
pop
lock
roll
scas
push
pop
pop
scas
push
outsb
fidivrs
gs
sub
add
lock
add
sub
push
jae
xchg
pop
cmovno
and
bound
mov
popf
xchg
pop
ret
xor
outsb
sbb
movsb
dec
add
xchg
sahf
mov
or
jp
xchg
add
xchg
js
fdivrp
mov
rcrb
mov
or
leave
and
out
ret
inc
sub
push
inc
cltd
pop
cmp
xchg
cmpsb
and
jo
imul
ja
or
add
adc
mov
push
add
int
fucompp
mov
add
in
lret
xchg
addr16
jno
shlb
pop
hlt
shlb
and
push
dec
xchg
jmp
or
mov
xor
cmp
roll
pushf
jmp
add
mov
iret
push
dec
pop
lock
lret
pushf
mov
jno
push
je
leave
andl
scas
mov
push
xchg
mov
jl
sub
imul
imul
sbb
sub
ror
insl
mov
add
repz
dec
jl
sbb
in
fcoml
mov
adc
cmp
lcall
leave
xchg
sub
fistpll
into
adc
adc
addr16
xor
and
aad
outsl
mov
cltd
push
sti
or
dec
cmp
xor
pusha
dec
sbb
mov
fs
mov
mov
iret
adc
adc
pusha
pop
cmp
out
cmc
insb
cmp
jle
mov
loope
jl
pop
mov
hlt
inc
pop
vaddsubps
inc
push
pop
pop
out
lods
in
rcr
sbb
jbe
leave
je
inc
fstl
aad
or
jg
rcl
and
push
dec
cld
nop
ficompl
push
push
add
aaa
mov
pop
mov
loopne
jge
arpl
dec
les
movl
pop
je
and
cwtl
vmwrite
insb
lret
shl
mov
test
in
enter
arpl
aaa
adc
add
mov
outsb
cltd
testl
popf
stos
int
jnp
jno
ljmp
jle
andl
mov
push
pop
test
fistps
jno
flds
fdivl
jbe
fiadds
sbb
or
sub
aam
insb
sub
cmp
bswap
popa
and
aam
fisttpl
sbb
sub
stos
xlat
scas
shll
testl
test
sbb
jbe
sahf
testb
icebp
inc
xor
mov
inc
cmc
push
mov
adc
lcall
dec
inc
cmp
sti
dec
jp
cmpsl
xor
test
pop
popa
cvttps2pi
mov
roll
lahf
cmp
pop
jb
aaa
or
jmp
iret
sub
xor
inc
xor
add
dec
jo
add
dec
pop
jge
push
leave
int3
subb
rolb
xchg
pop
inc
roll
jb
rorb
sar
test
lahf
outsb
inc
fwait
cmp
lret
fbstp
push
test
and
ret
and
dec
push
add
repnz
inc
ss
insb
sub
xor
xchg
dec
cltd
and
inc
out
pop
mov
cmp
or
nop
mov
adc
pop
leave
mov
sub
fwait
lods
xor
sbb
divb
sbb
xor
push
xchg
ja
sahf
jmp
mul
or
xorb
sbb
adc
dec
cmpsb
enter
dec
sub
jecxz
jb
ja
ret
jbe
pop
or
jns
pop
ret
fisubrl
mov
dec
xchg
sub
sti
lock
jmp
add
ret
roll
js
testl
mov
push
mov
lcall
xor
mov
cmp
pop
add
loopne
mov
adc
loopne
js
mov
cmp
jg
rcrl
int
mov
sbb
inc
jns
mov
loop
cmc
out
movl
sbb
jecxz
imul
or
addl
sub
je
sub
pop
jbe
ja
mov
insb
popa
out
test
cmp
inc
sbb
insb
adc
xchg
in
cmpl
and
pop
ja
lock
fmull
cli
inc
andl
insb
stos
in
mov
dec
hlt
dec
jae
neg
fbstp
cmpsl
mov
sub
and
and
mov
ja
sbb
sbb
insb
lret
cs
pop
leave
mov
dec
sub
fdivl
or
in
cmpsb
lret
lock
add
cmpsb
pop
cmp
daa
jo
imul
xchg
popf
push
inc
push
test
jl
mov
imul
in
ljmp
mov
pop
pop
shrl
jne
test
cwtl
cmp
fcmovbe
loope
or
jecxz
movsl
cmp
iret
mov
xchg
lcall
cwtl
sbb
dec
loopne
out
or
call
adc
cmp
mov
je
xchg
xor
call
out
xchg
sub
mov
nop
data16
push
jp
dec
and
pop
pop
cwtl
xchg
jmp
dec
sbb
lret
mov
xor
mov
push
mov
adc
adc
insb
xor
enter
mov
sub
lods
mov
sarl
or
mov
cmp
and
out
dec
nop
jle
xchg
jnp
pop
push
bsr
lret
push
or
pop
repnz
aad
sbb
faddl
sbb
mov
add
movsb
inc
icebp
sbb
xchg
adc
mov
mov
into
and
icebp
add
stc
test
rcrb
mov
push
leave
cmpsl
scas
sbb
add
lods
cmp
shl
ljmp
dec
and
adc
mul
stc
xor
addl
mov
sbb
icebp
aam
mov
pop
inc
sub
std
test
inc
mov
rolb
sbb
add
push
push
dec
dec
dec
add
leave
andl
mov
sub
lods
mov
mov
mov
push
js
xor
in
dec
mov
sbb
dec
icebp
or
cmp
fidivrs
test
xchg
call
cs
inc
fwait
add
rcll
lcall
sub
fisubl
sub
jae
lock
popa
pop
addr16
mov
movsl
mov
repz
mov
and
subl
imul
nop
mov
leave
mov
mov
xor
cltd
rdpmc
sbb
dec
les
xor
mov
sub
sub
push
mov
xchg
lahf
out
xchg
adc
and
aaa
ret
push
mov
inc
jl
pusha
inc
ficompl
pop
es
std
cmpsl
enter
mov
cmc
imul
sbb
out
shrl
pop
or
mov
nop
subb
xor
jno
jmp
xor
mov
outsb
jo
cmp
sahf
or
inc
jb
and
cld
lcall
stos
cmc
imul
inc
mov
icebp
shrb
mov
mov
jmp
sbb
push
sub
push
test
insb
push
mov
imul
or
cs
or
sbb
sub
push
xchg
mov
scas
mov
mov
mov
xchg
lcall
pop
and
cltd
cmc
aas
sbb
or
xor
es
inc
mov
in
daa
popf
fwait
mov
ret
pop
cmp
pop
pushf
out
push
and
sbb
dec
aaa
in
push
add
stos
add
icebp
fwait
in
push
gs
push
mov
hlt
mov
jmp
jp
loope
div
dec
sub
int
leave
ret
test
fnstenv
dec
adc
add
jle
mov
mov
sbb
addr16
icebp
and
cmc
dec
jnp
mov
add
vcmpeq_usps
cltd
ret
push
adcl
xchg
mov
or
insl
bound
xor
xor
jae
or
fstp
fnstsw
sub
xchg
push
imul
jns
jle
sahf
in
jl
pop
fisubrl
push
or
xor
xchg
cmp
hlt
loopne
add
lret
rcr
dec
dec
icebp
mov
ret
inc
scas
lods
daa
add
pushf
or
jmp
gs
and
mov
ja
fcom
cmpsl
nop
sub
leave
ljmp
lret
ret
mov
out
popa
push
lret
sbb
aam
adc
movsl
les
jge
mov
jmp
lret
mov
cli
add
sahf
faddp
test
sub
sub
sbb
dec
dec
mov
loop
cmp
addr16
push
into
jecxz
inc
lods
dec
lods
jecxz
not
dec
adc
outsl
lret
icebp
dec
pop
iret
jnp
jg
repz
in
and
leave
xchg
sbb
cli
xchg
aad
and
push
mov
je
loopne
xor
test
testl
mov
rorb
or
and
jbe
daa
rorb
enter
movsl
aas
popa
sub
xchg
sub
icebp
cmc
lods
outsb
pop
aad
add
in
cmp
test
aas
stos
inc
in
jnp
divb
inc
stc
enter
ja
les
push
mov
push
mov
pop
jnp
push
fstpt
rclb
inc
add
stos
or
mov
lock
das
inc
leave
or
jbe
scas
int
aas
outsl
fnsave
sbb
adc
xor
or
xchg
pop
mov
dec
mov
mov
xor
push
out
mov
xor
cli
pushf
outsb
xor
insl
cmpsb
xor
pop
mov
test
pop
xor
out
push
leave
and
mov
cmpsl
js
xchg
dec
mov
outsb
sub
mov
ficomps
out
lret
fimuls
cmc
lods
cmp
arpl
jns
sarb
ds
inc
and
cmp
gs
inc
mov
lock
jb
mov
sbb
adc
je
add
and
inc
sub
hlt
out
aaa
add
mov
adc
cmp
fwait
out
sub
xchg
pop
push
xor
sti
jnp
mov
lods
stos
inc
out
or
aas
push
ljmp
lds
clc
add
fbld
fdivrs
test
cmp
rcr
ret
jns
pusha
fsubrs
sbb
add
xchg
je
push
add
push
stos
loop
pop
jmp
aam
cmp
int3
loopne
mov
mov
cmpsb
rclb
inc
xlat
push
das
mov
out
mov
es
cmp
or
mov
mov
xchg
inc
pop
mov
xchg
mov
jb
mov
iret
or
mov
pop
dec
mov
xchg
xchg
or
and
imul
xor
incb
test
jo
jecxz
sub
pop
mov
cmp
unpcklps
lret
cmp
imul
popa
mov
aam
xchg
sub
xor
xchg
call
mov
cmp
mov
in
sbb
in
mov
jp
imul
mov
cmp
cmpsl
ljmp
mov
pop
pop
or
and
push
lcall
testb
pop
xchg
push
add
enter
jg
mov
or
cmp
rclb
gs
in
pop
cltd
pop
mov
sub
in
xchg
mov
pop
std
in
inc
test
adc
cs
addr16
mov
adc
jg
mov
xor
mov
cwtl
xchg
cmp
cmpsb
and
test
lahf
fdivrs
jb
jae
lret
aam
stos
out
inc
mov
cmp
out
aam
xchg
pop
bound
sub
mov
cltd
or
pop
mov
iret
jl
mov
lret
lock
and
mov
mov
ja
data16
aad
ret
aas
clc
pop
dec
xchg
xchg
cmp
sub
inc
int
pop
add
pop
shlb
pop
mov
pusha
push
push
dec
jbe
jbe
and
inc
fimuls
mov
sar
jo
daa
xor
mov
test
addl
les
jno
adc
lret
mov
push
sub
xorl
ds
cmp
pop
cmp
outsl
mov
and
xchg
sbb
popa
push
sub
fs
jmp
or
pushf
pop
test
pop
cmp
xor
jecxz
roll
adc
sub
lret
dec
in
sahf
mov
loope
and
jge
or
fdivrs
loopne
inc
cs
mov
adc
pushf
loope
mov
xchg
dec
add
push
out
clc
push
xchg
push
aaa
jecxz
lock
adc
jmp
jbe
inc
dec
xchg
imul
sub
jo
in
je
aad
and
xchg
mov
mov
or
xchg
and
pop
and
sbb
aad
lahf
inc
sub
mov
inc
adc
shr
mov
dec
cmp
cmpsl
hlt
adc
in
dec
aad
lret
ja
sbb
fs
pusha
pushl
arpl
pusha
out
in
sbb
les
push
jmp
and
rcr
inc
mov
fsubrs
adcb
aad
or
xor
pushf
out
scas
popf
movsbl
inc
inc
sbb
jmp
popa
sub
jl
ljmp
out
add
js
daa
xor
pop
adc
xchg
les
in
xchg
leave
and
pop
cmpsb
pop
adc
lds
not
fwait
mov
sbbb
pop
imul
leave
jb
ret
xchg
movsl
aad
jbe
jl
jle
xchg
shll
mov
mov
sbb
sub
xor
add
pusha
insl
sub
mov
jae
jl
cmc
and
int
shrl
loope
lods
cmp
mov
dec
add
insl
bound
or
lahf
jb
imulb
repnz
pop
rolb
push
cli
in
pop
inc
test
std
aaa
jge
loopne
sbb
into
jmp
jmp
outsl
add
dec
xor
sbb
icebp
dec
push
jno
xchg
mov
fadd
dec
ss
fwait
out
ja
lahf
sbb
mov
adc
mov
add
add
loope
inc
cmp
subb
xor
pop
addl
scas
loope
lock
ja
clc
pop
loop
lock
scas
mov
mov
xchg
mov
paddd
call
pop
sbb
clc
mov
int3
add
mov
adc
int
sbb
mov
push
imul
push
ret
mov
lods
pop
pop
push
adc
push
pusha
or
cmp
cmp
ljmp
add
ror
in
xchg
cmp
add
mov
sub
push
fstl
xchg
or
pop
jmp
outsl
lahf
inc
xchg
xchg
mov
push
xchg
cmp
out
mov
test
adc
cmp
scas
jle
xchg
inc
sbb
sbb
mov
mov
int3
das
jge
or
ficoms
mov
sub
fdivrs
sbb
inc
test
loop
adc
cmc
shrl
cmp
rcrl
scas
jle
add
clc
icebp
fs
inc
mov
jnp
sub
ret
dec
mov
sub
test
cmp
push
test
dec
scas
inc
mov
cmpsl
pop
in
enter
call
cmp
test
xchg
lret
mov
jmp
mov
call
mov
fnstenv
mov
scas
sti
adc
adc
faddl
aad
jge
mov
movsl
fwait
xchg
insl
insl
repnz
adc
aam
pop
push
decl
xor
pop
and
cs
aad
nop
adc
lods
mov
push
lea
inc
popa
sub
sti
mov
adc
push
ret
sub
push
icebp
jmp
pop
or
iret
rolb
or
in
jp
mov
push
pop
mov
push
cmpsl
inc
icebp
xchg
xorb
pop
cmp
add
push
sti
insl
cmpsl
clc
inc
push
mov
loopne
out
sbb
bound
xor
das
scas
xchg
pop
mov
xchg
xor
scas
mov
repz
push
in
xchg
lret
inc
push
fsqrt
aaa
xor
out
setb
jae
rcrl
cmp
dec
sbb
ja
xor
ja
inc
sub
bound
jne
popf
mov
inc
pop
adc
ret
lock
pushf
fistps
stos
cmp
or
loop
jne
lret
std
xor
cmp
fisttps
cmp
lds
je
fidivrl
and
pop
adc
jge
jb
or
lea
orl
sub
lods
sbb
mov
ficomps
std
dec
dec
mov
mov
jb
mul
and
sar
cwtl
dec
loope
mov
inc
sub
push
into
sbb
sub
xor
imul
xor
and
loop
ljmp
loopne
jno
mov
sbb
mov
testb
pop
ljmp
push
insl
lds
mov
jmp
mov
int3
adc
inc
inc
or
mov
mov
movsl
js
dec
sub
push
cmpb
fists
mov
sub
in
adc
clc
lods
jg
cli
js
imul
adc
and
aad
sbb
repnz
outsl
rcr
mov
mov
and
xchg
dec
in
xlat
lahf
sub
in
movsb
aas
cmp
jg
in
data16
je
mov
and
lret
idiv
jb
push
mov
insb
sbb
push
int
stos
fsubrl
aas
fdivs
ret
hlt
push
notl
and
jne
int3
adc
jle
mov
lds
lock
mov
add
add
add
lods
cmc
lds
sub
rcl
and
mov
mov
pop
mov
xchg
outsb
push
jns
fstps
cmp
push
dec
in
loopne
insl
cli
stc
dec
ret
and
je
mov
aas
inc
sbb
ja
addr16
mov
pop
mov
push
inc
pop
cmp
mov
inc
aaa
mov
mov
rclb
xchg
dec
xchg
pusha
out
fnsave
dec
les
std
xchg
popf
xchg
popf
mov
xchg
jb
jecxz
lcall
xchg
mov
mov
sub
jle
mov
fwait
mov
mov
mov
dec
cmpsl
push
les
je
jg
sbb
or
out
dec
pusha
sub
jnp
les
pop
cwtl
jl
adc
stc
xchg
test
adc
addr16
mov
sub
cli
cmp
adc
fmul
jp
aaa
lods
jnp
cmp
cmpsl
in
ljmp
jno
push
faddl
or
adc
sub
lods
jo
call
daa
and
orb
test
and
or
jle
stc
leave
xchg
mov
xor
mov
iret
mov
idiv
imul
adc
mov
push
pop
jns
in
popf
loop
mov
push
push
mov
lds
in
pop
or
xor
sbb
jg
scas
cmovbe
ss
lods
inc
inc
xor
add
test
add
nop
xor
out
push
movsl
in
mov
fsubrl
dec
in
xchg
xchg
stc
adc
xchg
out
repnz
notl
mov
jl
loopne
sub
in
inc
jae
pop
loopne
inc
xchg
mov
inc
xor
int3
mov
sbb
cmp
movsb
inc
cld
fwait
bound
outsl
dec
dec
scas
repz
push
mov
das
jb
nop
sbb
imul
int3
out
cmp
aaa
pop
divl
sti
jle
call
icebp
sub
cmc
insl
mov
add
cld
fwait
pusha
test
cmc
dec
cmpsb
xchg
mov
jmp
fsubs
add
dec
orb
lds
lock
pop
mov
adc
mov
adc
loope
lods
mov
stc
jne
cmp
fstpt
pop
scas
filds
sbb
lcall
cltd
call
inc
jo
jp
mov
jno
push
clc
jae
sahf
rorb
mov
mov
jge
inc
or
xlat
push
into
lods
push
in
push
or
pop
sbb
in
xchg
imul
mov
add
pop
lret
jle
scas
fsub
inc
sub
and
adc
push
adc
xlat
sub
arpl
inc
stos
push
test
jge
test
cmpsl
push
inc
hlt
orl
addr16
adc
jb
sbb
cmp
ret
inc
into
sub
mov
lahf
jo
adc
sahf
pop
es
mov
je
jle
xchg
dec
adc
inc
xor
es
inc
outsl
insb
movsl
dec
jb
xchg
cmp
jecxz
cmp
pop
jne
imul
ret
cmp
out
push
dec
fmuls
int
xor
mov
inc
jg
cwtl
push
sub
add
add
repz
ficompl
loope
fnstenv
mov
cwtl
jb
mov
pop
insb
lahf
sub
movsb
jne
and
dec
xor
rolb
cmp
outsb
pop
sbb
dec
pop
cmpl
jae
sbb
fists
sub
or
int3
movsb
bswap
add
mov
add
and
movsl
pop
inc
movsl
adc
pop
mov
sbb
stos
add
mov
push
xchg
inc
cmp
lea
cmpsb
fildll
adc
jo
mov
addr16
or
xor
nop
scas
ss
nop
fmuls
push
inc
andb
dec
lret
dec
cmp
cmpsb
sub
lret
repz
ds
mov
ljmp
xchg
mov
lcall
test
pop
add
bound
and
gs
sub
daa
pop
in
push
cli
xchg
sbb
push
xor
xchg
and
xchg
push
add
mov
push
out
inc
dec
mov
mov
xor
fcompl
fsub
jbe
out
out
data16
out
mov
sbb
mov
add
stc
inc
pushf
hlt
mov
add
rcll
into
cmp
cmpsl
mov
scas
and
cmpb
inc
and
enter
pushf
sbb
or
idiv
xchg
sub
jmp
jbe
stos
scas
aas
mov
ficomps
iret
mov
enter
out
jae
or
jecxz
shrl
sbb
fcmovnu
test
outsl
int3
movsl
cmc
js
stc
dec
jae
push
mov
add
int3
sbb
fdivrs
sbb
push
in
jecxz
daa
xchg
pop
cmpsb
mov
mov
sub
or
insl
mov
lea
lcall
mov
jl
std
xor
add
lds
leave
dec
filds
xlat
sub
jecxz
cli
cmp
in
jbe
cmp
nop
movsl
fwait
dec
mov
je
int3
push
pop
jae
sarb
pop
xchg
insb
jne
mov
cwtl
sarb
leave
push
scas
sti
push
in
inc
ja
fst
push
gs
dec
push
shrb
scas
pop
sub
inc
mov
xchg
js
push
std
add
bnd
test
aaa
cli
mov
out
inc
cmp
lret
mov
add
jle
lahf
mov
adc
andb
add
adc
lds
add
adc
cmp
cmp
ror
xchg
clc
push
into
aam
adc
fldcw
mov
push
iret
js
push
xchg
push
pop
sub
adc
movsl
xchg
sar
ficoms
in
lds
push
jno
pusha
dec
pop
fdivr
jns
or
jo
data16
lret
sete
xchg
mov
jecxz
dec
shrb
adc
aad
cwtl
dec
jp
sbb
sub
xchg
add
faddl
shr
scas
cli
inc
enter
test
shl
out
jmp
out
dec
fnstenv
fyl2xp1
repnz
or
and
push
pop
add
in
das
stos
in
push
pop
lds
adc
inc
shlb
bound
jle
cmpb
jo
mov
adc
stos
out
sub
adc
mov
xchg
jae
in
lea
sub
neg
out
rep
dec
icebp
or
jb
or
cwtl
jo
leave
mov
popa
clc
pusha
test
sbb
push
jno
or
enter
pushf
leave
js
repnz
and
sub
imul
imulb
cmp
sbb
dec
stos
xor
rorb
and
or
cmp
movsb
icebp
mov
jp
inc
mov
mov
stos
jp
rorl
fnsave
inc
arpl
shll
negb
pop
decb
jb
rorl
idivl
adc
mov
cmp
outsb
out
mov
dec
mov
int3
test
dec
dec
insl
rcrb
jo
out
test
fistpll
and
pop
push
pop
pop
shrl
jl
aaa
fstps
dec
jbe
sbb
pushf
adc
jmp
stos
cmp
adc
push
push
pop
cmp
xor
shl
dec
sbb
xchg
and
or
push
aaa
dec
xor
leave
jne
adc
and
jle
ljmp
jns
dec
fmuls
out
mov
movsb
xor
getsec
xchg
pop
shrl
outsb
sbb
stc
clc
pop
ja
clc
pop
dec
pop
xor
pusha
or
iret
out
test
mov
dec
roll
idivl
pop
mov
test
sbb
inc
jae
fdivrs
cltd
nop
icebp
push
push
and
fs
xchg
sub
add
movsb
les
cmp
adc
std
pop
es
mov
cmp
insb
cld
pop
stos
xchg
popa
imul
in
sti
dec
pop
js
jge
stos
test
lcall
mov
nop
xchg
push
sbbl
pop
sar
xlat
push
sub
xlat
push
cmp
push
out
sbb
imulb
fsubs
or
push
and
mov
lds
cmp
popf
pop
xchg
stc
xor
movsb
sub
test
mov
pop
xchg
lods
orb
xchg
mov
pop
mov
inc
lods
int3
jno
in
add
mov
add
mov
mov
inc
push
or
arpl
je
cli
xor
add
jle
aam
andb
xor
jo
sub
outsb
ljmp
fimuls
into
xor
add
push
sti
mov
push
lods
test
adc
mov
sub
ficoml
mov
inc
dec
ja
or
test
fsin
jns
xlat
loope
or
push
xchg
xchg
xchg
mov
mov
imul
xor
sbbl
jp
adcl
sbb
push
xchg
mov
and
xchg
addr16
inc
jae
xor
push
loopne
jmp
jge
cmpsb
bound
sbb
xchg
jb
add
movsl
and
icebp
jp
mov
aas
push
cmp
cmp
inc
mov
and
pop
xchg
pop
in
jg
add
adc
xchg
fidivrs
negl
and
loope
es
clc
loope
xchg
dec
daa
inc
mov
mov
inc
jno
lods
popl
xlat
lcall
push
jp
mov
out
aaa
xor
inc
imull
fnstcw
shlb
add
into
fmuls
pusha
pop
push
ficomps
in
adc
jle
cmp
adc
je
or
mov
rcrb
je
sbb
dec
push
sub
mov
enter
jmp
rolb
test
daa
out
pushf
or
loope
sbb
notb
and
xor
cmpsb
lahf
fidivrl
in
pop
push
clc
ret
and
pushf
sbb
xlat
or
jmp
jbe
jecxz
scas
jp
outsb
mov
cwtl
adc
inc
data16
xchg
test
and
fdivl
or
aas
test
data16
xchg
lods
and
lahf
mov
es
xchg
cmpsl
push
inc
mov
pop
jae
into
lcall
lods
rclb
and
xchg
jbe
jns
nop
xchg
pop
cld
mov
shrl
push
xchg
jg
mov
dec
jl
push
roll
sbb
mov
jmp
aad
inc
mov
cmp
hlt
cld
imul
xchg
pop
jae
dec
dec
icebp
mov
and
dec
xchg
cmp
pop
out
lods
adc
jecxz
jmp
mov
jno
ss
or
pushf
pop
loop
test
dec
cmp
inc
inc
or
popf
insl
mov
shr
int3
or
mov
dec
fwait
mull
ja
in
pusha
inc
sahf
mov
outsl
jnp
jp
scas
mov
push
mov
xor
mov
std
mov
xchg
aam
jb
incl
sbb
pop
or
pop
cs
gs
daa
mov
sti
xlat
fnstenv
adcl
add
frstor
out
sub
mov
in
cmp
rcrb
dec
and
mov
cmpsl
inc
hlt
lea
add
ds
add
dec
lahf
pop
dec
mov
stos
fdivrp
fnsave
mull
lea
fs
mov
mov
pop
pushf
xor
nop
push
mov
sub
or
cmp
inc
shrb
es
in
cwtl
test
or
in
and
sub
sahf
sub
mov
mov
mov
cmp
mov
push
popa
and
dec
test
dec
sub
loope
ret
push
jp
and
cmp
inc
xchg
sub
mov
push
sub
cmp
push
xchg
xchg
out
stos
ljmp
and
dec
fidivl
adc
mov
jae
fimull
sub
mov
cmp
mov
aas
aaa
xchg
out
aaa
test
adc
in
sbb
jne
loope
add
sub
bound
xchg
loopne
daa
fsubr
loope
jg
pop
add
and
push
fnstsw
lods
dec
addr16
adc
lahf
hlt
pop
xor
dec
mov
into
add
outsl
inc
mov
imul
jae
push
lds
outsb
jns
mov
sub
daa
mov
fldcw
mov
jnp
rol
inc
sbb
lea
test
and
push
xchg
fsubrs
push
pusha
cmp
hlt
xchg
icebp
add
ljmp
push
push
movsb
mov
push
mov
orb
xchg
cmp
xor
scas
rorl
pop
dec
into
add
jle
jne
jp
push
fimull
ja
sar
cmp
mov
repz
cmpb
in
mov
mov
push
add
dec
fldl
jbe
out
outsl
dec
ja
out
shll
jp
jo
ss
lea
data16
add
cmpsl
and
call
mov
aad
push
or
or
nop
nop
mov
and
outsb
mov
and
pusha
or
lcall
xorl
mov
push
jmp
cltd
add
mov
in
fs
sarb
pop
std
testb
add
bound
loopne
call
sub
inc
xor
movsb
cmpsb
sbb
imul
pop
or
imul
inc
push
sub
jg
xor
es
pop
std
fimuls
cmp
cmp
push
test
arpl
repz
add
cmpsb
js
in
mov
xchg
sbb
jb
mov
jno
sbb
sti
sahf
shll
pop
inc
jo
dec
sub
in
add
insl
mov
pop
aaa
sub
lret
int
fsubs
lcall
in
push
jnp
insb
sub
xchg
lods
mov
fwait
sub
add
pop
bound
jp
repnz
ja
jmp
fmuls
shl
das
xchg
adc
add
xlat
enter
push
and
sahf
out
add
lods
fcmovu
insl
mov
adc
push
enter
lahf
jmp
add
xlat
sub
test
push
test
xor
adc
jo
and
inc
and
into
dec
push
cmp
pop
ret
sub
mov
push
add
dec
fucom
cli
add
xlat
in
lds
std
add
lahf
insl
int3
sbb
cmpsb
scas
add
imul
roll
sbb
ss
mov
and
mov
add
pop
notl
mov
std
lods
push
push
jae
sub
adc
mov
inc
js
push
test
daa
es
push
xor
dec
in
push
hlt
ljmp
or
and
lahf
aas
mov
imul
cmp
scas
pushf
lea
test
inc
jmp
je
pop
or
scas
adc
call
or
ljmp
lcall
arpl
and
add
mov
xchg
in
sub
jbe
scas
fwait
and
sub
xchg
dec
mov
add
cld
dec
repz
popa
add
dec
test
aas
inc
dec
or
leave
lds
pop
pop
and
and
jg
jo
ljmp
xor
jl
mov
movsb
cmp
lret
add
jle
repnz
pop
aas
ss
iret
cmp
add
cli
and
cmp
das
stc
pop
cmp
test
ss
aas
je
push
jne
test
out
inc
pusha
dec
pop
stos
ds
push
push
or
hlt
sub
and
xor
jo
lds
and
mov
push
pusha
sahf
xchg
push
sbb
lcall
call
pop
or
repz
fisubrs
rolb
dec
jp
inc
mov
push
or
scas
sub
xchg
aaa
pop
cmp
idivb
pop
aam
and
shll
repz
cmc
adc
xor
dec
inc
or
cmp
cpuid
xor
aam
jne
push
sub
and
aam
jl
int3
les
pop
xchg
jge
stc
imul
in
out
inc
loopne
lret
lahf
inc
jp
pop
nop
ret
int3
cvtps2pi
or
inc
sti
xor
push
and
push
rcl
add
int
std
push
xchg
daa
das
adc
and
movsl
cmpb
out
negl
jns
data16
scas
inc
sub
lods
lds
popa
lea
adc
xor
fisubl
fimuls
les
in
mov
imul
cmp
or
sbb
pushf
clc
bound
ret
test
add
mov
mov
push
in
sub
pop
mov
jne
adc
sarl
and
mov
mov
sub
xor
push
hlt
push
pop
inc
sub
fsubr
cmp
jo
sbb
jae
pushf
pop
mov
lods
push
ds
or
in
call
out
aaa
push
mov
ljmp
jl
mov
adc
sub
cld
mov
pop
lds
inc
imul
outsb
push
loopne
jno
cli
in
dec
sti
mov
and
shll
push
fisttpl
mov
lcall
out
and
pop
xchg
pop
inc
add
sbb
test
ss
xabort
dec
push
orl
pop
pop
mov
bound
dec
std
jge
pop
add
or
push
aaa
insb
clc
push
sub
ljmp
enter
xchg
xor
adc
jae
clc
xlat
std
jnp
insl
iret
mov
pop
lds
cmpsl
sar
or
fildll
sti
js
popf
inc
push
inc
cmp
lock
int3
push
lcall
sbbl
dec
mov
push
jb
jl
jle
mov
or
pop
dec
ss
movsl
out
enter
loope
xor
loop
pop
mov
mov
repz
fldenv
mov
add
jmp
stc
jp
and
int3
mov
and
out
stc
jo
xor
jae
sbb
cmp
fistps
pop
mov
jecxz
dec
popf
cmpb
push
or
in
in
mov
cmp
mov
dec
repz
mov
in
mov
inc
enter
js
xchg
out
rcrb
outsl
mov
iret
sbb
or
jp,pt
shl
pop
mov
sbb
fisttps
cmp
in
and
and
repnz
mov
dec
push
mov
mov
or
lods
push
add
rcll
les
lret
inc
outsb
movsb
aas
dec
xchg
xchg
daa
ret
ja
add
and
dec
test
in
mov
mov
add
jg
aas
push
or
lret
sub
sub
sti
inc
ljmp
in
adc
daa
lods
idivb
push
test
cmp
loope
fsubr
push
outsb
in
sub
mov
mov
test
cmp
inc
dec
test
imul
jecxz
jmp
push
jmp
mov
sahf
in
pop
cmp
es
jae
mov
dec
mov
leave
jb
ficoms
pop
mov
pop
test
stos
stos
sahf
hlt
add
or
adc
jns
inc
mov
dec
fs
fisttpl
daa
ljmp
shl
icebp
sbb
loop
ljmp
xchg
shrb
out
adc
add
xor
pop
or
imul
jb
imul
or
arpl
fsubrs
call
jns
jno
pop
xchg
mov
inc
cli
sbb
insl
mov
pop
sbb
pop
stos
inc
lret
xchg
mov
cmc
mov
inc
dec
pop
fcmovb
mov
ret
cmp
clc
enter
imul
cmpsb
and
dec
push
mov
xchg
sub
mov
pop
in
mov
addb
jmp
xor
xor
add
sub
xor
push
popa
xor
arpl
xchg
mov
jle
daa
mov
mov
push
in
mov
aas
or
and
cmp
add
xchg
mov
jg
cli
cmp
xchg
xor
iret
xor
clc
jge
shrl
inc
add
fs
dec
outsl
cmpl
mov
addr16
add
xor
mov
cmc
js
push
dec
pop
cmp
ljmp
mov
clc
push
sarl
add
leave
sbb
int3
mov
pop
repz
fistpl
aad
stos
mov
push
int
mov
mov
fisubl
fadds
dec
adc
mov
pop
or
xlat
mov
mov
push
dec
out
in
sub
addr16
fadds
and
int
repz
test
out
adc
pop
sbb
mov
xor
clc
cli
imul
xlat
pop
dec
popf
das
outsl
in
inc
jnp
mov
fildl
cs
rolb
mov
xchg
jae
test
stos
sbb
insl
xor
xchg
pushf
icebp
int3
mov
das
mov
out
and
dec
mov
jg
daa
mov
xchg
test
les
mov
aaa
mov
loop
std
jo
mov
lea
fnstcw
pop
sub
inc
adc
dec
sub
pop
dec
xchg
les
push
out
jne
stos
push
inc
or
jnp
mov
add
nop
pop
mov
mov
dec
imul
ret
sti
adc
and
loopne
inc
fnstenv
xchg
push
js
inc
pop
cmpl
shl
dec
les
jl
push
fidivrs
cmp
ret
push
pusha
mov
push
leave
aam
mull
pop
fcmovne
inc
mov
jae
movsb
cmp
add
xchg
lcall
arpl
push
cmc
xor
adc
xor
dec
rcrb
psrld
add
add
cmp
and
jmp
in
mov
cmp
loopne
dec
mov
testb
inc
in
movsb
xchg
dec
add
xor
jno
dec
bound
jns
int3
popf
ret
and
scas
adc
push
jns
ja
or
arpl
mov
mov
mov
loop
mov
push
mov
add
rorl
jle
adc
lods
adc
push
scas
aam
xor
pop
inc
into
orb
add
pop
mov
pop
testl
push
mov
leave
repnz
xor
es
inc
fcompl
cld
lret
sub
inc
insb
mov
hlt
dec
ficomps
pop
imull
data16
inc
sbb
xchg
mov
xor
cli
insl
lcall
fsubrs
adc
les
jo
shrl
pop
cmpsl
xorl
and
mov
and
sbbl
repz
dec
push
movsl
adc
ret
lds
nop
fdivrs
jnp
repnz
xor
dec
rcr
jmp
push
cmp
and
xchg
insb
in
out
pop
dec
mov
xor
or
sub
sub
cs
divb
outsb
xchg
pusha
call
sub
pusha
xchg
cmpsb
out
mov
call
dec
ljmp
in
clc
jnp
and
sub
test
add
in
add
push
enter
insb
and
xchg
clc
inc
in
adc
js
add
gs
test
or
outsl
mov
mov
cmp
fmul
outsl
sbb
cmpsb
mov
std
js
es
sub
fcmove
jb
jnp
push
aam
incl
bound
nop
stos
jno
sbb
add
mov
jbe
sub
adc
pop
sbb
inc
leave
pop
xchg
jo
jle
adcl
repz
push
fwait
mov
movsb
mov
lea
sub
cmp
and
inc
cli
add
cli
mov
xchg
xor
cltd
mov
popa
mov
cmp
fcmovnbe
push
fidivl
inc
lret
mov
add
xlat
sbb
mov
enter
add
sbb
daa
xchg
js
aam
cmpsl
xchg
test
xchg
add
sbb
mov
clc
adc
mov
imul
mov
outsb
pop
and
or
stos
mov
shlb
inc
mov
aaa
dec
ret
adc
imul
jnp
mov
lret
pop
repz
inc
les
jl
adc
rol
adc
pushf
leave
pusha
pop
fdivrs
aad
out
pop
test
mov
cmp
and
cmpsl
lret
daa
insl
mov
ljmp
jo
add
sub
and
lret
fstp
ret
mov
xor
add
nop
std
gs
out
nop
ljmp
cmpsb
movsb
shlb
sub
enter
stos
pushf
sbb
xchg
add
pop
arpl
mov
daa
aam
jge
jmp
cmp
mov
and
dec
adc
jae
xor
std
cmp
jl
fwait
je
fldt
orb
insb
shlb
pop
call
inc
call
cli
rcr
dec
inc
inc
inc
sbb
jg
mov
cmp
stc
pop
or
int3
pusha
cmp
dec
cmpsb
lods
lcall
push
push
sbb
dec
or
enter
xchg
jle
pop
mov
adc
cmp
push
dec
pushf
gs
arpl
inc
bound
outsb
leave
or
push
pop
pop
adc
negl
dec
fistl
cwtl
movsb
pusha
xor
aad
jp
push
lds
movsl
pop
or
xchg
mov
repz
hlt
inc
add
jl
fisubrl
call
lds
push
push
pop
sub
pop
mov
mov
loop
fisttpl
stos
shl
cmp
push
sti
in
or
mov
jne
in
mov
test
aad
dec
sahf
dec
ret
cmp
add
flds
lods
fcompl
mov
call
jnp
or
cmp
xchg
sub
and
push
addr16
mov
and
xor
jg
mov
shr
ljmp
in
add
cmp
pop
xor
lea
cmp
enter
popf
fimuls
dec
fdivl
cmpl
out
xchg
jbe
push
out
inc
lods
dec
mov
jmp
and
and
test
popa
mov
pop
jmp
sbb
or
cmp
xor
lods
test
insb
mov
pop
cmp
in
call
dec
js
or
xchg
mov
inc
ret
pop
test
push
clc
into
push
call
add
jl
pusha
fcompl
sub
dec
mov
mov
test
mov
pop
sbb
or
xor
push
shll
sbb
dec
sub
dec
push
loope
fbld
or
push
or
jecxz
mov
jbe
pushf
leave
sbb
and
bound
cvtpi2ps
mov
jno
pushl
inc
lods
lock
in
pop
jo
push
or
sub
into
jne
dec
bswap
stc
adc
xchg
fistpl
mov
popa
jg
dec
mov
inc
dec
pop
xchg
and
push
xor
call
clc
jle
or
lret
cld
sub
mov
xlat
push
jge
cwtl
inc
or
das
dec
adcb
pop
out
push
ret
shlb
sbb
arpl
je
divb
push
jo
xor
in
test
jnp
aas
and
add
pop
adcl
out
sub
mov
daa
add
scas
inc
cwtl
ficomps
loopne
lret
ret
pop
lahf
push
data16
arpl
sub
jne
int3
stc
sarb
out
cld
push
jo
test
jae
jmp
int3
testl
dec
data16
mov
mov
pop
fbstp
jl
enter
add
jo
iret
and
das
popa
daa
or
jecxz
lret
addr16
push
push
push
bound
pop
jecxz
push
mov
stos
divl
popf
ret
sbb
xchg
mov
inc
jae
ds
and
push
cmc
or
push
pop
dec
in
popa
fistps
sahf
add
jne
in
jmp
cld
or
sub
jge
xlat
pop
adc
xchg
pop
mov
test
aam
jns
fldt
js
push
loope
mov
mov
repnz
mov
push
adc
sub
or
mov
adc
lea
outsl
sbb
or
jmp
push
popa
loop
adc
out
sub
ffree
lret
inc
cld
imull
and
xor
pop
in
or
xorl
aam
aad
into
jl
rcrb
adc
pop
leave
ljmp
or
in
stos
mov
push
and
sbb
add
inc
jmp
es
shlb
adc
cmp
xchg
cmp
xchg
sbb
fdivl
jns
push
int3
sub
and
push
jmp
dec
fs
mov
sbb
pop
lock
shl
xchg
out
push
aas
mov
loopne
aas
xor
sub
push
cmp
mov
mov
mov
push
mov
inc
sbb
sub
adc
call
and
adc
call
aad
pop
mov
and
jge
cmp
pop
fildll
repz
xchg
outsb
mov
hlt
rolb
fistpll
cs
or
cmp
out
call
mov
and
gs
scas
popa
xor
pop
jp
xchg
inc
jge
fcomps
jecxz
inc
fisttps
cmp
jb
test
bound
and
push
scas
sahf
dec
cmc
dec
dec
mov
or
imulb
mov
lret
ret
jno
add
adcl
loopne
mov
faddl
shr
mov
jbe
or
push
cmp
and
mov
sub
jge
mov
aad
jbe
notb
xor
dec
fnstsw
adc
faddp
mov
pop
orb
movsb
push
push
mov
fistpll
outsb
sahf
fidivl
int3
shrb
addb
xchg
ja
cmp
xchg
fcomps
adc
insb
dec
push
scas
xchg
jne
sub
or
fistps
inc
push
xchg
dec
cmp
xchg
xor
repz
xchg
lea
dec
xor
or
stos
mov
cmp
dec
popf
out
jbe
sub
inc
into
push
rep
mov
hlt
jmp
dec
and
cmp
mov
sbb
popa
mov
jo
and
out
push
push
push
out
pop
pop
shrb
push
push
daa
cmpb
inc
pop
mov
mov
daa
rolb
xor
icebp
xchg
arpl
cmc
jmp
jo
sub
add
cmp
scas
lock
or
mov
add
xor
sbb
mov
sbb
inc
ret
mov
movsl
in
jg
inc
shrb
dec
js
insl
mov
ds
incb
fcmovbe
popf
je
cmp
cmp
js
loop
dec
loop
bound
dec
jnp
mov
xor
push
xchg
sub
mov
mov
jns
lcall
inc
dec
dec
int
ret
movsb
cmp
xchg
and
xor
mov
fiaddl
fcomi
roll
sub
xor
xor
cli
leave
and
iret
les
xor
nop
fildl
mov
shlb
cmp
pop
xchg
repnz
xchg
mov
into
xor
push
sub
mov
push
jecxz
pusha
pusha
dec
decb
xor
je
in
inc
pusha
subl
lea
bound
cmp
js
movsl
mul
mov
outsb
lods
repz
cmc
lds
lds
mov
push
pushf
sub
cld
loope
push
adc
test
jge
cmp
xchg
inc
mov
or
std
dec
mov
add
inc
mov
mov
das
test
cmp
nop
inc
daa
cmp
sbb
push
enter
xchg
mov
std
in
stc
es
test
outsl
fnstenv
mov
mov
lods
inc
les
mov
sub
in
sahf
je
lods
cwtl
xlat
sbb
bound
adc
or
pop
int3
movsb
fstl
xor
in
cmpsb
sub
shl
repnz
movsl
pop
xchg
outsl
cmp
stos
lret
or
lcall
and
es
jb
shll
lret
add
mov
xchg
adc
cld
popf
ja
jne
or
cmpsl
mov
jbe
in
mov
xchg
sarl
repz
pop
dec
jo
mov
push
dec
xchg
or
lret
sub
pop
cmp
cmp
test
jl
int3
int
adc
leave
test
push
cmp
and
and
les
inc
cmp
mov
lret
sbb
add
addr16
popa
repz
push
movsl
lods
fmull
repnz
and
enter
adc
aaa
lock
es
pop
int
pop
inc
leave
xchg
push
cmpl
int
mov
jne
inc
adc
adcb
test
add
loopne
xchg
mov
pop
xor
and
xor
and
mov
test
jge
mov
out
mov
outsl
ret
ret
inc
lahf
mov
fsts
and
mov
mov
sti
int3
mov
or
jmp
mov
enter
icebp
adc
jnp
sbb
clc
loopne
into
addb
icebp
inc
repnz
mov
pop
data16
std
inc
cmp
sbb
cmp
out
pop
pop
xor
sbb
inc
sbb
sub
dec
and
int3
fwait
mov
inc
add
je
mov
sbb
ja
push
aas
jnp
lock
fsubrl
xchg
mov
sbb
pop
pop
adc
js
dec
adc
mov
sbb
push
mov
gs
filds
mov
pusha
jno
data16
lods
sub
inc
mov
xchg
popa
pop
pop
cmc
push
bound
iret
in
sbb
into
in
mov
pop
pop
xor
sbb
push
es
sbb
jmp
pop
sbbb
pop
test
xlat
jne
lds
mov
push
dec
mov
testl
add
js
je
or
cli
cmp
cmp
dec
xchg
insb
xchg
add
jge
jp
xchg
push
add
fdivs
fmuls
ljmp
stos
negl
xor
jnp
and
or
sbb
cmp
nop
sahf
in
jge
repz
add
mov
mov
mov
xor
cmp
arpl
fstps
bound
dec
jp
sub
jne
sarl
mov
movsl
out
int3
pusha
in
xchg
stos
jge
xor
push
push
out
cmp
lea
in
clc
ss
adc
xor
pop
lods
push
and
popf
lea
es
popa
std
fiadds
mov
outsl
xor
mov
or
mov
or
xor
sbb
sub
mov
xlat
subl
or
aas
pushf
mov
lret
pcmpeqd
cs
add
jge
mov
push
jne
add
mov
pop
loop
sbb
fldl
test
add
pop
repz
mov
icebp
push
out
or
jmp
ret
push
sub
dec
out
jp
icebp
les
jmp
dec
xor
hlt
adc
and
jle
scas
shll
jae
ja
xor
sub
jg
out
cmp
gs
push
test
inc
enter
out
jno
sbb
or
pop
test
outsb
shlb
loope
cmp
lock
hlt
out
in
push
ja
mov
lods
jns
icebp
push
push
inc
add
add
stc
lods
adc
jne
inc
dec
jae
shll
insl
imul
inc
lds
sbb
test
insl
dec
test
pop
popf
repz
add
add
bound
repnz
jo
cmp
sub
nop
adc
push
iret
in
jae
fcmovnu
movsl
aad
imul
pop
mov
inc
mov
inc
inc
and
xor
xchg
fiadds
mov
pushl
add
jbe
aas
jnp
add
sbb
mov
jne
push
inc
test
mov
loopne
or
push
push
fadd
dec
hlt
inc
mov
adc
enter
jecxz
mov
lcall
xorl
cmp
mov
push
dec
lds
jns
jbe
xor
or
sub
cmc
out
ds
and
arpl
enter
fsubs
mov
rorb
sub
popf
adc
push
push
xor
add
pop
addr16
lret
and
sub
adc
cmpsb
pusha
add
mov
je
ja
cmpsb
sub
push
fdivp
repz
clc
pop
sub
in
jb
cmc
xlat
cmc
xchg
cmp
iret
add
adc
cwtl
loopne
lea
ljmp
mov
jno
cmp
dec
xor
vmovapd
mov
popf
pop
adcl
inc
ret
pop
lea
sbb
movsl
lcall
inc
sbb
cmpsl
or
dec
out
roll
imul
mov
popf
push
mov
mov
xor
aam
test
lea
and
mov
mov
mov
aad
push
fdivl
mov
ljmp
cmp
test
into
push
pop
cmp
and
aam
jecxz
adc
push
arpl
push
cmpsb
out
jae
inc
insl
loop
push
cs
lret
imulb
mov
pop
sarl
das
or
inc
adcb
fmul
jae
fldt
sar
push
pushf
sub
cmpsb
cmc
orb
inc
sub
xlat
add
adcl
hlt
or
andl
nop
aas
cs
jnp
push
pop
and
aam
scas
add
mov
aam
fld
hlt
movsl
sub
iret
mov
sbb
bound
test
add
mov
int
insl
enter
cmp
adc
and
mov
jecxz
mov
movsl
jns
xor
cmp
lahf
jp
sub
sub
jne
xchg
pop
mov
pop
adc
lcall
dec
cmp
dec
repz
xor
sub
cmp
inc
ljmp
pop
inc
das
adc
stc
js
sti
inc
push
scas
cmpsb
sub
adc
scas
lcall
test
mov
loopne
xor
stc
test
shll
xor
mov
dec
sub
cmc
pop
add
call
aaa
push
repnz
gs
jg
inc
jnp
loope
or
mov
jle
fadd
xor
jp
cmp
jno
aam
sbb
jne
pop
popa
iret
adc
jp
jb
push
jl
inc
rorb
repz
or
outsb
push
mov
mov
pop
cwtl
mov
pop
movsl
cltd
pop
add
and
lahf
xor
je
icebp
or
pop
xor
mov
test
xchg
ret
insb
adc
lea
inc
fs
xor
push
int3
add
int
out
aad
xchg
xchg
daa
lock
fisubs
push
inc
imul
outsl
pop
jo
aam
sarl
mov
push
inc
cmp
stos
lcall
cmpsl
jne
add
lds
add
xorb
popf
cld
sub
jecxz
sub
into
in
rdmsr
popa
fucom
sub
callw
xchg
dec
push
cmp
popa
lods
jp
ja
dec
cmpsb
aas
xlat
push
mov
cs
mov
pop
cmp
pop
pop
aad
adc
movsl
sar
lock
bound
mov
xor
jbe
std
mov
out
push
das
mov
cmp
sbb
outsb
sahf
cmpsb
cmp
jmp
popa
enter
es
pop
add
xchg
push
insl
xchg
mov
movb
add
push
shr
mov
mov
cmp
fwait
aas
xor
mov
and
stos
push
scas
mov
pop
bound
loopne
out
int3
fs
inc
fnstenv
adc
adc
push
je,pt
mov
inc
scas
mov
pop
mov
or
nop
sti
sub
shrl
sti
pop
gs
popa
in
jg
and
sbb
fdivr
fs
dec
sub
and
sbb
sti
inc
mov
pop
push
pop
je
subl
ja
xorb
cmp
lret
sub
jge
cmp
data16
enter
jno
ds
in
sub
lods
ret
int3
jle
aam
out
test
mov
enter
dec
in
mov
imul
add
movsb
pop
leave
mov
imul
sbbl
and
and
imul
mov
movups
ror
lahf
pop
jo
ror
jno
aas
push
stos
repnz
add
int3
xchg
and
out
lret
mov
sub
lret
std
icebp
push
mov
aad
or
and
sub
add
les
dec
popf
jge
les
inc
pop
dec
sti
pop
fmuls
test
inc
push
aas
adc
jbe
insb
or
jp
mov
inc
mov
fwait
mov
mov
out
or
add
cmpsb
inc
sbb
aas
fmull
pop
cs
lock
cltd
pop
std
ret
or
fildll
mov
jmp
sbb
or
imul
sub
sbb
ret
sbb
push
push
sub
out
or
fs
lcall
int3
jo
jp
shrb
push
je
inc
lods
push
imul
or
ljmp
mov
add
pop
test
mov
in
sub
xor
jmp
jge
mov
xchg
and
or
mov
xor
scas
mov
xchg
or
inc
xchg
sbb
movb
out
mov
dec
xor
pusha
jl
call
hlt
and
in
mov
cmp
inc
loope
lds
push
repz
xlat
jmp
shll
ror
movsl
stos
jecxz
mov
xchg
add
xor
andl
test
mov
adc
fwait
das
ja
jmp
push
cmc
mov
sti
xchg
and
fisttps
iret
and
in
test
aad
push
inc
mov
pop
pushf
add
adc
inc
mov
cwtl
movsl
mov
inc
dec
add
sti
pop
fldcw
xor
lds
test
jnp
dec
xor
scas
add
repnz
test
push
mov
insl
or
in
inc
aam
lods
pusha
sbb
push
lret
jns
mov
outsb
xchg
out
cltd
pusha
mov
pushf
adc
test
xchg
fwait
addr16
push
in
aaa
xlat
xchg
dec
ds
sbb
adc
lret
outsl
ret
fsubs
leave
fcompl
mov
push
jl
cs
cmpsb
push
push
je
shlb
push
xor
xchg
cmpsl
add
orl
nop
cmp
cmpsl
inc
and
popa
pop
aas
cmp
repnz
aad
cmp
test
mov
xchg
shlb
or
xchg
xchg
movsb
clc
les
loope
repnz
outsb
sarb
call
or
dec
out
lcall
inc
je
mov
fadd
fidivl
inc
sbb
lods
pop
mov
mov
adc
push
adc
pop
lahf
pop
inc
dec
fucomip
sbb
dec
aam
andl
ja
cmp
gs
inc
insl
mov
andl
aas
dec
pop
les
cmp
stc
or
inc
jnp
lock
aaa
sub
mov
aaa
xor
pop
jnp
xchg
or
sti
insl
adc
jo
lods
cmp
or
outsb
sahf
push
add
add
imul
cwtl
mov
and
mov
out
mov
dec
pop
mov
jbe
push
or
jns
mov
int3
pop
lcall
out
jg
ljmp
cmp
jecxz
shrl
xchg
inc
or
rcrb
shl
insb
mov
movsb
adc
dec
fsubr
test
mov
jne
loopne
int
cmp
fcomps
mov
mov
mov
testl
leave
pop
pop
mov
push
sbb
mov
mov
and
ds
add
mov
push
push
mov
bound
cmpsb
jno
jp
xor
sub
pop
inc
lret
fdivrs
sbb
adc
loopne
cmpl
mov
push
ret
sub
cmpsb
dec
nop
jne
sub
loopne
imul
add
popf
mov
jge
adc
jl
sub
or
xlat
into
imul
xor
popa
loop
ror
lock
and
and
movsl
add
fidivl
dec
test
outsl
out
das
add
xchg
push
add
in
outsb
xor
mov
cmpsb
jno
push
bound
pop
test
sbb
sub
add
stc
jb
dec
sub
outsb
jmp
shr
pop
mov
push
mov
sub
lahf
bound
push
and
mov
sub
andl
dec
xlat
inc
jmp
jb
push
fs
jge
movsl
cmpsb
in
mov
adc
lcall
cmp
jp
xlat
and
cmpsb
pop
out
test
jl
jmp
pusha
rcl
scas
xor
inc
pop
xchg
shrl
das
sbb
sub
mov
sub
mov
dec
es
sub
repz
mov
sub
xor
xchg
int3
dec
and
push
ret
xchg
xor
nop
xor
push
imul
pop
jecxz
cmp
sub
jno
add
aam
pop
cs
out
negl
cmpsb
dec
in
or
jmp
ja
out
push
jmp
pop
pop
and
scas
into
xchg
inc
pop
fcmovnu
out
rclb
rorb
cwtl
dec
rol
add
xchg
cli
or
and
sub
nop
jns
mov
mov
mov
pop
inc
subb
mov
hlt
adc
jb
in
dec
dec
and
jl
add
sbb
inc
arpl
mov
cltd
dec
aam
mov
rcrb
inc
and
mov
jmp
mov
leave
aaa
mov
fs
in
bound
js
jnp
nop
in
add
fst
jl
idivb
xchg
mov
mov
daa
shrb
and
fidivl
cmp
mov
fcoms
mov
or
add
bound
pop
pop
xor
loopne
xchg
sbb
push
js
stos
ljmp
std
cmc
mov
cmpsl
ss
in
sub
push
pop
or
pop
pop
pop
cmp
jle
lods
mov
mov
push
in
lahf
repnz
hlt
push
mov
xchg
iret
bound
xchg
xchg
cmp
jno
xor
push
push
int
pusha
xchg
jno
fcmovnu
dec
lcall
sub
cmp
rcll
fwait
insb
xlat
sbb
rcrl
adc
add
inc
and
imul
push
pop
dec
jne
mov
mov
aas
cmp
adc
jge
sub
jno
cmp
popf
jnp
scas
sbb
dec
mov
jge
pop
out
ja
and
sbb
jecxz
sub
daa
push
pop
jecxz
add
jecxz
add
inc
inc
rorb
inc
inc
rcrb
adc
arpl
mov
neg
ret
jmp
insl
push
roll
pop
sbb
enter
ljmp
add
das
loope
pop
cltd
mov
push
sbb
mov
jae
test
jge
test
shrb
cmc
dec
pop
bound
sub
cmc
push
mov
ret
add
daa
mov
cmp
mov
out
rcrl
sub
cmc
add
jne
test
cltd
xchg
out
sbb
lcall
xor
mov
adc
js
inc
lret
out
popa
push
adc
lea
push
mov
push
sub
popf
jp
add
jo
out
cmpsb
xchg
xchg
push
dec
popa
iret
fidivrl
lods
bound
inc
lcall
shlb
rol
adc
addr16
sahf
in
dec
cltd
cltd
lret
enter
jmp
in
or
cmp
sbb
fst
lea
mov
sbb
jae
mov
lods
pop
jge
insl
or
pop
xchg
sahf
or
loopne
fisttpl
dec
xchg
adc
xor
sbbl
out
in
out
jo
pop
ljmp
ljmp
stc
jle
orb
add
aad
push
xchg
xor
adc
adcb
add
addr16
loop
cmp
sahf
sub
mov
pop
jge
negl
xor
adc
sbb
xor
ss
fmuls
ss
in
lods
stc
hlt
bound
sbb
and
add
dec
sub
cltd
dec
xchg
mov
jb
jne
mov
push
vmovq
daa
out
mov
lcall
leave
add
add
adc
add
test
hlt
fstps
xor
sbb
jno
pop
sahf
push
addl
out
push
test
mov
jg
icebp
fstl
fs
pop
call
arpl
or
mov
push
adc
ja
pop
fs
icebp
loope
ret
mov
or
repz
ret
mov
xor
das
in
adc
sbb
dec
adc
xor
jnp
dec
mov
xchg
inc
cmp
xorl
ja
jb
inc
xor
popa
cmp
mov
bound
pushf
xlat
sub
cwtl
nop
aas
mov
lods
nop
jb
daa
pop
xor
lods
fwait
jb
icebp
lods
push
in
dec
push
out
les
mov
sbb
sbb
pop
lea
sbb
mov
lds
negb
faddl
js
jmp
lods
cmp
xorb
push
inc
dec
jle
and
jne
pop
adc
jns
dec
shr
push
mov
sbb
cld
shrl
xor
xchg
nop
divb
stc
push
jne
mov
orl
or
imul
xchg
and
jecxz
dec
mov
cmp
lcall
sbb
mov
pop
xlat
lahf
and
pop
cmp
push
cld
mov
push
mov
sbb
lds
mov
insl
leave
inc
jb
repz
ss
imul
mov
int
cs
sub
mov
fstps
gs
mov
popf
lods
xchg
mov
fstpt
jl
mov
cmp
dec
jb,pt
sub
mov
pop
mov
lret
adc
into
mov
movsl
mov
ret
fistpll
je
imul
pop
or
and
xor
xorb
mov
insb
xor
loope
xchg
repz
push
sub
lea
mov
inc
pop
push
aad
cmp
or
repz
or
movsb
fdivl
cmp
and
pop
addb
mov
hlt
pop
testb
push
or
test
ldmxcsr
repnz
adc
jo
clc
and
daa
das
mov
lods
sahf
or
lds
test
mov
inc
iret
test
mov
mov
jo
xchg
mov
add
mulb
aad
push
and
or
dec
mov
pop
adc
stos
sub
mov
aas
je
add
inc
dec
cmp
pop
shlb
mov
outsl
add
dec
mov
jo
push
cmp
jmp
mov
sbb
cmp
xor
push
ret
das
shr
negb
out
pop
cs
imul
nop
sbb
pushf
sti
fcmovnbe
dec
push
dec
adc
fwait
outsb
nop
rclb
pop
testl
adc
or
imul
xchg
cmp
jle
fiadds
mov
fs
push
jg
sub
mov
iret
dec
push
jl
cli
sub
outsb
nop
mov
aas
xchg
add
adc
mov
jle
call
outsl
cmpsb
sub
aad
mov
xor
jge
lods
cmc
daa
mov
or
push
pop
cmpsl
ss
pushf
iret
cmp
fcoml
xor
pop
push
repnz
shrb
das
sbb
jecxz
xchg
dec
xor
sbb
jl
jmp
mov
cwtl
pusha
fisubl
lods
mov
jne
in
mov
and
pushf
inc
sub
or
mov
xchg
xor
xlat
inc
inc
pop
iret
sbb
dec
scas
hlt
lea
lret
into
shll
jmp
mov
bound
xchg
adc
push
fs
mov
iret
arpl
jbe
lret
movsl
adc
aas
cld
lret
cmc
or
jmp
xor
daa
adc
jb
inc
lret
cmpsb
aaa
repz
insl
icebp
lcall
jmp
adc
test
add
mov
push
push
jg
mov
aas
push
jae
arpl
mov
je
xchg
stos
adc
ret
loop
add
adcb
inc
jns
fwait
popa
cmc
lods
xchg
push
mov
icebp
in
sbb
mov
inc
push
pop
mov
out
ror
popa
hlt
mov
in
fisttps
mov
cmpsb
cmpsb
adc
out
sbb
dec
push
scas
in
movsb
ljmp
clc
sbb
cmpsl
cmpsb
mov
lods
jmp
rcll
cs
clts
dec
call
sub
popf
cmp
out
add
push
fstpt
in
out
inc
or
jns
popa
mov
pop
and
cmpsl
test
ret
cmp
scas
xor
jecxz
aam
jb
sarb
int3
fsubrs
or
stos
mov
sbb
xor
jle
xor
jge
loopne
test
sar
pop
and
mov
pop
jl
aas
int
rcl
lcall
test
ret
jecxz
rorb
mov
rcr
scas
mov
xor
popa
mov
sti
in
push
imul
repnz
mov
rorl
sbb
push
mov
test
push
popa
cwtl
or
sbb
jb
mov
js
push
mov
lds
adc
decl
ficompl
loopne
adc
adc
or
fiaddl
mov
mov
mov
push
sbb
add
sub
jo
cmp
pop
sub
jl
push
sub
repnz
filds
and
fisubrs
pop
and
xor
stos
subl
fdivr
fdivrl
push
inc
pop
and
push
int3
jle
sub
fstps
loop
push
jne
pop
xchg
inc
insb
incl
popf
sbb
sub
xchg
popa
ljmp
out
cltd
adc
mov
jl
mov
adc
cli
mov
repnz
sbb
mov
and
mov
sbb
adc
in
rcrl
sti
cmp
mov
fs
sbb
test
and
pop
pop
mov
test
push
stos
movb
cmp
icebp
add
dec
pop
insl
xchg
mov
or
add
pop
dec
fiaddl
push
xor
mov
xor
test
ja
inc
xchg
add
repz
pop
dec
dec
rcll
pushl
xchg
shrb
xor
nop
out
inc
mov
pushf
xlat
sbb
pop
pop
fwait
and
jne
mov
push
enter
jae
sysret
ja
dec
subb
sbb
ret
popf
adc
pop
hlt
subl
mov
mov
inc
lea
iret
push
adc
mov
call
test
nop
lret
pop
pop
mov
jo
arpl
lcall
jb
std
out
popf
insb
or
xor
outsb
cmp
cmpsb
inc
leave
je
les
cmpsl
cmc
icebp
cmpl
push
ds
ja
inc
push
aad
cwtl
jnp
cltd
jmp
lods
shll
push
xor
dec
test
aam
xor
je
push
test
add
out
pop
imul
push
dec
fisubl
fsubrs
das
std
cmp
imul
jp
ds
or
pop
jg
xchg
pushf
sub
insb
xchg
clc
xor
test
push
cmpsl
mulb
movsb
add
mov
pop
xchg
add
or
xchg
pushf
cltd
mov
movsl
ficoms
sub
push
clc
dec
call
xchg
cmc
mov
mov
aam
mov
and
dec
loop,pn
fildll
aas
mov
stos
mov
mov
in
sbb
inc
movsl
pop
mov
cwtl
xchg
enter
sub
mov
fldl
mov
jg
pop
adc
test
in
adc
xchg
lock
repnz
xor
lahf
int
sbb
sahf
xor
pop
fldcw
jbe
aam
ja
out
fmuls
mov
out
sub
mov
nop
add
ljmp
scas
outsl
jo
jmp
jae
andb
movsb
lea
mov
pushf
xchg
mov
insb
dec
jg
add
sub
pop
fidivrl
iret
js
xlat
int
mov
nop
xorw
mov
cmp
xor
loop
cmp
and
inc
inc
scas
xor
mov
lret
movsb
cmpsl
ret
fucomp
jbe
push
dec
mov
push
pop
inc
call
sbb
fbld
jge
mov
lods
test
adc
and
xchg
mov
int
or
addr16
pop
andb
jecxz
sub
or
fdivl
iret
sub
sbb
sbb
bound
gs
test
push
in
lock
call
cmpsb
ret
pusha
cmp
sti
mov
jnp
pop
adc
repnz
mov
movsl
imul
pop
jmp
fimuls
repnz
iret
test
and
in
leave
jno
push
fnstenv
in
mov
xlat
push
cmp
dec
xor
inc
dec
cmp
jnp
stos
pop
out
cmpsl
mov
iret
mov
push
cli
lret
jmp
dec
sub
mov
cmc
xor
dec
ret
movl
cmp
push
adc
in
push
cmpsb
pop
call
cmpsb
jno
pop
xchg
pop
testb
subl
jmp
in
stos
arpl
inc
iret
pop
inc
cmp
lcall
mov
jbe
and
sub
outsl
lods
loope
push
jno
lcall
in
sub
in
mov
jbe
mov
xchg
bts
add
test
add
lock
dec
jg
aam
or
dec
ljmp
clc
ret
lahf
pop
mov
shrb
jge
insl
data16
or
mov
loopne
addr16
rclb
pop
add
mulb
fistl
cltd
or
insb
push
ret
pop
sub
int3
mov
jecxz
movzwl
pop
cwtl
in
ret
das
daa
push
scas
or
into
in
sbbb
js
sub
pop
aas
push
movsl
insl
lods
jns
sbb
pop
movsb
jle
push
mov
sbb
mov
mov
call
insl
xor
ret
ds
es
sbb
test
jnp
xchg
lahf
dec
int3
sub
lcall
push
mov
aas
sub
jnp
mov
inc
dec
mov
stc
push
jb
xchg
pop
pusha
sahf
repnz
out
fidivrs
daa
push
stos
fdivl
pop
inc
sbbb
daa
aaa
mov
aas
pop
test
jp
or
adc
inc
sti
sbb
enter
inc
in
cmp
jmp
movb
dec
cltd
fwait
test
pop
dec
int
pushf
enter
push
mov
dec
or
jecxz
lea
cltd
inc
pop
push
shrl
arpl
mov
jmp
inc
push
push
lods
xlat
mov
xchg
ds
and
ret
pushf
mov
xor
pop
aaa
xorl
pusha
fstps
stos
fcoml
mov
test
in
or
add
mov
js
inc
aad
pop
aam
mov
mov
lock
lock
out
stos
popf
shlb
push
popa
popa
xor
repnz
xchg
adc
sub
pop
in
xchg
decl
leave
mov
in
das
dec
inc
icebp
or
cmpsl
and
push
faddl
mov
ficompl
sbb
out
gs
repnz
bound
int
pop
sti
stc
sbb
cmpsb
std
xorl
pop
or
push
mov
mov
jmp
js
test
test
aam
and
imul
mov
test
enter
cmp
call
xor
loopne
sti
fsubrl
ss
jecxz
xchg
test
jb
adc
insb
test
pop
hlt
jnp
xchg
mov
mov
js
pop
mov
fbstp
pop
popa
add
outsb
sub
add
sbb
xlat
or
stos
movsb
pushf
lret
outsb
test
inc
jo
out
sti
xchg
lret
cwtl
sbb
mov
cmp
out
sub
mov
xchg
adc
push
and
negb
movsb
std
test
lods
mov
sbb
or
dec
push
mov
icebp
test
in
loopne
imul
es
jecxz
xchg
cmp
inc
dec
mov
add
adc
xchg
push
popa
addr16
push
js
mov
jecxz
mov
inc
fadds
pusha
out
lock
sub
adc
sbb
mov
jno
jno
dec
fucomip
and
dec
xchg
adc
mov
pop
outsl
mov
push
jmp
push
jle
shrb
rorb
and
jg
dec
xchg
jbe
xchg
dec
cmp
hlt
dec
jbe
mov
cwtl
cli
cmc
cmp
inc
dec
push
fdivrs
xchg
inc
sub
in
sub
lods
or
cmp
xchg
push
jnp
and
xchg
imul
lds
incl
sub
push
sub
jge
dec
inc
jne
stos
mov
dec
sbb
xor
dec
test
out
scas
mov
cmp
cltd
mov
dec
xor
das
fdivs
and
insb
pop
inc
adcl
sahf
jns
jg
testb
call
and
fisubs
mov
xchg
clc
pop
push
rorl
dec
pop
inc
mov
outsb
inc
and
out
sahf
in
loop
mov
xchg
add
add
inc
jecxz
rorl
mov
mov
js
test
sub
jp
add
pop
or
cmp
inc
mov
loop
inc
adc
subl
pop
sahf
xchg
cmp
pop
jecxz
cmc
les
sbb
and
xor
push
mov
fdivrs
pop
sbb
xchg
scas
loop
push
mull
jecxz
pop
adc
mov
sub
pop
pop
push
notb
jns
xchg
and
movl
adc
pushf
jbe
cmpsl
inc
xor
xchg
add
sbb
test
pop
push
mov
sbb
mov
in
mov
hlt
jne
imul
icebp
movsl
and
ljmp
push
pusha
cmp
xor
xor
push
hlt
fs
add
mov
shlb
out
repz
dec
adc
cli
push
stc
mov
fnstenv
aaa
cs
fsubr
cwtl
push
mov
dec
mov
scas
mov
out
iret
mov
icebp
fistps
mov
sbb
cmc
cwtl
jmp
pushf
dec
imul
jns
pop
lods
or
sbb
inc
or
sub
or
cmpb
fmull
push
dec
sbb
out
pop
push
sub
lds
int3
sub
mov
pop
out
pusha
xchg
dec
out
xchg
inc
mov
add
dec
jns
movsl
sub
repz
fwait
cli
and
cmp
lret
int
sbb
scas
cmp
sti
mov
aas
and
enter
mov
pop
xor
roll
dec
lock
dec
popf
ds
pop
xchg
jo
dec
xchg
sbb
adc
das
pop
pop
test
xchg
push
in
jns
test
pop
fisubrs
xchg
inc
cmp
sbb
fs
loopne
ljmp
fiadds
mov
aas
ljmp
mov
aam
xor
out
pop
and
leave
dec
cmpsl
add
sti
push
jle
scas
cld
fidivl
notl
mov
jae
sbb
cli
push
movsl
or
pop
inc
scas
das
in
pusha
push
ffreep
mov
xchg
imul
sub
outsb
dec
in
movsl
daa
test
bound
push
push
mov
fidivl
cli
cmpsb
dec
ds
int
test
outsl
xchg
jne
dec
fwait
lea
cli
add
lret
fwait
pop
in
repz
addb
xor
lds
testl
jg
testb
or
insl
ret
aas
cmp
push
pop
xor
add
jne
jns
jo
aad
mov
add
adc
jb
and
cmc
jg
adc
mov
jecxz
xchg
cli
int
cmpsl
inc
leave
inc
lcall
pop
sbb
push
pop
sbb
cwtl
xchg
lock
jae
fs
aas
inc
bound
cwtl
and
add
pop
pop
adc
test
sbb
mov
and
and
insl
add
enter
push
rcl
or
or
std
in
mov
mov
inc
cmc
xchg
cmpsl
sbb
mov
mov
aam
mov
ja
add
and
sti
xor
lods
sahf
jecxz
outsb
fmul
mov
add
fiadds
adc
push
mov
mov
ret
and
fsub
pop
ret
aam
rcrl
divb
xchg
jns
xor
jg
jg
add
in
and
or
add
adc
cmp
int
adc
pop
push
stc
fnstenv
lcall
push
test
icebp
stos
addr16
bound
stc
jae
inc
mov
lods
jle
andl
test
pop
push
or
stos
sub
and
insl
fcomp
inc
fstps
bound
mov
mov
sbb
jecxz
adc
movsb
aaa
mov
dec
sti
adc
iret
xor
mov
ds
leave
nop
mov
mov
and
add
cmp
stc
loopne
adc
pop
bnd
sbb
test
jne
add
les
mov
cld
fildll
mov
push
icebp
add
and
in
xchg
dec
inc
aam
and
and
adc
cwtl
adc
out
in
aam
fldt
push
push
xchg
mov
std
lahf
or
lods
hlt
int
insb
dec
xchg
fnstenv
test
pop
out
mov
je
jo
lahf
dec
das
cmpb
pushf
ljmp
cmp
pop
fdivs
pop
hlt
xchg
push
lret
testb
cmp
mov
mov
sbb
cs
push
aad
incb
in
jecxz
mov
sahf
divb
push
pop
ret
lock
jg
inc
rcll
pop
imul
xor
pusha
xchg
cmp
and
xchg
push
push
push
mov
push
pushf
out
add
mov
test
mov
pop
inc
sub
ds
sbb
or
jecxz
sub
cs
cs
pop
push
loope
add
pop
das
insb
out
push
in
pop
mov
and
xor
or
stos
les
mov
mov
std
pusha
es
jbe
shll
push
cpuid
popf
adc
push
ja
pop
sti
push
sbb
adc
test
pop
in
mov
imul
sbb
push
addr16
dec
pop
aas
lock
mov
rcl
outsb
mov
aam
or
aam
inc
mov
fstl
pop
lods
loopne
loope
fisttps
stos
aam
or
pop
daa
stos
adcl
aad
in
sti
std
adc
shrb
or
push
jno
mov
mov
or
adc
cmp
xchg
xchg
pop
loope
mov
mov
test
jp
aas
adc
adc
jne
pop
and
pop
cmc
jbe
scas
inc
lods
aad
sbb
setnp
push
push
leave
push
jecxz
rorb
xor
fidivs
mov
out
sub
jge
scas
cmp
mov
jecxz
das
daa
jbe
dec
ds
out
inc
sub
inc
xor
sti
fwait
repnz
cmpsb
push
insl
mov
xorb
pop
mov
pop
dec
dec
aad
cmpsb
dec
xchg
cltd
ljmp
pop
fcmovu
scas
sbbb
in
mov
jp
aas
sbb
stc
sbb
clc
out
icebp
jno
ja
ss
ss
cmp
loope
sbb
adc
jmp
sub
jo
xchg
test
addb
lods
hlt
push
rol
out
sub
cmc
sbb
sbb
mov
jb
fldl
test
mov
loop
call
xchg
xchg
stos
adc
xor
xor
pop
mov
pushf
or
mov
inc
ret
sbb
jb
insb
lock
iret
push
ds
xchg
jmp
and
push
fisttps
cwtl
insb
push
bound
in
test
xchg
pop
mov
loop
jno
aam
adc
lahf
insl
ret
loopne
jb
in
xor
out
mov
inc
imul
cmp
xchg
pop
out
test
js
xchg
mov
add
pop
jecxz
leave
fnsave
cmp
push
in
lahf
daa
inc
pop
and
rcll
cs
mov
jnp
jne
ds
das
outsb
cwtl
ret
lret
clc
inc
out
mov
rclb
inc
hlt
mov
daa
pop
push
push
stc
popf
add
fiaddl
iret
mov
or
xorl
lcall
push
cmp
sub
mov
cmp
sbb
in
imul
or
adc
ret
push
add
lahf
jnp
lret
fsubs
mov
shlb
cmpsb
cltd
mov
push
pop
sbb
bound
test
stos
mov
jl
push
rol
or
test
and
inc
dec
mov
out
and
sub
xor
stos
jae
add
ds
scas
loop
sbb
in
add
pop
hlt
lahf
adcb
inc
out
lods
out
dec
pop
fstpt
sbb
sarb
xchg
icebp
repz
dec
adc
imul
or
sub
addr16
pop
mov
shrl
jno
sub
cld
out
cwtl
stos
aad
adc
rorb
out
dec
sub
stc
mov
cltd
call
sbb
fisubs
mov
sbb
imul
inc
sbb
jp
push
mov
stos
or
cmp
sarb
imul
cmp
pop
push
sahf
das
sub
loop
inc
sbb
stc
or
sub
and
xor
insb
add
cltd
pop
inc
jecxz
pop
cmp
dec
mov
in
rorl
and
out
push
add
and
mov
mov
inc
pop
mov
xchg
cwtl
jle
push
xchg
dec
add
mov
shrb
arpl
inc
ficoms
enter
add
ljmp
mov
sbb
jl
pop
insl
gs
adc
mov
dec
push
jbe
ficompl
add
inc
out
ss
movsl
pushf
leave
xchg
push
fmull
sub
push
nop
test
out
or
sub
jmp
out
repz
adc
or
push
popa
jns
stos
rcrb
fists
push
std
cmc
in
out
sbb
inc
imulb
adc
lret
push
and
dec
sbb
cmp
sbb
inc
das
ficoms
sbb
fld
xlat
add
and
pop
bound
dec
rorl
and
lds
andb
push
cmpsb
inc
add
lods
or
das
sub
push
dec
sbb
sbb
mov
addr16
or
add
adc
int
dec
dec
lea
test
pop
mov
scas
sbb
push
je
lret
fdivr
and
aas
lods
push
cmp
std
ret
lret
test
sbb
sub
cmp
repz
inc
pop
mov
in
cmp
mov
jns
enter
adc
or
mov
push
cmp
and
add
insb
in
into
roll
xchg
hlt
mov
repnz
shll
clc
and
and
cmp
out
mov
pop
loope
and
pop
test
cmp
push
scas
push
imul
inc
std
arpl
ds
xlat
les
inc
ror
pushl
cmp
out
add
inc
inc
int3
push
mov
movsb
xchg
clc
adc
jecxz
mov
add
cltd
or
pop
cltd
aaa
int3
push
rorb
add
test
xchg
cmc
inc
out
mov
jp
pop
mov
out
mov
jb
mov
pop
jnp
cmp
push
lahf
push
xorl
std
mov
push
inc
jno
les
inc
inc
xor
and
int
mov
mov
movsb
push
das
dec
cld
sub
jl
mov
inc
or
pop
push
sub
adc
or
mov
sub
pusha
icebp
imul
into
adc
ds
frstor
push
pop
inc
inc
lcall
or
int3
mov
push
outsb
insb
cs
sub
icebp
jnp,pn
jno
in
cmpb
mov
adc
sub
xlat
adc
xchg
movsl
mov
insl
ljmp
mov
gs
pop
fstpl
in
in
out
ret
lahf
pop
inc
lock
push
inc
lods
clc
mov
push
mov
xchg
std
dec
xchg
mov
jmp
cld
sbb
inc
jge
and
sub
int
pop
push
sbb
aaa
pop
out
add
int3
outsl
xchg
aad
add
pusha
xorb
mov
outsb
ja
bound
adc
out
cmp
mov
fisubrl
loope
xchg
fstpl
sub
ret
push
lret
inc
sub
push
push
xchg
fwait
sbb
js
loope
call
cs
clc
mov
mov
jo
lret
out
cmp
adc
adc
lret
fdivrs
mov
inc
test
dec
hlt
stos
jge
movsl
mov
xchg
cmp
mov
jecxz
and
and
and
js
fldcw
mov
jb
cld
push
sahf
scas
adc
xchg
sub
add
mov
outsb
aas
mov
sbb
ficomps
shrl
lcall
vpcmpgtb
cmp
xorl
sub
inc
lds
frstor
in
xor
rcll
imul
add
push
in
mov
into
jg
push
sarl
sbb
test
aaa
push
mov
pop
sub
fdivl
xor
in
mov
addl
sub
lahf
push
jg
cltd
out
rorl
pop
and
shrl
mov
xchg
pushf
cmp
andb
cld
mov
xor
repnz
jl
jecxz
sarl
adc
in
iret
fs
sahf
adc
or
inc
dec
adc
push
mov
adc
int
loopne
inc
or
xor
imul
lock
movsl
pop
sub
mov
sbb
or
cmp
pop
out
rorb
push
xor
mov
sub
inc
sahf
rolb
sbb
aaa
mov
push
mov
insl
ja
and
push
xor
cmp
pop
pushf
pusha
push
sub
xchg
ret
adc
cmp
xor
push
fprem
decl
cmp
xlat
js
pop
cmc
mov
out
mov
mov
lock
jae
orl
repz
cmp
icebp
scas
push
dec
repz
and
adc
into
scas
fwait
ja
jp
jbe
xchg
xchg
jno
cmp
dec
bnd
or
es
mov
pop
inc
stos
or
loope
dec
xor
mov
inc
or
call
in
rorl
sbb
sti
mov
imul
pop
or
mov
stos
xchg
sbb
arpl
jns
inc
push
stc
xor
das
add
lds
fwait
push
stos
aaa
xchg
and
lods
cmp
cmp
jo
sub
inc
cmc
fisubl
xchg
rorb
pop
push
aam
push
daa
inc
push
cld
scas
and
fadd
xchg
fdivr
push
mov
pop
repz
adc
test
popa
adc
pop
inc
dec
mov
pop
insl
and
scas
rcrl
fstpt
sub
stos
sub
pop
faddl
add
fs
fisttps
push
in
in
int3
pop
push
out
cmpsl
pop
or
dec
ja
pop
mov
sub
push
xchg
jecxz
cmpsl
out
bts
add
lds
stos
int3
or
negb
dec
jno
les
out
mov
fldl
dec
jns
mov
outsb
mov
hlt
mov
fstpl
fwait
inc
xchg
jge
and
aam
push
out
fistpll
aad
out
adc
into
sbb
cs
rcl
mov
mov
mov
fists
xchg
dec
movups
pusha
pop
add
ret
pop
lss
jecxz
mov
fsubs
add
rolb
int
sub
jo
add
mov
cmpsl
add
lahf
add
testl
adc
push
cmpsl
ror
data16
push
or
in
adc
ss
out
mov
pop
xlat
sahf
fiadds
add
dec
mov
jns
push
adc
mov
stos
xor
std
xor
outsl
lock
mov
je
daa
pushf
xchg
pop
imull
and
pushf
and
dec
mov
sbb
xchg
into
cmp
sbb
lahf
dec
test
je
test
movsl
ret
pop
push
inc
sti
sbb
push
dec
add
sub
push
add
dec
daa
jmp
adc
dec
cmc
adc
cs
dec
hlt
in
test
repnz
mov
mov
push
in
and
ret
cld
xchg
add
out
ljmp
push
negb
cltd
dec
arpl
mov
inc
pop
arpl
mov
mov
pop
or
xchg
sbb
mov
sub
icebp
loope
out
pop
mov
int3
and
inc
hlt
cmp
outsb
pop
cmp
mov
leave
jecxz
ret
sbb
mov
aad
cmp
loop
aaa
jno
and
sbb
aaa
bound
ror
adc
subl
fs
repnz
dec
pop
sub
cmp
push
jmp
leave
push
iret
rcrl
and
inc
or
fstpl
or
jp
sbb
adc
jae
ja
xchg
push
call
inc
add
push
mov
sub
or
lahf
xorl
pop
add
pop
sbb
xor
and
negb
aaa
rcrl
je
xor
xor
addr16
pop
stos
push
xor
inc
mov
into
adc
icebp
nop
and
xor
pop
jmp
in
mov
es
push
push
pop
leave
jne
sub
sahf
push
pop
repz
ja
xchg
out
sub
stc
pop
cmpl
stos
enter
xlat
jg
mov
sbb
filds
cltd
ret
adc
jg
aas
lret
or
loop
dec
push
cld
aam
cmp
mov
add
mov
mov
shrl
frstor
jge
mov
or
and
aam
inc
icebp
iret
sbb
dec
iret
sub
outsb
into
lret
in
mov
ja
push
mov
daa
lods
jnp
jns
cwtl
idiv
jo
mov
popa
out
cmp
and
push
jnp
mov
test
adc
push
or
daa
mov
ret
and
inc
fnstcw
cwtl
test
xlat
xor
xchg
pusha
inc
pop
xor
push
inc
sub
es
mov
jno
fsubrs
mov
out
xor
xor
shlb
imul
cld
lock
gs
es
pop
iret
and
or
je
std
mov
cvtps2pi
bound
jno
fadds
fistpl
adc
and
pop
xor
das
test
scas
xchg
pop
sub
xchg
arpl
lcall
sub
adcb
fsubl
andl
pop
adc
test
cmpsb
push
lea
pop
and
push
or
mov
adc
in
fisubs
ljmp
push
and
cmp
andb
cs
rcll
subb
mov
sub
scas
xor
leave
pop
pop
pusha
sar
sbb
mov
in
loope
in
int3
scas
sub
mov
aaa
es
xor
in
loope
sub
mov
and
loop
fcoms
or
jp
pop
adc
mov
dec
test
clc
outsb
cmp
imul
sbb
jns
imul
packuswb
sub
mov
imul
movsl
ret
inc
dec
xchg
mov
adc
cltd
dec
ja
ret
push
inc
push
fsubrp
popa
jge
stos
or
adc
mov
jnp
out
lds
cmc
repnz
imul
pusha
xchg
insb
lods
stos
mov
fidivrl
add
inc
add
data16
out
pop
cwtl
push
ret
arpl
pop
xchg
adc
adc
out
cmp
lret
call
mov
pop
xchg
clc
pop
cs
fisubrs
pop
aam
popa
dec
jno
dec
js
repz
mov
xor
adc
sbb
sbb
fistpl
mov
or
sahf
imul
jp
les
sti
mov
add
popa
sub
ret
dec
mov
orb
jecxz
ds
inc
in
fsin
sub
sub
aam
in
sbb
dec
aas
dec
movsb
or
aad
repz
push
out
xor
repnz
xlat
fwait
mov
mov
cs
insb
xor
aas
rol
mov
mov
inc
xorl
lret
pop
mov
test
or
add
jnp
pusha
jge
push
jmp
out
movsb
adc
out
pop
sub
push
daa
fadd
das
js
and
outsl
jbe
dec
xchg
mov
mov
mov
adc
stc
sti
stos
pop
pop
icebp
leave
mov
aad
push
mov
and
repnz
sub
std
mov
in
stos
out
mov
lret
out
lahf
gs
fadds
inc
cmp
fdivrp
mov
pop
xor
push
adc
enter
xchg
shrl
flds
bound
out
in
add
mov
out
mov
mov
lret
xor
jb
push
mov
cmp
and
in
jl
cmp
out
movsl
out
or
out
cmp
xchg
jecxz
jne
adc
ljmp
or
dec
mov
lahf
dec
add
insb
sahf
mov
xor
xchg
cmp
fs
shll
and
pop
xchg
bound
into
push
nop
xchg
sub
lods
mov
int
lret
xchg
test
jo
cmp
bound
movsb
adc
xor
cmpsb
enter
inc
stos
cmp
fisttpl
jnp
pop
test
or
imul
lods
xchg
inc
fcoml
icebp
into
cld
test
mov
aas
mov
mov
jb
shl
insb
lods
test
mov
mov
add
sbb
xchg
lds
sub
in
xor
mov
ja
fwait
push
cmpb
gs
inc
pop
cmp
inc
push
insb
enter
mov
mov
push
jmp
push
mov
and
into
fisubrl
xchg
dec
add
pushf
cmpsl
lret
jl
mov
or
dec
mov
adc
sbb
jge
sti
stos
and
lcall
xor
push
js
xor
daa
mov
jns
and
or
repnz
insl
mov
jae
jp
scas
int
sub
mov
imul
stos
jg
inc
test
stc
sbb
push
jb
push
push
jl
loopne
fistps
mov
sbb
nop
sar
pop
push
ss
pop
into
out
sbb
pop
fnstenv
test
mov
icebp
pushf
jns
xchg
cmpsl
push
mov
xlat
jmp
shrl
ror
adc
nop
xchg
divl
cmpsb
icebp
mov
sub
je
jns
inc
inc
xor
sahf
inc
int3
adc
add
fcompl
pop
xor
sbb
pusha
push
xor
inc
adc
add
loop
lods
mov
jmp
idivb
repnz
into
sbb
fisttpl
test
push
fnsave
std
addr16
xchg
mov
ja
dec
loop
jae
xor
sbb
cs
insb
mov
out
sbb
addr16
mov
out
cmp
sbb
mov
icebp
inc
pop
int3
gs
mov
fimuls
mov
xchg
add
push
negb
mov
xchg
mov
daa
clc
pop
mov
pop
mov
mov
mov
stos
or
pop
pop
cltd
hlt
sub
adc
sbb
mov
inc
fimull
adc
sub
shl
jbe
dec
cwtl
jge
or
aam
pushf
repnz
les
add
cltd
mov
adc
fdiv
jb
sarl
mov
xor
lea
dec
jl
stos
lock
fst
dec
ret
push
pop
or
aam
cwtl
inc
pushf
mov
rcrl
imul
pop
ret
lea
movsb
mov
push
inc
cltd
lods
push
inc
ficompl
push
repz
or
lahf
xchg
ficompl
add
mov
inc
fildll
xor
gs
sahf
pop
mov
mov
and
pushf
pushf
mov
pop
fdivp
arpl
mov
testl
push
insl
xchg
xchg
adc
lahf
xchg
pop
push
ret
enter
inc
add
in
pop
jg
shl
daa
jbe
pop
outsb
icebp
mov
push
fnstcw
and
pop
in
xor
xor
nop
cmp
xchg
aad
mov
test
sarl
mov
in
mov
dec
jo
insb
mov
push
leave
repz
mov
loop
jp
sub
jp
fmull
cmp
xor
pusha
ljmp
test
sbb
adc
jo
jmp
add
mov
push
or
mov
popa
hlt
mov
pop
pop
in
pop
and
or
and
mov
sbb
push
add
cltd
mov
call
mov
in
pop
fldcw
xchg
bound
test
and
std
addr16
cmpsb
inc
fs
das
stos
inc
jne
jbe
inc
sbb
loope
xlat
and
add
adc
sub
pushf
mov
popa
add
xchg
cwtl
mov
adc
sbb
out
orl
in
inc
movhps
clc
in
pop
jp
loope
clc
test
jmp
fisubs
pusha
jle
test
or
xor
outsl
mov
fcoml
mov
cmpb
imul
and
sbb
lods
ja
inc
loopne
mov
or
sbb
pop
in
enter
add
pop
add
pop
push
push
jo
inc
mov
mov
je
mov
iret
aad
fs
push
scas
fidivrs
xlat
jae
sarl
pop
dec
xlat
push
insb
nop
and
add
rcr
dec
mov
nop
push
pusha
cmpb
out
jb
mov
jno
jecxz
xchg
fs
cmp
fsts
inc
inc
xchg
dec
test
icebp
enter
and
add
ja
add
cld
loopne
or
xchg
call
push
fidivrs
out
xchg
push
mov
mov
lods
push
xchg
sarb
ret
fidivs
sti
mov
jg
rclb
xchg
insl
sub
dec
out
test
lea
mov
sbb
int
sbb
sbb
push
pop
push
test
stos
push
shrb
cltd
adc
mov
mov
in
icebp
jb
mov
inc
jg
adc
imul
add
sbb
adc
fcos
jle
lret
mov
daa
mov
data16
push
cmp
enter
cmp
mov
data16
in
mov
fnstsw
pop
xchg
ljmp
push
andl
frstor
sub
fsubl
notb
stos
mov
add
or
lcall
clc
int3
in
inc
and
sub
mov
jno
aaa
rcrl
je
xchg
cmpb
jno
jo
rolb
and
adcb
in
in
pop
dec
aam
movl
scas
xor
mov
shr
xchg
daa
mov
inc
add
icebp
leave
adc
jmp
cmp
cmp
mov
in
mov
dec
mov
mov
rcrl
out
jae
adc
hlt
lods
mov
in
cmp
arpl
add
xchg
pop
mov
adc
xor
mov
mov
xchg
shlb
add
mov
test
jno
aam
out
mov
dec
testb
and
or
mov
imul
dec
sub
aaa
add
repnz
and
inc
cmp
ss
jp
inc
aam
jae
pop
mov
pusha
mov
mov
movsl
je
cmp
cmc
jnp
xor
push
sti
mov
add
aam
cld
dec
xlat
xchg
iret
fldenv
cwtl
xchg
rcrl
jl
jns
dec
push
fiaddl
ss
filds
and
pusha
jo
jecxz
rcrb
idivb
cltd
popf
incl
sub
jp
pop
dec
cmp
xor
int3
imul
push
cs
jnp
mov
jle
sahf
lock
shlb
adc
gs
cs
out
pop
pop
jb
pop
stos
adc
mov
push
and
dec
jmp
mov
loopne,pn
inc
lods
and
mov
pop
sbb
icebp
cs
sub
add
pop
mov
shll
scas
push
dec
dec
or
add
jle
scas
ret
mov
jbe
fmuls
cmp
cltd
ret
fcomi
test
mov
mov
dec
gs
mov
xchg
inc
mov
inc
fsub
lahf
pop
pop
scas
push
lock
push
push
aaa
icebp
add
je
in
cmpsb
jns
mov
data16
xchg
ds
xchg
and
sahf
repnz
push
scas
cs
cltd
in
xor
lret
xchg
cmp
gs
mov
xor
lds
jp
aam
sub
hlt
popf
idivb
sbb
lock
adc
outsb
pop
inc
xor
lret
push
insb
je
add
cmp
cmpb
lret
sub
js
push
or
jae
into
mov
push
rcrb
sub
testb
or
pop
mov
xchg
jg
pop
xchg
shl
inc
ss
idivb
out
fldcw
jns
pop
imul
mov
leave
insl
adc
mov
outsl
pop
inc
stos
mov
popa
mov
pop
stos
pushf
lcall
push
mov
pop
jnp
push
cmpsl
out
daa
xor
fs
dec
jb
loopne
and
pop
popf
and
subb
mov
mov
mov
cs
jne
sub
gs
xchg
inc
pop
push
scas
std
xchg
cmpsb
xchg
test
sbb
xchg
cld
or
push
jbe
pop
mov
int3
pop
into
out
sbb
clc
inc
aam
mov
aad
jnp
add
sub
xchg
sbb
adc
lcall
rorl
lds
cmc
sbb
add
scas
pop
mov
aaa
mov
jle
cmp
pop
mov
negl
mov
dec
lcall
pop
jl
aad
imul
xchg
out
mov
jno
dec
jl
shlb
cmp
and
mov
pop
mov
jne
shrb
pop
sahf
ss
xor
and
pop
mov
sub
jmp
sub
shlb
es
mov
jns
sbb
mov
enter
mov
pop
mov
mov
das
cmp
cmp
lret
in
aas
adc
orl
icebp
xchg
popf
imul
mov
pop
add
fsubrl
shr
sbb
lret
cmpsb
inc
jo
add
jge
cwtl
test
stc
jne
movsb
je
dec
imulb
pushf
adc
xor
loopne
xchg
les
rol
sub
sbb
repz
mov
loop
add
sub
pushf
adc
lcall
jns
xor
fsts
test
mov
adc
cmpsb
call
cmpsb
mov
xchg
adcb
mov
sub
mov
inc
push
push
pusha
negb
jbe
xlat
ds
jns
add
mov
xor
out
mov
inc
or
push
cmp
pop
pop
lods
or
pop
lret
adc
dec
outsb
inc
nop
iret
cmc
pop
xchg
pop
sti
sub
rcr
adc
mov
xor
xchg
add
add
aad
inc
pop
cli
inc
mov
pop
aaa
mov
loopne
pop
xor
shll
pop
xor
inc
cmpsl
mov
fildl
xchg
xor
int3
mov
insl
movsb
in
or
call
sarb
lods
cld
negl
xchg
pop
fwait
leave
push
add
pop
xchg
pop
mov
test
fidivs
mov
ja
js
sub
dec
dec
icebp
mov
pop
pop
movsb
inc
jno
or
imulb
jb
cmp
mov
pop
cmp
inc
xchg
sbb
jmp
xor
lds
divb
cli
fwait
mov
imul
and
ficompl
aam
inc
nop
lds
dec
addr16
push
mov
cmc
jne
pop
cmp
cli
arpl
out
fldt
fucomip
icebp
jecxz
or
and
imul
jge
popa
jle
dec
incl
iret
dec
outsb
lods
roll
das
int
addr16
ds
out
lret
pop
aad
pusha
adc
stos
int
dec
pushf
in
into
jb
out
push
repz
out
jg
and
pop
push
xor
dec
cmp
mov
subb
dec
mov
cld
add
dec
mov
sub
xchg
ret
mov
xchg
lret
lcall
in
jne
lcall
popa
jge
hlt
add
je
pop
mov
push
push
and
in
je
or
jp
shlb
pop
or
and
mov
in
jge
negl
addr16
pop
popf
jl
xor
and
cwtl
add
inc
jnp
xor
xchg
xor
sbb
cld
and
scas
ds
push
dec
inc
outsl
ljmp
into
shlb
cmpl
ret
or
outsb
jl
push
out
andb
out
loopne
add
or
js
mov
xor
fcoml
iret
mov
divl
sahf
je
pop
sbb
add
in
daa
inc
jmp
pushf
cli
pop
jmp
in
test
ljmp
arpl
lret
add
mov
subl
lahf
cli
repnz
fwait
aas
mov
xor
cs
in
adc
imul
inc
aaa
call
rorb
push
loopne,pt
and
inc
ret
pop
jne
ss
mov
shll
aas
arpl
out
cmp
add
mull
sti
mov
lock
jnp
loopne
mov
pop
mov
ret
test
loope
shrb
loop
fwait
sub
cmp
ret
mov
xchg
push
and
push
mov
repz
mov
lea
cwtl
mov
int
jne
arpl
push
mov
mov
ficoml
mov
push
cmpsb
rolb
push
inc
addr16
push
gs
cmpsb
mov
push
insb
lret
movntps
mov
fbld
and
stos
popf
jle
xchg
sub
insl
push
in
in
cmp
mov
insb
test
enter
mov
and
pop
cmpsl
mov
push
aas
out
repz
pop
aaa
out
call
fwait
dec
mov
mov
je
es
repz
pop
xchg
mov
mov
aas
adc
mov
aas
dec
icebp
repnz
ret
cmp
stos
mov
lcall
iret
popf
std
divl
shll
fisubrl
addr16
mov
ret
cltd
dec
bnd
out
int
fs
jbe
lret
mull
sub
xor
push
mov
insb
popa
rorb
sub
add
jle
adc
idivb
cmpsl
loope
into
sub
adc
jno
popf
cwtl
dec
imul
mov
jge
jns
push
dec
jle
mov
mov
in
jb
test
push
icebp
pop
or
xor
xchg
mov
cs
lods
mov
out
sbb
hlt
insl
push
fisubl
mov
or
sbb
mov
mov
mov
repz
cmpsb
jnp
stc
fcmovu
sub
cs
pop
cmp
add
sub
mov
inc
mov
hlt
adc
cltd
jo
sub
hlt
or
dec
sbb
stc
das
sahf
jl
inc
hlt
dec
pop
into
sub
cltd
fbstp
push
sbb
cmp
pop
mov
push
pop
add
aas
inc
jp
xchg
ret
push
ret
push
dec
into
ljmp
cmp
fisubl
rcrb
clc
push
jmp
xchg
cltd
push
cld
gs
and
or
and
jo
out
mov
hlt
cmc
stos
mov
xor
and
movsl
mov
mov
rorl
push
lock
fwait
or
inc
or
lods
in
cmp
cmp
inc
test
xor
xchg
lret
adc
jg
int3
or
subb
imull
insb
mov
roll
pop
push
lods
sub
dec
out
jecxz
test
lock
or
test
add
xchg
mov
divb
dec
push
shlb
push
dec
adc
and
inc
ficompl
push
mov
stos
mov
div
sbb
out
test
out
mov
fildl
ds
call
fucomip
dec
pop
mov
mov
scas
aad
or
cmpsb
push
xor
jmp
cltd
std
rcll
mov
sub
sbb
setns
ss
hlt
mov
lods
mov
leave
sbb
xchg
das
cld
pop
das
test
push
fdivrs
mov
pop
push
inc
adc
jae
icebp
pop
cmpsl
jns
add
push
cmp
or
in
test
xor
sti
xorl
mov
push
dec
mov
jne
push
fdivrs
das
sub
push
cmp
ret
rcrl
out
xchg
repnz
divl
xlat
sub
loope
adc
enter
jne
loopne
mov
pop
imul
lods
jb
scas
mov
cmp
data16
xchg
fwait
out
pop
jne
xchg
test
shll
mov
fnstcw
push
mov
int3
out
inc
addr16
out
pop
xor
in
lret
inc
mov
imul
gs
mov
and
jns
or
adc
xchg
call
or
xchg
ljmp
pop
adc
mov
pop
loope
adc
cs
shrb
jbe
mov
loopne
jae
add
insb
xor
jno
push
inc
leave
int
outsb
push
dec
push
bound
xchg
pop
xlat
ret
out
cmp
mov
xor
out
loop
xchg
sub
iret
popf
jl
sub
or
fildl
les
lcall
pop
jns
pop
lods
push
repz
rorb
dec
out
adc
out
lods
dec
outsb
jge
pop
lods
arpl
push
gs
jmp
hlt
pop
mov
fwait
sub
xlat
loope
js
xchg
inc
inc
mov
mov
lret
lcall
xchg
pop
mov
addr16
inc
cmc
into
cmp
pop
inc
cmp
dec
daa
inc
mov
push
or
mov
inc
scas
les
dec
test
pusha
sub
dec
cvtps2pd
loopne
mov
std
xchg
inc
mov
sbb
pop
xor
add
imul
mov
mov
mov
mov
cs
cmp
pop
jnp
xchg
jnp
xor
cmpb
sbb
int
mov
clc
and
adc
sub
int
test
nop
jbe
out
fadds
hlt
fwait
hlt
test
iret
sbb
jnp
hlt
push
add
nop
cmpsl
test
stc
rcrl
bound
out
pop
mov
rorb
leave
fs
push
xchg
scas
decb
lcall
inc
mov
gs
cwtl
fadds
mov
dec
cmpsl
mov
pop
and
jns
lea
pop
xchg
mov
pop
in
jne
sbb
stos
decb
inc
lahf
ljmp
mov
lock
leave
mov
sahf
xor
jmp
imul
or
sbb
loopne
jmp
outsl
mov
test
mov
add
ja
and
std
stos
jns
inc
push
insl
push
mov
and
mov
and
lods
mov
push
leave
mov
pop
fdivs
dec
cli
or
dec
xchg
repnz
mov
add
lret
inc
popf
outsb
jns
fsubrs
cmp
movsb
jbe
lock
jnp
inc
or
add
adc
sarb
jmp
inc
sub
and
or
add
pop
pop
sub
es
mov
sbb
jmp
sahf
push
scas
push
pop
push
mov
sbb
and
out
hlt
shlb
add
test
jb
bound
mov
fistpll
add
xchg
jge
cmpsl
std
push
inc
sub
call
ret
inc
push
pop
add
jbe
loopne
in
leave
in
es
fisubrl
std
jns
ljmp
mov
dec
shl
ss
clc
dec
sbb
push
and
fwait
mov
test
mov
mov
sbb
or
adc
mov
cmc
leave
jnp
push
decb
push
cli
ret
addl
iret
lcall
les
cmovbe
out
pushf
sbb
cs
cmp
and
cmpsb
mov
aad
or
movsb
lods
test
addb
rorl
movsl
inc
lods
xor
ljmp
in
movsl
inc
jmp
cmp
rcll
out
or
negl
dec
sub
js
adc
or
rep
jg
test
ljmp
sbb
mov
mov
rclb
ror
adcl
mov
dec
sbb
ret
rcrl
adc
roll
dec
imul
adc
jg
outsb
dec
popa
mov
mov
in
and
insb
repnz
loop
pop
cmp
pusha
push
arpl
in
dec
shlb
stc
cmc
cmpsl
arpl
xor
in
sub
das
cld
mov
push
mov
mov
sbb
mov
pop
sbb
mov
push
enter
mov
arpl
mov
mov
adc
pop
sub
cmc
addr16
push
imul
mov
xchg
jno
popf
or
test
mov
dec
cmp
cmc
mov
stos
mov
into
fwait
cmp
mov
fistps
out
hlt
jne
lock
lcall
push
stos
sub
lcall
mov
fadds
icebp
int3
cltd
outsl
jb
addr16
roll
cmp
xchg
or
in
push
test
sub
aas
cwtl
adc
xchg
add
mov
test
ja
xor
push
xlat
push
fs
imul
outsb
ret
xchg
jmp
int3
hlt
xor
loop
mov
add
sub
add
in
or
and
push
stc
pop
jns
mov
sub
jne
jbe
fistl
mov
mov
das
enter
or
pop
add
test
pop
mov
roll
ss
mov
into
popa
xchg
cwtl
inc
iret
popf
sub
outsl
jno
pop
push
popa
aad
push
cmp
inc
and
pushf
fstps
or
gs
mov
movsl
cmp
sub
fwait
sub
lret
popa
sbbl
in
mov
push
mov
scas
pushl
dec
popa
pop
ds
jnp
leave
jno
mov
sti
aam
pop
add
out
out
jbe
pop
pop
in
aad
test
ljmp
aad
dec
clc
add
jb
repnz
xchg
inc
sbb
xchg
mov
inc
gs
pop
mov
lahf
sbb
xchg
xor
push
adc
cmpsl
jg
push
xchg
mov
jp
outsb
adc
jae
xor
dec
aad
push
aas
push
shll
pop
shl
shll
loopne
mov
and
sub
push
jbe
sub
pop
mov
ret
pop
dec
stos
out
outsl
mov
dec
xor
das
fistl
out
sbb
cmp
xor
pusha
sti
das
in
adc
inc
popa
call
mov
fldl
mov
std
out
fadd
mov
jmp
push
cmp
sarb
data16
mov
push
cmp
lea
inc
test
lock
cmc
enter
fists
add
sbb
test
arpl
into
pop
push
mov
call
pop
cwtl
pop
cs
pop
inc
dec
clc
xor
dec
jge
inc
push
cmp
in
popf
sbb
push
jb
fwait
and
jns
sbb
cmp
lret
mov
scas
xor
push
pop
jg
push
fldenv
dec
scas
in
jecxz
cli
sub
in
cmp
rcrl
out
adc
sarb
ja
cmovne
stc
andb
jne
jg
movsl
adc
repnz
es
fs
fcmovnu
clc
scas
jns
fucomp
xchg
int
mov
dec
aam
lret
or
mov
xor
mov
ret
push
out
dec
shll
mov
push
pop
lahf
in
jp
mull
mov
add
outsl
arpl
inc
add
mov
jne
dec
mov
test
sahf
mov
pop
push
xchg
hlt
or
pushf
sahf
into
int
push
inc
dec
subl
and
adc
mov
sbb
push
in
jp
jle
nop
out
pop
jp
rclb
push
or
fmull
push
fwait
jg
sbb
imul
es
or
movsl
mov
dec
pop
mov
repnz
and
loope
or
outsb
jbe
mov
test
in
ja
out
pop
xchg
sbb
cmovo
dec
push
add
xor
sub
mov
mov
je
movsl
inc
xor
je
fs
xor
add
fsts
popa
daa
cmp
stc
test
andb
adc
or
lret
xchg
movsl
stc
sbb
out
push
js
ljmp
icebp
jp
in
or
jb
shll
ss
jno
or
popa
es
and
xor
daa
push
mov
pop
inc
jle
cli
mov
push
jbe
gs
aaa
cmpb
add
cld
fadd
mov
sub
push
sub
and
repnz
cltd
inc
jecxz
orl
in
popf
push
xchg
imul
inc
out
jg
pop
mov
into
xchg
dec
je
outsl
scas
cmp
mov
inc
mov
xor
lods
pop
sbb
sbb
inc
pop
popf
push
mov
jle
test
xor
and
lea
fwait
or
scas
or
das
push
jmp
and
dec
mov
hlt
ja
insl
popl
xchg
jbe
ja
sbb
jge
inc
jb
dec
shr
mov
sbb
inc
divb
mov
popa
adc
pop
subb
stos
pop
enter
jno
addr16
rclb
ret
mov
aad
xchg
fsubl
cmc
ljmp
addr16
in
xchg
out
lret
out
push
xchg
ss
dec
pop
push
mov
push
mov
mov
mov
das
adc
cmpl
dec
test
mov
out
div
cmp
shr
dec
cld
popa
jns
cmpsl
movsb
mov
jmp
loope
add
mov
xchg
insl
mov
movsl
add
inc
stos
jle
pop
and
sub
jne
sarl
icebp
dec
xor
in
int3
out
push
repnz
sbb
jge
loopne
sbb
mov
cmp
push
pcmpeqd
mov
out
mov
add
scas
push
push
dec
mov
les
ss
xor
xchg
dec
sarl
cmp
pop
xchg
sub
fstps
push
or
rol
sub
nopl
cmp
in
or
mov
ret
xorl
add
mov
sub
dec
in
lock
and
ljmp
fdiv
fcmovnb
inc
mov
jl
jns
not
in
test
xlat
mov
sbb
jl
ljmp
mul
push
fwait
call
mov
call
pop
in
mov
dec
sub
jmp
aaa
push
inc
and
loop
ja
cltd
and
xlat
mov
loop
push
jmp
out
fs
hlt
jp
push
repnz
hlt
idiv
pop
cmp
mov
movsl
mov
push
xchg
cmp
mov
jmp
xor
add
enter
or
jmp
mov
push
cltd
jne,pt
jle
lcall
jecxz
xchg
sub
rorl
xchg
es
xchg
mov
lds
mov
xchg
dec
cld
dec
fmull
sub
lods
pop
xlat
jne
xchg
int
jae
cmp
mov
mov
nop
pop
movsb
sbb
mov
mulb
pop
into
cs
adc
sbb
and
xorl
fldt
data16
icebp
cltd
inc
and
dec
mov
loope
data16
mov
dec
push
pop
push
cmp
mov
test
ss
fildll
cmp
inc
jbe
icebp
ljmp
and
jmp
fmul
aam
call
stc
sbb
fistps
mov
jle
mov
sbb
rcrl
jecxz
xor
mov
mov
mov
jl
push
push
xchg
ss
rcrb
xchg
faddl
rcr
mov
ficompl
mov
movsb
mov
movsb
mov
test
push
shlb
mov
sbb
jle
jnp
adc
mov
shlb
xchg
xchg
dec
cmpsb
jnp
pop
test
movsb
in
mov
pushf
xor
inc
jb
fldl
loop
mov
iret
cwtl
cmp
insl
inc
jecxz
cmp
and
pushf
mov
jb
jecxz
adc
movsb
popf
mov
inc
inc
ret
cmpl
and
imul
fcmovnu
lret
cli
lcall
imul
shrl
push
cwtl
aaa
dec
sbb
jo
sub
inc
jbe
sub
shrb
sbb
mov
lods
mov
pusha
repnz
push
in
outsb
and
call
add
rcll
adcl
add
xor
dec
add
rol
insl
pop
sub
mov
rcl
lcall
xor
add
mov
push
jg
adc
xchg
stc
pop
lahf
lods
xor
lock
jno
cs
or
jge
dec
add
xchg
ret
sarl
fnstenv
out
sbb
nop
inc
lds
pop
jnp
push
out
push
sbb
inc
push
testb
scas
pushf
hlt
lea
sub
cmc
push
xchg
mov
adc
xor
lahf
jb
lods
sti
sbb
les
add
cmp
xor
or
fldl
xorb
xchg
call
add
adc
les
data16
mov
sbb
notb
or
jp
pop
xchg
cmpsb
xchg
cmc
xchg
popa
andb
cltd
es
std
jo
push
pop
dec
incl
movsb
roll
jb
cwtl
mov
fcomip
stc
stos
sahf
sti
add
pop
or
js
pushf
stos
mov
in
push
popa
je
test
jmp
dec
pop
pop
or
movsb
mov
cltd
aas
out
inc
ret
dec
sbb
inc
xchg
cmp
sbb
lea
jne
inc
mov
pop
iret
dec
call
outsl
xchg
movsb
mov
movsl
pop
inc
in
lea
mov
or
ret
gs
cmpsb
fs
imul
mov
nop
mov
xor
adc
movsl
xorl
mov
out
in
push
les
icebp
or
adc
lahf
push
mov
pushf
mov
cmp
and
cmp
fadd
dec
fadd
push
mov
jb
cltd
push
and
jle
add
mov
sti
sbb
cmc
addl
add
xchg
out
mov
test
add
mov
movsb
sub
call
inc
int3
push
or
add
dec
movsb
inc
mov
lcall
inc
cmp
fs
js
das
sbb
add
subb
outsl
cld
in
ja
ret
push
repnz
lods
sbb
ja
add
mov
pop
cmc
xor
jo
aas
push
inc
push
cli
jno
push
pushf
cmpl
std
nop
pusha
out
adc
sbb
andb
cmp
dec
push
int
lods
adc
sub
push
lcall
and
mov
ret
aas
inc
pop
inc
mov
scas
push
push
fwait
aaa
es
hlt
adc
out
inc
test
testl
into
je
rcrb
jo
scas
jp
xor
mov
cmp
sti
out
lcall
jne
pop
sub
shrl
xchg
aaa
inc
ss
cmpsl
int3
pop
mov
mov
pcmpgtd
fnstenv
pushf
fs
clc
shrw
xor
popf
cld
bound
inc
imul
mov
dec
xchg
pop
inc
add
subb
mov
cmp
stc
pop
std
aad
sahf
in
cltd
into
aas
inc
mov
pop
sbb
mov
out
adc
add
push
test
push
inc
jle
sahf
mov
push
ret
cs
xlat
std
mov
jge
cmp
addr16
mov
repnz
ret
mov
mov
insl
pop
xor
mov
push
outsb
push
cmc
imul
push
dec
push
jb
dec
add
pop
inc
insl
icebp
mov
mull
nop
stc
push
inc
ja
je
sbb
dec
jge
hlt
ret
adc
push
add
lcall
inc
mov
flds
push
sub
sarb
fimull
mov
mov
mov
cmp
pushf
xchg
insb
mov
lahf
cmpl
mov
ret
psllw
add
lds
xor
enter
das
bound
shlb
xor
sub
add
test
out
gs
aad
pop
cltd
pop
std
pop
xorl
insb
xchg
or
or
ljmp
dec
jno
test
cmp
in
lret
mov
sbb
sahf
movsl
fsubrl
sbb
and
sbb
mov
push
or
adc
xchg
addr16
cmc
lret
adc
test
adc
adc
mov
xchg
xchg
mov
sub
dec
lcall
cltd
jbe
jecxz
stc
pop
sbb
cmp
push
mov
movsl
xchg
loop
sub
and
sahf
mov
sub
stos
les
cmp
or
sbb
mov
xor
add
push
xchg
mov
jbe
out
out
lea
lds
pop
ret
dec
push
lret
stos
dec
int
mov
stc
and
daa
mov
mov
jp
addr16
fwait
loopne
sub
std
in
adc
fbstp
hlt
and
or
sbb
mul
xor
jle
lock
push
out
repnz
jo
cld
xor
in
add
lock
sar
xchg
mull
in
mov
and
cmc
paddw
in
xchg
and
pop
hlt
cmp
sbb
lea
movsb
xor
push
xor
mov
adc
outsb
pushf
xor
loopne
sbb
pop
scas
adc
mov
sbb
adc
shr
dec
mov
mov
test
fiadds
rclb
jl
loope
lcall
mov
cmp
dec
or
pusha
sbb
cmpsl
test
and
iret
inc
xchg
jle
lea
or
mov
cli
dec
popf
or
lds
push
xchg
mov
and
adc
out
ja
into
mov
cld
arpl
sbb
scas
out
add
out
pop
cmp
mov
pop
stos
push
imul
xchg
xchg
adcb
mov
cltd
fcomp
push
dec
sti
pop
sbb
push
add
mov
pop
inc
lcall
and
and
cltd
sub
pusha
int
imul
xchg
and
add
push
sbb
leave
and
add
dec
sbb
push
icebp
add
test
loope
push
icebp
add
in
movsb
sub
popa
rorb
fldcw
push
push
mov
arpl
divl
insl
mov
cmp
dec
add
or
sub
test
mov
enter
scas
fsubr
insl
int3
int
pop
scas
push
fbld
data16
mov
jmp
pusha
mov
aad
gs
or
rcrb
push
test
nop
pop
and
mov
enter
jne
nop
cmc
pushf
or
aad
stc
fisubs
dec
stc
xchg
les
cmp
fdivp
pop
lcall
bnd
icebp
sub
popf
ret
cmp
sbb
add
fsubrs
sahf
mov
push
add
pop
add
or
int3
dec
lods
std
addr16
push
add
ja
or
in
je
push
xchg
push
lahf
test
shrb
jne
sub
mov
add
xchg
mov
decb
jmp
mov
nop
int3
xchg
divb
cmp
jbe
out
insl
mov
mov
and
js
pop
xchg
xor
rcr
inc
test
rcrb
add
inc
jge
cmp
mov
test
cmpsb
arpl
and
add
inc
dec
sbb
movsl
ficoml
frstor
xor
xlat
jne
cmp
add
jno
inc
daa
sahf
ret
test
aam
jae
push
out
jns
push
mov
and
or
stos
pop
xchg
xchg
clc
out
add
stos
pushf
fmuls
lock
lods
call
lret
sbbl
pushf
lret
jnp
mov
sub
mov
mov
call
cli
mov
add
push
mov
fnstcw
aad
shll
mov
cmp
lock
fsub
lds
clc
add
cld
scas
mov
jmp
stos
std
cmpsb
cwtl
cmp
test
stos
call
insl
ds
fistpll
fcmovnb
inc
xchg
int3
mov
cmp
xlat
add
dec
xchg
jno
push
jle
fnsave
rcrb
inc
in
xor
aam
adc
lret
and
int3
inc
jmp
mov
cmp
xchg
inc
stc
jecxz
daa
add
jo
mov
sbb
sub
push
inc
out
push
sbb
out
pop
xchg
xor
repz
add
xor
es
loopne
inc
into
loop
fistps
repnz
cmp
mov
add
mov
mov
out
lods
sub
inc
jb
pusha
add
ret
dec
sarl
mov
inc
dec
daa
xchg
pop
in
in
call
mov
or
add
mov
pushf
adc
jg
jmp
xchg
add
test
popf
xor
mov
push
adc
enter
sahf
xlat
mov
enter
je
das
cmpsb
fsubs
outsb
jae
test
mov
xchg
sbb
stos
int
pop
cwtl
scas
lcall
stc
ror
xchg
pop
pop
jbe
sub
adc
stos
push
mov
pop
mov
xor
shlb
and
in
inc
inc
std
aaa
pop
std
adc
lahf
cmc
pop
cltd
inc
out
sbb
xchg
jle
mov
inc
jl
into
cmp
movsb
mov
aam
xorb
ljmp
push
lods
mov
lahf
lea
pop
mov
add
pop
jbe
or
dec
frndint
and
jo
jmp
mov
adc
imul
sbb
fbstp
sahf
in
cs
scas
pop
sbb
clc
fwait
mov
jg
mov
add
mov
icebp
insb
xor
mov
out
sarl
sahf
or
mov
fistps
test
xor
lcall
shll
addl
and
jns
inc
icebp
imul
imul
jle
mov
test
or
fstpt
mov
mov
sbb
loop
cmp
dec
mov
inc
sbb
mov
cmp
sub
xorb
mov
jbe
outsb
xchg
in
mov
xor
imul
mov
enter
or
adc
inc
xorb
xchg
je
popa
xchg
test
les
test
mov
or
mov
or
mov
popf
lcall
in
add
mov
loope
enter
mov
clc
shrl
xchg
sbb
stc
test
out
xchg
jmp
pusha
popf
or
lret
js
inc
sti
add
mov
in
pop
int
ljmp
gs
dec
dec
or
and
and
out
fmuls
jmp
roll
loopne
mov
in
imul
inc
adc
pop
pop
inc
clc
jae
lret
shrb
sub
pushf
fdivs
adc
sarl
cmc
jns
in
popl
xor
mov
sti
dec
sub
sbb
std
xor
jno
out
ss
fmull
mov
cmp
call
inc
and
sub
push
imul
xor
push
js
negb
or
popl
adc
jl
popf
push
negl
sbb
cld
stc
sbb
xor
mov
stc
jl
incb
movsl
idivl
add
fiadds
pop
out
adc
dec
inc
enter
adc
mov
xor
add
call
mov
daa
roll
mov
sbbb
cmc
dec
popf
repnz
ret
jmp
inc
sbb
mov
xchg
aad
mov
imul
mov
add
xchg
imul
jmp
dec
mov
stos
mov
js
iret
fwait
das
or
mov
mov
movsb
ljmp
xor
mov
dec
outsb
in
hlt
mov
inc
sahf
int3
xor
and
inc
fdivrl
cmp
fwait
xor
sub
dec
dec
loop
jnp
into
int
stos
addr16
jne
jg
sbb
jns
cmp
pop
stc
mov
and
and
pop
push
imul
xor
mov
jmp
cltd
push
icebp
xchg
xchg
sbb
imull
sbb
cwtl
sti
mov
pop
cmp
fimull
je
fsubrs
cmp
pop
cli
repnz
loopne
adc
add
hlt
xchg
mov
mov
lcall
inc
cld
sub
push
stc
cmp
mov
or
jns
leave
test
add
sbb
add
lods
xchg
gs
mov
pop
ret
xchg
inc
sahf
cmpb
repz
sub
and
push
cld
aas
outsl
call
or
mov
inc
aam
cmp
clc
pop
pop
sbb
push
jmp
xchg
loopne
cmp
inc
rorb
fldln2
shll
xchg
xchg
pop
fildll
xorb
and
fsub
mov
loop
jae
xchg
lds
pusha
fimuls
mov
cmp
sbb
int
inc
pusha
test
mov
imul
and
push
cmp
cmp
fcom
out
mov
movsb
mov
sbb
imul
jnp
or
or
out
adc
add
lcall
ret
push
cmpsl
fdivl
jg
jns
mov
inc
push
ds
loopne
shrl
cli
subl
fs
in
cmp
daa
push
jno
jno
fcmovu
pop
ja
cld
cmp
orb
mov
and
adc
imul
sbb
mov
lahf
lock
cld
push
leave
popf
inc
mov
push
loop
outsl
xor
jo
xchg
gs
inc
pop
test
icebp
shlb
lea
nop
mov
push
std
mov
int
daa
push
sub
lock
mov
jnp
push
int3
xor
in
out
repnz
mov
jb
pop
inc
sti
f2xm1
bound
pop
lret
add
out
mov
div
inc
xlat
leave
push
cld
add
xchg
mov
test
mov
dec
sub
aaa
mov
inc
push
sub
fwait
loopne
cli
mov
in
movb
push
rcll
ljmp
xchg
adc
add
filds
out
in
nop
cmp
or
and
sub
jle
popf
sbb
aam
sub
pop
push
sub
sarb
mov
jns
stc
mov
sub
jl
pop
mov
cmp
jno
mov
xor
cmovs
or
fiaddl
pop
jne
jg
scas
cmp
js
aad
lahf
bound
movsl
mov
sub
insl
int3
xchg
shlb
or
in
jmp
push
push
shlb
out
inc
aaa
fwait
and
aam
and
sarl
aam
ret
test
or
call
pop
movsl
adc
mov
mov
mov
xchg
lret
mov
mov
jge
xchg
and
push
pop
loop
push
rorl
xchg
mov
xor
repnz
mov
cmpsl
adc
adc
mov
adc
into
in
lcall
jno
and
popf
push
xor
mov
in
pop
mov
loopne
insl
push
ret
andb
adc
orl
add
jge
or
es
repz
jle
cmp
and
test
jnp
in
jno
add
push
xor
jmpw
imul
std
cmp
mov
daa
sub
pop
push
jge
shrl
call
cmpsl
dec
dec
insl
ds
push
dec
sbb
or
jge
lods
addr16
push
mov
or
mov
dec
mov
sub
in
outsl
mov
dec
cmc
scas
xchg
mov
in
daa
out
sbb
adc
icebp
mov
rcrb
repnz
jb
sbb
fwait
push
mov
xor
lods
mul
rorl
dec
sub
jno
push
pushf
lret
hlt
ret
lret
inc
fwait
dec
sahf
fwait
xchg
cmp
loope
dec
inc
or
xchg
dec
push
cmp
pop
fimull
fwait
data16
aam
cmp
cld
mov
cltd
fcomip
hlt
shll
fimuls
push
fsubs
jnp
sbb
scas
jle
psraw
xor
inc
test
ds
cmp
add
mov
mov
stos
pop
xchg
adc
jo
push
cmpsb
int
imul
pusha
mov
adc
xchg
sbb
pop
mov
leave
sub
ja
cmpsb
push
fwait
sti
push
sbb
and
pop
std
pushf
imul
adc
nop
test
dec
mov
shll
mov
pop
push
je
ret
pop
mov
pusha
test
xor
adc
or
imul
fnstsw
dec
pop
and
push
out
lcall
mov
dec
xchg
cmp
and
pop
and
mov
mov
outsl
sar
outsb
addr16
mov
je
stos
stos
jmp
and
je
mov
test
es
dec
or
movsb
int
repz
push
outsl
or
push
ja
dec
adc
lret
stos
inc
add
mov
add
add
cltd
leave
and
or
and
push
pop
popa
test
inc
inc
mov
aaa
jle
repz
add
jae
incl
repnz
mov
in
fimuls
imul
std
adc
pop
inc
divb
jle
jbe
xchg
inc
movsl
pop
test
dec
lds
jl
jo
push
ret
or
lret
test
or
lock
in
inc
movd
aad
gs
ficomps
mov
inc
sub
jae
xchg
stc
rcl
stc
pop
jle
scas
inc
inc
jecxz
fidivl
rcl
movsb
out
jbe
jno
ds
out
dec
rcl
nop
cmc
loope
adc
mov
inc
mov
xor
decb
or
add
call
push
adc
mov
pusha
in
lret
pop
das
les
imul
je
pop
xchg
sbb
adc
lods
cmp
sub
mov
pushf
clc
xchg
jns
dec
inc
mov
addb
xor
popa
jge
mov
pop
rcr
and
shrb
mov
es
es
cltd
mov
push
push
ljmp
jne
ret
lods
sub
cli
and
dec
bound
mov
lods
filds
adc
jns
cs
sbb
ss
loope
fisubrs
push
daa
jbe
cmpsl
adc
xlat
jbe
movsb
shl
jp
pop
cltd
cmp
out
xchg
or
jl
lret
pushf
movsb
pop
rol
mov
adc
push
xchg
xor
sar
addb
ljmp
arpl
pop
test
xchg
movsb
jle
push
sbb
int
scas
jl
shlb
inc
cmp
add
loopne
outsl
sahf
jne
cli
xor
inc
sbb
xchg
sti
sbb
dec
pop
out
mov
jnp
jl
or
lcall
and
sub
xchg
fdivs
mov
sbb
jmp
cmp
test
add
pushf
adc
popa
jle
movsl
xor
mov
repz
mov
xor
shl
mov
loope
dec
mov
bnd
scas
test
push
mov
aas
popa
movsb
pop
jmp
jbe
push
enter
stos
gs
stos
pop
out
jl
push
les
frstor
xchg
push
jmp
xor
mov
nop
lahf
or
cmp
out
sti
inc
jbe
cltd
sbbl
leave
dec
mov
push
and
insb
out
movb
ljmp
loope
sti
and
loopne
popa
fldenv
xor
into
adc
dec
stos
jb
jmp
xor
adc
push
jbe
jge
inc
cs
push
dec
or
jno
cmpsl
dec
sub
mov
jp
es
inc
int3
fs
mov
lea
stos
nop
sbb
sbb
stc
jnp
and
les
lret
int
push
icebp
xchg
pop
stos
loopne
fmuls
and
bnd
in
add
test
test
out
das
cmp
jg
je
sahf
daa
xchg
dec
cltd
cmp
imul
and
je
in
sub
loope
fwait
push
or
pop
adc
fisubrl
sub
dec
adc
add
jmp
sbb
push
inc
flds
mov
loop
pusha
cld
mov
int3
xor
cmp
sub
shlb
lret
push
mov
fs
mov
mov
enter
int3
rolb
enter
leave
bound
mov
imul
ss
or
fisttpl
stos
insl
inc
pop
mov
je
movsb
mov
cs
fists
xlat
xor
out
out
push
bound
inc
push
lcall
int
repnz
mov
adc
aaa
lock
lret
add
dec
push
mov
mov
mov
jno
mov
jle
mov
xchg
pushf
mov
in
sub
aaa
dec
dec
and
and
adc
call
divb
scas
adc
mov
dec
xlat
test
cmp
mov
ljmp
dec
daa
mov
scas
mov
lahf
jmp
movsl
orl
fadds
cmp
movsb
mov
call
inc
cmpl
push
in
clc
push
sahf
in
cmp
mov
out
mov
dec
test
jne
pop
mov
lds
xorl
lcall
and
cmp
push
xor
orb
cmpsb
jecxz
cmpsl
nop
jnp
cmp
mov
decl
sbb
stos
pushf
inc
sub
or
sbb
stos
dec
arpl
imul
gs
jmp
and
xchg
xchg
mov
or
add
cmpsb
dec
mov
cmp
repnz
je
sub
fadds
js
shlb
cmpsl
leave
adc
xchg
xor
cmp
lds
cmp
mov
sub
inc
dec
mov
and
and
push
push
adc
call
and
sbb
mov
sub
xlat
dec
gs
pop
cmp
shlb
push
xorl
mov
ss
add
xchg
push
js
shrb
push
imul
mov
sbb
call
in
adc
or
inc
pop
loopne
inc
mov
xchg
jae
cltd
and
lods
mov
push
jb
loope
pop
repz
movb
jp
std
jmp
inc
mov
lret
sti
test
js
mov
test
sub
aaa
jo
popf
sbb
fwait
popw
or
shlb
push
adc
out
jne
fwait
xchg
les
mov
aad
lods
and
push
add
jbe
repz
jns
mov
es
pop
cltd
int
pop
lods
out
and
cmp
and
sub
jmp
inc
jo
sbb
in
mov
mov
rcll
cvtpi2ps
push
jg
and
xchg
test
notl
sahf
mov
popa
ret
mov
sahf
dec
inc
push
push
mov
pop
ret
jge
lret
pusha
dec
cwtl
movsw
int3
aas
fs
iret
sbb
in
outsb
adc
repz
das
jno
imul
inc
inc
xchg
add
repz
cmp
inc
sub
lods
push
aam
jnp
or
cmpsl
imul
fadds
xchg
arpl
cmp
mov
lea
je
les
repnz
mov
mov
insb
pop
call
in
xor
ljmp
push
inc
inc
clc
movsl
xor
lods
xor
mov
pop
test
jbe
xchg
mov
mov
jno
and
push
insb
xchg
jbe
push
lods
hlt
loope
testl
sti
and
lret
mov
imul
pop
jp
loopne
jbe
xchg
mov
ds
das
loopne
ret
or
push
test
fwait
xchg
dec
pop
gs
test
xchg
lods
xchg
dec
mov
pushf
mov
out
out
mov
daa
rep
push
outsl
pop
jbe
and
cmc
mov
xchg
mov
or
je
cmp
mov
sub
and
dec
loope
jge
xchg
jle
adc
xor
mov
fmuls
mov
loopne
inc
jnp
xor
push
icebp
pop
sbb
lds
out
add
and
js
pop
mov
sub
int3
jecxz
jle
xchg
and
jae
pop
dec
adc
out
iret
mov
jp
imul
fadds
sbb
sbb
ret
mov
sub
xor
cli
sub
jle
or
push
xor
add
mov
loope
test
jns
bound
adc
jnp
sti
into
pop
jg
ja
movsl
clc
jne
test
xchg
out
add
and
cmp
cs
xchg
or
hlt
xrelease
mov
sub
inc
imul
loope
cld
aaa
xor
jb
call
scas
xor
lods
fcoml
pop
and
sub
and
mov
in
leave
insb
xor
xlat
fldenv
xchg
xchg
push
and
call
jl
xchg
pop
mov
out
mov
and
or
cld
xchg
xchg
cwtl
lret
jno
scas
out
outsl
sbb
cld
sub
loop
sti
into
jmp
fmulp
mov
dec
fldl
ds
leave
lods
add
fdivl
push
ljmp
xor
lea
dec
dec
cli
xchg
xchg
or
add
jmp
sub
shlb
shlb
jmp
out
stos
das
sbb
out
lds
int3
mov
mov
push
inc
mov
hlt
jne
or
add
lcall
loope
loope
fdivs
push
jne
cmp
sahf
hlt
inc
sbb
pop
sub
sbb
push
xlat
jg
jbe
loope
ss
push
mov
repnz
xor
dec
or
ficomps
test
xchg
fs
push
adc
das
dec
mov
push
sahf
or
jp
pop
add
pop
add
aas
push
out
cmp
fnstsw
test
decb
xor
jae
loopne
fistpll
jl
mov
aam
ret
jmp
dec
popf
outsb
cmp
and
sub
inc
or
adc
mov
jp
ret
jo
xor
mov
mov
fsts
test
pushf
sbb
xchg
xor
pop
xor
test
popf
fists
mov
xor
xor
pushf
and
dec
ror
or
andl
xor
dec
out
nop
ja
cli
dec
loop
adc
or
push
mov
cltd
pop
lea
and
sub
iret
sahf
test
lea
test
sarb
pop
sub
test
sbb
stos
cmpl
mov
shrl
pop
mov
fsts
lds
sbb
ljmp
imul
cmc
lahf
and
and
sub
shll
sbb
ja
addr16
test
mov
jo
jp
push
nop
addr16
in
jp
jae
inc
push
test
adc
pop
fstpt
lea
push
cmp
mov
jge
std
inc
or
rolb
or
jmp
ret
pushf
call
inc
aas
insb
fdivrl
pop
ss
xchg
cmp
loopne
jb
icebp
mov
cmp
add
adc
fisubrl
fnsave
jg
xchg
push
mov
int3
les
cmc
pop
stc
or
lods
xchg
mov
push
jmp
imul
popa
mov
dec
repz
rcrb
and
stc
repnz
push
adc
std
sbb
scas
xchg
inc
out
dec
mov
unpcklps
call
pop
mov
adc
out
pop
into
out
out
and
notb
sub
in
and
mov
lods
xchg
cwtl
inc
int3
test
icebp
inc
push
dec
pop
adc
cmpsb
sbb
stc
jno
jg
mov
push
test
push
movsb
adc
int
insl
xchg
jb
push
daa
sub
xor
rcll
mov
mov
fldpi
clc
pusha
inc
ja
fcoml
xor
ret
fwait
xor
inc
push
xchg
jb
clc
ljmp
add
test
imulb
imul
jnp
or
pushf
lret
frstor
stos
pop
int3
mov
int
adc
lds
inc
js
insb
es
imul
lock
push
adc
ja
rorb
fdivrl
jo
jb
xor
out
xchg
or
daa
dec
mov
or
nop
faddl
xorb
cs
cwtl
jb
sbb
in
ds
sti
jecxz
sub
sub
add
mov
xchg
cltd
aad
mulb
mov
jb
or
xor
clc
pop
xchg
flds
push
mov
inc
cmp
sbb
mov
mov
rcr
adc
pop
add
in
xor
in
int
pop
xchg
adc
ret
xchg
hlt
out
std
push
mov
dec
dec
lret
pop
fiadds
inc
icebp
adcl
push
cmp
cmp
mov
push
mov
cmp
add
jmp
xor
sbb
push
icebp
adc
in
out
mov
mov
cmp
mov
push
pop
lret
push
lcall
andb
inc
int
hlt
jne
jg
mov
sub
xchg
mov
aad
mov
inc
mov
shrb
in
add
add
xor
lock
fnstsw
pop
popf
ficompl
lret
loopne
jo
mov
pusha
gs
psubusb
adc
xor
movsl
cwtl
mov
lods
xchg
cmp
mov
jo
sahf
xor
pop
pop
pop
pop
js
movsb
jae
orb
je
icebp
fnstenv
add
mov
xor
and
add
and
mov
adc
and
ss
lock
in
sub
cmc
ja
daa
mov
adc
loope
pop
into
es
mov
xchg
add
and
sti
xchg
jmp
data16
sbb
in
enter
fcompl
imul
add
or
adc
push
shll
sbb
stos
mov
sbb
xchg
daa
inc
mov
idivb
pop
mov
jno
in
pusha
shll
fadd
sbb
mov
mov
inc
lock
inc
xchg
and
xor
or
cmpsb
mov
xchg
loope
clc
rorb
addr16
repz
repnz
add
pusha
sub
pop
cmpsl
mov
pop
or
aam
dec
lcall
pusha
fcomi
push
jbe
enter
pop
dec
out
push
std
push
movsl
push
inc
add
sub
dec
ret
jl
add
mov
ret
pop
mov
xorl
xchg
imul
pop
jnp
pop
add
and
pop
inc
je
les
in
mov
test
out
mulb
adc
les
popf
push
dec
test
in
call
cmpsl
rol
push
ljmp
adc
out
cs
repz
xchg
adc
cwtl
orb
scas
push
sahf
push
adc
insl
les
sub
adc
loopne
pop
aaa
push
lcall
dec
in
ljmp
pusha
loope
decl
jns
sub
or
jae
dec
sbb
repz
jl
push
popf
mov
stos
movsl
sbb
jbe
mov
int
mov
cmp
lock
adc
sub
shll
inc
cli
sbbb
or
push
xchg
mov
push
jnp
adc
imul
ret
pop
test
mov
jnp
push
lock
andb
xchg
in
aaa
sub
cmp
jle
imul
insb
adc
in
imul
test
xor
rcrl
stos
fs
pop
add
cmp
mov
adc
mov
mov
push
rclb
xlat
scas
inc
push
xchg
insb
repnz
push
into
out
cld
rcrl
cmp
sarl
int3
adc
add
xchg
mov
mov
adcb
cmpsb
lret
and
test
xor
movsl
leave
jecxz
lods
inc
cmp
les
ficoml
push
jne
sbb
mov
and
and
rorb
sub
sub
xor
test
push
adc
test
mov
mov
fadds
mov
iret
les
dec
sbb
sub
cmp
push
mov
es
cmp
fdivrl
cs
addl
dec
dec
jle
jnp
mov
sti
sub
stos
add
and
sbb
cmpl
jmp
sub
nop
pop
mov
cmp
fnstsw
push
imul
ljmp
out
stos
xchg
idivl
ret
mov
iret
sbb
push
jge
roll
pop
mov
in
cltd
int
push
xor
cmpsl
pop
inc
aad
test
xor
mov
mov
mov
in
es
pop
push
ret
inc
sbb
xor
xchg
lods
into
push
cmpsl
fidivl
roll
in
out
mov
das
jg
test
in
mov
stc
cs
stos
stos
mov
inc
inc
mov
inc
lcall
cmp
xor
inc
push
aaa
cmp
pop
adc
jl
or
xlat
repz
inc
cmp
movsl
int3
in
pop
jb
daa
push
mov
add
notl
pop
fcoml
lods
and
lcall
jns
mov
or
sti
pop
add
pop
aas
mov
and
stc
jae
pop
cmpsb
in
mov
push
loop
xor
bound
xchg
test
mov
js
mov
push
inc
push
jp
lods
sarb
push
pop
lock
mov
pop
rep
mov
fcompp
xlat
sbb
divl
or
jp
lock
test
sbb
cli
pop
sbb
xchg
jae
das
pop
out
sbb
movsbl
cmp
mov
jecxz
cmp
xor
sbb
xchg
and
shll
cs
mov
pop
cmpb
and
lock
xorl
push
inc
insl
rcll
push
add
cmp
inc
and
or
sbb
xor
mov
mov
mov
mov
ss
fimull
call
mov
in
dec
jnp
pushf
pusha
pop
push
pop
mov
mov
sbb
dec
mov
movl
lahf
sub
jge
push
cmpsl
xchg
mov
int3
cmp
sahf
aas
and
push
mov
rcr
mov
add
inc
sete
in
jmp
shrl
sub
mov
push
orb
outsb
pop
sbb
hlt
sti
lds
inc
dec
sub
xchg
in
sub
lods
ja
stos
push
cltd
ror
imul
stc
sbb
xchg
jae
or
xchg
push
xchg
and
shll
mov
mov
movsl
loop
jns
ret
iret
and
sbb
jo
add
mov
dec
and
fnstcw
inc
dec
int
dec
add
inc
sahf
fnstenv
stc
push
jecxz
adc
inc
dec
pop
ss
test
enter
lcall
xchg
subb
push
jecxz
test
xchg
ret
and
fstps
xor
pop
adc
in
jae
jnp
aam
das
test
repnz
popf
clc
jns
dec
cltd
pusha
sub
sahf
xor
ja
les
cmpsl
std
add
lds
stos
mov
fst
shl
clc
aad
sub
cmc
mov
xor
outsl
add
lahf
dec
dec
and
mov
je
inc
sbbl
mov
and
test
sbb
xchg
add
and
mov
loopne
dec
dec
cld
pop
lahf
push
jmp
aad
in
fwait
and
mov
jg
push
fldcw
push
jmp
xchg
outsl
int3
sub
test
jns
test
stos
add
mov
xlat
jl
out
sarl
and
mov
sti
adc
pop
rolb
jecxz
pop
bound
xor
sub
fidivl
dec
xchg
dec
mov
shll
inc
mov
lock
out
jbe
inc
lods
mov
popf
mov
pop
and
xchg
lahf
push
mov
push
movsb
xlat
sub
dec
mov
sbb
popa
imul
aas
inc
movsl
xchg
ret
sbb
ds
cmp
xchg
cmpsb
aas
xchg
cmp
xor
repnz
cld
mov
lcall
push
nop
mov
push
les
mov
mov
lcall
test
popa
add
nop
fld
xor
dec
insl
cmp
out
mov
pop
inc
test
dec
daa
add
es
adc
mov
and
xor
pop
in
ret
xchg
inc
jmp
sbb
sbb
nop
fldcw
jbe
adc
xchg
or
adc
fdivs
mov
iret
push
sbb
mov
push
int
int
or
pop
std
call
xlat
imul
loope
arpl
cs
xchg
fs
xlat
scas
cmpl
xchg
push
repz
mov
pop
jmp
test
jbe
std
add
jl
fdivl
lock
decl
mov
lret
rolb
mov
lock
jne
rcll
cmc
adc
in
dec
out
mov
dec
cmc
mov
inc
and
and
adc
ret
outsl
dec
xor
sub
aad
stos
or
divl
sbb
jmp
imul
aad
push
lret
imul
or
cli
fistl
sbb
pop
add
ret
test
inc
test
xchg
ret
dec
lcall
mov
inc
add
adc
or
repz
test
jl
outsb
mov
outsb
sbb
mov
push
movsb
shll
or
mov
insb
aad
int
add
mov
cltd
test
xor
movsb
inc
vmovdqa
out
sub
leave
adc
jns
enter
lahf
daa
repz
mov
jns
xchg
jmp
sub
lea
sub
das
sub
fisubl
addr16
test
cmp
dec
sub
jne
adc
mov
mov
xchg
mov
xlat
nop
push
enter
test
push
test
jmp
xor
or
loop
xor
sbb
add
mov
jbe
push
jae
dec
pop
bnd
fs
ss
pop
sarl
and
mov
out
jmp
xchg
jae
pop
cmpsb
push
sub
jnp
iret
pop
loopne
mov
bound
repnz
mov
in
fsubrl
bound
out
push
jns
ficomps
std
mov
loopne
or
test
add
push
int3
repz
fwait
stos
xchg
push
xchg
mov
addr16
dec
mov
sub
push
inc
sbb
push
mov
sub
stc
push
xchg
lahf
or
inc
mov
fisttpl
std
je
test
jo
sti
hlt
loop
sub
mov
cmp
and
sub
jle
mov
push
sub
gs
xchg
sbb
sub
mov
lds
inc
mov
add
mov
pop
mov
xchg
nop
jmp
xor
ret
mov
sarb
add
das
xor
jge
ljmp
pop
int3
jns
loop
stos
aas
shlb
fnsave
xchg
pop
data16
ss
push
in
inc
xor
repz
gs
incb
sub
xor
insl
dec
imul
inc
inc
cwtd
adc
push
sarb
cli
loope
xor
xchg
bound
xchg
add
je
cmp
push
dec
mov
pop
imul
fsubp
add
ds
and
out
adc
imulb
or
pop
int3
aad
mov
pop
or
jl
dec
sbb
or
dec
dec
int
andb
push
daa
and
jmp
inc
jmp
in
dec
ret
addr16
xor
xlat
push
fiadds
or
sbb
xor
lock
stos
ss
xchg
movsl
fdivr
test
or
xorl
loopne
push
sbb
cwtl
stc
fwait
cvtpi2ps
cmp
insb
int
call
sub
incl
xchg
xchg
aam
lret
insb
test
add
jno
cmc
movsb
inc
mov
outsl
mov
push
or
inc
enter
stos
jno
push
add
add
test
in
add
mov
call
mov
mov
aam
sub
jno
adc
cmp
insl
push
ret
cmpsl
cmc
cmovns
xor
cmp
cmc
testb
out
cmpsl
aaa
cmp
fsubrl
sub
cwtl
decl
std
bound
sbb
push
lods
mov
xchg
lea
dec
dec
sarb
das
pop
nop
cltd
bound
xchg
in
cld
inc
adc
jg
mov
mov
mov
push
mov
jge
sub
stos
enter
cmpb
add
int3
jne
es
mov
sbb
dec
jo
xlat
and
insl
push
test
imulb
test
xor
fld
xchg
out
mov
loope
pop
int3
seto
pushf
push
sub
stos
adc
bound
xchg
xlat
mov
jmp
shlb
ja
push
dec
lods
mov
ss
push
out
cmp
lods
addr16
mov
scas
enter
imul
push
out
adc
xor
mov
lret
mov
fdivr
or
mov
fdiv
xchg
arpl
jl
or
xchg
stos
inc
lahf
dec
or
or
ss
or
push
imul
cwtl
pop
add
mov
roll
bound
insb
pop
pop
mov
lods
in
dec
shl
aas
sahf
gs
popa
sbb
mov
pop
lea
movsb
dec
sbb
xchg
sub
fcmovu
fsubl
shl
mov
add
pop
xor
dec
jmp
jmp
jle
sbb
and
cmc
mov
sbb
int
addl
pop
xchg
cmp
inc
test
jle
adc
icebp
or
inc
pop
pop
lock
sub
sbb
ljmp
in
mov
es
jl
sbb
push
xchg
data16
lcall
int3
inc
out
aas
aad
sbb
cmp
jne
push
out
dec
and
cmpsb
shrl
lea
mov
not
or
push
cwtl
pushf
pminsw
pop
sub
jmp
pushf
mov
mov
pop
cmp
sbb
ja
sti
out
mov
adc
pop
xchg
mov
xchg
and
sub
adc
dec
adc
xorl
inc
jl
loop
push
mov
imul
aas
inc
out
movsl
mov
repnz
pop
jecxz
insb
cltd
cmp
in
ss
xchg
movsb
notl
xor
sub
adc
and
and
inc
addr16
mov
sbb
fidivl
jo
aam
scas
inc
add
inc
test
std
in
or
shlb
cs
adc
cltd
std
lods
sbb
sub
jl
dec
pop
push
subl
cmp
aaa
push
out
jmp
mov
cmp
scas
ds
punpckhwd
lock
push
mov
rcrl
lods
aaa
idivb
mov
inc
sbb
fs
cmp
aas
out
push
xchg
jge
lret
push
loopne
shrl
mov
mov
dec
push
xchg
or
xchg
and
adc
push
lcall
mov
outsb
std
xchg
mov
mov
xor
ret
mov
lea
ljmp
pop
out
sbb
dec
insb
mov
pushf
repz
sub
or
lods
in
fsubrl
cmpsl
outsb
decl
xor
cmp
les
jno
shl
cmpsl
in
push
mov
sti
scas
int3
push
cmp
mov
in
xchg
mov
jl
loopne
imul
rcrl
push
js
jb
pop
cld
mov
mov
and
aam
sub
mov
xchg
cmc
jl
dec
pop
inc
bound
xchg
out
test
pop
fisttps
verw
stos
lret
or
pop
pop
inc
popa
adc
inc
mov
nop
and
jecxz
cmp
imul
insl
bound
cmp
lcall
jle
xchg
repnz
sub
adc
sar
addb
jno
ret
movsl
mov
enter
pop
js
jo
push
pusha
fcmove
rcr
gs
pop
outsb
js
fldt
imul
xlat
pop
xchg
dec
xchg
addr16
idiv
js
mov
jbe
and
loope
fstpl
push
pop
fld
xchg
mov
push
loope
pop
mov
adc
mov
int3
cmp
scas
in
jl
adc
aad
popf
sbb
rclb
pop
sarl
mov
cmp
testl
enter
push
xchg
fimull
and
arpl
call
je
jl
insb
or
movsl
push
xchg
enter
mov
ret
fisubl
or
cwtl
inc
add
movb
int
xchg
sub
loop
test
dec
fidivl
in
dec
jp
sti
loope
pop
fnstcw
mov
aas
imul
mov
out
lcall
outsl
hlt
lods
push
push
test
ds
fcom
int3
inc
mov
das
cmp
push
pusha
jb
xor
mov
mov
iret
add
dec
ret
add
cmp
out
js
stos
fdivr
hlt
xor
sti
les
sbb
sbb
fs
inc
jp
xchg
add
pop
dec
test
push
roll
cmpsb
pop
testl
mov
pop
jae
sbb
lret
mov
mov
fdivl
pop
pop
or
shll
add
cmp
and
fs
rol
aaa
inc
cli
or
sub
or
je
clc
mov
xor
int
outsb
lea
out
pop
or
or
jecxz
ja
cwtl
data16
cmp
adc
xchg
sarb
lahf
mov
sti
lods
ret
cmp
xchg
pusha
lcall
test
lcall
or
std
sub
int
mov
popa
imulb
sbb
and
sub
adc
pusha
ds
lcall
mov
ret
jns
sub
jmp
push
jae
jbe
iret
and
jl
mov
xchg
pushf
sbbl
xor
jne
shll
lods
lret
sbb
xchg
call
lret
pop
shl
or
sbbb
adc
sti
cmpsb
sub
jbe
int
jg
popf
ja
xor
jecxz
adc
mov
pop
lcall
not
sahf
je
shlb
dec
mov
dec
fcoml
gs
xor
out
push
or
cmp
mov
dec
cmpsl
mov
sbb
dec
mov
ljmp
fidivs
call
mov
bound
in
sub
sahf
mov
xchg
and
mov
lret
movsl
pop
mov
mov
ror
push
inc
int
jp
fidivrs
dec
dec
xchg
fdivrl
jecxz
cwtl
in
or
or
cmp
sbb
mov
in
orl
push
pop
sahf
xchg
inc
mov
stos
mov
ss
inc
imul
rep
pop
dec
sub
frstor
pop
xchg
into
int3
or
pmuludq
jb
aas
loop
jg
lret
mov
js
mov
leave
imul
repnz
call
mov
xor
stos
shlb
test
or
cmp
or
rcl
fsubs
mov
mov
and
push
mov
mov
xchg
add
pusha
mov
stc
dec
movsl
dec
xchg
arpl
and
mov
cmpsl
add
add
mov
cmp
pop
mov
cwtl
add
mov
in
mov
dec
adc
mov
ss
cmpsb
jge
xchg
xchg
and
xchg
mov
repnz
and
adc
dec
push
mov
mov
int
mov
jb
ss
and
mov
add
pop
insb
jmp
fildl
loopne
ja
outsb
mov
dec
iret
push
push
mov
arpl
xchg
cmp
adc
sub
scas
inc
add
idiv
stos
jno
jo
pop
js
and
push
loopne
jle
add
mov
add
popf
clc
in
in
mov
pop
push
fstpt
pushf
mov
das
out
je
mov
cld
and
mov
sub
pop
mov
sti
pop
pop
push
repnz
addr16
rcrb
inc
lock
cmpb
outsb
movsb
pop
shll
dec
mov
shll
cmpsl
add
test
arpl
stos
push
sbb
sub
hlt
push
pop
ss
adcl
xor
hlt
jae
mov
inc
andb
add
in
out
pop
gs
ret
loope
stos
pavgb
cmpsl
xor
daa
std
insb
mov
inc
push
mov
lret
xor
ljmp
test
fisubs
imull
xchg
call
clc
dec
sbb
lods
adc
test
andb
jb
dec
mov
popf
sbb
dec
inc
xor
adc
mov
ja
xlat
add
or
sbb
mov
mov
cmp
cmp
sbb
jl
xor
lds
insl
std
or
lret
insb
popf
jne
fstpt
mov
loopne
ljmp
ret
pop
mov
pop
call
lods
stos
mov
imul
cltd
daa
roll
xor
rdtsc
leave
es
push
jg
mov
lcall
inc
xchg
or
mov
inc
fst
icebp
or
add
mov
mov
fcoms
add
mov
sbb
lods
cli
and
movsb
cwtl
test
mov
mull
and
mov
sub
daa
mov
push
pop
fidivrs
addr16
jl
sbb
stos
fistpl
and
lds
sub
dec
aaa
mov
adc
dec
xor
scas
push
push
adc
push
xchg
imul
outsl
js
lss
cwtl
mov
stos
mov
or
push
jo
fs
cmpsb
les
cs
pushf
ficoms
out
fisubl
jne
pop
fucomp
mov
cmpsb
sbb
in
push
daa
push
mov
ja
cmp
int
mov
pop
jno
insl
xor
lock
xchg
add
cmp
faddl
notl
fninit
lods
mulb
sbb
and
xchg
ljmp
add
sti
push
ret
fst
jns
sarl
mov
push
jg
gs
fcoms
in
jp
sub
cmpb
in
push
push
xchg
in
dec
js
add
dec
sub
rorl
fucomip
inc
adc
repnz
pop
insb
shl
add
jle
push
ja
pop
call
mov
rcr
cli
xor
push
mov
sahf
testl
ja
insb
xor
ret
dec
and
pop
sbb
fcmovu
aas
mov
and
add
mov
mov
orl
mov
dec
ljmp
testb
jae
leave
cwtl
les
je
push
ret
xor
dec
xchg
lret
mov
xor
ret
xchg
mov
sub
pop
xlat
xor
or
out
cmpsb
pop
inc
add
and
enter
loope
ret
sahf
mov
pusha
pop
add
inc
add
arpl
ja
lds
dec
in
sub
adc
lea
fucomip
je
js
mov
cmp
adc
mov
clc
cmc
sub
or
flds
push
mov
mov
scas
ret
jl
out
in
pop
push
test
inc
js
test
popf
xor
nop
in
ret
jno
movsb
fmull
mov
lahf
and
cmp
fists
std
jmp
scas
lret
mov
xchg
sbb
rorb
cmp
or
dec
mov
add
add
cmc
lea
mov
fwait
clc
sbb
push
xchg
icebp
jle
adc
lahf
or
sub
dec
jns,pt
sbb
cld
dec
mov
mov
mov
jae
or
lahf
enter
or
mov
jnp
mov
xor
test
cld
imul
push
jae
ret
mov
jmp
xlat
pop
mov
mov
cmp
or
cli
cltd
inc
aad
divl
jecxz
mov
add
or
divb
pop
mov
into
jmp
jno
popa
mov
loop
inc
pushf
jge
sti
rcrl
cmc
loopne
aas
sbb
andl
push
mov
idivb
leave
or
jnp
push
or
mov
or
call
iret
push
mov
sub
mov
stos
fcomps
push
stos
decl
fwait
jmp
scas
std
iret
mov
add
cmpsl
fsubl
fidivrs
mov
inc
fists
push
nop
notb
loopne
sub
inc
in
push
lea
testb
mov
and
xchg
mov
lcall
mov
stc
hlt
faddl
bound
jge
mov
test
mov
mov
adc
ret
repnz
xor
cmp
pop
push
fiaddl
xchg
dec
imul
mov
sub
adcl
andl
ljmp
sbb
mov
and
inc
stos
jno
pop
and
out
nop
mov
and
mov
xor
or
and
sub
mov
cwtl
jl
add
mov
push
icebp
pop
out
imul
push
or
or
jmp
inc
repz
jnp
lods
jg
inc
mov
or
push
arpl
divl
pusha
add
iret
push
gs
push
int3
shll
xor
lahf
cli
sbb
mov
cmpl
cmp
insb
fwait
shll
aam
repnz
cwtl
lahf
lret
es
inc
or
sarl
mov
add
inc
jo
stos
xchg
pop
pop
test
imul
sbb
push
xchg
mov
fwait
or
es
in
dec
and
cwtl
insb
movsl
test
or
je
call
mov
pop
pop
mov
sbb
cld
call
push
jp
mov
fisubs
adc
outsl
cltd
mov
dec
gs
aam
sbb
mov
mov
xor
add
mov
inc
ss
leave
test
mov
sbb
gs
or
push
jb
sahf
jmp
add
bound
loop
cmp
icebp
pop
pushf
mov
dec
xor
jno
lock
jbe
inc
mov
ja
or
jo
insb
icebp
daa
out
test
add
lret
aam
hlt
sub
fisttps
push
aas
scas
mov
ds
ret
fnstsw
and
adc
pop
sti
or
and
popf
push
pop
ret
or
add
cmp
sub
and
mov
loope
inc
and
xchg
pop
pop
loop
idivb
mov
ret
push
sub
cli
enter
mov
cmc
arpl
or
and
fsubl
repz
rolb
and
push
aaa
loopne
cmp
int3
cmpsl
jle
gs
jl
es
or
ds
in
lods
mov
xchg
inc
decl
out
xchg
pop
aas
fsubrl
pushf
cwtl
push
iret
nop
dec
insl
push
fnstcw
es
dec
movsl
pop
sti
insl
xor
shll
or
out
ret
sub
xchg
inc
mov
fsubrl
sub
mov
imull
mov
and
xchg
and
sbb
cs
mov
and
push
stos
data16
jo
xor
adc
shrd
sub
jmp
movsb
arpl
xchg
sub
sbb
rcrl
pop
jp
push
test
cmp
jbe
cmp
dec
push
dec
lcall
inc
daa
dec
cmpsb
mov
fists
jle
add
mov
mov
pop
dec
dec
pop
add
sub
xor
add
in
insb
push
cmp
mov
cmp
inc
leave
or
rolb
push
leave
cs
int3
loopne
cmpsb
arpl
sahf
sub
xchg
push
je
stos
mov
int3
xor
or
gs
lahf
and
outsb
into
push
inc
sbb
loop
stc
mov
cltd
fsubrs
enter
pop
imul
sbb
xor
sbb
or
cmp
nop
xlat
lods
cmpb
mov
outsl
mov
sub
push
into
cmp
or
int
sbb
jmp
insl
inc
fidivs
imul
lods
xchg
clc
sahf
jle
dec
fwait
and
mov
mov
mov
push
sarl
imul
sbb
pop
out
push
push
xchg
in
pop
inc
sub
cs
adc
mov
or
clc
and
jns
rol
pop
sti
pop
xor
xchg
adc
push
fs
dec
xchg
arpl
clc
enter
in
jge
sbb
sbb
es
repz
fucomip
push
jno
out
incb
in
dec
roll
xchg
in
sbb
push
popf
arpl
adcb
int
pop
cwtl
sbb
es
rolb
mov
xchg
push
clc
mov
call
out
mov
and
lds
pop
mov
jo
roll
mov
cmpsb
mov
push
pop
lock
and
cmp
lret
sub
icebp
sbb
xlat
and
mov
mov
sbb
push
cltd
into
pop
cmpsl
mov
mov
jle
mov
add
push
ja
pushf
fs
lcall
adc
jb
xor
mov
inc
cmp
fdivr
and
test
xor
fisubs
repnz
push
cmpsb
pop
inc
mov
int
mov
ljmp
add
jmp
test
add
jmp
mov
add
sti
inc
out
mov
cmp
or
loopne
jb
push
in
imul
iretw
shll
lret
lds
mov
mov
mov
in
inc
xor
xchg
imul
fs
mov
fwait
mov
sar
in
sbb
add
arpl
out
sahf
mov
ds
mov
loop
xchg
sbb
imul
mov
cmp
cmp
scas
xchg
mov
push
sbb
dec
imul
xchg
ret
and
cli
iret
dec
shlb
and
mov
dec
ljmp
in
push
xor
mov
jno
aad
aam
mov
add
std
inc
mul
shll
dec
dec
inc
aam
mov
out
rorl
in
or
adc
sbb
jcxz
fisttpl
and
push
mov
jmp
icebp
adc
aad
aad
dec
add
mov
int
cmc
std
stos
rolb
or
fst
add
sbbl
rorl
ficoms
and
dec
xchg
scas
adc
out
pop
fwait
push
int3
mov
imull
adc
sbb
adc
popa
test
mov
fidivl
mov
sti
stc
jnp
out
aam
insb
dec
gs
lret
fdivrs
mulb
push
adc
jae
jmp
or
mov
sub
pop
cwtl
add
mov
fdivrl
leave
lea
and
lret
testb
rcr
test
into
add
mov
jo
insb
inc
lods
pop
outsb
jge
xchg
mov
pop
outsl
add
dec
pop
pop
dec
xor
in
aam
pop
nop
sub
mov
psllw
pusha
push
jo
add
into
test
ja
das
inc
insb
ss
out
inc
nop
pop
dec
fidivl
mov
mov
dec
sahf
jp
inc
sbb
insl
inc
sub
leave
fidivrs
xchg
push
sti
sbb
out
jmp
std
cmp
paddsb
add
icebp
shlb
popf
flds
adc
xchg
ret
add
inc
mov
xlat
pop
fnstsw
pop
sub
mull
push
and
addr16
cli
and
sti
imul
inc
add
icebp
xchg
jne
jl
ret
adcb
aas
add
dec
mov
sbb
lret
mov
pop
cmpsl
mov
cmpsl
scas
jecxz
cmp
xchg
gs
or
mov
mov
in
push
sbb
int3
mov
sub
aaa
shlb
add
dec
jmp
jne
pushf
int3
clc
cs
and
cltd
xchg
hlt
shl
xchg
loopne
or
notl
cltd
push
jnp
xchg
out
cmp
in
mov
scas
js
cmp
push
jp
pushf
pop
and
pop
or
int3
mov
pop
or
xchg
cld
xchg
cli
mov
sbb
or
ret
popf
sbb
add
sub
int3
dec
push
je
loopne
lahf
sbb
lret
jno
in
push
mov
or
repnz
sbb
add
push
fdivl
cmpsl
rolb
cmpsl
sahf
push
mov
ljmp
ret
and
test
mov
rcrl
jno
flds
xchg
in
lds
xchg
test
dec
or
shll
in
and
or
jl
loop
ss
insb
sub
movsl
adc
cmp
mov
adc
mov
js
or
mov
or
add
lods
repnz
mov
pop
pushf
ret
inc
sbb
imul
iret
push
pop
and
sub
inc
ds
data16
inc
push
xor
out
jge
mov
push
mov
inc
ret
repnz
repnz
jno
mov
inc
mov
pushf
push
pop
notb
mov
push
jp
and
or
lock
popa
aas
lret
sbb
subl
xlat
mov
adc
cmp
mov
and
pop
les
adc
gs
pop
adc
or
or
into
stos
fsubrl
inc
fwait
push
sbb
jle
or
xchg
pop
add
daa
xlat
xlat
rorl
loopne
mov
xchg
mov
xchg
testb
or
cwtl
adc
jmp
or
out
mov
add
sub
enter
mov
stc
add
lcall
pop
imul
mov
jae
lret
and
icebp
out
aas
push
jo
push
repz
pop
repz
stos
rcr
mov
stc
inc
icebp
movsl
xlat
in
or
pop
jbe
cmp
fdivrs
push
outsb
lods
enter
jge
out
and
adc
ret
negl
xchg
ds
sub
sbb
in
jmp
into
in
fimuls
nop
test
sub
push
test
and
jb
sbb
sbb
push
push
jmp
pop
mov
sub
aas
pushf
ja
jge
add
xchg
xchg
inc
lret
cltd
mov
cmp
cltd
addr16
mov
xor
xchg
je
mov
mov
push
dec
jmp
xchg
add
xor
or
pop
xchg
aad
insb
repz
aaa
ret
test
xchg
xchg
es
fs
shll
mov
push
loopne
pop
cmpsl
add
inc
jge
dec
lahf
inc
lds
adc
and
mov
mov
xor
inc
mov
jecxz
and
imul
data16
hlt
xor
jmp
sarb
jmp
std
inc
jg
lea
pop
fistpll
cltd
in
cmp
icebp
lds
imul
shll
sbb
dec
pop
jg
mov
lret
aam
mov
mov
int
mov
xchg
je
xchg
rcll
loop
les
and
sub
cmp
je
push
cmpsl
in
sahf
mov
adc
adcl
mov
cld
negl
xchg
fsubr
mov
dec
and
lcall
add
in
xor
adc
sub
stos
mov
dec
pop
sbb
dec
adc
lock
pop
jnp
adc
sub
fmull
popa
mov
jmp
daa
adcl
pushf
xor
jge
sbb
mov
je
loopne
and
and
pop
enter
test
mov
incl
pop
cltd
gs
cmpsb
sysexit
or
xchg
inc
fistps
push
xchg
dec
les
push
test
sbb
pop
aad
stc
dec
dec
fs
lret
repz
adc
mov
mov
xchg
movsb
repnz
cmp
sahf
push
pop
movsb
mov
lcall
rcr
jnp
mov
sbb
sub
js
xor
in
les
mov
push
leave
sbb
cmpsl
mov
jg
int
sbb
lret
fwait
sbb
ret
jecxz
out
mov
jmp
mov
lcall
mov
push
jnp
enter
and
and
jno
jbe
popf
test
push
mov
inc
or
das
jge
jne
mov
stc
ror
cwtl
stc
in
jnp,pt
mov
jmp
sub
call
test
es
jle
arpl
inc
out
mov
leave
xchg
adc
ret
mov
fs
mov
adc
xchg
xlat
adc
cmp
popf
xor
popf
out
jle
fsubrl
adc
in
mov
dec
fcmovnb
imul
andl
dec
jecxz
pusha
jmp
mov
mov
push
mov
pusha
out
dec
push
push
loope
stc
mov
jnp
xor
or
fcoms
fsts
dec
jne
popf
ret
ret
dec
xchg
popf
lret
jmp
pop
mov
jecxz
lods
cli
ds
int3
jg
leave
andl
insb
sub
sub
xchg
and
pop
cwtl
inc
jne
in
xchg
push
xchg
jp
cmp
pop
mov
and
test
or
repnz
and
subl
dec
pcmpeqd
aaa
into
xchg
repz
dec
ljmp
pop
xor
jg
lock
lahf
out
gs
jnp
jmp
and
or
adc
mov
adc
shlb
sahf
lahf
dec
xchg
xor
mov
mov
xor
sub
scas
popa
aaa
fwait
pop
mov
popa
fsubl
decl
sti
std
loop
mov
ss
xchg
mov
ljmp
nop
idivl
pop
or
loope
test
shlb
pop
cmp
lock
js
ljmp
cmp
pop
inc
stos
mov
lock
push
mov
mov
mov
lock
or
pop
jne
mov
mov
mov
xor
ret
and
jle
mov
enter
repz
push
mov
outsb
jnp
loopne
cld
xlat
sbb
mov
inc
sbb
in
insb
jno
std
outsl
cmp
xor
mov
mov
adc
cmpsb
cli
pop
cmp
sbb
mull
and
cmp
das
jle
mov
inc
int3
lds
fwait
push
outsb
mov
adc
mov
and
fidivrs
push
jne
shl
xorl
popa
fcomp
ja
loope
test
dec
stc
mov
iret
push
and
fisubrs
push
cld
roll
add
daa
int
lds
mov
jecxz
mov
push
cmp
mov
mov
and
pop
std
pop
imul
pusha
pop
orl
adc
xor
dec
cmp
jb
test
adc
and
mov
and
add
mov
or
jo,pt
mov
fidivrs
je
popf
mov
dec
pop
pop
cmp
mov
sub
mov
sahf
iret
pop
xor
out
push
adc
dec
outsb
roll
cwtl
jle
xlat
mov
in
dec
push
xchg
push
pushf
and
pop
jbe
out
pushf
clc
or
adc
or
fisubrs
out
jb
setnp
stos
push
int
pop
lcall
lahf
addl
dec
push
filds
pop
pop
in
jns
and
ds
cmpsl
int
mov
call
test
pop
mov
divl
mov
pop
stos
or
xchg
fnstcw
outsl
push
jl
push
shr
loopne
mov
ljmp
fstps
sbb
mov
mov
push
sbb
jle
add
cwtl
dec
out
mov
hlt
sti
xchg
in
shlb
and
sbb
mov
or
stc
mov
xor
adc
sbb
mov
push
in
aam
push
lcall
enter
cmp
pop
jb
lahf
insb
mov
lret
andb
xor
push
test
call
xlat
jmp
fisubrl
inc
jnp
inc
pop
cmpsb
ds
push
sub
pop
enter
xchg
jg
fcmovnu
jmp
mov
xor
out
mov
out
xlat
sub
iret
pop
je
in
mov
in
sahf
fstpl
push
pop
call
mov
lds
mov
adc
lea
sbb
cmp
sbb
push
mov
inc
adc
xchg
jl
daa
inc
push
add
xchg
push
dec
push
bound
sub
add
jns
fwait
call
dec
mov
mov
loopne
mov
cmp
clc
enter
cmp
repz
xor
and
pop
jnp
jbe
in
mov
inc
sahf
outsl
xlat
or
adc
jbe
test
dec
aas
ss
mov
pop
test
aaa
mov
sub
lock
pop
or
rcrb
clc
xchg
js
fwait
and
inc
cmp
loope
lahf
sub
fldcw
sub
mov
push
mov
pusha
sbb
and
pop
jnp
pop
test
sub
adc
jnp
rolb
sti
jnp
xor
mov
and
sbbl
pop
mov
cmc
sbb
fisubrl
dec
adc
inc
adc
jle
cmp
and
xor
mov
das
xor
je
jl
sub
mov
loop
hlt
and
enter
bound
arpl
js
shlb
out
add
inc
and
xchg
inc
xchg
enter
push
add
int3
and
stc
push
pop
push
inc
push
aam
cmpsl
add
cmp
das
cmovns
cmp
sbb
xor
or
push
mov
inc
cmp
xlat
mov
push
or
cmp
mov
lock
insl
cmp
and
lea
xor
xor
mov
sarb
push
mov
insl
sub
les
and
dec
icebp
xor
sarl
xor
push
mov
scas
cmc
addr16
mov
xchg
cmp
add
sbb
dec
loope
insb
and
stos
mov
mov
pop
fsubrl
mov
xor
mov
push
and
sub
sarl
nop
notb
sub
adc
push
fiadds
in
loope
bound
jae
mov
xor
scas
inc
or
push
jo,pn
bnd
pop
adc
stos
rcrl
sub
mov
pop
rclb
movl
cmp
and
add
fsubs
push
adc
jns
or
cmpsl
sub
cmp
sub
into
jns
dec
aam
mov
dec
loopne
and
lcall
pusha
lock
xchg
ss
xorb
push
inc
mov
mov
pop
es
mov
xchg
in
jge
lea
jbe
bound
jbe
push
fnstcw
sub
pop
das
sti
inc
call
sbb
mov
or
cmp
mov
push
adc
jl
enter
mov
mov
pop
mov
int3
notl
test
and
sti
jne
mov
rorb
movsb
add
jge
aaa
dec
adc
add
xchg
mov
repnz
adc
out
mov
adc
das
add
outsl
outsl
adc
stos
pop
nop
data16
icebp
xchg
xor
les
sub
jo
mov
push
push
int3
mov
mov
pushf
pushf
push
scas
cs
pop
int
aas
mov
xchg
iret
test
or
sub
mov
cmp
in
cmpsb
lds
cmp
sbbb
jb
mov
mov
les
test
cmp
sub
repnz
xor
lock
push
pop
jmp
cmp
enter
cli
sti
pop
add
pop
clc
hlt
jae
mov
push
jg
ljmp
movsl
cltd
mov
js
or
inc
aaa
jl
test
mov
outsb
and
ret
shl
fcmovnbe
jle
adc
add
inc
lcall
loopne
ja
or
les
xchg
xchg
mov
out
or
fldenv
jbe
lcall
nop
lds
and
flds
pop
adc
jnp
fcoms
cmp
pop
cmp
fcoms
test
add
pop
vmread
fwait
and
cmp
in
sbb
sbb
xchg
int
adc
lods
cltd
cltd
lcall
xor
jno
push
leave
div
out
dec
pop
cli
fsubrp
cld
and
mov
sub
pop
jbe
pop
into
cli
sarb
lcall
jmp
pop
mov
push
push
aas
mov
enter
add
pop
push
xor
subb
push
xor
mov
sti
push
pop
xchg
pop
out
mov
pop
ja
lea
push
fsts
cmp
or
xor
sub
hlt
and
fstpl
pusha
scas
add
lock
mov
xor
fidivs
xchg
das
push
rolb
dec
pushf
popf
sub
mov
xor
les
pop
dec
dec
xchg
aaa
push
jle
sub
stos
sub
mov
xorl
arpl
mov
sub
addr16
imul
je
aad
aas
pop
xor
adcb
sub
xor
icebp
sbb
xor
iret
jno
and
gs
cltd
ret
divb
pop
adc
dec
dec
insb
sbb
and
movsb
stos
xchg
pop
mov
out
lret
gs
aas
sub
dec
shrl
fcoml
mov
mov
pop
inc
and
inc
icebp
add
sbbl
mov
je
fadd
xlat
xor
xor
mov
inc
iret
subb
push
dec
and
or
insb
push
sbb
xlat
mov
jle
pushf
out
and
movsl
cwtl
push
movsb
movb
push
add
dec
push
in
cmp
into
ljmp
add
pop
repz
in
clc
dec
outsl
push
mov
stc
stos
pusha
dec
adc
inc
or
dec
dec
add
lret
and
shrl
inc
ds
mov
xchg
bound
inc
mov
dec
in
pop
xor
mov
out
lods
jg
mov
test
push
inc
and
enter
inc
push
movsl
and
rclb
xchg
or
test
sbb
add
sbb
dec
dec
call
or
adc
push
clc
mov
aam
movsl
pushf
cmp
popa
fucomip
and
jae
lea
rol
push
push
adc
cmp
xor
hlt
pop
call
movsl
mov
imul
mov
leave
fsubr
mov
jb
ret
mov
aas
popl
nop
mov
inc
inc
mov
les
jb
push
pop
xor
daa
mov
xchg
mov
mov
dec
mov
test
nop
inc
sbb
jle
aad
mov
pop
inc
ffreep
dec
xchg
xchg
imul
in
push
mov
sub
movsb
xchg
push
jge
or
or
push
mov
mov
pop
sahf
repz
aas
jp
out
xchg
dec
xor
xchg
sub
divb
inc
cmp
sub
cmpsl
push
jle
call
imul
scas
xor
mov
repz
push
pop
push
popa
jno
and
mov
fs
mov
pop
test
loope
stos
cmp
repnz
push
pop
daa
mov
lret
test
xor
dec
mov
fnsave
mov
shrb
xchg
das
in
jbe
dec
push
stos
ret
popf
pop
mov
mov
push
and
cmc
stos
lea
insb
push
and
cmp
lds
and
jns
adc
jmp
arpl
cld
mov
mov
into
sub
sbb
xchg
jl
mov
add
cmp
je
or
cld
incb
adc
scas
adc
insb
aad
cld
inc
sbb
cmp
mov
insl
xchg
fstps
aas
shlb
sbb
into
add
xor
std
dec
sti
std
scas
xchg
pushf
mov
inc
shlb
jmp
inc
jge
mov
jmp
mov
mov
xchg
fdivrp
mov
xchg
nop
std
and
xor
mov
or
dec
add
insl
mov
or
rcll
lea
andb
bound
jle
xchg
cmp
ret
mov
test
lock
mov
sbb
inc
xchg
cmpsl
pop
or
mov
testl
adc
adc
fildll
cs
cmpb
stos
mov
out
mov
hlt
popf
mov
fstl
cs
cwtl
test
lahf
mov
and
aam
testl
cmp
fmuls
fistps
data16
scas
xchg
mov
lea
int
jle
push
stos
mov
pop
dec
adc
mov
lcall
push
add
rclb
in
and
in
mov
mov
iret
and
in
aad
push
inc
aaa
and
in
xor
xchg
stc
cmc
mov
ds
push
fwait
jg
dec
sti
cli
jmp
lock
sub
subps
jge
jl
jb
mov
call
test
add
push
loope
nop
xchg
inc
jo
jmp
and
divl
push
and
or
add
xchg
aas
cwtl
sti
cs
popf
dec
cmp
dec
cmpsl
jbe
das
and
mov
or
xor
pop
cwtl
movsl
ja
sbb
cmpsl
adc
xor
lcall
das
add
ficoms
ret
outsl
and
push
sbb
push
shlb
das
jle
adc
mov
repnz
or
scas
jmp
mov
jno
fmull
sbb
int
sub
and
inc
bound
int3
pop
or
pop
mov
icebp
inc
or
popf
clc
loopne
das
cmc
mov
mov
sbb
leave
or
push
lahf
pop
cmc
lock
jecxz
xchg
add
out
fstpt
es
pop
cmpsb
test
not
pop
or
insb
inc
mov
add
loop
cld
and
ljmp
daa
dec
fwait
xchg
cltd
addr16
outsb
pop
and
sub
jmp
hlt
in
mov
jg
jl
frstor
ret
imul
dec
xor
ljmp
dec
std
dec
push
sbb
inc
loop
mov
mov
xor
repz
rorb
jne
mov
inc
add
inc
jg,pn
fwait
add
fistl
sub
cmc
loope
xchg
xchg
jae
sbb
dec
nopl
out
cmpsl
and
int
loope
push
jecxz
movsl
scas
clc
outsb
data16
das
jecxz
dec
into
and
pop
sarb
test
cld
adc
xchg
push
dec
cmp
push
loopne
sti
sbb
in
fwait
inc
sub
mov
je
mov
cmc
mov
stos
and
sbb
insl
add
jbe
into
or
cmp
sbbl
in
pop
cmp
rol
cmp
pop
jle
fld1
in
and
stc
dec
jbe
testb
cmp
sub
aam
dec
stos
ja
out
sbb
daa
gs
aaa
mov
and
cmp
adc
imul
ds
nop
std
mov
addr16
adc
xchg
inc
xor
sbb
dec
pop
jecxz
nop
or
or
inc
mov
rolb
inc
js
lods
dec
mov
push
stc
mov
mov
aaa
inc
xor
xor
mov
xchg
ror
cmc
xchg
and
fld
loop
add
jge
lcall
fucomp
jno
or
scas
int
test
sub
fwait
je
mov
movsl
fldt
jg
test
fisttps
pop
ljmp
cmp
mov
addr16
sub
or
aaa
cs
mov
out
stos
mov
outsl
or
push
sub
sbb
cmp
inc
pop
mov
xchg
in
or
adc
lock
fimull
mov
xor
shll
cli
pop
in
loope
pop
imul
out
xchg
xchg
sbb
adc
rcrl
movsb
scas
cmc
inc
cmp
setb
fnstenv
cmp
in
addr16
rcl
mov
mov
jl
cmc
jge
mov
jmp
in
shlb
mov
or
pusha
inc
xor
xor
stos
roll
mov
in
ljmp
addr16
ds
jecxz
cmp
push
test
fwait
push
sti
into
aam
fdivrl
sbbl
test
dec
mov
dec
push
ficompl
ret
dec
inc
loope
loope
into
popa
mov
and
jl
jnp
outsl
ret
addr16
jle
mov
pmullw
iret
fdivrp
add
mov
sbb
push
fisubrl
or
mov
pop
add
sub
cmp
sbb
sbb
push
das
mov
dec
push
in
enter
flds
mov
test
cmc
out
clc
sarl
fwait
mov
xchg
scas
lock
inc
and
dec
cmp
push
movsl
jmp
jg
mov
int3
mov
dec
adc
push
aad
cwtl
test
sub
and
es
test
and
sub
xchg
jg
lahf
jb
adc
adc
dec
fimull
cmp
xchg
or
and
xor
inc
pop
add
cltd
dec
loopne
scas
adc
out
aam
and
stos
jp
xor
sbb
adc
addb
inc
call
lcall
add
mov
jae
pushf
lods
pop
mov
xchg
or
cmp
jne
jle
and
add
add
pop
adc
adc
push
xor
pop
mov
clc
mov
jg
add
mov
or
out
and
in
xchg
ret
sub
xchg
jno
out
xor
or
repnz
push
push
out
inc
lret
jecxz
sti
gs
mov
cmp
mov
and
push
ret
mov
add
pusha
shll
sub
test
cs
test
aam
push
xor
sub
ja
paddsb
std
jmp
push
adc
mov
sbb
mov
xchg
push
call
xor
scas
cmpsl
xchg
add
inc
adcl
or
out
pop
push
and
inc
jmp
mov
jnp
jnp
pop
mov
adc
add
jg
dec
jo
test
add
sub
inc
lea
leave
fcoms
test
xchg
bound
dec
and
mov
or
xchg
dec
cmp
xchg
int3
mov
jg
lods
dec
xor
aam
pop
xor
xlat
ret
fcomps
lahf
sbb
lock
popf
jp
test
jo
inc
xlat
das
lahf
xchg
dec
mov
jbe
jp
mov
dec
sub
xor
inc
movsb
mov
movsb
sbb
push
xchg
ficompl
aam
sti
cli
xor
je
pop
enter
daa
sbb
hlt
in
clc
fsubp
rcrl
fmull
sbb
xchg
inc
lahf
and
inc
mov
xor
add
sbb
xlat
aas
daa
mov
and
dec
jmp
cmp
push
ss
popf
sub
inc
daa
pop
popa
or
jle
or
cmp
fcomi
cmp
cltd
pusha
loope
xchg
shrl
add
or
and
scas
into
bound
cmp
clc
aad
cld
fldenv
in
repz
movsl
ret
xchg
sub
test
cltd
push
push
add
jg
test
xor
jmp
shll
cs
imul
lahf
les
std
lahf
daa
sti
dec
pop
dec
xchg
aad
insl
mov
sub
xor
xchg
cmpb
pop
addl
cld
or
lahf
lahf
in
inc
jmp
movsb
clc
push
or
mov
or
sbb
mov
arpl
mov
ja
mov
imul
cmp
pop
xor
xor
mov
cmc
mov
mov
enter
push
add
adc
and
mov
mov
mov
add
mov
shlb
test
popa
mov
mov
xor
and
fcomp
mov
int3
inc
jbe
testb
cs
push
shll
enter
dec
push
icebp
in
mov
adc
icebp
popf
xor
das
aad
cmpsb
adc
int
jno
arpl
add
pop
test
dec
dec
xchg
cmp
mov
mov
mov
out
lea
loope
mov
push
sub
mov
mul
insl
mov
mov
xchg
push
push
shll
testb
aas
in
cs
cmp
imul
xchg
jbe
js
push
insb
xchg
shlb
daa
out
cmp
es
jg
test
mov
iret
loop
jbe
loope
push
mov
pop
adc
inc
dec
push
xchg
nop
push
mov
mov
xchg
repnz
je
xchg
inc
sub
sub
lods
dec
stc
adc
cmpb
pop
cmpsb
cmpsb
xor
and
xor
mov
out
lahf
jg
lret
sahf
in
leave
bound
fidivrl
inc
enter
stos
sahf
fadds
sbb
in
pop
scas
add
aad
cs
push
xor
scas
dec
mov
cmp
xchg
jle
roll
or
mov
je
shl
ja
test
fwait
ja
cmpsl
test
inc
repnz
hlt
cmp
scas
ljmp
lcall
ret
adc
mov
pop
jecxz
fdivs
and
aad
imul
xchg
mov
mov
inc
fwait
push
fistl
cld
xchg
mov
adc
aas
or
scas
nop
loopne
fimull
jae
sbb
in
mov
test
push
push
das
xchg
lods
jnp
add
and
jmp
mov
push
andb
das
push
and
inc
jbe,pn
call
popf
outsl
dec
je
mov
or
sti
cmc
out
testb
lods
jle
icebp
mov
imul
xor
rcll
or
mov
int
test
cmp
data16
cmp
xchg
stc
cmp
cli
movsl
sub
dec
push
dec
pop
arpl
mov
sub
xchg
push
stos
cli
lgs
imul
mov
test
icebp
mov
test
lahf
sub
xor
push
xchg
cmovno
mov
mov
mov
fcmovb
inc
mov
aaa
mov
sub
add
push
and
enter
lods
insb
pop
mov
ja
icebp
and
adc
mov
fldl
dec
loop
pop
xor
fwait
lret
mov
xchg
sub
xchg
fs
out
sti
cmp
nop
cmp
xchg
daa
sar
pop
sbb
lods
pop
xchg
ja
scas
out
add
push
popa
pop
or
scas
adc
in
fstpt
mov
ja
push
fcoms
adc
xchg
shlb
cltd
cmp
shlb
in
in
rolb
loop
inc
call
and
or
js
cmp
jb
mov
mov
cltd
incb
data16
xor
ss
xchg
xor
jle
inc
jmp
aaa
in
mov
lods
adc
mov
cmc
into
mov
or
cmp
or
push
rcr
adc
or
in
fisubrs
lock
je
pushf
pop
sahf
dec
fs
mov
orb
shll
sub
popl
into
fdivs
push
out
push
and
xchg
add
pop
lret
les
add
push
mov
insl
int
inc
lahf
mov
repnz
jecxz
jno
mov
cltd
outsb
aas
idiv
add
shlb
jae
jle
push
jecxz
or
dec
ficomps
mov
jbe
scas
fadd
sub
adc
sbb
ret
loop
cmp
mov
cmpsb
dec
enter
pop
gs
shl
call
daa
mov
and
mov
jmp
fs
mov
jecxz
test
ret
enter
cmp
negb
mov
mov
inc
pop
mov
pop
push
add
fidivs
or
test
in
jb
xchg
ret
inc
call
cld
call
push
cwtl
mov
pop
aad
xchg
pusha
mov
xor
push
xchg
pushf
lods
ja
stos
inc
cmc
insl
mov
sub
cld
test
fnop
mov
cmp
sbb
into
fcoml
cli
mull
in
stos
pop
inc
in
xor
enter
movsl
lea
xor
bnd
inc
rcrb
int
fstl
xchg
pop
push
lcall
jo
aam
fcomps
pop
pusha
roll
add
mov
xor
jbe
mov
lods
dec
icebp
jo
mov
sbb
xorb
pushf
insl
sahf
sahf
push
sub
mov
imul
mov
lcall
xlat
pop
push
lods
dec
lret
mov
scas
mov
fwait
lcall
shll
sti
dec
and
inc
sti
sub
rclb
jb
stc
sbb
cmp
cmpsl
jg
shrl
decb
jl
push
imul
stc
mov
xor
loop
stos
fists
and
mov
gs
inc
pop
push
xchg
mov
jp
mov
jecxz
ljmp
pop
stos
pop
inc
hlt
repz
or
clc
pop
daa
rol
movsl
sub
lods
fistpl
push
enter
aad
pop
xchg
jg
lret
out
jle
es
les
inc
xchg
jp
add
inc
daa
hlt
pop
fldl
in
jne
inc
xor
int3
fs
mov
ja
fsubrs
dec
fcom
imul
out
mov
mov
shr
mov
pop
add
xor
and
xor
inc
fs
sbb
and
mov
js
xchg
pushf
xchg
xchg
fisttpll
popa
inc
mov
cltd
xor
sbb
mov
mov
jle
clc
cmpsl
scas
mov
loop
pop
movsb
mov
fidivl
in
xor
shl
loop
mov
jns
scas
pusha
daa
xchg
movsb
pop
sahf
or
scas
pop
jns
ljmp
dec
loop
test
nop
jmp
daa
lea
fucomp
cmp
mov
sub
hlt
test
cmc
xchg
lret
xor
add
pop
fbstp
ds
or
insb
in
cs
sbbb
imul
mov
lds
xor
rcll
fwait
or
dec
cmc
xor
mov
or
xor
mov
iret
out
mov
pop
pop
outsl
repnz
ljmp
or
lds
mov
add
xor
sub
lods
popf
ret
mov
in
outsb
lds
xor
jnp
cli
mov
out
jnp
cmp
ret
push
jbe
aaa
mov
loopne
imul
or
in
xor
insb
lret
add
jge
jmp
stc
lods
mov
or
ds
jbe
dec
pop
insb
dec
push
pop
sub
adc
fs
jae
pusha
jl
in
insb
mov
loopne
mov
or
aad
aaa
xchg
mov
int3
xor
cmp
or
jle
pop
sbb
outsb
test
mov
xor
dec
jmp
into
je
push
adc
xchg
cmp
push
lret
shrb
negb
mov
mov
xor
inc
out
lds
les
out
fs
hlt
inc
push
pop
test
fimull
mov
sarl
cmp
mov
add
pushf
mov
fmull
out
in
push
pop
call
sbb
push
xlat
push
icebp
lods
je
dec
jne
idivb
aad
add
xchg
mov
lods
mov
jns
aas
mov
mov
sahf
push
push
dec
mov
dec
out
inc
dec
lock
pop
jns
fninit
arpl
lcall
jne
mov
add
add
sti
call
dec
mov
xchg
xchg
cmp
xchg
sub
arpl
into
mov
cmp
mov
sbb
pop
scas
lock
outsb
inc
push
xchg
les
out
je
mov
or
orl
sbb
add
dec
pop
dec
movsb
jns
dec
mov
popf
jno
hlt
adc
test
mov
in
cmp
cmpsb
imul
push
lcall
in
ret
inc
mov
adc
loopne
nop
xor
adc
pushf
mov
pop
enter
jl
adc
jae
push
das
test
lods
xor
int
inc
popf
adc
in
push
rorl
mov
scas
add
hlt
mov
repnz
push
inc
hlt
adc
add
fstpt
push
popl
cmp
out
pop
test
je
filds
popf
movsb
mov
ds
pop
xchg
sbb
jmp
ja
call
imul
outsb
inc
add
push
mov
cmpsl
js
loopne
xorb
fdiv
fucomip
xchg
ljmp
mov
test
stc
popa
repz
repz
jns
imul
rcrb
gs
idiv
mov
js
pop
mov
rcrb
sarl
pop
scas
jmp
xchg
adc
or
test
add
pop
jb
cli
xor
pop
mov
sub
shl
push
out
ret
jle
cmpsl
ljmp
mov
mov
xchg
enter
xchg
push
pop
and
nop
sbb
lea
sar
mov
mov
int3
pushf
push
pop
inc
mov
push
xchg
and
fsubs
es
nop
sarb
mov
lret
and
inc
pushf
jnp
cmp
mov
lret
mov
mov
es
mov
cmc
bound
inc
ret
arpl
sbb
mov
je
js
mov
pop
lods
and
add
call
fsubrs
notb
inc
xor
out
scas
jnp
sbb
les
dec
dec
and
mov
jnp
lea
cmp
pop
pop
xchg
sub
and
inc
clc
movsl
sbb
fmuls
add
xlat
add
jmp
cltd
sti
int
clc
divl
imul
push
xor
js
xchg
lret
jnp
adc
cld
into
mov
mov
push
xlat
cmp
int
xlat
mov
fisubrl
xor
in
cmp
xor
pusha
int3
inc
shrl
adc
mov
cld
mov
push
xchg
rcll
mov
sub
jle
push
jae
cwtl
inc
minps
or
cmp
arpl
cmpsl
mov
test
sbb
push
lret
mov
sahf
repnz
leave
das
mov
mov
dec
adc
xorl
ficomps
or
adc
sbb
mov
jnp
sbb
xchg
test
push
xchg
sub
mov
icebp
sbbb
mov
mov
outsl
mov
cmc
mov
loopne
js
push
push
jp
or
leave
stos
mov
and
les
shrb
es
mov
xor
cmp
or
pop
push
iret
xchg
ss
vmovhps
and
sbb
or
mov
cmpsl
mov
ja
or
or
stos
dec
adc
xor
shll
jg,pn
fwait
and
cmp
in
orb
filds
mov
movsb
lret
dec
dec
inc
out
cmp
xchg
and
repz
cli
arpl
fwait
xchg
mov
ja
mov
push
ret
push
fcmovnb
mov
ljmp
push
jg
pop
push
mov
hlt
rol
cmpsb
lahf
inc
xchg
test
mov
pop
jae
int
mov
adc
jg
sbb
mov
mov
add
es
dec
ds
add
add
xor
shrl
cli
jge
les
jnp
les
fwait
cmp
dec
mov
pop
arpl
das
mov
dec
outsb
sbb
cmp
cmpsl
mov
add
push
mov
or
cmp
sub
in
aas
adc
les
mov
pusha
imul
jno
and
jge
mov
imul
daa
xchg
xchg
add
sbb
and
out
jg
loope
out
lahf
fbstp
in
adc
cmp
cmpsl
pusha
sub
test
lcall
mov
mov
loopne
dec
roll
iret
mov
mov
adc
test
lahf
cmp
jnp
aaa
cwtl
adc
mov
mov
test
add
push
cmp
into
nop
and
es
sti
jmp
xor
arpl
pushl
and
or
inc
addl
jg
imul
mov
lds
jo
xchg
fnstenv
sahf
in
mov
repz
aaa
dec
xor
sub
xchg
hlt
test
xor
in
vmread
lcall
hlt
inc
sti
xchg
in
cs
leave
and
xor
jmp
stos
mov
in
bound
adcb
dec
mov
pop
inc
js
loop
add
sbb
lret
adc
dec
jno
enter
fistl
pop
or
xchg
mov
xchg
pop
icebp
push
out
lea
xchg
mov
inc
jo
pop
aad
lods
test
adc
push
or
inc
push
xchg
shlb
dec
or
xchg
xor
and
lahf
in
dec
mov
divl
fsubs
pushf
inc
test
loopne
sti
lods
mov
inc
xlat
push
lcall
nop
mov
inc
ret
hlt
in
gs
push
inc
ds
jno
mov
sub
push
lret
mov
scas
xchg
push
sbb
mov
int3
cmc
push
pop
fdiv
xor
xchg
mov
scas
movsl
outsb
cwtl
push
adc
cmp
push
sub
arpl
push
push
lea
and
inc
sub
xor
xchg
jge
push
adc
ljmp
pop
jae
cmp
lcall
pop
jp
pop
xorl
xor
inc
mov
push
leave
je
cmp
jmp
scas
sbb
sti
insl
xor
sub
stos
lret
push
dec
cmp
mov
cmp
fwait
test
mov
push
movsl
pop
jl
out
icebp
fstpt
es
in
sub
imul
js
and
ds
into
or
in
into
sbb
jnp
dec
aaa
sti
pop
cmp
jnp
pop
dec
negb
arpl
or
aam
movq
cltd
push
jnp
ror
pop
dec
mov
or
xor
aaa
int
sbb
xor
out
ss
cmpsb
adc
pop
fisttps
dec
not
sarl
mov
sbb
or
and
cmp
xchg
xchg
inc
xchg
outsb
lea
sbb
aaa
call
hlt
sbb
push
pop
pop
notb
pop
mov
add
add
inc
cmpsb
mov
add
fisubl
adc
xchg
nop
jno
icebp
fimuls
repnz
fists
mov
xchg
repz
mov
mov
jae
enter
imul
mov
xchg
pop
out
dec
sbb
movsb
mov
arpl
in
js
in
mov
jmp
fsubrl
pushf
or
push
adc
or
lock
lcall
pop
add
mov
or
adc
in
add
cmp
mov
mov
lods
mov
icebp
in
outsl
mov
push
std
adc
cmp
mov
jle
mov
and
mov
dec
mov
cmpsb
inc
test
loop
shll
jp
fiadds
add
pop
jae
in
fimuls
cmp
fnstsw
mov
sub
xor
call
push
sbb
pop
cmpsl
xchg
xchg
cmp
mov
or
jne
scas
pop
mov
pop
mov
ficompl
mov
rcll
jbe
mov
scas
mov
mov
sub
mov
pop
pushf
xchg
mov
jl
push
imull
inc
mov
ret
jmp
fcompl
stos
adc
jge
xor
popa
inc
cmp
pop
fs
mov
push
bound
adc
mov
pop
lret
mov
xchg
cltd
cmpsb
inc
sub
jnp
cmp
pop
mov
dec
add
lds
jle
adcb
std
out
and
ja
add
js
lea
rcrl
repnz
mov
fdivrl
jg
adc
dec
in
push
and
int3
pop
pop
les
inc
sbb
mov
leave
mov
jne
mov
rol
add
push
xlat
pop
shrb
rol
push
shrb
push
fldl
jg
sti
into
fwait
imul
ljmp
hlt
out
aam
rcll
xchg
in
pop
fidivrl
lret
jae
jg
inc
inc
jnp
cld
push
and
mov
fiaddl
mov
testl
aaa
pop
out
arpl
xchg
xlat
negb
jno
mov
stos
subb
jne
inc
sub
mov
aam
sbb
or
fmul
jmp
or
ss
aas
push
pop
mov
in
adc
stos
outsb
cmp
push
insl
aam
out
jno
jmp
adc
je
or
clc
cmp
scas
aaa
adcb
pushf
push
enter
mov
arpl
mulb
repnz
out
dec
ret
sahf
xchg
jne
and
cmp
add
push
rorl
cmp
arpl
inc
push
ja
lret
push
cmp
mov
ja
fcomps
and
xchg
cmp
lods
int
sbb
pop
jmp
jle
or
cwtl
mov
into
stos
adc
add
aaa
or
jb
xchg
push
scas
outsl
push
mov
fisubl
ror
idivb
bound
into
mov
test
xchg
fs
and
negb
call
adc
inc
cmp
div
test
xor
pop
and
and
repnz
mov
lea
jbe
aad
jnp
test
shl
ss
stos
loopne
rcrb
dec
lahf
loop
cli
jle
sarb
sbb
add
imul
jecxz
loopne
loope,pt
xlat
popa
sbb
dec
push
imul
cmpxchg
pushl
out
xchg
lds
push
popa
in
mov
dec
pushf
insl
dec
dec
subl
cmp
lock
mov
es
push
pop
ffree
mov
sub
loop
pop
pop
mov
pushf
mov
mov
pop
les
jbe
outsl
or
cmp
insl
pop
dec
cwtl
pop
sub
mov
sub
sahf
imul
fmul
into
enter
push
scas
cmp
inc
jp
push
ja
popa
sub
xor
mov
fwait
arpl
dec
mov
icebp
dec
ljmp
popf
mov
fcmove
dec
movsl
loopne
sbb
jmp
in
repnz
mov
sub
push
jno
and
lret
mov
iret
je
test
in
inc
fwait
add
and
rcll
or
bound
pusha
cmp
loope
sub
jmp
pop
fisttpl
cld
shlb
pop
push
std
icebp
sub
inc
cltd
out
fimull
lahf
sub
and
scas
sub
jae
insb
pop
insl
push
jo
in
xchg
outsl
jno
mov
xor
add
add
mov
std
mov
inc
cmpsb
pop
rcrl
sub
or
mov
add
sbb
adc
shll
xor
mov
fiadds
cwtl
cli
adc
push
jg
lods
adc
jl
bound
dec
push
jne
xchg
cmpl
mov
in
fidivrl
cli
es
inc
mov
or
xchg
sub
jecxz
add
les
loop
scas
les
sbb
mov
jae
xor
jo
jmp
push
ss
outsl
ret
add
pop
and
addr16
ret
stc
and
and
in
jle
cltd
fnstenv
decb
inc
int
jecxz
int
ss
and
push
fadds
inc
add
fists
and
sub
int
jmp
jbe
enter
xchg
lods
lods
out
push
adc
dec
or
repnz
js
mov
pop
mov
aam
pop
stos
sbb
mov
inc
test
mov
fsubl
jno
outsb
cmp
pop
jg
outsl
aad
mov
mov
mov
stos
xchg
pop
scas
cmp
jo
jae
adc
in
jo
iret
xor
mov
cmp
fwait
cltd
mov
popf
fsubr
movsb
pop
jmp
stos
inc
inc
lcall
scas
inc
cwtl
or
ffreep
and
aas
mov
add
dec
sbbb
jns
mov
ljmp
loopne
push
gs
lgs
lahf
test
cmp
fildl
xor
push
sub
clc
mov
insb
add
adc
pop
push
icebp
nop
ljmp
leave
mov
lds
push
adc
sbb
addl
std
roll
adc
adc
xchg
loop
loope
jns
xchg
push
cmp
sbb
mov
in
sarl
xchg
pop
in
stos
sub
jnp
mov
pushf
inc
das
inc
push
mov
inc
pop
push
bound
rolb
adc
int
lahf
ficoms
dec
dec
cs
andl
sub
cmp
jo
outsb
add
in
addl
fwait
pop
loopne
push
inc
add
cmp
popf
cs
lea
inc
cmpb
inc
loop
cmc
mov
sbb
push
inc
push
out
pop
or
jl
xchg
adc
test
sbb
add
mov
push
xor
push
xchg
push
dec
dec
out
xorl
pop
sbb
test
js
or
pop
test
test
fistl
in
push
adc
mov
dec
push
mov
test
fstps
das
add
sti
outsb
pop
cmpl
inc
or
ret
idiv
fdivl
rclb
mov
enter
add
sti
insl
roll
xchg
fbstp
cmp
sub
cmp
push
xchg
out
dec
add
stos
aad
arpl
mov
xchg
pop
stos
repnz
stc
insb
inc
add
xor
jle
in
in
mov
jnp
and
in
outsl
mov
rorb
jp
stos
mov
mov
mov
sub
or
jae
ret
or
and
cmpsb
push
int
cmpb
jl
jae
xchg
sbbb
adc
jns,pt
mov
xchg
imul
movsb
stc
mov
adc
les
adc
dec
or
les
mov
xor
push
lock
push
icebp
xor
cmpsb
sbb
ds
jge
mov
imulb
and
clc
lods
jg
sbb
in
sub
jecxz
fsts
xchg
xor
out
out
xchg
test
inc
pop
lret
cmp
push
xchg
dec
xchg
adc
stos
adc
sahf
leave
imul
insl
inc
shll
cmp
xchg
pop
shrl
or
andb
pop
lock
or
and
jg
sbb
mov
mov
je
push
inc
xchg
ret
mov
clc
push
mov
mov
sbb
mov
mov
mov
mov
out
mov
sub
out
icebp
xchg
lret
mov
lds
outsb
and
std
cmpsl
mov
mov
inc
mov
jae
xchg
push
popl
mov
pop
into
push
xorl
mov
jns
ret
clc
cli
fisubl
movsb
test
and
xchg
jae
sbb
xchg
mov
dec
movsb
aas
nop
into
subl
inc
cmpsb
rorb
jmp
sub
out
jae
dec
testb
sbb
std
jle
and
xchg
push
sbb
push
xchg
call
sbb
rol
push
mov
push
lods
cltd
jno
clc
xchg
or
push
xlat
fnstcw
dec
shll
mov
jg
ss
mov
sbb
loope
xchg
std
dec
sbb
add
jb
testl
dec
jns
movsl
xorl
in
inc
lods
mull
iret
andnps
push
mov
mov
test
cmp
into
jmp
push
mov
inc
das
cmp
xchg
data16
xchg
cli
xor
push
fisttpl
cmp
xchg
or
and
scas
lret
outsb
inc
mov
push
insl
ret
out
sub
and
enter
mov
in
mov
pop
enter
movsb
test
jp
gs
mov
and
shll
mov
roll
lock
jmp
or
cltd
mov
inc
cmc
cwtl
cmpsb
dec
xchg
or
xor
xor
pop
cmp
lods
jb
pop
dec
jbe
pmuludq
pop
mov
jns
mov
fildl
inc
mov
pop
mov
sbb
inc
pop
jmp
push
in
cmpsb
mov
and
cmp
ror
movzwl
inc
mov
aaa
cld
rcll
imul
leave
fisttpl
push
lret
xchg
inc
stos
and
std
imul
pop
into
push
push
push
rclb
aad
dec
js
add
mov
inc
xchg
pusha
or
xor
fwait
lods
push
adc
xchg
sbb
xor
test
mov
lcall
sub
sub
add
das
mov
xor
arpl
lds
add
xchg
cwtl
mov
fwait
shrl
cli
popf
stos
push
mov
mov
fwait
push
ret
sub
fistl
out
sahf
insl
stc
out
sub
lret
fs
mov
add
sbb
cwtl
add
xchg
aad
insl
mov
lods
cmp
daa
sub
repz
mov
mov
into
out
cli
mov
cmp
sub
mov
es
add
cmp
xchg
pop
add
in
test
out
pop
sub
mov
pop
pop
fucom
push
clc
sbb
inc
call
insb
cmp
imul
call
jo
or
les
aaa
add
inc
mov
pop
jle
xchg
add
pop
fildll
popa
loop
leave
and
scas
mov
inc
or
lock
scas
jae
popf
pop
mov
icebp
mov
in
dec
std
ja
mov
jnp
push
test
sahf
loopne
jmp
add
mov
mov
xchg
fisubrl
sbb
jl
mov
dec
lcall
dec
cld
testl
xor
jbe
addr16
imul
jecxz
and
pop
mov
push
movsl
lret
in
pusha
sub
add
or
lods
inc
sbb
lods
sbb
stc
jge
cmp
mov
les
sbb
mov
cltd
hlt
or
pop
add
cmc
pop
jmp
fdivp
cmp
mov
pushf
testb
out
aaa
jp
les
pop
jp
ja
mov
ret
call
cmp
and
loop
pusha
cmp
pop
loope
cmp
dec
mov
mov
push
lahf
cmp
xchg
cmc
fisubrl
gs
jmp
add
cli
and
jge
mov
add
fmuls
mov
xor
loopne
add
mov
fnstenv
jns
aad
xor
inc
cmpsl
or
jnp
out
call
in
mov
andl
mov
inc
inc
cmpsl
inc
push
lea
xchg
lahf
dec
test
xor
rcr
gs
lods
imul
mov
std
xchg
xchg
mov
push
out
repz
rolb
jecxz
mov
mov
and
xchg
cs
jl
add
popl
cmc
clc
jno
jnp
ja
inc
add
cs
aaa
jmp
dec
mov
mov
idiv
incl
sbb
xor
fisttps
xor
mov
mov
enter
xor
mov
insl
in
loopne
sahf
scas
inc
enter
xchg
call
add
shll
inc
mov
or
fwait
imul
insl
data16
sub
in
dec
int3
loope
mov
imul
bound
xchg
push
das
in
lods
ljmp
add
xchg
aam
jp
add
inc
cmp
inc
jae
inc
or
sub
in
push
or
in
sub
add
stos
mov
leave
enter
mov
adc
imul
jg
push
add
sarb
test
mov
push
pop
xchg
outsb
lock
inc
cmp
fwait
gs
jbe
and
out
hlt
mov
jg
lahf
movsb
mov
jne
icebp
int
add
jecxz
or
pop
ds
sbb
lods
mov
jb
jmp
xchg
repnz
mov
pop
imul
or
es
enter
push
fwait
sahf
xchg
mov
arpl
mov
call
dec
sbb
lods
outsl
outsb
jge
pop
push
xor
fcoms
test
cwtl
xor
adc
out
fsqrt
dec
mov
xchg
test
loope
mov
fidivs
xor
pop
sub
xor
lahf
dec
push
jae
add
leave
mov
and
loopne
inc
enter
rolb
lods
mov
imul
es
out
or
pop
jbe
sbb
daa
push
push
and
out
xchg
jb
lods
sti
pop
out
cmpsl
pusha
sahf
rolb
movsb
loop
mov
es
jl
inc
in
mul
sahf
fdiv
sub
fdivrs
scas
loop
mov
loopne
pop
sub
popa
and
inc
imul
pop
or
mov
ljmp
loopne
popa
or
push
mov
jbe
inc
out
psrlq
dec
daa
out
dec
pushf
in
insl
popf
imul
dec
sti
xchg
stc
xchg
mov
cmp
pop
mov
cltd
stos
nop
sahf
cmpsl
xor
mov
lret
add
lret
pop
sarl
pop
mov
push
inc
movsl
imul
inc
ret
xchg
add
jne
stos
push
xlat
dec
lahf
inc
lea
sub
jge
add
ja
inc
mov
jns
les
mov
jp
mov
dec
mov
inc
sbb
shlb
into
addb
std
pop
jo
jnp
sbb
rcrl
mov
outsl
ret
in
shrl
or
fwait
mov
pop
sub
std
testb
stos
sbb
xor
iret
incl
fdivrs
cmpsb
test
inc
cli
pop
pop
sub
aad
or
adc
jae
test
mov
mov
fdivrp
add
fisttpll
stos
ss
jg
icebp
loope
scas
mov
jae
and
sarb
out
ss
mov
pop
dec
cmpxchg
jns
lcall
push
data16
mov
lret
pop
jge
sub
movsb
aaa
insl
push
ss
stos
jmp
dec
jnp
loop
cmc
mov
jns
orl
div
stos
ja
push
loope
jbe
adc
xchg
mov
jbe
sahf
test
inc
mov
imul
push
mov
mov
push
cli
fiadds
xchg
push
jmp
sahf
aaa
sbb
adc
jae
xchg
loopne
fnstcw
mov
cltd
in
in
cltd
dec
das
xchg
pop
iret
push
push
repnz
and
mov
cmp
cmp
inc
or
xor
out
mov
adc
mov
cli
std
ljmp
cmpsb
enter
or
cld
push
jb
or
pusha
cmpb
mov
ficomps
and
cs
aam
jne
jns
cmp
xchg
lret
add
notl
test
push
pop
les
stc
dec
inc
adc
pop
adc
aas
jl
jmp
sub
pop
fwait
mov
sbb
repz
mov
fcmovnbe
filds
add
mulb
dec
xchg
inc
or
adc
imulb
div
cli
shlb
mov
jle
out
out
mov
cmp
xor
add
int3
mov
ffreep
jp
inc
mov
push
dec
mov
add
sbb
sub
mull
xor
mov
bound
push
jp
into
pop
sub
stos
inc
ret
jecxz
cmp
in
fwait
mov
xor
icebp
aad
mov
popa
aam
repz
xchg
rclw
arpl
in
insb
outsl
lahf
addb
pmulhw
fadd
test
cmp
in
out
inc
push
mov
out
xor
das
cmc
call
fcmove
mov
lahf
inc
add
andb
push
enter
icebp
lods
pop
shl
xor
jae
add
test
adc
adc
test
jmp
fnstcw
inc
or
ror
xchg
aas
add
test
pop
add
mov
mov
rcr
out
outsl
inc
xchg
mov
movsl
inc
xchg
push
in
sbb
sbbl
push
flds
cli
and
imul
jnp
or
mov
jno
cmpb
outsb
jg
xlat
call
adc
xchg
or
fwait
jmp
push
scas
xlat
imul
repnz
mov
xor
adc
pop
fidivl
jb
cmp
ffreep
adcb
ds
jnp
push
add
sub
js
adc
ret
xor
in
adc
loop
push
push
inc
sbbl
mov
sbb
or
aad
mov
sub
jp
fwait
mov
arpl
jo
loope
aaa
jne
mov
dec
and
rorb
movsb
jae
mov
aas
inc
jae
inc
sub
mov
push
fs
pop
test
mov
or
lret
jmp
cmp
orl
fucomip
add
mov
mov
add
fs
mov
stc
xchg
mov
xchg
adcl
lods
fisubrs
push
out
jbe
icebp
jne
jl
stc
cmp
inc
jg
dec
push
loop
ljmp
lret
add
arpl
test
cmp
stos
mov
insb
mov
sbb
pusha
in
jb
inc
cmp
cmp
stos
cmp
idivb
js
or
pop
popf
sbb
sbb
popf
or
lret
mov
outsb
test
pop
inc
fdivs
dec
xor
and
or
roll
dec
sub
stos
jbe
sub
add
mov
jno
mov
repz
insl
aas
repnz
push
cld
push
cli
xchg
push
in
cwtl
xchg
ret
rorl
fldt
imul
inc
inc
mov
adc
or
jae
and
dec
adc
push
pop
lret
ljmp
mov
jp
insb
jmp
pop
xor
push
scas
in
mov
ret
leave
add
sbb
and
mov
dec
cmpb
cmp
adc
push
push
mov
pop
and
or
inc
pop
in
bound
xchg
add
fistpll
jl
push
push
mov
xchg
or
icebp
nop
or
out
inc
inc
insb
sti
jns
sti
sub
test
pop
loop
jmp
ret
fsubr
in
push
jb
adc
adc
std
stos
cli
and
mov
and
xchg
pop
mov
das
sbb
push
or
lret
rolb
xacquire
test
jae
adcl
jb
test
xchg
mov
and
ljmp
push
xchg
popl
push
push
shll
push
xchg
jle
ret
lcall
push
notl
xchg
inc
rcl
mov
leave
cmp
aas
xor
add
xor
arpl
and
mov
int3
stc
jno
mov
sub
mov
mov
xor
push
ret
cs
aas
out
stc
mov
fwait
mov
mov
xor
push
gs
aas
xchg
push
xchg
add
ss
xchg
inc
movsb
lea
outsb
push
repnz
push
push
std
push
jno
sbb
lret
dec
and
pop
faddp
aam
bound
and
xchg
jne
mov
push
ret
addr16
sbb
fistpll
addr16
push
and
jnp
inc
jns
xlat
cmp
data16
cmpsb
imull
addb
cmp
cmp
cltd
xor
dec
test
pop
das
xchg
cmp
fwait
pusha
push
andl
pushf
or
mov
popa
in
fldl
insl
pushf
sbb
rcll
sbb
mov
bnd
sbb
ret
mov
xlat
out
sarb
pop
or
jge
fwait
add
and
roll
pop
lods
xchg
or
jmp
jo
arpl
int3
mov
int
xchg
pushl
jp
lret
mov
or
inc
int3
cmpsl
outsl
mov
jns
gs
je
fsubs
adc
ret
imul
nop
and
outsb
cld
lret
dec
loopne
cmpl
cmpsl
mov
sub
and
faddl
scas
and
popf
repz
fidivl
scas
pop
test
and
adc
push
rorl
cld
sub
rcrl
pusha
into
mov
pop
add
push
dec
cmp
inc
cmc
mov
repnz
cld
push
das
push
or
lahf
ds
inc
stos
addr16
in
mov
out
push
inc
in
mov
adc
shrb
sbb
xchg
push
inc
scas
lea
sbb
xor
js
push
lcall
icebp
int3
popf
fnsave
ret
mov
cmpsl
mov
mov
mov
sahf
imul
clc
add
hlt
stos
js
adc
gs
iret
fwait
out
xchg
ret
inc
loopne
bound
div
xchg
cmp
rcll
xchg
call
push
mov
xor
loopne
jae
jae
mov
xor
add
into
sarb
or
xchg
iret
mov
mov
adc
fcmovnu
repz
adc
jno
sbb
das
pop
pop
mov
cld
push
cld
loop
mov
sar
mov
loope
outsl
jb
addr16
cli
arpl
cmp
rolb
data16
mov
jmp
jb
pop
popa
mov
and
jmp
je
ret
popa
pop
sbb
lcall
mov
push
ss
mov
orl
ja
rclb
adc
sub
repnz
mov
mov
stc
jmp
sar
inc
hlt
xor
adcl
imul
xlat
push
jns
cmp
push
in
fdivp
cmc
fs
js
xchg
jae
xor
xchg
sub
imul
in
lods
arpl
movsb
pop
test
jp
lods
or
mov
xchg
pusha
out
popa
add
cwtl
xor
lock
push
adc
insb
lods
push
aam
ret
sbb
jne
aam
mov
dec
mulb
leave
mov
and
mov
dec
or
jbe
mov
cmpsl
icebp
movb
mov
jbe
into
outsb
jb
cmp
mov
popa
mov
not
jmp
mov
add
jl
add
iret
clc
jb
add
inc
pop
lret
dec
pop
push
cltd
rcrb
xchg
pop
mov
outsb
pop
sub
pop
out
fstps
in
nop
dec
js
or
repnz
xor
loop
int
xor
push
ficoms
inc
jbe
sub
pop
adc
jge
loopew
in
std
or
fcmovnbe
pop
out
out
and
cmp
adc
sub
lret
cltd
fmulp
jge
hlt
cmp
lret
sbb
jle
movsb
adc
xchg
xlat
arpl
sbb
cwtl
in
pop
rolb
sbb
es
pop
push
in
test
pop
inc
add
subb
mov
or
jge
sub
ret
je
rcrb
shlb
push
cmp
insb
lods
and
sbb
lret
xor
ja
mov
int
xor
inc
fcmovb
push
jl
and
in
repnz
rcll
push
cwtl
fsubp
jno
test
nop
sub
mov
and
addb
scas
ret
jp
jge
mov
push
daa
loopne
dec
xorb
add
popw
cmp
stos
lods
lods
pop
cmpsb
aad
movsl
mov
popa
add
mov
xor
movb
bound
inc
sbb
mov
or
rclb
out
aam
call
and
pop
lods
sbb
cmc
mul
rcrl
jecxz
mov
subb
push
sar
and
sahf
lahf
push
cmp
loopne
ret
repnz
std
xchg
mov
cmp
out
hlt
iret
push
xlat
sub
add
mov
xor
int3
sarl
je
mov
or
inc
out
out
push
cmpsb
fidivl
fs
lahf
rclb
mov
rcl
rcrb
add
shrb
push
inc
je
or
push
adc
cld
lock
ss
out
clc
movsb
sub
call
add
nop
cmp
vmovaps
aaa
add
loopne
lcall
aam
sbb
jae
loopne
pop
xchg
push
divl
lock
xchg
sbb
or
int
and
cmc
cmp
xchg
cmp
lret
pop
adc
ljmp
pop
or
cmp
mov
dec
arpl
or
fiadds
outsb
adc
pushf
popf
push
sahf
jle
into
pop
js
mov
outsb
out
dec
mov
pop
shrl
and
subb
and
xor
mov
ljmp
icebp
xchg
and
enter
insl
jne
sbb
inc
int
xor
adc
inc
pop
rol
lret
outsl
sub
rcrl
data16
cmpsb
stc
pop
pushf
or
popa
dec
add
jle
or
mov
fwait
push
ret
push
dec
xlat
xor
lcall
lds
jb
jg
and
ds
pcmpeqw
jp
or
test
cmp
or
mov
notb
ss
and
push
fwait
test
or
add
scas
push
stc
xchg
sub
xchg
dec
mov
mov
mov
imul
ficompl
loope
cmp
mov
popf
push
mov
loope
sub
adc
lcall
dec
scas
jp
mov
cmp
cli
inc
jb
aaa
pop
mov
lock
out
out
mov
cmpsb
outsb
test
mov
dec
insb
mov
call
into
push
arpl
outsl
push
cmp
movsb
mov
xor
mov
add
jns
and
ja
dec
sub
out
xor
adcl
pop
ljmp
push
scas
add
xor
out
jbe
pop
sbb
cmc
push
test
loope
cli
nop
dec
xchg
sti
ss
test
mov
rorb
jo
mul
fdivrs
push
jns
inc
push
ror
sub
inc
insl
test
mov
push
push
in
sub
fs
pop
aaa
movsl
mov
sbb
xor
enter
jne
fdivrl
cmp
adcl
xlat
dec
popa
incl
loope
mov
sbb
sbb
mov
rolb
xor
das
add
ret
mov
shll
cmp
pop
popf
sarl
lods
mov
jp
test
loop
cltd
pop
int
iret
rclb
dec
mov
sti
fbld
mov
mov
cmp
in
xor
mov
fwait
mov
dec
andb
test
outsb
xchg
dec
dec
jno
repnz
repz
test
push
mov
ret
lahf
or
mov
and
jb
sub
je
xor
xor
adc
mov
sub
popf
mov
jno
mov
sbb
xchg
ljmp
fistps
imul
dec
xchg
push
cmp
jmp
inc
pop
adc
sbb
inc
leave
adc
cwtl
or
cmp
dec
add
inc
xor
gs
cmp
icebp
xchg
and
xlat
push
hlt
cmp
cmp
stos
cmpsb
xlat
adc
jle
in
or
pop
js
mov
cmpsb
cmp
mov
pop
dec
sub
je
inc
sub
ss
dec
pushf
cmp
mov
loopnew
lods
add
jo
je
addr16
sub
ljmp
int
pop
pop
cmp
push
shlb
adcl
outsl
shlb
mov
lret
ss
loop
adc
xchg
movsb
xchg
jle
xlat
jmp
xor
fidivrs
sar
aaa
bound
push
pop
adc
outsb
dec
xor
decb
push
jg
pushl
jbe
sbb
mov
cld
lahf
lret
test
xor
das
push
xor
inc
cltd
mov
mov
adc
out
adc
lods
pop
adc
adc
adc
xchg
cld
test
shl
lahf
lds
xlat
mov
fiadds
jp
rcrb
pop
int3
subb
cltd
sbb
mov
mov
cmp
movsb
cli
fnsave
clc
xchg
dec
sbb
sub
push
lock
mov
cmc
mov
es
push
daa
ss
dec
or
mov
cmp
dec
repnz
ds
fildl
add
mov
test
popa
sub
shlb
or
repnz
jae
fldcw
rorl
es
inc
cs
xor
or
pop
shlb
lods
and
xor
mov
cwtl
mov
flds
les
jne
mov
cld
sarb
mov
lret
divl
mov
mov
jg
outsb
daa
sbb
in
nop
jbe
xchg
mov
cmp
nop
mov
mov
mov
pusha
push
clc
pop
popf
in
aam
dec
mov
jge
aad
ds
push
pusha
mov
call
mov
andl
arpl
loopne
fsubrl
add
mov
fdivl
xor
aas
or
subl
inc
push
sub
les
dec
stos
inc
in
inc
leave
push
xor
sarl
xor
pop
dec
cmpsl
and
xchg
mov
insb
roll
cmpsb
push
lret
cmc
lods
ficompl
aas
test
add
test
fwait
pop
dec
sub
cmpsl
sti
add
push
cmp
inc
into
sbb
sbb
push
js
imul
cmpsb
xor
mov
pop
sbb
test
ffree
movsb
ror
pop
add
sbb
popa
dec
cwtl
adc
push
popa
fisubrs
ja
mov
sbbl
and
cmp
int3
dec
dec
mov
push
xchg
sub
data16
mov
adc
cmc
aaa
sub
shlb
out
dec
inc
rorb
mov
ljmp
enter
cwtl
cld
test
sbb
loop
and
hlt
mov
lea
jmp
sbb
cmpb
pop
push
out
mov
pop
hlt
jae
test
or
sbb
xchg
loop
aam
mov
mull
sub
lea
shl
fs
test
lret
repnz
into
push
lds
jl
dec
sub
dec
int3
mov
cmc
testl
inc
mov
shlb
imul
xor
pop
ds
imul
daa
lcall
cli
bound
dec
and
or
das
sbb
or
lcall
adc
aas
xor
mov
push
ja
and
ret
rclb
jb
icebp
sarb
jns
push
daa
into
mov
mov
data16
mov
cmp
outsb
jmp
lock
xor
jle
xor
stc
leave
out
mov
fiaddl
lret
lods
or
mov
leave
add
and
sahf
cmpsl
sub
sub
test
decl
inc
mov
sub
stos
lods
cmpsl
dec
mov
push
out
pop
stos
mov
add
rcrl
sub
xor
into
mov
sub
mov
mov
cmp
push
bound
mov
xor
dec
jge
ss
xor
adcb
shlb
push
cltd
inc
push
push
cmc
imul
jge
dec
cwtl
fcmovne
push
pop
movsb
mov
pop
aaa
mov
popf
setge
sub
sahf
into
sbb
ror
sub
test
cwtl
jp
aaa
out
and
aam
fcoms
mov
push
xor
mov
and
pop
clc
mov
es
movsb
dec
add
ss
inc
loop
insb
cmp
add
pusha
xchg
fnstenv
mov
inc
iret
cmpsl
fcompl
divb
mov
bound
and
jecxz
pop
in
inc
pop
shrl
jg
cmp
repnz
mov
negl
std
popf
mov
push
xchg
sbb
into
jmp
sbb
push
mov
fmuls
rclb
iret
loope
sbb
lods
xchg
shll
testl
outsb
pop
jne
in
or
jbe
test
lahf
mov
mov
adc
cmp
jl
imul
sub
in
adc
jno
jecxz
je
dec
adc
adc
jecxz
in
mul
xor
pop
xor
pop
push
pop
in
adc
cmp
dec
push
pushf
divl
adc
and
xchg
cmp
or
test
fs
push
xchg
repnz
sub
pop
inc
movsb
mov
dec
sbb
mov
lcall
adc
mov
jno
xor
pop
les
cmp
xlat
inc
push
rorl
mov
rcl
inc
test
loop
sub
adc
mulb
cmp
inc
or
cmc
imul
jg
leave
or
cmp
arpl
fmuls
or
add
mov
aam
data16
sbb
fadds
inc
push
sti
jmp
push
lock
lret
pop
fwait
out
hlt
ds
pop
or
lock
add
push
pop
jl
mov
sbb
shl
jmp
xorl
dec
fsubrs
xchg
adc
sti
mov
hlt
mov
sub
in
insb
mov
in
jp
mov
sub
jp,pn
sahf
lret
add
lods
or
jecxz
add
test
jno
fwait
test
mov
mov
jl
dec
pusha
test
fiadds
and
in
mov
loop
ret
push
pop
pusha
sub
pop
fucomp
in
mov
and
cmp
addr16
mov
bound
xor
sbb
scas
cmp
and
mov
fwait
push
imul
push
sbb
pop
adc
mov
cmp
adc
jecxz
pop
cmp
mov
insl
orb
cmpb
lret
add
imul
pusha
mov
adc
movsl
jp
push
out
xchg
xchg
imul
shlb
inc
pusha
push
or
jns
inc
fisttps
fisubrs
mov
test
dec
push
or
adc
mov
xor
shll
pop
adc
in
adc
lahf
push
cmpsb
adc
push
loopne
shl
rcr
xchg
and
repz
and
cmp
jecxz
mov
cmp
sub
test
fidivl
xchg
jle
or
cwtl
lea
out
in
andl
inc
pop
xchg
pop
xor
push
ds
mov
cwtl
int
les
dec
add
xchg
scas
sub
mov
adc
popa
adc
daa
stc
mov
setl
mov
jmp
pushl
xlat
js
daa
mov
out
xchg
bound
int3
and
or
mov
sbb
scas
dec
int
dec
movups
dec
mov
fistl
push
add
mov
mov
popa
jns
loopne
sahf
add
cld
push
mov
movsb
sub
push
in
jb
adc
cmp
or
inc
sub
lret
cwtl
adc
int3
std
cmpsl
test
pusha
inc
mov
adc
pop
jmp
jns
fsubrl
or
sti
cltd
inc
loope
scas
mov
pop
adc
push
ret
fistps
rcrl
jns
icebp
lret
sbb
dec
cmpsl
aad
xor
lcall
aam
data16
jge
fwait
mov
negb
repnz
push
and
icebp
mov
mov
loopne
roll
push
mov
outsb
adc
test
xor
jnp
dec
jne
xor
mov
sub
jo
xchg
jns
jnp
xorb
je
xchg
sub
gs
fucomip
sbb
loopne
imul
and
insl
sarb
pop
in
xchg
clc
test
test
push
inc
imul
sahf
shll
jb
repnz
pop
popa
test
scas
xchg
or
xor
jne
pop
fs
dec
scas
jle
dec
adc
inc
leave
sub
xchg
xchg
push
adc
pop
xchg
push
es
and
in
xor
xchg
outsb
cmpsl
mov
mov
outsl
xchg
test
dec
inc
insl
add
jae
shlb
sbb
mov
lret
xchg
mov
sbb
pop
ds
jno
out
xchg
push
nop
mov
and
imul
push
adc
xlat
cmp
adc
pop
mov
xlat
in
add
mov
cli
adc
adc
inc
mov
mov
xchg
jp
and
outsl
adc
jmp
mov
cmp
je
sbb
lahf
nop
xchg
adc
dec
mov
jb
nop
aad
add
push
cmp
jne
adcl
shll
dec
dec
xchg
sbb
jo
call
and
mov
inc
gs
sahf
in
push
sahf
dec
lahf
and
rolb
test
sub
adc
cmpsl
mov
cltd
lds
xchg
push
ret
aaa
mov
stos
enter
xor
mov
mov
cmp
outsl
adc
ds
adc
aas
xlat
push
sti
jmp
mov
mov
outsb
aam
jb
fistps
mov
pop
push
in
scas
mov
out
add
and
rcr
outsb
aas
stos
nop
lahf
or
mov
inc
cmp
shrb
pop
inc
adc
jnp
pop
cwtl
out
les
mov
stos
orb
push
jbe
popf
sub
adc
pop
cs
add
sub
add
mov
dec
xchg
dec
leave
push
fs
or
xchg
pop
int
push
dec
popf
gs
jns
dec
insl
shll
faddl
lds
mov
sub
stos
lret
adc
loop
dec
mov
lods
sbb
orl
jg
in
push
sbb
xchg
cmp
sbb
inc
sbb
shr
cmp
cmp
addr16
arpl
out
scas
mov
xchg
pop
inc
jnp
mov
and
mov
popa
xor
jnp
je
mov
or
dec
sbb
mov
add
adc
insb
out
mov
xchg
iret
or
or
or
shrb
cmpsl
fiaddl
movsl
in
rorl
sarb
jb
enter
lcall
xor
jb
push
sub
je
out
fwait
outsb
jmp
icebp
rorb
hlt
aad
sub
dec
je
cmp
out
andb
es
pop
imul
jbe
leave
rcrb
mov
mov
jl
add
aas
xchg
sbb
mov
sub
push
xchg
add
adc
mov
sbb
ja
jns
fadds
in
enter
mov
pop
mov
cmpsb
xchg
xchg
cs
mov
push
rcll
stos
in
push
push
adc
fidivrs
fidivrs
pop
mov
cld
pop
aad
sbb
sahf
mov
lcall
hlt
in
sbb
cmp
sub
jne
adcl
and
pop
or
lret
stos
fiadds
imul
nop
daa
aaa
or
enter
call
pcmpgtd
or
sub
pop
pop
pop
mov
add
inc
lcall
cmp
cs
leave
dec
daa
jmp
jl
bound
or
arpl
xor
xchg
mov
idivl
movsl
mov
or
pop
gs
insl
dec
cmpsl
repnz
xchg
shrl
popa
mov
adc
mov
popa
adc
rol
lea
mov
shlb
xor
jne
out
in
sbb
pop
xor
mov
push
lds
or
jg
daa
pop
mov
mov
mov
pop
mov
push
push
leave
mov
hlt
jp,pn
fcomps
or
sub
clc
sahf
jecxz
xchg
jmp
mov
mov
xorb
dec
cli
arpl
ljmp
subb
imulb
sub
dec
aam
jnp
fisttps
stos
xor
adc
adc
mull
push
lret
iret
push
adc
xor
push
pop
mov
inc
jbe
and
push
xchg
insl
xor
lods
and
imul
jle
mov
xchg
out
in
leave
jnp,pt
movsb
cmp
int3
push
and
mov
stc
sub
fs
dec
cmp
dec
mov
cmp
cmp
xchg
xchg
ds
clc
int3
push
fisubrs
lods
clc
jmp
sbb
or
jnp
add
lock
add
add
xchg
int
xor
add
inc
add
ljmp
push
orb
mov
mov
dec
sbb
push
lods
jp
and
in
sti
daa
push
xchg
mov
and
out
add
push
xchg
shl
std
and
ficoms
mov
loope
push
and
push
push
aaa
and
mov
sbb
shll
push
in
sub
cli
data16
xor
iret
push
jmp
int
xchg
push
icebp
mov
sahf
pop
in
clc
lods
cmc
fisubrl
sub
out
pop
mov
pop
popf
repz
cmpsb
xorl
cltd
jg
push
mov
mov
mov
jg
add
and
sti
jnp
cmp
xor
xor
es
cmp
pushf
mov
aaa
push
xor
out
out
into
mov
fnstsw
ret
lds
mov
xor
or
repz
popf
stc
inc
cld
pusha
les
pop
pop
adc
and
loopne
mov
adc
sub
out
je
jnp
rolb
ret
popf
adc
and
ret
push
jmp
xchg
xchg
and
inc
sbb
in
lds
mov
sbb
imull
hlt
inc
xchg
movb
pop
mov
add
mov
push
xchg
roll
les
lock
mov
fbstp
add
sarb
icebp
shrd
fildll
daa
jne
stos
add
and
arpl
insl
mov
pop
xor
and
mov
sarl
mov
and
movd
cmp
rorb
fst
add
imul
movsb
orl
shll
mov
cwtl
cmp
out
add
stos
sub
mov
mov
xor
lret
jne
ds
dec
in
xchg
inc
outsl
aaa
xchg
cmp
or
and
mov
xor
push
fimull
js
jns
mov
out
and
cld
mov
xchg
out
clc
sahf
lahf
jmp
movsl
lret
cmp
mov
icebp
sub
sarl
fstpl
or
shlb
dec
jne
and
mov
add
jne
test
call
and
mov
xchg
sbb
or
xor
cmp
jmp
mov
clc
or
cmp
mov
xchg
jbe
sub
sub
addr16
mov
loope
push
fldenv
enter
nopl
push
shll
inc
mov
faddl
je
and
dec
xchg
sbb
or
push
movsb
xchg
movsl
dec
jo
add
loopne
cmpsb
icebp
jmp
xchg
movsl
aaa
lods
xchg
or
scas
aas
fsubrp
out
inc
imul
fucomi
inc
fdivrs
leave
mov
sbb
and
lea
lock
jnp
push
mov
aam
outsb
data16
bnd
and
sbb
pushf
lret
dec
mov
sbb
mov
mov
dec
out
xor
xlat
fmull
mov
insb
or
es
dec
in
push
inc
dec
dec
jmp
and
or
imul
push
sub
or
jo
adc
cmp
movsb
mov
ja
push
or
movlps
dec
jbe
pop
lret
sbb
pop
cld
pushw
dec
fldcw
and
mov
cwtl
aad
cmp
popf
shlb
mov
jmp
shl
fcmovnbe
sbb
movsb
add
filds
mov
mov
xor
daa
mov
mov
jb
pusha
repz
adc
pop
and
jae
loopne
push
jp
sahf
dec
roll
mov
sbb
add
mov
aaa
out
sbb
fmull
jb
or
sub
fs
scas
mov
std
out
add
test
mov
lods
sti
insb
pop
adc
push
cmpsl
jnp
mov
out
ret
sub
push
xchg
mov
cmp
push
icebp
test
jg
adc
jle
cmp
dec
scas
fs
mov
into
cmpl
xchg
or
push
xchg
sub
add
mov
insb
add
xchg
ret
mov
sahf
or
enter
push
or
dec
jg
xchg
jae
lds
or
mov
out
lods
addr16
pop
in
mov
mov
mov
roll
mov
pop
js
inc
out
cmp
push
pop
push
jno
insb
jl
sub
ja
pop
loop
cmc
ljmp
xchg
out
cld
aas
ficompl
repnz
enter
aad
xlat
inc
mov
pop
cmp
mov
inc
orb
nop
sub
inc
js
jns
xor
adc
ss
dec
adc
and
mov
stc
hlt
fimuls
movsl
jge
mov
fisttpl
clc
pushf
sub
fs
pop
or
cmp
jb
push
sub
repnz
xchg
sbb
add
xor
xchg
test
int
jle
enter
add
and
jae
data16
ss
enter
inc
adc
push
cwtl
dec
sarb
cmp
sbb
jp
pop
out
clc
sub
push
pcmpeqw
jo
and
xor
sbb
test
ss
dec
lock
sbb
ja
push
pop
aad
inc
sbb
push
add
ret
or
or
mov
sbb
jle
mov
out
push
adc
sbb
cwtl
icebp
and
inc
mov
gs
mov
push
nop
mov
les
pusha
or
clc
cmp
dec
out
adc
lock
movd
aas
stc
jg
testb
pop
or
add
or
aas
adc
clc
push
pop
int3
jmp
fldt
sbb
mov
or
popf
test
xor
mov
ret
push
fisubs
push
or
in
pusha
dec
cs
mov
adc
jo
andl
cmp
fwait
and
xchg
sub
loope
mov
mov
pushf
xor
jg
in
cmp
jmp
cmp
or
fiadds
popf
fdivs
mov
das
push
and
test
mov
arpl
mov
sbb
and
js
je
adc
arpl
mov
or
movsb
pop
imul
xchg
insb
es
es
shl
and
loope
pop
mov
pop
push
jno
xor
fisubrs
loopne
mov
cmpsb
shlb
and
lret
js
xor
xchg
push
loop
jns
pop
insl
sbb
mov
and
lea
rcrb
shll
cmc
int
ret
mov
inc
jp
pusha
push
iret
cmp
int3
or
xor
mov
mov
stos
or
inc
sti
pusha
cmp
push
pushf
pop
rcll
mov
out
push
cli
in
jae
fmull
cmp
jmp
adc
push
stos
sub
cmp
loope
outsb
xor
clc
insl
dec
push
out
cmp
ljmp
and
add
fs
mov
test
adc
push
sub
mov
mov
dec
inc
sti
xchg
inc
mov
xchg
mov
in
push
cmp
enter
aad
rep
jb
adc
testb
icebp
shll
out
call
iret
fldcw
je
or
stos
sub
mov
mov
mov
nop
test
xorl
cmp
in
dec
bound
cld
xor
mov
mov
inc
pop
movsl
dec
mov
mov
rolb
fisttps
sbb
push
addr16
das
sarl
adc
dec
clc
pop
out
dec
dec
fnsave
mov
xchg
and
imul
pop
inc
out
pop
xchg
xor
data16
in
lret
pop
std
xchg
ja
test
je
lea
sbb
out
divl
jecxz
and
bnd
mov
cli
push
mov
jno
std
in
mov
mov
and
inc
push
mov
fsubr
sahf
stos
and
xchg
inc
jno
repz
scas
mov
add
add
push
clc
les
in
out
ja
std
xor
mov
rolb
andl
inc
pop
jae
ljmp
movsl
pop
push
add
add
les
dec
or
gs
push
xchg
add
mov
mov
push
cld
inc
imul
fdivr
cmp
sbb
test
lods
and
sti
es
pusha
scas
pop
dec
sbb
out
or
fdivs
lret
lret
inc
push
adc
push
shll
mov
imull
loop
fsts
sbb
pop
adc
sbb
cmpsl
lods
push
push
adc
pop
adc
sub
mov
inc
lods
sbb
jns
ret
adc
add
cli
imull
loopne
jae
paddq
movsl
dec
jge
popa
rolb
sbb
mov
les
pop
sti
push
fwait
js
out
add
popf
xchg
addr16
cmpsl
xor
mov
and
scas
xchg
mov
out
sti
add
xchg
mov
loop
scas
ret
fisttps
test
dec
in
lret
cmp
insl
sub
cmp
push
adc
xchg
insl
mov
daa
iret
pusha
leave
inc
aaa
ret
pushf
daa
push
push
pop
rcrl
cmc
adc
insl
enter
aam
sbb
lock
pushf
push
shlb
fwait
adcb
lds
movsb
leave
rcrb
mov
cmp
out
movsl
mov
pop
add
sahf
or
subl
adc
test
cmp
jbe
inc
insb
mov
mov
lock
addl
dec
xchg
fldl
push
add
mov
in
sbb
pop
mov
or
aad
imul
das
jo
imul
mov
jg
mov
pop
sbb
inc
dec
inc
test
daa
test
pop
stos
insl
push
decb
dec
jmp
clc
aaa
jp,pt
cli
icebp
shll
mov
cmp
testb
jo
and
sub
xor
dec
mov
inc
sbb
fcoml
fstl
insl
mov
jecxz
xchg
xor
xor
pop
inc
xor
addr16
out
popa
movsl
ja
pop
arpl
adc
sbb
les
adc
jl
fistps
movsb
cmpsl
xchg
inc
xchg
cs
scas
cmp
shrl
sbb
test
cmp
aaa
ffree
add
mov
xor
fidivs
std
push
sub
cmpsb
jge
gs
push
xchg
out
fbld
out
mov
dec
pop
mov
inc
mov
movsl
decl
repnz
test
dec
imul
xor
ljmp
inc
xchg
mov
fucomi
xlat
inc
push
sub
call
shl
mov
shrb
push
sub
lock
dec
mov
sti
call
jnp
mov
inc
lea
cs
mov
addr16
push
dec
push
or
mov
movsb
jmp
ja
sbb
adc
mov
loope
push
and
add
repnz
adc
mov
xchg
or
adc
push
lret
mov
outsl
jecxz
jae
jmp
mov
out
push
cltd
movsl
fiadds
jbe
sbb
outsb
andl
xchg
repnz
pop
inc
rolb
xor
push
shl
push
stos
aaa
stc
outsl
ficoml
sub
mov
cli
mov
push
xor
sbb
and
push
inc
xor
movsl
push
add
imul
adc
inc
arpl
push
ror
mov
insb
lods
push
je
jge
dec
xchg
mov
inc
in
cmp
jmp
jmp
dec
xchg
xchg
rcrb
sub
nop
loop
adc
ficompl
out
xor
mov
jecxz
rolb
push
xlat
xor
out
adc
dec
mov
sahf
pop
add
jae
imul
leave
cmp
ror
cltd
jnp
mov
repz
fwait
and
push
mov
cmp
xorb
enter
jmp
xchg
push
cmp
and
sbb
cli
adc
out
ljmp
in
xchg
aad
jmp
movsb
jne
aam
adc
mov
pop
adc
jg
pusha
movl
jne
push
mov
lea
lea
xor
xchg
mov
pusha
mov
jne
mov
std
push
idiv
jge
cmpsb
mov
mov
mov
add
data16
aam
faddl
jo
cwtl
arpl
test
movsl
or
pushf
cmc
cmp
call
or
movsl
push
sub
or
and
xor
fildl
adc
mov
cmpsb
dec
pop
inc
add
jecxz
cmc
add
mov
jmp
cmc
mov
add
arpl
iret
or
sub
gs
jmp
pop
lds
arpl
ss
sarl
and
mov
imul
outsb
jp
idiv
mov
test
mov
pop
jp
xchg
int3
inc
es
sti
jns
enter
aas
adc
inc
stos
cmp
mov
or
std
into
inc
mov
xchg
stos
xchg
fbld
mov
xor
mov
adc
mov
pop
cmp
push
loopne
movsl
pop
add
cmp
subl
xor
mov
int3
aam
daa
add
sbb
hlt
xchg
push
jbe
out
inc
shll
pop
mov
mov
hlt
ja
cmp
add
inc
pop
jns
sbb
mov
scas
adcl
hlt
mov
jg
sub
and
into
movsb
mov
lds
mov
push
data16
xor
push
cmpsb
xor
pop
cmp
jno
sbb
icebp
mov
int
mov
adc
fcom
jne
pop
fisttps
xor
movsl
push
clc
jbe
popf
add
xlat
jo
dec
lods
jbe
cmpl
subl
cmpsb
adc
adc
push
dec
popl
mov
mov
popf
mov
or
icebp
test
mov
pop
mov
cld
cld
and
push
mov
outsb
shrl
push
cmc
xor
xchg
rcrl
or
add
xor
xorb
inc
push
fildl
insl
out
test
xor
fs
mov
xchg
mov
jnp
adc
mov
adcl
aad
push
inc
test
out
xor
loopne
adc
mov
xchg
jg
xchg
mov
mov
hlt
jnp
faddl
insl
dec
aad
mov
sub
xor
mov
test
testl
push
fists
cmp
push
hlt
xlat
push
and
sbb
cmp
mov
push
int
ret
push
std
out
sub
jb
repz
stc
insl
sti
aaa
and
mov
popf
fadds
pop
in
add
pop
cmp
or
fcmovnb
pop
push
sarl
call
addr16
jge
mov
mov
outsl
and
jno
mov
aam
cmovo
pop
and
cmpsl
mov
fists
cmc
push
add
insb
iret
jae
sbb
mov
test
inc
jmp
addb
push
gs
xchg
lret
out
outsb
push
insl
add
add
sub
mov
add
rcrb
mov
loopne
or
or
cld
sti
aam
xor
out
lods
stos
repnz
cmpsb
fistpll
ja
xor
dec
in
jne
stos
jg
das
repz
int3
in
popf
lock
add
sbb
jb
int3
add
cmc
or
cmpsb
shrl
mov
sti
xchg
movsb
or
sub
xorl
testl
out
sbb
jp
mov
test
inc
inc
dec
add
mov
imul
dec
push
dec
movsl
pop
or
aaa
jno
mov
pop
mov
fidivs
mov
rclb
cwtl
outsl
add
mov
es
dec
lods
jg
sbb
or
loopne
push
pushf
movsl
inc
dec
jle
mov
xchg
int3
dec
ds
add
test
aas
jl
inc
inc
jg
mov
inc
dec
lock
sub
sarb
idivb
jb
push
insl
jne
mov
push
pusha
jbe
jae
and
jb
pop
pusha
jne
adc
sbb
sub
out
rcll
les
bound
fidivl
in
cmpsl
mov
adc
push
xchg
sub
mov
mov
cmc
loope
icebp
fdivrl
mov
or
in
jns
ret
xchg
mov
adc
cwtl
sbb
pop
add
ret
fadds
xor
cmp
jns
iret
cmp
mov
mov
int3
das
enter
mov
push
subl
or
out
dec
test
cmp
fwait
xchg
push
xchg
cmp
adc
stc
push
push
fmuls
jae
add
push
inc
jecxz
adc
sub
inc
mov
and
sahf
clc
mul
inc
xor
test
adc
mov
stc
ss
add
push
pop
jmp
out
push
out
cmp
push
push
pop
call
or
sti
push
rorb
pop
mov
imul
icebp
ds
adc
xchg
es
and
orl
popl
fsubrs
enter
adc
in
fisttpll
lea
jmp
mov
cmp
faddl
imul
outsl
repnz
push
and
pop
shll
mov
jb
adc
ja
shrl
test
test
int3
lods
ja
xchg
cmpsb
negl
jb
push
push
mov
repnz
xlat
in
mov
lods
fistps
and
enter
mov
imull
mov
in
mov
push
fisttpll
aas
out
out
add
xchg
sub
daa
frstor
out
pop
push
mov
or
rclb
pop
sarb
mov
sbb
test
jmp
ret
jns
clc
scas
sub
pop
sbb
pop
outsb
mov
mov
shlb
lods
mov
or
add
and
ljmp
dec
loopne
in
ss
call
sub
loope
pcmpeqb
fidivrl
outsb
xor
shrb
dec
fbld
push
and
inc
add
cld
cli
push
test
jecxz
adc
call
mov
dec
sbb
push
xor
adc
mov
sbb
xor
pop
sbb
inc
pop
imul
stos
pop
sti
jle
imul
push
and
nop
mov
add
sub
fistpll
push
test
push
push
inc
imul
js
add
xor
sbbb
test
xchg
mov
push
pop
inc
lret
addl
pusha
or
cltd
cmpsl
cmp
jo
mov
or
push
pop
jae
cmp
jl
cwtl
lea
mov
pop
jle
les
fmull
iret
push
cwtl
inc
test
add
fwait
pop
test
stos
push
ret
pusha
hlt
lcall
add
push
rorl
jae
adc
scas
and
or
ds
dec
mov
jne
pop
imul
fildl
aam
out
jae
ret
jne
out
cmpsl
and
imul
adc
cmp
jle
jnp
push
jl
insl
movsl
pop
push
outsb
xchg
and
xchg
mov
jmp
or
stos
jne
cmpl
es
and
xchg
sub
jecxz
mov
aas
push
lcall
pushl
imul
jnp
jmp
dec
out
js
lea
push
stos
lock
jnp
lret
jl
imul
jle
cmpsb
dec
movsb
fbld
stc
lahf
hlt
iret
mov
test
and
lods
sbb
arpl
mov
pusha
lret
in
daa
andb
pop
lock
inc
jae
jae
sbb
xor
test
lods
pop
jae
lods
hlt
in
lret
aas
cmp
push
mov
dec
es
movsl
push
mov
mov
cmp
xor
push
sarb
aam
leave
add
sbb
add
mov
xchg
rcll
xorb
and
or
incb
inc
ds
or
sti
out
mov
push
ss
fsubrl
sub
cmp
sbb
loop
test
adc
xor
cmp
adc
xor
mov
nop
dec
out
sarl
push
aam
movsb
fmuls
addr16
cs
or
push
mov
and
out
pop
dec
shl
daa
inc
jne
fyl2xp1
adc
pop
std
mov
mov
jo
or
and
test
bound
adc
sarb
iret
and
loopne
cs
push
push
repz
sbb
pop
lret
or
mov
mov
test
test
rcrl
imul
mov
dec
inc
and
or
jge
hlt
int
fucompp
cmpb
lret
add
jp
jl
cmp
pop
popa
mov
scas
mov
or
or
pop
mov
insb
cmp
jb
xor
sbb
pop
rorb
adcb
addl
dec
cli
stos
cli
cwtl
adc
xchg
in
sti
repz
xor
jbe
cmpps
push
cmp
mov
cld
pop
leave
pop
aas
sbb
add
iret
orb
je
rorl
out
xchg
cmpsl
daa
inc
sub
mov
and
out
stos
cmp
push
sub
push
enter
adc
adc
inc
movsl
xchg
jbe
fcoms
frstor
addr16
xchg
loop
cmp
pop
mov
lret
loop
jge
mov
in
pop
adc
push
push
push
dec
push
call
jno
mov
out
push
pop
cwtl
sahf
in
mov
xor
xlat
jbe
lds
adc
add
jnp
or
test
pop
movsb
xor
out
shrb
pop
dec
lock
pop
scas
arpl
jbe
in
call
mov
jo
sahf
jns
repnz
dec
cltd
adc
add
sbb
dec
sub
cmp
insl
icebp
les
test
mov
xchg
pop
arpl
in
outsl
daa
inc
cmc
add
jmp
cmc
mov
decb
mov
out
je
xor
sub
cmpsl
cmp
xchg
adc
cli
addr16
jbe
shll
jns
mov
cmpsl
push
ret
sub
arpl
ret
iret
pop
cmpsb
popa
mov
xor
push
in
call
sbb
mov
push
test
sarb
dec
sbbb
loop
sub
movsb
mov
clc
js
les
lea
lcall
in
fisttpll
clc
sub
push
sti
push
out
cltd
mov
dec
sub
call
call
aas
ss
mov
jo
or
shr
rcrl
push
arpl
mov
test
sbb
adc
shr
push
iret
adc
imul
shrb
aaa
fldcw
cltd
fidivrl
cld
add
aam
push
popf
xor
ss
imul
sbb
push
test
mov
les
lahf
pop
int
and
test
jnp
sbb
pop
test
mov
filds
add
cmpsl
test
sub
xchg
adc
jb
cmc
stos
pop
out
rcrb
jns
stos
xor
adc
sub
cmc
sbb
push
dec
dec
scas
jmp
int
adc
mov
xchg
scas
push
ljmp
adc
pextrw
dec
xor
xchg
stos
push
in
in
push
jle
cmpsb
mov
inc
sbb
rol
aam
inc
ss
mov
xor
daa
popa
les
test
insl
in
ret
fsubl
jmp
fnstcw
daa
cli
jl
mov
dec
or
xor
push
mov
fdivrl
or
sar
push
push
jle
adc
dec
xor
loopne
sub
mov
sti
mov
iret
sub
cmpsl
daa
ja
cmp
push
push
loopne
pop
inc
into
pop
mov
dec
push
jbe
enter
xchg
aad
enter
sbb
xor
and
jmp
mov
mov
scas
hlt
rep
or
inc
jmp
sbb
test
sub
pop
ret
repnz
movd
mov
int
fnstsw
cltd
or
jne
push
outsl
pop
ret
js
mov
jp
mov
mul
jle
fnstcw
rol
push
and
call
mov
sub
sbb
scas
mov
insl
sbbl
xor
ret
add
lret
adc
lock
lahf
xlat
dec
inc
mov
jo
xchg
into
pop
sbb
out
dec
pop
sbb
dec
mov
out
adc
scas
or
jge
in
pop
fildl
fucomip
sub
pop
lods
mov
int3
cmp
in
and
pop
add
pop
push
add
imull
pop
lods
mov
and
mov
stos
aaa
mov
push
sbb
out
imull
sub
dec
dec
es
addr16
mov
inc
pushf
mov
outsl
and
inc
movsl
cmp
or
aad
pop
add
adc
cmp
cmpsl
cmp
mov
lods
in
or
mov
inc
jg
mov
adc
push
dec
xchg
jmp
inc
hlt
dec
xchg
loop
mov
test
mov
push
arpl
xor
or
loop
stos
imul
je
adc
pushf
sub
into
out
rcl
test
jo
sub
add
clc
fneni(8087
call
hlt
cld
mov
inc
pop
decb
mov
test
dec
cmp
notb
adc
sbb
sub
add
mov
or
jb
jg
mov
xchg
mov
fcoml
add
daa
stc
push
mov
icebp
inc
rolb
or
sahf
gs
les
pop
popf
mov
adc
test
sti
jbe
jne
mov
mov
push
outsb
jno
mov
xor
shrl
cmp
mov
jp
mov
fcmove
fsubrs
notb
mov
xchg
lcall
mov
mov
pusha
rcr
fcmovnu
cwtl
jno
gs
pop
inc
imul
in
fbstp
cmpsl
repz
lods
nop
sarl
push
mov
sub
faddl
js
sar
mov
rclb
xor
scas
lods
in
ficoms
mov
pop
dec
dec
jne
and
nop
adc
insl
or
arpl
dec
stos
scas
repnz
sbb
repz
xor
push
lock
divb
pop
mov
repz
sbb
xchg
outsb
dec
arpl
addr16
cs
inc
mov
lret
mov
cmp
add
cmpb
pop
mov
std
inc
or
add
daa
lds
pop
mov
jg
xchg
loopne
pop
jbe
ficoms
dec
rclb
adcl
in
ljmp
adc
stos
push
jae
jecxz
rcrl
push
pop
mov
clc
add
fdivl
jle
push
pop
jecxz
int3
mov
mulb
dec
cmpsb
daa
dec
sbb
movsb
mov
jg
and
jo
jo
lods
xchg
int
fs
dec
xlat
in
pop
inc
xor
js
and
mov
loop
fcom
aas
sbb
push
mov
xor
data16
mov
push
int3
pop
fdivrs
cwtl
dec
dec
fldl
cmp
and
scas
out
movsb
sub
call
dec
andl
pop
and
fcomp
subb
jl
jecxz
xlat
cmp
push
jbe
mov
inc
ljmp
jmp
scas
push
sub
mov
fcmovnb
inc
jmp
in
push
mov
pop
mov
pop
scas
clc
inc
sub
push
adc
dec
sti
sbb
rcr
xchg
inc
daa
mov
mov
push
gs
lahf
push
iret
test
test
fldt
nop
fisubrl
int3
fists
bound
adc
cmp
xor
xchg
lret
outsl
fsubrs
mov
ljmp
cmpsb
in
mov
lods
repnz
xchg
insb
pop
push
sbb
insb
mov
sti
pop
mov
ja
pop
sbb
clc
fisttpl
push
pop
cmc
fstpl
push
xchg
test
cmp
shr
mov
movsl
popa
ljmp
adcl
js
cmp
mov
pop
pop
jl
jne
sahf
je
xchg
push
out
mov
mov
std
push
xchg
xor
mov
call
fcmovb
ret
or
arpl
dec
xchg
addr16
push
out
add
and
sti
xor
push
inc
loop
jge
roll
rorl
std
cltd
cwtl
sarb
cmp
xchg
sub
xor
mov
roll
add
sub
adc
es
mov
ja
or
leave
push
out
lods
push
push
addr16
pop
out
cmp
loope
and
inc
iret
arpl
mov
ss
fwait
repz
lcall
cmp
stos
sbb
cmp
ja
js
mov
hlt
fldt
aas
imul
jg
jbe
shrb
sub
aaa
jmp
jle
mov
fnstenv
mov
push
xchg
cmp
pop
subb
fwait
pop
inc
mov
fildl
arpl
mov
test
xor
repz
cmc
inc
pop
arpl
fidivrl
outsb
push
mov
je
lock
inc
jne,pt
and
je
jmp
jne
mov
and
imul
mov
jmp
sbb
lret
adc
pop
mov
jp
sub
mov
std
test
cmp
pop
icebp
fstpt
loopne
aas
adc
xchg
addr16
jmp
cmpsl
push
ficoms
pop
or
movsb
sub
scas
stc
incb
lock
scas
lcall
das
ljmp
xchg
and
fistpl
inc
jo
stos
hlt
addr16
push
insl
out
cmp
mov
cltd
or
inc
and
push
popf
sbb
movsb
ljmp
das
and
pop
incl
rcrl
loope
ret
mov
and
ds
mov
popa
mov
ret
mov
adc
mov
int
ficoml
and
inc
pop
leave
das
icebp
cli
or
lock
push
lods
mov
test
mov
push
pop
inc
pop
sbb
daa
notb
outsb
mov
mov
push
jmp
or
xchg
movsb
sbb
jno
jle
sbb
cmp
sbb
push
sub
ficompl
sub
mov
dec
jae
dec
fistpll
out
push
fisubs
jb
into
daa
sti
mov
into
lcall
stc
mov
or
jb
pop
inc
in
mov
and
dec
cs
fldenv
push
sbb
loop
arpl
jae
in
sbb
mov
mov
pop
ret
mov
cmp
add
jnp
mov
insl
jb
dec
xchg
adc
je
xlat
jae
int
nop
out
js
jno
sbb
pop
adc
shll
pusha
adc
in
aam
add
add
mov
xchg
or
pusha
inc
sub
and
pop
shlb
pop
pop
or
insb
mov
push
xchg
lock
xlat
jns
mov
jo
sarl
ljmp
fs
inc
in
jae
sbb
dec
and
or
icebp
dec
pop
movsb
cld
fsubl
jo
pop
aad
fsubr
arpl
int
es
cmp
ror
xor
xchg
aad
push
jae
jo
rol
and
repz
pop
fldl
jbe
mov
in
fmuls
out
mov
sub
lock
dec
push
test
insb
rol
jns
int3
jle
mov
adc
cmp
dec
pop
push
enter
inc
jbe
and
mov
pop
pop
push
subl
add
sbb
add
adc
adc
outsl
jmp
ds
iret
dec
jno
int3
mov
int3
ret
sbb
dec
movsb
xchg
outsl
add
out
imul
cmpsl
jne
xor
or
xchg
inc
addr16
mov
andb
xor
popa
mov
icebp
test
loopne
in
push
jmp
out
aaa
cs
in
clc
mov
inc
sub
hlt
out
das
das
mov
inc
aad
inc
hlt
jo
push
icebp
pop
leave
loop
mov
inc
push
mov
bound
cs
cld
or
or
adc
ds
push
in
je
pop
sbb
mov
push
push
icebp
jg
xchg
addr16
push
int
pusha
inc
sete
cmp
das
lock
cmp
inc
loopne
jnp
inc
pop
stos
and
icebp
cmpsb
cmp
add
sbb
adc
sub
pop
xchg
cmp
inc
lods
stos
add
aad
int3
sub
fiadds
and
xor
xchg
outsl
cld
xor
test
xlat
cmpb
in
mov
or
fisubs
cld
dec
fldl
cmpsb
xor
out
dec
loop
push
dec
outsb
pusha
mov
or
movsb
fcoml
loope
mov
or
push
xlat
add
or
xchg
cmc
ds
push
jo
shlb
add
inc
pop
push
pop
push
mov
inc
mov
lahf
mov
imulb
mov
or
mov
and
fisubrs
shrb
dec
pop
add
es
xchg
arpl
or
shll
jg
sbb
lret
mov
cmp
jae
movsl
push
cld
insl
xlat
iret
cmc
mov
stos
lea
repnz
data16
add
mov
out
les
lcall
ret
daa
ficomps
dec
lcall
iret
xchg
lcall
je
and
sub
loope
pop
xor
push
pop
test
sbb
cld
xor
rorl
aas
dec
stos
fildl
test
xor
push
push
rcr
push
jbe
les
sbb
mov
dec
or
loop
adc
sti
icebp
ficoml
fs
jg
mov
mov
mov
int3
jmp
sbb
call
mov
andb
into
nop
cmp
repnz
aaa
loop
cltd
insl
insl
cltd
cmpsl
inc
fcomp
lock
mov
mov
jcxz
xchg
jg
mov
pop
adcl
jo
insl
inc
mov
push
movsb
dec
sbb
xchg
inc
ss
dec
xor
call
pushf
push
jl
xor
push
sub
sub
pushf
cmpsl
sub
ds
out
cld
mov
fdivr
xchg
cmpsl
adc
or
mov
or
inc
rclb
xor
into
clc
sbbb
subl
mov
mov
test
mov
loopne
faddl
insb
sub
mov
push
adcb
ljmp
jae
or
insb
xor
pop
adc
sbb
lea
mov
push
mov
in
aaa
cmp
sbb
fidivrl
roll
and
inc
push
inc
mov
xchg
daa
xchg
orb
aad
js
clc
pop
rcll
fists
adc
fldenv
mov
add
dec
sub
pop
pextrw
add
pop
ret
lahf
pop
jp
jno
pop
mov
pop
jno
mov
jle
and
shlb
xchg
and
fs
or
dec
call
adc
ret
adc
or
shr
rol
and
pop
inc
cltd
xor
add
xor
dec
sub
and
ljmp
mov
stos
xchg
push
or
cmp
xlat
inc
sub
push
movsb
pop
and
fadds
in
jne
push
xchg
pop
fwait
mov
mov
mov
push
subps
lcall
insb
push
bound
test
cmp
repz
out
jmp
sub
lock
aas
aas
adc
jmp
jns
je
xchg
repz
or
sub
lahf
stc
xlat
adc
push
xor
pop
pusha
lret
cmp
es
fadd
mov
pop
mov
and
ror
mov
mov
mov
dec
push
fsubs
and
loop
push
sbb
pop
or
test
mov
or
adc
outsb
mov
rolb
pusha
arpl
or
xchg
cmpsb
inc
mov
mov
adc
shrl
sbb
sbb
pop
jae
xchg
mov
add
outsb
add
mov
xchg
push
cmp
lret
sub
sahf
ret
mov
and
push
cmpsb
xchg
sarb
cmpl
jge
add
dec
push
in
mov
imul
jo
pushf
repz
in
loope
fcoms
aam
or
cmp
jmp
xor
inc
xor
inc
push
movsl
jae
or
sbb
or
test
sbb
nop
push
or
adc
mov
sbb
jns
inc
mov
in
inc
mov
mov
test
cmp
push
adc
adc
push
push
repz
leave
xor
sub
sbb
add
mov
popf
shlb
lods
mov
sbb
mov
or
scas
out
inc
sbb
fwait
inc
loop
mov
sub
clc
jne
jae
xchg
adc
test
insb
or
jo
cmp
out
or
sub
and
push
pop
cmp
pop
sub
ret
dec
leave
jmp
mov
sub
ds
fistpll
cli
cmp
fldenv
jno
shr
xor
ds
and
js
cwtl
jmp
test
movsb
aaa
in
ja
std
into
movsl
sahf
repz
enter
add
lahf
aad
mov
xchg
sub
inc
xchg
jmp
jae
jnp
mov
push
pushf
rcll
xor
xchg
jbe
out
ret
stos
mov
or
mov
fucomi
push
call
mov
clc
pusha
cmp
arpl
jb
sub
sub
push
ja
outsl
out
cmpsl
lds
mov
rcl
out
movswl
sbb
and
push
or
adc
mov
mov
icebp
xchg
inc
out
psubsw
cmp
xor
push
int
and
pop
popf
lea
add
mov
mov
fstps
in
in
mov
cmp
outsb
fst
and
addr16
and
fcomps
daa
movsb
jne
push
addr16
cmp
ss
cmpsb
fisubrl
mov
aad
in
int
inc
test
xchg
jle
popa
push
stos
lcall
sub
adc
divb
sub
lahf
lods
sub
xor
cmp
jmp
or
dec
test
or
mov
inc
pop
movsb
jb
stos
sub
push
rcrb
xor
push
js
ja
aad
mov
pop
adc
mov
pop
push
dec
sub
pop
out
add
stc
orl
cs
lock
aas
push
loopne
adc
push
insl
xor
enter
loope
std
mov
xchg
or
scas
pop
mov
cs
cmp
fadds
bound
mov
jg
lods
in
mov
adc
push
lods
inc
insb
stc
jle
push
xlat
and
inc
lcall
cmpb
cli
jo
pop
sub
sub
cld
flds
mov
out
les
dec
lahf
pop
into
lods
in
arpl
in
pop
repz
inc
dec
je
pop
xor
lret
popf
mov
gs
fwait
psrlq
fwait
jg
rol
inc
icebp
xchg
andl
aam
xlat
sub
rep
pop
pop
int
sub
in
and
aam
push
or
xchg
adcl
ljmp
outsl
dec
mov
dec
testb
dec
lcall
fisubs
jp
push
popa
mov
movsb
xchg
xor
pop
jecxz
in
shrb
mov
push
push
out
inc
sbb
daa
sub
dec
xchg
pop
xchg
mov
ror
pusha
jg
mov
jmp
add
push
sbb
sbb
adc
pusha
call
inc
xlat
aaa
sbb
pop
fimuls
inc
sti
mov
movsb
and
mov
ja
dec
ret
lahf
lahf
je
das
sti
gs
js
mov
pop
or
imul
leave
js
or
pop
popf
subb
scas
sub
test
cld
add
inc
add
xor
mov
fs
or
jo
mov
push
jb
adc
je
jl
and
mov
addr16
inc
mov
inc
add
jno
xchg
add
mov
lcall
pusha
stos
sub
xlat
fistpl
js
add
daa
cs
fcompl
data16
enter
sub
lret
dec
fdiv
ljmp
outsb
rorl
push
mov
adc
mov
add
and
sub
loop
lods
call
testl
sar
inc
fbstp
std
adc
out
mov
pop
xor
adc
pop
mov
nop
mov
jo
cmpsb
fucomip
clc
push
mov
jmp
inc
mov
sub
adc
mulb
pop
mov
lahf
testb
mov
fwait
jae
mov
inc
mov
mov
xor
dec
and
jg
orl
push
push
sub
mov
nop
pop
jns
and
pop
and
push
popf
xchg
adc
nop
negl
sti
inc
dec
xor
xchg
add
mov
test
xor
mov
loope
add
lods
mov
sub
xorl
jno
mov
or
in
sbb
pop
rolb
push
cmp
mov
jbe
inc
pushf
xor
inc
pop
inc
cmpsl
adc
fimuls
mov
jae
pop
jle
popf
enter
mov
mov
jp
push
mov
cld
test
add
sbbl
loope
std
adcl
sub
jo
jl
xchg
pushf
mov
sbb
stos
jns,pn
or
xor
gs
bound
loope
je
sub
shl
jge
dec
mov
idivb
clc
daa
and
enter
movsl
and
sbb
int3
fnsave
mov
sub
mov
inc
lods
mov
pusha
xor
icebp
and
sub
jle
sbb
sbb
aaa
ljmp
orb
xchg
pusha
and
jbe
xchg
sarb
dec
pop
inc
jns
pushf
adc
jp
shrl
fsubrs
in
outsb
sbb
xchg
out
mov
mov
add
lret
push
daa
inc
jg
stos
cld
mov
dec
aaa
pop
adc
cmp
sbb
in
movsl
stos
rcrb
jne
test
lock
inc
ficompl
fisubl
mov
sub
mov
rorb
insb
or
and
aaa
popa
adc
sub
gs
xchg
sub
push
ret
ds
mov
out
sbb
jo
jb
mov
sbb
inc
cltd
sti
sub
gs
insl
push
test
aam
jbe
mov
jge
andb
fwait
cmp
in
mov
in
cmp
dec
xchg
dec
aam
sahf
ljmp
aad
mov
stc
push
mov
imul
int
leave
xchg
lret
les
or
xor
jge
or
sub
ret
pop
jae
test
jle
ja
mov
stos
cmp
popf
subb
shrl
daa
dec
xor
cli
loopne
aas
cltd
dec
and
insb
jl
pop
test
push
scas
dec
pushf
bound
add
fbld
leave
and
cmp
ss
test
mov
loope
rcll
aas
xchg
lods
loopne
mov
cmp
dec
repnz
jp
or
rorl
push
mov
pop
imul
jp
cltd
sub
sbb
ss
jecxz
fcmovu
or
push
gs
mov
out
jp
push
cmc
loop
xor
ds
insl
orb
pop
call
mov
push
pop
mov
mov
movsb
aaa
jmp
adc
decb
test
je
cmp
fwait
pop
jecxz
xchg
inc
xchg
stos
push
ds
push
popf
shrb
mov
sub
pusha
in
and
bound
ror
fimull
fiadds
out
adcl
pusha
dec
and
je
test
jecxz
pop
and
popf
dec
jge
xchg
aas
loope
inc
and
call
add
cwtl
orb
push
fidivs
xchg
xchg
stos
pop
decl
xlat
sub
shl
xchg
loope
mov
or
pop
call
fcoms
mov
xorb
xchg
hlt
cmp
test
addb
cmp
xor
addr16
mov
adc
ds
sar
xor
dec
jno
xor
dec
mov
mov
pop
mov
lock
mov
ljmp
scas
mov
imul
pusha
push
xchg
out
dec
fadds
nop
out
lds
sub
xor
cmp
scas
movsb
and
xor
add
test
and
popf
push
or
mov
sub
rolb
shl
xchg
jp
jbe
lahf
and
in
push
adc
or
jg
push
mov
imul
rorb
ja
stos
mov
inc
mov
pop
fstpt
ret
fmull
cmp
rolb
pop
push
pop
mov
mov
popa
push
rcrl
mov
popa
push
test
add
jnp
xor
pop
adc
xor
div
adc
test
lret
fcmove
fsubrs
mov
cmpsl
sbb
fcoml
jno
inc
lahf
cmp
inc
mov
jns
lret
adc
out
repnz
call
mov
dec
sub
xchg
adc
lea
bound
lcall
cmp
ficoml
sbb
jge
out
jecxz
push
sti
jge
and
scas
push
xor
and
adc
pusha
aad
mov
les
xchg
pop
jnp
lret
pop
ds
pusha
add
cli
std
and
push
xor
inc
dec
stos
adc
jbe
lods
lcall
push
mov
in
and
push
jecxz
or
sbb
das
cwtl
pop
jmp
dec
lahf
subb
and
popa
sub
iret
call
xor
jecxz
mov
push
enter
lret
dec
pop
mov
inc
mov
mov
mov
or
mov
xchg
les
insl
inc
aaa
pop
lret
pop
xchg
pop
sbbb
push
pop
repz
inc
xor
push
cli
jg
into
mov
pushf
arpl
adc
inc
push
jno
mov
cmp
and
adc
cmpsl
dec
pop
int3
and
xor
sub
mov
outsb
mov
inc
cmp
cli
lods
shl
push
jnp
cmp
xor
push
dec
add
cld
jecxz
inc
dec
leave
push
inc
dec
add
pop
xor
adc
mov
outsb
cmp
xchg
cmp
aas
ret
outsb
push
mov
dec
xchg
lret
add
push
sub
pushf
cmp
sbb
sub
sbb
daa
aam
ss
pop
xor
mov
ss
or
sti
sub
pop
pushf
ja
call
pop
aad
test
stos
in
repnz
inc
ret
pop
add
lock
das
out
in
pop
test
fstpt
cltd
cmp
ret
cmp
push
pushf
sub
sub
cmp
mov
pop
loope
cmp
inc
stc
lods
fcmovbe
repz
inc
mov
sub
pop
fsubr
pop
mov
xorb
pop
pop
movsb
fwait
loopne
sbb
leave
jb
mov
dec
push
jo
loopne
sahf
push
cli
pop
adc
ret
jle
cli
xor
aas
jo
mov
lret
xor
scas
ja
fidivrl
mov
dec
add
inc
pop
into
push
mov
or
lcall
mov
jo,pn
out
dec
or
cs
jns
add
mov
or
aaa
sarl
hlt
lret
jp
mov
pop
or
enter
mov
inc
push
aas
mov
sub
or
push
in
jg
call
cmp
lods
std
lret
movsl
adc
lahf
cmp
outsb
sti
lret
adc
inc
sub
ret
sub
out
push
fidivrl
xchg
inc
or
pusha
mov
movsl
scas
jb
sbbb
add
pop
pop
bound
adc
imul
rcl
outsl
lock
ret
xchg
stc
cmp
mov
subb
inc
pop
or
test
pop
enter
or
push
cmp
jle
pop
dec
add
fisttps
enter
rcl
xchg
mov
sarb
lods
fidivrl
icebp
sub
scas
xlat
mov
push
imul
enter
mov
es
cmpsl
subl
enter
dec
cmp
dec
aam
data16
arpl
fstpt
icebp
shlb
xor
gs
sbb
cmp
jne
inc
fisttpll
inc
das
les
das
xchg
mov
cmp
mov
fldcw
sarl
shll
enter
sbb
xor
mov
lcall
mov
outsb
cmp
xchg
push
add
sti
sub
test
push
add
aad
lea
test
andb
or
xchg
scas
push
jp
jecxz
sbb
notl
nop
in
push
jns
das
jecxz
add
jp
fstpt
or
push
dec
and
sarb
mov
cmp
nop
adc
out
mov
pop
adc
sub
cmp
mov
arpl
push
arpl
std
js
test
cli
sbb
mov
jne
xor
in
xchg
jae
cld
mov
cld
shlb
or
shll
inc
jge
pop
cmp
mov
mov
imul
push
std
fwait
je
pop
cmpsb
xchg
push
cli
cmp
sbb
dec
sub
movsl
jno
aad
dec
scas
rorb
xor
mov
push
cltd
cmp
sahf
test
pcmpeqb
filds
sahf
mov
dec
or
arpl
shlb
loop
pop
xchg
leave
xchg
jo
cmp
or
mov
cmpsb
mov
insb
leave
popf
ss
pushf
inc
mov
pop
push
adc
pop
enter
sub
inc
mov
dec
dec
mov
scas
mov
jecxz
repz
sub
or
push
inc
mov
xchg
pop
ja
inc
test
outsb
loopne
ficoms
pop
cmp
int3
scas
xor
inc
dec
mov
sbb
mov
dec
lahf
adc
shrb
ret
test
int
sbb
xchg
in
mov
mov
dec
in
cmpsb
push
js
into
mov
sahf
push
leave
pop
subl
inc
mov
and
mov
fldt
test
fisttpll
sbb
xor
jb
mov
lds
xor
xchg
xor
cs
xchg
push
or
cld
jb
cmc
divb
gs
and
jg
sub
adc
cmpsb
test
movsb
out
adc
imulb
sbb
je
test
or
xlat
push
dec
xor
in
add
pusha
pushf
or
push
int
cmp
negl
dec
cmpsl
call
xchg
mov
xchg
mov
movsl
stos
push
mov
jl
lods
movsb
push
mov
pop
or
sub
jne
popf
leave
pop
dec
je
insl
mov
or
lahf
mov
out
lods
aaa
xchg
imul
xchg
dec
mov
ja
data16
inc
adc
cmp
es
out
ds
push
push
fsts
ljmp
in
cld
out
lds
cli
adcb
sbb
nop
nop
out
fdivrp
sbb
je
mov
aad
mov
xchg
xchg
lret
dec
sahf
das
cs
inc
xchg
xlat
adc
cmp
mov
les
imul
push
out
cmp
cmp
std
xchg
mov
ret
in
adc
stos
adc
dec
in
lea
sbb
lcall
ret
mov
push
mulb
stos
lahf
jns
pop
jb
lea
add
lcall
jmp
push
sbb
pusha
shlb
sahf
add
jp
sub
test
cmp
loop
fdivs
jecxz
jno
jge
sbb
aaa
pop
sub
pop
adc
fiadds
lods
xchg
push
cmc
or
leave
mov
das
das
xchg
lcall
movsl
sbbb
pop
or
sbb
add
add
inc
hlt
lea
leave
test
fwait
mov
mov
xchg
xor
insb
xchg
in
jae
mov
rclb
test
mov
mov
cmpsb
mov
fxch
jb
int3
sbb
popf
cmp
ret
lock
aam
orl
mov
push
iret
jge
inc
push
es
test
cmpsb
jo
cmp
sub
jae
pop
add
xlat
es
sub
loop
cmpsb
cld
clc
add
or
mov
not
out
xchg
decl
and
jecxz
sub
cltd
inc
repnz
sahf
jb
cltd
inc
pop
jg
push
inc
mov
lds
mov
int
fiadds
sbb
push
jmp
cmp
ret
stc
sbb
rcrl
push
jno
lods
xchg
shl
insb
movsb
inc
push
icebp
pop
add
lret
pop
xchg
lods
stos
sti
mov
dec
and
lods
mov
push
out
aas
xchg
subb
aam
arpl
loopne
sbb
and
rclb
int3
or
std
adc
daa
or
loope
mov
and
inc
push
andb
push
fistpll
out
push
cmp
push
icebp
mov
loop
insl
imul
sub
es
out
mov
stc
loope
or
ss
xchg
out
nop
ficoms
or
xor
sub
xchg
xor
lock
mov
sbb
sub
lea
out
cltd
push
outsl
popa
jecxz
fcoml
mov
shlb
dec
mov
lods
add
mov
cmpsl
mov
ja
jo
sub
popa
xlat
out
movsl
or
leave
mov
inc
jbe
sarl
push
je
jae
and
push
jb
inc
out
cld
ret
add
add
pop
gs
pop
adc
cltd
int3
mov
mov
aad
mov
mov
ds
outsb
daa
lock
dec
add
rorb
sahf
mov
jb
imulb
int
mov
fisttpll
xor
bound
adc
rclb
xchg
inc
dec
cwtl
xchg
pop
mov
xchg
pop
mov
sbb
xor
pop
mov
lods
fcompl
jne
scas
push
aam
lcall
inc
add
xor
jo
out
mov
xlat
mov
jne
js
sarb
adc
mov
dec
dec
addr16
pushf
sbb
loopne
out
repnz
xor
fsubrl
loop
int3
adc
mov
lcall
xchg
mov
mov
lods
dec
jmp
mov
mov
fucom
pushf
test
hlt
inc
pop
sbb
jp
xor
add
int3
xchg
and
jl
push
xor
imul
mov
sub
xchg
or
cmpps
data16
jg
sbb
adc
jle
push
scas
bound
adc
aas
and
push
jl
fldl
lods
repz
push
cmp
aas
push
or
add
out
add
sbb
clc
cmp
pushf
dec
pop
es
pop
sbb
inc
enter
push
mov
cld
stos
aam
fstpl
stos
pop
inc
std
loopne
jb
adc
sbb
insl
mov
cmc
xchg
popf
ja
adc
push
leave
cli
xor
outsb
leave
mov
lds
inc
dec
xor
sub
jge
sub
mov
insl
mov
fwait
test
loope
mov
push
shrb
inc
sub
repz
icebp
mov
push
sbb
mov
in
adc
pop
int
out
pop
add
aas
fcoms
cwtl
mov
mov
push
shrb
sbb
pop
jbe
enter
xchg
cmp
or
mulps
lret
push
ja
push
dec
xor
jmp
push
mov
and
inc
lret
loopne
cmp
sub
clc
adc
jb
sarb
movsl
sub
fcmovu
addl
cmpsl
leave
adc
mov
imulb
test
mov
adc
xchg
xor
mov
jmp
add
mov
inc
or
and
in
sbb
shll
jnp
or
mov
push
sbb
movsb
insb
push
mov
or
das
dec
popf
push
leave
pop
pop
push
jmp
pop
cmp
mov
addr16
ja
pusha
cld
pushf
repz
pop
sub
cmp
sub
push
imull
addr16
xor
xor
push
push
mov
leave
push
imull
mov
jge
das
or
fildll
dec
lcall
out
mov
or
add
adc
lods
mov
add
test
mov
push
dec
add
push
adc
or
cmp
push
xor
stos
push
mov
fwait
cli
bound
lock
dec
aad
jbe
sahf
mov
mov
sbb
enter
adc
stos
cmc
dec
arpl
aam
xchg
cmpb
dec
inc
in
lea
or
cli
mov
xor
in
ja
cmp
pop
inc
orl
ljmp
ja
ja
ret
dec
mov
add
sub
sub
mov
mov
pop
enter
pushf
push
push
scas
push
adc
fs
out
mov
daa
inc
and
mov
inc
and
movsl
sbb
cmp
pop
imul
shlb
pop
sbb
fidivrl
daa
fisubl
loopne
lods
aaa
xor
mov
cmp
popf
xchg
daa
dec
stos
sbb
addr16
push
popa
xchg
jle
cmp
xchg
pop
push
mov
xchg
jle
repnz
arpl
adc
test
jne
leave
jg
lock
in
inc
or
mov
cmp
clc
insb
sbb
add
loope
xchg
cmpsl
lret
push
add
mov
and
loopne
cwtl
int3
jg
xchg
or
xchg
dec
test
mov
es
loop
js
stc
fucomip
adc
and
icebp
loope
lods
dec
sbb
xchg
out
je
aam
hlt
fdivrs
test
lahf
push
xchg
into
cmp
xor
add
push
jge
movsb
shlb
aas
movsl
jmp
lcall
mov
js
dec
idivl
sbb
mov
femms
add
push
push
sbb
ss
loope
pop
push
into
fwait
mov
loop
andb
cmpsb
mov
cmp
out
and
fnstcw
xchg
mov
in
xchg
fwait
cmp
aad
inc
shl
imul
cltd
dec
leave
les
insl
mov
sbb
repnz
cld
sti
repz
mov
or
cmpsb
push
inc
fistl
push
sbb
loope
outsb
mov
jmp
mov
pop
mov
mov
cmp
loopne
lods
mov
push
pop
inc
dec
stos
pop
xchg
out
les
aaa
mov
xchg
test
xor
call
sbb
cmp
cmp
mov
mov
sub
aaa
sbb
sbb
add
cmp
je
xchg
idivl
insl
adc
and
jp
das
xchg
sub
add
mov
jno
in
or
adc
jmp
push
test
or
fadds
dec
xlat
sub
and
cmp
push
mov
js
xlat
push
jmp
push
cmpsb
mov
shrb
inc
xor
mov
fs
mov
je
mov
int
std
js
mov
and
shlb
mov
lds
jg
stos
and
jmp
xor
adc
cmc
in
ja
add
stos
sub
pop
jge
xchg
ss
pop
loop
add
mov
test
movsl
cmpsb
cmp
out
xlat
int3
roll
lcall
jmp
test
cmp
and
lea
ret
dec
sti
scas
mov
push
and
pop
lret
pop
inc
js
test
insb
mov
add
pop
out
dec
jo
repz
lods
imul
sbb
nop
add
inc
icebp
jne
int3
pop
mov
shrb
aaa
xchg
and
mov
outsb
add
jne
mov
test
lcall
push
push
jle
mov
inc
in
pop
mov
mov
dec
imul
enter
addr16
test
in
or
ljmp
ja
push
std
mov
je
shll
je
mov
dec
or
aam
inc
and
ja
sahf
fdivrs
loope
aam
adc
push
jno
push
cmp
add
lea
lcall
add
sbb
mov
es
sbb
add
mov
sub
or
jne
pusha
lods
pop
js
xor
pop
pop
iret
adc
mov
fildll
sbb
jmp
jg
ret
cmpsl
xor
fistps
mov
jnp
mov
add
push
fwait
stos
mov
fisttpl
lcall
das
push
sbb
xchg
cwtl
push
sub
loope
sub
enter
sbb
out
insl
lahf
xor
outsl
adc
insl
xchg
add
jns
ss
xor
and
popa
mov
lcall
imul
push
out
pop
hlt
imul
jb
int
push
or
ret
lret
push
mov
scas
pop
in
sbb
cltd
and
incl
adc
jge
jb
sub
fnstsw
push
cmp
js,pn
mov
mov
int
xchg
cmpsl
clc
mulb
out
lretw
xor
mov
pop
scas
jmp
mov
xchg
push
sbb
fwait
lahf
in
sbb
stos
repz
pop
mov
aaa
cwtl
cwtl
cli
push
fmul
ret
mov
inc
xor
test
mov
into
jne
gs
adcl
sub
or
inc
mov
xchg
andb
rcl
xchg
pop
xchg
pop
sbb
pop
mov
jge
mov
test
test
call
or
push
jmp
cmp
cmp
arpl
cwtl
sar
shlb
mov
popa
movsb
cmp
stos
test
dec
aad
mov
cmp
and
and
lfs
sub
aaa
orl
cmp
fistpl
imul
jnp
sub
shl
rorl
stos
sub
pushf
and
movsb
pcmpeqw
sbb
mov
mov
sub
xor
fldcw
inc
mov
leave
loopne
rcl
sti
jbe
in
into
imul
xor
mov
inc
dec
xchg
jne
test
loopne
sbb
cld
adc
std
sub
mov
push
adc
xchg
cmp
scas
mov
fisubrs
pop
shlb
mov
rcr
daa
mov
aas
jl
or
and
dec
stos
sub
pop
mov
mov
daa
xchg
outsb
sbb
mov
push
out
andl
or
std
into
fisubs
jmp
bound
aas
loop
jmp
mov
mov
push
sub
sub
addr16
sub
sbb
add
pop
loopne
pop
adc
fnstsw
imul
jmp
cmc
rcrb
sbb
inc
ss
scas
leave
cmp
lcall
out
mov
imul
ja
dec
add
leave
jnp
lret
out
testl
push
mov
adc
stos
mov
pushf
jp
je
or
cmp
rol
in
rcrl
mov
add
lods
loop
inc
scas
bound
fisttps
outsl
cmp
pusha
xor
dec
and
cmpsb
ret
faddl
sub
mov
adc
std
das
fcompl
fnstcw
int
dec
lea
mov
jl
xor
adc
xor
in
loopne
arpl
mov
aas
mov
outsb
xlat
daa
mov
and
test
pop
and
and
or
sbb
mov
or
adc
pushf
mov
mov
dec
xchg
hlt
mov
fisubl
mov
out
ja
dec
jbe
and
xor
jmp
shr
out
fmuls
jecxz
xchg
stos
in
sub
mov
add
int3
push
jl
inc
or
imul
inc
and
aas
xchg
mov
jno
xor
ja
push
out
cmc
out
cs
loop
jnp
or
pop
in
repz
push
sub
lret
mov
stos
or
dec
xor
mov
dec
inc
int3
sub
sub
adc
jns
insb
jmp
test
cli
and
mov
cmp
pushf
mov
dec
imul
lcall
pop
inc
test
ds
mov
xor
pop
mov
cmp
ja
jle
negl
cmp
push
sbb
loop
test
into
test
push
and
ss
int
test
bound
cmp
mov
dec
cmpsl
pop
sub
or
frstor
pop
push
loope
xchg
andl
ficoml
xor
push
scas
mov
sbb
ret
cwtl
pop
push
push
pop
out
cmp
adc
push
ret
aaa
adc
jo
mov
sbb
repz
dec
cmp
loopne
cmp
sbbb
lods
sub
sbb
add
out
in
xor
popf
mov
ss
mov
xchg
cli
hlt
test
in
cmp
xor
cmp
inc
sbb
das
cmp
test
ljmp
dec
repnz
std
into
mov
mov
sbb
fsub
outsb
jmp
push
xchg
xor
cmp
hlt
gs
loope
jmp
push
stos
ja
xchg
jecxz
sub
or
das
out
dec
test
int3
cwtl
hlt
sarl
lret
cmp
or
and
cli
mov
out
lock
push
mov
and
jge
push
inc
mov
ficoml
cmc
ja
jae
mov
popa
negb
jg
cmc
ljmp
je
mov
dec
cmc
mov
pushf
cmp
lretw
ja
and
xor
push
xchg
fiadds
cli
rolb
js
lods
sbb
sti
sbb
testl
and
cmp
push
in
stos
sbb
add
xchg
add
inc
dec
inc
xor
frstor
dec
jae
adc
std
xchg
add
mov
pop
cmp
xlat
jae
movsb
arpl
in
into
ret
sub
xchg
or
pop
cmp
xchg
dec
fsubr
cmp
or
imul
inc
pusha
jb
rclw
bound
jb
xchg
dec
out
mov
pop
sbbl
lret
aaa
sub
jle
es
stos
xor
cmpsl
outsl
xchg
lods
insb
outsl
shlb
cmp
lods
mov
icebp
ds
adc
imul
imul
push
xor
dec
push
jo
pop
sbb
jle
jns
push
loope
mov
push
xor
pop
clc
loop
sbbb
pop
xchg
iret
add
dec
out
mov
jge
imul
shl
mov
repz
dec
or
in
fmul
xchg
jge
jae
enter
std
xchg
xor
imul
enter
push
in
fistps
mov
add
sar
xchg
jl
jl
mov
pop
dec
mov
dec
lcall
imul
mov
popf
pop
mov
std
outsb
mov
arpl
xchg
gs
cmp
xchg
xchg
or
push
xor
jbe
aas
add
test
or
fsubrp
dec
insl
sbb
pop
mov
lret
adc
mov
in
imul
mov
adc
jecxz
adc
or
pop
push
and
cmp
cmp
das
xchg
es
push
loopne
mov
jae
adc
sbb
xor
fistps
inc
sub
imul
fcomps
rcll
push
imul
mov
repnz
in
int
insl
xchg
jmp
pop
insl
sbb
shlb
xor
rcll
dec
ret
sti
pop
dec
insb
imul
je
jns
mov
iret
ret
xchg
add
add
mov
xchg
inc
outsb
cmp
mov
sbb
and
adc
or
jns
or
xchg
adc
dec
add
jbe
shlb
orb
jecxz
je
fbld
dec
not
pop
dec
jle
fwait
into
sub
pop
bound
fiadds
bound
adc
cmc
loope
inc
xor
pop
sbb
shlb
sbb
std
scas
ss
movsl
sbb
xor
adc
mov
jecxz,pn
outsb
mov
mov
fs
test
test
in
ja
mov
jmp
sbb
or
cmp
gs
mov
aas
lock
pop
pop
and
sub
mov
rcll
sbb
insb
insb
imul
mov
inc
bnd
cmp
pop
lret
mov
dec
int
push
sarb
int3
inc
adc
jle
inc
mov
icebp
mov
push
push
add
adc
sar
ljmp
dec
cld
xor
push
jno
mov
in
movsb
test
and
fadds
clc
stos
inc
adc
xchg
imul
push
adc
ss
mov
adc
movsb
cmp
fcompl
fld
and
jg
jae
mov
sub
test
sbb
notb
clc
jle
ds
xchg
mov
mov
bound
les
in
pop
data16
mov
push
adc
scas
out
adc
roll
cmpsl
dec
add
insb
aad
pop
xchg
mov
arpl
or
imul
adc
jae
push
push
jne
mov
icebp
xchg
jg
adc
jecxz
fwait
js
push
inc
cmp
sub
mov
std
push
xchg
and
movsb
mov
in
or
loope
lods
pop
orb
sub
mov
sti
mov
lods
jmp
out
dec
mov
pop
xchg
push
add
mov
or
or
cs
pushf
imul
pop
mov
out
xchg
or
cmp
xor
clc
hlt
mov
fldenv
jp
xor
in
or
repz
sub
jnp
es
pop
xchg
jo
movsb
or
stos
lcall
stos
dec
ljmp
push
pop
or
les
and
clc
call
je
test
push
mov
mov
sub
fwait
pop
xor
shrb
leave
inc
jge
xchg
mov
adc
add
out
lret
out
loop
bnd
popa
stos
lods
pop
jnp
std
cmpsl
jns
lds
push
add
es
sub
lds
cmpsl
push
inc
xlat
hlt
scas
adc
out
repnz
mov
mov
jne
pushf
dec
lock
repz
sub
mov
dec
cltd
sbb
int3
lods
xor
cltd
jmp
repnz
inc
movsl
int3
push
out
loop
movsl
imul
movsl
ret
pop
push
sub
dec
cmp
and
adc
push
mov
adc
imul
mov
and
push
add
dec
out
inc
or
rolb
cmp
push
xchg
loope
jns
mov
dec
push
repz
outsb
imull
cmpsl
stos
sub
push
push
or
mov
int
xchg
shl
nop
inc
inc
clc
lahf
jo
and
cld
pop
mov
and
xchg
popf
gs
add
cmp
or
mov
sub
insb
sub
mov
push
nop
dec
ret
inc
mov
lds
stos
sub
adc
bound
mov
lret
push
add
adc
push
add
pop
or
out
insl
clc
mov
mov
insb
dec
adc
push
add
in
std
fnsave
xchg
ljmp
mov
mov
xor
sbb
test
std
shlb
push
mov
push
loope
sub
out
shr
xor
pop
aaa
sub
add
mov
jmp
into
das
outsb
mov
and
sub
xchg
pushf
mov
in
xchg
xor
dec
and
push
enter
xchg
mov
cmp
or
pop
nop
cwtl
inc
jecxz
mov
es
insb
mov
mov
shrl
xchg
call
aam
aas
mov
sbb
xchg
pushf
insl
sbbl
push
xchg
in
fldl
add
jnp
dec
in
rolb
ja
adc
dec
arpl
mov
xchg
pop
inc
stos
and
inc
xchg
mov
popa
xor
and
jle
mov
stos
add
and
and
dec
mov
push
sarb
pop
push
or
jmp
popf
mov
and
or
cmp
adc
xor
cmp
jo
cmp
aam
and
dec
mov
lods
cmp
xor
push
jmp
pop
mov
popf
jl
cld
orb
jecxz
xchg
fcomps
insb
pushf
test
lret
loop
aad
test
cltd
push
add
lods
mov
pushf
dec
cmc
cmc
hlt
lock
imul
push
scas
xchg
imul
add
inc
inc
cmp
push
mov
sub
push
mov
push
loopne
stos
sbb
and
push
push
movsl
push
and
xor
aas
push
sub
es
dec
mov
rclb
pop
fwait
inc
xchg
mov
cmpb
pop
je
xchg
loop
sub
rcrb
cs
rcrl
enter
inc
ljmp
mov
icebp
inc
dec
aad
mov
xchg
dec
jae
sub
lcall
cltd
jb
lret
push
push
dec
mov
pop
mov
ror
mov
test
test
and
bound
cld
icebp
push
jns
enter
dec
dec
fildl
pop
mov
sbb
push
push
roll
mov
hlt
cmp
adc
stc
cmpsb
pusha
test
call
sub
shrb
js
decl
ret
lods
pop
out
push
add
or
ret
lahf
jg
popf
loope
mov
data16
ljmp
mov
addr16
mov
in
push
outsl
push
mov
sub
xor
jg
xchg
mov
lcall
pop
and
daa
shl
cld
sbb
sub
xorl
lcall
fistl
cmpb
inc
ja
ficompl
dec
movsb
mov
jmp
cld
mov
jae
call
jnp
mov
addl
xor
pop
pushf
and
dec
mov
add
mov
out
mov
sbb
mov
scas
push
rcrb
mov
das
mov
lcall
sahf
pop
popf
pop
outsb
cmpb
jnp
or
aas
stc
out
jbe
sti
cmc
xchg
pop
mov
popf
out
and
xlat
repz
ss
addr16
stos
sbb
adc
cld
xchg
dec
scas
loop
mov
lods
ret
stc
xor
adc
sub
lahf
push
icebp
es
or
jp
imul
xor
gs
lret
sub
insb
hlt
cmp
stos
popf
popf
aad
sub
adc
out
push
mov
add
xchg
divl
gs
push
dec
syscall
mov
lret
iret
mov
fsubrs
lcall
mov
sbb
push
push
inc
inc
lea
aas
shlb
cmpl
mov
cld
arpl
fcompl
out
jns
xchg
fs
rorl
mov
push
inc
lahf
add
call
sub
push
pop
sti
sbb
push
jle
mov
stos
loop
push
fbstp
pusha
sbb
push
mov
mov
std
mov
adc
test
dec
lods
mov
fcmovnb
ret
xlat
les
sbb
cltd
imul
push
mov
stos
icebp
adc
mov
pushf
or
cld
dec
inc
push
fildll
inc
and
dec
mov
call
jo
int
aaa
mov
xor
inc
push
mov
xchg
enter
sbb
mov
pop
popa
cmp
sti
mov
jns
decl
pop
nop
inc
push
gs
int
cld
ja
pop
dec
xchg
sbb
stc
popa
mov
stos
and
inc
imulb
cld
sub
andb
pop
lock
dec
cmpsb
aam
cmp
pop
jmp
insl
inc
cmp
fdivrs
mov
xchg
ja
dec
aaa
xchg
mov
sbb
adc
scas
jge
cmpsl
out
aaa
jbe
jae
push
rorb
mov
jge
lcall
dec
data16
add
dec
lods
fwait
std
in
adc
xchg
orl
lods
sub
pop
mov
sub
pop
adcl
jmp
mov
hlt
xor
mov
push
into
xlat
jecxz
mov
push
nop
xchg
pop
push
push
aad
mov
mov
cld
call
jne
and
out
sub
push
cld
lahf
aam
xchg
cltd
mov
mov
push
out
mov
ljmp
mov
test
push
adc
fs
fstpl
or
pop
mov
pop
mov
imul
repnz
jne
cmpsb
or
xchg
mov
cli
xchg
inc
push
jns
aas
sbb
jge
cs
lret
jge
stos
sub
arpl
in
xorb
pop
mov
adc
adc
int
sbbb
push
xchg
push
loop
and
pop
mov
ds
sbb
or
inc
shll
mov
dec
push
xor
mov
pop
outsb
ljmp
jp
push
add
xor
gs
leave
dec
jge
scas
insb
into
xchg
xchg
outsl
xchg
sub
pop
mov
in
movsl
and
iret
push
mov
jg
xor
or
arpl
shll
inc
xor
roll
popa
jl
loop
jae
aam
ja
or
sub
scas
cli
fisttpll
ljmp
cli
fiaddl
mov
inc
push
subl
aam
and
cmpl
and
mov
xor
sti
cwtl
xor
in
orb
xor
mov
shll
sbb
inc
xlat
cmp
adc
mov
aam
mov
call
xchg
jle
out
das
push
mov
fistpll
cwtl
pop
xor
add
cmp
push
pop
aaa
vpunpckhdq
mov
shrl
das
push
outsb
and
xor
ret
data16
sub
lret
imul
mov
fwait
test
dec
lea
ljmp
push
je
add
icebp
jbe
dec
mov
lods
je
cmp
push
jmp
dec
sbb
imul
outsl
pop
fisttpll
ss
push
jp
push
stc
mov
mov
push
sahf
mov
push
test
jbe
push
jg
movsl
ret
mov
push
fsubrs
pop
popa
rcrl
push
xchg
insl
pushf
cld
stc
xchg
aaa
dec
add
incl
or
mov
orl
fcmovnb
mov
and
push
adc
push
mov
cltd
adc
je
mov
or
inc
enter
lods
cmpsl
in
or
cmpsl
adc
xor
fs
cmp
loope
lds
xchg
cmp
sub
nop
stos
xchg
stos
jb
cld
and
inc
int
je
movb
mov
lcall
push
sti
xchg
call
nop
dec
cltd
mov
std
cmp
sbb
nopl
lea
mov
mulb
mov
sbb
dec
jo
lods
fistl
movsb
inc
pushf
std
test
cmc
fsts
sbb
mov
fisubs
les
dec
enter
xchg
imul
scas
mov
paddsw
lods
dec
adc
push
jecxz
push
or
push
pop
dec
repnz
xchg
fwait
pop
mov
insl
mov
sahf
and
jno
lcall
push
into
inc
cwtl
fwait
mov
aad
loopne
pop
jg
ret
sahf
popa
sbb
cmp
aam
out
roll
push
into
cmp
pop
dec
sbb
fldcw
sbb
fisttpll
adc
mov
sbb
leave
cmpsl
test
xchg
pop
jb
add
jecxz
mov
mov
cmp
call
shrb
into
roll
pop
scas
pop
adc
dec
lea
xchg
adc
pushf
in
iret
adc
test
sbb
nop
daa
enter
movsl
lods
repnz
in
nop
xchg
je
addb
xchg
scas
or
mov
cld
dec
pop
mov
cs
ja
loope
fistpll
stos
aam
aad
in
lods
push
xchg
aaa
jbe
ret
cmpsl
push
add
cmpsb
ss
test
mov
jge
push
out
out
je
jge
xor
insl
call
loope
mov
and
js
sbb
jge
ja
jbe
adc
push
out
and
jae
pop
mov
outsb
scas
sub
or
test
jmp
pushf
jns
jne
and
jmp
sti
ret
mov
gs
test
sub
nop
xor
je
inc
adc
stc
mov
or
ror
pop
shll
xor
movsl
mov
mov
shrl
push
insb
push
or
aad
shll
inc
dec
shll
cmp
and
nop
scas
push
mov
pop
xchg
lock
push
pop
test
mov
pusha
daa
mov
push
mov
mov
or
pop
sub
push
dec
aad
jp
mov
pop
mov
pop
icebp
inc
xor
dec
dec
jne
nop
add
mov
cmp
xchg
push
or
dec
fstpl
les
jecxz
rorl
xchg
mov
mov
and
sub
pusha
jns
xchg
cmpsl
or
imul
pop
stc
dec
and
push
add
cmc
mov
mov
mov
fadd
popa
out
ret
jp
pushl
gs
push
int
aam
add
cs
outsl
jg
outsl
das
and
mov
cld
pop
repnz
or
add
fsub
test
ljmp
popa
js
fdivr
stc
ficompl
push
add
out
jecxz
mov
sub
in
or
xor
adc
stc
in
jo
mov
inc
je
jp
test
movsb
sbb
jecxz
sbb
xor
lock
mov
cmc
sahf
mov
fisubrl
insb
fld
push
fs
and
out
repz
push
mov
aaa
sti
mov
add
xlat
xor
jecxz
or
clc
pop
pop
push
dec
mov
mov
ds
std
popf
sub
pop
imul
or
inc
insl
int
fidivs
fsub
cwtl
test
jge
in
fsub
sub
cmp
lcall
or
sbb
sbb
push
push
loopne
xchg
inc
cmp
sti
lahf
shl
fsubrs
inc
mov
push
xor
inc
and
cmc
push
insb
dec
cld
int
in
in
out
fsub
xchg
mov
jmp
add
push
pushl
cmp
sarb
icebp
push
pop
xor
cli
push
sar
inc
xorl
xor
mov
aaa
add
xchg
pop
adc
mov
adc
and
dec
outsl
mov
std
jo
jae
push
cmp
pop
enter
imul
and
pop
xchg
pop
lret
call
test
dec
or
xlat
insl
jo
inc
sub
push
aaa
insb
enter
imul
ficompl
xchg
xsave
insl
ss
cwtl
lahf
lcall
fs
dec
add
sbb
imul
mov
mov
in
repnz
lds
xor
les
inc
or
sahf
dec
inc
rcrl
inc
sub
or
adc
mov
xchg
cmp
ja,pn
call
into
add
mov
fmuls
lcall
stos
sbb
jo
dec
jne
aas
mov
mov
mov
insb
lods
dec
pop
les
mov
sbb
insl
dec
aam
lods
cmc
inc
jge
pushf
into
xorb
xlat
or
movsl
add
arpl
fucom
mov
dec
jno
mov
and
push
sub
xchg
repnz
stos
pop
push
push
adc
mov
jg
stos
xchg
mov
and
out
stc
cwtl
fwait
mov
lods
test
mov
mov
lcall
pop
mov
jg
stc
jecxz
gs
decb
popf
pop
push
aas
or
test
cmp
ljmp
pushf
pusha
inc
inc
add
test
aaa
push
movsb
push
jecxz
cmp
jle
popw
jp
sub
sub
inc
mov
cmp
or
dec
adc
push
hlt
mov
pop
pop
pop
pop
push
jno
or
inc
pop
inc
mov
sahf
iret
shrl
fistpl
and
adc
mov
xlat
jae
push
sti
inc
and
lret
push
inc
mov
mov
or
add
cmp
nop
jne
mov
outsb
xchg
cmp
dec
or
mov
cmpsl
add
mov
jg
loope
loop
scas
sub
outsl
and
mov
pop
orl
addr16
je
sbb
pop
sti
mov
cs
fsubs
and
mov
popa
cmp
es
ja
mov
dec
inc
gs
cs
sbb
pop
mov
adc
fdivs
and
xor
cwtl
sbb
mov
inc
sbb
xchg
sbb
and
jne
leave
push
mov
clc
mov
jns,pt
lods
fdivs
in
clc
mov
dec
push
push
xchg
adc
ljmp
mov
lea
mov
mull
lret
and
sahf
insb
adc
mov
inc
inc
or
into
int3
adc
sbb
lds
cmp
mov
loopne
inc
sarb
push
adc
sbb
bound
mov
enter
or
mov
pop
pop
loop
insb
mulb
jg
xchg
cmp
lock
mov
jge
adcl
stos
xor
adc
fstps
add
cltd
cld
lret
push
sub
clc
xor
ret
mov
lock
js
sub
ret
xor
sub
mov
adc
inc
push
pop
push
sarb
mov
daa
xor
mov
leave
addl
mov
test
cli
dec
fmull
aad
cmp
dec
lret
pop
cmp
adc
fisttps
inc
adc
or
mov
fwait
lock
pushf
insb
mov
clc
movl
dec
inc
mov
nop
jbe
adc
add
je
jmp
and
jb
out
push
inc
xchg
int3
adc
adc
repz
mov
xor
out
mov
or
xchg
bound
sbb
and
nop
lret
push
ljmp
adc
or
out
adc
leave
xchg
push
int3
inc
jne
add
bound
xchg
or
lcall
mov
dec
jnp
popf
std
and
mov
mov
mov
shrl
inc
xor
stos
roll
and
in
es
cmp
in
add
inc
adc
outsl
cltd
and
ret
dec
push
xor
inc
push
xchg
mov
fdivl
fbld
mov
jb
mov
inc
mov
adc
sbb
xlat
cmc
xchg
sub
push
pop
cmp
pop
test
fcmovb
and
xchg
adc
pusha
pop
mov
add
test
dec
cmp
cmp
into
outsb
sub
xchg
ja
scas
fsin
aam
lock
leave
mov
jmp
popf
pop
cs
decl
mov
hlt
cwtl
add
push
and
in
daa
data16
shll
lds
dec
mov
int3
stos
and
dec
loopne
mov
push
sub
mov
sbb
dec
shlb
repz
jne
mov
es
leave
mov
inc
push
and
mov
sbb
iret
imul
popf
jp
adc
in
lods
adc
mov
add
xchg
nop
add
out
and
mov
loop
push
repnz
bound
or
fcmovnb
push
hlt
es
pop
mov
lock
mov
data16
mov
pop
mov
ror
add
lds
sbb
pop
inc
cltd
js
push
and
frstor
in
inc
inc
inc
inc
in
push
sbb
in
lea
hlt
sahf
jbe
add
inc
aaa
daa
filds
fimuls
mov
outsb
pusha
dec
fwait
inc
ss
iret
jbe
mov
fs
aas
les
sbbb
in
push
pop
mov
adc
mov
cmc
push
pop
cli
mov
dec
jns
sbbl
xlat
clc
mov
and
or
andb
adc
jge
mov
mov
xchg
rcrl
inc
sub
aam
int3
mov
sbb
repz
shl
xchg
push
fildll
mov
mov
fidivs
cmp
jg
dec
mov
jne
and
xchg
arpl
cmpsb
mov
sbb
imul
pop
lods
push
cmp
paddsb
dec
dec
inc
xorb
xchg
xor
push
mov
and
mov
divb
push
movsb
lods
adc
js
jg
inc
out
pop
or
lahf
sbb
lds
mov
mov
mov
and
mov
icebp
mov
sbb
mov
inc
inc
leave
ja
ja
or
jo
cs
sahf
pop
jne
scas
enter
xor
xchg
insl
popa
rclb
push
je
lods
mov
cli
xor
jge
mov
inc
mov
pop
fsubr
jmp
ja
mov
lea
xor
scas
xor
pop
xlat
icebp
mov
out
leave
mov
jge
xchg
sbb
ja
mov
es
mov
pushf
cli
out
jecxz
mov
dec
adc
add
sub
xchg
daa
dec
int
pop
mov
xchg
xor
fistpl
mov
cmp
xchg
add
lds
mov
mov
jo
jne
sti
sub
sbb
mov
leave
mov
push
sub
adcl
mov
add
mov
aad
xchg
arpl
mov
mov
mov
and
cmp
test
addl
sbb
cs
jns
fwait
das
push
push
push
rcl
dec
aad
andl
xchg
or
cli
jmp
mov
ss
xchg
fwait
icebp
ds
das
ss
insb
and
int3
pop
pop
in
or
jg
sti
lock
and
enter
fnstsw
cltd
inc
mov
push
pusha
dec
xor
lret
movsl
enter
push
mov
inc
push
and
repnz
fcmove
add
repz
jbe
pop
cmp
imul
lods
cmpsb
inc
in
sti
movsb
imul
cs
sbb
mov
out
sbb
bound
outsl
add
mov
jbe
push
popf
mov
es
jge
fisubrl
pop
fdivp
es
jns
idivb
jns
sub
test
in
movsl
xchg
sarb
movb
xchg
sub
mov
jnp
xor
outsl
imulb
leave
gs
je
lock
ret
in
enter
aas
xlat
pop
xchg
test
fwait
xor
mov
adc
in
es
testl
imul
mov
inc
and
je
leave
dec
inc
sbbb
call
testl
adc
push
orl
dec
jnp
and
mov
pop
lods
sub
mov
aad
scas
cs
jnp
add
xchg
aad
movsb
stc
sbb
lds
mov
push
pop
out
sub
xor
adc
test
push
mov
std
fsubrs
sub
ds
test
fcomi
push
nop
cmp
outsl
push
inc
jg
add
dec
jne
int
mov
fildll
rcrb
stos
rcr
pop
call
hlt
cwtl
dec
mov
mov
adc
dec
sub
or
mov
nop
jb
pop
cli
jecxz
inc
fcomps
insb
or
out
outsb
dec
jl
inc
xor
jnp
fmuls
push
sub
aas
rcrb
sub
pusha
inc
imul
ljmp
dec
mov
mov
fisttpl
jb
loop
fistpll
mov
dec
and
jp
mov
jns
add
or
mov
pushf
clc
out
or
add
fdivrp
outsl
pop
add
ja
clc
mov
rclb
out
xchg
cmp
push
or
sbb
imul
inc
lahf
sti
stos
jmp
xor
inc
jnp,pt
push
and
mov
dec
mov
pop
movsb
shrb
jb
sub
xchg
aad
out
jg
adc
inc
push
lcall
cmp
ss
sbb
int3
push
mov
fisubs
mov
mov
jl
repnz
mov
inc
pusha
lods
cmp
fwait
repnz
mov
movsl
pop
adc
jg
les
enter
test
shlb
cmc
jg
aam
or
test
aam
arpl
arpl
push
popa
cmp
std
fucomp
es
fistps
aas
dec
addr16
push
jg
push
inc
push
mov
lock
aam
fsubl
fwait
scas
fildll
loop
jae
enter
es
xorl
cmp
dec
mov
je
jbe
and
mov
push
jo
or
and
ds
xlat
cs
push
lock
adc
pushf
aaa
insl
sarb
dec
xchg
mov
frstor
outsb
insb
cmpb
mov
mov
xchg
repz
mov
cmp
add
dec
scas
popf
fidivl
xchg
rol
pop
pop
jne
fcoml
mov
cltd
add
or
cltd
mov
mov
xchg
data16
popa
xor
jl
imul
sbb
lods
dec
inc
rcr
movsl
in
and
mov
and
pop
push
dec
xor
cmp
out
pusha
sub
es
mov
addr16
imul
pop
xchg
jbe
pop
or
arpl
add
stos
sti
cmpsl
jne
fnstcw
lods
inc
pushf
dec
popf
movsl
jnp
idivb
adc
fildl
adc
sub
adc
lds
das
mov
out
lock
sub
pushf
dec
stos
stc
jecxz
popa
rorb
pop
mov
mov
push
popf
loop
pop
mov
jb
sub
add
and
pusha
and
lea
mov
and
call
mov
adc
imul
loopne
mov
inc
sub
jbe
inc
ja
jp
enter
sahf
cmp
pop
faddl
nop
jae
or
test
mov
sub
addl
icebp
pop
int3
jle
out
cmp
push
int3
outsl
push
in
mov
ficoms
divb
adc
jp
out
or
xchg
mov
xor
jl
sub
movl
icebp
xchg
lods
or
fstps
fdivrl
das
daa
jnp
xor
sahf
aaa
xchg
nop
jmp
ss
into
fmull
mov
aad
mov
test
sub
fidivl
lret
nop
negb
cmp
or
mov
dec
rcrl
mov
mov
dec
and
push
inc
jmp
jl
and
in
xlat
xchg
adc
inc
xor
xor
add
add
sub
scas
out
adc
sub
bswap
jecxz
mov
int
jp
dec
clc
inc
xchg
and
ret
call
dec
shl
call
push
mov
or
fwait
loope
out
inc
out
xor
aam
inc
sbb
xchg
dec
inc
and
ss
out
xor
cmp
push
ja
push
pusha
lock
cmp
mov
push
clc
sbb
scas
fsubrl
pop
data16
inc
inc
loopne
das
push
loopne
pusha
into
xchg
addb
add
fistpl
sub
out
or
pop
add
push
sbb
jb
add
push
sub
mov
clc
add
sbb
sub
add
or
inc
icebp
bound
mov
test
xchg
fsubrl
xorl
nop
pop
movsb
adc
outsb
or
dec
xchg
daa
xchg
int3
mov
ja
fcomps
inc
and
das
call
lds
iret
dec
popa
sbb
shufps
xchg
ret
lcall
lods
xor
orl
xor
mov
mov
lret
push
enter
adc
push
push
mov
mov
mov
sarb
popa
test
cmp
jns
or
inc
sbb
push
cmpsl
dec
cwtl
faddp
ds
adcb
mov
ss
enter
inc
inc
mov
pop
cltd
repnz
loope
add
test
lds
pxor
pushf
imul
aad
adc
jl
in
mov
xchg
sbb
out
or
imul
cmp
or
rclb
mov
mov
dec
movsb
stos
adc
mov
push
rcrl
insb
cltd
cmpsb
movsb
scas
push
loop
loope
sbb
jl
inc
into
lret
sub
pop
cmc
out
loopne,pn
inc
jae
xor
cwtl
ljmp
push
outsb
fbld
inc
xchg
ficoms
xchg
stc
cld
push
and
xor
aam
test
push
sahf
insl
sbb
lock
fildl
push
xor
cwtl
into
bound
dec
pop
jnp
jae
lahf
cmp
add
into
mov
jg
mov
adc
outsl
movsl
xchg
test
mov
push
push
shl
cmpsl
add
mov
aaa
hlt
das
mov
push
xchg
outsl
pop
jo
out
call
jnp
fwait
imul
sub
push
pop
scas
test
mov
fcompl
pop
ret
std
fs
movsb
inc
and
outsl
lret
cld
inc
and
subb
jae
iret
xchg
add
out
addb
jle
stc
sub
hlt
je
call
add
mov
ret
jmp
aas
sub
xchg
jne
xor
lcall
cld
fsubp
daa
shr
inc
iret
imul
pop
xchg
xchg
out
pop
mov
popf
fld
testl
lcall
nop
test
xor
jnp
cs
lahf
jecxz
in
shll
aaa
sub
xor
pusha
cmc
adc
aaa
dec
cld
imul
movsl
test
shlb
jge
sbb
sub
popa
and
mov
idiv
cmpsl
out
sbb
pop
mov
push
jg
imul
ret
test
cwtl
cmp
xchg
out
xchg
push
xchg
push
mov
xor
lods
inc
jbe
cmp
and
sub
fidivrs
call
call
imul
dec
cmc
cmp
popf
fldl
sbb
inc
popa
push
inc
pop
popf
or
cli
add
adc
inc
and
and
sub
xlat
es
cmp
addr16
push
adc
mov
or
aaa
ljmp
push
adc
xchg
inc
lds
mov
daa
xchg
cmpsb
inc
leave
cmp
loop
es
adc
andb
mov
ja
mov
cmp
dec
lods
or
push
fcmovnu
in
hlt
les
aaa
cmpsb
mov
movsb
or
sbb
rcrl
cmpsl
cwtl
les
xor
shrd
xchg
xor
push
or
sbb
fisttpl
pop
xor
mov
mov
adc
dec
cli
inc
mov
mov
in
cli
daa
cmp
aas
fadd
mov
fadd
xchg
in
std
push
add
mov
pusha
pop
xchg
mov
lods
rorb
xchg
aas
push
jae
lods
jnp
test
cltd
sbb
or
push
xor
leave
xlat
mov
xchg
add
mov
dec
movsb
dec
pushf
mov
lods
aas
and
insl
jb
and
mov
scas
sbb
std
cltd
jmp
cmp
mov
push
mov
loopne
xor
jp
dec
jno
and
mov
xor
mov
ja
mov
cli
gs
es
test
add
mov
addr16
pop
jno
int3
andl
add
mov
pop
and
jecxz
add
aad
jmp
mov
cli
push
cli
or
push
or
arpl
sbb
int
mov
mov
pushf
xchg
jle
ret
insb
add
call
arpl
xor
jmp
fiaddl
and
rclb
cmpsb
sub
dec
push
sbb
loope
mov
rorb
push
sub
push
mov
cmpsl
cltd
push
fstpl
lret
psrlw
in
jo
xchg
fstps
fwait
add
ret
mov
adcl
xlat
dec
jmp
xlat
adc
jg
cmp
mov
mov
xor
inc
sbb
sbb
jne
add
and
pushf
jl
and
out
and
adc
lcall
jge
jo
and
pop
lret
push
lret
cmp
push
fsubr
popa
inc
out
fcomip
shlb
and
jae
mov
jmp
cmp
mov
lods
aas
sbb
repnz
test
adc
mov
inc
fidivs
into
clc
fidivl
cltd
fbld
popf
push
js
or
xlat
jnp,pn
inc
call
xchg
pop
sbb
js
mov
jno
xlat
cwtl
pusha
add
mov
and
leave
inc
ljmp
cmp
nop
insl
add
js
mov
xor
xchg
icebp
jne
rcrl
add
jae
lret
bound
sbbl
dec
aas
int3
fimull
in
test
cmpsb
jbe
push
shl
xor
mov
mov
push
jg
cmp
fadds
ror
ss
adc
repz
pop
push
test
push
add
inc
sub
iret
xor
rcr
aaa
dec
ljmp
inc
ljmp
ljmp
mov
repz
mov
pop
jnp
ljmp
add
pop
xor
cltd
lret
pop
movsb
mov
dec
mov
mov
setne
lahf
les
aaa
les
ret
or
inc
addr16
mov
test
adcl
inc
mov
xchg
mov
jl
inc
jle
add
shrl
addr16
push
je
mov
roll
lcall
add
push
out
push
xor
and
jmp
cltd
lahf
cmp
dec
orb
xchg
push
imul
data16
pop
push
icebp
repz
mov
addr16
sbb
and
jnp
pop
mov
dec
lods
pop
loopne
push
jmp
jb
das
and
xchg
dec
xor
mov
sub
scas
push
pop
push
lods
xchg
testl
iret
pop
or
fnstenvs
cmp
mov
xor
idiv
cmp
mov
mov
push
daa
pop
in
inc
cmp
in
shrl
cltd
mov
aas
out
mov
bnd
xchg
outsl
cwtl
pop
mov
lret
and
faddl
in
or
sub
add
pop
cmp
stos
dec
outsb
leave
add
push
or
jp
mov
int3
imul
test
push
cmpsl
push
mov
cmp
push
inc
icebp
mov
xchg
xchg
and
jno
test
pop
stos
mov
clc
dec
mov
lcall
cld
or
imul
push
xchg
cmp
mov
cli
jb,pn
or
xchg
les
inc
dec
gs
adc
fbstp
sahf
shlb
out
rcrl
inc
inc
int
or
sar
xchg
or
jnp
push
icebp
or
popa
and
and
inc
leave
add
sub
and
cmp
orb
pusha
pop
xor
sti
cmp
jecxz
and
mov
push
or
push
push
mov
mov
test
add
jmp
insb
mov
push
jg
pop
fs
or
test
push
fsubl
and
not
push
mov
mov
aas
loope
push
js
ljmp
shll
push
push
pop
sar
jnp
jno
cli
mov
in
adc
loope
fdivs
or
in
or
ja
test
xor
dec
cltd
add
mov
aaa
push
or
add
add
push
add
cs
inc
hlt
cld
std
daa
sbb
aam
pop
mov
pop
les
in
mov
pop
mov
test
mov
sub
or
cwtl
add
mov
push
mov
add
popa
ret
sub
jge
nop
jecxz
adc
fcmovnb
cmp
pop
fcomps
inc
cli
pop
cmp
mov
jne
adc
jp
adc
jne
mov
xchg
xchg
xchg
scas
jne
sub
mov
pop
fdivl
push
test
dec
lods
jl
bound
mov
dec
in
pop
in
sti
stos
inc
inc
int3
mov
imul
jne
ret
lahf
jp
andb
sbb
push
lods
and
flds
push
jl
lea
and
jne
fistl
adc
xchg
xchg
imul
imul
rorl
out
daa
and
ja
ror
out
icebp
pop
jb
dec
mov
mov
int
lds
stos
dec
adc
imul
out
dec
movsb
mov
dec
out
inc
hlt
je
or
aad
jae
inc
add
rcrb
sbb
xchg
or
jne
iret
cld
mov
repnz
or
xchg
movsb
xor
mov
andl
shll
and
mov
adc
and
mov
mov
jbe
std
inc
jae
fcmovnu
sub
pop
xor
sub
push
leave
fisttps
jo
ret
filds
jge
push
je
mov
lock
push
xor
pop
int3
and
sarb
sub
or
outsl
and
dec
xchg
jmp
rorb
inc
ret
mov
jnp,pn
mov
add
xchg
cltd
ret
das
aad
lea
daa
dec
inc
or
loop
ljmp
and
js
sahf
jle
hlt
fs
pop
popa
jecxz
ds
push
xor
add
xor
cli
stc
jbe
cmp
popa
call
cmc
sbb
push
lahf
cmpsl
dec
ss
enter
ljmp
inc
and
enter
sbb
push
xchg
push
testl
dec
sub
or
loop
mov
or
xchg
pop
mov
push
iret
adc
mov
mov
cli
pop
jns
xchg
loopne
ljmp
xor
in
dec
sub
mov
in
pop
aam
push
lds
stos
in
and
mov
push
cmc
jne
inc
sbb
sbb
mov
jae
mov
loopne
inc
jbe
mov
mov
popa
push
ja
push
data16
inc
push
mov
gs
lock
dec
add
inc
cld
mov
aaa
cld
push
adc
push
mov
int
xor
pop
push
loope
sub
mov
aaa
outsl
push
jge
add
lahf
daa
lret
repz
loopne
or
cmpsl
push
rclb
dec
call
cld
insl
dec
fwait
mov
adc
pop
push
fcomp
cs
lods
les
xor
mov
mov
inc
ja
pop
mov
scas
jecxz
and
adc
jno
aam
pop
pop
das
mov
lea
lods
cli
mov
int3
push
inc
mov
cmp
mov
js
movsb
divl
lods
adc
mov
ss
mov
imul
mov
jge
movl
sub
mov
xor
jle
mov
xor
mov
addr16
into
pop
aaa
sub
adc
daa
es
leave
fwait
add
cli
test
inc
lahf
les
sbb
aam
shlb
push
and
and
or
push
aad
sbb
insb
movsb
jo
add
rol
cmc
out
js
aaa
mov
mov
out
imul
mov
mov
pushf
mov
mov
sbb
xor
mov
xor
cltd
es
nop
cltd
dec
or
sti
cmc
push
enter
mulb
push
mov
mov
adc
sarl
xchg
cld
and
mov
dec
dec
adc
fidivrs
das
adc
mov
lret
arpl
in
fwait
pop
mov
sub
adc
inc
je
jg
stos
insl
addl
movsb
or
adc
cmp
mov
sbb
movsl
adc
pop
pop
mov
fistpl
cli
or
out
scas
or
addr16
cltd
iret
int
sbb
pop
mov
cmp
inc
inc
xor
inc
mov
xor
sbbl
aas
stos
push
inc
mov
bound
push
cmp
cmp
adcl
cwtl
roll
mov
adc
mov
sbb
inc
pop
and
and
xlat
sti
add
mov
test
or
test
mov
mov
sti
sub
and
aaa
mov
aad
stos
popa
data16
xor
mov
repz
mov
inc
mov
inc
dec
inc
sbb
int
lahf
add
xor
lahf
push
ja
pop
shl
push
rorb
jp
cmp
adc
fwait
dec
int
push
push
add
movsb
mov
idivl
sub
xor
test
mov
in
pop
jge
js
std
stos
xchg
mov
dec
cmp
adc
in
pop
xor
sti
or
aas
insl
notl
fnsave
gs
fidivl
mov
sbb
cmpsl
fnstsw
mov
insl
movsb
les
outsl
mov
and
pop
and
mov
rorl
cmpsb
xor
inc
sbb
pop
lahf
sbb
and
dec
movsl
nop
insl
mov
jecxz
xchg
cwtl
loope
lods
pop
roll
pop
gs
imul
es
fadd
aaa
push
filds
or
shlb
out
jecxz
cmp
inc
sti
movsl
jno
dec
push
rol
jns
call
jle
out
add
xor
dec
or
push
mov
pop
stos
cmp
cmp
xor
pop
mov
cmp
jmp
inc
add
xchg
adc
pop
xchg
dec
jle
mov
jecxz
add
or
mov
xlat
inc
fnop
mov
xchg
in
and
dec
or
sbb
add
jecxz
push
sar
pop
arpl
ror
push
or
movsb
arpl
stos
insb
pop
int3
sub
ja
pop
pushf
test
sbb
adc
scas
push
fmul
cwtl
xor
push
pop
add
lds
or
aaa
inc
mov
mov
popf
dec
addb
mov
aas
stos
rolb
sahf
dec
and
or
fmull
sub
xchg
rolb
lret
pop
in
outsb
adc
pop
fldt
push
and
inc
sahf
dec
iret
xchg
mov
test
testl
mov
ret
fldenv
adc
sti
pop
daa
and
rcrl
jne
pop
stc
test
test
jnp
mov
xchg
scas
addr16
adc
roll
insl
cmc
mov
cmpsb
aam
sub
fcompl
add
cs
arpl
dec
jns
xor
push
std
jl
add
jle
and
icebp
inc
clc
clc
repnz
fists
mov
add
jle
mov
cmp
cmpsl
les
pop
jb
jge
in
mov
lret
sti
nop
fcoml
fisttpll
movsl
sub
int3
adc
shrb
jne
dec
ja
pop
pop
ja
aas
les
maxps
stc
sbb
stc
std
lods
pop
jge
stos
inc
inc
push
mov
push
pop
cmpsb
pop
jb
dec
repnz
outsb
pop
repz
sti
lcall
lret
repnz
and
add
jbe
jnp
cs
stc
in
int
std
imul
cmp
popf
sub
push
dec
or
xchg
enter
jne
and
push
xchg
lret
dec
test
and
mov
movsl
inc
aad
mov
testl
stc
pop
and
incl
aaa
inc
mov
sarl
bound
aad
out
out
andl
leave
xor
inc
es
mov
pushw
add
mov
push
ljmp
inc
fistps
mov
gs
mov
xor
jmp
cld
enter
pop
pop
xchg
push
xchg
jo
insb
test
aas
push
xchg
mov
loop
andl
mov
dec
jbe
xorw
sahf
add
mov
hlt
in
call
or
sbb
enter
and
or
cmp
sarb
in
mull
cmc
mov
xor
or
insb
clc
cmp
scas
dec
in
std
inc
xlat
add
and
mov
push
cmp
inc
pop
add
or
mov
loopne
ret
arpl
aaa
lods
and
push
shrb
jecxz
xlat
add
push
or
sub
add
xchg
rclb
movsl
or
or
mov
cmp
sub
testl
jmp
imul
scas
mov
or
leave
push
sbb
mov
pop
es
or
adc
test
std
dec
fdivrl
insl
addr16
bound
mov
inc
xchg
push
cmp
andl
insl
pop
hlt
loope
push
js
rorl
jp
repnz
into
cmp
loope
mov
mov
push
jnp
pop
aas
daa
mov
frstor
std
jl
stos
outsb
shrl
aam
jg
orb
or
repz
adc
and
adc
aas
mov
or
ret
testl
push
cmp
sub
sbbl
idivl
jbe
add
sbb
cli
stos
push
mov
xchg
int3
fisttpl
cs
lea
rolb
pop
xor
dec
xchg
mov
dec
mul
add
inc
cmp
ja
sar
and
inc
daa
xchg
push
stc
jno
movsb
pop
fstl
aaa
fists
enter
je
inc
movl
mov
pop
insb
nop
sub
fcompl
fcmovu
push
shl
cmp
filds
icebp
mov
inc
xchg
mov
out
daa
popa
rorb
jge
mov
pop
imul
dec
aam
pop
adc
add
fiadds
push
test
push
mov
movsl
das
sbbl
pusha
fisttpl
js
lcall
mov
sub
cmp
mov
pop
int3
mov
xchg
jb
adc
sbb
incl
adc
inc
push
inc
aaa
jg
push
shll
int
jo
xchg
pop
mov
pop
cmc
and
adc
push
dec
fldt
push
and
out
std
and
shlb
xchg
mov
fstps
fnstcw
mov
rolb
pop
xchg
jge
ret
out
adc
popa
adc
jb
mov
sbbl
fildl
scas
sbb
push
rcl
imull
arpl
cltd
and
dec
jno
sti
mov
mov
ret
push
push
xchg
inc
fnstenv
out
sar
push
or
aam
or
fsts
pmuludq
xor
push
out
xchg
outsb
adc
js
sub
fdivrs
xor
roll
cs
mov
insb
fsubrp
xchg
inc
sub
pusha
and
cs
mov
xor
call
pop
pop
lret
sub
into
insl
loopne
mov
jle
mov
jecxz
mov
xchg
aam
or
adc
xor
mov
enter
ss
push
jnp
push
mov
scas
loope
push
inc
cwtl
and
jnp
outsl
xchg
loop
cmp
mov
imul
fdivrl
jl
iret
testb
pop
inc
sahf
flds
push
push
stc
jmp
jnp
or
fisttps
pusha
ss
mov
test
inc
pop
pop
inc
sahf
nop
xlat
sahf
xchg
cmp
imul
mov
sbb
inc
stc
add
fcomps
xchg
loopne
repz
repnz
sbb
cmp
fldl
ja
jno
push
push
cs
adc
andl
jae
xchg
jo
mov
mov
jns
int3
jmp
adc
dec
scas
mov
xchg
pop
inc
mov
pop
pop
jo
cwtl
cmpsl
fsubrl
cmc
int
or
insl
adc
lods
dec
mov
cli
and
push
fnstsw
int
dec
jecxz
cs
xor
dec
lea
dec
xchg
ja
inc
popf
mov
leave
add
xchg
push
sbb
fnstcw
out
int3
test
in
inc
push
jno
fisubs
ror
ds
and
cmp
enter
push
jnp
in
sahf
in
inc
push
push
xor
push
lock
mov
inc
jne
scas
add
mov
inc
ret
or
loop
sahf
fs
push
xchg
mov
adc
sub
test
sub
add
inc
shrl
cli
push
into
add
test
xchg
push
inc
push
cli
fimuls
test
push
lods
mov
mov
add
pushf
lea
sbb
aam
cmp
or
lret
cmp
test
and
orl
ljmp
mov
pop
pop
pop
inc
into
pop
jns
outsl
fdivs
leave
mov
ja
stos
rdmsr
rcl
mov
mov
jl
loopne
cmp
fcomip
stc
outsl
xchg
aas
mov
sbb
stos
incl
push
sarl
and
inc
lret
pop
mov
iret
or
lods
icebp
pop
pop
xorb
adc
lods
daa
add
push
aaa
jp
mov
in
cmpsb
jmp
inc
test
xchg
les
push
into
enter
gs
iret
sbb
std
in
subb
push
and
pop
xor
sti
movsl
notl
gs
mov
adc
addr16
jp
dec
mov
sbb
rolb
pop
and
mov
dec
out
cwtl
test
aad
xchg
push
xchg
loop
lcall
mov
xor
jge
cmp
int3
fsubp
pop
cmp
pop
jl
pop
lds
jnp
mov
and
pop
lret
xor
repz
repnz
stos
xor
fs
inc
push
adc
ret
aam
ret
cltd
add
pop
iret
cs
mov
sbb
subl
rcr
cmc
pop
cmp
icebp
and
adc
and
jge
inc
sub
mov
or
ja
test
out
es
lret
mov
jl
push
xor
xor
int
mov
stos
imul
jb
lret
jge
cltd
in
xor
pop
pop
fnstenv
dec
fstpl
and
test
sub
jp
dec
clc
xchg
and
pop
in
nop
scas
imul
pop
cmp
jl
gs
adc
pop
dec
mov
mov
cmp
and
push
dec
lahf
inc
push
lret
cld
push
xchg
pop
sahf
inc
adc
lret
pop
stc
nop
jl
jns
mov
sub
sub
or
out
xor
lods
in
sub
sbb
jno
outsb
mov
mov
pop
das
mov
test
mov
cwtl
xchg
pop
aaa
add
push
or
rcrl
adcb
jmp
push
adc
fisttpll
movsb
sbb
cmpb
sbb
pusha
xor
lock
pop
aas
iret
sarb
inc
imul
lcall
pop
pop
rorb
sbb
pushf
xchg
outsl
insl
outsb
dec
dec
mov
jg
xor
leave
je
dec
ret
inc
into
push
or
push
imul
jge
push
jae
mov
and
ljmp
sarl
jl
sub
push
shl
ja
pop
std
leave
add
lea
movsb
fdiv
dec
jle
fnstcw
xor
fcomps
psrad
aaa
enter
adc
add
mov
and
and
push
frstor
in
jo
push
loop
into
pop
jb
fwait
adcl
nop
imul
xor
clc
push
xchg
add
inc
xor
sbb
ljmp
or
mov
lock
adc
repz
jne
mov
stc
stc
aad
xor
push
test
lret
pop
mov
dec
cmp
ljmp
insb
pop
cmp
ds
jae
call
adc
push
inc
es
bound
lahf
ficoms
inc
xlat
jp
sub
lea
rcrb
aaa
inc
cmpsl
dec
and
or
sarb
shr
push
mov
and
rcrb
in
jb
push
je
fs
ss
mov
mov
sub
cmp
xchg
std
pop
stos
stc
dec
test
push
dec
mov
sbb
shrb
adc
mov
test
lret
cmc
push
lods
mov
mov
and
lds
adc
dec
sub
push
hlt
idivl
mov
sbb
pop
out
popa
testb
xor
or
daa
mov
add
adc
lcall
dec
hlt
jno
scas
jne
scas
neg
lret
mov
pop
ja
scas
hlt
push
or
pusha
cmp
loope
lods
insb
aaa
and
inc
xchg
loopne
pusha
fs
mov
sbb
rorl
cmp
sbb
sti
sub
jo
ss
jbe
mov
js
xadd
xchg
mov
clc
mov
xchg
mov
cmp
jecxz
xchg
jg
cld
lds
lret
pop
pop
mov
inc
shlb
insl
cmp
pop
dec
lret
add
add
movsl
repnz
mov
mov
rcll
outsb
jecxz
push
or
mov
push
mov
jecxz
ret
lods
push
movsb
xor
arpl
push
decl
movsb
mov
jg
ljmp
loopne
cmp
in
adc
xchg
js
or
lock
loop
add
xchg
test
fldcw
push
jne
imul
jne
inc
mov
push
out
lar
std
mov
popa
fmuls
in
pop
stos
movsb
stos
idivb
jle
xor
xchg
test
clc
sbb
mov
push
pop
subb
jne
lods
mov
in
cmpsb
mov
or
xchg
test
cwtl
mov
ja
popf
lret
push
sbb
push
adc
xchg
and
xor
lock
in
xchg
ss
cmp
or
mov
mov
mov
shll
dec
push
loope
test
pusha
push
adc
repnz
repz
or
ffree
cmp
cli
mov
outsl
push
mov
add
jle
aas
jp
andb
mov
xor
jl
andl
adc
cmp
pop
jnp
lock
loopne
xchg
mov
fs
mov
mov
xchg
cmp
scas
sub
test
ret
fistps
push
imul
xchg
into
xchg
gs
cmp
ret
push
xor
dec
mov
js
lahf
loope
adc
xor
arpl
pop
sub
outsb
cltd
roll
dec
scas
outsl
gs
mov
jae
mov
mov
lds
mov
sbb
jge
push
push
ss
cmp
sbb
out
inc
xchg
mov
jne
dec
mov
sahf
and
mov
and
mov
xor
cmpb
xlat
out
xor
inc
daa
dec
jge
mov
sbb
sahf
xchg
mov
fistpll
sbb
mov
dec
pop
hlt
jbe
insb
addr16
std
shlb
xor
out
addr16
push
das
or
jmp
or
mov
inc
dec
cmpsl
add
fsubl
xchg
call
lahf
or
and
andl
aas
les
inc
cmp
push
pop
clc
inc
xor
jo
jae
pop
jle
das
call
pop
insb
daa
add
pop
aam
test
sbb
out
fstp
inc
dec
mov
cmp
int
mov
dec
adc
outsl
push
or
ficompl
xchg
add
outsb
jmp
rcrb
cs
out
dec
push
fisubl
ds
rol
inc
pop
dec
mov
inc
daa
adc
pop
and
jae
xchg
test
add
push
sub
mov
push
xchg
flds
aad
or
lds
pop
mov
mov
cmpsl
cmc
jp
cmp
cs
dec
and
call
cmpsb
arpl
loop
mov
inc
cli
into
mov
aaa
in
stc
ds
fdivrs
mov
andb
into
sub
inc
cmpsb
pop
dec
insl
jl
or
daa
je
das
mov
cmp
lock
jecxz
push
inc
add
sahf
scas
dec
lret
sbb
orl
enter
mov
push
pop
add
and
test
outsl
je
sbb
push
mov
pop
mov
je
rcl
or
inc
mov
scas
stos
loop
dec
roll
jnp
aaa
or
pop
pop
int
or
or
call
cmp
cmp
clc
clc
adc
jmp
incb
cmp
adc
mov
inc
fst
sub
rcll
cltd
ror
pop
in
add
mov
test
push
lds
pop
xor
jecxz
xor
add
cs
mov
ss
push
daa
mov
cmp
and
idivb
dec
jge
enter
sub
pop
out
xchg
pop
loope
dec
bound
nop
adc
sahf
or
sbb
cmp
shlb
or
cmc
jmp
roll
mov
hlt
push
loopne
xor
xor
fcomip
cwtl
fnclex
inc
inc
hlt
cmp
sbb
lods
sbb
inc
les
dec
xchg
and
ja
push
scas
or
mov
lcall
jb
hlt
mov
ljmp
xor
stc
mull
outsb
jo
push
fiaddl
push
xchg
and
lret
mov
and
mov
popa
and
push
pusha
xchg
xchg
jnp
pop
adc
movsb
ja
cmpsb
int
sub
into
mov
xor
jl
mov
xchg
dec
imul
pop
stos
adc
cs
dec
ret
or
pop
addb
adc
ljmp
jno
mov
aas
adc
ljmp
scas
mov
pop
xorb
out
call
xchg
mov
iret
dec
subl
jnp
rorb
imul
fidivs
pop
xchg
rcll
push
cld
jg
xor
cmp
mov
inc
dec
cmp
scas
xor
das
sbb
dec
pusha
sub
dec
in
lahf
aam
or
push
and
mov
or
add
lret
mov
js
cld
mov
cmc
mov
les
mov
dec
daa
xchg
xchg
cmp
mov
cmp
mov
insl
repz
jge
arpl
cmp
test
cltd
sbb
and
fstpl
cltd
in
and
fdivs
out
jle
xchg
and
push
cli
jge
jmp
adc
mov
cmp
add
faddl
dec
push
cli
loope
rol
in
aad
dec
div
loop
scas
push
cltd
test
jo
lock
clc
inc
test
push
jl
sarl
in
adc
fstps
sti
inc
mov
mov
xor
cwtl
xchg
ja
jb
out
leave
ficompl
js
sahf
imul
scas
imul
mov
fs
loop
inc
sbb
push
notb
in
clc
hlt
mov
jnp
dec
arpl
out
xorl
test
in
data16
movsl
push
out
lea
rcl
jg
add
cmp
pop
pop
cmpsb
or
sub
ds
push
sbb
xor
shl
je
or
adc
pop
pop
pop
outsb
mov
mov
adc
xchg
outsl
sub
repnz
xor
dec
ret
lcall
leave
cli
dec
jle
fdivr
push
aam
mov
and
or
icebp
xchg
adc
fcmovnbe
mov
inc
push
pop
pop
add
sti
lret
xchg
xor
daa
jge
push
ficoms
cmpsl
cmpsl
cmpsb
pop
ja
mov
sub
push
fsub
sahf
aas
sub
jmp
jmp
pop
dec
mov
dec
arpl
and
cmpsb
in
xchg
mov
add
sbbb
mov
mov
clc
adc
imul
aaa
mov
dec
scas
out
mov
mov
sarb
repnz
push
shrl
orl
jb
rcl
lret
sub
or
ss
icebp
sahf
xor
push
andb
std
jne
inc
clc
ja
pop
push
in
inc
loopne
leave
ret
jle
push
mov
sub
hlt
sub
sub
mov
pop
mov
mov
ss
imul
jae
mov
xchg
ja
cwtl
lcall
int
pusha
scas
xchg
shlb
sbb
or
pop
test
outsl
lret
out
sar
push
and
roll
mov
push
mov
sbb
div
sbb
movsb
lods
aaa
imul
push
jg
mov
mov
imul
mov
enter
pop
mov
dec
mov
int
jge
aas
pusha
fdivp
fldt
adc
and
mov
jnp
jle
and
popl
clc
jb
pop
xor
sub
aam
mov
gs
sub
sbb
es
addl
pushl
push
dec
arpl
sbb
or
out
aam
das
lahf
xchg
fsub
jnp
pop
adc
jae
jbe
push
xchg
das
iret
ljmp
push
inc
lods
jno
jg
xchg
mov
sbbb
mov
repnz
fwait
lcall
imul
mov
sub
or
dec
push
and
jle
mov
scas
jecxz
sti
imul
rorb
and
dec
add
mov
arpl
cmpsl
inc
mov
jb
xor
jg
sbb
into
pop
inc
pusha
test
pop
pop
mov
iret
cmc
subb
sub
push
mov
stc
cli
sbb
lods
lods
shl
and
sub
ret
xchg
adc
mov
ret
addr16
repz
jle
push
ja
leave
int3
cmp
mov
lods
ja
mov
add
mov
in
push
mov
dec
or
lods
jae
dec
into
outsb
and
sub
xchg
pop
out
xchg
dec
clc
movsl
mov
sbb
rcr
sbb
jmp
sbb
dec
hlt
pusha
mov
dec
mov
sbb
add
daa
inc
inc
sbb
dec
inc
cwtl
mov
jmp
out
int3
leave
outsb
sub
push
and
cmp
mov
jns
and
jbe
jge
call
fsub
ljmp
mov
inc
cmp
mov
rolb
push
sub
test
cltd
inc
mov
mov
je
flds
push
popa
mov
test
mov
jbe
add
mov
push
adc
mov
xor
inc
out
push
mov
mov
pop
loope
ljmp
shr
lds
scas
cltd
pop
xor
jg
out
xor
xor
daa
sbb
les
mov
pop
dec
push
lea
add
insb
sub
adc
movsl
loop
fnsetpm(287
aad
push
shll
add
lods
cmp
das
icebp
jbe
imulb
cltd
sbb
lret
test
sti
dec
and
mov
loope
sbb
aad
or
fs
xor
push
xor
push
out
addr16
mov
movsb
jecxz
dec
les
das
stos
fcoms
rolb
je
test
adc
and
xor
hlt
icebp
add
push
push
mov
xor
lods
loope
adc
addb
lret
sti
mov
inc
insl
out
ret
enter
fcomi
push
insb
mov
push
enter
sbb
notb
pop
sbb
ds
fsubl
jne
xchg
or
mov
cld
mov
test
cmp
pop
dec
mov
nop
fstpt
adcb
in
jbe
or
xchg
push
lahf
xlat
and
shrl
push
xor
pop
push
dec
and
cmp
cmp
sub
stos
and
and
and
or
jle
jl
adc
sbb
dec
dec
or
sub
xor
ret
shll
fsubrp
shlb
cmpb
sbb
mov
and
and
mov
mov
les
push
push
xchg
xchg
inc
sysenter
mov
aas
dec
cmp
pop
xchg
mov
xchg
xchg
orb
arpl
cmp
adc
aaa
jb
cmp
sbb
mov
jge
pushf
cmp
ret
jnp
stos
mov
lcall
movsl
jae
insb
xor
es
mov
xor
sbb
and
ret
shll
jecxz
insb
mov
xlat
adc
jo
pop
mov
outsl
dec
push
rclb
aad
pusha
outsb
fs
inc
lock
clc
fildl
negb
or
dec
jne
push
lock
shll
or
jae
in
cmp
aaa
mov
sub
popf
insb
mov
push
or
int
in
adc
inc
xor
inc
outsl
or
or
inc
loop
sbb
inc
in
sarb
mov
pop
mov
cs
or
shlb
fwait
mov
mov
lcall
adcl
leave
pop
inc
sub
jge
sub
lahf
xor
shlb
out
xchg
test
mov
adc
dec
jb
cs
je
jecxz
sti
loopne
jp
les
in
int
in
cltd
lret
adc
push
pushf
aaa
lods
sub
stos
hlt
ljmp
addr16
insb
add
shrl
mov
jp
mov
pop
dec
jle
xchg
sub
pop
and
shl
fdivs
xor
xor
inc
shll
mov
dec
pop
stos
fdivs
cmp
mov
loop
add
adc
cli
xchg
stos
mov
shll
repnz
push
inc
push
dec
icebp
movsl
outsb
test
mov
mov
hlt
daa
inc
in
mov
jmp
mov
and
mov
jge
xor
pop
jle
repz
jge
int
fidivl
jae
push
mov
lock
and
adc
shlb
jge
movsb
xor
and
jbe
cmp
insl
hlt
stc
cmpsb
cs
or
sub
push
or
call
cs
jp
fidivrs
cli
jecxz
adc
push
hlt
iret
push
aam
xchg
testb
jae
popa
sbb
inc
mov
fsubrp
add
fs
movsl
stos
cli
push
ljmp
pop
cmpsb
xchg
dec
stc
mov
sbb
test
or
sub
cmp
addr16
ss
adc
cmp
cmp
int
jne
inc
orl
fwait
and
movsb
xchg
cmp
addb
or
aaa
jmp
mov
add
rorb
xchg
mov
jle
dec
pop
add
jl
jg
mov
jne
mov
sbb
cs
cli
orb
mov
out
pop
xchg
nop
jns
outsl
leave
mov
filds
das
rcll
mov
cmp
add
jnp
out
jle
add
push
add
hlt
xchg
pop
lret
loop
xchg
fwait
jne
mov
bound
add
bound
scas
jecxz
inc
mov
xor
lahf
cmp
or
loope
cli
bound
adc
leave
and
in
inc
mov
or
push
repnz
cmpsb
xchg
and
cmp
orl
insb
imul
pop
cmp
cmp
inc
aad
mov
and
adc
out
aaa
pop
xlat
lahf
jno
push
push
popf
sahf
and
jnp
dec
rol
push
jl
cmp
cmp
ja
inc
add
dec
clc
scas
je
jo
in
mov
ss
imulb
xchg
sub
mov
add
mov
hlt
inc
cld
pusha
or
jmp
dec
add
push
push
cmp
in
cmpb
push
sbb
adc
xchg
test
movsb
or
mov
lock
or
das
jge
daa
adc
stc
mov
inc
adc
aam
mov
lret
push
pop
stos
jo
mov
gs
jno
inc
push
dec
cltd
pop
fwait
mov
xlat
insl
sbb
xchg
scas
leave
cwtl
pop
pop
xchg
divl
and
ret
and
mov
cmpl
es
fmuls
stos
xchg
xchg
fsubrl
or
jne
xchg
inc
push
pop
add
push
divl
cmpsl
arpl
sahf
negl
aas
xchg
orl
push
iret
cmpl
pushf
leave
lahf
mov
cmpsl
out
outsl
les
and
sub
cwtl
inc
push
cmpsl
out
pusha
or
xor
xchg
icebp
bound
mov
aaa
inc
out
out
or
mov
push
pop
mov
addr16
or
outsb
xor
mov
ss
ss
mov
xchg
les
and
dec
mov
jge
mov
lahf
cmp
xchg
mov
js
lret
test
rcll
popf
test
jge
test
sbb
inc
loopne
jl
imul
push
dec
push
bound
add
sarb
mov
je
sti
movsb
lcall
mov
push
adc
dec
jp
jmp
inc
fldl
pop
imull
or
out
out
clc
popa
dec
xchg
stos
aaa
mov
and
cmpb
sahf
push
icebp
fiaddl
xor
insb
lahf
mov
ja
ret
test
cmp
leave
mov
cmpsl
push
hlt
test
and
ja
pushf
sub
hlt
push
cmp
fcom
push
dec
sub
loope
fsubrl
aam
xor
outsb
inc
insl
shrl
xchg
jno
fnsave
movsb
or
cld
mov
shl
pop
rorb
mov
or
xchg
movsl
and
in
into
xchg
jmp
ds
adc
xor
mov
inc
and
push
and
add
stc
pushf
mov
and
in
jae
dec
stc
mov
cmpl
stos
in
xor
mov
adc
stos
push
inc
arpl
es
out
jns
pop
addr16
sarb
inc
xchg
loopne
cs
dec
js
inc
scas
nop
mov
mov
jae
mov
push
xchg
das
bound
lret
pop
test
movd
int
cmp
inc
cmp
popf
jg
cmpb
sbb
and
fisubl
jmp
dec
in
imul
dec
into
cmpsl
cs
out
and
sti
jbe
lcall
pusha
mov
push
add
aas
add
hlt
jns
inc
mov
xchg
sub
mov
mov
add
aad
addr16
cltd
push
pop
out
pop
xchg
inc
jbe
jne
rcrl
ds
xor
fmuls
fs
mov
gs
mov
mov
push
test
inc
mov
jb
out
clc
sub
cmp
jmp
push
aam
inc
push
bound
fldcw
imul
or
ja
arpl
shr
pop
or
dec
dec
xor
test
xchg
test
pop
test
inc
push
fwait
lahf
dec
and
sub
aad
xchg
cwtl
popf
or
lahf
inc
jo
rorl
lds
scas
jne
jle
in
lret
ret
imul
int
push
fisubs
xchg
pusha
jle
mov
mov
aas
repnz
push
dec
cmp
aam
adc
pop
js
xor
xchg
loopne
sub
push
bound
outsb
dec
or
shlb
jge
push
aam
sarl
inc
adc
test
insl
aaa
push
shl
jl
ds
add
jle
or
inc
jno
xor
inc
bound
push
jnp
xor
xor
jmp
mov
inc
pop
adc
pop
xchg
sub
push
xor
ficomps
sub
shlb
push
jecxz
sbb
inc
shl
pop
fadd
sbb
cmpsl
shlb
push
orl
daa
fwait
and
adc
sbbb
int3
jo
mov
xorb
movsl
aas
lock
inc
outsl
aam
xchg
test
out
inc
rol
cli
int3
out
lods
clc
mov
les
or
cmp
pop
lea
fldenv
dec
inc
dec
lret
pop
mov
jp
or
stos
ret
call
test
call
call
and
inc
stos
pop
add
push
ss
pushf
imul
psrlw
jge
fs
push
xor
push
sbb
pop
test
add
mov
sub
xor
add
xor
imul
in
test
es
stc
icebp
push
mov
xor
adc
jmp
cmp
xchg
xchg
test
iret
dec
jmp
sub
push
insb
add
mov
mov
pop
xor
fcmovne
pusha
adc
sub
mov
clc
inc
test
jg
mov
mov
icebp
inc
sbb
adc
insb
cmp
pop
lret
inc
push
andl
in
fistl
push
and
dec
dec
vpshaq
push
mov
aaa
dec
pop
sbb
mov
xchg
mov
jp
xchg
and
pmaddwd
adcb
and
popa
pop
pop
sbb
andl
mov
mov
push
xchg
jnp
int3
mov
cmpsb
or
pop
rcrb
enter
in
jo
testb
sbb
popl
mov
adc
subl
mov
cltd
pop
mov
lods
push
push
cld
in
in
adc
les
ja
in
mov
cmp
sbb
mov
pusha
lret
pushf
std
in
mov
cmpb
lahf
push
into
fistpl
mov
push
add
mov
mov
nop
inc
pushf
sub
imul
mov
cmc
jne
pushl
shll
cmc
popf
cmp
xor
push
cmpsb
out
test
dec
in
lock
dec
jle
js
loope
cld
scas
sbb
jle
shl
mov
fisubs
jecxz
pop
xchg
inc
sbbl
mov
test
cld
adc
cmp
mov
popf
sub
movsl
jmp
mov
gs
dec
xchg
push
scas
xchg
jo
or
jg
xor
mov
icebp
pop
xor
jl
scas
mov
xlat
ljmp
lret
or
jnp
xchg
jo
sbbb
lods
mov
mov
pop
mov
mov
or
sub
or
shrb
in
loope
mov
test
imul
push
inc
or
fldenv
orb
adc
or
movsb
sub
imul
call
test
lds
lock
push
mov
aad
inc
mov
es
cmp
ds
lods
mov
sbb
outsb
mov
and
sub
dec
out
mov
jae
ret
push
call
iret
pop
jmp
inc
test
sbb
std
inc
fcoml
rorb
lcall
sub
orb
push
outsl
test
xor
daa
sub
std
mov
pop
mov
insl
dec
jmp
pushw
fs
push
ja
mov
dec
push
aad
rcrb
cmpb
jg
mov
fs
cmpsl
in
xchg
cld
pop
fidivrs
aam
outsl
nop
mov
push
data16
cmp
inc
divb
pushf
push
stos
inc
addr16
or
or
andb
cmpsb
mov
inc
sub
cmpsb
mov
bound
nop
pop
mov
call
cld
mov
xchg
pop
add
jmp
jbe
mov
mov
xchg
adcb
lret
push
fs
adc
inc
mov
cmp
pop
inc
and
inc
daa
in
xchg
dec
xor
nop
mov
cld
int
mov
js
cmp
push
hlt
aam
mov
cmpsb
insl
push
loope
cmp
cmp
loopne
mov
call
xchg
faddp
in
sub
xorb
lret
repnz
jno
pop
mov
pop
iret
push
mov
in
loope
pop
push
push
xchg
sbb
insl
cld
ret
jmp
dec
popa
ljmp
cmc
sbb
push
lcall
testb
push
push
or
pop
insl
xorb
xor
cmpsb
out
mov
lock
dec
dec
mov
fs
mov
stos
into
ficomps
sbb
jge
cmp
cld
dec
pop
pusha
lret
repz
ret
scas
cmp
ss
lea
popf
adc
and
fwait
inc
pop
jb
mov
mull
xchg
lock
push
loop
ficompl
xor
fdivrl
mov
push
mov
cmp
cmpsl
movsb
fs
add
call
pop
imul
ret
cld
push
jae
push
lcall
or
ss
daa
sub
pop
xchg
push
add
out
add
xchg
addb
push
xchg
mul
sbb
lahf
loopne
out
xorl
testb
dec
mov
out
enter
xchg
ss
stos
ret
xchg
mov
aas
pop
add
xor
adc
inc
mov
addr16
xchg
shlb
es
or
mov
movsb
xchg
xchg
inc
and
test
inc
pop
pop
hlt
xchg
cmpsl
dec
ljmp
jmp
and
dec
ret
or
lcall
xchg
outsb
pop
sub
xchg
push
jnp
adc
jnp
incb
pop
dec
cmp
push
test
mov
das
gs
in
or
ret
jno
adc
jle
outsl
in
ljmp
imul
iret
inc
lods
daa
dec
inc
mov
inc
push
leave
popf
mov
jo
aaa
xor
pop
lods
xchg
imulb
sbb
push
insb
lock
fxam
mov
mov
scas
inc
gs
xorb
popa
int
fisttpl
push
jbe
dec
je
push
add
mov
inc
xchg
xor
mov
or
sub
into
jle
dec
push
mov
popf
loop
movb
or
mov
jb
fistpll
daa
adc
repnz
jno
test
inc
xchg
xchg
mov
test
subl
loope
xchg
cltd
test
sbb
inc
lahf
popf
pop
cmc
xchg
pop
fs
inc
in
push
imul
loope
frstor
dec
dec
add
cmp
add
inc
data16
insl
xchg
fcomps
push
cmp
in
inc
sbb
lods
dec
cmp
stc
int
test
out
xchg
jecxz
sub
shrb
mov
in
fistpl
pop
xchg
ficoms
imull
add
dec
aaa
jl
mov
test
xor
loop
in
out
dec
aas
shlb
flds
out
inc
inc
pop
xor
add
jecxz
js
daa
scas
std
sbb
lds
imul
adc
or
inc
fs
pushw
cmpsl
insl
adc
out
aaa
cmp
subb
outsb
movsl
pop
pop
cmp
insl
jcxz
shlb
mov
repz
fucomi
and
dec
movsl
rep
sbb
push
popa
dec
dec
adc
cmp
testb
dec
mov
mov
lahf
cmpb
mov
sub
nop
lea
pop
inc
mov
sub
test
sbb
mov
jp
daa
mov
leave
dec
jnp
and
pop
out
push
call
sbb
cmp
mov
sub
lcall
xchg
jno
es
push
decl
test
setae
jle
jmp
mov
pop
jmpw
imul
mov
out
add
mov
pop
or
jcxz
push
ret
mov
inc
sub
cmc
leave
inc
data16
jo
mov
mov
adc
mov
and
test
stos
ljmp
push
mov
pop
mov
popf
sarb
push
nop
xor
xor
ljmp
hlt
sbb
xor
ret
lea
out
cli
flds
int3
xor
or
cmp
pop
leave
xor
cwtl
mov
pop
popa
jge
sbb
mov
jecxz
adcb
add
mov
out
out
push
push
mov
jae
stos
xchg
roll
or
xchg
and
xor
mov
mov
sub
fldenv
outsb
mov
and
xor
dec
cmpsb
mov
es
xchg
sbb
sub
out
fidivrl
out
fcomi
loopne
test
add
fwait
scas
inc
pop
rolb
mov
int3
mov
mov
push
lds
in
fcompl
and
xor
shr
lds
add
ret
pop
inc
je
arpl
aaa
fldlg2
sbb
jb
es
mov
pop
stc
add
aad
repnz
mov
inc
scas
outsl
xchg
popa
mov
ds
jmp
testb
mov
adc
out
adc
jmp
clc
add
adc
dec
mov
das
lock
mov
int
cmp
ret
leave
jmp
xor
mov
and
daa
sub
aam
jp
cli
out
xchg
stos
dec
or
sub
in
jns
mov
sbb
fcmovbe
fsubs
sbb
add
jge
cmc
pop
mov
jnp
cmc
push
mul
mov
in
sub
and
or
cld
and
inc
sub
inc
imulb
or
lock
ror
ds
mov
loopne
scas
push
dec
adc
arpl
sti
dec
push
movsl
daa
xchg
lret
push
xchg
fisttpl
pop
dec
push
cmp
js
movsl
fildll
jp
mov
jne
movsl
hlt
mov
cmc
jns
xchg
push
ret
adc
mov
jb
cmp
imul
or
shll
jno
mov
push
sbbl
mov
int
pop
or
arpl
sub
adc
repnz
xchg
es
inc
test
repz
inc
sahf
movsl
push
xor
roll
and
xlat
adc
jnp
adc
in
dec
add
mov
sub
cmpsl
popa
mov
daa
movhps
sbbl
repz
inc
cli
je
loopne
push
push
pushf
inc
add
fldenv
mov
pop
pop
pop
pop
mov
insb
jnp
jns
dec
cld
or
sub
jge
xchg
lods
iret
sti
dec
sti
jo
push
in
push
jp
inc
sbb
xor
ds
mov
in
jbe
mov
cmc
xor
ror
repnz
imul
cld
addb
rcl
int
adc
push
loopne
mov
cmp
push
imul
xchg
mov
stos
scas
adc
sub
call
mov
xor
rorb
lods
movl
push
push
mov
cmpsb
jmp
enter
xlat
cld
ja
loope
push
xchg
pop
push
cmp
cmp
jecxz
and
outsb
inc
repz
int
mov
es
mov
sarl
stos
mov
dec
sub
xor
mov
mov
xchg
xchg
push
cvtdq2ps
push
leave
inc
fidivl
fldcw
mov
inc
sbb
jp
push
rorb
sub
add
jae
ss
testl
lret
jle
fwait
push
lods
xchg
push
lret
jb
test
icebp
outsb
stc
push
leave
xchg
ret
sub
and
arpl
jge
fwait
cld
xor
and
in
mov
std
inc
test
adc
inc
movsb
push
mov
movsl
sbb
repnz
xchg
cmp
pop
xchg
push
clc
out
sub
and
xchg
mov
and
cmpsb
out
popf
ljmp
mov
sti
and
jg
xchg
mov
ret
pushf
fstl
jecxz
mov
cmp
leave
push
or
jp
sub
cmp
out
and
pop
lcall
mov
pop
adc
xlat
rorb
popf
mov
cmp
push
push
mov
mov
add
imul
clc
cmp
inc
inc
divl
mov
cmp
sub
cmc
sti
aad
adc
fcoms
or
repnz
mov
push
push
das
jnp
imul
addr16
sbb
loope
cmp
cmc
loope
stos
sbb
and
push
jmp
into
add
push
scas
push
xor
stos
in
sub
push
mov
hlt
nop
gs
fimull
lods
jns
mov
movsl
imul
add
xor
mov
xor
in
nop
mov
aam
js
out
jae
lea
mov
in
les
stos
mov
jl
cs
xor
xor
mov
daa
cmp
jo
push
nop
sbb
xchg
rolb
insb
je
cs
xchg
push
pusha
sahf
popa
and
xor
mov
or
outsl
xor
or
add
sub
call
adc
scas
into
scas
cmpsl
add
sub
or
jb
cmpl
in
jae
mov
insb
mov
mov
je
js
popa
cmpsb
test
mov
loop
loop
lods
adc
sub
loope
dec
add
pop
push
imul
outsb
add
fldcw
xchg
xlat
insb
lret
stc
mov
pushl
xchg
pop
sbb
add
cmp
mov
cmp
cmp
or
hlt
mov
mov
or
pop
and
jmp
dec
fldenv
jg
int3
ja
push
mov
cmc
sbb
adc
dec
xchg
in
inc
pushf
and
popa
adc
into
xchg
cmpb
lods
xchg
stos
in
testl
push
fistps
sar
and
add
xchg
or
inc
sbb
inc
inc
add
in
jp
pop
mov
int
sub
adc
or
je
adc
sbb
jp
outsb
inc
pop
push
lret
pushf
shll
dec
cli
mov
out
cmc
sub
and
fcoms
and
add
jl
push
fcompl
sbb
scas
or
sbb
xor
mov
jbe
aam
cmovbe
xchg
in
cmpsl
mov
mov
std
movsb
and
sti
mov
ror
je
movsb
push
mov
aaa
fiadds
leave
xor
mov
popf
fwait
or
lock
cmp
fbld
sbb
add
push
dec
or
pop
jno
sti
mulb
js
arpl
iret
cmp
mov
int3
inc
mov
mov
mov
mov
push
aam
mov
shr
mov
xor
pushf
mov
test
jl
or
shl
mov
je
jb
aas
aam
lock
cli
jae
clc
ret
jle
cmp
addr16
jmp
bound
cmovs
sbb
aas
leave
push
cld
cmp
cmpsb
mov
test
stos
cmp
push
cmc
pop
movsb
loopne
out
inc
add
cmp
stos
outsl
popf
inc
xor
mov
inc
jb
imul
mov
adc
into
jne
or
xor
mov
or
cmpsl
cli
out
and
cmp
adc
fsubr
push
hlt
lods
or
mov
out
pop
imull
xor
mov
cmc
add
pop
add
inc
xchg
pop
scas
or
popa
cltd
pop
fucom
orl
jmp
push
in
sti
fidivrs
rol
sub
jno
test
mov
sbb
ficoml
or
sahf
jp
jecxz
lret
adc
aaa
sbb
lret
mov
insb
xor
add
xor
lcall
fs
pop
jbe
std
ds
fldt
cmc
xchg
in
dec
shll
xor
test
dec
adc
sub
jle
xor
bnd
ja
inc
pushf
add
aaa
iret
sbb
lock
lds
jne
push
out
xlat
inc
mov
aaa
test
das
fisubl
pop
jb
add
inc
and
sub
or
push
pop
xchg
sbb
sub
xor
mov
pop
pop
es
sub
push
dec
and
sub
xor
jp
daa
cmpb
add
push
jmp
test
pushf
inc
push
xchg
inc
push
shl
aas
shll
repz
ds
push
add
inc
mov
mov
fmuls
inc
dec
and
mov
fildl
mov
mov
mov
mov
outsl
scas
out
inc
scas
dec
mov
adc
add
mov
mov
pop
xchg
mov
popl
pop
shrl
jne
fidivs
or
aad
clc
mov
and
jnp
jnp
mov
stos
adc
js
dec
jbe
call
dec
sahf
outsl
outsb
cmp
or
add
test
jge
pop
cmp
inc
sbb
dec
sub
incb
dec
lock
add
mov
sub
xorl
xor
insl
adc
lcall
enter
out
pop
incb
data16
mov
sub
out
inc
pop
sub
push
or
aam
or
outsb
adc
and
imul
divl
es
push
add
push
fdivp
jne
in
or
sti
aam
or
inc
mov
es
xchg
mov
add
cmp
divb
push
pop
mov
jg
pusha
icebp
leave
sub
push
jo
jge
pop
rolb
scas
test
jae
pop
mov
ds
fcompl
shl
ja
int3
insb
sbb
adc
cmp
mov
std
out
dec
int
mov
jo
inc
xchg
mov
add
cli
out
xchg
lret
js
testl
or
and
fimuls
out
cmp
fcmovb
dec
mov
adc
push
mov
test
jns
mov
xchg
pop
cmp
into
and
push
or
or
inc
pop
inc
push
or
mov
outsb
mov
mov
xchg
aas
call
cld
imul
xor
dec
fnop
imul
popa
hlt
sbb
popa
lods
mov
mov
insb
js
cld
push
fwait
xchg
and
leave
sbb
mov
sbb
imul
or
lret
adc
pusha
lods
mov
ljmp
mov
push
push
push
gs
cmc
sub
bound
and
or
add
dec
ja
add
loop
stos
xchg
inc
mov
xchg
addb
cli
mov
adc
fistpll
add
neg
icebp
ret
sahf
ss
jecxz
ror
test
push
jl
mov
shlb
jg
mov
cmc
inc
dec
lcall
inc
shl
fs
jle
add
imul
xor
mov
push
pop
lcall
js
mov
mov
cmp
dec
mov
push
mov
cmp
or
lods
xchg
and
mov
pop
sbb
cmc
and
jp
sbb
dec
mov
pop
and
adc
int
gs
lods
cmp
cmpsl
daa
rolb
test
rcrb
mov
mov
pop
mov
or
jb
fstpl
sbb
daa
add
int
out
pop
ss
or
push
add
js
lea
loop
push
fistps
jle
push
shl
popa
or
xlat
mov
test
arpl
sbb
clc
je
xlat
sbb
sub
mov
jecxz
add
enter
popf
pushf
inc
fisubl
cld
xchg
and
cmpsl
push
mov
jae
and
adc
clc
into
outsl
mov
xorl
lods
popl
dec
pop
cmp
call
pop
inc
int
dec
js
out
lcall
in
sbb
xorl
mov
cmc
lods
or
aad
mov
add
loope
jl
pop
test
xchg
clc
xchg
addr16
popf
mov
dec
test
sbb
inc
ja
mov
jbe
lret
xchg
sbb
arpl
sahf
lsl
fists
xchg
push
enter
outsl
testb
das
ret
sub
in
or
xchg
mov
jno
jb
in
jno
inc
mov
inc
test
cmp
or
push
cmp
fcoms
into
out
lcall
jo
pop
loop
xor
testl
mov
jns
jmp
or
jl
adc
jmp
sbb
push
sbbl
dec
or
pop
js
jbe
cmpsl
dec
and
inc
mov
enter
in
adc
lock
push
cmp
rorb
aaa
or
inc
xor
cmp
aad
outsb
xchg
out
or
in
test
and
jae
stc
and
xchg
scas
and
enter
adc
outsl
cwtl
stos
gs
nop
leave
test
mov
xor
popa
push
icebp
mov
inc
mov
decl
cwtl
imul
arpl
push
loopew
aaa
pop
repz
dec
call
loope
les
and
sahf
loop
xchg
xchg
aas
push
lcall
mov
hlt
dec
out
add
mov
in
out
fndisi(8087
mov
inc
xchg
ds
adc
xlat
stos
int3
cmp
movsl
or
sbb
push
mov
gs
inc
orl
loop
lods
in
xchg
shll
adcb
negl
xchg
mov
notl
and
inc
xchg
add
ret
ficoml
and
cltd
or
jno
insl
jmp
insl
das
xchg
pop
into
lea
rcll
pop
push
mov
stos
add
popa
fs
jecxz
lret
or
ss
mov
movb
fcomps
inc
pop
out
daa
mov
roll
mov
das
and
stos
int
fdivr
cli
dec
sbb
fnstenv
or
aad
push
and
outsb
repnz
movsl
adc
mov
pop
fcmovne
lods
jmp
sub
and
data16
inc
addb
mov
cmp
leave
mov
pop
ss
rcrl
psrad
sbb
pushf
nop
cmc
iret
dec
inc
pushf
cmc
or
dec
ljmp
psubsb
or
aad
cltd
enter
xchg
insl
aas
cmp
in
fldenv
and
add
xchg
cmp
addb
popf
popf
and
loopne
out
dec
sbb
adc
sbb
imul
pop
sahf
dec
pop
cmp
stos
pop
jbe
sbb
dec
popf
pop
ljmp
stos
push
inc
mov
xchg
add
setl
mov
xlat
out
sahf
mov
in
nop
dec
rol
add
stc
data16
jnp
push
call
xor
jo
jbe
or
into
push
cmp
push
ljmp
sbb
or
sub
popl
dec
in
push
rolb
adc
fwait
pop
jge
push
xor
push
cmp
imul
nop
and
jmp
push
decl
add
mov
or
xchg
bound
aam
lea
bound
add
decb
scas
je
outsl
call
jne
xchg
pushl
scas
out
in
xchg
fadd
sub
ja
cmpl
sub
xchg
sbbl
push
jbe
sbb
pusha
int3
sahf
inc
mov
ss
adc
jl
test
or
and
sbb
fldl
outsl
shrl
daa
pand
cmp
mov
clc
mov
add
add
jle
mov
jae
mov
xor
cltd
leave
dec
testb
mov
sahf
xchg
mov
jne
fsqrt
fnstenv
stc
cmc
lahf
lds
lds
pop
mov
je
sub
imul
pop
into
sub
sub
sahf
mov
and
ss
notl
out
aaa
or
mov
or
push
leave
lods
mov
mov
xor
pop
jo
jg
mov
addr16
test
js
lock
add
inc
or
add
jp
xor
pop
int
xchg
cmp
sbb
ficomps
push
iret
outsb
mov
pop
mov
mov
stos
in
inc
dec
push
dec
push
jmp
leave
mov
imul
mov
sub
lods
stos
imul
sbb
clc
stos
sbb
push
jb
leave
cmp
add
add
sti
movsb
xor
add
aad
cmpsl
mov
pop
mov
or
fnstsw
xchg
je
hlt
cmp
arpl
push
test
fwait
pushf
leave
pop
push
fidivrs
push
popa
cmp
mov
and
sbb
testb
orb
xlat
mov
dec
aad
xchg
cs
push
cmp
dec
sub
cmpsb
inc
repz
frstor
inc
repnz
or
fs
add
xor
adc
dec
xchg
nop
addr16
lods
add
jl
jns
jae
jnp
or
mov
aad
outsb
jmp
adc
pop
shlb
xor
cli
sub
rcrl
push
lret
dec
sub
push
cmpsb
and
cmp
lock
adc
aad
mov
fs
or
sbb
in
icebp
mov
mov
nop
jle
adc
add
sbbl
inc
lock
addr16
ss
lret
sbb
lods
out
sti
mov
ljmp
test
cmp
xor
sbb
mov
jle
add
imul
jecxz
jbe
inc
ja
xchg
mov
clc
dec
sbb
inc
ret
adc
lock
aas
mov
aaa
sub
xlat
movsb
in
lock
mov
or
mov
or
iret
mull
fdivl
mov
lret
xchg
ljmp
xchg
jecxz
aam
xchg
xchg
lret
cli
test
push
aam
dec
jmp
ljmp
aam
push
shrl
fistpll
sub
popf
xchg
mov
pusha
es
imul
ficomps
mov
scas
sub
hlt
lahf
sar
add
testb
fwait
cmpsl
mov
shlb
out
adc
jl
sti
jno
test
sbb
and
jmp
mov
jge
loopne
pop
mov
mov
pop
out
or
test
pop
sbb
pop
dec
dec
aad
sbbl
and
jb
cmpsb
stos
pop
fidivl
rcll
in
push
cld
stos
pop
cwtl
gs
movsb
roll
int
fsts
mov
pop
dec
arpl
inc
adc
lds
mov
imul
xchg
and
or
sbb
xor
cmp
shrb
pop
mov
ljmp
jbe
push
cli
mov
cmpb
repz
pop
dec
mov
push
ret
repz
sbb
inc
daa
cmpsb
push
sbb
ret
cltd
sbbl
jb
push
out
sbb
inc
mov
and
fimull
cmp
sti
sbb
jbe
push
jbe
or
inc
jne
ss
sahf
stos
pop
dec
je
std
inc
mov
adc
aas
pop
cmp
lcall
xor
test
xchg
sbb
xchg
pop
daa
xor
xchg
xor
loopne
xchg
fdivl
inc
pop
push
out
fcomps
fstps
lcall
jne
xchg
jmp
nop
push
push
mov
sub
mov
sbb
mov
fs
cmc
sub
ret
imul
incl
lock
adc
mov
pop
push
shrl
xor
pop
loope
and
test
sub
dec
mov
pop
dec
and
out
out
stc
push
mov
and
gs
xor
in
xor
push
push
or
out
sub
iret
mov
negl
addl
jmp
fsubrs
lcall
sub
es
aam
frstor
push
jns
and
pop
dec
mov
mov
jnp
pushf
pop
faddl
add
adc
jecxz
testl
cs
std
sbb
scas
out
push
sbb
mov
xchg
push
cli
inc
mov
nop
adc
enter
scas
es
pop
mov
das
orb
push
imul
xchg
mov
jbe
push
and
pop
mov
test
push
sub
sbb
push
mov
movsl
push
movsb
aaa
xchg
movsl
add
or
push
mov
shl
loope
sub
push
push
loop
sbb
cmpsb
jle
loop
xlat
aas
xor
add
mov
mov
xor
out
nop
xchg
out
add
jge
data16
push
adc
add
sub
lea
mov
imul
jno
sub
dec
mov
mov
push
jns
imul
outsl
addl
mov
daa
sahf
xchg
mov
mov
roll
dec
aaa
sub
xchg
pop
subl
in
fcoms
outsl
call
mov
fwait
clc
mov
push
adc
stos
aaa
push
mov
cmpsb
aaa
xchg
pop
push
test
mov
loop
xlat
mov
sti
stos
xchg
mov
pop
addb
incl
aam
dec
or
aam
sbb
xchg
scas
leave
out
jl
and
adc
add
mov
hlt
xchg
xchg
fwait
mov
mov
cmp
scas
xor
sub
std
push
sarl
pop
in
fstps
push
clc
mov
test
pop
and
pcmpgtb
push
xchg
add
mov
mov
cld
and
jno
push
rorl
test
mov
xchg
inc
jmp
lret
lahf
inc
daa
in
dec
int3
lds
fwait
aam
add
bound
outsl
sahf
sub
mov
divb
adc
mov
ficompl
adc
dec
movsl
dec
mov
cld
int
mov
mov
cmpsb
push
loope
dec
fisttps
pop
xor
outsl
or
lcall
jno
incb
mov
sub
mov
mov
int3
subb
add
ljmp
push
addb
pop
movsb
adc
mov
push
and
fistpl
rol
and
jnp
ljmp
fsubrl
xchg
dec
and
push
out
pop
loop
adc
jae
xor
xor
mov
dec
push
stc
mov
cmp
mov
dec
mov
fwait
je
pop
lahf
je
and
sbb
push
lods
add
in
push
cmp
mov
fldl
pop
xchg
int3
or
jge
or
pop
sbb
xchg
push
dec
movsb
mov
cmpsl
push
fmuls
scas
iret
sarb
stos
sub
iret
xchg
mov
repz
inc
cmpsb
fidivl
repz
mov
xchg
mov
inc
lds
cld
scas
inc
sbb
popf
lahf
outsl
inc
adc
ds
popa
jo
or
sub
movsb
cmc
test
and
push
mov
or
dec
ret
inc
lea
fstps
rcrb
nop
aas
sbb
insb
shlb
ja
fstpl
sbb
das
pop
mov
div
cmp
dec
ret
stos
insl
add
xchg
push
mov
js
and
or
pop
pop
mov
cmpsl
cmc
mov
push
xor
xchg
enter
div
fstps
aaa
mov
into
aam
xor
add
cli
cs
jb
cmp
pop
inc
and
add
dec
decb
mov
mov
js
or
jg
cltd
mov
pusha
popa
hlt
iret
sub
mov
int3
ret
icebp
movsb
cmp
lods
movsl
pop
hlt
lret
aam
push
ja
pop
pop
mov
pop
or
mov
mov
enter
stos
std
aas
jp
fcoml
sub
movsb
mov
mov
add
rorb
shl
mov
repz
xor
sbb
es
cmc
push
mov
jp
ja
and
test
out
icebp
mov
inc
lods
push
out
dec
in
add
sahf
sub
insb
movsl
jbe
jl
addr16
mov
stc
mov
ficoml
sbb
inc
int
or
int
fadd
lcall
inc
push
sarb
inc
or
lcall
sbb
mov
jnp
sub
xor
lods
or
fisubl
fwait
cmpsl
call
mov
inc
ja
xchg
in
xchg
jmp
loopne
test
pop
pushl
cmp
loopne
test
pop
hlt
mov
push
mov
inc
jge
push
sbb
lock
mov
subl
xchg
jae
mov
pop
rcll
xor
or
cmp
leave
jecxz
or
addr16
jecxz
shll
mov
cmc
aam
inc
iret
clc
sbb
dec
xchg
out
mov
add
pop
out
cltd
ja
push
into
jecxz
jl
push
scas
xchg
pop
mov
mulb
loopne
xor
std
lahf
sahf
out
ja
dec
lahf
cmp
push
adc
cltd
jg
in
jne
bound
xchg
push
int
js
sbb
sbb
out
adc
mov
cmp
push
sbb
xor
add
pop
jne
mov
aaa
icebp
aam
mov
rcrl
xchg
mov
xor
in
xchg
ficoms
fwait
cltd
testl
out
dec
jns
xchg
pop
add
in
aaa
dec
das
shl
sbb
fisubs
in
sub
imulb
das
fnsave
pop
push
and
jne
pop
bnd
shlb
pop
push
xor
lret
dec
pop
cltd
popf
push
insl
sbb
or
jg
inc
addr16
adc
pop
pop
mov
ja
sbb
out
and
subb
out
loope
sbb
sbb
mov
inc
insb
subl
enter
pop
adc
jg
outsl
push
mov
fldcw
ficoml
xor
pop
int3
test
sbb
cmp
dec
add
dec
scas
mov
pop
fidivrl
inc
fisubl
jg
add
leave
lods
mov
pop
xchg
sub
jl
lods
in
movsb
stc
scas
loope
bound
dec
pop
pop
mov
adc
xchg
out
pusha
jo
repnz
movsb
outsl
mov
loop
mov
and
mov
subl
ja
insb
push
movsl
dec
push
cmp
scas
jge
push
pusha
push
popa
clc
push
loop
nop
repz
push
lret
and
mov
adcb
cmp
or
inc
jecxz
sub
lahf
repnz
ror
jo
jo
scas
mov
sub
jo
stc
aas
int
test
jbe
repnz
mov
out
push
insl
out
jne
popf
mov
add
stos
mov
lock
notl
leave
jae
mov
or
stos
jp
dec
adc
stc
mov
lahf
and
cmc
cmpsb
cmp
mov
xchg
jl
push
int3
mov
ret
mov
vcvttsd2si
sbb
and
leave
fwait
mov
jmp
fxch
cmp
cmp
cmp
ja
xor
mov
jp
or
cmp
popa
test
inc
imul
arpl
nop
fs
test
sbb
pop
testb
aas
lahf
data16
test
popl
movsb
dec
push
test
arpl
mulps
mov
mov
xchg
lods
push
shlb
add
push
xchg
push
jbe
fldcw
mov
test
cmp
or
pop
or
clc
mov
lret
push
test
mov
aam
push
rol
lods
inc
popa
xchg
sbb
lret
mov
out
xchg
outsb
and
das
es
repz
cmpsb
mov
pop
xchg
sbb
pop
jo
inc
inc
fsub
pop
lock
lret
jl
test
aam
fldcw
out
into
out
sbb
jb
std
xorb
ljmp
pusha
cmp
in
inc
mov
and
test
test
das
js
push
stos
mulb
mov
pop
jno
mov
mov
sbb
mov
aaa
movsb
xchg
or
aaa
popa
or
cwtl
push
mov
movsl
fdivrs
sbb
je
add
sbb
push
icebp
add
addl
test
pop
sub
test
xor
cmpsl
dec
jne
shll
xor
sbb
lahf
fnstsw
data16
add
cmp
mov
pop
das
inc
fbstp
shll
xor
scas
sub
sub
fcomps
ds
mov
push
in
xor
mov
fcmovnu
inc
fucomi
outsb
mov
loopne
call
flds
mov
cmp
je
mov
das
and
sarl
repz
fcomps
cmp
sbb
inc
pop
or
mov
faddp
dec
adc
inc
cmpsb
mov
adc
mov
fwait
xor
cmpb
jl
push
and
test
aaa
cmpsl
lret
mov
jge
mov
sar
push
ja
in
or
pop
or
imul
addr16
inc
js
xchg
loopne
outsb
dec
idiv
in
sbb
js
cmc
add
jb
mov
pop
jae
in
mov
aas
jbe
mov
jo
jns
dec
into
xor
fldz
in
xchg
shlb
pop
lods
gs
iret
mov
lret
sar
pop
fwait
mov
adc
push
aaa
sbb
mov
daa
movsl
mov
sarb
mov
mov
jp
jns
in
lret
inc
data16
mov
push
inc
push
pop
mov
push
lahf
push
pop
xor
mov
cwtl
out
jge
pop
aad
mov
add
xchg
callw
xchg
aaa
popf
stos
fmuls
int
jae
dec
cmpsb
sbb
cld
int3
lret
sahf
test
push
cli
mov
mov
mov
test
jge
cld
mov
mov
arpl
mov
mov
jae
js
jb
push
add
outsb
call
inc
mull
sub
sti
mov
mov
outsb
mov
call
gs
lcall
xor
lea
push
and
push
push
xor
ret
inc
sub
or
fs
mov
fdivrl
mov
sbb
into
jp
xchg
movsb
pop
pusha
xchg
mov
mov
aam
fidivrl
dec
orl
imul
and
addl
cmc
js
hlt
nop
test
dec
loope
or
fst
ds
inc
mov
ds
int
sbb
push
lret
jl
scas
xor
jmp
out
push
pop
push
sub
xor
mov
add
fs
inc
je
cs
imul
jp
lods
faddl
shl
mov
inc
add
cmp
nop
cmp
ret
jae
push
jns
stc
xchg
lret
pop
test
jmp
int3
lods
dec
or
sahf
add
aas
gs
adc
in
lea
inc
pavgw
lods
out
shlb
fisubs
pop
sbbl
add
pop
repz
adc
shrl
and
push
xor
mov
xchg
xor
mov
mov
push
scas
add
push
xchg
xor
ja
pop
mov
xchg
fsubrl
jp
dec
mov
icebp
cld
lret
mov
jecxz
sbb
shll
lods
rcrl
rorl
and
jecxz
insl
iret
adc
clc
mov
sub
mov
cmp
rclb
fwait
lret
mov
xchg
xchg
ljmp
sbb
inc
xor
mov
or
cmpsb
insl
xchg
fimull
movsb
cmpsb
mov
in
jmp
push
xor
jg
add
jp
push
pop
mov
cmc
inc
pop
and
pop
inc
fsubl
xor
dec
cmpsb
lds
sahf
shrl
push
sbb
xchg
and
jl
inc
ljmp
rcrl
lds
push
gs
sbb
jg
fcomp
scas
std
xchg
and
lahf
pop
push
inc
in
sbb
popa
and
mov
mov
ret
sub
aas
arpl
roll
fs
roll
sub
adc
mov
adc
mov
ret
out
or
sub
mov
std
insl
mov
jne
mov
movsl
aad
jnp
aad
je
xorb
test
xor
popf
cmc
aaa
inc
xchg
mov
sbbb
out
ja
adc
subl
test
add
insb
movsb
sub
stc
dec
mov
mov
mov
es
push
add
or
mov
leave
lock
push
in
int
jb
dec
outsb
stc
xchg
mov
mov
xchg
jo
mov
aaa
push
sar
lea
enter
mov
repnz
int3
mov
inc
imulb
sub
or
jb
outsl
cmovle
dec
mov
dec
imul
or
push
sarb
jbe
add
mov
hlt
mov
cmp
and
enter
shrl
xchg
stc
push
test
fisubs
pop
xchg
call
adc
fldenv
pop
jl
adc
lods
dec
sbb
ror
sbb
cwtl
es
inc
adc
mov
shll
jno
aaa
add
fstpl
lods
mov
mov
scas
test
out
mov
mov
pop
add
test
mov
push
je
fdivrs
mov
add
push
int
xlat
or
je
cmp
cmc
mov
mov
push
jl
hlt
cmpsb
xor
sbb
sub
aad
ret
cmp
cltd
aas
fistpl
sub
addl
rorb
rorl
xor
loope
in
outsb
dec
arpl
push
pop
popa
in
iret
pop
inc
idivb
push
dec
lahf
fadd
popf
xchg
subl
pop
jne
in
push
mov
dec
push
dec
into
lcall
cmp
jns
pusha
mov
jl
shr
pop
lret
xchg
daa
shlb
jo
pop
xor
push
mov
shrl
daa
test
lock
jle
lahf
and
push
ret
addr16
xor
xor
je
lret
scas
ja
sti
add
push
xchg
cmpsb
push
xor
jne
mov
sbb
aam
les
ret
fsts
lods
leave
leave
aas
test
xchg
arpl
mov
mov
jbe
pop
lods
mov
pop
pop
mov
mov
arpl
imul
add
inc
leave
dec
pop
movsb
jp
jecxz
loop
inc
push
hlt
outsb
xchg
aas
jmp
inc
adc
or
pop
push
test
cltd
mov
xor
cld
stos
shll
xchg
push
shrl
inc
and
and
adc
and
js
inc
sub
inc
movsl
std
aaa
push
lahf
call
jg
loope
cmp
xor
push
add
pop
mov
xchg
mov
ljmp
xchg
jne
fs
dec
hlt
sub
mov
bnd
stos
mov
dec
pop
daa
jae
int
leave
and
mov
xchg
ds
pop
xchg
cmpsl
xchg
cmp
and
add
cwtl
dec
cmp
int
xor
imul
pop
jae
mov
in
cmp
mov
mov
ret
aad
push
and
sub
scas
icebp
xor
ja
ret
fstpl
mov
lods
jmp
cld
mov
pop
push
push
fistps
int3
push
sub
cmp
and
clc
dec
out
iret
cmp
sub
pop
xchg
cwtl
rcl
xchg
repnz
fmuls
push
mov
dec
frstor
nop
ja
sub
pop
mov
call
push
mov
add
sub
lcall
push
pop
push
pop
das
inc
negb
sar
pop
data16
fbld
xchg
cmp
out
pop
push
sbb
mov
inc
xchg
ror
leave
mov
popa
mov
adc
mov
fildl
xchg
loope,pn
je
xchg
aaa
test
cld
in
add
in
sub
dec
pusha
mov
shrb
xchg
pop
mov
jg
mov
sbb
data16
inc
test
andl
xor
lods
iret
xchg
sar
sub
or
fsubrl
mov
sarb
jae
add
scas
xchg
frstor
jb
fsts
stos
jb
sub
xor
js
dec
push
lock
gs
jmp
mov
loop
xor
jmp
ror
push
inc
pushf
add
bound
push
mov
stc
and
push
addl
ret
cmpsb
mov
sub
pop
sbb
mov
popa
scas
xchg
ror
mov
dec
and
scas
mov
out
inc
cmpsl
adc
adc
clc
push
mov
xchg
and
lea
outsb
cmc
scas
xchg
shll
cmp
insl
pop
inc
sbb
aam
imulb
push
add
pop
xlat
add
ds
cli
bound
test
cmp
out
nop
add
jmp
fbstp
das
jne
xor
mov
insl
test
pop
int
sarl
cwtl
bound
sub
rolb
aaa
stos
sub
mov
cmp
bound
outsl
sub
mov
pop
mov
mov
cwtl
subb
out
jg
or
xchg
fldt
mov
cltd
push
and
rcrl
inc
mov
sbb
std
mov
test
scas
fcompl
int3
jecxz
fiadds
in
pop
addr16
sti
movsb
xchg
jp
out
push
sub
and
fisttpll
ror
enter
sbb
push
and
sbbb
pop
jbe
test
mov
add
mov
das
iret
mov
movsl
dec
addr16
scas
add
aaa
xchg
inc
pushf
stc
sbb
xor
jg
imul
xchg
sub
push
push
jle
add
add
cwtl
fldcw
xor
dec
cs
fildll
test
sti
mov
jl
stos
cmpsl
enter
xchg
lods
movsl
dec
ja
pop
ret
mov
mov
push
jecxz
mov
les
inc
xchg
add
mov
mov
sbb
xlat
jb
je
xchg
call
fisubrs
stos
adc
gs
push
aad
xlat
fs
push
data16
lret
pop
cmp
ja
pop
pop
negl
gs
shrl
mov
xchg
sub
loopne
sbb
push
call
mov
xchg
cmp
mov
insl
mov
cmc
mov
outsl
cld
inc
ret
addr16
ret
or
mov
arpl
dec
int3
mov
lods
ss
or
jae
pushl
mov
xor
mov
adc
insl
push
jmp
pop
xchg
push
inc
movsl
dec
and
test
adc
jno
adc
mov
mov
sbb
jo
dec
cld
fld
mov
loopne
mov
cmp
xchg
mov
out
stos
adc
out
movntps
popa
aad
xchg
data16
jns
rorb
inc
xchg
out
cmpsl
outsb
adc
cmp
push
hlt
es
aam
dec
and
pop
sbb
jns
callw
pop
jl
les
fimull
cli
pop
push
or
cmp
mov
adc
xchg
les
imul
jne
ret
in
mov
push
xchg
fildl
dec
pop
mov
xor
stc
clc
loop
out
out
xlat
les
mov
imulb
fisttpl
or
mov
mov
mov
test
pop
movsb
sbb
sarl
aaa
push
in
icebp
mov
jmp
push
nop
call
xchg
std
ljmp
aaa
xchg
mov
jbe
outsb
adc
sub
xchg
shl
addl
mov
sub
pop
mov
in
sti
and
dec
mov
out
lret
out
insl
getsec
lods
sub
pop
xchg
daa
jecxz
mov
or
dec
sbb
je
je
mov
int3
decl
dec
mov
add
xor
out
xor
popf
lahf
dec
test
mov
jbe
sti
shll
call
ja
sbb
sbb
insl
outsb
sub
push
pop
cmp
mov
sub
ds
jle
cs
xchg
or
mov
xor
push
push
and
scas
push
pop
fs
ret
adc
lret
lea
outsl
aas
out
mov
adc
in
dec
pop
fdivrs
jl
movsl
adc
repnz
mov
xor
mov
xchg
dec
inc
mov
stc
decl
dec
mov
push
mov
dec
scas
mov
mov
sbb
push
jbe
mov
int
shll
jle
mov
pop
call
xor
sub
inc
sti
inc
cmc
je
xchg
stc
and
or
jmp
dec
test
enter
in
sbb
mov
mov
xor
jl
jmp
push
lcall
hlt
les
stc
mov
icebp
xlat
or
adc
push
xlat
cmpsb
jle
clc
sbb
pushf
mov
pop
aaa
test
iret
out
cmpsl
dec
mov
inc
aas
das
xor
pop
je
pop
pop
and
jae
mov
in
pop
jno
xor
popf
ja
notl
repnz
push
jns
fs
popa
mov
mov
jmp
push
or
pushf
xchg
stos
mov
sbb
in
mov
and
mov
mov
arpl
sbb
jge
outsl
test
mov
shr
mov
push
lret
mulb
das
jle
cmp
and
mov
fcomps
cmp
mov
or
pop
xchg
or
add
or
pop
add
int
cli
mov
xchg
ljmp
fcmovnb
fidivrs
iret
fcmovu
js
adc
test
xchg
shll
and
les
mull
ret
fimull
lods
imul
xor
lret
xor
test
loopne
inc
adcl
cmpsb
mov
out
jle
push
repz
dec
xchg
jbe
mov
mov
daa
scas
mov
ret
adc
dec
fcompl
nop
sbb
fmull
lcall
shl
mov
loope
mov
scas
lds
inc
mov
xchg
scas
push
mov
xchg
mov
fxrstor
mov
jne
cmp
out
push
inc
arpl
scas
rcl
jge
mov
xchg
xor
out
aas
mov
xor
and
xchg
mov
or
nop
into
mov
in
test
xadd
xor
ret
cmp
outsl
sub
hlt
xchg
out
cmpsl
xchg
and
sarb
adc
mov
jo
mov
out
mov
je
and
scas
shlb
ret
lret
mov
nop
xchg
sarl
inc
xor
adc
repnz
push
shlb
push
fidivs
xchg
movsb
orb
sbb
jmp
mov
into
mov
dec
pop
and
mov
and
cmp
jge
into
and
xor
mov
mov
data16
mov
mov
or
mov
jbe
test
jno
sub
aad
mov
xor
popa
jmp
mov
repnz
cmpsb
mov
adc
xchg
and
lods
cmp
sub
sub
scas
insb
dec
icebp
inc
lcall
sub
inc
cmpb
in
lret
je
in
out
das
arpl
push
rcll
outsb
and
cmpsl
mov
xchg
ds
inc
add
jne
mov
xor
and
xchg
sub
inc
cmp
cmpsb
inc
imul
mov
sbb
xchg
push
outsl
ret
cmpsl
xchg
ss
test
jo
imul
je
aad
cli
aam
adc
imul
cmpsl
in
adc
mov
mov
ss
movsb
adc
popf
test
mov
testw
mov
or
repnz
jg
test
jo
pop
ror
adc
mov
mov
clc
or
fucomip
adc
in
mov
movsb
test
xchg
repnz
enter
arpl
lock
and
and
fistps
clc
xchg
pop
mov
mov
daa
in
insl
enter
add
lock
xor
cmpsl
inc
cld
mov
mov
dec
fwait
cmp
cmp
out
jae
cmpsl
cmpsb
pop
aam
xor
jg
ret
inc
push
jnp
pop
into
lahf
jno
lea
or
pop
sbbb
and
out
dec
imul
cli
mov
cmc
mov
cmpsl
fnstsw
int
rclb
mov
lret
imul
aaa
mov
in
inc
cmp
dec
push
push
add
inc
pop
or
or
rcrb
dec
fdivl
dec
mov
sub
test
sub
and
or
and
je
cmc
sbb
std
stos
jg
hlt
pop
imul
in
and
ja
fstpl
push
cmp
jnp
add
xor
and
push
adc
aaa
sub
pop
shrb
jnp
mov
cmp
std
add
popa
and
rcll
dec
stc
repz
pop
faddl
cli
insb
adc
orl
and
mov
adc
cltd
icebp
mov
pop
in
dec
mov
sub
jne
pop
mov
mov
pop
mov
mov
mov
and
xor
out
into
inc
cmovle
jmp
cmp
and
fists
movsb
sbb
scas
js
ja
popa
pop
jns
mov
adcb
les
outsl
pushf
and
sub
lret
loopne
test
cmpsb
dec
jge
mov
sub
enter
roll
lea
aaa
pop
loopne
jmp
mov
push
fsubs
dec
lret
sarb
push
mov
les
bound
pop
movsb
das
xchg
insl
mov
fwait
sub
fadd
rclb
jb
xor
xchg
lret
jns
das
add
icebp
lods
lahf
jp
inc
cmpsb
sub
jno
and
shrb
dec
mov
cltd
cs
mov
sbbl
adc
lcall
mov
sub
cwtl
adc
xor
mov
int3
jg
inc
cmp
cmpsb
popf
int3
push
mov
imul
and
mov
xchg
ljmp
mull
mov
sub
xchg
adc
mov
adc
cmp
test
shlb
push
divb
insl
adc
inc
sbb
sar
inc
adc
cwtl
test
pop
in
cmp
jns
ljmp
lahf
loope
push
test
mull
lcall
mov
iret
negl
jo
clc
test
adc
int3
mov
sbb
imul
mov
pop
xchg
inc
in
js
out
fsubrl
mov
or
pop
mov
je
lock
imull
add
ljmp
or
aam
xchg
test
fiaddl
or
and
shl
insl
es
dec
rcl
loope
mov
xchg
addr16
push
mov
cmp
push
bound
mov
les
adc
dec
test
outsl
dec
mov
popw
push
movsl
scas
cwtl
xchg
mov
jb
movsb
mov
iret
jle
cmc
pop
insl
push
mov
in
adc
push
dec
push
aad
sub
je
adc
enter
push
test
lret
loopne
into
sbb
xchg
movb
pop
pop
cld
push
cmp
std
and
lods
xchg
push
lods
and
adc
mov
sbb
push
enter
cmp
notl
push
in
jbe
xchg
adc
mov
push
ja
into
mov
dec
jnp
jl
mov
ret
pop
loopne
das
jne
fdivrl
in
dec
pop
pop
fwait
test
cwtl
fdiv
lahf
sub
pop
sub
bound
cwtl
mov
pushf
xchg
fwait
inc
imul
rcrb
cmp
dec
ja
icebp
loope
push
xchg
scas
addr16
add
push
scas
loop
jle
add
imulb
fildl
std
fistl
aas
ret
out
ss
rcr
mov
outsb
mov
das
pop
out
insb
sbb
sub
jl
dec
sbb
dec
test
es
scas
fsts
mov
or
cwtl
push
popa
into
enter
das
lods
and
adc
jne
or
xchg
fsubs
ret
jmp
mov
add
inc
ret
cmp
push
and
push
data16
mov
scas
call
sub
xor
sbb
test
cmp
cwtl
sbb
push
out
daa
xor
mov
rcrb
loop
aam
cld
call
mov
cmp
popf
pusha
mov
push
fld
mov
aas
dec
sbb
nop
sbb
push
in
mov
aaa
pop
or
xor
jg
call
pushf
jg
jg
cmp
rcrl
lea
repnz
mov
out
pushf
xchg
lock
xchg
pushf
int
idivl
pop
push
pusha
out
jno
cs
dec
or
pop
push
incl
popa
sub
addb
out
ja
stos
andb
xchg
xor
xchg
adc
div
imul
sbb
or
mov
mov
xlat
daa
add
repnz
dec
test
adc
jno
or
aad
jle
inc
add
aam
xchg
lea
cmp
fnstsw
cwtl
sbb
mov
popa
mov
in
xor
or
in
insb
enter
add
push
lcall
jecxz
cmpsl
push
pop
fidivrl
jae
sbb
mov
push
adc
cltd
ds
inc
les
in
inc
add
mov
lods
shll
daa
repz
push
adc
dec
pop
jbe
lea
push
jno
std
mov
mov
pop
lock
shr
pop
jle
jmp
sbb
push
pushl
fidivs
outsb
xchg
push
sbb
push
jl
xchg
add
test
out
fdivr
cmpl
sahf
xchg
xlat
stos
or
mov
lods
mov
mov
xchg
jo
add
fidivs
repz
imul
outsl
mov
pop
dec
jns
jne
insb
dec
mov
in
mov
adc
xchg
inc
and
inc
jo
xchg
test
jns
mov
cwtl
cmp
dec
or
cmpsb
push
mov
xchg
sbb
mov
int
fs
xchg
loope
loop
movsl
shr
add
mov
addb
lock
pop
jle
push
insb
xor
xchg
mov
fmuls
sub
imul
adc
dec
pop
xchg
das
cmpsl
pop
ret
in
dec
or
cld
dec
daa
in
mov
pop
outsl
or
sbb
cmc
test
dec
ret
push
and
ret
pop
fnsave
bound
movsl
mov
jmp
lods
pop
sub
jae
jmp
jo
add
inc
popa
leave
sub
jae
cltd
dec
ds
or
push
hlt
add
into
jo
push
sbb
xor
push
out
cmpsb
sub
call
pop
or
push
mov
fcmovnbe
xor
ret
enter
xchg
js
das
sbb
lahf
mov
jge
mov
mov
or
aad
ljmp
frstor
pop
dec
aad
scas
movsl
lret
aad
xor
shlb
testb
sub
stos
cmpsb
adc
int3
stos
ficomps
and
fs
or
sbb
icebp
push
test
addr16
adc
gs
in
add
sub
call
push
lret
cmp
cmp
scas
jo
mov
fs
ret
jle
sbb
mov
jo
xchg
or
lret
push
push
lds
fsubr
jecxz
cld
test
mov
repnz
dec
in
push
test
shrb
mov
outsl
scas
aam
lahf
rcl
stc
shll
hlt
stos
pop
mov
rol
test
ret
lcall
xchg
in
pop
adc
sub
pop
ljmp
pop
call
repnz
xor
pushf
out
pop
mov
mov
mov
cmp
int
add
jp
std
xor
pop
ja
adc
test
incb
ja
cmpsb
jo
push
xchg
push
xlat
ret
xchg
jns
into
and
pusha
and
and
sarb
dec
loop
leave
ja
push
cmp
js
addr16
xchg
cmp
out
sahf
cwtl
mov
pop
mov
clc
pop
push
aad
cld
inc
jl
xchg
lods
out
xchg
mov
ret
mov
sbb
fnstenv
cmp
ficompl
push
or
jp
push
fs
insl
sbb
xchg
dec
push
cwtl
scas
imul
sbb
and
shlb
ret
push
adc
pop
es
addb
xchg
push
insl
int
cwtl
pop
clc
out
mov
popa
adc
sub
testl
or
push
scas
or
or
jbe
ret
inc
cmp
ljmp
mov
fsts
sbb
or
pop
cmp
imul
cmpsb
xchg
mov
mov
cwtl
xor
adc
je
and
fstp
jno
inc
mov
ja
mov
push
pop
xchg
adc
adc
mov
xlat
sub
add
mov
jo
rcr
xorl
fistl
fs
jne
stos
inc
jae
inc
push
and
sbb
lock
ds
jne
stos
add
lds
pop
pop
pop
sub
jmp
pop
cltd
jno
mov
xchg
int3
mov
add
std
cltd
enter
or
dec
mov
add
sahf
leave
popa
ds
mov
adc
fs
xor
sub
jne
pop
adc
cmc
mov
loop
cld
in
in
dec
outsb
push
push
sti
lea
and
and
inc
xor
push
jecxz
lret
leave
dec
pop
inc
outsl
adc
adc
jmp
orb
sub
pop
push
clc
cli
mov
xchg
xchg
xchg
fucomi
and
push
aas
mov
push
cmpsb
mov
adc
repnz
add
inc
in
mov
je
mov
rclb
mov
xchg
xchg
ret
push
dec
test
pop
fldl
ja
sub
pop
aaa
icebp
push
bound
xor
dec
jg
inc
clc
into
mov
mov
add
adc
xchg
js
addr16
iret
xchg
and
pushf
and
aam
out
mov
adc
sbb
or
mov
stos
fyl2x
shl
add
gs
and
mov
mov
pop
sub
mov
mov
cs
insb
je
or
sti
sbb
cwtl
repnz
or
shl
xchg
push
xchg
repnz
mov
cwtl
loope
sahf
pusha
push
mov
dec
scas
aas
pop
mov
aaa
pop
mov
mov
pop
mov
xchg
or
mov
in
rorb
fcomps
fstps
nop
jl
mov
test
fists
lret
jnp
scas
jnp
daa
or
addb
in
lahf
ud1
dec
push
arpl
lock
adc
int
rorl
dec
inc
je
jne
jb
pusha
mov
pop
in
inc
loope
or
push
mov
mov
sub
cmpsb
cwtl
repnz
clc
fdivr
sbb
pop
pop
addb
jp
rorl
std
xor
mov
fistpl
adc
xor
and
inc
mov
inc
movsb
xlat
pop
xor
negl
pop
adc
xchg
xlat
addr16
mov
cltd
icebp
out
ja
mov
imul
xchg
and
pop
mov
pop
sbb
imul
iret
rcll
fnsave
mov
leave
xchg
aam
popa
in
inc
rol
adc
xchg
pusha
in
or
inc
and
negl
xlat
push
cmpsl
or
xor
xor
add
test
xchg
popf
aad
lret
jns
stos
mov
add
inc
mov
xchg
rol
push
dec
imull
xchg
dec
test
mov
test
jbe
cld
jbe
lods
dec
jo
or
mov
scas
cmp
mov
or
adc
jae
lret
and
cmp
int3
adc
shll
getsec
in
aad
add
dec
and
fcoml
int
shlb
data16
sub
aam
cmc
inc
setno
add
popf
scas
push
cmp
dec
in
add
add
fwait
add
frstor
add
cmp
ljmp
jb
test
jbe
sbb
dec
test
jbe
add
push
jp
ror
pop
popa
push
or
fiadds
mov
ljmp
push
stc
and
or
push
sti
andl
or
cmpsb
je
insb
sub
and
xor
std
stos
loopne
push
jb
push
ret
dec
pushf
dec
les
sbb
dec
pop
xchg
inc
jmp
push
xlat
lcall
xor
push
push
dec
mov
imul
xor
jle
js
inc
or
jbe
fcmovb
and
ljmp
mov
out
mov
or
popa
les
mov
cmp
cmp
test
and
sbb
push
ljmp
and
sbb
enter
pushf
mov
arpl
test
fimull
lret
stc
test
lahf
add
and
dec
mov
cmpsb
xchg
addr16
push
or
lds
cmp
sub
sub
bnd
cld
test
jle
sar
xchg
cmp
dec
popa
call
mov
mov
js
jae
add
ret
mov
movb
call
cld
hlt
mov
shrb
aam
pusha
mov
incb
sbb
test
into
lea
das
out
mov
pslld
add
jle
xchg
lock
imul
jno
fprem1
inc
jo
mov
fcompl
mov
dec
shr
jne
pop
sub
jno
leave
mov
outsl
pop
xor
iret
out
cmp
pushf
dec
xor
rcll
ds
bound
xchg
cltd
stos
push
mov
push
ret
jmp
mov
and
mov
and
fnsave
popa
lret
adc
std
push
cmpsl
mov
fidivrs
jb
nop
stos
imul
aaa
outsb
xchg
jmp
dec
push
sbb
and
ret
pop
int
rclb
or
dec
scas
cmp
sub
inc
xor
stos
das
dec
cmpsl
mov
bound
insb
movl
push
or
sbb
int
sahf
cltd
cmc
sahf
and
sahf
mov
dec
xor
sbbl
leave
subl
call
clc
enter
arpl
push
scas
mov
jmp
xchg
jmp
jns
xchg
adc
add
pop
cmpsb
xchg
sbb
ret
inc
cltd
cmpsl
imul
mov
jecxz
imul
mov
stos
sub
mov
movb
sbb
add
lods
inc
rorl
vpmaddwd
cmpsl
enter
int3
repnz
lahf
mov
out
dec
inc
aad
mov
lret
jbe
and
jb
stc
pop
or
mov
stos
icebp
lcall
popa
xor
xchg
xorb
sbb
mov
push
fs
divl
adc
pop
fstp
xor
stos
lahf
push
lds
inc
cmp
cmpsb
es
inc
mov
dec
out
push
adc
adc
sub
outsb
pushl
and
sbb
sbb
sbb
orb
ret
and
dec
lahf
int
xorl
mov
cmpsb
sub
fcoml
sbb
mov
xchg
ss
mov
mov
jo
cmpsl
or
insb
repnz
push
mov
push
mov
hlt
jecxz
jecxz
movsl
pop
mov
mov
push
xchg
mov
xorl
adc
mov
push
aas
data16
pop
jb
push
outsb
int3
mov
insl
test
sub
sub
push
add
loop
lods
pop
mov
pop
pop
in
xchg
push
scas
and
push
in
mov
ret
scas
std
dec
data16
mov
sub
in
insl
xor
loopne
mov
iret
sbb
lret
and
popf
add
fwait
ret
lcall
rorb
fnstcw
nop
pop
pop
fsubl
mov
cmpsb
inc
out
bound
pop
push
ja
popf
lret
call
loopne,pt
je
leave
lret
in
fiadds
ja
movsl
lret
jb
push
xchg
mov
xchg
push
jno
and
pop
loope
fsubrs
push
push
mov
push
inc
inc
ja
mov
jl
test
sti
jbe
inc
dec
mov
cmpsl
popl
arpl
sub
addr16
rolb
fadd
sub
add
pop
sbb
in
dec
sti
rorb
dec
lcall
jns
mov
adc
and
outsl
pop
dec
xor
mov
lret
lahf
idivl
push
jae
ds
iret
lcall
inc
and
in
loop
xchg
aaa
push
sub
add
pop
mov
into
popa
sub
jne
mov
mov
mov
insl
cmpsl
stc
cmc
test
pop
adc
icebp
cmp
aam
dec
outsl
shll
cmp
xlat
sbb
adc
dec
loop
insb
inc
or
enter
jg
sarl
out
sub
jo
cmp
inc
cmp
xor
icebp
adc
push
xchg
push
pop
mov
ret
int3
mov
jl
pop
insl
cmp
ljmp
std
imul
sub
mov
out
mov
mov
mov
xchg
div
gs
inc
xchg
loopne
and
rclb
sub
cs
jne
inc
jno
xor
or
aaa
cs
push
popf
out
lock
cmp
lds
jne
mov
sahf
clc
jae
or
mov
mov
push
inc
sbb
jae
or
add
in
xchg
add
inc
cld
scas
notb
cmp
jle
sub
mov
repz
clc
sbb
pop
sub
pop
push
and
pop
mov
sbb
mov
add
arpl
daa
inc
sbb
inc
adc
push
pusha
insl
cmpb
lds
cmp
test
ffree
adc
aas
jmp
ljmp
jnp
cltd
ror
loop
or
xchg
popf
cmp
repz
jb
xchg
jle,pn
xor
addr16
lea
xchg
mov
rep
jno
cmp
xlat
mov
lds
lock
rcrb
sbb
ror
adc
or
xor
cltd
lock
jbe
xlat
sub
pop
xchg
inc
push
mov
fsub
cs
pop
jns
pop
movb
pop
or
mov
mov
outsl
subb
cmp
inc
out
outsb
cmp
jno
add
mov
imul
loope
lcall
jbe
xor
jno
and
lcall
outsl
xbegin
scas
xchg
leave
mov
mov
out
insb
nop
out
jecxz
jl
int
hlt
aas
push
scas
test
push
into
ss
dec
popa
in
push
fildl
pushf
lods
mov
pop
lret
xchg
int3
scas
cmp
lahf
or
push
lret
xchg
scas
cmpsl
rorb
addr16
xor
iret
pop
daa
inc
jne
loop
lcall
into
ljmp
and
pop
add
stos
jp
mov
sbb
push
ret
sbb
sahf
lcall
push
lahf
stos
inc
xchg
scas
cmp
popf
dec
xlat
cli
lock
into
or
pop
shll
test
test
mov
sbb
mov
out
mov
cmp
mov
mov
clc
or
push
outsl
mov
clc
andl
cmc
fisubs
iret
je
cli
mov
sbb
cmpsb
andl
daa
sti
inc
jbe
mov
and
test
jge
inc
dec
pop
aam
and
lea
out
sbb
inc
push
inc
movsl
fdivrp
sbb
insb
fistl
jecxz
mov
mov
add
xchg
inc
addr16
gs
andl
mulb
dec
in
xchg
ret
fwait
mov
cmp
fisttpll
add
mov
lock
xchg
xchg
scas
js
sub
xchg
cmp
shrb
mov
imul
cmpsl
mov
subl
ficomps
and
stos
sub
push
mov
add
push
adc
arpl
add
pop
idivl
movl
icebp
mov
push
in
insl
jg
mov
test
inc
mov
dec
popf
cwtl
test
fcmove
popf
xor
push
in
dec
shll
in
test
fldl
cmpsb
mov
xor
xchg
icebp
shl
out
mov
aas
inc
sub
mov
rol
rorb
ret
daa
outsb
mov
cmp
xchg
loop
xchg
adc
loope
sub
cmp
dec
aad
add
cmp
jbe
pop
lea
xchg
lret
lods
aad
ds
lock
js
push
xchg
pminsw
mov
imul
loopne
xor
cmp
out
jne
fs
aas
push
add
add
fiadds
mov
adc
arpl
loop
cs
cs
mov
push
mov
xor
mov
stc
inc
cld
mov
sub
out
in
dec
std
iret
xor
jge
xchg
dec
addr16
cmp
dec
cmc
add
ss
lods
fwait
daa
mov
xor
imul
pop
shl
jns
mov
fstps
out
dec
mov
sub
fdivr
ja
xchg
flds
popa
lods
or
jb
fldt
je
arpl
insl
lods
mov
std
push
mov
ja
mov
xchg
sub
mov
nop
cld
and
daa
ds
or
jp
imul
jbe
nop
and
ljmp
lock
sbbb
shrb
mov
cli
ret
push
decl
or
fwait
mov
jl
xchg
xchg
in
cmp
lret
sbb
xorl
stos
jge
js
xchg
sub
int3
jo
pop
jbe
cmpsl
fidivs
mov
stc
inc
jae
out
sahf
ss
push
adc
lahf
mov
inc
add
push
cltd
loope
jp
lock
pop
mov
push
jg
lret
dec
mov
loop
mov
stos
sti
cmp
gs
and
or
iret
mov
cmp
mov
dec
dec
inc
leave
mov
iret
in
inc
jae
scas
xorb
je
push
or
fisubs
sub
inc
dec
aad
rcll
xchg
mov
xlat
sbb
insl
fwait
dec
xchg
jg
lcall
cltd
fucom
xchg
nop
xchg
cmpb
push
cmc
leave
iret
and
mov
xor
sub
pop
fildll
mov
popf
insl
adc
adc
mov
cmp
mov
or
sub
sti
jecxz
xor
mov
arpl
push
mov
inc
fildl
fistl
nop
loopne
jp
pop
test
inc
pop
inc
out
sbbb
lcallw
ficompl
dec
pop
mov
add
xlat
adcb
sub
ret
cmpsb
out
fidivrl
ret
and
sub
ret
js
xor
sbb
sub
pushf
lock
mov
les
lds
xchg
adcb
dec
gs
and
mov
xchg
adc
jne
adc
or
inc
mov
mov
or
sti
adc
push
inc
into
mov
addr16
ss
out
mov
dec
jnp
test
aad
add
push
imul
and
imul
out
cmpsl
and
jo
push
cmp
cmp
leave
aas
adc
xor
enter
cmp
imul
sbb
pop
xchg
add
sub
mov
mov
dec
lods
add
cmpsl
ljmp
lret
pushf
arpl
mov
test
fninit
or
xchg
rcrb
mull
outsl
sbb
fcmovnu
push
shrl
lret
imul
mov
notb
dec
jb
aam
test
mov
loope
sti
scas
enter
imul
xlat
cmpsb
and
in
cs
push
mov
inc
lds
push
in
mov
mov
mov
and
mov
fwait
out
jle
in
mov
pop
ret
push
jo
and
mov
lods
sub
or
jg
sbb
imul
xlat
dec
push
xor
sbb
aaa
fcoms
js
fnsaves
xchg
out
xor
push
inc
pop
sbb
jmp
scas
rcrl
test
fistpl
ret
lods
sbbb
dec
cwtl
jmp
mov
es
lods
in
jno
lods
sbb
and
push
mov
inc
ficoml
test
popa
stos
adcl
imul
sahf
repz
and
and
add
cmp
xchg
xchg
addr16
add
in
jp
or
daa
dec
dec
mov
dec
lahf
or
mov
sbb
jnp
xlat
or
aaa
cld
aad
sbb
ja
hlt
stc
cltd
repnz
vshufps
sub
test
inc
and
mov
jge
aad
mov
mov
add
sarl
jp
push
xor
imul
add
fcoms
das
sbb
sahf
xchg
stc
repnz
int3
movsl
inc
rorb
mov
loope
out
mov
movsl
jae
jb
popa
jno
inc
pop
test
xchg
mov
adcb
mov
or
inc
dec
leave
jge
iret
out
pop
loop
push
lds
scas
divl
inc
cmp
mov
mov
loope
arpl
jne,pt
cmpb
inc
test
sub
inc
nop
jo
xor
lods
lods
mov
adcl
shlb
stos
ljmp
inc
inc
xor
decb
mov
pop
and
stos
scas
mov
push
cld
test
pop
jo
xchg
sti
iret
sub
cmc
out
mov
sbb
imul
sub
or
jl
ds
cmp
lahf
cmp
aam
lods
push
enter
out
shll
mov
mov
pop
mov
sbb
jecxz
jecxz
bound
add
inc
lea
sbb
std
cmpsb
cld
xchg
mov
mov
in
add
pop
push
dec
lds
dec
pop
pop
adc
out
in
push
dec
jno
and
or
sbb
or
xlat
daa
and
jge
icebp
stc
jl
movsb
adc
imul
mov
dec
push
fsubrp
mov
mov
sbb
adc
mov
in
jo
inc
cmpb
fldpi
rcr
mov
dec
inc
cmpsl
insl
mov
loope
and
lret
inc
jp
ss
sub
xlat
jns
inc
movl
and
in
xchg
push
shlb
inc
push
imul
jp
aad
pop
jae
shl
cmp
jge
cmp
xchg
mov
js
loope
out
mov
lock
ss
mov
hlt
inc
loopne
addr16
test
lret
xor
test
xchg
outsl
repnz
sub
pop
stc
subl
enter
cmp
or
sub
leave
jp
inc
cmp
repz
loop
subb
cmp
out
or
fisubs
add
cmp
pop
fidivrl
cmpsb
fnstsw
movsb
stos
test
mov
imul
or
jae
jo
movb
js
daa
imul
push
sub
or
xor
sub
aaa
sub
cld
xor
inc
add
ret
lahf
cmp
sbb
movlps
aaa
or
outsl
adc
les
xchg
adc
pop
xor
mov
in
pop
xchg
jae
scas
cld
js
stos
lock
cmc
pop
aaa
andb
and
push
and
adc
mov
sti
inc
jmp
aad
stos
arpl
sbb
lahf
mov
popf
push
push
andb
hlt
dec
dec
stos
mov
test
inc
fcoml
inc
fstps
and
inc
cmpsl
dec
loopne
ljmp
xor
fwait
testl
inc
jo
fcomp
notb
or
es
or
xchg
aam
xor
daa
faddp
into
and
add
jns
xor
shlb
addr16
sarl
shrb
lret
mov
lea
ljmp
mov
addr16
jae
pop
mov
inc
loopne
and
mov
and
dec
mov
push
addr16
xchg
or
and
dec
sub
mov
and
mov
inc
outsb
xchg
mov
shrb
in
mov
repz
mov
lret
je
inc
cmpsl
inc
enter
movsb
dec
mov
cmpsl
je
outsl
arpl
out
jbe
and
and
inc
addb
call
inc
fs
pop
and
addr16
push
or
pop
cwtl
gs
xchg
xor
mov
sbb
into
sub
mov
pop
outsl
pop
inc
test
inc
mov
push
rclb
lds
inc
dec
cmp
loope
push
es
adc
ss
icebp
push
fisttpl
push
jg
pushf
shrb
and
jno
mov
js
jnp
adc
out
add
mov
xor
jg
repnz
in
loopne
enter
xchg
and
movsl
mov
push
sbb
sub
stos
mov
lret
stos
jl
mov
xchg
and
xor
loop
scas
gs
cmp
ljmp
xchg
mov
arpl
xor
leave
cwtl
fstps
fcomip
mov
cltd
mov
es
dec
and
cli
xchg
sub
inc
xchg
adc
xchg
mov
fucomp
cwtl
cmpsb
or
add
lds
xchg
fcoms
lcall
xor
jle
add
inc
dec
inc
and
lds
inc
mov
pop
rol
int
adc
mov
mov
pop
adcb
fiadds
mov
addr16
inc
iret
in
aaa
pop
fs
test
adc
mov
pushf
xor
rcrl
outsb
lahf
aam
xor
ja
addr16
xchg
jae
and
ja
push
xor
cmp
add
insl
cmp
dec
xchg
push
cs
out
mov
mov
xor
push
out
cmp
push
xchg
sbb
jg
rcrb
mov
aad
shl
xor
xchg
inc
adc
lea
adcl
loope
push
add
clc
adc
out
in
push
mov
hlt
mov
jge
pop
mov
or
xor
popf
stos
cmp
addb
pop
adc
xor
add
mov
loopne
outsb
add
iret
xchg
das
xchg
popf
xor
mov
push
outsl
insb
xor
fcompl
sub
push
jp
xchg
ljmp
lret
push
repz
cwtl
adc
mov
test
dec
xchg
fists
add
js
sub
mov
pop
mov
out
xor
ret
and
lods
xor
dec
arpl
mov
dec
jle
insb
jne
cmpsl
hlt
ret
sbb
shrb
imul
mov
xor
push
out
mov
cmc
lret
loop
or
scas
or
mov
aaa
stos
mov
popa
jmp
imul
fldl2t
push
mov
mov
test
lea
cmp
jl
test
pop
inc
cld
sub
mov
mov
out
test
mov
jl
xor
shlb
ja
in
in
fsubr
das
fwait
scas
scas
cmpl
cmp
mov
sti
xor
inc
outsl
push
sahf
fsts
mov
mov
pop
fnstsw
lock
cli
dec
out
or
and
nop
test
loope
adc
cmp
sub
stos
inc
sbbb
mov
fstl
and
cmpsw
pop
int3
push
lock
bound
in
pop
or
lret
push
cmpsb
mov
arpl
shll
lcall
dec
inc
xchg
stc
pop
xchg
push
sub
and
scas
pop
mov
js
ja
sub
sti
std
pushf
and
xchg
push
jo
aam
test
sbb
addr16
sub
jge
jno
scas
divb
adc
or
add
sbb
sub
cwtl
in
mov
dec
scas
adc
sbb
mov
adc
xchg
push
xchg
aam
insl
dec
stos
pop
sub
cli
mov
cld
cld
add
scas
inc
and
divl
push
mov
and
test
add
sub
push
and
sbb
in
mov
scas
stc
int
add
dec
adc
mov
pop
mov
add
cs
xor
cltd
dec
adc
mov
sub
lods
or
in
aad
scas
jmp
ja
insb
ja
inc
pop
pushf
insb
lods
adc
mov
dec
inc
xchg
ret
insb
push
sti
dec
lods
jge
dec
dec
adc
stc
xor
dec
inc
xor
lea
fcmovnb
xchg
sbb
push
lret
push
pop
mov
lcall
popa
sahf
out
cmp
shlb
loopne
repnz
outsl
push
mov
outsl
std
pushl
dec
pushf
aam
mov
aad
loopne
sti
cmp
inc
mov
dec
out
sub
fdivrs
inc
subb
jb
push
push
rcrb
adc
fldcw
jae
xor
ss
fidivrs
repz
mov
ret
pop
jmp
dec
inc
pop
jecxz
imul
pop
fmuls
sahf
lods
inc
xchg
in
mull
repz
jmp
shll
fdivrs
mov
push
add
jp
push
adc
push
sub
inc
cmp
pop
fcoms
rcrb
cmp
movsb
or
jg
idiv
sarb
mov
ja
fbstp
or
fidivrl
jo
lcall
inc
fsubs
push
test
xlat
mov
cmc
ret
lods
test
shlb
mov
adc
add
mov
adc
mov
out
jnp
rorb
xchg
jge
aaa
pushf
sahf
push
add
les
imul
std
dec
sub
enter
call
cmp
cmpsb
test
push
mov
xchg
lods
movsb
movsl
out
outsl
ret
xchg
jo
mov
dec
int3
dec
xlat
outsl
xor
add
test
ja
nop
xor
sub
pop
jne
in
pop
and
push
out
fmull
imul
fdivl
push
push
mov
sub
fsubs
movsl
push
lds
xor
lret
pushf
pop
xor
push
sarl
stos
mov
push
adc
loop
add
dec
cmp
cmp
out
fsubr
dec
sub
mov
loopne
xor
icebp
addr16
inc
rclb
sub
clc
xchg
inc
mov
lret
daa
outsb
shll
je
ret
xchg
in
enter
aad
outsb
mov
bound
sub
cmc
push
jl
and
subb
jg
mov
sbb
imul
test
xor
or
mov
outsl
mov
xchg
push
dec
mulb
cwtl
push
fistps
jns
mov
stos
sahf
sarl
ljmp
bound
push
dec
iret
dec
loopne
sub
pop
and
clc
outsl
dec
and
or
mov
push
cmpsb
sub
pop
xchg
enter
cmp
arpl
adc
push
jecxz
xchg
mov
popf
dec
inc
mov
xchg
or
adc
idivb
mov
add
ficoml
fdivs
ffreep
mov
cmc
insb
out
out
and
sbb
mov
jl
dec
mov
pusha
mov
mov
jae
or
ret
shlb
popa
loop
loop
adc
dec
sti
shll
rorl
mov
mov
and
mov
mov
push
out
add
lret
ret
mov
jne
push
and
mov
xchg
xchg
imul
push
xchg
lods
mov
mov
test
pop
aad
test
ds
mov
cmp
jne
cmpsl
push
mov
cwtl
mov
std
mov
fisttps
rcr
pop
aad
pop
filds
and
xor
inc
ja
jle
pusha
stos
movsl
in
test
cmp
in
dec
mov
xor
push
push
cld
or
outsb
cltd
fsubp
popf
adc
sbb
add
out
mov
jb
dec
and
pop
jle
dec
gs
call
dec
xchg
inc
add
pop
push
test
dec
sahf
mov
sbb
ds
js
leave
out
out
scas
cmp
xchg
test
pop
pop
test
mov
or
push
fcoml
add
or
push
ss
xchg
adcl
ret
adc
repz
adc
mov
fcompp
insb
mov
add
xchg
sbbl
stos
add
and
js
in
or
mov
fmulp
or
xchg
loop
push
xchg
insl
push
fdivr
jmp
push
addl
loope
aam
cmpsb
das
iret
dec
test
loope
nop
mov
fistpll
lea
sbb
mov
lea
test
add
mov
add
cmp
std
pop
scas
add
ret
jo
sahf
mov
addl
xchg
nop
stc
pop
and
adc
push
sahf
jb
mov
repnz
arpl
scas
sbb
cmp
or
test
aad
or
xchg
jbe
cs
or
lret
fisubl
pusha
jecxz
push
cld
adc
stos
jbe
cmc
dec
stos
sub
sub
lods
adc
pusha
shrb
pop
iret
and
xchg
ss
xor
mov
push
xchg
mov
in
dec
jno
mov
or
pop
pop
sbbl
add
cmpsl
mov
rclb
push
mov
lcall
xor
rep
mov
es
and
aaa
mov
dec
adc
in
inc
mov
into
test
aaa
mov
xor
lret
jmp
ds
sbb
pop
les
mov
ss
push
lods
hlt
cmp
addl
aas
adc
mov
leave
xor
pop
bound
insb
sub
nop
xchg
sti
cwtl
shl
pop
and
sti
jbe
jmp
mov
mov
ret
into
daa
xor
sti
loope
or
loope
dec
or
push
mov
xor
or
addl
icebp
sub
and
dec
ljmp
pop
and
ljmp
jnp
fisubrs
xor
and
mov
lret
insl
sahf
fcmovnbe
test
and
xor
pop
sub
sub
mov
arpl
pop
out
sbb
sub
xchg
fistps
or
test
stc
pop
loopne
jbe
add
jg
mov
push
sub
fs
aaa
or
je
xor
lods
push
mov
cmpsl
ja
daa
imul
lods
out
cmp
mov
std
fldenv
in
shlb
mov
sbb
pop
pop
lret
xchg
stos
add
rcrb
push
dec
dec
and
jns
out
xor
dec
xchg
cmc
mov
xor
push
fisubrl
mov
xchg
aad
pop
mov
fsts
stc
mov
in
sbb
sti
sbbl
test
nop
dec
fstpl
sub
pushf
in
ror
cmpl
pop
jecxz
cmpl
or
pop
xchg
jmp
test
mov
mov
imul
fnstenv
je
and
sbb
addr16
xor
or
jl
scas
loopne
aas
mov
fsubrl
ret
xchg
lret
inc
push
loop
mov
imul
cmp
ficoms
inc
fmul
jb
inc
adc
sub
mov
scas
scas
aam
lods
movsb
mov
jp
addr16
daa
ret
into
inc
mov
jne
icebp
sub
pop
xor
adcb
jmp
call
mov
sbb
mov
movsb
cmp
lea
in
mov
das
mov
jbe
xchg
out
test
aad
aaa
aad
stos
mov
mov
call
pop
or
jnp
popa
mov
dec
fmulp
xlat
leave
dec
sub
or
or
sub
loopne
jmp
gs
adc
pop
xchg
fidivrl
xor
ss
ja
sub
out
jbe
mov
jle
mov
sbb
jmp
mov
ds
loope
outsb
or
xor
jle
insl
pushl
xchg
insb
adc
cmc
test
and
adc
icebp
enter
cmpsl
jae
lahf
nop
xchg
sub
loop
sub
jp
jecxz
mov
dec
and
inc
add
sbb
pop
aam
jno
sbb
iret
mov
xchg
stc
fsubs
xor
xchg
xchg
imulb
jle
dec
into
and
push
push
pop
mov
ja
mov
xchg
pop
gs
sub
mov
xor
je
or
mov
cmp
call
jnp
pop
lret
or
cmp
mov
xchg
lret
mov
pop
mov
and
jo
cli
push
ds
mov
cmc
lds
test
mov
in
xorl
or
add
xor
adc
out
cltd
dec
mov
inc
xlat
imul
leave
int3
iret
sub
sub
rolb
out
cld
aad
mov
push
aam
aas
fidivrl
hlt
sub
adc
mov
sub
add
outsl
loopne
and
and
outsl
inc
jmp
dec
adc
cmpsl
xchg
lahf
test
cmpsb
pop
inc
hlt
pop
adc
stos
inc
out
mov
inc
xchg
stos
iret
cli
jge
shrl
inc
lock
mov
sti
cld
mov
in
ficoms
xchg
leave
loope
sub
rorl
shrl
cmpsb
adc
nop
mov
xor
fs
fwait
sub
leave
pop
inc
in
push
ljmp
push
int3
je
icebp
int
shl
xchg
xchg
xor
add
pop
cmpl
fldenv
xchg
xor
push
jge
dec
dec
xchg
mov
and
adc
or
push
int3
les
add
in
jge
and
lret
mov
sbb
push
add
pop
sti
int3
ljmp
cmc
and
scas
rclb
xor
cs
sub
daa
fistl
leave
int
dec
sbb
leave
sub
test
inc
push
popa
test
test
mov
inc
jp
mov
repz
and
xor
int3
pop
jbe
add
rorb
mov
add
je
mov
cmp
imul
stc
cs
push
popa
stos
bound
pop
movsb
push
push
pop
out
jnp
ret
je
gs
fwait
adc
jb
and
test
adc
and
sbb
pop
jg
push
mov
das
insb
jecxz
and
push
jae
pop
cwtl
stos
outsb
std
cmp
out
stc
and
dec
sahf
addr16
lret
add
in
jecxz
jne
mov
pop
sub
sbbl
mov
cld
lods
in
aaa
xor
or
movsl
or
mov
mov
xor
aaa
mov
in
arpl
sahf
lods
push
ss
xor
mov
movsl
rorb
pop
jecxz
mov
pop
scas
adc
xor
pop
cmp
xor
xor
jno
idivb
jne
ret
mov
jne
insb
pop
and
jbe
cmp
xor
push
dec
jnp
jbe
mov
mov
sarb
in
and
ficoms
arpl
pop
sub
mov
leave
fnsave
and
js
int3
jecxz
or
or
sub
insb
add
loop
mov
and
xchg
fnsave
mov
fidivrl
lock
mov
clc
and
mov
pop
mov
adc
mov
push
mov
loopne
shll
out
lds
jae
cmp
loope
or
pop
add
sbb
push
inc
scas
stos
add
xchg
adc
pop
mov
pop
inc
mov
in
mov
jne
in
lahf
push
mov
mov
add
icebp
add
rep
xchg
lahf
or
cmp
data16
mov
in
popl
stos
fiadds
xor
mov
or
push
mov
insb
mov
pop
add
inc
add
fcomps
pop
sahf
das
ret
add
or
orb
pop
xchg
cmp
xchg
or
xor
or
mov
push
jl
push
add
mov
or
push
mov
out
pop
ret
lret
fadd
pop
cmp
cli
fs
js
mov
push
adc
mov
mov
xor
test
sub
in
lret
and
arpl
pop
loope
es
popf
loop
ret
loope
fisubrl
xchg
repnz
scas
dec
jnp
xchg
imul
inc
aaa
les
mov
neg
out
cmp
mov
fwait
aaa
out
jne
imul
sub
push
daa
daa
lret
lret
adc
mov
andb
incl
scas
add
aaa
das
mov
dec
jg
shrl
or
push
xchg
dec
lds
imul
adc
inc
mov
xchg
jge
jno
out
xchg
inc
pop
fwait
sub
clc
mov
jp
add
stos
mov
cmp
or
icebp
pop
mov
sti
pop
ss
dec
push
add
adc
into
jne
leave
adc
ljmp
mov
aas
imul
ret
das
call
push
adc
sub
cmp
cmc
jmp
mov
fidivrl
hlt
cmp
add
xor
stc
addr16
sbb
xchg
xchg
mov
arpl
and
cmp
inc
xor
pop
jns
and
pop
arpl
xchg
sub
adc
lret
outsl
pop
je
push
iret
pop
inc
cmpl
into
stos
fisubs
fwait
cmp
out
ljmp
test
ret
add
loop
fwait
mov
or
mov
mov
inc
xor
sti
jbe
add
js
fcmovbe
je
fstpl
mov
xor
or
mov
mov
lds
mov
and
incb
adc
push
jnp
xchg
mov
jnp
outsl
inc
and
dec
out
iret
pop
inc
jo
outsb
ds
leave
sbb
mov
test
mov
xor
cmp
bound
cmp
test
test
and
xchg
ret
sbb
sub
mov
cmp
xchg
and
pop
sub
pop
outsb
test
cmpb
mov
and
push
pop
push
jne
aas
push
ja
push
sti
bound
movsl
mov
leave
jp
nop
pushw
pusha
push
not
in
and
mov
repz
cli
loope
andl
mov
lock
dec
cld
xor
or
leave
push
enter
inc
xchg
push
hlt
push
xchg
adc
repnz
mov
aaa
je
jno
clc
xlat
testb
ds
ret
lock
sbb
inc
or
imul
dec
mov
mov
sub
mov
or
lahf
notl
mov
dec
or
ror
out
ret
sbb
fsubs
call
pop
data16
fwait
call
daa
movsb
inc
scas
aad
or
fstpl
sbb
es
test
push
push
jl
inc
mov
fsubp
xchg
leave
pop
or
enter
add
adc
mov
cmp
rcrl
inc
lds
jg
arpl
imul
push
sub
and
loopne
jns
xor
or
and
int
cli
or
std
add
icebp
sbb
es
mov
sarl
cltd
sti
in
push
jg
loope
fldcw
lret
ss
das
bound
es
jle
cli
mov
pop
cmpsl
jge
fcoms
icebp
or
out
xchg
dec
dec
push
pop
push
adc
xchg
lods
inc
mov
fs
add
out
addr16
jb,pn
adc
lods
repz
lds
andb
outsb
adc
clc
inc
bound
ret
xchg
add
das
lea
xchg
dec
bound
jnp
xor
in
rcr
insl
sahf
mov
ljmp
outsb
aam
push
fimuls
repz
mov
imul
sar
inc
pop
loop
sbb
cmp
sbb
test
dec
add
pusha
mov
lret
mov
lods
enter
cmp
out
sahf
mov
aas
adc
jb
push
mov
mov
shrl
inc
dec
mov
fsts
movl
fildl
jo
iret
cmp
sub
jae
test
cwtl
pop
cmp
js
add
push
push
dec
mov
pushf
jp
sub
inc
and
bound
or
jno
jecxz
pop
test
sbb
add
testl
push
scas
mov
ljmp
fnstsw
aaa
arpl
fadds
jmp
mov
lods
xchg
ffree
add
sbb
mov
push
ficomps
mov
out
pop
pop
fbstp
sub
mov
xor
xchg
adc
and
mov
push
jge
gs
add
add
jae
sub
xor
adc
xchg
leave
repz
inc
push
rcl
sub
mov
in
shr
mov
push
pop
xor
push
fwait
mov
gs
repnz
mov
push
mov
add
and
lock
sub
jg
insb
rol
icebp
int3
pop
jae
imul
sbb
mov
jl
add
jo
fs
insl
mov
sub
or
inc
mov
xchg
imul
push
loopne
xor
or
test
sahf
popf
push
mov
pop
movsl
or
or
in
dec
push
and
dec
enter
enter
mov
fldcw
int3
pop
push
xchg
xor
je
mov
cld
push
std
jmp
mov
mov
xlat
dec
arpl
pop
jge
push
add
es
in
in
scas
jbe
mov
enter
int
dec
aad
pop
mov
inc
cmovbe
fs
fisubrl
outsl
dec
xor
sbb
icebp
push
jns
inc
push
or
ficoml
les
sub
aas
and
movb
lret
lret
ret
or
sub
ret
dec
adc
xor
ds
ljmp
adc
insl
xor
xor
sar
cmpsb
sub
mov
mov
pop
hlt
sub
mov
push
loopne
inc
insl
ret
inc
jmp
loop
jo,pt
mov
sub
int
test
xor
ret
lret
dec
loope
inc
and
cmp
lock
mov
pop
jno
fucomip
pusha
or
or
mov
pusha
cld
push
test
rcll
rorl
mov
fmull
jnp
xor
mov
cmp
and
pop
pop
dec
cs
mov
rorb
jecxz
gs
sbb
stos
pop
scas
xchg
and
popa
int
mov
out
sub
in
pop
mov
mov
mov
adc
mov
cmpsb
cwtl
out
adc
push
aas
movb
sub
pop
stos
sub
out
stc
cmc
arpl
mov
inc
std
push
jle
call
mov
jo
sbb
mov
movsl
scas
mov
jbe
std
xor
insl
jnp
sbb
gs
fcomps
xchg
pusha
in
adc
filds
fiadds
hlt
clc
andb
add
jae
xchg
xor
push
popf
or
imul
push
or
or
sbb
push
add
push
or
pop
dec
ret
fsubrl
fisubs
inc
fwait
dec
dec
mov
mov
imul
outsl
les
repnz
fwait
add
push
jmp
aaa
mov
je
dec
in
and
fucomip
add
adcb
out
push
xchg
aas
push
jo
cs
push
mov
fldenv
aad
aaa
fcmovne
jb
push
loope
xchg
pop
jb
pop
add
jp
sahf
add
adc
sub
inc
pop
decl
pop
mov
adc
mov
push
or
imul
mov
rcrb
dec
inc
stos
aam
jle
mov
les
inc
sub
shlb
fldcw
jae
mov
jae
mov
push
shlb
mov
in
mov
push
xor
lds
mov
adcl
aas
mov
sbb
imul
pop
lret
push
loope
repnz
xchg
dec
inc
dec
push
adc
xchg
jns
xchg
sbb
mov
sub
mov
lds
push
rol
je
pop
sti
stc
cmpsl
jb
jle
cmpsb
fimuls
mov
mov
lahf
bound
mov
sbb
sahf
outsl
add
jne
lds
push
push
adcb
sbb
cmp
outsl
lahf
and
fcmovnb
sti
jle
mov
in
jle
xchg
jg
test
data16
push
enter
in
xchg
ret
rorb
ljmp
mov
clc
loope
fbstp
inc
sahf
push
adc
dec
xchg
cmp
jo
and
inc
jl
int3
jl
sub
mov
std
das
popf
addl
movsl
je
pop
mulb
pop
push
add
fndisi(8087
stc
push
xor
sub
orb
add
dec
xor
sbb
dec
adc
cmp
lahf
aam
sub
repnz
popa
mov
daa
fists
inc
js
rorl
cmp
xor
mov
clc
push
xor
jmp
loope
pop
stc
rclb
dec
out
jo
lds
cmpsb
aaa
cmpsl
jge
push
mov
push
jne
xchg
fstl
push
repnz
mov
pop
inc
and
test
arpl
jle
into
das
push
lock
jl
xchg
lret
cmp
insb
dec
and
call
or
vmread
stos
loopne
and
dec
pop
and
add
aaa
mov
lods
adc
xchg
inc
cmp
out
loopne
sahf
dec
lcall
cmp
lret
gs
pop
mov
fnstsw
mov
rsqrtps
imul
sub
push
push
add
inc
incb
in
popa
sub
mov
repz
in
fwait
push
mov
test
fnstsw
imul
icebp
les
adc
dec
dec
imul
sti
stos
xchg
add
leave
inc
pop
and
cmp
fnsave
dec
lcall
push
pop
sbb
bound
cwtl
pop
enter
icebp
mov
leave
enter
mov
inc
inc
sub
dec
stc
xchg
sub
mov
and
ja
inc
xchg
xchg
fnstsw
test
sub
outsb
adc
push
ret
rclb
sub
sbb
jne
and
push
sbb
jmp
xor
outsl
fs
fcoms
mov
pop
test
mov
popf
xor
xchg
mov
mov
insb
pop
mov
in
mov
js
into
adc
subb
mov
aas
mov
and
cs
mov
test
pavgw
adc
outsl
movsl
adc
jae
lahf
jmp
icebp
roll
mov
sub
in
pop
xchg
mov
or
mov
es
mov
fdivl
fnstcw
xchg
lret
adcb
add
mov
pop
pop
jecxz
call
ljmp
aaa
dec
mov
repnz
and
push
cmp
and
and
push
pop
mov
sbb
sub
adc
lcall
push
xchg
pusha
xor
cmc
fildll
test
jg
push
fs
lahf
stc
sar
inc
mov
mov
shr
aad
lock
jnp
add
mov
test
jecxz
xchg
fmuls
and
fnsave
mov
cli
adc
inc
shrb
adc
fnstsw
add
mov
mov
or
notb
jb
mov
mov
mov
inc
mov
cli
rcrb
stos
loop
inc
dec
arpl
jmp
enter
cmp
dec
pop
cmp
jns
repz
xchg
cmpsl
mov
dec
hlt
rol
xor
push
inc
std
cmc
arpl
jle
insl
jecxz
pop
fbld
jo
cwtl
movsl
lahf
sahf
pop
sub
bound
in
add
sbb
push
mov
dec
and
lret
imul
pop
inc
bound
adc
mov
cli
pusha
stos
sub
xchg
les
ror
loop
pop
jne
push
jnp
mov
outsb
in
fisubrl
mov
fsub
cmp
divb
mov
pop
leave
ja
mov
icebp
jl
jmp
or
cli
aad
mov
imul
js
mov
mov
adc
in
pop
jl
out
add
divl
xor
inc
jae
in
mov
jo
mov
push
or
stos
outsl
cld
call
jge
jns
outsb
mov
lock
pop
pop
adc
sub
mov
push
test
lret
mov
dec
fidivrl
movsl
jmp
mov
pusha
mov
test
mov
popf
ret
fcomps
iret
or
sti
push
adc
mov
jno
or
mov
inc
jecxz
dec
iret
dec
out
pop
xchg
xor
sbb
rclb
repnz
out
adc
fwait
cmp
fisubrs
sbb
mov
pop
cmpsl
xchg
sub
jmp
jae
cmp
mov
out
push
jge
fldl
gs
or
xlat
mov
mov
pop
out
sti
xor
sbb
test
ror
pop
mov
pushf
scas
sti
gs
jp
jbe
stos
add
xchg
cld
sub
mov
or
aam
mov
mov
cmpsb
clc
push
nop
bndstx
mov
mov
xor
and
lret
cmp
inc
outsb
test
fwait
cmc
or
mov
fidivrs
xchg
rorl
ds
ret
pushf
sar
mov
out
inc
rol
and
mov
fdivrs
xchg
lods
sub
sub
mov
dec
lock
cmpsb
dec
loope
push
js
sbb
inc
clc
outsl
pop
jnp
adc
sub
enter
pusha
adcb
push
pusha
add
dec
mov
notb
stos
popa
pushf
ja
addr16
std
repnz
jne
data16
es
push
inc
pop
push
mov
mov
inc
icebp
mov
insl
xor
push
pop
popa
jns
xor
xchg
popf
push
dec
mov
in
clc
push
mov
cmp
test
sub
icebp
aad
aad
loope
xor
mov
imul
jle
frstor
sub
cltd
inc
mov
stc
xor
pop
loopne
inc
and
xchg
leave
adc
iret
sti
dec
scas
sbb
mov
test
in
hlt
mov
aam
jmp
aaa
leave
mov
xor
out
scas
push
xchg
das
cmp
cmp
in
mov
out
cmovae
in
adc
lahf
pop
imul
jnp
pushf
out
cmpsb
lods
adc
mov
inc
push
mov
jle
jb
leave
aaa
cli
ja
push
sahf
push
mov
xor
push
xor
pop
jge
or
add
or
lea
fcmove
push
pop
xchg
je
push
rcll
push
aaa
add
inc
sub
pop
pop
cmp
jge
cld
ljmp
jmp
jmp
scas
add
clc
mov
das
ja
jecxz
cmpl
sub
pop
bnd
das
sub
push
mov
adc
jns
push
adc
push
jae
lods
bound
cmp
xor
lret
cltd
pop
cmp
dec
adc
cmp
xchg
push
mov
stos
sbb
cmp
and
pushf
cli
mov
das
cmpsl
scas
jmp
cltd
adcb
aad
and
out
les
push
dec
sbb
xchg
sbb
mov
imul
out
sbb
stos
and
cmp
lahf
or
add
push
mov
jg
les
shll
mov
dec
lea
pop
jne
lods
add
add
sbb
pop
cli
test
mov
dec
shll
pop
ret
xor
push
mov
jp
imulb
imul
mov
pop
cmc
mov
shll
test
repnz
or
cmp
inc
ret
inc
mov
pop
jle
add
dec
cli
fidivrl
mov
or
adc
shlb
loope
mov
in
fldl
ja
loopne
outsl
repz
push
inc
push
pop
cmp
adcl
scas
jl
fdivs
jae
dec
jae
and
cmp
cmpb
mov
inc
enter
ss
push
lret
lods
cld
push
xlat
sbb
dec
adc
add
push
xor
lds
idiv
sbb
push
xor
stos
cmpb
repnz
jl
mov
cmc
stc
mov
cmp
jp
xchg
mov
or
shlb
in
movsb
xor
repz
lahf
rcll
lock
xor
jne
xchg
jbe
pop
daa
cmpsb
mov
loop
cmc
sahf
add
mov
outsl
dec
pop
cld
or
repnz
rorl
sbb
push
push
lods
or
xor
int
push
sarl
jb
dec
pop
mov
in
es
mov
frstor
xorb
test
pop
sbb
pop
pop
xor
fimuls
ja
nop
push
jl
addr16
jp
jno
out
jne
orl
lahf
push
xchg
mov
mov
push
loopne
pusha
fildl
pop
loopne
or
ror
xor
push
int3
fwait
inc
mov
xor
inc
adc
inc
xchg
lods
lahf
push
or
push
into
sbb
frstor
std
in
in
dec
lahf
xor
lret
xor
clc
ret
and
lock
out
pushf
fnstcw
jae
fldl
iret
sub
movsl
xor
cmp
or
pop
sbb
scas
or
lcall
ss
and
fiadds
lahf
xchg
mov
mov
fidivl
fstps
dec
out
lea
cli
cs
jmp
push
mov
and
sbb
cmp
aas
pop
cs
pop
es
out
inc
data16
rcrl
test
mov
mov
pushf
scas
mull
idivl
rcl
xchg
push
push
push
jb
ret
push
rorb
icebp
and
mov
fisubs
cmpl
imul
dec
in
pushf
lcall
mov
jno
pop
insb
nop
sbb
jp
clc
outsb
mov
pop
fwait
xchg
repz
addl
movsb
shl
inc
xchg
push
or
movsl
aaa
xchg
adc
jle
dec
jb
cli
pushf
jle
lahf
xchg
mov
lds
push
cmp
or
movsb
into
xor
mov
inc
repnz
mov
push
jae
test
push
mov
rolb
inc
pop
dec
fcoms
cli
shll
cmp
fadds
inc
sbb
int3
push
cmpsl
mov
mov
push
stos
lea
je
vpsubsw
out
iret
jecxz
inc
xor
popa
mov
test
xchg
push
cwtl
xor
sub
cmp
fbstp
fs
ja
insb
movsb
or
sti
push
push
push
jb
rcr
xchg
pushf
aad
movsb
xor
or
fidivrs
movsb
rol
inc
pop
push
test
repz
add
es
jb
mov
rcll
insb
pushf
das
stc
fnstsw
into
call
xchg
add
add
insb
fs
js
pop
cmp
in
add
repz
stc
ds
xchg
cmc
sbbb
enter
push
faddl
adc
lret
push
fwait
out
jbe
xchg
mov
dec
mov
xor
pop
mov
add
mov
jo
xchg
fldl
and
jnp
stos
fmuls
sti
call
push
jns
sub
nop
clc
mov
cmpl
mov
imul
idivl
stc
shll
shll
in
les
hlt
test
sub
dec
xor
repz
loope
pop
cmpsl
mov
icebp
mov
es
jns
jno
mulb
mov
int3
dec
or
mov
push
neg
xchg
jp
lret
lock
nop
push
movsl
test
pop
cli
pop
loop
push
sub
fwait
call
out
ss
jecxz
std
sti
insb
mov
pop
sub
mov
dec
lds
dec
pop
sbb
adc
jbe
test
outsl
push
loope
add
mov
mov
adc
jbe
lahf
fildl
add
fwait
jmp
sbb
jecxz
jmpw
mov
fidivrs
pop
flds
fildl
jo
add
fnsave
xlat
xchg
fcmovnb
xchg
fcom
xor
push
push
imul
mov
outsl
jo
test
jp
into
inc
aas
test
cmp
sti
jae
ljmp
jbe
mov
addr16
mov
inc
cmpsl
subb
adc
pop
aad
cmpsb
xor
insl
stos
pop
outsb
out
pushf
cmc
sub
and
mov
add
test
in
lret
pop
movsl
mov
call
test
mov
sbbb
pop
jmp
adc
xchg
mov
add
fs
push
sub
scas
insl
ds
loop
fs
aas
mov
pop
negl
ret
sar
sbb
sub
call
jno
sbb
jb
nop
ficompl
out
inc
jbe
js
dec
jg
push
movsb
leave
test
lods
dec
xchg
sub
jnp
test
and
daa
push
mov
jne
jnp
aam
and
aas
jle
sub
add
mov
cmp
xchg
fldl
push
ret
xchg
add
icebp
xchg
or
imul
sbb
loopne
sub
inc
push
imul
dec
xor
cmp
fwait
lock
pushf
mov
dec
movsb
and
int3
add
pushf
loopne
jecxz
xor
push
cmp
lret
aam
xor
push
ss
addr16
sbb
add
mov
fcmovnb
outsb
lds
das
mov
imul
mov
lea
jnp
outsl
sbb
shll
arpl
lea
cmp
imul
pop
jle
sbb
dec
repz
and
mov
add
dec
test
dec
sub
scas
andl
add
xor
or
or
or
mov
aad
sbb
es
into
fistps
lcall
inc
push
push
cmpsb
pusha
fdivrs
mov
inc
dec
scas
mov
popa
fstps
pop
dec
fcmovb
fiaddl
int
lcall
mov
cltd
aas
adc
fs
nop
lret
stos
mov
fprem1
daa
push
ret
popf
or
sahf
fistl
cltd
popa
loopne
or
sub
cwtl
mov
cmp
and
cmpsb
in
mov
sti
inc
xchg
mov
push
mov
int3
popf
xchg
orl
mov
mov
and
gs
hlt
or
je
fcmovnu
xchg
cmp
cli
jg
mov
push
push
out
xor
das
mov
lods
das
xchg
or
aam
enter
mov
dec
call
out
push
scas
test
push
add
or
mov
pop
sti
mov
movsb
pop
mov
les
fldcw
lea
ss
dec
cwtl
add
dec
jmp
jae
push
je
jo
push
inc
lret
add
sbb
cwtl
nop
xchg
mov
pop
fimuls
sbb
sarl
sbbb
popf
xor
lahf
jb
pop
jmp
inc
out
mov
push
xlat
daa
pusha
push
fs
jno
xchg
sub
rol
sti
mov
int
enter
dec
mov
mov
push
sbb
xor
pop
out
mov
adc
xchg
scas
out
out
jbe
jbe
sub
cli
mov
mov
aas
mov
in
pop
add
pop
xchg
and
scas
and
insl
mov
int3
out
dec
movsl
sbb
cmp
fiadds
push
sbb
lret
loope
dec
cmp
and
adc
outsb
in
push
test
mov
sbb
xor
leave
mov
mov
in
sub
leave
loope
pop
cmpsb
ja
stos
jecxz
pop
ds
leave
mov
je
sbb
mov
xchg
or
xor
mov
sbb
sahf
push
dec
imul
add
pop
pop
out
mov
orb
sbb
lcall
jmp
push
push
imul
enter
fdiv
int
cli
inc
xchg
pop
jmp
xchg
dec
mov
outsl
lret
push
inc
mov
cmc
mov
rcrl
jl
fstpt
jg
add
cmp
jmp
out
dec
inc
push
aad
roll
sub
outsl
cmp
aam
jmp
test
or
push
roll
imul
xchg
imul
bound
test
inc
subb
pop
mov
sti
stos
imul
lea
enter
sub
sti
in
iret
or
ret
inc
mov
inc
es
lahf
jns
pop
scas
pushl
inc
fwait
loop
mov
call
in
rcl
stc
aad
adc
cli
cmp
pop
roll
cmpsl
mov
sub
dec
sbb
out
dec
movsb
sub
int3
jge
mov
jo
mov
mov
negl
fcmovnbe
cld
jnp
mov
sti
mov
lcall
gs
js
outsl
sub
cld
imul
cmpsl
inc
jmp
insl
cmp
mov
cld
pop
adc
xchg
jle
out
lea
insb
sub
jno
bt
mov
inc
or
pop
xchg
xchg
loop
das
pop
loop
and
xor
gs
cmpl
jne
mov
lods
mov
in
mov
jno
mov
xor
push
in
outsl
inc
fistps
gs
adc
fldenv
inc
push
addr16
enter
call
mov
inc
jle
and
int3
lods
mov
aad
dec
or
inc
xchg
xchg
mov
push
jnp
lds
hlt
in
int3
mov
test
hlt
inc
pop
movsl
pop
push
and
mov
out
gs
mov
mov
imul
jns
call
push
mov
mov
add
test
lahf
shrl
sub
fnsave
add
and
rcrb
in
jecxz
inc
ja
test
mov
daa
mov
hlt
mov
pop
push
prefetcht0
clc
js
push
lock
test
xorl
sti
sbb
aas
jmpw
in
out
xchg
pop
addb
test
jno
sub
dec
xor
cltd
mov
mov
ljmp
mov
jns
rclb
xor
in
or
mov
and
push
call
push
jnp
mov
mov
mov
mov
test
popa
nop
jl
xlat
adc
sbb
jbe
lahf
test
xchg
push
inc
jl
jg
mov
loopne
mov
lods
iret
andl
mov
xor
cmc
mov
stos
pop
icebp
push
test
stos
pop
mov
mov
shll
add
and
imul
jbe
jbe
aaa
or
xor
cs
jg
shrb
js
cmpsb
out
xor
out
leave
push
fsubp
cmp
lods
movsb
add
push
xchg
pop
repnz
mov
cltd
enter
filds
into
rcrb
mov
dec
fildll
inc
sbb
mov
adcl
in
and
js
cs
scas
dec
dec
loopne
pop
pop
sbb
out
nop
ret
push
in
jbe
int3
cli
xor
and
push
pop
adc
pop
ret
mov
out
fwait
enter
scas
imull
ret
pop
fcomps
cmp
lcall
popf
cmp
mov
icebp
xchg
pop
cmp
pop
inc
adc
xchg
ficoml
adc
push
repnz
xchg
les
stos
mov
pushf
mov
mov
xorb
mov
inc
iret
cltd
inc
repnz
fxch
imul
cld
add
mov
jecxz
inc
pop
dec
cmp
jecxz
mov
lcall
addr16
fildl
and
fs
pop
adc
dec
push
cwtl
out
int
sub
xchg
push
or
iret
push
mov
ffreep
es
ja
cmpsl
push
mov
push
push
iret
lret
pop
mov
sbb
cmpsb
jmp
std
lahf
inc
jne
jp
sub
sub
push
and
sbb
fidivs
stos
mov
or
jg
mov
aaa
pop
dec
dec
or
push
jecxz
cmp
hlt
mov
mov
xchg
and
sahf
rolb
mov
mov
les
fld
dec
imul
nop
xor
and
sbb
fists
sub
push
arpl
push
mov
aad
push
enter
adc
jge
std
shll
daa
test
and
mov
cs
adcw
dec
enter
push
add
adc
sub
out
xor
xchg
out
jmp
ds
lret
test
push
jnp
jg
scas
loop
aas
repnz
push
adc
icebp
stos
lcall
pop
shlb
rcll
and
jle
jmp
outsl
out
inc
mov
dec
or
xchg
mov
fildll
addr16
jns
xor
pop
fiaddl
scas
mov
xchg
mov
xchg
push
mov
call
stos
loopne
push
push
mov
jbe
inc
push
adc
or
out
in
inc
cli
mov
adc
pop
dec
inc
in
aam
dec
mov
mov
xlat
repnz
arpl
or
sub
xlat
ss
xchg
arpl
in
or
loopne
lret
mov
lcall
push
insb
mov
scas
xor
mov
rcl
cbtw
loop
push
dec
push
push
jns
std
jns
cmpl
cmp
jmp
add
pop
cmp
mov
jb
into
sbb
jnp
jae
cmp
imul
in
stos
sbb
inc
inc
mov
and
xor
push
or
xlat
cmp
sahf
das
in
scas
push
and
dec
lcall
shrb
fld
or
hlt
aad
das
xchg
roll
in
jp
aaa
fldl
or
das
ss
add
lret
scas
inc
jp
aad
stc
xchg
stos
out
and
cmp
jae
xchg
out
jmp
jecxz
push
mov
pusha
push
mov
clc
mov
outsl
outsb
add
loopne
cmpb
adc
sarl
inc
mov
lcall
mov
divl
lds
js
jns
fiaddl
push
pop
adc
test
es
mov
cmpsl
ret
aas
dec
push
pop
outsl
iret
cltd
notb
rorb
pop
dec
fisubrs
fs
das
mov
aam
test
daa
dec
sub
lods
sti
popa
or
xchg
mov
xor
mov
xor
andb
push
mov
rorl
lcall
ret
adc
test
call
ljmp
inc
fucomip
movsl
in
mov
sti
adc
xor
xchg
adc
mov
sbb
push
mov
mov
pop
cwtl
sbb
loop
push
cmp
popf
push
mov
or
sub
int3
sbb
insl
sbb
add
popa
orl
add
mov
jne
imul
in
mov
dec
lcall
cmpl
mov
jg
cmc
push
ds
test
or
bound
adc
loope
or
push
int3
jo
leave
and
cld
jmp
pop
inc
cltd
jmp
xor
movl
icebp
mov
call
push
pop
mov
and
jae
jmp
cmp
out
sbb
cmpsl
orl
ja
add
es
xchg
add
mov
inc
xorl
add
dec
jns
pop
lret
aad
mov
dec
ret
js
adcl
jle
movsb
call
sub
mov
ret
int3
inc
push
jae
pusha
pop
cmp
aad
loop
sahf
aas
or
lods
cmp
movsb
in
ja
pop
push
pop
cltd
movsl
pop
jae
ds
jle
test
mov
push
aam
lahf
and
pop
out
inc
mov
outsl
xchg
pop
std
into
pop
mov
and
or
mov
stos
cmc
ds
push
push
mov
jb
hlt
xor
jne
sbb
ds
inc
ja
rcrl
push
xor
lods
imul
shrb
shlb
je
out
inc
xor
fnstenv
xor
dec
push
daa
dec
aad
jecxz
out
cs
jns
rolb
imulb
dec
insl
cmpsl
outsl
pop
fs
ja
sbb
scas
mov
xchg
icebp
dec
mov
pop
mov
jmp
xchg
fs
mov
xor
sbb
mov
add
sub
or
movsb
jge
fidivl
cmc
and
mov
icebp
fstps
popa
adc
dec
mov
pop
or
or
das
insb
xor
aad
inc
loopne
jmp
jb
adc
cli
insb
sub
xchg
dec
fisubs
in
leave
or
ljmp
pop
sbb
cmp
dec
into
movaps
sub
sbb
mov
aaa
add
mov
gs
or
popf
popa
in
mov
sub
testl
aad
fbstp
mov
imul
jb
outsb
test
cmp
push
inc
dec
clc
jge
out
orb
aam
sbb
cmp
repz
xchg
add
daa
das
daa
popa
loope
jnp
jo
cmc
jl
int
pop
add
xchg
data16
mov
outsb
xor
sbb
xchg
test
jmp
dec
ja
mov
repnz
sti
stc
sub
out
pop
inc
jle
jbe
mov
rcl
push
adc
dec
stc
xchg
mov
out
inc
fcomps
aad
inc
or
pop
iret
repnz
rorb
insl
fs
iret
movsb
ret
test
mov
mov
jl
mov
loopne
sbb
jmp
rorb
or
cld
inc
xor
scas
repz
mov
xchg
movsb
push
xlat
mov
and
push
mov
mov
mov
xor
mov
xlat
xchg
and
iret
mov
jmp
or
add
daa
std
dec
fnsave
mov
pop
popf
scas
jmp
iret
sbb
adc
push
iret
inc
into
jle
fidivrl
jmp
sbb
out
pop
mov
out
mov
getsec
pop
lret
shlb
cmp
jp
xchg
call
aam
jbe
jnp
pushf
jecxz
or
mov
insl
xchg
call
push
xchg
cmp
scas
dec
push
jo
mov
cmp
sbb
call
push
rcl
xchg
mov
icebp
xchg
mov
aaa
repnz
mov
fsubrs
inc
mov
lcall
fstps
mov
lahf
mov
cmc
add
mov
jnp
add
push
loope
mov
rol
mov
scas
xchg
fwait
lock
cmp
lock
jae
xchg
xchg
mov
in
mov
fst
cmp
cli
jle
jmp
push
xor
xchg
pop
fstp
push
mov
in
fisttpl
rolb
les
xchg
push
push
jp
std
dec
mov
mov
rorb
push
cmpsl
fists
sbb
cmpsb
ret
push
sub
mov
dec
push
jecxz
push
shl
lret
lds
cmp
mov
jg
sbb
push
mov
repnz
adc
lock
mov
push
jo
pop
in
adcl
addr16
rcrl
sub
or
or
push
jmp
pop
xor
je
and
or
test
cmp
and
sub
inc
leave
test
in
repz
mov
inc
inc
jnp
sbb
fstl
xor
outsl
aam
aad
lods
cmpsb
mov
mov
add
movb
push
in
js
sbb
mov
xlat
mov
insb
ret
fistl
popf
jb
aas
test
push
sarb
dec
xchg
cs
lahf
xchg
cli
dec
les
outsl
inc
in
mov
mov
add
push
cld
shll
fwait
push
call
das
add
cmpsb
mov
cs
cmpsl
jg
pop
outsl
andl
and
ds
pop
dec
add
pop
xor
leave
jp
mov
adc
enter
mov
call
jecxz
inc
jecxz
xchg
cmp
adc
pushf
mov
or
scas
cs
out
mov
xor
je
shlb
mov
cmp
lcall
pop
xchg
and
inc
pusha
mov
stc
push
cmp
add
lea
out
push
ret
inc
sbb
ds
shlb
iret
xchg
dec
fildl
clc
aas
pop
test
cltd
cmc
xor
xlat
test
cltd
cmp
mov
xorb
push
or
add
xchg
shlb
mov
movsb
loop
mov
ja
data16
jp
cli
ret
and
je
jle
cltd
mov
mov
mov
rorl
xchg
pop
xor
in
lahf
add
xor
test
clc
fwait
add
mov
jge
ss
out
stos
stos
mov
test
cmpsl
mov
test
lods
cwtl
gs
mov
push
dec
mov
stc
stos
insb
push
adc
push
push
push
push
jmp
xor
pop
movsb
inc
jb
outsl
in
test
cmpsl
stos
mov
and
mov
call
iret
or
mov
push
jmp
movsl
cmp
dec
xchg
out
jne
mov
adc
aaa
sti
mov
nop
mov
mov
adc
aam
and
adc
mov
or
dec
test
stos
push
and
into
dec
inc
push
adc
std
je
xchg
outsb
xor
mov
or
lcall
sub
repnz
mov
push
in
lods
adc
cmp
fisubrl
mov
xor
jmp
and
leave
fwait
cmp
cmp
adc
or
pushf
mov
xor
inc
add
out
popf
xor
xlat
dec
stos
xlat
cwtl
rcrb
sub
test
add
subb
hlt
sub
cmpsl
xor
push
adc
sub
push
lods
scas
xor
das
mov
sbb
cmp
xchg
or
lret
clc
fldt
repz
pop
test
stos
jmp
in
imul
push
add
in
mov
mov
or
push
or
pop
xchg
imul
push
mov
jecxz
jo
jns
mov
dec
pop
fsubl
mov
rcr
cmp
test
pushf
and
lret
jnp
inc
add
pop
std
clc
pop
insl
pop
mov
push
nop
sbb
mov
push
aaa
mov
sbb
cmp
in
jo
jge
js
push
add
mov
scas
dec
pop
popf
fistl
fisubrl
in
inc
and
mov
inc
aaa
push
mov
xchg
scas
fdiv
pushf
aas
fst
inc
push
cwtl
fldenv
lods
mov
icebp
add
jmp
jnp
jo
aam
or
test
xor
movsb
mov
test
jecxz
adc
or
inc
xchg
loope
outsl
inc
lds
stos
aaa
loope
jge
mov
inc
loope
inc
mov
adcb
repnz
dec
aas
add
ret
or
or
mov
and
pop
inc
inc
sub
push
xor
lea
cmp
push
test
ja
xchg
adc
push
and
mov
subb
cmp
adc
jge
xchg
push
jp
aas
loop
mov
jg
loope
popf
lds
mov
xor
mov
jmp
mov
or
out
out
cmc
lret
cmp
sub
push
xchg
xchg
repz
cmp
xchg
dec
push
aad
inc
inc
outsl
xchg
cmp
jmp
sub
mov
adc
jle
mov
test
mov
xchg
stos
mov
daa
inc
lock
lods
add
mov
jbe
outsl
or
adc
pusha
adc
lds
out
sub
add
in
ret
adc
jle
xor
insl
mov
std
push
es
push
xchg
lods
ja
jmp
das
dec
je
and
fs
bound
loope
punpckhwd
pop
lret
insl
dec
jae
sub
sbb
push
outsb
jmp
push
and
repz
push
in
sbb
lock
adc
lods
cmpsb
jmp
lods
je
jne
cltd
fwait
xor
aaa
jmp
pop
mov
ljmp
popa
jg
aad
icebp
sbb
ret
loop
xchg
rcll
popa
mov
inc
adc
movsb
mov
lret
cmpsb
lea
push
nop
mov
xor
mov
int
pop
ret
sbb
add
lcall
sub
pusha
flds
xor
pushl
movsl
in
jns
sbb
or
popf
ja
fs
pop
cmp
xchg
lods
out
addb
cmpsl
mov
rcll
scas
cmp
mov
xchg
push
stos
ret
imul
enter
pop
gs
or
mov
fisttps
and
test
add
sub
stos
push
add
fmul
jecxz
dec
sbb
lahf
out
mov
bound
jno
pushf
mov
pop
push
add
sub
aaa
adc
std
xchg
push
test
xchg
lret
addr16
pop
adc
mov
out
cld
dec
push
xchg
gs
loopne
pop
pop
nop
mov
pop
lods
xor
dec
sbb
insb
xchg
adcb
in
adc
mov
icebp
jns
or
push
fwait
or
test
cmp
dec
movsb
ret
stos
xchg
out
dec
out
stos
scas
adc
pusha
pop
sub
sti
add
in
ret
negl
mov
addb
mov
ret
je
mov
lea
pop
jne
xchg
add
popf
lods
adc
jno
cli
imulb
out
ds
push
push
jne
and
lods
sub
mov
push
or
push
ror
pop
pop
jp
outsl
das
sub
aaa
push
push
dec
add
dec
or
xchg
jbe
mov
stos
mov
sbb
outsl
and
insb
rcrl
sbb
mov
adc
push
into
pop
dec
push
out
sar
cmp
stos
and
mov
pop
sub
sbb
xchg
sbb
inc
movsl
cmpsb
ret
mov
xor
xchg
out
fadds
movsb
mov
or
and
in
mov
sbb
pop
lret
xlat
outsl
ficompl
imul
adc
adc
dec
jg
fs
sub
add
ljmp
add
pop
inc
sbb
insb
lods
xchg
or
in
jle
sub
mov
ret
mov
inc
jge
je
sub
push
rorl
jge
das
jl
fldt
pop
lock
xor
cli
daa
sub
popl
cltd
jl
mov
push
leave
mov
outsb
daa
lock
inc
ljmp
lods
std
enter
or
mov
in
fildl
or
sti
enter
sub
pushl
lods
repz
inc
andl
js
cwtl
roll
inc
addr16
fwait
mov
gs
adc
pop
decl
mov
add
sbb
addr16
push
mov
cmp
jnp
inc
movl
je
outsl
or
inc
sbb
xrelease
inc
sti
hlt
add
cli
mov
fimuls
mov
and
leave
and
cwtl
jb
in
lret
jmp
sub
sbb
movsl
ret
mov
das
add
xchg
sub
test
repz
scas
shll
insl
jnp
and
mov
mov
mov
pop
sbb
push
jbe
mov
mov
jnp
cmp
cmpsb
push
cmp
jp
xor
ljmp
dec
mov
pop
jmp
mov
daa
icebp
or
icebp
push
js
repnz
and
xchg
adc
jl
xchg
push
pop
aam
mov
adc
inc
inc
inc
mov
pop
call
xchg
xor
adc
dec
ljmp
and
mulb
mov
sbb
xchg
fsubrs
inc
xchg
add
test
test
mov
in
andb
or
stos
mov
mov
icebp
insl
inc
out
jnp
push
push
fmul
imul
xor
shld
cmp
fisttpl
cltd
xchg
and
push
imull
dec
jnp
or
jecxz
pop
add
popf
dec
dec
cmp
inc
add
add
imul
jge
out
push
xchg
xor
mov
scas
inc
out
pop
ljmp
or
sub
int3
and
or
fcom
and
mov
shlb
pop
sahf
or
imulb
mov
push
jae
add
sub
sbb
ret
lahf
pop
sbb
cmpsb
sbb
add
sarl
pop
pop
call
jmp
les
std
in
imulb
mov
iret
dec
aad
sub
int3
mov
scas
xchg
hlt
or
mov
jle
repz
and
and
sub
mov
pusha
data16
dec
mov
push
in
or
cli
lea
loop
cmpb
stos
movb
mov
sub
cwtl
es
addr16
lahf
adc
xor
mov
mov
inc
test
or
mov
push
div
es
clc
gs
jp
ret
push
nop
fdivrp
and
ficompl
leave
cmpsb
hlt
mov
arpl
jno
sub
imul
and
das
mov
lahf
in
add
sub
lods
inc
xchg
dec
inc
add
sbb
pop
push
mov
testb
hlt
cmp
dec
xor
subl
push
mov
add
movsb
cld
bound
and
iret
mov
sbb
dec
inc
sub
pop
jno
xor
addl
in
scas
lcall
popf
jnp
data16
mov
jno
mov
push
imull
adc
pop
mov
pop
cmpb
jmp
mov
adc
fisubl
enter
push
clc
daa
bound
jp
add
cld
fwait
cmp
fistps
mov
mov
jo
lret
stos
js
scas
inc
into
subl
xlat
or
add
cmp
aas
stos
aas
mov
cmp
push
and
inc
add
filds
lds
mov
sti
loopne
fildll
add
lock
mov
outsb
in
push
push
or
push
add
and
sbb
scas
sub
daa
jne
add
xchg
shrl
jns
jb
pop
dec
and
out
add
cmp
pusha
dec
mov
push
sbbb
xor
xchg
dec
cmp
and
lea
mov
loopne
lahf
loope
sbb
imul
xor
fnsave
xchg
stos
mov
fisubs
push
mov
subl
dec
mov
or
shrl
addr16
dec
out
pop
add
and
aas
mov
or
xchg
jns
dec
pop
out
jae
pop
dec
lcall
push
xchg
insl
call
xchg
sar
sub
xchg
lret
dec
ja
and
call
cltd
and
push
pop
cli
and
pop
mov
sahf
aaa
lods
inc
outsl
daa
lret
xor
mov
out
mov
inc
dec
lods
arpl
sbb
xor
xor
cmpsl
push
out
test
inc
dec
loop
sub
mov
adc
cmp
push
and
das
adc
mov
add
test
xchg
mov
pop
pusha
stc
xchg
test
ja
jne
leave
popf
dec
mov
repz
rorl
pop
repz
fdivs
mov
mov
gs
mov
inc
lods
xchg
addr16
in
add
dec
or
mov
daa
lret
out
jb
jne
mov
push
add
xor
inc
leave
in
add
outsb
into
scas
test
subb
jg
sarl
pop
pusha
cli
aas
into
aas
in
push
jae
loop,pn
push
cld
sbb
push
mov
repnz
add
imul
cmp
bound
and
aam
jge
dec
dec
push
jl
mov
xchg
cmp
sub
pop
fs
int3
sahf
lahf
xchg
mov
aad
sub
jl
cmp
lods
dec
xor
mov
mov
das
lahf
es
arpl
cmpsl
adc
ja
sub
jns
mov
pop
cmpsl
adc
mov
jbe
ja
scas
int3
adc
mov
outsl
xor
mov
push
lahf
ds
ss
adc
in
test
arpl
jnp
pop
sti
ds
push
mov
daa
push
leave
fwait
insb
pusha
mov
mov
fmulp
int
pop
stos
mov
push
xchg
rcl
cld
js
xchg
adc
or
outsl
ja
scas
pushf
call
cmpsl
hlt
ss
mov
pop
push
jle
mov
push
sbb
in
lcall
adcb
das
test
pop
mov
aad
mov
xor
lods
bound
sub
jns
cli
rcll
lret
out
adc
mov
dec
jle
movsb
push
lret
loop
iret
ljmp
subb
dec
sub
inc
add
xchg
pop
aam
aam
out
loop
imul
and
jg
lock
cmpsb
xchg
out
outsb
mov
lods
pop
mov
xchg
scas
std
push
xchg
sub
push
xor
xor
aas
pop
mov
cmp
imul
and
adc
bound
xor
insb
push
cmp
push
cmpsl
ror
cmpsl
inc
jns
adc
jne
and
inc
shlb
jle
movsb
mov
pop
cld
scas
daa
adc
outsl
sbb
pop
jp
int
adc
popf
add
xlat
negb
add
shl
inc
push
and
add
insb
dec
shl
push
stc
jns
rorl
lcall
and
push
adc
adc
neg
adc
outsb
xchg
sbb
mov
js
js
ficoml
cmpsl
rcrl
or
mov
add
xchg
insb
into
lods
inc
sarb
add
cltd
push
dec
loopne
sbb
je
repz
shll
mov
ja
stc
jg
arpl
pop
push
xor
stc
fisttps
jb
cs
mov
mov
dec
movsl
sahf
dec
jno
sarl
and
sti
scas
fld
call
mov
ja
inc
xchg
dec
aas
adc
dec
lds
cmc
sub
icebp
cmp
lret
sahf
jnp
fildll
push
adc
pop
mov
and
mov
daa
sbb
test
rorl
mov
cmp
and
jns
cmp
das
and
cs
inc
cmpsl
jge
sub
mov
mov
mov
vucomisd
incb
inc
cmpsb
adc
add
jmp
cmp
cmpsb
jmp
dec
rorl
push
and
xchg
fnstsw
hlt
sub
mov
popl
cmpsl
cmpsl
or
aad
push
frstor
push
fstp
rcrb
mov
jmp
pop
sarb
adc
jne
cmpb
mov
mov
shr
mov
lock
std
add
cmp
fnsave
mov
outsl
cmp
jb
sub
or
or
sbb
xor
inc
mov
or
mov
add
inc
xchg
cltd
or
add
adc
dec
clc
out
insl
testb
sub
cmp
ds
pop
lea
mov
sbb
adc
je
mov
fadds
push
xchg
sti
xchg
int3
les
call
cmp
and
mov
test
bound
adc
pop
in
mov
mov
mov
mov
icebp
sub
mov
or
push
arpl
or
js
inc
or
mov
and
cs
test
outsl
pop
adc
enter
push
xor
sub
jle
outsb
jg
int3
imul
insb
sub
dec
pop
bound
mov
pop
xlat
inc
popa
push
pop
mov
test
jne
mov
mov
sub
in
mov
push
cmp
sti
stos
sub
jle
into
inc
clc
inc
pop
fidivrl
mov
lods
into
push
sbb
xchg
jmp
cmp
pop
pusha
stos
test
dec
aaa
push
pop
jle
dec
aas
daa
push
shll
push
push
dec
enter
or
push
hlt
out
aad
cmp
pop
dec
adc
outsl
mov
jp
cwtl
scas
pop
popf
push
push
sysret
jp
xchg
mov
jecxz
push
mov
sbb
enter
scas
pushf
in
outsl
ljmp
rcr
imul
shrb
or
add
mov
out
mov
xor
lods
jns
sbb
sbb
push
ljmp
out
sub
xchg
ss
call
subb
sbb
push
std
scas
add
xchg
outsb
adc
sti
mov
xor
stos
js
pop
adc
sub
in
lcall
sbb
shll
mov
pop
jnp
and
addl
stc
jae
out
daa
cld
xlat
test
subl
pop
add
les
ljmp
pop
out
loop
in
and
fldenv
pop
xor
push
dec
in
es
lds
aas
into
sub
repz
outsb
dec
jmp
pop
or
ja
sbb
movsl
mov
imul
jb
stos
fcompl
les
and
repz
fst
jnp
and
loop
shrb
xchg
push
lods
push
mov
mov
push
cmp
pop
inc
gs
fsubrp
mov
adc
xor
jne
ss
sti
mov
das
out
arpl
movl
mov
xor
and
push
mov
inc
or
dec
xchg
sbbl
lods
mov
std
mov
jg
int3
not
jmp
mov
adc
jp
bound
ficomps
push
add
mov
cmp
mov
subl
fdivl
sub
xorl
jmp
mov
pushf
sbb
dec
lock
nop
ds
aaa
lahf
xlat
lret
in
outsb
movsb
ret
insl
dec
orb
mov
inc
das
mov
lret
inc
pop
or
cmpsl
cld
fwait
cltd
jle
and
cli
mov
cmp
out
dec
fbstp
dec
ja
lods
xor
lds
jb
push
mov
bound
adc
cwtl
cld
ss
repnz
jl
adc
jne
in
push
lret
pop
ret
scas
popf
mov
ret
mov
sarb
push
adc
loopne
dec
jle
sbb
je
push
push
out
imul
sti
mov
imul
enter
inc
mov
adc
add
mov
dec
aad
enter
add
out
pop
xchg
pop
pusha
pop
or
ds
inc
sub
dec
xchg
cs
jp
xchg
push
xor
jne
add
jle
incb
xchg
jo
fsubrs
arpl
mov
mov
mov
mov
out
cmc
pop
xchg
aam
lds
mov
movsl
lahf
into
arpl
cmpsb
jl
pop
and
mov
inc
xchg
mov
sbb
rcrb
mov
repz
rorl
iret
pop
and
andb
cmpb
xor
movzwl
into
fcomi
dec
nop
cmp
shlb
mov
cli
pop
and
andl
dec
aad
popf
adc
dec
push
lcall
dec
imul
cmpsb
into
mov
mov
enter
faddl
decl
inc
inc
xchg
arpl
and
lcall
sti
subb
jg
add
lcall
mov
stc
and
fs
int
bound
aaa
dec
or
stc
and
sbb
inc
icebp
pushf
and
mov
sub
xlat
and
inc
je
adc
mov
pop
js
pop
es
mov
sbb
fstl
int3
fldl2e
xchg
rep
clc
es
out
dec
fstpl
ds
iret
movsb
rclb
cmp
rorb
es
jmp
arpl
adc
mov
inc
addr16
sub
pop
in
psrld
std
xor
mov
in
aaa
pop
adc
loopne
popf
sarb
xchg
sub
movsl
sub
and
jmp
lcall
and
adc
ret
fs
ds
sbb
or
cltd
loopne
cltd
leave
mov
inc
or
scas
dec
je
xchg
mov
sub
in
xchg
sub
stos
es
dec
ja
xorb
adc
fmuls
sub
push
in
mov
mov
jae
imul
insb
mov
in
jae
imul
jns
xchg
scas
ret
jno
cs
inc
sbb
xor
jg
pop
xchg
fs
inc
stos
lahf
sub
dec
sahf
sub
or
inc
mov
and
ficoms
outsl
pop
push
inc
call
decl
iret
xor
gs
testl
cmpl
sbb
add
out
je
add
loope
jmp
repz
mov
iret
adc
ds
mov
jge
jp
add
push
jl
lods
or
xor
in
iret
imull
and
sub
xchg
cmpsl
sub
and
leavew
dec
adc
jmp
out
mov
mov
int3
mov
sbb
adc
mov
add
or
aas
inc
aas
push
xchg
inc
jp
aas
sub
out
gs
add
push
push
int3
movsb
loope
pushf
jno
and
add
cmp
mov
ds
shll
jecxz
jae
enter
inc
movsl
fcoml
mov
push
fisttpll
xor
push
push
les
xchg
mov
insb
imulb
xlat
mov
dec
push
pop
sbb
xlat
dec
add
movsb
mov
je
add
add
add
jge
and
pop
mov
pushf
es
call
lods
and
pop
in
lea
and
xchg
inc
sbb
push
fdivrl
adc
jp
lds
cmp
pop
mov
mov
mov
repz
pop
mov
push
into
orl
dec
or
clc
dec
popf
orps
dec
cmp
fcmovu
mov
mov
outsl
ss
movsl
cmc
idiv
inc
xchg
cmp
and
aaa
test
xchg
mov
push
mov
jecxz
inc
lock
roll
mov
test
jg
cs
mov
enter
cs
mov
xchg
mov
push
sub
rorb
pushf
orb
cmc
lock
mov
cmp
or
sar
and
cmp
ja
lock
stos
int3
lock
sbb
nop
fnstcw
in
pop
push
inc
scas
notb
cmc
or
ljmp
or
add
stos
ljmp
xchg
add
fptan
sbb
shll
push
lahf
dec
sbbl
daa
inc
and
nop
mov
loop
sub
fldenv
push
popa
pop
xor
push
pop
and
push
insb
in
shlb
push
jle
sbb
jb,pn
in
cltd
push
aas
nop
cmpsb
scas
lods
mov
mov
stc
pushf
and
sbb
push
fsubl
or
and
add
ret
sub
cmpsw
ljmp
mov
cmpsb
in
ret
lds
enter
jbe
pop
fs
mov
clc
cmp
ficoms
xchg
das
adcl
or
fadds
in
sub
pop
push
das
xlat
jge
mov
cmc
aas
pushf
ljmp
fistpl
or
inc
mov
leave
sub
mov
lea
sub
lea
imull
loopne
shrb
cmpsl
xor
sbb
or
mov
pushf
jo
add
xlat
inc
jns
vpsrlq
lds
in
mov
and
lahf
cmp
and
pop
cltd
mov
pop
bound
mov
lret
cwtl
ror
fsts
cmp
outsb
sub
dec
hlt
sub
icebp
inc
add
push
dec
mov
cltd
dec
sbb
inc
loopne
mov
ret
jne
lods
mov
test
in
jge
dec
adc
lret
xor
mov
frstor
out
cmp
pop
jg
cmpsl
and
leave
dec
pushf
xchg
into
in
shlb
cli
lock
flds
loopne
les
insb
or
cmp
or
push
sub
dec
pop
mov
vandnpd
daa
dec
aaa
xor
lret
or
adcb
xor
mov
fidivl
jmp
decl
dec
dec
shrb
jnp
cmp
or
mov
xor
cli
outsb
fistps
aad
dec
in
pop
sbb
mov
pop
pushf
pop
dec
xchg
stos
outsl
cwtl
js
loop
mov
mov
loope
shrb
mov
dec
jle
cmp
push
stc
push
push
jle
aaa
stos
and
xor
adc
iret
out
lahf
mov
cmpsl
add
popa
sbb
adc
pop
test
gs
jnp
xor
push
inc
call
mov
gs
pushl
ss
scas
xlat
sbb
popa
jb
cmp
xlat
mov
mov
pushf
pop
xchg
push
sbb
xchg
mov
mov
fdivl
pusha
testl
in
jb
out
cli
sub
mov
mov
mov
out
jno
leave
push
pop
je
ds
test
mov
lret
repnz
jbe
sahf
ja
std
es
pop
fsubl
out
jb
mov
xor
bound
popf
inc
and
mov
dec
adc
add
xchg
repnz
cmp
scas
test
jg
aaa
movsl
or
mov
cli
jl
push
ss
dec
mov
xor
lods
leave
in
mov
xlat
sar
pop
sub
rolb
push
cmpsb
xchg
repnz
movsb
ret
lret
pop
xor
xchg
iret
mov
add
xchg
push
hlt
pop
push
xor
xlat
pop
rolb
mov
sarl
inc
mov
xor
rol
arpl
xor
push
outsl
pop
dec
inc
inc
pop
addr16
jp
test
jnp
jno
lahf
in
popf
lcall
cmp
dec
cltd
gs
mov
imul
push
stos
push
mov
loopne
scas
xchg
sub
pop
std
fadd
jbe
out
push
loope
shlb
sbbl
add
sti
mov
je
inc
iret
sub
stos
es
sub
cmp
inc
lcall
pushf
mov
fsubrl
js
mov
mov
and
faddl
adc
orb
arpl
lock
shrd
push
shr
cs
cli
cmpsl
or
inc
in
pop
testb
movsl
mov
fnstcw
adc
pop
mov
sbb
sbb
test
sub
cltd
fisubl
test
xchg
es
jne
push
mov
stc
lock
and
fdivrl
sub
dec
iret
cmp
cmpsl
movsl
mov
lret
insl
mov
fnstcw
lea
push
stos
sub
xor
lods
shrb
test
dec
xor
fldt
add
cld
loopne
inc
add
gs
jns
push
int
cmp
mov
mulb
cmp
cmpsb
jb
jbe
push
sub
leave
arpl
xor
test
mov
sbb
fsub
inc
pop
mov
mov
cmp
sub
sub
cmp
add
inc
aaa
icebp
sub
and
jbe
jg
sbb
sbb
dec
sub
lcall
lock
xor
xlat
ds
mov
fcomi
cmp
dec
stos
cmp
xchg
adcl
mov
insl
push
sbb
mov
arpl
aam
jb
cmc
push
fsubl
pop
push
sub
jae
into
bound
push
sub
add
mov
cli
inc
add
out
in
scas
aad
xor
xor
call
cltd
mov
dec
aam
lret
adc
arpl
nop
and
dec
and
out
fs
mov
aaa
sbb
out
lret
in
mov
cmp
fstpl
and
popa
bound
out
fwait
xchg
mov
xor
or
pop
fmull
cwtl
addl
btr
das
sub
or
ljmp
dec
pop
push
mov
inc
add
xchg
xor
sub
dec
cmpsl
inc
test
arpl
xor
mov
push
iret
negl
xchg
mov
sub
inc
das
insl
lret
fs
loopne
shll
xor
mov
cmp
lods
mov
iret
jge
cli
pop
adc
roll
scas
cmp
xor
in
cmp
fs
jno
ret
cwtl
sub
lahf
sub
push
cwtl
push
mov
outsl
push
ret
cmp
rclb
mov
fadd
and
sbb
cmpsb
push
mov
push
mov
add
pop
clc
xchg
cmpsb
xchg
in
or
xchg
jns
mov
fisttps
mov
cmc
add
pop
testl
sar
int
pushl
inc
mov
jp
and
mov
add
cmp
ret
fmull
adc
scas
ret
adc
pop
push
scas
fnstsw
cmp
add
or
mov
push
push
or
hlt
pop
xchg
repnz
pop
xor
push
cli
in
jp
push
pop
in
push
sbb
mov
arpl
mov
xchg
fsubrl
adc
mov
jecxz
sbb
mov
pop
dec
pop
add
jbe
cmpsb
jecxz
jmp
and
andl
ds
xchg
cmpl
pop
push
adc
lahf
mov
jmp
mov
push
adc
out
pop
jp
cmp
cmp
scas
xchg
psubusw
ss
xor
dec
sbb
or
cmp
push
repnz
jno
xchg
scas
repz
sub
jb
jne
adc
ss
inc
cmp
bnd
rcrl
fdivl
cmc
xchg
rcrb
push
mov
flds
cltd
cmp
mov
std
push
sbb
inc
iret
adc
inc
xor
sub
cmpsl
jns
sub
lret
aam
popf
or
jo
cmp
out
call
sub
and
icebp
sub
imul
sbb
icebp
daa
inc
rcrl
sub
data16
scas
push
cmpsl
sahf
push
es
jne
xor
fsubrs
cmpl
sbb
sub
pop
lods
test
loop
xor
movsl
ja
mov
mov
sbb
mov
adc
inc
mov
pop
clc
ja
cwtl
pop
iret
mov
pop
dec
xchg
fstpt
aaa
rcrb
inc
pop
dec
pop
lahf
mov
loope
in
mov
xor
lret
add
mov
lret
popf
inc
cltd
stc
lods
enter
movsl
cwtl
imul
push
test
mov
push
xorb
mov
sarb
aam
jo
adc
pusha
sub
inc
jg
andb
xchg
inc
jae
add
xor
jle
adc
lods
pop
fwait
inc
int
cmp
dec
mov
push
mov
push
mov
or
pop
adc
push
push
mov
test
dec
jb
or
leave
addl
sub
and
outsl
xor
dec
sub
or
movsl
lahf
test
mov
mov
aaa
cmp
call
fimull
fnstenv
daa
sbb
xor
push
pop
jmp
scas
fdivrp
sbb
sbb
cmp
sbb
xchg
adcb
push
in
jb
cld
dec
sbb
mov
cld
lcall
adc
dec
mov
mov
ret
pop
cmp
ret
outsb
add
sahf
sub
push
shl
into
popf
cmpsb
stc
mov
cmpsb
inc
or
and
jb
cltd
test
jns
inc
rcrl
push
enter
cmp
mov
inc
sbb
jmp
jg
mov
add
inc
jg
mov
add
pushf
lods
pushf
outsl
outsb
pushl
movsl
outsl
sub
mov
or
xor
data16
fisubs
das
jns
sub
xor
clc
js
push
je
xchg
loopne
gs
push
sarl
orb
cmp
stos
pmaxub
pusha
mov
push
mov
push
fs
cmp
xchg
mov
stc
xor
pop
aad
mov
mov
loopne,pn
orb
imul
inc
xor
idiv
and
insb
frstor
push
int
xor
dec
mov
cwtl
inc
push
je
cmp
jmp
cmp
cmp
cmp
pop
sbb
mov
pop
mov
xchg
andl
or
pushf
test
ret
cld
insb
lret
lahf
or
mov
mov
and
cli
arpl
push
jae
mov
aaa
loopne
jbe
mov
adc
jne
outsl
rorl
lret
enter
mov
or
enter
movsl
repz
lret
mov
js
lcall
iret
jge
call
cwtl
int
inc
push
pop
push
add
cmp
jns
add
dec
mov
cmc
je
das
clc
inc
dec
mov
loop
dec
sbb
decl
jno
gs
mov
mov
je
pop
and
negb
loop
sub
scas
and
or
xchg
clc
pop
mov
push
mov
pop
lret
dec
frstor
mov
popf
dec
outsb
out
sub
cmp
mov
or
aas
add
call
mov
insl
shl
pop
pusha
scas
push
jle
adc
add
fs
add
rcl
repz
je
pop
sbb
jae
mov
push
mov
mov
mov
mov
mov
or
pop
xchg
repz
repnz
shlb
int3
ljmp
cmpsl
push
pusha
repz
sub
cmp
cwtl
loop
popf
aad
scas
sub
cmc
fstps
push
add
mov
fists
mov
cmpsl
rol
xor
push
sbb
push
cmp
jno
jo
pop
leave
inc
hlt
data16
push
push
lret
and
sbb
imul
scas
sub
cmpsl
popa
sub
rclb
xor
pusha
push
aas
mov
or
cwtl
xchg
pop
cmp
ror
xor
cmpsl
nop
movsl
dec
loopne
jne
lahf
and
adc
pushf
or
pop
stos
test
orl
adc
xchg
lahf
fsubp
and
sub
adc
jle
xor
dec
push
mov
dec
loope
dec
adc
jo
cmpsb
push
pop
sub
mov
cld
pushf
fidivs
iret
icebp
add
scas
sarb
xchg
call
fcmovbe
lea
inc
test
imul
mov
stos
insl
stos
lods
jl
out
mov
out
aaa
jle
repz
movsb
sbb
hlt
mov
fxch
jmp
sub
jge
mov
fnstcw
out
sbb
shl
stos
lods
mov
mov
dec
andb
mov
mov
das
mov
xor
cmpsb
push
add
and
mov
sti
aaa
faddl
les
or
mov
pop
adc
push
cmp
jo
mov
rol
xor
inc
xor
mov
ds
shll
and
movsl
enter
cmp
cmp
iret
imul
stos
mov
push
movsl
imul
fldcw
repnz
lods
int
cld
ds
dec
inc
idiv
or
sub
divb
mov
cli
call
shl
dec
or
xor
dec
js
pop
pop
out
icebp
mov
adc
shlb
jge
cmc
mov
aas
pusha
imul
pop
sbb
ret
and
or
aam
jecxz
mov
mov
ljmp
mov
jbe
mov
xor
inc
mov
daa
add
int
out
mov
mov
mov
cmpsb
mov
push
cmp
adc
inc
movsb
lea
ds
rolb
mov
lds
or
cli
clc
js
jge
jecxz
loop
cmc
lods
and
inc
sub
sti
mov
inc
cmpsl
dec
push
xchg
add
push
xchg
ljmp
lret
scas
subb
out
mov
and
test
neg
in
dec
enter
lods
aam
push
or
pop
push
inc
and
movsb
fwait
cs
and
in
bound
dec
rcrl
das
mov
loop
and
dec
icebp
push
aam
insl
push
push
pop
rclb
xorb
or
cmc
fwait
push
stc
pop
lock
outsl
or
insl
adc
arpl
xor
mov
jl
xchg
nop
sub
inc
hlt
add
cli
mov
dec
popa
loope
ret
mov
nop
or
pop
shlb
push
mov
sti
jns
or
jo
cwtl
push
pop
jno
call
stos
mov
lea
inc
shll
iret
out
xchg
outsb
mov
shrb
sarb
ss
cmp
mov
pop
pop
fmul
insb
dec
testl
icebp
push
icebp
cmpsl
ficoms
adc
test
xor
mov
jecxz
jo
test
inc
fld
cmp
popa
jmp
add
push
cmp
jns
scas
lock
cmp
xor
sub
jle
and
divl
push
mov
cwtl
cwtl
outsl
adc
lock
xor
jb
jmp
pop
jp
adc
je
jb
roll
in
out
pop
mov
insl
ds
icebp
add
pusha
imul
fistps
aam
xchg
mov
ret
int3
add
cmp
and
mov
jmp
mov
sbbl
dec
jmp
add
sbbl
movsb
sub
outsb
imul
xchg
rcrb
cli
sbb
scas
scas
mov
fisttpll
loope
xchg
push
sbb
lods
and
mov
add
fcomp
cld
lods
mov
in
je
scas
aaa
jb
in
add
add
lcall
insl
mov
ljmp
into
fidivs
cmp
lcall
fadd
or
cmp
mov
out
cltd
cli
dec
jnp
jbe
or
or
fnsave
or
std
mov
mov
call
orb
jae
dec
test
cmpsb
xor
adc
psubsw
leave
cld
aam
sahf
or
cmp
cmp
inc
pop
adc
add
fs
and
inc
ds
cmc
or
iret
int
dec
std
cmc
in
popa
mov
fidivl
mov
fcoml
lods
push
test
jle
loopne
mov
xchg
jbe
in
xchg
jae
js
ftst
pop
bound
popf
rcl
mov
lret
adcl
sbb
loopne
or
das
es
sti
pop
das
addr16
cwtl
pop
mov
or
xor
shlb
jmp
add
cmpl
callw
mov
or
and
shll
push
loopne
mov
push
subl
add
mov
pop
nop
cli
pop
sub
test
and
icebp
hlt
xor
pop
flds
sub
inc
dec
inc
repnz
imul
dec
mov
xor
lock
adc
jb
and
push
adc
les
loop
inc
movsb
lret
cmp
cmp
int
dec
sahf
cs
inc
test
popf
fcmovbe
mov
mov
sub
notl
cwtl
imul
imul
in
push
xlat
scas
dec
mov
and
mov
into
cld
in
mov
xchg
add
pop
pop
jmp
movsb
push
push
push
insb
inc
test
adc
aam
data16
not
jmp
aaa
dec
aas
mov
aad
in
jl
inc
arpl
xchg
testl
sub
std
mov
gs
push
mov
dec
push
xor
pusha
imul
movsl
jmp
jp
push
mov
sbb
rcrb
fwait
popa
fisubs
cmp
mov
fidivs
pop
push
sub
xchg
mov
fnstcw
and
js
outsl
add
imul
or
or
jbe
into
pusha
aam
push
call
xor
rcl
lcall
add
fstl
mov
inc
push
ja
sub
push
sbb
outsb
dec
push
mov
cld
sub
pop
and
xor
sti
jle
inc
das
and
or
dec
and
cmpl
int3
pop
jecxz
fdivrs
popf
iret
shl
jne
inc
testb
jno
add
mov
dec
orl
xchg
cmpsb
xor
arpl
lret
pop
adc
mov
pushf
cmc
mov
inc
push
sbb
sahf
bound
add
xchg
sarl
sbb
and
mov
push
repz
mov
inc
repz
leave
sbb
add
in
outsl
add
dec
loope
adc
sti
sbb
pop
xchg
cld
push
in
add
out
call
mov
mov
add
lcall
scas
pop
adc
outsb
cmp
cmc
xchg
push
pop
rolb
adc
pop
ret
xchg
jo
in
orb
je
bound
pop
sub
mov
and
push
jno
jo
pop
icebp
dec
jns
and
mov
loopne
inc
pop
pop
loop
test
pop
rorb
shll
jns
or
mov
xchg
dec
paddq
lahf
dec
lds
jns
cmpsl
cwtl
test
std
stos
push
mov
mov
or
push
pop
inc
lcall
and
cmp
invd
push
ret
pop
jmp
fwait
xchg
int
mov
gs
sbb
and
xor
push
xchg
push
pusha
fsubs
dec
rolb
mov
push
pop
and
loopne
push
inc
stos
into
lcall
andb
lret
sbb
shrl
cmp
pop
push
mov
es
mov
cmp
adc
test
dec
aaa
dec
cmc
pushf
dec
rorl
out
fs
test
clc
int3
inc
xlat
xor
jb
push
xor
popf
xor
mov
cmp
movsl
scas
mov
mov
inc
dec
inc
mov
ss
xor
jnp
out
je
ret
and
inc
fdiv
sbb
cmpsl
scas
push
push
ret
or
je
aad
arpl
pop
pop
dec
mov
out
xchg
fidivs
jle
mov
bound
xor
mov
pusha
or
movsl
sub
aas
dec
sub
in
ret
xlat
rcrb
rcrl
pop
sbb
push
mov
adc
inc
shlb
xor
test
or
es
leave
push
pop
mov
movsl
pop
xor
imul
dec
add
push
push
lret
int3
adc
scas
mov
xor
pop
leave
mulb
rorb
inc
jecxz
push
cmp
movsb
notl
adc
xchg
mov
pusha
stc
int
inc
push
mov
in
cltd
mov
ss
xchg
into
adc
cld
int
and
out
mov
test
xlat
add
and
add
cli
dec
xchg
cmp
cmp
cmpsb
mov
rcrl
repnz
mov
cwtl
ljmp
mov
jo
adc
les
sbb
xchg
sbb
data16
ret
mov
jmp
xor
push
jmp
insl
repz
cmp
and
imul
add
xor
imul
loop
stos
jne
sbb
cmp
pop
ret
cmp
loope
inc
and
cld
mov
jo
fstps
mov
xlat
scas
and
inc
cmp
frndint
add
add
xchg
movl
lds
pop
bnd
outsb
and
xchg
cmc
pop
push
xor
mov
jge
jge
popf
les
lods
xchg
rorl
lods
cmc
add
push
add
xchg
xor
jle
incb
mov
aam
je
cmpsl
in
jb
jg
lods
mov
sbbb
mov
test
mov
in
and
clc
mov
es
sbb
insb
or
sbbl
jbe
push
outsl
push
push
jb
out
insb
mov
sub
pop
dec
push
je
stos
xchg
xchg
mov
shrl
faddp
mov
je
outsb
adcb
addr16
lods
loopne
push
sub
lret
lock
fidivs
das
jbe
stos
sbb
xchg
into
jne
lret
cld
shll
pop
into
cmp
jb
pop
sbb
mov
pop
test
jle
inc
and
dec
inc
data16
sahf
std
xor
fstpl
fucomp
inc
lds
xchg
fdivp
aam
add
pop
in
pop
cmp
adc
sbb
movsl
mov
mov
mov
or
andl
bound
inc
daa
sbb
adc
aam
jle
inc
push
cli
mov
pop
cltd
loope
std
add
int
sub
sbb
or
inc
push
xchg
test
inc
sub
or
xor
or
adc
sbb
or
dec
neg
dec
xchg
andl
add
lods
cmp
xor
bound
jle,pt
push
outsl
mov
fs
adc
outsl
clc
sbb
mov
adc
add
iret
mov
jmp
inc
loopne
iret
daa
dec
push
push
jne
movsb
ret
adc
adc
jmp
sar
dec
push
and
mov
nop
popf
sbb
or
sti
cmp
xchg
jo,pn
push
fcomp
addr16
and
pop
notl
fnstsw
xchg
pop
xchg
gs
adc
jb
pop
adc
mov
push
push
sbb
subb
mov
mov
or
decl
mov
xlat
outsl
and
mov
lods
or
ljmp
notb
sub
sbb
mov
lea
repnz
push
leave
lods
mov
popa
mov
ss
arpl
jae
pop
mov
jae
sub
mov
nop
inc
call
lods
das
mov
sub
js
int
adc
pop
sbb
sub
sbb
mov
and
lahf
fucom
pop
aaa
aaa
mov
mulb
xorb
dec
pop
cbtw
pop
adc
xor
xor
cltd
inc
scas
gs
mov
insl
push
push
insb
sbb
std
mov
fdivl
ret
orb
shl
jmp
sbb
outsb
inc
imul
gs
es
jno
in
pop
pop
idivb
imul
shrb
ret
jnp
sbb
cmp
jge
ljmp
stc
std
icebp
mov
cs
orl
push
in
cs
inc
push
cltd
mov
icebp
xchg
inc
sbb
xchg
mov
fdivrl
cmpsb
decb
fwait
mov
cld
stos
ret
pusha
cmp
add
outsb
mov
insl
mov
out
fisubrs
popa
or
andb
stos
imul
std
mov
outsl
repz
loop
add
cld
pop
fwait
mov
test
dec
cmp
sbb
aam
add
je
sarb
je
push
mov
sbb
jle
aam
leave
push
dec
ficoms
je
int3
mov
sub
mov
mov
inc
sub
push
push
jno
movsb
loopne
sub
out
stc
mov
push
shr
sbb
cmp
sarl
imulb
cli
cmp
xchg
push
xor
xor
sub
xor
outsb
bound
and
pop
mov
mov
pop
jnp
mov
pop
lcall
pop
inc
int3
rclb
mov
imul
pushf
out
lock
sti
fisubl
das
icebp
stos
mov
push
sbb
jb
adc
add
mul
mov
jbe
cmp
int
inc
idivb
cltd
and
pop
and
scas
lds
pop
cli
mov
inc
arpl
add
outsb
pop
fidivrs
das
ja
mov
xchg
out
bound
iret
jns
outsl
test
push
lret
popf
cwtl
leave
imul
inc
loop
aad
out
repnz
ret
gs
or
data16
mov
shrl
mov
xlat
mov
mov
hlt
and
dec
push
inc
mov
xchg
dec
test
mov
dec
lret
sbb
das
in
les
cmp
add
jmp
dec
leave
adc
call
stos
cmp
xchg
repz
lret
dec
pminub
das
pop
xor
into
sbb
mov
clc
mov
movsl
cmp
cmp
lahf
mov
pop
mov
int3
pop
out
shlb
sub
push
cmp
jns
mov
mov
mov
xor
push
sub
xchg
inc
dec
pusha
icebp
cmp
cmpsb
frstor
sub
dec
gs
mov
inc
stos
sub
sahf
je
push
outsl
popa
lret
ljmp
push
xchg
daa
dec
idivb
xor
mov
sub
jmp
repnz
sub
cmp
loop
neg
stos
rolb
das
out
pushf
or
adc
jg
test
mov
movsb
sahf
and
dec
xor
and
add
sub
lret
imul
or
fidivrl
nop
and
cmp
push
ja
sti
mov
sbb
mulb
sbb
stos
mov
loope
aaa
negl
sub
shrb
mov
add
enter
mov
sti
sub
in
sub
fstpt
cmp
inc
sbb
lds
push
and
cmp
or
fs
add
or
notb
gs
cld
pop
jbe
pusha
adc
push
sti
inc
cld
mov
fs
shll
in
movsb
subl
mov
dec
fcoms
adc
xor
call
in
push
mov
fucom
jbe
scas
out
aam
call
push
sbb
fisttpl
dec
push
add
pop
sub
cld
mov
testl
clc
or
in
sub
hlt
jge
ds
jle
lods
and
es
dec
push
cs
mov
pop
repz
and
cmp
lcall
inc
dec
pushf
add
lahf
sbb
outsl
dec
das
inc
icebp
pop
xchg
in
js
or
inc
leave
and
fnsave
dec
ffree
fisttps
add
shlb
imulb
mov
and
pop
cmp
xchg
inc
in
mov
das
push
pop
cmp
loopne
cmpsb
sbb
out
xchg
ljmp
sbb
imul
jge
xor
mov
orl
mov
popa
mov
and
push
es
mov
cld
cltd
inc
sbb
add
stc
lods
push
sbb
ljmp
in
mov
imul
mov
hlt
outsl
cmpl
push
mov
mov
rcr
dec
xchg
bound
xchg
cmp
pop
daa
cmp
lcall
xor
test
addr16
inc
dec
xor
and
cli
popf
fistps
mov
call
mov
pop
imul
daa
mov
inc
out
loop
adc
repz
xchg
ret
shlb
jmp
movsb
dec
cmp
dec
fs
ficoms
xchg
mov
mov
xor
in
jb
test
fwait
pop
mov
cli
int3
mov
inc
aad
andps
in
sbb
xchg
jbe
sbb
mov
xchg
xchg
cmpsb
imul
mov
movsl
mov
mov
mov
jns
inc
sub
into
push
test
cmp
xor
inc
dec
repz
test
enter
fldl
xor
pop
ja
ret
lcall
or
mov
cld
push
push
push
nop
test
lahf
in
inc
lahf
inc
in
sbb
dec
enter
jle
jmp
mov
or
dec
call
sahf
rolb
fstps
imulb
inc
cmp
mov
jmp
icebp
push
jl
lcall
out
pop
call
rclb
jmp
dec
mov
and
mov
leave
call
mov
push
js
push
jmp
or
aas
pushf
push
mov
pusha
inc
xchg
in
sbb
jmp
loopne,pn
icebp
jle
fmull
clc
xchg
scas
notl
sti
xchg
mov
sbb
out
addr16
dec
sbb
lcall
or
xchg
and
adc
rorl
test
insb
sub
cmpsb
push
jge
jmp
xchg
sub
pop
add
icebp
dec
and
add
test
jo
bound
out
cmpsl
mov
sub
add
stc
adc
dec
mov
movb
std
icebp
fidivl
jle
dec
mov
jmp
bound
or
in
jge
rorl
test
setbe
inc
fs
inc
mov
testb
aas
fisttps
popa
mov
in
cmp
adc
cld
call
and
pop
aaa
pop
sub
jns
adc
xor
insl
jmp
xchg
push
lock
scas
subb
pushf
roll
jo
sbb
in
jmp
imul
xchg
mov
mull
adcb
test
or
xchg
popa
push
int3
roll
sbb
dec
mov
daa
aam
psrlw
fisubrl
push
jl
jp
jbe
bound
loopne
aaa
into
xchg
repz
sbb
xchg
sub
xchg
adc
xchg
xchg
int3
and
lret
sahf
or
insl
add
inc
dec
push
mov
int3
in
sbb
fdivs
pop
aam
push
and
xchg
mov
jae
xchg
mov
cmc
std
sar
sub
push
mov
adc
sbb
ljmp
add
leave
inc
mov
and
sti
imul
or
inc
pusha
cs
call
inc
xor
xchg
cmp
jg
mov
pop
push
pop
adc
hlt
insl
repnz
scas
scas
rolb
sub
psadbw
mov
test
pop
xchg
sub
mov
in
loop
test
pop
adc
das
scas
push
pop
jb
cmp
mov
add
cmpsl
ret
call
test
inc
rol
inc
ret
adc
xchg
add
mov
inc
lret
or
jg
and
pusha
in
jmp
jo
inc
xor
cmp
add
pop
loopne
lret
cmp
cmc
inc
filds
adc
xchg
pop
or
mov
aad
cs
outsl
cmpsl
mov
repnz
push
lret
sarl
jecxz
and
lahf
loopne
or
enter
fld
inc
sub
icebp
push
mov
and
jnp
test
add
fstps
insl
fs
sbb
aad
dec
sub
xor
mov
addl
mov
xchg
imul
sub
das
popf
pop
ljmp
xchg
dec
jb
sub
adc
popf
push
cli
fsubs
out
adc
cmp
int
or
pop
std
cmp
or
int3
sbb
mov
xchg
cmp
mov
sub
xor
ja
inc
xor
mov
fisubrs
pusha
fisttpll
fmul
fmul
ja
lret
and
push
pop
pusha
mov
cmp
outsl
dec
inc
scas
fdivs
jnp
jns
dec
mov
int3
jne
fimull
push
cmp
das
push
hlt
cltd
sti
sub
sbb
inc
lods
mov
xchg
or
mov
xor
test
clc
fistpl
rorb
add
test
jo
pop
fdivrp
mov
adc
cmp
inc
out
movsl
ret
aad
fcomps
pop
and
and
pop
mov
popl
imul
outsb
sahf
mov
inc
fimull
pop
aas
inc
test
inc
fstps
stos
out
xchg
mov
inc
aas
imul
and
and
mov
test
cs
js
mov
cmc
addr16
push
inc
mov
cmp
call
ljmp
sbb
lea
mov
je
repnz
test
pop
pop
ret
xchg
daa
jp
cli
sahf
int
scas
and
out
outsl
js
pop
mov
sbbl
xor
cli
cltd
adc
inc
xchg
int3
push
insl
fnsave
loop
inc
mov
out
insb
bswap
int3
push
cltd
insb
jg
push
pop
aaa
mov
add
xor
repz
scas
cmpsb
lock
mov
jb
rcl
mov
jp
sub
test
decl
jne
cli
or
sbb
add
int
aas
cmp
cs
movsl
push
ja
mov
push
mov
roll
xchg
inc
dec
ljmp
and
adc
sbb
inc
pop
pop
pop
pushl
cs
sbb
jnp
fists
jne
cmp
mov
jmp
dec
sbb
mov
lret
push
mov
push
fstps
test
scas
mov
jmp
and
enter
dec
mov
lods
imul
add
cld
hlt
les
repnz
loopne
pop
push
inc
push
stos
loope
adc
mov
xor
xor
mov
addr16
push
pop
mov
adc
fldl
jmp
inc
shll
dec
add
lds
outsl
xchg
ss
cltd
or
sbb
lods
xor
mov
cmp
outsl
and
sbb
cmp
icebp
xchg
sub
xor
mov
lret
lcall
and
jle
fiaddl
mov
addb
xchg
imulb
mov
dec
gs
aam
stos
movsl
stc
add
add
push
popf
inc
pop
push
jns
mov
mov
xchg
repz
sbb
imul
sbb
sub
pop
ret
sbb
mov
sahf
jnp
ficomps
mov
inc
push
sub
jl
sbb
mov
hlt
mov
add
pop
adc
dec
imul
sub
cmp
push
push
insb
jno
popa
xor
ss
pop
and
push
lret
inc
push
fwait
jle
and
jbe
pusha
mov
out
lock
mov
inc
mov
sbb
pop
sbb
dec
push
nop
or
fildll
and
dec
out
xchg
sub
mov
push
in
pop
lods
xlat
add
jnp
arpl
cmpsl
int
jo
dec
adc
mov
push
mov
mov
adc
dec
mov
test
das
clc
adc
pop
push
lds
lds
adc
popa
popf
jg
xchg
xchg
ss
andl
dec
fstps
insl
xchg
jl
js
adc
lcall
mov
mov
movsb
mov
xchg
mov
fdivrl
lret
stos
mov
or
adc
repz
dec
out
xor
imul
mov
mov
jo
mov
mov
ja
subb
adc
popf
fwait
js
arpl
adc
inc
jnp
xchg
cmp
jmp
ds
and
jg
add
mov
jge
stc
pop
jl
cwtl
cmc
pop
dec
dec
pushf
dec
cmp
icebp
and
mov
cmp
push
insb
mov
add
dec
out
cmpsb
xchg
or
mov
cli
sbb
dec
jmp
xchg
xchg
lods
pushf
ljmp
inc
call
sub
mov
inc
adc
sub
lods
test
std
lcall
lods
jg
aas
dec
ldmxcsr
jl
rolb
les
xchg
jmp
mov
imul
insb
imul
jo
call
inc
and
mov
scas
lds
lcall
hlt
add
sub
pop
lods
leave
loop
and
lahf
xor
pop
fyl2x
aaa
xor
and
ret
mov
rorl
cs
mov
je
sarl
inc
jmp
pop
subb
pop
vsqrtps
dec
or
out
xchg
dec
mov
inc
cmc
mov
cmc
cli
fiaddl
movsb
push
cmp
mov
xor
lds
and
repnz
sub
add
pop
dec
aas
pushf
add
add
mov
lcall
loope
lret
cs
sbb
lahf
add
cli
imul
and
aad
push
xor
jb
inc
cmpsl
cmp
mov
xor
imul
lahf
jns
and
jmp
enter
push
mov
icebp
nop
stos
sti
loopne
sbbb
scas
test
pop
xchg
push
enter
sub
cwtl
inc
push
lods
lahf
mov
imul
inc
imulb
inc
js
loope
pop
inc
xor
test
adc
hlt
jb
mov
dec
mov
or
or
push
jae
dec
xchg
inc
lea
mov
pop
into
push
xchg
xor
notl
adc
pop
xor
mov
mov
dec
xor
aaa
cli
addr16
fnstenv
movsb
cmp
mov
sbb
lds
pop
inc
ljmp
push
push
xor
adc
fwait
mov
outsb
lock
test
aad
mov
inc
jmp
cmpsb
shr
das
in
filds
push
jg
std
xchg
fstpl
ficoml
xlat
and
or
adc
pop
sti
shr
lret
fildll
movsl
and
lods
imul
push
or
pop
mov
xor
stc
mov
add
repz
lret
jp
out
mov
jns
mov
jns
orb
jo
outsl
xchg
jg
ret
sub
push
cwtl
fnstsw
call
mov
mov
and
inc
pushf
int
loope
clc
jo
mov
adc
rcrl
push
scas
decb
imul
testb
add
add
rol
andl
bound
push
cld
xlat
xor
into
scas
sbb
mov
xchg
sbb
pop
dec
jns
lcall
gs
push
out
xor
int3
stos
jne
test
packuswb
sbb
jne
repz
dec
mov
mov
arpl
lods
pop
ror
out
jmp
mov
lods
int3
dec
cltd
frstor
icebp
sbb
xor
xor
xor
imul
jo
xor
dec
fcomi
cmc
incl
test
dec
shl
cmpsl
dec
xor
pop
sbbl
inc
jbe
and
sar
outsb
or
idivl
leave
cltd
movsb
xchg
mov
jp
inc
js
and
out
lock
orl
cmp
enter
mov
and
mov
push
jno
push
imulb
test
daa
mov
repnz
repnz
sub
inc
push
dec
js
movsl
incb
out
cwtl
mov
ret
sbb
js
stos
jne
push
push
int
xchg
test
mov
daa
cli
in
sub
add
bound
enter
fistl
cmp
inc
notb
and
xor
jb
arpl
adc
cmc
stc
pop
cmp
jns
inc
pop
mov
notl
mov
dec
bound
xlat
sti
int3
movsl
mov
cmp
fcomps
add
out
sbb
cmpsb
push
daa
jp
and
pushf
imul
pmulhw
xor
dec
mov
push
or
arpl
xchg
xorb
jecxz,pn
jp
imul
cmp
or
adc
rcll
xchg
jne
ret
pop
outsb
aaa
ja
mov
push
out
dec
jne
outsl
pop
xor
out
outsb
push
push
aad
sbb
jae
aaa
mov
imul
popf
std
or
test
adc
push
ljmp
cmp
daa
jge
aad
xchg
int
jne
mov
mov
sub
fstpl
xchg
ja
add
mov
mov
cli
testb
cs
or
push
popa
fldenv
pop
cmp
sub
rolb
xchg
add
fldcw
jns
pop
loop
call
jl
add
rcll
cmp
push
jb
inc
not
pop
push
sub
or
insl
mov
adcb
xor
imul
or
cmpb
and
cmpsl
pop
dec
pop
inc
stc
in
pushf
ds
lcall
sarb
mov
adc
orb
icebp
fcmovb
cmp
mov
mov
cmc
adc
cmp
and
mov
ja
xor
inc
jle
dec
rclb
cmp
push
cmpsl
loop
cwtl
pop
sbb
lock
fisttpll
pop
roll
jmp
sbb
pop
decl
loope
fmulp
sahf
lods
pop
insl
sbb
mulb
push
out
ret
int3
xor
xor
arpl
sbb
dec
add
lods
stc
lods
std
sahf
jmp
xor
or
in
or
loopne
scas
cli
mov
jl
movsb
pop
ret
imul
ficomps
in
dec
inc
cltd
sbb
mov
insl
fldt
jne
stos
in
jg
cwtl
js
loop
imul
ret
jg
lods
push
mov
mov
stos
mov
fs
dec
xchg
leave
cmp
loopne
int
daa
xor
repz
inc
push
pop
xor
fs
out
sub
in
xor
lods
outsl
inc
call
cli
imul
mov
xor
cmp
push
int
jno
pop
and
enter
add
outsb
lcall
push
mov
jecxz
cmc
jle
push
dec
mov
pop
inc
mov
xchg
push
and
or
pop
sbb
stos
test
hlt
dec
push
lret
and
arpl
jne
gs
sarb
xor
popa
xchg
stos
lahf
sub
and
adc
xchg
mov
arpl
data16
loop
and
es
es
shlb
psllq
lcall
lret
mov
clc
fadds
clc
add
xchg
negb
inc
or
add
dec
push
push
inc
cli
dec
add
push
scas
inc
jg
hlt
sarl
mov
loope
xchg
lret
divl
xor
insb
mov
aam
add
pop
push
pop
lea
outsb
sti
jns
les
mov
or
dec
sarb
push
jns
add
icebp
pop
inc
jmp
inc
xor
subl
fsub
or
shll
mov
sub
mov
decb
adc
fwait
stc
jge
scas
sbb
mov
and
dec
mov
out
mov
ret
cltd
and
xor
aam
cmp
rclb
or
pushl
inc
insl
push
or
cmpsl
mov
jge,pt
sub
sub
xchg
push
test
jge
lcall
push
decl
mov
pop
mov
adc
dec
negb
rolb
aam
mov
mov
adc
inc
push
xor
ljmp
rol
jae
mov
jmp
xchg
adc
jecxz
xor
test
icebp
test
cld
xchg
data16
test
es
into
shlb
add
add
les
test
xchg
rolb
imul
inc
jns
fdivl
sub
cmp
enter
mov
rclb
ret
jg
sbb
inc
hlt
xor
jg
mov
leave
xor
pop
jb
test
js
jnp
mov
aaa
push
mov
pop
adc
inc
lock
in
popf
fldt
jmp
mov
sbb
outsl
mov
popa
sub
pusha
loope
pop
xor
out
clc
out
sub
mov
mov
test
aad
mov
lock
popa
mov
sbb
cmp
adc
loop
gs
decl
xchg
push
out
lock
xor
push
call
mov
iret
clc
jge
adc
xor
ds
sbbl
push
pop
xor
push
out
mov
xchg
movd
mov
xchg
ret
cmpsl
xchg
js
das
negl
hlt
mov
dec
stos
xchg
add
mov
cli
mov
xor
pop
and
ljmp
pusha
nop
paddq
jg
imul
adc
mov
jp
shrb
pop
popf
unpcklps
sti
ja
push
out
movsl
jmp
cmp
cmc
cmpsl
pop
or
les
mov
scas
xor
cmp
je
xor
dec
loop
pop
test
idivl
xor
cmpl
js
negl
clc
add
test
cwtl
adc
mov
push
subb
lods
and
adc
mov
es
jle
sub
push
hlt
sbb
fdivl
xchg
dec
loope
push
mov
stos
daa
mov
idivb
int
call
out
testb
in
mov
jmp
nop
sub
leave
mov
divb
mov
mov
divl
jmp
testb
call
sub
xchg
add
lret
cmp
cwtl
sbb
aaa
popf
push
dec
mov
and
jo
call
sub
filds
lea
jb
jo
out
icebp
mov
jmp
movsl
pop
in
scas
dec
mov
mov
pushl
jg
fwait
push
push
cmc
insl
bound
decw
dec
dec
push
sub
sub
out
pop
xor
cmp
push
sub
mov
xchg
xchg
roll
imul
aam
cs
and
xchg
int
and
cmp
add
sbb
or
pushf
jmp
mov
iret
or
adc
adc
in
adcb
adcl
xor
repz
aad
aad
repz
shr
mov
inc
cmp
scas
loopne
movsb
lcall
mov
fsts
bound
xchg
lahf
movsb
in
aam
bound
jle
stc
cmp
inc
ljmp
pop
aaa
xchg
sahf
cmp
sarl
movl
mov
push
pop
push
loopne
out
mov
sbb
outsl
pushf
sub
push
imul
dec
add
loop
mov
cmp
fldcw
fisttps
xor
popf
repnz
ret
add
jo
leave
rolb
shlb
mov
stc
add
mov
ss
adc
leave
sub
inc
les
daa
test
mov
bnd
lcall
shll
xor
hlt
jecxz
add
xchg
mov
pop
cmp
sbb
lret
mov
stos
sarl
nop
push
jmp
repz
popf
icebp
dec
push
sub
dec
cs
cli
out
out
mov
sbb
in
sbb
xchg
cmp
mov
hlt
sub
lods
fdivrs
push
inc
mov
push
pop
stos
mov
or
mov
mov
xor
dec
and
mov
inc
push
les
sub
adc
cmp
ljmp
mov
mov
inc
cmpsb
xor
loope
decb
enter
fldt
push
jmp
push
nop
leave
insl
pop
fsubs
xchg
mov
pop
push
pop
int3
mov
cmp
adc
out
mov
fwait
cltd
fistpll
sbb
mov
mov
notl
xor
scas
fstps
stc
or
and
mov
and
or
dec
sub
lcall
pop
jg
mov
pop
cwtl
mov
push
adc
xor
jl
fwait
adc
subb
ljmp
in
mov
dec
cs
push
sub
xchg
setle
adc
arpl
outsb
sbb
sbb
and
loop
jbe
sbb
jg
mov
lret
scas
scas
arpl
aaa
call
add
out
fbstp
mov
add
mov
jmp
out
lret
adc
jp
sbb
jns
inc
cmc
mov
mov
or
mov
adc
das
shrb
sbb
idivb
adc
sub
test
in
imul
mov
jns
jo
cmp
out
jmp
shll
aam
inc
rcll
mov
sub
addr16
pop
in
mov
les
and
dec
repnz
adc
clc
mov
sub
adc
movsb
clc
dec
outsl
jae
cs
hlt
test
das
push
fcompl
ret
sub
je,pt
pusha
outsb
dec
nop
push
cmp
fstpl
adcl
cmpsl
xor
jp
out
daa
or
inc
add
lock
lock
jne
test
mov
mov
push
fmuls
iret
cmp
in
sub
jp
data16
daa
mov
addr16
movsl
mov
enter
push
pop
jae
push
lahf
into
inc
mov
jb
xor
clc
pushf
loope
repz
pause
vmwrite
mov
mov
xor
clc
jno
cmp
je
imul
popa
scas
cmp
dec
mov
lahf
neg
int
adc
stos
lcall
into
push
jp
out
mov
push
jnp
xor
ljmp
push
test
imul
pusha
enter
lds
data16
inc
xchg
sbb
cld
dec
dec
or
fnsave
mov
push
movsb
and
mov
scas
and
adc
stos
or
stos
pop
ss
sbb
mov
rcll
int
push
inc
xchg
in
sbb
js
out
icebp
dec
push
or
sbb
mov
pusha
push
jp
lcall
idiv
mov
inc
push
fcomps
push
mov
test
outsl
push
pushf
add
pop
sub
movsb
pop
add
ljmp
iret
lret
xor
aas
lods
enter
jae
dec
stc
dec
out
in
rcrl
mov
insb
sub
insl
jae
bound
inc
je
xchg
les
call
pop
in
ret
adc
enter
mov
xchg
cmp
rcll
cmp
cli
adc
xchg
test
pop
jae
fucom
push
xchg
leave
mov
call
push
adc
imul
mov
test
stos
sbb
enter
xor
and
repz
or
aaa
pushf
bound
cmp
ss
push
shl
mull
jne
and
rolb
xor
mov
cs
add
pop
and
lahf
inc
inc
sbb
pop
movsl
popf
xlat
outsl
pop
std
bnd
dec
ja
rcll
outsl
mov
data16
pop
clc
add
jnp
stos
adc
cmp
xchg
add
jmp
into
aas
cmp
pop
jmp
das
xlat
xchg
or
adc
cmp
mov
cs
sahf
push
out
out
repz
cmc
rcr
aas
ficomps
add
pop
xchg
xchg
loopne
test
cli
ss
inc
hlt
xbegin
xchg
sub
aaa
xor
ja
push
or
xchg
mov
jnp
repnz
popa
and
xchg
and
jae
pop
push
cmpsb
jp
loopne
dec
test
inc
leave
shlb
mov
addr16
sbb
and
addr16
ret
shrl
dec
adc
imul
add
mov
add
subb
in
mov
pop
mov
addr16
leave
js
divl
movsl
mov
mov
imul
cld
push
shl
jmp
icebp
lcall
inc
out
call
fsubp
jle
shlb
ret
call
stos
inc
repz
fcmove
ljmp
stos
sbb
mov
mov
repz
sub
push
insb
mov
fmull
or
mov
push
and
jnp
insb
pop
mov
jecxz
scas
jle
mov
jg
dec
mov
xchg
and
mov
or
mov
xchg
mov
pop
fwait
xor
push
cmp
cmp
in
popf
imul
leave
loop
dec
xor
call
rolb
jg
or
lahf
mov
pop
jo
dec
bound
xorl
verr
call
mov
sub
mov
imul
subb
outsb
add
lods
dec
std
and
sahf
insl
add
shl
ja
addb
adc
mov
or
adc
and
mov
cli
xchg
xor
sbb
mulb
push
add
push
dec
sti
pop
add
mov
dec
hlt
fidivrl
or
xchg
adc
xor
hlt
mov
lock
movsb
into
push
push
cmp
notb
pop
insl
mov
sbb
in
popf
ret
std
sub
push
stos
mov
repz
je
push
dec
mov
pop
aam
mov
outsl
pop
test
cmp
pop
lret
movsb
enter
sub
lock
into
mov
fcomip
test
jp
sbb
stc
cmp
jle
into
popa
xchg
and
and
aad
inc
movsl
lods
imul
pop
xchg
inc
cmp
scas
test
nop
pop
push
pop
sbb
adc
push
popa
orb
mov
cmc
int
mov
push
repz
lret
fdivs
das
xchg
xchg
inc
cmp
jl
xchg
popa
shrb
popf
push
fsts
cltd
dec
jge
mov
js
stos
xor
lds
fidivl
call
dec
mov
ficoml
push
nop
adc
inc
cmpsl
dec
shr
icebp
adc
jno
into
mov
lods
inc
arpl
shrl
add
push
mov
insb
cltd
mov
mov
stos
push
ljmp
das
nop
xchg
js
sub
push
xchg
popf
jno
subl
xor
add
sbb
and
add
add
popf
rorl
test
xchg
xchg
iret
cwtl
push
adc
adc
pop
sbb
push
sub
and
cmp
orl
cld
leave
lds
adc
in
and
stos
sahf
fmull
cmp
add
les
stos
ja
ja
sub
fwait
and
xor
or
call
test
and
lods
pop
jnp
or
test
cmc
inc
pop
jl
mov
in
mov
mov
sbb
out
pop
and
mov
or
fs
xchg
lahf
xor
shll
mov
cmp
dec
shrl
cmp
icebp
lods
push
or
outsl
sub
dec
jb
pop
sub
nop
cmpb
lahf
test
mov
frstor
pusha
scas
dec
pop
cmpsl
inc
es
lods
popf
jne
mov
jp
aam
jg
clc
ret
mov
mov
or
cmc
je
jb
insl
mov
jnp
jbe
adc
push
push
xchg
outsl
mov
fldl
mul
xchg
fisubrl
jmp
mov
jbe
mov
test
dec
mov
stos
fwait
outsb
or
push
push
pop
adc
push
daa
mov
call
mov
xor
adc
call
call
icebp
cli
test
push
pop
and
xor
mov
xchg
xor
pop
lret
jge
lds
jmp
mov
jg
test
push
mov
movsb
test
in
movsl
dec
inc
dec
xor
cmp
sub
push
sub
cs
aad
pop
mov
sbb
sub
xor
ss
xor
leave
push
mov
push
mov
and
mov
sahf
inc
clc
push
outsl
jp
cwtd
inc
int3
sbb
fs
sub
push
xor
stos
push
jb
insl
paddsb
inc
lahf
cmp
mov
push
add
insl
push
out
and
adc
ret
inc
loop
xor
mov
in
hlt
xor
mov
and
cli
mov
adc
rcl
sbb
loope
adc
das
into
outsl
xchg
push
dec
jbe
fdiv
xor
xchg
rclb
pop
cwtl
fstps
push
jae
sti
les
mov
or
mov
sbb
mov
popa
and
sub
xlat
sbb
fdivr
lea
cwtl
mov
add
ret
scas
add
mov
fst
xlat
out
push
rorl
inc
pop
addl
sarl
or
mov
sub
cli
push
xlat
jge
cltd
xorb
outsl
das
xor
jecxz
jnp
shl
push
and
jo
fcompl
negb
lea
sar
cmp
push
into
jae
jle
mov
or
xchg
inc
addb
xchg
sti
push
mov
adc
add
repnz
xchg
aad
into
dec
sub
imul
popa
xchg
mov
jp
aaa
cld
jo
cli
xor
mov
fsubr
lock
es
add
out
mov
out
add
inc
in
mov
cmp
adc
inc
push
add
std
testl
mov
ret
aad
jg
sbb
pop
arpl
sub
push
cli
lods
fs
sbb
pop
fwait
scas
lahf
gs
test
lahf
mov
test
call
push
clc
xor
shll
push
sti
cmp
std
cmp
pop
out
fwait
cld
xor
adc
sti
popa
leave
xchg
xchg
fcmovu
scas
xor
sbb
xchg
pushl
rorl
dec
inc
popa
lret
and
inc
shlb
lret
in
enter
or
pop
adcl
xchg
adc
jp
pop
xchg
cltd
cmp
xor
xchg
push
sub
enter
test
push
jl
add
into
sbb
dec
dec
pop
loop
jl
cmp
out
or
enter
mov
cld
dec
popa
inc
sub
inc
ss
mov
ss
adc
ret
cmp
cld
add
stos
jns
add
in
pmovmskb
fcmovnbe
dec
into
dec
add
jnp
mov
mov
out
mov
int
sub
sbb
fdivrl
mov
outsb
jno
testb
jg
adc
aas
mov
or
stos
in
push
ds
orl
jns
movsb
aam
je
mov
add
push
lret
dec
lcall
inc
xor
mov
std
jne
sub
mov
dec
jl
xchg
pop
push
cwtl
or
dec
add
mov
int3
adc
pop
insb
lock
push
test
pop
icebp
jns
jge
adc
dec
push
bound
aaa
test
xor
lock
popa
adc
fdivl
mov
push
xor
jns
mov
pop
jg
cs
mov
jecxz
inc
push
jg
stos
popl
and
insl
inc
jle
idiv
xchg
sbb
js
loope
sbb
push
cmp
lock
pop
gs
daa
push
scas
cmp
int3
into
inc
adc
and
push
push
fwait
pusha
jmp
xchg
pop
ret
int
shrl
jae
adc
fdivs
adc
and
mov
nop
xorl
inc
test
loope
ja
insb
jno
mov
test
in
call
dec
stos
outsb
fmulp
dec
pop
adc
aas
push
adc
or
push
cmc
test
adc
jo
xchg
cmpsb
iret
push
or
and
int
je
add
shrl
mov
pop
cmp
xchg
mov
mov
pop
shrb
inc
dec
sub
add
les
in
ss
jb
aam
jp
push
pushf
pop
xchg
dec
mov
jle
lret
sbb
xor
mov
jmp
mov
nop
popa
sbb
loop
xor
pop
dec
xchg
push
jl
mov
lods
sti
fcmovne
je
sub
push
std
pusha
imul
jp
int3
fimull
rorb
jg
mov
jecxz
in
mov
pusha
xorl
cmp
adc
pop
daa
test
inc
sar
sub
add
inc
sbb
imul
push
idivl
adc
cli
sbb
pop
xchg
lea
lret
out
dec
adc
pusha
mov
adc
incl
test
lds
jle
xchg
mov
jae
or
xlat
leave
sbb
cld
insb
mov
mov
rcr
pop
enter
jge
sbb
pop
lods
mov
scas
movsl
cwtl
push
sub
jns
gs
pusha
pop
adc
sbb
mov
adc
loop
outsl
aaa
mov
stc
repz
inc
js
and
sbb
add
fs
sbb
jo
push
and
mov
sbb
add
scas
jmp
negb
mov
and
push
out
movsl
add
in
mov
ret
mov
adc
fstps
test
popf
leave
fimull
jns
xchg
into
and
push
fstps
rcrb
stos
sub
sub
xchg
jmp
cmpsl
idiv
cs
mulb
aas
fucompp
xchg
js
mov
sbb
jne
sbb
mov
dec
enter
dec
push
adc
imul
pop
dec
shlb
andl
add
cmp
fistpll
mov
or
in
andb
xor
out
xor
cli
adc
mov
pand
bound
fcomps
out
ds
sti
aaa
push
aaa
filds
cs
push
into
jecxz
jp
movsl
addb
sub
xchg
pop
movlps
push
mov
das
xor
sti
clc
or
imul
xlat
xchg
cmp
sbb
loope
in
inc
std
sbb
movsl
sub
or
xchg
mov
mulb
sub
lds
scas
repz
mov
cmc
loope
cmp
mov
shlb
jae
mov
cwtl
lahf
jns
loop
subl
pop
ss
fdivr
mov
xchg
lahf
or
int
jne
and
repnz
sbb
add
pop
cwtl
or
in
pushf
mov
or
push
sbb
in
int
add
out
add
push
inc
pop
stc
and
shll
into
rolb
popa
sub
add
fistps
adc
fcmovnb
dec
xor
sbb
out
cmp
lcall
mov
loope
fisubl
aaa
mul
xor
fnstsw
bound
push
jne
xor
xchg
sub
shl
rorl
sub
stc
xchg
xchg
mov
jbe
sub
leave
mov
leave
mov
pop
fsubrp
imul
add
mov
pop
sub
cld
scas
lcall
sbb
pop
inc
std
dec
test
movsb
hlt
jns
movsl
dec
sti
jns
ret
ljmp
cmp
daa
mov
lock
cmc
cs
test
imul
sar
dec
and
pushf
gs
jae
mov
xor
cmp
retw
inc
scas
or
jp
adc
mov
std
xlat
clc
pushf
in
cmc
out
sub
inc
cmp
jl,pn
sti
lods
adc
sahf
xor
xchg
push
jp
int
add
in
sbb
and
pop
jge
cmc
ret
dec
sti
pop
and
daa
xchg
mov
mov
push
test
test
scas
mov
push
jmp
mov
push
out
pop
icebp
gs
cmp
xor
decl
mov
cmpsb
jo
mov
add
sahf
xor
add
dec
pop
frstor
pop
inc
dec
dec
mov
js
pop
out
mulb
cmp
adc
dec
popf
mov
xchg
mull
fstpt
pop
ss
jmp
mov
mov
jbe
insl
in
sub
mov
xchg
dec
into
mov
cld
loopne
mov
xchg
mov
dec
xorl
cmp
test
push
into
push
lds
xor
in
divl
jae
jle
ss
movsl
gs
sub
cmp
pusha
or
rorb
mov
cmp
aam
xchg
clc
xor
xchg
into
sub
stos
or
inc
gs
mov
and
rorb
das
inc
and
aaa
cli
sahf
movsb
pop
les
test
and
xor
sbb
sub
jle
loope
dec
xchg
icebp
inc
scas
aam
sbbl
sub
push
sbb
insb
cmpsl
gs
pop
arpl
and
mov
mov
pop
or
leave
push
test
fbstp
insb
push
xchg
mov
lret
pop
lret
frstor
arpl
jle
int
xor
daa
fwait
mov
mov
mov
out
lret
imul
xor
add
mov
dec
out
jmp
xchg
imul
mov
adc
fisubrl
inc
scas
hlt
hlt
mov
sbb
push
ljmp
addl
xor
mov
in
imul
iret
lods
icebp
or
in
iret
sub
out
xchg
mov
xchg
sub
fs
fistpl
cmpsl
jb
inc
mov
xor
adcl
test
push
xchg
shll
mov
leave
call
xchg
fimuls
push
orb
imul
ja
jb
rol
push
cwtl
out
push
cmp
cmp
adc
mov
imul
lds
in
mov
mov
loope
xchg
jbe
in
lods
and
dec
aad
sub
cs
dec
jmp
add
pushf
movsb
jl
jns
dec
cld
int
lea
popa
jb
les
repnz
mov
dec
jno
xlat
cli
mov
hlt
mov
fistpl
cwtl
inc
mov
mov
pop
insl
xchg
mov
pushf
inc
xchg
lcall
pop
sbb
fldcw
dec
jl
mov
int
mov
dec
adcb
pop
inc
add
popf
xor
xchg
inc
sbb
add
ja
out
ja
in
pop
loopne,pn
sbb
mov
or
in
cld
sti
imul
sub
loope
inc
stos
mov
int3
xor
xor
outsl
mov
pcmpgtb
call
add
add
arpl
push
xor
xor
mov
push
dec
outsl
mov
enter
in
testl
pop
cmpsb
sti
add
add
dec
xor
aam
mov
shrb
out
mov
fisubrs
sbb
or
push
lret
les
mov
adc
add
mov
mov
and
pop
enter
andl
call
andl
lods
jp
or
scas
test
repnz
inc
and
ljmp
out
fs
xchg
sarb
or
push
pop
adc
add
dec
ss
not
dec
stos
lods
inc
and
subb
jns
stc
mov
repz
scas
push
cs
mov
and
mov
add
push
mov
mov
xor
je
pop
inc
test
cltd
sub
push
dec
cmc
insl
cwtl
inc
pusha
stc
add
pusha
pop
and
push
loopne
sbb
mov
push
and
es
ds
jmp
jl
mov
fsubl
ss
arpl
and
in
add
lret
mov
jg
and
push
shll
imul
cld
fisttpl
idivb
mov
push
bound
scas
mov
out
sub
ljmp
pusha
push
adc
hlt
mov
test
xorb
jl
xchg
loope
add
inc
jle
push
pop
lahf
lret
push
insb
ss
jo
addr16
cs
lea
push
in
and
mov
sti
ret
mov
nop
sbb
shll
mov
pop
dec
pop
add
and
loopne
jb
dec
hlt
xchg
inc
inc
mov
sahf
outsl
ja
inc
test
sahf
adc
adcl
adcl
repnz
adc
out
shl
ffreep
fcoms
push
push
xchg
push
xor
pop
outsl
lret
mov
lcall
rorb
sbb
or
repnz
ljmp
mov
inc
sar
test
mul
jo
adc
pop
mov
fldenv
test
mov
scas
addr16
mov
ljmp
jmp
jg
in
or
mov
insb
roll
test
xor
adcb
jo
push
jae
pop
scas
adc
movsl
iret
adc
and
mov
test
icebp
lahf
test
mov
mov
pop
into
out
hlt
or
les
enter
ja
negl
or
pop
add
sub
dec
sbb
sub
jae
fldt
test
jecxz
or
jb
pop
cli
mov
mov
aam
xchg
and
push
pop
aas
adc
mov
cmpsl
adcl
inc
icebp
xchg
outsl
mov
push
mov
mov
paddd
sub
hlt
test
popf
mulb
cmp
ret
ds
repz
cmp
inc
inc
ljmp
inc
adc
cli
aas
adcl
test
jp
or
idivb
jo
rcll
inc
or
mov
rcrl
ret
dec
outsb
test
cmc
sbb
fbld
subl
jb
ss
cmp
push
mov
inc
popa
daa
out
mov
push
loope
mov
inc
fsubs
dec
lahf
cltd
jno
xor
les
loop
icebp
sahf
add
sub
and
jl
pop
mov
das
add
cld
jg
leave
mov
insb
movsl
popf
loope
rolb
push
cltd
and
ret
jns
lods
mov
xchg
adc
jnp
daa
add
sub
shrl
adc
sbb
lahf
inc
mov
xlat
mov
pop
std
push
xchg
icebp
xchg
das
mov
mov
cmp
int
xchg
xchg
inc
cli
jle
inc
push
add
xchg
dec
add
pushf
outsl
jnp
dec
and
mov
sarl
pop
jae
adc
out
pop
stos
test
pop
and
test
inc
lret
cmp
sahf
out
in
fdivs
loopne
dec
mov
or
mov
mov
push
dec
push
call
push
add
jg
and
popf
clc
inc
cmp
loopne
sbb
mov
aad
mov
inc
mov
les
enter
out
or
cmpb
dec
jb
icebp
jno
add
cmp
or
iret
xlat
js
push
push
mov
not
dec
pop
out
dec
push
xor
xchg
mov
adc
xchg
repz
inc
sub
rcl
dec
add
inc
ret
mov
cmp
sub
mov
pop
dec
push
ficoms
int
fisttps
dec
cmp
sbb
imul
cltd
xor
stos
popf
mov
or
jmp
mov
xchg
or
das
out
cli
roll
lahf
lods
inc
add
inc
mov
mov
add
sti
jge
push
jb
into
fmul
sub
in
xchg
ljmp
enter
cmp
jns
mov
faddl
outsl
mov
mov
insl
xchg
mov
sti
jg
mov
je
push
in
fidivs
jb
popf
fcmove
fcoms
push
out
xchg
jae
aas
push
ret
fsubr
call
inc
aaa
mov
les
int
sbb
fs
negl
lock
push
jno
or
cld
and
mov
jbe
hlt
imul
add
inc
xchg
sub
mov
ds
pop
xchg
pop
mov
mov
jne
insl
ds
inc
mov
mov
mov
sbb
jno
jb
push
std
inc
mov
or
dec
add
stc
sbbl
scas
gs
cmc
mov
inc
jp
dec
dec
xchg
std
cmp
inc
stc
shrb
adc
mov
cmp
pop
push
sbb
out
sahf
xchg
stos
repnz
es
xlat
leave
fbld
jb
xchg
repnz
int
push
movsb
pop
mov
jb
push
imul
or
push
sbb
add
xor
fs
mov
cmc
fdivl
ret
jbe
in
lret
cmp
inc
iret
imul
sub
xchg
cltd
lret
mov
mov
int
sbb
jbe
cwtl
or
jp
cmp
pushf
mov
mov
sti
sub
notb
jns
sub
in
sbb
mov
mov
add
insl
push
int
mov
in
mov
lds
in
mov
cmp
sahf
lods
sub
mov
jp
loope
push
ss
stos
jle
adc
mov
gs
push
lods
cltd
jnp
pushl
pop
inc
inc
sbb
jno
cld
jmp
data16
gs
rol
scas
xchg
push
dec
pop
or
pop
loop
sbb
rorb
ss
jno
pusha
aad
insl
mov
outsb
shrl
stos
jbe
das
push
rol
lds
hlt
mov
stc
and
jnp
push
out
dec
push
cmp
mov
js
shll
repz
inc
cmp
popa
loope
xchg
push
pop
push
sbb
xor
cwtl
nop
mov
insb
mov
into
mov
cmpsl
sbb
inc
pop
xor
aam
ljmp
cmpb
andl
pop
mov
enter
push
and
rorl
out
cmp
sbb
sahf
mov
ret
mov
add
xor
mov
add
jae
daa
and
or
cmp
sub
xor
insl
sub
xor
outsl
mov
and
mov
jne
mov
fwait
adc
icebp
lods
and
mov
mov
jno
adc
mov
cmp
push
stos
test
and
mov
cmp
int
jno
fcmovnb
inc
adc
sub
mov
inc
jmp
cwtl
inc
sbb
aaa
ljmp
movb
push
mulb
iret
std
daa
sbb
push
popf
scas
jne
push
mov
push
inc
and
bound
iret
mov
adc
push
in
lcall
cmp
fimull
lods
pop
icebp
mov
sbb
test
adc
pusha
jnp
sub
in
in
adc
inc
mov
scas
aaa
pop
add
stc
mov
cltd
sbb
outsl
cli
or
mov
test
sbb
jmp
xor
inc
stos
mov
ds
loop
mov
or
push
lahf
cs
fnsave
cmp
shll
mov
lock
xchg
imul
bnd
in
dec
or
sti
add
addr16
jnp
xor
jns
cld
add
sysexit
bound
sub
addr16
cmp
arpl
out
push
aad
inc
les
mov
out
adc
out
lret
dec
cmp
inc
jo
ja
mov
sbb
mov
sub
adc
jnp
xchg
push
dec
test
pop
popa
mov
pop
inc
out
dec
dec
imul
adc
mov
sbb
push
les
outsb
test
sbb
cwtl
js
repnz
jbe
push
sbb
mov
outsl
bound
xlat
inc
call
or
testl
in
mov
clc
jge
jg
clc
push
shll
ret
dec
frstor
les
lock
lret
js
adc
sbb
cli
jne
cld
data16
mov
cmp
fwait
inc
xlat
mov
push
dec
sub
pop
push
mov
sbb
packuswb
adc
cld
shl
mov
mov
repnz
orb
es
data16
jb
mov
icebp
xor
cmp
loop
dec
or
test
inc
imul
mov
fs
sbb
pop
adc
ds
xlat
dec
imul
xor
jmp
cmp
jg
mov
adc
test
cmp
dec
inc
mov
mov
xchg
dec
inc
fbstp
xchg
sub
lcall
icebp
xchg
add
pop
aad
push
test
hlt
xchg
push
xor
cmp
inc
push
xor
or
in
iret
inc
lods
pop
scas
adc
popf
mov
int3
sarl
ds
repz
movntps
sbb
sar
and
loop
cltd
imul
cmpsb
pop
xor
dec
insl
enter
pop
rcl
dec
jle
pop
into
arpl
ficompl
fldcw
insl
cmp
mov
loop
sub
inc
xor
inc
xchg
test
mov
dec
out
cmpsl
or
push
cmp
test
push
daa
lods
or
xorl
pop
mov
outsb
lods
lret
cwtl
sub
setnp
xor
pop
jl
mov
mov
scas
mov
push
sub
fcomip
inc
in
jno
gs
test
in
cmp
popl
jmp
cmc
rcr
jae
popa
adc
adc
stos
inc
iret
and
push
or
iret
aad
iret
sbb
mov
insl
loopne
jno
jo
loop
cs
dec
sbb
daa
pushf
in
cmp
insl
xor
cmpsl
and
scas
enter
divl
jo
cli
test
push
xchg
xchg
push
in
mov
or
push
ret
ficompl
je
cld
fldt
pop
jl
cmpxchg
mov
push
add
mov
xchg
imul
cmpsl
roll
push
in
insl
in
push
sbb
pop
fadds
xchg
in
jnp
shll
dec
and
mov
movsb
sub
cld
jmp
add
cltd
cmpl
fxch
sub
mov
incl
shrl
rorl
pop
dec
cmp
push
mov
scas
adc
jl
jne
hlt
cmp
or
mov
popw
lretw
fnstcw
rclb
cltd
cmpsw
mov
les
push
pop
rcr
inc
fmull
push
push
gs
aad
push
jle
imul
ret
pop
aam
add
mov
push
mov
stc
fcmovu
cmpb
in
inc
sub
aam
testb
push
cmp
xchg
sub
popf
mov
sub
mov
stos
adc
inc
jp
outsl
ds
dec
fs
in
stc
adc
and
cmp
lcall
mov
sahf
clc
roll
movsl
fwait
inc
cmpsl
imul
jae
icebp
cmovns
mov
ret
outsb
outsb
out
mov
push
test
repz
xchg
aaa
out
adc
in
test
fcoml
xchg
jo
mov
mov
mov
outsl
xchg
xchg
in
lods
adc
jns
or
in
pushf
pop
ljmp
jnp
sub
std
hlt
sbb
fwait
push
cmp
mov
dec
div
pop
or
xor
outsb
mov
jmp
and
daa
packuswb
xor
xor
sub
dec
add
mov
xor
ja
jns
out
mov
xor
lea
cld
jle
cmp
dec
or
xor
xor
mov
mov
dec
lods
mov
push
cwtl
add
outsl
bound
lret
icebp
nop
fcmovne
movsl
push
int3
inc
fisubl
shll
iret
fcompl
mov
fcomip
into
fildl
mov
cli
jne
in
rclb
lret
dec
mov
mov
imul
loop
and
in
aad
loope
jb
mov
adc
and
rorb
sub
sti
mov
out
lret
sbb
xchg
pop
imul
cmp
movsb
mov
jl
xor
mov
jno
jns
clc
fs
fcmovnbe
pop
into
pop
mov
out
push
add
inc
add
lea
sub
stos
leave
push
pop
loopne
jl
xlat
and
push
imul
mov
stos
cmp
adc
inc
jp
push
das
adc
test
sub
mov
inc
lock
push
or
or
pop
mov
faddp
push
mov
sbbb
into
xchg
jmp
ret
cltd
jge
fcomps
push
movsl
and
and
adc
fsubrl
js
mov
pop
addb
stc
test
ljmp
dec
pop
aam
jmp
jb
adc
lret
pusha
pop
sbb
shll
aaa
iret
js
xor
dec
dec
cld
repz
in
out
pop
jne
pop
insb
std
push
clc
rcr
lea
or
xchg
mov
push
lret
out
dec
sti
push
mov
xor
xor
cld
dec
aad
pop
imul
loop
flds
popa
cli
cmpsb
mov
xchg
outsl
push
mov
sub
add
loopne
out
gs
int
lock
mov
mov
lods
out
daa
adc
ficomps
in
iret
ret
add
cltd
pop
mov
mov
dec
aad
subl
push
rcll
add
lret
cmp
add
pusha
test
movsl
dec
sub
je
mul
cwtl
clc
mov
hlt
mov
jmp
xchg
ds
pop
adc
push
es
popa
sar
test
add
mov
mov
adc
aaa
shl
stos
sbb
jbe
pop
icebp
dec
adc
scas
jae
idivb
push
sbb
je
scas
mov
push
adc
fs
add
ds
sbb
pop
fs
jle
movl
xchg
test
adc
mov
inc
push
std
dec
lcall
xchg
mov
pusha
and
stos
sbb
les
cmpsb
jl
lods
xchg
sbb
jnp
xor
data16
aas
pop
add
mov
out
outsb
mov
cmp
fidivrl
adc
add
push
aaa
push
sub
xchg
pop
in
sbb
xor
ret
jge
and
mov
cmp
xchg
mov
lds
cli
inc
leave
sbb
mov
adc
dec
mov
fldl
jne
push
fmull
fistpll
es
jmp
addr16
jo
rorb
fwait
inc
cld
or
adcl
cmp
xor
stc
mov
or
add
in
ret
insb
fcoms
push
loope
push
gs
jl
sub
test
fistpll
cmp
mov
pcmpgtw
test
mov
jno
loope
lret
or
cmp
ds
jne
or
cli
fld1
add
mov
ja
out
push
sbb
pop
in
stos
pop
xor
ss
mov
add
pop
sarb
adc
push
cwtl
ss
mov
adc
fwait
ret
mov
lods
gs
fnstcw
das
aam
xchg
inc
xor
pop
jbe
jl
sub
push
lods
popa
pop
in
mov
cmp
dec
into
lods
stos
std
lods
scas
add
jg
bound
add
sub
loopne
dec
andl
fwait
mov
nop
loop
sub
jns
cmp
add
adc
push
or
ficomps
push
call
jge
sbb
mov
mov
mov
adc
ss
push
jbe
ds
test
mov
leave
out
sub
mov
pushf
div
loopne
int
dec
push
popw
mov
mov
mov
mov
mov
xchg
xchg
ret
or
enter
call
jge
push
aad
js
sub
mov
cmp
dec
inc
loope
rclb
jmp
or
push
test
sub
mov
or
dec
scas
sarb
sbbb
adc
and
mov
js
std
mov
xchg
ljmp
leave
mov
iret
xchg
adc
outsl
lea
fists
call
jns
fs
scas
cmpsb
cs
dec
cmpsb
sbb
stc
mov
or
pusha
xchg
mov
int3
jae
int
xlat
xchg
int
aam
dec
ret
movsl
dec
pusha
jp
ss
push
dec
xchg
jne
pop
aaa
mov
push
lahf
sub
inc
cmp
insl
adc
xorl
std
aad
iret
xor
icebp
aad
in
adc
xchg
xchg
popa
outsl
arpl
lahf
fmuls
in
out
push
mov
popf
in
pop
ds
adc
into
mov
push
dec
sbb
out
leave
adc
sbb
mov
inc
dec
clc
dec
pop
xchg
sub
js
daa
insb
push
add
inc
lods
xchg
das
inc
and
cs
shr
loop
pop
or
testb
es
stos
adc
mov
mov
ret
push
dec
mov
test
imul
cmp
leave
xor
inc
jp
jp
dec
lret
int3
xchg
out
push
inc
enter
inc
xchg
and
mov
jo
lock
arpl
sbb
inc
xchg
or
and
sub
dec
xchg
cmpsb
mov
mov
fsts
add
outsb
adc
cmpsb
popa
cmpsl
mov
insb
jmp
sarl
push
dec
in
loop
mov
insb
xor
push
xchg
in
cs
rcll
xchg
and
ret
bswap
mov
mov
xlat
xor
jg
xor
jae
test
inc
andb
mov
sahf
push
cmpl
ror
push
dec
cmp
pop
mov
je
lahf
mov
rolb
sti
xchg
sahf
inc
stc
dec
movsl
adc
mov
lock
adc
push
hlt
stc
jns
add
xor
dec
sahf
cli
add
in
push
dec
outsb
jle
js
or
imul
jp
lock
testl
and
fcoms
xchg
aad
and
sar
iret
jp
push
fwait
test
loope
dec
mov
bound
out
add
aaa
gs
hlt
test
sbb
xor
and
xchg
cmpsl
mov
and
hlt
jo
xchg
push
movsl
pop
repz
mov
dec
cs
out
sub
xor
pop
stos
sub
cmp
ss
mov
fsubs
test
jg
pop
clc
movaps
loopne
in
lahf
push
je
lahf
xchg
pop
out
add
sbb
adc
andl
mov
loopne
push
hlt
cld
dec
and
mov
nop
cld
arpl
xchg
test
out
mov
test
cmp
dec
fistps
int
in
and
or
and
lods
adc
bnd
shlb
xor
sbb
jl
sub
scas
sahf
popf
mov
sub
pop
jp
mov
lcall
test
adc
movl
mov
or
loopne
add
add
iret
rclb
and
jle
xchg
movsb
test
repz
lret
mov
leave
shl
sub
aas
movsl
mov
dec
push
inc
mov
iret
dec
sbb
pop
cwtl
inc
daa
decb
flds
call
push
fbld
inc
fcmove
or
loop
mov
ret
bound
and
inc
xchg
push
imull
ds
cmp
loope
cmp
lds
xchg
xlat
push
ss
jg
adc
push
sarb
cmp
pop
mov
out
sti
pop
cmp
ds
mov
ret
das
lahf
adc
repnz
js
lods
mov
lcall
fs
push
push
sbb
jne
and
sbb
or
pop
sbb
je
push
jmp
stos
pop
mov
add
sub
jnp
pop
cmpsb
jo
mov
xchg
cmp
sub
loop
in
lret
dec
outsb
mov
loopne
mov
pop
enter
xor
repz
lods
test
imul
dec
push
xorl
push
or
dec
sti
xor
sub
pop
scas
insl
aaa
mov
popa
jle
pop
fimull
dec
jae
mov
hlt
push
mov
sub
sub
lcall
and
arpl
push
add
push
insl
jle
bound
cwtl
icebp
cmpsb
shlb
pop
push
adc
push
shrl
sbb
add
fcmovnu
pop
lret
nop
movsb
fists
lret
mov
xor
jl
cmpsb
or
out
ffree
movsb
cmc
sti
xchg
sbb
out
test
std
outsb
jmp
cmp
cli
leave
ja
sbb
dec
xchg
std
adc
and
out
ficoml
insl
mov
sub
fidivl
xor
mov
pop
inc
jns
pushf
and
leave
test
aam
pop
add
lret
push
xchg
and
jb
out
add
adc
and
mov
cmp
push
add
dec
mov
sar
mov
jns
call
lods
mov
cmpsb
arpl
sahf
lods
ljmp
mov
xchg
das
cmpsl
push
or
mov
faddl
enter
into
sub
popa
movsb
ficoml
in
inc
ret
ljmp
outsb
sub
push
bound
rcl
mov
lds
rcrb
test
outsb
addl
daa
or
cld
cmp
push
cmc
or
js
add
pop
adc
je
jae
jg
jo
sbb
pop
mov
pusha
fs
das
mov
cwtl
adc
fdivs
xchg
mov
sarb
sbb
pop
inc
movsl
pop
loop
push
jne
mov
rolb
dec
inc
ja
push
mov
push
add
adc
aad
mov
call
sbb
dec
xchg
stos
pop
test
enter
push
adc
mov
cmp
jle
clc
inc
mov
or
shll
pop
int3
cltd
xor
movsl
std
mov
push
imul
mov
mov
pop
shr
inc
outsb
cmp
jae
scas
add
xor
push
mov
sahf
insl
test
mov
loopne
rcll
js
adc
mov
cmp
cld
test
clc
shrl
push
mov
or
pop
nop
xchg
pop
sub
es
movsb
jnp
fsubrl
ja
adc
lret
ss
pop
es
nop
aam
push
xchg
jmp
fwait
and
out
and
aaa
call
xchg
std
mov
sahf
lock
pop
mov
jp
jp
jp
sub
cmc
pusha
mov
jecxz
cmpsl
movl
dec
fidivl
xchg
push
sub
jo
xor
adc
push
loope
push
mov
xchg
add
adc
movsb
mov
xchg
sub
mov
xor
aas
daa
cmp
test
inc
jo
repz
aas
mov
push
jnp
or
and
out
sbb
xor
pop
xchg
add
adc
sahf
mov
fcoml
stos
pop
fadd
fwait
jno
fisttps
xor
dec
fdivrs
repnz
cmpsb
pop
or
cli
iret
pop
imul
loop
sbb
xor
sbb
lds
in
jne
lock
fs
inc
push
sub
lods
jb
jge
pop
mov
and
ljmp
mov
incl
push
cli
jnp
ret
inc
mov
push
push
and
cld
cmp
push
pop
pop
jle
xchg
add
inc
gs
dec
mov
add
daa
inc
test
xlat
fisubs
incb
dec
fwait
xor
sub
sub
cwtl
mov
ret
lret
ret
sbb
scas
or
lods
pushf
loop
fs
insb
cmp
popf
or
jmp
xor
ret
mov
sub
ja
aam
ret
int3
rcrl
xchg
xchg
xchg
popf
repnz
imul
cmp
fsubrl
jp
insb
lcall
inc
xor
clc
push
push
jae
xchg
mov
xchg
inc
cmp
popa
test
jmp
fstpl
pop
push
shrl
pop
das
dec
adc
xor
sub
mov
or
add
cs
mov
sbb
jno
cmpsb
mov
sti
mov
mov
jo
call
xor
ret
inc
out
xchg
adc
cmp
dec
aad
out
in
mov
call
or
mull
jp
clc
xchg
das
mull
mov
add
loopne
out
adc
mov
nop
lods
out
lret
inc
add
and
scas
aaa
dec
mov
dec
jecxz
frstor
adc
or
ljmp
and
push
call
jo
popf
push
leave
stc
add
mov
into
push
ret
cltd
dec
pop
sbb
xor
sti
or
ds
int
xor
in
js
lods
cltd
xor
jae
mov
push
rorb
adc
push
xor
pusha
cmc
dec
stos
sub
adc
pop
mov
fcomps
in
inc
clc
xchg
pop
scas
cwtl
aad
lods
je
sbb
dec
mov
cmc
xorps
lret
xor
fdivrl
popf
mov
fldcw
cmp
jae
fsub
stos
inc
cmc
mov
inc
xchg
pop
pop
in
cmpsb
mov
insb
xchg
leave
cs
mov
jbe
lea
out
stos
cmp
mov
lods
int
push
stc
lret
and
push
inc
pop
sbb
mov
jnp
push
or
icebp
inc
loopne
xchg
lcall
push
dec
and
inc
dec
test
mov
scas
xchg
loop,pn
add
ljmp
mov
xchg
mov
mov
arpl
xchg
adc
fisttps
or
aaa
test
dec
cmp
mov
and
sbb
adc
std
test
sub
mov
cmp
mov
fnsave
fists
mov
shrl
jno
out
leave
ja
imul
addr16
data16
mov
mov
insb
add
loope
test
mov
dec
sbb
arpl
lret
cmp
add
addl
aas
inc
sbb
mov
mov
lds
divb
pop
adc
xor
icebp
sbb
jg
cld
cmc
addr16
mov
out
hlt
jne
xchg
cmpsl
inc
dec
mov
idivb
fdivrl
push
sahf
mov
cmp
pop
cltd
bound
test
mov
cmp
xchg
data16
and
lods
dec
cltd
out
es
mov
subl
adc
dec
in
push
add
and
dec
lods
inc
daa
mov
inc
jecxz
lret
mov
loopne
lret
das
enter
call
adc
and
sub
pop
mov
sti
test
jle
cli
ja
ficompl
cmpsb
jae
inc
push
push
jge
sub
outsb
sub
jae
ds
lahf
xchg
cltd
xchg
jge
xor
jb
repz
adc
stos
jne
out
mov
ret
cli
jg
cwtl
mov
mov
test
dec
xchg
dec
ljmp
pop
sbb
pop
sbb
xchg
mov
movsl
or
aad
iret
aaa
into
add
push
leave
cmc
xor
lret
xchg
in
inc
sti
sarl
in
dec
rorb
jp
mov
sar
sbb
jnp
xor
out
mov
xchg
mov
fdiv
fildl
xor
jl
or
adc
adc
cmpsl
mov
mov
das
gs
outsl
arpl
mov
and
push
push
mov
cmc
push
jne
dec
aad
scas
lahf
push
add
arpl
mov
cmpl
pop
sbb
jno
mov
ficoms
cvttps2pi
icebp
xchg
dec
jge
or
aaa
add
jnp
pop
cwtl
js
popa
pop
inc
jp,pn
pop
or
movq
fnstcw
aaa
mov
mov
sar
test
loopne
xchg
push
subb
mov
sub
sbb
sbb
cmp
int3
mov
popa
ja
nop
aam
orb
xchg
bound
out
push
xor
xchg
pop
add
mov
fs
xchg
inc
notl
sub
adc
ret
dec
mov
jecxz
add
sarl
aas
xchg
shll
bound
pop
outsl
rolb
add
inc
adc
loope
xor
push
or
aam
add
fnstsw
rcrl
ds
andl
in
mov
iret
lcall
aaa
xlat
stc
out
pop
iret
das
xchg
mov
push
scas
fldenv
push
test
dec
cmp
xchg
je
mov
mov
add
mov
pop
sbb
xchg
stc
in
mov
pusha
adc
int3
aaa
adc
pop
ljmp
mov
test
sub
jae
dec
sti
inc
pop
jl
xor
inc
cs
fxtract
dec
rcrb
subb
jns
mov
jo
cs
or
mov
push
sbb
push
in
adc
ds
xor
xchg
cmc
movsb
in
int
push
adc
ja
pushf
test
js
cmc
push
pop
sbb
dec
adc
push
mov
jp
fnstsw
xchg
hlt
std
lock
add
scas
xor
cld
sbb
fs
inc
outsl
xor
jo
add
sbb
fadd
mov
and
xchg
dec
mov
test
ja
cs
fwait
aam
pop
scas
adc
dec
pop
test
or
jbe
jno
jge
mov
cli
dec
mov
hlt
loope
lock
sbb
xor
inc
mov
iret
and
mov
insb
rorl
jne
fcom
dec
push
cmp
jl
push
frstor
aas
nop
xchg
out
dec
add
xor
sub
push
cmp
add
add
add
or
cmpsb
push
lcall
and
push
aaa
in
stos
sub
push
lret
mov
mov
insl
and
add
jbe
add
ficoms
push
outsb
incl
jbe
loope
and
dec
push
loop
xlat
xor
and
mov
and
dec
in
dec
ja
dec
bt
out
push
shll
call
or
repnz
in
sub
test
in
andl
pop
cmp
dec
cmpsb
add
mov
jnp
lods
or
push
loopne
push
ja
stos
into
testb
push
in
int3
mov
inc
sub
push
mov
pushf
stos
sbb
or
xlat
subb
and
inc
jecxz
sbb
adc
sbb
fcmovnbe
xor
mov
sbb
mov
ss
pushf
xlat
es
cltd
inc
outsb
xlat
pusha
and
dec
repz
sub
stos
sub
loop
fimull
mov
push
xor
das
cld
imul
push
mov
ret
xor
sbb
xor
push
xchg
mov
in
cmp
mov
inc
js
adc
sbb
jg
rorl
outsb
cmp
sub
cmpsb
mov
outsl
inc
sub
mov
fwait
cmp
cmp
mov
test
mov
sbb
fsubl
and
xchg
jmp
test
fcomps
movsb
outsl
out
mov
aad
sub
lds
lcall
shlb
in
cli
imul
mov
cli
loopne
xchg
repz
cmp
add
sub
decl
mov
mov
sbb
and
cld
push
dec
sbb
aad
pop
insl
xor
mov
mov
mov
lcall
mov
cmc
out
cmp
lods
mov
das
add
test
and
mul
pop
mov
add
jnp
scas
adc
push
or
test
or
lods
sbb
andb
lods
mov
gs
cmp
std
popa
pop
xlat
cld
scas
pop
sub
pop
in
pop
shl
cltd
ljmp
xchg
nop
or
stc
cmc
mov
xchg
mov
lock
lret
mov
icebp
push
sbb
rcl
aad
mov
fistpl
mov
mov
push
orl
cmp
and
shr
sbb
stos
gs
mov
flds
pop
dec
ret
jmp
in
mov
out
shlb
mov
ret
xchg
xchg
and
pop
xor
xchg
fadds
sbb
jae
jo
lock
inc
js
aas
jle
shrb
sub
in
test
cli
mov
mov
or
mov
sub
mov
pop
inc
call
lret
mov
or
pop
adc
jnp
inc
aam
in
push
mov
mov
stc
pushf
pop
mulb
xchg
std
shlb
cmp
test
loopne
decb
jmp
sbb
mov
xchg
adc
pop
and
cmpsl
cwtl
mov
andl
pop
inc
stos
mov
and
scas
test
or
movsl
or
mov
mov
aas
and
sub
push
push
sbb
roll
out
xorb
xor
lods
jne
xchg
push
add
push
icebp
test
jp
lret
cmp
arpl
int
xchg
in
mov
xchg
fwait
in
mov
jecxz
vmaxsd
cltd
mov
outsb
sub
mov
push
cmp
fidivs
mov
mov
jns
xchg
stos
ffreep
adc
jle
pop
movsl
add
sub
adc
in
mov
xor
in
xchg
jge
push
sub
xor
mov
cwtl
fsub
sbb
loopne
jno
pminub
negl
sahf
push
inc
arpl
daa
jp
dec
ja
out
jmp
inc
push
inc
comiss
mov
popa
mov
mov
daa
or
sub
mov
lods
pushf
jmp
xchg
push
les
cmp
ret
add
orb
push
sbb
mov
mov
fmuls
cmpb
xor
sbb
sub
pop
mov
cmp
les
jl
cltd
and
and
push
pop
push
push
xchg
fstl
jmp
xlat
rolb
test
push
xchg
sub
hlt
mov
xchg
mov
jnp
jg
sub
sub
pop
call
mov
push
inc
mov
lret
jmp
repnz
fwait
mov
xor
mov
dec
pop
dec
arpl
outsl
dec
mov
test
lds
and
dec
cwtl
incb
into
imul
repz
in
push
dec
and
jns
and
cmp
inc
roll
scas
pusha
and
add
pop
movsb
mov
push
movsl
push
sti
mov
out
xorl
in
ljmp
or
shrb
jmp
jns
adc
ljmp
mov
aas
ljmp
or
sbb
int3
ja
add
push
call
shl
jl
repz
sub
sub
cli
mov
aaa
dec
out
mov
lcall
fbstp
xor
mov
jbe
repz
lea
clc
cmpsb
sub
fwait
mov
fistps
sbb
mov
and
cmpsl
cmp
pop
bswap
jo
test
add
popf
pusha
mov
and
orl
xor
hlt
hlt
add
pop
popa
test
mov
syscall
testb
daa
mov
push
dec
pop
xchg
sbbb
lret
adc
inc
pop
sub
out
jecxz
push
push
push
inc
mov
loope
push
jnp,pn
lret
push
js
fimuls
pop
cmc
mov
in
jns
iret
lret
jmp
inc
sbb
sbb
pop
pop
mov
inc
xchg
test
inc
shlb
mov
push
and
mov
es
cli
jl
pop
and
popa
and
rcll
xchg
push
add
lods
repz
in
pop
and
pop
pop
or
inc
mov
mov
mov
sbb
call
add
mov
inc
lods
mov
lret
jge
pop
and
fs
in
push
sub
testl
movsl
imul
xlat
xchg
mov
in
repnz
dec
push
pusha
mov
inc
sub
and
sub
filds
lods
push
stos
arpl
jecxz
arpl
imul
push
lret
in
adc
and
lea
ret
or
xor
sub
sub
adc
or
cli
inc
test
decb
mov
jne
pop
xor
repnz
ss
test
fnstsw
adc
test
inc
xor
loop
add
aam
xchg
arpl
fldt
stos
pop
fildl
jmp
fsubl
sub
sbb
cmpsb
roll
sbb
sti
je
jle
jns
sbb
mov
sahf
sub
push
inc
inc
pusha
pushf
and
xor
sub
jno
popa
out
push
mov
sbb
sahf
int
stos
loopne
dec
or
call
xlat
mov
out
fsubr
jne
jb
inc
lahf
push
push
cltd
into
jmp
shlb
cltd
push
push
mov
jae
lds
in
cmpsb
stos
movsl
ret
js
adc
push
loopne
rep
in
mov
rcl
iret
lret
xchg
clc
lret
int
push
dec
daa
data16
pushf
jbe
mov
jecxz
out
cli
icebp
jbe
xchg
leave
sub
mov
adc
sub
cld
and
jge
push
ljmp
notl
lods
pop
sahf
push
js
inc
popf
xchg
pusha
pop
rcr
xchg
out
js
adc
mov
adc
call
addr16
daa
test
sbb
push
daa
movb
das
out
xchg
int3
inc
stc
lods
lds
rolb
jb
jg
xchg
mov
mov
mov
adc
push
inc
loopne
cs
les
test
mov
test
xchg
jecxz
adc
sub
mov
andl
in
cli
and
imul
bound
xchg
inc
mov
fildll
cltd
and
psubsb
mov
xor
push
mov
and
push
cmp
cmc
fs
movsb
mov
mov
push
roll
movsl
adc
push
sbb
xchg
in
movsb
ds
pop
dec
jg
aad
loop
in
mov
sarb
adc
aam
andl
repz
add
pop
pop
lea
cltd
mov
pop
int
jno
dec
jle
insb
mul
fdivs
test
mov
dec
mov
xlat
pop
mov
mov
or
sbb
mov
out
jns
sti
xchg
pop
daa
andb
xlat
popf
push
pop
sbb
dec
enter
je
push
xchg
movsb
add
fistl
loopne
lret
cmp
rclb
adc
xor
xor
les
push
pop
dec
push
ljmp
adc
inc
loopne
or
cmpsb
ss
cld
mov
push
push
or
arpl
lock
pop
mov
test
jnp
inc
dec
test
leave
hlt
leavew
mov
nop
mov
mov
cld
popf
cs
and
movsb
pop
xor
pcmpgtw
movsl
sbb
add
inc
shll
or
cmc
jecxz
xor
lods
cmc
pop
int3
test
inc
push
mov
fldl
movl
daa
sub
sbb
icebp
dec
fsubp
jnp
stos
push
rol
andb
lcall
in
inc
xchg
cmp
or
aam
cmpsb
xor
stos
push
sahf
jl
push
xchg
mov
ss
sbb
push
loopne
aaa
js
pushf
lret
aam
daa
je
cmp
stc
js
inc
pop
test
cmpsb
xor
sbb
shl
pop
rolb
pop
rolb
mov
loope
mov
cmc
arpl
notl
movsb
push
or
and
out
sbb
leave
mov
sub
daa
mov
leave
pop
ds
pmullw
ret
sub
iret
sbb
call
mov
mov
xchg
in
imul
stc
stc
lds
cli
mov
xor
data16
or
sbb
sub
movsb
and
dec
mov
fdiv
movntps
ja
mov
sbb
sub
rorb
mov
mov
fisttpll
mov
pop
inc
jmp
pop
jge
push
in
cmpsl
or
fisubrl
nop
pop
or
jno
adcb
xchg
out
dec
ljmp
mov
daa
pushl
cmpsb
xorb
in
in
scas
stos
mov
sbb
ret
aam
xchg
add
push
cwtl
jbe
add
fdivrs
adc
into
xchg
cmp
jle
mov
pop
out
pop
xchg
cs
ret
mov
add
mov
mov
mov
in
lret
stos
inc
scas
ret
pop
mov
mov
stc
jnp
dec
add
cs
mov
lods
in
lret
adc
sub
jle
pop
push
adc
fisubl
movsb
xor
aas
lods
movsb
jecxz
inc
in
fbld
lret
shrb
inc
lcall
lret
testl
or
outsl
adc
jmp
or
sub
xchg
pop
cwtl
and
cmp
mov
cmp
pop
dec
sahf
cmp
das
sbb
xchg
into
inc
clc
push
gs
rcrl
xorb
aam
xchg
push
scas
sbb
ss
jl
xor
dec
clc
pop
sbb
dec
hlt
movsb
xchg
icebp
mov
inc
pop
jno
aas
fldcw
subl
addr16
dec
ja
enter
xchg
pop
push
inc
fwait
jg
push
lcall
clc
mov
pop
sbb
push
jae,pn
outsb
subl
out
cli
out
icebp
stc
repz
enter
mov
pop
cmp
dec
daa
repz
push
push
cmp
imul
push
repnz
fldenv
mov
adc
ret
imulb
push
rcrl
test
xor
sbb
fnstenv
cmpsl
xchg
stc
xor
out
fists
push
lds
cmpsl
adc
fcoms
sub
out
push
stos
cmp
and
outsl
jno
pop
xor
outsl
outsl
ret
stos
nop
mov
xor
repnz
xchg
shlb
fwait
mov
mov
iret
andl
jp
adc
into
bound
mov
cmpsl
jle
in
pop
cmp
pop
xchg
imul
sub
pop
mov
imul
mov
int
arpl
add
pop
jle
sbb
fiaddl
mov
mov
mov
popf
fwait
stc
inc
adc
aam
push
mov
clc
mov
addb
add
orb
ret
stos
xchg
ljmp
leave
dec
mov
mov
cmp
add
popa
sbbb
stos
aam
pusha
mov
sbb
jecxz
outsl
push
out
stos
nop
xlat
or
and
sbb
scas
data16
cmp
mov
jbe
pop
dec
std
xchg
mov
xchg
mov
dec
mov
lret
pop
shrl
jle
pop
jle
int3
xchg
notb
xor
jno
decb
sti
cmp
dec
push
sbb
and
sub
das
jg
aaa
jmp
cmp
pop
in
les
int
mov
and
lds
fwait
xlat
les
idivl
jp
fldt
into
mov
fwait
iret
adc
push
rol
ljmp
in
adc
add
add
xor
dec
ficomps
inc
sarb
leave
mov
mov
mov
iret
xchg
and
dec
xchg
mov
aam
adc
cld
and
cmp
adc
inc
mov
and
das
and
ljmp
test
insb
or
pop
push
gs
sub
push
pop
loopne
or
jae
movl
fisubs
sbb
mov
aaa
mov
inc
xchg
fnstsw
adc
js
cs
push
sbb
xor
jb
or
xor
in
pop
cli
loope
dec
fstpl
repnz
outsb
mov
mov
stc
xor
mov
fldt
xchg
sub
cmp
jbe
and
rcr
mov
jmp
negl
jl
das
xchg
xchg
outsb
pop
loop
loopne
es
push
jo
inc
xchg
xor
mov
push
aas
fmuls
out
pusha
mov
repz
lret
lds
push
icebp
int
fsubrl
in
in
call
cmpsl
mov
mov
dec
lea
lea
xor
jae
shr
nop
movsl
sub
leave
fcompl
pop
in
js
in
and
es
push
mov
addb
nop
stc
stos
mov
ds
and
xchg
and
fcmovnu
rol
pop
adc
pop
inc
mov
inc
jle
mov
dec
mov
shlb
xor
jecxz
aam
adc
in
push
ljmp
cmp
add
aam
adc
iret
jg
roll
stos
xchg
xchg
push
nop
mov
push
add
mov
ror
les
xlat
xor
test
mov
dec
in
mov
jecxz
rcrb
xor
pop
imul
repz
xabort
les
jbe
stos
mov
ficompl
sub
scas
mov
incb
rcll
mov
ja
inc
mov
gs
enter
jnp
cmp
and
dec
jl
lock
lock
inc
aaa
push
dec
repnz
pop
jb
lahf
mov
aaa
lds
dec
nop
movsl
fcmovbe
jmp
cmpsb
fldl
cmp
mov
and
mov
jbe
sbb
repz
sub
sahf
add
lods
or
add
adc
adc
lea
dec
or
pop
mov
push
sahf
and
test
fwait
mov
mov
jne
xchg
mov
aaa
add
add
xchg
mov
aad
xlat
dec
or
bound
std
pop
xlat
inc
push
pop
jb
mov
js
ret
dec
clc
jmp
mov
shr
aaa
rol
push
adc
in
pop
inc
xchg
loop
xchg
in
cmp
fistpll
sub
addr16
cmp
scas
jmp
lahf
mov
mov
movsb
lds
test
xlat
repz
xor
mov
and
sub
into
ficoms
out
pop
imul
sub
test
and
mov
inc
jnp
sub
in
xchg
mov
mov
inc
mov
pusha
in
in
sbb
mov
push
dec
test
and
xor
jge
jne
mov
xchg
rcr
addr16
loop
push
and
dec
push
mov
pushf
cmp
mov
ljmp
jle
and
fdivs
lods
jbe
xor
insl
cmc
decl
or
add
mov
aaa
aaa
mov
decl
or
cwtl
lret
mov
bound
lds
scas
push
mov
and
mov
test
pop
cmp
push
and
xchg
xor
adc
jmp
mov
repz
out
xchg
pop
adc
fcoms
push
rcl
inc
or
in
inc
xlat
cmpb
dec
test
roll
subl
in
cmp
and
stc
pusha
cmp
jns
add
xchg
cld
push
scas
lret
cmp
into
incb
cmp
lock
add
xchg
mov
pusha
ret
mov
inc
fistpll
int
mov
out
jmp
hlt
xchg
mov
lods
pop
data16
popf
lcall
xor
pop
mov
outsb
and
xchg
push
cmp
cmpsb
rcll
inc
xchg
rorb
xchg
sahf
daa
sub
dec
cmp
es
cmc
and
pop
test
mov
cmp
test
std
jle
xlat
push
and
push
push
fistl
stc
aas
xchg
pop
or
fs
lcall
mov
in
jnp
xor
sub
xor
icebp
push
inc
pop
mov
mov
lcall
push
lret
push
andb
cld
cmp
idiv
pop
cs
sahf
sbb
dec
dec
adc
adc
push
popf
repz
push
out
arpl
andl
or
push
jecxz
les
pop
pop
iret
or
inc
fisttpll
rorb
js
and
stos
xchg
sub
dec
daa
fistl
pushf
lea
xorl
jo
sub
decb
fidivs
inc
loop
notb
xchg
xchg
lea
rcrb
sbb
dec
ljmp
cmp
xchg
pop
pop
dec
int3
dec
jmp
sahf
xchg
pop
out
imul
in
insl
insl
add
jge
push
jno
mov
sbb
sub
rorb
fwait
push
jle
movsl
aaa
cmp
xor
sub
sub
mov
lahf
jbe
scas
dec
inc
mov
xchg
mov
std
fisttpll
pop
pop
xchg
sbb
mov
cwtl
fcoml
es
mov
imull
stc
push
dec
push
insl
shlb
cs
or
xchg
ss
add
es
mov
adc
cltd
shrb
or
stos
scas
fwait
in
pop
adc
int
inc
sub
mov
cwtl
ljmp
fdivrs
mov
lret
nop
inc
pop
cli
mov
push
dec
add
xchg
fwait
mov
popa
shll
jle
int
sbb
xchg
inc
movsl
das
inc
mov
pop
fwait
aas
test
test
ret
subl
lcall
ficoms
xorl
mov
cli
lret
imul
add
dec
add
loopne
or
push
ficoms
pushf
xchg
jecxz
add
pushf
mov
push
ljmp
pop
sbb
xchg
and
ljmp
fisubs
or
enter
loopne
dec
ljmp
xchg
mov
test
lods
jns
and
loop
in
lods
sub
inc
sub
pop
add
dec
push
sti
scas
test
jne
sub
jo
mov
dec
jbe
rorb
and
pushf
pop
sub
xor
cltd
jns
aad
fistpll
ds
dec
aad
sahf
push
stc
loope
mov
xchg
mov
pop
sbb
jmp
imul
mov
fadd
sbb
sub
repnz
adc
sub
dec
cmp
pop
repz
ja
iret
test
pop
arpl
sub
aaa
test
sbb
call
ja
mov
xlat
mov
mov
inc
mov
xor
pop
in
mov
push
push
test
das
dec
test
mov
aad
rorb
adc
mov
xor
in
dec
test
add
dec
roll
jo
fldt
and
inc
pushf
ljmp
jbe
mov
leave
cs
mov
sbb
mov
ret
lcall
fwait
outsb
mov
ret
cs
and
test
frstor
dec
int
mov
and
je,pt
sbb
xor
nop
rorb
ficoml
or
faddp
nop
roll
pop
mov
andl
dec
dec
jge
mov
loopne
sbb
call
lods
repnz
cmp
mov
bswap
and
test
out
addr16
dec
out
mov
sbb
outsb
xchg
sahf
stos
mov
xorl
mov
stos
js
jle
repz
insl
adc
xor
cli
jnp
dec
ljmp
inc
leavew
push
in
std
jp
sarb
dec
out
cld
test
fcomp
hlt
jge
xchg
aas
adc
ret
lret
dec
jbe
dec
fnstsw
xchg
xchg
mov
mov
stos
jmp
enter
fwait
sbb
and
sbb
int3
mov
orl
mov
cwtl
stos
dec
imul
insb
adc
or
add
out
cmp
push
jb
push
imul
cli
ror
jl
jae
jecxz
and
mov
dec
and
dec
insb
dec
je
add
or
cmp
loope
gs
icebp
or
cmpsl
inc
xor
sbb
dec
xchg
out
or
int
dec
add
bound
test
sti
dec
mov
mov
dec
das
popf
das
mov
cwtl
cwtl
pop
cwtl
lret
icebp
jbe
mov
aam
bound
mulb
jge
or
cltd
mov
cmp
fldl
out
das
imul
imul
stos
adc
roll
push
call
outsl
jle
test
or
sbb
leave
pop
mov
mov
pop
adc
xor
stos
mov
jo
sbb
cltd
insb
sub
add
out
scas
adc
cli
xor
fsts
mov
jbe
mov
lret
xchg
scas
popl
inc
xor
movsb
and
adc
push
cwtl
imul
sti
pop
mov
fistl
jle
in
jp
cltd
mov
into
push
popf
and
imul
sub
inc
cs
xlat
aam
outsl
add
cmpsl
js
dec
out
negl
outsl
xchg
inc
pop
or
test
mov
out
cmp
icebp
divl
dec
adcb
fwait
xor
adc
xchg
loope
pop
arpl
movsl
add
arpl
leave
stos
xor
pop
xor
sub
xor
mov
jno
inc
roll
popf
enter
xor
xchg
push
adc
dec
sbb
pop
inc
pushf
std
push
xchg
xchg
pop
movsl
jae
cmpsb
hlt
pop
mov
jbe
je
inc
adc
es
sub
popa
mov
pop
test
jecxz
scas
push
cmp
jnp
in
inc
mov
sub
addr16
sub
imul
frstor
or
insb
sbb
imul
aam
fwait
ljmp
js
mov
das
sub
out
xor
movsl
sub
add
xchg
xchg
mov
mov
jle
sub
popf
cs
or
xor
cmp
push
adc
mov
add
push
add
adc
test
xchg
repnz
lea
repnz
and
adc
or
push
in
push
std
add
in
sbb
popl
dec
ds
rcll
pop
out
and
jl
cmpsl
inc
fstl
adcb
icebp
fdivrl
sbb
pop
pop
rol
push
cmp
int3
dec
push
mov
adc
stos
aas
out
mov
mov
lea
pop
cld
jmp
mov
cmp
xchg
fwait
es
push
and
jbe
int
push
loopne
jge
add
repnz
mov
jnp
icebp
jmp
inc
rorb
dec
in
xor
std
jg
add
or
lock
pop
cli
xchg
xchg
pop
push
inc
push
imul
imul
dec
jae
mov
dec
int3
xchg
push
xchg
fcomps
xchg
mov
in
test
cmp
jnp
or
fiadds
icebp
inc
jb
jbe
sbb
call
fisubs
sub
rcrl
jge
orl
or
cmp
sahf
and
dec
xor
inc
leave
xor
cmc
mov
mov
sar
mov
xchg
fstps
mov
loop
pop
fdivl
and
inc
gs
cwtl
sbb
jl
and
fisubs
sbb
xor
movsb
jg
add
sub
test
mov
fwait
jp
and
test
popf
xchg
scas
pop
mov
into
xchg
int3
or
rcrb
icebp
insl
mov
inc
repnz
scas
cltd
add
cmp
mov
mov
mov
mov
imulb
sbb
mov
lcall
xchg
rep
mov
cltd
xchg
inc
ja
or
sub
fimuls
sbb
adc
or
lcall
or
daa
stc
les
mov
sub
or
ljmp
xor
pop
ja
jg
and
fwait
icebp
mov
test
adc
popf
js
pop
push
test
or
push
jmp
adc
and
push
pop
mov
mov
subb
jb
ljmp
lret
mov
adc
mov
sbb
cmc
xchg
ret
cmp
fisubrs
in
aam
dec
cmc
sarl
xchg
nop
jmp
mov
cmp
sub
inc
cmpsl
inc
add
mov
std
jge
push
fstp
mov
inc
pushf
inc
adc
pop
jl
test
in
hlt
lahf
sub
icebp
cmpsl
int3
jne
sahf
push
jne
or
fs
inc
pop
ret
les
test
fucom
lea
popl
fwait
mov
mov
movsb
cmp
jp
mov
cmpps
negl
jecxz
or
xchg
outsb
mov
mov
nop
femms
in
cmp
jmp
adc
mov
jnp
cmp
mov
xchg
cmpsb
pusha
lock
xorl
mov
pop
pop
lods
sbb
push
test
mov
adc
cmp
test
rorl
dec
lock
scas
mov
stc
notb
add
popa
out
bound
xchg
cmc
movsl
lock
and
lcall
sub
mov
and
jns
push
out
pop
cmc
cs
dec
xchg
dec
cld
movsl
and
or
jmp
and
es
and
mov
jbe
loop
sbbb
mov
mov
sub
out
xlat
push
cmp
rolb
out
xchg
fwait
aam
inc
pop
xchg
adc
jno
test
cmp
sbb
add
outsl
in
mov
lock
xchg
xlat
mov
push
mov
lret
jmp
lcall
pop
inc
lcall
in
aam
push
inc
pop
adc
and
movsb
push
int3
jg
inc
emms
std
pop
lods
loopne
and
add
cmp
fimuls
js
and
push
roll
push
movsl
jnp,pt
and
pop
pop
adc
mov
add
inc
lods
fwait
push
push
and
add
sub
icebp
or
lret
daa
add
fildl
jg
and
inc
sub
fwait
shrl
mov
xchg
sub
xchg
mov
pop
push
add
sbb
cld
and
inc
add
xchg
mov
sub
add
loop
stos
icebp
and
sbb
aas
mov
mov
arpl
add
mov
daa
and
cli
xchg
mov
push
stos
add
stos
cmp
andb
ret
xchg
sbb
dec
or
mov
imul
into
lret
inc
cmp
addl
push
fisubl
xchg
sti
rolb
pop
stos
add
or
cmp
mov
and
cs
xchg
sbb
stc
cmpb
mov
dec
addr16
loope
xchg
xchg
push
cmp
sub
scas
cli
xlat
nop
dec
or
inc
les
mov
pop
loopne
push
push
aas
or
call
add
mov
mov
outsl
mov
push
stos
shl
xchg
call
test
mov
inc
shrb
nop
test
and
or
dec
hlt
dec
loope
lock
jne
bound
outsl
aas
dec
inc
pop
loope
xchg
seta
outsb
cmp
and
adc
inc
cmpsb
icebp
sbb
lret
into
stos
xchg
in
jnp
in
mov
dec
sbb
adc
pushf
sbb
jle
idivl
mov
push
int
and
sti
sub
mov
pop
mov
call
mov
cmpsb
shl
loop
xlat
and
mov
add
ds
outsl
cwtl
mov
mov
sub
mulb
rorl
in
mov
testl
dec
mov
dec
fs
or
arpl
int
test
leave
push
or
xchg
stos
stc
jl
fnsave
popa
push
xchg
dec
xchg
mov
dec
push
pop
mov
test
mov
jb
add
cs
mov
push
pop
jge
into
fldl
dec
mov
jl
or
or
gs
data16
je
mov
push
push
aaa
push
mov
ret
sbb
sub
fcomip
mov
gs
jl
xchg
mov
repnz
stc
add
jp
push
jbe
arpl
les
sub
add
ret
rorb
jno
or
movsl
repnz
pop
lahf
lahf
movsb
jle
sbb
mov
jne
sti
xor
inc
popa
cmp
loope
rolb
shll
inc
ja
pop
mov
adc
sbb
lahf
pushf
je
adc
dec
mov
push
rcll
outsl
add
mov
cltd
xor
push
jns
mov
cli
stos
fistpl
inc
push
push
in
pushf
sbb
imul
lahf
pop
notl
jl
das
push
repnz
mov
pop
je
add
scas
dec
pop
push
sbb
es
and
cmc
jmp
mov
adc
mov
mov
sub
and
fsubrp
xlat
aad
mov
inc
mov
add
cmp
andb
mov
ret
dec
pop
pop
mov
loope
pop
pop
in
xor
or
mov
cwtl
out
mov
or
push
mov
push
outsl
movsb
xchg
icebp
fwait
jo
fxch
and
icebp
sub
out
mov
out
cmp
adc
dec
sbb
into
xchg
push
jge
xchg
adc
adc
jae
cmp
pop
stos
test
in
sbb
pop
sti
mov
push
cmp
rcrb
aad
ljmp
jg
pop
dec
xchg
nop
add
xchg
adc
inc
xor
push
or
cmp
fadd
lods
push
sub
dec
or
pop
bound
cmp
fiaddl
inc
add
clc
inc
std
in
inc
test
out
inc
push
sub
rorb
loope
xlat
stos
inc
fmull
popf
add
push
push
inc
insl
shrb
and
sub
dec
xor
sti
push
push
mov
dec
pop
loop
or
in
xor
sub
adc
sbb
mov
mov
daa
sub
push
pop
jle
adc
inc
push
push
divl
or
call
sub
xchg
pusha
std
or
fwait
test
sub
jl
subb
aad
addr16
or
adc
mov
mov
imul
imul
scas
aaa
push
popl
inc
cli
test
pop
jmp
enter
fwait
push
gs
jb
inc
pop
leave
daa
mov
xchg
sub
std
mov
push
bound
push
push
mov
icebp
cld
mov
xchg
nop
inc
in
nop
out
inc
push
mov
icebp
les
dec
std
cld
inc
enter
xchg
bnd
mov
inc
inc
cltd
enter
pop
mov
xchg
ror
sbb
pop
rcll
xor
cmpsb
addr16
mov
push
lret
iret
and
adc
scas
repnz
pop
or
adc
das
jmp
cmp
subb
jmp
mov
mov
sbb
push
sbb
inc
jmp
pushf
in
mov
dec
aad
popaw
shll
push
out
arpl
sbb
mov
imul
loop
or
or
pop
or
pop
test
cwtl
jne
out
hlt
xchg
mov
les
outsl
jle
add
pop
mov
movswl
icebp
lds
and
push
jp
xchg
sub
shlb
jae
mov
xchg
jle
into
dec
jl
jae
cmc
mov
xlat
aam
jns
out
and
pop
cmp
or
pop
sub
loope
mov
pop
scas
incb
ds
rcrb
pusha
iret
mulb
imul
stos
xchg
dec
lret
data16
mov
ret
push
mov
cmc
dec
outsb
out
mov
ficomps
ja
lds
pop
sub
xchg
test
cmp
imul
jae
push
cmp
ret
shrb
outsl
inc
adcl
stos
sbb
cmp
inc
push
push
outsl
aam
imul
ret
dec
lods
sub
insb
jb
lahf
ljmp
je
les
test
mov
add
push
ds
add
icebp
lret
mov
push
xchg
insl
insl
xor
adc
pop
pop
ljmp
push
popf
lahf
hlt
shll
imul
adc
call
dec
ss
push
lock
clc
jmp
xchg
pop
sub
and
xchg
push
xor
inc
cwtl
push
xor
inc
jge
jo
rcrl
sti
add
test
popa
add
mov
mov
or
incl
jo
or
mov
fmuls
loop
adc
adc
sarb
cmpsl
clc
sbb
fs
jge
pop
jae
mov
cwtl
std
mov
out
sub
xlat
imul
gs
in
xor
sub
fld1
xor
mov
xor
lods
add
fildl
push
push
jmp
xor
and
shl
and
add
imul
pop
iret
lret
das
lods
data16
fstps
dec
je
idivl
imul
out
in
push
lods
pop
sbb
mov
pop
imul
xor
lock
lea
out
pop
pop
dec
in
xchg
mov
es
lods
jb
adc
ret
cmp
mov
sub
fucomi
xor
scas
callw
inc
lcall
repnz
mov
das
dec
imul
pop
ret
mov
pop
jle
mov
nop
dec
xchg
ret
movsl
cs
aam
mov
jns
and
inc
push
int
ret
in
sbb
jnp
add
mov
jg
bound
fcomip
cltd
dec
add
xor
dec
in
stos
pop
loop
cwtl
nop
xchg
out
push
jmp
xorb
in
repnz
jns
lcall
lahf
sbb
pop
or
shlb
cmc
xchg
jl
mov
out
add
jno
dec
dec
or
xchg
jo
cmp
pop
ret
pop
js
lods
out
lods
xor
mov
sbb
jns
push
leave
lahf
push
mov
push
inc
sub
mov
stc
sahf
sub
sahf
jmp
lcall
clc
cli
jge
cmp
sti
and
pop
cmc
sbb
xor
dec
jbe
pop
push
mov
dec
jl
sub
rolb
repnz
pop
jne
mov
repnz
inc
in
inc
inc
lret
adc
mov
pop
in
fwait
jmp
jbe
and
xlat
pop
gs
movsl
iret
push
sub
jns,pn
dec
add
inc
cltd
push
andl
jmp
mov
jmp
outsl
pop
sbb
pop
es
icebp
mov
cwtl
add
sub
ret
notl
mov
nop
lods
fwait
mov
fists
and
fiadds
fistpll
cmp
cwtl
sti
ja
data16
xchg
scas
or
ficompl
clc
inc
lret
xchg
popa
xchg
adc
inc
mov
imul
stc
push
inc
inc
and
lods
out
movsb
dec
shr
inc
mov
sub
hlt
enter
cmp
vmptrst
out
adc
test
inc
stos
push
in
insl
and
mov
lret
adc
faddl
jecxz
xchg
outsb
sahf
movsb
xchg
jl
stos
test
adc
add
or
mov
inc
cmp
dec
xchg
mov
out
out
cmp
cmp
adc
or
insl
sbb
add
shlb
cmp
fdivrp
hlt
ret
fwait
xchg
cmp
sar
xchg
outsb
popa
ret
mov
outsb
cld
or
sub
jge
cld
mov
popa
jmp
mov
movsl
imul
into
dec
mov
xchg
xlat
cmpsl
ss
lea
pop
out
fwait
loop
insl
mov
and
jg
xor
add
iret
sub
mov
mov
sub
adc
mov
push
nop
ja
sbb
mov
cmp
std
push
icebp
or
test
mov
stos
gs
push
or
call
mulb
scas
add
jl
shld
push
jge
add
rcrl
cmpsb
stos
sahf
sbb
add
pop
jmp
mov
sub
cmp
and
les
bound
pop
add
mov
pop
sarl
xor
lret
mov
cld
sub
push
ffree
aad
mov
jmp
pusha
xchg
repnz
fptan
add
pop
jns
push
push
pop
add
cwtl
cmc
jne
or
inc
inc
jo
aas
jp
das
fcom
jo
data16
jecxz
cmp
out
push
sbb
xchg
xchg
pop
popaw
sbb
fwait
jmp
mov
jae
jl
std
stos
and
cmp
cwtl
iret
neg
or
das
adc
jmp
xchg
pop
es
idivb
inc
je
mov
out
ret
fimuls
lods
loope
hlt
movsb
arpl
fnstenv
jns
or
jnp
inc
or
sub
xchg
pop
jno
mov
lods
fwait
mov
repz
outsl
sub
rolb
ds
mov
xchg
lods
xlat
fmul
jb
frstor
test
cld
jg
lods
fimuls
or
fisttpll
dec
ja
mov
test
dec
repz
in
xchg
dec
iret
pusha
popf
adc
xor
mov
pop
push
outsl
stc
lea
movsl
data16
cmc
jns
pop
out
adc
xor
lds
jge
cmpsl
inc
mov
fld
loopne
adc
popf
xchg
mov
enter
mov
in
mov
out
imul
push
in
pop
mov
jne
iret
mov
cmpsb
leave
fsts
xlat
and
mov
popf
jno
sbb
pop
sub
stos
sbb
pop
jecxz
icebp
stos
test
mov
xchg
mov
xor
cmp
xlat
cmp
ret
xchg
and
aam
adc
cmpb
in
cwtl
out
xchg
int
xor
call
shrl
jmp
cmp
call
dec
xlat
imul
leave
mov
cmp
outsb
into
dec
pop
push
mov
mov
sub
adc
and
dec
mov
outsb
sbb
mov
test
into
dec
cld
push
cmp
loope
outsb
shll
xor
js
je
and
scas
or
xor
and
ret
mov
in
and
pushf
lret
cmp
mov
lret
inc
pop
loop
cmp
scas
cltd
or
pop
imul
int
insl
cmp
ds
hlt
sahf
mov
mov
mov
addr16
cltd
lahf
pop
dec
enter
sti
jle
xchg
sbb
push
jno
add
pop
xchg
cmpsl
lret
cli
lock
mov
aaa
dec
lahf
pop
push
cmp
sarb
lret
lea
out
xchg
fwait
jge
in
mov
push
sbb
mov
shlb
jle
pop
push
mov
clc
sub
sub
adc
out
ja
push
xor
dec
mov
cmp
jle
pop
dec
in
std
cmp
bound
add
pop
sbb
lret
xor
or
xchg
in
stos
pop
inc
dec
lcall
mov
xor
les
dec
pop
push
and
daa
add
in
dec
jnp
pop
xchg
addr16
in
cltd
mov
jno
fimull
and
sub
push
mov
fcmovnb
in
daa
std
and
hlt
adcb
jp
stc
xchg
insb
inc
in
cmpb
adc
sahf
inc
cmpsl
fcoml
cmc
sbbl
inc
or
roll
sti
enter
out
sbb
mov
cmp
sub
mov
jle
jp
imul
sub
inc
adc
test
adc
mov
iret
repnz
xor
cmp
inc
lahf
cmp
int3
in
bound
mov
ret
shlb
mov
lret
imul
push
mov
jb
mov
xor
or
test
or
sahf
push
jg
je
pop
ljmp
insl
pop
pop
hlt
pop
push
add
inc
and
xor
imul
out
lcall
aas
inc
push
enter
cmp
jne
popa
sub
sahf
into
sub
in
pop
mov
or
jge
stc
mov
lcall
or
mov
adc
sbb
test
lret
or
cli
fsubl
scas
mov
cmc
push
mov
dec
test
adc
inc
stos
test
scas
xchg
cli
pop
lahf
test
mulb
into
sbb
roll
push
inc
adc
xchg
sbb
es
clc
mov
push
cmpsb
jo
mov
stc
pop
loop
inc
or
push
mov
pop
pop
dec
sarl
repz
inc
mov
pop
push
jge
pushf
xor
mov
test
dec
and
mov
int3
call
push
cmp
cmp
mov
call
je
xor
ficomps
outsl
fs
pushw
pop
scas
jp
orl
push
int
cltd
inc
outsl
shlb
mov
xor
test
in
push
and
sahf
xor
push
mov
mov
gs
sti
mov
idivl
mov
sbb
xlat
into
jb
enter
aas
adc
cmp
jge
or
xchg
jp
out
lock
pop
ja
lret
sub
add
or
call
inc
add
push
xchg
jl
fcomip
scas
cli
test
jno
jns
inc
inc
ret
fcoms
enter
or
dec
adc
leave
mov
jp
or
cli
jl
xchg
inc
das
ja
dec
fs
and
jae
repnz
cwtl
cli
mov
loop
ds
pop
inc
push
jbe
pop
clc
push
bound
push
ret
ds
rorl
dec
sub
push
in
push
ret
push
cmp
adc
lds
sub
lcall
out
jne
enter
cmc
cmc
pop
les
mov
lret
movsl
add
clc
adc
push
insl
inc
stc
fwait
ljmp
pop
sub
stc
psubsb
stc
fs
inc
sub
jnp
mov
std
mov
adc
jecxz
xchg
mov
and
and
mov
adc
mov
jne
jns
add
lret
mov
mov
out
out
adcl
sbb
adc
jno
dec
fsubr
and
outsb
stos
mov
mov
pop
xor
dec
hlt
lds
test
hlt
std
jl
adc
imul
ds
cmc
mov
enter
icebp
iret
notl
xor
pop
xchg
in
rcrl
out
jge
pop
push
movsb
lcall
adc
mov
movsb
jecxz
pop
or
orb
inc
jp
call
or
test
inc
fstpt
or
sti
pop
cld
pushf
xor
cmp
enter
add
adc
xchg
imul
push
push
daa
es
jle
shr
enter
pop
sbb
fldt
sahf
inc
adc
xor
mov
xor
test
int
pop
push
sar
cmc
lock
adc
test
mov
cmp
cmpsb
negb
push
pushf
stos
faddl
inc
push
stos
addr16
xchg
aaa
add
pushf
and
mov
popf
popa
mov
mov
cli
in
push
cmp
xchg
push
pusha
pop
fiadds
adc
mov
fistl
rcr
repnz
push
mov
subb
pop
or
xchg
out
imul
bswap
mov
jno
push
dec
pop
enter
std
sub
not
mov
and
inc
dec
add
dec
or
jae,pt
es
je
push
mov
pop
or
or
mov
jmp
mov
leave
jo
inc
pop
pusha
cmp
imul
in
mov
mov
aam
mov
out
xor
fldl2t
sub
cmpsl
and
nop
ficomps
mov
mov
xor
xchg
push
xor
inc
mov
dec
xchg
mov
mov
xchg
and
mov
into
mov
push
loopne
les
stc
aaa
xor
add
lock
arpl
xor
jnp
and
dec
and
xor
movsl
mov
mov
cmp
push
stos
pop
adc
icebp
ljmp
push
decb
das
mov
sbb
mov
jbe
test
ja
sbb
push
pop
jmp
aam
dec
adc
sbb
mov
fs
ja
pop
test
dec
mov
sbb
das
push
or
inc
loope
and
jle
mov
stc
pop
pop
dec
sub
sub
inc
or
repnz
ret
inc
inc
jne
into
lods
outsl
cmp
cmp
int3
cmp
je
cli
ret
das
jns
outsl
enter
jb
les
cmp
mov
out
orl
or
fwait
xchg
mov
push
xchg
or
mov
out
rolb
mov
ljmp
lods
lret
rcll
pop
mov
outsl
sbb
lret
and
repnz
scas
leave
nop
jecxz
pop
enter
mulb
pop
inc
sbb
imul
jl
cmp
xor
and
pop
or
shrb
sahf
out
dec
js
stos
inc
pushf
cli
add
cmp
or
dec
dec
dec
fwait
pop
les
add
ret
dec
xchg
jbe
test
sarb
cmp
dec
lret
and
adc
inc
fwait
push
lods
xor
mov
js
fidivrl
ret
sub
adc
int
scas
pushf
in
sahf
outsl
insl
imul
lods
aas
mov
push
ds
mov
mov
jne
push
push
xchg
cli
adc
or
mov
cwtl
xor
add
adc
cmp
jge
cmp
inc
jne
insl
sub
stos
lock
aas
mov
movq
pop
scas
in
std
je
jl
jp
and
sub
test
sub
int
sbb
sbbl
mul
sub
pop
lret
mov
insb
sarb
mov
nop
mov
sbb
or
push
dec
shrb
sub
fimull
pop
push
sbb
mov
jno
cmp
aad
sbb
push
add
rorb
adc
add
pop
xchg
es
mov
and
xor
int
add
cmpl
cmpsb
mov
adc
adc
lret
imul
or
xor
in
test
sbb
cltd
out
mov
inc
ds
mov
call
and
sbb
xor
dec
sbb
jb
lods
xor
mov
xor
mov
inc
mov
mov
pop
mov
xor
jb
mov
ss
in
sub
cmp
data16
pop
int
jcxz
sub
jae
cmp
test
cmp
mov
lods
xor
mov
inc
lret
jb
sub
pushf
test
jl,pt
inc
arpl
jnp
movsb
pop
jb
test
xor
lea
pop
test
sahf
sti
popf
or
inc
mov
adc
push
xor
cmpsl
cli
clc
or
fsub
dec
or
mull
xchg
std
inc
fpatan
sbb
ljmp
push
cmp
add
cmp
add
jg
lods
mov
js
mov
lods
xlat
scas
and
lcall
in
xchg
int3
fstpl
into
enter
jbe
repz
adc
xor
filds
sbb
aas
pop
scas
jnp
das
dec
lea
lcall
shr
pop
jmp
addr16
pop
stc
rcrl
repz
test
sar
mov
scas
sysret
mov
fistpll
add
jl
outsl
jl
dec
out
or
hlt
inc
mov
subb
add
pop
sub
xor
arpl
xchg
subb
faddp
movsb
inc
mov
add
jmp
push
lea
fnstenv
popa
mov
loope
mov
add
and
icebp
adc
call
orb
sub
loop
jp
iret
leave
js
stos
xor
push
xchg
lcall
sub
stos
cmpsb
cmpsb
int
loope
push
sbb
clc
outsb
repnz
sarl
ffree
sbb
daa
xlat
leave
xchg
jnp
pop
sahf
adc
cli
add
mov
xchg
xor
shrb
arpl
adc
jp
dec
mov
xor
sbb
pop
dec
lods
push
stos
add
jnp
dec
pushf
out
shll
in
loopne
mov
xchg
stos
mov
loop
mov
lods
pop
pop
shll
cs
insb
lods
mov
in
loope
mov
lock
xchg
cmc
leave
mov
addr16
pusha
sahf
loopne
or
sbbl
xor
cmpsl
outsl
scas
movsl
pop
push
pop
push
xor
push
sub
int3
shrl
xor
nop
stc
std
adc
pop
ljmp
add
push
pop
dec
xlat
loope
stos
and
mov
mov
in
enter
push
fldcw
xchg
pop
dec
pop
out
fcom
les
inc
int
cld
insl
xchg
das
into
nopl
scas
xor
sti
adc
out
imul
out
xchg
jne
mov
movsl
dec
jae
ljmp
cli
in
inc
pop
mov
sbb
cmp
mov
call
fisubl
lcall
mov
adcl
out
fisubrs
shlb
ds
rorb
ljmp
inc
add
xchg
adc
push
xor
leave
je
stc
das
inc
sub
jae
stc
lock
movsl
dec
into
es
pop
mov
fwait
jbe
fisttpll
and
pop
or
outsb
and
adcb
cmp
pop
pop
push
fwait
jecxz
stos
gs
out
lahf
cs
xlat
lds
aaa
mov
add
cmc
shl
lods
addr16
lock
lahf
inc
outsl
enter
xlat
sub
or
mov
or
aaa
dec
sbb
inc
leave
pop
mov
cltd
imul
lds
popf
stos
lcall
cmc
aaa
fimuls
xor
push
in
icebp
stos
mov
or
xchg
fildll
dec
cmpsb
inc
loop
and
nop
xchg
sbb
jae
mov
cmp
pop
push
in
lahf
fsts
sbb
sbb
push
scas
xchg
sbb
iret
test
pop
mov
int3
xlat
mov
sub
ds
jecxz
cmpsl
fcomip
mov
out
push
xor
push
dec
and
ds
mov
push
outsl
push
pop
jmp
orb
mov
addb
call
mov
sbb
pushf
rorl
or
jb
adc
js
pop
mov
push
mov
sbb
mov
in
push
sbb
inc
inc
enter
pop
add
adc
js
enter
pop
dec
lcall
call
mov
dec
xchg
in
rcrb
pusha
insb
aaa
lods
xor
jae
scas
test
sti
shr
add
inc
mov
pushf
mov
xor
andb
out
icebp
lret
cld
into
or
arpl
pushf
fcoml
xor
inc
jg
vpmovzxwq
cmp
pop
fs
test
sbb
fstl
adc
out
popf
iret
and
fstpt
stc
mov
push
pop
fs
out
cltd
push
mov
push
popf
pop
addl
int
pop
xor
mov
push
sub
pop
xchg
aaa
jns
jbe
sbb
mov
jmp
inc
sbb
jle
subl
lahf
nop
fisttps
outsl
lret
in
inc
pop
jbe
and
push
mov
fisubs
and
lea
jns
pop
sub
imul
mov
scas
scas
and
loopne
and
and
leave
arpl
hlt
mov
jnp,pn
insb
test
inc
into
cli
mov
cltd
and
js
out
popf
sub
addr16
adc
pop
push
enter
stos
leave
xchg
es
adc
mov
xchg
stos
jbe
add
js
shrb
hlt
add
out
out
and
movsl
xor
lds
mov
xchg
sbb
dec
imul
push
xchg
adc
jb
rcl
ljmp
out
jmp
decb
push
insl
fisubs
loop
dec
addr16
xor
xchg
sub
cmp
push
gs
imul
orl
sub
push
jno
rcr
xchg
xchg
js
jns
ljmp
push
arpl
shrb
cmp
dec
jne
xchg
xchg
inc
insb
adc
add
aam
adcl
dec
popf
lcall
sahf
lret
add
mov
sahf
add
jae
cmpl
push
inc
add
bound
mov
xchg
std
cmp
repnz
push
movsl
jl
es
push
mov
insb
sub
insb
and
hlt
dec
daa
xor
repz
xchg
and
inc
or
icebp
add
ss
lea
jns
push
adc
js
add
pop
les
in
outsl
pop
icebp
cmp
stos
in
out
iret
mov
loope
sub
inc
pop
sub
and
push
mov
imul
je
daa
xor
mov
hlt
out
xor
mov
arpl
out
pop
clc
add
mov
cmp
andb
mov
mov
and
or
lret
inc
sysret
out
dec
out
sbb
mov
jp
pop
inc
loopne
fsts
outsb
mov
inc
fiadds
push
inc
and
add
ja
lea
and
mov
sub
sarb
jmp
jp
push
call
hlt
fimuls
mov
inc
stos
xchg
pop
ljmp
mov
pop
int3
mov
xchg
rcrl
dec
sub
ret
or
xchg
dec
xor
dec
mov
xor
fwait
xor
xor
leave
enter
push
push
and
fmuls
xor
aam
sbb
jae
inc
pop
test
test
daa
ficompl
inc
mov
push
loopne
pop
ljmp
mov
in
xchg
cli
mov
pop
outsl
popa
xor
shrl
out
jne
xchg
shlb
cmp
inc
icebp
popf
adcb
fstpt
add
mov
xchg
add
xchg
lods
adc
ret
lods
pop
mov
nop
pop
and
std
pop
rcll
inc
and
pop
out
divb
sbb
dec
inc
cmc
popf
sahf
jp
push
inc
mov
xchg
mov
xor
sbb
and
dec
fwait
xchg
pop
fwait
in
sub
jnp
lds
mov
cmp
mov
mov
movsb
adc
add
in
stos
adc
adc
mov
shrl
mov
jnp
incb
leave
cwtl
pusha
dec
cmpsl
mov
nop
mov
xchg
lea
movsb
aam
sbb
jge
leave
push
std
das
out
sbb
xchg
rcrl
das
xor
imul
movsl
nop
xchg
or
repnz
sahf
cwtl
push
mov
xor
dec
and
std
out
sbb
cmp
xchg
xlat
sub
mov
and
xchg
mov
sub
mov
xchg
ljmp
or
xor
inc
dec
cld
in
shl
sub
adc
loope
out
test
push
pushf
and
aaa
jbe
fistl
popf
cmp
jae
push
dec
fcoms
sti
cmpl
fisttps
mov
int
push
jb
pop
or
sbb
add
loop
scas
sbb
xchg
mov
dec
cmp
pop
and
cwtl
gs
out
push
mov
inc
add
daa
cmpsb
xchg
test
pop
jle
inc
and
pop
push
mov
repz
repnz
sbb
mov
cs
sub
inc
mov
adc
mov
hlt
pop
lods
mov
inc
inc
popa
or
push
mov
cmp
aas
cmpsl
add
scas
aad
xor
das
and
push
xchg
icebp
push
dec
movsb
inc
xchg
icebp
push
fsubp
leave
loopne
dec
and
and
cmp
scas
repnz
add
pop
sbb
mov
inc
add
cwtl
outsb
leave
mov
inc
sbb
test
push
mov
int
mov
xor
sti
in
out
andl
call
add
mov
pop
ss
ja
gs
nop
sub
dec
pop
sbb
fsts
and
push
les
jg
pop
stc
mul
insl
mov
pop
cmp
jle
mov
jp
cmp
adcb
dec
jmp
dec
stos
mov
push
mov
test
jl
push
jg
movsb
sub
testl
or
mov
push
rclb
push
sub
inc
push
rcrl
ret
out
sbb
cmp
and
test
adc
dec
out
ja
jle
out
pop
mov
sahf
pusha
imul
or
daa
mov
fildll
pcmpgtb
adc
sub
mov
jb
and
sti
cmc
mov
adc
xor
pop
jbe
js
mov
iret
inc
aad
lock
pop
ret
inc
lock
jg
in
addl
adc
enter
jbe
cmp
xchg
stc
int3
addl
int
or
jno
les
fadds
adc
xchg
pop
iret
lcall
sbb
xchg
mov
dec
std
popa
xchg
push
push
pop
or
cmp
mov
enter
xor
incl
and
add
jl
lea
mov
popf
mov
mov
es
mov
xchg
jnp
adc
jp
sbb
jmp
ja
das
and
jns
mov
mov
adcb
cld
pop
xchg
push
mov
hlt
into
aad
jp
pop
js
cltd
mov
in
push
in
insb
cmp
pop
and
adc
movsl
lret
cmp
mov
cmp
ja
int3
inc
inc
subb
push
pop
mov
and
cmpsb
mov
dec
xchg
jbe
mov
dec
and
adc
xchg
sbb
mov
jne
xchg
insl
push
mov
xlat
rcr
clc
test
popa
lods
push
pop
xor
mov
dec
es
xchg
adc
and
mov
lret
sub
cmp
lock
xor
icebp
jp
xor
dec
sahf
xorl
push
das
xor
les
popf
inc
cmpsl
ss
popa
cltd
fbstp
out
cmp
lds
mov
push
faddp
test
insb
call
div
push
jl
sbb
sbb
and
cmp
jl
pop
call
jge
xor
xor
or
js
int3
filds
lret
orl
cs
cmp
outsl
mov
out
jns
fnstenv
jo
push
cltd
sbb
cltd
in
xchg
loopne
or
mov
mov
pop
adc
mov
and
out
test
push
jmp
out
cmpl
mov
in
jg
arpl
pop
jg
packuswb
pop
repz
dec
int
lret
movsb
xchg
lods
clc
add
dec
adc
sbb
or
xlat
and
test
push
dec
or
and
pop
pop
add
and
lea
sbb
int
es
adc
cmpsl
sbb
jnp
sub
imul
sub
pop
jbe
sbb
cmp
jmp
es
jb
mov
sub
in
addb
ret
push
iret
pop
orb
lods
sbb
pushf
jge
cmp
popa
mov
and
into
jmp
push
cmp
inc
jmp
mov
push
jb
sub
pop
and
imul
xor
xor
mov
pop
idivl
add
xchg
icebp
mov
dec
adc
sub
into
das
push
loopne
mov
mov
js
sub
cmpsb
iret
push
xchg
pop
leave
jl
jg
dec
mov
cs
test
xor
add
mov
test
shrb
outsb
mov
push
cmp
icebp
xlat
xor
fwait
ja
shrb
lods
dec
pop
out
push
sti
outsl
les
adc
in
addl
popa
loop
sbb
push
mov
in
aam
or
pushf
inc
sbb
test
int
test
jge
sub
jns
cltd
arpl
lods
inc
repnz
movsl
outsl
fxch
outsb
xchg
outsb
cvtps2pd
add
sub
mov
stc
loope
xor
dec
mov
outsb
repz
inc
movsb
pop
or
xchg
push
mov
mov
or
outsb
sub
and
es
sub
or
and
outsb
adc
add
mov
data16
int3
es
in
test
sbb
ficoms
jge
ret
in
dec
popa
sbb
xchg
sti
invd
push
mov
jns
mov
add
scas
ss
cs
cmc
mov
outsl
adc
addr16
repnz
or
je
inc
inc
pop
xor
int3
xor
add
insl
inc
aam
adc
outsb
push
movb
cmp
push
cmp
into
sbb
mov
jo
mov
sub
pop
jae
jp
test
jle
icebp
stc
dec
jle
xlat
sub
xor
incb
rcrb
leave
cmpsb
and
loopne
imul
rorl
fwait
or
fld
mov
mov
fisubs
sbb
popa
jge
mov
mov
nop
ljmp
aam
or
pop
xor
lods
and
cwtl
ss
shll
incb
repnz
inc
push
xor
fimull
xchg
add
dec
fnstcw
or
push
movl
add
test
mull
cld
mov
adc
mov
iret
in
pop
insb
xchg
xchg
pushf
lods
mov
pop
ljmp
inc
insb
or
mov
imul
sarl
rcrb
or
enter
xchg
sbb
lock
cmc
jmp
xchg
int3
xor
and
cmpsl
and
push
add
pop
icebp
xorb
xchg
pop
pusha
clc
sarl
xchg
cli
movsb
xchg
mov
clc
shl
cmp
push
aas
xchg
arpl
mov
or
pop
pop
xor
add
adc
imul
mov
mov
call
jnp
sahf
sbb
test
adc
data16
mov
test
push
mov
xor
push
int
dec
addr16
lret
or
stos
cmp
flds
and
dec
mov
push
cmp
cli
into
and
pop
adc
cmp
or
jle
mov
addr16
xor
adc
orb
and
js
add
idiv
cmp
push
sub
jnp
arpl
aaa
mov
add
adc
orl
and
outsl
sbb
std
repnz
mov
inc
mov
jo
test
push
xor
mov
lods
fcoms
jbe
cmpsl
mov
in
or
cmp
scas
add
pop
sarl
ret
bound
rolb
adc
sbb
test
push
sub
and
lods
dec
inc
sbb
scas
scas
mov
out
mov
sbb
call
je
repnz
pop
mov
sub
or
movsl
push
popa
dec
jecxz
sti
and
repz
clc
or
push
push
push
push
xor
or
or
or
test
pop
enter
hlt
testl
mov
rcll
sub
fwait
dec
or
out
cmp
sub
or
inc
insl
in
inc
sub
sub
mov
xlat
pop
mov
mov
loop
cmp
sub
in
mov
cli
cmp
pop
popf
jle
pop
mov
push
mov
xor
push
add
cmp
mov
lock
mov
cmp
mov
pop
xor
jg
test
dec
sti
and
arpl
push
jmp
dec
mov
out
into
sbb
mov
nop
loopne
xchg
dec
fiadds
cmp
movsb
into
inc
cli
fdivrs
aam
lahf
xor
lret
aaa
insl
out
scas
mov
orl
andl
jecxz
mov
nop
adc
cmpsb
cmpsl
icebp
fisttpll
rcrl
sbb
in
cmp
mov
aam
and
addb
movsb
cmp
xchg
dec
dec
cmp
add
je
stc
adc
stos
icebp
out
roll
sub
outsl
lods
xchg
and
inc
jae
xchg
mov
int
loope
push
repnz
adc
lret
enter
xchg
gs
jae
or
outsl
jno
ret
push
cmpsl
pop
mov
cwtl
push
mov
xor
sbbl
add
out
ljmp
xor
mov
sahf
mov
xor
sti
pop
xor
jnp
or
jb
or
and
pop
pop
insb
push
and
aam
fwait
xchg
mov
clc
add
pop
dec
mov
or
mov
mov
clc
sbb
cmp
or
aam
sbb
adc
int3
shrl
dec
mov
pop
dec
jb
or
xor
sub
fnsave
dec
sub
les
dec
in
sbb
adc
xchg
insb
jecxz
inc
mov
push
pop
jne
ret
mov
cli
cmp
sbb
xchg
sub
aad
insb
and
jp
into
fildl
insb
or
push
pop
inc
jns
xorb
adc
mov
insw
and
mov
jge
or
movsl
add
mov
cwtl
push
dec
push
rcll
hlt
scas
int3
imul
jecxz
fisubs
adc
lcall
lods
aas
mov
mov
jmp
icebp
sub
sbb
xor
mov
les
jb
gs
and
mov
cltd
sahf
aad
adc
jge
pop
xor
stc
enter
push
mov
cmpsb
lret
aaa
roll
in
push
mov
and
pop
push
fidivs
mov
lods
out
cwtl
or
daa
push
mov
mov
loop
imulb
ret
std
gs
lahf
add
das
jno
xchg
jnp
call
repz
push
lods
mov
loope
mull
dec
or
lea
add
addr16
inc
mov
cli
mov
rcll
test
fwait
and
in
jnp
add
pop
push
movsb
xorl
rcrb
out
out
mov
sub
test
and
pop
sahf
add
sbb
fstpl
inc
xchg
outsl
add
fcom
inc
inc
in
loopne
les
and
push
ljmp
xchg
dec
ret
insl
sbb
inc
dec
fbstp
push
dec
xchg
imul
lea
dec
pop
or
mov
adc
xchg
adc
pop
cmp
test
inc
mov
lock
ljmp
outsb
leave
cmpsb
push
jae
ja
mov
ret
push
cmc
pop
xor
adc
jno,pt
and
repz
cmp
mov
cmp
ss
xor
es
cmp
aaa
arpl
mov
popa
fisttps
inc
pop
pop
add
pop
psubb
repnz
and
test
pop
mov
mov
xchg
xchg
push
mov
sbb
lds
enter
mov
lea
ret
outsb
into
and
or
jge
fisttpll
push
les
mov
sti
mov
das
push
mov
leave
adc
pop
movsb
jmp
or
add
push
aas
and
fildl
add
adc
add
adc
stos
mov
xor
lea
or
jg
mov
xchg
jmp
mov
loope
outsl
idivl
addb
dec
adc
aaa
scas
addr16
jl
push
dec
mov
adc
mov
out
sbb
rorl
pusha
lret
fwait
int3
in
cwtl
shl
lock
repz
jne
sub
sbb
iret
mov
xor
ds
pop
push
sub
push
or
adc
xor
in
cmp
loop
xchg
xchg
std
stc
sti
dec
add
mov
dec
loope
inc
push
imul
mov
mov
pop
popf
jne
bnd
aam
mov
aam
aam
xchg
call
fsubl
out
mov
pop
hlt
fcomps
rorl
test
frstor
in
jmp
cmp
push
bound
fadds
stos
lret
xchg
inc
dec
leave
push
pop
sbb
loop
sbb
xor
mov
and
push
cmpsl
mov
xor
dec
push
jecxz
or
rcrb
mov
and
ret
dec
mov
cmp
adc
sub
jno
dec
outsb
lret
and
mov
jo
das
stos
sbb
in
dec
mov
aas
jge
inc
adc
sti
nop
jmp
arpl
mov
xchg
ja
imul
mov
xchg
add
in
stc
pusha
flds
out
fnstcw
imul
ret
ret
mov
add
xchg
int
ret
roll
inc
mov
in
fadds
adc
shll
or
push
sub
fwait
dec
sti
enter
mov
arpl
pop
or
rcrl
adc
and
loopne
mov
divl
xor
lcall
testl
sub
jg
jae
inc
xchg
sbb
ret
shrb
jge
xchg
or
inc
scas
jno
push
jl
loope
repz
xchg
negl
sbb
xor
daa
addr16
test
jge
addl
lret
rcll
rorb
scas
mov
cmp
les
sub
lock
cmp
enter
shll
jns
mov
push
mov
pushf
pop
fs
xor
sub
jbe
xchg
cmp
or
fmuls
daa
add
push
jo
xor
test
out
mov
add
test
or
arpl
mov
push
push
inc
jg
dec
ljmp
push
pop
cld
inc
cmc
mov
jmp
xor
fdivl
movlps
xor
mov
fsubs
mov
movsl
xlat
cmp
cmpsb
adc
lds
jae
das
xor
inc
mov
in
adc
mov
jmp
fiaddl
xchg
mov
lds
or
jl
fstl
dec
into
adc
jb
int3
cmp
cld
mov
pusha
mov
leave
orb
push
sti
jecxz
cltd
fnstenv
mov
or
in
inc
sti
pop
out
notb
cmpb
ljmp
stos
mov
sbb
sbb
adcl
imul
pushf
fwait
cmpsl
mov
push
stos
lock
fs
xor
xlat
fsts
lcall
mov
push
pop
inc
nop
jnp
jno,pt
sub
ljmp
adc
jmp
shrb
fildll
je
jae
sub
sbb
and
sbb
mov
xor
jae
fnsave
mov
mov
jae
mov
in
sti
mov
pushf
mov
add
pop
mov
je
xacquire
dec
pop
fsubs
mov
jp
mov
add
mov
push
xchg
addb
sub
jo
jmp
adc
dec
lds
inc
pop
shrb
xchg
mov
negb
xchg
mov
je
mov
shrb
lods
xor
xchg
mov
inc
aaa
in
les
push
inc
ficoml
daa
lcall
movb
sub
add
jmp
orl
mov
lds
movsl
mov
fs
adc
shlb
dec
gs
arpl
je
sbb
insl
xor
xor
or
mov
push
jo
test
xlat
mov
shll
pop
or
sti
xlat
fnstsw
lahf
pop
jns
cmp
xchg
sahf
jns
popa
loop
pop
inc
and
imul
inc
sarl
leave
push
xor
mov
pop
std
dec
pop
or
aam
xlat
xchg
repnz
inc
sbb
rcrl
xor
inc
stc
cmp
fisttpll
mov
test
stc
sbb
push
sahf
insl
jbe
pop
stos
jmp
adc
or
xor
push
mov
das
ret
stos
leave
leave
lods
insb
ffree
iret
fldl
jg
mov
iret
in
fwait
dec
and
movsl
fs
adc
loope
loop
in
repnz
ljmp
push
outsl
mull
push
push
in
sbb
inc
out
xchg
jbe
call
pushf
mov
test
popa
xor
das
out
sbb
add
repz
push
jle
fwait
ljmp
cmp
xor
int3
push
inc
jb
sbbb
xchg
mov
mov
je
pusha
ja
push
push
xorb
sub
dec
addb
fwait
xor
rcll
aad
repnz
outsl
mov
push
push
sbb
mov
mov
lcall
call
xchg
sub
push
xchg
insb
sub
shr
test
cmp
in
jb
cmp
inc
mov
xor
inc
push
mov
mov
loop
js
mov
loopne
adc
jne
js
into
and
call
test
dec
or
mov
xor
xchg
pop
mull
add
pop
cmp
movsb
pop
ret
ss
call
cmp
out
or
inc
in
mov
add
sub
pusha
push
mov
push
lahf
in
mov
ss
call
aaa
push
movsl
cli
lea
stos
sbb
sbb
jne
and
push
ja
shrl
mov
lock
movsl
outsl
fsubr
call
aam
xchg
mov
ss
jb
jg
movsl
xlat
test
gs
push
sbb
lea
pop
cmc
xchg
sub
in
mov
andb
push
xchg
lds
jns
andl
sti
push
mov
mov
and
popf
out
mov
inc
jecxz
in
scas
pop
leave
ret
cltd
ss
ljmp
cmp
pop
fs
int3
jbe
push
jmp
lods
sbb
sub
mov
cli
leave
pusha
pop
cmpsb
shrb
fdivl
jl
shll
int3
out
pop
cmp
stos
fcoms
pop
ds
mov
pop
mov
mov
arpl
call
pushf
sub
pop
adc
xchg
addr16
sbb
mov
xor
sub
lock
outsb
cmpsl
std
ds
gs
mov
adc
mov
out
jp
scas
test
dec
or
push
and
ljmp
jmp
test
adc
rorl
push
xchg
pushf
ds
jmp
pop
in
out
insb
clc
arpl
and
inc
cmp
xchg
sbb
fldenv
push
xchg
add
inc
pop
jns
mov
push
out
shl
rcll
pop
mov
ficomps
pop
pop
dec
push
xor
mov
fstps
mov
daa
jge,pn
mov
mov
mov
xor
pushf
jle
xchg
stc
pop
pop
ret
iret
cs
or
popf
xor
enter
mov
test
ret
dec
pop
stos
lret
aam
pop
jle,pn
pop
mov
sahf
mov
scas
jae
js
xchg
pop
imul
dec
push
dec
push
push
dec
ja
xor
cwtl
loope
pop
mov
insb
sar
cmp
sbb
data16
es
xchg
mov
sbb
xchg
lea
js
cmpsl
jecxz
adcb
mov
push
inc
aad
mov
fwait
insb
mov
xor
mov
cmp
popf
sub
inc
push
nop
push
dec
das
les
jle
into
pop
jno
jmp
dec
cmc
push
add
xor
xor
ss
cmp
sbb
jmp
cwtl
pop
loope
js
test
in
dec
mov
sub
add
orps
jmp
pop
sub
cmc
sbb
jp
mov
scas
imulb
ret
xor
js
pop
adc
andb
movsl
push
cmp
bound
pop
in
lahf
fstpl
mov
insl
stos
hlt
cld
xchg
sub
repz
and
lods
or
lret
pop
gs
lock
roll
push
push
fnstcw
mov
mov
pop
pop
popf
pop
xor
je
iret
fwait
add
lcall
dec
xchg
punpckhdq
jnp
jl
inc
test
mov
ret
lret
mov
clc
outsb
ss
lret
ss
push
or
movsb
movsl
push
inc
popf
xchg
adc
fstpl
cmpsl
out
adc
fstpl
daa
fstpl
test
iret
and
jne
stos
pop
inc
push
out
je
test
in
ljmp
mov
int3
sub
or
xor
arpl
or
in
dec
xlat
fs
cld
mov
mov
icebp
cs
jnp
mov
dec
dec
lds
aas
or
out
loope
arpl
mov
or
fs
jo
mov
or
stos
aad
stc
push
clc
pop
cmp
adc
mov
es
push
out
rcrl
adc
pop
mov
aaa
cld
loope
negb
pop
iret
push
ret
jmp
push
push
push
in
nop
repz
fdivrp
push
cmp
ss
mov
mov
jge
pusha
aad
or
les
imul
mov
shlb
repnz
cld
sub
xchg
scas
shr
sub
rcl
shlb
insb
inc
cmp
sub
sub
cmp
jae
popa
shlb
and
jp
sub
adc
and
or
jnp
push
xor
gs
inc
xor
stc
xchg
fdivr
shrl
sahf
fstpt
aaa
jecxz
adc
cld
sub
aaa
adc
mov
xchg
cmp
sbb
fildll
out
hlt
fistpl
inc
adc
adc
jp
push
fisttpll
add
jae
jp
mov
std
loop
xlat
test
popa
push
clc
cmc
mov
cmp
pop
cmp
stos
mov
loope
cmpsl
xchg
inc
jecxz
jmp
add
les
add
jmp
aas
pop
ds
pop
dec
pop
adc
and
leave
jg
mov
cmpsl
jge
pop
imulb
push
into
mov
insl
in
scas
loop
sbb
xor
xor
xchg
add
pop
inc
fidivs
mov
push
clc
or
xchg
pop
fstl
inc
mov
adc
popf
orl
imul
push
aam
stos
pusha
popa
jmp
ljmp
idivb
xchg
cmp
xchg
mov
and
lods
loopne
adc
and
pop
cmp
pushf
test
les
les
fdivs
insb
cmp
sbb
xlat
sub
fidivrl
outsb
ja
push
pusha
xchg
leave
mov
adc
gs
ljmp
pop
jbe
jb
ja
jmp
clc
stos
push
add
lcall
lcall
cmp
ss
pop
int3
and
es
mov
push
mov
aad
sbb
cmp
xor
xchg
shlb
mov
lods
ret
cmc
mov
aam
sbb
sub
lock
lea
jl
negl
sub
inc
xchg
call
scas
fcoml
dec
xchg
mov
call
push
stos
dec
xchg
jns
daa
xor
pop
mov
jbe
mov
jo
out
dec
lahf
dec
push
push
add
out
pop
xlat
mov
aaa
push
imul
jle
stc
xor
lret
mov
addr16
jg
mov
mov
or
or
ja
test
mov
ljmp
aam
adc
sub
fnsetpm(287
test
pop
bound
push
fimuls
repz
ja
mov
andl
pop
je
js
add
icebp
daa
adc
lods
mov
sub
fnstcw
pop
pop
test
loopne
lods
les
out
sbb
pop
pop
gs
sub
pusha
test
loopne
jnp
sbb
in
imul
lods
push
ja
lret
repz
add
or
jmp
clc
loop
sbb
add
push
cmp
call
aas
aaa
int
jb
shrb
push
mov
shll
pop
jb
and
rcrb
mov
push
lret
sub
push
inc
aad
mov
imull
flds
subl
cmpsb
mov
nop
jp
ret
add
sbb
inc
push
js
lods
xchg
sahf
lea
lods
jns
shrl
mov
jl
xchg
jle
popf
jp
sub
sbb
leave
jae
ja
cld
popf
sub
adcl
shll
cwtl
out
inc
jnp
mov
shlb
inc
iret
mov
rcr
jne
xchg
dec
call
into
push
cmp
sbb
scas
in
cwtl
xchg
gs
push
out
ljmp
imul
sub
lcall
dec
xchg
and
fwait
popl
mov
test
cli
jg
cmp
add
sahf
inc
add
sub
enter
dec
scas
icebp
sub
mov
jge
push
imulb
inc
leave
xor
sub
test
or
incl
into
ret
sbb
jne
aaa
jl
or
mov
les
pop
test
imul
mov
xchg
aam
ss
add
testb
xor
rcrl
in
inc
sahf
inc
jge
add
aaa
icebp
arpl
add
sbb
adc
inc
and
mov
add
mov
mov
fldl
fs
and
orl
inc
cmp
mov
jo
jg
outsl
leave
add
and
scas
idiv
hlt
ja
mov
aad
push
add
lock
std
cld
movsb
xchg
xchg
mov
fcoml
mov
push
testb
movsb
inc
xor
test
or
or
ja
int3
mov
shrl
inc
iret
mov
push
and
mov
mov
popw
or
jnp
rolb
decl
ljmp
jl
xchg
cmp
shll
std
adc
lock
adc
pop
int3
mov
das
push
call
mov
jno
cmp
pop
sti
mov
es
hlt
xor
jp
psraw
fistl
iret
cwtl
lret
ljmp
adc
in
sbb
mov
dec
xchg
dec
dec
dec
mov
sbb
xlat
fisttpl
ret
jp
popa
or
popa
dec
push
sbbb
arpl
cwtl
mov
xchg
cmp
decb
xchg
inc
aad
add
mov
sti
jb
cmpsl
dec
lea
adc
mov
in
iret
int
push
mov
xor
mov
es
int
cmp
test
inc
ret
sahf
std
xor
gs
cmp
xor
mov
inc
imul
push
mov
pop
cwtl
push
fsubr
insl
ja
xchg
inc
fcompl
loope
aad
mov
fsub
enter
out
adc
sub
lahf
mov
adc
lds
imul
in
pusha
jl
inc
sbb
fstpt
sbb
in
std
mov
out
aad
xchg
cld
cmp
cmp
inc
movsb
clc
jl
adc
sarb
jge
jae
inc
pop
mov
pusha
xor
es
push
lea
inc
loop
add
cmpsl
out
jp
imul
inc
jmp
daa
xchg
in
stc
leave
in
cmp
inc
icebp
or
xor
cmp
movsl
ret
data16
xchg
jns
jmp
lods
mov
cmp
jle
mov
or
jnp
xchg
scas
popa
gs
cmp
icebp
and
lods
sahf
add
or
lods
ja
mov
sub
nop
cmp
std
or
and
iret
shl
jge
jecxz
in
test
sub
xor
push
push
mov
fsts
lea
xchg
cmp
xchg
dec
add
pop
mov
stos
stos
incb
jne
or
lret
shll
sbb
adc
or
ret
jb
mov
fucom
insb
icebp
std
clc
xor
lods
sbb
or
push
cs
xor
mov
mov
xor
jle
aas
pop
repnz
pop
push
push
xlat
sbb
push
and
fistps
outsl
popa
sub
mov
bound
fimuls
mov
add
imul
xor
xchg
pushl
orb
inc
mov
lret
sbb
fisttpl
and
ds
pop
mov
aad
sub
jns
ds
roll
mov
iret
xchg
xor
aam
fidivrs
and
inc
sti
xchg
sub
cmpsb
fisubrs
fnsave
or
cmp
or
cmp
push
lahf
dec
aam
jmp
cmp
and
xchg
dec
xor
ja
sbb
push
push
and
xchg
jno
xor
les
inc
cmc
fidivrl
orb
rcrl
cmp
inc
sub
dec
mov
xchg
test
lock
fsts
xchg
dec
out
sub
pushf
fisttpll
xchg
add
cs
cmp
sub
sbb
and
push
mov
jno
fwait
xlat
addr16
ja
sahf
mov
or
and
sbb
dec
mov
je
inc
mov
mov
cs
lret
rorb
cmp
negb
mov
insb
mov
or
int3
mov
xor
pop
cmp
sbb
fdivrs
aam
sbb
adc
mov
pop
lods
and
push
sbb
lods
iret
xchg
aad
push
and
int3
loopne
fsts
stc
and
push
push
cltd
dec
adc
imul
jecxz
out
clc
subb
call
fwait
aam
cli
out
cltd
test
inc
ret
cmp
dec
imul
sub
mov
jo
test
and
dec
test
je
getsec
mov
ds
pushf
roll
mov
xor
dec
push
push
pop
sbb
pop
mov
or
cltd
scas
lea
and
flds
clc
shr
popa
dec
mov
test
inc
dec
aam
std
cmpl
andb
cmpsb
in
add
cmp
sbb
lret
leave
lds
jge
roll
ds
adc
leave
int3
mov
mov
cmpsb
xchg
adcb
pop
pop
icebp
jg
mov
out
stos
xchg
ss
mov
pop
pop
cwtl
std
fcmovbe
jnp
mov
aam
fs
or
dec
insb
adc
scas
inc
add
leave
push
fs
pop
mov
decb
pusha
sbb
pop
sbb
mov
movsl
aaa
jecxz
dec
insb
lods
sahf
sarl
rcrl
sub
pushf
mov
out
in
cmp
bound
arpl
loope
xchg
or
loope
scas
stos
fnstenv
and
in
adcb
jnp
xor
pusha
inc
sbb
imul
lret
cmp
dec
cmp
push
divl
mov
enter
push
mov
addr16
sarb
aad
pop
adc
sbb
lods
divl
idivl
inc
bound
pop
inc
push
sub
xchg
es
inc
jecxz
xchg
enter
pop
in
cmp
pop
fxch
add
xor
jno
imul
adc
loope
mov
dec
lcall
test
sbb
push
cltd
in
or
pop
int3
cmpsl
mov
std
push
jle
rcrl
cmp
xchg
sbb
jmp
push
jge
bound
cmp
sbb
aaa
ret
dec
pop
aas
in
test
cs
or
addl
push
cltd
sahf
stos
lds
int3
fsubl
dec
test
pop
push
mov
lcall
and
xor
jl
scas
jge
xor
int3
mov
push
bound
xor
pop
pop
in
and
push
addb
adc
pop
adc
and
in
aas
clc
rcl
mov
push
fmul
fldl
insb
xchg
pop
test
pop
cmp
hlt
sbb
cwtl
mov
adc
mov
xchg
sub
or
fucomp
out
pop
out
ficompl
movsl
adc
xchg
adc
push
jg
loopne
out
push
jne
mov
pop
sbb
dec
push
mov
lret
ltr
ljmp
pop
subl
or
inc
jge
rorl
xchg
cld
loop
insb
or
repz
in
pop
or
cmc
dec
adc
pop
pop
add
bound
fidivrs
dec
dec
dec
sahf
lret
jae
mov
inc
and
mov
jmp
push
jne
xchg
cmc
inc
out
lock
pop
sub
in
lcall
fs
das
xor
xchg
enter
push
push
dec
pop
cmp
mov
inc
dec
push
test
add
xchg
xchg
inc
mov
decl
stc
fs
push
mov
inc
clc
scas
stc
outsl
adc
mov
sub
sbb
scas
cmc
push
movsb
and
cmp
dec
or
pop
ja
in
inc
cmc
dec
mov
shll
mov
andl
jae
mov
jl
cmpb
imul
dec
les
cmpsb
fwait
sbb
or
lea
popf
push
dec
sbb
les
inc
shlb
sbb
jnp
jo
add
push
loop
fcmovb
popa
mov
add
out
rclb
push
push
cmp
andl
jl
popa
hlt
out
mov
andl
sub
pushf
cli
jnp
xor
jnp
incb
sbb
fsubrs
cmp
or
fisttpl
lods
ds
popa
and
clc
test
sub
push
addl
pop
mov
in
pop
movsb
jmp
xor
xchg
pop
shlb
insb
mov
cmp
icebp
jo
cltd
cmp
cmpsl
inc
push
outsl
mov
sub
clc
adc
andl
push
cmp
data16
xchg
call
cmp
cmp
xchg
xchg
decb
jecxz
lret
mov
pop
pop
xchg
mov
inc
mov
fs
pop
cmc
sbb
jne
add
daa
call
adc
sbb
inc
pop
sub
or
int
rcll
push
xchg
mov
push
loopne
das
cmp
add
mov
xlat
sbb
dec
sbb
push
imul
arpl
sbb
sub
mov
jb
je
sub
lahf
xchg
pop
mov
out
sub
cmp
sub
dec
xlat
or
adc
push
jg
xor
add
imul
int
lret
inc
jp
mov
dec
pop
sti
pop
mov
mov
or
lahf
adc
lods
xor
iret
movsb
jle
ja
inc
pop
ds
ss
loop
push
dec
test
push
xor
test
addr16
pop
outsb
out
scas
mov
insb
mov
inc
call
dec
das
mov
lock
mov
push
stc
inc
pop
sahf
inc
push
divb
mov
jecxz
clc
mov
cs
lods
cmp
in
repz
mov
sub
sbb
sub
fsubl
sbb
sub
stos
std
sub
xchg
mov
add
inc
pop
mov
push
jle
mov
mov
dec
fstpt
or
outsl
ret
mov
xchg
pop
mov
fistl
daa
std
push
cmp
rcll
into
rcrl
es
out
mov
jbe
inc
lret
mov
rolb
pop
mov
sub
push
mov
cmp
fidivs
arpl
and
cmp
sub
clc
sbb
mov
lahf
out
loopne
mov
pop
mov
lods
popa
pop
dec
or
in
addr16
mov
fs
mov
and
gs
subl
jmp
and
jl
sbb
add
push
mov
jb
clc
sub
sahf
push
xchg
xchg
pop
xchg
xor
mov
xlat
inc
pop
sbb
inc
xchg
pop
mov
icebp
push
fiadds
adc
inc
insl
div
andl
ss
out
cltd
outsl
sbb
cmp
dec
cmp
int
pop
lock
push
test
lock
cpuid
in
dec
lock
xchg
adc
outsl
add
add
dec
sub
or
fstps
and
push
jmp
and
add
sarl
sbb
insl
test
test
mov
mov
mov
lahf
push
mov
dec
pop
xchg
xchg
idivb
xchg
roll
adc
aas
adc
int
sub
pop
out
fisubrl
xlat
inc
clc
jmp
imul
nop
xchg
movsb
cmpsb
adc
push
push
push
repz
popa
mov
jle
repnz
icebp
cmpsb
fnstsw
enter
cli
inc
out
dec
test
out
imul
nop
mov
pop
shlb
cwtl
push
loope
sub
andl
dec
fidivs
cld
outsb
movsb
aas
mov
shlb
loopne
and
leave
jnp
xor
xchg
lods
xchg
xchg
cli
mov
add
ret
outsl
sub
lods
jmp
add
in
push
pop
add
push
dec
dec
cmpsb
xor
push
shlb
fsubrs
cmp
xor
and
dec
sbb
test
and
mov
jae
cmp
fsts
jmp
cltd
sub
inc
jne
bt
imul
mov
dec
xor
in
xchg
pop
sub
xchg
sub
push
stc
pop
add
out
out
or
bound
cmp
orl
mov
fmul
xor
lods
icebp
dec
adc
jb
push
popl
mov
mov
xchg
fcmovne
lret
mov
mov
and
scas
push
mov
and
jmp
jns
fisubrl
add
loope
dec
push
ror
test
pop
insb
popa
mulb
sub
sbb
pop
mov
mov
cmc
or
rclb
movsb
repz
ffree
pop
xor
je
mov
fmull
clc
nop
push
rorb
mov
arpl
xchg
in
in
mov
insl
outsb
int
loop
cmp
sub
rcrb
pop
sub
mov
adc
pusha
dec
push
nop
pushf
test
mov
mov
imul
hlt
aaa
mov
and
or
jne
rorb
hlt
lahf
jge
mov
cwtl
mov
cli
icebp
cmp
push
cmp
sahf
mov
fs
enter
pop
sub
repz
add
lahf
fistpl
and
das
dec
pop
push
add
jnp
sub
dec
movsb
pop
hlt
or
add
shrl
fs
mov
mov
push
scas
les
jmp
fcompl
sub
dec
xchg
xor
sbb
sbb
dec
pop
iret
add
sbb
pop
dec
sarl
pop
fs
fsubs
cs
dec
loope
cmp
aad
es
mov
test
fisttpll
lret
lods
aas
movsl
pop
add
aas
inc
insb
test
and
pop
push
jo
sub
stos
mov
mov
ret
jb
mov
or
xchg
mov
push
lahf
in
jecxz
jle
push
jl
add
insl
or
icebp
sub
aaa
iret
add
or
sbb
popa
testb
mov
xchg
or
lret
push
dec
roll
mov
inc
mov
push
das
into
mov
pop
jg
adc
in
inc
pop
xchg
xchg
pusha
ret
sbb
jbe
out
fstps
mov
mov
push
mov
dec
clc
frstor
stos
mov
jp
out
inc
lock
cmpsl
int3
cmp
insl
and
cmp
movsl
mov
jnp
inc
or
lcall
subb
fiaddl
jb
fbld
out
jns
push
and
sub
cmp
cmc
pop
pop
push
jmp
imul
out
pop
xchg
sti
push
leave
pop
sub
dec
xchg
mov
loope
or
mov
fwait
inc
outsb
out
cmp
loopne
sub
and
add
roll
test
cmp
xor
cmp
sbb
xchg
setnp
xchg
cmp
push
dec
jno
cmp
les
xchg
xchg
divb
fwait
outsb
push
push
or
in
ss
jmp
adc
add
sti
adc
sbb
fbstp
hlt
dec
mov
xor
mov
xchg
push
mov
pop
push
add
pushf
shrb
pop
or
push
push
mov
mov
sti
ret
lret
ljmp
xor
je
add
push
in
fnstenv
add
cmp
ds
loop
xor
mov
pop
addr16
ret
push
jbe
mov
and
rclb
dec
inc
scas
sub
xchg
mov
icebp
fists
cmp
lret
inc
inc
jp
xor
cmp
mov
xchg
out
jnp
xchg
addr16
mov
push
out
xchg
or
insb
icebp
and
loope
repz
test
xchg
xor
jno
mov
jg
outsb
int3
stos
dec
iret
and
push
pusha
mov
sub
adc
or
xchg
out
inc
sbb
xor
mov
bound
xchg
inc
iret
bound
add
out
rcrl
dec
ficoml
xchg
andb
mov
icebp
or
inc
mov
xchg
or
aad
test
or
cld
pop
mov
pop
ret
test
xchg
xor
jns
mov
or
inc
xor
jg
adc
imul
ja
mov
repz
adc
cmp
repz
lret
xchg
sub
popf
mov
sbbb
add
fnstcw
sbb
call
out
adc
rcrb
push
mov
mov
and
in
adc
inc
inc
sbb
hlt
stos
inc
sti
sub
mov
cmp
in
adc
cld
mov
jno
idivb
mov
push
int
mov
fistpl
or
sti
test
outsl
call
gs
out
lcall
fwait
mov
daa
push
std
dec
arpl
jmp
int3
scas
mov
adc
jb
inc
in
enter
stc
sbb
jg
es
cwtl
into
jge
jno
and
mov
cmpsb
fimull
sub
in
lss
addr16
sbb
add
insl
jle
fs
xor
cmc
or
push
cmp
gs
shrl
movsb
sub
stos
std
mov
or
aam
ljmp
add
jae
sahf
std
sbb
jnp
or
mov
mov
jl
jle
cltd
mov
pop
fs
mov
dec
and
arpl
loope
push
pop
repz
push
loope
mov
iret
push
cmp
add
sub
push
jnp
cli
daa
mov
sub
loopne
mov
xorl
sub
fwait
pop
sub
and
xor
pop
adc
mov
add
loop
imul
in
push
jmp
mov
pop
aaa
out
lret
sbb
movsb
push
repz
movsl
addr16
arpl
sub
adc
aas
cmc
pop
fwait
adc
lcall
in
adc
data16
and
dec
mov
mov
and
movsl
mov
mov
into
scas
decl
sbb
sbb
aad
or
rcrb
test
cs
loope
and
das
repz
jno
dec
call
cwtl
fidivl
nop
icebp
pop
or
lods
int3
adc
adcb
test
or
aam
cmp
add
je
pushf
in
pushf
inc
mov
mov
lahf
gs
xlat
xchg
lcall
ret
mov
jmp
pop
sbb
pop
sarb
sti
push
pop
add
push
dec
out
or
xor
rol
mov
mov
mov
fs
push
sub
enter
imul
xchg
cld
adc
xchg
add
rcr
sbb
cmp
in
pop
inc
aam
or
cmp
or
and
iret
xchg
inc
pop
inc
mov
xorl
jge
sub
xchg
cmp
xor
repz
push
jb
divb
jge
ficoml
les
aaa
sbb
shr
call
mov
fmull
jmp
xor
inc
fsubp
pop
mov
jecxz
mov
out
pop
cmp
mull
lret
shld
es
inc
mov
mov
xchg
fiadds
sub
mov
cli
in
mov
stos
mov
ss
sub
fisttps
popf
inc
test
daa
cmp
jo
sub
cmc
bound
stc
mov
lea
sbb
jbe
js
rol
pop
jno
or
leave
add
in
jge
incb
or
sub
dec
inc
cli
lea
mov
cmp
fldcw
inc
hlt
xchg
icebp
sbb
andl
push
aaa
sub
add
xchg
idivb
cli
in
cld
mov
outsl
or
xchg
jge
mov
adc
jp
sbb
popa
out
jns
lock
fnstsw
sbb
addr16
jne
push
rorl
add
add
sbb
mov
lods
cmpsb
imul
jmp
nop
in
jmp
das
mov
test
ret
in
mov
jnp
mov
jae
das
aaa
mov
and
inc
dec
push
lods
loop
pop
icebp
jmp
and
lock
sbb
adc
hlt
les
inc
inc
mov
xchg
sub
xlat
inc
fistpll
mov
pmovmskb
ljmp
and
or
ret
je
sbb
movsb
mov
or
insl
pusha
shrl
add
or
out
pushaw
testb
push
sub
jb
or
mov
fstl
das
pop
mov
pop
jns
mov
mov
or
lcall
es
jno
shlb
dec
jo
out
stos
test
loop
jne
cli
fmull
shll
and
sbb
fsubs
add
leave
dec
in
cs
insl
fmull
insb
sub
push
push
sbb
repnz
ret
inc
test
adcb
or
fidivs
jle
jo
mov
mov
shlb
xor
lods
pop
sub
pusha
aad
jo
pusha
ret
mov
andb
mov
jecxz
adc
and
popf
mov
xor
stos
jo
push
test
add
mov
or
sbb
dec
inc
loopne
mov
dec
pop
pushf
dec
or
mov
jne
mov
and
jnp
jae
xchg
dec
push
scas
pop
jnp
xchg
arpl
push
push
pop
mov
cmc
push
mov
imul
out
ret
add
xchg
jg
scas
jae
cmp
sti
outsb
filds
mov
jne
inc
or
xor
fisttpl
fwait
dec
pop
xor
jno
cli
aad
inc
cmp
xchg
inc
aaa
and
adc
aad
add
dec
xor
arpl
jg
ljmp
shrl
scas
lret
inc
xor
mov
inc
das
negl
xchg
cmp
inc
sbb
mov
jno
dec
mov
jbe
add
insl
mov
lret
push
add
xchg
sarl
adc
sub
push
dec
int
mov
repnz
mov
mov
cmpsl
push
sub
xchg
mov
pop
pop
jmp
xchg
call
cmpsb
and
or
insl
sbb
out
sbb
and
cmpsb
push
and
inc
lahf
xchg
incl
scas
lret
mov
mov
cwtl
ss
ret
mov
xor
mov
mov
mov
and
xchg
test
sar
shl
push
add
inc
ret
ret
in
dec
xchg
jle
lcall
test
ja
pop
xor
sub
incb
cli
imul
mov
imul
sbb
add
loope
push
and
leave
sbb
adc
pop
mov
mov
jnp
xchg
sbb
sub
pop
xchg
fbld
dec
pop
push
mov
dec
js
adc
cmp
jmp
inc
pop
sti
and
rcl
ror
mov
sub
push
mov
xchg
hlt
and
lcall
jnp
movsl
in
sub
lods
addr16
inc
mov
xchg
push
mov
or
sahf
stos
in
sbb
lea
pop
sbbl
mov
cmp
mov
hlt
xor
decl
pusha
and
mov
mov
popf
mov
jle
das
push
out
push
outsl
or
inc
jecxz
lock
sub
add
mov
shlb
leave
xchg
mov
out
loopne
lret
ret
fmulp
push
push
test
iret
mov
mov
push
push
mov
inc
pop
or
lret
cmc
int3
cmc
dec
loop
push
mov
xor
mov
mov
jmp
ret
sbb
repz
int
sbb
lea
cltd
mov
push
and
push
repz
jecxz
dec
mov
mov
inc
pop
lods
adcl
ljmp
add
mov
sbb
mov
out
fnstsw
rcl
and
popl
mov
xchg
jns
jo
or
sbb
lahf
movsb
pop
push
push
adc
sub
push
add
ja
outsl
sbb
push
sahf
sti
cmp
out
pop
or
ficompl
jg
rolb
scas
mov
jecxz
xchg
mov
and
cltd
aas
arpl
xchg
inc
repz
pop
shrl
nop
adc
adc
clc
lcall
stos
sahf
jp
clc
jecxz
adc
cli
cmpsb
push
je
and
push
push
mov
pop
in
lock
imul
scas
call
mov
xchg
pop
sub
mov
gs
std
jbe
lds
or
and
stos
adc
push
sbb
shrl
out
cwtl
and
pop
xor
and
pushf
in
sbb
sub
movsb
inc
jg
sub
scas
push
push
test
add
xor
test
enter
leave
ljmp
imul
les
sub
jge
cmc
mov
movsb
ficoml
arpl
push
iret
lahf
inc
xchg
mov
sbb
add
arpl
adc
fidivrl
dec
cmp
cmc
rcrb
cwtl
mov
loopne
mov
daa
xchg
pop
xchg
or
inc
pop
inc
ljmp
jle
inc
xor
jbe
mov
mov
popa
enter
call
mov
push
mov
lods
lcall
insl
adc
fstpl
mov
ret
ja
xchg
test
push
mov
sbb
dec
lods
sbb
jns
xchg
mov
mov
cmp
or
or
inc
lret
cmp
fldl
mov
lock
xor
or
or
shl
iret
pusha
cmp
sti
in
arpl
sbb
adc
out
pop
dec
lea
mov
pop
or
popa
pop
cmp
ljmp
or
fnop
xor
int
push
push
adc
and
and
fwait
mov
into
cld
pop
je
or
xchg
aaa
repz
fcomi
lcall
stos
push
adc
jmp
loopne
push
loopne
insl
popa
outsl
outsb
fnstenv
inc
ljmp
aaa
gs
dec
sub
adc
pop
adc
jae
addl
cmp
cmp
push
sbb
rcll
outsb
jp
dec
lret
mov
out
rclb
mov
enter
ficomps
pop
dec
cmovle
cmpsb
dec
ret
ss
cmpsb
fisttps
mov
cmp
lds
mov
inc
movsl
pop
cmp
jnp
push
cld
mov
mov
sub
test
fistl
testl
pusha
int
pop
andl
xchg
sti
lret
push
fmul
dec
fdiv
std
xchg
xchg
enter
inc
inc
xchg
lahf
scas
and
xor
push
data16
sti
aas
shl
adc
and
rclb
jmp
movsl
cmpsb
js
adc
popf
jno
push
xchg
sub
test
gs
fs
movsl
bound
and
ret
scas
repnz
jecxz
sbb
bound
outsb
int
pop
fidivl
dec
ja
test
xchg
xchg
mov
inc
xor
dec
or
std
ficoml
sbb
in
push
xrelease
cld
inc
std
leave
lea
mov
fidivrl
lahf
mov
rclb
fwait
push
repnz
xchg
mov
out
fisubl
test
mov
fbstp
mov
cmpsb
into
shrl
dec
or
subl
cmc
clc
clc
and
cs
out
xchg
pushf
add
std
sub
sub
xchg
rorl
xchg
out
popa
mov
loope
es
pop
ds
pop
mov
cmp
mov
or
xor
mov
imul
pop
sub
jne
jnp
repz
jns
ret
data16
xor
in
add
adc
push
mov
push
lcall
or
pop
dec
fwait
sbb
insb
dec
jno
sub
cmp
adc
add
push
cld
imul
mov
cmpb
sbb
mov
popf
call
or
cmpl
mov
icebp
and
insb
popa
dec
mov
mov
dec
out
int3
cli
adc
mov
fistpll
imul
fiaddl
shrl
iret
push
xchg
or
cmp
lock
jmp
xchg
xor
stos
push
mov
push
push
mov
xor
nop
or
pop
xchg
out
cmp
sbb
aas
aam
inc
mov
add
arpl
dec
std
in
ja
cmp
mov
popa
adcl
out
sub
pop
fidivrs
xor
add
inc
aas
inc
loope
in
cmpsb
add
mov
mov
inc
sbb
sub
clc
jmp
sarl
into
ja
in
sti
sahf
fnstsw
test
loopne
fdiv
mov
mov
mov
ss
lcall
mov
test
jae
cltd
pop
cmp
pop
lds
mov
es
xorb
xchg
imul
call
sub
push
fisubs
and
imul
enter
pop
mov
or
mov
fnstcw
inc
mov
in
cmp
std
mov
mov
gs
add
sar
arpl
mov
xchg
xchg
sbb
dec
imul
clc
mov
lock
push
dec
mov
cmpsb
or
mov
aaa
cld
test
and
arpl
and
aam
adc
mov
mov
mov
pop
repnz
stc
inc
out
xor
add
sbb
andb
sahf
pmaxub
rolb
pusha
push
ret
repnz
daa
add
test
pop
add
fcomps
push
cltd
imulb
sbb
shr
jnp
in
loope
outsb
addb
fdivl
xchg
xchg
xchg
adc
jnp
dec
movzbl
iret
movb
fs
mov
je
push
mov
in
sub
dec
or
mov
pop
or
enter
lea
adc
into
inc
adc
dec
outsb
call
es
pop
adc
sub
sarb
push
mov
xchg
clc
cwtl
movsb
jbe
dec
adc
sub
jmp
decl
pop
push
jp
scas
and
jg
sti
adc
jo
test
push
pop
cltd
sbb
repnz
push
add
iret
test
arpl
in
or
into
xor
or
add
imul
js
ror
sub
inc
sbb
or
sbb
sahf
repz
ret
mov
test
xchg
popf
adc
inc
es
in
sub
cmp
dec
imul
inc
fxch
fistpl
mov
pop
push
inc
in
mov
repnz
add
int3
add
sbb
in
mov
pop
jo
sub
aaa
xchg
push
pop
das
sbb
sbbl
xchg
je
pusha
dec
push
cmpl
int
cmc
aam
in
into
inc
clc
jbe
inc
ss
stc
inc
and
push
dec
rorb
dec
sbb
sub
add
inc
sahf
xor
cli
pop
dec
add
aas
lret
cmpsl
lret
nop
mov
mov
jno
js
popa
dec
xchg
pushf
mov
fs
enter
push
xor
movsb
xlat
aad
orb
xor
pusha
sbb
clc
mov
test
fwait
les
pop
xor
cmp
push
push
mov
sub
sub
inc
cmpsb
xchg
add
loope
js
cmc
push
xor
lea
test
outsb
pop
ror
adc
call
ror
cld
and
dec
repz
lods
inc
pop
ljmp
std
cltd
mov
or
cmp
inc
jns
sbb
fsubrs
clc
lds
je
stos
lods
ja
inc
ret
jg
cmp
sahf
jo
jb
adc
in
enter
cmp
clc
cld
shll
insb
sbb
inc
cmp
cmp
push
cmpsl
jecxz
xor
fimuls
pop
jae
cmp
sbb
scas
pop
push
xchg
out
or
inc
pop
jl
pusha
or
ss
lcall
cmp
pop
jp
dec
fisttpll
lahf
lods
gs
bound
pop
ror
jecxz
pop
cmc
dec
in
and
and
jle
imul
into
inc
mov
mov
dec
xchg
mov
cld
fwait
scas
rolb
gs
lahf
adc
bound
adc
adc
in
mov
out
push
or
cltd
test
subb
mov
outsb
test
imul
jle
and
xchg
insb
push
jns
cmp
mov
mov
lahf
sbb
or
dec
rol
mov
outsb
addr16
int3
mov
cmp
fdivs
inc
inc
push
and
jns
jo
mov
fiadds
stos
int3
std
jno
arpl
repnz
mov
adc
out
shrl
xchg
adc
rorb
pop
push
mov
das
jno
fwait
shrl
sbb
test
imul
push
push
xor
mov
dec
repz
and
push
mov
jg
mov
push
pop
jl
lods
aam
in
cwtl
pop
adc
ret
xor
fwait
es
jae
aaa
orl
mov
mov
sbb
sub
cmp
int3
pop
inc
jp
xor
push
arpl
push
xchg
mov
outsb
mov
push
or
popf
test
and
stos
clc
cld
mov
jno
or
popf
cmpsb
xchg
cli
cmc
push
insb
mov
bound
repz
rorl
cmp
outsl
mov
add
bound
lds
insb
sub
mov
and
or
popa
sbb
sub
fwait
test
je
popf
movsl
xor
stos
xchg
shrl
ror
xor
shl
cmp
adc
insl
insb
pop
loop
adc
inc
in
icebp
cmovae
sbb
mov
dec
iret
jno
out
lcall
sbb
push
xor
jne
pop
mov
adc
cmpsl
sbb
xor
push
addr16
pop
lret
ret
pop
pusha
loope
jnp
sub
add
shll
sbb
add
ljmp
arpl
sub
das
pop
fwait
nop
ficoml
sub
sbb
icebp
fdivr
xor
inc
cmpsb
mov
lret
dec
push
cld
aad
xor
pop
cmpsb
dec
das
cmc
mov
jg
jp
dec
icebp
mov
movsl
dec
mov
jle
xchg
mov
mov
aam
mov
mov
dec
cvtdq2ps
push
ja
shr
jne
sti
test
mov
cmc
es
xchg
push
or
or
lahf
cs
mov
lret
rcrb
jl
test
mov
jns
les
lahf
xchg
mov
or
sbb
xor
sub
cli
inc
pop
aam
cmpsb
insb
or
repz
pop
adc
xlat
lahf
jecxz
cmp
lds
mov
cltd
out
mov
repz
xchg
cmp
ljmp
and
xor
into
call
test
scas
pop
ja
xchg
or
cmpsl
fdivr
sahf
fxch
in
and
dec
cld
mov
aam
insb
enter
int
shl
mov
addr16
lcall
mov
mov
mov
lock
cmpsl
cmc
aad
loop
add
cmpsb
mov
in
sub
dec
xchg
push
out
aam
test
dec
shrb
mov
in
ror
das
adc
imul
mov
and
sbbl
push
das
push
push
sub
mov
ret
scas
jo
add
pusha
sbb
or
mov
jne
aaa
inc
fildl
sbb
sbb
xor
dec
xchg
cmpsb
iret
cmpsl
imul
scas
aas
cmc
mov
ss
jbe
mov
xor
aaa
jge
repnz
cli
push
dec
inc
scas
adc
mov
cmpsl
push
mov
mov
cltd
pop
int3
out
call
shrb
mov
xor
mov
xchg
cmp
push
js
dec
pop
pusha
mov
divl
push
gs
mov
mov
daa
in
pop
imulb
insb
mov
cmp
mov
pop
dec
xchg
lahf
pop
mov
or
test
jg
add
and
add
ja
aaa
push
sbb
xor
xchg
fwait
adcl
ljmp
dec
stos
xchg
xlat
aam
notl
mov
leave
sub
pop
jp
pop
and
push
sti
dec
sti
jmp
es
mov
xchg
sarb
mov
jg
push
out
loop
add
in
jne
xchg
cmc
into
testb
fcoml
add
mov
ja
mov
push
jno
sarl
ss
lcall
push
fisubs
mov
clc
sbb
dec
cld
xchg
iret
mov
pop
addr16
and
mov
fmuls
add
shlb
loop
out
mov
push
dec
mov
fwait
das
cmp
sbb
pop
dec
lock
call
fisubrs
mov
fdivs
insl
insl
jo
dec
sahf
pusha
das
dec
push
mov
sbb
mov
fldln2
mov
int
repnz
iret
test
loop
loope
jns
cmp
cwtl
call
imul
cmp
dec
cmp
pop
loope
jbe
lds
shl
bound
inc
js
cmp
xchg
jb
shr
lahf
fistl
lret
movsl
rorl
testb
sbb
dec
push
adc
rcl
fldl2e
bound
mov
xchg
inc
call
jmp
mov
inc
mov
dec
into
jg
insb
std
scas
mov
stos
fistl
adc
repz
ja
aad
sub
fildll
jmp
mov
pop
jp
shl
push
int
js
mov
mov
stos
ret
js
sbb
cld
popa
mov
cmpsb
into
shrb
mov
popa
jl
mov
out
mov
fcompl
rol
daa
mov
jno
pop
loope
and
pushf
aad
adc
mov
mov
addl
mov
mov
push
push
cmp
inc
push
testb
jmp
mov
mov
xchg
fisttps
and
pop
stos
push
scas
inc
in
mov
pop
stos
mov
fcmove
or
or
push
lahf
ja
adc
push
aaa
fildll
and
jmp
repz
test
push
data16
imul
mov
loope
xor
pop
pop
mov
inc
pop
enter
out
ss
dec
imul
inc
movsl
aaa
rol
insb
inc
adc
add
popf
cmp
or
and
mov
xor
adc
xchg
gs
jecxz
in
xchg
jbe
int3
imul
fimuls
lds
sbb
adc
xorb
mov
daa
cwtl
stos
test
in
dec
xchg
dec
sub
xlat
dec
in
adc
bnd
sbb
ljmp
arpl
repnz
mov
hlt
and
dec
adc
arpl
mov
adc
adc
jge
fdivr
shl
in
mov
iret
jo
or
in
leave
fildll
dec
ret
mov
inc
jp
js
mov
mov
jmp
pop
adc
push
jnp
repnz
xor
jmp
sahf
pop
jle
mov
or
xor
mov
mov
sbb
lds
shl
or
test
aas
xlat
inc
icebp
mov
jne
xchg
cmp
inc
into
out
rcrl
or
cwtl
inc
repz
fxrstor
aad
loopne
mov
mov
loope
add
loopne
inc
adc
inc
dec
inc
les
dec
xor
adc
jmp
xor
pop
lods
pop
lcall
aam
jecxz
jmp
mov
insl
mov
test
push
out
idiv
or
fidivrs
xlat
ljmp
rorb
shlb
dec
aaa
inc
lea
pushl
cmpsl
jae
or
lea
incb
mov
ds
hlt
push
out
outsl
mov
nop
loope
jle
arpl
ja
gs
dec
int3
lret
jg
or
das
inc
inc
dec
dec
les
iret
push
pop
dec
xor
enter
sub
cwtl
sbb
pop
popa
loope
and
jge
bound
xlat
nop
jg
mov
cmp
dec
sub
xchg
cmp
mov
mov
inc
dec
fistpl
loope
rcrl
xchg
popf
ret
add
mov
int
add
fwait
adc
dec
push
pushf
sub
ds
cwtl
xor
dec
mov
stc
insl
xor
mov
cs
or
hlt
xor
jmp
sbb
cmpsb
push
imul
iret
and
xchg
imul
or
rorl
idivl
out
push
arpl
push
mov
fs
adc
sbb
enter
shll
aas
in
jg
hlt
xor
pop
jecxz
insb
cmp
cmp
add
rcl
jb
test
add
lods
js
aam
js
lods
imul
mov
dec
pop
shrl
xor
icebp
sub
push
jmp
lods
int3
lds
and
addr16
dec
inc
out
dec
xchg
stc
ljmp
repz
mov
pop
push
sahf
xchg
std
out
pop
xchg
or
pop
xchg
and
lret
sub
pop
cmc
cmpsl
stc
mov
adc
add
jge
cmp
clc
mov
rcl
data16
jne
call
xor
int
jbe
in
push
mov
sbb
xchg
push
dec
xor
fldl
xchg
xchg
mov
into
ficoml
jmp
and
daa
mov
test
data16
jmp
aas
or
inc
cmp
push
fwait
sbb
mov
imul
mov
sub
push
insl
cmpsb
fwait
negb
jge
iret
add
cmp
xor
outsl
mov
cmp
jb
loopne
int
aaa
repz
je
jae
jmp
mov
mov
sbb
rcr
sub
dec
in
divl
fadds
cwtl
xlat
lret
jae
push
repnz
add
loope
loopne
mov
minps
sbb
dec
inc
cwtl
inc
stos
icebp
imul
aaa
mov
pusha
jecxz
push
cmp
out
mov
loope
adc
addr16
lock
pop
enter
repnz
dec
ds
adcb
stos
ja
lock
imul
lock
xchg
rorb
push
les
add
inc
outsb
pop
xor
push
sahf
arpl
faddl
sbb
jo
addr16
lret
jbe
test
es
arpl
or
dec
inc
push
mov
stc
ret
ljmp
mov
lods
jbe
lss
xorb
aaa
outsb
paddb
mov
push
movups
inc
pop
adc
mov
insb
shlb
xor
sub
push
out
ja
fisttps
imul
nop
push
add
aad
jmp
subb
lods
out
addr16
xchg
inc
pop
leave
fs
mov
rcrb
es
imul
mov
jbe
inc
out
cmc
std
mov
gs
fsts
nop
or
lahf
cmpsl
mov
pop
aas
cmpsl
cwtl
lock
sub
mov
popf
test
std
add
imul
popa
fmuls
sbb
pop
es
outsl
jge
rclb
dec
sahf
test
push
cmpsb
adc
into
dec
inc
ja
roll
outsb
and
mov
and
jnp
mov
sub
shr
mov
insb
addl
push
icebp
hlt
in
fisttps
into
rcrb
or
leave
fucomp
or
test
inc
sahf
cmp
pop
jecxz
xor
add
xchg
daa
inc
jae
addb
icebp
in
sbb
scas
mov
cmpsl
inc
lds
adc
popf
cld
lcall
xchg
mov
xor
mov
xor
bound
lock
popl
sub
sahf
scas
adc
mov
xchg
pop
insl
add
cmp
jno
or
xchg
out
add
call
jp
pop
adc
lret
out
out
ljmp
inc
jae
test
fidivs
dec
pushf
adc
hlt
jo
mov
shll
rcrb
lcall
mov
pop
jmp
sbb
lods
ljmp
bnd
dec
lock
loope
popa
dec
addr16
int
pop
xchg
lods
out
xor
stos
daa
aas
repnz
cmc
shr
iret
xchg
xchg
ret
cmp
in
rclb
add
decb
adc
dec
shlb
push
and
pop
mov
inc
mov
jmp
push
scas
mov
out
push
or
shll
push
add
popf
jmp
icebp
jb
mov
mov
mov
pop
and
xlat
push
jb
xchg
fs
jo
movsb
insl
cmp
xor
pop
xor
adcw
xchg
lock
mov
cmp
scas
je
js
test
popf
jmp
jae
cld
cli
mov
jmp
pop
out
mov
xor
mov
lahf
and
gs
pusha
rorl
mov
pop
js
lret
add
mov
dec
rcrb
cmc
xor
outsl
ret
add
xchg
data16
aas
fidivrl
mov
or
or
mov
fwait
push
xchg
mov
jg
pop
xlat
imul
jge
push
fwait
mov
push
lds
adc
fistps
hlt
mov
xor
pop
fsubrs
dec
mov
pop
dec
les
enter
arpl
xor
push
pop
pop
push
jae
mov
mov
aas
push
push
or
pop
arpl
or
mov
push
jne
mov
movsl
xchg
out
cmc
mov
lret
jno
movsl
rorb
cmp
imul
and
cld
iret
mov
std
icebp
addr16
sub
fs
mov
cld
lods
push
cmp
leave
dec
sub
dec
xor
shl
cmp
int
scas
xor
ret
dec
jno
imul
mov
aam
mov
inc
add
add
mov
test
sbb
mov
push
mov
fcomps
sbb
mov
mov
fs
pop
daa
jo
and
xor
pop
mov
jne
popf
pop
cmp
sub
ljmp
int
push
xor
test
add
xchg
loop
icebp
mov
mov
and
jl
lds
dec
dec
pop
sahf
sarb
aas
out
xchg
mov
loope
add
outsl
test
dec
js
fisttpl
cld
jmp
xchg
sub
dec
in
dec
int
insl
stos
mov
bound
mov
lahf
or
mov
fisttps
aad
and
adc
push
movsl
movsb
and
inc
xor
cmp
xchg
aaa
cmp
dec
mov
jg
or
roll
or
inc
stos
scas
movq
pop
and
scas
push
jecxz
inc
mov
enter
cwtl
dec
fwait
out
or
icebp
icebp
decb
inc
int3
mov
push
mov
cmc
add
push
cmp
cmp
shl
or
push
outsl
or
int
test
clc
loopne
jb
arpl
push
aad
loop
fsts
in
data16
scas
or
cltd
inc
pop
cmp
inc
iret
jle
je
add
loope
or
pop
loope
and
or
mov
cli
in
mov
pop
push
lea
jae
mov
jp
dec
les
dec
ret
xorl
fcomps
fld
mov
mov
ret
or
test
je
sub
ficoml
sub
xorb
cli
in
add
cmpsb
mov
mov
rcr
hlt
jge
clc
push
cmpl
aam
repnz
roll
int3
aad
ret
das
or
cmp
jge
pop
lods
test
pop
xor
jle
add
dec
and
mov
pop
nop
daa
imul
add
xchg
std
dec
or
cmc
imul
jb
sub
adc
jle
lcall
sti
inc
xor
inc
xacquire
cmp
or
insl
mov
mov
jmp
pop
js
fwait
scas
push
push
leave
jns
js
cmc
lahf
test
mov
push
cli
jmp
inc
ss
push
xor
jae
and
lds
xchg
cli
out
sbb
aad
or
out
mov
jno
jge
or
into
dec
xchg
sbb
and
cmp
sbb
subb
push
stos
mov
cs
add
loop
mov
xchg
mov
hlt
out
hlt
or
nop
ljmp
push
sbb
dec
dec
and
push
adc
inc
imul
enter
ja
imul
sub
dec
lahf
dec
cs
mov
cmp
inc
adc
leave
inc
les
cli
lea
addr16
mov
sbb
push
in
cli
fisttpll
cmp
clc
lods
mov
les
pop
mov
shr
cltd
sbb
and
movsb
jge
adc
jnp
int
insb
mov
lcall
rcrb
inc
out
pop
xorl
sbb
jle
xor
std
cmc
loop
mov
and
jmp
adc
xor
jbe
pop
mov
imul
ja
dec
xlat
jbe
sub
dec
jo
dec
xlat
fadd
or
add
pop
xchg
mov
jno
mov
xchg
push
sub
sbb
jp
or
inc
ret
in
xor
fildll
push
pusha
out
loope
push
ret
mov
jno
xchg
lahf
std
jg
rcrb
cmp
jg
push
and
test
cmp
pop
xchg
xchg
adc
cmp
lock
cwtl
test
xchg
xorb
daa
jl
cmovns
jecxz
out
mov
push
xor
dec
inc
sub
in
lret
icebp
lds
inc
push
movsl
or
pop
mov
mov
xor
js
mov
mov
fidivrl
stc
ljmp
fs
jg
int3
xor
lret
cmp
and
leave
call
push
pop
xlat
test
add
inc
mov
mov
aad
jp
imul
or
jae
mul
mov
test
outsb
lret
pushf
movsl
sti
xor
sbb
or
stos
enter
mov
mov
dec
mov
cs
popf
jne
mov
pop
or
dec
or
mov
ljmp
sbb
add
rorb
pop
inc
lea
fldt
shrl
or
mov
and
push
xor
and
std
pop
popf
jl
push
or
mov
mov
filds
xor
jb
xor
and
adc
js
jne
test
pop
rcrb
scas
fsubrl
xlat
or
dec
jbe
lea
and
ja
mov
mov
cmp
inc
mov
movsl
inc
jae
or
push
aas
cmp
and
jg
int
icebp
xchg
dec
jns
dec
fsubrl
ud1
ja
dec
pop
std
dec
or
adc
cmp
xchg
iret
lret
in
fucomp
movsl
xor
sub
dec
jne
jmp
or
add
daa
jp
call
aad
dec
mov
jg
mov
jbe
imul
sbb
mov
nop
test
lahf
je
xor
sbb
std
push
rclb
ds
mov
add
loope
sbb
sti
movsb
aaa
mov
add
add
cld
mov
pop
dec
enter
rclb
dec
xor
leave
mov
jae
shrb
xor
jl
and
mov
pushf
and
sahf
mov
dec
dec
movsl
dec
rclb
ret
hlt
inc
add
in
ret
es
aas
push
and
sub
aad
xor
jecxz
dec
pop
dec
xchg
out
test
out
in
and
sub
mov
push
mov
pop
lods
inc
out
pop
inc
orl
add
mov
xor
repnz
inc
jo
cmp
pop
mov
icebp
push
test
push
xor
das
mov
movsl
loop
aam
xor
push
insb
test
fisttps
inc
pop
sub
sub
lret
int3
dec
maxps
dec
enter
cwtl
iret
call
xor
subl
cs
subb
stos
outsl
dec
andb
jb
rorl
lret
test
push
pushf
enter
hlt
aas
fdivs
fcmovnu
dec
sub
xlat
gs
dec
pop
push
out
add
in
xor
mov
in
jg
nop
loope
out
mov
addr16
mov
fnsave
jl
or
ljmp
cmp
dec
inc
inc
push
add
hlt
fs
jl
inc
cmp
cmp
cmp
pop
rorb
pop
or
mov
mov
outsb
repz
test
je
cmpsb
cmpsl
add
imul
xchg
mov
sub
adc
mov
data16
lret
adc
xchg
pop
cmp
and
popa
aaa
and
push
in
xchg
int
ds
fnstsw
je
pop
in
lahf
cmpsb
push
andb
out
push
add
mov
push
js
inc
cmovo
out
sub
test
jmp
in
jbe
inc
xor
jne
adc
lahf
hlt
sbb
mov
mov
mov
std
adc
je
mov
jns
xchg
pop
push
mov
add
cwtl
fcoms
in
xor
xchg
fmull
jae
or
outsl
daa
cmp
in
dec
xor
shlb
push
test
insl
in
int
mov
adc
sub
int3
jno
jecxz
mov
je
mov
pop
add
mov
cld
cld
mov
xor
cmp
xchg
sub
or
and
push
pop
add
aas
xor
xor
jns
int3
adc
mov
and
xor
jae
xchg
fwait
mov
mov
out
vpsubusw
mov
mov
push
mov
movsl
sbbb
insb
ficompl
mov
jo
push
cmp
push
and
dec
fisubrs
movsb
in
inc
inc
and
in
dec
fcomps
jns
fcompl
cmc
mov
mov
jns
out
incb
fmull
stos
inc
icebp
mov
addr16
jns
dec
jns
push
mov
dec
pop
iret
data16
jno
cmp
adc
test
fdivs
dec
pminub
mov
les
stc
xchg
mov
mov
pop
sub
aas
cld
loopne
pop
fimuls
scas
sub
adc
jp
test
mov
fcoml
shlb
and
daa
mov
out
stos
faddp
insb
ljmp
sub
int3
sbb
fsubs
fsubrl
adc
mov
add
inc
lods
arpl
pop
lock
mov
mov
xchg
push
movsb
loope
inc
stc
cmp
xchg
xchg
stos
push
mov
mov
add
in
rcrl
push
aas
and
push
rol
leave
inc
clc
pop
popa
sub
std
test
sarb
sbb
push
pop
push
sbb
neg
pop
push
or
mov
mov
adc
out
push
xor
add
cmp
push
test
fwait
lds
mov
popa
lods
leave
cltd
fucomi
hlt
jmp
test
jns
mov
imul
mov
dec
fildl
mov
mov
mul
ja
jl
inc
aam
leave
mov
hlt
push
loop
sub
and
out
loop
out
lret
push
push
adc
inc
in
and
ror
aam
shlb
jns
push
xchg
or
mull
ljmp
adc
xchg
add
out
mov
push
in
jle
mov
lea
sbb
sbb
dec
fbstp
push
ja
xchg
lods
aad
enter
jle
push
in
jbe
repnz
pop
aas
out
test
jecxz
adc
pop
aas
jecxz
mov
mov
clc
mov
addr16
cmp
inc
pop
popa
lods
xchg
into
rcl
or
jae
mov
sub
add
pop
adc
repz
cmc
jmp
andb
mov
das
out
daa
add
mov
adc
pop
inc
cmp
adc
lods
mov
push
pop
xor
lds
mov
or
out
ret
add
fwait
pop
pop
lods
and
in
fcomp
mov
pop
outsb
out
repnz
jne
incb
test
popa
xorl
push
outsb
xorb
inc
in
mov
and
xchg
xor
add
add
jo
adc
test
sub
popf
push
mov
xchg
out
lea
mov
stos
push
out
fdivs
dec
xor
pop
pushf
fiaddl
daa
push
insb
shll
pop
fcoml
in
cmp
push
ret
xor
sub
ljmp
outsl
dec
aaa
sar
and
sbb
repnz
loop
inc
lcall
ret
dec
push
rclb
or
movsb
mov
loope
js
sbbb
loope
jo
rcrl
xchg
das
testb
inc
sub
jp
pusha
movsb
aaa
popf
lods
lds
stos
stos
jne
cld
mov
dec
mov
sbb
add
inc
clc
lods
pop
pushl
mov
push
repz
scas
mov
in
pop
imul
ret
cmpsl
and
fcmovu
pop
sbb
cmp
mov
cmpsl
aas
push
out
xchg
pop
xchg
imul
aaa
mov
jl
mov
aad
mov
jo
jo
inc
mov
movsb
sbb
inc
sbb
mov
cs
and
cmc
mov
inc
pop
xlat
xchg
test
popa
hlt
push
popf
sbb
xchg
cmpsb
outsl
cmc
jg
stc
sub
and
fwait
loopne
test
aad
pop
rorb
fildll
clc
cmpsb
xor
adc
pop
ret
jg
inc
dec
xorb
push
test
mov
dec
mov
loope
imul
cmpsb
xorl
leave
mov
jns
jns
ffreep
push
filds
ret
cmpsl
inc
divps
jecxz
movsl
push
cs
cwtl
shl
das
imul
leave
in
add
cltd
stc
idiv
test
sti
push
daa
xchg
mov
cli
mov
fsubr
mov
inc
int3
inc
popa
mov
mov
dec
cmp
pushf
outsl
pusha
popa
xchg
pop
xchg
cmc
jbe
arpl
dec
push
cmp
subb
lods
das
pop
xchg
int
insl
loopne
mov
test
popf
dec
fdivl
cwtl
sarl
jns
mov
cltd
inc
fistps
mov
repz
mov
jmp
adc
sti
push
fisttps
fildl
sahf
or
aad
les
xchg
push
lret
jo
sbb
loop
inc
xchg
xchg
test
jp
pop
fidivrs
shrl
iret
xor
xlat
sbb
sbb
xchg
fmull
mov
xchg
idivb
je
mov
dec
int3
stos
jle
inc
xor
jp
std
popa
lds
pop
outsb
sbb
push
js
xchg
mov
push
push
out
or
adc
and
pop
addr16
sub
inc
push
arpl
insb
sbb
insb
sahf
cmc
push
xchg
mov
call
in
nop
sbb
sub
mov
sub
pushf
mov
mov
insl
sub
or
iret
push
dec
push
dec
movsb
fldt
adc
es
mov
mov
cmp
fcoml
mov
dec
pop
inc
add
cmp
xchg
xchg
or
lcall
stos
shr
clc
push
and
mov
inc
or
outsb
pop
mov
inc
mov
inc
jecxz
outsb
mov
inc
enter
sbb
lret
into
std
add
cmp
rolb
std
int3
mov
test
outsl
jle
and
iret
or
aad
push
fstpl
push
sbb
add
push
lret
xchg
cmp
ljmp
mov
sti
xchg
test
rcll
leave
pusha
xchg
dec
adc
inc
pop
dec
push
sub
push
adc
jnp
js
jge
test
mov
sub
jmp
stos
xchg
out
pushl
shll
and
add
jg
xchg
insb
sub
fwait
inc
and
mov
push
in
jle
jnp,pn
or
mov
cld
ret
loope
inc
and
add
mov
aad
jle
inc
movsl
sub
les
dec
dec
xchg
mov
add
enter
rcr
in
icebp
outsl
xor
cltd
frstor
xor
repz
ds
pop
stos
pop
outsb
push
jp
loope
enter
add
fwait
add
and
sbb
jl
mov
cld
cld
jg
movsb
stos
rclb
dec
fldenv
dec
int3
xchg
jo
add
push
loope
adc
ds
push
xchg
mov
xchg
pop
push
pop
inc
clc
pop
outsb
push
mov
sbb
jns
pop
repnz
nop
sub
ja
cmpsl
adc
dec
dec
ds
loope
cmc
nop
enter
repnz
dec
shr
lds
mov
int
icebp
xchg
out
fbstp
arpl
daa
fnstsw
add
sbb
sti
mov
into
jge
jecxz
mov
lock
movb
push
subb
push
push
loop
pslld
rcr
mov
pushf
psllw
test
dec
sti
ffreep
int
mov
gs
fs
xchg
push
divb
inc
scas
adc
gs
mov
push
lret
loopne
lea
adc
ror
sbb
sbb
imul
jns
repnz
sbb
mov
hlt
cmpsb
inc
lret
rcll
loopne
dec
jo
std
dec
repnz
lea
int3
sub
push
inc
sbb
lret
pop
and
mull
into
jecxz
sbb
mov
outsb
cmpsb
enter
je
sub
stos
lret
adc
insl
mov
sbb
push
pop
xchg
mov
scas
inc
jbe
and
xor
test
sub
repnz
lods
push
cltd
test
mov
pop
dec
mov
adc
fs
mov
xor
xchg
sbbl
push
iret
fiaddl
dec
push
lods
sti
inc
ljmp
mov
adc
popa
movsb
lret
xchg
jmp
push
mov
cwtl
movsb
cli
or
arpl
adc
lock
sahf
daa
mov
sarb
in
mov
addr16
sub
jl
adc
ret
test
cs
mov
outsb
dec
sbb
fwait
dec
cli
ljmp
int
sub
mov
lret
movsl
call
push
jecxz
or
pop
mov
daa
and
inc
mov
test
pop
aad
xor
cmp
mov
pop
push
insl
rolb
inc
out
rorl
mov
enter
and
dec
aaa
sarl
cld
mov
or
mov
in
or
pop
testl
inc
lahf
mov
sub
mov
mov
fstps
inc
repnz
mov
fdivr
dec
dec
fcom
ds
push
cmp
mov
xchg
add
xchg
cmp
mov
lcall
cmp
cmc
in
cmpsl
cmp
mov
test
mov
sti
push
sahf
movsb
aam
cmp
daa
pop
shlb
inc
dec
mov
fucomip
test
xlat
cmp
push
push
cmp
sahf
addb
and
mov
adc
cwtl
mov
inc
in
mov
call
push
cli
fs
daa
xchg
cld
lea
fidivrl
jnp
insl
test
orl
lret
xorl
inc
and
push
outsb
es
stc
push
push
add
pop
loop
dec
cld
adc
lret
or
pushf
cmp
divl
inc
mov
fs
push
jl
mov
ja
push
mov
nop
or
hlt
dec
adc
mov
pop
in
lds
mov
xchg
xchg
fistpll
xchg
mov
test
test
or
cmp
or
jmp
pushf
and
clc
sub
push
les
add
ljmp
and
out
xor
xchg
mov
fiadds
mov
je
fwait
in
adc
imul
push
call
xor
xchg
xlat
cmp
and
rclb
push
out
insl
data16
jnp
mov
pop
aaa
cmp
fwait
jge
jl
ljmp
jbe
push
ficoms
add
je
enter
out
mov
test
pop
push
test
adc
sub
cmp
ljmp
pop
adc
rcll
xchg
xor
jmp
jg
filds
push
iret
mov
jecxz
inc
mov
imull
ss
cltd
and
cmp
push
pushl
dec
dec
popf
xchg
mov
int3
rcrl
xor
mov
mov
mov
pusha
subps
pop
imulb
xchg
xchg
test
cwtl
insb
xchg
data16
call
jecxz
leave
inc
notl
stos
dec
test
xchg
mov
pushf
int3
mov
jns
outsl
inc
sbbb
sbb
mov
inc
adc
notb
ret
orl
or
jbe
in
push
movsl
jge
in
subb
xchg
cmpsb
mov
out
mov
sbb
lret
sub
adc
dec
inc
jo
inc
add
mov
das
imul
dec
xor
pop
xor
cmp
or
push
sub
frstor
fstpl
jle
and
jge
mov
jecxz
frstor
mov
clc
sub
sub
mov
push
mov
mov
mov
push
push
aaa
jb
sbb
out
mov
push
pop
movsl
push
scas
or
ffree
or
bnd
or
pusha
hlt
dec
and
lret
mov
ljmp
enter
xchg
stc
fnsave
mov
cli
aad
lds
mov
lods
test
cs
inc
aam
cmc
imul
cmp
jmp
mov
dec
fimuls
adc
test
fisttpll
sbb
cltd
ds
jo
lret
inc
pusha
ror
xor
sbb
jle
icebp
enter
sub
adc
lds
xor
in
jle
xor
mov
push
je
mov
es
cmp
mov
std
mov
jo
lahf
cmp
inc
pop
jb
dec
mov
push
dec
pop
test
or
inc
dec
jmp
gs
inc
imul
push
out
fs
fistpll
cmpb
lcall
adc
lods
mov
imul
jne
lds
loope
dec
aad
push
adcb
cltd
sub
add
jge
jl
jb
cmp
pop
enter
scas
xor
pop
fcmovnb
bswap
jns
mov
movl
and
in
xchg
fs
add
inc
mov
sbb
repz
pop
mov
fldcw
and
out
mov
enter
out
je
or
loopne
scas
mov
ret
ret
shlb
and
out
movsl
loope
testl
or
sub
ds
lock
xchg
ljmp
dec
outsb
lahf
jp
in
mov
test
out
test
es
bound
int3
jno
cmp
inc
test
dec
mov
or
jmp
insb
push
insb
adc
jl
mov
ret
pop
je
das
insb
and
mov
int
xorl
xchg
add
push
fcoml
lret
ret
and
lret
in
cmc
cmpsl
ficompl
mov
enter
inc
and
and
popa
add
dec
mov
lahf
iret
int3
lcall
les
pushf
jne
ror
or
jge
mov
movsb
out
fninit
divb
adc
in
loopne
pop
orl
adcb
ss
je
dec
test
pushf
in
dec
mov
sbb
ficompl
xor
cli
add
into
sub
sub
sahf
mov
pop
inc
dec
out
aas
movsl
or
in
cwtl
dec
nop
mov
icebp
scas
add
icebp
xchg
xor
jmp
xor
stos
xchg
cmp
ds
addr16
repnz
or
stc
pop
mov
ret
pop
push
shll
jbe
jb
mov
cmc
push
loope
jecxz
lods
inc
adc
xchg
cmp
bound
addb
adc
mov
cmp
in
ret
addr16
ret
jno
dec
je
pop
mov
mov
flds
sahf
aam
popa
sub
mov
ljmp
movsl
gs
hlt
push
clc
mov
lea
push
mov
ret
push
mov
sbb
sarb
subps
inc
sbb
std
repz
pop
std
mov
lahf
fistpll
loop
mov
scas
pop
rcll
dec
lds
pushf
pop
push
int3
in
adc
xchg
aas
sbbl
sbb
xchg
cli
outsl
cmp
js
loopne
lods
insb
test
or
and
mov
cmpsb
dec
xchg
sbb
xor
dec
fldt
jmp
pop
mov
js
leave
mov
gs
into
gs
mov
cli
and
ja
add
cmpsl
pusha
pop
push
jae
mov
xchg
cmpsb
or
mov
ret
push
es
adcl
dec
pushl
lcall
lock
mov
add
adcb
repnz
ljmp
dec
into
push
push
xchg
fmull
int3
mov
aam
ds
sbb
add
pop
mov
sbb
mov
pop
shrl
mov
inc
outsb
push
xor
sub
add
jmp
rorb
mov
inc
pusha
stos
mov
filds
lods
lock
mov
dec
dec
sub
sbb
add
xor
iret
pop
inc
cmc
and
cmp
push
jne
or
ret
or
jecxz
loop
sbb
pushf
adcb
or
outsb
scas
cmp
mov
dec
loop
ja
mov
clc
rorb
mov
mov
push
add
jnp
xor
jno
dec
sbb
sbb
add
mov
dec
xor
sbb
cmp
repnz
into
add
or
hlt
mov
fldt
cmp
into
test
fisttpl
mov
pop
mov
mov
cmp
sar
push
sti
sbb
jmp
sub
int
in
sbb
pop
decl
pusha
push
sahf
or
mov
or
ds
mov
jecxz
adc
stc
nop
cmp
jno
xor
push
lods
xchg
dec
ret
pop
stos
or
insl
lods
mov
ret
lret
xchg
out
cmpsl
cmp
and
and
mov
pop
insb
mov
mov
pop
das
loopne
pop
sub
sub
out
and
mov
je
test
xor
cld
jmp
mov
jp
je
movsb
xchg
scas
ljmp
popa
repz
les
ret
xchg
xchg
sub
jns
pusha
sub
jae
scas
gs
into
and
cmp
adc
lret
insb
sub
or
aad
cld
test
outsl
divl
lcall
addr16
sarl
mov
jmp
gs
lcall
jbe
pop
xor
cmp
pop
test
or
shr
lret
aad
push
jge
sti
stc
loope
and
outsb
xchg
stc
mov
cli
adc
scas
xor
lods
enter
xor
jmp
and
mov
cld
fucomp
xlat
outsl
fsubr
repz
pop
push
mov
mov
lret
push
mov
test
push
mov
mov
stos
orl
dec
sti
add
cwtl
cli
je
mov
repz
pop
mov
cmc
pop
fwait
in
icebp
or
pop
or
ss
dec
xchg
imul
call
sbb
mov
xor
pop
stos
imul
sahf
mov
stc
jbe
sbb
pushf
mov
push
inc
xchg
inc
cmpsl
adc
mov
sbb
jle
imul
std
push
cmp
push
mov
jg
lahf
inc
or
outsb
jl
mov
test
and
xchg
aaa
fcomps
and
out
inc
mov
and
scas
jnp
cmp
popa
out
push
inc
mov
pop
jl
cmp
mov
adc
pop
push
mov
jns
jl
jb
outsb
jmp
push
lcall
pop
sbb
cltd
dec
mov
mov
stos
divl
mov
scas
xor
or
dec
cmp
cli
js
std
inc
or
push
int3
addr16
push
and
insl
xor
cmp
mov
lods
mov
dec
je
ja
inc
ss
sbb
xor
clc
lret
std
icebp
fiaddl
sbb
cmp
adc
dec
inc
jns
icebp
push
test
wrmsr
mov
xchg
pop
inc
fucomi
add
icebp
push
mov
xor
mov
cltd
stc
add
push
pop
mov
push
in
sub
pop
lock
adc
pusha
aaa
daa
out
cmp
add
sbb
mov
inc
enter
mov
je
mov
jne
out
lcall
dec
in
call
das
int3
adc
sbb
ss
adc
ss
aas
das
xor
cltd
cmc
or
nop
addr16
xor
cltd
dec
dec
add
jo
imul
push
dec
mov
sbb
loope
adc
xchg
scas
or
push
cltd
fsts
sbb
repnz
lods
mov
jg
pusha
subb
jg
mov
and
pop
cltd
mov
adc
lods
jle
xor
in
dec
lock
daa
cli
bound
mov
push
mov
shll
sbb
repz
push
not
popf
test
scas
mov
dec
mov
xchg
jge
rol
dec
pop
sub
mov
mov
mov
or
sub
cmp
mov
ss
xor
fildl
ss
inc
push
aaa
jb
lret
and
push
mov
or
fsubl
repz
std
das
pop
push
js
lods
xor
test
adc
loopne
inc
movsb
loope
in
xor
rorb
lcall
fistpl
popa
sbb
add
push
mov
iret
inc
fldl
in
sub
pop
dec
in
subl
or
xchg
lock
or
mov
mov
mov
rcrb
jl
pop
push
xor
pop
repz
sub
xchg
push
jne
stos
in
sbb
pushf
outsl
sbb
rorl
xlat
repnz
sub
test
cld
lret
sti
dec
cmp
arpl
aas
roll
cli
js
hlt
push
sub
and
mov
pop
jl
lods
ret
push
lea
lret
rolb
xlat
sub
mov
pop
inc
lods
pop
cmp
inc
mov
subl
in
jne
pushf
nop
test
mov
inc
movsb
es
or
stc
and
popa
push
sahf
jecxz
push
decb
jecxz
add
out
xor
lret
sub
or
outsl
movsb
and
andb
mov
mov
cwtl
cltd
and
or
add
push
mov
notl
mov
movsb
inc
popa
mov
mov
call
push
std
imul
mov
loope
pusha
dec
mov
dec
je
push
stos
ljmp
out
mov
jecxz
mov
jo
daa
push
scas
aaa
xor
gs
mov
xor
in
xchg
mov
mov
mov
cwtl
movsl
inc
lods
fwait
arpl
push
sbb
dec
inc
sbb
push
cmp
or
pop
push
xor
insl
fwait
adc
popf
adc
outsl
jbe
mov
mov
cmc
dec
adc
jnp
adc
xchg
pop
cmp
call
rcll
imul
lcall
adc
mov
mov
xor
or
jne
outsl
lret
pop
jne
scas
and
mov
lret
ja
cmpsl
cmp
inc
adc
sub
popf
movsb
mov
insl
cmp
mov
sub
fsts
ficoml
outsb
push
pop
enter
fidivs
mov
ret
fisttps
sbb
and
das
xchg
out
pusha
sbb
pop
mov
jb
test
cmp
cmp
lcall
mov
mov
out
shll
popa
jno
inc
mov
movsl
lret
mov
aad
mov
xchg
xorb
sub
enter
inc
insl
addr16
fsubrs
mul
inc
stos
dec
push
or
xor
sbb
out
jnp
inc
pop
gs
dec
fidivs
fdiv
dec
mov
rcrb
push
xchg
das
shll
stc
pop
js
js
mov
add
pop
es
xchg
mov
arpl
or
dec
addr16
push
leave
ret
rclb
dec
ljmpw
nop
and
cmpsb
notl
arpl
jecxz
mov
dec
pop
testl
jo
adc
jmp
lss
out
mov
es
cmp
repnz
cmpsb
sub
test
and
sbb
insb
jp
dec
pushf
sbb
add
daa
inc
cmpsb
xor
mov
cmp
je
ds
adc
push
outsl
scas
sub
mov
jno
lret
pop
iret
cmp
pop
inc
mov
dec
icebp
xchg
mov
push
add
and
inc
jp
adc
add
mov
icebp
out
sbb
lds
adc
int
scas
mov
sbb
mov
add
adc
push
lods
pop
lods
addr16
cmp
mov
fcmovnbe
jnp
mov
inc
stos
hlt
aam
lods
inc
shrl
es
shll
test
sbb
outsl
insb
dec
lods
inc
pop
mov
or
pop
into
push
inc
and
scas
xlat
inc
fldpi
xchg
movsl
or
ljmp
lcall
lret
mov
pop
pop
fnsave
jo
dec
into
and
arpl
jne
and
ret
pop
hlt
icebp
mov
jge
push
dec
lcall
sbb
push
popf
sub
add
insb
xlat
pop
cmp
inc
orb
es
dec
mov
pushf
dec
fsubr
dec
push
xchg
add
xor
push
jge
adc
cmp
lahf
rolb
dec
fbstp
data16
mov
pushl
xlat
pop
std
add
or
push
ds
jb
dec
mov
loope
sub
in
xchg
xor
or
and
mov
add
xlat
sti
or
jns
ljmp
rcrl
inc
repnz
shlb
out
outsl
fists
bnd
mov
fucom
lcall
jmp
les
xchg
cli
fdivl
adc
test
mov
mov
ret
aas
stc
mov
inc
lock
lea
fldt
xchg
sub
in
xchg
test
clc
mov
pop
bnd
jno
divb
inc
add
push
sbb
test
sbb
dec
pop
cwtl
cmp
inc
push
mov
popa
lret
mov
stos
mov
sub
repnz
std
aas
or
inc
mov
dec
popf
mov
mov
push
jecxz
test
or
jmp
jp
jp
mov
mov
xor
ljmp
out
call
sbbb
sub
fs
pop
jecxz
xchg
notb
in
pop
into
out
push
dec
popa
push
cmc
mov
inc
insb
mov
addr16
in
sub
out
and
movsl
insl
out
and
adc
push
dec
sub
inc
loopne
test
mov
or
mov
jnp
cmp
out
jns
or
test
aaa
in
xor
ja
aaa
hlt
xor
movsl
rcl
or
test
or
ret
addb
sbb
in
add
fstps
mov
add
lahf
nop
in
xor
fsubl
push
pusha
mov
dec
or
dec
adc
movsb
jno
ja
cmp
out
inc
clc
in
jmp
sbb
or
enter
outsb
cmp
mov
mov
mov
dec
or
inc
in
stos
int3
sbb
sti
loopne
pop
aad
cltd
imul
mov
repz
inc
das
mul
into
jecxz
pop
ljmp
and
sbb
lahf
xor
cmp
rep
pop
fsubl
out
aam
ror
test
testb
or
pop
das
fdivrl
pop
add
lahf
out
lcall
add
xchg
test
sbb
idivl
scas
and
jle
jmp
dec
xchg
sub
pusha
pop
orb
inc
sbb
mov
adc
or
cs
push
or
inc
or
lods
inc
ret
pop
xor
iret
add
shr
add
push
xchg
jle
cmp
pop
roll
or
pop
inc
scas
out
mov
fsts
xlat
je
lret
ja
push
inc
daa
xchg
cmpsl
mov
out
int
pop
sbb
pop
inc
sub
push
movsl
sub
push
or
popa
and
mov
mov
dec
pop
fistl
es
enter
mov
fs
aam
pop
repnz
jl
inc
out
aad
add
loope
jae
cmp
lds
pop
pop
sub
imul
subl
mov
inc
push
or
imul
fildll
cmp
outsb
rol
test
fistpl
push
jbe
es
mov
dec
test
stos
xlat
cmp
dec
or
xchg
pop
mov
sub
push
cli
adc
push
daa
and
xchg
sbb
rcll
adc
mov
mov
popa
jo
popf
mov
imul
das
lahf
xor
mov
daa
xor
fstpt
add
jp
fadd
push
xlat
and
andb
mov
cmp
xchg
pop
add
jp
sbb
sti
inc
aaa
lret
inc
push
add
mov
cli
sahf
jle
int3
cld
daa
sub
dec
dec
jno
jmp
or
outsb
insl
lds
mov
outsb
vmaxps
pop
testl
xchg
aas
mov
mov
into
shlb
sbb
adc
enter
roll
cmp
or
in
push
and
notl
clc
pop
out
jmp
data16
sbb
lahf
cmp
xor
mov
scas
push
repz
in
out
or
ja
and
push
rorb
inc
mov
adc
scas
mov
int3
fsubl
push
or
aas
or
js
lret
mov
adc
das
icebp
cmp
mov
in
jb
int
mov
mov
dec
mov
push
jp
mov
shrl
negb
shr
mov
add
mov
bound
mov
and
xchg
fimuls
sbbb
pop
push
sub
jno
or
ds
les
insb
aam
cwtl
mov
and
outsb
aaa
insl
mov
pop
movsb
or
into
mov
repnz
rorl
ficomps
cmp
sub
dec
and
or
jecxz
xchg
subb
shll
and
cwtl
ja
xchg
mov
imul
repnz
movsl
dec
subl
stos
clc
jle
pop
lods
mov
test
jne
mov
pop
push
hlt
sbb
jns
fists
shll
jbe
insl
rorb
scas
or
mov
int3
mov
notb
xlat
mov
xchg
or
sub
inc
es
out
fstps
add
pop
call
cs
ja,pt
insb
mov
shlb
stc
jecxz
pop
outsb
cmp
add
xor
aas
add
aad
les
int
add
and
stos
push
mov
rclb
mov
xor
or
add
lods
jg
cltd
pop
xor
lret
jne
jp
jl
xor
fsubl
xchg
or
mov
sbb
popf
jl
lock
pusha
xor
or
and
out
mov
dec
cltd
fsts
notb
or
jb
pop
lret
loope
and
shl
js
mov
and
and
xor
xchg
mov
insl
nop
and
test
or
add
sbb
mov
cmp
and
push
icebp
lcall
xchg
dec
imul
xchg
shll
cmp
mov
ret
movsb
lds
dec
sbb
loopne
sbb
pop
lods
aam
ret
jae
or
sbb
push
sbb
xchg
push
cvtpi2ps
jge
push
stos
xor
cmp
jl
xchg
cld
pop
cmpl
fsubl
push
inc
fiadds
and
sub
cmp
icebp
mov
sbb
mov
jp
mov
in
scas
sbb
fistps
sahf
pop
andl
loopne
rcll
xchg
jg,pn
add
mov
xchg
das
pmaddwd
xchg
mov
xor
iret
pop
sbb
mov
pop
pushf
int3
sub
pop
push
sbb
adc
and
lds
mov
int3
or
mov
sub
jp
add
adc
aad
es
ret
sub
addb
shrl
incb
lods
dec
mov
bnd
in
aam
ja
jmp
push
pop
shr
push
pop
dec
inc
xchg
out
xchg
fisubl
nop
sti
sarl
xor
sahf
xor
or
int
les
fcoml
pop
mov
inc
push
and
into
push
stos
dec
sbb
stc
bound
into
push
stos
fs
dec
out
arpl
mov
jl
pop
pop
test
jecxz
mov
sahf
or
stos
pop
incl
sbb
ficoml
mov
popf
xchg
jecxz
mov
stos
out
inc
pop
add
lcall
dec
push
sbb
xchg
into
mov
int
cli
fs
imulb
movsl
dec
lea
addl
push
cli
lret
rolb
inc
outsl
pop
xor
and
test
in
mov
dec
nop
fs
cmpsb
pop
mov
ficoms
imul
mov
sub
outsb
jle
add
sar
call
int
pmuludq
adc
decl
sti
and
or
fcmovbe
xor
pop
sub
movsb
ret
sub
inc
icebp
outsl
cltd
jmp
call
inc
int3
push
sbb
add
in
out
leave
je
iret
and
or
xor
sbb
and
lods
js
je
lock
push
lcall
jns
or
std
sti
sub
js
mov
pop
jmp
cld
mulb
adc
jmp
add
pop
adc
sbb
xchg
lock
lods
add
mov
popa
stc
cmpsl
cli
pop
cmc
jg
sbb
cmpl
cltd
jne
mov
mov
call
pop
sarb
inc
jno
mov
mov
jno
ficompl
sahf
imul
mov
mov
and
sbb
aad
hlt
jle
repz
fildl
stc
mov
mov
shlb
pop
dec
lea
add
jle
lahf
jg
rorl
flds
cmp
add
sarb
cmp
xor
aaa
cli
xchg
mov
es
shl
loope
mov
xchg
inc
adc
xchg
out
xchg
insl
pop
mov
dec
out
insl
adc
arpl
jecxz
or
iret
add
jo
pushf
and
js
xor
in
mov
jae
shl
int
and
or
mov
jge
add
or
push
test
mov
out
push
cmpsb
mov
inc
ret
add
mov
xlat
cmp
movsl
push
mov
jge
pop
lock
adc
aad
add
sub
push
popa
inc
cld
enter
mov
add
loope
mov
push
xchg
cmp
je
sbb
cs
mov
cmp
jb
insl
jmp
mov
jno
cmpsl
shll
jno
jb
jle
sbb
or
push
and
or
aaa
push
ljmp
mov
xorb
pop
cmpsl
xchg
jle
mov
test
xor
arpl
mov
scas
popf
cmp
push
arpl
mov
push
pop
push
dec
mov
inc
cli
cmp
xor
jb
das
in
pusha
xor
dec
testb
fisttps
leave
add
je
enter
sbb
js
aaa
push
inc
mov
cmp
push
insb
scas
negl
push
jle
icebp
test
xor
cmp
imul
xchg
mov
and
rcll
aaa
popf
pop
sub
push
mov
aad
mov
and
es
or
mov
cmp
shrl
mov
cwtl
xchg
into
inc
add
cmp
mov
out
sub
add
mov
iret
inc
mov
fidivs
loope
sub
scas
cmp
mov
dec
sbb
push
call
repnz
mov
loopne
mov
push
rcl
loope
lcall
rcrb
int
cmp
xchg
fprem1
dec
leave
mov
lcall
xchg
mov
cwtl
adc
push
sbb
movb
xor
mov
inc
seto
xchg
push
and
and
call
sbb
repz
in
frstor
pop
pop
iret
push
pusha
into
out
lcall
lds
in
dec
cmp
and
xchg
adc
mov
aas
xchg
repnz
test
cmp
mov
lea
adc
inc
adc
inc
push
jle
sbb
mov
in
aam
jo
and
sub
or
sahf
mov
das
or
xlat
cmc
inc
or
daa
icebp
cmp
fwait
adc
cmpsl
inc
insb
push
xchg
sbb
dec
or
mov
scas
sub
dec
aaa
leave
xor
xchg
inc
insb
and
jmp
mov
add
sub
pop
lea
cpuid
cmpsl
ja
arpl
jl
icebp
dec
sbb
stc
cmc
mov
out
sahf
fs
pusha
fidivrs
sti
mov
add
inc
imul
mov
pop
xor
and
mov
sbb
push
add
fistpl
xchg
lods
bound
jne
fwait
mov
std
jae
out
add
or
insl
fisubrl
cmp
pop
or
cmpsb
lods
cld
lret
repnz
cli
and
pop
mov
mov
add
push
aam
jecxz
and
jecxz
aaa
xchg
push
iret
mov
ret
icebp
leave
mov
jne
xchg
dec
loop
jecxz
lds
or
scas
shr
out
jmp
pop
and
dec
or
pop
rorl
fisttpll
cmp
jl
bound
loope
out
lea
inc
push
add
popa
sbb
sub
mov
inc
int
adc
insl
xchg
add
dec
pop
dec
inc
sub
pcmpgtb
fs
sbb
aaa
cld
push
push
int
mov
mov
aas
or
jmp
push
mov
les
push
iret
out
mov
push
mov
ror
mov
sub
ljmp
movl
shll
or
jne
std
fstp
add
mov
pushf
js
jle
in
jb
sbb
ret
mov
lcall
inc
inc
mov
insb
cmp
dec
sub
jp
adc
popa
pop
xchg
adc
insl
fcoml
and
jl,pn
inc
pop
lds
push
or
mov
xor
enter
mov
cmp
jae
enter
dec
jne
movsb
pop
sub
mov
int3
testl
jge
pushf
pop
stos
xchg
and
fiadds
cmp
aas
call
push
push
xchg
popf
mov
dec
and
fidivrs
or
mov
imul
adc
loope
into
pop
cmp
jae
xor
mov
into
dec
push
inc
popf
xor
in
loop
sub
imul
fsubr
jns
jae
cmpsb
mov
mov
xchg
mov
outsb
mov
xchg
sbb
xor
sti
fsts
mov
mov
std
mov
pop
mov
fcomps
xchg
add
cmc
cwtl
sbb
dec
pusha
out
xchg
pop
lahf
insb
mov
outsb
outsb
sub
cmpsl
dec
shlb
ljmp
cld
push
movsb
outsl
cmpb
cli
or
xchg
lret
jb
push
out
aaa
hlt
and
jnp
mov
cli
fwait
ljmp
loope
push
pop
jae
jnp
jecxz
xor
pop
addr16
aas
aad
adc
fiaddl
mov
stos
fwait
ret
add
xchg
je
test
inc
das
fldenv
arpl
pop
test
cmpsl
add
jecxz
mov
enter
roll
sub
sbb
cltd
pop
sarl
and
sbb
lea
add
jbe
mov
insb
cmp
sbb
in
shr
xchg
sbb
xchg
xor
xor
fsubr
nop
mulb
xor
mov
or
cmp
popa
jp
push
test
push
shll
popa
fwait
notb
jg
push
push
adc
ficoml
jge
es
cltd
scas
repz
mov
or
jno
push
fsub
lcall
cmp
lahf
cmp
lret
fisttpll
sbbl
mov
das
aam
lock
adc
iret
into
ret
cld
out
gs
int3
and
aam
xchg
xchg
and
cmp
and
xlat
cmpsl
xchg
push
pop
hlt
lcall
inc
stc
loopne
mov
dec
mov
arpl
jg
xchg
push
pop
lcall
lret
jno
push
outsl
shrb
data16
clc
test
sub
cmpsb
je
ret
xchg
imul
aad
pop
pop
or
add
and
iret
mov
lock
ret
mov
cli
rcll
mov
xor
inc
mov
or
push
popf
cmp
add
in
mov
mov
mov
mov
mov
xchg
adc
daa
ficomps
mov
out
and
add
push
push
out
addr16
or
xchg
jp
mov
push
mov
cwtl
jae
stc
push
sub
or
mov
jnp
sub
pushf
sbb
out
ljmp
jne
pop
leave
lea
pop
xor
icebp
dec
dec
add
aad
mov
je
mov
sahf
outsl
pop
ret
out
jl
mov
fisubrl
mov
cld
push
ja
dec
and
push
jg
pop
rolb
push
pop
xchg
cs
mov
cmp
pop
sub
jl
mov
andb
push
ja
xor
out
and
lods
and
and
insb
rorb
add
jmp
push
lock
dec
cmpsl
push
fs
and
in
adc
icebp
cmp
adc
xor
ret
lock
roll
sbb
gs
aam
out
cmpsl
sbb
mov
xchg
xchg
dec
pop
ret
mov
jge
pop
ffree
and
jns
icebp
push
jl
adc
sbb
ret
fstpt
dec
imul
xor
mov
adc
mov
xchg
fsubl
pop
dec
sub
sbb
xchg
sub
sbb
in
push
mov
xchg
fdivrp
inc
jmp
mov
in
inc
inc
in
mov
add
push
mov
popa
rorl
lock
test
jne
and
lods
mov
cmp
sub
sub
dec
pop
cmp
xor
das
sub
stos
pop
push
ret
or
mov
inc
lods
repz
int
cmpsb
clc
jns
shrl
mov
cwtl
pushf
testb
mov
aas
cmpsl
les
outsb
inc
xor
push
fwait
jne
enter
fstps
push
sub
xor
add
mov
push
aaa
xchg
faddl
jae
mov
pop
pop
inc
daa
insb
in
push
inc
jb
btc
push
std
or
ja,pn
aaa
mov
movd
inc
fs
push
test
mov
cld
sbbl
mov
ja
mov
jbe
mov
out
fdivr
out
fninit
testl
mov
push
mov
fildl
clc
adc
or
loop
aaa
or
cmp
push
pusha
push
jl
popf
mov
ja
stos
js
jbe
sbbb
cmp
jmp
jnp
and
sahf
mov
cld
pop
movsl
mov
pop
les
outsl
imul
mov
ds
xor
call
addr16
dec
xchg
jl
int
cmp
cmpl
xchg
jnp
lret
fst
jge
jge
xor
imul
imul
push
cmp
cmp
shll
adc
dec
jno
and
lods
mov
pop
ret
cli
dec
daa
jnp
clc
out
inc
rcrb
std
push
xchg
stc
lock
clc
mov
add
cmp
xor
mov
into
mov
cli
imul
xchg
es
pop
dec
add
jbe
push
lcall
or
jno
adc
and
xlat
pushw
adc
movsl
dec
test
add
inc
testl
adc
jb
out
sub
mov
aaa
scas
xchg
aam
js
int3
jmp
nop
rolb
mov
movsl
cmpsl
mov
fs
lea
xor
fldl
mov
sub
sub
adc
dec
aad
inc
daa
jns
ds
ds
fcompl
inc
mov
jbe
xchg
pop
aam
jp
jae
bound
cmp
mov
insb
mov
pop
xor
push
push
stc
pop
mov
sub
jmp
shll
shll
mov
arpl
cmpsb
adc
jae
scas
int
out
data16
inc
fwait
aam
or
call
mov
xor
call
les
pop
es
test
cltd
ja
pop
sub
push
push
nop
dec
add
arpl
inc
in
outsb
mov
adc
dec
adc
mov
adc
lods
fs
stos
mov
lock
push
movsl
cli
stos
je
jge
std
and
mov
mov
xchg
push
inc
fisttpll
cmc
cmpsl
mov
mov
lods
pop
dec
movl
movsb
es
jp
mov
aad
pop
lret
xor
or
mov
in
mov
fmul
rcll
pop
repnz
or
arpl
sahf
add
xchg
sahf
jmp
fildll
xchg
push
push
mulb
mov
or
cmp
cmovne
out
mov
stos
repz
outsb
lcall
mov
dec
cmpsb
or
outsb
inc
xchg
scas
push
hlt
push
mov
push
int3
aad
or
jne
jge
xchg
inc
jmp
not
cwtl
xor
cli
es
movsl
mov
jno
jp
std
xchg
xor
insb
insl
sti
cltd
sti
outsb
shr
jb
imul
cmp
push
dec
adc
pop
out
andb
jecxz
loop
addr16
aam
outsl
das
add
jb
xorl
inc
jle
cmp
daa
xchg
jg
xor
mov
ret
sarb
pop
scas
rolb
lock
cmp
xor
js
dec
pop
lahf
or
lret
xor
or
xor
xor
xchg
lea
jb
or
decl
cmp
outsl
mov
stos
loop
mov
lahf
and
dec
adcl
add
adc
inc
mov
fmuls
shl
xchg
sub
mov
mov
negl
push
jbe
or
jl
dec
sub
lods
out
in
or
pushf
cwtl
jmp
pop
mov
mov
push
int
mov
rcrb
clc
push
test
icebp
mov
mov
jg
subb
sbb
cltd
jmp
jecxz
scas
into
pop
mov
outsl
imul
repz
and
mov
sub
cmpsl
pop
hlt
jnp
push
cmpsb
nop
mov
aas
dec
sbb
fstpl
dec
jg
aam
cmpsb
loope
push
leave
push
pop
dec
enter
test
pop
ljmp
mov
imul
dec
std
in
push
pushf
xchg
mov
aas
js
cmp
pop
jb
push
sbb
fdivs
cmp
sbb
dec
cmp
mov
std
mov
lods
pop
xchg
fsubp
leave
stos
sub
inc
es
inc
mov
mov
add
int3
cmc
inc
or
push
xchg
aas
xor
push
jp,pt
daa
adc
call
xorl
cmp
outsb
fxch
mov
dec
bound
push
xchg
push
cmp
in
sbb
jb
fnsave
push
xor
xor
ljmp
add
out
movsb
pop
mov
xchg
ja
mov
lock
lock
push
out
ja
or
cmp
loope
mov
jns
scas
xor
pusha
adc
or
pop
test
xchg
das
jnp
outsl
or
lahf
std
pop
push
inc
shll
into
das
lods
sub
push
stos
into
das
std
sbb
popf
sbb
push
scas
and
mov
rcrl
out
rol
or
mov
mov
or
push
mov
and
shrl
std
and
adc
in
arpl
mov
jge
imul
and
xlat
imul
iret
test
repnz
xchg
cmp
loope
pushf
inc
psrlw
push
cmp
inc
xchg
mov
cmpsl
xchg
fwait
sub
and
inc
mov
adc
leave
outsl
cwtl
jmp
dec
outsb
scas
cmp
sbb
movb
jecxz
out
fdivr
pop
les
sbbb
jb
cwtl
xor
cmp
sub
push
stos
mov
push
scas
adc
push
out
fcomps
push
stos
push
cli
push
cmp
jp
outsb
inc
scas
addr16
mov
xorb
sub
cmc
jnp
mov
outsl
mov
scas
cmp
jmp
jnp
add
inc
inc
jo
ret
test
iret
jge
mov
shll
dec
fs
inc
xchg
jmp
stc
sarb
and
mov
inc
add
push
aam
mov
dec
out
sti
ja
jns
pop
lahf
jg
testb
mov
aad
add
jl
sbb
jmp
xlat
cmpsl
mov
in
jg
mov
inc
cwtl
mov
xor
ja
push
cmpsl
in
ds
into
inc
adc
jp
test
or
dec
fs
sbb
and
mov
shlb
push
in
sbb
loop
dec
cltd
jg
dec
aaa
iret
nop
push
or
pushf
mov
push
sbb
pop
out
fwait
mov
mov
faddl
pushf
fwait
ret
cld
js
aam
fcomps
inc
aaa
aad
lock
inc
fnsave
xchg
cmpsl
jge
ss
iret
adc
in
lret
cmp
mov
push
in
insl
and
stos
loop
or
or
scas
daa
sub
or
xor
fisubrs
stc
js
rorl
test
or
dec
xchg
mov
xchg
sbb
pop
cmp
xchg
jl
dec
arpl
jp
mov
test
jb
jne
and
ffreep
jo
movsb
stos
sub
dec
jg
pop
and
inc
adc
adc
bound
and
mov
cmp
scas
hlt
sub
pop
test
ljmp
aam
xchg
fsubl
cmpl
mov
outsl
inc
addb
and
jne
and
or
loop
aad
inc
pushf
jae
cmp
jg
repnz
stos
fwait
nop
and
and
add
dec
lds
imulb
dec
jp
arpl
loop
insb
imul
push
xchg
mov
daa
mov
scas
xchg
adc
dec
jne
movsl
mov
outsb
icebp
xchg
loop
cmp
dec
call
push
iret
push
adc
fdivr
rcll
push
dec
loope
pop
jecxz
jbe
cmp
jge
aas
outsb
loop
add
add
pop
imul
pop
aad
mov
sti
stos
popf
lock
inc
pop
lcall
inc
xor
out
das
setnp
mov
mov
adc
push
inc
sub
or
sbb
bnd
inc
cmp
or
fcmovne
jnp
call
sti
test
xchg
aas
inc
push
js
mov
aam
orl
loop
fstl
sbb
lods
jmp
mov
lock
pop
mov
add
adc
lahf
lret
xor
lret
sub
insl
call
in
xchg
out
dec
sub
mov
sub
sub
xor
or
bound
jecxz
mov
inc
stos
jns
les
cmp
cmpsl
cmp
pushf
cmp
xor
add
arpl
push
stos
jo
mov
dec
mov
subl
mov
sub
test
add
inc
cmp
js
inc
das
push
mov
adc
in
mov
psrlw
pop
mov
out
add
rclb
in
rorl
jno
fdivrl
mov
push
ret
fsts
sub
pop
add
roll
and
and
in
loope
int3
xchg
adc
mov
add
and
add
jmp
cmpsb
movsl
mov
cmpsl
xor
push
xor
pusha
fmulp
or
push
inc
sub
sub
mov
xchg
pop
mov
in
stc
aad
or
stc
mov
insb
sbb
mov
out
jecxz
ja
icebp
int
cwtl
fwait
cmpsl
xchg
outsl
push
out
mov
add
adc
cmp
mov
mov
jo
dec
out
pop
rolb
in
and
mov
or
stos
scas
dec
andb
dec
aas
or
pop
iret
rorb
mov
add
jmp
sub
cmp
movsl
aaa
jg
inc
cld
inc
jle
xchg
cwtl
popa
jmp
jns
pushl
mov
les
mov
jns
push
inc
jno
and
xchg
orl
ficoml
adc
push
aaa
sbb
shl
scas
outsb
push
mov
in
cmp
xchg
daa
sub
push
inc
xor
and
lahf
mov
cltd
and
lret
arpl
fcomi
dec
loope
mov
or
rcrl
jle
dec
cli
cli
adc
cwtl
hlt
pop
ret
cmp
cmc
dec
sub
mov
push
ds
scas
ja
outsl
outsl
dec
pop
and
xor
or
pop
pop
cmpl
push
mov
dec
mov
cmc
mov
sbb
stos
std
mov
or
or
adc
dec
insb
data16
es
mov
les
inc
push
mov
shrl
lcall
sbb
jle
add
mov
jl
dec
xor
in
fldl
lea
fdiv
mov
cmp
add
fiaddl
nop
xlat
jl
mov
ljmp
popf
lods
decl
addr16
push
xor
jb
dec
test
nop
push
inc
lcall
or
jl
ss
mov
rcrl
or
repz
test
xchg
jne
or
and
sub
jmp
adc
xorl
pop
mov
mov
or
pusha
leave
aad
ret
xlat
test
out
jmp
mov
fiaddl
aaa
jle
cmp
stc
pop
inc
and
pop
outsl
cli
sti
filds
rcrl
push
mov
add
das
dec
xchg
push
pop
xor
push
inc
xchg
push
dec
xorb
jbe
sbb
imul
stos
mulb
arpl
mov
scas
mov
movl
ja
into
movsl
popf
mov
ret
jns
dec
xchg
pop
fsubs
sub
adc
lahf
fldcw
stos
push
jno
and
icebp
jge
call
into
ljmp
popa
jecxz
xor
xor
cmpb
pusha
cmp
call
arpl
sbb
fmull
idivl
push
jbe
jns
dec
aas
lods
push
rcr
sbbl
int
push
cmpsl
push
inc
lret
push
pop
and
frstor
fnstsw
popa
sti
shll
aaa
or
testb
cld
inc
loope
out
dec
and
push
adc
pop
out
xlat
inc
std
lds
xchg
add
inc
jo
cmp
mov
xchg
xchg
out
mov
aad
popa
lret
cmpsl
lahf
mov
repz
cli
push
mov
je
add
adc
xlat
repz
fstpl
or
dec
outsl
scas
or
sti
aas
pop
push
dec
rolb
adc
xor
push
xor
iret
repz
and
adc
cld
fistpll
adc
das
push
mov
jnp
mov
sub
imul
cmpsb
fincstp
add
rcr
cmp
iret
idivb
cmc
jno
mov
inc
loope
push
stos
inc
not
inc
mov
xchg
ljmp
or
pop
fwait
cmpsb
aad
push
jle
push
mov
pop
jo
push
lods
mov
xor
repz
or
test
pushf
inc
mov
pop
into
push
push
or
stc
mov
andb
cmp
push
shl
xchg
add
dec
fisttpl
sbb
rclb
jns
adc
push
shl
add
mov
xchg
sub
xchg
jae
jbe
sbb
mov
add
aas
enter
add
aas
pop
mov
jmp
xor
mov
sub
inc
dec
mov
cmp
das
imul
pushf
ret
out
inc
push
mov
xor
in
cmc
or
xor
rcll
mov
pusha
iret
fists
pushf
jge
sub
repz
sub
lea
xchg
clc
fisubrl
cli
push
inc
stc
mov
fsubrl
inc
cmp
jae
push
scas
lock
add
xchg
fcmovne
mov
out
lods
fidivrs
fidivs
notb
roll
bound
pushf
enter
adc
js
nop
addr16
arpl
in
adc
out
mov
mov
lret
idivl
mov
adc
loopne
hlt
cmp
js
dec
lret
out
pop
fdivp
mov
aad
fsubs
cmp
icebp
ljmp
nop
shll
jbe
push
inc
or
jecxz
pusha
sub
lds
mov
adcb
nop
push
pop
mov
mov
push
lret
adc
leave
mov
sbb
movsl
shll
test
xor
pop
xchg
test
mov
adcl
fldt
add
bound
push
mov
inc
arpl
adc
test
pop
dec
loope
push
jbe
repnz
jno
cli
xor
mov
mov
dec
mov
sbb
sub
lret
lock
xor
fsubs
cmp
push
push
jmp
jb
pusha
pop
sub
jbe
outsl
inc
dec
aaa
divb
sarb
xlat
cwtl
inc
fmuls
mov
and
pop
iret
add
mov
adc
jge
lret
pop
push
adc
cmpsl
out
test
add
popf
outsb
mov
leave
push
aam
gs
mov
inc
mov
dec
xlat
fistpl
sub
xor
inc
int3
jp
jmp
cltd
and
jno
lea
and
push
pop
jecxz
inc
fwait
fidivrs
lods
jmp
mov
cmp
sbb
adc
push
fstpt
add
mov
clc
mov
push
test
push
or
mov
iret
pop
notb
pop
lret
or
jge
rorb
lods
lcall
int3
inc
ljmp
pop
lret
push
dec
add
testb
fcmovnu
rorl
cld
cmp
cmc
fistpl
xchg
pushf
and
adc
cltd
data16
pop
lahf
sarb
shlb
popf
mov
stc
mov
incl
cmp
cmp
fmuls
mov
and
cmp
jmp
call
jae
xchg
or
jns
out
cmp
dec
mov
nop
sub
testl
ret
stos
faddl
and
cmp
mov
mov
data16
xor
jbe
xor
xor
sbb
mov
mov
or
pop
or
push
jle
push
xor
cmp
add
mov
enter
rclb
inc
rorb
adc
pop
jle
fists
inc
sbb
mov
fsubrs
jnp
mov
cli
arpl
fidivl
inc
mov
fwait
jns
lds
pop
push
scas
out
lods
loop
and
lahf
mov
push
pop
loop
xchg
jmp
outsb
in
stos
notl
dec
sahf
mov
icebp
push
shlb
xchg
iret
push
aad
push
inc
adc
fs
xor
mov
add
jb
out
jecxz
pop
cmpsl
test
ljmp
fwait
enter
sub
push
in
mov
sbb
rorb
ljmp
insb
jge
sub
andl
icebp
test
dec
sbb
add
cmp
jle
imul
icebp
lods
dec
fstps
flds
jb
fidivs
in
mov
xchg
inc
dec
cmp
mov
loope
in
dec
mov
shlb
aam
dec
cmp
leave
lret
movsl
addr16
inc
fs
mov
fcompl
test
jl
shl
add
jmp
divb
or
add
arpl
and
int3
xchg
sbb
bound
daa
rorl
sub
sti
rclb
or
mov
xchg
cmp
mov
push
sbb
jge
jcxz,pn
out
sub
mov
test
xchg
lcall
add
jle
and
add
jbe
jo
dec
nop
das
rcrb
sbb
sub
push
loope
inc
push
jl
push
mov
dec
jmp
roll
push
pop
xor
jnp
jbe
lods
test
push
xchg
daa
add
andb
pop
pushf
cwtl
mov
lret
insb
fucom
push
fwait
int
divl
cmp
or
or
push
cmp
and
fwait
ss
push
loop
leave
pop
pop
ja
mov
dec
dec
movsl
pushf
or
lock
dec
mov
ljmp
lcall
les
mov
cmc
mov
fcoms
cltd
lcall
testb
bound
jno
fists
test
aam
jno
mov
insl
add
ret
sub
les
sahf
sbb
push
cmp
or
mov
out
cmp
pop
jo
out
cmpsl
adc
jnp
in
repz
lds
fwait
pushf
pop
imul
cli
xor
jge
iret
out
pusha
mov
insb
loopne
mov
inc
rol
out
scas
mov
lea
stos
sbb
jg
pusha
out
mov
loop
dec
add
nop
jbe
mov
repz
adc
push
out
fwait
sub
int3
repnz
mov
mov
gs
sub
dec
mov
lret
mov
xlat
mov
shlb
setg
adc
aad
lods
xchg
jecxz
mov
dec
subb
push
mov
push
cltd
and
out
inc
cmpsl
rorl
dec
std
adc
sbb
cmp
pop
repnz
cmc
imul
mov
xor
fdivl
pop
xor
pop
inc
pop
shlb
pop
push
lods
add
mov
sub
pop
push
mov
mov
add
cmc
or
sub
inc
or
xor
test
fwait
fs
je
pop
js
outsl
movsb
mov
sbbb
stos
sub
insb
inc
add
test
popa
arpl
out
insl
stc
orb
jmp
cmp
dec
int3
pop
push
rolb
mov
cmp
mov
jp
jmp
mov
das
popa
mov
push
out
mov
into
and
or
test
mov
sti
mov
cli
jl
lret
xchg
daa
xor
adc
xor
add
insb
das
out
push
mov
xchg
fwait
out
stc
adc
jo
stos
add
das
es
outsb
add
movsl
aaa
test
xchg
jmp
adc
or
rcll
cld
daa
pop
push
mov
in
xor
dec
pop
jo
or
es
cmp
adc
mov
daa
sbb
dec
mov
push
dec
je
dec
adc
dec
daa
sbbl
fisubrl
clc
mov
xchg
mov
sbb
testl
jp
lods
fmul
cmp
sarl
insl
dec
lods
sub
and
out
aam
jo
aas
sahf
imul
lds
movsl
in
aas
dec
sub
dec
fidivrl
popf
xchg
iret
pop
cli
in
xchg
pushf
lcall
cmp
fildl
stos
pop
pop
add
inc
mov
lds
xor
push
repnz
adc
jp
push
cltd
call
daa
push
push
mov
mov
mov
sbb
sub
adc
std
aas
scas
inc
aas
pop
xor
jno
cmp
test
cmp
repnz
jne
adc
push
daa
and
sbb
fs
scas
jb
sbb
cmc
scas
test
out
pop
outsl
stos
xchg
fsubrs
adc
sbb
and
ffreep
jmp
pop
jb
mov
lods
mov
xchg
outsb
cltd
add
or
push
push
stc
or
inc
adcb
repnz
out
mov
data16
js
push
jp
icebp
xor
dec
add
aam
loope
fidivrl
mov
pop
pop
or
push
mov
push
ret
gs
and
test
mov
inc
daa
stos
or
shll
loope
clc
xor
mov
fldt
cmp
or
mov
sub
sti
and
pop
pop
add
out
pop
addr16
loopne
popa
aas
xchg
loop
fbld
xchg
mov
cltd
inc
pop
jbe
test
call
inc
sbb
aam
mov
mov
adcb
movsb
push
push
jo
or
and
push
adc
fsubs
in
addr16
push
sub
daa
or
or
cmpsb
mov
push
outsl
fwait
cmpsl
into
fsubrl
call
add
inc
xchg
xor
aas
or
pop
js
sti
fdivl
cmpsb
ss
lock
sub
mov
add
xchg
pop
fwait
out
sahf
inc
push
xchg
sahf
jp
add
pop
outsb
lds
push
movsl
inc
add
jecxz
insl
and
sub
jecxz
lds
aad
sar
or
ucomiss
mov
mov
jmp
inc
mov
cltd
loop
xchg
mov
jecxz
lea
xchg
shl
adc
sbb
repz
mov
cmp
test
push
into
dec
dec
xchg
mov
cwtl
stos
ss
mov
pop
shl
jecxz
add
ja
shlb
fwait
cmp
rcrl
cmp
mov
cmp
sbb
lcall
cmp
clc
fdiv
testb
lcall
adcb
testl
xchg
das
or
xor
out
mov
mov
mov
repz
mov
xchg
das
addr16
out
push
pop
inc
int3
shl
in
dec
xlat
lods
fsubs
xor
fwait
mov
fs
cmp
repz
pop
test
jo
mov
sbb
insb
test
jne
out
sbb
cld
cmp
popa
xchg
lds
pop
cld
cmp
jae
aad
jp
add
mov
and
push
jnp
mov
pop
ret
rcrl
sub
xchg
lret
dec
testl
in
xorb
push
rclb
or
pop
push
mov
pop
inc
push
inc
test
mov
push
insb
or
mov
dec
jno
pop
jmp
push
cmp
xchg
adcl
repz
mov
test
sub
in
adc
gs
scas
pop
xor
lock
dec
mov
out
xchg
jge
cmp
xchg
loopne
adc
mov
and
test
aam
movsb
or
stc
into
in
mov
mov
fcompl
test
dec
or
sbb
dec
xor
imull
cmp
ficoml
adc
cmp
jae
add
or
insl
mov
mov
mov
cmp
push
clc
inc
je
stc
fidivs
cmc
cmp
inc
sub
outsb
dec
jmp
enter
adc
jp
inc
les
loopne
lea
cld
mov
sahf
int3
adc
xorb
xchg
cltd
or
inc
lahf
ja
out
shrb
pop
mov
loopne
out
fs
sub
pop
sub
flds
loope
ret
sbb
push
pushf
xlat
and
sti
test
popf
mov
or
lret
sbb
lods
popl
lods
and
mov
rclb
add
cwtl
stos
scas
loope
xlat
ss
mov
xor
push
pop
add
pop
pop
mov
sbb
add
sub
and
sbb
dec
icebp
scas
testb
sub
inc
cmc
sarb
aas
adc
sbb
pusha
jns
test
lock
cmpsl
ss
dec
sbb
loopne
push
mov
bswap
dec
in
adc
push
mov
sbb
int3
clc
xor
pushf
test
sub
add
testb
sarl
stos
scas
cmpb
sbb
and
or
mov
inc
mov
jne
sbb
and
sub
call
inc
das
repz
ds
movsb
sbbb
movsl
in
push
aad
fstpt
cli
xor
mov
cltd
mov
pushl
pop
sbb
mul
in
mov
jb
loope
fldt
adc
test
or
aad
sti
jle
sub
adc
jo
jne
mov
shll
add
inc
mov
mov
aad
test
xchg
cmp
add
sbb
or
test
outsb
mov
sub
icebp
cltd
popa
aaa
lahf
pop
mov
xchg
xor
loopne
sub
clc
pop
mov
sub
pop
jne
rcr
sbbl
inc
bound
test
cmp
fsubl
mov
pushf
mov
lret
inc
or
xorb
dec
lea
mov
jbe
and
jae
and
push
push
sbb
xchg
and
rcrl
sbb
cwtl
insl
in
or
mov
ret
popf
aas
mov
lret
loop
das
or
jo
push
pop
out
shrb
push
add
inc
cwtl
add
iret
cmp
rclb
pop
mov
or
jno
fcom
inc
mov
push
cmp
push
jbe
lahf
mov
mov
jb
lcall
das
stos
loopne
push
test
jmp
movsl
mov
fisttps
xor
add
sti
push
dec
insb
jbe
xlat
cmp
aad
dec
fucomi
cwtl
or
push
dec
cmc
jmp
cmpsl
mov
cmp
inc
xor
and
insl
sbbb
pop
sbb
mov
les
cltd
ficomps
lods
sahf
mov
mov
rcl
ficompl
mov
sub
lsl
push
aad
push
push
bound
mov
aaa
pop
sub
sti
sar
lea
xchg
sub
sub
cltd
sarb
sbb
fs
cmp
bound
or
hlt
jb
jns
sbb
ret
and
pop
fsubrs
mov
dec
or
pushf
and
loope
lahf
ds
clc
scas
test
jbe
or
cld
mov
ja
test
adc
inc
bound
sub
sub
pop
or
add
fwait
cltd
adc
jae
or
inc
jns
or
pop
outsl
push
outsl
je
add
cmp
xor
xchg
sbb
mov
gs
mov
arpl
dec
mov
xor
lcall
fdivrl
sahf
xor
repz
xor
sub
icebp
xor
lret
ret
cwtl
mov
call
xor
mov
test
push
push
mov
arpl
xor
mov
call
adc
mov
pop
jae
repnz
aad
push
and
cld
jmp
xchg
sbb
sbb
pop
cltd
push
inc
lret
push
shr
pop
insb
popa
scas
stos
push
loopne
nop
clc
xchg
cmpsb
push
mov
jb
aas
outsl
mov
add
mov
negb
mov
pop
sbb
test
mov
lods
inc
push
cmp
mov
popa
jnp
fwait
ljmp
ljmp
xchg
push
and
movhps
insb
fwait
or
or
outsb
jle
jecxz
arpl
icebp
pop
mov
xor
jbe
jge
jge
fsts
sbb
push
ret
push
add
int3
inc
inc
inc
popf
mov
jns
ljmp
rorl
and
inc
cmp
mov
das
stos
inc
sbb
enter
into
notl
pop
or
mov
and
hlt
jecxz
jle
pushf
inc
addr16
mov
mov
jmp
inc
mov
pop
cwtl
inc
stos
fs
addr16
imul
lds
sbb
cmp
sbb
jle
pusha
jle
das
fcmovne
sbb
jne
test
mov
pop
pop
out
jb
mov
leave
mov
add
and
push
add
pop
ret
lods
and
nop
movsb
cmpsl
shrl
mov
sub
js
xchg
sbb
jno
incl
inc
out
gs
mov
add
mov
lcall
pushf
outsb
fs
insb
das
jmp
sbb
into
or
data16
lea
scas
inc
ja
adc
fcomps
cmp
mov
push
pop
in
popf
in
lock
sub
ret
jae
cli
loope
cmp
cli
mulb
lock
xor
loopne
push
push
mov
mov
push
cltd
pop
sub
sbb
push
movsb
push
jae
mov
leave
and
jle
mov
jne
sbb
shrb
lds
in
seto
inc
imul
xlat
jae
mov
xchg
jge
je
sbb
dec
jns
sub
outsb
lahf
add
in
pusha
rolb
ds
dec
scas
cwtl
call
xchg
fstpl
push
lods
rorl
imul
jg
int3
aam
inc
adc
xchg
ds
scas
andb
or
and
lock
dec
jle
or
mov
outsl
xor
mov
insb
mov
mov
scas
pop
out
xor
cmpl
in
cmp
push
iret
test
daa
or
mov
ret
push
int3
mov
inc
ds
push
into
and
arpl
push
add
test
fldenv
scas
mov
fwait
shl
addr16
xchg
js
pushf
cmp
push
push
test
mov
roll
xchg
push
in
xor
ljmp
jae
shl
mov
lcall
or
fistpll
mov
mov
or
add
adc
adc
std
add
jecxz
pop
popa
push
add
fnstenv
loop
inc
sbb
mov
xor
fadd
mov
jbe
insl
push
pop
lahf
imul
lds
movsb
cmc
lods
psubusw
cmp
mov
vpmacswd
popa
scas
xor
test
xchg
arpl
fs
pop
shr
mov
and
icebp
insb
xlat
shll
cmc
fsubs
pop
mov
adc
and
jmp
mov
jmp
or
mov
inc
ss
and
jp
bound
ret
nop
fwait
roll
sub
xor
les
adc
push
aaa
decl
cs
fimull
push
mov
mov
flds
push
or
lock
fwait
rcl
adc
jae
loop
rorb
dec
xchg
dec
sub
repz
pop
je
jb
xor
rcl
lret
mov
jae
dec
dec
xchg
insl
outsb
imul
dec
pop
insb
out
fmull
and
push
lods
add
jl
imull
inc
add
or
add
test
pop
sbb
inc
out
fstpl
in
pop
out
int3
daa
cmpsb
sub
movsb
adc
ss
sbb
cmpsb
js
mov
int
fisubl
push
rcrl
xchg
je
movsb
fidivrs
cmp
pop
inc
sbb
jge
cmp
add
mov
das
into
or
popf
shrl
rcll
sbb
cmp
repz
out
push
ljmp
sub
pop
lret
xchg
aam
inc
shll
dec
pop
pop
gs
mov
push
sbb
sbbb
pop
inc
and
test
xor
scas
inc
xor
inc
or
jp
lds
or
rolb
and
inc
adc
push
and
pop
jne
xor
cmp
pop
push
inc
push
jae
inc
shrl
add
movsl
mov
fbstp
std
xor
add
loope
xchg
mov
xchg
test
sub
aam
adc
mov
and
or
mov
mov
mov
mov
data16
cmp
repnz
scas
xchg
mov
imul
iret
sbb
jb
mov
movsb
cmpsb
popa
fucomp
xor
and
out
adc
fsubr
popf
into
out
jp
insl
ffreep
orb
andl
lds
xor
scas
fildll
dec
loope
outsl
or
adc
xor
repnz
rorb
dec
push
pushf
jp
pop
sub
popa
mov
or
dec
mov
jne
cmp
pusha
insb
in
sub
add
xor
outsl
mov
mov
je
cmp
cli
std
or
mov
xchg
dec
add
pop
addr16
mov
out
aad
xchg
cmp
mov
out
rorb
xor
sub
or
xchg
jb
cmp
mov
rorl
mov
lods
sub
sti
cmp
inc
inc
mov
mov
outsb
jns
ffree
jne
mov
sbb
bnd
jl
pop
bound
je
inc
iret
outsl
mov
pop
popf
or
sub
mov
js
nop
and
imul
fstps
xchg
pop
lcall
sarl
pop
out
rcll
into
and
adc
in
xchg
movsl
cmc
push
enter
ficomps
nop
loopne
jno
mov
fildll
xorb
add
xor
or
fisttps
aas
adc
fdivrl
outsb
fwait
cs
jmp
loop
jge
outsb
mov
call
test
test
mov
rcr
mov
xchg
lock
flds
neg
adc
fs
fs
push
aaa
lds
dec
jne
or
dec
xchg
jmp
xchg
sbb
jp
xchg
popf
lret
daa
pop
or
xor
cwtl
push
adc
loop
mov
add
lea
xchg
jg
jae
mov
fnstcw
sbb
daa
or
xchg
cmp
cld
stos
push
mov
int
lcall
cli
js
fucomp
fdivrs
stc
adc
dec
into
addr16
inc
push
divl
push
mov
mov
aaa
jnp
mov
loop
dec
or
mov
lock
push
jle
xor
dec
ret
and
xchg
call
fadd
stc
out
sbb
jge
mov
mov
adc
push
push
pop
and
aaa
loope
insl
lods
adc
stos
push
sub
hlt
mov
mov
sub
popf
fdivp
inc
xchg
pusha
or
mov
adcb
xor
or
roll
retw
push
xchg
lcall
push
jp
mov
insl
fwait
lret
inc
cmp
lcall
pop
outsl
addb
stc
out
cltd
push
inc
push
mov
fsqrt
cltd
sbb
or
les
lret
pop
or
push
push
test
inc
js
das
mov
mov
jmp
cs
into
scas
or
add
incl
jl
imul
adc
push
nop
and
mov
orb
int3
rorl
inc
adc
pop
scas
fwait
loop
fadd
pop
push
mov
xchg
sbb
test
or
push
xlat
xor
pop
inc
inc
xchg
test
inc
leave
and
jbe
loop
cmp
out
push
sub
stos
sub
in
bound
and
mov
sbb
sub
or
xor
or
dec
outsb
mov
movsb
lods
fiaddl
sub
sbb
or
sub
shlb
xor
inc
std
pop
pop
int3
push
test
daa
inc
pop
nop
push
into
inc
std
addr16
js
add
mov
inc
pop
loope
movsb
shlb
dec
out
decl
dec
sahf
in
push
adc
into
adc
test
std
xor
fldcw
roll
xchg
or
icebp
mov
mov
xchg
adcl
sub
lods
push
xchg
push
gs
push
lcall
adc
adc
movsb
xor
rorb
xor
add
and
jbe,pn
push
jge
xchg
sub
inc
xchg
daa
adc
test
pop
sub
add
cmc
fstl
cs
ds
nop
fistpl
xor
lods
mov
addr16
jbe
mov
mov
cmp
sbb
and
add
xchg
clc
and
xlat
out
dec
aad
jle
jmp
pusha
icebp
imul
js
shr
cmpsb
mov
out
repnz
mov
std
push
shlb
out
lods
adc
repz
xor
fidivrl
mov
ret
fs
pop
jae
adc
pop
pop
js
adc
mov
jp
ljmp
dec
mov
inc
fdivs
icebp
mov
movsl
xlat
in
divb
fstp
ljmp
xor
or
jle
stos
sbb
bound
sub
xchg
push
pop
fwait
int3
std
pop
fnstsw
cmpb
les
andb
adc
xor
adc
lea
jbe
fidivrs
in
and
adc
insl
sub
divl
pop
xchg
jb,pt
lods
cli
sub
mov
or
loopne
sub
leave
call
sbb
push
mov
mov
mov
or
mov
inc
mov
dec
add
and
stos
or
sbb
cltd
notl
popl
out
adc
ds
cli
jge
movsl
ss
shlb
push
mov
xchg
int
pop
imul
add
push
xorb
push
ds
add
push
xchg
or
adc
inc
cmp
jno
pop
or
icebp
ret
gs
jne
mov
subl
rcl
insl
and
and
call
jmp
leave
std
add
mov
loopw
mov
sub
add
mov
jp
aaa
mov
jb
xchg
sub
stos
inc
pop
insb
and
add
sbbl
std
sar
test
fcmovb
insl
arpl
push
rclb
jle
add
or
pop
mov
fldenv
pop
pop
pop
mov
push
cmp
sbb
mov
je
inc
push
aaa
adc
sub
cmpsl
mov
addl
clc
nop
push
or
jp
jns
sbbl
jno
sbb
cwtl
mov
push
out
fwait
loope
sub
xchg
cli
aad
pop
mull
push
fisttpl
int3
and
xchg
stc
inc
aam
inc
stos
pop
ljmp
lods
xlat
shrb
cmc
mov
shr
in
stos
push
imul
in
enter
int
fwait
inc
dec
outsl
scas
dec
lods
outsl
test
pop
dec
repnz
popa
testl
mov
push
push
cmp
ret
adc
pop
decb
mov
pop
jns
fwait
addr16
js
cmpsb
pop
loope
and
data16
fsubrl
aaa
sub
lods
fildl
pop
lea
sbb
fsubl
push
aad
dec
sub
add
fiaddl
xor
ja
mov
les
adc
std
jmp
sbb
push
dec
mov
mov
mov
je
icebp
iret
shr
leave
or
insb
and
mov
sbb
xchg
xchg
jae
pop
xor
mov
or
movsl
adc
sbb
stos
xor
add
stos
fisttps
int
pop
sahf
scas
scas
rclb
pushf
aaa
aam
xchg
jb
addr16
cld
pop
fs
std
loope
sub
fiadds
enter
xchg
loope
iret
jmp
repnz
and
mov
fnstenv
pop
fwait
mov
pusha
jl
mov
sub
cwtl
pop
cmc
addr16
dec
xchg
xor
dec
sub
test
jge
and
cwtl
jmp
mov
orl
clc
cmc
ljmp
mov
cli
fmull
or
mov
scas
ja
mov
mov
xchg
mov
popf
sbb
pushf
add
adc
push
cs
lods
cmp
pop
fisttps
loope
or
inc
scas
lcall
pavgb
pop
mov
gs
mov
adc
push
mov
nopl
xor
sarb
popa
test
mov
xchg
cmp
stos
sub
int3
push
int3
push
jg
rorb
add
fadds
and
xor
jbe
jecxz
jae
jno
mov
fs
test
fstl
push
mov
add
lahf
jnp
inc
push
push
pop
scas
fs
lea
sub
outsb
call
xorl
daa
add
inc
xchg
loopne
fnstenv
and
ss
test
jmp
jnp
cmp
pop
push
repz
out
incl
mov
dec
sti
xchg
rcll
jns
push
push
dec
pop
fmuls
lahf
or
dec
fsub
sti
ja
ja
dec
or
scas
jbe
lea
jne
sbb
popf
mov
js
aam
add
imul
add
inc
jmp
xchg
insb
imul
dec
jnp
inc
jbe
lret
xlat
js
xchg
cmp
inc
stos
sahf
call
cmp
insb
xchg
or
inc
mov
hlt
push
out
inc
pushf
xlat
dec
or
mov
pop
and
or
dec
mov
orl
mov
adc
and
pushf
pop
adc
nop
nop
or
fldl
xchg
xchg
or
test
sbb
cmp
repz
xchg
lods
push
pop
sbbl
xor
sbb
dec
cwtl
mov
push
pop
push
or
mov
cld
stos
push
int3
lods
jb
mov
dec
aas
jmp
push
mov
adcb
ret
cmp
mov
cmpsl
mov
mov
dec
addr16
out
inc
mov
dec
xor
add
enter
fcmovnbe
leave
ret
or
xchg
mov
adc
add
jbe
jl
add
inc
cli
or
insb
jmp
push
cmc
lock
mov
sbb
lahf
xor
arpl
imul
cmc
adc
xor
rclb
mov
jg
stos
mov
mul
add
cld
xchg
aad
decb
mov
inc
les
push
setb
xchg
inc
repz
imul
mov
sbb
dec
clc
cmpsl
add
js
mov
push
scas
fwait
stc
stc
in
pop
enter
mov
inc
xor
lock
and
das
mov
in
movsb
jno
sbb
inc
jg
jbe
js
jae
test
add
inc
int3
add
cltd
sbb
out
leave
xchg
imul
push
mov
add
cmpsl
mov
ret
popa
dec
push
jns
scas
into
sub
popa
push
xor
xor
mov
dec
outsb
pop
cmp
cmp
in
bound
xor
mov
sub
je
shlb
je,pt
aam
lcall
pop
insb
sub
rol
xor
and
add
mov
das
or
dec
iret
test
mov
clc
push
push
push
cmpsb
sti
xor
push
sbb
jmp
inc
mov
cmpsb
mov
fcoml
lret
mov
adc
scas
or
push
fistpll
push
jl
dec
sub
leave
stos
insb
ljmp
cmp
out
push
mov
jecxz
xchg
and
mov
jo
cmp
sub
mov
mov
ljmp
mov
es
add
or
idivl
dec
xchg
daa
push
nop
loop
push
cmp
test
or
mov
dec
rclb
sbb
fnstenv
lcall
pop
movsl
xor
icebp
pop
sub
adc
jecxz
mov
jno
les
mov
mov
push
test
out
cmp
std
xchg
pop
push
pop
hlt
or
and
std
bound
lret
stos
mov
outsl
jae,pt
add
jl
movsl
inc
enter
cs
fs
out
inc
je
icebp
push
scas
mov
pop
lods
dec
mov
or
imul
sub
mov
subl
pusha
cltd
xchg
leave
jns
sbbb
lock
jns
pop
pop
push
addr16
add
pop
lods
outsb
add
in
xchg
out
fs
cmc
sbb
inc
adc
outsl
lds
not
out
cmp
js
aaa
push
stos
jp
ret
or
iret
cmpsb
sbbl
in
dec
mov
mov
jl
or
jnp
xchg
adc
sbb
fwait
jp
loop
push
and
and
mov
jge
bound
ss
dec
bound
je
jmp
lods
mov
sub
mov
je
xchg
bound
xor
push
and
insb
pop
sti
cmp
push
cld
or
lds
xchg
xchg
cld
aad
push
pop
jns
clc
add
pop
pop
out
pop
cmpsl
cmp
sub
jp
mov
mov
fidivl
leave
pop
xchg
nop
fstpl
jns
cmp
xchg
sbb
cltd
lahf
fdivrs
enter
mov
daa
gs
xor
xor
jmp
sahf
ret
aam
jae
sbb
mov
movsl
mov
add
sub
or
adc
fistl
sbb
cmp
push
ss
push
cmp
adc
cwtl
scas
inc
push
push
push
xlat
push
push
sub
and
aad
xor
lods
adc
pop
addr16
addr16
loope
sbb
mov
sbb
pop
mov
push
addl
or
faddl
mov
dec
aaa
sbb
sar
loop
inc
mov
rclb
sarl
jne
icebp
or
lock
dec
sar
fdivrl
test
imul
in
es
push
pop
sar
jnp
subb
stos
mov
fistpl
xor
dec
outsl
sbb
shl
pop
in
jns
adc
int
in
and
notb
cmpl
cmc
adc
lahf
inc
test
pop
and
icebp
push
push
sub
jo
pop
imul
adc
daa
jge
mov
jb
mov
jecxz
adc
ss
jl
icebp
push
push
or
test
pop
mov
pop
je
add
rcl
or
mov
mov
xor
inc
mov
std
sbb
jns
mov
iret
xor
fbstp
pop
fnsave
dec
dec
mov
push
repz
cs
fldcw
xlat
push
xlat
nop
hlt
mov
scas
arpl
call
mov
in
xchg
jmp
xchg
mov
xor
shll
test
pop
pusha
lods
add
fmull
enter
icebp
mov
cmpsl
sbb
dec
fisubrl
adc
cmc
sbb
ret
mov
lcall
rcrl
clc
sar
inc
xchg
lds
sti
lretw
jno
xor
ret
gs
fisubl
xchg
add
mov
inc
repz
aam
sbb
cwtl
lods
scas
sbb
xor
ljmp
pop
movsb
sub
dec
or
addr16
dec
addb
add
pop
xchg
mov
in
push
icebp
in
je
mov
and
pop
js
popa
dec
lahf
scas
test
inc
jle
xor
gs
ret
jno
fcomps
divl
cmpsb
mov
daa
fsts
jae
fcomp
cs
out
and
dec
loopne
push
mov
jno
loop
jb
dec
push
fcomps
add
scas
mov
fimull
and
adc
adc
sbb
adc
lods
pop
icebp
adc
ret
jbe
xor
dec
cmp
push
xor
dec
lods
jecxz
mov
es
shrl
arpl
add
dec
mov
pop
das
pop
test
repnz
add
push
sbb
icebp
add
lcall
jl
addl
ja
dec
adcb
push
push
ficoms
xchg
insl
addb
jg
xlat
movsb
add
sbb
cmp
push
sub
or
bound
or
jno
xchg
xchg
jmp
dec
mov
adc
cmp
pop
insl
out
test
add
aaa
sub
test
in
adc
insb
and
mov
cmpsb
cmp
pop
jmp
punpcklbw
pop
adc
ljmp
into
jp
dec
mov
xchg
mov
cmp
nop
jbe
ficoml
jg
inc
movsl
cmp
mov
sbb
mov
cs
cwtl
aas
rcrl
cwtl
lret
dec
test
lcall
ret
mov
xlat
push
test
jmp
xchg
xchg
or
inc
jmp
iret
psadbw
fxch
xchg
shrb
adc
mov
sbb
and
stos
push
mov
mov
fmuls
adc
outsl
and
cmp
leave
sahf
ja
mov
mov
pop
enter
sbb
lea
into
jno
and
push
int3
or
out
push
sub
pop
or
test
fwait
or
jo
insl
sbb
lcall
pop
orl
push
mov
adc
ficoms
inc
push
sub
xor
jbe
jmp
loop
mov
cmp
pop
das
jo
fsts
xchg
mov
cmp
mov
cmc
shlb
mov
outsb
lea
movsl
push
insl
insl
adc
add
xchg
xchg
dec
daa
stos
lods
call
into
adc
cmp
sub
out
idiv
mov
mov
pop
lcall
cmp
add
subb
aad
mul
cmpsb
adc
clc
out
adc
lret
push
or
sahf
pop
leave
push
dec
xor
mov
fiadds
test
add
sbb
pushf
xchg
jo
xor
enter
inc
push
movsl
mov
jmp
mov
mov
mov
adc
push
add
iret
fildll
mov
inc
lret
mov
sar
lods
xor
out
aaa
sbb
js
and
mull
mov
dec
je
lahf
jl
jo
imul
in
and
icebp
or
fistpl
pop
push
push
or
std
fists
jp
gs
sbb
adcb
shlb
jnp
enter
add
enter
sbb
push
push
and
add
fisubrs
pop
mov
fs
pop
or
loop
sarl
orl
mov
lahf
sub
mov
iret
icebp
or
cmpsl
sbb
mov
movsb
das
and
dec
add
xor
outsb
adc
scas
or
pop
aad
ss
pop
in
xchg
scas
and
sbb
insl
icebp
jne
scas
push
test
dec
std
aam
data16
mov
es
cmp
xchg
ffree
stos
loopne
lret
mov
movsb
push
pushl
lods
xor
je
xchg
iret
in
mov
mov
stos
stos
xchg
xchg
dec
lods
insb
addr16
es
roll
es
jp
xchg
icebp
pop
cmpl
jp
cmpsb
dec
xchg
sbb
sbb
xor
insb
push
pop
sbb
imul
data16
stos
dec
pop
andb
pop
pop
mov
dec
inc
fstps
mov
mov
jo
mov
ds
mov
xor
dec
cwtl
rcrb
ja
cmp
jecxz
into
cli
pop
ficoms
rcrl
fnstsw
ds
adc
xor
xchg
sbb
fs
fcoml
push
cs
les
mov
inc
push
scas
mov
je
pusha
mov
out
sub
nop
mov
mov
sub
lcall
outsb
cmpsb
sbbl
cmp
neg
out
or
pop
clc
mov
mov
jno
mov
pop
xor
lds
push
cmp
adc
dec
pop
popa
mov
mov
mov
dec
pop
cwtl
mov
and
out
aad
jo
in
mov
mov
adc
push
imul
cmp
jmp
das
jge
movsl
push
push
sbb
shlb
inc
and
mov
das
ret
popl
inc
mov
sahf
mov
scas
repnz
into
test
sub
add
iret
jne
hlt
leave
jns
xchg
sub
loope
shll
fstps
scas
mov
orl
adc
cmc
movsb
les
pushf
dec
xlat
mov
outsl
lret
or
imul
pop
out
xlat
or
dec
fwait
test
mov
xchg
mov
icebp
out
es
sbb
stc
push
or
push
push
jo
sub
mov
cmp
or
inc
sub
cli
sarl
push
xor
pop
jae
mov
mov
pop
push
call
cmpsb
mov
push
jmp
cmp
adc
xchg
hlt
or
jp
loopne
fistpll
and
cmp
mulb
mov
lret
movsb
scas
mov
jae
std
add
and
repz
jp
or
adc
push
arpl
inc
int
test
mov
or
xor
cmpsb
xchg
rorb
cwtl
jnp
loopne
jmp
orb
pop
test
in
sbb
adc
rolb
sub
cltd
inc
sub
jae
mov
xchg
cmc
mov
imul
inc
pop
pop
iret
test
adcb
inc
and
outsb
jmp
pop
jg
and
jo
gs
mov
shl
sub
lret
rcrl
mov
frstor
lahf
arpl
xor
xchg
jge
jae
dec
and
push
push
pop
hlt
sahf
cmpb
daa
cld
mov
popa
pop
loope
lods
fistps
lcall
addr16
or
cmp
cmp
inc
xor
mov
in
js
dec
test
imul
push
fdivl
test
dec
xchg
add
mov
add
mov
ss
arpl
cld
sbb
clc
xor
pusha
das
ret
inc
jle
lock
mov
sbb
mov
dec
xor
xchg
loope
pop
and
insw
add
int3
mov
inc
gs
lret
fdiv
mov
pop
push
pop
sub
imul
push
ds
jg
add
std
ret
xor
pop
mov
repnz
jo
movsb
es
pop
mov
sahf
je
or
frstor
inc
xchg
out
mov
stos
adc
jmp
outsb
cmpsb
jmp
pop
xor
movnti
movsl
sahf
sub
rolb
ljmp
mov
jnp
sub
ror
cmp
mov
pop
jmp
mov
das
sub
inc
shrl
arpl
ja
and
xchg
xchg
and
mov
std
divb
lret
std
push
mov
mov
mov
adc
jo
bnd
cmpsl
rcrb
jns
xor
pushf
dec
mov
and
out
mov
mov
push
sarb
aad
mov
outsl
addr16
lret
dec
fs
addr16
adc
push
out
push
fwait
mov
add
dec
jae
mov
sub
out
movsl
dec
ljmp
jb
sbb
xor
stos
pusha
fcompl
push
or
cmp
out
and
inc
add
push
xchg
add
mov
xchg
sbb
sub
mov
xor
or
mov
sub
test
jnp
sbb
shl
push
sti
stc
imul
pop
iret
sahf
sub
arpl
into
add
dec
sbb
jl
ljmp
push
dec
or
icebp
outsb
inc
int
inc
int3
clc
push
xor
mov
lret
or
fcomps
jnp
bound
aad
cmp
jnp
fiaddl
mov
adc
fistps
das
lret
adc
into
iret
sti
mov
push
stos
jg
mov
jmp
cld
movsb
sbb
pop
xorl
pop
and
jmp
and
push
add
mov
das
int3
andb
and
xchg
or
push
je
mov
sbb
push
cmp
mov
cli
icebp
mov
imul
mov
sub
jle
xchg
push
jb
bound
mov
adc
xchg
outsl
inc
xchg
mov
pop
ret
mov
push
loope
movsb
sahf
jmp
jecxz
sahf
mov
repnz
orb
push
cmp
inc
loop
pop
out
sbbb
push
cmp
flds
push
mov
les
dec
mov
cmp
clc
mov
pop
add
imul
into
sub
or
mov
xchg
add
mov
mov
cwtl
mov
mov
arpl
xor
bound
add
and
enter
dec
fisttps
and
scas
daa
fildll
mov
cmpsl
stc
lret
fs
out
fs
rol
sub
push
sub
pop
outsb
dec
cld
pop
xchg
int
push
cld
ja
add
fld
mov
mov
or
inc
push
fcomi
movsl
out
push
cltd
lret
in
push
aam
movl
mov
lret
loopne
cwtl
pop
neg
sub
sub
sahf
pop
cmp
in
mov
xor
popa
mov
movsb
or
push
paddusb
dec
daa
add
enter
popa
cmp
push
mov
test
pusha
inc
shl
mov
or
jns
push
cmpb
shll
imul
pop
dec
ja
inc
add
inc
jb
mov
jecxz
or
call
fs
mov
dec
je
cs
and
lds
and
into
mov
cld
adc
arpl
movsb
ss
mov
in
jl
insb
xchg
pop
pop
das
mov
inc
push
xor
pusha
and
jns
lcall
sub
fs
call
push
pop
sahf
jp
frstor
js
idivl
push
enter
imul
insl
dec
push
popf
arpl
daa
xchg
or
pop
mov
pop
dec
xor
imul
in
or
lret
push
popa
repnz
andl
cmp
jmp
dec
rcrb
in
lods
or
das
sub
push
or
cmpsl
inc
fwait
nop
xor
push
push
fisubrl
pushf
ss
pop
das
dec
les
pop
add
xchg
xchg
mov
xchg
cmp
mov
inc
pop
jle
in
ljmp
dec
push
cmpb
out
out
test
mov
dec
xlat
scas
clc
xchg
dec
adc
jl
sbb
pop
cmp
std
cmp
aaa
dec
and
in
cmc
inc
mov
mov
cmp
repnz
jge
lods
xchg
push
cli
adc
pop
shl
std
dec
and
adc
fidivs
icebp
rcl
out
or
sub
jecxz
jb
and
inc
iret
adc
lods
push
shll
push
xor
xor
and
dec
gs
pusha
imul
enter
icebp
jecxz
sbb
dec
arpl
or
dec
inc
mov
xchg
cmp
test
mov
pop
arpl
xchg
mov
cmp
js
xchg
loop
xchg
mov
sbb
int
decl
lock
popf
or
adc
push
popf
daa
rcrb
adc
clc
xlat
clc
jge
dec
xor
pop
sub
mov
stos
xchg
lret
xchg
cwtl
sub
sbb
addr16
in
jb
sub
push
repz
lods
andl
push
lret
mov
jp
scas
data16
in
cmp
sub
arpl
mov
shr
ret
nop
movsl
ds
or
or
sbb
jl
xchg
out
cltd
fsubrl
negb
xorb
cmpl
and
mov
mov
roll
jp
sub
cmp
iret
ret
xchg
leave
sbb
lea
push
pop
push
pop
sbb
fdivrs
aaa
add
rcr
jnp
test
fs
call
les
in
aad
xor
xchg
or
imul
sbb
adc
push
cmpsb
orl
xchg
inc
in
add
jl
xor
inc
fisttps
push
push
mov
jp
fisubl
std
and
lcall
lods
push
aas
paddusw
or
inc
addr16
mov
rcrb
orb
xchg
sub
es
enter
divb
dec
mov
fsubrs
lds
xorb
les
pop
push
and
cmpl
mov
enter
and
jmp
add
ror
pop
pop
filds
jge
xchg
movsw
mov
mov
cmpb
xchg
and
aas
mov
push
add
lods
ret
cli
sub
negb
xor
inc
aas
inc
movsl
dec
push
xchg
loop
inc
sahf
icebp
push
scas
and
mov
push
jp
in
mov
mov
lcall
sahf
clc
cltd
repnz
loope
pop
scas
add
jg
call
mov
inc
jns
dec
bound
roll
into
pop
mov
xchg
in
cmpsl
clc
out
stos
cmp
adc
movsb
xor
mov
cmpsb
add
int3
sbb
pushf
dec
mov
dec
inc
adc
push
test
ret
imul
mov
icebp
mov
xor
jne
jns
xchg
cmp
insl
icebp
pop
ret
testl
test
jmp
scas
in
scas
xor
imul
in
push
out
ljmp
fimuls
jmp
dec
and
cs
icebp
outsb
iret
fsub
pop
dec
pop
ljmp
sbb
jge
fildl
mov
mov
fsubl
mov
test
xor
ljmp
not
les
pop
xchg
push
incb
dec
cmp
xor
xor
fdivrl
sub
fistpl
pushf
scas
and
aas
into
pop
cmp
inc
inc
lods
or
sub
stos
dec
movsb
rcrb
sub
sbb
sbb
dec
or
adc
sahf
lock
aas
lret
mov
sbb
aad
pop
fstl
clc
dec
lea
cld
sbb
pop
and
adc
insl
test
das
and
xor
gs
es
dec
popa
test
stos
jns
loop
cmpsl
cmp
sub
push
sub
xor
popl
fwait
daa
and
popa
push
sbb
mov
mov
mov
test
fdivs
cmpsb
repz
lea
add
cmpb
and
iret
jb
xor
and
cmp
movsb
xchg
jge
andl
mov
jb
in
push
into
or
ja
arpl
insb
xchg
xchg
mov
xor
mov
loop
add
lods
fsubl
in
or
add
jne
and
loope
push
inc
add
cmp
test
out
xchg
xor
sti
fmulp
or
dec
sbb
mov
rol
aad
shll
dec
ljmp
outsb
pop
insl
inc
add
push
add
leave
leave
or
sbb
loop
cwtl
mov
and
xchg
fildll
std
mov
pusha
or
xchg
push
push
in
arpl
cmp
scas
and
add
insl
push
jp
fsubrs
xor
pop
push
insb
pop
gs
aas
push
sbb
inc
dec
add
push
sar
adc
mov
and
dec
and
mov
outsl
xchg
daa
in
sub
push
jbe
insb
aam
enter
fcmovne
adc
insb
and
xor
pop
idivb
outsb
sbb
inc
pop
pusha
cmpsb
leave
cmc
xchg
add
xchg
push
scas
clc
adc
notrack
aas
repz
and
clc
dec
xchg
dec
shlb
into
nop
movsb
in
imul
xchg
cmpsb
mov
push
outsl
shlb
inc
lods
inc
sahf
movsb
add
xchg
dec
in
mov
mov
mov
and
imul
movsb
dec
jbe
sti
decb
xor
inc
cmc
aad
pop
and
inc
lcall
pop
lea
adc
lods
int3
in
xor
es
mov
fcompl
fmull
adc
push
addb
ret
mov
cld
in
jo
add
ss
aaa
loopne
push
xor
hlt
xchg
int
sbb
scas
je
sbb
or
hlt
loop
adc
sti
dec
adcl
inc
pop
inc
dec
inc
inc
cmpsb
bound
mov
inc
adc
bound
int3
jl
scas
lea
out
fnstsw
xchg
pusha
push
lret
popa
xchg
fnstcw
cmp
inc
stc
fistl
add
sub
mov
adc
ret
mov
nop
loopne
movsb
jmp
dec
inc
popa
inc
sbb
mov
inc
cmp
in
dec
xor
sarl
push
mov
and
daa
cmp
fnstcw
xor
inc
jne
xchg
jbe
push
in
pusha
cmpsb
jnp
aaa
cli
shr
pop
mov
bound
insl
adc
mov
cld
mov
push
adc
js
filds
inc
sub
sbb
ss
popa
sbb
mov
mov
js
xchg
in
or
mov
xchg
jg
inc
jge
stos
xchg
adc
jp
mov
dec
lods
notb
push
stc
sbb
movsb
aas
mov
xchg
jae
lods
cmpsb
adc
or
and
dec
pop
sub
xchg
shl
gs
xchg
xchg
mov
pop
stos
mov
sar
or
xchg
push
aam
cmpsb
pop
adc
xchg
loope
frstor
jae
loopne
pop
in
xchg
out
dec
dec
adcb
outsl
out
jb
test
and
pushf
xchg
pop
xor
or
aas
jne
hlt
sbb
ret
cmp
sub
sub
xchg
xchg
mov
jno
pop
clc
pop
mov
cwtl
ds
jns
push
mov
arpl
xchg
mov
cmpsb
subb
jge
clc
mov
pop
sub
push
repz
mov
out
js
lcall
and
mov
dec
sub
jb
inc
popa
pop
loope
fdivs
je
dec
mov
mov
cld
cmc
out
popf
dec
dec
jae
xor
les
andl
enter
cltd
dec
mov
lahf
or
mov
sti
in
and
mov
int
pushf
imul
adc
test
adcl
sbb
lods
mov
jp
jnp
addr16
sub
add
pushf
orl
add
add
add
jo
sbb
mov
xchg
jle
scas
jmp
fbstp
repz
test
mov
lods
jp
out
fnstsw
push
cwtl
aad
scas
lock
cwtl
lahf
fwait
push
out
inc
rorb
or
push
nop
cmc
push
and
jb
mov
mov
popa
cmc
sbb
mov
mov
jle
dec
outsl
leave
lahf
sub
sahf
lret
out
mov
cmp
outsb
or
inc
iret
cmp
mov
nop
push
pusha
out
test
sub
mov
ljmp
xchg
mov
idivl
loop
rorb
inc
mov
lds
roll
test
jmp
mov
mov
dec
xchg
fwait
or
mov
jnp
retw
sub
add
iret
adc
out
in
push
mov
arpl
jae
dec
pushf
xor
test
cmp
xchg
xchg
fidivs
stos
or
aas
push
in
push
or
test
fldt
adc
fwait
popa
mov
ret
xchg
and
push
pop
andl
pop
mov
mov
inc
pushf
push
fs
out
sbb
pusha
into
cmp
int
adcl
jecxz
or
jb
sub
es
and
ljmp
dec
dec
push
push
enter
jecxz
and
add
scas
add
xor
ljmp
sub
cltd
adcl
push
and
fld
dec
xor
dec
mov
inc
testl
and
xchg
jae
lahf
stc
insb
mov
leave
hlt
mov
out
int
pop
or
mov
inc
push
mov
ret
int3
das
mov
and
jae,pn
sub
fs
into
ss
xchg
loope
push
fnsave
pop
add
mov
cli
aas
test
add
adc
and
cmp
pushf
mov
cmpl
dec
int3
and
jno
xchg
sub
out
iret
jae
mov
push
or
popa
xchg
dec
subb
adc
mov
dec
out
cmp
xchg
sub
fnsetpm(287
xchg
mov
subl
dec
sbb
arpl
jp
je
dec
add
xchg
mov
push
fiadds
fimull
jecxz
mov
test
lcall
push
add
or
jnp
jmp
pop
es
mov
xchg
aaa
rcr
imul
inc
mov
addb
add
sahf
bound
inc
push
pushf
adc
int
stos
lds
xor
sbb
push
mov
or
lcall
push
sub
test
inc
jbe
hlt
sub
cmpsb
xchg
rclb
pop
cmp
inc
sub
push
sarl
cmp
sub
xchg
pop
and
cmc
xchg
insb
push
jp
cmpxchg
xlat
xor
shll
jnp
xor
shll
add
movsb
out
xchg
dec
sub
mov
aaa
cmp
mov
adc
dec
imul
jle
out
mov
sahf
das
mov
ljmp
and
pop
mov
and
cmp
inc
loop
lods
ja
cmp
push
jno
in
jbe
popw
das
les
push
pop
icebp
mov
das
jmp
and
sbb
lds
xchg
pop
cmpsl
cwtl
adc
cmp
aam
fimull
push
or
cld
pop
xchg
repz
jmp
rolb
inc
repz
dec
adc
ror
push
sbb
ret
jb
mov
fs
leave
sub
movsl
xchg
ljmp
std
sbb
inc
das
sahf
ds
xor
ficompl
mov
cmpsb
inc
je
inc
or
dec
xchg
sbb
out
or
test
mov
nop
cwtl
mov
push
outsl
mov
rcrl
add
pushf
jb
ficoms
shl
sbb
ss
aas
lret
aas
in
push
addr16
nop
mov
mov
je
sub
loop
lret
adc
addb
or
cmp
in
add
sbb
xchg
daa
pop
iret
cmp
mov
insl
js
pop
pop
and
ds
hlt
test
push
and
rorl
pop
aam
xchg
stos
pop
cli
mov
mov
shll
and
mov
sahf
dec
or
push
pop
test
shrb
arpl
mov
aad
mov
push
mov
mov
push
jle
mov
lea
jbe
mov
rorb
movsl
mov
push
xchg
int3
divl
das
inc
jno
dec
cmpsl
jne
push
int
xor
add
rcrb
mov
bound
mov
out
out
arpl
inc
xchg
cmp
mov
ja
movsb
testb
mov
pushf
xlat
xor
mov
mov
xchg
jmp
inc
std
and
mov
cltd
xlat
sahf
ljmp
cmp
and
in
cli
jo
sbb
mov
subl
and
pushf
lret
mov
or
mov
xchg
or
jl
bound
inc
into
pop
adcl
pop
mov
mov
jle
pop
cmp
xchg
aas
nop
adc
lods
out
sarb
add
loopne
jl
pusha
sub
aad
sarl
jbe
bound
pop
in
pushf
frstor
imul
inc
pop
aam
mov
xchg
loop
mov
and
push
pusha
sbbl
ret
xchg
mov
dec
cmp
int3
outsl
nop
push
stc
xchg
jmp
push
int
in
test
adc
mov
cltd
cmp
or
in
sbb
adc
in
mov
insb
push
push
and
sub
je
test
arpl
rcrb
les
clc
cmp
mov
je
gs
pushf
cs
outsb
addr16
mov
xchg
insb
pop
sub
dec
loope
out
cld
shlb
movsb
ja
lcall
xor
pusha
push
cwtl
popa
cmp
cs
out
out
scas
jmp
add
jae
pop
cmp
mov
js
fisttpl
or
pushw
add
jp
and
cmpsb
sub
jmp
les
lea
mov
sbb
fidivrl
jns
dec
mov
imul
or
out
cmp
pop
mov
and
mov
out
jmp
jns
std
and
or
inc
das
ljmp
repnz
shrl
xor
lcall
stc
mov
leave
and
into
in
push
nop
mov
or
mov
xchg
sarb
sbb
popf
aas
dec
into
xor
cmpsb
rorb
and
lret
xor
xchg
insl
in
cmp
lea
sub
dec
mov
clc
adc
mov
dec
ljmp
stos
jp
cmp
ss
mov
test
xor
lods
in
scas
pop
out
pop
shll
and
push
or
push
mov
test
dec
test
mov
mov
jge
clc
outsb
jo
pop
mov
cmp
xor
lds
rcll
fs
xor
std
lods
repnz
or
cmp
je
gs
or
push
pop
pushf
loopne
aas
stos
push
stos
enter
hlt
dec
jge
aam
sub
daa
pop
idivb
dec
pop
lcall
dec
add
mov
inc
mov
mov
adc
fisubs
cmp
std
sbb
xchg
push
adc
lcall
lret
imul
push
fmulp
sub
push
enter
inc
mov
xor
sbb
je
test
xor
lcall
aad
fst
xchg
mov
sub
out
sub
fists
sahf
sbb
push
arpl
into
mov
adc
lea
cmpsb
lods
and
push
out
and
clc
loope
jl
pop
cmp
push
cwtl
rcll
fcomps
es
repnz
push
fwait
outsl
in
adc
dec
mov
sbb
adc
repnz
mov
movsb
sub
movsb
ljmp
cmp
cwtl
dec
jp
jmp
push
jmp
outsl
pop
mull
bound
leave
out
xchg
add
imul
insb
mov
jb
outsb
aad
sbb
outsb
scas
dec
add
pop
adc
sahf
outsb
test
xchg
outsl
shrl
cmp
sbb
out
test
jmp
test
sub
stos
or
xchg
push
fistps
mov
add
dec
cltd
adc
dec
adc
sub
or
sub
ds
sbb
call
movsb
mov
or
push
sub
xor
test
xchg
cmp
insb
mov
mov
xor
xchg
mov
push
and
mov
adc
out
jmp
inc
outsl
test
jge
loop
imulb
in
xchg
testl
sti
inc
xchg
lea
sub
pop
mov
pop
dec
sbb
lret
mov
push
sub
call
mov
sarl
pop
and
push
je
mov
inc
adc
loopne
ss
out
sti
lcall
lods
repnz
xchg
lock
jge
and
pop
adc
inc
mov
loopne
dec
outsb
mov
jns
xor
adc
cmp
cmc
mov
and
mov
movsl
jo
cld
adc
pop
sub
mov
and
adc
inc
and
add
pop
ret
movsb
aaa
scas
lahf
movsb
out
loope
rclb
cmpsb
mov
fcmovbe
mov
dec
jp
div
sub
movsb
cld
fnsave
lcall
aad
xchg
push
jo
in
jl
imul
adc
push
rolb
imul
adc
push
dec
mov
jo
push
mov
adc
cmp
mov
insb
bound
scas
shrl
inc
hlt
fsqrt
iret
jno
pushf
mov
cs
addr16
inc
mov
sub
inc
cmp
loopne
pop
test
jns
movsl
jbe
orb
jge
lret
cmp
call
push
inc
xchg
insb
sub
gs
mov
ret
movsl
int3
lock
bound
mov
xor
addb
insl
ds
std
dec
testb
add
inc
out
mov
and
xor
xchg
push
inc
pop
or
mov
xlat
pop
test
data16
cmpsl
in
xor
aaa
and
inc
pop
pop
ljmp
sub
sub
roll
fs
dec
push
xor
push
jg
cmp
clc
pop
inc
je
dec
pop
push
dec
mov
popa
imul
mov
pop
pop
aad
sti
pop
daa
fdivrs
jno
sbb
and
fldenv
push
stos
cs
jno
stc
push
dec
movsb
adc
sub
popf
adcl
pop
pop
shr
mov
inc
addr16
into
sub
fcmovb
leave
sbb
mov
sub
and
mov
sub
mov
loopne
clc
and
lcall
push
jnp
repz
pop
mov
push
xchg
mov
mov
push
push
add
cmp
test
cli
les
jg
fmull
and
mov
loop
testl
pop
add
sub
add
popf
and
sub
outsl
shrb
fildll
mov
loope
sbb
add
pusha
bound
jns
cltd
mov
fs
pop
adcb
popf
out
addr16
cs
mov
cmpsl
bound
outsl
dec
mov
imul
pop
mov
pop
aad
in
mov
js
ja
or
ds
add
jge
sbb
call
xor
fcoms
and
iret
lcall
stos
mov
xchg
fucomip
mov
scas
cmp
int
roll
or
or
int3
cld
int
push
cmpsb
jmp
sti
dec
clc
out
or
add
ret
in
or
jo
or
std
xchg
mov
ficoml
pop
loopne
cmp
mov
js
in
and
ja,pn
mov
push
push
mov
popa
jmp
or
cli
inc
call
sbbl
call
inc
mov
stc
sbb
or
loop
push
mov
jp
xor
fcomps
or
cmpsb
outsb
cli
fs
mov
or
xchg
pop
insb
ljmp
or
xor
ret
or
lods
mov
mov
mov
sbb
loopne
stos
add
inc
fucomp
shrb
lret
jecxz
vphadddq
nop
inc
cwtl
mov
lcall
inc
mov
mov
gs
mov
fldenv
jg
xchg
int
ret
scas
jge
adc
or
imul
adc
jmp
add
push
xchg
sub
popf
add
or
les
mov
test
pop
mov
pushf
inc
push
subw
loopne
mov
cmpb
dec
iret
mov
insl
ret
push
gs
xchg
and
ret
pop
xchg
mov
mov
outsl
es
shrb
std
bound
mov
ljmpw
jns
inc
xor
fsts
add
or
sar
inc
inc
cld
stos
loop
pop
faddp
stos
decl
fcomps
loope
imul
lcall
jbe
adc
popf
sbb
xchg
mov
cmp
mov
add
mov
sbb
push
les
sbb
sbb
shrl
mov
jo
jmp
pushw
xchg
sub
and
bound
sbb
pop
inc
cmp
dec
addr16
jne
mov
xor
mov
add
lds
push
mov
ret
dec
add
jmp
adc
add
pusha
stc
cmpsl
out
xor
fmull
cmp
mov
mov
fsubl
shrb
mov
jle
push
shl
pushf
shll
xor
xchg
xchg
out
ret
adc
jl
pop
adc
in
xchg
loop
shlb
mov
loopne
dec
push
call
sbb
stc
daa
mov
dec
out
into
mov
into
outsb
cmc
lahf
push
popa
jae
xchg
mov
loopne
jae
clc
jae
push
or
gs
aas
xor
push
data16
xor
cwtl
insb
mov
pop
into
dec
add
fwait
dec
ds
adc
bound
xchg
sub
xor
cmpsb
jae
ror
std
shll
lret
lahf
scas
in
loope
out
mov
out
ret
cs
lea
in
inc
sbb
push
inc
outsl
mov
mov
lds
outsb
out
sti
mull
add
not
adc
jg
adc
lea
ljmp
rorb
in
cmp
les
insl
test
add
mov
scas
inc
push
dec
xor
inc
insl
fisubrl
popa
pop
jne
or
adc
mov
cmpsb
and
sub
rcl
int
lock
lret
inc
pop
jge
popl
sub
cli
ret
punpcklwd
cmp
pop
mov
and
vmwrite
pop
ret
divb
inc
cli
push
popa
mov
push
jle
nop
jecxz
lcall
dec
xchg
jge
test
dec
lods
mov
or
push
into
mov
add
loopne
mov
das
add
add
adcb
cmp
sbbb
stos
cmpsb
pop
rcrb
andl
cmpsl
in
dec
jnp
scas
sub
xchg
xor
mov
lcall
cmpsl
lcall
iret
push
shrb
loopne
adc
push
out
cmpsb
imulb
mov
mov
lods
mov
sbb
or
pop
sub
inc
and
push
jp
jno
cmovle
mov
rol
xlat
ja
mov
push
jle
push
adc
lea
fst
ss
cmp
arpl
dec
push
cmp
popf
shl
sub
or
pop
fs
cmc
inc
xchg
add
lret
and
gs
xchg
xchg
mov
ret
movsl
add
stos
mov
fadds
xchg
mov
out
add
xor
out
scas
xchg
int3
popf
mov
push
data16
leave
mov
sbb
dec
cli
aam
loopne
dec
pop
fwait
imul
mov
inc
sub
mov
test
lea
push
mov
cmp
inc
mov
add
xchg
iret
jae
pop
pop
in
cmc
in
arpl
dec
cli
not
sub
adc
inc
rorb
js
cltd
shlb
inc
sbb
push
mov
movsl
xor
jno
bound
cltd
sub
mov
pop
sbb
lods
jmp
repz
cmpsl
imul
sub
xor
popa
inc
push
outsl
scas
push
xlat
push
stos
or
imul
aad
jnp
jg
inc
aad
test
xchg
jnp
add
mov
cmc
subl
xchg
stos
adc
pop
mov
test
cmp
int3
pusha
adc
imul
mov
fnstsw
cmpsb
sbb
gs
test
adcb
movsl
and
repnz
lcall
enter
insb
dec
inc
and
fucomip
pusha
in
mov
cmp
push
inc
push
mov
pop
jb
xor
call
fcmovne
fidivrs
mov
jp
imul
lds
cmp
pop
push
mov
leave
and
lret
mov
cmp
xchg
fistpll
lret
testb
ljmp
loope
daa
sub
je
test
nop
add
dec
sbb
push
push
bound
and
int3
dec
outsl
jno
mov
adc
mov
outsl
sar
inc
hlt
icebp
cmpsl
jge
mov
insb
hlt
sbb
pushf
push
aad
dec
adc
int
jno
xchg
fwait
xchg
test
xor
addl
jo
push
lret
insl
pop
and
pop
dec
jmp
jae
les
stos
mov
xor
fadd
jne
push
int
sub
clc
pop
inc
test
sbbb
add
push
loope
call
fildll
cwtl
inc
outsl
fs
movsl
pop
adc
fstl
xchg
lea
insl
leave
bnd
lods
or
shlb
lods
jnp
lret
xchg
loopne
and
aad
pop
call
and
sahf
or
jo
icebp
inc
mov
ret
pop
popf
test
test
lret
mov
push
call
mov
jo
xchg
aam
xchg
add
or
sub
adc
pop
mov
pop
out
jp
loopne
int3
int
mov
stos
shr
sbb
sbb
sub
outsl
enter
ror
pop
xchg
and
jp
int3
neg
mov
mov
popa
push
int3
enter
or
rcll
dec
rcrl
test
dec
and
adc
jmp
aaa
jge
push
push
add
out
xor
mov
lds
movsl
andl
sarb
mov
jnp
xchg
out
cmp
push
sub
xor
mov
arpl
std
mov
loop
lea
jmp
fidivl
pushf
arpl
xchg
mov
mov
adc
das
xchg
sub
xchg
stc
jne
mov
xor
xchg
add
loope
jl
out
jb
sti
punpcklbw
and
test
jo
ja
sub
pushf
in
push
cltd
and
dec
lret
sub
jp
cmpsb
cmp
testb
lret
push
jns
loope
mov
aam
mov
mov
cmp
mov
sbb
fadd
xorb
incl
and
repz
pop
push
or
cmpsb
sbb
jmp
jle
ja
bound
cmp
jecxz
shll
fisttpll
add
fsub
shll
pop
sub
push
sub
js
mov
mov
xor
cmpsb
and
mov
cmp
fildll
mov
fs
mov
mov
push
push
pop
clc
in
pusha
xchg
rorb
addr16
rclb
mov
pop
mov
imul
mov
int3
mul
dec
jmp
outsb
cmpsl
add
pop
xor
insl
add
mov
pushf
jno
call
cwtl
jno
adc
add
adc
mov
jo
fdivrl
pop
sbb
jns
aad
xchg
fildll
mov
pop
ror
lds
xor
pop
iret
and
and
dec
js
push
pop
jne
push
dec
in
mov
mov
mov
lahf
repz
lret
mov
fwait
int
outsb
imul
jmp
inc
xor
or
xor
aam
out
add
imul
and
cmc
xor
or
into
mov
pop
xor
movsb
fadds
xor
mov
cli
adc
inc
insb
mov
cld
jb
mull
into
cmp
xchg
xchg
repz
aas
out
fstp
rcll
scas
sbb
aad
xchg
mov
pop
cld
cmpsl
outsb
fnstcw
and
adc
jp
add
int
hlt
mov
scas
loopne
aam
adc
lods
jmp
lahf
pop
in
out
sahf
add
movsb
xor
cmpsb
cmc
sbb
pop
mov
loope
dec
stos
std
cmpsb
pop
add
xlat
andl
clc
sub
lret
shlb
mov
cld
and
pop
call
mov
out
sub
push
mov
inc
inc
in
in
fs
in
lret
push
lcall
sbbl
mov
aad
aaa
push
cli
pop
pusha
fsubrl
add
mov
mov
mov
mov
or
lcall
push
dec
lahf
js
xor
out
stos
xor
frstor
popf
xor
in
stos
or
adc
lods
ret
mov
push
xchg
fcoml
cltd
lcall
aam
mov
jnp
mov
arpl
pop
jg
lds
cmp
jge
icebp
sbb
dec
cmp
sahf
imul
jg
das
imul
loopne
std
stos
dec
pop
push
mov
xor
xchg
and
sti
hlt
lds
push
xor
int
mov
jge
test
adc
cmp
cli
fcomps
and
mov
call
mov
loop
popf
push
out
pop
into
xor
rcll
rcrb
test
and
push
jns
push
in
and
mov
push
int
mov
repz
repnz
cmp
xchg
pop
cmp
ret
adc
mull
or
imul
sub
imul
sbb
xchg
loop
add
lds
aad
call
data16
cli
sahf
adc
cli
push
in
pop
in
cs
mov
bound
xor
call
sub
dec
ljmp
or
daa
or
fisubs
sub
push
out
jbe
sbb
adc
mov
or
enter
rolb
inc
outsl
mov
jb
xchg
hlt
pop
and
xlat
lds
stos
lea
flds
int3
or
sbb
fisttps
sub
sbb
pop
out
pushf
shll
andl
pop
xor
sub
xlat
shl
andb
xchg
jo
xor
flds
push
xor
frstor
pop
and
nop
sub
and
lahf
add
mov
mov
mov
movsb
xchg
in
aaa
cmp
out
mov
in
mov
inc
daa
cmp
or
or
push
fs
frstor
mov
push
rolb
pushf
cmp
push
andl
jg
scas
lods
cmp
sbb
jnp
cwtl
movsl
inc
inc
pop
xchg
xchg
insl
int3
xchg
in
mov
call
inc
in
aas
hlt
sbb
push
push
jns
cmp
sub
fldcw
xor
mov
add
js
es
fwait
les
dec
jmp
data16
mov
insb
add
push
aas
xchg
divb
pop
mov
popf
call
aad
cmp
ret
out
je
adc
inc
xchg
push
xor
dec
call
and
and
bound
fstl
add
or
das
adc
loopne
call
in
push
fstp
jnp
xor
ja
in
sub
enter
mov
es
fidivrl
mov
inc
push
aaa
push
dec
jo
jmp
jne
mov
es
insb
jg
lock
movsl
mov
push
sub
push
jns
mov
mov
add
stos
inc
mov
pop
mov
dec
sub
pop
cld
pusha
sub
fstps
stc
xchg
add
nop
dec
movsl
jbe
mov
aad
or
adc
pop
mov
out
mov
dec
shl
xor
into
inc
ds
fadd
dec
sbbl
mov
pop
dec
daa
jle
sbb
push
repz
into
push
jno
testb
adc
dec
mov
insl
sbb
les
mov
jmp
lods
loop
inc
or
testb
xchg
pop
adc
mov
daa
in
inc
push
test
cwtl
fcmovnb
fcoms
mov
xor
loop
push
mov
inc
movsl
mov
adc
out
ja
adc
scas
dec
out
movsb
out
popa
sarb
or
sti
dec
adc
jg
push
xchg
test
mov
mov
mov
xor
or
cmpsb
je
lods
push
sbb
inc
test
sti
or
adc
scas
jnp
jbe
in
sar
leave
mov
mov
pop
bnd
lcall
loop
push
or
xchg
adc
push
mov
xor
xor
das
mov
popf
mov
mov
push
out
out
adc
fs
bound
mov
fwait
jl
push
loope
das
cmpsb
sbb
mov
insb
outsl
mov
mov
pushf
mov
in
push
cld
sub
roll
leave
sbb
jns
jg
mov
fmuls
outsl
mov
push
push
mov
loope
or
jno
pmaddwd
rcrb
sbb
jmp
cmp
adc
adc
add
mov
jmp
rcr
out
cmc
adcl
or
fs
mov
js
pusha
adcb
stc
call
inc
icebp
mov
or
outsl
icebp
loop
jnp
insb
or
jnp
scas
and
bound
mov
adc
and
xchg
mov
dec
cld
dec
mov
shlb
cwtl
jb
dec
sbb
cmpb
and
inc
adc
pop
jmp
mul
test
jbe
xor
adc
je
push
daa
movsl
sarl
enter
pop
lods
sub
xchg
es
mov
cmp
mov
xchg
int3
jne
sub
out
inc
outsb
aaa
cwtl
mov
je
movsl
packsswb
arpl
cmp
sbbl
add
shr
mov
out
das
test
enter
push
push
leave
inc
int3
ljmp
pop
sar
jg
addr16
stc
stc
mov
aad
incl
fisubrl
nop
pushf
cmp
pop
mov
mov
cmc
jge
jmp
es
insb
mov
scas
rcll
fldl
or
call
jge
int3
popl
mov
dec
adc
mov
jecxz
push
push
mov
movsb
pop
add
imul
xchg
and
sysret
fbstp
pop
cwtl
js
aam
les
inc
push
outsb
ja
jb
scas
cmp
or
repnz
fs
mov
jg
lret
or
ret
inc
mov
fs
mov
cmpsl
cli
push
inc
push
aad
out
push
mov
xchg
gs
pop
pop
ror
mov
into
fnsave
inc
lret
sbb
jno
adcb
mov
insb
loopne
mov
xor
sarl
out
xlat
repnz
adc
add
mov
mov
gs
mov
leave
xchg
adc
shrb
sub
in
push
dec
loopne
aas
jl
in
scas
jp
sahf
jnp
xchg
in
lods
jbe
ds
xor
cmpsl
sbb
cltd
test
lea
push
pop
pop
mov
jp
cmpsl
mov
aas
xor
outsb
sbb
xchg
or
or
mov
gs
in
imul
leave
mov
les
pop
jle
or
icebp
ret
and
and
push
jg
jns
lods
les
add
pusha
popf
mov
xchg
idivl
mov
xor
out
sti
stc
fisubl
inc
mov
mov
lea
jnp
cmp
faddl
inc
aad
insl
sub
pop
into
movsb
mov
fbstp
inc
lret
mov
pop
push
ds
in
and
out
les
jb
xor
push
push
mov
pop
loope
push
sbb
mov
mov
push
cmp
pop
pop
repnz
xchg
loop
xor
das
and
sub
icebp
add
xchg
in
mov
xor
xchg
inc
and
shrl
lret
nop
shll
enter
mov
repz
inc
int
jne
insl
sub
or
hlt
xor
adc
popf
std
insl
lret
dec
push
jb
inc
push
push
jns
rclb
frstor
pop
movsb
adc
adc
cwtl
push
pop
clc
dec
inc
cmp
in
cwtl
jmp
xor
xchg
inc
and
or
or
cmpl
mov
dec
pop
daa
adc
in
xchg
cmp
sar
scas
mov
das
mov
dec
add
adc
rcll
push
push
pop
iret
dec
rorl
mov
mov
iret
test
and
mov
jmp
cltd
ret
aaa
jle
ret
sbb
in
and
imul
or
sarb
mov
or
lods
cmc
push
xchg
lds
pop
fstpl
faddl
cmpsl
insb
sub
pushf
push
dec
mov
sub
lret
addb
shlb
cmpsb
stos
arpl
lea
jecxz
inc
or
jp
pop
xchg
rolb
hlt
mov
jp
and
arpl
div
mov
and
xchg
negb
cwtl
pop
loop
clc
jnp
sub
xor
xor
xchg
in
mov
cmp
mov
insb
dec
mov
popa
scas
sbb
and
lds
mov
xchg
push
test
sarl
pop
movsb
push
mov
roll
mov
adc
mov
mov
scas
cs
js
aam
inc
fsubr
dec
sub
push
jmp
and
mov
cmpsb
fs
sahf
ss
testl
cmp
shll
lahf
pop
mov
mov
cltd
dec
int3
addr16
sbb
imul
sub
xor
incb
nop
orb
movsl
stos
stc
int
adc
test
pop
fwait
out
mov
lods
popf
cmp
jae
jo
mov
jnp
arpl
push
fmul
cltd
std
lock
dec
clc
aam
adc
ljmp
jns
test
ljmp
xchg
or
xchg
inc
xlat
push
jecxz
repnz
rolb
mul
sbb
ljmp
les
mov
andb
mov
imul
dec
idiv
push
lock
xor
bound
add
jp
xchg
push
xor
sbb
mov
xlat
lods
mov
gs
sub
sti
int
in
mov
inc
fidivl
xchg
fisubs
fnsave
stc
mov
xchg
lods
call
insb
lods
jae
imul
jmp
xor
inc
push
outsl
call
fwait
xchg
sarb
js
mov
inc
int3
pushl
push
pop
push
ljmp
inc
stc
in
in
cmp
cwtl
std
icebp
leave
stos
mov
sbb
addr16
mov
mov
movsl
dec
mov
imulb
jge
lock
clc
mov
and
test
pusha
cwtl
cmp
out
xor
mov
push
scas
lods
inc
sub
mov
addr16
push
popf
pop
rcrb
push
cmpsb
or
bound
jmp
xchg
pop
lret
push
mov
push
std
push
in
push
jle
idivb
mov
mov
fsts
cmp
push
xchg
jb
test
imul
sub
xchg
xlat
jb
cmp
cmpsl
mov
mov
push
cltd
jne
lods
cmpsb
inc
lret
add
adc
ljmp
pop
loop
cmp
inc
mov
jne
movsb
xchg
rcrb
into
sbb
jnp
bound
push
arpl
loope
fcmovnu
mov
pusha
pop
sahf
dec
and
testl
cmp
hlt
test
xchg
popa
pop
push
cmp
clc
inc
insb
xor
pushf
ficoms
in
insb
fwait
jge
xchg
xchg
mov
punpckhdq
jns
enter
cmc
mov
aas
mov
sbb
jne
mov
sub
fadds
sub
fildll
pop
fwait
movsl
out
ss
mov
test
int
in
push
je
jmp
lret
push
push
adc
icebp
bndldx
and
dec
mov
dec
in
push
popa
jp
andl
jle
xor
jne
nop
or
outsl
test
mov
mov
sbbb
cmp
sbb
sub
sub
xchg
in
mov
call
cmp
and
mov
inc
pop
cwtl
sub
jmp
cmp
data16
adc
mov
dec
imulb
js
dec
pop
ror
hlt
mov
aad
pop
or
icebp
push
sbbl
lcall
dec
fiaddl
xor
lock
sub
std
cmp
sub
xchg
repnz
jmp
xor
sub
cmpsb
mov
jns
inc
xchg
daa
pop
cmovne
fsts
mov
xor
in
pop
xchg
cld
and
xor
sbb
dec
mov
cltd
pop
fdivrl
mov
int
jmp
js
sub
jp
add
pusha
subl
cmp
xchg
mov
sahf
cmp
sub
mov
sbb
cmpsl
mov
push
punpckhwd
mov
sti
inc
push
ljmp
jo
test
fs
movsl
mov
insl
in
jno
stos
xor
test
dec
inc
sub
dec
cmp
adc
test
inc
iret
mov
aam
sub
popf
lret
jmp
outsb
outsl
enter
pop
lahf
dec
or
add
xchg
mov
test
and
stos
out
mov
cmp
inc
aaa
or
xchg
xorb
in
or
popf
push
iret
jmp
push
cmpsl
cmpsb
mov
add
loope
pop
pop
ret
jns
gs
pop
rcrl
aad
xchg
or
ljmp
push
mov
mov
mov
push
mov
mov
adc
xchg
imul
or
inc
inc
ss
xor
sbb
clc
movsb
xor
xchg
pop
aas
mov
jge
jmp
je
push
fldl
adc
sarb
pushl
dec
pop
add
bndldx
pop
movsl
and
mov
pop
xchg
add
mov
arpl
xor
mov
add
mov
outsl
test
adc
jmp
aas
mov
enterw
mov
dec
jp
inc
jo
jne
xchg
xor
mov
sbb
lods
loop
xor
mov
jbe
and
and
mov
icebp
jnp
stc
stos
mov
or
nop
enter
icebp
jns
mov
jne
cmp
mov
jo
adc
xchg
jl
xorl
xchg
ljmp
out
ficomps
rcll
outsb
aad
pushf
mov
sub
lret
test
lea
mov
push
adc
pop
out
xchg
pop
ss
sub
mov
ss
bound
inc
out
mov
ret
cmp
or
mov
cmc
jg
fidivl
ret
jne
lods
inc
xor
repnz
rcrb
fnstenv
in
repz
jp
test
insl
dec
insb
jle
cmp
sahf
mov
popf
push
popa
daa
or
inc
jmp
and
add
dec
add
scas
shr
out
mov
push
cmp
adc
inc
mov
fdivrs
in
insb
sub
fsubrl
xlat
add
cmpsb
pop
jnp
fistpll
es
fs
outsb
jne
pop
and
xchg
movsb
stc
imul
inc
xor
xor
pop
repz
xchg
mull
xor
add
mov
mov
leave
adc
sub
push
in
cmp
mov
clc
cmpsb
mov
xor
aaa
lods
adc
fsubl
andb
dec
inc
faddl
les
adc
negb
imul
faddl
push
jne
test
sbb
cld
xchg
ja
and
pop
jbe
push
imul
xor
push
mov
sbb
mov
int
jno
cwtl
nop
stos
gs
jbe
mov
loopne
iret
in
xchg
jne
lods
in
push
mov
or
sbb
pop
ret
sarl
jb
push
cmp
mov
inc
dec
sub
and
pop
in
inc
lds
xor
dec
cmp
mov
ret
shrb
jle
jl
sbb
popl
imul
rcl
fcoms
lret
sarl
xchg
testw
mov
fistpll
enter
xchg
les
mov
or
iret
inc
mov
aas
cmp
insb
mov
loope
clc
ror
add
icebp
outsl
lret
sub
cmp
sahf
movsb
cmp
fisubrl
pop
cmpxchg
loopne
or
mov
push
outsb
mulb
or
xor
insb
push
pop
rcrb
add
push
jno
mov
jb
cmc
or
xchg
es
je
int
inc
neg
sbb
mov
movsb
es
and
and
pop
cmc
dec
adc
jge
mov
arpl
fdivl
mov
push
mov
inc
les
lds
and
adc
rol
mov
jmp
mov
add
ficompl
mov
push
mulb
push
or
in
push
data16
mov
int3
inc
aad
aad
xchg
jno
stos
sub
jns
dec
inc
test
cmp
rcr
mov
mov
lods
pop
mov
jne
cs
add
ret
xchg
sub
mov
shrb
loope
pop
sbb
pop
jnp
add
icebp
out
xor
mov
shll
out
and
dec
stos
sub
inc
pop
stos
xor
xchg
mov
push
pop
or
gs
pop
adc
add
outsl
in
push
mov
orb
jl
std
pop
iret
and
shll
and
aaa
or
mov
lahf
adc
pop
scas
xchg
mov
add
mov
cmc
hlt
lods
and
dec
div
out
mov
xor
push
fcomi
mov
xchg
repnz
mov
push
pop
mov
mov
cmpsb
fnstsw
xchg
sub
idivl
addl
sbb
lods
lock
clc
shll
popa
filds
and
xchg
xor
and
jmp
pushf
movsl
mov
or
and
mov
ret
jp
push
cmc
ss
dec
inc
ss
push
bound
mov
jns
js
popf
push
and
cmp
or
ds
repnz
sbb
cmp
jg
pop
lahf
jge
add
ret
lcall
gs
lahf
lock
scas
sub
xor
in
fnstenv
jns
aaa
inc
jle
iret
das
xchg
adc
lret
sub
jge
es
fstps
test
in
add
mov
adc
dec
add
mov
push
movsb
add
data16
xor
dec
mov
jmp
stc
fcomi
sub
hlt
movsl
loop
mov
mov
imul
shll
mov
pop
push
ds
fcompl
jb
pushf
xor
lods
xchg
fdivs
testb
cli
fdivrs
loopne
hlt
test
mov
insl
or
cld
xchg
fistpll
push
xchg
mov
push
fnstenv
shl
fsin
pop
sbb
push
repz
xchg
jmp
minps
es
sahf
add
mov
scas
mov
mov
push
sahf
rcrb
cld
dec
out
cmp
call
cli
jmp
mov
fwait
pop
test
test
movsb
scas
jl
arpl
adcl
fs
adc
pop
or
mov
adc
mov
mov
mov
jb
roll
xchg
outsl
pop
or
loope
inc
leave
or
clc
jle
mov
shrl
outsb
decb
fs
xor
fwait
mov
adc
mov
or
cld
ja
stos
jns
add
out
pop
pop
data16
mov
push
scas
dec
mov
pop
pop
shrb
mov
jne
mov
in
pop
adc
dec
ret
outsl
jne
mov
outsl
clc
shrb
xor
in
jno
pop
push
test
ss
fildl
dec
dec
xor
ss
jnp
add
sbbl
adc
enter
iret
cli
ljmp
lock
push
int3
jns
pushf
mov
xor
loop
mov
shlb
mov
dec
test
mov
leave
mov
push
lahf
pop
loopne
pop
fisttpll
mov
lock
mov
int
aad
mov
fnsave
pop
jg
xchg
insl
into
jg
imul
and
sti
in
sahf
daa
pushf
mov
pop
push
scas
lcall
int
sbb
and
fs
enter
jle
fsubrl
enter
mov
adc
clc
fiaddl
ljmp
inc
enter
test
arpl
mov
sbb
jge
jb
mov
cmc
adc
ja
mov
push
and
into
or
sub
andb
and
add
dec
adc
jae
add
push
int3
std
popl
xchg
mov
sbb
and
addr16
xor
and
push
add
push
add
sub
mov
ret
xor
xchg
jbe
add
adc
fsts
push
pop
cmp
jg
roll
dec
push
inc
pop
adc
lret
mov
sub
xchg
lea
push
pushl
pop
mov
cmpb
pop
movsl
cmp
insl
or
fsubrl
loope
lods
sub
mov
mov
cmc
lods
rorb
xor
and
dec
sahf
inc
sub
cli
sub
adc
mov
add
je
inc
testb
inc
enter
mov
adc
mov
add
roll
xchg
iret
pusha
scas
and
ret
popa
mov
rclb
aas
mov
xchg
xchg
push
dec
sub
fistpll
dec
pusha
sti
jecxz
or
lret
inc
mov
xor
mov
sub
stc
and
lods
xor
out
imul
mov
sbb
ret
mov
xchg
aad
dec
in
push
mov
pop
push
sbb
lods
insb
lret
js
adc
jae
cwtl
inc
das
imul
and
into
fmuls
movsl
jg
xor
sub
pop
aam
mov
rcl
jne
xor
lea
lods
lret
clc
ljmp
add
int3
and
fcos
lret
aas
push
pop
decl
sub
out
pop
push
jb
or
cmp
dec
stc
sti
loopne
xor
out
rcll
scas
imull
cmp
xor
jae
sub
icebp
ljmp
dec
fsts
fwait
or
mov
daa
pop
and
fdivrl
lods
xor
aaa
rol
icebp
push
mov
test
fdivl
ret
imul
dec
aaa
in
iret
inc
adc
xor
bound
cmpsl
sbb
mov
outsl
jecxz
cmp
adc
orb
shrl
push
adc
pop
icebp
dec
cwtl
loopne
xchg
pushf
scas
jno
mov
ljmp
mov
ret
jecxz
sahf
inc
imul
ja
jbe
sub
dec
pop
mulb
les
jbe
xor
out
xchg
dec
ret
sbb
sti
cltd
xchg
cmp
add
mov
push
idiv
jo
mov
pop
mov
or
jmpw
sub
xchg
lret
inc
popa
pop
xor
mov
lea
data16
push
push
inc
mov
mov
cmpsl
dec
dec
insb
sbb
ret
mov
aas
repnz
ret
popa
or
inc
or
lahf
mov
movsl
pushl
mov
mov
mov
pop
rcrb
cld
sbb
dec
sbb
jmp
mov
sbb
adc
cli
ljmp
jl
adc
out
loope
dec
pop
stos
mov
and
mov
dec
sub
adc
cmpsb
inc
es
fs
lock
mov
jns
jecxz
jle
popa
xchg
test
xchg
sbb
add
mov
mulb
es
cs
imul
inc
gs
jmp
add
stos
icebp
shrl
or
int3
adc
outsl
cmp
test
xchg
and
mov
in
lret
jae
jae
repz
repz
into
cmp
mov
pusha
pop
pushl
fisubl
xchg
or
jge
sub
loopne
imul
mov
hlt
push
dec
lds
xor
mov
insb
repnz
inc
out
pusha
cmc
mov
jns
insl
cmp
pop
cmp
dec
push
addr16
sub
xlat
vmovhps
adc
popf
loop
insl
cltd
xchg
into
lods
pushf
inc
into
out
fwait
out
loopne
sbb
xchg
icebp
add
in
mov
cmp
mov
xlat
and
or
mov
scas
dec
jae
xchg
jecxz
outsb
adc
xlat
movsb
pop
jns
lret
fst
adc
cmpsb
jns
ffree
push
mov
ljmp
mov
sub
dec
daa
fwait
js
lock
sub
pop
sahf
jae
jle
xchg
gs
rcrl
imul
cltd
addl
pop
js
ds
mov
call
or
rcrl
rcrb
sahf
sub
ljmp
into
xchg
test
or
ret
fwait
xlat
add
sbb
add
aas
mov
push
dec
mov
ss
addb
inc
or
sbbl
mul
lods
xor
lock
mov
and
xchg
inc
inc
sub
mov
rcrl
push
mov
jp
in
rcl
jmp
movsb
sub
or
ja
sbb
fisubl
scas
and
leave
scas
pop
jle
gs
hlt
jle
lahf
mov
dec
and
jno
icebp
lock
xchg
icebp
jnp
pop
inc
xor
sbb
xchg
pop
roll
nop
push
insb
jge
lods
call
leave
nop
or
jecxz
mov
mov
or
popf
sbb
xchg
push
add
xchg
movsl
cli
rorb
je
cmp
jl
mov
jmp
outsl
cmp
mov
mov
addr16
pop
mov
lcall
fadd
mov
sub
sub
mov
test
pop
adc
ss
stos
push
or
test
pop
int
frstor
es
push
testl
pop
je
sub
push
xchg
sahf
mov
mov
rcrl
sar
sub
aaa
push
ss
mov
fldt
xor
ds
sub
ffreep
shll
jmp
rcl
gs
out
lret
xor
add
sub
sub
push
cmpb
stc
mov
js
xchg
xor
int
mov
in
addr16
enter
jnp
adc
add
sbb
jae
aam
xor
fidivl
out
xor
lret
inc
daa
je
es
stos
popa
push
fiaddl
loopne
in
and
pop
inc
push
out
popa
dec
fwait
mov
push
lods
jl
jo
divb
or
dec
loop
lock
jae
or
mov
or
rcrl
fs
fldt
cmp
gs
or
pushf
pop
mov
fildl
xchg
mov
mov
mov
jne
mov
sub
out
mul
mov
add
add
scas
fidivl
cmp
cli
loope
dec
shl
fmull
jp
mov
cmpsl
adc
addr16
dec
jno
adc
mov
inc
mov
xchg
mov
jge
adc
rcrb
repz
popa
adc
inc
repnz
xor
jmp
push
out
shll
pop
pop
push
sti
js
jae
and
je
sbb
lret
clc
loopne
jle
or
loope
jnp
add
jecxz
fs
leave
pop
dec
sub
xor
sti
jge
push
pop
pop
sbb
xor
jmp
decb
js
out
negl
ljmp
mov
arpl
ficoml
mov
sar
and
add
dec
xorb
mov
push
icebp
in
mov
out
or
insl
gs
fidivl
xor
addb
lret
out
es
into
sahf
pusha
pop
aad
sub
and
inc
push
cmp
aad
cs
rorb
sbb
testl
dec
dec
or
xchg
mov
xlat
js
adc
je
sbb
mov
dec
test
adc
ror
push
ds
lods
data16
jo
inc
cmp
lcall
pop
mov
sub
mov
idivb
es
add
sub
xchg
pop
lahf
adc
mov
into
jno
xchg
sahf
fisubs
xor
or
ljmp
les
lcall
xor
pop
lds
or
in
rcll
test
jo
leave
mov
ds
jno
aam
inc
ret
loope
dec
loop
add
jle
insb
mov
or
jbe
test
push
cmp
into
loop
iret
jbe
leave
dec
lock
inc
inc
in
insb
add
push
mov
gs
pop
pop
pop
mov
push
test
cmp
or
dec
or
and
xor
test
cmp
pop
es
cld
push
cmc
add
pop
in
pop
jg
xchg
sbb
xchg
add
aaa
fisubrl
mov
mov
mov
mov
add
and
dec
or
bnd
push
aam
pusha
stc
lods
mov
pop
scas
pop
pop
sub
addr16
hlt
test
add
push
ja
inc
mov
mov
xchg
inc
push
daa
add
lret
push
sbb
fsubl
mov
jo
ljmp
xchg
int3
cmp
mov
pop
or
mov
xchg
dec
dec
insl
sarl
push
aam
shrl
mov
int
inc
scas
popl
pop
xor
fdivrs
test
into
pop
mov
mov
pop
pop
fs
insb
sub
push
jbe
dec
sub
pop
dec
cmp
bound
rorb
inc
xlat
outsl
and
push
inc
cltd
dec
inc
sub
fildl
mov
pop
stos
cld
pop
mov
push
outsl
pusha
cwtl
icebp
dec
cli
dec
adc
gs
inc
gs
pop
cmpsl
add
outsb
pop
incb
pop
xor
mov
xor
push
mov
xor
scas
add
xchg
pop
mov
std
outsl
lcall
lea
mov
xlat
arpl
add
xchg
in
jge
dec
mov
xchg
add
je
mov
mov
shl
cs
pop
int3
xchg
js
in
inc
clc
jns
aas
mov
sub
pop
out
jnp
repz
sahf
push
xor
or
xchg
ret
imul
mov
aam
in
and
mov
adc
mov
adc
mov
movsl
mov
jbe
or
sub
das
inc
insb
xorb
cs
ret
sub
mov
nop
loopne
movb
sub
in
je
cmp
dec
jge
out
xchg
xor
mov
xor
mov
roll
adcl
sar
outsl
adc
popa
cli
sub
sahf
cli
pushf
mov
aam
insl
out
xor
or
mov
leave
gs
orl
out
mov
cld
push
and
and
mov
enter
aaa
out
pop
cmpsb
andb
mov
ror
jnp
push
fstpt
adc
fs
or
mov
dec
ss
jb
lahf
pop
dec
cmp
xchg
mov
sbbl
mov
pop
push
push
lcall
gs
add
jp
stos
or
add
add
in
hlt
cld
cmp
aaa
imul
dec
push
lods
mov
enter
jmp
daa
in
or
push
dec
js
push
mov
push
repnz
and
sub
or
mul
cmp
mov
cwtl
push
lcall
jl
shlb
test
mov
push
adc
pushf
insl
jge
jo
call
xchg
aam
mov
add
sub
cmp
add
outsb
mov
mov
sbb
les
and
loop
inc
mov
and
add
loopne
lods
push
sbb
leave
inc
jle
pop
out
xchg
or
stos
dec
sbb
cli
adc
pop
rorb
cmc
aas
imul
cmp
out
mov
iret
lods
push
add
fstpl
push
sahf
call
cmp
mov
rorb
adc
ljmp
xor
mov
mov
jg
sub
add
push
sbb
inc
mov
sub
push
xor
and
adc
dec
jnp
lds
pop
xor
xchg
dec
mov
mov
cmp
out
pop
ljmp
cmpsl
sub
in
push
jecxz
lds
sub
imul
in
in
js
push
and
inc
mov
jge
push
bound
cmp
adcl
test
or
ljmp
int
aad
jno
das
mov
inc
lock
push
insl
jp
and
lds
test
loope
sbb
in
or
lods
test
inc
pop
sbb
scas
and
in
bound
sub
xchg
ss
rclb
mov
adc
push
jnp
pop
push
das
cmp
pop
mov
mov
adc
stc
mov
enter
xchg
mov
mov
sahf
mov
int3
mov
es
or
adc
aam
jmp
mov
shlb
push
outsb
scas
movsb
fs
add
arpl
outsl
imul
cld
adc
scas
inc
idivl
jb
inc
xlat
cmpsb
in
ss
add
outsl
mov
into
or
out
mov
stos
mov
std
imul
xor
xchg
fldl
xor
sti
loopne
push
xchg
pop
fistpll
les
ljmp
xchg
jge
subl
cwtl
stos
inc
shll
lea
sbbl
sub
cmp
sbb
into
or
jmp
ret
mov
rcl
je
in
sahf
push
dec
and
and
mov
lret
mov
out
aam
ret
xor
add
call
inc
loopne
inc
mov
xchg
jmp
or
pop
mov
sbb
and
or
out
mov
xlat
jns
push
xor
fs
add
inc
fmul
mov
es
xchg
rol
scas
and
xchg
mov
cmpsl
test
jmp
cld
sbb
mov
inc
dec
imul
mov
xchg
dec
pop
mov
cmp
adc
outsb
jnp
jno
sub
repnz
mov
pop
xchg
fsubp
jno
pop
stos
sbb
rclb
jo
sarb
mov
cs
dec
int
cwtl
lret
data16
fdivl
add
jmp
mov
cs
mov
jge
jg
push
inc
xlat
jb
pop
mov
jne
fwait
in
decb
xor
iret
jns
movsb
dec
cltd
addb
adcb
sbb
adc
adc
call
in
xchg
sarl
or
or
loopne
xor
stos
sub
mov
adc
js
lock
sbb
lods
xor
ja
int
xor
mov
cmpsb
mov
lea
jne
jae
cltd
pushf
iret
mov
inc
adc
inc
pop
rcrl
xchg
scas
fwait
sub
lcall
outsl
js
sbb
cmpsl
cld
sub
cmpsb
xchg
mov
sub
outsb
sbb
test
fstps
or
adc
aaa
xchg
push
inc
push
add
mov
adc
push
cmp
fidivrl
adc
pusha
fldl
or
adc
cmp
sti
xor
jmp
arpl
rorb
or
scas
dec
fwait
mov
push
scas
jl
jb
adc
in
mov
jmp
xchg
push
xor
ret
cmp
popa
xchg
test
xor
mov
jb
dec
aas
mov
add
mov
xchg
mov
lret
jecxz
cmp
pop
inc
inc
cwtl
jae
nop
mov
push
int3
and
inc
pop
fwait
pop
sub
pavgw
and
push
pop
dec
fsubr
jl
jecxz
aad
add
sub
jge
adc
sub
and
xchg
dec
fwait
adc
or
stos
adc
dec
daa
sub
psrlq
or
sub
jl
leave
hlt
or
adc
and
sbb
mov
jp
fdivrl
mov
add
sbb
sti
mov
adc
inc
aaa
jge
add
ljmp
int3
sub
stos
cmp
loopne
push
inc
adc
cs
rorb
in
jne
mov
les
mov
in
and
scas
ss
test
daa
nop
cwtl
xchg
xchg
int
imul
xor
dec
push
adc
mov
xchg
pop
shrl
mov
push
ljmp
mov
test
scas
xchg
jnp
adc
xchg
inc
mov
mov
movsb
push
lret
xchg
es
mov
gs
or
sarb
mov
adc
mov
inc
and
mov
push
fadds
cmpb
cld
stos
jmp
into
xchg
and
adc
loope
jmp
inc
mov
pop
ds
inc
dec
sub
roll
add
cmp
push
fmuls
pop
and
ljmp
add
add
mov
popf
fs
bound
addr16
popa
aam
testb
fdivs
out
les
lret
mov
fwait
pusha
mov
insb
adc
ret
or
subl
cld
clc
dec
nop
in
sbb
mov
sbbb
dec
popf
add
push
fwait
xor
iret
ret
and
pop
inc
repnz
jmp
adc
out
xchg
inc
push
adc
fistpll
insb
xor
jo
xchg
jmp
lods
imul
shlb
push
rolb
lcall
pop
jns
mov
test
lods
add
push
fsub
jae
or
mov
mov
call
aas
js
jge
adc
add
dec
into
loope
adc
mov
dec
clc
fdivrs
daa
xor
notl
in
mov
in
daa
nop
mov
xchg
mov
pop
incl
in
pop
cltd
cmp
add
push
xor
cmp
pop
test
push
xlat
repz
movsl
aad
jo
int
add
push
das
cmp
fldt
lock
dec
jmp
xchg
dec
in
std
dec
or
pop
and
xor
or
inc
loope
das
movsb
push
jmp
push
outsl
jge
call
inc
nop
stos
dec
int3
xor
sbb
jbe
jl
rorb
mov
cmp
enter
sbb
adcb
xchg
xor
ret
jbe
rcrl
mov
fwait
out
lods
rcrb
jno
cmp
add
sbb
xor
or
cmp
sbb
or
gs
ffree
adc
mov
pushf
ret
js
push
stos
pop
dec
fisttps
pop
pop
jnp
clc
sub
sub
sbb
push
lods
fstpt
popf
jbe
test
push
sarb
adc
pop
ds
add
pop
or
cmp
aas
jecxz
adc
cmp
or
mov
fldt
orl
bound
mov
or
inc
int3
sbb
stos
hlt
nop
jl
lea
and
jne
fldt
mov
in
cmp
or
jns
xor
push
sbb
sub
fmull
push
xor
push
mov
push
repnz
inc
add
inc
into
fsubrs
stos
mov
lret
jnp
cmp
in
fsts
and
call
shll
xor
inc
inc
hlt
push
test
jo
push
scas
enter
outsb
xor
push
rol
roll
lods
pop
inc
je
pop
mov
cmc
pop
data16
fsubr
mov
test
cmpsb
pop
cld
scas
adc
sarb
cmp
add
ret
pop
mov
shrb
ret
push
xchg
mov
int
inc
mov
mov
mov
push
mov
cmpsb
pushf
jge
add
push
cmp
add
xchg
lock
sub
insl
ds
mov
andb
cmp
cltd
mov
jecxz
and
inc
and
cmp
scas
es
push
popa
imulb
cmp
sub
push
rcrl
leave
sbb
incb
hlt
aad
push
addr16
inc
lods
mov
push
mov
and
aad
ds
shr
cmp
cmp
divb
pop
js
xor
test
xchg
pop
dec
mov
les
mov
jo
jl
mov
add
lret
inc
inc
data16
jne
or
call
gs
mov
popa
xor
insb
dec
and
pusha
aas
inc
pop
mov
jp
mov
aas
rorb
and
mov
push
sbb
cmp
notl
in
mov
leave
mulb
dec
data16
and
push
in
lret
xchg
mov
out
push
xor
fildll
cli
mov
push
or
xor
push
cmp
test
adcb
imul
inc
xor
sbb
mov
or
push
pushf
aas
adc
out
sarb
push
or
cmp
out
loopne
pop
int3
arpl
insl
scas
add
icebp
add
or
cmp
xor
daa
and
push
rol
cmpsl
emms
add
cmc
sahf
inc
sbb
dec
inc
addr16
repnz
sub
ds
add
jle
sbb
push
fstps
movsb
scas
mov
sbb
sub
out
and
push
lock
pop
stc
out
mov
or
dec
pop
test
sub
pushf
neg
or
and
mov
and
xchg
cld
xchg
mov
movsb
inc
insl
mov
add
pop
lods
lods
rorb
mov
jecxz
jmp
xor
js
xchg
cli
xchg
push
push
in
andl
jle
rorb
popa
pop
mov
xchg
pop
les
dec
sahf
iret
or
pop
mov
aam
test
pop
xor
popf
xchg
inc
lds
push
push
jnp
mov
icebp
pop
cwtl
mov
stos
cmp
push
js
idiv
jl
addr16
cmpsb
loopne
cmp
cmp
sbb
pop
in
cs
lcall
cld
pop
out
pop
rolb
stc
ljmp
popa
scas
mov
adc
adc
inc
testl
xlat
xchg
sub
sbb
cmpsb
add
cld
inc
aad
dec
sbb
mov
in
and
pop
pop
lea
in
leave
push
jp
mov
inc
and
fs
and
imul
sbb
pop
gs
daa
adc
and
mov
add
mov
mull
cmp
mov
jns
das
xchg
jge
je
inc
mov
and
dec
jb
loop
dec
out
fdivrs
lea
xlat
mov
fidivs
addl
ficompl
dec
jmp
loop
enter
push
fiadds
cmc
fisubs
arpl
repnz
sti
or
leave
div
jne
jbe
dec
jmp
call
jb
outsb
bound
repz
movsl
pusha
inc
inc
mov
jecxz
js
pop
decl
dec
push
push
lods
fidivs
jo
push
out
and
cmp
arpl
add
mov
das
xor
push
and
cli
pop
mov
cmp
cmp
enter
mov
mov
xor
jae
stc
bound
loope
sub
pop
dec
mov
jmp
test
cmc
test
enter
aas
mov
or
call
push
sbb
or
out
test
jae
dec
leave
mov
test
mov
pop
add
stos
sbb
fbstp
call
push
sub
popf
cli
lahf
ret
cs
mov
cld
mov
sub
loopne
cmp
in
repz
mov
pop
push
int
cmc
jg
and
repz
sbb
out
xchg
aam
mov
fiadds
sbb
pop
xchg
jae
insb
or
ss
inc
inc
add
sbb
push
adc
mov
fildl
lret
leave
lods
scas
dec
subl
jp
mov
sub
cld
jl
push
dec
daa
mov
enter
cltd
inc
fwait
inc
fdivrp
add
sub
push
adc
fidivl
mov
add
clc
xchg
jmp
xchg
add
hlt
cmp
cli
cmpsl
mov
inc
mov
mov
sbb
pop
test
xor
movsl
pop
and
xchg
js
or
shr
imul
cmp
xor
bt
mov
cld
xor
out
gs
mov
mov
xor
cmp
popf
std
push
and
dec
fsts
inc
pop
icebp
rclb
std
dec
pop
pop
mov
data16
arpl
jnp
imul
mov
cmc
jge
mov
push
add
pop
fisubl
imul
or
sarl
imul
adc
ds
or
rclb
scas
outsb
std
cwtl
mov
repz
sarl
add
insl
and
xor
jne
adc
call
push
pop
cmp
ficompl
push
sbb
mov
xor
inc
pop
divb
dec
mov
push
test
add
int
clc
pop
push
push
call
push
scas
adc
scas
loope
mov
inc
idivb
push
adc
push
mov
icebp
stos
pop
sbbl
aad
mov
ss
dec
out
add
rclb
mov
shrl
lea
push
call
mov
das
mov
xor
or
fdivr
cmpsl
jge
lds
in
imulb
fdivrs
arpl
ret
xchg
push
lods
add
ret
adc
or
jl
cmpsl
sbb
xchg
cmp
pop
int3
imul
inc
vpmaxsw
lret
mov
xor
movsb
mov
xor
and
cmp
mov
ror
filds
cmp
test
and
xlat
negl
ja
push
out
stos
sbb
mov
nop
cmp
fwait
addb
lret
push
xor
push
out
cli
jb
sbb
jns
movb
shrl
fcmovb
fwait
insb
in
loopne
sbb
sub
sbb
or
jge
sub
arpl
lahf
jb
insb
mov
lahf
or
out
mov
cmp
dec
dec
xor
jmp
daa
icebp
pusha
cwtl
lods
lods
stos
cltd
pop
push
ret
lret
int3
mov
popa
ljmp
icebp
adc
les
and
ret
and
aas
xchg
dec
fs
mov
dec
mov
xlat
push
mov
push
rcrb
in
sbb
into
sbb
ljmp
pushf
daa
xchg
insl
sbb
ljmp
sbb
push
sub
fidivl
popa
je
cpuid
mov
jle
popf
jbe
or
push
scas
sbb
jge
jecxz
rolb
mov
flds
imul
jg
dec
or
adc
sub
fadds
sub
ret
and
sub
test
pop
xchg
jg
inc
fistps
push
jmp
sbb
decb
mov
repz
cmc
xor
jecxz
jmp
cmp
adc
sub
jg
movsb
insb
out
subb
jnp
push
jo
mov
push
popa
xor
or
rcrl
mov
sub
xchg
sbb
out
sub
fdivrl
bound
sub
aam
cltd
stos
leave
mov
push
dec
out
xor
stos
pusha
cmp
das
dec
add
fcmovnbe
dec
and
lcall
insl
adc
in
pop
daa
test
idivb
daa
in
lods
in
ret
fidivs
sar
stc
je
out
push
repz
jle
and
in
div
xor
or
xchg
mov
mov
jl
mov
push
sub
cmc
out
mov
popa
pop
lds
jne
das
jg
sbb
sub
sbb
push
int3
or
rol
mov
or
inc
pop
stos
xor
sbb
push
ret
aas
arpl
jae
insl
jmp
stos
mov
iret
mov
sub
sub
outsl
mov
xchg
daa
outsl
mov
imul
popa
outsb
mov
test
cmpsl
pop
das
lds
dec
hlt
out
xchg
data16
lods
mov
loope
adc
mov
dec
cmc
mov
frstor
mov
inc
pop
stos
mov
imul
adc
aam
cmpsl
jg
push
sub
push
ss
sbb
shrb
andl
fnstenv
addb
mov
fistps
and
cmp
and
imul
xorl
pushf
in
in
mov
hlt
out
xchg
cmp
out
jmp
mov
out
jne
clc
and
out
mov
or
loop
sbb
adc
jns
cmpsl
out
movsb
orl
jecxz
fwait
das
insl
jae
imul
sti
dec
fwait
xchg
cmp
imul
loopne
cltd
push
xchg
lods
test
sub
stos
add
dec
sub
ret
mov
dec
movsl
xlat
mov
bnd
push
popa
adc
mov
jge
icebp
aas
cmp
push
or
ja
push
das
add
cwtl
dec
inc
mov
rorl
inc
fwait
cmpsl
in
mov
pop
push
fsub
lret
and
jle
shlb
xchg
mov
inc
shlb
cld
in
jecxz
fstpl
mov
out
mov
out
rol
sub
mov
mov
cmp
push
jmp
pushf
movsl
sub
jae
int
mov
insb
push
jo
xchg
popa
loop
cwtl
roll
int
sub
aam
mov
in
cmpsb
call
loopne
mov
pop
leave
arpl
pop
lods
xchg
inc
mov
mov
fdivrl
or
mov
loop
mov
sub
imul
rcrl
sbb
add
out
pop
adc
jne
sbbl
fstpl
pop
push
ret
flds
add
lds
loope
sbb
mov
jg
mov
ror
xchg
scas
sub
adc
cwtl
xchg
gs
cmpsb
aad
stc
cmp
fs
sti
int3
rcll
mov
bound
lret
xchg
dec
int
xchg
fldenv
outsb
push
xchg
push
sub
xor
in
orl
pop
xchg
mov
pop
pop
fsts
fwait
outsb
add
sub
lcall
out
scas
sbb
mov
or
inc
sub
inc
lcall
loopne
nopl
std
lock
jp
xor
cmpsl
mov
xchg
pop
lock
and
rcr
stos
dec
shr
std
add
movsl
lock
mov
mov
push
movsb
mov
jge
out
xlat
stos
mov
mov
xlat
pop
insb
out
jns
aam
out
mov
xchg
mov
push
clc
nop
in
pop
sub
mov
pop
aas
pop
and
push
sbb
adc
out
pushf
fcoms
push
sarb
adc
jb
and
ss
jnp
cltd
bound
mov
sub
mov
mov
mov
mov
xor
or
sbb
xchg
fildll
pop
cmc
ret
adc
add
mov
cmp
stc
cmp
pop
mov
mov
movsl
sahf
test
jmp
fimuls
rcr
enter
fiadds
pop
mov
jge
dec
arpl
into
mov
pop
sub
inc
adc
fisttpll
xchg
pop
or
mov
pop
lea
fldenv
push
mov
test
xor
jle
test
loope
mov
out
daa
mov
movsl
test
cwtl
xor
jge
mov
enter
cld
sbb
inc
inc
inc
push
repz
lds
nop
test
lahf
mov
jmp
add
jne
ret
and
mov
jle
xor
cmpsb
cwtl
in
lahf
adc
leave
xor
dec
mov
ret
sub
xor
jae
cmp
ret
in
mov
adc
popa
xchg
test
sub
movb
aas
dec
mov
leave
xor
jle
add
mov
mov
mov
or
push
inc
mull
movsl
mov
test
std
bound
cmp
lods
outsl
mov
sarb
xchg
xchg
push
mov
lret
mov
and
fsubp
jno
adc
mov
imul
cmp
movsl
xchg
inc
lods
bound
push
repz
scas
rorb
lods
in
hlt
jecxz
jns
and
mov
pop
mov
lahf
pop
ss
mov
adc
insb
mov
icebp
por
sbb
sahf
mov
stos
jb
push
mov
enter
imul
shlb
add
js
aas
jg
notb
jl
fs
jg
xchg
cmp
out
icebp
pop
ror
mov
sbb
loop
push
notl
cs
popf
mov
scas
sbb
ja
cli
adc
dec
sub
pop
loope
jmp
aam
or
cmp
cmp
imul
sbb
lods
ljmp
mov
push
mov
xor
stc
and
lods
lods
mov
jbe
shrb
adc
std
lret
jae
je
push
sbb
in
js
push
sahf
push
xchg
movsb
xor
insb
xlat
pop
scas
ds
fstps
xlat
fcomps
sti
int
frstor
mov
cmp
xchg
sbb
fucomip
xor
inc
fidivs
lret
jge
je
clc
fwait
and
test
or
cmpsb
int
xchg
cltd
inc
and
out
mov
ds
sbb
outsl
dec
add
in
push
fidivrs
fwait
sub
mov
sti
push
mov
push
arpl
sub
inc
ja
xor
push
pop
mov
push
mov
stc
mov
push
scas
mov
lea
lods
fnsave
iret
push
push
stos
ss
cmp
and
sub
inc
ja
movsb
sbb
dec
lds
fbld
out
inc
add
rolb
out
jle
int3
xor
arpl
scas
add
nop
shlb
loop
shlb
es
out
add
xchg
cmpb
stc
add
or
fwait
ja
push
inc
loop
inc
pop
push
xchg
shrb
ret
dec
jmp
xchg
and
stos
call
pop
int
xor
repz
jp
imul
mulb
mov
xchg
aas
imul
addl
lcall
sbb
fwait
dec
repnz
or
sbb
ja
jns
in
adcl
ret
stos
pop
sbb
mov
loope
sub
or
jnp
sbb
psadbw
mov
dec
clc
int
jl
out
test
cltd
push
enter
or
repz
shrl
jo
mov
movsb
cmp
test
dec
xchg
pusha
inc
push
or
loop
or
ss
sub
jmp
mov
jecxz
out
cwtl
adc
jmp
fyl2x
sub
xchg
jl
orl
mov
mov
ds
loope
jbe
ljmp
mov
xchg
enter
cmp
pop
sub
jno
outsb
insb
iret
outsb
jns
aam
push
dec
jnp
cs
cmp
push
cmc
sbb
fidivrl
xchg
fs
dec
sub
leave
mov
cmp
imul
mov
sbb
inc
jmp
mov
ja
jle
iret
mov
ds
add
pop
dec
dec
cmp
stc
xchg
sti
arpl
add
sbb
shl
popf
out
mov
fisubrl
adc
outsb
lret
cmp
cli
and
popa
nop
push
cs
cmp
add
loope
adcb
out
push
mov
sub
pop
push
test
stos
mov
call
ja
or
xor
iret
mov
js
add
ja
xorb
les
inc
and
push
mov
lods
add
sub
pop
in
fwait
push
push
xor
jmp
out
adc
clc
sub
je
inc
xchg
jge
push
inc
adc
and
insb
and
lret
and
scas
pop
push
inc
push
lret
sbbl
sub
leave
out
sub
cmp
jp
imul
leave
out
aaa
and
push
jmp
imul
pop
aam
and
mov
xor
adc
imul
sbb
and
es
cmp
inc
fistpll
in
in
mov
pop
xchg
sbb
pop
jmp
and
dec
xchg
repnz
push
in
jae
inc
dec
push
and
gs
insb
dec
ret
or
mov
dec
das
add
lahf
or
inc
xor
pushf
into
lret
aaa
mov
ss
nop
jae
clc
mov
xchg
jge
mov
lock
mov
push
int
mov
and
lea
pop
lcall
mov
adc
jbe
mov
fbstp
adc
pop
sbb
sub
loope
xchg
push
test
jae
jo
sub
sbbl
dec
mov
out
sub
add
andl
push
mov
in
scas
or
lods
stos
mov
popa
pushf
and
stc
cwtl
pop
mov
sbb
es
pusha
xchg
in
sbb
mov
cmpsl
loop
and
das
add
mov
loope
jnp
cltd
iret
jmp
in
cmpsl
in
and
pop
or
add
mov
aad
jno
outsb
push
or
ds
jo
or
std
jmp
ss
and
fadds
in
or
xchg
aad
xor
sbb
jmp
mov
pusha
std
aad
or
pushf
or
cs
jb
cmp
mov
mov
jo
mov
cmp
lds
subl
das
adc
js
xchg
test
dec
xor
pop
pusha
scas
jp
adc
mov
mov
pop
std
into
mov
js
loope
in
mov
cmp
add
pop
add
mov
push
adc
cli
sti
and
movsl
movsb
in
inc
mov
add
mov
cmp
jl
xchg
shr
mov
cld
and
cwtl
fimuls
jge
sbb
js
sarb
sbb
push
cli
mov
push
cmp
in
add
and
cmp
imul
sti
add
pop
fcomp
sbb
fsts
ret
andb
mov
or
xchg
sub
dec
int
sbb
jle
lods
pop
loop
add
subl
inc
cmc
dec
cltd
adc
push
push
arpl
pop
pushf
adc
push
mov
and
push
inc
mov
add
out
mov
mov
pop
sbb
jno
sti
dec
inc
movsb
nop
loope
data16
rcll
scas
jb
lds
sub
push
pushf
std
sub
inc
pop
push
shlb
hlt
enter
sub
jns
fs
lret
push
cmp
push
jbe
loopne
int3
iret
out
sub
mov
jp
in
dec
or
mov
push
lcall
sub
inc
inc
iret
mov
mov
mov
insl
push
inc
loop
and
cmc
in
push
jg
leave
mov
sbb
stc
addr16
sbb
xchg
mov
dec
push
sbb
fistl
int
ficompl
xor
stos
lods
jb
aam
fldcw
loop,pn
jb
pop
push
adc
pop
xor
gs
jne
lock
mov
cmp
lcall
bound
call
inc
cmp
fs
iret
pop
inc
lcall
imul
scas
ret
adc
out
jle
sub
std
lcall
xor
mov
insl
jne
cs
dec
sbb
jae
dec
jg
push
lods
jl
mov
in
movsb
pop
adc
roll
fcompl
popa
int
aaa
cmp
cmpsb
cld
add
lods
ret
aam
out
jecxz
sbb
fisttps
enter
sti
pop
jo
rolb
loop
dec
test
dec
jb
sub
cmp
orl
jo
cld
mov
add
or
pop
lret
or
ret
sahf
popf
sub
adc
push
or
push
rcrb
and
push
pop
jmp
fimull
push
pop
js
aam
loope
add
mov
inc
xchg
jecxz
inc
call
pop
jno
mov
mov
cmpb
or
push
xor
lods
call
sub
jnp
jbe
lcall
mov
je
and
inc
inc
in
decb
jb
lcall
cwtl
jno
jecxz
xchg
xor
pop
push
sub
xor
jo
hlt
jae
jne
scas
iret
cld
out
decb
jae
enter
xchg
inc
mov
mov
mov
fmuls
mov
mov
cmc
mov
xor
cltd
or
push
shrl
mov
ror
pushf
inc
in
out
xchg
popa
xor
cmp
std
jl
add
sub
xor
sahf
loope
xchg
dec
cmp
mov
jp
andb
mov
dec
fucom
jle
lret
mov
scas
popf
jg
cmpsb
jnp
arpl
hlt
aad
dec
imul
dec
out
cmc
sbb
in
inc
xchg
push
ja
gs
clc
popa
in
dec
fisubs
and
push
jb
cmc
pop
cmpl
add
or
scas
jno
push
push
xchg
test
fldl
jl
xchg
xor
orl
stc
xor
dec
andl
enter
sbb
outsl
mov
jb
dec
mov
mov
cmpb
dec
std
and
shlb
outsl
xor
in
sahf
adc
sub
sub
fs
mov
sbb
and
push
add
inc
movsl
fdivl
dec
out
push
cmpsb
repz
jecxz
movsb
or
js
jb
clc
out
add
add
jp
sbb
sub
dec
and
pop
jmp
push
push
shl
sbb
inc
xchg
push
mov
jge
add
mov
xor
out
scas
fld
mov
xor
out
sub
inc
insb
and
xchg
add
mov
scas
insb
and
or
dec
and
pop
mov
lahf
mov
outsb
or
adc
ficompl
push
push
lock
xor
pop
gs
jge
jb
xchg
test
ja
add
leave
or
fisttps
adc
lahf
addr16
mov
add
inc
jae,pt
imulb
out
jmp
adc
dec
lcall
mov
int
xchg
cld
mov
bound
mov
mov
xchg
inc
hlt
inc
cwtl
pop
nop
repz
jge
add
sub
inc
test
cltd
sahf
iret
jmp
sub
scas
xchg
fmul
and
xor
ja
rcll
cmc
imul
jmp
ficompl
lahf
sar
inc
ja
test
pop
pushf
fnstcw
xchg
xchg
adc
mov
or
adc
int
or
test
mov
imull
dec
mov
icebp
or
xchg
mov
lret
xor
push
testb
jg
mov
push
mov
adc
push
loope
cld
hlt
mov
frstor
clc
inc
fstps
pop
xorl
jno
ja
cs
inc
and
cmp
hlt
imul
sub
loope
stos
bound
jp
inc
fsubr
push
xchg
imul
cmpsl
arpl
out
jmp
fmuls
pop
mov
or
cmp
jne
sbb
shrl
jnp
push
repz
jno
cmp
xor
mov
mov
mov
cmp
ss
cmpl
mov
orl
xor
aaa
loop
bound
jle
xor
xchg
popa
push
dec
into
xchg
out
sbbl
push
rorb
inc
loopne
fwait
pop
dec
or
or
mov
adc
inc
outsl
fidivrl
lea
cld
inc
ja
cmp
pop
sub
pop
andl
sbb
push
push
loopne
jb
aas
dec
cltd
push
sbb
out
or
cmp
pop
mov
and
add
cmp
daa
clc
adc
xchg
arpl
and
mov
int3
cli
mov
pushf
xor
or
imul
xchg
faddl
xchg
sbb
cmp
jo
call
fcom
je
xchg
adc
jnp
lret
adc
into
dec
add
jo
or
sbb
in
test
iret
or
lahf
push
push
sbb
aam
in
adc
mov
add
push
push
add
adc
cmp
jmp
es
mov
in
cmc
pop
cmp
sub
mov
pushf
and
push
je
xchg
xor
lock
mov
ficomps
sub
rcr
push
clc
add
fisttpl
js
decl
dec
push
call
jle
push
fcoms
lods
ficompl
loope
inc
sub
sub
icebp
test
dec
loopne
sbbb
mov
cmp
xlat
ret
pop
jecxz
int
ljmp
sbb
sub
and
movsb
fdivr
int3
and
jg
loope
imul
out
pop
mov
xorl
inc
add
lds
int
mov
mov
xchg
jle
sti
popf
mov
pop
xchg
jmp
dec
pop
lock
inc
out
js
aad
inc
mov
pop
and
pop
loopne
add
mov
aas
iret
popf
mov
je
dec
sbb
movsl
add
outsb
sub
dec
mov
aaa
or
imul
repz
sbb
test
insl
subb
and
dec
inc
out
cmp
stos
sbb
or
or
repnz
mov
cmpb
int3
addr16
das
dec
fildll
mov
insb
sbb
cmp
sbb
xchg
fucomip
repnz
add
out
xor
fldl
stos
aas
ds
test
cmp
ret
mov
push
and
and
sbb
xor
xchg
fdivrl
js
test
sub
jnp
mov
jno
ds
pop
notb
adc
pusha
jnp
cmp
mov
pop
jnp
in
inc
leave
lock
jmp
push
or
nop
mov
or
inc
cld
adc
mov
cmp
shll
call
and
adc
inc
out
lods
scas
scas
push
imull
mov
imul
jb
sub
pop
fldl
movsb
lahf
inc
cmpsb
hlt
jmp
pop
cmp
or
icebp
mov
pushf
sub
mov
mov
clc
jno
roll
lods
or
and
aas
or
mov
adc
pop
into
add
insl
rcr
mov
push
aas
xor
mov
fstpt
sub
mov
fucomip
and
and
push
sbb
pusha
push
or
mov
in
outsb
and
adc
ror
push
pop
in
xchg
ljmp
mov
lock
ss
and
shl
scas
cwtl
nop
xchg
daa
jmp
out
icebp
lods
jl
cwtl
sbb
incl
hlt
loop
sbb
mov
fstpt
push
ljmp
loopne
sbb
adc
add
push
inc
rcrb
scas
dec
mov
shrb
scas
mov
sub
stos
sub
mov
int
xor
mov
insb
iret
sub
add
imul
adc
adc
fiadds
dec
mov
mov
cli
call
addr16
pusha
adc
dec
mov
aas
mov
enter
xchg
int
xlat
sub
inc
lods
loop
mov
inc
daa
push
push
les
lods
fnsave
sub
push
pop
pop
dec
mov
test
pop
cmpsb
lret
adc
je
xor
int3
pop
push
add
add
mov
push
mov
jg
push
pushf
dec
popf
addr16
in
mov
pop
in
mov
shll
dec
icebp
inc
jbe
addl
icebp
push
mov
imul
mov
pusha
pushf
in
lock
xor
test
push
insl
xor
fcmovnu
sub
push
jbe
dec
pushf
cli
jecxz
fcom
fstl
lea
iret
push
xchg
shlb
btc
aam
or
addl
dec
fnstenv
xchg
jbe
mov
rorb
or
lahf
pop
cmc
cmp
fimull
adc
sbb
jg
push
mov
in
mov
sub
data16
bound
sub
test
enter
addr16
inc
sar
mov
test
ret
fs
or
idivb
add
push
stos
dec
test
sbb
js
xlat
ljmp
add
leave
or
lods
repnz
stc
mov
pop
push
xlat
cmpsl
test
sub
div
subb
xor
cltd
sbb
icebp
nop
or
dec
loopne
xchg
fs
rcll
mov
stc
mov
lret
movsl
or
jne
pop
lock
clc
jmp
nop
mov
aad
imul
stos
imul
dec
adcb
jecxz
mov
orb
in
inc
and
fldl
aad
fnsave
add
ret
nop
or
pop
xchg
xchg
jecxz
xchg
pop
xor
inc
dec
cmp
arpl
fs
cmp
mov
iret
adc
movsb
clc
mov
add
xlat
arpl
ja
cmp
cwtl
loopne
shlb
dec
push
rorl
jo
hlt
jl
inc
ss
outsl
adc
sub
movsb
movsb
mov
je
loopne
call
std
imul
imul
faddl
aas
jne
loop
jmp
dec
jnp
and
ret
stc
and
xchg
jge
mov
into
test
adc
lea
xchg
fbld
or
out
xchg
arpl
push
xchg
sbb
mov
mov
and
push
stc
adc
push
pop
cltd
jecxz
rorb
and
sbb
mov
or
cmp
inc
jl
test
int3
mov
inc
mov
xchg
je
add
out
les
xchg
add
scas
push
xor
sub
insl
js
add
ret
call
aad
cmc
dec
faddl
stc
ret
mov
loopne
and
or
sti
outsb
dec
loope
mov
ret
and
mov
rorl
jmp
push
imul
xor
and
mov
iret
add
jp
in
lret
cwtl
jmp
movsl
xorl
adc
lahf
pusha
lcall
mov
inc
mull
sub
mov
pop
lret
mov
push
sub
mov
jmp
in
subb
icebp
mov
repz
es
mov
aam
jmp
inc
bnd
test
xchg
xchg
repz
mov
negl
jg
jge
ds
ss
negl
push
ss
int
lods
mov
xchg
mov
es
sub
add
dec
orb
sub
movsb
and
lods
inc
icebp
flds
sub
imulb
aad
xor
jp
cli
fs
jl
pop
inc
add
cmp
sub
sbb
add
pop
xchg
aaa
out
sub
repz
sbbl
add
out
test
nop
cld
shlb
dec
push
pushf
shll
mov
mov
cmp
push
xchg
out
addr16
cld
rclb
mov
movd
cltd
inc
jns
adc
movsb
push
jle
dec
aas
rcll
sbb
inc
jmp
inc
push
and
jg
lock
cmp
sbb
rcrl
cmp
fsubrl
in
xchg
outsb
dec
lea
lock
scas
pop
aam
cmc
gs
push
mov
sub
fadd
sbb
add
popf
or
mov
rol
sub
jbe
std
xorb
addr16
filds
imul
fiaddl
movsl
mov
bound
aam
mov
les
pop
mov
and
push
jle
pop
aas
in
dec
aaa
jo
adc
cmp
hlt
or
arpl
shlb
clc
cmpsl
imul
cmp
dec
and
mov
and
outsb
push
xor
fnstsw
test
sbb
or
mov
adc
pusha
xor
aas
xchg
dec
push
test
fbld
xchg
mov
inc
mov
jbe
jne
push
sub
mov
xchg
sub
cmpsl
in
xchg
add
loop
data16
out
push
xchg
dec
or
xchg
test
fbstp
mov
jbe
std
int
test
ret
outsl
imul
lea
lret
insb
pop
popf
xchg
inc
cmp
cli
cld
mov
stos
pop
inc
fnstsw
fdivl
mov
arpl
mov
mov
int
sub
jp
insb
aas
into
and
mov
xlat
lahf
jmp
jb
aam
xchg
call
mov
fists
hlt
mov
shll
mov
fistpl
mov
jno
clc
lcall
shrb
sbb
jns
xor
insb
lret
jle
dec
xor
popf
cltd
inc
mov
das
xchg
pop
adc
add
ljmp
stos
fimuls
imul
inc
icebp
test
arpl
push
push
jp
push
mov
cltd
or
pop
cmc
mov
loopne
leave
sbb
mov
fimull
fnstenv
lcall
add
test
mov
out
inc
cmp
sub
pop
jbe
cli
jecxz
mov
fmul
sti
lods
cmp
imul
and
out
inc
ficoml
sub
cmp
es
rcr
mov
sbb
mull
push
push
incl
out
mov
pop
fildll
mov
out
cwtl
adc
jne
sbb
jge
sbb
inc
mov
add
mov
data16
and
scas
mov
fbld
xor
add
pop
out
sti
in
popf
and
sbb
xor
add
xchg
jae
push
into
je
adc
loopne
dec
cvtps2pd
jle
xchg
hlt
push
jnp
jns
and
pop
call
outsb
popf
dec
sbb
cmp
pop
add
cmpsb
test
push
insb
pushf
lahf
sub
add
cmpsl
int3
lret
cmp
xor
mov
pop
icebp
std
adc
jecxz
push
cmp
ret
aad
and
into
cmp
push
pop
xor
xchg
aad
sti
xor
add
cmpsl
cwtl
test
dec
or
lret
iret
loop
outsb
mov
movsl
idivb
cltd
bound
or
fbstp
lea
test
lock
ss
imul
ret
push
int3
and
cmp
add
add
loop
mov
add
sbbb
adc
in
lret
stos
mov
and
push
ja
add
mov
or
dec
inc
jge
es
lea
fcomps
ljmp
pop
cmp
add
mov
call
sbb
fcompp
imul
mov
xor
xchg
sbb
in
mov
in
test
jle
inc
pop
xor
cld
xchg
adc
and
or
cmpsb
lcall
xchg
repnz
cmc
iret
repnz
addl
ljmp
daa
push
lods
wbinvd
inc
adc
insb
ror
sub
addr16
out
shlb
fsubrp
mov
in
mul
ficoms
fimuls
and
mov
sahf
frstor
mov
sub
lcall
xlat
je
in
daa
pop
dec
adcb
and
push
scas
push
mov
xchg
jno
repnz
popa
shl
les
loope
fidivl
scas
repnz
mov
shlb
sbbl
repnz
loopne
insb
adc
inc
push
xlat
sbb
and
jne
ss
mov
jnp
dec
pop
fmulp
mov
clc
imul
cs
clc
jns
mov
jmp
lock
cmpsb
test
ljmp
enter
cmp
in
les
push
push
push
out
loopne
sub
dec
dec
aaa
fmuls
popf
mov
xchg
bound
push
or
mov
pop
std
xor
jb
faddl
mov
cltd
fdiv
xor
ficompl
sub
cltd
imul
or
js
test
xor
lcall
push
pop
sbb
lret
sarl
add
push
xor
rcrl
add
in
xor
push
mov
out
jge
sub
xchg
mov
fdivrl
mov
add
push
mov
jbe
jmp
mov
iret
xchg
popf
addb
xlat
je
pop
mov
and
push
sub
push
dec
ljmp
inc
icebp
push
std
lock
lock
in
fs
movsb
nop
inc
xor
fsubr
sbb
cs
lcall
cmp
je
push
std
inc
fs
lods
stc
insb
cs
incl
adc
div
and
or
into
mov
imul
repnz
inc
or
xor
ja
xchg
push
add
add
iret
and
loopne
fldcw
outsb
fwait
insb
fadd
mov
jl
lock
mov
pop
cld
out
cmp
out
fs
stos
into
scas
adc
pushf
push
cmp
cmc
or
jb
outsb
adc
inc
call
jg
cltd
jno
xor
pusha
sbb
xchg
stos
test
mov
pop
inc
in
inc
outsl
inc
ss
mov
adc
and
addr16
jns
dec
pop
popf
cmp
mull
and
test
dec
mov
xor
xchg
icebp
fsubl
lds
popf
bound
jb
or
inc
adc
les
mov
in
loopne
rclb
out
ss
pop
pop
mov
inc
xlat
incb
movsb
enter
shll
bound
ror
das
and
push
adc
fsubp
mov
jp
dec
xchg
test
orb
lea
mov
mov
ret
stos
call
lock
enter
xor
fdivrl
in
push
dec
adc
push
jno
adcl
ljmp
pop
add
lock
cwtl
dec
loope
mov
xchg
lcall
sbb
and
dec
lcall
sub
ds
or
scas
out
stos
sub
mov
scas
sahf
sub
cmp
shlb
jno
daa
lcall
cmp
mov
sti
pop
jnp
lret
jbe
aaa
xchg
in
cmp
sub
lods
es
sbb
ljmp
out
sbb
test
fnstenv
arpl
repnz
clc
inc
mov
push
xchg
mov
pop
cld
std
push
push
movsb
enter
dec
jecxz
loope
xchg
pop
in
lret
and
dec
daa
dec
divl
jg
into
lahf
out
loop
xchg
jne
sbb
cmp
gs
sub
cmp
bnd
cmp
popf
cmp
inc
lret
mov
jnp
mov
in
scas
movsl
out
popf
sbb
stos
data16
pop
pop
mov
icebp
stos
cmpsb
or
adc
add
movsb
lret
pop
arpl
cmc
imul
ljmp
insb
sub
mov
sahf
xor
js
cmp
sbb
sbb
inc
sub
cmpsl
xlat
stos
pop
rol
sub
int
and
aad
clc
mov
mov
daa
cmp
out
sub
das
or
mov
fwait
int
ret
fs
sahf
or
add
in
pop
dec
add
inc
sbb
stos
inc
pop
jg
xrelease
aas
gs
es
jne
lret
movsb
inc
pop
shll
mov
cs
jmp
mov
and
sti
dec
repz
lret
mov
add
cmp
insl
popa
cld
inc
jno
imul
xor
pop
jbe
aad
lret
jmp
jp
lret
mov
dec
orl
xorb
push
mov
jmp
aaa
shll
jo
out
mov
dec
xor
or
sbb
add
or
std
jmp
js
add
pusha
cmp
mov
mov
ljmp
cmp
xor
push
and
aam
cmp
mov
sti
add
cli
mov
out
das
incl
sub
fwait
cmc
jp
xchg
cmpsb
std
adcb
test
ja
sub
into
iret
push
lret
xlat
mov
mov
sti
xchg
fstpt
lret
sub
repnz
adc
cmp
xor
xor
and
repnz
add
adcl
add
data16
mov
xchg
jle
cwtl
adc
cmp
movsb
push
cmpsl
mov
data16
dec
sub
mov
cmc
sbb
mov
repnz
stc
aad
pop
imul
decb
aad
out
or
or
jns,pn
mov
mov
clc
lret
inc
pop
add
bound
cmp
mov
mov
subl
shll
out
test
add
xor
and
sbb
aam
xchg
cs
mov
dec
mov
mov
fstpl
cld
scas
test
lahf
test
xchg
repz
cld
or
pop
mov
jno
imul
push
jmp
or
inc
inc
or
enter
outsl
cmp
pop
pusha
outsl
dec
jb
cld
test
sahf
mov
mov
sbb
add
andb
and
xlat
pop
sub
mov
xchg
add
daa
or
jl
out
test
pushf
into
xor
cmp
int3
sub
sub
sbb
dec
jne
mov
scas
cli
xor
xor
sbb
cs
push
dec
adc
sti
leave
cmp
cmpsl
pop
repnz
imul
inc
cmc
pop
adc
sub
mov
stos
xchg
sub
cs
and
sub
mul
popa
aam
cmp
popf
ljmp
xor
pop
pop
pushf
movsl
sbb
cmp
test
cld
daa
pop
andl
sti
popa
addr16
jbe
adc
mov
inc
jp
dec
sbb
mov
popa
ja
cmpsb
rcrl
cmp
lods
and
jg
hlt
adc
fs
and
mov
jge
xor
hlt
iret
rcr
and
pop
dec
jnp
lock
mov
fcmovu
fidivrl
cmc
xlat
inc
add
roll
inc
jle
fstl
jno
in
inc
and
subl
sub
adc
jl
ss
loop
in
dec
fmuls
test
push
ret
out
in
out
nop
repz
push
sbb
xlat
outsl
call
insb
push
stos
loope
shr
in
fcompl
stos
pop
arpl
and
dec
dec
pop
insl
dec
sub
pop
int3
sbb
inc
idivb
add
gs
pop
dec
mov
inc
xchg
cmc
icebp
hlt
push
aad
lds
sti
push
fldcw
jnp
jno
es
push
dec
lret
shl
andl
xor
movsl
stc
out
dec
cmp
pop
inc
testb
ret
cwtl
jae,pn
adc
dec
cli
push
jmp
imul
dec
fists
xor
mov
cld
in
sub
leave
mov
gs
loope
pop
nop
leave
push
fistpll
cwtl
sbbl
int3
inc
lret
jle
add
insb
xchg
or
and
insb
inc
cmp
stos
hlt
jns
or
out
scas
mov
outsl
jae
pop
orl
dec
xor
pop
sub
fwait
cs
gs
test
stc
addl
push
sbb
jbe
jge
jg
xor
sarl
xchg
rolb
divb
xor
adc
stos
je
pop
fs
data16
mov
mov
dec
add
mov
dec
sub
out
pop
add
dec
movsl
or
jno
lret
and
ds
lock
adc
insl
cli
add
adc
and
pop
out
pop
ret
dec
sbb
jg
dec
sbb
mov
mov
adc
mov
roll
cwtl
push
daa
gs
mov
shr
xchg
call
stos
sarl
pop
loope
xchg
sbb
iret
fcomi
cltd
fldenv
rorl
inc
fwait
imul
repnz
add
xchg
fwait
jg
call
add
mov
sbb
mov
sar
pop
sub
push
add
insl
fiaddl
pop
jmp
stc
jge
or
jo
shrb
mov
cs
dec
mov
sub
add
jnp
jg
fldt
loopne
jne
clc
stc
sub
fnsave
out
je
jnp
inc
js
frstor
les
push
ljmp
pop
sahf
fistpll
bnd
lret
dec
imul
lods
mov
push
sbb
dec
pop
mov
and
mov
inc
cmp
jbe
pop
nop
dec
stc
scas
iret
arpl
ret
jmp
push
cmpl
fwait
cmpb
cwtl
pop
ficompl
lahf
stos
push
xor
cmp
jle
cmc
test
cli
fwait
vmovaps
lods
mov
xchg
add
pushf
cld
gs
sub
adc
sub
jno
lret
aas
mov
add
in
scas
iret
outsl
vaddss
jp
sbb
sub
xor
bound
dec
repz
shll
push
jo
push
sbb
jge
jns
mov
test
cwtl
js
push
and
pop
rcl
dec
xor
stc
inc
xchg
pop
std
mov
inc
cmpsb
mov
sahf
mov
add
aam
and
inc
xor
dec
ja
mov
in
mov
jae
xor
clc
frstor
adc
add
xorb
leave
mov
sub
mov
ss
dec
in
popf
and
pop
nop
jno
and
paddq
out
fcomps
outsb
xlat
dec
fucomp
daa
push
or
std
imul
mov
xor
aas
out
lock
inc
cmp
add
jae
xchg
mov
mov
push
aaa
ret
mov
lods
inc
pop
arpl
add
insb
in
sub
scas
xadd
dec
sbb
es
leave
adc
addl
and
lret
ja
mov
jns
lock
test
test
push
and
int
minps
pop
cld
movsl
xor
daa
orb
out
mov
fisubrs
ret
mov
push
shll
gs
push
add
mov
hlt
mov
cmpsb
std
or
or
push
xchg
cwtl
sti
inc
mov
jb
inc
xchg
mov
cs
xor
out
mov
roll
and
subb
xor
insl
inc
xchg
cmp
pop
loopne
mov
sbb
cld
mov
mov
push
push
hlt
xor
icebp
push
xor
imul
cmp
xor
adc
push
into
cmp
push
xchg
inc
outsl
cwtl
fs
mov
cltd
cmp
aad
es
stos
and
push
sub
or
jl
sub
add
mov
fcoml
ficomps
enter
mov
popa
mov
sub
stos
pop
aas
movsl
push
xchg
mov
std
and
lods
add
ret
adc
pop
xchg
das
add
lods
lds
xor
nop
pop
nop
cmc
add
fldenv
pusha
mov
addl
xor
adc
xor
and
jno
pushf
xor
cmpsb
fs
clc
push
xchg
and
imul
jle
inc
sbb
ret
aad
mov
insb
jo
notl
mov
pusha
mov
sbb
push
repz
dec
sub
mov
mov
and
inc
or
mov
movsl
mov
sub
pop
scas
subb
mov
pusha
push
dec
xor
out
out
mov
daa
lahf
dec
inc
adc
mov
rcl
sub
cmpsl
jp
das
inc
jl
dec
sub
xor
clc
dec
rol
ret
pop
outsl
inc
cmp
inc
imulb
fsubrp
cmp
push
mov
push
loope
lret
jge
add
push
aas
test
shlb
daa
add
add
or
adc
mov
addl
decb
or
sbb
pop
popa
and
cli
mov
mov
push
xchg
insb
inc
cmp
xor
sbb
mov
jnp
xor
pop
push
scas
mov
fldl
int3
notb
daa
sbb
mov
push
lahf
mov
mov
xor
ljmp
add
xchg
dec
out
cmp
mov
push
mov
pop
ss
xchg
aas
adc
dec
add
out
leave
pushf
setbe
inc
int
push
leave
or
lea
or
sub
push
pop
pop
pop
inc
mov
push
fisttpll
mov
or
adc
aam
rcrb
repnz
testb
stos
mov
push
sub
int3
loope
lret
xchg
cwtl
outsb
push
mov
cld
rorl
mov
mov
lret
aaa
lock
iret
mov
dec
cmp
xchg
sub
test
add
xlat
les
pop
dec
cwtl
fcoml
stos
arpl
sub
mov
loop
push
push
cmp
and
sbb
xor
inc
rcrl
sbb
dec
mov
fs
push
test
das
pop
push
adc
test
shr
jle
jae
outsl
mov
and
mov
cmp
dec
mov
orl
mov
add
out
cmp
push
sbb
xchg
popf
pop
clc
fs
mov
push
les
jmp
rcrb
aaa
xor
cld
test
sti
jb
les
cld
enter
sbb
jb
out
imul
roll
inc
add
out
shll
jle
ret
jg
pop
lock
loopne
pusha
and
test
inc
sti
pop
jp
je
aas
mov
popf
adc
fs
lods
jg
or
nop
and
cmp
ret
jle
mov
shlb
gs
mov
xchg
or
clc
into
sbb
adc
into
aas
int3
shrl
push
insb
xchg
xchg
pop
out
das
nop
mov
xchg
adc
pop
sbb
nop
sub
lods
pop
lods
or
adc
xchg
cmp
inc
sti
sbb
push
in
test
scas
cmpsb
inc
iret
lret
ss
hlt
imul
fiaddl
mov
dec
inc
xor
or
or
test
mov
call
and
mov
push
ret
sbb
popf
or
xor
or
aam
fiadds
push
cli
bound
sbb
pop
sahf
add
xor
lock
mov
scas
add
popa
inc
sub
jo
push
sub
or
stos
xor
mov
sub
adc
js
dec
xchg
xor
aam
sbb
jg
enter
xchg
decb
xlat
pop
inc
test
and
out
jno
or
fildl
xchg
jae
std
mov
aaa
pop
je
pushf
dec
out
mov
fildl
hlt
nop
dec
in
out
fmulp
pushf
and
inc
adc
jg
scas
aam
daa
je
or
ljmp
add
sarb
dec
lahf
add
and
decb
test
inc
jmp
ja
dec
sahf
arpl
rclb
mov
cmp
stos
lret
push
push
ret
or
pop
sbb
mov
mov
imul
xor
mov
addr16
psubusw
pop
loope
sub
xor
xchg
mov
std
push
icebp
mov
sub
into
bound
cmp
xchg
xchg
xor
pop
hlt
adc
jnp
jne
adc
mov
stc
jnp
sub
add
enter
push
cs
lcall
fsubrs
arpl
in
or
es
add
xor
in
dec
repnz
mov
add
dec
xchg
enter
stc
scas
in
mov
fs
sub
ja
push
and
out
jns
inc
and
mov
clc
ss
lret
push
mov
push
sub
loopne
bound
aad
das
lea
lods
sub
repnz
and
test
int3
lahf
aam
loopne
jb
push
push
cmp
scas
jg
pop
mov
mov
cli
fmull
or
mov
jae
cld
mov
cmp
pop
sub
mov
imul
mov
icebp
push
xchg
mov
lock
movsl
xor
sub
mov
dec
pop
pop
cmpsb
push
out
xchg
and
cli
cli
jns
pusha
and
js
or
inc
dec
cmp
add
shlb
loope
minps
stos
mov
cld
call
xor
cmp
sbb
jl
jp
imul
ljmp
and
push
stc
loop
andl
mov
cld
push
mov
push
xchg
mov
or
repz
jle
inc
jnp
push
xlat
ja
flds
xchg
push
call
sbb
fstpt
sub
fstpt
int
jge
push
sub
adc
xchg
in
int3
sbb
mov
outsl
fldenv
cmp
test
pushf
cltd
imul
call
mov
jbe,pn
push
cltd
and
dec
or
mov
mov
fists
jbe
adc
sbb
lgs
mov
hlt
xchg
popa
pushf
push
sbb
aad
dec
pmaxub
stos
cli
mov
or
xor
insb
imul
cmpsl
sub
pop
cmp
inc
shrb
lds
in
sub
fildll
insb
fdivp
mov
scas
js
pop
jmp
int
or
or
fists
adc
inc
cltd
scas
pop
out
xor
daa
sub
sbb
mov
clc
cmp
mov
imul
mov
dec
data16
rorl
repnz
mov
mov
sub
mov
fmull
xor
dec
jnp
or
sbb
das
in
push
jl
xchg
fcoms
call
add
cwtl
in
add
ja
orl
in
xor
dec
ficomps
out
mov
data16
push
cmp
push
mov
loop
cwtl
mov
add
cmc
sti
lods
cmp
out
dec
pusha
add
ror
push
int
mov
xchg
push
daa
std
or
xor
cmp
push
outsl
in
inc
xchg
out
scas
mov
in
cwtl
inc
mov
xor
ret
push
and
jle
and
lcall
movsb
test
jbe
mov
inc
cmp
daa
ds
cwtl
xor
sub
test
icebp
jbe
mov
cmp
mull
dec
inc
sbb
lret
imul
mov
fldcw
sbb
inc
hlt
out
scas
in
pop
imul
sub
lods
dec
xlat
loopne
les
pop
mov
repz
or
imul
test
or
inc
mov
popa
pop
adc
rol
mov
xchg
mov
pop
jnp
cld
ret
cmp
adc
lcall
mov
cmpl
sbb
pushf
pop
ds
fildl
or
in
sbb
ja
mov
push
ss
mov
aaa
and
stc
pop
cmc
add
xchg
stos
movsb
mov
jmp
test
xchg
lret
ljmp
add
mov
push
jns
xchg
outsl
mov
movsl
sub
sub
leave
outsl
cli
and
dec
sbb
shlb
cmp
dec
lock
idivl
push
jbe
jbe
mov
mov
lock
push
jno
add
cmp
nop
aam
cmp
sti
cmp
loop
sub
div
lahf
repnz
push
xlat
popa
inc
add
leave
aad
inc
jle
mov
negb
out
test
pop
aas
out
cmp
xchg
mov
scas
movsl
repnz
push
cmc
pop
lea
adcl
cmp
pop
bnd
in
inc
mov
xchg
mov
cmpsb
clc
testb
jnp
push
or
test
jge
negl
divl
sbb
ss
fldcw
mov
lahf
push
mov
ss
shr
cmpsl
sub
inc
add
dec
aam
jb
loopne
mov
fidivl
cmpsb
fadds
pop
cmp
push
aad
hlt
in
xchg
xor
mov
pop
or
and
lret
inc
call
pop
sarl
mov
dec
cmp
jle
pop
mov
test
add
mov
jns
cld
cltd
jb
pop
rorb
outsb
xor
in
adc
daa
pop
jge
cwtl
dec
or
popa
imul
xchg
fbld
not
inc
loop
aam
outsl
jb
sbb
adc
adc
rcrl
rcll
add
shll
xchg
sub
and
je
xchg
dec
mov
cmpsb
fst
jge
and
jp
sub
ss
repz
push
or
dec
stos
mov
hlt
lea
in
push
jmp
fcoms
mov
sbb
repz
push
xor
rorb
xchg
out
std
sbb
xchg
shl
xchg
or
xor
xchg
mov
sbb
das
adc
jns
push
push
jae
ret
jne
testl
lret
or
sub
mov
pop
cwtl
insb
cmpsb
sbb
push
cltd
sbb
jp
imull
push
fstps
int3
out
sti
outsl
ds
icebp
and
mov
daa
decl
add
out
call
and
int3
inc
mov
rcrb
xor
fs
or
push
sub
test
fsubrs
fldl
mov
stos
cwtl
sbb
mov
pop
jg
pusha
mov
push
or
mov
push
xor
jge
sbb
push
push
int3
mov
inc
pop
and
iret
inc
jecxz
sub
aaa
std
mov
loopne
sbb
clc
mov
imul
std
scas
int3
popl
xchg
and
jl
adc
add
sbb
mov
xchg
or
mov
enter
mov
lock
dec
xchg
add
and
subb
xchg
mov
sub
cmp
mov
jecxz
xor
mov
xchg
or
stc
lods
adc
mov
and
sahf
inc
mov
hlt
push
xchg
cli
or
push
push
mov
and
in
dec
fstpl
js
pop
push
andl
push
inc
test
xor
stos
shrb
xchg
gs
notl
jp
movb
jns
cwtl
xchg
cld
and
lret
lds
fistpll
and
insl
in
sub
lods
nop
push
in
mov
push
ret
jne
or
dec
xrelease
rcr
mov
pusha
mov
xor
and
pop
pusha
ds
popf
jmp
aam
outsl
mov
push
ss
mov
mov
cmc
adc
cmpb
jb
lret
cvtdq2ps
test
dec
loopne
insb
sbb
cmpl
aas
mov
jmp
stos
mov
leave
xchg
aam
push
movsb
push
cld
int
in
fdivs
pop
shll
xor
mov
cmpl
imul
test
ret
cmpsl
cmp
adc
not
xchg
repnz
dec
pop
jmp
lods
sbb
mov
push
push
push
xchg
into
stos
xchg
xlat
into
dec
sub
jne
pop
and
pusha
ret
xchg
lods
movntps
out
and
jmp
mov
aas
pop
je
lods
add
sub
rcll
es
test
sbb
xor
jecxz
test
xlat
outsl
xor
sub
fisttps
pop
clc
jnp
adc
subb
xorl
mov
xchg
xlat
subb
shrb
and
mov
lahf
jae
repnz
test
jecxz
ja
bound
cmpsb
xchg
or
cmp
jmp
mov
or
add
insb
mov
std
mov
sbb
dec
and
inc
daa
push
inc
int3
push
bnd
or
bound
aad
xchg
mov
push
xor
xor
out
xchg
pop
sbb
std
inc
xchg
jbe,pt
dec
adc
bound
fisubrs
xchg
xor
fnsave
int3
pushf
xor
cltd
xchg
stos
sahf
mov
mov
push
sub
push
jge
std
stos
fmull
lods
adc
or
imul
and
mov
and
pop
xlat
jbe
ss
js
or
push
push
jmp
xchg
mov
frndint
mov
test
repnz
or
mov
dec
lock
das
push
les
jecxz
push
loop
repnz
add
pop
mov
adc
fnsave
shl
xor
cmpsl
pop
stc
jns
dec
test
or
cs
notb
mov
sbb
xor
pop
pusha
inc
fcom
aas
jmp
dec
push
xchg
test
push
in
cmc
mov
add
popf
mov
rcl
inc
adc
and
or
dec
dec
decl
xchg
test
fistpll
mov
mov
scas
dec
pop
fisttps
dec
addr16
addr16
jmp
out
push
xor
lahf
test
lock
lea
dec
sahf
pop
out
call
push
arpl
cmp
sahf
mov
dec
repz
or
sbb
imul
daa
cmp
jecxz
mov
add
jl
stc
pop
in
fucomip
add
shl
cli
mov
in
push
xor
jmp
sub
lds
stos
shrl
rcll
dec
push
pop
fwait
push
test
dec
mov
jg
push
xor
mov
dec
cmpsl
jp
mov
enter
outsl
sub
cli
out
dec
sub
push
sbb
cltd
scas
ret
lret
pop
and
or
fisttps
xor
inc
int
dec
jb
aad
mov
ret
popa
not
sub
and
rclb
add
test
fidivrs
fdiv
sub
push
mov
daa
push
or
das
add
dec
push
bound
adc
or
sbbb
mov
mov
in
adc
fisubl
fdivs
in
and
test
jge
sbb
out
and
mov
push
jg
aam
and
repnz
test
lock
mov
mov
xor
sub
jbe
negb
jle
dec
push
fwait
adc
int
add
les
enter
idivl
push
ja
cmpsb
mov
outsl
aad
jg
rcll
fmull
aam
xchg
out
pop
pop
out
xor
mov
shll
mov
icebp
not
mov
add
add
leave
into
push
push
aam
jbe
sbb
cltd
or
fsubr
mov
xlat
lock
push
scas
shrl
aad
pop
inc
test
pop
xchg
sub
push
outsl
leave
call
out
popa
mov
scas
xchg
add
inc
test
popf
imul
sbb
push
lock
and
pop
mov
fsubl
mov
sbb
xor
mov
xchg
mov
sarb
mov
mov
cmp
scas
hlt
idivl
jae
xlat
mov
ds
push
pop
loopne
fs
mov
loopne
pushf
xchg
mov
pop
lahf
mov
loopne
push
movsl
inc
or
add
push
rclb
cmpsl
psubusw
mov
and
pop
xchg
mov
dec
xchg
cmpsb
loopne
push
adc
out
loopne
push
xor
adc
jg
or
and
notb
outsb
or
and
mov
xchg
addl
push
js
mov
and
hlt
andb
pop
stos
test
push
fists
movsb
cmp
xor
stos
jge
and
push
mov
or
mov
add
call
faddp
sbb
pop
test
pop
jno
mov
push
jae
add
fstpl
iret
into
xchg
add
lods
pop
stc
xchg
nop
test
movsl
sbb
aaa
les
inc
xchg
sbb
jne
cs
cmp
jb
sbb
popa
fists
dec
test
and
mov
and
xchg
mov
xor
dec
lcall
xchg
insb
mov
and
jbe
fwait
pop
and
jecxz
cmp
pop
cmp
mov
pop
sub
jbe
pop
stos
cltd
push
ja
popf
in
mov
dec
incl
sbb
and
sbb
dec
out
cltd
mov
jnp
add
adc
xchg
pop
mov
mov
pop
leave
lahf
pop
xchg
mov
aaa
pop
mov
xchg
les
jne
sub
push
push
or
sbb
sahf
outsb
test
in
ret
jmp
out
xor
adc
lret
adc
jl
cltd
sub
cltd
cli
hlt
add
lea
sub
jp
enter
divb
mov
jno
add
dec
daa
cmp
mov
pop
cmp
xor
lret
jp
xor
ljmp
jnp
outsb
xor
cmp
cmp
mov
lea
mov
sub
cli
mov
lea
aas
push
mov
mov
xchg
xchg
sbb
mov
inc
mov
inc
fs
sbb
divl
in
or
stos
or
mov
xor
cmp
sahf
or
loop
xor
xor
xchg
dec
dec
cmovae
dec
sbb
int
mov
cwtl
inc
movsl
in
sbb
bound
test
outsb
incl
push
jno
sub
pop
fsubr
sahf
xor
jmp
into
jmp
cmp
jle
jle
mov
sub
bound
mov
nop
dec
adc
cmpsl
pushf
out
dec
push
clc
or
adc
lret
sbb
add
jle
cwtl
loop
inc
xor
hlt
or
repz
xchg
cld
dec
das
or
or
loopne
out
mov
and
movsl
mov
cmp
mov
bound
adc
popf
push
sahf
push
loop
inc
adc
cmpsb
sbb
out
das
scas
fdivrs
out
push
adc
enter
movsl
cmp
mov
fdivrl
or
jg
jp
push
ljmp
insb
popf
push
clc
sarl
fsubrp
inc
sbb
dec
addr16
out
xor
cltd
lds
adc
xchg
add
mov
jns
xor
enter
mov
push
call
mov
call
fistpl
sub
jae
fadd
fidivl
mov
imul
dec
les
jecxz
outsb
and
jl
dec
mov
mov
daa
fistps
mov
out
test
sbb
loop
jecxz
cmpsb
mov
adc
lret
test
int
jb
sbb
jle
in
nop
jne
cmc
enter
mov
cmp
pop
mov
roll
pop
fwait
gs
inc
scas
pop
mov
out
rclb
ss
mov
aad
xor
dec
out
inc
add
and
out
cmpsb
out
insl
mov
rcl
mov
or
add
arpl
shl
sub
pop
scas
add
int3
iret
mov
jge
clc
jb
push
scas
inc
and
cmpsb
and
xchg
addr16
mov
inc
js
pop
out
push
sub
lock
jne
loope
outsb
jns
sub
lods
stc
fdivl
dec
push
sahf
cmpsl
testb
enter
xchg
call
ficoml
xchg
add
add
pop
fimuls
pop
insb
testb
cmpsl
xor
and
lock
ud2
shrb
test
pop
mov
jecxz
out
cmp
in
add
bound
xchg
orb
sub
adc
shll
in
sbb
cmp
xchg
add
in
or
imul
inc
out
out
xchg
xchg
cli
add
xchg
mov
jno
cmpsb
add
clc
or
push
dec
hlt
jmp
mov
push
adc
add
inc
push
dec
push
pop
aas
inc
inc
shrb
inc
fisttps
mov
mov
je
xor
xlat
mov
fdivr
cmp
jp
arpl
dec
and
inc
push
mov
mov
mov
fimuls
jnp
inc
fistl
xchg
fisttps
fildl
movsb
xchg
mov
or
jecxz
mov
or
pop
das
filds
scas
mov
fldenv
jle
fistl
push
pusha
cmp
nop
jge
mov
mov
pop
push
shll
rclb
jmp
push
int
into
scas
push
mov
or
popf
and
xchg
mov
mov
mov
test
lock
sarl
aas
pop
jp
test
adc
call
in
jp
adcb
fistpl
pop
aaa
roll
dec
inc
sub
test
fsubrl
push
push
fstpl
push
mov
sub
sti
popa
xchg
xor
cmp
and
add
sub
pop
or
movsl
aaa
push
inc
mov
iret
mov
push
les
cmpsb
mov
add
fildl
fidivrl
cmp
inc
js
push
mov
arpl
insb
jbe
mov
push
inc
ljmp
clc
stc
das
addb
push
jmp
divl
in
incb
lcall
mov
leave
add
add
iret
push
test
ret
stos
mov
dec
clc
dec
add
jp
scas
inc
ret
jle
cmp
sbb
or
daa
xchg
lods
sbb
ret
ret
mov
push
pop
sub
cmp
out
fisubrs
sbb
movsl
cltd
sbb
cmp
cmp
mov
jp
adc
jae
lds
test
xchg
adc
aam
sub
jnp
test
and
mov
mull
scas
mov
jecxz
repz
push
test
mov
inc
fs
and
das
mov
pop
ss
mov
jge
cs
mov
dec
sahf
or
dec
mov
insl
dec
jno
stos
xchg
jle
xor
push
sub
jle
dec
mov
adc
jno
or
pushl
mov
add
lea
movsb
cmp
adcl
rcll
mov
jg
xchg
jmp
loop
clc
add
bound
xorb
aaa
popf
imul
dec
dec
and
cmc
jmp
and
pop
in
les
mov
mov
cmp
ljmp
les
sub
or
scas
sub
and
sahf
sub
loope
pop
sbb
lcall
sbb
fimull
push
hlt
outsb
scas
xchg
add
mov
and
dec
xchg
inc
inc
sbb
js
lods
mov
dec
sbb
sahf
js
ficoml
or
mov
scas
ret
enter
dec
xor
xlat
mov
jbe
add
in
add
sbb
ds
mov
mov
sub
pop
cmc
icebp
cs
mov
cwtl
mov
je
pop
in
rorb
popf
fwait
mov
repnz
sub
loope
ret
xor
icebp
add
mov
push
add
loop
js
mov
popf
dec
mov
stos
into
jle
mov
loop,pt
mov
aaa
dec
jo
sbb
repnz
imul
int3
sarl
pop
lea
xlat
xor
push
loope
cltd
flds
sub
jl
sbb
test
mov
xchg
inc
insl
out
add
inc
cmp
es
pop
pop
push
pop
push
mov
pop
ret
cmp
ss
mov
and
push
inc
push
hlt
les
dec
and
sub
data16
xchg
or
cmp
test
push
dec
das
cmp
add
mov
cld
mov
sbbl
jo
lods
xor
sub
sub
or
test
icebp
lea
and
push
out
cmpb
inc
jmp
dec
shl
jmp
add
cmp
and
insl
shlb
push
pop
fs
mov
ljmp
stc
in
jno
xchg
test
dec
cmp
ss
push
sbb
leave
adc
insl
or
push
addl
nop
jnp
inc
push
jg
sub
rcrl
push
jb
xchg
inc
lret
add
xorb
lret
add
add
enter
jb
hlt
push
mov
dec
pop
pop
jnp
add
lahf
add
pop
push
inc
push
inc
mov
fsubl
out
push
sub
lock
ss
lret
lret
sbb
les
addr16
insl
push
das
fst
dec
adc
cmpsl
push
popf
rep
pop
cs
or
sbb
les
cmpb
mov
inc
fnstenv
test
sti
stc
mov
int
clc
inc
data16
jne
rclb
movsb
inc
fsubl
aad
lods
je
pop
or
cs
jno
test
and
out
shrb
or
mov
dec
rcrb
mov
push
sahf
fwait
push
adc
repz
ja
fistpl
or
dec
mov
jno
inc
jg
inc
mov
iret
cmp
lcall
int
clc
fsubs
dec
dec
ret
cld
cwtl
sti
int3
xor
testb
mov
pop
mov
mov
imul
and
jne
mov
ljmp
ficoms
lret
cmp
int3
cli
jno
loopne
aaa
popl
repnz
xor
pop
add
repnz
ja
test
jp
repz
pop
sbb
cs
lds
loopne
add
pop
into
fwait
sbb
jg
pop
gs
pop
popa
jmp
xchg
cmp
lahf
sub
cs
nop
in
aas
daa
stos
ja
or
mov
mov
cld
pop
rcll
xor
lods
inc
dec
pop
pop
and
mov
fistl
jae
imul
cmc
loop
movsl
fsubr
cmp
jb
std
dec
jns
mov
lds
fstsw
mov
shll
dec
mov
jg
cltd
insl
sub
dec
push
jns
shrl
insb
shrb
xlat
inc
xlat
add
sahf
jb
xor
pop
add
fdivs
and
enter
mov
pop
jae
je
pop
pop
mov
enter
filds
or
in
jge
mov
int3
daa
fdivs
incb
pop
sahf
les
jnp
std
mov
dec
adc
leave
sub
cltd
popf
gs
cmp
cmpsb
pop
sub
loope
out
mov
mov
mov
inc
mov
imul
sbb
aaa
nop
ljmp
aad
adc
ss
jecxz
xchg
scas
sub
xchg
sub
xor
push
push
inc
shll
cmp
stos
sub
mov
xor
std
mov
cmp
fcomps
xor
in
iret
in
xchg
fisttps
push
imul
ss
mov
xor
jno
jb
movsl
into
push
lret
loopne
lret
int
lret
cmp
bound
mov
mov
sbb
imul
ljmp
jmp
je
sbb
lahf
xchg
insl
popa
mov
push
test
fcom
cmp
es
ja
xorb
push
mov
lds
ja
ret
jno
sbb
push
int3
or
sbb
or
ja
dec
lods
in
mov
cmp
mov
xorb
aaa
mov
aad
jmp
cmc
rolb
xor
mov
dec
in
xchg
push
mov
das
je
xor
push
cmp
fs
mov
arpl
ja
push
push
cmpsb
arpl
jo
sub
sub
mov
aas
add
sub
stos
push
lea
xor
xchg
jnp
fadds
jg
dec
rolb
mov
out
push
jo
inc
loopne
lret
stos
and
data16
pop
xchg
jp
jmp
pop
daa
push
scas
cwtl
cmp
je
nop
push
jno
inc
pusha
sub
mov
jge
stos
xchg
int3
popf
pop
sub
cld
mov
rolb
sahf
mov
mov
dec
mov
pop
int
adc
and
test
cmpsb
jecxz
sarb
loope
sub
data16
mov
test
ret
xor
pop
clc
addr16
jmp
inc
insl
jp
adc
popf
pop
call
out
mov
data16
cltd
aaa
imul
xchg
dec
xchg
sbb
les
sbbl
fbstp
adc
lahf
push
ja
mov
inc
roll
pop
fistl
mov
cmp
bound
push
cmp
adc
add
lahf
jo
inc
call
mov
cmp
imul
adc
mov
sarl
movl
mov
cmp
mov
push
inc
pop
fwait
sub
jmp
decb
mov
xchg
cmp
addl
fidivrl
in
stos
out
sbb
sahf
rcrl
push
xchg
aad
loopne
sahf
fwait
outsl
and
ss
cltd
add
add
jo
mov
jbe
mov
adc
clc
jle
ret
ret
jmp
fisubrs
frstor
mov
leave
in
inc
mov
in
xchg
add
push
inc
pusha
sbb
fstps
xor
faddl
add
xor
and
add
inc
test
adc
jle
in
inc
sub
push
pop
jecxz
cmp
and
rorl
push
mov
les
ds
adc
or
rorb
imul
stc
add
dec
out
inc
xchg
jne
outsb
xchg
pop
and
mov
pushf
aas
xchg
jp
xlat
xchg
std
lcall
mov
xchg
enter
or
mov
rorl
fwait
daa
dec
aad
add
cmc
xchg
sub
addb
xchg
aad
and
ret
push
sub
sub
add
rcrb
std
pop
cmpsl
mov
inc
dec
xchg
jns
dec
inc
in
jae
scas
xchg
imul
lock
inc
lods
in
push
xor
cmp
mov
popa
rcll
es
fdivrs
out
enter
and
dec
xchg
fs
scas
push
ja
xchg
mov
mov
mov
shlb
call
and
sbb
push
or
xchg
or
push
mov
and
mov
mov
divb
sub
mov
dec
aad
fsub
push
test
mov
fsubrp
inc
mov
and
inc
std
leave
int
pop
mov
lcall
xlat
pop
stos
and
in
sbb
xor
and
popa
or
daa
imul
or
push
in
aaa
ss
or
mov
xchg
mov
lea
sbbb
or
mov
dec
or
lods
xor
mov
inc
xchg
sub
test
push
in
push
add
lods
mov
fsubrs
movsl
push
pop
mov
add
cltd
push
fiaddl
dec
int
int3
mov
popa
push
xchg
push
add
leave
mov
push
divl
adc
cli
lret
mov
imul
push
push
mov
xchg
dec
xchg
jp
mov
sub
les
pop
sub
cltd
icebp
add
popf
rolb
lds
sbb
dec
inc
pop
mov
lods
pop
xchg
imul
xchg
pop
incl
jp
mov
loop
pusha
outsl
push
sub
faddl
jo
inc
outsb
daa
outsb
testb
popf
out
addl
inc
js
arpl
mov
sti
rcrl
mov
sub
dec
in
adc
pop
jmp
push
in
dec
scas
mov
imul
jno
mov
lret
ror
xor
loope
xor
icebp
popf
aad
or
mov
stos
pop
xor
adc
push
mov
pop
sbb
out
mov
fcoms
repnz
push
ljmp
scas
mov
ljmp
das
das
pop
xchg
std
dec
add
jne
xor
mov
cmp
or
leave
push
pop
add
jae
push
aad
mov
inc
sub
popf
lods
cli
cmpsl
xchg
sub
adc
test
jne
xor
idivl
push
adc
ret
out
dec
iret
xor
or
add
pushf
sub
jmp
les
andb
lods
xchg
sti
fwait
es
sub
or
add
dec
xchg
or
cmpsl
outsb
push
gs
js
add
jg
dec
jb
mov
pop
icebp
xchg
mov
sbb
dec
jne
out
mov
imul
lods
shl
ret
mov
cmp
cmp
xchg
adc
mov
movsl
cltd
push
stos
pop
and
loopne
push
shl
cmpsb
std
jmp
in
insb
add
outsb
adc
imul
test
cmp
pop
inc
lret
test
out
fisttpll
and
xchg
nop
inc
push
push
in
sbb
negb
add
push
sbb
mov
and
cwtl
inc
jo
out
jg
fiaddl
and
xor
filds
xchg
pop
jp
outsl
lea
push
and
cmp
adc
xchg
and
adc
xor
insb
roll
outsl
jno
inc
cmpl
daa
and
jb
cmp
adc
mov
dec
and
jp
dec
mov
cmp
dec
insl
std
bound
leave
xor
xchg
mov
fsubrl
pop
xor
mov
ljmp
xorl
jecxz
bound
cmpsl
and
cmp
pusha
jae
xor
hlt
int3
outsl
mov
push
mov
cmp
movsb
pop
shlb
push
scas
xchg
mov
adc
icebp
fwait
and
out
adc
faddl
jecxz
aad
or
jp
inc
sti
dec
ret
add
lea
adc
iret
cmp
imul
lods
lea
cmc
or
call
push
addr16
add
push
aaa
filds
sti
js
xlat
jbe
mov
inc
int3
adc
out
cs
outsb
sub
or
dec
loope
aam
test
xchg
xchg
ljmp
mov
loop
mov
scas
inc
cmc
inc
repnz
inc
jp
int3
int
imul
idiv
mov
add
pop
sbb
gs
hlt
xchg
push
or
into
mov
xchg
jecxz
mov
sbb
mov
imul
jae
or
movsl
adc
mov
imul
pop
stos
pop
leave
sub
or
out
negb
push
clc
mov
jp
jno
inc
add
add
sbb
jns
aaa
repnz
daa
lds
lret
outsl
lods
repz
shll
lds
les
push
shlb
add
popf
into
sub
sub
roll
popf
fcomps
or
lret
dec
dec
pop
scas
fsubl
sahf
ds
outsb
je
dec
retw
or
push
mov
lcall
fs
and
aaa
in
loop
and
lret
inc
lret
repz
test
xchg
fistpl
stos
mov
insl
aas
jo
cltd
jg
jnp
jecxz
cmp
and
pmulhw
adc
lret
sti
inc
cmpsb
orl
pop
rcrl
ss
push
or
push
dec
sub
or
push
int
sbb
or
mov
stc
jb
cld
mov
test
dec
jmp
idivl
filds
cltd
push
jne
mov
mov
scas
inc
push
cmp
sbb
or
lahf
sti
data16
inc
sti
inc
pop
cmp
xchg
mov
mov
in
lds
adc
jns
push
insb
imul
and
adc
mov
lds
aas
sbb
push
dec
xor
fwait
iret
movsl
es
lods
jle
test
mov
loope
aaa
in
addr16
pop
lea
sarl
mov
mov
pop
jg
jns
outsl
movsl
jg
add
sub
imulb
sbb
rorb
call
mov
mov
outsb
lods
sub
adc
loopne
xchg
adc
test
das
mov
and
fidivl
in
jbe
cmp
out
or
les
jo
mov
mov
imul
pop
xchg
pop
fwait
adc
aad
jmp
jne
dec
jne
stos
mov
push
enter
scas
mov
fists
mov
lds
mov
and
dec
mov
sbb
inc
outsb
in
int
inc
inc
in
or
jge
mov
fwait
fdivrs
cmp
outsl
push
mov
stos
dec
pop
loope
inc
hlt
mov
mov
sbb
and
sub
xorl
movsl
pop
shll
loope
inc
scas
push
add
jg
mov
jg
pushf
fcmovu
cltd
dec
rorl
ljmp
pop
outsl
pop
adc
cmpsb
hlt
xorb
xchg
data16
xchg
xchg
divl
out
sbb
cli
call
add
dec
add
inc
push
and
adcb
cmpsl
fs
pop
cmc
cs
mov
imul
xor
or
test
xor
das
pop
jl
xor
mov
dec
subl
jbe
cmc
push
pushl
push
mov
adc
inc
insb
cwtl
push
and
mov
je
pop
lret
add
cmc
jecxz
and
mov
mov
dec
cmp
aad
fs
lea
jb
xchg
jl
mov
cld
jmp
repnz
add
or
sbb
out
mov
push
andl
rorb
mov
xchg
xor
push
and
or
jmp
js
in
arpl
aad
pop
outsl
aaa
mov
orl
jmp
cld
outsl
mov
fyl2xp1
das
mov
jg
popa
push
dec
pop
repnz
and
repnz
rclb
stc
cltd
movsl
lret
mov
pop
inc
push
pop
sbb
xor
fdivrl
push
xor
stos
fsubs
outsb
mov
inc
in
rolb
sub
push
or
scas
dec
fcoms
cltd
popa
fmuls
loope
xor
ret
adc
ljmp
out
mov
rcrb
and
add
jns
mov
inc
push
lret
adc
lods
push
inc
int3
iret
popa
and
incb
xchg
daa
push
adc
out
fisubl
mov
lahf
cmp
cmp
daa
sub
data16
scas
fcomip
pop
inc
pop
arpl
fildll
fnstenv
jge
cmp
mov
jecxz
mov
xlat
pusha
push
or
or
repz
and
pop
addr16
or
pop
push
popf
inc
and
cmp
sbb
mov
dec
add
mov
rcr
add
pop
clc
pop
dec
jge
and
sub
add
fldl
pusha
or
mov
test
hlt
add
jns
push
sub
into
test
or
dec
and
lcall
inc
sub
stos
mov
jl
fwait
cmp
repz
adc
cmp
xchg
xchg
lds
jg
lods
arpl
sarl
jmp
outsb
cmp
aam
adc
test
jb
nop
sbb
cld
loopne
lock
cmc
or
sub
push
cmp
cmp
ss
dec
mov
or
testb
enter
jns
enter
jp
je
loop
pushf
scas
add
jp
mov
dec
xchg
inc
insb
mov
movsl
out
xchg
in
xlat
das
pop
dec
stos
lcall
std
ja
sub
pushf
in
repz
adc
and
xchg
mov
pop
sub
leave
loopne
in
stc
es
push
sti
jl
test
cmovno
xchg
shll
cmp
test
inc
fneni(8087
loope
sub
ljmp
adc
test
filds
outsb
pop
lock
dec
mov
mov
shlb
or
imull
add
fildll
mov
lea
loop
push
arpl
or
and
mov
xchg
or
mov
cmp
rcrb
mov
mov
xchg
dec
xorl
adc
insl
sahf
insb
mov
pop
add
mov
lds
repz
stos
cmp
push
cli
mov
ss
aaa
aam
or
int
test
test
mov
inc
repz
inc
add
data16
cs
sti
dec
dec
and
popf
daa
add
sbbl
xor
add
mov
rorb
push
sbb
dec
lahf
aam
out
xchg
pop
insb
push
inc
mov
je,pn
mov
pop
shrb
jo,pn
inc
jle
or
jmp
add
xor
xlat
test
sbb
sbb
fnsave
rorl
stos
enter
test
push
mov
mov
lods
les
and
add
ljmp
in
sbb
xchg
orl
mov
mov
cltd
and
mov
adc
jge
mov
jne
les
movb
iret
data16
lret
ds
mov
add
test
jle
pushf
sub
adc
aad
push
and
or
cli
add
mov
mov
in
out
adc
out
cmp
push
jno
push
rcl
mov
out
sub
aam
dec
inc
cmp
nop
xor
lahf
inc
xchg
movsl
mov
xchg
add
jecxz
pop
popf
jns
bound
mov
jmp
popf
rolb
mov
lret
pop
out
lea
mov
insb
fisubrs
sahf
es
or
push
jns
sub
into
and
pop
pop
adc
bound
pop
inc
scas
jbe
jae
jge
loope
and
loope
xchg
cmpb
leave
sbb
cmc
fsqrt
icebp
xchg
aad
int
mov
push
mov
xchg
out
pop
xor
dec
xorb
jmp
push
inc
ja
repz
push
jbe
ds
aas
mov
adc
repnz
insl
pop
mov
repnz
in
pop
sub
mov
ljmp
pusha
and
pop
test
imul
xor
jno
jl
ret
or
and
mov
xlat
mov
sahf
insb
js
mov
aad
inc
fnstenv
cld
push
mov
sbb
std
repnz
push
insl
dec
mov
stc
hlt
out
jno
ljmp
pusha
lcall
aad
add
xor
jl
jnp
mov
and
or
xor
cmc
xchg
sbb
repz
and
movsb
test
fstpl
jae
clc
and
mov
or
jmp
js
into
push
cwtl
test
mov
dec
mov
popa
cld
shr
lods
sbbl
iret
mov
sub
push
cwtl
scas
inc
and
lea
pop
pop
ds
sbb
mov
pop
mov
out
js
mov
inc
xchg
lds
test
je
fdivr
enter
ss
sahf
or
shrb
add
decl
push
shlb
sub
std
jg
bound
lods
mov
xor
les
je
daa
aaa
mov
and
loop
out
xchg
xor
xchg
in
loope
xor
pop
pop
pop
imul
testl
push
je
sbb
ret
jo
cmp
pushf
xor
clc
sbb
adc
mov
repnz
mov
add
je
mov
dec
jecxz
xor
and
mov
mov
adc
inc
push
outsl
sarl
cltd
xchg
add
pop
pop
imul
imul
lods
fcoms
xor
int
stos
inc
adc
dec
add
cmp
adcl
cli
popf
dec
xor
dec
jecxz
xor
sub
xorl
mov
or
popf
adc
push
das
jns
icebp
push
inc
mov
leave
mov
push
std
mov
xchg
xchg
jae
lret
js
insb
lods
call
repz
mov
sub
call
adc
in
fistl
mov
and
and
dec
lret
sub
sbbb
pop
jo
xchg
cs
ret
movl
rorb
nop
or
adc
or
pop
lret
iret
push
shrl
adc
aam
call
adc
aas
inc
je
scas
jle
xchg
push
leave
repz
aaa
das
push
adc
stos
xchg
popa
cmp
clc
fidivrl
mov
xlat
or
je
cmp
sub
aaa
inc
filds
add
cmpsb
into
pushf
adc
cli
sti
jmp
popf
sub
inc
test
inc
orl
or
cltd
rcrb
sbb
leave
xchg
lock
sbb
xchg
push
rolb
popa
sbb
pushf
mov
lcall
ror
xor
xchg
imull
aaa
pop
pop
lds
sub
movsb
or
data16
repz
cmpsl
test
outsl
call
inc
rcrb
outsl
and
xor
sbbl
mov
fcmovb
mov
xor
xor
outsb
and
lods
sarl
cld
push
inc
daa
mov
push
aad
icebp
fstps
jne
and
jle
mov
adc
dec
pop
in
jge
sbb
daa
jmp
xor
cmp
hlt
mov
fisubrl
mov
fwait
jecxz
pop
xchg
shll
sti
push
adc
xchg
add
scas
adc
jge
popa
sbb
mov
popa
sbb
fnstenv
sbb
add
mov
lahf
add
bound
or
jge
adc
dec
and
and
fwait
shl
pusha
cs
xchg
mov
adc
xchg
pop
add
sub
push
inc
scas
cmc
out
or
pop
adc
test
or
or
std
mov
sub
inc
jne
jb
test
sub
jmp
mov
pop
movsl
hlt
js
mov
lods
lds
mov
insl
xchg
mov
and
jbe
push
push
sub
es
pop
mov
xchg
push
es
and
cs
jl
or
jne
loope,pn
pop
dec
js
sbb
pop
cmp
sbb
rol
out
xchg
dec
sbb
stos
dec
push
xorl
in
dec
out
cltd
ljmp
dec
and
mov
pop
sub
adc
sbb
mov
mov
adc
fwait
mov
mov
cwtl
pop
adc
xor
nop
stc
push
sub
inc
mov
out
sbb
cmp
jge
rcll
dec
aad
mov
dec
insl
fs
test
mov
pop
ljmp
cli
cli
sti
push
cmp
aas
inc
xor
dec
dec
jp
in
mov
aad
sub
inc
xlat
in
mov
fstps
jbe
outsb
xchg
inc
pop
imul
or
push
leave
or
pop
stos
and
push
jb
mov
jl
jle
mov
outsb
sub
pop
mov
lret
repz
and
sub
or
mov
bnd
movsb
jle
adc
movsl
pop
push
clc
sti
xor
xchg
loopne
mov
pushf
mov
jbe
mov
xor
inc
adc
pop
daa
into
pop
das
or
shll
in
int3
dec
leave
jb
pushf
jb
adc
arpl
lcall
pop
cmpsb
mov
test
test
nop
pop
jbe
iret
jae
or
insb
inc
add
pop
ss
aad
les
adc
idivb
mov
xchg
test
inc
push
mov
add
outsl
jnp
mov
fistl
lods
xor
ja
mov
test
xlat
mov
sbb
mov
aad
mov
scas
push
loop
sbb
jg
hlt
out
call
mov
movsb
mov
cld
out
mov
outsb
sub
inc
cs
add
cmp
jne
push
mov
loopew
jno
push
dec
and
dec
popf
push
daa
or
or
pushf
cmp
test
pop
jns
cmc
jbe
mov
mov
je
add
add
adc
inc
mov
push
push
xchg
xchg
xor
fcomp
dec
fnsave
pop
nop
push
in
js
idivl
lock
out
stos
sub
cwtl
push
mov
pusha
mov
inc
aaa
movsl
aas
movb
outsl
scas
jo
lods
cmpsb
add
fisubl
jp
xor
jge
or
test
into
stc
push
mov
cmp
or
or
pushl
test
subb
push
add
cmp
xlat
push
adc
aaa
mov
sbb
insb
int3
or
call
add
dec
dec
outsb
iret
out
sub
out
mov
enter
or
jmp
fwait
sbb
shrb
pop
aam
dec
inc
push
out
mov
into
xchg
mov
mov
aam
lods
pusha
jae
lret
push
and
negl
or
pop
pop
pop
adc
add
jns
andl
scas
xor
mov
in
pop
je
jg
xor
adc
andb
mov
and
sub
in
mov
push
push
inc
and
sbb
icebp
in
loopne
cmp
jecxz
jns
scas
imul
mov
fmul
inc
xor
sub
fstps
mov
testl
or
mov
mov
lahf
test
pop
push
decl
std
pop
pop
pop
add
cmp
pusha
enter
js
sub
mov
loopne
mov
cmpsb
faddl
aad
inc
movsl
imul
mov
clc
in
push
cmpsl
sbb
xchg
mov
or
faddl
push
sbb
ss
loopne
inc
ret
adc
pop
ljmp
jae
aaa
ja
ja
popf
adc
mov
cmp
mov
jb
lea
jle
adc
mov
inc
adcb
push
and
scas
test
fwait
and
cld
jmp
js
jecxz
dec
inc
pop
xor
push
lcall
mov
js
mov
notl
cltd
lods
sbb
sub
popa
lret
imulb
cs
imul
shll
lahf
movsb
or
in
mov
scas
add
mov
mov
inc
sub
and
wbinvd
js
fcmovb
mov
xchg
mov
add
stos
movsl
movsl
jae
imul
dec
rcrb
add
mov
lahf
jo
mov
mov
push
add
mov
push
dec
lds
pop
sbb
push
add
popf
and
mov
cmpsl
pop
pop
or
push
imul
jle
xchg
int3
hlt
je
push
fs
icebp
ljmp
xor
cmc
jmp
sub
cmp
mov
push
add
iret
popf
popa
push
es
adc
push
rolb
gs
sbb
jp
popa
dec
iret
lret
ja
subb
cli
repz
push
and
jmp
outsl
and
popa
roll
dec
push
jl
icebp
mov
bound
jns
mov
and
xor
xor
jno
pop
pop
pop
add
femms
int3
movsl
jmp
movsl
fnsave
rcrl
iret
and
xchg
repnz
scas
inc
inc
test
jnp
aas
testl
lea
shlb
repz
fists
rep
jno
out
bound
cltd
lea
mov
sub
jae
inc
bound
jp
and
outsl
pop
cmp
adc
ret
xchg
cli
aas
inc
mov
cmp
leave
call
sarb
dec
es
or
sahf
add
sub
fnsave
cmp
xchg
or
enter
ficomps
mov
pop
not
cwtl
mov
and
dec
jo
rorb
stos
mov
xchg
jg
jns
fcmovne
add
mov
mov
dec
ja
mov
daa
shl
nop
mov
dec
add
mov
xchg
sub
mov
rcrl
repnz
pop
sub
cmp
js
sbb
dec
cmp
repnz
movl
fs
pop
xlat
sub
gs
aas
ljmp
mov
sbb
call
lahf
cmp
cmp
sahf
insl
mov
adc
mov
out
test
call
fisubrl
inc
pop
mov
pusha
ficoml
xchg
aas
or
or
cmc
mov
dec
les
aaa
mov
pop
insl
leave
xchg
dec
fiadds
pop
aad
xchg
dec
jmp
adc
jb
sbb
ret
ret
sarl
imul
jp
pop
js
pop
inc
lods
and
adc
pop
mov
jmp
push
adc
mov
jnp
popf
out
jae
mov
dec
and
add
cmp
mov
gs
mov
aas
andl
repz
or
repz
push
js
sub
ja
mov
sbb
mov
lods
sbb
jmp
cmp
mov
mov
push
xorl
jmp
push
pop
cmp
enter
insl
movhps
jno
fstps
xchg
mov
add
mov
add
cmp
dec
mov
adcl
insl
test
sbb
pop
mov
scas
neg
and
mov
add
push
nop
out
out
ss
imul
pop
imul
imul
add
movsb
popa
aas
pop
stos
data16
movl
aad
test
xor
jno
mov
mov
repnz
sub
xchg
pop
pop
jmp
iret
mov
or
stos
popf
xchg
lods
sbb
dec
dec
mov
mov
xchg
inc
and
or
mov
dec
popa
movsb
in
lret
jmp
jnp
ret
je
dec
les
sti
mov
ret
jae
aas
imulb
xorl
inc
fnstcw
out
jno
lret
dec
inc
jae
popa
icebp
adc
and
or
clc
and
cmc
xchg
movsb
xchg
cmp
leave
call
mov
and
scas
out
sbb
jne
loop
dec
mov
loopne
jae
popa
cmpsb
enter
ret
daa
cli
cli
sub
pop
mov
dec
jmp
mov
cltd
sarb
push
sub
jmp
jns
data16
xchg
cmovs
std
sub
mov
and
mov
mov
je
mov
mov
xchg
loopne
mov
mov
cmpsb
cmp
push
pop
pop
cmp
fdivl
mov
inc
mov
jne
sub
sub
pop
mov
sub
xchg
dec
rolb
mov
icebp
fstpl
scas
push
mulb
mov
push
inc
and
test
inc
mov
sahf
jae
nop
mov
cltd
psubusb
or
add
aaa
pop
popa
jne
not
dec
int3
mov
add
cmp
data16
js
pusha
addb
movsb
push
mov
inc
hlt
pusha
add
add
fldenv
cmc
loop
cltd
push
imul
add
inc
sahf
pop
mov
push
pushf
inc
or
hlt
sbb
add
negb
call
sbb
lock
movsl
cld
sub
mov
bnd
bswap
sbb
push
jbe
sbb
pop
lea
xlat
pusha
in
mov
xor
inc
testb
flds
lods
ror
xor
add
dec
rolb
sarb
lds
mov
in
jl
pop
pop
pop
cmpsb
lods
xchg
das
fists
out
sub
scas
xor
mov
pop
mull
sbb
repz
mov
ds
mov
lea
inc
inc
popa
jl
inc
dec
fmul
into
add
pop
cmp
sbb
in
sahf
arpl
repz
sub
sub
xchg
xchg
inc
popf
loope
mov
shr
mov
add
dec
stos
hlt
sbb
cmp
ret
sti
or
ljmp
in
test
stos
out
out
pop
movsb
jns
lret
cmp
pop
lock
scas
mov
lcall
mov
sub
pop
xor
mov
cwtl
dec
fstpt
pusha
sub
mov
mov
fidivrl
add
in
fmulp
xor
data16
orb
lret
in
add
sbb
jb
je
mov
push
loop
int
cmpsb
movsl
shrb
ja
xor
testb
cmp
aas
and
out
data16
mov
aas
jb
scas
cltd
shrb
outsb
push
dec
push
pop
sbb
popf
sub
es
cmp
dec
sub
arpl
in
movsb
dec
fwait
mov
sub
rorb
add
inc
xchg
rorb
xchg
orl
or
aad
test
push
mov
clc
xor
pop
mov
loope
mov
repnz
fninit
dec
out
dec
xchg
addr16
push
dec
pop
aas
nop
xor
iret
adc
aam
pop
scas
pop
sub
out
mov
pop
add
imul
stos
pop
repz
jbe
fwait
scas
mov
xlat
mov
pop
stc
scas
cmp
or
in
fildll
lret
lahf
cmp
mov
add
aas
xchg
sbb
in
out
aas
xor
es
pop
or
gs
cmpsb
cs
rcl
lret
pushf
sti
lods
leave
pusha
and
dec
fcmovne
sub
and
fwait
or
xchg
daa
lret
cmpsb
xchg
pusha
sub
sub
dec
sbb
js
out
int3
fisubrs
mov
mov
xorl
sti
rcll
mov
frstor
fimuls
int3
sbb
std
sub
push
add
fstpl
inc
mov
out
add
repnz
jno
in
ss
inc
and
lret
xchg
jecxz
sbb
jl
enter
mov
xchg
sbb
gs
xor
dec
cmp
in
mov
add
mov
cmp
mov
and
add
mov
cmp
mov
jmp
out
mov
fisubrs
jbe
pushf
insb
int3
push
out
dec
lods
cmpsl
aam
enter
inc
xchg
das
sbb
push
in
mov
flds
lods
out
add
push
lea
mul
and
or
cmp
xchg
adc
lods
out
adc
repnz
gs
push
icebp
and
int
stos
das
sub
or
xchg
xor
jnp
cmpb
lret
arpl
aam
mov
loopne
lcall
clc
jp
les
fs
xor
jmp
pop
adc
in
outsb
or
fistpll
push
sbbl
xlat
pop
dec
pop
add
sbb
xlat
shrl
cmc
pop
sbb
xor
jns
imul
loopne
dec
cmpsl
xor
and
push
inc
es
lret
cs
stos
mov
cli
sub
out
jbe
cmp
or
loopne
ss
or
push
xor
jbe
adc
xchg
and
dec
out
dec
shll
inc
popa
jp
xchg
cwtl
stos
stos
sti
pop
xlat
cmpsb
mov
stos
and
gs
outsb
movsl
mov
mov
sbb
fisttpl
repnz
call
pop
add
rcrl
ja
mulb
jne
mov
sub
clc
insb
adc
mov
add
ljmp
jp
dec
rorb
add
repnz
lcall
jnp
jns
xchg
addl
mov
pop
push
ret
fsubr
movsl
pop
mov
push
mov
or
xchg
push
in
fwait
jnp
popl
and
ljmp
inc
cmp
mov
es
shlb
vmovups
xchg
jb
push
dec
jmp
sub
js
jmp
jecxz
add
imul
sbb
cmpsl
arpl
jmp
dec
cmpsl
push
add
or
mov
shll
add
jae
jecxz
jmp
lea
out
dec
pop
dec
jmp
inc
lea
in
inc
mov
add
daa
and
and
cli
mov
clc
or
xchg
and
pop
jo
fucomi
add
das
mov
ljmp
and
shl
xchg
addb
xor
je
lods
mov
pop
loopne
jl
sbb
sbb
jp
arpl
lods
lock
dec
aad
xchg
iret
lcall
les
sbb
scas
add
cmpb
xor
out
mov
inc
jp
into
mov
out
out
pop
int
push
test
cmpsb
xchg
mov
das
add
es
fstpt
lret
scas
and
cmpsl
pop
or
inc
cwtl
or
cwtl
mov
clc
mov
xor
je
cmpl
mov
inc
jns
pusha
in
cmp
fldenv
pop
stos
pop
or
pop
repnz
fsts
xchg
pop
test
inc
and
add
cmpsb
outsl
fs
ja
movsb
xor
rorb
cmc
in
and
push
mov
in
mov
mov
orl
imul
push
xchg
icebp
test
ret
int3
fabs
addr16
xor
dec
or
dec
addb
movsl
cmp
cmp
jne
adc
call
push
popa
inc
add
mov
daa
iret
popa
repnz
cmp
int3
jmp
xchg
in
int
push
in
sub
jne
push
sub
int
rcl
dec
xchg
pop
adc
fdivs
xchg
stos
adc
lock
xor
scas
jge
push
pop
int3
mov
daa
add
and
mov
fs
pop
push
jbe
std
ret
mov
add
and
xchg
xchg
gs
mov
popa
mov
sbb
insl
es
mov
add
mov
xor
lock
ja
cwtl
sub
testb
mov
lahf
lcall
enter
mov
movsl
clc
fcoml
into
aas
js
clc
xor
stos
push
rcrb
es
fwait
jns
and
test
add
fcmovb
xchg
dec
rcrl
dec
push
mov
inc
xchg
xchg
faddl
sbb
mov
lds
aam
popa
cld
mov
xchg
movb
mov
rcrb
push
sub
push
leave
int
enter
call
mov
adc
insb
cld
ja
jo
mov
dec
pusha
dec
push
pop
ja
mov
push
aam
jmp
push
pusha
pop
call
es
sar
mov
push
cli
aad
jne
mov
cmp
out
cmpl
xor
ret
stos
xchg
insl
pushf
inc
movsb
mov
mov
iret
shll
loopne
mov
push
inc
adc
mov
ja
insl
pop
pop
mov
adc
adc
popf
in
jg
xchg
mov
inc
insl
fistpll
sub
mov
bound
ret
mov
int
cmp
ss
pop
adc
mov
mov
mov
mov
xorb
pop
mov
xorb
stos
lods
loopne
lods
push
jmp
push
xlat
in
loopne
hlt
js
or
ret
pop
adc
mov
push
pop
stc
cmp
add
sbb
aad
dec
lret
jmp
and
hlt
mov
sahf
xor
mov
push
mov
xor
sub
loop
sub
fisubrl
mov
fcmovnbe
jne
dec
xchg
add
rorl
call
jmp
into
arpl
cmp
je
sbb
dec
push
adc
into
xor
fsubl
sbb
dec
inc
jmp
xor
push
xor
int3
adc
push
aad
pop
std
adc
push
inc
repz
jmp
mov
mov
nop
sub
out
leave
in
mov
lock
outsb
jno
pop
incb
xchg
cmp
xchg
and
mov
aas
sub
cmp
test
clc
pop
adc
xor
or
out
mov
or
mov
daa
adc
test
push
adcl
jno
pop
push
ds
std
ljmp
inc
jge
xchg
popa
popf
mov
lcall
sti
jo
ficompl
imul
add
aam
or
inc
arpl
lods
jnp
dec
push
mov
fistps
adc
aaa
cmpsb
push
cmp
cmp
push
negb
and
aam
dec
jb
outsl
inc
je
xchg
xchg
nop
fdivrp
clc
nop
fadds
cmp
icebp
push
lcall
lret
and
pop
aam
inc
dec
push
xchg
push
xchg
mov
lea
sbb
iret
test
and
stc
out
inc
std
sbb
inc
mov
es
dec
inc
jmp
std
ret
in
dec
pop
jmp
mov
mov
sbb
sub
jge
add
cwtl
loopne
test
pusha
sub
loopne
push
out
fisubs
xchg
fs
cmp
xchg
sbb
pop
lods
aam
inc
inc
repnz
fistps
xchg
scas
inc
push
xchg
fs
inc
or
scas
cmpsb
dec
lahf
dec
ror
jmp
mov
cmp
lods
xchg
shrb
or
ret
lock
push
fisubrl
mov
push
cwtl
and
or
fimull
js
das
scas
in
push
sbb
adc
repz
pushf
mov
cmpsb
mov
fisubs
push
aas
into
cld
popf
push
cmp
jnp
in
lods
pop
test
push
pop
ja
imul
movsl
sti
arpl
jbe
test
aaa
jae
lds
cmp
sbb
inc
mov
cwtl
std
mov
xchg
nop
fisubl
shlb
pop
hlt
push
shll
fs
cmpsl
aad
addr16
flds
xchg
inc
fsubs
xchg
mov
pop
jecxz
imul
or
in
mov
push
add
in
pop
sub
inc
dec
cmpsb
inc
filds
push
fdivp
test
inc
std
pop
sub
shlb
lret
cmp
jae
into
out
les
outsb
loopne
fs
fdivs
push
iret
dec
pusha
fdivrp
testl
sub
xchg
xlat
scas
ljmp
sbb
ja
cmp
mov
or
les
rcll
rclb
outsl
ficompl
es
pop
add
shlb
test
cmpsl
sbb
xchg
push
testb
out
repz
sbbb
icebp
rolb
cmp
cmp
out
inc
dec
mov
sahf
pop
xchg
pop
dec
jle
dec
jb
mov
popa
add
push
lock
sbb
mov
and
popf
mov
mov
mov
xchg
mov
mov
push
imul
xchg
dec
hlt
popa
adc
call
std
rolw
arpl
not
mov
decb
cld
jl
adcb
adc
cli
cmp
xlat
out
xchg
cwtl
nop
push
push
xchg
push
jnp
lds
jbe
aad
jge
adc
ret
push
xor
mov
loopne
fcomps
mov
xchg
cmp
loopne
push
sbb
cmp
mov
sbb
ljmp
push
jecxz
xchg
mov
lcall
and
xlat
push
jp
movsb
in
ret
push
push
leave
sti
shll
pop
ja,pn
cld
cli
and
adc
stc
xchg
flds
fisubrs
push
popl
movsb
popa
ss
movsb
mov
pop
insl
or
or
scas
sarl
jns
fs
xchg
ja
outsb
pop
ret
dec
test
inc
push
jnp
push
call
xchg
adc
mov
inc
and
sub
dec
jnp
ret
push
bound
lahf
aad
stos
test
hlt
shlb
or
xchg
cmp
je
mov
les
push
inc
daa
cld
xlat
iretw
push
aas
roll
outsb
dec
rep
mov
mov
jge
push
rclb
add
add
sahf
jo
push
fs
sub
in
sbb
add
aaa
enter
cmp
in
outsl
aad
xchg
pop
test
jae
push
mov
sub
xchg
movsl
fwait
mov
outsb
inc
pop
adc
hlt
inc
seta
in
jmp
xchg
jne
cmp
dec
sub
inc
inc
lods
imul
scas
adc
xchg
outsb
pop
gs
clc
fcomps
inc
cli
in
sbb
dec
popa
dec
aad
mov
dec
push
jp
sbb
aam
xchg
sbb
in
push
or
in
popa
sub
test
jle
pop
sbb
cli
pushf
dec
or
mov
outsb
xor
jae
adc
fildl
jbe
and
cltd
ret
jge
cmp
xchg
and
mov
rol
xlat
mov
xor
daa
addr16
and
and
mov
nop
jae
aam
cli
pop
es
stos
sbb
stos
push
std
pop
sbb
bound
cmp
dec
mov
cmp
cli
xchg
je
push
and
out
popa
sahf
js
sarl
dec
in
adc
pusha
jne
add
sub
push
fwait
and
inc
das
mov
loope
lret
push
fcmove
lds
jmp
mov
sbb
mov
mov
stc
xlat
mov
push
push
leave
mov
sbb
mov
mov
stos
xor
out
mov
pop
mov
xchg
jns
push
lcall
push
or
push
push
jne
add
sti
imul
test
or
fcmovnb
mov
add
inc
cmc
mov
cmp
fbstp
addr16
lret
mov
jl
faddl
incl
ljmp
icebp
test
or
jbe
lds
mov
jno
sub
jne
push
sbb
xchg
dec
push
adc
das
mov
stos
es
adc
cmp
jge
outsb
adc
hlt
and
imul
in
imul
lods
into
fidivrl
mov
arpl
inc
fcomps
xor
push
mov
xchg
sub
or
pop
or
mov
std
lret
fs
add
in
xor
lods
sub
or
inc
xchg
dec
jecxz
stc
cmc
scas
or
bound
xchg
in
leave
mov
sub
rclb
cld
clc
insl
shrb
xor
push
push
aas
xchg
bound
pop
testl
jmp
in
sbb
push
jl
adcl
lret
adc
call
out
call
sub
jmp
mov
mov
sub
lret
movsl
testb
mov
add
adc
xchg
aam
mov
cmp
mov
jb
jle
sti
mov
lret
jecxz
lock
lea
sbb
push
xchg
sarb
or
dec
lahf
std
and
mov
mov
or
icebp
in
clc
pop
sahf
jb
cmp
mov
and
or
xlat
jmp
shr
cmp
ret
std
mov
ja
lods
stos
cmp
out
or
pop
clc
aas
mov
test
ret
idiv
fbstp
sub
xchg
inc
mov
loopne
and
in
int
jmp
pop
out
fnsave
push
adc
sbb
std
adc
inc
das
lods
call
inc
dec
inc
fisubrl
mov
mov
jmp
xchg
mov
ret
mov
fsubrs
out
mov
addr16
mov
stos
ds
hlt
or
xorb
cs
rclb
push
fistps
repnz
mov
lcall
popa
pushf
sti
jle
sub
fsubrs
pop
std
ljmp
mov
adc
sub
mov
lahf
bound
xchg
rcll
push
loope
test
xor
pop
inc
cs
dec
xor
jmp
outsl
and
mov
or
and
call
movaps
push
cmp
lock
jno
outsl
push
test
ds
pop
ret
push
push
ret
push
fdivl
ret
rolb
inc
dec
or
aas
cmp
call
leave
and
cmpsl
ss
das
mov
mov
out
and
aas
xor
movsb
cmp
inc
xor
pop
and
push
nop
mov
leave
xchg
dec
cmpl
jge
rcrb
pop
ffreep
hlt
xor
pop
insl
subl
pop
xor
insb
pop
xchg
lds
push
loopne
jp
sbb
pusha
pop
jmp
adc
or
xchg
mov
mov
push
jp
mov
mov
pop
enter
sahf
sub
push
mov
mov
mov
popl
scas
pushf
cmc
inc
lods
lods
test
or
xchg
je
mov
mov
addr16
add
pop
icebp
nop
aad
cmp
xor
nop
icebp
daa
sbb
in
lret
sub
and
dec
cmp
xor
sub
lods
xchg
lret
mov
call
push
lahf
pop
arpl
adc
mov
lea
add
cmc
mov
adc
jne
divl
iret
xchg
jb
cmc
cmp
dec
arpl
xlat
icebp
push
popa
push
sbb
push
addr16
testb
cmp
mov
in
hlt
sub
test
scas
mov
mov
sbb
scas
mov
xchg
aas
popa
out
mov
aam
sbbl
test
loopne
cwtl
mov
mov
sti
mov
mov
je
sub
scas
pop
or
cli
inc
push
jne
xor
cmc
adc
mov
sbb
rorb
insb
xor
loope
mov
loop
outsb
mov
prefetch
or
and
hlt
repz
mov
test
cmp
in
and
mov
mov
jge
mov
ret
out
jno
jne
adc
jmp
mov
mov
mov
xchg
pusha
ljmp
cmp
les
rcl
jp
xor
dec
lods
jecxz
adc
pop
movsl
pop
imulb
inc
popa
outsb
pop
cwtl
hlt
divl
shlb
or
inc
sub
or
push
dec
xor
incl
xchg
stc
outsl
flds
jge
ret
lret
stc
mov
inc
jp
or
mov
test
enter
cwtl
add
stos
add
cmp
scas
xrelease
inc
je
call
mov
inc
sub
loope
loopne
jb
sbb
es
inc
and
rcrl
dec
pop
fcoms
sbb
ja
lea
xchg
dec
loop
pmulhw
call
cwtl
outsl
test
mov
mov
sarb
inc
or
pop
jge
fbld
dec
movsl
mov
add
fmuls
sub
test
cmp
inc
sahf
les
pop
jnp
inc
jecxz
or
pop
inc
adc
sti
out
sbb
cmp
pmaxub
or
loopne
and
repz
cs
jg
inc
imul
lret
xchg
pop
jg
call
xlat
push
mov
insl
outsb
pusha
cmpsb
push
inc
cwtl
xor
arpl
insb
aas
clc
addr16
sarl
std
jnp
daa
fnstsw
or
sub
pop
scas
or
xor
xchg
push
fldenv
inc
jns
outsb
iret
in
stc
mov
scas
cwtl
xor
sub
xor
loop
aaa
int
mov
sub
lea
or
mov
je
cmp
ds
ret
out
mov
je
out
xchg
mov
sub
out
fidivrs
test
and
cld
icebp
push
adc
mov
sbbl
sar
les
dec
pop
scas
std
int3
int3
outsl
ljmp
jecxz
test
push
inc
mov
repnz
push
sub
sbb
cli
xor
adc
mov
es
mov
cmc
jl
clc
fnstenv
cwtl
aaa
xchg
push
cld
mov
cmc
cmp
mov
mov
jns
sahf
and
stc
rcll
mov
jle
sbb
sbb
mov
or
popa
in
xchg
pop
in
cmc
sahf
jge
adc
inc
jbe
leave
dec
mov
jmp
push
dec
cltd
cmc
cli
aaa
sub
int3
jmp
push
test
mov
icebp
dec
jb
test
sbb
dec
mov
mov
jge
pop
or
xchg
iret
movsl
jle
inc
mov
mov
mov
xorl
into
sbb
addr16
lods
jns
popa
sbb
or
inc
add
daa
jne
mov
pop
mov
push
or
add
fstpt
inc
repz
lret
in
cmp
dec
aas
ret
cltd
push
loopne
arpl
push
xchg
cmp
jae
sub
adc
stos
dec
loope
stos
inc
and
jecxz
mov
sub
push
xchg
mov
outsb
adc
incb
fildll
loope
mov
adc
dec
push
inc
decb
mov
xchg
test
outsl
scas
jo
xchg
cltd
sbb
xor
fs
or
cs
xchg
jnp
std
xor
shll
cmp
mov
outsb
xchg
jne
insb
cmp
add
xor
lcall
dec
rsm
push
out
add
jns
adc
cmc
stos
sbb
sub
dec
fsubrl
cmpsl
adc
out
mov
or
inc
xor
adc
daa
or
mov
js
dec
ds
pop
and
lret
mov
inc
cmp
pusha
int3
xchg
xor
inc
and
and
mov
shlb
mov
out
mov
xchg
sti
inc
fisubs
stos
imul
cltd
test
mov
fldenv
xor
out
add
cmp
nop
cmpsb
push
aaa
cmc
je
mov
dec
or
fs
movsb
sbb
mov
test
pop
rorb
mov
xlat
mov
imul
fnsave
xorl
cmp
repz
jbe
lret
or
cmp
add
mov
mov
aaa
xor
std
in
mov
clc
cmp
fcmovnb
inc
imul
jns
jae
test
hlt
sti
pop
lds
pop
ret
fs
add
jns
sbb
jg
inc
leave
lods
add
jne
jg
lahf
sbb
sbb
shlb
push
scas
insb
aas
mov
mov
cmp
mov
push
mov
xchg
insb
cmp
ja
adc
mov
into
xchg
hlt
enter
lcall
out
imul
add
repnz
mov
sbb
pop
xchg
mov
cs
fists
xor
lcall
add
adc
in
sbb
xchg
mov
stc
mov
mov
xchg
dec
xchg
jb
inc
cmp
mov
lock
scas
sbb
ljmp
xlat
ss
lret
mov
insl
add
mov
xchg
xlat
push
cmc
sub
or
push
lcall
xchg
mov
mov
mov
push
pop
repz
fidivrl
sub
and
push
mov
clc
es
push
js
mov
jge
movsl
test
cmp
ss
xchg
aad
adc
pop
push
outsb
lahf
jnp
and
cmp
mov
jecxz
add
ret
std
outsb
push
das
test
xchg
stos
ljmp
nop
mov
ds
mov
out
jle
cmc
or
or
mov
xor
hlt
js
fcmovb
cmpsl
mov
mov
push
cmp
add
sti
mov
aad
adc
je
insb
in
aad
sbb
icebp
or
mov
pop
ret
push
inc
inc
cmp
cvtps2pd
sahf
xchg
loopne
mov
pop
jge
mov
mov
mov
fcomps
lcall
frstor
or
sbb
adc
dec
in
sub
xlat
jecxz
outsl
push
mov
pop
xchg
xchg
in
imul
mov
dec
xchg
pop
outsb
fwait
int
and
cli
rorl
lds
ja
jg
in
fbld
pop
adc
xchg
xchg
sbb
notb
sbb
mov
test
pop
ret
enter
sarl
and
jb
and
mov
stos
adc
add
adc
insl
into
xchg
lret
push
popa
jp
cwtl
ret
shrb
push
and
add
jb
or
dec
inc
mov
mov
xchg
mov
sbb
lcall
add
cmpsb
outsb
and
push
fnstsw
dec
out
cld
or
add
push
insl
jmp
mov
inc
imul
sahf
testl
dec
stc
xchg
and
jns
dec
popa
cmp
sbb
mov
fsubrp
pop
add
test
dec
mov
push
iret
xchg
adc
and
mov
xor
jmp
mov
pop
es
scas
mov
fsub
inc
mov
dec
negl
push
aas
ret
clc
loope
sub
xchg
or
imul
cltd
xchg
mov
mov
in
and
dec
xchg
mov
xor
lahf
cwtl
lods
dec
addb
test
pop
subb
pop
mov
aaa
pop
data16
sbbl
out
rorb
sbb
lods
push
hlt
xchg
pop
mov
cmp
xchg
pminsw
cwtl
ja
dec
sub
test
and
fadds
and
mov
jns
inc
jae
mov
jo
jo
test
and
fstl
xchg
push
or
mov
mov
adc
mov
outsb
stc
inc
fnstcw
adc
push
dec
aas
or
mov
cs
mov
jp
mov
lods
adc
lock
int
jmp
push
push
addr16
mov
mov
mov
insl
adc
leave
and
push
jge
mov
dec
stos
in
and
movsl
loopne
cld
push
leave
int
ret
sbb
gs
call
daa
xor
enter
ja
cld
jle
stos
notb
orl
add
and
lds
imul
mov
aad
leave
subb
push
or
push
movsl
inc
es
xchg
pop
and
pop
aam
pushf
jb
pop
std
or
dec
out
pop
xchg
int
clc
mov
xor
push
jecxz
rolb
loope
addr16
ljmp
imul
loopne
or
loopne
jnp
sti
sub
stos
sahf
faddl
stos
sub
adc
pop
add
cmp
jb
cmp
btc
int
push
xor
cwtl
outsb
inc
sub
mov
fdiv
jge
subl
push
mov
rcrl
pop
test
mulb
adc
shll
js
add
ret
mov
lea
rolb
mov
aam
outsl
cmp
pop
mov
inc
cmp
cmpsb
cmpsl
popf
jb
mov
mov
mov
sbb
fs
es
ret
push
sub
shlb
cmp
cwtl
leave
and
cli
mov
xor
mov
movsl
cwtl
sbb
icebp
dec
jg
add
push
shr
mov
das
or
xchg
idivl
fiadds
cmp
pop
bound
sub
mov
test
hlt
dec
xchg
cmc
add
out
repnz
pop
jg
sar
cmc
es
xchg
fbstp
das
orl
push
mov
pop
jmp
mov
mov
sbb
je
int
aas
add
add
mov
jns
clc
out
cli
repnz
jmp
outsb
dec
ss
bound
pop
scas
sbb
outsb
outsb
lock
xchg
loope
dec
subb
push
lea
sbb
cmp
jle
jge
ret
add
in
push
test
cmp
pop
cmp
mov
xorl
outsb
mov
xor
xchg
and
ds
lods
popa
call
sbb
cltd
aaa
push
add
mov
lds
xchg
dec
mov
imul
ljmp
mov
mov
imul
xor
push
and
mov
jnp
fmulp
xchg
xchg
xor
clc
out
or
mov
jae
mov
jb
int3
pop
js
daa
jp
dec
jg
and
cmp
cli
insl
xchg
cwtl
dec
mov
mov
cmp
pmaxsw
sub
dec
sub
push
cmp
add
fnsave
jge
ss
aad
sub
lret
test
into
sbb
insb
sub
push
xchg
add
scas
ds
ret
int3
push
enter
hlt
jge
pop
ja
or
lahf
mov
std
std
sbbl
lds
leave
pop
std
gs
xor
shl
inc
pop
and
inc
and
jbe
jne
movsl
mov
in
jno
xchg
adc
inc
aaa
imul
push
fwait
pop
lods
popa
lret
lahf
sahf
sar
ja
add
xor
ret
push
xchg
jnp
test
fldt
xchg
dec
adc
cmp
imul
jns
imull
daa
mov
subl
dec
push
negl
cltd
orl
andl
xchg
add
sub
aam
stc
in
pop
xor
push
arpl
cmp
push
and
adc
int3
nop
and
ret
lock
push
aam
and
push
jmp
imul
and
sub
add
mov
ret
mov
in
into
or
decb
adc
pop
xchg
xchg
mov
cmp
inc
lock
xchg
add
pop
xor
xor
shl
movsb
adc
scas
loop
fldt
arpl
ja
add
aam
out
dec
mov
and
jb
inc
ja
mov
adc
gs
cli
stos
and
push
ret
lds
lret
inc
jnp
xchg
fucomi
sub
fidivrl
push
push
lods
push
out
into
mov
test
dec
pop
pop
add
fisttpl
jb
cmp
push
out
aas
mov
mov
push
push
out
xlat
repz
cmp
push
movsb
xor
imul
lods
nop
xchg
std
xchg
ficompl
inc
push
cs
test
ficoms
or
dec
push
mov
dec
movsl
push
lret
test
subb
out
fildl
nop
xchg
data16
xchg
sbb
imul
pop
mov
push
ss
mov
insl
in
pop
sbb
daa
jnp
xchg
mov
jge
mov
jecxz
jne
pusha
cmp
mov
enter
sbb
shrl
stc
or
xor
das
out
cmp
mov
cmpsb
mov
adc
push
call
mov
loope
add
scas
lods
push
sub
dec
dec
aad
out
add
cmc
mov
hlt
scas
dec
rorb
mov
movsl
mov
fadds
mov
aas
pop
adc
cli
adc
mov
or
sti
sbb
jne
outsl
int
out
popf
xlat
xor
int
fcomp
mov
cltd
lock
cmp
sbb
cmpsl
cld
imul
loopne
leave
stc
ja
mov
daa
xlat
or
movsl
dec
push
arpl
popa
loopne
xor
aad
push
mov
dec
mov
iret
setbe
mov
or
icebp
jno
lea
mov
or
stos
cmc
mov
mov
dec
rorb
in
loopne
shrb
sbb
lock
cmpsl
push
out
add
lds
sub
sub
sub
addl
negb
ret
shll
iret
pop
mov
jle
cld
sbb
dec
add
test
mov
mov
nop
inc
scas
roll
sub
sbb
bound
das
sbb
add
scas
enter
and
and
mov
push
sbb
test
push
dec
pop
cmpsb
mov
popa
lcall
cmp
out
push
sbbl
fsubl
mov
pusha
ret
jg
inc
xsaveopt
cmp
push
ds
repz
int3
cmp
hlt
xchg
sbb
stc
mov
jae
push
mov
nop
popa
sub
outsb
fisubs
mov
push
push
sub
dec
test
cmp
int3
or
sarl
jb
sbb
push
adc
popa
push
pop
jge
or
in
mov
stc
cmp
add
fdiv
rol
sub
jg
sahf
jg
ret
mov
movsl
mov
mov
js
inc
das
lea
mov
sub
xlat
xor
lcall
pop
jbe
test
pop
fdiv
subb
stos
add
pushf
jne
dec
add
test
leave
inc
sbb
icebp
xchg
jge
lock
jno
push
ja
jp
or
loopne
ds
in
pop
add
out
enter
mov
and
aam
xor
rcl
push
sahf
jae
fists
inc
in
into
iret
mov
xchg
out
in
imul
add
lret
test
jne
mov
xor
pushf
aam
pushf
lds
js
sub
push
sbb
nop
lods
pop
mov
and
inc
adc
mov
out
or
repnz
push
icebp
adc
fwait
adc
inc
test
dec
aaa
push
iret
bound
sbb
incb
mov
fistps
mov
das
pushf
outsl
cmpsb
addr16
cmp
sbb
arpl
sub
arpl
sahf
loop
mov
idivb
mov
insl
pop
ret
add
es
int3
cmp
outsb
inc
out
jmp
jg
stos
cmp
xor
jns
xor
test
push
ret
in
scas
cmp
test
push
sub
jae
loopne
jae
aad
bnd
scas
in
jno
fmull
push
cmp
sbb
test
sbb
and
out
lds
cltd
in
mov
mov
int
push
jae
fistpll
add
lret
stos
jle
add
ds
mov
shll
mov
andl
mov
addr16
adc
jne
push
fwait
adc
dec
test
in
insl
dec
test
outsl
in
cmp
jl
shll
hlt
test
mov
lret
jb
aad
in
iret
out
sti
sub
cld
sti
mov
outsb
enter
fidivrs
pop
push
movsb
and
aad
pop
sub
lds
in
push
stos
jg
addr16
mov
xor
mov
insl
mov
sub
mov
inc
mov
clc
mov
and
mov
frstor
push
sub
xor
add
xchg
mov
jne
sbb
pop
add
in
xchg
jnp
dec
mov
and
imul
or
loop
sub
sti
pop
xchg
outsb
ja
jecxz
cwtl
xor
or
mov
movzbl
mov
dec
stos
std
push
jo
out
jae
inc
push
repnz
mov
leave
loope
dec
shl
jg
mov
cmpsl
andl
repnz
inc
push
popa
jle
sbb
push
movsb
addr16
repz
push
in
mov
inc
mov
jb
shl
and
in
mov
push
repz
cmp
sbb
stc
push
lret
and
ja
arpl
hlt
stos
mov
or
testl
pusha
mov
add
nop
pop
or
ljmp
push
scas
mov
adcl
fwait
test
es
or
cmpl
xchg
and
push
sbb
rcrl
xchg
cmp
sahf
add
mov
inc
cs
jecxz
cmpsl
push
add
lret
lret
or
cld
enter
mov
pop
jno
mov
push
and
out
jmp
insb
add
ss
es
jl
and
mov
pop
inc
and
leave
and
mov
push
xchg
popf
sbb
push
out
pusha
movsl
xor
jbe
mov
jl
xor
dec
and
push
cwtl
lds
in
sarl
or
jg
dec
push
pop
loopne
adc
mov
sbb
test
iret
loope
mov
push
imul
cmp
push
inc
loopne
mov
mov
fistpl
out
mov
add
insl
push
pop
mov
adc
cld
jne
shl
xchg
mov
dec
stos
nop
daa
add
cmp
lds
lea
adcb
adc
aaa
push
pop
xchg
inc
and
xlat
ficoml
mov
inc
jnp
push
inc
popf
addr16
adc
mov
sti
xchg
test
mov
shr
add
fstpt
lahf
loope
push
lahf
jp
mov
out
adcb
add
lret
scas
xchg
mov
or
test
mov
push
gs
std
loop
add
jne
mov
dec
push
cmpsl
or
out
in
xchg
xchg
and
inc
xchg
sub
nop
add
cmpsb
sub
mov
sub
lods
scas
pop
mov
lds
and
orl
movsl
jae
stos
icebp
loopne
add
mov
enter
push
push
repnz
push
ss
jne
jb
push
jg
sub
mov
pop
cltd
call
mov
ss
mov
xchg
cmp
dec
mov
aaa
push
hlt
adc
out
lret
sbb
sub
inc
nop
pop
cmpsb
loop
jge
subb
xor
sub
pop
push
mov
stos
xchg
cmp
test
sahf
jae
jl
cmp
aam
xlat
mov
add
pop
nop
fldt
das
xchg
and
inc
mull
fnstsw
or
rcrl
lret
sbb
pushf
sbb
notl
lret
outsl
das
lock
add
xchg
cmp
sbbb
clc
xchg
lds
test
mov
xchg
sbb
sbb
xchg
cmp
dec
adc
mov
jo
fists
sahf
mov
or
jle
cld
js
shl
aad
adc
fwait
mov
jmp
lret
push
xor
jbe
sub
mov
mov
repz
pop
pop
mov
mov
jo
mov
add
ljmp
pop
xor
ljmp
mov
fcmovb
shlb
dec
jb
das
call
pop
fcmovnu
push
cmp
mov
lods
cld
cmp
adc
lahf
jns
sbb
movsb
movsl
push
psubsw
pop
dec
data16
cmpsb
mul
leave
lcall
movsb
fs
push
data16
cmpb
enter
sbb
add
nop
add
mov
lea
inc
cmp
fdivp
cmp
lret
or
push
inc
xor
push
cmp
mov
add
sbb
jmp
js
inc
push
and
lock
stos
lret
jmp
cmc
lret
pop
mov
fisttpll
in
inc
inc
mov
sarb
scas
pop
inc
mov
push
push
frstor
xchg
mov
daa
clc
xchg
mov
arpl
push
sbbb
or
pop
push
mov
mov
addr16
mov
loopne
insb
test
imul
scas
test
imul
pop
imul
leave
je
out
es
sub
daa
inc
int3
hlt
fldt
nop
pop
xor
orb
les
inc
mov
dec
add
in
scas
andb
jp
sbb
mov
dec
cld
pop
enter
jne
xchg
fidivl
in
fwait
ss
mov
push
loope
icebp
sbb
jl
pop
pop
push
mov
or
xchg
dec
mov
mov
lods
mov
stos
mov
xchg
clc
inc
adc
ret
ret
mov
ret
or
sub
push
std
cmpsb
xchg
fwait
mov
call
fs
pop
sub
xchg
in
gs
shll
lea
movsb
scas
mov
scas
mov
lcall
xchg
lcall
cmp
inc
xchg
xchg
mov
lahf
inc
push
ret
loope
mov
fisubrs
loop
jmp
pop
push
loop
cs
and
pop
push
adc
outsl
pop
push
push
mov
pop
mov
mov
mov
pop
add
cmp
jle
jb
in
test
es
aas
lcall
aad
mov
mov
scas
adc
cwtl
jne
dec
movsl
pushf
jmp
mov
mov
sbb
xor
lods
inc
inc
or
xchg
lret
pop
sub
mov
or
adc
and
mov
cli
das
or
mov
leave
mov
push
jne
and
dec
xor
icebp
mov
dec
rcrb
xchg
lods
push
test
push
sbb
sbb
jl
mov
mov
sub
jno
fimuls
ja
or
mov
std
ret
push
in
fcomps
imul
sbb
enter
in
gs
inc
push
mov
push
mov
icebp
mov
jmp
add
iret
sbb
and
and
lock
in
fs
mov
mov
jecxz
dec
add
and
sbb
dec
adc
mov
xor
pusha
xchg
fucomip
push
icebp
mov
add
xor
int3
cltd
loopne
mov
cmp
arpl
or
dec
adc
and
loope
adc
pop
pop
jae
into
idiv
cmp
and
js
mov
inc
fiaddl
lahf
add
cmpsl
sbb
or
sti
inc
jge
mov
loopne
xor
xchg
addr16
add
sub
mov
pop
or
imul
fidivrl
popf
add
cmpsb
sub
pop
xor
mov
mov
inc
push
out
ss
push
rcrb
shlb
pop
jg
jns
inc
vmovq
lods
lods
ds
pop
rclb
cmpl
mov
xchg
jns
push
mov
pop
jge
add
daa
mov
fwait
iret
dec
mov
cs
orb
or
jne
xor
add
cmp
jp
ret
or
xor
xchg
push
mov
je
jb
inc
sbb
xor
mov
loopne
cmp
sahf
movsl
cwtl
inc
dec
mov
pop
inc
clc
out
stos
imull
push
out
mov
call
dec
stc
push
shr
cs
movb
and
hlt
inc
push
jge
mov
loopne
inc
das
jo
jecxz
mov
inc
xchg
nop
cmp
decl
enter
pop
push
in
ret
xchg
inc
sbb
and
adc
fisubrs
sub
adc
and
lock
and
in
adc
fisttps
mov
jg
enter
add
aaa
push
or
dec
dec
jmp
push
in
push
loop
stc
cmpsb
scas
mov
nop
mov
cmp
sahf
imul
idiv
mov
sub
aas
push
xchg
jle
adc
dec
daa
mov
aad
ret
clc
fidivrl
adc
jmp
cmp
jns
mov
fs
push
sub
jmp
lret
arpl
jne
xchg
test
push
rcll
mov
imul
cmp
mov
ss
inc
shll
out
mov
xlat
dec
xor
lods
movsl
pop
push
cmp
or
or
in
aas
mov
mov
dec
divl
jle
nop
loop,pn
adc
mov
xor
sarb
in
sbb
test
push
repz
dec
ljmp
ret
jl
and
fcomps
loop
jle
push
mov
dec
popf
jmp
mov
xor
out
notl
imul
push
incb
push
pop
jae
clc
lock
push
jl
testb
mov
in
call
jge
sub
outsb
int3
jns
sahf
outsb
mov
gs
pop
loope
dec
sahf
fdivrp
stos
sbb
aad
push
sbb
and
adc
cs
jno
xor
shlb
or
mov
push
sub
mov
aaa
lcall
push
xchg
loopne
sti
fisttps
cmpsl
adc
pop
mov
sub
cwtl
cmp
sub
and
fwait
scas
outsb
test
mov
adc
dec
ror
stos
xchg
icebp
and
ret
mov
mov
enter
cmc
adc
adcb
sub
sti
xchg
lret
inc
xchg
imul
or
shlb
and
int3
icebp
addb
test
ljmp
movsb
insl
or
fwait
es
jbe
sbb
imul
adc
xor
arpl
xchg
push
xchg
cmp
mov
addr16
and
mov
int
scas
sbb
pop
loope
pop
stos
mov
sub
cs
es
add
inc
inc
or
or
and
cmp
cmpsb
loop
aas
stc
mov
fstps
jo
stos
mov
test
out
into
je
jne
clc
push
inc
daa
shlb
pop
loop
mov
inc
pop
inc
arpl
mov
push
movsl
sbb
icebp
test
push
cwtl
stos
inc
cli
inc
cmp
insl
mov
cwtl
dec
fbld
loop
ret
pop
xchg
inc
and
je
push
push
inc
nop
lods
jnp
scas
add
inc
pop
push
rcl
jae
jge
movsb
sub
jb
andb
mov
test
insb
sub
jo
ret
test
cmpb
mov
push
xor
lcall
in
outsb
sbb
mov
mov
push
or
mov
lods
mov
pop
or
adc
sbb
xor
icebp
jg
and
mov
jb
cmp
ret
mov
jg
rorl
roll
ds
dec
bnd
movsb
cmpsb
xchg
pop
scas
push
daa
push
cmp
and
sub
pop
cmp
add
lret
dec
sbb
je
sub
jmp
int3
push
cmp
push
mov
sbb
scas
mov
xchg
dec
jl
sub
sub
cmp
fwait
mov
adc
inc
or
ret
jge
pop
lcall
cmp
inc
aam
inc
cltd
cltd
test
push
insb
jnp
xor
imul
push
lret
into
test
xchg
push
sbb
mov
mov
cli
mov
fstpt
dec
shll
xchg
sbb
push
frstor
jle
or
adcb
mov
add
xchg
adc
mov
dec
in
loop
into
frstor
in
and
push
imul
stos
aam
or
pop
inc
arpl
stc
pop
mov
stos
push
test
jnp
jecxz
dec
lock
lods
inc
inc
sbb
pop
out
in
inc
outsl
cltd
inc
add
sub
xor
or
arpl
adcb
cmp
adc
stos
mov
or
fldenv
outsl
jo
call
setbe
test
insb
cld
notb
or
jbe
and
fs
sbb
sbb
or
dec
push
add
test
inc
rolb
test
ds
int
aam
hlt
mov
xchg
push
jg
shll
dec
or
ficoms
jbe
and
pushf
pop
push
shlb
stos
cmp
arpl
and
adc
mov
dec
imul
daa
adc
jmp
daa
jno
sbb
and
imul
cs
imul
jo
mov
push
adc
imul
cmp
or
sub
xchg
lock
ja
mov
jecxz
scas
aad
insl
and
dec
jg
jbe
cmp
inc
pushf
inc
dec
jne
xlat
out
cmpsl
cltd
xor
push
mov
dec
lea
std
mov
add
adc
daa
clc
in
js
dec
dec
or
cmp
shll
in
call
cmp
fnstcw
into
pop
int
je
xchg
pop
aad
mov
sbb
mov
pushf
in
cmp
xorl
xchg
xchg
push
mov
sbb
mov
out
sbb
call
or
cmp
sub
push
dec
rorl
test
imul
dec
repnz
xor
inc
pop
stc
jbe
xor
pushf
pop
and
es
outsl
movsb
bound
mov
xchg
outsl
or
or
popf
xor
ret
jmp
addr16
jg
addr16
xor
js
add
sahf
test
lea
sub
mov
mov
in
sub
push
push
sub
in
dec
sbb
sbb
mov
cvtps2pd
push
aas
pop
mov
outsb
push
es
mov
and
mov
xchg
vmovaps
ljmp
std
out
push
faddl
stos
xor
jg
loopne
scas
mov
repz
mov
xor
push
mov
adcb
mov
cmp
ret
add
push
idivb
add
ret
xchg
icebp
mov
loop
push
out
je
int
fs
pop
and
in
loopne
add
xlat
cmp
fdivrl
cmp
xor
stc
aam
xor
push
pop
nop
push
stos
dec
pop
leave
test
cld
pop
jno
cmpsl
inc
xchg
mov
scas
lret
arpl
pop
dec
test
fsubr
adc
ret
arpl
out
in
dec
repnz
out
inc
leave
dec
xlat
pushl
lods
adc
sbb
pop
stc
xchg
ja
inc
rcll
imul
adc
xor
in
loopne
jbe
xchg
xchg
in
xor
jp
lds
mov
mov
outsl
pop
sub
xchg
sub
popf
mov
imul
xor
push
pop
adc
jg
mov
jb
mov
sbb
cmpb
test
pusha
mov
xchg
cs
out
mov
pop
lock
pop
lods
pop
jb
xor
xchg
icebp
cmpsb
cs
cs
test
xchg
popl
inc
negb
mov
inc
cs
jmp
dec
and
push
popw
sub
xor
jno
in
add
cmp
daa
rorb
mov
jle
inc
xchg
insl
xchg
shll
add
push
cmpl
loopne
shll
popa
sbb
xchg
sbb
js
or
xor
mov
jns
in
mov
mov
xor
lods
add
or
das
lcall
clc
aad
xchg
xlat
and
fcompl
test
int
pop
xor
movsb
xor
mov
or
dec
push
adc
decb
mov
jp
mov
lds
lock
in
inc
xor
cmpsb
movsb
stc
pop
test
push
mov
leave
inc
adc
adc
out
push
mov
daa
jmp
and
mov
scas
sti
adc
xchg
loopne
mov
push
mov
addr16
add
jp
hlt
cmpsl
and
xor
in
mov
sti
jbe
in
xlat
xchg
ret
cmp
fistl
int
pop
pop
out
mov
out
rolb
lret
pop
mov
ss
and
xchg
icebp
mov
inc
jo
enter
fistpll
outsb
sbb
test
xchg
jg
icebp
cmpsb
sub
test
fimull
mov
loopne
sti
pop
int
je
imul
insb
cmp
lock
sbb
pop
cli
movsb
sub
outsl
das
cmc
out
es
mov
fbstp
shll
mov
dec
pop
daa
shll
sbb
js
cmp
inc
jg
jp
aas
jne
adc
fwait
arpl
rcll
nop
ljmp
xor
addr16
cmp
mov
cmp
ret
ret
pop
mov
lods
shr
lcall
lock
in
cmp
mov
fimuls
outsb
jmp
fildl
mov
add
addr16
mov
cmpl
mov
jecxz
xchg
xchg
sbb
push
sub
cltd
mov
add
popa
dec
in
mov
mov
repz
xchg
test
cmpsl
icebp
pushf
pop
cli
sti
icebp
pusha
adc
lods
push
ljmp
adc
mov
sub
or
into
xor
lds
pop
lret
dec
adc
test
and
sti
fcmovu
jae
pop
xor
std
out
mov
fwait
mov
sbb
test
andl
xlat
lea
fists
dec
mov
loope
pop
jo
lahf
cs
ja
push
rcl
shrd
jmp
mov
cmp
inc
fwait
xchg
fwait
inc
add
push
jmp
icebp
inc
dec
orl
jne
dec
pop
sub
jno
fisubrl
and
data16
mov
cmp
mov
inc
xchg
dec
stos
dec
mov
mov
push
inc
addr16
outsb
mov
out
push
out
repz
xchg
stos
loop
and
dec
movsl
mov
out
rorb
nop
ljmp
jnp
mov
imul
mov
adc
xchg
inc
ljmp
arpl
subb
pop
push
cld
mov
mov
ja
pop
stos
add
xchg
movsb
or
mov
mov
push
hlt
test
fucomip
jns
stc
dec
mov
mov
movsl
ret
xchg
ljmp
cmp
add
mov
mov
adc
sbb
jl
mov
cmpb
jle
xchg
xchg
push
mov
mov
mov
loope
add
dec
adc
movsl
push
adcl
push
ret
clc
sub
pushf
stos
pop
sub
jae
aaa
repz
mov
insb
dec
das
jo
or
jge
and
iret
out
insl
fstl
pop
movups
repz
mov
dec
and
ret
adc
iret
jns
or
lahf
ret
xchg
inc
stos
repz
popa
lea
movsl
movsb
pop
lahf
mov
dec
clc
push
pop
jmp
or
push
les
dec
movsl
pop
aaa
js
jns
aaa
testl
mov
cwtl
adc
cmp
jne
frstor
insl
xor
cmpsl
add
mov
cmc
mov
mov
push
push
and
push
pop
xor
insb
pop
jae
mov
js
mov
rol
mov
test
bound
scas
inc
xchg
rcrb
jo
pushf
jno
sbb
data16
jb
add
fmuls
sub
dec
cmpsl
ja
call
dec
jg
scas
xlat
or
xor
push
or
daa
mov
and
out
neg
aaa
fisubs
cmp
or
fsubl
in
pop
pop
ret
ss
push
popa
push
aad
cld
cmp
add
add
xor
mov
jno
lret
jmp
push
mov
aam
xchg
push
or
xchg
notb
lds
stos
mov
xchg
xchg
sahf
sbb
pushf
imul
hlt
push
add
dec
jmp
sarb
out
and
xchg
jne
push
cmc
and
pusha
xor
scas
xchg
test
pop
cmpsl
rol
lret
push
roll
cmp
sub
js
cmp
scas
insl
movsb
xchg
divl
adc
xchg
jmp
mov
js
and
shll
adc
push
inc
jmp
into
dec
jmp
add
das
pop
in
divb
negb
inc
mov
mov
dec
xchg
jae
mov
roll
mov
dec
in
iret
repz
sub
shlb
int
sbb
stc
in
hlt
xchg
dec
shlb
outsb
xchg
push
xor
dec
mov
bound
test
clc
jne
jns
inc
fcomp
mov
and
pop
xor
mov
and
dec
test
add
mov
mul
leave
adc
and
scas
aam
pushl
mov
lcall
mov
cs
movsb
movsb
stc
or
dec
inc
fucom
in
cwtl
lret
cmp
fmul
push
fs
sti
movsb
inc
test
aaa
fnsave
fcoms
int
rcrb
or
push
cld
push
aad
es
popa
ds
pop
sub
sahf
and
push
stc
les
mov
xchg
cli
sti
cmp
adc
repnz
mov
lds
jno
rorl
sub
mov
loop
out
inc
popf
xor
jne
imul
daa
mov
jp
daa
lea
jno
cmpsb
mov
std
sbb
mov
movsb
cmpsl
mov
xor
mov
xchg
ret
pop
rclb
lret
cmp
addr16
int
cmp
in
fwait
jns
das
dec
sub
xchg
inc
scas
std
dec
dec
lcall
xchg
inc
push
mov
xchg
sub
cmc
xchg
das
add
mov
jmp
push
rorb
sub
xor
gs
xor
pop
inc
sahf
or
orl
idivb
xchg
sub
icebp
frstor
lret
sub
jo
add
out
imul
vandps
in
cmpsl
jg
mov
dec
mov
xlat
sub
and
add
push
fcomip
cmpsl
loop
mov
je
inc
sahf
outsb
jb
or
inc
and
mov
xor
mov
inc
cmpl
or
std
imul
xchg
sub
fwait
inc
adc
add
jmp
push
nop
sub
daa
fptan
mov
ds
mov
test
jnp
bound
adc
nop
jmp
adc
xchg
cmp
mov
jbe
arpl
shll
in
pop
lds
jge
push
pop
lock
push
push
imul
iret
mov
mov
cmp
cmpsl
xor
in
es
dec
cwtl
out
aad
pop
sub
dec
sbb
fwait
mov
cli
pop
outsl
or
and
popa
imul
xchg
out
pop
ds
pop
movsb
sbb
mov
lret
inc
cltd
idivb
js
lcall
xchg
ljmp
aaa
mov
sahf
jne
lahf
movsl
xchg
aad
xlat
cmc
inc
orb
push
daa
dec
sub
aam
xchg
mov
jbe
movsl
je
arpl
and
scas
scas
inc
int3
cmpb
pop
lcall
sbb
rolb
ficomps
xchg
jle
adc
pop
aad
lods
pop
jbe
or
ljmp
in
push
dec
outsl
mov
xchg
jg
pusha
fs
xchg
jns
sbb
dec
mov
mov
iret
mov
and
std
pop
dec
adc
fdiv
sbb
jge
dec
xor
divb
in
adc
scas
loopne
jg
push
inc
in
lds
xchg
cs
inc
or
test
pop
lock
stos
dec
hlt
xchg
push
lahf
pop
sarl
xchg
pusha
inc
stos
lods
fidivrs
les
stos
sub
mov
icebp
and
xchg
jg
mov
arpl
jae
rcl
pop
sub
mov
fsubrs
addb
mov
mov
dec
fdivs
jne
icebp
into
je
cmp
adc
cmpl
mov
pop
mov
in
frstor
and
or
pop
sbb
adc
mov
popf
jbe
jl
sub
fdivrp
mov
les
mov
push
adc
mov
xchg
imul
cmp
stc
cmp
push
idivl
adc
adc
push
mov
test
jge
sub
fadd
mov
imul
mov
outsb
xor
enter
cmp
and
in
test
movsb
test
and
in
fwait
xchg
jge
movsb
jae
jae
cmp
flds
add
out
and
push
jle
mov
mov
addr16
stc
mov
repnz
push
jg
aaa
jbe
ret
lahf
mov
and
mov
out
outsl
add
jg
ss
fidivrs
jl
out
jle
or
lock
inc
dec
lea
or
jns
mov
aam
pop
push
or
inc
jle
fidivrs
inc
jbe
in
ds
fadds
inc
bswap
mov
ficomps
dec
in
push
xchg
int
mov
push
sbb
or
pop
jle
xchg
adc
stc
pushf
jp
xorb
testl
cmp
mov
lret
stos
jnp
fsubrl
xor
shrb
fldenv
or
push
mov
adc
outsb
fnsave
cmpsl
lds
mov
insb
jbe
xchg
dec
pop
in
ss
adc
dec
mov
push
push
outsb
jne
xor
movsl
xchg
or
jl
dec
addr16
aad
adc
test
ja
jle
rcrl
mov
mov
lods
mov
ret
fisttpl
stc
sbb
sub
roll
sub
fs
clc
in
mov
mov
xchg
mov
mov
aad
rcrl
dec
sub
mov
sbb
mov
and
mov
in
dec
dec
fdivs
jns
sbb
adc
xlat
dec
mov
shll
icebp
pusha
adc
sbb
rorb
push
pop
xchg
xchg
push
and
mov
repz
mov
dec
adc
fwait
xor
aam
push
xor
out
mov
and
and
popa
pop
sub
mov
in
mov
xor
sub
call
or
jp
inc
pop
pop
push
negb
rcrl
fwait
cmpl
cwtl
out
ret
fwait
mov
subl
mov
add
cld
aaa
cmc
pop
dec
adc
xchg
inc
scas
mov
sbb
popa
subl
xorb
adc
push
mov
out
pop
ds
jecxz
imul
bound
roll
inc
into
add
lret
push
jae
shr
mov
sbb
lret
push
pop
ret
lret
sub
in
loope
pop
or
pusha
cmp
repnz
mov
cmpsl
push
fmuls
sahf
push
push
aaa
jnp
ret
fnsave
inc
aas
push
ja
sub
loopne
sbb
add
mov
jle
in
xor
jb
les
mov
xchg
ret
push
add
lock
loopne
mov
mov
sub
push
test
es
push
mov
addr16
ja
xchg
int
inc
mov
scas
sahf
sub
pop
out
xorb
into
xor
dec
jmp
cli
cmp
loope
aaa
lcall
sbb
cmpb
mov
push
lret
push
out
out
mov
xchg
pop
mov
dec
test
mov
ja
pop
inc
jmp
and
push
mov
ss
cmp
jns
pop
push
pop
mov
add
push
mov
out
xor
cs
mov
pop
lds
inc
dec
into
fldt
pop
pop
mov
or
push
sbb
ljmp
mov
push
push
pop
stos
xchg
out
pop
jno
mov
nop
xor
shr
and
mov
into
popa
or
je
inc
pop
mov
pop
out
pop
enter
cmp
loopne
cmpsb
sahf
rol
pop
jp,pt
enter
icebp
xor
and
dec
shrb
mov
lcall
push
dec
push
repz
cs
adc
lcall
push
nop
jmp
xlat
pop
mov
cmp
in
bound
and
jnp
xor
cmp
enter
test
mov
sbb
cmp
mov
sbb
cmp
sbb
cmp
cmp
lret
jl
lret
cmp
inc
cmc
xor
push
inc
push
or
test
push
or
pop
in
inc
inc
and
mov
movb
int3
mov
in
pop
fdivs
mov
loope
shrb
sbb
jno
and
push
out
jo
push
sub
mov
loope
cmp
or
shlb
daa
lret
sbb
inc
mov
notl
push
test
lea
nop
jno
movsl
adc
xchg
cltd
jne
xchg
push
in
ret
add
xor
fistps
add
sarl
mov
jnp
pushf
movsl
dec
sbb
jp
mov
shll
xchg
adc
dec
shll
cli
cmp
jnp
ret
adc
lret
ja
stos
je
inc
pushf
mov
mov
mov
es
push
inc
push
lds
add
mov
add
std
test
decb
inc
xor
mov
mov
and
js
orl
xor
xor
ret
mov
out
jp
cld
pushf
pop
mul
and
loope
cmp
xchg
xadd
int
mov
popa
andl
movsl
jmp
js
stc
xor
rorl
pop
xor
pushf
fcomps
call
lret
mov
lret
dec
mov
loop
sbb
dec
pop
sub
push
je
jle
xchg
sub
mov
cmp
xchg
xchg
sbb
jmp
xchg
sbb
sbbb
mov
xchg
in
mov
jae
cltd
cltd
xchg
out
or
mov
push
imul
mov
cwtl
data16
jae
pop
adc
pop
mov
sub
data16
xlat
xor
add
jl
ljmp
sub
xor
jae
cmp
cmp
iret
push
lcall
pushl
pop
jle
in
cmc
stos
mov
fsubl
mov
push
pop
enter
pop
stos
and
xchg
adc
and
mov
xor
jns
pop
loopne
inc
adc
inc
mov
scas
sub
clc
test
stos
mov
mov
fisubl
cmpsl
scas
pop
jg
les
cmp
add
adc
mov
xchg
hlt
jl
push
movsl
xor
xor
mov
sbb
nop
js
insb
mov
inc
insb
fs
sub
dec
ret
sub
cltd
sbb
repnz
mov
jl
enter
popf
mov
dec
jnp
ficomps
mov
jnp
pop
push
bnd
pop
pushf
pop
test
add
lods
cmc
jns
dec
lds
iret
or
or
dec
jae
out
mov
dec
enter
jbe
test
shl
addb
sti
adc
in
repz
pop
pop
or
inc
ljmp
mov
call
mov
mov
pop
in
rorl
movsb
std
adc
xlat
xorb
inc
mov
fidivl
or
out
and
addl
pop
sbb
sbb
aad
mov
jmp
inc
push
xorl
cwtl
xlat
lea
movsl
or
xchg
mov
cmpsb
jo
sti
cmpsl
lods
and
int3
ret
xchg
lds
dec
pop
adc
sub
pushf
push
sub
arpl
mov
ret
jg
sub
jge
inc
dec
arpl
cmp
pop
shrl
add
sbb
clc
cmpsl
aaa
fisubrs
dec
stos
xchg
pop
out
arpl
shlb
jo
push
xchg
dec
ret
out
es
adc
push
adc
scas
cmpsb
rcrl
add
daa
cld
arpl
xor
in
test
std
inc
fdivp
cmp
cmp
sbb
pop
push
inc
shll
repz
push
mov
fistpl
aas
and
or
push
fs
fcmovnb
inc
imul
dec
or
imul
push
xor
addb
arpl
dec
xor
push
loopne
aam
repz
rolb
inc
ret
aas
xchg
fldl
sbb
push
jne
xor
xchg
or
cltd
inc
es
outsb
pop
imul
rcll
test
arpl
bnd
sbb
int3
mov
mov
add
dec
inc
dec
xor
sbb
xor
std
mov
shr
imull
xor
hlt
in
cld
orb
stos
push
add
or
fisttps
jbe
cmpsl
mov
xchg
frstor
jle
cmp
sub
vpshuflw
int
cli
mov
mov
xor
or
dec
not
xchg
stos
shrw
mov
push
dec
dec
or
inc
arpl
mov
in
pop
adc
imul
fucomp
push
inc
leave
icebp
mov
lods
sub
lret
fs
adc
mov
movsb
stos
jge
sbb
add
or
push
lret
aad
xor
or
call
xor
xchg
mov
repz
idivb
fbld
outsl
inc
push
lods
imul
test
push
mov
sub
cld
jge
add
xchg
sarb
cmp
es
jae
cmp
xchg
adc
adc
loop
jbe
les
sub
mov
lcall
push
mov
dec
mov
fcomp
fistpl
and
jg
push
pop
cmp
push
outsl
insb
jge
xchg
dec
cmp
pop
test
mov
popl
push
movsb
jnp
outsb
scas
int
jbe
inc
lds
jne
pop
lods
inc
mov
test
push
pop
addr16
out
rcll
push
and
cld
and
test
mov
xchg
lds
cmp
pop
and
jae
cmp
pusha
xchg
push
mov
icebp
add
pop
gs
test
out
es
cmp
ret
mov
pop
imul
pop
gs
lds
aad
ror
loop
push
pop
inc
pop
pop
loop
fbstp
sub
test
je
mov
lcall
push
xor
pop
xchg
pop
pop
jecxz
outsb
test
sub
rolb
jno
sub
cwtl
clc
mul
int
cltd
push
adc
inc
roll
cmp
lret
cmp
inc
dec
clc
pop
test
out
dec
sub
fisttpll
aas
inc
inc
mov
or
push
mov
out
mov
lods
stc
add
test
pop
aad
push
shr
lods
pop
dec
mov
dec
xor
add
movsb
push
sahf
jo
mov
ret
fwait
adc
mov
mov
push
imul
out
enterw
mov
cmp
pop
sbb
mov
cmpsl
daa
clc
cwtl
push
mov
repz
es
inc
mov
outsl
fbstp
mov
cmp
mov
jnp
fbstp
je
xor
icebp
xor
xchg
in
addr16
or
add
and
xchg
shll
sub
mov
xorb
out
or
dec
add
pop
push
lret
jle
cli
and
inc
leave
scas
lock
mov
and
lcall
xor
data16
stc
data16
lods
movsb
jns
sti
sbb
pop
xchg
aaa
loopne
push
xchg
fsts
mov
xorl
repz
bound
mov
push
jl
aad
sbb
ret
data16
sub
jmp
jecxz
out
imul
jle
pop
fimull
pusha
icebp
xchg
sub
ja
in
test
mov
inc
call
push
mov
jno
popf
shrl
push
jmp
mov
sub
pop
dec
add
dec
adc
jne
pop
pusha
jl
cmp
mov
jmp
lock
xchg
shll
jle
fs
sbb
or
dec
hlt
popl
jno
xchg
sub
pop
cmp
inc
sub
mov
stos
pusha
jg
cmp
mov
pop
idivb
gs
in
and
cmp
sub
push
std
sbb
cmp
aaa
xchg
inc
dec
lret
loope
jnp
dec
jbe
xchg
xchg
aam
pop
push
dec
mov
and
ljmp
push
sahf
inc
or
outsl
clc
fadds
cltd
subl
and
or
dec
shlb
stc
add
mov
add
jle
mov
inc
mov
mov
mull
sub
lea
loope
jb
cmp
push
pop
cmp
jnp
pusha
mov
jno
cwtl
in
test
out
ss
adc
fists
fimuls
mov
inc
inc
mov
cltd
add
or
ljmp
jae
adc
cmp
and
push
into
or
mov
and
mov
push
pop
ret
push
addr16
loopne
xchg
scas
lea
aas
fcomps
stos
jp
sbb
pop
push
mov
dec
push
jp
stos
std
jp
cltd
jo
shl
mov
inc
jmp
mov
std
movsb
mov
and
mov
mov
inc
sub
sarb
std
xchg
xorb
fisubrs
in
insl
ds
cli
das
outsb
ret
fdivrl
inc
lea
imul
inc
lods
ljmp
std
jecxz
sub
jl
or
dec
movsb
push
push
fists
enter
add
cld
movsb
jl
cmp
mov
adc
mov
fnstsw
fs
mov
ss
mov
adc
cmp
push
push
xchg
inc
pop
xor
int3
jns
mov
inc
lods
mov
push
mov
gs
xchg
mov
scas
or
clc
sbb
jge
cli
mov
mov
loop
fchs
aaa
fidivs
sti
scas
cmp
clc
rcr
in
mov
mov
xor
or
int
pop
sub
insl
lock
inc
or
aad
mov
add
fwait
js
sti
icebp
and
adcl
pop
in
inc
mov
jbe
icebp
mov
sub
inc
test
sub
push
mov
and
adc
mov
sbb
xchg
out
ret
xor
je
or
ret
leave
add
cmp
jle
lods
loope
dec
cmpsl
loope
das
rclb
push
iret
stos
lods
xchg
pop
ret
loope
cmpsl
ljmp
mov
xchg
mov
adc
sub
vpcomuw
cmp
ljmp
fisubrs
ja
xchg
and
xlat
add
jae
mov
and
inc
insl
xor
xor
sub
enter
jo
mov
sub
stos
jbe
mov
jns
popf
aas
stc
xchg
outsl
inc
sbb
xor
xchg
sbb
sbb
enter
jae
jbe
add
jae
xchg
sub
in
pop
icebp
fldl
movsb
scas
xchg
pushf
stc
cmp
mov
mov
je
aad
loop
sub
dec
rorb
sub
pushf
insl
clc
lock
ss
pop
pop
lahf
pop
add
cmpl
insb
inc
popf
adc
scas
or
push
mov
in
int
bound
jnp
pop
loope
adc
outsb
sub
repnz
loope
push
pop
lcall
push
dec
iret
xor
or
sbb
mov
out
fcmovnb
xor
pop
in
mov
push
cmp
mov
xchg
cmp
insb
pop
and
aad
cmp
mov
hlt
jne
std
ds
sub
pop
or
imul
mov
and
lds
cli
shl
or
lods
and
fidivrl
shld
fld
lods
mov
jne
and
aaa
jo
daa
jb
sub
inc
jno
lret
outsl
ret
loope
icebp
jbe
sbb
add
fimull
pop
push
in
and
lcall
das
dec
addr16
jo
push
xchg
xor
xchg
ds
or
mov
negb
jnp
std
pop
push
pusha
adcb
or
js
xchg
stos
test
jae
inc
repnz
scas
fs
pop
push
stos
loop
push
test
sub
add
or
and
push
mov
insb
inc
shll
push
imul
test
push
sub
addr16
and
stos
pop
and
loop
jae
cmp
call
repnz
scas
pop
dec
jl
into
inc
loop
mov
rorl
ja
lods
cmp
add
orb
in
imul
push
push
stc
dec
dec
mov
in
jnp
pop
add
pop
dec
outsl
imul
dec
mov
sbb
enter
out
shrl
ja
movsl
mov
sahf
jae
xorb
cmp
push
mov
mov
jb
mov
mov
adc
dec
inc
leave
sbb
subl
testb
cli
push
xchg
enter
add
or
sarb
sub
xchg
incl
out
sbb
mov
mov
and
dec
test
xchg
jge
test
pop
lcall
sbb
mov
adc
xchg
enter
jmp
les
test
mov
pop
lods
imul
add
xlat
xchg
or
mov
lea
addr16
lahf
sub
push
mov
push
jnp
out
imul
ret
add
popf
xchg
rolb
addr16
fwait
aas
pop
sub
push
insb
test
cmc
aaa
aaa
xchg
cs
aam
enter
mov
les
dec
test
push
lods
cltd
add
pop
mov
cmp
outsl
sarl
mov
in
addr16
into
rcrl
sub
dec
sub
in
push
mov
cmp
aam
dec
lcall
insb
jmp
push
push
ljmp
in
xchg
movsl
enter
cli
jp
cmp
pop
mov
fidivl
xchg
xor
repz
inc
push
and
cmp
inc
inc
jmp
cmp
enter
mov
inc
cmpsl
dec
popw
add
add
adc
sbb
or
mov
sbb
push
ja
mov
pop
out
and
cmc
rcll
pop
gs
xchg
push
or
rorl
jg
out
fyl2xp1
iret
jne
jb
mov
xor
sbb
shll
int
mov
adc
pusha
roll
cmp
mov
and
nop
jns
clc
jle
inc
sub
push
adc
mov
lret
in
sub
popf
or
and
in
xchg
push
int3
fucomip
adc
es
xchg
negb
mov
lahf
pop
stos
fistps
jg
sub
mov
addr16
mov
push
leave
cltd
in
lahf
scas
mov
mov
dec
fdivrl
jecxz
push
mov
sub
mov
movsl
loop
mov
dec
das
das
cmp
xor
in
in
pushf
mov
mov
xor
fdivrp
test
sub
icebp
imul
cltd
and
enter
xchg
test
call
add
lret
mov
xchg
adc
add
xor
lret
lock
push
mov
adc
test
push
add
cmp
test
pushf
pusha
fnstcw
cmp
jae
fsubl
adc
test
sbb
aaa
fbstp
xchg
hlt
loope
pop
stos
or
xchg
mov
clc
push
jge
inc
sbb
xchg
js
mov
repz
mov
jg
loope
loopne
adc
dec
fwait
jne
cmc
inc
push
jb
testb
outsb
fs
mov
mov
arpl
xchg
sahf
xchg
sarb
iret
push
mov
nop
idiv
test
and
sbb
jecxz
mov
push
adc
jmp
xor
out
orb
dec
loope
or
pop
sub
or
sub
repnz
aad
mov
push
pop
aaa
jp
int3
out
test
pop
lock
call
fcomp
shr
repnz
int
fisubl
mov
adc
sub
xchg
jb
repz
push
inc
adc
mov
mov
inc
ret
aas
cmpsl
add
mov
inc
outsb
push
lods
dec
std
jno
dec
mov
push
jae
ljmp
mov
lret
leave
push
jns
pusha
ds
push
or
fcoms
inc
stos
in
loop
roll
loop
pop
out
in
fidivrl
inc
sub
adc
pusha
push
scas
out
sbb
test
push
cmp
inc
push
xchg
mov
and
ret
sub
inc
inc
xlat
sub
xchg
fwait
cmp
outsl
idivl
int3
push
cmp
push
adc
sti
jl
ret
mov
xchg
cmp
add
in
pop
test
jge
jp
sbbl
pop
xchg
outsl
mov
and
popa
or
in
loope
cltd
outsb
dec
cmc
std
inc
into
imul
movsb
push
mov
cld
out
mulb
into
in
repz
cwtl
mov
les
movhps
rorb
icebp
movsb
jg
jo
stos
inc
sahf
cmp
sbb
lock
jg
mov
add
jg
pop
sbb
fsubs
daa
outsb
out
test
les
xchg
lcall
inc
mov
cmpsw
jne
aaa
cltd
call
cmpsl
and
aaa
xlat
pop
push
mov
and
fsubrs
popa
push
adc
ret
or
in
aas
int3
arpl
xlat
loop
aam
or
lahf
cmc
out
outsl
or
push
jecxz
test
cli
fadd
add
xchg
mull
pop
data16
shll
ja
sub
in
push
adc
loopne
cltd
push
mov
sbb
xchg
dec
jnp
lea
adc
cltd
popa
push
mov
jo
pushf
lahf
and
in
xor
rolb
xor
cwtl
cmp
cmpsl
or
xchg
repnz
add
fdivs
and
cmp
popf
mov
jecxz
push
dec
cmp
invd
or
cmp
ret
jg
lods
cmc
jg
out
pop
sti
xor
adc
inc
push
cmc
push
pop
test
inc
push
push
cwtl
inc
inc
jp
repz
and
jge
add
or
call
push
push
movsl
sub
outsl
xlat
test
mov
into
arpl
mov
adc
cmp
jg
es
push
mov
repnz
ret
scas
fidivl
xchg
xchg
mov
and
punpckhbw
cmp
enter
adc
out
and
jae
pop
inc
jns
xchg
mov
mov
loop
jge
sub
dec
mov
nop
mov
xchg
test
or
test
pop
mov
sub
jno
mov
jecxz
push
dec
and
int
xchg
rclb
mov
ret
mov
mov
pop
sub
inc
mov
idivb
xchg
add
cmp
in
mov
mul
or
ljmp
lret
das
add
in
push
jns
pop
push
cmc
out
das
cmp
ret
inc
pop
push
sub
lcall
test
pop
dec
stos
adc
push
rolb
out
pop
scas
loope
ficomps
mov
lock
aaa
pusha
ffree
push
sbb
mov
fdivs
lock
push
xor
xchg
insb
push
jb
sub
push
ljmp
push
sysret
and
cmc
jp
and
shll
adc
xor
mov
inc
popa
inc
add
mov
push
out
test
test
push
jg
ja
or
lds
notl
pop
pop
adc
add
decb
mov
dec
jno,pt
fsts
push
arpl
xlat
cmp
jmp
jl
mov
jmp
and
xchg
mov
fidivs
adc
push
mov
sub
xchg
out
sbb
cmp
sub
push
inc
mov
popl
add
pop
push
dec
nop
cmc
decl
outsb
insl
xchg
lret
pop
push
stc
neg
fistpll
stos
ret
sarl
xchg
adc
jbe
ja
adc
js
mov
lds
rorb
sbb
mov
jnp
xchg
pushf
xrelease
stos
insb
jmp
call
mov
xchg
stos
aad
pop
repz
call
rorb
or
int3
fwait
fs
imul
fldl
out
in
mov
loop
mov
mov
nop
dec
add
mov
sarl
leave
or
shrb
shr
fs
add
das
lret
jl
jb
xorb
scas
xor
negb
outsl
xchg
jge
mov
lea
pop
dec
out
jg
xchg
mov
test
in
inc
or
jno
rcrl
mov
pop
mov
sbb
adc
dec
xlat
xabort
test
sbb
shl
pop
movsb
xchg
pop
je
mov
xor
mov
insl
mov
lret
inc
insl
or
sbb
sub
pop
xchg
mov
inc
les
dec
cmp
lods
adc
faddl
in
daa
pop
inc
and
repnz
js
movsl
or
xchg
jo
cmp
mov
fldt
jmp
lret
pop
fcmovne
stc
lcall
js
mov
mov
xor
push
out
add
jno
xchg
ret
jmp
add
lods
xchg
mov
sbb
jno
jnp
lcall
ds
ret
xor
cmpb
or
or
mov
js
xor
mov
mov
add
cmp
or
xorl
ja
idivb
cld
mov
xor
cli
pushf
bound
outsb
add
push
out
cwtl
cltd
inc
mov
sub
xor
addr16
fwait
lahf
mov
jle
xchg
rcrl
movsb
dec
cmpl
aam
adc
jbe
mov
inc
mov
push
inc
pop
out
shl
fnstsw
vpsllw
mov
push
dec
and
fimull
scas
das
movsb
int
push
fildll
rcll
test
insb
psubsw
pop
or
pop
sbb
cli
pop
andl
add
push
pop
mov
and
pop
cmp
cwtl
pop
sub
cmpsb
jo
int3
sar
inc
dec
push
xor
stc
mov
sti
jecxz
adc
adc
loopne
scas
cld
sub
and
stos
addr16
les
negb
ljmp
lea
lcall
and
pop
mov
xor
jnp
sub
nop
xchg
enter
loopne
flds
xor
gs
rclb
aad
aas
or
scas
sbb
cmp
fisttps
mov
icebp
lods
loop
enter
mov
jbe
pusha
push
pop
xor
sbb
add
sbb
outsb
jmp
cmp
ljmp
push
out
test
push
add
into
cmpsb
or
push
xor
pop
add
sti
aas
adc
je
jno
xlat
clc
fcomps
pusha
je
add
adc
movsl
cmp
cmp
lahf
mov
push
jne
push
add
xchg
push
mov
xor
jp
sub
shll
mov
mov
test
and
adc
pop
outsb
stos
mov
nop
sbb
popa
and
mov
inc
lret
imul
test
pop
jl
icebp
xlat
rorb
call
mov
adc
mov
js
das
xor
shrl
or
ret
int3
push
xchg
roll
enter
je
nop
jno
push
out
xor
cmp
jge
leave
mov
add
cwtl
iret
test
lods
mov
mov
ljmp
mov
lods
outsb
cwtl
cmpsb
sbb
jle
mov
fsubr
mov
cmp
bound
sbb
mov
xor
xchg
mov
xor
cld
pop
shll
pop
mov
inc
test
cmp
call
cli
jne
mov
jnp
lods
push
mov
xchg
pop
xchg
ja
adc
les
xchg
rol
sub
cli
cmp
adc
and
xlat
fimuls
shll
jmp
lret
mov
ljmp
lods
stos
or
mov
sub
mov
pop
ds
aaa
push
sub
or
in
xchg
pop
xor
sub
or
jno
shlb
scas
lds
iret
cmp
inc
test
cmp
push
dec
xchg
cmp
jmp
push
mov
add
mov
pop
into
jno
push
orl
sub
jmp
xchg
insb
push
xchg
filds
cmpsb
pushf
adc
in
inc
add
je
arpl
cmc
popa
lret
icebp
xchg
mov
loop
push
lods
or
aad
ljmp
lret
pop
mov
outsl
mov
das
pop
pop
cmp
mov
adc
adc
push
decb
nop
push
lea
cmc
mov
xor
xor
pop
jmp
insb
lock
stos
jle
aad
fwait
das
repnz
test
js
bound
mov
inc
fistl
repnz
enter
xchg
adc
dec
push
jb
cli
leave
mov
int
outsl
loopne
enter
mov
inc
pop
cmp
in
push
rolb
scas
cmp
shlb
cmp
add
pushf
sub
mov
push
push
rorb
dec
ret
push
jle
rorl
lret
push
push
lret
in
and
inc
push
sub
aad
push
sbb
das
sbb
mov
xchg
pop
sahf
xor
jno
mov
pmuludq
lahf
stos
mov
adc
adc
ret
push
icebp
ljmp
iret
es
inc
push
and
bound
lea
aad
scas
cmp
jo
xchg
xor
lret
sahf
adc
mov
rclb
insl
in
test
test
pop
xorw
dec
jmp
testl
mov
adc
movsl
cwtl
add
aaa
minps
icebp
dec
pop
pop
mov
pop
cmc
push
push
cmc
add
and
push
test
mov
jae
jne
int3
add
push
push
leave
add
les
and
or
adc
dec
stc
in
sub
dec
fisubs
mov
sbb
push
xchg
sbb
inc
sbb
xor
mov
icebp
add
jge
out
int
pop
lret
mov
xor
loopne
add
fdivrs
rcrb
pop
daa
mov
stos
sbb
adc
mov
mov
popa
mov
mov
sub
sahf
jno
xor
xchg
xchg
pop
cltd
and
mov
sub
mov
leave
mov
fwait
lea
arpl
jecxz
dec
pop
in
or
clc
sti
adc
sti
data16
pop
mov
jle
xchg
cmp
out
test
mov
or
cmp
nop
dec
mov
xorb
push
dec
and
cmc
jecxz
pop
xor
movsl
mov
es
insl
xchg
mov
test
rorl
sbb
cmp
xchg
jne
add
adc
adcb
aad
cmp
call
test
jle
xchg
test
andb
ljmp
push
xor
inc
mov
xchg
ljmp
insb
loopne
ljmpw
jmp
mov
cld
jns
dec
insb
xor
pop
mov
sub
mov
push
sub
adc
pop
or
push
jbe
fistl
pop
negl
or
pusha
fs
xchg
xchg
pop
loopne
dec
subl
dec
mov
adc
lret
fcomps
xor
in
jns
sub
pop
rep
fcomp
lods
cmp
call
ja
pop
inc
in
je
js
push
jge
dec
daa
in
cmc
mov
jb
pop
ss
loope
mov
xor
cmp
jbe
aas
lods
mov
push
cmp
jmp
xor
mov
lcall
ja
or
jg
dec
repnz
and
ror
cmp
call
xor
frstor
das
in
adc
push
hlt
xchg
arpl
and
mov
push
mov
xchg
push
mov
inc
pop
mov
or
nop
repz
jmp
adc
inc
sahf
aas
inc
push
loope
daa
mov
jno
popf
add
inc
dec
sbb
daa
popa
sbb
popa
push
jmp
push
subl
push
sbb
addr16
pop
cmpsl
push
lcall
pop
int
aaa
or
aam
jae
das
cld
outsl
gs
scas
dec
out
out
fmull
sbb
push
add
sahf
les
aam
das
dec
mov
clc
sbb
ja
loopne
mov
sub
testb
cmp
lret
test
cld
dec
test
cmp
ljmp
lcall
es
loop
popa
jg
add
nop
pop
pushf
js
fxtract
popa
outsb
lahf
sar
fwait
add
fldln2
dec
test
mov
mov
outsb
clc
ja
in
xor
pop
clc
loopne
inc
fidivs
adc
mov
lahf
sbb
addr16
cmp
popf
jb
mov
std
icebp
pusha
mov
loope
dec
insb
inc
loop
or
mov
insb
pop
sub
cmp
jle
mov
sub
aaa
loope
cwtl
repnz
mov
sahf
repnz
xchg
pop
pop
pushf
insl
ss
mov
and
and
mov
call
xchg
rcr
cmp
jo
mov
jp
test
sbb
add
icebp
lods
add
out
mov
fisttpll
dec
cwtl
stc
out
dec
sti
jae
mov
push
pop
push
rcrb
sub
xchg
pop
mov
stos
iret
ss
ja
dec
push
sbb
test
les
inc
daa
jb
xchg
push
adc
push
sbb
fildll
ret
scas
mov
movl
xchg
or
cli
pushf
adcl
repz
and
xor
xchg
imul
insl
mov
aam
decb
pop
lods
pop
stos
outsb
and
mov
pop
push
mov
mov
fwait
ret
cmp
mov
stos
insb
jle
les
xor
jmp
inc
mov
cld
imul
xlat
pop
out
cmpsb
xchg
les
popf
inc
loope
adc
std
adc
mull
data16
mov
adc
and
inc
fmull
mov
into
push
xor
push
mov
ljmp
push
mov
inc
loopne
sti
das
pushf
inc
adc
xchg
rcll
lods
into
mov
popf
jg
adc
mov
xlat
test
movsb
movsl
xchg
mov
dec
pop
adc
dec
jge
or
mov
arpl
jmp
mov
push
test
movsb
push
dec
jge
aas
inc
fcmovnb
jae
xor
push
leave
lea
add
in
les
push
dec
fs
adc
lcall
xor
cmpsb
inc
mulps
inc
and
roll
out
xlat
std
mov
jae
sub
pop
push
fcoml
or
call
sub
rorb
mov
pop
inc
je
int
and
mov
jecxz
and
push
rorl
jo
sbb
cld
imul
addr16
cld
lret
jo
orb
jae
xor
sub
xchg
jl
mov
repnz
mov
push
sbb
repz
or
rcl
xchg
sbb
sub
iret
xlat
icebp
or
cwtl
jo
push
adc
das
sub
fbld
mov
cld
push
adc
sbb
mov
in
outsb
inc
push
sub
inc
jp
arpl
fidivrl
icebp
cmp
roll
sbb
aad
daa
sbb
cmpl
sarl
ret
adc
ljmp
je
scas
rcrb
bound
cmp
dec
and
in
jae
adc
fstpl
outsb
sbb
or
jmp
rcll
fmull
mov
insb
jbe
test
fisubl
sahf
adc
and
ja
xchg
lahf
mov
lods
mov
jle
ljmp
dec
cmp
imul
xlat
mov
jae
clc
out
scas
mov
dec
movlps
sti
jge
das
and
ss
or
mov
jle
nop
xorb
pop
sbb
arpl
add
shrl
aaa
xchg
fadd
ret
test
sub
js
jae
test
out
push
fldl
andl
aad
dec
xor
inc
cwtl
lods
jns
outsb
test
mov
jp
inc
cwtl
aaa
shll
in
mov
lea
ret
data16
add
push
push
adc
push
ljmp
lcall
inc
pop
lea
pop
stos
iret
stc
ljmp
int
dec
or
sbb
aaa
push
pop
add
ret
push
xor
ret
add
imul
xchg
repnz
out
xorb
insl
add
imul
pop
stc
out
cli
inc
dec
inc
mov
xor
popa
xchg
daa
shrb
add
in
push
fsubs
dec
int
cli
not
push
outsb
lret
out
bound
jl
adc
jecxz,pt
in
xchg
mov
fisubl
pop
pop
xorb
and
xor
jbe
xchg
cmp
mov
push
jmp
lods
fcoml
dec
sub
pop
movsb
push
ret
jns
sbb
and
xor
fs
jno
dec
fimull
or
push
pop
out
shrb
cmp
mov
outsl
out
sub
je
cli
xchg
lea
and
loop
inc
pusha
or
cmp
std
dec
fucomp
jp
shrl
scas
adc
pop
in
dec
mov
xchg
and
mov
popf
sti
cmp
lret
dec
cmp
int3
pop
outsl
push
lret
enter
xlat
fs
stos
loop
imul
xor
outsl
adc
dec
push
aaa
imul
adcl
sbb
les
xchg
out
lret
pop
or
cmp
push
pop
or
repz
xchg
shrb
dec
mov
rdtsc
pop
or
xlat
add
aad
mov
mov
inc
outsb
pop
lahf
xchg
mov
pop
je,pt
pop
push
lahf
data16
pusha
push
mov
mov
mov
icebp
int
cmpsl
mov
out
jmp
popf
add
movsl
lds
shl
push
mov
and
cmc
jl
into
into
and
sub
push
or
pop
in
mov
sbb
movsb
lods
leave
mov
fsubl
add
push
adcl
daa
test
into
add
xabort
jle
xor
pop
cs
mov
adc
aam
xlat
xor
xchg
push
dec
sbbl
dec
aas
adc
jb
push
lret
int
test
xchg
mov
cmp
xchg
fcomi
mov
cmp
lret
and
or
fidivl
push
inc
sub
es
enter
lods
je
xor
push
xchg
push
aas
sbbb
cmc
aad
ljmp
out
aad
xor
add
outsl
call
inc
jb
add
mov
xor
aaa
enter
fldenv
adc
cmp
sbb
mov
add
scas
lods
cs
lcall
inc
repz
repnz
dec
mov
cltd
sti
sbb
dec
xchg
xchg
or
mov
adc
adc
push
cmc
cmp
inc
inc
scas
cltd
mov
inc
nop
pop
dec
stc
sbb
pop
inc
cwtl
pop
pop
dec
sub
add
sub
fidivrs
inc
in
xchg
aad
aas
mov
cmc
popa
sbb
add
jl
xchg
test
pop
add
and
rcll
in
mov
movsl
sbb
clc
jno
cmp
jg
lret
mov
dec
pop
data16
push
mov
jo
cld
sbb
repz
ror
jmp
call
sbb
andb
push
push
aad
movsl
sti
xorb
mov
pop
loopne
add
je
movsb
test
and
jg
movsb
jmp
iret
call
out
sub
push
loopne
outsb
dec
in
push
and
shlb
es
xchg
fsubrl
xchg
xchg
sbb
out
fdivr
pop
jge
dec
xor
shrl
aad
push
clc
loope
fnstcw
mov
gs
or
push
pop
jl
dec
outsb
mov
xor
xor
dec
xor
or
clc
mov
inc
push
mov
xor
jo
xchg
xchg
xchg
cmp
test
rorb
mov
scas
mov
cwtl
adc
dec
xchg
cmpsb
out
jg
mov
in
mov
rol
negb
sbb
std
push
sahf
and
rcrl
jmp
cmc
fcomi
adc
sub
popa
cmpsl
sbb
dec
inc
stc
movsl
inc
leave
xor
pusha
cmp
lcall
xor
test
add
test
in
jg
lds
dec
xchg
clc
xchg
pushf
aaa
xor
jb
lods
aad
and
sub
lods
aad
add
inc
aaa
cmp
shr
into
sub
inc
and
ds
dec
rcrl
push
pop
and
mov
add
push
mov
scas
js
cmp
stc
inc
jmp
sub
jp
lahf
sarl
enter
sub
mov
scas
push
xlat
mulb
mov
push
cld
inc
outsb
dec
push
stc
js
ret
xchg
sahf
xchg
out
and
pop
pop
xlat
inc
mov
mov
push
je
jne
add
stos
adc
lds
int
jmp
bound
subl
movsb
fiaddl
fsub
js
and
mov
lea
imul
dec
scas
dec
clc
fildl
pop
sahf
pop
ds
icebp
lock
cmc
push
jns
ret
and
ficoml
fcmovnb
push
and
cmp
imul
outsl
enter
dec
pop
andl
sbb
insb
arpl
insb
loopne
cs
inc
push
repz
add
dec
imul
mov
test
or
fidivs
xor
mov
jge
inc
cmp
and
out
pop
insb
pop
icebp
hlt
iret
jp
add
jne
inc
xor
or
mov
sub
jae
add
push
in
sbb
dec
push
sarl
enter
and
into
lods
icebp
and
ficompl
jmp
dec
frstor
push
repnz
out
out
sbb
mov
cwtl
adc
lcall
add
sahf
sbb
xlat
imul
mov
fisttpl
xor
bound
mov
push
xor
pop
xor
out
mov
mov
push
sti
fwait
adc
jmp
test
inc
pushl
push
daa
je
aas
pop
inc
fxch
add
and
adc
popf
adc
icebp
jnp
sub
jno
lahf
pop
or
fs
fimull
cmp
sbb
fists
lret
cli
in
inc
inc
mov
out
mov
movsb
ret
test
je
or
insb
inc
jg
scas
xor
pop
jmp
dec
inc
mov
nop
ss
imul
in
dec
and
mov
std
sub
or
pushf
mov
mov
xchg
push
gs
arpl
subl
cld
mov
popa
add
cmp
or
sub
mov
sbb
mov
or
mov
xchg
data16
jae
mov
shrl
stos
jl
sub
and
pop
int3
nop
enter
ljmp
mov
xchg
xchg
out
push
out
sub
fldl
inc
adc
jbe
jne
jne
add
inc
push
mov
les
add
aaa
inc
pop
idivb
push
push
dec
jnp
pop
orl
sbb
test
inc
cmpsb
shll
sbb
sahf
imul
push
cwtl
jb
push
push
pop
pop
lds
lahf
test
push
jb
lods
push
mov
in
test
shrl
mov
and
icebp
xlat
adc
rclb
ret
inc
sub
test
cmp
leave
es
mov
mov
jle
jp
push
leave
pop
jmp
lock
shlb
mov
adc
call
cmp
ss
cmp
cld
mull
test
js
in
inc
dec
cli
sub
jg
push
out
push
cltd
xchg
mov
adc
mov
movsl
xor
in
test
lods
or
pop
inc
and
pop
xchg
in
mov
mov
movl
mov
out
subl
mov
xor
pop
cld
aam
gs
adc
pop
sbbb
mov
pop
fwait
in
sti
add
enter
clc
cmp
jae
negl
xchg
pop
pop
mov
fmuls
sub
mov
repnz
pop
lods
inc
lret
jnp
sti
test
call
add
test
mov
mov
mov
cmc
and
pop
inc
test
sub
out
cltd
fcomps
insl
xor
xchg
icebp
pop
mov
test
add
pop
cli
sbb
sbb
cmp
es
ljmp
jae
add
jo
dec
out
stos
es
jmp
mov
mov
dec
out
mov
pop
sbb
testl
xchg
int
xor
out
mov
xchg
scas
jmp
cs
ret
or
aam
add
fwait
jle
rorb
sub
inc
bound
xor
jl
fstpt
xchg
mov
dec
ljmp
pop
mulb
leave
mov
xchg
addl
push
outsl
mov
mov
repz
fstps
std
ja
jecxz
test
push
add
cld
enter
pop
cmp
push
sti
into
adc
push
and
nop
rorb
cmp
push
aad
ss
mov
fidivs
cld
fcmovu
cmp
test
and
shrl
sbb
pop
or
jne
jnp
pop
sub
ja
sbbl
ljmp
sti
sbb
push
mov
movsb
cmp
mov
incb
mov
cmp
add
nop
bound
int3
lock
mov
sub
stos
int
mov
std
ja
cwtl
ds
mov
loope
push
pop
xchg
and
mov
std
inc
mov
idivl
and
std
mov
xor
push
sub
mov
lahf
movsb
mov
dec
mov
pusha
insl
sbb
mov
inc
jae
mov
outsb
push
push
repnz
lret
repz
sbb
test
je
sbb
lret
cmp
addr16
jle
sub
and
or
out
addr16
out
pminsw
les
pop
jae
xorl
xor
notl
sti
dec
movsl
sti
data16
pop
push
pop
imul
xchg
aam
cli
mov
jecxz
outsl
out
mov
fimuls
inc
push
mov
cmp
mov
std
sub
popa
std
add
jno
cmp
pop
aas
sbb
lret
les
mov
imul
bound
in
rorb
jge,pt
loope
int
pop
loopne
push
dec
lret
test
dec
xchg
aad
js
cli
cmp
mov
outsl
dec
or
test
cs
xchg
cli
test
movb
test
cmp
jmp
imul
lods
xlat
add
jg
dec
mov
sarl
jl
pop
push
adc
inc
fs
inc
mov
movsb
in
mov
push
or
inc
das
push
lods
lock
aas
and
repnz
pop
jnp
mov
mov
insl
push
test
push
dec
sub
and
cmp
push
xor
inc
in
jns
dec
xchg
arpl
mov
in
cmp
adc
inc
pop
or
adc
loopne
insl
inc
mov
int3
sub
lods
pop
mov
arpl
and
mov
mov
adc
mov
aaa
sub
test
mov
inc
hlt
xchg
roll
dec
push
pop
stos
int
or
int
mov
popa
movsb
pop
pusha
mov
mov
fidivrl
subl
mov
gs
jl
xor
js
xlat
stos
iret
cwtl
mov
pop
cmp
mov
adc
inc
mov
inc
sub
jl
mov
and
test
inc
pop
jmp
fs
cld
insl
test
loopne
movsl
mov
out
sub
mov
xchg
inc
hlt
scas
mov
fdivrs
jg
test
sub
shrl
pop
lock
pop
cmp
inc
fidivrs
test
xor
adc
addl
leave
leave
pop
out
xchg
pop
lcall
jge
daa
mov
lds
lock
faddl
insl
dec
enter
mov
bnd
popa
jmp
sub
div
mov
sbbl
xor
das
movsl
fmulp
pop
pop
sub
sbb
or
out
lcall
int3
mov
dec
in
push
pop
sub
mov
pop
inc
cmp
jl
aam
xchg
jae
xor
pop
and
jl
into
js
loope
cmp
ss
push
fimuls
movsl
rcll
mov
dec
mov
nop
add
jge
outsl
call
and
cmp
imul
addr16
mov
pop
loop
lahf
and
aas
xchg
jp
fxtract
mov
inc
lret
stc
mov
push
add
lock
cmp
in
inc
and
pop
dec
mov
add
push
jne
enter
add
arpl
or
pusha
repz
mov
in
jns
negb
push
aad
add
jl
pop
sub
out
mov
pop
cmp
in
inc
push
cwtl
jo
in
inc
mov
add
add
and
sarb
push
and
sub
push
shr
popf
gs
jnp
and
ja
jl
mov
and
sbb
bound
pusha
or
mov
test
inc
sub
fcompl
sub
popa
lcall
rcll
jne
mov
or
mov
int
push
jbe
add
dec
and
mov
pop
faddp
mov
mov
dec
mov
es
mov
inc
and
and
cmpsb
pop
mov
and
ret
cmpsb
roll
imul
jg
xchg
pop
call
or
mov
test
adc
dec
jo
lea
fucomi
inc
push
add
lods
sub
in
out
repnz
jle
daa
jb
and
mov
lock
lods
pop
sbb
sub
adc
inc
cmpl
bound
dec
dec
sbb
fisttpl
and
add
mov
test
imul
cli
imul
pop
adc
push
add
mov
adc
test
icebp
addr16
or
fimull
lret
ret
dec
cwtl
popf
adc
repz
repnz
sub
adc
ja
sbb
xor
data16
xchg
or
add
cld
adc
or
pop
sub
mov
leave
jmp
fisubrl
adc
arpl
pop
pop
pop
and
mov
sbb
jecxz
mov
movsb
dec
sub
and
lock
aaa
roll
cmc
cmp
inc
cmpsb
ret
cmp
pop
mov
out
iret
nop
repz
xchg
nop
sbb
adc
or
es
dec
sub
and
sbb
subl
xchg
push
cld
sbb
jmp
xchg
push
mov
dec
bnd
jno
inc
das
push
imul
mov
pop
and
push
xor
fisttps
not
fmull
dec
inc
mov
push
dec
jg
pop
dec
and
adc
je
mov
mov
xorl
sti
mov
popa
mov
sbb
add
cmp
in
stc
jne
leave
cld
dec
mov
dec
mov
adc
inc
sahf
sbb
sbb
fwait
cmp
xor
ss
fnstcw
dec
xor
sbb
mov
hlt
dec
sbb
bound
scas
fcmovnbe
mov
inc
aas
cmc
push
xor
xor
rcr
xor
lret
les
inc
dec
ret
out
gs
jp
push
xchg
sti
xlat
imul
adc
pop
mov
jmp
add
in
jb
xlat
push
jbe
jb
cmc
cmpsb
lock
dec
test
sub
cld
psrlq
mov
sbb
pop
insl
imul
push
andb
adc
jae,pt
test
inc
std
xchg
lods
shrb
cs
mov
adc
aad
sub
push
sahf
sub
dec
ljmp
popa
fsubrs
adc
rolb
add
ret
das
sbb
jnp
loop
popa
mov
xlat
add
push
pop
pop
push
add
add
sub
add
ss
dec
and
xor
adc
adc
fiadds
repnz
bound
adc
mov
fwait
sahf
pop
xlat
icebp
add
fdivl
movsb
push
inc
cmp
mov
pop
imul
pop
fstps
ret
dec
cs
fldl
xor
loop
int3
mov
jno
loopne
cmpsl
add
push
scas
cmp
pop
dec
lahf
clc
les
xchg
iret
and
jnp
cmpsl
xor
xor
incb
int3
add
ja
push
jecxz
jno
dec
dec
jns
push
inc
test
adc
jne
pusha
mov
sbb
push
gs
xor
mov
loope
cmp
das
cwtl
cmp
cltd
clc
adc
xor
out
xorb
xlat
lea
xchg
mov
out
and
gs
mov
call
sub
in
push
popf
lds
data16
imul
adc
adc
stos
fists
mov
imul
add
je
out
pushw
sub
pop
cwtl
aad
sub
mov
pop
lret
inc
paddb
outsb
add
xchg
outsl
pop
cmp
call
lahf
enter
add
and
jno
xchg
aad
test
jmp
dec
xor
add
stos
stos
push
mov
std
test
pop
dec
dec
cmpsl
pop
outsb
outsb
xor
ja
pusha
jno
xchg
mov
or
xor
out
xchg
movlps
adc
lods
rcll
dec
add
test
int
or
insl
add
jg
push
cmp
mov
or
loopne
adc
dec
je
stc
stc
jp
loop
inc
jae
cmp
sub
daa
ljmp
dec
test
addr16
iret
dec
sub
sbb
or
cmp
inc
clc
call
push
pop
or
jo
fcmovb
repnz
repz
mov
movsl
test
add
push
xchg
jno
sbb
pop
test
or
xchg
mov
fsubp
das
loopne
loop
xorb
mov
dec
lods
mov
sub
xchg
in
push
cmpb
sbb
jo
pop
add
cs
movsb
push
subb
lret
sub
test
loope
mov
mov
mov
jnp
inc
adc
dec
jge
test
dec
pop
cwtl
sti
es
in
daa
fwait
push
mov
add
xchg
sub
out
mov
cmc
dec
enter
in
cmp
and
in
xor
cmp
jp
push
adc
iret
lds
add
sub
icebp
daa
cmpl
mov
mov
jmp
clc
inc
mov
jl
xchg
in
xchg
cltd
mov
sbb
mov
push
pop
iret
in
insl
or
jmp
xchg
scas
inc
test
sbb
ss
pusha
dec
pop
or
push
testl
pop
std
dec
dec
icebp
dec
movsb
call
pop
ss
rol
je
pop
mov
loope
mov
dec
jae
daa
idivl
lsl
decb
push
xchg
das
ficoml
add
lds
inc
fcmovne
xor
lea
lods
test
call
lea
aam
pop
ds
pop
xor
pop
arpl
aam
loope
jae
pop
jne
add
int3
ror
in
pop
sbb
dec
pop
or
sub
mov
cli
jo
rcrl
fists
lahf
stc
imul
xor
mov
dec
sub
in
xchg
je
inc
push
push
jo
imul
idivb
cld
adc
loop
cmc
into
hlt
jb
cwtl
adc
stc
out
dec
push
in
cmp
dec
movsb
jne
pop
xor
clc
dec
sub
and
out
stc
add
into
hlt
shrl
cmpsl
repz
xchg
inc
xchg
mov
vpavgb
pop
xchg
pop
sub
test
sbb
adcl
fdivrp
loope
pushl
and
xor
shl
pop
pusha
add
imul
out
adc
dec
xchg
xor
fimuls
in
sbb
ja
cmp
and
cmp
pop
or
add
jno
inc
lods
jno
mov
out
cli
imul
xchg
or
pop
or
test
jecxz
xchg
or
and
inc
or
push
xchg
and
out
push
inc
and
dec
cmpsb
pop
inc
xchg
mov
and
mov
pop
mov
test
ds
push
pop
data16
lret
shll
rolb
inc
sub
xor
mov
mov
lds
dec
jno
cmp
mov
js
enter
inc
pop
xchg
jecxz
mov
out
add
jp
popl
inc
xchg
dec
xor
sub
daa
xor
add
sub
and
ss
lret
insl
data16
dec
std
xchg
and
or
imulb
andb
clc
test
cmp
data16
dec
loop
xor
sarb
ret
lods
notb
rol
icebp
jmp
mov
cmp
ds
xchg
rclb
xor
sub
push
mov
loope
sub
xor
mov
xorb
in
push
or
sahf
push
cmp
cwtl
sbb
sbb
shll
inc
or
loope
lea
stc
lcall
xlat
jbe
daa
mov
lds
push
cmp
shlb
jge
pop
ds
jae
out
jbe
repnz
leave
cli
sbb
cmp
mov
and
das
enter
pop
cld
jl,pt
out
ficompl
xchg
jle
xchg
lock
cmc
pop
cmp
push
lock
cmpsb
int3
loopne
jb
inc
add
cs
sub
cmp
push
push
mov
pop
lock
orb
cmp
jbe
in
pushl
adc
mov
out
or
or
es
mov
cmp
mov
ja
adc
mov
push
or
push
adc
test
add
adc
cmp
jb
xchg
pop
fs
lds
pop
in
jp
in
scas
mov
xor
imul
cmpsb
daa
mov
mov
lds
or
das
cmc
mov
or
jno
jbe
and
cmpsb
push
imul
test
cwtl
jg
fimuls
dec
inc
pop
push
ret
or
dec
inc
jb
dec
dec
and
loopne
and
aad
xchg
xchg
mov
adcl
mov
push
insl
mov
mov
pop
add
jns
sti
in
jb
or
jecxz
push
inc
and
push
adc
pusha
mov
pop
shll
lret
lahf
out
bound
bound
loop
push
call
out
in
mov
pop
xchg
xchg
adc
inc
daa
pop
sbbl
xchg
bound
mov
imul
pop
out
xchg
repnz
inc
cs
mov
arpl
ss
add
add
push
inc
lahf
fdivrs
ja
neg
or
or
cli
or
test
out
pop
stos
cmpsl
pop
cmp
and
pop
xor
mov
fwait
xchg
les
sub
mov
cmp
mov
sahf
imul
cmpb
dec
lcall
jbe
jg
ret
mov
dec
cmp
sub
pusha
test
jp
and
repnz
xor
adc
movsb
inc
shll
pop
mov
mov
sbb
insb
in
jne
push
or
pop
sub
jge
std
outsl
jmp
mov
ret
push
inc
sti
adc
test
xchg
or
mov
insb
add
push
shl
xlat
and
pop
shll
iret
aad
or
sti
add
out
and
jecxz
dec
xor
in
mov
leave
std
sar
inc
test
dec
push
cmc
mov
adc
icebp
sub
jbe
test
pop
mov
mov
decl
push
jle
dec
sbb
loop
clc
mov
sub
mov
cmp
data16
xchg
shr
mov
cmp
mov
test
leave
pop
fs
test
jmp
mov
ret
mov
adc
pop
mov
adc
bound
mov
xor
leave
push
cmpsl
or
sbb
push
loop
popf
dec
xchg
cmpsl
push
and
cmp
cmp
inc
xchg
mov
push
or
das
stc
inc
int
inc
cmp
test
mov
mov
add
cmpsl
arpl
test
insb
call
add
sub
xor
jmp
into
adc
fstpl
sbb
int3
mov
loope
inc
lds
push
movsb
jns
mov
push
out
loopne
repnz
or
in
cmp
aam
stos
push
ljmp
xor
inc
add
mov
xor
pop
int
pop
jnp
sbb
cmp
pop
jno
xchg
popf
sbb
xor
movsb
sbb
dec
call
pop
lods
push
push
add
add
sbb
or
inc
pop
mov
pop
loope
or
addr16
push
cwtl
clc
mov
scas
adcl
and
and
sbb
dec
bound
int3
inc
ficomps
cmc
pop
jge
mov
jl
ss
loope
mov
stc
lahf
push
sbb
inc
jne
push
test
testb
jge
adc
stc
loope
fucomp
push
add
fadd
pop
orb
lds
xchg
dec
cmp
mov
jp
jl
cmc
nop
mov
int
mov
ret
jp
mov
jle
pop
mov
mov
jl
push
mov
adc
cltd
and
lock
xlat
mov
mov
data16
out
inc
lret
outsb
lret
jge
repz
xchg
adc
push
je
les
test
push
cltd
fisttpll
cmp
cld
clc
xor
cs
or
xor
pop
push
mov
and
push
mov
mov
mov
sub
inc
jge
mov
int3
loop
sbb
cmpsl
xor
lods
push
adc
mov
jns
ss
fprem1
repnz
out
jns
push
sbb
mov
push
cmpsb
xchg
xchg
das
ljmp
out
sarb
push
pushf
shrl
mov
adcb
add
orl
aam
outsb
sti
jge
push
mov
dec
bound
xchg
dec
ficoml
sub
hlt
jae
cmpb
and
jge
popa
inc
jb
pop
inc
sbb
insb
xchg
push
lea
shrb
pushf
push
inc
cmp
jle
cltd
xchg
fwait
loop
leave
push
das
pushf
shlb
rcrb
and
cmpsl
xchg
mov
xchg
inc
xchg
pop
ds
mov
cmpsb
jge
jg
lods
mov
js
dec
jp
push
mov
dec
pop
bnd
mov
lahf
mov
pop
inc
mov
mov
pop
or
mov
mov
jne
xchg
jae
push
rorb
mov
fidivrl
or
call
fisubrs
pushl
pop
mov
mov
adc
sbb
in
fs
jmp
fistl
daa
test
in
movsb
outsl
jecxz
push
ret
push
out
jb
mov
xchg
dec
adc
popa
arpl
adc
dec
or
imull
pop
loopne
outsl
lock
xchg
mov
xor
and
popf
xor
jb
mov
outsl
mov
stos
xchg
jae
or
inc
rorl
push
ss
pop
cmp
lcall
xchg
aam
mov
cltd
inc
pushf
stos
pusha
and
adcl
add
cltd
lods
lods
inc
cmp
lods
sub
mulb
aaa
jecxz
jg
cmc
jg
psubsw
je
cmp
sub
dec
pop
mov
xchg
dec
std
incl
stos
fwait
inc
cmp
pop
add
scas
daa
sarl
jnp
jae
gs
mov
jmp
push
sahf
mov
sub
out
arpl
loopne
dec
sbb
rclb
xchg
pop
xchg
add
lods
in
loope
rorl
stos
in
stos
dec
nop
fadd
jns
inc
sub
push
movsl
cmp
mov
add
cmp
enter
movsl
dec
add
push
icebp
jmp
mov
fs
movsl
sahf
divb
cwtl
aaa
scas
and
fildll
outsl
fbstp
xchg
mov
addr16
dec
xchg
fadds
or
dec
fldcw
insl
pop
xor
cmp
hlt
aaa
push
xchg
push
shrl
mov
and
xor
sbb
cmpsb
pop
dec
xor
xchg
mov
adc
xchg
rcrb
fwait
fwait
jne
dec
mov
xchg
push
push
lret
dec
adc
xchg
pop
cmp
xlat
lcall
inc
fistl
out
mov
fs
mov
int3
inc
and
push
inc
rorl
pushf
rcrl
pushf
in
cmp
jns
dec
push
and
xor
dec
fsubrs
aad
inc
nop
hlt
mov
repz
jmp
add
rolb
pop
sbb
xchg
leave
aas
and
xchg
call
icebp
mov
repz
cmp
mov
out
pop
cmp
or
ret
pop
jo
cmpsb
push
mov
adc
sbb
cmp
mov
int
mov
mov
mov
movsl
xchg
inc
int
aas
sub
cmp
arpl
lea
aas
insb
aam
mov
pop
mov
push
stc
mov
je
sbb
cwtl
cld
cmc
pop
hlt
lods
mov
fs
nop
aaa
shlb
xchg
push
repz
sub
dec
and
jnp
les
add
xor
xchg
xchg
cmp
repz
jecxz
hlt
inc
dec
int
leave
cmp
sbbb
pop
adc
mov
shl
push
dec
pop
cmpl
cmp
out
notb
orl
leave
repz
lret
mov
cmpb
std
adc
pop
jns
pop
jp
cmpsl
xor
dec
pop
inc
int
or
test
mov
fldcw
cmpsl
shrb
scas
lret
dec
adc
xor
mov
repnz
push
xchg
jbe
xchg
movsl
mov
paddw
sub
mov
mov
xor
fnstsw
popf
scas
mov
push
insl
ja
ret
pop
lods
lea
in
loop
cmpsl
jmp
push
adc
mov
xchg
scas
out
stc
xchg
add
pop
or
sti
or
adc
imul
add
enter
pop
stos
cwtl
mov
mov
mov
fwait
inc
test
in
pop
test
add
ja
mov
mov
mov
push
ficoms
dec
inc
clc
xchg
push
mov
jecxz
in
lcall
out
fimull
nop
cmp
mov
pop
dec
rcll
adc
xchg
sub
in
clc
jns
adc
push
cmp
push
jp
adc
jns
sbb
loope
xchg
and
push
in
sub
add
mov
cltd
xchg
pop
dec
or
pop
insb
sbb
xor
mov
ficomps
cmpsb
cmpsl
pop
fstl
jbe
adc
xchg
or
bound
cli
xchg
dec
jb
fsubrl
test
sub
enter
pop
xchg
pop
jnp
or
cli
pusha
int3
int3
fildll
ljmp
shll
xor
mov
aaa
pop
hlt
push
adc
lock
add
sti
jno
inc
pusha
pusha
repz
and
stos
cmc
sbb
cmc
cmp
es
lret
stc
icebp
fimull
aas
xchg
push
call
sub
ret
enter
popf
mov
test
cltd
pusha
faddl
pop
mov
arpl
inc
popa
xchg
insb
lds
pop
stos
xor
dec
cmp
icebp
nop
or
or
xchg
les
jg
xchg
in
jae
cmpsl
dec
xchg
in
loopne
mov
gs
jb
xchg
push
mov
xor
bound
mov
shrl
xor
aam
push
stc
pop
nop
jmp
scas
subb
fnstenv
mov
mov
shrl
sysenter
es
ja
mov
mov
jno
stos
push
lahf
sbb
incl
out
mov
stc
mov
inc
int3
mov
or
fildll
int
adc
loopne
mov
jns
lea
scas
dec
xchg
jo
daa
test
movsb
test
xor
inc
inc
inc
mov
int
lea
mov
and
mov
frstor
mov
orl
add
inc
cmc
sub
jbe
dec
loopne
fmuls
test
imul
inc
jg
pop
je
testb
mov
jae
aas
sub
std
popa
int
ret
fucomp
jo
lea
cmp
psrlw
popa
jp
daa
sub
lods
adc
sub
sbbl
and
cmp
out
cmp
mov
mov
sbb
mov
fs
push
inc
sbb
lret
jno
clc
mov
sbb
lcall
or
and
adc
jnp
mov
cmp
clc
xor
sub
fcmove
outsl
dec
push
ljmp
xchg
movsl
popf
adc
neg
outsb
dec
inc
loope
cwtl
sbb
out
out
mov
fldenv
pop
dec
mov
pop
orl
xchg
inc
rolb
mov
sahf
jg
pushf
and
je
fstps
inc
int3
jg
adc
mov
popa
push
imul
loope
mov
and
mov
movsl
pop
aas
mov
loopne
xlat
stc
add
pop
in
mov
hlt
jmp
sbb
mov
xor
dec
je
in
push
mov
imul
sub
sub
jnp
push
mov
iret
adc
test
and
jecxz
push
mov
data16
outsb
cmp
movsl
mov
xorl
jp
fisttpl
sub
mov
out
jae
rcrb
push
sahf
movl
jo
sbb
xchg
rcll
or
add
lret
sub
cmp
or
scas
sbb
adc
lahf
test
aam
xchg
mov
mov
and
mov
fnstenv
push
or
mov
enter
mov
int3
dec
leave
in
push
out
push
or
jo
mov
mov
fisubrs
sub
cmp
aam
cmpsl
fmul
mov
outsb
aaa
jmp
nop
cmp
or
imul
cltd
int3
into
vhsubps
out
cmp
add
cmp
adc
inc
pop
push
fmull
dec
or
jp
scas
inc
adc
call
add
enter
shrl
icebp
dec
es
pop
xchg
ds
fildl
daa
arpl
in
insb
xchg
inc
xor
mov
mov
push
mov
popa
cmc
outsb
imul
mov
in
jnp
jmp
stos
xchg
test
push
add
add
cli
push
in
add
jecxz
sub
jl
and
movsl
and
fildl
mov
xchg
pop
bound
test
mov
addr16
lods
mov
dec
mov
jns
dec
ljmp
adc
mov
pop
jg
xchg
out
adc
sbbb
jbe
ss
in
pop
mov
push
sub
add
mov
and
les
cmp
inc
jg
cmp
inc
mov
mov
xchg
in
das
mov
sub
jp
dec
outsl
lock
je
and
fcomps
orl
loope
jecxz
andb
lea
push
jns
add
lret
loopne
das
mov
aam
movsl
add
adc
push
pop
fisubs
cmp
stos
xor
das
mov
call
fisubl
sbb
jp
fs
subl
push
fs
push
sub
jae
pop
or
adc
add
outsb
push
push
cmpw
mov
mov
cmp
dec
adc
loopne
jge
jmp
add
dec
xor
lds
mov
push
mov
sbb
fcomps
jne
dec
jecxz
mov
cwtl
repz
leave
in
dec
mov
mov
aad
pop
aaa
pop
shll
dec
cmp
orl
jle
adc
insb
std
mov
push
inc
loope
jl
orl
sub
jno
pop
into
or
nop
popa
ja
lcall
in
mov
xchg
add
mov
pop
mov
pop
les
dec
pop
cld
hlt
les
lea
adc
scas
xchg
cmpsl
adc
test
aad
nop
pop
ljmp
push
fiadds
and
push
inc
outsl
xchg
sub
jae
add
in
xchg
cmp
pop
cmp
arpl
jp
or
sub
mov
xor
xor
aas
push
lea
fldt
jb
in
xlat
xchg
lock
rol
fidivrs
xchg
inc
bound
cld
dec
cs
xorl
lea
jo
cmp
scas
insb
lcall
loop
iret
mov
xchg
cmp
mov
dec
dec
iret
stos
int
pop
xchg
fcoml
jnp
pop
xor
and
pop
mov
pusha
xchg
pop
mov
or
fs
sysret
or
gs
adc
jnp
out
pop
cmp
fcmovnb
push
das
clc
jns
xchg
bound
cli
push
and
xchg
cld
mov
push
sarb
loop
sbb
pop
sub
dec
add
dec
jecxz
mov
in
mov
stos
ror
xchg
pop
xchg
ret
jmp
xchg
add
pop
jns
in
mov
aam
xorl
mov
or
xchg
fbstp
lds
test
pop
pop
cmp
pusha
pop
adc
mov
fwait
les
pop
out
or
lods
xchg
lahf
out
jl
into
add
jge
fwait
in
inc
ret
mov
fld
lds
and
dec
cmp
cmc
or
mov
dec
clc
arpl
sbb
icebp
sti
xchg
sub
mov
sub
roll
cvttps2pi
or
outsl
imul
mov
xorl
cmpsb
cwtl
in
in
lret
xchg
xlat
rorl
or
push
andb
je
inc
hlt
enter
mov
jbe
push
gs
pop
xchg
xor
xchg
jge
jp
js
adc
out
push
jbe
aaa
jnp
int
imul
push
rcr
in
xor
add
mov
add
pop
push
aam
aad
dec
repnz
mov
pop
and
jmp
inc
mov
or
imul
outsl
test
mov
call
ret
cmc
movsl
inc
in
push
xlat
jp
xchg
mov
mov
adcb
mov
andb
jge
dec
cmp
pusha
out
popa
test
sub
inc
jp
xchg
outsl
xchg
in
out
mov
jbe
mov
xchg
popf
jb
inc
jmp
cmp
shrb
iret
mov
divb
shrl
rcll
mov
pop
xchg
mov
sbb
out
js
jge
adc
lea
cld
pop
pop
jae
je
push
pusha
xchg
sbb
rorl
mov
cs
shlb
pop
dec
and
shlb
idivl
xchg
fwait
rcr
insl
pop
mov
adc
sti
sub
icebp
dec
adc
cmpb
add
into
sub
das
mov
in
repz
jg
aaa
fwait
add
sbb
jns
test
inc
pop
dec
push
jns
lret
or
rorl
lock
mov
int3
or
movsb
fcmovu
mov
mov
lds
and
push
fidivs
xor
xchg
sbb
pushf
sahf
imul
divb
loope
and
mov
neg
ds
js
mov
lock
lods
in
gs
push
mov
mov
mov
orl
sub
add
xorl
pop
sub
mov
and
jae
cmp
aaa
push
shll
pop
mov
rol
fildl
dec
jg
ret
xchg
test
scas
xor
repnz
sub
lret
mov
pop
xchg
sub
loope
sub
jge
out
adc
leave
fdivl
dec
dec
mov
imul
xor
fildl
out
pushl
inc
sbb
cltd
inc
andb
int
mov
xchg
cmc
sub
dec
add
mov
fsubp
push
adc
xchg
sbb
mov
cmp
pop
xor
mov
mov
int3
mov
in
ss
dec
imul
push
cmp
leave
xor
out
rcl
jge
popa
add
sbb
pop
cmpsb
dec
inc
sarb
push
push
xchg
cwtl
add
xor
mov
pusha
cmp
jp
jne
cmp
jo
push
sub
div
outsb
push
inc
push
icebp
or
stc
sti
nop
add
add
aaa
push
xorl
mov
pop
pushf
cmp
cltd
push
pushl
inc
lock
js
scas
pushf
jle
mov
push
shrb
in
nop
test
adc
outsb
jne
adc
jae
inc
stos
mov
mov
jecxz
pop
aad
jmp
xchg
std
adc
outsb
adc
stos
leave
popf
mov
add
fimuls
cmpsb
sub
pop
jnp
inc
testb
cmpsl
lahf
and
cmc
adc
cmp
dec
jmp
frstor
push
mov
push
sub
pop
pop
xchg
push
and
push
or
leave
sub
or
popf
loopne
dec
std
hlt
aaa
imul
mov
outsl
push
cwtl
pop
mov
jmp
inc
gs
xor
cmpsb
add
hlt
mov
gs
sarl
cmpsb
add
sub
out
dec
adc
push
scas
push
clc
jp
inc
loop
add
pop
push
shrb
ret
lret
dec
cmp
mov
fxch
js
je
mov
mov
sbb
dec
dec
popf
mov
jnp
and
ret
in
icebp
sbb
clc
cli
and
push
jg
loop
mov
add
in
or
xchg
cmp
sti
test
fsubrp
fldl
mov
fildll
lcall
ljmp
mov
mov
out
aam
mul
popa
sahf
mov
shr
jb
mov
inc
cmpsl
leave
xlat
push
pop
cmpsb
sbb
ret
fistpll
hlt
sbb
loopne
fcom
ret
lds
ja
popa
ret
jno
and
ret
adc
mov
pushl
arpl
bnd
jp
sub
repz
scas
mov
and
add
inc
aam
icebp
adc
sti
jmp
mov
int3
pop
pop
xchg
addr16
mov
cmp
mov
inc
iret
adc
sbb
sahf
mov
xor
mov
test
xchg
push
out
cmp
xor
sbb
xchg
dec
rolb
xchg
aas
fcomp
andl
xchg
testb
mov
in
shlb
call
std
sti
sahf
loope
or
inc
out
fsts
xor
sub
cmpsb
mov
sahf
fdecstp
adc
xor
xchg
shrl
shll
insb
cmpb
out
add
mov
sahf
lock
rcrl
loop
mov
ljmp
stos
push
and
sbb
adc
int
push
inc
f2xm1
adc
addb
fisttpl
lret
leave
lahf
loope
adc
or
cmc
jne
and
adc
cmp
jg
pop
fsub
out
fsubrs
mov
clc
movsb
mov
repnz
cmp
fcmove
jnp
loope
sarb
and
out
sbbb
inc
xchg
adc
popa
push
xchg
xor
xor
into
out
xor
push
aaa
cld
adc
mov
push
neg
shr
pop
insl
jl
dec
dec
out
imul
jno
mov
flds
popf
add
pop
rolb
lods
inc
jae
push
mov
sub
ds
mov
jge
push
mov
lods
in
shlb
jbe
pushf
sub
or
loope,pt
add
add
ja
in
jmp
sub
xchg
sub
xor
dec
mov
cmp
cmp
lret
jecxz,pt
fcmovbe
jno
out
xchg
in
enter
jo
pop
pop
cmp
stos
sub
dec
and
mov
lcall
sub
jle
push
dec
and
xor
pop
testl
stos
lea
ss
scas
imul
mov
dec
leave
testb
and
movsl
lods
lahf
and
dec
dec
push
pop
vmptrld
add
mov
loopne
mov
js
mov
sbb
sub
mov
shrb
inc
in
jno
cmp
lds
sar
sub
movsb
xor
push
add
push
inc
push
xor
pusha
jb
neg
xor
cmc
movsl
adc
pop
fwait
xor
scas
add
dec
pop
and
pusha
jae
sbb
sahf
pop
test
repnz
popl
mov
loope
add
pop
aam
subb
roll
lcall
jbe
aam
lds
jb
daa
mov
pop
mov
jmp
xlat
pop
fs
daa
push
mov
les
inc
aad
lahf
jo
pop
sub
mov
mov
mov
ss
xor
sbb
push
fstps
xor
mov
and
fs
pop
fcmovnbe
adc
xchg
add
push
aas
lock
xchg
imul
or
push
insb
repnz
test
lock
cmp
or
adc
xor
lock
cmp
es
add
jle
stos
sbb
push
mov
xchg
lea
or
ficoms
leave
push
inc
cwtl
out
xor
cmp
mov
and
mov
movsb
sub
popa
out
xchg
lock
orb
and
push
pop
and
pop
clc
mov
cli
fistpll
mov
adc
push
insl
dec
or
pop
in
hlt
scas
cmp
or
sahf
jb
sti
dec
fisubs
mov
jge
xor
imul
and
mov
inc
jp
and
jns
xchg
in
popa
mov
adc
and
mov
aas
orb
mov
addr16
insb
xchg
xchg
rclb
loopne
add
mov
jno
pop
mov
and
pop
mov
movsb
adc
aaa
pushf
in
or
push
pop
xchg
pop
xor
jg
insb
inc
push
mov
xchg
leave
mov
pop
psrlw
push
mov
xchg
sbb
jne
pop
ret
mov
add
xorl
push
mov
ds
and
xor
repnz
mov
call
pop
xchg
push
cmp
std
pop
adc
lods
ja
dec
adc
fdivp
and
sub
fildll
aad
ja
cmp
sbb
les
pop
rcrl
jns
mov
rcl
push
in
mov
push
test
fcomps
mov
aaa
jmp
out
pop
push
or
push
loope
sub
xchg
shlb
jno
mov
lock
addr16
mov
sbb
adc
orb
test
loopne
pop
pop
mov
lahf
jae
inc
push
push
jno
xchg
sub
xor
ljmp
out
sbb
divl
enter
push
jge
movsb
pop
rcll
lcall
in
add
and
xchg
push
cmpsb
ds
popa
dec
mov
cmp
inc
mov
lods
das
test
and
popf
int3
adc
pop
lds
mov
and
sbb
push
imul
daa
mov
ja
xor
repnz
inc
js
mull
int
movsb
movsb
sub
jmp
roll
sub
cmp
pop
push
cmp
mov
inc
cmc
pop
push
jge
add
pop
jne
mov
pop
call
mov
sub
and
mov
sub
mov
or
repnz
xchg
mov
ret
adc
int
mov
sub
mov
sub
sub
adc
imull
test
fsts
inc
aaa
cmp
adc
lret
cmpsl
repz
fistl
cmovo
add
scas
mov
add
add
push
fldt
pop
and
inc
stos
jno
subb
mov
outsl
ds
or
xchg
insb
cmpsb
mov
fcoms
int
cltd
nop
add
mov
dec
pushf
dec
push
pusha
sub
iret
add
outsl
mov
rolb
push
test
orl
sub
clc
dec
push
pop
pop
xchg
xchg
lcall
out
dec
mov
jg
or
dec
add
adc
push
inc
jnp
shll
aam
xor
rol
pop
fwait
xor
lods
xor
outsl
adc
jno
mov
xlat
add
sbb
je
jae
mov
int3
push
adc
push
mov
xchg
pop
jb
mov
cmp
popa
xchg
stos
aaa
cmpsb
ja
push
pop
ss
in
push
icebp
shlb
push
xlat
add
pusha
mov
mov
les
inc
nop
add
jg
add
and
test
repz
mov
inc
xchg
mov
xorb
cmp
fwait
cmp
cmp
in
rol
jns
neg
inc
xor
mov
xchg
pop
into
je
mov
inc
and
lahf
sbb
jmp
aaa
stos
in
xor
aaa
xor
pop
loope
mov
loopew
inc
mov
jo
mov
mov
lods
ss
in
in
shrl
mov
push
xor
test
sbb
das
xchg
mov
mov
lock
mov
jno
sub
add
lea
test
inc
mov
push
int3
loope
shrl
xlat
push
sub
ficompl
pushl
movsl
xor
inc
ret
aad
pop
mov
inc
cwtl
addb
dec
icebp
xor
push
pop
es
push
arpl
add
and
xor
and
ret
int
adc
aas
ds
xlat
inc
popf
iret
jo
adc
add
sbb
mov
test
mov
fimuls
push
gs
int
dec
popf
inc
cmp
xlat
rorb
xchg
mov
jmp
lods
jae
lock
cmp
sub
cli
push
and
arpl
pop
sti
imul
into
and
xor
xchg
xchg
les
leave
or
mov
and
jle
shll
mov
xor
loop
mov
mulb
and
mov
repnz
iret
and
fistpl
or
scas
jl
dec
rcrl
jecxz
pop
or
inc
fisubrs
xor
cmpsb
outsb
mov
mov
add
sbb
jne
sarl
mov
adc
sub
ljmp
jo
out
jmp
dec
push
sub
mov
int3
sahf
jg
jle
shlb
inc
fisubl
pop
imul
rcrl
push
add
fwait
xchg
mov
into
pop
call
push
sub
out
xor
mov
das
inc
sub
jo
mov
xor
sub
in
push
movsb
insb
ret
cld
inc
jb
pop
jno
lock
sti
xchg
lahf
sahf
xchg
fyl2xp1
addr16
pop
mov
and
xchg
pop
mov
and
mov
repnz
nop
jnp
xor
in
pop
adc
cmp
dec
fwait
dec
xor
xchg
add
xor
inc
lret
jle
ret
xchg
push
xchg
adc
lods
cmp
xchg
enter
and
lret
out
xchg
mov
mov
or
cmp
jecxz
sub
mov
pop
add
push
cwtl
xchg
not
push
hlt
add
sub
les
outsb
push
cmc
movsl
fsubrl
dec
or
lcall
icebp
loop
lods
sbb
push
and
and
int
mov
mov
dec
xchg
xchg
daa
or
jne
mulb
fwait
mov
mov
movsb
imul
mov
or
pushf
sbb
pop
mov
cs
sbb
or
insb
test
loope
push
test
call
xchg
xor
fistpl
push
adc
mov
mov
and
push
call
jp
call
nop
or
mov
jg
xor
pusha
lcall
icebp
int
das
imul
jbe
sbb
jge
movhlps
or
daa
data16
sbb
idivb
ds
cmp
jb
mov
xor
dec
sbb
adc
push
mov
xchg
push
pop
jb
jbe
and
test
lahf
mov
rorl
xor
pop
gs
je
inc
dec
mov
lock
aaa
mov
mov
mov
ret
cmp
or
inc
jb
popf
aaa
push
push
jp
sbb
decb
fwait
adcl
dec
cmpsl
fisttpll
sub
aad
outsl
rcll
push
add
pusha
jae
push
sbb
dec
mov
int3
les
mov
push
mov
das
pop
adc
cmp
mov
sti
fwait
cmp
inc
or
aaa
push
adc
sub
mov
daa
push
push
add
mov
js
int
lock
icebp
add
mov
xchg
fdiv
daa
rclb
push
cmp
dec
push
pop
push
cmp
push
jne
mov
and
and
mov
push
dec
xchg
sub
imul
mov
pushf
or
test
stos
nop
inc
xor
out
and
stos
insb
sbb
mov
pop
sub
pop
nop
fbstp
fistl
pop
cwtl
jo
adcl
rcr
mov
shlb
repz
pop
dec
repnz
pop
enter
out
xchg
aaa
sahf
push
std
dec
inc
cmpsl
push
fstpl
pop
sbb
jnp
sub
enter
mov
mov
sarl
popf
sbb
jecxz
mov
sub
insb
stos
inc
sbb
repnz
dec
jge
jbe
pop
mov
addl
pop
mov
mov
shlb
xchg
fcoms
add
mov
sahf
test
jecxz
push
js
bswap
incb
sbb
xchg
sub
rcl
adc
and
inc
mov
sbb
push
pop
mov
leave
inc
mov
jl
lret
sbb
std
shrl
mov
dec
test
sub
int
and
cmp
jmp
pop
data16
push
sbb
adc
mov
scas
outsb
addb
push
push
dec
in
mov
xchg
repnz
mov
into
stos
adc
aad
xlat
dec
pop
psubsw
pop
cmp
or
jne
sahf
sahf
fdivs
imul
lret
call
mov
pop
mov
cmp
notb
add
push
adc
inc
int
mov
in
cli
push
loopne
cmp
loopne
ficompl
push
push
loopne
sbb
adc
lea
mov
rorl
int3
cli
inc
cmpsl
dec
inc
sub
test
push
test
mov
test
fists
add
inc
add
call
leave
add
ja
push
mov
addr16
mov
popf
fisttpll
pop
mov
mov
jne
int3
dec
inc
pop
fistpl
imul
fiaddl
dec
loop
out
scas
pop
or
or
xor
inc
or
roll
add
mov
adc
ret
imul
jecxz
bound
cwtl
xchg
in
inc
mov
insb
push
inc
sub
int3
imul
aam
mov
pop
fadd
jae
std
lcall
mov
xor
nop
xor
jmp
sbb
dec
mov
js
dec
xor
sub
idivb
push
sbb
dec
aad
psubd
push
stc
mov
jne
inc
mov
movsb
flds
addr16
mov
and
push
mov
mov
adc
pop
jae
mov
imul
jb
dec
aaa
and
push
cmpsb
sub
popf
push
es
inc
ret
mov
pop
push
sbbb
test
adc
cmp
test
add
push
jmp
adc
cmp
fisubs
xor
clc
cmp
push
mov
adc
ljmp
pop
fists
jns
jo
sub
loop
in
and
mov
mov
enter
jno
sarl
mov
cmp
rclb
mov
out
cmp
inc
and
jno
mov
popa
cli
out
aas
lds
xor
push
mov
call
mov
xor
lods
scas
js
negl
aam
notl
push
inc
dec
test
lret
mov
movsl
push
test
imul
adc
dec
sti
sbb
ffree
pop
and
fildll
pop
dec
sbb
or
push
and
sub
xchg
adc
ss
js
int
jbe
rorl
push
jns
mov
in
insb
fiadds
sbb
push
repz
aam
out
xor
pop
dec
push
xchg
fmuls
push
les
or
adc
or
and
inc
fsubrs
mov
in
jg
mov
pop
sub
fwait
sbb
cmpsb
add
shl
pusha
push
out
xlat
push
add
jp
inc
xchg
gs
cmpsb
mov
xchg
mov
pushf
mov
iret
adc
mov
rorl
pop
dec
stc
jns
mov
fidivrs
popf
scas
cmpsl
in
push
pusha
mov
mov
mov
clc
cmp
ret
std
push
pop
js
dec
sub
xchg
scas
movsb
test
xchg
adc
mov
je
lock
lods
mov
dec
cmpsb
loope
mov
mov
call
xor
sbb
jns
mov
xchg
and
std
cld
mov
dec
and
add
fcoml
jnp
pushf
lret
dec
loopne
and
mov
cmp
mov
stc
popa
cvtdq2ps
das
cmc
mov
jecxz
cmp
lret
xchg
xchg
inc
fs
mov
fnsave
xchg
rclb
mov
sub
and
add
cmp
and
fstl
std
or
ret
loope
push
dec
pushf
sub
and
push
jl
les
in
and
mov
ljmp
fmuls
in
dec
clc
mov
icebp
call
add
pop
adc
shrl
jg
ret
inc
dec
sub
in
into
cmp
mov
push
jecxz
add
movsl
ret
js
sbb
arpl
pushf
in
cmp
or
rorl
xchg
cli
in
decb
or
inc
inc
sbb
dec
sub
sub
jb
and
les
daa
das
push
sarb
into
or
adc
shll
dec
cmp
les
inc
and
xor
in
dec
adc
fucomip
loop
add
mov
mov
fdivrs
add
cs
das
push
and
sbb
fsubr
add
or
stos
cmp
loop
dec
jbe
cltd
pop
add
or
test
adc
shrl
in
add
or
mov
inc
clc
out
data16
inc
mov
jge
sarb
aas
sub
mov
inc
pop
mov
push
out
mov
mov
insl
fcomi
dec
push
daa
cli
cmpsl
pop
cmp
ret
push
mov
ret
aaa
mov
mov
adc
shll
dec
sub
shrb
pop
nop
dec
jno
or
mov
mov
dec
jmp
mov
sbb
dec
shl
nop
inc
pop
inc
or
loopne
sub
clc
cmove
hlt
mov
jo
mov
fwait
das
stos
jb
pop
sti
xchg
xor
in
fwait
in
cmp
adc
idivl
inc
push
jb
sub
dec
les
cmp
lea
lret
push
and
pop
mov
push
icebp
mov
dec
scas
mov
rcll
sbb
sub
push
inc
pop
mov
out
mov
mov
fstps
stc
sti
cld
pusha
ret
lock
sbb
cmc
shlb
pop
aas
sti
push
loopne
out
push
fnstenv
mov
pop
idivl
iret
iret
push
sub
lret
add
test
mov
gs
and
outsl
mov
xchg
dec
mov
fisubl
dec
jg
call
xchg
and
into
ds
push
into
xchg
sub
xchg
mov
and
mov
roll
jp
mov
std
mov
loope
testl
xchg
cli
sbb
loope
aaa
add
sub
cmp
movb
xchg
pop
mov
push
lret
repz
shrl
cmp
fwait
int3
and
sub
lods
pop
lea
cmpsl
aaa
add
pop
mov
or
test
ljmp
dec
pop
mov
fistl
mov
push
xchg
mov
jmp
mov
das
inc
ljmpw
cmp
pop
inc
dec
daa
dec
into
cs
aas
stos
cmc
cmp
notl
and
stos
daa
out
js
push
les
es
imul
and
cld
in
jo
xchg
push
insl
sub
jbe
xchg
sbb
adc
test
pop
rol
push
mov
and
in
int3
and
pop
inc
stos
stc
in
sub
xchg
adc
clc
sahf
jne
test
icebp
nop
xchg
or
jmp
lods
push
sub
insl
and
popf
ficompl
out
jo
dec
mov
add
sub
mov
cld
cmp
push
jle
mov
cmp
add
or
pop
mov
add
out
ret
addb
xchg
shll
xor
pop
test
shr
jp
add
xchg
jmp
mov
es
cwtl
int
mov
stc
dec
imul
cld
or
jno
inc
and
mov
mov
sti
jecxz
inc
repz
imul
int3
insl
daa
mov
pop
in
mov
dec
xchg
movsb
or
sbb
mov
pop
pushf
jb
test
loop
mov
jns
and
dec
jle
ret
xchg
xlat
pushl
cmp
sahf
or
xlat
dec
icebp
adc
cli
in
sub
or
mov
jl
mov
xor
mov
outsb
mov
mov
cmc
xchg
std
lcall
xchg
sub
nop
out
daa
call
or
pushf
test
lds
cmp
xchg
xchg
mov
mov
jl
mov
mov
int3
mov
mov
rcrb
dec
movsb
shl
cltd
push
lods
popa
lcall
cld
pop
push
pop
lods
xlat
sbb
lods
fidivl
pop
xor
xor
pop
jno
fisttps
stos
test
stos
cmpsb
mov
dec
push
stc
sbb
icebp
push
add
mov
pop
sti
or
cmpsb
fbstp
cmp
xchg
sub
xchg
ret
lods
pushf
sbb
outsb
lahf
mov
daa
fsubrs
test
or
aam
popf
cltd
ss
enter
int3
cltd
mov
int
mov
add
int
cmp
into
add
and
iret
adc
xor
addr16
sti
sbb
int
insl
test
fld1
pop
test
and
cmpsb
mov
jae
int3
mov
fmuls
jmp
lcall
addr16
inc
cmpsb
cmpsb
into
sbb
jg
stos
stos
inc
xchg
fimull
aad
xchg
jmp
bnd
mov
xchg
fidivrs
clc
adc
or
ret
aas
jne
cmp
or
rolb
mov
test
or
dec
mov
cwtl
xchg
cwtl
in
adc
ret
push
addr16
shlb
lret
sbb
mov
pop
lahf
add
sbb
out
loopne
gs
test
pusha
fdivrs
push
shrl
rorb
sbb
xor
outsl
lds
ja
pop
cli
movsl
jmp
add
pop
ljmp
pusha
lea
xchg
cmpsl
push
xor
fdivrl
and
pop
rorl
loopne
sub
leave
push
loopne
jecxz
xchg
add
mov
dec
cmp
insb
icebp
orb
inc
stos
aam
imul
push
hlt
hlt
out
iret
ret
cltd
dec
mov
mov
lods
jg
or
fimuls
mov
xlat
push
jno
das
cmp
mov
sub
mov
adc
shrl
sbb
inc
push
loopne
dec
cmp
cmp
jb
popa
pop
negl
sti
jne
push
aaa
jge
in
xchg
xor
pop
mov
push
mov
cmpsl
fs
fdivs
wrmsr
lret
pop
lahf
pop
cmpsb
or
jmp
push
sub
jno
lcall
mov
nop
or
push
add
push
aaa
std
xor
shll
mov
rclb
push
inc
das
scas
sub
popa
clc
sub
sub
and
sarl
or
add
push
clc
fidivrl
pop
inc
rolb
jo
std
clc
ret
adc
rcr
push
or
out
cmc
and
icebp
push
shrb
call
sub
xchg
aaa
mov
rcl
js
ja
mov
outsb
loope
cmp
adc
fs
mov
sub
and
in
into
xchg
cs
shll
lret
cmc
js
dec
addr16
cmpl
out
lcall
ror
push
std
je
fdivr
jle
dec
dec
ret
jg
imul
or
mov
jnp
and
fiadds
mov
popf
cli
mov
sbb
adc
pop
and
pop
add
je
hlt
add
add
cmp
vmovhps
mov
adc
and
cltd
inc
pop
sub
cltd
mov
ja
out
sbb
jecxz
sbb
fstl
mull
sub
or
int
sbb
dec
xchg
out
inc
push
lahf
mov
out
jb
xchg
bound
ret
jle
sbb
push
test
mov
inc
repz
dec
mov
std
or
pop
adc
xchg
subb
int
pusha
rolb
fists
rol
adc
ljmp
rclb
das
xchg
out
sub
xlat
xor
mov
mov
cmpsl
push
or
mov
sahf
jmp
pop
sub
xchg
mov
lods
xchg
iret
add
mov
push
and
adc
xchg
scas
pop
jge
cwtl
dec
sbb
movsb
enter
jle
je
jle
sbb
and
ljmp
jns
add
push
pushf
fmul
mov
imul
mov
js
lods
popl
aam
cmp
pusha
mov
stc
push
inc
int3
cld
aam
xchg
push
pop
jp
nop
mov
adc
dec
xchg
mov
jl,pn
jmp
dec
push
mov
mov
sbb
sbb
add
push
stos
sbb
cmpsl
xchg
pusha
or
xchg
das
pop
dec
fisubl
clc
insl
sub
fiaddl
stos
xchg
sub
icebp
lret
xchg
fnstenv
jnp
xchg
jo
test
cmp
mull
pop
pop
cli
adc
in
cmc
pop
pmaxsw
adc
sub
sub
cmpsl
mov
inc
shr
mov
xchg
jg
mov
int3
or
test
pop
lea
jecxz
jns
jno
je
fnstenv
sub
cmp
popa
cmp
jne
fdivr
and
fsubrl
cmpb
add
arpl
fwait
dec
mov
xor
cli
mov
cmp
mov
inc
int3
rorl
mov
jmp
lods
lock
pop
test
push
lds
insl
mov
pop
mov
cmpsl
and
in
xchg
push
outsb
add
add
dec
ss
fdivp
or
popf
mov
stc
push
dec
mov
aam
fdivrl
scas
cmp
scas
pushf
lods
pop
sti
and
jns
lds
jp
das
icebp
cltd
loope
pop
sub
jnp
nop
xor
es
inc
sbb
pop
cmp
jae
mov
pop
mov
adc
push
shrl
bound
sub
push
xchg
sarl
into
les
les
dec
scas
sub
push
jp
push
cli
sub
jns
jecxz
repz
aam
mov
dec
std
jle
push
lods
mov
adc
enter
mov
icebp
or
shll
ds
and
andb
repnz
pop
ljmp
and
or
rorb
cmpsb
mov
or
mov
mov
xor
mov
and
sub
cli
add
push
js
xchg
adcl
mov
adc
movl
cli
dec
arpl
paddsb
cmp
pop
std
pop
push
repnz
or
in
xlat
xor
or
aaa
xor
or
lods
test
xchg
and
adc
fiaddl
lret
call
arpl
xchg
das
jge
daa
fdivrl
sub
pop
popa
js
push
rorb
pop
stos
jae
dec
ss
push
jmp
or
dec
pop
dec
push
and
icebp
and
rcrb
fld
cmp
mov
mov
cwtl
test
push
je
jnp
stos
outsl
push
xchg
mov
dec
ret
push
iret
jo
xor
mov
adc
push
add
les
add
cs
js
ds
sahf
xlat
jnp
sub
mov
jns
movsb
cmp
test
fstpl
imul
push
dec
push
and
jmp
add
pushf
xchg
dec
mov
xchg
aad
jmp
hlt
lock
cs
test
aad
and
ljmp
jmp
lock
ret
sbb
fsubl
insl
lds
subb
scas
and
clc
jl
movsb
inc
lret
xchg
pop
test
or
jnp
xchg
das
push
lcall
cltd
flds
popa
leave
dec
pop
insl
addr16
dec
xor
mov
test
or
jbe
xchg
sub
out
rorl
jo
jmp
add
adc
mov
cmp
shl
mov
in
xor
adc
push
sbb
cwtl
xor
xchg
cmp
je
sub
scas
jne
in
mov
mov
xlat
rorb
cmpsl
xor
push
aaa
mov
decb
out
hlt
pop
testl
imul
rclb
iret
test
mov
ljmp
int
adc
jnp
dec
xor
cmpsl
ja
fisubs
orl
fxch
inc
std
cmp
inc
and
adc
xor
inc
lea
adc
cmp
sbbl
iret
xor
pop
jmp
insl
push
rcrb
pop
mov
ds
inc
hlt
push
mov
call
pushf
loopne
add
lahf
call
dec
lods
push
je
jb
addr16
stos
jp
sti
sub
aaa
mov
cmp
fsub
mov
xor
scas
and
stos
mov
or
pushf
in
repnz
fs
jecxz
insl
push
sbb
movsl
loopne
pop
popf
leave
push
jae
xchg
jp
ret
movsb
int
push
jo
and
adc
push
push
cmp
sub
push
mov
ret
or
mov
dec
adc
loope
inc
mov
xchg
pusha
clc
repnz
push
dec
clc
outsb
xchg
dec
mov
and
mov
loopne
inc
mov
push
jbe
mov
subb
stos
adc
dec
lock
lret
mov
jecxz
shr
push
test
push
jb
adc
and
setae
mov
into
cmp
addr16
js
sahf
movsb
out
jmp
fdivs
fidivl
inc
shrb
mov
dec
mov
cld
scas
lods
ljmp
mov
mov
arpl
xlat
xlat
notb
mov
and
fcoml
and
add
pushf
int3
out
movl
xchg
ljmp
loop
mov
icebp
cli
sti
cmpsb
mov
sbb
outsb
inc
sbb
cmp
call
jmp
or
mov
xchg
sbb
cwtl
and
inc
add
scas
std
sbb
pop
fldt
leave
clc
gs
mov
test
jbe
push
mov
lret
test
leave
mov
imul
repnz
mov
push
pop
repz
dec
sbb
mov
xlat
mov
xchg
add
mov
xchg
outsl
fwait
scas
jo
mov
mov
imul
testb
mov
sbb
test
repnz
mov
xchg
lds
fwait
add
push
call
negl
adc
xor
sub
adc
iret
push
and
mov
push
push
fidivrl
fstps
or
out
dec
and
mov
inc
frstor
mov
inc
shrb
inc
fnstenv
lds
add
add
fcoml
sbb
xor
pop
dec
xchg
ljmp
data16
and
rolb
xchg
or
xor
push
jns
mov
fldt
xchg
jae
push
or
xchg
push
mulb
inc
add
mov
movsl
lds
ljmp
mov
jb
dec
jne
mov
clc
lock
mov
js
mov
mov
adc
stos
call
es
add
xchg
repnz
push
sbb
cld
lods
lcall
add
aad
cs
pop
mov
lods
mov
xchg
push
xchg
mov
stc
inc
jmp
push
jecxz
insb
scas
dec
mov
sub
leave
push
out
and
or
mov
add
dec
int
repnz
jns
lret
sub
sbb
mov
dec
leave
adc
inc
pop
loop
cli
jmp
mov
loope
jecxz
jb
gs
ficoms
aaa
dec
aad
outsb
mov
sbb
jmp
xchg
out
xchg
sub
out
lods
pop
pop
fldcw
cmp
jno
ret
ss
lcall
jnp
loope
sbb
dec
inc
and
sub
push
ljmp
test
shll
decb
cld
rcr
lea
clc
jnp
or
sub
adc
fidivs
es
sahf
outsb
xor
pusha
add
std
pop
jns
cmpsb
mov
cmp
imul
cmpsl
xchg
lahf
hlt
xchg
and
sub
ficoms
fstpl
into
jl
mov
lahf
jl
orl
js
cli
mov
in
inc
pusha
xchg
mov
add
xlat
mov
outsl
lea
addr16
shlb
int3
push
cmc
push
pop
sub
jp
adc
fcomp
rcrb
inc
jns
mov
insb
arpl
mov
outsl
sub
mov
xchg
insb
jae
sbb
jmp
mov
aaa
push
clc
push
mov
fsubl
int
xchg
sti
in
les
push
sbb
jnp
popf
xchg
bound
mov
sbbl
ret
fsubrp
mov
clc
dec
test
pop
inc
shrb
cli
push
add
sbb
stc
push
push
or
lods
adc
and
pop
dec
sbb
sub
popa
add
sbb
inc
shlb
sbb
xchg
jle
hlt
test
movsl
pop
idivl
add
mov
cmp
ja
sbb
mov
and
mov
addr16
sti
movsl
sbb
xor
or
popf
push
xchg
pop
out
fs
jg
mov
dec
cwtl
mov
mov
or
xor
and
aas
push
push
mov
cwtl
push
das
das
pop
dec
mov
push
jge
movsb
icebp
sbb
bnd
mov
push
mov
add
aas
pushf
xchg
insb
cmp
xor
cwtl
xchg
cmp
aam
jnp
in
fistpll
sub
or
decl
mov
push
mov
inc
jecxz
push
cwtl
add
xchg
idiv
jo
push
pop
lods
aas
outsl
jge
xor
jp
dec
mov
mov
fwait
jecxz
daa
mov
xchg
loop
andb
inc
out
or
cs
mov
sti
aam
es
mov
pushw
outsb
jnp
jns
lds
lods
and
ret
inc
push
pop
or
das
int3
clc
popa
orb
es
lock
jmp
loopne
dec
enter
lret
push
dec
aas
rorl
loopne
sub
inc
lcall
push
adc
out
add
mov
scas
data16
pop
lds
mov
cmp
mov
push
test
mov
push
adc
jl
pop
inc
adc
les
mov
xchg
testl
pop
dec
cmp
jne
ds
scas
or
add
cmp
repz
fdivrs
sarb
rorb
sbb
add
loope
xor
sbb
xchg
lds
scas
and
mov
inc
pop
xchg
rol
adcl
js
jl
adc
negl
jmp
dec
out
lods
cmp
cmp
shl
push
push
into
fimuls
cld
test
or
lds
push
ret
cli
jb
lret
popa
or
daa
sbb
js
cmp
mov
mov
add
adc
sub
cmp
mov
scas
inc
mov
shrl
enter
xlat
cwtl
fnstsw
push
add
ficoml
cli
sub
test
mov
or
into
jb
jo
xorb
add
push
pop
inc
test
sub
sahf
call
imul
sbb
mov
aaa
repnz
push
add
shll
faddl
push
xor
mov
movd
out
loop
jmp
gs
es
out
lock
push
push
jns
lock
in
push
jl
push
dec
fnstsw
negb
push
mov
sbb
cmp
pusha
nop
xor
aaa
fyl2x
cmp
loopne
scas
pop
adc
pop
cmpsb
mov
push
jg
push
cmp
cmp
clc
sbbl
and
mov
loop
cmpsl
sti
gs
xor
mov
in
aaa
aad
lret
js
lret
mov
out
and
ja
aad
dec
add
rcrb
sbb
test
mov
inc
leave
inc
aad
outsl
pop
sbb
lcall
push
sar
sbbl
sub
jp
es
daa
inc
and
or
xor
int3
cmc
inc
rorl
push
or
cli
mov
and
push
popa
aad
in
mov
leave
pop
inc
lods
sbbl
ja
cmp
outsl
cld
inc
or
fsubrs
sbb
xchg
mov
loope
mov
mov
cs
lds
cmc
or
ljmp
out
mov
insb
out
sbb
adc
or
mov
fldt
jae
repz
jae
shl
inc
es
outsb
jae
insb
dec
adcl
ficompl
pop
fcmovnu
dec
inc
cmpsl
add
in
pop
adc
sbb
out
scas
ja
loope
stc
rcl
ret
xchg
nop
stos
lods
sub
mov
push
es
dec
and
aaa
xor
mov
nop
out
or
orb
mov
rcrl
scas
dec
cli
jmp
xor
or
cmp
pop
in
pop
out
sar
imul
push
notl
ljmp
pop
hlt
loope
lods
pop
pushf
dec
fldl
mov
dec
movsb
rep
xchg
or
jecxz
jbe
fdivrl
jg
ja
cmpsl
sbb
sarb
mov
cmp
pop
rcrl
ss
add
cmp
mov
decb
adc
lret
jb
jo
jbe
ss
cs
push
and
out
sub
fcmovb
or
xchg
push
xor
sbb
cmp
pop
rep
xchg
dec
insb
out
or
jmp
cmp
movsl
xacquire
xchg
cld
in
inc
dec
jbe
push
pop
adc
lcall
call
out
xchg
out
dec
adc
sub
cs
sub
mov
push
pushf
mov
lret
jbe
xchg
push
mov
xchg
sub
push
pushf
popf
push
inc
outsl
or
inc
cli
in
mov
dec
xchg
inc
fsts
loop
sub
fldenv
dec
or
rcll
fists
cwtl
scas
inc
imul
in
data16
and
dec
scas
adc
pop
movsl
loope
mov
into
mov
subl
pop
into
inc
pop
insl
mov
test
pop
push
xor
rclb
jg
push
movb
jl
rcrl
into
lret
xchg
repnz
cld
sub
inc
aas
or
inc
add
pop
inc
fs
push
leave
stc
sbb
movsb
jne
js
into
add
pop
inc
pop
aam
test
inc
repnz
fsubs
inc
or
mov
frstor
shrl
or
roll
ret
and
clc
cwtl
ret
sub
fdivrl
inc
push
inc
xchg
jbe
cmp
icebp
dec
mov
pop
ret
xor
neg
int
xor
mov
repz
xchg
test
cltd
mov
test
rcll
push
mov
or
in
or
push
dec
stos
cmpsb
xchg
add
jae
nop
mov
push
insb
sub
or
lahf
pop
insl
daa
sbb
gs
mov
xchg
fists
scas
mov
sbb
sbb
dec
inc
cltd
jl
loop
hlt
jge
and
xlat
ret
sti
xor
push
push
pop
das
loop
addr16
push
movsb
inc
sbb
push
xorl
push
jmp
add
bound
fbstp
mov
imull
push
lahf
jmp
xchg
mov
pop
sub
push
clc
or
mov
jno
lea
lods
sti
aad
data16
hlt
inc
push
insl
lcall
ds
loop
dec
lock
lret
xchg
xchg
jp
mov
mov
mov
subl
push
imul
das
dec
pop
xchg
repnz
xchg
imul
cmpsl
ficompl
push
daa
sarb
bound
cmovs
add
push
sub
mov
cwtl
mov
jecxz
sbb
roll
add
stos
pop
pop
sbb
sub
push
jne
into
sbb
mov
or
mov
mov
mov
xor
rcrl
lea
xchg
xor
popa
cmp
mov
cmc
adc
mov
jb
adc
daa
out
rorl
or
xor
imul
inc
iret
or
push
test
scas
fdivl
adc
mov
dec
and
sahf
pop
or
sub
mov
pop
call
ret
dec
sbb
adc
add
xlat
test
mov
rcl
sub
jbe
mov
push
pop
mov
jmp
popf
in
in
cltd
sub
dec
xor
jg
pop
inc
pop
adc
in
lahf
mov
jbe
call
pushf
clc
out
and
mov
int3
mov
sbb
in
cwtl
fdivrl
fsubrp
imul
or
inc
mov
pusha
sarb
divl
and
mov
ret
add
test
rcll
add
dec
cwtl
cmpsl
dec
mov
cld
pop
and
sahf
movsb
xchg
into
repnz
sub
adc
in
mov
jg
repnz
add
ret
lret
or
sbb
add
and
jl
push
jecxz
ret
push
mov
fs
lock
and
jecxz
sub
adc
mov
test
mov
rorb
jle
push
mov
jns
ficoms
mov
fldenv
mov
xchg
fisubrs
xor
jnp
das
lcall
add
gs
cmp
mov
and
push
das
mov
andb
inc
insb
add
out
xor
out
xor
mov
test
push
push
rcrb
xchg
pop
jmp
mov
loopne
and
dec
push
push
dec
inc
mov
jbe
mov
clc
popw
sti
js
push
push
jl
rcll
iret
pop
pushf
data16
cmp
jmp
fsub
add
lcall
xchg
jecxz
or
icebp
mov
arpl
push
jge
pop
stos
push
jg
pusha
push
and
sub
mov
mov
push
jge
mov
rcrl
inc
jo
imul
jle
jne
pop
out
sbb
cmp
icebp
cmp
cltd
pop
push
int3
cmp
cmp
or
push
rolb
inc
mov
mov
dec
sarb
pop
sbb
jle
or
xor
lea
and
or
in
inc
and
movsl
adc
imul
insb
fsubs
add
call
int3
cmp
test
imul
inc
and
loop
inc
xchg
cltd
nop
clc
stos
pusha
xchg
test
jae
test
jbe
pop
bound
inc
ret
test
pusha
nop
jge
mov
xlat
fsubl
or
pop
sbb
push
xor
xchg
out
cmp
push
adc
out
jmp
add
leave
adc
jno
fstpl
dec
lahf
test
out
clc
or
sub
sub
nop
add
push
jge
cmp
sysret
pushl
pushf
adc
jne
call
cmp
mov
mov
xchg
mov
mov
das
in
xor
push
shll
inc
lahf
out
daa
jb
cmpsl
ss
fwait
sub
and
ss
add
ja
push
sti
fucomi
nop
popf
loopne
cmp
mov
lea
repnz
popf
xchg
insl
inc
cmp
sti
roll
push
shr
popf
cmp
std
out
arpl
sub
adc
lret
jbe
adc
adc
lods
arpl
fistps
sti
push
in
push
inc
clc
test
leave
mov
outsb
jo
pop
lds
dec
or
test
pop
adc
sub
jns
jnp
out
ret
shrl
push
xchg
mov
mov
or
out
push
inc
or
push
sarb
dec
repnz
or
jne
cmpsl
dec
dec
or
adc
shl
rorb
loop
push
xlat
jp
lahf
jecxz
fdivrl
inc
je
mov
adc
imulb
xorb
add
xor
mov
enter
dec
cs
cmpsl
mul
xor
je
mov
and
mov
cmpsb
mov
mov
pop
mov
movsb
lods
lret
fadds
inc
stc
loope
subb
cmp
mov
push
pop
mov
or
xchg
lea
cmp
dec
mulb
xchg
aam
push
sbb
mov
repnz
cmp
lods
jge
gs
test
loope
sbb
jo
fwait
std
and
mov
cmp
sub
jmp
clc
je
xor
les
adc
cld
pop
mul
test
or
aaa
inc
das
call
es
xor
insl
loopne
ss
push
aad
sbb
cmp
lcall
scas
rcl
mov
inc
push
addl
jne
push
dec
adc
xor
mov
sub
sub
mov
jno
jl
fmul
fs
pushf
xor
cwtl
pusha
xor
repnz
ret
or
es
aad
lea
andb
adc
sub
scas
cwtl
lcall
sub
xchg
arpl
or
xchg
and
sti
sbb
aaa
xchg
ss
mov
ja
push
cmp
cmp
pusha
sbb
out
push
bound
test
cmp
push
lahf
jge
test
sbb
adc
xor
xchg
cwtl
ss
aas
shl
mov
xor
inc
mov
ret
cmp
cltd
lahf
mov
dec
xor
xchg
in
cmpsl
pop
mov
jnp
xlat
jbe
cmpb
mov
push
pushf
cmp
negl
mov
push
push
fwait
adc
jmp
adc
push
cmp
xor
cmp
xchg
mov
pop
xchg
cli
push
hlt
dec
mov
push
fisttpll
testb
cmp
add
clc
or
adc
leave
add
notb
ror
arpl
out
pop
adc
add
mov
cli
pop
cmp
sbb
xchg
loop
and
mov
mov
mov
inc
push
xor
fs
lahf
sub
xchg
ret
xchg
dec
into
aam
push
aaa
cmp
ss
popf
shr
rolb
add
mov
int3
pusha
inc
push
fiaddl
xor
aas
mov
mov
jnp
sti
xor
loope
rcl
inc
sbb
dec
mov
rclb
mov
pop
js
xchg
mov
mov
cmp
lock
add
ds
fisubrs
mov
mov
cld
imul
cmp
js
sub
cmp
cmp
jbe
fcom
jl
push
and
push
fs
lahf
add
out
inc
jle
push
pop
inc
sbb
mulb
cwtl
nop
xor
inc
outsl
cli
sti
out
in
push
sbb
cwtl
mov
sbb
xchg
mov
sahf
fstl
xchg
lods
rol
in
mov
adc
xchg
cmp
popf
xchg
or
pop
dec
cmc
and
jecxz
daa
aad
movq
loopne
das
or
je
mov
lcall
mov
mov
cmp
cmp
push
xor
sub
push
push
mov
shr
cmp
mov
sbb
inc
in
xchg
mov
mov
data16
lods
cs
fcomp
fdivr
jmp
loope
cmp
add
mov
clc
shl
or
jle
or
pop
sbb
scas
in
dec
lret
jmp
ror
adc
xchg
jae
xchg
test
notb
loopne
adc
xchg
cmp
outsl
fs
out
adc
mov
daa
rcll
in
add
leave
jne
lcall
mov
cmp
nop
sbb
mov
and
out
icebp
in
and
fcompl
in
sub
outsl
pop
icebp
and
inc
mov
push
dec
scas
and
sbb
cmp
in
or
xor
and
popa
movl
sub
nop
sub
outsl
xlat
xchg
push
dec
and
cmp
pop
fildl
inc
mov
pop
fildl
lock
mov
ss
mov
dec
mov
or
ljmp
js
xor
xchg
cmp
xchg
gs
dec
xchg
repnz
jb
scas
sbb
or
push
mov
xchg
sbb
loop
dec
sub
or
jns
cld
mov
mov
and
pop
fidivl
adcb
daa
in
shll
rorb
inc
fadds
mov
jo
clc
jo
movsb
mov
xchg
pop
dec
mov
enter
cltd
subl
movsb
add
aas
push
pop
call
out
lahf
insb
pusha
push
std
adc
or
enter
xor
and
push
xor
inc
test
push
hlt
lds
jl
fists
jnp
test
mov
push
mov
fsubs
push
loope
add
icebp
xchg
add
jb
add
lcall
insl
lods
or
xchg
insl
out
repz
inc
jb
jg
jnp
push
popa
fdivrs
ret
sahf
clc
pop
les
mov
push
dec
sub
ficoms
pusha
data16
cld
ljmp
or
bound
cmpsl
xor
xor
adc
and
aaa
cs
mov
test
jbe
push
sti
ljmp
imul
mov
in
jbe
cli
inc
sbb
icebp
lods
sbb
inc
out
dec
lcall
outsl
sbb
out
fdivrs
lds
push
jge
cmp
js
fmulp
shr
sahf
cmc
jns
dec
mov
mov
test
pushf
jbe
iret
pop
fstpl
iret
push
std
mov
cmp
in
dec
or
into
insb
inc
jle
loopne
popf
into
push
mov
jno
andb
jnp
enter
push
pop
sbb
jbe
dec
cmpsb
xchg
xchg
je
sarl
lcall
orb
and
inc
je
mov
fwait
data16
sarl
fistpl
insb
js
outsl
fucomip
mov
mov
push
or
pop
pop
mov
cwtl
mov
fildll
sub
rcl
hlt
jmp
loopne
mov
add
add
ret
aam
insb
das
mov
scas
mov
push
cmpsb
pop
lods
cmp
xor
mov
cmc
stos
sub
adc
xchg
sahf
test
cmp
cltd
pushf
pushf
outsb
clc
mov
xchg
add
fldl2e
out
jmp
or
jp
lahf
pop
xor
lcall
xchg
cwtl
and
cmp
in
js
std
cmc
mov
lcall
xchg
xchg
inc
push
sbb
in
lods
lods
and
dec
out
movsl
sti
mov
adc
nop
or
and
stos
mov
pop
cmp
ljmp
xchg
push
mov
xor
lock
aad
add
aam
ss
add
mov
test
movsb
push
fisubs
jnp
aad
lcall
into
imul
sti
cmp
push
push
outsl
cmc
jns
pusha
outsb
cld
xor
xor
dec
sti
dec
push
mov
add
push
stos
and
jmp
dec
aas
cmp
insb
dec
mov
movsb
xor
push
fisttps
int3
outsl
jae
cmp
pop
pop
pop
sbb
jno
test
pop
push
mov
or
sub
adc
inc
mov
cmp
mov
aad
sti
mov
mov
neg
push
imul
dec
pop
cmpsl
les
push
xor
jno
jnp
dec
aam
cs
orl
popa
repnz
sub
cmp
jns
jg
jne
cld
scas
mov
adc
and
and
repz
jno
dec
mov
sahf
inc
and
fdivrl
cltd
add
nop
aaa
ds
xor
frstor
dec
add
outsl
dec
aad
pop
adc
dec
xor
sub
hlt
lods
and
and
dec
ljmp
pop
cmp
int
cmp
or
push
dec
enter
mov
das
ljmp
xchg
fisubl
push
fs
cli
mov
jnp
pop
jae
outsb
sub
push
pop
loop
insb
mov
sbb
sub
pop
repz
cli
sbb
fistps
repz
enter
fimull
add
dec
pop
push
lahf
adc
xor
push
push
dec
and
pop
and
loopne
filds
mov
ss
push
repnz
sbb
data16
xchg
jle
jb
or
popf
or
fcmovbe
cld
jl
lahf
repnz
jp
sub
mov
sbb
sbb
push
dec
jb
gs
xchg
orb
enter
loope
rcrb
jne
ror
repnz
and
mov
sbb
mov
or
push
shr
adc
iret
cmp
and
and
push
pop
pop
data16
stos
or
jo
push
les
fwait
ja
inc
and
clc
rcrl
or
sbb
cmp
in
mov
sbb
push
fiaddl
push
ljmp
jb
mov
je
mov
push
cmp
lea
cmp
add
test
fadds
or
cmp
xchg
shrl
cmp
push
ret
inc
and
xchg
and
pop
xchg
mov
and
xor
test
and
add
add
in
pop
pop
fs
jne
jg
rcll
add
mov
pop
rcr
push
stos
jl
cmp
pop
jmp
cmc
sbb
int
fidivs
mov
cwtl
sub
sbb
sbb
aaa
pop
test
test
lods
out
pop
mov
xchg
xor
and
in
clc
mul
ljmp
gs
inc
sbb
imul
sbb
jb
andb
scas
dec
xor
inc
addr16
xor
push
xchg
out
andb
or
adcb
into
cmc
mov
pop
out
in
xchg
push
or
adc
mov
and
in
jbe
shlb
inc
lahf
cmc
sbb
sahf
inc
add
int
mov
fnstcw
xchg
inc
filds
in
jg
cld
icebp
push
dec
scas
dec
jl
push
xchg
sub
movsl
cmp
mov
sub
fistps
fimuls
inc
cmp
sub
fsub
lcall
popl
cmp
inc
mov
and
je
aad
or
dec
test
push
lds
shrl
inc
inc
or
test
and
idivb
add
shrb
mov
lret
jno
and
push
adc
xlat
pop
out
sub
out
add
sbb
lcall
dec
gs
push
faddl
xchg
and
dec
mov
iret
ljmp
mov
lret
test
ds
jne
in
gs
fildll
push
cmp
aaa
test
cmp
ret
test
pop
repnz
subl
adc
jnp
jecxz
lods
subl
push
clc
and
mov
addr16
adc
push
rolb
ljmp
lahf
mov
movsb
mov
out
ret
add
popa
adcl
loopne
and
and
cmp
cmpsl
mov
in
jecxz
mov
jmp
and
inc
adc
insl
xchg
sub
pop
or
sahf
mov
mov
lods
mov
clc
mov
es
mov
rcll
mov
or
movsl
xchg
scas
test
hlt
jns
fyl2x
cmp
push
xor
aad
pop
dec
pop
daa
loopne
ja
push
nop
addl
mov
sbb
add
mov
out
lds
lock
cmp
and
inc
lods
jg
popa
imul
insl
adc
add
iret
sub
icebp
loope
scas
inc
cmp
jns
pop
lret
dec
jmp
jne
enter
cmp
xor
in
pop
jmp
adc
pop
xchg
mov
jmp
or
repz
ltr
dec
adc
popl
push
or
loop
pop
ret
push
stc
dec
into
bound
ljmp
push
xchg
shll
jp
push
aas
add
mov
imul
imul
jecxz
lods
or
es
push
ja
enter
shll
inc
ljmp
dec
inc
xchg
xor
inc
jb
pop
push
and
cmp
pop
pop
add
call
addr16
fwait
inc
loopne
cli
enter
jl
fsub
dec
pop
ja
in
mov
cmpsl
push
jbe
jo
lret
pop
inc
jnp
clc
mov
inc
or
jnp
pusha
jne
fistpll
xchg
cltd
inc
jmp
jge
jl
mov
mov
mov
cs
iret
call
mov
adcb
out
jle
xchg
fcmovnu
dec
loop
repnz
pop
push
push
add
cmpl
insl
sbb
mov
lock
inc
ja
mov
popf
sbb
pop
fidivrl
cmp
jecxz
xchg
mov
outsl
mov
sub
or
mov
lcall
jbe
push
xchg
test
mov
xchg
inc
je
mov
cmp
xchg
add
arpl
mov
mov
mov
mov
mov
dec
add
mov
stos
dec
popf
popf
jl
or
lahf
imul
scas
rcrb
adc
movsb
repz
shlb
lret
push
and
cmpsb
xchg
cltd
fwait
dec
add
cmpsl
jnp
es
xchg
outsb
dec
std
and
hlt
pop
sbb
sti
push
and
mov
insb
out
mov
lock
popa
cltd
jnp
aas
jns
mov
fistpll
scas
shll
inc
subb
xchg
push
out
pop
pushf
mov
and
mov
gs
jb
lds
fistpl
lods
and
popa
cmc
stos
dec
mov
and
pop
setae
mov
lods
loopne
test
sbb
aas
or
and
xlat
jl
mov
sub
jle
push
into
inc
aas
jle
and
mov
pop
add
xlat
jg
jae
cmp
pop
cmc
and
inc
mov
add
inc
xor
mov
lret
adc
inc
stos
jno
or
mov
popa
rcl
sbb
push
and
mov
and
gs
cmpsb
dec
lahf
adc
je
stc
add
ss
fsubrl
jb
mov
xchg
sub
out
dec
sub
dec
add
pop
jb
pusha
in
push
shll
loop
shll
mov
icebp
aam
cmc
je
fidivl
scas
jb
fimull
out
fsts
iret
cwtl
dec
or
lret
add
cmp
mov
cmp
call
cmp
sub
mov
dec
addr16
dec
cltd
testb
cmp
gs
clc
jae
loopne
adc
adc
push
adc
push
pop
je
neg
jb
int3
sbb
cmp
mov
out
call
orl
rorl
jg
add
xchg
into
mov
sarb
mov
xor
push
and
jns
ficoml
cmp
arpl
mov
inc
mov
jb
jge,pn
aaa
pop
outsb
lret
cwtl
ja
or
call
orb
hlt
stos
pop
jae
mul
out
loop
mov
mov
mov
mov
cmp
stc
mov
or
adc
out
stc
je
ret
pop
fisubs
ret
jb
xchg
ljmp
mov
xorb
adc
frstor
lahf
loop
cmp
fmull
pop
cmpsb
test
or
push
arpl
repz
pusha
insl
inc
in
lret
imul
pusha
adc
lret
repz
lods
xchg
add
aam
mov
mov
andl
stc
bound
sub
clc
out
sub
push
pushf
bound
int3
push
loop
and
sbb
dec
jne
shrb
test
sbbl
xchg
adc
mov
std
fdivrp
mov
xchg
xchg
mov
in
ret
leave
pop
pop
mov
shl
push
out
js
push
out
insb
stc
mov
jl
mov
movsb
push
sbb
es
sub
ljmp
dec
aaa
push
or
loopne
cmp
xchg
cld
in
in
cli
repnz
mov
mov
push
aad
dec
pop
sbb
fidivs
mov
push
adc
faddp
movd
jns
sbb
xchg
imul
testb
jg
leave
inc
jno
adc
xlat
push
pop
fidivrs
pop
mov
mov
in
jae
sbb
shll
jno
ret
inc
lahf
ljmp
and
pop
dec
sbb
nop
insl
sub
das
inc
pop
adc
cmp
cli
mov
push
sbb
xchg
dec
aam
xlat
out
fldl
fcmove
fcoml
push
int3
pop
add
inc
jge
push
int3
xchg
dec
mov
sbb
xchg
jecxz
out
pop
mov
dec
imul
stos
rcr
movb
jno
dec
int
inc
cmp
adcb
in
push
in
dec
adc
mov
push
pop
or
jbe
mov
pop
jle
fcomps
jle
in
cwtl
ljmp
push
lret
xchg
mov
mov
jb
or
pop
jmp
out
inc
push
lret
icebp
push
xchg
cld
push
pop
rcll
adc
jnp
jmp
cwtl
pop
pop
cmpsb
sub
xchg
mov
jns
pop
cmc
jp
push
pusha
push
outsl
cmp
or
pop
ljmp
xor
shlb
popa
aaa
roll
rorb
inc
jns
mov
scas
add
ret
outsl
inc
in
outsb
or
loop
jb
mov
sub
mov
sub
leave
rcl
mov
jne
jae
pop
mov
movsl
popa
hlt
into
sbb
out
mov
jle
scas
push
xchg
cs
xchg
stos
jns
loopne
test
cli
scas
inc
or
lock
lahf
cmc
dec
or
jl
ds
cmpsl
sbb
outsl
hlt
rorb
cwtl
mov
pusha
test
dec
sahf
push
pop
repz
testl
pop
ds
mov
xor
addl
push
add
iret
fdivr
push
es
lret
test
xlat
ja
dec
addr16
push
rorl
push
inc
stc
pusha
pushf
sbb
sub
mov
and
scas
inc
in
sub
push
test
add
adc
xchg
and
sub
mov
leave
sbb
outsb
cltd
loope
mov
loope
and
in
push
stc
adc
mov
adc
fisubrl
add
xor
repnz
mov
out
adc
mov
aad
mov
dec
jb
add
loope
add
cltd
or
inc
enter
sti
mov
cmp
lods
incb
jnp
push
leave
shrb
xchg
cs
sub
dec
out
xor
pusha
inc
stc
mov
or
fiadds
aam
inc
sbb
mov
shrb
ss
fdivrs
fistpl
dec
push
xchg
int3
xchg
bound
inc
jle
xor
sub
push
clc
int
test
jno
ror
ja
fadds
inc
jno
ja
ds
dec
mov
cmc
test
dec
es
adc
jl
hlt
cwtl
xlat
ret
mov
mov
xchg
mov
ret
adc
test
adc
cwtl
mov
xchg
ss
mull
mov
or
add
cmp
mov
mov
arpl
leave
out
movsb
mov
or
adc
repnz
xchg
mov
inc
adc
xchg
aaa
daa
lret
out
mov
inc
push
add
pop
stc
adc
loop
mov
mov
movsb
mov
shrl
movsl
cltd
and
lcall
or
sub
in
dec
pop
fcomip
mov
xchg
imul
ljmp
add
cld
fisttpll
sub
cmp
out
adc
jne
negl
lcall
test
push
add
ss
sub
or
in
jmp
pop
xchg
push
jp
and
jecxz
inc
repz
aaa
pop
bound
clc
cld
mov
sarb
lahf
dec
dec
int3
cld
scas
add
sbb
outsl
enter
out
es
jg
and
jle
cmp
or
adc
bound
sub
pop
std
int3
inc
mov
loopne
pop
cmp
icebp
xchg
adc
push
mov
stc
dec
lea
add
shl
push
les
mov
cld
test
xlat
call
pop
fisttpll
mov
aaa
jecxz
mov
mov
popf
iret
mov
aad
testl
jne
daa
mov
dec
scas
test
xor
ficoml
xor
enter
cmp
xorb
xchg
mov
out
or
sub
push
dec
push
xor
adc
xchg
pop
xor
stos
aas
sub
adc
xchg
cmpsb
mov
scas
arpl
adc
dec
jb
outsl
fildl
fsubs
imul
jge
aas
add
aad
push
jg
jne
xor
jl
xchg
lcall
mov
xchg
add
adc
jbe
ss
fsub
xor
jno
test
popf
es
lret
push
inc
push
jae
and
js
pushf
ja
or
and
lea
dec
sbb
arpl
arpl
sti
dec
je
pop
das
pop
xchg
cmp
add
xchg
mov
outsl
adc
in
push
rorb
lea
outsb
dec
ds
bnd
adc
jg
xchg
mov
pop
push
mov
inc
das
push
pop
sbb
add
fwait
popa
jno
adc
adc
inc
cmp
into
mov
mov
decb
scas
xchg
mov
jnp
in
mov
dec
out
cmpsb
sbb
dec
add
sub
pop
or
std
imul
cmp
sbb
dec
fisttps
insl
loopne
lock
aaa
mov
jb
pop
jnp
mov
sub
insb
dec
hlt
gs
popf
add
inc
xchg
ret
pusha
jmp
jne
sub
adc
fisubrs
in
or
sbb
out
sub
stos
int3
cmpsl
in
orb
mov
mov
arpl
sbb
cmpsl
aaa
out
sub
rcl
adc
cmc
push
pop
cmpsl
lock
pop
pop
adc
sbb
cmpsb
insb
js
dec
cmpsl
xchg
dec
adc
movsb
xlat
and
cmpsb
js
fidivrs
cmp
insl
xor
test
pop
popf
or
sbb
push
in
cltd
mov
pop
scas
sub
xchg
adc
mov
push
movsl
cmp
ljmp
jb
pusha
stc
push
insb
test
clc
xor
aas
clts
leave
call
inc
out
leave
inc
dec
ret
cmpsl
mov
mov
sahf
dec
sbb
les
pushf
push
pushf
cs
shlb
mov
cmc
lret
pushf
mov
addl
ret
rclb
xchg
out
dec
mov
imul
out
xchg
adc
ljmp
setne
jb
ret
lds
gs
push
mov
movsb
popf
idivb
inc
pop
testb
ljmp
pop
leave
mov
ss
out
xor
lret
or
push
in
pop
cli
add
mov
mov
lock
mov
pop
mov
movsb
cltd
cmpsl
mov
adc
sub
adc
cwtl
jl
repnz
arpl
lods
jg
inc
daa
in
lea
xchg
insb
je
movsb
clc
push
adc
jae
sti
xor
mov
lea
lods
mov
lcall
int3
add
fistps
rcrb
mov
dec
test
movsb
pusha
add
bound
jecxz
mov
int3
rorl
sbb
pop
test
mov
sub
jg
cmp
fimull
and
adc
dec
xorb
inc
fwait
jo
adc
ret
lcall
dec
in
sbb
fldln2
mov
add
mov
testl
dec
xlat
jp
push
test
lret
jle
xchg
xor
lods
rcll
test
jg
mov
in
xchg
inc
jo
shrb
outsl
sub
stos
push
mov
js
outsl
pusha
loopne
aam
jg
ror
jbe
jl
call
ja
sbb
mov
outsl
adc
push
mov
inc
adc
in
lods
add
mov
sahf
mov
movsl
sti
push
in
decb
je
outsl
das
cmp
std
adc
xor
and
mov
or
mov
xor
test
xor
stos
inc
cmpsl
imull
cmpsb
sub
sub
dec
sub
out
xlat
adc
adc
cmpsl
imul
xor
es
loope
cmpl
sbb
push
sbb
inc
xor
push
jecxz
mov
mov
fldcw
out
dec
aaa
jmp
test
xchg
js
cmpl
mov
pop
mov
pop
adc
test
in
pop
sbb
shl
mov
pusha
pop
mov
jne
adc
mov
and
movsb
mov
dec
in
int3
pushf
pop
hlt
lods
es
sti
inc
ss
mov
jne
mov
ret
insl
nop
and
sarb
movsl
fsts
fstps
test
pop
xchg
jge
out
loope
lcall
adc
dec
fisubrl
mov
icebp
xchg
cmp
out
cmp
mov
mov
popa
xchg
xchg
rcl
shll
fdivl
xchg
inc
scas
dec
popa
xor
mov
mov
cmp
push
pop
cmp
or
sbb
xor
mov
adc
sbb
cmp
ret
xchg
das
lock
xchg
mov
lods
cmpsb
mov
xlat
cwtl
mov
push
sbb
sub
jl
mov
sbb
and
into
je
cld
js
xlat
jle
push
fdivrs
insl
push
and
push
out
jl
je
gs
xchg
outsb
sahf
push
je
addb
sahf
dec
add
mov
pop
repz
movsl
pop
dec
insl
mov
cmp
jae
pop
xor
les
call
mov
add
aad
cmp
movsb
and
out
push
pop
adc
jmp
pop
mov
jnp
xchg
neg
cmpsl
pop
xor
inc
push
jp
inc
jo
sub
cmp
jne
cmc
push
pxor
out
cmp
jmp
add
mov
and
imul
test
jns
xchg
outsl
mov
dec
add
lret
in
mov
dec
dec
pop
jbe
jecxz
shr
jg
mov
fucom
das
ss
add
sub
in
jl
scas
inc
dec
mov
mov
stos
sbb
mov
mov
lods
dec
xchg
xchg
rcr
or
sbb
push
push
adc
mov
push
sbb
cmp
in
popa
outsb
cli
loopne
shlb
testl
addl
inc
adc
push
cmp
xor
pop
mov
outsb
std
fnstsw
cltd
cmp
fnstenv
cwtl
pop
xchg
mov
mov
cmc
mov
inc
cmp
scas
lea
mov
xlat
in
gs
rorl
out
mov
mov
outsl
imul
aam
dec
subl
dec
idiv
ss
int
subb
mov
sahf
or
mov
sbb
xor
pop
mov
dec
xor
sub
nop
sub
push
div
stc
xlat
push
icebp
sarl
rcl
imul
ds
out
clc
aad
inc
adc
mov
imul
enter
push
aad
push
jge
and
inc
jg
push
sub
mov
jnp
movsb
cwtl
jbe
sbb
outsl
mov
or
aaa
fisttpll
push
jbe
add
xchg
out
cltd
push
jl
lret
fcmove
nop
jl
and
push
mov
popf
xor
inc
pop
rorb
inc
scas
push
mov
repnz
and
int3
adc
or
mov
push
pushf
into
inc
mov
lret
ljmp
pop
sbb
cmpsl
adc
push
sub
cmp
cmp
dec
sti
sub
test
in
mov
les
in
ffree
xchg
sub
pop
sub
out
mov
mov
push
lcall
movsl
adc
je
and
dec
fmul
scas
xchg
mov
inc
adc
jl
push
sahf
jmp
mov
mov
lret
push
and
jo
test
leave
aaa
xchg
movsl
mov
push
xlat
addr16
jmp
sub
loopne
aaa
mov
ds
mov
mov
repnz
sub
dec
mov
and
testb
sub
xor
ja
cmp
push
cmc
sbb
outsb
mov
push
cmp
out
and
sub
nop
lock
mov
ljmp
push
lret
mov
jmp
mov
dec
mov
dec
jge
jge
mov
subb
insl
scas
dec
mov
int
mov
cmp
or
pushf
and
or
mov
into
sahf
or
out
test
mov
repnz
pop
cmpsb
add
int
lods
sub
push
adc
sbb
mov
push
xlat
pusha
in
sub
mov
mov
jnp
cmp
jmp
add
and
negb
scas
add
dec
in
cld
jae
ja
lcall
in
stos
mov
ret
stos
fiaddl
adc
xchg
pop
sbb
test
imull
add
mov
inc
mov
push
lods
mov
push
out
out
push
in
js
jmp
in
lret
push
pop
insl
mov
mov
pop
cmp
sbb
jl
repnz
aad
adc
dec
rol
pop
fs
jb
mov
inc
mov
dec
add
loopne
xchg
xlat
sarl
cmp
imul
in
lcall
lcall
les
pop
xchg
popf
ljmp
mov
mov
das
mov
movsl
das
mov
xchg
popf
shrl
jge
add
xchg
sbb
inc
out
popa
mov
add
pushf
dec
scas
pusha
or
ljmp
out
in
pop
call
jg
out
fucomip
dec
sub
rolb
jmp
test
adc
push
jg
add
lods
call
cmp
push
int3
shufps
adc
pop
xchg
add
stc
lret
in
dec
cmc
and
nop
pushf
cmp
pop
lods
mov
aas
stos
loop
clc
mov
cwtl
aad
loope
pop
lahf
int
push
jl
add
repz
mov
push
cltd
imul
inc
add
push
dec
insb
pop
adc
jecxz
jns
icebp
das
popf
sysret
mov
repz
xchg
sub
clc
aas
loop
imul
jb
mov
cmp
dec
js
repz
imul
pop
cmp
and
out
stos
fcomps
and
rcrb
aaa
sbb
inc
mov
fdivrs
ret
call
xor
xor
adc
push
mov
pop
jmp
xor
dec
sahf
mov
cmpsb
cltd
les
movsb
lret
push
xor
filds
ss
dec
xor
add
mov
enter
mov
adc
enter
pop
in
jbe
pop
aam
mov
aam
sbb
iret
xorl
or
lods
in
std
rorl
jns
and
loopne
test
sbbl
mov
push
stc
shrb
xor
or
lods
addr16
insl
enter
add
inc
imul
add
ljmp
scas
sub
mov
mov
insl
rcl
lret
sbb
add
jae
add
mov
cmp
mov
push
aad
mov
insl
pop
pop
lahf
push
cmp
adc
cwtl
mov
call
sbb
sti
fsts
test
nopl
inc
mov
rcrb
add
jnp
fistps
cld
cld
mov
pop
add
iret
in
cli
sbb
pushf
cmc
jp
inc
out
xor
test
flds
fs
push
mov
add
outsl
push
jg
rcl
shll
aaa
sbb
dec
jle
cmpsb
sbb
out
out
iret
pop
sub
arpl
xchg
leave
jecxz
sub
cli
mov
push
mov
inc
loop
inc
pop
xchg
mov
xchg
mov
out
or
or
cmc
andb
mov
pop
adc
divl
push
xchg
aas
push
mov
hlt
ja
inc
shrl
mov
clc
pop
mov
shr
lret
cwtl
push
sbb
leave
dec
dec
mov
rorb
rcrb
jl
sub
xchg
pop
int3
test
add
imul
xor
cmp
ret
sbb
movsb
inc
movsb
repz
jno
scas
jmp
call
pushf
add
mov
xorl
xor
fucomip
aad
and
test
or
addr16
lock
jecxz
or
test
mov
repz
stc
sahf
out
sub
test
pop
les
std
mov
jg
fidivrs
idiv
xlat
inc
add
aad
sub
arpl
out
mov
mov
in
sub
cmc
adc
shrb
dec
pop
loop
xor
arpl
icebp
mov
add
mov
in
lcall
pop
test
mov
lea
mov
cmp
push
xor
sbb
sub
jecxz
jns
insb
inc
mov
lcall
jae
xchg
pop
imull
loopne
jo
dec
inc
jmp
xchg
fdivl
jo
aas
outsl
cmpsb
mov
fsubrs
cmp
mov
inc
xchg
xchg
js
inc
call
pop
push
sahf
mov
arpl
aas
dec
out
sahf
pop
cmc
fsubrl
pop
cmp
repz
jns
lret
mov
dec
sub
dec
mov
bound
xor
data16
pop
and
scas
sub
xor
in
sub
outsb
shll
mov
xchg
sub
popf
scas
sbb
mov
popf
rclb
loopne
dec
mov
jmp
jle
mov
das
mov
nop
mov
adc
mov
inc
iret
inc
call
cmc
pop
mov
jp
loopne
loope
mov
pop
dec
hlt
jecxz
notb
loopne
stc
popf
flds
jl
pop
icebp
int3
add
lds
pop
mov
cltd
fmull
cmp
push
daa
and
testb
inc
call
pop
sub
pop
mov
jno
dec
push
xchg
movsl
inc
arpl
inc
fisttpl
adc
fiaddl
lock
int3
xchg
jno
xlat
fistpll
add
popf
cmp
shl
jp
lods
xchg
pop
jns
dec
mov
mov
fidivs
and
dec
in
inc
enter
aas
sub
pop
jmp
pop
movsb
mov
adc
fisttpl
ljmp
in
mov
push
dec
fmull
out
lds
cmpsl
push
aaa
add
fidivs
pop
pop
xchg
xor
sbb
mov
mov
mov
cmp
xchg
xor
nop
lods
sub
xchg
popa
xchg
sar
mov
js
dec
cmp
add
cmp
mov
clc
pop
scas
ror
lahf
mov
xor
sub
add
push
jmp
and
pop
mov
test
mov
mov
mov
xlat
adc
dec
fnstenv
push
mov
xchg
pop
div
arpl
mov
mov
dec
push
push
mov
adcl
pop
mov
test
outsl
push
dec
or
iret
or
lods
js
jp
sti
hlt
jp
pop
fwait
test
ret
cmp
dec
push
fadd
insl
ss
push
or
das
test
or
loope
out
lods
xchg
mov
adc
test
pop
sbb
push
xchg
xor
pop
rclb
pop
sti
into
stc
push
scas
pop
mov
aam
ss
mov
jns
sub
mov
lods
ficoms
cmp
out
roll
push
adcb
ljmp
xor
nop
imull
call
pop
sarl
test
or
or
sbb
outsl
push
inc
enter
pop
mov
dec
jp
inc
lcall
push
cli
jns
sti
xlat
pop
subl
inc
fcoml
xor
insl
mov
sbb
test
stc
gs
negl
testl
push
clc
mov
xlat
mov
sarb
stos
frstor
push
pop
sarb
jno
jle
lret
repnz
popf
inc
add
sub
pusha
xor
ds
sbb
sbb
sub
jge
push
sti
adc
ffreep
in
scas
fucomi
mov
add
inc
aas
outsl
adc
sub
cld
aaa
fcom
jno
out
fpatan
mov
mov
xchg
popa
in
or
das
test
sbb
adcl
cmp
das
roll
add
fcompl
ljmp
inc
cmpsl
sbbb
lret
mov
outsb
rcll
repnz
inc
mov
lock
int3
add
jne
push
add
inc
xor
jl
icebp
mov
jns
cmp
mov
sbb
xor
insl
pusha
xor
and
inc
inc
adc
pop
mov
mov
call
cmp
inc
setp
fcomi
jns
xor
lret
xchg
in
mov
ss
jbe
in
ja
insb
cmp
fiadds
in
orb
inc
sbb
hlt
jp
rclb
jge
mov
push
push
lret
cmp
mov
mov
into
jne
inc
mov
sub
lds
dec
das
push
jg
scas
add
cmp
or
inc
popa
popf
mov
testl
daa
jecxz
sbb
aad
ds
fmul
xchg
cmp
inc
xlat
orl
adc
xor
push
scas
scas
test
sbb
cmp
test
sub
lods
fcoml
lods
inc
push
cs
xor
jmp
push
rclb
ret
push
add
jo
jp
cmp
fsubl
ljmp
add
sub
scas
xchg
fs
call
stc
rol
dec
ret
inc
push
cmc
lock
sbb
sub
adc
mov
aad
mov
jg
mov
cs
xor
into
test
lcall
and
lds
bound
pop
inc
outsl
push
jl
mov
sbb
jns
es
inc
in
aad
mov
jno
jge
jle
xchg
push
stc
notl
cmc
mov
pop
jno
inc
test
loopne
aas
fsubl
fimull
cmc
and
mov
pop
das
pop
aad
setl
sub
lret
pop
ret
jno
sub
shl
xor
pop
daa
add
iret
sub
movsl
incb
jne
push
or
lods
mov
test
shrb
adcb
sbb
imul
wrmsr
or
push
lret
jecxz
xchg
pop
aad
jne
mov
xor
sbb
imul
or
nop
sbb
pop
stc
scas
loop
cltd
inc
jge
ret
mov
bound
dec
loopne
xchg
sbb
dec
xchg
xchg
xchg
sub
movsb
xchg
daa
cld
ret
mov
int
std
pop
pop
sub
imull
inc
or
xchg
xor
test
lahf
and
jecxz
push
lcall
mov
sbb
fwait
pop
pop
sarb
and
cmp
add
mov
xchg
add
pop
lcall
pop
sbb
mov
fisttpll
loop
cmp
cmc
xor
mov
shlb
sarl
js
mov
jno
push
je
loop
repnz
sbb
ss
or
mov
add
push
adc
push
ljmp
push
jne
icebp
lods
movsl
fwait
sbb
xchg
add
mov
adc
xorl
sub
add
arpl
decl
and
ja
dec
cmpsl
pop
ja
and
xorb
mov
sahf
subb
pop
bnd
xor
dec
popf
and
nop
in
sub
cld
stos
or
dec
jge
in
mov
aaa
xchg
xor
inc
inc
clc
lret
adc
pop
fdivrl
out
aad
add
push
hlt
aas
test
dec
xor
in
dec
xchg
xor
dec
jp
inc
mov
push
cli
mov
sub
imul
outsl
out
fcmovbe
cmp
call
out
lds
mov
les
fmul
xor
dec
fsubl
xor
idivb
mov
rcr
dec
sbb
mov
pop
vphaddbw
push
mov
cmp
rcrb
inc
inc
pop
pop
pop
xabort
sbb
lret
pushf
mov
xchg
ja
push
cmpsl
pop
pcmpeqw
sbb
pop
das
icebp
bound
pop
mov
sub
xchg
outsl
jns
sti
ret
cmp
jmp
in
push
cmp
jb
or
lods
xchg
adc
lock
imul
aad
mov
mov
aad
jno
mov
lock
add
jae
pop
cltd
icebp
insb
in
mov
pop
adc
or
push
lds
dec
out
addb
xchg
push
mov
inc
xchg
je
mov
pop
inc
nop
fimuls
mov
mov
std
jl
cwtl
rep
and
cmp
dec
mov
xor
test
in
cmp
rcl
ss
in
xchg
sub
push
inc
xlat
xor
jno
jo
mov
mov
or
lds
pop
rclb
mov
aad
adc
pop
dec
mov
xchg
xor
in
jmp
xor
sahf
shrb
mov
and
jb
repz
shlw
sbb
adc
loope
cmp
imul
rolb
pop
or
arpl
enter
mov
loope
push
pop
loopne
mov
aaa
xchg
fs
imul
mov
in
inc
data16
call
popa
negb
mov
aam
cltd
in
scas
shl
scas
lods
push
jl
insl
xor
pop
and
in
jne
lods
daa
pop
dec
ljmp
add
cmp
or
add
jne
sbb
push
sahf
jge
push
lahf
outsl
dec
jg
pop
mov
nop
cmp
lea
mov
xchg
xlat
or
mov
imul
ficompl
ror
and
xchg
sub
jns
sbb
es
mov
ljmp
fs
cmp
int
adc
popf
xlat
cs
mov
and
sti
into
xchg
cmc
xchg
xchg
or
xchg
aam
andb
shll
iret
xor
pop
jge
ror
adc
stos
adc
je
outsl
in
xor
imul
ror
sar
jnp
mov
fs
into
addb
sbb
adc
test
jnp
inc
clc
shlb
clc
inc
pop
aaa
jmp
fsubr
pop
ret
mov
aas
xor
xor
or
mov
dec
adc
mov
aas
test
cli
jnp
jne
jp
fsubrs
inc
ljmp
sub
mov
mov
popl
shlb
xchg
push
add
mov
clc
mov
xchg
or
cld
inc
push
and
ja
add
flds
push
xchg
mov
xor
mov
insb
cmpb
out
inc
add
lahf
push
ds
pop
or
xor
adc
mov
pop
inc
loopne
adc
mov
jne
and
jmp
pop
xchg
sbb
push
out
mov
test
inc
inc
shlb
lahf
push
insb
add
mov
and
outsb
dec
dec
dec
mov
inc
mov
push
fstps
movsb
or
testb
jns
xchg
movsl
mov
pop
add
stos
and
pop
mov
add
incb
sub
repnz
popf
jmp
lahf
dec
and
rcrb
inc
repnz
mov
fsubr
js
aam
das
pop
xlat
mov
sbb
fidivl
push
and
cmp
add
pop
add
ja
cmp
push
ret
jecxz
sbb
cmpb
rorl
lods
mov
out
fwait
dec
addb
cmc
pop
aad
shll
and
xchg
movd
es
dec
stos
xchg
or
or
jae
arpl
and
or
dec
add
and
and
or
les
lods
out
push
clc
test
mov
mov
sub
inc
call
out
ficoml
adc
shrb
dec
test
nop
or
pusha
sbb
inc
ss
sbb
adc
inc
rol
out
mov
jle
adc
sub
shrl
rcl
cmp
mov
mov
cmc
outsl
pop
test
push
cli
inc
enter
cwtl
push
jge
ret
out
cmp
call
or
pop
push
mov
in
sar
insl
jp
push
xchg
rcrl
dec
xor
xchg
fnstenv
xchg
cmpsb
jnp
dec
mov
test
mov
mov
cli
or
iret
or
ret
pop
pop
or
adc
inc
mov
pop
pop
add
int
jg
cmp
ja
push
pushf
mov
shll
xor
enter
xor
push
aas
iret
dec
repnz
or
data16
cli
repnz
adc
cs
test
lods
in
mov
clc
mov
aad
jno
inc
les
ret
inc
pop
pop
fildll
iret
test
mov
out
orb
popf
and
push
cmp
xor
sbb
jmp
pushf
xchg
int
divl
mov
jle
shrb
push
jl
stos
icebp
arpl
jae
loop
cmp
ss
mov
and
je
cmp
mov
mov
sbb
sbb
pop
xchg
xor
pop
orb
ds
scas
inc
loopne
xor
stc
jno
leave
push
insb
cmp
inc
add
mov
mov
lahf
gs
in
sub
and
fldl
mov
jg
inc
in
jg
dec
xorl
imul
and
pop
inc
push
xchg
mov
sbb
xor
movsb
add
push
std
je
inc
inc
repnz
int
mov
mov
int3
dec
jecxz
ja
lcall
add
xchg
jbe
fxch
xchg
scas
lods
push
mov
out
jns
sbb
dec
insb
or
xchg
aad
pop
mov
adc
xchg
loope
pop
test
clc
call
cld
add
xchg
shlb
ljmp
inc
push
mov
inc
mov
fwait
mov
push
xor
fmulp
ret
jnp
jl
bound
das
sbb
pop
subb
sbb
hlt
push
cld
push
cmc
pop
cmp
add
mov
popa
mov
or
into
lock
add
jns
sub
sbb
sub
cmp
sti
dec
sbb
inc
inc
cmp
fimull
mov
mov
lahf
sbb
lret
pop
sbb
mov
out
jae
scas
lock
sub
scas
loop
cmc
sbb
xor
ret
rorl
sbb
fldenv
outsl
push
xchg
xor
add
ret
xchg
push
stos
or
orb
in
lahf
loop
repz
ljmp
or
mov
sbbl
lods
dec
xchg
out
test
mov
mov
ja
adc
cltd
sarl
int3
inc
loopne
cmp
sbb
cmp
hlt
sbb
xchg
mov
and
roll
cmp
xchg
sub
add
js
xlat
jle
lods
adcl
sbb
call
pushf
ja
and
arpl
ja
push
aaa
les
jp
pop
dec
fcom
dec
ficompl
ja
addr16
int3
sbb
shl
mov
push
xor
adc
mov
adc
icebp
std
popf
repz
mov
lcall
xchg
mov
rorb
dec
fistpll
jae,pn
fdiv
push
cmpsb
in
mov
push
xor
nop
ds
or
xchg
loope
lock
movsb
add
xorb
or
lcall
xchg
jns
ljmp
sarl
push
cltd
pushf
xchg
add
nop
ficompl
fs
push
insb
push
push
mov
inc
inc
or
xchg
es
aas
xchg
add
inc
les
ds
insb
jae
cli
pop
cmpsl
xor
aaa
cmp
int
push
outsl
imul
loope
daa
lret
je
in
ljmp
pop
test
inc
pop
jmp
arpl
mov
xor
or
scas
adc
scas
lret
mov
test
xchg
push
jnp
sbb
dec
shl
aaa
add
filds
mov
aad
push
arpl
sbb
shlb
push
arpl
push
call
jb
and
mov
xchg
mov
mov
fisttpll
mov
add
mov
xlat
pusha
mov
xchg
sti
jmp
jno
or
xchg
repz
inc
and
stc
movsb
mov
fisubs
out
into
fidivl
pop
dec
xor
mov
inc
rclb
subb
pusha
xchg
clc
lahf
out
xchg
aas
movsl
adc
inc
test
gs
fcmovb
cmp
jo
out
pop
mov
mov
mov
inc
repnz
out
xlat
popl
pop
or
ss
sbb
iret
dec
pop
out
pop
jne
test
jl
lods
iret
and
arpl
arpl
dec
mov
sub
xor
in
icebp
jae
jno
sub
popf
push
lock
icebp
push
xor
js
fbld
push
cwtl
cmp
pusha
sub
xchg
in
push
and
inc
xor
stc
call
inc
fidivs
lea
stc
pop
jecxz
add
stos
or
xchg
aam
sub
out
pop
icebp
fadds
rolb
imul
sub
lea
and
test
pop
scas
andl
shlb
push
push
xchg
ds
nop
xchg
shrb
jo
into
mov
push
push
leave
aam
outsl
fstpt
insb
pushf
jmp
repnz
daa
test
test
mov
pop
cmp
push
cltd
xor
dec
sti
push
aam
dec
lret
cmp
stos
out
push
scas
push
mov
stos
push
in
mov
insb
and
addr16
popa
mov
idivl
jp
jle
outsb
imul
imul
add
inc
bound
pop
adc
lret
faddl
dec
in
jae
dec
das
mov
adc
or
clc
outsb
sub
subb
push
aaa
jno
mov
jns
repnz
jnp
mov
not
sbb
mov
movsb
push
mov
mul
popa
lods
pop
mov
and
xor
xor
pop
out
and
pushf
dec
xor
adc
sub
xchg
scas
into
cs
xchg
sub
std
mov
add
mov
adc
rcr
mov
add
mov
shrb
pop
fwait
nop
ds
xchg
imul
imulb
inc
push
adc
or
lahf
sub
in
cmp
ss
fnstsw
jmp
mov
pop
dec
stc
xchg
fstl
xchg
mov
mov
or
cmp
fs
leave
cmp
repz
jns
mov
js
lcall
sbbl
jbe
or
mov
push
mov
push
addr16
push
adc
mov
jl
pop
mov
jne
dec
adc
pushl
adc
jne
xchg
in
dec
loope
jp
lock
or
repz
sarl
imul
sbb
clc
fxch
stos
sub
lcall
or
jmp
fiadds
or
push
out
mov
cmpb
push
ljmp
lcall
jl
mov
bound
js
aaa
sbb
sbb
mov
dec
mov
inc
xchg
mov
or
int3
and
jno
aaa
pop
scas
push
mov
xor
sbbb
dec
imul
sbb
push
push
lea
cltd
or
dec
or
scas
int3
and
nop
loop
pop
xchg
subb
inc
in
sbb
lahf
adc
shl
xor
jge
ret
shlb
loopne
xor
xor
repnz
or
mov
lds
mov
and
inc
movsb
adc
pop
mov
pop
pop
stos
lret
xchg
push
popf
pop
cwtl
nop
mov
mov
lock
call
push
jecxz
mov
push
jne
adc
fs
mov
lock
mov
push
loop
pop
mov
lock
dec
fsubl
in
jb
das
cmp
les
jne
icebp
pop
ret
sahf
test
cmp
or
pop
fdivl
push
pop
push
ja
cmc
shll
loopne
pop
pop
sbb
mov
or
aaa
test
or
pop
dec
in
dec
mov
imull
int
out
inc
gs
mov
out
push
pushf
inc
mov
xor
loopne
cmp
jle
xor
nop
cmpsb
aam
cmp
movsl
pop
aad
adc
mov
rol
enter
enter
push
and
push
mov
pop
or
adc
mov
imull
jmp
int
aam
pop
xchg
jo
fs
aas
xor
xchg
add
xor
shl
pop
js
jns
xchg
outsb
sub
xchg
lods
rcll
add
add
cmp
dec
loope
ljmp
cmp
mov
aam
xchg
pushl
sbbb
scas
cmp
fnstcw
xchg
jnp
ret
in
cmpsl
mov
dec
pop
loop
mov
les
mov
nop
sahf
out
cltd
push
xor
jecxz
mov
test
xor
sub
inc
psrlq
sub
pop
scas
je
out
mov
sarb
daa
push
xchg
mov
adc
or
hlt
shl
mov
add
add
mov
daa
or
enter
ja
int3
les
inc
cmp
mov
inc
add
outsl
fisttps
stos
sahf
sar
inc
push
out
add
push
or
insl
mov
push
sbb
mov
cmp
xchg
lea
adc
int3
ret
cmpsb
cmp
mov
pop
or
push
ret
mov
xchg
sbb
dec
jo
mov
rcrb
ja
cmp
add
cs
sbb
mov
repnz
inc
sbb
or
sbb
aas
mov
daa
inc
cli
dec
inc
xchg
and
cmp
lods
jmp
ja
add
jle
insl
cmp
ds
and
sbb
dec
adc
pop
fisttpl
outsb
movsl
and
mov
iret
icebp
popf
shlb
jg
aam
dec
lcall
fnstcw
in
daa
mov
stos
dec
add
push
jae
pop
add
jns
xchg
test
sahf
loope
mov
mov
cld
mov
divb
jne
insl
mov
push
fs
out
int3
decb
out
inc
popa
enter
cwtl
adc
outsl
lret
icebp
dec
lret
mov
jecxz
mov
jecxz
sub
sbb
adc
mov
xchg
shll
loop
xchg
bnd
or
dec
cli
add
and
sahf
nop
jmp
cmp
movsb
fs
push
out
add
xor
mov
adc
sahf
push
xor
inc
fwait
sbbl
sub
fidivrs
mov
add
out
fbstp
sub
jno
ficoms
jne
loopne
cmp
repnz
add
bound
movsl
insl
sbb
cmpsl
scas
repnz
jb
ret
and
mov
xchg
imull
stc
fdivrs
je
sub
mov
imul
scas
sub
iret
insb
incb
insl
insb
cmp
negb
nop
sahf
or
sub
mov
cs
inc
cmp
and
mov
cwtl
rcrb
aad
inc
rolb
iret
pop
outsl
sbb
adc
shll
pushf
mov
xor
je
jb
pushl
ret
mov
cmp
or
fidivrl
daa
shrb
fst
pop
adc
push
xor
adc
adc
test
xchg
bound
cmp
xor
push
in
popf
or
testb
inc
clc
mov
mov
sub
and
std
pop
out
pop
or
xchg
fistpll
fstpl
add
iret
mov
into
es
ja
ljmp
aad
imul
adc
add
push
xchg
in
stos
pop
and
jns
xchg
cmp
inc
mov
inc
pop
and
imul
pop
imul
xchg
inc
add
pushf
lret
and
and
mov
test
fucomi
lock
fidivl
or
pop
icebp
adc
dec
or
add
icebp
nop
loop
pusha
mov
test
pop
negb
test
loopne
push
ds
cli
enter
cmp
addr16
pslld
push
filds
sub
and
imul
ss
and
push
test
and
xor
stos
rorb
insw
ret
dec
pop
repnz
shll
jbe
fwait
and
mov
stc
xchg
xchg
or
xchg
jle
stos
dec
stos
xor
cmp
es
adc
out
leave
in
jbe
aaa
xorb
jg
lcall
lret
shlb
or
loope
xor
aaa
mov
shl
add
int3
out
movsb
mov
adc
dec
pop
call
xchg
vpshufhw
lret
rcrb
sub
shrb
xchg
jnp
xor
imul
xor
push
jno
popa
xchg
fsubs
insb
sarl
push
in
mov
shlb
jno
push
test
imul
mov
lahf
test
cmp
aaa
stos
sub
out
popl
gs
sub
imul
push
subb
mov
cmc
pop
inc
jnp
imul
push
mov
flds
push
and
in
sub
push
push
mov
sub
push
ja
or
push
pusha
int3
jb
int3
rorb
jns
test
dec
add
and
mov
sahf
inc
shlb
leave
loop
ljmp
and
jl
xor
mov
aad
test
lods
data16
repnz
ret
or
or
imul
stc
sbb
mov
cmc
repnz
icebp
adc
stc
xor
rcrl
lods
ljmp
jns
push
mov
loopne
js
dec
insl
out
ret
mov
std
push
rclb
mov
jns
repz
mov
cs
add
push
and
dec
inc
mov
pop
mov
mov
mov
push
sbb
ds
or
clc
insb
pop
inc
sbb
insb
pop
roll
xor
push
pop
add
sbb
push
aas
movsb
mov
jg
mov
fs
in
xchg
aaa
iret
sub
cmp
xchg
pop
je
xchg
sub
stos
pop
fdivrl
push
sti
or
mov
sbb
das
xchg
adc
ss
call
insb
xor
call
adc
sbb
xchg
scas
add
adc
jle
sarb
adc
icebp
adc
xchg
movsl
cmp
jecxz
mov
pcmpgtb
push
inc
andps
cmpxchg
dec
ljmp
dec
push
xchg
jmp
leave
cli
ror
pop
outsb
movsl
add
in
xlat
inc
xor
sbb
int
int
xchg
movsb
in
imul
or
pop
loopne
xchg
hlt
adc
sub
cli
cmpsb
add
dec
stos
or
shrb
ss
jb
sbb
push
outsb
scas
cmp
std
cwtl
xchg
sub
fdivrs
dec
jecxz
xchg
hlt
add
adc
adc
xor
sbb
jmp
sub
aam
mov
lea
inc
dec
jmp
fcoml
lock
adc
pop
mov
jmp
jp
repz
shll
inc
addr16
bound
fsubs
xchg
and
je
in
call
pop
push
movsb
ja
inc
push
leave
jl
int3
fwait
pop
inc
cmp
jg
lock
or
push
mov
cwtl
out
xchg
jb
or
add
xchg
jbe
push
ret
iret
test
repnz
aam
lods
cmp
sbb
scas
pusha
mov
sbb
shll
add
mov
lahf
bound
push
jae
insb
xchg
enter
std
popa
mov
shlb
cltd
test
and
lret
mov
mov
jmp
sti
fwait
cmpsb
ret
ret
mov
sub
fwait
bound
dec
jp
lock
ljmp
push
int
inc
pop
gs
xlat
pop
sbb
sti
jl
int
dec
mov
ret
lea
mov
shll
enter
dec
stos
xor
xor
cmp
push
jle
mov
lock
inc
mov
mov
xor
into
mov
and
dec
idivl
imul
mov
int
adc
outsb
sahf
in
lods
sbb
xchg
insl
es
in
cmpsb
jl
shrl
insb
loope
mov
mov
lret
imul
jo
movsl
pop
jno
imul
mov
adc
mov
xor
inc
lds
mov
jle
dec
aas
cwtl
hlt
pop
sub
push
fcmovnu
inc
cmp
aad
sub
pushf
inc
and
outsl
push
and
stos
cmp
and
pop
cwtl
je
iret
test
adc
in
and
cmp
mov
fisubl
ja
inc
out
testl
mov
pop
frstor
pop
std
shll
and
lods
dec
ret
icebp
add
cvtps2pi
cmc
mov
movsb
or
call
int
push
mov
jnp
bound
jg
jb
inc
cmp
mov
sti
sub
loop
ja
cmc
dec
rol
hlt
imul
test
shrl
jle
repnz
fistps
pushf
lret
mov
cmc
mov
sub
int
and
stos
out
bound
mov
faddl
xchg
dec
mov
xchg
insb
pmullw
jl
andl
rorb
nop
idivb
clc
lret
pop
lods
sahf
and
call
cmp
sbb
lret
lods
and
xchg
cli
enter
mov
inc
jp
nop
push
popf
pop
or
sarl
loopne
sti
cmp
inc
inc
rorl
dec
fisttpl
in
mov
js
adc
shlb
lcall
xchg
or
pop
mov
xchg
cmp
into
lcall
ss
sbb
dec
mov
in
mov
sub
fidivs
pop
mov
or
xor
and
lcall
push
mov
addr16
shrb
add
shll
jns
adcb
mov
cmc
or
pop
mov
stos
popa
mov
dec
fistpll
in
ficoms
je
jbe
and
sbb
xor
rcl
sub
es
xchg
filds
push
inc
popf
jb
dec
cld
and
ja
sub
lret
in
push
mov
sub
aas
jecxz
add
ret
cwtl
inc
add
lahf
test
jmp
repnz
call
aaa
mov
and
cmc
in
mov
xor
popa
pop
adc
inc
fdivs
dec
mov
inc
lcall
mov
add
daa
fistps
gs
aad
or
subl
rorl
loope
mov
xlat
sub
movsb
inc
mov
cmc
inc
rcll
push
adc
popf
ss
ds
mov
or
xchg
cmp
and
or
ret
stc
out
push
mov
outsb
cmpsb
in
mov
jmp
fstpl
mov
scas
pusha
dec
ret
mov
daa
in
stos
inc
sar
in
stos
ja
lock
xchg
or
push
stos
pop
add
cmovnp
int
mov
and
xor
icebp
mov
stos
dec
mov
icebp
fucomi
jns
stos
faddl
push
sbb
mov
lods
dec
mov
dec
ret
lods
lret
imul
push
pop
nop
xchg
cmpsl
mov
cmp
icebp
das
pop
ljmp
xlat
ja
cltd
movsl
lea
pop
iret
or
or
in
add
cmp
into
fsubr
dec
gs
adc
jne
dec
stos
mov
mov
mov
aam
sar
lcall
ret
out
or
push
mov
xchg
mov
or
push
fdivrl
xchg
les
xor
call
dec
sub
stos
dec
sti
and
test
mov
fists
push
dec
adc
xchg
add
add
cli
mov
out
addb
jp
pusha
and
outsl
rorb
adc
subb
adc
ja
xor
dec
sbb
xor
mov
sub
sub
sbb
jns
cmpsb
leave
mov
aaa
sub
jne
jne
xchg
out
lea
inc
test
mov
lcall
outsl
mov
scas
mov
rcrb
outsb
dec
jbe
xchg
cli
cmpsl
aad
mov
lret
mov
xchg
repnz
xchg
cmpb
inc
pop
pop
inc
mov
push
add
cmpsb
cmpsl
stc
out
adc
and
cmp
jae
fmull
lock
inc
fidivs
fistps
xor
cld
fwait
xchg
pop
in
jno
mov
pushf
jb
or
jl
sarb
sub
imul
add
xchg
insl
xor
test
inc
sbb
xchg
stos
lock
sbb
shll
adc
imul
cmp
mov
lret
out
xchg
das
in
fadds
adc
movsl
lret
xchg
nop
cs
out
mov
cmpsl
ss
mov
mov
gs
dec
leave
mov
xor
scas
fcmovu
jne
mov
add
mov
push
leave
cmc
pop
fiaddl
inc
das
xlat
sub
sarl
popf
adc
pop
loop
jge
mov
pop
aam
cmp
aam
sub
jne
das
mov
push
inc
jae
pop
sub
xor
ret
sub
lea
andl
cmp
popa
xchg
or
stc
xorb
outsb
pop
int
push
divb
add
pop
jo
cli
adc
push
adc
pop
mov
cmp
sbb
rcll
inc
pop
sar
scas
sub
js
mov
push
jg
scas
push
gs
or
sbb
cwtl
roll
cmpsl
addr16
in
fimuls
nop
or
jp
push
es
inc
jo
add
inc
mov
push
inc
jne
addr16
lahf
pushf
test
add
inc
and
fcomp
dec
aad
xchg
xor
mov
push
test
insb
inc
xchg
int3
jle
pop
divl
dec
sti
jbe
add
test
data16
out
mov
ljmp
cmp
mov
adc
movsb
or
outsl
push
std
loop
mov
ss
inc
in
or
ret
xor
lods
sbb
sbb
mov
pop
pop
clc
sub
stos
adc
add
mov
leave
imul
push
cmp
ljmp
xchg
push
test
mov
xor
and
inc
xchg
ds
mov
lcall
and
outsb
lcall
cmp
inc
mov
mov
mov
or
and
cmp
sbb
xchg
fcmovbe
ds
dec
cli
stc
add
ret
cmp
jnp
jle
inc
iret
pushf
scas
aam
lcall
cli
sub
lret
iret
jl
clc
and
xor
xchg
loop
rcll
fists
ja
sub
in
rorl
or
insl
insb
mov
sub
leave
stos
fildl
lcall
movsb
push
shll
imul
and
movsb
cmp
dec
in
xchg
mov
in
or
es
push
nop
or
sub
fadds
ds
loope
out
xchg
push
push
rcrl
insb
imul
adc
inc
jae
adc
xchg
cmc
xchg
dec
popa
fistps
mov
sbb
fwait
jno
xor
pop
outsb
movsb
mov
xchg
cli
jno
stos
orb
rcll
pop
jno
clc
out
adc
stos
dec
imul
jg
sbb
mov
xor
add
pop
adc
and
jae
lds
loop
repz
dec
or
cli
jmp
test
add
pop
sar
xchg
inc
mov
push
push
fdivp
inc
push
mov
sub
cmp
push
sbb
or
lret
jno
repz
mov
xor
outsl
xorb
cmc
lret
add
movsl
enter
add
repz
cmp
cmp
xchg
clc
inc
popa
push
repz
jecxz
addb
mov
dec
lea
mov
cmp
sbb
into
xchg
int
scas
negl
pop
adc
push
cmpb
xchg
and
mov
cmp
movsl
adc
jns
mov
jmp
movsb
out
dec
mov
jle
inc
mov
movb
clc
bswap
and
jo
jl
imul
lcall
mov
bound
aaa
insl
jle
push
cmpsb
inc
test
cmp
and
adc
test
cmpsb
inc
add
push
arpl
cmpsl
jle
push
scas
int
mov
inc
in
mov
call
rol
jmp
sbb
enter
ds
pop
push
insb
push
add
fldl
cmp
addr16
dec
inc
push
into
xlat
xchg
jmp
pusha
lds
fdivl
fimuls
sbb
pop
jmp
test
xchg
in
andl
inc
sbb
pusha
arpl
outsl
fisubrl
repnz
xor
mov
pop
xor
shll
aam
xorb
or
jbe
adc
out
addr16
inc
add
sub
test
cli
aas
xchg
jge
sbb
fsubr
dec
repnz
ret
inc
test
out
bound
mov
xchg
vmovups
xchg
jg
aad
inc
fisubrl
push
xchg
ja
or
inc
pop
data16
hlt
fistpll
inc
lahf
aad
xchg
ljmp
push
jmp
jne
mov
jns
add
push
andl
outsl
and
sbb
jg
sbbl
insb
andl
cmp
int
sub
add
scas
hlt
ljmp
js
in
adc
jo
pop
jns
mov
fnsave
or
mov
ss
jg
dec
push
test
adc
mov
lret
pop
movsl
rcll
stos
incl
xor
mov
sbb
mov
inc
inc
and
add
sbb
pushl
push
xor
outsb
push
pop
roll
shlb
ret
jnp
push
fwait
mov
pop
xor
pop
lods
jmp
bound
ja
xchg
mov
mov
dec
aas
je
fisubrs
cmp
popa
scas
imul
imul
bound
ljmp
lods
and
sub
jne
inc
aad
jge
mov
loope
sub
jmp
decb
inc
in
push
fneni(8087
popa
sbb
mov
shlb
mov
cwtl
xor
fbld
xor
les
xchg
or
and
in
test
test
inc
addr16
lret
push
jb
fdivp
ja
pushf
cwtl
or
inc
mov
jg
imul
xchg
sbb
pop
in
imull
xchg
out
mov
ljmp
mov
lock
mov
lcall
mov
fnstsw
test
or
stc
bound
dec
lods
mov
into
and
pop
dec
imul
add
outsl
shlb
imul
aas
cmp
mov
sahf
add
xlat
rdmsr
out
icebp
cmp
nop
rorl
std
pop
mov
roll
adc
movsl
stos
fisubl
mov
inc
ljmp
lods
mov
mov
divb
iret
cli
repnz
sbb
xlat
test
xor
cmp
mov
sahf
flds
aas
out
mov
or
or
jo
sbb
jp
int
adc
sti
sub
cwtl
or
aam
loopne
xchg
add
jle
fld1
mov
cmp
push
leave
in
pop
add
mov
mov
loopne
xor
inc
in
push
test
jns
adc
pushf
insl
lds
fistps
pop
and
lret
adc
mov
push
data16
out
and
aad
inc
xchg
cmp
pop
xor
sub
push
mov
dec
pop
idiv
mov
lret
negl
and
jmp
cmpsl
mov
add
mov
or
cmp
mov
xchg
push
pop
sub
lods
pop
mov
movzwl
ret
cltd
lods
mov
jmp
fnsave
mov
out
js
into
or
dec
xchg
test
subb
sti
sub
insb
jge
lret
sub
sti
add
out
call
shlb
xor
adc
inc
fs
sbb
dec
or
data16
and
es
shlb
jnp
cmp
dec
mov
inc
xor
test
sub
bound
sbb
mov
mov
push
sbb
enter
mov
pop
mov
pop
shll
xchg
fsubr
cmp
scas
xor
loop
icebp
jbe
imul
into
fxch
cmpsb
js
por
or
jnp
and
or
gs
jge
sar
into
add
stos
in
pop
sti
xchg
shrl
sub
cmc
testl
adc
cld
mov
and
inc
fcomps
xchg
xchg
not
mov
cmpsl
sbb
fsub
cs
out
enter
stos
ja
pop
dec
pop
bound
bound
inc
jp
gs
pop
cmp
lahf
xchg
pop
movsb
dec
es
lock
mov
push
rol
repz
repz
mov
not
pop
nop
mov
subb
dec
sbb
into
fcmove
lret
arpl
mov
mov
cmp
fidivrs
mov
pop
test
test
inc
xchg
xchg
enter
mov
ds
jecxz
and
push
bound
outsl
mov
dec
cmpsl
dec
push
xchg
dec
jge
xor
push
hlt
frstor
pushl
pop
cmp
in
pop
or
nop
adc
mov
cli
cwtl
push
fs
scas
lods
xor
jae
and
adcb
scas
mov
js
movsl
sti
inc
dec
addr16
cmc
in
in
pop
in
mov
into
mov
fidivl
pop
inc
leave
loope
test
sti
rcrl
xchg
and
mov
xor
lcall
or
and
decb
out
adc
add
call
ret
in
or
push
fs
popf
les
shll
xchg
aas
dec
mov
lcall
idivl
mov
inc
lcall
out
ret
ja
test
shrl
pop
shll
jle
fisubrl
ljmp
mov
jnp
outsb
or
imul
xor
dec
add
fucomp
imul
mov
ljmp
imul
shrl
cld
in
xor
mov
inc
lret
or
jg
inc
xor
xor
mov
fdivl
or
inc
mov
shll
bound
push
fisttpll
filds
pushf
sahf
pop
imul
xor
jnp
das
cmp
mov
shl
jl
mov
scas
xor
in
sbb
repnz
daa
out
movsl
fwait
mov
cmpsb
popf
pop
push
add
cwtl
dec
fdivs
aam
es
sub
fwait
cmp
in
xchg
pop
cmpsb
lock
mov
lret
int3
or
fcomip
ret
lock
sbb
inc
mov
in
pushf
sub
adc
mov
fnstcw
or
addr16
loop
push
insl
pop
add
shll
and
xor
add
int
or
daa
fiadds
jg
pushf
xchg
bound
fistl
xor
pop
lods
jbe
lods
mov
sbb
and
hlt
jns
adc
or
mov
icebp
mov
in
mov
lcall
sbb
out
inc
ret
push
mov
dec
xchg
in
negb
movsl
repz
es
rcl
cmp
loop
loope
imul
mov
addr16
mov
mov
pop
dec
rcr
xchg
jno
and
fimull
repnz
mov
dec
ss
pop
dec
cmp
pop
mov
fldl
dec
outsb
jo
and
std
xor
sahf
aam
xor
neg
movl
call
scas
jns
dec
call
push
sub
loope
sub
cmpsl
aam
pop
lock
sub
inc
pop
out
sarl
sahf
mov
pop
xchg
xchg
push
xlat
mov
xor
js
ss
jg
cli
int
fxch
add
roll
int
fstpl
fisubs
loope
jle
pop
addr16
mov
out
lock
mulb
das
push
rorl
xchg
mov
mov
inc
shl
popa
mov
push
push
inc
test
xchg
xchg
mov
dec
push
xor
mov
clc
fstps
fcoms
nop
inc
xor
fwait
mov
pop
inc
out
mov
test
rorb
nop
mov
push
mull
sarb
das
mov
test
jmp
xor
add
loop
stos
in
rcll
loope
mov
lahf
or
pop
adc
and
or
movsb
testb
xchg
ficomps
imul
cmc
sub
or
xchg
fmuls
mov
sti
ficomps
mov
add
aam
addr16
js
dec
pop
cmp
mov
cmovge
ja
or
into
jno
sbb
push
mov
je
push
shlb
adc
push
in
rcrl
call
pop
packsswb
xchg
mov
mov
repnz
inc
sub
arpl
pop
jb
push
ljmp
inc
adcl
fcmove
daa
dec
test
das
in
jl
outsl
sbb
shll
imul
les
inc
outsb
mov
push
push
adc
add
fmul
es
cmpsb
je
adc
in
push
lds
inc
lock
jge
cmp
jo
dec
mov
mov
in
test
shlb
addr16
push
add
or
dec
push
cld
push
mov
imul
mov
aas
pop
je
iret
sti
in
imul
inc
mov
jmp
cmp
xchg
xor
sbb
mov
inc
mov
inc
call
stos
call
addl
jp
push
or
xlat
adc
popf
xchg
sbb
cld
jb
inc
xorl
pop
fs
add
scas
push
xchg
out
imul
sbb
mov
sbb
stos
out
add
movsl
adcl
pop
lock
jno
loop
cmp
jp
jne
push
xchg
in
out
jle
xlat
iret
xor
icebp
stos
ss
sbb
lret
scas
pop
decl
sbb
mov
enter
dec
lods
lret
rolb
pop
fdivrl
pushf
mov
inc
stos
data16
dec
in
jo
shll
mov
cmc
or
cmpb
fidivl
push
dec
cld
inc
lea
lods
inc
push
cmp
fsubl
pop
negl
gs
lahf
aam
dec
sbb
add
ret
imul
out
add
test
addl
out
in
mov
popa
int
insl
ret
add
sub
mov
mov
shll
ficomps
adc
pop
mov
stc
int3
loopne
fdivrl
jne,pt
mov
scas
xchg
sub
rcrl
sbb
add
mov
mov
inc
mov
ljmp
push
jae
fisubl
cli
adcl
scas
sahf
loop
xorb
test
and
adc
cwtl
fsubr
mov
mov
or
push
pusha
orb
xor
lds
imul
aad
jg
scas
mov
xchg
xor
mov
stos
jl
mov
mov
cmp
sub
repnz
push
into
push
leave
pop
fs
call
mov
push
mov
aad
push
jg
sub
mov
cs
dec
or
mov
or
jmp
cltd
push
rcrl
mov
pop
out
push
add
pop
data16
scas
pop
mov
add
sub
call
ljmp
ffree
negl
jbe
popf
ja
or
sbb
stc
push
hlt
out
mov
pop
cmp
test
cmp
mov
xor
sbb
xor
pop
push
mov
sarb
push
pop
imul
mov
ljmp
sub
adc
cmp
lock
pop
out
mov
je
pop
push
mov
cmpsl
leave
jo
or
iret
add
popf
loop
jl
sbb
das
push
cmp
test
sub
jns
add
ret
xchg
xchg
ret
test
dec
xchg
sbb
mov
jp
adc
push
and
data16
je
mov
sahf
enter
add
and
in
mov
test
cwtl
pushw
mov
jge
shlb
popa
bound
push
aam
repnz
xor
jmp
pop
nop
jle
ljmp
xor
xchg
or
pusha
jns
in
xchg
les
adc
cmpsb
jns
mov
out
push
mov
and
test
rclb
dec
or
mov
push
shlb
roll
xor
jle
and
in
push
subb
cmp
out
jbe
sub
movsb
call
and
insb
mov
mov
mov
mov
imul
inc
sbb
or
dec
fsubs
movsl
js
ficomps
arpl
mov
movl
push
push
xor
cmp
inc
jne
fcmovnb
inc
ljmp
cmpsb
xor
xchg
mov
fildll
jno
subl
jnp
pushl
aaa
fs
popf
push
mov
lods
mov
setns
push
fs
rcr
stos
push
aaa
ja
test
mov
rorl
sbb
xor
in
lret
test
mov
test
or
cld
pop
lcall
push
jo
cwtl
inc
push
cli
pop
mov
stos
adc
in
inc
stos
es
adc
mov
adc
test
pop
ret
sahf
loop
lods
sbb
std
ljmp
pop
mov
adc
iret
and
xchg
pop
sbb
and
js
sarl
in
cmp
outsl
mov
scas
cvtsd2si
fwait
cmc
pushf
aaa
test
and
cmc
jns
in
rcr
xchg
xchg
int
push
adc
shll
pop
cmp
sub
mov
pop
decl
jb
out
dec
fs
push
test
xchg
xchg
dec
stc
popf
cs
int3
mov
jnp
mov
dec
xchg
or
popa
loopne
in
lahf
pop
xlat
pop
dec
pop
repnz
fcmovnb
popf
xchg
inc
or
ret
orl
mov
cmp
mov
sub
lods
inc
movl
push
in
sbb
std
out
lret
xchg
push
sbb
sbb
pusha
aam
xchg
jno
sub
pusha
stos
mov
push
loopne
jecxz
stc
leave
push
lahf
cmpsl
fs
and
cwtl
pop
mov
and
aas
pop
mov
cmp
jp
cmp
xor
push
bound
adc
pop
mov
pop
repnz
loop
in
xor
adc
cltd
fimuls
add
cmpsl
les
std
out
jns
mov
mov
xchg
inc
adc
jbe
mov
adc
in
cltd
cmp
push
jns
dec
insb
or
es
hlt
cld
mov
in
pop
add
push
push
inc
pop
adc
mov
scas
mov
mov
pop
ficompl
out
and
inc
cmp
cmp
mov
jne
mov
sbb
rclb
stc
in
push
repz
add
inc
js
hlt
mov
mov
aaa
aam
add
adc
cmpsl
stc
adcl
adc
push
adc
ss
xchg
data16
adc
jae
jnp
adc
inc
jb
movsb
aaa
lds
mov
adc
ficoms
xchg
insb
sahf
lret
pop
hlt
std
scas
gs
sbb
divb
push
add
add
or
pusha
lahf
and
stc
out
cmp
fstpt
dec
repnz
aam
js
dec
sti
and
cmp
fmull
cmpsb
mov
mov
or
jno
call
popa
add
xchg
inc
aas
add
xor
movsl
out
jbe
mov
xchg
jle
jbe
jl
inc
lock
test
pop
push
and
shll
jg
in
int
xchg
mov
movsl
or
ret
pushf
cld
cmp
ret
pop
xchg
insl
into
fiadds
outsb
into
je
adc
push
pop
repnz
cld
xchg
push
jno
inc
pop
leave
cmpsl
dec
into
mov
jecxz
mov
jmp
fisttps
addr16
in
lcallw
fidivrl
jae
push
cs
xchg
fadds
sub
jbe
inc
data16
add
xor
xchg
adc
stos
movsb
adc
loopne
push
test
mov
xor
hlt
push
int3
aam
xchg
push
mov
or
and
mov
mov
inc
mov
movsl
sbbb
mov
out
mov
push
inc
mov
sbb
aaa
popa
lods
out
stc
loope
movsb
bound
cmpsb
mov
sar
mov
shrb
sub
cli
das
int3
cwtl
iret
xchg
pop
fsts
xor
stc
divl
popf
sbb
fcoms
adc
jmp
cli
xor
scas
cmc
stos
lcall
add
mov
fs
hlt
jmp
pusha
sub
cltd
and
mov
lea
lcall
loop
in
shll
outsb
mov
shlb
sub
cltd
xchg
adc
push
cld
ss
xchg
or
pop
popf
and
fucomi
lock
rclb
lods
iret
push
out
pop
int
adc
cmc
fidivrl
sbbb
stc
adc
or
mov
and
and
or
inc
pop
jge
add
sbb
outsl
and
loope
mov
cli
stc
inc
flds
inc
pop
mov
loope
inc
insb
das
movsb
pop
or
jecxz
xchg
les
ficoms
pop
ljmp
mov
test
lahf
mov
mov
insb
xchg
xchg
shlb
cwtl
outsl
push
mov
test
pop
mov
out
fsubrs
fimuls
vcvtsd2si
cmp
push
push
je
sbb
adc
lahf
xchg
int
fildl
fdivrs
pop
cmp
rcrb
cli
inc
jo
into
outsb
mov
push
cltd
mov
jg
nop
mov
mov
pop
fiadds
sbb
pop
jmp
neg
pop
sbb
lahf
leave
push
push
push
jbe
cmpsl
stos
push
lret
dec
je
sub
les
lock
inc
test
es
iret
adcl
jge
xchg
lahf
outsb
sbb
pushf
pop
stos
test
add
dec
pop
xchg
inc
adc
push
mov
and
sbb
andl
and
xchg
sub
add
leave
cmp
in
dec
mov
ja
std
xor
adc
mov
outsl
adc
hlt
push
add
and
xlat
dec
fisubl
mov
push
jb
or
mov
mov
push
fs
dec
call
jne
mov
xor
pop
add
or
in
inc
pop
adc
jo
cs
fiadds
mov
imul
ljmp
popf
dec
das
mov
leave
clc
pop
loopne
cmpsb
jns
cmp
pop
divb
adc
xlat
shll
jns
ss
shrb
jns
xor
inc
call
ret
sub
mov
out
xchg
add
dec
add
int
in
cmc
mov
jge
push
dec
cli
aaa
xchg
push
adc
out
movsb
mov
mov
nop
dec
repz
mov
inc
mov
push
jns
sbb
jnp
ret
shrb
stos
xor
test
add
push
std
imul
cld
das
xchg
jecxz
test
jno
cs
sbb
ds
xor
and
sbb
push
push
subl
leave
mov
shll
cmp
je
pop
aas
sbb
xchg
addb
and
fadd
nop
lret
add
xchg
int3
pop
mov
pop
cmpsl
scas
pop
mov
fiaddl
xchg
sub
outsb
jge
xor
mov
rcrb
xor
push
cmpsb
mov
or
lods
sbb
lods
xor
fdivrs
sub
jp
push
lods
shr
sub
stc
sub
xor
or
ret
jb
pop
cld
push
sbb
xlat
dec
xor
rcr
outsl
mov
loop
mov
adc
add
jg
insl
xor
mov
inc
cli
sbbl
mov
fcompp
xor
mov
rolb
push
ja
repnz
pop
xor
stos
cmp
js
stos
insb
pop
jge
clc
popf
fsub
sbb
cld
cmp
xor
out
mov
and
cli
sbb
pop
fisttpl
jl
pusha
mov
icebp
push
mov
out
add
cmpsl
mov
push
cs
and
cld
js
lahf
xor
or
sbb
outsb
push
out
mov
dec
add
iret
xlat
sub
movsb
movsb
mov
mov
les
hlt
sbb
push
rcll
mov
out
lret
loop
bnd
cmc
test
xchg
mov
scas
fcompl
lahf
adc
dec
and
adc
nop
xchg
mov
aas
push
bound
dec
shrb
loop
inc
movsb
mov
jo
cmpsb
push
jb
in
jne
gs
test
loop
out
mov
or
sbb
jne
sbb
cmpsb
mov
sarb
mov
pop
es
sub
inc
sti
push
jecxz
lret
repz
sarb
xchg
mov
in
addb
pop
sub
jl
pop
inc
cmpsl
xchg
cmc
dec
rorl
xorl
aam
fwait
cltd
out
aaa
pusha
mov
addr16
out
sbb
or
sub
and
jns
dec
leave
mov
and
orl
inc
push
hlt
loope
mov
scas
popf
xor
push
jnp
movsb
test
xchg
negb
or
xchg
pop
mov
or
in
scas
call
mov
pop
subb
sbb
add
fcmovnu
push
lock
ja
dec
jns
mov
fimull
xor
sub
xorb
inc
outsb
and
adc
lcall
aam
mov
fbstp
push
mov
mov
mov
mov
xor
add
into
push
jno
lods
pop
lcall
dec
repz
das
mov
dec
inc
mov
lcall
jns
pop
ret
inc
gs
lock
dec
daa
repz
out
and
cmp
fldl
int3
aas
leave
subb
xor
jbe
inc
xor
mov
jmp
push
sahf
aad
addb
lret
stos
fsubs
inc
push
scas
rorb
negb
inc
xor
cltd
test
ljmp
jo
inc
pop
mov
pop
inc
cmp
ss
xlat
inc
xchg
cmp
adc
sub
test
dec
inc
mov
lret
into
stc
dec
pop
add
pop
pop
roll
cmpsb
clc
fdiv
push
fs
repnz
nop
hlt
push
ret
imul
push
adc
adc
xor
inc
dec
mov
cs
int
and
clc
and
jle
popf
mov
imul
lret
xor
jbe
pop
mov
mov
jbe
pop
push
and
in
repnz
inc
sbb
inc
and
stos
shrl
cmp
cs
rcrl
std
push
cmp
loop
xchg
daa
leave
mov
mov
xor
ror
push
popf
imul
adc
cs
cmp
xor
sub
call
int
or
push
pop
in
imul
stos
jge
sub
inc
push
imul
ja
fsubl
add
xor
dec
dec
xchg
js
stc
push
in
inc
es
fnsave
mov
mov
or
push
aaa
imul
pop
add
mov
sub
lea
decl
lret
jns
in
fnstcw
addb
xor
aas
out
xor
ret
sub
imul
mov
sbb
lret
cmp
add
stos
inc
pop
adc
stos
iret
sbb
mov
xchg
mov
mov
mov
shl
in
fildl
repz
jle
sbb
lock
dec
dec
push
and
mov
xorb
pop
push
push
int
mov
xchg
push
push
fcompl
pop
jmp
sbb
jge
and
dec
add
and
xchg
jne
inc
lds
cs
adc
or
movsl
sbb
ja
fwait
mov
pop
or
xor
push
sbb
xchg
outsl
call
mov
cld
pop
sub
or
sub
mov
cmp
or
imul
mov
mov
cld
pop
mov
jle
outsb
pop
jmp
inc
push
outsl
dec
pop
xchg
sub
mov
xor
insl
and
mov
call
pop
pop
cmp
in
pop
aas
int
nop
add
pop
sub
lods
lods
xor
and
lret
cmp
mov
pop
loope
cltd
cmpxchg
rcll
cmp
jge
sub
and
add
mov
inc
push
lret
dec
inc
xchg
test
inc
mov
adcl
lds
popa
xchg
mov
nop
push
ret
popf
or
hlt
aas
and
fisttps
aam
insb
sub
add
scas
adc
call
adcb
cmp
adc
shll
pop
pop
pushf
pop
lods
cs
or
out
mov
mov
xchg
lahf
sub
push
add
cltd
std
test
ret
adc
lret
clc
call
and
sub
pusha
lock
iret
push
and
sbb
lods
test
outsl
ss
mov
cmp
scas
movsl
pop
mov
cmp
cmp
mov
in
cmp
scas
mov
into
sub
push
mov
xor
scas
sub
jle
adc
roll
stos
fmull
add
cltd
es
andb
push
push
cmp
clc
push
lds
inc
and
xor
cmpsl
mov
mov
mov
mov
cmp
call
jecxz
pop
aad
ja
std
and
movsl
dec
mov
aam
or
int
stc
sub
xchg
insb
lods
cmp
fnsave
cmpsl
flds
pop
lods
pusha
jecxz
add
jmp
cltd
push
inc
test
inc
dec
test
mov
mov
cli
dec
jmp
jne
negb
mov
cltd
adc
sub
pop
push
jne
popl
xchg
adc
lret
lds
movsl
int
insb
fsub
mov
or
xchg
push
pop
push
xchg
jmp
cld
inc
xorb
loope
pushf
or
addr16
sbb
fcmovnb
lret
stos
xor
movsb
inc
lahf
inc
fdivr
lods
dec
adc
stc
xchg
enter
sarl
push
cmp
dec
adc
mov
out
cmp
out
sahf
loope
or
mov
aas
xchg
jp
fsts
pop
xchg
adc
leave
pop
nop
fs
in
shll
lret
inc
adc
cmpsl
jo
sub
jl
cmpsb
jns
sub
movsl
nop
mov
fcmovne
push
les
fiaddl
and
cs
sub
fdivs
out
cmpsl
ret
ret
rol
dec
push
hlt
push
sub
mov
jp
dec
ja
bndldx
cs
inc
jbe
mov
add
jbe
fsub
sahf
mov
add
pop
dec
lret
incl
iret
aas
loop
jo
jp
jns
pop
push
lods
in
push
adc
inc
or
ret
call
or
in
loope
dec
cmp
imul
and
adc
ret
mov
outsl
ds
cmpsb
test
xchg
lock
sbb
mov
ds
jecxz
inc
ja
fucompp
cs
lcall
xor
sbb
jmp
mov
sbb
and
fs
jo
in
and
jl
insl
pop
cmp
jmp
ss
je
sti
hlt
dec
dec
cwtl
lret
pop
cmp
aas
jecxz
scas
rclb
scas
iret
test
xlat
or
xor
ja
pop
sbb
sub
adc
sahf
mov
sub
sbb
fs
je
in
mov
mov
or
fwait
dec
fwait
push
iret
outsl
sub
fcmovnb
jo
mov
scas
cmp
pop
sar
and
in
lea
sub
add
aaa
loop
pop
sub
xchg
into
sahf
fwait
in
add
rcll
stos
out
shll
mov
insl
dec
mov
mov
fs
out
dec
in
js
not
sbb
mov
jae
push
shl
pop
lahf
fildll
insl
out
add
shll
imul
ss
pop
jle
mov
nop
rorl
cmp
cwtl
xchg
es
inc
movsl
push
shrb
insb
inc
addr16
adc
or
stc
add
jbe
pop
jb
mov
pop
std
sub
xchg
es
fnclex
pop
sub
jnp
inc
and
repz
add
jne
stos
rep
push
pop
mov
and
or
and
int3
outsb
fucom
and
cmp
std
fstpt
lahf
test
jmp
fsubrs
and
xor
test
mov
push
ret
pop
hlt
sti
xor
dec
inc
movsl
test
fcoml
and
icebp
sub
jmp
mov
lock
inc
xlat
ljmp
xlat
ss
pop
inc
ja
jbe
add
xlat
jno
loope
sub
dec
insl
mov
movsb
daa
adc
adc
xchg
jp
push
mov
pop
rol
jns
aam
sub
push
and
lods
xchg
ja
cmp
imul
dec
lods
sbb
int3
xor
popf
aaa
push
sbb
jge
or
rcl
sub
fbld
xchg
mov
dec
jecxz
or
shl
push
imul
ljmp
je
mov
aaa
imul
pop
push
sbb
sub
or
arpl
lods
lcall
sub
jb
cmpsl
mov
call
pop
fs
lods
cmc
or
pop
fcompl
sbb
fs
jmp
mov
mov
mov
sub
fsubs
xchg
cwtl
movsb
push
repnz
xorl
mov
xor
jnp
test
pop
mov
push
xchg
push
in
std
xchg
and
outsl
xchg
cmpsb
jo
and
jg
xor
in
xor
mov
lds
lds
sub
rolb
inc
fistl
sub
add
sub
mov
cmc
icebp
gs
adc
push
scas
sub
loopne
jle
popf
dec
push
aas
add
ja
in
test
or
mov
add
loop
push
cmp
test
push
mov
and
fcompl
cld
push
stos
pop
sbb
enter
mov
adc
mov
inc
and
lcall
mov
mov
push
clc
push
push
pushf
fisttpl
int3
fisubl
pop
repz
insb
push
sub
dec
dec
insb
insb
and
stc
fwait
xchg
mov
pop
xchg
ficoms
dec
fcoms
mov
inc
fisubl
mov
jmp
inc
or
outsl
aaa
sar
add
cld
pop
cltd
dec
cmpsb
jns,pt
js
test
cmp
inc
ret
add
sbb
mov
mov
dec
popa
xchg
lea
rorl
mov
cmp
push
cmp
movsb
imul
add
outsl
call
in
adc
rcr
insl
pop
lahf
push
cld
out
fxch
cmpsb
in
mov
dec
mov
xchg
inc
pop
pop
les
pusha
xchg
jmp
jbe
sbb
je
cmpsl
in
jg
stos
stos
jmp
jb
mov
es
sbb
dec
adc
aas
cmp
inc
icebp
or
fdivr
dec
push
mov
or
fisttps
out
inc
adc
cmp
xchg
dec
test
cli
test
or
lock
sub
es
nop
lea
rorb
push
pop
cmp
jge
cmpsb
rolb
mov
jge
mov
mov
ljmp
add
loopne
mov
push
shll
fisttpll
adc
jmp
insl
cli
push
lods
inc
outsb
sub
push
xchg
dec
pop
outsl
mov
mov
es
xchg
sti
fwait
push
repnz
mov
mov
or
sub
int3
mov
jl
sub
leave
xchg
or
sahf
push
sub
enter
and
leave
push
sbb
dec
cmp
les
add
mov
mov
cmpsl
movsl
mov
mov
mov
push
or
mov
mov
scas
sub
lds
scas
mov
add
dec
pop
cmpb
shll
pusha
mov
out
sub
lret
js
inc
dec
dec
js
insb
sub
dec
push
add
ret
js
mov
dec
xchg
adc
ljmp
fbstp
addr16
nop
addr16
jge
adc
inc
testl
fs
ljmp
fs
push
push
and
add
mov
pushf
les
pop
das
js
mov
inc
loop
mov
rcrl
adc
xchg
rol
popf
ret
mov
add
cmove
mov
pop
cmpl
movsl
cmp
xchg
jecxz
gs
cmc
sbb
xor
dec
add
outsb
cmpsb
cld
or
and
je
call
sbb
sub
pop
jp
add
add
mov
lret
pop
cmp
xchg
outsb
jns
int
xchg
cmpsb
sub
sbb
jne
icebp
mov
addr16
cmp
xor
mov
jg
inc
fcoml
scas
hlt
jecxz
imul
and
jmp
fimuls
push
aam
pop
aad
xchg
xchg
mov
jb
mov
lds
roll
aam
popa
mov
pop
test
js
sub
cmp
daa
jne
xor
bnd
adc
push
sub
iret
popa
ja
add
pop
stc
dec
pop
fidivs
pop
sbb
dec
mov
pop
jle
xor
in
daa
sub
jl
add
cwtl
inc
in
sub
inc
cmp
add
pop
sub
es
mov
subb
push
or
and
in
mov
push
fstpl
cmp
popa
pop
sbb
cltd
call
inc
inc
pop
lcall
inc
idivl
in
mov
jno
in
pop
ja
push
rcll
pop
pop
and
mov
adc
mov
imul
insb
aaa
cmp
and
lcall
imul
sbb
jo
es
jno
add
sahf
lahf
sub
fdivrl
leave
push
dec
dec
dec
add
jns
divl
xor
pop
jg
incl
cmc
js
xor
pop
mov
mov
psadbw
mov
adc
jmp
mov
mov
rcrl
cwtl
inc
ret
pop
daa
inc
pop
sbb
inc
std
movsl
rcll
push
cmpsb
out
fstpt
sub
push
mov
rorl
pop
adc
outsb
aas
ret
mov
cwtl
inc
sbb
bound
loope
pushf
subb
mov
test
nop
sbb
pop
hlt
lock
stos
rcrl
push
pusha
mov
sub
gs
jns
enter
ljmp
loopne
mov
test
ja
or
inc
repz
inc
pop
pop
jg
sbb
jo
insb
inc
add
push
lods
call
dec
dec
push
decl
add
out
inc
mov
jg
cmpsb
sbb
fstps
fsubrl
jmp
loopne
es
ljmp
mov
test
cmpsl
fs
jns
mov
aam
call
cwtl
in
in
xchg
push
stos
aam
sbb
adc
mov
add
xchg
mov
adc
inc
sub
mov
leave
mov
or
ret
add
dec
sarb
lret
ljmp
push
push
push
cmpsl
dec
mov
mov
push
fldenv
cmpsb
cli
xor
movsl
adc
dec
lds
xchg
das
arpl
mov
out
jno
cmp
mov
sub
fsubs
es
rcrb
ja
imulb
shlb
xchg
dec
scas
mov
xlat
iret
jb
push
incl
jns
sbb
sbb
inc
andb
mov
in
stc
mov
xor
jle
adc
cltd
pop
inc
dec
clc
xchg
lcall
mov
mov
pop
fisubl
add
fmull
jge
push
nop
popf
sub
popa
idivb
stos
pop
push
add
fcmovu
pop
gs
hlt
roll
shll
sub
pop
rcll
xchg
lds
cmp
adc
shll
jg
dec
sbb
outsb
rcll
jle
push
sti
je
mov
jge
fwait
not
fistps
shll
sub
jmp
inc
call
mov
jp
rcl
ja
call
sub
xchg
rolb
out
mov
pop
repnz
xchg
jae
loop
or
test
js
and
cmc
mov
divl
outsb
stos
inc
ja
sub
xor
lea
jmp
adc
inc
fimuls
inc
adc
add
mov
push
mov
scas
jns
push
test
pop
dec
es
imul
xchg
jge
outsb
jp
out
out
lahf
sub
inc
xchg
dec
add
jbe
adc
xchg
in
gs
push
inc
outsl
fwait
aas
push
mov
out
or
bound
ljmp
xchg
dec
jle
push
cli
jb
subb
das
mov
sub
call
adc
mov
sbb
les
jb
leave
jl
sub
ret
mov
xchg
ss
jno
push
add
lcall
sbb
flds
je
aad
push
dec
push
push
and
lods
xor
cmp
push
xlat
jmp
adcb
testl
and
stos
lds
jnp
lea
lret
shlb
mov
jbe
add
jge
push
xchg
dec
jmp
push
jbe
aad
inc
xor
pop
mov
pop
scas
mov
jbe
inc
js
aaa
aad
mov
push
out
cmp
adc
in
mov
movsb
push
cld
in
push
sti
scas
mov
stc
jae
pop
pop
cmp
leave
sbb
divl
repz
or
sub
cld
lcall
xlat
mov
popa
outsl
mov
les
jge
cmp
out
inc
push
es
lock
add
push
cmpl
rclb
xor
adc
mov
push
mov
sbb
les
jne
add
mov
xchg
in
out
je
loope
bound
sbb
fdivrl
cmpsb
sub
pop
out
test
cmp
cli
ja
icebp
add
xor
mov
add
jg
cmc
addl
scas
push
fisubl
insb
ret
fldl
sbb
mul
iret
sub
dec
push
cmp
push
outsl
push
lcall
sub
push
jge
in
scas
sub
dec
test
cmp
mov
adc
vsubps
push
jno
movsb
and
xor
and
jbe
sbb
out
mov
jo
sahf
aas
sub
mov
pop
lds
es
xchg
mov
dec
push
add
xchg
ds
add
pushf
mov
mov
or
sub
out
gs
pop
iret
or
xchg
arpl
aam
das
loope
fstpt
clc
or
and
in
jp
dec
dec
cmp
xor
jg
rcll
scas
xor
inc
es
lret
dec
mov
jbe
add
lahf
push
insl
mov
or
xchg
out
movsb
pop
cmp
lret
sub
ret
add
push
jns
xor
popa
sbb
inc
mov
push
sbb
or
outsb
mov
test
ljmp
or
addl
cld
pushf
std
clc
mov
mov
in
push
gs
pushf
sbb
pop
testl
gs
in
repnz
push
mov
stc
mov
fcompp
hlt
xchg
lret
rcrb
push
mov
gs
out
cli
cmp
in
loop
gs
inc
mov
out
mov
dec
test
hlt
push
lret
push
inc
stos
mov
scas
test
add
pop
test
mov
push
dec
xchg
adc
cmp
or
push
fcom
les
jo
out
sub
pop
scas
mov
pop
pop
xor
dec
ret
in
xor
push
add
mov
sub
cmpsb
xchg
in
push
sbb
sbbb
test
arpl
adc
sub
lret
das
cltd
data16
pop
cmp
outsb
or
ret
inc
jp
and
out
subb
out
cmp
and
ret
in
xchg
ja
and
jmp
pop
leave
test
jnp
outsl
test
xor
jo
addl
into
sets
jnp
pop
sub
jl
aaa
add
fsubr
cmp
hlt
out
loope
es
dec
sub
mul
mov
lea
outsb
mov
testb
popf
fsub
cli
adc
int3
push
jmp
addr16
mov
inc
mov
adc
fmuls
xor
cmpsb
push
lret
xchg
rclb
inc
pop
add
repz
add
jo
xor
mov
xchg
subl
loopne
xor
adc
pop
mov
jnp
push
popa
add
xchg
xchg
cli
push
cs
adc
aam
push
in
int3
into
rcl
pop
push
movsb
pop
adc
sbb
push
lcall
les
ljmp
sub
cli
repnz
mov
adc
outsb
push
lcall
add
rclb
jnp
es
out
decl
pop
dec
mov
push
enter
imul
mov
icebp
xor
xchg
add
movsb
fwait
inc
xchg
inc
inc
nop
mov
imul
jge
loop
push
inc
adc
push
xchg
cltd
push
adc
inc
jno
out
int
ja,pn
scas
mov
lods
stos
fucomi
xor
les
pop
cmpsl
add
lods
mov
repnz
push
popf
or
or
or
jns
cmp
shrb
push
push
cmp
jge
pop
cmp
xor
fwait
sbb
test
popa
bound
or
out
dec
add
mov
or
arpl
popf
xor
aas
mov
push
frstor
mov
inc
test
mov
out
aaa
orb
mov
in
sub
jne
cmpsb
add
pslld
sbb
loopne
sub
jae
adc
cmc
aaa
shr
mov
jb
dec
aam
xchg
mov
sahf
jae
leave
adc
cs
ficomps
loop
cli
pop
insl
xchg
inc
dec
sbb
insl
out
stos
test
movsb
mov
xchg
cmp
and
sbb
lret
cld
push
andl
mov
pusha
inc
inc
andb
nop
call
movups
popa
or
imul
test
movsl
popa
add
std
xchg
push
mov
idivb
pop
js
xor
pop
out
mov
mov
pop
xchg
out
ret
xchg
sbb
xor
mov
push
xor
xor
inc
xor
sahf
mov
loope
flds
push
aas
add
movsl
pop
loope
lret
lea
cmp
inc
clc
test
adc
fwait
sbb
notl
cmpsb
imul
push
jp
push
outsb
out
push
ljmp
rcll
clc
les
mov
xchg
inc
or
repnz
add
add
mov
xor
bswap
mov
call
in
jmp
sub
test
loopne
rcll
outsb
fildll
add
push
mov
icebp
movsl
xlat
xchg
add
sbb
in
push
sbb
sub
add
insl
sti
cmp
adc
lahf
fs
out
aam
mov
fucom
nop
cli
jmp
lods
shr
jmp
mov
dec
inc
ds
inc
adc
mov
pop
inc
imul
adc
push
push
clc
sbb
pop
jg
mov
lret
fwait
mov
notl
or
in
mov
loopne
xchg
insl
mov
cmp
add
add
and
jns
mov
cwtl
faddp
arpl
dec
inc
pop
leave
mov
cmp
loopne
adc
sub
enter
mov
jbe
xor
mov
xor
mov
push
xchg
or
cmpb
adc
jmp
add
sub
xchg
and
repnz
aaa
pop
push
inc
rol
fisubs
fbstp
dec
outsl
fs
loopne
ja
fidivl
xchg
inc
lret
mov
jnp
mov
data16
in
xor
filds
jnp
mov
mov
test
test
xor
call
ror
ds
addl
mulb
push
scas
scas
inc
cmpsl
roll
or
jl
push
dec
push
push
fistpl
test
icebp
jo
push
leave
jns
rcll
sub
and
clc
jl
decl
inc
aaa
push
stos
lret
xor
sub
push
dec
imulb
mov
adc
dec
daa
xchg
pop
jns
mov
sub
shll
aaa
dec
loopne
lret
xor
and
ljmp
push
iret
idivl
and
int3
pop
inc
sbb
lock
test
pusha
nop
iret
push
mov
rolb
fs
lcall
out
jb
cmp
lret
filds
ret
stos
or
jno
arpl
ds
rcll
int3
dec
out
jp
sub
iret
pop
je
xor
pop
lahf
test
int
mov
insb
out
les
andb
or
jne
fsubrs
adc
pop
or
aam
out
in
add
jmp
loop
mov
pusha
lods
adc
mov
ja
and
hlt
add
xchg
sbb
test
jbe
inc
add
mov
inc
xor
adc
xchg
lret
push
sbb
push
sub
sub
sbb
mov
dec
dec
mov
rolb
pop
mov
cli
dec
xchg
adc
repz
push
mov
mov
inc
ret
sbb
gs
shrl
out
xor
xor
cmpsl
jb
int3
and
jmp
fnsave
loop
adc
lcall
enter
mov
fisubrl
add
out
xor
mov
cmp
movsb
or
repz
pop
test
mov
cltd
bnd
clc
imul
mov
mov
adc
fsts
dec
ds
loope
pop
ret
movl
inc
jb
or
push
jl
roll
jo
pop
out
and
sbb
jle
outsl
popa
mov
hlt
sbb
call
sub
es
pop
or
sbb
clc
popa
nop
rcl
decb
pop
iret
stos
test
sti
xlat
xchg
inc
push
pushf
xor
shl
mov
in
pushf
add
movsb
ficoms
cmp
lcall
xchg
loop
lahf
xchg
sbb
xchg
mov
mov
dec
add
pmuludq
test
push
inc
ja
fwait
popa
fdivrs
popl
fidivs
add
xor
loop
les
cmpsb
xor
sbb
es
mov
les
cli
arpl
sub
shrl
adc
mov
and
mov
pop
outsl
pop
dec
pop
jmp
ljmp
push
and
lock
and
push
pop
add
inc
loopne
mov
cltd
lea
adc
je
dec
out
sub
dec
clc
out
mov
lds
out
imul
xlat
dec
das
cmp
aam
or
into
mov
mov
ffree
ret
mov
adc
fisubrl
and
push
mov
sub
push
mov
and
sbb
mov
mov
mov
cmp
icebp
dec
cmp
jne
ja
pusha
xchg
xor
test
mov
flds
sub
movsb
shlb
lods
cmpsb
fxch
sub
xor
push
shll
clc
xchg
inc
out
mov
jae
sbb
and
enter
loopne
mov
shll
pop
sti
iret
add
dec
out
in
xchg
inc
dec
push
sub
imul
sbb
push
in
fldl
outsl
adc
cmp
dec
repz
xchg
sub
cmp
sbb
xor
xlat
dec
loop
mov
mov
call
add
mov
outsl
icebp
mov
es
pop
adc
adc
dec
mov
mov
adc
int3
and
dec
mov
hlt
in
inc
xor
lret
nopl
scas
bnd
jb
xorl
scas
xlat
pop
imul
mov
push
dec
mull
push
shl
sbb
leave
and
mov
adc
cs
mov
lods
mov
stos
bound
dec
ss
cmp
mov
cmp
push
dec
int
leave
dec
in
xchg
mov
dec
fadd
inc
jmp
stos
mov
popf
push
pop
xchg
pop
sbb
push
and
out
rorb
dec
int3
or
jecxz
adc
cmp
stos
jnp
sahf
xchg
xor
pop
dec
push
dec
fisubs
inc
add
or
shr
cmp
in
pop
fistpll
ja
insb
das
mov
jg
sahf
jmp
aam
aad
push
or
cltd
inc
js
mov
push
mov
pop
mov
mov
cmpsb
sarl
int
push
mov
test
stc
stc
ds
icebp
data16
mov
xlat
dec
or
stos
xchg
fisubrl
pop
ja
add
mov
js
insl
push
sub
fwait
shlb
cwtl
insb
mov
lret
cs
sbb
adc
cs
adcl
stos
jg
pop
pop
dec
mov
jo
adc
data16
xchg
push
inc
ret
jp
shl
push
fwait
xor
iret
jl
in
mov
inc
xchg
fcoml
xchg
sub
dec
enter
xchg
and
cmp
add
aaa
pop
in
mov
enter
xchg
and
ret
fmull
test
lods
pop
dec
push
lret
int
push
into
mov
sbb
in
nop
repz
cmp
mov
push
xor
sarl
inc
xchg
sub
fimull
mov
stos
movsl
xor
in
add
or
sbb
paddusb
jg
rolb
xor
lret
adc
ret
lcall
das
sbb
call
xor
das
shrb
xorb
jmp
lods
adc
xchg
data16
jne
push
cld
fildl
or
fdiv
mov
stos
inc
idivl
negb
movb
insb
clc
pop
mov
sti
aaa
popa
cmpsb
cmc
cs
dec
lds
xlat
cmp
ljmp
inc
inc
mov
push
mov
dec
loopne
cmpb
cwtl
int
cli
notb
mov
sub
sub
hlt
xchg
mov
into
adc
aas
inc
addr16
inc
test
adc
xchg
es
inc
mulb
hlt
or
pop
mov
lock
sbbb
aad
push
push
mov
push
sub
and
fdivr
or
aam
lcall
add
inc
lret
loopne
inc
pop
ret
or
pop
push
and
ljmp
cli
mov
push
pop
jae
push
adc
lret
pop
imull
rol
mov
mov
jo
push
sbb
mov
stos
aad
dec
lock
test
mov
pop
stc
mov
out
cmpsl
xor
jb
xlat
xchg
cmc
bound
cs
bound
lds
pop
fldenv
or
out
jle
testl
sbb
dec
jp
fldenv
pop
ret
clc
dec
and
out
adcl
dec
out
mov
sbb
jne
ret
mov
daa
inc
loopne
out
or
jge
pop
xor
pusha
cmovno
pop
mov
lahf
push
mov
jp
scas
add
push
out
je
stos
jnp
lods
jp
jmp
iret
pusha
outsl
les
cmp
cmp
mov
jno
les
aas
cmc
mov
out
sbb
push
or
fisubrs
fs
xor
fucomp
outsl
mov
xchg
push
aam
sbb
dec
inc
call
imul
jae
repz
pop
push
mov
das
repz
movsl
adc
sub
into
aaa
add
cmc
std
jmp
or
push
dec
xchg
scas
xchg
mov
cwtl
add
dec
ds
dec
push
jecxz
pop
sbb
fwait
push
popf
jo
or
adc
rclb
imul
imulb
outsb
testb
insb
mov
in
in
pop
imul
adc
pop
mov
lods
imul
stos
insl
mov
hlt
jle
push
sub
sar
dec
adc
fiadds
pop
in
dec
daa
jno
sbb
call
jp
icebp
aas
out
icebp
filds
dec
jl
subb
push
outsl
inc
dec
push
ja
test
scas
movsl
frstor
mov
stos
sahf
std
cltd
in
add
inc
push
movzbl
and
mov
pop
imul
gs
mov
cwtl
movsb
out
test
pop
stc
sbb
xchg
test
icebp
outsl
int
push
fwait
cli
pop
cmp
push
mov
and
ficoms
cmpsb
xchg
inc
sub
dec
mov
sub
xchg
adc
out
in
mov
sub
sbb
fs
sub
dec
lock
adc
int
adc
mov
mov
fdivl
pop
jae
hlt
cltd
adc
jae
out
xor
movsl
or
nop
aaa
neg
in
inc
outsb
mov
mov
adc
or
or
add
and
lret
hlt
sarb
mov
repnz
pop
into
jg
or
sub
xor
cmp
jecxz
and
loop
leave
sar
imul
roll
fsubrs
cmc
pop
inc
or
sbb
shlb
mov
pop
aam
push
popf
shll
jg
or
fidivrs
shlb
pop
movsb
pop
push
lds
mov
sbb
orl
or
xchg
imul
test
xlat
xchg
inc
mov
mov
and
dec
bound
sub
cmpsl
mov
adc
stos
jnp
insb
xlat
leave
icebp
lea
pop
data16
mov
stos
call
push
mov
aas
push
mov
fistps
cmpsl
and
xor
scas
cmp
dec
or
fs
ja
jmp
inc
pop
sub
js
shll
xchg
call
decl
inc
movsb
jg
call
out
lds
or
movsb
push
cwtl
mov
nop
lea
es
push
dec
push
mov
cld
pop
iret
jl
cmpsb
mov
mov
push
shll
test
in
test
bound
mov
and
test
mov
stos
push
scas
ficompl
out
loope
jns
fisttps
icebp
in
jns
in
mov
mov
xor
xchg
cmp
lods
mov
sub
nop
adc
mov
into
fwait
scas
jbe
fsts
sub
xchg
fiadds
insl
imull
sahf
mov
in
icebp
data16
dec
lds
push
cmp
push
insl
stos
or
xor
addb
popa
push
add
fcmovnu
jmp
stos
mov
mov
lock
adc
out
sbb
incl
pop
mov
push
mov
gs
xchg
jmp
sub
mov
lods
loopne
xor
mov
mov
test
loopne
dec
movsl
and
dec
mov
jo
xchg
mov
mov
adc
fsts
fs
sbb
mov
cs
mov
ficoml
lret
loopnew
push
jnp
rcrb
mov
add
dec
mov
inc
mov
xchg
ror
out
pop
inc
adc
insb
rcrb
push
cmp
mov
cli
adc
sub
rclb
out
repz
rolb
or
std
pop
or
lahf
or
dec
sti
xor
push
es
push
int3
xor
aad
mov
ljmp
data16
bound
xor
shrd
shll
add
adc
pop
lock
scas
inc
mov
xchg
addl
sbb
aam
dec
push
dec
mov
adc
in
jns
inc
jge
aam
das
ds
clc
mov
adc
pop
insl
jmp
cmp
mov
rorb
fwait
lret
lahf
inc
sub
adc
inc
adc
mov
ds
mov
movsl
xchg
inc
fcomps
jp
sub
inc
pop
aad
sub
push
push
mov
ret
jg
cmc
shrb
imul
mov
or
inc
or
es
das
mov
fdivl
mov
inc
es
push
xchg
pop
aaa
xor
adc
je
mov
mov
push
lret
inc
inc
or
daa
push
hlt
push
fsubrl
out
sbb
inc
xchg
xchg
mov
mov
leave
add
nop
mov
mov
xor
xchg
xchg
ret
xchg
dec
notl
rolb
cwtl
inc
fwait
or
aad
cmp
insb
mov
pop
ljmp
lret
inc
imul
pop
addr16
ret
inc
cmp
mov
clc
sub
jne
jg
xadd
push
xor
xor
imul
pop
rcll
sbb
mov
fsubr
sub
adc
mov
cs
add
add
insl
stos
testl
or
sbb
xlat
rcrb
mov
lds
push
pop
gs
fstpt
lahf
jp
cmpsl
fsubr
xor
ja
mov
and
hlt
scas
add
mov
es
or
pushf
scas
add
push
into
sub
lods
mov
and
or
rcr
jecxz
in
clc
inc
push
adc
pandn
iret
sub
mov
jge
cmc
hlt
jno
sahf
fs
sub
jle
dec
lods
int
fstpl
test
repz
lahf
sti
rolb
mov
dec
jecxz
inc
cmp
dec
mov
lret
cs
popa
test
scas
dec
add
xchg
mov
ss
sbb
push
cltd
pop
xor
mov
push
loopne
and
cmc
shl
hlt
or
test
mov
repnz
fcomi
adc
dec
rcll
add
gs
fdivrl
push
xchg
pop
or
test
ja
push
mov
jge
lock
pop
xchg
and
rorb
int
or
cltd
push
leave
xlat
sub
xorb
push
mov
add
xorl
xchg
ficoml
jmp
fisttpl
jp
fdiv
mov
xchg
pop
popa
lahf
incb
movsl
fwait
pop
adc
inc
mov
fstpl
inc
mov
mov
stc
jbe
inc
lods
add
sub
mov
mov
mov
int3
sub
adc
mov
adc
in
mov
cli
fists
icebp
dec
mov
dec
fcomps
mov
xchg
dec
sti
in
les
cmc
or
loopne
jbe
mov
push
icebp
push
mov
movsb
xchg
push
xor
xchg
ret
fdivr
sub
or
lret
mov
je
stos
push
std
imull
cmpsl
lahf
lret
mulb
icebp
jnp
push
jmp
push
outsl
rorb
xor
rcrb
xor
negb
nop
enter
xchg
mov
mov
pop
repz
jno
aaa
nop
mov
gs
xor
and
fmull
hlt
mov
lods
mov
adc
mov
dec
jecxz
inc
pop
nop
fadds
push
jg
jmp
mov
xchg
xor
loopne
inc
sbb
jmp
push
aad
sbb
pop
cmp
or
or
hlt
xchg
ds
popa
daa
sub
jg
popa
adc
push
inc
js
inc
push
jge
fs
push
sar
mov
cwtl
and
out
daa
rclb
mov
dec
lahf
addr16
jb
addl
rorb
jb
iret
xchg
or
push
mov
ja
cltd
frstor
mov
roll
test
aam
inc
add
pop
stos
fsubrs
bound
sub
add
add
push
push
dec
and
nop
lock
outsb
loop
shll
jle
or
pop
inc
pop
push
bound
in
fistl
push
test
int3
lods
cmpsb
test
fisttpl
fistpl
dec
ret
call
mov
out
inc
leave
jp
pusha
cmp
add
test
scas
rolb
pop
imul
lea
cmp
jp
mov
stc
out
push
fwait
shlb
mov
testl
adc
push
out
pop
cmp
jle
xchg
xor
sub
push
test
loop
jp
cmp
sub
jnp
dec
sub
and
mov
ret
stc
scas
sarl
or
jle
mov
jmp
mov
adc
and
add
mov
push
push
mov
in
push
in
sub
mov
les
adc
adc
daa
in
stos
cmp
das
popa
pop
cmp
pop
sub
call
jns
push
sub
mov
or
imul
mov
imull
xor
adc
int3
cmp
subl
add
enter
cmp
sub
out
jecxz
jl
push
into
scas
subl
push
dec
into
movsb
ret
outsb
push
adc
stos
pop
test
stos
and
xchg
cmpsb
add
outsl
xor
dec
mov
in
icebp
in
das
je
push
pop
in
add
xchg
cwtl
xchg
in
mov
lea
or
jl
fadds
mov
ss
push
cmpsl
push
fisubs
jns
rolb
andb
cmp
sub
xchg
out
adc
push
jmp
mov
or
adc
push
nop
out
and
pusha
push
dec
add
adc
ja
ret
popf
out
mov
imul
mov
ficompl
sar
mov
mov
sbb
adc
mov
loope
std
push
arpl
mov
aam
ljmp
or
dec
shlb
push
pop
scas
lcall
cmp
in
xchg
jmp
adc
cmpsl
and
mov
cltd
xor
adc
arpl
cltd
mov
scas
mov
xor
cmp
inc
adc
adc
mov
push
daa
inc
mov
dec
jp
jmp
jle
add
jo
adc
jae
mov
jne
int
and
mov
fwait
mov
mov
pop
out
push
test
fadds
mov
jl
jl
in
in
jb
dec
sbb
nop
sbb
sti
dec
mov
scas
dec
xor
int3
cmc
jbe
jmp
outsb
mov
jnp
jmp
jbe
dec
xchg
dec
fs
mov
stc
xchg
mov
mov
mov
cli
pop
imul
mov
cmp
dec
mov
sarb
cltd
add
adc
push
pusha
and
jecxz
fnsave
jne
daa
and
or
dec
into
insb
fdivs
adcl
push
fmull
testl
jo
popf
pop
mov
mov
cmp
faddl
icebp
or
xlat
mov
or
outsl
subb
rcl
pop
iret
out
mov
popa
adc
xchg
pop
repz
rcrl
fcmovne
lods
jg
and
fsubrp
loope
and
lret
dec
xchg
addl
xchg
inc
inc
lcall
mov
rorb
icebp
into
cmc
or
pop
jmp
rcrl
je
rcll
push
dec
and
push
or
xlat
xor
mov
lret
inc
addr16
sbbl
adc
jne
iret
mov
and
mov
in
repnz
xchg
or
inc
dec
mov
cmpsl
jae
dec
sub
dec
shll
test
ficompl
les
push
xchg
add
outsb
push
ret
mov
nop
jno
ds
test
mov
fwait
sub
nop
inc
cwtl
call
xor
push
push
sbb
out
loop
xchg
in
adc
fidivrs
fstps
adc
mov
ljmp
cmp
stos
nop
adc
push
je
loope
out
decl
xchg
popa
mov
fiaddl
in
add
jg
test
testl
mov
add
sbb
mov
in
orb
inc
movl
rcll
jmp
mov
sbb
data16
adc
push
aad
testl
pusha
mov
les
pop
out
xchg
or
dec
and
ret
mov
adc
mov
mov
mov
fsubrl
popa
push
sbb
test
or
addr16
add
push
jns
sub
movsl
xchg
repz
ret
fildl
xchg
in
test
and
stos
cmp
ret
push
jge
test
ret
jmp
push
add
dec
stos
mov
jle
mov
dec
mov
mov
or
loopne
sub
push
test
dec
adc
shr
fstl
sbb
sub
or
mov
mov
addr16
in
mov
or
lods
and
xchg
add
arpl
in
gs
mov
pop
jae
dec
pop
cmp
sti
sub
cs
aad
lods
ficompl
ss
add
cmp
outsb
xor
test
xor
fbld
popa
lcall
inc
and
scas
test
pop
lds
xchg
xor
push
ret
in
xchg
adc
dec
cmp
mov
lret
add
imul
sub
loopne
scas
jp
add
cmpsl
fisubl
frstor
xchg
dec
jl
ljmp
jmp
and
lods
cli
or
scas
subps
fbstp
dec
and
mov
clts
loopne
xor
mov
pop
fcmovu
sub
lret
add
or
and
sbb
or
lret
adc
shr
or
shrl
mov
js
das
ljmp
sbb
jb
sub
push
dec
hlt
and
cmp
loop
mov
jae
push
cli
mov
cmpsb
pop
xor
mov
mov
out
test
in
je
lahf
subb
leave
xchg
mov
ds
mov
and
shrb
xchg
push
push
dec
ret
cltd
xchg
lcall
sub
lea
out
or
mov
or
xlat
cld
mov
jno
lret
sbb
ret
mov
or
push
mov
aam
dec
jnp
ss
iret
sahf
push
fsubrs
mov
push
lahf
jo
inc
and
jge
xlat
sbb
xchg
or
lret
inc
pop
sub
push
sub
cs
push
lods
je
xor
or
and
mov
lcall
cmc
lock
clc
dec
in
inc
lahf
enter
popa
mov
pop
jae
lods
out
cltd
adc
fidivrl
mov
mov
xor
jp
pop
mov
ret
int3
mov
push
lcallw
mov
dec
lea
js
shrb
aad
int3
lock
jle
in
xor
add
mov
daa
subl
arpl
in
mull
dec
xchg
idivb
or
subl
inc
sbb
jb
pop
movsb
lods
push
jns
mov
jecxz
jp
das
inc
and
mov
idivb
xchg
mov
leave
jns
ja
in
sti
jmp
add
stc
mov
icebp
das
sbb
sub
enter
mov
push
push
nop
mov
mov
jle
clc
andl
adc
xchg
in
jge
repz
sbb
aaa
xchg
jl
pop
shll
push
mov
xor
dec
sbb
pop
mov
sub
aas
gs
fcompl
out
adc
test
xchg
adc
dec
cwtl
push
and
mov
sbb
repz
addl
and
sbb
stos
shr
push
xlat
xchg
sub
shll
negl
jne
aaa
push
pop
je
cltd
dec
das
ret
aad
mov
sub
les
dec
ds
sub
mov
sub
xchg
pop
imul
xor
jp
xchg
test
pusha
push
outsb
pop
sub
mov
jns
pop
in
out
push
pop
mov
fisubs
ret
push
sub
gs
xlat
in
sbb
mov
cwtl
jecxz
lock
scas
ljmp
jns
bound
shlb
sti
and
or
pusha
pop
les
stc
xchg
sub
sub
icebp
dec
push
mov
jae
sbb
sub
subb
ss
inc
pop
sub
mov
xor
add
ret
test
andl
add
pop
fnstcw
sbb
je
pop
hlt
mov
cmc
fsts
in
hlt
loop
pop
rcrb
out
adc
dec
mov
push
stos
cmp
xorl
lret
mov
cltd
mov
xor
xor
mov
mov
bound
sbb
je
roll
xchg
enter
cmp
xor
dec
inc
es
push
xor
pop
test
scas
add
mov
sub
sahf
outsb
mov
or
das
jg
cmp
movsb
and
cmp
jecxz
inc
ret
mov
loopne
mov
icebp
in
xor
je
fcomi
das
clc
add
rcr
push
xchg
xchg
sub
cwtl
mov
outsb
cltd
movsl
mov
icebp
dec
mov
mov
in
dec
arpl
decl
pop
or
push
push
sbb
add
fldt
test
dec
mov
das
fdivl
push
sbb
cmp
mov
pop
test
mov
push
jbe
cli
add
aas
into
in
inc
ret
lret
xchg
mov
jae
mov
test
inc
mov
in
push
repnz
push
std
cmpsb
or
mov
cmp
lds
popf
stos
push
jecxz
loop
ljmp
sub
mov
sbbb
pop
int
jns
mov
mov
or
cs
mov
xrelease
rolb
lods
in
in
cld
inc
xlat
jmp
aad
jb
inc
pop
pop
out
or
daa
lahf
loopne
xor
mov
mov
push
lock
jl
jmp
sbb
pop
fdivrl
enter
xchg
adc
icebp
dec
inc
dec
dec
cmp
mov
fcoml
call
test
xchg
push
pop
cmp
sub
cmpsl
out
insb
sub
jnp
out
out
lcall
ja
je
es
test
loop
repz
pop
fwait
pop
mov
es
lret
orl
mov
pop
outsb
adc
std
push
scas
ret
rcrb
fidivrs
xchg
je
mov
xor
jae
push
ljmp
lcall
loopne
xor
adc
ja
sub
inc
int
outsl
outsl
push
lret
mov
sub
ret
jb
mov
xorb
jge
mov
fcmovnbe
fxch
sub
fcoml
cltd
arpl
test
enter
ds
bound
pop
xchg
gs
idivl
and
add
jbe
jp
into
lahf
movsl
and
sub
jo
push
xchg
cmp
add
sub
sbb
in
add
call
lock
ret
and
mov
add
xchg
xchg
sub
les
bound
mov
cmp
aad
in
cwtl
rcl
insb
cmp
andb
cmp
loop
inc
out
fsts
jg
cmp
xchg
mov
in
pop
inc
sub
aaa
pop
push
ds
stos
push
gs
jmp
push
hlt
push
push
mov
cmp
mov
jle
imul
repnz
sbb
js
lret
repnz
fdivrl
jl
pop
lret
sbb
iret
xchg
xchg
mov
adc
add
mov
mov
push
jmp
lods
mov
aaa
inc
inc
rolb
dec
out
cmc
dec
pop
fnstsw
cli
mov
movsl
cwtl
in
mov
and
sbb
inc
xorl
orl
fcmovbe
test
inc
mov
fstl
cmc
dec
push
push
and
lods
or
push
in
xor
xor
fisubl
inc
shlb
pusha
xchg
movl
xchg
push
cmp
sbb
mov
add
fwait
inc
mov
push
jle
aam
loop
dec
nop
push
shll
pop
push
mov
mov
jb
add
mov
andb
out
inc
sbb
imul
add
and
testb
mov
cmc
adc
dec
dec
jno
adc
cmc
mov
outsl
stos
in
push
adc
rcrb
adc
dec
lds
out
lret
sub
xor
cwtl
mov
and
int3
xchg
nop
xor
and
dec
loop
adc
sbb
xchg
sub
insb
ja
push
mov
sub
test
pusha
ss
xchg
test
insb
enter
pop
fisubrl
pop
psubusw
push
out
ret
leave
xchg
jne
mov
or
fmuls
xchg
dec
and
idivl
cmc
xchg
sti
jns
mov
lea
imul
mov
rclb
push
mov
test
pop
mov
mov
sub
mov
ret
mov
cld
stos
xchg
pop
mov
sti
hlt
leave
and
loopne
mov
fcomip
mov
sub
pop
sub
hlt
out
push
cs
nop
mov
xchg
into
pop
sbbl
add
nop
adc
out
aam
xchg
lret
cmpsb
jg
out
push
ja
cmp
test
dec
xor
dec
je
cmp
ffree
dec
xchg
sahf
cmc
or
sub
loopne
idivl
jns
sbb
jp
outsb
pop
pop
rclb
sbb
adc
das
aad
cmp
fdivrp
mov
daa
push
icebp
lock
dec
movsb
add
mov
mov
or
aam
cmpsb
sbb
fsubr
jmp
imul
fcmovnbe
jl
jnp
or
cwtl
pop
mov
scas
insb
hlt
sarl
test
cmp
push
pop
and
fbstp
lea
xchg
cwtl
les
clc
cmpsb
in
push
in
ret
lahf
sub
dec
pop
in
mov
ret
mov
push
loope
movsl
fnstcw
xor
and
xchg
inc
ja
or
xchg
repnz
xor
je
es
mov
jnp
fiadds
and
fs
cmpsb
rcrl
loope
push
adc
cmpsb
mov
push
nop
xor
cmpsl
xchg
fcomps
out
xor
jae
sub
hlt
pop
sub
scas
shrl
adcl
sbb
cmc
sub
adc
pop
mov
fisubl
aam
sbb
out
stc
cmp
adc
or
pop
xchg
ss
pop
xor
int
in
loopne
test
in
push
lds
cmp
jmp
stc
pop
cmp
add
pop
adc
jmp
dec
pop
cwtl
cmp
cmp
xchg
fcmovnb
addr16
fidivs
inc
or
sbb
mov
mov
adc
xchg
pop
sbb
mov
stos
ret
iret
in
ljmp
orl
in
lea
pop
test
push
add
push
push
arpl
sub
mov
sbbl
push
jne
xor
aam
mov
cmp
shll
mov
mov
lock
jae
jnp
adc
in
lea
jge
movsl
jmp
inc
add
out
fimuls
test
add
je
push
aam
push
jnp
lret
xor
dec
in
mov
fs
ljmp
aad
lds
test
cmp
cmp
xor
cmp
loopne
das
pop
pop
xor
scas
jae
inc
lods
pop
pop
inc
stc
xorl
jo
popf
lahf
jo
outsl
and
ficompl
xor
daa
xchg
out
cmp
adc
dec
aad
dec
jns
add
mov
ror
xchg
in
lret
jb
inc
xchg
outsl
enter
add
aad
in
rcll
aas
mov
popa
mov
mov
adc
sub
cmp
cwtl
out
add
add
jne
iret
mov
in
sahf
xchg
js
push
popf
cmp
or
mov
push
decb
mov
inc
sahf
lret
mov
adc
ss
inc
add
dec
mov
push
fsubr
push
cli
insl
leave
jmp
mov
adc
loop
lds
cmp
push
fiadds
int
add
lea
mov
cwtl
add
fnstsw
xchg
ret
jmp
push
adc
cmpl
pushf
jb
movb
ret
cli
jmp
adc
in
fcompl
xor
inc
add
mov
inc
loopne
lret
imul
xchg
shll
and
xchg
popf
push
sbb
and
loop
movsl
icebp
push
xor
addr16
movsb
sahf
sub
xabort
cli
sahf
insl
ljmp
out
cmpsl
in
mov
sub
lea
aam
repnz
out
lea
sbb
je
jmp
cs
jnp
lahf
mov
shll
push
and
pop
cmpsl
inc
cwtl
add
test
pop
adc
push
adc
inc
adc
outsl
shl
push
ret
push
xchg
popf
push
out
and
pop
xchg
mov
mov
int
dec
pop
repz
adc
outsb
jge
rcr
stc
clc
xchg
sub
sbb
divb
mov
dec
ss
inc
sbb
jecxz
mov
das
stos
aas
adc
lret
push
add
jmp
adc
hlt
xchg
xchg
mov
shrb
adcl
pusha
jp
out
cltd
clc
mov
testb
jae
stc
ret
and
add
scas
fs
cmpsb
cmpsl
lea
repz
hlt
mov
sub
xor
test
movsl
inc
ret
out
leave
lret
test
rolb
out
jae
adc
popa
lods
or
pop
and
dec
addr16
inc
test
aad
sub
mov
cld
jge
lahf
xor
sahf
jns
adc
testl
lret
push
fldt
lock
fcomps
dec
mov
in
sub
and
dec
jmp
mov
sbb
pop
push
add
cli
ss
jnp,pt
mov
shlb
out
lahf
repnz
sbb
loop
and
sbb
scas
push
push
cmc
filds
loop
sbb
adc
add
mov
and
lcall
movsl
repz
sbb
outsb
iret
notb
mov
sbb
dec
cmp
mov
sbb
cld
mov
mov
ret
push
test
pusha
jmp
xor
insl
add
push
cmp
xor
or
jmp
inc
addb
lds
loopne
loopne
mov
or
xor
stos
insb
xor
into
dec
int3
jg
test
outsb
mov
and
and
or
in
and
mov
jne
dec
sbb
dec
shlb
adc
imul
and
mov
mov
cmp
clc
inc
out
pop
popf
jg
out
mov
loope
dec
movb
cmp
mov
stc
aad
mov
pop
cltd
push
or
pop
lock
pop
xchg
adc
push
cltd
data16
stos
cwtl
fiaddl
out
dec
sarl
shlb
sub
xchg
movsl
mov
addr16
aas
adc
cmpsb
bts
pop
call
adc
sub
xor
int3
jg
cmpsb
or
dec
orb
mov
xchg
xchg
mov
pushf
clc
test
ret
add
pop
insl
jbe
ficompl
jecxz
into
in
add
call
and
xor
stos
sbb
adc
in
rorl
dec
or
lea
pop
in
sbb
int3
cmpsb
aas
xor
push
xor
jmp
push
lcall
jp
or
dec
clc
int
jo
pop
xchg
into
jns
or
cmp
cmp
test
lods
push
cwtl
addr16
mov
mov
iretw
and
nop
xor
adc
mov
mov
mov
mov
inc
cmp
data16
icebp
cmp
popf
adc
aam
mov
les
int
rcll
mov
insl
push
popf
fstl
or
icebp
scas
xchg
movsl
leave
push
dec
adc
jae
or
push
scas
clc
pop
mov
mov
adcb
cwtl
cmp
and
sbbb
aaa
mov
rcr
or
ljmp
xchg
mov
and
les
mov
adc
movsb
subb
sti
test
loope
inc
jmp
lahf
mov
out
mov
testl
lea
in
mov
xchg
rcll
add
cltd
mov
push
enter
ret
int3
cmp
push
frstor
repnz
dec
jns
mov
push
or
jne
adc
mov
pop
jp
dec
push
orl
xchg
insl
std
jns
mov
add
cmp
pop
cltd
in
leave
push
mov
mov
loop
sub
xchg
in
xchg
and
add
stos
push
pop
stc
aad
sbb
mov
in
jo
scas
lahf
data16
sbb
jge
pop
ret
push
add
sti
inc
sbb
out
popa
inc
push
lret
cmp
jnp
pushf
jne
mov
scas
push
pop
ja
push
popa
push
pop
sbb
cmp
xchg
les
xchg
or
hlt
test
mov
mov
adc
jl
mov
sub
fs
cmp
jp
ret
xchg
jmp
push
fistps
pop
lea
cs
add
push
pushf
mov
and
sbb
jg
scas
jbe
mov
lahf
rorl
jns
fdivp
sub
fimull
jecxz
aam
les
scas
or
xchg
aam
out
popl
push
xchg
bound
nop
andl
fs
mov
dec
push
jae
sub
nop
and
mov
stos
inc
or
mov
jo
push
loope
mov
add
sub
sbb
cmp
pop
insb
jnp
sub
call
ljmp
lds
es
stos
adc
fcmovb
std
cli
fldt
add
pop
rcr
out
inc
push
aad
mov
push
jge
cwtl
jl
add
int3
cmpsb
das
sahf
dec
mov
jp
push
mov
cld
int3
popf
or
pop
and
xchg
lock
in
inc
inc
add
inc
push
adc
sub
in
mov
adc
daa
enter
lret
shl
cmp
dec
jno
sub
mov
ja
sahf
test
notl
jmp
fadd
int3
aad
mov
sbb
insb
pop
cmp
mov
cmpsb
scas
fdivs
divl
push
sahf
out
inc
nop
or
stos
out
mov
cmp
add
pop
pop
repnz
pusha
inc
es
pop
sub
xor
pop
popf
outsb
adc
and
outsl
ss
push
les
sbb
sub
xchg
jno
push
sahf
cmpps
incb
mov
movsl
mov
rorb
push
push
inc
in
retw
inc
xor
out
xchg
pop
test
jns
insl
data16
cs
test
mov
leave
repnz
test
add
das
addr16
out
loope
adc
das
int3
cmpsb
jmp
in
push
mov
loope
ficoms
fwait
jo
leave
push
xlat
inc
pop
fmull
inc
int3
push
pop
lahf
outsb
subb
or
mov
jno
pop
xor
mov
push
or
adc
mov
add
xchg
pop
andb
bound
mov
mov
cld
pop
cld
or
es
popf
enter
jecxz
fists
fmuls
add
fsubrs
cwtl
test
pop
mov
jecxz
pusha
xor
or
data16
test
test
push
xor
bound
int3
aam
cs
xlat
sbb
loop
sbb
inc
cwtl
fwait
call
xor
shr
enter
imul
cmpl
xchg
mov
and
mov
sbb
mov
dec
mov
adc
xchg
push
les
mov
push
daa
sub
das
mov
popl
jmp
jmp
xchg
push
lods
xchg
add
mov
js
sti
mov
ret
mov
mov
xor
roll
sahf
addr16
or
cmpsl
mov
out
sbb
test
xchg
or
xor
loopne
fists
lret
pop
test
xchg
push
xchg
pusha
rcr
das
mov
xchg
inc
add
push
sub
jmp
sub
insb
sub
popa
mov
es
pusha
and
xchg
and
adc
fsubr
lods
and
push
mov
ret
xor
mov
and
jb
out
imul
push
call
sti
loope,pn
in
loop
clc
dec
je
push
iret
adc
dec
inc
inc
clc
jno
xchg
adc
gs
hlt
sbb
mov
rcl
lea
cmp
mov
add
mov
mov
xchg
mov
cmp
cmp
pop
popa
jo
in
lahf
es
repnz
adc
add
call
add
add
pop
and
nop
addb
outsb
adcl
cli
jp
push
xor
fcom
sbb
cwtl
and
cs
mov
and
cltd
cmp
mov
mov
jnp
pop
dec
pop
pop
cmp
es
inc
test
clc
test
lods
mov
ljmp
imul
push
int
in
aas
imul
mov
js
add
jb
mov
xchg
mov
pop
stos
jge
adc
imul
dec
and
dec
mov
cmp
cmp
pop
scas
loop
pop
xor
imul
ret
imul
push
dec
popa
mov
or
push
sahf
ja
mov
scas
xor
dec
push
sti
lret
clc
into
fbstp
das
mov
inc
lods
stos
cmp
push
lds
mov
pushf
sub
ljmp
xchg
jne
sbb
call
xor
and
sub
cmp
pop
push
dec
shlb
in
int
add
lods
push
lcall
lcall
sbb
rorl
xchg
dec
clc
mov
out
sbb
mov
mov
mov
push
leave
cmp
jo
cli
sub
int3
test
push
aad
sahf
test
xchg
and
mov
cmp
cmpsl
xor
inc
xchg
stc
xor
and
jl
fs
mov
mov
xor
inc
in
jge
movnti
leave
mov
lahf
lcall
xor
scas
sbb
mov
mov
add
adcb
jecxz
das
inc
ret
faddl
adc
or
sub
movsl
inc
sbb
or
push
aam
mov
ds
jb
call
shrb
in
jo
sbb
dec
aad
pop
out
xor
mov
sub
cmp
mov
lea
inc
sbb
rol
mov
jmp
out
inc
leave
jae
lods
mov
push
pop
push
sbb
mov
xor
xlat
loopne
sbb
in
std
mov
leave
idivb
pop
jnp
shlb
pop
jns
insl
ds
xchg
movl
pop
xchg
arpl
pop
push
ret
cmc
sub
scas
jmp
adc
icebp
call
dec
xor
les
xchg
cld
fstp
insl
out
mov
xchg
add
iret
cwtl
mov
cmc
addl
fcmovnu
hlt
imul
inc
or
sbb
add
mov
mov
jo
xchg
repz
and
lea
jae
xlat
sbb
sub
cltd
call
jecxz
jae
iret
jbe
mov
mov
fistpll
xorl
push
mov
in
xor
xor
jns
adc
adc
cmp
mov
push
cmp
stc
push
adc
popf
mov
lret
mov
pop
pop
test
dec
mov
sbbl
adc
insb
xor
inc
cmp
or
mov
pushf
xchg
pop
je
adc
dec
push
cmp
xor
add
btc
scas
mov
fiaddl
mov
and
mov
adc
dec
ret
pop
push
mov
add
in
xchg
or
cltd
dec
push
or
mov
stos
test
mulb
std
xchg
sahf
ss
sar
push
dec
mov
mov
push
push
or
aam
push
push
test
lods
in
scas
cmp
sub
or
mov
cmp
jbe
mov
mov
cmp
push
loopne
mov
es
hlt
in
jmp
ljmp
bound
and
lcall
adc
jle
jno
sbb
fidivl
or
pop
pop
shll
mov
out
mov
dec
push
lods
icebp
out
nop
stos
out
mov
sbb
push
mov
movsb
inc
sub
or
mov
jbe
adc
jnp
lods
test
stos
cmp
inc
adc
dec
mov
out
mov
push
icebp
adcb
dec
ret
in
cmp
les
push
inc
neg
or
cmp
cmp
inc
jp
test
mov
js
loop
sub
jg
stc
repz
or
xchg
scas
out
adc
notb
inc
xchg
test
in
inc
mov
sar
xor
push
in
cli
pushl
lret
std
imulb
mov
xchg
test
int3
hlt
scas
dec
jae
popa
mov
sarb
outsb
jno
sbb
cmp
inc
jno
lods
lods
clc
xchg
pop
push
pop
daa
or
das
cmp
sub
xlat
scas
ja
in
lds
or
mov
jne
ror
adc
pop
push
fldt
ja
jb
jp
fs
loop
stos
sti
mov
fisttpll
cmp
icebp
stos
outsl
jg
inc
or
mov
and
jb
inc
idiv
cmp
mov
shrb
push
lret
addl
popa
cmp
das
jl
lock
mov
int
add
enter
fnstsw
js
andb
shl
add
mov
sarb
push
es
out
xchg
iret
dec
dec
divl
sub
mov
les
pop
lret
cmpl
sbb
add
sub
dec
cltd
sbb
fiaddl
add
mov
xchg
sub
adc
cld
rcrb
cmpsl
shll
xorb
xor
insb
push
outsl
je
bound
aaa
inc
cli
sub
cwtl
mov
lock
push
sbb
fbstp
loope
xlat
fldcw
xor
ds
inc
fcomps
mov
sbb
mov
sarl
out
fwait
push
xor
enter
cmp
lock
mov
mov
cmp
mov
shrb
in
mov
pusha
mov
push
jmp
lret
sub
aas
or
cld
inc
call
daa
inc
inc
dec
sahf
or
ret
addl
ret
mov
mov
nopl
pop
adc
insl
iret
jbe
inc
stc
je
int3
add
inc
rorb
or
pop
cld
iret
jp
jnp
cmp
mov
or
lret
xchg
mov
rcrl
push
push
mov
mov
es
clc
insl
jb
int
test
cmc
mov
dec
je
imul
test
test
mov
bound
mov
xor
jecxz
outsb
pop
jo
sub
pushf
xorb
jb
pushl
js
stc
sbb
sahf
mov
xchg
arpl
xchg
push
push
in
and
dec
fisubl
into
push
cmp
pop
repz
xor
add
gs
outsl
xor
jl
push
fimuls
and
pop
inc
push
out
negb
fadds
cmp
faddl
clc
int3
xchg
enter
fistpll
sti
mov
aas
or
dec
mov
or
xchg
push
xchg
push
in
popf
daa
sti
push
sbb
push
call
std
push
ret
clc
aas
cs
lret
pop
jmp
out
and
jns
repnz
xor
hlt
bound
xchg
ret
add
adc
or
pop
push
lods
out
dec
lahf
xor
shlb
cmp
push
out
pop
lahf
cmpb
imul
or
sti
inc
xchg
lret
xor
adcb
mov
bnd
fdiv
sub
jecxz
pop
add
lock
in
xchg
mov
es
adc
xchg
cmp
push
in
adc
fnstenv
mov
lock
aaa
mov
fimuls
sbb
sarb
add
jg
and
adc
movsl
xlat
mov
flds
imul
sbb
add
dec
push
sbb
jae
mov
fistps
lret
push
xchg
movsb
inc
push
das
dec
sbb
loope
insb
ficompl
mov
xchg
adc
xchg
jecxz
dec
xor
loopne
mov
fdivl
push
test
lods
and
cltd
or
es
insb
push
cmp
adc
stos
cmpsb
ljmp
mov
movsb
xchg
ret
and
lret
enter
pop
mov
das
call
fstp
sarb
jbe
dec
xchg
push
mov
mov
cmc
adc
mov
out
icebp
popa
pop
mov
int
pushf
jno
pushf
inc
push
lds
mov
arpl
mov
aas
imul
aaa
jp
out
rcrl
mov
or
and
in
hlt
jmp
rcr
hlt
idiv
push
cli
fmul
jno
sbb
inc
or
jns
jmp
pop
sbb
stos
jmp
adc
cmp
pop
js
lock
rorl
mov
dec
mov
push
sub
es
cld
cld
jbe
xchg
xor
or
lods
and
sub
cltd
fcoms
xchg
test
and
leave
inc
out
stos
fidivl
loop
mov
je
or
dec
cmc
cltd
and
sbb
xchg
and
nop
sahf
inc
cmp
imul
test
xor
fidivrl
xor
sbb
dec
pop
sub
and
leave
aas
mov
sub
lret
sbb
cld
mov
add
cwtl
xor
inc
pushf
xchg
icebp
inc
mov
cs
outsb
pop
pop
mov
push
sbbb
sub
adc
or
in
inc
mov
cmp
sbb
inc
and
frstor
fistps
sub
test
in
mov
sub
lock
mov
dec
out
sbb
xchg
mov
mov
mov
nop
into
cmp
sahf
es
push
pop
xchg
fmul
sbb
or
lock
xchg
jb
in
lods
inc
push
leave
xlat
push
fucomip
sub
sti
mov
rcr
xchg
popa
in
or
and
adc
xor
sbb
in
inc
scas
mov
cmp
and
stc
and
repz
mov
cmp
cmpb
sahf
jo
mov
add
sbb
pop
xchg
jmp
add
inc
sbb
sub
mov
mov
cmpb
sub
iret
and
aad
adc
adc
push
fisubrl
mov
mov
test
flds
push
out
jmp
and
das
jns
ds
std
mov
jecxz
cltd
imul
mov
arpl
cmp
shlb
xchg
xor
pop
dec
repnz
adc
add
nop
addr16
ret
push
fnstenv
add
inc
jae
in
in
sbb
loop
arpl
xor
sti
mov
and
fcmovb
jo
lret
mov
jmp
cld
cwtl
xchg
pop
mov
dec
xor
je
ja
popf
xor
cmpsb
out
in
outsb
inc
push
cmp
add
test
push
and
adc
add
lods
add
loopne
and
sbb
or
rcll
jbe
cmp
ljmp
xchg
cmpsl
or
jl
test
jg
scas
push
fmulp
fmuls
outsl
xchg
jae
jge
mov
mov
dec
cltd
nop
mov
xor
push
pop
test
daa
inc
jae
inc
out
lahf
inc
cmp
mov
push
jmp
aam
jno
dec
xchg
aam
icebp
mov
pop
and
dec
out
xor
test
sub
cs
jnp
xor
xchg
adc
imul
and
cmp
stos
out
xchg
das
sbb
mov
jbe
cld
pop
mov
fmuls
xchg
fstpt
xchg
cmc
xor
insb
fsubrs
out
mov
sbb
inc
add
dec
in
test
push
in
lret
lret
out
rorl
and
push
mov
enter
add
jo
xor
ret
shll
loope
adc
scas
xchg
fwait
push
mov
pop
fisubrl
jns
xlat
mov
push
or
push
jb
sub
movsb
cltd
push
pop
mov
inc
scas
sbb
pop
js
adc
loopne
pop
dec
mov
popa
aam
xchg
inc
cmp
jb
inc
sbbb
sahf
movsl
mov
cmp
daa
imul
cmp
cmp
mov
in
push
push
fcmovne
lods
sbb
mov
push
js
cmp
mov
jo
rcr
jae
xorl
sbb
into
repz
pop
out
popf
stos
out
pushf
aaa
inc
xor
test
lret
inc
fwait
sbb
mov
mov
ficompl
sub
sti
jp
clc
pop
or
xchg
loop
testl
insb
cmp
fdivrs
movsl
mov
and
lea
ret
idiv
cmc
icebp
sub
xchg
adc
pop
push
push
in
jo
jae
push
jo
cmpsl
out
mov
xchg
jb
jmp
xor
imul
into
add
cmc
lea
mov
pusha
jo
cwtl
jb
mov
xchg
lods
lds
popa
js
jp
test
push
add
sti
inc
imul
fsubrl
adc
ret
push
outsl
mov
out
data16
lods
test
push
inc
add
test
mov
pusha
idivb
add
mov
pop
lock
out
mov
fsubr
pop
mov
xchg
mov
jo
jmp
ds
mov
fmull
xchg
sub
mov
push
imul
jg
adc
adc
sub
sahf
pop
fs
movsb
cmp
les
das
pop
in
lret
sbb
or
sbb
inc
shr
mov
cmp
in
pusha
push
adc
xchg
stos
mov
inc
scas
std
movsl
jp
pop
cs
sub
pop
mov
or
sub
scas
int
fisubs
inc
test
mov
repz
sub
adc
pop
mov
stos
sbb
sbb
fadds
mov
aas
in
sahf
mov
inc
fmuls
notl
jle
sbb
fisttps
cmp
aad
sbb
imul
ret
push
loop
mov
jne
push
adc
xor
xchg
mov
mov
push
add
jg
xor
push
sub
fstps
out
mov
pop
inc
hlt
dec
pushf
pop
jbe
lret
sub
jns
dec
cmp
mov
loop
pop
shlb
push
jo
fsubl
xchg
push
mov
cmp
test
gs
or
or
pop
call
push
shlb
imul
or
clc
iret
les
pop
js
repz
repnz
shrb
cmpsl
push
pop
xor
lds
pop
iret
ja
shll
mov
lea
mov
aam
int
movsl
test
lret
mov
repz
cmp
pop
stos
outsl
test
pop
mov
scas
jp
push
leave
sbb
mov
test
push
add
movsl
mov
fwait
out
shrl
or
jae
test
xchg
cmp
stos
xchg
dec
mov
lods
arpl
mov
mov
int3
dec
test
gs
push
shr
addr16
xchg
repz
fs
sub
xchg
sbb
divb
cmp
push
lahf
divb
sub
jl
mov
dec
xor
std
jge
ret
add
add
out
lahf
push
adc
movl
and
dec
push
inc
outsl
aam
jo
repnz
popa
inc
rcrb
cltd
xor
pop
repnz
clc
or
call
outsl
xlat
sub
xor
jg
jns
jnp
shll
add
pushf
cli
lret
xchg
dec
leave
lcall
xchg
test
imul
shlw
inc
push
and
sub
aaa
jnp
into
shr
aad
lods
jno
lret
xor
mov
jno
and
andb
inc
sub
sahf
push
push
or
inc
ret
rcll
lret
mov
sarb
js
test
sub
test
lcall
jmp
inc
fdiv
loope
hlt
inc
aad
inc
cmp
icebp
in
fistl
inc
cmp
testl
cmpsb
out
mov
mov
xor
rorl
subl
int
mov
out
fldenv
imulb
inc
jae
mov
mov
dec
push
gs
dec
cmp
rcl
in
nop
in
mov
sub
jle
movsb
lea
mov
test
jnp
lock
stos
and
mov
sarb
push
in
jg
mov
jmp
jo
es
das
imul
and
and
mov
xchg
lret
dec
fwait
mov
lods
fstl
sbb
scas
in
add
ljmp
push
xor
ret
push
subl
les
call
push
jecxz
xchg
jo
shl
imulb
scas
outsb
aad
mov
pop
icebp
or
sub
test
popa
cmp
push
dec
mov
call
cmp
push
pop
ds
add
inc
cmc
pop
in
pslld
mov
bound
loop
xchg
pusha
mov
xlat
fldt
mov
cli
or
repnz
mov
jbe
mov
test
adc
xchg
out
inc
cwtl
out
xchg
xorb
out
mov
call
test
mov
test
lds
scas
jecxz
sbbb
aaa
mov
mov
sti
and
aam
lea
shlb
push
mov
popf
mov
shlb
cmp
jae
jb
popa
rcll
outsl
adc
in
xor
mov
jl
push
pop
idiv
sahf
mov
lods
add
iret
or
into
mov
jbe
lock
lcall
push
fucomp
mov
add
push
sbbb
out
pop
jmp
dec
aaa
fwait
into
arpl
lods
or
mov
test
xchg
lret
sub
mov
pushf
test
dec
loop
test
push
sti
lret
jae
pop
outsb
sbb
cmp
loopne
mov
cmc
dec
imul
or
dec
pxor
stos
roll
outsb
daa
loopne
dec
fsubr
cmp
push
sarb
mov
ret
and
in
or
loopne
lret
neg
mov
aam
inc
inc
mulps
sub
pop
xchg
pusha
jp
mov
push
cmp
xchg
mov
out
pop
pop
cld
fidivrs
pop
inc
in
cmpsl
sub
jb
cmc
add
cmp
and
orb
js
out
lods
imul
inc
push
stos
sub
outsl
lods
pop
imul
inc
mov
scas
or
rcll
inc
adc
rorb
or
or
ja
pop
leave
adc
and
pop
mov
mov
dec
mov
bound
adc
cld
or
lret
mov
mov
std
cmp
into
bound
icebp
cwtl
sbb
stos
fwait
cwtl
cmp
sarb
inc
mov
jns
leave
add
scas
mov
push
ljmp
adc
and
repz
ds
add
cmp
loopne
notb
xchg
push
cld
stos
mov
out
lret
adc
clc
jp
push
pop
adc
insb
popa
in
push
insl
ss
xchg
mov
sbb
sub
repz
xchg
xlat
jmp
dec
cmpsb
nop
insb
cltd
mov
pop
dec
int3
inc
test
push
inc
dec
cmc
sub
shl
enter
aad
add
pop
dec
inc
xor
imul
addr16
leave
inc
cmp
and
add
mov
repz
test
dec
inc
pop
mov
movsl
mov
cmp
es
mov
shl
cmp
sub
das
aaa
xor
fstpt
inc
and
jge
mov
jp
lcall
test
xor
mov
inc
adc
stos
sub
or
sti
inc
les
push
test
out
hlt
aam
repnz
mov
jbe
mov
pushf
jo
mov
jg
test
or
jbe
pop
loope
jbe
jmp
xchg
test
or
sub
cmp
popa
test
sbb
addr16
inc
ljmp
push
dec
out
adc
add
aam
scas
out
cmpsl
mov
aas
dec
mov
sbb
and
es
ds
xchg
mov
xor
enter
gs
sub
mov
enter
jl
xchg
mov
mov
xorl
pop
jns
lods
shl
pop
mov
xor
in
push
or
int
ds
adcl
mov
xchg
int3
add
xchg
jnp
push
outsb
xor
push
scas
and
fwait
jb
lret
sbb
call
lds
ret
sub
in
fwait
aad
pop
pop
fstpt
gs
into
cmp
testl
xchg
xchg
cmp
xchg
sbb
ret
adc
pop
adc
xchg
mov
imul
subb
sub
inc
push
push
sbb
inc
jle
leave
add
imul
inc
stos
add
fld
pop
insb
cmc
movsb
inc
movb
add
xor
in
jne
fbstp
sub
add
in
mov
call
dec
je
fcmovu
sub
popf
mov
and
pop
std
int3
pop
aad
sarl
enter
xchg
or
leave
sub
add
dec
stos
cmp
jne
jne
stc
or
leave
jne
and
xchg
repnz
lret
test
mov
lods
insl
sbb
outsl
ficompl
push
xor
mov
insb
arpl
push
loopne
cmpsb
lret
ljmp
cmpb
xchg
sub
inc
lea
test
fidivl
shll
xchg
sarl
push
lahf
ret
xor
aas
icebp
pop
sub
inc
pop
inc
pushf
mov
adc
inc
or
mov
fsub
jmp
jecxz
in
xlat
fsubp
inc
or
inc
mov
adc
inc
sbb
ljmp
adc
arpl
out
or
ret
idivl
add
sub
lcall
inc
or
shrb
cmp
out
push
out
pop
fmull
fst
lods
call
push
mov
out
add
pop
stos
and
in
cmp
enter
or
mov
insl
and
dec
cmp
mov
adc
adc
add
or
scas
into
dec
xchg
xor
outsb
outsl
sub
jb
std
jns
push
sbb
jge
andb
pop
pop
je
popa
out
insl
inc
int
and
or
cld
outsb
xor
inc
testl
fisttps
sbb
inc
add
mov
lods
sbb
push
jns
mov
lods
dec
sbb
mov
xor
push
jecxz
repnz
testl
xor
scas
cmc
push
cmp
xor
inc
push
lods
repz
push
sbb
ja
lods
je
fs
sar
scas
in
ficoms
mov
xchg
pop
dec
mov
stos
mov
or
or
popa
in
fldl
test
mov
ds
cmpb
ljmp
cs
mov
xor
add
movsb
adc
pusha
pop
mov
xchg
ret
mov
ret
cmpsl
xchg
gs
and
out
or
and
jmp
lret
dec
cltd
push
and
and
nop
cltd
outsl
testl
sbbb
jb
jmp
test
push
mov
cmp
enter
sbb
imul
in
sub
sbb
loope,pt
sub
mov
xchg
data16
ds
testb
scas
mov
jge
mov
stos
sub
repnz
je
adc
in
sbb
rorl
adc
inc
sbb
int
mov
arpl
lods
arpl
inc
jg
sub
cmp
call
jne
cmpsb
pop
imul
nop
in
js
push
rorb
add
jecxz
xchg
or
inc
mov
test
outsl
jmp
dec
movsl
mov
inc
out
push
adc
inc
imul
xor
mov
mov
jae
not
jns
fidivrl
ja
aad
cmp
imul
xor
push
mov
inc
jne
add
adc
pop
aam
into
dec
pop
aam
mov
stos
or
mov
gs
fists
dec
test
sbb
mov
int3
mov
das
jns
out
jnp
adc
and
mov
repz
mov
mov
cmpsl
lcall
mov
mov
cmp
mov
inc
mov
fbld
ljmp
cmp
rolb
std
fcom
push
fistl
jp
js
mov
fbld
adc
pop
push
fwait
lcall
daa
cmp
aaa
mov
scas
or
aad
jl
pop
fcoml
fadds
cmp
mov
dec
cmpsl
and
cs
or
mov
xor
and
lea
ret
and
mov
setns
sahf
or
popf
out
xor
lods
idivb
xor
imul
fs
in
out
jb
jmp
sbb
shll
out
add
fnsave
sbbb
add
out
sbb
lcall
ds
das
js
xor
cltd
fwait
mov
add
stos
jnp
adc
dec
lahf
push
movsb
xor
loopew
jb
fs
ret
pop
stos
clc
daa
push
mov
out
std
sbb
jne
jno
out
cmpsb
xchg
pushf
or
imul
mov
jp
fnsave
push
insl
push
jg
aad
cmp
fldcw
push
pop
inc
cwtl
cmpsl
mov
inc
sbb
pop
inc
dec
and
sub
out
mov
jl
fs
test
out
repnz
arpl
out
stos
lret
and
fs
sbb
movsl
sbb
in
fistpll
push
push
mov
xlat
aas
sbb
mov
notb
or
or
dec
aad
mov
inc
cs
loop
stos
mov
ret
insl
addr16
clc
mov
cs
mov
lds
adc
stos
mov
xchg
push
xchg
sub
mov
sbb
sbb
scas
repnz
mov
sahf
inc
cmp
push
in
pop
leave
imul
or
inc
mov
adc
mov
and
lock
mov
sbb
dec
aaa
mov
dec
into
test
jecxz
mov
mov
es
jmp
push
jno
lods
in
iret
xchg
push
fstps
add
xchg
out
lods
pop
pusha
add
mov
sub
sub
flds
stos
mov
lea
bound
or
pop
loop
inc
push
mov
jge
lods
mov
or
out
aam
jmp
lret
xor
jl
daa
lgs
filds
sub
lds
les
cltd
movl
add
rorb
fists
jmp
xor
pop
sub
fnsave
xor
scas
jge
fidivl
hlt
movsl
push
fs
sub
fdivl
dec
sti
mul
adc
orb
ret
sbb
dec
push
jne
movsl
jae
mov
sub
mov
push
xchg
insb
mov
insl
xchg
mov
fldenv
arpl
ss
xchg
add
popa
fnstenv
nop
cmp
inc
sbb
ret
pop
pop
fxch
jp
js
or
pushf
push
push
das
xchg
dec
jp
js
and
pcmpgtb
xchg
xchg
test
ds
cltd
jl
or
inc
inc
xchg
mov
push
cmp
aaa
adc
es
mov
dec
idivb
ret
dec
mov
ljmp
jmp
popf
mov
jb
les
mov
cmp
dec
imul
int3
sbb
aas
daa
lods
stos
scas
nop
cmp
faddl
lea
jle
das
les
fistpl
jno
push
adc
scas
dec
insl
stos
adc
add
mov
cmpsl
out
mov
xchg
xchg
jae
ljmpw
mov
jae
lods
add
dec
loop
fstl
in
scas
mov
cmp
jg
dec
add
or
pop
push
push
cmpsb
lods
lcall
inc
pushf
sti
adc
sti
or
icebp
insl
mov
lcall
mov
lds
mov
ljmp
out
xchg
sbb
mov
jno
add
pop
add
cmp
add
push
mov
fxch
pop
fstl
mov
daa
fildl
jle
and
pop
or
push
gs
std
push
sub
and
push
mov
add
jp
mulb
js
andb
jmp
cmp
imul
mov
push
movsl
inc
and
cmp
inc
and
mov
pop
push
xlat
pop
add
sti
hlt
insl
andl
insb
fdiv
repnz
fldt
dec
mov
dec
bound
xorl
sbb
int3
inc
rol
test
xor
jns
fucomi
rcrb
push
sub
and
ljmp
and
xchg
lahf
push
mov
add
pushf
dec
iret
inc
loop
cmp
jb
jge
std
int3
cmp
stc
dec
dec
and
add
pop
push
jno
test
inc
cltd
xchg
cmp
or
in
in
inc
out
dec
dec
movsb
into
jo
push
lret
add
cmp
stc
ds
cwtl
sub
clc
cmpsl
stc
lods
cmp
lcall
ret
dec
add
dec
xor
insl
rcrl
push
pop
adc
jb
push
hlt
lds
push
shrb
xor
divl
pop
in
stc
iret
sti
in
lret
and
push
sbb
xlat
pop
mov
adc
jl
les
dec
cmpsb
loopne
mov
sbb
ja
out
mov
and
push
lcall
ljmp
or
adc
out
aad
fcmove
sahf
test
cmp
jnp
addb
adc
cmpsl
jno
jno
stos
outsl
out
dec
xor
push
and
or
in
cwtl
fildl
cltd
xor
jno
cwtl
dec
mov
fidivrs
xchg
insb
dec
push
test
mov
adc
xlat
test
sub
psrlw
test
je
lcall
dec
insb
ss
cltd
pop
rol
leave
mov
mov
js
and
sub
add
fnstcw
int3
fwait
roll
adc
cli
pop
into
stos
cmc
mov
adc
inc
pop
jecxz
adcl
fwait
cld
cltd
fdivl
dec
addr16
cli
and
xchg
adc
clc
clc
mov
test
add
out
mov
repnz
and
fstpl
xchg
pop
jb
inc
push
adc
add
mov
adc
jmp
out
stos
ljmp
stos
sbb
adc
loopne
jb
push
sub
dec
adc
xor
pushf
push
or
gs
jns
pop
ja
pop
or
push
cmp
loope
ljmp
push
pop
std
mov
test
cmp
inc
lcall
xchg
test
add
dec
mov
pop
push
repnz
push
jae
pop
sub
stos
add
movsb
and
dec
mov
inc
iret
ds
add
lcall
mov
sbb
mov
jp
mov
pop
aaa
jge
stc
sarb
repz
adc
call
fildl
and
lahf
and
je
pop
mov
cmp
mov
call
bound
mov
fldenv
push
sub
shlb
loopne
mov
pop
or
test
sarl
jg
jecxz
fcomps
add
popa
outsb
movsl
push
push
aad
movsb
add
dec
in
adc
jno
or
xor
lods
popf
jb
mov
int3
aas
out
icebp
sti
bound
shll
and
into
adc
movsb
cmp
mov
jns
ret
scas
lea
pop
pop
push
adc
sub
jle
es
mov
lods
add
sub
lcall
dec
or
and
in
xchg
es
loop
push
xor
mov
jge
mov
sub
or
cld
fldenv
pop
sub
mov
mov
push
pop
lret
out
notl
jb
lahf
cmp
test
and
loope
hlt
mov
push
push
sbb
lea
popf
data16
lds
mov
mov
sub
neg
mov
loop
mov
sbb
mov
mov
adc
mov
adc
in
pop
jp
push
iret
jecxz
mov
in
jl
cmp
xlat
fmulp
aaa
sbb
pop
adc
push
aam
fs
cmp
subb
in
push
loop
add
into
scas
mov
jg
adc
loopne
mov
fsubl
icebp
fmull
faddp
into
jl
rcl
scas
mov
pop
xchg
or
mov
adcb
or
mov
movsb
roll
mov
dec
les
push
add
mov
xchg
sub
xor
sti
pusha
adc
push
push
out
add
f2xm1
call
in
sub
sbb
mov
dec
std
pop
inc
pop
aam
shll
test
push
pushf
pop
fldcw
mov
aam
pusha
aad
cld
cmp
rorl
shll
dec
adc
data16
pop
mov
or
les
jle
xor
adc
mov
jne
scas
jne
rol
orb
xchg
mov
or
adc
inc
loopne
icebp
sbbl
xlat
pop
out
mov
mov
jp
aam
ljmp
gs
xchg
lcall
xor
lret
out
sbb
xchg
lock
out
xchg
cmc
pop
cmp
enter
cmp
or
mov
lret
jmp
decb
cmpsl
push
dec
inc
and
pop
repnz
sbb
and
out
cmc
mov
sarl
mov
cmc
inc
sbb
mov
popa
sub
popa
adc
imul
js
daa
cwtl
arpl
notl
push
ljmp
xor
jl
loopne
add
rep
dec
mov
jb
rorl
rcll
jns
pop
aaa
bound
roll
and
cmp
dec
testl
pop
pusha
cmc
les
lods
sub
lret
pop
mov
mov
adc
pusha
ficompl
bnd
out
add
into
stc
lods
shrl
xor
pop
sub
test
les
dec
testl
les
mov
jbe
push
jmp
rcrb
inc
fdivrs
es
jb
int
cmpsb
rcr
movsl
dec
lods
xchg
push
pop
fucomp
es
add
fsubs
sbb
dec
jb
and
cli
icebp
push
adc
cmpsl
pop
inc
rcrl
push
mov
sahf
andl
ret
mov
pop
mov
jb
push
imul
lret
insb
jmp
fdivp
inc
push
inc
popf
adc
xchg
sti
aaa
mov
pop
outsl
leave
not
mov
mov
pusha
mov
outsb
lds
scas
and
ja
fcomp
data16
mov
lods
jl
mov
dec
enter
pop
stc
mov
loopne
push
pusha
xlat
ficomps
xchg
test
jne
push
out
add
shlb
add
xor
in
clc
jecxz
mov
inc
sbb
adc
xchg
addr16
add
repz
bound
in
out
test
mov
inc
pop
pop
pop
fisttpll
xor
add
scas
mov
inc
mov
sub
stc
lret
loope
push
mov
stos
mov
addr16
add
mov
nop
fistpll
or
add
add
xorl
sub
xchg
or
int
push
and
fdivl
mov
xlat
push
out
cmp
push
mov
pushf
loope
push
inc
sbb
push
push
or
inc
cli
addb
ret
lahf
aad
add
pop
add
pop
int3
pop
push
push
out
call
jg
or
ds
jnp
cmp
mov
mov
lahf
insl
mov
mov
inc
es
nop
rol
jg
fwait
pop
add
iret
pop
xor
std
clc
das
out
iret
inc
cmovno
adc
sub
sbb
ja
cmpsb
xchg
pop
popf
outsl
mov
sub
add
orl
inc
mov
stos
clc
push
inc
add
push
call
inc
add
xor
into
xchg
pushl
leave
sub
xor
js
jl
fadds
movsb
xchg
xchg
sub
jnp
sub
xor
das
mov
mov
jnp
sbb
adc
xchg
or
jp
xor
daa
es
jns
sub
movsb
sub
in
ret
and
cmpb
incb
and
sub
lods
push
fdivrl
lret
cld
shlb
jno
sbb
mov
sub
jae
jnp
lds
cs
test
dec
dec
or
cli
in
xchg
lcall
push
mov
subl
pop
jl
mov
aaa
into
bound
mov
popf
xchg
arpl
ljmp
pushf
stos
fucomp
adc
hlt
stos
adc
sbb
push
sti
xchg
pushf
out
lcall
cs
jnp
mov
ret
pop
scas
jb
xor
stc
dec
add
out
sub
cmp
es
mov
aam
sahf
mov
nop
jo
and
sti
lahf
mov
lret
xor
loop
adc
fists
insb
test
or
push
fstpl
sub
mov
imull
popa
push
push
cmp
imul
xor
js
xor
gs
fisubrs
adc
sahf
push
arpl
ret
push
mov
out
icebp
jg
jnp
xor
js
movsb
mov
adc
lods
cli
sbb
lahf
cmpsl
pop
repnz
gs
sti
jmp
xchg
sub
xchg
push
jo
push
adc
push
fistl
mov
cmp
jno
sbb
lods
arpl
jecxz
mull
repz
push
or
xchg
cld
out
mov
lods
mov
sub
pop
and
xchg
sbb
arpl
and
loope
or
pop
adc
pop
int3
loop
sub
rclb
xchg
mov
jecxz
movsb
mov
xchg
ret
xchg
push
add
pop
clc
pop
dec
xor
adc
mov
cld
cmc
rorb
or
fadds
jo
test
roll
repz
dec
popa
loope
int
mov
lahf
lcall
fprem
out
xchg
lret
push
add
inc
xchg
push
xor
aam
pushf
pop
outsl
and
xor
movsb
push
out
dec
mov
ja
cmp
es
cmp
mov
in
ret
ret
adc
dec
xchg
mov
cmp
mov
mov
cmp
jo
ror
cmp
pop
aaa
cld
push
pop
cltd
cmp
cmp
xlat
or
repz
mov
mov
push
stos
stc
shrb
add
pop
or
push
js
stos
lods
pop
pop
sbb
pushf
shlb
in
cs
cli
stc
sbb
pop
adc
or
adc
dec
jae
mov
or
nop
add
je
cmpsl
push
add
sbb
adc
mov
mov
jle
ret
sbb
mov
rolb
loope
shll
in
xchg
mov
mov
lret
pop
adc
loope
test
out
popa
xor
adc
adc
and
dec
add
jg
pop
jne
sub
jg
shl
das
dec
cmpl
pop
imul
sbb
je
or
fsubrs
mov
int
in
jae
inc
stos
scas
push
aam
mov
and
sub
rcll
mov
scas
dec
adc
cli
in
cmpsl
adcl
mov
push
add
shr
ret
mov
xchg
xchg
ret
clc
aas
aad
int
dec
daa
mov
cmp
inc
ret
aad
xchg
hlt
xlat
push
add
adc
daa
fdivp
lcall
mov
pop
push
pop
cmp
cmpsl
xor
loop
lods
ja
pop
xor
shr
cmp
fadds
movhps
mov
leave
jb
dec
in
add
std
dec
cld
pop
adc
dec
jbe
sbb
mov
and
iret
pop
shrl
addr16
mov
dec
loopnew
sbb
mov
cmp
fldl
dec
inc
scas
scas
bound
sbb
push
xchg
add
mov
xor
lcall
mov
mov
jp
movsb
lcall
enter
push
sbb
adc
jo
clc
jnp
mov
jmpw
or
dec
xor
pop
cmp
mov
adc
cmp
sub
inc
mov
lea
jmp
shlb
jg
xchg
outsb
in
jnp
imul
sbb
inc
in
xor
push
sbb
or
sbb
je
imul
das
into
les
jl
jge
mov
insl
push
sub
ret
or
imul
mov
adcb
add
pop
ss
xor
lods
adc
push
stos
je
fistl
pop
ja
fadd
or
lahf
pop
popa
mov
mov
adc
jnp
inc
dec
jmp
or
daa
movzwl
jns
addr16
push
or
xchg
shlb
push
jecxz
mov
imul
fs
add
xchg
adc
add
shll
std
inc
and
decl
dec
icebp
cmp
pop
cmp
icebp
push
xchg
gs
aas
sbb
clc
mov
xchg
addr16
jo
mov
insb
jae
mov
fimull
mov
cmp
cmpsb
jno
aas
jns
mov
jmp
sub
and
fildl
pushfw
dec
das
mov
or
add
inc
push
ljmp
mov
loopne
stos
sbb
shlb
xchg
or
xor
ljmp
fs
js
std
xchg
sub
scas
bound
push
ret
jbe
and
hlt
fwait
bound
rorb
lcall
and
cwtl
sub
les
adc
mov
stos
cmp
and
movsl
dec
outsb
insb
ss
and
mov
decb
or
cwtl
mov
add
mov
imul
insb
sbb
lods
dec
jg
hlt
subb
and
lods
roll
and
sub
into
push
mov
sti
mov
mov
imul
jnp
in
xor
gs
mov
jb
in
xchg
andl
cmp
pop
in
jecxz
mov
int
fadds
out
sbb
cmpsl
dec
or
outsl
cwtl
fsubrs
dec
mov
popl
mov
outsl
cmp
pusha
jbe
jns
icebp
shrl
out
pop
test
test
sbb
ja
push
and
push
and
pop
hlt
dec
iret
cmp
andl
xchg
ds
rolw
test
xlat
mov
cmc
call
das
int3
lcall
jno
xor
cmp
dec
push
movsb
jo
orb
sub
jg
call
cmpsl
das
cmpsb
cld
sbb
add
jp
out
cmp
out
sub
dec
xchg
push
hlt
jecxz
pusha
jns
outsl
data16
into
mov
cltd
jg
jnp
push
loope
imul
rcll
sub
aaa
fimuls
inc
into
out
push
ds
ja
je
fisubrs
mov
mov
scas
add
mov
in
jmp
xchg
bnd
cld
inc
and
loopne
mov
adc
lahf
inc
cmp
dec
dec
jg
push
ret
daa
rcrl
rorb
subl
arpl
scas
xor
mov
sub
mov
mov
xchg
mov
mov
movsb
testl
fs
je
imul
lea
jns
pop
nop
pop
adcl
sti
or
cmp
int3
jp
push
or
jno
push
leave
aaa
mov
jecxz
sub
dec
fwait
cmpsb
xor
adc
lock
dec
in
mov
popa
mov
push
push
dec
ret
cmp
lods
jae
pushf
sub
ss
cmp
sbb
lret
fisubs
ja
mov
and
dec
fisttps
dec
adc
jns
xlat
sub
pop
popf
enter
xor
mov
xchg
adc
pop
add
shlb
in
adc
out
jb
gs
jbe
mov
and
mov
repz
aam
mov
mov
dec
and
push
fsubrs
popf
or
inc
add
add
hlt
jl
les
mov
lret
pop
ds
fimuls
daa
mov
je
fisubs
popf
arpl
jle
dec
hlt
and
jnp
adc
jecxz
loope
out
mov
xchg
sub
stos
mov
sti
and
stos
sbb
fidivrl
mov
sbb
pop
inc
dec
out
incb
cmp
inc
outsb
mov
movsl
les
add
cmp
push
pop
loop
and
fidivrs
cltd
jns
sti
iret
xchg
dec
arpl
sbb
mov
adc
mov
mov
fcoms
adc
mov
ret
and
shl
mov
or
in
xor
push
rolb
xor
jle
add
jb
jmp
or
imul
stc
mov
and
int
jbe
inc
push
clc
rcr
mov
jmp
test
sti
cwtl
push
loope
add
mov
test
and
xchg
mov
inc
xor
mov
aaa
out
dec
xchg
push
xchg
xlat
scas
add
scas
stos
xor
xchg
push
adc
icebp
pop
pop
adc
mov
cld
mov
adc
in
jge,pt
xchg
fwait
sbb
pop
xchg
loop
stos
jae
leave
inc
je
pop
cltd
cs
mov
xor
es
mov
pop
outsb
sahf
hlt
mov
loop
pop
xor
repnz
or
pushf
push
jae
pop
andl
push
cmp
mov
mov
ret
fwait
idivl
xor
aad
or
cmp
mov
push
mov
outsl
pusha
xchg
push
ret
add
fs
mov
rcll
inc
lods
in
cmp
cmpb
cmp
sbb
push
or
cmp
cmp
add
fsubl
and
in
cmp
repnz
bound
and
gs
loope
nop
xchg
ret
mov
inc
fisubs
mov
mov
push
cmp
mov
mov
xchg
out
mov
repnz
sbb
lods
bound
scas
mov
movsl
mov
push
aad
pushf
or
outsl
dec
dec
neg
mov
daa
cmp
xchg
rcl
mov
push
bound
mov
xchg
cs
sub
imul
sub
dec
popa
cmp
mov
icebp
add
dec
out
or
dec
jnp
cmp
inc
jg
pop
dec
lock
daa
cs
mov
data16
popa
outsb
mov
push
cmp
idivl
sub
lret
mov
aam
mov
sub
cmpsl
sti
cwtl
inc
pop
repnz
ficoml
sbb
add
push
pop
xchg
test
jno
rcrl
sub
jmp
pop
fsubrs
ds
inc
arpl
popa
cmp
adc
aad
and
lret
lods
clc
in
jmp
sbb
cmp
lods
bound
xchg
pusha
cwtl
inc
push
loope
es
mov
aas
sbb
nop
add
mov
cs
mov
sbb
mov
mov
movsb
rcrl
xor
movsb
and
add
fldl
sbb
in
fcmovnb
inc
ret
add
sbb
adc
lcall
mov
mov
ds
lret
mov
dec
push
cmc
adc
movsl
repnz
dec
pop
rorl
jle
gs
lods
ds
daa
mov
dec
idiv
jns
and
jg
fwait
mov
lahf
test
pop
aas
pushf
add
test
bound
cmp
clc
xlat
ds
fidivrs
leave
inc
mov
loop
mov
pop
add
adc
and
in
jmp
les
dec
cmp
jns
lods
push
pop
xor
pop
loope
icebp
cmp
lret
xchg
repz
mov
fimuls
lea
fsubrl
xchg
mov
pop
daa
xchg
and
stc
outsb
lock
gs
pop
rcl
cmpsb
adc
pop
xchg
rcrl
dec
cli
div
outsl
mov
sub
add
cltd
jns
adcl
arpl
sti
jecxz
out
loop
xchg
test
dec
cmp
and
daa
push
pop
mov
divb
repz
jo
loope
jmp
lahf
sbb
add
std
jbe
std
fldt
push
nop
in
mov
loop
out
add
mov
mov
cmp
in
jnp
aas
mov
sbb
jmp
xchg
jb
inc
pop
jbe
lds
xor
mov
data16
in
and
mov
addr16
mov
ja
jno
outsl
in
out
es
daa
in
jb
fadds
xor
imul
ret
out
push
aas
dec
js
addl
or
bound
push
sbb
cmc
sub
mov
mov
dec
jbe
leave
pop
adc
popf
rcrb
leave
xchg
cmc
cmpsb
lret
frstor
loope
scas
lock
lods
pop
cmpsl
sbb
fstp
adc
and
in
mov
mov
cmp
sub
shr
jns
pop
lea
imul
mov
imulb
xchg
shl
div
or
pop
lock
aad
mov
orl
jae
inc
ljmp
iret
cmp
lcall
vpunpckhwd
jg
pop
stc
jge
fstpl
add
dec
xor
bound
test
inc
mov
push
lret
orl
inc
ss
ljmp
dec
sbb
mov
ja
mov
fwait
adc
mov
cmp
mov
and
nop
out
lcall
testb
jbe
sub
fildll
fadds
cmpsb
daa
adc
arpl
push
or
std
scas
in
adc
in
xor
fisttps
and
es
repz
inc
cmpl
pop
or
aad
add
jl
scas
push
out
std
mov
jecxz
cmp
and
xor
fwait
shrl
aad
in
fdivl
xchg
mov
in
mov
adc
mov
push
fwait
cmp
dec
mov
pop
jb
push
je
xchg
repnz
daa
xchg
in
loopne
jle
push
and
lock
hlt
ficomps
sti
loopne
xchg
movsl
push
cmp
lahf
cmp
rcrb
xchg
les
push
js
cld
and
pop
imul
out
jle
cltd
push
add
repnz
lcall
mov
enter
sahf
gs
xor
inc
or
or
inc
push
pop
mov
sbb
cmpl
mov
addl
ss
cmovge
jg
push
out
pop
clc
outsl
jne
inc
clc
mov
ficomps
js
aas
fldenv
cmc
xchg
daa
cmc
sub
out
inc
pushf
out
push
bnd
xchg
pushf
test
mov
pop
mov
pop
mov
cmp
mov
or
iret
aas
pop
popa
jnp
or
pop
mov
pusha
mov
daa
xchg
cmpsl
mov
sub
es
mov
vmaxsd
das
jbe
popf
out
rorb
xchg
scas
mov
cmp
loop
out
test
mov
aad
popa
frndint
mov
out
in
mov
cwtl
mov
icebp
push
jmp
into
sbb
mov
loopne
push
dec
mov
nop
mov
jmp
sub
outsb
rorl
push
mov
mov
sub
push
stos
insl
adc
fstpl
and
popf
jp
xchg
mov
pop
add
cli
dec
shrb
mov
call
rol
add
add
les
cmpsl
test
enter
test
pushl
push
sti
mov
sbb
xchg
add
or
mov
std
sbbb
xor
aas
sub
xchg
and
imul
cli
pop
sbb
push
lock
xchg
lret
pop
nop
ljmp
fildl
adcb
test
arpl
xchg
popa
dec
xchg
pop
cmp
dec
test
cmp
mov
sub
popa
mov
mov
ud2
sub
stos
fadd
xchg
rorl
add
sarb
ficoml
xorl
popf
idivl
iret
in
jmp
lds
mov
xor
out
popw
xor
orb
push
or
popf
js
insl
add
xor
xorb
movsl
test
shll
jge
sbb
sbb
dec
pmaxsw
rcr
mov
add
rolb
into
pushf
loope
sbb
sahf
dec
ja
les
popl
rcrb
jno
xchg
push
test
mov
xor
cs
mov
xchg
xchg
xchg
fadd
jp
pop
les
push
mov
xchg
push
xlat
inc
lock
bound
mov
rorl
sub
mov
jl
pop
rcr
movsb
imul
pop
pushf
dec
fwait
les
cltd
ficomps
sbb
and
ret
mov
stos
xor
lea
push
mov
in
sbb
jns
aad
push
jae
push
sbb
mov
inc
daa
int
inc
jno
aas
paddsb
dec
and
xchg
pop
cmp
inc
or
adc
aad
ss
jnp
lcall
mov
call
sub
pusha
jbe
mov
or
pop
into
push
cmc
out
xchg
pop
add
jne
loopne
pop
das
push
arpl
mov
mov
test
imul
rclb
aam
sbb
jo
lds
mov
popa
rcl
mov
mov
dec
pshufw
mov
jb
enter
hlt
aad
mov
adc
jns
icebp
xlat
mov
nop
or
movsl
xchg
cmp
pop
loope
mov
js
xor
inc
pusha
inc
lret
rolb
adcl
scas
sbb
cmp
or
leave
cmpsl
dec
jb
mov
pop
cld
imul
add
ret
cltd
and
gs
cld
push
mov
in
int
sbb
and
jb
test
les
lret
movsb
and
pop
push
xor
ljmp
into
cmp
pop
jns
mov
inc
out
push
mov
dec
xchg
clc
cld
clc
pop
popf
add
add
push
mov
das
out
std
sub
push
fldl2t
das
rclb
or
xchg
int
adc
subl
sbb
stc
out
or
in
jp
pop
mov
fstps
cwtl
lret
add
jp
mov
sub
push
mov
cmp
jb
clc
lea
iret
daa
push
subb
xchg
inc
jo
push
inc
mov
pushf
lods
ss
decl
fwait
outsl
sahf
lods
out
aas
mov
mov
add
orl
xor
jle
xchg
push
xchg
imull
rcrl
jge
fcmovnbe
or
fmul
lahf
addl
stc
pop
mov
cwtl
loop
clc
mov
xor
imul
jae
xchg
xchg
mov
dec
dec
push
add
or
test
mov
or
in
push
mov
mov
jmp
dec
pushf
idivb
mov
jo
fdivl
fsubrs
lock
jp
in
call
arpl
mov
dec
mov
out
pop
movl
test
scas
movsl
es
aaa
fyl2xp1
insl
ret
mov
mov
test
dec
sub
add
repz
in
and
out
sbb
scas
in
sbb
ret
loope
stc
and
xor
mov
jmp
push
cltd
popa
mov
ret
cmp
xchg
jl
mov
icebp
cmpsl
or
dec
in
loopne
sbb
hlt
and
xor
mov
lret
jae
add
and
out
jnp
xor
mov
sbb
mov
xor
cmp
in
cmpsl
pop
shl
push
movsb
cmpsl
jae
mov
fldcw
lret
jns
xor
lahf
mov
xchg
xchg
pop
scas
pop
and
mov
pop
stc
dec
inc
sbb
test
pushf
test
pop
adc
jmp
sub
test
add
popa
pop
inc
aaa
jle
mov
mov
rclb
sub
flds
cmpsl
mov
repz
loopne
push
adc
ror
movsl
cmp
daa
adc
jecxz
mov
das
dec
add
inc
ret
push
jno
jbe
pop
test
jecxz
and
outsb
dec
divb
hlt
clc
xlat
jo
cs
out
loop
cmc
loop
out
stc
pop
adc
mov
xchg
arpl
dec
sub
xorl
lcall
pop
cltd
cmp
dec
test
cmp
pop
jns
outsl
xlat
icebp
xchg
add
ficomps
cmp
test
popa
cmp
test
or
jecxz
xlat
scas
mov
mov
movb
fdecstp
and
aas
sti
aaa
xchg
pop
add
cmp
cs
dec
jbe
adc
adc
fldcw
cld
loopne
andl
sahf
cld
mov
pop
mov
imul
std
sbb
es
arpl
mov
inc
scas
dec
add
xchg
or
cmpsl
push
mov
inc
cld
mov
in
ffreep
ss
xchg
int
add
inc
js
cli
pop
shl
inc
xchg
shl
insb
mov
aam
icebp
xchg
push
fisubrl
nop
pop
ret
leave
in
push
gs
pop
iret
mov
shrl
xchg
test
leave
stos
in
jae
add
mov
xor
inc
mov
push
jge
sbb
test
leave
imul
lods
and
push
pop
mov
sub
mov
dec
clc
xor
mov
popf
sub
mov
mov
in
lock
sbb
mov
mov
sti
mov
jmp
pop
js
mov
ficoml
jo
adc
cmp
shrl
mov
icebp
mov
aas
dec
sub
push
inc
dec
shlb
scas
inc
push
lahf
xchg
lods
and
ret
inc
xchg
icebp
adc
or
movsl
push
adcb
and
stos
fwait
jmp
cmc
add
loope
add
mull
rorb
stc
push
lds
mov
int3
test
mov
test
sub
addr16
cmp
loop
lret
push
add
push
outsl
pop
jnp
pushf
and
mov
fcompl
pop
shlb
adc
pop
ret
push
lret
cmp
mov
push
les
mov
mov
cmp
stc
lret
mov
dec
inc
addr16
sub
mov
addr16
movsb
shlb
jb
out
shl
sti
aad
hlt
and
push
xchg
xchg
cmc
push
lods
sbbl
add
fldl
mov
jae
pushf
test
xchg
adc
mov
lods
mov
mov
in
inc
mov
mov
jae
data16
dec
jo
ljmp
cvtps2pd
loop
inc
insb
xchg
sub
or
imul
and
int3
push
rolb
jno
mov
inc
mov
xor
mov
mov
ffreep
mov
mov
dec
mov
mov
leave
sub
jbe
ret
loopne
or
xchg
dec
sbbl
cltd
fwait
aam
std
daa
or
std
cmp
stc
xchg
mov
aaa
xchg
test
mov
fimull
and
adc
jae
xor
xchg
dec
je
mov
cmp
iret
repz
outsb
mov
jbe
xor
mov
lret
lea
test
dec
adc
cmpsl
mov
add
cmp
pusha
add
aam
mov
jbe
inc
cmp
sub
mov
aaa
aaa
jno
and
mov
cmpb
sub
dec
adc
sub
fcompl
in
pop
loope
hlt
sbb
nop
bswap
fsubp
sbb
push
outsb
test
gs
jecxz
inc
pop
sbb
ja
mov
xor
jmp
push
sub
mov
jg
mov
rcrl
in
arpl
and
mov
les
xchg
pushf
test
lcall
sub
orl
lock
pop
cmpsb
mov
movsb
pop
mov
rcrb
into
adc
adc
push
xor
lock
lea
cmpb
xchg
movsb
adc
or
nop
ljmp
rol
push
adc
insl
mov
push
or
jg
mov
test
xchg
lret
and
sbb
pop
pop
fsin
loope
shlb
jp
cwtl
mov
enter
stc
outsb
xchg
or
jo
out
or
in
das
push
negl
test
push
pop
jns
clc
imul
pop
jb
pop
mov
add
mov
mov
push
push
aam
into
loopne
inc
jae
cmpsl
dec
push
lcall
inc
jno
xor
mov
sbb
fcoms
fisubl
ret
addr16
call
ds
jae
xchg
ret
xlat
fs
pop
lds
xorl
mov
cmp
into
mov
dec
mov
inc
inc
sbb
hlt
xchg
push
andl
inc
adc
adc
pop
pop
xor
jmp
cltd
decb
sti
stos
and
aad
xchg
test
cvtps2pd
sub
in
js
xor
and
sbb
inc
inc
hlt
push
or
xchg
popf
sti
dec
outsb
cmp
iret
mov
sub
das
icebp
fdivs
push
dec
out
lods
out
lds
xor
cmpsl
push
xchg
std
mov
dec
into
loopne
mov
xor
add
lock
pop
add
mov
xor
or
or
imulb
addr16
add
push
mov
sbb
push
or
and
sbb
mov
adc
inc
adc
stos
arpl
mov
add
out
fs
sub
mov
push
dec
pushf
or
lock
cmp
xchg
insl
dec
cmp
addl
push
jl
aas
daa
and
shll
hlt
inc
push
dec
sbb
das
mov
pop
jne
and
enter
neg
cmp
xchg
clc
dec
fisubrl
adc
rcr
jp
pop
jge
addr16
mov
push
mov
cld
add
sub
jae
fildl
pushf
cmp
ficompl
xor
or
loop
jmp
or
mov
cmp
out
adc
and
lods
ljmp
lret
outsb
dec
inc
rcr
xchg
dec
sarb
mov
out
lahf
or
fnstsw
adc
ret
mov
inc
or
js
mov
ret
test
pop
aam
xchg
xor
cmp
scas
stc
lret
or
rcrl
sbb
sarb
lcall
lret
pop
lods
mov
addl
insl
push
or
and
pop
mov
cmp
scas
stos
bound
xchg
adc
push
inc
ret
push
test
flds
pop
cmovle
in
push
pop
in
lahf
jg
dec
xor
mov
std
outsl
jbe
dec
lock
mov
arpl
lahf
fsubrs
add
pop
imul
adc
fistps
xor
xor
xchg
test
xor
mov
pop
loope
movsl
movsb
pop
lds
and
iret
xor
jp
enter
xchg
int3
xchg
insb
and
mov
mov
ret
cltd
andps
push
adc
pop
adc
jg
sahf
sbb
pop
inc
ljmp
xchg
and
icebp
out
add
lea
test
mov
sub
sbbl
mov
repz
test
push
test
repz
xor
movsl
sti
adc
push
mov
scas
cmp
nop
cltd
pop
lcall
push
lret
insl
js
andl
cmp
sbb
imul
jmp
xor
call
pop
mov
lds
loopne
add
pop
and
adc
jo
jl
fldl
iret
or
insl
cwtl
movsb
mov
nopl
push
xor
in
loope
ret
popa
andl
cld
jae
pusha
mov
cmpsb
enter
fucomip
lods
inc
fstpt
subb
mov
dec
jmp
scas
cmp
jle
mov
push
sbb
add
mov
stos
cmp
neg
sub
jno
repz
sub
popf
mov
in
add
flds
or
fistps
cmpsb
push
ljmp
call
enter
and
fiadds
pop
push
mov
sbb
or
pop
xchg
rolb
jns
mov
sub
sbb
fisubrl
jp
push
add
push
push
sub
cltd
push
cld
jo
out
mov
and
fsubrs
dec
aam
pop
mov
lret
dec
adc
dec
fstl
js
mov
mov
movsb
leave
xorb
in
pop
push
stos
add
mov
mov
jns
jb
icebp
inc
in
mov
lds
dec
mov
sahf
in
stos
add
pop
jp
mov
pop
lahf
call
rcrl
into
jge
xchg
pop
lea
insl
mov
aad
and
int
pop
leave
xchg
xor
pop
lahf
mov
dec
shlb
fdivs
xchg
imulb
inc
out
bsf
outsl
mov
fnsave
fdivrp
jne
jb
inc
sub
mov
adc
incb
mov
in
add
xchg
jne
or
sub
ss
out
int3
leave
fs
in
dec
pop
pop
test
and
xchg
push
jg
rorl
jne
imul
into
sbb
add
xchg
mov
ret
mov
arpl
ss
jnp
daa
outsb
push
nop
lock
push
inc
cmp
adc
mov
test
lods
lods
int
jmp
outsb
cmp
dec
inc
ret
inc
cld
push
mov
into
fsubr
ret
aad
pop
cltd
shll
movsl
ja
mov
and
sbb
fisttpll
je
addl
mov
ljmp
xlat
dec
pop
inc
test
sub
jmp
lods
jb
das
or
lods
pop
pop
push
sti
mov
xchg
or
and
repnz
dec
add
inc
mov
enter
pushf
imul
adc
xchg
lret
test
aaa
adc
push
cs
repnz
movsl
imul
pop
ret
popf
nop
sbbb
and
divb
xchg
jecxz
mov
dec
jno
into
iret
pop
xor
sbb
pop
clc
inc
add
mov
adc
fwait
mov
inc
int
sub
jae
or
dec
out
lret
les
aad
xchg
icebp
addb
insb
scas
outsl
dec
lea
mov
insb
imul
pop
mov
xor
gs
frstor
jne
mov
into
addl
push
shl
mov
mov
xor
xchg
pusha
outsb
rclb
sub
dec
dec
or
cli
lahf
cwtl
out
nop
insb
cmp
jmp
aaa
imul
adcb
xchg
dec
xor
mov
sbb
and
fucomp
subl
ds
mov
cmp
or
addr16
jle
sub
jle
sub
sbb
dec
outsb
or
jge
jo
aas
push
out
pop
movsl
decl
mov
jnp
loop
jmp
aad
ret
aam
jnp
jnp
je
sti
mov
pop
xchg
sbb
into
adc
xor
imul
inc
cwtl
repz
ret
jge
xchg
xchg
sti
and
add
pop
mov
sti
out
cmpsl
xchg
xchg
inc
adc
and
sbb
dec
push
mov
call
mov
mov
sbb
cld
dec
sbb
inc
pop
stc
imul
pop
mov
mov
jns
mov
in
es
sbb
push
mov
jbe
pop
jnp
movsb
xlat
sub
lret
pop
test
pop
in
xor
or
cmp
jns
fsubl
and
aaa
sub
push
add
je
sti
push
js
sub
ss
inc
outsb
out
fcoml
pop
addr16
push
jecxz
push
scas
fnsave
and
xchg
call
icebp
rorb
rclb
xlat
jge
push
push
mov
mov
lds
dec
stos
pop
pop
or
dec
sub
cmpsl
les
inc
xor
cmp
push
lahf
mov
icebp
xchg
ret
repnz
lock
mov
cwtl
fisttpl
cmp
fistl
lret
cmp
push
loope
xor
adc
or
pop
stc
jbe
adc
lds
mov
imul
cli
inc
inc
andb
in
sarb
mov
into
mov
negb
lret
mov
and
mov
push
mov
xor
cmpsb
xor
ret
addr16
jg
in
jg,pt
ljmp
shll
inc
pop
cmp
pop
mov
cmp
xchg
add
test
sbb
xchg
fiaddl
pop
push
jg
cmp
popf
jae
mov
rcll
aas
aad
sbb
fs
nop
orl
xchg
clc
or
mov
or
inc
bsr
aaa
decl
lock
mov
add
pop
sub
loop
cmp
mov
sti
sbb
push
fadd
dec
jl
push
ret
cmp
jns
bound
mov
cmp
sbb
loopne
sub
jp
pop
push
cwtl
sbb
push
rcll
fnstsw
loope
aaa
cli
inc
ret
xchg
clc
push
jno
mov
pop
sahf
xor
icebp
aas
pop
test
cmp
lods
stc
sbb
adc
das
add
xchg
hlt
ja
sub
rcrb
ret
fmulp
jle
nop
add
inc
shll
aas
mov
je
fwait
xor
scas
mov
lock
sbbl
jg
jnp
jns
punpckhdq
jle
pop
lods
mov
pop
mov
imul
cltd
mov
inc
repz
bound
inc
std
outsl
add
mov
fcmovnu
ja
stos
push
jns,pt
mov
pop
scas
cmp
pop
int3
sahf
aaa
sbb
sub
xlat
aam
fdiv
std
js
nop
add
mov
shl
pop
ficoms
test
xor
daa
lret
or
push
add
cmp
mov
jno
stos
adc
inc
pusha
repz
mov
lea
mov
popa
js
aam
rorb
mov
pop
mov
dec
sbb
repz
push
clc
cld
rep
gs
jecxz
jb
push
xchg
adc
scas
in
mov
sbb
les
fwait
xchg
rorl
fs
cmp
jb
jno
or
pop
les
hlt
pop
out
pop
clc
gs
rcrb
lea
js
inc
aas
decb
js
js
jno
or
jmp
mov
imul
jge
mov
fstpt
pop
and
arpl
mov
xor
jle
xchg
test
xor
xor
popf
or
xor
insb
mov
push
or
sub
shr
divl
xor
jle
movb
cli
das
divl
imul
jmp
and
pop
jb
das
sub
dec
outsl
inc
ds
and
icebp
sahf
pop
push
int3
data16
mov
popa
and
xchg
pushl
popf
iret
rolb
push
lcall
cmp
push
jns
lcall
jb
pop
and
imul
push
xlat
lahf
dec
lret
out
push
xor
les
pop
jae
into
leave
mov
outsl
jl
add
pop
out
mov
test
dec
dec
fdivl
jae
rcr
sbb
arpl
xchg
pop
dec
jne
cmc
loope
fimull
sub
mov
jne
mov
xchg
inc
cmp
mov
sbb
test
cmp
mov
sub
xchg
xchg
addr16
lret
adc
mov
int
test
in
xor
std
sarb
ficomps
and
shrb
jnp
cmp
shlb
sub
push
insb
inc
mov
lea
and
xchg
arpl
fmul
and
push
cmc
mov
mov
sub
sahf
hlt
push
pusha
bound
mov
mov
mov
inc
fildll
mov
pmulhuw
ds
iret
cld
pop
fdivs
xor
adc
sbb
popa
lock
sbb
iret
adc
push
neg
xor
jg
les
mov
arpl
dec
sub
sub
imul
xchg
js
jcxz
ss
aas
dec
insl
paddw
sti
fstpt
js
repnz
push
dec
popf
adcl
lea
mov
rcll
cmp
xor
icebp
sbb
dec
out
jp
inc
dec
push
out
sbb
je
test
add
inc
adc
sub
sete
xchg
jbe
fisubl
cmpsl
mov
sub
xor
jns
dec
push
xchg
pop
and
movsb
pop
stos
rolb
cmpb
or
and
inc
clc
mov
nop
popf
fmull
loope
fs
imul
popf
insb
int3
add
and
push
movsl
add
mov
add
add
sbb
out
inc
mov
adcb
mov
mov
fsubs
in
jae,pt
lret
mov
cmp
push
adc
jno
fistps
movsl
popf
scas
pop
cli
je
sbb
xor
lods
adc
les
sub
das
jns
xchg
imul
push
cmpsl
fisubs
rorl
fbstp
and
adc
pop
in
inc
sub
shl
push
daa
adc
jp
add
lret
mov
adc
pop
call
and
out
push
lret
pop
cltd
cld
dec
lret
imul
sbb
xchg
pop
pop
arpl
xchg
cld
pop
or
rol
orb
fidivrl
cltd
aas
cld
pop
shl
aad
rorb
jne
out
or
jge
stc
cmp
test
ljmp
cmpsl
jne
pop
inc
lcall
scas
mov
icebp
mov
ja
inc
xchg
mov
mov
adc
adc
lret
add
xor
pop
xchg
or
out
push
mov
xchg
lahf
cltd
mov
adc
je
fwait
push
cltd
xorl
mov
cmp
xor
loop
jge
sbb
call
pop
cmc
adc
add
test
shll
inc
mov
xchg
xor
pop
and
jecxz
cld
test
and
push
xchg
fnsave
arpl
inc
cmc
test
popa
cmp
mov
arpl
lahf
mov
fsubs
mov
fnstsw
bound
mov
sahf
xor
jmp
push
ss
sbb
xlat
or
iret
std
jmp
push
js
popf
fs
jecxz
sbb
sbb
mov
xlat
imul
scas
mov
push
mov
lea
data16
test
test
jmp
sarl
or
inc
outsb
mov
add
pusha
push
add
or
lea
daa
xchg
and
sub
nop
sbb
insb
jnp
sbb
rolb
pop
test
sbb
push
out
sub
pop
leave
mov
das
sub
sub
dec
sbb
inc
rorl
insl
cwtl
pop
push
xor
cmpsb
sub
or
jmp
mov
inc
std
into
imul
lahf
push
lret
dec
pushf
nop
in
rolb
ds
dec
pusha
push
ja
sbb
dec
sub
xor
jmp
ljmp
std
mov
es
xchg
movsl
mov
pop
xor
jne
ret
test
jno
or
xor
fsubrs
js
loopne
xchg
add
lret
sub
fwait
add
andb
sbb
incb
pop
cmp
mov
repz
push
xor
adc
jle
xchg
xchg
insb
data16
push
lret
jmp
mov
imul
les
push
pop
pop
arpl
add
sub
test
leave
ds
outsb
pop
popa
mov
adc
aam
repz
push
inc
popf
movsb
loop
cs
jge
or
push
xor
pop
fstpt
aam
mov
mov
jo
sub
push
in
inc
mov
movsb
and
test
and
inc
xor
sbb
jge
imul
stos
movsb
xorb
push
cld
outsl
sarb
add
xchg
lret
rolb
push
dec
bound
mul
or
mov
xchg
inc
jb
sub
test
cmp
mov
jp
lcall
cmp
insl
lret
aam
jl
fisubrs
or
add
mov
and
test
rcr
or
mov
mov
rcrb
lods
jmp
jg
int
data16
orb
xchg
andl
popf
sbb
sub
ret
sub
inc
test
in
movsl
sub
add
pop
add
xchg
push
add
enter
mov
shl
jmp
push
jb
popf
push
xor
cmpsl
xlat
adc
dec
add
jmp
pop
ret
dec
popf
test
lock
add
jp
adc
adc
stc
rorl
mov
cwtl
fidivrl
mov
fidivs
stc
pop
push
jns
insl
jnp
dec
mov
sbb
je
mov
fisubrs
xchg
sbb
scas
movsl
push
mov
mov
adc
in
sbb
inc
or
icebp
xchg
call
ja
inc
mov
sar
mov
repz
shrd
mov
in
jmp
jecxz
sub
stc
xchg
std
mov
mov
insl
out
aam
push
sbb
cltd
jle
dec
ja
test
lock
xor
cmpl
cmp
cs
cmp
cmp
dec
pop
pop
mov
clc
sub
or
sub
xchg
push
add
add
lret
hlt
push
nop
lds
rcrl
fwait
decb
inc
aaa
dec
lret
in
pusha
imul
adc
std
cmc
pusha
cmpsl
fdiv
and
dec
je
pop
jge
loope
and
jnp
ss
int3
xchg
aam
jmp
add
mov
lds
jne
pop
out
and
out
jo
ss
xor
dec
iret
fs
xor
jns
or
mov
xchg
imul
in
mov
lret
stos
mov
gs
push
xor
sahf
pop
jo
and
mov
dec
mov
sbb
jp
aas
test
adc
cwtl
out
sub
cmpsl
fsubs
mov
loopne
cmp
popf
sahf
and
scas
add
and
mov
xor
scas
mov
scas
ret
ret
pop
pop
and
repz
lock
mov
js
jb
rcrb
insl
loop
int
cmc
cmpb
jecxz
sub
mov
jae
add
les
xor
arpl
add
dec
decb
xor
and
nop
mov
xor
aaa
out
push
lods
add
sarb
ss
icebp
rcll
cmpsl
push
int
sbb
insl
stos
imul
jae
ret
stos
jne
out
repnz
pop
sbb
lret
pop
fldz
orb
lods
pop
xchg
jg
pop
stos
lods
mov
loope
add
or
cld
xchg
push
lods
divl
pop
mov
sub
call
mov
jno
add
lods
xchg
lds
lret
jb
jne
scas
dec
testb
mov
fidivl
or
repnz
push
cmp
or
pop
mov
dec
add
out
or
call
pop
ret
push
scas
jae
pusha
popf
cmc
call
fidivrs
setp
mov
call
mov
dec
es
jle
pushf
int
add
lea
out
mov
pop
ja
lds
into
aaa
cmpsb
adc
pop
cld
jg
jae
push
xor
sub
sbb
in
jle
pop
lods
scas
lret
neg
mov
repz
xor
xor
hlt
jo
pop
sub
divb
dec
add
mov
dec
push
pop
je
lea
shlb
add
inc
shll
inc
aam
inc
cmp
dec
push
loop
mov
mov
inc
cld
daa
push
lcall
jmp
mov
cmp
gs
aad
je
decl
mov
dec
sahf
jb
adc
xchg
lahf
mov
aam
stos
aas
rcrl
les
push
rol
ljmp
ljmp
jp
xchg
ss
cmp
mov
or
sbb
insb
push
mov
ja
and
in
sbb
orb
arpl
mov
fdivl
dec
scas
cmpsb
jns
jle
mov
imul
and
push
inc
das
js
and
mov
dec
sbb
fldenv
je
loopne
jp
inc
out
lock
jo
add
adc
mov
inc
add
xor
js
lods
jns
andb
add
mov
out
sbb
insl
stc
cmp
pushf
in
mov
out
ret
xchg
fsubr
ja
je
jo
push
sbb
test
jecxz
out
push
cmp
shr
outsl
idivb
popa
mull
leave
and
icebp
add
loop
and
inc
ds
int
in
sub
stos
roll
fmull
in
cmp
nop
sub
and
xchg
or
inc
ffree
loope
test
into
rorl
mov
mov
pop
jb
insl
fcomps
sbb
mov
lods
and
loope
pop
daa
roll
inc
dec
xchg
fsts
adc
adc
pop
outsb
daa
mov
or
int3
stc
loope
repnz
lret
int
sarb
stos
pop
pop
cmp
cmp
push
movsl
add
mov
fs
mov
insl
nop
xor
dec
dec
test
fs
test
pop
in
jmp
mov
cmc
cmpsb
mov
int3
sbb
aaa
movsb
arpl
es
fstpt
in
scas
mov
adc
or
mov
xor
xchg
mov
add
adcb
cmp
stos
adc
bound
mov
or
adc
cmpb
mov
sub
adc
icebp
jmp
mov
lock
repz
xchg
xchg
mov
pop
sbb
xchg
cs
jle
inc
sbb
cmp
jecxz
in
and
xchg
mov
sub
cmc
in
sbb
inc
xor
adc
adc
fldenv
mov
arpl
stos
mov
nop
loope
jo
icebp
dec
lods
pop
iret
push
add
sbb
mov
dec
xor
clc
addr16
int
xor
inc
je
push
adc
loope
into
jae
inc
dec
mov
std
cli
or
cmp
jmp
popa
subb
cmovl
decl
pop
insl
mov
jge
fiaddl
push
sbb
ret
push
sbb
mov
arpl
push
pop
pop
mov
mov
arpl
pusha
sbb
inc
ficoms
pop
mov
daa
call
mov
fisubrs
fwait
or
mov
add
jo
popl
inc
cld
lcall
adc
pop
jb
nop
in
sub
loopne
sbb
add
jl
inc
divl
es
adc
xchg
iret
cmpsl
cmp
pop
pop
add
and
in
push
lods
jo
jmp
lret
adc
scas
in
and
sub
test
data16
mov
movsb
imul
push
mov
inc
movsl
shrl
mov
cmp
sbb
sbb
mov
xchg
adc
xchg
in
jns
call
cmp
out
mov
rorb
mov
sbb
inc
sub
push
fmulp
xor
inc
fs
mov
fdivs
jae
out
mov
mov
push
cmp
mov
imul
xchg
xchg
mov
mulb
mov
jno
mov
lcall
mov
push
fisttpl
xchg
pop
jbe
mov
pop
or
mov
cmp
push
or
jmp
xchg
movsb
adc
sahf
push
jbe
pop
mov
or
lods
xchg
out
and
aad
sub
mov
dec
orb
test
xchg
push
mov
or
mov
xlat
std
sub
and
sub
push
test
scas
xlat
out
lock
shlb
out
sub
cmp
lods
inc
ljmp
or
mov
out
mov
stos
or
xor
or
jle
fmulp
mov
mov
lock
stos
stc
pusha
xor
dec
jno
sahf
cmp
lock
lea
or
sub
and
mov
out
movsb
test
pusha
push
mov
add
sti
cli
insl
add
push
das
movl
repnz
mov
jns
sbb
jne
push
adc
jp
dec
mov
outsl
leave
out
add
dec
imul
out
in
and
jae
stos
mov
lods
addr16
mov
popf
scas
je
int
sub
cwtl
xor
sbb
jb
or
xor
cmc
cmp
push
fstl
jo
adc
data16
cli
int3
out
xor
insb
lea
test
outsl
pop
punpckhwd
cmpsl
jp
pop
shl
rcll
notl
mov
xor
mov
ljmp
inc
xor
out
aas
inc
clc
fwait
cmp
mov
andb
test
shll
xor
int
xchg
imul
cltd
ja
xorb
or
and
or
cmp
inc
sar
std
ljmp
push
lods
xchg
fmul
loop
jns
sarl
lcall
mov
xchg
out
incb
sar
push
repnz
xor
dec
andb
push
and
and
int3
and
popa
imul
cmp
xor
push
sub
jne
ja
xor
fldcw
dec
daa
popf
adc
mov
inc
fbstp
add
aaa
pop
insl
repnz
cltd
mov
mulb
mov
xor
or
aas
mov
sub
add
jg
jmp
lret
mov
cmp
mov
jns
cmp
xor
mov
cmp
sub
xchg
sub
data16
mov
dec
pop
mov
pop
popl
aas
js
icebp
jmp
pusha
gs
in
cmpsl
sbb
xchg
jecxz
lcall
sbb
in
xor
mov
pusha
iret
cmp
test
cmp
mov
mov
ss
xchg
push
inc
xchg
loope
and
xor
jg
push
cwtl
sbb
icebp
push
push
fstpt
pop
or
xchg
push
jl
mov
jmp
out
mov
mov
cmp
push
iret
push
xchg
cmp
jo
add
and
insb
or
cld
and
ljmp
shrb
xor
and
shll
cmpsl
xchg
sub
test
roll
dec
ja
pushf
adc
popf
lcall
xchg
xor
inc
dec
xor
adcb
dec
test
pop
push
cld
in
mov
jb
stc
imul
shl
inc
stos
imul
out
ss
xor
push
repz
into
punpcklbw
or
xchg
movsb
ja
xchg
mov
sar
xchg
arpl
inc
rclb
cwtl
je
cltd
jg
orl
dec
xchg
pop
daa
and
mov
ljmp
les
repz
xor
mov
mov
cmp
movsl
add
jl
fsts
mov
ja
mov
adc
mov
inc
adc
xlat
pop
adc
jne
add
mov
popa
daa
xlat
or
xor
imulb
or
cltd
stos
paddw
or
or
dec
popa
cld
arpl
call
cmp
cld
mov
inc
jmp
sti
push
movsb
inc
stc
in
pop
adc
outsl
mov
aam
loopne
mov
sub
idivl
mov
cli
sub
mov
aas
ret
xchg
mov
push
add
inc
mov
negl
rcrl
gs
inc
js
pop
in
push
push
sub
jecxz
lahf
call
jo
stos
mov
loop
mov
stos
scas
sub
pusha
push
pop
gs
lcall
lds
lock
dec
aaa
stc
dec
rorb
push
xchg
sub
out
icebp
mov
xchg
push
pop
push
js
ja
cs
cmpsb
ret
out
aas
push
leave
stos
imul
arpl
sahf
xor
fld
jno
in
imul
insb
pop
add
cld
and
jmp
cmp
cmpsl
js
and
imul
cmpsl
jne
aad
scas
testl
sbb
xor
or
ds
int3
adc
icebp
movsl
inc
or
aaa
mov
xor
xchg
loope
mov
fsubrl
test
adc
push
out
and
cmp
lcall
jno
mov
jne
shll
or
adc
fcmovnb
sar
jbe
cmp
push
pop
aas
movsl
inc
add
jae
mov
fimull
mov
in
loop
xor
lock
cmp
mov
imul
adc
aas
stc
mov
push
inc
fisubrl
aas
clc
out
pop
pushf
xlat
push
loop
pushf
sbb
adc
pop
in
push
mov
fldt
sbb
adc
outsb
xchg
sti
clc
mov
sub
sbb
movsl
mov
push
stc
rcrb
andl
repnz
xlat
pop
in
xchg
fadd
xchg
or
enter
in
inc
push
hlt
add
sub
sbb
loopne
imul
adc
and
cmp
enter
movsb
lret
mov
arpl
or
push
fucomp
mov
mov
int
jg
cltd
jo
xlat
iret
arpl
out
or
neg
mov
testb
dec
inc
sbb
cmp
test
sbb
mov
hlt
inc
in
lods
imul
push
cmp
pop
fiadds
clc
inc
aas
pop
repz
loope
jg
or
and
lret
sbb
ss
and
jl
inc
dec
push
in
jb
mov
ss
push
out
stos
mov
mov
add
cmp
aaa
mov
mov
test
in
clc
fildll
jg
pop
imul
lcall
lock
ds
add
add
test
adcl
and
pop
js
xchg
pusha
jmp
mov
out
insl
ss
lods
pop
cmp
popa
push
jno
dec
lea
add
jbe
xchg
lret
test
adc
adc
and
mov
inc
push
cmp
ds
lret
sbb
ss
cmp
jmp
sbb
push
mov
and
jmp
push
pop
fs
sti
imul
ljmp
into
mov
push
test
mov
jnp
xchg
or
aad
adc
pop
mov
mov
fcompl
xchg
xchg
fs
jnp
adc
jno
pop
mov
in
pop
cld
lods
sub
add
loope
pop
imul
cmp
cmpsl
es
dec
push
sub
fsubp
mov
sbbl
sti
inc
or
xchg
imul
pop
fistpl
mov
es
cmc
dec
or
fldcw
mov
test
es
xor
je
push
jnp
add
sub
out
mov
inc
in
jmp
pushf
sub
and
xchg
or
js
pop
lods
mov
jge
pop
stc
aas
stc
aam
mov
add
push
sahf
xor
mov
sub
mov
lcall
push
loopne
enter
std
ljmp
cmpsb
mov
mov
inc
fneni(8087
movsl
cs
ficoms
inc
or
mov
fcompl
mov
rcr
push
mov
push
rorl
fldl
mov
and
lods
push
ljmp
inc
xchg
out
mov
sarl
push
sbb
jge
addr16
js
addl
scas
dec
pop
and
jbe
out
shl
mov
xchg
xchg
aam
mov
out
inc
neg
push
and
insl
je
mov
ficoml
bound
dec
or
hlt
lds
xchg
push
in
cmpsl
push
mov
rorl
cli
pop
xchg
mov
pop
jnp
nop
push
mov
xchg
push
stos
mov
addr16
dec
push
pushf
sbb
sahf
ss
leave
mov
mov
push
and
sub
mov
test
addr16
xchg
push
cmc
out
insb
cmp
adc
fisttpl
add
stc
mov
lret
dec
and
scas
lret
pop
fmuls
dec
repnz
shll
inc
jle
pop
push
cmp
pop
sub
mov
lods
push
cld
leave
adc
sarb
out
cs
dec
into
and
or
and
cmp
or
test
mov
pop
pop
iret
int3
dec
loope
out
test
dec
jo
jmp
cmpsl
sbb
and
add
inc
sub
xchg
push
inc
cwtl
movsb
cmp
leave
outsb
outsb
hlt
aas
adc
sub
insb
and
inc
aam
inc
push
sub
ficompl
jecxz
pop
xor
sbb
mov
daa
mov
dec
lret
sbb
fildll
lret
fsubrl
mov
pop
dec
jae
jmp
mov
popa
and
push
and
mov
xchg
push
hlt
in
push
xor
dec
lea
movsl
sub
cmpsl
mov
and
cmpsl
ret
fstpt
push
pop
jns
sahf
cmpsl
or
sbb
dec
mov
sub
mov
shrb
push
jo
pop
adc
insl
hlt
scas
test
adc
lcall
inc
int3
jae
fsubs
sub
and
fs
pop
mov
sbb
adc
shll
loopne
pop
ret
shrl
inc
ds
popa
stos
fsubrs
mov
bound
fldt
lods
jp
or
lods
cli
cld
jb
push
inc
rorb
je
lds
js
pop
or
cwtl
ss
adc
pop
pop
or
lods
mov
scas
movsb
xchg
adc
in
pop
cmp
popf
sbb
mov
daa
pop
repz
and
xchg
in
jg
xchg
mov
into
enter
mov
cmp
inc
add
pop
mov
jns
mov
fs
packsswb
xchg
sbb
stos
bound
adc
scas
bound
sbb
test
jo
aaa
push
pop
ror
fisttps
mov
push
or
xchg
xchg
pushl
clc
testb
mov
or
adc
jne
jne
outsl
test
loop
mov
push
push
jno
ret
or
outsb
jle
xor
and
inc
movsb
mov
data16
pushf
nop
lock
inc
lahf
sbb
scas
jne
xchg
xor
or
cli
cmp
jp
and
daa
and
fldt
aad
movsb
in
mov
cli
pop
aas
push
xor
in
fs
pop
sub
addl
add
jns
clc
jne
xor
cwtl
mov
cmp
fwait
in
push
sbb
lret
sub
imul
sbb
jge
and
enter
lods
xor
stc
adc
sarb
mov
inc
test
mov
repz
pop
mov
sub
insl
adc
fsub
clc
push
popa
xchg
mov
mov
inc
hlt
je
dec
pushl
xchg
or
add
lcall
jne
popa
add
xchg
imul
mov
jp
icebp
add
ss
lds
jno
mov
popf
cmp
cmp
add
and
cmpsb
sbb
lods
pop
push
mov
mov
adc
sti
jo
frstor
int3
jnp
aam
pop
hlt
out
rorb
push
sbb
adc
push
or
addr16
sbb
push
add
jno
jnp
jge
dec
jns
pop
push
out
pop
stos
imul
aas
cmp
inc
mov
jmp
pop
lret
test
out
inc
lods
xor
gs
inc
fldt
inc
dec
mov
adcb
fstps
icebp
xor
xchg
fcomps
sub
insb
stos
gs
cwtl
cmp
or
push
jp
jo
jno
ret
leave
jo
inc
mov
cmp
fdivrs
dec
and
popa
movb
adc
and
imul
int
mov
jmp
cld
cmp
or
scas
xorl
lcall
jnp
out
aad
sar
cmp
xchg
inc
push
fsubrp
jno
insb
cmp
fists
test
repnz
push
leave
xchg
pop
or
pusha
xchg
inc
inc
fildl
sbb
mov
dec
cli
adc
inc
stc
test
notb
ljmp
in
popa
and
lahf
pushf
aad
fldenv
add
push
subb
arpl
adc
xchg
pop
push
fwait
push
insb
in
shrb
pop
hlt
inc
cmpsl
cwtl
push
cwtl
scas
mov
into
orl
pop
ret
jg
and
pop
aas
mov
pop
adc
lret
push
jbe
jbe
imull
xor
pop
stos
sub
or
test
lcall
out
imulb
sbb
ret
mov
add
cmp
xorb
cli
movsl
daa
js
push
inc
rolb
arpl
stos
out
imul
pop
jbe
sbb
mov
inc
jge
daa
push
push
jno
loopne
sub
and
inc
cwtl
out
lock
cmp
call
mov
mov
ffreep
push
mov
in
xchg
and
or
popf
loope
cmp
jl
std
cmp
pushf
insb
sub
cmp
je
sub
mov
lea
stos
mov
push
xor
jmp
fmuls
jb
push
cltd
cmp
or
lods
js
mov
pushf
cltd
or
fdivl
lods
cmp
sbb
xor
sub
jl
dec
dec
out
insb
test
mov
nop
unpcklps
dec
mov
xor
mov
mov
jno
mov
xchg
ljmp
outsl
stc
mov
ds
mov
testb
mov
pop
xchg
aam
shll
bswap
sub
int3
shlb
jp
in
movsb
bound
faddl
popf
jnp
in
xchg
lea
inc
sbb
int3
xlat
ljmp
test
cld
insb
push
enter
push
jae
xor
sbb
sahf
daa
ret
ret
xor
daa
sub
cmp
dec
orb
jbe
in
in
cmpsb
stc
adc
stos
mov
sti
jno
xchg
adc
roll
mov
adc
inc
int3
xchg
add
add
mov
imul
adc
out
fs
push
imul
mov
push
dec
sub
cli
int
sahf
shrl
out
aaa
cmp
pop
adc
mov
adc
rcr
roll
sub
inc
push
add
inc
cmc
stc
inc
and
inc
pop
cmp
sub
xchg
repnz
mov
mov
dec
xor
lret
mov
push
jge
test
roll
mov
dec
fcmovu
push
shr
dec
jne
sbb
inc
or
adc
aas
fmull
test
popa
imul
inc
loop
andl
std
xor
imul
jnp
jle
inc
push
sub
ret
sarl
or
dec
mov
test
andl
xchg
sub
popa
jecxz
adc
rorl
ror
nop
cmp
ss
js
cs
out
shlb
int
je
mov
and
fiaddl
add
push
ss
and
imul
cmc
sub
decl
push
or
lds
into
pop
mov
lds
dec
std
out
sub
ficompl
sbb
movsb
arpl
and
stc
pop
addl
js
adc
aaa
xorl
ficompl
insb
adc
lret
andl
push
or
push
lahf
inc
aad
jae
and
pop
cwtl
sbb
push
cli
sbb
cmp
scas
dec
data16
popa
dec
jnp
adc
mov
es
xor
daa
scas
push
lret
not
push
cmp
inc
dec
stos
mov
push
jne
fcmovb
loop
lahf
sbb
scas
pusha
xor
mov
inc
adc
imul
mov
xchg
outsb
jbe
enter
ljmp
sub
push
push
sbbb
pavgb
ret
enter
jae
or
loop
sub
fsubl
ds
lods
mov
inc
cmp
out
push
push
jl
jecxz
jbe
inc
mov
xor
repz
push
add
iret
std
xlat
call
cltd
inc
das
ja
rcrl
xlat
aam
ror
outsl
xchg
movsb
call
mov
sub
or
xor
inc
mov
out
cs
je
addr16
insb
cmp
jno
push
lahf
adc
push
sbb
push
mov
addb
popf
aad
test
jle
pop
stc
std
dec
vhsubpd
das
lret
or
sub
xor
or
xor
mov
mov
mov
es
mov
push
scas
add
adc
and
pop
add
lcall
pop
lds
lock
push
jp
mov
pop
int3
sahf
ret
incl
sti
ret
adc
inc
cld
adc
pop
dec
outsl
cmp
push
push
std
insb
cmpsl
notl
shrb
cmp
aad
scas
imul
mov
jecxz
xor
jg
scas
and
and
loopne
mov
and
xchg
xchg
leave
and
test
out
nop
shr
push
pop
pushf
inc
xor
arpl
cld
das
sti
inc
and
sbb
sub
aam
push
add
push
insb
jne
or
mov
dec
xor
testb
sbb
cwtl
aas
cwtl
out
test
mov
cli
mov
adc
dec
imul
sbb
sarb
ss
test
inc
jecxz
adc
adc
jle
sub
xor
je
xchg
pop
dec
mov
rclb
pop
jmp
xchg
jge
push
mov
std
dec
loop
or
inc
xor
les
jl
mov
fcmovbe
jnp
jmp
xchg
and
movsb
test
mov
adc
cwtl
push
nop
add
push
mov
pop
push
lcall
push
mov
add
cmpsl
mov
pop
rcll
jecxz
movsb
and
and
sub
out
jbe
nop
and
mov
jbe
in
mov
pop
daa
out
stos
xchg
lcall
iret
mov
lret
aaa
imul
sbb
inc
add
jbe
ss
and
mov
std
ds
cwtl
cmp
dec
movsb
imul
jbe
ljmp
outsb
and
fisubs
jno
test
cli
jb
mov
cmp
jne
fimull
push
mov
pop
scas
into
add
cmp
in
outsb
int3
lea
xchg
clc
mov
lods
and
insb
mov
cmp
xchg
sbb
adc
fwait
xor
mov
not
ljmp
push
hlt
mov
push
push
movsb
cmp
fimull
imul
pop
mov
push
or
dec
clc
adc
fldt
or
call
push
mov
ljmp
stos
fdivs
adc
sbbb
jne
add
cmpsl
dec
push
lretw
mov
icebp
es
movsb
fisubrs
jmp
enter
jge
or
pop
stos
clc
xchg
ret
jb
roll
inc
adc
lods
mov
xchg
pop
jo
fnstcw
fisubrs
mov
xchg
push
push
jbe
jno
insb
jno
outsl
mov
dec
xchg
and
sbb
out
push
cmp
adc
cltd
js
pop
adc
jg
sbb
sub
inc
jmp
jecxz
inc
clc
ja
inc
loope
mov
dec
jne
xor
push
and
inc
inc
cmp
mov
lock
cld
xchg
inc
add
out
icebp
inc
and
gs
icebp
push
dec
out
jno
fidivl
int3
clc
sahf
cmp
ret
and
in
fdivl
xlat
int
adc
xchg
negl
in
sub
out
mov
ret
je
inc
mov
negb
cwtl
sti
int
imul
fstpt
jae
out
fisubs
jp
mov
fcmovnbe
sbb
add
jecxz
inc
or
jl
iret
icebp
adc
out
lds
jo
clc
dec
stc
mov
xchg
xchg
lret
push
ret
scas
sbb
loopne
jae
jo
mov
pop
sub
in
fstps
dec
popa
cmc
xor
rclb
imulb
sti
repnz
cmp
xchg
and
int3
cmp
or
out
daa
ret
in
pop
or
xor
fsubr
sbb
mov
repz
fisttps
push
mov
and
inc
jno
mov
outsl
loopne
in
xlat
cli
mov
sti
incl
aas
push
lcall
cs
iret
scas
adc
xlat
cld
loope
xor
and
imul
jmp
push
adc
mov
xchg
in
adc
clc
jns
xor
xlat
or
sbb
lds
rcl
xchg
scas
cmc
pop
mov
test
daa
mov
xchg
cmp
bound
adc
jne
or
sub
aam
imulb
in
imul
adcb
pop
xchg
push
clc
cmp
pop
repz
cmp
mov
mov
cmpsb
shll
adc
std
and
sub
into
pop
inc
xor
test
pmullw
ret
adc
push
lods
pushf
jno
push
rcrl
push
test
xor
arpl
sti
sbb
and
ja
add
or
add
dec
or
fucomip
pop
outsb
jp
push
xlat
imul
mov
inc
pop
cmp
fadds
add
push
jle
scas
lahf
dec
push
sbb
andb
cmp
sub
push
ja
and
xor
icebp
in
rorl
ja
fs
mov
sbb
nop
xor
in
inc
sbbl
cmp
push
in
out
push
lods
fists
jge
cmp
pop
ss
or
and
test
and
pop
outsl
cltd
inc
jae
mov
cmp
xor
shll
lret
or
jb
adc
add
ljmp
mov
push
imul
push
push
and
lods
push
les
jg
pop
clc
test
jle
cmp
push
subb
lods
dec
testl
lea
dec
jne
int
in
sbb
and
cld
xchg
fwait
rcl
movsb
lret
cmp
mov
sub
xchg
loopne
xchg
repz
aaa
shll
mov
and
dec
enter
push
mov
push
pop
es
imul
andb
cmp
xor
mov
jbe
jno
dec
xchg
mov
sub
xchg
nop
push
adc
xlat
pop
addr16
pop
or
das
dec
lcall
pop
inc
mov
nop
add
insb
dec
jle
popf
in
ffreep
mov
das
adc
jp
push
add
and
nop
adc
dec
dec
call
sti
ret
imul
dec
cmc
int
cmp
cli
lcall
jle
pusha
mov
inc
xchg
pop
stos
shll
fcomip
and
lcall
pop
call
sub
rolb
jp
mov
fwait
clc
dec
cli
movsb
rclb
lahf
dec
mov
jl
testl
rcr
mov
fcompl
jne
in
mov
push
aaa
pop
cs
xchg
adc
jg
stc
mov
add
mov
push
mov
xchg
ret
scas
popf
jb
mov
outsb
xchg
jmp
call
fs
daa
stos
ja
int
push
sub
and
aam
sbb
stc
clc
push
ret
jne
or
bound
cli
adc
aaa
popf
fldt
adc
add
loopne
adc
aam
jl
outsl
dec
outsl
adc
in
add
lods
das
movsl
sbb
pop
push
inc
fcmove
xor
icebp
adc
loopne,pn
and
inc
pop
xlat
sbb
sahf
xchg
push
imul
stc
mov
sbb
icebp
mov
pop
mov
repz
push
inc
fdiv
push
push
and
lret
jb
gs
incl
xchg
sbb
cmp
sbb
lcall
enter
sbb
fists
pop
dec
pop
repnz
mov
dec
mov
pop
jmp
cwtl
test
imul
in
outsl
inc
inc
jno
push
cmp
loope
mov
shlb
daa
adc
mov
mov
aas
push
popa
xchg
push
lahf
cmp
ja
lea
gs
jns
std
xor
pop
stos
lods
loopne
in
push
data16
cld
jb
enter
das
mov
push
mov
push
mov
ss
xchg
orl
std
adc
add
cmp
cmpsl
mov
mov
jne
insb
outsl
stos
insl
popf
dec
adc
in
inc
add
add
push
mov
inc
es
jns
push
adc
jns
inc
sbb
jmp
pop
dec
clc
int3
cmp
lcall
scas
mov
or
pop
dec
adc
cmpsb
xor
mov
cmp
mov
push
xchg
mov
imul
sbb
inc
hlt
xchg
push
dec
jecxz
add
rcrl
or
push
mov
xchg
mov
aaa
jns
inc
adc
and
mov
sub
pop
push
or
scas
mov
adc
mov
fidivrs
icebp
xor
imul
cltd
dec
fisttpll
out
mov
cmp
fstpl
dec
xor
push
xchg
movsl
test
xor
xchg
dec
sub
out
in
push
fidivrs
imull
lcall
test
sbb
xor
mov
mov
ret
jl
xor
pop
add
mov
aad
xchg
rorb
inc
int3
dec
mov
fsubrl
adc
fidivrs
push
cwtl
and
cwtl
cmc
movsl
pusha
daa
scas
pop
mov
enter
mov
add
aaa
addl
daa
sub
push
outsb
sbb
enter
nop
sub
pusha
cwtl
stos
icebp
inc
and
mov
or
sbb
push
mov
in
rcll
add
jae
arpl
ds
sarl
cmpsl
test
outsl
push
lahf
adc
das
ja
jmp
daa
inc
fisubrl
pop
stos
stc
mov
push
dec
lods
scas
cmp
fbstp
push
push
out
pop
ret
jge
rcll
mov
rorb
jmp
and
mov
test
sub
cld
lods
xor
gs
sahf
add
daa
in
inc
sti
mov
in
sbb
roll
xchg
cltd
mov
sub
rcl
xor
stos
lcall
push
insl
cli
js
xor
pop
arpl
jne
rolb
add
fdivrl
jmp
cwtl
int3
hlt
pop
pop
mov
mov
cmp
inc
cmpsb
movsb
fildll
push
mov
lds
bound
andb
add
call
sarb
sub
insb
fsubl
pop
ret
out
adc
xchg
rclb
xchg
mov
stos
jp
mov
xor
fwait
dec
aaa
pushf
lock
pop
lods
lret
lcall
push
push
mov
cmp
mov
jns
mov
xchg
out
add
push
bound
ljmp
push
ljmp
and
sub
inc
xlat
ret
fwait
popa
inc
cmp
out
repnz
movl
inc
aaa
mov
cmp
or
xor
jns
xchg
sahf
sub
shlb
xchg
shl
movsb
add
mov
adc
mov
adc
movsb
enter
in
call
xchg
add
outsl
rol
adc
jno
mov
sub
bound
xchg
scas
test
hlt
ds
inc
sub
filds
call
es
test
sub
sbb
or
push
pop
inc
outsl
mov
cwtl
xchg
mov
popf
ror
addr16
ja
cmp
mov
jne
repz
jnp
sub
movsb
inc
and
cmpsb
insb
sbb
jecxz
enter
cmpb
jb
adc
xchg
test
test
dec
lahf
sub
cmc
icebp
dec
jge
pop
pop
test
xchg
xchg
lcall
shrb
lea
cmp
mov
gs
enter
inc
push
js
cmc
out
adc
movsl
lea
add
cmpsl
jae
stc
ret
push
fwait
push
xor
jmp
lcall
scas
call
dec
dec
xchg
enter
bound
mov
or
jle
in
and
cmp
pop
fsubs
les
out
mov
or
repz
inc
xchg
push
cwtl
cltd
outsb
fsubrl
or
mov
test
loopne
fstpt
mov
inc
mov
cli
jnp
mov
inc
in
pusha
cld
dec
dec
loopne
pusha
movsl
pop
jns
test
loope
mov
jmp
ja
jo
mov
add
push
sub
sbb
add
mov
repnz
les
pop
and
adc
cmp
xchg
inc
or
ljmp
insb
mov
or
mov
inc
mov
orl
sub
cmp
mov
enter
push
in
mov
xor
pop
jg
pop
jns
movsl
lods
pop
push
jne
or
es
jecxz
loope
xor
xchg
loop
popl
mov
pop
addr16
call
popa
push
mov
push
adc
inc
sbb
and
lret
sbb
outsl
loope
and
mov
out
xor
lds
jnp
pop
push
sbb
or
add
mov
inc
pusha
pop
sub
rolb
pop
scas
mov
dec
ljmp
in
ret
stos
push
xor
repnz
subb
pop
lods
lar
xlat
jge
and
xchg
jbe
dec
mov
xchg
mov
adc
lcall
loope
arpl
insl
xchg
cmp
and
pop
or
dec
bndstx
enter
es
add
ja
jbe
mov
rolb
xor
movsb
subb
sbb
xchg
mov
lea
push
or
or
and
lahf
nop
jl
mov
cltd
pop
cld
pop
jbe
sbb
out
inc
jp
mov
cmp
mov
mov
clc
cmpl
cmc
aad
roll
test
cli
jg
push
insb
cmp
mov
mov
fisubl
adc
rcrl
xor
add
push
mov
mov
aad
loop
lea
xchg
add
cmp
cld
pop
push
dec
pop
and
fs
ds
sahf
rcll
pop
dec
mov
mov
loope
cmp
std
adc
dec
jle
or
aaa
xchg
insl
mov
es
popf
ja
stos
dec
je
gs
leave
arpl
fs
lcall
aaa
jns
jle
pop
adc
dec
orl
pop
test
and
cld
les
ljmp
scas
jg
xor
lds
les
pop
mov
divl
dec
scas
pop
pop
inc
lcall
testb
pop
sbb
daa
inc
out
mov
repnz
push
fcomp
test
sbb
and
dec
lcall
lock
mov
jl
outsl
fcomip
test
in
scas
jne
sbb
cltd
sbb
xchg
or
push
call
enter
shlb
fisubl
mov
stos
std
sbb
cmpsb
test
hlt
popa
push
inc
mov
lods
aad
or
mov
bound
inc
add
insb
dec
adc
shlb
add
pusha
mov
popf
xchg
xchg
call
jns
jg
repnz
arpl
sbb
xchg
stos
sub
xchg
jmp
inc
dec
ljmp
inc
pop
sbb
and
into
sarl
fdivr
or
jge
inc
lahf
inc
cmp
adcl
dec
sbb
shrl
mov
leave
fucomi
insl
rclb
mov
sub
in
mov
out
fisubrs
cmp
scas
add
xchg
add
mov
and
testb
insb
pop
scas
sub
push
das
leave
and
and
push
aaa
xchg
pop
fdivs
or
xchg
std
pop
cmp
cmp
addr16
adc
sub
sub
lcall
push
pop
in
push
enter
jns
xchg
out
sub
ljmp
pop
pop
cmpsl
aad
xchg
nop
scas
xchg
lcall
add
jo
rcll
cmc
cmp
and
mov
xchg
cmp
test
dec
push
mov
push
shrl
mov
sbb
js
cmp
repnz
add
jae
mov
in
xor
or
xor
lcall
xchg
hlt
sbb
das
arpl
dec
sbb
fdivrl
aas
mov
fcompl
cmpsl
jns
adc
aaa
fwait
daa
mov
cltd
fnsave
and
cmp
rorb
xchg
pop
and
clc
test
fwait
outsl
xor
jno
in
sub
xor
xor
stc
xchg
stos
sbb
pusha
sub
iret
jle
jb
and
sbb
aaa
xchg
pusha
push
fs
rcrb
push
push
or
mov
sbb
ljmp
inc
or
test
dec
jno
jle
xchg
adcl
das
testb
sahf
jl
lret
sub
jno
pop
jae
les
mov
or
adc
push
mov
pop
mov
mov
and
inc
add
sub
pop
pop
aaa
mov
jmp
cltd
ja
int3
push
jle
pop
lds
icebp
int3
sub
xchg
add
inc
orb
dec
jl
scas
lea
or
leave
les
test
inc
fildll
push
dec
cmc
mov
ja
popa
aad
in
sub
shrl
das
sbb
enter
xorl
jnp
imul
test
push
cmpsl
sub
add
out
shrb
test
jle
in
in
or
in
add
icebp
pop
popa
sbb
mov
xchg
dec
xor
icebp
mov
insl
mov
mov
leave
pop
pop
mov
or
dec
and
jne
push
mov
cmpsl
in
ljmp
cwtl
cmp
mov
out
xchg
fstpt
mov
sahf
lret
shl
arpl
or
cmp
sbb
lock
xor
mov
stos
cmpsb
imul
jmp
push
push
cmp
xlat
imul
andb
mov
dec
out
cmp
xchg
bound
es
or
adc
or
dec
jle
cld
push
inc
sahf
hlt
jno
int3
pop
sbb
and
mov
and
out
mov
inc
push
cmp
xchg
cmp
cmpsb
mov
std
push
push
stos
xchg
and
pop
and
push
je
rclb
cs
pop
push
pop
jo
fiaddl
lea
lea
daa
push
cmp
pop
outsl
sarb
mov
lahf
arpl
loop
add
jns
cmc
call
ret
mov
and
inc
xor
push
leave
push
jge
jle
xor
pushf
ret
cmc
in
sub
push
cld
xchg
xor
cltd
inc
mov
aas
xchg
xchg
mov
cmpsb
out
xchg
jl
sbb
mov
push
popf
xchg
jno
test
aas
test
outsb
outsb
dec
nop
out
mov
jecxz
push
add
inc
xchg
jg
pop
pop
js
mov
sahf
roll
xlat
xchg
rorb
cs
lcall
stos
dec
test
jo
pop
cmc
sub
neg
mov
push
lds
js
inc
pop
mov
cmpsl
mov
mov
push
icebp
mov
mov
cld
mov
add
lret
bound
and
pop
fiadds
je
xor
jecxz
and
dec
dec
cmp
mov
ret
mov
xor
sbb
xchg
mov
lds
inc
jmp
sub
adc
jmp
js
sahf
repz
mov
fadd
xlat
dec
lret
push
imul
jp
sub
sbb
shrb
sbb
push
sub
and
mov
mov
rcll
movsb
dec
sub
cmp
pushf
push
push
sbb
pop
lret
pop
addr16
jb
jmp
in
xor
je
xchg
test
icebp
sbb
cli
scas
inc
pop
xchg
mov
inc
pop
notl
jp
stos
push
inc
jle
jle
scas
inc
xor
out
clc
cmpsl
pop
test
mov
jbe
add
mov
jmp
xor
sbb
adc
arpl
gs
lds
das
stos
and
pop
popf
jbe
in
mov
push
movsl
pop
xor
xchg
cs
cs
mov
fadds
pop
aad
subl
jl
mov
daa
hlt
mov
cmp
pop
lock
add
pop
push
jo
stos
gs
and
pop
imul
mov
arpl
jno
sbb
push
mov
or
notl
pop
fists
ja
negb
cld
rolb
insb
mov
cmpsb
mov
gs
mov
jae
incb
sbb
nop
mov
jmp
bound
sahf
mov
sub
divl
mov
xchg
mov
fdivrl
inc
mov
popf
outsb
push
shlb
xlat
sub
jbe
push
dec
aaa
and
mov
cmp
mov
loop
push
pop
push
in
stos
sub
cld
shrb
inc
icebp
mov
xor
jnp
adc
bound
cmp
or
int3
popf
lcall
mov
imul
fimull
jl
and
mov
mov
mov
ret
xor
mov
jb
inc
pop
shll
mov
in
jp
pop
mov
stos
int3
cli
cli
lahf
movsb
lahf
clc
subb
ret
pop
imul
add
xchg
cmp
lahf
pusha
enter
aaa
xchg
movsb
ljmp
test
stos
dec
movsl
insl
adc
or
ja
aad
aam
cli
pop
leave
popa
dec
push
adc
mov
ss
xchg
pop
out
outsl
xchg
stos
jb,pn
sub
or
jne
push
adc
and
cltd
mov
and
add
push
adc
pop
lcall
into
jbe
xor
adc
lcall
push
dec
imul
adc
sbb
jns
dec
pusha
jecxz
dec
inc
dec
adc
and
shlb
cmp
dec
lahf
out
int
js
loop
in
mov
clc
cltd
mov
jl
stos
sahf
insl
sbb
xorl
cmpsl
fs
cwtl
insl
inc
stos
outsb
scas
adc
repz
add
movl
jl
xor
fldcw
push
push
xchg
lret
insb
fwait
outsl
rorb
xor
imul
negl
lds
insb
xchg
aas
mov
mov
jle
pusha
xchg
add
xlat
and
jp
sub
and
adc
test
in
and
xchg
or
int
in
xchg
add
pop
arpl
inc
xor
loop
fldcw
sbb
orl
mov
lret
sahf
fimull
push
and
les
sub
jno
loope
adc
push
leave
mov
out
pop
fldcw
loopne
xchg
xor
push
lods
sub
or
push
arpl
xchg
fadds
pop
movsl
or
js
sub
call
lock
adc
sbb
cs
out
mov
mov
sbb
dec
out
lods
ret
stc
mov
adc
push
add
push
in
push
stos
xchg
add
mov
add
adc
xchg
xor
ret
movsb
sbb
aas
cmp
or
push
push
loopne
into
sbb
xchg
cwtl
aaa
rcr
pop
cmc
mov
sub
roll
hlt
inc
and
add
sbb
xchg
aaa
popf
jmp
sbb
movl
cli
fdivr
mov
sub
lahf
adc
jnp
and
insb
mov
stc
dec
outsl
dec
cmc
out
pop
ja
leave
sub
aas
and
xor
jne
pop
dec
call
adc
out
jnp
xchg
and
xchg
and
add
cwtl
push
popf
inc
cld
xchg
pop
cmc
mov
or
and
cwtl
les
cmp
add
mov
mov
stc
dec
cmp
or
sub
jne
aad
test
sbb
pop
lret
xchg
imul
or
daa
data16
inc
in
xor
xor
jg
dec
inc
mov
push
or
mov
inc
sbb
mov
jbe
mov
mov
dec
ljmp
imul
in
ficompl
jmp
mov
or
adc
outsl
dec
inc
fwait
and
and
fwait
xchg
fnstsw
sbbb
pop
jne
cmp
cmpl
cmp
jmp
js
data16
mov
fisubl
adc
out
inc
dec
test
jle
inc
mov
cmpl
sysret
in
fucomip
lret
push
add
lret
pop
adc
jp
stc
cmc
add
inc
pop
sti
xor
scas
pop
fldenv
and
xchg
cmp
cs
xchg
arpl
dec
ss
ds
adc
std
gs
and
xchg
cmpsl
xchg
int
pop
dec
addr16
mov
or
aas
pop
fs
ja
callw
push
iret
das
jb
in
pop
mov
mov
int
and
sbb
add
sbb
popa
ret
sub
mov
pop
lods
lea
ret
movsb
xor
insl
jl
ja
loopne
pop
les
out
aaa
or
adc
popf
mov
test
mov
jo
xor
mov
pop
outsl
adc
in
dec
adc
sar
pop
xor
fsubrs
fsubrs
sahf
sub
icebp
mov
jecxz
ret
in
mov
fcmovne
push
movsl
inc
mov
icebp
push
out
mov
mul
jmp
pfrsqit1
pop
lcall
out
ret
arpl
and
dec
enter
and
sub
outsl
jne
sbb
pop
cvtdq2ps
ds
mov
rorb
div
inc
mov
adc
mov
or
js
fldenv
cs
lea
addr16
pushf
outsl
and
sub
fldcw
jl
adc
je
shl
cmp
cmp
mov
inc
inc
mov
mov
test
sbb
int3
pusha
inc
sub
out
int
ret
movsb
insb
mov
sbb
add
xchg
cltd
cmp
es
jge
xchg
subl
dec
jle
stc
mov
cmpsl
xor
cmp
lret
loopne
rclb
or
cld
js
push
push
sbb
mov
movsb
xchg
in
pop
sbb
mov
sti
fs
jno
aam
iret
inc
or
aam
push
repz
mov
jo
and
ret
xor
stos
mov
dec
test
gs
dec
orl
nop
mov
repnz
incl
and
sarl
aaa
cld
pop
in
add
xchg
jbe
adc
lods
cwtl
ret
int3
jg
sub
sbb
sub
and
xchg
adc
xor
add
xor
in
inc
sub
orb
cmp
loopne
xchg
lahf
cmp
ljmp
shrl
add
pop
add
sub
or
outsl
cmp
mov
jb
add
cmp
xor
mov
cli
movl
outsl
nop
scas
and
mov
add
push
mov
mov
xlat
fmul
add
ja
addr16
push
sahf
dec
sub
jmp
loope
add
scas
push
fcompl
imul
sbb
pshufw
daa
push
jo
mov
and
xlat
lret
push
add
lcall
in
pop
push
fbld
lods
inc
cmp
cmp
rcrb
mov
add
dec
xor
mov
fistl
out
js
notl
mov
lds
and
dec
sti
fdivl
sub
jg
mov
adc
and
popl
je
xchg
aas
or
jnp
fbld
lret
enter
mov
cmp
mov
stos
hlt
inc
inc
jo
into
in
dec
push
divb
pop
mov
ja
je
jg
daa
imul
sbb
dec
sahf
movsl
mov
movsb
jg
and
loopne
sahf
push
fisubrl
aam
icebp
popa
and
scas
jle
call
test
fstps
add
popf
and
mov
or
mov
sbb
fadds
dec
or
mov
imul
add
shl
ret
ss
sub
sub
aam
cmc
pop
ja
push
xchg
mov
loop
xchg
ret
and
adc
inc
mov
sahf
lods
add
daa
mov
adc
pop
cld
fstpl
mov
mov
sub
adc
adc
repz
in
fldcw
in
xchg
inc
aaa
dec
xchg
xchg
cmp
sar
fwait
aad
cmpsl
in
push
add
mov
push
popf
mov
and
sub
leave
outsl
jmp
ds
adc
xchg
dec
sti
fldcw
xchg
out
cltd
call
xor
xchg
cmp
out
and
lds
push
test
sbb
jae
mov
sbb
dec
xor
inc
push
push
xor
out
push
xchg
loopne
dec
faddp
mov
mov
repz
seta
lahf
cwtl
loope
lahf
lret
fs
adc
sbb
dec
popf
jae
cmp
jnp
les
rorb
adc
int
outsb
add
sahf
adc
leave
outsl
cmpsl
ret
mov
dec
aad
clc
cltd
sub
and
gs
push
pop
test
jmp
mov
jg
nop
bound
pop
jle
aad
clc
ret
test
loope
add
lds
cmp
out
push
mov
push
pushf
cmp
test
imul
mov
cli
std
pop
pop
out
pop
and
push
loopne
cmc
lret
or
mov
sub
fstps
fwait
sub
cli
int
dec
xchg
add
das
mov
mov
lahf
ret
outsb
out
fldcw
inc
mov
dec
jg
xchg
xchg
movsl
mov
jle
cs
popf
jns
addr16
jl
mov
and
outsb
int
adc
jmp
cmp
pop
cmp
addr16
lcall
je
clc
test
je
ret
ljmp
iret
call
leave
cli
repnz
xchg
jle
adc
shr
rorb
inc
les
decl
pop
stc
jmp
push
inc
aam
stc
das
mov
gs
fcomi
cmp
inc
mov
scas
insl
mov
js
insl
xor
pop
dec
and
xor
mov
xchg
xor
add
mov
or
enter
mov
gs
xor
jmp
in
push
xor
das
mov
adc
lods
lahf
lcall
ret
mov
push
or
fidivl
mov
pop
xor
mov
inc
push
add
adc
int3
jo
add
repz
pop
insb
lock
and
mov
fcmovnu
inc
cltd
movsl
mov
js
adc
nop
xchg
in
inc
push
adc
testb
inc
inc
xchg
outsl
lcall
xor
insb
es
outsb
add
call
adc
inc
adc
mov
push
test
imul
cltd
adc
insl
push
scas
pop
popf
jmp
add
ret
out
inc
scas
jle
push
xchg
push
loope
sahf
jg
jmp
mov
inc
inc
shl
mov
arpl
in
inc
aam
add
and
stos
or
mov
push
cmpb
cmp
fs
mov
xchg
scas
or
popa
push
sbb
push
jp
mov
xor
inc
stos
ja
scas
push
cmc
xchg
mov
cmpsb
ja
sbb
fdivl
jecxz
imul
or
std
je
cmp
addr16
and
mov
sub
sub
add
test
xchg
mov
sub
or
xor
cli
shrl
sbb
xchg
jnp
ret
andl
stos
mov
fucom
cmc
add
ficompl
xor
mov
iret
mulb
pop
xchg
je
rcr
and
dec
add
stos
lea
mov
clc
cmp
cmp
mov
sti
adc
sub
xchg
lds
push
imul
ficomps
das
push
fcomp
or
xchg
inc
or
jb
jg
pushf
mov
adc
roll
push
mov
pop
mov
rcll
repz
arpl
cwtl
fcompl
and
addb
adc
lods
nop
decl
sarb
inc
xchg
mov
push
movsb
pop
mov
xlat
popf
icebp
add
sbb
lahf
push
test
push
xchg
pop
scas
icebp
clc
add
xchg
enter
rclb
cmp
test
cli
rep
cmp
jmp
aam
sbb
or
cmp
mov
cmp
mov
sub
or
add
or
jg
mov
fsts
out
dec
cltd
or
push
xor
adc
xchg
inc
shll
sbb
cmpsb
imul
mov
aaa
wbinvd
mov
pop
adc
dec
lock
or
fisttpl
jnp
push
xchg
or
cmp
sbbb
jmp
repnz
dec
popf
popf
xlat
fisubl
fdivl
sar
mov
clc
leave
fstpl
pushl
fsubrs
into
scas
test
pop
mov
enter
inc
out
adc
xor
mov
jecxz
add
ds
sbb
dec
xor
shr
fbstp
pop
aas
sub
cmp
xchg
outsl
icebp
cli
jp
inc
dec
loopne
arpl
inc
push
or
push
push
out
adc
xchg
sub
fmuls
inc
xchg
push
in
outsb
dec
xchg
adcb
mov
stos
data16
data16
out
out
jmp
jl
push
or
cmp
scas
add
mov
mov
cwtl
ret
js
adc
jl
mov
loop
sub
push
pop
jle
jecxz
shll
stos
ss
movsb
fsubrl
or
xor
aaa
fsub
mov
sbb
into
xchg
stos
pop
mov
mov
lret
data16
mov
cltd
popa
mov
addr16
mov
xor
cli
js
outsl
adc
movb
lret
adc
das
sahf
jle
jb
pusha
xchg
pop
jb
push
movsb
dec
push
or
addb
sarl
inc
xchg
dec
jg
rol
jne
sarl
lcall
shr
mov
sbb
repnz
or
popf
jle
add
mov
jo
aad
ds
test
xchg
inc
test
push
mov
sbb
cltd
mov
dec
test
hlt
xor
push
in
xchg
mov
push
and
call
jo
dec
das
into
xstore-rng
cmpsl
cmp
leave
mov
push
cs
mov
stos
add
std
mov
inc
aad
push
or
adc
fdivrs
jle
mov
cwtl
pop
cmpsb
inc
ss
test
jae
mov
ret
or
in
andl
or
push
sub
ss
call
mov
in
adc
inc
dec
mov
lods
in
bound
sub
in
int3
inc
mov
xor
out
push
mov
dec
dec
leave
mov
xchg
stos
adc
xchg
lods
popa
popa
add
cmpb
sbb
xor
xor
movsb
sahf
nop
adc
push
sbb
sti
pusha
es
icebp
idiv
add
addb
jmp
sahf
xor
mov
loopne
inc
js
mov
insb
ja
mov
gs
cmp
hlt
fadds
out
lods
lea
fdivl
div
inc
and
and
imul
jb
and
xor
scas
lea
mov
mov
push
push
cmp
in
in
jmp
cmp
lret
lret
iret
inc
dec
les
data16
cwtl
jp
fcomps
sbb
sub
test
mov
fcoms
xchg
inc
cmp
mov
dec
in
or
je
lea
lret
aaa
xorl
inc
xor
push
data16
xor
push
das
pusha
sub
sub
add
pop
adc
sbb
mov
inc
out
cmp
mov
inc
cli
mov
ja
mov
loopne
out
inc
rcr
ret
int
sub
aam
pop
jae
scas
scas
mov
pop
jmp
daa
sub
psllq
insb
loop
inc
loope
jns
push
and
mov
pop
fmuls
aam
push
stc
inc
inc
sbb
push
sub
and
rcl
stc
xchg
jns
gs
scas
pusha
das
inc
adc
cld
push
xchg
ljmp
jns
fcmovne
loop
cwtl
xchg
mov
cmp
call
adc
jecxz
out
test
push
add
xlat
push
bound
push
cld
cmp
stos
js
xchg
dec
add
imul
fstl
incl
fucomp
dec
repnz
insl
repz
addb
jp
in
mov
or
insl
into
loop
imull
and
sub
mov
stos
out
sbb
jne
insl
dec
test
push
xlat
nop
enter
lret
push
xchg
aaa
mov
in
jne
sub
addb
loopne
cmc
flds
mov
loop
int
popf
dec
sbb
insb
lcall
nop
mov
cmp
push
push
fadds
in
cmp
ror
lret
rcll
sbb
fsub
cld
xlat
dec
test
ja
pop
outsl
out
faddl
rolb
jg
sub
arpl
test
arpl
inc
xchg
sbb
xor
ret
or
arpl
pcmpgtw
xchg
pop
mulb
fs
pop
jge
addr16
into
sub
scas
mov
gs
sub
out
sbb
stos
cmp
int3
lcall
outsl
aam
ret
mov
or
adcb
sbb
sub
fucomi
or
jmp
loop
cli
fnstsw
add
movsb
inc
adc
lcall
mov
loope
test
jecxz
cwtl
ret
aad
scas
mov
mov
inc
mov
xchg
addr16
inc
ss
or
pusha
pop
mov
mov
cli
push
movsl
imul
mov
inc
or
into
xor
stos
dec
outsl
shll
or
cld
aaa
jae
pop
leave
inc
pop
lcall
sbb
sub
push
outsb
sbbb
cli
jp
idivb
fsub
scas
add
icebp
es
dec
mov
mov
pushf
dec
int
orb
mov
or
shlb
int
mov
arpl
push
xchg
xorb
jle
sarl
xchg
popf
dec
sub
mov
sti
je
ret
cwtl
mov
dec
jle
mov
jns
or
sti
jecxz
mov
test
fwait
cmp
jp
aam
xor
or
push
mov
mov
or
mov
bound
call
cmp
das
and
repnz
shll
or
mov
xor
pop
ficoml
lds
rorb
js
jle
inc
cmp
daa
mov
stos
addr16
sbb
jnp
dec
out
into
xor
js
fildl
jl
fistpl
out
rcll
shlb
mov
loope
and
xor
pop
leave
xor
stos
push
fs
callw
leave
or
bound
cmp
pop
jmp
push
jge
mov
popf
push
movsb
cmpsb
push
pop
xor
leave
sub
cmp
mov
lods
inc
jge
dec
xor
push
add
push
sub
inc
mov
shrl
sub
cmpsb
daa
jp
xor
or
lock
enter
xor
dec
dec
lret
divb
dec
mov
fwait
mov
and
sbb
imul
scas
mov
sahf
imul
mov
xor
ljmp
add
lahf
push
loope
jo
ret
and
sub
fdivl
jge
inc
ret
add
add
or
daa
mov
xor
and
jecxz
addl
mov
or
and
xor
int
out
adc
imul
xchg
aam
mov
pop
xchg
roll
addr16
mov
lods
dec
cmp
mov
pop
out
stos
int
test
je
pop
out
repz
sub
mov
mov
aaa
xor
xchg
sarb
push
shl
pusha
or
sbb
sub
inc
mov
jo
and
push
mov
pop
test
rcll
push
orb
mov
xchg
xchg
pop
jp
mov
lds
lret
sbb
push
clc
mov
movsb
pop
data16
test
mov
ss
mov
jle
jg
adc
xchg
scas
lods
rcrl
and
pop
stos
pusha
idivl
lcall
mov
xchg
call
inc
pop
mov
sbb
ds
out
add
shll
sbb
call
adc
or
shrb
add
scas
rep
repnz
mov
sti
sub
dec
arpl
or
sub
and
test
cmpsl
mov
scas
les
sbb
into
out
add
push
jb
dec
xor
sub
fldl
mov
jno
and
ljmp
jbe
adc
mov
test
xchg
call
mov
stos
xchg
xchg
add
movsl
mov
adc
decb
roll
loope
inc
adc
sarb
jbe
out
test
andb
pop
xchg
add
dec
addl
fsub
stos
fwait
sub
xchg
cmp
adc
loopne
sbb
scas
inc
and
cmp
cmp
xlat
insb
jp
into
stos
imul
mov
sti
inc
stos
mov
stos
mov
pop
sahf
jle
adcb
cmp
lods
fisubrs
movsl
sub
test
jle
cmp
push
mov
jno
dec
push
inc
inc
sbb
inc
ret
test
xchg
cld
xchg
sti
in
push
scas
addr16
sbb
push
sub
js
jmp
arpl
sub
les
jnp
adc
lods
fisubl
in
rcl
jnp
jnp
jb
ret
inc
sbb
icebp
add
pop
push
lcall
stos
push
push
mov
mov
insl
add
mov
jns
or
sbbl
inc
xor
repz
outsl
jmp
mov
imul
movsl
out
push
mov
mov
outsl
fwait
js
andl
out
jno
rol
mov
test
iret
mov
iret
lds
inc
popa
push
fcmovne
test
cmpsb
cmp
lahf
test
sbb
fistpl
ja
out
sbb
dec
inc
imul
pop
outsb
bound
in
pushf
stos
repz
mov
add
mov
mov
in
cmp
rep
jge
ds
inc
adc
or
jno
or
int
iret
xor
jge
sbb
cwtl
cmpsb
pusha
pusha
xor
sub
inc
sbb
out
pop
fsubl
cmp
ficoms
add
xor
add
dec
inc
sub
fsubl
stc
ret
mov
pop
mov
inc
pusha
fisttps
cmpsl
stos
lock
dec
jmp
xor
cli
and
push
sub
data16
repz
or
lock
out
or
add
enter
sbbl
mov
add
jnp
mov
loop
jp
leave
inc
cmpsb
add
and
cmp
push
lds
xor
cwtl
sub
push
dec
fimuls
sbb
out
stc
jnp
or
arpl
test
movsb
pop
popf
cmp
push
das
gs
andb
aaa
les
adc
dec
jp
stc
popa
sar
aam
inc
cmp
push
mov
in
frstor
out
xor
push
jae
xchg
mov
mov
cmpsb
vmovups
inc
jnp
nop
ret
or
mov
jmp
push
pop
add
jnp
scas
nop
std
xor
mov
jmp
jno
mov
rcrl
fmull
mov
lret
pop
mov
add
les
or
xor
lea
iret
sbb
out
icebp
xchg
jns
pop
mov
sti
roll
mov
xor
pop
out
inc
add
dec
mov
mov
into
jecxz
inc
dec
daa
lds
imul
pop
outsb
add
dec
push
jb
xchg
dec
xorl
insl
ja
dec
sbbb
jae
test
fsts
jb
cmp
jp
sub
jbe
push
int
pop
push
mov
xchg
repnz
pushf
push
xchg
mov
loop
xor
lret
add
mov
insl
ficomps
mov
add
test
cmp
jmp
jbe
mov
adc
sbbb
sbb
repz
push
lret
or
jae
les
jmp
mov
fsubl
jbe
mov
les
cmc
sub
stc
mulb
les
clc
jbe
fucomip
out
mov
jmp
dec
pop
mov
xor
pop
mov
rcr
jle
dec
in
cltd
stos
cld
insb
daa
or
testl
nop
mov
sahf
ficomps
mov
inc
enter
daa
cld
cmp
lods
mov
adc
cmpsl
inc
xchg
push
xchg
xor
push
add
test
and
rcll
inc
mov
jo
in
in
mov
mov
dec
push
jnp
push
lcall
insb
jge
jecxz
fucomp
cmp
bound
and
and
or
lods
adc
sub
mov
jle
ljmp
pop
push
ds
pop
jg
lds
fdivl
arpl
and
ljmp
xor
dec
xchg
lock
xchg
rclb
inc
cmp
mov
icebp
fcom
lret
xor
lods
ja
mov
inc
cmp
popa
jl
sub
adc
test
pusha
hlt
pop
xchg
insb
lock
cli
or
cs
lret
in
je
popa
push
ja
cmc
addb
jb
push
mov
aam
add
mov
mov
scas
repz
or
pop
or
lock
dec
push
repnz
mov
dec
push
dec
jae
fistpl
fnstcw
cmp
inc
and
in
and
lods
popf
bound
stos
push
rolb
xor
mov
push
add
imul
add
and
jbe
in
and
push
dec
sub
adc
cmp
movsl
cmp
cmp
mov
push
jecxz
in
push
loopne
arpl
outsl
sbb
imul
imul
mov
xor
jg
add
jmp
fdivr
push
movsl
mov
lret
xchg
insl
into
out
or
sarb
or
push
sub
pop
pop
out
jl
sub
inc
or
xchg
xchg
xor
cmp
mov
insl
sub
mov
sub
fmul
fldt
push
loop
or
ret
mov
xchg
dec
mov
pushf
test
int3
cli
add
subb
sub
dec
scas
dec
mov
les
das
and
xchg
mov
mov
cmp
push
cld
lret
clc
mov
mov
dec
cltd
stos
inc
inc
cmp
bound
movsl
dec
testb
lock
cs
push
cmc
add
shlb
sarl
inc
inc
jmp
and
xor
ja
jl
push
inc
xchg
xor
dec
adc
and
dec
js
int3
repnz
test
and
icebp
add
pusha
dec
aaa
mov
xchg
pop
xlat
lea
mov
addb
push
rcl
inc
adc
int
cmpl
mov
loope
stos
mov
push
outsb
push
cmc
shl
insb
movsl
add
pop
in
scas
mov
mov
xorl
xchg
add
rclb
repnz
add
cmp
pop
cmpsl
or
in
int3
push
adc
stos
inc
lret
cmp
addr16
or
nop
je
lcall
lcall
fmul
ret
or
push
and
insb
jp
xchg
inc
and
add
movsl
imul
xchg
stos
push
int
out
imul
call
bound
xor
sbb
mov
adc
stc
lods
adc
in
cmpsb
out
test
aad
xor
loope
xchg
xor
and
out
cmp
js
xchg
mov
sbb
adcb
into
or
mov
lods
bound
sub
push
lods
mov
sbb
pop
push
lock
xchg
fmul
ja
pop
lret
daa
mov
jl
aad
mov
sahf
inc
subb
ret
add
lahf
cmp
mov
ds
outsl
pusha
divl
and
dec
xor
fdiv
add
popa
sbb
xchg
jns
mov
jns
in
loop
inc
fisubl
cmp
mov
lods
push
fsts
push
movsb
insl
push
fnstsw
lea
xor
daa
mov
cmp
xchg
int
dec
push
mov
rolb
ret
aam
fisttpl
xchg
insb
dec
cltd
test
push
scas
jp
int
lret
inc
dec
xchg
adc
cmp
xor
inc
push
push
cmp
cmp
aad
jae
stos
xchg
gs
gs
xchg
daa
insl
mov
call
in
jns
mov
outsb
jg
add
imulb
pushfw
pop
icebp
dec
mov
lret
add
jmp
insl
adc
std
sub
lea
add
rsm
lcall
call
daa
or
jmp
cmp
cmp
pop
nop
aam
xor
mov
jmp
sbb
push
adc
xchg
ret
pop
sub
adc
into
mov
ss
sbb
fdivr
sub
imul
sub
xchg
lcall
fcomip
inc
mov
xchg
pushl
imul
sbb
lret
data16
jb
out
push
cmc
adc
in
lcall
sbb
jne
es
fwait
pop
lret
test
mov
das
imull
imul
idivl
shrb
popf
sub
and
lret
jmp
call
test
hlt
inc
lret
stc
rolb
arpl
mov
and
popa
xchg
data16
rolb
sub
inc
push
loope
adc
jg
jb
ret
xchg
fstpt
dec
jle
mov
cmpsl
insb
lock
fmuls
mov
mov
aad
dec
mov
scas
jl
les
rcll
addr16
aad
mov
sbb
cltd
xchg
inc
inc
add
jmp
in
leave
xor
add
pushf
or
sbb
lahf
pop
mov
pop
add
aaa
or
fistpll
inc
mov
pusha
in
xchg
das
adc
loopne
adc
out
stc
scas
lds
push
in
mulb
lds
jecxz
dec
fstps
or
mov
shl
mov
xor
pop
dec
mov
movsb
push
pushf
ret
mov
push
sub
pop
insl
ss
in
cmp
xchg
ljmp
notl
mulb
filds
cmpsl
leave
cmp
and
xchg
mov
int3
xor
pop
out
subl
sub
pop
sarb
int3
test
in
or
les
ficoms
xchg
dec
enter
adc
divl
ret
fisubl
xor
loope
pop
data16
xlat
mov
test
pop
push
xchg
jl
sbb
js
mov
push
into
push
jle
lods
divb
inc
mov
in
enter
mov
lret
pushf
iret
ret
loopne
push
lret
stos
cmp
lea
dec
mov
pop
enter
inc
ffreep
xor
xchg
les
out
pop
hlt
mov
iret
xor
out
inc
sbbl
adc
dec
and
push
push
mov
cmp
test
sbb
sbb
loop
std
int3
test
outsl
call
in
bound
repnz
lea
adc
jno,pn
cltd
xor
test
cltd
pop
mov
push
add
jo
jb
in
or
mov
fwait
js
xchg
mov
xor
repnz
fst
stos
jg
push
rorb
add
nop
inc
adc
pop
xor
lock
fidivrl
daa
dec
and
jecxz
and
and
cmp
cmpsl
popa
loope
loopne
adc
lcall
aas
ja
jns
leave
sub
inc
out
jae
push
push
cltd
cwtl
cmp
adc
dec
inc
mov
dec
test
arpl
movsb
dec
push
loope
xor
xchg
mov
stos
aaa
xchg
insb
inc
sti
sub
repnz
aad
pop
jne
std
lret
jns
leave
mov
jb
in
xchg
clc
shll
and
sbb
mov
arpl
jbe
outsb
adc
lret
mov
lret
pop
cs
sti
test
add
movsl
pop
push
sbbb
stos
cmpsb
sti
js
jo
bound
outsb
lods
ret
jl
fcmovne
insl
inc
jl
jl
aad
ljmp
inc
iret
std
jmp
test
ss
aad
loopne
adc
xchg
pop
rcrb
arpl
lock
or
fdivr
sub
clc
dec
xchg
std
push
mov
aas
clc
push
fucom
adc
cmp
out
or
xor
xchg
push
mov
icebp
test
jmp
sub
add
xor
mov
and
xlat
inc
sub
mov
idivb
add
pop
jmp
sbb
mov
sub
ja
adc
xor
insl
add
pop
outsb
jmp
repnz
inc
or
and
addr16
jmp
leave
ds
dec
ja
add
cmp
push
add
stc
test
dec
xchg
inc
push
cmp
stc
outsb
add
or
xor
mov
cltd
push
jne
stos
iret
cmpsl
in
xchg
fisttpll
icebp
sub
dec
add
push
leave
aaa
or
dec
decl
mov
xor
push
sub
push
jmp
fdiv
push
clc
ja
mov
mov
fisttpll
mov
mov
into
jae
or
gs
or
add
arpl
mov
ja
ja
inc
pushl
cli
lods
pop
add
lret
jae
shrl
cmp
fmuls
mov
jne
jle
in
int3
pop
mov
rorl
xor
cwtl
dec
dec
push
sbb
ds
mov
ret
ficoms
cld
mov
pop
imul
sub
jl
shlb
or
clc
xchg
hlt
addb
mov
shll
pop
sub
fisubs
xchg
jno
add
sbb
les
stos
and
das
out
mov
scas
adc
das
popf
sbb
inc
adc
inc
pop
jnp
lea
pop
adc
dec
xor
lcall
add
ret
hlt
push
xor
pop
push
out
adc
lods
imull
mov
inc
int3
pop
push
and
mov
les
inc
mov
repz
cmc
xor
jl
mov
sbb
icebp
cmc
testl
push
dec
fidivrl
sbb
push
mov
js
mov
add
mov
mov
cmp
arpl
mul
lahf
mov
sbb
int3
adc
xchg
push
scas
leave
cs
pop
data16
add
insl
jb
pushf
cmp
pop
dec
mov
cwtl
and
xchg
xchg
inc
rclb
or
push
iret
rcrb
repnz
mov
inc
in
adc
sub
fstpl
lock
neg
fsts
jmp
roll
test
insb
or
inc
ret
cmpsb
mov
mov
leave
pop
repnz
ret
jp
sahf
insb
add
cmp
je
mov
lahf
cmp
pop
push
push
divl
fdivrl
test
into
pop
sub
xor
andb
jb
mov
xchg
hlt
push
insb
popa
inc
cmpsb
jge
pop
ja
xorl
rorl
and
sbb
xor
shll
cmpsl
test
fstpl
cmp
push
xchg
lahf
add
das
sti
xor
push
adc
or
inc
sbb
jle
pusha
std
jl
out
and
cs
cli
and
clc
lcall
adc
outsb
push
mov
mov
mov
add
and
fwait
cmp
add
fdivp
lret
inc
or
scas
js
pushf
cmp
fmuls
cmp
pop
addl
bound
adc
push
pop
out
movsl
or
inc
push
push
out
mov
movsb
cmp
or
shl
fnstcw
push
xor
test
popf
pop
push
add
push
cs
rorb
lock
sbb
icebp
pusha
lahf
fldl
test
insb
mov
sub
lea
bound
push
jle
stos
jl
out
inc
adc
ret
jns
mov
and
push
inc
cmpsb
sbb
inc
mov
ret
dec
or
imul
rep
ja
xor
and
adc
bound
hlt
shrb
inc
adc
xor
inc
mov
fwait
xor
stos
rorb
xor
ja
xor
inc
pop
and
xchg
cld
mov
dec
cmp
inc
rorl
mov
into
insb
loope
icebp
adc
jle
scas
popf
bound
mov
cmp
mov
pop
lahf
lahf
mov
not
dec
je
ret
out
sub
or
pop
mov
add
pop
cs
adc
mov
xor
int
lds
push
orb
xchg
lret
and
mov
mov
mov
insb
pop
mov
pop
repz
pop
mov
adc
and
pushf
cli
cwtl
push
push
sub
inc
xor
xchg
sbb
lcall
xchg
push
pop
cmp
adc
scas
pop
int
test
cmc
inc
xchg
cmpb
mov
js
ds
mov
dec
mov
dec
cmp
out
xor
cmpsl
or
scas
pop
and
dec
jl
insl
lock
adcl
mov
lret
dec
mov
mov
xor
sbb
dec
dec
mov
outsl
or
nop
call
imul
mov
push
movsb
sbb
add
in
add
and
mov
cld
cmp
lock
aad
fldt
cmp
xor
lock
std
or
cmp
push
out
sbbl
push
in
cli
out
cmp
pop
xchg
repz
iret
jg
mov
dec
shrb
jae
imul
cltd
mov
push
and
xor
bound
cmp
xchg
out
js
rorl
jbe
ja
fwait
sub
rcr
test
dec
lret
jo
pop
mov
test
xchg
mov
and
iret
sub
mov
add
into
movsb
clc
inc
movsl
push
dec
cld
insl
repnz
and
mov
xchg
out
cmp
les
jnp
cmpb
loope
xor
lret
in
gs
lock
xchg
repz
jno
jno
xchg
fimull
mov
mov
bound
push
xchg
xchg
sbbl
xor
scas
sub
sub
cwtl
xor
pop
xchg
aaa
jmp
jecxz
pop
out
je
std
fsub
out
or
dec
in
adc
mov
jle
cmp
icebp
ret
push
and
push
rolb
fwait
push
jg
jge
or
sti
pusha
rorb
insl
popa
mov
cmp
repnz
jb
xorl
shlb
das
or
std
or
out
lods
or
push
mov
cld
pop
fisttpl
enter
add
fwait
jp
inc
sahf
cli
jnp
fisubs
jl
std
lahf
xor
pusha
xor
dec
scas
lods
sub
orb
xchg
hlt
dec
jp
xor
in
aas
aas
push
add
jns
jl
xchg
sbb
mov
ficoms
xor
add
ljmp
hlt
ret
xchg
sbb
and
pop
mov
sub
arpl
jp
cmpsl
jp
data16
xor
add
push
enter
arpl
and
into
mov
cli
pop
pop
fcomip
pop
pop
into
mov
and
sbb
icebp
mov
in
jae
ja
xor
push
sub
mov
cmp
add
fmuls
out
sbb
bound
sti
sbb
aas
lret
or
mov
gs
nop
jle
nop
and
stc
loop
jnp
push
push
ljmp
mov
leave
sub
sarl
xor
js
cmc
xor
push
pop
out
cmp
xor
lret
mov
cmpsl
cs
jge
dec
aam
and
sahf
push
je
xor
xchg
ss
out
xor
mov
popa
arpl
popa
cmp
imul
mov
rorb
pop
inc
mov
mov
jg
sub
xor
mov
push
pop
xor
movsl
xchg
mov
mov
dec
cs
cmp
out
jecxz
fnstsw
push
jecxz
xchg
inc
adcl
fnsave
pop
pop
pushf
aaa
in
into
and
test
ja
loope
jne
jecxz
push
mov
test
pop
sbb
iret
mov
mov
jnp
or
fwait
in
ja
push
imul
mov
mov
mov
xor
dec
dec
lods
sbb
jae
popa
pusha
dec
mov
cld
fisubl
sar
xor
lea
std
dec
xchg
lahf
add
popf
adc
adc
cmpb
sub
daa
xor
mov
imul
adc
pop
mov
in
add
cmp
pop
mov
fstpl
leave
mov
xchg
int3
in
jbe
int
sti
xor
lods
mov
imul
cld
loope
jne
clc
add
fwait
jo
push
pushf
xchg
xor
js
test
sbb
inc
cmp
icebp
fbstp
push
or
or
cs
mov
cwtl
fstpt
bound
sbb
movsb
sbb
mov
out
jg
xlat
movsl
lcall
bnd
mov
dec
push
mov
arpl
daa
push
adc
push
flds
jne
inc
adc
in
cmc
iret
xchg
or
mov
bnd
push
dec
test
stc
out
loopne
jne
aam
cld
dec
test
test
test
or
mov
data16
ljmp
in
mov
into
loop
lcall
imul
outsb
lock
iret
jl
and
push
les
fstpt
inc
out
push
xor
pop
cmp
les
jge
or
rorb
xchg
mov
insb
jbe
adc
cmp
hlt
xchg
jg
adc
cmp
mov
push
xorl
push
cmc
inc
repz
push
pop
iret
dec
add
jae
cmp
int3
repnz
std
fsubs
mov
in
repz
mov
and
movsb
scas
push
jnp
into
fisubl
frndint
lret
inc
fcomip
mov
mov
sub
clc
cmc
mov
sbb
icebp
repnz
xlat
stos
mov
inc
sbb
sahf
sbbb
xchg
cmovo
enter
sahf
push
arpl
cmp
sbb
push
mov
lock
or
jl
adc
stos
arpl
dec
cmp
pop
xchg
or
call
and
adc
outsb
aad
out
push
js
ret
xchg
pop
sbbl
jae
push
ret
clc
jecxz
pop
clc
cltd
into
cltd
mov
inc
mov
jb
dec
aas
lock
sub
ror
sub
sbb
fiaddl
loop
das
insl
cmp
adc
sbb
and
dec
loop
cmpb
mov
cltd
out
xor
movl
jnp
orb
xchg
sahf
cmp
jge
cmpsl
adc
clc
cmp
mov
xor
sahf
inc
insb
cmp
fld
stos
adc
stos
ret
inc
fmuls
imul
pop
jae
out
push
pusha
loop
repz
dec
out
xor
es
das
es
popf
addr16
dec
enter
lea
dec
scas
cmc
sbb
jmp
int
fadds
pop
sti
aam
sub
cmp
fwait
or
cmp
xchg
fwait
xchg
push
sub
aam
jmp
or
inc
popa
xor
insb
imul
dec
sub
push
cmpsl
test
xor
adc
pusha
jp
cmp
test
xchg
inc
push
cs
enter
sarl
push
adc
jns
add
sbb
push
fstp
test
mov
test
fstps
cmpsb
inc
cmp
add
dec
movsl
mov
pop
xor
pop
xor
sbb
inc
lcall
les
or
mov
lret
pushf
add
lock
loop
jns
hlt
icebp
mov
call
dec
cmpsb
push
add
add
inc
repnz
shll
fbld
pop
cltd
inc
push
mov
mov
sub
pop
xlat
dec
icebp
or
rcl
fidivl
or
mov
scas
out
in
clc
or
lds
xchg
pop
iret
dec
sbb
rcrb
pop
movb
fnsaves
dec
mov
jnp
cmp
inc
pushl
cmpsb
pop
cmpsl
cltd
and
aad
es
push
xor
add
shl
pushf
mov
push
sahf
dec
and
addb
idivb
mov
or
sbb
mov
pop
std
push
mov
pop
sbb
pop
adc
push
cmc
aas
popf
xchg
icebp
int
stos
mov
lret
xchg
xchg
fmul
xchg
push
into
mov
xchg
push
subl
pop
pop
lahf
std
and
stos
aad
mov
push
icebp
jg
fstl
int3
mov
push
mov
sub
dec
lea
push
dec
in
inc
roll
xor
fildll
mov
icebp
out
mov
cmp
pop
xchg
push
jnp
enter
movb
lock
pop
push
xchg
inc
pop
fsubs
or
adc
aas
outsl
imul
leave
popa
movsb
adc
and
loopne
lret
jmp
in
sbb
inc
jne
shr
or
mov
xchg
cltd
push
xchg
or
daa
test
adc
mov
fsub
cmpsb
das
xchg
add
mov
xor
cmp
cmp
xchg
pushf
dec
jo
add
add
mov
mov
mov
test
sbb
enter
int
mov
nop
into
push
mov
rorw
inc
lock
aad
add
jne
cld
xchg
aad
das
sbb
jle
rcll
dec
mov
mov
movsb
sbb
xchg
popf
jns
lds
push
loopne
cmp
inc
ss
adc
lret
out
pop
jns
jno
jae
je
mov
int
into
sbb
cmp
movsb
hlt
out
jno
and
mov
mov
jnp
xor
pusha
cmp
jo
and
mov
psrlq
sbb
test
dec
inc
fistps
inc
xchg
mov
cmp
lods
outsl
jnp
mov
lods
mov
rorb
inc
cmp
jo
ffree
shl
jmp
fisubl
jle
pop
jbe
aas
xor
jb
sub
mov
mov
mov
andb
xchg
lcall
inc
div
int
aas
xchg
leave
rorb
aaa
das
rcl
xchg
push
popa
pop
xchg
push
dec
mov
dec
out
clc
or
mov
pop
orl
incl
or
addb
sub
push
out
cld
in
pop
sub
cli
mov
sti
add
in
in
test
arpl
sbb
sub
mov
jb
push
and
lea
mov
test
std
sarl
and
daa
ds
sub
insl
ret
leave
ret
push
xor
xor
push
inc
xchg
xor
scas
test
mov
push
outsl
xchg
dec
fucomip
and
test
mov
jmp
inc
push
cmpl
sbb
das
xor
aas
movsl
notl
cli
bound
xor
pop
xor
xor
and
cmpsb
xchg
test
mov
inc
push
ret
lret
stos
inc
cmp
or
ljmp
loop
push
dec
mov
push
xchg
insb
into
ja
iret
jbe
add
inc
jecxz
mov
jo
jge
imul
sbb
sub
out
enter
inc
push
lret
stos
in
es
sarb
xchg
aaa
mov
dec
pop
cmp
bound
jbe
pop
push
clc
add
adc
inc
aam
test
jns
adc
jle
and
sbb
ljmp
dec
jo
dec
pop
in
leave
mov
cmc
pop
lods
jg
sub
out
out
ret
jmp
sahf
push
jg
insl
push
xor
in
outsb
xchg
sbbb
lds
pushl
sbb
mov
les
das
jg
loope
test
pop
dec
mov
out
pop
out
sbb
loop
jne
xchg
mov
pusha
sbb
lock
and
pop
mov
mov
leave
daa
xor
pusha
inc
push
sub
mov
xor
push
dec
into
pushf
testb
std
int
or
pusha
sahf
sbb
cs
mov
xchg
xchg
out
inc
jno
xor
jo
ja
mov
push
aad
loopne
test
inc
and
test
add
test
movsb
adc
aad
mov
or
leave
and
mov
pop
xchg
xchg
pop
fldcw
jae
popa
sbb
mov
push
int3
xchg
and
xorl
lods
outsl
ss
mov
sub
arpl
out
inc
loop
mov
scas
pop
xor
out
jo
pushf
fstps
mov
xor
in
les
out
stos
jne
ss
lea
sub
cs
orl
push
jo
pushf
dec
dec
cmp
outsb
mov
push
mov
in
inc
cmc
xorl
movsb
ds
popa
push
mov
mov
pop
fsubrs
cmpsl
mov
sbb
test
stos
popa
add
fwait
outsl
pop
popf
push
lcall
popa
mov
jb
jg
outsl
out
loopne
xchg
and
je
rorl
aad
les
ljmp
sbb
push
andl
imul
jo
ret
lahf
outsl
mov
popa
cmp
insb
fcom
mov
or
cmpsl
pop
mov
ds
lds
test
mov
xlat
shrb
movsl
add
roll
mov
adc
movq
jae
xorl
loop
push
gs
shlb
push
popf
sbb
or
js
jae
std
test
rol
fmuls
icebp
push
mov
lret
adc
mov
jmp
call
push
pop
lahf
inc
inc
add
notb
outsl
sub
mov
cli
xor
inc
ljmp
inc
cltd
fildll
iret
fstpl
cmp
lds
xorb
mov
xor
push
jae
loopne
cmp
cltd
cmp
adc
sbb
mov
jmp
cmp
jp
in
or
fdivr
add
mov
mov
and
out
lods
pop
rclb
pop
not
ljmp
pusha
mov
xor
fsubr
rorb
loope
sub
mov
in
je
pop
and
test
fdivrs
jge
ss
out
adcl
xlat
repnz
out
mov
and
push
adc
add
dec
add
xor
lret
repnz
mov
cmc
xor
arpl
std
in
not
xchg
mov
xor
sbb
test
mov
jp
stos
sti
fistl
ret
sub
insl
jnp
cmp
jecxz
mov
sub
aas
add
std
push
outsl
jg
js
jecxz
sbb
jmp
pop
add
xchg
decl
movsl
or
filds
add
pop
fildll
icebp
cmp
pop
inc
xorps
mov
adc
mov
cmpsl
mov
in
mov
outsl
adc
or
loop
fisubrs
inc
inc
adc
rcll
push
cmpsl
pop
ret
cmp
mov
inc
add
jecxz
xorb
arpl
sti
mov
int3
loopne
je
dec
mov
mov
inc
push
outsl
ljmp
test
inc
xchg
or
jae
sbb
arpl
loopne
cmpsl
mov
jne
mov
cli
xlat
xorb
jl
fisttpl
push
es
aaa
daa
mov
subl
das
mov
andl
or
and
adcl
or
xchg
stos
jnp
lret
addr16
or
cli
clc
jbe
out
mov
push
jae
icebp
addr16
fxam
addr16
rcrb
jmp
lcall
call
aaa
pop
shlb
mov
aaa
push
pop
xchg
mov
popl
in
pop
movsl
hlt
push
mov
sub
test
movsl
push
fs
and
or
mov
fs
xor
pop
jnp
icebp
out
pop
mov
fs
sub
test
mov
add
jmp
jns
aam
mov
lret
clc
imul
and
fisttpl
stos
mov
leave
pop
out
sbb
and
push
aas
in
xchg
aaa
fmull
imul
imul
fwait
cmovp
call
cli
add
cmp
out
lea
xlat
jle
jns
fadds
lods
or
cltd
inc
subl
pop
fnsaves
inc
lret
push
jns
loopne
bound
dec
inc
adc
sub
je
rclb
sub
popa
ds
add
f2xm1
push
push
pop
lret
xor
pop
push
inc
test
pushf
push
add
mov
outsb
jb
shrl
out
jmp
or
clc
sub
ljmp
lret
and
movsl
cli
cmc
sar
cld
test
mov
inc
and
adc
inc
fidivl
jno
int
xor
lock
inc
dec
cmc
dec
xor
pop
and
and
sbb
adc
loopne
jns
mov
mov
xchg
jb
ljmp
orb
inc
inc
mov
outsl
push
jp
dec
xchg
cmp
lret
mov
mov
sarl
cld
lret
leave
lahf
test
popf
out
cmp
inc
aas
inc
xor
push
test
inc
pop
cmp
jmp
lea
jmp
cmc
xchg
xchg
decl
aad
inc
mov
lock
hlt
fcomps
out
sti
mov
movsb
adc
push
mov
fwait
jno
sub
adc
inc
je
xchg
xchg
ss
roll
dec
mov
in
xadd
cmp
ds
mov
repnz
push
out
enter
jl
push
roll
jecxz
divl
dec
add
pusha
push
rcl
sbb
sarb
js
cmp
push
movsl
pop
jo
aam
cs
add
mov
mov
dec
call
xchg
mov
mov
cli
add
add
jmp
mull
bound
mov
inc
jne
push
inc
mov
push
add
cmp
push
mov
jno
outsl
stos
std
dec
jle
mov
test
pop
fisubrs
sbb
jnp
adcb
xchg
out
mov
enter
mov
xchg
cwtl
imul
outsl
push
ja
fbstp
enter
dec
dec
movsl
aaa
outsb
dec
dec
push
aad
cld
push
cwtl
pop
push
or
push
repnz
loop
sbb
mov
out
decb
inc
clc
pop
cmc
bswap
into
mov
ljmp
pop
adc
shl
jg
cmp
cmp
pop
pop
xlat
std
pop
jne
cli
test
das
leave
lcall
and
or
dec
fs
push
jp
sti
scas
sarb
mov
lds
test
jmp
das
fiadds
pop
movsb
inc
inc
or
sbb
push
add
push
js
xor
add
xchg
and
into
jle
pop
insl
out
jg
subb
mov
dec
mov
pop
add
clc
mov
out
jno
cmp
xor
scas
stos
mov
scas
xchg
push
and
flds
inc
xchg
add
outsl
jle
sbb
xchg
push
mov
mov
push
mov
ret
pushf
jne
out
jb
fstpl
roll
mov
pop
arpl
pop
movsb
outsb
push
jp
popf
cld
pop
mov
pusha
push
xchg
and
daa
inc
adc
xor
sub
repnz
cmp
push
out
and
jge
testl
cmpsb
or
and
cmp
mov
or
cwtl
push
adc
pop
push
inc
iret
repz
add
es
movl
cmp
rcl
cli
mov
add
pop
jle
cwtl
hlt
hlt
mov
rcll
jnp
popa
inc
outsl
nop
outsl
std
pop
dec
ss
rorb
cmpsb
movsb
cmp
adc
lahf
clc
sbb
outsb
clc
or
lds
clc
and
sarb
sub
pop
xchg
sbb
jp
stc
add
js
or
inc
faddl
cmp
pop
and
mov
adc
push
dec
int3
mov
xchg
in
dec
rolw
mov
leave
add
js
aas
scas
popa
or
xlat
loope
into
push
dec
adc
test
dec
mov
xchg
leave
or
mov
popa
fsubrs
mov
mov
lea
rcr
and
aam
fxch
nop
ret
sub
sub
adcb
test
jne
sar
and
shr
aam
lea
sub
in
push
fistpll
lret
shrb
sahf
mov
push
nop
sub
ja
inc
add
push
std
xchg
dec
pop
orb
shll
xor
sub
loope
push
shll
ds
adc
outsl
arpl
xchg
stos
mov
iret
mov
arpl
sbb
ret
push
sub
push
or
jns
aad
test
in
jns
xor
lods
aad
incb
pop
into
jo
fnstcw
fsincos
gs
mov
sbb
std
pop
mov
dec
lahf
and
je
inc
lret
and
out
in
inc
xchg
imul
cmp
and
rcr
icebp
push
xchg
fwait
loopne
mov
cli
loop
sub
loopne
in
imul
stos
sbb
mov
pop
pop
mov
xchg
xchg
pop
xor
dec
fisttpll
xchg
mulb
mov
cmp
idivb
dec
sbb
xchg
out
mov
mov
std
xchg
inc
push
push
pop
negb
mov
mov
test
lahf
cmp
xchg
push
jle
dec
subb
mov
jno
sbb
int3
or
cmp
aaa
push
jg
movl
mov
cmp
lahf
mov
xchg
pop
jge
cmp
test
fidivs
movsb
mov
mov
mov
adc
sub
inc
push
push
ret
lret
mov
imul
mov
pusha
inc
sub
test
add
mov
or
mov
adc
jl
cltd
pop
mov
inc
pushf
js
xlat
cmp
enter
adc
jne
mov
leave
test
mov
adc
sub
jecxz
das
mov
dec
jge
cmp
pop
mov
cmp
and
dec
inc
xor
pop
loopne
lock
jne
mov
pop
xchg
rorl
sub
aaa
pop
test
inc
xchg
inc
jmp
xchg
mov
add
sub
and
mov
adc
add
imul
divl
xchg
out
shll
or
pop
xchg
repz
ficompl
js
add
or
sbb
fbstp
fwait
add
lret
and
andl
test
loope
xchg
aam
inc
leave
movsb
pop
mov
xor
jmp
cmpsl
ret
sub
push
add
xchg
divb
mov
and
sarl
fcomip
mov
js
add
lret
aam
pop
cld
jmp
push
push
pop
pop
in
jnp
xlat
xchg
xor
insb
filds
mov
mov
cmc
cmp
adc
es
iret
pop
cmp
idivl
xor
rcrl
xor
pop
loope
int3
mov
mov
std
xchg
sbb
adc
dec
jae
adc
das
mov
or
je
cwtl
orl
jg
adc
mov
ljmp
or
push
in
mov
nop
mov
push
jne
lret
fsubs
add
pusha
dec
insb
shr
mov
push
popa
loope
mov
test
scas
and
cmp
mov
inc
pop
sbb
add
in
or
add
jno
mov
movsb
inc
lret
xor
xchg
fidivrl
push
lds
lock
fisubrl
outsb
jae
inc
jno
les
fiadds
cld
ret
inc
jbe,pn
jb
ret
mov
stos
mov
jl
mov
lds
mov
data16
jne
addb
movsb
jl
xlat
imul
sbb
jecxz
xor
ficoml
rolb
pop
aam
mov
dec
insb
dec
cld
pushf
test
mov
mov
sub
arpl
std
lahf
dec
xor
xchg
imul
fwait
xchg
jle
out
insl
lret
mov
cmp
xchg
sbb
shl
or
ljmpw
popf
sahf
mov
push
push
xchg
btc
faddl
icebp
les
dec
idivb
nop
dec
scas
dec
mov
call
and
pop
add
inc
loop
push
dec
mov
cmp
mov
scas
push
in
scas
xend
adc
in
dec
cmp
jns
fwait
cmpsl
cmp
sub
imul
sbb
aaa
lret
push
jbe
adc
sub
xor
repnz
stos
adc
pop
sub
outsl
pusha
jmp
hlt
xchg
clc
leave
push
in
je
repz
jne
leave
jbe
aaa
fldcw
sbb
xor
cltd
mov
arpl
pop
test
bound
or
sbb
pop
imul
jge
repnz
add
add
xchg
fisubs
or
iret
add
cld
dec
lcall
in
push
int3
sarl
add
mov
xchg
pop
xor
xchg
fistpl
cmp
sub
lods
or
shr
pop
fbld
adcb
cwtl
cmp
and
scas
mov
and
imul
lea
filds
shr
mov
mov
jp
dec
in
adc
push
add
mov
mov
nop
sub
mov
inc
js
add
dec
mov
ss
les
arpl
push
adc
lods
test
adc
sbbb
sub
push
scas
mov
cmp
xor
inc
xchg
popa
rcl
inc
fldt
fwait
sarl
jno
pop
sub
cmp
mov
push
pop
test
movsb
sbb
call
nop
ss
push
jb
mov
fwait
inc
adcl
xor
repnz
xchg
fucomi
iret
jmp
mov
js
rcrl
mov
xlat
dec
sub
out
jge
inc
popf
mov
pushf
call
xor
xchg
add
addr16
push
add
inc
ljmp
mov
lea
into
rorb
cwtl
cmp
cmp
test
add
jecxz
add
jp
les
outsl
push
sbb
cmpsl
mov
dec
push
cmc
popf
xlat
cwtl
pop
dec
adc
lahf
dec
pop
int3
sahf
aad
push
orb
repnz
gs
dec
inc
sbb
lahf
and
popa
lahf
pop
xor
cltd
add
pop
xchg
sbb
pop
rcrl
bound
and
mov
int
je
cmpsb
xchg
sbb
fstpt
test
sbb
sbb
dec
insb
in
pop
push
xor
jb
mov
cwtl
push
mov
sbb
mov
popa
scas
push
rol
mov
les
mov
out
jg
xor
adc
mov
lock
jne
add
lret
imul
arpl
cli
aaa
aaa
fcmovnbe
jae
mov
jnp
xor
faddp
enter
push
add
add
push
pop
out
sub
daa
mov
adc
cmp
js
movsb
dec
push
stos
mov
mov
push
jae
dec
pop
cs
popf
sub
test
loopne
mov
push
into
adc
adc
repnz
jl
roll
aaa
xor
or
add
xchg
fdivrl
add
push
dec
cmpsb
test
lds
xor
int
or
mov
dec
pop
loop
push
popa
jnp
mov
test
xchg
rcrb
add
outsb
movsl
leave
scas
or
lcall
bound
mov
push
rol
xchg
negb
mov
sbb
aad
ret
ljmp
xchg
sub
icebp
mov
dec
or
cmpsl
dec
fisttpl
push
in
push
and
outsb
test
pop
add
dec
jmp
jle
scas
dec
out
daa
ds
or
fadd
xor
jmp
inc
stc
cwtl
test
js
mov
jns
repz
mov
outsl
imul
cmpsb
fimuls
or
stos
xchg
fsubrl
inc
or
int3
push
das
fcmovb
stos
aaa
push
scas
dec
push
fs
xchg
aad
addl
pushf
lods
pop
test
lahf
cmpsl
out
xor
test
jmp
shll
mov
fldl
mov
xchg
mov
loope
cmpsl
test
fisttpll
stc
xchg
sub
jno
rolb
push
call
enter
jmp
mov
arpl
sbb
jno
lds
push
pop
inc
sub
mov
cltd
push
xor
aad
xchg
mov
adcb
jnp
pop
hlt
xchg
mov
test
push
pop
sub
push
fdivrs
dec
sbb
sti
xor
push
xchg
fsts
xlat
jb
insl
xchg
inc
mov
lods
inc
jge
leave
pop
pushf
cmp
fwait
lahf
jno
adcl
into
sub
inc
test
push
arpl
dec
mov
outsl
fcmove
push
mov
loop
mov
dec
jne
jl
jecxz
sar
test
or
cmp
outsl
rcrb
sbb
out
lahf
call
fbld
out
jl
sub
or
repz
push
bound
bsr
inc
adc
faddp
xchg
push
loope
mov
pop
fidivs
je
and
fmull
pop
and
into
xchg
jmp
out
in
dec
push
nop
sti
fwait
test
push
add
cltd
cmpsb
push
addl
roll
sbbb
mov
test
xor
mov
rcll
pop
push
push
test
dec
add
addr16
xchg
fiadds
clc
xchg
push
xor
test
inc
mov
in
xchg
add
stos
push
xlat
cwtl
sbb
pop
adc
cmp
push
rcrl
mov
fnstsw
inc
mov
iret
mov
xchg
cmp
lods
or
lods
or
iret
mov
jl
jl
shll
mov
movsb
and
inc
inc
mov
lock
and
je
pop
push
inc
or
sbb
cwtl
hlt
push
xor
fs
dec
in
and
mov
mov
mov
cmp
jnp
mov
or
jo
cmp
es
rclb
pop
in
push
mov
inc
and
xor
rcll
sub
mov
jp
cmpsl
js
std
cmpb
cmp
psrld
add
pop
int
repnz
inc
xchg
push
movsb
imul
xchg
mov
mov
cmp
sub
adc
les
add
or
sbb
fcomps
mov
enterw
pop
je
fidivs
add
xchg
jmp
dec
inc
dec
cmp
in
aas
dec
int3
cmp
pusha
stos
mov
sub
das
lods
repz
inc
inc
push
imul
cmp
push
faddl
mov
arpl
aam
hlt
mov
sbb
das
cli
in
xor
imul
pop
arpl
repnz
test
std
inc
cmpsl
setge
jg
fwait
jb
insl
fsubrl
pushf
mov
jb
or
push
loop
lods
jl
jo
ja
dec
add
hlt
inc
lret
int3
shlb
nop
sbb
xor
sbb
sub
leave
repz
bound
push
scas
mov
dec
out
pop
sub
aaa
lea
jg
and
add
jmp
sub
in
pop
or
sbb
cmc
sbb
adc
outsl
mov
sub
gs
fnstenv
leave
test
out
push
adcb
imul
cmp
inc
mov
adc
std
adc
ret
lods
mov
movsb
pop
je
addl
pop
xchg
mov
push
outsl
lahf
mov
rcr
inc
orl
pop
push
jbe
testb
test
jbe
pop
ljmp
dec
adc
pop
xor
push
cmpsl
in
imul
mov
int3
add
sbb
jmp
cmp
jg
cmc
cmp
mov
mov
rcl
mov
add
mov
or
gs
lds
addl
inc
int
pop
test
dec
ret
nop
dec
in
push
pop
and
jo
outsb
xor
hlt
fwait
hlt
and
dec
int
and
in
aas
imul
pop
mov
imul
insl
cmpsb
and
incl
cmp
inc
insb
and
divb
popa
je
inc
inc
xchg
pop
fisttps
test
rol
push
dec
mov
xor
jb
mov
xchg
out
sarb
mov
or
mov
int3
xchg
popf
ja
test
out
shl
je
mov
rcrl
jno
dec
xor
and
inc
stos
rolb
push
imul
pop
ljmp
mov
push
lcall
lret
mov
mov
dec
lock
fldl
cmp
daa
push
cmp
pop
xor
mov
xor
push
sub
sar
xor
xchg
inc
jb
sti
cmc
cmc
aas
fcom
fldenv
mov
int
cmp
fsubl
daa
mov
mov
ljmp
outsb
mov
js
inc
sahf
mov
and
mov
dec
or
sbbb
dec
xchg
fwait
imul
lret
lods
jp
push
shlb
adc
fisubl
es
mov
jle
mov
das
arpl
aaa
andb
or
pop
aas
jo
stos
test
in
ss
iret
or
out
int
daa
jmp
ret
int
push
inc
outsb
aas
clc
xchg
cmp
xor
cmc
outsb
in
movsb
movsl
pop
repnz
data16
xchg
loopne
xor
cltd
push
out
loope
xor
dec
mov
xor
mov
jbe
cmpsb
and
inc
mov
xor
dec
ret
pop
cmp
test
aas
xchg
adcb
inc
mov
cmp
jmp
inc
inc
push
sub
pushf
xchg
stos
iret
push
dec
roll
dec
pushl
xchg
outsl
rcr
je
lods
mov
or
cwtl
imul
lret
adc
daa
dec
fiaddl
das
lret
ret
mov
aad
mov
dec
lods
mov
jmp
dec
cmp
push
mov
pop
aad
fisttps
mov
test
rcll
lret
mov
cmp
ja
ljmp
mov
and
xor
adc
dec
cmc
push
xchg
shl
repnz
rcr
push
pushf
call
jg
js
sbb
mov
adc
addb
fmul
mov
or
insb
or
mov
subb
push
jno
xor
repz
in
sbb
mov
and
sbb
or
fs
inc
sbb
orl
insl
xchg
aam
fisubl
dec
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
mov
movsb
mov
jmp
and
sub
jae
clc
repz
imul
cmp
dec
sub
sbb
es
push
cld
jne
push
decl
movsb
fcomp
push
ja
in
int
jne
pusha
movswl
pand
nop
or
repz
inc
sbb
imul
jnp
fiadds
addr16
vmwrite
cs
push
jecxz
xor
mov
aas
xor
outsl
xchg
jp
loope
aad
adc
dec
or
aaa
sub
lods
mov
mov
lds
pop
xor
rclb
fcoms
jmp
and
sub
jle
jo
mov
push
mov
std
mov
mov
int3
fildl
adc
jg
fsubrl
mulb
push
and
idivl
xchg
dec
outsl
popl
outsb
push
std
pusha
pusha
inc
cmc
jns
repnz
lret
or
mov
fiaddl
hlt
shl
stc
mov
jbe
mov
inc
sti
nop
addb
xchg
and
adc
or
push
pop
cmpsb
inc
aaa
mov
pop
out
mov
cmpsb
inc
inc
stos
jle
sbb
pop
aas
pop
sub
subl
jo
jmp
push
int
jmp
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
shll
add
and
