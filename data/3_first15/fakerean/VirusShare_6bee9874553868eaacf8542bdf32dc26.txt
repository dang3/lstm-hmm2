jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
dec
and
add
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
mov
inc
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
mov
inc
add
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
sbb
clc
mov
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
and
addb
pop
inc
add
add
or
lea
mov
add
mov
add
es
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
stos
sbb
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
arpl
inc
add
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
jbe
inc
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
popa
incl
ret
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
sub
mov
cmp
je
jmp
push
mov
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
xor
inc
add
cmp
je
mov
scas
sbb
pusha
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
ljmp
inc
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
jne
inc
add
lea
mov
jns
inc
add
stc
inc
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
pop
sub
add
add
push
push
call
test
js
lea
lea
pop
lock
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
fdivr
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
pop
inc
add
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
push
push
call
mov
push
in
jp
add
clc
nop
add
add
add
add
lea
nop
add
add
test
pop
add
popa
add
sti
add
mov
cmpsb
sar
vpmullw
hlt
add
incb
add
add
fucom
mov
mov
add
mov
add
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
movsb
add
mov
add
add
add
add
mov
add
mov
popl
add
pop
popl
push
push
lea
push
call
mov
add
add
out
xlat
fs
out
mov
jmp
shll
add
bound
add
shrl
push
shrl
mov
in
add
cmpsb
out
popf
add
in
hlt
pop
push
push
push
push
call
addl
pop
imul
shl
push
add
aam
popf
lret
pop
add
add
imul
les
add
xchg
add
add
add
add
cmpsb
push
in
roll
pop
add
in
add
xchg
add
test
mov
add
stc
add
push
imul
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
fldcw
incb
jb
test
lea
mov
add
negb
call
fldl
movb
add
mov
mov
mov
add
addb
mov
pushf
mov
fdivr
lcall
push
lea
push
lea
push
lea
push
push
call
pop
fxch
scas
testb
add
add
add
shlb
add
push
stos
or
mov
scas
pushf
add
add
add
xchg
lods
push
les
add
xchg
add
pop
push
test
push
out
imul
cld
add
in
in
pop
call
push
push
push
push
lea
push
lea
push
call
movsl
pop
add
add
icebp
add
add
add
jne
mov
cmc
mov
add
divb
test
add
cli
add
imul
add
lods
mov
add
clc
add
xlat
sub
pop
call
push
push
push
push
push
call
add
stc
push
fsts
xchg
xchg
add
add
add
add
mov
add
jb
add
xlat
jae
push
jns
rolb
mov
add
loopne
loop
push
add
pushf
stos
add
add
sub
call
add
add
pushf
mov
pop
push
push
lea
push
push
call
add
add
faddl
shll
add
mov
sahf
pop
cmpsb
imul
int
insb
test
add
lret
bnd
push
push
add
test
lds
push
add
jne
jb
add
xlat
leave
add
mov
add
xchg
jge
jle
add
mov
lcall
pusha
add
push
push
push
push
push
push
push
push
push
call
add
add
add
push
add
int
test
add
out
bound
add
add
add
ja
add
add
data16
sti
stos
test
jge
hlt
xchg
add
xlat
add
push
cmc
loopne
loop
add
icebp
add
add
pop
scas
in
xchg
add
int
addb
fsubrl
fcompl
pop
add
add
push
push
lea
push
push
push
push
push
call
aam
mov
loop
pusha
mov
imul
add
add
pop
add
add
add
add
add
out
shll
insb
clc
add
add
outsl
pop
lea
mov
add
inc
hlt
push
push
push
push
lea
push
push
push
call
in
call
add
lods
pop
mov
add
add
add
add
incb
add
mov
rorb
push
shll
loopne
fldl
rcll
add
add
pop
add
lcall
pop
hlt
add
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
add
stos
mov
add
addl
jne
add
pop
fldl
add
mov
jl
add
pop
cmc
add
add
mov
add
addl
mov
add
add
mov
fiadds
pop
add
add
push
push
push
push
push
push
call
int3
add
scas
mov
cmpl
add
icebp
add
add
mov
cld
add
pop
add
xchg
add
add
cmc
add
add
sarl
pop
cmc
sub
pop
add
push
push
push
lea
push
push
push
call
add
add
mov
xchg
test
add
add
add
pop
push
push
add
out
lods
add
pop
test
pop
add
add
je
xchg
mov
mov
lcall
pop
add
repz
push
push
push
lea
rol
push
xor
add
dec
add
rol
sub
add
not
rol
pop
add
add
pop
push
lea
push
push
push
call
pop
add
add
loop
ret
call
add
test
aad
xchg
pop
shr
add
add
add
add
jecxz
test
movl
mov
push
sahf
add
add
add
push
sub
pop
pushl
call
push
push
lea
push
push
call
xchg
aad
std
mov
sahf
mov
jo
add
add
jb
add
addb
cmpsb
aad
loopne
movsb
bnd
add
lcall
inc
lock
push
push
push
push
call
int
jns
out
lods
xchg
cltd
add
mov
fstps
out
int
add
push
pusha
mov
add
add
sub
pop
lea
push
push
push
push
push
push
call
add
int
add
add
out
testb
add
pop
add
in
mov
jb
clc
add
jp
bound
mull
jo
xorl
rolb
in
fiadds
add
js
mov
add
add
lcall
sub
pop
push
push
push
push
push
call
in
push
pusha
add
add
pop
idivl
push
add
lret
cwtl
mov
jne
add
test
add
mov
add
add
push
xlat
fiadds
ljmp
std
push
hlt
arpl
fiadds
add
mov
rcl
rolb
add
js
jl
mov
lock
lcall
jne
push
lea
push
push
push
push
push
call
add
imul
add
cwtl
add
xor
add
arpl
rorb
add
lcall
cmc
pop
ja
push
mov
add
mov
popa
mov
jne
call
push
push
push
push
call
add
jno
fildll
jmp
mov
add
xchg
loop
push
in
add
add
mov
push
add
add
roll
pop
fnstenv
mov
xchg
add
imul
imul
mov
cli
int
ljmp
lock
lcall
jne
pushl
push
lea
push
push
lea
push
call
pop
movsb
in
cld
add
mov
stos
mov
leave
loop
imul
int
add
call
add
push
add
out
ja
test
push
add
jne
pop
add
sub
pop
call
push
push
shr
shl
push
push
pop
add
sub
sub
sub
sub
pop
rol
lea
pop
push
push
push
call
add
mov
lods
mov
add
stos
add
lds
add
shr
push
mov
leave
lret
mov
pop
xchg
add
add
jge
mov
add
stc
add
in
hlt
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
movsb
in
xchg
out
add
pop
add
jle
ficompl
add
imul
jmp
lcall
fucomip
add
xchg
lods
sub
pop
call
push
push
push
shr
lea
push
or
not
add
shr
rol
lea
sub
xor
shl
lea
pop
shl
dec
ror
pop
push
lea
push
push
push
push
push
lea
push
call
add
insb
add
in
enter
pop
fs
mov
testl
add
cmpl
add
add
xchg
pop
les
push
mov
add
pop
scas
add
pop
lahf
add
sub
pop
push
push
push
push
push
push
push
call
jge
pusha
add
out
scas
hlt
fiadds
xlat
add
add
pop
fcompp
cmpsl
add
add
add
popf
in
push
add
add
loop
lods
addr16
mov
add
mov
out
pop
jecxz
sub
pop
push
push
push
push
lea
push
lea
push
push
push
call
cltd
add
insb
add
add
popl
nop
pop
fxch
jmp
lods
push
cld
mov
add
add
ljmp
popa
testb
add
add
loopne
cli
add
out
mov
mov
jl
pusha
pop
jnp
mov
lods
xchg
add
add
mov
lcall
in
lcall
rorb
or
dec
cmp
rcrl
adc
or
push
call
testb
push
loope
xchg
add
popa
test
in
mov
pop
pop
mov
out
pop
std
add
add
jae
movsl
divl
add
add
add
pop
push
push
push
push
lea
push
push
lea
push
push
call
loope
add
add
mov
pop
les
out
add
jmp
add
fiaddl
pop
aam
lods
fisttps
xchg
add
add
add
lcall
push
push
push
push
lea
push
push
push
push
call
in
mov
je
mov
in
nop
add
push
popl
jno
jbe
add
scas
add
in
out
mov
pop
enter
add
cli
add
add
pop
add
fst
add
lock
add
mov
test
push
lock
testl
in
loopne
lcall
pop
hlt
add
push
push
push
push
lea
push
push
call
test
add
leave
xchg
movsb
push
fildl
add
sahf
push
shll
add
add
mov
mul
add
mov
push
xchg
add
add
lcall
ret
add
add
add
push
push
call
add
add
movsb
add
ljmp
add
les
mov
add
sahf
repnz
add
push
mov
mov
mov
pop
testb
lcall
xor
pop
jae
push
push
push
call
stos
add
filds
push
push
add
pop
sti
mov
add
cmc
push
add
xchg
add
add
add
aad
add
add
add
add
call
pop
xor
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
out
mov
ret
add
jp
imul
insb
push
xchg
mov
pop
pop
cli
in
sti
cmpl
push
scas
arpl
add
icebp
jns
jmp
sti
movb
mov
add
add
mov
mov
add
test
add
scas
mov
enter
push
add
mov
lcall
les
add
push
push
call
cmc
movb
mov
add
sti
mov
add
push
add
mov
jle
rolb
lea
add
lock
stos
stos
mov
pop
pop
add
add
hlt
addl
push
add
gs
cwtl
add
add
popa
add
test
add
enter
in
clc
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
mov
aam
add
add
jecxz
add
leave
neg
jmp
mov
xchg
jmp
out
data16
out
add
rolb
roll
in
movl
pop
add
mov
cli
fwait
add
add
imul
stos
lret
push
mov
in
fdivr
lcall
mov
xor
push
push
push
call
add
stc
mov
xchg
mov
add
test
add
add
add
mov
lods
xchg
fwait
push
add
cmpsb
cmpsb
pop
xacquire
jmp
push
add
push
mov
add
lock
push
push
call
lcall
movsl
movsl
add
bound
int
stos
fwait
pop
add
clc
nop
cmpsl
add
xchg
add
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
call
add
jecxz
negl
add
add
ret
movb
add
pop
mov
xchg
std
xchg
cmc
push
fildl
add
add
cmp
jno
add
add
dec
add
test
push
push
push
push
push
lea
push
push
push
call
cmc
jl
mov
add
mov
scas
addb
shrl
sahf
add
arpl
add
add
mov
cltd
jns
pop
xchg
addb
jno
lds
add
scas
add
xchg
or
push
lds
push
addr16
in
mov
fisubl
in
in
xor
push
push
push
call
push
idivb
popf
add
add
ljmp
jnp
add
mov
lahf
add
pop
jb
aam
jmp
cmc
mov
aam
aam
out
jb
add
sub
pop
add
push
push
push
push
lea
push
lea
push
push
call
sti
aad
jae
mov
jnp
addl
test
add
in
jns
fldz
add
pop
popa
incb
push
bound
add
cmpsb
add
fldcw
mov
loopne
add
stos
add
add
add
add
add
in
in
in
push
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
out
xchg
jno
add
jnp
jmp
mov
loop
mov
add
add
add
push
iret
into
add
jns
filds
lcall
inc
or
pop
jae
push
push
lea
push
lea
push
push
push
push
push
call
push
ljmp
pop
filds
pop
fdivr
jp
mov
jno
jecxz
add
jle
add
cmc
add
popf
lcall
sub
pop
xor
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
pushf
div
fidivs
add
mov
add
mov
add
in
add
pusha
mov
fildl
mov
addl
lods
add
jmp
std
call
addb
addl
pop
add
push
push
push
call
movsb
std
jno
xchg
mov
fsubrl
mov
ret
scas
add
jns
add
mov
outsl
add
add
add
hlt
pop
sub
push
push
push
push
push
call
stos
add
xchg
aad
mov
push
add
jmp
repnz
out
call
add
cld
add
xchg
add
pop
add
in
push
in
in
pop
pop
push
push
push
call
mov
mov
jb
cmpsl
mov
add
or
ret
push
pop
pop
jecxz
cltd
add
add
push
arpl
lcall
movsb
pop
push
lea
push
call
add
mov
jo
sahf
fdiv
fildl
add
movsl
add
add
jle
popa
add
add
add
add
mov
add
sub
pop
mov
push
lea
push
push
lea
push
push
call
mov
add
in
add
cld
stos
rcll
add
mov
add
add
js
roll
add
testl
xchg
add
sub
pop
add
add
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
std
scas
push
outsl
fildl
cmpsl
mov
shl
add
add
jle
lret
test
add
push
add
imul
popa
add
mov
pop
movsb
vcvtpd2psy
add
add
scas
mov
mov
add
lods
add
jns
add
lcall
ret
adc
push
push
push
push
push
lea
push
push
lea
push
push
push
call
jnp
imul
add
mov
pop
fcmovnbe
add
sahf
add
test
add
jbe
jle
data16
jl
add
repnz
jmp
addr16
pop
jns
arpl
add
jle
add
mov
add
out
add
stos
add
lcall
inc
and
pop
jae
push
push
call
add
mov
scas
add
add
bound
mov
add
neg
testb
jmp
loope
add
mov
les
std
add
add
rcl
arpl
mov
popf
lcall
xchg
mov
add
jle
sub
pop
xor
push
push
push
call
lods
mov
add
scas
mov
mov
add
jp
add
add
mov
mov
out
add
out
add
fldl
les
add
push
add
inc
add
shl
pop
mov
push
push
push
call
ljmp
scas
andl
rolb
push
pushf
gs
popf
add
loopne
sti
faddl
add
add
add
pop
xor
push
push
lea
push
call
mov
add
lock
les
pop
jb
mov
add
data16
push
mov
jle
mov
add
mov
jge
add
xchg
add
js
sub
pop
add
push
pop
mov
push
push
push
lea
push
push
push
push
push
call
add
outsl
add
add
repnz
in
add
xchg
jl
js
loop
add
std
rolb
fcoms
jno
stos
cwtl
jp
add
fucomp
push
cmpsl
add
fidivrs
add
enter
lds
ljmp
add
cld
mov
clc
mov
leave
push
in
in
lcall
or
push
lea
push
push
push
push
push
call
mov
jmp
add
cmpsl
add
mov
add
add
add
add
push
sub
pop
add
push
inc
sub
add
pop
add
push
sub
xor
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
pop
add
add
jnp
jb
xchg
rolb
std
push
imul
imul
fadds
add
add
rorb
add
insb
add
jmp
addb
pop
pop
cltd
test
add
sub
pop
mov
push
push
dec
rol
xor
push
xor
add
shl
sub
sub
not
dec
not
add
pop
ror
pop
push
add
add
pop
pushl
call
push
rol
lea
pop
push
push
push
push
sub
add
lea
sub
sub
dec
pop
shr
pop
push
push
push
push
call
add
hlt
ror
jne
jl
add
add
jns
pop
add
js
add
mov
test
roll
pop
jns
out
flds
jae
pushf
add
in
add
add
movsb
jnp
shrb
in
lock
push
push
push
xor
shr
pop
call
mov
push
add
pop
push
push
push
sub
pop
mov
add
push
lea
push
push
push
lea
push
push
push
push
push
call
out
xlat
aam
add
add
mov
sti
add
fwait
add
add
add
je
jl
add
add
pushf
test
lret
std
ret
pusha
push
imul
jnp
pusha
add
mov
mov
popa
xchg
cli
in
add
sub
pop
add
push
shr
lea
pop
add
mov
push
push
lea
push
push
push
lea
push
lea
push
call
mov
xchg
cltd
jl
testl
shl
jnp
add
add
mov
movb
jne
add
iret
fcompl
mov
nop
pushf
adcl
add
add
lret
add
test
add
mov
push
add
add
mov
fwait
into
stc
push
add
pop
xor
push
push
push
push
push
push
lea
push
push
call
shlb
xchg
add
fs
aad
fs
add
les
add
add
add
add
mov
lea
add
loope
test
cwtl
insb
movsb
mov
addb
test
roll
mov
test
scas
fsubr
mov
add
int
mov
shl
add
add
add
jp
out
jbe
in
loopne
lcall
les
push
push
push
lea
push
push
push
call
add
fadds
mov
pushf
out
lret
add
xchg
add
add
add
add
pop
imul
add
push
ret
repnz
in
jb
mov
cli
icebp
mov
sahf
jo
mov
addr16
ja
xchg
add
popf
addl
sub
pop
add
push
push
push
lea
push
lea
push
push
call
add
data16
sub
mov
add
movl
pop
imul
in
in
pop
mov
push
push
push
push
call
add
ljmp
add
push
push
add
rcrl
add
add
add
add
pop
add
add
in
hlt
lcall
add
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
in
loopne
rclb
add
mov
xchg
mov
loopne
add
addb
add
add
add
testl
test
pop
lea
add
add
add
jae
or
add
fdivs
add
add
add
loopne
add
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
fidivrl
mov
stc
xchg
xchg
add
add
mov
add
pop
in
sub
pop
add
push
push
push
call
add
fadds
jge
add
lcall
cmpsl
out
xlat
imul
cmpsl
subb
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
pop
movl
mov
add
add
mov
sahf
outsl
jmp
test
fdivrs
insb
loope
add
subb
add
lea
fldl
add
mov
add
in
add
lcall
out
jp
add
ffree
popa
cwtl
mov
lods
add
add
jne
lret
mov
in
loopne
mov
push
push
push
push
push
push
push
push
lea
push
push
call
icebp
add
pop
add
pop
flds
fldl
popf
mov
lock
add
popf
insb
test
add
add
sahf
add
mov
mov
lcall
or
push
push
push
push
push
push
push
push
call
mov
data16
clc
cli
add
movsl
jecxz
mov
add
add
add
fmuls
xchg
lret
arpl
out
out
add
add
jmp
stc
cmpsl
add
add
jae
push
add
test
add
les
mov
cmpb
cmc
insb
add
pop
push
add
lcall
sub
pop
add
push
dec
pop
rep
mov
xor
push
xor
rol
sub
sub
pop
or
je
push
push
call
mov
add
into
mov
pushf
add
cmpsl
filds
jnp
add
add
jno
add
add
in
jne
add
pop
cltd
lods
jb
mov
lcall
xor
pop
jae
push
push
push
push
push
push
push
lea
push
call
pop
cmc
add
add
aad
lret
sti
add
test
jo
clc
rclb
xchg
mov
lods
test
add
add
mov
in
loopne
lcall
xor
push
push
push
push
push
push
lea
push
push
push
call
add
add
xchg
out
add
imul
add
jo
add
jp
push
pusha
add
add
fwait
add
stc
into
loop
int3
lcall
add
sub
pop
add
push
push
push
push
push
push
push
push
call
add
scas
arpl
add
sti
mov
mov
add
add
mov
pop
out
mov
push
test
lea
xorl
and
gs
xchg
push
add
jnp
add
mov
add
add
pop
les
jp
mov
xchg
call
jecxz
sahf
shll
sub
pop
mov
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
leave
stc
int
add
andb
add
nop
xchg
add
add
add
sahf
test
jl
add
insb
roll
mov
add
mov
add
pop
into
loopne
mov
in
fcomps
adc
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
stos
jmp
add
mov
mov
scas
push
mov
cld
add
add
shlb
mov
lock
add
iret
mov
add
cmc
add
outsl
sub
pop
add
push
rol
not
pop
add
push
add
pop
add
push
add
pop
push
mov
xor
push
ror
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
jp
rolb
add
out
mull
add
xchg
add
mov
add
testw
mov
cmp
add
add
add
bound
in
fdivr
lcall
push
push
push
push
lea
push
call
lea
enter
add
jge
mov
add
add
xchg
jge
pop
xorl
xchg
add
bound
push
pop
add
add
add
add
add
stos
fldl
nop
pop
lods
pop
jne
add
add
lcall
movsb
push
push
call
in
add
out
loop
xchg
js
aad
ret
jecxz
mov
aam
jmp
popl
gs
cwtl
jmp
pop
test
jbe
add
add
add
push
fiadds
add
int3
jecxz
xchg
jbe
add
add
out
xchg
cltd
jno
add
xchg
popa
add
clc
lcall
dec
sub
push
push
inc
add
xor
pop
or
je
push
push
push
call
pop
xchg
mov
insb
idiv
std
clc
add
stos
adcl
push
loope
into
mov
add
fistpll
add
cld
sti
add
add
ret
add
clc
push
clc
mov
test
sub
pop
mov
push
lea
push
push
push
push
push
call
into
mov
insb
mov
add
jb
enter
add
pop
add
mov
add
mov
add
jmp
js
pusha
not
testl
insb
mov
add
icebp
loop
addr16
fidivrs
mov
imul
lcall
sub
movb
add
push
push
push
push
push
call
lock
add
mov
cld
add
add
lds
add
in
mov
icebp
add
lods
mov
out
pop
add
add
lods
mov
add
mov
add
ljmp
movsb
fcmovnu
add
add
fildll
add
lcall
movsb
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
lock
add
add
cmc
in
scas
add
xchg
mov
add
jo
shll
int
add
add
pop
call
test
add
in
fcomps
push
push
dec
shl
shl
push
sub
add
sub
add
ror
sub
sub
shr
shr
pop
sub
add
pop
push
push
push
call
repnz
mov
jp
add
add
mov
aam
test
in
popa
add
incb
mov
push
sahf
jge
fcmovnu
pop
add
lock
lret
fidivrl
loope
add
add
fiaddl
sub
pop
pop
push
pop
mov
push
push
push
call
add
add
std
add
jns
add
js
add
clc
shll
icebp
add
xchg
cmpsb
shlb
add
add
add
push
outsl
jmp
push
mov
lea
jge
leave
js
stos
add
addl
add
xchg
repnz
add
in
in
hlt
lcall
insl
hlt
mov
push
lea
push
call
add
roll
test
mov
add
pop
add
loope
jnp
bound
mov
int
add
imul
leave
mov
add
sahf
add
loop
cld
push
add
insb
add
mov
add
sahf
xchg
hlt
je
cwtl
add
add
jns
stos
add
les
loope
mov
xchg
lcall
loopne
inc
shr
pop
push
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
mov
shlb
add
mov
scas
flds
imul
add
add
add
add
add
mov
gs
xchg
add
add
add
stc
add
add
ljmp
add
mov
jae
push
push
add
pop
push
add
add
and
mov
xchg
roll
cld
push
push
push
push
push
push
lea
push
call
popl
jbe
je
rolb
addl
add
clc
add
mov
nop
add
add
fidivs
add
ret
add
repnz
xchg
pop
add
add
ja
sub
pop
push
push
push
call
add
lcall
add
sarl
jmp
lret
insb
lods
add
lock
add
in
lds
push
mov
add
ljmp
ror
roll
add
mov
add
add
mov
aam
xchg
sti
push
insb
fnstsw
add
sub
pop
push
push
sub
rol
pop
push
push
push
add
sub
pop
mov
pop
push
add
ror
pop
pop
push
sub
inc
not
pop
pop
push
push
push
push
call
int
push
gs
mov
nop
add
add
add
in
mov
add
add
add
add
xchg
ret
popa
movsl
mov
jb
bound
add
add
lods
shrb
out
roll
xlat
xlat
shll
sub
pop
pop
leave
push
push
lea
push
push
push
lea
push
call
jae
mov
lds
pop
jb
movsb
xchg
testb
mov
add
add
bound
add
ja
mov
add
add
add
test
xlat
add
out
jbe
cmpsb
cmpsl
rcrl
js
addl
sub
pop
ret
push
add
pop
push
mov
push
push
push
call
add
lock
add
data16
jbe
add
add
add
leave
jae
cltd
add
add
add
mov
test
cwtl
add
lcall
clc
push
rol
pop
push
push
push
pop
push
push
push
push
push
push
lea
push
call
add
jns
add
mov
add
add
add
loope
mov
aad
je
add
addb
jb
add
outsl
out
lds
lahf
fsubl
add
ret
add
lcall
inc
cld
add
add
addl
push
push
call
jecxz
add
xchg
push
in
push
cltd
fmulp
sbb
mov
add
mov
int
add
into
in
jne
mov
ja
add
add
les
add
lcall
rorb
pop
add
add
cmc
pop
mov
pop
push
shl
pop
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
mov
add
add
in
jnp
add
rol
add
mov
pop
mov
xchg
lret
add
add
add
mov
stos
add
sarl
add
xchg
std
mov
add
add
mov
pop
push
lea
shl
pop
pop
leave
push
lea
push
push
call
push
add
mul
int3
pusha
lods
add
add
out
xchg
add
lahf
push
in
add
add
mov
add
push
add
xlat
pop
aam
xchg
add
add
lcall
add
cmp
pusha
pop
add
cli
xchg
push
push
push
push
push
push
lea
push
call
jno
fldt
sbb
push
into
in
add
add
xchg
add
cli
ffreep
add
in
icebp
jns
add
iret
add
add
or
mov
add
mov
jmp
test
push
add
outsl
test
xchg
lods
ja
add
xchg
add
push
push
push
lea
push
lea
push
push
push
push
call
outsl
add
add
add
add
mov
add
mov
mov
add
mov
xchg
in
xlat
stos
leave
add
add
add
add
cmpsl
lret
add
add
pop
scas
xchg
test
add
enter
fcmovne
mov
cwtl
add
mov
lret
loope
sub
pop
mov
push
sub
not
pop
add
push
shl
pop
push
push
shl
lea
add
lea
pop
push
push
push
lea
push
push
push
push
push
call
jne
xchg
add
add
add
add
scas
jle
jmp
stos
ljmp
lret
add
push
mov
mov
xchg
or
imul
add
lods
jbe
push
add
xchg
add
lods
pushf
add
into
test
in
in
push
push
push
rol
pop
testl
push
push
push
push
push
push
push
push
call
outsl
add
lods
test
add
pop
add
jo
mov
lds
add
test
mov
out
call
into
add
lcall
inc
or
push
sub
pop
push
push
ror
rol
pop
call
push
inc
xor
pop
mov
push
push
push
lea
push
push
push
call
add
cld
add
xlat
scas
test
pop
xchg
sti
cltd
test
sahf
mov
pop
movl
add
jge
add
push
popa
test
push
xchg
testl
sti
mov
leave
add
mov
add
scas
add
loopne
add
add
sti
add
mov
je
xorb
ret
call
push
add
not
pop
push
push
push
ror
ror
pop
call
cmpl
jne
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
aad
insb
idivb
cld
cmpsb
add
add
add
jne
add
lahf
add
mov
repnz
add
pop
jno
add
add
add
lcall
push
push
call
shll
add
mov
add
lahf
add
add
add
add
in
jge
add
pop
in
add
add
out
add
add
add
lcall
push
push
call
imul
add
clc
cli
mov
jne
out
data16
in
mov
add
add
add
lahf
add
aad
pop
ja
fwait
pop
sub
pop
pop
push
push
call
mov
lods
add
fldcw
shl
nop
add
mov
arpl
mulb
add
pop
test
xchg
addr16
push
add
push
add
mov
add
sub
pop
pop
leave
push
lea
push
push
push
push
push
call
add
repnz
jo
pop
imul
jle
out
addb
add
add
testl
jp
jbe
mov
leave
shlb
add
jne
add
add
icebp
aam
add
xchg
in
add
mov
jecxz
cwtl
add
popl
mov
pop
ret
push
push
lea
push
call
add
add
sti
fildl
in
add
out
fwait
mov
add
add
out
add
lods
add
add
add
add
mov
lret
mov
mov
add
push
xor
ror
pop
mov
push
push
push
call
push
in
add
jno
nop
add
add
add
add
roll
add
add
add
add
mov
lcall
cld
push
ror
sub
pop
push
push
push
pop
push
push
push
lea
push
push
push
lea
push
call
add
xchg
push
mov
mov
add
xchg
pop
push
cltd
add
add
shll
pop
pop
std
in
fwait
mov
mov
add
add
add
cmpsb
jno
add
jbe
aad
loope
gs
add
mov
jns
scas
fidivs
push
fiadds
add
cmpsl
add
stos
pushf
test
sub
pop
push
push
dec
pop
movl
push
sub
shr
add
pop
push
push
lea
push
lea
push
push
push
push
call
add
add
push
add
add
movsb
add
xchg
pop
lahf
add
add
pop
add
add
add
out
add
add
mov
push
mov
jecxz
add
in
call
call
push
inc
pop
push
call
push
push
push
push
call
pop
sahf
add
mov
loop
out
arpl
loopne
add
lock
in
push
push
mov
pop
je
add
add
mov
add
out
pushf
testl
fadds
pop
in
add
insl
cld
add
mov
or
mov
pop
cmpl
jne
push
push
push
push
push
call
add
add
mov
out
add
add
add
in
mov
mov
rolb
sbbb
add
push
add
sahf
add
add
out
jns
mov
in
in
pop
pop
push
sub
inc
shr
pop
pop
push
pop
pop
pop
push
shr
pop
leave
push
sub
pop
ret
push
lea
push
call
xchg
add
jge
mov
xchg
add
push
jno
data16
pop
mov
mov
jl
add
xchg
mov
mov
push
push
push
push
push
push
lea
push
push
push
call
mov
lret
mov
out
add
xchg
sahf
scas
cmpsl
int
cmpsl
add
add
add
enter
cwtl
test
clc
mov
add
scas
add
add
mull
jb
mov
lods
add
jp
mov
icebp
add
imul
mov
push
stos
stc
add
mov
add
xchg
add
add
in
loopne
lcall
in
push
push
push
push
lea
push
call
add
sbbb
add
add
lret
add
sti
or
xchg
js
clc
jns
xchg
mov
addb
add
add
aad
pop
mov
in
in
pop
add
push
push
lea
lea
rol
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
out
stc
addl
add
mov
add
lods
mov
mov
add
pop
mov
push
scas
add
fisubs
lea
sahf
xchg
mov
in
add
jo
sub
pop
push
mov
push
add
pop
lea
push
lea
push
push
push
lea
push
push
push
call
rcrb
mov
pushf
add
call
push
fisttps
hlt
pop
add
add
ffreep
add
add
fistpl
in
sub
push
push
push
push
push
push
push
push
push
lea
push
call
lret
jmp
stc
add
out
sti
cmpl
mov
mov
add
addl
out
mov
add
out
lcall
add
add
subb
sbbb
add
std
lods
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
add
aad
ficoms
add
add
add
aam
lock
add
add
add
jecxz
shrl
sub
pop
shr
add
push
pop
mov
push
add
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
call
add
outsl
xorb
add
scas
in
add
pop
mov
out
pop
scas
enter
test
xchg
loopne
sub
pop
add
add
push
xor
shl
inc
pop
mov
mov
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
imul
insb
lret
mov
ja
add
popf
mov
insb
add
push
mov
mov
in
fcomps
pop
outsl
jne
push
push
push
lea
push
lea
push
call
add
aad
add
add
pushf
add
ja
ror
negb
add
out
jne
add
cli
pop
test
mov
jmp
add
popf
add
add
mov
push
add
add
aad
mull
mov
add
fwait
jnp
add
add
pop
cmp
jne
mov
push
push
push
push
push
push
call
add
add
push
lods
lods
mov
add
xchg
ljmp
add
addb
add
push
lcall
add
lock
cld
add
add
add
rolb
add
jne
add
sub
pop
movl
jmp
push
lea
xor
pop
mov
push
add
lea
pop
mov
push
push
push
lea
push
push
push
push
call
add
pop
xchg
mov
out
lods
addl
add
mov
movsb
add
jnp
int
add
fcompl
mov
sti
lock
imul
xchg
cli
ljmp
lcall
ljmp
add
inc
adc
cmpb
es
push
push
push
push
call
popa
lret
test
in
xchg
add
cli
pop
add
fildl
add
std
movsb
push
add
jle
movb
add
xchg
add
lock
lret
call
flds
add
add
mov
stc
push
rolb
add
jbe
add
push
insb
into
fiadds
scas
add
mov
lcall
add
add
push
push
lea
push
push
push
push
push
call
add
sarb
mov
add
iret
add
pop
out
call
add
loopne
add
in
fs
roll
arpl
test
add
stos
add
add
add
add
movsb
add
mov
add
add
add
in
in
jmp
mov
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
mull
xchg
add
add
out
jnp
add
adcb
std
in
out
pop
add
add
in
jns
mov
add
add
add
mov
push
xchg
push
jo
negb
out
pop
roll
add
add
test
add
add
jmp
sub
pop
mov
cmp
jne
push
shl
lea
add
add
pop
mov
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
test
je
add
add
add
lcall
add
in
add
mov
add
jno
mov
add
out
add
add
stos
add
sub
pop
movl
push
ror
add
pop
jmp
mov
push
dec
sub
dec
sub
pop
cmpw
jne
push
push
lea
push
push
push
lea
push
push
push
call
insb
imul
add
ror
lcall
cwtl
into
xlat
add
out
jo
fldl
add
jbe
lcall
inc
adc
add
rol
pop
jmp
push
inc
pop
pushl
push
xor
pop
pop
mov
push
sub
sub
pop
mov
push
lea
push
push
lea
push
push
push
call
add
std
add
add
fldcw
in
cli
add
imul
out
add
add
add
fsubrp
add
add
scas
fwait
jmp
icebp
add
test
xchg
mov
mov
add
pop
add
add
loop
add
add
cmc
iret
add
lods
jo
je
lret
add
add
pop
mov
push
push
dec
xor
push
and
add
lea
sub
pop
pop
push
pop
push
push
push
push
push
push
push
call
aam
add
movsl
nop
aam
add
fwait
lods
add
rolb
arpl
ret
mov
add
incb
jp
out
add
xchg
outsl
add
sar
add
add
cwtl
lret
mov
pop
mov
add
add
add
add
pop
add
lods
roll
sub
pop
call
cmpl
je
push
push
not
inc
sub
add
push
xor
add
xor
dec
ror
sub
lea
sub
pop
dec
pop
push
push
push
lea
push
lea
push
push
call
lret
add
movsl
leave
add
mov
add
add
ja
mov
add
mov
add
add
roll
pop
push
call
push
lea
push
push
call
pop
mov
mov
popf
jns
stos
fdivrl
xchg
pop
js
sti
loope
xlat
mov
push
xlat
add
loop
add
clc
push
test
add
cwtl
cld
mov
add
outsl
add
xchg
mov
mov
add
movsl
jns
lock
add
popa
add
insb
ljmp
add
fldz
ret
mov
add
push
push
add
shl
push
push
pop
add
inc
sub
sub
lea
inc
pop
sub
xor
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
test
roll
push
stos
jp
xchg
rcr
add
lret
ljmp
add
xchg
lahf
jnp
in
popa
pop
mov
add
in
jle
add
fs
lret
mov
add
js
in
fcomps
push
dec
pop
call
push
xor
pop
cmpl
je
push
push
inc
lea
sub
push
sub
add
sub
ror
add
sub
not
sub
pop
add
sub
ror
pop
push
sub
pop
push
call
push
xor
inc
pop
cmpl
je
push
push
inc
sub
push
push
pop
add
inc
sub
sub
xor
shr
pop
shr
pop
push
shr
inc
add
pop
push
call
push
inc
dec
add
pop
cmpl
je
push
push
xor
push
xor
add
shl
add
sub
pop
lea
ror
shr
pop
push
lea
push
push
lea
push
call
idivb
bound
arpl
popf
in
movsb
pop
add
add
mov
std
push
loope
xchg
nop
add
add
add
add
test
jno
add
out
imul
shrl
xor
add
mov
sub
pop
push
push
ror
shl
shr
pop
call
push
sub
sub
pop
cmpl
je
push
push
xor
push
sub
add
shr
sub
sub
add
shr
pop
sub
rol
not
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
aad
lods
in
test
mov
jle
fcmovnb
insb
add
cltd
push
add
sahf
rclb
in
push
add
mov
js
add
jo
insb
rcr
add
scas
push
add
add
iret
scas
add
add
push
fdivr
lcall
push
push
call
add
notl
cmpsl
test
xchg
mov
add
jge
mov
add
add
add
add
roll
jae
out
je
add
cmpsl
add
cmc
notl
push
xchg
add
movsb
add
popa
add
add
loope
mov
addl
pop
call
push
rol
rol
add
pop
cmpl
je
push
push
dec
push
push
pop
add
lea
sub
inc
add
pop
shl
add
pop
push
inc
xor
ror
xor
pop
push
push
shl
pop
call
cmpl
je
push
push
add
push
or
inc
add
sub
sub
lea
dec
sub
pop
shr
inc
add
pop
push
ror
inc
xor
pop
push
push
shr
shl
dec
pop
call
push
push
push
push
call
add
cld
add
addl
jmp
add
lret
sbb
into
cld
mov
lods
insb
fcomp
sub
pop
cmpl
je
push
push
dec
push
or
not
add
add
dec
sub
shl
shr
pop
dec
pop
push
pop
push
push
sub
pop
call
push
push
call
add
add
add
add
push
add
mov
addr16
scas
jmp
leave
add
add
xchg
jge
add
lods
add
mov
add
add
out
lods
movsb
add
jecxz
shrb
cmp
test
add
push
push
lea
shr
not
ror
push
or
not
add
add
lea
add
sub
rol
pop
add
shl
lea
sub
pop
push
shl
not
inc
sub
pop
push
call
push
push
push
push
push
push
push
lea
push
call
mov
add
pusha
out
add
fdivl
pop
cmpsl
mov
out
mov
mov
gs
pushf
jmp
add
add
xlat
xchg
add
mov
lods
add
fs
fiadds
add
testb
fiaddl
add
in
mov
cltd
add
lcall
js
xor
ret
test
add
push
push
sub
ror
push
xor
add
sub
rol
dec
not
sub
shl
shl
pop
ror
add
lea
not
pop
push
shr
sub
pop
push
push
push
push
push
call
add
add
add
leave
push
pop
xchg
add
mov
add
movsb
add
add
add
add
mov
mov
add
add
add
mov
cmpsl
mov
popf
jmp
jnp
add
aam
addl
add
sub
pop
call
push
add
add
not
pop
cmpl
je
push
push
add
shl
push
and
add
lea
inc
sub
rol
sub
sub
shl
pop
xor
pop
push
push
push
push
push
push
push
push
push
call
mov
push
add
mov
lea
add
les
mov
add
ljmp
fcompl
call
push
lea
pop
cmpl
jne
push
pop
mov
movl
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
test
sti
test
lods
add
icebp
add
add
movsl
jo
nop
add
movl
ljmp
add
in
int
cmpsl
mov
jnp
sub
pop
jmp
xor
push
push
push
push
lea
push
push
push
push
push
push
call
mov
add
testb
add
add
add
add
decb
movsb
xchg
jge
int3
add
popa
lods
hlt
int3
pushf
lcall
cwtl
test
ja
clc
add
xchg
cwtl
pop
add
add
out
push
add
mov
lahf
test
sub
pop
pop
push
push
push
lea
push
push
call
test
add
repnz
jae
mov
imull
xchg
mov
mov
cld
add
in
clc
mov
imul
lahf
popa
into
sub
pop
pop
push
add
ror
shr
not
pop
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
xchg
scas
lods
add
jo
add
incb
mov
lea
xchg
add
add
cld
popf
push
cli
pop
mov
outsl
ljmp
or
push
not
lea
pop
push
mov
push
add
shr
inc
pop
add
cmpl
jne
push
push
dec
push
or
not
add
add
rol
sub
add
add
pop
ror
ror
rol
pop
push
inc
shr
add
pop
pushl
push
ror
pop
call
push
push
lea
push
push
call
incb
lock
add
add
add
add
add
popa
mov
mov
add
hlt
add
jge
int3
add
push
mov
test
add
add
add
je
push
push
popfw
pop
add
addr16
add
add
jo
int3
xchg
add
add
jge
cli
aam
add
add
cmpsl
add
lock
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
stos
pop
xchg
outsl
sti
add
mov
add
pop
pop
add
push
in
rcr
add
add
push
cmc
filds
add
outsl
add
add
shr
shll
add
push
push
lea
push
push
push
push
push
lea
push
call
add
ljmp
add
add
xchg
scas
faddl
jne
mov
stos
add
lahf
jo
cltd
flds
jmp
pop
addb
sub
pop
cmpl
je
push
sub
add
add
pop
cmpl
jne
leave
push
push
call
add
out
movsl
imul
add
add
fistpl
cli
fiaddl
loopne
add
add
mov
icebp
fdivp
push
mov
in
clc
pop
add
pop
push
push
push
push
push
push
push
lea
push
call
cli
add
je
hlt
add
lock
push
fldcw
lcall
cwtl
add
add
jle
shrb
add
push
adcb
add
add
xchg
add
push
add
add
je
mov
loopne
lcall
push
sub
add
rol
pop
pop
push
rol
lea
pop
pop
push
push
call
mov
pop
add
cld
add
add
popf
xchg
pop
leave
cld
cwtl
shlb
mov
add
add
add
mov
rolb
add
add
pop
push
add
add
add
xchg
jle
cld
lret
lcall
add
xchg
add
push
push
call
mov
mov
mov
add
jb
jle
add
add
movsb
add
imul
pop
add
lret
out
fldl
sahf
add
xchg
add
add
add
push
add
add
sub
pop
add
push
push
push
push
push
push
push
push
call
add
cmpb
xchg
add
add
add
test
rcll
addl
sti
pop
pop
fsubp
add
add
add
nop
add
jns
test
add
add
add
pop
add
std
add
add
add
add
movsb
add
int
add
add
xchg
lret
fsubrs
add
scas
add
lcall
jmp
push
lea
push
call
add
popf
in
xlat
lock
add
add
push
imulb
jne
add
sbb
add
test
add
jne
add
jge
stos
std
out
add
int
add
mov
mov
sub
pop
cmpl
jne
push
push
ror
push
or
inc
add
lea
shr
ror
inc
sub
rol
add
add
pop
dec
pop
push
lea
push
lea
push
push
call
test
add
stc
lret
mov
movsl
add
add
scas
int3
mov
outsl
add
out
add
add
enter
loopne
pop
cli
add
mov
loope
js
in
add
mov
fwait
add
insb
out
scas
add
add
add
add
jnp
mov
mov
sub
pop
pushl
call
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
addl
add
push
scas
in
mov
add
add
mov
jmp
mov
jb
mov
add
jo
data16
sub
pop
push
push
dec
dec
add
lea
pop
call
jmp
push
push
push
push
call
push
repnz
jb
loopne
mov
add
add
xchg
sti
mov
add
add
xchg
push
add
fldl
fstl
pop
add
mov
push
sahf
add
pop
out
addb
mov
out
add
shrl
xchg
mov
in
lock
lcall
jge
add
test
add
push
lea
pop
mov
push
push
push
push
push
call
mov
mov
out
rolb
push
add
hlt
loopnew
mov
mov
pop
roll
add
icebp
lret
jmp
add
add
add
leave
pop
addb
add
add
out
in
in
pop
mov
jmp
push
pop
push
push
push
shr
shr
add
push
push
pop
add
xor
sub
shr
add
not
pop
dec
shl
dec
pop
push
shr
pop
pushl
push
push
push
push
push
lea
push
push
call
mov
add
add
mov
xchg
aam
add
add
xchg
xchg
jmp
xchg
sub
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
mov
idiv
add
mov
add
pop
mov
mov
add
add
cltd
add
add
jl
test
pushf
add
add
add
jp
add
lods
fwait
adcb
add
cltd
add
mov
in
fdivr
lcall
shrb
fcmove
cmp
movb
jno
push
sub
add
shr
lea
sub
sub
inc
pop
xor
add
dec
xor
pop
push
lea
add
dec
pop
pushl
push
shl
rol
sub
pop
call
call
push
push
shl
push
or
inc
add
ror
add
sub
rol
pop
lea
rol
dec
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
jecxz
push
rolb
add
add
mov
fadds
mov
fldpi
add
std
fnstenv
bound
add
add
fs
xchg
addb
xchg
add
mov
movsb
lret
jae
cwtl
jns
in
loopne
lcall
jne
push
lea
push
push
push
call
add
fcompl
pop
add
imul
add
rcrb
sahf
rolb
scas
add
ret
add
add
ret
mov
add
add
loop
xlat
cld
int
add
lahf
xchg
jmp
call
call
push
push
shl
push
or
not
add
add
sub
lea
sub
sub
sub
pop
sub
lea
pop
push
lea
push
push
push
push
push
call
movsb
cmpb
ja
mov
add
in
addr16
cltd
addl
add
pop
popa
xchg
sahf
cmc
add
mov
test
popa
jno
faddl
add
add
add
cmpsl
roll
in
mov
mov
add
add
add
lret
call
push
push
push
lea
push
push
push
push
push
push
call
lods
add
add
add
push
out
mov
add
add
mov
mov
scas
nop
pop
mov
mov
add
add
add
add
sub
pop
call
push
lea
push
push
push
lea
push
call
into
outsl
add
add
test
add
add
add
add
add
add
mov
add
cld
sub
pop
call
push
push
ror
dec
shr
sub
push
and
add
shl
ror
add
sub
rol
shr
pop
not
lea
add
not
pop
push
sub
shl
sub
ror
pop
pushl
call
push
push
lea
push
call
mov
mov
fs
add
test
jnp
xchg
testb
add
lds
rolb
add
add
mov
cwtl
in
add
iret
add
push
sub
pop
call
push
push
shl
sub
not
push
or
not
add
not
not
inc
sub
dec
pop
add
add
dec
ror
pop
push
inc
pop
pushl
push
lea
shl
pop
call
call
push
push
sub
lea
push
or
not
add
rol
sub
inc
add
pop
shl
add
add
inc
pop
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
int
int
pop
jno
add
mov
add
mov
jb
jnp
add
add
xchg
gs
mov
add
mov
popa
out
loopne
aad
add
add
add
pop
mov
jecxz
add
add
roll
add
add
mov
in
fcomps
jne
push
push
lea
push
push
push
call
lret
add
sub
xchg
add
add
cmc
add
add
add
fildl
shll
popa
add
add
add
add
fiadds
add
mov
add
jbe
in
in
lcall
repnz
push
lea
push
lea
push
push
lea
push
push
lea
push
call
imul
fldenv
neg
add
add
cli
cld
add
hlt
test
int3
mov
stos
call
add
out
add
arpl
mov
lcall
shrb
pop
jne
push
shr
push
xor
add
lea
shl
sub
sub
add
pop
sub
pop
push
add
pop
pushl
push
sub
shr
rol
pop
call
push
sub
shl
pop
call
push
push
shr
not
add
push
push
pop
add
add
sub
lea
sub
pop
add
dec
pop
push
add
pop
pushl
call
push
lea
pop
call
push
push
ror
lea
push
sub
add
inc
sub
xor
lea
pop
sub
sub
not
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
stos
repnz
mov
icebp
add
push
int
roll
in
fprem1
cltd
movsl
add
mov
jbe
add
movsb
add
loopne
lcall
jne
push
push
call
fs
mov
add
lods
add
add
add
js
add
xchg
add
add
add
roll
lcall
dec
and
and
call
push
call
push
push
sub
sub
push
and
add
not
xor
shr
ror
sub
xor
ror
pop
not
pop
push
push
push
call
ljmp
arpl
add
mov
add
into
ret
js
imul
xchg
pop
fstl
add
popa
test
add
imul
push
sahf
int3
mov
int3
into
xchg
out
mov
push
int
add
sub
pop
pushl
push
lea
add
dec
pop
call
call
push
push
rol
push
xor
add
dec
sub
sub
pop
add
lea
pop
push
push
push
lea
push
push
push
call
test
push
lea
lods
add
loopne
pop
add
loope
fldl
adc
int
sahf
fbstp
pusha
lret
add
add
add
iret
shr
add
add
add
add
add
leave
les
add
xchg
add
xchg
add
cli
cmc
lret
add
mov
mov
add
int
lds
mov
sub
pop
pushl
push
add
dec
pop
call
call
push
push
push
xor
add
add
sub
lea
lea
dec
sub
pop
shr
lea
sub
ror
pop
push
push
push
push
call
add
lret
add
add
add
jnp
cmpsl
repnz
leave
add
jle
filds
xchg
sti
push
mov
scas
add
ret
add
push
push
add
int3
add
add
xchg
add
gs
bound
lcall
jne
push
push
push
call
pop
pop
out
mov
addl
add
mov
pop
icebp
add
add
out
icebp
lahf
pop
add
andl
add
sub
pop
call
push
lea
push
push
push
push
push
push
push
push
call
int3
add
add
mov
add
jecxz
mov
in
add
aam
stos
cld
add
add
rolb
out
add
add
lret
add
add
add
add
cld
out
xlat
nop
test
scas
add
add
add
lcall
rclb
iret
mov
lea
push
push
rol
push
or
inc
add
ror
lea
sub
shl
inc
shl
pop
xor
pop
push
lea
ror
pop
pushl
call
push
push
call
xchg
in
cmpsl
xchg
mov
sub
popl
jne
add
je
leave
add
call
add
mov
mov
out
jecxz
imulb
pop
push
call
push
push
dec
dec
sub
push
or
inc
add
lea
not
inc
sub
shr
rol
pop
shl
pop
push
xor
shl
pop
pushl
call
push
lea
pop
call
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
addr16
add
movsl
xchg
cmpsb
pop
mov
addl
clc
jb
add
icebp
cld
fsubr
add
scas
out
popf
mov
add
add
int
testb
push
outsl
ret
test
add
movb
add
mov
push
push
rol
push
or
inc
add
lea
inc
sub
pop
pop
push
dec
pop
pushl
call
push
push
push
call
in
add
pushf
jmp
add
cli
adcb
jmp
testb
jns
add
mov
push
xlat
add
std
add
movsb
icebp
add
xorb
add
add
mov
add
add
push
add
add
xchg
add
scas
sbb
movsl
add
out
jbe
add
add
fiadds
add
lea
ror
inc
pop
pushl
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
aad
out
add
aad
add
pusha
cmpsl
bound
ja
fwait
out
mov
sbbb
mov
test
into
add
lock
test
in
lcall
add
mov
add
add
add
mov
sub
pop
call
push
push
xor
not
push
and
add
dec
sub
sub
pop
shr
pop
push
push
push
push
push
push
push
call
pop
push
add
add
stc
testb
movsb
test
cmpsl
xchg
pusha
std
add
js
js
fadds
add
in
add
add
add
lods
push
mov
lret
cmpsl
xchg
test
mov
add
in
in
pushl
push
ror
pop
call
push
push
xor
xor
push
or
not
add
add
sub
lea
sub
dec
pop
add
pop
push
push
not
sub
push
or
not
add
xor
inc
add
sub
dec
lea
sub
pop
pop
push
pop
call
push
push
rol
push
push
pop
add
lea
xor
sub
rol
pop
inc
sub
ror
pop
push
ror
pop
pushl
push
push
push
call
xchg
add
add
fiaddl
mov
mov
add
roll
pusha
push
add
int3
add
std
add
add
lahf
xchg
add
in
hlt
pop
call
push
push
push
push
push
lea
push
call
mov
repnz
add
cmpsb
fcoml
imul
add
add
cmc
add
cmpsl
mov
jbe
xchg
add
add
mov
add
cld
cmc
add
pop
mov
push
lea
dec
pop
lea
push
push
push
lea
push
push
lea
push
call
mov
push
fs
faddl
add
mov
add
mov
jo
mov
repnz
jnp
pop
push
add
add
add
lcall
test
call
iret
sub
ror
pop
push
push
push
push
lea
push
push
call
ret
xchg
add
add
add
add
add
add
mov
ret
out
ljmp
pop
mov
add
mov
add
add
add
add
jmp
add
add
aad
add
mov
imul
loop
test
lret
in
clc
lcall
add
cld
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
loope
add
add
mov
jecxz
roll
insb
arpl
add
add
jecxz
cld
std
loopne
sahf
add
mov
add
orl
push
push
call
jp
add
add
pusha
add
mov
hlt
mov
add
add
popf
int3
mov
mov
cmpsl
add
add
xchg
pop
pop
mov
jmp
add
xchg
mov
jne
fwait
lea
stos
pop
add
add
fwait
add
add
pop
test
in
mov
std
push
add
clc
fstpt
in
clc
pop
push
push
push
pop
pushl
push
push
push
call
add
int
lret
add
cwtl
mov
pop
mov
call
push
jo
adcb
push
add
sti
test
and
addr16
outsl
pop
mov
add
lds
ljmp
test
push
xchg
ja
add
xchg
ret
mov
in
clc
pop
call
push
push
shr
inc
shr
push
and
add
inc
sub
xor
ror
inc
pop
add
add
pop
push
add
lea
sub
pop
pushl
call
push
not
add
pop
call
push
push
push
push
push
push
lea
push
push
call
cmc
jmp
add
cmpsl
mov
mov
pop
ljmp
add
push
add
fstps
orb
mov
push
add
mov
xchg
mov
incb
divl
out
mov
divl
test
mov
mov
pop
push
ror
add
pop
dec
jne
call
push
push
sub
inc
not
push
and
add
add
sub
add
pop
shl
lea
not
lea
pop
push
lea
push
push
call
cmpsb
mov
bound
xchg
jae
lea
add
cli
add
scas
mov
lahf
into
add
jnp
add
test
je
imul
jecxz
fsubp
rolb
pushf
cli
add
cmc
cmpsb
fldenv
fs
out
pop
fsubl
addr16
pop
pushl
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
sahf
add
mov
ljmp
add
lds
add
test
add
add
jl
nop
js
in
mov
add
roll
jne
add
push
push
push
push
push
push
call
jae
ja
popa
loope
push
in
lcall
add
add
xlat
add
cli
mov
pop
xchg
add
scas
insb
cli
aad
idivl
add
stos
addb
jns
lret
add
rorb
add
add
mov
pop
ret
in
xlat
pop
lret
fcomi
xchg
lods
orl
rclb
sub
ror
pop
mov
push
push
push
push
push
push
call
testl
add
add
fadds
push
xchg
aad
test
mov
fwait
clc
mov
mov
mov
sarb
fisubrl
mov
add
aad
hlt
mov
lcall
pushf
and
ljmp
icebp
mov
push
inc
shl
add
add
push
or
not
add
lea
inc
sub
sub
pop
add
not
add
dec
pop
push
lea
push
push
push
call
add
add
add
mov
adcl
pop
movsb
loopne
jae
imul
sarb
add
mov
mov
add
add
add
push
sub
pop
pushl
push
not
add
xor
lea
pop
call
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
ljmp
add
add
out
mov
scas
add
mov
add
scas
add
loopne
add
test
jae
shl
mov
loop
add
add
std
add
cld
into
jns
rcrb
flds
mov
clc
popf
add
cmpsl
enter
add
lcall
push
add
pop
call
push
push
shl
push
xor
add
add
dec
rol
sub
lea
add
sub
pop
inc
pop
push
push
call
add
lcall
lret
cmpsl
add
mov
add
add
std
shr
add
je
enter
cld
push
add
add
add
add
mov
clc
lcall
jne
push
add
sub
shl
pop
call
call
push
lea
push
push
push
push
push
push
call
clc
add
out
fbstp
ja
add
movsl
imul
pop
fwait
aad
push
add
loope
add
jae
negb
add
loop
add
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
call
add
cmc
pushf
scas
lds
mov
xchg
cmpsl
add
arpl
adc
jge
je
shll
add
add
jle
push
add
fldt
call
mov
add
enter
add
add
fstpt
mov
add
cmc
lock
in
popa
mov
sub
pop
lea
push
push
add
push
or
inc
add
ror
ror
sub
sub
ror
pop
shl
pop
push
shl
not
pop
pushl
call
push
lea
add
pop
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
test
popa
mov
jne
add
sti
jmp
push
xchg
jae
mov
add
popl
add
mov
ret
add
push
jb
add
arpl
jmp
test
popf
add
add
pop
add
add
loop
std
add
add
cmc
ja
mov
pop
push
push
rol
shl
pop
push
push
inc
pop
pushl
push
push
sub
push
or
not
add
not
sub
add
xor
add
xor
pop
inc
rol
sub
pop
push
push
push
push
call
in
test
into
xchg
rolb
fs
mov
cwtl
lahf
xchg
cmc
add
sahf
mov
add
add
ljmp
ja
add
add
addr16
add
jb
mov
sahf
jnp
push
pop
test
add
mov
add
aad
add
push
iret
mov
in
lock
push
push
xor
dec
pop
call
push
push
ror
sub
sub
push
xor
add
sub
ror
sub
dec
pop
sub
ror
pop
push
add
rol
pop
pushl
call
push
sub
dec
lea
pop
push
push
push
lea
push
push
lea
push
push
push
call
xchg
push
jge
clc
lahf
imul
push
test
int3
add
mov
faddl
shl
add
add
jecxz
mov
add
lods
out
mov
add
add
push
fs
push
add
add
add
pop
add
in
in
call
push
push
not
push
push
pop
add
shr
ror
shl
sub
dec
pop
add
pop
push
sub
ror
shl
pop
pushl
call
push
ror
rol
dec
pop
call
push
inc
shr
rol
dec
pop
jmp
push
add
not
dec
pop
pushl
push
lea
push
push
call
fadds
mov
add
rolb
add
into
push
cwtl
leave
xchg
ret
add
add
add
pop
lea
leave
in
out
xchg
jge
add
out
add
data16
pop
mov
jns
mov
ret
add
bound
push
test
add
test
push
add
add
pop
sub
pop
mov
push
inc
pop
jmp
push
push
ror
add
push
or
inc
add
dec
inc
shr
sub
shl
lea
pop
sub
pop
push
push
push
call
popf
scas
imul
ffree
add
xchg
add
ja
xchg
push
add
add
xchg
sub
pop
pushl
push
push
lea
push
push
push
push
push
call
add
add
lcall
fdivs
lock
add
arpl
push
pop
fiadds
in
faddl
pop
bound
test
push
add
pop
add
fcomip
add
outsl
add
jb
mov
mov
pop
lret
mov
leave
lods
movsl
add
xchg
add
cmpsl
sub
pop
call
push
push
push
lea
push
push
lea
push
call
movsl
add
pop
test
push
out
add
enter
cltd
hlt
add
add
loopne
mov
add
add
add
add
pop
loope
add
add
pop
add
out
repnz
jl
out
add
jb
add
add
add
addr16
add
add
mov
sub
pop
push
push
shr
shr
pop
call
push
push
ror
inc
push
or
not
add
shl
ror
sub
add
sub
shl
lea
pop
xor
add
dec
ror
pop
push
push
push
lea
push
push
push
push
call
cmc
lret
add
add
aam
jae
add
pop
mov
test
add
test
ljmp
mov
add
test
popf
add
stos
leave
add
cwtl
add
add
in
in
pushl
push
rol
inc
pop
call
push
push
add
sub
lea
xor
pop
call
leave
push
sub
not
pop
add
pop
push
not
add
sub
not
pop
pop
pop
push
ror
lea
dec
pop
pop
push
shl
not
pop
leave
push
xor
not
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
add
cmpsl
jp
add
add
jnp
add
sahf
sti
add
fmull
push
add
pop
arpl
jle
mov
add
jo
jp
jae
add
mov
insb
push
mov
add
add
leave
push
push
push
push
push
push
push
push
call
add
add
add
loope
add
lret
lods
add
add
iret
gs
add
add
add
mov
pop
fwait
add
aam
pop
add
add
in
loopne
ret
push
push
lea
push
push
push
push
push
push
push
push
call
add
imul
mov
pusha
outsl
call
add
stos
add
mov
add
add
pop
add
add
add
shl
lahf
xorl
push
loop
mov
roll
add
shrl
xchg
xchg
xlat
add
add
fiadds
cwtl
enter
in
fdivr
lcall
mov
push
lea
pop
cmpl
jne
mov
push
rol
pop
jmp
push
xor
lea
pop
mov
push
shl
shl
add
xor
pop
and
xor
push
push
push
push
push
push
push
push
push
call
add
cmpsl
in
add
add
ljmp
nop
add
stos
xchg
mov
fldl
add
add
push
in
fcompl
push
shl
pop
add
push
sub
pop
xor
push
shr
sub
sub
pop
dec
sub
push
push
lea
push
push
push
call
roll
cmc
add
add
mov
xchg
add
add
scas
add
add
mov
cld
or
stos
add
fstps
lea
add
add
cltd
sti
add
fdivr
mov
repnz
jo
mov
fiadds
aam
xchg
in
xchg
jl
in
in
pop
jmp
push
push
lea
push
push
lea
push
push
call
xchg
pop
add
add
pop
in
loopne
add
xchg
lods
mov
fldl
add
add
mov
loop
repnz
add
add
xchg
add
mov
test
mov
int
outsl
fsub
ljmp
sub
push
push
push
push
push
push
push
push
push
lea
push
call
jne
testl
jb
out
cwtl
add
xorl
add
lods
add
movb
add
mov
pop
add
add
rcll
jo
add
in
fcomps
xor
mov
xchg
or
dec
push
sub
lea
push
lea
push
push
push
call
iret
jns
add
mov
add
nop
out
add
push
mov
test
add
ljmp
add
add
xchg
add
addl
into
pop
xlat
add
lahf
add
push
add
add
xchg
add
shlb
ljmp
push
push
push
push
push
lea
push
push
push
lea
push
call
pop
add
testb
in
add
mulb
add
rorl
mov
call
add
add
add
out
je
add
add
pusha
jb
jnp
lea
outsl
sarl
fdivr
lcall
jmp
push
add
dec
shr
not
pop
cmp
jne
push
push
call
scas
add
rcr
add
push
add
pop
mov
push
movsb
xchg
add
rol
add
add
cli
or
add
jo
mov
push
imul
add
mov
jmp
add
add
add
mov
add
fcmovnu
add
iret
icebp
add
add
test
lcall
enter
dec
cmp
push
call
rclb
add
mov
sahf
add
jge
data16
add
div
popa
add
jns
int
add
jmp
mov
jecxz
mov
and
mov
push
push
push
call
mov
add
mov
ficoml
add
add
fadds
xchg
out
add
hlt
jo
jl
xlat
add
jecxz
jmp
mov
call
mov
add
andb
mov
shr
push
pop
add
sub
push
push
push
lea
push
push
call
add
add
pop
add
aad
arpl
add
push
movsl
add
fiadds
test
mov
add
add
lds
test
out
xchg
add
add
lcall
xor
jmp
sub
pop
pop
shr
push
lea
pop
and
push
push
push
push
push
push
push
lea
push
push
push
call
add
mov
add
add
push
fstpt
add
popl
jp
xlat
fldl
mov
xchg
add
loope
add
mov
cmpsb
mov
jle
cwtl
add
pop
mov
call
add
xchg
xchg
into
add
push
sub
pop
sub
push
push
push
push
lea
push
lea
push
push
push
call
data16
add
add
lods
add
add
in
add
add
mov
add
lret
fildl
add
cmpl
in
mov
add
add
add
pop
add
add
jb
jns
in
loopne
cmp
jne
push
push
push
push
push
push
lea
push
push
call
mov
add
xchg
add
stos
add
add
jno
in
push
add
add
clc
testl
cmp
mov
hlt
push
add
ljmp
popf
mov
add
pop
jp
add
gs
mov
imul
mov
pop
leave
push
push
push
lea
push
call
push
out
add
out
add
add
mov
pop
int
pop
add
outsl
insb
test
mov
xchg
add
add
xchg
add
std
add
mov
add
rolb
sahf
add
add
repnz
shlb
cmpsl
lods
mov
jb
add
add
add
add
into
mov
add
add
push
sub
sub
pop
push
push
sub
pop
mov
push
not
pop
add
push
push
pop
push
push
push
shl
rol
lea
pop
push
push
push
push
push
push
lea
push
call
xchg
out
les
out
lcall
push
aad
movb
movsb
out
add
add
pop
add
lcall
mov
push
sub
dec
pop
lea
push
lea
push
lea
push
push
lea
push
push
push
call
leave
js
in
xlat
notb
aad
je
sti
add
int
add
add
mov
gs
add
ljmp
lret
mov
test
jb
add
rcl
xchg
cmpsb
mov
test
jne
lea
fiadds
mov
add
add
mov
lcall
ljmp
push
push
push
lea
push
push
push
push
call
add
add
add
add
fsub
add
add
fldl
lods
cli
mov
add
xchg
imul
mov
pop
push
jne
movsb
pop
add
pushf
into
xlat
jne
stos
add
sahf
add
add
xchg
add
fs
add
xlat
jnp
add
sub
pop
mov
push
lea
push
call
push
aad
adcb
add
stos
sti
add
mov
mov
out
add
jl
adcb
xchg
lret
add
mov
jnp
add
pop
shr
push
xor
inc
dec
sub
pop
add
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
in
out
outsl
test
test
call
pop
cwtl
xchg
xchg
add
add
add
add
add
xchg
ret
add
add
rcr
add
add
fs
jne
les
add
lea
add
add
ret
int
add
add
lcall
pop
or
sub
push
push
push
call
xchg
clc
add
add
pushf
mov
xlat
jno
xchg
add
add
add
cltd
xchg
mov
mov
add
jns
nop
out
jbe
out
popa
pop
add
sahf
gs
movsl
add
jae
pushf
sub
pop
mov
push
push
lea
push
push
call
add
add
add
jae
add
repnz
roll
xchg
add
mov
lods
add
jbe
add
mov
mov
mov
loop
jmp
add
lcall
jge
push
push
push
push
push
lea
push
push
push
lea
push
call
roll
add
add
cltd
add
add
mov
add
jmp
sahf
add
add
bnd
add
xor
adcb
addb
xchg
fdivr
shll
lcall
notb
mov
cmpsl
sbbb
dec
sub
lea
push
call
add
mov
lods
add
popf
push
add
test
add
fucom
ljmp
addl
add
add
add
mov
cmpsb
add
lcall
xlat
push
rol
pop
and
push
push
push
push
lea
push
push
call
in
add
add
movsb
mov
fisubl
mov
cwtl
mov
add
add
movsb
add
sahf
pop
decb
add
add
loope
mov
xchg
insb
into
outsl
add
mov
in
push
push
sub
pop
rol
push
shl
lea
pop
rol
push
shr
pop
xor
push
lea
pop
inc
push
push
call
add
rcr
add
je
add
lea
clc
add
add
add
push
jbe
sarb
add
in
clc
lcall
cmp
jne
add
push
add
sub
pop
cmp
je
add
push
push
push
push
lea
push
call
mov
lahf
cmpsl
mov
roll
mov
fdivrp
fiaddl
add
add
mov
push
xlat
add
add
jecxz
xchg
aad
lods
imul
xchg
add
push
lods
int3
add
cltd
add
sbbl
jnp
add
test
rclb
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
call
in
aad
jp
add
add
xchg
in
jecxz
in
mov
bound
add
add
imul
jno
add
popf
add
sahf
sub
pop
pop
push
inc
sub
shl
pop
pop
push
lea
sub
ror
pop
pop
push
push
lea
push
push
push
push
push
call
jns
jno
add
add
call
add
add
test
push
xchg
add
xchg
popf
add
imul
add
xchg
mov
xchg
push
add
std
push
mov
add
iret
addl
add
jecxz
add
lods
add
pusha
add
cmpsl
add
push
push
lea
push
push
push
call
add
add
cmpsl
add
aad
imul
shrl
add
mov
add
mov
leave
cli
into
xchg
add
mov
add
fiaddl
jae
add
add
add
mov
add
mov
jge
movsl
lea
popa
push
ljmp
out
xchg
sub
pop
ret
mov
push
add
pop
add
push
sub
ror
pop
push
push
push
push
push
call
pushf
popa
add
add
add
fxch
in
xchg
add
add
popa
lret
add
add
test
xlat
xchg
cmpsb
add
fldl
add
lcall
ret
add
cmp
dec
add
add
xchg
rolb
popa
in
add
addb
fldenv
add
js
addr16
add
mov
pop
rolb
xlat
out
xchg
push
rolb
xchg
add
fadds
jmp
cltd
loop
add
add
out
sub
pop
testw
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
out
cli
fisubl
repnz
cmc
add
add
lret
add
out
ficoml
rcrl
lret
filds
xlat
add
mov
add
enter
imul
lcall
push
lea
xor
pop
pop
push
lea
push
push
push
push
call
scas
jno
ja
pusha
add
bound
add
fiadds
add
loop
mov
add
pop
add
subb
add
xchg
jl
add
lods
mov
mov
add
add
mov
add
add
add
add
add
jmp
xchg
cwtl
addl
push
push
push
lea
push
call
outsl
push
push
add
jbe
add
jmp
repnz
arpl
lea
pop
pop
mov
in
jne
outsl
jmp
faddl
xchg
addb
add
data16
lods
mov
xchg
aam
add
add
add
mov
lret
add
lcall
or
jmp
rclb
push
lret
push
lea
push
push
push
push
push
push
call
add
cli
add
jecxz
add
repnz
xlat
xchg
in
lahf
movsl
in
lea
iret
push
test
add
xchg
add
add
add
add
cltd
insb
mov
add
jp
imul
rolb
data16
in
fcomps
pop
push
shr
dec
ror
pop
pop
pop
push
inc
ror
add
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
faddl
in
add
add
push
add
fmul
mov
add
add
add
add
movsb
push
add
mov
rclb
in
fcompl
push
not
pop
ret
push
push
push
push
lea
push
lea
push
push
push
push
call
sahf
jns
add
xchg
add
cmpb
fstl
add
mov
testl
mov
sub
pop
mov
add
push
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
sahf
aam
call
fidivrs
add
int3
add
cld
mov
int3
mov
sti
rolb
pop
addb
push
add
push
mov
stc
testb
testb
fcompl
push
shr
pop
push
push
push
lea
pop
push
mov
push
push
lea
push
push
push
push
push
call
pop
out
xchg
add
add
enter
in
add
add
sub
add
rcr
out
je
gs
stos
ja
mov
add
mov
add
add
pusha
add
add
addr16
xchg
add
pop
add
add
jnp
testl
pop
push
pop
push
push
push
lea
push
push
push
push
push
call
push
fbld
iret
fnstsw
xchg
iret
rolb
lock
pop
lret
add
add
add
pop
fs
add
xchg
lcall
add
fstps
add
add
add
add
mov
add
jge
cmpsb
into
lods
add
add
fldl
add
int
les
out
sub
pop
lea
sub
push
lea
pop
mov
push
ror
not
add
pop
shr
add
push
add
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
lods
add
cltd
gs
add
icebp
std
mov
add
mov
add
add
pop
js
xchg
xchg
add
add
testb
clc
sub
pop
add
push
shl
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
push
call
add
cli
scas
enter
add
mov
push
add
add
jl
cmc
add
sti
mov
lahf
fnsave
rolb
pop
push
push
cmpsl
add
add
and
pop
mov
cmc
add
xchg
mov
add
enter
fdivr
lcall
inc
clc
mov
push
push
lea
push
call
mov
add
add
pop
movsl
addr16
mov
addr16
add
mov
xchg
addb
fs
cmc
iret
lods
popf
js
jo
cmpsl
add
sub
pop
add
xor
push
push
push
push
push
push
call
insb
add
add
jo
add
add
add
in
jmp
add
add
add
iret
add
fdivs
ljmp
cmpsb
add
adc
push
dec
add
pop
mov
push
push
lea
push
push
lea
push
call
mov
add
arpl
add
out
mov
add
lock
push
add
mov
add
xchg
add
lret
shll
loopne
sahf
add
scas
mov
jl
sub
pop
add
xor
push
shl
rol
pop
rol
push
lea
pop
nop
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
outsl
mov
add
pop
add
lcall
add
jle
fdivr
add
add
mov
add
add
pop
insb
mov
leave
add
add
fs
sahf
addb
xchg
add
icebp
push
test
add
lret
add
lcall
push
shl
lea
not
lea
pop
xor
nop
push
shr
ror
add
pop
nop
push
push
push
push
push
push
push
lea
push
push
call
add
add
scas
add
xlat
ljmp
fildl
add
lret
hlt
add
xchg
add
jne
ffree
add
clc
add
arpl
add
testb
ret
mov
je
push
mov
add
xchg
add
arpl
add
addr16
imul
pop
inc
push
push
push
push
push
lea
push
push
lea
push
push
push
call
test
add
outsl
int
jno
add
add
lahf
add
fsubp
sti
data16
roll
stos
ja
add
add
mov
in
aad
add
add
movsb
push
lods
loopne
add
imul
add
ljmp
test
jmp
pop
nop
push
sub
ror
xor
shr
pop
nop
push
lea
sub
dec
pop
cmpb
jne
push
push
push
lea
push
push
push
push
push
call
cmpsl
mov
jno
jecxz
jmp
hlt
add
popa
cld
lds
aad
repnz
xchg
test
lret
add
pushf
pop
cmpsb
mov
out
fstpl
jb
add
sub
pop
add
push
push
push
push
push
push
push
push
lea
push
call
mov
add
push
lret
add
xlat
mov
data16
mov
in
fs
fsubr
add
test
in
add
add
repnz
add
add
add
sub
pop
nop
push
xor
not
lea
inc
pop
nop
push
add
rol
pop
cmp
je
push
dec
xor
pop
nop
push
shl
pop
nop
inc
push
shl
xor
pop
nop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
lea
js
loop
add
push
sbb
jl
push
stos
rolb
add
add
out
add
jmp
imul
add
add
cmc
mov
bound
lcall
push
shl
pop
cmp
jb
push
not
sub
inc
pop
xor
push
push
push
call
rcrl
add
cmc
fadds
mov
pop
testl
add
sti
hlt
push
add
repnz
or
jbe
fcom
movsl
rorb
add
fcoms
loope
loopne
xchg
add
imul
add
xchg
jecxz
add
stos
nop
pop
xchg
sub
pop
jmp
push
ror
xor
add
pop
mov
push
pop
add
movzwl
push
push
push
lea
push
lea
push
push
push
lea
push
call
fldl
add
add
xchg
add
mov
fs
jbe
add
add
mov
add
jge
stc
mov
imul
add
rcrb
loope
loope
add
roll
add
sub
pop
mov
add
push
shl
pop
mov
push
sub
add
pop
xor
push
lea
push
push
push
push
lea
push
push
push
call
add
mov
jge
out
lcall
jb
add
add
pop
out
int
jle
call
pop
add
incb
sub
pop
xor
push
shl
lea
pop
shl
push
inc
pop
xor
push
lea
lea
pop
shl
push
push
push
push
push
call
add
mov
fsubrl
mov
add
add
mov
add
push
aad
add
repnz
imul
cmpsl
xchg
cmc
add
add
add
sub
pop
xor
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
popl
call
jbe
add
add
loop
pop
lock
icebp
lahf
add
add
fisubl
mov
rcrl
add
sbbb
add
pop
sti
ret
lea
add
push
clc
lahf
cmpsb
add
add
add
movsb
add
shl
push
dec
xor
ror
pop
xor
push
push
push
push
push
push
call
add
add
jne
add
add
add
mov
jl
add
clc
add
pop
insb
call
cwtl
loope
add
scas
jmp
push
icebp
xchg
jl
add
push
loop
roll
add
into
add
add
lcall
rcll
add
pop
add
pop
push
shl
add
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
std
xlat
hlt
pushf
into
gs
lret
add
int3
pop
in
movsb
mov
add
mov
icebp
shlb
in
add
push
addl
out
mov
push
jne
roll
mov
add
add
int3
jb
cltd
lock
mov
sub
pop
pop
leave
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
orb
fldz
shrb
add
add
mov
add
mov
cmc
xchg
testb
xchg
lcall
add
test
cwtl
add
add
ljmp
jge
add
add
add
jb
mov
lcall
or
push
lea
push
push
push
push
push
call
int
add
add
add
add
mov
add
add
add
lahf
add
pusha
add
jb
pop
fisttpl
push
fadds
add
test
call
push
push
not
pop
mov
push
push
lea
push
push
call
ljmp
add
jecxz
add
jge
stos
add
pop
into
cli
mov
add
mov
mov
mov
add
lcall
pop
test
add
fisttpll
icebp
movsb
add
mov
or
pop
push
push
push
lea
push
push
push
push
push
push
call
push
mov
add
mov
out
add
add
add
in
add
add
add
jle
enter
stos
jbe
add
pop
mov
add
addb
mov
std
add
add
add
push
add
add
add
fwait
sub
pop
push
push
push
sub
pop
mov
mov
push
pop
mov
push
push
push
push
push
push
push
push
push
call
clc
fnstsw
add
add
fxch
mov
add
push
mul
add
add
push
faddl
in
mov
lea
add
les
mov
into
mov
in
fdivr
lcall
rorb
test
add
mov
push
push
lea
push
push
call
rolb
les
jo
add
addl
mov
xchg
addb
mov
jmp
pop
jbe
add
andl
loop
fwait
add
jecxz
mov
addb
fadds
add
jmp
call
stos
mov
add
lock
test
je
mov
push
push
lea
push
push
push
call
add
mov
add
jmp
add
fists
add
add
arpl
fwait
jae
insb
lock
mov
add
jmp
mov
js
jbe
js
add
mov
movsl
add
clc
add
add
sub
pop
mov
mov
push
shl
not
sub
pop
inc
push
push
push
call
add
mov
mov
rol
js
add
add
jnp
push
mov
fwait
les
gs
arpl
add
pop
add
sub
pop
cmp
je
test
je
push
xor
add
add
rol
pop
mov
inc
push
add
pop
cmp
je
push
shr
pop
test
jne
xor
push
pop
pop
push
sub
add
pop
pop
pop
push
push
push
lea
push
call
fstl
gs
add
add
mov
jae
add
add
jmp
mov
add
jb
add
out
lcall
aad
add
in
add
jb
add
pusha
into
xchg
add
jno
add
sub
pop
pop
leave
push
shr
pop
ret
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
cmpsl
je
push
mov
cmpsl
hlt
mov
fcoml
test
fsubrl
jmp
add
add
loopne
fmul
add
jo
xchg
mov
add
cli
add
nop
lahf
cmpsb
add
sub
pop
mov
push
sub
inc
pop
inc
push
push
push
lea
push
push
push
call
jnp
xchg
add
add
add
outsl
add
add
fstpl
push
add
call
cmp
jne
push
lea
push
lea
push
push
lea
push
push
call
add
add
xchg
arpl
add
push
add
addl
add
mov
add
add
mov
add
in
call
push
shr
not
add
lea
pop
mov
test
je
push
push
push
push
call
aad
lock
notl
mov
mov
ret
push
hlt
add
into
add
loope
mov
pop
xchg
add
xchg
in
imul
add
add
clc
jge
mov
add
fwait
add
push
add
add
loope
add
jo
add
add
add
sub
pop
mov
push
push
push
push
lea
push
push
call
popa
pop
xchg
add
jbe
lods
add
add
add
add
pop
fsubr
add
push
add
aad
jbe
int
push
add
movsl
repnz
jmp
add
push
mov
in
call
add
push
sub
sub
pop
cmp
jne
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
loope
mov
mov
gs
nop
add
fldenv
cmpsb
ljmp
mov
add
add
add
leave
stc
outsl
outsl
sub
pop
test
je
push
rol
pop
mov
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
pop
add
add
add
pop
call
scas
test
lods
add
lret
sub
pop
cmp
je
jmp
push
inc
lea
pop
xor
push
push
push
push
call
add
fisubl
les
mov
add
in
mov
mov
jo
shlb
mov
gs
push
mov
add
add
lock
lcall
pop
push
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
add
stos
fs
add
mov
imul
push
lds
add
test
bound
add
add
add
call
push
testl
test
mov
ljmp
cmpsb
xchg
lahf
add
pop
add
in
jns
xchg
pop
add
in
fcompl
push
push
push
push
push
push
push
call
add
scas
cmpsb
add
lret
add
mov
std
add
out
aam
add
insb
mov
pop
mov
push
add
loop
add
add
add
add
mov
int
sub
pop
ret
push
not
add
sub
pop
lea
push
push
push
lea
push
call
addl
out
cld
add
rcl
je
mov
jbe
add
jns
insb
mov
sti
fiaddl
add
add
cmpsl
filds
test
add
add
leave
add
add
shrb
add
call
add
sub
pop
pop
push
inc
xor
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
lea
bound
add
push
mov
fmul
add
add
add
xchg
gs
fs
faddp
stos
xchg
imul
add
add
pop
ja
add
jle
data16
add
lcall
in
add
fcompl
push
push
lea
push
lea
push
call
add
mov
out
jno
out
sti
insb
sarb
in
movsb
cmpsl
sbbl
add
jecxz
add
add
in
add
int3
push
xchg
mov
add
stos
int
sub
pop
pop
leave
push
inc
add
pop
ret
mov
push
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
jno
mov
xchg
add
add
mov
cli
in
pop
stos
mov
mov
popa
add
add
fdivrp
flds
add
add
sahf
pop
call
push
push
add
mov
xchg
add
insb
add
add
fwait
jle
sub
pop
pop
push
rol
inc
rol
pop
pop
push
lea
push
push
push
push
push
call
in
add
lret
xchg
add
add
test
pop
in
lea
pop
push
popa
pusha
popl
mov
lods
add
insb
mov
add
add
xchg
mov
loope
in
test
fwait
repnz
add
jecxz
xchg
stc
add
add
xchg
jae
add
mov
add
mov
mov
lcall
leave
push
add
ror
not
pop
ret
test
jae
ficomps
jae
test
jo
test
jb
pop
insb
jae
dec
sub
imul
push
test
jae
mov
add
add
inc
aas
xchg
scas
lods
push
repz
jb
inc
sbb
pop
sbb
and
negl
repz
dec
cmp
or
lret
adc
sbb
jle
cmp
pusha
into
lea
or
xor
jg
pop
sbb
out
jnp
add
xlat
adc
inc
enter
aam
or
inc
cmp
shll
scas
jno
mov
js
fadds
dec
in
or
stos
repz
aas
xchg
cmp
push
dec
inc
cli
pusha
inc
mov
jae
lahf
sarb
sub
movsb
loopne
inc
icebp
fwait
sbb
pop
loopne
mov
dec
imul
adc
mov
fisubrl
shrl
mov
das
popa
sub
clc
sti
aad
fs
mov
push
mov
pop
adc
xchg
loop
cld
notl
push
xchg
and
mov
push
push
int
xor
add
add
inc
sti
lahf
out
mov
std
mov
xchg
cld
out
sbb
iret
dec
es
fs
aas
enter
jno
cmp
imul
cmp
scas
in
movsb
xor
dec
xchg
cmp
add
sbb
mov
iret
int3
cmp
push
fdivrs
stos
outsl
inc
cmc
mov
mov
ljmp
adc
dec
inc
loopne
mov
icebp
pop
push
mov
outsl
push
insb
cmp
cmp
lds
mov
shlb
pop
movl
idivl
cmp
push
mov
xor
push
push
jge
enter
dec
pop
jne
adc
arpl
fildl
sar
inc
rclb
andb
hlt
jb
or
push
call
xchg
xchg
mov
sub
iret
insb
pop
inc
mov
sub
push
and
shlb
ret
inc
jae
push
sbb
jmp
cmp
mov
mov
mov
test
jl
call
ror
and
mov
sahf
sub
jbe
mov
pop
insl
flds
pop
adc
icebp
add
shlb
nop
mov
sbb
push
mov
mov
add
adc
add
pop
cmp
lcall
push
cld
aaa
dec
fs
roll
lock
imul
test
mov
cmc
fwait
pop
sub
pop
jno
dec
out
test
inc
jnp
pop
stos
mov
push
lea
inc
rclb
cmpsl
and
ret
cli
sbb
cmp
lock
mov
incl
ss
fwait
push
repnz
sub
jb
inc
shlb
jmp
dec
outsb
and
add
sahf
aad
in
cmc
arpl
mov
xchg
and
push
daa
loop
dec
xchg
sub
mov
cmp
cmp
mov
pusha
mov
mov
xchg
nop
lret
jecxz
imul
xor
les
lds
jb
or
loope
push
mov
fadd
push
cmp
jo
mov
and
sbb
sub
bound
add
int3
nop
pop
mov
inc
push
lret
mov
xchg
sub
enter
orl
cmp
push
das
mov
imul
dec
add
iret
mov
call
cmp
shlb
or
push
adc
mov
ret
pop
dec
pop
ss
insl
dec
into
jp
or
or
push
popf
xor
rcl
aas
repnz
mov
std
xchg
nop
cltd
sbb
out
add
dec
or
loope
sub
sub
dec
pop
or
rcr
pop
lods
je
cmp
lds
mov
inc
mov
sub
lret
sub
int
jecxz
mov
mov
cmp
xor
pop
sub
incb
mov
movl
and
pop
mov
pop
int3
pop
sub
repz
xchg
add
fwait
add
sub
xchg
daa
mov
jp
jecxz
movsl
cmpsl
inc
fidivs
and
shl
inc
es
jnp
push
jae
xchg
and
aad
sbb
rolb
test
in
les
int
imul
push
stos
jb
xchg
adc
dec
add
lods
mov
inc
xor
std
add
adc
jmp
iret
jl
pop
sbb
bound
imul
sbb
dec
aad
out
getsec
cmp
mov
jb
xchg
jle
jb
lds
dec
mov
sbb
sbb
push
push
xchg
loope
fs
fs
or
ret
inc
pop
jno
out
dec
dec
sahf
add
cmp
mov
lods
sbb
inc
push
lock
mov
inc
adc
rep
mov
clc
gs
jp
jo
lret
aaa
push
lods
scas
mov
repz
inc
add
in
ds
adc
jp
loope
inc
mov
les
push
xor
or
mov
adc
aaa
lret
stos
and
xchg
xchg
and
adc
jne
or
xor
insl
stos
scas
dec
shr
or
fdivs
mov
push
imul
rclb
ss
cs
mov
int3
inc
cmp
or
push
rorb
leave
dec
jno
xchg
lods
cmp
cmp
jno
lahf
adc
lds
push
pop
test
in
mov
das
or
and
xlat
push
sbb
out
push
aad
xor
mov
sub
ss
je
dec
test
or
pop
or
pop
lret
das
dec
and
mov
aaa
mov
jo
add
add
out
aam
lret
add
jg
repnz
mov
adc
xchg
roll
cmp
jno
outsb
cwtl
mov
push
loop
push
les
jmp
cmp
lret
pusha
xchg
stc
jecxz
push
in
add
leave
jge
and
jo
adc
cld
add
ss
imul
aad
xor
push
inc
jg
outsl
mov
mov
dec
or
push
fstp
in
shll
and
xor
rcll
movq
sub
add
fwait
out
mov
leave
aaa
jbe
mov
rcrl
fs
xor
cmp
daa
and
arpl
mov
dec
std
enter
fstl
stc
add
stc
jecxz
cmc
test
loope
stos
lret
pop
xchg
adc
imul
icebp
lea
add
xor
cltd
rclb
fstp
mov
mov
sbb
pop
xor
sub
and
push
xchg
mov
repnz
mov
test
rcr
adc
in
lahf
into
mov
xchg
andb
mov
aad
cltd
rorl
and
pop
push
or
fwait
or
jo
cli
jns
lret
xor
lahf
mov
hlt
jae
scas
in
xor
call
and
addb
jae
xor
xchg
mov
push
fucompp
shl
cs
jb
shl
push
or
jo
icebp
out
mov
push
popa
in
jg
mov
push
dec
jmp
addr16
and
rol
fs
les
and
flds
add
daa
je
add
dec
jmp
xchg
mov
es
enter
pop
lcall
rclb
lods
jnp
and
clc
int
cmp
mov
call
push
in
sub
loope
insb
in
aas
push
mov
adcb
adc
dec
adc
add
aaa
cmc
mov
ret
int
rcrl
js
xchg
sarb
out
jle
mov
ljmp
mov
fcmovnb
js
lret
jmp
adc
stc
jg
into
mov
out
popa
lret
or
jge
sub
iret
les
stc
mov
ficomps
popf
push
sub
leave
jl
sbb
test
dec
xor
fidivl
jnp
jnp
frstor
ret
cs
mov
push
out
pop
dec
or
arpl
sahf
or
or
into
mov
imul
imul
ret
cmc
shll
pop
cmp
iret
ds
dec
test
stos
iret
mov
push
cmpsb
int
mov
dec
push
sbb
cmp
xor
add
cmp
mov
pop
mov
testl
pusha
gs
inc
add
jo
cmp
dec
pop
jle
pushf
xchg
adc
adc
inc
cmpsl
sbb
fs
or
inc
ret
ljmp
cltd
repz
add
imul
jp
cmp
out
mov
dec
pop
ret
cmpsl
test
and
mov
dec
adc
outsl
ja
es
fdiv
or
sbb
and
lods
fstl
popa
sub
push
ljmp
add
arpl
loopne
dec
outsb
js
aam
add
enter
pusha
enter
pop
pop
pushf
mov
mov
aaa
mov
adc
lcall
mov
hlt
addr16
std
into
push
jle
scas
sub
xchg
in
jae
incb
jge
mov
aaa
sbb
mov
dec
out
faddl
jmp
mov
or
js
andl
dec
inc
ret
or
ss
and
orb
jg
jecxz
and
lret
out
pop
jp
mul
jb
dec
cmpsb
or
lds
dec
mov
daa
push
xchg
xor
add
mov
adc
pop
or
sbb
pop
add
addr16
addb
stos
arpl
jno
mov
cld
sahf
imul
popf
insb
in
sub
pop
orl
cltd
sahf
mov
cmpps
xor
shll
cmp
lds
push
aaa
jbe
adc
nop
cmp
mov
pop
add
cmp
pop
mov
xchg
and
shll
fstpt
outsb
dec
dec
jle
outsb
adc
dec
push
xor
inc
in
xchg
mov
imul
jae
mov
fst
fdivrl
push
or
and
mov
pop
scas
stc
stos
sub
xlat
push
pop
leave
push
int
mov
inc
rcrl
cli
mov
pop
push
stos
adc
and
fwait
lods
dec
and
lret
jmp
push
inc
mov
std
loop
lcall
shr
addl
ret
movsb
imul
outsb
arpl
push
mov
sbb
xchg
cwtl
movsl
les
pop
das
and
cmp
mov
aad
cli
and
push
sub
mov
add
xchg
test
push
out
jp
stos
sub
mov
scas
adc
gs
sbb
lods
rcr
pop
adc
xlat
xchg
push
dec
fbstp
and
cmp
push
lea
scas
pop
ds
xchg
cwtl
ficompl
lret
arpl
mov
or
pop
xorl
dec
dec
in
in
cmpsb
es
sub
sbb
aas
jnp
and
aaa
cmpsb
mov
lahf
push
jne
test
loope
inc
in
dec
cmp
arpl
push
decl
leave
hlt
mov
pop
push
call
sbb
addr16
stc
movsb
std
xor
ficomps
aas
mov
or
xor
push
mov
push
and
pusha
loop
lahf
adc
stos
sbb
push
hlt
cld
adc
jnp
icebp
outsl
push
pop
dec
and
in
cld
mov
rcr
loop
hlt
xor
xchg
outsl
jno
add
mov
dec
ds
or
adc
enter
lea
out
push
jae
sbb
mov
loope
xlat
nop
and
pop
fiadds
and
dec
pop
sbb
bound
loop
and
dec
xor
mov
ss
pop
fiadds
mov
mov
sub
data16
xchg
jnp
movsl
enter
dec
adc
or
push
push
in
stos
cmpsb
push
cld
mov
mov
int
pop
or
jbe
fisubl
jo
pop
movsb
pop
cld
loop
jbe
out
imul
push
loop,pn
add
movsb
ret
inc
push
enter
cmp
cmp
cwtl
and
push
pop
jmp
cli
int3
fnstsw
or
sbb
std
sub
mov
leave
fsubr
outsl
jle
aaa
shl
mov
jl,pt
rcrb
push
mov
in
in
sbb
mov
cmc
cli
cli
js
mov
xchg
and
or
stos
lret
les
pop
pop
sbb
in
cs
stc
bound
pop
in
int
leave
fsin
in
and
inc
test
lods
subl
mov
dec
mov
mov
js
ret
sbb
es
ljmp
ret
es
xchg
insl
mov
mov
lods
adc
lock
push
adc
jmp
outsb
mov
add
call
add
aam
movsb
aaa
xor
rcl
and
stos
int
addr16
push
cwtl
adc
push
pop
out
xor
out
or
dec
push
xchg
mov
mov
and
sub
cmp
xorb
and
jns
mov
cmpsl
push
mov
test
and
cmc
movsl
icebp
test
stos
hlt
dec
cmp
fildll
sbbl
xchg
mov
pusha
sarb
call
inc
mov
inc
mov
ss
sub
ror
xchg
jbe
fsubrs
lods
and
mov
mov
arpl
jnp
cwtl
sub
push
pop
pop
ds
sti
jb
fsubr
test
outsl
outsb
cmpsb
push
mov
repz
ja
xchg
pop
insb
test
sti
add
or
fdivrs
sbb
bound
or
xchg
loop
sub
into
mov
fidivrs
jo
jb
aaa
mov
pop
out
cmp
hlt
stos
pop
dec
ljmp
dec
inc
popa
mov
mov
jo
hlt
sub
mov
inc
addr16
into
dec
jo
add
jo
cmp
add
push
inc
sub
imul
cmp
mov
adc
xor
mov
add
aaa
pushl
xor
test
push
addl
sub
test
fisubrl
stos
cmp
xor
pand
pop
lret
inc
mov
cmc
jo,pt
rolb
mov
dec
and
and
xor
sbb
and
in
insb
out
shl
and
push
jmp
lods
icebp
scas
popa
popa
bsr
sbb
jle
sub
std
mov
mov
ficoms
dec
stos
shl
add
adc
sbb
or
mov
and
sbbb
add
leave
rorl
inc
sahf
jns
in
push
push
loopne
shlb
and
cmp
mov
mov
out
idivb
xchg
test
int
mov
imul
mov
xor
les
mov
ljmp
mov
into
inc
lds
popf
mov
lcall
or
insl
nop
push
loope
cltd
test
sahf
cmp
sbb
add
push
inc
test
fwait
negl
sbb
inc
data16
jmp
call
adc
cmp
movsb
mov
outsb
pop
iret
jb
push
mov
sarl
jbe
and
popa
or
std
leave
scas
jge
push
pop
xchg
or
leave
hlt
popf
lock
lods
lock
pusha
pusha
mov
mov
movsl
je
test
idivl
popa
out
and
cs
cmp
mov
shlb
subl
xor
movsb
out
fwait
inc
jecxz
imul
or
inc
dec
mov
subl
mov
icebp
xchg
pop
mov
push
mov
pop
and
mov
pushf
loop
jp
clc
sub
push
lcall
int
popf
and
jae
push
lret
mov
jmp
mov
int3
sub
int3
adcl
jae
cmpsb
sub
inc
rclb
ret
xor
test
jmp
pop
outsb
cmpb
stos
mov
mov
arpl
adc
andb
inc
adc
jp
in
dec
push
bound
xor
gs
lea
cmc
leave
xchg
sub
int
test
dec
flds
int3
lcall
fucomi
sti
adc
mov
pop
jl
lcall
addb
pop
xor
jl
nop
xor
mov
fildll
ja
mov
or
jae
insb
xchg
cmpsl
mov
push
fcmovnb
jl
push
push
or
xor
xchg
js
fsub
adc
cmp
mov
hlt
lock
mov
test
shll
inc
mov
scas
xor
sbb
gs
mov
in
shlb
popa
add
pop
pushf
orl
jl
cmp
mov
mov
aaa
sarb
cmpsb
push
add
fcoms
add
add
loop
aad
jle
lret
and
mov
mov
pop
inc
jge
sub
int
rol
push
cmp
pushf
mov
imul
rorb
xchg
xor
lahf
std
inc
pop
cmp
xchg
adc
xor
sub
ds
xchg
mov
mov
icebp
test
cmp
adc
xor
lds
sahf
push
mov
push
pop
lods
mov
fmul
sub
mov
jnp
sbb
je
jg
cmc
cmp
shll
insl
xor
lods
jnp
xor
adc
mov
sub
clc
mov
fimuls
pop
rcrl
out
bnd
pop
out
jp
movsl
out
sub
mov
mov
or
dec
ja
fildll
fstpl
mov
lcall
ret
mov
in
aad
jg
lcall
fnstenv
jmp
jns
repnz
rcll
mov
scas
mov
pop
push
xor
and
out
loop
sbbl
pop
pop
ret
fadds
xchg
hlt
jg
xor
dec
stc
pop
loope
sarb
shll
or
pop
jle
sbb
dec
pop
mov
fs
add
pop
sti
outsb
pop
mov
sub
adc
mov
pop
or
pop
cmpsl
inc
mov
adc
cmp
cmp
jle
mov
xor
or
filds
mov
js
mov
xor
sbb
cli
and
fmuls
xchg
jge
xchg
cmp
mov
pop
cmc
cltd
loopne
jo
and
shlb
dec
hlt
add
insl
shll
outsb
push
xchg
sub
ljmp
push
xor
dec
inc
rcrl
mov
pop
insb
mov
rclb
mov
xor
mov
xor
jecxz
pop
loope
iret
sub
cmc
enter
adc
arpl
shr
ret
out
lret
mov
mov
dec
cld
lahf
mov
push
inc
lods
pusha
clc
insb
sub
inc
mov
jl
or
jp
pop
inc
add
jmp
mov
cmc
mov
push
dec
xchg
iret
test
xor
pop
inc
jl,pt
sbb
sbb
and
arpl
adc
mov
clc
insl
js
sbb
fwait
push
xor
insb
xchg
icebp
int
adc
jns,pn
sub
scas
bound
shll
rclb
lods
dec
mov
adc
adc
jnp
popa
fcoml
add
popa
dec
mov
add
pop
xchg
and
cli
xor
addr16
test
fildl
iret
dec
filds
push
into
loop
mov
into
outsl
loopne
repnz
cs
inc
xchg
and
and
daa
push
xchg
xchg
das
ret
jbe
jecxz
icebp
repz
hlt
ss
adc
mov
jge
xlat
xor
orl
lea
loope
roll
push
sub
ret
in
pop
vpsubw
pop
fxch
xchg
repz
int
fadd
in
cmp
mov
xor
not
push
dec
sbb
cmp
lds
ja
lods
xor
lods
testl
push
loope
jmp
adc
mov
add
add
stos
mov
push
mov
and
jbe
int
shufps
iret
imul
add
les
inc
or
gs
shr
loope
cmp
inc
sti
xor
xchg
adc
gs
in
ljmp
and
popl
jecxz
clc
ljmp
lret
mov
mov
or
popa
mov
pop
inc
pop
roll
jnp
xchg
imul
mov
or
je
lock
pop
lds
test
adc
lcall
add
stc
dec
xchg
mov
mov
adc
mov
sub
pushf
xchg
push
mov
pop
mov
push
in
cmc
shrl
sbb
scas
cmp
lods
cli
inc
mov
mov
scas
cmpsb
loop
aaa
dec
mov
std
sub
aaa
inc
loop
xchg
pop
out
jae
rcpps
in
sub
push
jns
cli
push
xor
ret
fcoml
outsb
pop
push
sub
jbe
cwtl
test
pop
add
pop
pop
test
inc
mov
dec
xor
inc
scas
ja
in
xchg
push
imul
mov
push
adc
cs
or
mov
adc
imul
outsl
inc
sahf
sub
imul
xor
fs
push
vunpcklpd
adc
sbb
pusha
add
push
imul
sub
std
movsl
add
sbb
or
push
daa
push
lods
cld
xchg
push
mov
sub
int3
aas
cmp
jnp
lret
call
push
ficomps
addb
push
emms
jge
mov
lock
mov
xchg
nop
rclb
pusha
jg
in
dec
fisubl
pop
popa
sub
out
xor
sahf
mov
add
addl
fsubrl
dec
inc
in
pop
icebp
mov
lret
movsb
jecxz
sbb
lahf
jne
scas
pop
mov
iret
aad
xor
add
mov
out
je
into
test
pop
les
pushf
ljmp
xchg
xchg
cmp
aaa
ljmp
test
or
pop
pop
mov
into
push
jge
mov
in
imul
orb
dec
add
jb
mov
inc
out
xchg
sbb
addr16
ljmp
xchg
add
loopne
movsb
push
xchg
or
cs
hlt
dec
into
jecxz
jno
int
or
arpl
xor
jo
lock
in
jp
jb
inc
mov
inc
cmpsl
sub
movzbl
call
jmp
and
cmp
xchg
loop
and
outsb
xor
fsubrl
mov
cwtl
cs
jb
push
mov
sub
les
div
sub
cmp
add
out
sub
xchg
jl
subb
movsl
mov
pop
je
add
pop
enter
jns
cmp
push
iret
lahf
pop
leave
cltd
xadd
and
sbb
xchg
call
sub
xlat
cltd
movsb
outsl
mov
fnstenv
movsl
cltd
sub
xor
je
mov
push
fsubrl
jg
cwtl
mov
aad
stos
stc
stc
imul
and
into
sub
push
pusha
add
mov
sub
out
cwtl
les
mov
cmp
mov
xchg
addr16
in
ret
cmp
and
shll
stos
inc
f2xm1
daa
jl
pushl
scas
cmpl
pushf
jge
scas
ja
pop
idivl
add
scas
lods
xchg
sbb
push
cmpsb
loop
fs
cld
cmc
enter
mov
shll
cmp
nop
aas
jne
les
push
jp
xchg
lods
sub
fimull
cwtl
pop
xchg
test
xchg
sbb
adc
sbb
fistps
adc
into
inc
lret
ficomps
ljmp
inc
ret
pop
jle
push
push
and
pop
xor
jg,pt
scas
adc
scas
fwait
test
pop
jmp
iret
sub
lahf
or
inc
pop
sahf
stos
lods
sub
aad
fs
inc
rorl
mov
jns
pop
xor
rolb
lds
lods
cld
test
and
cmpsb
pop
cmc
dec
sti
cmp
dec
out
int
fs
and
xor
mov
adc
pop
mov
gs
xchg
jae
sbb
inc
cli
pop
dec
in
mov
icebp
push
ss
push
aam
push
add
sbb
add
and
movsb
in
jae
xchg
xor
gs
add
daa
mov
push
add
inc
es
cmpb
ljmp
fstpt
js
mov
and
sub
sbb
add
aam
divl
leave
mov
ss
stos
loopne
stos
push
push
les
fistl
out
push
jb
lret
shr
insb
xchg
mov
add
xchg
mov
sub
jge
push
cmp
push
mov
and
ret
bnd
shlb
pop
fsubrp
xchg
and
sbb
cmpsl
lea
ret
sar
push
adc
aas
and
cmc
fdivrl
sub
fidivrs
fisttpl
cwtl
ds
and
mov
imul
cmc
lods
sub
in
mov
es
mov
cmp
ret
fbstp
jg
scas
mov
out
sarl
fnstenv
clc
call
ret
jae
add
mov
shll
xorb
cmp
stc
pop
jbe,pt
push
or
mov
cwtl
xor
outsl
mov
shlb
lds
in
mov
in
sbb
push
out
mov
fnstenv
mov
push
xchg
clc
roll
jmp
movsb
jmp
fidivs
xor
not
scas
filds
inc
dec
push
ss
xor
jne
ljmp
or
fsubrs
test
rolb
rcrl
subb
push
mov
and
hlt
call
or
shl
enter
inc
and
cmp
iret
imul
pop
repz
mov
push
push
outsb
jnp
repz
mov
popa
les
push
leave
jno
jno
or
dec
xchg
bound
sarl
repnz
std
dec
iret
jmp
jmp
mov
xor
add
or
btc
mov
mov
inc
or
dec
daa
adc
sub
pop
decl
movsb
std
sbbl
push
fisubrs
sub
inc
mov
pop
and
adc
test
xorb
lcall
insl
or
mov
lahf
ljmp
test
test
leave
andl
ljmp
push
inc
les
sbb
mov
lret
xor
rcr
pop
pop
cmp
out
dec
dec
xor
scas
shlb
in
mov
pop
pop
sbb
jno
jae
adc
and
adc
adc
addb
inc
fisttpll
negl
into
mov
and
mov
rcrl
iret
xor
push
inc
push
adc
jo
mov
aas
lcall
nop
cmc
mov
mov
dec
jmp
icebp
loop
call
mov
sub
inc
inc
or
nop
mov
jb
mov
daa
mov
test
cmc
or
inc
pushf
loopne
or
or
cmp
xlat
lods
push
jae
fbstp
push
insb
lods
push
push
in
negb
out
loopne
xchg
cmp
pop
mov
dec
out
cli
mov
fnsave
test
mov
movsl
push
or
push
pmaddwd
xchg
dec
movsb
loope
xchg
xchg
enter
inc
cmp
iret
in
push
pop
inc
rcr
jne
jo
sub
mov
outsb
jmp
sbb
aas
and
push
int
movsb
cli
add
cmpsl
int3
lcall
ror
add
xchg
push
fcompl
aam
cmp
aam
rorl
dec
adc
call
push
imul
aad
sub
in
pop
mov
inc
fcompl
hlt
jmp
and
push
sbb
sbbl
inc
pop
mov
xor
stos
jo
cltd
pop
cmp
sbb
imulb
inc
std
shr
insl
aas
inc
sub
loope
sub
scas
lock
aas
xlat
movsb
paddsw
stc
mov
sbb
lds
mov
fisubrl
outsl
mov
mov
jg
mov
mov
hlt
jl
and
aad
fsubrl
cmp
dec
sbb
cmpsb
std
push
add
add
jne
cli
add
xchg
mov
sbb
mov
or
lea
out
mov
pop
repz
lahf
xor
mov
push
in
add
leave
pop
ljmp
mov
and
daa
es
mov
or
inc
in
repnz
lretw
clc
cmp
seto
mov
adc
aad
mov
mov
push
or
clc
inc
adc
jae
fistps
adcb
xchg
inc
xchg
jno
sub
add
inc
ret
mov
jbe
insl
icebp
fsubl
es
xchg
fisubrs
lret
mov
rcrl
push
cmp
adc
jns
fisubl
sbb
inc
and
cmp
jnp
push
in
fldenv
xor
inc
mov
cs
imul
cmc
xchg
sbb
adc
or
jg
cmp
sub
sahf
and
fisttps
push
bound
xor
outsl
fs
sub
lea
mov
mov
dec
nop
mov
outsb
cmc
pop
pop
test
xlat
mov
adc
push
insb
std
sbb
je
sbb
push
push
lds
sub
insl
pushf
sbb
ljmp
adc
xor
cmp
test
or
cmp
data16
mov
xlat
cmp
fmull
jae
sbb
lods
mov
sbb
pop
in
mov
jae
mov
inc
fbstp
cwtl
add
daa
dec
popa
add
pop
sahf
popa
stos
adc
cltd
add
lahf
sbb
pop
in
cmp
push
punpckhdq
sbb
fisttpl
jp
loope
and
jnp
leave
loopne
lahf
mov
fbld
cwtl
sub
sub
and
movsb
das
adc
cmp
mov
shl
jl
inc
shll
jecxz
sbb
cwtl
pop
and
mov
xlat
mov
repz
pop
xor
pop
in
sarb
cmp
mov
jbe
pop
out
rorb
jnp
or
data16
iret
in
pop
pop
mov
fdiv
in
and
or
js
imul
adc
xchg
or
push
inc
cmp
mov
jnp
test
pop
mov
lea
push
mov
or
sbb
or
mov
inc
xor
test
insb
and
addb
inc
and
in
ret
int3
jnp
das
pop
cs
scas
sbb
sub
aad
hlt
sub
aam
leave
add
push
nop
mov
jge
cli
adc
xchg
inc
add
outsl
scas
mov
jno
rorb
mov
repz
cmp
les
loopne
push
cli
rcl
push
mov
nop
pop
cli
fmull
mov
in
xorl
imul
push
enter
popf
pop
ror
in
mov
inc
lcall
mov
adc
hlt
sub
fwait
push
adc
outsb
push
jae
mov
and
gs
dec
enter
pop
push
push
cmp
orb
loopne
adc
dec
cltd
sbb
lock
das
xchg
xor
adc
lret
lock
mov
cmp
popa
jno
cmp
divl
xchg
mov
fdivs
jg
mov
mov
xor
imul
loope
cltd
pop
lds
and
int3
scas
mov
lcall
in
jge
mov
fistl
cmp
xor
or
xor
insb
out
lods
lea
and
push
mov
sbb
movsb
inc
xor
int3
inc
fdivrp
mov
or
mov
ud0
pop
xchg
sbb
fsubl
loopne
mov
pop
mov
aad
jp
sti
and
lcall
jo
fists
leave
iret
test
xor
shrb
mov
mov
ficompl
aas
or
das
hlt
xor
pushf
xchg
adc
cmpsb
test
insl
cltd
push
mov
mov
or
push
pop
mov
aad
stc
jns
push
cmp
cltd
test
mov
out
test
mov
jp
sbb
pop
mov
imulb
mov
cmp
or
cmc
shll
daa
sbb
pop
inc
arpl
rorb
pop
mov
je
ss
insl
nop
ret
out
push
loop
adc
dec
cmp
inc
aam
add
jbe
xor
and
push
push
icebp
adc
repz
mov
jl
sbb
ljmp
or
lret
popa
push
mov
mov
cld
mov
dec
sub
mov
sub
jle
push
mov
clc
mov
test
adc
pop
dec
mov
xor
out
push
sub
push
ret
mov
int3
ret
movsb
xor
xchg
ja
clc
insb
cwtl
mov
repnz
adc
test
or
jl
test
leave
leave
xchg
push
popf
shll
mov
jnp
outsb
mov
imul
push
dec
sbb
sub
loope
sbb
sbb
stos
dec
sbb
xchg
sub
movsb
or
fwait
add
mov
fs
stos
mov
call
push
out
in
dec
mov
test
mov
insl
xchg
sbb
rorl
popa
push
sub
rorb
mov
or
into
test
adc
cmp
imul
es
test
xor
mov
bound
shll
xchg
xchg
neg
push
xor
fst
lods
cmp
vmread
comiss
mov
add
cmpsb
push
xchg
dec
xchg
dec
pop
dec
sbb
xlat
mov
stos
ss
arpl
idivb
and
adc
shr
inc
lds
sub
cmpsl
mov
jge
xor
adc
rolb
jae
movsl
rorl
jo
xlat
jae
pop
fs
fisubrs
pop
pop
orb
pop
push
inc
lret
sub
cli
fwait
xorl
sahf
inc
cmpsl
btr
dec
xor
mov
pop
xor
frstor
orb
loopne
imul
lods
mov
in
jnp
imul
icebp
mov
out
mov
ja
or
pop
aad
push
sub
mov
pop
iret
push
aaa
scas
aas
inc
xor
adc
std
test
add
das
scas
bound
inc
sub
leave
outsb
sub
jno
mov
ljmp
mulb
lods
xor
mov
fstl
fwait
sub
and
cmpsb
or
fistpll
sbb
imul
pop
jg
pusha
fwait
jge
xlat
sahf
iret
cmp
outsl
movsl
lahf
xor
jmp
sub
and
xor
nop
push
call
mov
push
inc
iret
cwtl
in
add
add
mov
pop
nop
inc
sub
lahf
outsl
jns
mov
fxch
enter
mov
push
push
mov
inc
rcrb
mov
mov
stos
xchg
push
loope
in
sti
js
cmp
mov
pop
push
mov
sti
and
jbe
mov
sub
adc
mov
sub
pop
aaa
loop
xchg
adc
sbb
je
out
mov
mov
add
call
mov
les
test
enter
xlat
aad
jmp
insl
scas
aas
aam
repnz
loopne
fdivs
imul
adc
call
xchg
xchg
jmp
into
xchg
mov
pop
or
push
gs
xor
or
or
mov
into
sbb
out
jbe
add
int3
inc
xchg
loop
jp
stos
mov
ljmp
inc
sarb
or
push
xchg
out
and
orb
push
cmp
fsubs
pop
dec
mov
sbb
js
mov
jp
cmpsl
cli
sbb
jmp
jnp
pop
pop
aad
adc
shrb
pop
ficompl
add
les
popa
sar
xchg
dec
addr16
mov
sub
pop
movl
scas
aas
fidivs
mull
fisttpll
push
pop
xchg
js
push
jno
repnz
and
or
shrl
and
xchg
jb
fstpl
push
aaa
sub
push
xchg
sbb
popf
pop
lods
jae
sbb
cmc
cmpsl
pop
xchg
cmp
dec
les
xchg
dec
or
popa
lret
jle
add
pop
je
ja
dec
xchg
jns
jno
lods
push
addr16
add
inc
jno
cmp
mov
adc
mov
stos
and
xchg
shl
aaa
mov
leave
add
outsb
adc
stc
cmp
outsb
jmp
minps
pop
mov
pop
sbb
and
repz
or
xchg
lea
mov
pop
and
je
aaa
jmp
jle
test
fcmovnbe
and
test
mov
mulb
adc
jnp
sbb
punpckhbw
iret
adcb
push
cltd
xchg
test
lcall
fldl
mov
jmp
sbb
sbb
subb
sub
mov
enter
bound
insb
push
mov
mov
xchg
add
bswap
ljmp
sarb
aad
fstl
add
adc
push
jns
lret
imul
pop
jns
insb
repz
inc
xlat
popfw
fwait
adcb
push
xor
adc
fwait
test
aaa
dec
jbe
ljmp
dec
lea
movb
out
std
add
xor
cmp
fldt
lcall
mov
test
insb
and
loop
push
ret
inc
movsb
cmp
inc
out
jbe
jge
pop
cmpsl
jnp
cld
stos
lcall
mov
and
call
push
sub
mov
loop
and
mov
add
pop
outsl
pop
mov
jae
test
ret
dec
int3
arpl
or
arpl
mov
pop
xor
push
xchg
in
clc
shlb
das
xorb
loopne
lcall
cmp
icebp
out
std
mov
xchg
mov
aaa
or
lea
outsb
push
adc
cltd
insl
in
adc
sbb
mov
sbb
pop
jg
push
mov
ffree
les
clc
iret
je
ja
repz
push
mov
hlt
cs
mov
call
adc
js
fisubs
xchg
mov
cmpsl
imul
fs
push
fiaddl
test
pop
pop
repz
js
call
inc
sbb
ror
dec
cmovnp
push
and
dec
adc
push
mov
pop
xlat
add
out
lods
push
std
adc
mov
push
out
inc
stos
add
jl
pop
push
or
les
mov
and
clc
jne
jnp
cmp
jne
mul
sub
mov
fildll
push
aad
dec
dec
mov
push
jo
mov
repnz
pop
aam
test
push
dec
inc
int3
cmp
xor
push
dec
adc
dec
addr16
sbb
in
cmc
jne
cltd
mov
add
data16
jmp
mov
inc
ds
cmp
mov
mov
xlat
jmp
ljmp
out
mov
loopne
inc
push
add
push
or
push
nop
push
ret
testb
inc
jae
test
sbb
and
mov
adc
bound
cmp
pop
inc
jmp
sub
aas
sub
lea
xchg
sbb
push
sbb
sbb
int3
xor
scas
dec
push
cli
outsl
jge
mov
inc
dec
add
lods
lret
pop
inc
adc
dec
sbbl
jmp
inc
cmp
mov
pop
xorb
pop
dec
and
in
lea
add
mov
sbbl
xchg
mov
push
stos
push
mov
push
mov
mov
and
insl
notl
mov
mov
hlt
sbb
sub
or
add
loopne
lret
push
jmp
mov
push
dec
xor
mov
sub
aaa
jmp
mov
adc
test
push
lret
call
xor
ss
xchg
lock
ds
repz
inc
insl
lret
pop
pusha
cmp
adc
test
xor
cld
mov
jb
loopne
push
jl
insb
scas
fiaddl
ret
inc
scas
cmp
inc
repnz
push
jb
dec
pop
cmc
std
pop
inc
ss
cmp
aas
aad
mov
mov
dec
xor
dec
and
cmpsb
fiaddl
fsub
push
jne
add
jne
js
addb
shrb
popf
fistpl
call
test
pop
les
or
jb
sbb
pop
fs
cmp
push
mov
dec
mov
lods
jle
sbb
and
dec
cmp
lret
xlat
sub
shl
scas
pop
lret
sti
jb
xchg
into
push
mov
add
subb
repz
sub
fwait
lret
out
dec
iret
mov
jmp
xchg
fcompl
loope
sbb
out
pop
sub
add
mov
repnz
fldcw
clc
jmp
aad
pop
test
lahf
clc
les
mov
pushf
dec
pushf
mov
push
pop
aas
and
imul
outsb
divl
mov
rorb
add
lods
xchg
mov
dec
dec
xor
jae
cmc
test
sbb
xlat
fcmove
nop
sub
ljmp
xchg
arpl
adc
push
lods
sub
daa
xor
iret
stos
jmp
mov
and
cmp
xlat
jecxz
sbb
jno
into
xor
xor
xchg
int
xchg
jbe
daa
test
clc
mov
call
movsl
pop
aas
lea
lcall
cmp
push
sub
fmull
and
cs
add
xchg
and
and
fdivr
xor
stos
test
adc
leave
mov
lods
push
inc
mov
mov
mov
cmp
stos
add
lahf
inc
xor
add
mov
jne
into
in
mov
rorb
sub
sbb
and
movsl
fstps
in
daa
fstps
das
sbb
daa
testl
and
xorl
push
pop
mov
scas
ficoml
negl
dec
xor
lock
jp
push
xchg
push
jnp
outsl
daa
jl
pop
xor
or
mov
inc
loopne
cmp
out
dec
repz
push
mov
iret
fmull
or
stc
mov
sbb
xor
add
int
sub
enter
inc
icebp
pop
push
and
push
fldenv
sbb
insl
sti
lods
es
push
mov
mov
add
xor
mov
sub
std
loop
xor
int3
fisubs
or
mov
lahf
imul
xchg
inc
adc
repnz
rcrb
test
pop
inc
push
cmp
test
or
fwait
adc
cld
faddl
addr16
cmp
cmp
insb
mov
es
lods
jae
mov
aas
sub
pushf
ret
jp
or
test
sub
adc
xor
pop
pushf
movsb
push
xchg
adc
out
aad
pop
dec
jns
mov
push
cmpl
andb
jge
mov
xchg
inc
push
addr16
movsb
test
xchg
repz
dec
push
xchg
loop
cmp
js
clc
mov
and
inc
aas
ret
sar
jno
lret
mov
xchg
adc
xlat
dec
gs
fs
imul
mov
cmp
dec
mov
cmp
push
push
jle
inc
inc
push
es
mov
cmp
push
lods
lret
jmp
mov
mov
adc
mov
cmp
in
data16
rcrb
daa
xchg
inc
adc
enter
xchg
adc
es
dec
xchg
inc
out
xchg
jecxz
and
inc
cltd
push
ficoml
push
and
sbb
cmp
lods
mov
pop
dec
xor
dec
pusha
xlat
adc
xor
push
and
jle
pop
xor
out
mov
push
lret
pop
mov
ja
push
fwait
popa
dec
movsb
push
fnsave
mov
pop
mov
and
mov
lock
cmp
repnz
adc
cmp
lods
sbb
fisubl
push
add
inc
mov
jns
or
mov
scas
jg
push
xor
ficompl
cmpsl
lret
mov
jmp
add
ljmp
mov
or
inc
scas
iret
clc
mov
push
adc
jns
inc
lock
cmpsb
clc
and
clc
clc
mov
dec
pop
fwait
pop
movsl
sub
cmp
rorl
das
int3
es
fwait
daa
adc
or
movsl
xor
sub
addr16
imul
in
mov
dec
and
fsubrl
add
jecxz
push
dec
adc
jecxz
cld
repnz
cmpsb
push
mov
out
leave
cmp
xlat
mov
push
test
lods
xor
fsubrs
popa
sahf
aas
inc
ret
mov
movsb
sbb
cmc
into
fs
int3
sbb
cmp
push
leave
mov
int3
ret
push
lahf
mov
lahf
inc
pop
mov
pop
mov
add
dec
cmp
dec
sbb
mov
jo
aam
fmull
das
addb
pop
dec
mov
aam
jecxz
outsl
xchg
jb
andb
int
mov
mov
xlat
jae
xchg
pop
xor
aad
adc
xchg
mov
repnz
mov
push
dec
loop
or
and
or
xor
mov
mov
mov
jge
mov
inc
insb
fildl
in
add
push
add
das
in
sbb
loop
mov
xchg
lods
xlat
and
or
jo
gs
cmpb
xchg
aad
insl
mov
adc
mov
cwtl
rorb
test
lock
add
add
mov
push
cmc
sub
adc
pop
xchg
nop
sub
push
pop
xchg
js
addr16
jecxz
out
pop
or
sub
js
lods
mov
mov
out
sub
enter
rolb
sbb
push
or
test
cmpsl
imul
xchg
cmpsl
push
push
in
fldenv
pusha
add
std
add
jmp
dec
daa
jns
sub
or
aad
int
test
jns
cmpsb
pushf
movsb
outsl
andb
mov
mov
pop
gs
dec
cmpsb
inc
xor
stos
stos
mov
or
or
lret
sbb
cli
int3
and
scas
rorb
mov
sub
inc
std
xchg
outsb
lods
pop
xor
dec
sbb
or
push
mov
test
ss
andl
push
sbb
jae
or
cmpsb
incb
scas
pop
or
addr16
xor
cld
shll
xor
sar
std
popa
inc
inc
shr
dec
push
pop
movb
mov
insb
icebp
mov
fsubrl
sti
cmp
and
push
sarl
hlt
adc
lock
in
aas
xchg
sbb
daa
fnstsw
call
mov
xor
nop
ss
inc
cmpsl
push
lods
aad
xchg
jae
add
js
arpl
ficompl
ror
dec
jb
aad
dec
mov
addl
mov
ror
popa
cmp
je
push
inc
cmp
jae
push
mov
dec
add
bound
leave
insl
sub
dec
ret
jno
scas
loope
les
fsub
mov
clc
and
incl
loopne
mov
push
pop
sbb
sbb
dec
mov
mul
loope
repz
xchg
sub
jge
lret
push
adc
xchg
push
pop
fsin
push
push
push
popf
repz
repnz
movsb
lods
or
mov
jecxz
or
vmovdqu
xor
or
push
sub
sbb
and
adc
pop
or
pushf
repnz
stos
out
ret
mov
aaa
sub
mov
lret
imul
sub
inc
insl
daa
cmc
mov
sti
clc
ja
xor
insl
insl
mov
jo
cmc
and
push
mov
mov
daa
mov
outsl
xchg
sub
pop
lahf
jno
mov
sub
cmp
scas
aas
orl
cmp
push
dec
sbb
and
mov
cld
ret
popf
inc
cmp
fcmovnb
dec
push
sarb
out
mov
ret
mov
cmp
in
mov
push
inc
add
ljmp
dec
gs
movsb
js
out
scas
icebp
dec
push
mulb
jg
loop
xlat
rolb
in
cwtl
mov
push
shrl
sti
aaa
mov
stos
test
icebp
dec
sbb
or
roll
or
and
ret
xlat
scas
adc
stos
lods
aaa
ljmp
out
in
hlt
lock
mov
xor
stos
pop
sbb
mov
sbb
enter
fsubl
pop
push
lock
pop
jno
jmp
sub
cmp
jge
and
cmp
cmp
add
mov
and
imul
cmp
mov
scas
leave
push
and
rclb
mov
xchg
dec
mov
aas
scas
mov
daa
push
xlat
dec
cmp
mov
add
pop
popa
js
cmp
test
fcoms
mov
imul
cmp
adc
imul
xorl
or
loopne
push
imul
cmp
arpl
add
bswap
xchg
aaa
shll
pop
mov
xchg
insl
in
addr16
loopne
pusha
test
xor
xchg
sahf
in
pushf
pop
add
cmp
out
test
jb
inc
jbe
cmpsl
outsl
mov
dec
xchg
mov
sbb
popf
sub
and
push
mov
sbb
popa
push
jns
xchg
adc
mov
out
sti
sub
out
jno
add
or
add
cmp
or
cmp
dec
stc
pop
in
mov
and
js
push
inc
sub
mov
pop
fwait
jne
jmp
ficomps
xor
leave
sbb
jmp
inc
xlat
jne
ds
or
cmpl
cmp
rcrb
rcr
jb
orb
test
push
movsl
mov
mov
int3
or
cmp
ret
subb
adc
clc
repz
aad
je
and
test
insl
dec
mov
push
cmp
fmul
mull
iret
mov
pop
jbe
fcmovbe
lock
mov
push
pop
jnp
ffreep
pop
jmp
ljmp
cmc
lret
jo
mov
push
cmp
pop
mov
scas
testl
sarb
mov
jg
push
ja
in
add
and
mov
push
cmp
popa
cld
push
in
sti
lods
subl
dec
cwtl
push
xor
cmpsl
xchg
in
or
and
sub
push
in
sahf
lcall
daa
mov
push
push
ret
fisubrl
or
sbb
xchg
add
sbb
scas
push
jle
adc
sub
mov
inc
jae
xchg
xchg
leave
cld
aas
and
sub
mov
pop
fstpl
push
shl
xor
sbb
mov
jmp
pop
xchg
js
call
cmp
das
stos
arpl
pop
faddl
mov
xor
cltd
test
clts
in
test
pop
and
pop
inc
fs
test
cmpsl
xchg
lret
xor
sbb
lahf
jnp
mov
iret
mov
idivb
lock
insb
xchg
mov
dec
in
sbbb
xor
pop
mov
or
inc
mov
stos
push
ds
add
push
adc
pop
fsubr
mov
sub
pop
cld
pop
mov
cltd
imul
jno
push
sub
dec
cmp
xchg
push
dec
pusha
fincstp
mov
test
cli
stos
xchg
pop
and
adc
sub
lret
push
fwait
movsl
rorl
jmp
lock
loop
inc
xor
mov
shrl
mov
cmp
scas
cli
mov
aad
iret
pop
inc
dec
push
inc
mov
push
mov
cmp
and
rol
hlt
js
inc
push
sbb
adc
loop
sbb
imul
sbb
lahf
and
xchg
ljmp
sbb
lret
xor
les
fwait
and
arpl
cmp
add
int
test
test
mov
xchg
dec
aaa
sbb
daa
pop
adc
inc
xor
or
lret
lea
pop
pop
scas
std
cmpl
addr16
into
popf
xor
pop
and
sti
sbb
jp
jae
jp
push
scas
mov
leave
inc
or
es
mov
pop
push
stc
lock
loopne
pushf
sbb
add
adc
jae
inc
mov
mov
inc
cmp
xchg
push
mov
mov
or
xchg
mov
gs
cld
and
jge
mov
andb
fnstcw
mov
cltd
adcl
xor
loopne
pavgb
pop
pop
push
popf
or
mov
idivb
dec
movsb
pop
rorb
lret
pop
bound
adc
scas
roll
rorb
inc
mov
cs
sub
daa
imul
js
outsb
sbb
fbld
jne
jnp
jmp
lret
arpl
push
mov
pusha
sub
icebp
add
mov
ljmp
and
cmp
inc
inc
test
std
icebp
cli
xor
sbb
sbb
jg
mov
dec
inc
decl
jns
or
pop
mov
cmc
mov
jmp
and
shlb
xlat
xchg
cmp
sbb
orl
mov
cmp
lret
and
inc
jmp
movsl
popa
mov
out
cmp
inc
pop
rcr
xor
cmp
dec
ja
dec
fcmovnb
dec
jmp
stos
arpl
jne
mov
xchg
dec
xchg
bound
lcall
or
cs
jae
jecxz
test
pop
mov
add
sbb
repz
stos
jle
cmpsb
into
xchg
dec
pop
lds
add
clc
and
sbb
push
cmp
jg
insb
popa
pop
dec
cld
sbb
xchg
sbb
cmp
lahf
sub
sbb
mov
lds
xchg
jo
pusha
or
fiadds
mulb
lea
dec
xor
push
movsb
and
mov
repz
cwtl
iret
insl
stos
xor
inc
or
repnz
mov
out
aad
inc
inc
mov
sti
sahf
sahf
jo
ret
jmp
xor
or
lock
dec
mov
es
mov
lahf
xor
xchg
inc
jb
jl
mov
push
xor
aad
fdivr
mov
dec
jmp
jns
sbb
add
popf
mov
xor
pop
cmp
jge
adc
pusha
mov
dec
adc
push
imul
repz
iret
cmp
mov
imul
push
ret
je
popa
insb
jl
fwait
sub
mov
sbb
mov
xor
lret
insl
xorb
sbb
mov
andb
push
jne
aad
call
pop
cmp
int
pop
push
sub
jne
lods
mov
xadd
lahf
scas
iret
lods
subb
and
push
adc
sub
cmp
jns
jmp
mov
mov
pop
dec
mov
stos
lock
hlt
adc
test
dec
fucomip
add
and
divb
hlt
pop
lea
mov
and
cmp
xor
insb
pop
adc
push
jo
cld
sarl
inc
sti
aas
fcomi
test
roll
pop
imul
adc
outsb
fmuls
add
jle
hlt
xchg
or
adc
adc
mov
adc
and
aam
fcmovb
jno
lock
cs
fsubrl
iret
rcll
pop
adc
les
jo
in
sub
inc
mov
scas
push
in
lcall
mov
repnz
jae
pop
das
xchg
and
jmp
push
pop
sbb
mov
sbb
xchg
sti
lret
dec
dec
test
mov
fists
cmpsl
gs
jg
or
mov
cli
sbb
sub
xlat
dec
loope
icebp
mov
dec
dec
in
iret
mov
sub
xor
ret
push
daa
movb
or
pop
mov
pop
adc
shrb
das
lea
test
int3
push
cld
pop
xor
lcall
enter
inc
push
xlat
adc
push
clc
xchg
or
push
dec
pusha
nop
add
pop
ds
loopne
lods
add
mov
sbb
sbb
and
cmp
cmp
aad
push
and
rep
bound
jae
cmp
adc
shr
push
push
mov
add
cmp
sahf
orb
movsb
loopne
cmp
jo
push
cmc
push
pop
repnz
int
adc
cli
nop
xlat
inc
cmp
cmpsl
mov
jbe
adc
outsl
stos
jns
and
dec
mov
and
sbb
roll
and
mov
ja
sbbb
mov
rcrl
mov
das
sub
cmp
xchg
cmp
inc
popa
arpl
ljmp
inc
add
rcll
push
lret
inc
movsl
mov
movsl
push
jecxz
lret
add
lods
lds
push
mov
movsl
push
cmpsl
inc
or
das
add
add
jo
bound
daa
hlt
sahf
mov
xor
fwait
jmp
mov
outsl
lock
jo
pop
test
push
sub
pop
popf
aas
jns
outsb
ja
and
mov
ficoml
adc
xor
sbb
pop
mov
and
clc
mov
aad
bnd
dec
or
and
add
adc
es
hlt
fists
push
pop
addr16
xchg
push
icebp
jne
sbb
adc
xor
mov
xchg
mov
call
mov
mov
gs
outsb
out
or
stos
mov
lea
xor
call
push
das
jbe
xchg
or
xchg
add
push
and
inc
fld
cwtl
xchg
stc
cmp
je
in
lcall
xchg
cmpsl
jne
xchg
pop
sub
xchg
lret
push
cmpsl
xor
aad
push
push
pusha
insl
push
test
pop
adc
add
mov
push
dec
loop
std
popf
fadd
jb
inc
sti
pop
sub
movups
addb
stos
setne
jecxz
push
jge
int
ljmp
mov
popl
cmp
cmp
push
outsb
cmp
shl
pop
sub
or
lds
roll
cs
add
fcoml
xor
and
in
mov
sbb
mov
adc
jp
or
push
lret
cvtpi2ps
pop
sub
cmp
ja
mov
pop
sarb
mov
in
push
cmp
in
jne
idivb
ret
loopne
sub
fidivrl
sbbb
xor
iret
fmul
test
data16
jbe
mov
int
inc
mov
roll
lods
adc
cmp
and
cmp
pop
sbb
jb
roll
pop
call
les
shll
imul
pavgw
mov
leave
out
dec
cmpsb
inc
adc
leave
adc
je
and
cwtl
imul
cs
pop
mov
fs
dec
mov
fs
sbb
cli
xchg
xor
movl
pop
add
dec
xor
or
ds
sarl
dec
xor
sbb
pop
das
in
push
xchg
adc
fwait
and
test
out
xor
stos
lea
sbb
and
pop
shr
mov
sub
mov
push
fmull
dec
add
mov
or
sbbb
or
adc
jp
into
sub
lods
inc
in
ret
lret
jle
inc
cwtl
ss
idivl
insl
pop
jecxz
push
and
jns
sub
add
sahf
dec
dec
out
mov
jb
push
dec
outsl
addr16
and
jns
insl
mov
mov
cli
scas
dec
add
push
movsl
sub
mov
adc
mov
pop
aad
repz
sub
shll
jge
jo
les
xor
add
xor
push
daa
and
fisubrs
icebp
adc
loop
add
sub
enter
sub
cmp
imul
jbe
pop
fsubrs
call
dec
or
into
fsubrp
xlat
or
popf
pop
pusha
adc
lods
out
adcl
imul
adc
out
push
xchg
mov
test
mov
jmp
sub
lret
mov
sti
fists
call
mov
mov
or
push
insb
scas
sbb
sub
sti
mov
ja
and
inc
aad
loope
int
outsl
popa
dec
xchg
mov
adc
test
out
fiadds
cmp
int3
notb
mov
test
mov
insl
test
addl
fs
aas
sbbl
cmc
cmpsl
mov
cs
mov
and
jge
push
xchg
push
and
or
aas
fildl
jb
test
push
pop
call
mov
out
outsb
cmp
mov
shrb
inc
sbb
out
das
push
lea
ds
pop
push
stc
mulb
xchg
aad
cmpsb
sub
sub
loope
push
fcmovnu
movb
loope
insb
push
adc
faddl
mov
pop
jg
rclb
dec
or
sub
push
out
mov
dec
dec
or
or
add
xor
jmp
pop
push
insb
mov
pop
sub
aad
dec
push
nop
mov
lahf
std
cmp
mov
fstpl
lahf
or
sub
and
frstor
inc
pop
int3
ja
stos
cmp
sbb
shlb
jle
call
dec
fs
arpl
xchg
cmp
jecxz
movsb
and
push
push
icebp
stos
lods
out
lret
add
dec
mov
dec
fildl
scas
xchg
and
jle
in
inc
out
sbb
gs
pop
xor
mov
andl
shll
pusha
ficomps
and
aas
jnp
loop
sbb
mov
daa
gs
inc
stc
push
or
insl
aad
or
sbb
loopne
movsb
cmp
cmp
fcomi
aam
ret
or
out
sub
scas
mov
inc
jp
inc
mov
js
das
fnstenv
loopne
adc
lods
xchg
pushf
repz
mov
enter
push
mov
aas
je
aaa
ret
add
outsl
adc
mov
xchg
mov
push
arpl
inc
xor
sbb
cmpsb
and
jmp
dec
mov
sahf
xchg
test
lea
xorl
jno
push
mov
sub
dec
mov
xchg
bound
or
repz
enter
pop
in
decb
out
push
pop
loop
mov
mov
test
pusha
pcmpeqw
loop
popf
mov
outsl
fldenv
jmp
adc
pop
cmp
bound
or
sub
bnd
pop
sbbl
sub
fistps
sbb
loope
arpl
xlat
out
fsub
and
jmp
test
xchg
repz
sti
gs
add
fidivrs
and
fwait
add
push
loop
inc
in
test
or
adc
data16
imul
push
fcoms
cwtl
fwait
pop
jbe
loopne
push
aad
cmpb
outsl
and
or
adc
or
mov
add
clc
icebp
jnp
das
adc
mov
jecxz
ret
push
mov
les
rcrl
fidivl
cmpsl
daa
dec
xor
push
imul
loopne
or
pop
mov
loop
jge
sarl
lahf
shlb
cld
push
jno
add
mov
aam
ljmp
aad
mov
cltd
lcall
jmp
xor
out
lret
outsb
loope
push
es
cmp
inc
cmp
sbb
loop
mov
sub
xchg
mov
loopne
ss
rcrl
adc
nop
dec
inc
fucomi
push
sub
mov
scas
repz
call
pop
adc
insl
ljmp
scas
sub
or
and
in
xor
jbe
nop
and
cmp
not
imul
cld
jns
cld
pop
push
fsts
imul
xchg
out
lahf
or
imul
cmp
sbb
add
cwtl
jne
call
in
pop
sub
imul
push
dec
push
in
xchg
inc
inc
les
adc
fnstenv
roll
inc
add
sbb
push
dec
daa
aam
mull
pop
fucomp
sub
and
pop
adc
mov
stos
and
fldt
cmp
test
jle
imul
mov
nop
stos
icebp
push
xchg
pop
inc
pusha
nop
shll
test
dec
scas
inc
add
subb
and
push
cwtl
cmp
inc
inc
jp
inc
xchg
hlt
inc
jge
pop
repz
cs
xchg
loopne
sbb
aam
sbb
sbb
cli
test
mov
loopne
dec
mov
cmpsb
xchg
xor
xchg
xchg
lds
fdivrs
mov
or
hlt
and
xor
cs
dec
lods
outsb
cld
dec
xchg
or
and
dec
push
ja,pn
adc
mov
inc
hlt
mov
mov
inc
sbb
mov
das
in
mov
lds
push
jecxz
jae
xchg
mov
mov
jmp
movb
out
jmp
mov
pop
and
in
addl
pop
pop
out
ret
stc
add
neg
xchg
xor
push
sti
pop
stos
cmpsl
cmp
adcb
aam
xchg
pop
test
repz
mov
pop
push
push
jne
call
test
aaa
cmp
sbb
cli
xlat
subl
xchg
push
and
and
push
inc
add
decb
mov
or
xchg
or
test
cmp
mov
gs
leave
mov
or
mov
mov
ds
sub
mov
pop
int3
roll
xchg
daa
mov
gs
and
fmull
xor
and
in
arpl
mov
adc
out
inc
or
or
sbb
push
jns
pop
mov
jb
out
xor
or
xor
enter
xor
xchg
or
jp
cs
and
adc
lcall
mov
dec
add
jecxz
jle
stos
shlb
aam
mov
pop
pop
test
dec
scas
idiv
push
mov
daa
rclb
cmc
xor
mov
inc
popl
mov
and
pop
rorl
stos
daa
xchg
mov
sbb
pop
mov
xchg
lds
in
test
fs
jg
pop
push
jle
fcomps
push
mov
stos
or
movsl
ja
aas
mov
cmc
pushf
cmpsb
inc
pop
cli
test
in
into
adc
outsb
insl
in
cmp
stos
pop
outsl
dec
mov
sbb
add
subb
inc
sub
bound
in
lret
ja
jecxz
imul
dec
pushf
and
inc
or
inc
pop
and
add
mov
shl
fnstenv
sub
pop
sahf
adc
sub
jbe
push
imul
rolb
adc
addl
cmp
mov
inc
jae
mov
outsl
addl
scas
sbb
ljmp
dec
js
movsl
daa
push
sub
adc
ds
mov
out
std
or
in
jne
and
jp
stos
mull
xchg
bound
mov
sub
das
or
in
push
in
adc
enter
mov
xorb
push
xchg
ret
aam
hlt
pop
pop
imul
data16
jmp
push
pop
push
and
in
mov
adc
sub
mov
mov
jno
enter
icebp
inc
mov
sahf
push
fwait
and
mov
cmp
je
or
stos
data16
push
xchg
das
call
call
jnp
outsl
xor
dec
mov
cld
adc
dec
sbb
inc
clc
popa
add
pop
and
mov
mov
push
inc
mov
and
push
lcall
dec
jnp
sahf
mov
xchg
sub
int3
sub
xlat
lcall
test
das
pop
lret
je
adc
stos
xchg
jl
insb
cmp
es
pushf
cld
xchg
jnp
lret
or
xchg
leave
dec
mov
lret
or
jns
getsec
push
testb
push
lock
icebp
repz
adc
cwtl
xchg
jno
mov
jmp
dec
jecxz
sbb
lahf
dec
movsl
int
dec
loop
add
std
imul
cmpsl
push
popf
out
add
sub
das
les
rcrb
test
mov
jecxz
imul
cmc
pop
xor
dec
ret
pop
aas
mov
orb
mov
loope
xor
cli
in
rcll
push
jae
stc
push
pop
xor
flds
clc
orb
push
stos
push
and
lahf
cli
and
xchg
jno
sub
icebp
or
shll
pop
mov
outsl
or
inc
push
mov
jecxz
mov
jg
jns
sub
ret
dec
or
aas
adc
jp
xchg
jns
push
sahf
mov
adc
rol
pusha
scas
lea
cs
popa
shr
fcomps
in
xchg
sbb
out
in
mov
movsb
sbb
cmc
cs
sbb
sbb
lds
jp
inc
aaa
mov
aaa
push
cmc
sbb
hlt
push
aam
push
aam
imul
dec
jno
in
das
mov
in
jne
dec
sub
adcb
inc
pop
ds
shl
or
push
adc
pop
jns
push
cmc
mov
xchg
mov
xchg
inc
out
scas
and
dec
cs
pop
je
inc
sub
jecxz
ss
movsb
mov
and
ss
inc
repz
adc
xchg
xor
adc
cltd
sbb
cmp
or
add
push
jle
cmpl
push
sbb
sbb
xchg
mov
out
out
pop
sub
pop
adc
push
or
rclb
fcompl
xchg
mov
stos
andb
in
call
pop
push
mov
fdivrs
dec
cmp
icebp
jle
enter
cmp
mov
subb
into
or
adc
sbb
outsb
pop
leave
pop
add
cmc
mov
mov
adc
pop
mov
inc
into
mov
xlat
xchg
push
jmp
xchg
cwtl
addr16
push
dec
or
cmpsl
call
pop
lods
and
stos
imul
fs
mov
or
push
lock
pop
xchg
add
push
popf
scas
fmull
icebp
xor
jg
jle
popa
enter
mov
pop
xchg
add
xchg
xchg
cmp
roll
rcrb
and
fs
dec
sbb
test
outsl
mov
add
orl
mov
movsb
mov
inc
test
xor
pop
cltd
push
xchg
jmp
xchg
lcall
adc
add
fidivs
in
or
sbb
xchg
add
mov
gs
popf
in
lds
jae
cmpsl
sbb
lret
sahf
test
add
xor
divl
jbe
dec
sub
mov
push
cld
mov
fldl
data16
ss
fsts
lock
or
lock
mov
cmpsb
lea
mov
ret
arpl
orb
sub
mov
xor
mov
or
in
test
popa
fmull
push
add
lcall
or
ret
add
daa
and
test
into
bound
sbb
pop
shlb
inc
stos
movsl
xchg
adc
scas
pop
adc
test
jae
inc
dec
fcomip
xchg
cwtl
fwait
setl
sub
jmp
test
xor
and
mov
mov
adc
outsl
jecxz
ljmp
movsl
dec
fldl2t
repz
mov
cmp
hlt
push
xor
mov
repz
mov
sti
sub
add
fwait
lods
push
push
and
push
jae
fwait
je
out
dec
pop
loope
xlat
fwait
pop
stos
sub
dec
cmp
cwtl
das
jge
repz
mov
add
xchg
rolb
push
cmpsl
and
pop
mov
ds
das
outsl
sbb
movsb
xchg
or
mov
cmp
mov
or
cmp
lds
out
es
inc
filds
dec
push
arpl
inc
je
ret
xchg
sub
inc
add
mov
sarb
lods
or
mov
adc
mov
xchg
sub
and
pushf
jns
popf
int
ret
pop
jmp
cmpsl
clc
gs
mov
sbb
inc
call
mov
pop
mov
lock
sarb
clc
and
shr
lods
mov
push
pusha
ret
sahf
mov
data16
popf
adc
cmpsb
lods
add
jae
pop
es
inc
mov
xchg
sahf
rcrl
push
push
call
inc
sub
adc
mov
popa
inc
adc
jnp
mov
insl
pop
sbb
pop
addr16
fnstsw
inc
daa
lcall
pop
cmp
cwtl
sti
std
jbe
iret
ds
inc
jl
fsubrs
jmp
and
pop
pusha
cmpsl
loop
pop
rcrl
adcb
xchg
rcrl
xlat
xor
cli
rcr
fcmovnbe
pop
lods
mov
mov
add
sbb
jg
fcoms
mov
hlt
movsw
jle
and
mov
sub
dec
jne
push
mov
push
fs
ds
aam
mov
sbb
daa
pop
cmp
cmp
mov
popa
xor
xchg
nop
mov
jns
insb
pop
aaa
or
dec
rolb
lret
das
addr16
nop
iret
arpl
out
dec
adc
jbe
sub
imul
inc
rclb
ret
mov
or
sbb
sub
stc
xor
ds
mov
lcall
mov
xchg
add
ror
out
pop
in
cli
xor
cmc
mov
scas
push
ja
push
aam
sbb
nop
cmp
pushf
fcomps
lods
lods
xchg
sub
jmp
lods
inc
imul
scas
mov
jo
in
or
jl
sbb
out
mov
xchg
or
dec
and
std
adc
add
cwtl
int
mov
xchg
push
xchg
int3
rcll
mov
gs
insl
cmp
aaa
mov
in
movsb
adc
cmp
cmp
jnp
sbb
rorl
jnp
ljmp
push
fisubs
xchg
nop
lahf
add
nop
lcall
outsl
mov
or
or
push
dec
push
dec
sub
sub
adc
dec
fucomi
dec
or
jno
xor
mov
dec
push
shll
and
iret
or
rolb
inc
xor
repnz
jb
push
in
mov
cmpl
int3
and
jae
out
pop
xorb
sahf
and
push
cld
shll
lods
xchg
mov
jmp
rcll
sub
decl
pusha
pop
loope
pusha
push
pop
sub
inc
arpl
push
dec
lock
push
add
sbb
or
repz
jne
jo
hlt
add
push
movsl
leave
or
cltd
insb
xor
or
cs
mov
ret
popl
jbe
andb
pusha
ret
jge
pop
and
out
ljmp
insb
in
sbb
scas
cmc
idivb
or
xlat
or
push
iret
loope
dec
movsb
das
push
jb
stc
ffreep
adcb
mov
ret
orl
push
push
mov
lock
test
repz
inc
inc
cmp
cmc
dec
in
shlb
mov
ja
scas
mov
jo
adc
shrb
jno
daa
jne
push
daa
xor
pop
jl
dec
fucomip
sub
popa
imul
xchg
lock
cmp
lret
jge
adc
mov
test
or
fildl
xchg
pusha
jo
insl
fucomi
xchg
jo
lret
daa
mov
mov
xor
jl,pt
cltd
dec
ljmp
xor
lds
or
test
push
fwait
daa
les
cmp
in
push
loopne
ljmp
ficompl
mov
insl
test
xchg
fs
leave
fstps
push
mov
das
sub
push
adcb
ficoml
sbb
mov
sti
icebp
inc
stos
push
jmp
cmp
sbb
add
push
data16
mov
pop
int3
out
jbe
push
pop
rorb
mov
out
scas
arpl
icebp
shrl
lret
popf
sub
pop
aam
dec
or
sbb
sarl
mov
loope
hlt
push
and
push
dec
cmp
movsl
popf
and
loopne
sbb
stc
arpl
ficomps
adc
push
hlt
jl
ss
adc
call
cld
nop
rcr
jns
jno
sarl
xchg
repnz
jns
add
cmpb
aad
pop
dec
inc
mov
aas
ja
adc
xor
pop
mov
xchg
push
lods
mov
adc
cmp
xchg
xchg
xchg
mov
repz
pop
enter
imul
add
cltd
out
addr16
shrl
jp
xchg
push
push
xchg
in
xchg
xor
xor
jg
inc
fsts
inc
imul
jecxz
push
inc
pop
stos
test
push
nop
add
pop
sub
pop
test
sub
mov
dec
movsb
into
and
es
inc
fdivrs
movsl
adc
pop
mov
xlat
mov
mov
jmp
ret
mov
ret
jmp
mov
xor
add
lods
push
sbb
or
out
je
pop
ret
ds
scas
cli
inc
fildll
sub
scas
inc
int
cltd
pop
out
mov
mov
push
or
lods
lds
pop
cs
loopne
xchg
sub
repnz
mov
fcmovu
pop
test
ds
cwtl
inc
or
lret
loopne
xchg
jecxz
stc
add
mov
fwait
jg
je
stos
sub
scas
pop
sbb
sub
shr
sbb
mov
jnp
push
std
mov
pop
ja
test
mov
or
dec
xor
mov
in
jge
into
sti
sahf
int
dec
sub
mov
ret
mov
mov
in
shl
pop
repz
in
jmp
push
cli
loopne
stc
scas
and
xchg
sbb
les
in
les
inc
imul
cmpsb
mov
mov
mov
arpl
xlat
pop
jge
mov
cmp
in
jecxz
push
pop
flds
mov
dec
hlt
call
ja
jo
outsl
cli
les
adc
pop
add
orb
and
adc
aad
fwait
shrl
pop
mov
sbb
jns
fstpt
push
mov
rcr
repnz
filds
cmp
popw
mull
stc
fcompl
push
sarl
inc
lock
je
stos
add
ljmp
fidivrl
ds
sub
dec
in
or
sbb
pop
gs
gs
add
and
push
fistl
jmp
and
dec
rep
pusha
test
adc
pop
push
addr16
lds
cld
adc
dec
dec
loop
jo
push
xchg
and
js
jge
mov
sub
jae
xchg
mov
sbb
jmp
repz
mov
loopne
inc
pusha
cmpsl
cmp
sub
jb
jae
adc
push
jns
dec
xchg
xchg
sbb
test
jo
mov
lds
dec
addr16
aam
pusha
popf
ljmp
mov
xchg
insl
call
pushf
pop
gs
cli
mov
sbb
stc
mov
sub
outsb
stc
inc
cwtl
addr16
push
mov
sahf
movsb
pop
test
dec
xchg
jl
testb
pop
mov
push
jge
stos
and
test
mov
jae
add
bound
inc
repz
adc
loopne
dec
in
xor
sahf
inc
jecxz
movd
cltd
popa
push
add
dec
sahf
cmpsb
mov
insl
fstpl
mov
inc
xchg
mov
sahf
repnz
add
hlt
mov
ljmp
mov
lock
roll
xchg
jge
add
adc
mov
cmp
lret
sbbl
mov
pop
cmp
pushf
aaa
cmp
jnp
popa
out
lea
mov
jae
and
pop
shll
aaa
shlb
test
cmpsl
jmp
movsl
inc
divb
fnsave
leave
jb
loop
ret
pop
icebp
inc
pop
cmp
jle
in
push
pop
sarb
out
pop
jne
push
fsubl
inc
aaa
xor
imul
mov
jae
cmp
xor
add
rolb
loopne
sbb
sub
dec
adc
mov
xor
inc
sti
sub
imul
incl
add
sub
push
fmuls
jle
icebp
or
arpl
jp
xchg
mov
lea
sti
cmp
daa
mov
mov
mov
in
mov
dec
mov
lock
ljmp
in
insl
js
push
xchg
mov
mov
lds
test
jg
jae
inc
loopne
pop
xor
mov
leave
xor
pop
sub
push
and
stos
mov
xchg
jns
mov
fidivrs
mov
or
scas
outsb
sub
mov
mov
cmpsl
and
cs
and
mov
testb
lahf
cld
fildll
lret
ret
incl
movsb
xor
inc
xor
imull
sbb
jl
xor
shrb
vpunpckhqdq
xchg
sbb
lahf
mov
cmp
sti
adc
sahf
cmp
lods
and
sub
add
push
iret
loop
aaa
sub
hlt
outsb
popa
out
hlt
in
inc
jle
lock
cmp
jns
push
mov
adc
outsl
jnp
jp
xor
cmc
mov
out
icebp
lcall
das
fisttpl
dec
test
notb
dec
out
cmc
enter
mov
outsl
mov
inc
xchg
fwait
dec
mov
mov
mov
fs
mov
test
xor
int3
gs
push
mov
scas
lock
xor
lods
fwait
inc
out
pop
icebp
loop
loope
inc
and
push
test
pop
sbb
xor
mov
mov
aas
sub
mov
mov
lods
jle
mov
add
fidivl
sub
stos
in
imul
das
loope
add
xchg
jge
push
xchg
ja
mov
push
loop
popa
mulps
xchg
repz
push
stc
dec
mov
repz
or
andl
rcr
nop
and
aaa
jns
xlat
stos
xor
pop
roll
lds
pushl
movsb
mov
cwtl
push
imul
sbb
push
sti
fwait
xor
fistl
mov
pushf
lods
idiv
arpl
imul
loop
and
bound
mov
push
jp
add
push
push
bound
roll
in
lods
mov
push
push
mov
in
mov
cmp
xor
inc
mov
dec
in
mov
inc
xor
mov
push
adc
lods
adc
jo
adc
xor
sub
js
int
push
sub
pop
jmp
push
sbb
stos
sub
push
in
mov
mov
mov
xchg
aad
testb
pusha
and
loopne
test
das
jle
pop
loop
cmp
inc
pop
cmp
cmp
add
mov
in
push
stc
mov
outsb
cmc
jb
addb
or
push
push
lret
leave
daa
rcrb
adc
es
mov
fdiv
fistps
ljmp
inc
adc
mov
cli
idivl
out
push
and
pop
or
jne
imul
jle
mov
mov
dec
ds
call
leave
in
not
pop
and
pop
mov
inc
push
fwait
mov
lea
icebp
inc
sub
xlat
aaa
inc
fdivrs
imulb
cli
jg
and
inc
jns
ds
fistpll
xchg
adc
test
imul
push
dec
push
insl
mov
inc
ljmp
imul
stos
stos
lock
dec
adc
xchg
adc
imul
arpl
xchg
leave
ljmp
clc
sub
and
shll
enter
push
gs
lock
testb
fimull
xchg
inc
sahf
test
cmc
xchg
stos
stos
out
addr16
xchg
push
lret
inc
cmpsl
mov
xor
sbb
sarl
push
pop
clc
adc
sbb
lods
push
mov
imul
mov
lock
ds
jae
xor
lods
jne
cmp
fsubs
stc
push
into
mov
mov
pop
in
arpl
dec
int
cli
dec
enter
stos
fists
pop
mov
pop
or
pcmpeqw
jns
sub
mov
mov
jns
xchg
mov
push
xchg
or
or
rorl
push
cmp
cltd
mov
out
loopne
adc
add
adcl
fstpt
int3
lods
pusha
daa
dec
dec
repnz
xchg
mov
sbb
push
xchg
pushf
xor
adc
insb
or
lcall
adc
ja
insl
xor
ja
xlat
shll
out
xorl
inc
scas
outsl
xchg
std
push
loopne
out
dec
dec
mov
scas
mov
stos
inc
inc
push
decb
dec
push
imul
or
es
rol
lods
mov
mov
jle
in
jbe
cmp
lock
mov
data16
mov
sbb
mov
pop
lahf
stos
mov
sbb
ret
cmp
ja
and
loope
pop
cwtl
pop
inc
inc
push
pop
imull
xor
and
and
inc
pop
and
xchg
inc
inc
jp
inc
mov
outsb
imul
mov
xchg
cmc
pusha
lret
das
sub
incl
inc
cmp
iret
jnp
aas
adc
dec
lahf
pop
lock
pop
mov
xchg
xorb
fwait
inc
push
xor
cmp
cli
mov
das
and
cld
adc
jp
inc
out
ljmp
pop
out
adc
mov
int3
sbb
daa
and
pusha
or
xchg
or
enter
xor
xchg
mov
sub
push
xor
in
mov
mov
xor
add
pop
mov
or
je
push
fprem
cli
pop
in
pusha
jns
jb
daa
pop
or
sub
sub
lret
cmc
fstps
cld
dec
cwtl
mov
fldenv
sbb
das
xchg
cwtl
push
loope
sub
sub
xchg
cmp
das
mov
aaa
mov
xlat
aaa
ljmp
xchg
mov
xchg
mov
jno
idivl
adc
leave
pop
jne
dec
cli
jb
sarl
xchg
push
sbb
fucom
add
sub
mov
repz
cmp
out
jmp
push
xor
ljmp
mov
cmpl
xchg
adc
xlat
and
insl
mov
push
bts
mov
popf
scas
jno
cmp
cmp
push
gs
inc
mov
hlt
jg
test
jge
nop
xorb
add
sub
adc
push
push
fwait
jno
out
sbb
push
pop
inc
xor
adc
dec
pop
ds
nop
sub
mov
int3
andb
test
push
jae
data16
xchg
xchg
out
test
arpl
mov
sbb
rcrl
scas
dec
lods
xchg
xchg
test
out
mov
mov
adc
mov
dec
bound
adc
jae
mov
imul
mov
loopne
dec
in
push
sub
xor
jnp
pop
cmp
subl
inc
fs
cmpl
nop
cmp
fisubrs
ljmp
push
jmp
jmp
push
in
adc
cld
pop
das
mov
mov
push
out
add
inc
ds
jle
int3
dec
sub
loope
and
cld
cmp
mov
push
loop
out
cmp
aad
dec
jl
jbe
leave
push
sub
and
push
les
lea
lahf
sbb
std
sub
gs
ret
or
ds
mov
mov
mov
inc
fwait
scas
gs
xor
out
fcmovbe
mov
mov
iret
mov
lods
ja
adc
pop
or
les
mov
fadd
jecxz
mov
ret
outsl
lods
pop
movaps
add
das
xchg
or
insl
lcall
jne
jmp
jp
xlat
inc
dec
loopne
mov
icebp
lret
sbb
jno
popa
mov
or
out
rolb
aaa
mov
or
or
add
mov
out
xor
jo
and
stc
pop
data16
mov
and
lahf
lahf
aam
xor
or
shlb
sbb
out
cmp
push
pop
push
in
xor
arpl
icebp
jle
inc
aaa
cwtl
sbb
xchg
xor
jnp
add
fstps
fcomip
arpl
fdivl
sub
adc
in
stc
adc
pop
or
pop
or
pop
add
scas
and
xchg
xchg
dec
sub
rorb
data16
inc
jg
cmp
fbld
cmp
pop
sub
in
arpl
addr16
test
into
jecxz
xchg
xlat
pusha
mov
sbb
xchg
idiv
cmp
pusha
xchg
push
addr16
cld
call
or
sti
bound
adc
test
sub
add
inc
dec
cmpsl
inc
stos
or
imul
jne
inc
jle
or
aad
xor
orl
out
push
fildl
sub
lods
aam
test
aas
sub
aaa
cmc
inc
rcrb
inc
inc
mov
sbb
leave
stos
push
inc
lcall
pop
adc
outsl
xor
stos
or
out
aas
cmp
cmp
mov
cmp
sbb
xor
pop
adc
inc
xchg
je
push
jo
test
aaa
dec
push
rcl
dec
xchg
lcall
and
das
in
jge
push
dec
mov
xchg
xor
push
in
inc
push
lods
rep
mov
mov
push
loopne
mov
insb
mov
pushf
hlt
js
push
or
mov
mov
dec
cmc
test
cmpsb
in
ljmp
jae
cmp
jg
inc
fs
xchg
mov
pop
jmp
mov
addr16
je
push
shrl
mov
inc
fmul
pop
mov
mov
add
cli
jl
pop
hlt
loop
xchg
adc
cmp
mov
mov
jp
insl
out
add
or
andb
mov
mov
pop
add
rorb
pop
je
movb
dec
std
sbb
rcrl
sub
mov
mov
jp
and
ss
outsb
xchg
lea
subb
ficomps
mov
lea
shl
pusha
pop
mov
mov
gs
je
incb
mov
and
ret
sbb
xchg
adc
fwait
insb
sbb
pop
cmp
sbb
push
es
jl
out
lcall
sbb
xchg
out
jae
xor
mov
mov
addr16
cmp
lret
out
push
mov
push
and
jne
adc
xor
jno
lret
sbb
leave
pop
pop
cmp
jg
insl
insb
xchg
inc
cli
jp
lret
mov
clc
lods
dec
mov
addr16
and
dec
aas
jb
iret
mov
mov
pusha
iret
cli
cmp
fs
mov
loop
xor
inc
push
test
sub
out
out
sub
pop
addr16
sub
jns
or
mov
cmp
call
xchg
jae
fdivs
outsl
jmp
loope
jg
jno
cmp
jae
lcall
or
addr16
addr16
or
js
mov
mov
loopne
add
and
in
and
test
cmp
or
pop
std
mov
xchg
mov
xlat
ss
or
lea
dec
clc
or
mov
dec
repz
js
add
jnp
sbb
cmp
and
pop
sub
mov
fnstsw
insl
adc
sub
fwait
mov
insb
cmpsl
lods
fbld
jnp
cmc
dec
cmc
mov
rol
and
or
aam
enter
dec
stc
orb
adcl
adc
inc
mov
hlt
push
mov
xchg
pop
push
mov
cmp
push
call
out
pop
and
in
cmp
add
fbld
scas
mov
add
loopne
cmp
adc
dec
fiadds
std
pop
out
out
sub
mov
int
xchg
shll
mov
out
dec
xor
push
sbb
imul
sub
pop
sahf
das
and
in
pop
js
mov
lret
xor
int
scas
lret
fldl2t
fcomi
cmpsl
aaa
orb
lock
je
jnp
mov
into
mov
mov
push
daa
pop
cmc
and
cwtl
jge
in
outsb
adc
mov
outsl
lds
xchg
jmp
cltd
push
mov
scas
cli
clc
xchg
movsl
popf
jg
pop
sbb
fwait
pop
loop
inc
lds
jne
mov
ljmp
cmp
les
arpl
or
nop
test
pop
xchg
fs
mov
hlt
test
xchg
pop
repz
mov
jge
ret
gs
cmp
cld
int
sub
mov
cmpsb
je
sub
inc
cmp
mov
cwtl
loopne
shrl
push
fisttps
adc
paddd
aam
dec
dec
or
aaa
xchg
mov
lods
int3
lods
pop
iret
je
jp
inc
xchg
sahf
push
jbe
dec
push
in
xlat
jnp
sub
cltd
adc
mov
fptan
inc
adc
lds
cmpsb
sbb
jp
inc
enter
inc
mov
jno
or
mov
add
mov
mov
nop
inc
xor
outsb
lret
push
inc
add
add
jb
inc
arpl
push
jne
pavgb
mov
insl
int
pop
mov
std
jno
mov
xlat
mov
ljmp
add
dec
jle
push
adc
mov
arpl
cmp
xchg
sub
push
incb
andl
pop
out
mov
adc
bound
jae
lea
xchg
roll
mov
movb
cmp
fiaddl
cmc
xor
jg
test
mov
xchg
and
test
pop
jp
and
out
xor
xor
ret
popf
mov
imul
pop
fbstp
cld
inc
dec
jb
daa
sahf
mov
ss
xchg
mov
cltd
push
jl
inc
gs
out
mov
or
fwait
call
les
out
pop
xchg
pop
inc
xchg
aam
mov
add
mov
enter
and
cmpsb
cltd
sub
sbb
cwtl
cmc
dec
jp
or
cmp
lcall
testl
add
dec
pop
sbb
ds
dec
repnz
xor
sbb
add
mov
xchg
daa
shll
aad
jns
xor
sbb
stos
push
push
pop
repz
cmp
ds
scas
in
dec
movsb
and
mov
mov
push
repnz
mov
arpl
imul
cmpsb
xor
icebp
movsb
lock
xchg
nop
inc
in
cmp
jl
or
popf
int3
push
add
movsl
mov
and
mov
cmp
shlb
pop
inc
jno
sbb
sbbl
dec
xchg
mov
sahf
cmp
movsb
jbe
lds
scas
dec
ja,pn
lcall
outsb
lcall
stc
xor
or
fcmovnb
test
jnp
pop
in
imul
jb
jle
arpl
sahf
jmp
cmpsb
int
sub
lods
push
mov
adc
out
add
push
insb
or
cmc
outsl
cs
pop
pushf
mov
iret
jae
mov
lea
movsb
mov
fs
or
mov
loope
lret
das
loope
cmpsb
push
jle
jae
in
xchg
cwtl
jg
add
outsb
insb
jae
push
jecxz
mov
xchg
sub
ret
stos
pop
jecxz
enter
mov
mov
aaa
sub
xchg
mov
jmp
cltd
nop
mov
cmp
inc
pop
lock
outsl
sahf
dec
push
pop
ljmp
mov
rcll
nop
mov
inc
push
or
push
mov
jae
lret
sbbb
push
int
es
adc
dec
nopl
sub
imul
cld
syscall
gs
int
cmp
and
sub
hlt
stos
mov
in
out
sarb
jl
mov
test
inc
or
xor
aam
jb
hlt
dec
push
daa
or
outsb
cltd
addr16
lret
adc
mov
scas
je
mov
dec
sbb
popa
aaa
jl
jmp
inc
jne
jns
sti
mov
add
scas
mov
inc
push
les
fisubrs
push
mov
push
add
pop
sbb
cs
loop
cmpsl
clc
and
jo
fimull
push
mov
inc
out
pop
cmpsb
jge
scas
es
or
pop
std
and
jp
cmp
lcall
dec
xor
ficoms
dec
xchg
into
test
add
in
aad
jle
loope
push
int
xor
daa
cmc
inc
add
and
pop
or
add
mov
cmp
call
ljmp
sub
lea
jb
ror
gs
sub
es
sub
imul
jge
sub
imul
cmp
jmp
ss
adc
pop
iret
mov
stos
fisttpll
push
cli
xchg
pusha
inc
dec
loop
pop
je
and
cmp
sub
add
lock
fisubrs
aad
xchg
jmp
lcall
enter
inc
insl
or
pop
ljmp
ss
clc
inc
clc
jnp
push
in
outsl
pop
jbe
cmp
add
rorb
jle
lea
out
outsb
pusha
xchg
xchg
iret
mov
cmpsl
ss
pop
outsb
pop
movsl
sahf
rolb
xor
aas
cmp
mov
nop
pop
or
mov
sbb
nop
push
push
mov
dec
and
lock
xchg
cmpsb
test
nop
nop
icebp
shrl
daa
add
mov
repz
or
adc
and
xor
outsb
mov
dec
sub
add
pop
xlat
out
dec
popa
ds
lahf
scas
es
mov
sub
jbe
push
mov
xchg
int
fwait
jle
pop
imul
push
and
pushf
imul
mov
mov
adc
mov
pop
sbb
xor
inc
ss
shr
decb
mov
mov
push
jge
aam
sbb
lock
mov
pop
jb
adc
out
fcoml
dec
les
lods
pop
lret
or
push
sti
add
seto
and
fcoml
cmp
mov
inc
out
cmp
xchg
sbb
lahf
test
sahf
dec
push
lahf
jl
mov
ret
cmp
sbb
fnstsw
das
jne
jge
into
enter
mov
ret
mov
push
jb
pop
lahf
pop
or
stc
mov
cli
add
lock
lret
xor
and
cmp
stc
insb
dec
iret
dec
es
cltd
lret
lods
xchg
scas
push
or
cmp
icebp
icebp
loopne
outsl
add
outsl
mov
dec
scas
adc
mov
fdivrs
add
in
test
shll
stos
mov
jne
inc
sbb
jne
push
dec
aam
shll
push
cmp
gs
push
in
sub
ret
in
das
mov
arpl
movsl
clc
mov
inc
pop
inc
xchg
mov
mov
pushl
in
bound
and
xchg
sub
adc
out
xchg
orl
ret
jbe
out
nop
inc
ds
inc
inc
stos
sub
mov
xor
bound
stos
cmp
inc
int
je
sti
mov
cmp
pop
adc
pop
jmp
jl
and
cmp
out
sub
aaa
nop
jecxz
stos
fstl
dec
or
jge
pushf
cmp
inc
test
mull
movsb
cmp
add
imul
inc
cmp
shlb
shr
mov
stos
push
loope
push
and
bswap
in
aam
add
test
leave
lea
jp
xlat
lock
dec
xchg
cmp
call
es
jecxz
gs
xchg
test
sub
fmull
cmp
cmp
pop
push
lahf
adc
xor
pop
imul
xchg
push
sbb
lods
jl
out
ret
ffree
push
cmpsl
xchg
loope
adc
fprem
je
push
sbb
out
mov
je
xor
cmp
mov
insl
das
sub
and
cmp
in
dec
sbb
sub
add
imul
shll
das
mov
push
ja
mov
loope
ljmp
cmc
and
xchg
mov
jecxz
push
push
bsr
mov
mov
cmp
mov
xor
dec
mov
imul
mov
jmp
sahf
testl
mov
sub
and
lcall
out
shl
push
xchg
inc
ret
or
aam
push
and
or
mov
add
mov
fwait
sbbb
push
faddl
xor
mov
xchg
scas
cmp
push
adc
fcmove
cwtl
fisttps
into
pop
xchg
jl
adc
jne
std
sub
test
add
and
loope
out
jns
jo
imul
ds
pop
cwtl
add
icebp
xchg
or
mov
jbe
and
test
jns
push
push
cmp
cmp
lods
jns
mov
lea
mov
xchg
pop
sbb
push
xor
dec
xchg
adc
sbb
loopne
cmp
ficoml
mov
pusha
sbb
mov
add
sbb
insl
out
jb
push
or
fldenv
cmp
jne
cmpsb
mov
and
aas
push
and
scas
pop
pusha
pop
mov
sub
fwait
adc
jmp
cmp
inc
pop
mov
aad
lock
ja
pop
lahf
pop
push
mov
es
sbb
ror
pop
push
xchg
lock
clc
add
inc
mov
cli
ret
mov
sbb
inc
rcll
dec
xor
leave
sbb
pusha
inc
or
adc
inc
pop
sbb
inc
imul
and
push
pop
into
mov
push
mov
and
cmp
rcrl
iret
movsl
inc
pushf
fisubl
pop
xchg
mov
stos
mov
test
push
cmpsl
mov
fistl
ljmp
push
jge
inc
jbe
push
popf
push
out
sti
pop
sub
cld
je
jno
pop
iret
or
dec
mov
xlat
mov
decl
aad
xchg
mov
mov
and
pop
mov
sub
or
xor
jne
scas
mov
jnp
pop
hlt
divl
ja
js
popa
inc
and
stc
and
jae
lahf
out
inc
jp
sub
out
or
jnp
push
mov
adc
sti
sbb
call
adcb
mov
out
or
cmp
mov
out
shll
cmp
loop
mov
stos
mov
test
and
lret
inc
sub
push
add
fwait
jp
shl
xchg
mov
mov
jb
out
jno
push
fldl
aad
shrb
cmp
sbb
jae
daa
je
mov
mov
sub
in
add
insl
inc
adc
inc
cmp
sahf
cld
aad
xchg
and
pop
inc
fsts
mov
pop
jmp
cmp
add
das
pushf
push
pop
inc
lret
pop
iret
lds
mov
sahf
pop
in
das
xchg
sbb
fwait
push
sbb
fcmovb
enter
lods
call
jge
xlat
lock
pop
jae
inc
or
pop
push
das
daa
ds
mov
dec
cwtl
push
xor
sbb
fidivrl
xchg
outsl
sub
adc
mov
cld
inc
adc
dec
daa
dec
xchg
or
mov
iret
rclb
mov
mov
shlb
cmp
dec
movsl
mov
jmp
sub
aas
sbb
subb
stc
sbb
mov
cmp
or
cmpsb
jg
inc
int
sbb
lods
popa
sbb
or
sysexit
push
std
ret
aam
sbb
mov
hlt
ret
and
inc
sbb
movb
xchg
fisttpl
addr16
and
cwtl
out
jle
imul
pusha
out
add
xor
call
cld
mulb
and
mov
push
fidivrs
push
mov
mov
mov
incb
test
xlat
adc
icebp
jge
cmp
bound
movsl
xchg
sub
xchg
adc
jge
jmp
ret
xor
push
jbe
mov
mov
cmp
movsb
or
ss
out
xor
aas
lcall
mov
jnp
fs
mov
les
jle
adc
dec
add
or
lods
scas
fdivrl
xchg
clc
dec
fsubrl
inc
mov
cli
or
lds
pop
scas
cli
and
loopne
inc
adc
loope
in
mov
loope
ja
xor
jge
mov
nop
inc
icebp
and
dec
sub
jmp
mov
loope
push
xor
lahf
jns
repnz
add
scas
rcrb
pop
bound
ss
stc
call
rcrb
or
push
add
push
push
test
into
sub
sbb
jp
dec
pushf
mov
out
jg
mov
es
inc
lret
xor
addr16
adc
xor
jle
in
inc
and
xor
adc
lahf
jnp
cwtl
test
cli
inc
or
jne
push
mov
jbe
push
mov
repnz
loop
mulb
cs
jecxz
data16
fldl
sahf
mov
scas
ret
addl
or
in
pop
iret
test
pop
incb
push
pushl
leave
and
adc
add
xchg
sbb
sbb
xchg
sti
cltd
or
jnp
das
je
sbb
sub
push
jnp
leave
nop
or
mov
pop
fwait
mov
cmp
mov
loope
scas
aad
adc
cmp
loop
lret
bound
push
pop
dec
std
push
fimuls
fmull
and
mov
lfs
and
add
or
cmp
fcmovnb
insb
test
jne
ds
xchg
jns
popf
xchg
mov
xlat
test
jl
out
adc
xor
fs
or
xchg
scas
sub
xchg
je
mov
sub
adc
xchg
jno
xorl
sahf
aam
inc
lods
jge
mov
mov
mov
add
fcomip
push
and
sbbb
ret
out
mov
scas
push
push
fs
data16
sbb
mov
adc
xchg
add
dec
xor
cli
shlb
cmp
cmp
mov
ja
js
xor
js
rorb
fs
cli
pop
nop
pop
mov
mov
dec
sbb
loope
and
sub
in
mov
lcall
pop
cmp
and
push
push
mov
lods
mov
xchg
scas
shll
in
leave
repz
add
fbstp
sbb
js
stos
mov
ja
mov
inc
pop
fwait
repnz
push
icebp
mov
bound
dec
hlt
sarl
rorb
jp
call
fst
icebp
dec
fcomip
push
lods
jl
in
add
push
jb
push
adc
ss
ret
popa
stos
mov
movsb
repnz
fstpl
sbb
lock
inc
and
aad
pop
mov
mov
int3
out
push
xor
mov
mov
mov
nop
jmp
fmuls
xchg
inc
sbb
popf
add
push
and
imul
addr16
dec
push
lahf
cmpb
dec
sub
lods
call
add
and
ud2
outsb
jno
nop
adc
add
xchg
cmp
add
flds
cmp
nop
pop
cmpsb
sahf
and
mov
jg
cpuid
in
pop
cmpsl
stos
pop
sub
push
imul
cmp
insl
ja
push
std
nop
ljmp
push
xchg
call
call
adc
pop
fstpt
sub
cmpsb
cli
imul
popa
pop
sub
loop
push
mov
movsb
imul
pop
mov
add
jbe
mov
sbb
outsb
pushf
repz
or
test
push
or
movsl
fidivl
lret
dec
cmovbe
out
push
popa
jecxz
xor
out
mov
cs
push
pop
test
add
ja
mov
xchg
data16
in
jg
aad
mov
sbb
mov
mov
or
pop
cmp
xor
lods
lea
cmp
xchg
hlt
dec
mov
aas
stos
lea
jmp
xchg
aaa
add
xchg
popa
cmp
loope
fcmove
mov
xorb
mov
push
mov
jb
fst
aas
leave
or
mov
aam
or
imul
jl
sub
cmp
in
lea
mov
push
mov
xchg
int3
sub
mov
cmp
xchg
dec
sub
shrl
sti
pushf
adc
out
icebp
in
xor
addr16
mov
mov
lock
test
lahf
ljmp
cli
sahf
iret
rcrb
scas
pavgw
jae
add
sbb
xorl
adc
mov
push
out
sbb
nop
mov
add
jl
out
in
repnz
xor
fildll
mov
jnp
sub
add
out
mov
test
mov
jbe
push
icebp
adc
iret
lahf
xor
adc
dec
adc
rorb
add
scas
fcomp
js
int3
xchg
or
pop
scas
enter
mov
sbb
popa
mov
arpl
sbbb
out
and
xchg
imul
fs
cmp
js
or
dec
pushf
add
dec
cltd
lea
ret
cmp
fsubrl
sbb
push
dec
sahf
call
pop
xor
push
ss
test
mov
push
aaa
daa
cwtl
sbb
pop
pop
and
cmpsl
imul
inc
mov
aad
ja
aad
sbb
xchg
mov
xchg
cmp
push
aaa
das
shrl
fs
push
jp
inc
xor
mov
lods
ficomps
mov
jne
out
into
lock
jne
jno
lret
jbe
jp
xchg
lcall
js
or
movsl
shll
arpl
sbb
cmp
popf
sub
mov
scas
mov
popa
fnsave
pop
push
clc
jmp
fwait
mov
cwtl
fadds
jns
mov
fistps
ds
mov
jno
divl
and
and
mov
mov
movsl
rorl
fisttpll
xchg
lods
push
sbb
pusha
dec
or
and
add
cmp
dec
stos
cmpsb
jnp
push
fnstsw
das
cmp
jns
cwtl
push
pop
mov
cmpsb
testl
jo
xorl
mov
and
add
enter
mov
divl
add
sti
leave
bound
jbe
jle
sub
fcmovnb
in
in
fadd
dec
cmpsb
cmc
pop
jmp
fsubs
imul
out
bound
adc
cmpsl
enter
les
sarb
gs
jo
adc
lds
outsl
cmp
popa
int
into
lea
cs
sbb
lds
stos
ja
inc
push
inc
adc
adc
stos
cli
adc
sbb
mov
dec
mov
cli
lock
aam
jg
pop
mov
or
insl
nop
ds
pop
xor
addl
mov
push
xchg
aas
sbb
loopne
pop
cmp
and
outsb
push
jbe
pushf
xor
push
pop
cmp
lea
lds
je
or
lahf
and
inc
imul
fcomi
movsb
push
sub
push
out
push
sahf
dec
je
daa
int
les
xor
xlat
mov
pop
inc
adc
pop
sbb
adc
jne
cld
hlt
fucomip
dec
data16
xlat
push
enter
lds
les
push
inc
adc
divb
add
outsl
fnstcw
fwait
sbb
sbb
rorl
mov
fiaddl
mov
clc
into
dec
xchg
lods
mov
mov
xchg
adcl
jae
stc
sub
dec
outsb
inc
adc
push
pop
xchg
and
stos
inc
arpl
test
inc
into
lods
pop
mov
adc
sahf
jecxz
adc
mov
and
fistpl
cmp
and
and
push
pop
adc
jmp
or
filds
in
arpl
adc
shlb
xchg
inc
mov
nop
pushf
push
iret
jno
sub
jns
jg
insb
les
std
imul
sub
insl
xchg
dec
cmc
pop
inc
int3
adc
lahf
insb
xorb
jns
fwait
int3
sbb
xchg
data16
mov
gs
adc
mov
push
push
arpl
lcall
jg
dec
inc
and
add
cli
in
cld
dec
add
lock
and
jp
clc
into
or
je
movsl
test
mov
aad
andb
cmp
loopne
sbb
das
es
jle
dec
xorl
rcl
xchg
and
out
cmp
ficoms
cltd
loop
mov
cwtl
sub
xchg
cmp
adc
cmp
out
pop
popa
sbb
repnz
and
sub
std
sub
lea
repz
xor
sahf
xor
or
pop
js
into
pcmpeqw
inc
dec
iret
and
cmp
cmpsb
addr16
xchg
mov
cwtl
xchg
std
add
cmp
xor
mov
add
add
cmp
mov
out
rcl
sub
xor
out
xor
xchg
je
mov
js
sbb
not
ror
mov
mov
fnstenv
xchg
out
mov
dec
pop
fldt
pop
mov
jb
fnsave
xchg
dec
jp
pop
push
mov
mov
cwtl
push
loope
mov
xchg
rclb
daa
scas
pop
addb
push
loope
test
adc
sbb
fiaddl
dec
push
inc
popa
and
jbe
cmpsb
mov
popf
xor
inc
scas
scas
aam
int3
mov
pop
lods
dec
adc
in
pop
jnp
jne
jg
lcall
mov
das
mov
cmpsb
leave
repnz
jae
mov
out
jae
mov
xlat
cld
cmp
lods
sub
dec
test
sbb
mov
daa
cmpsb
add
loop
mov
and
cs
lock
jmp
mov
mov
push
dec
xchg
fnsave
std
das
out
mov
aam
adc
lea
inc
pop
mov
pop
in
filds
mov
jecxz
icebp
out
xchg
lret
adc
lret
out
popa
fnstenv
popa
dec
mov
push
in
fcoml
lock
push
mov
adc
aaa
dec
in
leave
push
mov
jne
in
cmp
dec
inc
lret
loope
aas
inc
xchg
mov
mov
enter
cmp
push
popa
out
cmc
add
lods
sar
loopne
lock
lods
scas
jle
inc
into
lods
mov
xor
jno
iret
add
addl
push
cmc
jle
add
std
mov
inc
insb
xorl
shr
xor
movsb
adc
je
test
adc
mov
fstpl
push
lods
scas
enter
and
sarb
mov
jmp
pop
cli
lock
aam
add
xchg
int
mov
sbb
lcall
mov
aad
xrelease
je
inc
add
into
out
pop
push
adc
lods
daa
aad
cmp
sub
movsl
mov
into
daa
mov
insl
add
inc
ss
sbb
mov
shlb
fcomps
clc
outsb
insl
mov
fnstsw
xor
scas
adc
gs
push
adc
gs
in
sub
or
popa
out
cmp
xor
cwtl
rcrl
out
xor
pop
dec
repnz
outsb
flds
push
out
idivb
adc
scas
xchg
pushf
popl
daa
push
sub
shr
fdivrl
in
insl
pop
fwait
xchg
xchg
shll
test
jle
sub
lods
mov
cmp
cmp
test
pop
xchg
pop
inc
pop
mov
lcall
xor
sbb
pusha
mov
mov
cli
cmp
mov
stos
jp
dec
or
sti
popf
add
adc
sbb
or
xchg
rcll
cli
repz
add
pushl
roll
aam
insl
mov
mov
add
inc
xchg
out
cli
mulb
shr
jae
pop
aad
push
cmc
idiv
stos
testb
add
pop
jmp
test
test
bound
or
pop
out
or
adc
mov
mov
xor
lahf
or
dec
lods
mov
sbb
insb
pushf
repz
lahf
lods
sbb
add
scas
stos
push
cmpsb
add
dec
fmul
lock
inc
nop
xchg
mov
xchg
je
jnp
mov
and
jno
sar
fcmovne
ljmp
sbb
cld
ljmp
repz
jb
cmp
stc
adc
jnp
or
shlb
xor
out
mov
lods
outsl
in
xchg
jecxz
xor
addr16
jae
ret
and
adcb
cmp
mov
dec
aam
jmp
insb
and
aad
cld
add
push
orl
jns
movnti
adc
inc
add
loopne
mov
xchg
cli
xor
sbb
frstor
jp
and
shl
mov
inc
stos
or
adc
loope
adc
cmp
test
inc
adc
sbb
mov
cld
jmp
subb
mov
out
lods
pop
loopne
and
dec
es
fs
mov
dec
enter
jecxz
aam
stos
lahf
faddp
mov
mov
aad
or
xchg
lea
xchg
arpl
mov
repnz
inc
or
sbb
test
fcom
and
sub
fidivrl
inc
pop
dec
dec
inc
out
ret
xor
push
lods
jg
and
jg
xchg
mov
xor
inc
scas
sbb
inc
xchg
aas
js
shrb
cwtl
popl
pop
jbe
mov
movsb
test
or
jl
mov
cli
loop
mov
mov
in
mov
movsb
imul
adc
jp
sub
inc
mov
insb
cmc
ds
notb
pop
shl
sub
pop
scas
test
xchg
out
hlt
push
pop
sti
jmp
hlt
mov
inc
ljmp
mov
pop
pusha
ds
mov
dec
arpl
cmp
jno
test
ss
jl
adc
insb
hlt
shll
pusha
inc
lahf
dec
mov
movsl
imul
inc
mov
pop
dec
ss
pusha
testb
in
inc
test
loop
out
adc
xor
adc
lcall
lret
fwait
arpl
jo
inc
push
enter
sbbb
pushf
rol
rol
mov
sbb
jo
test
mov
mov
cmp
rol
into
loopne
jo
dec
movsl
jl
insl
lds
test
push
and
fisubrl
jne
sahf
fwait
rcl
mov
jbe
mov
insb
sub
ja
mov
mov
aas
rcrb
jns
pop
test
jecxz
in
leave
push
push
shrl
sti
insb
ds
add
push
mov
sbb
int3
sti
scas
push
jmp
loop
sbb
jbe
icebp
pop
cwtl
fwait
and
jle
xchg
lcall
pop
outsl
test
push
jge
outsb
push
cli
jo
pusha
leave
loopne
add
loop
test
adc
scas
add
lea
das
sub
loopne
push
int
jmp
jl
rorb
jbe
jp
cmp
dec
xchg
cmp
sti
sbb
xlat
add
inc
mov
pop
push
orb
dec
shll
mov
insl
into
jo
fwait
lods
fistl
mov
cld
dec
insb
jmp
into
cmp
xchg
xorb
xchg
lret
dec
mov
or
jno
mov
jb
xchg
push
ret
insl
lret
add
adc
gs
xor
sub
adc
and
es
sbb
pop
xor
lods
adc
xor
dec
popf
orb
adc
sub
in
lea
jp
adcb
je
test
in
and
adc
mov
dec
push
jmp
push
ja
clc
push
pusha
dec
shrb
pop
and
sarl
and
test
aad
lods
mov
aaa
rclb
in
xchg
push
adc
xor
xor
sub
cld
pop
sub
aas
push
aaa
imull
xchg
push
fsubrl
repnz
jmp
sub
sbb
loopne
test
ljmp
adc
pusha
adc
mov
dec
int
lock
aaa
lea
mov
stos
cwtl
mov
movsb
push
jmp
loop
aam
add
add
in
imul
inc
mov
aas
or
push
jbe
cli
shrl
xor
pop
mov
call
xor
xor
xchg
mov
cmp
push
nop
in
push
icebp
push
adcb
push
das
mov
enter
push
xchg
dec
add
and
add
or
daa
test
pop
hlt
into
clc
cs
xor
nop
jg
add
push
testb
dec
div
xor
push
insl
ja
push
insl
es
inc
xchg
xor
adc
dec
add
dec
bound
or
inc
cwtl
xor
out
dec
jnp
daa
mov
sbb
repnz
and
pusha
xchg
jne
js
shrl
jmp
bound
mov
adc
repz
cmpsl
jno
push
sub
dec
xchg
adc
and
cwtl
dec
fldl2e
inc
dec
sti
inc
jmp
in
test
clc
push
mov
mov
popf
popf
mov
jl
cmp
stos
or
sub
add
xor
pop
ret
imul
dec
mov
jne
clc
mov
fs
out
mov
pop
cwtl
push
loop
incl
fildll
ret
movsb
push
and
pusha
outsb
sub
dec
ljmp
push
or
lods
mov
xchg
jno
pop
das
xchg
jg
lds
dec
or
bound
or
lea
jle
std
loopne
out
mov
xchg
cmp
and
mov
ja
or
mov
push
sub
push
shrb
imul
dec
imul
sbb
les
jge
loopne
push
shrb
gs
mov
adc
adc
add
xor
cmp
das
xchg
sub
test
push
xchg
inc
xchg
outsb
xor
les
pop
push
xor
les
test
sub
dec
cmc
out
addr16
push
and
pusha
mov
fldenv
push
and
scas
repz
call
add
rcrl
aas
push
cwtl
daa
mov
sub
lahf
test
sti
mov
lds
jno
push
add
xchg
negl
ds
decb
push
pop
adc
mov
xor
jle
jo
stos
int3
mov
out
cmpsb
outsb
incl
and
mov
ds
rcrb
ss
and
das
cmpsl
sub
repnz
cmp
xlat
dec
push
popa
add
daa
fstp
xor
inc
inc
movsb
jecxz,pt
or
inc
push
aas
cmp
push
bound
mov
jmp
adc
mov
push
mov
dec
js
xchg
fsub
rol
outsl
mov
inc
xchg
loope
out
nop
jns
pop
fsub
mov
push
push
mov
inc
sahf
ret
cmp
adc
pop
pop
cmp
push
sbb
push
pop
pop
shll
sub
popf
xor
ret
cs
bound
sbb
repz
stc
inc
negb
loop
in
in
jne
icebp
dec
add
mov
or
mov
lods
shrb
in
mov
xchg
js
add
mov
stc
shrl
mov
jp
push
enter
xor
ljmp
cmpsl
inc
test
mov
pop
gs
cmpsl
push
in
fisttpl
jno
jle
inc
push
insb
lahf
fnstenv
mov
and
and
xor
pop
ljmp
popf
mov
rcll
out
sub
mov
popa
stos
xchg
je
dec
jne
nop
jmp
out
adcl
mov
bound
bound
jb
pushf
pop
push
jg
mov
hlt
repnz
leave
push
cmpsb
push
jns
lret
stc
mov
lret
aam
rcrb
outsl
add
xor
adc
lods
bound
lods
cli
in
pop
loopne
imulb
and
xchg
jl
ja
dec
jnp
sbb
bound
call
cltd
sarl
lods
ret
xchg
sub
icebp
sarb
out
xor
xchg
inc
jmp
jb
out
notb
mov
jmp
out
jge
les
sub
add
mov
mov
sti
xor
inc
fsubrl
nop
scas
jmp
mov
or
jbe
cmp
fwait
xchg
fnsave
mov
gs
rcrl
cmp
hlt
pop
test
bound
test
les
or
inc
fisubs
push
cmp
incb
lock
mov
inc
dec
ds
add
dec
push
in
jl
sub
xchg
xchg
and
dec
mov
pop
jge
es
pushf
pop
inc
paddusb
mov
ljmp
das
clc
repnz
pushl
repnz
mov
xor
or
xlat
and
inc
lods
sti
scas
xchg
pop
lods
xchg
out
pop
icebp
imul
push
xchg
mov
or
mov
push
mov
bound
insl
xor
lea
aam
aam
lods
mov
dec
fisubs
int3
and
call
call
jno
or
sub
sub
jb
hlt
mov
movsb
outsl
in
sbb
popf
push
subl
leave
int
lahf
xchg
clc
in
shrb
or
pop
pop
ja
jnp
into
movsb
push
lcall
pusha
pusha
cmp
dec
mov
add
fdivs
in
dec
mov
into
in
jmp
lret
mov
insb
pop
and
mov
mov
pop
iret
test
je
leave
es
ds
out
inc
mov
push
sti
outsb
in
insb
xor
stc
or
pop
xor
jmp
icebp
sbb
jmp
dec
inc
addr16
int3
ret
cs
mov
pop
aam
push
push
and
mov
int3
daa
es
pop
mov
sbb
push
rorl
pop
add
xchg
xor
lret
xchg
scas
mulb
stc
fdivl
ror
aas
lea
repz
jg
in
and
push
aam
mov
stos
and
imul
bound
dec
std
sbb
mov
dec
sbb
sahf
mov
jmp
inc
dec
rcll
fwait
xor
pop
dec
lods
jnp
push
mov
mov
add
enter
rcll
push
pop
rorb
or
jns
add
mov
mov
sub
jns
mov
addb
fs
push
imul
pop
lret
daa
call
mov
sbb
jle
cmp
pusha
mov
mov
lret
and
sbb
je
cmp
jle
jne
int
cmp
push
dec
int3
inc
and
sbb
cmp
mov
pop
fiaddl
sub
adc
pop
dec
add
xchg
xchg
dec
lds
test
mov
dec
sbb
push
push
cwtl
cmpsl
and
pop
lds
pushf
jmp
dec
xor
push
push
sbb
outsb
mov
nop
popa
dec
jns
aas
cltd
dec
mov
pop
jnp
sar
dec
sub
loopne
fcoml
cltd
mov
mov
sub
in
ljmp
jg
push
scas
xchg
or
lahf
add
mov
pop
adc
cmp
inc
into
dec
andb
in
and
orl
inc
mov
mov
pop
pushf
pop
popa
sbb
insl
xor
pop
dec
imull
les
lret
je
dec
imul
fdivrs
dec
cmp
fsts
xchg
rcl
int3
xorl
out
test
jb
pop
push
sub
cmp
xchg
xorl
lret
sub
mov
orl
ss
mov
fs
sub
clc
pop
xchg
push
xchg
in
push
out
hlt
stos
pop
bnd
stos
pop
call
mov
addb
ds
stos
pop
les
pop
xchg
lret
loope
lahf
stos
enter
out
in
inc
xor
fstpt
cltd
jnp
mov
inc
mov
mov
xor
sti
int
pop
lods
cmpsb
pop
adc
fnsave
test
cltd
insb
ljmp
jg
push
popf
and
int
jno
dec
pop
push
clc
mov
adc
and
out
sbb
push
xchg
pop
jle
pop
cmp
inc
divl
ljmp
jmp
add
movsl
mov
push
inc
push
mov
mov
adc
cmp
lea
xchg
fldt
outsl
adc
int3
setge
sbb
xor
insl
movsb
jg
mov
sub
insb
popf
mov
mov
inc
out
sub
mov
rolb
jae
in
mov
call
pushf
movsb
aam
cltd
icebp
shll
in
popa
ja
jne
mov
xchg
and
stos
negl
sarb
cltd
mulb
mov
sbb
ss
daa
pusha
iret
xchg
jnp
inc
adc
mov
xor
xchg
jo
ja
cmpsb
call
sub
jp
adc
jge
ror
dec
xor
ret
mov
push
rcr
filds
xchg
pop
xchg
ret
into
mov
xlat
add
push
pop
out
popa
sbbb
inc
push
pop
imul
or
ret
push
pushw
sbbb
call
lret
cmp
jecxz
or
xchg
fnstcw
icebp
push
pop
cmp
leave
in
ret
and
shrd
das
push
out
mov
ret
imul
ja
cmp
inc
and
cli
jecxz
or
jae
lret
cmp
test
inc
lahf
or
add
add
shll
mov
cmp
mov
orb
xchg
cwtl
mov
mov
mov
sbbl
dec
jno
dec
fiadds
imul
push
mov
outsb
in
pop
pop
es
adc
inc
repz
adc
cmp
cmp
mov
dec
addr16
cwtl
lods
hlt
or
lahf
call
sti
dec
xchg
loope
push
daa
xchg
sub
dec
adc
jae
jo
aaa
pop
clc
pop
cmp
mov
mov
jb
frstor
stos
cmp
fcomip
xchg
pop
sbb
out
xchg
out
imul
pop
pop
pop
int3
addl
cmp
xchg
adc
jne
push
movsl
and
bound
ret
mov
ja
je
push
mov
push
mov
int3
adc
movsb
sbb
cmp
xchg
sbb
fiaddl
sub
dec
jmp
adc
lods
mov
ret
push
inc
xor
mov
cmpsl
mov
dec
out
repz
xchg
mov
pop
or
sub
aam
lahf
jle
js
mov
clc
and
ret
clc
cmovg
add
cmp
xchg
mov
mov
pushf
mov
outsb
sar
cmp
jle
pop
push
inc
add
inc
pop
in
xor
pop
faddp
sbb
mov
xor
xor
cwtl
test
and
clc
iret
push
test
sub
xor
je
out
push
int3
mov
inc
inc
lds
clc
stos
adc
icebp
mull
sub
lea
jns
jg
add
and
push
scas
aaa
aam
xchg
push
jg
mov
xchg
mov
pop
daa
inc
add
push
rcl
mov
xor
aas
cmp
fsubrp
sbb
sub
repz
shll
cmpl
or
and
pop
out
sbb
stos
or
pop
sti
sahf
fstpl
cmp
jae
lock
cmp
sbb
push
cltd
adc
mov
ds
mov
faddl
aas
dec
out
int
por
sbb
ss
mov
ret
out
jl
aaa
cs
xor
pop
jno
mov
cmpsl
dec
mov
pop
pop
stc
stos
push
push
decb
ret
pop
jge
aaa
push
pop
orb
or
les
outsb
cmp
adc
or
mov
repz
mov
sub
xchg
in
add
popa
daa
push
mov
lahf
rorb
sti
cmp
out
test
in
mov
mov
shll
dec
insb
stos
ja
scas
inc
push
sti
mov
add
sbb
incl
jb
shrb
outsl
test
inc
lods
push
inc
mov
insl
pop
int3
pushl
clc
adc
add
ret
pop
dec
jns
insb
ljmp
push
icebp
mov
test
fistl
stos
push
out
neg
leave
lds
shr
sahf
xor
pushf
mov
lret
jle
adc
in
out
push
les
clc
lods
inc
hlt
pop
jne
push
mov
repz
xor
mov
xor
push
shl
ja
mov
xchg
pop
notb
push
addl
jge
mov
cmc
es
scas
ss
adc
fistps
pushf
mov
and
jno
xchg
push
mov
in
dec
pop
mov
jmp
mov
add
xor
je
addb
mov
xchg
xchg
mov
jle
scas
inc
fldl
insl
xchg
push
jnp
xor
fwait
cwtl
pop
inc
add
pop
sbb
mov
arpl
mov
ljmp
mov
mov
mov
aad
fadds
shll
sbb
inc
or
orb
dec
mov
fcomps
stc
pop
ja
lea
jmp
jb
pop
cmpsb
xchg
pop
adc
xor
pop
aas
mov
push
jne
test
push
mov
aad
sti
movsb
xor
les
mov
mov
inc
rcrl
fldenv
adc
test
arpl
jmp
or
flds
xor
testb
sbb
testb
leave
and
cs
ret
jge
or
test
mov
in
mov
shrl
mov
xchg
xlat
negl
lret
pop
ds
nop
mull
mov
mov
stos
lds
push
jecxz
out
sub
daa
dec
push
adc
les
movsl
flds
scas
mov
jp
add
jo
xor
add
pop
adc
cmp
outsb
clc
inc
lock
push
hlt
repz
aam
jae
popf
icebp
fwait
es
sahf
in
jbe
ja
int
sar
ja
rcrl
jl
nop
les
pop
jp
xchg
and
mov
sub
jno
jbe
cmc
cmc
mov
xor
repz
mov
loop
jnp
add
push
rcll
xor
lds
pop
pop
jo
mov
pushf
clc
lods
js
sbb
mov
sub
jmp
adc
into
cmp
test
sti
mov
jbe
push
loope
mov
je
outsl
push
mov
pop
shll
dec
xor
das
or
icebp
das
dec
sub
test
imul
mov
sar
lds
add
cmp
mov
ret
dec
fs
mov
jp
test
mov
push
aaa
inc
das
add
xchg
aad
cmp
pop
pop
mov
jmp
xchg
stos
sbb
pop
mov
out
xor
push
or
test
pop
int
push
cmp
dec
or
out
les
dec
mov
jae
aad
push
mov
sbb
inc
pop
gs
inc
je
int
imul
sbb
inc
mov
lock
es
push
mov
jne
lds
loop
call
jne
iret
xor
xor
aas
or
push
sub
dec
shrl
fistpll
in
je
fistpl
lea
stc
mov
lcall
out
pop
ja
js
ljmp
mov
addr16
push
and
or
push
inc
xlat
ja
xchg
imul
pop
ss
aas
xchg
popf
pop
pop
pop
cld
mov
mov
mov
jecxz
sbbl
divb
dec
nop
cmp
imul
fadds
xor
pop
xchg
cmp
sub
pop
pusha
push
mov
push
in
je
adc
mov
add
xchg
and
aaa
ja
xlat
aam
or
or
jne
mov
inc
shll
mov
cmp
xchg
xor
out
int3
add
out
and
decl
imul
shlb
hlt
pop
add
call
push
jae
mov
xor
sbb
fidivs
popa
cs
insw
push
movsb
mov
movsb
mov
test
clc
rorb
dec
sub
lods
mov
icebp
nop
in
and
and
xchg
daa
xchg
add
bound
insb
outsl
inc
mov
test
fadds
cld
lcall
js
adc
jge
pop
rcll
inc
clc
cmp
or
cwtl
shrl
enter
sahf
xchg
repz
add
xlat
rclb
stos
sub
push
add
push
test
sub
or
mov
mov
movzbl
or
add
xchg
ret
fsubr
mov
xor
out
push
and
push
mov
xchg
pusha
push
imul
stc
fwait
cmp
adc
dec
mov
andb
icebp
inc
adc
sbb
xchg
pop
stos
fwait
daa
arpl
and
ljmp
in
sub
int3
out
jnp
stos
cltd
sbb
mov
cmp
jne
int
push
stos
scas
xor
ret
aad
add
lahf
mov
mov
mov
sub
inc
fldenv
sub
pusha
jg
lods
mov
jg
jae
cwtl
into
mov
imul
jecxz
push
roll
iret
sbb
jno
sub
test
in
je
cwtl
pop
pusha
jns
data16
enter
roll
cmp
jbe
lock
daa
xchg
mov
cmpsl
mov
orl
scas
push
into
add
rcrl
adc
or
pop
or
fildll
loopne
and
test
mov
hlt
and
call
jo
cmpsb
fstpt
sbb
push
adc
push
je
ljmp
cld
lret
push
fsub
xchg
mov
stc
jp
ss
lds
int3
arpl
cwtl
mov
sti
int3
fstpl
jbe
sub
adc
call
pop
sbb
scas
pop
sbb
xor
notl
mov
mov
push
push
andb
popa
lcall
cmp
or
lret
imul
dec
jle
out
test
mov
lahf
rcrb
loop
fimuls
jno
mov
mov
in
or
ret
jae
dec
lds
setl
xor
xor
cmpb
adc
pusha
inc
outsl
out
push
out
add
sbb
and
sub
test
cmp
call
mov
sub
xor
mov
adc
call
subl
jl
pop
mov
rorl
push
mov
sbb
inc
outsb
add
mov
adc
pop
cltd
dec
mov
or
test
movsl
rcll
gs
fisubrl
repnz
xor
xchg
hlt
push
jae
ljmp
lea
pushf
lock
sub
pushf
or
stc
cltd
xchg
cmp
xor
arpl
in
sub
sbb
push
jne
xor
or
stos
ljmp
cmp
adc
mov
cld
mov
fmull
and
inc
in
inc
jge
jb
arpl
xor
mov
shll
push
loopne
mov
fs
stc
cmp
fidivs
mov
xchg
and
jg
fs
bound
mov
iret
dec
push
shl
mov
fs
leave
push
mov
fwait
push
mov
mov
mov
test
cmp
aam
pusha
enter
push
push
icebp
and
mov
pushf
sub
add
popa
mov
arpl
ljmp
rcll
jbe
mov
add
pop
movsb
mov
ljmp
and
jp
in
fsubrl
xchg
sbb
xchg
pushl
cli
mov
lret
pop
mov
push
inc
xor
fisttpl
xchg
and
lock
decl
test
sarb
sti
shrl
jecxz
das
push
scas
ret
out
insb
ret
adc
mov
bound
clc
fisttpll
test
ds
cmp
inc
push
mulb
je
leave
add
lret
sbb
sarl
dec
cmc
pop
in
dec
das
push
dec
rclb
ljmp
or
pop
inc
add
mov
mov
mov
fsubrl
and
dec
and
out
jo
loope
mov
mov
addr16
push
adc
inc
lods
xor
pop
sub
or
icebp
pop
mov
sti
add
jo
and
les
cltd
mov
push
into
mov
adc
test
add
push
cmc
lods
cltd
or
loope
jo
stos
mull
xchg
or
mov
mov
sub
push
rolb
into
push
je
fnsave
pusha
mov
and
int
xorb
decl
fwait
lods
inc
iret
push
sti
xchg
aam
test
cltd
pop
xchg
cmpsb
push
subl
jnp
aaa
add
mov
fcmovu
add
das
xlat
stos
pushf
sti
add
and
fistpll
dec
add
out
test
out
popf
fisubrl
mov
or
hlt
and
fdivp
lcall
pop
inc
lods
sub
hlt
bound
cs
adc
jmp
inc
add
mov
stos
adc
negb
dec
pop
pop
sbbl
adc
push
adc
fnsave
dec
push
lcall
cmc
adc
mov
jnp
cmpsl
pop
mov
sub
mov
lods
inc
aaa
inc
jae
imul
mov
adc
pushf
cmpsb
mov
fiaddl
sub
scas
xchg
xlat
add
lret
mov
test
out
aam
push
cmp
lret
rorl
or
jnp
jae
dec
cmc
push
outsb
lret
nop
lods
dec
pop
call
xor
insb
add
xchg
fdivr
stos
mov
lahf
jae
dec
mov
ljmp
dec
pop
ret
out
clc
jbe
sbb
mov
xor
lock
test
repnz
and
inc
xchg
imul
rcrb
movl
int
sahf
mov
mov
jbe
lds
iret
jae
or
and
fnstenv
test
pushl
mov
inc
test
test
pop
aaa
mov
sbbl
push
subl
fcoml
pusha
jp
imul
push
add
mov
aaa
adc
add
cltd
mov
cmpsl
nop
xchg
in
outsl
jae
das
mov
jecxz
add
aas
xchg
out
cmp
cli
mov
jp
or
inc
cmp
lret
push
mov
add
lock
xchg
add
pop
stc
stos
push
sub
pop
mov
pop
mov
xor
adc
fisttpl
ficompl
xchg
jb
jge
pop
cmp
mov
mov
add
adc
inc
pop
fistl
addl
orb
push
mov
dec
lods
mov
in
sar
add
imulb
repnz
negl
mov
pop
cmp
dec
arpl
or
aad
in
clc
fmuls
push
adc
inc
test
mov
fstpt
fsubrs
mov
into
mov
xchg
sub
sub
fdivrp
adc
pushf
mov
jle
leave
fs
repnz
add
cmpsb
fs
jmp
aad
icebp
cmp
xor
mov
or
xchg
fwait
mov
push
inc
sub
jp
popf
mov
sti
scas
in
loopne
lock
pop
sbb
push
mov
push
sbbb
mov
inc
fwait
pop
xchg
and
push
test
mov
stos
dec
push
xchg
pusha
pop
les
call
lcall
data16
ret
mov
inc
xchg
lock
sbb
das
and
push
inc
rcr
sbb
cmp
mov
sub
mov
fldl
mov
arpl
cmp
dec
mov
ficoms
jbe
roll
in
enter
or
xchg
jle
or
mov
call
xor
xlat
jecxz
xchg
out
pop
shrl
lock
mov
cld
pop
push
nop
rcrl
in
in
mov
xlat
dec
push
xor
xchg
std
inc
enter
hlt
lods
leave
mov
fsubr
mov
mov
mov
xchg
mov
stos
mov
sbb
pop
aaa
mov
push
mov
cs
inc
int
add
adc
push
outsb
jmp
adc
rcrl
xchg
repz
arpl
mov
jecxz
and
mov
sbb
aas
adc
imul
insb
imul
jle
sarb
mov
pop
out
push
inc
test
mov
mov
dec
scas
mov
and
adc
inc
inc
push
rcl
js
mov
xchg
add
test
data16
mov
cltd
inc
pop
xchg
xchg
sub
dec
clc
lret
jnp
popf
fisttps
fstpt
shlb
sbb
or
js
sub
out
mov
xchg
inc
ljmp
leave
ret
sbb
icebp
mov
pop
inc
mov
adc
lds
pop
dec
cld
jle
push
int3
or
mov
add
pop
shrb
mov
movsl
xor
mulb
mov
jg
imul
pusha
lea
fcmovne
sub
pop
cmpsb
jae
adc
cmp
cmp
mov
push
ljmp
test
cmp
or
xchg
cli
lcall
aam
mov
test
mov
jb
mov
xchg
in
addr16
sti
lods
mov
popa
stc
mov
xchg
push
gs
sbb
xor
and
into
out
or
mov
pop
movsl
jl
push
dec
push
testl
xchg
loopne
mov
jge
punpcklbw
push
flds
mov
dec
popa
mov
movaps
andl
add
or
leave
jge
cmp
arpl
sub
push
and
and
pop
es
cmp
jo
pop
dec
xor
xor
and
cmp
iret
jno
push
test
lods
shll
rcll
call
push
pop
repz
jns
sbb
shr
ss
and
mov
fucomi
cmp
jecxz
mov
fsubrs
ds
inc
out
aam
dec
cs
sbb
jge
orb
shr
mov
rclb
cmp
icebp
jnp
jg
inc
add
jmp
jnp
rclb
dec
test
adc
mov
cli
std
lret
es
sbb
popl
push
dec
mov
jo
lcall
jo
fmulp
cltd
ret
insb
andl
je
fcomps
jb
pop
das
dec
mov
pop
ja
insl
iret
mov
outsl
stos
inc
mulb
push
loopne
icebp
lahf
xchg
pushl
xor
push
or
lcall
mov
imul
mov
jae
adc
outsb
xor
pop
aaa
adcb
sbb
push
loopne
xchg
mov
dec
push
mov
nop
adc
and
push
loopne
sbb
bound
jo
mov
test
xor
or
xchg
ret
cmp
test
mov
movsb
mov
int
hlt
xor
cwtl
mov
cmpsl
xlat
mov
ret
fimuls
sbb
xor
scas
fdivrl
xchg
imul
xchg
push
in
cli
imul
adcb
test
xor
mov
negl
jp
sub
les
inc
inc
dec
rcrb
mov
dec
pop
movsb
test
test
int3
xchg
addr16
fs
aam
sbb
jecxz
xchg
inc
jge
xchg
in
andb
inc
xchg
and
pusha
fiaddl
out
jnp
cld
out
ss
jb
cwtl
out
mov
xor
lock
cmpsb
aaa
cmp
mov
pop
cld
and
cmp
cmpsl
pusha
loope
fstps
test
push
imul
imul
mov
mov
lahf
mov
lds
xchg
mov
pop
aam
cwtl
fstp
mov
mov
or
cmp
mov
dec
jnp
push
mov
jae
lcall
pop
hlt
push
out
xrelease
sbb
bound
mov
sti
push
add
mov
mov
sub
add
xor
adc
sbb
in
enter
test
xchg
cltd
scas
in
pop
cmp
xor
std
push
mov
sbb
hlt
cmp
sbb
loopne
hlt
dec
xchg
and
icebp
rorb
jb
cmp
pop
cmp
pop
std
or
in
lret
pop
dec
mov
push
jp
iret
add
add
cmpsl
pushf
pop
inc
mov
mov
movsl
in
push
stos
rorb
mov
cwtl
arpl
mov
loopne
test
imul
push
fs
lahf
lcall
or
test
mov
or
jbe
fwait
outsl
push
push
ret
mov
pop
lret
push
orb
and
sub
adc
lea
std
mov
pushf
jne
imul
xchg
xchg
dec
fs
decl
sub
jne
movsl
mov
fnsave
in
inc
xor
sub
lock
jp
adc
mov
rcrl
shll
pop
xchg
mov
and
mov
pop
shll
mov
mov
jbe
or
mov
cmp
addr16
insb
ficomps
dec
lret
jle
jge
push
mov
add
fcmovnbe
fisttpl
xlat
pop
enter
push
xor
mul
pop
xor
xor
sub
mov
cmp
in
jae
sub
xor
ret
fisttpl
aaa
lret
pop
mov
sbb
or
aam
insb
test
hlt
dec
dec
xchg
add
mov
roll
pop
addl
lea
mov
int3
imul
in
dec
sti
mov
out
push
sub
pop
mov
sar
sbbl
xchg
sub
xchg
addl
aam
fbld
ror
jl
cmp
mov
mov
outsl
sti
jge
jno
repnz
sahf
jge
mov
pop
mov
sbb
int3
sbb
push
test
cmp
sub
jb
inc
scas
xor
das
dec
loopne
aad
push
adc
mov
add
mov
mov
jmp
aam
sbb
mov
push
icebp
adc
xor
mov
dec
ljmp
pop
imul
nop
jne
sbb
jns
sub
clc
idivl
sub
cmpsl
push
xor
lahf
jle
dec
dec
stos
out
sbb
mov
push
fwait
mov
add
rclb
dec
shrl
mov
sub
hlt
xchg
mov
xchg
adc
std
inc
bswap
cmpsb
lock
dec
mov
pop
rclb
mov
call
add
and
fs
lds
shll
sbb
mov
lock
push
insb
xchg
fcmovnu
mov
call
cmp
xor
insb
jo
call
mov
sub
jg
pop
and
mov
sti
push
and
push
loop
mov
lock
iret
cmp
imul
fmuls
cmpsb
lods
sub
fisubrs
cmpsl
sub
inc
bound
imul
repz
push
or
pop
xchg
inc
das
pusha
mov
jae
repz
repz
sar
ds
enter
movsb
pop
add
clc
sub
aas
mov
fcomip
enter
cmc
lods
ljmp
mov
icebp
push
notl
fiadds
or
fwait
cmp
sub
adc
push
leave
sub
imul
push
xor
subb
aam
dec
sub
in
inc
jbe
insl
jo
pusha
mov
loope
in
call
sbb
test
mov
rorb
nop
movsl
ss
mov
movups
push
pop
sbb
inc
ffreep
lods
ja
lahf
fiaddl
ja
fsub
inc
add
insl
sbb
sbb
jle
daa
pusha
push
cmpsb
jmp
daa
sbb
push
rclb
adc
sbb
and
ljmp
sar
mov
lea
dec
dec
pusha
dec
cmp
or
mov
pop
push
push
addr16
sub
jg
sbb
lea
mov
enter
xchg
popf
xchg
notl
iret
dec
or
jne
inc
cmc
out
iret
xor
xchg
sbb
imul
inc
ret
mov
mov
test
std
insl
outsb
into
test
filds
cmp
xor
stos
dec
mov
stos
dec
shll
mov
scas
sbbl
adc
xchg
popf
jge
jns
hlt
mov
arpl
sbb
imul
add
xchg
inc
and
mov
rcll
test
rclb
cmpsl
out
xchg
xor
mov
xchg
outsl
xchg
sahf
jl
hlt
imul
lret
sub
push
and
in
imul
mov
addr16
fimuls
mov
test
add
push
sbb
mov
mov
fidivs
jno
xchg
dec
loopne
popa
xchg
inc
cwtl
bound
orb
das
stos
test
ds
ljmp
xchg
dec
pop
subl
icebp
push
xor
lds
inc
cmp
push
cmp
mov
nop
jle
xor
outsl
loop
sahf
cwtl
inc
and
xorb
push
xor
add
push
arpl
ror
mov
and
cmp
inc
jl
cmp
sub
add
mov
loopne
or
hlt
mov
lods
pop
jnp
inc
inc
dec
and
and
sbb
mov
in
fdiv
movsb
sbb
jge
outsb
cwtl
movsl
je
sbb
push
enter
addb
add
loop
and
sti
push
insl
sub
dec
icebp
int
xchg
movsl
mov
mov
sub
pop
popa
xchg
adc
lds
ret
sbb
pusha
inc
push
inc
sbb
mov
cmc
cmp
adc
mov
fsubs
ret
jns
sbb
jnp
cli
inc
xorb
stos
daa
mov
sbb
mov
mov
xchg
aam
adc
sub
addb
bound
and
stos
stos
pop
add
enter
lods
mov
adc
sahf
negl
aad
mov
dec
and
adc
cli
out
or
adc
loope
mov
test
mov
test
mov
psubd
test
in
ja
and
inc
adcl
mov
je
arpl
dec
mov
sub
out
repz
int
stc
dec
out
test
lea
inc
cmc
push
jp
adc
xor
pop
movsb
push
andb
adc
push
aad
or
jmp
loope
rorl
inc
ret
data16
mov
sbb
out
jb
adc
add
popa
jge
ljmp
mov
sbb
and
lret
jae
mov
ret
jg
xchg
into
sub
pop
jp
xchg
mov
rclb
incl
sarb
repnz
inc
loope
scas
lock
pop
xlat
rorl
mov
jbe
cmc
je
push
jg
cltd
lcall
jmp
dec
mov
repz
es
sbb
sbb
xor
shrl
jg
or
xchg
aad
out
cld
data16
dec
mov
imul
das
jl
add
dec
mov
imul
push
pop
test
dec
sub
lahf
lods
xchg
pop
in
daa
push
push
test
cld
push
in
mov
shrb
lods
jmp
mov
jecxz
lods
mov
inc
inc
loop
sti
and
movsb
movl
mov
addr16
xor
out
cmp
movsb
pop
shrb
mov
push
leave
sub
add
daa
mov
ficomps
stos
mov
pop
popa
jbe
outsl
cld
adc
test
mov
out
mov
cwtl
test
in
popf
in
inc
or
outsb
push
xchg
fdivl
pop
cmc
xchg
pushf
sbb
pop
mov
jae
dec
loopne
jae
xchg
movsb
mov
dec
adc
ds
mov
cmp
mov
or
pop
mov
inc
cltd
outsl
cltd
pushf
push
push
mov
fs
fisubs
dec
insb
test
sbb
inc
xchg
popa
in
push
nop
mov
mov
enter
xlat
pop
sbb
or
inc
cli
ss
inc
pop
mov
dec
cmp
xor
cmpsl
sbb
enter
pop
into
mov
dec
imul
sbb
lret
xor
jecxz
scas
lds
xchg
cmp
push
sbb
dec
aam
jle
add
push
sbb
and
cltd
stos
xor
push
scas
and
shl
xor
adc
rol
push
lock
xchg
outsl
pushf
sbb
mov
jge
lahf
dec
shll
mov
mov
mov
add
lods
jb
pop
xchg
out
push
jb
adc
or
mov
xor
mov
inc
movsl
or
xlat
ret
aaa
mov
test
push
adc
adc
push
or
lahf
scas
imul
inc
lret
leave
xchg
stos
cli
or
dec
mov
xchg
mov
xchg
xor
mov
test
xchg
push
pop
sahf
repz
sti
mov
enter
gs
push
cld
adcb
mov
je
mov
movsl
inc
lahf
inc
adc
pop
fsts
inc
push
in
test
imull
xor
enter
loop
call
je
or
clc
add
in
jns
arpl
into
pop
add
inc
dec
mov
sbb
outsb
rcrl
shl
jne
stos
pop
mov
sbb
inc
or
stos
mov
rcrl
test
iret
xchg
rclb
jne
or
mov
mov
push
and
pop
out
das
pop
sahf
sub
into
push
repnz
in
pop
add
outsl
cmp
in
pop
int
xor
outsl
and
mov
xor
insb
pop
mov
jmp
divl
cmp
inc
lahf
ja
int
or
aad
mov
adc
xor
call
cmp
cmp
inc
lret
je
or
jns
in
sub
out
xchg
adc
push
fistpll
dec
dec
ficompl
dec
mov
xor
xchg
sbb
and
jl
out
ds
mov
lret
sub
arpl
add
or
mov
adc
popa
cmpsl
cltd
lcall
test
inc
ffree
add
aas
in
ret
pop
test
lods
mov
testb
mov
cmpsl
mov
mull
mov
outsw
ficoms
movsl
out
stos
inc
sahf
xorl
std
inc
fwait
inc
movsl
movl
xchg
cmc
out
jbe
lret
rep
loop
sbbb
and
mov
rolb
arpl
add
cmpsb
jnp
or
dec
aam
lret
mov
mov
ja
cmpsb
arpl
mov
xor
shll
loope
mov
cmp
stos
jle
fdivrl
dec
mov
add
out
hlt
dec
pop
fs
loopne
maskmovq
imull
mov
loope
push
cltd
lcall
shrb
or
adc
mov
scas
sbb
scas
adc
aaa
outsl
dec
inc
inc
aam
fists
sbb
ss
lret
ret
fs
pop
es
inc
or
cmp
loop
xchg
negb
dec
repz
stc
and
pop
sub
cli
sbb
fsubs
fmul
push
cli
pusha
mov
arpl
jbe
xchg
sti
jle
and
xor
sbb
cmp
dec
sub
loope
shl
ja
cmp
sbb
dec
push
jecxz
outsl
xchg
cmp
adc
xor
xor
out
lcall
test
add
std
mov
bound
roll
mov
mov
mov
and
in
repnz
fsubrs
jl
sub
cmp
lock
cwtl
repz
popa
fdivrl
mov
pop
mov
fldt
sub
into
imul
int
and
jmp
push
cmc
sub
repz
data16
adc
stos
test
push
inc
cwtl
xor
call
or
push
mov
dec
leave
repnz
lret
lds
xor
aad
andb
leave
jg
mov
icebp
or
and
push
xor
movsl
loopne
mov
dec
dec
pop
inc
aam
in
mov
fisttpl
cmp
into
adc
popf
and
jns
cmp
imul
mov
in
testb
fldl
push
out
sub
cld
stos
loopne
iret
mov
adc
or
lods
call
imul
mov
fcoml
icebp
inc
ds
mov
pushf
outsb
out
inc
xchg
fs
cmc
sbb
hlt
clc
add
mov
sub
mov
dec
jecxz
icebp
cltd
or
adc
ret
xor
mov
insb
dec
xor
in
inc
pop
mov
jg
xchg
jmp
into
fisttpll
leave
lods
sub
jne
cmc
test
in
dec
xchg
loopne
sub
cwtl
aaa
adc
jno
loopne
jp
sbbl
lock
xchg
shll
push
push
mov
jnp
mov
sub
jne
dec
out
out
lods
ss
out
push
inc
mov
xor
sbb
pusha
adc
in
aam
into
rorb
sbb
fs
pop
test
mov
shl
add
push
in
jns
dec
les
shlb
or
push
sub
add
dec
mov
jecxz
mov
and
ret
jns
enter
cmp
xlat
adcb
xchg
cmp
pop
loope
adc
mov
shll
sahf
gs
and
inc
arpl
jg
sbb
rcr
jae
fwait
mov
popf
xor
pusha
cmpsb
popa
stos
add
ucomiss
dec
cmc
inc
pop
int
adc
inc
jae
data16
fdivrs
cmp
and
arpl
leave
inc
addr16
ja
lret
inc
and
iret
pop
push
jae
fcomps
push
mov
jno
adc
lock
push
jne
mov
mov
imulb
pop
sti
push
jae
andb
imul
and
test
mov
adc
shrl
ret
push
pop
ljmp
imul
pop
push
mov
sbb
rcrl
dec
testb
in
sub
clc
dec
inc
pop
ficoms
cmpsb
inc
add
adc
sti
push
popa
icebp
roll
add
cld
pop
xchg
push
or
clc
dec
mov
mov
imul
sub
imul
push
imull
mov
fstl
xchg
jns
and
mov
out
and
dec
insl
sbb
fst
rol
mov
fidivs
cmp
adc
shr
push
inc
xchg
mov
rclb
in
xchg
add
xor
push
cmpsl
mov
sub
mov
stos
push
jp
rcrb
mov
mov
push
lock
mov
movb
ret
adc
in
int
fdivr
mov
aaa
or
dec
loopne
imul
lock
sub
cmpsl
popa
leave
pop
jo
and
and
push
jb
lds
sbbl
pop
insl
mov
data16
xor
pop
aaa
push
daa
jb
push
mov
pop
xchg
scas
test
daa
test
jae
in
jmp
fwait
xchg
and
aad
mov
repnz
cmp
xor
shll
out
mov
add
xor
dec
lds
mov
inc
mov
sbb
fwait
movsl
pop
int
or
clc
mov
pusha
xor
in
fwait
add
cmp
std
mov
mov
mov
insl
mov
push
mov
fnsave
xchg
jo
ljmp
push
cmc
mov
or
rcrb
stos
test
fistps
or
adc
mov
hlt
and
jge
push
or
mov
or
push
lods
push
inc
sub
cmp
dec
mov
xchg
in
lcall
outsb
mov
inc
jg
sub
sub
inc
je
outsb
cmpsb
add
scas
jo
daa
push
lods
jnp
mov
lret
fmuls
xor
out
push
dec
sbb
std
jl
and
idivb
subb
imul
out
inc
out
mov
loope
stos
mov
cmp
or
or
sbb
jae
push
dec
push
dec
add
dec
ret
jno
arpl
lret
shlb
pop
push
in
enter
cmp
test
cmc
mov
and
sbb
mov
push
adc
fmuls
add
mov
push
ljmp
sub
pop
in
dec
mov
gs
pop
pop
sbbl
mov
popf
push
sbb
pushl
das
cmp
in
mov
xor
shrl
adc
sbb
icebp
dec
dec
fs
cld
fadds
cmp
stos
popa
xchg
jae
ja
or
test
pop
xor
fbstp
xor
sub
leave
mov
mov
insl
sbb
shlb
inc
movsl
push
in
clc
out
xor
jo
rol
cwtl
cmc
std
nop
mov
out
sub
test
cmp
clc
fs
sbb
add
pop
adc
addr16
ja
xor
pop
push
inc
jo
cmc
jno
clc
scas
lds
xchg
ljmp
rorb
lahf
movsb
cmp
es
cmp
hlt
test
arpl
mov
mov
adc
nop
push
cmp
mov
cmp
mov
dec
add
outsb
stos
leave
jecxz
sub
xor
adc
pop
push
inc
push
aas
in
arpl
xchg
in
iret
sbb
adc
mov
sahf
stc
mov
mov
pop
inc
repz
adc
inc
dec
adc
insl
xor
fdivl
push
add
and
pop
lcall
xchg
lods
pop
pop
mov
inc
pop
imul
sbb
ss
popf
mov
pop
shrb
bound
dec
adc
jle
inc
mov
cmp
imul
gs
lahf
lods
leave
mov
jecxz
lods
jl
add
aas
sub
notb
or
je
jns
xor
adc
mov
push
or
ja
mov
stos
dec
inc
popa
cmpsb
inc
or
jg
insl
shrb
adc
gs
xor
insb
imull
enter
enter
lds
xchg
push
inc
sub
xor
add
cltd
xlat
push
lcall
aam
mov
cli
inc
mov
sahf
or
cltd
jbe
int3
sti
lret
or
jle
sahf
outsb
aaa
imul
xchg
sbb
sub
in
xor
addl
xchg
cmc
aad
fadds
inc
xchg
rclb
xor
sbb
leave
mov
lds
in
sahf
xchg
test
mov
push
rcrb
popa
jb
rcl
lcall
push
dec
push
sti
mov
xchg
les
ss
adc
pusha
jge
lcall
bound
jae
repnz
das
das
mov
icebp
dec
popa
push
fptan
xchg
mov
xchg
leave
sbb
push
clc
mov
xor
in
push
popf
push
xchg
pop
orb
dec
and
lds
mov
add
orl
jmp
mov
inc
pop
test
es
cmp
xor
mov
mov
lret
daa
xchg
ret
pop
daa
dec
push
lds
addr16
and
fistps
subb
icebp
pusha
add
jl
lods
sbb
fstl
xor
aad
aaa
inc
inc
insl
jmp
dec
sahf
daa
push
mov
mov
shl
aas
push
xor
mov
dec
inc
adc
aaa
mov
rcrl
and
dec
jecxz
and
popf
cwtl
lret
cs
sbb
pop
imul
push
sub
int
sub
aam
fnsave
pop
stos
rolb
mov
push
adc
or
daa
sub
cwtl
push
adc
ds
dec
stos
mov
mov
or
repnz
cmp
shlb
test
aam
daa
cmp
lods
pop
and
ljmp
out
mov
add
notl
lods
mov
sbb
imul
test
rcrb
jg,pt
lret
testl
push
inc
nop
outsb
push
movsb
mov
int3
movsb
cli
andl
inc
add
adc
mov
out
clc
iret
mov
xor
mov
push
or
fbstp
jg
pop
mov
mov
inc
gs
aad
jae
pop
das
mov
and
jmp
cmp
push
jae
fsts
xchg
test
pop
call
jcxz
mov
or
clc
pop
aad
pop
shrl
push
aam
jl
inc
js
popa
mov
addr16
data16
add
add
arpl
test
mov
lcall
sub
xchg
mov
pop
fcoms
pop
sahf
sub
dec
push
fwait
roll
fcmovnb
and
add
int3
sbb
test
movl
sbb
imul
sub
push
mov
movsl
rcll
rcrb
xor
lahf
loope
adc
faddp
fadds
push
aas
ret
cltd
test
les
mov
dec
in
sbb
insl
dec
js
arpl
mov
lods
mov
rcrl
add
test
in
inc
movsb
mov
aam
dec
mov
imul
or
sbb
jmp
daa
scas
insl
arpl
pop
jns
pop
enter
and
aas
stos
popf
xorb
pop
pop
sbb
inc
in
fsubrl
dec
mov
stc
cmp
cmpsl
insl
data16
add
jo
xchg
paddsw
sub
dec
mov
test
mov
mov
call
jge
and
scas
cmp
xor
xorb
sbbb
arpl
jp
sbb
and
test
sbb
std
push
cli
add
sub
xor
pop
cmp
jo
test
mov
push
test
mov
pusha
call
push
int
sub
sub
sbb
pop
adc
sub
rorl
pop
sarl
push
cmpb
movsb
or
in
pushf
mov
or
shlb
fidivs
inc
xchg
cvttps2pi
fsubrs
mov
cld
sbbb
pop
lods
push
inc
pop
adc
sub
mov
push
call
mov
ficomps
dec
mov
and
arpl
mov
xor
xor
sbb
jbe
cmc
lds
popf
movsl
add
hlt
jge
sti
into
rcll
call
add
bound
pop
gs
mov
movb
inc
popa
and
dec
jmp
cwtl
pop
ja
add
shlb
repz
jecxz
pop
cmp
jb
xchg
adc
bound
pop
mov
pop
mov
ret
mov
fistpll
push
repnz
sub
clc
push
mov
mov
cmp
pop
mov
ja,pt
xchg
lret
div
adc
std
cwtl
cwtl
clc
sub
or
inc
call
cmp
fwait
pop
loop
sbb
adc
test
jmp
inc
daa
xorb
pop
push
popf
fwait
outsb
xor
cld
iret
mov
rol
mov
mov
movsb
dec
pop
push
les
mov
test
xchg
inc
lock
mov
pop
inc
inc
push
mov
push
int3
sbb
scas
arpl
lea
outsb
inc
mov
fstl
fwait
stos
out
dec
sbb
push
xchg
dec
scas
out
pop
bound
and
mov
sub
gs
test
lds
arpl
loop
popa
fsts
pop
lret
push
add
cmp
cmpb
stos
sbb
shll
add
pop
daa
and
xor
and
cmpl
ficoms
or
and
fwait
subb
shl
fs
mov
or
leave
or
jo
dec
pop
je
jl
cs
mov
int
xlat
inc
in
sub
clc
out
out
sbb
mov
dec
aaa
fnstsw
push
jb
mov
iret
movsb
int
adc
aaa
mov
add
sbb
mov
jp
shrb
das
fadd
rcrl
das
cmp
jge
lcall
loopne
mov
pusha
adc
fisubl
or
push
addr16
loopne
aas
mov
cmc
jo
aas
mov
jle
and
mov
pop
fnstcw
dec
mov
inc
sub
sub
jns
pop
ds
pop
fdivl
mov
and
test
xor
pop
adc
jb
ret
retw
mov
outsl
mov
scas
dec
sub
out
mov
mov
insl
sahf
cli
fsubr
fbld
sub
aaa
pop
xor
or
jmp
mov
nop
nop
jb
lret
push
leave
in
nop
sub
or
pop
cmp
out
push
hlt
jno
dec
dec
lea
fists
loope
xchg
and
std
sar
enter
add
js
sub
stos
and
pusha
mov
fldenv
fcmovbe
adc
dec
fsubrs
add
scas
mov
orb
out
xchg
cmp
inc
adc
int
pop
jg
dec
js
stc
xor
roll
and
shr
sbb
push
push
pop
lods
jo
pop
enter
xorb
dec
sub
push
inc
je
pop
xor
orl
jno
xor
adc
mov
mov
xor
cmp
xchg
xor
mov
cli
cmp
xor
lods
into
leave
sarl
mov
push
fisttpl
cmpsb
inc
add
mov
inc
lret
imul
das
aas
shll
mov
xchg
ret
xor
in
hlt
insb
rep
out
rcrl
dec
dec
fstpt
cmp
dec
out
or
pop
mov
or
cs
icebp
sahf
gs
ja
into
popa
popa
fistl
movsb
pop
ljmp
sbb
jmp
insl
fidivrs
mov
outsl
les
loop
and
push
inc
xchg
mov
jle
lods
scas
insb
pusha
fstpl
push
fwait
xor
jnp
dec
iret
adc
push
sbb
sbb
inc
xchg
lret
insb
cmp
sbb
mov
mov
ljmp
mov
movl
jb
std
xor
push
aad
rolb
push
leave
dec
sti
in
xor
ficoms
push
push
mov
fcom
jmp
outsb
pop
jno
nop
negl
jg
fs
arpl
xchg
dec
push
scas
pushf
sbb
mov
add
push
inc
aam
mov
test
mov
adc
sub
adcb
movsb
push
scas
dec
out
mov
stc
jp
mov
fistps
and
jecxz
push
push
sub
or
ljmp
push
dec
pop
mov
insl
jecxz
or
jne
in
sub
xor
sbb
inc
inc
loop
xchg
mov
push
jg
testl
add
jne
jbe
inc
mov
stos
ret
mov
mov
sub
xor
je
test
pop
into
repnz
fstl
xchg
out
jne
dec
inc
xchg
out
add
jo
xchg
jb
push
and
clc
adc
scas
pushl
xchg
fcmovb
ljmp
dec
decl
xchg
lods
gs
out
adc
mov
fimuls
add
cmp
sbb
cmp
sbbl
sbb
shlb
mov
jno
jne
mul
adc
mov
repz
adc
and
scas
cwtl
adc
mov
in
mov
mov
jmp
in
leave
leave
mov
andl
aad
push
cwtl
popa
lea
mov
xor
xor
jecxz
jo
mov
xchg
xchg
cmp
mov
or
xchg
xor
adcl
imul
jl
aaa
je
cld
sbb
pop
pushf
in
push
mov
inc
cmp
pop
add
test
and
lods
fs
ja
mov
jmp
outsb
pop
pop
jnp
jl
pushf
aad
fldt
mov
fildl
cmpb
push
xchg
imul
mov
add
mov
out
sbb
and
mov
dec
fnstcw
das
push
jmp
ds
rol
push
ret
test
jg
test
arpl
or
push
leave
nop
and
orb
adc
ljmp
loop
das
mov
mov
loopne
outsb
loop
sub
jb
or
dec
jle
jecxz
scas
and
stos
loop
xchg
and
inc
add
mov
movsl
cmp
outsb
push
in
ficoml
and
xchg
mov
mov
push
cld
jecxz
mov
int3
bound
mov
cmpsl
loop
stos
or
aam
test
loope
aas
movb
sbb
ret
je
cmp
insl
js
call
pop
out
mov
dec
rorl
dec
push
loop
push
test
push
scas
or
sbb
pop
insl
xor
imul
out
popa
dec
add
xchg
and
mov
cmp
mov
shl
dec
dec
xchg
sub
jns
push
lret
sub
les
stos
jp
scas
imul
mov
repnz
cmp
testl
aam
jg
out
or
lcall
repz
popf
fwait
sbb
push
movsl
clc
negl
xchg
das
fwait
out
and
std
fildll
adc
lcall
int3
mov
aaa
fcmovnb
stc
add
negl
sbb
cmp
nop
pop
movsl
jge
and
xchg
mull
push
outsb
inc
shrl
jne
in
in
xor
cmp
xchg
cs
sbbl
mov
std
test
xor
sti
sbb
or
inc
push
sahf
pushf
xor
dec
daa
jo
jo
out
push
repz
cwtl
stos
mov
push
cld
jno
push
adc
bound
scas
jge
push
loopne
dec
test
xor
data16
dec
ficomps
dec
cli
adc
sbb
out
and
inc
pop
pop
aam
xor
ret
rcll
fs
cli
sbb
cmp
mov
mov
mov
cwtl
div
addr16
mov
sbb
sub
inc
dec
stos
mov
into
daa
mov
or
mov
ljmp
es
out
shlb
jmp
jno
lea
xor
ljmp
and
jo
repnz
testb
cmp
xchg
cmp
or
sbb
mov
mov
inc
fnstenv
push
lret
fmuls
int3
or
xor
cmc
in
add
or
mov
jb
dec
popf
push
push
mov
mov
xchg
xchg
ret
clc
out
lret
jg
sbb
xor
sbb
push
pop
mov
inc
sti
pop
cmpsb
jae
push
pushf
stc
pop
ret
pop
cmp
insb
mov
in
mov
or
stc
scas
es
inc
inc
mov
jle
out
mov
mov
sti
addl
pop
push
ss
mov
xchg
sub
lea
cmp
inc
ja
gs
xchg
xor
xlat
mov
lds
xchg
pop
insb
bnd
out
jnp
and
mov
sub
push
loope
push
loopne
jbe
cs
nop
add
jne
dec
add
xchg
cld
sti
hlt
pop
lea
flds
into
jno
ds
push
sub
jp
mov
clc
pop
mov
aam
cmpsb
mov
sbb
sub
scas
stos
ljmp
fwait
sbb
pop
cmc
jb
cltd
fwait
enter
es
add
movsl
dec
and
xchg
mov
add
mov
mov
mov
cmpsl
stc
dec
push
test
jb
gs
ret
pop
clc
lcall
cmp
inc
jno
pop
repnz
inc
pusha
aad
and
xchg
sbb
lods
mov
and
dec
aaa
pop
sub
mov
sbb
lcall
push
cmp
std
cld
mov
cli
ret
fcomps
or
popa
push
push
in
xchg
jecxz
int
out
in
adc
pop
add
xchg
outsb
push
cli
xchg
scas
cmpsl
pop
and
sbb
inc
inc
cs
scas
jecxz
push
mov
and
and
xchg
jle
shll
inc
pusha
mov
loope
adc
scas
lret
mov
sbb
les
les
pushf
stc
xchg
jmp
xchg
fbld
xor
xchg
add
dec
pop
adc
fisttps
ja
mov
push
push
pop
and
push
stos
inc
movsb
push
jp
inc
and
inc
xchg
add
push
pop
dec
cmp
lahf
popf
push
out
add
clc
hlt
push
icebp
ss
dec
jp
sahf
mov
cmpsb
mov
cmc
jno
cmp
sbb
test
out
shll
pop
lcall
push
xchg
movsb
xchg
fidivs
in
scas
lret
aas
or
int3
jmp
hlt
addl
jge
fwait
mov
inc
out
adc
movl
add
popf
pusha
es
decl
adc
pop
ror
push
sahf
xlat
js
repz
std
ss
out
cmpsl
out
sbb
in
int3
popf
pop
fcmovbe
movsl
sub
outsb
loope
sbb
scas
mov
push
dec
dec
xor
jge
mov
frstor
testb
sar
sbb
mov
jb
push
cmp
arpl
sti
cmp
les
mov
adc
inc
add
cmp
test
add
hlt
outsl
pusha
sahf
mov
cmp
inc
cmp
fbstp
jmp
rorl
xchg
idivl
xor
push
mov
test
pusha
pop
xor
imul
pop
xor
cwtl
int
and
lods
stos
cltd
arpl
push
popa
dec
add
xchg
test
je
sub
and
popa
sahf
jbe
add
jg
cmp
fidivrl
rorb
jno
hlt
inc
fildl
rol
jp
cmpsl
idivb
push
lcall
jge
rol
jp
xor
lock
mov
lret
popf
jne
in
ljmp
in
push
sub
out
or
sbb
xchg
sbb
jb
fmuls
sbb
out
addl
push
daa
inc
mov
xor
pop
ds
and
push
stos
stos
jmp
cmp
lods
imul
subl
and
shrl
dec
xchg
sets
pop
cwtl
add
mov
cmp
mov
push
mov
enter
in
testb
push
pop
inc
inc
pusha
movsb
arpl
add
dec
mov
jl
dec
sahf
idiv
xchg
push
fs
mov
fs
or
sysenter
stos
ja
cwtl
push
cltd
lea
pushf
test
in
addl
mov
faddp
or
mov
arpl
les
dec
pop
rol
inc
push
mov
stos
adc
fisttps
or
pop
rcl
leave
mov
mov
mov
pop
inc
xor
add
dec
mov
mov
cmpsb
int3
out
jl
pusha
inc
adc
dec
cmp
shrl
cmpsb
test
and
sub
movb
xor
out
fistpl
add
and
int3
cmp
nop
mov
sub
cmp
test
sbb
pop
dec
ror
mov
pop
out
dec
in
xchg
jge
dec
and
adc
outsb
mov
mov
test
xchg
nop
jl
jne
clc
dec
cmp
imul
ds
push
jb
inc
lcall
addr16
cmc
or
push
inc
sbb
gs
popa
addr16
enter
cwtl
mov
push
jle
jl
cmp
popf
pop
jmp
xchg
enter
xchg
push
icebp
fcomip
xor
sub
bound
xor
push
in
lret
pop
lds
fcoml
sbb
cmc
scas
out
adc
mov
or
mov
adc
gs
das
add
mov
add
add
adc
rorl
les
aad
std
fildl
icebp
or
sbb
jecxz
ficomps
cmp
mov
es
fidivl
mov
shl
sbb
push
in
sub
fsubp
mov
xor
shl
xchg
pop
lods
mov
arpl
and
out
std
aas
scas
inc
sbb
test
in
out
imul
xchg
outsl
jno
pop
js
pop
jg
mov
sti
push
dec
data16
add
inc
mov
push
imul
clc
jns
or
cs
cmpsl
aad
loope
xor
push
mov
test
dec
mov
cs
pop
loop
fs
mov
jo
mov
in
sbb
mov
movsb
jle
js
mov
addl
add
add
sbb
movsb
sub
sub
push
sarl
xchg
je
add
jle
pop
cs
jge
mov
mov
jb
sbb
and
dec
test
subl
arpl
in
mov
aas
cmp
fstpl
fdivp
mov
scas
cmp
and
jmp
push
add
outsl
fmull
pop
fidivrs
pop
or
and
outsl
inc
dec
mov
add
jmp
sbb
call
jb
fldl2e
hlt
mov
push
pushl
inc
add
push
xchg
add
or
stos
add
adc
jb
xchg
add
les
adc
data16
fdivl
push
icebp
mov
pop
push
sbb
push
js
jbe
stos
andw
aaa
cs
dec
add
push
out
and
cmp
loope
mov
mov
insl
xlat
dec
outsl
xchg
xchg
and
add
adc
jp
and
lret
inc
mov
scas
pop
jecxz
adc
negb
xor
jae
or
fistps
mov
sub
jmp
out
imul
sbbb
daa
push
and
js
xor
or
xor
inc
orl
add
pop
loopne
xchg
add
into
aaa
insb
ficompl
stc
fwait
jbe
xor
jmp
js
mov
inc
add
inc
mov
arpl
into
xor
pop
adc
inc
mov
xlat
mov
frstor
rol
scas
mov
mov
sti
mov
xchg
iret
xor
andl
adc
xor
xchg
adc
mov
iret
or
xlat
int
mov
fidivrs
ss
mov
popf
inc
mov
add
arpl
xchg
jle
inc
fyl2x
sbbb
xor
mov
aad
cmp
adc
mov
int3
stos
mov
clc
js
and
adc
pop
andl
cmc
or
jno
cmp
jecxz
inc
je
push
daa
pop
out
sub
mov
add
jp
scas
daa
imul
mov
ss
adc
add
pop
pop
jecxz
test
sub
enter
adcb
pop
push
ja
sbb
fidivrs
or
lods
das
xor
cwtl
out
lcall
dec
dec
cwtl
pop
inc
in
and
ja
int
ja
sbb
xchg
arpl
and
fwait
mov
fcoml
sbb
xor
jbe
outsl
push
lret
mov
loopne
ss
sbb
and
fs
jo
or
ficomps
pop
repnz
inc
arpl
movsb
adc
loop
mov
jbe
hlt
jecxz
pop
mov
lds
mov
cltd
stos
push
gs
je
fwait
std
lea
js
sub
ds
pop
inc
enter
notl
cmp
sbb
lret
popa
aam
outsl
aaa
rcrl
mov
rcrl
fisubs
add
mov
fsubs
out
mov
stos
mov
dec
ss
pop
push
fldt
mov
nop
jecxz
rolb
fs
push
sahf
sbb
dec
in
mov
jb
mov
jns
mov
out
sbb
xorl
aaa
add
mov
ljmp
jbe
pop
das
adc
pushf
dec
fmull
inc
hlt
sahf
or
sarb
jo
lcall
inc
pop
fcmovnb
addr16
cmpsl
imul
in
push
or
rcrl
cmpsl
aad
sbb
fbstp
dec
sbb
dec
ficoms
scas
xchg
into
dec
test
xchg
dec
movsl
and
ds
jnp
adc
shll
fstp
frstor
scas
cmp
mov
les
insb
mov
mov
add
movsl
cmp
add
and
enter
pop
int3
stos
in
andb
cmpl
inc
inc
loop
aas
and
pop
out
or
data16
push
mov
leave
gs
xor
xchg
movsl
sbb
dec
jno
mov
imul
ss
cmp
mov
fists
stos
cltd
mov
mov
xchg
pop
push
rcrb
fwait
jl
dec
push
nop
mov
jo
sbb
mov
ret
gs
mov
cmp
pop
xchg
add
lods
push
mov
xchg
mov
aaa
push
dec
push
pop
add
imul
adc
jne
sub
jns
stos
or
incb
or
jne
in
test
add
jae
xchg
jmp
scas
pop
cmp
into
cld
int
jecxz
rolb
js
sbb
push
ss
and
mov
or
into
push
insl
xchg
call
xor
inc
aam
xor
in
cmp
or
decb
nop
mov
js
jp
fisttps
sub
xor
out
jg
xlat
jge
cwtl
or
push
ds
fdivr
mov
sbb
testl
loopne,pn
es
inc
roll
pop
cmp
out
or
xor
sub
jo
add
test
rorl
mov
push
xchg
add
sub
mov
xor
ss
pop
pop
mov
push
pop
jns
pop
sub
outsl
ret
or
jns
adc
sbb
cmpsl
inc
lret
jo
fidivrl
imul
or
imul
aaa
xchg
insl
jns
lods
rcl
adc
sub
insl
adc
lret
dec
out
sbb
call
add
scas
in
loopne
mov
mov
fdivrs
push
cmp
andl
dec
mov
xchg
mov
mov
insb
xor
sub
lods
jp
ret
test
mov
cmp
lds
cltd
inc
repz
rorl
push
mov
mov
pop
inc
cmpsb
xor
and
in
les
fildll
jecxz
mov
sarb
xor
out
repz
inc
insl
mov
icebp
call
xchg
jno
and
xchg
or
or
mov
sub
pop
cmpl
addl
add
pop
and
mov
jbe
sbb
xor
outsb
les
imul
cmp
dec
sub
test
sub
sub
iret
les
jb
es
push
or
outsl
jne
mov
push
xchg
xchg
jns
sarl
pop
inc
inc
cli
test
inc
roll
sbb
jle
xor
or
add
std
pushw
push
imul
add
mov
dec
pop
dec
and
loope
stc
movsb
mov
xchg
push
repnz
cmc
add
in
sbb
insb
sti
stc
into
sbb
loop
push
pop
jno
jecxz
dec
add
adc
std
pop
lret
icebp
loopne
sbb
sub
fsubl
shl
sub
cmp
xor
pop
out
xor
test
outsb
xchg
lret
pop
xchg
sbb
cmp
mov
aam
insl
aas
je
xor
jb
mov
sti
dec
adc
popa
push
mov
ljmp
jmp
ljmp
sbb
data16
leave
pop
jo
rorl
adc
loopne
dec
outsl
dec
fidivrl
sub
add
sub
fcomps
mov
fldenv
into
jnp
pop
rol
mov
or
cwtl
xor
shll
sbb
ret
lods
cs
adc
mov
idivl
popa
or
or
add
leave
iret
cmp
nop
mov
jae
pop
cmpsl
cmc
pop
aas
aas
jecxz
fistps
jns
inc
gs
and
subb
inc
in
rcrl
aad
daa
mov
icebp
test
jbe
jle
and
fildll
repnz
add
fildll
in
ret
sbb
dec
mov
ss
cmp
mov
mov
pop
pop
mov
aad
paddsw
mov
sbb
pop
ja
xchg
test
fxam
mov
dec
dec
add
sbb
pop
pop
jo
js
rol
test
movsb
pop
shrb
mov
mov
dec
shll
push
repz
mov
pop
jp
out
notb
int3
adc
mov
xchg
sahf
ret
xchg
inc
add
daa
add
popa
inc
or
cmp
mov
cli
inc
and
mov
fimuls
sbb
xchg
sub
sbb
fdivp
dec
xor
int3
or
inc
sbb
cmp
sbb
push
in
popf
mov
inc
mulb
mov
pushl
icebp
cld
test
cld
ljmp
mov
push
int
push
loopne
rol
lret
pop
xchg
adc
ja
and
ljmp
dec
outsl
outsl
pop
cmp
fmull
push
lea
sub
mov
inc
and
das
lahf
sbb
and
mov
pop
andb
sbb
iret
fwait
pushf
jae
jmp
cmpsb
adc
adc
mov
mov
xchg
pop
sub
ljmp
jl
mov
pusha
xor
adc
loopne
ljmp
repz
addr16
scas
divl
cmp
icebp
into
mov
stos
xchg
in
jp
add
fildl
mov
or
test
sbb
sbb
mov
pusha
sahf
add
es
sbb
ljmp
inc
mov
mov
movsl
xchg
sub
dec
xchg
pop
jo
imul
xor
ret
push
mov
mov
and
aaa
fstpl
xchg
add
inc
mov
and
lea
xor
mov
pusha
sar
popf
adc
in
addr16
sbb
pop
rcll
and
add
jns
aad
popf
out
push
mov
aam
dec
jmp
push
add
adc
pop
repz
and
add
push
movb
mov
insb
push
lods
add
cmp
popf
mov
loop
cltd
je
test
xchg
push
cltd
mov
dec
inc
ret
bound
sub
call
es
movsl
call
xor
xchg
sub
hlt
mov
fs
mov
lods
stc
lods
lret
loop
or
mov
xchg
sbb
cli
mov
mov
jl
mov
and
sub
xchg
movsb
mov
ds
xor
push
stos
jmp
popf
pop
xor
inc
push
cs
sub
inc
addr16
and
test
lahf
dec
inc
negb
das
hlt
enter
fidivrl
int
xchg
cwtl
inc
sub
int
mov
arpl
pop
mov
sbb
cmpsl
mov
es
dec
fs
and
negl
or
mov
pop
dec
repnz
fs
popa
into
xchg
lret
movsl
inc
mov
stos
jle
addr16
xor
xor
and
test
scas
popl
adc
xchg
movsb
mov
or
je
dec
out
mov
js
mov
sbb
or
das
and
jo
aas
insb
mov
pop
xlat
sbb
test
and
divb
mov
adc
loopne
cwtl
pop
pop
jb
shlb
and
mov
sar
push
subl
out
insb
cmpsb
mov
pop
adc
sub
dec
adc
fidivrs
sub
cld
sbbl
or
jecxz
xchg
xchg
notb
cmp
xor
pop
push
mov
popf
jne
arpl
fwait
lret
push
lret
xorl
push
cli
divl
push
shrl
xor
push
pop
add
sbb
cld
mov
dec
pop
mov
test
cmp
gs
lods
cwtl
xor
or
cmpsb
scas
add
cmpsb
into
outsl
jp
dec
ja
stos
lret
inc
push
aad
mov
dec
addr16
jecxz
std
ret
or
adc
push
push
xor
test
cld
icebp
dec
push
out
jmp
iret
outsl
out
dec
or
pusha
nop
xor
aas
stos
jp
and
loopne
fwait
test
push
mov
pop
add
push
push
mov
repnz
sbb
adc
out
adcl
imull
arpl
xor
inc
es
push
dec
push
aas
mov
xchg
sub
jno
notl
sti
sbb
stos
cld
cmp
orl
xlat
mov
adc
movsl
loopne
mov
cmp
rcrl
push
jae
push
xorl
xchg
cwtl
add
addr16
or
jne
adcb
fnstsw
andl
outsl
jo
add
push
out
and
dec
jp
xchg
xor
loopne
jnp
sbb
add
loopne
push
adc
xchg
add
inc
aas
loope
test
ds
and
jle
mov
xor
pop
ret
mov
das
sub
cmp
lds
mov
sub
fdivrp
mov
cwtl
pusha
gs
imul
xor
mov
xor
cmpsl
mov
adc
test
imulb
mov
xor
mov
inc
test
xchg
lahf
xchg
subl
sub
out
adc
dec
pop
repnz
popf
push
es
jae
iret
iret
test
adc
decl
mov
mov
movsb
subb
xor
inc
or
add
lds
xchg
shll
lea
add
jne
fsts
sub
inc
insl
mov
and
xchg
pop
dec
add
les
and
push
adc
inc
mov
xor
push
jb
xor
lods
adc
insl
or
xorl
mov
or
jo
push
ret
xor
insl
cld
jl
sub
test
mov
in
jno
iret
jno
leave
jle
movsb
incl
xchg
or
ret
jmp
mov
cmp
cli
pop
or
in
pop
pop
sub
outsl
test
das
inc
mov
out
ficoml
outsl
icebp
adc
cmp
out
cmp
outsl
lahf
jae
inc
ret
and
lret
cmp
jno
jbe
adc
lds
ficompl
pop
cmpsl
insl
movsb
in
popa
cwtl
icebp
xor
push
dec
into
adc
adc
mov
xorb
push
sub
ds
fmuls
sti
and
fdivs
pop
lahf
lcall
in
lcall
addr16
adc
add
repnz
jge
cmp
add
hlt
mov
rcrl
xorl
jp
jbe
imul
and
sbb
lock
sti
in
clc
fmull
add
lret
adc
push
outsl
mov
jecxz
shrb
jnp
cmp
fcomps
cld
leave
add
pushf
test
arpl
test
mov
mov
cli
inc
mov
fldt
xchg
push
mov
push
das
inc
or
mov
add
adc
xchg
icebp
lcall
push
insl
negb
cmpsb
sub
xchg
push
xorl
ss
sbb
jnp
sub
out
dec
or
jns
in
xchg
jnp
pop
mov
mov
es
jecxz
inc
cli
sub
mov
lods
into
lds
shll
cmp
sub
ficomps
movsl
jbe
fwait
pop
mov
jne
jnp
mov
repnz
es
push
mov
test
lcall
mov
pusha
xor
cmpb
mov
push
or
fdivrs
push
jecxz
sbb
aad
or
inc
bound
cltd
add
add
ss
jl
hlt
push
frstor
ja
and
lcall
sub
scas
sbb
daa
and
and
add
mov
cmpl
mov
out
pop
add
jne
int3
cmpps
and
and
sarb
sbb
ret
and
ficompl
cwtl
xlat
pop
cmp
xor
dec
add
sub
sub
mov
sbb
lret
mov
iret
insl
cwtl
push
outsl
mov
jbe
shll
or
or
cmpb
mov
pop
sub
xor
cmpsl
xchg
fistl
push
push
cmp
jb
add
shll
addb
cmp
mov
stc
pop
mov
pop
adc
test
mov
xchg
jae
bound
inc
sbb
mov
pop
pop
xorl
jge
lds
sub
xchg
je
shrl
sub
mov
dec
push
lds
pop
popf
or
ja
cs
jp
in
arpl
mov
xor
mov
sti
xlat
enter
sbb
mov
inc
ret
mov
fwait
mov
or
xlat
lock
pushf
sub
pusha
fdiv
stos
push
cli
pop
jns
cli
movsl
jae
sub
mov
mov
fstl
pop
pushf
add
xchg
ret
cmpsl
cli
andb
cltd
sbb
rorl
add
cmc
hlt
jl
xchg
or
sbb
outsb
cmp
sbb
inc
or
or
push
adc
mov
cmp
cs
adc
and
je
adc
in
fwait
shr
test
lret
adc
xchg
dec
ja
repnz
mov
bound
jae
sub
loope
sub
mov
adc
add
arpl
mov
add
test
dec
push
xor
stos
cmpsl
xor
cwtl
std
fs
sub
cmp
jnp
pop
int
rorb
push
nop
add
ficomps
dec
movsb
cmc
add
fldenv
sub
pop
jno
xchg
dec
fdivrs
dec
clc
aaa
pop
stos
adc
adc
mov
invd
jae
fdivr
or
lds
shr
xchg
rol
decl
scas
pop
or
pop
xor
nop
pop
stos
dec
or
sbb
xorb
push
or
in
jns
pushf
icebp
mov
arpl
xor
fdivr
clc
xchg
cmp
mov
nop
dec
xor
sbb
or
mov
mov
adc
aam
popa
jb
lahf
mov
daa
xor
cmp
gs
add
int
js
jp
les
push
add
mov
pop
in
xor
push
xchg
xchg
test
pop
stc
nop
out
add
loopne
and
adc
fcoml
sub
add
popf
jmp
push
jle
clc
inc
xorl
test
or
xor
sub
nop
sahf
inc
sub
imul
and
mov
int3
orl
pushl
mov
jg
jg
andb
js
mov
lock
leave
adc
enter
xchg
movsb
test
sub
or
and
vmovaps
je
add
mov
adc
fsqrt
pmulhw
dec
pop
adc
push
dec
hlt
xchg
fs
loopne
sbbb
adc
adc
lret
ja
out
popa
call
aas
movsl
sbb
test
dec
out
jns
mov
into
aas
test
out
push
subl
jno
flds
loop
add
sti
sbb
add
psraw
rcrb
dec
and
fistl
mov
insl
int
jns
std
fldl
gs
mov
or
scas
pushf
stos
jae
stos
sti
pop
mull
bound
pop
les
cmp
and
gs
les
mov
cmp
lahf
cmp
add
mov
iret
cmp
inc
sbb
xor
cli
sbb
aas
stos
sbb
lods
xor
inc
ret
ja
mov
dec
or
lods
outsb
call
inc
xchg
dec
lahf
clc
sbb
jl
popa
sub
jns
jno
sub
sbb
daa
das
jno
sub
int
clc
add
mov
into
or
imul
imul
dec
loope
ss
lods
repnz
ds
repz
outsl
mov
pop
dec
hlt
fildl
fwait
jp
test
mov
jecxz
shll
xor
and
insl
int
cld
dec
lods
lock
scas
pop
std
mov
xor
jmp
mov
add
adc
and
adc
enter
cwtl
adc
and
xchg
cmpl
adc
test
mov
pop
sub
std
cmpsl
mov
fdivr
mov
scas
mov
pop
pop
pop
xlat
dec
int3
sbb
int3
cmp
lods
push
pop
lret
fcmovnu
adc
mov
ja
dec
mov
ds
aad
scas
into
cs
adc
and
and
js
jg
test
xchg
imul
scas
mov
repz
adc
dec
mov
xchg
push
ds
ret
stos
subb
mov
fisubl
aaa
xlat
sbb
mulb
add
cmova
mov
sbb
and
fisubrl
cwtl
mov
dec
sub
xchg
mov
jmp
enter
sysexit
repnz
sbb
iret
add
or
out
repz
daa
xlat
or
xchg
lahf
push
inc
insb
adc
jge
mov
pop
test
lea
sbb
xchg
out
leave
mov
xchg
mov
and
dec
pop
nop
imul
xor
inc
dec
or
fwait
jbe
mov
jmp
arpl
adc
xchg
sbb
loop
xchg
scas
lret
mov
dec
mov
mov
add
fs
fwait
xchg
push
mov
push
mov
cmp
inc
inc
xchg
pop
inc
sbb
outsb
fdivs
push
test
inc
mov
enter
add
orb
cmc
push
scas
test
mov
dec
pusha
jp
or
xchg
stos
pushf
jp
mov
adc
mov
cli
cmp
scas
mov
sbb
addr16
sbb
pop
scas
jp
out
sbb
xor
repz
popf
pusha
sbbb
inc
pop
lds
jge
loopne
jbe
movhps
out
mov
sahf
mov
fcomi
mov
and
cmpb
xchg
fiaddl
and
cs
push
mov
insb
pop
aas
push
lret
stos
push
insl
mull
loopne
xchg
xchg
je
pushf
daa
rclb
fstpl
cltd
outsl
sbb
andb
insb
inc
stos
sbb
fnstenv
xchg
jae
imulb
push
inc
outsb
adc
jecxz
lret
ficoml
jecxz
inc
add
loop
and
popf
and
push
xchg
fwait
sahf
xchg
sbb
lahf
mov
mov
xor
mov
or
movsl
cmp
jmp
repz
add
hlt
ds
sbb
and
mov
dec
push
pop
or
imul
cmpsl
add
fs
push
inc
jge
xlat
loop
cmp
arpl
sti
test
iret
and
cltd
cmpsl
pop
dec
push
mov
stc
lret
out
bound
stos
mov
sub
bound
std
xor
mov
addr16
xor
sahf
das
mov
insb
fsubs
xor
stos
xor
adc
pusha
adc
jno
call
dec
add
and
fdivrs
mov
push
sbb
fs
mov
pop
push
lret
loope
movsl
pop
fdivr
and
jo
es
iret
jle
cmc
inc
push
cmpsl
xor
jmp
xchg
mov
cmpsl
and
movsb
test
lret
adc
mov
sbb
and
xor
cmp
popf
aad
pop
xchg
lret
leave
pop
adc
sub
nop
aam
mov
push
out
mov
jl
sub
add
mov
xor
sbb
sub
icebp
pcmpeqb
call
int3
into
lods
ret
in
test
pop
add
cwtl
or
dec
push
mov
and
mov
xchg
jne
sub
enter
stc
dec
jg
shr
pop
sbb
sub
mov
sbb
xchg
pop
hlt
out
enter
jecxz
dec
sahf
push
shrb
mov
push
js
jmp
sub
outsl
cmp
test
nop
int3
sub
int
jne
cmpb
xlat
movsb
fs
or
std
jo
dec
sub
gs
popl
jmp
sahf
ret
outsl
rol
pop
jb
lds
out
sub
pusha
out
pushf
loop
xchg
inc
mov
ficomps
mov
into
xor
imul
std
mov
mov
sub
imul
push
sub
jg
in
adc
stc
je
lods
push
rol
shr
jae
xor
and
int
add
in
cmc
add
les
xor
and
in
adc
repnz
add
xchg
pusha
test
jle
fcoms
sub
jo
movsb
push
xchg
icebp
jmp
push
int3
int3
test
pop
lahf
sub
stc
or
jno
dec
or
xlat
sahf
into
fsubr
aad
mov
fcomp
fstps
inc
sub
mov
in
daa
lret
in
mov
insb
dec
or
or
mov
inc
loop
or
daa
scas
xor
movsb
inc
jecxz
jb
std
cmpsb
mov
in
or
jge
call
add
mov
mov
inc
push
dec
bound
subb
or
pop
in
test
fs
or
sbb
cmp
mov
push
cwtl
ret
push
add
mov
mulb
movsl
xchg
and
js
xchg
hlt
scas
cli
fadds
sbb
fcompl
in
jg
and
movsb
fiadds
push
inc
adc
add
ds
jb
push
xor
or
jg
fnsave
shrl
imul
xor
in
cli
sub
sbb
stos
arpl
cmp
cmpsb
fcoms
and
into
jp
push
inc
add
sbb
mov
loop
test
sub
push
or
mov
cmpsb
rcll
add
mov
add
xchg
mov
imul
imul
pop
adc
mov
and
inc
pushf
push
and
outsb
push
insb
mov
add
cmp
sub
imul
scas
outsb
scas
mov
fwait
cmp
jo
call
mov
clc
loope
dec
movsl
or
into
jle
push
popa
lds
jp
cmpsl
mov
sub
pop
or
fs
inc
in
adc
mov
or
mov
movsb
or
xor
loopne
aam
or
add
adc
shrl
enter
mov
lock
scas
push
call
xor
or
add
adc
pop
add
pushf
lods
inc
sbb
jb
mov
push
call
add
js
ds
cmp
jbe
neg
add
jno
push
mov
cltd
fldt
adc
ja
xchg
xorl
dec
je
ror
or
cmp
inc
xchg
insb
add
testb
cli
fbld
mov
cs
or
pop
jb
inc
test
dec
pop
dec
xor
add
stos
jo
mov
adc
outsl
xor
jo
adcb
dec
addr16
scas
test
lea
pop
xchg
iret
mov
movsb
and
outsb
mov
push
scas
stos
inc
repnz
rorl
adc
pop
cmc
or
cli
dec
repnz
adc
idivl
inc
mov
xlat
icebp
shlb
hlt
repz
jecxz
jnp
mov
inc
jno
in
arpl
inc
icebp
sub
push
xor
xchg
xor
call
jle
mov
jb
sbb
adc
adc
mov
jnp
cmp
insl
in
out
jmp
nop
add
dec
cmpsl
cmp
pushf
and
push
clc
fidivrs
stos
sub
setg
sub
fisubl
cltd
and
xor
test
dec
mov
ljmp
sub
stc
xchg
pop
stos
movb
test
cltd
sahf
adc
pop
stos
ret
cwtl
fwait
sbb
adc
fcompl
es
cld
jecxz
mov
and
pop
arpl
stos
jo
mov
pop
addb
mov
sub
lret
mov
add
inc
es
pop
dec
mov
add
loope
xchg
sarb
ret
xchg
loopne
inc
mov
dec
add
add
cmpsb
xor
out
neg
add
mov
sbb
and
mov
aam
inc
cwtl
in
imulb
dec
jnp
cs
inc
push
dec
cmp
pop
test
push
into
les
mov
xchg
pop
push
rcll
push
pop
push
jl
outsl
add
mov
movsl
mov
add
cmpb
lea
test
inc
push
dec
or
xchg
repnz
stos
stos
outsl
fldenv
cld
ret
jne
lret
cmp
repz
popa
xchg
cmp
add
jne
sub
jns
stos
dec
and
inc
outsb
test
arpl
or
cmpsl
fiadds
mov
push
cs
pop
inc
inc
jne
mov
pusha
fs
rcll
xchg
dec
xor
arpl
movsl
cli
clc
jns
data16
pop
sbb
dec
daa
xchg
xor
and
shl
pop
inc
add
push
dec
popl
test
mov
xor
pusha
jae
cld
dec
mov
cmp
push
adc
push
in
xchg
ret
cmp
lcall
or
pop
leave
sti
cmp
mov
js
mov
dec
cmc
imul
es
add
jne
dec
fistps
push
shl
or
dec
loopne
sub
adc
mov
mov
mov
pop
and
pop
es
test
idivb
mov
push
or
sbb
cli
movsb
or
fsts
cltd
mov
dec
mov
jne
jne
jbe
mov
push
and
sub
rclb
pushfw
sub
mov
ss
data16
iret
imul
rolb
sti
cmp
pop
inc
dec
les
pop
and
rcl
leave
into
inc
std
jecxz
imul
ds
addr16
cmpsl
push
or
adc
push
mov
xchg
jb
repz
xchg
adc
les
mov
mov
out
xor
aaa
mov
cmpsl
mov
mov
sub
mov
mov
jle
sbb
cmp
mov
int3
movsl
iret
or
mov
push
popf
adc
add
xchg
mov
rcll
cmp
sub
or
mov
or
outsl
jmp
xchg
pop
fistpll
lret
cli
mov
pop
mov
enter
sarb
lret
ret
aam
es
mov
out
xor
in
dec
cmc
jno
adc
pop
xchg
inc
nop
xor
in
mov
neg
push
ds
lret
inc
jne
shr
incb
fsubl
loop
clc
pop
cld
push
push
push
int3
cwtl
cmp
movsl
mov
inc
or
jl
mov
pop
adc
pop
pop
int
mov
sub
insb
lods
addr16
push
clc
and
dec
adcb
rclb
fs
in
repz
scas
xlat
mov
cld
movsb
fs
rorl
inc
push
jns
mov
out
xorb
cmp
popf
or
addr16
pop
sbb
and
mov
rcll
notl
fdivrl
cmp
loope
cmp
adc
mov
bswap
adc
sbb
and
jl
stos
inc
scas
inc
aaa
mov
ja
jmp
add
jmp
cmpsb
insb
xor
das
sbb
jo
and
mov
bnd
out
into
outsl
jne
add
mov
and
fs
aam
dec
mov
mov
insb
cs
mov
jp
pop
adc
ds
push
sub
orb
push
lods
dec
xor
pop
and
rcl
daa
jns
xchg
addr16
ljmpw
loope
ret
jnp
and
inc
sub
pop
clc
and
add
scas
fbstp
rorl
mov
int3
jne
out
push
mov
or
or
push
ss
les
xchg
mov
dec
pop
sbb
lods
in
movsb
lock
testl
out
or
sub
xchg
cwtl
pop
push
push
or
jb
not
loop
sbb
call
push
sub
js
or
push
mov
subl
pop
xchg
fsubrs
gs
in
mov
xchg
xor
pushf
inc
push
arpl
shrl
inc
jns
sbb
insb
shl
gs
inc
int
pop
inc
movsl
cltd
mov
sbb
pop
xor
mov
jle
and
mov
xlat
xchg
lea
or
clc
movq
fucomi
inc
and
lret
lret
mov
push
push
lret
and
mov
dec
lock
sub
mov
lock
xchg
push
int3
or
icebp
lcall
stos
mov
and
mov
insl
repz
cmpsl
fldcw
xchg
cmpsb
inc
pop
scas
cmpsb
mov
nop
mov
push
in
cmp
pop
sbb
xchg
fisubrl
outsb
sbb
mov
fadds
dec
add
xor
jecxz
cmp
popf
cwtl
add
or
and
jp
out
sub
hlt
cld
sub
bound
aas
mov
mov
cmp
push
out
loope
pop
cmp
xorb
outsb
aas
mov
sbb
lea
sbb
movsl
mov
push
rolb
jg
stc
aaa
out
out
mov
call
mov
cs
push
std
imul
aam
push
sbb
pushl
ret
hlt
ja
sar
push
dec
sbb
xchg
hlt
dec
jnp
popa
imul
fstps
int
movsb
jno
pop
in
jns
fnstcw
ffree
lret
scas
xchg
jecxz
or
and
shrb
leave
sub
inc
popf
dec
inc
push
lock
jne
push
cmp
pop
sub
xchg
test
out
clc
repnz
jb
lods
adc
fldcw
dec
test
dec
push
repz
clc
xchg
dec
and
xor
mov
test
call
mov
mov
aas
mov
popf
cld
mov
mov
or
pop
movsb
push
inc
insl
xor
push
inc
ljmp
out
inc
lock
add
ds
fisubs
call
pop
scas
add
pushf
leave
data16
jno
shll
scas
fildl
mov
es
push
lods
or
jns
sti
xchg
idivl
mov
pop
cmp
and
mov
repnz
pop
les
jg
or
sub
pop
mov
ja
xchg
mov
addr16
ret
jge
mov
jge
cmc
incl
dec
addr16
xchg
fnstcw
cmp
dec
pop
cmp
mov
fucom
js
out
jcxz
adc
fnstenv
push
hlt
jne
test
sub
xchg
test
push
testl
add
mov
rcrl
xor
lods
sarb
dec
cmp
push
imul
in
push
and
xchg
jecxz
cmp
jo
roll
sahf
and
lds
adc
and
cmp
movsl
sbb
insb
sub
outsb
ja
jnp
mov
lcall
shrb
cs
sub
mov
sub
mov
dec
loop
xor
lret
pop
xchg
test
das
sub
pop
or
lcall
sub
cmp
inc
adc
sub
adc
push
hlt
jl
or
jns
lret
bound
popa
cmpsb
add
adc
sub
icebp
lret
js
inc
mov
jns
jg
xor
and
dec
add
ljmp
add
xchg
jg
jbe
pop
loope
and
int3
ja
mov
gs
mov
and
sarl
outsb
mov
jp
or
inc
imul
lret
jmp
ret
mov
fwait
ljmp
xchg
pop
hlt
mov
dec
mov
adc
fisttps
cmpsb
lcall
sbb
es
sbbb
pop
fstl
xchg
arpl
jb
cmpsb
push
adc
add
stos
popa
mov
call
lods
pop
insl
fdivs
fidivrl
adc
lret
or
ret
sub
dec
mov
add
mov
dec
jnp
ret
adc
cmp
mov
ret
insl
aam
sub
fsubs
inc
stos
lods
xchg
stos
mov
add
movsb
jnp
movsl
sahf
add
lea
and
mov
inc
std
push
jl
popa
call
sbb
imul
rorl
inc
mov
fiaddl
popl
xchg
in
aam
inc
ret
and
add
pop
pop
mov
aas
xor
leave
les
lds
cmp
xchg
in
mov
pop
mov
lods
jecxz
jl
sti
out
adc
push
daa
dec
pop
scas
xor
loopne
adc
jae
sti
ja
and
lcall
lods
clc
xor
xor
sub
cmp
test
pop
call
push
fstpt
aam
dec
nop
in
loopne
je
lcall
lret
cmp
dec
adcb
push
jp
mov
in
mov
test
jmp
add
pop
jmp
and
jns
lcall
and
rcrb
xorl
cmc
testb
pop
test
and
movsl
xlat
push
xor
xchg
mov
mov
dec
daa
ror
xor
js
shll
in
fmul
pop
push
lds
mov
adc
and
jo
add
test
and
xor
or
inc
or
sbb
repz
push
enter
add
pop
adc
packsswb
imul
dec
add
dec
push
mov
loopne
mov
mov
jbe
pop
pop
mul
les
ja
test
sbb
test
cmp
jno
mov
mov
fdivs
pop
pop
cmp
jae
push
and
adc
lret
ja
add
sbb
cli
dec
jmp
and
inc
test
sar
xchg
pop
sbb
xchg
xchg
aas
pop
int
cmpl
aaa
push
popa
jmp
movsl
js
lret
scas
outsb
push
add
fcmovbe
pop
lret
insl
ss
lret
or
jbe
repnz
lock
xchg
aas
push
mov
cmpsb
push
xor
repz
dec
ljmp
jae
js
cmp
test
pop
jg
cmp
mov
cwtl
pusha
ficomps
pop
dec
lods
inc
mov
xchg
les
jae
das
js
orb
gs
orl
cli
mov
dec
jge
jno
cmp
dec
lcall
mov
dec
mov
loope
or
lcall
sbb
mov
pop
jo
mov
mov
mov
dec
and
out
fsubs
push
jno
rcll
sub
hlt
lock
stos
push
pop
rclb
cmp
sbb
xor
or
lcall
fstl
jbe
rcrl
shlb
push
pop
xor
in
test
xor
shlb
lcall
cld
mov
xorl
lahf
mov
mov
scas
pop
in
and
push
pop
arpl
dec
shrb
mov
pushf
cs
jb
or
test
pop
mov
mov
je
adc
push
push
iret
xor
xor
fs
xor
aad
xchg
push
syscall
data16
pop
fcmovnb
clc
cmpsb
adcl
inc
xor
jmp
aam
sbb
inc
lahf
inc
and
mov
xchg
or
mov
xchg
push
lock
or
ret
pop
addr16
out
mov
push
xchg
je
and
adc
in
jno
shll
push
add
mov
ror
test
xchg
mov
dec
lods
mov
data16
mov
fdivs
js
call
es
inc
cmc
addr16
fistpll
mov
push
dec
je
orl
pop
lea
or
mov
dec
mov
pop
cmpb
iret
push
addr16
iret
jns
pusha
outsb
pop
pop
xchg
stc
dec
gs
xchg
jmp
data16
cmp
sub
push
test
push
ss
cmc
mov
push
movsl
add
scas
imul
pop
data16
es
cmp
into
mov
or
hlt
push
cwtl
or
movb
inc
fldl
insb
negb
lahf
sbb
jecxz
sahf
sarl
sub
gs
testl
and
sti
sub
fidivs
mov
adc
out
lcall
xchg
pop
out
jmp
fstpl
fimuls
mov
cmp
pop
scas
mov
mov
subb
cmp
cltd
fwait
xchg
fldt
push
int3
outsl
mov
aaa
shrb
imul
fdivr
jno
in
ljmp
adc
push
xchg
dec
nop
mov
pop
xor
out
pop
fisttpll
jne
aaa
and
mov
cmpsb
dec
sub
pop
push
add
mov
xor
xchg
mov
aas
sbb
scas
enter
popf
push
mov
fs
fs
push
stos
dec
or
test
scas
jge
clc
lcall
dec
std
add
mov
rolb
sub
cmp
push
mov
ja
xor
cmp
cltd
push
out
outsb
pop
sbb
dec
push
gs
shrb
pusha
mov
leave
mov
pop
push
sbb
test
dec
not
decl
js
jle
add
xor
dec
jnp
add
sbb
and
lret
pusha
inc
push
shrb
mov
ja
sbb
lret
orb
xchg
jo
fs
inc
outsb
out
lods
add
iret
pop
adc
lock
movsb
sbb
push
lret
hlt
inc
ja
imul
cmp
xchg
mov
mov
dec
push
addr16
ret
lret
jmp
push
out
sub
testb
test
les
mov
dec
jns
adc
mov
cmp
adc
and
lds
in
mov
mov
int
bnd
stos
pusha
prefetchwt1
inc
bound
and
out
ficoms
push
out
inc
adc
movb
fsts
cmc
lret
daa
inc
dec
and
test
xchg
add
mov
ja
push
push
mov
aam
daa
daa
sbbl
jno
out
call
nop
xor
sbbb
lds
adc
into
cmpsl
leave
fidivs
xor
mov
mov
iret
inc
ljmp
fwait
xchg
in
pop
pop
pop
fmulp
in
hlt
pop
inc
je
cmp
scas
jo
popa
mov
mov
aam
jmp
repz
mov
aad
and
and
inc
ljmp
pop
sbb
aaa
ss
and
jns
mov
xor
mov
xchg
fstps
and
out
cmp
cld
mov
dec
pop
mov
or
dec
or
dec
add
mov
sub
aas
sub
cmpps
push
sub
pop
inc
add
push
mov
mov
fmuls
iret
sbb
nop
xor
aam
sbb
xchg
test
sbb
add
push
mov
add
pop
xor
mov
cld
dec
out
mov
pop
mov
fwait
jbe
xchg
rcrl
sub
stos
push
fdivrp
mov
je
movsl
movsl
add
sub
cwtl
lret
in
jmp
fwait
idivw
xlat
arpl
fisttpll
add
cmc
ret
ret
popf
inc
pop
inc
pushl
push
outsb
scas
std
jmp
pop
insb
push
sub
dec
les
decb
push
pop
and
mov
sub
rorb
cmp
aad
cmc
ds
push
fadd
jecxz
jl
dec
aam
imul
sbbb
inc
push
lods
inc
daa
inc
add
rcrl
cmp
jl
jp
int
and
mov
jnp
movsb
fidivrs
in
xor
popa
adc
into
mov
xchg
cltd
add
cmc
xchg
jmp
jo
popa
insb
push
insl
fcmovne
aam
xor
les
xchg
movsl
cmp
movsl
aas
mov
ret
rol
lock
mov
loop
xor
mov
mov
jmp
dec
xchg
fldt
in
and
testb
cld
cwtl
and
sarb
mov
testb
and
cmp
or
pop
dec
and
mov
sub
add
adcl
imul
jae
int3
push
fwait
inc
ret
movsl
sahf
ret
xchg
xchg
mov
les
mov
movsb
inc
adc
psllq
repz
lods
cmc
ljmp
icebp
sahf
loope
pop
dec
mov
iret
jecxz
xchg
cmp
iret
into
jecxz
cld
and
fs
ficompl
or
cmp
cmp
cmp
sahf
mov
sbb
outsl
testb
bound
call
into
pop
fs
mov
out
hlt
sbb
xchg
out
jg
pop
rorb
lret
dec
or
clc
jae
mov
pop
adc
mov
inc
loop
movsb
pop
push
sub
xchg
pop
sbb
or
xchg
sub
bound
stos
fstl
popa
fnstenv
ret
mov
cld
rolb
jle
shll
mov
lods
in
dec
rol
and
addr16
cld
pop
rcr
pop
sub
xorl
cmp
gs
push
gs
sbb
call
mov
test
dec
cmp
jl
aam
mov
data16
fists
daa
je
lods
push
lods
sub
and
lahf
inc
hlt
cmp
xor
fdivl
lret
out
jno
mov
fnstcw
mov
xorb
sub
dec
pushf
mov
imul
push
and
idivb
mov
sbb
jp
pop
xchg
es
mov
insb
sbb
lret
outsl
cmp
pop
mov
ja
jmp
bound
mov
mov
cmp
loope
hlt
loop
int
mov
dec
push
sub
pop
mov
cmp
jle
xor
sbb
lahf
loopne
lcall
lret
sbbl
lret
push
rorb
add
ljmp
mov
pop
pusha
repz
adc
mov
stos
sub
xor
push
and
adc
ja
aam
int
sub
out
leave
sbb
mov
push
das
repnz
push
jg
push
lock
fcmovne
dec
sub
push
aaa
rcll
ret
jge
out
and
iret
pop
out
jb
add
cmc
les
pop
pop
xchg
jb
add
fcoms
or
sbb
sbb
xlat
xor
push
sbb
sub
push
jge
xchg
ret
dec
cmp
xchg
jg
jmp
test
je
fstpl
cwtl
fcoml
bound
leave
stc
mov
out
adc
cmpl
push
dec
or
fwait
mov
mov
jge
mov
cwtl
gs
stos
es
push
and
pop
pusha
shlb
and
fsubrs
mov
test
jge
adc
fmul
add
or
pop
outsl
pop
and
cld
pop
jge
iret
cmp
jae
icebp
test
pop
loop
into
adc
sub
insb
cli
cmp
in
sbb
lods
jns
loope
divl
jecxz
subb
incl
xchg
in
xlat
fs
dec
xchg
cmp
mov
pop
mov
clc
dec
xchg
int3
mov
jp
sbb
lods
test
mov
xlat
xorb
mov
mov
jb
fbstp
jb
stos
sbb
xor
in
adc
iret
repnz
ret
shll
lods
ss
push
int
cltd
mov
pop
dec
mov
and
je
loope
lods
pop
pop
sbb
fidivs
int3
call
into
adc
outsl
and
imul
xor
add
pop
mov
cs
shrl
mov
std
mov
add
ss
out
pop
in
pop
push
les
les
jo
mov
mov
not
xor
jge
sahf
sti
mov
inc
mov
lret
lahf
in
sub
or
sbb
sti
add
sahf
shlb
cltd
mov
movsb
mov
pop
pop
mov
push
inc
mov
repnz
and
icebp
je
mov
dec
xor
pop
xlat
fs
mov
pop
shrd
scas
add
loopne
xor
idivb
inc
outsl
jbe
shlb
insl
in
add
lods
cmp
hlt
daa
sub
mov
sbb
mov
push
jecxz
mov
lds
ljmp
and
in
push
jns
mov
add
inc
cmp
xchg
lret
pushf
lds
fsubl
imul
fldl
pop
adc
xor
sbb
scas
mov
lods
rclb
jae
loopne
mov
mov
fs
fldenv
mov
movsb
mov
pop
test
into
inc
sti
push
mov
inc
dec
mov
add
pop
sub
call
sbb
je
mov
rcrb
fldl
mov
push
pop
lret
in
popa
and
enter
lcall
lock
cld
xchg
insl
repz
cld
pop
test
bound
pop
and
cltd
aaa
mov
add
cmp
jne
mov
push
test
leave
add
aaa
enter
adc
les
add
pop
data16
pop
push
mov
mov
pop
pushf
pop
mov
repnz
or
push
xor
jbe
iret
sub
xchg
sahf
stos
inc
cmp
cli
sahf
iret
mov
stos
cmp
mov
inc
loop
or
in
movsb
jg
lods
mov
mov
loope
imul
jns
push
mov
sub
out
shrl
mov
push
loope
cs
cmp
cmp
aad
sbb
out
fldt
cld
jecxz
and
pop
xor
jle
int
cmp
xor
movb
pop
out
mov
push
push
push
inc
adc
jo
dec
xlat
stc
loope
inc
mov
mov
xchg
cs
movsl
lcall
push
loope
dec
push
and
lcall
jbe
les
int3
lret
mov
cmpsb
sbb
push
ret
stos
inc
iret
xchg
fucom
scas
loope
or
lds
xor
inc
and
mov
sbb
sbb
loopne
sub
test
ljmp
in
xchg
aam
xor
lcall
xlat
xchg
dec
jnp
push
int3
scas
add
mov
out
mov
pop
sbb
js
and
int3
scas
push
clc
in
mov
or
dec
push
pop
adc
pop
pop
xchg
sub
or
pop
in
cli
mov
push
test
pop
cli
std
aam
push
filds
icebp
adcb
ret
in
out
stos
pop
dec
frstor
in
sbb
fstpl
daa
jne
xor
loope
push
es
stc
iret
mov
mov
cs
notb
loopne
sbb
rclb
adc
mov
and
in
and
popf
jns
sub
mov
or
lock
cmp
xor
cltd
xchg
insb
xchg
inc
shl
cmp
loop
mov
or
xchg
sti
cwtl
inc
ja
int
cmp
sti
loopne
xchg
lcall
outsl
stos
aaa
and
pause
popa
xchg
daa
and
pop
mov
and
xchg
fs
in
dec
or
cwtl
mov
dec
xor
inc
pushf
inc
and
clc
mov
popf
imull
xor
setge
sub
in
xchg
mov
pop
cmpl
adc
decb
testb
inc
popf
stos
mov
cmp
lods
imul
iret
icebp
inc
fs
test
xor
sbb
dec
push
in
adc
mov
and
ss
enter
js
mov
lock
push
addl
mov
ds
negl
inc
rcll
mov
add
test
adc
in
pop
aam
sub
push
push
and
adc
ljmp
test
mov
add
or
cmp
aad
add
sbb
add
inc
dec
inc
aam
ds
push
inc
out
and
cli
fistl
push
inc
jbe
push
movsb
pop
call
mov
xchg
xchg
aas
movsl
ljmp
xchg
xor
cmc
mov
push
add
mov
enter
add
push
push
imul
and
es
cmp
divl
xchg
adc
pop
xor
fisubrl
dec
pop
and
xchg
mov
or
loopne
cvtdq2ps
mov
imul
mov
xchg
cmp
pushf
xor
add
pop
das
jae
xchg
xor
cmp
cld
jmp
pushf
inc
es
jno
sbb
xchg
and
sarl
adc
jne
or
popf
push
mov
mov
lret
cmpsb
mov
and
dec
xor
mov
int3
stos
or
sahf
imull
xchg
sbbl
add
mov
pop
aad
push
xchg
lret
jns
lock
popf
add
jnp
loope
mov
mov
clc
mov
leave
pop
int
xor
inc
lret
xchg
fistpl
jecxz
cmp
xchg
sub
movsl
sub
rorl
call
jle
or
aaa
or
cmc
xchg
notb
call
andb
and
add
push
and
mov
insl
ret
jbe
jg
nop
xor
xchg
rolb
xchg
cltd
roll
fdivrl
loope
cmp
aam
ds
adc
xchg
fldt
hlt
dec
into
inc
mul
bound
mov
ljmp
jae
mov
gs
scas
out
cmpsb
fdivs
jbe
rcrb
subb
pop
adc
fldl2e
lods
mov
fs
testl
daa
jge
sbb
mov
pop
add
insl
cld
xchg
imul
xchg
lahf
mulb
fwait
add
xor
imul
pop
lahf
pop
mov
sarb
dec
jae
cs
sbb
out
les
orl
adc
or
xlat
push
mov
or
adc
cmpsb
cmp
mov
ret
addr16
scas
ja
ljmp
les
or
fwait
and
lahf
mov
xchg
mov
sti
lret
sub
pop
mov
dec
inc
xchg
stc
xchg
push
pop
imul
mov
fiaddl
xlat
adc
aam
shrl
jns
pusha
adc
xlat
jg
adc
mov
cmpsb
hlt
add
and
fsubl
aaa
mov
inc
fcmovu
jg
sahf
out
jle
or
cli
and
mov
push
xchg
les
lret
cmp
arpl
add
push
imul
call
xchg
fdivrl
mov
lret
mov
imul
cmp
hlt
fs
xor
cmpsb
add
jo
dec
mov
cmpsl
adc
stos
cmpsl
mov
mov
dec
pop
or
cmp
fmuls
dec
loope
sti
mov
and
addl
fsubrs
rolb
jbe
fmul
push
xlat
jo
sub
or
xchg
sti
aad
lds
scas
cmp
mov
mov
fimull
pop
mov
mov
fs
sub
bound
rcl
push
outsl
fsubrs
cmp
repnz
mov
addr16
inc
dec
jecxz
and
xor
js
add
cltd
pusha
sar
push
bnd
xchg
mov
enter
ljmp
push
mov
pop
fadd
sbb
jecxz
pop
push
mov
setns
pop
mov
mov
cmp
xor
roll
flds
hlt
bound
cmp
pop
sub
xchg
or
aas
mulb
out
dec
pop
inc
lds
xlat
loopne
js
mov
inc
leave
pop
cmp
push
lds
sbb
stos
add
mov
aad
inc
pop
lods
sbb
mov
gs
imul
inc
xor
pop
mov
dec
pop
fs
mov
mov
negb
inc
mov
push
ss
in
scas
jg
fdivr
loop
dec
xor
sub
test
mov
pop
call
nop
jecxz
les
loope
mov
mov
xor
inc
insl
in
mov
pop
jmp
xchg
enter
stos
add
xchg
loopne
xchg
lds
hlt
adc
jnp
inc
pushf
jg
shrl
mov
mov
idivb
repz
insb
pop
icebp
push
jno
xor
push
mov
mov
popf
leave
aaa
hlt
ja
negb
test
es
fadd
pop
cmc
pop
dec
adc
jns
adc
sub
fldcw
inc
and
adc
lcall
xchg
push
sbb
add
add
xchg
mov
xor
int
gs
scas
push
imull
test
lods
pop
cli
push
mov
add
adc
lea
aam
and
repz
aaa
sahf
xor
insb
xlat
cmp
add
pop
out
adc
jmp
psubq
mov
ja
adc
lret
js
lods
xor
push
mov
xor
and
jb
sub
lods
xchg
sbb
sar
sbb
jge
das
mov
loope
push
and
stos
lcall
mov
aaa
and
inc
or
shrl
dec
sahf
cmp
fimuls
inc
jb
sbb
pop
dec
xor
daa
sbb
movsl
lcall
and
aaa
jbe
aas
and
mov
cmpsb
and
add
mov
cwtl
bnd
pop
adc
mov
aas
mov
push
cmpsl
shll
andl
mov
lahf
cmp
jle
cld
add
ficompl
fs
inc
in
inc
and
shl
popf
adc
fnstenv
push
and
es
cwtl
xchg
xchg
inc
inc
mov
sub
or
fsub
dec
movsl
jmp
cmp
icebp
mov
mov
sarb
and
jbe
imul
fcoms
out
sub
or
rolb
xchg
xor
jo
int
out
adc
cld
jae
jl
loopne
jp
lods
jmp
test
push
dec
incb
pop
in
push
push
je
lret
sub
pop
dec
je
mov
adc
aam
and
xchg
notb
jns
pop
add
pop
adc
lock
sub
xchg
cmp
add
mov
rcr
cmpsl
addl
jp
mov
call
loopne
adc
mov
jl
add
jmp
xor
jb
mov
jno
mov
push
xor
into
pop
pop
lock
into
mov
or
pop
bound
fs
add
fiaddl
aad
or
dec
inc
clc
enter
std
pop
add
and
sub
nop
je
fwait
fs
adc
movsb
pop
jp
sbb
xlat
enter
loope
jg
popaw
cltd
mov
scas
ljmp
fistpl
mov
in
cmc
pop
and
mov
mov
push
lret
xorb
cmc
inc
mov
sbb
adc
dec
mov
add
dec
ret
mov
pop
adc
cmp
and
mov
filds
mov
rorb
insb
lods
xchg
test
or
fwait
aam
movsb
test
mov
jle
inc
bound
test
test
jg
in
cwtl
test
jp
fsubl
bound
ja
aaa
mov
pop
or
xlat
test
aam
repnz
jae
es
xor
and
scas
xor
js
negb
popf
outsb
aad
cmp
xchg
out
push
xlat
or
jecxz
add
mov
fidivrs
cmp
cmc
fcomps
mov
push
aad
and
aad
mov
test
fs
inc
mov
arpl
ja
push
sbb
std
mov
nop
xchg
movsb
inc
inc
fadds
fsubs
dec
hlt
xor
push
and
test
inc
iret
test
inc
sbb
xchg
ret
pusha
or
xchg
test
loopne
mov
cmp
or
lret
pusha
aad
sub
and
std
je
sbb
sti
outsb
sti
out
cmp
xor
jnp
ror
out
push
xchg
shrl
push
inc
xchg
push
test
cmp
xor
mov
or
insl
out
sub
push
inc
lds
std
mov
rcll
or
int3
fcmove
pop
movsb
jmp
out
es
mov
or
push
enter
movsb
repnz
lds
dec
mov
scas
aas
sub
rcll
lock
mov
hlt
inc
scas
inc
cmp
outsb
pop
sub
push
inc
out
lret
ret
scas
stos
sub
push
fs
pop
lret
int3
nop
inc
or
pusha
pop
push
jge
jmp
jae
cltd
in
in
dec
cs
sbb
movsb
and
test
xor
inc
mov
cwtl
or
enter
xchg
cmp
mov
stos
movsb
rclb
loope
out
arpl
and
mov
int
jns
adc
lods
lods
and
shlb
jmp
adcl
loopne
scas
push
outsb
mov
pop
popa
mov
and
fstpt
jl
push
dec
out
dec
aad
xchg
add
dec
enter
xchg
mov
jg
pushw
mov
xor
loop
inc
adc
push
mov
pop
cmp
pop
sub
shl
inc
xchg
popa
aad
cmp
jmp
int
das
push
cmp
mov
add
cwtl
cmp
outsb
aas
mov
jbe
shrb
ss
sbb
rcll
sub
mov
or
lods
fadds
stos
mov
aaa
cmpb
fwait
xor
dec
xor
gs
dec
ret
mov
cld
loope
jmp
das
mov
std
sbb
clc
cmp
xor
sbb
adc
scas
xor
inc
incl
push
pop
inc
call
dec
mov
lret
popa
cmovo
mov
mov
sahf
rorb
jb
repnz
pop
fs
dec
mov
dec
cmp
inc
cmp
pushf
push
and
and
sbb
jg
xor
mov
pop
ret
or
xor
daa
pushf
test
fdivrp
or
movnti
pop
add
lret
push
int3
in
dec
test
dec
cmpsb
enter
push
mov
loope
push
jg
mov
jbe
xlat
mov
mov
call
xlat
dec
rsqrtps
lods
popf
arpl
imul
mov
enter
push
shrb
insl
jo
andl
sahf
sbb
movsl
fadd
das
add
cmc
push
fidivl
dec
or
pop
mov
and
mov
dec
in
mov
dec
rol
paddq
jmp
in
pop
test
das
inc
cmpsl
repz
mov
inc
xor
cmp
xchg
dec
jl
xchg
cmp
mov
pop
dec
gs
add
stc
imul
bound
or
into
and
in
orb
inc
fs
push
nop
ja
and
shll
xchg
sbb
stos
push
dec
and
sbb
mov
inc
push
push
mov
idiv
repnz
ret
and
int
jecxz
jp
jnp
arpl
and
cmpsb
outsb
xlat
repnz
sub
pop
mov
jle
shl
movsl
cmp
and
cmp
sbb
jb
mov
repz
ljmp
adc
and
mov
push
pop
inc
negb
mov
push
cmp
adc
lods
js
pop
ds
push
xor
xlat
insl
pop
xchg
stos
add
in
hlt
adc
js
cld
or
push
jae
ds
xchg
test
test
call
mov
gs
add
dec
sbb
ss
jmp
cs
ret
popa
xor
mov
and
adc
xor
ss
dec
xchg
mov
cmpsl
outsb
ret
cld
pop
stos
shll
pop
ret
inc
xor
jecxz
and
mov
cmpb
imul
aas
test
sahf
lods
adc
movsb
cmp
lods
stc
nop
mov
inc
pop
xchg
movsb
nop
adc
lahf
ficoml
pop
shll
dec
xchg
mov
inc
addr16
je
sub
je
mov
ljmp
negl
push
out
sbb
test
mov
sbbb
mov
push
aas
cmp
frstor
xor
and
cmp
ds
rcrl
leave
xlat
cmp
mov
cmp
jle
add
rcl
out
aas
cli
outsl
add
movsl
mov
lcall
imul
out
repnz
daa
jmp
pop
test
or
push
sub
xchg
aam
dec
mov
pop
popa
adc
rcrl
cmp
insl
push
test
lcall
inc
test
lods
xchg
sbb
mov
and
adcb
enter
xorl
or
popl
rep
call
js
dec
adc
dec
cmp
cmp
jne
aam
subl
jo
fimull
push
loope
loope
insl
mov
pop
loope
xchg
ficompl
cli
or
or
add
outsb
call
mov
ljmp
adc
inc
call
arpl
mov
lret
inc
aaa
mov
dec
pop
loop
xchg
test
fstl
sahf
in
push
aam
mov
jg
cwtl
push
add
cmp
push
stos
shrb
or
mov
mov
cmc
jbe
dec
daa
lock
test
dec
add
lret
xchg
out
jo
jge
test
dec
xchg
pop
cmp
mov
sub
cmp
cmp
pushf
mov
xchg
xchg
and
or
dec
adc
push
mov
fsubr
push
rclb
mov
mov
mov
cld
in
jae
mov
sub
push
repnz
lods
fisttpll
lret
inc
dec
and
cmpsb
movsl
mov
xchg
push
shlb
mov
or
imul
adc
jo
out
mov
loopne
jp
and
mov
and
jbe
jecxz
pusha
jbe
pop
je
sub
ds
stos
fisttpll
and
pop
hlt
addb
scas
pop
pop
out
push
push
inc
ja
dec
aam
fwait
sub
das
adc
das
stos
pop
sbbl
xor
dec
jo
out
push
sub
cwtl
pop
push
fsts
out
sub
ljmp
and
pop
ret
in
cwtl
sbb
fs
push
push
inc
push
push
jmp
sbb
xor
test
lds
dec
cmpsb
xor
outsb
xchg
fcoms
jo
mov
mov
mov
popl
sub
and
std
fnstenv
pushf
xchg
xchg
arpl
or
scas
xchg
inc
xchg
sub
and
in
mov
or
and
pop
pop
je
cmp
in
xchg
jl
jns
xor
loop
mov
xchg
sbb
dec
jge
xchg
jecxz
and
sub
loopne
sub
cmp
sub
test
xchg
adcl
jmp
push
xchg
pop
mov
inc
cltd
push
xor
jae
lret
xchg
ret
dec
push
push
mov
jno
frstor
add
loopne
cmp
mov
jl
stos
sbb
js
repnz
lock
or
lds
cmp
push
dec
ds
fnstenv
mov
popa
cld
lret
mov
lock
cmpl
push
inc
sbbb
pop
push
mov
lret
ja
test
aaa
ret
data16
addr16
sub
mov
nop
in
pop
cld
lods
push
pop
fcmovb
inc
mov
mov
pop
scas
test
scas
mov
push
idiv
sbb
dec
stos
fisubs
jge
or
sbb
fildll
and
ret
and
repnz
sub
mov
or
popf
test
lods
push
mov
out
scas
xor
pop
test
mov
mov
pop
in
xchg
lret
jp
in
aas
dec
cli
aam
mov
cmp
iret
popf
data16
adc
insb
jp
add
les
mov
repnz
test
hlt
and
shl
mov
sbb
pop
fcmovnb
fisttps
jecxz
out
xchg
push
notl
or
mov
cmp
and
push
push
or
and
xchg
movsl
dec
push
and
add
sbb
xor
mov
loopne
imul
xchg
lahf
mov
sub
xchg
mov
jns
imul
xchg
divb
loope
dec
and
mov
ffree
cld
mov
xor
mov
mov
and
or
xchg
test
add
xlat
rcrb
cmc
sub
or
shl
js
cs
movsb
js
jecxz
lods
lods
push
mov
pop
jmp
nop
push
xchg
or
cmp
push
lds
inc
test
push
mov
add
sub
sub
loope
pop
inc
push
mov
mov
xor
sahf
imul
ljmp
nop
inc
xchg
or
pop
pop
pop
jno
or
lcall
repnz
lahf
mov
movsb
js
movb
xchg
push
push
add
mov
dec
and
ss
jle
cmp
cs
xchg
add
lds
xor
pop
sbb
mov
lods
pop
cmpl
inc
cmp
push
out
or
ds
push
push
dec
dec
movsl
dec
ret
and
incl
jb
push
fidivrs
cmp
jp
js
mov
xchg
sbb
loopne
rcrl
adc
cmp
mov
inc
xchg
filds
clc
add
sub
jns
mov
xchg
rcrl
out
ja
das
pop
sbbl
sub
xchg
mov
mov
sbb
jmp
pop
fistps
jns
mov
gs
cmp
imul
or
sub
xor
inc
sub
jnp
iret
es
mov
daa
sti
xchg
cmpsl
inc
adc
mov
insl
lahf
xorb
mov
aaa
lds
push
mov
in
out
in
cld
mov
lcall
repnz
xchg
sbb
rcll
sbb
or
push
mov
push
stos
iret
pop
and
cmc
xchg
call
js
adc
push
fsubrl
and
scas
repnz
sub
test
dec
dec
inc
ss
push
outsb
pop
addr16
push
sbb
mov
outsl
xchg
jns
js
pop
les
popa
add
imul
xchg
mov
dec
jne
popf
mov
lds
lea
and
pop
pop
aam
rcr
dec
or
enter
xchg
jmp
rorb
mov
ja
xlat
cs
push
mov
dec
push
jg
add
inc
xchg
or
and
adc
pop
sarb
ds
imul
scas
cltd
icebp
arpl
rcll
jo
sub
mov
xchg
pushf
cmp
fsts
jmp
outsl
and
jmp
sbb
add
or
or
fildll
sub
mov
test
data16
jl
es
mov
dec
xor
sub
pop
ds
cmp
jle
jl
xchg
sbb
xor
jbe
add
mov
addr16
add
add
inc
adc
dec
or
in
jo
in
loope
xchg
adc
add
cmc
sbb
xor
push
adc
inc
stos
les
dec
add
xchg
mov
xor
mov
sbb
addr16
and
jp
push
shll
mov
mov
div
mov
out
popf
in
mov
adc
and
loope
ds
xchg
aam
leave
decl
mov
or
xor
ljmp
insl
jmp
xchg
cmp
enter
js
hlt
lds
scas
call
or
ret
push
xchg
jge
cmp
mov
lahf
push
stc
xor
insb
cs
fidivrl
rcrl
xchg
sbb
ffreep
jb
clc
inc
fldln2
cli
mov
jg,pt
arpl
fidivrs
adcb
out
jnp
into
lahf
std
or
insb
xchg
cmp
add
sub
mov
dec
mov
lret
mov
pop
add
cmpsl
out
shlb
mov
inc
fwait
sub
cwtl
jo
imul
sahf
lret
jecxz
fmull
mov
xor
or
es
test
clc
das
into
cmc
les
outsl
inc
aas
ret
jmp
sarl
adc
sub
insl
jo
movq
pop
test
frstor
pop
jnp
push
enter
clc
lock
daa
mov
mov
adc
xor
enter
and
push
pusha
cmp
push
cmp
adcl
cmp
mov
cmc
push
inc
mov
popf
xor
cmp
insb
push
sbb
pop
jnp
ret
imul
cmp
popf
and
inc
jmp
pushf
les
call
repnz
mov
mov
jne
push
jnp
fcoms
mov
pop
pop
rcl
xchg
mov
adc
insl
push
adc
lret
xchg
xor
xor
movsb
ret
adc
push
push
dec
ficompl
nop
lret
push
pop
fnstenv
fbstp
mov
add
insl
mov
push
cmp
es
movsl
xor
int3
dec
fidivrs
xor
aam
xlat
mov
movsl
mov
hlt
lahf
icebp
fdivl
inc
mov
ucomiss
or
arpl
mov
mov
adcb
push
inc
pop
pop
fstpl
ss
nop
call
xor
xchg
jb
flds
pop
stc
or
jbe
pop
pop
rorb
and
add
fdivrs
ret
outsl
adc
divl
pop
mov
aas
addr16
les
insl
mov
outsb
stos
inc
cmp
cwtl
xchg
and
icebp
push
jns
ficomps
pusha
push
mov
xchg
push
cmc
dec
addr16
inc
jge
ja
sti
xchg
jle
insb
lds
xchg
enter
xorb
icebp
add
cmpl
sbb
mov
or
test
dec
jp
xchg
repnz
mov
pop
inc
jns
sarb
in
shlb
cmp
pop
lcall
mov
les
iret
jns
sbb
cmp
lea
rolb
scas
mul
and
movsl
jne,pt
out
pop
test
inc
and
xchg
in
lahf
xor
push
xchg
push
stos
mov
mov
ret
inc
divl
sub
repnz
loop
xchg
clc
add
fildl
lea
and
out
cmp
or
sub
adc
adc
mov
je
adc
addl
xor
loopne
rolb
or
inc
dec
push
cmpsb
lahf
cmp
xor
lcall
xchg
xchg
das
sbb
adc
loope
std
push
lods
frstor
inc
mov
jbe
inc
xchg
xorb
movsb
pop
das
gs
in
cld
xor
movsb
adc
scas
mov
fsubrs
mov
pop
jg
outsl
imul
fistl
loopne
outsl
dec
shrl
fldl
push
movl
rep
sbb
push
arpl
rorl
lcall
cmc
adc
add
mov
mov
or
push
movsb
addb
dec
jne
cmp
lret
call
xchg
ja
mov
adc
test
and
stc
out
jbe
addb
sub
push
or
mov
mov
je
pusha
pop
lcall
cld
out
fdivl
mov
repnz
dec
inc
pop
fildl
jnp
jns
fidivl
inc
add
imul
and
mov
adc
or
out
xchg
pop
push
insb
ds
or
movaps
lock
pusha
dec
mov
filds
das
fstpl
push
icebp
mov
pop
insl
dec
mov
in
divb
imul
mov
outsb
add
mov
xchg
cmp
lea
imul
mov
pusha
push
cs
fstps
hlt
pop
xchg
sub
rorb
pusha
std
inc
cmpsl
pop
loopne
sbb
xchg
int3
cmpsl
add
xchg
sbb
sti
imul
icebp
pop
mov
jae,pn
dec
sub
lcall
xor
jg
imul
pop
test
imul
ret
ljmp
add
repz
pop
push
adc
icebp
push
xchg
cmp
fisttpl
call
xor
ja
dec
pop
adc
xchg
in
rcll
xor
pop
mov
inc
pop
cmc
sbb
ljmp
movsb
lods
bound
push
sub
jno
cmp
cs
push
or
shlb
repnz
adc
add
pop
add
sbb
fwait
mov
loope
push
push
mov
jmp
inc
mov
mov
divb
pop
sub
sti
sbb
sub
stos
lods
mulb
stc
push
and
pop
or
rcrl
cmp
mov
inc
adc
mov
sti
ds
test
shr
mov
push
push
cli
mov
loopne
and
fdiv
and
mov
outsl
jb
call
aas
sbb
sbb
shrl
dec
movsl
mov
mov
test
jmp
cmpsb
xor
shl
int3
mov
cmp
jp
mov
xchg
shlb
fildll
iret
ljmp
mov
jo
rcrb
orl
push
mov
idiv
popf
cmpsb
icebp
xchg
mov
mov
add
in
clc
gs
je
pop
dec
jp
in
and
mov
inc
sbb
loopne
sbb
xchg
push
pop
popf
jecxz
out
out
pop
mov
xor
jle
push
mov
and
movsb
inc
rolb
das
cs
mov
into
pop
xchg
inc
pop
daa
sbb
inc
cmp
pushf
push
dec
std
sub
xchg
out
inc
sbb
pop
into
mov
je
or
mov
and
in
jb
rcll
les
mov
adc
pop
pop
sbb
jbe
fwait
loop
call
out
add
shll
loope
outsl
gs
test
xlat
data16
insb
mov
call
in
in
shll
popf
inc
xchg
scas
add
push
out
xchg
data16
mov
adcl
mov
mov
cmpsb
adc
push
hlt
in
std
divl
xchg
xrelease
in
push
jns
dec
or
mov
popa
std
out
adc
popa
gs
repnz
xchg
sti
add
and
ds
in
idivb
scas
and
lods
or
fcompl
test
sbb
mov
sti
cmp
adc
or
add
loop
or
shll
shrl
cmpsl
fists
xor
negb
inc
mov
jl
rcll
into
inc
imulb
je
lock
mov
xchg
lds
divb
xchg
mov
shrl
repz
incb
hlt
sub
jmp
mov
hlt
mov
loope
and
and
mov
mov
xchg
test
mov
imul
lahf
mov
lods
lahf
mov
addr16
icebp
insb
adc
pop
push
cmc
jb
sbbb
clc
push
popl
adc
and
push
loop
adc
mov
adc
lods
sbb
push
test
ljmp
dec
push
pushf
in
inc
jmp
mov
cld
iret
jne
test
xor
mov
push
sbb
and
mov
dec
xchg
enter
xor
mov
aaa
cltd
dec
mov
cmc
lcall
in
pop
in
les
dec
mov
xchg
fnstcw
sbb
idivl
mov
enter
mov
andb
loopne
xchg
into
das
out
and
test
popa
cmc
cld
xor
stos
xor
xor
push
stc
shl
sbb
out
add
inc
sbb
add
imul
sub
or
push
addl
mov
dec
add
mov
je
push
out
push
adc
lods
push
in
sub
mov
dec
aam
xchg
inc
adcl
mov
ret
cltd
adc
lock
insl
std
sub
mov
fwait
cmpsb
icebp
scas
pushf
out
and
or
test
jne
out
rep
out
dec
shll
out
outsl
xchg
cs
pushl
sbb
push
cs
xor
in
incb
or
jb
dec
xchg
mov
les
pop
push
mov
xor
mov
lahf
daa
cwtl
lock
test
mov
add
dec
daa
and
sbb
leave
jns
mov
mov
push
negb
and
inc
xor
hlt
lret
popa
push
mov
sbbl
rcl
inc
sbb
mov
stc
inc
in
mov
scas
mov
cmp
test
inc
mov
inc
xchg
rcll
iret
data16
sub
or
push
in
xchg
mov
jge
bound
lret
or
addr16
jae
push
jle
adc
mov
and
orb
add
mov
mov
loop
mov
aad
mov
rclb
push
into
dec
lcall
mov
std
cld
inc
pop
push
dec
dec
ss
push
xchg
fidivs
push
pop
fldcw
clc
insl
mov
nop
fisubl
scas
sarb
dec
icebp
mov
mov
or
shlb
adc
data16
add
daa
fs
push
std
and
aaa
jb
pop
xlat
es
cmp
ds
pop
jae
lcall
jnp
stc
inc
mov
lcall
sahf
aaa
seto
es
xlat
push
mov
fcomi
mov
gs
out
ljmp
add
xchg
js
mov
or
mov
lcall
repnz
push
ljmp
sub
xchg
xor
push
cmp
fstpl
hlt
sub
jo
mov
xchg
sub
inc
inc
ret
dec
mov
insb
stos
mov
fs
inc
mov
hlt
fs
sbb
xor
lret
ret
test
xor
lock
jp
rclb
rcll
in
xchg
out
outsb
mov
xchg
cwtl
xlat
mov
aas
sub
mov
jbe
cmpsb
sbbb
xor
ljmp
lret
aas
push
test
sub
inc
ror
rolb
ret
sbb
push
rorb
xor
add
jmp
mov
mov
sarb
rcr
add
sub
push
xchg
pop
pop
in
dec
idivb
popf
and
push
pop
sub
mov
scas
test
icebp
mov
and
int3
add
jmp
shrb
mov
dec
mov
insl
or
adc
xchg
fldpi
pop
adc
sub
lret
pop
les
ret
inc
push
xor
popf
js
rcr
sub
jns
test
out
sub
stc
xchg
stc
push
xor
ja,pt
dec
fbstp
jno
addps
out
xor
and
ret
inc
cmpsb
shr
push
out
lahf
or
icebp
pop
clc
aam
icebp
xorl
outsb
ss
fsubrs
pop
fwait
push
outsb
aam
sarb
adc
mov
iret
jge
lock
arpl
or
pop
adc
lods
push
imul
mov
inc
mov
xchg
or
fcmovnu
fcoms
adc
pop
mov
inc
in
dec
adc
lods
dec
shrl
ret
insb
mull
lods
fs
sub
bound
push
or
adc
fs
jg
mov
int3
sub
mov
pop
arpl
daa
jge
fs
mov
pop
xchg
xchg
pop
xor
push
pop
or
mov
call
mov
jb
xchg
pop
lods
sbb
ss
insb
enter
mov
pop
ljmp
xchg
push
sbb
xor
mov
pop
shlb
mov
leave
fsubl
out
or
repz
ret
dec
mov
pop
mov
movsb
pop
loop
dec
filds
jb
xor
mov
xor
push
rcll
imul
jns
cld
addr16
cmpsb
jmp
push
jns
jnp
jns
sub
xchg
shrb
hlt
lock
xchg
cmp
loopne
int
jno
mov
mov
arpl
mov
test
insl
mov
js
ja
sahf
out
mov
out
imul
scas
mov
mov
xor
lcall
mov
dec
jns
ljmp
sbb
shl
aaa
add
xor
test
jbe
mov
int
add
cmpb
clc
out
xchg
jnp
fimuls
cmp
imul
ds
push
jbe
inc
xorb
xor
popa
add
push
xor
jg
enter
pushf
fstpt
loope
mov
dec
pop
inc
lods
push
cld
test
subb
cld
out
pop
divb
gs
jecxz
jmp
xchg
sbb
xor
aad
jne
aaa
lea
xchg
jp
or
in
loopne
outsb
ds
add
out
rolb
ds
orl
adc
or
push
mov
call
outsl
fwait
cwtl
fimuls
shrl
mov
test
jmp
mov
popf
push
add
les
test
incl
bound
push
mov
movsb
dec
testl
inc
or
loop,pt
mov
add
jnp
adc
loope
out
inc
notl
cwtl
inc
hlt
idivb
jge
and
je
ret
inc
push
dec
mov
cmpl
cmpsl
scas
js
repz
stos
inc
jb
ljmp
jp
lock
xchg
shr
sbb
fisubl
sahf
and
mov
pop
call
repnz
sub
and
addl
xor
aas
adc
cmp
mov
cmc
leave
cmpsb
jp
int
cmc
mov
les
std
divl
cmpsb
jno
sbb
adc
sub
leave
mov
outsl
inc
and
stos
inc
sbb
pop
mov
lret
or
sub
push
xchg
lods
xchg
mov
das
lret
sarb
pop
ret
xor
fldl
xchg
mov
imul
lock
subb
xor
cmp
fcoms
jle
mov
push
pop
inc
xor
and
cmpsl
mov
xorb
push
push
mov
cmp
adc
inc
xchg
push
lcall
je
cmpsl
pushf
push
inc
dec
incb
mov
fsubr
mov
pushf
xor
pop
addr16
add
sub
insl
jecxz
js
fldcw
es
rcrl
aaa
test
jmp
rorl
push
int3
vmovaps
push
testl
xchg
sub
push
clc
fs
test
adc
clc
add
cwtl
mov
mov
jno
scas
mov
cmp
pop
es
xchg
stc
lret
add
mov
inc
xchg
dec
jb
pushf
dec
pushf
mov
cmp
negb
mov
mov
sub
or
jg
lods
inc
xor
jns
mov
aaa
mov
lcall
xor
jg
addb
shl
les
test
xchg
add
wrmsr
shr
nop
dec
lcall
push
add
pusha
add
mov
add
aaa
je
push
jg
jb
hlt
rep
shll
push
sbb
add
and
aad
iret
mov
xchg
int
dec
in
push
pop
fmul
dec
fcomip
mov
mov
xchg
xchg
inc
sbb
sbb
inc
icebp
stos
and
add
sub
dec
lahf
or
jns
mov
mov
inc
in
jno
jns
rep
xorw
sub
and
mov
mov
icebp
or
mov
jbe
in
or
testb
or
les
aas
cli
sbb
push
mov
imul
inc
les
loope
out
jecxz
push
xrelease
leave
adc
mov
pop
sub
add
sub
add
pop
cmpsl
ret
popa
mov
cld
pop
adc
dec
mov
push
cmp
add
pop
dec
sub
test
lret
enter
in
call
sbb
sti
fisttps
pusha
pop
xchg
jne
xor
aad
lret
xchg
or
cmp
xor
lods
jle
loope
xchg
insl
push
stc
scas
aas
xor
mov
aad
in
in
and
adc
mov
cmc
sbb
or
pop
je
or
jp
pop
mov
xor
or
xor
insl
pop
test
insb
mov
inc
mov
cli
shlb
add
inc
push
cwtl
sub
outsl
movsb
divb
das
cmp
ror
aad
mov
xchg
xchg
add
pusha
stc
xchg
mov
inc
les
ret
hlt
rorb
dec
push
fidivrl
xcrypt-ctr
cmpsl
fwait
mov
cwtl
mov
dec
repz
psubusb
jns
loopne
xor
call
jmp
aas
les
addr16
mov
cltd
xor
mov
arpl
jnp
jo
or
iret
shll
leave
xchg
xchg
mov
ficoms
add
pushf
or
fiadds
bound
mov
fdiv
cmp
mov
cmpsl
cmp
sbb
fisubl
mov
icebp
insl
daa
adc
push
and
fnstcw
ljmp
xor
sbb
cs
add
add
les
inc
inc
push
lret
xlat
cmp
xchg
jae
inc
inc
cmpsl
shll
push
shlb
ja
loopne
sbb
out
enter
fisubs
xor
jg
mov
imul
xor
cmc
scas
jp
pop
xchg
scas
sti
rorb
cld
popa
mov
lret
in
push
or
out
pop
repz
cwtl
jl
fcmovnb
jo
shlb
stos
testb
lock
xchg
lahf
ficoml
cmp
loope
pop
sub
sub
cmp
pop
sbb
inc
adc
jecxz
arpl
div
and
mov
cmp
rcr
andl
dec
mov
sti
xor
adc
xorl
pop
push
mov
add
jle
push
sarb
es
xchg
adc
lcall
jge
test
xchg
adc
sbb
stos
mov
add
lds
stc
jle
mov
xchg
xor
out
lret
sub
adc
rorb
nop
mov
pop
fdivp
mov
stc
clc
sub
fldenv
lods
dec
sub
gs
lahf
inc
jb
mov
testl
adc
inc
dec
mov
jecxz
lahf
popf
push
xchg
imul
push
push
adc
sub
sti
sti
in
add
mov
jl
pop
jge
into
sub
adc
ret
stos
add
push
fidivrs
or
and
mov
fldl
jae
loop
out
and
mov
jle
in
push
imull
iret
dec
xor
dec
inc
inc
xchg
pop
movsb
repnz
cmp
xor
push
inc
fsubp
scas
test
sti
addr16
out
cmp
fs
jl
jmp
sub
xlat
push
sub
inc
adc
aam
dec
cmpsl
test
lods
outsl
mov
arpl
jb
std
addr16
mov
orl
ret
mov
imul
jae
into
hlt
sti
js
aad
leave
jmp
mov
add
pop
fs
loopne
push
ret
rcrl
sub
cwtl
cmc
xchg
in
sahf
xor
jl
imul
and
rolb
xchg
call
aam
mov
cmp
mov
stos
jg
pop
movsl
in
mov
setb
pop
loop
out
mov
andl
sub
hlt
dec
loope
out
and
pop
push
ljmp
fnstsw
aas
js
nop
fnstsw
test
cmpsb
xchg
push
pop
dec
xor
insb
xchg
xorb
mov
jge
lock
aam
pop
dec
or
inc
loop
mov
fdivrl
xchg
sub
push
cmp
lds
gs
jmp
and
popf
out
rorb
jmp
mov
push
arpl
daa
sbb
mov
cmp
jp
cmpsl
sbb
xchg
jae
lret
outsl
das
test
pop
cmp
cld
popf
push
xor
pushf
add
mov
add
int
pop
repnz
cmp
mov
fldpi
imul
scas
ljmp
mov
xchg
aas
or
and
stc
ja
sahf
jnp
dec
rcrb
stos
jle
mov
jnp
mov
mov
insb
mov
aam
adc
mov
inc
sti
jno
cmp
mov
outsb
or
pop
pop
adc
mov
test
mov
arpl
ss
rcr
cmc
push
icebp
call
lds
cmpsl
inc
gs
pop
add
and
cmp
shll
sub
sti
jmp
cmp
ljmp
movsl
jg
jg
cmp
xchg
xchg
xor
jge
and
fmul
mov
fidivs
hlt
adc
insl
dec
fstl
or
je
mov
lret
clc
aam
dec
sbb
inc
jae
jl
fwait
shll
mov
repnz
xchg
push
ret
dec
jecxz
shrb
adc
mov
cld
cli
dec
mov
pop
jle
push
aam
stc
movsb
lods
push
and
dec
cmpsb
leave
xor
jb
mov
movsb
push
repz
repz
jne
jnp
dec
scas
loopne
cld
adc
sbb
inc
inc
cmp
cmpsb
pusha
jg
pushf
pusha
outsb
adcb
sub
push
es
cltd
or
subl
pop
mov
es
or
mov
dec
pusha
jmp
cmpsl
mov
jbe
xor
jle
pop
push
imul
adc
mov
cvtss2sd
test
aaa
sbb
push
movsl
cmp
and
mov
or
pop
stos
sub
das
fwait
or
fucom
dec
std
cmc
dec
cmp
push
jge
push
daa
inc
xchg
and
imul
ljmp
jge
jp
inc
lret
out
sbb
data16
xchg
sub
dec
adc
imul
mov
mov
es
cmp
shl
addr16
mov
sbb
iret
add
inc
jns
jne
inc
xchg
push
shll
popa
push
lods
push
pop
add
enter
hlt
test
mov
cmp
cmp
inc
fsubp
inc
jno
pop
out
scas
jnp
lea
popa
popf
xor
jp
scas
inc
jae
pop
repz
lret
repnz
pop
out
ljmp
lods
cmp
push
lock
xchg
push
ja
test
movsl
rol
cmp
push
xchg
lods
int
jae
add
xor
out
xchg
addr16
aam
test
adc
lds
dec
sbb
inc
ljmp
inc
adc
push
push
nop
inc
cwtl
xchg
or
xchg
jae
leave
ja
jno
mov
fiaddl
mov
mov
sub
mov
ja
inc
ja
pop
sete
into
mov
pop
aas
bound
sub
cmpsl
add
dec
mov
xor
lock
sub
mov
mov
pusha
fiaddl
and
in
inc
pop
jle
xchg
mov
mov
fwait
mov
shlb
and
filds
fld
stos
out
lret
test
lahf
sarb
int
sub
cmp
stc
test
sbb
repz
sbb
add
xor
inc
cmc
testl
sub
jno
bound
inc
xchg
aam
jle
in
cli
fiadds
jno
sbb
inc
and
adc
xchg
shrb
ljmp
das
mov
scas
cwtl
push
and
cli
or
out
or
mov
lahf
pushf
mov
dec
outsl
aas
sub
xchg
mov
stos
cld
aam
add
inc
jne
adc
notb
jnp,pt
insl
sbb
fdivrl
lods
pop
cmp
cmp
sbb
repz
xor
ljmp
xchg
mov
push
int
insb
dec
jge
popf
mov
add
outsl
es
lahf
ljmp
cmpsl
mov
sub
das
push
movsl
adc
or
and
dec
stos
stos
ret
loopne
hlt
jl
mov
fwait
fwait
scas
je
mov
mov
push
lcall
pop
cli
out
loopne
insl
loopne
jl
adc
inc
popa
cltd
movsl
scas
add
jo
and
mov
and
pop
pop
sbb
test
mov
insb
xor
push
pop
insl
xchg
and
cmp
mull
mov
loopne
fst
aad
push
scas
aaa
test
lds
pop
and
jle
push
insb
je
push
or
push
push
xchg
movsl
or
jp
xchg
mov
xchg
inc
inc
hlt
pop
cmp
lock
add
inc
ljmp
inc
xlat
imul
cmc
cmc
stos
shrb
shll
push
cmc
int3
fs
lcall
push
es
cmpsb
or
or
rorl
push
leave
xchg
movsl
jno
sub
dec
outsl
jp
xchg
aam
dec
xor
data16
adc
sbb
fcompl
loop
mov
or
jmp
imul
fs
aam
and
enter
mov
inc
and
mov
cs
push
push
adc
push
arpl
xchg
ljmp
mov
aad
mov
push
xchg
sahf
dec
jbe
adc
aaa
pusha
lret
jns
xchg
mov
cmp
loope
lock
ret
mov
xchg
jns
jno
jb
out
ret
add
add
pushf
adc
aas
aam
dec
adc
outsl
add
jno
loop
lods
repz
add
sbb
mov
fsub
mov
pop
fisubl
cmp
push
mov
fildll
sub
jno
xor
and
ret
js
and
lea
mov
inc
push
push
cmp
imul
add
ficoml
clc
dec
test
mov
ja
xor
sub
lret
dec
rclb
fldt
jl
stc
jmp
mov
cmp
inc
ja
fdivrp
popa
push
push
jl
aaa
ret
xchg
and
dec
xchg
pop
push
push
rclb
pop
aam
ja
mov
pop
push
in
cmpsl
mov
stc
fcmovnb
out
test
add
in
adc
adc
dec
cmp
shrl
pop
mov
jne
push
das
bound
mov
sub
push
leave
loop
es
xlat
cmp
out
dec
push
lock
ret
cmpsl
mov
mov
and
enter
fstpl
jecxz
jge
adc
out
or
sbb
xlat
lds
enter
nop
jge
pop
scas
enter
or
test
mov
jbe
fcoml
shlb
inc
clc
xor
dec
xchg
lahf
sbb
xchg
sti
aas
and
imul
sub
lea
ror
icebp
stos
adc
lods
loop
dec
rcrb
sahf
loop
pusha
and
xchg
ljmp
jp
jecxz
dec
mov
rcll
sub
mov
movsl
xor
push
mov
dec
or
enter
cmp
push
daa
push
into
fnsave
xor
sbb
rcrb
sahf
push
adc
adc
xchg
aas
out
pushf
adc
idivb
add
lret
shlb
ret
loop
or
fldcw
pop
jle,pn
and
xchg
aaa
jle
fistpl
subl
xchg
pop
enter
adc
dec
mov
aas
out
clc
inc
js
lret
xchg
repnz
and
imul
ja
mov
add
push
cmp
jo
icebp
lods
dec
and
jbe
stos
mov
movsl
adc
cmp
shr
xchg
std
add
mov
out
pop
pop
push
xchg
out
shll
xchg
xchg
int
pop
aad
cld
mov
loope
clc
jns
push
lods
cli
clc
dec
mov
xchg
cltd
mov
adcb
push
mov
shrb
xchg
jge
fs
hlt
mov
push
mov
add
insl
aam
shlb
push
inc
iret
push
adc
xchg
out
pop
pop
push
add
scas
icebp
arpl
scas
inc
pop
push
adc
adc
jle
add
push
xor
addl
lods
ret
xor
out
pop
test
and
test
cmc
push
fstpt
stos
outsl
outsb
xor
jge
out
fdivl
xor
mov
in
sub
push
gs
fmul
iret
mov
test
frstor
stos
mov
jo
mov
jecxz
sub
jae
push
jle
pop
inc
push
sbb
jns
xchg
in
jl
mov
dec
lods
icebp
jnp
and
push
loopne
std
stos
inc
mov
cmp
int3
or
add
addr16
out
jl
rorl
mov
cs
fisubrl
fs
insb
movb
addr16
and
push
jno
and
sti
adc
int
pop
adc
jecxz
pop
ljmp
movsb
inc
push
adc
mov
or
ret
xor
and
std
cs
jae
call
jb
and
sub
fwait
fwait
push
mov
lds
jb
jp
arpl
sub
xchg
and
les
int
mov
lock
lcall
out
pop
popa
cmp
xor
pop
cmpsb
xchg
or
icebp
sbbb
mov
or
mov
and
mov
aam
rclb
std
fsubrs
mov
mov
scas
dec
add
xchg
out
js
push
jle
test
pop
iret
cmp
xor
dec
fcmovnb
mov
jno
in
inc
movsb
mov
js
adc
lea
mov
xchg
mov
inc
sub
outsl
test
jae
out
test
add
adc
mov
adc
xchg
lds
mov
sub
pop
pusha
xchg
xchg
jae
ljmp
ljmp
cmp
or
cmpl
jns
ss
jp
xlat
movsb
xchg
cmp
iret
iret
adc
aaa
push
std
push
lods
outsl
dec
xchg
cmp
loop
pop
cwtl
dec
cltd
push
mov
mov
repnz
addl
xchg
push
stc
cmp
push
stos
and
mov
add
jl
inc
sbb
dec
inc
sub
popf
cmc
jmp
pop
fcomps
xchg
pop
cmpb
add
notl
jnp
dec
sbb
xor
xor
enter
clc
cwtl
dec
fadds
push
cmp
and
xchg
inc
mov
adc
data16
cmp
dec
adc
xchg
or
push
andb
adc
xor
aad
push
jo
stos
cmp
movsl
mov
mov
std
sbb
cmp
orl
imul
orl
cwtl
and
mov
cmp
scas
sti
cmp
add
movsb
aam
mov
into
popa
sbb
inc
sbb
ja
jnp
js
cmc
lods
xchg
dec
xor
push
in
add
inc
test
daa
stc
dec
xor
cmp
pop
test
mov
add
lods
cmp
testl
sub
mov
call
rcll
inc
inc
scas
pop
pop
loop
pop
and
out
gs
leave
aam
aam
or
mov
mov
addr16
sub
and
dec
sub
fucom
popl
add
mov
mov
jle
cmp
ljmp
inc
dec
and
jno
jmp
call
adc
cmc
pop
ss
adc
int3
mov
mov
xlat
les
pop
cltd
aam
aam
mov
aaa
lea
cmpsl
iret
pop
mov
and
sbb
xor
ljmp
inc
dec
mov
nop
xchg
pop
add
jmp
fldenv
push
pusha
mov
inc
xor
sub
pop
addr16
pop
push
fnstcw
xor
aad
mov
adc
push
notl
dec
out
inc
pop
aaa
shrl
pop
imul
mov
or
outsl
into
inc
shl
add
pusha
mov
ror
and
mov
fiadds
fcoms
push
pushf
shll
fwait
inc
push
jp
push
insb
jne
fdivrl
jb
fisubs
cltd
cmpsl
sub
rclb
fcmovu
xchg
sti
divb
lret
mov
inc
lea
xor
dec
sbb
lds
fisubrs
fildl
das
jo
inc
mov
cmpsb
xchg
lea
dec
xchg
mov
addl
mov
mov
bnd
and
loope
enter
and
pusha
cmpsb
add
push
ret
inc
sbb
jns
or
orl
ja
jnp
test
into
push
add
fnstsw
insb
add
shrl
and
dec
stos
add
pop
push
or
pushf
or
shrb
insb
mov
push
orl
xchg
mov
ret
jg
cltd
add
out
dec
push
stc
fnstcw
orb
mov
cmp
loopne
mov
dec
adc
pop
xchg
ficomps
adc
jns
fcom
or
fsub
add
adc
imull
push
push
out
mov
xor
mull
inc
jbe
leave
subb
rcrb
mov
popa
std
xchg
or
jmp
repnz
popa
rcr
call
fidivs
sub
jno
pop
pop
push
das
cmpsl
cld
fmuls
push
mov
lods
cmp
ds
mov
push
dec
mov
movsl
les
push
or
cld
insl
xor
inc
scas
add
and
inc
mov
and
mov
mov
leave
movsl
or
fisttpll
outsb
test
fstp
cmpsb
in
dec
pusha
je
cmp
pop
xor
popa
sbb
xlat
mov
aaa
out
and
or
push
cs
popfw
inc
xchg
nop
pop
mov
pop
mov
stos
pop
dec
dec
mov
ds
ficompl
mov
fdivs
cmpsl
mov
aad
xor
sub
jl
pop
ds
jge
jmp
jns
jmp
lea
push
jo
adc
repnz
cmpsl
inc
xchg
fsts
xor
aam
loopne
into
xchg
inc
fildll
cld
jne
movzwl
mov
jo
lahf
icebp
jmp
inc
mov
pop
push
stc
pop
ja
mov
mov
sbb
push
mov
mov
popa
xchg
push
mov
pop
pusha
push
scas
into
loope
popf
jmp
adc
imul
jno
andb
test
inc
cwtl
sub
nop
add
dec
icebp
add
ja
mov
push
out
xor
xchg
negb
xchg
mov
xor
sub
jo
in
xchg
dec
sbb
push
ret
aas
neg
int
and
lret
icebp
out
mov
popf
inc
adc
insb
and
cs
sub
xchg
jecxz
dec
lret
and
cmpsb
or
scas
fsubp
dec
inc
rcrb
call
sub
add
jmp
lods
shrb
inc
mov
xchg
sub
inc
push
pop
insb
leave
shr
push
inc
or
push
mov
cs
cmp
std
stos
mov
cmp
in
jmp
cmpl
sbb
ficomps
or
movsl
mov
in
mov
mov
or
cmp
shll
leave
adc
pop
popf
add
mov
in
clc
pop
and
mov
inc
mov
or
mov
inc
test
jae
aas
int3
cs
push
adc
mov
mov
push
stc
xor
adc
testb
enter
ja
fldl2t
xchg
aas
xor
xchg
adc
dec
adc
jnp
and
fbstp
mov
fildll
xchg
push
pop
loope
mov
test
mov
pop
add
jo
fdivrs
jbe
imull
add
sub
lret
mov
sub
push
out
pop
out
push
sub
pop
push
mov
mov
sahf
scas
or
xchg
cli
enter
and
test
mov
inc
jb
es
arpl
xorl
aad
add
out
das
sub
gs
and
lods
sub
dec
mov
ja
sub
pushf
adc
and
inc
cld
popa
lock
jp
jno
jmp
add
repnz
dec
fwait
push
xor
sub
scas
sbb
movsl
inc
cld
inc
adc
loopne
jg
cmpsb
mov
push
nop
add
in
sbb
iret
jp
sbb
sahf
shll
pushf
stos
repz
mov
adc
jne
mov
sbb
inc
ljmp
mov
fs
push
push
int
sahf
jno
cmpsb
sub
lahf
cltd
insl
ret
xchg
xor
mov
jp
xor
cld
pop
cmp
out
mov
or
iret
push
out
das
push
in
push
pop
fbstp
add
add
xchg
push
jnp
adc
inc
lods
shl
shlb
adc
and
xchg
in
or
loopne
push
lock
fistl
lret
leave
popa
xlat
lret
add
inc
aam
pop
shlb
cwtl
sub
pop
movsb
add
sbb
adc
imul
or
mov
in
sbb
lahf
xchg
cltd
pop
cmp
testl
inc
ds
push
and
in
movsb
sbb
leave
sbb
add
cld
pop
lahf
fisubl
mov
je
xchg
fs
sub
ja
aam
cmp
pop
mov
movsl
cmp
adc
stc
jno
inc
adc
xchg
push
stc
inc
pop
jmp
mov
ds
popa
popf
jae
repz
insb
daa
lods
shr
pop
jp
cmp
push
movsl
jl
into
lds
aas
cs
adc
push
push
and
mov
dec
add
loopne,pt
cmp
and
pusha
call
fisttpll
bound
xchg
cmp
xchg
mov
xchg
call
jne
lret
pushf
lret
cmpsl
sbb
bound
pop
movsl
xor
mov
mov
call
push
adc
xchg
inc
nop
out
sub
jns
mov
shl
mov
rorl
sub
mov
or
inc
lahf
loop
nop
insl
sahf
push
xchg
je
loope
dec
add
daa
pop
xchg
call
sbb
sub
mulb
daa
mov
orb
mov
add
cwtd
mov
fcompl
dec
rorl
mov
sub
dec
jns
lcall
repz
xor
sarl
inc
stos
sbb
inc
xchg
xchg
sarl
sub
mov
int
inc
inc
mov
out
out
xchg
xlat
add
enter
mov
pushf
jno
pushf
pop
lds
or
int
fs
in
adc
outsl
xchg
push
call
or
push
outsl
mov
mov
jge
and
dec
mov
add
cltd
in
push
sub
fdiv
inc
js
inc
xor
sahf
sbb
lahf
jp
and
push
and
mov
xor
sub
bound
cmpsb
sub
rcl
push
fldl
add
fxam
testl
shrb
bnd
aas
jl
cmp
or
shll
xor
jle
lret
cld
add
out
popa
lret
outsb
leave
pop
adc
push
cmp
decl
dec
clc
sbb
sarl
mov
imul
pop
sbb
lahf
sbb
add
push
bound
pop
push
les
fwait
mov
fnstsw
xchg
lods
pushf
or
test
lea
cltd
lcall
xchg
pop
sti
pop
sbb
fsincos
or
shr
jmp
xor
cli
ljmp
cmp
mov
fisttpll
stc
gs
dec
jecxz
sub
scas
loopne
xor
xor
cwtl
lret
pop
mov
test
push
xlat
loope
xor
xor
xchg
ret
popf
cli
mov
pusha
inc
fisubrl
jle
arpl
cmpsl
imul
mov
sub
int3
cmpsl
mov
imul
movsl
lea
cmp
aas
cmpsl
jmp
out
subl
insb
int
mov
in
ficoml
hlt
mov
clc
iret
leave
leave
loop
aaa
call
jne
inc
call
jns
jne
adc
push
lcall
mov
inc
add
inc
cmp
xchg
mov
adc
inc
fmul
movsb
aaa
cmpsb
andb
add
ja
stc
push
mov
lcall
popw
sbb
xlat
aad
and
in
out
decb
shrb
cli
test
movl
cmp
ret
ja
sbb
mov
sub
mov
mov
or
mov
rcll
stos
call
or
test
jp
out
cmp
dec
fs
dec
rcr
xchg
inc
subb
adc
adc
pop
clc
mov
sub
mov
sub
xchg
jl
push
lret
add
push
rolb
sub
cmp
sub
fmull
lret
fmuls
or
fsub
add
test
outsb
and
stos
insb
je
mov
sub
fwait
test
das
pop
aad
jl
cs
push
sub
icebp
sub
push
lahf
xorl
sbb
inc
mov
push
mov
divl
lcall
inc
mov
xchg
pop
nop
test
and
sbb
inc
jo
lahf
imul
movb
xor
sbb
mov
mov
mov
jg
jne
fwait
leave
bound
pushf
sbb
mov
add
add
cmc
sub
int
jle
cli
mov
mov
into
jo
insb
inc
add
lea
sbb
orb
mov
push
sbb
mov
cmp
divb
jp
out
mov
mov
imul
dec
xchg
mov
jp
ficompl
shll
push
mov
mov
dec
inc
mov
lahf
cmp
outsl
xor
shll
dec
movsl
pop
in
sub
lcall
insb
xor
pop
clc
mov
adc
add
ret
pop
push
in
aaa
int3
mov
ss
fsubl
push
pushf
movsb
ret
mov
adcl
ret
jl
cmp
mov
jnp
shlb
mov
dec
lea
sbb
jge
jmp
mov
xchg
push
arpl
xorl
in
rorl
loope
sbb
popw
pop
lcall
ja
lods
divb
or
inc
mov
cld
mov
push
movsb
inc
ret
movsb
ja
out
cmpb
dec
mov
sbb
cvtps2pi
int3
jp
test
cld
push
out
arpl
int
fdivrs
cmpsb
push
nop
dec
and
xchg
and
xlat
jo
lea
inc
int3
or
out
fstpt
and
adc
lea
ret
pop
cs
push
push
rorb
hlt
dec
xchg
mov
arpl
and
fwait
jnp
rcrb
in
popf
and
push
and
adc
das
mull
divl
jle
ja
scas
jl
add
lret
xchg
mov
inc
outsb
push
mov
pop
call
test
pop
sbb
dec
cmp
dec
cmp
arpl
stos
dec
xchg
and
xchg
add
mov
fistpll
cli
sub
mov
or
clc
adc
ja
ja
inc
sub
cmpsb
jl
mov
dec
push
push
push
call
imul
daa
jge
leave
mov
push
orl
jmp
lahf
dec
cmpsl
lret
flds
mov
fstl
jb
mov
mov
xchg
jbe
pop
mov
adc
in
cmpsb
pop
pop
stos
jl
xchg
cld
loopne
xor
or
daa
jl
push
ss
out
fdivrl
icebp
or
sbb
add
cmp
jmp
mov
cld
sbb
push
out
lock
fsts
or
push
add
lahf
sbb
lea
xor
arpl
cltd
dec
pop
xor
stos
les
mov
push
addr16
leave
cmp
jp
xchg
dec
mov
xchg
jp
repnz
sbb
or
add
mov
fdivr
fwait
hlt
cltd
add
or
lret
cmp
daa
jnp
in
adc
loopne
or
or
push
or
or
mov
or
dec
pop
mov
cmp
dec
int
push
and
push
mov
daa
lcall
mov
test
sahf
xchg
js
cltd
dec
loop
xchg
dec
orb
pop
ljmp
push
lds
hlt
movsl
mov
dec
adc
jne
inc
pop
cmp
sbb
lret
add
inc
test
jp,pt
fsubs
push
fcoml
call
adc
orl
fcomps
jne
jbe
cmpsl
fiaddl
mov
sub
test
cwtl
or
lds
inc
cmp
mov
cmp
sarl
sub
in
or
pop
mov
ret
lea
loopne
push
int3
cs
push
iret
rorl
fbstp
mov
addr16
cld
mov
inc
fildll
out
inc
or
xlat
imul
out
push
mov
inc
add
out
loope
lock
es
dec
mov
sub
shrb
pop
mov
fcmovb
arpl
je
fsubr
out
movsb
pushf
pop
mov
adc
aas
fisttpl
or
and
push
mov
mov
mov
xor
pusha
gs
or
add
outsl
movsl
fistpll
das
lret
imul
lahf
adc
test
pop
fcoms
add
cmp
cs
inc
fldt
ss
enter
or
cmpsb
ja
popl
pop
sbb
inc
ds
xor
loopne
pop
loop
sub
jne
and
push
mov
mov
push
dec
add
dec
dec
fsubs
sub
xchg
dec
lret
inc
adc
adc
lret
aad
rcr
add
shll
sahf
dec
add
mov
inc
fcmovnb
sahf
repz
and
leave
jle
push
dec
adc
test
xchg
xor
movsb
imul
cmc
mov
lods
sbb
ficoml
cmc
cmpsl
push
aaa
inc
lods
repz
jae
lcall
xchg
xlat
xor
into
jae
inc
lods
jmp
cmc
cmpl
mov
and
or
js
cltd
inc
and
mov
jno
cmp
in
enter
sbb
push
loope
enter
mov
stos
cmp
daa
xor
xor
adc
mov
sub
cltd
adc
ret
fstpt
xchg
inc
aam
loope
in
dec
dec
sub
xlat
leave
jb
xchg
sub
jne
cmp
pop
and
mov
or
loopne
sti
insl
xchg
test
adc
and
stos
mov
push
cmc
movsl
pop
fnstenv
divl
mov
pop
loopne
xor
js
cmp
loop
xchg
xor
imul
and
push
pop
jmp
mov
clc
icebp
cmp
outsb
sbb
pop
push
push
sub
inc
addb
fwait
cmc
adc
mov
cmp
jb
xchg
mov
pop
cmp
jecxz
or
push
mov
inc
addr16
push
ljmp
repnz
sbb
loop
cmp
adcl
rcrl
clc
mov
mov
fcmovb
into
push
xor
in
ljmp
jge
sbb
fldenv
jno
mov
loop
ja
cmp
mov
mov
push
xchg
js
sbb
push
shrb
movl
add
or
adc
fisubs
out
lcall
push
lods
lahf
mov
cmp
jecxz
push
xchg
xlat
pop
fs
shl
fisubrs
jg
push
xor
mov
and
lea
sub
adc
sub
add
test
test
fsubrs
int
xor
mov
clc
subb
stos
mov
imul
in
in
mov
mov
inc
lcall
sub
popa
fldl
push
xchg
xor
mov
add
cmp
sub
push
aad
into
clc
jae
insl
pop
ret
xchg
fisubl
push
dec
or
mov
mov
sub
add
or
mov
stos
outsl
lods
and
and
cmp
js
mov
jmp
xor
push
add
sbb
cltd
test
jl
in
cs
adc
call
gs
divb
es
sub
cmpsl
lds
call
pop
mov
cmp
add
mov
call
push
jno
mov
bound
push
neg
pop
sbb
mov
andb
loopne
add
stos
or
loopne
test
adc
adc
sarl
mov
insl
rcr
adc
ja
lods
dec
push
or
fwait
shll
test
out
jne
fwait
mov
lds
adc
in
cmp
push
mov
or
push
mov
ds
xor
rcrb
cmp
fisubrs
cmp
add
jns
arpl
loopne
pop
sbb
arpl
stc
mov
in
in
push
out
stos
xor
cmp
add
lea
cmp
jbe
fs
or
cmp
lea
mov
inc
fists
xchg
xchg
cmp
or
push
loop
nop
data16
mov
repz
ljmp
sarl
iret
and
fisttpll
cmc
out
xchg
fmulp
dec
inc
sub
or
and
cli
movsl
sbb
into
dec
pop
call
movsb
jp
mov
mov
loopne
and
ret
and
addr16
inc
cs
sub
loop
xchg
add
lods
mov
mov
les
mov
adc
sub
imul
dec
pop
pop
popl
and
inc
ret
add
cmp
test
cmpl
cs
popf
pop
sbb
sbb
test
ljmp
sub
scas
sbb
mov
cmpb
mov
in
nop
cmpsl
es
pop
or
lret
out
dec
mov
in
cs
mov
mov
mov
adc
call
pop
movl
jmp
loope
lret
cmp
xor
pop
scas
dec
sahf
cvtps2pd
mov
mov
pop
test
adc
aam
or
fimuls
or
and
out
sarb
scas
iret
dec
xor
in
stc
jle
call
insl
sbb
cmp
incl
in
and
stos
pop
ficoml
mov
shr
mov
aaa
lahf
fwait
loopne
mov
mov
lods
arpl
mov
in
out
test
daa
andb
sub
loope
mov
stc
add
and
loopne
mov
aam
xor
out
ret
outsb
xchg
popa
addb
add
add
mov
or
push
xchg
popa
mulb
xor
adc
push
sub
jnp
lds
out
cli
aad
loop
gs
cltd
fisttpll
fmuls
jne
mov
pop
sarl
push
lea
inc
sbb
stos
xchg
cmc
sub
cltd
sub
push
xchg
loope
mov
popa
pop
mov
sti
repz
push
inc
pop
in
push
fwait
push
test
sbb
insb
mov
jmp
hlt
hlt
cs
adc
xor
mov
push
daa
xor
fs
repnz
stos
out
loope
sbb
sbb
adc
push
mov
adc
or
js
xor
in
push
xor
dec
add
or
cltd
dec
cmpsb
in
and
pop
pushf
pop
xor
mov
mov
and
movsb
aas
insl
sahf
or
jno
stos
xrelease
push
aad
sub
adc
clc
xor
rcr
aad
je
data16
cmp
fistpl
ds
ret
sbb
dec
dec
sbb
adc
rol
inc
mov
sti
lcall
cltd
orl
fcmovnbe
jg
pop
test
push
and
and
in
ljmp
or
orl
pop
mov
popa
imul
addr16
je
mov
sub
xchg
sbb
scas
sarl
or
inc
and
adc
cmp
or
outsl
and
or
mov
lods
push
push
cwtl
push
mov
fs
ret
add
fsubrl
ss
dec
mov
stos
pop
pop
mov
add
xor
je
rcl
mov
dec
icebp
out
push
jnp
inc
or
cld
jmp
dec
decl
out
push
nop
xchg
shrl
das
test
inc
les
sbb
cmp
nop
jle
ret
lret
ljmp
inc
cmp
sub
push
cltd
add
push
shl
jbe
or
xor
inc
jnp,pt
inc
push
and
shll
sbb
stc
notb
mov
xchg
cli
push
loope
test
pop
fsubrl
daa
aas
or
aad
test
sub
xchg
and
pop
ljmp
gs
test
cmp
popf
cmp
push
je
lret
pop
rorl
addr16
sbb
inc
jns
hlt
lahf
jmp
inc
sub
jb
xor
push
push
cmp
adc
enter
pop
ds
fs
jbe
test
pop
inc
leave
bound
out
mov
push
aam
dec
sub
data16
aaa
mov
insl
iret
xor
xor
cmp
mov
sarl
in
xor
data16
icebp
xchg
faddp
xchg
mov
mov
int
adc
aam
xchg
clc
adc
or
jp
mov
je
add
hlt
dec
jo
mov
sub
pop
pop
into
int
push
hlt
sbb
stos
rcll
fyl2x
jns
xchg
nop
loope
loope
mov
pop
lods
out
fsub
scas
test
mov
loop
jnp
add
mov
pop
adc
popf
mov
jmp
mov
in
cmpsb
shlb
outsl
xlat
arpl
xlat
jp
lahf
stc
sub
out
mov
imull
add
push
adc
pop
pop
lret
inc
push
test
fcoml
stos
mov
negb
fsubr
lcall
adc
xor
loope
mov
jge
adcl
xorb
cmpl
mov
jae
cmp
xchg
cmpsl
ja
pop
fnstcw
icebp
and
filds
lods
or
rorb
cmp
outsb
add
xchg
movsb
and
jb
bound
divb
es
mov
pusha
cmc
loope
sti
mov
push
shrw
icebp
lock
pop
fldenv
pop
mov
sub
add
adc
lret
repnz
jmp
lods
cmp
icebp
out
push
sbb
xchg
roll
dec
ds
inc
pop
sbb
mov
push
adc
iret
adc
imul
sub
fiaddl
mov
lods
cli
sub
sub
jns
repnz
or
pop
sbb
cmp
aas
insl
aaa
xor
and
insl
mov
xchg
test
push
mov
scas
fmull
popa
mov
jecxz
ds
push
insl
sub
and
dec
jp
xlat
bound
adc
loop
inc
test
xor
dec
aad
fisubrs
adc
or
mov
pop
cs
and
stc
jb
pushl
xor
mov
mov
push
imul
sbb
mov
mov
sti
cld
call
jnp
test
rcrl
hlt
repz
pop
dec
mov
xchg
addb
inc
and
mov
int
cmpsl
ds
movsl
sbb
pusha
sbb
dec
test
mov
mov
call
fwait
ds
mov
mov
data16
jo
addl
pop
adc
test
je
cmp
adc
adc
fistpll
scas
pushf
jnp
pop
adc
cmp
pusha
mov
and
jnp
add
fistpl
decb
or
pop
sbb
add
cmp
sbb
cmp
fildl
pusha
and
js
pusha
sti
sub
fs
lds
mov
dec
jl
arpl
cmpl
sti
pop
fcmovbe
adc
pop
or
mov
mov
push
cmpsl
mov
xor
or
jne
mov
inc
cmp
jle
inc
das
pop
aam
add
ret
call
xor
cmpsb
movsl
lods
shl
in
xor
mov
sub
pop
dec
sarb
add
mov
mov
setge
mov
aaa
cmpsb
jecxz
sub
scas
mov
add
ds
jb
fsts
rcrl
popa
insl
adc
enter
frstor
and
push
pop
imul
xorl
jg
inc
arpl
mov
leave
cli
loop
sub
and
mov
or
pop
jl
repz
mov
in
scas
mov
in
xchg
pop
and
aaa
mov
add
test
outsb
out
lcall
lods
xor
enter
sub
fwait
movsl
cmpsb
jg
mov
jle
fisubs
cli
sti
repz
jns
add
pop
push
movb
outsb
pushf
or
pop
adc
pop
mov
sub
fadds
xchg
dec
outsb
sbb
scas
add
daa
je
aam
inc
mov
cli
sti
mov
ja
jb
scas
jp
dec
pop
ret
mov
or
test
sbb
cltd
dec
pop
xor
loopne
in
mov
enter
cltd
or
ret
jmp
cmp
xchg
jecxz
je
push
pop
loop
add
lret
sbb
jo
cmpsl
mov
xchg
std
mov
mov
test
pop
rcr
add
pop
mov
cmpsl
sbb
shrl
shlb
ljmp
or
sub
iret
adc
jns
scas
inc
add
inc
addb
mov
and
aaa
cmp
jmp
pop
sete
gs
cmc
test
lds
jge
frstor
test
xchg
imul
ss
lret
push
push
mov
sbb
jge
add
adc
ljmp
fwait
rcl
imull
mov
lods
dec
fadds
aam
inc
pop
loop
cmp
mov
icebp
mov
adc
cld
push
push
in
rcrl
xlat
fisubl
add
in
shll
push
je
xor
pop
sub
inc
mov
xor
aas
or
lods
imul
outsb
pop
inc
rcrl
popf
fisttpl
fistl
or
call
mov
je
jle
stc
dec
daa
push
test
cmp
movb
and
mov
mov
add
pop
lret
pop
in
mov
aad
jmp
out
daa
aad
push
mov
clc
jb
lcall
outsb
lcall
jmp
imul
mov
lret
mov
adc
sbb
cli
jbe
es
inc
movsb
js
insb
mov
clc
mov
dec
fs
mov
mov
leave
push
xchg
into
xor
mov
loope
push
mov
aad
jo
int
xchg
jo
pop
mov
fstpt
jne
lods
outsl
std
ffree
push
pushf
push
add
adc
xlat
mov
repnz
push
jl
mov
cmp
mov
lods
mov
pop
gs
xor
sbb
mov
sbb
repz
sub
shld
ljmp
or
jae
rolb
add
adc
lods
imull
ljmp
mov
sub
sbb
sbb
int
notb
dec
lcall
inc
push
pop
fwait
cli
addr16
pop
push
sub
sbb
lea
mov
mov
aaa
mov
in
mov
das
sbb
lea
sahf
pop
sbb
in
imul
lea
rorb
icebp
stos
out
icebp
loope
das
hlt
mov
jmp
pop
pop
jns
nop
stos
pop
not
cwtl
cmovl
mov
fnstsw
xchg
mov
inc
stc
mov
lea
and
add
jae
xlat
test
test
mov
lahf
aaa
jmp
outsl
aaa
and
pop
lcall
out
inc
sub
fucomip
xor
int3
inc
insb
xchg
xor
jecxz
fstps
jecxz
push
mov
adc
jl
cwtl
pop
inc
call
nop
jne
popf
fwait
add
faddl
mov
mov
inc
pop
add
ja
int3
int
or
cmc
repz
ret
lea
cmp
rclb
nop
mov
pop
push
jecxz
inc
lods
and
outsb
lahf
cmp
add
mov
push
pop
call
aas
cmpb
xor
insb
pop
dec
push
sahf
sahf
mov
fstpt
jge
dec
inc
cmp
rcrl
inc
cmp
mov
inc
mov
popf
cmpsb
insb
divb
xchg
imul
cs
dec
dec
mov
roll
fwait
icebp
ss
mov
outsl
inc
int3
mov
pop
test
or
sbb
xor
sbb
aas
dec
jnp
es
cmp
push
ljmp
int3
jo
or
popf
inc
cmp
ficomps
mov
stos
xorl
mov
and
pop
fsubs
adc
lods
push
imul
and
rorl
xor
dec
hlt
mov
lods
mov
sub
shrl
push
mov
xchg
imul
pop
nop
lods
test
dec
enter
push
jno
daa
or
cmp
mov
outsl
or
enter
or
shlb
adc
inc
inc
xlat
jl
aas
mov
lds
loope
mov
and
imul
sbb
inc
test
loope
insb
outsl
frstor
lret
mov
cmp
xchg
mov
cmp
adc
mov
sbb
xor
push
lahf
pop
push
cli
movsb
and
int3
push
addr16
jp
outsl
mov
jmp
xchg
rolb
pop
pop
cmp
rclb
push
sub
jo
mov
roll
xchg
dec
adc
mov
in
and
add
test
cmc
mov
push
lea
rcrl
aas
insl
dec
xlat
cmpsb
inc
insb
jecxz
adc
pop
and
add
jg
adc
lods
lds
inc
pop
mov
jmp
push
test
pop
loope
mov
xchg
jnp
sub
xchg
cltd
mov
cmp
and
je
in
aas
cwtl
arpl
cmpsb
js
shrl
sub
mov
cmp
jp
jmp
ljmp
pushf
das
inc
cmp
mov
push
popa
sahf
jae
movsb
jnp
aas
and
cwtl
out
mov
out
fwait
xor
iret
sbb
sbb
js
dec
add
popa
test
std
or
adc
sbb
pop
sbb
es
outsb
ret
dec
push
mov
push
mov
mov
mov
fidivs
cmc
mov
clc
mov
jne
dec
arpl
mov
jmp
mov
ljmp
movsb
mov
das
mov
push
aaa
or
movsb
loopne
dec
or
jl
push
jne
dec
or
pop
hlt
xchg
lcall
inc
fcomps
test
repnz
sub
mov
inc
loop
movsl
loop
mov
and
and
data16
sbb
sub
nop
out
sub
bound
and
test
inc
xchg
mov
mov
mov
lahf
scas
stc
and
mov
int3
ja
orps
insb
out
sub
mov
and
out
divb
and
adc
xchg
pop
outsb
inc
std
adc
cli
cmp
push
arpl
lods
xchg
add
in
xchg
fnstcw
aaa
ljmp
jl
jge
fs
xchg
or
sub
daa
adc
jmp
je
ja
pop
cs
daa
bound
cmpsb
jnp
mov
aaa
xchg
pop
mov
xchg
adc
or
and
aas
mov
test
sub
jecxz
dec
push
push
lret
pop
jb
shl
adc
sbb
pop
push
dec
pushf
std
in
stos
dec
stc
loop
jp
idivb
jb
loop
mov
loopne
xor
xchg
xchg
ret
mov
cmp
adc
test
adc
xchg
imul
leave
adc
adc
pop
xchg
fnstcw
enter
adc
cmp
jns
pushl
pop
adc
movsb
and
dec
lcall
cmc
jg
cltd
xor
mov
push
cltd
aam
jae
cmp
shll
sub
mov
mov
or
adc
mov
mov
dec
call
scas
mov
aaa
shll
and
sub
xchg
stc
in
ja
ret
stos
stc
xor
and
rolb
loopne
and
sub
cwtl
js
dec
jo
adc
mov
mov
xchg
jmp
mov
jmp
aaa
and
jne
sbb
imul
decl
loopne
and
addl
mov
jo
sbb
bound
fidivrs
add
lods
push
stos
mov
push
sub
xchg
xor
cmp
push
xchg
fisttpl
in
ss
mov
cld
sbb
fs
subl
mov
in
addr16
and
and
stc
cmpsl
bnd
leave
loope
in
pop
es
pop
xchg
adc
and
xchg
sbb
ror
insl
gs
imul
les
adc
loope
mov
mov
stos
mov
loop
xchg
inc
adc
mov
addr16
not
sbb
sub
repz
inc
andl
sub
les
rcrb
ret
adc
imull
popf
pop
mov
dec
jge
pop
jbe
jmp
and
pop
push
add
cli
xchg
ja
adc
xchg
jge
dec
mov
fimuls
push
shlb
enter
pusha
or
add
lret
or
dec
fcom
inc
mov
roll
in
out
out
mov
ljmp
fidivrl
jne
jmp
lcall
cmc
sarl
inc
fld
xor
jnp
xchg
or
push
mov
repnz
daa
ja
pop
fldenv
mov
jle
shlb
mov
inc
mov
xor
bound
inc
mov
push
push
shlb
js
pop
mov
xor
xchg
adc
cwtl
iret
mov
jecxz
xor
sub
xor
cmpsb
mov
xor
mov
std
pushf
mov
adc
xor
pop
gs
xor
cmp
sbb
test
div
and
mov
sbb
in
loope
and
xor
in
popa
jl
pop
adc
and
fstpt
sahf
jno
mov
sar
fidivl
jp
and
fistpl
sbb
jbe
lds
iret
cmpsl
xchg
sahf
mov
or
mov
inc
sti
popa
jl
pop
xchg
inc
mov
and
sub
pop
popa
aam
test
loope
outsb
fmulp
xchg
sub
les
or
dec
cli
das
test
xor
ljmp
je
add
mov
pop
pop
iret
cltd
pop
shl
xor
pop
sti
cmp
fidivrs
jg
pop
jmp
or
flds
cmp
cmp
ficomps
lcall
or
xchg
or
jp
inc
rol
push
dec
jbe
int3
loop
rclb
push
out
inc
lods
std
psubq
jge
out
mov
or
sbb
adc
dec
shrl
ds
adc
or
mov
fdivl
call
xor
cmc
or
in
ss
or
xor
insl
daa
decl
jp
push
jnp
stc
movsb
fildll
dec
cmpsl
dec
mov
nop
inc
mov
test
les
call
push
sbb
jecxz
aad
inc
fdivrs
lods
in
pop
ficomps
aaa
add
xchg
stos
dec
jmp
mov
push
nop
push
inc
xchg
sbbb
sbb
ja
les
roll
add
call
adc
pop
sub
outsl
fldl
sbb
je
daa
fsts
push
ljmp
jg
dec
mov
dec
icebp
es
inc
or
std
xor
stos
insb
ret
adc
popa
dec
mov
cmp
adc
pop
hlt
mov
bound
int3
fisubrl
icebp
add
repnz
jo
cmpsl
cmpb
enter
or
fildl
dec
push
loopne
lret
pop
out
jle
pop
out
dec
sub
sub
jns
sarb
sbb
lret
stos
pop
bound
mov
sub
test
jnp
test
stc
imul
inc
sub
pop
daa
push
cwtl
lods
lcall
push
push
adcl
inc
pop
mov
jns
push
xchg
test
adc
or
lock
subl
arpl
lods
leave
mov
dec
into
adc
push
insw
push
sub
add
mov
lea
sbbb
lahf
jl
cmovo
aam
adc
dec
nop
loope
cs
or
dec
scas
loope
pop
les
mov
test
lods
lods
or
or
mov
sbb
and
js
rol
lods
jp
in
push
xorl
iret
das
pop
inc
adc
outsb
into
dec
idiv
iret
and
mov
push
imul
mov
or
insl
xlat
push
mov
mov
sbb
or
ds
jo
call
sub
int3
test
jno
or
dec
mov
aad
ljmp
std
shl
add
rcrb
jns
push
int3
and
or
xchg
jge
jecxz
out
fadds
jge
or
pop
mov
push
mov
push
push
jmp
retw
pop
jmp
into
lods
sbb
push
xchg
rclb
fisttps
out
fcmovne
stos
mov
add
jo
data16
into
sub
repz
mov
pop
cmp
insl
and
leave
and
ja
filds
add
xor
push
in
or
xor
ret
leave
aas
mov
stos
cmp
lret
mov
lahf
in
pop
mov
aam
scas
fsubrl
and
fcomi
cmp
dec
cmp
std
cmp
call
sub
pop
stos
xchg
mov
mov
pop
in
adc
adc
ljmp
jbe
sbb
mov
out
out
add
fwait
cltd
add
jge
sbb
push
and
push
and
sub
jno
adc
push
mov
cmp
xor
push
fstpt
imul
push
sbb
lret
push
cmp
movsl
xor
pop
inc
test
enter
pop
sub
dec
mov
mov
xor
imul
insl
popa
es
daa
imulb
jge
jmp
xchg
sbb
subb
sbb
out
xchg
pop
mov
in
mov
jnp
nop
push
or
cmp
pushf
push
cld
cmp
test
xchg
jo
rorl
push
push
outsl
outsl
rclb
das
xchg
xor
je
pop
jg
jmp
inc
mov
xor
fmul
adc
imul
mov
or
ss
pop
rcrl
mov
and
or
jecxz
pop
in
imul
push
fcoms
les
jle
sub
dec
mov
js
gs
xor
and
pop
push
or
loopne
mov
aam
sahf
mov
out
nop
adc
push
les
shrl
shlb
mov
out
xchg
hlt
adc
sub
rcrl
lds
out
add
sbb
jl
add
dec
adc
faddl
fs
aad
jl
or
mov
iret
cmpsl
and
xchg
imul
mov
xchg
testb
lcall
add
outsl
imul
push
sti
int
pop
push
cltd
fsubr
mov
out
xchg
scas
sbb
push
cmp
lcall
jns
mov
mov
push
pop
pushf
jmp
add
add
insl
in
lock
jg
and
es
outsl
push
fidivs
jmp
cli
push
xchg
or
mov
xor
andb
jnp
inc
lods
dec
push
dec
dec
jne
lds
xor
ja
fisttpl
ret
mov
movsl
sub
mov
data16
jmp
in
bound
add
xchg
ret
jo
fisubs
mov
mov
push
aam
adc
jge
xlat
mov
inc
cs
add
adc
mov
mov
ret
sub
pop
dec
ss
mov
mov
mov
nop
decb
mov
sbb
jne
inc
int
stc
hlt
xor
in
cli
dec
leavew
cmp
shl
cmp
nop
cmp
mov
jp
out
scas
outsb
nop
loope
mov
fs
mov
int3
jb
stos
popa
push
rorl
scas
leave
aas
stc
rolb
push
int
lret
mov
out
mov
jno
dec
sub
push
push
in
test
hlt
or
add
cld
jae
hlt
push
add
adc
xor
loop
int3
loop
cmp
and
inc
fucomi
roll
inc
pop
xlat
repz
mov
mov
ja
pushf
xor
mov
rcll
mull
add
clc
rclb
sbb
xor
add
sbb
and
inc
pop
and
movsb
sahf
xchg
lea
mov
sbb
push
sub
and
inc
std
mov
cld
repnz
arpl
daa
inc
mov
cltd
loop
outsb
iret
popa
mov
popf
sbb
dec
iret
sub
ja
pop
mov
test
jne
cmp
and
cmp
mov
das
sub
negl
or
push
cmpsb
xor
cmpsl
repz
jp
pop
sbb
inc
test
movsl
xchg
lds
sar
jns
dec
aaa
int3
cld
enter
add
sbb
rcl
out
sub
jns
scas
call
pop
cli
or
sbb
bound
aam
cs
leave
mov
pop
pop
cld
or
bound
roll
fimuls
aaa
pusha
mov
bound
sbb
dec
cmpsl
xor
stos
inc
pop
repz
test
xor
jecxz
movsl
fldcw
pop
dec
cli
outsb
mov
pop
mov
pop
arpl
and
pop
mov
movsb
fstpt
clc
xor
mov
lods
adc
lock
leave
ds
int
fucomip
test
inc
xchg
xchg
in
les
cmpsl
movsb
or
xchg
stos
jb
add
jg
mov
lret
cmp
dec
ds
add
dec
ja
mov
jle
ret
lea
sbb
xorl
mov
lahf
mov
add
mov
std
outsb
jg
fwait
jbe
adc
lock
pop
call
ret
mov
fwait
inc
inc
cli
inc
push
xor
xchg
xchg
jno
sbb
test
cmp
clc
xchg
dec
push
jnp
inc
jo
ss
rolb
or
mov
jmp
shll
rclb
mov
inc
lea
push
jg
loop
mov
cli
mov
inc
or
mov
popa
shrl
scas
xchg
jl
shll
add
ds
add
lret
xchg
mov
hlt
popa
lock
scas
pop
movsb
pop
jge
divb
insl
jle
stos
and
pop
mov
mov
push
fisubs
xchg
aaa
push
push
inc
add
lcall
arpl
or
js
or
in
inc
push
xor
mov
data16
mov
add
scas
mov
movsb
mov
mov
or
cmp
movsl
cwtl
ss
aam
repz
sbb
loope
and
mov
icebp
sub
enter
xor
push
xchg
sub
shrb
iret
sub
mov
push
push
pop
push
aam
xchg
pop
jno
dec
stc
push
xor
les
outsb
dec
cmp
sbb
out
mov
mov
inc
push
adc
xor
adc
mov
jnp
push
sbb
outsl
gs
aad
cmp
cmp
das
add
sbb
int3
and
fs
out
bound
fiaddl
aam
sbb
pop
jl
int3
cmp
popa
imul
mull
mov
jge
push
or
jmp
sub
jae
icebp
jno
xor
and
xchg
rcl
inc
ret
imul
inc
dec
push
in
negl
and
mov
dec
cmp
inc
sahf
inc
out
jmp
pop
mov
lods
int
ss
sbb
cltd
iret
push
adc
arpl
ror
xlat
sub
gs
xor
jp
in
xor
and
nop
push
ss
fwait
sub
sub
ret
xchg
inc
dec
icebp
scas
mov
stos
cmpsl
fildll
lahf
mov
ret
jl
mov
cwtl
mov
outsl
mov
mov
lods
mov
mov
mov
xor
decb
xchg
and
enter
gs
mov
jo
xchg
adc
and
inc
add
mov
faddl
call
aad
lds
aas
es
mov
jbe
icebp
leave
icebp
mov
mov
pop
push
pushf
add
sbb
popa
and
into
mov
xor
sbb
or
mov
in
aad
imul
mov
adc
repnz
adc
push
shr
inc
jae
fildll
scas
and
fstpt
mov
icebp
mov
lock
fildll
loope
push
jg
call
adc
movsbl
out
loope
mul
jns
jl
popa
lret
loopne
push
pop
adc
gs
adc
in
push
push
outsl
sub
in
mov
arpl
lcall
sbb
push
les
lods
xchg
insb
aad
test
pop
scas
pop
dec
test
sub
repz
in
jbe,pt
pushf
fscale
bound
jmp
mov
and
add
pop
js
comiss
cwtl
mov
dec
cmc
cmp
mov
ljmp
icebp
fnstcw
mov
xchg
and
out
sbb
out
repz
push
xor
es
dec
pop
std
or
dec
fmuls
xor
mov
sbb
sub
lcall
fcoms
push
push
add
insl
out
outsl
cmp
iret
aas
mov
jne
dec
sbb
enter
pop
mov
pop
mov
cmp
add
lds
fstl
ss
inc
sbb
push
mov
scas
and
pop
add
mull
push
add
imull
mov
push
stos
sarl
cmpsl
jae
loope
adc
test
mov
mov
sbb
mov
jns
ret
cwtl
sub
loop
rorl
outsb
imul
fidivs
aad
repz
or
fimuls
mov
and
jl
insl
int
faddl
lret
out
punpckhwd
push
or
out
and
mov
movsl
mov
sub
icebp
inc
jge
mov
or
sbb
in
inc
dec
out
and
outsb
xlat
cmp
pop
or
lea
mov
ds
xchg
in
mov
xor
lcall
mov
lret
mov
push
lret
pop
scas
adc
sbb
cld
push
andb
imul
pop
xchg
xor
vcvtps2dq
mov
lock
imul
mov
mov
cmp
ret
clc
pop
cltd
jne
sbb
jge
add
jp
xchg
jne
sub
faddl
pop
fidivl
sbb
sub
imul
mov
mov
jmp
cwtl
or
je
pop
push
in
pop
pop
rcrb
call
divb
int
dec
mov
and
gs
pop
stc
fs
cli
dec
rcr
xchg
fs
xor
stos
stc
push
in
pop
fisttpll
push
sbb
cmc
pusha
test
loopne
jbe
mov
ja
adc
dec
rcrb
inc
pop
pop
loopne
adc
xor
aam
rorl
mov
push
adc
cmp
xchg
imul
mov
pop
sub
xchg
lds
sub
aam
imul
pop
cmp
in
into
inc
in
cmp
mov
sbb
outsb
dec
inc
dec
aam
je
lods
out
adc
or
and
insb
push
inc
jne
pop
popa
lret
shrb
pop
pushf
fstpl
dec
daa
xchg
pushf
cmp
adc
fsts
scas
and
in
adc
push
out
test
data16
pop
jp
popf
jns
pop
mov
cld
movsb
lock
ret
daa
leave
int3
aas
mov
int3
mov
dec
loop
or
sub
int
sbb
and
add
out
imul
pushf
lret
cmp
sahf
jge
mov
shlb
cmp
lock
xchg
sahf
xchg
or
imul
or
sti
cli
pop
shrb
xor
pop
dec
in
clc
rcl
jb
data16
inc
xchg
fstpt
sahf
arpl
push
test
push
int3
dec
dec
je
xor
and
hlt
lret
dec
outsl
xchg
sbb
mov
sbbl
or
push
pusha
sub
push
adc
mov
or
jns
adc
mov
jne
xor
sbb
push
mov
sahf
add
mov
stos
xor
pop
xchg
bound
lret
shlb
pop
xor
push
push
popa
lcall
insl
adc
pop
sti
mov
dec
xchg
mov
ljmp
push
pop
imul
es
dec
dec
inc
insl
adc
cmp
push
fisttpll
xor
mov
leave
push
daa
mov
cmpsl
bnd
incb
jno
sub
lock
sub
xadd
push
imul
cli
inc
sub
lahf
scas
xor
loopne
inc
cmpsl
cmc
push
in
sbb
push
in
pop
inc
out
sti
fimuls
cmpsb
cmp
inc
in
and
jge
mov
xor
loopne
bound
and
ret
shlb
jl
lahf
pop
jns
jo
pushf
mov
insl
je
cmp
testl
ret
cli
mov
jns
or
movsl
lods
repnz
cmpsb
mov
or
les
fbstp
xchg
cltd
idiv
leave
push
adc
cmp
sub
pop
adc
dec
sahf
and
subl
loope
cmp
inc
ss
mov
jle
stc
inc
cmp
out
pop
xchg
loop
and
and
div
loope
movsb
out
mov
out
lods
mov
pop
mov
orl
or
and
data16
push
jns
fcmovbe
push
jnp
lcall
inc
and
cltd
idivl
xor
dec
add
mov
jno
mov
mov
scas
mov
cs
sti
cs
cmp
or
lret
dec
mov
push
push
cmp
test
cmpsl
in
es
mov
inc
mov
mov
and
xchg
ja
jl
cs
xchg
mov
mov
in
scas
ss
push
xchg
inc
cltd
cs
pop
outsb
ja
inc
lods
dec
hlt
push
cmpsb
hlt
popa
pusha
sub
rcrl
insl
xchg
and
insb
js
mov
pop
scas
jecxz
xorb
popf
mov
rcrb
xchg
sahf
or
sub
out
or
arpl
sbb
je
hlt
rcl
stos
shlb
in
hlt
out
sub
jp
pop
fidivrl
insb
fisttps
movsl
ja
jb
inc
lret
daa
into
in
leave
push
mov
xchg
jns
hlt
adc
imul
fmuls
fstpt
incl
add
xlat
push
jecxz
cmp
push
mov
or
xlat
dec
xor
outsb
cmp
lds
nop
lods
aad
or
int
lahf
ret
and
and
mov
bound
cwtl
lods
xchg
jmp
adc
fldenv
mov
scas
inc
jb
test
mov
pusha
mov
call
mov
adc
cmp
pop
adc
lret
adc
xor
dec
mov
pop
adc
mov
outsl
jo
push
dec
ret
or
mov
inc
mov
lret
std
jecxz
int
push
inc
andb
dec
pop
jmp
pop
fs
fidivl
mov
xor
fs
or
sbb
sahf
dec
push
test
mov
cmp
imul
repnz
pusha
and
xchg
add
xlat
daa
js
icebp
mov
test
fisubl
jle
mov
ja
shlb
push
cmp
scas
lds
lock
dec
rcr
rolb
stc
cmp
xchg
outsb
jp
pusha
push
popa
loope
das
push
sub
mov
out
push
adc
popa
push
jmp
push
dec
jle
xor
mov
mov
add
js
push
je
outsl
repnz
sub
cmp
in
mov
scas
ret
icebp
inc
out
aam
jl
stc
add
jmp
inc
out
adc
fldt
or
pop
sahf
cmp
fsubrl
int
sahf
sub
out
out
mov
cmc
jbe
jnp
mov
cmp
out
testl
sbb
lahf
jmp
adc
push
mulb
clc
cs
test
mov
push
lret
push
sbb
jecxz
arpl
inc
cmp
dec
jmp
sub
shl
pop
add
sub
icebp
test
es
leave
jb
clc
out
push
mov
add
decb
add
icebp
jno
mov
xchg
movsl
fucom
cmp
push
pop
enter
mov
mov
jae
dec
loope
mov
adc
ja
xchg
cltd
pop
mov
jg
mov
ds
gs
dec
sbb
decl
cmp
adc
sub
or
jno
cs
sub
popf
test
jns
mov
and
push
ror
and
push
bound
xchg
adc
mov
push
mov
lret
iret
xchg
inc
andb
jmp
sbb
xor
loope
or
sub
xor
ja
xchg
adc
cs
fstpl
nop
in
xchg
cmp
negl
fnstenv
idivl
roll
xor
das
sub
jl
movsb
mov
stos
mov
inc
adc
fnstcw
mov
mov
dec
js
lds
mulb
pop
pop
mov
roll
call
push
add
sbbl
adc
xor
aad
lret
push
xchg
mov
imul
and
cwtl
shll
stos
testb
mov
aaa
xchg
into
add
cmc
or
outsl
push
add
xor
scas
sub
je
shrb
inc
fcomps
lret
cmovno
lds
xor
nop
cmpl
scas
xor
in
ds
adc
mov
ja
ss
jbe
pusha
lods
mov
fists
data16
xor
hlt
or
push
push
inc
popa
and
and
add
aas
and
repnz
pop
mov
xlat
roll
loopne
bound
mov
shlb
shrb
cmp
aam
sarb
mov
cs
sbb
popa
sahf
mov
out
or
sub
jnp
loope
mov
nop
int
sbb
cltd
mov
cltd
sbb
xchg
mov
and
js
iret
mov
in
pop
push
js
inc
and
addr16
push
push
lds
adc
jge
fstl
sti
sub
and
inc
ja
ss
add
add
pop
in
dec
and
test
mov
int3
inc
gs
adc
cmc
pushf
dec
dec
jg
fnstsw
mov
lods
fldcw
dec
fdivs
notb
inc
jb
insb
mov
mov
hlt
int
mov
and
data16
lock
icebp
or
xchg
mov
add
je
aad
jno
cmp
imul
insb
xchg
mov
xchg
movsb
cmp
imul
fsub
mov
xchg
xor
jmp
adcb
dec
out
cld
xchg
ljmp
ljmp
insb
jo
mov
xor
mov
pop
ljmp
pop
sarb
loope
les
ret
mov
dec
mov
scas
std
cmp
jle
or
jecxz
test
push
or
aam
test
insl
mov
cmc
ret
sub
dec
add
mov
fyl2x
fdivl
cld
mov
repnz
sub
loope
jns
mov
xor
pop
mov
rclb
sbb
sbb
dec
sarl
inc
dec
add
insl
arpl
cmp
pop
sbb
pushf
jns
jbe
xchg
dec
out
mov
cmpsl
sbb
or
sbb
test
out
insl
xchg
pusha
push
xchg
out
sbb
push
fcmovnbe
xchg
jmp
mov
pushf
loop
lcall
sarl
in
inc
neg
mov
fs
jb
inc
adcb
pusha
xchg
jl
lock
sub
loopne
sub
movsl
cmp
adc
pop
xchg
push
loope
fistpll
lcall
add
lock
xchg
or
mov
fcmovnu
mov
enter
jecxz
lret
ds
in
mov
pop
xorl
add
mov
sub
outsb
cmpsb
or
daa
clc
add
xrelease
test
fcompl
enter
push
xchg
jle
jl
aas
aas
lea
mov
dec
jg
pop
pusha
insb
or
pushf
push
adc
fwait
mov
push
xchg
pushf
inc
push
jle
mov
ret
mov
loopne
xchg
movsl
adc
xlat
push
sbb
cmp
lds
stc
roll
cmp
jl
vprotw
mov
xor
lret
int
mov
je
mov
cmp
out
test
mov
inc
hlt
pop
mov
fwait
imul
cs
push
fs
and
in
outsl
aas
jg
out
add
sub
ret
mov
jb
repz
ret
mov
adc
pop
xchg
pop
push
xor
fucomi
mov
push
enter
pop
xchg
dec
inc
add
rcll
fbstp
stos
or
in
adc
fwait
mov
rolb
aad
inc
jb
xchg
sti
inc
ficoms
sbb
stos
mov
or
jmp
icebp
bound
div
addr16
addl
jns
loopne
lcall
xchg
jbe
or
bound
xchg
xor
aaa
sbb
cmp
mov
cs
ss
lods
push
hlt
mov
cmp
push
adc
pop
add
push
stos
mulb
xchg
push
mov
les
or
mov
enter
lcall
dec
xlat
inc
lods
rcr
inc
jne
imul
ret
pop
bswap
adc
imul
in
scas
stos
or
jl
cmpsl
aaa
jecxz
sbb
stos
stos
mov
adc
sub
or
adc
inc
xor
fisubrs
fldl
pushw
clc
das
add
out
push
add
lods
jl
mov
pop
lods
fisubs
out
lock
push
inc
cmc
cwtl
iret
test
fucomi
lods
jl
popf
shrb
pop
xchg
in
pusha
xor
add
outsl
jg
pushf
stc
mov
ljmp
and
xchg
xchg
push
pop
movb
jae
add
loop
sti
cwtl
mull
mov
inc
mov
out
mov
jns
mov
mov
inc
adcb
xchg
jbe
sti
frstor
lds
mov
movsl
xchg
ret
push
mov
mov
arpl
lret
mov
adc
adc
adc
xlat
push
fucomip
lahf
les
roll
testb
inc
cwtl
mov
push
in
rorb
adcb
mov
dec
shrl
or
sub
in
sbb
in
daa
or
loop
in
adc
movsb
aaa
sub
ja
dec
mov
negb
rcr
and
addr16
adc
cli
sub
sbb
xor
xor
int
stos
decl
inc
sbb
test
jle
mov
scas
push
dec
aad
mov
into
push
xchg
rolb
scas
les
inc
rclb
mov
mov
mov
inc
cmpsb
jno
cld
or
or
out
fcomp
sbb
roll
cmp
push
dec
addb
enter
sub
xchg
xchg
mov
sahf
cmp
xor
cs
jl
loop
jl
fstpl
stos
lods
jge
and
inc
ljmp
add
mov
xchg
xchg
push
mov
and
test
dec
or
cmp
inc
sbb
adc
gs
jo
inc
and
cltd
inc
hlt
in
xchg
mov
sbb
push
push
sbb
pop
loopne
dec
add
icebp
adc
fidivrl
test
push
push
repz
insl
mov
mov
xchg
lcall
daa
inc
clc
dec
fsubs
adcl
loopne
and
pop
imul
xchg
jb
pop
sahf
push
sti
jne
mov
mov
xchg
notl
inc
icebp
andb
push
inc
inc
xlat
sub
popf
btr
js
sbb
mov
mov
xor
adc
bound
pop
hlt
push
xchg
fcoml
pop
test
mov
sarb
mov
nop
pop
dec
stos
jmp
popf
cmp
mov
cld
fstl
jle
ret
cmc
adc
es
mov
cwtl
push
aam
lock
xchg
mov
int
clc
out
ljmp
push
ret
movb
outsb
dec
pop
xchg
in
xchg
and
push
or
imul
test
rcl
ja
inc
and
and
dec
outsl
push
popa
xchg
and
pusha
dec
sub
bnd
icebp
ljmp
fistl
pop
btr
icebp
cmp
and
shll
lahf
std
pop
std
mov
ret
push
xchg
inc
mov
shrl
xchg
out
inc
or
inc
inc
sti
imul
lret
adc
stos
mov
bound
cltd
jle
ljmp
movsl
adc
xchg
popa
pop
xor
and
mov
sysexit
mov
lods
jnp
and
mov
mov
cmpsl
fcmovnb
cmpsl
stos
xchg
pop
inc
lods
cmp
or
mov
cmc
push
sbb
mov
sahf
push
xor
mov
pop
fsubs
fadds
int3
jle
adc
push
imul
loop
lret
mov
jg
pop
push
sti
ljmp
mov
adc
xchg
std
ljmp
mov
mov
adc
and
sbb
movsl
stos
xlat
cmpsb
push
push
mov
outsb
sub
test
inc
and
sub
dec
push
cmpsb
mov
cld
fdiv
sbb
fucom
pop
fdivs
repz
cwtl
dec
mov
icebp
xchg
rcrl
out
loop
movsb
jmp
add
out
sub
je
enter
cs
aaa
bound
enter
adcl
jne
inc
mov
xchg
ljmp
xchg
pop
mov
inc
sbb
sub
repz
mov
push
loope
shrb
inc
les
jnp
xchg
xor
aad
fcomps
scas
and
jle
and
testb
lcall
push
aaa
ss
mov
inc
xor
rcrb
sbbl
inc
fsubr
call
inc
sbb
xor
jle
and
fimull
xor
aam
and
and
test
jmp
hlt
call
popf
out
dec
in
shll
add
sbb
push
ret
rorl
or
lret
mov
insl
lock
out
pop
add
jge
leave
cwtl
pop
rolb
pop
js
mov
pop
xchg
push
adc
loop
rcrl
sbb
mov
test
inc
arpl
pop
add
and
ljmp
out
sbb
pop
in
aaa
mov
pop
das
lods
cs
or
cwtl
add
adc
pop
stos
xchg
hlt
enter
jnp
adc
adc
jmp
cmp
cs
rolb
sbb
mov
add
movsl
ds
pop
rclb
mov
xor
pop
or
sbb
jnp
lods
hlt
fs
and
out
mov
mov
xchg
je
or
in
fldl
push
push
out
mov
jbe
cmpsb
pop
mov
xchg
pop
bound
sbb
jl
inc
std
lock
leave
leave
jmp
test
dec
or
mov
out
mov
mov
fsub
ficomps
cmpl
sbb
sarb
js
imul
les
in
xor
jmp
push
mov
aaa
loope
dec
pushf
cmp
mov
rclb
push
cmp
push
imul
cmpsb
inc
aas
fisubl
mov
or
pop
jns
bound
push
jl
test
andl
jo
ss
xchg
inc
rorb
sub
and
jl
sbb
rcrb
jbe
or
inc
pop
pop
xchg
cmp
xchg
pop
mov
mov
or
je
fmuls
daa
adc
push
jmp
je
negl
pop
pop
jno
xor
push
pop
pop
js
xor
mov
scas
inc
pop
arpl
mov
bnd
push
popa
gs
addr16
neg
mov
mov
sub
push
push
stc
xor
inc
sbb
and
mov
mov
fistpll
subb
pusha
mov
aaa
adc
call
xchg
mov
shll
push
push
shlb
mov
push
push
cmp
dec
sbb
insl
out
pop
ljmp
icebp
loop
data16
push
sub
or
leave
jmp
mov
icebp
or
add
cmp
inc
push
jmp
into
leave
loopne
dec
andl
add
cli
jl
adc
inc
mov
shr
lock
iret
dec
in
repz
arpl
pop
or
arpl
jne
repz
fidivrl
adc
cmp
inc
dec
inc
and
push
inc
jnp
cmp
xor
and
dec
cmp
lock
imul
fdivrl
shrb
jb
inc
rcll
mov
dec
andl
out
mov
andl
push
lods
cltd
cli
fucomp
sahf
mov
bnd
insl
mov
or
scas
imul
jns
jmp
fisttpl
and
xor
dec
or
fwait
jb
shlb
out
les
mov
cmpsl
fimull
sub
mov
cli
pop
xor
sbb
inc
fimull
ret
leave
imul
das
inc
sbb
insl
aas
xor
int3
loope
pop
xchg
or
sbb
rcr
imul
push
jmp
ficoml
jmp
js
iret
jle
xor
push
les
inc
sti
or
fwait
dec
dec
xorl
mov
cs
fsubrl
fnsave
enter
int3
lds
fdivs
mov
sub
add
fnstenv
shlb
and
mov
aas
and
popf
jne
cmp
dec
clc
dec
mov
gs
mov
mov
aaa
push
or
mov
and
in
out
shrl
nop
push
mov
pop
cmc
movsb
lret
jnp
in
add
popw
in
cltd
lods
pop
mov
adc
mov
xchg
push
xchg
addl
cmp
sti
mov
xchg
adc
or
scas
subl
xor
in
xchg
xor
rclb
cmp
das
inc
iret
aam
cld
insl
sub
pop
cmpsb
fmull
in
and
cmp
mov
cmp
mov
scas
dec
mov
mov
repnz
adcb
and
xchg
lds
imul
mov
data16
and
mov
popa
pop
jg
or
sub
and
popf
cmp
std
xchg
xchg
bound
aam
mov
scas
insb
sbb
jp
pop
lds
mov
mov
xor
adc
orl
mov
arpl
sub
or
das
loopne
cli
jp
mov
sbb
and
je
and
inc
fimuls
mov
jns
xor
icebp
xor
push
addr16
mov
xchg
pop
xor
jo
xchg
aas
sbb
movlps
iret
jmp
and
hlt
mov
mov
inc
aad
dec
fimull
pop
out
add
or
pop
out
out
arpl
lcall
iret
inc
xor
xor
jnp
push
push
sub
loope
jl
jbe
inc
std
outsl
mov
test
mov
lahf
sbb
mov
mov
insl
lcall
pop
pop
or
xor
dec
cltd
pop
push
cs
nop
test
mov
xor
in
stc
cmp
xor
pop
fstl
lret
jnp
fld
arpl
cmp
call
push
add
rep
and
and
xchg
mov
inc
daa
test
jno
fsubrs
test
add
adc
push
lahf
js
push
pop
addr16
jae
fildll
data16
aas
out
dec
mov
cmp
push
mov
jge
test
dec
cmpsl
test
add
loope
scas
and
stos
and
dec
ret
mov
jb
xchg
clc
ljmp
pop
mov
pop
push
mov
inc
jle
mov
std
in
cmpsl
mov
mov
in
loopne
cmp
push
aad
and
mov
mov
enter
in
adc
movsl
mov
scas
pop
xchg
xchg
xchg
mov
and
lds
push
and
add
xorb
or
push
xchg
mov
push
mov
dec
out
or
pop
addr16
shl
popa
xchg
repnz
jmp
push
sub
in
lret
popa
cmp
cld
addr16
pushf
cmc
test
jb
add
int3
xchg
push
jo
daa
sub
ja
sbb
pop
pop
add
xlat
cmp
adc
test
mov
shrb
lahf
mov
inc
out
test
and
iret
testl
xchg
and
push
or
mov
movb
xor
pop
adc
movsb
js
xor
xor
push
loopne
add
out
loopne
mov
or
xchg
mov
rcl
pop
push
jl
pop
mov
bnd
adc
pop
aaa
shl
lods
cmp
push
clc
dec
sahf
jo
in
rclb
data16
push
sarl
sbb
rcrb
dec
ret
imul
out
aam
enter
pop
pop
lea
pop
popf
or
test
ja
fildll
jge
fsubrl
lcall
xor
push
imul
pop
stc
mov
or
mov
shll
ret
test
pop
mov
sub
mov
pop
mov
ds
rcll
iret
jb
call
insl
jp
xor
mov
fimull
adc
mov
stc
cmp
clc
sub
dec
mov
push
and
or
pop
cltd
pop
adc
pop
jmp
add
xchg
repz
xor
push
add
jb
and
inc
pop
mov
shr
adc
imull
mov
cmp
fmul
into
jl
pop
pop
test
mov
lds
xor
mov
sub
aad
mov
out
mov
sbb
lods
xchg
leave
pop
mov
adc
cmpsb
outsl
xchg
push
jge
ss
stc
mov
sub
fcmovnbe
mov
xchg
xchg
cld
sahf
push
jnp
push
jecxz
push
lret
stos
fidivrl
xchg
rcr
fistps
mov
out
dec
and
fcoml
mov
mov
dec
ror
incb
aaa
repz
sub
loopne
push
cmpsl
mov
adc
loop
pusha
and
idivl
mov
outsb
out
out
cltd
aad
movsb
mov
mov
inc
push
xor
xchg
imul
lods
push
lret
mov
fldenv
lods
dec
dec
bnd
mov
adc
sub
xchg
mov
xor
cmp
dec
test
mov
mov
mov
loopne
stos
adc
mov
xor
xor
mov
adc
outsb
or
xor
ds
cltd
xchg
xchg
mov
gs
mov
mov
pop
jg
adc
out
repnz
jle
pop
nop
lret
fistpl
cmpsl
mov
ror
movb
and
subb
add
cld
cmpsb
inc
lds
mov
fildll
mov
and
stos
lods
cli
push
xchg
dec
xchg
inc
and
dec
test
iret
dec
insb
xchg
arpl
testb
inc
pop
add
pop
cmp
loop
push
sbb
out
arpl
sti
mov
movsl
call
stc
and
lcall
jo
outsl
pop
xchg
shl
inc
mov
sar
mov
xchg
clc
pop
nop
push
cltd
dec
inc
sbb
mov
xor
std
pop
inc
sub
out
mov
xchg
mov
sbb
repz
push
stc
dec
inc
ficoml
and
jecxz
sarb
outsl
sbb
add
add
imul
mov
lds
scas
push
add
leave
pusha
rclb
popa
shlb
into
repz
sbb
cli
js
pop
call
hlt
pop
xchg
or
inc
inc
dec
rclb
pushf
push
jge
ret
out
imul
addb
loop
jne
pop
push
inc
rcrb
out
cmpsl
rorl
mov
aam
mov
popa
mov
jnp
or
pop
repz
clc
cmp
mov
mov
cli
enter
add
cmp
rol
mov
mov
testb
push
dec
arpl
call
int3
dec
add
mov
sti
test
mov
and
dec
sub
dec
ss
jbe
leave
add
pop
dec
out
mov
fsub
es
in
je
jae
mov
scas
and
push
test
in
inc
adc
push
sbb
xor
fldt
pusha
push
push
pop
inc
inc
sub
jo
adc
push
imul
cwtl
jle
and
movsl
sbb
lcall
sahf
and
lahf
jl
mov
addr16
add
and
or
add
aam
xor
dec
loopne
fdiv
dec
jbe
or
pop
sti
add
dec
adc
fsubrl
cltd
and
sub
shr
imul
pop
xchg
js
mov
sub
pop
loopne
push
xor
fistps
lret
mov
or
repz
repz
xchg
in
scas
jle
les
leave
inc
loope
and
xchg
pop
fnstsw
dec
in
std
push
cmpb
lcall
ficompl
leave
mov
lahf
daa
movsb
in
mov
xor
in
sbb
add
cmp
mov
sti
lret
ljmp
mov
cmp
fstpt
int
jge
mov
cmp
lahf
and
xor
js
or
je
loope
lahf
pop
jg
rolb
repz
shll
repnz
pop
push
inc
clc
xlat
shr
inc
add
insl
pop
xor
sub
pusha
repz
repnz
jns
ss
mov
ror
push
push
cwtl
xchg
arpl
cltd
sub
sbb
adc
or
ret
test
jp
mov
mov
mov
add
ljmp
jbe
inc
sti
pop
mov
fsubp
jnp
rolb
les
and
popf
jge
popf
ds
lds
push
cwtl
repnz
int3
or
dec
pop
push
mov
dec
xchg
jp
pop
cltd
test
push
fs
mov
lcall
shrl
sahf
inc
daa
cmpl
hlt
xlat
repz
jo
iret
adc
and
fmuls
into
icebp
addr16
dec
sbb
jns
es
pop
fdivrs
xchg
cld
xchg
xchg
dec
xor
push
xlat
gs
ss
rol
xor
in
cmp
and
push
add
ret
outsl
ljmp
mov
je
shrb
and
les
cmp
data16
push
add
bound
out
sub
adc
xchg
jle
push
je
scas
clc
shrb
outsl
pop
xor
lcall
into
out
xor
sbb
mov
test
in
lods
daa
lds
inc
lahf
sub
shl
xchg
insb
popa
dec
or
arpl
insl
loop
sahf
dec
ja
push
iret
fstpl
aad
inc
out
adc
insb
leave
arpl
cmp
pop
jg
or
shll
push
popf
fiadds
fldt
ljmp
pop
push
jns
xor
ss
out
and
stc
push
mov
icebp
in
xchg
test
js
out
jns
ljmp
stc
mov
push
pop
cmp
aad
or
orps
pop
mov
loope
mov
scas
ss
pop
sahf
xor
paddsw
inc
roll
ss
pop
loopne
xor
call
xchg
pusha
movl
inc
js
cmp
lret
sahf
roll
icebp
movsl
add
cmc
jnp
jp
popf
pop
jo
push
ficoml
pop
adc
ret
out
mov
jae
mov
hlt
pop
loopne
stos
cltd
icebp
add
push
inc
mov
dec
or
push
mov
sbb
fmuls
xlat
jl
jbe
cltd
xor
aaa
insl
lods
cwtl
sub
dec
cs
push
cmc
sub
adc
sub
xor
adc
lret
push
pop
dec
sbb
leave
negb
lods
testb
in
cmp
xchg
jbe
stc
xorb
lods
jp
or
mov
pop
fdivl
and
inc
or
pushf
mov
outsb
sbb
hlt
insl
add
test
and
ds
lcall
xchg
ljmp
add
in
out
xor
jnp
sub
xor
cwtl
cmpsl
into
stos
adc
sahf
sub
cmp
jb
push
pop
out
and
loopw
call
sbb
lret
pop
sub
push
fmull
cld
mov
add
fbld
push
adc
pop
pop
adc
cmp
not
mov
add
xchg
xor
leave
jecxz
dec
fisubl
lods
fiaddl
clc
std
xchg
cwtl
enter
lods
jb
pop
or
and
xlat
xchg
dec
arpl
pop
daa
and
call
fwait
sub
loopne
rcl
mov
pusha
cmpl
enter
xor
push
pop
lods
in
mov
jne
push
inc
xchg
sub
data16
test
push
lock
dec
push
inc
ret
push
mov
aaa
arpl
or
je
ja
jle
test
cli
nop
cmp
mov
fsubrl
pop
xchg
mov
mov
and
jne
jl
fwait
cmp
cmp
sub
dec
mov
mov
data16
push
je
push
mov
adc
syscall
data16
in
sub
pop
mov
es
mov
jae,pn
xchg
sbb
push
push
sub
imul
cmp
add
adc
push
lret
and
popf
sbb
inc
movb
fldt
je
sarb
inc
es
push
jge
insb
mov
lods
aad
or
sbb
mov
aas
push
push
mov
push
jns
vpminsw
negl
push
outsl
pushf
xor
in
adc
std
mov
jmp
dec
fisttpll
bound
adc
mov
je
fmuls
rclb
repnz
lea
out
dec
in
mov
mov
xor
scas
gs
arpl
lret
nop
mov
mov
cld
mov
in
je
ljmp
mov
scas
scas
inc
cmp
popf
inc
pushf
pop
in
dec
aas
add
ds
sub
inc
mov
popa
push
or
aad
stos
je
sub
mov
fmull
int
xor
imul
repz
popa
sub
in
jl
dec
scas
xchg
into
sub
sahf
mov
in
fdivr
lods
and
push
lods
pushf
rcrl
out
xchg
add
stc
mov
idivb
or
dec
cmp
xor
int3
mov
pop
rcll
jb,pt
scas
aam
into
mov
cs
cmp
hlt
xor
mov
pop
shll
or
xchg
add
push
sub
lret
icebp
inc
les
subb
lock
cmp
sbb
lcall
pop
xchg
mov
add
lret
add
sub
fldenv
js
push
mov
push
xchg
mov
lds
jecxz
sbb
push
mov
inc
mov
insl
imul
inc
jmp
xlat
in
mov
sub
xor
dec
in
in
pop
testb
lds
ds
sti
iret
gs
je
inc
jmp
ds
je
leave
data16
lret
mov
aad
fwait
mov
pop
pop
or
leave
lods
loop
shlb
cmpsb
test
stos
je
and
sarb
push
dec
sub
dec
cmp
jno
and
mov
movsb
dec
add
add
outsl
inc
daa
jmp
adc
lock
lods
mov
mov
loopne
or
scas
pop
imul
outsl
leave
add
filds
test
icebp
pop
test
and
lods
mov
pop
frstor
mov
fisttpll
ljmp
dec
jl
mov
shlb
mov
frstor
jp
or
and
sub
jp
jo
and
inc
repz
testb
movsl
imul
lcall
shl
mov
and
fadds
adc
mov
rorl
shrb
outsb
fildl
loope
shr
adc
push
pop
jns
negl
mov
scas
sbb
jnp
pop
lock
jge
cmp
xorb
jmp
pop
adc
mov
mov
jno
arpl
in
jmp
cmp
sub
push
mov
sbb
jl
jno
xor
mov
in
orb
and
adc
cmp
add
in
push
pop
lret
mov
cmp
sbb
out
sti
inc
stos
and
cs
imul
push
jae
sbb
arpl
mov
jns
call
mov
sahf
and
flds
mov
lock
inc
add
jmp
push
cmpsb
pop
sub
divb
addr16
sti
pop
sbb
rolb
mov
and
adc
or
lahf
dec
xorl
nop
pushf
test
arpl
adc
lds
leave
stos
sub
push
arpl
jns
stos
push
sub
enter
jne
lods
xchg
pop
mov
inc
nopl
out
outsb
xor
pop
fwait
adc
popa
mov
aad
enter
data16
push
ljmp
or
adc
mov
in
and
pop
mov
push
push
mov
push
xchg
jle
mov
push
sub
lods
sbb
sub
mull
fstpl
mov
dec
ja
pop
cs
jg
jnp
mov
sub
push
lret
lret
in
ja
movsl
mov
cmp
cltd
aam
int3
inc
dec
jmp
add
mov
aaa
int
loope
jo
lcall
mov
dec
imul
mov
rcl
xchg
inc
idivb
pop
xchg
push
das
insl
mov
fidivl
push
ret
inc
lods
clc
por
mov
test
bound
cs
jl
in
outsb
push
mov
mov
mov
std
xchg
mov
mov
iret
lock
dec
pop
mov
inc
insl
shlb
or
pop
and
jb
jnp
lcall
lock
sbb
sbb
cmc
mov
inc
mov
mov
sub
inc
sub
add
test
jmp
lods
pop
cmp
cmc
int3
mov
mov
lret
into
gs
cltd
imul
add
push
add
aam
adc
mov
xchg
mov
leave
dec
leave
dec
insb
shr
mov
cmp
shll
jle
ljmp
push
leave
pop
mov
or
push
jl
fs
jecxz
mov
cmp
adc
in
or
dec
enter
sbb
testl
add
jb
idivl
pop
push
or
jo
js
mov
adc
cmp
mov
mov
adc
mov
xchg
lods
outsb
int3
and
jle
or
inc
dec
std
pop
ret
test
popa
movsl
inc
stos
rcll
in
cwtl
das
stc
and
push
aaa
pop
xor
xor
cmp
mov
mov
call
fimull
mov
mov
cmpsl
push
cmp
fisubrl
mov
ljmp
xchg
xchg
push
shll
int3
mov
dec
ret
push
loopne
dec
sbb
adc
arpl
and
fs
xor
xchg
push
pop
dec
mov
dec
ljmp
xchg
xlat
ret
sbb
bound
xlat
and
loope
iret
clc
movsb
jo
pop
xor
or
dec
cmc
sti
ljmp
jg
sub
loopne
leave
or
fs
jge
inc
xlat
aam
dec
pop
fmuls
jbe
and
add
pop
in
mov
push
mov
rcr
inc
push
xchg
lret
add
movsb
jl
sub
pop
addr16
push
fs
push
adc
cmp
call
xchg
ret
imul
cmp
stos
les
jbe
mov
jo
adc
push
mov
cmovae
out
mov
movsb
fcompl
xor
in
or
sbb
sti
xchg
repnz
push
xor
push
mov
bound
test
xchg
push
adc
test
and
jg
and
ja
adc
pop
push
leave
sarb
mov
push
jp
cmp
mov
imul
dec
mov
sub
lcall
in
xchg
mov
enter
fcmovnbe
jb
dec
out
enter
out
push
dec
xor
les
xchg
es
pop
sub
jg
mov
add
jns
fwait
or
loop
fisubs
sbb
sbb
mov
sahf
arpl
pop
idivl
cmpsb
into
mov
cmp
jp
out
push
loopne
cmp
adc
mov
sbb
add
shlb
sbb
ljmp
push
xchg
negb
mov
add
push
lahf
mov
mov
jne
cmp
test
jb
lahf
push
pop
mov
mov
fisubl
and
out
movsl
lods
cltd
cmp
ss
lock
repnz
std
inc
nop
fsin
cmp
repz
out
ja
insb
cmp
cmp
or
out
lods
jmp
gs
xchg
push
xor
dec
push
xor
xlat
and
ljmp
leave
bound
xor
jbe
xchg
pop
pop
imul
subl
pop
andb
xor
xchg
inc
inc
dec
out
test
daa
adc
popf
sahf
pusha
inc
les
lret
sub
bound
xlat
in
sti
mov
mov
sarb
push
aam
repnz
mov
pushf
adc
andl
addl
mov
xchg
sub
sbb
mov
mov
pop
test
sub
mov
jge
jmp
in
and
subl
xchg
push
das
inc
dec
push
xor
jnp
int3
cmp
mov
adc
lret
fstl
shl
es
outsl
test
or
das
mov
lret
mov
cli
lea
xchg
subb
sub
int
cld
ds
and
addb
pop
lcall
inc
es
xchg
mov
shll
xchg
les
jne
ret
push
sub
inc
and
jns
xorl
repnz
dec
cmpsl
pop
fstpl
int
mov
in
mov
push
fildl
push
in
lods
lods
fmull
sbb
lods
lock
das
in
iret
gs
notb
pop
mov
mov
ljmp
out
add
sbb
gs
push
bound
fs
xor
mov
or
adc
mov
push
xor
xor
jp
mov
bzhi
jle
or
pop
decl
cmp
and
cmp
or
mov
int
aad
scas
dec
fmuls
leave
add
cli
imul
and
pop
fs
mov
mov
pop
out
jmp
adcl
xchg
lahf
inc
mov
dec
xchg
and
push
ja
sub
jg
push
insl
dec
in
lods
add
inc
rclb
push
xchg
or
pop
fcomps
daa
cmp
imul
push
pop
ds
loope
jmp
push
jae
aad
cmpsb
xor
cli
cmp
sbb
outsb
jmp
xchg
push
xor
jbe
or
pop
movsb
xchg
in
loope
jmp
ljmp
bnd
xchg
rcrl
lea
sbb
adc
jl
mov
push
push
or
add
outsl
sbb
cs
pop
jbe
clc
push
fcmovu
dec
dec
mov
scas
pop
stos
jle
mov
arpl
repnz
xchg
out
xchg
xchg
pop
leave
and
and
test
pop
cli
mov
leave
insb
jge
enter
lahf
mov
fbstp
mov
add
movsl
fsubrl
int3
call
adc
or
mov
clc
in
iret
fsts
sahf
pop
aaa
inc
out
insl
pop
cmp
stos
dec
clc
mov
push
jae
mov
xor
mov
data16
push
lods
jl
jns
dec
mov
clc
daa
or
push
sbbb
idivl
pop
jg
sub
fwait
xor
sahf
mov
es
aas
and
jo
jp
xor
add
bound
repnz
cmp
cmp
stos
int3
and
mov
fidivl
or
sahf
inc
jns
inc
pop
cmpsb
ljmp
sahf
nop
add
ljmp
rorb
rorb
xor
sub
das
leave
cmp
rcll
sub
xor
test
add
ljmp
scas
or
cltd
jnp
mov
movsb
pop
push
sub
cmp
icebp
decl
addr16
adc
out
dec
sahf
jl
pop
das
pushf
addr16
xchg
int3
add
add
jne
aas
jecxz
mov
bound
mov
sub
sub
mov
mov
out
dec
push
or
xor
sbb
sub
mov
fsin
jns
in
sti
les
inc
addr16
jg
pop
jb
mov
ds
mov
push
xor
pop
and
adc
pusha
add
in
sahf
pop
iret
adc
or
cmp
insb
inc
sbb
dec
push
nop
mov
mov
cltd
mov
in
inc
push
cmp
jl
dec
pop
rcrl
jns
outsb
cmp
sti
shlb
scas
mov
sbb
dec
and
sbb
mov
jge
rorb
sbb
fs
push
xchg
xchg
stc
cmp
pop
int3
out
sbb
jns
mov
rcrb
dec
inc
outsb
adc
cli
orl
jnp
push
lahf
rcr
push
mov
add
clc
adc
inc
xchg
push
loop
pop
sarb
out
test
ljmp
jns
mov
gs
or
inc
das
fstl
sbb
xchg
int
int3
enter
shll
pusha
xor
mov
sub
mov
and
test
sbb
shll
jnp
ds
ss
mov
pop
add
popa
cltd
sub
shrb
lods
jb
ljmp
lods
je
dec
stos
lcall
popf
cmp
popf
popa
adcb
data16
push
add
mov
leave
rcrl
and
cld
das
xor
movsb
xchg
inc
pop
mov
scas
xchg
daa
test
shll
mov
decl
cwtl
out
pop
out
jmp
jne
mov
stos
inc
fstpt
fnstcw
push
push
loope
sbb
cmp
daa
pop
nop
ret
xchg
inc
push
jb
lods
nop
aas
test
push
enter
lcall
imul
mov
and
scas
out
test
lods
stos
xor
incb
mov
jbe
dec
in
inc
mov
std
jecxz
cmc
jle
sub
fimull
push
mov
sub
or
pop
incb
icebp
sbb
ljmp
rcrb
push
stos
xchg
and
push
jp
xchg
pop
push
std
inc
cmp
cmp
arpl
and
lods
dec
push
ss
punpckhwd
lds
cmp
subb
or
mov
push
cltd
ret
stc
sbb
mov
or
repz
xchg
pop
push
mov
push
dec
inc
cmp
or
jnp
sub
shll
or
subb
fsubs
inc
push
sbb
adc
outsb
rcl
xchg
and
ljmp
fcmovb
pop
int
arpl
sbb
imul
pop
mov
ljmp
mov
stc
sbb
das
ljmp
mov
movsb
sub
push
loopne
je
pop
xchg
insl
sbb
lcall
jge
rcrb
jmp
pop
fists
insb
xchg
and
fdivl
and
mov
jne
add
push
dec
arpl
fiadds
mov
push
in
cmp
ljmp
or
jle
bound
rclb
push
aad
hlt
fs
jmp
inc
and
or
out
leave
and
call
mov
jae
adc
inc
rcl
mov
popa
cltd
jnp
lret
cmpsl
inc
ja
sarb
adc
sub
aad
sub
mov
jns
lods
lods
stos
rorb
cs
bound
jg
lds
cmp
out
imulb
dec
inc
lock
dec
fs
sub
pop
and
mov
mov
xlat
pop
cltd
fdivrl
fimull
jbe
je
stos
into
aaa
ds
mov
jns
xor
jno
sbb
sarl
fidivrl
idivw
in
push
push
mov
fwait
shrb
test
in
and
lret
xor
cmp
mov
pop
adc
cmp
sub
scas
into
test
repz
dec
pop
loopne
in
and
imul
mov
aad
mov
inc
or
out
lods
xor
scas
bound
mov
sar
aad
pop
jecxz
lcall
rcll
inc
stos
stos
into
lock
push
enter
or
mov
fwait
xchg
push
pop
lret
add
daa
in
push
xchg
fisubs
xlat
pop
loopne
dec
in
lahf
mov
mov
into
dec
test
stc
in
add
jmp
sahf
jmp
int3
xor
jecxz
add
sbb
test
lds
mov
dec
adcb
sahf
pop
sub
xor
call
cld
fmuls
psrlq
sbb
enter
into
jge
jo
mov
jb
xchg
sbb
sbb
cltd
mov
hlt
orl
push
or
lahf
inc
push
outsb
fmuls
fadd
xchg
dec
xchg
xor
xor
xor
xchg
in
sbb
xlat
pop
nop
push
jge
sbb
hlt
loop
mov
sahf
inc
adc
sub
and
and
jnp
sbb
test
xor
stc
mov
lock
xor
int3
cmp
push
out
paddsw
add
and
mov
icebp
scas
mov
lods
sti
add
iret
cmp
push
push
fnstsw
mov
arpl
jae
loop
cmc
cld
lret
pop
call
inc
add
xchg
cmp
cmp
ljmp
outsb
jge
jp
jns
or
sahf
bound
inc
ja
icebp
dec
lret
sbb
lea
aam
add
and
aam
shlb
inc
into
aad
push
add
lahf
xchg
pop
data16
jne
pop
shl
sub
mov
pop
sbb
inc
mov
fstpt
stos
pusha
dec
in
jne
jle
xor
lret
cmp
dec
sar
mov
xor
jae
test
ss
lret
btc
lds
jmp
ss
int3
push
adc
push
stos
xchg
add
xlat
sub
inc
mov
imul
lea
daa
test
aam
jmp
pusha
inc
push
push
xor
lcall
insl
adc
cmp
pop
lahf
jg
addr16
push
lret
das
mov
stos
int
test
mov
sbb
cmpsb
cmp
inc
dec
into
popa
andb
cmp
cmp
jecxz,pt
jge
imul
adc
cmpsl
push
loope
addr16
aas
in
push
jb
adc
xlat
push
xchg
pop
sahf
push
jle
jp
testb
testb
movsl
int3
pop
mov
xor
mov
ret
mov
adcb
adc
into
loopne
and
testb
mov
ret
pop
sub
in
in
jne
add
out
jnp
in
mov
jb
jns
dec
jne
int3
in
pop
dec
mov
push
mov
adc
mov
mov
add
lahf
jl
leave
sbb
call
or
add
push
dec
add
xchg
xlat
hlt
arpl
cli
iret
loopne
add
aas
repz
inc
dec
adc
outsb
push
in
das
scas
or
daa
jp
xchg
test
loopne
inc
into
les
sarb
jmp
xor
jecxz
jl
dec
andb
pop
or
lret
sbb
ljmp
stc
sarb
cmp
dec
mov
stc
jo
add
or
int
std
cltd
add
pop
cltd
or
test
cld
xor
idivb
jbe
shl
and
lahf
adc
in
pop
cmp
cmp
std
repnz
dec
fwait
nop
pop
add
push
inc
movsl
lods
int3
push
add
into
fldl
fs
push
es
jne
push
pop
mov
inc
or
push
cmp
pop
add
popf
lods
sub
xchg
mov
mov
adc
xchg
push
call
ss
inc
pop
out
cmp
inc
test
mov
popa
pop
test
rclb
popa
shll
insb
jmp
mov
movsb
rorb
fcmovnu
xor
pop
pop
mov
inc
cmpsl
fwait
shrl
jl
xchg
and
add
dec
cmp
mov
mov
xor
push
jno
ret
sbb
push
gs
sub
xor
mov
nop
mov
pop
and
mov
mov
loopne
out
inc
subb
fs
cmp
negl
mov
out
adc
out
inc
adc
pop
das
jae
lret
cwtl
lret
cmp
repnz
mov
push
mov
mov
movl
test
and
jecxz
push
jecxz
and
mov
or
outsl
ss
inc
popf
cmp
fs
fadd
lcall
je
outsb
in
es
loop
les
xchg
jl
mov
fidivl
imul
xor
jmp
pop
push
jle
shll
les
out
push
mov
cmp
inc
mov
ja
out
sarb
adc
inc
push
or
leave
repz
sbb
cwtl
lods
movsb
into
xlat
mov
cmpl
sbb
shlb
pop
test
mov
mov
push
fldt
xlat
out
pop
mov
dec
push
int
or
push
jb
fistpl
stc
pop
xchg
insl
push
fwait
mov
das
test
sub
mov
push
loope
xchg
and
push
jle
movsl
stos
and
fs
cmp
cli
push
repnz
mov
sub
cmp
andl
sbb
shlb
dec
jecxz
test
jecxz
add
stos
out
xlat
orl
in
lcall
shr
pop
pop
jle
scas
mov
shll
push
inc
cmp
adc
cli
sub
mov
sbb
inc
and
adc
or
xlat
push
mov
fucomp
jb
mov
aam
mov
rcl
push
ljmp
push
inc
lods
mov
cltd
mov
xor
rcrb
mov
pushf
adc
sub
sbbb
push
in
jne
in
and
stos
movsl
imul
fs
imul
inc
rorl
aad
and
imul
aas
xbegin
in
out
cmc
jle
outsl
push
sti
xchg
cmc
ss
mov
pop
dec
movsb
mov
test
jns
xor
or
jmp
ja
sub
xlat
jle
test
fcoms
adc
movsb
jbe
jmp
xor
lahf
add
jb
mov
popf
clc
adc
xor
cli
in
adc
xor
fwait
mov
imul
cmc
add
int
fdivs
inc
push
or
add
jl
push
mov
cmp
jmp
cmp
adc
jb
out
mov
and
pop
sub
lahf
pusha
lods
xlat
inc
jns
fsub
arpl
outsl
add
mov
cltd
push
ret
jnp
sbb
cmpsb
inc
test
push
xor
mov
les
out
out
mov
mull
cmpsl
rcrl
jp
mov
iret
xchg
add
mov
dec
rorl
inc
dec
inc
iret
repz
dec
and
movsl
inc
add
xchg
in
xchg
inc
ljmp
pop
jle
jecxz
repnz
mov
out
sub
shr
lea
mov
dec
les
mov
sbb
mov
xor
decl
cmp
mov
inc
xchg
jns
bound
xor
insl
jno
scas
mov
mov
imul
dec
cmp
dec
loopw
jmp
xchg
and
mov
in
pop
sbb
sub
cmp
adc
ds
lock
nop
jg
push
data16
shlb
into
clc
iret
inc
adc
rclb
adc
add
xchg
jne
push
daa
leave
xchg
pop
lahf
inc
mov
push
es
or
pop
dec
push
dec
jecxz
xchg
in
sub
mov
lock
cli
repz
and
imulb
jge
aas
fmul
add
icebp
jecxz
pop
lahf
lahf
inc
and
push
adc
loopne
popa
popa
sahf
mov
xor
cmp
mov
rcrl
mov
pop
cmp
xchg
andb
push
sbb
jne
test
ss
jg
arpl
scas
loopne
fs
hlt
in
mov
jno
sbb
push
jno
dec
adc
shrb
sbb
inc
xchg
pushf
mov
mov
popf
adc
stc
pop
cwtl
insl
loopne
call
repz
mov
nop
shr
outsb
arpl
fimull
adc
cwtl
repnz
adc
xchg
lods
iret
adc
in
cmp
pop
stos
test
dec
add
dec
pusha
pop
cltd
mov
fisttps
sti
xchg
mov
push
fisttpll
ja
cmp
xchg
cmp
jge
mov
mov
lds
sbb
mov
jp
negb
jl
inc
jb
mov
xor
lret
and
test
ficompl
mov
cwtl
jecxz
push
xchg
sub
adc
pushf
jmp
sbb
cwtl
lcall
and
cmpsb
and
dec
in
dec
inc
jo
gs
mov
mov
pop
scas
ja
mov
in
dec
dec
pop
ja
push
xchg
bound
cmpsl
inc
cmpsl
xchg
jnp
jmp
xor
xor
sbb
jmp
leave
mov
or
mov
mov
cltd
push
movsl
lret
ror
cltd
movsb
stos
pusha
sub
es
or
fimull
outsl
adc
int3
fmull
push
xchg
pusha
jge
xchg
add
or
int
mov
gs
in
and
push
arpl
xchg
pop
sub
cmp
cmp
jne
xchg
add
arpl
daa
out
adc
mov
push
or
adc
mov
lods
mov
in
out
jmp
xchg
popl
outsl
es
jecxz
negb
pusha
xchg
sub
mov
stc
cli
mov
jb
xchg
daa
mov
cmp
int3
mov
out
popa
rcrb
mov
test
movsl
xchg
fcomip
adc
bound
inc
xchg
and
mov
cmp
add
shr
mov
and
hlt
lock
adc
js
xchg
data16
mov
xorl
cmp
inc
mov
aas
and
enter
sub
stos
mov
cltd
cmc
cmp
fstl
pop
push
fs
xlat
sahf
pop
jge
test
lret
rclb
sbb
and
outsl
rcr
pushf
pusha
pop
dec
fnstsw
cmc
repnz
sbb
mov
lahf
and
or
push
mov
pop
adc
aad
dec
and
fists
xchg
dec
and
insl
data16
mov
out
sbb
fs
pop
scas
hlt
in
or
je
cmp
sub
dec
mov
pop
inc
scas
call
mov
cmp
cmp
pop
cmp
xor
cmp
imul
inc
and
dec
sbb
pusha
sarl
push
xor
cwtl
xchg
hlt
push
pusha
jg
sub
stos
mov
cmp
into
xchg
jo
in
push
stos
filds
ljmp
push
sub
dec
cmp
sbb
jns
inc
outsb
outsb
mov
int3
arpl
ss
out
or
sub
repz
movsl
jo
shlb
sub
inc
mov
scas
call
jl
xchg
and
movb
dec
sahf
lock
mov
sbb
jmp
pusha
push
cmpsb
sub
and
idivl
push
sub
lods
lcall
nop
das
divl
xchg
xchg
rolb
xor
pop
xlat
xor
sbb
jmp
das
add
push
mov
pop
pop
cmp
and
lahf
jp
enter
aas
pop
cmp
cmpsw
add
sahf
imulb
cmp
nop
imul
nop
pushf
std
pop
pop
xlat
aaa
xor
or
cmp
leave
aam
mov
adc
dec
lods
faddl
jle
pop
fucom
roll
call
mov
cmp
push
in
fwait
add
xor
inc
mov
test
push
enter
lds
xchg
dec
shlb
jb
dec
add
lret
sahf
fs
push
leave
les
cld
dec
or
jge
xor
adc
dec
cltd
sbb
loop
or
sub
adc
ret
fsubp
pop
or
and
stc
out
popf
inc
mov
mov
mov
fwait
shll
test
out
ds
aad
push
cmpb
xchg
movsb
jmp
push
push
or
int3
dec
sahf
or
push
fcmovnbe
sub
xchg
popf
jecxz
loope
mov
outsb
jb
lds
loopne
fs
pushf
pop
fbld
add
mov
xor
adc
pop
sti
imul
imul
rorl
or
js
inc
sti
pop
cmp
jge
xlat
add
into
sbb
call
sahf
push
xor
xor
mov
mov
imul
inc
adc
cmpsl
mov
cmc
fstp
xchg
xchg
int
and
and
xchg
inc
out
in
roll
enter
or
icebp
fldcw
test
jle
movsl
nop
lahf
inc
imul
xchg
jae
gs
mov
lock
rcll
sub
test
cmp
fwait
cmp
dec
out
sbb
dec
mov
xchg
sti
add
xchg
imul
test
cld
in
and
jmp
sahf
outsl
popa
xlat
dec
xchg
or
pusha
jne
movsl
test
inc
pop
rcrb
out
lcall
cmp
iret
outsb
sbb
nop
or
pop
mov
add
xor
insb
inc
xchg
add
mull
jmp
push
sub
sub
xchg
and
adc
pop
fsubs
in
xchg
or
push
negb
jg
ds
add
dec
push
and
add
jmp
and
mov
insl
pop
out
scas
repnz
dec
decl
stos
xor
popf
add
scas
xor
stos
rorl
fldl
fdivrs
shll
push
and
data16
dec
lret
loop
adc
and
inc
inc
rcl
pop
mov
imul
push
loop
out
jb
push
jns
sti
mov
les
sbb
push
mov
sub
out
int
repnz
mov
sbb
mov
into
xchg
ret
out
insb
movsl
insl
cmpsl
jnp
sbb
fistl
and
cmp
jmp
mov
enter
jmp
aam
adc
cmpsb
dec
das
fdivrs
sbb
sti
fmuls
in
in
enter
addr16
imul
or
sbb
pop
sub
cmpsl
sbb
push
cmp
inc
cmp
lods
jne
loope
hlt
movsb
dec
add
xchg
cwtl
arpl
cli
popa
icebp
push
mov
sub
cs
fs
push
std
adc
je
das
adcb
dec
sub
fisttpl
add
call
or
in
fcmovnb
adc
loope
imul
and
mov
cli
in
roll
pop
cld
loope
mov
in
cmp
or
push
call
lret
mov
mov
dec
add
inc
mov
lcall
mov
fsubl
orb
sbb
inc
or
push
dec
mov
dec
ds
gs
ds
mov
mov
fdivl
dec
mov
test
dec
jbe
jae
xchg
movsl
fmuls
adc
outsb
jbe
cmp
add
and
mov
and
pop
adc
sbb
inc
lock
jecxz
pop
pop
pop
mov
add
lea
idivl
addr16
push
sub
aaa
inc
push
in
jl
mov
inc
sarb
push
iret
pushw
test
pusha
jge
xor
fadds
mov
leave
in
movsl
loope
adc
dec
das
sbb
pop
mov
stc
add
cltd
pusha
repz
fisttps
jae
shl
xor
les
add
adc
mov
in
test
sub
mov
pop
mov
add
sbbl
mov
dec
call
xor
xchg
xchg
adc
jecxz
xor
scas
push
out
add
mov
lcall
push
push
pushl
or
add
inc
add
adc
in
mov
inc
repnz
ds
xor
sbb
std
and
mov
mov
test
and
pushf
dec
push
push
xchg
fildl
pusha
mov
lahf
sbb
popl
scas
ljmp
imul
pop
jo
jne
shll
push
mov
mov
stos
cld
mov
mov
pop
enter
or
stos
sub
vpcomud
and
cli
sub
fstpt
fwait
pushf
jo
mov
sti
sub
cmp
into
call
mov
stc
loopne
stos
jl
std
jnp
sbb
mov
cmc
push
or
data16
xlat
divl
xor
dec
rclb
ja
mov
enter
mov
clc
sahf
rcll
ret
pop
mov
sub
lods
scas
add
scas
add
xchg
and
movhps
dec
and
pop
in
ret
xor
andb
pop
adc
lea
out
lret
popf
inc
out
out
std
push
clc
pushf
je
adc
mov
or
fidivl
mov
insl
popl
fnsave
mov
cltd
mov
xor
or
fsub
adc
emms
mov
cli
fwait
xor
xchg
adc
rclb
push
or
popf
lock
sbb
faddl
in
xchg
sub
jecxz
pop
inc
jg
fwait
ds
or
dec
popf
iret
jl
rorb
ja
jle
les
push
jb
dec
jecxz
dec
xchg
mov
fwait
jns
jae
sub
insb
sub
icebp
xchg
sub
dec
or
cmpsl
push
push
shrl
inc
xlat
and
lea
cmpsl
push
fisttpl
mov
stc
inc
scas
scas
push
jno
fisubrs
cmp
nop
cmp
dec
mov
leave
cmp
gs
adc
jns
push
mov
jmp
mov
push
jg
mov
add
cmpsb
xchg
and
jge
hlt
mov
repnz
movsb
out
aaa
cmp
push
fsubs
dec
or
into
xchg
pop
jbe
lcall
loope,pn
addr16
xchg
or
cmc
add
add
sbb
adc
cmpsb
dec
mov
xor
cld
sbb
inc
mov
rolb
add
lea
gs
sti
fldl
repnz
dec
mov
cli
nop
pshufw
icebp
daa
test
divb
push
stos
sub
jmp
sbb
and
icebp
push
xor
mov
lret
ljmp
pop
pop
ret
outsb
out
mov
push
pop
xor
inc
cs
jecxz
mov
and
inc
add
dec
pmulhw
xchg
sbb
mov
and
pop
out
dec
sub
mov
fwait
jno
leave
out
cmp
xor
addl
out
inc
jle
pop
data16
pop
xor
push
stos
jo
loopne
rclb
sahf
loope
xchg
leave
test
out
mov
inc
mov
gs
dec
adc
jle
xor
mov
flds
stos
jo
xor
test
arpl
fcoml
int3
and
lahf
inc
test
jecxz
mov
aas
mov
daa
insb
pop
jb
jecxz
std
adc
push
fidivs
xchg
sbb
pop
mov
clc
xor
pop
push
aaa
sbb
popa
add
into
inc
sbb
fidivrs
bound
ja
ds
mov
sub
cmp
imul
sub
mov
cwtl
pusha
sbb
or
sub
pop
jge
inc
fsubrp
sbb
repnz
dec
popa
leave
lret
pop
xor
sub
lods
push
out
inc
xor
sahf
dec
push
mov
aam
mov
into
popf
data16
sbb
ss
ret
adc
loop
pusha
scas
gs
daa
mov
add
jno
push
rcrb
test
sarb
rcrb
sub
push
cmp
xor
aad
mov
inc
shll
hlt
sbbb
lea
pop
inc
adc
jge
enter
aaa
sbb
aas
mov
fs
hlt
adc
std
clc
jbe
out
enter
jns
gs
inc
cld
xchg
imul
push
push
ret
rorl
push
xlat
jnp,pn
or
push
jl
clc
jns
cmp
pop
lret
mov
stos
inc
fistpll
inc
lock
dec
push
or
into
outsb
nop
jg
push
or
outsb
ss
test
mov
sbb
pop
pop
loope
adc
xchg
ja
cmp
test
cmc
jbe
adc
xor
cli
jbe
jnp
jne
push
outsl
addb
dec
sbb
mov
and
mov
fstl
cmp
stos
adc
subb
je
cmc
push
mov
ret
cmpsb
xor
sub
popa
fcoml
dec
into
int
loope
lea
popf
sbb
jo
insl
xchg
sbb
cld
dec
jl
dec
pusha
mov
scas
sub
push
aas
hlt
cmp
mov
popa
call
sub
cmpsb
pop
shlb
and
and
sbb
pop
cmp
scas
es
je
cmp
xchg
pop
pop
sbb
aad
div
in
cwtl
stc
sub
push
cltd
lods
push
fcmovnu
fnsave
call
rorb
xchg
jg
mov
pop
add
jns
daa
mov
pusha
mov
popf
addb
add
or
push
lock
and
mov
addr16
and
daa
sub
movb
adc
int
push
or
jle
sbb
les
aam
mov
gs
add
test
cmp
mov
clc
sarb
adc
in
pop
adc
js
jno
add
in
jecxz
cmp
incb
push
mov
dec
in
or
pop
and
pop
jne
jp
mov
int3
pop
jnp
insl
push
pushl
fldcw
cmp
lahf
pop
ja
ret
mov
movsl
repz
popf
movsb
mov
mov
mov
xor
lahf
jno
dec
leave
lods
sti
jae
or
fs
mov
je
jno
orl
insb
in
orb
dec
cmp
sbb
out
lahf
inc
xchg
add
xchg
push
jae
cmp
xchg
xor
push
cmp
stc
xor
adc
pop
xchg
jl
and
mov
mov
ds
xor
rclb
rorb
mov
mov
pop
in
ret
loope
lcall
pop
mov
stos
cs
icebp
loop
pop
sub
pop
push
into
mov
loopne
jno
scas
in
cltd
std
xor
data16
or
xchg
ja
fs
cmp
jbe
sbb
mov
mov
das
sbb
outsl
adc
dec
loop
sbb
xchg
jae
js
inc
outsb
enter
dec
nop
in
jecxz
in
or
pop
xchg
xchg
aaa
mov
dec
adc
jge
ja
xchg
lods
xchg
and
clc
dec
mov
cli
add
cltd
add
sub
adc
cmp
rcrl
outsb
shll
jge
pop
mov
fisubrs
jmp
enter
rorl
aas
jle
int3
push
cmp
out
pop
mov
sbb
int3
add
sub
jecxz
movsb
hlt
push
jns
ja
lods
aaa
pop
movsl
por
pop
dec
movsl
nop
popf
jne
fstl
inc
jne
push
mov
test
rol
call
iret
popf
and
xchg
leave
jae
jbe
fmull
mov
sbb
adc
fstl
jns
pop
xchg
orl
test
ret
push
push
mov
andl
xor
aad
jmp
dec
repnz
insb
inc
ret
loope
and
jl
out
gs
jb
out
inc
jmp
mov
and
and
hlt
xorb
adc
in
mov
add
mov
jmp
cmovbe
pop
in
inc
sbb
cmc
ljmp
jmp
and
mov
mov
pop
sub
cwtl
cwtl
lcall
inc
cmp
xchg
mov
jmp
lret
push
rorb
push
mov
adc
je
inc
mov
adc
push
push
js
jns
inc
pop
pop
cmp
mov
inc
mov
imul
fistpl
jmp
nop
fimuls
sub
pop
test
roll
xor
sbbb
push
or
out
es
in
repz
rclb
lret
test
icebp
dec
push
hlt
pop
push
aad
pop
inc
push
insb
jl
jb
mov
stos
xor
jnp
xchg
mov
fistps
adcb
mov
inc
test
cmpsb
iret
adc
adc
mov
or
sub
adc
pop
sbb
repnz
pop
cmp
mov
mov
and
pushf
mov
sub
jecxz
std
imul
push
cmp
sub
rolb
jae
dec
out
out
adc
scas
daa
add
inc
dec
mov
sub
adc
pop
cmp
xchg
sub
mull
mov
jp
lahf
adcl
pop
cmp
cmp
decl
dec
inc
pop
sub
pop
test
mov
cmp
test
ret
movsb
int
aas
mov
cs
pop
add
ja
daa
xor
fdiv
stos
clc
sbb
cmc
test
mov
adc
push
ret
repnz
movsl
fldl2t
fsubs
sti
ficomps
mov
mov
mov
sbb
lds
cmpsb
and
imull
push
push
mov
out
and
subb
repz
outsb
adc
sbb
sbb
sub
cmpsb
and
and
bound
fnsave
dec
cmc
lcall
inc
stos
add
int3
fcom
dec
mov
outsb
cld
lods
add
jb
lahf
stos
popa
ljmp
pop
or
cmpsb
pop
jnp
shufps
push
addr16
dec
xchg
rcrl
movsl
xchg
add
lret
lahf
jnp
cmpsl
outsb
xor
inc
xchg
enter
or
test
push
add
in
fstps
push
push
xlat
sti
and
adcb
fisttpll
cmp
or
push
pop
ret
cmp
sti
out
cmp
loopne
sbb
iret
ds
mov
mov
sub
sbb
pop
ret
pop
push
push
add
sub
ljmp
cmpsb
pop
lds
mov
sbb
mov
mull
mov
test
ds
scas
dec
sar
ss
mov
test
cld
xchg
movsl
fldt
jbe
aaa
push
mov
out
mov
adc
mov
addr16
fsubrs
int
push
ret
dec
imul
dec
int
xor
jecxz
jl
jge
out
ss
or
push
mov
inc
mov
jb
mov
lods
stos
stos
verr
fnsave
stos
loopne
stos
stos
xor
mov
loope
gs
mov
jecxz
or
adc
fcompl
frstor
lahf
xlat
inc
insl
push
aas
mov
pop
test
out
xor
into
sub
cmp
fs
mov
xchg
loopne
es
loope
sbbl
mov
outsb
dec
and
mov
jb
fwait
mov
and
push
push
pop
xchg
hlt
xchg
mov
or
js
mov
push
aam
pusha
imulb
xor
cmpsb
mov
stc
mov
push
test
and
scas
popa
mov
fwait
jl
push
clc
aad
cmpsl
repz
movsl
shlb
lods
inc
int3
and
arpl
hlt
add
pop
jb
sbb
outsl
jns
out
cmpsl
mov
aaa
lret
arpl
out
or
dec
push
pop
mov
fldenv
push
movsl
push
sub
mov
nop
stos
into
addr16
sub
repz
pop
stos
es
dec
test
js
je
test
rcrb
out
das
out
test
dec
mov
cmpsb
ja
adc
sub
imul
sbb
scas
jnp
fildl
mov
sbb
clc
lea
mov
hlt
cmp
rcr
mov
jmp
movsb
push
out
ja
dec
cmp
push
lods
inc
or
mov
or
andl
cmp
push
add
inc
imul
out
push
aam
mov
mov
adcb
into
push
mov
popf
ljmp
sbb
pop
cmp
push
leave
mov
movsl
inc
xor
inc
bound
cmp
sbb
push
faddp
jge
int
in
imul
cmp
call
adc
cli
cmpsb
fucom
in
sti
stos
aam
push
mov
out
xor
cmp
add
lret
fstpt
mov
ret
inc
roll
aas
ds
mov
xchg
popf
sti
mov
rorb
mov
lds
insl
popa
mov
outsb
xor
xorb
rolb
aad
rcll
aam
and
insb
ret
push
out
push
mov
mov
push
enter
mov
mov
cmp
movsb
mov
scas
in
sbb
lods
movsb
xor
scas
jb
pushf
mov
ret
out
mov
outsl
and
pop
mov
and
or
and
les
push
movzwl
jmp
gs
sbb
fs
sbb
inc
jno
and
xchg
lock
cli
les
scas
adcl
sbb
aad
cmpsb
pop
cmp
mov
mov
stos
push
stos
and
xchg
dec
and
test
dec
jle
or
subb
rorl
lret
jne
iret
aaa
out
xchg
or
dec
cmp
xor
sbb
mov
jg
xchg
lods
in
mov
insb
mov
cli
xchg
data16
push
loope
movsb
sahf
mov
repnz
rolb
stos
push
cmp
or
nop
and
bound
push
or
fcomi
xor
imul
cmp
clc
dec
in
pushl
jns
jl
xor
and
mov
test
outsb
shr
mov
xor
js
xor
lahf
out
push
ljmp
xchg
ss
adc
ss
adc
mov
adc
xorb
mov
das
and
xchg
cld
into
loop
sbb
add
add
aas
fnstcw
jno
sti
test
cli
fldenv
jb
mov
lock
and
je
flds
push
ss
enter
xor
in
jle
jo
ds
mov
outsb
mov
dec
jp
dec
out
mov
sbb
pop
xchg
fwait
xchg
popf
inc
xchg
enter
sahf
xchg
xchg
jmp
sub
push
or
sahf
scas
add
xchg
ljmp
dec
adc
mov
xchg
roll
dec
dec
fiadds
fwait
repnz
cli
ret
cld
cmp
in
inc
fwait
shl
out
test
adcl
fmull
add
mov
fisttpl
shl
jecxz
sbbl
cmc
xor
stc
mov
jmp
xor
lret
fstl
fadds
fisubrl
jg
mov
inc
leave
cmp
adc
push
xrelease
xrelease
mov
mov
and
scas
pop
jecxz
push
xchg
add
mov
stos
sbb
jg
mov
dec
cmovle
mov
sub
ds
rclb
cmp
jae
xchg
inc
xchg
cmp
xchg
pop
and
js
push
es
scas
pop
or
cmp
xorb
mov
add
addb
fcoms
push
inc
jne
cmp
or
jns
jbe
inc
and
outsb
pushf
xor
lods
les
cmp
adc
outsb
and
mov
pop
in
mov
jnp
jmp
push
out
jno
cs
lcall
lret
hlt
adc
and
sbb
enter
test
jmp
sbb
dec
push
mov
mov
push
push
lock
sbb
mov
test
fs
add
or
dec
xor
into
sub
sbb
mov
std
adc
pop
xchg
icebp
aaa
clc
or
mov
and
cmp
das
data16
pop
xchg
clc
inc
mov
lods
add
das
shll
aad
shll
mov
sub
add
mov
mov
loope
aaa
aaa
push
dec
pop
adc
into
repz
cmp
sub
dec
cmp
scas
lods
push
test
shl
cmpsb
jnp
dec
cmp
enter
xor
and
xchg
sub
js
jbe
repz
xchg
adc
lock
in
cltd
add
xorl
shrb
mov
mov
and
add
sti
testb
shll
idiv
inc
jb
mov
adc
mov
pop
imul
insl
inc
shrb
leave
std
mov
aaa
sub
push
push
fldcw
and
cld
stc
popf
mov
inc
mov
and
mov
inc
stos
adc
and
inc
orl
mov
dec
divb
jle
xchg
dec
pop
cltd
adc
mov
stc
dec
inc
call
cli
lods
aad
mov
and
pushf
daa
rcrl
add
inc
gs
jle
xchg
and
test
in
push
mov
xor
aad
ljmp
repnz
cmp
aaa
fdivrs
xor
loope
jno
inc
mov
pushf
fsubrs
mov
aaa
mov
in
sbb
xor
lea
sub
das
fsubr
aas
xor
ljmp
idivl
outsl
push
movsl
enter
jb
and
adc
cmp
out
pop
cmp
push
scas
in
inc
push
or
push
push
adc
pop
sbb
enter
int
pop
mov
shrl
mov
loop
orl
dec
mov
sbb
dec
movsl
call
hlt
push
push
in
arpl
pop
rorb
sbb
les
xorb
imull
hlt
jo
pusha
and
cmp
ja
fwait
gs
mov
movb
and
ret
push
and
xor
popw
out
sti
and
push
mov
cmp
fsts
pop
add
and
fisubl
fsubs
popf
add
out
lahf
and
cmpsb
ficoml
or
mov
dec
rcrb
outsb
mov
add
sub
inc
addb
cmp
mov
sbb
mov
popa
or
loop
push
add
mov
mov
adc
and
xor
jge
rolb
pushf
outsb
mov
adc
inc
mov
mov
sub
cmp
loop
xchg
push
arpl
cs
inc
icebp
mov
aad
pop
movsb
jg
es
jp
inc
pop
sub
std
xchg
jne
push
fwait
push
jnp
fstpl
sbb
push
pushf
lahf
and
inc
test
jae
ss
sub
notl
incb
dec
xor
jl
adc
push
jge
lahf
push
sub
icebp
aaa
lcall
jnp
sub
aam
xor
gs
mov
adc
out
inc
sbb
dec
or
pop
mov
shll
lret
and
push
repz
shll
imul
fcomps
dec
scas
sbb
sub
pushl
test
xor
push
outsl
stos
xor
mov
pop
js
push
dec
sbb
xor
mov
mov
mov
add
or
pop
mov
push
aad
or
add
daa
push
into
mov
mov
inc
addl
inc
leave
fs
pop
sub
xlat
mov
sarl
insl
mov
push
test
gs
setne
cmp
movsl
sub
in
neg
fistpl
push
fucom
shlb
sbb
roll
push
or
lahf
jns
cmp
insb
lods
rol
ljmp
out
pusha
lea
dec
sub
mov
mov
test
sarb
dec
push
test
adc
rclb
push
and
mov
mov
cmp
pop
jge
add
sbb
mulb
mov
jp
add
int
push
imul
lods
pop
jg
mov
pop
cmpsb
pushf
pusha
dec
xchg
mov
sbb
dec
sbb
fs
sbb
inc
mov
pop
dec
loopne
aad
xchg
fs
or
and
loop
push
add
lods
pop
dec
add
in
scas
mov
loop
bound
out
sbb
jmp
xchg
nop
and
jle
stos
in
and
shll
stos
dec
sbb
push
mov
insb
ss
pop
xchg
popf
pushf
jle
jns
push
jg
xor
insb
mov
pop
ljmp
fnstsw
mov
insb
cwtl
push
jns
stos
mov
mov
fistl
cmp
fdivr
adc
ds
and
adc
pop
mov
add
rorl
call
mov
pop
sub
mov
fmull
subb
daa
inc
add
cwtl
roll
sbb
mov
inc
testl
mov
pop
stos
out
inc
mov
cmp
ret
aas
dec
or
aam
lret
cmpsl
add
lods
rcr
mov
xchg
out
cwtl
movsl
push
fsubrl
lea
icebp
into
push
in
mov
inc
jns
repnz
stos
out
mov
cmpsb
cmp
add
shll
inc
cltd
dec
lods
aad
pop
pop
aaa
gs
push
sub
movsw
addr16
shrb
lods
je,pn
xor
fldenv
fmulp
cwtl
das
xor
or
pushf
push
fistl
and
outsl
cmpsl
dec
sub
jmp
insl
add
fmuls
sti
loope
mov
outsb
fbstp
clc
test
repz
dec
repnz
xor
adc
jg
out
mov
and
stos
or
out
xchg
push
push
bound
sbb
sbb
push
dec
mov
cmp
xchg
xchg
lcall
stos
inc
and
lcall
ljmp
lret
and
pop
and
push
loopne
sahf
aas
inc
jge
test
repnz
push
sti
xor
jnp
outsb
inc
jp
mov
and
rcr
xchg
pop
ja
dec
clc
test
hlt
lods
std
jbe
test
dec
inc
jmp
daa
pop
test
jne
xchg
mov
mov
pop
and
out
mov
xor
fnstenv
pop
cmp
loope
and
mull
or
in
sub
push
cli
inc
fwait
loopne
outsl
xor
sbb
neg
mov
in
int3
or
pop
lret
jb
ret
mov
cwtl
jge
popf
stos
add
mov
stos
fnstsw
sub
pop
lea
call
test
xchg
lods
loopne
mov
loopne
xor
push
shll
stc
mov
loop
in
pop
in
xor
loopne
arpl
and
pop
sub
imulb
or
push
sahf
mov
mov
mul
mov
dec
pop
xor
cmc
xor
mov
rorb
mov
cmpsl
mov
fsubs
test
in
iret
test
mov
jnp
mov
movsl
mov
