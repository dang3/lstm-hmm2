push
mov
sub
push
push
push
mov
mov
mov
rcr
rcl
mov
push
neg
lea
rcl
lea
xor
mov
mov
mov
xor
neg
xor
ret
lea
rcl
mov
lea
and
rol
ror
lea
mov
rcl
add
ror
ror
ror
rcl
xor
mov
lea
mov
shr
neg
mov
mov
lea
shr
call
shr
rcr
mov
mov
lea
rcl
xor
adc
not
neg
xor
mov
mov
neg
xor
xor
shr
mov
mov
not
shr
call
adc
shl
mov
xor
not
mov
shr
shl
xor
not
mov
and
mov
mov
not
mov
add
neg
adc
mov
push
add
lea
add
and
mov
xor
neg
lea
push
mov
add
lea
not
mov
lea
mov
call
push
add
xor
mov
and
pop
mov
and
and
mov
shr
and
and
mov
neg
mov
lea
mov
neg
lea
adc
rcr
neg
xor
not
xchg
xor
xchg
xor
lea
adc
cmp
je
ror
adc
mov
or
je
add
rcr
lea
xor
lea
not
lea
xor
xor
rcr
xor
mov
mov
mov
lea
xor
mov
xor
xor
mov
shl
mov
mov
mov
xchg
mov
adc
mov
lea
neg
mov
neg
xor
adc
xor
xor
mov
neg
not
mov
adc
mov
rcr
mov
mov
mov
xchg
xchg
xor
mov
not
lea
not
mov
mov
and
mov
lea
mov
xor
not
xchg
cmp
je
xor
xor
adc
xor
add
mov
not
xor
mov
xor
and
and
xor
add
mov
xor
and
push
call
lea
lea
ror
mov
mov
xor
rcr
mov
rcl
mov
xor
xchg
not
rcr
mov
shr
lea
rol
xor
mov
and
mov
shr
not
add
and
mov
adc
movl
lea
lea
adc
mov
movl
mov
xor
xchg
lea
mov
xor
add
adc
lea
lea
add
not
rcr
xchg
not
lea
lea
mov
not
mov
xor
xor
lea
lea
xor
push
xor
mov
shr
lea
add
lea
mov
push
mov
xor
mov
xor
lea
pushl
mov
rol
adc
add
neg
pushl
xor
mov
xor
neg
mov
neg
lea
xor
mov
call
lea
not
shr
mov
shr
xor
neg
mov
xor
xor
mov
mov
rcl
ror
rcl
neg
adc
not
add
mov
rcr
neg
xor
shr
xor
shrl
lea
lea
ror
not
mov
xor
rcl
lea
mov
neg
not
xchg
lea
mov
mov
lea
xchg
mov
mov
xor
mov
add
rol
and
rcr
mov
xor
mov
push
mov
lea
mov
adc
xchg
xor
mov
xchg
not
shl
add
add
shr
xor
mov
xor
mov
rcl
mov
mov
neg
adc
and
neg
popl
xor
neg
lea
adc
add
lea
mov
xor
xor
shl
rol
xor
adc
mov
mov
xor
xor
mov
ror
decl
jne
add
lea
add
neg
neg
neg
xchg
lea
mov
mov
not
mov
lea
and
not
xchg
rcl
neg
lea
rcl
mov
xchg
shr
neg
and
xor
xor
mov
neg
mov
and
mov
xor
and
jmp
xor
mov
shl
xchg
mov
mov
neg
mov
xor
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
fsub
shr
cmpl
add
sarb
rcl
jae
fisubrs
in
leave
sbb
aad
sbb
int3
rclb
sarl
push
add
push
jns
inc
xor
notb
mov
insb
dec
xor
sub
leave
xor
push
push
mov
lcall
pop
cmc
hlt
push
xor
lahf
fcmovbe
rorl
fucom
jecxz
xchg
push
mov
sbb
or
adc
adc
decb
cmpl
or
sbb
jne
adc
cmpl
in
xchg
test
cmp
sarb
into
fiadds
mov
insb
mov
out
jne
cmp
into
mov
shll
mov
ret
sbb
push
lret
add
add
js
loope
xor
inc
out
jl
mov
inc
rcrl
push
imul
or
push
enter
in
xor
fsub
cmpl
cmp
pop
sub
out
jl
adc
mov
cmp
daa
add
cmp
out
jecxz
insb
invd
adc
xor
sub
daa
or
jmp
mov
sub
imul
add
push
inc
add
mov
push
add
dec
insb
cmp
push
int
into
mov
insb
adc
sbb
adcl
push
push
insl
dec
nop
jb
pop
adc
fsub
mov
icebp
das
cmpl
add
mov
incl
les
ret
mov
sbb
dec
xor
jo
inc
call
xchg
cmovne
cli
icebp
in
jl
out
dec
push
cld
jl
imul
nop
gs
stos
xor
lahf
fcmovbe
rorl
jecxz
pop
or
fstpl
add
push
call
add
lahf
loope
ret
mov
sbb
xorb
and
mov
pop
imul
sbb
mov
or
out
jl
pop
decl
or
sbb
mov
push
sti
andb
pop
xchg
cmpb
mov
lahf
pop
add
and
mov
out
mov
mov
sbb
jl
add
ret
mov
insl
mov
jl
nop
inc
ja
xchg
sbb
xorl
push
aam
mov
sbbb
or
push
imul
pop
mov
mov
insb
or
in
mov
jo
xchg
cmp
lea
jle
mov
pop
adc
or
in
add
xchg
xlat
rcrl
bnd
jbe
shll
insb
test
out
or
adc
xor
mov
out
ljmp
xchg
mov
mov
xchg
ja
mov
adc
std
mov
dec
mov
pop
cmp
mov
rol
push
sub
jo
xchg
dec
xchg
xor
or
or
jle
dec
mov
sub
out
ja
test
jle
out
or
sbb
sbbl
sbb
sbb
cmpl
or
dec
add
mov
imul
lahf
mov
or
cld
jl
fnstenv
in
jno
jp,pt
jmp
inc
out
or
js
xor
or
sbb
add
scas
mov
pop
mov
jmp
inc
mov
pop
push
shr
jno
pushf
shr
repnz
out
fsts
repnz
js
call
or
adc
fadds
dec
mov
jp
or
cmpb
sbb
cmpl
add
sbb
add
mov
dec
xchg
lock
cli
and
push
jg
in
sbb
divl
sbb
xchg
cmp
or
adc
add
sbb
cmpl
cmp
rorl
sbbl
xor
add
cmc
sbb
pop
rcl
pop
imul
in
jl
push
pop
test
xchg
sti
sub
and
xchg
sbb
xorl
or
add
or
add
xor
mov
push
cs
ja
mov
sbb
inc
insb
or
call
cmpl
inc
xor
or
adc
shll
and
into
in
mov
xchg
sbb
xor
or
sbb
roll
mov
cmpsb
push
jle
jl
push
cmp
sub
add
mov
cwtl
mov
inc
scas
fcomip
mov
sbb
xor
or
shll
mov
fdivrl
out
cmp
inc
in
movsb
push
ja
fnstcw
into
inc
fwait
ljmp
outsb
in
fistpll
xor
daa
iret
lcall
add
inc
inc
pop
pop
push
pop
xchg
pop
adc
xor
fwait
call
inc
xchg
push
mov
lret
stos
aaa
mov
sub
xchg
loopne
or
cltd
dec
dec
xchg
cmp
push
rorl
pop
aaa
sbb
xor
inc
insl
int3
shrb
or
add
jle
addl
or
push
pushf
pop
jg
stos
dec
pop
mov
mov
sub
adc
cltd
mov
pusha
add
imul
push
push
pop
mov
insl
data16
pop
xor
sbb
arpl
fbld
neg
or
mov
sti
xor
or
mov
xchg
sub
test
mov
xor
test
lret
mov
pop
lcallw
mov
adc
mov
popf
int3
pushf
and
test
push
cmpxchg
pop
mov
mov
sarl
jecxz
outsl
out
pushl
inc
add
sub
addr16
jmp
jbe
enter
mov
push
imul
inc
std
cmp
cld
fcmove
sbb
into
mov
xchg
inc
pop
pop
or
cmp
pop
js
jmp
jg
daa
adc
mov
lcall
sbb
test
outsb
out
ret
fwait
lea
dec
xor
xchg
add
or
loopne
fsubr
sub
mov
or
into
inc
jo
fwait
insl
jl
sbb
or
mov
mov
rolb
inc
xor
xchg
add
fxch
or
adc
mov
jns
add
movl
inc
iret
add
mov
ret
clc
inc
and
mov
pop
cmpsl
mov
sub
testl
xchg
repz
aaa
or
rcrl
add
subb
push
lret
or
test
insb
repnz
sbb
idivl
xlat
fidivrl
lret
lods
out
mov
pop
sbb
lcall
inc
mov
sub
mov
aad
or
mov
int
out
pop
inc
mov
jle
stos
jbe
subb
punpckhbw
aam
mov
inc
xchg
mov
movsl
repz
jne
fwait
dec
data16
lahf
cmp
xchg
xchg
push
nop
push
out
push
fildll
mov
out
or
sbb
outsb
jmp
push
fisttpll
or
in
stos
mov
sub
aam
sbb
mov
mov
repnz
pop
arpl
insb
packssdw
fiaddl
jg
and
iret
jge
scas
imul
pushl
daa
or
movsb
pop
mov
pop
ss
add
xor
call
test
xor
test
jns
int3
jns
ret
push
xchg
push
repz
xchg
mulb
add
scas
adc
adc
aaa
push
aas
dec
test
mov
and
mov
dec
imul
cmp
mov
out
push
push
in
fisubl
jns
loope
mov
sub
adc
push
dec
cmp
scas
sub
dec
mov
inc
xchg
pop
or
mov
in
adc
cs
xchg
iret
inc
jge
xchg
jb
mov
jno
mov
std
xor
cmp
scas
push
sbb
ds
mov
add
add
sbb
sbb
call
jg
aaa
and
cs
nop
or
stos
das
rorb
shlb
inc
sub
inc
arpl
popf
inc
bound
or
and
test
leave
je
dec
and
popf
adc
and
sbb
shlb
sbb
mov
fisttpll
jae
push
dec
xchg
jnp
rcrl
and
rclb
ret
mov
or
or
mov
add
mov
push
pop
mov
or
aaa
cmp
xchg
std
jge
and
mov
pop
stos
orl
and
aas
or
pop
stos
repz
lods
cwtl
imul
fxch
adc
mov
jmp
mov
adc
std
jne
lea
popf
in
mov
icebp
andb
push
imul
pop
cmp
inc
mov
and
adc
xlat
sub
jecxz
arpl
inc
dec
ja
add
push
push
mov
rcrl
xor
shl
xchg
or
push
mov
rcrb
dec
pushf
xor
bound
orb
inc
popa
mov
rcr
ret
dec
pop
dec
xor
insb
xor
mov
ror
add
iret
and
lcall
imul
cmp
xchg
addr16
jb
lcall
aaa
xchg
add
insl
aam
sub
or
and
add
mov
out
add
fidivs
inc
imul
repnz
aas
and
jecxz
pop
lods
xor
pop
sub
aad
mov
lods
or
mov
ret
adc
add
leave
int
mov
outsl
xchg
inc
arpl
xchg
std
mov
pop
idivl
dec
and
xor
add
pop
mov
cmp
in
or
loop
leave
xor
sub
xorb
cwtl
dec
fwait
jnp
and
out
aam
pushf
jmp
sub
pop
push
js
ss
mov
jae
mov
aaa
mov
imul
mov
loop
test
out
or
fs
es
cmp
inc
jnp
sbb
dec
in
push
stos
jnp
jge
mov
insb
mov
bound
jnp
lahf
mov
test
sbb
or
cmc
rorl
test
sbb
cmp
imul
lret
or
adc
or
push
fbstp
pop
sbb
dec
in
inc
adc
xchg
dec
stc
div
mov
sbb
sbb
jecxz
and
dec
leave
cld
insb
jmp
gs
fcompp
xor
xchg
out
pop
ja
jmp
cmp
ja
sbb
rorb
mov
adc
inc
jnp
dec
push
imul
cmpsb
loopne
and
imul
xor
sub
xor
out
cltd
lods
dec
test
ss
inc
stc
adc
aaa
icebp
pop
fsubrp
mov
sbb
lret
dec
ret
sub
or
imul
in
push
rolb
mov
iret
dec
pop
jp
cmp
sar
push
add
inc
inc
xchg
fldt
jne
adc
push
or
pop
inc
stos
dec
adc
out
dec
sbb
in
xorl
lds
ja
mov
push
callw
imul
daa
lahf
or
mov
sbb
incl
repnz
lds
xchg
mov
fs
mov
daa
mov
dec
adc
cmp
fisttps
fwait
aaa
pop
arpl
inc
pop
and
out
add
sarl
xchg
or
add
es
pop
addb
xchg
add
mov
movsb
add
lods
repz
cli
dec
push
fucomi
dec
jg
mov
cmpsl
xor
adc
mov
pop
jmp
xor
daa
test
dec
cmpsl
addb
movsl
mov
or
lahf
push
mov
inc
xchg
repz
xchg
iret
andps
mov
lcall
sbb
mov
nop
ficoms
lcall
pcmpeqw
cltd
xor
fsub
adc
sub
mov
sbb
and
fistpl
mov
cwtl
pop
mov
xchg
in
mov
dec
inc
xor
sbb
push
mov
fnstenv
jbe
lods
test
dec
hlt
push
jno,pt
outsb
cmp
fwait
pop
push
adc
mov
cld
xlat
cli
std
sbb
adc
addb
pop
inc
out
fsts
push
sahf
fucomp
xchg
xchg
bound
ss
xlat
or
scas
out
cmpsb
cmp
inc
shlb
sub
or
adc
pop
imul
pop
inc
jge
sbb
inc
dec
rolb
push
cmp
rclb
dec
and
xchg
ljmp
mov
mov
adc
sti
add
in
mov
push
sbb
mov
xchg
std
int
mov
mov
or
jno
movsl
push
dec
jne
xor
js
push
mov
shll
dec
in
imul
js
lea
add
lcall
icebp
jae
inc
lret
lcall
pushf
clc
fwait
nop
sbb
cmp
pop
mov
sbb
or
nop
xchg
into
dec
rorl
cmp
popf
imul
push
in
adc
mov
fnstsw
adc
subl
imul
inc
daa
ja
push
add
jnp
jmp
jo
and
shrl
lret
mov
rol
dec
mov
xchg
inc
xchg
xchg
xchg
xchg
jne
mov
or
mov
lahf
inc
and
flds
mov
pop
jg
or
sahf
stc
push
push
loopne
or
andb
nop
mov
cli
xchg
or
mov
aaa
shll
mov
jnp
aad
repnz
and
jnp
add
inc
pop
pop
popf
cmp
cmp
push
push
je
pop
xchg
mov
sbb
and
scas
jnp
sbb
hlt
sub
pop
pusha
cltd
dec
sti
aad
fmuls
push
sbb
mov
mov
out
mov
std
out
dec
icebp
scas
or
cmp
in
xchg
mov
sub
sbb
push
adc
mov
mov
dec
jne
xchg
enter
pop
jmp
pop
pop
fmulp
sahf
pop
and
xor
dec
push
sbb
cmpsl
jae
or
adc
xchg
cs
add
dec
pop
sahf
call
ret
xor
xchg
sub
sub
xor
lahf
outsl
cmp
push
hlt
mov
ret
or
lret
int
inc
movsb
mov
mov
push
fs
adc
sahf
ljmp
popf
out
mov
fisttpll
loope
pop
nop
sbb
push
push
shll
sbbl
or
jmp
xchg
mov
jle
add
mov
and
ja
push
call
addr16
adc
lahf
addr16
std
aas
pop
jecxz
stos
sbb
hlt
test
push
cld
mov
sbb
dec
fs
sbb
test
out
dec
push
adc
hlt
mov
rolb
in
rcr
push
mov
fisubl
cmp
cltd
data16
mov
add
xor
popf
xchg
push
xchg
jge
and
mov
lahf
inc
cmc
and
xor
test
mov
aas
cltd
inc
pop
shll
and
pop
push
mov
ss
je
imul
mov
int
les
mov
sub
lods
jnp
mov
jg
mov
pop
xchg
cmp
test
sbb
jp
or
sbb
dec
push
add
jbe
mov
stos
roll
add
imul
daa
pop
sub
cmpsl
mov
fs
jo
fmull
adc
inc
fwait
adc
mov
push
fcompl
pop
addr16
icebp
add
and
divl
add
jl
call
sub
sub
xor
sbb
xor
aam
cmpsl
push
rorl
scas
pushf
repz
pop
add
mov
lahf
pop
enter
mov
jmp
std
mov
mull
dec
adc
jg
fwait
cwtl
push
movsb
daa
mov
mov
xor
or
loopne
mov
js
mov
or
and
push
mov
sub
and
notb
ja
outsb
sbb
mov
sub
out
test
lret
sbb
scas
notl
lcall
inc
mov
and
iret
cmp
xchg
inc
fcmove
push
and
mov
pop
fcmovb
pushf
arpl
cmp
pop
push
pop
inc
cli
inc
mov
shl
clc
sahf
or
ficompl
inc
sahf
xchg
add
adc
sub
out
pop
push
int3
or
adc
sbb
imul
dec
dec
push
sti
push
push
dec
jp
adc
mov
cs
sub
add
xchg
lcall
std
jno
adc
adc
sub
mov
jecxz
xor
push
pop
nop
adc
cmpsb
pop
rcrb
add
xchg
pop
cltd
mov
insl
sbb
sub
rclb
popf
test
mov
push
addr16
notl
pop
popf
xchg
cltd
inc
jg
pop
mov
stos
adc
push
adc
or
lea
adc
fisubs
repz
stc
jge
mov
cmp
xor
inc
xor
rcll
xor
ja
movsl
xchg
inc
jge
inc
pushf
sti
js
xor
ret
mov
arpl
mov
repnz
push
mov
insb
sbb
popf
sub
mov
add
sub
push
push
sahf
loop
inc
mov
mov
repz
mov
out
jg
cmp
push
lahf
in
pop
xchg
loope
xor
sub
lahf
adc
pop
mov
ds
in
pushl
fs
dec
insb
test
ret
mov
lret
test
leave
mov
scas
lret
ret
mov
in
push
mov
das
cmp
neg
mov
pop
mov
sub
lods
stos
inc
jle
in
mov
push
or
mov
and
imul
dec
mov
imul
xor
add
arpl
mov
fwait
jno
sahf
cmp
aam
xor
add
push
test
xchg
ljmp
add
sub
repnz
dec
subl
repz
push
adc
repnz
rcr
mov
rol
xlat
ja
or
loop
js
js
dec
lods
mov
icebp
xchg
lock
lds
aad
inc
jle
add
mov
cli
movsl
arpl
xchg
push
xchg
adc
in
push
andb
dec
or
fwait
sbb
mov
cmp
push
mov
out
jge
lds
inc
xor
or
cwtl
jb
push
mov
xchg
fimull
repz
xlat
cld
sub
xchg
dec
push
mov
mov
sbb
dec
lods
adc
or
loopne
rcrl
lret
inc
lret
ud2
inc
mov
mov
push
and
inc
popa
into
and
mov
lahf
push
lods
call
mov
nop
push
pop
outsl
mov
push
mov
inc
pop
xor
fnstsw
xchg
mov
mov
cltd
mov
jo
xchg
push
hlt
paddw
ds
sbb
out
pop
or
shlb
jp
mov
cmp
andb
cmp
inc
std
xor
jbe
mov
pop
adc
adc
dec
add
rorl
mov
jnp
mov
mov
inc
imul
xchg
xor
rcr
sbb
inc
andnps
mov
xchg
scas
inc
cmp
ss
adc
pop
jns
decb
add
cld
ja
inc
shrb
addr16
les
sar
in
mov
call
pop
int
xchg
sbb
nop
repnz
aam
pop
lcall
imull
sub
add
fildll
les
inc
xor
add
and
sbb
add
mov
adc
divl
and
icebp
push
mov
or
rol
dec
sbb
xor
cmp
sub
fcmovnu
mov
mov
pop
xor
xchg
push
stos
mov
les
jp
jle
retw
pop
ret
inc
push
mov
nop
xor
push
jo
aad
les
mov
push
dec
xchg
popf
push
add
push
sahf
stos
mov
dec
fiadds
repz
xchg
imulb
nop
xchg
jge
arpl
adc
test
fisubrl
or
jge
aaa
xchg
in
in
sub
and
mov
inc
push
mov
add
cmp
sahf
mov
sbb
dec
jp
daa
cmp
cltd
call
shlb
pop
sbbb
inc
sbb
out
sti
adc
mov
xchg
rolb
leave
sbb
imul
adc
sub
insb
adc
mov
jmp
faddl
jecxz
lock
insl
sbb
xor
push
out
test
popf
rcl
jg
jo
fs
out
dec
sub
mov
in
ret
cmp
or
mov
adc
rorl
xchg
cmp
shll
mov
out
push
insb
sbb
into
aaa
mov
cmp
push
mov
cmp
test
cld
xor
xor
pop
jb
xchg
stc
les
cwtl
pop
ja
cmp
sets
faddl
inc
roll
xchg
cwtl
in
or
sub
pop
pop
xchg
addr16
sti
ss
sub
stos
orl
xor
popl
pop
jl
sub
out
movsl
clc
xchg
and
sub
sub
cmpb
mov
cs
shrb
fisttpll
lds
mov
xor
inc
push
cmp
cltd
xchg
stos
rolb
jecxz
xchg
cmp
mov
rolb
cmove
and
std
or
or
bound
jecxz
and
xor
xor
mov
es
mov
mov
cmp
mov
dec
or
sub
loope
cli
inc
or
sub
add
mov
pop
insb
int3
add
les
lods
mov
mov
push
je
lret
xchg
mov
mov
ret
sub
cwtl
fcmovu
pop
loope
aas
push
in
pop
cmp
push
dec
fs
mov
xchg
jl
sbb
movsl
xor
jl
mov
push
notl
mov
or
sahf
xor
insb
test
lcall
inc
xchg
mov
lods
daa
sarl
xchg
xor
sbb
bound
sub
cmp
repz
dec
adc
or
lret
gs
cmp
dec
sbb
sbb
lahf
jno
mov
in
inc
mov
dec
or
das
cmp
out
std
mov
sbb
inc
pop
pop
imul
lahf
sarl
out
sbb
test
cwtl
adc
lcall
enter
inc
adc
jg
es
loopne
int
push
adc
in
adc
push
jecxz
push
cli
mov
push
lock
ret
cs
mov
stos
and
adc
cld
mov
shll
frstor
cmpsb
sti
xor
cmp
mov
mov
xor
xchg
inc
mov
adc
cwtl
addb
add
addr16
clc
mov
sarl
pop
adc
and
push
clc
jge
es
push
arpl
or
int
and
cli
sbb
fwait
lock
push
sbb
mov
inc
cmpsl
dec
jae
xchg
fdivl
movsl
ret
nop
cld
fs
sub
jp
mov
fnstcw
pop
sub
popa
scas
or
adc
mov
cmp
dec
adc
aaa
xchg
loope
int
lahf
inc
ljmp
mov
das
sbb
xchg
jp
xor
fistpll
cmpsb
fidivl
lret
cmp
test
xor
cmp
jge
test
xor
sbbl
and
mov
adc
in
scas
test
cmp
aam
add
push
nop
cltd
push
inc
or
pop
shlb
push
jae
fstpt
inc
pop
insb
hlt
movsl
push
cld
push
cs
push
mov
sbb
push
cmpsb
sahf
pop
add
mov
inc
pop
mov
pop
inc
lds
fs
and
mov
pushf
jg
je
addr16
add
xor
sub
mov
jg
sub
mov
add
es
fstpl
sub
shrb
and
cmp
dec
popa
lret
mov
call
jmp
add
daa
cld
popa
pop
dec
xchg
call
stc
dec
mov
iret
ss
fisubl
cmp
aam
sbb
lds
push
push
sub
mov
dec
in
cwtl
inc
in
xor
pop
movsb
js
int
out
punpckhdq
insl
xchg
jns
jle
push
fsub
imul
xchg
jg
ret
pop
flds
jne
popf
cs
stc
push
mov
mov
jp
inc
mov
sti
cli
repz
mov
out
aaa
rclb
cli
xchg
out
loop
or
and
dec
xor
mov
mov
lock
daa
dec
inc
roll
xor
fwait
pop
andb
add
push
outsb
loop
mov
mov
cwtl
mov
mov
rcrl
push
jg
fsubs
popf
ja
fmuls
in
mov
inc
popf
imul
cmp
popa
adcl
addr16
iret
sbb
adc
popl
in
sbb
cltd
test
daa
push
fs
sbb
xchg
push
cmpsl
xchg
pop
stos
cwtl
xchg
inc
cmp
jnp
sbb
adc
rol
fidivrs
bnd
repnz
cmpsl
cmpsl
pop
pusha
mov
stc
out
sbb
mov
mov
repz
cmp
mov
stos
scas
jbe
inc
pop
fcompl
cmp
xchg
adc
mov
in
and
pop
or
mov
mov
inc
shrb
fsts
fsubrl
add
pop
inc
xchg
push
push
shlb
shl
shl
insb
sub
mov
jne
dec
push
sub
or
call
rolb
dec
in
jmp
sbb
shrl
stos
dec
fldt
xor
cmp
inc
xchg
stos
repnz
jp
pop
or
fmul
sub
mov
shr
or
dec
mov
lahf
adc
push
and
xor
jge
hlt
aam
xchg
nop
imul
arpl
scas
andb
mov
fsubr
jmp
push
sbb
dec
adc
mov
pop
mov
mov
mov
xor
inc
lahf
fdiv
mov
psubq
sub
xorl
ret
push
sbb
pop
lods
pop
fwait
and
lret
push
ret
stc
ja
cmc
mov
and
push
nop
or
pop
pop
lsl
jg
enter
adc
sub
cmpsl
sti
sbb
sub
jae
or
mov
add
popa
js
mov
clc
mov
xlat
test
jne
mov
cld
xchg
pop
push
adc
cmpsl
push
pop
jmp
or
lds
mov
cmp
push
imul
dec
mov
jae
lods
fcomip
scas
inc
push
lcall
mov
xchg
mov
mov
sbb
in
xor
sub
loope
mov
cmpl
test
ret
in
cltd
ret
lds
testb
lods
inc
push
mov
insl
insl
push
xor
sbb
lcall
int
mov
and
xorb
adc
pop
inc
pop
fstl
repz
mov
cld
mov
sbb
insb
sbb
ret
leave
cmpsb
into
cld
jno
xchg
and
push
popf
jae
rclb
movsb
mov
push
sub
jle
sbb
pop
rep
loop
add
popa
rcl
mov
lods
pop
loop
pop
div
loope
movsl
stos
popf
xchg
fwait
inc
sbbl
ja
jbe
push
shrl
cmp
pop
lcall
repnz
fdivrs
xchg
inc
mov
sbb
jecxz
cmp
test
leave
aam
mov
push
and
mov
in
in
push
rorb
mov
dec
scas
lret
int3
mov
int
and
mov
leave
jge
stos
into
lods
fincstp
jo
outsb
out
sbb
ljmp
incl
jo
test
je
in
and
or
pop
aas
mov
out
cmp
mov
fildll
or
or
das
or
in
orl
push
mov
jbe
loop
fsubs
dec
mov
lahf
test
jge
das
aas
outsl
dec
movsb
jecxz
add
mov
jns
inc
push
movaps
pusha
pop
mov
cmpsb
iret
lds
ds
sbb
inc
sbb
movsl
cmpsb
push
hlt
push
adc
or
stc
sbb
stos
out
mov
sbb
mov
dec
push
jmp
bound
stos
sbb
push
add
xchg
xchg
test
mov
jmp
popaw
movsb
mov
inc
mov
dec
jg
cmp
xor
popf
fldenv
aas
xchg
ss
sti
cltd
jmp
add
xchg
cmp
jge
imul
push
lock
cs
dec
frstor
cmpsb
mov
mov
inc
mov
lods
or
arpl
adc
aaa
adc
mov
rclb
imul
not
sbb
mov
test
cwtl
fcomip
xor
pop
xorb
and
mov
adc
jnp
icebp
cmp
or
lret
xlat
and
test
dec
mov
ja
lods
adc
mov
bound
sub
or
push
adc
dec
stos
aam
mov
inc
loope
mov
rcll
popf
stos
popf
push
andl
pop
push
nop
mov
stos
and
lret
or
xor
fiadds
sbb
loop
dec
xchg
pop
jnp
jp
cmp
and
cmp
add
xchg
add
stc
jne
ja
fsubr
xor
jmp
sub
pusha
mov
cmp
sbb
xor
add
xor
push
in
icebp
inc
arpl
out
popf
push
ret
push
adc
xchg
daa
stos
ja
cltd
rcl
sbb
and
cmp
mov
test
shll
decb
lock
xor
xchg
popa
cli
stos
push
add
mov
push
jo
jmp
stos
fistpll
call
pop
rorl
ljmp
and
inc
dec
mov
lods
jge
rcll
lcall
jae
sub
pop
pop
lahf
push
or
daa
lea
fwait
mov
cmc
in
mov
and
shl
sbb
mov
cli
add
cmpsl
imul
bound
lcall
ret
out
enter
push
mov
jg
or
or
dec
mov
das
testl
mov
push
lcall
add
data16
leave
cmpsl
insb
int
fwait
aad
aas
sbb
mov
mov
icebp
mov
mov
lahf
sub
xchg
ljmp
jg
icebp
and
sbb
jo
out
dec
xchg
in
mov
cmp
fdivrl
int3
adc
or
int3
movsl
and
sbb
cmp
cmp
sbb
scas
adc
xchg
inc
jno
sar
cmp
mov
aas
rolb
pop
pop
sub
ds
cmp
push
mov
cmpsl
mov
icebp
xor
pop
and
leave
mov
cmp
add
mov
xor
popf
fnstsw
mov
pop
pusha
vandnps
xchg
mov
inc
mov
mov
or
push
daa
shll
stos
cwtl
icebp
dec
out
repnz
ret
lcall
push
aas
mov
sub
cmp
adc
popf
mov
xorb
pop
inc
daa
cmp
pop
push
imul
mov
pop
xchg
fbstp
jp
push
add
inc
pushf
adc
push
in
add
lds
psubsw
cwtl
or
test
outsl
icebp
xchg
repz
add
push
sbb
sbb
arpl
xchg
and
leave
pop
jae
lcall
imul
cmp
in
stc
push
mov
or
int
dec
push
int3
mov
or
pop
pop
jmp
mov
jb
xchg
rclb
add
push
push
vphaddudq
repz
push
push
out
mov
cmp
cltd
jecxz
push
add
fidivl
mov
lahf
sub
xor
sbb
out
lret
fstpl
mov
xchg
mov
add
lret
and
mov
pop
mov
fcomps
adc
adc
xchg
add
sbb
jge
add
adc
mov
pop
xor
aas
cmp
jmp
ja
or
cmp
ljmp
mov
inc
loopne
add
fildl
jmp
sbb
ljmp
cmp
inc
ljmp
nop
jbe
add
fimuls
call
adc
mov
imul
jnp
jae
xor
dec
outsl
dec
push
pop
sbb
mov
fldt
xlat
fstp
div
lea
int
or
xor
dec
int
adc
mov
push
bound
mov
and
imul
adcl
stos
popf
sbb
mov
mov
sub
inc
adc
push
sahf
sub
imul
mov
movsb
add
xchg
jmp
jo
fistl
sbb
or
or
cmp
adc
sbb
add
jnp
loope
pusha
push
jo
mov
lret
or
movsl
lcall
negl
gs
jb
int3
aad
mov
or
mov
mulb
sub
xor
sarl
mov
fiaddl
mov
xchg
subb
into
dec
push
and
ljmp
xor
or
stos
or
dec
lret
pop
mov
mov
popf
inc
aaa
lcall
js
mov
sbb
lods
push
pushf
cmpsb
pushf
cld
out
xchg
sbb
pop
lock
fnsave
pop
push
push
dec
cld
fdivl
inc
lcall
or
xchg
push
outsl
xchg
sti
test
out
insl
fidivs
push
cltd
popf
pusha
inc
loope,pn
outsl
notb
ret
mov
jb
sub
hlt
test
mov
cld
sub
mulb
push
mov
scas
pop
outsb
and
fnstsw
popf
ret
cmp
xlat
in
insl
cmp
cmc
nop
and
mov
rcrb
push
pop
and
scas
fisubrs
xchg
mov
xchg
xchg
jg
lock
addr16
xchg
and
mov
fnsave
inc
mov
or
mov
jno
mov
repz
inc
fcompl
cli
jnp
sbb
sub
loop
mov
testb
cmp
adc
or
xor
pop
test
pop
stc
push
mov
jae
pop
inc
cmp
adc
dec
jg
scas
ds
sbb
outsl
addr16
fidivrl
adc
test
xchg
xor
adc
xor
stos
jmp
fadds
dec
pop
adc
aas
cmpxchg
mov
dec
ret
adcl
cmpsb
out
ds
outsb
cmpsb
je
cmc
xchg
jb
adc
sub
push
or
imul
cli
loope
cmp
cld
cmpl
push
mov
add
rorb
adc
leave
pop
fsubrp
mov
outsb
lods
sub
cltd
mov
and
xchg
cwtl
and
ss
fisttpl
jmp
sbb
sbb
cmpsl
cmp
pop
lods
push
movsb
xchg
test
dec
jb
xchg
xchg
ja
adc
fmulp
add
mov
push
sti
inc
push
or
jns
xchg
inc
push
pop
mov
mov
inc
lcall
jl
das
stos
push
sbbl
mov
shlb
int
xor
inc
ja
sbb
jae
cltd
int
push
in
push
les
or
xchg
ds
jmp
inc
sbb
xchg
push
lret
aas
jae
pop
fistl
mov
push
pushf
movsb
inc
mov
inc
loop
jne
stos
repnz
mov
imul
pop
cmc
xchg
adc
or
inc
mov
pop
cmp
cmpsl
jl
imul
sbb
lahf
jmp
in
mov
and
lds
mov
inc
lods
mov
xor
jbe
sbb
aam
aaa
dec
xchg
in
jno
adc
stc
adc
mov
lods
and
in
fidivrl
fildl
divl
xlat
dec
or
roll
pop
fisubl
and
imul
arpl
xchg
out
xchg
imul
pop
xchg
bound
lds
xchg
mov
aad
xchg
int
movsl
mov
push
daa
test
clc
mov
adc
push
out
icebp
test
ret
pop
mov
jge
lock
aad
inc
std
mov
or
jmp
push
into
xchg
lahf
popf
push
in
xchg
arpl
scas
adc
sbb
fildll
dec
add
fwait
aas
dec
cmpsl
jg
inc
inc
mov
pop
push
testb
fwait
out
stos
test
jp
fwait
aaa
dec
unpcklps
stos
lods
out
xchg
or
in
out
clc
loop
sub
shll
cltd
icebp
lds
fisubrl
cli
fwait
sbb
add
test
ret
xchg
jle
mov
push
mov
xchg
push
fcmove
add
xor
sbb
adc
sbb
jns
mov
push
and
rcll
adc
lret
mov
xor
and
loopne
test
inc
jae
mov
push
push
push
mov
sbb
xchg
mov
idiv
fistl
inc
das
sub
adc
scas
fstps
sbb
lret
leave
ds
lahf
mov
in
mov
fwait
leave
or
and
test
ja
cltd
pop
pop
push
call
adcb
sub
leave
mov
cmpb
cld
lods
dec
push
pop
addr16
aaa
stc
pop
fucomp
nop
notb
aaa
rorl
sbb
sti
mov
sbb
jecxz
jecxz
gs
insb
adc
cmp
ret
dec
popf
imul
add
sti
pop
pop
and
repnz
scas
stos
pop
add
sub
bnd
test
sbb
and
jb
out
sub
cmp
sub
or
sub
dec
cmp
fwait
inc
cld
enter
stos
sbb
jbe
or
cmp
lahf
cmp
cmp
icebp
negl
jecxz
mov
xor
mov
daa
pop
repnz
push
inc
aas
add
aam
xchg
jge
stos
sbb
jne
jecxz
lahf
imul
sti
repnz
mov
outsl
pop
fnstenv
jmp
mov
sbb
mov
mov
nop
inc
cmpsl
in
jmp
dec
or
adc
mov
inc
mov
and
jno
dec
ljmp
jg
mov
popa
es
mov
push
cmpsl
sbb
dec
jle
das
cmpsl
call
lahf
push
adc
daa
dec
inc
mov
sbb
movsl
push
cmp
mov
mov
shrb
xchg
call
iret
addr16
lret
imul
loopne
pushf
adc
add
inc
out
xor
xor
sbb
stos
sbb
addr16
push
dec
jle
mov
xor
xchg
pushf
out
mov
mov
es
call
or
sub
mov
fwait
xor
test
pop
xlat
push
movsl
jge
test
dec
outsl
xor
pop
shrl
inc
dec
repnz
sub
dec
fistpll
div
mov
mov
lret
sti
pushf
or
shlb
lods
popl
inc
ss
in
xor
movsb
sub
jmp
mov
inc
mov
loop
repz
mov
ss
inc
jle
or
push
fstpt
inc
call
divl
push
cltd
bswap
xchg
xchg
jle
adc
push
andl
inc
adc
and
sbb
ret
dec
mov
jecxz
nop
inc
ret
inc
out
xchg
out
fistpl
insl
cltd
pop
jmp
dec
or
xchg
cmp
popf
inc
fnstsw
outsl
pop
mov
stos
test
cmpsl
mov
jl
jmp
add
loopne
sahf
pop
fcomps
mov
cwtl
cmpsl
mov
adc
xor
sbb
mov
jmp
or
cmp
sti
ljmp
dec
inc
aaa
stc
cmp
push
and
popl
inc
outsb
lcall
and
sbb
aad
dec
inc
aas
idivb
sbb
lock
dec
outsl
xor
outsl
lar
jmp
dec
dec
pop
clc
pop
orb
lods
xor
or
shrl
icebp
out
arpl
insb
adc
ds
cmp
outsb
lcall
cmc
test
sub
inc
mov
stos
lret
lret
dec
cmp
dec
outsl
mov
xchg
and
sub
xchg
aam
fstl
pop
ror
loopne
sub
pop
push
mov
add
fs
and
jne
add
cmp
adc
jns
popf
adc
mov
or
and
outsb
stos
and
lock
adc
loope
xlat
jae
cmp
sbb
stos
inc
push
xchg
mov
adc
iret
out
cmp
shrb
ret
arpl
xchg
jb
and
in
imull
cmpsb
fstps
mov
ja
out
nop
data16
pmullw
mov
mov
xchg
jp
mov
stos
int3
cmpsl
and
jnp
jg
xchg
mov
andl
lock
mov
cs
adc
call
testl
xor
out
cli
fidivs
dec
or
inc
test
mov
outsl
cmp
gs
push
insl
adc
sbb
mov
faddl
and
imul
xor
pop
cmp
ret
sbb
subb
jmp
imul
repz
sub
aaa
xor
push
or
ss
mov
add
scas
loope
popa
rclb
scas
mov
dec
cld
dec
repnz
xchg
stos
subl
mov
loopne
pop
test
push
test
aas
mov
xor
setl
mov
gs
pop
lret
cmp
loop
mov
mov
adc
jecxz
in
inc
mov
outsb
in
mov
mov
stos
mov
imul
push
roll
int
cmp
xorl
mov
roll
xchg
imul
pop
jns
sub
adc
rcrl
mov
cli
nop
ja
pop
nop
test
lea
aas
push
cmpb
xor
xor
push
ret
and
mov
push
test
mov
xchg
icebp
inc
and
ret
adc
fildl
shlb
aaa
inc
jp
mov
stc
jp
cmpsl
dec
and
xor
imul
or
mov
xchg
notl
cmp
dec
and
test
mov
ficomps
mov
hlt
or
test
icebp
push
dec
xor
imul
inc
cwtl
or
push
icebp
cld
cmp
mov
dec
test
jnp
ds
push
cwtl
rolb
dec
pop
les
pop
rol
xchg
ffree
bound
fmuls
shll
inc
push
inc
xlat
iret
sub
hlt
les
mov
das
jge
cmpsb
push
fmuls
jle
int3
cmp
dec
insl
es
jp
jnp
xchg
fnstsw
mov
mov
jge
int
cld
mov
rcpps
popa
inc
mov
mov
fstl
scas
std
test
cmp
jnp
lds
xor
dec
mov
push
sahf
adc
lcall
jmp
dec
adc
rclb
jns
dec
adc
imul
test
jge
incb
loopne
mov
mov
xor
cltd
jp
push
jp
sub
inc
outsb
mov
cmp
arpl
in
mov
inc
cmc
sahf
mov
icebp
adc
jno
lds
xor
pusha
imul
adc
mov
into
addr16
jmp
pop
xchg
and
and
sti
adc
add
or
rorl
aaa
lret
xchg
rcl
mov
setb
sub
xor
mov
pop
lods
daa
push
add
mov
add
iret
fcoms
sbb
stos
pop
mov
lcall
add
mov
call
add
sub
xchg
dec
mov
mov
fs
push
dec
add
push
add
or
xchg
adc
lods
ja
or
mov
cli
lods
shll
mov
push
cld
imul
into
mov
or
mov
scas
mov
add
mov
cmpsl
insl
sub
push
cmp
jl
and
cltd
add
mov
scas
jge
roll
mov
mov
mov
xchg
outsb
cmp
insl
or
pop
cwtl
mov
pop
mov
or
mov
fistps
fsts
add
mov
or
add
mov
pop
fisttpl
jno
mov
and
xchg
adc
leave
pop
mov
dec
sub
xchg
mov
sub
xor
or
cmp
mov
or
xlat
mov
cmp
jecxz
pop
lahf
inc
imul
add
or
mov
xchg
mov
sbb
lahf
inc
arpl
mov
xchg
sub
dec
mov
popf
sub
cltd
dec
inc
lcall
inc
xchg
sbbl
insl
xchg
sti
lcall
cmp
xorl
adcl
sbb
cltd
sub
push
xchg
repnz
dec
jmp
dec
push
test
test
ficoml
fcoms
out
adc
xchg
int3
xor
dec
cmp
jb
mov
mov
aad
scas
cmp
icebp
lea
cmpsb
adc
or
fcmovne
js
sahf
xchg
add
mov
out
push
fwait
jmp
xor
jg
mov
popa
addr16
push
in
lahf
and
mov
ds
mov
mov
loopne
jae
insl
je
aaa
add
pop
int
mov
cld
jo
or
and
cld
pop
jmp
and
xchg
xchg
jp
push
notl
pop
call
jle
pop
dec
xchg
sub
jp
sub
mov
stos
inc
testb
mov
adc
adc
jl
jecxz
push
nop
data16
sahf
push
fsubp
add
xchg
mov
jns
xor
testb
in
cmp
stc
or
fwait
cmp
mov
bound
dec
in
loope
ret
add
jge
xchg
xchg
mov
jg
mov
pop
push
mov
les
xor
mov
mov
jg
inc
mov
push
pop
push
cmp
scas
ret
cmp
push
lea
adc
cmpl
stos
cli
sub
mov
bound
mov
inc
pop
repz
daa
cmp
ss
mov
imul
iret
ret
insb
hlt
mov
pop
lods
cmp
movsb
mov
fidivrs
loope
popf
pop
pop
sbb
pop
adc
rcrl
mov
jg
popf
push
adc
fldenv
movsl
mov
xorl
fs
cs
and
xor
mov
xlat
adc
ds
sub
adc
ljmp
stos
push
or
imul
stos
idiv
xchg
setne
dec
insb
and
xchg
and
sbb
jmp
mov
and
jle
push
sbb
mov
repnz
imulb
inc
push
daa
test
negl
pop
test
shrl
xor
fst
imul
pop
enter
push
lahf
jecxz
inc
xchg
ja
lds
and
sub
es
mov
mov
xor
cmc
dec
cmp
fwait
dec
xchg
cmpxchg
outsb
mov
adc
std
sub
ds
inc
fnstcw
repz
sub
movsb
cmp
push
imul
xchg
pop
or
push
adc
cltd
mov
test
jb
mull
inc
call
mov
pop
adc
adc
int3
or
push
dec
scas
es
jp
fwait
pop
insb
imul
iret
pop
dec
je
enter
hlt
jg
jl
fwait
or
adc
aam
jbe
or
sbb
pop
jae
pop
or
testb
popa
lods
das
mov
in
mov
sbb
pop
in
dec
mov
lcall
addr16
mov
dec
sub
pop
jbe
xchg
repz
inc
test
sub
out
inc
xchg
xchg
inc
test
jmp
test
inc
mov
ja
xchg
push
cmp
imul
and
mov
jmp
andl
push
dec
fldenv
fsubs
sar
sub
sbb
arpl
xchg
and
lret
insl
ret
sbb
mov
xchg
jg
jmp
or
cs
shl
xchg
push
push
sub
andl
cmp
inc
repnz
push
xor
jns
mov
cmpsl
jnp
jbe
imul
aad
sub
push
ds
pop
js
nop
adc
inc
cmp
fstpl
xchg
push
adc
lahf
jmp
pop
jno
rorl
and
les
jl
lret
popf
sub
lds
xor
push
jecxz
jne
clc
mov
pop
add
adcl
cmp
add
push
adc
push
xchg
push
js
push
iret
push
nop
or
push
mov
add
dec
or
sti
ret
cmp
dec
mov
push
push
cmp
cmp
std
inc
xlat
dec
pop
add
jb
in
add
jecxz
mov
jno
jne
pop
xor
in
pop
lods
push
int
mov
push
testl
outsl
inc
xchg
cmp
or
jae
jp
push
out
cmp
out
xor
fbstp
or
mov
add
in
cli
fildl
jns
cwtl
push
add
inc
inc
pushf
sbb
repz
dec
mov
xchg
insb
cmc
sub
adc
xchg
mov
adc
cltd
jb
popf
adc
setl
out
daa
rcl
insb
imul
inc
jbe
ficoms
pop
loope
sbb
xchg
mov
jne
mov
rcll
sti
imul
repnz
xchg
cmp
mov
into
pop
inc
pop
pop
jno
mov
mov
sbb
or
daa
sub
stos
popf
stos
xchg
int
out
lcall
mov
dec
in
xchg
xor
fucomip
je
mov
arpl
mov
inc
xchg
cmp
jne
mov
pop
pop
mov
xor
jnp
push
inc
movsb
sbb
ret
sbb
mov
outsl
enter
addr16
pop
test
xor
or
subb
lods
and
and
adc
xchg
shrl
mov
shll
cmpsl
and
dec
cmp
insl
jo
ljmp
push
mov
fisttpl
fisubrs
sub
test
loopne
and
ljmp
addr16
icebp
mov
test
rcrl
ja
insl
push
fisubrl
mov
xchg
xchg
jo
scas
pop
push
xor
ja
xchg
cwtl
dec
out
ss
dec
xchg
jo
icebp
or
or
jge
cmp
addb
add
jge
test
sahf
mov
daa
movsb
mov
or
mov
cmp
dec
cvtpi2ps
sbb
fwait
rol
mov
scas
or
sub
aaa
cli
pop
push
ret
cmp
mov
pop
test
inc
and
fnstenv
es
dec
adc
lods
xchg
xchg
dec
subl
lea
inc
add
cwtl
popa
pop
jmp
rorb
les
xor
int3
stos
scas
or
add
dec
out
rcl
cmp
push
popf
cmpsb
adc
pop
lea
add
inc
repz
in
mov
int3
lret
inc
xor
sbb
cmp
sahf
repz
imul
mov
add
cmpsl
cmp
clc
mov
push
mov
push
push
or
pop
or
inc
jecxz
das
dec
roll
outsl
add
cmc
dec
fwait
ret
add
push
arpl
pop
dec
ret
add
sbb
iret
and
and
fisttpll
pop
aas
imul
cli
lods
add
xor
les
add
cwtl
stos
mov
push
in
cmp
inc
push
cmp
mov
sub
js
lret
xor
lcall
loopne
push
sub
ja
adc
aaa
sub
cmpb
out
jmp
or
insl
or
sub
ret
push
outsl
sub
cmp
rcrb
mov
jnp
and
sub
push
or
in
mov
movsl
mulps
push
xlat
xchg
in
and
cmp
repnz
in
xchg
jb
xchg
fiadds
pushf
push
movsl
and
lods
and
dec
jge
sub
scas
xlat
xchg
lret
dec
sbb
cmp
inc
std
jne
mov
jno
out
jns
mov
out
xchg
cmp
push
nop
push
xchg
scas
ja
sarb
rcrl
rorb
mov
push
mov
jae
adc
lahf
hlt
xchg
mov
xchg
xchg
mov
or
and
std
jl
mov
stos
xor
test
mov
fsubrl
push
mov
sub
cmp
sub
test
mov
and
jg
xlat
and
int
pop
jo
inc
sysret
pop
add
fstpl
or
xchg
cmc
jmp
xchg
mov
fstl
std
inc
je
stos
inc
sahf
pusha
mov
movsl
xchg
mov
add
ljmp
test
mov
xor
pop
imul
or
pop
sub
outsb
test
fs
scas
jb
cmpsb
mov
movsl
addr16
inc
insb
adc
aaa
imul
add
dec
out
rcrb
mov
lret
sbb
lret
cmpsl
push
xor
mov
popf
xchg
dec
push
sub
movsl
jbe
dec
mov
push
mov
inc
inc
adc
xor
mov
imul
aaa
pop
sbb
in
insb
or
cli
lock
push
movsb
adc
clc
and
movsb
mov
cmp
or
pop
leave
xchg
jecxz
adc
lods
hlt
loop
mov
mov
mov
sahf
das
fstpt
xor
adc
push
aaa
addb
dec
add
cmpsb
lcall
xchg
clc
das
sub
enter
and
mov
nop
sub
dec
push
rcrb
inc
push
fldt
fwait
jle
fidivl
jmp
mov
sbb
mov
call
mov
fiadds
data16
imul
lods
stos
jns
jnp
stos
addr16
loope
add
mov
mov
out
mov
inc
mov
cmpsl
icebp
xchg
stos
sahf
jge
mov
lods
in
mov
jmp
xchg
ret
test
sub
add
mov
popf
push
jmp
sub
mov
and
sti
pop
add
repz
jo
jbe
cld
inc
mov
mov
jge
aam
mov
add
mov
fldl
mov
sbb
shrb
loop
js
lret
out
fsubr
fdivs
jnp
movsb
jp
jg
adc
stos
in
aad
hlt
xor
test
loope
cmpl
xchg
cli
test
lret
arpl
push
divl
sbb
cld
adc
adc
jb
jae
jmp
leave
mov
inc
addr16
pop
xchg
xchg
dec
in
das
mov
and
push
inc
mov
xor
jne
mov
das
push
int3
sbb
sub
lods
sbb
lret
cltd
xchg
adc
mov
or
insb
mov
mov
cmp
fdivrl
cs
and
sarl
jle
mov
cmpsb
and
pop
xor
sub
mov
data16
rclb
test
sbb
or
ret
addr16
mov
rorl
test
je
add
loop
jl
cmc
push
jnp
xor
dec
shl
sti
sub
cld
je
push
jno
push
cmpsb
inc
inc
icebp
out
cmp
mov
push
imul
outsl
or
adc
outsl
insl
pop
das
inc
mov
sub
insb
jmp
jnp
mov
outsb
imul
sbbb
mov
mov
fstpt
clc
fwait
adc
or
xlat
popf
mov
adc
inc
inc
pop
dec
pop
xchg
xchg
and
test
jae
xorb
adc
adc
mov
cmp
test
sbb
cwtl
xor
sbb
ss
lods
xchg
in
jno
adc
push
test
dec
cld
movl
jg
cmp
jmp
addr16
or
in
pushf
jecxz
pop
push
aam
popf
test
dec
lds
outsb
ds
mov
add
jno
mov
in
xor
add
rolb
addl
mov
inc
int3
loope
orl
enter
xchg
jp
add
sldt
sub
int
cmp
rcr
imul
xor
push
pop
inc
pop
int3
scas
lds
sbb
jne
in
cwtl
mov
xchg
xchg
sub
bound
movntq
mov
mov
sub
mov
sti
ljmp
sbb
shrl
dec
fs
loopne
daa
addb
mov
mov
mov
movsl
push
lods
rcr
dec
call
mov
in
lret
repnz
sub
sub
pop
mov
shll
data16
jl
das
lods
xorb
cmpsb
or
dec
xchg
mov
xlat
jns
repz
daa
jp
std
insl
icebp
push
stos
test
dec
out
js
and
test
or
and
ret
ljmp
mov
sbb
fdivs
or
xor
mov
imul
pop
cld
enter
imul
lahf
pop
cs
and
lahf
jmp
mov
icebp
mov
out
cmpsb
cmc
inc
dec
or
mov
pop
mov
inc
cvttps2pi
xor
outsb
or
ljmp
sbb
mov
out
popf
push
ds
inc
xchg
xor
push
lock
mov
sub
or
das
rcrl
aaa
test
insl
and
push
orl
or
sbb
mov
leave
cltd
cmp
inc
mov
inc
popl
and
mull
arpl
jl
or
mov
or
aas
stos
add
mov
insb
aam
addr16
or
rorl
enter
orl
stos
cld
mov
pop
and
or
fs
push
repnz
xorl
addb
cmp
push
and
lock
daa
std
test
push
xchg
mov
dec
or
stos
inc
and
cmc
jge
mov
sub
lods
mov
cltd
ret
cmpsl
inc
adc
mov
test
inc
add
lods
xchg
roll
sbb
push
inc
sub
jae
mov
sub
xchg
ja
dec
push
aaa
push
pop
fstl
lcall
repz
push
in
lock
dec
jae
sbbb
xchg
shr
or
nop
out
sbb
mov
push
loop
xchg
add
lret
jl
xor
shl
or
into
cmp
xchg
js
pop
mov
pop
sbb
mov
nop
add
scas
dec
ljmp
ds
sbb
aam
cmpl
lret
mov
and
out
pop
dec
mov
pop
add
icebp
pop
inc
out
jnp
xchg
lcall
test
arpl
fsubrp
inc
cmp
adc
outsl
cmpsb
ds
cmp
push
sub
jns
orb
add
test
sub
mov
jno
lahf
and
xor
mov
mov
andl
mov
cmpb
mov
mov
jnp
dec
rcll
and
mov
adc
xchg
into
cmp
jmp
mov
inc
fldl
stc
out
ffree
jae
ljmp
out
mov
sbb
mov
sbb
or
adc
pushf
mov
add
inc
cmp
push
push
fisttpll
sub
movsb
dec
sbb
xchg
add
cmp
sarl
sbb
mov
fldcw
mov
xchg
xchg
jno
stos
mov
push
imul
pop
mov
fwait
xchg
mov
pop
sti
mov
sub
and
fimull
inc
cmpsl
push
scas
clc
shlb
pop
xchg
jmp
sbb
and
daa
aam
or
mov
push
lcall
jmp
cmpsl
insl
cvtps2pd
mov
mov
adc
push
icebp
push
sbb
push
call
pop
sti
sub
rcll
scas
test
outsb
daa
lods
dec
push
push
clc
xchg
sub
fnstcw
xor
movsb
mov
arpl
add
insl
inc
dec
mov
xor
lds
ret
lods
iret
mov
pushf
dec
push
lret
pop
push
dec
inc
in
lods
leave
mov
jne
xorl
test
sbb
xor
xchg
lods
sbb
sbb
addr16
or
mov
lahf
outsb
sbb
leave
js
inc
mov
adc
mov
mov
nop
in
mov
pop
inc
or
in
dec
mov
push
push
movsb
dec
inc
mov
cmpsb
in
std
imul
xchg
add
out
cmp
adcl
sub
xchg
xchg
inc
mov
loopne
or
push
jl
sub
inc
insl
movl
push
sti
jmp
loope
lods
pop
rclb
cmp
pop
cmp
or
es
push
out
inc
inc
sbb
mov
into
in
xchg
push
add
jp
shrl
loope
and
aas
cmp
dec
int
or
in
jne
xchg
jbe
out
ficompl
sbb
push
add
cs
jle
ja
xchg
lret
xor
inc
adc
es
pop
dec
stos
loope
jne
lahf
lcall
cmp
popf
cwtl
add
nop
push
pop
ds
pop
jns
ror
movsl
mov
and
adcb
stc
push
pop
adc
lea
push
dec
push
adc
sbb
aad
in
adc
daa
push
lahf
loope
mov
pop
leave
sbb
jbe
pop
aaa
mov
sti
lea
jecxz
mov
mov
cmp
cmpsb
fcompl
fidivl
arpl
and
mov
loope
sub
adc
jns
rclb
fmull
fimull
lret
rorl
cmp
pop
sub
scas
xchg
cli
pop
dec
ror
jmp
repz
imul
leave
jb
scas
shll
xchg
imul
movsl
popa
out
icebp
mov
push
mov
dec
pusha
push
lret
push
vmovntdq
pop
imul
jb
dec
or
mov
hlt
dec
push
cmp
push
into
movsb
jmp
lahf
push
push
loop
fmuls
push
cs
adc
mov
mov
ljmp
dec
pop
negb
lods
adc
sbb
jmp
hlt
sbb
and
loope
sbb
inc
pop
adc
icebp
add
repnz
stos
mov
inc
sbb
lret
jne
das
fld
adc
push
mov
frstor
jg
cmpsl
push
sbb
aaa
es
or
lcall
mov
into
cmp
repz
sbb
ds
dec
jmp
es
test
mov
popf
stos
std
adc
loope
mov
pushf
xchg
mov
movsl
scas
inc
xchg
sub
or
dec
fadd
hlt
or
cmp
shl
jmp
push
or
mov
mov
cmp
mov
add
loope
sti
int3
fcoml
outsl
movsl
std
jl
lahf
call
decl
jmp
lret
lcall
jnp
pop
jmp
test
xchg
xlat
mov
mov
xor
outsb
sar
mov
or
gs
cltd
xchg
and
popa
jecxz
shlb
shl
insl
fwait
lahf
imul
mov
adc
dec
lock
inc
mov
pop
mov
aam
lret
mov
push
jae
repnz
js
mov
inc
push
mov
mov
js
movsb
mov
cmpsl
xorb
aaa
mov
mov
nop
adc
loop
jbe
ss
mov
push
or
mov
add
sub
dec
push
fwait
jno
jp
jb
hlt
and
cmpsl
push
xchg
xchg
xchg
ja
xor
pop
or
lret
js
shll
cmp
jb
insl
jne
std
sbb
mov
mov
daa
mov
or
das
xchg
cmp
loop
scas
mov
outsb
jmp
sub
jnp
adc
rcrl
sub
out
sub
sub
pop
xchg
test
push
testb
adc
mov
pop
popf
movsb
sub
jmp
scas
mov
loope
or
jl
in
add
xchg
push
lcall
sbb
add
adc
add
adc
inc
lcall
and
sub
mov
jbe
cmp
mov
cld
shl
ret
push
jns
ja
hlt
inc
sbb
loopne
pop
cmp
and
or
push
add
pushf
cmpsb
mov
sbb
adc
shrl
inc
mov
cmp
imul
lcall
cli
cmp
cmp
dec
in
std
pop
xor
pop
add
xor
rorl
dec
xchg
das
sub
mul
rcrl
rorl
popf
dec
sub
xor
lret
adc
divb
dec
inc
dec
addr16
jp
sahf
or
or
push
lcall
movsb
jne
aam
ja
add
ja
mov
hlt
and
adcb
pop
sbb
add
xchg
xchg
add
ljmp
add
push
push
shll
sbb
addr16
mov
push
negl
stc
ffreep
imul
xchg
scas
lret
fldl
xchg
dec
xchg
mov
adc
add
mov
popa
popf
dec
pop
insl
sub
sub
repnz
aad
and
mov
shl
test
imul
shll
dec
jo
cmp
test
xchg
push
mov
adc
std
lcall
pop
sub
xor
push
pop
lods
out
test
in
bound
mov
lret
scas
inc
push
cmp
pop
mov
sub
js
xchg
aaa
jg
and
mov
fbld
shrl
or
mov
imull
cmp
xor
dec
push
mov
imul
mov
fsubp
mov
jmp
xor
aam
pop
inc
aam
stos
nop
fcompl
clc
push
addr16
pop
mov
andb
push
xchg
mov
push
sub
enterw
inc
and
and
sub
push
or
mov
xor
mov
mov
sub
pop
hlt
xor
daa
jne
cmp
jl
addr16
cmc
push
sbb
inc
push
popa
push
dec
imul
aas
lret
xchg
pop
dec
test
pop
jecxz
push
and
lretw
inc
in
mov
push
or
adc
add
in
push
pop
sbb
cmpsl
xor
push
or
push
movsb
data16
frstor
mov
pop
inc
adc
sti
cs
xor
lds
jmp
loopne
mov
movb
cmp
add
testl
push
inc
mov
pop
sub
js
push
rcl
cltd
popf
mov
mov
push
rol
es
xor
and
int
mov
shr
cmp
lret
inc
in
pop
sub
test
arpl
das
int
xchg
inc
dec
in
jno
xlat
sbb
ret
mov
or
js
fsub
inc
cmp
ljmp
out
cmp
std
mov
mov
pop
pop
mov
mov
push
fstl
icebp
xlat
lods
jno
daa
push
push
add
xor
imul
sbbl
es
fbld
jge
lods
loope
std
lcall
or
fcmovbe
inc
imul
and
outsl
jge
int
xor
add
ret
or
push
mov
cld
jg
iret
mov
xchg
test
jnp
fnstenv
and
push
jle
cwtl
push
test
popf
mov
sar
ds
or
mov
out
std
push
push
sub
cltd
movl
jno
push
mov
inc
stc
or
data16
jl
cmp
mov
or
mov
or
mov
pop
or
fildl
call
sub
cmp
cltd
dec
xor
int3
ljmp
pop
push
std
mov
or
mov
data16
adc
lods
xchg
lea
mov
dec
stc
sbb
lahf
mov
adc
dec
sarl
add
ds
repz
imul
int3
movsl
call
ret
sbb
lea
popf
or
icebp
add
jnp
decl
call
sahf
inc
addr16
aas
mov
stc
lret
es
sub
out
insb
jge
jno
push
xchg
jl
aad
shll
stc
out
test
ss
fwait
dec
je
aas
jns
adcb
popa
inc
pushf
inc
add
jns
les
jge
mov
cmpsl
and
mov
sbb
sbb
rsqrtps
adc
mov
xchg
cmp
stos
nop
jmp
movl
adc
repz
add
iret
mulb
xchg
test
mov
dec
imul
movsl
dec
adc
iret
mov
ljmp
jle
mov
mov
or
sub
fwait
jecxz
add
or
xchg
cmp
dec
push
push
or
dec
xor
push
inc
cmp
outsl
jecxz
xor
roll
mov
lret
inc
mov
movsb
dec
mov
mov
lock
lock
push
loopne
cmp
mov
ja
pop
xor
fcmovnbe
insl
scas
sbb
in
out
mov
mov
fldt
jecxz
icebp
scas
jne
negl
xlat
cmp
imul
adc
mov
sub
mov
ja
sbb
add
inc
sarb
push
and
aas
mov
pop
rorb
daa
mov
scas
daa
xchg
sbb
jne
xor
shlb
dec
xchg
inc
testb
lea
dec
xchg
dec
xor
nop
push
fucomp
shll
cmp
dec
sbb
jnp
inc
lret
dec
lret
aaa
adc
sub
fsubr
nop
mov
sbb
jno
jo
shll
movsb
imul
or
incb
sub
add
aas
dec
mov
pop
les
pop
mov
into
dec
pop
std
movl
lcall
jge
in
jno
pop
gs
xchg
xchg
lcall
dec
leave
sahf
push
sub
in
cmp
shlb
lock
cwtl
dec
leave
mov
ret
add
shlb
mov
fmul
pop
adc
stos
pushf
jecxz
or
mov
fidivrl
xchg
sub
jecxz
stos
and
in
lret
mov
mov
xchg
shl
cmpsb
pop
xchg
stos
sbb
js
push
xchg
mov
xchg
add
and
pushf
xor
push
int3
dec
ror
testl
clts
jne
jle
scas
xchg
mov
cmpsb
xor
sub
shrl
xchg
ss
or
dec
popa
in
test
xchg
or
jnp
pop
jnp
or
enter
mov
pusha
aam
push
push
enter
inc
jmp
ss
ss
pop
jle
cmp
push
add
xchg
iret
dec
mov
ret
ret
iret
xchg
dec
xor
in
out
aam
jo
sub
loopne
pushf
jb
dec
jb
dec
add
sarb
mov
dec
jge
dec
jl
adc
jb
lret
push
cmpsb
xlat
jmp
mov
js
or
sbb
mov
push
sti
and
xchg
repz
notl
mov
sarl
jmp
ljmp
or
imul
jmp
xor
fsubl
fstps
in
push
pop
shlb
fimuls
pop
mov
or
sub
lret
mov
call
loope
and
nop
mov
pop
movsl
mov
or
mov
lret
pop
stos
xchg
fisttpl
add
mov
andl
shll
test
xchg
pusha
sub
push
insb
iret
or
mov
inc
out
cli
aas
dec
add
out
sbb
arpl
mov
orb
pop
pop
jns
mov
test
jne
in
cli
ss
and
add
xchg
lods
neg
mov
and
inc
cmp
adc
mov
push
or
xor
add
xor
sbb
xchg
dec
lcall
iret
cmp
inc
xchg
mov
mov
pop
jmp
sub
lds
pop
push
sarl
pop
dec
jmp
sbb
xor
pop
stos
int3
xor
imul
enter
rol
das
dec
inc
aas
stos
dec
dec
lods
out
loopne
mov
jecxz
int
in
mov
divl
lcall
sti
jmp
vpsubw
js
adc
push
movsl
push
xor
fisubl
sub
cmpsl
stos
jae
jg
test
sbb
jns
nop
sub
incb
fwait
pop
loope
push
pop
cmc
pop
stc
mov
idivb
sbb
lods
inc
mov
daa
lcall
mov
lods
in
lock
adc
add
or
test
jae
add
push
js
lods
or
jl
mov
mov
xchg
inc
add
adc
lea
jmp
and
cs
mov
je
into
ss
out
mov
jbe
sbbl
jg
outsl
aam
addr16
xor
push
adcb
jg
outsb
xchg
inc
nop
int
cmp
mov
pop
sub
xchg
sti
sbb
movsl
push
mov
and
jge
cmp
hlt
fidivl
push
push
jge
jbe
fwait
add
or
push
enter
pop
arpl
jb
cmp
and
mov
jo
addr16
andb
aaa
and
xor
shll
jo
lods
dec
sti
sub
or
repnz
cmpl
push
xchg
xchg
cmp
add
inc
sbb
mov
aad
inc
sbb
dec
adc
push
dec
inc
pop
ss
push
test
sarl
sarl
leave
xchg
xor
sub
and
in
jae
aam
or
xor
push
faddl
aad
mov
hlt
jmp
pop
outsb
imul
popf
xor
fstpl
loop
mov
testb
lds
stos
mov
xchg
mov
or
fdivrp
in
js
mov
mov
push
mov
daa
leave
pop
cmp
addb
lahf
push
push
cmp
ror
sub
push
mov
xchg
dec
pop
sti
fsubrl
sbb
in
outsb
and
push
mov
rsqrtps
out
mov
mov
insl
inc
add
adc
es
rorb
mov
xchg
or
testl
xor
lock
jg
lahf
mov
scas
push
xlat
add
xchg
out
dec
in
pop
jae
cmp
pop
xlat
sub
dec
stos
aam
adc
stc
icebp
xchg
stos
dec
mov
adc
xchg
dec
mov
outsw
xchg
scas
jbe
xabort
xchg
mov
inc
jge
bound
jnp
jg
add
enter
jmp
sub
add
loopne
xchg
iret
add
pop
dec
dec
jbe
divps
int3
stos
inc
ficoml
ja
nop
mov
dec
xchg
mov
push
push
mov
add
sbb
push
clc
inc
inc
and
sahf
push
movsb
aad
xlat
test
push
rolb
shll
or
cmp
fsubr
aad
jo
cmc
adc
dec
add
ficoms
inc
pop
and
hlt
movd
or
add
pop
ret
or
insb
rcrb
sub
ja
push
jb
mov
ljmp
add
cmp
pop
push
stc
push
sub
lahf
in
icebp
divl
dec
and
lahf
adc
stos
push
out
jne
jge
or
push
jle
sub
xor
push
in
xor
out
pop
jmp
jo
sahf
pop
insb
push
lret
rcrl
repz
cmpsb
ds
jmp
addl
clc
pop
addr16
lahf
jmp
imul
mull
mov
push
adc
rorb
fldt
mov
fisttpll
in
movsl
clc
std
pop
scas
adc
into
inc
xor
push
popa
sbb
shlb
iret
mov
es
cmp
cwtl
jne
adc
mov
ds
out
pop
addr16
jge
int
pop
stos
or
fucomip
push
and
sbb
xchg
and
jbe
push
cmp
sub
jl
mov
test
pop
push
sub
imul
lods
fmuls
dec
push
jo
call
fldl
mov
fstpl
mov
xchg
adc
rorl
inc
and
push
jb
int3
mov
xor
mov
lea
bound
lcall
lea
push
or
insb
or
rcl
xchg
fbld
divl
sub
in
fcmovu
popa
add
ds
lahf
test
adc
in
or
adc
out
rcr
out
mov
jns
out
pop
jno
stos
or
fs
sub
nop
jecxz
orb
mov
loope
mov
inc
xchg
sti
insl
add
xor
pop
ja
push
insb
xchg
jae
pop
aaa
inc
gs
imul
jns
or
cmp
shr
loop
cmpsb
rorl
xchg
call
aas
inc
mov
in
pop
add
ret
sub
mov
xchg
lcall
pop
mov
gs
adc
lea
mov
jg
out
inc
shlb
jb
aam
mov
sbb
jbe
mov
stc
int
in
sub
push
pop
loope
mov
cmpsl
cmc
lds
fcomps
pop
or
pop
gs
repz
jns
xor
out
out
xchg
adc
movb
out
inc
pop
ds
push
ja
loopne
mov
and
scas
hlt
cmc
std
adc
mov
inc
push
psllq
movsb
mov
push
cmp
or
pushl
mov
dec
popf
ss
pop
adc
mov
int3
push
pop
jbe
and
xchg
dec
negb
xchg
inc
adc
xchg
outsb
stos
rorb
scas
sysret
xor
sbb
dec
add
push
enter
xor
pop
sub
push
loopne
sub
inc
sub
mov
lds
inc
scas
iret
icebp
aad
push
outsl
frstor
nop
and
loopne
mov
or
test
andl
clc
add
popf
inc
subb
xor
inc
nop
mov
lods
mov
xchg
divl
add
loopw
cmpsb
out
ds
lret
cli
jo
jmp
mov
scas
adc
mov
xor
mov
add
jp
fstpt
mov
push
mov
test
fdivr
xorl
fidivs
data16
jne
pop
adc
sbb
mov
xchg
stos
mov
add
jb
add
sbb
out
pop
pop
and
or
xchg
icebp
adcl
sbb
dec
stc
pop
mov
sbb
add
into
pop
jnp
ss
in
cmp
cmpsl
sbb
shll
testl
test
pop
lods
xor
inc
push
popf
movsb
sub
hlt
dec
ds
jg
mov
rorl
xchg
sub
out
ret
sub
or
movsl
xchg
dec
fwait
test
mov
adc
lods
call
mov
or
jns
mov
sub
push
sub
mov
sbb
adc
xchg
jecxz
lock
stos
cmc
int3
repz
dec
mov
int
stos
mov
xor
cmove
xchg
das
adc
shrl
iret
add
xchg
rorl
dec
cmp
das
mov
mov
dec
xchg
push
cmp
cltd
inc
cmp
pop
push
daa
ficoml
jmp
or
push
inc
rcrb
cwtl
daa
adc
subb
pop
mov
iret
leave
cld
mov
fistpl
mov
dec
pushf
sub
pop
and
and
div
mov
add
dec
xchg
fimull
adc
pop
mov
subb
jmp
pop
jle
jae
jge
xor
shll
pop
sbb
push
leave
pop
cmp
int3
popa
or
mov
push
dec
sbb
ret
loope
cmp
pop
push
fisubrl
adc
dec
add
aam
mov
mov
push
xor
cpuid
mov
enter
adc
jmp
push
mov
notl
dec
cmp
mov
and
mov
andl
fisubl
in
jecxz
mov
shlb
jp
test
adc
dec
add
cmp
xlat
lret
mov
fstpl
addr16
test
push
jnp
rolb
dec
sbb
mov
xchg
push
test
add
cltd
push
or
push
imul
inc
ret
cmp
out
mov
mov
roll
sbb
jbe
pop
fistpll
and
inc
orb
fsubrs
cmpsl
xchg
stc
iret
jge
mov
repz
mov
mov
add
xchg
jmp
cmp
mov
outsl
icebp
pusha
inc
adc
loop
pushw
jno
lret
cmp
sbb
mov
lea
ret
mov
mov
popf
lods
or
xchg
jno
mov
adc
idivb
insb
popl
andl
adc
mov
sbb
adc
ret
cmp
dec
int3
rorl
mov
cmc
jns
ja,pt
cmp
pop
mov
dec
jae
fucomi
xorl
hlt
sbb
daa
mov
push
or
xchg
push
xchg
ljmp
mov
xor
xchg
jae
test
jg
dec
sysexit
lret
stc
add
sti
sbb
mov
mov
dec
mov
mov
cmp
mov
jmp
out
or
lea
adc
lock
arpl
mov
scas
movsl
or
or
fstl
adc
cmp
mov
and
adc
lahf
addr16
or
andl
jmp
out
dec
pop
or
setb
fstl
sbb
mov
mov
pusha
mov
or
sub
repz
or
or
adc
addr16
adc
mov
add
imul
mov
xor
faddl
dec
or
cmpsl
jg
and
xor
push
add
mov
repnz
stc
and
rorl
and
jmp
mov
or
leave
movb
add
cltd
adc
or
jno
fstpl
nop
cmp
popa
mov
mov
pop
adc
xchg
nop
xor
in
mov
rcrl
xor
jp
int
xchg
lea
sbb
add
mov
pop
adc
mov
mov
sub
repnz
out
adc
or
or
arpl
or
xor
mov
mov
pop
popa
lahf
inc
dec
mov
mov
insl
pushl
xchg
adc
lahf
mov
cmp
shll
pop
push
or
cmp
mov
pop
dec
jmp
cmp
cmp
adc
ja
rorl
sbb
mov
fnstenv
sbb
sbb
dec
pop
loope
xor
and
popf
insl
bndldx
cmp
imull
mov
dec
cltd
cmpsl
scas
xchg
mov
mov
cmp
sar
add
cld
push
dec
leave
lock
dec
xor
push
shr
dec
push
test
insl
pop
sbb
fdivrs
in
jno
ljmp
jae
lret
test
pusha
jns
mov
xor
andl
lods
ljmp
push
stos
fwait
mov
subl
xchg
or
mov
adc
jbe
mov
mov
aas
adc
xchg
stos
scas
and
iret
fisttpll
mov
adc
mov
mov
imul
insl
or
adc
into
ret
ret
or
xor
imul
enter
cmp
inc
xchg
je
sqrtps
cmp
cmp
cmp
mov
jnp
shll
dec
or
add
sbb
movsb
mov
leavew
cli
jp
loop
add
das
fwait
mov
adc
aaa
sbb
and
or
adc
cli
and
pop
pop
fs
xor
dec
insb
xor
cmpsb
xchg
mov
dec
lret
and
aaa
pop
adc
lahf
jae
or
mov
add
adc
inc
cmp
aaa
test
sbb
push
shlb
sbb
call
mov
xchg
mov
scas
push
ja
fisttps
aaa
in
push
iret
add
dec
cltd
pop
mov
sub
mov
xchg
xor
add
adc
mov
mov
fldenv
cmp
aad
push
xchg
xchg
sarl
cld
mov
mov
mov
pop
inc
mov
adc
mov
xor
cmp
or
xor
xchg
push
and
mov
inc
ror
xchg
jo
and
or
cmp
in
movsl
sub
stos
mov
and
int3
cmp
das
xchg
mov
or
sbb
cmp
ljmp
or
subl
mov
repz
sbbb
push
repnz
add
test
movsb
loop
pop
call
and
std
mov
into
mov
mov
dec
mov
mov
aad
rcll
lods
dec
or
and
rol
test
cmp
loopne
adc
std
sub
cmp
pop
sbbl
pop
add
stos
sbb
dec
push
pusha
cli
cmp
adc
cmp
mov
or
call
and
cld
sbb
lret
mov
or
lock
and
dec
mov
dec
and
pop
inc
arpl
mov
mov
xchg
pop
xor
outsb
data16
sti
mov
scas
mov
sub
sub
or
test
jne
loop
loopne
or
jb
push
mov
pfrcpit2
into
mov
pop
ja
xchg
mov
stos
mov
jno
daa
inc
xchg
jae
cli
xchg
movsb
cmp
addr16
or
cmp
sahf
loopne
adc
cmp
cli
pop
das
mov
aas
inc
push
setp
pop
mov
dec
outsb
mov
pop
push
add
sub
jl
xor
dec
cmp
or
and
push
or
imul
pop
scas
dec
aaa
cmp
add
push
sub
ljmp
stos
jmp
xor
ret
mov
ror
or
orl
jmp
mov
fwait
xor
lret
das
xchg
jg
lret
cmp
add
enter
stos
in
cmpsl
adc
mov
sti
or
stos
add
push
out
iret
jo
cli
push
jl
xlat
aam
push
out
pop
imul
lcall
push
dec
mov
in
enter
aad
in
mov
mov
jecxz
rcrl
dec
mov
cwtl
ror
das
inc
or
add
mov
cmc
sub
out
nop
or
sbb
dec
je
shll
ja
mov
leave
jo
xor
pop
insb
in
inc
xchg
loopne
sbbb
imul
mov
add
pop
push
andl
ljmp
outsb
jo
lods
pop
mov
call
into
imul
negb
pop
mov
das
pop
pop
sub
sbb
mov
js
out
std
xchg
cmp
pop
cli
jge
mov
repz
ja
sarb
sub
bound
add
lahf
jmp
icebp
cli
mov
fwait
testb
int3
and
fcmovbe
xchg
mov
mov
cmp
lcall
shll
jg
daa
call
adc
ja
xor
adc
mov
jo
stos
fdivrs
mov
ret
iret
mov
int
mov
mov
arpl
or
pop
sub
and
cwtl
push
sbbb
jl
mov
imul
jns
jno
push
cmpsl
js
aas
shl
xrelease
outsl
enter
sub
jmp
testb
jmp
leave
dec
lods
scas
jno
ret
test
repnz
push
shrl
sub
push
pop
fcoms
dec
in
aaa
jns
repz
jns
rcll
addr16
pop
test
stos
rorb
sub
sbbl
mov
pop
daa
or
clc
cmpl
adc
inc
lret
sbb
adc
enter
lret
imull
imul
ljmp
aas
daa
xor
dec
call
idivl
mov
mov
push
idivb
pop
scas
loope
push
int3
fs
insl
jnp
cmp
in
fadds
fwait
out
loop
mov
pop
cli
iret
xchg
push
stos
lea
add
sub
fsubrs
mov
rorl
int3
pop
outsl
negb
xchg
mov
clc
js
add
sbb
in
add
pop
push
int
push
and
mov
add
mov
xchg
sub
repnz
pop
cmp
dec
xlat
mov
mov
add
add
ja
pop
popl
jecxz
pop
mov
scas
mov
xlat
or
jle
dec
pop
xor
add
popf
jp
stos
dec
push
fildll
dec
or
sbb
xchg
cltd
adc
or
jp
fs
movsl
daa
call
in
mov
int3
fldl
fwait
mov
dec
sbb
mov
cmc
mov
sub
push
xchg
lcall
cmp
stos
pop
out
xor
and
inc
pushf
adc
mov
addl
xor
lea
outsb
gs
cli
stc
imul
mov
pop
daa
loop
cwtl
bound
popa
pop
out
fimuls
aad
jle
es
dec
leave
fistps
jnp
cmpsl
push
xchg
lret
js
sbb
mov
adc
add
cld
and
mov
je
or
loopne
inc
push
push
cmp
add
enter
inc
jg
cltd
loope
popf
xor
fwait
mov
sbb
std
sbb
popf
xor
das
jmp
movl
and
pop
ret
loope
xchg
mov
mov
jae
dec
test
enter
icebp
mov
stc
mov
in
testl
mov
stos
dec
inc
adc
adc
or
sub
imul
jb
pop
or
xor
daa
repz
aaa
aad
rolb
xchg
lea
inc
fsubl
dec
leave
xlat
pop
push
sarb
lods
scas
jb
or
nop
sbb
mov
xchg
out
add
data16
mov
sub
loope
jge
scas
out
mov
xor
xor
xchg
psubusb
gs
inc
xor
sbb
jmp
sub
aam
js
or
leave
stos
cs
mov
es
sub
jb
jb
ss
xchg
insb
mov
mov
or
xor
shr
in
jbe
mov
dec
fwait
xchg
out
cmp
xchg
stos
cwtl
xchg
cmpsb
fistpll
dec
mov
push
cmp
jmp
push
xlat
daa
movb
dec
or
fldl
shl
aas
mov
lret
mov
ljmp
push
inc
in
imul
insb
ja
pop
dec
cltd
scas
and
mov
bound
pop
out
mov
and
sub
lret
test
push
cmpsb
rorb
xchg
lret
add
push
insl
lret
das
pusha
insl
lea
sub
xor
enter
iret
call
stos
daa
dec
and
add
mov
xchg
nop
incb
loope
cmpsl
insb
insl
jmp
clc
lock
pop
inc
out
cmp
or
stos
push
xchg
jge
repnz
mov
dec
into
push
dec
pop
xor
push
roll
fwait
pop
das
and
mov
xchg
fisubrl
jge
popf
and
fwait
jo
dec
sti
pushf
daa
fwait
popa
or
inc
push
xchg
jg
dec
fsubl
movsl
repnz
push
enter
int
in
aad
xor
sub
scas
dec
inc
push
enter
movsl
dec
inc
mov
in
mov
sbb
mov
pusha
adc
dec
test
sar
mov
loope
aaa
clc
dec
dec
pop
aaa
inc
popa
push
sarl
add
add
popf
xchg
repnz
das
xlat
aas
or
enter
repz
inc
shll
shll
lahf
rolb
lahf
sbb
xchg
stos
cmpsl
fistps
push
cmpsb
movsl
shll
addr16
push
and
imul
fwait
sub
pop
sar
cmc
push
or
mov
pop
sub
je
xchg
movsl
and
mov
cmp
nop
dec
decl
xlat
repz
stos
xchg
nop
inc
xchg
enter
sbb
das
and
test
or
push
add
repz
mov
outsl
loop
scas
sub
mov
push
sub
push
clc
scas
xor
adc
jp
out
popl
out
xchg
mul
add
dec
dec
scas
mov
xchg
out
or
mov
lret
call
inc
adc
push
or
shrl
stos
das
jmp
pop
mov
add
jle
xor
mov
push
test
mov
jp
push
xor
mov
mov
movsl
add
mov
scas
mov
adc
aas
adc
cmp
orl
in
xchg
jl
sbb
shrl
aam
mov
adc
jecxz
xchg
stos
or
sbb
sbb
adc
and
loopne
and
dec
out
std
leave
xchg
mov
lcall
pop
into
mov
neg
jae
movsl
push
jg
ljmp
nop
test
mov
out
add
mov
cmp
sbb
imul
shll
dec
mov
nop
cmp
mov
xchg
fnsave
bswap
daa
jecxz
or
xor
aas
mov
pop
xor
and
adc
dec
cli
repnz
xor
in
dec
push
xchg
stos
cmp
and
lea
push
mov
jmp
push
dec
pusha
decb
cld
mov
dec
int
testl
fisubrl
xchg
lret
mov
sbb
mov
sbb
and
pop
xchg
cmp
xchg
ficoml
outsb
rcrb
aas
hlt
fistpll
divl
jecxz
xor
inc
lret
andl
int3
and
hlt
adc
add
cli
push
dec
mov
push
adc
add
in
movsb
repz
std
xchg
in
dec
aad
lahf
outsl
push
shl
cmp
inc
cli
in
andl
test
push
rcr
rcl
sub
mov
rorb
shl
inc
sbb
cli
pop
push
rep
sbb
ljmp
out
and
rol
sub
les
int3
jmp
sub
out
stos
jbe
arpl
push
leave
mov
or
repz
sti
out
xlat
loopne
ror
sub
icebp
mov
xchg
into
pop
mov
and
cmp
dec
loope
and
scas
jecxz
mov
mov
enter
aad
je
frstor
xchg
fimull
cmp
das
add
xchg
sar
ret
mov
push
xchg
sbb
xchg
adc
xchg
stos
jne
repz
pusha
sub
dec
in
mov
loope
loop
inc
push
mulb
push
in
push
jno
in
in
loop
aad
cli
inc
mov
xchg
push
sbb
jg
stc
sarl
sub
sbb
jecxz,pn
je
je
add
jnp
push
arpl
jl
cli
dec
mov
or
adc
sub
mov
dec
in
clc
adc
fwait
jo
fistps
shll
xchg
repz
fwait
enter
or
mov
cmp
insl
dec
jle
gs
dec
das
mov
ljmp
xchg
jno
addr16
test
pop
push
inc
jl
aaa
call
arpl
pop
adc
in
pop
adc
jmp
pop
push
mov
sub
sub
or
ret
dec
aas
or
ror
insb
mov
out
cmp
pop
sahf
shl
lcall
stos
mov
rorl
sbb
jmp
sub
adc
into
imul
popf
test
inc
fbld
mov
jmp
loope
adc
xlat
lret
or
lock
sub
lods
out
and
cmp
test
or
xchg
scas
sub
push
xchg
dec
mov
sti
popf
mov
outsb
lock
jns
fwait
repz
dec
iret
adc
int3
sub
cld
inc
dec
mov
or
mov
xor
ficomps
shlb
ja
imul
dec
aas
shll
movsl
jmp
lret
popa
cmp
test
push
lret
aaa
sar
aas
xchg
cli
dec
inc
xchg
cld
sub
dec
mov
rolb
mov
mov
das
movsb
rol
stos
repz
mov
stos
insl
adc
xchg
push
imul
cmp
push
subb
outsl
shlb
out
and
and
out
leave
rsm
enter
lock
add
inc
repz
jbe
push
movsl
adc
into
xor
addl
inc
ret
into
sti
lret
cmp
arpl
mov
dec
int
pop
sbb
scas
sti
dec
int3
js
mov
mov
int
or
jbe
mov
adc
mov
aam
push
xchg
fwait
stos
sbb
xchg
test
mov
mov
aad
sbb
js
bnd
inc
int3
mov
out
inc
test
ss
mov
mov
adc
jmp
adc
jmp
pop
mov
cs
mov
jno
jnp
stos
loope
cmc
xor
xchg
loopne
repz
add
fwait
pusha
jge
add
or
mov
or
pop
movsb
add
pop
cltd
push
popw
aaa
push
dec
fidivrs
sbb
mov
sub
lea
mov
pop
subl
imul
test
or
xchg
stos
cmp
and
dec
or
stos
hlt
cmp
pop
ficomps
push
cmpsl
adc
sub
scas
popa
mov
test
mov
mov
loop
adc
scas
stos
and
popf
test
cmpsb
mov
pop
or
cmpl
test
or
out
or
iret
jmp
add
repz
mov
mov
push
inc
imul
dec
fwait
and
int
repz
mov
xor
dec
sti
and
adc
pop
ja
xor
mov
sbb
scas
jmp
pop
mov
sbb
lea
add
xchg
jmp
pushf
sub
fstpt
cli
or
icebp
cmp
out
test
sti
jnp
pop
test
and
repz
fisttpl
sbb
ret
in
add
cmpl
jae
jge
arpl
jmp
sub
decl
arpl
cs
movsb
test
aas
sbb
imul
cmp
lret
sahf
imul
shl
jmp
rcrl
lock
xchg
fabs
imul
movsl
add
sbb
mov
push
cmp
sub
mov
loopne
jecxz
jp
fistpl
mov
push
xchg
stos
and
adcl
ret
das
dec
inc
andl
sti
and
mov
sbbl
xchg
lret
mov
adc
sub
inc
sbb
and
xchg
pop
ss
incl
loope,pt
mov
sbb
call
mov
jne
sub
cmp
push
push
fsubr
fcoms
mov
inc
mov
mov
pop
in
sbb
push
cmpsb
cli
xchg
sub
lods
das
adc
call
out
lret
dec
inc
ret
in
sub
add
sbbb
notb
push
xchg
sbb
in
inc
mov
adc
rorl
sub
rcr
pop
xchg
xchg
add
dec
sbb
aam
mov
sub
notb
mov
call
je
cmp
mov
xor
scas
stos
push
xchg
fwait
inc
xor
or
ret
xor
mov
pop
and
dec
cmp
xchg
push
cmp
add
dec
dec
add
pushl
pop
xor
mov
ds
jmp
pop
pushl
or
stos
xor
fwait
int
jg
mov
mov
andb
xchg
aam
dec
mov
mov
ds
enter
into
jle
rorl
stos
out
ficoms
xchg
imul
inc
fnstsw
push
push
pushf
add
cmp
mov
add
xchg
push
shll
and
outsl
cld
xor
xchg
subb
hlt
jnp
daa
mov
loopne
cmp
cmpsb
jmp
mov
test
cmp
and
fisubl
aaa
or
rolb
in
mov
fisttpl
inc
jge
stos
repnz
xor
xchg
sti
fstps
in
add
sub
adc
xor
stc
lret
and
jnp
add
add
sub
stos
cs
adc
mov
mov
mov
inc
cs
add
scas
and
insl
movsb
data16
push
loopne
mov
outsl
mov
pop
jecxz
icebp
lds
mov
mov
hlt
jmp
ret
and
repnz
repnz
inc
lds
pop
cmp
or
add
add
or
or
push
cli
mov
leave
pop
fidivs
pushf
cmp
in
pop
cli
cli
add
outsl
jp
out
dec
push
fcos
pop
push
and
arpl
mov
lods
nop
sub
ret
mov
mov
inc
cmp
push
push
and
rcrl
add
mov
cmp
cmp
lcall
movsb
fildll
xor
or
in
and
or
add
vpslld
jmp
adc
cltd
loop
or
addr16
xchg
push
movl
jae
sub
cmp
cs
dec
ret
cmp
lret
ja
out
ja
xor
pusha
mov
lahf
xor
sti
and
pop
xchg
or
je
movsb
pop
push
stc
js
cmp
push
mov
sub
sbbb
lahf
or
shlb
ret
jnp
fstpl
xor
pop
cmp
jle
pop
adc
pusha
sti
test
shrb
stc
scas
pop
or
xorb
pop
fistpl
xchg
cmp
ss
pop
cmp
loop
rcrl
iret
addb
push
shl
jae
clc
mov
sbb
fisttpl
fnstcw
call
lea
inc
cmp
xchg
neg
sbb
outsb
push
insb
repz
es
add
in
ret
rorb
adc
push
fiadds
out
sbb
jnp
push
mov
xor
fcmovnbe
cmp
or
jge
je
pusha
movb
addr16
xor
stos
ljmp
test
jl
jns
call
lea
roll
test
pop
push
insb
aas
cmpsl
out
xchg
sub
jo
popf
jmp
cltd
adc
or
mov
push
mov
mov
push
lods
push
push
mov
nop
xchg
sub
xchg
mov
pushf
sti
bound
adc
cmp
mov
pop
ss
xor
popf
pop
or
or
pop
and
out
pop
adc
lret
xor
sbb
and
push
dec
outsb
shlb
out
inc
dec
push
fadds
cmp
sub
inc
fisubrs
cmp
das
dec
dec
imul
xor
sbb
call
jno
xor
mov
pop
add
cmp
in
es
in
in
jo
lret
std
push
out
mov
ss
dec
lods
pop
ret
leave
aas
mov
jp
cmp
add
pop
cmp
out
ljmp
js
or
or
sub
pop
fsts
cmp
sti
dec
add
leave
mov
fidivrs
and
cmp
popf
and
xor
popf
mov
mov
sbb
in
fimuls
das
out
ret
fwait
sbb
cld
mov
mov
mov
pop
sbb
mov
outsl
push
mov
dec
lcall
jo
push
int
inc
aam
js
mov
mov
inc
pop
loop
mov
adc
in
and
out
ffreep
std
sbb
enter
jg
ret
adc
sbb
jge
or
and
adc
ret
mov
push
int3
push
insl
loop
int
sbb
shrb
movsl
lret
mov
add
adc
mov
cmp
push
pop
cmp
sbb
mov
jnp
jmp
push
adc
pushf
xor
ja
fidivrl
sbb
sbb
loope
sub
cltd
add
inc
mov
and
popw
sub
fs
xchg
or
in
addl
popa
and
mov
cmp
iret
pop
cmc
inc
dec
cmp
test
sbb
stos
outsl
or
fidivs
cmp
lahf
add
lcall
cmpsl
sub
pop
dec
ja
addl
mov
inc
xchg
push
xchg
subb
cwtl
add
cwtl
cmpsb
popf
add
filds
or
sub
jae
and
pop
sti
xchg
repnz
or
fs
daa
movsb
jae
push
loopne
testl
leave
mov
adc
in
push
cld
adc
bound
nop
shll
int3
cmp
cltd
cmpb
jbe
xor
outsl
sub
leave
dec
xor
sbb
push
hlt
xchg
xchg
call
or
add
ret
nop
and
stc
push
shr
inc
xchg
pop
sub
daa
mov
sbb
jp
inc
xchg
pop
mov
lahf
or
mov
enter
int3
mov
inc
flds
xchg
sbb
lea
adc
cwtl
xchg
aad
leave
xor
mov
cmp
adc
sbb
inc
ja
das
pop
lret
mov
rcrl
aas
add
cmp
repz
push
gs
mov
cmp
or
gs
jge
andl
mov
mov
sbb
or
stos
dec
in
mov
out
adc
mov
fstpt
subl
push
add
and
and
mov
lcall
lret
adc
adc
lcall
movsl
jne
pop
rcrb
das
mov
fdivrs
call
jnp
mov
pop
cs
pop
xchg
scas
andl
cmp
sub
add
inc
dec
cmp
cmp
dec
mov
xchg
lock
cmp
scas
or
mov
sti
insl
int
or
aaa
adc
inc
and
xchg
out
xchg
lods
push
add
mov
outsl
gs
jb
jle
xchg
push
adcl
cmp
and
mov
pop
xor
cmp
sbb
mov
adcb
xchg
loopne
jp
frstor
mov
mov
insl
dec
inc
mov
repz
inc
mov
movsb
cld
int3
push
mov
in
mov
pusha
stos
or
outsb
xlat
push
imul
aam
jle
inc
jp
pop
neg
f2xm1
xor
test
or
dec
pop
pop
and
xchg
xor
outsl
pop
orl
aad
adc
outsl
push
imul
pop
lret
jno
mov
aas
xchg
and
adc
push
mov
lret
pop
ret
fsubl
push
add
jo
arpl
test
and
in
jbe
pop
bound
sbb
jg
inc
dec
pop
adc
cmp
jp,pt
cmp
js
cmp
clc
cltd
mov
inc
pop
rorl
xchg
mov
xchg
cmp
sub
lods
xor
add
push
ret
pop
mov
rolb
push
adc
in
sub
mov
test
push
fistps
pop
inc
imulb
daa
cmp
sbb
pop
fldt
cmpl
sbb
pop
stos
stos
cltd
rcll
add
push
mov
lcall
lods
cmp
imul
xchg
out
or
pop
push
sti
inc
xor
aas
xor
je
mov
pop
fisttpl
daa
sti
je
or
flds
dec
ret
and
add
repz
test
and
mov
into
mov
or
das
test
addl
scas
push
pop
pop
das
fwait
pop
lahf
ds
fwait
subl
xor
push
in
sti
out
fdiv
lock
sti
lcall
je
sbb
ljmp
addr16
insb
cmpsl
pushf
cmp
mov
fcoms
ret
xor
mov
xchg
jg
test
filds
jge
imulb
or
add
stos
mov
iret
cs
ret
sub
shll
jecxz
jge
sti
mov
cmp
fwait
xchg
mov
and
sub
lret
repz
pop
mov
clc
ret
popa
negl
repz
jo
sbbl
sub
iret
repz
mov
subb
cmp
inc
xor
xor
dec
xor
fs
cmp
movb
test
mov
in
add
push
mov
jbe
push
sub
leave
or
rclb
and
push
push
lret
pop
fdivp
sub
outsb
mov
mov
filds
xchg
mov
inc
ret
sub
jnp
pop
inc
add
xlat
imull
add
or
sti
mov
dec
test
pop
xchg
addb
popf
mov
inc
fiaddl
inc
push
iret
pop
mov
movsl
mov
int3
out
push
mov
in
pop
stos
fnstsw
dec
mov
int
sub
pop
aas
in
push
xor
popf
xchg
and
mov
adc
addr16
and
or
mov
fisttpl
or
or
stos
sub
leave
scas
inc
inc
aam
xchg
pop
loopne
cmp
dec
pop
pop
pop
ss
fnstenv
daa
insb
gs
popf
fisttps
mov
mov
pop
mov
mov
push
xor
bndldx
adc
mov
mov
xor
pop
subl
imul
adcl
repnz
xor
push
testl
subl
dec
xor
add
xchg
pop
cltd
cmpsb
xchg
mov
adc
mov
mov
cld
imul
stos
sti
lods
adc
mov
xlat
mov
repz
xchg
xlat
mov
xor
or
inc
outsl
jae
stc
dec
pop
sti
add
incb
push
dec
lret
mov
xorl
xchg
pop
cwtl
das
xor
mov
repz
cmpl
fdivs
lods
mov
cmpsl
cmp
popl
jg
xor
or
sub
xchg
adcb
xchg
mov
imul
test
pusha
push
jmp
mov
and
rolb
xchg
call
mov
jns
mov
je
fstp
mov
faddl
addr16
sub
or
fstpt
sbb
xor
mov
in
mov
daa
test
xchg
js
aas
xor
cmpl
xor
mov
lock
dec
mov
pop
jg
sbb
xlat
mov
adc
jmp
xchg
adc
pop
outsl
cmp
mov
in
adc
jecxz
mov
fdivl
jg
frstor
cmp
stos
cli
cmp
mov
mov
or
test
pop
xchg
movsb
xchg
cmp
inc
sbbl
ds
stos
jno
mov
pop
pop
mov
dec
call
in
je
in
cli
push
adcb
pusha
mov
pushf
fldenv
xchg
push
xor
mov
aaa
jp
xchg
gs
cmp
fwait
jbe
jmp
jnp
rcrw
enter
xchg
ljmp
inc
jmp
out
xor
outsl
aad
xorl
rolb
popa
sbb
pop
cmp
loope
pop
sub
rcrl
inc
inc
ljmp
cmpsl
lock
add
sbb
sti
pop
mov
push
lret
cld
loop
inc
sub
fs
cli
loop
pop
jmp
dec
das
mov
or
lds
lcall
stos
push
scas
sbbb
ljmp
mov
sbb
pop
sarb
pop
scas
mov
adcb
mov
es
leave
call
add
jg
mov
add
add
mov
aad
aas
adc
cmpsl
mov
fsubrs
mov
add
inc
xchg
xchg
shr
cli
xchg
idivl
and
dec
mov
dec
mov
pop
out
jmp
xor
inc
cmpsb
push
testl
cmpsl
nop
fnsave
sub
cltd
jo
and
inc
sub
mov
xor
inc
pushf
loop
cs
add
filds
sub
or
xorb
lods
xchg
mov
xor
out
icebp
into
icebp
icebp
ss
dec
inc
daa
fnstenv
mov
into
xchg
fs
cld
ja
out
nop
adc
pop
or
scas
pushf
aas
sub
outsb
push
dec
int
out
lock
bound
add
dec
jle
repz
cli
imul
cltd
or
jecxz
cmpl
sub
inc
xchg
xor
call
fwait
ss
cmovg
add
stc
pop
inc
orb
icebp
inc
xchg
mov
test
cmp
pop
jle
or
jge
shll
stc
icebp
ja
loope
popa
jne
cmpsl
repnz
fistpl
aas
shr
lret
and
dec
mov
mov
mov
mov
js
pop
add
lahf
xchg
jnp
rorb
clc
jmp
das
inc
ds
xchg
mov
les
or
push
push
arpl
shrb
jb
into
iret
lcall
js
scas
inc
mov
sti
daa
inc
dec
fwait
xchg
das
fidivs
cmp
pop
adc
movsb
stos
xor
sti
sbb
int
je
sub
movsl
add
xchg
ret
inc
cmp
mov
js
decl
sti
fstps
sbb
xchg
pop
pop
stos
adc
scas
shr
mov
call
imul
jg
lods
inc
pop
jecxz
mov
movsb
inc
sub
out
nop
stos
xchg
xchg
sbb
enter
lahf
pop
lahf
xchg
arpl
mov
fiadds
pushf
cmpsl
imull
add
xchg
cmp
lds
mov
inc
pop
dec
inc
jnp
jecxz
jnp
fmull
mov
out
sub
divl
test
repz
aad
jae
jnp
lock
and
sbb
ficomps
xor
shr
dec
loop
repz
pop
mov
jnp
cwtl
add
js
mov
xchg
mov
push
lea
sbb
dec
lock
mov
lock
jmp
pushf
jmp
push
int3
imul
pop
cmp
dec
jae
pop
jb
sub
enter
sub
push
lods
sub
into
lock
dec
dec
mov
das
stos
mov
or
in
adc
into
adc
mov
mov
rorb
jle
pop
jecxz
inc
jecxz
in
mov
or
icebp
shrl
inc
aaa
xor
mov
push
rolb
sahf
lea
push
idivl
ljmp
loop
cmpsl
pushf
mov
mov
jnp
or
jnp
mov
xchg
mov
adc
das
mov
xchg
gs
scas
push
mov
and
cltd
stos
clc
jno
mov
sub
mov
or
jns
pushf
scas
mov
roll
fwait
cwtl
loop,pt
mov
fiaddl
add
mov
leave
jg
cmp
lret
outsl
push
cmpsl
es
rorl
test
cmpsb
pop
or
xchg
das
icebp
cld
or
gs
lret
xor
stc
stc
cwtl
dec
pop
daa
shlb
sbb
dec
aas
sub
adc
shrb
mov
sbb
sbb
lea
not
rcrl
adc
dec
pop
cmpsb
fisubl
jb
push
test
jp
fnstsw
hlt
and
stos
iret
ja
pusha
or
loopne
mov
and
mov
cmp
xor
lahf
and
es
arpl
and
sbb
xlat
xor
call
mov
mov
mov
cld
test
scas
ja
or
imul
inc
jnp
mov
fnstsw
inc
sbb
aas
in
mov
mov
dec
lcall
imul
in
and
xchg
pop
pushf
loopne
stos
movsl
lcall
add
cs
mov
insb
lods
cmpl
gs
xlat
jecxz
arpl
out
adc
adc
xchg
out
sbbl
push
dec
arpl
or
sub
xor
shlw
xor
in
mov
dec
je
pop
mov
push
cmp
cmpsl
xor
and
xchg
cmp
inc
or
cmova
movsb
addl
mov
mov
mov
nop
sti
push
fldenv
ds
mov
test
jmp
and
stos
add
sub
rolb
data16
out
cmp
mov
add
fistpll
insb
aaa
enter
pop
jb
mov
scas
orb
xor
or
mov
inc
or
pop
xchg
inc
jmp
mov
xor
inc
pop
incl
push
test
pop
inc
gs
xchg
jae
sti
test
push
nop
lcall
dec
cmc
cmp
add
popf
sub
sub
or
imul
out
xlat
cmpsl
in
enter
adc
or
mov
mov
and
pop
push
xchg
lods
cmpsw
iret
sbb
xchg
addl
ja
or
xorb
insb
sti
pop
xchg
fidivrs
pushf
fdiv
push
rclb
jae
jnp
js
pop
mov
sbb
mov
inc
or
out
jmp
mov
sbb
les
aas
push
mov
pop
xchg
lret
imul
das
jae
jo
call
movsl
or
into
stos
jae
mov
cmp
gs
sub
jg
mov
clc
mov
popa
or
cmp
xchg
pop
rclb
xchg
xchg
rcll
adc
xchg
xchg
or
push
xchg
aas
out
adc
dec
xor
out
mov
ficoml
test
add
add
ffreep
inc
addr16
dec
add
js
int3
xchg
dec
rorl
jmp
iret
push
mov
and
nop
in
gs
inc
inc
mov
mov
mov
lret
or
dec
sti
mov
les
sti
int
push
popf
cmp
aaa
aas
cmc
fiaddl
jmp
xor
sarl
fldenv
xor
pop
adc
or
pop
jmp
mov
mov
fmull
sbb
fcomp
ret
mov
shll
popf
sti
stos
sahf
cwtl
mov
mov
mov
cs
and
testl
nop
mov
icebp
ret
emms
mov
mov
int3
mov
adc
cmp
and
ret
push
stc
arpl
and
loope
inc
in
lret
aaa
mov
pushf
dec
loopne
dec
xor
frstor
add
jmp
cmp
push
and
bound
sbb
dec
adc
aas
adc
fs
cmp
mov
enter
mov
and
push
jo
cltd
clc
jecxz
mov
in
jge
lcall
fbld
mov
rol
rclb
pop
bound
shrb
jno
lret
xor
or
mov
inc
insb
ficoml
in
jg
cwtl
sub
nop
jne
outsb
pop
ret
push
pop
popa
jmp
rolb
sahf
jnp
xchg
popa
ljmp
jbe
jg
lock
dec
popl
sbb
adc
call
cld
adc
xor
sti
insl
stos
or
xchg
inc
andl
mov
enter
das
jg
jecxz
imul
jno
lock
jmp
gs
jmp
and
std
ficompl
decl
cwtl
inc
les
loop
repnz
ret
pop
sub
cmpl
movl
aad
arpl
les
andb
cwtl
push
xchg
jnp
subb
add
into
decb
jns
adc
insl
adc
jne
fwait
push
or
inc
and
xchg
insl
inc
push
xlat
mov
add
movsl
jae
cld
fwait
mov
ret
ja
loop
rolb
lret
nop
or
xchg
scas
loopne
mov
inc
ja
mov
sbb
test
jg
repz
icebp
xorb
adc
dec
cmp
lahf
pop
imul
or
outsl
loope
mov
loop
addr16
and
test
or
divb
cmp
addr16
stc
fisttps
adcl
xor
pop
out
out
std
mov
sbbl
inc
ss
dec
popa
pop
xchg
pop
dec
cltd
sbb
or
imul
fisttps
and
imul
gs
aad
scas
mov
add
cmc
ficoms
cli
cmpsl
add
xchg
mov
sbb
inc
mov
adc
cmpsl
mov
rcr
cmova
or
aas
iret
dec
pop
or
push
mov
jno
lret
popf
movsl
add
mov
cmp
lcall
inc
iret
and
xchg
pop
testb
adc
push
cmc
sbb
or
and
fwait
push
fisubrl
arpl
in
push
lret
dec
fistpll
dec
in
xor
xlat
add
loop
push
sub
mov
xchg
add
pop
arpl
xchg
pop
and
jae
push
cmpl
faddl
push
mov
aam
iret
cmp
xchg
xlat
rcr
mov
pop
inc
sbb
mov
and
adc
jg
lahf
xor
data16
cmp
lds
outsb
ds
pop
popf
jg
popa
xchg
push
insl
mov
dec
je
idiv
or
dec
push
mov
sti
add
xchg
xchg
insb
gs
pushf
ror
test
aam
inc
orb
push
jo
mov
mov
mov
mov
add
mov
arpl
lahf
push
adc
xor
fmull
repz
adc
pop
cltd
sbb
outsl
jbe
lret
or
xlat
or
rolb
pushf
xchg
test
jmp
aaa
add
mov
in
incl
insb
addb
fs
aaa
out
mov
fists
fwait
bound
fucomip
jg
stos
loope
cmpsl
mov
fistpl
cmpsl
xor
je
fmuls
inc
in
cmp
mov
mov
jnp
scas
mov
sti
adc
adc
cmp
test
sub
push
cmp
pop
xchg
out
jne
jb
rcrl
mov
sbb
jae
cmp
cmp
sbb
aaa
xor
add
and
pop
dec
loopne
adc
jl
iret
cmp
xchg
jae
cmp
mov
mov
ret
mov
inc
addr16
and
adc
fnsave
outsl
adc
adc
pop
imul
or
inc
rcrb
dec
xor
fwait
popf
dec
stos
sbb
ret
mov
pop
sti
sti
mov
out
pusha
sbb
pop
mov
aas
in
in
sbbl
jns
and
xor
cmp
ret
cmp
arpl
inc
loopne
mov
pop
add
mov
and
adc
mov
inc
mov
or
ror
mov
inc
pop
pop
add
adc
adc
xor
jecxz
ret
add
fxch
jecxz
mov
subl
pop
sbb
and
ret
pop
pushf
mov
mov
pop
sti
push
out
pop
mov
aam
mov
stc
fldcw
shrl
ret
xchg
lahf
cmp
inc
xchg
xor
mov
daa
or
dec
jno
jns
mov
ja
pop
ret
cmp
test
sub
cmp
pop
mov
and
mov
pop
inc
popa
fstps
push
push
test
data16
mov
dec
or
push
and
dec
sub
or
dec
xlat
xchg
loop
lret
subl
mov
sub
add
mov
stc
addr16
pop
scas
nop
push
aad
inc
mov
ret
xlat
ljmp
jnp
aad
loop
ret
repz
rcr
jg
cmp
jnp
gs
mov
xorb
jge
sub
ja
xor
adc
pop
push
addl
dec
ret
in
ds
fcomi
setnp
cmpsl
bound
iret
add
jno
sti
ljmp
pop
add
scas
dec
dec
mov
sub
adc
rcr
cmp
arpl
push
cmp
scas
addr16
dec
mov
int3
pop
into
lock
and
add
xor
test
out
or
mov
loope
sbb
gs
adc
imul
insl
fimuls
aas
push
stos
adc
pop
xor
pop
pop
push
or
insb
mov
jo
inc
stc
stc
fadd
mov
aaa
and
setae
xchg
pop
lahf
roll
xorl
pop
inc
mov
sub
mov
stos
and
inc
push
or
fs
cmpsb
imul
rcll
lret
jnp
dec
jnp
mov
push
inc
adc
mov
inc
jl
mov
mov
and
mov
dec
bound
popl
insl
jnp
mov
inc
add
mov
jae
lock
push
fnstsw
aaa
and
dec
decl
rcll
rclb
xchg
ret
dec
sub
push
sub
sbb
xchg
sub
out
imul
dec
rep
xchg
lret
fcoms
or
or
sti
into
jecxz
jecxz
enter
jnp
cmp
ret
cli
and
decl
vphaddubq
or
jae
icebp
stc
loopne
sahf
sti
cmpsl
into
lret
imul
mov
bswap
enter
mov
mov
or
mov
xchg
adc
lds
popf
xor
jnp
cs
xchg
es
popw
jae
scas
jg
test
in
push
test
or
jmp
in
push
sbb
sub
sbb
mov
push
ret
iret
jno
fs
daa
sub
aas
rep
jb
loop
fs
mov
xchg
pop
icebp
push
push
fnstcw
add
int
repz
pop
fcoms
and
lea
inc
stos
xchg
adc
cmp
mov
lcall
addb
jg
xchg
jmp
mov
inc
dec
mov
or
jmp
pop
or
pop
mov
fsts
lods
mov
inc
fldt
call
rep
or
cmp
pop
orl
rol
dec
pop
mov
push
push
pop
in
cmp
add
push
push
or
les
test
bound
pop
shl
cmp
leave
add
jno
jae
int3
jmp
sub
in
fldenv
sub
inc
xor
fwait
ss
pop
mov
dec
lods
outsl
cmp
test
pop
cmp
jl
out
pop
xchg
push
pop
in
ja
inc
add
movsl
cmp
jnp
pop
ficompl
pusha
stos
rcll
xacquire
mov
arpl
aas
sarl
mov
nop
imul
xor
adc
imul
jecxz
cmp
add
xchg
xlat
xchg
inc
mov
test
add
push
xor
fwait
ret
lcall
movsb
mov
xchg
mov
add
jo
imul
jae
inc
dec
cld
incl
xchg
xchg
push
movl
imul
shrb
aam
push
dec
rcll
fdivrl
rcll
mulb
adc
inc
cmp
aad
aas
pop
pop
inc
pusha
std
adc
jle
sbb
pop
xlat
xor
jle
mov
jnp
movsb
pop
push
test
inc
pop
sub
je
out
iret
pushf
add
or
rcll
push
repz
xchg
push
mov
lods
and
mov
arpl
and
xchg
repz
addb
jb
mov
incb
mov
jno
cmp
lret
test
rorb
pop
sub
ret
dec
popf
cmpsb
iret
stos
mov
aad
das
int3
call
mov
jmp
jnp
pusha
mov
mov
cmp
pop
mov
rclb
xchg
aad
adc
or
movsb
mov
cmp
mov
mov
dec
add
xor
cmp
subl
dec
scas
ljmp
push
out
xchg
out
cmc
xchg
xchg
mov
fwait
je
xchg
out
rorl
aas
sbb
fadd
sahf
adc
sub
ret
int3
insl
inc
cmpsl
sbb
arpl
jb
lret
push
push
shlb
mov
jmp
xor
xor
push
fwait
popa
lods
cmc
imul
cmp
lea
and
pop
sbb
movsl
or
negb
jnp
cli
fwait
scas
or
clc
daa
adc
frstor
sub
mov
out
pushf
es
push
outsl
lret
jg
pop
sub
cmpsl
inc
mov
pop
xor
inc
cmp
data16
ja
outsl
in
jnp
push
in
cmpsb
iret
scas
mov
aas
test
cwtl
xchg
movsb
rolb
popf
lahf
push
xlat
mov
pop
mov
push
addl
das
jns
jg
pushf
cmpsl
test
xchg
mov
mov
mov
aaa
int3
xchg
push
cmpsl
or
xchg
or
cltd
repz
repz
jmp
testb
sti
int3
pusha
pop
aam
pop
cmp
cmp
fisubrl
xchg
das
jne
pop
or
sub
jg
cmp
fdivs
jle
xlat
push
arpl
xchg
jmp
mov
inc
mov
mov
mov
xor
adc
dec
ret
add
cmp
lret
push
xchg
clc
insl
fdivs
je
fldenv
dec
stos
jb
push
pop
or
sub
test
lock
in
push
sub
pop
pop
incb
cmp
rcl
push
add
jmp
fadds
sbb
pop
xor
sbbl
stc
adc
pop
fwait
jle
add
das
mov
repz
daa
enter
xor
cld
scas
and
ret
mov
faddl
fldt
mov
mov
roll
psubsb
xchg
in
mov
cltd
repz
mov
sti
jge
sub
and
lods
mov
adc
mov
ljmp
mov
sti
test
jo
mov
mov
cmp
lahf
outsl
cmp
mov
pop
mov
jge
cmp
mov
mov
mov
dec
cmpsl
mov
push
imul
mov
test
push
lret
fistpl
mov
inc
cli
dec
mov
cmpb
mov
jp
mov
stos
scas
mov
jge
mov
sbb
idiv
outsb
adc
aaa
or
mov
push
mov
sbb
mov
and
rcl
xorb
sub
xchg
sbb
dec
jmp
or
cli
call
dec
out
ja
and
adc
imul
pop
leave
test
fmul
mov
sub
mov
cwtl
addr16
xchg
mov
imul
mov
add
adc
inc
fldl
pop
pminsw
in
xor
jmp
cmp
inc
inc
inc
mov
gs
fnstcw
pop
imul
jne
xchg
adc
mov
cmpb
scas
xchg
xor
aas
repz
jge
mov
jno
lods
mov
ret
sar
mov
sub
cli
mov
dec
in
icebp
inc
cli
push
jecxz
pop
lea
fnstcw
fld1
fidivrl
add
push
lea
sti
cli
pop
push
jecxz
and
mov
std
ja
mov
mov
data16
push
cmp
sbb
pop
addr16
je
insl
scas
sub
cld
adc
mov
adc
scas
ret
das
out
aas
cmp
icebp
inc
dec
negb
stos
sbb
inc
inc
inc
and
dec
dec
fsts
pop
adc
inc
daa
cltd
sub
lcall
or
mov
mov
call
push
mov
fwait
mov
cmp
jge
addl
cltd
push
jb
xor
add
cltd
and
inc
loop
fadds
inc
jge
leave
dec
mov
jle
mov
loopne,pt
cmpb
xchg
push
mov
inc
sbb
in
addr16
push
pop
mov
mov
ret
sbb
pop
fcoml
rep
sahf
insb
out
xchg
outsl
mov
addl
add
loopne
shl
ja
and
jmp
and
jp
sahf
inc
and
jg
fisubs
ljmp
outsb
jbe
fwait
jnp
dec
mov
xor
lcall
xchg
cmp
xchg
stos
into
jnp
lret
lret
mov
mov
in
add
stos
xchg
add
loope
std
sbb
lret
mov
fildl
scas
out
jo
xor
cmp
push
sbb
mov
dec
mov
sbbb
test
orb
jge
adcl
clc
mov
inc
test
lret
ja
and
add
adcl
jno
sbb
xchg
lcall
or
inc
dec
sti
and
shrl
ret
mov
addb
mov
adc
adc
in
dec
mov
mov
dec
negb
mov
out
cmp
pop
lock
adc
adc
dec
imul
pop
or
push
jl
mov
adc
xor
jns
into
push
stos
push
pusha
pop
setne
cmp
push
cmp
les
mov
fists
subl
inc
into
adc
fistps
push
jmp
add
lods
jg
movsb
adc
lods
jp
mov
mov
stos
mov
xchg
add
imul
sahf
adc
adc
jecxz
adc
inc
dec
sub
loope
mov
pop
imul
push
mov
inc
or
mov
mov
arpl
or
mov
mov
cmp
fldt
cmpsl
movss
daa
dec
out
test
dec
mov
js
orl
rcrb
inc
mov
stc
add
cmp
push
movq
push
add
into
test
and
out
lret
cmp
mov
cmp
test
jmp
push
repz
scas
out
repz
push
movsl
scas
cmpsl
pusha
jo
out
add
mov
daa
inc
xchg
sbb
mov
pop
repz
inc
inc
pushf
mov
xchg
cmp
lret
adc
arpl
mov
arpl
aaa
sbb
inc
outsl
xchg
and
pop
ja
repz
orl
lds
mov
mov
fwait
inc
sub
jno
bound
xchg
loop
ret
push
add
jmp
sbb
adc
jae
nop
cli
adc
enter
daa
je
lods
xchg
mov
fisttpl
inc
xor
ficompl
pop
fidivrs
mov
adc
rcrl
xchg
mov
or
mov
inc
fisttpl
mov
dec
lahf
and
pop
add
leave
inc
pop
rorl
lret
loop
fs
xchg
inc
mov
filds
and
inc
enter
push
dec
adcl
lds
and
rolb
jg
nop
sar
rep
xchg
xchg
les
ret
inc
test
insl
mov
out
sar
dec
push
jo
jnp
pop
xor
pop
lahf
adc
jle
xchg
lods
decl
clc
add
jne
mov
push
or
sbb
xchg
lds
shll
movsb
jnp
sti
dec
add
popa
pop
cltd
add
repnz
scas
dec
pop
pop
cli
addl
mov
jae
cmp
jmp
repz
aas
add
xlat
lahf
pop
jnp
stos
add
cltd
jmp
cli
xchg
cld
addr16
shrb
stos
sbb
sub
mov
jp
push
jg
fucomip
filds
xchg
fwait
inc
and
das
inc
add
and
sbb
lock
out
push
cltd
inc
dec
std
rol
scas
xchg
enter
add
mov
adc
icebp
lahf
push
inc
add
test
push
or
daa
mov
mov
fistl
andl
or
mov
xor
or
xchg
setge
cmpsb
jno
sub
roll
jnp
rolb
pop
in
in
sti
cli
scas
mov
insl
or
call
jmp
xor
in
push
pushf
loope
xchg
cltd
adc
test
loope
pop
push
adc
pop
and
jb
inc
cmpsl
jb
inc
shlb
hlt
test
mov
loope
and
rolb
xchg
popl
pop
je
lds
add
ss
leave
icebp
pop
rcr
or
or
sarl
scas
mov
jp
pushf
lods
clc
std
orl
xchg
dec
or
popa
xchg
daa
addl
jb
movl
lock
divb
adc
cmp
shr
mov
push
mov
mov
pusha
pop
jl
jl
xor
sub
add
mov
jecxz
fsubs
xlat
into
popf
lods
adc
jnp
adc
in
sbb
sbb
insb
mov
roll
in
dec
arpl
cmpsb
cltd
ret
lock
arpl
xchg
in
stc
fmul
sbb
and
pop
stc
mov
test
out
std
and
pop
jle
fistpl
mov
rorl
sub
testb
test
mov
mov
push
arpl
jb
loope
jae
mov
arpl
jp
xlat
push
test
push
mov
lods
cmp
push
das
movsl
lods
sbbl
mulb
imul
cmp
cmc
jg
cmp
out
syscall
mov
mov
add
in
rolb
call
add
stc
ret
hlt
fwait
icebp
lret
inc
imul
sbb
mov
and
jae
jne
cwtl
stos
ja
lods
add
pusha
cmp
mov
pop
js
cmpsl
inc
inc
faddl
xor
incw
mov
loope
pop
dec
out
divb
xchg
pusha
push
inc
fnstsw
sbb
xchg
mov
orl
int
cmp
test
imul
xor
dec
movb
inc
fadds
cli
push
xchg
push
sahf
push
xchg
cmc
dec
hlt
xor
dec
fistpl
rorl
in
std
cmc
xor
lret
or
loopne
mov
adc
sbb
sub
dec
jnp
test
and
and
das
movsb
faddl
leave
push
mov
test
fistps
lret
add
int
push
loope
inc
jo
xlat
fisttpl
sub
ds
mov
test
or
inc
add
lds
daa
adc
xchg
mov
sarb
jb
loope
inc
add
scas
add
cmpsl
sub
push
popf
jns
stos
adc
push
adc
jg
xor
pop
sti
jb
cmp
pop
and
pop
push
push
stc
or
sahf
jbe
out
cmp
sbb
add
xchg
sbb
out
jg
es
inc
mov
sbb
xor
pop
movl
add
xchg
sub
mov
es
jae
sub
dec
adc
mov
dec
pop
dec
mov
pop
xchg
std
adc
ficomps
push
es
jmp
xor
xlat
icebp
cmp
mov
cmp
subl
mov
ja
ret
push
or
pop
imul
shlb
adcb
xchg
ret
push
sarb
sub
pop
hlt
xlat
sbb
dec
mov
cmp
in
mov
xchg
stos
mov
jle
leave
ja
or
test
add
sbb
pop
cmp
xor
or
push
lods
stc
daa
push
jbe
jne
xlat
cwtl
daa
xchg
adc
mov
mov
inc
mov
lahf
jl
sub
sarl
leave
orl
sub
inc
mov
pop
pusha
enter
pop
daa
enter
push
imul
jne
icebp
ja
dec
mov
xlat
mov
dec
iret
xchg
dec
and
pop
push
mov
sbb
notl
sub
out
imul
fwait
lahf
sti
or
ret
cmpsl
rol
pop
stos
scas
inc
daa
addr16
mov
in
mov
nop
dec
sbb
fyl2xp1
xor
subb
std
pop
mov
xchg
mov
xor
xor
mov
mov
mov
aad
imul
bound
daa
mov
sub
mov
mov
add
sbb
jae
notl
sbb
cmp
std
cmp
jecxz
fisttpl
mov
or
pop
test
inc
fmuls
cltd
enter
mov
xchg
test
jne
mov
lcall
xchg
repz
xchg
loope
xchg
outsl
mov
mov
scas
mull
xchg
adc
ds
leave
push
std
into
add
sbbl
cld
push
xlat
jl
cld
das
adc
call
mov
jo
ret
out
pop
jge
insb
clc
mov
lahf
fsubrs
mov
push
call
sub
iret
push
push
push
das
mov
jp
sahf
inc
scas
sahf
in
push
repz
jge
sub
jmp
push
shll
shrb
orl
int3
xchg
jl
push
xchg
fcoml
cld
test
lret
clc
xlat
sbb
lea
cmc
outsl
ss
dec
push
push
inc
in
in
adc
stc
mov
fsubl
pop
out
jp
out
sub
sub
or
xchg
aam
divl
and
in
jg
cmpsb
adc
mov
clc
cmp
push
fwait
mov
imul
dec
imul
dec
dec
push
and
cmpsb
cwtl
aam
imul
lock
dec
mov
inc
and
inc
neg
mov
xlat
push
pushf
cmp
enter
lcall
mov
loopne
pop
inc
fdivrl
mov
sub
mov
xchg
stc
or
pop
push
clc
mov
je
ljmp
outsl
xor
and
mov
or
adc
int3
pop
push
cmp
lds
mov
idivb
and
test
mov
push
jge
jmp
add
push
jno
in
jns
mov
mov
je
stos
scas
outsl
sbb
cltd
das
ss
int
mul
inc
outsb
cltd
mov
mov
lods
adc
jmp
faddl
mov
bound
lock
loope
pop
mov
inc
sub
push
cli
jae
mov
xchg
inc
cmpsl
test
inc
rcrl
sub
and
es
inc
adc
sbb
stos
les
fwait
push
sbb
or
pusha
lahf
xor
daa
sub
clc
loope
fisubrl
movsl
mov
mov
lret
mov
rcll
aas
or
xchg
decb
loope
ljmp
shl
enter
lret
mov
sbb
xlat
scas
push
mov
stos
fdivp
pop
lret
pminsw
push
je
in
sahf
and
mov
xchg
mov
adc
pop
xchg
dec
adc
jae
and
mov
xlat
jno
adc
jo
cltd
into
adc
add
xchg
les
or
leave
mov
mov
insl
mov
jbe
das
scas
xor
xchg
fwait
pop
dec
cli
je
and
imulb
jno
cmp
ffreep
mov
shrb
add
imul
and
pusha
leave
xchg
ds
push
xchg
int
mov
cmp
dec
repnz
xchg
mov
imul
push
imul
mov
add
adc
stc
or
sarb
push
pop
pop
leave
into
test
andl
and
jge
cmp
jno
mov
jno
test
call
cli
and
mov
push
dec
shr
pop
cmc
mov
scas
insl
in
lds
rclb
icebp
lods
mov
jmp
mov
mov
xor
ret
sbb
xchg
inc
xchg
jns
cmp
xor
cmc
addr16
inc
or
repz
add
imul
icebp
xchg
cmp
xchg
jae
insl
lcall
popa
dec
into
aas
mov
sar
cmpsb
aad
ret
insl
push
adc
add
nop
cmp
push
gs
xchg
adc
lcall
pushl
fucomp
mov
sar
es
iret
das
mul
pop
jnp
jl
cs
mov
testb
mov
cmp
inc
icebp
cmp
and
inc
cmp
xor
push
subl
imul
add
stos
subl
xor
ds
insb
movsb
mov
push
imul
pop
ret
and
test
rcll
jne
and
pop
mov
ja
jns
mov
adc
mov
sub
cs
mov
pop
jg
dec
sti
jg
lods
lahf
xor
dec
jmp
inc
ss
cltd
mov
cmpl
sbb
in
call
sbb
mov
cltd
into
jne
or
fistpll
in
and
inc
xchg
cwtl
lock
jns
cmp
jge
cmp
test
ds
lods
xchg
outsb
sti
dec
lea
lods
mov
jns
mov
adc
pop
lret
xor
cmpsl
sub
sub
xor
push
mov
cmp
cmc
jb
movsb
incb
int3
jmp
xor
aam
cmpsl
lret
mov
sbb
xor
fnstsw
mov
xor
mov
pop
sub
lret
mov
dec
shl
jns
inc
mov
pushf
xchg
jns
mov
inc
pop
mov
int3
mov
loope
pushf
push
repnz
push
cmpsl
out
mov
sub
repz
and
mov
jae
popa
lea
xchg
fistpl
sub
loop
and
push
sub
sub
decb
jns
les
jae
sub
inc
mov
push
rorb
mov
push
enter
mov
dec
sbb
pop
in
pop
fdivs
push
and
mov
jmp
icebp
mov
loopne
pop
leave
mov
mov
jnp
addr16
loop,pn
mov
sbb
xor
jp
jnp
fimull
and
xchg
sub
pushf
call
leave
test
xor
nop
loopne
cmp
mov
movsl
ljmp
lea
aad
sbb
stos
lret
loopne
ss
sub
mov
out
cmpsb
pop
sub
xor
mov
inc
rcrl
into
loopne
mov
lret
fidivl
cmpb
sbb
je
sbb
imul
ds
outsb
fwait
sahf
xchg
in
mov
sub
aaa
xchg
xchg
fisubrs
or
or
xchg
lock
add
popl
jns
dec
ror
pop
rorl
push
call
or
imull
jmp
sub
lods
mov
dec
cmp
push
cmp
jp
dec
add
cmpl
stos
sub
adc
and
test
jbe
lods
daa
mov
pop
cmp
shll
dec
mov
repz
jbe
and
sbb
aaa
std
mov
orl
sub
adc
mov
mov
or
cmp
stos
shrl
sbb
stc
ja
mov
rcrl
sbb
push
jo
push
push
cwtl
test
push
push
mov
loop
push
mov
dec
xchg
dec
mov
xchg
xchg
mov
lret
adc
xorb
repz
fcmove
outsl
cli
icebp
and
int
xor
lret
outsl
scas
push
in
cmp
mov
inc
adc
bound
sub
hlt
mov
cltd
dec
dec
jne
stc
pusha
dec
pop
fisubrl
stc
xor
jbe
adc
xchg
mov
les
in
insl
cmc
or
hlt
jmp
adc
ss
sarb
lods
adc
dec
fsubrl
lock
pop
imul
test
lock
std
push
std
daa
call
add
adc
push
or
sub
sar
ds
dec
test
ja
nop
int
insb
lods
push
add
clc
mov
aas
cmp
lahf
dec
sub
jmp
addr16
pop
and
push
dec
push
lret
repnz
fmul
jno
dec
and
mov
and
std
jb
mov
shll
xor
xchg
imul
dec
add
or
cmp
mov
ret
cltd
sbb
rcrb
add
sarb
push
or
cmp
pop
test
sbb
mov
mov
pushf
leave
out
push
in
cmp
adc
pushf
mov
ret
pop
fnstenv
dec
add
daa
adc
mov
jbe
xchg
movsl
sub
cmc
in
dec
lods
mov
pop
add
jle
aaa
and
mov
jl
daa
push
cli
mov
dec
add
or
subl
test
inc
mov
pop
movsb
inc
sbb
mov
cmpsb
aas
incl
adc
test
or
mov
mov
sub
dec
stc
rorb
sbb
enter
lea
pop
jbe
jae
test
out
int3
push
outsl
test
cmpsl
jp
add
stc
mov
xchg
dec
xor
dec
popf
mov
in
lods
jbe
mov
imul
out
jl
pop
pop
outsl
dec
std
mov
cli
jae
jecxz
rolb
leave
cmp
add
clc
or
loope
andl
icebp
push
in
push
mov
jnp
dec
fstpl
xchg
clc
into
and
cmp
push
jo
or
sbb
mov
push
add
pushf
mov
adc
test
push
add
sub
mov
inc
aam
inc
mov
cltd
jno
dec
fstl
mov
adc
in
jnp
xorb
jecxz
add
push
mov
loop
sbb
jbe
scas
mov
pop
inc
cmp
jo
pop
and
test
test
mov
mov
push
lahf
pop
sahf
inc
pop
pop
mov
xor
mov
pop
push
jl
sbb
xor
or
or
out
adc
loope
add
ja
jl
xchg
mov
mov
stc
lretw
aas
push
and
add
sub
or
lahf
ret
andl
outsb
bound
mov
jecxz
add
lret
scas
lcall
loope
subb
pop
or
jle
test
jg
mov
pop
add
cmp
cmp
dec
adc
es
xor
sahf
sbb
add
sbb
lret
ret
mov
xchg
dec
add
mov
cmovae
or
rorl
inc
call
inc
adc
jp
adc
pop
mov
cld
subl
nop
sub
fwait
cltd
gs
pop
adc
mov
sbb
dec
call
dec
addl
push
lods
test
inc
test
aaa
jp
cmpsl
popa
frstor
sahf
lea
pop
pop
mov
movsl
sub
cltd
nop
popf
jo
leave
outsl
sub
stos
push
mov
push
sbb
xchg
sub
fs
cmp
sbb
jb
push
cmpsl
fdivrl
daa
xchg
sub
cmpsb
rcll
loopne
test
dec
sbb
and
mov
sub
jo
cmpsb
push
dec
xor
jae
gs
test
lods
mov
sbb
loope
shr
adc
or
and
cmpsl
xor
lods
and
or
cmpsl
repz
mov
bound
mov
mov
sub
adc
pop
push
testl
sbb
pop
and
and
xchg
out
or
lret
ljmp
sbb
pop
jns
out
push
jae
inc
jno
xor
mov
dec
xchg
fsubs
andl
dec
ret
dec
pop
test
imul
add
and
pop
push
loop
cmc
and
str
imul
sbbb
cltd
jo
nop
cmpsl
repnz
mov
mov
mov
mov
pop
outsb
cli
add
iret
pop
pop
mov
cli
arpl
adc
and
test
mov
pop
and
inc
ret
fldcw
les
leave
js
pop
inc
pop
fcomip
xorl
out
jle
xchg
cmp
cli
and
idivl
fs
push
lods
test
mov
fscale
push
mov
cmc
fs
sbb
mov
sbb
movsb
pop
hlt
pop
mov
add
aad
sbb
adc
add
xchg
shlb
or
test
sbb
and
mov
push
data16
pop
test
xchg
add
clc
cmp
ds
sbb
into
sub
cmc
movsb
outsb
dec
loopne
dec
sbb
lea
cmc
fistpl
push
inc
sbb
xor
cli
sbb
cmp
fwait
in
xchg
add
int
add
or
mov
test
mov
add
adc
xor
add
hlt
pop
in
movsl
aas
mov
addr16
and
fwait
or
push
jb
pop
adc
rcrb
popa
subb
jp
mov
sbb
xchg
pop
jle
pop
pusha
dec
jecxz
cmpb
ret
sahf
out
cmovnp
stos
fildl
jb
or
inc
addl
sbb
add
lock
pop
sub
mov
popf
movsl
sub
adc
push
aaa
mov
aad
jmp
aaa
jnp
mov
fdivrl
cli
or
pushf
jecxz
popf
mov
mov
sbb
roll
les
mov
dec
in
cmc
jns
or
jbe
add
mov
pop
pop
jns
lret
inc
mov
dec
xchg
stc
jp
cli
add
repnz
jg
loope
lsl
mov
test
mov
lds
and
mov
mov
xor
or
mov
lahf
test
les
inc
xor
shlb
cmp
mov
add
pusha
mov
mov
sahf
mov
and
mov
mov
dec
push
pop
mov
loopne
fwait
and
sbbb
lret
aam
or
testl
sbbl
scas
push
out
mov
xor
pop
test
or
mov
mov
pop
push
mov
jecxz
mov
lahf
lret
fildll
xchg
aaa
sbb
sub
lea
mov
mov
lcall
lock
mov
and
mov
add
flds
fcoml
jo
loop
mov
and
mov
pop
stos
inc
iret
out
ret
sub
das
out
mov
cmp
scas
add
and
cmp
dec
mov
pop
mov
popf
testb
sbb
adc
cmc
xchg
xchg
and
aad
out
mov
jmp
fisttps
cmc
das
add
jns
fwait
push
lock
mull
cmp
add
push
jno
lret
mov
sbb
sti
add
insl
jae
ficomps
mov
xchg
movsb
hlt
inc
test
add
and
push
cwtl
mov
out
movsl
fisttps
inc
adc
cs
jae
cwtl
mov
stc
cmpsl
ret
lret
push
arpl
jb
and
mov
cmpb
pop
lock
cmpsl
dec
shl
orb
enter
leave
inc
test
push
pop
push
jmp
clc
or
push
loopne
mov
loope
ljmp
or
test
sbbb
push
mov
mov
iret
out
lea
sbbb
lret
push
sbb
test
lods
mov
addr16
lods
ds
inc
push
out
mov
arpl
add
in
cmc
out
mov
push
sbb
iret
out
test
fadds
pushf
test
movsb
jb
cmpsl
pop
stos
outsb
jl
jge
das
xchg
add
mov
lea
out
sahf
int
lods
hlt
repz
dec
ficompl
inc
std
add
push
jns
cmpsb
xchg
inc
notb
lcall
imulb
ljmp
movsl
in
mov
cltd
push
cltd
mov
shll
dec
mov
cmc
in
test
and
dec
or
mov
ja
xchg
aas
les
adc
lea
adc
aam
jecxz
mov
pop
xchg
scas
mov
xchg
xchg
std
aaa
mov
xchg
sub
cmp
jg
push
cli
test
pop
popf
mov
dec
dec
jl
aas
or
push
adc
std
push
sub
mov
or
fdivs
cs
dec
in
xchg
xchg
sbbb
fldenv
addb
aas
adc
xchg
and
or
mov
cmp
or
notb
adcl
cwtl
sbb
pushf
or
add
mov
lret
fwait
stos
cli
iret
cltd
scas
imul
movsb
xchg
push
jl
xchg
adc
mov
lea
out
arpl
pushf
repz
icebp
imul
add
xchg
insl
imul
mov
or
adc
sbb
dec
pop
xlat
mov
lret
das
mov
inc
xchg
ljmp
xchg
outsb
aas
add
mov
insb
andb
sbb
stc
sub
fnstcw
xchg
stos
cmp
mov
push
mov
or
xchg
subb
sbb
or
inc
mov
sbb
mov
cltd
fstpt
jl
xor
adc
cmpsl
or
shlb
mov
aas
outsl
sub
lea
aad
push
sbb
and
test
mov
pushw
cmpsl
mov
mov
mov
push
ja
lds
dec
pop
testb
sbb
sub
xchg
insb
inc
enter
insb
repnz
sbb
push
cmp
push
jp
out
jbe
pop
jmp
repnz
adc
mov
mov
jnp
jge
sub
dec
jne
subb
and
sub
aas
hlt
xlat
sbb
sbbl
mov
adc
adc
ffree
xor
cwtl
mov
int
pop
sbb
adc
xor
cmp
push
mov
cmp
lea
in
xchg
out
sub
cmp
pop
sbb
mov
popf
add
sub
js
push
mov
pop
push
out
adc
mov
xor
push
fcoms
xchg
fs
cmp
push
insb
cmovl
call
inc
inc
sbb
bound
sbb
mov
dec
mov
mov
mov
movsl
js
mov
push
pushf
mov
xchg
or
aad
in
lcall
adc
sbb
lock
movsb
out
sbb
fwait
mov
sub
sub
mov
testb
mov
pop
add
subl
push
pop
pop
jp
xchg
cltd
jecxz
adc
or
cmpsb
sbb
stos
dec
mov
jecxz
in
or
xchg
test
push
push
jb
test
popf
dec
cmpl
sbb
push
test
sti
stos
cs
mov
xor
xor
aad
mov
dec
pop
sbbl
sub
loopne
es
adcb
sahf
loop
add
lds
sub
sub
cld
jmp
or
mov
xchg
arpl
out
cwtl
jno
and
movsb
arpl
mov
sbb
aaa
add
enter
adc
lcall
dec
pop
jne
icebp
js
dec
cmc
scas
cltd
push
dec
inc
mov
testb
mov
jge
scas
stos
movl
and
xor
xchg
dec
inc
inc
clc
dec
lret
mov
cmp
sub
rorb
in
sarl
sub
fs
push
repz
daa
cmp
inc
enter
lea
out
fs
pop
shll
mulb
sbb
fmuls
push
ret
xchg
add
xor
fnsave
pop
lret
aaa
arpl
repnz
adcl
das
aam
sub
fldenv
pop
adc
flds
jns
jmp
xchg
sbb
ficomps
inc
add
mov
xchg
loop
push
test
mov
pop
jno
xchg
jle
cmpsl
jecxz
aam
lret
pop
xchg
clc
or
push
pop
mov
es
mov
gs
push
fcomi
sub
jo
hlt
sbb
pop
or
into
push
jb
inc
jg
out
ljmp
stc
cmpl
out
mov
addl
cwtl
jecxz,pt
and
in
popf
sbb
mov
nop
stos
jns
mov
or
xrelease
or
aaa
lret
sbb
xchg
stos
arpl
add
push
mov
sub
jecxz
jge
add
and
adcl
xchg
test
js
test
sbb
or
divb
imul
sbb
add
in
adc
int3
or
jecxz
cmp
test
pop
inc
mov
stc
sbbb
sbb
mov
or
jne
adcl
arpl
jbe
add
inc
mov
fs
mov
pop
ret
pop
sbb
mov
mov
addl
push
sbb
mov
aaa
dec
ret
ds
push
add
or
scas
cmpsl
aam
dec
cmp
pusha
test
cmp
cmp
mov
lret
xchg
les
jp
popf
add
push
inc
and
and
test
sbb
test
sub
loopne
add
stos
mov
jecxz
jp
std
cmp
and
xor
test
iret
orl
inc
lds
xchg
dec
sub
ret
into
hlt
lahf
pop
les
pop
jge
gs
pop
inc
push
out
or
xchg
and
int
add
daa
ljmp
cltd
jmp
movsl
cmpsl
mov
xchg
shlb
js
sar
mov
rol
adc
cmp
cltd
xlat
dec
lea
ret
aas
leave
xchg
pushf
imul
sub
sub
adc
pushf
and
ja
sbb
pop
dec
ljmp
mov
sub
cmp
mov
clc
sub
lea
imul
aam
or
sub
and
xchg
mov
movsl
xlat
push
aaa
xor
xor
orl
pop
pusha
sbb
imul
sbb
add
nop
test
or
dec
loope
arpl
les
movsb
ljmp
and
push
mov
pushf
cmpl
adc
sub
ret
cmp
mov
mov
in
enter
jns
sub
xchg
js
pop
pop
add
or
xor
mov
sub
negb
lods
add
jbe
push
mov
nop
sbb
xchg
jp
ljmp
jbe
aas
in
pop
cmp
out
mov
pop
jbe
out
sti
jb
pop
sub
les
cltd
clc
push
and
lock
pop
out
push
popa
mov
cmp
fwait
cmp
mov
push
xchg
sub
dec
and
iret
add
into
fildll
add
jg
mov
xor
das
iret
stos
add
dec
les
push
pop
int3
imul
inc
leave
xor
push
xchg
out
lahf
jmp
fwait
roll
shrb
ror
adc
add
sub
inc
dec
inc
ja
ds
mov
adc
xchg
add
pop
or
fmull
cmpsb
adc
sub
xor
sahf
cmp
rorb
push
xor
push
sbb
lcall
add
push
leave
and
dec
inc
sbb
adc
and
and
sti
fwait
mov
stc
ficompl
lcall
sbb
popa
mov
sbb
add
mov
pusha
clc
das
jno
xor
int3
imull
jecxz
jmp
mov
push
jle
mov
sti
xchg
cmpsb
stos
mov
lock
jge
adc
pop
or
mov
in
add
jl
test
cmpsb
lods
inc
idivl
fstpl
xor
sub
sbb
add
pop
xor
dec
cwtl
mov
sub
and
loope
es
loope
adc
push
or
rcll
cmpsl
stos
lret
mov
fs
sbb
fisttpll
dec
xchg
mov
adc
fcomps
mov
outsb
inc
pop
stc
adc
cmp
addr16
pop
lcall
call
into
sub
dec
mov
jg
fcoml
cli
add
pop
inc
jge
mov
xchg
mov
cli
lock
pop
fmulp
ja
sbb
jle
int
inc
push
push
rorb
and
popa
mov
dec
lods
adc
adc
mov
sub
mov
loope
int
sub
add
mov
sbb
cmp
loopne
cmp
sbb
cwtl
xor
mov
mov
jmp
lea
sti
xor
es
fprem1
sub
aaa
iret
inc
mov
jecxz
test
scas
mov
push
leave
jmp
dec
jp
shlb
ret
sbb
mov
das
mov
adc
loop
cmpsb
push
or
subb
cmp
mov
dec
cmpsl
sarl
mov
mov
andl
cltd
xchg
push
js
es
testb
addr16
mov
shll
inc
mov
mov
xchg
adc
cmp
adc
fisubs
and
cmp
enter
shl
dec
add
jnp
cmc
pop
inc
adc
inc
pop
sbb
arpl
adc
jmp
imul
dec
push
mov
in
mov
inc
sub
mov
pop
mov
pop
test
fwait
push
inc
insb
adc
andb
repnz
lea
ret
enter
lcall
rorl
cmp
cmp
add
cmp
mov
aaa
jno
xchg
sbb
scas
inc
icebp
aas
add
jmp
adc
stc
inc
inc
xchg
out
xchg
sarl
les
sahf
xchg
sbb
mov
fwait
imul
lret
fs
fs
xor
or
push
scas
fsubrl
inc
or
sbb
add
cmp
pop
mov
dec
sbb
pop
aad
mov
sub
cmp
add
xor
fs
movups
je
inc
test
sbb
mov
cmpb
test
and
push
stc
cmp
jg
loope
cmp
adc
sub
fs
insl
pop
loopne
mov
sub
pop
jne
xchg
inc
or
rolb
jo
ss
ljmp
adc
lods
and
pushf
sub
mov
ds
cli
pop
and
xchg
push
pop
hlt
mov
mov
jnp
nop
adc
jne
pop
int
push
sbb
cmp
popa
loop
push
xchg
out
or
nop
mov
jo
test
sub
jge
mov
dec
imul
inc
mov
jmp
movsl
cld
paddq
sbb
mov
int3
add
loopne
and
lret
leave
aaa
shrl
fnstsw
nop
pop
push
fs
xchg
or
adcl
dec
mov
push
je
scas
fldenv
loop
jmp
push
mov
lahf
sub
mov
sbb
xor
mov
inc
leave
cmp
loop
or
xchg
mov
repnz
iret
adc
rorl
cs
jecxz
idivb
nop
jmp
mov
cmp
mov
js
xchg
mov
hlt
jecxz
sub
ret
cmpsl
out
jno
aad
int
andb
das
insl
push
or
mov
pop
sub
ret
testb
data16
sbb
inc
aad
jp
mov
leave
or
cltd
out
test
loop
subl
pop
and
in
cmpsl
ret
jl
jp
cmp
mov
inc
and
mov
outsl
outsl
or
inc
cmc
add
lret
ret
inc
stos
idiv
mov
xchg
cmp
lea
inc
sbb
in
or
shlb
or
cltd
and
outsb
ret
out
daa
dec
xlat
pop
pop
push
add
jbe
addr16
cmp
bound
mov
das
mov
pop
sbbl
sub
fistps
in
mov
out
mov
stos
shll
negb
jne
jbe
sbb
sar
xchg
sub
mov
pop
mov
imul
adc
gs
movsb
xchg
fistpl
call
gs
inc
sub
add
sbb
outsb
mov
dec
mov
xchg
rcr
push
cwtl
sbb
inc
mov
in
pop
fcomi
out
or
and
xor
push
imul
dec
mov
incl
xor
pop
fwait
fwait
cmpsb
jne
jle
fisubrl
mov
insb
in
sub
daa
les
data16
cmp
mov
dec
cmp
dec
pop
sti
mov
pop
mov
mov
mov
xchg
pop
jne
mov
inc
inc
mov
dec
ja
mov
int
movsb
out
push
arpl
iret
cmp
imulb
adc
cmp
shll
cwtl
xchg
xor
clc
push
loope
sbb
out
sub
add
push
mov
nop
sbb
shll
leave
or
ror
test
shll
pop
and
stc
clc
jg
jbe
sub
ror
sbb
repnz
dec
aaa
add
lret
or
cmp
mov
cmc
lret
mov
mov
idiv
out
sub
push
clc
jg
loope
mov
ljmp
test
jge
shl
add
jns
enter
mov
das
ret
mov
and
dec
dec
jl
insb
fists
pop
add
rol
sub
push
sarb
mov
stos
out
mov
lods
fidivrs
out
sub
movl
gs
mov
das
test
or
or
aam
iret
add
fcomip
cltd
in
movl
mov
ret
in
push
and
out
mov
iret
mov
ss
inc
fsub
adc
xor
ljmp
push
adc
lret
push
adc
fisttps
out
out
xchg
andl
add
aas
mov
shlb
mov
mov
xor
dec
add
jne
sbb
call
sbb
add
shlb
xlat
push
dec
ss
push
hlt
aaa
clc
jge
pop
mov
lods
imul
lea
jb
mov
jb
jmp
mov
cmp
insb
lahf
icebp
cmp
iret
ret
push
dec
sti
or
sti
add
ror
sbb
int
mov
xor
and
sub
sub
scas
or
test
mov
and
outsb
jge
sub
push
lcall
cmp
pop
mov
cli
cmp
loop
rcll
mov
sbb
jnp
repz
mov
adc
xchg
push
leave
sub
or
pop
cmp
sub
hlt
sahf
sub
inc
inc
add
xor
insl
pop
sbb
cmpsb
test
fstp
inc
mov
inc
pop
and
cmp
sbb
cmp
pop
int
divl
push
fldl
movsl
lret
fisubrs
leave
loop
notb
cmc
mov
div
push
xor
ljmp
mov
mov
cltd
mov
sub
jnp
movsl
lock
sbb
repnz
addr16
mov
pop
or
jg
in
ja
cmpsb
push
mov
repnz
fs
rcrb
enter
inc
outsb
loop
cmpsb
pop
subb
adc
inc
pop
xchg
jmp
jmp
xor
insl
fxch
repz
mov
mov
cwtl
push
and
cltd
in
test
ret
lods
mov
repnz
nop
repz
mov
xorl
sbb
lcall
sbb
outsl
dec
mov
or
mov
aad
xor
incl
fs
movsl
add
cmp
jnp
es
jmp
arpl
in
sub
pop
push
mov
add
jecxz
int3
std
lret
pop
insb
in
sub
jnp
lret
ret
jle
sbbb
cmp
or
jae
sbbb
add
sub
mov
lcall
sbb
and
in
ret
cltd
imul
add
in
add
mov
mov
jb
cmc
nop
out
add
jae
jecxz
inc
cmp
sbb
loope
jecxz
imul
hlt
dec
insb
ljmp
xchg
jle
sub
sbb
orl
fsubrl
test
inc
mov
sbb
in
push
xchg
xor
dec
push
scas
dec
and
outsb
sub
cwtl
hlt
push
movsb
sbb
std
mov
mov
jg
jns
push
aad
int3
insl
inc
add
sbb
mov
sub
dec
xchg
lds
inc
jo
xchg
iret
verw
sub
aas
divb
xchg
inc
add
fcoms
pop
aad
xor
xor
call
nop
lret
or
add
add
cli
addl
xchg
or
loope
add
les
ret
ds
mov
inc
adc
pop
divb
jge
lcall
cltd
cmpsb
inc
test
popf
aad
call
fdivrs
loop
lret
jmp
push
dec
cmp
mov
sbb
sbb
stos
mov
pop
sbb
lods
lock
sbb
loope
les
cmp
pop
adc
pop
sbb
mov
int
sahf
leave
pop
jo
arpl
jno
cmpl
ja
mov
lret
add
mov
push
ret
add
rorb
ss
lahf
pushf
jg
arpl
ret
jns
fnstenv
jl
sub
mov
dec
loop
cmp
popa
lds
pop
add
rclb
jnp
mov
out
xor
std
sub
shll
js
icebp
fistpl
inc
add
stc
sub
xor
loope
stc
test
jae
push
into
fdivs
pop
mov
xchg
mov
mov
dec
or
scas
jg
repz
sub
mov
fbld
adc
ficomps
inc
sub
pop
push
loop
lret
test
adc
sbb
mov
aaa
outsl
dec
pop
xchg
xor
rolb
andl
cmpl
jno
in
push
addr16
fs
gs
and
subl
scas
mov
ljmp
loop
mov
daa
or
sub
cmpsl
sub
cs
scas
pushf
cmp
push
jb
cli
mov
fwait
push
cld
add
and
imul
test
ja
and
sub
test
sub
add
les
jnp
ss
cmpsl
into
lea
das
mov
test
shll
adc
mov
jb
fwait
aas
ja
dec
xor
and
mov
dec
jp
mov
pop
pop
xchg
jb
outsl
mov
adc
add
hlt
cmp
andl
inc
es
mov
test
in
mov
cwtl
insl
dec
pop
push
fldenv
adc
dec
orl
lods
add
xchg
shll
mov
add
adc
cmpsl
lret
aaa
xchg
jge
stc
xor
or
mov
or
ds
pushl
push
mov
loope
pop
sub
sahf
mov
xchg
call
push
std
push
imul
add
loopne
jns
aam
jg
mov
pop
mov
not
in
cli
nop
and
orb
shll
xor
ret
mov
popf
leave
loop
pop
mov
and
hlt
in
mov
pop
in
push
sbbb
and
jl
fdivrs
push
and
popa
ret
sub
add
push
xlat
sbbb
rcrb
dec
sub
cli
xchg
xor
and
loop
gs
pop
enter
jne
loop
add
mov
insl
jge
sbb
lds
and
sarb
xchg
fistl
pop
ret
inc
xor
ds
jnp
mov
mov
pushf
cwtl
xchg
jmp
xchg
add
jecxz
jp
lret
pushf
sbb
inc
and
xchg
pop
sbb
repnz
sub
and
repz
mov
call
daa
dec
mov
rcrl
mov
stc
stos
imul
arpl
lret
sbb
ret
dec
pop
add
push
arpl
push
mov
scas
sbb
push
sbbl
adcl
mov
mov
cmp
push
scas
das
orl
mov
add
sbbl
das
stos
sahf
or
xchg
leave
gs
xchg
fcoms
test
mov
cmp
add
lock
enter
mov
sbb
aas
mov
lods
dec
and
mov
ret
cmp
inc
xor
fimuls
int
sbb
dec
out
fistl
in
sbb
cmp
sbb
jl
mov
mov
or
jb
pop
push
ja
pop
test
js
or
popf
jbe
lahf
or
sbb
inc
xchg
cs
and
xorl
mov
test
int3
mulb
and
repnz
pop
push
adc
and
cmc
sbb
and
fwait
or
jnp
shrb
lcall
js
outsl
mov
pusha
cmp
sub
jmp
cwtl
push
sbb
and
in
scas
mov
sbb
and
push
push
push
pusha
mov
jno
mov
adc
cmpl
adcl
xor
add
shl
out
dec
xchg
or
pushl
movsl
push
mov
scas
int3
sbb
andl
sbb
popa
xchg
adcb
andl
xchg
pushf
ret
insb
pop
fsub
inc
or
add
pop
test
pop
ja
cltd
int
repnz
jno
mov
mov
outsl
add
add
je
jo
stos
dec
pop
std
sbb
mov
mov
mov
dec
sub
aam
pop
or
xchg
xchg
mov
movsb
rcrb
pop
or
stos
jne
mov
bnd
add
push
fcoms
push
bound
xchg
pop
ud0
mov
xor
call
pop
mov
mov
in
cmp
adc
push
xchg
jp
je
lsl
push
fstpt
sbbw
dec
mov
lea
dec
out
push
pushf
das
pusha
or
and
mov
movsl
jg
xchg
adc
fisttpll
inc
dec
cmovge
adc
dec
sbbl
or
sub
daa
pop
out
mov
movsl
push
popa
mov
xor
and
out
mov
adc
pop
push
divb
add
stos
sti
fsubl
push
sbb
sti
fiaddl
jge
sub
xchg
xchg
fwait
xchg
sub
pop
lcall
stos
mov
rorl
aam
xchg
adc
lods
add
add
cmpsb
ljmp
add
sti
mov
loop
test
ss
and
out
jle
stc
out
dec
jo
sahf
leave
lds
popf
or
cli
xchg
hlt
xchg
sub
sbb
jp
mov
fsubl
popf
or
aad
aas
or
mov
add
insb
xor
pop
sbb
pop
stos
test
out
cmp
push
dec
stc
imul
push
inc
imul
adc
cmp
rcrl
in
add
and
enter
imul
and
pop
insb
out
mov
int
and
jo
lret
leave
inc
or
cmp
mov
loop
add
sub
adc
out
xchg
loopne
push
aaa
out
mov
xor
push
pop
sbb
shrl
push
pop
rcrb
rcll
mov
or
sarl
add
adc
dec
add
mov
jno
sahf
push
sub
inc
shrl
mov
mov
lret
pop
gs
xor
mov
jb
inc
push
cmp
cmp
pop
lret
cmp
outsb
gs
mov
jp
jae
mov
pop
out
mov
sbb
fistps
mov
add
dec
shld
sahf
push
mov
push
xchg
mov
shlb
or
dec
mov
test
in
repnz
daa
jl
stc
dec
sbb
mov
ret
addl
push
sarl
decl
mov
fsubs
mov
dec
xor
stos
sbb
jb
and
inc
dec
icebp
arpl
jo
mov
pop
pushf
nop
sub
mov
loope
cmp
insl
xor
push
scas
pop
testb
cmp
push
or
ja
cmp
jp
push
dec
sahf
pop
test
addr16
adc
sti
pop
icebp
adc
xchg
pop
ret
adc
jge
and
cmp
ret
xor
jo
mov
outsb
adcb
pop
pop
sub
push
sbb
adc
mov
xor
in
inc
xchg
int
bound
xchg
ret
jnp
cmp
jb
cli
jle
in
test
testl
aam
daa
sub
rcll
sbb
dec
repz
lods
gs
test
outsb
das
sub
xchg
mov
adc
or
sub
shrl
lahf
addl
sbb
jae
iret
mov
cmp
add
jg
fmulp
outsb
repnz
dec
mov
or
xor
mov
dec
adcb
ja
test
cli
aam
add
sbb
xchg
stos
mov
jmp
fnsave
fbstp
and
mov
inc
js
cmpsl
iret
or
das
cmp
inc
insb
icebp
mov
cmp
cwtl
sub
xor
pop
sub
aad
or
sti
daa
sub
lahf
sub
sub
pop
ja
sub
pop
jno
js
mov
xchg
into
add
add
pop
lock
pop
cmp
rcrb
les
pop
es
aaa
push
cli
aaa
insl
add
jl
rcll
mov
adc
repz
lods
pop
in
jge
sbb
or
jp
lcall
rorb
and
pop
mov
dec
pop
out
subl
push
mov
or
xor
fcomip
fucomi
lds
mov
inc
add
mov
cli
adc
div
inc
fs
and
in
loopne
jle
push
xchg
pop
lods
add
adc
push
dec
xor
movl
add
add
cmp
sbb
into
cli
push
inc
enter
aad
pusha
adc
inc
cmpl
repz
aam
add
add
stc
xchg
dec
out
orb
xchg
imul
cmp
mov
roll
mov
add
mov
pop
push
cmp
dec
pusha
jge
aaa
xchg
aaa
fistl
pop
cli
push
popf
mov
xor
mov
xchg
pusha
cltd
mov
test
xchg
mov
jecxz
roll
pop
mov
add
inc
stos
mov
add
sbb
xor
cmp
cltd
fsubrl
sbb
adc
ret
into
jp
and
jecxz
jge
and
push
cmp
arpl
add
aam
sub
push
sbb
mov
mov
inc
xchg
jecxz
ret
adc
sub
inc
cmpsb
repnz
out
or
jnp
pandn
je
and
adc
xor
stos
das
sub
or
cmp
sahf
fstpl
sbb
add
into
mov
adcl
mov
sub
les
xor
hlt
xorl
or
pop
out
jnp
clc
cmpsb
push
out
sti
mov
push
neg
mov
fnstsw
add
stos
xor
mov
pop
and
adc
xchg
mov
loopne
outsb
push
int3
repz
and
push
notl
mov
add
or
out
dec
mov
repnz
mov
adc
sub
lock
icebp
std
mov
mov
popw
push
gs
pop
test
xchg
icebp
sub
in
mov
lret
mov
mov
xchg
dec
sub
push
cltd
data16
dec
mov
mov
mov
pop
mov
mov
xchg
and
xchg
js
push
sbb
cmp
lock
test
cmc
enter
cmp
out
add
outsb
std
in
data16
in
sti
pushf
fistpl
repz
add
add
outsb
add
mov
stc
pop
in
jmp
fists
or
push
sbb
and
push
push
nop
and
aam
popf
mov
push
rorl
test
xchg
aad
mov
test
andb
mov
xchg
fdivr
ret
mov
sub
cs
adc
rolb
pusha
sbb
movl
add
testl
jno
sbb
mov
pop
inc
es
dec
mov
add
xor
fimull
dec
cmpb
push
pop
pop
adc
fcmovne
orl
fwait
pop
mov
ljmp
pushf
sbb
sbb
das
fisttpl
ret
sbbl
push
fnop
xor
xchg
insl
popf
mov
icebp
jb
push
ljmp
test
adc
ljmp
push
or
add
addr16
cmp
loopne
cwtl
cmp
add
in
arpl
fucomip
sub
je
aad
or
ja
push
loop
and
jno
mov
lret
xor
pop
aaa
loope
inc
pop
and
dec
dec
fimull
les
mov
daa
ds
rclb
aas
push
ljmp
dec
cmp
lcall
pop
loop
ljmp
and
out
mov
sub
add
mov
enter
mov
xor
loop
adc
and
sarb
mov
mov
jmp
xchg
iret
dec
pop
div
ffreep
bound
pop
cmc
xor
in
sar
push
arpl
dec
aaa
push
add
xor
sbb
xor
and
adc
imul
pop
stos
shlb
push
insl
movsb
inc
push
ss
nop
pop
aad
add
fistps
fcomip
add
out
je
lret
jp
xchg
mov
push
sub
lahf
pop
test
cli
out
sbb
int
stc
leave
fisubrl
das
pop
rdtsc
push
or
push
ret
cmp
xchg
cltd
xchg
data16
imul
jnp
lods
jbe
jmp
pusha
pop
inc
xor
repz
out
inc
add
outsl
and
outsb
lea
push
test
sub
cltd
adc
incb
pop
subb
sbb
rcrb
sar
adc
xchg
xorl
js
xchg
lahf
sbbb
pop
nop
lea
out
sub
sbb
pop
movsb
lock
fstl
cwtl
movsl
jle
cmpsb
pop
push
pop
mov
out
pop
fildl
aad
sub
or
inc
push
sub
dec
xor
imul
lret
mov
adc
sub
clc
cmpsb
fdivrs
das
pop
cld
dec
xor
movsb
pop
mov
mov
xchg
test
cli
mov
xchg
xchg
and
sub
repz
xchg
lods
ss
jl
dec
mov
loope
cmp
mov
cmpsl
mov
in
jae
cltd
or
jge
test
cmp
push
sar
stos
sbbl
icebp
in
xchg
popf
add
icebp
pop
add
mov
jg
popa
sbb
jg
insb
sbb
pop
xor
mov
xor
jne
add
aam
and
pop
js
mov
and
xor
xorl
dec
mov
sbb
notl
push
push
leave
sbbb
mov
mov
fmull
rcrl
das
jo
mov
leave
cli
fistps
mov
push
mov
lea
cld
push
dec
push
addl
add
stos
rep
mov
jg
sbb
call
outsl
jbe
mov
mov
icebp
adc
sbbl
sub
jae
push
dec
sbb
addl
jno
nop
icebp
inc
sbb
cmp
and
mov
call
cmpb
mov
sbb
fisubs
or
hlt
bound
iret
adc
xor
jbe
addr16
push
xchg
jbe
mov
mov
push
cmpl
mov
push
cmp
xchg
push
pop
andb
push
loop
adc
mov
sahf
movsb
mov
iret
sbb
fdivl
lock
xor
jns
arpl
fidivrs
mov
nop
sbb
sarl
xchg
mov
cmc
sbb
mov
out
add
sbb
mov
dec
jo
in
outsb
scas
xor
cltd
xlat
push
ja
das
xchg
and
loop
data16
or
iret
adc
dec
fcomi
shr
les
xchg
mov
jmp
xor
lods
sbb
cmp
fs
sub
movsb
cltd
mov
xor
xor
addr16
addr16
rcrl
aam
pop
sbb
cmp
dec
xlat
push
ds
sbb
mov
jns
das
js
pop
inc
int3
push
dec
xor
sbb
pop
pop
sbb
test
and
and
daa
cmp
jge
pop
lret
mov
push
sub
ljmp
scas
icebp
pop
es
dec
cmp
mov
cld
daa
subl
int3
lcall
push
pop
int3
mov
dec
shrb
test
mov
gs
mov
clc
leave
sbb
dec
fldcw
mov
and
dec
in
sbb
mov
adc
dec
pop
or
addb
cmp
dec
cltd
push
insl
cltd
add
pop
jnp
out
xor
mov
enter
test
mov
add
cmc
pop
mov
js
or
in
inc
loope
xor
push
lret
mov
sub
js
mov
mov
add
shrl
add
movb
lea
jno
jae
sub
out
hlt
ljmp
fwait
lods
fdivr
mov
repz
sub
mov
pop
leave
jle
aaa
mov
aaa
bound
sub
gs
icebp
dec
imul
ret
push
mov
mov
out
mov
ja
dec
scas
sbb
jg
pop
inc
rcrl
or
mov
sbb
inc
sbbl
adc
out
mov
data16
mov
ja
push
pop
lock
aam
inc
stos
dec
cmp
stos
and
popa
push
daa
or
andb
xchg
jp
push
aas
add
add
stos
lahf
cmp
repz
adc
repz
push
mov
adc
sbb
or
aam
aad
int
jnp
fsubrl
repz
mov
in
pop
inc
push
ljmp
sub
mov
ret
rol
mov
loopne
jle
jo
push
sti
add
mov
dec
pop
pop
push
sbbb
scas
dec
test
rcrb
pop
int3
insb
xchg
jecxz
push
hlt
ss
lret
stos
enter
hlt
push
pop
andl
shl
sub
scas
dec
add
imulb
mov
pop
pop
mov
mov
mov
pop
adc
mov
adc
out
mov
xchg
mov
inc
in
in
jb
xchg
jg
mov
jne
test
sub
xchg
sbb
add
mov
repz
sti
out
int
lods
mov
dec
pop
sub
std
xchg
jge
cltd
add
popf
xor
movl
mov
xor
cmp
pop
dec
xor
fcmovnbe
repnz
popa
xchg
push
xor
mov
fs
cli
bound
or
out
ret
fwait
icebp
in
fcoms
fldl
mov
imul
jmp
pop
push
push
xor
jle
sub
call
inc
cld
je
add
dec
sub
fwait
or
xchg
mov
inc
push
sbb
rorl
mov
push
push
lret
pop
dec
mov
and
repnz
add
push
xchg
mov
push
mov
push
pop
dec
lcall
ds
scas
cmp
xor
adc
push
xchg
sti
fidivl
push
mov
inc
fcmovne
pusha
jle
test
jl
test
fs
pop
pop
sbb
lret
push
repnz
icebp
rcrb
push
mov
inc
icebp
sarl
mov
dec
xor
push
mov
lret
sub
leave
loop
lods
fisttpll
push
xchg
js
loope
stos
pop
call
pop
inc
cmp
ja
mov
mov
cmp
mov
lods
jmp
fdivrl
mov
sti
je
mov
xor
mov
pop
add
fwait
clc
or
subb
xchg
cmp
lcall
jae
pop
and
xor
out
iret
rorl
lock
jae
test
fldcw
xor
xchg
pop
cmp
clc
adc
ljmp
aad
sub
loopne
je
sti
pusha
imul
sub
jp
mov
cmpsl
jne
or
adc
aad
mov
mov
inc
out
mov
push
and
dec
pusha
jae
cmp
fwait
and
dec
repz
test
mov
fistl
adc
sbb
xor
hlt
cli
pop
into
jmp
test
xchg
sub
scas
fsubrs
ds
mov
hlt
sbb
sub
cmp
xor
jno
cld
cld
mov
cmp
icebp
fistpll
mov
add
sub
xchg
lret
movd
push
sbbb
or
leave
jo
jmp
mov
dec
mov
stc
popf
inc
out
xchg
insl
lods
push
jae
xchg
fcmovbe
test
cli
dec
inc
cli
test
xor
push
jl
xchg
xor
out
dec
daa
mov
xor
addb
push
add
mov
pop
mov
pop
inc
sbb
cmpsl
insl
inc
cmc
pop
call
mov
dec
jnp
pop
mov
andl
cmp
adc
pop
stc
sub
sbb
mov
mov
call
rcr
imul
push
xchg
push
fisttps
jo
xor
insb
out
pusha
dec
test
rcrb
push
mov
mov
jmp
repz
cmpsl
shll
pop
mov
xor
test
pop
int3
cmp
cmpsl
jnp
pushl
lods
jecxz
aaa
lea
sub
movsl
xchg
inc
mov
pop
inc
cmp
mov
data16
pop
xor
lds
mov
xchg
rorl
in
decl
jo
xor
mov
mov
scas
cs
lods
jl
sub
sarl
or
dec
xor
pop
dec
fs
sti
movzbl
and
mov
xchg
aaa
stos
orl
mov
xor
sub
popf
cmp
mov
leave
xchg
data16
xor
stos
das
ss
out
mov
std
inc
xor
jmp
xor
pop
les
and
shrb
inc
mov
or
sbb
xor
or
pop
mov
nop
sbb
adc
push
in
shlb
push
out
cmp
push
dec
leave
xorl
sbb
test
sub
pop
outsb
jl
pop
mov
dec
add
xlat
mov
xor
ret
fdivrl
leave
xor
jge
mov
jge
mov
add
mov
loope
sub
jmp
adc
mov
pop
mov
pop
adc
mov
mov
xchg
aad
xor
xor
mov
jmp
mov
sub
imul
lret
mov
jbe
mov
sub
fdivp
or
sahf
jmp
cwtl
add
mov
cmp
sub
cmpsl
sub
fdivl
cmp
mov
cmp
sub
loopne
aaa
sub
dec
js
cwtl
mov
orb
jo
push
sbb
pop
mov
mov
outsl
ljmp
dec
jno
mull
out
xchg
std
or
imul
and
and
inc
in
ja
int3
jl
jmp
add
xchg
mov
add
movsl
inc
push
cmp
xchg
pusha
rcrb
and
jl
inc
fsubs
ja
fdiv
outsb
xor
gs
mov
test
das
push
add
subl
insb
pop
out
mov
pop
cmp
adc
cmpl
mov
sbb
aam
xor
mov
stc
or
inc
mov
pop
test
or
xchg
push
cmp
test
add
cwtl
or
mov
pop
adc
sub
sbbb
mov
jno
mov
loop,pt
lea
inc
xlat
enter
mov
stos
out
dec
push
cltd
mov
jmp
add
sbb
inc
push
jg
notb
push
dec
fnclex
inc
push
lcall
je
popa
pushf
test
das
mov
sbb
mov
stos
sub
lods
mov
add
lds
leave
subl
push
arpl
fldenv
cld
in
push
lock
je
loopne
xchg
sub
les
push
mov
pop
cmp
je
movl
test
adc
cwtl
sbb
xchg
mov
sub
lahf
mov
ror
adc
cmp
sbb
call
ss
or
cmp
push
out
insb
push
mov
pushf
xor
dec
xor
subl
mov
outsl
std
notl
mov
cld
imulb
subl
sbb
push
in
sahf
xchg
sbbl
push
pop
out
dec
fstpt
mov
dec
arpl
jmp
adcb
ret
sbb
mov
sub
rcll
pop
push
jecxz
out
fildll
add
inc
outsb
std
fsub
inc
dec
lea
popf
pop
fwait
das
lock
pop
cmp
pop
js
inc
outsb
iret
inc
jno
mov
inc
ret
adc
and
sti
lret
adc
test
cltd
push
xor
pop
inc
call
loopne
ret
fs
aam
fisubrs
insb
lret
lret
or
sbb
in
imul
pop
pusha
and
add
inc
add
mov
push
pop
rorb
mov
rcll
xchg
call
sarb
sbb
inc
jp
imul
sar
ret
incb
push
in
enter
pop
mov
pusha
and
fldcw
popa
fbstp
cmc
jge
push
mov
pop
pop
mov
inc
add
lds
adc
sbb
dec
int
mov
lods
ret
pop
testl
jl
rol
add
adc
push
pop
push
mov
out
bnd
psrad
pop
fdivr
inc
push
movsl
push
and
fildl
mov
daa
std
pop
in
daa
mov
mov
add
cmp
insl
jne
repnz
or
test
inc
sub
sub
cli
sub
ds
pushf
jae
icebp
mov
and
repnz
mov
das
adc
test
insl
pop
mov
or
mov
jns
aad
sbb
out
xor
cmc
or
out
shlb
mov
sub
int
out
push
add
mov
je
push
lods
jmp
dec
dec
ljmp
ljmp
inc
orl
test
movsl
mov
xchg
insl
jmp
out
add
mov
loopne
ljmp
xor
xchg
out
push
cmp
sti
add
enter
adc
ds
dec
mov
cmpsl
mov
pop
mov
fidivs
mov
movsl
in
clc
jp
hlt
push
hlt
mov
pop
sahf
dec
lock
gs
mov
push
je
pop
sarl
cmp
fwait
inc
clc
dec
aaa
sub
inc
xchg
dec
call
sbb
xor
movsb
in
js
out
cld
pop
push
add
xchg
jmp
jg
xchg
fbld
in
mov
sbb
jae
lea
xchg
sbb
pop
dec
mov
cs
out
fcomps
daa
and
mov
pop
aas
test
mov
cmpl
xchg
enter
mov
rolb
adc
and
xor
sbb
ret
mov
dec
xchg
lahf
dec
ja
xchg
jne
or
mov
les
sbb
ljmp
mov
jb
cmpsb
add
ret
div
mov
push
scas
xchg
loopne
add
ljmp
push
mov
push
xchg
mov
loopne
subb
add
and
push
mov
fdivr
jnp
hlt
jp
xchg
shrl
adc
cli
mov
xor
mov
push
or
push
jnp
lds
jne
cli
jge
psubsb
lea
cmp
xchg
fwait
mov
xor
cmc
lsl
sbb
jge
hlt
scas
hlt
frndint
add
inc
je
cld
movsb
int
cwtl
xchg
sbb
fadds
lcall
mov
in
mov
inc
and
sub
das
mov
negl
jl
xchg
push
mov
andl
dec
dec
mov
aas
stos
pop
call
lea
movsb
fdivrp
lret
pop
sti
add
push
jbe
adcb
cmc
and
and
mov
push
push
sbb
mov
flds
fidivl
jp
data16
insl
dec
sarb
daa
mov
sub
divl
les
push
cld
mov
push
sahf
mov
ljmp
mov
jno
push
push
mov
cmpsl
in
cmc
push
pop
loope
push
xchg
iret
addb
ret
jns
ljmp
outsb
sbb
add
movsb
push
pop
add
je
jae
loope
or
jo
imul
mov
push
scas
movsb
fsts
dec
arpl
shrb
jne
testl
push
jle
bswap
push
add
sub
xlat
and
out
sbb
orl
pop
jno
add
mov
add
pop
add
pop
cmc
push
popf
mov
push
lea
enter
roll
cmp
adc
cwtl
dec
xchg
push
lods
mov
divb
push
push
cwtl
mov
or
adc
cmp
cmp
inc
mov
roll
loop
mov
xchg
xor
ds
test
xor
dec
jbe
sub
xor
xchg
daa
ljmp
sbb
jmp
cmp
xchg
adc
dec
das
mov
mov
and
fpatan
aad
push
jb
adc
sub
sarl
adc
cmp
mov
mov
jno
out
fnsave
mov
cmp
mov
lahf
jns
dec
xorl
push
stos
sbb
lahf
push
mov
shrl
insl
inc
in
mov
int3
fstps
jae
rcrl
lods
pop
loope
cld
pop
rcrb
inc
les
in
push
push
pop
mov
adc
ror
mov
fs
mul
sbb
pop
xor
add
cs
movsl
or
mov
out
push
vmwrite
inc
scas
jp
pop
xchg
mov
adc
je
ljmp
insb
outsb
mov
add
movsl
pop
lock
rcrb
sbb
inc
out
inc
add
dec
xor
dec
inc
jp
fnstcw
mov
jns
or
arpl
jecxz
and
or
mov
add
mov
cvtdq2ps
in
mov
testb
out
aaa
subl
out
sahf
xchg
scas
lock
inc
mov
add
jnp
insb
lods
rolb
xchg
mov
arpl
test
cwtl
mov
bound
shll
xchg
push
pop
cs
cltd
mov
mov
and
mov
or
sub
mov
jmp
insb
push
xchg
mov
pop
xor
popa
fnsave
add
int3
inc
sbb
sbb
add
js
mov
int
shrb
in
ds
jle
out
jl
test
rol
sarb
add
jmp
dec
scas
pop
jecxz
divb
sar
mov
dec
cmovp
sbb
add
addb
add
mov
push
mov
jl
sarb
jae
dec
lcall
insl
in
sbb
ljmp
jo
adc
push
fwait
inc
pop
in
mov
out
sbb
ja
sub
and
adc
jge
and
mov
outsl
add
xlat
out
fs
jbe
inc
push
jg
dec
lods
push
inc
mov
cltd
xor
push
test
inc
fistps
xchg
es
jnp
dec
fistpll
mov
sbb
sbb
push
icebp
cwtl
cmp
mov
fs
test
sub
sti
lret
fcomps
xor
xor
fwait
insb
xchg
push
xchg
push
add
push
in
lret
push
sub
cltd
ss
dec
xor
sbb
sbbl
mov
ds
enter
sbb
cmpsb
cld
in
lds
fs
mov
mov
cld
cmp
lea
pushf
xchg
stos
das
jg
or
jle
dec
jo
cmc
negb
xchg
mov
ficomps
pop
mov
push
fsub
pop
das
sub
ds
sub
jnp
ret
xchg
subl
dec
sahf
mov
inc
fbld
popa
pop
mov
lods
scas
jecxz
mov
push
add
push
push
xchg
sbb
sbb
add
add
jne
leave
xor
adc
movsb
push
lods
lea
cld
stc
jo
inc
push
or
sbb
in
mov
adc
push
push
fbld
gs
dec
mov
mov
into
mov
xlat
and
or
xchg
out
cmp
jp
sub
mov
push
sbb
lahf
ror
andl
test
into
inc
add
mov
cmp
mov
push
pop
bswap
js
mov
xchg
repz
add
or
sbb
push
mov
add
stos
adc
push
sub
pop
jp
les
mov
jae
or
lods
into
nop
imul
add
jle
mov
add
cltd
hlt
xor
jecxz
lcall
enter
pushf
hlt
in
mov
int
hlt
jecxz
mov
mov
and
addl
xor
sub
cli
cmc
inc
fisttpl
inc
add
mov
push
jg
bound
sbb
and
cmp
out
aad
shll
or
dec
inc
fiadds
pusha
xor
outsb
popa
add
or
xchg
inc
adcl
aaa
cmpl
rcll
push
add
aad
ja
lcall
or
lds
xor
cmp
or
push
adc
stos
adc
add
sbb
mov
and
test
aam
push
loopne
inc
leave
pop
pushl
les
xor
outsl
adc
push
in
inc
andl
inc
lds
notl
cmp
decl
shll
lea
testb
pop
mov
mov
scas
scas
xlat
es
mov
mov
mov
xor
cmp
or
movsb
pop
or
jecxz
pop
outsb
jb
out
jle
mov
xlat
add
lods
cmp
test
pop
mov
sbb
push
mov
mov
mov
outsb
aas
push
xchg
movsb
cmp
add
int
mov
cmpsl
das
push
sbbl
push
push
mov
xchg
xchg
and
cs
sbb
mov
jmp
cmp
mov
mov
push
mov
popf
std
dec
ret
or
and
bound
adc
movsb
jno
mov
xor
dec
jecxz
div
add
lret
je
ljmp
adc
add
lahf
rclb
loope
add
sbb
push
ret
sbb
stc
dec
add
sahf
hlt
or
jb
fisubs
xor
ror
rorb
adc
inc
xchg
arpl
test
data16
mov
lods
js
lods
add
push
js
cmpsb
pop
sahf
cmp
mov
mov
ja
add
pop
xlat
sub
pop
arpl
andb
cmpl
lret
mov
sbb
inc
pushf
pop
icebp
adc
idivl
cwtl
inc
imul
sub
mov
incb
shll
in
outsl
daa
sbb
test
scas
mov
ret
std
xchg
adc
mov
mov
loope
idivb
pop
call
lock
mov
lods
outsl
into
popf
pushf
les
pop
push
pop
jle
aad
pop
mov
mov
push
push
push
sbb
cwtl
dec
adc
sub
add
add
sti
sub
fcompl
int3
sarb
pop
sbb
add
fadds
lds
mov
loopne
mov
push
bound
push
add
jno
xchg
daa
sbb
aad
fucomi
inc
int
jnp
inc
mov
and
cmc
inc
je
adc
sbb
fwait
and
mov
out
jae
jp
int
push
ljmp
enter
cmp
fsubr
es
or
fcoml
ret
sbb
sbb
cmpsb
dec
test
test
mov
dec
pop
inc
out
imul
lret
pusha
fdivs
outsl
xchg
mov
scas
sarl
mov
aam
in
fdivs
jg
sbb
loopne
cmp
jl
loop
movsl
jmp
jae
mov
ja
ss
xor
cmp
xor
pop
popa
dec
into
insb
fnstcw
sti
mov
mov
lret
adc
test
int3
sub
add
repnz
and
mov
sbb
pop
add
cs
cmp
pop
jns
sbb
mov
xor
and
mov
cmp
jl
rclb
pop
lods
push
push
scas
out
mov
sub
mov
sub
cmp
push
or
cs
pop
lret
or
fists
lods
dec
cmpsl
sbb
in
call
cmp
in
out
mov
outsb
testb
outsb
pop
ds
loope
test
mov
lock
adc
adcl
jmp
popa
stos
pusha
mov
xor
inc
rcrb
insl
mov
lea
mov
jo
dec
sbb
push
fistps
insl
pop
test
mov
pop
pop
pop
jnp
pop
loope
and
test
sbb
pop
cli
xor
inc
add
mov
jno
xlat
sub
icebp
repz
xchg
mov
ficoml
xor
xchg
in
add
sbb
jle
mov
je
ret
insb
sarl
mov
mov
jle
jns
outsb
mov
mov
insb
add
fisubrl
dec
mov
imul
outsb
mov
negl
xor
divb
ss
lea
pop
push
fcom
out
add
jne
popa
mov
insb
push
cmpsb
lock
xchg
mov
pop
clc
ficomps
lea
repnz
add
fbstp
out
xor
repnz
xchg
push
cltd
jg
rcrb
jns
fiaddl
lds
ficoms
jns
stos
sbb
cmp
xchg
fcmovbe
fistps
sbb
xabort
pop
dec
ds
imul
mov
inc
adc
mov
mov
and
daa
mov
mov
sbb
std
pop
jo
push
add
popa
fstps
cmp
and
mov
xchg
pop
or
shll
repz
test
mov
hlt
movsl
outsl
fiadds
and
mov
adc
jl
loopne
jnp
stos
loope
lret
adc
xor
jo
pushf
push
ret
fsincos
pop
testb
cmp
shl
in
fiaddl
outsl
das
pop
push
cmp
dec
mov
fcmovnu
fdivrl
repz
shl
pop
pop
xor
ja
jnp
push
push
mov
adc
ljmp
pop
insb
stos
scas
mov
ret
mov
sub
inc
pop
loop
out
pop
aam
or
mov
movsl
dec
push
testl
xor
or
push
arpl
xchg
and
or
add
mov
dec
and
stos
dec
cmp
cmc
or
mov
pop
xchg
push
and
add
out
mov
or
std
sbb
mov
adc
mov
cmp
ja
sub
scas
leave
insl
testl
enter
lret
nop
jl
sbb
roll
movsb
outsl
cmp
sbb
aaa
pop
ja
xchg
lea
negb
add
incb
dec
jne
xor
pop
push
movl
test
mov
call
mov
inc
icebp
sbb
sbb
cmp
inc
mov
pop
add
orl
add
push
push
pop
rorb
outsb
test
movsl
orl
add
push
and
fisubs
rolb
ljmp
cli
push
cmc
lds
aam
sub
hlt
stc
add
mov
xor
jle
in
cs
push
data16
cs
sub
pop
xor
or
pop
int
popf
mov
sbb
imul
push
scas
add
sbb
scas
jne
in
mov
cmpsl
shll
and
inc
lidtl
add
adc
jmp
popa
pop
sbb
je
push
popa
cltd
icebp
jb
outsl
je
inc
sbb
mov
add
cmc
in
dec
aam
add
imul
pushw
shrl
popa
and
das
sahf
cmp
push
mov
clc
xor
mov
push
call
lods
aas
cld
mov
test
ds
sbb
and
cmp
out
dec
lds
adc
nop
add
fcoms
roll
stos
xchg
inc
jg
fwait
pop
and
out
lock
push
daa
fcoml
mov
cmpl
fidivs
ret
or
adc
pop
ss
mov
push
idivb
sbb
inc
cmp
test
jp
mov
std
push
mov
lods
push
push
push
js
jne
mov
into
dec
adc
xchg
mov
sub
fildl
jae
and
xor
sbb
loop
in
enter
dec
mov
scas
inc
ljmp
cmp
cmp
adc
adc
jnp
bound
in
or
les
mov
push
dec
ja
testl
sbb
xchg
ss
xchg
add
mov
outsb
push
or
xchg
sarb
lcall
mov
test
sbb
xorl
shrb
or
mov
out
arpl
lods
jne
jmp
cmc
jmp
mov
scas
les
outsl
add
scas
lea
lods
pop
xor
test
mov
push
orb
add
repnz
jle
sbb
and
stos
inc
mov
pop
push
addb
add
aam
pop
cmpl
and
test
adc
xlat
and
repz
aam
and
push
out
add
xor
xor
sbb
inc
fsubrs
xor
clc
xor
jno
mov
shll
and
popf
pop
ja
sbb
and
add
repz
pop
repnz
sbbl
lds
shlw
xchg
cmp
sbb
push
les
adc
xorb
mov
hlt
lea
push
inc
inc
in
jge
mov
scas
dec
or
pop
popa
cmp
test
out
inc
insl
or
mov
add
movsb
in
push
cmp
cmp
lret
mov
mov
shrl
push
mov
call
xchg
jl
jge
add
sti
shlb
call
push
cmp
push
push
fnstsw
add
loope
cmc
pop
imul
mov
in
bound
jbe
jle
xchg
push
into
lahf
mov
push
jbe
xchg
out
push
aam
outsb
xchg
test
xor
movsb
xchg
pop
aaa
out
movl
xchg
hlt
cwtl
push
addb
cmpsl
out
aad
jnp
or
aam
xor
mov
es
mov
mov
jg
cmpsb
mov
jns
sarl
lods
add
mov
push
jle
out
pop
rep
call
mov
rcrb
push
cmp
pop
ret
fstps
mov
lcall
mov
cmpsl
cli
mov
inc
add
icebp
shlb
ljmp
insb
adcb
out
movsb
in
xor
int
cmp
imul
jo
jp
jnp
xchg
sub
in
push
lea
repz
sahf
scas
sub
rcr
cmp
add
jo
repz
xchg
mov
shl
arpl
lret
mov
aaa
cmc
call
mov
loop
xor
rorl
or
orl
repnz
sub
push
cmp
mov
cmp
shl
repnz
outsl
and
adcl
xor
mov
test
sbb
push
cmp
mov
xor
test
jae
mov
xor
xor
cli
add
push
stos
mov
sar
xchg
bound
jb
loope
nop
imul
add
mov
jl
ret
hlt
jb
fsubrl
adc
xchg
add
and
es
sbb
fimull
inc
jp
ss
pop
arpl
xlat
std
push
stos
iret
mov
sub
push
int
jbe
cmp
mov
inc
mov
push
cmp
das
cmp
push
mov
mov
repnz
dec
rorb
jecxz
jle
movsb
mov
loop
bsr
fstpl
push
or
pop
sbb
popf
mov
inc
inc
nop
mov
divl
loopne
add
scas
push
sub
sub
stos
mov
out
sbb
js
les
cmpsl
push
fs
lret
mov
fists
add
mov
inc
jle
mov
adc
andb
jno
loope
je
imul
jne
shlb
sbb
idiv
ss
je
jle
and
outsl
les
mov
inc
loop
xor
cmp
leave
imul
lock
sbb
mov
lea
mov
lods
or
subl
cmpb
clc
cld
add
mov
sub
aad
xchg
sub
ljmp
adc
shr
aas
mov
sti
cmc
dec
call
or
lods
push
lds
sbb
leave
ljmp
imul
xchg
pop
and
nop
add
ret
or
std
or
fsubrs
add
out
stc
test
enter
or
cmp
xchg
cmp
jbe
sbb
sbb
xor
push
or
adc
inc
sbb
cmpsl
leave
dec
add
adc
sahf
cmpb
scas
xchg
pushf
jae
jae
mov
loopne
push
mov
andl
mov
mov
xchg
sbb
sbb
push
in
std
dec
mov
je
popf
bound
mov
mov
adc
popa
outsb
out
pop
mov
adc
lcall
adc
and
xor
orl
bnd
xor
hlt
shll
fnsave
mov
inc
push
out
fiadds
jmp
jns
dec
jecxz
push
xor
cmp
int
xchg
and
xchg
sbbl
pop
mov
repnz
mov
push
xlat
cli
inc
dec
xor
ljmp
xchg
mov
test
mov
cmpsl
fdivr
mov
cs
mov
movsl
fcmovu
push
movl
pop
fld
or
mov
aad
addl
out
add
jbe
sbb
add
mov
xor
cltd
pop
cmp
xchg
daa
xor
jbe
cwtl
cmc
xchg
dec
testl
mov
add
push
outsl
sbb
in
ja
xorl
pushf
imul
popa
sub
jl
fcomi
jb
and
in
outsl
ss
je
mov
inc
out
in
out
iret
sbb
aas
push
rcrl
jbe
mov
stos
sbb
outsb
inc
push
and
add
and
fimuls
ljmp
jg
hlt
gs
mov
cmc
xor
jmp
adc
lock
sub
fstsw
add
cmc
filds
push
aaa
jnp
in
and
push
imul
stos
fisubrs
mov
inc
mov
std
mov
addr16
mov
inc
xor
jae
mov
test
out
les
sub
aam
enter
xchg
xor
or
fwait
int3
xchg
mov
xor
rcrl
cmp
pop
cwtl
mov
mov
lods
fnstenv
icebp
mov
adc
mov
cltd
and
inc
rolb
jne
or
dec
or
testb
push
jns
or
cmc
lret
idivb
fistps
lahf
loopne
push
lock
mov
add
lds
mov
rorb
test
jge
adc
fcompl
dec
sub
sbb
fsub
jne
jae
enter
or
xor
push
cmp
sbb
adc
mov
mov
jns
xchg
and
scas
mov
jbe
ja
ret
push
xchg
mov
push
fbstp
mov
push
mov
mov
sbb
scas
jne
xchg
dec
push
cli
cmc
sti
mov
in
and
or
xchg
or
jge
xchg
mov
out
jnp
mov
fcmovne
add
repz
inc
add
mov
sbb
xor
into
adc
lock
jle
xor
in
fistl
jb
dec
push
lcall
pushf
movsl
mov
fstpt
loop
imul
jno
cmc
jle
mov
jg
cmp
push
fists
rcrb
cwtl
jmp
out
push
insb
and
out
sub
ret
ficomps
mov
in
xchg
inc
in
add
ds
mov
pop
mov
cwtl
repnz
sub
or
out
incl
sbbl
je
mov
pushf
cmp
addl
sub
data16
ja
rolb
mov
enter
push
cli
pop
dec
fisttpll
push
fiadds
inc
sahf
pop
es
xchg
int3
and
jecxz
nop
xchg
fldenv
xor
movsb
cmp
cmp
pop
xorl
pop
movsb
insb
mov
cmp
xchg
andl
sub
mov
and
sub
and
jo
int
ret
pmulhw
shll
inc
inc
jo
jnp
in
inc
mov
icebp
mov
popa
insl
mov
push
push
dec
cmp
add
lcall
cld
pop
sbb
and
data16
fdivrl
cwtl
orl
fidivl
cmp
xchg
cmpsl
and
jne
cmpsb
cmp
lock
inc
scas
ret
aas
pop
jns
push
fldln2
add
call
cmp
jl
outsb
ja
pop
test
call
pop
flds
pop
mov
mov
test
pop
int
xor
inc
mov
push
test
cs
out
icebp
fiadds
test
pushf
ret
imul
cmp
mov
cwtl
adcl
rep
sbb
pushf
push
test
jae
push
jo
sbb
aam
ret
or
pop
mov
pop
les
jne
in
sti
xor
add
daa
adc
inc
cmp
pop
aam
fsubs
sbb
push
push
push
int3
sub
jle
mov
mov
mov
push
movsl
dec
and
sbb
dec
test
jmp
dec
xchg
sahf
arpl
adc
and
add
xchg
add
sbb
cmpsl
inc
adc
add
lock
aam
aas
dec
test
pop
clc
sub
lret
cmp
xchg
shrb
push
stos
cmpl
mov
push
mov
int
sbb
bound
std
sub
js
loopne
dec
repz
sub
lret
movsl
cld
movsb
jmp
jb
mov
mov
and
adc
mov
mov
ds
jecxz
gs
pop
mov
mov
mov
push
pop
in
mov
iret
cltd
add
mov
movsl
mov
dec
sbb
clc
mov
add
pop
and
fists
je
xchg
cmp
mov
cmp
test
push
insl
movsl
jp
jmp
cmp
clc
jmp
cli
adc
arpl
out
mov
cmp
inc
int
pop
push
sub
add
shl
gs
pop
xor
outsb
fwait
adcl
jb
mov
hlt
in
mov
int
sti
jg
pop
scas
pushf
fldt
sub
xor
enter
scas
clc
dec
sub
mov
leave
lahf
and
mov
dec
pop
mov
lahf
xchg
and
sti
pusha
mov
xchg
pop
xor
fadds
jle
adc
mov
jns
push
cmpsb
sbb
rcrl
mov
ja
lods
icebp
ljmp
push
inc
push
jae
into
rorb
add
in
sti
lret
clc
call
cmp
xor
out
push
pop
add
mov
in
daa
cmpb
add
divb
ja
xchg
data16
add
sahf
push
dec
cmpl
dec
sbb
dec
cmp
mov
in
add
xchg
out
pop
stc
pop
add
cs
scas
lcall
mov
push
push
sub
test
aad
adc
lea
pop
add
sbb
inc
data16
je
inc
jne
fidivl
push
icebp
outsb
test
sub
fiadds
rcrb
and
mov
inc
xchg
stos
xor
sbb
imul
addr16
fstps
pop
je
push
loope
jae
or
lcall
push
lds
mov
aam
sbb
cwtl
nop
xchg
cmpb
push
push
cmc
xor
aad
lahf
stc
loope
sti
mov
js
add
mov
aad
dec
outsl
repz
fistpll
into
mov
mov
jle
fisubrl
aam
test
mov
imul
xchg
cmc
adc
mov
lret
or
or
mov
in
push
jbe
jno
dec
outsl
aas
add
scas
js
mov
movsb
out
adc
sbb
test
or
mov
or
sbb
cmpsl
test
sbb
cmp
sbbb
mov
jmp
or
fcomps
pop
loopne
addl
aad
adc
cli
adc
mov
rorl
push
cmp
sbb
jne
jg
pusha
add
mov
ficoml
mov
push
idivb
sti
mulb
and
xchg
leave
out
mov
dec
jb
xchg
bswap
dec
lock
dec
adc
pop
mov
ljmp
pop
mov
repnz
ret
divl
scas
or
mov
jge
push
mov
test
sbb
sub
cli
dec
pop
sahf
add
xchg
jne,pn
es
testb
sub
xchg
mov
in
lret
je
push
std
sahf
out
jne
inc
xor
add
icebp
xchg
andb
sub
mov
cld
shl
sbb
in
pop
push
adc
xor
and
enter
push
imul
test
mov
sub
or
mov
sbb
int3
sbb
cmc
lea
mov
test
push
add
scas
push
popf
jle
aad
sbb
rcl
or
out
pop
push
stos
repnz
mov
cmp
xor
inc
sbb
in
in
cmpsb
stos
mov
mov
add
test
dec
mov
mov
mov
mov
sbb
int
fwait
inc
push
xor
leave
push
mov
data16
mov
add
jl
xlat
push
pop
xor
lret
xchg
not
sbb
or
aad
add
pop
ss
pop
imul
lret
jecxz
add
or
data16
or
jns
mov
aad
cmpsl
fcomip
test
bound
jp
les
outsb
push
pop
mov
adc
cmpsl
stos
movsb
push
icebp
xor
mov
daa
daa
lret
in
in
ds
sub
mov
push
push
and
adc
sbb
mov
jbe
shll
std
stc
or
add
inc
lods
cmp
dec
sarl
stos
xor
mov
jg
fwait
dec
xor
push
mov
xor
sbb
jmp
fldl
lock
xchg
insb
cmc
push
adcl
pop
je
frstor
add
sbb
stos
aam
lods
push
and
repz
repnz
repnz
roll
in
sub
sbb
shlb
xor
push
daa
out
dec
add
mov
cmc
popf
xor
mov
add
into
or
dec
add
leave
xchg
jo
sahf
cmp
call
inc
loope
jp
popf
cwtl
fs
or
movsb
mov
mov
pop
inc
or
stos
loop
inc
lcall
loope
data16
test
pushl
xchg
xor
imul
lods
sub
xchg
mov
xchg
loop
dec
push
inc
sbb
lods
push
cmp
jb
mov
sbb
push
out
sub
and
adc
iret
xchg
sbb
add
fimull
mov
adc
sub
insl
insb
dec
push
xchg
push
push
inc
jp
jnp
das
and
sbb
xor
adc
popf
ja,pt
repz
les
loopne
and
fwait
pop
push
enter
inc
jns
loopne,pn
aaa
int3
sbb
call
inc
out
push
cmp
cmp
scas
adc
movsl
inc
hlt
inc
mov
xor
sbb
pop
mov
dec
sub
dec
fimuls
push
addl
add
xorb
sti
inc
sbb
cmp
aad
sub
xchg
jmp
out
pop
push
inc
scas
in
aad
mov
cli
dec
ret
ljmp
in
lret
nop
fisttps
or
push
or
adc
loop
dec
test
add
cmpsb
jnp
xchg
mov
pushf
repnz
or
movb
out
and
adc
std
dec
push
jne
sbb
push
js
daa
test
adc
enter
or
mov
movsl
pop
fwait
cld
mov
aad
inc
clc
mov
adc
jge
sbb
sub
das
ja
mov
rorl
es
jb
mov
jp
add
adc
pop
rcl
aam
and
out
test
and
dec
je
mov
add
sbb
test
in
cmc
mov
in
xchg
subb
iret
sbb
dec
jnp
movsl
mov
flds
ds
arpl
test
rolb
aad
aad
pop
cmp
test
jecxz
into
jle
mov
aad
pop
mov
dec
push
add
in
pop
jae
ret
sub
mov
push
push
icebp
test
pop
xchg
pop
pop
sbb
in
pop
mov
xchg
outsl
mov
dec
sahf
test
addr16
sub
add
xchg
mov
decl
sub
hlt
out
divb
push
out
in
fadd
or
cwtl
lods
fcmovb
leave
ds
dec
test
xchg
xlat
mov
loopne
insb
fcomps
add
or
jg
mov
add
xchg
cmpsl
lods
cli
mov
add
stos
scas
mov
jae
ljmp
sbb
push
adc
inc
pop
add
xor
mov
mov
jbe
mov
pop
mov
or
push
mov
and
movsb
add
lret
popa
cmova
ret
push
add
xchg
cltd
jo
pusha
cmp
sbb
movsl
insl
in
shrl
inc
add
loopne
sub
aam
add
dec
pop
ds
popa
lret
aad
in
xchg
dec
iret
int3
or
sbb
test
mov
fadd
cmp
sbb
push
sbb
adc
in
sub
rcrl
cmpsb
lahf
fcoms
lea
pop
popl
and
fnstcw
sbb
pop
sub
fs
stos
fdivr
adc
testb
in
inc
imul
push
into
add
jno
call
int3
out
push
inc
aas
add
lea
push
in
push
icebp
jno
js
push
fstpl
pusha
mov
vpunpckhbw
outsb
sbb
mov
jl
pusha
and
pop
xor
mov
or
pop
xlat
cltd
xor
sub
sbb
pop
or
jge
dec
sbb
loop
mov
xchg
jmp
das
cmp
fstps
dec
inc
mov
shrl
sbb
insb
pop
cli
push
test
lret
je
insl
adc
xchg
addr16
or
test
sub
iret
push
cli
test
lret
sbb
pushf
popa
outsb
shrb
mov
push
int3
sahf
push
sbb
xchg
mov
sbb
ret
mov
add
xchg
add
xor
xchg
xchg
and
aaa
jmp
subl
out
inc
scas
js
aam
jle
mov
shr
sbb
xchg
mov
xor
mov
xchg
andb
or
mov
mov
fs
fnstcw
andl
fwait
test
test
pop
cmpsl
and
hlt
adc
pusha
lea
lods
mov
int
add
outsb
in
insb
jmp
jecxz
imul
sbb
push
popf
repz
mov
psrld
insl
add
inc
inc
into
adc
aad
repz
scas
add
lea
mov
mov
jmp
xor
jnp
push
push
jns
inc
test
mov
cli
je
push
push
jecxz
mov
mov
xor
mov
add
jnp
sbb
nop
lods
jae
sbb
add
hlt
push
xchg
mov
mov
mov
ret
movsb
enter
mov
cmp
jb
cmp
je
fldcw
push
fs
cltd
sub
pop
mov
xchg
loop
xor
nop
sbb
loopne
mov
shr
cmp
mov
sbb
mov
mov
sahf
fnstcw
out
imul
sbb
fnsave
mov
add
scas
outsb
xchg
mov
addl
sub
idivb
inc
cmpsl
sbb
and
and
or
and
fsubr
inc
sbb
adc
cmpsb
jno
adc
or
add
sbb
fisubrl
ja
jmp
cmp
dec
loope
orl
inc
dec
out
out
push
push
mov
jnp
repz
mov
cld
mov
fcmovne
push
fs
orl
xchg
lret
lret
jno
push
mov
mov
mov
or
clc
pop
xor
add
push
sbb
mov
ffree
fistpll
gs
add
enter
notl
testb
fimuls
push
push
jb
out
pop
sub
lds
rol
pop
popa
fs
add
test
sbb
pop
pop
icebp
mov
movsb
pavgb
ljmp
sbb
lret
and
jo
sbb
js
movsb
jno
je
add
imulb
and
inc
sub
call
jae
bound
adcl
out
mov
icebp
inc
pop
dec
dec
scas
add
cmp
push
cmc
xor
mov
call
js
and
inc
adc
imul
fisttpll
pop
mov
or
test
or
dec
insl
sarb
clc
pop
cltd
xor
pop
jne
dec
dec
push
test
stos
fimuls
cli
mov
jecxz
popa
add
idivl
mov
andl
push
xchg
jmp
add
mov
sahf
mov
pop
push
mov
cmc
lahf
mov
fwait
in
negb
bound
xchg
add
rorl
iret
std
jl
dec
dec
and
xor
push
cmp
iret
nop
movsb
jb
cmpl
cmpsb
faddp
cmp
inc
push
test
xor
cld
push
mov
idivl
add
inc
loope
out
and
movsb
xchg
mov
sti
shll
add
cmp
xchg
pusha
hlt
fsub
mov
insb
sbb
push
sbb
lock
mov
push
movsl
xor
addr16
jp
mov
aam
or
sub
roll
cld
jg
fidivs
sbb
cmpl
adc
fsubrs
push
mov
inc
push
jecxz
or
in
sbb
and
bound
xor
inc
shl
data16
and
adc
add
ret
mov
out
mov
xchg
movsl
sbb
mov
sbb
cmp
mov
xchg
inc
aas
add
or
xchg
and
cmp
je
sub
jns
xor
movsl
or
mov
jge
mov
mov
movsl
jo
ja
cmp
repz
dec
sti
daa
jl
inc
arpl
add
hlt
cmc
push
ret
ds
mov
push
fimuls
pop
push
inc
add
mov
inc
jnp
orb
add
mov
mov
jnp
xchg
jnp
sbb
pop
andb
mov
jecxz
jae
push
xchg
mov
adc
add
jle
ret
imul
in
dec
push
in
sahf
or
xchg
mov
mov
mov
adc
rcr
mov
rol
cmc
stos
movl
out
lea
ret
pop
ret
jg
push
mov
and
adc
fadd
pop
lahf
out
mov
add
add
mov
xorl
add
jecxz
test
gs
xor
cmpsl
adc
loopne
jne
jge
dec
pop
cli
jge
popf
mov
adc
xor
daa
in
mov
push
jb
cmpsl
insb
andl
sahf
mov
xor
into
inc
sahf
dec
les
pop
or
fdivrs
xchg
inc
and
add
pop
leave
and
sub
mov
ljmp
jl
aad
call
cwtl
sbb
fsub
idiv
out
add
add
dec
jb
mov
cmp
cmp
xchg
bound
xchg
mov
cmpsb
mov
or
pop
aad
mov
mov
mov
pop
xbegin
sbb
out
ret
add
push
in
imul
mov
stc
push
roll
cmp
sti
imul
test
mov
jl
mov
repnz
movsl
and
xchg
sti
jnp
mov
rolb
cmpsl
cld
cmp
insb
add
daa
jne
and
mov
mov
push
fstpl
adc
int3
xor
bnd
stc
sbb
mov
cmp
and
shrl
mov
jle
inc
ja
cmp
lds
or
out
mov
std
loope
in
adc
sub
cwtl
jnp
mov
in
sbbl
nop
push
in
mov
movsl
ja
shl
adcl
stc
rcrl
lret
or
xor
add
mov
pop
push
pop
adcl
cld
inc
into
decl
lahf
test
movsb
cmpsb
imul
in
and
push
popf
add
lcall
pop
add
add
loope
ret
xlat
sub
push
lods
adc
repz
out
adc
in
xchg
cmp
and
clc
testb
xchg
cmpsb
sub
notb
push
pusha
stos
jmp
add
mov
mov
mov
dec
dec
adc
std
ret
or
bnd
mov
and
jp
add
sub
xor
aas
or
adc
lahf
popa
push
popf
sti
jmp
test
ja,pn
hlt
addr16
out
mov
jmp
mov
xchg
add
push
adc
sub
mov
je
movsl
add
scas
jmp
push
insb
xor
sub
inc
add
add
or
outsl
out
cmpsb
into
mov
out
leave
xchg
push
mov
adc
push
pop
cmpl
cmp
add
pop
jno
outsb
mov
cmp
pop
pop
pop
cmc
or
mov
insl
or
fucomip
jl
mov
in
fsubrl
aaa
mov
pop
cmp
mov
decb
aad
push
adc
add
sti
fists
into
into
xor
ds
xchg
movsl
enter
mov
fnstcw
push
jbe
gs
out
orl
mov
aad
lret
mov
sti
iret
push
ljmp
mov
mov
aam
dec
cltd
ja
int3
jo
test
repnz
dec
sbb
lret
insb
mov
and
push
jo
pop
jne
cmpsl
stos
sti
dec
bound
lea
and
add
mov
fidivrs
fistpll
xchg
push
dec
or
xchg
cld
aas
rolb
add
ss
add
pop
pop
inc
jbe
in
outsl
or
jae
mov
cmp
insl
mov
and
jb
or
adc
jbe
push
lods
fsubl
mov
pop
mov
push
mov
jo
icebp
sbb
test
es
pop
jg
xor
jmp
ds
daa
pop
xchg
or
sub
cmovns
je
dec
add
jge
or
push
arpl
inc
into
fcoms
mov
icebp
sbb
dec
xchg
push
add
cmpsb
mov
xor
into
add
xor
push
fdivs
in
je
mov
outsl
test
mov
push
sbbb
or
in
add
and
aad
pusha
test
sysexit
enter
mov
ja
fs
inc
sbb
sbb
mov
or
movsl
pop
jmp
jecxz
out
push
pop
addr16
sub
incb
cmc
mov
or
pop
aas
ss
les
mov
leave
dec
push
enter
insb
jp
push
mov
push
lods
xchg
add
out
mov
je
mov
sahf
fldenv
ja,pt
sbb
sbb
cmp
mov
mov
andb
push
xor
mov
ffreep
mov
movsb
not
stc
inc
jns
repz
cmp
jecxz
xor
jge
pop
mov
sbb
mov
loop
inc
add
inc
add
mov
cwtl
jle
fidivrl
test
pop
sbb
movsl
pushf
jp
test
add
outsl
loope
fwait
push
and
outsb
bound
cmp
pop
cmpsl
add
pushl
data16
out
sbb
adcl
stc
and
sbb
std
mov
in
pop
stc
int3
cmpb
jge
in
aas
sbb
jnp
push
jle
pop
mov
out
dec
rcrb
pop
mov
dec
sbb
movsb
mov
addr16
pop
jns
mov
jge
ret
pslld
or
notb
call
sbbb
arpl
lret
mov
scas
cmpsl
filds
add
fs
jb
and
pushf
push
lcall
cmp
fcomi
adc
pop
push
cli
dec
xor
push
push
cld
dec
push
call
ja
add
adc
daa
fildll
inc
dec
out
jbe
mov
push
pop
cltd
dec
adc
push
cmp
imul
add
mov
pop
icebp
scas
cltd
incb
fildl
pop
mov
sbb
push
jg
dec
call
inc
push
or
addr16
add
loop
xor
jmp
xchg
jmp
iret
ret
push
pop
jmp
jle
sahf
mov
cmpsl
mov
in
clc
jmp
test
mov
xchg
fstps
out
pop
pop
test
adc
push
rolb
inc
leave
popf
incb
mov
push
push
sub
add
clc
leave
mov
mov
jno
mov
add
popf
xorb
and
push
add
loope
or
in
addw
cmp
pop
xchg
jp
in
sub
ja
aas
cmpsb
and
mov
fwait
mov
add
push
sbb
pop
lcall
clc
int
shlb
mov
add
cmp
mov
cli
mov
je
outsl
mov
add
push
mov
ljmp
pop
js
stc
push
test
testl
cmovp
stc
sbb
clc
xchg
cmpl
andb
mov
iret
bswap
sbb
outsl
adc
inc
add
mov
lods
sub
arpl
sub
out
aad
sub
and
mov
les
out
lcall
lods
outsb
cmp
out
pop
out
dec
add
cmp
sahf
andl
jo
jo
sarl
loopne
cli
pop
sbb
and
out
pop
dec
or
inc
mov
orl
jmp
in
jmp
lcall
add
pop
xor
cmp
push
sbb
xor
sarb
sbb
mov
imul
cmp
sub
cs
es
test
and
mov
pop
into
jl
ficompl
and
cmp
adc
cmpsb
inc
ficoml
sbb
inc
sbb
mov
mov
mov
pop
sbb
fisttps
ret
mov
xchg
outsl
addl
cmpsb
sub
sbb
jnp
arpl
jl
inc
ds
mov
aam
daa
sbb
js
push
cmc
push
cli
testl
iret
jmp
sti
xor
dec
sbb
mov
add
bound
fisttpll
jl
aas
jne
imul
add
mov
xlat
xchg
jmp
sbb
dec
sbb
push
pop
add
daa
jmp
mov
stos
pop
push
jne
ret
fimuls
xor
sub
fdivrl
dec
sub
inc
pop
scas
insl
pop
inc
pushf
or
fxch
jb
addr16
add
sbb
inc
xchg
out
push
and
sti
or
stc
jb
mov
out
out
mov
sub
jnp
mov
mov
mov
jbe
lcall
in
lods
adc
repnz
and
add
mov
out
test
xor
in
sarl
cmp
xchg
cmp
sbb
hlt
lods
inc
add
fsubl
fadds
add
rcrb
push
cli
roll
adc
gs
pop
add
pop
hlt
sahf
push
xor
jmp
sbbl
ja
sbb
xchg
scas
addl
arpl
and
mulb
cltd
pop
mov
xchg
cmpps
daa
fwait
sbb
jmp
add
pop
sub
fsubs
cli
repz
pop
sbb
clc
adc
aas
lcall
and
int
add
pop
add
fwait
cwtl
push
cwtl
test
xor
call
movsb
insb
ret
add
mov
add
popa
mov
adc
xchg
inc
loop
fyl2xp1
dec
mov
sbb
cmp
and
sti
clc
add
stos
lret
clc
mov
dec
adc
pop
add
repz
xor
mov
scas
xor
add
mov
ret
lock
xchg
lds
lahf
add
inc
lcall
fnstenv
xchg
pop
ss
mov
dec
movsl
mov
add
cmpsl
cmpsl
push
pop
jne
movsb
pushf
xchg
mov
out
adcb
jb
lret
fdiv
pxor
mov
roll
jae
cld
mov
xchg
add
lods
mov
addr16
fwait
cmpl
xor
jnp
jl
mov
arpl
jno
mov
push
mov
mov
scas
cltd
jp
mov
mov
sub
mov
jno
mov
cmpsl
push
imull
lock
jge
sbb
out
cmpsl
fmull
push
pop
ret
push
push
sbb
int
jmp
dec
divl
je
add
cmp
xchg
push
push
cs
sbb
sahf
fwait
mov
xchg
pop
push
into
jg
xor
sbb
inc
stos
push
xor
int
mov
incb
test
sbb
sub
mov
pop
fsubrl
sub
or
mov
mov
sti
sbb
hlt
xlat
in
shlb
testl
add
mov
subl
das
shlb
xchg
jo
push
pop
add
subl
cwtl
pop
push
push
mov
push
sti
mov
cli
cli
xchg
mov
sbb
xchg
mov
dec
xchg
sti
or
std
sbbl
mov
loop
sti
cltd
imul
cwtl
stos
mov
imul
call
cmp
adc
cmp
add
ror
cmp
jne
fldl
stc
sub
xchg
add
sub
fwait
mov
mov
stc
push
ret
mov
adc
xchg
or
imul
cmpl
sub
out
outsb
orl
or
sbb
es
shl
pop
adc
jp
js
push
mov
push
mov
sbb
lahf
fwait
nop
sbb
inc
xor
mov
xchg
pop
jns
mov
addl
out
xchg
push
cmp
fwait
repz
aam
pop
inc
std
xor
inc
push
popa
jg
or
cwtl
ffree
cld
repz
cmp
add
add
mov
stc
and
sub
setae
cmp
xchg
stos
scas
sbb
xchg
repnz
add
cltd
roll
aas
pop
sbb
push
jnp
fxch
dec
and
push
in
sub
in
xor
cmp
int3
inc
ja
mov
pshufw
jae
or
stc
xchg
movsb
in
mov
cmp
pop
mov
or
sbb
add
pop
adc
sub
sbb
mov
and
xchg
repnz
mov
sbb
xchg
mov
adc
pop
push
into
adc
insb
pushf
fsts
pop
add
pusha
and
cmpsl
loopne
add
xchg
mov
jnp
mov
int3
ja
loope
cmp
mov
in
or
adc
cmp
mov
adc
cli
mov
lret
add
and
lret
mov
lahf
cmp
mov
add
adc
mov
and
add
jns
xor
xor
fwait
dec
rcrl
shrl
sti
mov
sub
mov
jnp
arpl
mov
out
xor
ja
fs
out
mov
iret
aad
sub
test
sbb
maskmovq
ret
cmp
adc
sub
mov
cs
dec
test
push
sub
dec
xchg
jne
and
sbb
xor
mov
fildll
lock
out
aad
fwait
mov
in
xor
mov
pusha
fstpt
cs
jecxz
add
fsubs
jb
lea
and
mov
and
sbb
loope
popa
cmpsl
xlat
pop
arpl
aas
xor
stos
cli
ret
addl
jne
stc
je
or
mov
jg
sbbb
roll
mov
push
movb
xor
and
mov
and
adc
xor
pop
fists
xchg
cmp
add
cmp
and
mov
lods
ss
inc
shlb
sbb
stos
repz
fcoms
repz
cmp
icebp
dec
sbb
add
mov
aas
mov
mov
cmp
bound
inc
cmp
jecxz
inc
sahf
xchg
sbb
add
mov
call
mov
xchg
aad
and
dec
cmp
inc
inc
rclb
jg
cwtl
or
aaa
push
loope
pop
gs
orl
add
mov
mov
shl
out
sbb
jg
or
cld
sbb
dec
cwtl
jg
ljmp
test
or
jecxz
push
rclb
sbb
idiv
test
and
jae
lahf
push
jmp
mov
sbb
mov
jle
mov
mov
mov
cmpl
mov
add
mov
sbbl
data16
cwtl
cmp
mov
into
mov
rcrl
stos
mov
inc
and
sbb
xchg
mov
mov
sbb
push
ret
lock
pop
sbb
in
jecxz
mov
cwtl
in
dec
sub
cmp
cmc
incl
add
add
movsb
mov
mov
rcll
popl
sub
cmp
js
ljmp
lds
sub
lret
cmpsl
das
lret
push
cmpsb
add
ficoms
addl
adc
orb
cmp
int3
cmp
orb
fldcw
jle
adc
add
mov
les
dec
push
xor
je
fisubl
jo
fimuls
cltd
mov
inc
shrl
sbb
decl
fmuls
push
scas
mov
sbbl
mov
add
add
fsubr
mov
aad
aas
dec
xlat
inc
inc
or
pushf
xchg
add
add
scas
pop
sub
or
out
adc
push
daa
cs
lea
jecxz
addl
das
fnstcw
jmp
cs
cmp
mov
inc
fbld
pop
das
lahf
add
js
out
cli
jae
inc
and
jmp
jbe
rcrl
popa
dec
dec
sub
aam
cmpsb
inc
cmc
pop
aas
xor
gs
stos
ja
pop
add
jmp
and
jg
in
movsl
lret
in
cmc
fimull
mov
cmc
daa
rorl
mov
addr16
sbb
add
dec
mov
pop
cmpl
into
jno
loop
jb
into
popa
ja
mul
iret
mov
add
jo
je
jne
add
testb
lods
in
std
jo
std
fstpt
push
cltd
rcrb
inc
sbb
inc
cmp
adc
subl
aam
adc
out
pop
addl
repnz
cmp
jg
mov
xchg
jnp
pushf
mull
test
cmp
roll
dec
imul
inc
sbb
ret
push
mov
adc
shll
sahf
add
jp
and
mov
sub
add
lods
mov
mov
shrl
jmp
lds
push
pop
jge
xor
mov
push
sarb
out
inc
ret
pop
sti
sub
imul
lods
in
lods
add
jne
dec
aad
pusha
and
dec
sbb
cmp
or
scas
inc
jo
inc
mov
rorl
mov
pushf
add
xchg
fidivrl
lods
iret
push
iret
sbb
lret
inc
out
cmp
mov
jae
mov
prefetch
sub
add
dec
lahf
jle
movl
out
xchg
aad
rorl
push
repnz
or
sub
mov
adc
inc
pop
xlat
scas
sbbl
inc
mov
dec
ljmp
movl
fdivs
mov
jae
arpl
mov
ret
and
sbb
pop
inc
out
insl
cmp
enter
xchg
cld
stos
sub
rolb
mov
lahf
pop
mov
inc
jne
push
ljmp
sbb
daa
adc
mov
daa
or
lret
jnp
cmc
hlt
andl
bnd
stos
aam
lret
in
cmpsl
in
pop
scas
loop
lods
xchg
jne
outsl
addb
sub
dec
hlt
inc
mov
ljmp
dec
or
adc
or
or
dec
sahf
stc
mov
adc
add
into
dec
xor
ds
pop
les
pop
imul
shlb
enter
hlt
insb
and
les
cli
data16
js
sbb
jae
cwtl
xchg
add
hlt
sbbl
xor
call
mov
inc
add
xorb
adc
ss
cmpsb
leave
decl
mov
and
xchg
rep
push
add
out
jmp
movsl
cmpsl
icebp
movsb
subl
int
repz
ss
daa
mov
mov
mov
out
in
jp
stc
jb
mov
dec
pop
or
pop
outsb
repz
in
lahf
test
test
and
xchg
fimull
jnp
inc
push
mov
cltd
jo
imul
sub
ss
xor
sbb
mov
push
imul
fs
repnz
mov
pop
push
cltd
or
in
cmp
mov
dec
add
stos
push
shlb
dec
clc
stos
lock
mov
adc
add
lds
sbb
fistl
sbb
mov
add
out
and
shrb
jmp
ret
dec
subb
xor
sbb
out
jecxz
sbb
push
pop
lock
jp
test
xchg
xor
pop
cmpsb
xor
sti
xlat
xchg
dec
cwtl
out
sbb
lahf
ds
jns
aad
js
push
jno
mov
and
pop
sub
push
in
shlw
das
jp
and
icebp
fdivrl
sbb
movsl
pop
loop
add
sbb
or
add
loop
arpl
mov
adc
jg
dec
dec
js
pop
dec
insl
arpl
cmpl
mov
mov
test
adc
mov
sbb
mov
mov
sub
adc
leave
add
stos
jle
and
icebp
nop
jecxz
push
add
and
cmpsl
mov
push
sub
out
push
xor
in
leave
adc
iret
gs
addl
call
iret
inc
cld
push
jge
cmpsb
sahf
sahf
mov
sbb
dec
pusha
out
ja
adc
sbb
je
loop
push
adc
add
cmp
mov
xlat
orl
cmp
add
stos
jle
jnp
aas
cmp
repnz
mov
scas
sbb
mov
popl
int
push
inc
sbb
mov
jne
fcompl
mov
pop
pop
int
dec
in
inc
call
xchg
nop
jmp
inc
andl
popf
lods
mov
pop
mov
xchg
sbb
mov
mov
test
cwtl
push
mov
jmp
cld
jnp
jle
xchg
xorl
pop
adcl
inc
mov
push
cmc
xlat
jmp
fildll
add
add
popa
mov
iret
notl
mov
sbb
add
cli
daa
out
push
out
div
sbbl
xchg
imul
jnp
mov
cli
test
fstps
or
cmp
ret
pop
jl
push
add
add
cmp
addl
xor
cs
xlat
ds
and
add
data16
in
into
sbbb
xchg
add
and
mov
xchg
push
mov
mov
adcl
leave
and
cmp
daa
dec
xor
rolb
or
fisubs
fs
add
stc
and
imul
out
pushf
movsb
jno
push
cmp
jnp
push
jecxz
dec
sahf
andl
out
or
sbb
sbb
rcrl
jnp
sbb
add
inc
xchg
rorb
jge
mov
shlb
push
adc
mov
cmp
mov
mov
incl
pop
es
scas
mov
and
stos
shrb
cld
lods
mov
xchg
imul
inc
sbb
sub
xlat
cli
or
dec
pusha
inc
aam
dec
dec
mov
pop
outsb
rcl
adc
icebp
insl
cmpsb
repz
adc
or
lret
bound
aas
mov
or
aas
sub
out
add
nop
sbb
movsb
xorb
sub
mov
filds
call
add
xor
shll
fildl
push
lcall
rcl
add
iret
push
movb
xor
mov
dec
mov
mov
insl
lock
pop
aam
add
jg
inc
jae
inc
jge
fwait
sub
in
mov
xchg
and
pop
pop
sti
insl
sbb
add
add
pop
popf
ret
or
cmp
jne
cli
sbb
jb
sbb
inc
test
push
add
outsl
loop
cmp
repz
sbb
lret
test
popf
pop
add
cmp
mov
mov
lds
call
lock
test
insb
dec
cmpsl
adc
popf
pop
pushf
inc
mov
sarb
dec
into
dec
inc
ficoms
xor
out
in
test
add
pop
sbb
lea
inc
in
xchg
dec
adcl
rorb
add
push
loopne
xchg
xor
testb
sub
int
rorl
add
addr16
stos
push
xor
jge
pushf
sub
sub
in
adc
add
cmp
imul
test
inc
pop
movsl
cld
sti
dec
add
out
xchg
das
dec
not
push
add
jmp
sarb
int
inc
push
loope
mov
movsl
ljmp
orl
icebp
hlt
mov
popa
fmuls
adc
outsl
in
cwtl
mov
push
jp
jbe
xchg
lock
adc
adc
inc
test
adc
out
add
test
add
and
push
andw
insl
or
rcr
es
sbb
jecxz
lret
jmp
push
jno
add
js
jecxz
enter
mov
sbbl
adc
aad
or
inc
mov
gs
add
fucomp
sti
mov
adcl
mov
in
ret
sub
inc
pop
fbld
cmp
sub
stos
mov
xor
hlt
out
sbb
mov
pop
ret
sbb
loop
jle
jmp
sbb
pop
aaa
mov
add
fwait
test
or
mov
push
pop
adc
sub
cld
scas
push
jno
push
psllw
cmpsl
hlt
jnp
lods
cmp
and
sub
push
int
lahf
add
ret
lea
sbb
push
fstpl
adc
sub
sub
add
mov
popf
mov
xor
rol
cmp
mov
add
add
dec
sub
xchg
cltd
in
enter
inc
movsb
shlb
dec
mov
cld
stos
call
and
sub
mov
stos
add
fiadds
mov
hlt
div
imul
je
lahf
pop
ret
add
adc
mov
addl
nop
inc
mov
dec
cmp
adc
fdiv
mov
cmp
testl
cld
dec
addl
outsl
add
push
push
sbbl
sub
leave
mov
xor
dec
adc
sbb
ret
xorl
pop
imul
imul
inc
push
mov
xorl
mov
insb
in
mov
lea
jno
arpl
xchg
or
test
sub
push
and
adc
xchg
mov
mov
cli
mov
xchg
imul
mov
jl
ret
adc
xchg
cmp
add
js
clc
leave
daa
mov
mov
sbb
cmp
add
imul
imul
fldenv
mov
aas
jbe
cltd
dec
ds
and
into
or
sbb
mov
in
bound
sbbl
aas
lods
mov
inc
mov
test
int
ljmp
xchg
mov
mov
addl
movsl
gs
das
pop
outsb
stos
sbb
mov
push
mov
lods
mov
sbb
stc
jp
mov
mov
nop
jae
jl
push
xorl
in
mov
pusha
out
dec
mov
scas
mov
mov
ret
insl
jae
sbb
mov
sarl
arpl
addl
xchg
or
push
adc
lcall
cmp
ret
mov
adc
cwtl
subl
aam
push
hlt
loopne
shrl
jge
shlb
xorl
roll
dec
psraw
mov
inc
ds
call
or
or
imul
hlt
cwtl
add
lret
cmc
and
mov
loop
sarb
aas
mov
imul
cltd
ror
adcl
inc
data16
jg
cmp
out
mov
sub
movsl
sub
sbb
jns
xchg
cmp
mov
push
push
roll
sbbl
push
lock
mov
or
cmp
fildl
ss
rorb
jno
mov
mov
mov
inc
mov
dec
pop
mov
cld
inc
jge
int
inc
fcomp
mov
fsubrl
inc
pop
nop
add
or
daa
testb
dec
pop
fisttpll
add
loop
dec
push
xor
loopne
rcrb
sbbb
data16
dec
shr
ds
loop
or
idivb
addl
or
adc
add
cmp
sbb
mov
mov
lds
sarl
mov
repz
xor
iret
or
add
cmp
adc
ds
mov
or
inc
and
cmpl
mov
int3
add
das
pop
sub
popf
jle
sbb
mov
add
sub
sbb
mov
sbb
push
fbld
xor
insl
and
es
jno
xchg
mov
jae
lcall
enter
nop
and
imul
lods
mov
js
pop
mov
cmc
xor
popa
icebp
sbb
rcrb
ja
and
bound
xchg
sub
ss
sti
insl
cmp
lahf
jecxz
adcl
mov
leave
mov
xlat
loope
std
and
gs
lea
divl
mov
sub
js
mov
dec
std
inc
adc
clc
pop
ljmp
outsl
mov
and
push
clc
ret
add
pop
in
xor
mov
push
add
pop
pop
sbb
dec
into
mov
test
add
ds
cmpsl
shrb
ror
mov
mov
xchg
jg
sbb
push
ror
rorb
repnz
loopne
pushf
cmc
pop
mov
not
sbb
dec
mov
pop
mov
sub
addl
mov
dec
cmp
inc
lock
outsb
dec
jno
mov
std
cmp
mov
inc
aaa
pop
mov
imul
jmp
xchg
testl
pop
stos
stos
mov
push
insb
dec
xor
adc
xchg
hlt
adc
ror
inc
fldenv
sbb
push
push
lcall
xchg
int3
test
mov
sbb
mov
mov
xchg
jg
arpl
aas
cmpsb
mov
sub
adc
push
jg
andb
js
cmove
xchg
adc
jo
mov
jmp
add
lock
mov
sbbl
movl
jne
mov
fs
adc
push
or
mul
jge
sbb
leave
xor
mov
pop
mov
jl
aaa
pop
or
jno
frstpm(287
test
inc
jno
mov
fs
push
cld
sbb
and
mov
fwait
dec
std
mov
inc
divl
push
bound
mov
jno
jns
push
ret
xchg
mov
repz
cmc
jl
lock
jbe
and
loop
shrl
mov
int3
cli
into
or
mov
jnp
jmp
in
mov
mov
nop
sub
jns
icebp
rolb
pusha
orl
cmp
into
mov
mov
cmp
addr16
addb
jbe
lods
aad
add
loopne
mov
lret
rcll
push
lahf
cmp
lret
cmpsb
pop
inc
insb
inc
andl
fimull
fadds
mov
cmp
stos
movsb
mov
xor
insl
add
and
xor
insb
ret
lods
dec
mov
and
sub
push
add
rol
sbb
jge
add
imul
mov
or
inc
std
push
push
orl
imul
mov
adc
pop
add
sbb
dec
sbb
sti
mov
mov
sbb
mov
fmulp
sub
popf
clc
sub
xchg
pop
enter
pop
mov
mov
popa
outsb
aad
test
hlt
fst
xor
add
mov
and
cmp
adc
lahf
out
out
sbb
xor
mov
mov
jae
repnz
bound
jne
push
mov
ja
mov
mov
push
shlb
ret
cwtl
inc
cmp
inc
cli
xchg
sbb
mov
push
push
jge
add
enter
js
adc
stc
and
outsb
cltd
dec
add
cmpsl
lods
xchg
fisubl
orl
dec
push
jmp
das
fs
addr16
sub
and
xchg
sbb
mov
inc
add
add
push
xchg
sbb
adc
xor
pop
cmp
testb
xorb
adc
mov
fdivr
adcl
andb
pop
loope
xchg
mov
cmp
and
int3
jmp
arpl
xchg
sbb
lahf
lret
sarl
add
lcall
popa
xlat
jne
pop
mov
mov
pop
popf
clc
xor
lock
push
inc
cmp
pop
sbb
or
mov
popl
stc
out
jae
xor
and
je
orl
out
add
mov
mov
lea
addr16
add
cmp
cmpsl
xorl
push
orb
andl
sahf
mov
in
hlt
call
int
dec
mov
cmc
add
xchg
lods
xor
jg
adc
mov
inc
push
stc
aaa
movsb
cltd
popa
outsb
xor
add
mov
in
adc
andl
adc
push
cltd
mov
sahf
dec
jp
pop
xchg
pop
fcoms
fmull
add
mov
mov
outsl
xchg
lcall
xchg
rclb
imul
push
sub
mov
pushf
push
insl
aad
leave
or
jns
dec
and
add
mov
incb
or
js
mov
std
xchg
jb
mov
mov
sahf
xor
add
cmpl
ljmp
sbb
inc
adc
mov
sbb
xchg
xchg
cmc
adc
add
push
mov
xchg
cmp
xor
inc
mov
out
mov
lds
sbb
jo
orl
sub
jae
xorl
adc
or
rclb
add
rorb
jbe
mov
cwtl
push
lahf
add
inc
jg
cwtl
adc
adc
cmp
aam
mov
leave
and
pop
hlt
adc
ds
mov
in
xor
adc
fwait
or
orb
ret
xor
repnz
ja
inc
xchg
mov
adc
fs
mov
jecxz
add
adc
stos
les
aas
mov
ficomps
xchg
add
add
push
aas
cmc
sub
push
loop
mov
inc
xlat
inc
addr16
adc
mov
test
test
add
dec
pop
ret
dec
lcall
xor
inc
or
cmc
add
mov
pop
stc
add
inc
out
insb
subl
lret
mov
xor
dec
dec
and
ljmp
jp
adc
popa
cmpsb
sbb
xchg
push
divl
cmp
mov
lahf
sbb
sub
sub
popa
repz
ffree
mov
cmpl
push
std
dec
push
scas
mov
jbe
cmp
adc
add
xor
jnp
xchg
sbb
cmp
sub
mov
cmp
and
sbb
dec
call
ficoml
call
mov
outsl
xor
mov
cld
pusha
idivb
fadds
adcb
test
xchg
pop
inc
xchg
jg
enter
cmp
pop
je
ja
jne
fldl
jge
jmp
das
add
sub
inc
in
out
mov
or
jbe
pop
jb
mov
sar
jmp
inc
push
inc
ret
stos
add
les
je
sbb
in
push
sti
pop
pcmpeqb
cld
or
adcb
dec
and
sbbl
arpl
mov
out
cld
inc
hlt
push
xor
and
testl
and
inc
jecxz
jmp
cltd
mov
iret
outsb
shlb
fprem1
loopne
jae
lock
out
movsl
fdivl
jle
adc
bound
lods
sub
or
pop
mov
fidivrs
dec
sahf
lret
sbb
fdivs
stos
add
or
movl
ret
pop
out
lods
jmp
negb
xor
adc
sub
inc
in
add
repnz
sar
lret
sub
test
out
or
cmpsl
dec
jne
cmp
mov
ficomps
jle
jns
loopne
xor
mov
insl
and
adc
xor
dec
imul
int
mov
and
jnp
subl
packssdw
sbb
and
repnz
sbb
lea
mov
mov
sahf
lea
idivb
scas
jno,pn
mov
cmp
in
xchg
add
fldenv
test
xor
insl
jae
pop
or
push
stc
sbb
pop
fisubs
push
add
adc
cmpb
aad
stos
mov
outsl
cmp
sbb
aaa
lahf
test
xchg
cmp
mov
lea
sbb
jb
add
dec
mov
and
jo
sub
cs
out
imul
add
mov
es
xor
in
dec
orl
ret
arpl
shll
lcall
xchg
add
or
mov
cld
add
loop
ja
xchg
lret
loope
inc
dec
xor
sub
xchg
sub
in
mov
or
push
sub
aad
mov
lea
or
aad
mov
les
and
add
call
jmp
rcr
insl
movsl
out
mov
mov
push
mov
mov
mov
and
std
mov
ret
and
div
lret
mov
sbbl
cltd
mov
and
and
jle
cmp
jmp
pop
ret
out
jne
mov
mov
add
mov
sbb
and
add
aam
pusha
cld
loope
add
mov
arpl
sub
add
pop
bound
xchg
fiadds
adcl
addr16
push
or
fwait
mov
fnstcw
push
movsl
sbb
and
jbe
mov
adc
adc
xchg
add
je
jl
mov
sbb
add
jnp
sbb
stc
out
or
in
imul
fprem1
or
fwait
out
cmp
imul
pop
lret
add
dec
cmp
pop
sbb
mov
xlat
stos
mov
inc
mov
dec
xor
fcmovbe
movsl
dec
repz
xchg
adc
adc
sti
push
xchg
stc
stos
jp
adc
jl
sbb
and
sbb
add
mov
mov
inc
add
shrb
fildl
jmp
insb
cmpsl
fwait
mov
addb
test
sbb
scas
in
movsl
loop
lea
imul
addl
fmull
cld
mov
mov
cwtl
and
cmc
inc
ds
mov
jb
lods
xor
fs
mov
sbb
adc
mov
xlat
aas
jl
xchg
inc
or
and
mov
cmpsl
pop
in
int3
adc
dec
mov
inc
sahf
bound
ret
xlat
repnz
xchg
addb
add
cmp
jmp
in
pop
shr
mov
and
into
cmc
lcall
mov
test
jmp
pop
add
add
push
mov
mov
loop
aas
mov
xor
rcrl
pop
jbe
add
insl
lock
mov
adcl
push
mov
test
jno
pusha
mov
xor
cltd
icebp
xchg
dec
aas
mov
cwtl
xchg
or
jnp
movsb
andl
test
mov
movsl
pop
dec
scas
pusha
adc
loope
mov
iret
inc
add
mov
xor
mov
dec
cmpl
cmpsl
cpuid
mov
popa
add
shlb
pop
add
mov
mov
mov
and
ds
dec
cmp
mov
mov
add
adcb
mov
lret
lcall
imul
jge
sbb
jae
cmp
cmp
add
addl
aaa
fldenv
xlat
sbb
mov
cmp
scas
sbb
pop
aam
out
loope
sbb
mov
mov
push
add
fnsave
xor
cmp
cmp
adc
xchg
lock
scas
test
scas
mov
in
sbb
adc
test
fwait
pop
jle
insl
bound
test
adc
lods
out
sbb
arpl
cmp
js
popa
and
fwait
pop
adc
bound
cmp
mov
mov
lcall
or
call
jp
pop
jno
xchg
push
or
add
lods
lcall
fimuls
cmp
std
push
ret
aas
iret
lahf
jmp
xor
iret
push
fwait
mov
pop
dec
bound
aas
xor
xchg
or
movsb
dec
mov
scas
xor
pop
outsb
jnp
iret
stos
mov
mov
addr16
jp
push
js
sub
test
pop
jnp
ret
dec
mov
scas
cmc
inc
repnz
sub
add
sahf
sbb
sbb
add
mov
xchg
inc
and
sbb
add
sbb
mov
out
and
and
dec
sti
xlat
scas
push
pop
sbbl
lods
call
jnp
clc
stc
stos
sbb
mov
push
inc
push
xor
and
loope
cmp
jae
xchg
and
std
and
addb
sbb
jnp
push
add
mov
xor
mov
cmp
int3
pop
and
jmp
add
mov
btc
es
cmp
mov
jnp
jae
lahf
rcll
add
loope
clc
mov
jb
filds
icebp
inc
add
jb
loope
jnp
or
mov
add
ja
aad
jg
add
mov
jl
adc
mov
lcall
pop
jecxz
push
pop
jb
sbb
gs
jg
pushw
sti
outsb
pusha
dec
adcb
jge
dec
sub
pop
lods
in
xor
jp
push
xorb
fsubl
pop
and
add
pop
pop
add
dec
fistpll
mov
test
add
mov
in
mov
stc
mov
pushf
pop
xchg
xor
add
test
sub
std
fdivp
push
dec
popa
out
cld
mov
inc
ret
sbb
sbb
daa
xor
jle
dec
jbe
call
mov
movsl
je
test
jae
fiaddl
push
jg
shll
sub
mov
inc
scas
dec
inc
add
push
movsb
jns
notb
shl
and
mov
insl
test
addb
adc
xchg
aad
lret
mov
std
xor
xchg
mov
pop
cmp
adc
cmpl
add
sahf
popf
xor
push
pop
sbb
adc
add
add
movsl
out
pop
xorl
enter
mov
pop
xor
sub
addr16
inc
addl
in
mov
xor
ds
out
mov
sbb
cs
insb
xchg
cltd
je
or
cltd
sti
je
mov
push
sbb
sbb
cmp
sahf
pushf
or
fistpll
mov
mov
loopne
mov
hlt
or
add
add
addr16
leave
mov
mov
mov
aad
or
sub
xchg
shl
xchg
push
sbb
mov
lret
inc
jecxz
push
or
mov
pop
ret
jns
xor
pop
jno
push
add
jp
jnp
xchg
lods
mov
les
insb
xchg
sub
insb
mov
and
cmc
sbb
cwtl
inc
cld
sub
push
push
push
and
xor
lahf
mov
or
or
lcall
orl
aam
cmpb
orl
xor
dec
pop
add
fcmovu
jo
ficoms
push
push
int3
mov
cmp
or
jmp
push
push
ror
lret
pop
jo
scas
stos
mov
mov
push
test
sahf
cltd
xchg
dec
aaa
inc
inc
ret
cmp
jne
add
sbb
sub
scas
xor
or
fs
mov
xor
push
xchg
movsl
add
mov
mov
stos
jp
mov
xor
cmp
mov
xchg
xchg
repnz
pop
and
dec
push
or
xchg
add
sub
push
mov
imul
cmc
mov
add
mov
push
data16
adc
sub
addl
int3
pop
xor
pop
ret
pop
ret
fnstenv
fadds
xchg
mov
push
imul
add
outsl
sbbl
das
dec
adc
loope
mov
adc
orl
pop
sti
mov
mov
icebp
idivb
adc
dec
add
shll
xchg
cmc
sub
adc
mov
mov
jg
inc
xchg
rolb
cli
mov
sahf
stos
test
jmp
in
cltd
test
pop
mov
inc
push
inc
pop
data16
add
pop
arpl
mov
outsb
xorl
into
pop
ja
add
movsl
sarl
push
dec
inc
arpl
jae
mov
mov
sbb
adc
test
jmp
inc
mov
outsl
daa
mov
pusha
push
ss
mov
mov
popf
insb
leave
mov
divb
sbb
jnp
mov
jno
pop
loop
loope
xchg
cmp
cmc
or
adc
dec
dec
leave
mov
push
jae
mov
lahf
push
sbb
cmpsb
fld
ds
add
push
mov
bound
mov
loopne
movl
in
xlat
es
cmp
push
jge
adc
mov
mov
orl
cltd
int
lahf
in
mov
gs
ds
subb
movsb
mov
jae
sbb
adc
inc
adc
enter
pop
jo
mov
negl
pop
stos
xchg
jge
xor
lcall
cmp
inc
loope
add
mov
ljmp
jnp
xor
mov
cmpl
lahf
add
jp
cld
mov
adc
adc
jecxz
add
repz
xorl
mov
xchg
std
jl
sbb
xor
mov
andnps
lcall
cmp
loopne
sbb
cs
or
repz
push
stos
sbb
or
cld
jae
mov
into
imul
test
or
add
jno
js
fisttpl
lods
pop
repnz
addl
in
sbb
mov
or
mov
cmp
dec
add
cmpsl
xchg
pushf
insl
loope
push
cmp
push
dec
or
or
andb
mov
jo
sbb
ja
add
mov
adc
das
push
push
jge
cltd
stc
adc
mov
add
add
sub
fwait
sti
mov
mov
out
sub
cli
mov
push
cwtl
int
sahf
insl
mov
dec
hlt
sti
xor
ljmp
fiadds
cld
adc
adc
mov
push
in
inc
sbb
and
sub
jecxz
lods
pop
mov
inc
push
pop
dec
inc
rcll
xchg
or
push
mov
pop
mov
sbb
test
pop
int3
jge
mov
mov
outsb
xchg
sbb
es
iret
sub
cmp
lods
cmp
or
push
sahf
lret
cmp
mov
stos
pop
cmpsl
sbbl
add
cmp
rcl
fnstenv
call
mov
sbbl
cmpsl
popf
adc
addl
jo
call
in
lret
testl
imul
xchg
sarl
insl
lods
and
movsl
add
xchg
sub
push
int
mov
repnz
mov
push
or
mov
stc
xor
or
test
cmp
movzwl
push
add
mov
test
jnp
mov
scas
inc
out
sbb
jnp
out
add
nop
sub
inc
or
adc
mov
hlt
mov
mov
ret
nop
sbb
jge
addr16
insl
movsl
push
cmp
movsb
mov
cmc
inc
jae
fldcw
arpl
and
dec
push
sahf
lret
inc
or
fistpll
push
ret
rol
dec
inc
sbb
fcmovu
arpl
xchg
mov
notl
and
shl
sbb
pop
imul
cmpsl
or
decb
sub
in
adc
mov
mov
xor
lret
xchg
dec
dec
xchg
mov
lret
movsl
adc
wrmsr
pusha
sbb
add
xchg
pop
in
xorl
jbe
adc
ror
test
inc
mov
adc
mov
or
push
mov
andl
inc
xor
shrb
adc
sahf
lcall
xorl
jl
aad
sbb
das
push
inc
rol
int3
divl
stos
imul
pop
je
roll
mov
add
and
cmp
stos
outsl
stos
sbbl
inc
scas
mov
and
inc
xchg
ss
scas
cwtl
mov
mov
jge
mov
pushf
sbb
cltd
sbb
jb
fmull
repz
or
sub
out
mov
subl
aam
push
cmp
mov
dec
sbbl
jae
arpl
sbb
dec
sbb
shlb
mov
cltd
shll
stc
sbb
mov
fcmovbe
mov
or
xor
cmp
jge
mov
ret
negl
sbb
adc
add
cmp
outsb
imul
int
daa
cmpsb
je
psubq
ss
stc
sub
sbb
mov
lea
into
dec
cmp
fldt
psllw
ds
pop
cli
cmp
add
decl
add
mov
xor
mov
add
outsl
sbb
dec
test
rolb
sub
call
add
out
mov
sbb
dec
xlat
mov
pop
cmp
fldl
mov
sub
mov
dec
xor
sbb
outsl
inc
inc
push
mov
lds
xchg
cmp
pop
pop
movsl
test
pop
popf
push
imul
add
cmp
nop
lds
sbb
pop
sbb
dec
pop
xchg
div
test
test
test
add
fisttpl
sub
jl
clc
pop
dec
pop
scas
jne
xchg
mov
cli
xor
cmp
sub
and
rolb
inc
cld
sub
bound
ret
gs
ss
jb
mov
jmp
enter
outsl
inc
xchg
mov
pop
or
cmp
sbb
into
jno
mov
sbbl
jecxz
ss
push
mov
out
lahf
add
dec
aaa
nop
in
sahf
popa
cmpsb
and
in
and
pop
test
mov
inc
ret
xchg
jge
lret
mov
jmp
into
mov
popa
pushf
mov
xor
sbb
outsb
hlt
push
mov
fnsave
clc
sbb
xchg
std
inc
jo
add
pop
jne
ret
popf
or
add
add
mov
sub
push
clc
ljmp
hlt
cmp
fists
repnz
sub
fimuls
add
nop
push
pop
add
imul
adc
idivb
popa
stos
push
mov
insl
in
cmp
lea
ds
mov
xor
loop
sbb
lea
fadds
popf
dec
mov
push
xor
xlat
sbb
mov
fldln2
sub
ds
fstps
inc
mov
andl
sub
adc
jae
add
imul
cwtl
pop
sbb
imul
push
mov
cmpsb
insl
add
xor
repz
add
pop
pop
mov
mov
cmpsl
mov
arpl
xchg
aam
mov
xor
and
sarl
mov
cmpsl
mov
rclb
add
in
int
fs
xor
inc
cmp
in
jl
cmpsl
arpl
sti
xchg
sbb
adc
cmp
imul
lret
cli
or
jl
mov
lods
mov
sub
lcall
ljmp
jne
repz
xor
xor
add
inc
gs
push
bound
and
sbb
cli
data16
cmp
cmp
adc
out
fs
mov
mov
out
in
push
sub
sub
cmp
mov
loop
sti
or
sahf
cwtl
incl
cmpl
jmp
pushf
ret
aas
data16
mov
mov
sub
repz
andl
push
loopne
xchg
cmpb
test
lret
sbb
jb
lock
out
adc
icebp
pop
push
xorl
jno
hlt
mulb
dec
jo
cltd
inc
pop
roll
inc
sub
stos
sbb
inc
xlat
in
push
and
mov
aaa
test
jge
and
cli
ret
int
pop
xor
cwtl
dec
jmp
icebp
dec
outsb
es
sbb
mov
cmp
xchg
cli
add
loop
cmp
repz
fwait
mov
rclb
push
or
andl
lods
movsl
sti
jecxz
mov
les
jge
sbb
dec
sbbb
mov
and
xorl
shll
gs
mov
sub
push
sbb
inc
call
xor
int3
cmp
jmp
or
dec
orl
cmp
into
hlt
cmpsl
sbb
xchg
int
push
sahf
xchg
sub
xchg
addr16
jle
add
mov
adc
jecxz
imul
mov
mov
shlb
mov
sbb
adc
push
sbb
cmp
or
roll
add
adc
je
andl
mov
jg
pop
sbb
in
cmc
dec
cmp
push
jmp
add
or
sbbl
mov
iret
push
in
push
fmull
fistpl
icebp
loop
fsubrs
pop
inc
xchg
mov
sti
gs
je
dec
xchg
cli
stc
xor
cltd
scas
xor
sbb
js
cs
aam
push
add
loopne
ja
jp
in
jo
xorl
sbb
and
or
add
mov
out
pop
sbb
push
pusha
stc
ljmp
mov
scas
ds
shrl
sbb
mov
imul
repnz
fsubrs
aaa
ret
inc
mov
std
dec
subl
cltd
test
ss
xchg
and
fstps
test
push
add
mov
arpl
jo
dec
aaa
or
dec
xchg
imul
push
push
cltd
sub
test
inc
outsb
test
pop
dec
lcall
adc
ljmp
loopne
xor
hlt
clc
sub
jae
nop
pushf
mov
mov
cmp
mov
gs
mov
cmc
and
popf
inc
js
mov
ret
mov
and
lock
xlat
inc
mov
aad
and
jg
add
mov
daa
xor
rol
or
ja
sbb
lcall
and
xchg
push
xor
test
lds
inc
mov
outsb
jnp
sub
mov
dec
fwait
out
mov
mov
add
mov
and
xorl
push
xchg
or
cmc
clc
add
clc
arpl
loope
test
mov
adc
js
sbb
xlat
and
mov
add
dec
shr
orl
out
add
mov
sti
movsl
lahf
sbb
cmpl
movsl
mov
mov
or
jge
hlt
jp
js
loop
sub
fsubl
lret
insl
and
mov
shl
xchg
push
les
dec
push
xchg
insb
jae
mov
in
cwtl
cmc
push
int
add
mov
mov
fidivrl
xorb
ret
mov
pop
add
push
push
mov
popfw
pop
sbb
inc
cmp
add
aas
inc
xorl
insb
xchg
add
lahf
sub
push
sbbl
test
mov
imull
lds
outsb
lea
mov
jb
fst
stc
mov
pop
lock
jl
cmp
out
cltd
mov
out
cmpsl
push
sbb
push
and
mov
in
test
jo
push
mov
or
arpl
sbb
movsl
dec
xchg
inc
and
out
mov
loope
push
push
shrb
std
iret
pop
jo
add
stc
push
pop
pusha
insb
aas
adc
push
jge
pop
lahf
push
pop
adc
pop
dec
faddl
jns
loope
cld
mov
mov
mov
push
fsubl
add
adc
enter
jge
and
loopne
mov
lods
addr16
xchg
sbb
icebp
loope
mov
add
scas
into
mov
mov
jmp
mov
enter
dec
out
rcr
sbb
jp
aam
mov
pop
inc
add
pop
sbb
mov
loopne
ds
jl
mov
jg
inc
shlb
dec
fs
adc
sbb
aas
pop
in
sbb
adcb
mov
pop
iret
mov
stc
call
mov
mov
fs
mov
out
cli
sbbl
lock
or
stc
jl
sbb
pop
mov
add
push
lahf
mov
cld
addl
mov
int
adc
sti
lahf
mov
cmp
out
fcoml
mov
mov
jg
jo
into
xchg
or
aaa
stc
movb
and
mov
mov
in
imul
fists
roll
mov
dec
cli
sti
lcall
cmpsb
insb
lcall
sbb
test
add
push
mov
mov
notb
faddl
pop
push
cmc
sub
hlt
addl
cmp
add
cld
ret
mov
loopne
clc
jo
ds
dec
loop
testl
mov
repnz
sub
jae
inc
sbbb
int
jmp
add
xchg
push
lcall
inc
sbb
sbb
inc
call
adc
lahf
fs
aaa
sub
cmp
icebp
xor
inc
sbb
fsubrs
add
pop
loop
pop
xor
leave
add
mov
lea
rolb
mov
sbb
push
adc
mov
bound
mov
ja
iret
sbb
cmp
test
mulb
jp
and
cmp
inc
sub
push
mov
sbb
mov
sbb
pop
adc
cld
add
jae
inc
test
cmpb
mov
in
lea
mov
inc
insl
fwait
xor
aam
push
cld
ret
and
ret
icebp
clc
push
imul
mov
jecxz
jb
add
addr16
sub
jo
lea
aad
mov
push
roll
addr16
push
push
test
imul
cltd
inc
out
mov
sbb
nop
movsb
cmp
jo
jb
subb
fdivrs
push
addl
inc
push
mov
xor
sub
and
adc
cli
lret
pop
andl
test
mov
ss
inc
out
sub
decl
int
leave
dec
leave
add
ja
sbb
lods
and
sbbl
xchg
into
mov
adc
mov
dec
pop
shrl
and
jnp
dec
dec
xor
stos
push
ret
inc
inc
popf
add
mov
add
cltd
push
and
nop
mov
jl
mov
ficoms
ret
xchg
and
popl
sub
lock
jb
sub
jmp
cmp
adc
insb
fstps
sahf
icebp
aas
pop
addr16
sbb
test
cmp
shll
fnstcw
scas
loopne
imul
mov
push
in
jbe
push
jae
add
jge
dec
xorl
xchg
popf
push
pop
jno
mov
lock
in
sbb
cwtl
sarb
dec
mov
jl
in
mov
shrl
jns
xor
mov
inc
dec
into
push
jp
lcall
lret
jae
sbb
rcrl
enter
or
pop
sbb
test
aad
mov
insb
inc
mov
or
stos
jg
add
add
negl
sub
sbb
push
adc
mov
mov
or
arpl
mov
xor
movsl
cmp
inc
or
xor
mov
daa
cmovo
int
sbb
in
inc
sbb
xchg
jae
mov
pop
shll
sbb
and
and
add
lds
jbe
adc
xor
jl
push
push
mov
pop
lods
jnp
push
sub
jb
pop
mov
fildl
repz
xorl
scas
sti
push
add
sti
xchg
push
sub
add
push
jnp
arpl
movsb
mov
stc
in
inc
sbb
testb
add
dec
pop
cmp
js
mov
push
in
pop
fisttps
mov
cwtl
and
fldl
or
or
je
add
push
sbb
jne
popa
jmp
aas
in
jle
insb
adcl
inc
cmpsl
xchg
push
add
negl
lods
fmuls
push
push
clc
mov
inc
mov
aam
or
out
fcomps
adc
addr16
cmc
dec
mov
cmp
out
out
loop
lds
sahf
dec
mov
sbb
test
add
sub
jae
outsb
push
and
xchg
movsl
cmp
jnp
xor
dec
and
jo
mov
lret
cmpsl
es
outsl
gs
dec
loop
adc
jb
test
mov
xorl
shll
mov
mov
inc
cmp
push
sbb
pop
pop
sbb
test
cltd
loopne
mov
popa
mov
pop
rcrl
testl
add
gs
fnstcw
andb
pop
gs
addr16
and
shl
inc
or
cmc
leave
imull
sbb
adc
push
jae
lds
mov
decl
subl
mov
je
addl
push
cltd
das
iret
mov
xor
push
jp
in
add
and
jae
stc
push
push
xchg
pop
mov
xor
cmp
sbb
loopne
pusha
xchg
les
add
push
lock
repz
xchg
inc
cmp
fwait
jmp
cmp
repz
mov
lock
test
push
scas
test
lahf
jne
mov
pop
hlt
push
ret
ss
hlt
jo
mov
xor
stos
mov
lea
stc
xor
jno
dec
or
jo
out
adc
add
pop
enter
jecxz
and
pop
cli
insb
out
adc
aad
mov
call
cmp
bound
jge
sub
add
jecxz
xchg
dec
jmp
cmp
mov
inc
pop
sbb
lods
and
out
and
mov
gs
cmp
sub
mov
sbb
mov
xchg
ror
lret
add
ret
ja
imul
xchg
fcmovnu
orl
movntps
mov
sbb
aaa
xor
and
fistpll
andb
imul
out
sub
push
mov
or
int3
scas
out
sbb
call
in
jns
data16
inc
mov
lock
sbb
sbb
mov
xchg
mov
scas
sbb
push
jno
ret
sbbl
clc
pop
orl
jbe
sti
insl
mov
sbb
bswap
xchg
inc
jb
mov
cmc
dec
cmp
sub
pop
sbb
popa
mov
dec
fstpl
xor
outsb
subl
fsubl
mov
insb
iret
mov
outsb
push
sbb
loop
dec
pop
call
xor
fistpll
in
cmpl
testb
test
scas
jno
xor
loopne
lcall
mov
ret
and
mov
dec
sbb
fnsave
pop
sub
movsb
orl
imul
mov
jns
cmp
imulb
out
xor
stc
fbld
adc
lcall
xor
ret
scas
adc
lds
push
xor
adcb
dec
int3
or
bound
cmpl
push
ret
pop
jl
dec
jo
xor
ret
movsb
inc
and
das
aaa
dec
mov
divb
shlb
dec
adc
loopne
sahf
mov
cmp
add
dec
aam
sbb
mov
cli
jnp
shrl
aam
adc
mov
pop
scas
xchg
and
xor
testl
jl
stos
xor
add
xchg
adc
cmpl
lret
mov
add
xchg
and
lock
loopne
xorl
pop
inc
imul
jne
mov
jnp
rcll
mov
test
enter
pushf
add
or
add
xor
sbb
xchg
or
jbe
std
icebp
xchg
fsubrp
sbb
sbb
rcrb
pop
ja
loop
pushf
test
xor
int3
jle
add
rorl
pop
sbb
xchg
xor
aad
decl
insl
xor
sbb
mov
sub
mov
popf
sbb
loope
mov
filds
mov
aad
imul
lcall
daa
loopne
and
cwtl
rcrl
jmp
sub
aas
cmpb
lret
jg
aas
imul
xor
sbb
mov
fmull
mov
mov
xchg
xor
pop
movsb
imul
pop
orl
adc
inc
add
aas
aad
sbb
push
inc
jp
cmp
sbb
addr16
rclb
dec
pushf
cmpsb
mov
out
fwait
in
fcomps
outsl
sub
sub
sbb
push
dec
sbb
in
lock
add
sbb
mov
fnstsw
mov
push
outsl
fwait
xchg
sbb
dec
cmc
add
cli
pop
out
rcrl
sub
sbb
jmp
inc
xchg
jg
and
ljmp
and
mov
lock
sbb
jle
push
in
sbb
add
add
rolb
dec
mov
or
mov
bound
and
movsb
or
mov
addl
sbbl
jecxz
mov
cmp
and
jne
and
cs
mov
addl
adc
inc
xchg
mov
add
cmp
movsl
call
cltd
test
xchg
sub
mov
jl
and
sbb
addr16
daa
jge
mov
call
mov
pop
mov
adc
xchg
mov
ret
in
sbb
sbb
cli
cli
inc
cld
sub
mov
and
add
in
add
adc
cltd
sub
adc
sbb
jo
mov
rcrb
cmc
fldt
push
mov
popf
test
ret
add
pop
out
cmpl
or
dec
in
in
out
sbb
cs
pop
clc
std
icebp
inc
lds
in
xchg
jb
add
movsl
sbb
popa
mov
sub
push
and
cwtl
pop
pop
adc
popf
xor
add
add
in
mov
cmp
and
pop
add
pop
push
jge
aas
xchg
and
pop
int
jmp
sub
push
cmp
lods
out
in
mov
insb
cmp
lahf
cwtl
cmp
jae
fstpt
arpl
adcl
inc
addr16
mov
cltd
sbb
pop
push
add
enter
push
lret
xchg
cli
fwait
rcll
call
pop
mov
das
mov
adcl
push
rcr
jl
mov
ror
popa
testl
mov
sub
mov
lds
out
in
hlt
mov
or
xchg
pop
jmp
subl
sbb
inc
inc
inc
mov
test
pop
arpl
mov
enter
cmpl
sbb
sahf
push
cmp
add
test
mov
jne
scas
cmpsl
pusha
aas
cmp
push
out
xor
push
in
mov
lcall
sbb
lea
in
jl
adc
aad
jb
bound
mov
add
or
or
les
inc
add
aaa
xor
mov
stc
mov
mov
pop
jb
sub
stos
inc
xorl
mov
mov
stos
outsl
cmp
lods
add
sbb
pusha
or
push
cmpsb
ds
out
into
mov
sarb
out
out
xor
xchg
pop
test
adc
lahf
inc
xchg
pusha
adc
cmp
movsb
mov
orb
push
sbb
pop
insb
hlt
inc
inc
int
sub
inc
cmp
xor
lret
mov
mov
adcb
add
jp
inc
insb
sbb
adc
sbb
mov
dec
xor
aas
or
fistps
imul
in
or
mov
add
scas
inc
xchg
lods
xchg
icebp
enter
into
xchg
loopne
and
xchg
andl
pop
arpl
xor
cmp
push
mov
sub
or
sub
push
or
sbb
cs
loopne
fdivr
jns
sbb
dec
aas
pop
add
pop
aaa
pop
leave
pushf
jecxz
push
sbb
imul
cmp
mov
pusha
mov
lea
cvtdq2ps
xchg
inc
sub
and
das
dec
jl
add
insb
sbb
sti
fldenv
dec
imul
xchg
mov
push
cmpsl
mov
sbb
in
adc
imul
aaa
or
mov
sub
dec
sbb
out
xor
mov
aam
nop
out
cwtl
ficoms
scas
popa
jne
cmc
mov
xchg
mov
adc
adc
mov
mov
xor
adc
or
add
sbb
mov
subl
push
pop
or
mov
imul
dec
pextrw
pop
das
imul
rcrb
push
test
jns
mov
fimull
negl
daa
movsb
add
cmp
data16
rcll
sbb
xchg
mov
sub
mov
out
mov
jecxz
je
sbb
dec
xor
or
outsb
pop
dec
orl
dec
add
pop
jle
mov
mov
dec
roll
and
add
fsts
inc
loope
or
pop
or
inc
fs
out
xorb
fiadds
loope
add
cwtl
xchg
dec
test
xchg
daa
subl
scas
mov
ljmp
xor
mov
int
push
add
lahf
dec
cmpsb
mulb
mov
cli
scas
sbb
mov
and
gs
je
adcl
ja
subl
sarl
dec
add
dec
test
movsl
rclb
icebp
or
cmp
subl
int
inc
mov
ss
or
stos
or
mov
loopne
enter
and
test
sub
je
sbb
add
or
sub
mov
sbb
imul
add
or
divb
add
cmp
pushf
mov
or
sbb
je
pop
inc
jmp
jae
jmp
jo
out
jnp
add
cld
adc
andl
dec
dec
mov
and
pusha
imul
arpl
sbb
pop
push
outsl
testb
xlat
or
add
int3
fisubl
test
add
cmpl
iret
cli
adcl
clc
stos
mov
pusha
movsl
mov
jg
lods
not
scas
push
push
jbe
mov
out
adc
xor
je
cmpl
pop
fwait
sti
push
sarb
int3
test
mov
sub
jnp
and
sbb
inc
mov
mov
dec
and
adc
aam
sub
inc
push
scas
inc
add
cmp
inc
inc
mov
push
jg
xor
inc
mov
push
jnp
xchg
dec
pop
std
push
mov
cmpb
out
sbb
mov
dec
adc
push
pop
je
movsb
jne
sar
xchg
sub
sub
cltd
mov
scas
dec
loope
push
add
sbb
lret
lock
add
outsb
mov
repnz
xlat
and
add
jecxz
xchg
xor
orl
xlat
push
jecxz
mov
push
ss
icebp
pop
and
fnstcw
xchg
sbb
or
and
pop
and
add
insb
mov
xchg
or
inc
cmp
xchg
xlat
add
xor
add
movsb
adc
push
fisubrs
subb
out
xchg
ret
into
lret
cmpl
movsb
jo
xor
std
popf
push
pop
push
xchg
stos
adc
mov
jecxz
cmpsl
repnz
fists
sbb
rcll
mov
xchg
jmp
dec
mov
adcl
shr
mov
pop
xchg
test
lret
xchg
mov
push
sbb
je
daa
mov
movsl
cmpsb
dec
fcmovu
mov
xorl
out
stc
add
repnz
add
push
mov
jno
ljmp
popa
mov
ja
mov
add
cmp
push
cmp
pusha
ja
pop
mov
nop
add
mov
loop
cmpl
es
cmp
sbb
mov
cmp
cmp
cltd
in
inc
jecxz
testb
ret
push
incl
test
out
cmc
add
push
cmp
aam
andb
dec
mov
outsl
push
sbbl
gs
mov
cmc
mov
dec
or
xor
add
cmpsb
pop
mov
mov
das
fildll
lea
lcall
and
les
add
dec
cmp
sbb
mov
addl
mov
pusha
inc
push
dec
adc
mov
fimull
lods
insl
push
sub
mov
push
aas
in
and
ret
or
dec
sbb
cmpsl
add
icebp
xchg
pop
sub
adc
inc
pop
dec
mov
adc
fs
pop
icebp
jmp
push
repz
inc
iret
icebp
inc
sbb
loope
jmp
sub
sbb
xchg
or
mov
sbb
sti
dec
pop
mov
or
adcb
xor
aam
add
inc
xchg
es
fstps
inc
ja
or
sbb
repz
jno
hlt
lret
nop
nop
xchg
lock
enter
std
notl
push
pusha
mull
cmp
mov
sub
xchg
sbb
stc
gs
mov
into
sbb
sbb
xor
sbb
inc
jg
and
pusha
sbb
pop
pop
pop
or
xor
jmp
test
sub
dec
or
xchg
push
mov
test
push
sahf
stos
pop
and
nop
out
jo
loopne
add
scas
shll
mov
pusha
lahf
sub
mov
xorb
sbbb
inc
adc
dec
or
add
pop
popa
push
in
and
add
and
insb
mov
ljmp
fistpl
cli
ret
in
mov
subl
xlat
das
pop
pop
ror
inc
mov
add
adc
adc
mov
ss
sbb
sbb
vandnps
ljmp
cmp
flds
add
xchg
cmp
lea
addl
push
push
cmp
xchg
mov
out
stos
add
out
cmc
and
aas
jp
fsubrl
pusha
aad
mov
cmp
cmp
xor
inc
jae
mov
jb
sbb
mov
sbb
inc
inc
inc
cmp
jae
push
les
dec
divl
push
orl
loope
jecxz
sbb
movsl
mov
fsubrl
adc
mov
mov
mov
mov
addr16
add
movsb
lods
int
es
and
push
inc
sub
pop
std
push
popf
mov
in
mov
sbb
outsb
fwait
cwtl
add
mov
adc
inc
pop
adcl
cmpsb
movsb
pop
cmc
ljmp
enter
outsb
jg
out
pop
sbbl
pop
adc
test
mov
lahf
hlt
popf
inc
mov
adc
mov
or
addl
jge
sbb
mov
pop
push
push
lcall
fists
or
cmp
and
mov
xor
cmp
scas
xchg
lcall
inc
in
cmp
or
mov
hlt
mov
mov
movsb
adcl
lods
or
test
ret
enter
in
push
popf
add
push
icebp
mov
jno
cmpl
cltd
icebp
push
out
lods
mov
lods
enter
pop
subl
adc
mov
push
inc
mov
mov
aas
and
mov
test
xor
sbb
ror
push
daa
shl
ret
adc
and
scas
je
push
flds
daa
imul
inc
cld
imul
int
data16
dec
out
shlb
sbb
adcl
popa
xor
dec
cs
insl
ret
jp
add
mov
clc
inc
cld
and
add
xchg
fistpl
add
test
lcall
push
and
mov
sti
mul
in
inc
shlb
sbb
push
fwait
pop
test
jnp
js
and
sti
dec
xchg
and
icebp
mov
lods
jp
push
add
cs
pop
sbbl
in
mov
mov
xor
test
xchg
cwtl
fistps
jle
enter
mov
xchg
jns
jo
leave
out
sbb
stos
inc
inc
aas
gs
clc
test
or
cmc
mov
mov
add
or
roll
repnz
jp
add
xchg
test
mov
dec
or
pslld
xor
hlt
jnp
mov
push
in
and
jge
push
sbb
push
add
xchg
mov
sub
sub
cmc
dec
sbb
pusha
les
popa
mov
in
std
xorb
shll
lods
and
mov
loop
jo
je
inc
mov
add
data16
mov
insl
flds
test
pop
sti
mov
dec
push
cmpsl
push
xchg
xchg
mov
xchg
dec
cmp
orl
add
push
mov
scas
addr16
leave
inc
icebp
mov
xor
add
mov
or
sbb
xor
iret
push
cmp
inc
sti
add
mov
test
or
and
pop
fadds
movsb
hlt
orl
shl
call
xchg
xor
sbb
imul
andb
hlt
mov
cmp
inc
push
int
into
push
and
je
mov
jge
mov
sbb
mov
sbb
mov
imul
pop
adc
orl
lret
xor
jae
stc
adc
mov
pcmpeqd
push
and
in
mov
mov
cwtl
mov
pop
add
or
dec
gs
cli
add
mov
int
pop
les
cltd
adc
mov
into
pop
mov
rorl
stos
std
dec
xor
mov
lret
push
negl
imull
inc
out
sbb
mov
dec
mov
fistl
test
je
cmp
cmp
out
mov
push
pop
adc
mov
adcb
sti
je
xchg
or
xor
enter
mov
sub
int3
lret
mov
pop
xor
cmp
xchg
test
inc
push
loope
das
iret
cld
pushf
icebp
icebp
xchg
mov
xchg
out
sbb
fldenv
xchg
and
inc
mov
das
aas
xor
and
sti
push
negl
in
into
cmp
sbb
mov
xchg
and
mov
sub
cmpsl
mov
ret
cmpsb
jg
cmp
sbb
push
mov
ret
mov
loopne
ficomps
movsb
popf
adc
sub
push
jns
mov
jno
adc
neg
popa
cmp
sbb
clc
stc
js
mov
push
xchg
sti
enter
cmp
sbb
out
ds
pop
das
dec
outsb
imul
xor
pop
push
pop
pop
add
decl
cmpsb
mov
test
sahf
xchg
pop
dec
imul
je
sub
lods
add
mov
cmp
dec
jb
jl
cmp
inc
shll
testl
sbb
mov
xchg
add
popa
jae
mov
and
adc
arpl
xchg
mov
sbb
inc
pusha
loope
sbb
sbb
jle
inc
les
add
xor
cmp
inc
jg
mov
stc
loop
xor
xorl
add
and
cmp
and
setbe
xor
or
or
inc
loop
div
addb
add
out
das
and
sbb
sbb
loopne
inc
jl
pop
in
add
into
dec
test
jnp
dec
add
xchg
cmp
subl
mov
inc
sbbl
rolb
adc
scas
push
jg
test
jge
jnp
inc
xchg
aaa
mov
sar
rclb
cli
pop
outsl
out
push
jecxz
call
cmpsl
test
out
xchg
dec
ljmp
dec
mov
xchg
fnstcw
push
push
push
push
sbb
enter
xchg
fxch
ret
lahf
jne
call
pop
andb
enter
cli
sti
add
pop
mov
addb
mov
dec
inc
cmc
adc
ja
loopne
and
lcall
jnp
out
jge
sbb
jb
repz
or
cmpb
cmpb
inc
lcall
stos
cmovge
test
mov
xchg
adc
jbe
pop
xor
ficomps
xchg
adc
rcrb
inc
push
add
dec
mov
mov
lods
adc
mov
xor
mov
imul
clc
sbb
test
add
adc
ficomps
pop
mov
push
or
scas
adc
and
jno
adc
mov
xorl
jns
add
mov
pop
cmpsl
shr
stos
pop
ret
pushf
add
cld
dec
jo
inc
shl
subl
push
or
add
mov
xchg
leave
mov
sahf
fwait
in
add
xchg
mov
add
sbb
bnd
inc
mov
inc
inc
xchg
sbb
xor
fwait
outsb
enter
mov
gs
mov
xchg
ss
idivl
push
pop
mov
mov
xchg
pop
stos
ret
popa
jge
push
and
loopne
ss
adc
ds
pop
dec
dec
and
add
das
xchg
sbb
mov
mov
jl
xchg
and
ficompl
daa
xlat
jae
rolb
test
sub
andl
imul
pushf
inc
mov
repnz
movsb
add
pop
das
jge
loope
add
and
in
out
add
add
mov
icebp
or
js
jmp
stc
add
call
sbbb
adc
into
xchg
xor
add
repnz
stos
mov
mov
loope
inc
movsb
mov
cltd
add
inc
xor
andl
inc
in
mul
mov
xlat
inc
popf
xor
es
mov
xchg
jp
xlat
add
lods
test
sbb
aas
xor
mov
inc
imul
jg
sbb
adc
sbb
sbb
lds
aas
xor
xorl
fcomp
in
icebp
cmp
mov
outsb
jnp
scas
jmp
adcl
loop
mov
and
insb
addl
aaa
push
push
push
xchg
mov
inc
add
mov
out
mov
jmp
aas
jb
imul
scas
adc
orl
sub
mov
jae
pop
inc
arpl
xchg
mov
mov
inc
decl
lcall
daa
call
dec
lods
clc
jne
mov
pop
stos
pop
push
sub
xor
imul
sub
dec
sbb
or
or
pop
mov
or
imul
lret
enter
add
sub
sbb
adc
pop
push
js
aam
repz
push
stc
mov
lcall
in
movsb
sbb
aas
and
iret
or
mov
insl
mov
jecxz
std
and
inc
mov
std
xchg
push
add
test
jecxz
in
add
fcompl
ljmp
jo
loopne
add
test
out
aas
roll
bound
shl
sti
lcall
push
lret
repnz
iret
add
aam
std
push
xchg
sti
mov
mov
call
mov
xchg
adc
push
push
clc
pop
and
imul
rcrl
filds
test
jg
xchg
dec
cltd
or
mov
adcl
mov
in
xor
mov
xlat
xor
sub
inc
fnstsw
subb
fidivl
pop
mov
or
jg
adc
cmc
sbb
enter
mov
sbb
out
and
fcoms
push
jo
sbb
xorl
out
mov
cmp
push
lock
or
push
jno
pop
andl
jnp
ljmp
sahf
in
adc
jmp
lock
addl
ljmp
cli
data16
sbb
icebp
or
jne
add
inc
out
adcl
lahf
aad
dec
out
cld
or
es
adc
cmovle
or
adc
imul
icebp
nop
add
and
dec
add
sbb
stc
stos
popa
orl
and
orl
incl
imul
mov
int3
xor
push
dec
mov
mov
mov
xor
and
cwtl
js
mov
pop
jne
cmpsl
sbb
inc
xor
mov
hlt
jne
sbb
out
dec
push
push
sbbl
pop
out
mov
add
jae
adc
cmp
cmp
cltd
and
in
imul
loop
fcomps
push
push
imul
sbb
pop
mov
lret
mov
mov
outsl
std
push
loope
fiadds
pop
mov
mov
pop
jns
mov
aaa
fs
cltd
jg
sub
mov
xor
sub
jnp
adc
pop
call
in
jmp
gs
dec
cmp
add
int
cli
xchg
mov
sarl
data16
loope
xchg
sbb
outsb
cmp
je
mov
mov
cs
ret
stos
sysexit
or
dec
and
iret
ja
test
mov
or
clc
es
mov
test
cs
sbb
aaa
outsl
pop
pop
add
je
mov
mov
lds
sbb
xor
sbb
and
bound
subl
mov
stc
sub
mov
push
scas
or
orl
fists
add
xchg
dec
iret
insl
orl
xchg
and
pop
popf
cwtl
daa
jae
ret
xor
xor
fwait
xlat
and
cmp
pop
aaa
lcall
addb
mov
sub
in
in
sub
stos
mov
lea
mov
sbb
pop
inc
mov
add
ljmp
out
sbb
pop
pop
sub
pop
mov
loopew
push
push
fistpll
xchg
daa
lahf
pop
mov
add
hlt
fnop
test
xor
xchg
xor
bound
push
pusha
push
fisttpl
mov
lods
xor
mov
inc
and
dec
andl
out
sub
jbe
pop
repnz
lock
pop
or
push
movsl
cmpsb
rcrl
adc
push
add
and
sbb
cltd
fwait
jl
jne
mov
popf
outsl
rclb
add
mov
fptan
pushf
sarb
sub
inc
sbbl
xchg
loop
mov
in
and
push
call
in
inc
ja
cmp
pop
dec
jge
inc
das
subl
xor
lret
dec
lahf
jnp
movsb
mov
pushaw
dec
mov
pop
add
mov
aam
or
repz
cltd
roll
and
mov
jae
push
sub
or
adc
fdivl
mov
mov
cmp
fcomip
xchg
cli
adc
add
dec
ret
or
sbbl
push
lahf
mov
push
xchg
pop
sub
adc
lahf
sub
ret
cmpsl
mov
dec
mov
cltd
popf
adc
jae
lods
loop
adc
test
cld
movsl
insl
cli
cmp
adc
sub
and
fs
push
push
push
pop
dec
outsl
mov
mov
or
push
nop
rcr
add
push
dec
arpl
into
clc
sub
xchg
or
add
pop
imul
stc
cmp
pushf
inc
pop
dec
lcall
jg
jae
fimull
fcom
pop
mov
stos
xchg
mov
rolb
mov
fucomi
repz
ret
pop
dec
xlat
into
dec
xchg
pushf
rcll
pop
and
or
fmuls
cli
inc
xchg
dec
inc
fs
cmp
int3
jnp
lods
or
pop
push
notb
fistl
outsl
into
jecxz
fmul
add
insl
jg
xchg
dec
cmpsb
loope
stos
xchg
mov
xchg
bound
ja
sub
jl
mov
xor
js
repnz
add
push
add
add
xchg
xor
mov
rorb
sbb
mov
mov
inc
sub
addr16
mov
pushl
cmp
push
lcall
sub
jns
add
adc
mov
xorb
jmp
jnp
imul
jb
mov
test
add
subl
push
xor
outsb
mov
push
adc
fbld
fdiv
jae
movsl
add
adc
mov
jg
js
sti
cmpsl
push
sti
xor
ret
test
pop
sbb
fsts
sarl
mov
xchg
repnz
xchg
ds
dec
or
test
pop
js
sub
addr16
sub
cmp
clc
jne
popa
rorb
sarb
scas
mov
sbb
fldl
les
ficomps
stc
cmpsl
in
sbb
mov
push
movsb
mulb
les
neg
mov
jge
test
mov
xor
fstpl
jne
mov
dec
mov
jp
mov
mov
xor
pop
push
push
inc
add
add
js
popa
mov
xchg
aam
adc
adc
es
or
clc
movsl
lahf
push
and
and
mov
aaa
and
pop
test
cmc
in
andb
add
sub
pop
dec
scas
inc
fsubr
movsb
dec
sbb
pop
jmp
push
jmp
fisttpl
sub
push
inc
pop
cltd
sub
sub
movsb
mov
add
ret
movsl
jp
cmp
jns
mov
push
ret
pop
push
sub
icebp
subl
xchg
mov
jne
insb
inc
mov
arpl
xor
xchg
jbe
inc
jge
pop
push
test
mov
jbe
xchg
cmp
add
je
push
aas
mov
cli
xor
mov
cmc
sbbb
pop
loope
std
inc
sbb
popaw
aam
inc
shll
cmpsl
cmpb
movsl
push
fildl
arpl
mov
loope
iret
jmp
push
subb
and
adc
add
fidivrs
iret
mov
cmp
sbb
test
inc
cmpsl
mov
push
sbb
push
jmp
sbb
stc
pop
xor
fsubr
sub
and
jns
cmp
mov
mov
mov
sbb
or
mov
mov
std
aam
jp
sbbb
jge
mov
mov
xchg
sbb
in
xlat
add
outsb
mov
push
mov
sub
mov
clc
mov
sbb
cmc
gs
pop
test
cli
sbb
inc
fdivp
pop
lret
mov
dec
fnstsw
cli
push
int3
test
push
dec
jne
mov
mov
sub
pop
and
cmp
fsubrs
sbb
ljmp
fwait
mov
int3
sbb
jae
and
loopne
rolb
pop
popf
mov
lock
jno
or
lods
mov
sbb
pop
test
loope
ljmp
test
sub
xchg
clc
call
mov
sti
mov
mov
cmp
fsin
dec
dec
test
jge
push
lret
xchg
fbld
add
mov
add
out
jne
pop
lods
push
jecxz
push
inc
and
dec
enter
insb
sbb
jns
add
push
jmp
add
xor
cli
mov
or
fists
sahf
insl
add
inc
or
ss
sti
or
cs
dec
adc
cmp
std
out
cmp
in
adc
sub
inc
cltd
fwait
xchg
pop
mov
add
imul
jno
test
jg
dec
xchg
ss
arpl
ficompl
mov
cmp
push
or
adc
adc
out
pop
fdivrs
jnp
arpl
addr16
sbb
stos
cltd
das
adc
inc
xchg
divl
mov
fildl
test
mov
mov
imul
xchg
icebp
in
dec
test
inc
xor
mov
orl
lahf
pop
inc
mov
pushf
adc
pop
dec
sbb
push
in
test
outsl
push
ret
mov
mov
xchg
cmp
or
clc
add
and
daa
jne
inc
roll
popf
mov
mov
daa
xchg
popl
inc
scas
add
jne
mov
addr16
into
mov
cs
pop
sbb
pop
and
sub
cmp
das
xor
movsb
lods
adc
ret
test
lahf
fistpll
mov
sbb
dec
add
cmp
outsb
xorl
insl
iret
adc
rol
pop
fnstenv
cmp
mov
cli
icebp
test
or
dec
stos
adc
xor
add
xlat
mov
mov
or
jmp
jecxz
mov
lret
shl
ror
jns
mov
cltd
fisubs
pusha
pop
push
cmpsb
daa
xor
mov
push
lret
and
sub
cmc
xor
mov
popa
mov
pop
add
mov
mov
mov
pop
leave
and
js
movsb
dec
sbb
push
mov
in
je
in
cli
or
mov
add
ret
xor
cmp
stc
or
sbb
sub
xchg
std
add
xchg
lahf
sub
lds
in
mov
push
mov
sbbb
mov
mov
fwait
repnz
shll
pop
sub
loope
pop
adc
add
lahf
cmpl
insl
ljmp
mov
and
orl
pop
lret
mov
lcall
repnz
inc
pop
hlt
aad
int
mov
in
inc
sbb
mov
mov
cmpl
mov
xchg
arpl
xor
dec
cmpsl
or
cltd
xchg
pop
or
mov
add
or
loop
jnp
mov
frstor
cmp
sbb
fimull
cmp
cmpsl
mov
sbb
sbb
enter
mov
fistpl
cli
sbb
sti
push
push
imul
test
ret
add
push
xchg
mov
insl
mov
ss
iret
push
shll
cld
inc
lret
vpmacssdd
pop
or
add
jnp
loope
addr16
sub
mov
shr
ret
fwait
in
ret
ljmp
lcall
rorb
jns
sbb
das
add
lahf
jmp
mov
rcrl
out
popa
out
pop
int3
dec
in
repz
movsl
call
andl
dec
inc
cmp
inc
push
js,pt
in
mov
xlat
add
cmp
add
aad
cmp
mov
icebp
psubsb
mov
mov
les
cli
fistpl
sbb
popa
xchg
or
mov
add
cmpsb
arpl
and
cmp
les
inc
scas
je
std
faddl
mov
stc
xor
in
les
sbb
xchg
testb
sbb
fs
mov
xchg
scas
pop
mov
pop
mov
jmp
fmull
mov
and
cmp
lods
jmp
lea
mov
call
mov
mov
mov
mov
mov
add
or
mov
adc
popf
int
and
outsl
xor
popa
cmpsl
mov
test
sahf
add
mov
loopne
sbb
fwait
pop
orl
in
jge
sub
xchg
push
rorl
mov
jno
lods
arpl
mov
jne
pop
sbb
sub
push
inc
push
jns
clc
lock
leave
pop
popf
and
xchg
mov
out
xor
clc
mov
orl
push
loop
mov
push
lret
or
xchg
rolb
mov
pop
loope
rcrl
or
and
add
or
xchg
popf
orl
cmp
mov
jg
mov
mov
sarl
sbb
sbb
lods
dec
cmpsb
mov
fsubs
sub
pop
std
movsb
lahf
and
rorl
gs
xchg
test
popa
stos
mov
push
jo
jg
cld
adc
aad
sbb
and
add
sub
jle
mov
pop
sbb
mov
mov
jg
andl
adc
shl
test
jp
ss
add
xchg
jp
xchg
cmp
imul
cmp
push
repz
sbb
sbb
adc
add
and
insl
lea
mov
fsubrs
cmpl
fisttpll
mov
and
std
add
pop
inc
cmp
cmpsl
add
test
dec
inc
popa
inc
outsb
cmp
mov
lret
xchg
lcall
leave
mov
jg
sub
cmp
push
sbb
xchg
cld
and
lock
jmp
lahf
dec
cmp
jne
jg
sbb
aad
push
jecxz
cmpb
pop
add
int
push
rolb
inc
inc
pop
mov
sbb
lea
adc
mov
dec
repnz
and
mov
mov
mov
sbb
jo
push
shll
sub
addl
scas
in
aaa
andl
cmp
mov
test
add
ljmp
and
icebp
mov
inc
das
xchg
addl
jmp
orl
mov
dec
and
fwait
or
add
aad
aaa
sbb
or
add
movsb
lock
and
push
mov
fildl
out
dec
add
lock
cmp
cmp
ret
add
mov
lea
jns
mov
xchg
xchg
test
xor
push
pop
clc
pop
jb
mov
xchg
mov
sub
in
mov
jb
lahf
subl
inc
pop
xchg
add
ret
repnz
enter
insl
cltd
pop
push
arpl
mov
jb
mov
sbb
inc
nop
pop
xchg
sub
mov
arpl
repz
aas
adc
jns
test
fisubs
stos
add
mov
insl
cmp
lcall
lahf
and
cmp
popf
aaa
es
leave
mov
cmc
and
pop
or
out
sbb
test
jns
sbb
cmc
cmp
mov
mov
aad
jge
fbld
pop
fdivs
mov
cmp
sbb
sahf
lea
rcll
mov
jl
orl
xchg
fidivrs
mov
rol
xor
mov
jecxz
roll
into
inc
aas
je
mov
fwait
aaa
xor
sti
fmull
shlb
pop
lahf
test
inc
lcall
sbb
scas
lahf
xor
pop
mov
pop
arpl
sbb
inc
js
inc
pop
adc
lahf
test
mov
mov
inc
push
xor
ljmp
cmp
pushf
fbld
add
push
pusha
sub
into
adc
rcrb
sub
lahf
mov
in
inc
test
lcall
cmpsb
inc
pop
jne
repnz
outsl
imul
call
leave
push
in
mov
aas
mov
adc
mov
sub
sub
or
and
pop
cmp
pop
pushw
mov
pop
sub
in
add
sub
cld
adc
out
negb
push
mov
xor
sahf
xor
push
push
mov
sarl
push
pusha
dec
mov
add
scas
sub
orl
cmp
scas
xchg
lret
jg
pop
pop
cmovl
mov
out
rolb
mov
sbbl
or
stos
sub
ret
add
xor
sbb
add
jmp
loop
add
outsb
loopne
xchg
adc
lea
test
adc
in
flds
and
aaa
push
pushf
jb
cmc
lahf
pop
lock
sbb
fnstcw
add
mov
lret
loopne
es
mov
leave
xor
les
adc
mov
ret
xchg
cmc
outsl
mov
add
imul
mov
je
and
int
fsubrs
mov
dec
sbb
aaa
mov
add
movsl
stos
and
xor
mov
mov
mov
and
les
xor
xchg
mov
or
sbb
cmc
xor
scas
cwtl
sti
push
jmp
mov
inc
aam
or
jno
test
mov
mov
pop
inc
lret
jns
xor
mov
jmp
fnstcw
leave
push
xchg
push
inc
roll
in
sahf
repz
fdivl
and
add
push
cld
in
imul
bound
cli
in
loopne
cmp
lcall
bound
subl
xchg
movsl
jle
daa
mov
fcomps
loopne
mov
xorl
cltd
orl
xchg
adc
lods
das
xor
popf
mov
in
scas
mov
popa
mov
mov
sub
fwait
pop
push
mov
mov
insb
xorl
loope
movsb
pusha
jmp
sti
sbb
sub
inc
inc
mov
sbb
mov
xchg
add
test
mov
mov
xchg
cmpsl
aaa
inc
xchg
or
push
popf
mov
push
orb
mov
jnp
jp
in
pop
inc
ljmp
ljmp
stc
push
xor
add
aas
pop
imul
int3
filds
ret
add
dec
ds
call
xchg
or
jns
sbb
flds
es
movsb
mov
dec
add
daa
sub
mov
pop
repz
loopne
push
adc
jp
test
sti
lods
aam
xchg
sub
sub
sbb
subb
jno
sbb
insb
jns
into
inc
arpl
movsb
out
lahf
dec
xchg
stos
xchg
das
into
pushf
jno
shrl
stos
and
mov
push
out
push
ss
xchg
mov
xchg
popf
mov
cmp
repnz
xor
mov
push
add
shrb
inc
arpl
pop
xlat
xor
or
xor
and
and
sub
sbb
mov
push
dec
ficomps
iret
fwait
and
pop
mov
add
push
loope
mov
sub
or
pop
mov
shll
insb
std
lea
mov
inc
or
add
xchg
mov
jno
sbb
fwait
mov
fstl
add
stc
fwait
iret
fcmovne
sbb
jg
pop
lods
mov
filds
xorb
pop
add
popl
mov
jle
std
scas
add
lock
adc
xchg
xchg
bound
pop
sbb
jnp
into
mov
insl
xlat
clc
or
jecxz
inc
dec
xorl
inc
es
cmpsl
ret
jo
sbb
pop
adc
mov
shrb
cmpsl
mov
arpl
adc
arpl
adc
fs
adc
jl
xor
addl
movsl
sub
pop
mov
imul
dec
adc
xchg
mov
xchg
shll
pop
icebp
add
xor
xchg
dec
mov
mov
push
adc
pop
shlb
mov
daa
mov
bound
add
xchg
mov
xchg
pop
jne
add
btc
cmpsb
cmp
adc
std
sbb
adc
cli
pop
push
popf
cltd
xor
push
insl
mov
xchg
fwait
jbe
sub
add
daa
sub
insl
add
sbb
cmc
adc
sub
add
adc
ds
add
aas
out
inc
inc
sbb
xor
jge
jns
rol
sbb
pop
dec
rolb
fiadds
dec
cltd
hlt
xor
scas
sti
xchg
pop
push
lock
mov
fcomp
ficoms
cwtl
cs
mov
mov
pop
jns
dec
faddp
aam
testl
pop
jne
xor
mov
push
push
mov
test
dec
jne
in
jae
inc
push
in
aas
scas
sarl
cltd
rorl
nop
rcrb
hlt
sbb
jae
push
lret
cmp
inc
sub
inc
imul
mov
jnp
xchg
fdivrl
or
pop
sbb
mov
jle
pop
sub
aam
stos
dec
sub
test
shll
repnz
add
fs
xchg
xchg
dec
inc
xchg
cmp
mov
imul
cmp
pop
and
jno
xchg
mov
sbb
ljmp
add
adc
inc
loop
mov
gs
mov
insb
mov
jmp
jne
jno
jb
jns
add
sti
push
fdivr
mov
cmp
push
cmpsl
add
adc
insb
aas
aas
and
addl
lods
sub
cwtl
nop
pop
xchg
fs
or
push
movsb
fcmovne
sarl
enter
into
ret
call
int
dec
mul
repz
cmp
xchg
push
sti
dec
sbb
xchg
push
aad
mov
enter
sbb
insb
dec
push
mov
mov
dec
pusha
outsb
pushf
cmpl
popf
lcall
pusha
idivb
and
pop
push
test
cmp
cmp
add
push
push
ss
mov
pop
jmp
test
mov
mov
add
enter
inc
mov
fwait
adc
sbb
mov
push
adc
bound
jmp
sbb
xor
cmp
mov
cmc
push
and
leave
mov
sub
push
arpl
lret
mov
cmp
or
adc
pop
add
sbb
in
xchg
and
faddl
adc
mov
add
pop
push
jno
in
aad
loop
fnsave
inc
out
mov
fcmovu
stos
cmp
mov
mov
pusha
addl
lock
mull
jmp
and
fistpll
pop
pop
and
ja
xor
mov
mov
popl
or
fwait
jns
mov
scas
pop
add
mov
cmp
aas
adcl
das
mov
testl
mov
sbb
xor
sbb
push
mov
push
sbb
pop
xlat
push
loopne
iret
insb
adc
pushf
aaa
cmc
jle
cmc
mov
daa
into
and
push
dec
add
mov
xchg
mov
pop
pop
push
pop
xor
arpl
xchg
into
mov
sbb
mov
sbbl
pop
sub
popf
xchg
cmp
adc
js
or
leave
pop
cmpsl
loop
xor
xor
stos
sub
daa
test
sti
dec
sbb
jae
or
pushf
btc
pop
and
add
adc
in
into
add
dec
sar
mov
scas
std
mov
jl
insb
mov
andb
jb
orl
rol
cmp
push
inc
dec
pop
push
fiadds
test
xor
inc
pop
dec
cmp
cmpsl
or
xchg
cmp
xchg
push
sbb
scas
inc
popf
jl
fnstenv
add
in
scas
jno
and
pop
out
out
add
lret
lcall
cmpsl
inc
adcl
xor
loop
jnp
mov
psubsb
cmp
or
add
icebp
fwait
push
sub
subl
inc
push
mov
hlt
fnstcw
shrl
sbb
movsl
xchg
scas
push
les
loopne
lret
mov
cwtl
test
jl
jl
aam
das
stos
push
cmp
rcll
sbb
dec
pusha
je
int3
repz
add
jl
fisttpll
xchg
inc
fwait
xchg
out
mov
mull
cs
add
stos
jb
and
xchg
roll
in
adc
push
xchg
daa
pop
xor
jbe
fdivs
fcmovnu
mov
cmpsb
inc
mov
mov
xchg
add
adc
xor
pop
lret
into
lret
popa
sbb
pushf
mov
mov
sbb
js
or
add
iret
in
xchg
sbb
push
rolb
shl
jle
push
inc
testl
mov
and
cwtl
add
mov
es
xchg
sub
fstl
xchg
sub
imul
xor
xchg
jbe
mov
mulb
fs
hlt
test
sbb
dec
xor
cmp
or
mov
inc
sbb
cmp
fisttpl
pop
add
into
and
dec
jo
sti
add
adc
sbb
jno
mov
orb
pusha
mov
lcall
dec
jmp
jo
addr16
or
pop
sub
sbb
pop
xchg
add
ja
fsub
push
rcll
mov
bound
adc
add
push
popa
lret
xchg
mov
hlt
push
mov
push
add
xor
add
add
push
jecxz
dec
mov
stc
test
popf
and
dec
dec
add
mov
dec
xor
incb
adc
sbb
repnz
jmp
and
sbb
sub
arpl
cs
paddw
aad
xor
or
cltd
movsl
std
push
mov
test
and
sbb
orb
mov
sub
cs
xchg
cmc
inc
add
in
sub
mov
mov
daa
pushf
mov
mov
or
add
inc
cmp
jge
sub
test
lods
dec
mov
incb
stc
dec
jae
mov
ror
dec
sbb
repnz
dec
popf
test
std
pop
sbb
into
xor
stos
and
bound
mov
ljmp
mov
jp
adcl
dec
mov
mov
pop
stc
aad
mov
lret
cmpl
dec
cmp
jge
adc
xor
adc
push
jbe
jle
inc
into
xchg
or
inc
xor
inc
adcl
cmc
and
sbb
push
sbb
sub
xchg
jno
iret
je
mov
push
aas
push
fsubl
xorl
enter
pusha
lds
xchg
xchg
ficoms
mov
or
aad
add
pop
mov
sub
addl
scas
pop
add
and
mov
lret
aad
and
xchg
out
sub
jnp
insb
cmp
lods
jecxz
jecxz
ret
out
push
add
and
cmpsl
jne
sub
int3
jl
nop
add
movsl
inc
lods
lds
stc
fsts
outsl
sub
inc
lds
adc
xchg
mov
scas
push
iret
movsb
sbb
jno
mov
fcmovne
dec
inc
push
jl,pn
lret
repnz
add
imul
mov
stos
add
push
pop
cli
scas
pop
lahf
adc
pop
inc
rorb
rclb
pop
mov
pop
push
jbe
sbb
pop
imul
add
cmc
ret
test
sbbb
lret
inc
lods
and
cmp
jne
popf
iret
adc
int3
add
aas
test
filds
jmp
xchg
and
pushf
jecxz
into
pop
icebp
loop
cli
xchg
xor
xlat
push
cltd
hlt
and
add
movsl
repnz
sbb
mov
xor
add
jae
addr16
sub
add
xor
es
dec
ret
mov
pop
in
add
ds
push
and
cmp
push
jmp
and
or
pop
xor
lds
mov
imul
cwtl
xorb
test
lcall
mov
aad
jp
dec
pop
dec
adcl
loope
mov
pop
stos
sbb
xor
push
dec
sub
mov
call
out
push
pop
mov
and
out
add
ss
shlb
push
push
jbe
enter
mov
xorl
cli
loopne
out
add
icebp
mov
add
sti
push
mov
fstps
mov
cmpsb
cmpsb
fsubr
push
mov
mov
std
icebp
icebp
sbb
js
mov
int
add
sub
pushl
pop
xchg
cmpsb
je
lods
lret
lea
pop
and
mov
cmp
sbb
ljmp
adc
pop
loope
popf
andl
dec
dec
insl
add
cmp
fs
inc
mov
addr16
adc
ja
add
xor
popf
arpl
sbb
call
or
and
jp
or
orl
add
fsts
jle
pop
cmp
add
sbbb
add
push
xor
pop
out
mov
pop
idivl
xchg
pop
or
xchg
xor
push
and
stc
adc
mov
dec
inc
sbb
and
daa
mov
mov
dec
js
mov
pusha
andl
movsb
call
mov
sub
addr16
sbb
gs
mov
sbb
div
cmp
iret
xorl
pop
xor
push
sub
lcall
orl
mov
fimuls
and
orl
daa
cmp
xor
sti
lds
and
sti
fcomi
gs
push
mov
jnp
andl
xchg
loop
pusha
dec
xchg
dec
mov
push
sbb
mov
lahf
pop
leave
jg
mov
andl
sbb
fildl
movsb
scas
jmp
mov
in
mov
loop
dec
add
shlb
shll
sti
and
pusha
push
fcmovnbe
hlt
aam
mov
mov
scas
ret
jns
xor
jbe
sbb
int3
jnp
mov
and
cmpsb
and
sbb
adc
test
mov
fiadds
adc
scas
mov
lock
pop
jle
into
push
pop
outsl
jp
daa
mov
xchg
push
push
and
sahf
in
push
fxch
push
push
pop
and
fnstenv
mov
in
dec
jp
cmp
inc
shll
mov
test
mov
mov
les
push
addb
mov
jo
mov
and
mov
stos
push
test
fldcw
mov
adc
in
push
xchg
pop
jnp
mov
pop
mov
cmp
pusha
sbb
jge
jmp
jl
push
sub
jno
or
mov
or
pop
sbb
insl
xchg
fsubs
out
xor
leave
daa
cld
mov
aas
pop
imul
movsb
sub
rcll
in
add
sub
bound
data16
out
stos
xchg
jae
dec
sbbl
add
or
sti
call
rorb
movsl
mov
js
lods
mov
stc
and
lods
dec
pop
cs
fstps
add
push
lods
aam
insl
pop
repz
lret
sub
int
addl
cmp
sbb
push
add
jo
and
mov
jle
daa
push
icebp
xor
jle
xchg
xchg
je
andb
inc
cmp
fcompl
mov
mov
fdivs
mov
out
pushf
sar
xor
mov
xor
loope
gs
fistps
xchg
das
dec
imul
leave
cltd
and
sarl
stc
jp
loopne
loope
jge
pop
outsl
cmpl
outsb
sub
loopne
mov
insl
and
subl
jle
xlat
out
dec
lahf
jle
andl
lret
add
ja
cltd
cmp
inc
sbb
xor
jp
ficoms
mov
leave
rcr
xchg
filds
out
xchg
repnz
mov
cld
mov
push
mov
hlt
push
adc
sub
dec
cmp
jl
add
lret
dec
mov
bound
fists
push
scas
popa
adcb
mov
popa
add
loopne
das
jge
and
cmpsb
shlb
mov
jne
inc
xor
mov
dec
add
jne
and
mov
cmc
jo
push
pop
xchg
popf
add
or
add
or
add
nop
xchg
mov
mov
pop
mov
sbb
mov
sti
mov
cmpsb
into
jle
dec
dec
repnz
cmp
cmp
test
sub
inc
mov
stos
loope
adc
fs
arpl
mov
stc
mov
ss
mov
xor
daa
pop
sbb
adc
mov
xor
adc
mov
adc
sbb
fildl
les
inc
mov
andl
mov
test
pusha
aam
sub
fldl
out
jns
mov
rcll
fstpl
sbb
sahf
iret
jb
dec
pop
cmp
mov
clc
out
dec
add
mov
xchg
adc
dec
adcl
cmp
or
mov
adc
cmp
addr16
xchg
add
pop
dec
add
inc
fldl
add
dec
jae
pop
add
mov
cltd
mov
push
mov
lods
jbe
add
mov
mov
pop
call
inc
movsl
in
sti
aad
and
test
rorl
mov
xlat
jp
clc
sbb
stos
fsubr
add
inc
fimull
pop
out
sti
add
repz
jo
rolb
in
inc
xchg
stc
andl
mov
mov
fdivrs
mov
jb
insw
pop
sbb
xor
pop
popf
dec
mov
subl
sbb
mov
push
lahf
out
inc
data16
sbb
or
xchg
xchg
xor
xchg
adcl
ror
push
push
popf
popa
inc
aad
xor
lods
cmc
es
mov
ljmp
fisttpl
add
icebp
mov
mov
adc
jecxz
or
arpl
adc
fistl
mov
inc
into
jno
fs
xor
testb
jno
in
movsl
dec
cmpsl
cmp
aaa
adc
loopne
xchg
xchg
pop
repnz
sbb
xchg
repz
jnp
add
clc
dec
lea
ret
dec
or
dec
mov
jecxz
into
lret
add
push
mov
push
ficoms
push
xor
jo
addr16
jmp
push
nop
test
into
or
scas
dec
sub
in
inc
inc
aas
in
and
cmp
jle
inc
addr16
mov
int3
cmp
test
nop
stos
mov
iret
pop
mov
nop
pop
int3
xchg
das
or
stc
cli
jns
lods
jns
scas
jbe
sbb
fadds
icebp
andl
jo
bound
clc
xor
add
jb
cmp
sti
sbb
sbb
pop
xchg
nop
iret
dec
add
or
jb
inc
lods
and
cmpsb
adc
xor
sbb
test
sbb
lcall
sub
cmpsb
cltd
mov
inc
mov
out
stos
jecxz
sbb
mov
lcall
xchg
rorb
mov
add
xchg
push
add
pop
fmuls
push
xchg
jo
das
or
pop
ret
enter
mov
fildl
inc
dec
dec
mov
dec
jl
xchg
flds
fcomps
cld
mov
push
out
or
pop
add
xchg
mov
jns
pop
pop
lods
sahf
xor
cmp
idiv
inc
mov
popf
jbe
pushf
push
sbb
les
dec
jno
adc
jns
mov
push
xor
adc
mov
adc
inc
mov
xor
dec
cmp
pusha
jecxz
xor
push
shrl
jmp
xor
sub
sahf
add
pop
unpckhps
std
addl
push
xchg
push
xor
mov
adc
movsb
inc
mov
cmp
jno,pt
mov
rcr
scas
xchg
cli
push
ja
test
clc
cmp
fldl
add
jg
and
lret
aam
pop
add
stos
or
mov
pop
mov
lcall
pusha
fimuls
push
lret
dec
add
test
stc
je
dec
sbb
nopl
movsb
iret
data16
xchg
and
add
dec
pop
add
roll
mov
and
mov
mov
dec
sbb
and
jl
sub
sub
mov
lock
addr16
lahf
popf
add
jl
gs
add
mov
ljmp
into
cmp
popa
inc
add
mov
sbb
push
pop
sti
mov
sbb
out
orl
leave
mov
lret
xchg
sahf
push
push
cld
int3
insb
jne,pn
insl
call
adcl
dec
in
xchg
add
shr
sub
sbb
loop
xchg
cmp
sbb
das
out
insl
in
subl
or
mov
in
xchg
xor
sbb
lock
aas
cmpsl
out
movl
cmp
popl
mov
xor
jp
mov
jns
sbb
jecxz
in
test
into
xor
cmpsl
xchg
test
jae
cmpl
mov
test
fwait
imul
movsb
jnp
sub
pop
cmp
nop
popf
adc
adc
jge
sbb
popa
push
xchg
jo
shlb
fimull
insb
xor
lcall
sbb
push
call
add
mov
or
sar
gs
add
dec
movswl
xchg
stos
js
int3
mov
pop
aam
dec
add
sub
push
dec
sbb
sub
shlb
jne
jmp
xorl
aas
mov
loop
decl
sbb
cld
mov
mov
test
lea
daa
inc
cwtl
aas
mov
add
or
roll
or
mov
sub
xor
sahf
cmp
mov
adc
add
inc
lahf
in
or
sbbl
mov
pushf
sahf
test
bnd
ja
in
decb
mov
inc
test
rcrl
xchg
sbbl
int
ret
adc
mov
outsl
jp
jmp
jp
stc
fwait
shrb
call
xchg
dec
fwait
subl
jg
push
lea
jge
fstpt
stc
pop
pop
test
push
sbb
mov
clc
aam
hlt
sbb
invd
mov
mov
lcall
cld
or
cmp
loope
mov
adc
cmp
int3
xchg
inc
clc
mov
movsl
jmp
rorb
sbbl
arpl
leave
std
mov
pop
outsl
or
flds
mov
insb
mov
add
push
fildll
mov
scas
adcb
cmc
inc
inc
add
cmc
push
sarb
cmpsl
fwait
or
mov
test
dec
lock
dec
cmp
mov
inc
sbb
popf
sub
xor
xchg
fcomip
or
sar
repz
cmp
xor
cmp
jnp
outsl
mov
sahf
call
jo
ja
inc
stc
loopne
jecxz
pop
inc
scas
mov
lahf
ror
sbb
ljmp
add
mov
test
push
dec
pop
scas
mov
mov
push
sbb
clc
dec
insl
adc
xor
sub
dec
dec
mov
in
daa
mov
adc
add
pop
in
neg
inc
and
or
roll
mov
push
shll
jle
in
push
jnp
jmp
pop
pop
leave
leave
sbb
xchg
add
push
test
dec
dec
sub
scas
nop
loope
add
adc
mov
adc
add
cltd
add
sbb
pop
xchg
push
ret
pushf
insb
scas
lahf
pop
jle
inc
jne
hlt
out
cmp
sahf
xchg
shrb
mov
andl
mov
mov
insb
mov
leave
iret
out
fistpl
push
push
inc
or
dec
ret
xchg
les
add
sahf
insb
pop
lret
lods
mov
xchg
movsb
mov
repnz
stos
cli
pop
loope
andl
ss
jmp
lea
or
inc
push
sbb
aas
sbb
add
test
cmpsb
xorb
and
cmpl
sbb
aam
adc
insl
pop
daa
sbb
negl
pop
stos
and
std
jmp
roll
icebp
out
mov
or
jmp
add
or
dec
cmp
dec
sbb
inc
hlt
loop
add
inc
add
cmpsl
mov
call
sub
push
pusha
cmpsb
push
mov
jns
dec
push
mov
scas
jnp
mov
mov
push
inc
cmp
cmp
xor
repnz
pop
pushl
add
pop
repz
push
fisttpll
mov
sar
leave
add
inc
mov
lcall
out
inc
shl
cld
push
xchg
mov
push
dec
into
fstl
aad
imul
xchg
push
cmpsl
xchg
lock
scas
sub
pop
mov
push
mov
jle
xchg
sbb
or
inc
inc
std
jb
add
mov
pop
sub
outsb
fidivrl
pop
mov
arpl
insl
fstps
lret
inc
mov
insl
std
ret
pop
push
fxch
loope
cmc
loop
imul
cmp
xchg
mov
sbb
orl
push
dec
loopne
push
xor
xchg
scas
cmpl
lock
mov
mov
aam
pop
and
mov
mov
adc
movntq
or
or
stc
clc
jmp
lcall
movsl
test
jnp
add
aas
mov
ds
push
add
mov
cwtl
icebp
bswap
outsb
andl
and
mov
mov
mov
andb
adc
shrl
roll
or
lock
sbb
add
or
jb
xchg
jp
sbb
xchg
push
xor
dec
pop
adc
outsl
jmp
push
cltd
loope
pop
mov
sub
xorb
in
gs
sub
addr16
xor
mov
sbb
test
sbb
jbe
mov
push
out
sbb
stc
sbb
shlb
cmp
bound
test
mull
rclb
sbb
mov
xorl
lock
pop
mov
lds
or
sbb
inc
jb
push
push
add
push
pop
rcl
pop
fldcw
add
xchg
add
xor
sbb
fcom
pop
add
cmp
jb
mov
pop
jg
pusha
cmp
std
sti
adc
mov
das
mov
xchg
mov
test
adcl
mov
roll
lea
mov
lret
inc
paddusb
add
stos
loop
dec
mov
ret
sub
pop
daa
mov
inc
hlt
sbb
test
add
enter
mov
mov
outsb
mov
dec
inc
xchg
adc
lret
mov
sub
push
adc
and
push
xor
xchg
popf
adcb
mov
sbb
push
xchg
pop
mov
ja
xlat
imulb
push
les
cmp
pop
pop
jno
out
push
repz
mov
and
push
repnz
push
push
pop
or
mov
sbb
hlt
adc
dec
sub
cmp
in
int
ret
push
movsb
outsb
cmpsl
xor
popa
mov
mov
mov
jne
mov
loopne
sbb
jno
add
sbb
adc
lods
push
dec
inc
xchg
add
stc
or
mov
jb
cwtl
xchg
in
mov
jns,pt
test
fwait
or
es
dec
faddl
jecxz
mov
push
or
addr16
test
inc
mov
aam
ret
addl
xchg
adc
fld
add
adc
scas
icebp
mov
push
xchg
xchg
fstl
add
lret
mov
addl
dec
outsl
sub
push
add
outsb
orl
insb
mov
shlb
sbb
pop
mov
and
mov
mov
push
mov
xor
mov
adc
xor
inc
dec
add
shll
sbbl
les
add
ficomps
or
mull
je
mov
ret
fdivrs
stc
mov
sahf
push
xor
pop
pop
cltd
ljmp
and
pop
cmp
lea
dec
lods
cmp
and
xor
add
sarb
movsb
or
mov
test
dec
out
mov
das
addb
dec
add
xchg
mul
push
loope
sbb
loopne
mov
pop
jne
pop
mov
arpl
lret
lret
mov
fldl
push
rclb
adc
jecxz
call
std
insb
stos
test
das
mov
cmp
pop
jecxz
cmp
js
cltd
sub
das
leave
cmc
mov
push
inc
sbb
add
push
cld
pop
xchg
and
jno
xchg
jae
push
ja
dec
add
mov
lret
in
add
xor
jmp
stos
and
xor
inc
fwait
and
ds
pop
push
and
lahf
outsb
lds
add
in
inc
pushf
mov
adcl
xchg
and
cmpsb
jo
loop
stos
sbb
push
xchg
adc
add
mov
aaa
sahf
subl
orl
insl
subb
inc
pop
push
xlat
popa
jg
ja
je
sarl
sahf
or
or
xor
inc
cwtl
jmp
push
sub
pop
data16
fsub
in
add
mov
insb
cmp
dec
sbb
push
cmp
mov
mov
or
pop
hlt
or
add
fstpl
jne
sbb
jp
mov
mov
dec
add
enter
jbe
push
and
movsb
mov
mov
cmp
lret
jge
cmc
in
mov
adc
mov
mov
jg
cltd
push
mov
in
add
or
sbb
jecxz
mov
leave
or
fiaddl
inc
cs
imul
xchg
mov
cmpsl
fiadds
imul
ja
jbe
leave
pushf
sub
lock
std
jno
or
or
jecxz
inc
sbb
addb
pop
je
insb
mov
test
popa
xchg
das
gs
pushl
sti
fs
xchg
les
and
inc
push
cmp
nop
mov
xchg
xchg
xorb
sbb
mov
xchg
lcall
sub
jbe
push
sub
add
cmp
pop
push
adc
mov
and
push
inc
movsl
mov
leave
pop
mov
cwtl
popa
inc
and
int
or
arpl
hlt
inc
sbb
scas
rorl
mul
jecxz
loope
cmp
or
lea
stos
pop
into
push
xchg
jecxz
mov
push
mov
inc
sbb
inc
aam
fcmovnu
xor
or
sub
xor
mov
jns
lret
mov
loope
pushf
ds
into
push
bound
inc
pop
mov
enter
xor
mov
loopne
stc
insl
cmp
pusha
mov
bnd
add
mov
add
je
add
add
xchg
adc
jb
dec
sub
mov
sbb
rcll
xchg
sub
cld
sbb
sbb
sbb
movsb
movsl
gs
sbb
hlt
xor
add
push
orl
mov
popa
pop
pop
arpl
push
mov
test
pop
outsb
filds
sub
cmc
adc
shrb
rcrl
aas
mov
mov
xchg
pop
arpl
or
or
fistps
xor
inc
in
inc
sbb
js
xor
sub
adc
pop
sbb
rcrl
es
xlat
mov
popa
cmc
ret
bound
add
xchg
pop
xchg
imul
mov
cmp
loop
aas
mov
mov
mulb
lret
cmpsb
push
dec
or
dec
out
add
sub
mov
sbb
and
xchg
adc
int
pop
imul
or
mov
mov
adc
inc
pop
mov
roll
dec
das
mov
xor
sub
pop
mov
test
cwtl
mov
stos
jge
nop
insb
push
lret
mov
sbb
cmp
xor
mov
dec
jl
add
mov
out
in
or
mov
push
lods
add
cmp
inc
jbe
shrb
fiadds
mov
int3
addb
xchg
add
cmpb
rcl
push
incl
sbb
addr16
sub
add
push
lea
aad
lahf
jno
addb
roll
aam
js
inc
fistpll
xchg
dec
nop
sbb
in
push
out
dec
add
and
adcl
fxch
fisttpl
leave
sahf
int3
xchg
cmp
and
cmp
pushf
mov
jnp
movsb
popf
mov
pushf
jae
roll
mov
add
or
add
subl
sti
jbe
cmp
jp
test
adc
and
dec
sbb
adc
fildl
xor
add
std
pop
add
mov
outsb
adcl
adc
jmp
int3
xlat
sbb
ret
jmp
cmp
mov
imul
mov
xor
pop
mov
cmp
addr16
fdivrs
fdivs
out
xor
ret
dec
adcb
out
scas
aad
cmp
jmp
push
dec
jmp
rcl
sub
and
and
and
xchg
xchg
xchg
xchg
cmc
xchg
mov
enter
sbb
add
lods
mov
or
es
pop
testl
es
andl
aad
popf
adc
xchg
add
insl
in
sarb
dec
add
icebp
add
push
scas
orb
fwait
pop
filds
je
jl
orl
jp
mov
test
arpl
xchg
jmp
insl
lods
fsts
shrb
rep
add
test
sub
jns
add
or
out
jmp
pop
push
mov
popf
xorl
pop
inc
cmc
leave
push
mov
mov
fs
xchg
inc
fdivl
xchg
imul
ret
jp
divl
cmp
or
ja
lcall
push
call
push
xchg
add
repnz
xlat
mov
imul
sbbl
fwait
andl
cmp
mov
jae
adc
sbb
sub
pop
or
test
inc
push
out
cmpl
cld
push
mov
inc
cmpsl
add
into
jge
nop
add
loop
clc
or
xchg
clc
sbb
sub
or
sub
pop
add
stc
pop
xchg
jl
rorl
lods
add
in
mov
jnp
cmc
adcl
mov
mov
jmp
bound
sub
dec
repz
push
shlb
mov
gs
mov
push
clc
push
and
test
jns
xchg
push
out
sbb
div
dec
lret
and
fisubrs
int
pop
mov
cwtl
stc
mov
sub
jne
inc
gs
mov
jmp
adcl
jbe
fdivrs
mov
xlat
addr16
aaa
sub
ficoml
leave
sarl
xchg
dec
gs
adc
xchg
mov
popf
or
iret
jle
dec
add
loopne
adc
dec
and
or
es
and
dec
dec
sbb
sub
cmc
push
sarl
cmp
push
addl
pop
adc
stos
js
add
or
mov
mov
ret
fcomps
lock
pop
cs
leave
sbb
aas
push
xchg
sub
add
imul
cli
mov
push
sbb
dec
scas
idivl
jmp
push
idivl
jge
lcall
add
mov
mov
sbbl
or
in
ret
xlat
pop
push
je
and
subl
push
jmp
sbb
and
addr16
fisttps
add
cmp
mov
adc
sbb
push
aas
lea
add
jae
fwait
dec
xchg
mov
outsl
mov
pop
enter
inc
sub
add
cs
jge
int3
mov
add
int
mov
orl
pop
xchg
test
jbe
mov
push
dec
rclb
xor
repz
mov
mov
pop
adc
cmpsb
xchg
jno
sbb
mov
or
call
sbb
enter
xchg
addr16
aam
jno
push
bswap
int
sbb
mov
cmp
or
std
ffree
outsb
and
adc
hlt
inc
cmp
jge
sub
jp
mov
mov
addr16
stc
pop
add
test
rcrl
jl
shl
jg
insl
xchg
mov
cmp
mov
out
mov
je
sub
aaa
sti
das
and
mov
adc
adc
and
in
xchg
ret
loop
ss
lods
jae
xchg
sbb
pop
sahf
scas
add
lods
mov
cmc
roll
ss
shll
scas
stc
add
xor
sbb
dec
or
mov
addr16
scas
push
mov
push
ret
sbb
add
mov
cmp
inc
sub
mov
test
movsb
xchg
xorl
push
lcall
sbb
and
xchg
xor
std
mov
ds
repz
pop
aam
lret
shlb
and
sbb
enter
or
cltd
js
dec
mov
arpl
xor
enter
cmp
int3
lock
sbb
out
push
pop
in
pusha
mov
mov
dec
push
xor
fsubl
shlb
loopne
sbb
adc
xor
jnp
dec
andl
iret
mov
jge
pop
mov
jl
mov
je
xchg
sub
pusha
and
ret
stos
and
jno
or
repz
push
int3
aaa
lret
insb
dec
cmp
movsb
inc
dec
push
ret
nop
mov
ja
mov
cmp
pop
iret
sbb
add
out
repz
add
xor
pushf
cmpsb
mov
inc
sbbl
aad
mov
fimull
insb
in
sbbl
lock
loope
and
and
jecxz
shrl
in
jnp
and
add
pushw
and
pop
incl
gs
daa
outsl
popa
sbbb
sub
pusha
add
dec
int
icebp
cmp
dec
popf
stc
jns
sbb
add
iret
mov
mov
ljmp
mov
mov
dec
dec
lcall
pop
sub
es
pusha
jae
sbb
faddp
mov
and
lea
fstpl
jbe
aas
lea
cmpsb
outsl
dec
es
lods
enter
decb
xor
ds
pop
ljmp
xchg
dec
mov
adc
inc
add
mov
mov
mov
negl
fscale
repnz
xchg
mov
push
mov
cltd
cmp
sub
mov
clc
xlat
orl
negl
push
and
adc
in
dec
xor
idivl
shlb
sub
or
jbe
push
pushf
lret
add
stc
into
adc
daa
mov
enter
shll
mov
cs
mov
push
sbb
sub
mov
aas
nop/reserved
mov
jecxz
mov
test
mov
int3
add
subb
or
mov
add
popa
push
jl
pop
push
xor
lods
out
adc
pop
stc
jmp
sub
imul
sbb
out
dec
sbb
pop
and
jge
or
out
push
push
and
and
pop
xchg
ret
sbb
sbb
scas
dec
popa
sub
mov
jl
jl
adc
ja
andl
lcall
lea
xchg
mov
adc
cmp
into
xchg
addb
dec
jb
or
inc
notl
ret
sbb
push
push
pop
or
and
inc
cwtl
sbb
roll
mov
imul
stc
inc
repz
inc
xchg
mov
cltd
dec
add
sbb
push
sbbl
pushw
ljmp
rcrb
outsl
mov
lods
xchg
jmp
test
rcrb
lret
dec
sub
xorl
push
add
aaa
add
sbbl
sar
int
clc
into
push
push
mov
repz
incl
cmp
fimull
test
movd
aad
pop
push
sbb
cwtl
mov
mov
call
push
js
fstl
xchg
or
ljmp
les
out
stos
sbb
cmp
xor
nop
pop
fadds
mov
mov
dec
sbb
std
rcll
icebp
mov
mov
popa
test
ljmp
jg
inc
movsl
dec
pop
inc
cmp
push
lea
setbe
cli
add
xchg
imul
shlb
pusha
push
arpl
lcall
push
adcl
xchg
or
or
dec
add
mov
inc
jmp
cmp
ljmp
test
lods
inc
pop
in
int
sbb
mov
jo
push
sbb
adc
jnp
mov
data16
popa
popa
mov
es
cmp
mov
mov
sbbl
test
ret
outsb
test
xchg
cmpsl
push
je
push
nop
xorl
lret
mov
pop
addr16
sbb
mov
mov
int
and
cmp
shll
pop
mov
ret
mov
xor
shr
mov
jmp
mov
cli
mov
subb
push
dec
fs
push
clc
pop
hlt
and
jb
movb
mov
mov
mov
das
mov
add
adcb
jno
pop
inc
cmpb
ss
pop
ret
addl
insl
pop
sbb
jle
mov
imul
xor
sbb
adc
xchg
push
jg
xchg
mov
add
jecxz
aam
je
popf
dec
mov
data16
inc
aad
add
pop
push
jo
xlat
inc
andl
in
sub
add
outsl
adcl
je
cltd
addl
test
mov
dec
in
sbb
aaa
pop
xchg
xchg
sbb
add
lahf
pop
mov
mov
loop
xor
fistpll
pop
movsl
cli
xlat
mov
jg
sahf
cmp
xor
jmp
jnp
mov
push
pop
sbb
mov
add
inc
sti
lods
adc
dec
mov
fidivl
jns
idivl
sbb
lcall
dec
sbbl
sub
mov
add
inc
das
add
sub
add
pop
or
adc
adc
mov
xchg
sub
test
push
add
cmc
aam
xor
xor
jl
adc
mov
pop
mov
push
and
sub
add
out
add
cs
sub
mov
test
xor
cmp
stc
push
call
and
cmp
adcb
xchg
add
xor
in
pop
lret
cmp
mov
or
cli
sub
lods
aam
mov
mov
jnp
push
jl
fmull
clc
test
aam
mov
xlat
mov
stc
aaa
cmpb
loopne
fmull
xor
push
jae
jle
bnd
adc
loopne
outsb
mov
aad
add
sbb
pop
xchg
jno
cmp
fiaddl
addl
jno
dec
mov
int3
add
cmp
stc
add
jo
repnz
xchg
jecxz
adc
imul
js
orl
pop
cwtl
sub
mov
aas
dec
je
sbb
xlat
int
loop
jae
mov
jb
or
push
dec
das
cltd
pop
xchg
add
cmp
add
pop
jmp
fstpt
in
cli
add
pop
fsubs
xchg
jne
in
mov
xchg
fiaddl
sbb
fistps
adc
orb
inc
pop
loopne
sti
adc
imul
push
insl
cmc
dec
lods
fadds
mov
pop
mov
inc
push
cmpl
sbb
add
mov
mov
nop
add
aad
loopne
cmp
roll
xchg
dec
xchg
movsb
lcall
enter
dec
mov
out
mov
lret
mov
popf
or
cli
outsb
adc
outsl
sub
cltd
push
or
cmp
mov
xchg
rcrb
dec
sub
roll
mov
cmpsl
or
mov
push
mov
mov
nop
outsb
call
pop
mov
int3
add
test
add
push
nop
popa
and
dec
adc
ret
lods
jmp
mov
xorb
adc
cmp
xor
xchg
sbb
arpl
cmp
orl
fidivrl
sbb
xchg
nop
imul
scas
cmp
sahf
xchg
lret
fidivrs
sbb
dec
push
test
mov
add
jge
jmp
adc
push
nop
sbb
pop
mov
mov
mov
push
negl
dec
jno
pop
lock
adc
icebp
rcll
xor
sub
fisubrs
jg
push
or
das
cmpsl
jnp
cmpsl
loopne
pop
sbb
fnclex
mov
inc
mov
xor
inc
test
or
jmp
sbb
test
repz
xchg
mov
outsb
out
and
cmpsb
xor
in
jmp
sub
sbb
in
dec
or
das
cmp
outsb
call
cmpb
push
int
test
pop
icebp
addr16
test
fstps
dec
and
and
xor
inc
sbb
sar
jnp
mov
loopne
movsl
lret
sbb
iret
fcompl
fs
je
or
dec
xchg
or
xor
cltd
lcall
loope
xorb
jns
xchg
jl
sub
push
movsl
push
add
push
xlat
testl
add
jge
add
inc
shlb
in
ja
xchg
adc
or
xchg
jae
mov
push
enter
test
sbb
orl
lcall
aas
sbb
cmp
push
mov
lds
dec
xchg
shlb
jbe
jb
sti
cmc
psrlw
in
and
or
sbb
aad
mov
cmp
mov
mov
shl
and
iret
je
je
mov
in
ficomps
and
lahf
cmpsb
pop
scas
lods
sbbb
bnd
pusha
fistl
in
inc
daa
add
cmp
pushf
adc
arpl
xorb
cmp
add
lock
jg
xor
into
mov
cli
subb
fildl
xchg
sbb
cmpsb
lcall
mov
fisttps
das
adcl
cmp
mov
fistl
add
jle
xchg
dec
fs
dec
std
sbb
sbb
lcall
jg
insl
addb
push
rol
fsubp
xchg
mov
daa
das
mov
movsl
pop
mov
push
clc
les
rorb
cmpsb
and
jae
mov
sbb
pop
mov
xchg
in
pop
adc
stos
mov
add
fmuls
pop
mov
mov
arpl
int
inc
ja
lods
out
cltd
pop
cmp
lret
inc
add
stos
aad
ja
lock
mov
jg
pop
out
dec
mov
les
movsb
inc
sarb
sbb
fiaddl
adc
into
cwtl
add
push
in
loopne
or
cmp
cs
mov
or
cmc
rol
adc
ss
add
add
mov
xchg
xor
inc
andl
cwtl
sbb
push
or
add
in
mov
jecxz
lahf
xor
popa
andl
pusha
pop
pop
fldln2
mov
mov
movsb
in
mov
fimull
pop
pop
jecxz
jnp
outsb
push
insb
das
inc
popf
fiaddl
icebp
pop
rorb
adc
addr16
xchg
xor
in
jbe
jbe
leave
or
push
sti
cmpsl
cld
cmpb
add
or
ds
frstor
mov
jo
and
bound
xor
mov
sub
jmp
mov
sub
or
inc
orl
adc
push
arpl
sbb
clc
xorb
ret
xchg
and
xor
mov
scas
mov
clc
cmpsb
add
dec
dec
icebp
lea
cmc
or
insb
sbb
mov
sub
xor
inc
fmul
push
xor
fbld
subl
cmp
cmp
fidivrl
push
sub
sbb
fmuls
mov
sbb
or
test
sahf
mov
dec
cmp
or
lret
out
loope
dec
cmp
mov
mov
cmc
jg
pop
add
ficoms
loop
out
mov
adc
pop
lods
and
std
jl
mov
add
fldl
scas
out
ds
pop
pop
sbb
seto
xchg
fsubl
pop
mov
add
mov
stos
rol
dec
push
cmp
or
jne
cld
call
shlb
popf
inc
cmp
loopne
out
inc
sbb
sub
fmuls
pop
mov
pop
scas
ret
ret
mov
loope
add
pxor
movsl
pop
cmpb
ficompl
adc
sbb
rorl
es
sbb
psrld
mov
jb
mov
aas
fwait
xchg
icebp
les
push
xchg
sub
lret
aad
or
push
pop
sbb
push
mov
mov
pop
xchg
inc
jnp
fnstcw
jb
or
sbb
pop
nop
in
add
in
jne
mov
mov
dec
pop
data16
fistpll
jg
mov
inc
sub
cltd
cmc
aam
xor
out
cltd
sbb
and
cmp
push
xor
fs
push
pop
and
lea
aam
mov
cmp
xchg
movsl
mov
out
popa
fildl
pusha
cmpsl
mov
mov
div
xor
jo
addb
mov
stos
or
and
out
mov
repnz
roll
add
mov
lret
movsb
stos
ljmp
inc
fxch
sbb
mov
test
popa
mov
cmc
mov
mov
jmpw
push
xchg
or
push
sti
inc
popf
lods
inc
stos
pop
and
loop
pop
mov
mov
jns
rcr
mov
fisttpll
inc
repz
subl
add
mov
test
inc
les
daa
push
das
ljmp
imul
fs
pop
sub
sbb
and
aad
sbb
jmp
xchg
and
adcl
icebp
mov
or
mov
sbb
push
or
loope
mov
outsl
dec
addr16
sbb
cmp
dec
jmp
sub
lock
dec
or
mov
dec
sbb
push
add
dec
jae
mov
mov
loop
shlb
or
add
add
sbb
call
pusha
setno
xor
jne
outsl
repnz
lret
mulps
jae
mov
add
lea
inc
mov
icebp
push
xor
lods
adc
jno
sub
iret
and
add
mov
inc
pop
jne
push
dec
sbb
in
and
and
mov
pop
or
push
shl
sbb
call
push
dec
addr16
mov
jmp
xlat
dec
in
jp
sub
leave
fs
sub
pandn
add
push
repz
lods
push
add
nop
inc
lock
xchg
aam
mov
loopne
scas
xchg
inc
mov
pop
lods
mov
sbb
dec
sub
xchg
out
addl
addl
and
in
idivb
hlt
jl
loop
int
inc
sbb
jmp
cmp
push
pop
in
popa
arpl
sbb
xchg
fldl
shlb
pop
cmp
or
xchg
sbb
and
mov
xor
mov
into
pop
mov
xchg
bound
sbb
jecxz
cmp
sbbl
sti
sbb
lret
ret
adc
imul
push
lcall
jnp
mov
dec
cmp
mov
and
pop
jns
add
inc
js
lret
mov
mov
jl
imulb
mov
mov
lcall
and
test
dec
repz
sbb
subl
imul
lock
mov
out
fwait
stos
rcll
push
mov
cmpsb
lret
jecxz
mov
sbb
mov
and
push
xchg
sbbb
data16
sbbb
repz
ficompl
or
sbb
add
shl
jecxz
add
dec
repz
xchg
incl
lcall
mov
clc
adc
fldcw
loopnew
nop
xor
fiaddl
xchg
adc
cmp
mov
sti
xor
or
add
and
jmp
in
jl
xchg
sbb
rcrb
jne
popf
pop
adc
push
xchg
xchg
or
ret
dec
idivl
ja
push
and
imul
and
into
mov
xchg
jmp
sarb
fwait
push
in
jmp
adc
jmp
pop
add
js
pop
addr16
int3
xchg
cmp
xchg
mov
jp
and
imul
add
push
xchg
push
shr
unpckhps
stc
int
rcll
pushl
mov
andl
cmp
hlt
mov
and
arpl
sbb
mov
scas
cmp
or
je
sbb
xchg
scas
sbb
push
aas
lcall
adc
movsl
xchg
subl
cmp
adc
sub
dec
cmpl
xchg
sbb
nop
cmpsb
push
imul
lds
ret
sbbl
addr16
hlt
mov
movsb
mov
mov
add
fstpl
test
and
xor
fnstsw
mov
xor
mov
outsb
and
xchg
ror
push
fwait
jae
imul
cmpl
shll
lret
andl
jp
mov
fucomi
add
sbb
je
sbb
in
or
xchg
add
test
push
jae
push
movsb
jne
sarb
lea
mov
daa
subl
nop
push
inc
sbb
inc
fwait
clc
jle
outsl
and
mov
mov
insb
ret
pop
mov
adc
fcmovu
popf
movsl
inc
push
cltd
dec
xchg
add
dec
in
mov
sub
stc
jg
dec
cmp
xchg
xchg
xchg
push
shl
xor
jae
js
or
push
into
in
lds
scas
sub
outsl
int3
das
loop
inc
popf
cmpsb
cltd
mov
mov
cmc
or
mov
adc
inc
sbb
orl
movsl
test
fwait
sbb
cmp
aam
push
divb
leave
ret
cmp
sub
mov
pop
sbb
mov
xchg
loope
rorb
mov
pop
or
cli
sbb
dec
ficompl
push
push
fildl
pop
pop
cmpsl
popf
test
ds
and
mov
mov
popa
hlt
cmp
or
jae
add
inc
adc
sbb
add
ret
inc
jae
rcrb
add
mov
mov
daa
push
sbb
cmp
mov
mov
xchg
sub
or
fidivrl
mov
sarb
push
and
int3
push
push
in
inc
dec
add
xchg
dec
mov
dec
in
lea
mov
unpckhps
pop
mov
xchg
insb
cld
sbb
dec
adc
sbb
aam
mov
sti
outsl
imul
movl
dec
and
cld
jne
cltd
data16
pop
pop
aaa
jge
add
popa
mov
inc
ljmp
dec
insb
xlat
add
leave
mov
sbb
out
dec
add
std
sbb
jmp
test
dec
insl
loope
dec
jno
push
mov
push
add
js
adc
or
movsl
out
pop
cmpsb
jbe
inc
jnp
and
pusha
adc
stc
inc
sbb
loope
movsl
add
push
cld
jne
ljmp
in
push
cmp
or
jl
mov
lahf
add
sub
aaa
sbb
lahf
les
and
stc
mov
lds
mov
push
push
mul
fiadds
lret
adcb
mov
push
test
sub
mov
repz
scas
int3
mov
push
rcrl
dec
mov
loop
jb
in
cli
dec
cmp
test
flds
test
inc
mov
ja
jecxz
or
push
rcrb
inc
outsb
mov
lds
test
sub
sahf
mov
dec
pushl
jne
jns
aad
or
cltd
pop
adc
mov
and
lock
in
rcrb
in
lcall
xchg
pop
call
mov
jae
roll
jne
xchg
shll
push
add
addb
repnz
jno
add
inc
jl
clc
dec
mov
mov
mov
arpl
sarl
leave
jnp
push
rcrb
sbb
vcvtps2pd
fidivrs
jp
xchg
fbld
ljmp
mov
stos
lret
sbb
jg,pn
jmp
inc
out
movsl
add
sbb
xor
lcall
lahf
andb
testb
sti
inc
aaa
mov
les
pop
jp
popa
jmp
imul
loop
xorb
sbb
shll
pop
pop
jne
pop
rorb
jecxz
adc
xchg
test
mov
cs
and
adc
aaa
out
push
testl
addr16
addb
inc
sbb
adc
xchg
mov
push
scas
or
sbbb
cli
jp
in
cmpsb
jg
mov
xorl
arpl
lret
aas
lods
pop
push
sub
push
adc
or
ret
mov
pop
sbb
cmpsb
xor
pusha
sbb
sbb
les
dec
loope
in
enter
and
lds
in
cwtl
push
icebp
les
mov
das
push
inc
outsl
test
sub
sbb
arpl
xor
cmp
mov
mov
add
sti
sub
ret
dec
push
mov
xor
add
sahf
xchg
rsqrtps
movsb
jge
bound
inc
daa
test
mov
fdivs
xchg
pop
pusha
sarb
sbb
mov
arpl
pop
movsl
mov
fildll
sbb
add
push
and
rolb
fstpl
xor
test
sub
xor
push
outsl
xchg
cld
cmp
in
sbb
ja
int
mov
mov
mov
sbb
push
testl
pop
fstps
inc
rolb
and
mov
pop
push
cmp
inc
sbb
push
add
fstl
pop
ja
cli
add
lds
sti
mov
adc
rcrl
push
fsubs
add
mov
push
sbbb
mov
idivl
xchg
xor
push
and
inc
pop
imul
inc
mov
shlb
fisubs
jns
adcl
aaa
ret
and
push
test
movsb
stos
in
cwtl
sbb
jl
movsb
loope
xchg
daa
sti
adcl
dec
push
orl
jp
gs
mov
loope
fnstsw
add
add
movsl
data16
jns
mov
cwtl
xorl
xchg
dec
xor
xor
mov
insl
xchg
sahf
pushf
mov
sbb
mov
mov
push
xchg
and
or
xchg
add
inc
push
aas
sub
push
adc
xorl
xorl
enter
ror
push
je
out
hlt
add
mul
lcall
sti
popa
repnz
and
lock
lock
dec
aas
cmp
mov
push
cmp
sbb
xor
sbb
ja
inc
imul
sbb
fbstp
add
mov
pusha
sbb
lret
push
jbe
or
gs
pop
jp
xchg
fildl
jecxz
cmpsb
jne
aam
sbb
out
and
nop
add
lea
incl
std
test
pop
inc
pop
dec
jg
nop
mov
ss
mov
sub
mov
mov
push
adc
inc
ret
adc
lcall
inc
jp
pop
or
cltd
add
inc
ror
dec
sbb
shlb
hlt
aad
sbb
mov
imul
fwait
daa
dec
push
in
test
adc
in
cmp
sbbl
jmp
cmpsb
fists
js
stc
sbbl
mov
jecxz
jmp
jb
sbb
mov
stc
sub
int
add
and
jb
loope
inc
xor
notl
mov
fisubl
hlt
sbb
xorb
mov
int3
cmc
jnp
jmp
cmpsl
and
out
xchg
push
mov
add
pop
sub
push
rcrb
dec
cli
push
add
iret
movsl
aam
mov
jae
orl
mov
loop
iret
mov
mov
pushf
push
aas
in
aaa
sbb
push
jg
arpl
stc
xorl
dec
mov
push
pop
test
mov
fdivl
sbb
jg
or
sbb
push
cmp
push
adc
jno
jnp
rolb
xor
mov
imul
sub
mov
push
mov
rcl
push
mov
xchg
scas
repz
fwait
ret
repnz
add
dec
sbb
ds
dec
jo
pop
pop
add
enter
shll
test
popf
sub
or
mov
js
mov
les
sbb
jns
adc
leave
ffree
add
jae
push
jmp
sbb
lds
cmpb
lea
sub
subb
mov
loopne
inc
neg
imul
sub
test
add
adc
addl
mov
movsb
int
insl
cmp
mov
addr16
mov
xchg
stos
out
push
jle
jmp
fadds
jl
call
adc
popf
adc
arpl
out
aam
out
xchg
imul
icebp
shrb
es
sbb
cmp
push
add
or
adc
push
outsl
mov
jg
jo
icebp
jne
mov
jno
adc
mov
sub
mov
mov
mov
dec
add
mov
pop
nop
mov
frstor
adc
sahf
jb
orl
out
and
mov
orb
pop
mov
mov
pop
inc
mov
inc
jmp
sbb
and
cmpsb
jnp
sbb
sub
push
fmull
clc
inc
mov
xlat
mov
mov
mov
loopne
pop
mov
jb
mov
lods
push
xor
neg
add
lret
pop
outsb
sbb
test
sbb
pop
sub
inc
dec
jbe
lcall
dec
in
adc
jecxz
add
hlt
xchg
aad
or
shl
orb
scas
ret
xor
stc
push
mov
test
pop
in
add
cmpsb
jns
shrl
fsts
inc
mov
cwtl
push
pushw
stos
mov
or
mov
loope
pop
sti
fwait
bound
sahf
pop
outsl
or
subl
shrl
fs
subl
ja
shl
mov
ret
xor
and
cmpsl
sub
lock
jle
aam
push
mov
jae
in
cwtl
mov
aam
cmp
addl
movsl
fmuls
lock
ss
stos
add
dec
in
imul
sbb
xchg
xor
adc
dec
in
adc
sub
push
push
aaa
xor
mov
stc
push
sbb
adc
push
add
and
mov
stos
call
add
sub
xchg
fcomi
add
push
sarl
mov
int
or
sbb
add
cmc
ds
clc
repnz
inc
add
nop
test
inc
xchg
in
sub
add
push
iret
and
sbb
cmp
lahf
mov
push
sbb
jge
mov
adc
xchg
xchg
roll
lcall
sbb
lcall
roll
pop
and
mov
js
and
xor
jbe
lcall
lods
fcomps
mov
lahf
or
sti
fs
in
xchg
pusha
mov
push
or
mov
js
cmp
xor
push
mov
inc
mov
lahf
repz
test
fcomp
push
mov
pop
sarl
outsl
dec
imul
mov
jae
roll
fnstenv
xchg
addr16
xor
adc
push
shl
imul
add
popf
or
mov
std
sbb
imul
orb
fistpll
pop
ds
push
add
mov
lds
cmpsl
adc
mov
lahf
jle
sar
jb
inc
smsw
das
popa
pop
mov
push
das
mov
cwtl
xchg
pop
sar
lahf
into
cmp
loopne
xorl
jg
mov
scas
pop
aad
outsl
cltd
sbb
lock
icebp
mov
ret
ss
cmpsl
push
test
and
jne
mov
push
fmul
outsl
pop
sarl
mov
mov
mov
mov
loop
pop
xchg
shr
icebp
dec
ja
mov
jecxz
out
popf
sbb
sub
clc
lahf
xor
jmp
mov
lcall
push
scas
gs
loope
les
std
push
mov
push
clc
sahf
inc
fldcw
stos
push
scas
add
test
test
adcb
cmpsl
testl
lds
sahf
std
sbb
xbegin
mov
in
adc
sti
inc
sbbl
pushf
sub
addb
xchg
aaa
pop
jge
jl
out
pop
sarl
mov
sahf
sub
xchg
sbb
js
pop
sub
ret
mov
or
loop
ret
mov
andl
inc
subb
loopne
sahf
pop
mov
jo
mov
pop
imul
mov
mov
movsl
cmp
sub
call
jns
pusha
jmp
sub
std
sub
adc
out
push
add
xchg
iret
mov
and
mov
add
call
jecxz
push
and
gs
insl
or
into
sbb
jl
inc
inc
cmpsl
dec
add
aaa
sbb
lahf
sub
outsb
jge
in
mov
push
aaa
jmp
sbb
movb
enter
fs
mov
dec
mov
subl
aas
cmp
cld
scas
mov
dec
cmpl
pop
das
fwait
push
sti
ja
insl
lret
int3
mov
leave
and
sbb
cmp
adc
mov
xchg
mov
push
imul
gs
movsb
cmp
imul
fsubrs
js
insl
dec
shll
sbbl
push
sahf
je
xchg
stc
mov
mov
out
popf
arpl
or
es
sub
and
mov
sbb
lret
and
iret
adc
push
pop
xchg
xorl
cmp
lods
jge
push
fsts
mov
mov
divb
lods
sbb
adc
dec
cwtl
sbb
gs
neg
data16
xchg
lahf
cmp
lods
fcomp
jecxz
sbb
sub
or
push
push
lods
sahf
cli
adc
fdivl
ret
cwtl
pop
call
outsb
xor
mov
cmp
orb
add
xlat
and
dec
push
mov
repz
and
and
daa
push
insl
ret
add
fldcw
rolb
add
stc
adc
pop
test
orl
mov
cmpsl
push
stos
mov
sahf
push
push
pop
sbb
mov
pop
popa
sbb
cmp
mov
xorl
xor
mov
sbb
pop
pop
call
mov
and
mov
jle,pn
js
cmp
rcrl
jp
sbb
mov
or
lods
mov
jo
sub
inc
sbb
sub
nop
mov
push
in
shl
imul
or
dec
mov
mov
sub
pop
popf
push
inc
loop
int3
mov
andl
push
fstps
add
je
jge
outsb
subl
in
push
sbb
push
jb
xchg
jle
cmpsb
sbb
mov
pushf
pop
jbe
mov
addr16
negb
insb
ficompl
or
sbb
repz
cmpl
cmp
mov
or
not
add
nop
lcall
sbb
adc
sbb
sub
dec
mov
jb
in
xchg
or
das
cs
clc
xchg
mov
jno
adc
add
cmp
push
addl
cmp
mov
addr16
push
cmp
push
movsb
ret
push
cltd
dec
call
sbb
push
leave
jl
loope
add
ret
push
mov
sub
adc
sub
aaa
rol
dec
test
sub
aas
push
mov
sub
pop
add
pusha
int3
into
xor
or
add
iret
cmpsl
or
cltd
push
sbbl
xchg
aas
jle
sbb
inc
cmp
cmp
add
push
cltd
xchg
jne
pop
adc
xchg
xor
adc
cmc
pop
sbb
clc
push
orb
sarb
rclb
in
mov
or
adc
inc
push
dec
or
sbb
imul
pop
push
sbb
sbb
xor
mov
sbbl
test
mov
daa
mov
cld
mul
mov
mov
pushf
or
inc
jb
flds
jge
jmp
dec
int3
mov
insl
scas
imul
aam
add
push
andb
and
mov
sub
in
add
stc
cli
scas
lock
pushl
pop
add
or
sbb
outsb
add
cwtl
lcall
test
push
imul
std
jnp
pop
and
adc
push
sub
mov
add
in
mov
xchg
xchg
aad
sbb
dec
add
mov
out
adc
push
sahf
adc
ret
scas
ss
faddp
adcb
std
inc
mov
ljmp
dec
fwait
and
es
mov
mov
jl
mov
sahf
movsb
clc
mov
fcomp
sbb
cmpsb
push
cmc
mov
push
mov
xor
sub
and
fmull
shrb
pushf
mov
mov
fbld
cmp
push
repz
sbb
push
cmp
jb
cmpsl
mov
aad
nop
sbb
ret
mov
dec
mov
sbb
mov
lods
test
fwait
jg
mov
insb
add
xchg
pop
dec
mov
sbbl
push
push
cmpl
mov
jbe
jmp
sbb
jmp
fcoml
mov
xorl
rcrl
xchg
or
movsl
outsl
and
adc
fiadds
ss
sbb
dec
sub
sub
mov
pop
xchg
mov
xor
lea
add
jg
icebp
int3
cmp
mov
mov
addb
cwtl
pusha
outsb
mov
jmp
idivl
shr
cmp
or
out
mov
out
xchg
lea
shrl
jns
sbb
sbb
push
into
test
sbb
or
fcoms
dec
sbb
daa
and
lret
fs
mov
dec
cmpsb
push
inc
or
adc
fisubl
pop
int3
jl
mov
mov
popf
jbe
cmpb
push
adc
jno
icebp
fmul
inc
xchg
sbb
imul
inc
mov
fs
jge
enter
add
insl
into
jp
sahf
out
subl
adc
mov
pop
pusha
add
lret
mov
xor
cmp
std
inc
sub
negl
sub
xchg
mov
xchg
dec
push
push
jo
pop
fwait
test
fsts
mov
jb
jnp
mov
xor
aad
adc
std
test
adc
into
or
add
mov
sbb
jo
cld
arpl
stos
mov
cwtl
mov
inc
test
push
fnstsw
push
rolb
lods
insb
mov
push
add
ljmp
add
pop
pop
push
ficomps
cmp
jnp
mov
mov
add
push
mov
cmp
push
or
andl
lods
aad
in
mov
out
sbb
adcb
pmullw
fldln2
mov
clc
movsb
sub
inc
insb
movb
mov
push
dec
add
sbb
cltd
xchg
sbb
lret
les
movsl
xchg
aas
mov
out
mov
mov
popf
enter
int3
inc
jp
insb
ficoml
sbb
mov
es
ret
mov
mov
mov
xor
inc
jecxz
shr
into
jno
cmpsl
loop
js
xchg
bound
cmp
mov
mov
shlb
adc
hlt
dec
add
pop
xor
sub
and
and
add
pop
idivb
sbbl
pop
jp
or
lods
fadd
add
push
jmp
mov
test
data16
sbb
mov
test
hlt
mov
mov
mov
inc
add
add
push
aam
repnz
sbb
push
das
dec
data16
sub
fcmove
jge
pop
cmp
add
ret
and
mov
loopne
add
loopne
ja
inc
push
jns
sbb
sti
push
movsb
pop
bound
mov
sub
rcll
outsb
mov
ss
or
pushf
cmpsb
push
ds
or
arpl
mov
push
cmpsl
mov
push
adc
push
xor
icebp
pop
mov
in
jecxz
sub
or
in
inc
leave
sub
add
inc
icebp
push
push
imul
out
out
mov
movsl
adc
dec
sbb
arpl
decl
add
ficoml
subl
imul
sub
pushf
mov
lods
pusha
cli
sysret
sub
xchg
in
and
gs
or
xchg
sbb
xchg
cld
add
lea
and
in
mov
aas
add
rorl
lea
and
xor
push
scas
fmull
dec
movsb
xchg
ret
add
pop
jno
and
imul
lahf
jle
loope
or
add
cmc
fwait
sar
mov
ja
loop
mov
fldcw
jecxz
push
int
sbb
mov
dec
out
xor
iret
jg
sbb
jecxz
mov
xchg
mov
mov
clc
test
imul
add
sbb
xor
out
mov
cmpsb
std
push
dec
leave
and
leave
adc
cmp
fxch
mov
push
mov
imul
mov
lret
aam
inc
mov
loope
or
pop
icebp
les
or
mov
shl
mov
repnz
out
sbb
in
cmp
lret
add
jecxz
or
sbb
add
leave
add
pushf
repnz
rorb
push
xchg
jmp
mov
add
cmp
sub
ds
shl
jmp
jo
es
aad
xchg
test
sbb
lcall
imulb
or
xchg
insb
inc
in
xor
loope
mov
mov
cmp
push
es
push
mov
call
jl
cmp
dec
rcll
cwtl
push
iret
sbb
leave
mov
sahf
int
divl
add
inc
out
cmp
dec
in
inc
scas
stos
jnp
rorb
sbb
sbb
mov
sbb
popa
pop
sahf
add
mov
mulb
xor
insb
add
mov
add
rcll
enter
xchg
inc
les
popf
in
pop
sbb
lds
fisttpl
add
or
sub
daa
test
push
push
mov
scas
iret
pop
adc
ja
xor
and
or
mov
mov
lock
rolb
dec
adc
jp
push
mov
inc
push
mov
jne
sub
rorl
stos
sub
scas
imul
andb
fildl
jmp
pop
out
inc
fmull
xlat
xchg
pop
pusha
fidivrs
jecxz
xlat
xchg
add
jg
sub
es
or
js
lcall
in
mov
jmp
mov
mov
push
jns
repnz
loope
adcl
jg
mov
sarb
cltd
mov
mov
dec
pusha
push
inc
cmpl
sub
xchg
mov
adc
ss
adc
add
push
or
jae
ret
xchg
sbb
bnd
outsl
sbb
je
cmpsl
push
out
dec
mov
enter
popf
jb
push
fcompl
cmc
stc
mov
lods
fsubr
in
dec
mov
jmp
mov
mov
arpl
cwtl
in
cmpsl
jg
les
cmpsl
or
xchg
add
test
add
pop
adc
pop
sub
or
dec
jp
sub
imul
sbb
dec
les
jp
sahf
add
gs
pop
jle
in
repnz
rcr
xor
sbb
mov
jno
cmp
add
mov
add
ds
stos
addl
xchg
add
jne
lcall
outsl
cmp
push
mov
les
inc
mov
jnp
in
mov
xchg
add
sbb
push
lret
fwait
add
push
mul
shlb
mov
xchg
push
cmp
mov
dec
mov
push
sbb
xor
jns
xchg
ljmp
ja
pop
and
mov
push
imul
in
push
ficomps
negb
sub
inc
xchg
xor
mov
jns
xor
icebp
sbb
mov
cmp
ffree
jns
mov
xchg
andl
mov
mov
mov
aaa
movsl
jb
cmc
fs
jns
hlt
rcll
popa
lahf
sbb
mov
mov
jns
jge
sbb
jle
ret
sbb
add
daa
shlb
xchg
ret
push
sbb
jno
adc
loop
jne
inc
inc
incl
imul
inc
adcb
xor
xchg
lahf
mov
sbb
inc
fs
xchg
iret
mov
or
mov
sbb
test
inc
cld
pushf
cmp
imul
mov
jl
orl
sti
jns
push
add
iret
adc
fldl
cmp
orl
dec
out
sbb
dec
xchg
jp
mov
inc
mov
sbbl
int
mov
lret
mov
test
adcl
stc
loope
push
imul
inc
mov
fidivs
rcrl
and
cmc
fdivrl
outsl
dec
pop
jp
mov
je
rolb
ret
lods
scas
aad
mov
popa
cmp
lcall
or
pop
pushf
or
fiadds
sarl
adc
mov
je
inc
mov
lcall
scas
ret
aaa
add
mov
cmp
add
or
jge
insb
xlat
nop
add
lods
jne
and
lea
lock
add
or
dec
add
imul
jae
push
test
scas
adc
sub
mov
sahf
repz
sbb
in
addr16
jns
dec
push
mov
popf
das
rolb
mov
add
outsb
orl
add
sub
pop
daa
or
fidivrs
sub
sub
add
sbb
addl
cmc
sti
sub
out
adc
inc
mov
or
popa
adc
fs
and
push
mov
sbb
out
jp
mov
stc
or
lcall
sub
dec
pop
push
mov
pop
es
popa
add
push
adcl
in
jno
mov
hlt
or
stos
data16
or
test
sahf
cs
push
push
fwait
push
xor
mov
outsb
enter
add
sbb
or
cwtl
imul
mov
les
imul
or
call
inc
push
aad
push
xchg
adc
andl
inc
shlb
pop
jns
mov
testl
and
scas
sub
test
inc
jg
sbb
js
orb
pop
xor
rcrl
push
sbb
pop
es
add
inc
mov
sbb
or
pop
cmpl
ret
inc
dec
shll
mov
negl
add
cmc
les
lcall
jne
nop
ljmp
hlt
fs
hlt
fcompp
sub
xchg
push
mov
dec
xchg
add
roll
std
imul
add
push
mov
jnp
rcl
sbb
push
push
adc
leave
cmp
test
jl
push
lods
lret
inc
out
jle
addl
test
jmp
fsubrl
icebp
push
sar
mov
fwait
dec
pop
and
mov
add
xor
lods
andl
dec
lahf
bound
mov
mov
mov
mov
les
insl
add
or
idivb
jae
cmpsb
out
incl
idivb
fsubl
aaa
sbb
mov
popf
add
dec
sti
mov
mov
mov
add
add
mov
pop
sbbb
cmp
xchg
sbb
in
xchg
iret
jb
push
sub
arpl
and
and
or
iret
adc
dec
or
into
call
mov
and
add
mov
rcrl
cmpb
jecxz
outsb
icebp
bound
out
shl
clc
loope
mov
sbb
fmuls
xchg
push
inc
mov
in
inc
mov
mov
lret
icebp
jo
push
xor
sub
je
jnp
jmp
sbb
add
insb
mov
cmp
lret
aad
push
inc
inc
xchg
sahf
and
sbb
lahf
aad
mov
mov
aas
fsubs
push
mov
cli
jb
push
dec
addl
out
add
adc
cmp
jecxz
jl
sahf
mov
push
std
sbb
push
jae
sar
pop
lret
push
cmpsl
or
or
call
xor
fistl
xchg
sub
bound
fiadds
dec
clc
cmp
cs
sahf
adc
mov
into
stc
jae
or
xchg
rorb
add
aaa
xor
scas
je
stos
jecxz
xor
and
sbb
xchg
add
sbb
adc
sbb
add
cmc
mov
mov
mov
je
popf
xchg
enter
add
inc
lret
inc
sub
lcall
in
cmp
xchg
imul
movsb
test
jae
icebp
je
add
mov
stos
hlt
add
sar
adc
mov
push
dec
mov
xor
test
xchg
repnz
repz
xchg
outsl
lods
inc
and
add
je
fidivrl
dec
stos
xchg
test
dec
jne
xchg
mov
mov
or
push
mov
mov
inc
fwait
jge
jae
cmpl
inc
stos
rcll
jbe
lods
out
sahf
pop
sub
fcoms
adc
je
jb
loopne
and
in
fcompl
lods
inc
cmp
mov
or
pop
mov
jnp
cmp
lret
xlat
adc
lock
js
inc
movsl
mov
mov
and
mov
push
mov
jmp
add
xor
push
push
xorl
jle
mov
imul
fdivs
in
fidivrs
shl
fbstp
jo,pt
cs
testl
jg
ja
add
and
inc
ja
pop
cmp
sbb
imul
dec
mov
fs
dec
push
xchg
sbb
movsl
push
cwtl
sti
jecxz
lcall
popf
imul
cs
xlat
setp
dec
shlb
xchg
adc
sbb
sbb
jne
add
and
push
dec
xchg
xchg
adc
imul
mov
lahf
and
xor
jg
rdmsr
jp
cli
add
fsubs
roll
inc
pop
add
sbb
xor
insl
push
repz
in
scas
std
adc
pop
mov
jp
repnz
popa
ja
out
test
fs
pushf
leave
leave
push
jne
jl
push
inc
in
add
push
int
push
lret
std
mov
mov
cmpsb
dec
mov
sbb
mov
sub
flds
push
cld
lret
cmp
and
rol
mov
lods
xchg
out
or
mov
or
negl
mov
pop
mov
push
cmp
sub
incl
sbb
out
dec
or
ret
fcmovne
repz
sbb
das
mov
lock
xchg
dec
sub
add
jg
out
sub
cmpl
int3
cmp
add
lcall
insb
sbb
shlb
clc
dec
call
pusha
mov
mov
subl
push
mov
push
xchg
and
dec
ret
movsl
push
aad
sub
jl
add
in
mov
insb
sbb
stos
in
std
add
mov
mov
imul
or
sbb
xchg
sub
loopne
filds
mov
inc
ficomps
push
xor
icebp
call
mov
movsb
pop
pop
jle
dec
jae
arpl
arpl
aas
addr16
dec
sbb
push
xor
xor
mov
mov
int3
das
dec
pop
cmp
add
push
addl
jecxz
sbbl
jmp
mov
stos
sbb
sbb
dec
or
adc
lret
loopne
mov
sbb
sahf
dec
push
jmp
mov
xor
xor
cmpsl
arpl
adc
adc
loope
cltd
loop
int3
mov
mov
scas
insl
sbb
add
mov
mov
frstor
xchg
mov
es
push
adc
and
in
cmpsb
popf
mov
mov
mov
xorl
pop
outsb
aaa
andl
mov
cmpsl
xchg
dec
mov
negb
inc
sbb
addb
lds
into
xor
cmp
ret
mov
add
in
outsl
jno
daa
xorb
mov
ret
lods
jae
subb
adc
aad
add
lods
pop
aas
xorl
jp
mov
jg
push
negb
mov
sti
mov
dec
mov
add
pop
lock
movsb
std
mov
add
xchg
aaa
mov
inc
je
test
push
xchg
mov
popa
mov
iret
leave
or
daa
push
scas
inc
shrb
push
adcl
ja
lea
sbb
mov
sub
in
insb
pushf
fidivrs
pop
sbb
push
es
mov
xchg
push
sbb
int
loopne
mov
xchg
sbb
movl
inc
jnp
mov
lret
xor
stos
xor
adc
insl
inc
iret
scas
pop
ljmp
popf
pop
push
fdivr
add
ret
lcall
cld
xchg
notb
fadds
js
sbb
orl
ss
pusha
cwtl
push
mov
dec
out
or
fsubrs
adc
stos
xor
push
sub
cmpsb
mov
insl
or
stc
add
pop
ret
movsb
cwtl
mov
mov
clc
sbb
mov
xchg
push
xchg
push
or
insb
test
xor
andb
xlat
mov
loope
imul
shll
imul
addl
jae,pn
inc
enter
jno
int3
add
inc
jne
push
lret
mov
and
mov
mov
mov
dec
inc
add
fisubrs
push
popa
sbb
push
pop
aam
mov
mov
pop
or
icebp
push
mov
xor
sbb
push
in
xor
jmp
iret
hlt
mov
cwtl
pop
loope
roll
or
test
aas
mov
scas
xchg
push
add
fstp
mov
push
divb
jg
sbb
and
mov
push
iret
or
sub
clc
orl
addl
stos
icebp
push
out
rclb
mov
popa
jg
xor
mov
push
outsl
xchg
test
fwait
pop
mov
jl
imul
andl
adc
mov
mov
sbb
cld
repnz
and
pop
sahf
sarb
ds
mov
aad
popf
test
jo
mov
pop
mov
xor
cmp
push
bound
dec
cmpsl
xchg
sar
int3
ret
mov
leave
ret
mov
sbb
xor
dec
mov
rolb
mov
fsts
dec
mov
mov
or
pop
pushf
clc
out
and
jbe
pop
stos
jecxz
mov
ds
popa
sbb
lds
jle
and
lahf
add
int
int
pop
xor
cmp
fimull
sub
cmpb
movsl
push
cmp
or
sbbl
or
add
rcrl
jmp
and
sub
push
popa
fnstsw
int
inc
icebp
add
stc
ret
pop
in
aam
mov
cld
cld
pop
lods
mov
and
out
jge
rcr
xorl
adc
xchg
fdivrp
xchg
fdivl
rcrb
xchg
mov
fstps
inc
daa
dec
cli
mov
sub
or
adc
xor
call
sarl
pop
outsl
lea
or
sub
loop
lds
pop
or
popa
stc
dec
addl
ja
stos
mov
leave
mov
fwait
outsl
mov
xchg
jmp
jnp
shll
fisubs
or
mov
repz
push
roll
push
rcr
mov
or
dec
sbb
cmpsl
and
dec
insl
and
push
int3
mov
rcrb
or
xor
movsl
sub
push
hlt
repnz
lret
sub
pop
clc
lods
push
test
sti
es
cmp
scas
in
fisttpl
lahf
push
jno
inc
daa
inc
aam
jecxz
add
mov
jle
in
out
test
mov
fs
mov
mov
call
cmpl
xor
fs
popf
adc
gs
jp
push
out
add
xchg
pop
cmp
mov
sub
test
add
push
insb
xchg
imul
mov
aad
addr16
sub
inc
cld
scas
add
sub
sub
lret
or
jne
sbb
std
inc
push
call
or
jp
cmpl
sbb
mov
adc
sbb
xor
sti
add
sar
ror
sbb
ret
mov
add
outsl
add
xchg
lret
in
mov
mov
aad
stos
movq
inc
add
pop
test
xchg
mov
xchg
xchg
lret
xor
insl
inc
hlt
repz
or
mov
sub
sbbb
mov
shr
or
sbb
xor
sbb
lea
aad
loop
fdivs
sub
sbb
dec
xorb
daa
or
std
mov
sbb
jnp
leave
and
aam
jnp
sbb
cmp
mov
imul
mov
das
mov
icebp
je
mov
sub
aad
cmc
inc
xor
repz
enter
inc
lret
ret
inc
xchg
jae
pop
andl
mov
cmc
adc
popf
fadds
pop
or
hlt
fisubl
mov
sbb
mov
pop
sti
clc
test
jmp
jmp
push
adc
lea
scas
and
sbb
sub
lea
cmp
popf
add
movsb
sbb
pop
lods
jnp
adcl
nop
and
icebp
pushf
jne
dec
dec
sbb
lock
or
popf
cwtl
imull
imull
sub
addr16
ja
push
sarb
inc
sbb
pusha
lock
add
dec
dec
sbb
rclb
mov
sbb
push
add
orb
fcomi
mov
sahf
jmp
insb
into
fldenv
mov
mov
ss
xchg
cmpsb
dec
jl
push
jl
push
out
jne
fadds
xlat
mov
push
dec
xchg
add
sbb
pop
lods
aas
test
or
push
roll
jb
xchg
int3
pushf
pop
inc
mov
xor
add
pop
sbb
enter
mov
movl
pop
jae
pop
test
xchg
pop
xorl
pop
cmpb
loopne
jo
repz
cld
lcall
xchg
stc
gs
daa
fcmovnbe
mov
std
mov
pop
push
fs
in
pop
inc
test
cmp
mov
clc
inc
dec
push
xor
adc
popa
movsb
xor
add
add
pop
cmp
sbbl
fmul
inc
bound
sbb
js
mov
cli
out
mov
test
pop
sub
icebp
out
inc
stc
pop
cwtl
xorb
xchg
aaa
call
addr16
hlt
dec
cmpb
lock
sbb
jbe
cmp
and
mov
test
mov
xchg
xchg
pusha
push
xor
aaa
aaa
add
out
cld
xor
pop
xor
mov
mov
call
mov
loopne
fistpl
mov
arpl
sbb
sbb
scas
sbb
sub
jle
mov
add
adc
movsl
call
test
and
mov
add
add
fistpll
and
addr16
adc
jae
lds
or
mov
inc
adc
pop
out
adc
push
jl
xchg
push
lea
push
out
mov
sbb
outsl
sbb
leave
js
lcall
mov
xor
fistpll
inc
sub
inc
pop
rol
add
mov
repz
mov
pop
add
cmpsl
out
inc
sub
jp
test
pop
xchg
mov
push
addl
jle
call
xchg
in
xor
into
mov
lea
fiaddl
movb
lea
sti
sub
xor
adc
movsb
push
pushf
or
int
lds
fistps
jnp
jnp
loope
and
ret
lods
test
lods
xchg
or
cmp
inc
das
or
inc
imul
cmpsb
jae
mov
jg
cs
and
sub
adc
mov
jl
jp
test
xchg
xchg
pop
xorb
lock
fstpl
mov
dec
inc
jmp
add
daa
filds
sbb
mov
fidivs
scas
subb
enter
lss
push
outsb
mov
cmp
inc
notb
cmp
sbb
ljmp
icebp
mull
push
cs
fstpl
sbb
sub
add
pop
stos
xlat
and
cmpsl
clc
das
enter
sub
popf
iret
test
add
dec
mov
rcrl
mov
mov
inc
cmpl
add
mov
cmpsl
sahf
rorb
mov
bound
add
jle
push
xorl
mov
mov
pop
xor
xchg
fwait
sub
inc
pop
add
push
add
push
mov
gs
jecxz
xlat
mov
inc
mov
inc
lods
mov
mov
adc
sbb
inc
ret
jno
lock
stos
repz
bound
xchg
lods
pop
push
cli
xlat
sbb
lods
out
iret
mov
dec
xor
loopne
mov
xchg
sbb
imulb
push
push
rcll
push
cmp
inc
pop
fcompl
mov
es
mov
fdivs
sbb
scas
aas
iret
sub
test
push
mov
push
adc
cmpb
insl
cmp
mov
dec
iret
and
dec
lcall
pop
out
cmpsb
mov
push
add
std
xchg
mov
pop
mov
or
jle
ret
push
mov
std
cltd
mov
decl
in
add
loopne
fnstcw
outsl
jo
adc
bound
xchg
ljmp
jp
addr16
dec
jmp
cwtl
or
ss
add
mov
filds
add
arpl
lds
insb
push
adc
sbbb
mov
mov
lret
movsl
frstor
test
add
fcompl
xor
std
fildl
adc
lret
pop
ret
ss
fnstcw
js
out
xor
repnz
mov
repz
pop
cld
insb
xchg
sbb
jle
inc
add
push
cltd
sub
or
xchg
loopne
fcmovnbe
push
and
push
xchg
repz
jns
xorl
jle
lret
mov
dec
fst
sub
or
mov
jmp
dec
in
pushf
jg
ja
test
adc
out
push
push
cmp
add
fnstsw
xor
icebp
xor
ljmp
lds
sub
add
inc
inc
push
jnp
fisubrl
std
add
leave
pop
sub
ds
cmp
adc
lods
ljmp
push
mov
sbb
inc
add
sbbb
pop
fiadds
sub
sbb
push
ficoml
orl
fcmovnb
bound
sbb
fwait
es
lcall
xor
mov
dec
adc
mov
out
sarb
in
inc
out
sbb
in
pop
pop
fimull
roll
or
mov
ja
enter
jnp
mov
in
test
push
xor
or
mov
mov
mov
iret
inc
pop
inc
inc
imul
add
enter
and
or
sti
inc
sbbb
add
xchg
call
mov
cmp
sbb
pop
in
mov
cwtl
adc
jl
lahf
mov
mov
cmpsl
and
inc
js
int3
jg
or
in
insl
in
nop
test
push
mov
add
sbb
fidivl
movntq
int3
jb
ret
sbb
dec
lds
dec
jno
test
xchg
add
inc
push
out
aam
or
and
in
and
aad
xor
icebp
sbb
cmpsl
jo
mov
jg
lret
imul
sahf
cmpsl
mov
cmp
test
hlt
pop
jle
jae
into
sbbl
pop
fwait
mov
call
orb
sub
gs
aam
popf
loopne
and
js
add
and
ss
insb
xor
test
ljmp
ds
xor
aam
cs
pop
ret
pop
les
mov
aaa
push
lret
xor
cmp
dec
inc
in
jbe
pushf
and
lock
sbb
pop
out
mov
or
ret
mov
xchg
inc
lret
nop
cmp
xor
lds
pop
fsts
outsl
sbb
pop
repz
pop
jecxz
lcall
xchg
adc
push
fstpt
pop
nop
or
jecxz
pop
and
mov
scas
add
fcmovnbe
push
cli
sub
sti
dec
mov
out
es
out
mov
jge
rcll
adc
mov
sub
sub
xor
push
fmuls
fnstsw
cmp
mov
popl
sub
xor
aas
push
jbe
pop
jle
jle
jbe
sbb
popl
cltd
fnstenv
sub
shl
imul
pop
sahf
roll
cmpsl
fistpl
lcall
push
int3
setg
cld
mov
sar
add
pop
xor
pop
push
jle
shl
mov
outsb
test
inc
add
xchg
imull
mov
pop
jbe
and
xor
xor
adc
lds
stc
lret
xchg
sub
bound
cmp
sbb
cs
sub
inc
jae
pop
cmp
add
and
sbb
xchg
add
adc
movsl
or
nop
xor
and
rclb
add
or
loope
fstps
xlat
mov
cli
add
cs
popa
mov
repnz
adc
dec
into
lcall
popf
sub
inc
lea
loop
jmp
nop
xchg
ds
jp
jecxz
and
cmpsb
outsl
or
js
jo
cmp
loope
dec
sub
outsb
xor
jno
int
mov
sub
dec
and
push
add
lods
lret
or
and
lret
sbb
ret
out
sub
pop
roll
mov
pop
mov
or
or
xchg
loopne
lock
test
mov
push
orl
add
and
mov
adc
aad
jle
js
aas
xchg
shlb
mov
enter
and
pop
icebp
lds
sbb
push
repnz
aaa
push
jge
mov
loop
jmp
sbb
push
fldt
fadd
fdivl
pop
jg
push
ret
sub
std
orl
mov
dec
pop
xor
je
push
cmpsb
jl
in
add
lcall
push
ljmp
jp
pusha
xor
cmpsb
cltd
sub
pushf
mov
shrb
and
xchg
mov
xor
jecxz
sarb
pop
fs
pop
inc
rol
mov
pop
popf
inc
sbb
jle
mov
aad
add
jbe
clc
test
mov
ds
xor
push
jnp
lcall
sub
lods
mov
sub
pusha
cmp
push
fwait
sbb
sahf
xchg
push
xor
sahf
cmp
inc
leave
add
sub
shr
adc
rolb
inc
jl
pop
or
dec
cmp
inc
jno
fldt
xchg
dec
sbb
inc
scas
ds
xor
cld
add
xlat
jae
mov
outsb
xchg
sbbl
xor
pop
and
adc
xchg
pop
jno
add
in
adc
lcall
adcl
jno
pop
add
mov
jb
jae
insb
mov
int3
add
mov
inc
fucomi
mov
sti
or
sahf
sbb
fnstenv
mov
xchg
mov
pop
jle
in
xchg
popf
xorl
pop
xchg
imul
negl
sbb
dec
mov
out
jae
add
and
shr
xchg
addb
ret
xchg
cmp
inc
mov
int3
push
ljmp
jp
and
std
ljmp
lret
ja
jno
dec
mov
mov
paddw
imul
jle
push
rorl
mov
xor
sbb
out
pop
or
cmpsb
loope
rcrb
rcll
and
mov
sti
add
ds
push
sub
aas
fisubs
xor
xchg
or
das
icebp
pushf
mov
sbb
and
adc
js
es
mov
iret
or
out
insl
sub
adc
popa
lcall
fiadds
sarb
adc
mov
mov
adcl
faddl
fists
add
and
lgs
mov
xchg
int
ret
flds
jae
out
cmpsl
ds
push
popa
xchg
imul
sub
xorl
es
mov
jp
inc
pusha
inc
cmpb
lcall
mov
cmc
mov
inc
sub
push
jnp
mov
cmp
loop
js
adc
mov
subb
int
add
sbb
xchg
lret
inc
push
sahf
repnz
notl
idivb
mov
sahf
pop
ffreep
flds
outsb
lds
or
pop
sbb
push
adc
pushl
sbb
lret
and
mov
push
ljmp
rcrl
push
ret
mov
pop
add
pop
inc
add
jno
sbb
mov
inc
sbb
jecxz
add
scas
adc
xorl
stc
cmp
sbb
xchg
cmp
add
xchg
inc
sbb
xlat
adc
cs
add
xor
je
xor
add
outsb
bound
xorl
es
stos
add
rclb
xor
bnd
push
test
aas
mov
aas
aad
ret
insl
jp
mov
push
jae
jle
movsb
cmp
push
das
dec
popf
xchg
mov
mov
push
lods
xchg
mov
mov
push
in
std
ds
rol
or
pop
into
out
adcl
mov
mov
call
sub
imul
adc
cmc
xchg
cmp
repnz
jmp
sarl
xchg
pop
lcall
pop
std
or
and
mov
ret
arpl
mov
data16
sarb
imul
daa
cmp
inc
sbbb
dec
push
shll
bound
iret
sbb
cli
lahf
jp
rolb
mov
mov
sub
pop
je
add
stos
mov
cmp
push
cmp
cs
aas
shrb
cwtl
xor
xchg
push
xchg
push
fldt
sbbl
aam
loope
add
cmp
mov
int
pop
subb
jmp
add
or
dec
jmp
push
in
pop
movsl
adcl
cmp
imul
cmc
out
push
sbb
dec
hlt
mov
and
wbinvd
or
loop
lock
sbb
push
mov
sbb
fidivrl
pop
lock
es
jl
add
or
inc
mov
imul
ja
pushf
addr16
push
add
add
push
js
pushf
stc
pop
imul
sbb
pusha
jno
rcrb
lods
push
sbb
scas
into
scas
mov
lea
push
sbb
stc
test
pusha
cmp
out
shrl
pushl
push
cltd
or
jno
lds
add
push
sub
sbb
movsl
lea
and
or
arpl
loop
xchg
sbb
dec
mov
add
sub
cld
test
cli
fisubrl
ja
add
mov
adc
and
xlat
xchg
inc
fidivl
sbb
sub
or
cmp
pop
add
addr16
cmp
mov
pop
aaa
divb
mov
cmpsl
mov
out
sbb
add
int3
or
sti
push
dec
jno
sbb
std
sub
loopne
sub
fnstenv
cld
or
imul
shrl
dec
adc
cmp
ja
mov
stos
daa
mov
jo
inc
jbe
js
mov
jl
clc
imul
xchg
push
sub
and
pop
pop
ret
lods
test
insb
adcl
fiaddl
sbb
or
addb
loope
jp
ljmp
andb
pop
xchg
mov
jmp
das
ss
add
or
jl
mov
and
insl
pop
jae
mov
add
add
mov
push
arpl
mov
jge
mov
outsb
pop
mulb
add
inc
std
mov
sbb
lret
rcr
sbb
xor
mov
dec
mov
adc
hlt
xchg
lock
inc
push
mov
and
ret
cmp
jecxz
clc
and
xchg
insb
push
sbb
sarb
xchg
cmc
mov
roll
adc
inc
fdivrl
test
or
arpl
dec
inc
iret
and
jb
lret
add
inc
inc
xlat
lcall
lods
cmp
cmp
dec
mov
mov
add
jge
fnstsw
add
push
mov
ret
adc
lea
lcall
nop
and
or
mov
push
ja
ds
xchg
cmpb
pop
cltd
sub
jecxz
sbb
lahf
inc
fldcw
xchg
jl
push
ds
sub
scas
add
push
pop
or
sbbl
inc
mov
push
and
add
xor
mov
xchg
jae
loope
pop
lcall
loope
je
cmpsb
fnstenv
inc
cmp
movsb
inc
jge
adc
mov
adc
add
add
subl
fstl
and
jle
test
jne
sbb
push
les
pop
cmp
ss
stc
pop
cmpl
mov
or
add
imul
ja
in
xor
arpl
xlat
add
mov
aam
push
sbb
push
call
mov
add
fimull
cmp
dec
lds
push
cld
mov
leave
test
and
mov
test
mov
std
cmp
dec
sbb
js
push
pop
fcompl
mov
and
out
test
xchg
sbb
ljmp
decb
stc
and
add
add
pop
aaa
mov
add
dec
cmc
fistpll
les
adc
pcmpeqb
mov
sahf
into
mov
xlat
jbe
daa
test
and
mov
push
arpl
filds
adc
or
and
aaa
sub
xchg
cmp
dec
mov
push
mov
mov
jge
movsl
sbb
mov
mov
inc
sbbl
or
adc
out
mov
into
push
popa
aaa
sbb
mov
cmpsl
pop
rol
imul
push
or
cld
inc
fucom
xchg
jae
loopne
xchg
jbe
push
mov
rol
ret
pop
jmp
push
std
cmpsl
shrl
push
adc
dec
insb
in
push
xor
repz
cmpsb
dec
sbb
vmread
fistpl
rclb
fldln2
ja
fadds
and
push
jmp
mov
sbb
aam
mov
add
mov
aad
lea
sub
jb
clc
jne
mov
xor
xor
and
aam
mov
cltd
xchg
xchg
out
sbb
cmpl
aad
ret
stos
mov
and
insl
roll
lods
sbb
movaps
sbb
stc
fwait
adc
xorb
mov
mov
add
ljmp
das
and
jnp
lods
jnp
call
clc
mov
sbb
mov
dec
jl
js
add
mov
push
or
aaa
jge
ds
clc
test
push
cmp
ljmp
xor
xor
add
out
mov
ret
dec
xchg
sbb
mov
bound
int3
pop
mov
pop
push
loopne
mov
mov
mov
repnz
fninit
jbe
add
jmp
xchg
pusha
or
sahf
mov
inc
ret
xor
pop
fs
sbb
jns
jno
xor
inc
dec
mov
cmp
aam
add
jnp
xchg
jecxz
mov
sbb
push
and
icebp
and
cmp
rorb
je
ficoml
lret
pop
insb
pop
jnp
fcmovu
bswap
add
and
loopne
push
pop
movsl
inc
pop
sbb
shl
aad
nop
lret
orl
pop
mov
outsl
fimuls
xchg
stc
imul
push
sbb
rorb
sbb
or
into
fcmovbe
mov
and
lahf
inc
imul
ret
pop
or
cmp
in
xchg
mov
mov
jge
enter
xchg
clc
mov
mov
imul
sbbl
add
mov
sub
out
and
mov
sahf
rcr
aaa
pop
js
cmpl
or
mov
rolb
jae
sbb
fbld
ds
push
int3
mov
sub
add
mov
mov
xor
push
bound
or
and
xor
cmp
repz
bound
lods
mov
push
sbbb
mov
mov
fmull
es
sbb
cli
sbb
pop
push
xchg
cmp
es
sbb
cld
or
repz
sbb
adc
sbb
add
std
negb
pop
jg
adcl
setns
xchg
das
mov
push
cmc
lods
mov
sbb
jecxz
jb
add
or
xchg
jne
pop
or
fistpl
cmpsb
cmp
dec
jp
ret
jae
mov
mov
push
or
adc
push
push
pop
popa
outsb
push
outsl
sbb
mov
pop
add
js
pop
paddsb
je
inc
inc
lcall
clc
xchg
mov
push
dec
sar
insl
test
xlat
sqrtps
call
dec
push
jae
mov
mov
or
sti
insl
out
mov
ret
in
test
test
add
sbb
add
incb
les
push
xchg
cmp
nop
pop
cmpsl
cmp
je
movl
int3
and
aad
in
adc
imul
inc
xchg
shlb
movsl
gs
jbe
mov
sbbl
cli
sub
imul
adc
sti
cmc
shl
mov
jnp
jg
or
in
inc
inc
leave
addl
mov
add
scas
stc
lods
jp
sbb
jbe
test
fiaddl
or
lret
sbb
mov
mov
jecxz
fst
mov
push
jae
mov
cmp
pop
xchg
sbb
xchg
mov
bound
test
cltd
push
sub
mov
icebp
out
adc
into
insb
xor
add
loope
pop
push
mov
negb
daa
xor
pop
jmp
data16
xor
test
andb
hlt
loope
lret
add
leave
or
inc
fsubl
pop
xor
roll
aad
imull
cmp
pop
pop
xchg
inc
adcl
mov
into
stc
iret
test
mov
je
xor
pop
lock
subl
call
mov
adc
xor
jl
push
rcll
jmp
hlt
mov
sub
sub
cli
bound
push
sbb
lods
jne
mov
pop
and
pop
push
mov
insb
int
notl
cmp
lods
xchg
cwtl
mov
test
add
fdivr
xor
mov
add
outsb
or
sub
inc
xchg
push
xor
jnp
or
and
pushf
test
jns
add
cmp
test
dec
mov
popf
movsl
cmp
mov
sub
fistl
addr16
add
fistpl
add
sbb
std
loop
mov
stc
sub
mov
sub
jmp
pop
loop
xor
and
sarl
adc
xchg
adcl
fisttpll
push
data16
jnp
mov
mov
sbb
cmp
xor
add
xchg
cli
inc
xchg
mov
sub
mov
lods
push
outsl
lods
rep
dec
out
xchg
cmpsl
mov
add
mov
and
cltd
cmp
jp
push
mov
mov
add
bound
cmp
cmp
pop
dec
jg
mov
mov
mov
ficompl
mov
das
dec
mov
sahf
fidivrl
or
out
icebp
jno
sbb
lock
dec
push
cmp
sub
enter
les
dec
xor
out
std
aas
mov
jle
jb
sbb
inc
movsl
rcrl
mov
add
in
pusha
idivl
fbstp
fwait
push
or
mov
mov
adc
sbb
xor
jmp
out
in
lret
xlat
adc
mov
add
outsb
pushf
rolb
adc
sbb
daa
rol
mov
lret
push
mov
shlb
incb
xchg
mov
mov
paddsb
insl
ss
push
pop
jmp
mov
xchg
pushf
dec
push
sbb
scas
cmp
xchg
mov
dec
mov
pop
pop
sub
popa
stc
cmp
loopnew
cltd
mov
mov
mov
std
sub
packuswb
mov
jge
dec
pop
test
data16
les
or
push
test
sub
cli
scas
jp
adc
rolb
scas
xchg
or
push
xchg
sti
jmp
mov
push
fcmovne
bound
push
outsb
add
fidivl
add
pop
and
orl
inc
das
and
pop
repnz
loopne
cli
sbbl
sbb
lods
pop
xor
pop
push
xorb
pop
pop
ljmp
mov
loop
push
xchg
aam
push
cltd
mov
and
mov
lret
nop
rolb
push
cmpsl
mov
movsl
in
inc
and
jmp
pop
jnp
xchg
pop
and
mov
push
sub
push
add
jl
adcb
xor
sbb
std
iret
repnz
cmp
push
scas
mov
pop
jo
testl
in
lret
mov
cwtl
cmp
add
mov
insl
xchg
dec
cmpsl
stos
fidivl
lahf
fincstp
adc
xchg
inc
mov
js
pop
dec
mov
mov
mov
and
jl
add
call
cld
out
icebp
or
pop
mov
cmp
aad
push
cmp
dec
repnz
lret
xlat
sarb
mov
flds
rol
into
add
inc
add
sbbl
add
call
addr16
jb
in
jae
cwtl
xorl
cs
pop
mov
mov
mov
sub
pop
push
hlt
fdivl
adc
rolb
mov
mov
orl
sbb
mov
in
mov
cmpsl
push
pop
xchg
mov
lret
inc
call
mov
push
jmp
js
in
pop
inc
sti
mov
sbb
ljmp
mov
adc
sbb
movsl
cmp
dec
inc
ret
insl
add
inc
xchg
or
push
ret
sbb
or
aad
mul
adc
cmp
push
sbb
aas
repnz
std
xchg
rcl
cmp
les
sbb
push
andl
mov
enter
xchg
pop
add
subl
or
das
cltd
dec
test
cmpsb
sbb
movsl
nop
sub
movsl
jmp
xor
inc
das
out
cmpl
push
sarl
sbb
fwait
enter
pop
pop
lret
popl
dec
xor
cmpl
xlat
iret
xchg
lret
inc
sarb
xchg
popl
lods
sbb
add
pushf
sti
stc
or
xlat
shlb
adc
adc
inc
push
test
into
push
stos
push
add
cmc
orl
push
jle
cmpsb
call
mov
cmp
clc
addr16
insl
adc
mov
fucomip
movups
xor
xchg
sti
shll
outsl
iret
xor
loopne
push
popl
and
jae
int3
fcoml
cmp
ret
jecxz
sbb
orb
mov
dec
cwtl
sti
inc
xor
mov
pop
pop
out
push
mov
jno
stos
cmpsl
sbb
jb
test
adcb
mov
es
xchg
pop
divb
xchg
cmp
cli
jge
shlb
sbb
jb
fmuls
cli
jecxz
fmuls
or
xchg
mulb
jbe
add
push
jle
mov
push
jae
push
pop
sbb
or
fiadds
sbb
xor
mov
adc
xchg
or
in
pop
movsl
mov
push
loop
xor
or
scas
jecxz
and
idiv
jp
push
lret
jbe
sub
jecxz
xchg
sbb
repz
lahf
mov
outsb
iret
rorl
mov
inc
push
xchg
sub
add
mov
roll
sahf
hlt
mov
scas
aad
inc
test
mov
pop
mov
int3
mov
pop
pop
lock
xor
push
jle
push
icebp
mov
dec
imul
sbb
push
sub
add
cwtl
loop
test
fisubrl
fstpt
or
test
mov
lahf
sub
mov
pop
lds
sbb
hlt
test
jmp
mov
mov
cmp
sbb
mov
lods
test
sub
or
test
or
fldenv
pop
cmp
test
movl
or
sbb
stc
push
add
sub
psubusw
mov
sbbl
jbe
inc
jae
incb
mov
leave
pop
add
addb
rcr
lods
shlb
or
push
cmpsl
xlat
inc
pmuludq
movsl
nop
sti
pop
push
out
rcrl
decl
xorl
es
adc
aaa
in
push
ret
mov
xor
outsb
mov
mov
fldt
ret
jbe
jge
mov
xchg
lret
jnp
cmc
add
xchg
push
mov
mov
and
dec
cmp
jb
xchg
push
mov
fwait
or
dec
sbb
pop
call
pusha
xchg
movb
cmc
mov
jnp
inc
jmp
sahf
sbb
xchg
std
das
sbb
dec
pop
adc
cmp
fnstenv
int
mov
mov
pop
mov
mov
cmp
xor
jp
mov
gs
lock
outsb
pop
cmpl
movsl
dec
js
xchg
mov
push
sarl
sti
in
sti
out
push
pop
add
sbb
pop
call
cmpsl
sbb
jge
test
ret
sbb
adc
xchg
cld
ror
mov
aas
mov
sub
fildl
jg
lret
addl
push
lret
dec
cmp
je
dec
pop
sar
je
xchg
and
repnz
jae
sbb
pop
mov
jo
jmp
rclb
mov
xchg
sbb
push
jb
jge
int3
xor
push
adc
mov
cmp
in
mov
into
jmp
loopne
lcall
adc
aad
rcll
mov
add
ja
daa
mov
popa
sub
fs
dec
stos
subl
push
pop
mov
call
mov
cmp
jbe
sub
inc
sub
nop
fsubl
mov
fcmovu
sahf
sbb
inc
pop
jne
cmp
lods
rolb
sub
dec
fidivl
cmpsb
push
mov
xor
pop
leave
rcrl
jno
lret
cwtl
shlb
jle
mov
push
add
sbb
outsb
mov
pop
sbbl
pop
orl
cmpsb
xor
repz
jle
aaa
leave
inc
cli
sbb
mov
arpl
sbbb
jns
mov
ficoml
adc
mov
cltd
sbb
cld
sbb
inc
test
addl
lock
icebp
das
add
mov
sti
mov
fstpl
sbb
jns
lahf
or
jns
add
cmp
sub
ss
enter
fucomp
loopne
es
sbb
dec
nop
add
xor
push
mov
cli
shlb
or
add
sbb
jnp
jae
mov
imul
dec
fdivs
shlb
neg
cmp
shll
stos
mov
inc
xchg
pop
ficomps
cltd
and
cmp
sub
out
arpl
pop
movsb
lret
push
aam
cmp
add
int
jo
mov
imul
cwtl
mov
mov
in
orb
in
push
pop
loope
stc
mov
sub
popf
pusha
pop
push
cmpl
popa
pop
push
add
jbe
out
fisttps
out
mov
dec
mov
popa
mov
add
xchg
xchg
push
cltd
jno
jmp
jb
mov
clc
xchg
cmp
leave
roll
inc
jecxz
jo
adc
jle
ret
or
sbb
into
sbb
add
cmpsl
pushf
testb
leave
sub
mov
mov
out
cs
lret
or
pop
dec
pushl
stc
loope
test
addr16
std
cmc
mov
mov
push
push
adcl
pushf
jne
dec
jmp
popf
loope
loope
enter
lahf
shll
mov
pop
fucomp
and
stc
sbb
mov
mov
loop
cld
mov
cmp
and
sub
adcl
and
adc
into
add
xchg
sahf
lcall
jb
dec
cwtl
jge
mov
sbb
xchg
les
sbbb
adc
and
das
cltd
mov
mov
loopne
in
shlb
jecxz
xor
push
test
xor
mov
jo
andl
into
orl
xchg
or
out
and
add
sub
pop
mov
mov
rsm
sbb
sbb
aam
jbe
pop
in
mov
popf
pop
push
xor
popa
cmovle
clc
or
and
addr16
sbb
rcr
mov
sbb
movsl
mov
jmp
popf
inc
sbb
mov
jle
clc
mov
scas
shr
add
aas
orb
cmp
test
add
cmp
mov
jb
cmpsl
dec
pusha
mov
fisubs
sti
add
fnstcw
dec
rcrb
add
or
sbb
in
cmp
and
sub
inc
sbb
cwtl
and
mov
sbb
mov
aaa
or
push
addl
xchg
ret
pop
xor
xlat
xor
mov
mov
mov
cs
cmp
add
mov
popa
add
arpl
in
pop
lahf
daa
pop
ret
subl
popa
jne
adc
lods
dec
xchg
jns
lret
and
push
jmp
sbb
push
lret
mov
les
mov
loope
cmc
inc
sbb
and
xchg
call
mov
and
ja
adc
inc
sub
lret
and
rorb
add
mov
in
xchg
sbb
and
xchg
out
add
mov
stos
pop
repnz
in
fs
mov
xor
hlt
cmpsb
adc
sbb
stc
adc
test
rorb
daa
pop
imul
sub
test
or
pop
push
sub
aad
adc
xchg
out
cld
cmp
sub
push
and
adc
imul
and
pop
in
xor
dec
inc
arpl
orl
jl
shlb
jb
insb
and
pop
outsl
mov
dec
jo
xchg
es
pop
rclb
cmp
fdivr
hlt
ret
mov
mov
mov
xchg
and
loop
sbb
inc
pop
fisubrs
add
nop
mov
cltd
subl
je
or
enter
je
adc
fisttpll
call
xlat
mov
mov
repz
sbb
jl
lock
or
loop
inc
sarb
cwtl
movsl
jge
and
in
or
scas
xchg
add
dec
arpl
push
leave
jne
sbb
mov
push
fstps
out
or
insb
push
loop
adcl
stos
and
test
dec
push
push
lret
test
in
mov
stc
fstpl
rorb
ret
test
mov
mov
daa
mov
mov
cld
xchg
cmp
add
jle
lea
aad
iret
sub
jp
add
sub
mov
loope
inc
data16
adcb
push
ret
lock
or
add
xor
lret
dec
add
leave
push
pinsrw
fwait
push
push
out
loop
aaa
ljmp
dec
adc
xlat
jge
inc
mov
pop
ret
cmp
push
add
addr16
pop
shl
mov
push
mov
jle
adc
mov
sar
mov
add
jnp
jae
sub
in
and
and
adc
fdivl
lods
cmp
call
jmp
mov
fimull
fnstenv
push
arpl
mov
cmp
arpl
jno
shr
push
jg
mov
in
popa
mov
ljmp
aas
aad
fnstenv
adc
mov
inc
or
cmp
call
mov
sti
pusha
mov
out
mov
dec
sbb
jle
xor
in
and
mov
sbb
push
loop
lahf
mov
in
lret
rcr
adc
adcl
sbb
mov
sub
fiadds
inc
push
stos
adc
xor
or
mov
xor
dec
iret
pop
shlb
enter
add
mov
cmc
jns
inc
sub
add
adc
mov
sti
cmp
jecxz
into
jno
pop
adc
jmp
xchg
inc
cmp
sub
orl
jno
or
push
faddl
js
mov
xchg
iret
ljmp
push
lods
out
rcrb
movsb
sub
stos
cltd
mul
add
decl
add
mov
outsl
rolb
sbbl
inc
mov
jo
mov
shrl
in
dec
pop
ret
insb
shll
stos
loope
cltd
test
imul
mov
inc
and
adcb
adc
test
cmp
push
outsl
jnp
xorl
insb
pop
aaa
testb
lcall
mov
aaa
jae
jae
push
mov
inc
mov
into
or
inc
jl
cmp
cmc
das
add
cmp
push
dec
adcl
stc
mov
movsl
mov
cmp
mov
pop
movsl
sbb
repz
fnstcw
mov
mov
outsb
mov
stc
pop
mov
sbb
cwtl
adc
push
mov
int
pop
test
mov
ret
adc
sbb
out
and
cmpsb
imul
movb
jo
adc
adc
pop
loope
jb
sbb
mov
cli
mov
imul
dec
push
inc
add
sbb
mov
cwtl
ds
push
mov
adcl
mov
out
mov
mov
xchg
sbb
or
add
mov
andl
push
dec
mov
lcall
cmpl
mov
xchg
test
subl
jp
sub
cmp
inc
sbb
mov
sbb
dec
cltd
shlb
mov
jo
shl
pushf
xor
mov
pusha
pop
adc
arpl
jle
js
outsl
mov
mov
movsb
fldenv
jmp
add
cld
cmp
mov
sbb
sub
int3
inc
or
mov
sti
xchg
push
xchg
pop
test
cltd
or
in
sarl
sbb
fistpll
dec
add
adc
fdivrs
sbb
push
es
into
adcl
outsl
and
movl
mov
shll
vmwrite
lcall
xchg
mov
mov
aad
dec
sub
clc
add
mov
inc
jge
push
fiaddl
adc
push
and
nopl
out
aaa
push
add
cld
pop
adc
and
push
jmp
ret
xchg
mov
orb
or
jge
xor
mov
mov
addl
pop
ja
add
push
lods
mov
mov
dec
xchg
xorb
mov
and
and
mov
adc
dec
sbb
adc
arpl
lcall
loop
jae
lret
movsl
mov
jnp
jns
pop
daa
mov
sbb
mov
mov
mov
sarb
xchg
sbb
test
sbb
clc
or
xchg
sti
cmp
fadds
insb
sbb
adc
mov
pop
test
pop
adc
xchg
sahf
inc
movsb
stc
dec
jge
fwait
js
repz
push
push
mov
dec
jmp
add
push
aas
idivl
push
out
in
andl
addr16
imul
or
repz
sbb
cmp
or
jne
sbb
aad
push
sbb
cli
sbb
sbb
xchg
loopne
adc
mov
pop
jg,pt
push
loop
mov
pop
aam
cmp
or
fldl
scas
jecxz
push
add
sub
arpl
adc
xor
mov
dec
idivb
mov
scas
in
inc
add
cmpsb
loope
jg
pop
push
clc
or
pushf
js
out
jge
push
lcall
out
mov
fmull
push
inc
stc
mull
or
fidivrs
test
fbld
add
mov
xor
sbb
cmp
out
call
fcoms
idivb
dec
dec
pop
mov
les
ret
dec
pop
cs
inc
leave
sbb
aaa
xchg
jb
mov
add
mov
xor
mov
enter
lcall
cmp
pop
push
in
testb
adc
sbbl
xchg
fnstenv
pop
mov
lods
sub
lds
loopne
out
adc
add
cwtl
test
cmpl
mov
mov
mov
lret
lock
xor
xor
jl
pop
es
rcrb
xchg
out
pop
ret
push
in
sbb
and
je,pt
add
jmp
pop
fildl
imul
cmp
mov
hlt
scas
or
pop
jns
clc
data16
xchg
add
xchg
insl
mov
hlt
mov
iret
inc
in
inc
jbe
dec
add
pop
sbb
in
in
pop
push
or
fcoms
mov
adc
cmp
mov
daa
cld
mov
sbb
or
repz
push
add
lret
scas
mov
es
pop
mov
fiaddl
dec
sbb
jnp
mov
xlat
mov
mov
sbb
mov
js
add
test
and
popa
inc
sub
insl
xchg
cmp
shl
mov
mov
lahf
ljmp
repnz
icebp
cld
out
fadds
xchg
cmpl
and
in
and
cld
and
xchg
sub
test
mov
sbb
add
mov
and
cmp
sahf
sbb
push
stc
push
pop
iret
xchg
add
in
out
lock
fstpt
int
fiaddl
mov
add
xchg
xor
fnsave
hlt
jns
jge,pn
add
pop
sub
sbb
xor
pop
cld
adc
and
enter
and
sbb
cmp
sub
adcl
movsl
jne
mov
add
mov
movsb
fldenv
push
mov
sbb
das
push
mov
pop
jmp
mov
adc
xor
push
push
add
das
push
imul
push
subl
mov
mov
mov
or
lcall
pop
jmp
movsl
dec
stos
call
es
pusha
pop
mov
push
xchg
jo
int3
jae
or
test
stc
mov
loop
pushf
cld
sahf
out
add
jmp
mov
jbe
scas
mov
dec
arpl
add
jp
pop
jg
and
inc
inc
xchg
add
popa
jae
sub
adc
pop
mov
repnz
mov
les
pop
fimull
lock
lods
lods
andl
or
mov
sbb
inc
aas
xchg
dec
sbb
in
adc
cmp
dec
push
cmpl
iret
div
mov
das
jno
imul
dec
mov
test
mov
andb
xchg
cltd
test
jmp
mov
pop
repnz
inc
cmp
inc
xchg
js
stos
add
push
iret
xor
cmpsl
jmp
mov
mov
ss
sbb
js
jnp
jnp
mov
mov
jp
ret
lahf
inc
aad
call
mov
pop
adc
js
insl
mov
jmp
movsl
loopne
ret
ljmp
jae
inc
lret
push
mov
push
test
fcompl
mul
cmp
inc
fildl
fbld
push
sbbl
add
jo
adc
push
and
cmp
mov
ljmp
dec
mov
add
jns
pop
fildl
sbb
ds
fimuls
cmp
lods
mov
pop
lret
inc
inc
adc
xchg
fildl
add
push
or
sbb
cmp
add
push
xor
addl
testb
add
pop
inc
scas
sbb
inc
mov
jae
nop
aad
in
mov
mov
aam
xchg
orb
mov
cmp
pop
lods
lahf
push
ja
add
mov
dec
add
sub
jg
frstor
push
add
inc
sbb
fnstcw
das
in
dec
mov
push
outsl
cmp
mov
push
push
sub
mov
or
scas
push
mov
pop
out
pop
xchg
lahf
jg
sbb
jno
adc
push
or
add
repnz
ss
pop
loope
mov
mov
sub
cli
scas
popa
lds
cmp
ljmp
pop
sbb
in
aad
aam
nop
ja
bound
sbb
dec
int
ljmp
jbe
mov
add
inc
nop
je
loopne
jg
mov
sbb
push
push
arpl
cs
aam
int3
pop
rcrl
push
ret
mov
ret
test
int
icebp
mov
clc
cmpb
add
arpl
cmc
jb
or
jecxz
push
nop
xchg
movsb
repz
mov
in
insl
push
mov
insl
dec
adc
jge
jmp
ret
shlb
lods
sub
mov
jnp
mov
and
mov
pop
jl
sbb
xor
fs
cmp
jbe
ja
cmpl
pushf
subl
pop
mov
jl
mov
lret
mov
fsubl
sbb
clc
cmp
pop
movsb
std
sbb
sahf
sub
add
jno
loop
insl
lock
ljmp
in
cmp
loopne
pop
filds
push
sbb
mov
inc
nop
out
in
sbb
ret
push
jb
add
push
sub
adc
sub
loop
lahf
bswap
fmuls
cmpsl
out
out
mov
sbb
lods
rcrl
nop
in
add
mov
cmpl
dec
dec
rcrb
jns
push
mov
out
out
cmpsb
add
movsb
orb
fisttpll
jle
aaa
xor
push
jae
cmp
cmp
sbb
fistpll
adc
xor
pop
in
popf
jmp
sarb
inc
jbe
xor
sub
cmpsb
cmc
sub
add
jecxz
sbb
cmpl
std
and
add
mov
sti
sbbb
and
inc
add
sbb
sbb
dec
cli
movsl
arpl
arpl
xor
push
push
lock
adc
mov
iret
mov
lret
sub
sbb
shll
andl
xor
or
outsl
jge
push
cmp
dec
jne
pusha
sub
xlat
inc
addl
add
mov
jmp
mov
mov
add
add
fisttps
jno
shrb
fstpt
dec
xor
nop
pop
inc
sbb
in
scas
aad
or
adc
jb
mov
xacquire
or
mov
fwait
imul
out
fwait
sub
mov
in
mov
mov
jge
mov
and
sbb
xchg
shll
test
xor
das
adc
movsb
add
mov
ficomps
scas
push
mov
dec
sbb
push
sbb
and
ficoms
add
mov
push
inc
sbb
adc
dec
inc
or
enter
rcrb
andl
jnp
mov
xchg
xchg
add
out
xor
sbb
cmpsl
mov
xchg
out
jge
adc
cmp
adc
mov
push
pop
addl
int
cmpb
inc
jns
hlt
sbbl
xchg
push
mov
sub
cwtl
cmp
fsubrl
pop
xor
sub
subl
bound
aam
int3
fisubl
icebp
fidivrl
xchg
sti
orl
dec
in
outsl
mov
rorl
ficomps
sbb
std
test
dec
sub
daa
cmpl
movsl
jl
outsl
mov
or
aas
stc
call
adcl
lock
mov
shrl
repz
loopne
xor
push
test
rorl
or
sti
pop
mov
cmp
jge
les
dec
scas
cwtl
cmp
sbb
or
adc
cld
jl
mov
loop
xchg
fwait
gs
fnstsw
test
jmp
lcall
jge
outsl
fiaddl
and
dec
rcr
dec
or
xor
mov
scas
jecxz
inc
jg
andl
and
jns
cmpsb
and
cld
push
test
out
or
cmp
cli
or
mov
lahf
xorl
jns
mov
or
xor
cmovle
pop
dec
jne
push
dec
add
cld
dec
jae
mov
orl
push
mov
mov
jmp
outsb
pop
sbb
repz
dec
insw
pop
pop
sub
stc
dec
lds
scas
adcl
inc
in
mov
outsb
jge
cs
cmp
roll
outsb
sbb
mov
xchg
add
mov
ret
imul
mov
jmp
je
sub
adc
jo
sub
daa
and
pop
xchg
cmp
sbbl
mull
jmp
and
push
sbb
mov
sub
sub
push
mov
jge
push
cmpl
repnz
push
push
lea
repz
push
cmpb
dec
mov
mov
mov
push
pop
stos
xor
cmp
js
xor
mov
addr16
sbb
and
andl
add
or
lods
inc
mov
xchg
inc
es
cltd
jl
mov
mov
jle
xor
iret
dec
push
pop
sub
arpl
sarb
rcll
sbb
cmp
inc
push
push
add
xor
inc
xorl
sahf
pop
dec
test
clc
arpl
sub
mov
pop
jl
mov
aaa
mov
xor
xor
dec
sti
ret
mov
fists
jb
pop
ret
cmp
js
add
mov
in
sbb
push
push
xchg
es
jb
test
lds
sbb
xor
mov
loopne
repnz
test
mov
dec
testb
outsl
xor
mov
xor
ret
sub
cmc
stos
lock
inc
cmp
jb
jge
add
jo
jns
stos
cmp
push
repnz
fbld
push
sahf
inc
push
mov
in
test
add
sub
sub
mov
xor
push
call
daa
pop
in
cmp
rcll
idivb
es
in
xchg
aam
mov
iret
lea
mov
ljmp
fcoms
add
xorl
sub
dec
fcoms
mov
pop
adc
out
fsubrs
out
leave
push
inc
out
mov
out
pop
jl
filds
fldl
push
push
outsl
push
lds
mov
add
jmp
out
out
mov
rcrb
imul
sbb
adc
or
xlat
out
pop
pusha
jecxz
cli
out
orb
add
mov
xchg
mov
push
cmp
add
mov
loope
lahf
stc
out
sub
out
fistl
sub
inc
xor
add
sbbb
enter
out
int
sub
test
sahf
les
xor
mov
stc
sbb
push
testl
test
sar
mov
out
subl
sbb
push
mov
in
or
push
rolb
insb
call
sub
insl
mov
cmp
adcl
ret
divb
cmp
fisubrl
movsb
rcrl
sub
xor
test
push
push
dec
pushf
fcmovnu
mov
adc
jne
mov
mov
jns
movsl
pop
add
cmp
add
cmp
cs
xchg
sub
add
jne
mov
stos
ret
mov
push
sbb
xchg
rclb
js
pop
add
outsb
jns
mov
fcoms
mov
jecxz
repz
xor
adc
cltd
cmpsl
mov
xor
dec
insb
stc
mov
pop
enter
lods
aaa
adc
jbe
cld
inc
aaa
jne
lods
jne
push
sub
movsl
les
or
inc
pop
add
lods
arpl
mov
in
mov
mov
jae
js
maskmovq
idivl
stos
sbb
lcall
fiaddl
sbbl
into
fs
and
add
in
adc
push
loope
test
popa
xor
fdivrs
aaa
cmp
fwait
insl
ds
sbb
ficompl
xchg
or
in
mov
ret
xorl
sub
adc
xchg
sbb
popf
jnp
jl
inc
sub
sub
and
roll
addr16
push
xlat
mov
or
xchg
inc
in
stc
stos
test
mov
je
subl
cmpsb
mov
popf
int3
test
mov
jmp
pop
sbb
xlat
pushf
imul
dec
outsl
iret
int3
mov
fwait
cmp
out
adc
inc
push
out
in
jg
ret
hlt
push
cmp
ds
and
sub
and
jle
xchg
adc
push
loope
mov
dec
sub
cmp
add
mov
int
aam
orl
xchg
sub
mov
lcall
cmpl
cmp
mov
mov
sub
cmp
pusha
and
shrl
orl
or
inc
cmp
pop
xchg
rol
pop
mov
dec
sbb
push
push
xlat
xor
pop
sbb
loopne
mov
inc
stos
push
mov
mov
fwait
mov
push
sbb
bound
cli
lods
fistpl
xchg
mov
adc
imul
inc
jg
sbb
mov
dec
mov
push
fldl
insl
xor
push
mov
fimuls
lods
cltd
sbb
clc
lcall
test
or
fsts
jecxz
arpl
shlb
adc
mov
cmpsl
adcl
call
mov
jp
and
push
xor
adc
imul
sarb
and
and
sbb
test
dec
jle
add
bnd
xchg
popa
dec
jnp
sbb
movsb
dec
fstpl
sub
in
mov
jecxz
sub
andl
xor
aad
push
sbb
push
xor
pusha
mov
inc
aas
cmp
cltd
jno
test
mov
sbb
mov
inc
rep
sbbb
xor
adcb
jecxz
cmp
add
std
fcompl
and
fstpt
mov
cmpsb
rcrl
pushf
sub
sub
push
inc
or
cmpb
and
and
nop
mov
jbe
arpl
rorb
repz
pop
fwait
add
out
insb
jb
das
or
bound
push
push
in
push
cmp
dec
and
push
jge
add
test
daa
pop
jl
push
and
add
scas
out
in
test
jp
xchg
xchg
mov
enter
or
das
sub
sbb
jne
inc
sub
mov
dec
movhps
cmpl
btc
pop
sbb
arpl
sbb
mov
and
add
rcl
mov
cmp
cs
push
sbb
mov
cmpsb
cmp
fdivs
popf
push
dec
and
stc
popa
xchg
pop
test
pop
sbb
xchg
pop
inc
orl
lock
mov
xor
add
cli
repz
dec
or
sbb
mov
in
ss
ja
in
int3
inc
das
shrb
test
mov
mov
add
scas
sahf
stos
ret
and
push
stos
cmp
test
sub
out
mov
addb
lcall
in
pop
cmpb
js
fldl
iret
out
cmp
sbb
test
jg
movsb
sbb
pop
push
jp
shrb
xchg
sbb
jnp
jg
fiaddl
es
out
lods
in
cmp
mov
pushf
test
or
sub
insb
in
jg
mov
adc
pop
add
mov
out
jno
mov
xchg
mov
xor
iret
ud0
movsb
push
cmp
adc
adc
add
inc
mov
push
loope
jae
daa
dec
pop
insl
mov
aaa
imul
add
jle
mov
xchg
xor
inc
cmp
or
outsl
xor
xchg
cmp
aam
cmp
pop
movsb
fiadds
and
add
lcall
pop
pusha
test
loopne
decl
jg
nop
std
add
cmp
hlt
and
dec
sbb
test
repz
sti
repnz
pop
orl
dec
ss
mov
mov
push
and
shl
loop
add
xchg
xchg
mov
cmp
nop
pop
daa
pop
shlb
mov
cmpsl
icebp
push
xor
add
jmp
jbe
sub
popf
xchg
xor
sub
mov
ljmp
out
xchg
sbb
shll
cltd
adc
negl
sahf
inc
rcll
add
mov
in
aaa
jge
sbb
in
pop
fstpt
cmp
jnp
mov
pop
sbb
shr
push
mov
jmp
cltd
fisttpll
xor
add
fwait
pusha
leave
adc
mov
and
pop
dec
aad
cmpb
or
rcll
sbb
gs
jne
ds
movsl
mov
pushf
jp
xor
inc
push
mov
sbb
xor
jb
push
push
pop
out
testb
cs
xor
shr
sbbb
and
lods
test
add
std
in
jp
mov
inc
cmp
mov
adc
mov
inc
pop
fbstp
stos
add
or
push
adc
jle
push
pop
xlat
in
test
or
and
xchg
pop
in
adc
fstp
xchg
push
push
incb
dec
mov
jle
andl
sbb
bound
int3
mov
and
daa
cmc
sti
addl
push
or
imul
jge
shl
hlt
xchg
mov
rolb
inc
add
xchg
mov
lods
mov
pop
ret
bound
mov
sbb
xchg
daa
fwait
pop
inc
mov
je
outsl
xchg
sbb
in
div
mov
inc
lea
aad
cmc
subl
pcmpgtb
jbe
lds
addl
stos
push
outsb
push
repz
mov
loopne
lea
movl
mov
shlb
out
cmc
mov
sub
lods
add
mov
add
adc
dec
ret
cli
xor
ss
data16
xor
add
ljmp
addl
imul
and
cmpl
and
decl
cmpsl
orl
cmp
push
and
test
popa
sbb
jge
inc
sbb
add
or
jae
pop
cs
mov
mov
dec
jl
cmpl
dec
sbb
push
push
mov
jae
into
add
cmp
in
insb
dec
decl
inc
add
divl
insl
inc
add
cmp
cli
add
mov
sbb
jno
clc
dec
inc
sbb
pop
jmp
jle
aaa
jbe
cld
aad
and
stc
add
sahf
xorb
pop
jp
xchg
pop
push
scas
inc
cmp
cmp
mov
push
sub
sbbb
pusha
sbb
jno
adc
mov
leave
push
adc
filds
add
pop
mov
dec
test
jecxz
xchg
lods
popf
push
add
push
shll
dec
add
adc
cmp
sbb
inc
mov
push
adc
popa
test
test
or
subl
sbb
and
xchg
cli
cwtl
mov
cmp
clc
loopne
test
add
dec
sub
pop
test
jae
sub
imul
push
cs
add
pop
mov
nop
mov
mov
dec
inc
sbb
insb
dec
jns
xor
fs
sti
mov
int3
mov
and
push
or
imul
test
xchg
lds
fistps
sti
xor
loop
inc
fsubrl
and
xchg
pop
ds
in
mov
inc
out
inc
jmp
push
jp
shlb
pop
pop
add
and
pop
nop
psllw
or
mov
jo
in
adc
adc
inc
jbe
mov
addr16
fidivs
pop
mov
sbb
outsb
mov
out
lea
pop
subl
jne
scas
or
push
cmpsl
and
push
sbb
ret
mov
aad
inc
ret
add
mov
pop
pop
repnz
mov
ljmp
enter
ret
xchg
fwait
shr
mov
add
test
pop
sub
imul
push
pop
out
pop
pop
mov
xchg
fidivrs
dec
jmp
icebp
mov
inc
add
inc
fwait
sub
mov
dec
jp
in
insb
xchg
sahf
or
pop
clc
push
xor
ljmp
sbb
sub
adc
cltd
add
stos
dec
in
inc
sbb
lods
and
iret
iret
hlt
or
fwait
adc
adc
mov
aad
sub
and
pop
mov
cmc
daa
xchg
dec
pop
and
adc
lret
xor
inc
mov
les
push
inc
xchg
mov
add
movsb
push
arpl
jnp
subl
fiaddl
cmp
in
mov
push
lea
jbe
loop
adcl
cltd
xor
mov
push
adc
push
cmpsb
mov
icebp
jecxz
mov
push
divb
sbb
scas
add
or
popf
jne
addr16
sub
and
sbb
pop
adc
mov
repnz
and
daa
lahf
add
sbb
cltd
jl
aas
cli
aas
dec
sbb
lods
add
jecxz
cmpsl
sub
pushaw
sarl
push
xchg
and
jne
mov
mov
out
out
jae
sbb
push
xor
or
xchg
jp
nop
mov
orl
arpl
dec
sub
dec
add
jo
push
jge
pop
jns
push
fldl2t
cwtl
or
add
push
dec
js
ss
ljmp
ret
add
aam
sbb
addr16
mov
mov
repnz
sub
sbb
daa
inc
or
imul
jp
outsl
adc
lods
std
xchg
cwtl
lods
and
ret
mov
in
dec
ja
sub
js
repnz
in
test
push
xor
add
mov
xlat
xchg
fs
inc
ror
add
add
mov
lds
push
fucomi
int
cmp
int3
jecxz
pop
lods
mov
add
rolb
push
aad
adc
cmpl
clc
pop
mov
scas
sub
mov
or
stos
cmp
movsb
int3
mov
jle
jmp
xchg
xchg
cmp
jno
sti
ljmp
xor
mov
xor
in
aam
push
xor
jbe
xchg
cli
pop
mov
mov
daa
cmp
cmc
sti
jns
sub
add
and
mov
daa
xor
mov
lcall
jb
in
mov
roll
aam
je
mov
iret
dec
movsb
jns
xchg
fwait
sub
sbbl
xor
lcall
roll
popa
add
mov
xchg
dec
and
and
sbb
imul
sbb
imul
scas
nop
add
fists
jnp
mov
xor
stos
mov
and
jg
sbb
popa
lcall
lds
sbb
out
rorl
push
or
mov
dec
and
loopne
repz
std
cwtl
sar
pusha
das
mov
rcll
fistpl
sub
mov
push
movsb
out
ret
std
adc
jne
sub
or
mov
mov
add
xor
adc
mov
aas
mov
es
sbb
dec
mov
cltd
or
mov
sbb
mov
sub
lock
popf
xchg
mov
dec
pop
sti
mov
cli
orl
daa
mov
mov
mov
dec
lret
lea
add
pop
cmp
mov
sub
sbb
dec
or
cmp
test
add
sbb
sbb
bound
mov
lods
cmpsl
das
bound
sbb
push
call
mov
sbb
scas
mov
dec
fiadds
xchg
pop
fldenv
inc
fcmovnu
and
mov
cmp
mov
mov
and
inc
add
into
lret
inc
fdecstp
idivl
movsl
enter
sbb
push
lret
gs
dec
inc
lock
fcompl
pop
idivl
add
mov
shlb
dec
or
leave
mov
lods
andb
sbb
imul
xor
mov
push
and
add
mov
mov
cli
imul
aad
out
sbb
xor
or
mov
mov
mov
ret
insb
ret
cli
stc
push
mov
test
jae
adc
add
push
lods
mov
aad
and
loop
xchg
ljmp
in
ja,pt
pop
add
mov
mov
sbb
cwtl
push
inc
filds
pop
mov
popa
shrl
jge
jp
sub
fidivl
or
sub
lret
jns
mov
jge
in
sbb
sbb
iret
test
stos
fisttps
xchg
addl
and
xchg
push
mov
notb
scas
jmp
fimuls
mov
xor
aaa
icebp
inc
rcrb
push
shrl
orl
clc
test
mov
dec
mov
sub
push
aas
aaa
das
hlt
push
stos
lret
fcoml
push
jae
aad
push
cltd
dec
pushf
aaa
xor
dec
aas
test
and
xchg
pop
fldcw
push
sbb
or
ficoml
pop
jb
jae
ja
add
ret
mov
push
cmpl
mov
int
and
mov
cli
aam
mov
dec
dec
push
out
sub
pop
fldenv
repz
jl
mov
addr16
daa
xchg
pop
int3
adc
xor
dec
mov
in
mov
pop
ja
int3
or
jmp
lods
lret
add
add
inc
xchg
push
jae
and
lcall
pop
dec
mov
push
adc
mov
roll
dec
test
mov
inc
and
add
std
clc
popa
xchg
mov
clc
nop
dec
xor
jnp
mov
mov
ja
jle
inc
lods
subl
mov
sub
clc
add
or
jg
jbe
mov
ret
pop
divb
sbb
xchg
jmp
add
or
cmp
fistpll
mov
inc
sub
subb
mov
inc
add
hlt
out
sub
cmpl
sbb
sbb
mov
mov
fs
sti
mov
cmp
das
pop
jmp
adc
imul
pop
outsl
es
popa
inc
mov
sbb
repnz
push
push
lret
jbe
popf
push
ret
mov
xor
adc
cmp
mov
cld
sub
out
inc
or
test
mov
cmpl
xor
nop
or
stos
in
jnp
jmp
xchg
mov
fwait
push
cmp
test
fdivrl
cmpsb
mov
test
push
test
adc
add
sahf
mov
cld
enter
push
xchg
ss
sub
sahf
das
jg
adc
mov
mov
sbb
lret
movsl
sbb
pop
cmp
sbb
jnp
mov
call
pusha
add
repnz
xor
cmp
lea
xor
push
push
pop
lds
mov
mov
out
cmp
dec
sub
sub
scas
mov
inc
xchg
xchg
and
sbb
jecxz
mov
xchg
xchg
movsbl
out
sbbl
jle
mov
sub
stc
test
jns
mov
pop
stos
nop
cmp
das
rcll
bound
mov
popa
sbb
test
add
les
addl
or
int
pop
adc
lods
aam
mov
xor
daa
cmpsl
xchg
xchg
dec
cmp
add
fadds
inc
mov
cs
arpl
icebp
stos
inc
mov
imul
aad
pop
pop
xchg
jns
mov
rcpps
or
ja
cltd
mov
sarb
push
add
xchg
ljmp
sahf
mov
retw
jo
ret
cmp
dec
sbb
fs
cmp
add
cmp
or
cmp
outsl
and
fiaddl
cmpl
arpl
mov
or
push
jns
mov
cmc
out
std
and
gs
roll
push
mov
add
in
add
insl
cltd
mov
sbb
sarl
add
add
mov
xchg
sub
fstps
lods
jle
jae
push
jo
mov
xor
adc
fsubl
jno
test
cmpl
aaa
enter
mov
loope
lret
cmpsb
inc
xchg
sub
int
rcr
lock
divl
adc
lea
and
cmp
mov
xor
and
pop
mov
add
andl
xor
sarb
mov
mov
fidivrl
test
pop
cmp
fisttpll
adc
inc
jecxz
sbb
int3
addb
mov
inc
out
or
xchg
adc
cmc
scas
xor
sbb
xchg
popa
movb
xchg
push
lcall
sbb
xor
inc
adc
xchg
mov
jno
sbb
mov
pop
scas
rolb
int3
movsb
sbb
test
adc
cltd
xor
rclb
push
push
pop
jmp
sbb
out
aam
mov
xorl
adc
test
cmp
je
mov
xor
cmp
push
out
insl
sarl
xchg
pop
dec
adc
adc
or
add
mov
inc
push
leave
loopne
inc
and
imul
cmp
mov
popa
and
and
xor
fs
mov
xchg
and
mov
lods
sub
pusha
test
ja
scas
ljmp
jl
xlat
sbbl
das
loope
push
xchg
je
pop
and
and
dec
cmp
cld
cs
or
add
dec
push
push
stos
pop
cmp
insb
std
or
mov
inc
outsl
aaa
mov
cs
xchg
fidivrl
or
xor
cwtl
add
jecxz
pusha
cmp
sub
mov
mov
shll
pop
lret
in
add
nop
andl
add
aam
mov
jbe
push
enter
jg
adc
dec
test
adc
adcl
cltd
add
jmp
popa
mov
cmpl
mov
mov
fdivl
lret
jne
arpl
push
inc
jg
add
cmp
xchg
mov
mov
add
jnp
fdivrl
sbb
cmp
in
into
mov
cmpsl
insb
sbb
sbb
repnz
add
into
fdivrl
ror
out
xchg
pop
mov
mov
mov
lahf
mov
add
ljmp
mov
sbb
enter
or
in
mov
and
outsb
adc
inc
dec
test
int
jle
mov
pushl
addr16
adc
js
mov
dec
inc
cmp
and
adcb
mov
xchg
mov
jg
pop
push
or
cli
add
aaa
push
cmp
sub
sub
popf
mov
popa
rclb
mov
int
mov
sbb
xorl
or
xorb
add
cmpsb
leave
sub
js
mov
imul
lahf
test
add
sub
inc
lods
sbbl
cmp
test
pop
xchg
lret
push
adcl
jl
cli
out
dec
aas
imul
test
or
movsl
mov
dec
fsubrs
dec
rol
cmp
dec
pop
push
clc
push
repz
xlat
mov
and
xor
stos
xchg
jl
cli
or
or
xchg
punpckldq
dec
dec
les
test
testl
inc
and
xor
stc
jnp
mov
add
pop
sbb
sahf
insb
sti
cli
fs
cmp
daa
sub
add
sar
call
imul
cld
mov
jmp
pop
cmpsl
and
jno
dec
imul
mov
push
cmpsb
in
clc
inc
push
jno
rorl
mov
inc
int3
mov
inc
mov
dec
cwtl
add
mov
leave
dec
push
sbb
jge
repz
push
jmp
into
push
sahf
or
mov
bts
add
cmpsl
divl
mov
inc
xchg
push
jnp
jmp
mov
sub
jge
bound
int
push
dec
or
and
sub
cld
es
lcall
aaa
bound
add
xchg
fmull
push
jae
dec
and
lods
sub
cmp
ss
out
andb
push
jg
jne
flds
clc
sbb
or
push
mov
stos
push
sbb
push
in
call
test
data16
into
mov
cwtl
popl
mov
cmp
jp
addl
movsl
rorb
stos
mov
push
daa
mov
cli
xchg
in
idivb
adc
popf
pusha
xchg
mov
lret
jne
pusha
push
add
mov
mov
pop
adc
add
sbb
jnp
mov
inc
and
sbb
int
mov
mov
pop
mov
xor
pop
jbe
sti
xlat
ss
push
insb
mov
test
xor
adc
loope
psllw
pop
cmp
add
cmc
mov
sbb
lret
jle
adc
mov
jne
out
clc
loopne
dec
roll
xchg
sub
in
push
add
imul
fwait
mov
sbb
lcall
icebp
sbb
out
loop
mov
pop
mov
lret
popf
xorl
xchg
test
push
add
sub
orl
lcall
jb
fildll
sbb
imul
sub
cltd
mov
fidivl
mov
jbe
inc
pop
sbb
mov
add
add
adcl
push
add
jge
cmc
mov
push
cltd
or
lods
pop
jb
out
sbb
and
data16
cmpsl
mov
dec
mov
xchg
and
mov
xchg
dec
je
sub
dec
inc
jns
cltd
mov
mov
or
pushf
mov
int3
push
aaa
xchg
idiv
dec
daa
add
hlt
in
and
call
xchg
mov
push
subl
mov
shrb
push
ret
push
call
cmpsl
aad
int
cmpsb
mov
adc
outsb
sbb
test
lahf
pop
repz
mov
sub
mov
lods
cmpsl
xchg
int3
ret
roll
ljmp
push
enter
mov
imul
add
fcmovu
push
add
inc
push
dec
xor
mov
les
jg
or
mov
mov
sbb
int3
mov
dec
mov
sub
jmp
mov
sub
mov
movsl
mov
pop
and
test
icebp
loopne
mov
push
lahf
dec
hlt
push
push
mov
sbb
jecxz
pop
mov
cmc
inc
loop
sbb
aam
stos
adc
in
cltd
repnz
bound
pop
cmp
popf
pop
enter
out
es
addr16
add
int
movsb
jnp
mov
into
xor
popf
add
cmp
shrl
cwtl
andl
loope
out
xchg
jecxz
jb
push
xchg
mov
and
sbb
cmpsb
add
into
jmp
lock
adc
or
aad
xchg
aas
or
cmp
mov
jl
sahf
loopne
movsb
insb
jp
mov
fistpll
and
mov
mov
stos
stos
xchg
sbb
leave
mov
cmp
push
add
out
leave
scas
xor
popl
mov
sub
xorps
adc
mov
cmpsb
insb
cld
jp
dec
cmpl
lcall
dec
ja
pop
pushf
sbb
and
sarl
mov
dec
cmp
lods
addr16
popf
sti
in
or
pop
fcoms
frndint
clc
mov
mov
mov
inc
xrelease
cmpl
bound
dec
push
ficompl
out
dec
icebp
sbb
sub
sti
add
jl
shl
push
cmp
and
jecxz
sub
pop
iret
mov
add
inc
pop
lret
nop
jns
adc
movsl
ficomps
mov
cmp
movl
mov
shll
lahf
movl
jmp
scas
add
fisttps
out
xchg
push
aaa
add
fidivrl
sbb
push
dec
cltd
jne
mov
lock
ja
popf
addl
push
lds
mov
fistps
push
dec
sbb
js
pop
jne
mov
add
leave
pop
mov
arpl
jne
mov
nop
mov
fildl
scas
pop
mov
setl
arpl
int
pop
inc
pop
add
lret
jmp
sbb
pop
mov
imul
mov
enter
sbb
or
fmulp
and
test
clc
push
sbb
mov
aad
fildl
sub
sbb
rcll
mov
mov
cmpsb
add
sbb
and
cmp
push
sbb
jmp
cs
inc
pop
sbb
or
outsl
outsl
adc
dec
je
mov
stc
cltd
sbb
mov
sbb
add
xchg
lahf
xchg
mov
jno
pusha
pop
outsb
push
cmp
add
xchg
sub
inc
std
roll
lret
insb
cmpsb
or
nop
out
add
std
and
sbb
cmp
ret
in
xchg
in
inc
push
add
jns
and
xor
decb
in
loopne
mov
fadd
dec
mov
or
addr16
mov
cwtl
dec
ret
sub
subl
shlb
int
test
push
fld
push
mov
rcrl
cmp
arpl
fptan
add
es
in
mov
inc
push
or
pop
mov
add
sbbl
rclb
sbb
mov
les
sbb
or
movsb
add
call
cmp
jl
mov
sti
inc
mov
sti
xor
sbb
push
stos
cmc
xor
clc
pop
loope
mov
adc
dec
lahf
mov
xor
aam
ret
scas
jg
sbb
mov
fdivrs
inc
dec
xor
insl
cli
adc
mov
aas
subl
jmp
mov
mov
shr
mov
mov
lcall
inc
push
push
aas
and
pop
test
push
outsl
mov
add
pop
add
add
jae
shrb
jp
aaa
cmc
mov
jb
mov
lahf
enter
jno
xorb
lret
push
jge
add
cmp
mov
push
rcrl
addb
or
xor
adc
stc
addl
push
das
ljmp
lods
and
sbb
pop
push
mov
cmpsb
and
shl
push
sbb
sbbl
imul
movl
mov
cwtl
push
fwait
adc
repz
mov
inc
or
mov
aaa
addr16
out
andl
paddb
mov
lea
insl
xor
jno
mulb
lret
mov
push
fs
daa
adc
imul
dec
xor
movsb
dec
pushf
inc
sbb
and
lcall
in
cmp
jmp
and
xlat
ret
add
jb
mov
mov
cmp
sarb
inc
hlt
adc
cli
lds
ds
push
testb
repnz
bound
pop
int
cmpl
scas
cltd
mov
mov
jno
js
fldt
iret
add
push
lret
jo
push
dec
flds
aas
or
jmp
or
test
enter
ss
fcomi
and
enter
xchg
daa
bound
mov
sti
pop
aas
rclb
adc
das
mov
bound
inc
xor
pop
pop
mov
inc
lods
jle
sbb
inc
pop
jae
and
rolb
push
fs
dec
push
rorl
int3
cmp
cmp
adc
fnstcw
dec
pop
dec
dec
and
mov
mov
push
sbb
xchg
lret
ljmp
mov
sbb
adc
cmpsb
xlat
and
cwtl
sbb
add
add
add
push
scas
mov
add
mov
add
shl
mov
or
test
cli
mov
sbb
ja
sbb
aam
repnz
xchg
mov
jbe
popa
loop
mov
adc
pop
aad
jle
cmp
mov
jb
sahf
add
add
stos
inc
in
mov
stos
lret
ret
bound
pop
jle
mov
push
xchg
js
movb
movsl
and
xchg
fwait
and
dec
add
jge
jb
inc
arpl
fldt
add
out
cwtl
sbb
inc
stc
and
pop
mov
inc
xor
cs
add
andb
cmp
push
and
sub
repnz
and
sub
out
cmp
ficompl
sbb
fcomp
jecxz
xlat
add
test
xchg
or
rcll
stos
in
sub
shrl
cmp
or
jbe
push
mov
cmp
pop
subl
sub
test
cli
and
dec
sbb
mov
jecxz
jnp
add
lods
add
lret
dec
dec
pop
pusha
repnz
test
jg
add
cs
lea
dec
cmp
cmp
cmpsb
icebp
or
cmp
adc
cmc
sahf
stos
jno
cmp
cmpsl
pushf
lret
cmc
mov
jg
subl
sbb
mov
leave
stos
add
int3
aad
pop
cmp
xchg
cmp
dec
cli
or
push
std
sub
jmp
jns
iret
out
bound
arpl
pop
cmp
fidivrl
xchg
stos
mov
jo
push
std
shrb
loope
fnstsw
xlat
sbb
jae
fwait
or
cmp
insb
decb
lcall
inc
add
rclb
sbb
xchg
xchg
or
cmp
pop
fwait
sbb
jmp
sub
ret
xor
fisubl
repz
incl
inc
scas
stc
push
mov
mov
xor
add
mov
imull
ret
lods
lods
push
stc
xchg
test
shlb
inc
ja
sub
sub
jne
push
loopne
mov
andb
lret
sbb
imul
test
adc
les
mov
call
cmpsl
and
sub
add
pop
mov
fs
xor
cmpsb
xorl
push
mov
add
push
sbb
mov
push
pushf
add
sub
aas
and
push
xchg
xchg
mov
push
test
fstl
lods
add
loopne
lcall
and
adc
into
push
add
std
xlat
mov
push
testl
sar
xor
jle
push
fsub
shll
ss
jp
scas
jno
adc
std
sbb
outsb
mov
jbe
mov
movsl
mov
ljmp
fldt
dec
mov
sbb
outsb
pushf
xor
or
pop
pop
jecxz
adc
add
lock
xchg
sahf
or
or
fwait
jecxz
sbb
jecxz
mov
add
ss
jno
clc
cmpsl
imul
jmp
cmp
jecxz
push
push
out
adc
or
mov
xchg
aam
scas
dec
add
fidivl
inc
daa
test
xchg
mov
xor
lret
xor
add
lock
jge
jo
inc
leave
sbb
scas
mov
and
adc
lock
and
lods
stos
or
sbb
jl
adc
orb
pop
lret
enter
leave
add
stos
imul
shll
fisubrs
in
mov
shl
sub
push
lods
test
adc
shlb
int3
add
xorl
mov
xor
aam
dec
pop
pushf
xchg
arpl
dec
dec
mov
es
jecxz
or
cmp
add
mov
sub
push
xor
xchg
ret
push
pop
mov
es
push
sbb
ret
push
outsl
or
les
cld
adc
test
add
jecxz
add
or
in
dec
xor
ljmp
xchg
mov
rcrl
pop
addb
add
xor
sub
mov
subl
addr16
xchg
jb
add
in
add
pop
add
push
mov
cmc
adc
mov
add
scas
xor
inc
adc
out
in
push
imul
push
jne
mov
insl
and
mov
mov
jnp
loop
cmpl
push
lds
gs
cld
subl
mov
mov
mov
pop
leave
pop
cmp
sbb
dec
js
data16
jl,pt
popf
jno
iret
adc
add
addr16
loope
inc
inc
adc
je
decb
fxch
or
int3
push
sbb
xchg
sbb
push
xchg
aas
mov
mov
mov
dec
adc
and
test
pop
mov
int
fisubrl
or
shr
sub
js
or
mov
aas
jo
jmp
and
bound
adc
sti
or
inc
sbb
cmpsb
in
arpl
scas
sub
sbb
inc
mov
mov
stos
xchg
push
mov
addr16
stos
inc
inc
mov
mov
or
mov
adc
mov
imul
mov
push
outsl
cmpsb
add
sbb
iret
mov
in
sub
xor
adc
popf
or
mov
xlat
jbe
lock
jne
mov
inc
and
pop
outsl
or
sti
jno
outsl
and
xchg
test
sti
push
cmp
or
push
lds
rcll
int3
ret
lods
or
rclb
or
popa
push
fdivs
mov
and
in
jbe
repnz
xor
nop
imul
jp
fiaddl
cmpsb
faddl
shlb
loope
es
dec
push
push
sti
jne
mov
cltd
sub
cmp
xchg
addr16
sbb
mov
pop
jge
dec
stc
jl
cli
mov
test
mov
fnstenv
mov
mov
andl
popa
dec
shrl
add
pop
sub
mov
jo
inc
lds
mov
repnz
in
iret
jo
and
sub
jnp
scas
imul
iret
push
cmp
pushf
aad
outsb
dec
cmpsb
push
divb
ljmp
repz
outsb
mov
xchg
xchg
daa
mov
scas
dec
or
lret
gs
aas
dec
xchg
sbb
xchg
mov
mov
dec
daa
scas
jp
mov
push
push
idiv
xchg
lret
in
xchg
stos
and
xor
inc
clc
pop
xor
xchg
aaa
out
enter
loop
or
sub
push
inc
clc
insb
popa
ret
data16
out
cmp
push
cmp
ss
mov
cwtl
loopne
jg
out
sub
rclb
push
and
xor
add
and
movsl
js
lahf
and
inc
nop
mov
push
out
mov
aad
dec
cmp
mov
sbb
xchg
sub
mov
sub
int3
