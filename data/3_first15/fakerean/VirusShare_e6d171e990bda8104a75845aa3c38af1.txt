and
test
jne
mov
and
xor
or
pop
jne
xor
pop
ret
mov
jmp
test
je
cmp
je
cmp
jne
mov
jmp
mov
test
je
mov
test
jne
mov
call
test
je
mov
jmp
mov
jmp
mov
jmp
mov
test
je
mov
push
call
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
cmpl
push
mov
je
pushl
call
pop
mov
cmp
jne
mov
push
pushl
push
call
add
test
jne
inc
pop
ret
xor
jmp
push
mov
push
push
push
mov
push
push
xor
push
mov
lea
mov
mov
call
mov
cmp
je
cmp
jne
mov
cmpb
jne
cmpb
jne
mov
mov
call
mov
push
add
call
mov
and
push
mov
lea
call
mov
pushl
mov
call
mov
push
mov
call
cmp
pushl
je
mov
mov
call
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
movl
mov
add
mov
cmp
jne
mov
movb
add
decl
jne
pop
pop
leave
ret
cmp
je
test
je
cmp
je
mov
call
mov
test
mov
mov
jne
andl
mov
mov
mov
lea
push
lea
push
push
mov
call
mov
mov
mov
flds
add
mov
fstps
mov
movb
jmp
push
mov
sub
push
push
xor
push
inc
mov
push
call
test
je
cmpl
jne
flds
push
fdivl
push
fstps
flds
fstpl
fldl
fstpl
call
fstps
flds
pop
fsubrl
pop
push
mov
mov
fstps
call
test
je
push
call
test
je
add
add
test
cmp
flds
fstps
fldz
fcoms
fnstsw
test
je
fstp
fld1
fcoms
fnstsw
test
jnp
fstp
push
mov
mov
call
test
je
push
call
test
je
cmpl
jne
flds
fstps
fldz
fcoms
fnstsw
test
je
fstp
fld1
fcoms
fnstsw
test
jnp
fstp
movsbw
mov
mov
push
call
test
je
flds
sub
fstps
flds
fstps
flds
fstps
call
inc
add
mov
add
mov
pop
pop
pop
leave
ret
push
mov
push
cmpb
je
push
push
lea
push
call
push
mov
xor
pop
mov
mov
test
je
mov
cmp
jl
mov
cmpl
jbe
push
xor
pop
push
add
call
test
mov
je
pushl
mov
pushl
push
call
lea
call
mov
inc
add
cmp
jb
pop
pop
leave
ret
pushl
mov
pushl
mov
push
call
inc
add
jmp
push
push
mov
mov
mov
push
call
test
je
xor
test
push
mov
mov
jne
mov
push
mov
call
test
je
mov
and
xor
or
jne
mov
and
xor
or
pop
jne
pop
pop
ret
mov
test
je
fucomip
inc
add
test
je
xor
inc
jmp
mov
test
je
mov
push
call
test
je
jmp
mov
call
test
jne
mov
mov
mov
add
push
push
mov
call
jmp
test
je
mov
mov
mov
mov
and
xor
or
jne
jmp
cmpb
je
mov
mov
test
jne
push
lea
call
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
add
frstor
add
rorl
bnd
call
jmp
push
mov
push
push
push
mov
push
mov
sub
push
pop
mov
jne
lea
push
call
cmp
jle
mov
cmp
jbe
mov
jmp
mov
lea
push
mov
push
push
push
call
mov
lea
push
pushl
push
call
test
js
mov
mov
sub
add
add
test
jne
mov
mov
xor
pop
pop
pop
leave
ret
mov
mov
mov
jmp
push
lea
sub
mov
xor
mov
mov
mov
es
jnp
add
jl
push
mov
je
cmpb
jne
xor
cmp
je
push
mov
lea
mov
push
mov
push
mov
call
test
je
mov
mov
movw
mov
call
push
pushl
xor
pushl
push
call
mov
push
push
mov
push
mov
call
test
je
mov
mov
movw
lea
push
lea
mov
mov
mov
movl
movl
mov
mov
call
mov
int3
out
add
push
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
pushl
mov
push
call
test
jne
cmp
movl
je
mov
call
cmp
je
mov
mov
mov
call
movb
mov
mov
lea
push
push
push
push
push
call
test
js
cmpl
ja
push
push
push
mov
call
add
mov
mov
movb
call
lea
call
testb
jne
testb
jne
mov
lea
call
mov
mov
pop
pop
xor
pop
call
add
xchg
iret
inc
add
jmp
mov
add
call
jmp
mov
and
or
jne
ret
mov
push
push
mov
test
push
ja
xor
pop
pop
pop
ret
xor
lea
mov
mov
call
test
jne
inc
add
cmp
jae
jmp
mov
cmp
jne
push
call
test
pop
jg
push
call
test
pop
jg
xor
ret
xor
inc
ret
push
mov
and
sub
push
push
push
mov
mov
test
je
cmpb
jne
mov
mov
push
lea
call
mov
pushl
movb
mov
push
call
lea
call
lea
mov
xor
cmp
jne
mov
push
pushl
lea
push
call
cmp
jg
mov
mov
test
jg
mov
push
call
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
je
testl
je
lea
cmp
jne
lea
call
pop
pop
xor
pop
mov
pop
ret
mov
call
add
jmp
mov
mov
mov
call
mov
lea
push
lea
call
incl
mov
cmp
jl
jmp
push
pop
mov
mov
mov
test
je
pushl
mov
push
call
add
dec
jne
jmp
mov
mov
jmp
int3
int3
int3
push
mov
test
je
mov
test
mov
push
mov
jne
test
jne
cmp
jne
mov
xor
xor
cmp
sete
test
jne
add
add
jmp
mov
mov
and
mov
or
pop
mov
mov
pop
ret
push
call
test
je
movl
orl
pop
ret
push
lea
call
pop
jmp
int3
int3
int3
int3
mov
push
push
mov
mov
mov
push
push
xor
test
movl
jle
lea
mov
sub
cltd
sub
mov
mov
sar
add
lea
mov
mov
lea
push
push
mov
push
push
call
add
test
js
mov
test
jl
jle
lea
mov
sub
test
jg
mov
mov
xor
pop
pop
pop
pop
ret
mov
jmp
mov
pop
mov
pop
pop
xor
pop
ret
push
mov
push
push
xor
cmp
je
cmp
je
mov
orl
mov
orl
push
mov
add
mov
cmp
je
add
cmp
jne
mov
cmp
movl
je
mov
push
lea
push
push
pushl
push
push
call
mov
test
jne
push
mov
test
je
mov
mov
lea
push
push
pushl
pushl
push
call
test
jne
mov
mov
cmp
je
cmpl
jne
mov
mov
imul
mov
cmp
jne
mov
cmp
je
cmp
jl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
jmp
mov
mov
imul
mov
cmp
jne
mov
cmp
jne
jmp
push
mov
and
sub
push
push
push
xor
mov
lea
mov
mov
mov
mov
mov
call
mov
call
test
je
mov
push
lea
mov
mov
call
mov
lea
push
call
test
pop
js
pushl
mov
call
mov
add
pop
lea
call
pop
mov
pop
pop
mov
pop
ret
mov
push
push
call
pop
pop
jmp
push
mov
push
mov
test
je
mov
lea
push
push
push
call
test
js
cmpl
je
xor
inc
leave
ret
xor
leave
ret
push
mov
movl
mov
test
je
mov
push
pushl
push
call
push
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
pop
pop
je
add
push
call
test
pop
je
pop
ret
push
call
pop
pop
ret
push
mov
mov
sub
test
jne
leave
ret
cmpl
je
mov
push
mov
push
mov
call
mov
mov
lea
mov
movzwl
push
push
push
push
call
mov
lea
push
push
call
mov
mov
mov
add
push
lea
push
push
call
mov
mov
lea
push
push
call
mov
mov
push
call
mov
sub
mov
mov
pop
leave
ret
mov
push
pushl
call
mov
cmp
je
mov
pop
ret
push
mov
xor
cmp
je
push
mov
cmp
je
push
mov
lea
push
movb
call
test
je
andl
push
call
shr
not
and
mov
xor
pop
pop
pop
ret
push
mov
push
cmpl
push
je
mov
mov
lea
push
pushl
push
call
test
js
cmpl
jne
add
cmpl
jne
xor
pop
leave
ret
push
push
push
push
push
mov
lea
movl
mov
test
mov
jne
test
jne
lea
mov
mov
lea
roll
add
call
xor
push
push
push
push
mov
call
mov
mov
cmp
je
testl
je
add
cmp
jne
lea
mov
pushl
mov
push
call
add
cmp
jne
push
xor
push
lea
sti
leave
inc
add
call
mov
cmp
je
testl
je
add
cmp
jne
lea
cmp
jne
lea
cmp
jne
add
cmp
jne
pop
pop
pop
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
push
call
pop
jmp
mov
push
push
mov
movl
movl
mov
push
call
mov
test
mov
jne
test
jne
mov
test
mov
jne
inc
add
add
pop
cmp
push
lea
call
mov
mov
xor
cmp
jne
mov
cmp
jne
mov
test
mov
pop
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
pop
pop
jmp
push
mov
and
push
push
push
push
mov
xor
cmp
jne
cmp
je
pushl
mov
lea
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
and
jne
jmp
mov
push
pushl
push
pushl
call
add
cmp
jg
mov
mov
lea
call
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
push
mov
mov
xor
call
push
lea
call
mov
test
jne
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
mov
push
mov
push
push
xor
push
push
push
push
push
push
push
push
lea
mov
mov
call
cmp
je
push
lea
push
push
pushl
mov
pushl
call
add
cmp
je
mov
push
push
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
push
push
mov
xor
cmp
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
push
add
push
push
call
lea
mov
call
mov
pop
pop
leave
ret
jmp
push
mov
push
push
mov
push
xor
cmp
jne
mov
cmp
je
push
pushl
mov
call
pop
lea
push
pushl
pushl
pushl
pushl
pushl
call
test
js
pushl
call
cmp
mov
jne
cmp
je
cmp
je
push
push
mov
call
cmp
pop
je
mov
mov
movl
mov
cmp
mov
je
mov
push
call
cmp
je
mov
mov
mov
push
pushl
push
call
mov
test
pop
jne
lea
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
mov
jmp
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
push
mov
lea
push
mov
movl
movl
mov
cld
rolb
call
pop
push
push
lea
call
cmpl
jne
lea
push
lea
mov
call
mov
neg
sbb
and
jne
testb
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
pushl
mov
pushl
mov
pushl
push
push
call
ret
mov
add
mov
add
mov
push
mov
push
mov
sub
sub
js
sub
sub
mov
mov
sub
pop
sub
pop
js
mov
ret
xor
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
andl
push
xor
mov
cmpl
push
jge
lea
mov
mov
mov
cmp
mov
movl
movl
movb
je
cmp
jne
testb
jne
lea
call
test
jne
pushl
lea
mov
call
lea
mov
call
test
mov
js
cmpl
mov
jne
testw
jne
lea
cmpl
jne
testw
jne
testl
jne
andl
cmpl
jne
push
mov
call
lea
mov
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
mov
call
mov
test
je
lea
push
mov
mov
call
mov
mov
push
push
call
lea
call
jmp
mov
add
call
jmp
push
mov
sub
mov
xor
mov
push
push
pushl
lea
xor
lea
mov
mov
mov
movl
movl
mov
mov
call
xor
testw
jne
push
lea
mov
call
lea
push
push
call
mov
test
jne
lea
mov
call
test
jne
testl
jne
lea
push
pushl
mov
xor
mov
mov
lea
push
mov
mov
push
call
test
jne
lea
movl
call
testb
jne
testb
jne
xor
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
sub
push
push
push
pushl
mov
xor
mov
lea
mov
call
cmp
je
mov
cmp
je
cmp
jne
push
call
cmp
pop
je
pushl
mov
pushl
mov
mov
pushl
mov
call
push
call
pop
lea
call
pop
pop
pop
leave
ret
xor
jmp
push
push
mov
mov
mov
test
je
mov
mov
call
test
je
mov
mov
test
je
cmpl
jne
push
call
test
pop
je
mov
movl
andl
mov
test
mov
je
mov
mov
mov
mov
push
call
xor
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
pop
ret
xor
pop
ret
push
mov
push
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
cmp
jne
push
lea
call
mov
lea
push
push
call
cmp
je
pushl
mov
call
pop
mov
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
push
mov
mov
xor
cmp
push
mov
je
mov
push
call
push
push
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
lea
call
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
lea
movsl
movsl
movsl
movsl
testb
je
mov
mov
mov
cmp
je
push
push
push
push
lea
push
pushl
push
call
add
lea
call
lea
call
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
mov
test
je
mov
push
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
mov
test
mov
push
mov
push
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
push
call
add
pop
xor
pop
pop
ret
push
mov
push
mov
mov
mov
call
test
jne
inc
add
mov
mov
mov
call
test
je
mov
mov
call
test
jne
inc
add
mov
mov
call
test
jne
inc
add
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
mov
mov
call
test
jne
push
pushl
mov
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
add
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
push
xor
cmp
push
mov
mov
jne
mov
push
lea
mov
mov
call
mov
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
push
mov
mov
mov
call
pop
pop
mov
lea
call
pop
mov
pop
pop
pop
ret
movzbl
jmp
push
mov
sub
push
mov
mov
push
mov
mov
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
andl
push
pushl
lea
push
call
lea
push
call
mov
mov
mov
push
push
call
test
je
mov
call
lea
movl
call
inc
add
rclb
push
call
mov
mov
mov
lea
push
push
call
mov
mov
call
pushl
mov
pushl
call
mov
mov
mov
push
call
mov
add
lea
mov
mov
call
pop
pop
xor
pop
leave
ret
push
mov
push
push
push
mov
andl
mov
test
je
mov
test
je
cmpb
je
mov
test
mov
je
mov
push
call
mov
test
je
mov
call
test
mov
je
mov
push
call
mov
test
je
push
call
pop
push
lea
call
lea
call
pop
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
push
mov
push
push
call
test
je
cmpl
jne
mov
test
je
andl
andl
mov
lea
push
mov
call
test
jne
cmpl
je
call
cmpl
movl
mov
jne
xor
inc
pop
pop
pop
leave
ret
push
mov
push
push
mov
test
je
push
mov
push
mov
push
jmp
mov
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
je
mov
test
je
test
je
push
push
call
test
pop
pop
je
andl
mov
push
mov
lea
call
cmpl
jne
andl
push
mov
lea
call
mov
test
je
pushl
mov
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
cmpl
je
push
lea
push
push
push
push
call
add
cmpl
je
push
mov
test
je
push
call
test
pop
je
mov
call
test
mov
je
mov
push
call
mov
lea
call
mov
test
mov
je
cmpl
jge
xor
pop
pop
ret
xor
jmp
push
call
pop
ret
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
add
push
pushl
mov
call
lea
call
pop
pop
xor
pop
leave
ret
mov
mov
push
es
add
push
mov
mov
call
pop
pop
ret
xor
ret
mov
test
push
push
je
add
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
push
mov
sub
push
push
xor
cmp
je
cmp
je
pushl
pushl
call
cmp
pop
pop
je
lea
mov
call
push
pushl
lea
call
test
je
mov
push
call
pop
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
lea
mov
mov
call
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
jmp
push
mov
mov
push
mov
dec
js
push
push
lea
mov
mov
mov
push
call
mov
push
call
dec
sub
test
jge
pop
pop
mov
mov
push
push
push
push
call
pop
xor
pop
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
push
xor
cmp
jne
call
mov
cmp
je
cmp
jne
mov
call
pop
mov
pop
ret
push
call
pop
cmp
je
mov
mov
mov
mov
mov
jmp
xor
jmp
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
mov
mov
test
je
movzwl
mov
mov
xor
ret
mov
jmp
mov
test
jne
test
push
jne
xor
xor
test
jne
test
jne
test
jne
mov
pop
mov
ret
or
jmp
mov
jmp
push
mov
sub
push
push
mov
mov
call
andl
test
lea
movl
jne
movl
lea
lea
call
mov
or
mov
or
mov
pop
mov
mov
pop
leave
ret
push
lea
sub
mov
xor
mov
add
inc
add
mov
push
push
je
test
je
add
mov
mov
cmp
je
mov
push
lea
mov
mov
mov
call
lea
lea
mov
push
push
call
test
mov
js
cmp
je
lea
lea
mov
mov
push
mov
mov
movl
movl
mov
movb
mov
push
call
test
js
lea
lea
mov
mov
mov
mov
push
push
mov
movl
movl
movb
call
test
js
mov
mov
push
push
lea
mov
lea
mov
mov
call
cmp
je
cmp
mov
jg
mov
mov
lea
lea
movsl
movsl
movsl
mov
lea
lea
movsl
movsl
movsl
mov
mov
sub
sub
xor
mov
mov
mov
mov
add
push
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
jg
lea
lea
movsl
movsl
movsl
lea
lea
movsl
movsl
movsl
cmpl
jne
cmp
jne
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
xor
lea
call
mov
mov
popf
loope
add
sbb
add
or
testb
je
jmp
xor
jmp
testb
je
jmp
push
mov
push
mov
test
mov
jne
mov
mov
test
je
mov
push
lea
push
push
push
call
test
pop
js
mov
test
jg
neg
sbb
and
add
mov
fildl
pop
fdivrl
fstps
fldz
fcomps
fnstsw
flds
test
jp
faddl
pop
jmp
or
jmp
push
mov
sub
mov
add
mov
andl
mov
mov
lea
mov
mov
push
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
je
cmpb
jne
mov
mov
push
call
pushl
mov
mov
push
push
call
lea
call
mov
jmp
mov
mov
xor
pop
leave
ret
push
mov
lea
movl
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
sub
mov
mov
mov
orl
orl
andl
lea
mov
mov
mov
lea
mov
mov
push
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
je
cmpb
jne
mov
mov
push
call
pushl
mov
mov
push
push
call
lea
call
mov
jmp
mov
mov
xor
pop
leave
ret
push
mov
and
sub
push
push
push
xor
cmp
je
cmpl
ja
mov
testb
jne
testb
jne
push
call
cmp
pop
je
xor
call
mov
cmp
mov
je
mov
push
call
mov
push
mov
push
push
push
mov
call
mov
pushl
mov
mov
call
lea
orb
mov
and
mov
cmp
jne
testb
je
call
cmp
jne
cmp
je
mov
cmp
jne
xor
mov
mov
call
mov
xor
cmp
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
call
cmp
jle
cmp
jle
lea
push
mov
push
lea
call
test
js
mov
mov
lea
push
lea
call
mov
orl
orl
movb
mov
orl
orl
mov
mov
xor
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
test
je
mov
add
push
call
test
je
mov
lea
push
mov
call
mov
dec
je
dec
jne
mov
mov
xor
pop
leave
ret
mov
jmp
mov
jmp
push
mov
sub
mov
add
mov
andl
mov
mov
lea
mov
mov
push
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
je
cmpb
jne
mov
mov
push
call
pushl
mov
pushl
mov
push
push
call
lea
call
mov
jmp
mov
mov
xor
pop
leave
ret
mov
mov
jmp
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
cmp
mov
jne
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
mov
test
push
mov
push
je
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
call
pop
test
je
mov
mov
push
call
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
call
test
pop
je
mov
jmp
push
mov
push
push
andl
andl
mov
push
mov
push
mov
mov
testb
mov
jne
call
test
jne
pop
pop
leave
ret
lea
call
mov
mov
mov
mov
jmp
push
lea
mov
call
test
je
jmp
push
mov
push
push
push
push
push
lea
mov
mov
lea
lea
cmp
mov
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
pop
mov
pop
pop
leave
ret
push
mov
push
push
mov
mov
call
mov
mov
xor
cmp
jbe
push
push
pop
mov
mov
movb
mov
mov
call
mov
inc
add
cmp
jb
pop
mov
xor
call
pop
xor
pop
pop
ret
push
mov
sub
push
mov
mov
lea
push
add
push
mov
call
test
pop
pop
js
cmpl
push
push
lea
mov
je
mov
or
je
call
cmp
jg
jl
cmp
ja
xor
mov
cmp
je
cmp
jne
test
jne
push
call
test
pop
je
lea
push
push
pushl
lea
push
pushl
mov
call
mov
test
mov
je
mov
push
call
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
push
push
call
test
jne
lea
call
test
je
mov
push
call
xor
pop
pop
pop
leave
ret
mov
jmp
push
call
test
pop
je
lea
push
push
pushl
add
push
pushl
mov
call
lea
call
xor
push
pushl
call
test
jne
lea
call
mov
jmp
xor
jmp
mov
jmp
push
mov
and
sub
mov
xor
mov
push
push
push
mov
push
push
push
push
pushl
lea
push
call
lea
mov
cmpl
je
testb
jne
mov
xor
cmp
jbe
add
mov
mov
mov
mov
testb
jne
mov
addl
inc
cmp
jb
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
push
mov
shl
push
lea
mov
lea
cmp
jne
mov
mov
add
mov
pop
lea
pop
leave
ret
push
mov
mov
push
mov
xor
push
and
xor
mov
mov
xor
mov
and
xor
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
mov
mov
mov
fldl
fstpl
flds
fstps
mov
test
mov
je
mov
push
call
mov
mov
lea
movl
mov
pushl
add
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
scas
loop
add
rolb
fisttpl
rcrb
push
push
movl
mov
movl
call
push
lea
call
fldl
add
cmp
movl
fstpl
mov
mov
mov
jne
mov
cmp
jne
xor
xor
mov
mov
cmp
mov
mov
je
mov
lea
mov
mov
lea
push
push
mov
mov
movl
movl
mov
call
mov
push
call
mov
mov
add
test
jne
test
jne
mov
mov
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
cmpl
jne
xor
ret
push
mov
sub
push
mov
mov
push
lea
push
mov
xor
call
mov
cmp
mov
je
push
lea
push
push
mov
mov
push
call
mov
mov
and
jne
pushl
lea
call
cmp
jne
mov
test
je
mov
lea
push
push
call
test
jne
xor
cmp
sete
mov
lea
call
pop
shl
lea
xor
lea
and
xor
or
mov
shr
and
call
mov
pop
pop
leave
ret
push
mov
push
andl
mov
andl
lea
push
push
call
test
js
testl
mov
push
push
jne
call
leave
ret
mov
mov
mov
mov
xor
ret
push
mov
sub
push
mov
mov
push
mov
push
lea
lea
xor
testb
push
mov
lea
lea
mov
movl
mov
movl
mov
mov
push
jne
push
pushl
push
call
mov
push
pushl
call
xor
cmp
je
cmp
jne
mov
mov
lea
push
push
mov
call
mov
andl
andl
push
lea
lea
movl
mov
call
cmp
mov
jne
mov
or
mov
mov
push
push
call
movzbl
andl
add
push
mov
and
call
mov
mov
mov
lea
push
push
pushl
push
push
push
call
test
js
cmpl
jne
lea
call
testb
jne
testb
jne
xor
inc
pop
pop
pop
leave
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
push
push
movl
push
movl
call
mov
mov
lea
cmp
jne
push
call
pop
xor
pop
pop
jmp
push
call
pop
mov
movl
jmp
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
mov
test
push
push
mov
jne
mov
mov
add
cmp
jae
mov
and
jne
add
cmp
jb
and
or
mov
mov
and
cmp
jne
lea
push
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
mov
mov
mov
test
jne
ret
push
mov
and
sub
push
mov
push
push
xor
push
lea
mov
call
mov
lea
push
push
pushl
push
call
pushl
mov
lea
mov
call
lea
call
cmp
mov
je
push
lea
push
pushl
mov
call
mov
add
cmp
jne
push
push
push
lea
push
mov
mov
call
cmp
jne
mov
cmp
jne
push
push
push
lea
push
mov
mov
call
mov
cmp
je
testl
je
lea
cmp
jne
lea
call
lea
call
pop
pop
pop
mov
pop
ret
push
mov
mov
call
test
jne
push
mov
and
mov
test
push
je
mov
mov
test
je
test
mov
je
mov
push
call
xor
pop
pop
pop
ret
test
je
push
call
pop
test
je
mov
mov
call
mov
test
je
mov
push
call
mov
test
mov
jne
mov
test
jne
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
mov
andl
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
test
je
lea
mov
push
push
push
push
call
lea
call
leave
ret
xor
jmp
push
mov
mov
sub
test
push
mov
push
push
jne
mov
test
jne
push
call
lea
xor
call
lea
mov
test
jne
lea
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
cmpl
je
mov
mov
mov
mov
lea
call
mov
call
xor
mov
call
lea
xor
call
lea
mov
test
jne
lea
xor
call
cmpl
je
mov
call
lea
mov
xor
cmp
jne
cmp
jne
pop
pop
pop
leave
ret
mov
push
call
xor
mov
call
jmp
cmp
jbe
lea
push
call
mov
lea
push
push
push
call
pushl
call
pop
jmp
out
lret
inc
add
clc
push
push
mov
push
push
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
cmpl
je
or
mov
xor
pop
pop
pop
mov
pop
ret
mov
test
je
push
mov
call
cmp
jle
mov
cmp
je
xor
cmp
je
inc
inc
mov
cmp
jne
orb
jmp
cmpl
mov
je
mov
call
xor
movl
mov
inc
jmp
push
mov
push
mov
lea
cmp
je
cmp
je
mov
mov
call
test
jne
cmp
jne
mov
cmp
jb
ja
mov
cmp
ja
mov
mov
mov
mov
mov
mov
andl
incl
pop
pop
ret
mov
jmp
push
mov
push
mov
test
je
mov
mov
cmp
jne
test
je
mov
and
or
jne
mov
pop
pop
ret
mov
mov
mov
mov
mov
add
cmpl
je
add
push
call
cmpl
je
mov
jmp
xor
jmp
push
mov
sub
push
mov
mov
and
or
push
mov
jne
cmp
je
lea
push
mov
push
lea
call
cmpl
je
pushl
mov
pushl
call
mov
orl
mov
pop
pop
leave
ret
mov
call
call
test
je
jmp
mov
call
test
je
push
lea
mov
cmp
je
cmpl
jne
lea
mov
call
cmp
jne
cmp
pop
je
push
push
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
movl
movl
call
add
test
je
mov
push
mov
mov
mov
push
add
push
xor
mov
mov
call
test
jne
mov
lea
cmp
je
mov
lea
call
test
je
lea
mov
mov
mov
cmp
je
mov
push
mov
call
test
je
mov
movl
mov
pop
pop
mov
pop
pop
ret
mov
cmp
je
jmp
push
mov
mov
push
push
push
xor
push
call
cmp
je
cmp
mov
mov
mov
mov
mov
movl
add
inc
and
movl
movl
mov
mov
mov
cmp
je
inc
mov
movl
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
mov
test
je
call
testb
movl
add
mov
pop
ret
pushl
mov
pushl
add
mov
push
call
xor
ret
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
mov
andl
mov
mov
and
je
mov
push
push
push
call
ret
test
mov
je
push
mov
test
je
cmpl
je
push
call
mov
push
push
call
test
js
mov
test
je
pushl
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
mov
mov
movl
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
test
mov
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
lea
push
mov
push
lea
push
mov
push
push
mov
push
call
mov
mov
test
jne
test
jne
mov
mov
push
push
call
mov
mov
push
push
call
mov
test
jns
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
lea
xor
testb
mov
mov
movl
movl
mov
loop
inc
add
je
xor
mov
lea
push
mov
push
push
push
lea
push
push
call
test
js
mov
cmp
jne
lea
call
test
je
mov
push
call
test
je
mov
lea
push
push
call
mov
das
mov
test
icebp
aaa
add
icebp
aaa
add
add
test
icebp
aaa
add
icebp
aaa
add
add
test
icebp
aaa
add
inc
and
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
add
cmp
pop
mov
mov
pop
jae
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
mov
mov
test
push
push
push
je
mov
shr
test
mov
je
mov
and
mov
lea
lea
mov
mov
test
jne
mov
test
jne
mov
andl
andl
push
call
mov
sub
lea
push
lea
push
push
call
mov
mov
mov
add
dec
shl
and
or
mov
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
sub
push
push
mov
push
mov
pushl
call
mov
pop
xor
cmp
je
cmp
lea
jne
mov
cmp
jne
mov
mov
mov
mov
call
test
je
mov
cmpl
ja
pushl
andl
call
pop
movl
pushl
call
pop
pushl
call
pop
pushl
call
xor
cmp
pop
jne
mov
cmp
je
lea
mov
mov
mov
add
push
call
mov
add
lea
cmp
je
mov
mov
mov
cmp
je
movl
mov
mov
mov
imul
add
add
cmp
mov
jne
mov
push
push
push
add
push
call
mov
add
mov
cmp
jne
mov
mov
test
je
mov
push
call
mov
test
je
mov
call
mov
push
call
pop
mov
xor
add
cmp
mov
jne
push
push
push
xor
push
inc
call
mov
cmp
jne
mov
mov
call
test
je
mov
cmp
je
add
mov
rcr
inc
add
add
add
dec
add
mov
xchg
mov
add
add
add
add
add
call
cmp
pop
je
mov
mov
movl
mov
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
push
pushl
push
call
lea
call
pushl
call
pop
pop
pop
pop
leave
ret
mov
test
je
lea
mov
mov
add
push
call
push
push
call
pushl
jmp
movl
call
jmp
mov
mov
mov
mov
cmp
mov
je
incl
mov
cmp
mov
je
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
mov
push
push
push
push
push
xor
call
mov
add
mov
cmp
jne
mov
pushl
push
call
mov
call
mov
add
mov
pushl
push
call
mov
mov
pushl
add
mov
sub
add
add
add
mov
pushl
mov
mov
call
mov
lea
push
pushl
call
jmp
push
lea
call
lea
call
lea
call
lea
call
testb
pop
jne
ret
push
mov
push
push
xor
cmp
jne
push
mov
lea
call
mov
pushl
neg
sbb
and
mov
add
call
mov
mov
pop
mov
pop
leave
ret
push
mov
push
mov
lea
push
call
inc
add
mov
lea
call
pop
xor
pop
ret
push
mov
and
mov
mov
sub
test
push
push
push
je
mov
mov
mov
mov
mov
call
cmpl
mov
je
cmpl
je
xor
pop
pop
pop
mov
pop
ret
push
push
mov
push
mov
test
jle
cmp
jg
push
pop
cmp
je
cmp
jg
push
pop
cmp
jne
mov
push
call
test
pop
jne
mov
push
pop
pushl
mov
pushl
call
test
je
xor
mov
inc
pop
pop
pop
ret
push
pop
cmp
jne
jmp
push
pop
cmp
jne
mov
push
call
test
pop
jne
mov
push
jmp
mov
push
call
test
pop
jne
mov
xor
inc
jmp
push
push
pop
mov
call
test
je
mov
jmp
push
mov
sub
test
je
mov
cmp
mov
ja
mov
sub
lea
mov
cmp
mov
lea
jb
lea
mov
andl
mov
lea
push
push
call
mov
leave
ret
cmp
jb
push
jmp
mov
jmp
push
mov
push
push
push
mov
decl
jne
cmpl
jne
cmpl
je
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
push
pushl
push
call
lea
call
pop
leave
ret
push
mov
movl
movl
mov
test
push
mov
je
mov
test
je
test
je
push
call
pop
andl
andl
lea
movl
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
mov
mov
mov
mov
push
mov
push
mov
mov
mov
mov
mov
call
cmpl
je
mov
push
mov
call
test
mov
pop
je
push
push
push
pushl
mov
pushl
pushl
call
mov
push
call
mov
andl
mov
pop
push
pushl
lea
push
mov
call
lea
push
call
cmpl
je
mov
mov
push
call
mov
movl
mov
test
pop
je
push
push
push
pushl
mov
pushl
pushl
call
mov
xor
mov
mov
testl
jne
pushl
lea
pushl
mov
push
push
push
pushl
pushl
pushl
call
inc
add
mov
add
xor
add
push
or
dec
and
push
mov
mov
mov
mov
push
push
call
mov
mov
call
mov
mov
mov
xor
lea
call
mov
pop
pop
pop
mov
pop
ret
cmpl
jne
test
mov
je
mov
mov
test
jne
mov
mov
ret
mov
mov
test
jne
test
mov
je
mov
mov
mov
test
je
jmp
xor
jmp
push
mov
push
mov
mov
cmp
je
mov
test
push
push
je
mov
add
je
add
mov
test
jne
mov
andl
mov
mov
test
je
push
push
pushl
call
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
mov
test
je
mov
push
call
mov
mov
mov
pop
ret
push
push
lea
push
mov
push
call
mov
mov
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
cmp
je
mov
mov
lea
call
mov
mov
cmp
jne
cmp
je
push
push
lea
mov
call
mov
mov
push
call
cmp
pop
pop
mov
pop
jne
cmp
je
push
push
push
push
push
push
pushl
mov
call
lea
call
lea
call
lea
call
mov
pop
leave
ret
mov
test
je
mov
push
call
cmpl
je
mov
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
test
je
push
movl
xor
cmpb
jne
test
je
nop
mov
cmpb
jne
mov
test
je
mov
mov
test
jne
mov
test
je
mov
mov
push
call
mov
pop
ret
cmpl
je
testb
je
mov
mov
mov
test
je
mov
mov
push
call
test
je
mov
test
je
cmpb
je
mov
test
jne
jmp
mov
jmp
push
mov
sub
andl
push
mov
andl
push
push
lea
mov
call
mov
mov
mov
push
call
test
pop
jne
pushl
and
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
mov
mov
sub
push
xor
cmp
jne
push
lea
cmp
je
mov
mov
mov
mov
push
call
xor
pop
pop
leave
ret
call
cmp
je
pushl
mov
push
call
jmp
lea
push
lea
mov
movl
movl
mov
mov
call
mov
test
js
push
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
test
pop
jne
pushl
mov
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
lea
call
lea
call
jmp
push
mov
sub
push
push
mov
movl
mov
add
cmpl
jne
mov
andl
mov
call
mov
fstps
add
decl
jne
pop
pop
leave
ret
mov
call
test
je
mov
mov
pushl
mov
push
push
push
call
fldz
mov
add
mov
jmp
mov
call
test
jne
cmpl
jne
mov
andl
mov
call
jmp
int3
int3
int3
int3
push
mov
and
sub
cmpl
push
push
je
mov
cmp
jne
mov
cmp
je
mov
push
call
add
test
je
movl
movl
movl
mov
test
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
test
jbe
xor
mov
jmp
lea
mov
mov
or
lea
je
mov
mov
add
mov
call
test
je
add
mov
mov
je
mov
mov
mov
push
push
call
mov
mov
sub
fstl
lea
fld1
fsubp
fstpl
push
push
lea
push
call
add
add
subl
jne
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
mov
mov
test
je
push
mov
call
mov
add
mov
mov
cmp
je
mov
sub
test
mov
mov
je
test
je
push
call
mov
add
movl
mov
test
js
mov
cmp
ja
test
je
mov
mov
lea
push
mov
mov
push
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
js
add
inc
and
pop
add
test
je
test
je
push
call
add
mov
mov
mov
jmp
mov
cmpl
ja
cmp
jne
cmpb
je
jmp
mov
jmp
pop
pop
xor
pop
mov
pop
ret
int3
int3
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
mov
mov
mov
in
in
sbb
jl
add
inc
cld
push
push
call
jns
add
aad
insb
ljmp
push
add
mov
fsubs
add
movsb
jns
movl
add
add
mov
add
add
mov
mov
add
add
fisubl
add
cli
add
aad
in
hlt
lcall
inc
in
push
push
call
in
mov
cltd
add
lret
add
add
mov
iret
je
add
imul
add
add
lcall
push
push
push
call
push
mov
mov
fsubrl
lea
add
add
pop
lods
in
mov
pop
jnp
add
out
ficoml
add
pop
add
push
fdivl
add
add
stos
add
out
mov
push
push
push
lea
push
call
add
icebp
xchg
add
add
add
loop
loope
push
out
int
movl
mov
add
data16
mov
add
addb
mov
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
add
mov
rolb
add
add
add
lods
add
add
add
fwait
stos
aam
aad
popf
add
fldenv
add
add
mov
xchg
push
add
push
nop
push
mov
jo
repnz
loopne
sub
pop
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
loop
xchg
out
add
popl
mov
stc
add
add
add
in
roll
call
call
addr16
sub
pop
push
call
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
cmpb
popf
add
add
xchg
mov
out
test
flds
negb
sti
add
add
subb
mov
add
pop
fwait
push
add
mov
jns
jp
stc
sub
pop
jmp
push
lea
push
push
push
call
lret
push
add
nop
leave
pop
add
aad
push
push
cmpsl
pop
add
add
pop
xorb
sti
roll
movsl
add
outsl
faddl
fwait
rcll
add
out
add
add
lret
popa
xchg
pop
add
mov
mov
aam
push
repnz
add
add
add
lock
lcall
mov
push
push
push
push
lea
push
push
lea
push
push
call
lods
jns
add
leave
pusha
imul
rclb
add
add
iret
add
add
add
cmc
add
je
jecxz
jecxz
xchg
add
lds
idivb
add
lock
add
popf
out
cmpsl
add
out
add
testb
jl
xchg
mov
add
add
fdiv
ret
leave
sub
pop
mov
push
lea
push
call
add
jle
jle
add
mov
pop
pop
xchg
push
imul
leave
add
mov
cld
add
sti
fistpl
popl
add
negb
mov
xchg
jae
sub
pop
add
add
push
push
push
lea
push
call
ret
mov
sar
xchg
lret
xchg
js
addb
add
testb
mov
mov
add
add
scas
jle
test
shr
in
lods
aad
outsl
add
jo
xchg
lock
push
shl
jbe
sub
pop
add
push
push
lea
push
lea
push
call
lcall
repnz
add
xchg
add
mov
xchg
jmp
push
lea
fildl
mov
add
add
jae
pop
cld
add
lcall
add
add
outsl
add
add
into
add
push
add
add
jns
xchg
mov
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
pop
mov
add
mov
add
pop
pop
mov
add
imul
mov
int
add
add
lcall
sbb
push
push
push
push
call
add
add
jl
data16
add
add
popf
lock
imul
add
testl
push
add
cmc
into
popa
add
add
add
lcall
les
sub
xchg
icebp
push
sub
add
lea
add
rol
sub
sub
sub
xor
pop
add
ror
shl
pop
push
lea
push
call
add
add
int3
add
cmpb
add
add
mov
jne
add
add
lcall
cltd
add
test
add
arpl
mov
add
push
pop
add
mulb
jle
lret
mov
add
push
add
sub
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
call
add
add
pop
mov
add
imul
add
mov
add
add
mov
add
sub
pop
call
push
push
call
std
add
add
lea
add
je
fs
addr16
out
adcb
stc
rol
push
mov
lods
add
fisttpl
add
mov
add
clc
pop
mov
push
push
push
lea
push
push
call
in
add
jmp
add
add
fs
lods
mov
imul
ret
xchg
pop
gs
push
fadds
add
in
scas
add
add
lcall
inc
call
push
push
push
lea
push
lea
push
push
call
lret
nop
add
add
add
fsubr
add
int3
addb
stos
clc
in
mov
gs
icebp
jmp
add
add
and
add
xchg
add
add
ja
lds
add
lcall
inc
call
shr
je
jb
push
push
push
push
push
call
in
add
add
popa
mov
add
rolb
add
mov
add
add
mov
add
pop
xchg
add
add
jl
movsb
add
add
add
mov
sarb
stc
in
gs
pop
push
push
lea
push
call
mov
stos
pop
add
mov
xorl
rclb
lock
add
imul
loop
add
shlb
popf
lds
jns
pop
pop
iret
in
mov
clc
pop
pushl
push
push
push
push
push
push
lea
push
call
add
jb
mov
mov
add
jmp
mov
add
add
int3
bound
loop
xchg
add
jle
add
add
fcomp
jp
mov
enter
add
vpperm
xchg
add
add
lcall
jne
push
push
lea
push
push
lea
push
lea
push
call
add
mov
add
fnsave
loope
add
cmpsl
add
leave
add
fiaddl
add
in
jmp
mov
xlat
add
mov
pop
add
std
out
mov
insb
mov
jmp
add
int
fmul
fimuls
divl
mov
add
add
data16
add
jne
push
push
call
push
add
mov
test
pushf
std
add
cli
or
rolb
sahf
lods
lock
sbb
xchg
movsb
rolb
lock
push
call
call
mov
xchg
loopne
jne
add
add
add
mov
add
test
js
push
jmp
add
xlat
add
add
add
mov
ja
addr16
jl
les
add
add
lcall
fdivl
add
sbb
stos
push
rol
push
and
add
sub
shr
sub
pop
not
rol
pop
push
push
call
mov
add
jb
push
add
rcr
out
in
mov
in
sahf
xchg
add
clc
std
mov
sub
pop
pushl
push
lea
push
push
call
int
push
frstor
mov
bound
add
sti
rolb
jmp
add
aad
int3
add
add
mov
in
hlt
pop
call
push
lea
push
push
push
call
add
mov
out
add
mov
xchg
add
mov
jb
add
fdivrs
cltd
in
jle
lcall
lods
add
push
addl
addl
add
jb
sub
mov
pop
jns
add
testb
push
push
xor
push
or
inc
add
not
not
rol
sub
shl
pop
rol
lea
pop
push
lea
push
lea
push
push
call
add
mov
add
fcomps
roll
add
mov
stos
fildl
data16
pop
mov
in
imul
repnz
popa
add
mov
xchg
lret
add
arpl
mov
pushf
xchg
add
jae
add
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
fs
add
movb
mov
cli
iret
push
icebp
mov
popa
mov
add
mov
add
frstor
cli
fbld
out
push
mov
push
add
add
mov
mov
mov
int3
jp
add
iret
sub
pop
call
mov
push
push
lea
push
push
call
test
add
loop
outsl
pop
loopne
addb
xchg
cli
add
add
scas
push
mov
push
add
lcall
push
push
push
push
lea
push
push
push
push
push
push
push
call
adcb
add
xchg
fwait
ljmp
push
mov
add
add
add
add
add
add
xchg
add
mov
push
add
fcomps
pop
hlt
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
mov
cmpsb
add
cmpsb
mov
add
in
jl
xchg
pop
add
repnz
add
sti
lahf
mov
fidivl
lcall
pop
in
push
lea
push
call
jge
cld
int
add
mov
lcall
fidivs
popf
mov
jne
aam
ret
mov
cmc
jmp
mov
xchg
movsb
jecxz
add
xchg
popa
add
add
cwtl
movsl
mov
xlat
add
mov
add
add
add
add
push
push
call
add
fcomip
jecxz
add
add
sti
imull
add
mov
mov
jge
in
ja
xchg
add
sub
pop
mov
xor
push
push
lea
push
push
push
push
push
push
call
fstpt
jo
add
lods
xchg
add
add
pop
retw
mov
add
jae
pop
imul
enter
in
add
add
mov
jne
aad
in
loopne
add
push
push
push
push
push
push
lea
push
push
call
add
sub
xchg
int3
add
movsl
insb
add
lret
mov
mov
shll
mov
mov
push
mov
clc
add
add
jl
fildl
xlat
arpl
in
loopne
push
mov
xor
push
push
push
push
push
call
xlat
enter
xchg
add
ficoml
movsb
mov
loopne
xchg
cwtl
mov
int
push
add
ljmp
pop
add
lods
add
add
roll
loope
outsl
jb
add
sub
pop
add
push
push
push
lea
push
call
add
add
fcmovne
push
add
popf
insb
int3
mov
add
stos
js
ret
xchg
xchg
add
sub
pop
pop
mov
xor
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
movl
test
int3
add
lods
add
add
add
add
add
add
fcomps
push
push
push
push
call
les
divb
jo
add
mov
add
add
xchg
add
mov
add
scas
stc
jb
out
jge
jecxz
mov
leave
iret
stc
filds
lcall
inc
or
iret
push
lea
push
push
push
push
call
mov
xchg
add
sti
add
aad
scas
xchg
lds
loop
add
add
fwait
pop
mov
loop
mov
lea
sub
pop
sub
push
push
push
push
push
push
push
lea
push
push
call
add
add
imul
out
leave
add
push
pusha
add
mov
les
jno
stc
pop
pop
mov
lret
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
call
lret
out
fwait
adcb
test
pop
xchg
idivb
push
mov
jl
mov
scas
popf
jno
outsl
push
jl
add
in
pop
je
in
in
lcall
movsb
pop
push
push
push
push
push
push
push
call
add
add
mov
call
popa
stc
add
ja
insb
imul
add
pop
test
sahf
test
in
in
lcall
pop
hlt
push
push
lea
push
push
lea
push
push
call
loop
add
pop
pusha
add
mov
in
cmpsl
pop
xlat
add
add
add
add
cmpsl
popf
jmp
add
add
push
push
push
call
add
stc
add
add
cli
jmp
add
call
jno
into
add
fiaddl
jne
pusha
jge
fwait
add
mov
add
add
push
push
push
lea
push
push
call
add
mov
add
shl
add
mov
add
imul
out
jp
mov
addb
push
jnp
add
jb
mov
add
add
jno
pop
in
add
test
add
and
add
outsl
clc
add
add
cmpsl
add
out
outsl
test
add
sub
pop
mov
xor
push
push
push
push
lea
push
push
push
push
push
call
lret
out
in
rcr
arpl
mov
pushf
stos
add
jne
fdivrs
out
aad
out
data16
data16
roll
add
jmp
add
sarb
add
xchg
stos
add
jnp
add
push
in
enter
add
fdivrl
xchg
add
add
lods
hlt
fiaddl
scas
add
add
push
and
out
int3
iret
iret
push
push
push
lea
push
lea
push
push
push
call
push
add
jno
add
pop
add
add
add
add
push
add
movsb
lret
add
add
iret
xlat
add
lcall
adc
push
push
push
push
push
lea
push
push
call
faddl
popa
test
arpl
add
xchg
xchg
mov
xchg
cmpsl
add
lods
add
leave
add
lds
fwait
add
bound
pop
pushf
add
jnp
in
add
sub
pop
add
push
push
push
push
push
call
add
ljmp
add
std
add
xlat
stos
push
ror
add
add
jp
add
addr16
add
push
add
add
je
mov
in
in
lcall
dec
sub
int3
iret
iret
push
push
call
add
in
add
pop
lea
outsl
add
mov
fdivrs
xchg
sahf
add
add
add
cld
mov
add
stos
cmpsb
mov
mov
rolb
add
movsb
add
add
mov
add
add
add
sbb
add
add
pop
rcl
pop
add
pop
xor
push
push
lea
push
push
lea
push
push
push
call
xchg
aad
mov
pop
loop
rolb
mov
add
add
add
call
xchg
add
add
mov
mov
add
jp
div
add
adc
clc
cmpsl
add
in
imul
imul
flds
xchg
mov
pop
add
push
push
push
push
lea
push
lea
push
push
call
add
mov
outsl
mov
int
notl
pop
add
fs
ljmp
add
fbld
add
push
pusha
jbe
cld
adcb
into
mov
add
pop
add
push
push
push
lea
push
push
push
call
stos
add
outsl
cli
push
add
add
add
fcoms
bound
sahf
jno
mov
mov
cltd
pop
pop
add
stos
pop
cwtl
in
add
out
jne
xchg
out
fiadds
cwtl
mov
imul
lcall
rorl
stos
push
ror
add
inc
dec
push
sub
add
lea
ror
ror
sub
rol
add
sub
pop
pop
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
jae
mov
add
add
add
mov
stos
jp
pushf
mov
mov
pop
add
push
lret
jge
out
add
mov
shl
pop
add
int
into
fwait
add
add
jne
call
push
push
push
lea
push
push
push
call
add
addb
loope
fs
add
add
push
imul
imul
add
test
add
add
insb
pop
jp
mov
stc
cld
add
lcall
add
jne
or
push
dec
sub
rol
rol
push
sub
add
rol
sub
sub
shl
sub
pop
dec
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
add
int
jl
int
mov
add
push
stos
incb
add
cwtl
rcrl
loopne
mov
int3
mov
add
addb
lea
push
int
cld
loop
imul
add
add
mov
add
add
shrl
fdivr
lcall
push
push
push
push
push
push
push
lea
push
push
push
call
pop
stos
mov
gs
push
jl
scas
arpl
imul
addr16
fldl
pop
loope
add
mov
push
lret
cmc
xchg
add
add
loope
js
xchg
mov
pop
push
push
lea
push
push
push
push
call
add
mov
push
add
mov
lods
iret
add
addb
lret
lret
faddl
xchg
js
cmpsb
add
rolb
int
shl
jge
jne
xchg
add
lods
mov
push
add
add
pop
push
sub
pop
call
mov
push
push
push
push
push
push
call
xlat
test
mov
add
add
insb
jae
add
add
rorb
add
add
mov
add
xchg
sub
pop
push
push
pop
push
mov
push
push
push
push
push
push
push
push
push
call
iret
xchg
lret
add
lret
in
add
add
pop
into
clc
jmp
insb
mov
xchg
jecxz
mov
fildl
sahf
clc
addr16
pop
add
push
lea
lea
sub
pop
add
push
sub
dec
pop
add
mov
xor
push
push
lea
push
push
lea
push
push
call
add
add
add
jecxz
add
mov
lea
push
mov
aad
xchg
add
scas
add
in
xchg
add
add
mov
add
insb
jns
jle
mov
scas
add
js
add
imulb
ret
addb
add
ret
flds
jge
sub
pop
add
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
clc
faddl
ja
add
cld
pusha
add
call
lock
sti
add
add
add
push
sahf
stc
loop
add
add
add
pushw
mov
jle
lods
add
add
rolb
enter
add
aam
out
pop
push
add
mov
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
bound
cld
add
xchg
add
add
add
add
lahf
mov
je
loop
add
popf
add
testb
test
sub
pop
xor
push
push
push
push
push
call
rolb
add
lock
sarb
add
fstpl
mov
leave
addl
add
add
push
add
scas
pop
test
add
cltd
mov
add
int
addb
xchg
add
add
mov
add
in
in
lcall
les
push
push
push
push
push
push
push
lea
push
call
xchg
mov
add
jno
fsub
add
out
add
xchg
xchg
mov
test
fwait
in
int
jnp
movb
ret
add
sbbb
mov
testb
into
add
lcall
lock
push
push
lea
push
lea
push
push
push
push
call
mov
into
add
movb
mov
sarb
movb
mov
add
in
in
mov
mov
jecxz
jbe
cld
shr
jbe
sub
pop
pop
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
cli
int3
jl
add
add
add
pop
out
popf
lods
sahf
mov
in
iret
add
add
mov
lods
arpl
fistpl
mov
mov
add
jmp
add
nop
add
add
mov
ret
in
cli
mov
test
lea
pop
mov
xor
push
sub
pop
rep
mov
xor
push
dec
pop
or
je
push
pop
mov
xor
push
lea
push
push
lea
push
push
call
jae
xchg
aam
enter
fildl
push
add
roll
add
in
gs
imul
add
gs
add
add
mov
leave
jmp
add
je
jb
lahf
mov
bound
add
mov
test
push
add
lock
xchg
ror
lods
sub
pop
mov
push
push
push
push
lea
push
push
push
push
call
add
add
jp
pushf
cmpsb
add
add
add
out
add
add
add
add
xchg
add
add
leave
add
mov
add
push
add
add
popa
cmpsb
add
movsb
add
push
mov
add
mov
enter
pop
add
add
lcall
adc
push
push
push
push
lea
push
push
push
push
push
call
add
in
addr16
js
cmpsb
jae
rolb
add
pusha
loop
lret
jne
add
add
addb
je
shlb
add
add
nop
add
roll
add
les
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
jns
mov
fsubs
add
sbbb
add
call
xchg
cli
shl
aam
sub
pop
add
push
inc
pop
add
push
lea
push
lea
push
push
call
mov
iret
icebp
add
lret
push
pushf
int3
add
pushf
pusha
lahf
mov
add
add
shll
add
iret
add
add
jl
hlt
add
add
sub
pop
push
push
lea
lea
pop
mov
push
push
push
push
lea
push
push
lea
push
push
push
push
call
aad
add
scas
aam
into
enter
add
mov
mov
xchg
fists
mov
cltd
add
push
add
sarb
add
add
add
add
add
mov
push
sahf
jno
add
fiadds
les
push
lea
add
add
add
sub
pop
xor
push
push
call
mov
push
imul
aad
add
fs
jno
pushf
stos
cli
cltd
push
loope
call
mov
je
mov
xchg
add
add
ror
mov
add
add
test
add
lcall
les
ror
pop
add
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
mov
iret
add
fwait
add
out
add
mov
add
add
add
jno
add
add
mov
add
mov
test
stos
cwtl
add
in
fdivr
lcall
movsb
push
xor
shl
add
pop
mov
xor
push
inc
add
pop
or
je
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
addb
xchg
add
stos
rcrb
jmp
jecxz
lret
lret
jecxz
fiaddl
jns
add
add
add
jge
mov
fcoms
jnp
add
xchg
lea
add
mov
mov
mov
insb
add
mov
add
add
lcall
repz
push
push
push
call
ret
add
add
js
ret
add
in
pop
stos
std
int3
je
add
addb
add
popa
cmpsl
xchg
pusha
add
mov
pop
add
arpl
cwtl
push
roll
clc
test
add
imul
mov
call
add
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
call
add
addl
orb
add
xlat
add
mov
add
push
shll
aad
roll
add
add
in
add
push
mov
in
loopne
add
rep
push
push
lea
push
push
push
push
push
push
call
xchg
addb
push
mov
popf
loope
jno
mov
cltd
mov
not
fwait
add
add
les
add
mov
mov
add
add
cmp
add
in
subl
add
addl
sub
pop
pop
push
push
xor
shr
push
or
not
add
dec
add
sub
xor
pop
sub
pop
push
add
xor
pop
pop
push
push
push
push
call
add
push
add
add
add
repnz
ljmp
add
add
add
add
push
push
lcall
bound
je
leave
scas
xchg
add
lods
lret
add
add
lahf
add
xlat
lds
add
jne
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
push
jbe
mov
add
lahf
add
jp
lock
jmp
mov
add
add
push
cwtl
pop
mov
push
add
rcl
mov
pop
jns
add
test
in
loopne
lcall
insl
hlt
push
push
lea
push
push
call
add
lock
add
add
fnstsw
roll
add
stc
add
add
add
add
add
add
sti
xlat
movsl
cmpsb
add
in
xlat
mov
add
movsb
jp
popa
add
aad
mov
add
add
js
out
movb
sahf
add
in
lock
lcall
inc
and
jmp
push
lea
ror
sub
pop
push
push
sub
not
sub
pop
mov
add
push
xor
sub
pop
push
push
dec
inc
pop
push
push
push
add
xor
pop
push
push
push
push
lea
push
lea
push
call
int
mov
jae
fisubs
push
add
mov
mov
add
jne
test
add
mov
jns
mov
sub
pop
mov
push
dec
pop
pop
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
xchg
pop
pop
jnp
arpl
mov
sarl
add
movsl
stos
add
mov
pop
jmp
sbbb
lods
add
lcall
roll
sub
pop
pop
push
push
lea
push
push
push
push
call
loop
movsl
xchg
in
add
shll
add
mov
out
lahf
out
mov
int3
xchg
lods
gs
add
mov
mov
xchg
lret
xchg
add
lds
mov
pop
pop
fsubs
pop
add
lahf
pop
lods
jnp
sub
pop
pop
leave
push
push
lea
push
push
push
push
push
push
push
push
call
jne
push
imul
shr
jmp
cmpsl
adc
jb
add
mov
jl
add
lds
add
add
jle
add
add
add
rcr
lock
add
lea
mov
mov
lcall
or
push
pop
push
push
sub
pop
mov
push
push
push
push
call
sarb
add
push
sahf
ffree
mov
add
jb
test
cmc
or
add
add
testl
sub
pop
add
push
push
push
push
push
lea
push
push
call
fwait
add
mov
add
lods
scas
pop
pop
mov
lods
fs
pusha
add
add
data16
lcall
cmc
ljmp
mov
add
ja
mov
mov
add
mov
add
add
xchg
clc
add
loopne
in
in
lcall
push
add
pop
push
push
push
lea
push
push
push
push
call
rorb
in
shl
xlat
js
add
scas
lahf
xorl
rolb
add
in
mov
roll
add
sub
pop
push
push
lea
pop
push
push
push
push
push
push
push
push
push
call
jbe
jp
fdivrl
add
repnz
sti
pop
xchg
imull
mov
jno
xchg
pop
out
add
add
pop
mov
xchg
mov
add
add
pop
imul
add
stos
lcall
lcall
inc
cld
add
add
push
lea
push
push
push
push
push
push
push
push
call
jns
pop
cmpsb
add
xchg
imul
mov
out
push
addl
add
in
mov
test
lea
push
add
add
fucom
add
ljmp
sub
pop
addl
push
push
push
push
push
call
add
les
out
add
lcall
mov
jno
les
add
add
add
lahf
xchg
test
into
mov
je
add
cmpsl
stos
xchg
in
clc
mull
sahf
sub
pop
test
je
mov
push
not
inc
ror
pop
pop
push
push
push
push
push
push
push
push
push
push
call
xorl
add
call
add
jbe
add
add
sbbb
add
lahf
add
add
add
add
add
add
add
call
pop
pop
push
push
push
lea
push
push
call
add
jmp
add
add
testl
repnz
loopne
add
jl
add
outsl
mov
add
sub
pop
pop
pop
push
add
pop
leave
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
lods
add
add
add
je
add
lret
popf
push
jge
cld
push
add
add
mov
lods
roll
mov
call
in
mov
fistpll
fdivr
lcall
add
push
lea
push
push
call
jmp
add
jmp
scas
outsl
add
call
mov
popf
mov
loopne
add
add
add
aam
pop
out
add
add
pop
push
mov
push
jb
add
fiaddl
stos
les
add
add
fwait
out
fwait
cli
add
mov
fdivr
cld
sub
pop
push
mov
push
push
push
push
lea
push
push
push
push
push
call
xlat
push
addb
pop
leave
imul
lods
stos
add
push
mov
test
xchg
int3
mov
add
shlb
sub
pop
add
push
push
push
push
lea
push
call
add
fildl
icebp
push
jecxz
add
push
popa
mov
add
add
add
hlt
sub
pop
push
push
lea
push
push
call
mov
out
mov
add
add
add
mov
mov
in
mov
xchg
in
hlt
lcall
push
shr
add
lea
pop
push
push
shl
pop
push
push
push
push
push
lea
push
push
push
push
push
call
jne
add
movsb
scas
push
leave
add
stos
add
push
add
push
mov
js
add
popf
add
jb
sub
pop
testl
push
ror
pop
addl
push
push
sub
pop
call
push
push
push
push
lea
push
push
lea
push
push
push
push
call
xchg
add
lret
push
roll
in
pop
mov
cld
addl
add
pusha
add
mov
fildl
mov
in
fcomps
inc
cld
push
pop
pushl
push
shl
inc
pop
push
push
push
add
not
pop
call
push
shl
shl
inc
pop
cmpl
jne
push
lea
push
push
push
push
lea
push
call
ljmp
je
cld
add
add
add
into
pop
cmpsb
pop
in
mov
add
add
add
add
mov
pusha
sub
pop
pop
push
inc
pop
pop
push
push
lea
push
call
add
jns
add
add
add
add
add
add
add
testb
mov
jnp
sub
pop
pop
pop
push
ror
pop
leave
ret
push
dec
not
pop
push
push
lea
add
shl
pop
mov
push
sub
pop
add
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
jp
add
jbe
cwtl
add
data16
add
add
shl
add
addl
add
sub
pop
push
push
xor
pop
push
push
push
shr
pop
push
movl
push
add
shr
add
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
movsl
pop
jae
add
add
stos
add
loop
pop
add
call
movsl
add
fstl
lcall
push
sub
pop
call
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
mov
test
jno
add
add
push
add
add
pop
add
cmpsb
mov
add
add
add
xchg
jnp
pushf
push
movl
cli
loop
add
hlt
add
add
scas
add
add
add
add
add
lods
stos
out
add
add
lcall
repz
call
dec
pop
subl
cmpl
jne
push
sub
pop
pop
pop
push
lea
push
call
xchg
add
xchg
cli
lods
add
flds
push
lock
mov
ret
jno
add
add
int3
repnz
in
xchg
mov
pop
add
sti
add
add
incb
outsl
add
loope
add
in
clc
pop
pop
push
inc
shr
add
add
pop
pop
push
shr
pop
leave
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
iret
xchg
movsb
out
rolb
add
jmp
int3
loop
add
add
add
add
imul
lods
out
lock
add
mov
in
fcomps
push
add
shr
rol
lea
pop
push
mov
push
push
push
push
call
out
clc
mov
mov
jne
aam
loopne
jbe
cmc
add
in
loope
add
movsb
loopne
insb
xlat
imul
add
mov
in
add
fwait
mov
in
lock
lcall
cld
push
rol
pop
push
push
add
xor
sub
add
pop
push
push
push
push
push
call
enter
add
leave
jge
cmc
js
popf
jns
add
add
mov
cmpsb
add
add
repnz
adcl
pushw
mov
call
add
mov
sub
pop
push
push
push
add
dec
shl
push
or
inc
add
dec
sub
sub
add
rol
ror
pop
xor
not
rol
pop
push
push
push
push
push
lea
push
push
push
push
call
fwait
rol
std
xchg
popa
add
jae
mov
add
jmp
jle
movl
faddl
in
jl
add
icebp
xchg
add
nop
add
add
jmp
mov
add
stos
add
jp
xchg
add
add
mov
in
fcompl
jne
push
push
push
call
insb
add
flds
add
jae
pushf
add
lret
push
add
cmpsb
add
fimull
shll
pop
stos
add
add
mov
sar
test
mov
ljmp
mov
mov
mov
sub
pop
call
call
push
push
ror
add
push
xor
add
rol
sub
shl
pop
not
pop
push
sub
not
rol
pop
pushl
push
push
call
movsl
jns
std
jno
loopne
popa
std
lret
add
jle
add
ret
add
xchg
add
add
into
orb
lcall
add
add
out
push
add
movsb
pop
mov
add
add
add
out
leave
sub
pop
call
call
push
push
shr
push
and
add
sub
shr
sub
sub
not
inc
pop
inc
pop
push
xor
pop
pushl
call
push
push
push
push
push
call
jmp
cmc
add
add
add
pop
fwait
add
add
jp
mov
mov
sub
pop
call
push
shr
pop
mov
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
add
in
lods
lret
add
add
push
xchg
mov
stos
add
add
add
int3
in
add
fstps
lahf
cmc
jbe
aam
addb
mov
xchg
in
add
sti
add
in
fdivr
lcall
call
adc
outsb
push
call
add
add
pop
leave
add
jmp
add
add
xchg
jecxz
add
add
jge
add
mov
hlt
add
cmc
fsub
add
addr16
lcall
aad
mov
jne
mov
add
lods
movsb
mov
jle
lcall
hlt
lcall
add
call
push
xchg
push
push
push
push
push
call
repnz
fisttpl
add
mov
test
add
fsts
bound
add
add
mov
mov
aad
add
sub
pop
add
mov
push
shl
pop
mov
push
shr
ror
pop
add
push
sub
lea
ror
pop
add
push
push
push
push
push
call
pusha
loope
icebp
fiadds
addb
imul
add
push
add
fwait
negb
jmp
add
fcompl
in
in
lcall
inc
add
add
push
sub
pop
cmp
jne
push
shr
ror
pop
cmp
jne
push
push
push
lea
push
push
push
push
push
push
push
call
mov
mov
insb
add
call
add
add
add
int3
pop
orb
xchg
in
cli
addr16
roll
js
lds
ficomps
roll
push
test
add
add
mov
pop
fimull
sub
pop
mov
push
lea
pop
movl
push
sub
rol
pop
jmp
push
lea
push
push
push
push
call
add
clc
mov
pushf
xchg
fs
add
test
add
movl
pop
xchg
add
cmp
add
mov
idivl
add
add
mov
mov
lcall
inc
cld
push
inc
inc
pop
mov
push
push
call
add
mov
add
add
roll
add
movsb
roll
fstpt
icebp
add
imul
jmp
jbe
leave
add
popa
sahf
in
jne
in
mov
add
clc
xchg
add
scas
sub
pop
sub
jne
push
inc
sub
sub
ror
pop
mov
push
sub
pop
movl
push
rol
pop
jmp
push
add
add
pop
mov
push
inc
shl
ror
pop
mov
cmp
jne
push
shl
lea
add
inc
pop
mov
push
not
rol
pop
movl
push
inc
inc
lea
xor
pop
jmp
push
shr
pop
mov
push
pop
cmpw
jne
push
push
lea
push
push
call
mov
mov
fs
hlt
imul
xchg
pop
add
mov
andb
mov
push
push
push
push
push
push
push
push
push
push
call
add
loope
add
add
pushf
add
jle
add
add
add
mov
add
fcompl
add
sub
pop
movl
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
addl
add
jl
lret
pop
jge
jne
add
add
add
mov
leave
add
pop
add
mov
add
mov
sub
pop
jmp
push
push
push
push
lea
push
push
push
lea
push
push
call
je
push
repnz
call
cmpsl
add
add
add
add
push
xchg
rolb
in
xchg
add
lret
pushf
jp
add
scas
push
stos
sti
movsb
movsl
mov
fcompl
pushl
pop
push
push
push
lea
push
push
lea
push
call
mov
add
add
jns
lcall
add
add
jl
lcall
mov
roll
mov
fwait
xchg
add
xchg
add
lahf
sub
pop
mov
push
ror
xor
sub
shl
pop
mov
mov
push
push
add
push
or
inc
add
sub
add
shr
sub
add
pop
shr
lea
pop
push
pop
push
push
not
sub
pop
call
cmpl
je
push
push
sub
shr
ror
push
or
inc
add
sub
sub
rol
sub
add
shl
pop
not
pop
push
push
push
push
push
push
push
push
call
sti
jl
xorl
add
fmul
add
add
mov
stos
add
pop
loope
add
arpl
push
popa
mov
testl
hlt
bnd
mov
int3
popl
sub
pop
push
push
lea
push
push
push
push
push
push
call
icebp
mov
xchg
fwait
std
push
sahf
add
into
xchg
mov
jbe
test
cwtl
add
push
subl
in
lcall
shrl
add
cmpl
je
push
push
shr
push
xor
add
add
not
inc
sub
add
not
not
pop
xor
sub
not
pop
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
call
add
scas
insb
call
andb
fsubrs
add
std
in
jmp
imul
fadds
push
add
add
xchg
add
std
mov
jge
jnp
in
fcomps
push
push
push
push
push
push
push
push
push
lea
push
call
add
mov
mov
add
add
push
add
add
pusha
addl
mov
add
fadds
add
gs
hlt
add
roll
fcomps
lods
sub
rcrl
js
int3
fldz
ret
es
add
aam
rclb
rol
shrb
and
add
dec
sub
rol
dec
pop
not
pop
push
add
pop
push
push
pop
call
push
push
push
push
push
lea
push
lea
push
push
call
add
lock
push
add
fnsave
add
xlat
aam
add
jmp
scas
icebp
aam
xchg
lds
stos
jl
lret
xchg
add
jmp
sub
pop
cmpl
je
push
push
shl
shl
shr
push
or
inc
add
ror
xor
sub
shr
sub
add
pop
pop
push
inc
shr
not
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
jnp
aad
je
mov
pop
in
add
add
mov
add
jns
out
addl
jl
lock
sti
shrb
add
std
popf
out
add
mov
mov
add
add
add
int
jle
jae
imul
fcomps
dec
sub
add
call
mov
jns
jno
add
xchg
add
cli
add
add
pop
add
mov
add
add
add
stos
xchg
add
add
stos
popa
add
mov
sub
pop
cmpl
je
push
push
dec
sub
shl
push
sub
add
xor
shl
sub
shr
sub
pop
xor
pop
push
push
lea
push
push
lea
push
push
push
call
add
aad
add
sahf
mov
add
in
std
sti
rolb
cmpsb
subb
test
add
add
movsl
add
add
mov
xchg
add
add
add
add
cltd
add
add
add
add
push
add
pop
jno
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
add
xor
add
push
sub
add
sub
shl
sub
ror
shr
lea
pop
pop
push
sub
shr
pop
push
push
add
pop
call
cmpl
je
push
push
inc
shr
inc
dec
push
sub
add
dec
shr
shl
add
sub
shr
ror
sub
dec
pop
dec
rol
pop
push
push
push
push
push
push
lea
push
push
push
call
into
add
pop
lods
adcb
add
add
test
rolb
push
add
test
add
les
add
rcl
add
pop
lock
push
add
pop
stos
xchg
stos
add
mov
jp
pusha
cltd
sub
pop
push
call
push
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
pop
lret
add
addl
jae
add
jl
data16
jl
jmp
insb
add
jb
out
loop
addl
xchg
xchg
add
sub
pop
cmpl
jne
push
push
push
call
test
ja
aad
lea
pushf
add
test
cmc
rcl
add
add
add
mov
movsb
fwait
imul
into
roll
add
sahf
push
imull
add
lods
add
addb
call
xchg
sti
scas
add
mov
lcall
in
hlt
lcall
inc
adc
iret
fcomps
add
add
add
rorl
push
push
push
push
lea
push
push
call
xchg
pop
jb
insb
pop
pop
add
jmp
jle
add
inc
add
push
jae
call
add
add
add
lea
test
loopne
lcall
push
add
add
rclb
fwait
or
test
push
call
add
mov
add
add
clc
mov
test
mov
shll
jl
add
add
cmpsl
imul
jnp
mov
add
icebp
mov
nop
roll
push
push
push
push
push
push
push
lea
push
call
pop
outsl
lock
add
add
lcall
movsl
mov
add
not
cltd
add
mov
mov
add
mov
mov
add
mov
push
rcr
add
pusha
mov
pop
add
add
sub
pop
pop
push
dec
rol
add
pop
pop
push
push
push
push
call
add
add
add
std
xchg
add
leave
add
add
lods
add
test
fistps
divb
add
icebp
je
jge
add
add
add
mov
ficompl
add
add
add
cmc
fidivrs
push
xchg
add
leave
push
push
push
push
push
call
add
insb
int
add
loope
add
vpaddd
fs
add
mov
mov
add
fcmovnbe
add
add
or
push
add
inc
pop
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
in
fadd
add
add
xchg
stos
add
fsubp
out
mov
fwait
mov
cmpsl
add
cmc
jge
hlt
cmpsl
add
std
push
cwtl
jno
add
hlt
add
add
pop
pop
sub
pop
mov
add
push
dec
pop
cmpl
jne
push
push
inc
push
or
inc
add
shr
sub
xor
ror
pop
pop
push
push
lea
push
push
lea
push
push
push
push
call
sahf
scas
ljmp
icebp
push
add
add
imul
add
add
out
add
add
xchg
add
cld
add
int3
std
movsl
jbe
add
movsb
mov
add
scas
jp
add
iret
add
add
push
testl
push
add
loopne
lcall
jne
push
add
shr
pop
call
push
push
push
lea
push
call
fadds
add
add
add
pop
cmc
faddl
add
pop
push
addb
mov
xchg
mov
mov
mov
mov
cwtl
add
add
test
add
add
mov
add
sub
pop
call
jmp
push
lea
push
call
add
add
add
jmp
ljmp
add
mov
test
push
popf
divb
push
mov
xchg
lret
pop
add
mov
add
add
add
add
fiadds
add
add
test
in
clc
lcall
jge
add
test
push
call
add
push
addb
add
mov
fadds
add
stos
jb
imul
mov
cmpb
push
mov
movsl
jecxz
xchg
jbe
ror
mov
add
out
add
mov
add
stc
pop
add
out
sub
pop
mov
push
shl
xor
pop
call
push
push
push
lea
push
push
call
add
mov
push
mov
jns
mov
insb
pop
add
test
add
add
fld
gs
mov
lods
fwait
sub
pop
ret
push
sub
add
pop
jmp
cmpl
jne
push
push
ror
xor
push
push
pop
add
shr
lea
add
sub
dec
shr
lea
pop
xor
sub
inc
pop
push
push
push
push
call
test
add
pushf
pop
push
ja
add
add
popl
mov
mov
add
push
pop
add
out
add
lcall
lahf
scas
add
add
pop
fcomi
push
mov
add
roll
add
sub
pop
pushl
push
push
push
lea
push
push
push
push
call
filds
jb
xchg
jae
cwtl
int
mov
push
icebp
add
add
mov
push
add
add
mov
mov
mov
iret
in
xor
test
sub
lcall
add
push
push
lea
push
push
call
scas
in
mov
icebp
jb
fs
add
add
mov
add
lods
fidivrs
add
add
shll
add
jns
add
mov
add
iret
testb
add
push
xchg
nop
movsl
hlt
lahf
out
add
sti
jmp
push
add
lea
add
add
sub
pop
push
push
shr
pop
call
push
xor
add
add
shl
pop
jmp
push
lea
push
push
push
push
push
push
push
push
call
cwtl
add
sarl
jp
add
add
add
jns
add
add
ror
mov
mov
add
mov
std
add
push
fdivr
add
bnd
add
add
pop
mov
mov
pop
cmpl
je
cmpl
jne
push
xor
xor
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
call
je
add
mov
int
lods
add
mov
mov
mov
add
add
add
imul
mov
lahf
mov
add
cmc
jne
add
addr16
lods
add
add
test
fldl
add
push
mov
lcall
add
add
push
push
push
lea
dec
push
sub
add
lea
sub
shr
add
pop
shr
pop
push
lea
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
push
ja
mov
add
add
add
hlt
out
loope
add
lcall
add
add
fs
pop
idiv
mov
test
add
mov
xchg
imul
add
add
jne
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
lods
add
xchg
add
stos
add
add
add
xchg
aam
mov
add
add
add
mov
add
fisttpl
add
in
add
test
mov
arpl
roll
mov
push
enter
push
mov
call
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
lahf
jl
arpl
add
int3
mov
mov
mov
add
add
add
popa
vpunpcklwd
std
mov
lret
push
add
into
add
fs
movl
stos
mov
repnz
mov
imul
fisubrl
in
fcompl
shrb
mov
movb
into
enter
push
roll
add
out
add
xor
dec
sub
sub
pop
ror
pop
push
shr
xor
rol
rol
pop
pushl
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
mov
add
add
add
add
add
mov
push
add
pop
mov
add
add
add
xlat
lret
mov
addl
add
add
fadds
add
add
mov
call
call
push
push
shl
push
and
add
xor
shl
shr
sub
lea
add
add
pop
pop
push
sub
pop
pushl
call
push
push
push
push
push
push
lea
push
push
call
rolb
add
int
add
add
add
cld
cld
aad
add
mov
add
add
sub
pop
call
push
push
shl
push
and
add
not
shr
sub
add
sub
add
add
sub
sub
pop
shl
xor
pop
push
dec
rol
inc
pop
pushl
push
push
lea
push
push
push
push
call
xlat
mov
pop
mov
leave
add
in
in
nop
add
mov
testb
icebp
mov
add
fwait
push
lods
add
add
add
in
call
add
call
push
push
inc
push
and
add
add
not
add
sub
add
ror
add
sub
pop
not
add
pop
push
dec
pop
pushl
push
lea
push
push
push
push
push
call
bound
out
lea
add
xchg
add
mov
insb
jmp
add
mov
mov
add
add
mov
incb
xchg
test
add
add
call
add
push
rol
pop
call
push
push
add
not
push
sub
add
lea
shl
sub
sub
lea
add
pop
ror
pop
push
sub
add
pop
pushl
call
push
lea
push
push
push
lea
push
push
push
call
add
jae
push
add
xchg
orl
mov
int
add
repnz
add
add
add
mov
cmpb
sub
pop
call
push
push
dec
push
xor
add
rol
sub
rol
sub
pop
xor
pop
push
rol
dec
pop
pushl
push
ror
not
add
pop
call
push
add
shl
pop
call
push
push
rol
xor
push
or
not
add
sub
rol
rol
sub
pop
shl
ror
pop
push
push
push
push
lea
push
lea
push
push
call
enter
add
add
int
xchg
add
xchg
addr16
mov
mov
sti
mov
mov
push
add
movsb
add
add
xchg
ljmp
add
add
add
repnz
out
add
add
jne
push
push
push
push
push
push
push
lea
push
push
push
call
mov
mov
nop
hlt
add
add
add
add
js
add
jne
add
cmpsb
add
xchg
iret
arpl
sub
pop
call
call
push
push
inc
xor
push
and
add
inc
not
sub
inc
not
pop
dec
dec
pop
push
push
push
push
lea
push
call
add
add
add
lods
mov
mov
les
in
add
add
add
jno
call
pop
div
outsl
mov
xlat
add
lcall
pop
pop
fsubr
pop
add
movsl
rol
sub
pop
pushl
call
push
push
push
lea
push
push
push
call
add
add
mov
add
add
mov
add
fdiv
add
add
add
add
cmc
add
add
mov
xchg
mov
rcrl
xlat
push
lds
mov
add
add
sub
pop
call
push
push
shr
push
sub
add
dec
sub
ror
sub
pop
add
rol
sub
lea
pop
push
ror
not
not
pop
pushl
push
push
push
call
pop
cmc
add
add
jb
xchg
insb
add
loopne
pop
pushf
nop
out
add
std
add
addl
add
nop
add
hlt
add
add
insb
add
cwtl
faddl
les
test
add
in
int
mov
fwait
add
mov
add
sti
push
mov
lcall
movsb
sbb
add
ja
arpl
lea
push
call
add
jb
push
add
add
movsb
int
add
add
mov
add
repnz
add
xchg
add
addr16
add
lcall
pushf
and
call
pop
call
push
push
add
push
sub
add
sub
add
sub
shr
pop
shr
dec
pop
push
push
push
push
push
push
push
push
push
call
add
jne
add
mov
movsl
mov
mul
lcall
add
mov
movsb
into
rolb
lcall
outsl
iret
jge
int3
add
add
data16
mov
add
mov
fs
mov
xchg
add
fcompl
stos
lods
stos
sub
pop
pushl
call
push
sub
pop
call
push
push
shr
push
sub
add
xor
sub
xor
lea
ror
pop
add
pop
push
push
push
push
push
push
push
lea
push
call
add
cli
hlt
add
jno
add
mov
pop
add
mov
xchg
mov
add
in
loopne
lcall
jne
push
lea
push
call
add
add
in
int
add
add
add
int
add
add
enter
add
add
add
lcall
out
sbb
add
insb
push
push
push
lea
push
lea
push
push
call
add
add
add
cmpl
loop
add
roll
mov
divl
add
add
push
add
shrb
cmpsl
gs
push
push
xor
add
inc
sub
sub
pop
xor
shl
not
rol
pop
push
rol
pop
pushl
push
pop
call
push
lea
push
push
push
push
lea
push
lea
push
push
call
cltd
add
add
add
push
push
int
add
xchg
stos
add
shll
add
mov
leave
mov
pop
mov
push
add
out
les
test
xchg
add
push
mov
lcall
shrb
jns
pop
push
sub
add
dec
not
push
xor
add
dec
sub
pop
not
lea
sub
pop
push
ror
dec
pop
pushl
call
push
push
sub
push
xor
add
add
dec
sub
sub
dec
shr
pop
ror
pop
push
push
not
add
rol
push
or
inc
add
sub
not
dec
sub
add
sub
pop
ror
dec
pop
push
rol
sub
add
pop
call
push
lea
push
call
push
data16
add
add
add
mov
add
push
mov
stos
add
lds
jmp
add
jbe
mov
mov
add
xchg
fldl
adcb
xchg
push
leave
gs
push
add
add
out
out
sub
pop
pop
dec
jne
push
add
sub
rol
sub
pop
call
mov
push
push
push
push
push
push
lea
push
push
push
call
in
loopne
add
add
push
fstpt
out
repnz
mov
add
jle
xchg
cmc
fst
add
hlt
pop
add
mov
pop
lock
sahf
jbe
addl
jae
cwtl
add
add
call
add
add
int
lea
push
push
shr
not
sub
push
and
add
dec
sub
shr
pop
sub
pop
push
inc
lea
ror
pop
pushl
push
inc
pop
call
push
lea
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
arpl
add
test
add
push
add
add
add
rorb
sahf
notl
push
push
mov
loopne
in
fdivr
lcall
call
push
push
dec
push
or
not
add
dec
sub
lea
xor
pop
shl
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
xchg
mov
mov
jns
push
add
add
add
jo
testl
add
add
stos
nop
add
hlt
mov
add
push
push
push
cmpsb
add
pushl
push
lea
push
push
push
push
call
arpl
add
add
pop
mov
add
pushf
mov
add
add
cmpl
pop
jne
shll
add
stos
add
add
ret
push
add
mov
in
in
lcall
add
add
push
call
pop
pop
add
mov
in
sti
push
out
add
add
addl
jmp
imul
add
add
add
fildl
adc
pop
add
add
add
pusha
lcall
ja
in
lock
call
push
inc
lea
sub
inc
pop
mov
lea
push
push
xor
add
rol
add
push
sub
add
add
sub
rol
add
not
sub
pop
xor
pop
push
sub
pop
pushl
call
push
push
call
add
scas
mov
int3
add
push
xchg
add
imul
mov
movb
push
jp
mov
add
add
mov
add
mov
add
add
mov
jnp
clc
imul
loop
xchg
sub
pop
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
rolb
cli
ret
ficoml
mov
add
add
pusha
jo
mov
add
push
scas
add
test
add
lods
xchg
add
popf
jecxz
mov
outsl
pop
sub
pop
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
stos
add
add
scas
add
mov
add
fstp
jo
add
add
xchg
out
cmpsl
rcrb
les
add
in
mov
add
mov
insb
pop
je
loopne
lods
sub
pop
push
pushl
push
push
add
shl
push
sub
add
shl
sub
xor
sub
add
inc
xor
sub
pop
pop
push
inc
dec
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
push
call
scas
aad
pushf
jne
mov
andb
xchg
repnz
jns
add
add
sti
add
pop
add
add
add
mov
add
mov
add
mov
les
add
shrb
int
in
push
not
add
inc
add
push
or
not
add
xor
sub
xor
pop
rol
ror
pop
push
ror
add
lea
pop
pushl
call
push
sub
shr
sub
shl
pop
push
push
push
push
push
call
add
add
add
int
mov
imul
fstpl
jo
add
push
in
fildl
pop
jmp
ja
in
mov
add
jl
add
add
rcll
testl
jae
pop
mov
add
add
sub
pop
call
push
push
ror
push
xor
add
add
sub
shl
rol
sub
inc
ror
inc
pop
sub
sub
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
fiaddl
push
pop
add
push
rcrl
std
popf
aad
arpl
mov
cli
lret
add
jb
shll
xchg
jmp
loop
je
xchg
lret
xchg
push
in
mov
stc
mov
fdivr
lcall
jne
push
push
push
push
push
push
call
add
out
add
mov
xchg
add
xchg
cwtl
mov
out
loopne
mov
in
mov
add
push
sti
and
mov
mov
add
enter
cli
into
add
call
call
call
push
shl
sub
pop
pushl
mov
push
sub
pop
jmp
push
push
dec
not
push
or
not
add
shl
shr
sub
sub
shl
add
pop
add
add
pop
push
not
xor
inc
pop
pushl
push
lea
push
lea
push
lea
push
call
add
add
mov
faddl
flds
jo
xlat
mov
addl
add
roll
push
push
add
add
clc
in
in
lock
call
push
not
rol
sub
sub
pop
push
push
lea
rol
shl
pop
call
push
push
sub
sub
push
sub
add
lea
sub
ror
sub
dec
pop
sub
pop
push
lea
pop
pushl
push
shr
pop
call
push
push
sub
pop
call
push
push
push
push
push
push
push
push
push
call
mov
add
jb
add
jp
lret
add
add
push
lods
push
popa
popf
add
hlt
xchg
imul
enter
add
add
pop
ret
pop
insb
jb
add
popa
jne
add
lcall
push
xor
inc
pop
add
push
push
push
push
call
lret
faddl
add
xchg
call
xchg
iret
jecxz
add
add
add
mov
test
test
leave
roll
add
mov
fs
push
add
mov
jo
out
jae
add
mov
mov
add
add
pop
push
push
lea
push
push
push
call
bound
mov
mov
in
add
ljmp
xchg
fildl
fs
add
add
iret
push
out
add
sti
mov
jae
insb
mov
sub
pop
pop
push
push
lea
push
push
call
flds
mov
icebp
in
add
clc
pop
push
jnp
sti
mov
add
add
xchg
add
pop
mov
add
pop
bound
fdiv
add
mov
add
fildl
faddl
add
sub
pop
xor
push
push
push
push
push
push
call
cltd
stos
mov
add
add
xchg
fistpl
lds
fwait
xchg
mov
add
add
rcr
add
mov
out
mov
pop
call
add
ret
in
add
xchg
add
add
nop
add
sub
pop
inc
push
dec
add
add
pop
ret
leave
push
not
shl
dec
pop
ret
push
push
rol
dec
shl
pop
mov
cmpl
jne
push
sub
dec
pop
mov
push
push
push
push
push
push
push
call
add
cltd
fadds
add
jmp
in
adcl
mov
out
add
rolb
popaw
add
mov
je
add
add
push
je
stos
pushf
pop
add
push
add
xlat
pop
add
popf
add
loop
in
in
jmp
push
push
push
push
push
lea
push
push
lea
push
push
call
add
fidivl
mov
ficomps
push
push
int
mov
add
add
in
jno
fadds
pop
mov
add
add
xlat
mov
add
pop
nop
cmpsl
add
add
cwtl
scas
mov
lret
add
push
loopne
add
mov
cld
mov
imul
sub
pop
mov
push
rol
rol
pop
and
push
not
pop
xor
push
shl
ror
shl
pop
xor
add
push
lea
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
faddl
mov
add
popf
add
mov
js
add
add
add
add
jns
add
rolb
jno
add
std
test
push
sub
pop
xor
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
movb
add
ja
fcmovnb
into
add
add
mov
stc
rcll
add
add
sahf
cld
mov
add
jp
add
repnz
popl
lock
movsb
push
popf
xchg
enter
sarl
sub
pop
dec
sub
push
push
push
push
push
push
lea
push
call
lcall
add
add
push
xchg
ror
in
add
add
fwait
add
mov
add
stos
add
mov
mov
add
mov
in
add
lcall
iret
add
add
inc
lcall
add
lea
in
sub
stos
push
lea
push
call
push
mov
in
pop
les
add
cmpsl
add
add
add
add
hlt
add
jb
xchg
xchg
add
in
add
add
add
pop
xchg
add
repnz
xor
lahf
cltd
xchg
outsb
xchg
push
call
lds
xchg
arpl
add
je
add
add
loopne
insb
add
add
add
pop
cltd
roll
mov
push
add
xchg
add
loop
add
mov
lcall
mov
mov
sub
pop
pop
sub
push
xor
pop
cmp
jne
mov
push
rol
pop
lea
push
pop
sub
mov
push
push
call
scas
jmp
add
addl
mov
enter
fwait
jecxz
add
add
mov
test
sub
pop
shr
push
push
push
push
push
lea
push
lea
push
call
pop
add
add
imul
mov
add
add
mov
mov
add
xchg
add
cmpsb
push
add
jge
rcrb
add
add
jnp
add
mov
xchg
scas
add
mov
add
add
add
jnp
nop
jmp
add
lcall
enter
push
call
add
mul
add
xchg
xchg
faddl
sti
add
test
add
add
sti
jnp
mov
mov
call
add
push
add
test
mov
nop
in
add
xchg
imul
lcall
jmp
xor
inc
inc
pop
pop
push
inc
pop
shr
push
inc
dec
ror
not
pop
and
push
push
push
push
lea
push
call
int
mov
fistpll
sbbb
std
pusha
je
mov
add
mov
add
jmp
fldl
je
add
sub
pop
sub
push
inc
xor
pop
cmp
jne
push
lea
push
push
push
push
lea
push
call
mov
add
add
xchg
jns
int
roll
add
add
add
add
add
sar
add
shl
add
stos
idivl
lcall
add
leave
mov
jl
movl
call
add
out
rol
pop
push
mov
push
dec
shr
lea
pop
add
push
not
sub
pop
push
push
sub
not
pop
push
push
push
push
call
add
add
loop
pushf
add
sar
insb
add
mov
push
mov
mov
std
popa
jmp
push
add
jmp
je
ljmp
add
mov
add
add
add
lods
test
data16
add
cmc
xchg
add
in
hlt
lcall
push
shl
pop
push
push
ror
shr
sub
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
out
lea
mov
add
rcr
lock
jle
ljmp
add
cli
add
ja
mov
pop
ja
frstor
rcrb
add
icebp
add
jle
add
add
add
add
fldl
add
roll
add
push
les
add
add
sbbb
pop
or
mov
xor
add
add
jp
add
add
data16
data16
add
popf
push
add
add
xchg
mov
mov
jnp
mov
push
addb
rolb
pop
lea
sub
push
push
push
lea
push
push
call
stos
roll
add
add
add
pop
add
add
push
cmpsl
loope
mov
jecxz
add
lcall
adc
ljmp
add
mov
push
lea
push
lea
push
push
push
call
test
nop
clc
add
jp
lret
in
add
mov
les
add
lea
out
icebp
rolb
jne
loope
push
add
int3
lret
testl
add
cwtl
clc
roll
loop
flds
cli
add
pop
or
shl
shl
pop
add
push
rol
xor
pop
xor
push
push
push
push
lea
push
push
lea
push
push
push
call
lret
leave
movsb
outsl
shl
mov
add
scas
push
lea
add
add
je
add
add
ja
lods
xchg
mov
jae
int3
add
add
pusha
pop
add
in
fcompl
xlat
push
push
push
lea
push
push
push
push
push
call
mov
lock
add
les
xchg
xchg
mov
insb
rcrl
add
mov
pop
add
mov
fcoml
add
call
mov
lcall
adcl
add
add
fs
cmpsl
add
add
loopne
push
add
sub
shr
pop
rol
rol
push
push
push
lea
push
push
lea
push
push
push
call
popl
add
bound
nop
add
add
test
jge
add
sar
jne
add
fldl
stos
mov
add
fadds
loope
jge
add
cmc
jnp
imul
mov
mov
repnz
push
add
push
fs
mov
jecxz
add
xchg
add
add
sub
pop
xor
push
push
push
lea
push
lea
push
push
push
push
push
push
call
scas
filds
rorb
jno
add
sti
add
add
add
ja
xchg
cli
jmp
xchg
arpl
mov
lock
add
sti
repnz
xchg
call
scas
sub
pop
inc
push
add
pop
cmpb
jne
add
push
lea
ror
lea
pop
cmp
je
add
push
not
pop
cmpl
jne
push
xor
xor
pop
xor
pop
push
shr
xor
pop
pop
pop
push
dec
dec
dec
pop
pop
pop
push
push
push
push
push
push
push
call
mov
add
pusha
jge
addl
popf
add
rolb
add
add
fwait
add
add
add
mov
cld
hlt
mov
add
stos
add
mov
mov
outsl
mov
in
lcall
ret
push
lea
push
push
push
push
push
push
lea
push
push
call
add
rolb
xchg
in
mov
add
add
out
add
add
add
fisubl
add
mov
add
scas
push
out
cli
add
cli
add
fwait
call
mov
lcall
push
adc
sbb
push
push
call
add
push
xchg
pushf
add
add
push
add
add
add
sar
jle
addb
jl
pop
adc
add
xchg
pusha
add
add
add
add
xchg
add
jmp
add
add
notl
add
mov
push
lea
push
push
push
push
push
push
lea
push
call
add
fsubl
pop
cli
jns
out
faddp
jae
shlb
xchg
arpl
jmp
add
add
sub
pop
sub
push
push
lea
push
push
call
mov
mov
test
pop
push
add
add
lods
mov
sahf
add
pop
add
ljmp
mov
mov
add
shll
mov
xchg
xchg
in
mov
mov
fyl2xp1
push
out
add
add
call
hlt
lcall
aaa
hlt
call
enter
xor
push
push
lea
push
lea
push
call
add
repnz
scas
ret
lret
je
lea
imul
add
mov
into
mov
add
test
lahf
add
rcrl
ja
cmpsl
lcall
lahf
add
lock
sub
pop
pop
push
push
push
push
push
call
add
pop
call
lcall
jecxz
xchg
add
add
add
popl
popf
addb
lret
hlt
jae
push
clc
clc
insb
jb
add
test
add
in
pop
pop
pop
push
push
push
push
push
push
call
fwait
add
add
add
fldl
add
test
pushf
call
filds
add
add
jb
jo
mov
stc
call
in
shr
fcomi
nop
aam
test
fists
lcall
pop
push
push
push
push
push
push
push
push
lea
push
push
call
clc
loopne
mov
add
orl
jnp
add
in
ror
int3
add
add
push
movsl
add
add
imul
add
add
sub
pop
leave
ret
push
push
lea
push
push
push
push
push
push
call
jmp
add
jbe
jp
add
clc
mov
add
add
js
add
loope
test
fiadds
jge
lods
pop
add
pusha
jp
les
rcll
aam
ret
xchg
fiaddl
les
hlt
add
mov
in
loopne
push
push
lea
push
push
push
lea
push
push
call
nop
movsb
popa
scas
test
rcll
mov
add
out
add
mov
cmc
jo
add
mov
push
jb
add
call
mov
push
push
push
push
push
push
lea
push
push
call
add
lcall
xchg
movb
add
add
pop
arpl
lret
repnz
test
mov
jne
js
mov
sub
pop
add
push
push
rol
pop
push
push
push
push
push
call
outsl
lds
add
add
jge
ret
jl
add
jo
jmp
lcall
add
shll
mov
add
add
imul
in
add
in
lock
push
push
lea
push
push
push
lea
push
lea
push
call
out
add
pop
add
test
mov
outsl
mov
js
add
ror
mov
mov
add
iret
mov
in
leave
clc
aad
add
sahf
add
fadds
test
lock
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
test
into
add
fidivrs
mov
test
test
int3
add
mov
mov
mov
add
hlt
nop
mov
nop
rolb
jle
xchg
cmpsb
test
jae
add
les
xlat
add
mov
add
mov
add
pop
or
add
xor
pop
pop
push
push
push
lea
push
push
push
push
push
call
fildl
mov
nop
pop
mov
scas
add
add
add
mov
add
jae
enter
loopne
lcall
push
cmp
push
push
lea
push
lea
push
push
call
rolb
jmp
jo
add
add
subb
jge
push
add
add
add
cld
add
mov
cli
jbe
fsubp
popf
push
add
data16
xchg
add
add
test
add
add
add
lret
call
sub
mov
push
ror
sub
pop
shr
add
push
add
inc
pop
mov
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
cltd
add
mov
add
mov
cltd
add
test
add
test
cltd
add
add
mov
jo
pushf
add
cmpsl
add
add
rolb
add
in
mov
popf
addr16
out
rcl
in
fcompl
fsts
xchg
cld
xorl
add
add
lods
mov
icebp
lods
lds
lods
fdivrs
in
add
in
jbe
pop
push
movsl
aad
clc
fstpt
jmp
add
push
add
in
clc
lcall
jae
push
lea
push
lea
push
push
push
push
push
call
xchg
add
in
sti
add
add
add
add
jp
add
add
jp
lret
jb
lcall
pop
std
jne
jne
push
add
add
je
pusha
add
jno
push
mov
in
in
lcall
inc
clc
push
push
push
push
push
push
push
push
call
stos
ljmp
add
xchg
test
movsb
add
add
add
add
mov
popf
add
pushf
push
mov
lcall
jnp
push
push
call
or
mov
hlt
add
add
movsb
add
add
movsb
andb
add
je
addr16
xchg
mov
cmpsb
fldcw
sub
pop
add
push
rol
ror
pop
xor
push
push
push
push
call
mov
add
xlat
mov
add
jns
aad
add
and
add
xchg
add
add
bound
pop
loope
in
lock
lea
push
push
push
lea
push
lea
push
push
call
xchg
add
jecxz
jecxz
test
stos
stos
pop
scas
je
int
mov
scas
add
aad
add
loopne
add
in
call
inc
pop
add
push
shr
ror
lea
shl
pop
xor
push
push
push
push
lea
push
push
call
mov
add
fprem
loop
jns
imul
stos
cmpsl
subl
mov
push
xchg
mov
shrb
ret
in
add
lds
add
gs
mov
pop
data16
rolb
add
add
in
add
jmp
into
lds
mov
pop
rol
push
push
push
lea
push
call
test
mov
test
jl
filds
mov
out
add
mov
add
lahf
add
pop
mov
mov
push
jge
mov
lcall
lock
nop
nop
push
push
push
lea
push
push
call
out
push
mov
jmp
insb
add
add
add
gs
mov
mov
push
notl
fs
add
imul
mov
in
lcall
add
pop
push
push
lea
push
push
push
lea
push
call
mov
add
mov
push
add
add
add
xchg
add
pusha
mov
enter
movsl
add
pop
aad
sti
push
xchg
add
shlb
sub
pop
nop
push
lea
push
push
lea
push
push
push
push
call
add
mov
popf
testl
add
mov
faddl
jno
add
scas
outsl
add
push
add
arpl
add
add
js
popa
fldenv
mov
xchg
fdiv
xchg
push
mov
xchg
add
into
fildl
add
add
mov
add
pop
nop
push
add
sub
inc
pop
inc
nop
push
not
pop
nop
push
xor
not
pop
cmpb
jne
add
push
sub
not
sub
not
pop
nop
push
lea
ror
pop
nop
push
shr
sub
pop
cmp
je
nop
push
shl
sub
pop
nop
push
push
push
push
push
push
call
arpl
add
pop
add
add
add
in
mov
add
pop
popa
add
fnstenv
cwtl
add
imul
add
add
rolb
sahf
add
add
xchg
sub
pop
inc
nop
push
push
push
push
push
lea
push
push
call
rolb
add
mov
in
add
add
add
arpl
add
push
ja
add
int3
xchg
xchg
jecxz
in
in
lcall
cmp
jb
push
push
lea
push
lea
push
push
call
mov
add
fisubs
fiaddl
mov
std
pop
repnz
add
ret
stos
add
jp
jne
add
push
adcb
add
leave
jecxz
add
add
jns
add
mov
jbe
push
jge
add
add
mov
loopne
bound
rclb
push
push
push
push
push
push
push
push
call
mov
xlat
add
add
mov
add
add
subb
mov
add
rorb
xchg
sahf
add
ljmp
lods
cmpsl
popa
clc
add
and
test
int
sub
pop
jmp
push
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
jnp
bound
add
mov
neg
add
rcll
mov
pop
int3
pop
add
pop
xchg
add
xchg
movsl
add
add
add
add
add
jmp
in
add
add
xorb
add
fnstcw
add
xchg
out
in
fcomps
rcll
mov
jbe
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
leave
pushf
roll
add
pop
add
mov
je
mov
mov
lret
add
ja
xchg
xchg
imul
add
lods
add
jne
jns
stos
add
add
ret
popf
rcl
mov
add
js
mov
in
fcomps
mov
jb
inc
sbb
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
sar
add
add
popf
pop
add
add
mov
add
add
aam
mov
mov
cld
xchg
popf
xchg
icebp
movb
add
add
xchg
fidivrs
flds
shl
mov
out
in
fdivr
lcall
rcll
jo
cmp
mov
push
push
push
call
movl
mov
outsl
add
add
cmpsl
pop
add
jmp
push
add
jbe
add
fs
out
mov
mov
add
sbbl
lcall
dec
hlt
push
lea
push
push
push
push
push
push
push
push
call
push
add
cmp
xchg
add
jno
jns
jne
add
icebp
test
pop
add
xchg
mov
movsl
cwtl
mov
jns
add
js
imul
add
sub
pop
xor
push
push
lea
push
push
lea
push
lea
push
call
add
add
mov
mov
gs
push
add
xchg
add
add
pop
test
add
add
add
add
testb
call
add
movb
out
add
mov
add
fadds
add
lock
add
add
leave
add
add
rolb
nop
add
loope
push
pop
xor
push
push
call
add
roll
leave
cwtl
mov
fs
in
mov
pop
push
add
add
pop
add
addr16
add
repnz
faddl
cli
pop
push
jae
push
jle
jp
pop
mov
ret
add
loope
lahf
add
add
rcrl
jle
flds
out
stc
add
je
rolb
push
movsb
add
jecxz
popf
stos
mov
in
clc
lcall
loope
push
lea
push
call
pop
add
enter
fiaddl
add
pop
pushf
add
test
fldt
jmp
cmc
add
out
mov
aad
add
add
faddl
add
mov
add
add
cmpl
add
add
mov
xchg
jns
test
xor
shl
push
lea
pop
xor
push
push
push
push
push
call
imul
add
bound
lcall
mov
cmpsb
mov
push
add
pusha
add
add
add
add
imul
sub
pop
mov
push
add
not
add
pop
add
push
pop
pop
push
ror
not
xor
pop
pop
push
sub
xor
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
lods
pop
add
jge
std
loopne
add
faddl
in
sti
icebp
mov
insb
in
bnd
movb
iret
fs
add
ret
fiadds
lcall
push
push
lea
push
lea
push
push
call
out
ficoms
mov
in
fwait
in
jns
ja
push
mov
add
int
add
out
sbbb
sub
pop
leave
ret
push
push
push
lea
push
push
push
push
push
call
mov
insb
lret
loopne
mov
fs
add
out
sar
push
jne
subb
clc
add
jnp
add
lods
add
insb
add
add
add
call
hlt
mov
add
sub
pop
push
push
push
lea
push
push
call
xchg
add
add
je
add
pop
push
in
movsl
add
add
aam
add
add
test
jl
mov
flds
xchg
test
add
popl
add
jbe
cmc
add
lcall
in
push
push
call
rolb
pop
add
xlat
xchg
add
jmp
add
into
push
mov
stc
out
add
popf
flds
scas
aad
push
arpl
fldl
add
mov
jo
xchg
jl
testb
cli
add
lcall
push
xor
pop
push
push
xor
not
add
pop
push
push
dec
sub
pop
push
mov
push
sub
lea
pop
mov
mov
push
dec
add
dec
xor
pop
test
je
mov
push
shr
not
add
pop
test
je
push
push
push
call
jge
jae
pop
jbe
add
mov
sahf
int3
add
add
add
enter
mov
pop
add
add
push
add
add
add
imul
in
add
roll
lcall
testl
shl
pop
inc
push
lea
push
push
push
push
call
add
arpl
movl
add
add
sti
pop
cwtl
movsl
add
cmpsb
sahf
xchg
pop
fildll
bound
fwait
cwtl
mov
add
les
test
add
push
mov
pop
clc
repnz
push
add
add
mov
sub
pop
cmp
je
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
xlat
add
movsl
add
jp
mov
add
scas
add
fnstsw
xorl
add
add
lret
mov
testb
pop
stc
add
cltd
add
xchg
les
nop
fwait
add
pop
mov
add
in
add
pop
js
outsl
in
out
add
jbe
in
fdivr
lcall
rorb
movl
push
pop
inc
push
push
push
push
push
push
lea
push
push
call
add
add
mov
mov
mov
fs
in
add
aad
mov
add
add
add
add
add
add
ret
add
data16
lods
andb
push
std
mov
loopne
lret
test
insb
jl
jne
shll
cmp
je
push
push
push
push
lea
push
push
call
add
add
lea
stc
mov
add
add
jge
push
add
add
add
jo
sub
pop
test
jne
xor
push
shl
pop
pop
push
dec
xor
pop
pop
push
push
lea
push
lea
push
push
call
jle
pop
add
je
jge
mov
lea
test
push
cmpb
add
lods
stos
movsb
add
popa
push
mov
pushf
incb
add
stc
iret
add
lods
sub
pop
pop
pop
push
push
push
call
imul
xchg
out
mov
mov
mov
xlat
inc
movsl
lahf
mov
call
sub
pop
leave
push
lea
push
push
lea
push
push
lea
push
push
call
add
fwait
jmp
add
in
bound
clc
cmc
arpl
hlt
xchg
add
mov
add
add
add
add
add
push
xchg
add
and
add
add
sti
add
je
ret
add
mov
sti
pushf
andl
add
add
mov
add
in
in
lcall
or
push
add
lea
lea
pop
mov
inc
push
inc
lea
not
pop
cmp
jne
lea
push
push
push
push
push
push
lea
push
push
push
call
add
lds
add
mov
add
add
notl
add
add
xlat
jns
add
jb
add
jl
jle
sub
pop
mov
push
add
pop
test
je
mov
push
push
push
push
push
lea
push
call
fidivrs
loope
test
popf
jmp
add
jge
jns
push
arpl
shll
add
lret
add
ja
add
movb
push
lea
push
push
push
push
push
push
lea
push
call
add
lcall
popa
add
test
ror
add
arpl
jecxz
add
popf
in
ljmp
imul
popf
xchg
add
lcall
loopne
test
sti
call
shrb
aam
rcrb
inc
add
jmp
pop
test
je
push
not
not
not
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
call
shrb
jae
insb
add
pop
loopne
pop
add
add
mov
add
xlat
push
cmc
add
shl
lahf
add
lcall
lcall
roll
shl
lea
shr
pop
cmp
je
jmp
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
scas
add
fisubl
add
add
call
pop
jl
test
test
sti
gs
add
mov
mov
pop
push
into
add
sub
pop
xor
pop
push
sub
sub
pop
pop
push
lea
rol
shl
sub
pop
pop
push
push
call
add
in
add
push
add
mov
fisubl
in
mull
push
imul
mov
xchg
add
add
pop
push
arpl
frstor
in
loope
add
cmpsb
lret
shlb
add
lcall
push
dec
pop
leave
push
xor
shl
pop
ret
push
sub
pop
lea
push
shr
add
pop
pop
pop
push
push
push
push
call
nop
mov
jmp
leave
add
jnp
add
shlb
add
shl
jno
add
sahf
add
fdivr
mov
xchg
add
add
arpl
mov
sarl
add
jo
ljmp
lock
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
pushf
add
xchg
add
jecxz
add
pushf
lods
lcall
mov
in
incb
in
leave
lret
add
add
roll
lcall
ret
push
sub
add
ror
not
pop
mov
pop
push
lea
push
push
push
call
pusha
push
jb
cwtl
addr16
aam
clc
mov
mov
lret
enter
mov
in
add
fcoms
sub
pop
pop
push
push
push
lea
push
lea
push
push
push
call
js
add
repnz
in
jo
enter
add
test
add
mov
jecxz
shll
imul
insb
les
add
mov
loop
add
loope
add
push
mov
lds
add
sub
pop
pop
push
add
pop
pop
push
push
push
lea
push
call
int
add
xchg
test
add
rcr
xchg
mov
add
imul
add
jl
push
xchg
add
arpl
shrl
add
add
call
jecxz
add
cmpsb
leave
pop
add
out
addl
sub
pop
leave
push
dec
pop
ret
out
jl
iret
out
or
iret
mov
mov
iret
iret
jae
iret
iret
xchg
mov
iret
iret
out
fmul
iret
out
iret
iret
iret
incb
int
push
jne
mov
addr16
dec
inc
ret
out
sbb
cwtl
dec
jb
in
sub
sub
xor
mov
shrb
push
js
ss
mov
cmp
popa
das
shrl
cmpl
or
faddl
jno
sarb
mov
ds
into
jp
cmp
xor
gs
hlt
fists
adc
jp
sub
dec
movsb
sub
into
arpl
cld
add
sub
cmp
je
jno
fdivs
icebp
pop
ficoml
sbb
push
and
scas
add
mov
add
aaa
jecxz
add
das
xchg
cmp
push
fnstsw
sub
pushf
adc
mov
xor
push
jbe
fmuls
mov
stc
jo
jp
jae
fdivl
cmp
sbb
aas
add
xchg
insb
aam
xchg
aad
mov
sbb
lea
dec
mov
lds
jbe
stos
mov
stos
sti
call
fimull
hlt
xor
pusha
xor
popf
sar
add
mov
ljmp
or
lock
mov
cmpsl
pop
loop
divl
aas
adc
pop
pop
shll
cltd
push
das
jmp
xor
pop
scas
out
adc
fsubp
sub
out
test
sbb
mov
scas
outsl
or
jle
lods
sbb
push
mov
sub
push
insl
xlat
or
jp
add
push
sahf
jns
pop
jno
xchg
dec
lcall
jae
aam
and
sti
fcomps
roll
push
divl
sti
and
lea
xchg
repz
and
mov
xor
loopne
fistpll
xor
xchg
js
lret
stos
xor
scas
xchg
mov
pop
pop
xor
mov
cmp
pop
jbe
push
out
icebp
cmp
add
popf
xlat
movsl
cwtl
ds
out
hlt
loopne
inc
insl
fisubs
enter
out
in
int3
sbb
fs
repz
or
pop
jo
and
push
sbb
dec
ljmpw
loopne
mov
push
hlt
or
mov
mov
lret
mov
pop
cmc
jnp
dec
aaa
mov
fdiv
imul
scas
call
popf
es
cmp
push
xlat
add
mov
stos
loope
pushf
pushf
into
sub
pop
andl
inc
push
leave
dec
iret
cmp
iret
xor
push
loop
jae
jmp
fisubs
adc
hlt
add
repz
cmc
mov
push
sti
stc
lahf
incb
pop
cmpsl
or
jbe
movsb
sub
xorl
jns
cmp
inc
fnsetpm(287
rcl
popa
adc
rdmsr
ret
loope
sub
mov
cli
fnstenv
fistpll
mov
mov
cli
fst
push
aas
call
cld
xchg
fistl
lret
dec
ds
lret
insl
lret
movsl
lahf
sbb
cli
fidivs
add
scas
xor
xor
inc
push
mov
xchg
or
cmp
je
jbe
dec
sub
enter
mov
inc
pop
push
xchg
nop
jmp
add
xor
rcrl
std
movsl
lods
mov
jp
push
je
add
and
ss
or
movsl
jno
or
cmpsb
adc
push
pop
push
mov
lods
les
enter
clc
pushf
out
rorb
sti
push
es
mov
jmp
cmc
and
pop
push
fildll
cmp
cmpb
je
jae
inc
jg
lahf
fstl
dec
pop
add
mov
mov
into
adc
cmp
mov
cwtl
hlt
cmp
xor
mov
add
add
mov
pop
xor
mov
into
adc
add
mov
fcmovne
lcall
inc
cmpsl
fcomi
rcl
jns
sbb
sarb
fcoml
mov
jnp
cld
test
adcb
aaa
adc
insb
and
in
into
in
or
or
iret
roll
fs
aas
out
cs
mov
mov
stc
jb
push
movsl
imul
imul
inc
mov
and
fimull
les
xor
or
pop
push
aas
jae
push
fistpll
add
mov
jns
and
mov
int3
mov
or
test
movsb
dec
xchg
sub
mov
and
cmpsl
hlt
push
add
push
daa
stos
lea
in
rcrl
jp
fs
jl
inc
push
int3
rol
mov
xchg
stos
push
test
popa
repz
inc
loope
out
pop
add
pop
jl
loopne
stos
rol
lahf
mov
popf
call
push
arpl
out
cmpsb
and
rol
mov
mov
or
fst
in
inc
mov
subb
mov
daa
or
sbbl
movsl
lret
fwait
dec
lock
jbe
enter
cmp
aad
orl
pop
cli
ja
cmp
xor
outsb
cs
mov
test
insb
lods
cmp
inc
cmp
mov
imulb
mov
movsb
ljmp
mov
fdiv
divl
inc
jmp
dec
cld
mov
pop
mov
mov
xlat
mov
and
mov
stos
loope
test
xor
dec
xchg
outsb
mov
aad
ret
lock
adc
rorl
xor
dec
cmp
jl
push
mov
sti
movsb
data16
sbb
sbb
cmp
mov
dec
and
push
mov
out
sub
sbb
adc
cmpsb
js
std
jecxz
push
sub
inc
dec
push
pop
adc
or
dec
inc
cwtl
pop
cmp
in
and
pop
mov
xchg
add
xlat
out
movsb
mov
mov
xor
jo
xchg
ljmp
push
pop
daa
idiv
mov
adc
lahf
insb
mov
pushw
mov
imul
mov
pop
inc
test
ds
jb
jno
out
add
test
or
outsl
jno
push
pop
sahf
or
mov
mov
icebp
and
fisttps
ja
mov
pop
push
mov
ljmp
add
nop
pop
cmp
into
sbb
in
push
lods
jae
jns
lret
sub
dec
and
dec
or
ret
xchg
mov
cmp
xchg
or
imul
push
xor
or
lock
mov
enter
xlat
daa
and
mov
jp
mov
hlt
mov
jo
xchg
mov
stos
fcmovu
pop
xchg
mov
daa
ds
imul
jmp
fnstenv
inc
mov
dec
andb
adc
sti
in
mov
lret
ret
sbb
sbb
iret
rorl
or
push
inc
xchg
jle
sub
mov
ljmp
jge
adc
ret
shlb
sbb
scas
add
push
xor
in
sub
cmp
sbb
xor
pop
push
rorb
mov
loop
xchg
xchg
orl
out
or
das
ficoms
lcall
add
call
test
mov
mov
or
xchg
gs
sbb
jne
jae
ja
jecxz
mov
cmp
pop
fstl
fsts
daa
cmc
out
cmp
push
xchg
jbe
push
push
scas
lods
ljmp
dec
arpl
xor
repnz
mov
jns
or
in
hlt
mov
mov
sub
fmulp
icebp
js
ret
in
out
inc
scas
call
es
jb
inc
insl
xchg
lods
push
int
jbe
push
xchg
loopne
je
rclb
rorb
sub
cmpsl
pop
iret
imul
and
insb
push
add
movsl
adc
sub
push
or
xchg
call
xchg
out
jb
dec
mov
scas
popl
dec
and
arpl
or
jg
movsl
inc
mov
adc
ds
leave
push
int
adc
push
dec
xchg
add
mov
into
jl
mov
jnp
pop
scas
rclb
dec
mov
vpand
or
or
mov
adc
xchg
jns
pop
jle
mov
fsubrs
mov
test
ficomps
mov
sbb
stos
xlat
xchg
int
pop
test
xchg
or
add
gs
mov
out
adc
fisttpll
cld
mov
into
push
call
sahf
inc
cs
es
fisttps
pop
cmp
sub
xchg
or
in
adc
mov
inc
add
arpl
lret
jne
adc
je
xchg
dec
scas
xor
inc
xor
nop
pop
cld
lret
sub
shll
cs
push
adc
pop
mov
pop
in
adcl
sub
es
fidivs
dec
sarb
out
int
es
cmp
inc
lds
and
fcoml
mov
fidivl
add
inc
into
imul
adc
and
fistpll
roll
push
in
mov
mov
jno
jecxz
or
cmp
cmp
test
dec
push
jns
mov
mov
mov
mov
addr16
ja
adc
or
hlt
add
jno
jbe
inc
fildll
push
ficoml
out
push
and
repnz
cmp
pop
leave
aad
inc
mov
and
fcomps
sub
pop
scas
sbb
pop
add
cmpl
sbb
xor
test
shrl
fwait
outsl
ja
dec
movsb
xor
dec
into
jmp
movsl
fisttpll
das
lock
cltd
dec
pop
sub
fldl
mov
fdivs
mov
mov
in
xchg
xor
jge
cmc
inc
mov
pop
dec
arpl
clc
add
inc
mov
ret
fists
jmp
call
repnz
push
sbb
stos
inc
adc
pop
repnz
pushf
add
sahf
or
leave
mov
mov
pop
icebp
push
pop
xchg
arpl
push
or
sarb
fstpt
popf
mov
push
mov
aas
ljmp
ljmp
out
jecxz
cmp
out
fucomp
enter
and
inc
xorb
imul
popf
push
or
mov
movsl
repz
movsb
cld
sti
jae
push
jl
out
jnp
popf
push
cmp
or
ret
jne
nop
outsl
in
test
addb
xchg
inc
sub
and
test
mov
out
ja
jle
ficoms
xchg
cmp
test
fsts
fisttpll
cmp
sbb
in
and
idivb
pop
mulb
sarb
sub
and
pop
push
xor
jmp
cli
in
add
jo
pop
sub
incl
and
mov
xchg
in
push
imull
pushf
fdivrs
fisttpl
mov
repnz
ljmp
ljmp
nop
rcll
adc
mov
adc
cmp
ja
pop
gs
fdivrl
pop
cltd
xorb
iret
lods
mov
jbe
cli
clc
nop
mov
sub
mov
fcmove
nop
in
pop
cmp
push
insl
lret
scas
push
int3
inc
sbb
js
mov
push
cmp
jge
outsb
jbe
loope
data16
or
insl
out
sbb
and
movsb
mov
insl
clc
iret
xchg
shrb
jnp
je
xchg
xchg
and
and
lcall
inc
sbb
pop
sbb
pop
aaa
out
fcmovu
mov
js
movsb
adcl
clc
adc
jb
rorl
sbb
data16
ljmp
mov
rol
aas
sbb
stc
adc
lahf
out
mov
les
xchg
xchg
cs
aam
cmp
cs
int
push
pop
pop
jbe
inc
lcall
cmp
dec
dec
pusha
les
mov
adc
js
mov
pop
ja
pushf
xor
fidivl
out
add
scas
push
pushf
lret
cs
sub
xchg
push
pop
cmp
push
jno
shlb
into
js
lret
fmuls
lcall
mov
xor
jno
xchg
mov
and
lods
or
jnp
std
dec
push
xorl
mov
in
xchg
or
xchg
jge
push
pop
add
ds
in
mov
jne
mov
lcall
sub
repnz
addl
mov
call
roll
test
into
test
fildll
inc
adc
nop
xchg
je
add
out
movsb
cs
adc
xorb
aam
lods
sub
ja
inc
cmpsb
jecxz
add
ss
out
pop
push
jno
xor
fstl
push
mov
shrb
ret
dec
hlt
into
mov
or
xor
out
pop
push
orb
cmc
xor
pusha
out
dec
neg
mov
sub
test
ds
jg
mov
call
out
xchg
sti
aam
dec
xor
add
lock
aam
inc
int3
repz
sub
inc
lret
mov
dec
in
dec
leave
jmp
cli
popa
push
fsts
mov
rclb
push
ret
sbb
mov
pushl
push
xor
push
insl
inc
mov
mov
dec
adc
data16
sbb
jmp
pop
mov
mov
jle
fiadds
cltd
shl
test
movsb
mov
jmp
mov
mov
iret
imul
push
jbe
inc
sub
enter
loope
xchg
inc
mov
adc
push
movsb
cmpsb
loop
inc
addr16
or
aad
cmp
inc
sub
mov
out
xchg
das
fdivrs
call
add
push
movsb
mov
rcll
fcmovb
mov
jae
roll
dec
rolw
cmc
jns
mov
pop
add
add
in
rcl
jge
aas
push
sub
add
mov
loopne
jecxz
int
imul
pop
jo
enter
mov
mov
push
lret
in
int3
orl
pop
rclb
and
jae
and
iret
cmp
mov
mov
pop
mov
sub
imul
sarl
adcb
adc
push
xchg
scas
or
mov
push
shrb
sbbl
je
cmp
sbb
wbinvd
sahf
rcrb
xchg
mov
xchg
inc
cmp
pop
xchg
xchg
lret
jns
mov
or
dec
mov
lret
stc
push
adc
bound
nop
nop
and
pop
mov
sbb
jge
mov
sti
in
fdivrl
scas
mov
lds
repnz
shll
das
sbb
cmp
mov
rclb
cmp
aas
nop
into
sahf
imul
mov
or
and
dec
ret
xchg
jno
cmpb
or
outsb
add
addr16
idiv
cmp
fsubr
lret
shr
mov
movsl
mov
pop
xor
sub
sar
jp
inc
cmpl
aad
push
sbb
push
sub
adc
fisubl
sbb
jno
aam
inc
jge
add
jnp
out
inc
push
iret
fisubrs
jne
lret
fdiv
clc
dec
iret
push
xchg
jp
aad
call
pop
lcall
fs
sub
and
das
test
fcom
push
lret
insl
pop
in
mov
ja
xor
or
adc
sbb
stos
jne
sbb
jnp
lds
cltd
leave
mov
mov
dec
or
test
stos
int3
mov
popa
insb
dec
sbb
xor
and
and
shl
mov
mov
lret
xor
jnp
cmc
int3
xchg
xchg
jmp
aad
stos
or
dec
mov
mov
push
jb
iret
bound
in
rcl
add
or
pop
xchg
scas
outsb
test
push
cmp
ror
push
lods
lahf
dec
sbb
push
hlt
push
lret
aam
aaa
cmc
mov
jecxz
pop
sbb
int
lret
lgdtl
inc
and
adc
repnz
or
je
inc
ret
ja
int
and
rcrl
in
push
and
mov
aas
in
cmpl
stc
xchg
adc
jecxz
and
roll
out
add
push
fimull
ficoms
push
push
ret
inc
out
mov
push
adc
xor
cld
fwait
mov
xor
pop
mov
filds
xchg
movsb
push
or
or
addb
into
xchg
rcll
mov
adc
out
xchg
int
stos
cld
and
mov
movsl
fbstp
cmc
decb
enter
int3
movsb
movsl
sub
loop
lea
mov
push
sub
jl
cmp
xor
adc
fsubl
mov
pusha
repnz
mov
pavgw
mov
outsb
or
sahf
rolb
sub
mov
rorb
popf
pop
shl
in
cmp
mov
mov
hlt
adc
adc
pop
mov
bound
sbb
test
mov
inc
inc
mov
fistpl
ret
rorb
jmp
or
and
stos
subl
cmp
es
decl
in
insb
adc
jb,pn
pushf
dec
mov
xchg
das
lods
iret
add
push
push
call
and
cmp
nop
sub
cs
out
shll
lods
popa
in
addb
mov
mov
jp
inc
incb
sbb
lahf
add
sti
xchg
cwtl
jmp
mov
cmc
in
pop
aam
or
cwtl
daa
push
pop
mov
inc
insb
dec
xor
adc
in
or
ljmp
sarl
insl
cmp
inc
pop
xchg
push
fld
mov
ss
mov
int
mov
jae
mov
std
or
cmpsl
test
or
adc
sub
arpl
mov
lcall
jns
cmp
mov
jb
repnz
xor
mov
lahf
and
jmp
mov
and
push
leave
xor
addb
fsubr
imul
incl
rolb
jae
cmp
nop
repnz
or
insl
pushf
cmp
mov
cmpsl
sub
sti
jno
pop
cmp
test
into
push
adc
stos
stos
sbb
jg,pt
icebp
fsubp
and
mov
in
sbb
aaa
sub
inc
out
jae
ret
lret
jg
mov
jbe
mov
clc
cmpsb
mov
les
jbe
cli
sbb
test
inc
fwait
in
movsl
test
jmp
inc
jmp
xor
test
test
pop
dec
int3
into
mov
xor
jecxz
dec
jno
dec
pop
lods
mov
imul
inc
sub
adc
pushf
mov
pop
push
adc
and
dec
daa
subl
push
mov
add
sahf
cmp
pop
int3
addr16
sbb
mov
push
into
ja
push
ja
mov
xor
pop
shll
push
jno
nop
fisubrs
push
sarb
out
das
rcrb
dec
mov
mov
mov
push
dec
mov
push
push
fstpt
push
lock
sub
dec
gs
test
repnz
aas
fcmovu
xchg
xchg
and
fisubrs
adc
push
insb
not
xchg
xlat
pop
out
adc
cmp
and
bound
dec
insb
cmc
shll
std
pushf
int3
xor
cmpsl
addr16
leave
jo
mov
mov
insl
arpl
sbb
mov
into
mov
inc
ret
imul
outsl
sub
call
jno
js
popf
dec
adc
enter
and
fdiv
xlat
addb
fistps
pop
and
xor
insl
jle
add
or
or
cmpl
clc
inc
mov
xlat
mov
cld
jp
sub
cli
xchg
shrl
cmp
daa
push
jo
aas
mov
lcall
sub
in
dec
vpsubusw
and
pop
sbb
xchg
pop
xor
insl
mov
test
into
and
xlat
shll
insl
test
inc
inc
test
fcompp
cmp
leave
fistl
mov
cmp
inc
cmp
repnz
push
xchg
aam
push
mov
cmpsl
sub
inc
push
aas
push
das
pop
mov
repnz
or
or
addr16
mov
lea
mov
aas
inc
divb
lds
enter
mov
or
push
sub
push
fwait
int
fadd
pop
xor
pop
loopne
sub
mov
add
fcmovb
in
mov
adc
sbb
jg
imul
fistps
test
cs
mov
test
jge
cwtl
jno
mov
push
lret
icebp
out
mov
dec
jmp
and
sub
pusha
leave
mov
jl
test
sub
inc
jmp
das
pusha
rorb
jle
test
cmpsb
sbb
jb
sbb
push
dec
outsb
insb
mov
aaa
shrl
mov
mov
xchg
pushl
cltd
mov
cmp
dec
lock
int3
int3
add
xchg
testb
dec
cmp
hlt
js
imul
sbb
rcll
je
pop
xchg
in
mov
sub
jle
movsl
dec
insb
sti
adc
fprem
test
mov
scas
inc
push
push
xchg
nop
dec
lds
lock
loope
mov
scas
aas
jno
push
sti
inc
sub
jge
jo
sbb
jns
sbb
add
mov
jns
and
icebp
subl
push
mov
pushl
mov
sub
pop
adc
nop
push
jns
shll
cmp
faddp
dec
xchg
xchg
jmp
icebp
loop
popf
sub
aam
sub
xchg
sbbl
or
mov
in
je
sub
and
js
adc
and
fdecstp
cmp
pop
push
xchg
pop
jl
lds
add
orl
inc
dec
fbld
mov
pop
int
pop
ldmxcsr
sub
push
sahf
aam
inc
test
lcall
or
jno
sti
push
add
add
push
fists
adc
push
movsl
pop
cmp
les
lock
mov
es
aaa
push
sarl
push
roll
jmp
movsb
out
or
enter
mov
adc
cltd
or
std
xlat
sub
enter
push
int3
fstps
xor
cltd
cmpsb
lds
lock
insl
mov
cmp
pop
jne
mov
dec
mov
fcompl
lock
sar
cmc
mov
push
test
addr16
and
mov
outsb
les
add
jmp
mov
jmp
stc
imul
lea
or
sbb
xor
ret
loope
jmp
loop
xchg
sbb
orb
add
jne
roll
cmc
xchg
ja
or
subb
out
dec
cmp
cmp
jl
out
fimull
sti
or
push
fldt
ds
aas
ficomps
das
int
mov
dec
xchg
mov
adc
pop
jg
push
cmpsb
pop
loop
mov
cmpl
repnz
out
push
sbb
add
int3
adc
outsb
lock
fldl
ret
les
push
xor
mov
jle
pop
pop
push
mov
insl
cmp
mov
out
les
in
out
jmp
push
std
imul
es
incl
test
testl
ror
mov
dec
sarl
sbbl
xchg
cmp
movsl
aaa
pop
push
das
cmp
inc
test
mov
int3
popf
adc
sbb
cs
pop
xor
lahf
xchg
dec
daa
fisubrl
pop
fwait
and
mov
into
dec
in
scas
or
cmpsb
es
xchg
call
cmpsl
arpl
call
add
repz
fcoms
ljmp
adc
dec
dec
or
nop
jle
jbe
insb
push
loop
dec
cli
ljmp
js
int3
out
je
cmp
imul
sahf
inc
cwtl
xchg
leave
inc
adc
ficomps
xchg
inc
add
sub
and
cmp
int
sti
repnz
loopne
shl
cli
lcall
setne
xchg
popf
dec
sbb
adc
mov
arpl
hlt
test
lcall
and
test
std
xchg
push
test
popf
out
int
cmc
sbb
arpl
shrl
cld
mov
popa
push
mov
sbb
dec
in
push
add
push
jmp
addl
push
xchg
ss
pop
je
push
and
js
sub
add
jno
cmp
push
notb
loop
rcrl
jne
call
in
pusha
mov
push
sar
and
andb
test
or
sub
mov
sbb
clc
dec
mov
push
aam
jnp
lock
adc
loopne
sbb
add
mov
sub
sbb
pushf
sti
test
es
lcall
push
mov
adc
mov
cmp
mov
mov
fistl
jo
push
xchg
lahf
sbb
mov
mov
ret
cmp
aam
push
sbb
add
sub
pushf
rorb
jmp
test
mov
mov
enter
inc
out
ds
je
sbb
sbb
pop
or
xor
call
push
cmc
adc
sub
xor
outsl
xor
jle
and
jno
jns
mov
insb
and
cwtl
ret
mov
rcrb
dec
mov
xchg
leave
lds
lock
shll
add
jne
pop
popa
mov
push
fwait
rorl
push
push
jo
add
testl
sbb
sub
das
sbb
enter
push
mov
adc
adcl
adc
cs
and
adc
scas
lret
cltd
out
mov
cmp
call
insb
jecxz
dec
cmc
xchg
pusha
sbb
rolb
loop
mov
xchg
xor
sbb
inc
loope
xchg
push
jmp
add
movsb
xor
adc
push
jle
in
sbb
cltd
pop
xor
push
add
sbb
sbb
push
dec
idivl
push
jg
and
ja
sahf
ss
in
into
push
sub
shlb
mov
aam
call
inc
mov
aas
mull
inc
inc
sub
rolb
enter
mov
push
cltd
xlat
arpl
sahf
mov
sbb
inc
mov
dec
dec
inc
adc
inc
popf
adc
cmp
lss
lcall
mov
dec
ret
add
or
gs
cmovae
jl
mov
inc
cmp
add
test
xchg
fcmovnu
shrb
test
sti
sbb
lcall
ss
inc
adc
test
in
mov
in
inc
test
pusha
ds
jo
out
jb
jnp
inc
push
push
shl
addr16
daa
push
push
mov
nop
mov
add
cmpsb
xchg
call
test
cmpsb
ja
mov
in
mov
movsb
jno
pusha
cld
sub
xchg
cld
sahf
enter
sahf
ret
sbb
jge
and
jecxz
mov
inc
fsubl
jno
sbb
pop
cmp
popf
shl
andb
sbb
faddl
bound
test
pop
push
inc
test
push
or
fwait
pop
sbbl
cs
dec
aaa
aam
lret
sbb
jo
cmp
push
repz
sub
sub
pop
sarb
add
mov
pop
inc
std
adc
dec
fisttps
mov
pop
pop
dec
or
mov
inc
into
pop
enter
int3
push
stc
pop
in
lea
jno
loop
mov
aam
xchg
das
stc
push
or
fstl
scas
popa
push
jecxz
mov
mov
insl
add
and
stos
mov
popa
push
jne
aas
loopne
ret
cwtl
and
pop
cmp
sbb
aad
fists
push
dec
cmp
inc
in
cmc
mov
jae
sbb
scas
test
addr16
push
and
add
pop
shlb
push
fwait
pop
lods
push
sahf
jge
mov
cmc
pop
xchg
fistl
notl
ja
cmpsl
ja
xchg
pop
mov
push
test
push
js
out
clc
fs
mov
movsl
jmp
mov
mov
sub
fnstenv
cld
inc
imul
pop
ret
sbbl
push
gs
in
ret
cltd
sub
cld
and
push
push
sub
scas
stc
daa
faddl
imul
pop
mov
in
insb
fcoms
push
xchg
shll
pop
cmpsl
test
in
push
push
dec
test
cmpsl
pop
xchg
mov
aaa
or
mov
and
test
repnz
sbb
adc
jne
fadds
stos
mov
pop
ljmp
fildll
mov
sub
sub
push
sub
push
nop
xchg
hlt
jle
notl
out
mov
push
lret
mov
js
jl
or
and
lock
lea
in
adc
cmc
push
pop
sbb
and
xor
pop
outsb
xor
pop
cwtl
das
jge
aam
dec
mov
loopne
mov
mov
adc
adc
and
lahf
lcall
sti
incb
xchg
push
mov
cs
dec
cld
mov
add
and
mov
push
cmp
xor
cmpl
mov
lahf
outsb
dec
popa
xor
rcrl
lret
jle
sarl
cmp
cmp
and
mov
test
out
loopne
add
add
nop
mov
jge
fs
cwtl
lcall
aaa
sbb
push
nop
outsb
cmp
push
aas
pop
mov
mov
rcr
arpl
scas
mov
ljmp
gs
scas
xor
or
adc
jns
mov
enter
gs
mov
pop
cld
cbtw
call
dec
mov
test
stos
aam
jl
cmpsl
mov
rclb
jl
adc
dec
sbb
cmp
sub
mov
jb
push
aad
mov
repz
mov
shrl
fstpt
or
fnstsw
sub
sbb
test
and
inc
xchg
add
pop
in
sbb
dec
loopne
and
insl
mov
cmp
xor
ljmp
sub
test
out
cli
sbb
pop
imul
sub
popa
sub
inc
mov
cs
mov
sbb
push
pushf
rol
xor
bound
lods
adc
push
fdivs
dec
sub
sbb
dec
fmul
sahf
adc
popa
push
sti
ret
mov
pop
jl
xor
push
inc
jp
pop
les
aam
sub
mov
xchg
jne
aaa
adc
mov
les
push
add
sub
mov
sub
cs
xchg
sub
mov
xor
fwait
insb
in
jecxz
pop
mov
xor
int
paddsw
inc
out
cli
sub
push
jl
xchg
pop
je
fisubs
aam
and
jl
pop
xchg
jg
loope
push
imulb
dec
sub
mov
xchg
fstpt
imul
cmpb
mov
pop
sub
outsb
ss
cmp
cmpb
lahf
adc
mov
lods
icebp
cltd
imul
add
adc
insl
pop
mov
inc
mov
es
fistps
aam
repz
scas
xchg
pop
pop
inc
outsl
in
test
adc
lahf
shll
mov
and
lahf
xor
jmp
jmp
test
push
jp
mov
lock
sub
loop
xchg
test
dec
inc
sbb
dec
lahf
push
xchg
vdivss
cmc
add
fidivl
cmp
lret
imul
pop
sbb
pop
jle
cmp
jne
or
pop
sbb
inc
xorl
test
sbb
add
or
test
not
xchg
sar
stos
insl
scas
sbb
rolb
dec
inc
fsts
cmpsl
scas
push
shr
jb
outsb
ss
jl
and
jnp
fwait
popf
lds
out
mov
rcrb
sbb
mov
xchg
cmp
cmpsb
mov
xorb
leave
cmpsb
add
movsb
jno
lock
mov
and
mov
sub
mov
dec
call
push
in
pop
inc
jmp
in
xor
jp
out
pop
or
push
push
fldl
or
aaa
cmp
sub
ds
cmc
dec
loope
push
imul
roll
add
cmpl
cmp
iret
add
into
dec
mov
sbb
xchg
fnsave
jmp
cli
and
jns
xchg
movsb
push
aam
push
sbb
jmp
movsl
fmulp
add
jmp
add
idivl
aad
ss
ret
push
divl
adc
inc
fsubrl
in
push
fst
or
ljmp
aad
sub
insb
js
sti
mov
xchg
and
and
push
push
mov
sub
ds
push
test
mov
mov
fsubl
lods
jo
mov
mov
data16
jne
add
repz
push
or
jbe
mov
cltd
pop
jae
jp
pop
mov
add
sub
sahf
mov
sahf
mov
pusha
out
imul
out
xor
lods
es
mov
jae
movl
mov
out
xchg
or
xchg
or
and
push
sbb
in
in
dec
into
cmpsb
sbb
cmp
lea
call
negl
sub
xor
ret
daa
add
push
pop
mov
push
sub
jle
push
adc
inc
fadds
inc
mov
pop
adc
stos
andl
adc
xchg
fbld
das
pusha
incl
repnz
stos
subl
pop
pop
sbb
test
bound
and
cmc
stos
push
add
pop
in
mov
loop
bound
fstpt
lea
lock
ret
dec
movl
aaa
movsl
sahf
hlt
adc
clc
adc
ret
add
call
mov
je
insl
js
jne
mov
jge
cs
xchg
cmpsl
scas
cmp
lds
pushf
adc
aaa
sbb
xchg
pop
sub
das
mov
sub
jl
das
push
int3
and
scas
xchg
into
pop
ljmp
mov
mov
mov
rcrl
pop
divb
test
shrb
fcmovnu
in
mov
lds
jns
inc
push
out
push
icebp
xor
jmp
jb
sub
es
inc
mov
adc
sbb
dec
mov
push
inc
mov
xor
dec
std
mov
inc
push
and
jge
sarl
mov
xchg
lahf
or
pop
and
mov
jg
mov
and
cmpsb
mov
cmp
cmpsb
sahf
js
xlat
inc
aaa
insb
aad
out
lea
dec
cli
jb
jb
xchg
xchg
insb
or
cmc
fcompl
in
lock
fsubl
fsub
jae
xlat
xor
sub
std
mov
adc
xchg
leave
lcall
lds
fs
push
sbb
mov
xor
push
mov
or
sbb
test
in
arpl
std
dec
jp
sbb
psrlw
filds
jno
loopne
inc
mov
mov
or
fmuls
jmp
dec
das
lcall
adc
mulb
adc
inc
cmp
enter
jbe
mov
ss
rcll
adc
call
xor
aas
lds
dec
std
dec
jle
cmp
mov
sub
iret
jae
sub
and
scas
aaa
jmp
rep
aad
pusha
and
adc
test
pop
repnz
pop
in
add
subb
cli
ficomps
test
xchg
sti
repz
mov
cs
movhps
dec
xchg
sbb
pop
int3
cmovns
icebp
loop
enter
out
sub
cmp
mov
dec
out
sbb
push
dec
fmull
test
and
sarb
je
xor
lock
mov
push
and
mov
ss
outsb
xchg
gs
cli
stc
push
mov
pop
cmpsb
movsl
mov
mov
push
jo
xor
icebp
jl
sub
mov
mov
add
ds
cmpsb
and
cld
mov
xchg
fwait
arpl
cmp
test
idivb
xchg
cmpl
inc
inc
ja
cs
ficomps
mov
loopne
sub
mov
ljmp
mov
push
adc
mov
inc
xor
or
dec
sub
cli
cli
or
xcrypt-ofb
cmpsl
imul
xor
push
repz
xor
cmp
inc
aad
add
mov
mov
cltd
pushf
adc
xor
bound
int3
push
pop
cmp
loopne
inc
rcll
mov
cmp
mov
inc
adc
popf
push
mov
arpl
inc
mov
popa
loop
jne
popa
rclb
inc
xchg
in
repnz
inc
cmp
popf
sub
int
imul
push
dec
imul
xchg
and
repnz
pop
sbb
cld
pop
scas
lock
sbb
out
adc
inc
aas
mov
jge
mov
pop
loope
mov
pop
sub
cwtl
leave
fsubrl
or
in
push
mov
nop
leave
in
mov
xchg
pop
and
fnsave
lcall
mov
js
xlat
ret
mov
in
ds
aaa
leave
jne
cmp
insb
repnz
jg
dec
push
in
je
lcall
jb
mov
xor
mov
or
sub
ljmp
pop
je
rep
mov
dec
jecxz
dec
jb
lds
mov
push
repz
sbb
xchg
sub
mov
adc
adc
shl
jecxz
jl
mov
or
icebp
cltd
pop
mov
and
fdivrs
test
std
mov
out
jl
rol
inc
rcll
in
mov
xor
jno
jl
loope
and
inc
inc
pop
add
adc
rcrl
xlat
shlb
inc
and
mov
packssdw
mov
pop
imul
movsl
push
push
pushf
adc
out
jl
mov
test
lock
sub
lret
adc
js
pop
ret
add
mov
xor
stc
mov
sub
sar
dec
push
xchg
test
iret
addr16
mov
fcoms
push
pop
inc
stc
insb
sub
push
jb
jp
loop
cmpl
mov
hlt
jge
jg
jnp
sub
fwait
ret
add
pop
mov
aaa
xchg
shll
adc
fdiv
sub
roll
inc
mov
dec
mov
or
les
jbe
popa
jns
inc
jo
adc
mov
je
mov
test
mov
mov
sub
jle
pop
sarb
fidivl
popf
xchg
je
adc
jb
mov
dec
pop
imul
cwtl
sub
mov
sahf
std
mov
test
cmp
in
pusha
fistpll
mov
adc
arpl
adc
shlb
jno
jno
xchg
push
inc
loopne
adc
xchg
lock
lock
push
orl
ret
push
popa
arpl
outsb
popf
push
xchg
ret
jb
gs
scas
clc
sbb
cmpsl
out
xchg
push
lret
jne
jo
xor
mov
lahf
pop
fstpt
adc
in
outsb
lods
mov
jmp
lret
mov
test
in
xchg
sbb
adc
bound
ss
and
ret
repz
mov
addl
and
jns
mov
mov
divb
nop
andb
jnp
out
sub
xor
or
jmp
stos
jae
dec
jp
and
mov
or
pop
ljmp
scas
or
cmp
scas
fists
push
cltd
mov
int
cwtl
aad
fistpl
fs
movsb
cs
loope
mov
js
orb
xchg
jmp
insl
push
adc
nop
aad
mov
stc
or
xor
lods
test
ja
pop
and
mov
mov
lret
jnp
push
loopne
faddp
in
ds
dec
pop
shr
push
push
int3
adc
xor
sbb
mov
mov
and
jmp
xchg
jno
push
inc
insl
xchg
stc
or
rcrl
mov
mov
js
push
loop
inc
repnz
data16
les
test
or
add
push
lret
sti
cmpsb
loopne
in
jae
insb
scas
aad
test
pop
lods
xor
xor
pop
fs
iret
cmpsl
fadds
testb
in
pop
mov
aaa
mov
push
fs
shl
add
sbb
lods
jo
popf
fisubrl
leave
adc
mov
push
notb
mov
movsb
fidivrs
sbb
add
or
fcom
mov
jbe
xchg
add
xor
inc
fwait
push
movsl
enter
xchg
jbe
repz
sbb
lcall
dec
jnp
pop
inc
cltd
or
xor
jno
mov
dec
test
out
imul
subb
aad
inc
cmp
fs
test
lcall
xchg
dec
mov
adc
cmp
repnz
jle
sahf
jbe
mov
sub
sbb
scas
nop
popf
call
in
pop
rclb
inc
sub
dec
or
call
add
pop
jl
mov
sar
js
jne
shrb
pop
divb
dec
movd
inc
stos
xor
cmpsl
add
rcll
sub
sbbl
push
mov
jnp
pop
in
mov
dec
mov
jmp
popa
pusha
dec
or
jp
mov
ja
es
inc
pushf
pop
fdivl
js
cld
sti
adc
mov
inc
push
pop
rcrb
aaa
fists
jle
loop
sub
jmp
fildll
pop
daa
fs
out
loopne
sti
dec
mov
inc
insl
dec
xchg
lea
orb
xor
jmp
jmp
test
shlb
inc
lods
lret
ret
adc
lcall
cld
lahf
ret
enter
push
test
cs
mov
test
pop
lock
fwait
imull
rcrb
xchg
jge
dec
repz
enter
push
dec
jg
xlat
divb
fsubl
push
pop
sub
jge
mov
movsl
sub
sbb
mov
cli
or
adc
cltd
sbb
push
jge
gs
dec
aad
jno
pusha
jmp
aam
dec
xor
mov
inc
test
mov
sbb
cmp
jle
test
xchg
push
jbe
fisttpll
cmp
push
mov
dec
data16
inc
lds
icebp
inc
push
xor
ss
sub
ret
test
xor
leave
mov
icebp
jns
shlb
jecxz
test
in
ror
data16
lahf
jae
add
jb
inc
mov
int3
xor
in
push
jmp
bsr
fnstenv
lcall
scas
cmp
push
lea
jge
iret
inc
lds
xchg
inc
sub
sbb
insb
data16
pop
shrb
daa
inc
lods
clc
push
xchg
arpl
cld
jg
mov
and
inc
cmp
push
xor
sbb
sbb
js
fildl
push
lahf
add
mov
pop
cmp
movsl
mov
jae
int
sbb
dec
cmp
push
jae
jno
ss
push
jle
popa
repnz
outsb
sub
xlat
dec
pushf
imul
subl
mov
nop
and
add
clc
mov
repz
mov
mov
mov
mov
fwait
stc
in
jmp
es
or
stos
mov
cmpsb
mov
cwtl
push
test
test
fwait
jae
push
ds
outsl
pop
repz
mov
cmp
aaa
sti
pushf
adc
sbb
sbb
inc
dec
ds
orb
bound
mov
or
fdivs
inc
or
in
xchg
or
push
arpl
pop
add
xchg
and
cmp
or
ret
sarb
lods
movsl
lret
lahf
jne
jg
cmp
or
imul
lcall
mov
inc
mov
mov
js
push
addr16
repnz
inc
aas
leave
mov
xor
xor
sarb
mov
jne
sbb
xchg
push
jb
push
mov
mov
sarl
shrl
push
adc
repnz
add
jle
inc
aam
lds
or
mov
mov
clc
shrl
repz
mov
jns
fstp
fucom
sbb
movsb
xchg
fdivrp
leave
and
and
xchg
pop
test
repz
mov
lret
inc
popa
sbb
outsl
push
sarb
fmuls
bnd
in
mov
cmpsb
dec
les
lahf
jne
adc
mov
push
jne
pop
fldenv
dec
aaa
xor
dec
adc
sti
or
xlat
fdivrs
stos
adc
push
cmp
and
xor
out
leave
mov
es
addb
shrl
inc
mov
lret
xor
push
into
dec
into
xor
cld
fwait
mov
lock
mov
pop
adc
dec
aaa
push
out
mov
pop
in
mov
sahf
xchg
or
pop
enter
bound
cmpsl
repz
pop
jecxz
leave
ljmp
int
movsb
xchg
inc
int
ret
out
mov
sub
in
push
sahf
pop
xor
xchg
jae
icebp
rorb
test
xchg
jno
rorl
push
repz
add
pop
pushl
mov
cmp
iret
adc
mov
xor
adc
xor
add
add
xor
push
call
mov
jb
xor
in
rol
ficoml
push
stos
jmp
and
jno
and
cmpsb
sbb
mov
cmpsl
andb
les
jmp
bswap
jg
arpl
es
jl
dec
cmc
dec
or
push
popf
xor
outsl
dec
or
in
pusha
ljmp
xor
xchg
pop
and
pop
data16
cmp
inc
daa
push
dec
mov
ficoml
xor
mov
inc
pop
daa
ds
aaa
xor
ret
cmp
sbb
dec
or
add
adc
or
outsb
xchg
adcl
lret
and
sti
mov
mov
sub
cli
into
push
cld
pop
ljmp
ja
dec
mov
pop
cmpsb
mov
mov
repnz
jl
lret
xchg
icebp
mov
sub
addl
loope
cmp
push
jg
mov
jecxz,pt
sbb
sbb
lret
aaa
xor
jb
ja
js
xor
mov
push
push
cmp
mov
stc
jae
bnd
sub
mov
adc
lea
call
test
add
imul
data16
mov
std
out
sbb
and
leave
cmp
cmp
jle
adc
lahf
jl
pusha
pop
sbb
roll
fidivrs
jns
pop
pop
in
or
mov
cmc
stos
scas
mov
movsb
fmul
jmp
jns
pusha
inc
movsl
in
inc
clc
aam
xor
push
mov
jno
sbb
hlt
lahf
fnstcw
out
fisubrl
jle
cmpsb
adc
jl
int3
stos
jp
push
ljmp
adc
cmp
inc
or
xor
pop
insb
or
push
jecxz
pop
repnz
gs
in
push
addr16
movsl
push
cmp
aad
pop
data16
gs
pop
inc
shr
mov
imul
pusha
xchg
rcrl
pop
pop
xchg
in
jnp
fldt
xchg
mov
xor
fidivrl
in
repz
dec
loope
mov
sub
xchg
mov
inc
push
dec
dec
jmp
sub
pop
push
ficoms
inc
out
jge
out
mov
idivb
std
aaa
fcompl
les
ret
lds
ja
lods
jae
test
mov
push
inc
repnz
cmc
loopne
xor
jge
sbb
subb
adc
sbb
adc
adc
jg
faddl
jb
fsubs
mov
stos
cmp
inc
test
popa
idivl
imul
hlt
add
jo
pop
push
lock
out
sbb
and
jne
jg
add
mov
jbe
vpmacssdqh
decb
fnstenv
ss
mov
lods
pop
fnstcw
jg
dec
mov
sub
hlt
loope
aad
repz
or
icebp
adc
dec
fs
lret
les
dec
adcb
test
mov
dec
sub
mov
fstps
loop
xor
mov
imul
ret
imull
cli
add
cmp
je
mov
cmp
sub
xchg
pop
push
sub
mov
mov
mov
mov
push
mov
shr
add
push
push
sub
out
in
clc
mov
jne
jge
cwtl
cmp
inc
stos
mov
outsb
lock
push
bound
mov
das
add
repnz
dec
popa
in
lods
pushf
jecxz
repnz
sbb
pop
and
rorl
dec
mov
testb
jnp
dec
pop
jge
mov
cmpl
std
push
mov
mov
push
es
js
pop
sub
xchg
mov
pop
mov
push
cmp
iret
dec
xor
fisttpl
outsl
mov
daa
xchg
mov
jae
add
out
out
gs
fsubs
aad
adc
test
cmp
fildll
ficompl
xchg
cmp
mov
add
lret
mov
movsb
mov
daa
pop
mov
das
test
mov
dec
das
sbb
lcall
mov
inc
fs
popa
mov
clc
jne
and
into
aas
mov
call
adc
cmp
mov
pop
fldt
orb
mov
das
out
cmp
daa
call
dec
adc
test
xchg
lods
dec
mov
xlat
cmpsb
popa
insb
loop
out
imul
dec
fadd
sahf
dec
lret
pop
lock
das
call
inc
in
xor
pop
fwait
sbb
sbb
pop
fs
mov
sbb
test
inc
ljmp
iret
leave
dec
test
ljmp
mov
cmpsb
cmp
hlt
cwtl
outsl
dec
mov
and
dec
adcl
jg
sub
jo
arpl
push
mov
insl
loop
loope
sub
loopne
xchg
and
inc
cmp
inc
sub
and
fisubs
insb
sub
push
stos
xor
outsb
add
sub
or
and
repnz
ffree
rcrb
unpckhps
xchg
xor
imul
push
and
movsl
xor
cmp
mov
out
in
out
insb
pop
inc
mov
adc
sbb
mov
or
mov
mov
mov
push
leave
scas
decb
aas
and
push
outsl
or
ja
and
mov
or
stos
pop
les
mov
pusha
add
cmp
push
cmp
add
sub
dec
sbb
divb
scas
cmp
sub
pop
cmp
mov
inc
and
lret
insb
mov
push
or
inc
leave
mov
pop
pop
mov
sbb
dec
mov
push
adc
jb
and
xchg
stos
out
xor
out
loopne
push
push
sbb
add
sti
dec
and
ret
int
mov
sahf
jo
cmp
xchg
mov
inc
mov
mov
mov
pop
push
jae
xchg
xor
loop
cs
jg
sbb
neg
push
sbb
cmc
popf
inc
xchg
mov
sbbb
pop
sarl
out
nop
sbb
or
hlt
mov
loop
push
cmpsl
mov
in
repnz
sub
aaa
mov
mov
xor
add
out
or
mov
or
clc
cmp
jmp
or
sub
lds
test
jle
and
scas
pop
mov
mov
cmpsb
mov
inc
aad
xchg
xchg
fisubrl
pop
leave
cli
xchg
imul
cmp
lret
or
xor
sbb
cmp
add
fs
cmp
ret
sbb
clc
xor
push
mov
mov
js
adc
cmp
sub
and
adc
xchg
pop
jb
xchg
cli
xchg
imul
jno
add
lahf
pop
add
test
pop
repz
imul
add
push
test
daa
fldenv
xchg
cmp
mov
jg
adc
or
mov
icebp
adc
pop
ret
dec
jecxz
ja
sbb
cwtl
xor
sti
loopne
jbe
dec
lar
and
cmc
sarb
or
xorb
stos
cli
lods
xor
lcallw
test
int3
sti
jge
mov
icebp
mov
sahf
roll
loopne
add
mov
aaa
loope
push
testl
sbb
add
push
xor
lea
popa
fnsave
adc
and
dec
or
out
shr
xchg
test
or
cld
mov
mov
jb
out
mov
repnz
sub
mov
ja
mov
in
xchg
and
cmp
out
cmp
dec
cmc
mov
adc
pop
mov
cmp
gs
jecxz
pop
push
pop
addr16
fwait
lea
add
push
adc
mov
and
out
inc
adc
push
cmp
cmp
lcall
mov
out
jmp
je
adc
xchg
mov
leave
xor
jl
mov
fbstp
ljmp
aaa
jl
sti
je
cs
int3
pop
xchg
mov
push
iret
movsb
fimull
mov
repnz
dec
xchg
and
xchg
adc
leave
sar
sbb
and
cmpsb
inc
push
icebp
dec
daa
jne
mov
scas
cltd
mov
push
push
fbstp
xchg
mov
in
aaa
and
fs
clc
pop
lods
jl
aam
jmp
add
pop
jo
lds
sub
and
sbb
sbb
call
pusha
lods
scas
in
inc
repz
mov
jbe
xor
xlat
dec
sub
jns
jns
insl
arpl
fidivrl
jb
push
orb
in
mov
call
into
push
push
mov
push
pop
xchg
mov
lods
inc
sbb
mov
push
aad
cltd
fistpl
testl
push
jo
dec
aam
cmpsb
sti
bound
jmp
fisubrl
mov
ljmp
pop
push
int3
pop
add
adc
push
push
mov
inc
loop
cmp
sub
push
mov
int3
psubw
xorl
push
repz
popf
cmp
fisubl
nop
lock
cs
adc
data16
pop
mov
shrb
xchg
pop
jl
clc
shlb
out
add
push
les
xor
jmp
add
pop
dec
cmp
push
mov
sub
adc
test
add
cmpsl
push
fbstp
push
out
imul
scas
inc
lods
das
lods
adc
cwtl
mov
loop
inc
sub
arpl
push
jle
xorb
inc
cmc
cs
aam
in
icebp
shl
outsb
imul
das
and
mov
add
faddl
pop
and
pop
ds
mov
pop
test
xchg
or
iret
mov
pop
dec
or
mov
fadd
subb
xchg
faddl
xchg
push
adc
jo
pusha
lcall
cmp
jmp
adc
inc
jle
push
loopne
ds
ret
je
adc
fsubrs
subb
push
pop
ret
adc
mov
pop
and
in
push
sbb
inc
ret
aas
roll
in
in
mov
lea
cmp
sub
loop
dec
pop
pop
push
dec
outsl
fcmovbe
lock
pop
xor
fisttpll
mov
add
dec
xchg
nop
fbld
js
pop
sub
outsb
xchg
push
lahf
cwtl
add
imul
clc
test
arpl
pop
push
push
pushf
fs
push
mov
cmp
je
lods
sbb
mov
mov
out
aam
nop
sub
sbb
sub
adc
cmp
mov
lock
rcrl
mov
or
call
push
dec
jg
aaa
ja
ss
mov
pusha
cmpsb
out
xor
data16
dec
es
cwtl
and
stos
cmp
imul
mov
mov
das
push
out
mov
cmp
mov
imul
mov
sahf
push
sbb
sti
push
jl
cmp
fstl
stc
int3
dec
in
aas
push
das
cmpsb
xchg
out
pop
sbb
push
addr16
add
aad
call
mov
mov
sub
pop
mov
sub
and
cmpxchg
das
jmp
mov
dec
mov
stos
mov
dec
ja
sub
out
or
outsb
dec
xor
insb
std
fcomps
push
outsl
stc
mov
push
push
mov
int
lock
or
imul
lahf
sub
lods
and
sbb
arpl
or
sub
push
sahf
gs
int3
sub
loopne
fcmovu
in
inc
stos
loopne
mov
cltd
and
sbb
add
fsubs
clc
jo
xchg
aaa
les
adc
xor
xor
pop
aad
mov
inc
pop
into
cmpsl
mov
add
sti
cmp
lds
and
jmp
cmp
jno
or
imul
jg
sti
mov
and
mov
lcall
pop
cmp
repz
sbb
jp
jnp
push
or
jecxz
dec
shl
ret
and
les
pop
pop
dec
hlt
and
clc
cmpsl
in
jg
repnz
push
rorb
ljmp
sti
or
jle
fwait
shlb
into
call
push
test
add
pop
jmp
es
dec
addl
mov
pop
and
icebp
insl
test
push
sub
cmp
icebp
mov
in
mov
add
xchg
mov
sbb
test
xchg
pop
repnz
jp
test
cmp
and
pop
les
xorb
lret
inc
es
fldenv
stc
pushf
js
mov
sahf
jns
xor
scas
cs
mov
pop
or
and
sti
cli
mov
test
push
dec
push
int
jmp
add
cmp
push
or
mov
and
repz
and
cltd
add
jmp
cltd
dec
gs
out
pusha
cmp
add
sbb
jge
jbe
add
jbe
mov
fmull
xchg
pop
and
sbb
lret
ret
fdivl
popl
imul
aas
rcll
push
sub
xchg
xor
jae
gs
pop
pop
jb
cmpsb
mov
and
mov
or
push
sub
mov
lods
repz
aaa
push
adc
scas
lods
imul
mov
insb
shll
sbb
xchg
pop
mov
js
ret
xchg
and
cmp
mov
mov
dec
jns
or
test
sbb
div
dec
cmpl
xchg
inc
out
lds
cwtl
jl
xchg
in
pushf
std
push
jl
outsb
pushf
pop
aam
in
xchg
jae,pn
enter
jg
lret
pop
push
mov
xchg
xlat
insb
mov
movsl
addb
jmp
fisttpl
mov
iret
or
xchg
mov
lock
sti
sbb
jb
xchg
clc
cs
test
xchg
and
push
push
out
dec
and
add
outsl
push
pop
fcmovu
ret
xor
jae
pop
add
or
sarl
inc
dec
pusha
rcrl
mov
in
cmc
leave
aas
mov
out
repz
mov
stos
mov
inc
mov
sub
cs
mov
pusha
ja
push
cmp
rcrl
pop
cmp
hlt
and
mov
and
sub
xlat
xchg
cmp
push
fnstsw
mov
lods
adc
and
mov
mov
jae
pop
jg
and
sub
scas
mov
adc
ret
add
imul
imul
out
jmp
dec
enter
mov
xchg
push
mov
and
fsubs
mov
ficoml
sbb
stos
cmpsl
add
sub
insl
mov
imul
mov
cli
scas
jns
outsl
xchg
inc
cli
and
mov
ja
xor
int3
movsb
insb
add
arpl
ds
cwtl
cmc
test
out
insb
lea
or
mov
cmp
repnz
repz
pop
push
rcll
loopne
inc
mov
in
and
jo
sbb
imul
cmp
gs
jbe
mov
xor
in
clc
popf
jmp
and
fisubrs
bound
out
sahf
inc
fistpl
mov
pop
jecxz
test
test
and
shrb
lds
add
lcall
iret
sbb
movsb
aam
dec
lret
gs
mov
xlat
and
insl
lcall
enter
and
fbstp
add
int3
jle
add
mov
mov
loopne
sahf
cwtl
xchg
pop
push
and
inc
inc
xorl
subb
cld
sub
decl
pushf
or
in
xor
cmc
mov
cmc
or
call
pop
iret
xor
dec
pop
subb
fwait
and
arpl
or
out
jle
and
mov
xor
jo
insb
mov
mov
lods
dec
fcoml
pop
push
jns
in
xor
stc
sbb
mov
ror
push
add
fists
outsb
pop
jecxz
pop
inc
js
cltd
out
lcall
idiv
xchg
pop
in
test
out
and
test
imul
mov
mov
push
daa
ljmp
jnp
cmp
jbe
cs
jo
notb
aaa
add
sbb
push
sbb
in
mov
and
iret
out
push
add
fldl
push
or
insb
mov
cmpb
imul
pop
out
out
mov
int3
mov
not
sub
mov
xor
sbbl
pop
cmp
pop
cmp
jbe
lds
sub
jb
and
leave
add
data16
pushw
fwait
enter
cmp
sahf
or
daa
inc
sub
push
loope
sbb
or
cld
xchg
push
inc
int3
xor
andl
aas
into
add
dec
and
cmpsb
ja
gs
mov
dec
and
jae,pn
stc
add
xor
fs
inc
dec
push
adc
mov
xchg
stos
dec
xor
pop
mov
lods
mov
std
sbb
xorl
push
test
and
xchg
mov
adc
fisubs
out
xchg
add
lcall
int
ljmp
and
cmpsl
pop
cmp
push
stos
negl
xchg
mov
add
fxch
cwtl
mov
lret
mov
and
sbb
dec
xor
roll
gs
int
ja,pt
xorb
dec
fimull
ljmp
pop
and
ja
sub
mov
xchg
out
std
mov
sahf
mov
jns
dec
pushf
nop
les
push
cmc
adc
inc
in
mov
loopne
lea
ds
data16
cltd
insb
mov
ljmp
fcoml
mov
in
daa
enter
out
mov
in
dec
xchg
inc
dec
popf
filds
lret
cmpsl
mov
popa
xchg
movsl
push
jl
mov
shlb
sub
cmp
mov
popf
fidivs
inc
jecxz
xchg
mov
cwtl
insb
adc
dec
xchg
gs
mov
aas
pop
and
ja
sub
daa
or
into
adc
aam
mov
mov
push
daa
mov
ret
incl
ret
rolb
or
dec
pushl
pop
stc
cmp
dec
mov
cld
inc
sub
or
mov
pop
jb
push
hlt
sub
cmp
arpl
adc
testl
cwtl
pop
fiadds
fiadds
pop
popa
push
jp
pushf
add
sub
pop
lahf
mov
mov
pop
push
and
xchg
add
and
pusha
xchg
inc
sub
mov
cmp
les
enter
jns
andb
lcall
pushf
aam
fistpl
nop
sub
fistl
lods
and
fnstsw
pop
out
or
js
push
xchg
cmp
out
mov
les
xchg
xor
cmpsl
enter
pop
out
sbb
mov
pop
pop
add
xchg
in
xchg
cmpsb
mov
pop
mov
ret
ficoml
pop
lret
push
cmc
out
mov
stos
and
rcrb
shll
jo
dec
inc
add
cmp
or
push
das
in
pushf
and
xor
outsl
cmpsb
stc
jnp
add
sub
sbb
mov
int3
cli
lods
lret
sub
inc
fdivrs
leave
adc
mov
cmc
in
js
add
mov
mov
pop
loop
mov
mov
inc
into
adc
xchg
mov
inc
movsl
outsl
popa
pop
scas
jb
sti
adc
int3
add
or
and
js
add
jge
test
dec
das
mov
bound
hlt
sbb
mov
lret
pop
pop
xor
mov
and
clc
lahf
xor
mov
sar
loopne
xchg
jmp
les
inc
movsb
mov
jbe
andb
repnz
mov
call
fistl
mov
lea
and
shrb
xchg
sti
add
clc
mov
xchg
and
dec
aaa
int
mov
inc
xor
cli
imul
cld
xor
insl
sti
sti
movsl
int
gs
jp
fisubs
pop
inc
add
ss
jg
leave
jg
mov
fsubr
jp
mov
jne
push
outsb
out
xchg
outsb
sti
hlt
int3
out
fwait
lcall
jmp
add
add
test
or
lret
inc
lcall
jns
xor
and
sbb
lds
jbe
iret
push
cld
lret
push
push
push
mov
notb
pop
int3
mov
stos
sbb
mov
jno
shrb
or
repnz
sarb
mov
mov
jne
pop
cmpsb
dec
stc
out
or
push
jge
mov
dec
out
mov
das
dec
adc
aas
incb
mov
clc
inc
push
xor
inc
sub
cs
cltd
pop
test
lods
je
add
and
push
xchg
and
enter
fxch
push
cs
sub
pop
outsl
pop
xor
in
fdivs
das
or
mov
js
adc
movsb
cmp
stos
sbbb
lret
scas
sbb
push
icebp
mov
and
pop
fisubrs
inc
sbb
sbb
ljmp
lock
xor
mov
cmpsb
push
pop
adc
cmp
mov
cld
ljmp
cli
cmp
add
mov
adc
pop
pop
mov
repnz
lret
inc
das
dec
ja
pop
jnp
push
xchg
cmpsl
sub
ljmp
sbb
dec
enter
jl
negl
rolb
dec
jmp
leave
push
icebp
and
sbb
repnz
out
mov
xorl
cmp
pop
mov
loope
ds
arpl
orl
shlb
mov
cmp
mov
scas
push
add
and
imul
fldt
fildll
sbb
mov
ljmp
adc
mov
outsb
inc
stos
adc
sbb
sbb
push
and
arpl
mov
xchg
sbb
imul
into
loope
popa
ret
testl
add
fadds
repz
jge
fucom
fs
aad
or
fwait
push
jecxz
fdiv
dec
jecxz
or
mov
mov
loope
gs
xor
xlat
pop
mov
cmp
pop
dec
lahf
lret
and
rcrb
xor
mov
mov
xor
jmp
in
mov
xlat
movsb
mov
mov
js
jle
pop
pop
cmpsb
pop
insb
xor
mov
cmp
mov
imul
and
push
imul
int
pop
in
mov
stc
mov
pop
adc
ror
mov
add
std
xchg
jbe
cld
xchg
insl
outsb
dec
movsb
pusha
or
pop
fisttpll
push
popl
lret
mov
test
test
inc
das
and
mov
pop
mov
sub
mov
cmp
sbb
push
aad
mov
popfw
xor
or
or
pop
push
out
or
rcr
xlat
xor
fdivs
sub
loope
push
xchg
test
adc
popf
xor
aam
loope
addb
mov
xor
incb
jmp
aad
popa
cli
in
push
xor
in
fsincos
inc
clc
sbb
adc
xor
sub
rol
subb
push
clc
add
lret
mov
movb
shrl
shrl
pop
shlb
sub
adc
lock
lret
pop
and
addl
fsubs
mov
inc
push
scas
ss
test
jno
cmp
adc
sub
cmp
movsl
rcrb
nop
jbe
fwait
stos
scas
xor
es
sbb
add
sub
shll
adc
or
cmp
sbb
dec
or
push
rol
test
jno
adc
add
sbb
hlt
xor
xchg
fstpl
dec
add
cmc
jle
jno
ret
push
sbb
and
lock
jbe
and
mov
in
xchg
xchg
cmp
cmp
adc
call
cmp
or
jo
push
and
xlat
push
pusha
movsb
push
dec
push
insb
sbb
repz
cld
add
jecxz
clc
xor
push
pop
jg
dec
loope
xorb
adc
fdiv
stc
lea
sbb
push
xchg
out
mov
out
jg
push
pop
mov
and
loop
dec
sbb
xor
and
mov
jo
xchg
nop
cmc
sbb
sbb
ja
sub
outsb
out
dec
cmp
push
inc
das
cmp
lcall
mov
mov
out
aaa
xor
outsl
sub
push
repz
add
sbb
add
xchg
sbb
pop
xchg
sub
sbb
movsl
popa
jecxz
jns
xor
xor
mov
rorb
stos
fiaddl
pop
sub
adc
xlat
test
mov
dec
imul
movsl
imul
div
out
ss
dec
pop
xchg
data16
imul
inc
mov
and
outsb
les
adc
arpl
cmc
in
jb
hlt
iret
cltd
dec
adc
lahf
xchg
repz
mov
decl
cmp
movsl
jnp
jnp
jge
add
inc
call
xchg
inc
sbb
mov
xorl
dec
jns
cwtl
lods
push
test
xor
jmp
je
sub
pop
xchg
into
pusha
jne
cmpsb
sub
jo
mov
push
jmp
cmp
ljmp
push
mov
incb
sti
daa
fs
jo
push
xor
loope
and
or
add
ror
adc
push
sub
mov
sub
xchg
mov
mov
or
lods
dec
lcall
test
adc
fcmove
dec
mov
xlat
ss
or
enter
jle
add
scas
jb
cs
and
cmpl
push
into
cmp
jecxz
ljmp
sub
jo
lds
fidivl
mov
jb
inc
add
cmpsb
xchg
push
add
test
clc
ficoms
add
lods
cmpsl
int
xor
add
enterw
ljmp
divb
jp
pop
add
add
pop
jb
sti
popa
stos
jge
bound
ljmp
out
pop
xor
sub
pushf
cmp
mov
mov
jle
xchg
stc
mov
xor
mov
mov
out
jle
out
es
inc
pop
adc
adc
xchg
push
ret
push
lret
and
pop
mov
sub
sbb
in
insl
popf
jge
push
enter
stos
or
jae
xor
movsb
inc
dec
dec
stos
mov
add
fdivr
cmp
push
loop
jmp
cli
ljmp
mov
adc
xchg
xor
std
fcmovb
into
clflush
cld
mov
stos
adc
fs
popf
inc
popl
mov
in
cmp
out
xchg
cld
int
mov
rcl
push
imul
xchg
rcl
imul
mov
mov
mov
inc
test
sahf
add
xchg
cmc
push
inc
movsl
int
pop
push
ret
fmuls
bswap
mov
ret
jo
repnz
lea
pop
xchg
ja
popa
jo
fdivs
aad
xor
mov
add
bound
or
mov
lret
popa
dec
ret
mulb
dec
movsl
inc
dec
jno
lahf
or
jge
pop
out
lret
mov
lahf
adc
jb
adc
sub
dec
mov
in
cltd
jle
mov
inc
jecxz
mov
adc
mov
push
mov
orb
or
pushf
xor
mov
test
das
iret
jne
faddp
in
leave
lods
das
jo
inc
addr16
jbe
sbb
jbe
loope
leave
sbb
pop
cmpsl
mov
dec
dec
test
pushf
xchg
insl
mov
in
dec
movaps
cmp
call
inc
mov
or
xor
mov
or
out
dec
push
cmpsb
ret
mov
dec
mov
cwtl
scas
jge
sbb
sub
inc
inc
dec
jae
push
ret
test
out
push
mov
test
pop
pushf
aad
iret
lret
sub
dec
adc
cs
or
pop
mov
insb
xor
movsl
adc
xor
dec
cwtl
nop
loope
das
pop
pop
ljmp
fs
ret
testb
sub
mov
inc
insl
loope
and
xor
mov
call
sbb
inc
out
push
push
cmp
mov
mov
sub
lahf
sub
jnp
xchg
insl
ljmp
jb
xor
mov
lcall
aaa
push
cmp
jecxz
adc
mov
xor
cmc
or
jg
mov
icebp
pop
imul
lock
les
inc
aas
sbb
jle
out
jp
jp
inc
xchg
and
cmp
ja
fsubs
sub
xor
add
jecxz
cld
sbb
rcll
push
mov
xchg
lods
scas
negl
push
ret
ljmp
and
rcrl
aaa
mov
fnstcw
fcomp
daa
inc
xor
mov
lods
idivl
jg
add
dec
stos
cmp
aad
push
repnz
push
cmp
inc
jns
fcom
inc
cmp
cwtl
add
sub
jecxz
or
hlt
enter
xor
sub
push
int
xchg
mov
xchg
sub
xor
stc
pop
enter
push
inc
cmpl
sahf
iret
imul
ret
mov
dec
fstpl
jge
pop
cmpsb
dec
or
dec
std
call
iret
loop
out
adc
cmpsl
pop
loope
hlt
and
or
xchg
das
int3
cmp
cmp
addl
dec
out
sbb
sbb
xchg
out
cwtl
loop
add
xchg
decl
call
or
movsl
ljmp
xchg
mov
xlat
mov
mov
test
and
in
insl
mov
arpl
jge
mov
mov
push
roll
imul
out
imul
sub
xor
ja
xor
mov
and
mov
enter
cmp
mov
adc
cmpsb
cmp
xchg
nop
jbe
sub
repz
mov
push
mov
std
cltd
add
es
mov
sahf
sbb
jns
testb
mov
sub
push
xchg
cmp
sub
daa
mov
fsts
pop
jnp
mov
punpcklwd
fisttpll
xor
jge
int3
mov
ds
stos
jge
out
mov
lret
popa
inc
jge
cmpsl
push
add
adc
sub
outsb
call
cs
add
enter
jle
xchg
mov
daa
xor
cmp
rcl
int
pop
aam
mov
and
cmp
cmpsl
push
ret
mov
mov
js
cmp
popa
cmc
pop
add
bound
mov
mov
inc
fwait
movsl
lahf
in
or
loopne
lea
mov
mov
cmpsb
sbb
or
xchg
dec
in
mov
mov
dec
jnp
dec
pop
sbb
mov
outsl
dec
mov
mov
in
xchg
xchg
dec
xchg
push
or
les
mov
push
imul
in
out
push
xchg
xchg
mov
lds
pop
es
mov
inc
inc
leave
mov
mov
mov
inc
mov
pop
jp
lds
dec
mov
jb
mov
int3
push
pop
loope
insb
insb
jge
fbld
sbb
rolb
jp
mov
shrb
sub
clc
mov
and
xchg
ret
inc
out
mov
pop
add
lds
mov
cs
cli
stos
mov
stos
mov
leave
mov
ds
sub
fiaddl
cmp
pop
sbb
pushf
mov
shr
and
loop
test
sbb
cmpsl
cmp
mov
jb
je
outsl
insl
xorl
js
mov
scas
mov
negb
dec
sbb
jge
data16
inc
mov
cmpsl
jae
xchg
in
cmp
das
jne
outsl
cmp
cmp
in
mov
and
rorl
sbb
inc
pop
imul
lods
mov
push
cmp
orb
dec
xchg
imul
into
mov
or
pop
in
adc
cmc
test
xchg
stc
ret
jns
inc
out
sahf
dec
dec
popaw
jns
jmp
out
int
xor
mov
xchg
in
pop
mov
cmc
mov
push
cmpsl
cmp
cmp
insl
inc
mov
or
nop
ds
and
push
sub
and
inc
xchg
sbbl
pop
cmp
jbe
fsubs
mov
icebp
jle
cmp
rorb
adc
jbe
mov
rcrl
fisubrl
loope
xchg
pop
sbb
xlat
push
aam
popf
mov
fdivl
mov
fidivrl
outsb
fdivs
inc
mov
inc
ret
ss
adc
in
inc
popa
jno
mov
pop
loope
outsb
dec
mov
test
out
roll
pop
push
inc
mov
pop
aam
lock
cmc
jnp
xchg
xchg
das
es
mov
push
pop
dec
xor
mov
jmp
cltd
cmc
mov
add
lock
xor
jb
xadd
sete
fcmovnbe
push
mov
push
movsb
lds
xchg
sub
adc
jmp
push
mov
decb
popf
pop
inc
dec
jmp
sub
out
push
lret
into
les
ds
dec
pop
mov
xchg
xor
cmpsb
fistps
out
push
int3
sub
pop
fldenv
test
sbb
unpcklps
jmp
push
xor
jbe
adc
add
jp
dec
inc
loope
out
lds
push
mov
cmp
scas
in
jecxz
xor
sahf
int3
xor
icebp
pushf
sbb
inc
loop
mov
jmp
insb
lahf
adc
shrl
cmp
dec
cmpsl
sbb
shrb
add
cmp
test
mov
out
mov
pop
sub
sahf
mov
dec
jecxz
std
push
in
daa
ss
test
scas
xor
cs
sahf
adc
jl
sbb
scas
jle
bound
ret
dec
fs
aam
dec
lret
adc
outsb
es
inc
and
or
push
bound
movsl
and
int
popf
adc
adc
xor
xchg
cmpsb
jle
daa
push
insl
pop
cmc
xchg
clc
xchg
cli
notl
dec
or
in
jmp
xchg
jb
or
push
or
pop
or
insl
xchg
lock
fldcw
icebp
bound
pop
and
loopne
push
fisubl
jbe
adc
xor
inc
out
hlt
mov
adc
adc
movsl
and
sub
mov
adcl
pop
aad
in
daa
js
mov
ret
mov
cmovb
data16
push
ljmp
cmp
dec
add
pushf
pop
movsb
adc
or
hlt
xchg
imul
pop
movsb
adc
out
xchg
mov
loope
insb
xor
sahf
lods
popf
test
ret
inc
dec
push
lods
in
int3
lods
ret
pop
ds
cmc
push
int
sti
fidivl
xor
cmp
aad
inc
addr16
mov
mov
cmp
enter
mov
call
xchg
mov
hlt
cmp
in
sbb
cld
mov
push
sub
xchg
loop
jb
mov
push
rorb
xchg
adc
dec
or
pop
addr16
inc
sti
pop
mov
jle
jae
fwait
cld
mov
gs
xchg
leave
scas
push
fsubrl
pop
dec
sti
inc
add
cs
jmp
push
or
les
xchg
push
xchg
cmp
outsb
faddl
cmp
fistps
lret
lock
cli
outsb
push
cmpsl
scas
imul
push
adc
std
add
sti
add
pop
mov
test
mov
ja
pop
movsl
push
lcall
mov
out
pop
sub
adc
sub
sbb
outsb
pushf
lds
or
jbe
hlt
mov
popf
mov
subb
sbb
in
jg
mov
and
fcom
in
imul
stos
lcall
hlt
lds
mov
dec
lcall
leave
imul
push
dec
jno
cwtl
mov
dec
inc
inc
pop
std
cmc
mov
cli
mov
ret
xchg
cli
cmp
cs
fisttpll
mov
cmpsl
mov
outsb
dec
push
or
inc
ja
jecxz
lret
sub
fadds
push
pop
and
std
mov
int3
shlb
mov
inc
or
mov
pop
push
mov
daa
add
ljmp
lahf
mov
adc
mov
xor
pusha
mov
lcall
mov
aaa
aam
xor
in
enter
or
dec
mov
sahf
cld
mov
mov
or
cmp
lret
out
ds
stos
add
and
or
les
fisubrl
sbb
push
jns
mov
or
xchg
imul
fcomip
test
dec
add
pop
pop
cli
insb
mov
xor
loopne
add
movsb
lock
movsl
sbb
lret
cmp
mov
lods
repnz
dec
dec
outsb
and
icebp
sub
das
andb
or
pusha
mov
sub
jge
xor
es
xor
sbb
pop
ja
mov
outsb
clc
dec
pop
es
jle
lods
jb
sub
inc
inc
xor
bound
push
stos
frstor
mov
cmp
jae
add
push
dec
icebp
clc
jo
mov
mov
mov
xor
jne
xchg
sub
push
aas
aad
imul
sti
mov
cmp
jbe
je
orl
and
jne
sbb
or
popf
sbbl
mov
jo
push
mov
jbe
daa
ss
or
out
divb
lea
add
xchg
push
out
dec
scas
shrl
fcmovne
hlt
addr16
negl
xor
js
mov
inc
popf
mov
adc
lret
ss
xor
add
push
push
fimuls
andl
sbb
insl
fwait
in
pop
bound
dec
jl
jecxz
nop
lea
lds
ljmp
daa
lcall
ljmp
clc
ja
sbb
adc
mov
xchg
jecxz
test
adc
mov
gs
out
fsubrp
pop
shll
mov
test
insb
std
mov
stc
mov
icebp
clc
cmp
bound
cmp
aam
fbstp
movsb
inc
and
xchg
ss
repnz
fwait
xchg
cmc
push
mov
or
dec
inc
cmp
jo
movsb
and
std
mov
cld
dec
pusha
or
rcl
ljmp
ret
leave
pusha
cmp
mov
ja
loope
xchg
mov
add
xchg
cmp
out
cmp
mov
es
movsl
ljmp
fs
mov
lahf
cli
cwtl
xchg
cmp
rorb
xor
mov
jb
mov
sahf
xchg
and
addr16
jne
adc
jns
inc
scas
xor
or
dec
cmp
dec
fisubrl
push
push
pusha
add
out
scas
or
add
sub
and
out
xorl
xchg
aaa
jecxz
sbb
aam
sbb
jno
push
imul
int
pop
enter
dec
push
loopne
into
mov
mov
adc
std
repz
into
push
xor
xor
xor
xor
pop
jecxz
inc
enter
loopw
pop
pop
xchg
inc
out
addr16
sub
xor
sbb
fucomp
sub
lcall
mov
aaa
inc
loopne
sahf
add
adc
pop
pop
sti
inc
lds
push
sbb
jecxz
xlat
push
lcall
sbb
mov
xor
lcall
loop
jecxz
imul
mov
pop
dec
inc
imul
and
add
cmpb
inc
das
arpl
and
jge
subb
cli
and
nop
and
test
pop
adc
outsl
jbe
mov
ret
int3
lds
add
adc
add
repnz
out
daa
jmp
cmpsb
in
mov
jecxz
into
adc
subl
inc
add
xor
rcrl
out
ret
pop
imulb
ds
lock
les
mov
xor
jns
push
fs
sbb
mov
pop
movsb
xchg
loopne
xor
pop
popa
mov
hlt
iret
pop
push
jnp
mov
and
aaa
add
rcll
imul
sub
inc
mov
sbb
rcl
cmpsb
mov
roll
inc
xor
jmp
popf
rcrb
xor
in
je
insl
nop
push
faddl
lea
xchg
dec
int3
cs
clc
aad
xchg
test
inc
add
outsb
add
pop
sub
xor
popf
mov
lret
into
mov
cs
pop
add
jmp
popa
push
cmp
cmc
fnsave
xchg
sbb
shrl
xchg
cmpsl
mov
xchg
mov
cmpsl
or
es
xor
fstpl
aaa
neg
fnstenv
sahf
shlb
cld
xor
xchg
movsl
out
jge
loopne
cmc
aam
outsb
jl
movsl
mov
xor
mov
cs
vfnmsubps
push
cmp
es
mov
stc
mov
xor
outsb
dec
loop
in
pop
jg
cmpl
orb
xor
add
xchg
enter
xchg
inc
scas
movsb
sub
mov
xchg
mov
jle
adc
cmp
push
or
mov
fwait
push
inc
xchg
push
cli
dec
aam
jle
or
lock
mov
aad
cwtl
in
lods
xor
enter
xor
les
test
shr
add
push
ja
and
test
shlb
or
xchg
push
aad
or
xchg
and
push
adcl
dec
repz
xchg
dec
mov
lods
adc
jge
test
bound
fstl
movsb
cmp
inc
and
pop
jns
pop
dec
outsl
cmp
push
xchg
ficompl
faddl
cmp
testb
movsb
lret
mov
clc
sbb
fs
mov
adc
mov
mov
std
out
xchg
push
mov
push
pop
int3
js
jmp
push
in
repnz
lret
xor
mov
add
arpl
gs
cld
jbe
das
loop
jo
adc
jmp
add
dec
adc
jecxz
repz
jmp
ja
in
adc
cmpsl
les
push
movsl
outsl
add
push
mov
lret
pop
adc
dec
lods
mov
mov
insl
mov
adc
insl
in
call
shlb
or
cmpsb
jo
cld
jmp
pushf
outsl
outsl
int3
aas
push
ret
fs
xor
fiadds
pop
push
adc
pop
sbb
nop
and
mov
add
mov
adc
pop
fwait
xor
sbb
push
orb
enter
mov
bound
mov
cmp
push
cmp
std
mov
mov
mov
cltd
xchg
stos
sahf
mov
lds
std
out
and
mov
mov
dec
jmp
fs
or
fcoml
int3
rcll
in
xchg
mul
pop
cld
pop
mov
pop
jbe
mov
loopne
pop
inc
loop
push
inc
jo
lock
pop
sbb
fiaddl
scas
and
inc
inc
lret
pop
or
out
mov
rclb
sbb
and
nop
pushl
pushf
cmp
push
pop
mov
push
lea
push
mov
adc
inc
enter
in
leave
popf
in
mov
ret
sahf
fcoms
push
testb
push
lret
jl
jns
idivb
xchg
mov
sbb
lea
inc
or
pop
sbb
mov
xchg
xchg
dec
inc
pop
dec
int
or
fs
lock
enter
ljmp
xor
lea
or
test
sbb
iret
mov
dec
cmp
xchg
insl
cmc
insb
push
sbb
mov
mov
ljmp
or
push
stos
dec
add
rorl
clc
sarl
cld
not
or
or
ror
inc
int3
xchg
in
dec
js
mov
roll
stc
sub
push
test
mov
dec
test
test
and
jp
fs
jp
jnp
fnsave
mov
dec
lea
cltd
loope
xchg
mov
sub
push
sti
mov
int3
xor
stc
das
ss
ret
imul
push
call
add
pusha
dec
add
dec
add
shlb
je
scas
or
mov
cs
push
push
filds
jnp
fmul
fsubp
or
lods
sahf
mov
lea
bound
fmuls
inc
scas
xor
xchg
test
popa
sbb
imul
push
pusha
inc
orl
fisttpl
inc
aaa
push
jns
data16
jp
lcall
sbb
inc
jmp
stos
pop
push
outsl
pop
mov
inc
adc
out
sub
push
sub
mov
repz
cld
mov
or
jnp
cmp
push
mov
cmp
mov
push
ficoms
mov
fcompl
sub
xchg
mov
loopne
pop
outsb
loopne
arpl
xor
push
test
je
dec
icebp
sbb
ds
jbe
or
loope
faddl
inc
jnp
xchg
push
lret
fwait
mov
mov
in
xchg
das
xor
push
xchg
nop
nop
test
fs
and
lods
ret
pop
or
dec
mov
mov
js
adc
jp
and
rolb
jae
push
adc
pop
imul
pushf
rcr
add
lcall
lahf
fs
cmc
cmp
mov
sub
inc
fsts
sub
xor
push
movsl
jb
popf
nop
pop
xorl
loopne
je
sub
je
daa
dec
fldenv
shrb
cmpsl
in
adc
test
push
scas
sub
xchg
dec
sarl
dec
adc
enter
adc
cmp
adc
jns
loop
inc
sahf
fwait
and
sbbl
es
mov
repnz
test
cmp
dec
call
push
push
mov
push
mov
push
add
popa
lret
mov
lods
mov
vmulsd
mov
jb
and
and
loope
xor
xchg
jnp
adc
push
test
mov
jb
fs
pinsrw
lods
enter
adc
aas
lock
ljmp
cli
sbb
adc
ret
cmp
or
iret
pop
lods
lock
inc
jae
lahf
test
ret
push
leave
loop
inc
out
add
dec
xor
mov
xor
and
insl
pushf
jecxz
cs
xor
xchg
pop
mov
imul
push
fcomps
xchg
pop
dec
js
rclb
pushf
or
fdivl
jle
movsl
outsl
xor
lock
push
cwtl
dec
or
cmp
into
pop
dec
bound
cwtl
fstps
or
test
fstps
arpl
push
enter
add
lcall
addr16
fprem
dec
jbe
aaa
loope
xlat
in
stos
sub
mov
stc
cmc
xchg
push
scas
popf
ret
aaa
in
movsl
mov
adc
xchg
popf
ja
and
out
popa
mov
sbb
add
jecxz
mov
not
push
jb
mov
xchg
cmp
cmp
jb
cltd
in
mov
hlt
and
scas
mov
aam
mov
jg
sbb
repnz
scas
loope
fcmovnu
xchg
aad
inc
mov
addr16
cmc
sub
mov
or
out
std
xor
cmp
orb
sbb
fstp
and
or
aam
or
xchg
dec
adc
sub
jge
push
ret
popf
xorps
repnz
aas
mov
sub
sbb
mov
in
pop
jg
xor
pop
mov
cmpsl
pop
add
sub
add
mov
mov
movsl
andb
inc
test
std
pop
sar
xor
rclb
mov
aaa
fs
in
pop
inc
mov
out
ja
and
push
cmc
lods
xor
xor
jbe
inc
fbld
sar
rcrl
aaa
dec
ret
adc
pushf
into
push
lahf
mov
add
ljmp
cs
mov
xchg
mov
jecxz
push
inc
mov
sbb
repz
pop
hlt
shlb
les
out
adc
mul
loope
push
or
inc
and
cli
daa
add
push
arpl
test
sbb
repz
sbb
rol
jp
lods
sub
jmp
add
iret
xor
or
sbb
xchg
cld
sub
xchg
mov
icebp
out
adc
pop
pop
jns
jge
test
insb
pop
cmp
jmp
mov
cmp
icebp
push
lcall
aaa
aaa
sbb
stos
add
cltd
xchg
sub
jp
sbb
mov
jmp
dec
mov
and
loop
in
insl
add
daa
dec
xchg
ljmp
in
jle
push
fcoml
add
movsb
xorb
jb
mov
stos
int3
clc
xchg
xor
mov
addr16
mov
push
mov
sub
adc
jno
out
cmp
imulb
pop
fildll
mov
cwtl
sub
and
test
ds
insl
mov
sarl
loopne
insl
out
pop
jmp
pop
xor
loop
jecxz
lods
rcll
sarl
jbe
cld
pop
fisttpll
cmp
test
and
gs
xchg
xchg
pop
nop
je
lahf
mov
pop
cli
sbb
ss
push
sub
dec
ds
or
mov
imul
mov
fldcw
inc
xchg
xchg
loop
fnstsw
nop
push
push
sub
mov
sbb
cli
cmp
cmpsb
xlat
jmpw
jecxz
push
jl
add
mov
scas
mov
enter
cs
sbb
test
sub
test
cmp
pop
mov
inc
repnz
inc
test
fdivs
outsb
loope
push
mov
adc
movsb
xchg
dec
movsl
in
popf
in
in
cwtl
cltd
mov
mov
jb
sbb
arpl
push
jno
push
adc
sbb
push
xchg
test
mov
jmp
adc
jo
movsl
fdivrs
out
mov
add
pop
mov
out
fsubl
stos
push
jne
hlt
cltd
push
cli
clc
or
sahf
xor
adc
inc
adc
cwtl
std
push
mov
outsb
add
xchg
test
push
and
fwait
sbb
ljmp
test
adc
inc
inc
sub
cli
fimull
cltd
lods
out
cmpsb
lods
cmc
adc
sbb
dec
mov
fsubp
dec
js
loope
lret
mov
and
pop
add
neg
add
andb
dec
lahf
stc
aaa
leave
loopne
mov
scas
ss
inc
enter
cltd
or
and
or
mov
mov
adc
or
xchg
and
xlat
fs
mov
fucomi
mov
outsl
test
ljmp
ja
mov
sbb
mul
ljmp
cli
cli
inc
imul
xor
jge
outsl
cwtl
mov
jmp
pushf
lret
es
les
das
cmp
ret
in
jle
cltd
shl
cmc
pop
xor
push
aaa
icebp
pop
adc
mov
mov
ret
lret
push
jg
pop
fiaddl
add
inc
decl
rolb
jbe
nop
mulps
ss
jmp
or
pop
jl
repnz
xchg
in
test
ljmp
xor
fdivrp
fnop
lcall
xor
xchg
into
cmpsb
imul
jo
subl
xchg
or
push
add
mov
das
mov
ret
test
pop
bound
lcall
cmp
mov
cmp
lcall
jl
mov
pop
call
add
mov
shlb
iret
dec
call
leave
lods
cwtl
dec
loopne
sbb
xchg
or
mov
mov
push
in
dec
jo
dec
std
das
leave
imull
xchg
in
jmp
cmpsb
popa
scas
mov
pusha
pop
shll
ja
repz
test
sbb
push
add
sbb
fwait
mov
inc
cmp
pop
fsqrt
sbb
cmp
rolb
test
pop
fs
jne
sub
int
mov
jg
mov
jae
mov
and
fstl
mov
lcall
mov
roll
insb
cs
push
into
pop
imul
fbstp
es
insl
es
insl
or
out
imul
jecxz
data16
xor
mov
mov
lds
les
addr16
jo
xorl
outsl
in
push
mov
cmp
add
scas
dec
bound
bound
roll
push
mov
cmp
pushf
mov
adc
push
xor
jmp
ljmp
push
push
mov
ret
cmp
lcall
jmp
into
jno
mov
pop
xchg
jge
add
cld
and
or
sub
mov
push
xor
xchg
repnz
xor
aas
push
push
add
jnp
daa
fld
cmp
cmpsb
notb
sub
sar
jns
pop
pop
jae
inc
cmp
call
lea
std
stc
movsb
std
mov
test
push
shl
int3
push
dec
call
add
in
xor
test
int
push
adc
pop
mov
push
les
mov
in
daa
insl
outsl
jo
jmp
xchg
adc
inc
jle
jnp
scas
movsb
test
mov
fnstsw
xchg
inc
mov
pop
push
or
adc
push
dec
cmpsb
enter
rol
inc
adc
ds
push
xchg
repz
xor
cmp
lret
les
xchg
out
add
pop
sbb
mov
cmp
stos
cld
insb
les
vcvttsd2si
pop
cmc
xchg
xlat
das
jb
fwait
mov
adc
push
aaa
pop
aaa
pop
xor
fwait
or
add
jle
sbb
and
nop
xor
stos
outsl
std
pop
jns
cmp
mov
in
lods
and
pop
lods
add
cmpsl
jbe
ret
pop
jmp
xlat
dec
lret
js
xor
jno
pop
cli
pop
push
mov
daa
stos
repnz
jb
mov
repnz
or
data16
sub
ds
mov
movsb
and
sub
stos
rcll
stos
fcmovbe
enter
mov
cmp
movsl
or
sbb
cmp
adc
fisubs
xor
push
mov
xchg
pop
add
pop
test
test
adc
fdiv
call
sbb
mov
daa
ficompl
popa
push
aam
xor
icebp
xchg
fs
aad
test
inc
stc
ja
ret
imul
cmpsb
lods
dec
mov
lods
je
ret
mov
js
aas
in
push
and
xchg
into
insw
addr16
pop
insb
xor
ret
lret
and
mov
into
ljmp
stc
in
ds
ss
shlb
mov
mov
call
bound
or
add
sub
push
mov
push
mov
data16
cmpsl
lret
or
mov
popa
sub
jb
mov
or
outsl
out
jns
filds
push
sti
add
insl
popf
mov
sbb
mov
mov
es
push
or
ss
jmp
outsb
mov
jg
ret
push
xchg
push
ja
pusha
cmp
enter
push
pop
ret
or
mov
inc
mov
cld
clc
pop
fsubrs
movsl
xchg
out
movsb
inc
push
sbb
lcall
mov
inc
xchg
mov
dec
lods
push
cltd
or
and
xor
test
mov
shrb
repz
jecxz
idivb
sub
fisubrl
call
jmp
jbe
pushf
aas
out
cli
mov
test
mov
mov
mov
imull
jns
pop
loope
call
jnp
scas
jp
or
sarb
gs
roll
and
push
imul
outsl
mov
adc
push
add
fnstsw
cmp
xlat
cmpsl
pop
adc
scas
in
int
add
leave
adc
mov
pop
xlat
and
dec
xor
fucomi
pop
xor
and
add
mov
sub
notb
adc
adc
or
iret
cmpb
jl
je
call
or
cmp
scas
xor
notl
popa
sub
add
jo
sbb
adc
adc
dec
mov
pusha
dec
sub
ret
jne
cld
sarb
mov
jg
daa
psubusw
ret
xor
arpl
in
fs
sti
subb
movsb
inc
fstpt
fsubrs
pop
sub
fwait
pop
jae
popf
out
dec
add
cmp
pop
outsl
dec
mov
je
test
push
or
js
dec
iret
mov
inc
lds
push
xor
int
nop
mov
xchg
or
test
dec
mov
out
xor
das
mov
mov
rorb
add
sarl
lahf
sbb
sbb
or
vpxor
adc
int
out
jle
notl
insb
add
incl
ds
lock
ds
ret
daa
push
stc
insl
mov
inc
popa
jo
push
bound
repz
stc
leave
movsl
adc
jo
into
xchg
cwtl
jne
inc
shlb
mov
in
out
cmp
fidivs
rolb
outsl
in
out
cmp
mov
sub
inc
mov
xchg
fistps
rcrl
or
mov
js
mov
jl
enter
aad
in
inc
out
les
mov
xchg
xor
xchg
in
out
mov
mov
lods
jo
sub
push
mov
fdivrp
rcl
cmp
arpl
add
lods
and
mov
adc
shlb
push
or
mov
xlat
out
loop
js
pop
scas
shll
lahf
xor
je
jo
sub
inc
push
push
or
add
adc
ret
data16
loopne
jo
push
das
and
popa
inc
jo
mov
add
mov
xchg
pop
insl
inc
icebp
inc
call
jmp
jmp
sahf
ret
in
mov
pop
sti
cltd
ss
je
xlat
and
mov
lret
lock
lock
lods
hlt
push
stos
push
and
xor
xchg
push
xchg
pop
mov
orl
adc
popa
movl
dec
into
lretw
stos
jb
push
push
push
pop
pop
arpl
xor
in
out
xchg
or
pop
repz
scas
sub
xchg
mov
mov
cmp
arpl
and
mov
and
scas
adc
lret
mov
test
cmp
xchg
xor
mov
popa
scas
mov
sti
pop
gs
pop
push
xor
out
xchg
cmpsb
je
fcomps
lea
dec
lret
cmp
cmpsl
lods
jmp
xor
mov
push
fs
hlt
xor
inc
xchg
outsl
dec
mov
xchg
adcb
pop
lods
jge
cwtl
mov
pop
cmpsb
dec
sbb
cltd
pop
and
call
inc
xorb
adc
cmp
mov
inc
leave
pop
mov
aaa
outsb
and
sbb
xchg
outsl
in
mov
push
push
in
inc
mov
cmp
dec
xor
cwtl
stos
rolb
jne
xor
jge,pt
cmp
test
adc
add
decb
mov
mov
insb
cld
sti
mov
sub
sbb
jecxz
insb
and
fstl
insb
daa
cwtl
push
fwait
inc
mov
das
inc
out
xlat
dec
dec
stc
mov
out
mov
mov
leave
fildll
push
fstpt
lock
sub
sub
cmp
jle
inc
in
add
clc
les
data16
shrb
pusha
stos
xor
addl
push
cmp
inc
xchg
xor
sbb
xlat
mov
adc
ljmp
and
lahf
nop
iret
scas
pop
cmp
gs
jb
dec
scas
data16
lods
pop
call
imul
dec
jl
sub
jns
mov
sub
aaa
push
mov
les
jecxz
adc
hlt
out
add
or
sbb
mov
cmp
mov
cmp
xor
adc
fisubrs
dec
mov
iret
sbb
xor
loop
pop
jb
int
add
or
mov
add
mov
stos
mov
xor
pop
mov
andb
pusha
pop
pop
inc
sbb
dec
out
addr16
jae
cmpsb
in
lahf
mov
insl
cwtl
call
mov
pop
ja
test
push
aaa
test
sbb
mov
pushf
dec
outsb
jle
jle
dec
leave
addr16
jne
aam
add
inc
adc
fsubrl
icebp
imul
and
into
or
jo
mov
jp
ja
mov
pop
fsub
adc
inc
sub
ds
shlb
mov
insl
adc
mov
cli
pop
pop
push
rcl
xchg
cli
pop
lret
dec
cmp
iret
scas
mov
data16
xor
jno
xchg
xchg
je
sbb
pop
mov
and
fisubrl
adc
push
out
and
inc
adc
mov
mov
sub
lret
cli
ljmp
mov
sub
xchg
dec
mov
repnz
sar
pushf
aaa
xchg
push
scas
je
push
insl
dec
or
fists
jmp
stos
gs
and
mov
cli
mov
aaa
mov
arpl
inc
je
and
lret
xor
shl
mov
push
or
mov
out
sub
aaa
pop
das
fimuls
dec
inc
inc
hlt
addr16
and
popa
and
cmp
add
or
mov
aam
ret
in
jnp
xchg
xor
pop
dec
xchg
cmp
pop
lea
pop
hlt
or
dec
xchg
mov
push
andl
lods
pusha
repz
inc
mov
sub
movb
pop
pop
sbb
ljmpw
sbb
inc
add
clc
jns
mov
pop
daa
shlb
in
insb
adc
inc
fmulp
dec
roll
xor
ds
pop
in
cltd
test
xor
jne
xchg
popf
adc
mov
xor
add
add
mov
faddl
sbb
cmpsl
mov
sar
popa
pop
sarl
shl
cli
or
pop
icebp
pushf
add
mov
lret
pushf
mov
lret
inc
es
or
pop
or
testb
lret
inc
mov
inc
jmp
sub
mov
gs
sbb
nop
sbbl
fists
and
je
jp
imul
inc
mov
loop
jne
xor
repz
mov
mov
xor
add
mov
cltd
cmp
lds
sti
inc
xchg
test
cmp
inc
lock
iret
test
push
es
mov
aam
subl
jg
push
pushf
sbb
loop
sbb
cmp
xchg
jno
add
adc
xor
mov
sub
pop
dec
mov
mov
mov
bound
cld
mov
or
mov
mov
jl
or
xchg
xchg
jo
cmp
fcmovnbe
cmpb
es
out
ficomps
ja
call
lods
cmc
mov
or
or
arpl
out
xor
insb
fwait
dec
mov
aam
cmpsl
into
mov
in
inc
xchg
dec
sub
test
cs
cmp
mov
xor
inc
ret
pushf
cmp
mov
mov
mov
xchg
cmp
dec
and
sbbb
inc
push
mov
scas
popa
mov
add
push
je
stos
jo
imul
and
xor
xchg
enter
scas
mov
iret
in
mov
sub
je
xchg
mov
lahf
mov
shl
jle
cmpsl
push
jl
pop
stc
std
sbb
mov
int
sbb
ja
xor
mov
cltd
dec
jno
popf
outsb
xor
stos
push
repnz
and
je
cs
pusha
cs
clc
mov
iret
jle
push
lods
push
lea
pop
cmp
mov
fisttpll
mov
sbb
fcomip
jb
cmp
ficoml
sub
pusha
mov
xor
xchg
mov
sarb
imul
test
test
loopne
xchg
outsl
mov
subl
sar
out
pushf
pushf
push
mov
or
push
xorb
mov
mov
inc
sti
es
data16
subl
dec
orb
test
cmp
mov
xor
cltd
ss
sbb
mov
shlb
in
inc
pop
icebp
aad
test
push
cmp
daa
adc
dec
xchg
inc
or
iret
je
movsl
xchg
imul
xchg
das
dec
add
shll
adc
mov
mov
clc
mov
into
cmp
inc
pop
data16
fcoms
fmull
movsl
dec
cld
mov
ja
out
and
xor
outsb
jnp
aas
pop
dec
shrl
lret
cmp
ljmp
mov
xor
movsb
add
out
jno
pop
pop
add
mov
cmp
aam
int
movb
movsl
out
call
pop
xor
push
fwait
lea
adc
pop
pop
mov
mov
and
xchg
add
pushf
daa
cmp
lahf
hlt
pop
push
mov
dec
insb
or
es
adc
fs
pop
inc
fiaddl
pushf
lret
cmp
fcompl
inc
test
xchg
sahf
sbb
push
push
leave
mov
sbb
in
pop
mov
xor
and
jle
xor
mov
xchg
inc
push
mov
rcr
cmc
jae
or
push
imul
mov
pop
push
inc
dec
lahf
mov
clc
adc
xchg
ja
jmp
and
out
fs
jge
pop
leave
lds
out
pop
mov
mov
mov
push
lcall
int
push
out
mov
fnstcw
and
xchg
jno
outsl
shl
mov
push
push
cltd
lods
lods
loopne
and
test
into
imul
imul
push
imul
fisubrs
push
push
push
xchg
js
and
mov
pop
sub
cmp
das
xlat
js
scas
mov
adcl
push
ds
pop
out
pop
sbb
negl
movsb
sahf
lock
stos
pop
ret
mov
int
mov
dec
leave
cmc
sarl
mov
dec
into
pop
cmpsb
sbb
js
mov
jo
nop
clc
in
push
fwait
mov
cmpsb
jg
and
push
or
shll
popf
cmpsb
xchg
dec
fstpl
inc
pop
ret
cmovno
lret
mov
dec
ret
mov
iret
in
pusha
push
fwait
dec
test
dec
jo
in
cwtl
or
repnz
cmp
pop
jnp
mov
adc
into
pop
aaa
je
or
call
scas
cmpsb
and
scas
mov
in
test
pop
cmp
cmpsl
pop
insb
imul
les
add
inc
ficomps
shrb
xor
mov
int3
rcrl
loope
xor
lods
lret
mov
iret
push
loope
pop
xchg
dec
mov
or
sarl
loop
int
enter
mov
imul
adc
aam
shll
imul
push
cmp
nop
dec
daa
add
push
pushl
mov
jbe
mov
dec
pop
adc
insb
dec
pop
add
pushf
push
mov
pusha
in
dec
loopne
xchg
adc
test
pop
ds
sub
out
mov
gs
adc
loope
in
icebp
addr16
adc
and
mov
cwtl
out
jp
push
fldcw
mov
in
movsl
outsb
adcb
push
js
jecxz
mov
outsl
pushl
cmp
shlb
int
sbb
enter
jmp
mov
mov
add
loope
int3
aad
mov
lock
mov
adc
and
xor
rcrb
sbb
sar
xor
mov
dec
daa
iret
add
add
jno
pop
sub
dec
shrb
mov
mov
jmp
out
jnp
cmc
cmp
push
lods
negl
cwtl
pushf
stos
cmp
push
cli
inc
xorb
xor
pop
mov
mov
pop
pop
fidivs
popf
das
jg
mov
cld
into
scas
xchg
dec
js
sbb
outsl
mov
dec
mov
cvtps2pd
xchg
mov
push
scas
ficoms
xor
push
push
and
dec
lock
mov
movsb
test
sbb
xchg
sub
sub
mov
iret
fisttpl
jb
loop
movsb
pop
mov
pop
loope
rcll
test
sbb
dec
cmp
xchg
out
cld
cmp
xchg
mov
mov
mov
sar
xor
xor
adc
pop
outsl
cmp
cmp
js
call
clc
jb
shl
push
mov
mov
push
mov
shlb
cwtl
sub
pop
insl
xlat
fistpll
sbb
ja,pn
sbb
ret
daa
cmpsb
pop
push
add
jnp
ror
test
inc
add
icebp
insl
std
sahf
push
dec
mov
mov
stos
lea
cmp
jge
leave
mull
pop
jb
aas
or
or
jbe
sbb
add
std
jne
shlb
andl
into
push
sbb
xor
jbe
roll
adc
outsb
add
lock
mov
mov
test
shlb
or
cltd
inc
adc
dec
inc
push
cmp
or
cld
mov
jge
xchg
jmp
jmp
mov
ja
mov
popf
nop
outsb
cmc
add
add
cmp
xchg
xchg
add
fdivs
ret
or
jmp
pop
scas
fistps
or
int3
pushf
decl
loope
xchg
cmp
lods
lea
adc
sbb
icebp
mov
cmp
mov
test
jg
mov
inc
stos
in
mov
adc
les
mov
dec
ja
push
loop
mov
pop
mov
ret
push
add
sbbb
push
jecxz
mov
lock
cmp
dec
sub
sbb
stos
mov
int3
xlat
cmp
push
cmp
test
or
movb
btrl
cmp
mov
add
add
dec
mov
xchg
sub
push
mov
add
lret
inc
adc
jg
mov
repnz
repz
and
ret
je
lock
je
cwtl
orb
or
lea
pop
iret
sahf
stos
je
inc
inc
pop
out
outsl
rorl
adc
and
fisttps
sub
jns
cmpsl
push
xchg
and
cmpsb
push
dec
add
out
jne
push
dec
push
addb
mov
iret
repnz
lock
out
cmp
int
aad
push
inc
daa
mov
imul
insl
xor
mov
jnp
mov
mov
xchg
xlat
std
jmp
in
inc
sbb
xchg
inc
jle
sub
aas
aas
xorb
fcoml
mov
sqrtps
loopne
pop
push
xor
shl
std
imul
adc
je
adc
int3
ljmp
sub
pushf
js
dec
inc
sti
adc
sub
loop
int
sti
pushl
sbb
dec
int
arpl
popa
or
cld
roll
xchg
cmp
shll
or
inc
scas
or
and
lea
mov
inc
inc
hlt
insl
mov
movsb
adc
xchg
nop
cli
xchg
xchg
movb
ja
xor
movsb
jb
xchg
adc
es
mov
lret
fnsave
cmp
mov
arpl
add
inc
cmp
int
dec
in
hlt
test
and
mov
jp
sub
mov
dec
cmp
cmpsb
dec
push
shlb
jno
inc
mov
cmp
out
iret
dec
cwtl
lcall
outsl
jo
xor
rcll
pop
dec
inc
or
sbb
inc
mov
pop
cmpsl
mov
adc
mov
insb
push
out
adc
cmp
mov
iret
fwait
sar
shlb
roll
or
or
xchg
in
ja
jb
mov
in
push
pop
ds
fwait
mov
jns
lcall
fsubl
or
js
loope
lock
loope
push
dec
dec
hlt
add
dec
enter
dec
call
leave
sbb
dec
std
jb
sub
mov
orb
jae
ja
and
or
mov
or
scas
push
pop
mov
mov
mov
mull
and
cmc
sbb
push
push
stos
or
call
mov
lahf
jno
insb
xor
sbb
frstor
inc
mov
insb
sarl
xchg
or
cltd
jg
lahf
insb
pop
lcall
pop
mov
out
testl
seto
cmp
or
insl
ljmp
cltd
out
pop
mov
pop
xchg
add
jmp
jns
pop
jnp
in
int3
aas
loop
sahf
or
rorl
sti
sub
cmc
cmp
ss
cmp
insl
jnp
es
push
sar
add
imull
xor
movsb
dec
adc
adc
add
cmc
mov
and
testl
dec
push
adc
sub
mov
lods
loop
cmp
xlat
jnp
cli
add
xchg
pop
cmpsb
add
ret
jnp
inc
mov
das
ljmp
inc
jecxz
sar
mov
xchg
inc
scas
aas
test
adc
jle
mov
and
enter
sub
lds
stos
loopne
mov
ret
shl
push
je
out
aad
insb
movsl
mov
xchg
cmp
mov
jae
cmp
daa
or
mulb
jg
jb
inc
mov
fwait
and
ret
cwtl
push
pop
roll
les
nop
pop
jns
dec
rcr
push
adc
dec
xlat
rcl
jg
and
inc
adc
aas
mov
test
or
ror
cmpl
shrb
pop
out
pusha
jmp
movntq
out
dec
jmp
hlt
xchg
jmp
inc
push
mov
rcl
fdiv
jns
cmpsb
push
arpl
push
mov
js
test
ret
mov
pop
jp
xchg
into
aaa
scas
aaa
in
lock
cltd
mov
mov
mov
test
imul
fistl
je
sub
sahf
scas
sub
sarb
pop
mov
pop
push
cmp
push
loopne
or
sbb
sub
mov
in
cwtl
mov
lods
xchg
xlat
push
in
lret
test
loopne
icebp
jnp
push
push
or
xchg
or
cmp
sar
mov
sub
add
jne
cmp
mov
jl
jmp
mov
out
jns
add
jg
in
ret
inc
and
test
cmc
sbb
cld
pop
aad
xor
push
and
ror
fadds
cmpsb
jl
aam
bound
adc
arpl
adc
js
sbb
gs
addr16
dec
clc
pop
mov
scas
xchg
sar
push
dec
test
push
sub
aad
dec
mov
incl
fbld
inc
je
push
iret
and
mov
imul
das
scas
cmp
push
in
pusha
mov
je
mov
jg
jnp
lahf
or
lds
or
dec
add
jnp
int3
hlt
popf
inc
cmp
sub
inc
mov
push
js
add
jno
and
fxch
adc
jmp
jg
int
bsr
push
mov
or
clc
arpl
cmp
repnz
fiadds
and
mov
mov
cmp
add
out
cmp
outsl
sbb
cmpsb
stc
xlat
xor
adc
cwtl
out
dec
push
es
jne
push
cmpsb
xchg
xor
xor
test
call
js
cmp
push
jp
ret
icebp
cs
gs
adc
mov
clc
ljmp
nop
hlt
std
adc
hlt
jb
adc
addl
mov
loopne
jmp
inc
pop
fs
inc
jecxz
popf
hlt
xchg
add
fsubrs
mov
mov
sbb
test
icebp
and
pop
xchg
arpl
pushf
jge
xor
xchg
out
arpl
mov
jp
mov
es
or
fwait
js
je
sub
cs
inc
mov
fcmovne
dec
dec
inc
cwtl
mov
jl
and
lock
cltd
pop
sub
push
insb
inc
jg
icebp
fildl
outsb
jne
loope
out
adc
pop
into
pop
daa
jb
add
push
or
loope
pop
push
test
sarb
push
xchg
ja
out
xor
lret
shrl
rolb
shrb
jle
sbb
adc
je
aaa
ret
inc
loope
int3
movsl
jmp
outsb
repz
xor
mov
inc
shlb
or
dec
mov
decl
cld
pop
aam
or
sbb
cmpsl
pop
adc
int3
mov
cmpsb
shl
jl
jns
sub
mov
push
leave
sahf
aas
cli
or
cmp
cmp
repz
sub
cld
hlt
iret
inc
pop
cmp
repz
pop
lret
pop
ret
cli
pop
mov
cld
jae
aam
int
sbb
dec
daa
es
push
mov
pop
scas
lret
mov
sahf
and
push
and
inc
or
jp
aam
sbb
pop
shll
movsb
cwtl
dec
outsb
je
xor
aas
fs
push
nop
in
pushf
xor
mov
movsl
cmp
adc
je
jo
lods
int3
filds
add
int
subb
in
sbb
mov
mov
loop
je
std
ret
and
inc
push
aas
pop
xchg
xchg
fstpt
psrld
lcall
jmp
sub
lret
xchg
sbb
icebp
inc
int3
pop
sub
cmp
sarb
icebp
shlb
vpaddq
sub
lret
clc
push
icebp
mov
enter
inc
fistl
int
ja
dec
pop
mov
xlat
mov
shlb
xchg
rorl
add
xchg
test
jge
sub
ds
xchg
sbb
test
mov
cli
lcall
cmp
dec
sbb
adc
cwtl
aaa
jg
adc
or
shrb
mov
sbb
std
pop
xlat
sbb
inc
rcll
movsl
pop
cmp
mov
aam
mov
push
mov
or
aad
mov
stos
inc
mov
pop
sbb
ror
jg
adc
aad
sbb
mov
enter
outsb
call
lret
jo
add
dec
dec
cmp
mov
lret
mov
mov
into
mov
xlat
bswap
in
pop
push
xchg
jmp
adc
movsl
jb
popf
call
add
mov
inc
cltd
mov
dec
push
or
iret
xor
dec
pop
push
xor
cmp
inc
dec
sti
mov
test
out
and
mov
sti
jb
add
or
push
jno
cld
lcall
dec
adc
and
cltd
pop
das
mov
mov
aaa
sarb
sub
into
bndstx
adc
notb
mov
into
push
pop
jecxz
sub
addr16
lret
jecxz
ficoms
adc
fs
cmpsb
jo
aam
mov
in
icebp
mov
rcrb
mov
test
setae
or
in
lock
mov
pop
xor
loope
lds
sub
nop
add
and
hlt
es
mov
xchg
or
mov
adc
aam
add
cmc
ret
lea
ss
shlb
lds
iret
fwait
mov
fimuls
arpl
scas
cmp
je
xchg
dec
mov
cs
xchg
mov
outsb
mull
push
test
push
scas
popf
cmpsl
pop
and
loop
mov
or
and
test
add
inc
inc
iret
iret
add
clc
aas
hlt
cli
add
les
jne
bound
mov
xchg
out
push
int3
imul
and
pop
test
rorl
dec
or
iret
ds
fsub
ds
call
or
fmull
dec
enter
xchg
xlat
bound
lea
mov
sub
fsubrl
sub
insl
out
add
adc
mov
aaa
aad
jmp
push
lret
inc
leave
stos
enter
loope
adc
pop
das
push
xchg
pusha
jge
test
loop
add
pop
imul
fsubl
fstps
jnp
icebp
mov
mov
jmp
xor
leave
push
or
lahf
and
xor
xchg
push
sbb
adc
mov
gs
pusha
mov
outsb
xor
in
js
std
and
or
inc
ja
push
vandps
lods
sub
cmp
das
dec
or
adcl
jne
sbb
xor
jo
pop
mov
pop
jns
add
outsb
mov
lret
notb
mov
fistps
repnz
sbb
les
mov
insl
pop
sub
pop
inc
mov
ja
cltd
sbb
daa
fstps
ss
mov
pop
push
jmp
fcomp
jno
lods
icebp
jle
jae
mov
stos
xchg
mov
clc
push
mov
repz
sub
and
jb
arpl
sbb
push
push
repz
and
jge
sbb
sti
inc
jo
cmpsl
aas
or
ficoml
jle
push
mov
hlt
xchg
clc
rcll
mov
or
jb
loope
cmpsl
xor
or
inc
std
adc
push
dec
push
and
fldenv
mov
fptan
test
jle
mov
push
sbb
inc
cld
push
jns
mov
inc
pop
fwait
adc
es
jecxz
xor
out
jne
push
mov
aas
pop
loop
test
mov
int3
idiv
enter
decb
stos
sbb
dec
dec
mov
or
sbb
popf
push
or
pause
xor
jmp
jp
adc
push
sub
aaa
arpl
std
mov
sbb
popa
or
in
std
cmp
push
das
add
sbb
adc
adc
push
rolb
repnz
test
pushf
adc
fwait
xlat
jo
pop
dec
cmp
test
xchg
xchg
xlat
push
ftst
loope
clc
sub
mov
in
sub
bound
mov
xor
or
lret
lods
xchg
push
dec
push
ficoml
or
mov
jo
xor
sbb
pop
in
addr16
dec
pop
inc
cmp
jg
imul
call
out
popa
adc
and
ret
jo
dec
xor
out
mov
loopne
out
mov
lcall
xor
jle
push
shll
pop
test
dec
mov
mov
fsubl
cmp
dec
xchg
sub
mov
mov
les
cmp
outsl
aam
sbb
inc
es
sahf
xchg
xor
lods
pop
xchg
xchg
loopne
in
stos
pop
push
in
fwait
hlt
mov
les
mov
sbb
out
inc
cwtl
lcall
mov
lret
scas
mov
scas
int3
lcall
xor
xchg
jae
inc
rcrl
out
sti
pop
mov
jmp
lea
roll
sbb
xorl
std
cmp
mov
call
sarl
sub
jo
push
shl
sbb
out
jnp
inc
push
xorl
test
movsb
or
andb
repnz
aad
push
sbb
ret
lea
popa
push
ret
jle
stos
jmp
dec
test
xchg
sub
ss
sbb
rcrb
push
fstps
testb
popa
addb
int
xchg
lods
lcall
jp
fnstsw
dec
sbb
and
hlt
cmp
inc
daa
fimull
adc
repz
and
jg
xchg
into
mov
pop
mov
cmp
cmc
push
stc
std
or
push
adc
fisttpl
cmp
rolw
cmp
aad
mov
sub
jl
xchg
mov
loop
cmc
or
insb
push
ja
jbe
repz
imulb
fists
aam
dec
xchg
or
scas
jae
inc
jne
push
into
and
jbe
adc
xchg
push
shrl
dec
je
ficompl
in
movsl
push
xchg
xlat
mov
clc
dec
mov
rolb
dec
shr
push
gs
int3
jns
notb
push
rorb
dec
push
les
add
pushf
outsl
sbb
or
push
js
imul
sbb
and
enter
fstps
pop
addr16
filds
popa
shrb
je
fidivs
mov
and
mov
scas
and
pop
dec
inc
adcl
setno
out
push
xor
xor
mov
andl
mov
jns
push
pop
out
fs
in
jl
out
mov
ja
rorb
out
sub
pop
push
push
fidivrl
or
push
test
lock
outsl
xchg
add
xor
cld
rcrl
push
dec
pusha
sbb
mov
dec
inc
popf
fdivrp
jecxz
push
push
pusha
cli
enter
lahf
fldcw
test
push
dec
and
or
stc
bnd
dec
mov
insl
je
cli
movsl
lock
mov
pushf
adc
mov
lret
jae
in
add
xor
fwait
pop
xor
jg
jns
pop
rcl
xchg
ja
fwait
push
push
insb
pop
popa
fmuls
scas
cmp
das
pop
xchg
and
outsb
and
mov
push
or
bound
fisubl
in
adc
mov
inc
push
jl
mov
dec
int3
cs
lret
mov
ret
loop
dec
popf
cld
mov
push
and
add
notl
icebp
insb
cmp
daa
fstpt
mov
lret
jbe
test
js
loop
enter
and
lret
cmpl
adc
mov
test
adc
in
popa
push
xchg
adc
add
sahf
dec
rorb
mov
pop
xor
imul
adc
push
bound
inc
stos
mov
push
imul
aas
ret
mov
data16
gs
popf
push
int
mov
cmp
jg
push
jnp
cli
out
aaa
cmp
sbb
test
cmc
fcmovnbe
scas
jge
mov
call
js
not
mov
inc
sarb
enter
push
and
add
xchg
jbe
mov
shl
fidivs
test
push
push
push
mov
ss
push
std
leave
push
adc
addr16
and
fst
pop
leave
rorl
cmc
push
sbb
xchg
stos
stc
shll
popf
mov
xchg
notl
imul
add
cwtl
cli
shll
imul
pop
stos
push
pop
lcall
mov
sarl
cmp
stos
or
mov
clc
xor
jle
mov
ljmp
xor
mov
pusha
mov
push
repnz
scas
sub
sub
cmp
mov
fprem
mov
inc
rcrb
shr
xchg
fisubs
pop
imul
adc
pop
jne
popf
movsl
mov
in
xchg
cld
ret
add
adc
das
shrb
test
xchg
xlat
mov
and
mov
subb
dec
adc
mov
js
dec
jb
jnp
xchg
std
insl
and
aam
shl
mov
lret
mov
mov
fwait
pushf
bound
test
mov
mov
aas
outsl
adc
stos
inc
sub
ljmp
xlat
and
popf
ret
mov
and
pop
jo
int3
mov
xlat
dec
and
push
outsb
aad
mov
rclb
and
cmp
fstpl
cli
dec
fisttps
fnsave
and
fadd
dec
xchg
xchg
cmpsb
add
test
out
addr16
sub
aad
cmp
sub
jbe
pop
mov
mov
jle
dec
movsl
mov
insb
ror
adc
dec
imul
adc
in
or
adcb
xor
mov
pop
add
icebp
jge
bound
mov
or
test
mov
popf
inc
jo
dec
add
inc
xchg
fidivrl
jge
out
sub
in
cs
shll
testb
xchg
idivb
adc
adc
test
test
push
pop
adc
stos
das
mov
leave
je
popl
or
add
stc
std
mov
mov
cld
mov
push
fistps
test
adc
je
or
aas
repnz
push
incb
nop
add
out
sbb
sbb
cmp
outsb
in
addr16
fldl
jbe
mov
shlb
mov
aam
es
ljmp
test
or
je
push
pop
pop
and
xchg
pop
rclb
sarb
sbb
dec
js
out
sarb
dec
icebp
pop
and
and
fistpll
insl
pop
dec
out
push
mov
xchg
out
mov
outsb
popa
xchg
xor
mov
pusha
dec
test
mov
sti
adc
das
orb
pop
add
jp
xorb
std
pop
lret
sub
popf
inc
and
pusha
lret
mov
shrb
and
sbb
clc
xchg
scas
daa
xchg
push
jge
inc
xchg
pop
push
xor
push
fsubs
in
jbe
icebp
ret
bound
dec
inc
fs
popf
sar
sub
test
pop
rorl
sbb
inc
sub
inc
pop
pop
dec
mov
jae
inc
aad
test
in
or
out
hlt
fdivp
movb
push
and
ljmp
xchg
adc
test
xor
ds
add
sbb
in
fucomp
stos
cmp
mov
stos
sbb
mov
fcomps
jl
in
loope
xchg
xor
lods
daa
add
jl
es
lods
jae
sarb
jae
daa
fimuls
mov
sub
aad
adc
mov
test
jne
mov
jo
shll
add
mov
push
pop
xor
aas
rorb
xor
loop
xchg
or
jae
rcll
into
add
adc
test
push
mov
sub
and
dec
in
jne
add
sbb
in
mov
xchg
xor
sti
mov
in
add
push
imul
add
ret
daa
cltd
push
push
sbb
jno
pop
mov
mulb
push
cmp
cmp
pop
popl
inc
fwait
gs
movsb
lods
scas
mov
push
mov
ljmp
xchg
xor
sbb
or
xchg
dec
inc
jo
xor
fsubs
mov
fwait
sbb
dec
test
jbe
cmp
rol
dec
or
aam
ja
inc
pop
lds
and
pop
mov
xchg
xchg
push
dec
cli
mov
xor
mov
shll
jg
sbb
cmp
dec
fwait
pushf
jne
sub
jnp
mov
aad
xchg
scas
sbb
ret
mov
xchg
leave
cmp
imul
inc
sarb
clc
cmp
hlt
sbb
xchg
jno
stos
cmp
mov
or
fwait
jmp
jecxz
inc
dec
scas
incl
aam
ret
push
mov
stos
mov
add
aas
shl
mov
rclb
daa
cmp
add
xor
xor
cmpsb
pop
shr
adcl
adc
or
data16
rorl
lahf
fdiv
dec
fwait
ljmp
or
rorb
push
divl
cmpsl
test
jno
mov
inc
mov
ja
cmp
jl
rcrl
jb
cltd
leave
mov
movsb
inc
lcall
add
clc
repnz
not
dec
xchg
push
sbb
stc
insl
fwait
mov
pop
aaa
pushf
sbb
push
les
and
pop
adc
and
sub
dec
and
movsb
andl
push
orb
xadd
cs
xor
jno
push
stc
stos
hlt
subl
dec
lods
lea
jp
mov
lock
and
push
xchg
sbb
clc
jae
or
add
cmp
div
adc
push
xchg
mov
scas
insl
adc
dec
adc
call
mov
jbe
xor
jg
in
scas
aam
xor
sbb
pop
cmpsb
arpl
xlat
fnstenv
popa
pop
push
subb
insl
adcb
add
push
xlat
mov
jns
sbb
out
loop
cwtl
add
lock
or
das
in
xor
push
cwtl
pop
in
pop
and
shll
mov
testl
movsl
les
shrb
mov
test
fs
jmp
call
mov
mov
push
xchg
lock
movsl
clc
mov
sub
jne
mov
jae
jnp
insb
push
leave
in
adcb
cmc
outsl
dec
mov
inc
jns
push
adc
imull
in
jno
clc
sbb
add
ljmp
sub
xor
aas
xor
outsb
std
jnp
add
jg
fisttps
sbb
sbb
push
cmp
sub
nop
jne
adcl
es
aad
pushf
push
push
decb
dec
arpl
mov
ljmp
fs
lea
jno
aaa
adc
cld
dec
stos
jp
push
push
call
insl
xor
lret
gs
sbb
rcrb
and
add
or
sub
push
mov
xchg
sbb
fsubs
jg
loop
mov
inc
pushf
jmp
clc
xlat
cmp
sbb
mov
shlb
mov
xchg
sub
subb
aam
lods
sbb
incl
test
mov
imull
stc
dec
outsl
pop
sbb
mov
in
imul
mov
sub
dec
cltd
lea
rcrl
ds
test
movsb
ficompl
jmp
out
fwait
shr
xchg
cmp
lret
and
xchg
fnstenv
out
pop
jp
jnp
hlt
repz
repz
sarl
rorb
adc
xor
fdivp
and
push
test
sbb
data16
subb
je
sbb
pop
cwtl
cs
add
out
xor
lock
adc
push
pop
movsb
xchg
xor
inc
dec
scas
outsb
xchg
scas
sti
cli
cmc
pushf
inc
lods
jns
and
pop
in
fbstp
xchg
cmpsl
outsb
jg
gs
pop
andl
inc
jg
fisubl
fbstp
add
enter
in
cmp
and
mov
pinsrw
sub
adc
fcoms
out
cmp
xor
stc
stos
pop
adc
pop
lock
call
int3
xchg
or
aam
add
add
ljmp
fwait
imul
push
gs
jns
push
cs
or
sarl
pop
lds
cmp
xchg
pop
outsb
inc
int3
lds
int3
fisubrl
aam
dec
mov
mov
push
push
mov
xlat
repz
pop
jmp
imulb
pop
sti
pop
push
sti
xchg
shrb
dec
sub
sbb
push
stc
dec
sbb
mov
mov
xor
lods
data16
lahf
inc
js
bound
out
lahf
jb
stos
adc
fnsave
mov
sbbb
repnz
sar
rcr
or
jp
scas
push
xchg
rorl
and
cs
xor
ljmp
es
insb
outsl
mov
enter
clc
clc
ljmp
adc
mov
prefetch
mov
outsl
loop
adc
mov
lock
pop
xchg
and
outsl
int
jge
aas
inc
cwtl
dec
pusha
cli
enter
loop
les
pop
loop
rcrb
xchg
std
mov
add
cs
push
icebp
outsl
mov
jo
and
ret
leave
rcll
pop
mov
repz
faddl
xor
cmp
dec
in
test
xor
mov
jbe
out
dec
scas
push
insl
dec
in
pop
mov
dec
sahf
stos
insl
dec
cmp
out
fidivl
or
jno
push
add
dec
dec
mov
mov
inc
fcomps
cmp
ja
rolb
fsubp
xor
enter
cmp
mov
adc
and
inc
cwtl
ljmp
js
cld
shrl
sub
inc
or
lcall
mov
pop
lods
nop
hlt
push
out
push
jmp
ret
pusha
cli
cld
dec
sbb
shr
out
filds
andl
sub
add
orb
push
adc
loopne
or
leave
dec
xchg
jmp
xor
icebp
jecxz
mov
rcrb
mov
jge
fidivl
test
lods
jb
mov
or
nop
adc
aam
das
repz
psraw
or
xor
pop
xchg
push
mov
sarb
in
adc
rcl
lret
xor
add
sbb
or
and
jmp
push
mov
or
enter
test
adc
leave
in
inc
xchg
inc
outsb
icebp
icebp
fcmovnu
loop
jne
ljmp
push
in
xor
packuswb
cmpsb
inc
pop
cmp
push
movsl
sbb
and
daa
jl
fistpll
sbb
mov
loop
mov
fisubl
cmp
movsb
pop
xchg
dec
fdiv
lds
push
popf
icebp
push
int
fwait
psubw
loop
mov
fs
cmpsb
mov
mov
jne
aad
int3
xchg
insb
hlt
add
mov
mov
in
rol
jo
pop
xchg
pop
fdivs
pop
and
popf
cmpsl
xor
mov
out
mov
lods
mov
cmp
jbe
adc
push
out
fsts
imulb
in
je
push
xchg
jno
xchg
cmc
out
dec
pop
and
cmp
subb
and
mov
push
xlat
lret
adc
lret
inc
cld
add
jae
adc
sub
pushf
push
mov
cmp
jae
push
aad
xor
dec
xor
test
movsb
pop
scas
sahf
dec
add
adc
dec
shll
std
mov
sbb
ret
call
or
cmp
inc
out
mov
xor
lahf
rcll
mov
mov
icebp
adc
cmp
jbe
mov
pop
rcl
addr16
movsb
pop
in
daa
out
cmp
xchg
push
rolb
mov
push
loopne
cmpsb
cmp
lock
mov
lods
mov
iret
and
in
fisubs
cmp
dec
hlt
ds
add
les
pusha
inc
mov
push
sub
mov
xchg
out
xor
out
loop
jecxz
push
mov
fs
dec
pop
inc
arpl
rol
test
in
ss
cmpsb
jge
dec
jl
fnsave
sar
lret
out
lahf
iret
aas
mov
fidivrs
outsb
add
pop
scas
and
leave
sahf
sub
mov
nop
daa
lahf
ja
jp
push
jns
sti
push
xlat
fwait
loope
mov
shlb
jge
out
xchg
dec
or
pop
dec
insb
inc
dec
ror
pop
pop
jne
xor
into
adc
int
pusha
mov
mov
push
in
int3
fisubs
pop
jecxz
and
pop
xor
cmp
das
mov
sbb
xchg
aam
fs
adc
lock
je
pop
incb
jp
push
fildl
push
lret
das
xchg
mov
arpl
sub
pop
mov
push
add
mov
adc
out
daa
mov
xlat
fdivrl
fs
mov
add
jmp
repz
and
pop
test
mov
mov
jnp
fcoms
repz
shl
cmc
les
or
mov
sbb
xor
jmp
sub
sub
xor
jne
or
sub
imul
mov
enter
mov
pop
jno
dec
add
js
aas
ret
xchg
shl
push
sub
loope
loopne
push
rorl
push
dec
sub
sub
test
sub
cli
addl
int3
in
fisttpll
loopne
pop
mov
scas
mov
inc
dec
into
movsb
js
shlb
adc
dec
hlt
pop
jbe
sbb
das
pushf
divl
push
mov
sarb
test
pop
in
ss
sub
and
mov
and
push
repnz
xchg
pop
divb
out
lds
stos
mov
ret
fs
fwait
gs
cmp
pop
pushf
or
push
rcrl
inc
inc
add
mov
bound
ret
scas
xchg
push
aam
sub
cmp
push
or
xchg
inc
ficomps
mov
shlb
mov
arpl
pusha
dec
insb
dec
les
add
adc
mov
dec
gs
stc
push
mov
call
outsl
outsb
loop
push
iret
xchg
adc
push
sub
push
inc
mov
xchg
icebp
test
cmp
call
jae
mov
int3
sub
sbb
cwtl
mov
leave
cmc
xchg
cmp
lock
sub
lret
inc
pop
aas
pop
jl
rcr
and
mov
popf
rcrb
scas
rclb
cld
jle
aas
sahf
mov
movsl
imul
addr16
clc
add
mov
add
jnp
sbb
cli
sub
xor
mov
add
cmpsl
add
push
outsb
es
shlb
mov
dec
fildl
pop
mov
xchg
in
test
hlt
lods
stos
cmpsb
scas
repnz
fwait
sbb
mov
into
das
pop
add
fcoms
dec
mov
out
shr
sbb
lods
lret
pop
std
fsub
pop
icebp
shl
sarb
jnp
dec
mov
popf
ret
jnp
mov
xchg
jecxz
inc
and
fistps
adc
push
sbb
cmp
repnz
cmpsb
rcrl
jnp
das
pop
mov
adc
sub
addr16
pop
xchg
mov
jbe
and
pop
or
test
xorb
dec
jge
adc
pop
test
leave
mov
inc
adc
inc
inc
mov
xchg
adc
test
hlt
daa
test
jno
dec
push
mov
push
sar
out
and
cmpsb
leave
repz
orl
std
loope
xchg
cmp
out
dec
je
shl
mov
sub
arpl
sbb
mov
mov
push
add
fildll
cmpsb
mov
add
jmp
lea
pop
pushf
xchg
mov
mov
push
push
insb
mov
inc
or
rcrl
daa
pop
rcrl
mov
lods
jmp
loope
push
fstpt
test
jg
loope,pn
call
push
pop
clc
das
dec
int3
pushf
scas
repnz
push
or
adc
jb
mov
subb
pop
mov
es
popa
xor
and
mov
lea
cmc
or
mov
push
xor
push
rorb
scas
mov
inc
cmp
icebp
xchg
add
jne
insl
lret
pop
imul
int
test
cmpsb
hlt
pop
lock
rorl
leave
icebp
xchg
out
pop
imul
pop
jae
lods
mov
js
sbb
xchg
movsl
jp
ss
subb
push
or
jmp
dec
cmpb
and
pop
and
pushf
sbb
xor
movsb
iret
dec
push
in
data16
xor
dec
in
jp
sbb
xor
shl
dec
push
mov
sub
or
aam
cmp
lcall
add
ror
dec
or
in
es
nop
inc
out
into
pop
cmpsb
iret
jp
cmp
hlt
scas
add
lock
dec
shll
mov
or
mov
clc
adcb
fstpl
daa
xchg
std
pusha
sbb
test
mov
mov
pop
push
mov
push
dec
pop
das
inc
sbb
sbb
adc
popf
jns
mov
jg
shr
pop
xor
pushf
mov
dec
sbb
test
pop
add
bound
int
and
xor
xor
xor
fisubs
repz
mov
add
sbb
inc
jmp
int
xchg
or
sahf
aam
cmp
fs
push
jp
dec
lcall
adc
stc
jecxz
xor
out
jle
imul
and
xchg
mov
xor
xchg
mov
fstpt
fadds
jp
lds
daa
and
cli
or
cmp
push
adc
jne
in
mov
dec
into
mov
adc
xor
dec
mov
addb
js
or
cld
shrb
dec
test
inc
ss
push
arpl
jecxz
mov
inc
jbe
cmc
pop
roll
mov
dec
stos
cmp
aad
jo
test
fildll
mov
ja
in
dec
push
pop
mov
pushf
jb
enter
or
not
loop
incb
inc
pop
sub
out
push
mov
mov
xchg
out
jmp
daa
mov
out
push
adc
push
pop
sbb
mov
sbbl
jl
mov
add
mov
adc
inc
je
or
pop
ds
into
sub
mov
cmpsl
mov
scas
xchg
mov
stc
lock
or
fistpl
and
mov
or
xorl
popa
add
adc
cmp
xlat
repz
int
lods
pop
test
insl
sbb
cpuid
inc
repz
aaa
xchg
add
jge
mov
push
or
ficoml
loop
xchg
push
sbb
sbb
mov
xchg
pop
jno
cltd
lods
rcr
push
jp
adc
outsb
pusha
loopne
and
adc
lods
test
lods
xor
loope
dec
test
loope
cltd
xchg
inc
xor
xchg
jmp
imul
mov
xor
push
movzbl
cmpb
ss
sub
xchg
int
xchg
push
inc
pop
cmpsl
dec
imull
aad
jle
clc
sub
jns
mov
les
aaa
call
adc
daa
cmp
imul
idiv
cmpsb
pop
sbb
shr
ss
xchg
jle
inc
push
les
push
cmp
jge
inc
push
jb
test
mov
or
mov
rcrl
clc
stos
stc
jae
inc
pushf
movsb
fnsave
cld
in
sub
xor
and
lcall
scas
mov
push
not
mov
or
int3
fists
cmp
xor
cmpsl
mov
push
cmp
mov
or
add
ljmp
stc
mov
pop
insb
cmp
xchg
adc
repz
or
mov
xchg
push
movsb
int3
insl
insb
arpl
dec
icebp
icebp
fs
aas
sbb
xchg
and
rolb
mov
shlb
or
imul
mov
cwtl
loop
insl
or
cmp
out
dec
hlt
mov
sti
shrl
dec
mov
cmp
jns
mull
push
jecxz,pt
jnp
jmp
js
pop
lods
outsb
cwtl
loop
xchg
data16
aad
repz
mov
pop
push
jmp
lea
mov
repz
xor
jnp
divb
push
push
pop
sbb
mov
add
inc
test
push
shlb
sub
outsb
les
clc
pop
xor
mov
push
sub
andl
xchg
cld
aaa
sub
inc
cltd
xlat
fdivrl
inc
sbb
lock
clc
shlb
leave
out
je
jmp
lock
mov
mov
addr16
fcompl
insl
mov
in
test
mov
mov
inc
push
das
lret
cmp
and
mov
jg
jno
imul
movsl
jne
cmpl
push
es
dec
pop
cmpsb
rcll
in
icebp
ret
xchg
adc
push
mov
ds
lea
aaa
hlt
rorl
xchg
add
jecxz
or
mov
sub
cmp
out
pop
push
adc
and
sti
pop
ds
cmp
stos
fimull
dec
ret
cmp
cmp
mov
sub
xor
repz
jle
ja
ljmp
mov
sub
lahf
or
or
push
lock
test
jno
inc
in
push
push
ds
xchg
mov
lret
fisttpl
or
xchg
xchg
clc
ficoms
js
scas
lock
dec
push
icebp
sub
push
sbb
cmp
sub
js
daa
mov
sahf
mov
nop
fxch
xchg
aam
ss
mov
aaa
and
fistpl
sub
sub
aad
fidivl
jecxz
into
or
jl
aad
into
in
mov
push
mov
xchg
adc
leave
dec
jecxz
call
loop
mov
rolb
mov
mov
xchg
out
pop
sbb
cs
and
sbb
jl
pop
pop
call
call
addr16
jno
int
lea
jp
loope
fdivrl
sub
call
push
jl
imul
push
mov
pop
push
popa
or
outsl
add
int
sub
mov
xchg
sub
rcll
sub
imul
loope
aad
or
cmp
cmp
push
xor
js
out
out
xor
sbb
dec
mov
add
movsl
fnstsw
pushf
xchg
test
mov
mov
pop
jb
cmp
mov
lcall
in
outsb
mov
push
ret
pop
pop
shll
insb
add
negb
jle
ds
add
cwtl
xchg
inc
push
pop
mov
mov
mov
mov
push
das
lea
adc
adcb
sbb
ds
fstpl
in
xor
pop
mov
popa
pop
inc
imul
adc
inc
gs
lret
push
or
aas
icebp
outsl
pop
jbe
cmpsl
pop
or
bound
arpl
jl
out
xchg
lods
mov
sub
cmovg
dec
push
andl
and
mov
lret
imul
cli
inc
jns
dec
jmp
xchg
mov
sbb
movsl
add
lret
mov
mov
cmpb
or
sahf
dec
ja
xchg
xchg
mov
mov
loop
stos
mov
xor
ret
dec
imul
stos
push
ret
mov
outsl
aad
into
pop
or
pop
dec
pusha
hlt
imul
lahf
dec
sbb
cmp
into
ret
popf
pop
leave
and
lret
das
adc
daa
test
and
test
fcmovne
cmp
mov
adc
sub
sbb
call
outsb
push
jb
add
lcall
cld
push
lods
sub
ret
or
jmp
sub
and
mov
sar
and
pop
pop
mov
call
aad
gs
enter
add
push
sbb
jae
daa
mov
mov
sub
shlb
sub
insb
jle
stc
xor
xchg
push
push
xchg
loop
sub
inc
sbb
sbb
cmp
mov
pop
jp
push
lret
in
scas
mov
mov
movsb
dec
je
cmp
andl
mov
es
push
cs
out
inc
movb
out
xchg
pop
sub
inc
xchg
dec
mov
add
dec
ret
sub
les
pop
xchg
dec
movsl
or
das
jo
xor
stos
imul
out
lock
pop
std
pop
cli
and
fldt
xor
ja
cmc
fwait
adc
add
push
icebp
jge
cltd
addr16
je
inc
jae
adcb
sbb
jecxz,pt
and
and
testl
pop
fiadds
mov
je
imul
rep
push
xor
sbb
ljmp
rcll
jns
int
mulb
out
jnp
cwtl
sarb
adc
inc
imul
cli
xchg
das
fwait
and
xchg
in
mov
imul
in
sbb
jecxz
loope
xchg
inc
push
test
insb
into
push
les
cmpsb
adc
lahf
icebp
aas
out
push
pop
ret
imulb
hlt
push
rol
sbb
enter
icebp
xor
arpl
enter
dec
repz
out
sahf
es
in
jns
push
adc
push
fcoms
or
push
dec
stos
not
iret
jb
rcll
mov
push
xchg
lods
popa
ficoms
mov
ror
lahf
cmp
insb
lods
out
and
sub
loopne
and
stos
xchg
or
mov
mov
cmpsb
adc
xchg
xchg
cld
std
jns
mov
pop
or
and
sbb
mov
ja
sbbb
mov
cmp
sbb
notb
mov
push
cmovnp
pop
push
or
mov
sbb
dec
mov
adc
movsb
sub
mov
add
cmp
sbbl
adc
dec
je
sub
in
and
mov
jae
mov
inc
xor
push
mov
ret
cmp
in
adc
in
les
ret
xor
dec
out
daa
fnsave
pop
pop
std
fldl
sub
jge
cmp
mov
cld
fdiv
xchg
jns
pop
sub
adc
popf
pushf
mov
aas
repz
fwait
xchg
in
out
xchg
and
ljmp
push
fcoml
test
jmp
cld
sbb
das
in
pop
pop
aad
js
imul
mov
inc
sti
shl
push
jmp
shl
shll
push
dec
mov
inc
cmp
rcr
lcall
mov
or
mov
sub
jp
cltd
or
jbe
or
push
fldt
int3
shlb
mov
iret
cmp
cmp
test
or
adc
int
xchg
inc
push
cmp
dec
and
rclb
add
mov
ss
scas
insb
xchg
jbe
mov
scas
shlb
inc
and
mov
jl
and
pusha
cmp
cltd
and
and
dec
add
jle
popa
add
push
push
clc
cwtl
pop
idivb
inc
mov
jl
pop
mov
inc
fisttps
insl
insl
push
gs
popf
mov
out
xor
ljmp
hlt
sarl
mov
bound
xor
nop
les
dec
adc
js
scas
push
lahf
into
mov
test
add
and
arpl
jnp
stos
cld
dec
xor
mov
insl
push
xchg
add
aam
je
push
sbb
lds
push
mov
sub
fldenv
shr
in
fsub
sbb
stos
dec
sbb
xor
sbb
loope
and
fsubrs
in
addr16
inc
pop
stos
and
pop
push
aaa
xor
and
sub
pusha
mov
xor
mov
jno
sbb
mov
mov
mov
inc
jae
mov
xchg
clc
ss
pop
and
js
mov
ljmp
fnstenv
jmp
add
pop
xchg
pop
push
xor
pop
pop
inc
out
test
movsb
xbegin
or
add
jb
mov
rcrb
mov
push
mov
jp
ss
xor
mov
jb
xchg
or
or
mov
imul
sbb
sbb
push
adc
arpl
enter
mov
mov
bound
addr16
aam
lcall
lea
or
stc
sub
fs
push
and
sbb
push
or
jb
das
loopne
sbb
repnz
icebp
jno
call
out
push
mov
lret
andl
sti
sbb
and
lea
push
imul
sbb
add
mov
dec
sti
inc
lds
cld
dec
cmc
or
xchg
fcoms
mov
add
insl
and
movsb
mov
sbb
shrl
pushf
aad
cld
testb
lds
mov
pop
cmpsl
fchs
jnp
int3
iret
fdivl
testb
aas
sub
ror
add
movsl
push
cmc
pushf
cmpsl
rorb
arpl
lret
imul
adc
dec
scas
adc
jo
jbe
cmp
xor
insb
push
leave
sbb
aas
cwtl
push
mov
ss
aas
sub
data16
inc
cmpsb
into
jo
xor
fwait
mov
push
mov
mov
subl
mov
dec
movsb
ss
xor
push
push
sbb
push
test
pop
push
xlat
rolb
out
ds
dec
test
inc
and
mov
pop
mov
icebp
movl
inc
arpl
adc
sub
push
sub
xchg
shrl
push
gs
xchg
dec
outsb
bound
mov
mov
call
test
mov
mov
dec
call
pop
shlb
push
lods
movb
mov
rol
addr16
ljmp
xchg
add
xor
in
je
push
mov
in
adc
les
cbtw
imul
pop
push
cmpl
fmuls
bswap
insl
imul
dec
test
xchg
pop
xchg
and
sbb
adc
dec
jl
frstor
and
lret
clc
pop
sub
or
mov
push
push
ss
imul
jne
mov
and
dec
mov
ds
scas
lods
cmp
jge
cmp
outsl
sbb
scas
xchg
mov
repz
cmp
stos
lret
aaa
cmp
int3
mov
and
or
jae
repz
gs
mov
int3
or
cmp
sarl
xchg
lret
out
mul
push
xor
out
mov
lds
inc
and
pop
paddb
sbb
dec
inc
push
jne
loopne
mov
mov
and
pop
aad
in
test
xlat
jbe
mov
xor
lcall
mov
addb
jnp
repz
push
jmp
cmp
xchg
mov
mov
popf
and
sub
test
push
cwtl
jnp
jnp
mov
pop
fisubs
idivb
call
outsl
sbbl
mov
mov
xchg
std
mov
fadd
ds
aad
pop
xchg
push
loopne
in
rcr
fcompl
mov
je
push
push
popf
jnp
lds
xor
dec
and
pop
loopne
jae
aaa
out
adcb
cmp
or
adc
xchg
cli
pop
fdivl
mov
lcall
jp
xchg
jge
sbb
jle
jecxz
lret
insb
push
dec
push
add
test
lea
pop
xlat
roll
les
aad
mov
in
jp
popa
mov
jle
shll
and
sbb
cmp
repnz
push
adc
orb
pop
sbb
mov
flds
imul
sub
imull
cmpsb
jb
fidivrs
jecxz
outsl
in
icebp
xchg
ret
fs
inc
cmpsl
xlat
cmp
out
inc
mov
leave
bound
push
shll
mov
adc
add
daa
sub
int3
scas
lea
jbe
mov
mov
xchg
hlt
sub
aad
iret
mov
push
xchg
xor
pop
cmc
xorb
sbb
fisttps
outsb
sbb
pop
jnp
ljmp
in
jnp
add
jns
fcmovbe
inc
cld
sbb
das
lret
test
mov
mov
es
cmp
xchg
xchg
or
cmpb
fistpll
mulb
enter
xchg
push
ljmp
bound
es
out
shrl
mov
and
mov
lods
imul
sbb
xor
inc
jo
adc
or
stos
rcrb
push
test
mov
lock
repz
jbe
push
insb
cmpsb
push
inc
stos
rcl
push
mov
into
xlat
cmp
xchg
bound
xor
mov
data16
nop
xchg
pop
push
loopne
sbb
cmp
mov
pop
mov
sub
out
jns
insl
ds
fneni(8087
dec
stos
fidivrl
int3
ljmp
scas
push
sbb
nop
movsl
mov
fs
sahf
adc
cmp
rcrl
or
jae
in
or
fwait
sbb
push
pusha
sbb
daa
jns
enter
stos
fs
icebp
or
dec
aas
ds
or
test
dec
inc
sbb
imul
mov
pop
es
mov
imul
jge
out
jl
pop
xchg
push
addr16
xchg
dec
xchg
int
aam
mov
fst
push
xor
aad
or
mov
call
cltd
lods
insl
and
jecxz
push
sbb
sbb
inc
js
stos
and
mov
notb
scas
ret
cmpsl
out
and
data16
insb
adc
fmuls
dec
cmp
xlat
add
lret
dec
cmp
pop
popf
add
sub
sub
mov
sbb
imul
clc
lds
fwait
sar
mov
ret
adc
outsb
or
jnp
mov
aaa
mov
inc
popa
insl
cmp
stc
aaa
andl
xchg
shrb
sbb
rcll
rorb
adc
push
mov
xor
push
pop
push
cmp
sbb
and
pop
bnd
fs
pusha
fucomp
dec
sbb
or
mov
cmpsb
fcompl
pop
hlt
mov
or
icebp
sahf
mov
in
into
aas
mov
inc
push
dec
pop
scas
xchg
in
fcmovb
inc
fs
dec
sub
lock
inc
test
cmp
adc
int
adc
lahf
std
filds
lods
jle
mov
fdivrl
xor
xorl
sub
sar
pop
cwtl
push
daa
testl
adc
inc
mov
jb
xor
popf
pop
inc
dec
jb
andl
lret
adc
shl
ffreep
arpl
lahf
pop
fstl
std
fsts
cmp
cld
sarb
fdivs
sbb
sbb
in
inc
repz
xor
das
jns
lret
stos
sbb
in
mov
cmc
cmp
bound
xlat
sub
in
sub
pop
fldt
imul
test
sub
adc
call
shrl
dec
add
xchg
jmp
push
push
cmpsb
and
inc
lods
pop
add
mov
inc
int
es
ret
cld
sbb
cmp
push
imul
cltd
dec
mov
int
mov
stos
daa
or
sub
sti
push
add
in
into
push
mov
mov
add
aad
pushf
push
les
add
int3
add
or
mov
xchg
imul
mov
cmp
jmp
xor
push
or
mov
add
and
xchg
xchg
jb
push
sub
jne
outsl
and
pusha
inc
add
aam
fisubrl
lods
push
ds
inc
into
jns
aas
mov
enter
jo
mov
ffree
xorl
dec
lcall
mov
data16
pop
sbb
jmp
xorl
push
push
ret
fidivrs
push
push
das
jecxz
cmp
mov
push
mull
push
pop
mov
fcomp
fdivrs
cld
ja
push
daa
and
imul
xchg
call
shr
cmp
imul
std
subl
fldcw
pusha
dec
xor
xchg
sub
sbb
cmpsl
int3
ds
or
out
mov
daa
or
jo
add
out
lock
divb
lea
mov
enter
xchg
stos
jl
mov
pop
mov
rcrl
dec
mov
xchg
es
cld
stc
push
mov
imulb
mov
icebp
cmp
dec
mov
xor
fnstcw
jge
xor
push
inc
mov
jae
aas
cmc
inc
stos
jb
sbb
jbe
fsubr
int3
lods
cmp
mov
xchg
push
or
dec
add
pushf
test
mul
add
jns
pop
sti
hlt
xor
dec
orl
pop
inc
inc
inc
sub
sbb
enter
xchg
sti
jle
xchg
mov
jno
jb
cmp
nop
sbb
loop
stos
dec
insl
fcmovne
or
push
in
push
pop
cmp
mov
or
push
lcall
push
hlt
stos
push
aam
loop
pop
fisubs
cwtl
sub
pop
jne
loopne
stc
mov
or
imul
mov
mov
mov
fcoms
or
sub
sbb
rolb
lds
popf
mov
mov
mov
push
fldenv
sub
sahf
cmc
icebp
loop
hlt
les
mov
js
mov
mov
aas
xor
mov
pop
fcomps
push
aaa
add
enter
dec
mov
mov
orl
mov
mov
imul
aas
dec
push
jl
adc
stos
add
fidivs
pop
inc
mov
into
xchg
stc
push
jg
lea
and
int3
mov
lds
jno
popf
and
out
dec
leave
fwait
adc
jecxz
in
jle
xor
cmp
leave
loope
mov
pop
inc
pusha
or
movl
xchg
in
add
push
dec
stc
pop
adc
jl
popf
arpl
mov
into
xchg
cmp
sbb
fsubs
jno
loop
icebp
loope
aaa
push
adc
mov
or
or
jo
and
sbb
shr
fcomp
inc
mov
jecxz
xchg
in
adc
xor
lea
cmp
mov
int
out
mov
test
mov
adcl
xor
mov
dec
add
fdivl
mov
xsaveopt
mov
lods
les
addr16
cmpsl
mov
test
ucomiss
jb
fldl
jmp
jo
xchg
addr16
js
jae
xchg
adc
arpl
loop
add
dec
mov
cs
iret
lods
fimull
fisttpl
pop
iret
pusha
insb
stos
leave
lods
sbbl
mov
cltd
mov
jle
xchg
nop
jbe
int
push
cwtl
and
test
lahf
aad
mov
mov
mov
jge
mov
and
xor
jp
inc
repz
or
cmp
scas
insb
jnp
xchg
push
mov
push
jmp
scas
ja
or
cmp
ret
jo
in
inc
inc
pushf
or
pushf
xchg
nop
fdivs
sub
and
push
pop
clc
jnp
mov
outsb
xor
push
mov
add
scas
icebp
dec
fdiv
mov
scas
sbb
add
sub
cwtl
pusha
outsb
std
gs
daa
cmp
and
lds
int
mov
test
xchg
push
add
fisubrl
js
inc
roll
pusha
jmp
inc
call
sbb
push
icebp
adc
inc
cmc
push
pop
jmp
dec
mov
xchg
push
lret
cmpsb
mov
sub
mov
push
push
mov
ja
fdivp
out
dec
and
jmp
cltd
rolb
aas
call
cld
fmul
in
test
mov
hlt
or
into
add
aaa
xor
mov
daa
pop
push
and
and
mov
cmp
xchg
loopne
cmpsl
xchg
bound
or
leave
lahf
scas
or
xor
aam
repz
sbb
fistpll
pushl
and
push
pop
xchg
test
repnz
das
inc
push
js
push
clc
popa
pop
rol
loope
mov
fistpl
test
mov
mov
out
loop
sub
xchg
push
sbb
xchg
add
call
pusha
sahf
lods
jl
test
sbb
and
xchg
xchg
leave
add
rclb
sbb
call
mov
loopne
lahf
pavgb
lods
cli
mov
ret
mov
aas
pop
aaa
movsl
clc
stc
sub
push
pop
popa
push
and
and
jo
test
frstor
jo
rcrl
lds
xchg
outsb
xor
dec
es
test
or
cmp
and
int3
in
jl
lods
inc
cmp
in
cmp
dec
scas
jecxz
add
jg
pop
gs
in
push
jle
or
or
inc
dec
inc
push
fcoms
dec
pop
jecxz
xchg
bound
pop
je
int3
ffreep
mov
jae
pop
jno
orb
out
orl
lods
push
xsavec
jl
mov
out
es
in
and
lcall
out
push
jge
mov
mov
push
jnp
mov
mov
pusha
pop
call
push
rorb
xchg
mov
jecxz
sbb
sbb
mov
aaa
loope
popf
js
xchg
leave
mov
leave
dec
add
pop
pop
jge
mov
call
int
mov
and
cmpsl
adc
and
fmuls
enter
sbb
sti
mov
sub
scas
insl
xchg
xor
sub
and
repnz
mov
sbb
stos
or
test
push
stos
sub
fsubrl
mov
lock
mov
enter
lods
sbb
mov
xchg
loope
push
or
mov
orb
fistl
mov
sub
in
xchg
test
dec
pop
ret
jne
xor
add
dec
arpl
mov
or
lds
leave
adc
loopne
test
cmp
mov
jge
test
aas
ss
sbb
out
mov
inc
loopne
sub
pushf
cs
dec
loopne
sbb
dec
loop
bound
fcompl
mov
inc
ljmp
pop
lret
cld
shl
bound
cmpsl
push
push
and
scas
incl
push
in
dec
xchg
out
outsb
aas
out
ret
incb
popf
lcall
cmp
cwtl
mov
int3
push
fisttps
mov
ret
mov
sub
and
imul
push
cmp
call
stos
push
push
mov
sahf
mov
movsb
dec
jl
dec
mov
pop
lods
aas
mov
mov
test
mov
imul
cld
lret
out
push
aas
push
jae
add
and
xchg
xchg
gs
stos
cmp
icebp
xchg
mov
and
lock
fimull
pusha
or
push
pop
and
rolb
andl
mov
clc
xor
imul
popa
mov
pop
sar
xor
outsb
mov
xor
lcall
xorb
fimuls
daa
jmp
stc
test
adcb
scas
vcmppd
addr16
popl
mov
mov
aad
lods
sbb
rcll
dec
cmpsb
xchg
fisubl
sub
xor
dec
imul
in
ja
int
ds
inc
adc
sub
push
ret
jecxz
ljmp
addb
add
xchg
pminub
or
lret
mov
fsubr
lcall
sub
adc
mov
scas
orb
xor
into
push
xchg
mov
cmp
mov
stc
sub
pop
rolb
outsl
rcll
sbb
sbb
jle
cwtl
sbb
cwtl
das
dec
popa
and
cltd
and
shlb
loop
push
mov
inc
out
loope
mov
popf
repz
gs
popf
xor
loope
xchg
xor
mov
xchg
into
cli
cwtl
jmp
ret
jo
dec
shrb
jne
inc
add
loopne
inc
test
movsl
fisttps
loope
loopne
add
sub
mov
mov
and
cmp
add
xor
clc
fwait
iret
mov
mov
jns
aas
popf
or
xor
cmp
mov
sub
cmp
mov
lret
fbld
xchg
inc
cli
sarl
stos
stos
lds
push
mov
aaa
in
and
scas
scas
cmp
mov
nop
pop
std
sbb
imul
mov
fstpt
pusha
clc
mov
sub
pop
xchg
cli
push
and
enter
fldcw
add
xlat
mov
mov
nop
dec
aaa
fwait
mov
push
lahf
das
cwtl
sarb
adc
rorb
pop
push
pavgb
or
lret
loope
les
outsb
popf
sub
push
jo
xchg
cli
lock
pop
xchg
and
out
jle
lret
or
pushf
bound
cwtl
jp
jns
js
and
xor
push
in
lods
xchg
repnz
xchg
test
adc
pushf
aam
mov
inc
xor
add
push
mov
add
lret
fwait
xchg
xorb
jle
cmp
fld1
add
scas
scas
mov
jb
in
inc
adc
jg
hlt
enter
out
fisttpll
call
cmp
ss
jbe
pop
lret
outsb
cltd
std
ffreep
xor
mov
in
push
faddp
iret
sbb
add
mov
nop
pop
orb
and
popf
pop
xchg
or
inc
out
cmc
mov
cmp
mov
dec
inc
std
das
jp
mov
cwtl
sub
sub
rclb
cmpsl
dec
das
enter
pusha
jl
or
jmp
lods
jp
pop
adc
inc
mov
int3
in
sbbl
lret
aam
mov
pop
imul
pop
stc
adc
dec
xchg
adc
arpl
pop
pushl
fcoml
pop
push
ljmp
sub
shrl
iret
dec
push
sti
xor
fwait
int
pop
pop
or
mov
or
call
je
cmp
bound
test
mov
fdivl
jo
shl
es
enter
jns
lds
sub
popa
ss
push
push
enter
inc
addr16
movsb
sub
push
sbb
pop
cmp
push
enter
adc
add
jmp
sub
sub
ret
aaa
inc
add
mov
fcmove
lods
lret
cld
mov
clc
mov
adc
aam
inc
outsb
pop
xchg
ss
pop
xor
add
dec
adc
das
nop
out
cwtl
gs
fwait
xor
add
dec
xor
in
or
adc
or
jne
pop
adc
pop
jns
pop
xchg
cltd
cli
push
jle
pushl
stc
inc
and
inc
xor
sti
or
add
jne
add
jg
xchg
movb
out
sbb
jbe
insl
daa
test
mov
gs
psubw
lahf
lock
push
pushf
inc
lock
push
sbb
xor
push
aad
mov
gs
and
mov
mov
sahf
in
repz
pop
dec
mov
mull
dec
daa
aad
cld
int
xor
int
pop
mulps
sbb
insl
xor
std
test
cmp
xchg
inc
sub
cmp
ss
inc
data16
in
xor
movsb
sub
aam
inc
neg
mov
aam
adc
imul
outsl
inc
sub
fwait
push
inc
lods
stos
rcrb
je
sbb
shl
mov
inc
xchg
cs
fiaddl
fildl
ds
xchg
mull
pop
jecxz
outsb
push
xor
es
push
mov
lods
sub
add
sbb
cs
pop
ja
mov
sbb
fnstsw
shlb
andb
sbb
adc
sbb
mov
and
pushf
mov
jno
clc
loope
addl
sub
mov
push
pusha
ljmp
arpl
push
cmpsl
inc
sbb
pop
mov
aaa
scas
mov
sarl
fmul
inc
and
repz
popf
iret
jmp
imul
cmp
movsb
mov
dec
hlt
mov
adc
mov
sub
jge
push
stc
sub
or
int
inc
int3
call
adc
dec
and
cs
hlt
and
sub
andb
pusha
loop
pop
pop
sahf
lds
fsub
cli
xchg
fnsave
adc
test
data16
pop
dec
adc
cmp
sub
inc
fldcw
movsb
push
repnz
fadd
sub
out
js
adc
mov
dec
adc
cmp
lretw
mov
daa
xor
jae
movsl
arpl
xchg
and
lret
sub
push
push
int3
repnz
cmp
xchg
mov
test
icebp
mov
aam
icebp
mov
cmp
lods
loope
stc
push
out
mov
and
sub
xor
push
aaa
fildl
add
scas
adc
and
cmp
test
mov
pushf
pop
vmovdqa
icebp
xlat
xor
rolb
or
jmp
xchg
or
lock
adc
cmp
sub
pop
dec
mov
ljmp
mov
mov
adc
adc
int3
cmp
jmp
mov
lock
pushf
pushl
scas
insb
xorps
push
xchg
clc
cmp
icebp
push
or
push
fcmovnb
loopw
add
insb
ret
inc
pop
xor
fimull
pusha
add
leave
and
cs
add
mov
sub
pop
mov
inc
testb
xor
jp
lock
adc
sete
mov
inc
mov
pop
lods
fstpl
mov
inc
xor
in
xlat
mov
or
xchg
call
inc
sub
imul
scas
adc
dec
xor
push
push
aad
iret
ds
mov
lahf
test
jmp
int
push
jl
shr
inc
hlt
idivb
sbb
stos
rcrl
push
cmpsb
xchg
adc
add
dec
mov
in
pop
xor
cmp
test
mov
mov
dec
scas
push
lcall
inc
clc
arpl
xchg
mov
and
loope
out
push
jne
or
pop
sub
or
xchg
movsb
fisttpll
push
fcoml
cmpsb
and
pop
test
sti
shll
insb
ds
imul
adc
imul
fistps
inc
mov
loopne
mov
js
leave
movsl
loope
in
sub
out
dec
xor
in
push
lods
lods
andl
push
lcall
cltd
xor
cltd
adc
mull
in
push
sub
jae
jl
movsl
pushf
cmpsl
jl
std
repz
xchg
push
movsb
arpl
shl
mov
lret
ret
inc
adc
lahf
insb
aad
inc
and
out
mov
dec
sbbl
push
popf
repnz
rol
fdivrs
call
loopne
or
out
xor
mov
jecxz
xor
stos
add
sub
adc
mov
dec
ret
cld
stc
call
mov
xlat
stc
jg
dec
cmp
and
push
push
inc
push
mov
jnp
int
movsl
out
mov
or
dec
gs
xchg
lahf
sbb
inc
mov
leave
sbb
and
pushf
pop
adcb
lret
xchg
test
sti
jb
jo
sbb
fsubrl
std
sbb
push
cltd
adc
inc
mov
int
xchg
or
push
add
xor
ds
pushf
andl
and
out
sti
ret
push
ljmp
in
push
xchg
dec
pop
dec
js
mov
push
mov
aas
in
cmp
push
das
test
pop
enter
lds
and
mov
std
xchg
jne
pusha
pop
dec
das
sti
pop
dec
stos
movsl
shrl
jg
add
lahf
iret
out
cmp
iret
aam
subl
cmp
mov
loopne
aas
cmp
ja
inc
out
mov
stc
mov
sub
dec
xchg
or
cmp
call
pushw
sahf
inc
cmp
js
sbb
xlat
in
fisttpl
adc
xchg
adc
sahf
cmp
call
and
dec
cmovnp
jne
repz
lods
mov
out
mov
push
int3
dec
mov
cmp
jl
sti
cwtl
or
aaa
jnp
xchg
out
mov
adc
mov
or
mov
mov
push
std
out
cmpb
inc
gs
mov
fs
pop
pop
shll
jmp
pushf
sahf
xlat
pop
scas
mov
mov
movsl
xchg
mov
cli
pop
xor
sub
pop
push
addb
add
fs
test
inc
roll
test
jo
sub
outsb
cltd
sub
fnsave
and
aad
test
popa
mov
push
mov
pop
cli
push
add
sub
daa
jns
inc
cmp
adc
add
cmp
in
add
call
adc
lock
xor
dec
dec
adc
pop
stos
xchg
cmp
imul
incl
montmul
cmpsb
sar
mov
and
std
orb
sub
sub
fdivl
pop
loop
xorb
pusha
out
out
inc
loopne
cmp
ja
mov
sbb
repz
bound
cmp
imul
sub
or
and
mov
cmp
inc
jne
notb
popf
daa
scas
adc
jge
movsb
xchg
inc
pop
mov
mov
cs
addr16
mov
sub
fs
and
cmp
jge
test
pop
ljmp
cwtl
scas
mov
and
mov
inc
dec
or
faddl
fnstsw
bswap
inc
push
sti
outsb
pop
adc
mov
jno
shl
ja
lods
int3
mov
imul
mov
dec
lds
mov
inc
out
imul
popf
in
jnp
sti
mov
sub
mov
sub
icebp
fcomi
nop
rclb
cwtl
sarb
push
lock
cmp
movsb
xchg
in
cld
dec
jg
mov
and
mov
paddusw
xchg
cli
lret
mov
clc
pop
repnz
lret
into
test
out
fcmovnu
push
out
pop
mov
add
fwait
int
inc
aad
jge
mov
xor
sbb
stc
and
pop
insb
sbb
fdivrl
cmp
les
adc
pop
push
jo
iret
pushf
lea
dec
jne
je
aaa
bound
loop
jae
xor
repz
mov
cmp
outsb
fsubl
push
xchg
mov
subb
and
jmp
sti
lcall
fldt
daa
cmp
jns
cmp
test
out
test
jb
leave
ret
lcall
sub
mov
repz
mov
nop
scas
in
mov
sub
cmp
cmpps
push
fdivrp
cmp
es
sub
outsl
fnstsw
xchg
push
outsb
and
or
or
ljmp
or
data16
rolb
dec
decb
jbe
adc
cmpsl
cltd
out
xlat
mov
lods
and
pop
stos
or
rcr
rcl
push
comiss
movsb
es
std
fs
imul
pop
repnz
movsl
cli
push
pop
lds
mov
fldt
inc
pop
fsubrl
sbb
mov
mov
mov
jmp
xchg
push
out
cmp
addb
hlt
or
xor
jb
outsl
not
mov
dec
and
xorb
fistpll
jmp
stos
sbb
mov
add
dec
lea
add
out
je
xor
in
rorl
cmp
out
ds
add
jo
pop
out
inc
or
inc
scas
mov
dec
push
sti
mov
jle
data16
and
insb
xchg
incl
jo
mov
and
cli
adc
add
xor
rcll
dec
inc
test
dec
stc
jne
test
lcall
jl
and
dec
test
pop
data16
je
loopne
fcompp
dec
pop
xchg
movsb
or
pop
sub
imul
push
pop
inc
or
mov
xchg
dec
xlat
lret
ds
mov
pop
jge
jb
mov
and
fsub
xlat
call
sub
ret
dec
repz
mov
aam
int
mov
or
xchg
sarb
or
jmp
jae
inc
leave
pop
mov
sub
add
rorl
ljmp
inc
or
stos
mov
push
xchg
pop
out
xchg
or
cmp
or
push
add
rcrb
xchg
out
sbb
cli
scas
mov
sub
inc
incb
xchg
xchg
out
mov
inc
lea
jnp
stos
sbb
cmpsl
dec
pop
call
add
ret
shr
movsl
dec
and
in
lret
hlt
not
adcl
dec
outsb
xor
pop
repnz
cmp
adc
pop
jb
pop
int3
xor
out
xor
add
int3
ret
pushf
pop
es
push
jle
add
adc
rolb
fadds
mov
push
xchg
sbb
jmp
arpl
out
push
iret
xor
loopne
dec
int
shl
sahf
dec
out
idivb
incb
dec
jp
es
cltd
or
add
sub
rolb
or
daa
lcall
iret
stos
hlt
push
mov
fs
push
pop
wrmsr
and
push
pop
adc
nop
pop
loop
xchg
mov
aad
movsb
and
jne
movsl
or
loopne
aam
and
push
addb
xchg
andl
loope
fstl
out
fucomp
and
lahf
mov
adc
aad
pop
mov
xor
stos
mov
sbb
inc
xor
cmc
mov
sub
mov
xchg
add
popa
dec
cmpsb
or
jns
cmp
call
mov
stos
jb
jp
inc
shll
ss
imul
pop
adc
fiaddl
test
mov
mov
or
mov
xorl
ds
ds
addr16
cmpsl
mov
push
pop
scas
enter
daa
adc
cmpl
pop
sbb
arpl
mov
test
testl
cmp
inc
mov
cli
fisttps
out
pop
mov
xlat
daa
in
dec
aas
cmp
sub
jbe
fildll
cmp
sahf
das
cmc
sbb
push
xchg
shlb
and
mov
cmp
jne
out
in
add
idivb
mov
bound
push
inc
add
clc
add
daa
iret
inc
xchg
push
mov
cmp
out
and
test
into
mov
mov
pop
inc
xor
and
std
pusha
and
pushl
cmp
and
icebp
adc
fdiv
push
jno
jae
ss
sub
mov
out
bound
std
ret
adc
inc
addr16
out
cs
imul
jno
lcall
jl
lahf
je
fsubl
inc
cmp
xchg
scas
push
test
pop
and
lcall
popf
in
pop
mov
xor
gs
shll
cmp
outsb
or
and
dec
pop
in
imul
jge
mov
sub
pusha
dec
xor
int3
inc
and
lds
xchg
push
int
iret
inc
adc
dec
mov
mov
mov
and
inc
adc
sub
mov
test
sub
out
popf
test
jmp
lea
add
stc
iret
jne
cmp
dec
ss
int
xor
push
pop
lds
adc
adc
insb
dec
imull
in
out
stos
rclb
iret
xchg
and
inc
shl
and
xchg
filds
jns
loopne
xchg
cs
push
aas
adc
sahf
push
test
in
subb
inc
and
dec
inc
push
push
lahf
rcr
sub
insb
gs
scas
je
push
into
cmc
or
test
sti
lea
pop
dec
les
jle
cld
daa
movsl
pop
in
mov
mov
cmp
fidivrl
movsb
mov
mov
mov
cli
lods
cmpsb
ret
adc
inc
pop
mov
sub
mov
dec
mov
popa
jbe
dec
fsubr
push
jae
push
mov
lods
fnstcw
lahf
ja
orb
and
cmp
dec
bound
shrb
mov
mov
in
jbe
sub
add
js
pop
out
cld
inc
dec
fs
jmp
fsubr
aaa
mov
add
out
sbb
sub
mov
outsb
adc
dec
pop
cmp
les
in
stos
clc
mov
mov
aam
sbb
dec
dec
mov
pusha
mov
bound
cmp
mov
mov
popf
xlat
add
or
stos
sub
int3
cwtl
xlat
jo
testl
mov
xchg
mov
jae
sbb
fstpt
inc
sbb
sti
bound
sub
rorb
inc
stos
jmp
in
imul
mov
nop
xchg
incb
fiaddl
mov
or
out
cmp
inc
xchg
movsb
xchg
mov
xchg
lret
mov
xchg
in
sub
pop
fisubrl
inc
psubsw
sbb
aas
stc
and
dec
xor
ret
jae
push
loopne
mov
sub
dec
mov
push
xor
pushl
shrl
lret
dec
jb
clc
push
mov
jl
push
adc
aas
sbb
loop
test
mov
or
or
cs
sbb
or
cmp
movq
mov
pushf
inc
shrb
adc
cmp
cmpsl
ja
mov
testb
aaa
inc
or
or
rcr
push
mov
aam
xchg
aaa
jecxz
je
jno
ret
lods
xor
movsb
in
stos
mov
inc
xchg
jp
out
sub
scas
gs
fwait
idivb
and
enter
inc
xchg
push
cmp
movsb
mov
xchg
cmp
test
sti
cmp
mov
movsl
cltd
xor
lea
jecxz
ljmp
xchg
sub
ror
cmp
pop
xor
sbb
xchg
xchg
into
xor
xchg
jle
repnz
mov
call
dec
xor
out
xchg
sbb
push
les
fstl
out
push
mov
or
xchg
mov
jmp
lock
call
inc
flds
pop
sbb
es
cmc
push
and
aam
ljmp
pop
push
fimuls
push
jbe
popa
or
inc
aam
xchg
out
outsb
fnstcw
inc
xor
clc
push
dec
xorb
xor
insl
xor
jl
repnz
push
or
jne
imul
out
jo
andl
aaa
sub
out
pusha
mov
ret
lods
cltd
mov
cmp
jmp
cmp
xor
shll
jbe
shll
adc
rorb
out
push
and
mov
or
sbb
push
inc
insl
out
pop
lret
xor
jge
lods
mov
mov
jo
fdivp
sub
mov
shr
mov
ljmp
lock
pop
rolb
pop
aam
add
xchg
mov
ljmp
subl
xor
adc
lods
lds
push
pop
add
mov
xor
clc
cs
scas
mov
adc
outsl
sbb
in
or
lret
aaa
inc
xor
or
fwait
push
jmp
lock
cmc
jo
dec
mov
std
rorb
das
test
divb
sub
pop
add
addl
inc
add
loope
cli
andl
sbb
push
mov
je
xor
rorb
mulb
insb
jp
testb
mov
and
daa
lret
addr16
dec
imul
inc
int3
cltd
pop
pop
shll
or
jns
nop
add
jb
xchg
mov
add
ds
jns
sub
adc
and
mov
push
dec
or
push
push
add
mov
pop
lret
or
cltd
and
inc
cmp
lahf
das
cwtl
loope
daa
lods
sbb
push
imul
jns
push
jnp
pop
jb
insb
lods
or
xlat
sbb
pop
cmp
xchg
pop
push
mov
sahf
mov
add
icebp
add
mov
subl
aam
mov
and
das
stc
movsb
lret
cmp
testb
push
push
test
gs
add
inc
dec
test
orb
clc
das
pop
push
add
add
loopne
enter
mov
dec
cmc
jno
and
mov
sub
cmp
sti
std
mov
fldt
adc
and
jecxz
fcompl
mov
rorb
mov
in
jp
jne,pt
xchg
loope
inc
inc
push
push
mov
loop
xor
mov
and
mov
add
xorb
adc
xchg
mov
adc
cmp
push
pop
xchg
mov
and
dec
push
popf
sub
jmp
mov
and
arpl
outsl
loop
ret
test
in
sub
iret
cltd
mov
lret
in
and
dec
shlb
loop
sub
lea
xor
cmpsl
leave
push
push
das
jl
rcll
xorl
bound
in
shl
sub
mov
arpl
popl
mov
push
leave
sub
xor
mov
xchg
push
jnp
js
imul
cld
gs
sub
xor
add
dec
jg
inc
add
sbb
test
mov
mov
aad
negl
test
mov
cmp
mov
xor
adc
shrb
jg
sbb
out
daa
sub
das
test
mov
loope
sbb
cld
shrb
test
cmpsl
mov
out
inc
in
sub
xchg
cmp
xchg
cmp
inc
and
inc
int3
xor
cs
jmp
cmp
dec
call
lret
push
aam
dec
leave
dec
jnp
sub
cmp
cltd
loope
xchg
lock
jno
cmp
mov
sub
mov
mov
xlat
jb
pop
ljmp
scas
scas
in
pop
adc
jp
idivb
pop
sbb
add
adc
mov
cs
loopne
call
pop
enter
sti
and
add
outsb
lahf
mov
xchg
clc
ss
jne
jge
arpl
jle
mov
xchg
add
add
fwait
inc
xchg
dec
mov
std
sbb
cld
add
adc
mulps
sub
lock
mov
pop
push
jnp
and
push
mov
dec
outsb
jmp
and
or
mov
fwait
dec
cmp
sbbl
pusha
das
pop
cmpsl
xchg
xor
lahf
lret
dec
subb
inc
mov
cmp
loopne
mov
repnz
popa
pop
icebp
pusha
nop
scas
inc
inc
pop
jle
test
sub
sahf
sti
push
fidivrl
movsl
inc
enter
es
lods
lods
jmp
movsb
push
nop
fnstsw
and
int3
sub
ljmp
test
stc
push
pop
outsb
sbb
jae
idivl
jo
cs
insb
adc
testl
inc
pop
or
aaa
jecxz
push
push
mov
xor
dec
push
leave
xchg
add
xchg
imul
dec
mov
int
dec
test
add
adc
xor
andb
mov
push
cmpsl
das
fisubrs
pop
icebp
inc
sub
shll
leave
xchg
das
rorb
ljmp
xorl
inc
fst
adc
pop
lcall
pop
xchg
sahf
lcall
dec
cld
je
push
hlt
outsb
add
pop
leave
outsb
jg
test
sub
cmpsl
loop
pushf
scas
out
push
jo
test
pusha
cmpsl
adc
jne
pushf
add
xchg
mov
mov
in
sbb
sti
movsb
jmp
mov
sbb
mov
outsl
mov
mov
sub
add
movsb
pop
imulb
cmpsl
xor
cmpsl
sub
popf
xchg
mov
mov
push
xchg
or
rcrb
lea
sub
mov
fidivrl
loope
jae
mov
arpl
add
adc
inc
or
pop
sbb
inc
jns
dec
xor
jle
mov
aam
lret
jl
dec
jmp
outsb
dec
sti
jecxz
bound
jmp
or
cmp
cmp
stc
xchg
lahf
or
popf
add
inc
push
cmp
adc
scas
lods
aam
test
in
fstpl
cmpb
jnp
xchg
sbb
adc
lahf
fisttpl
push
movsl
cmp
call
lret
pop
xlat
mov
and
int3
stc
js
sbb
mov
ja
jecxz
xchg
mov
rclb
into
repnz
sub
scas
cltd
cmp
outsb
dec
jmp
jmp
enter
sub
pushl
jb
rol
dec
push
repz
jne
xchg
push
jb
cmp
mov
xchg
cmpsb
mov
out
int3
arpl
or
out
int3
jle
and
xor
pop
push
xchg
mov
jb
or
and
pushf
cmpsb
or
dec
insb
pusha
mov
push
and
mov
ds
test
scas
idivl
in
fldt
push
xor
call
mov
mov
inc
pushf
ja
inc
scas
pop
adc
jle
pop
aas
mov
iret
inc
loope
scas
mov
loopne
push
outsl
jecxz
loopne
rol
fstps
stos
jns
addr16
mov
out
lods
adc
adc
out
data16
adc
mov
pop
stc
repnz
push
ror
jp
int3
into
xor
mov
pop
test
shrl
jo
mov
sub
loope
bound
adc
mov
push
dec
cmp
movsb
or
mov
mov
jle
lea
xlat
fsubrs
negb
push
bound
imul
fidivl
mov
das
insl
imul
imul
iret
dec
rcr
cmpl
test
xorb
sbb
mov
dec
jne
shll
push
sbb
les
pop
dec
and
push
xchg
xorb
pop
ret
arpl
adc
inc
xor
outsb
cmp
jno
aaa
jmp
cmp
arpl
xchg
stos
cld
push
notb
push
js
gs
sub
mov
adc
adc
add
arpl
ss
ja
sti
push
xchg
das
and
dec
call
nop
insb
insb
jmp
mov
aas
xchg
aas
xchg
fst
mov
aas
addb
cli
mov
sbb
cmp
into
movsb
jle
xchg
ss
sbb
ja
dec
ret
inc
inc
movsl
out
adcl
jno
dec
push
iret
repnz
loope
mov
inc
clc
shl
fildl
push
push
loop
xor
jne
adc
pop
in
repz
insb
dec
cmc
lret
leave
loopne
int
push
in
lcall
cltd
sbb
das
shll
jnp
mov
cmpsl
jecxz
mov
sbb
pop
mov
dec
push
jns
jp
dec
xchg
rcrl
jge
into
cwtl
ret
fildll
xchg
xchg
imul
fmulp
dec
sarb
lahf
pop
mov
pushf
xor
jecxz
js
mov
sub
lcall
lock
xchg
fcmovb
add
cltd
push
xchg
add
cltd
push
mov
addr16
jle
fmuls
outsl
and
test
daa
lret
js
sti
mov
nop
pop
out
ljmp
stc
cmc
ret
or
mov
jns,pt
mov
int
jns
adc
imul
xchg
sub
test
push
cli
push
inc
int
jns
sbb
ret
loopne
adc
xor
push
pop
push
mov
call
cmp
jb
xor
adc
sub
push
mov
in
jp
dec
pop
xor
ret
mov
sbb
pop
inc
cmp
loop
call
and
jnp
lock
pop
imul
add
push
and
pop
pushf
inc
ja
sub
inc
out
dec
jmp
mull
notb
aad
fstps
inc
ja
nop
xchg
cli
daa
add
mov
pop
pop
popf
out
sub
ljmp
dec
xchg
mov
or
pusha
ret
test
fcomip
lea
cmp
pusha
fldenv
mov
mov
int3
sahf
jp
or
inc
bound
in
and
adc
gs
mov
cli
and
clc
lcall
scas
pop
ret
pop
cmp
fists
ss
pop
mov
jae
sbb
adc
pop
data16
arpl
call
sbb
or
mov
int
call
add
or
xchg
pop
jecxz
push
xor
jle
cld
mov
cmp
sahf
cli
cld
xor
xlat
lahf
xchg
shll
rcl
enter
jne
mov
mov
imul
in
ss
and
xchg
andl
popf
decb
pop
add
sti
push
inc
int3
or
pop
fisubl
push
and
sub
loop
aam
mov
dec
popl
adc
push
and
mov
fwait
int
xchg
mov
outsb
pop
mov
mov
fidivrs
add
out
lret
jl
jp
sbb
dec
lcall
pop
aad
mov
fisttpll
pop
movl
pop
into
mov
dec
xchg
out
mov
and
in
jb
xor
mov
bound
popf
jecxz
xor
leave
sbb
xor
dec
fnstsw
cmp
shlb
jb
incl
jl
jmp
xchg
inc
jmp
add
add
mov
shrb
jecxz
notl
push
lods
or
cwtl
sahf
mov
leave
outsl
daa
cwtl
sub
pop
mov
sti
rcll
cmp
push
test
mov
xlat
xchg
hlt
int3
in
inc
pusha
push
push
jle
pop
cwtl
xor
push
clc
stos
fmull
loop
xchg
std
out
mov
sub
xchg
test
xchg
mov
mov
sub
pop
imul
cmp
cmc
mov
mov
xchg
cmpsb
stos
ret
and
inc
popa
inc
iret
mov
mov
push
jne
dec
notb
cmpl
icebp
fstl
sbb
repz
dec
aam
mov
daa
das
cmp
dec
decb
push
pop
adc
pop
daa
aaa
ret
out
pop
adc
mov
cmp
push
lret
aam
int3
bound
lea
imul
es
cmp
inc
dec
cmp
and
rcrl
movsb
xchg
sbb
jns
scas
leave
scas
lods
inc
push
mov
fiaddl
filds
dec
je
stc
cmp
sbb
sti
insb
jno
ss
push
push
test
movsl
dec
fiaddl
xchg
push
mov
out
gs
jne
cmc
jo
scas
mov
cld
or
in
iret
dec
jl
mov
jle
dec
call
aas
lahf
mov
pop
pop
push
ret
fildll
cmp
notb
jb
mov
sbb
mov
add
js
loop
movsl
fadds
movsb
xor
je
or
mov
mov
push
push
faddp
js
add
dec
add
dec
xor
imull
cli
mov
js
aaa
push
jae
or
out
push
sbb
call
jne
sbb
clc
adc
or
cmp
push
mov
or
xchg
aam
scas
sub
cwtl
or
or
jmp
fsubrs
icebp
lret
fisttps
movsl
fildll
popa
dec
popa
jne
imul
insb
cmc
insl
out
in
loop
push
inc
adc
stos
cs
xchg
and
outsb
fcoms
test
inc
mov
and
push
sub
mov
test
test
pop
jge
cli
adc
cli
push
pop
adc
cmp
mov
nop
mov
pop
popf
int
sub
or
mov
ret
sub
ficoms
or
mov
dec
enter
repz
cmp
add
jg
call
lret
rorb
adc
stos
xor
shll
pop
xchg
in
fdivrs
ja
imul
mov
xchg
mov
shlb
jbe
adc
stos
mov
int
repz
jae
adc
lret
pop
push
mov
jbe
sub
out
out
mov
adcb
dec
jns
xor
fwait
mov
mov
mov
ret
sbb
cld
jmp
and
push
loop
arpl
cmpsl
popf
dec
sub
jae
push
mov
push
or
mov
arpl
popa
jb
fcoml
imul
jo
add
jns
xchg
adc
ror
sbb
addr16
fstps
mov
out
cs
add
addr16
mov
inc
out
pop
std
dec
jb
sub
loope
sub
pushf
aaa
mov
arpl
fdivrl
inc
dec
push
inc
xor
pushl
or
sub
dec
arpl
inc
xchg
sbb
and
xor
enter
pop
mov
fsub
loop
mov
or
fwait
push
imul
jmp
push
mov
mov
popf
ds
leave
add
gs
test
and
dec
into
cli
adc
push
out
push
adc
incl
cmpsb
mov
push
jns
or
shlb
hlt
stos
or
cwtl
data16
jmp
adc
xchg
pop
repz
adc
cmp
xor
jmp
xchg
aad
iret
test
mov
lds
ds
jmp
push
int
inc
dec
and
lds
pop
jbe
mov
sub
mov
cwtl
xchg
stos
icebp
xchg
ljmp
xchg
lcall
mov
divb
or
mov
xor
iret
pop
pusha
cmp
mov
lahf
fwait
lds
pop
mov
cmp
pop
or
int
test
push
mov
divl
movl
ds
cmc
sub
inc
add
mov
sahf
jne
mov
or
cmp
lcall
adc
inc
or
pushf
test
inc
jo
xlat
aas
mov
insb
or
push
mov
pop
xchg
push
pusha
xor
fdivl
in
loope
sub
dec
lock
mov
xchg
idivb
hlt
jg
adc
clc
mov
sti
cmpsl
stc
jle
mov
sbbb
dec
adcl
setne
mov
xor
pop
out
lcall
xchg
setb
mov
lahf
in
mov
es
in
mov
fistps
sahf
mov
bound
mov
rolb
jb
mov
or
fsubrs
cmp
xor
mov
sbb
shrb
jns
inc
movsb
jmp
std
iret
xor
adc
dec
push
das
lea
xchg
jp
dec
test
sbb
mov
sub
inc
lcall
out
insl
jo
dec
lods
fcompl
jmp
mov
and
iret
mov
push
sbb
imul
dec
lret
push
insl
imul
lods
stos
xchg
add
test
mov
sub
cmp
sub
ljmp
out
pop
lods
popf
adc
mov
or
xor
and
cwtl
mov
cmp
out
push
sbb
aas
in
pop
cmp
movsl
std
sti
fmull
jno
jns
ds
push
xchg
sbb
shll
outsb
and
shll
jo
shl
aad
sub
adc
jne
mov
sbb
scas
push
inc
push
inc
inc
cmpb
sbb
mov
les
les
lods
and
dec
lods
shl
xlat
popf
cmpsl
sub
cmp
imul
iret
inc
adc
in
cmp
popf
stos
cwtl
mov
out
mov
xchg
fwait
mov
push
xor
test
pop
fimull
mov
enter
sub
push
dec
pop
fsubr
pop
aas
leave
mov
mov
lcall
dec
add
pop
cmp
movsb
cmp
out
test
in
les
mov
sbbb
cmp
movsb
mov
shlb
inc
and
dec
lsl
mov
dec
ja
and
jge
into
push
out
adc
and
push
sbb
movsl
pop
xchg
daa
lock
lods
rolb
mov
mov
ss
repnz
arpl
push
cmp
jbe
jnp
addb
cmp
jns
jl
xchg
addr16
jmp
movsl
xchg
imull
cmp
and
orb
clc
jmp
hlt
call
push
or
mov
sbb
add
pusha
jp
lea
mov
in
jmp
test
sarl
jne
mov
mov
enter
jns
lock
and
adc
leave
or
push
pop
mov
imul
mov
daa
jae
ret
xor
jmp
andb
mov
loop
pop
xchg
mov
ss
and
cmp
xchg
shll
fisubs
aaa
sbb
jle
aaa
dec
aam
sub
push
and
lcall
sbb
movsb
lods
in
mov
cwtl
mov
jb
inc
dec
jg
xor
cs
les
mov
mov
jl
and
push
jno
xor
in
aas
sbb
or
faddl
into
mov
imul
dec
xor
mov
xor
insb
jae
sbb
in
adc
cmp
ret
arpl
out
xchg
mov
testb
ret
inc
lods
movups
int3
test
out
test
fimuls
mov
mov
or
fs
mov
enter
ret
mov
jecxz
sub
adcb
jge
repnz
pop
hlt
pop
or
outsl
adc
cmpsb
iret
pop
jp
loopne
cmc
mov
jo
rcrl
mov
mov
jge
mov
sbbl
mov
icebp
jle
push
mov
cli
hlt
retw
cmpsl
mov
xchg
rorb
addr16
and
ret
xor
mov
mov
imul
outsl
aaa
ds
call
xchg
or
outsb
jns
fwait
mov
clc
in
sub
cmpsb
loop
mov
pushf
dec
lret
mov
movsb
outsb
pushf
out
lock
scas
rclb
testb
bound
les
mov
stos
mov
arpl
xor
test
test
jp
push
inc
adc
or
add
cmp
mov
es
andl
pushf
js
dec
push
xor
packssdw
fisttpl
mov
jns
sbb
stos
mov
popf
mov
sub
jae
push
adc
icebp
jmp
scas
inc
inc
movsb
inc
mov
aad
cmpsl
cwtl
mov
scas
cld
nop
jmp
orl
jo
out
idiv
js
cltd
movsb
jno
sub
pop
mov
xor
out
ficompl
xor
jl
fs
pop
pop
adc
mov
shlb
inc
xor
cmp
fisubl
cmpb
and
pop
add
push
fcompl
in
icebp
jbe
cmp
or
or
std
loopne
decb
push
ret
cmovo
sbb
mov
call
push
dec
inc
xchg
lock
sbb
cmp
and
cmp
dec
push
dec
cmc
clc
ljmp
movsb
mov
aas
dec
jl
inc
pop
mov
cmpsl
sbb
ret
pop
dec
scas
les
ss
adc
leave
rorl
jl
jmp
add
add
mov
rolb
jp
aaa
jmp
xor
or
xor
sub
dec
pop
xor
sahf
jb
pushf
sbb
shll
adc
shll
mov
dec
inc
fwait
cmpsl
sbb
cs
and
or
cltd
rcrl
fdiv
daa
test
jno
sbb
addb
add
add
mov
mov
into
imul
lods
add
rcrb
or
test
inc
add
adc
dec
ret
mov
xchg
cwtl
push
pop
mov
sbb
sub
mov
mov
addl
inc
aaa
iret
sbb
cli
call
and
pop
push
aad
movsl
adc
popf
pop
and
loop
jo
out
and
adc
xor
inc
xor
or
roll
or
mov
mov
das
sbb
adc
mov
sub
test
sbb
xor
or
mov
test
test
mov
xor
adc
or
cli
add
test
jbe
addr16
mov
inc
stc
iret
orps
xchg
loop
out
mov
push
sahf
movsl
idiv
mov
dec
add
movsb
mov
mov
add
es
push
xchg
jmp
push
and
mov
push
xor
cmp
push
add
jns
push
add
repz
popa
iret
fs
mov
or
dec
pop
and
mov
sbb
xlat
adc
loop
mov
mov
cmpsb
fldenv
adc
or
xor
negb
mov
in
xlat
lods
xchg
cli
xchg
test
cmp
xchg
push
push
dec
add
imul
adc
inc
aam
xchg
and
push
subl
lods
jae
cmpsl
popa
ret
test
push
cmp
sub
movsb
jne
cmp
into
cs
shr
sub
insb
rol
mov
fbld
add
pop
imulb
xlat
jecxz
push
sub
orb
push
adc
fnsave
jno
fwait
jno
cmp
lds
xor
lret
adc
lret
inc
loopne
push
fbld
fstl
jae
sbb
lods
xchg
cmc
ficompl
sub
xor
jbe
cmc
mov
mov
dec
push
mov
gs
mov
enter
or
pop
mov
dec
push
cmpsb
cmp
rolb
or
or
sbb
xchg
and
mov
ret
hlt
popf
mov
cmp
push
dec
pop
mov
sub
out
jae
ficompl
cld
pop
lcall
push
gs
sahf
sbb
and
push
push
pushf
loop
dec
xchg
call
test
mov
aam
lahf
test
fisttps
scas
in
xor
push
inc
mov
sub
mov
out
pop
daa
mulb
out
sbb
outsb
cmp
ret
lret
lret
int
sbbb
xchg
fidivs
pop
jmp
xchg
jns
push
adc
mov
push
call
sti
and
loopne
outsb
cmpsl
sub
mov
stos
jno
push
adc
je
mov
data16
jne
lds
fimull
cmp
push
sub
es
mov
scas
jns
in
add
divl
adcb
xor
ss
lret
arpl
mov
inc
pop
push
sub
sub
xchg
arpl
stos
push
movsb
pop
in
mov
pusha
cmp
dec
arpl
xor
shlb
repz
outsl
sub
out
inc
ret
sub
and
cmp
xchg
jmp
pop
fcmovnb
jbe
add
mov
pop
and
sbb
test
jno
cmpl
je
rclb
repnz
insl
test
pusha
cwtl
in
dec
mov
cltd
imul
popf
aam
test
pusha
xchg
mov
xor
outsl
out
cmp
mov
jbe
dec
ljmp
aam
pop
mov
test
sub
out
xor
pop
xchg
push
adc
call
lcall
and
aam
andb
movsl
lods
bound
sarl
popf
divl
xor
xor
pushf
dec
ja
test
inc
mov
out
lea
pop
fists
pop
negb
fmuls
inc
mov
fldt
cs
lret
loopne
lahf
orb
in
push
jecxz
orl
pop
popf
jl
arpl
fiaddl
sar
mov
jns
popf
aad
loop
frstor
and
push
popf
fucomp
inc
sbb
roll
jmp
in
dec
mov
and
mov
mov
out
pop
ss
cmp
inc
dec
sbb
dec
test
cmp
cmp
outsl
sbb
in
push
subl
ljmp
cwtl
insb
adc
out
lea
push
xor
stos
outsl
loop
enter
shrb
std
push
cmovg
aad
mov
mov
pop
sub
std
das
inc
js
insb
rolb
inc
add
inc
xchg
xchg
popa
push
mov
lret
in
pop
push
pop
adc
jge
dec
add
testl
jb
cltd
dec
das
popf
andb
test
add
cmpsl
jecxz
ret
adc
outsb
xchg
jne
aas
sub
lret
push
push
pop
test
dec
fbstp
adcb
fidivs
out
jae
xor
xchg
scas
dec
push
arpl
mov
loop
sub
inc
sti
jo
jns
push
cld
std
in
and
loope
cmp
fisubrl
enter
lcall
in
and
stos
in
insb
pop
fiaddl
jp
cmp
subl
or
sub
push
lods
cmpsl
or
adc
mov
add
out
lods
push
mov
inc
ss
dec
faddp
sbb
xchg
dec
int3
xor
adc
push
mov
mov
push
add
clc
xchg
xchg
loopne
or
inc
mov
shl
sbbb
cmp
inc
dec
fildll
jo
aaa
ret
or
or
sub
pop
cmc
sub
xchg
sbb
push
loope
mov
sub
ret
hlt
pop
icebp
jb
ror
stc
cmpsb
fadd
daa
xchg
lock
pop
cmp
and
insb
and
mov
sub
rol
mov
fistpl
cmp
fistps
and
scas
ljmp
cmc
cmp
into
insb
rcll
cld
lods
sbb
fwait
and
pop
jmp
mov
notb
add
lock
push
gs
popf
or
adc
pusha
leave
mov
xchg
movsl
inc
and
mov
fwait
nop
test
in
cmc
cmp
call
push
outsl
mov
int3
call
pop
sbb
dec
loop
xor
loop
inc
lods
lea
lahf
xchg
mov
nop
mov
ficompl
adc
xor
pusha
xchg
dec
test
xchg
call
adc
inc
les
xor
mov
cli
aad
xchg
test
pop
std
or
daa
sub
bound
mov
rcll
jb
fimull
pop
arpl
mov
sbb
test
xchg
inc
cltd
jp
sbb
filds
cmp
arpl
loopne
and
movsb
test
mov
cmp
lea
test
mov
sub
and
xchg
test
inc
popa
pop
xchg
push
jnp
hlt
xchg
mov
mov
and
cmpsl
ficompl
push
push
comiss
int
mov
pop
and
push
ja
arpl
and
and
ds
sbb
dec
or
popf
push
loope
in
xchg
xchg
popf
sbb
inc
push
aas
lret
pop
cmp
js
lods
add
enter
ret
call
aam
mov
push
add
jo
popa
test
inc
jge
test
enter
mov
xchg
testb
lcall
or
adc
jl
sub
xchg
and
jle
fisttps
dec
cmp
pop
rcrl
or
fwait
mov
insl
fildl
xor
jg
sub
stc
data16
xchg
mov
mov
mov
pop
mov
mov
jbe
adc
inc
jb
iret
stos
leave
dec
mov
aaa
fdivs
loopne
lar
loop
jno
jmp
mov
pop
faddl
or
adc
shr
and
aas
dec
mov
faddl
sub
gs
mov
testl
fwait
dec
out
popf
jg
add
sahf
push
sub
push
imul
enter
cmpsb
sbb
xor
sbb
mov
gs
aam
les
mov
jno
je
rcrl
push
loope
das
or
in
mov
repz
push
sub
scas
les
jno
jo
mov
jne
test
rcll
out
mov
cmp
jl
cmpsb
mov
cmp
xchg
addr16
test
xor
xchg
mov
inc
movsl
pop
sub
and
mov
and
mov
fsubr
cmpsb
adc
cmpsl
in
fs
hlt
add
aaa
xor
data16
cltd
call
test
inc
int
rorb
jmp
add
or
je
aas
pop
popf
mov
cmp
xor
jne
mov
dec
and
stos
or
xchg
jle
pop
pop
dec
push
push
pushf
scas
xor
adc
addr16
pop
loopne
xchg
or
mov
pop
push
xchg
jle
mov
sti
int3
test
sarb
jl
lods
inc
addl
jmp
jb
mov
test
dec
mov
ret
push
dec
clc
popf
lods
xchg
pop
jnp
es
or
les
imul
ret
pop
mov
shr
test
gs
lret
addr16
mov
sahf
pop
and
jecxz
ds
or
fsubs
out
pusha
sub
push
push
and
cmp
and
pop
mov
jge
inc
mov
adc
add
lahf
xlat
pop
jmp
or
imul
inc
nop
and
jbe
mov
sbb
mov
insl
push
inc
test
lret
mov
xor
mov
out
push
cltd
inc
aaa
mov
rcl
daa
mov
lcall
aas
in
rcr
in
lods
sbb
test
lock
les
mov
cs
or
xchg
dec
ret
int
xchg
std
sbb
adc
add
adc
clc
fucomp
push
insl
inc
pcmpgtb
mov
cmpsb
push
hlt
popf
addb
movsb
push
insl
repz
in
inc
jae
push
cmpsb
movsl
test
sbb
cmc
imul
xchg
sbb
jo
xchg
mov
rolb
jo
std
lret
movups
mov
test
pop
out
adcb
inc
jp
fcmovne
push
inc
hlt
lret
lods
push
rclb
ja
mov
or
jg
mov
mov
ja
je
cmp
or
cmp
mov
xor
loopne
in
pop
sti
adc
pop
int
insb
scas
lods
hlt
jecxz
sbb
fcompl
ret
iret
add
xor
sbb
fs
fdivrp
pop
push
dec
and
loopne
mov
xchg
xchg
stc
pop
mov
sarb
cmpb
jae
cwtl
popa
sub
sahf
pop
test
data16
push
xor
pop
xor
push
pop
xchg
xchg
in
pushf
in
mov
out
inc
dec
test
scas
jg
int
push
aam
push
leave
fs
jae
jno
jle
dec
insl
fwait
pop
es
inc
pop
sub
add
fpatan
and
xor
enter
ret
call
push
insb
ret
int
pop
inc
ret
mov
cmp
and
fs
stos
mov
add
and
mov
xchg
dec
test
out
jns
in
rclb
cld
mov
imull
andb
mov
out
pop
adc
jp
add
and
dec
in
das
inc
ficoms
outsl
xchg
cmpb
fcomi
sbb
or
lret
push
insl
aam
push
xor
sbb
adcl
ja
outsl
icebp
xchg
jns
adc
pushf
in
sti
cli
fists
jbe
push
popl
pop
scas
repnz
mov
mov
and
in
xchg
sti
dec
inc
pushf
dec
sahf
xor
dec
push
or
test
idivb
ds
jecxz
xchg
adcl
ret
sub
mov
adc
mov
mov
cwtl
cs
subb
lcall
xchg
push
jne
xor
push
xchg
stos
or
imul
pop
fistpl
mov
xor
hlt
mov
xchg
in
push
mov
cmp
xor
sbb
push
jbe
lods
xor
subl
clc
sarb
fadds
enter
pop
aas
pop
or
lds
inc
aaa
add
shl
mov
mov
inc
aam
popf
mull
scas
sbb
cmp
pushf
sahf
mov
xchg
pop
push
add
call
xor
nop
fidivrs
push
clc
shr
mov
insl
decb
movsl
jnp
shlb
subl
jle
int3
dec
dec
xchg
fldln2
lods
pushf
xor
inc
sbb
mov
cmpl
cmpsl
arpl
sbbb
enter
mov
push
dec
lods
mov
fidivs
fisubrl
sbb
cmp
test
inc
inc
jbe
xor
fsub
jnp
dec
or
or
stc
fcomps
cmc
mov
add
adc
and
fsubr
and
jmp
aad
enter
inc
ret
add
ret
sti
or
dec
out
int
dec
cltd
js
hlt
dec
add
cmpsl
daa
push
mov
mov
daa
inc
bound
dec
addl
mov
sti
push
dec
imul
das
mov
ss
call
jge
xor
test
sub
or
hlt
inc
das
dec
lock
sti
and
shrl
aam
and
fmuls
sbb
push
or
into
and
mov
out
jne
and
out
pop
mov
bswap
xchg
insb
es
add
xor
mov
pop
and
push
and
push
and
cmpl
sub
push
in
mov
cltd
xor
pushl
inc
leave
stos
mov
jg
xor
das
jl
mov
ficomps
repnz
and
data16
cld
mov
cld
bound
add
sbb
cs
pop
fnstenv
in
cld
leave
aaa
adc
cmp
push
ret
xlat
pushf
out
idivb
or
mov
lahf
jne
in
xchg
inc
fxch
pop
lods
pop
jmp
imul
push
cmpsb
push
jecxz
xchg
mov
fldcw
subl
jp
cmp
inc
loopne
add
mov
jecxz
rol
in
insl
xchg
jg
jg
scas
adc
subb
sub
xchg
scas
adc
sub
xchg
mov
aaa
sti
in
pop
cmp
mov
imul
or
jmp
xor
popa
push
aam
dec
jle
pshufw
jnp
fmul
pop
loop
xchg
fisttpl
pop
into
push
dec
mov
loope
mov
popa
sub
shlb
push
lods
insb
movsb
inc
lods
cmc
subl
cmpsb
xlat
movsl
test
lods
scas
out
add
xchg
lods
jle
aaa
je
and
pop
fs
test
pop
into
scas
cvttps2pi
xor
clc
inc
xchg
pop
addb
mov
fcmovbe
sub
pop
pop
cmp
movsl
insb
sub
sub
out
out
jb
adc
mov
in
inc
paddq
push
mov
cmp
cli
sahf
scas
lds
jg
jmp
les
enter
push
sub
scas
adc
sbbb
mov
adc
adc
repz
pusha
pop
rcll
jne
mov
pop
adc
xor
and
fldt
out
jbe
inc
data16
ror
test
nop
movsl
cmc
hlt
inc
rolb
xchg
shll
mov
leave
cmp
fs
rcll
imul
inc
fs
add
pop
jnp
sbb
daa
imul
mov
dec
pop
adc
dec
or
addr16
adc
stos
lods
mov
sub
out
lods
xchg
hlt
in
stos
mov
mov
mov
stc
cli
and
lods
lret
loopne
roll
fwait
outsb
dec
xchg
cmpsb
mov
add
insb
in
sbb
push
jle
in
test
leave
xor
pop
mov
outsl
or
mov
adc
popf
pop
sahf
inc
adc
data16
mov
sbb
mov
clc
jle
stc
push
or
pop
out
in
mov
fs
cmp
repnz
dec
mov
mov
push
sti
mov
lcall
out
adc
incl
mov
outsb
out
mov
and
mov
sub
xchg
clc
xor
inc
clc
mov
int3
or
pop
gs
mov
adc
imul
hlt
outsb
mov
add
adc
test
sbb
xor
mov
dec
xchg
inc
cmpsl
inc
in
iret
cld
xchg
pop
xchg
stos
mov
sub
insb
stos
repz
mov
push
idivb
imull
mov
fsubrs
enter
cmp
xchg
pop
fmuls
jae
push
inc
js
add
cmp
or
ret
and
in
imul
xor
test
sbb
fwait
aad
mov
inc
imul
sbb
or
cmp
mov
add
int3
imul
jo
push
imul
and
push
or
jns
pusha
sbb
mov
aam
jmp
or
mov
cld
lret
and
pop
adc
sti
xchg
push
push
jnp
or
rolb
xor
ret
lret
popa
jp
sub
enter
sbb
outsl
js
enter
mov
xchg
sti
std
icebp
pop
add
pop
repz
mov
jns
xor
dec
lret
std
imul
aam
dec
and
fs
scas
cltd
rol
lods
inc
sbb
push
enter
jp
test
push
jl
inc
dec
ja
sub
xor
roll
push
mov
sahf
push
push
mov
mov
add
jmp
insb
and
aad
cmpsl
aaa
mov
pop
mov
jb
and
xor
bound
jmp
es
cli
or
jmp
rclb
in
pop
add
jmp
ljmp
imul
cmpsb
jecxz
mov
mov
mov
inc
mov
sbb
int3
mov
add
sti
out
inc
xchg
data16
clc
push
cmp
cld
bound
fimull
lea
add
sbb
and
mov
xchg
or
fsubrl
adc
and
mov
test
popa
xchg
outsl
rorl
jb
loope
jl
out
sbb
orl
out
outsl
stos
mov
xlat
mov
mov
int3
adc
mov
mov
int
jnp
in
and
iret
adc
and
push
mov
mov
push
dec
jne
mov
in
in
lret
push
sub
pop
imul
or
pop
or
xchg
sti
sahf
movsb
aam
fnstsw
cmp
jb
cmp
scas
lea
cltd
xchg
test
fimull
mov
jmp
pop
insb
sbb
pop
push
loop
push
push
mov
cli
ret
sub
daa
cs
in
addr16
sub
hlt
cmpsl
mov
unpckhps
push
fldcw
xchg
adc
lret
mov
out
sbb
or
fldt
fwait
das
mov
jmp
lods
cmpsl
cld
dec
ret
dec
or
cmp
rcrl
xor
xchg
xlat
and
mov
ret
arpl
or
push
pop
movsb
mov
int3
fadds
xor
and
push
call
repz
jno
test
push
xchg
dec
leave
outsl
xchg
cmp
cltd
aam
sar
ret
orb
sub
lret
and
and
imul
mov
add
adc
insl
cmp
xor
es
popa
adc
pop
mov
xchg
or
add
and
mov
mov
dec
sahf
clc
and
jge
mov
cmp
add
push
or
dec
dec
cmc
or
adc
xor
push
pop
add
shrl
pop
rcrl
add
sub
xchg
fwait
dec
pop
je
faddl
adc
cltd
push
inc
scas
sub
xor
mov
or
push
mov
aas
in
mov
stos
and
rcrl
stc
cld
cmp
cmp
adc
lret
mov
cs
mov
cmpsl
pushf
inc
xlat
loope
aas
or
or
out
ret
repz
mov
dec
cmpsl
es
pop
popf
in
cmpsl
stos
ss
sbb
iret
push
pushf
xchg
and
jge
cmp
mov
xchg
push
fwait
addr16
sub
cmp
lea
test
inc
xchg
and
push
aam
xchg
movsl
xchg
sbb
out
fdivr
jae,pt
nop
iret
test
pop
popl
cmp
lods
repnz
cld
lock
inc
popf
adc
mov
int3
inc
xchg
aaa
inc
or
fwait
es
jmp
adc
cmc
iret
push
fisubs
adc
jle
push
mov
push
loopne
mov
mov
sub
cmpb
in
imul
jb
fwait
pop
jge
jge
lock
test
scas
in
hlt
sahf
shrb
out
mov
cld
stos
fndisi(8087
stos
or
cmp
inc
jne
xchg
adc
xor
ret
in
cmp
add
repz
mov
shll
xchg
test
sbb
xlat
dec
dec
sti
insl
jnp
test
hlt
cmp
sbb
jl
xchg
sar
inc
adcl
lock
jo
lahf
lret
jno
jo
sub
mov
push
xor
inc
mov
xor
es
ficomps
or
icebp
mov
rolb
jge
negl
mov
addl
or
lahf
mov
add
int3
xor
lahf
mov
fstl
or
jecxz
jbe
cmp
lods
fcmovnu
ljmp
les
mov
pushf
pop
push
pop
es
pop
cmp
xchg
cmp
ljmp
push
jns
jb
lret
and
loop
ja
inc
int
jbe
and
pop
ret
xchg
inc
sbb
fldt
cmp
cmp
sbb
pop
or
data16
xor
mov
js
or
sbb
movsl
mov
xchg
dec
ret
clc
jne
xchg
dec
fnstcw
scas
mov
std
push
mov
dec
stos
insl
frstor
aas
xchg
divl
fistps
cld
aad
iret
mov
rcr
in
dec
addr16
xor
es
push
jg
fstp
neg
jbe
sbb
insl
call
and
movsl
pop
fbstp
add
shrl
scas
cmpsb
pop
sti
mov
sbb
push
notb
xor
cmp
imul
dec
push
push
loopne
pop
xlat
sub
adc
adc
mov
pop
mov
loop
pop
pushf
loopne
rcll
sbb
divl
fdivrl
aas
cmp
mov
repz
add
inc
pusha
sbb
stos
xor
insl
push
movl
addb
dec
andb
push
inc
mov
or
mov
xorb
das
movsb
rclb
loop
pop
mov
cmp
pop
orb
pop
test
jg
sbb
fs
jmp
adc
xchg
in
aam
jg
pop
cmc
cld
pop
add
add
popf
sub
lahf
addb
dec
push
dec
pop
ret
jbe
enter
int
or
pop
js
adc
lcall
cltd
cmp
mov
hlt
jge
jo
jge
arpl
je
jmp
pushf
cli
popf
pop
leave
xorb
jno
jle
daa
insl
cmp
mov
sub
push
icebp
inc
in
mov
cmp
scas
xchg
aas
out
xchg
xchg
sbb
das
dec
push
lret
inc
pusha
jge
cmpsb
sahf
dec
xor
out
inc
xor
mov
fdivl
hlt
adc
add
test
mov
sbb
push
into
pop
loopne
add
mov
xchg
sbb
add
les
mov
xchg
sbb
mov
cmc
mov
xor
sub
ss
mov
dec
popa
stos
or
fdivl
lods
aaa
lds
les
mov
iret
int
hlt
jo
dec
sub
repnz
ss
imul
add
inc
loop
sub
scas
fdivrs
pop
sbb
pop
push
push
add
popa
outsb
repz
inc
in
rolb
push
add
aas
and
mov
loope
xlat
in
push
stc
push
ror
mov
push
ljmp
lret
sarb
mov
sbb
lret
addr16
in
cmp
ret
mov
add
jp
hlt
insb
sub
dec
xchg
gs
pop
inc
mov
dec
jno
hlt
movsl
mov
mov
mov
dec
jne
scas
in
test
shll
push
call
lock
cmp
jno
cmpsb
enter
dec
jae
pop
mov
fstl
gs
and
xor
lcall
andl
fidivs
fstpl
cmp
les
xor
cmp
jns
add
mov
xchg
mov
or
jns
or
int3
mov
jne
cmp
pusha
hlt
jg
pop
sub
rol
xchg
sti
cld
pop
mov
adc
xor
daa
test
jg
xchg
cmpsb
dec
xorb
cli
stos
xlat
pusha
inc
pop
push
aaa
fistps
idivb
or
inc
push
cli
xchg
dec
js
out
fadd
outsb
popa
sub
and
iret
push
aam
sub
add
fisubl
mov
or
inc
mov
pop
push
adc
outsb
inc
sub
push
add
sbb
xchg
inc
and
dec
daa
rorl
loopne
pop
lcall
cmp
pop
mov
in
cmc
sbb
jmp
movsl
mov
mov
ljmp
xor
dec
cli
sbb
frstor
and
ja
add
imul
mov
xor
jmp
inc
add
pop
xor
shl
xchg
pop
mov
mov
pop
int3
sbb
sti
xchg
imul
sub
pusha
lods
inc
push
pop
call
xor
mov
lods
lock
addr16
adc
ja
nop
leave
sbb
icebp
dec
or
hlt
and
call
or
cmpsb
mov
aaa
icebp
or
pop
pop
das
jnp
insb
fldcw
popa
int
adc
jne
pop
rcll
pop
rcrb
outsb
dec
lret
addb
into
sub
jmp
jmp
adcb
lea
clc
fisttpl
jns
pop
out
pop
mov
loop
movsb
or
add
adc
xchg
leave
jnp
pusha
outsb
or
inc
cmp
mov
in
mov
fxch
mov
pop
cmp
and
dec
stc
fnstcw
gs
xchg
rcrb
mov
adc
cwtl
xchg
cmp
jp
mov
push
adc
or
idiv
xchg
cmp
out
pop
adc
push
mov
add
push
stos
xor
ja
js
or
mov
adc
mov
ljmp
ret
jbe
cld
out
ret
lods
insb
call
lcall
pop
stos
insl
pop
popa
cli
shll
xchg
out
insl
leave
mov
ljmp
cltd
adcb
out
xor
push
push
add
lret
adc
aas
xor
jno
enter
aas
dec
dec
xchg
mov
mov
subl
cmp
cli
xchg
jp
dec
aaa
xor
adcl
jnp
mov
push
jle
jns
pushf
inc
cmp
or
push
inc
jl
adc
xlat
mov
mov
imul
adc
or
adcb
push
aaa
sub
and
xchg
sbb
lcall
fisubs
adc
ja
test
int3
mov
sbb
hlt
bound
adc
mov
mov
or
idivb
je
sub
push
xchg
aam
imul
mov
cmp
mov
jae
stos
sub
ds
sahf
nop
push
xchg
inc
jl
outsl
les
xor
xchg
lcall
int3
sbb
cmpsl
or
xchg
lret
pop
push
add
js
cli
jo
sti
mov
and
and
sub
pushf
leave
orl
sub
mov
ret
mov
or
nop
loop
pop
mov
xchg
xlat
dec
inc
pop
fs
mov
sbb
int
lock
mov
daa
xchg
mov
loop
add
rcrb
scas
clc
out
rclb
daa
dec
or
cmp
cmp
xchg
test
test
dec
adc
and
decb
sub
imul
dec
add
pop
icebp
popa
cld
push
xor
loope
jae
jp
shl
adc
cmc
sbb
or
mov
mov
leave
mov
pop
sub
scas
fs
pop
dec
push
call
or
or
es
sbb
or
data16
imul
cmp
pop
pop
sbb
repz
and
stc
pushf
sub
ficompl
lcall
and
jecxz
or
faddl
and
rcll
mov
cmpsb
sbb
mov
out
psubsb
scas
fists
xchg
pushf
rcr
test
jle
stos
test
inc
sahf
and
cmc
int3
ficomps
lods
mov
pop
scas
sbb
fcoms
add
outsl
push
shl
or
inc
cwtl
inc
add
cs
xchg
xchg
xor
rsqrtps
arpl
lods
sbbb
shl
out
sub
sub
adc
sti
inc
and
les
orb
out
scas
fdivr
and
mov
loop
shll
xor
rcl
sbb
mov
or
daa
xor
aaa
pop
ss
xchg
and
mov
inc
aad
cltd
sub
jl
add
push
insb
push
jbe
pop
out
jne
xor
push
dec
push
mov
fs
gs
xor
adc
js
scas
ret
sbb
divps
add
jecxz
sub
dec
in
sti
mov
push
shr
pop
ds
hlt
daa
and
ds
jae
in
push
xor
ds
imul
mov
push
rcll
out
sbb
ss
dec
mov
push
jg
fwait
cmp
rcl
mov
dec
rcll
mov
and
icebp
bound
and
gs
push
cltd
scas
icebp
jmp
fisubs
das
fnstcw
imul
aad
mov
fisubl
mov
mov
inc
testl
les
aam
fistl
xor
clc
jle
in
cld
ss
xlat
mov
leave
or
clc
pusha
or
inc
mov
jmp
sbb
jle
jl
rcrb
aad
xchg
sbb
mov
test
out
ss
xchg
xchg
xor
clc
mov
scas
adc
push
xor
adc
xchg
pop
mov
int3
xor
stc
mov
loopne
push
enter
pop
pop
ret
jmp
sarb
lods
xor
shlb
ljmp
fwait
rcrl
fnstcw
or
mov
into
inc
xor
xor
bound
into
cs
sti
repnz
cmpsl
outsb
cmp
inc
inc
sbb
or
int3
dec
jl
sbb
push
pop
add
idivl
adc
ss
push
mov
and
pop
pop
pop
in
arpl
xor
sti
mov
loop
bound
xlat
movsb
fisttpl
adc
xchg
xchg
sub
fwait
repnz
sbb
xor
pop
int
in
ret
pop
jmp
jmp
ja
jecxz
test
loopne
add
fcoml
mov
sub
sbb
es
cmpb
cmpb
sarb
xchg
arpl
mov
sub
inc
in
outsb
mov
cmp
ja
pop
jg
rcrl
xchg
lods
lods
sbb
xchg
aam
repnz
in
nop
cmp
dec
mov
in
mov
pop
mov
mov
divl
movsb
push
lret
mov
mov
add
popl
pop
add
inc
fbstp
mov
cmp
scas
dec
mov
ror
pop
cmp
out
xchg
or
je
adc
in
scas
cmpl
adc
or
jnp
ret
xor
mov
outsl
popf
rcrl
enter
and
imul
lds
daa
addr16
jle
xor
dec
stos
mov
lcall
mov
jbe
das
jnp
fs
dec
loopne,pt
mov
jmp
mov
mov
ss
lcall
sub
daa
inc
sti
scas
or
jnp
ds
pop
xchg
xchg
pop
icebp
xor
popa
and
mov
lcall
xchg
out
enter
dec
inc
push
std
lock
scas
shrl
stos
add
sub
enter
pusha
mov
fldl
mov
push
dec
or
jnp
add
movsl
fnstcw
jle
outsl
out
push
add
ja
pushf
mov
mov
in
and
ret
sbb
outsb
pop
pushf
sub
popa
rcrb
add
or
fldl
lret
shl
sti
pusha
leave
cmc
fcomp
jbe
push
imul
push
sub
inc
jbe
mov
xchg
add
cmp
sarl
sti
leave
gs
imul
je
aaa
clc
rorb
movsb
lods
jne
mov
add
mov
mov
popf
adc
or
mov
loop
outsl
insb
push
push
mov
loope
sbb
xchg
adc
rcrb
xchg
sti
and
jmp
inc
jmp
jmp
mov
cmp
nop
mov
mov
add
inc
out
sub
push
push
jp
lock
popa
in
dec
or
aas
ljmp
jmp
fistpl
mov
pop
jbe
repnz
lahf
cmp
fidivrl
fwait
in
cmp
scas
mov
out
pop
cmp
testb
push
inc
adc
sub
in
adc
jo
sbb
std
filds
insb
stos
bound
push
cwtl
jbe
or
add
movsl
mov
add
lahf
or
push
aas
cmp
sub
fistpll
dec
ret
cli
mov
cmc
icebp
mov
int
dec
mov
adc
in
test
and
das
sbb
iret
test
jge
std
test
push
mov
jae
das
push
inc
push
dec
adc
and
pushf
cmpl
mov
xor
popf
lret
mov
pop
or
sub
movsl
dec
pop
xchg
add
loopne
fwait
jnp
dec
jg
xchg
dec
nop
loop
aas
shl
cmp
cmp
jmp
adc
add
inc
test
call
xor
mov
sub
incl
mov
xor
push
inc
adc
dec
or
test
sub
lea
inc
jle
xchg
cmp
lret
stc
sbb
das
ret
push
daa
hlt
enter
pop
int3
in
cmpsl
call
xchg
pushf
scas
cmp
movsl
pop
jp
jnp
cmpsb
jge
pop
mov
sub
enter
dec
cwtl
inc
xchg
into
std
jae
jle
jne
jp
aam
div
neg
mov
xor
mov
mov
loope
or
adc
push
adc
or
in
repz
push
stos
daa
xlat
and
popa
nop
stos
in
xchg
or
add
jecxz
pop
cmp
jnp
gs
or
mov
data16
xchg
xchg
mov
loopne
into
cmp
mov
aas
pop
push
mov
jmp
arpl
push
or
and
sahf
inc
mov
ljmp
std
repnz
es
cmp
push
inc
mov
jge
cmc
mov
mov
dec
xor
pop
jg
sti
arpl
shlb
push
adc
sahf
mov
sbb
jl
gs
cmc
push
pop
add
lret
dec
sti
xchg
xor
dec
bound
push
mov
dec
imul
pop
sbb
inc
pop
les
mov
stos
dec
dec
jmp
lock
add
ret
jno
fcoml
lahf
shll
jb
cld
pop
js
dec
inc
ja
rclb
lods
pop
adc
jp
lcallw
mov
xlat
cmp
inc
scas
iret
and
jp
sahf
movsb
clc
daa
in
gs
into
outsb
fst
pop
push
mov
repnz
lods
lret
cld
lods
mov
jecxz
cld
ds
jp
arpl
sbb
or
aad
or
cltd
mov
insb
sbb
inc
icebp
out
test
sbb
mov
pusha
mov
das
push
ficoml
pop
iret
fwait
or
ljmp
idivb
fs
or
inc
ret
dec
bound
daa
jle
popf
add
jae
sbb
imul
in
and
cmp
out
popf
cmc
jmp
push
push
cmp
daa
outsl
and
in
mov
xchg
sub
and
xor
cli
pop
std
xor
dec
fisubrl
roll
pop
sub
sbb
and
xor
shrl
jmp
call
or
adc
mov
jae
out
mov
imul
pop
mov
cld
repnz
imul
pop
aas
jae
sbb
sbb
scas
dec
xchg
and
pop
test
repnz
aad
push
dec
gs
test
push
inc
jnp
fisubs
jae
decb
xchg
pop
inc
mov
ret
mov
aad
inc
daa
mov
pop
ret
xchg
loope
rcrl
out
lret
fwait
inc
enter
cmp
mov
xchg
lret
pop
and
ja
jne
fisubrl
sub
and
mov
fildl
xor
jecxz
mov
add
stos
bound
xorl
lds
or
in
pop
mov
pop
mov
das
sub
mov
sbbl
mov
lcall
int3
jns
in
jae
or
ret
or
xor
out
mov
mov
mov
pop
xor
js
cmp
sub
subl
aad
cwtl
inc
xlat
data16
cld
push
sub
mov
dec
adcl
mov
jae
mov
pop
loop
repz
inc
dec
scas
sahf
mov
test
addr16
lds
add
fldenv
mov
mov
sub
fistpll
sub
cs
jge
dec
jg
cmp
adcl
cmp
sbb
inc
push
inc
xor
insl
cmp
bound
repnz
mov
or
jle
out
mov
imul
popa
inc
pushf
ss
pop
fnstenv
jle
pop
loope
cmp
cmp
lahf
fimuls
pop
inc
psrlq
ficoms
cmpsb
bound
insb
dec
xchg
adcl
dec
add
pop
stc
push
lods
in
lret
mov
aas
es
ja
fwait
inc
and
neg
pop
pop
cltd
test
cmp
call
sub
iret
jo,pt
dec
pop
mov
and
in
lret
ret
aam
mov
add
shl
out
sbb
lods
jge
inc
les
in
inc
test
cmpsb
scas
push
xchg
dec
jecxz
dec
mov
imul
pop
in
lea
stos
push
fisubrs
pop
fldl
push
stos
and
sub
inc
stos
repnz
movsb
xchg
mov
and
mov
dec
cld
adcb
ja
test
sbb
adc
or
sbb
out
sti
and
lahf
mov
adc
addl
jge
lret
in
fisubs
outsl
test
les
fwait
call
les
mov
and
js
repnz
cwtl
ja
jmp
mov
sub
lcall
jb
iret
or
cld
fsubrs
frstor
fcompl
mov
xorl
aam
xchg
fs
xor
fstps
mov
mov
jmp
pcmpeqw
add
repnz
repnz
xor
arpl
stos
jb
sub
je
iret
loope
dec
cli
mov
mov
shrb
xchg
or
cwtl
xlat
dec
and
test
jb
adc
jge
inc
out
pop
lret
stc
lock
inc
and
stos
xor
rclb
inc
jne
dec
push
pusha
rcr
ficoml
iret
scas
inc
add
jp
or
scas
or
adc
fsubs
mov
sbb
mov
mov
push
mov
lret
jl
mov
pop
mov
stos
xchg
test
cmp
mov
dec
stos
push
loop
pop
or
in
xchg
add
mov
lds
mov
pop
jno
or
mov
fs
sub
shll
aas
loopne
fs
sbb
lods
mov
shrb
notb
fimull
and
xchg
cmp
add
inc
add
cmpsl
orb
inc
cmpsl
pop
int
pop
loop
shll
stos
push
loopne
adc
mov
cmp
mov
stos
jb
sub
jne
or
sub
jno
add
out
xor
aaa
leave
pusha
xor
das
inc
sub
dec
outsb
sub
fcmovnu
mov
pop
jg
stos
mov
push
rol
jge
dec
adc
sbb
jle
xchg
mov
and
sub
cmp
xor
pop
pop
pop
das
cmp
dec
aaa
mov
jmp
dec
lcall
jmp
jmp
mov
xchg
fldcw
nop
push
out
inc
je
cmpsb
jne
jmp
add
icebp
mov
cmpsb
cli
push
jmp
sub
mov
sti
lea
xor
divb
hlt
cltd
lret
int
sbb
dec
insl
and
loope
je
cs
adc
fwait
ret
and
rolb
jbe
rorb
lcall
mov
xchg
jmp
jmp
pop
push
lahf
inc
in
xor
repnz
mov
clc
clc
mov
push
fiadds
fcmovne
dec
dec
jns
outsl
dec
or
adc
test
leave
adc
adc
movsl
mov
xchg
repz
pop
cmp
sahf
fwait
push
ss
cmp
hlt
insb
xor
dec
pop
pop
push
xor
cld
cmpsb
lds
insb
pop
cld
mov
mov
cmpb
icebp
sahf
mov
xchg
add
push
dec
xchg
jmp
xchg
imul
repnz
enter
xor
add
das
inc
xor
gs
adc
shll
aas
inc
dec
mov
add
mov
adc
mov
test
push
das
sub
imul
rcll
cmp
or
test
orb
sub
cli
enter
in
imull
scas
les
dec
out
mov
dec
mov
in
xor
xor
inc
push
mov
push
setb
popa
ljmp
add
outsb
inc
lret
cmp
mov
cmp
jl
xor
mov
fsts
jmp
jo
xchg
aam
pop
push
pop
or
subb
stos
std
mov
arpl
inc
push
push
mov
pop
imul
ja
pop
add
fbld
js
inc
inc
ds
sub
sub
scas
negb
push
and
sbb
xchg
and
xchg
pop
mov
pop
xchg
popf
mov
loope
lock
adc
or
jbe
jnp
add
sti
xchg
aad
mov
xor
add
cmp
test
out
dec
lods
jae
imul
rcr
insl
and
cmp
dec
repz
jle
lods
pop
xor
sbb
stc
outsl
jns
lock
test
mov
mov
jl
and
iret
test
sar
cld
ljmp
les
mov
pop
enter
push
cmp
stos
ss
cmp
push
pop
popf
aam
jae
addr16
gs
mov
jecxz
and
int3
fsub
mov
dec
push
sub
das
sbb
sub
push
sub
cld
pop
pop
subl
xchg
push
inc
mov
push
mov
adc
dec
dec
test
lds
push
push
sbb
shlb
stc
push
and
or
pop
xrelease
bound
jg
fists
lods
cmp
jae
rsqrtps
push
test
mov
adc
scas
fildll
out
icebp
loope
fs
sub
lds
mov
hlt
mov
xchg
mov
mov
xchg
dec
or
cltd
pusha
xorl
dec
pop
inc
lret
lds
sbb
inc
dec
aas
fnsave
incl
test
lret
dec
dec
aam
cltd
mov
mov
test
fdivp
or
mov
pop
stos
int
push
lcall
out
pop
adc
sbb
pop
fstpt
or
jl
xchg
stos
push
pop
sub
xor
data16
pop
insl
js
jmp
cld
mov
lock
mov
sarb
adc
inc
fiadds
or
psadbw
inc
loop
dec
hlt
push
lds
sub
cmc
adc
add
in
inc
push
adc
scas
inc
pop
cmpsl
mov
mov
ss
addr16
cmpsb
sti
outsb
flds
testb
stos
cmc
ja
fisubl
bound
push
fsts
lods
mov
jne
cmp
jge
sub
adc
sbb
hlt
push
xchg
sub
cmpsb
mov
popf
mov
push
xor
and
mov
arpl
in
pop
inc
pop
push
mov
push
mov
hlt
xor
jle
and
adc
jne
rcrb
das
test
mov
lods
mov
call
call
fwait
test
mov
inc
mov
in
push
and
aam
aam
jo
xor
out
xor
add
or
bound
dec
mov
icebp
ror
into
fistps
cmp
jmp
mov
xor
jmp
adc
sahf
and
jns
outsb
cmc
ds
jnp
mov
pop
pop
loopne
push
mov
std
js
mov
cmp
cmp
aas
lret
cmpsb
mov
jno
mov
je
dec
hlt
daa
aad
xchg
call
call
mov
je
mov
popf
sub
cltd
adc
aaa
mov
pop
dec
iret
xorl
sti
and
cmp
pop
dec
xor
sub
inc
mov
addr16
into
inc
add
dec
xchg
sti
addr16
out
add
daa
jno
mov
mov
mov
push
pop
les
inc
dec
add
data16
adc
movsb
push
push
testl
xchg
add
and
cmp
bnd
dec
aaa
fwait
adc
dec
add
in
or
xchg
mov
sub
mov
sbb
fidivrs
nop
in
jle
sahf
jne
lds
clc
mov
xor
and
cmc
je
xor
xorl
loope
loop
jge
mov
das
inc
sbb
xor
push
ljmp
inc
pop
mov
movsl
mov
cwtl
sbb
int
cltd
sahf
push
aaa
add
dec
rcll
mov
pop
fcoms
add
xchg
push
stos
es
imul
inc
mov
mov
xor
xchg
aaa
xchg
mov
push
mov
dec
shll
aaa
xchg
adcl
or
sbb
xchg
faddl
in
dec
aad
es
or
fwait
movsl
xor
dec
in
mov
aas
xorl
mov
sarl
inc
pushf
and
roll
jmp
push
arpl
mov
pushl
cmp
in
mov
push
pop
das
iret
pop
arpl
repz
and
pusha
loop
ficoms
arpl
sbb
and
jne
mov
sarl
out
cwtl
fdivs
subl
mov
lcall
and
xor
jno
push
add
lock
fwait
add
cli
cwtl
lcall
pop
dec
adc
mov
fdivrl
mul
mov
or
in
push
test
push
in
sbb
add
sti
cmp
add
xchg
xor
cmp
fnstsw
sub
cmp
xorl
inc
sub
sub
movsb
mov
data16
mov
aad
sbb
xchg
inc
jmp
jnp
push
pop
and
cwtl
hlt
and
out
arpl
pusha
pop
sbb
jp
iret
loop
movsl
arpl
cmp
add
sahf
call
data16
into
enter
xchg
gs
arpl
mov
outsb
pop
cltd
mov
sbb
adc
sbb
mov
dec
and
inc
mov
add
sbb
jmp
out
cmp
test
mov
leave
repnz
dec
call
add
cwtl
pop
push
inc
outsl
push
jns
subb
xchg
adc
jne
sbb
xchg
lret
and
in
js
dec
inc
sub
and
or
bound
addb
arpl
aaa
mov
imul
and
pop
mov
xchg
jbe
pop
dec
jecxz
leave
popf
pop
imul
negl
outsl
ffreep
inc
add
in
cwtl
stos
mov
push
pusha
scas
addr16
sub
xor
out
push
jne
or
add
and
stos
or
data16
push
jge
outsl
xor
popl
cwtl
fwait
push
cmp
fdivrl
nop
sub
gs
test
cmp
jno
lock
adc
in
xchg
in
sbb
inc
mov
lahf
push
push
sbb
inc
stc
insb
xchg
xor
ljmp
sub
mov
insl
insb
lea
xchg
push
mov
out
in
fldt
or
addr16
xor
daa
stc
imul
cmpsl
dec
sbb
sarb
jne
std
push
mov
mov
out
fwait
push
lock
and
sti
pop
cmp
xlat
cmpsl
adc
in
sahf
dec
inc
leave
ret
jnp
scas
dec
loope
push
dec
jg
mov
jmp
inc
out
pusha
punpcklbw
push
in
add
push
pop
mov
lds
pop
inc
add
mov
push
xor
sbb
lock
hlt
push
lds
mov
and
ja
mov
jno
mov
sahf
or
and
fsincos
nop
xor
das
push
std
cwtl
fmul
and
gs
test
pushf
mov
iret
ret
out
and
mov
ret
cmpsb
stos
mov
movsl
cmp
sbb
hlt
dec
push
popa
in
aas
sbb
and
jecxz
cmp
fcmovne
ja
inc
pop
movsb
mov
dec
test
sbb
push
dec
andb
into
add
bound
clc
and
leave
mov
in
lfs
adc
adc
cmpsl
jge
int
jg
and
sbb
sub
push
pusha
loope
aaa
mov
stos
aad
cmp
testl
test
icebp
xchg
sti
lret
dec
stos
xor
inc
jno
nop
lods
fstp
jb
fisubl
jae
fsubr
jl
lods
data16
movsl
jg
movsl
mov
xchg
mov
jae
push
mov
jb
pop
and
xlat
mov
add
push
fwait
add
gs
mov
adc
inc
lea
cmp
pop
push
into
add
out
movsb
stos
jg
push
mov
adc
xchg
negb
mov
cmpb
mov
call
clc
call
jmp
xchg
push
xor
jp
inc
into
pop
and
mov
inc
test
jge
adc
adc
fsub
sub
xchg
jno
daa
adc
push
cmp
repz
insl
popa
pop
xchg
push
add
jne
xor
pop
inc
xchg
inc
sub
int3
cmp
lock
inc
int3
inc
in
mov
jmp
mov
add
fistps
aas
or
fnstsw
dec
add
push
ljmp
aad
pop
xor
addl
sbb
outsl
in
fwait
lods
pop
xchg
ss
mov
cmpsl
jl
test
lret
or
sbb
in
push
outsl
jae
inc
out
lahf
mov
push
icebp
shll
dec
mov
call
cmpsb
ljmp
rcl
push
hlt
and
out
push
call
jnp
cltd
sbb
push
mov
mov
sub
mov
jne
inc
mov
xabort
incl
and
aaa
xchg
push
and
xchg
add
out
xchg
pop
inc
add
movzbl
lods
dec
sarb
ds
push
or
or
call
mov
jmp
cld
notb
jp
fcmovnb
bswap
add
cmp
sub
sbb
outsl
sub
out
ss
test
es
dec
mov
or
adc
addr16
push
add
int
xchg
pop
pop
dec
clc
add
icebp
arpl
mov
and
lea
pop
xlat
add
mov
xchg
insb
lea
sub
popa
std
out
les
dec
leave
cmp
fdivrs
lods
and
or
loop
add
daa
xchg
jnp
and
int3
pop
mov
pop
adc
sub
fdivrs
clc
out
repnz
mov
mov
daa
rorl
enter
aam
lcall
mov
sbb
dec
xorb
ret
fwait
pusha
cmpsl
call
inc
push
jmp
jg
pop
dec
int3
push
bound
cmc
xorl
add
insb
and
enter
lock
pop
outsl
inc
push
ljmp
daa
mov
xchg
repz
mov
fdiv
push
in
jg
sbb
pop
cld
ret
leave
add
cmpsb
sub
inc
scas
push
mov
lcall
push
rcl
jb
fisubl
and
inc
inc
adc
mov
and
sub
xchg
lret
sbb
inc
sarl
cmp
test
addb
int
or
fsubrs
into
jo
push
cmpsb
mov
cs
cmpsl
xor
xor
out
aaa
addr16
dec
mov
fcomps
fucom
or
aad
jmp
lret
xchg
xor
aad
sbb
pushf
pop
aaa
sub
in
mov
mov
push
mov
out
mov
jnp
xchg
sbb
jae
inc
sub
cmp
jl
sti
mov
push
push
mov
sarb
dec
movsb
popf
push
pushf
data16
mov
jecxz
mov
imull
pop
daa
ja
scas
and
dec
xor
lock
inc
push
mov
out
jae
mov
es
scas
scas
mov
push
cmp
push
aad
stos
movsl
bound
cmp
pop
stos
mov
mov
movsl
aas
and
loope
outsb
in
scas
loop
rolb
pop
mov
enter
mov
cmp
outsb
das
and
fsub
pop
or
pop
dec
imul
stos
jno
sub
test
scas
int
inc
cld
adc
pop
dec
pop
icebp
lds
repnz
pop
jl
adcb
repnz
dec
push
lea
sbbb
mov
fucom
ja
je
cmp
pop
cmp
test
lret
rcrl
adc
into
push
mov
rcll
dec
ljmp
lock
lock
fsubl
push
shll
in
and
sub
ss
cmp
sti
jmp
repnz
push
jb
xor
xchg
inc
bound
mov
rep
jecxz
xchg
sarb
mov
add
push
in
out
hlt
lea
xor
pop
sub
sti
sub
cmpsb
cmpsl
inc
sti
sub
cli
jle
jnp
pop
imul
inc
push
or
mov
int3
and
and
aad
out
sbbl
cld
js
cmp
sub
jmp
jns
lret
addr16
push
inc
mov
lahf
inc
scas
inc
jb
stos
cmp
scas
inc
cmpsb
mov
es
pop
xor
mov
mov
mov
test
test
je
sub
jmp
das
jns
pop
je
popl
dec
pop
jge
jecxz
movsb
xchg
repnz
push
jg
xor
jge
mov
or
pop
cmp
data16
xchg
ja
cmp
sub
mov
or
out
popf
push
outsb
decl
pop
xchg
pop
jo
js
jp
jp
loope
or
add
xchg
aas
inc
imul
sti
cwtl
cmp
fidivrl
ss
out
scas
pop
int3
mov
js
in
jge
add
cld
push
jne
lods
adc
inc
xchg
cwtl
xchg
xor
adc
enter
aad
out
xor
inc
jb
dec
test
add
ror
lock
ds
jecxz
ret
and
bound
fisubs
pop
stos
sbb
aaa
add
test
sub
test
scas
ljmp
pop
cmp
jae
clc
enter
sar
ret
in
nop
mov
loopne
nop
leave
stos
ss
stos
je
jg
clc
cmpsb
adc
adc
subb
push
shrb
outsb
push
and
add
hlt
lcall
mov
pop
and
push
ljmp
jns
movb
xchg
adc
mov
pushf
rolb
mov
je
sub
fcoms
pop
mov
cmp
not
jo
add
ljmp
fidivrs
cltd
add
xor
jmp
loopne
push
sub
icebp
icebp
lock
mov
daa
enter
and
dec
fldl2e
nop
pushw
xor
jb
sub
inc
aas
and
clc
jge
rolb
inc
or
add
mov
repz
mov
scas
jno
mov
lods
jp
test
lret
or
lock
ja
pop
bound
stc
or
push
sbb
xchg
aad
mov
jbe
popa
pop
hlt
rcrb
cmp
xchg
fcoms
lret
push
jmp
testb
pop
mov
ret
call
or
push
std
lods
xchg
pushf
mov
mov
dec
cli
lods
cli
addb
and
or
pushf
nop
dec
in
ret
mov
add
sub
cmp
das
add
mov
int
xor
and
int
cmpsb
mov
add
aaa
dec
sub
dec
mov
adc
adc
push
xchg
rcrl
loop
or
imul
idiv
jbe
xchg
fstl
flds
ror
mov
sti
loop
mov
xchg
pop
fidivrs
jnp
shlb
xchg
sub
push
sti
test
ret
adc
ret
arpl
sub
and
fs
cmpsl
and
add
out
imul
mov
js
dec
sahf
mov
ds
and
sub
push
or
mov
stos
xlat
dec
leave
xor
add
std
push
sbb
jg
dec
xchg
outsb
je
sbb
pop
push
xlat
lods
ljmp
inc
add
cmc
or
jecxz
int3
xchg
dec
or
in
push
nop
test
or
mov
and
push
push
cs
fstp
xchg
xchg
hlt
inc
into
sbb
and
cli
out
xor
push
shl
dec
arpl
ja
shlb
leave
clc
sar
rclb
cmpsb
xchg
shll
cld
and
cld
mov
fidivl
je
xor
jecxz
push
and
ljmp
adc
push
inc
aam
arpl
test
jp
dec
popa
adc
push
push
leave
cmpsl
xor
subb
push
into
pop
pop
sbb
sub
jno
pop
sti
loope
pop
mov
jmp
and
dec
loopne
jl
adc
lret
lcall
dec
stc
inc
cwtl
mov
mov
xor
pop
inc
ret
mov
adc
push
fsubl
ljmp
xchg
cmc
mov
mov
sub
int
rolb
mov
or
rolb
xlat
or
adc
loope
pop
and
rcll
dec
lret
mov
in
sar
sub
inc
xlat
dec
in
pop
xchg
aam
inc
mov
dec
pop
sahf
movsb
fldenv
jp
push
lret
lcall
mov
jg
and
sbb
jg
rcl
scas
push
jp
hlt
or
fists
mov
ficoml
aam
mov
sbb
andb
mov
sbb
jbe
mov
adc
adcl
adc
pusha
xchg
in
and
jne
or
xor
adc
xor
ljmp
push
xor
enter
jp
push
jne
ret
into
jge
adc
into
movsl
notl
leave
sahf
jl
pop
sub
imul
sar
shrl
sbb
adc
outsb
in
pop
ja
ja
jecxz
cli
test
enter
jl
imul
movsl
mov
dec
pop
mov
sbb
sahf
or
mov
imulb
mov
mov
clc
xchg
xor
btsl
pop
pop
sahf
jecxz
or
cmp
stos
or
fmulp
test
btc
in
jle
in
lea
imul
jo
push
jl
sub
in
out
and
idiv
push
jg
testb
pusha
jl
aaa
adcb
sbb
fs
xchg
adc
jb
add
sub
jns
test
ds
es
pop
stos
imul
jge
hlt
into
adc
fs
pop
pushf
jge
pop
call
and
sbb
and
aam
movsb
sbb
mov
jl
fmull
lea
jb
lret
loopne
sub
push
cmp
out
xchg
pop
dec
leave
mov
mov
adc
mov
fnstsw
ljmp
movsb
mov
sbb
adc
jl
sub
aam
lret
in
mov
test
add
adc
and
adcl
lock
xchg
lret
push
push
inc
ret
mov
jne
pop
je
cmp
push
xchg
je
jmp
arpl
call
repz
fucomi
mov
sub
xor
insb
cmp
adc
or
jbe
scas
scas
jae,pt
jb
xchg
dec
cld
inc
shlb
cmpl
repz
arpl
dec
imul
fdivs
leave
incl
xor
fdivrl
dec
add
and
jb
stos
cltd
sbb
cmpsb
pop
xor
js
ds
scas
lea
sti
and
mov
fmull
pop
sub
cmp
jle
lret
aaa
pop
xlat
std
or
dec
add
jbe
cmp
rorl
out
push
loopne
loopne
and
fwait
push
xor
mov
lea
test
and
pop
arpl
stc
mov
fstpt
inc
jns
jnp
mov
arpl
jae
and
fwait
xor
stos
inc
push
jne
inc
sbb
ds
xchg
les
imul
push
inc
fwait
lds
popf
add
add
or
adc
mov
push
and
inc
xor
cli
inc
xor
cmp
push
mov
outsl
dec
into
in
sub
xor
jg
sbb
xchg
stc
aam
xlat
xchg
xor
inc
push
lock
jge
jns
mov
sbb
loop
cwtl
stc
push
push
lret
movsl
cmp
pop
int
cmpsb
dec
push
out
and
push
aam
dec
cmpsl
sub
xor
pop
imul
mov
pop
jne
or
xor
add
cmp
inc
sbb
outsb
call
pop
test
mov
les
ss
fstpt
dec
xchg
int
lret
mov
mov
and
adc
outsb
add
test
sti
in
or
repnz
test
popa
jne
rolb
inc
dec
sti
pushf
fs
test
and
mov
cmpsl
pop
es
idivl
jbe
mov
pop
mov
xor
fstl
ljmp
inc
paddusb
dec
mov
add
cmp
outsl
fadds
and
std
xchg
jmp
cmc
push
sub
or
adc
scas
xor
hlt
in
loop
icebp
jno
dec
mov
cmp
add
pop
popf
movsb
cmp
or
popf
sbb
push
xor
stos
mov
cmc
jno
jle
xor
jne
cltd
mov
sub
mov
push
ja
or
pop
push
out
mov
xor
imul
inc
test
mov
mov
in
adc
dec
flds
ficompl
mov
test
jmp
pop
movsl
fdivrl
or
xlat
addb
adc
je
xor
push
mov
jns
movsl
mov
stos
lods
xlat
bound
cs
adc
and
in
inc
mov
sub
jb
cmpsl
lea
mov
xchg
sub
sbb
jp
and
push
icebp
mov
test
insb
mov
in
mov
xlat
inc
dec
inc
loopne
add
mov
imul
cld
hlt
cld
mov
int3
pop
xchg
lcall
lret
rcrl
dec
jae
addr16
xor
push
inc
enter
inc
cmp
ja
push
repz
out
xchg
add
sub
addb
or
jne
movsb
rorl
pop
lret
out
xchg
xor
xchg
jb
push
xchg
xor
cmp
push
bound
test
iret
xlat
mov
mov
mov
call
lods
add
fs
jns
jno
imul
ljmp
inc
clc
pop
ret
or
sbbl
scas
jbe
jge
movsl
pop
mov
mov
mov
pop
sbb
mov
fbld
xchg
dec
aas
enter
andl
fdivrl
lret
clc
jns
fwait
pop
add
jecxz
xchg
jb
inc
push
js
rcrb
inc
and
or
xchg
or
ret
psubw
jno
cmp
shl
dec
xchg
mov
inc
fistps
xor
sbb
cmovg
gs
mov
testl
pop
outsl
pop
leave
or
mov
data16
xor
mov
mov
and
xor
addl
iret
scas
xor
mov
push
dec
add
pop
adc
sbb
pop
jo
pop
add
or
outsl
inc
cmp
lcall
mov
mov
popa
adc
xchg
outsb
test
stc
outsb
ret
push
mov
dec
or
add
outsb
js
mov
sub
outsb
adcb
sub
dec
add
push
mov
inc
aam
mov
sub
scas
lret
mov
mov
pop
sub
popa
pop
roll
fnsetpm(287
mov
clc
jbe
mov
sub
or
push
lea
mov
gs
pop
dec
jg
fbld
loop
out
jl
movsl
cld
addl
mov
adcb
xchg
push
mov
mov
mov
cwtl
or
pop
movsb
push
lea
push
pushf
mov
pop
mov
int3
mov
push
jbe
sti
subl
push
mov
mov
test
std
xchg
lcall
push
cmp
or
inc
add
pop
out
stos
dec
aaa
and
adc
es
push
cmpsb
mov
push
movsb
push
test
inc
push
pusha
mov
lods
mov
adc
cmpsb
loop
mov
mov
cmp
pop
shll
sub
add
gs
repz
ja
scas
shl
cmp
stc
mov
movb
pop
pop
add
jnp
mov
and
sbb
lock
inc
mov
mov
or
mov
mov
daa
push
andl
repnz
nop
mov
jl
push
sarl
inc
dec
fiadds
mov
fdivr
test
inc
add
xor
imul
add
int
repnz
push
gs
push
arpl
fmuls
or
xor
ss
scas
sub
cltd
ds
and
cltd
xchg
jbe
and
insl
fs
lock
inc
aam
mov
lods
mov
mov
sub
imul
inc
cmpsl
inc
in
shrl
adc
mov
les
out
and
out
inc
das
outsl
inc
jle
pop
fs
mov
jo
xchg
pop
push
jmp
mov
outsl
movsl
fwait
pop
in
and
fwait
sarb
or
mov
loopne
xchg
dec
mov
int
rcrl
jne
xchg
test
stos
dec
xlat
mov
cltd
inc
sbb
xchg
push
mov
xchg
lcall
push
orb
call
ss
inc
pop
sbb
inc
repz
mov
xor
int3
test
push
jne
fcmovnb
lea
xchg
and
cmovge
xchg
dec
das
les
in
lea
push
and
push
ja
seto
imul
adc
sbb
push
push
gs
lods
int3
lahf
and
js
loop
xor
lods
das
faddl
pop
cmc
hlt
and
adc
sub
dec
mov
add
dec
and
dec
pop
popa
jne
fdivrp
test
imulb
xor
in
pop
push
sub
fistl
shll
jl
fidivl
push
rorb
in
pusha
inc
pop
aam
test
ss
mov
and
in
cmpsb
mov
cmp
push
cmp
or
mov
push
orb
xor
iret
adc
loop
int
sar
shrb
jmp
adc
shll
push
je
cs
fidivrl
pop
insb
outsb
add
cmp
jno,pt
jge
ljmp
xchg
and
test
jb
in
loope
lods
jmp
aam
test
xchg
js
mov
inc
adc
push
icebp
add
arpl
pop
pop
dec
jecxz
test
mov
sbb
adcb
into
pop
mov
lds
mov
sub
and
stc
cmp
icebp
push
xor
lods
jp
xor
out
xchg
mov
fwait
cmp
and
lret
cs
es
mov
mov
jae
xchg
xchg
loop
icebp
add
or
lcall
xchg
push
movsb
adc
mov
dec
mov
pushf
ljmp
je
in
in
inc
out
push
je
cmpsl
push
jno
inc
mov
ficoms
repz
std
push
pop
movsb
popa
loop
test
xchg
dec
xchg
push
or
mov
lock
cmc
inc
rcrb
sub
pop
mov
pop
data16
xor
pop
sub
repz
movsl
rcl
push
es
or
or
movsb
testb
jge
pop
fcomps
mov
ds
je
pop
cmpb
push
pop
int
ficomps
jno
aaa
sbb
mov
inc
adc
jge
add
or
int3
cmp
mov
inc
sbb
sub
sub
sbb
jmp
in
or
lea
lret
mov
mov
movsb
rorb
cltd
rolb
push
pushf
data16
scas
idiv
hlt
shl
ficomps
inc
call
jge
dec
fs
sub
jle
add
shll
cmp
push
jl
push
mov
lcall
jmp
xor
fisttpl
adc
dec
adc
push
sub
ljmp
inc
mov
and
add
add
das
sub
negb
or
addr16
jl
cltd
ds
enter
adc
dec
mov
lods
pop
movsl
gs
movl
xchg
insl
std
mov
add
imul
fstpt
sub
jbe
mov
pop
gs
cld
add
lock
xor
pop
hlt
cld
sti
adc
push
stc
and
ljmp
mov
inc
pop
lahf
and
test
aam
icebp
fiadds
mov
sbb
xchg
add
or
mov
scas
adc
in
fldcw
lmsw
mov
mov
data16
xchg
lods
lcall
and
xor
mov
lds
in
int
cmpsl
cmp
out
lods
cmpl
add
into
int
pop
jbe
pop
test
and
and
cmpsb
lock
push
xchg
inc
imull
out
and
push
fidivrl
nop
and
cs
test
sub
imul
jge
mov
xor
adc
leave
adc
call
mov
imul
enter
lods
test
mov
push
mov
cmp
sbb
mov
jg
hlt
dec
jg
mov
or
lret
pop
jmp
dec
sahf
mov
fldl
into
nop
stos
and
push
outsl
das
lret
pop
inc
xchg
push
push
mov
push
mov
std
add
mov
mov
add
or
mov
test
sub
or
loop
out
decb
add
mov
loope
lahf
pop
add
mov
pop
repz
pop
dec
mov
or
aaa
sub
push
stos
es
fistps
sbb
iret
adc
mov
mov
call
loop
rcll
lods
out
ds
xor
cmpsb
dec
mov
fst
cmp
and
mov
mov
jb
jb
mov
push
repnz
mov
pop
and
pop
pop
sub
mov
lret
fistpl
js
adc
leave
cltd
push
ja
push
mov
push
test
pop
cs
cmp
nop
test
xor
cltd
mov
jnp
mov
pop
mov
mov
mull
jmp
andl
outsl
ficompl
cmp
rcll
push
mov
lcall
sub
cwtl
push
pop
rorl
inc
insb
jno
repz
and
sbb
mov
pop
cmc
inc
pop
pop
scas
ds
sarb
jns
sub
icebp
data16
add
jno
mov
fwait
das
enter
test
into
enter
lret
pop
adc
bound
imul
jae
mov
cmpxchg
jbe
pop
jns
lods
int3
mov
dec
out
int3
into
cmc
or
es
adc
fcmovb
dec
lcall
sarb
xor
cmp
inc
dec
in
repz
sub
xor
or
or
or
and
mov
inc
lea
popa
dec
xchg
xchg
lret
scas
add
mov
iret
cmp
and
push
mov
mov
insl
pop
pop
xor
xchg
mov
adc
mov
push
pop
in
push
outsb
add
push
imul
or
stos
fmull
and
cmpsl
in
pop
mov
and
call
cmpsl
push
sbb
inc
lds
mov
enter
fstps
addb
mov
or
loop
and
ficompl
dec
ja
jo
dec
mov
ljmp
dec
aam
shl
add
sub
rcr
ret
jmp
dec
sub
jbe
cs
repnz
sub
hlt
mov
andl
pop
insb
push
sub
bound
push
adc
por
into
adc
out
aaa
cltd
mov
cmp
rclb
repnz
xchg
sub
insb
cmpsl
loopne
nop
fcoml
aam
push
push
adc
and
fildl
daa
loopne
jae
mov
jnp
ss
xor
lods
test
sbb
mov
fisubs
outsb
out
ds
sub
dec
xchg
mov
int3
jae
xor
adc
in
add
xor
jecxz
cmc
insb
gs
scas
data16
sub
imul
mov
xchg
fidivrs
loopne
rol
stos
mov
sub
ret
mov
jns
add
pushw
idivb
pop
pop
aad
and
jnp
mov
mov
push
fwait
mov
fistps
xchg
add
enter
lret
cmp
ja
cli
testb
push
out
push
pop
insl
lea
xor
clc
xchg
into
sub
sub
nop
push
sti
scas
jno,pn
cltd
mov
pop
divb
call
xchg
int
mov
push
rcrb
pop
jl
mov
loop
repz
fsubrp
mov
mov
push
sbb
out
xchg
insl
dec
sub
push
icebp
outsl
in
push
sub
jae
sub
pushf
cmc
cwtl
xchg
mov
jp
fmull
and
push
push
or
in
pop
stos
sbb
aaa
sub
mov
into
fst
loope
cwtl
hlt
mov
inc
setle
test
mov
pop
out
mov
cmp
mov
push
js
aad
and
mov
cmp
addb
shl
push
adc
xor
gs
pop
mov
dec
sbb
aas
ret
jns
std
sub
xchg
rolb
mov
push
repnz
fimull
daa
inc
mov
or
inc
lahf
cmpsb
bound
push
mov
adc
mov
add
cltd
adc
cs
test
in
xor
dec
mov
sbb
cmp
mov
popa
out
xlat
xor
sub
leave
mov
andl
mov
ja
cmc
pop
inc
std
out
daa
out
jnp
jb
jns
push
sbb
lahf
fwait
into
mov
mov
popf
dec
xor
rorl
jb
mov
fs
std
add
mov
mov
inc
mov
xor
mov
loope
inc
roll
test
inc
ror
call
xchg
jle
pop
xchg
loope
sarb
push
or
out
mov
andl
rclb
inc
in
js
dec
aas
mov
testb
cmp
aas
in
jno
aaa
ret
inc
xchg
lahf
out
sbb
fstpt
lea
sbb
pop
out
sub
fcoml
and
imul
adc
and
sub
mov
movsb
dec
shll
sub
add
mov
push
ja
pop
cltd
xchg
fucomi
mov
inc
cli
cmp
mov
lcall
and
lret
push
stos
sti
jne
pop
sub
mov
sar
xchg
dec
or
or
fstpt
xchg
outsb
mov
dec
insl
shl
ss
sub
sbbl
stc
movsl
cmp
nop
xchg
push
leave
and
aam
mov
adc
jge
call
push
std
test
dec
loop
sbb
std
loope
imul
sub
idiv
and
ret
daa
pop
mov
add
jae
mov
xor
mov
xchg
cmp
insb
or
pop
cs
fs
inc
push
mov
adc
xchg
cmp
lea
pop
les
pushf
xchg
and
mov
in
xchg
aas
lahf
icebp
cmp
and
sub
fwait
dec
dec
ds
pop
mov
sarb
xor
mov
stos
in
adc
rorb
dec
push
shlb
mov
inc
int3
sbb
outsl
mov
xorl
mov
xor
and
and
jno
aaa
ja
cmp
mov
cld
mov
das
je
inc
pop
pop
emms
pop
mov
aaa
inc
js
jne
mov
and
adc
outsb
lods
cmpsb
cmp
enter
aad
popa
sbb
insb
lods
dec
adc
mov
push
jo
push
lahf
xor
sbb
lods
loop
cmpsb
sti
jnp
rclb
pop
inc
inc
lea
inc
jo
movsb
lahf
adc
pop
dec
mov
inc
pop
push
pushf
pop
add
lea
xor
pop
jne
or
mov
es
addl
out
jmp
fcoml
mov
lods
mov
pop
rcr
jg
push
test
lcall
dec
rorl
pop
icebp
adc
push
cmp
pop
insb
bound
push
or
sahf
mov
outsl
ret
xor
pop
cmpsb
pop
adc
and
pop
xchg
cmc
lea
jno
sbb
push
jl
mov
sahf
inc
jbe
mov
out
push
jl
lret
add
lock
mov
int3
insb
clc
out
adc
incl
push
lods
pop
sbb
add
xor
xor
mov
jne
enter
mov
addr16
mov
int3
inc
lret
in
xchg
cmp
lock
pop
cmpb
jle
xor
movsl
add
sbb
dec
in
mov
fildl
or
daa
pusha
push
mov
outsl
shl
daa
movsl
push
or
push
dec
sub
iret
mov
movsb
mov
rcll
sub
fnstcw
mov
int
xor
bound
pop
and
lods
xchg
in
add
mov
ja
push
or
pop
adc
cmp
in
xor
out
sub
mov
lds
clc
ret
fs
jmp
cmpsl
ret
jbe
xor
call
aaa
jno
mov
jg
sbb
aas
dec
mov
pushf
inc
hlt
xor
sub
popf
icebp
adc
clc
dec
dec
xchg
mov
imul
pop
nop
jae
sub
sub
push
mov
pop
js
cmc
movsb
inc
hlt
jg
clc
inc
frstor
lods
cmp
jbe
lods
addr16
push
imul
lahf
ja
jecxz
into
cmpsl
jg
nop
fldl
sub
pop
aad
nop
scas
inc
mov
cld
idivb
dec
rcll
insl
pop
lcall
push
outsl
mov
add
mov
in
push
ljmp
nop
ret
inc
arpl
aaa
dec
jmp
mov
mov
in
cmp
push
mov
dec
cmpsl
jo
push
nop
imull
ret
jge
loop
jae
jne
fsubs
jle
pusha
cmp
xchg
adc
adc
std
and
ret
dec
insl
mov
out
fisttpl
or
cmp
adc
cs
pop
insl
inc
int3
ljmp
inc
mov
icebp
xor
mov
cmp
das
inc
jae
and
add
inc
mov
aaa
loope
pop
fmul
shll
jo
xchg
call
iret
dec
push
hlt
call
xlat
pop
imul
sbb
orb
lea
les
mov
adc
mov
dec
mov
daa
pop
jns
sbb
add
mov
sub
movsb
xor
add
sub
enter
dec
ja
pop
idiv
cmpsb
add
jb
les
cltd
sarb
into
pop
jp
outsl
pop
and
enter
mov
or
sub
add
inc
mov
fldenv
pushf
lds
std
fisubrl
mov
sbb
xchg
mov
mov
mov
mov
repnz
in
add
insl
jmp
js
add
lods
stc
mov
xchg
int
sub
and
xchg
call
xchg
sbb
kxnorw
sbb
popa
mov
mov
andl
mov
and
out
aam
xchg
add
faddl
cmpsb
and
jo
int
and
mov
dec
dec
push
xlat
fimull
in
jecxz
out
cmpsl
movb
scas
xchg
dec
dec
push
push
out
pop
inc
cmp
shrl
xchg
push
mov
add
arpl
mov
sbb
mov
mov
mov
daa
in
rorb
mov
or
test
loopne
stos
mov
sub
aas
xor
cs
outsl
mov
in
pop
push
movsb
jnp
push
xchg
fists
int
stc
and
jnp
in
out
adc
std
cmpsb
test
add
pop
jp
call
sbb
cmp
das
mull
lds
or
pop
popf
mov
in
push
dec
dec
ljmp
add
sub
xchg
test
and
xor
and
ds
mov
enter
adc
sub
insl
daa
cmp
inc
ja
lret
call
or
push
sti
lea
test
add
and
mov
iret
jle,pn
mov
dec
in
lods
out
enter
orl
jle
std
sub
and
add
enter
jb
xchg
clc
push
sbb
sub
enter
les
jbe
jecxz
dec
mov
mov
xchg
iret
test
fisubrs
cmp
mov
aam
jmp
or
inc
and
adc
or
pop
fimull
xchg
dec
daa
call
push
inc
xchg
adc
repz
xchg
pushf
mov
into
gs
cmp
mov
inc
fdiv
bnd
outsl
and
xchg
in
push
inc
xor
jl
imul
shlb
adc
lock
scas
hlt
dec
ss
push
adc
mov
jp
loope
pop
lret
int
or
pop
cmpsb
push
cmp
adc
aas
out
push
adc
dec
out
cmp
adc
popa
hlt
mov
push
ljmp
push
mov
mov
es
mov
pop
push
xchg
add
call
add
rcrb
cmp
mov
push
addr16
dec
inc
jae
cwtl
scas
push
sub
cmp
push
dec
add
adc
push
xchg
out
add
pop
push
movsl
out
cmc
nop
out
nop
mov
mov
incl
repz
jge
jle
roll
jbe,pn
pop
lcall
lock
in
sahf
ffreep
adc
pop
lret
mov
aad
shrl
xlat
and
test
jmp
add
dec
std
aas
aam
jg
call
sbb
inc
push
fmuls
out
ljmp
adc
out
push
or
cmp
adc
sbb
clc
push
es
xchg
fs
xor
in
dec
cmp
jp
rclb
fidivrs
out
cwtl
addr16
push
out
adc
sbb
mov
add
cmp
mov
in
pop
lea
jbe
xor
xorb
fistpl
push
fwait
es
call
and
ja
mov
sub
push
jge
mov
pop
mov
enter
shufps
xchg
rcl
call
push
fwait
sets
cld
loopne
mov
stos
mov
mov
jo
mov
adc
mov
fsubl
and
and
inc
ljmp
sub
addr16
stc
mov
pop
cmp
pop
mov
xchg
or
push
cmp
jnp
aas
test
rorl
popf
test
jp
cmp
inc
xchg
mov
mov
and
xchg
fisubrs
mov
stc
popa
cmp
mov
lods
adc
ficoms
and
sahf
idivb
sbb
mov
xchg
outsl
add
imul
mov
nop
test
orb
xchg
jmp
decb
sahf
repnz
dec
push
xchg
into
xor
aaa
xchg
and
xchg
lods
push
das
xchg
lods
movsb
xchg
addr16
or
ja
sbb
clc
test
jmp
inc
movsb
stc
cs
aad
test
psubw
popa
jns
lret
sbb
mov
jp
pushf
push
ljmp
dec
mov
lods
shlb
insb
push
add
cmp
enter
in
jbe
int3
sub
or
ljmp
ljmp
xor
fcoml
sbb
pop
lcall
arpl
xchg
cmpsl
ljmp
out
fdivrs
xchg
mov
fs
ds
adcb
jle
popf
imul
cli
int
call
mov
inc
test
push
jmp
stos
sub
call
loop
decl
and
jl
cmc
sbb
out
repnz
xor
repnz
negb
xchg
push
inc
rorl
iret
xchg
mul
xchg
inc
gs
test
mov
mov
lret
arpl
xchg
std
ret
adc
cs
mov
push
push
cmp
jae
xor
mov
ds
xchg
sbb
mov
dec
test
sub
xchg
add
or
cwtl
push
xor
mov
xor
adc
and
cmp
jo
push
push
dec
mov
push
xchg
dec
ret
pop
test
in
loopne
cli
push
icebp
jns
jecxz
sub
jp
adc
lock
inc
mov
jns
cmp
and
adc
jge
out
mov
divb
sahf
imul
xor
push
mov
sub
xchg
sub
xor
sub
hlt
dec
cld
mov
bound
xor
dec
lds
out
pop
xchg
lods
jnp
adc
mov
cmp
push
fsub
inc
loop
shl
subl
daa
ljmp
add
pop
mov
int3
inc
dec
repz
mulb
cli
mov
bound
fdivrl
inc
jge
pop
pusha
outsb
xor
into
xchg
mov
adc
lds
mov
xchg
lods
mov
lds
xor
xchg
popa
jb
popw
mov
push
sti
aam
in
lods
pusha
les
rcll
outsl
mov
out
or
das
lea
out
add
test
sahf
push
jl
adc
mov
xchg
cmp
sub
add
outsl
xchg
fbld
addr16
fbld
in
sbb
jl
dec
adc
mov
lret
cs
dec
pusha
adc
mov
sti
add
xchg
mov
push
les
lods
lock
pop
cld
js
mov
adc
fmulp
getsec
xchg
adc
fwait
adc
inc
dec
or
push
mov
insb
aad
bound
inc
sbb
std
shlb
cmc
lock
int3
fs
sbb
lock
push
add
pop
cltd
outsl
push
mov
shlb
pop
test
xchg
popa
fs
ja
sub
push
lahf
mov
icebp
jl
repnz
add
sahf
and
sub
sbb
test
mov
pusha
dec
gs
jne
les
and
nop
fstpt
movsl
pop
arpl
mov
inc
mov
mov
hlt
aam
add
sub
pop
iret
jnp
mov
and
les
sbb
fstl
mov
cmpsl
mov
jmp
call
daa
fwait
jnp
fidivl
dec
jns
pop
inc
mov
and
scas
mov
test
xor
dec
jp
and
vdivsd
mov
lds
xchg
adc
jg
dec
cmp
sub
hlt
and
stos
cli
fidivs
or
stos
adc
cmp
sahf
or
cmp
out
mov
push
orl
movsb
jae
ret
test
adc
fwait
cs
rcrl
cmp
jl
or
and
push
adc
aaa
les
fistps
jg
fxam
out
jb
and
fdivp
xor
out
pusha
inc
in
lcall
ds
push
iret
jns
inc
ja
add
fstps
dec
lret
xchg
cmp
adc
and
das
jo
scas
dec
pop
scas
mov
ret
mov
inc
jl
cmp
rcrb
icebp
push
aaa
xchg
hlt
sub
inc
pop
in
iret
dec
sub
loopne
adc
sub
xor
mov
out
sbb
xor
leave
pop
hlt
es
sbbl
outsl
mov
lds
jo
mov
lods
pop
scas
add
gs
mov
add
fwait
push
repz
jbe
xor
fldt
add
std
adc
cmp
jle
pop
fs
or
mov
dec
sbb
add
lret
mov
daa
out
adc
adc
bswap
rcll
adc
dec
jbe
sahf
rcrb
fsts
out
inc
mov
xor
hlt
dec
jno
push
stos
add
mov
ret
in
fisubl
or
jmp
iret
test
and
int
sbb
sbb
mov
mov
lret
sahf
jne
fistpll
mov
jge
dec
outsb
movsl
scas
adc
gs
pop
or
push
lods
movsl
push
cmp
lea
in
loope
test
fisttpl
jno
fs
cmp
pop
outsl
mov
adc
int
pop
arpl
popa
mov
mov
jo
ret
push
dec
mov
ljmp
dec
cwtl
das
out
push
insl
xor
hlt
push
mov
aam
jl
rcrb
roll
negb
dec
pop
push
shr
push
inc
and
jle
jl
mov
test
push
aas
ret
or
jne
push
mov
and
adc
pop
icebp
scas
mov
xor
jo
push
outsl
pusha
int3
jno
cmpl
cs
stc
adc
stc
mov
cltd
cmp
sbb
jge
sbb
inc
mov
sbb
mov
xchg
xchg
fldenv
sahf
icebp
inc
cmpl
shrl
movsb
jnp
sub
ljmp
push
fildl
fs
xchg
mov
out
mov
adc
xchg
fsubrs
push
cmp
in
cmp
mov
xchg
push
cmp
dec
cmp
icebp
repnz
pop
lahf
sbb
inc
sbb
adc
pop
mov
repz
and
dec
rcrl
shrb
ffree
pop
adc
lds
cmpsl
ljmp
mov
push
aad
pop
pop
dec
bound
add
gs
adc
in
ret
sbb
out
push
std
add
jle
cmp
adc
rcrl
aaa
inc
jno
sbb
inc
mov
or
push
mov
out
pop
mov
pop
pop
pushf
hlt
icebp
outsl
js
clc
aam
sbb
in
stc
mov
inc
adc
sbb
mov
insb
hlt
int3
ss
popf
shll
subb
add
push
jg
xchg
push
dec
jae
push
insl
call
dec
push
enter
rorl
inc
rolb
mov
cmpsl
mov
xchg
fwait
aad
cli
push
adc
lds
inc
and
mov
pop
pop
test
test
mov
dec
cmp
nop
jle
adc
inc
adc
sub
fdivs
and
loopne
or
outsl
out
lret
popa
pushf
mov
out
repnz
and
push
loope,pn
pop
and
insb
bound
jbe
xor
outsb
pop
fwait
pop
and
jmp
shlb
push
iret
cmp
and
stc
lahf
lahf
mov
outsb
or
push
roll
jbe
daa
cmpsb
pop
xor
mov
ror
adc
inc
jne
sbb
sti
dec
sahf
xchg
dec
jae
testb
iret
fs
hlt
adc
push
cwtl
ret
sub
rorl
jo
icebp
out
addr16
aas
add
add
cwtl
sti
inc
popf
xchg
in
icebp
scas
xor
loop
dec
cs
mov
xchg
daa
imul
add
in
add
dec
mov
loope
inc
fisubrl
enter
cmp
cmp
pop
ret
sub
into
push
scas
mov
pop
popf
mov
xchg
mov
add
es
xorb
inc
jb
or
sti
test
sbb
inc
pop
adc
pushf
add
loop
fdiv
js
push
enter
dec
imul
aaa
es
mov
nop
xchg
rcll
pop
outsl
sarl
rorl
ss
imul
pop
add
xor
lahf
js
mov
rcrl
xor
out
lea
iret
mov
adc
int
popa
in
pop
faddl
test
movsl
add
cmp
sbb
outsb
inc
xchg
bound
out
in
sub
lock
xchg
mov
or
lret
mov
mov
addr16
dec
ss
fsubrl
sub
adc
and
pop
cmp
cld
imul
je
cli
clc
repnz
leave
mov
sarb
outsl
iret
mov
enter
nop
cmp
or
int3
push
inc
dec
and
push
xor
cmpsl
fwait
push
cmp
lret
scas
loope
cli
and
stc
cli
pop
adc
in
add
test
jbe
jle
rorl
fs
in
hlt
dec
jge
push
adc
sub
mov
push
xor
pop
sar
push
xor
dec
or
ret
fmuls
inc
sub
mov
inc
mov
cmp
rcl
adcb
popf
cltd
mov
and
push
cwtl
adc
bound
xchg
rcrb
mov
jecxz
cmpsb
mov
and
xchg
inc
push
in
jl
inc
inc
cwtl
stc
adc
jb
inc
pop
mov
test
clc
inc
cmc
jp
adc
cmp
lods
mov
dec
inc
adc
or
ljmp
mov
ret
jae
int3
pop
les
xchg
sbb
je
rorl
pop
icebp
jecxz
ret
sbb
push
movsb
inc
inc
adc
or
push
out
stos
jp
imulb
gs
dec
dec
aaa
leave
add
std
xor
inc
xchg
or
insl
ret
lods
pop
jp
cwtl
cmp
incb
or
repnz
jmp
dec
xchg
into
cmp
add
push
mov
mov
popf
negl
rol
pop
sahf
jo
mov
das
sbb
inc
inc
adc
mov
cmp
xor
mov
and
xchg
jae
xor
lret
inc
iret
js
cmpsb
cmp
lret
mov
pushf
xchg
loope
sbb
sub
bound
test
cmp
inc
jne
adc
pusha
call
sub
sbb
xor
mov
xchg
ds
outsl
es
jg
testl
in
mov
fisttpl
dec
mov
sub
insb
fsubs
dec
test
cmpb
rcrb
mov
imul
shl
stos
xchg
lcall
and
xor
or
push
fnstsw
shll
je
cmp
pop
cmp
cmpb
sbb
out
fdivl
sbb
push
sbb
jo
jns
pop
test
imul
add
xchg
xor
pop
jne
mov
mov
inc
in
addr16
mov
sbb
clc
cmc
cmpsl
out
xchg
xchg
mov
dec
jno
push
dec
in
mov
mov
cmp
cmpl
pop
xchg
nop
rcll
and
lock
clc
stos
aam
sahf
and
lea
into
xchg
cmp
das
sbb
cwtl
and
inc
int
adc
dec
jo
dec
lcall
mov
ja
in
test
dec
cmp
and
inc
mov
xchg
and
scas
aas
aas
jne
in
dec
or
and
lret
pop
lahf
push
or
cmpsl
fs
adc
call
mov
into
int
int
xor
jecxz
mov
cmp
scas
mov
sbb
push
push
dec
jns
sbbl
adc
pop
xor
ficoml
shll
mov
stos
jmp
pop
cmp
icebp
mov
push
or
iret
mull
arpl
pushf
sub
push
dec
xor
xchg
mov
and
das
pop
jns
adc
mov
push
or
xchg
gs
jecxz
mov
cmc
nop
fcmovbe
scas
or
nop
xchg
dec
sub
push
add
fnsave
lahf
xlat
cwtl
sub
push
mov
mov
xor
dec
scas
mov
outsl
and
sti
test
imul
or
sub
mov
xchg
xor
mov
rorb
sub
fsubs
adc
mov
fwait
add
xor
pop
mov
loop
ror
dec
inc
fcoms
inc
mov
dec
jecxz
sarb
pop
stos
orl
inc
pop
and
jo
test
sub
imul
sub
add
jno
mov
jp
cmpsl
sub
loopne
in
fstpl
push
jbe
pop
push
cmp
arpl
addr16
stos
clc
pop
gs
cwtl
dec
cwtl
mov
nop
cs
and
xor
in
xor
sub
cmp
sbb
mov
jmp
in
add
xchg
mov
cltd
inc
scas
addl
aas
mov
mov
jl
out
jno
push
sub
dec
pop
js
fiaddl
mov
repnz
aas
fdivrs
cmp
pop
call
test
inc
daa
outsb
push
test
xchg
inc
push
adc
pop
push
jmp
les
dec
pop
jo
aam
shll
dec
int3
and
lret
and
mov
movsb
and
outsb
push
insb
add
xchg
mov
jns
inc
pop
jmp
sbb
les
pop
cmpsl
sub
sub
adc
or
sub
mov
repz
inc
pop
std
pop
cmp
pop
in
and
mov
push
mov
jno
data16
cs
loopne
jmp
pop
daa
sbb
movsl
popa
lds
sahf
sbb
xchg
cwtl
stos
add
mov
mov
iret
dec
stos
lods
lods
pushf
inc
mov
jo
xchg
das
or
dec
jb
xorl
push
sub
imul
out
pusha
push
pusha
push
in
jns
cmp
jae
imul
dec
sbbl
fstpl
fmul
adc
sti
lea
outsl
mov
mov
sbb
jp
js
iret
sti
jecxz
inc
sbb
insl
inc
fcom
adc
sub
push
orl
pop
insb
adc
rcll
dec
pushf
push
inc
or
or
inc
dec
sbb
xchg
loopne
sbb
mov
aad
pop
jbe
or
add
xchg
cs
pop
adc
mov
push
inc
fadds
sar
loopne
aaa
cmpsb
aam
add
test
pop
lods
mov
stos
stos
xor
into
sahf
inc
jl
jb
adc
inc
mov
xchg
pop
add
sub
cltd
cmp
or
cli
mov
pop
mov
out
jle
leave
pop
jns
leave
xor
xor
xchg
jmp
dec
add
clc
push
cmp
mov
leave
pop
cli
xchg
imul
lea
std
jns
inc
mov
fucomi
or
sbb
test
movsl
xchg
shl
fcomps
sbb
stos
mov
mov
pop
sub
cmp
mov
adc
sub
mov
data16
fcmovbe
adc
inc
xchg
in
icebp
repnz
mov
or
mov
inc
das
push
sbb
call
loope
and
cltd
push
dec
insl
add
and
mov
repnz
cmp
fwait
mov
lock
and
pusha
or
inc
orl
jns
test
inc
dec
mov
clc
or
mov
inc
ja
or
mov
mov
cmc
inc
push
je
dec
cmpsb
dec
das
inc
inc
xor
sarl
int3
mov
out
sbb
dec
dec
popa
loopne
icebp
xchg
mov
dec
sub
repz
pop
mov
push
pop
and
sub
fnop
pusha
jbe
xor
pusha
jbe
xchg
in
xchg
mov
pop
add
jecxz
imul
stc
jle
mov
repz
aad
cs
push
call
sti
orb
mov
dec
fdiv
dec
movb
sbbl
push
cmp
test
sbb
outsb
xor
xchg
dec
lods
jne
shll
sub
jp
call
or
loop
sub
push
fisttpll
sub
mov
and
outsb
or
int
inc
pushf
sti
stos
sbb
cmp
pop
lcall
xor
mov
lret
rolb
cli
fiaddl
push
mov
shll
dec
imul
cmpsb
mov
sub
loope
xchg
xchg
xor
jb
std
faddl
out
fwait
sbb
outsl
inc
inc
cmpsb
movsb
mov
pusha
cmp
outsb
lea
or
inc
pusha
lea
arpl
inc
or
test
mov
rol
dec
lahf
test
xchg
jo
jecxz
or
and
xchg
xor
xchg
scas
daa
loopne
data16
inc
mov
pop
or
pop
hlt
add
mov
ja
fcmovnb
leave
dec
dec
jbe
outsb
dec
inc
pop
xlat
stc
loopne
aam
out
add
sub
subb
es
push
insb
mov
rclb
mov
movsb
jmp
pop
cmp
sub
cltd
mov
sub
and
xlat
addr16
ja
cmpsb
and
push
popf
dec
inc
jbe
sub
outsl
xchg
jg
mov
roll
jo
sbb
rorb
xor
jmp
sahf
cltd
xchg
out
test
daa
push
andl
jp
ljmp
icebp
jbe
arpl
test
xchg
push
xor
insb
mov
mov
rclb
hlt
pushf
insb
pop
mov
scas
jg
mov
fdivrs
ror
inc
lret
jbe
dec
pop
insb
xchg
pop
imul
in
mov
pop
fs
adc
clc
jl
mov
mov
test
addr16
jmp
data16
add
xor
mov
mov
lcall
rcll
stos
ja
mov
xchg
popf
sub
daa
push
jno
jmp
push
xchg
sub
stc
shll
mov
push
adc
sahf
leave
or
lcall
pop
push
loopne
and
mov
movsl
or
dec
in
sub
and
push
adc
aad
sub
jbe
rdmsr
aas
sahf
loop
mov
cmp
sub
and
xor
mov
icebp
scas
push
xor
jl
mov
enter
jb
cmc
xor
lret
cwtl
push
shl
push
test
jl
add
jb
icebp
mov
cmc
outsl
mov
and
pop
or
dec
pop
xor
sbb
jecxz
in
rorb
or
sub
sub
xchg
ss
xchg
sub
pusha
adc
sbb
cmp
in
xor
push
rol
add
mov
shlb
int
iret
xchg
sbb
test
mov
leave
in
mov
lods
pop
repz
ss
aaa
lea
xor
pop
dec
dec
mov
insl
cld
push
int
movsl
sub
xor
adc
lea
scas
push
and
or
lods
push
inc
adc
repnz
stos
jle
das
mov
fsubp
dec
jle
add
repnz
xor
lock
mov
dec
cmc
or
pop
sub
popa
rcr
sub
pop
ja
mov
enter
pop
orb
xchg
jns
negb
mov
inc
sub
lea
cmpl
int3
mov
jg
fs
push
jl
dec
mov
jmp
xchg
jmp
and
fwait
idivl
mov
adc
inc
cli
arpl
push
add
lret
push
in
inc
lret
pop
push
mov
xor
outsl
fwait
mov
in
add
mov
nop
test
push
cwtl
rcl
cmp
dec
xor
scas
cmp
and
mov
or
out
xor
sbb
cs
adc
fidivrs
jno
jl
rcll
push
lret
push
push
in
jnp
adc
sarb
sbb
add
inc
push
inc
pop
add
inc
push
ljmp
push
ljmp
pop
lods
jno
leave
mov
addr16
aad
es
repz
add
je
sub
mov
repnz
adc
daa
in
xchg
pop
mov
sub
sbb
cmp
adc
ljmp
inc
push
lahf
mov
repz
sbb
pop
int3
enter
clc
xchg
ljmp
mov
xchg
fildll
mov
jmp
sahf
divb
or
je
call
test
push
rclb
lods
xor
js
pop
ficomps
fdivrl
es
enter
jmp
ret
stc
sti
adc
fstl
insb
stos
xor
mov
in
fiadds
mov
jno
lea
mov
into
out
pusha
shr
cmp
mov
jbe
sub
adcl
enter
ds
leave
in
lea
lcall
jl
ret
dec
ljmp
mov
jo
inc
mov
sbb
adc
or
aam
sub
test
mov
decb
or
push
jle
mov
sub
and
mov
mulb
push
rorb
mov
inc
sub
jne
cli
pop
int
adc
in
xchg
imul
sub
testl
sbb
mov
sub
and
push
or
fsts
add
repnz
inc
and
and
mov
imul
rorb
repnz
mov
push
hlt
sbb
cmc
dec
std
lea
sub
mov
cltd
xlat
cwtl
fcoml
shlb
sbb
dec
cs
push
mov
movsb
enter
sbb
pushl
out
addb
clc
rcrl
rorl
imul
mov
inc
ret
arpl
imul
shll
push
fiaddl
jne
inc
or
add
cbtw
mov
js
imul
and
cld
xchg
dec
icebp
repz
loope
scas
aam
xchg
cld
decl
mov
int
xor
cmp
add
outsb
cli
scas
ljmp
pop
pop
lret
add
loop
jmp
pop
lds
imul
add
adc
inc
or
loope
mov
and
add
sub
add
dec
aas
cwtl
or
xchg
sub
sbb
cmc
push
sbb
cmpsb
pop
cmc
cwtl
cld
popf
sub
mov
aad
sub
jecxz
cmpsb
in
sahf
push
test
sbbl
and
jne
cmc
cmpsl
sub
adc
in
pop
insb
mov
clc
xchg
mov
pop
nop
xchg
stos
out
xor
das
xorl
push
lods
roll
aas
xchg
pop
xchg
xchg
mov
add
lret
mov
xchg
jge
and
mov
or
aam
movsl
out
je
jno
sub
mov
pop
jp
jne
mov
or
cmp
adc
xor
movsl
mov
cmp
push
mov
jmp
sub
adc
fildl
and
stos
repz
mov
cmp
add
add
pop
pop
and
xor
pop
and
popf
xlat
les
add
pop
sbb
ret
loope
sub
xchg
pop
std
mov
lret
aas
inc
pop
fxch
into
mov
mov
mov
inc
push
sar
mov
fbld
mov
jns
xlat
ljmp
push
notl
leave
rolb
jne
negb
lahf
push
hlt
pop
rcrb
inc
mov
bound
pop
xor
mov
xor
xor
imul
push
sbb
mov
xchg
int
xchg
jnp
jl
lds
divl
sbb
ss
mov
leave
mov
sbb
arpl
sbb
xchg
xchg
sbb
xchg
mov
movsl
in
cmpsl
popf
aad
fimull
loopne
adc
sub
lahf
leave
pushl
shll
push
sub
sbb
jo
stos
mov
cwtl
outsb
jle
cmc
in
inc
stc
hlt
xorl
pop
jns
jp
ret
push
inc
gs
in
pop
aas
stc
mov
cmp
int
shrb
loop
std
cmp
mov
cmp
mov
aam
sub
sub
aas
xchg
inc
in
inc
jns
inc
inc
mov
add
gs
xchg
cmp
push
loopne
ret
jge
movsl
es
mov
mov
push
je
cld
xchg
les
xor
xchg
jecxz
add
sub
xor
cmp
fildll
int3
cmp
movsb
shl
mov
fdivs
test
xchg
jns
addl
mov
into
sbb
mov
adc
inc
xchg
cmp
mov
xchg
jl
out
cmp
rorl
xor
sbb
pop
or
pop
push
rcll
adc
insl
or
flds
adc
dec
sbbl
xchg
inc
fadds
adc
mov
or
inc
test
insl
cwtl
movsb
cmp
jle
mov
mov
jnp
inc
outsl
inc
sbb
call
dec
xchg
mov
push
out
push
jne
mov
movsb
mov
dec
roll
mov
popf
sub
sbb
lods
sahf
jne
pushfw
jmp
pop
in
mov
int
dec
aad
xchg
std
jle
hlt
mov
push
mov
and
push
insl
hlt
inc
movsl
fisubl
add
add
cmpb
inc
pushf
adcl
dec
imul
sub
ret
push
push
cmp
jno
cmp
jle
out
rol
lds
cli
shll
fidivs
pop
add
and
test
and
ficomps
scas
int3
xchg
hlt
nop
pop
jl
fsubp
call
outsb
mov
test
mov
xchg
push
mov
xchg
in
mov
jecxz
inc
decl
add
adcb
dec
aas
jns
sbb
jp
out
negl
jp,pt
fdivr
popa
cmp
sub
sub
sbb
incl
mov
dec
popa
xchg
rclb
jecxz
inc
sbb
mov
pop
addr16
sbb
inc
test
inc
div
jecxz
mov
pop
out
ficoml
xor
pop
mov
sub
xchg
and
mov
int3
mov
loope
pop
push
ja
fiaddl
in
out
pop
mov
or
leavew
in
out
or
jb
xchg
jle
xlat
pop
or
and
int
push
faddl
ljmp
lret
call
adc
cmp
fdivrs
pusha
mov
aad
leave
xchg
xchg
xor
nop
faddl
jmp
xor
xor
loope
cltd
rolb
xor
loope
adc
pop
lret
or
test
das
sarl
test
test
ret
dec
sahf
xor
pop
xor
popa
mov
pop
push
stos
xor
xchg
add
jg
and
inc
adc
dec
mov
aaa
cli
push
adc
push
add
mov
mov
mov
mov
idivl
sub
leave
adc
lods
add
jae
lahf
dec
movhps
inc
dec
lds
out
jno
loopne
xchg
pop
or
enter
dec
sbb
mov
add
fwait
dec
xor
hlt
xchg
pop
fsubr
mov
cli
test
scas
popf
mov
ret
ret
test
xchg
mov
jbe
sbb
dec
mov
add
in
lret
cltd
inc
pop
jge
fsub
sbb
lcall
mov
arpl
mov
dec
pop
add
lret
ljmp
imul
xlat
mov
push
lret
jno
xchg
push
dec
lock
xchg
mov
lcall
fisubrs
inc
push
movsb
js
out
rclb
std
dec
jns
xchg
sbb
sti
dec
ds
xor
dec
dec
jge
test
jle
and
cmp
inc
out
cmp
aad
mov
push
inc
imul
idiv
hlt
sub
cmp
mov
push
jl
xchg
xchg
push
fbld
xchg
es
stos
mov
sbb
xchg
jns
call
mov
test
and
popf
mulb
xor
adc
mov
aam
pop
push
xchg
cltd
movsb
xor
in
cmc
arpl
je
out
pop
jnp
sbbb
lahf
adc
ret
notl
stc
mov
jo
repnz
sahf
iret
imul
jmp
pop
xchg
cmc
mov
jmp
out
inc
aam
out
mov
dec
fildl
and
push
xchg
mov
jae
enter
cmp
cwtl
icebp
imul
mov
cltd
pop
cltd
push
xor
xchg
push
ret
sbb
cmpb
sti
cli
pusha
sbb
jne
mov
mov
fsts
in
push
rcl
pop
loopne
mov
adc
dec
ret
sub
mov
inc
cmc
dec
mov
sub
mull
test
sbb
insb
mov
xor
inc
cmp
jge
mov
in
pop
fcomps
sbb
les
mov
push
popa
pop
sbb
es
and
mov
dec
push
mov
dec
rcr
enter
insl
popf
cli
jecxz
jmp
jecxz
xor
out
das
push
inc
push
sub
lock
sbb
out
push
or
roll
jge,pn
pop
or
push
cmc
test
test
test
ret
fadds
mov
into
lock
or
daa
inc
mov
jae
fadds
scas
add
aas
dec
push
cvtps2pd
rcl
mov
test
or
xchg
iret
rcrl
inc
xor
mov
mov
xchg
leave
inc
jg
push
push
xorl
sbb
cmp
dec
test
adc
pop
outsl
jno
scas
and
icebp
pop
adc
cld
or
push
xchg
xchg
test
adc
xchg
xchg
adc
jnp
push
push
cli
pop
inc
push
jp
out
jmp
movsl
push
inc
or
jecxz
adc
orb
xor
dec
push
je
lcall
dec
sub
pop
push
icebp
test
ret
mov
stc
cli
push
adc
mov
std
push
xchg
inc
inc
mov
movsl
jno
mov
inc
nop
daa
pop
pop
dec
aam
sti
push
mov
pop
lods
sub
fs
test
ja
xchg
jnp
xor
ds
dec
fiaddl
gs
insb
or
rorl
jecxz
cmp
jo
das
pop
out
nop
imul
jo
mov
jb
dec
lods
std
and
sub
jmp
mov
push
xor
mov
xchg
enter
sbb
fldt
cmp
mov
sub
insb
inc
neg
sbb
dec
jg
inc
test
loopne
mov
aas
mov
fsubrl
inc
and
int
jae
inc
xchg
repnz
push
outsb
dec
sbb
pusha
jmp
mov
outsb
fsubrs
scas
xchg
push
outsl
jl
push
sub
cs
negl
lds
mov
sub
fwait
pop
sbb
out
jo
and
pop
push
dec
hlt
sbb
mov
cmc
push
jo
push
pop
mov
inc
scas
add
jo
cmc
pop
xchg
xlat
pop
data16
mov
testb
jge
scas
cld
or
mov
outsl
imul
test
in
add
mov
adc
fsubl
and
add
repz
cltd
cs
sbb
rol
int
mov
pop
mov
rolb
cld
cs
mov
jle
xor
push
loop
mov
pop
xor
dec
clc
push
mov
mov
cmp
and
cltd
test
cwtl
out
scas
mov
mov
and
jp
int
jecxz
push
or
mov
insb
cmp
int
or
int3
rorb
adc
fidivrs
xor
sub
lds
rcll
mov
mov
ret
add
shr
imul
pop
adc
push
das
addl
hlt
out
fsubrl
push
sbb
punpckldq
int
lcall
xlat
mov
imul
jne
sbb
sbb
cwtl
jne
sbb
imul
jge
cs
xchg
mov
imul
mov
test
lock
lcall
adcl
jbe
mov
pushf
adc
aaa
movsl
inc
mov
fnstenv
push
mov
aaa
cmp
pop
mov
inc
in
add
adc
push
in
push
dec
shll
inc
xor
pop
or
adc
popf
jl
jnp
pop
dec
imul
mov
xchg
nop
or
push
jo
push
mov
pop
mov
mov
jne
and
push
add
jg,pt
jae
xlat
jle
sbb
or
push
push
call
fwait
movsl
arpl
cmp
lock
dec
jnp
lahf
dec
xchg
xor
sbb
nop
inc
lea
push
lahf
jo
fcompl
sub
outsl
iret
sub
dec
int
adc
cmpsb
jp
bound
in
lahf
les
xchg
sbb
dec
dec
mov
fdivrp
arpl
clc
inc
xor
mov
xchg
xor
pushf
or
cmp
sbb
adc
subl
mov
insl
mov
push
dec
mov
pop
out
fcom
mov
les
movsb
xor
mov
in
sbb
out
sbb
outsb
lock
pop
into
aas
xchg
jmp
push
cli
loope
dec
push
or
sub
test
mov
pop
mov
jmp
xor
xchg
cltd
jmp
add
cmc
and
inc
push
cmp
mov
xchg
inc
xchg
aad
push
push
out
inc
test
mov
pop
dec
add
pop
sti
in
xchg
push
sbbl
decb
fs
or
jle
xchg
mov
or
push
rcrb
fwait
mov
icebp
ja
or
pand
repnz
mov
mov
mov
test
mov
or
sub
add
mov
roll
jo
or
mov
mov
cmp
mov
rorl
xorb
mov
lcall
rclb
test
lods
stos
inc
mov
sub
out
or
leave
dec
sarb
pop
mov
dec
lret
in
xor
xchg
jp
xchg
mov
cmp
ret
ret
mov
mov
ds
jg
push
adc
mov
faddl
mov
mov
pushf
mov
out
std
mov
push
loopne
dec
add
xchg
adc
adcl
mov
mov
adc
sbb
sarb
inc
lahf
sahf
or
sbb
mov
fwait
mov
arpl
inc
pop
data16
loop
imul
shll
inc
addb
or
inc
lock
inc
scas
sti
push
pushf
jnp
inc
pop
jnp
push
lcall
inc
jge
jle
fs
fs
mov
push
ficoms
jg
lds
xchg
mov
jle
and
nop
stos
jbe
ficoms
mov
pop
cmpb
scas
jl
int
incl
mov
push
daa
mov
rcrb
sub
jl
movsb
enter
aaa
std
loop
mov
bound
test
imulb
push
ret
stos
enter
jne
or
sub
push
pop
push
lock
aam
scas
outsl
fsubs
int
xchg
js
cbtw
mov
es
cmp
inc
lcall
jmp
stos
dec
jnp
mov
fcoml
sub
icebp
mov
test
mov
mov
xchg
gs
movsb
in
subb
loop
sti
ret
inc
rorl
je
and
aaa
shrb
nop
pop
mov
movsl
mull
sbb
mov
lret
ds
repz
outsb
fdivl
outsl
ret
pushl
stos
or
test
dec
inc
push
sub
inc
or
xchg
or
push
shrb
adc
inc
mov
je
test
jae
into
test
xor
sbb
sti
rolb
sahf
push
add
inc
and
sub
adc
int3
inc
sbb
addb
int
movsl
push
jge
dec
ljmp
mov
in
sbb
je
rcr
mov
jns
je
pushf
insb
jl
sub
stc
inc
scas
stc
adc
jbe
pop
imul
sbb
add
jns
repz
inc
fs
sbb
dec
sbb
pop
inc
test
mov
aam
ret
mov
decb
xchg
mov
inc
mov
lods
mov
mov
vphsubbw
xor
jno
xor
aaa
ss
adc
lods
divl
pop
fistpl
jns
jmp
dec
mov
lds
jae
lahf
xor
pop
mov
pop
jo
or
xor
or
pushf
leave
loope
mov
negl
inc
cmp
enter
stc
and
fwait
adc
das
dec
push
and
lock
jmp
or
or
xchg
and
addl
mov
fldt
xor
lahf
out
daa
add
mov
test
pop
lods
sub
inc
pop
sub
inc
xor
pop
adc
pop
or
jo
xchg
mov
enter
fcomp
in
mov
popf
ret
push
push
movsl
loopne
cmpsb
inc
sbb
push
adc
or
mov
loope
loopne
and
sub
mov
cmc
mov
insl
aam
push
repz
int3
lret
sarb
cmp
or
inc
gs
andl
enter
pop
mov
ja
add
fstpt
xchg
cmpsb
sbb
test
and
push
loop
ds
ret
orb
outsl
sbb
cld
test
cltd
and
sub
loop
lods
mov
adc
pop
sbbl
test
testb
xchg
in
test
cmp
and
arpl
xor
gs
mov
cmp
jno
xor
stos
push
dec
cwtl
fs
or
and
dec
sub
mov
and
cmp
cld
xlat
sbb
xchg
js
rcrb
pop
loope
cltd
jns
in
ja
xlat
or
jns
sti
sub
ja
adc
sub
xchg
jmp
mov
out
idivb
stos
sbbb
leave
ficompl
repz
xor
inc
push
ficompl
xor
test
sti
sbb
xchg
jg
imul
inc
aam
lea
clc
sub
or
fprem1
arpl
pop
pop
pop
fwait
test
xor
sarb
push
inc
pop
or
shl
add
sti
loopne
pop
mov
mov
inc
out
insb
or
ret
leave
popa
push
fbstp
jle
outsl
xchg
mov
les
mov
adc
test
aad
icebp
cmp
fstpl
cmpsb
into
iret
adc
test
add
in
sub
inc
push
fwait
sbb
lahf
and
shlb
pop
mov
cs
sub
ljmp
mov
imul
lcall
jns
outsl
mov
and
loope
sqrtps
jo
cmp
lahf
mov
sbb
inc
insl
lods
pop
sbb
push
test
jg
adc
into
mov
xor
bound
pop
sub
dec
pop
xchg
cli
test
iret
es
popfw
jg
pop
enter
xchg
mov
mov
mov
xchg
pop
xchg
andb
jbe
or
pop
sahf
inc
sub
popa
push
mov
outsb
fs
inc
scas
std
xchg
daa
adc
and
in
xchg
arpl
cmpl
popf
adc
push
int3
cwtl
jns
sti
loopne
cmp
ret
mov
arpl
les
pop
out
mov
das
mov
int3
pushl
aas
mov
inc
mov
xor
xchg
sti
and
test
dec
jo
cmp
pop
dec
mov
adc
fsts
mov
test
sahf
loopne
mov
movsl
jp
pop
push
xlat
dec
push
sub
xchg
jns
cli
mov
or
or
push
cmpsl
mov
aas
loope
mov
sub
and
adc
daa
and
adc
jne
jmp
iret
ja
in
int3
mov
mulb
push
and
out
jg
loopne
fnstcw
add
mov
out
sbb
dec
loopne
and
dec
xorb
leave
cltd
nop
lods
sbb
inc
je
sbb
fxch
jmp
or
mov
insl
sbb
scas
push
rcl
pop
les
jb
stc
fsubl
xor
into
out
daa
cmp
push
in
push
rorb
adc
aam
fs
clc
in
test
les
in
filds
js
sti
add
stos
aam
push
mov
movsb
inc
scas
or
jp
inc
push
addr16
mov
mov
subb
sbb
pop
pop
adc
adc
jbe
or
dec
jmp
jl
in
cmp
popf
inc
push
pop
mov
lcall
rorb
inc
pop
pop
inc
daa
aam
sbb
push
cmp
jo
ljmp
insl
data16
jnp
mov
push
cmpsb
mov
dec
xchg
mov
and
push
scas
jge
dec
add
xchg
xlat
gs
mov
jne
jnp
xor
mov
xor
pusha
not
das
repnz
mov
mov
dec
mov
sub
dec
inc
stos
or
sbb
jle
pop
sub
in
jp
fwait
xchg
dec
xchg
mov
adc
les
les
std
in
mov
outsl
cmp
in
sub
test
adc
or
subl
ds
hlt
lock
dec
push
jmp
cld
cltd
dec
pop
into
xorb
xlat
pop
test
add
cltd
ret
out
jb
or
js
xor
cmp
movsb
stos
in
cmpsl
and
orl
pushf
adcl
lds
ret
in
sub
sbb
sub
cli
fiadds
icebp
cmp
je
outsb
test
jb
lcall
aas
icebp
cld
pusha
dec
adc
fs
adc
cmp
nop
mov
in
rclb
push
faddl
incl
bound
mov
cmp
pushf
inc
mov
dec
push
iret
out
scas
cli
cmp
fbld
dec
sub
int3
pop
test
cmpsl
imul
mov
push
fimuls
shrl
add
mov
ffree
mov
sub
mov
hlt
push
sub
xchg
xchg
and
inc
loope
test
cmp
mov
gs
addr16
sti
pop
xor
bound
call
jle
insb
xor
dec
push
mov
jnp
push
inc
pop
fsubp
push
jb
pop
mov
mov
sub
adc
scas
call
lea
mov
pusha
and
fwait
inc
div
lods
jg
lret
mov
inc
push
cmc
xchg
subb
push
dec
sbbl
push
mov
push
jl
cmp
xchg
gs
push
mov
pop
ficomps
mov
mov
fbld
dec
lea
rorl
jle
les
adc
fwait
aam
sub
push
jp
aas
roll
jge
loope
mov
jo
into
jae
sbb
add
cmpsb
pop
jge
loop
sub
lret
push
loopne
pop
sbb
scas
or
outsl
lret
push
push
popa
dec
ficoms
lret
xchg
cld
cli
cmp
push
aad
jmp
std
mov
hlt
hlt
scas
imul
dec
mov
xor
lock
push
test
mov
mov
jbe
das
xchg
add
in
lahf
mov
mov
xchg
jge
inc
sub
add
test
dec
testb
and
inc
push
fcomps
jne
cmp
in
pop
pop
jns
mov
push
ror
mov
rolb
push
add
inc
sbb
leave
mov
sti
mov
in
push
dec
fimull
mov
xrelease
mov
or
lods
push
pushf
rcll
ret
sbb
xchg
stos
in
xor
stos
shll
xor
dec
icebp
mov
les
clc
insb
out
add
adc
sub
jo
andb
loopne
ficoms
jle
arpl
repnz
ret
sbb
out
bound
es
pop
pop
dec
lock
inc
lahf
add
push
enter
out
inc
outsl
les
adc
aaa
dec
int
sahf
dec
dec
aam
cmp
js
add
insb
inc
mov
jae
sbb
mov
lea
and
mov
and
stc
hlt
dec
clc
fisubrs
xchg
dec
movsl
out
and
in
loop
jle
aam
test
push
mov
pop
sbb
push
or
xchg
in
loope
mov
idivl
movsb
jo
inc
fwait
cmpsl
adcb
push
jp
lock
gs
and
rcll
push
pop
and
push
jle
cs
sbb
int3
outsl
mov
adc
insl
lea
fcmovnu
dec
pusha
or
sub
dec
ss
jae
dec
shrb
lret
dec
xor
jge
lods
push
addr16
ss
repz
mov
or
xchg
mov
scas
adc
shl
les
fistpll
and
rorb
mov
pop
stc
sbb
outsl
mov
xchg
insb
pop
ficoms
dec
stos
jecxz
or
and
mov
jb
xor
fdivs
stos
outsb
imul
inc
jecxz
sti
inc
sbb
out
ja
mov
pop
xchg
data16
mov
mov
repz
or
dec
int
fbld
xorb
pop
mov
push
in
push
push
out
in
in
loopne
dec
in
pop
shl
jl
in
fnsave
mov
mov
mov
pop
sbb
lds
or
fidivs
es
and
or
push
in
sarb
arpl
movl
test
xor
and
rorl
sub
hlt
orl
dec
insb
leave
adc
jnp
dec
stos
mov
sbb
sub
push
xor
leave
or
testb
enter
idivb
jne
rorl
ret
fdivp
leave
jno
dec
out
sbb
and
mov
jo
jne
or
and
jge
ret
ljmp
dec
xor
pusha
sbbb
jmp
jg
mov
test
mov
push
lret
push
sti
pop
js
add
mov
dec
jl
sarl
cmc
in
push
and
cltd
imul
inc
js
xchg
add
inc
rorl
cld
and
inc
aaa
in
scas
mov
std
test
mov
mov
jp
adc
cmp
test
cltd
fstpt
int
dec
cmp
mov
jecxz
push
pop
movsl
mov
pop
pop
sbb
inc
cmc
hlt
mov
add
rcrb
lret
imul
pop
hlt
mov
inc
testl
testl
jne
dec
stos
sti
mov
scas
or
sbb
cltd
iret
stos
idivl
cs
or
fmul
test
scas
push
push
adc
xchg
and
pop
les
mov
pushf
inc
sti
hlt
lods
push
sub
ljmp
sub
push
aad
sbb
add
sbb
outsb
in
jge
enter
insl
push
sets
dec
add
in
dec
lcall
xchg
jle
repnz
mov
ljmp
in
repz
xchg
pushf
add
and
push
cmp
jo
bnd
jo
lods
push
outsl
cmp
adc
adc
mov
data16
out
adc
sti
pop
pop
fstpt
xchg
leave
xchg
inc
pop
pop
cmc
fwait
pop
stc
cmp
push
nop
fadd
ror
std
movsl
sub
bound
dec
test
icebp
sub
push
sub
pop
movsb
sarl
and
inc
or
test
push
cmp
push
cli
out
mov
pusha
in
shl
gs
jo
outsb
aad
mov
fnstcw
xchg
mov
jp
inc
sti
les
mov
fwait
mov
dec
jb
into
subb
mov
dec
mov
lea
out
pop
imulb
mov
ja
bound
lcall
pop
repnz
cmc
je
inc
xor
inc
mov
repz
vsubps
xor
pusha
add
loope
sbb
and
jge
adc
pop
out
out
sbb
xchg
fistpll
jno
enter
out
es
jns
sbb
jl
ficoml
or
out
int
out
cs
imul
outsl
add
lock
dec
aas
js
cli
test
int
pop
add
rcrl
fcompl
in
sbb
scas
mov
or
sub
push
pop
sti
insl
les
push
decl
sarl
push
and
dec
pushf
pop
mov
ret
imul
mov
sub
xor
sub
je
mov
mov
nop
mov
std
pushl
lahf
xor
mov
bound
xchg
xchg
cmpsl
mov
jge
in
cmpsl
sbb
pop
xor
adc
decl
jg
mov
inc
xchg
lret
dec
dec
lods
push
xor
fmull
xlat
sub
mov
fwait
jmp
mov
sub
xchg
mov
inc
pop
xchg
cs
pop
cmp
jp
and
inc
pop
rolb
cmpsb
mov
imul
inc
jp
push
push
xlat
and
imul
jecxz
mov
push
out
sahf
dec
int
pop
pusha
je
leave
sbb
jle
popf
cli
hlt
xor
xchg
divb
mov
out
sub
jecxz
nop
jecxz
stos
ret
das
and
inc
inc
xchg
leave
dec
fcmove
out
cltd
int
mov
pop
jmp
inc
add
lcall
push
test
or
hlt
addr16
push
arpl
inc
sub
ret
test
test
inc
cs
iret
mov
dec
sbb
inc
push
gs
sub
gs
lret
jle
jle
mov
pop
xlat
push
mov
or
inc
int
push
iret
cwtl
add
or
cld
push
jmp
add
push
mov
in
aad
sub
ja
jne
std
gs
mov
mov
outsl
lods
xlat
add
mov
fstpl
jae
inc
adc
ret
fidivs
int3
sub
xchg
aaa
icebp
cltd
pop
pop
jmp
mov
xchg
sub
ret
lea
push
cmp
ret
cmc
sbb
jae
sub
cs
decb
clc
sub
ja
pop
lods
pop
mov
cmpb
shl
jnp
pop
stos
rcrl
imul
xor
mov
daa
or
into
xlat
mov
sub
aaa
jo
cld
cmp
jno
adc
mov
repnz
scas
fdivr
mov
pop
or
negl
fnsave
xchg
sbb
dec
add
add
out
rol
inc
imul
mov
popf
dec
fisubl
mov
push
xor
call
jno
dec
cmp
clc
imul
jecxz
or
fidivrl
divb
cmc
cmc
mov
mov
cli
or
pusha
ja
pop
push
cmp
jle
imul
adc
xchg
test
insl
add
call
push
jp
sub
inc
mov
and
in
xor
mov
mov
addr16
push
jl
mov
inc
mov
mov
enter
jle
sbb
mov
mov
xor
mov
add
sub
xlat
fistpll
sub
push
mov
xchg
push
xchg
cld
jae
add
out
loopne
pop
xor
add
sbb
stc
in
push
rorl
inc
and
jecxz
dec
popa
cli
test
pop
sub
and
cmpsl
cmc
mov
mov
nop
pop
cmc
icebp
jmp
ss
push
push
into
push
xor
mov
jl
adc
cmpsb
das
and
repz
inc
lcall
sar
decb
adc
push
jp
fdivl
lds
inc
and
test
icebp
pop
icebp
int3
loopne
sub
aam
xor
loop
dec
xchg
scas
pop
sub
xchg
ds
test
push
data16
add
xlat
das
xlat
jb
js
adc
std
dec
test
and
test
or
lds
loope
std
lds
pop
xor
or
sub
inc
adc
push
push
ja
clc
sub
fldt
cld
dec
cli
es
pusha
enter
mov
push
dec
dec
mov
fimull
fisttps
push
or
jns
cs
loop
nop
jp
int3
in
mov
es
mov
test
les
or
add
push
and
mov
cmp
push
xor
popa
movsb
mov
mov
in
insl
jne
add
hlt
loopne
sbb
pusha
sbbb
fdiv
in
or
cmp
popf
lahf
mov
cli
mov
jae
pop
aaa
loope
ret
xchg
out
shr
clc
testl
xchg
stos
dec
lret
or
mov
mov
mov
aas
adc
mov
les
hlt
cmp
fcoml
in
xchg
leave
call
sbb
inc
jo
push
rol
mov
xchg
push
rcrb
aaa
imul
xchg
adc
jns
stc
ret
dec
inc
or
movsb
cli
test
add
xchg
insl
loope
jp
jg
jp
and
sbb
repz
sbb
pop
subl
addr16
ret
inc
push
sbb
insb
adc
cli
or
mov
and
cmp
fimuls
imul
popl
popa
push
fnstcw
movsl
push
into
mov
add
pop
movsl
int
es
cmpsb
mov
and
rorb
sahf
fwait
pop
std
out
int
push
mov
fcomps
mov
inc
enter
into
jns
enter
int
sub
ret
scas
js
mov
xchg
xor
aad
xor
movsb
cmp
jno
or
shl
hlt
inc
cmpsb
xchg
loope
xchg
mov
lret
lds
adc
aas
jecxz
inc
ret
add
sbb
pop
lret
imul
fstpt
push
or
shr
lahf
lds
dec
xor
ret
jmp
mov
test
or
lea
popa
insl
les
pop
lods
push
hlt
push
push
add
fstpl
in
push
in
cs
push
or
loope
loopne
mov
sarb
push
test
hlt
sbb
scas
ss
lret
mov
shlb
test
push
popf
pop
mov
and
stos
out
out
idivb
ret
insb
test
scas
mov
adc
or
hlt
mov
xor
jg
out
xchg
inc
jmp
mov
mov
inc
icebp
xlat
ret
mov
inc
je
mov
mov
stc
repz
sbb
and
mov
ret
rorb
or
fstp
mov
or
in
stc
fmulp
sbb
rorl
sbb
or
clc
and
jbe
stos
dec
inc
loopne
ret
and
sub
in
sbb
sbb
enter
in
xor
dec
jne
dec
scas
test
out
std
insb
outsl
adc
push
fs
and
jns
xchg
mov
or
inc
sbb
ret
dec
sbb
jmp
lods
int
sub
adc
fs
sub
pop
push
in
fnstsw
int
push
pop
inc
loopne
dec
stos
in
mov
js
pop
dec
mov
xchg
lock
loope
aaa
or
push
push
cmpsb
cmpsb
pop
dec
ret
inc
data16
scas
or
out
xchg
jge
lods
ljmp
mov
lahf
int3
push
inc
mov
jmp
adc
lahf
and
xchg
rcll
mov
push
xor
pushf
movb
cli
xchg
lds
adcb
cmp
test
jecxz
insb
stos
xchg
xor
cmp
jmp
and
bswap
push
lret
ja
fildl
jle
sbb
push
cmp
mov
popa
or
lods
loopne
jmp
ss
jbe
movsl
push
loope
sbbl
dec
mov
hlt
cli
cld
push
push
or
into
push
std
aam
sub
jns
push
rcrl
inc
mov
and
xchg
and
loop
mov
bound
fs
outsl
cmp
push
bnd
lret
add
push
inc
sbb
jns
or
cmp
fdivr
jae,pn
push
push
lret
mov
jns
cwtl
and
pop
hlt
mov
push
outsw
ss
mov
fwait
mov
loopne
enter
add
jae
mov
mov
dec
je
int3
and
or
scas
jo
sbbl
add
icebp
outsl
add
push
pop
pop
xchg
gs
adc
aaa
jbe
adc
inc
jb
cmp
mov
pop
push
insl
sbb
xchg
cmp
or
hlt
rorl
movsl
into
xchg
das
rcrb
adc
call
lea
inc
mov
aaa
xchg
lcall
cld
jge
xor
xchg
jge
scas
popa
leave
jl
jp
daa
loop
cmpsl
dec
loopne
adc
fstps
dec
jecxz
pop
movsl
fistl
fdivl
test
leave
push
andb
je
leave
push
pop
movsb
jae
pop
jae
pushf
repz
sub
mov
jle
aaa
xlat
sbb
out
movsb
or
xchg
add
sub
push
sbb
outsb
cwtl
enter
pop
mov
fwait
imul
pop
lods
xor
xchg
adc
jb
pop
xlat
filds
jno
bound
cmpsb
out
fldl
xchg
repz
mov
addr16
sbb
adc
outsb
jg
inc
clc
lahf
mov
mov
dec
jle
jns
insl
repnz
int
jbe
ds
fisttps
push
sbbl
xchg
cmpsl
std
dec
sbb
je
push
pushf
mov
push
sbb
ror
sti
sti
jge
or
pop
ret
mov
push
jns
and
sbb
hlt
sub
pop
scas
push
repnz
aas
arpl
sbb
inc
mov
inc
andb
int3
flds
out
sahf
int
in
loop
inc
rorl
mov
cmp
repz
out
loopne
push
in
shr
aaa
aam
fstpl
leave
in
fisubl
aaa
outsl
xor
mov
inc
out
xchg
fwait
and
daa
scas
jo
and
wrmsr
addr16
xchg
fisttps
mulb
mov
cmpl
popl
xchg
andl
and
js
pushf
add
or
jl
std
and
movsb
add
js
jecxz
lds
lds
inc
scas
scas
insl
fnsave
and
rcl
call
add
jbe
mov
arpl
xchg
pop
xchg
dec
imul
adc
lea
mov
cltd
mov
popa
pop
stc
push
aaa
fldz
xchg
inc
clc
add
andb
cmp
faddl
les
mov
sbb
jmp
mov
popf
mov
orb
in
sub
xchg
jno
mov
shr
sub
cld
add
lret
outsl
icebp
push
mov
pusha
pop
repz
dec
inc
dec
js
insl
inc
pop
aam
fists
jl
mov
mov
xor
cmp
and
inc
adc
mov
nop
push
aad
cmpsb
sbb
loope
jmp
push
test
mov
and
stos
ss
inc
lahf
packssdw
sub
leave
adc
and
fsubr
dec
jbe
add
xchg
out
pop
fsubrl
orb
xchg
shrb
inc
out
jns
es
rolb
lret
stos
mov
jge
push
nop
mov
in
push
loopne
inc
xor
inc
into
sub
jecxz
adc
xor
ret
push
sub
aad
inc
dec
add
mov
add
xor
into
mov
in
sbb
xchg
mov
cmp
orb
dec
repz
fidivrl
xchg
push
or
in
or
shrl
fistpl
dec
aam
in
arpl
movl
cmp
in
dec
xchg
push
mov
cmp
ja
and
push
div
mov
jnp
stos
sahf
gs
leave
sbb
arpl
add
stc
mov
mov
and
pop
loop
jns
pop
ficomps
lahf
xchg
jle
les
xor
sarb
scas
xor
fmull
xor
aaa
adc
jle
lahf
mov
lods
jg
push
and
imulb
jb
les
pop
mov
pop
popf
sub
inc
nop
in
or
in
pushf
cwtl
adc
xchg
mov
add
out
mov
mov
push
sbb
cmp
and
mov
xchg
lret
xchg
adc
adc
or
mov
leave
sub
push
sti
mov
pop
loope
sti
push
cmp
jge
cmp
cmp
pop
fidivl
adc
dec
sbb
jb
sbb
fcompl
push
imul
mov
rolb
jg
leave
xchg
jne
mov
rcrl
popf
jbe
add
mov
rcrl
add
cld
and
out
sbb
in
lods
add
or
lds
repz
les
sub
mov
mov
lods
push
sub
mov
cmpl
outsl
adc
mov
mov
shlb
push
clc
adc
lret
jne
add
cmpsb
pop
mov
mov
int
adc
lds
loope
std
xor
pop
sub
nop
popa
and
movsb
ljmp
orb
int
stos
cmp
pusha
aam
lock
adc
mov
jne
inc
or
pusha
das
inc
cwtl
inc
fsubr
nop
fwait
dec
push
lds
mov
enter
dec
xor
leave
pop
pop
adc
cmp
in
loop
lret
pop
lds
test
jo
sbb
xlat
pushf
lods
push
je
mov
xor
ljmp
loop
jbe,pn
scas
dec
scas
jbe
cmc
fisttpll
pop
rcrl
es
lds
idiv
rcr
js
push
dec
cltd
imul
sbb
xor
lcall
stos
lds
mov
cmp
fcomps
icebp
daa
movsb
dec
push
imul
stos
or
mov
xor
push
out
sbb
push
lods
repnz
jno
in
cld
jmp
push
mov
inc
xor
push
call
out
push
push
and
int
cwtl
fs
mov
es
and
repnz
push
leave
iret
gs
dec
sbbb
cmp
cltd
xor
pusha
pusha
push
jb
push
or
lahf
add
fwait
pop
adc
pop
sbb
pop
cmp
rolb
in
push
jbe
add
mov
push
inc
inc
and
loope
dec
fucomi
sbb
mov
popf
and
stc
push
xchg
hlt
ret
cmc
loop
rorb
movb
xchg
in
int
adc
ljmp
push
int
sub
test
repz
cmp
mov
and
jge
xor
shll
add
js
call
sbbl
or
scas
stos
dec
push
dec
add
fldl
jg
cmp
ja
addr16
js
sub
push
add
je
sub
xor
stos
pop
leave
cmc
adc
sbb
mov
cmpsl
lock
insl
leave
fisttpll
inc
fsubp
mov
cmpsl
popf
pop
lea
mov
pop
arpl
cwtl
nop
cmpsl
out
sbb
jnp
jmp
out
addr16
xchg
mov
stc
xchg
je
int
mov
outsl
pop
mov
dec
cmp
dec
mov
adc
adc
loop
mov
bound
xchg
dec
push
mov
and
and
jge
xor
cmc
imul
mov
pop
dec
lock
push
cwtl
cs
and
add
cmpl
cmp
loope
into
and
mov
mov
les
aas
lock
adc
addl
out
mov
lods
inc
and
test
fbstp
out
cld
lods
push
inc
mov
sbb
stos
movsl
xchg
pop
imul
sti
aas
and
out
fdivrl
pop
sarl
std
out
mov
into
loope
leave
into
jns
push
sbb
out
and
scas
add
fnstenv
mov
stos
inc
adc
cld
mov
pop
inc
xor
dec
out
jbe
jb
dec
add
xor
aas
loope
fstl
hlt
sbb
mov
xchg
xor
sub
dec
push
aas
jl
dec
inc
cs
test
xor
mov
cmpsb
inc
notl
and
ja
cmpsb
mov
or
notl
cmp
mov
outsb
mov
or
pusha
jae
cwtl
cmp
es
mov
mov
mov
push
js
xor
lcall
gs
bound
inc
out
mov
ret
push
pop
sbb
out
lods
aaa
jecxz
jle
movsl
movsl
add
imulb
std
xchg
push
daa
cmp
repz
push
push
ds
arpl
add
pop
in
std
repz
stc
jo
mov
nop
xor
mov
pop
mov
push
je
jle
out
sub
push
mov
sub
stc
pop
cld
in
sub
or
inc
gs
scas
movsl
lea
sub
xchg
pusha
mov
ss
in
or
add
inc
and
subl
mov
repnz
aaa
or
or
lcall
lret
in
jmp
outsl
or
push
shlb
adc
bound
gs
xchg
fs
jp
ret
adc
inc
movsl
std
add
xor
lahf
imul
xchg
psrlw
inc
and
jecxz
testb
fisttps
js
push
icebp
pop
es
jecxz
pusha
or
push
test
xchg
fcmovb
dec
adc
inc
out
pop
js
mov
test
adc
das
enter
add
xchg
sub
das
or
xchg
sbb
push
sahf
jecxz
push
ret
dec
adc
jmp
mov
arpl
sbb
test
dec
or
xchg
pop
xchg
sbb
aaa
data16
cmp
and
shl
mov
pushf
push
jo
int3
rolb
ljmp
push
ss
dec
add
andb
gs
or
pop
xchg
mov
sbb
popa
test
clc
cmpsl
mov
jg
mov
dec
movsl
mov
loope
fwait
mov
xchg
mov
js
stc
popf
fidivrs
cld
movsb
jp
mov
rcll
in
mov
xchg
mov
pop
cmpsl
fadds
icebp
push
sbb
mov
inc
pop
ds
or
add
gs
push
lret
cwtl
mov
cli
xor
mov
inc
cwtl
mov
test
pusha
dec
lret
js
mov
scas
repz
inc
mov
inc
sti
jnp
mov
dec
cmp
outsl
and
shlb
adc
int
mov
cli
test
and
lods
add
mov
xchg
mov
addr16
outsl
sub
jne
faddl
ffree
es
and
test
cmp
adc
fwait
push
outsl
fadds
insb
push
pop
stc
mov
jecxz
imul
adc
adc
pop
das
cmc
cwtl
movsl
aaa
cld
push
lea
or
adc
dec
xor
sub
insb
push
adc
shlb
popa
lds
stos
push
dec
int3
sahf
jle
mov
xchg
and
iret
mov
cmc
push
xchg
andb
ljmp
sar
mov
or
ret
sbb
inc
adc
daa
xchg
mov
cmc
adc
mov
std
add
add
inc
cmp
xlat
aam
add
jno
pop
scas
jmp
inc
bound
jge
mov
add
outsb
push
in
mov
and
lods
add
adc
imul
push
inc
ss
cmp
push
pop
adc
rcr
aaa
push
xchg
mov
pop
or
mov
loopne
testb
jae
repnz
fisubl
add
pop
leave
out
jno
and
push
stos
jmp
mov
aad
fimull
fstps
out
xchg
sub
aas
repz
std
ret
insb
scas
mov
aas
cmp
dec
adc
push
push
push
cmp
ret
cmp
js
imul
sarb
mov
aas
lds
xchg
pop
sbb
mov
lcall
lock
cmp
or
xchg
int
inc
icebp
jle
dec
movsb
jge
aam
pushf
cmp
mov
std
mov
data16
xor
xchg
loopne
stos
jl
cmp
mov
subb
xor
das
jne
hlt
dec
int
push
cmp
inc
push
push
jno
sub
push
roll
mov
aaa
jo
dec
mov
mov
add
idivb
sbb
aas
dec
cpuid
mov
sub
sahf
mov
ret
fisttpl
pushf
cld
and
fldenv
push
xchg
or
push
imul
push
sti
fsubl
addps
cs
in
jp
sub
aam
clc
and
cmp
inc
insl
xlat
nop
xor
mov
jbe
push
ja
push
out
push
insl
inc
cmp
lods
popf
loope
mov
data16
int3
popa
mov
jbe
dec
xchg
lock
add
popf
lcall
adc
push
andb
push
dec
imul
pop
movsl
add
xchg
add
push
xchg
push
movsb
push
insb
sub
ret
imull
repz
out
push
pop
jo
jne
push
fbld
sub
or
push
cs
or
cmpsb
hlt
cltd
mov
push
push
daa
pop
push
add
xor
lcall
xchg
adc
out
push
lock
fcmovnu
shlb
push
ret
popa
mov
popf
inc
sub
jbe
mov
cs
mov
jp
mov
ret
jp
dec
mov
mov
popf
fnstcw
adcb
mov
sub
adc
jae
xchg
lock
loope
jnp
data16
xchg
push
out
mov
mov
xchg
push
and
add
xor
mov
pushf
mov
lods
dec
pop
push
mov
mov
mov
sub
loopne
divb
shl
incb
inc
push
xorb
sbb
fistpll
add
fs
scas
loop
mov
icebp
mov
mov
es
or
pop
cmpsb
mov
push
pop
sbb
gs
lcall
rclb
mov
pop
int3
call
cs
lahf
pop
mov
ja
jmp
out
stos
outsl
mov
sbb
scas
add
xchg
pop
int3
xchg
or
aad
fbstp
mov
jle
repnz
testb
fidivl
pop
ud1
ss
shrb
xchg
insl
mov
cmc
cmp
aaa
mov
add
push
mov
jmp
aas
test
into
loopne
test
rcrw
outsb
lods
test
hlt
dec
add
jmp
popf
pop
outsl
arpl
xchg
pusha
call
inc
cwtl
pop
xchg
adc
mov
mov
push
or
mov
mov
add
mov
sub
and
cvtpi2ps
aam
out
test
outsl
inc
xchg
popf
cmp
cmc
mov
rcll
fnstenv
xorb
cmpsb
imul
pusha
subl
or
je
test
adc
xchg
imul
mov
in
jl
addl
aad
xlat
popf
xchg
daa
imul
pop
in
into
xchg
pop
jg
jp
fistpll
fs
and
push
lea
pop
std
pop
out
sub
shll
test
push
cltd
sti
add
adc
dec
inc
xchg
andb
xor
leave
push
movsl
cmpsl
cmp
dec
sub
mov
orb
mov
cmp
jmp
imul
ljmp
or
push
std
dec
dec
mov
je
out
inc
pop
imul
mov
mov
cli
sti
ret
fs
inc
sub
shr
sub
mov
push
mov
cmp
pusha
icebp
inc
lock
in
and
fwait
int
std
decl
add
jecxz
sbb
dec
push
add
dec
cmpb
sub
dec
pop
movsb
addr16
rcrl
push
incl
adcl
mov
clc
in
push
lods
sub
out
sub
fisubrl
pusha
mov
inc
and
pop
rorl
jp
pop
gs
into
outsb
jecxz
dec
test
shrl
repz
mov
shlb
sti
and
rcrb
repnz
loope
or
rol
mov
div
adc
xor
mov
xor
fwait
jne
jmp
daa
xor
dec
mov
push
mov
cmp
adc
pop
push
daa
xlat
dec
loop
sbbl
test
shrb
push
mov
dec
xor
sbb
leave
cmp
inc
push
mov
xchg
call
jb
bnd
cli
loope
lcall
fimuls
dec
inc
shrl
fcoml
sub
incb
adcl
add
sbb
mov
mov
xchg
js
add
lahf
leave
cmp
scas
mov
and
in
and
xchg
mov
mov
inc
dec
xor
mov
and
shrl
mov
les
loop
mov
jb
ret
fcompl
test
iret
repnz
hlt
or
sbb
std
in
aam
inc
loopne
ljmp
rcr
mov
sub
loope
repnz
icebp
shrl
dec
pusha
push
xchg
test
xchg
jb
js
aaa
sub
stos
jbe
push
mov
mov
imul
mov
in
add
popf
negb
aad
lea
daa
hlt
popa
mov
fwait
pop
cmp
jno
jmp
jmp
mull
les
pop
scas
add
inc
stos
add
xor
pop
push
mov
scas
andl
push
dec
sti
fistpll
into
je
pushl
adc
push
pushf
mov
xor
loope
rcrl
inc
fisubrl
mull
scas
cmp
inc
push
add
mov
and
popl
lods
stos
adc
jbe
dec
lahf
and
pop
daa
and
dec
sar
cmp
add
test
or
jnp
pusha
test
lret
mov
mov
int3
pop
rcrb
pusha
pusha
sbb
inc
jmp
xor
xchg
cltd
out
hlt
je
jns
jp
adc
cvtps2pi
push
mov
hlt
out
jle
mov
imul
daa
mov
xor
mov
shlb
xor
ss
jge
loopne
sbb
push
es
bound
movsb
mov
out
clc
jae
hlt
mov
xor
movsb
xchg
repnz
pop
aaa
ret
pushf
push
mov
or
pop
imul
or
cmp
adc
adc
aad
scas
jle
outsl
fsubs
mov
pop
push
scas
fistl
das
xor
dec
sbb
imul
cltd
fmuls
enter
mov
push
cwtl
xchg
mov
push
mov
in
lods
cli
lods
dec
sti
loopne
mov
add
sub
adc
jecxz
cmp
pop
jno
cmp
jne
out
jmp
xor
pop
cltd
sbb
lret
cmp
sbb
jp
leave
cmp
xchg
and
addr16
mov
sahf
insb
mov
mov
lods
cltd
sub
sub
mov
mov
lea
loope
mov
les
out
mov
jno
int
mov
in
xor
test
push
bound
dec
int
cltd
addr16
mov
test
lods
into
dec
sarb
pop
sub
dec
in
mov
stos
sbb
aad
fidivrs
mov
faddl
fisubl
fucomp
or
add
xchg
push
xchg
pop
adc
and
loopne
ljmp
cmpl
sbb
jo
sbb
es
sbb
repz
data16
stc
pop
es
and
mov
ja
pop
mov
arpl
mov
imul
mov
mov
inc
jmp
out
cli
push
fs
ja
jo
cs
out
repz
add
imul
lret
fsub
cmc
shrl
push
mov
cmp
pop
fwait
xchg
add
call
psubq
mov
jmp
pop
negb
mov
loop
mov
out
mov
sbb
xchg
into
dec
mov
push
sbb
xlat
push
mov
dec
aas
lcall
sub
adc
pop
jnp
and
stc
mov
xor
test
test
adc
or
xchg
mov
pushf
push
push
loope
mov
mov
adc
loopne
popf
xchg
push
mov
test
pop
sub
movl
fstpl
cmpb
jl
pushfw
subb
cltd
and
sub
xchg
mov
jmp
stc
add
adc
jmp
in
xchg
xor
cmp
loopne
pushf
push
mov
mov
and
sbb
divb
test
xchg
mov
cwtl
arpl
jp
sub
pop
adc
icebp
mov
in
sub
pop
cmp
mov
mov
sbb
int
loop
mov
mov
xor
dec
jmp
jle
sbb
je
stos
test
push
bnd
cltd
pop
pop
mov
mov
inc
aad
mov
fdivrl
xchg
mov
lea
ficoml
push
mov
pop
mov
jle
std
ss
loopne
mov
fcomps
adc
adc
sbb
enter
push
dec
push
lods
push
stc
lret
adc
xchg
mov
scas
sub
cli
pop
or
shll
ss
call
call
mov
stc
jbe
adc
cmp
or
cltd
adc
pop
hlt
xorb
jge
xchg
in
jne
cli
out
test
or
mov
repnz
adc
inc
scas
cmp
fists
dec
mov
js
mov
or
inc
xchg
out
mov
pop
notl
movsl
lahf
add
fisubl
call
sub
mov
fxch
daa
sub
push
xchg
jmp
xchg
xchg
sbb
sub
mov
lret
vxorpd
pop
inc
jmp
outsb
mov
xchg
xor
jo
popa
aas
jp
or
sbb
mov
add
or
xorb
stos
outsl
dec
dec
sub
mov
in
inc
jecxz
sub
scas
test
int
repz
pop
inc
fstl
adc
dec
mov
push
mov
inc
jp
mov
es
jb
jg
scas
mov
int3
mov
cmp
fidivrl
jno
shrb
and
cmpsb
or
stos
out
insb
and
mov
pusha
insb
jmp
jbe
add
add
adc
cmp
pop
inc
clc
mov
jbe
shl
dec
cmp
or
dec
cmpsb
loop
out
dec
dec
fists
inc
mov
cmp
fcomps
scas
pop
jge
mov
testl
cs
or
outsb
addb
mov
fwait
jge
shlb
lock
bound
jg
and
js
mull
mov
pop
sarl
inc
insl
orb
mov
rcrb
sbb
fisttpll
es
movb
repz
fiadds
pop
jmp
idivb
mov
jmp
int3
jne
enter
les
push
fbld
call
fistl
setp
xchg
shlb
xor
aam
lea
adc
xchg
add
jg
or
mov
insb
enter
icebp
lea
dec
and
das
in
movl
into
adc
sti
adcb
pop
ss
lret
clc
inc
ds
icebp
rcll
jmp
mov
call
jb
jo
mov
or
aam
ja
mov
fdivl
mov
stos
xor
call
repnz
idivl
sub
jne
test
test
mov
push
mov
sbb
pop
adc
loop
int
enter
insl
call
mov
dec
jg
dec
mov
faddl
loop
lock
sarl
ljmp
pushf
jecxz
imul
xor
add
cwtl
and
mov
sbb
push
aam
adc
ret
movsl
es
pop
xor
mov
test
out
push
sbb
jnp
mov
xor
or
mov
xchg
pop
insb
cmpsb
repnz
in
aaa
dec
arpl
dec
scas
lcall
mov
out
and
mov
cmp
xchg
insl
popa
shlb
dec
sbb
rclb
out
ret
xchg
imul
stos
mov
dec
pusha
inc
xorl
jge
adc
in
or
addl
inc
xor
outsl
stc
jnp
sbb
or
add
mov
and
icebp
outsl
xchg
in
jp
cmp
cltd
or
add
mov
jl
int3
mov
or
addr16
cmc
mov
lds
pop
xor
mov
mov
jg
aad
movsl
ss
fldenvs
sbb
lds
pop
mov
sbb
dec
shl
out
stos
mov
test
jo
push
adc
shll
xchg
rclb
mov
xchg
fimuls
stos
jne
imul
cmp
lahf
xchg
cmpsb
mov
imul
popf
data16
add
js
or
imul
jle
je
and
jecxz
pop
dec
and
repz
in
out
mov
pop
cmp
push
inc
xlat
lret
mov
cmp
mov
in
out
mov
stos
loop
pop
pop
scas
jg
fldcw
mov
cwtl
test
push
sub
xchg
push
pop
fwait
pop
jmp
mov
aad
adc
xor
ljmp
mov
xchg
push
aaa
ja
movsl
popa
fs
sarb
push
mov
sbb
insl
ret
out
mov
das
lods
popf
fldl
mov
inc
dec
pusha
stos
dec
push
pop
xor
hlt
rolb
sub
jl
jecxz
inc
cmpsb
and
in
pop
sbb
insl
push
lcall
pop
or
pop
je
push
xchg
scas
mov
cmpl
dec
mov
aad
inc
data16
sbb
push
and
mov
dec
ja
xchg
enter
es
les
in
xchg
and
xchg
lcall
dec
cs
inc
in
test
lods
cld
mov
out
sbb
add
jne
dec
sbbl
ror
adc
mov
mov
jmp
or
and
cmpsb
jbe
bound
outsl
imul
jp
push
sub
in
xchg
pop
inc
and
xchg
mov
stc
fimuls
cwtl
ljmp
cs
fsubrp
cmp
in
mov
mov
push
addb
shlb
cmpsl
add
xor
xchg
outsb
pop
dec
cmp
push
mov
lea
iret
add
fsubp
mov
push
mov
pop
mov
mov
rcll
sub
mov
nop
stos
test
mov
mov
sub
xchg
cmc
les
cmp
mov
jle
jmp
mov
push
iret
rcr
cmpsl
sub
dec
and
jl
dec
test
fcoml
cmp
repnz
frstor
out
add
divb
jae
mov
iret
push
stc
pop
aas
cmp
rcll
lods
pop
jbe
jbe
xor
add
movsb
into
push
test
sub
add
cli
add
pop
les
xchg
fs
sbb
imul
lea
jns
out
loopne
mov
pop
ficoml
scas
sbb
out
or
dec
mov
lcall
xchg
mov
out
pop
sahf
fwait
outsl
dec
ss
xor
mov
popf
in
push
and
inc
and
mov
push
shll
jb
leave
loop
daa
sub
push
in
repz
lret
push
pop
ret
and
inc
daa
mov
adc
lods
inc
lcall
xchg
clc
and
inc
add
sbb
outsb
mov
rorl
mov
cmpsl
mov
add
and
mov
sbb
iret
fucomp
lock
imul
jae
aas
and
mov
in
or
js
xchg
jmp
push
or
mov
lds
stos
jo
pop
cli
sub
repz
adcl
inc
mov
clc
sbb
jmp
jne
nop
loop
sub
sub
cmc
jle
mov
rorl
mov
in
sbb
dec
adc
cmpsb
pusha
cmp
rcpps
dec
daa
xlat
xchg
pop
xchg
jmp
mov
cmp
in
jge
mov
cwtl
cmp
jb
mov
cmp
push
xchg
dec
sub
lds
inc
pop
out
jge
cmpsl
cmp
daa
xor
mov
mov
lea
pushf
cli
sahf
mov
ss
or
mov
inc
adc
fdivl
js
mov
ficoms
xchg
in
ds
xor
push
sbb
mov
lcall
aad
inc
lods
dec
mov
nop
je
ljmp
jns
fmuls
add
mov
push
and
cmpsb
ss
jns
cmp
push
cmpsl
pop
dec
cmp
dec
add
imul
pop
lods
push
push
iret
outsb
sbb
mov
push
xchg
and
jle
fistl
test
xor
mov
jbe
dec
sub
push
cmpsl
shll
sub
or
shlb
lcall
xchg
push
into
enter
repz
adc
mov
pop
mov
sub
push
in
dec
mov
adc
ret
fildll
or
pop
movsb
push
adc
mov
hlt
add
mov
mov
rclb
cli
xchg
in
xchg
out
jmp
inc
pop
fs
call
lret
insb
lods
addr16
inc
xlat
mov
loop
xlat
sub
inc
lds
repnz
stc
xchg
stc
or
fidivs
inc
push
sbb
cmpsl
leave
inc
sub
pushf
xlat
cmpsl
mov
lds
pusha
adc
jge
fsubl
inc
add
cmpsb
cmc
adc
dec
push
popa
add
dec
repnz
mov
cltd
xor
fs
stos
stos
lahf
xchg
jg
pop
pop
sub
cmp
xchg
mov
out
and
int
dec
int3
flds
std
jmp
data16
xchg
les
sbbl
adc
rdmsr
mulb
lock
add
adc
shrl
rorb
ss
cmp
sub
xchg
xor
sbb
outsl
pop
insb
inc
stos
daa
lods
loop
enter
lcall
mov
ja
push
fs
aaa
sahf
push
imul
je
shll
fstpt
sub
adc
out
lahf
mov
cmp
push
jne
into
sub
adc
pop
sub
es
aam
adc
add
jmp
push
leave
incb
lods
push
notb
xchg
sti
inc
pop
push
cmpsl
clc
and
dec
xchg
cmp
lahf
sbb
lcall
jge
add
icebp
inc
sbb
decl
xchg
push
in
xchg
or
xchg
push
and
jns
aam
aam
popa
add
in
sbb
jecxz
add
sub
lcall
ficoml
lret
mov
mov
mov
sbb
movswl
je
inc
in
xchg
test
push
push
lahf
stos
loop
jo
mov
xchg
clc
sahf
cld
mov
add
jmp
lods
insl
aas
mov
add
mov
mov
cld
xlat
and
dec
nop
sub
or
mov
xchg
imul
sub
or
and
pop
sub
pop
je
pop
adc
lods
fwait
cld
and
outsl
push
andb
arpl
and
test
or
mov
pop
aas
xor
dec
xchg
push
lret
pop
jp
mov
shlb
int3
jg
push
xor
push
jae
push
sbb
mov
in
and
or
clc
ss
cmpsl
adc
aad
dec
out
movsb
mov
xor
idiv
xchg
fwait
mov
addl
cmpl
xor
sbb
rcll
xchg
lret
mov
test
xchg
hlt
cmp
lcall
adc
pusha
or
into
mov
push
cmp
fbld
in
movl
add
and
dec
pop
outsl
dec
xchg
ffreep
fsubrl
or
mov
out
sbbb
ss
mul
cmp
rolb
inc
iret
in
and
jg
xchg
push
nop
add
jb
addr16
mov
adc
adc
pushl
in
push
xorl
sbbl
lods
push
push
lret
xor
mov
sub
sub
js
aad
push
scas
cmp
mov
faddl
addl
mov
cwtl
es
mov
add
add
enter
sbb
adc
nop
inc
inc
pop
outsl
enter
sub
lahf
mov
imul
jb
push
int
cmp
or
xor
movsb
cmp
inc
ret
inc
pop
loopne
and
jl
mov
lcall
les
adc
mov
cmpsl
xchg
mov
mov
fwait
xor
cmpsl
ret
xchg
push
xchg
lret
add
out
cld
jbe
dec
flds
push
mov
cmp
adc
fnstenv
test
cmpsb
in
sub
push
pop
dec
lahf
push
call
popa
mov
imul
nop
jmp
rclb
repz
sahf
sarl
in
jns
faddp
stos
fwait
pop
pop
mov
lock
cmp
sti
or
cmp
lret
mov
pop
sub
inc
inc
adc
imul
andb
and
out
cwtl
jg
xor
jl
stos
stos
cmp
or
aam
fisttpl
push
or
in
addr16
lea
popf
test
dec
mov
xor
add
repnz
jbe
pop
iret
or
pop
mov
sub
out
andb
mov
ja
push
push
mov
test
cli
or
lods
lret
movl
bound
xchg
icebp
shlb
inc
push
sub
scas
xchg
ja
jle
outsl
int3
and
or
inc
clc
adc
into
ds
pop
cmc
test
nop
repz
cmpsb
inc
mov
test
mov
int3
icebp
or
popl
mov
add
in
rol
test
arpl
jno
test
clc
jno
daa
mov
loopne
out
xchg
out
mov
or
pop
adc
mov
mov
stc
movsl
mov
js
mov
repnz
sub
int
push
mov
mov
xlat
lock
push
daa
or
scas
xchg
test
dec
hlt
push
cwtl
push
insb
mov
dec
push
sbb
cs
xchg
popf
insb
mov
std
rcll
fs
in
sub
mov
sti
and
shlb
cmp
lret
mov
mov
push
mov
sarb
mov
imul
shlb
idiv
lock
xor
cmp
dec
rcrl
add
addr16
pop
sti
hlt
sbb
pop
xchg
and
mov
pop
or
ljmp
into
xor
push
adc
push
rolb
lods
jno
push
mov
fistl
pushf
xor
mov
mov
into
fs
pushf
enter
fisubs
or
cs
xor
pushf
fdivr
outsl
outsb
cli
mov
pop
fcmovnu
jecxz
pop
fwait
js
inc
push
cmp
clc
push
jmp
aam
push
pop
enter
mov
mov
enter
jnp
addr16
popa
xchg
addb
faddl
sub
jb
jne
sbb
imul
sbb
mov
mov
fwait
fwait
stos
lret
in
mov
addl
scas
out
mov
movsb
sub
or
adc
shl
movsl
push
flds
mov
lods
mov
aaa
loope
mov
ss
lds
out
ror
out
aas
pop
ret
call
xlat
gs
out
mov
movsb
push
xlat
mov
cmp
xorb
jb
addr16
roll
inc
dec
mov
push
leave
xchg
xchg
xchg
pop
mov
jp
orb
test
mov
icebp
sbb
jl
aad
fwait
insl
or
xor
lods
pushf
ss
mov
sub
xlat
out
or
loop
sarb
ret
jg
loope,pt
dec
mov
fisubl
cli
jns
aaa
xor
cmpb
popf
ds
fs
or
add
repz
adc
push
mov
mov
out
aam
inc
loopne
ret
mov
out
subl
mov
and
dec
incl
imul
and
shr
add
in
out
ficoms
nop
jmp
js
adc
jb
mov
push
cmp
jle
pop
outsl
sahf
addr16
vunpcklps
jo
mov
push
pop
mov
data16
xchg
pop
sub
call
mov
cltd
xchg
lods
xorl
lock
aad
fnop
ds
pusha
or
add
insb
lods
addr16
pop
icebp
std
cmc
mov
inc
rorb
sub
gs
mov
ja
and
mov
pop
lods
repnz
scas
dec
sub
cmp
sbb
jb
fidivs
insb
adc
in
mov
inc
cli
lret
mov
jp
push
outsb
sbb
xlat
gs
dec
jmp
jl
dec
xor
dec
sahf
lea
rcrl
incl
sahf
addb
imul
jbe
inc
idivb
and
cmp
dec
mov
ret
hlt
jbe
mov
xlat
cltd
imul
mov
jle
lahf
adc
rorl
test
cmpsl
jbe
cmp
shl
adc
mov
add
add
sub
int3
and
sub
pop
fisubrs
pop
and
mov
stos
les
adc
xor
daa
je
jns
enter
jecxz
fwait
add
cmp
addb
and
ret
test
popf
mov
data16
fistps
cs
scas
or
sbb
xchg
jb
std
test
out
ret
inc
push
lahf
inc
je
repz
mov
icebp
jbe
inc
inc
in
cmpsl
dec
and
pop
stos
test
sub
add
imul
jae
sbb
xor
ds
add
aad
mov
stos
mov
push
mov
or
cltd
adc
into
pop
arpl
ja
adc
mov
cmp
xorl
dec
xor
loope
push
mov
stos
fldcw
ds
sbb
adc
cs
mov
or
dec
loope
dec
loopne
push
test
imul
mov
out
add
ret
inc
add
cmp
test
pusha
fistl
dec
addr16
xchg
mov
test
jo
int3
xcrypt-ctr
cmpsl
push
mov
gs
sub
es
jne
repz
out
popf
jg
lret
jbe
aaa
test
std
adc
mov
negl
dec
cltd
xchg
std
push
test
lds
pop
out
mov
xor
push
mov
out
test
add
sub
adc
pop
xchg
data16
cmpsb
cli
lret
in
andb
imul
push
loope
dec
jb
mov
dec
fdivl
aam
icebp
mov
outsb
sbb
aaa
inc
and
push
push
mov
add
and
in
mov
push
mov
test
repz
je
jle
add
lds
pop
jne
nop
scas
push
and
jb
lcall
mov
mov
das
push
sti
and
sub
cmp
adc
into
cwtl
and
out
mov
add
div
outsl
inc
xchg
mov
les
add
addb
mov
jns
pop
push
fisubs
clc
loope
fisubl
sub
fmul
fdivs
mov
inc
xchg
push
sar
jne
lods
mov
adc
jne
inc
ret
mov
jle
loop
call
xchg
cltd
add
bound
cmc
sahf
xchg
loop
fsubrl
jle
add
shll
aam
loopne
imul
or
dec
lods
js
push
movsb
lods
jno
movb
sbb
gs
fwait
lret
repnz
pop
pushl
andl
push
inc
in
test
push
and
stos
jb
imul
fwait
fwait
cmp
jo
sub
mov
scas
add
inc
pop
addb
dec
mov
sub
sbb
push
movsl
insl
js
int3
sub
mov
mov
movsl
nop
cmp
dec
mov
jg
rorb
cmp
mov
addb
xor
hlt
and
dec
push
stos
je
jg
xor
popa
add
ss
movsb
adc
push
push
int
inc
xor
scas
mov
cmpsb
cwtl
pop
movsl
mov
in
gs
testl
dec
or
cmp
lret
in
addr16
lea
push
push
jbe
dec
shl
sub
pushf
out
loop
add
in
cltd
jmp
cmpsb
push
in
loop
popa
mov
es
push
cmp
out
mov
push
cmc
popa
cltd
jb
gs
enter
adc
fwait
stos
call
mov
sbb
stos
sbb
in
cmp
iret
push
jne
push
adc
shlb
std
int
add
nop
bound
push
or
lods
mov
jmp
xchg
inc
loopne
push
mov
or
jl
cld
pusha
mov
cwtl
cmp
sbb
xor
shrl
aam
sub
dec
add
xor
xor
cmp
mov
pushf
mov
inc
adc
inc
jne
ret
adc
cltd
outsl
mov
and
xchg
xchg
sti
jo
rolb
aas
sarl
popa
gs
sar
pusha
add
cmc
or
or
mov
enter
aad
in
dec
xor
cltd
cmp
popa
mov
sti
sbb
shrb
data16
rorl
and
mov
xchg
mov
push
jp
in
sarb
adc
mov
ja
js
mov
xor
or
repnz
mov
lret
cmpsl
mov
in
inc
in
fnstcw
cmp
std
pop
inc
pop
movsb
sub
repnz
std
push
test
jne
push
mov
adc
sub
pop
sbb
xor
push
or
mov
adc
pop
andb
aam
mov
mov
cmp
jg
mov
jmp
dec
cmpsb
jge
or
xchg
fisttps
cli
push
push
push
aad
subl
pop
mov
test
lret
enter
lret
fimuls
and
or
xchg
xchg
mov
inc
fadds
jne
repnz
les
fisubrs
int
jmp
and
roll
or
pop
cs
mov
sarb
test
in
sub
dec
add
pop
or
mov
and
jle
push
add
and
les
andb
mov
xchg
dec
jmp
popl
out
sbb
jge
push
outsl
cmpsb
jl
inc
and
xor
inc
aad
mov
out
and
aad
aam
dec
mulb
jae
xlat
fcmovb
test
dec
sahf
fstl
mov
or
out
outsb
pop
pop
roll
scas
mov
xlat
mov
mov
out
stos
cmp
inc
mov
loop
push
inc
mov
lahf
in
push
addr16
mov
es
mov
adc
xor
xchg
fdivs
cmp
jg
pop
les
cld
xchg
ret
fimull
xchg
dec
adc
xchg
cli
div
movsl
lahf
mov
imul
mov
mov
sub
popa
cmp
sbb
divb
dec
jb
jl
add
adc
mov
jg
sbb
xor
movsl
adc
lret
insl
shl
adc
loopne
inc
gs
std
fstl
push
or
sbbb
cwtl
int3
or
popa
rcrl
mov
insb
pop
push
shlb
and
out
cmpsl
and
pop
mov
push
data16
cmp
cmpsl
inc
pusha
xor
xchg
inc
xor
in
stos
pop
loop
je
movsl
lods
lret
fs
or
in
jg
pop
mov
sti
dec
in
cmp
cmpsb
push
mov
and
aaa
mov
scas
sbb
outsl
hlt
pop
loope
rcr
mov
sub
les
sub
lret
dec
enter
mov
lods
cmpsl
inc
jge
pop
inc
push
mov
out
lea
and
pop
fisubl
in
cld
inc
jo
test
push
pop
lret
mov
out
jge
std
sbb
int3
outsb
jb
imul
repz
adc
xor
mov
data16
jp
popf
and
mov
fs
lods
jb
xchg
call
lock
dec
sbb
loope
mov
lods
cmp
fildl
je
leave
ss
in
mov
mov
add
jle
das
cli
xor
nop
jmp
iret
mov
sbb
shlb
lds
pop
fisubl
jle
or
int3
cmp
mov
inc
test
sub
jge
xchg
or
jbe
cwtl
adc
test
jb
aas
xor
mov
jo
aas
dec
push
xchg
sub
divl
in
mov
in
mov
xor
les
jnp
sub
lahf
testl
pop
aad
cli
mov
jl
shrb
push
add
clc
in
mov
cmp
inc
lods
jecxz
or
loop
mov
cwtl
out
aam
mov
lea
fiaddl
aaa
or
fs
cmp
fidivrs
mov
pop
roll
loope
dec
pop
lret
rol
xor
cwtl
adc
ja
lea
scas
inc
fmul
add
into
hlt
pop
inc
or
ljmp
les
enter
fmull
les
fs
sbbl
fcoms
outsb
jg
mov
pop
insb
xor
bound
das
jmp
int
das
cmpb
rcl
push
or
jg
int
ljmp
inc
popa
add
shll
xchg
outsl
dec
es
xchg
push
mov
insl
mov
jb
sbb
jo
xor
leave
dec
jnp
and
pop
sub
push
dec
dec
mov
das
stos
out
test
mov
jb
adc
cmc
mov
push
sbb
icebp
mov
sub
hlt
pop
scas
test
test
lret
xchg
and
push
pop
inc
inc
addl
scas
cmc
ljmp
adc
push
shlb
repz
pusha
push
xorl
jmp
shlb
and
popa
lret
sahf
and
pop
adc
jns,pn
adc
test
scas
xchg
nopl
push
sbb
mov
rcrb
jmp
xchg
pop
clc
mov
outsl
xchg
ret
adc
mov
aad
add
pop
pop
stc
mov
popa
mov
or
jg
mov
imul
mov
sub
mov
or
je
push
pop
test
outsb
repnz
js
mov
mov
mov
movsb
int
out
cltd
enter
mov
xlat
xlat
xchg
lds
cmpsl
movsl
mov
pop
cmp
adc
daa
push
ds
aas
mov
dec
je
enter
es
in
sub
or
lock
pop
test
xchg
sub
mov
mov
push
sbbl
dec
add
insb
xchg
add
ds
test
repz
das
test
fists
inc
adc
lock
cwtl
pop
cmp
call
lret
lahf
mov
imulb
orb
arpl
imul
fnsave
inc
mov
insb
jb
je
cmc
pop
mov
adc
sub
jne
test
xchg
mov
sbb
push
lods
cmp
or
add
movsl
stc
inc
scas
pop
pop
inc
stos
add
sbb
in
mov
pop
mov
pop
mov
pop
sti
push
push
loop
add
xor
sbb
add
cmpsl
dec
mov
std
das
xchg
ss
dec
leave
pop
rorl
repnz
xchg
lcall
jl
lock
and
fsubrl
cmc
xor
lahf
pop
sahf
stos
push
cltd
arpl
xorl
jb
rcr
inc
lret
lahf
or
jmp
dec
jmp
in
sbb
and
lods
popf
xor
lahf
sbb
lds
push
add
repnz
pushf
cmp
pusha
jmp
stos
xorb
push
test
int
mov
push
sbb
in
mov
insl
daa
xor
xchg
mov
sti
stc
fcmovnu
ljmp
subl
inc
sbb
jb
scas
lea
enter
and
cmp
jns
mov
push
lods
aaa
xchg
loope
xor
aas
leave
es
inc
mov
add
aaa
je
je
pop
push
and
sub
js
push
pop
out
stc
push
sbb
pop
or
es
loope
mov
adc
or
pop
xchg
cmp
mov
dec
ret
xchg
cmp
mov
loope,pt
adc
inc
or
lods
xchg
sbb
xchg
loop
fisttps
sub
push
fwait
sti
scas
addr16
jns
lds
xchg
test
arpl
mov
jecxz
jecxz
mov
or
cmpsb
jmp
loope
fiadds
sahf
jmp
adc
in
ret
push
ss
outsb
cmp
pop
xor
add
and
mov
int
pop
adc
mov
lcall
pop
in
mov
or
es
aad
mov
xor
in
mov
mov
pop
movsb
xor
jno
add
roll
dec
add
fmull
inc
inc
ret
roll
and
push
shl
test
pusha
push
pop
jbe
test
jae
leave
ret
mov
and
inc
fisubrs
or
leave
jbe
jno
push
lea
mov
jge
fcoms
lahf
jne
enter
xlat
sub
bound
fcoml
push
push
es
xchg
ljmp
ds
mov
outsb
fs
mov
cmp
or
enter
inc
pop
add
xchg
mov
fisubs
lret
daa
jbe
mov
imul
mov
aam
pusha
test
sbb
xchg
push
or
xchg
mov
movsb
and
add
pop
movsb
sti
orl
inc
fs
rclb
and
ss
xchg
aas
jl
in
addr16
jle
mov
mov
add
ret
sbb
push
mov
in
mov
adc
dec
sub
fwait
mov
jae
lcall
cmp
pop
mov
push
cmp
mov
das
out
sub
xor
sub
ret
and
je
xchg
jo
inc
jmp
or
repz
aaa
push
jmp
ds
test
lahf
mov
sub
out
mov
and
mov
notl
inc
jae
sub
enter
aad
scas
jbe
sbb
ret
sbbb
loop
ss
ljmp
loopne
xchg
and
fs
call
dec
aad
pop
push
cmp
push
dec
in
inc
je
insb
adc
imul
sbb
mov
orl
enter
pop
mov
jae
lret
popa
cmpsb
inc
inc
nop
push
or
adc
xor
pop
jae
mov
pop
pop
rolb
into
fldenv
clc
jg
in
jne
xchg
inc
mov
std
sbb
inc
shlb
inc
push
sub
push
imul
les
movsl
mov
mov
call
pop
pop
push
pop
inc
insl
mov
jbe
mov
std
and
jbe
test
je
bswap
inc
xor
dec
pop
sbb
int
lgs
int
out
pop
bound
cmp
jns
mov
rclb
add
cmp
sub
xor
xorb
add
repz
push
sub
fdivrl
mov
stc
sbb
mov
dec
enter
pop
or
xchg
test
sub
inc
popa
sub
loop
xchg
mov
rolb
scas
push
mov
xchg
jp
jp
and
loop
iret
adc
push
and
xor
adc
pop
mov
sub
test
push
stos
mov
add
in
out
std
rorb
jecxz,pt
aam
add
addr16
mov
lock
out
lret
les
dec
and
ret
test
mov
pop
jns
xlat
fnstsw
outsl
jp
and
imul
aaa
dec
dec
pop
jae
addl
imul
sub
mov
mov
ret
mov
inc
out
flds
and
test
pusha
pop
adc
outsl
iret
int
jae
mov
push
dec
push
ja
or
gs
ret
ss
cmp
mov
inc
or
arpl
lds
xchg
loop
sti
clc
and
sahf
arpl
ret
jo
in
xor
int3
rcl
xor
mov
xor
scas
mov
jbe
std
pop
inc
sbb
ret
out
mov
dec
lods
cmpb
xor
mov
mov
mov
sub
push
push
and
mov
adc
cltd
push
inc
cmp
mov
cmc
shll
ljmp
enter
xor
mov
mov
mov
xor
xchg
dec
sub
sbbb
adc
mov
daa
pop
sarl
and
les
dec
add
sbb
in
push
fimull
pusha
push
lret
sbb
push
inc
dec
jle
rep
pop
rcrb
pop
xchg
or
sub
or
mov
iret
jmp
lods
pusha
lea
dec
lods
dec
popa
ret
outsl
int3
out
mov
mov
push
pushf
addl
sub
mov
add
das
add
lea
insb
mov
ljmp
mov
ret
test
pop
sti
mov
push
js
jb
je
ss
mov
mov
fisttpll
pop
xchg
fbstp
nop
mov
add
sbb
cmpsl
pop
fnsave
call
out
sub
xchg
sub
mov
fcmovnu
jl
lods
push
jns
adc
lea
into
or
mov
mov
pop
add
sar
fadd
mov
mov
push
cmpsb
xchg
in
push
pop
bound
push
lret
xor
ds
jg
xchg
mov
dec
cmp
jno
dec
cwtl
cli
cmp
loop
mov
inc
mov
add
in
popf
push
or
popa
push
mov
or
jmp
cli
cltd
cltd
imul
loop
dec
scas
push
cmpsl
mov
pushf
pop
add
neg
mov
mov
sub
mov
in
sub
xor
xchg
jecxz
bound
jmp
dec
in
call
pop
jp
test
pop
loopne
pushf
push
push
push
mov
add
test
sub
fwait
inc
adc
xchg
jnp
dec
pop
divl
push
stos
fcoml
stc
cmp
loopne
mov
call
pop
jo
sbb
mov
shrl
sbb
in
fnstcw
pop
mov
xchg
and
jnp
cmp
push
pop
stc
mov
ljmp
lods
push
ficoml
or
stc
or
js
cmpl
push
sbb
int3
cmp
into
lcall
add
jns
out
sbb
imul
mov
movsb
ja
add
rclb
inc
call
dec
xchg
popl
mov
shll
pop
arpl
pop
or
adc
cmp
fistl
xor
push
jne
xchg
xor
pop
inc
mov
push
dec
mov
lcall
inc
pop
sub
jmp
testl
daa
inc
push
xor
add
test
shll
pop
dec
mov
add
push
faddl
cld
mov
mull
pop
mov
adc
mov
nop
ret
add
jecxz
and
test
dec
sub
in
mov
adcb
xchg
pop
call
hlt
xlat
push
pushf
ret
test
xchg
test
es
adcl
jne
test
es
adc
lods
xchg
test
cld
fisubrl
adc
sti
cmp
inc
sub
movsl
fcoms
add
arpl
push
lods
fcmovu
cmp
xchg
push
out
dec
dec
outsl
jb
std
xchg
insl
ss
mov
aam
adc
imul
in
imul
nop
test
adc
sub
cmp
jl
gs
cmp
cmc
mov
inc
outsb
push
adc
mov
sbbb
or
pop
mov
sar
sub
jbe
movsb
mov
icebp
clc
pop
ss
sbb
xchg
xchg
mov
test
push
test
aaa
pusha
cmp
and
cs
lahf
xchg
aaa
xchg
mov
lea
out
lds
sub
add
iret
and
ds
jb
pushf
stc
imul
pusha
push
jbe
sbbl
sub
sub
jne
sub
ret
mov
arpl
int
jg
lock
ljmp
imul
xchg
pop
addl
stos
sbb
pop
sub
nop
aam
rclb
in
xor
fimull
lods
cmp
mov
xor
sub
loop
popl
sub
scas
inc
ja,pn
je
adc
fs
icebp
inc
outsb
mov
fsubl
sub
pushf
or
push
jbe
fadd
outsl
insl
frstor
sub
cwtl
sbb
jae
push
mov
cmp
loopne
repz
or
mov
es
push
sbb
adc
pop
mov
dec
jg
jl
adc
inc
add
jmp
pop
ds
popf
out
out
js
mov
push
js
ret
xchg
dec
jbe
les
stos
cmc
or
ret
pop
dec
dec
and
mov
push
loope
mov
in
rcll
movsl
or
pushf
jecxz
addr16
fimuls
mov
loop
sbb
jno
icebp
movsb
push
adc
jle
xor
adc
mov
movsb
in
lcall
xchg
cmpsb
push
std
mov
andl
cmc
sbb
cmp
pop
repnz
xor
xchg
mov
push
mov
ljmp
out
sbb
or
dec
sub
push
cwtl
jbe
pusha
pop
out
mov
gs
mov
jge
mov
leave
fcoml
fistpl
lea
push
loopne
sbb
popf
mov
call
leave
lods
mov
fwait
into
adcl
push
sub
sub
cmpsb
sub
sbb
push
mov
ljmp
jbe
jns
or
pop
xor
in
test
cltd
mov
add
push
jno
les
cmp
mov
push
nop
data16
mov
jmp
or
test
dec
cmpsb
outsl
push
cwtl
dec
hlt
and
imul
mov
lock
push
add
push
cmpb
fidivrl
xchg
adc
sbb
jb
mov
dec
lcall
test
xor
jns
cmp
inc
pop
mov
push
das
fnstenv
adc
out
dec
cmc
ficoms
aad
movsb
shl
leave
xchg
push
cmp
fs
sti
fstps
aad
ds
cwtl
lds
insl
test
arpl
ja
sbb
into
imul
jns
repnz
add
ret
test
push
mov
subb
or
repnz
rcrl
mov
adcb
push
ud1
sbb
lds
inc
dec
mov
aam
mov
scas
or
ds
push
inc
outsl
fisubrl
dec
and
jp
and
shrl
popf
cmp
and
stos
cwtl
lret
nop
sbb
je
mov
dec
testb
cmpsb
les
sub
aas
fcomps
movsb
and
add
mov
scas
adc
xchg
aad
cmpsl
xchg
loop
lods
ja
push
pop
jnp
faddl
jecxz
jl
mov
sbb
xchg
pop
lods
mov
xchg
pop
jns
jnp
repz
xor
int3
sbb
push
cli
sbb
mov
adc
nop
cmp
cmp
sti
or
imul
gs
mov
push
mov
lret
shlb
jle
fwait
mov
out
orb
mull
call
call
fsubr
dec
push
clc
aad
xlat
insl
mov
jae
sbb
xchg
bound
testl
dec
mov
sbb
or
or
loope
mov
mov
movsl
push
rorb
or
lods
pusha
arpl
pop
insb
mov
cmp
or
dec
xor
rol
leave
mov
in
in
jnp
sub
xor
mov
sub
sub
and
push
dec
push
insl
cmpb
push
add
or
dec
pop
adc
stos
jl
scas
xlat
add
mov
jne
pop
movsl
sbb
push
or
sbb
adc
in
jae
sub
popa
repz
stos
add
pop
pop
je
jge
jmp
loope
add
lret
adc
jmp
cmp
hlt
leave
cmp
sbb
mov
xor
gs
fistl
mov
lcall
adc
sbb
mov
adc
mov
mov
xchg
and
sahf
sbb
add
test
mov
xor
adc
out
xchg
mov
inc
sbb
lret
les
orb
hlt
add
mov
push
cmc
xchg
ja
inc
cld
sub
sub
push
push
sti
les
mov
jg
stc
out
or
mov
iret
insb
push
sub
sahf
cwtl
or
xor
jno
xor
out
cli
mov
les
cmp
mov
fcomi
jne
dec
ss
add
lret
lret
fiaddl
xchg
xchg
cltd
cmpsb
int3
les
pop
cmp
lds
sti
add
arpl
jno
das
xor
push
inc
test
je
fdivrs
fstpt
ja
stos
outsb
inc
jae
pop
pusha
jge
out
pusha
xchg
jo
push
stos
lea
xchg
test
cld
cltd
out
lea
icebp
dec
mov
pop
jle
clc
cmpsb
out
lret
dec
xor
stos
rcrl
inc
scas
sub
jmp
loope
mov
xor
mov
ljmp
jne
pop
jns
mov
jno
sbb
mov
test
mov
fwait
rorl
jmp
loopne
and
xlat
les
in
aaa
test
sub
mov
mov
push
or
xor
bound
clc
inc
xor
mov
sub
lcall
lock
add
push
in
pop
fisubrl
pop
or
shll
or
mov
lret
dec
add
adc
gs
out
mov
les
je
out
or
fucom
sub
mov
arpl
lods
mov
lods
pop
cmp
or
inc
xor
add
mov
lcall
movsl
nop
ret
arpl
jo
inc
popa
adc
mov
insb
iret
jmp
dec
or
stos
cltd
cmpsl
sbb
rcl
in
jg
pop
and
pop
aam
idivb
dec
jg
fists
mov
fisubs
and
xchg
mov
jb
rorw
stos
mov
or
jae
aas
adc
shrl
xchg
retw
add
sbb
xor
inc
arpl
mov
insl
ja
inc
dec
in
xor
mov
jo
mull
cmp
imul
in
repnz
sub
test
outsl
lea
in
xor
ljmp
lret
sub
push
repnz
hlt
fs
xor
fisubrs
xor
xchg
push
insb
cmp
insb
out
mov
mov
push
aas
cmpsl
add
pop
mov
aad
ss
xlat
out
in
ret
lock
jo
std
or
and
and
in
fcmovne
outsl
insb
mov
jl
cmp
sti
inc
mov
popa
lcall
scas
xchg
xor
sub
mov
and
xchg
dec
in
test
aam
adc
xchg
xor
push
jns
push
lret
cli
cltd
int3
lcall
leave
shll
inc
adc
out
nop
xor
push
adc
ret
xor
cmp
jge
flds
pop
mov
gs
jmp
xor
mov
jecxz
inc
jae
js
pop
adc
mov
pusha
jle
mov
jnp
or
cmpsl
icebp
and
in
divb
mov
pop
and
jb
cmp
mov
stos
pmaxub
jnp
xchg
ja
xor
scas
mov
enter
push
cmp
ljmp
xor
xlat
jno
int
add
shll
outsl
inc
fdivl
mov
xor
fisubs
negl
shlb
sbb
incl
gs
fiaddl
in
and
mov
out
dec
cmpsb
out
mov
jge
and
ss
imul
or
sbb
mov
jnp
mov
dec
call
pop
pop
dec
fwait
test
sbb
out
hlt
lock
adc
movsl
ret
mov
mov
in
cmp
push
add
adc
mov
aad
push
sub
push
xchg
ljmp
mov
pop
mov
pusha
add
lods
loop
jecxz
jbe
pop
add
js
sub
addr16
cmpsl
mov
push
mov
repz
mov
gs
sub
out
fucomip
push
pushf
cmp
fdivrl
jbe
ljmp
and
rcrl
and
mov
xlat
mov
flds
test
mov
iret
inc
adc
and
jno
je
ja
cmp
mov
dec
add
fbld
or
sub
iret
lods
shrb
add
dec
ss
adc
int3
mov
sub
int
jge
mov
push
push
sub
pop
add
push
out
loop
iret
or
xchg
or
stc
fyl2xp1
js
popf
sti
roll
mov
add
push
loopne
mov
shll
sub
icebp
or
aaa
push
xchg
mov
cwtl
mov
xchg
in
mov
or
mov
in
ljmp
ret
lcall
sub
inc
aaa
ret
mov
mov
clc
push
pop
lret
push
daa
out
jp
sub
mov
cmp
das
pop
adc
pushf
outsb
mov
enter
push
xor
mov
adc
inc
mov
or
cmpsl
dec
subl
or
ret
xchg
shlb
leave
fdivrl
mov
fcomip
popa
insl
push
movsl
jecxz
das
hlt
lret
cmc
xor
fs
xchg
lea
fstl
mov
sbb
sub
xor
pop
aaa
shl
xlat
or
sahf
arpl
mov
sbb
popf
cltd
aaa
sub
dec
add
fbstp
cmc
and
dec
pop
push
and
push
cmp
sub
cli
nop
and
add
jl
push
mov
sbbb
arpl
mov
sub
push
lret
sub
sbb
iret
fimull
ja
jae
test
adc
stc
cmpsl
aas
push
adc
sahf
push
mov
aaa
int3
xchg
pop
in
es
xchg
pop
mov
xor
inc
sub
ljmp
xor
sahf
sub
fucomp
pop
push
xchg
mov
inc
je
inc
aad
cmp
aas
sub
jbe
ljmp
je
xchg
fs
and
popa
rcl
subb
rcll
lods
jmp
out
mov
in
sub
push
lods
mov
push
das
xor
mov
push
dec
or
xor
or
loope
cmpsb
pop
add
jns
addr16
adcb
lret
nop
mov
clc
aam
adc
lret
fnstsw
mov
jns
out
out
dec
adc
inc
scas
jmp
jb
pop
push
out
addr16
mov
jo
xor
jbe
lret
sti
mov
cmp
ja
sbb
ljmp
cwtl
in
sbb
mov
xor
cmp
scas
pusha
lods
in
pop
cmp
daa
insb
cli
loop
inc
push
push
mov
aas
add
test
add
xchg
lods
repnz
jno
loopne
lods
push
pop
xor
sub
xor
fists
test
insl
loope
cltd
jg
aaa
lcall
data16
or
clc
and
insb
dec
mov
std
dec
jns
sbb
mov
dec
fcmovnu
jo
stc
pop
push
sub
pop
sub
lahf
or
cmp
repnz
ljmp
cli
inc
mov
mov
popf
or
lret
insl
jge
sub
insl
push
xchg
es
xchg
stc
sarl
pop
cltd
test
push
das
jl
es
clc
cmp
cltd
sahf
fidivrl
inc
jb
lret
mov
data16
syscall
xchg
out
stc
ret
lret
les
mov
add
and
fstps
test
das
adc
push
add
in
aad
add
or
stos
cmpsl
int3
in
jae
jno
dec
aad
mov
push
mov
xlat
mov
add
imul
push
aaa
dec
repz
inc
sbb
lret
xchg
and
adc
enter
and
push
outsl
inc
mov
lods
hlt
inc
mov
jne
cmpsl
jo
pushf
lahf
jl
push
sbb
mov
mov
mov
inc
adc
push
push
dec
ror
out
cmp
and
sbb
test
pop
imul
push
movsb
jne
xchg
out
jb
dec
repnz
fildl
je
xor
jnp
aam
xchg
add
fdivr
or
call
mov
mov
adc
ss
jg
jb
mov
mov
or
pop
loope
lahf
xchg
pop
pop
push
aad
popa
sbb
jb
gs
mov
add
sbb
aas
mov
jbe
lret
cli
fldcw
in
adc
cld
push
and
rorb
mov
hlt
pop
mov
push
mov
bound
repz
pushf
sbb
and
fwait
pop
in
testl
push
and
test
pop
cmp
mov
sbb
mov
sahf
mov
das
rcrl
inc
mov
jmp
pop
xlat
or
xchg
cwtl
and
stc
in
and
fs
fmull
mov
loope
imul
inc
rcrb
cwtl
adc
and
and
dec
inc
mov
stos
movsb
dec
mov
cltd
mov
mov
out
jl
push
push
push
loope
lds
push
fsubrs
and
nop
test
ret
scas
inc
adc
push
roll
inc
adc
out
push
pop
add
mov
pop
mov
dec
shl
stc
iret
icebp
iret
into
test
or
and
mov
js
test
jnp
mov
push
inc
pop
jge
aad
popf
push
insl
dec
repnz
fidivl
cmpsl
mov
test
inc
sub
mov
mov
lds
jo
fs
aaa
xchg
mov
setl
sub
mov
xlat
in
sbb
int3
out
jae
sub
cmpsb
xchg
pop
push
sbb
fs
inc
lds
lods
mov
jecxz
cwtl
cmpl
cmpsl
cmp
sbb
sbb
movsb
lahf
dec
inc
mov
test
sub
xchg
pop
push
jo
and
xchg
imul
lock
lret
das
roll
add
pop
or
xchg
addr16
ror
leave
nop
xlat
test
scas
and
rep
mov
mov
not
mov
js
rcr
out
xchg
jbe
movsl
and
mov
sbb
push
cmp
sub
popa
in
pop
test
mov
xchg
push
jle
jne
mov
pop
jnp
shr
sahf
in
popfw
inc
and
int
jns
divb
call
repnz
adc
fistpll
add
jl
mov
mov
sub
mov
test
sub
ds
xor
pusha
and
cmova
pop
inc
push
cs
leave
mov
adc
sti
imulb
jle
mov
mov
pop
jp
sbb
clc
jge
movsb
fisubl
sahf
ss
mov
stc
outsb
or
lock
jnp
shrb
push
insb
push
adc
stc
cmpsb
test
push
sub
jne
in
push
adc
inc
mov
push
pop
pmulhw
stos
cwtl
jmp
ds
cmc
mov
pop
insb
sub
xor
jne
ds
cmc
and
or
mov
lods
push
ja
dec
out
pop
repnz
testb
in
les
or
orl
sbb
jge,pt
cmpsl
xchg
daa
fcomi
push
mov
xor
loop
les
popf
xor
inc
push
cmc
fs
hlt
je
jo
jge
kmovb
pop
daa
call
into
sub
cmp
mov
or
xchg
push
mov
fistps
or
pop
sub
mov
mov
xor
aas
sahf
inc
nop
mov
decb
sub
lret
into
cmp
stos
rcr
push
add
repnz
xor
pusha
or
pop
pop
insl
adc
and
mov
lret
pop
loope
mov
in
data16
sbb
mov
pop
mov
testb
jbe
sbb
push
mov
mov
imul
cld
inc
in
push
ret
inc
nop
xor
pop
mov
aam
or
cld
mov
add
sub
ss
ficomps
cmpsb
in
arpl
icebp
out
sbb
lods
ljmp
repz
test
ja
adc
les
adc
stc
xchg
out
mov
fdiv
jge
in
imul
ret
sbb
push
sarl
jbe
sub
imul
std
jmp
aas
xor
js
pop
pop
sbb
int3
insl
jmp
mov
pop
insl
mov
pop
and
jecxz
pop
insb
jnp
dec
enter
mov
shr
andl
and
lret
int
lret
mov
adc
rcrb
mov
push
dec
outsb
arpl
movsb
addr16
ficompl
mov
stos
lods
mov
repz
into
pop
iret
rol
push
in
sahf
pop
repz
aaa
subl
xchg
cmpsb
pop
mov
ljmp
xchg
lods
mov
pop
xor
adc
int
and
ja
out
sar
adcl
adc
sbb
ja
in
cmc
fs
pushf
xchg
in
sarl
sub
out
sahf
mov
push
push
adcl
outsb
subb
mov
stos
roll
or
or
dec
push
dec
int
sbb
dec
sbb
push
and
push
dec
mov
cltd
lcall
in
add
push
js
out
mov
push
fwait
jmp
popf
push
insb
push
xchg
in
sti
or
dec
add
jmp
add
cmp
outsb
jae
test
inc
mov
cmc
test
js
pop
aaa
rcl
xchg
push
aam
clc
jp
fnstcw
insb
repnz
adc
lock
adc
cld
fistpll
adc
mov
jl
mov
in
inc
es
cmp
xor
ret
jns
add
inc
dec
inc
ja
inc
push
sub
jns
ja
sub
test
xchg
adc
sbb
lods
lret
popf
mov
adc
loope
rol
jmp
mov
aaa
jl
cmpsl
xrelease
cltd
push
mov
dec
dec
mov
roll
jg
cmpsb
out
ja
fisttpl
sub
ds
xchg
stos
sar
cmp
pop
jno
outsl
inc
jnp
lock
push
lcall
dec
jb
in
cmp
or
fs
rcrb
pop
cmp
aaa
dec
gs
mov
and
adc
sbb
dec
int3
mov
mov
dec
lea
rclb
jb
jmp
and
je
jp
dec
mov
adc
ljmp
roll
sti
jg
or
adc
and
sub
add
jbe
cld
jg
adc
fwait
or
cld
ljmp
imul
sti
xorl
xlat
xchg
push
xor
inc
adcl
xchg
cld
int3
mov
rolb
sar
mov
push
nop
icebp
or
in
xlat
push
loope
testl
add
xor
sahf
sub
aaa
dec
stos
ficoms
or
or
int3
mov
mov
ret
mov
mov
push
mov
sbb
test
mov
and
sbbl
jecxz
pop
ljmp
jecxz
inc
ds
xor
or
sub
inc
mov
cmc
push
dec
aaa
repnz
out
adc
or
xchg
es
rcl
mov
out
adc
xor
and
and
push
mov
mulps
add
enter
call
in
dec
xchg
inc
mov
adc
push
pop
nop
xor
mov
movsl
inc
enter
ss
mov
xor
inc
push
mov
push
cli
aas
in
fwait
popf
pop
int
inc
stc
ds
outsl
add
scas
cmpsl
and
sbb
lcall
push
outsb
stos
and
dec
scas
dec
adc
xchg
push
cmp
push
add
mov
outsl
repz
fmull
and
pop
or
insl
dec
dec
pop
es
or
arpl
jp
dec
sbb
jg
cmp
jl
ss
mov
inc
sbb
fcomps
sahf
jle
rol
jae
sbb
jno
in
or
dec
gs
movsl
iret
sub
mulb
mov
mov
test
sub
xchg
adc
mov
ja
push
daa
push
aas
mov
sbb
das
adc
aaa
dec
shl
jno
mov
mov
jnp,pn
mov
inc
mov
ljmp
sbb
cltd
out
mov
and
sbb
push
xchg
std
js
sbb
rcll
icebp
and
mov
sti
sar
mov
mov
cmpsl
out
fidivl
out
rcll
push
push
mov
rclb
cmpsl
inc
xor
cmpsb
dec
jl
mov
or
ds
sbb
jecxz
xor
negl
sbb
pop
mov
movsl
sub
repnz
outsl
pop
popf
xchg
xor
rcrb
in
xchg
add
mov
stos
scas
jno
ds
cli
test
mov
xor
xor
inc
outsl
xcrypt-ecb
cmpsl
iret
mov
stos
push
inc
jns
jmp
imul
scas
mov
and
mov
mov
jo
lea
filds
lock
paddq
push
or
mov
icebp
movl
es
dec
lods
jo
aas
rcrb
daa
pushl
adc
add
mov
call
test
hlt
stos
xchg
loop
pushf
mov
sbb
ret
push
stos
andl
xchg
aaa
aad
andl
xor
insb
jns
ja
icebp
pop
loop
loope
and
pop
sar
dec
into
popl
pop
test
and
sbb
mov
sub
cld
xchg
sbb
and
xchg
and
dec
inc
fisttps
mov
mov
ds
push
stos
imul
cmp
js
dec
icebp
mov
jp
pop
sub
push
or
insl
mov
loopne
dec
arpl
outsl
push
in
adc
insb
dec
nop
mov
inc
popf
sub
test
cmc
and
pop
pop
and
dec
negb
sbb
testb
inc
decb
call
adc
jl
mov
daa
xor
pop
les
stos
mov
cli
outsl
clc
adc
sti
fmull
scas
iret
out
push
xchg
sub
mov
popf
in
mov
dec
scas
stos
sub
mov
sbb
test
xchg
imul
shlb
icebp
jle
test
in
cwtl
lock
fs
sahf
into
imul
push
sub
lock
popa
aam
add
cmpsb
adc
xchg
and
mov
aam
jno
loop
add
xchg
sub
outsl
xchg
dec
xor
jmp
test
rclb
int3
sub
test
mov
push
clc
fs
loope
gs
push
pusha
aas
pop
mov
pusha
add
inc
out
in
mov
cmp
es
aaa
cmp
mov
vpaddq
add
xchg
xor
inc
es
jae
sbb
inc
cwtl
add
dec
loope
nop
fsubrl
mov
das
fwait
add
ret
push
daa
pop
call
ret
mov
dec
aaa
adc
add
scas
daa
inc
out
into
sbb
pop
xchg
aad
xchg
inc
or
popf
jnp
and
cmp
mov
lret
inc
inc
mov
das
jb
cmp
sub
cmpb
add
js
insl
dec
jbe
xor
push
jg
ror
add
mov
sub
fsubs
mov
cmpsl
movsl
lahf
sbb
cmpsb
ds
dec
roll
arpl
les
ficompl
or
push
push
aad
in
add
leave
mov
sub
jnp
xor
in
insb
sbb
mov
add
js
xchg
or
push
mov
mov
sub
out
pop
jl
xchg
scas
xor
jbe
push
sarl
pop
or
scas
loope
or
shlb
sub
pop
jecxz
inc
sub
adc
mov
jl
jmp
mov
insl
sub
cwtl
push
mov
shll
cmp
sbb
js
inc
xchg
sti
call
leave
mov
jae
outsb
jns
fwait
scas
cs
xchg
xor
mov
mov
xchg
pop
ja
push
jg
mov
pcmpeqd
add
inc
clc
push
negb
cmp
sub
add
pop
in
loop
andl
js
in
scas
test
xchg
aaa
pop
cmp
sbb
push
fs
cmpsb
or
fcompl
out
lds
mov
mov
and
insb
out
cmp
icebp
jmp
adc
jnp
je
shrb
cld
mov
repz
lret
jp
pop
call
jge
in
inc
stc
std
mov
aaa
pop
jb
and
push
jbe
enter
aas
push
mov
andl
pop
ret
mov
cmpsb
sub
adcl
int3
jae
and
out
mov
mov
push
test
cmp
jecxz
leave
pushf
pop
imul
rol
loope
jp
cmpsl
test
sub
inc
push
xor
imull
sub
inc
loop
xchg
dec
fdivr
sbb
cmp
test
push
xchg
add
stos
mov
lea
sti
or
mov
xchg
movsb
rcl
pop
mov
push
push
cld
movsb
push
pop
lods
pop
icebp
ja
fcmovu
jnp
pop
outsb
xor
es
mov
pop
repnz
mov
gs
inc
ret
bound
cmp
ret
shrb
dec
stos
sub
push
aam
enter
sub
shlb
das
mov
xchg
ds
aaa
jmp
xchg
fiadds
sbb
stc
jmp
dec
push
xchg
dec
xchg
mov
mov
iret
jge
enter
lahf
inc
push
or
pop
outsb
mov
pushf
xchg
mov
push
jge
jl
adc
jns
pop
rcll
mov
lock
dec
in
lret
pusha
aam
ret
pop
in
adc
xchg
out
pop
pusha
inc
repz
inc
sub
pop
popa
ss
pop
or
xchg
stos
jb
sub
mov
inc
cmp
icebp
icebp
xchg
dec
or
add
ret
adc
cmc
mov
mov
push
dec
insl
xchg
jb
pushf
add
loope
mov
jae
fidivrs
stc
out
sub
mov
jns
scas
mov
addr16
popa
cmp
jmp
mov
mov
data16
sarb
jae
insl
lret
cmc
mov
ret
sbb
shrb
xchg
mov
aaa
jns
pop
cmp
in
sub
mov
pop
ficoml
dec
jl
and
xchg
xchg
xchg
movb
mov
in
xor
movsl
cmp
shlb
adc
sbb
xchg
notb
xor
mov
shll
inc
push
aaa
jle
in
popf
sub
dec
dec
mov
idivb
adc
pop
push
mov
leave
insb
mov
or
dec
test
xchg
loop
into
mov
call
into
mov
add
push
mov
mov
push
mov
or
dec
into
xchg
dec
mov
in
loope
xchg
jns
push
pop
xor
dec
mov
mov
addl
and
xor
cmc
mov
adc
pop
add
mov
outsl
jle
pop
xchg
pop
scas
cltd
shr
neg
iret
dec
cld
hlt
mov
mov
ja
out
sub
fwait
pop
xchg
pop
lods
inc
sbb
pop
pop
sar
shl
and
jg
ret
ret
imul
dec
inc
sbb
out
dec
mov
add
test
in
outsl
jmp
lock
jl
push
fldl
insb
pop
ss
sbb
pop
cmp
gs
cwtl
loope
xchg
cmp
cli
leave
icebp
mov
dec
pop
int3
sbb
mov
mov
jbe
nop
les
mov
roll
mov
mov
clc
imul
jecxz
adc
add
shl
insb
stos
dec
imul
lea
mov
or
jp
sub
leave
test
stos
out
jo
shll
mov
sbb
add
andl
add
mov
inc
or
add
inc
imul
in
mov
jl
rcrb
notb
test
inc
inc
sbb
stos
in
insl
sub
test
ret
inc
js
into
jecxz
cmp
test
jp
inc
cmp
mov
xor
mov
sub
jge
scas
cmp
push
sbb
jbe
sub
and
mov
inc
popa
fs
insb
loop
jb
push
or
mov
insl
dec
jb
in
insb
aaa
jnp
leave
adc
mov
adc
mov
xchg
stc
mov
adc
jns
mov
pop
into
and
js
xor
pop
push
lds
leave
inc
in
or
dec
lock
adc
cmp
adc
ffreep
es
push
cwtl
pop
push
hlt
mov
imul
xlat
push
push
repz
in
add
jnp
adc
fidivrl
aad
ljmp
fldenv
push
add
mov
pop
mov
das
mov
jmp
dec
test
insb
xchg
mov
andps
push
ja
int3
loop
and
mov
adc
and
leave
xor
jge
inc
xchg
shll
mov
inc
hlt
fsts
sub
test
mov
mov
push
loop
sub
data16
mov
repnz
jne
je
imul
push
xchg
aas
inc
push
sahf
dec
scas
stos
dec
outsb
scas
and
cltd
push
pop
or
jo
cmp
cmp
inc
inc
js
sbb
jp
mov
xchg
daa
adc
rorl
pusha
and
adc
popf
stos
int
ret
xor
xchg
inc
int
inc
js
jmp
inc
pop
mov
sub
pop
cmp
push
jge
orb
iret
cmp
add
push
lret
hlt
cmp
ret
sub
mov
mov
pusha
psubd
dec
mov
fistl
jb
movsb
jne
sub
rcll
xor
movntps
xchg
dec
fdiv
in
mov
cmp
mov
and
lret
dec
mov
push
xchg
jno
dec
js
mov
aaa
pop
rol
aam
jp
jg
or
add
inc
andb
xchg
mov
mov
add
sub
aad
sub
movsb
scas
testl
test
loop
testl
lea
ret
xchg
xor
sbb
out
jne
arpl
cltd
mov
into
dec
shr
fistpll
add
xchg
jns
data16
mov
nop
push
cmc
xor
mov
push
or
mov
xor
inc
pop
pushf
fwait
shll
shrb
cltd
push
and
pop
notb
jle
sub
daa
inc
or
push
nop
mov
xchg
xor
pop
add
mov
mov
mov
sub
push
mov
sub
inc
or
sbb
mov
push
sub
jno
mov
push
mov
idivl
loope
fldt
push
jmp
cmp
jmp
test
jg
push
cmc
jno
scas
adc
xchg
xchg
mov
push
addr16
cwtl
push
sub
mov
lretw
mov
mov
pusha
inc
bound
or
push
inc
outsb
repnz
push
in
fmull
sub
repnz
je
adc
shlb
out
push
push
adc
push
scas
icebp
movsb
fdivs
aas
xchg
test
jae
std
or
xchg
cmp
pop
mov
nop
loop
mov
orb
jb
xchg
pop
lds
jnp
sbb
imul
bound
adc
pop
daa
push
inc
daa
out
ss
ja
loop
iret
fwait
cmp
popa
aas
cmp
push
pop
pop
jg
mov
inc
xor
add
push
loopne
pop
repnz
flds
push
or
mov
cltd
jecxz
or
insl
or
pop
popa
test
jg
jnp
int3
enter
pop
pushf
stos
dec
outsl
fdivrs
in
inc
lcall
pusha
inc
and
fmull
ljmp
mov
scas
push
lahf
icebp
mov
cli
aam
jbe
push
mov
mov
mov
fmulp
clc
and
xor
outsb
movsl
outsb
xchg
lahf
add
icebp
xchg
pushw
jecxz
mov
pop
rclb
cmc
dec
dec
jbe
jmp
lcall
rol
mov
xlat
subl
cmp
insb
cmp
adc
mov
pop
bound
lahf
test
cltd
enter
dec
inc
loope
adc
and
sbb
arpl
mov
adc
icebp
mov
shl
pushf
aas
cmp
out
sbb
sub
fwait
shlb
jg
mov
inc
aam
fcomps
or
dec
push
fwait
jl
sub
aaa
cmp
mov
jae
mov
lds
sbb
dec
or
mov
arpl
xor
mov
inc
jmp
repz
mov
test
sub
scas
lret
cli
daa
cltd
dec
push
stos
sub
mov
mov
int3
arpl
jmp
jo
pop
add
pop
push
jbe
xchg
repnz
bound
push
test
rcrb
jmp
sbb
pmulhuw
outsl
jge
adc
inc
decb
incl
insl
push
pop
cwtl
stos
mov
push
out
push
sbb
add
cmp
sbb
out
pop
call
enter
loop
arpl
je
push
xor
add
shrb
in
out
jae
out
xor
mov
arpl
movsl
std
and
outsl
xchg
stos
mov
pop
fdivl
rorb
inc
lods
fidivrs
adc
push
dec
cmp
push
mov
popf
and
sar
xchg
js
fs
insb
add
insb
xchg
scas
popa
jl
xchg
pop
icebp
xor
inc
cwtl
push
and
xor
int3
fadds
jecxz
mov
gs
fisubrs
mov
outsl
mov
es
hlt
cmp
jmp
outsl
or
sbb
mov
cmp
andb
fwait
mov
and
fnstsw
adc
pop
add
fdivrp
sbb
aas
data16
and
jnp
imul
cmp
add
into
mov
xchg
mov
rcrb
mov
push
mov
jne
push
sti
cmp
xchg
addl
add
fisttpll
addl
pop
pop
xchg
push
xor
daa
aam
stos
pop
adc
int3
inc
mov
push
cli
nop
dec
mov
stc
sbb
jae
push
pushl
dec
jg
sbb
sarl
push
inc
pop
mov
outsb
icebp
push
aas
sbb
xor
push
cmpsb
jmp
push
push
and
daa
pop
jecxz
lret
cmpb
popa
lods
aad
pushf
in
cli
in
insb
pop
imul
jno
es
pop
ret
sbb
dec
fisttpl
fidivl
jne
inc
jno
popf
adc
add
pop
jno
mov
mov
jnp
adc
imul
pop
jne
daa
sar
jbe
jnp
adc
add
xchg
inc
lods
mov
cs
ffreep
xchg
mov
sub
dec
sbb
mov
xlat
in
fstpl
jp
orb
cmp
test
das
hlt
dec
loop
inc
dec
sbb
hlt
mov
stos
sbb
xchg
mov
dec
addr16
inc
sub
sub
jb
in
fnstenv
loopne
mov
aam
roll
jb
hlt
dec
lahf
pop
fisttpll
cltd
pop
imul
sub
sub
fs
stos
fs
fdivrl
mov
sti
inc
dec
andl
jmp
xlat
xor
pop
or
add
outsl
and
mov
movsb
add
lahf
into
mov
pop
push
popf
jmp
and
jp
or
cmp
js
cmp
daa
push
jl
fnstenv
ret
xchg
mov
loope
jmp
add
jl
sub
fwait
std
cmc
push
aam
pop
movsl
mov
cmp
test
sub
dec
out
gs
jae
lahf
ljmp
movsl
daa
or
inc
pop
jp
divl
dec
xchg
test
jge
orl
adc
jne
adc
xchg
loopne
popf
arpl
shl
sbb
pushf
xor
sub
insb
add
out
in
and
push
les
and
mov
xor
push
cltd
mov
cmpsl
lcall
sbb
sbb
repz
movsb
jg
mov
push
mov
sbbb
cmp
pop
and
iret
xlat
mov
in
insl
and
or
xchg
std
xor
in
or
out
enter
sub
fsubp
test
sbb
mov
mov
xor
movsb
sbb
jns
ret
fnstsw
sub
notl
lret
lods
popa
mov
and
fstpl
gs
incb
xor
jge
std
shl
test
inc
inc
cltd
and
mov
xor
inc
jb
pop
clc
jge
sbb
negl
lret
cmp
xchg
mov
jecxz
mov
pop
stc
arpl
mov
jl
jo
adc
mov
fwait
adc
dec
and
mov
lret
dec
inc
mov
lods
mov
je
cmp
xchg
es
jmp
mov
insb
popa
mov
scas
sti
xor
sbb
pushf
cmp
push
mov
jbe
push
add
sbb
lret
push
push
pop
jmp
lds
lods
jno
scas
mov
pop
gs
cld
mov
lret
inc
sbb
xor
push
mov
scas
pop
sbb
jmp
push
lcall
xor
or
and
adc
test
xchg
std
cli
push
or
push
aad
loopne
xchg
inc
stos
and
loop
popf
fistl
or
xchg
test
pop
mov
icebp
pop
jb
std
scas
push
pop
mov
sbb
pop
mov
dec
leave
push
xchg
out
pushf
and
lret
scas
shll
pop
xchg
or
test
test
cmp
sub
shlb
cmpsl
mov
or
pop
icebp
notl
adc
adc
and
push
hlt
add
xchg
ljmp
pshufw
and
movsl
inc
lcall
sti
cmp
das
lcall
lcall
pop
mov
mov
out
push
sub
pop
outsb
push
jmp
and
test
cmp
jnp
jne
das
dec
xor
mov
fidivs
mov
mov
push
arpl
push
mov
mov
test
stos
int3
adc
movsl
jmp
stc
stc
in
mov
pop
lahf
mov
shrl
jnp
jecxz
jb
jl
pop
in
jmp
movsb
lods
sbb
in
addl
sub
cmpsb
or
sbb
dec
das
iret
cmp
xor
ffree
bnd
jmp
fisubs
andb
mov
cltd
flds
jae
int3
loopne
repz
scas
or
xchg
add
xchg
mov
mov
aaa
lea
sub
or
ljmp
add
push
sub
jge
int
pop
xchg
adc
rcr
fldl
inc
aaa
xchg
push
mov
cmp
je
fistps
adcl
lret
inc
into
mov
mov
pop
nop
movaps
loope
xchg
sub
sbb
pop
dec
mov
negb
insb
mov
pop
lds
pop
mov
mov
mov
outsb
aam
pop
fimuls
mov
clc
lock
dec
lret
outsl
shll
int3
pop
jg
movsb
mov
xor
arpl
sbb
mov
out
or
fcomps
aad
sarb
mov
cmp
cltd
ret
and
mov
rcll
out
xor
lods
idivb
cmp
push
mov
fs
xchg
pop
imul
dec
sub
mov
inc
jb
mov
cmpsb
and
fucomip
push
inc
mov
leave
lds
jns
cwtl
notl
mov
jne
negb
ja
pop
sub
mov
insb
xor
and
cmp
push
mov
ss
push
in
ret
lahf
push
mov
mov
scas
fs
mov
cmp
pusha
mov
les
aaa
push
xchg
rcr
push
dec
in
mov
adcl
sbbb
test
pop
cmp
inc
les
cmpsb
loope
xchg
pop
idiv
mov
call
rcll
ljmp
or
inc
xor
inc
arpl
loop
pop
mov
mov
dec
mov
add
popf
mov
fcmovb
das
icebp
lcall
xchg
adc
adc
push
insl
fdivr
or
ret
cwtl
lock
movsb
pusha
adc
inc
cmc
xor
xchg
sbb
jge
mov
inc
lock
fildll
test
sbb
jae
sti
mov
insl
outsl
sbb
add
in
mov
push
sbb
test
adc
xor
mov
push
ret
lea
push
sarb
xor
ds
xchg
jecxz
icebp
pushf
lock
pop
outsl
push
jmp
cli
movsl
dec
push
out
push
push
std
in
mov
mov
jge
arpl
jge
sub
and
mov
add
je
mov
sbb
lahf
fmul
add
xchg
cltd
push
fisubrl
or
shl
sahf
insl
ja
lods
gs
sbb
xchg
lods
pop
push
add
push
loopne
mov
dec
fs
daa
jno
xchg
out
push
int3
mov
cs
xchg
sbb
imul
push
and
jmp
aad
mov
out
clc
sub
xor
lds
cmp
fcmovnu
jb
mov
pop
adc
clc
pusha
in
jmp
sbb
jmp
clc
cmp
nop
int3
ret
jbe
mov
loop
mov
int
mov
cwtl
test
dec
or
mov
jae
nop
dec
push
mov
push
cli
push
xor
shll
jns
push
or
xchg
adc
les
dec
inc
cmpsl
icebp
inc
mov
mov
dec
leave
cmp
xor
push
inc
pop
imul
sbb
jo
jbe
fmull
out
shll
popl
aaa
fsubs
or
add
clc
cmpsl
es
cmp
lahf
jp
shrb
jns
and
loop
push
push
shr
adc
adc
cmp
mov
xchg
popa
jl
cmp
lcall
lods
pop
sbb
in
inc
pop
xchg
aaa
mov
inc
mov
and
push
xor
pop
sub
push
push
push
call
xchg
add
jb
xor
sub
add
lea
pop
notb
outsl
add
mov
cli
or
xor
jno
fnstenv
xor
out
test
mov
stc
mov
imul
in
mov
cs
pop
lahf
in
jg
mov
fs
icebp
nop
jae
mov
repnz
out
xchg
xchg
push
mov
mov
mov
mov
jmp
in
or
sbbl
mov
punpckhbw
push
inc
sub
es
pop
das
mov
xor
jg
repnz
xchg
outsb
cld
xchg
pop
pop
push
pop
sbb
mov
mov
inc
xor
add
mov
scas
in
or
pop
cld
cmpsb
inc
inc
js
xchg
mov
hlt
jno
mov
add
orl
out
fcomps
rorl
lods
lds
push
mov
lds
in
loope
pop
push
roll
xchg
pusha
loop
inc
xor
and
repnz
push
ret
pop
jno
inc
jb
xor
jp
arpl
add
cmc
xchg
xchg
lods
imulb
inc
jnp
sbb
test
nop
cs
xorl
insb
xor
adc
clc
lods
aad
sbb
sub
cwtl
xlat
cli
sbb
popa
push
ljmp
dec
mov
push
xchg
test
scas
std
mov
pop
mov
mov
cld
mull
sbb
repz
mov
call
ret
sub
pop
shrl
jo
test
insl
jge
stos
iret
mov
addl
or
pop
pop
inc
ss
adc
gs
xchg
nop
popf
sbb
stos
and
out
fdiv
push
xor
addl
mov
bound
enter
add
push
mov
sub
inc
es
mov
fwait
mov
cwtl
clc
popa
aad
cmp
loopne
mov
adcl
shrl
das
sbb
xchg
js
psllw
imul
fidivrl
lods
movsl
insl
test
rcll
das
test
loope
aam
out
sub
sub
rcll
sub
icebp
repnz
outsb
push
sub
xchg
sti
les
scas
mov
cmp
sbb
push
cmp
pop
jo
inc
cli
sub
or
sub
sub
dec
sbb
mov
xchg
nop
push
jne
pop
divb
jmp
das
push
jo,pn
mov
test
adc
iret
add
add
pop
ds
mov
jmp
js
icebp
sub
adc
xchg
pop
push
pop
dec
fidivs
mov
push
enter
or
sbb
xchg
int3
movsb
xorb
fcoml
xchg
pop
cmp
mov
mov
sbb
out
sbb
ja
mov
mov
test
mov
fidivrs
fistps
es
cmp
or
cmp
pop
movsb
add
jge
movsl
mov
sub
fadd
outsb
iret
outsb
out
aas
adc
jae
inc
mov
mov
ret
std
nop
mov
pop
lods
adc
lods
mov
or
pop
sbb
notb
imul
imul
in
pop
dec
mov
jnp
out
ss
inc
mov
xor
mov
repnz
lods
or
sahf
push
jg
sahf
sub
jb
adc
inc
mov
mov
lret
aas
rorb
adc
ja
fcompl
sbb
pop
jge
sub
ljmp
push
mov
cs
ror
xchg
push
lret
pop
lahf
and
js
dec
es
mov
outsl
jge
sub
aam
inc
frstor
sbb
dec
ficomps
adc
cwtl
xor
orb
js
jbe
jmp
push
and
leave
cmp
xor
lds
pop
ljmp
addr16
adc
inc
dec
iret
push
fptan
outsl
loop
push
test
mov
pusha
xor
or
xor
push
idivb
rcrl
das
cmpsl
repz
lods
cwtl
pop
gs
mov
loopne
fdivl
movsb
dec
inc
mov
pop
sahf
xchg
mov
dec
out
sub
mov
cmp
xchg
mov
repnz
push
xchg
imul
notw
xchg
xor
and
or
int
sbb
push
pop
movsb
push
or
nop
test
push
xabort
into
pop
mov
jg
shrb
pusha
add
mov
iret
mov
mov
cli
inc
cltd
movsl
fwait
aaa
mov
in
nop
cld
pop
setge
inc
fisubrs
push
movsb
fimuls
or
push
xchg
aaa
dec
push
jge
and
dec
repz
sbbb
xchg
jae
or
test
scas
sbb
into
mov
pop
pop
call
jns
outsb
stos
sub
inc
or
sbb
cmp
lcall
sub
xor
cmp
add
jle
mov
out
mov
pop
clc
sub
ret
outsb
out
xlat
or
out
adc
mov
dec
jge
fmul
push
std
daa
xchg
and
popa
call
std
dec
insb
mov
sbb
or
xchg
lods
pop
mov
push
and
test
sbb
adc
cwtl
xchg
stos
jno
and
dec
es
cli
adc
ficomps
dec
pop
xor
inc
push
jle
ss
rcpps
push
cmp
test
jbe
data16
mov
inc
aaa
mov
cmp
cmp
jno
out
jns
cmp
jnp
loopne
mov
fadd
jp
loopne
fidivrs
pushf
lahf
shll
iret
pusha
inc
in
inc
ret
scas
ret
pop
in
fisttps
call
cmp
push
icebp
jns
outsl
dec
add
xor
mov
pop
out
adc
insb
jne
mov
lods
xchg
jg,pt
aam
push
push
ficompl
orb
inc
xchg
mov
ja
hlt
jae
xor
imul
sti
sbb
fcomip
fs
sub
dec
xchg
shrb
ds
inc
fucomip
pushf
call
and
mov
add
shrb
arpl
out
jo
lret
or
jge
movsl
pop
lret
pop
les
int3
fidivrl
xchg
addb
imul
xor
lock
jl
aas
dec
sbbb
jecxz
xorl
mov
movsl
popf
jle
test
ja
push
xor
mov
jnp
sti
push
rolb
or
pushf
pop
outsl
outsb
mov
sub
xchg
adc
inc
mov
sub
movl
mov
xchg
push
je
mov
mov
rcrb
dec
leave
sbb
ds
iret
mov
arpl
push
push
inc
and
aam
push
inc
xor
inc
loopne
mov
jmp
icebp
repnz
or
cli
hlt
out
pushf
popf
jl
mov
es
hlt
push
stos
push
mov
or
inc
cmp
lods
mov
insl
dec
dec
repnz
xchg
cmp
lods
das
adc
in
aad
int3
stc
cltd
xor
test
fcoms
stos
out
jns
add
inc
pusha
pop
cmp
push
into
lods
leave
pusha
out
cmp
jl
xor
fmulp
adcb
lds
fxch
imul
jp
jecxz
pop
and
add
movsl
inc
sub
lcall
inc
shrl
cmp
cmp
into
cmpsb
mov
sahf
int
dec
and
adc
xor
push
sbb
push
lcall
mov
push
xchg
push
jmp
mov
adc
sbb
rol
xchg
jae
jno
and
cli
jl
inc
adc
idiv
test
xchg
jnp
mov
xorl
inc
test
push
lahf
jae
fcoml
and
aaa
pop
movsb
sub
jnp
aas
xor
cmp
mov
fldt
movsb
add
in
jmp
cmpsl
mov
adcb
cmpsb
adc
or
lret
and
push
cmp
adc
fxam
sbb
and
sbb
iret
psubb
loope
pop
sub
mov
mov
mov
mov
into
lods
xorl
sbbb
aaa
movsb
pop
lea
int3
shll
cli
movsl
pusha
das
xchg
jnp
push
loop
xchg
addb
mov
mov
pusha
mov
dec
sbbb
fisttps
mov
cmpsl
not
insl
dec
imul
xchg
or
jg
push
hlt
jo
jnp
dec
and
in
mov
cmp
pop
xchg
pop
inc
sub
bound
cmpsb
sbb
ljmp
fnstcw
clc
loop
mov
rcr
scas
add
cltd
push
jp
cmpsb
mov
push
mov
push
jmp
stc
es
je
nop
jno
mov
popa
ljmp
in
pop
std
in
inc
sub
push
out
jnp
sub
scas
sbb
aad
pop
mov
in
mov
sbb
jae
insl
mov
call
xchg
and
adc
jb
dec
cmp
push
cmp
mov
mov
stos
xchg
sub
ss
test
push
shl
mov
jmp
xchg
rol
sbb
sbb
movl
jae
in
daa
or
inc
pop
repnz
outsb
xchg
mov
mov
pushf
xor
push
test
xchg
andb
bound
push
add
ss
cmp
into
ret
inc
mov
sbb
fldt
cli
mov
test
jg
ret
sub
arpl
and
mov
xchg
adc
mov
fisttps
and
rol
mov
out
add
jns
cmp
jl
loop
pop
dec
lock
pop
xlat
lea
lret
mov
lds
pop
leave
mov
out
sarb
sarb
fsubs
test
out
cwtl
pop
mov
jp
mov
idivb
cmpsb
js
push
inc
lahf
pop
std
data16
icebp
push
sbb
mov
out
sti
mov
repnz
cmp
fs
out
ljmp
push
and
jg
jle
sbb
xchg
das
push
dec
mov
sbb
aaa
pop
and
push
inc
jnp
subl
clc
cmp
xchg
pop
cmp
fcomps
xchg
ss
xchg
lret
imul
pop
movsl
add
aaa
push
mov
movsl
cltd
xchg
aam
lods
jns
jle
cmp
cwtl
outsb
imulb
xlat
test
mov
dec
movsb
dec
sub
icebp
push
clc
jge
popa
push
mov
test
push
xchg
es
add
lcall
xchg
pusha
cmpsl
and
pop
or
scas
imul
add
sbb
adc
ds
jp
nop
mov
test
push
sub
cmp
shrb
sub
clc
pop
sub
out
dec
or
fists
mov
cli
pop
sbb
inc
fidivrl
cmp
scas
movsb
fs
cmp
stos
testl
and
and
pop
scas
inc
adc
cmp
xor
and
jg
push
aaa
nop
dec
mov
jnp
adc
int
jae
rclb
jbe
lds
mov
mov
xchg
sbb
insl
shrl
in
ljmp
stos
cmpsl
es
xchg
sbb
sbb
sub
mov
iret
pop
out
cs
push
mov
mov
cs
out
cmpb
xor
push
dec
fwait
jp
push
aaa
shrl
les
je
and
test
scas
mov
add
sub
push
xor
pop
jb
and
push
insl
mov
inc
out
mov
mov
aad
adc
cmpsb
es
aaa
lods
cwtl
bnd
adc
imul
loopne
lcall
sbb
jo
or
jnp
lods
shrl
jnp
push
inc
cld
loop
mov
or
mov
cs
push
ret
xchg
out
std
cmp
arpl
jnp
pushf
hlt
mov
clc
jge
mov
cld
mov
clc
mov
scas
mov
xchg
push
js
mov
fiaddl
cmp
sbb
bound
jne
push
mov
aaa
pop
sbb
push
sahf
ljmp
push
adc
jno
bound
xchg
stc
mov
lea
inc
jl
or
aam
push
addb
xor
add
jnp
fstps
icebp
arpl
mov
mov
jb
cmpsb
daa
fadd
inc
mov
inc
cld
fadds
sbb
mov
push
push
xchg
pop
push
ljmp
cli
push
mov
xor
cmpsb
mov
push
nop
xchg
fs
out
xor
or
push
mov
clc
dec
mov
mov
push
jbe
ja
ja
cmpsl
out
xchg
xor
cmpsl
xchg
popa
out
jne
adc
pop
xchg
inc
xchg
fnstsw
cmp
fs
shl
roll
enter
mov
pop
div
dec
pushf
shrl
dec
bound
clc
cmpsb
stc
pop
mov
adc
aam
lahf
lret
mov
push
movsb
ja
inc
addr16
loopne
test
pop
adc
dec
iret
push
mov
jnp
rcr
sbb
aad
pop
or
pusha
mov
xchg
insb
inc
xlat
mov
loope
push
pop
dec
enter
shrb
jl
mov
add
mov
lods
xor
mov
gs
daa
push
mov
fwait
cs
pop
int
mov
push
outsl
sti
js
add
arpl
sbb
push
popf
inc
and
das
xchg
incl
push
xchg
mov
xlat
fs
mov
clc
fldenv
and
mov
lret
fcmovbe
sub
adc
inc
inc
fisttpl
jge
jae
or
jae
dec
fisubs
ja
call
je
imul
push
pop
sbb
ds
adc
test
fucom
jmp
lods
scas
repnz
mov
addr16
jno
mov
sti
xchg
rcr
sbb
movsl
cs
andb
arpl
roll
jg
xchg
popa
ret
shlb
dec
or
pop
cmp
jmp
jo
mov
call
push
bound
and
loop
out
shlb
int3
pushf
inc
mov
aad
mov
pop
mov
dec
bound
out
inc
fidivs
lods
shlb
rorl
push
xchg
pop
xor
mov
out
or
mov
adc
fs
adc
fidivrs
sti
int
fldl
inc
leave
jmp
push
fcomp
mov
pushf
pop
pop
fsubs
xchg
das
aas
sbb
jns
dec
filds
mov
fldl
mov
sub
push
sbb
dec
adc
outsl
sub
add
pop
mov
xor
or
inc
xchg
xor
sbb
cmp
xchg
adc
dec
and
and
stc
loop
and
in
in
arpl
scas
sbb
outsl
add
repz
pop
add
std
cmp
cs
add
lcall
inc
sbb
push
ljmp
lret
sti
test
in
xchg
cmc
gs
or
pop
test
les
fwait
pop
inc
pushl
mov
icebp
jnp
jns
lods
xlat
js
push
dec
add
inc
jl
or
ret
xchg
push
sbb
loope
dec
jne
leave
aas
xchg
push
std
push
sarb
sbb
sahf
das
imul
stos
cld
cmpsl
out
add
sbb
ss
ficompl
sti
pabsd
mov
xchg
lods
rorl
test
pop
insb
cmpl
dec
aaa
mov
sbbb
mov
jecxz
push
mov
imul
jmp
mov
in
cmpsb
outsb
in
xchg
fdivrp
mov
or
mov
test
test
inc
push
add
inc
sub
add
jp
lea
sub
or
das
jb
xchg
xor
ret
loopne
jmp
mov
cmc
jp
jge
mov
icebp
xchg
pop
sti
push
cmc
out
shrb
scas
ret
or
ret
inc
jo
mov
xor
rcrb
out
xchg
lahf
cwtl
or
pushf
lock
rcrb
lock
adc
jecxz
xchg
adc
pop
jge
fcom
sbb
cmp
or
std
dec
xchg
in
test
xchg
mov
cld
mov
loopne
and
push
cld
jb
mov
xchg
and
dec
rorb
jl
in
jo
movsl
dec
fwait
xchg
imulb
inc
test
in
xchg
cld
mov
pop
testl
lcall
into
es
std
js
or
jmp
aam
cli
fsubrl
pop
inc
loopne
mov
sub
mov
cmp
js
adcl
mov
jmp
test
inc
bound
add
das
sub
sbb
mov
adc
dec
ljmp
jg
mov
out
fildll
rcrl
js
add
dec
jnp
dec
cmp
xor
mov
inc
adc
insl
jecxz
fucom
xlat
xchg
lcall
fwait
adc
jo
mov
mov
cs
xchg
repnz
and
mov
jp
aaa
daa
sbb
push
das
sub
push
xchg
out
ss
sbb
mov
jbe
dec
shr
imul
inc
lret
jno
js
adc
xchg
dec
leave
mov
cmp
lahf
and
lret
fstps
jge
dec
mov
add
leave
das
jge
inc
jo
mov
dec
push
add
xor
shrl
and
das
inc
sti
inc
ficomps
lea
xchg
fldcw
push
mov
jp
adc
xor
xchg
sbb
clc
dec
adc
xor
or
add
or
jge
lcallw
jp
imul
dec
mov
dec
mov
xchg
data16
es
insb
or
into
je
inc
dec
dec
mov
and
addl
int
add
dec
and
movsb
test
push
add
lret
inc
xchg
xchg
cwtl
stos
notw
test
mov
test
in
leave
fcompl
mov
or
inc
jl
mov
and
in
sbb
das
sub
pushf
cmp
pop
pop
pop
mov
rolb
aaa
pop
or
pop
ds
mov
lahf
jge
push
scas
repz
and
repz
or
mov
lods
and
fwait
sbb
sbb
sub
adc
jbe
arpl
xor
dec
xchg
push
push
pop
lcall
testl
repnz
cmp
dec
mov
or
data16
fs
pop
dec
nop
stc
rorb
movsb
popf
in
testl
mov
sub
aas
sbb
xchg
rorl
bound
dec
mov
cmp
in
movsb
out
add
mov
outsb
mov
cli
into
sub
cmp
addr16
mov
nop
jmp
lcall
mov
cmp
ljmp
adc
sti
xor
jno
lret
cmp
ds
adc
mov
push
adc
push
push
fldcw
je
jns
mov
xchg
xchg
ss
sub
mov
icebp
and
fmul
pop
cli
sbb
lret
inc
push
pusha
cwtl
push
pushf
xchg
jns
cli
add
int
bnd
add
int3
dec
cmp
mov
or
rorl
and
add
inc
jnp
aam
lds
dec
fldcw
and
mov
jnp
insb
sbb
sahf
cmp
cmpsl
insl
in
int
mul
push
mov
fsubs
mov
dec
pop
nop
cmp
fsubrl
fisttps
jle
testb
ss
xchg
or
xchg
jb
adcb
jno
cmp
ds
dec
lret
pop
push
jmp
in
push
iret
sbb
scas
cmp
push
xor
ret
sti
arpl
push
sub
ja
inc
imul
inc
movb
pop
lcall
nop
mov
stc
data16
insb
mov
in
fildl
inc
jno
mov
loope
mov
jle
jmp
pop
mov
mov
mov
leave
jnp
stc
add
xchg
dec
cmp
add
mov
fadd
pushf
aaa
jmp
popa
enter
fs
leave
js
adc
add
and
xor
lahf
and
pop
xchg
scas
and
cmp
fists
test
xor
cmp
sti
addr16
popa
out
inc
cmp
or
jns
lock
in
dec
aam
jnp
jbe
shlb
mov
popa
pop
hlt
sub
push
and
cwtl
pop
push
loop
mov
arpl
inc
push
sub
stos
cmpl
adc
dec
mov
jge
testl
mov
iret
or
es
pop
pop
or
add
push
testl
inc
imul
andl
hlt
loope
jo
add
dec
mov
in
les
and
pop
pop
mov
addl
mov
sub
and
jae
mov
gs
xor
adc
mov
cmp
jg
divl
fldcw
cli
enter
ljmp
loope
mov
and
pop
je
mov
daa
loop
jno
mov
jge
inc
scas
xor
mov
and
xchg
cmc
in
test
rcrl
aaa
dec
out
mov
xchg
lret
mov
xchg
bound
test
jge
insb
in
sahf
leave
push
push
jae
ja
sbb
leave
pushf
enter
xor
mov
shr
and
ret
les
mov
sbb
dec
mov
jae
xchg
sbb
mov
push
sbb
gs
popf
mov
adc
xor
pop
push
in
sub
movsb
mov
es
jle
cld
add
arpl
leave
test
and
mov
jo
ss
push
stos
fcom
aas
je
movsb
hlt
aaa
cmp
imul
testb
jo
sarb
dec
out
divl
cmp
lcall
cmp
jecxz
test
dec
mov
scas
ja
pop
fs
mov
or
xor
rolb
pop
push
mov
adc
push
xchg
push
pop
es
stc
sub
daa
dec
ffree
lea
push
gs
mov
popa
cmp
inc
scas
and
adc
addb
mov
pop
xor
mov
pop
xor
jge
jne
jo
mov
or
test
add
xchg
adc
adc
xlat
add
cmp
sub
jns
push
pushf
dec
cld
int
andb
mov
ret
orb
iret
ja
ja
fwait
or
sahf
xor
ja
push
es
mov
sbb
repnz
aas
popf
mov
pop
xor
push
lcall
dec
dec
dec
inc
mov
inc
scas
cld
push
jle
sub
cmp
cmp
sbb
sar
or
loop
xchg
jne
pop
pop
movsb
daa
sbb
add
and
out
loopne
or
push
bnd
and
ss
jno
movsb
mov
push
gs
mov
adc
mov
jl
xor
stos
fwait
xchg
lret
js
shrb
xor
xor
push
xor
cwtl
add
into
mov
insl
xchg
xor
ja
vphadduwd
je
pop
aas
cmp
movsl
cs
push
mov
mov
sahf
add
mov
dec
or
mov
adc
sahf
lret
in
jmp
cs
xor
lea
bound
pop
pop
dec
xor
mov
mov
fsubl
fbld
push
shll
bound
ljmp
mov
and
sbb
pop
test
test
pop
xor
lea
or
jecxz
popa
fisttpl
push
and
jp
rol
test
imul
mov
std
cmpsb
mov
and
imul
xchg
or
pop
or
pop
fldcw
test
addr16
pop
mov
addl
add
pop
pop
jb
loop
inc
or
je
adc
add
lcall
adc
push
sbb
xorl
jnp
mov
sub
lods
push
pop
push
shlb
aam
lahf
xchg
test
clc
push
jb
dec
jmp
daa
pop
inc
inc
out
icebp
sub
fsubrp
test
sub
jle
xor
ja
int
pop
push
fcmovne
lods
inc
lahf
movsb
addr16
aaa
out
mov
jge
lock
dec
push
jle
pop
cmpsb
pop
shufps
nop
xor
mov
jecxz
jno
jns
aad
push
mov
push
or
in
js
and
test
sub
and
mov
xor
pop
pusha
inc
dec
sub
push
xor
mov
jo
push
push
mov
orb
fstpt
fwait
mov
inc
and
mov
adc
push
xchg
ss
ror
xchg
divl
test
fisttps
mov
jb
mov
arpl
mov
xchg
outsb
cli
ficoms
xchg
sbb
and
out
inc
inc
inc
xor
mov
fcoms
push
lock
adc
or
jbe
lea
push
ljmp
or
rcll
pushf
jecxz
cmp
ja
in
push
aaa
or
sub
sbb
sub
push
scas
cmp
jb
adc
lret
addr16
xor
or
mov
gs
inc
mov
hlt
mov
mov
fildl
cmp
aam
fcoms
add
pop
ret
jns
cmc
icebp
arpl
mov
xor
bound
xor
ja
hlt
inc
enter
inc
adc
cmpsb
mov
in
mov
xor
in
or
jae
in
bound
ljmp
inc
dec
pop
pop
ja
shr
stc
sbb
fwait
jecxz
mov
popf
mov
inc
mov
push
inc
leave
repz
lods
sar
popa
ret
es
dec
clc
adc
mov
mov
sbb
int3
push
jno
mov
rcll
and
lds
push
mov
xor
xor
popa
out
push
pop
sbb
and
mov
pop
mov
ret
movsl
repnz
je
daa
pop
pop
xor
push
dec
js
in
jae
jae
or
lods
out
inc
and
inc
pop
push
popf
mov
ret
aas
inc
popl
inc
and
mov
test
add
addr16
jns
cmp
insl
mov
shlb
jno
in
ret
into
xchg
mov
cmp
cmp
cld
orl
loope
dec
out
movsb
jg
mov
iret
call
sub
and
mov
fdiv
dec
jl
pusha
cld
xchg
fsts
ja
pop
pop
or
icebp
or
loopne
mov
pusha
or
add
div
xchg
div
orb
shrl
addr16
rorb
movsb
push
sub
jb
inc
gs
lods
mov
into
pop
push
mov
data16
lock
pop
mov
out
push
pop
pop
dec
add
shl
stc
fldl
ljmp
or
jae
cmc
or
sbb
ret
flds
xor
xor
xchg
pop
pushf
push
jne
and
jb
jle
lods
jecxz
jmp
mov
mov
adc
xlat
aam
inc
inc
insb
int3
xor
sub
pop
xchg
cld
push
cmp
and
or
push
sbb
jns
fsub
fmull
in
jg
xchg
sti
imul
cmc
test
xor
cmp
cs
mov
ds
jns
cmp
jl
add
aaa
jb
pop
in
insb
leave
aas
jmp
xchg
adc
imul
mov
fwait
bound
cmp
push
movsl
xor
or
xchg
mov
cmp
scas
in
lret
fxch
adc
jo
jae
pop
pop
clc
mov
cmp
mov
xor
mov
punpcklwd
xor
test
addr16
push
rcrl
pop
jp
out
xchg
pop
xor
add
or
dec
dec
push
sahf
lea
negl
adc
popa
es
hlt
xchg
in
test
enter
jp
test
stos
cmp
mov
xlat
fndisi(8087
or
stos
gs
sub
jmp
rcrb
jmp
in
inc
add
out
or
sbb
sub
test
or
movsl
int
pop
or
xor
or
xchg
fistpl
repnz
mov
pop
imulb
mov
xchg
add
test
testb
dec
cmp
lds
jae
das
mov
fdivrl
add
xchg
loopne
or
addr16
lret
jno
mov
lahf
repnz
cmc
cs
inc
mov
add
jmp
inc
orb
ret
test
mov
jg
lret
cmp
lods
insb
sbb
lret
in
je
lret
and
repnz
popa
lahf
fincstp
dec
lods
sbb
mov
xchg
and
mov
or
dec
into
sarb
adc
or
lods
mov
mov
js,pt
adc
or
hlt
bound
add
add
mov
xchg
dec
insb
pop
mov
lds
dec
int3
sti
aad
jle
add
cwtl
xor
jae
fimuls
into
and
pop
fs
sub
leave
loop
jmp
fisttpl
fmuls
jge
test
shrb
mov
ret
push
subb
or
or
scas
je
adc
frstor
stc
mov
mov
sbb
loope
pusha
adc
les
shrl
subl
pop
pop
add
jp
mov
sbb
and
mov
shll
xchg
adc
lret
dec
sub
mov
cwtl
dec
jns
std
and
mov
iret
call
insb
jmp
inc
cli
enter
dec
xor
mov
lds
cmp
push
jns
pop
or
fidivrl
jno
into
mov
lcall
mov
mov
out
pop
or
mov
icebp
inc
sbb
cmp
and
jp
mov
and
popa
jbe
sub
and
push
ljmp
mov
mov
or
test
mov
stos
lea
and
lret
sub
inc
push
xchg
adc
push
sub
ret
xchg
mov
jb
lahf
aaa
or
mov
pop
mov
mov
push
push
adc
sbb
push
fdivrl
sbb
dec
scas
xchg
ficoml
les
jb
or
dec
fsubl
push
in
cmpsl
or
mov
arpl
cvtps2pi
xor
inc
test
data16
pusha
inc
orb
or
cmp
bound
bound
and
xor
jbe
jge
loopne
rol
cwtl
gs
mov
or
push
add
adcl
xchg
rcrb
idivb
or
out
adc
sub
test
xor
sbb
into
aam
sbb
jbe
aaa
lahf
mov
cmp
ja
ds
mov
sbb
inc
sub
pop
sti
lods
lods
cmp
mov
mov
inc
dec
js,pt
es
ljmp
push
push
ja
ret
rcrl
mov
or
icebp
out
mov
inc
movsl
sbb
std
repnz
mov
sub
sub
inc
je
jmp
lcall
or
pop
cwtl
xor
mov
std
lods
enter
mov
mov
ja
lds
pop
pop
gs
mov
loop
add
or
dec
pusha
xor
fcoms
movsb
ret
mov
aaa
push
pusha
imul
adc
fiaddl
stos
stos
das
out
aam
sbb
sbb
imul
clc
in
scas
jmp
inc
mov
pop
movsl
adc
adcl
repz
test
push
not
out
mov
pop
ds
mov
jecxz
gs
mov
loop
pushf
mov
fildll
addb
xchg
sub
xchg
mov
fld
clc
dec
mov
mov
jmp
insl
or
fldl2e
dec
jp
es
mov
int3
movl
dec
push
dec
rorl
out
dec
adcl
jbe
jle
sarb
xchg
xor
das
dec
cmp
ret
ret
loopne
or
mov
pop
sub
std
mov
out
enter
jp
pop
jae
aad
push
sub
and
xchg
mov
dec
es
rolb
sbb
stos
ljmp
push
jge
xchg
jae
inc
loope
std
add
sub
ret
mov
sub
adc
xor
out
in
cld
jo
sbb
call
lahf
mov
lret
mov
mov
mov
addr16
fwait
inc
adcl
adc
mov
sbb
js
push
mov
xchg
xchg
lods
jle
test
test
lea
xor
sub
js
push
cmpb
jle
push
out
push
xchg
push
adcl
pushf
js
into
aad
std
into
cmp
insl
cmp
jae
dec
imul
loopne
pusha
sub
sub
subl
xlat
xchg
xchg
test
add
je
dec
and
inc
mov
imul
mov
test
data16
mov
inc
sbb
divl
push
sbb
mov
sbb
dec
cmp
jge
ss
sub
sub
push
pusha
jne
mov
pop
mov
xchg
cmpsl
jle
jb
addr16
add
pop
push
aas
mov
cltd
filds
ds
pop
push
shlb
xchg
call
cmpsl
clc
pusha
inc
scas
repnz
sti
jmp
xchg
mov
pop
negw
sbb
jle
call
push
and
push
fs
cltd
inc
fbld
jae
mov
jb
lea
jp
push
int
add
cmpb
add
out
sub
enter
lcall
xchg
iret
arpl
jb
rol
orl
push
popf
jbe
mov
lahf
in
lahf
or
out
int3
inc
pop
xchg
negl
push
xchg
jmp
dec
shlb
mov
add
dec
push
rolb
lahf
inc
iret
imul
or
int
fisubs
dec
jno
sub
std
pop
nop
mov
cmp
daa
xchg
adc
es
sub
pusha
mov
ja
xchg
lods
jbe
aad
out
add
ror
add
dec
mov
pushf
outsl
push
test
xchg
mov
out
jbe
js
or
adc
cmp
sub
push
movsl
insl
inc
sahf
lret
sahf
fistpll
addl
and
inc
fsubr
fists
inc
ljmp
rolb
repz
in
aad
repz
cltd
mov
push
and
fnstsw
mov
clc
scas
repz
in
jo
cld
add
adc
add
push
popf
je
mov
sbb
jg
out
push
add
dec
cmp
add
xchg
mov
cmp
adcb
xlat
and
sbbb
lcall
pusha
stos
sbbb
orb
clc
pushf
jo
andb
dec
insb
adc
mov
das
mov
jp
cld
jns
cmc
inc
sbb
ficoml
inc
xor
fs
xchg
shll
imul
ja
outsb
shll
jl
or
push
mov
pop
xor
mov
test
stos
push
and
rorb
adc
cmp
mov
cmc
lds
sti
sub
outsb
mov
fisttpll
xorb
lea
mov
pop
js
aaa
ja
adc
scas
sti
jge,pn
jbe
push
fwait
inc
in
push
sbb
cmp
or
aam
fists
out
popa
lock
out
xchg
loope
ss
jb
jmp
cmp
pop
mov
sub
hlt
cmp
call
outsb
aaa
outsl
jmp
aad
icebp
add
xor
or
inc
shlb
pop
ljmp
adc
aad
sub
xor
push
dec
lods
jl
jl
sbb
adc
push
or
xchg
shll
in
leave
mov
xor
xor
dec
call
movsl
xor
sahf
daa
mov
jle
or
push
je
mov
addr16
xchg
xchg
or
repnz
xor
cmp
push
lcall
mov
cmp
and
data16
add
dec
insl
lret
or
mov
and
nop
adc
fs
test
mov
xor
pop
int3
pushf
movsb
outsl
lock
dec
in
lods
mov
aad
jmp
out
mov
fimuls
mov
loop
mov
sub
imul
lods
xor
push
mov
addr16
mov
pop
scas
iret
fldt
imul
and
rclb
mov
push
stc
test
push
mov
sbb
jne
adc
dec
outsb
jecxz
xor
out
push
cli
jns
dec
sub
and
mov
out
xlat
test
jb
out
testb
arpl
xlat
jbe
ficoml
mov
sub
cmpsl
inc
imul
push
stos
in
adc
sbb
call
xor
dec
ror
mov
mov
dec
int
imul
jnp
xchg
mov
int
sbb
rclb
aaa
movsl
mov
push
sub
pop
xchg
cwtl
mov
xor
testb
call
loop,pt
sbb
push
jns
in
orb
inc
xchg
test
test
mov
sub
lret
imul
int
adcb
ljmp
mov
es
andb
repz
sbb
push
div
lret
clc
mov
ret
xor
cmp
inc
adc
call
std
ljmp
mov
pop
outsb
push
sahf
aam
mov
hlt
mov
imul
cmp
mov
sar
mov
jle
mov
jae
dec
cmp
fstpt
pusha
cltd
arpl
mov
dec
add
mov
sbb
in
xor
enter
movhps
xchg
orb
cmpb
je
inc
mov
mov
xchg
xor
frstor
pop
pop
add
or
fists
data16
push
out
je
pop
lods
and
sbb
xor
das
xchg
xchg
mov
pop
hlt
es
pop
xor
push
in
scas
sbb
jo
xchg
es
xchg
mov
rcll
mov
sub
lock
je
out
sbb
sub
aad
mov
inc
push
outsb
mov
rorl
outsb
test
in
aam
into
or
mov
jge
adc
arpl
pop
cmpsb
adc
dec
lods
mov
xchg
movb
push
sub
and
inc
in
adc
cmp
arpl
mov
ror
push
test
sbb
mov
xchg
mov
ljmp
cs
int
xchg
and
ret
jb
in
mov
or
ret
cmpsb
sbb
xchg
sti
xchg
mov
test
int3
sub
les
sub
jb
xchg
in
add
ret
inc
dec
call
popf
insb
push
inc
mull
xchg
sub
ja
xchg
cmp
and
mov
xlat
mov
fsts
leave
lcall
push
outsb
adc
or
or
pop
jg
dec
sbb
fdivrs
lret
cmpsb
inc
es
mov
leave
cwtl
popf
cmp
clc
xor
mov
mov
mov
mov
pop
lcall
add
add
fnsave
outsl
cs
enter
xor
mov
xlat
fcoms
xchg
stos
fidivs
scas
xchg
dec
jle
mov
into
mov
fistpll
or
pop
inc
xor
daa
dec
mov
sub
loop
xchg
mov
inc
mov
or
fadd
jb
outsl
add
popa
ret
outsl
sbb
gs
jae
mov
inc
sbb
inc
aad
cmp
gs
pusha
fwait
jns
subb
cmp
add
pop
mov
loope
cs
ds
xchg
push
xlat
sbb
pop
mov
mov
dec
xchg
lahf
movsb
jno
out
repnz
incl
call
jno
mov
cmp
insb
sbb
mov
and
push
jl
dec
xor
and
jae
andl
mov
xchg
mov
mov
in
sahf
jmp
sbb
sbb
pop
push
fcmovnu
outsb
push
popa
add
jge
or
jae
jl
jo
pop
ss
jno,pn
btl
and
pop
or
aad
test
xchg
icebp
pop
mov
mov
or
in
aad
add
test
loopne
cld
clc
ja
mov
jmp
test
adc
rcrb
xchg
mov
mov
aam
inc
out
call
mov
les
hlt
test
lds
ja
add
sti
cmp
mov
es
pop
fsubrl
cmc
test
in
xchg
aas
repnz
mov
jne
cmp
lds
push
push
mov
roll
dec
cmp
push
jmp
loope
hlt
dec
mov
lock
rorb
nop
sub
nop
lret
rcrl
pop
xlat
aas
movsl
lret
push
lret
mov
rol
inc
adc
sub
push
frstor
lods
dec
std
and
mov
and
mov
int
and
subb
xchg
mov
test
imul
test
or
xor
jg
adc
sub
jno
into
sbb
loope
xor
ds
and
pshufw
or
dec
ja
xchg
inc
mov
xor
add
jno
push
pop
sbb
jns
mov
pop
ret
mov
cwtl
repnz
pop
push
xor
or
jo
sub
lret
jno
adc
maxps
lret
lods
or
cmpsl
jl
jge
test
or
add
xchg
rolb
adc
enter
js
lods
pop
inc
sub
lods
rolb
xchg
mov
add
push
test
fnstsw
movl
cmp
push
shr
aam
cmp
insb
mov
and
scas
mov
xchg
mov
mov
leave
and
idivb
lret
lret
jno
inc
dec
sub
icebp
mov
addr16
pop
imul
mov
std
dec
addb
push
lds
imul
repnz
scas
jae
aas
rcr
push
jge
lock
loop
xor
repz
lret
ss
fsub
aas
sbb
add
das
clc
idiv
sti
sbb
add
xor
pop
adc
ds
inc
jb
lret
xor
das
cmpsl
jge
movsl
pop
jns
sti
test
adc
shlb
inc
sub
add
jo
push
out
in
sub
dec
and
pop
jne
dec
mov
sbb
push
xchg
push
sbb
lods
jbe
out
jp
insl
insl
jb
in
mov
daa
push
sti
sub
add
aam
pop
not
loope
or
aas
add
mov
jmp
loop
adc
jo
mov
pop
scas
jbe
sarl
lods
rcr
enter
mov
pop
jo
push
lahf
mov
in
lds
pop
into
inc
lahf
lea
pop
rcll
mov
je
jg
pop
sub
test
pop
mov
push
jae
es
and
pop
divl
test
movsl
ljmp
push
pop
movsl
jns
ret
or
cmpsl
pop
mov
sbb
xchg
filds
sbb
xchg
cwtl
cmc
repnz
scas
lods
sub
push
ljmp
xchg
and
cmp
shlb
adc
lea
inc
gs
mov
and
pop
fcoms
leave
pop
xor
mov
das
data16
int3
sub
repz
push
lea
or
push
out
pop
push
sub
inc
mov
ss
sub
js
xchg
clc
pop
mov
sbb
mov
cmp
cmp
loop
jno
js
xchg
xor
jmp
pop
addr16
and
movsl
mov
cli
mov
je
inc
inc
cmpsl
push
gs
fmulp
mov
mov
cmp
lods
imul
mov
or
shl
sub
inc
pop
push
inc
inc
fndisi(8087
ja
mov
jg
add
ja
mov
pop
aaa
addr16
sub
adc
jp
dec
fstpl
nop
and
mov
clc
sub
xor
cli
cli
jl
inc
or
xchg
dec
inc
scas
mov
loopne
jno
xchg
mov
orl
aam
testb
xchg
jp
stos
dec
sbb
cmp
adc
aad
ret
xor
mov
mov
cwtl
jmp
ret
sarl
lods
ret
mov
pop
xchg
scas
xor
int3
inc
add
or
test
or
stos
mov
stc
pop
xor
in
jbe
lods
stc
dec
mov
cltd
clc
enter
push
int
mov
inc
aad
mov
jl
xchg
iret
out
faddl
mov
add
push
pop
rcrb
in
lods
sub
inc
mov
sub
in
sbb
test
scas
mov
cmpl
adc
inc
cmp
lock
movsl
inc
mov
mov
dec
ss
je
push
jne
adc
sub
ret
inc
jns
pop
into
in
outsl
dec
iret
lea
lret
repz
adc
xchg
dec
scas
call
adc
popa
xor
pushf
mov
stos
test
es
insl
jmp
lret
adc
pop
test
fs
insl
lret
and
fwait
push
xchg
xor
mov
push
testb
xor
in
xchg
fs
loop
lret
push
xor
push
xlat
cmp
dec
or
mov
pop
and
and
and
xor
sti
cmp
cmp
movsb
rcl
into
pusha
jg
addr16
inc
xor
outsl
ljmp
or
test
xor
shlb
push
inc
sub
testb
and
lcall
sub
push
pop
iret
sar
aas
pop
mov
xchg
pop
cs
lods
sub
out
sub
jb
adc
sbb
int3
and
push
in
mov
and
add
push
das
mov
sub
cmp
sub
imul
and
lds
insb
mov
es
adc
shl
or
sbb
push
jp
or
dec
mov
sarb
shlb
test
dec
cmp
stos
out
add
je
in
test
das
test
adc
icebp
outsb
je
add
or
fstl
mov
adc
ret
pusha
in
loopne
dec
sbb
ret
clc
xor
cmc
int
jns
jge
cmc
jnp
mov
dec
xchg
jecxz
lods
cmc
xor
clc
idivb
mov
cs
notl
dec
dec
jecxz
std
or
jp
add
adc
outsb
data16
das
ljmp
pusha
shrb
dec
xchg
movsb
dec
cmp
xchg
test
hlt
pop
fimuls
mov
jl
pushf
mov
test
pop
xchg
adc
or
into
jle
arpl
adc
jbe
xorl
push
cmp
test
dec
imulb
addr16
daa
nop
dec
idivb
sub
fldt
mov
xor
lock
dec
or
sarb
fimuls
popf
imul
js
mov
dec
sti
arpl
repnz
mov
adc
lcall
pop
dec
sahf
mov
in
je
popa
ret
mov
xor
mov
sbb
adc
push
push
mov
ret
dec
push
setle
out
ret
sub
stos
inc
aaa
mov
jnp
mov
cmp
mov
jne
stos
es
push
xor
sub
outsl
call
sub
aaa
cmpsl
shlb
mov
mov
mov
jge
lock
loopne
mov
mov
or
out
push
push
dec
fwait
jns
mov
fwait
dec
rcrb
ja
cld
ret
jae
push
mov
pushf
cld
push
fs
add
cli
sbb
and
repz
in
sub
push
sbb
lods
out
imul
jbe
mov
cwtl
or
sbb
add
mov
es
sub
pop
pushf
sub
lahf
adc
das
ret
dec
cltd
pop
dec
repnz
jo
inc
loop
and
cld
or
push
or
and
mov
pop
mov
jns
mov
fsubrs
fwait
insb
mov
roll
jbe
movsl
outsl
fists
adc
nop
xchg
add
in
xchg
call
fmull
xor
addr16
push
lds
pop
aas
xchg
cli
sbb
pop
dec
fdivs
push
int3
inc
fidivrl
out
pop
in
nop
cmp
stos
gs
dec
push
pop
mov
rcr
enter
mov
pop
cltd
sub
inc
inc
mov
sub
cli
add
add
inc
cmp
mov
push
jb
adc
sahf
push
sbb
mov
shr
push
sbb
jg
ret
push
mov
xchg
outsb
call
sbb
fwait
pop
out
push
push
adc
xor
jmp
xor
inc
cmp
pop
and
lahf
mov
lds
sub
mov
jne
lret
sbb
dec
out
sub
int
sub
loop
and
and
mov
shl
mov
mov
lea
loop
dec
aas
cmp
loopne
fistpll
addb
das
jbe
popa
outsl
cmp
sub
pop
insb
mov
enter
lods
test
aam
bound
push
pop
dec
sbb
rolb
push
jg
aaa
les
mov
add
jbe
das
bound
xchg
les
loop
mov
imul
idivb
jno
pop
shr
dec
int
sahf
insl
dec
into
outsb
mov
arpl
pop
hlt
and
adc
pop
mov
or
fldt
je
mov
or
fistpl
jbe
outsl
imul
aad
idivl
cs
pop
je
cmp
xchg
sub
pop
xlat
insl
imul
mov
sub
mov
movsl
stos
mov
sub
std
dec
fnsave
sub
adc
mov
divl
inc
cli
ljmp
out
mov
mov
jo
add
xor
lods
xor
aaa
and
pop
add
cmc
xchg
mov
pusha
pusha
jae
pusha
fnsave
adc
popa
push
lock
faddl
out
inc
mov
push
test
ds
jae
or
cli
push
pop
xchg
imul
jns
push
mov
mov
mov
push
les
mov
insl
lret
lahf
fs
scas
scas
mov
jmp
ss
fists
and
fmul
mov
pop
dec
pop
mov
mov
mov
addr16
mov
add
ret
and
sbb
add
mov
xchg
jbe
cmp
mov
inc
sbb
push
enter
sbb
dec
outsl
scas
aad
sbbb
notl
cmp
ret
cmpsl
clc
xchg
loopne
xchg
into
movsb
sbb
loope
iret
inc
push
push
mov
cmpsb
mov
cs
push
mov
xor
xchg
fsubp
pusha
xor
jl
fucomp
cmp
pop
mov
ret
pop
push
xor
ja
movsb
mov
out
insb
pushaw
jbe
es
addr16
mov
and
mov
and
inc
ret
xchg
scas
xchg
in
sub
mov
repnz
push
dec
in
mov
or
dec
jno
mov
sti
hlt
push
push
in
lcall
or
int3
xchg
test
jo
stc
loope
lock
lcall
mov
hlt
jns
push
or
jp
push
xchg
repnz
adc
jns
adc
jle
repnz
mov
or
mov
outsb
jmp
sub
cwtl
test
in
imul
aam
xchg
jne
dec
jnp,pt
push
or
nop
and
jno
cmp
xchg
jp
or
mov
jecxz
leave
aas
adc
fs
nop
dec
sarb
addr16
mov
ret
sub
jne
push
seta
xlat
pop
and
test
pop
adc
sti
dec
adc
and
add
dec
pusha
cld
dec
leave
icebp
pop
loop
push
stos
fstps
shl
cmp
xor
inc
cwtl
rclb
imull
popf
pop
in
stos
scas
inc
and
sbbb
mov
cmpsl
adc
test
inc
or
cmc
push
lahf
mov
xor
or
popa
in
lock
arpl
les
add
add
sbbb
stos
outsl
cmp
add
data16
sub
adc
push
out
repz
xchg
mov
cmp
xchg
inc
mov
jmp
jp
lods
sahf
iret
je
outsb
inc
ss
loop
es
mov
imul
dec
ljmp
test
pop
mov
xor
pop
cld
adc
mov
pop
pop
jecxz
jp
repnz
sub
fnop
test
lods
leave
push
lret
sbb
cli
mov
cmp
jb
int3
sub
or
in
xchg
addr16
sbb
divl
rclb
aaa
or
xchg
testb
ds
leave
sub
dec
inc
lahf
int
loopne
shl
mov
dec
cwtl
inc
sbbl
loopne
inc
jbe
outsl
push
int
cmpsl
jbe
cli
adc
mov
movb
lcall
push
enter
mov
jle
mov
mov
leave
rcrl
xorb
cs
test
in
stos
mov
fidivrs
lret
sub
ret
jecxz
sub
out
movsl
lea
jns
cmp
mov
aas
loop
outsb
int
mov
mov
jb
stos
mov
pusha
or
or
xchg
mov
push
xacquire
stos
sub
sbb
mulb
mov
je
mov
mov
jne
ret
pop
dec
fisttps
lock
scas
mov
pop
mov
or
pop
mov
xor
sbb
mov
jne
es
std
mov
push
in
push
add
ds
cwtl
loop
mov
dec
inc
mov
scas
out
jmp
and
leave
scas
enter
pop
data16
aas
add
pop
out
push
jl
xchg
out
into
sahf
xor
test
add
or
mov
out
push
xchg
inc
out
cltd
pop
stos
push
std
sbb
cmp
lret
mov
gs
dec
test
imul
loopne
out
subb
addr16
popf
in
dec
fcoms
sarl
cld
xchg
and
xchg
loopne
stos
push
jne
stos
int
add
cmp
adc
shrb
push
sbb
jl
sub
jmp
repnz
jae
push
sbb
mov
sbb
add
push
mov
dec
pop
scas
iret
mov
ja
fcoms
or
aad
mov
jo
inc
and
int
pop
cwtl
es
or
cmp
cmp
fs
mov
fists
out
enter
dec
int
mov
jns
push
stos
in
xor
xchg
shll
mov
cwtl
negb
out
mov
push
inc
mov
xor
and
in
into
pop
pop
xorb
lea
lret
insb
cmpsb
popl
lea
enter
sub
or
pop
mov
lods
and
push
mov
out
pop
lods
jg
mov
test
clc
rcrl
inc
mov
out
scas
inc
jp
aaa
mov
adc
xchg
sub
adc
mov
insb
adc
cmpsb
ficoml
pop
cmpsl
andl
fwait
das
inc
out
cmpsl
jge
adc
jo
lret
lcall
icebp
or
mov
cld
xchg
and
repnz
imul
rcll
xchg
dec
test
mulb
aad
das
or
add
xchg
mov
mov
lcall
add
push
jbe
cmp
mov
xchg
inc
mov
mov
outsb
cmp
jns
das
sti
loop
pop
aam
cwtl
out
repz
pop
xor
xsaves
mov
notl
jg
adc
cltd
lahf
jns
adc
push
or
push
addr16
adc
scas
push
sub
sub
pushf
mov
insb
gs
mov
cmpsb
ds
loope
adc
xchg
nop
scas
addr16
jmp
out
mov
cli
mov
dec
fidivl
inc
faddp
shlb
sbb
mov
hlt
mov
cmc
arpl
jbe
mov
scas
fucomp
mov
shll
and
pop
mov
in
ficoms
pop
stos
pop
jecxz
sbb
fdivrs
xor
jmp
aad
fdivrl
adc
xchg
push
add
test
sbb
mov
lods
repz
or
inc
out
mov
cmp
push
rorl
mov
imul
sub
xchg
jmp
cmp
add
ror
dec
add
repnz
and
xchg
sub
jmp
sbb
and
cld
mov
push
and
cmp
inc
xchg
jmp
lret
sbb
movsl
mov
or
jo
ja
ljmp
in
jg
aas
movsl
test
call
ds
pop
ret
fs
in
jmp
hlt
xor
add
enter
add
pop
cmp
daa
sub
mov
je
fmuls
adcb
or
adc
mov
mov
pminsw
inc
and
sub
dec
xor
xchg
jo
jge
mov
mov
in
add
out
push
jmp
cmp
mov
or
out
ds
jecxz
insb
mov
mov
out
mov
mov
cmc
cmp
fidivl
mov
rorb
sbb
addr16
adc
mov
lea
or
ljmp
jg
outsl
or
fsubrs
mov
hlt
mov
xchg
iret
pop
sub
jno
fwait
jbe
subl
jae
adc
adc
cmpsb
jge
mov
cld
cld
pop
movsl
adc
pop
or
mov
pop
repnz
fs
stos
stc
push
push
movsb
mov
and
push
pop
mov
ja
mov
mov
mov
call
outsb
lahf
pushf
lret
and
push
fcompl
cwtl
clc
test
and
cmc
in
imul
call
fsts
ljmp
jnp
dec
mov
jge
push
mov
inc
insb
test
cmp
stos
mov
in
cmp
add
xchg
mov
orl
aad
movsb
loop
cmp
mov
shrl
negb
out
in
sub
mov
xorb
xchg
test
sbb
inc
dec
jle
repnz
inc
sbb
xchg
or
mov
xor
mul
jmp
mov
and
push
dec
lods
daa
add
scas
loope
jl
pop
push
pop
mov
mov
cmc
push
pop
inc
stos
test
lds
xor
es
scas
scas
jmp
aam
adc
xor
push
jecxz
add
sub
sub
mov
sbb
and
xchg
shrl
push
imul
mov
adc
or
rclb
test
lods
cld
ja
push
add
mov
popa
sub
pop
or
idiv
mov
enter
shll
fdivl
mov
pusha
push
jo
or
cmp
or
outsl
aaa
jnp
xchg
add
pop
in
add
or
mov
add
xchg
ljmp
mov
inc
sbb
pop
cmp
inc
push
xor
ljmp
nop
sub
mov
in
xor
push
out
mov
fnsave
fnstsw
jge
and
inc
ds
mov
loop
cmpsb
ja
enter
xchg
or
out
sub
stc
test
jno
cmp
les
xor
and
sbb
aam
xchg
xor
dec
mov
mov
mov
cmc
daa
imul
add
shrb
push
xchg
and
mov
flds
rcll
pop
jg
jb
int
lahf
push
xor
sub
mov
jl
mov
pop
mov
lock
enter
rcrb
inc
mov
or
icebp
jecxz
stos
or
hlt
inc
inc
xchg
pop
std
fld
repz
ret
jno
push
cli
sub
xor
fwait
inc
inc
xchg
push
push
mov
decl
and
insl
fldcw
fcmovu
pop
icebp
shl
cltd
gs
mov
jp
scas
xchg
insb
xor
cli
cmp
int
daa
push
outsl
push
jl
dec
jge
les
or
aad
sbb
iret
roll
mov
push
add
xchg
dec
xchg
movsb
loop
and
fs
xor
dec
push
ds
fistpll
out
aam
cli
jb
xor
adc
loop
stc
rcrb
xlat
sbb
mov
stos
or
sbb
jmp
cmpsb
nop
add
incb
cld
xor
push
jecxz
andl
cmp
fisubrl
mov
jle
pextrw
lahf
mov
aad
ja
idiv
jnp
imul
ds
jge
mov
sub
shl
jns
dec
shl
mov
dec
in
hlt
stos
aas
mov
bound
xor
sub
pextrw
cmp
and
dec
dec
out
xchg
push
and
repnz
dec
jge
or
mov
xchg
aad
test
stos
daa
inc
hlt
add
cld
test
call
out
mov
scas
and
pop
mov
fsubrp
jmp
loope
les
pusha
cwtl
inc
dec
pop
popf
cltd
dec
sbb
dec
mov
jbe
jp
inc
js
test
xor
and
loopne
sub
inc
or
jg
gs
lret
cltd
fstpt
pushf
push
mov
out
call
bound
sahf
fists
push
aaa
mov
jle
mov
pop
pop
sbb
mov
pop
js
pop
loope
push
jp
sbb
sti
cld
cs
sbb
decb
xlat
dec
sub
insb
mov
add
in
outsb
xor
repz
aas
mov
cmpb
push
xor
inc
ljmp
xor
mov
sbb
jmp
dec
jne
aaa
iret
dec
push
mov
adc
mov
jg
push
in
push
push
push
xchg
jo
cmpsl
daa
pop
call
daa
jbe
add
cwtl
shll
or
cmp
out
jae
aad
inc
push
xor
push
mov
pop
inc
inc
cmp
mov
mulb
inc
lock
js
fldcw
cmpsl
or
cmp
in
pop
inc
out
loopne
das
add
push
mov
ret
push
cmp
popf
aad
jno
outsl
cbtw
sbbb
mov
jl
cli
test
adc
orb
xor
mov
sahf
push
sub
add
jb
das
xor
nop
leave
negb
daa
lock
out
mov
es
in
cmp
loopne
mov
push
cmc
fiadds
xor
mov
jmp
movsb
outsb
loop
sub
sub
and
jecxz
push
sbb
mov
out
pop
fmul
mov
sub
jle
xchg
jo
pop
fs
jp
pop
fcoms
pop
hlt
shl
js
or
lods
fs
lea
lahf
cwtl
push
cli
cmp
iret
jmp
clc
pop
sub
setg
jp
popa
sub
jo
scas
mov
mov
mov
add
xor
test
add
mov
mov
xchg
sub
orb
loopne
les
repz
lea
shrb
sarb
int
movsb
cltd
cmc
test
push
cmp
push
jle
and
cli
rcrb
xchg
out
daa
and
out
lcall
aaa
jns
jecxz
scas
data16
mov
mov
xchg
out
lcall
dec
mov
sbb
hlt
outsb
mulb
int
idivb
imul
pushf
xor
and
adc
cmp
push
int
adc
rcrl
sahf
mov
sbb
cltd
stos
lock
inc
insl
xchg
push
in
and
push
aaa
push
push
mov
insb
popf
scas
inc
jae
mov
insl
add
vpaddsw
mov
and
sarl
lock
sbb
in
sbb
repz
enter
pop
dec
jle
mov
inc
inc
pop
mov
clc
xchg
cld
pop
ljmp
movsl
negb
push
push
add
in
int3
xor
push
cmp
mull
mov
pop
mull
sub
xchg
adc
gs
pop
repnz
je
out
cmpl
push
nop
daa
pop
cmp
inc
add
cmc
push
lods
subl
push
iret
popf
repz
inc
mov
mov
sbb
repz
gs
push
adc
push
xor
fimuls
xor
mov
shlb
fidivrl
sub
jns
popa
daa
sahf
sbb
clc
out
push
mov
sub
into
inc
inc
in
mov
adc
repz
gs
mov
pop
bound
mov
xchg
cmc
int
push
mov
push
dec
lock
dec
mov
pop
jge
clc
incb
aam
lcallw
sarb
gs
xorb
cmp
jbe
and
and
js
mov
int3
dec
mov
sti
xchg
ds
or
dec
cli
pop
sub
xchg
sbb
mov
dec
push
out
inc
adc
or
push
jne
inc
shl
daa
lcall
inc
mov
pop
cmp
mov
xor
xor
or
addr16
fimull
fidivs
fisttpl
pop
iret
xchg
cmp
icebp
push
jae
movsb
dec
xlat
cwtl
push
and
jecxz
dec
push
xor
mov
ret
ficoml
dec
ds
or
aaa
loopne
xchg
shl
gs
lock
xor
rcrb
movsl
testl
push
sbb
pop
add
cmpsb
sub
stc
mov
mov
jne
lea
jecxz
sahf
pop
out
test
dec
test
sahf
fistpll
rep
ret
xor
push
push
sbb
lahf
add
in
xchg
or
test
loope
mov
add
aam
lock
insl
in
pop
add
inc
mov
lock
ret
lcall
jnp
shrl
cmp
hlt
arpl
lcall
mov
test
pop
ret
mov
jb
arpl
xor
sbb
mov
loopne
dec
xlat
shll
jnp
imul
pop
sub
mov
es
cmp
sahf
je
mov
lret
xchg
lock
and
cmc
push
add
mov
mov
icebp
aam
adc
aas
or
iret
sbbb
incb
jmp
xor
and
cwtl
cmp
mov
lods
xor
sbb
add
fadds
lods
clc
outsb
sahf
cmp
sbb
push
mov
jecxz
mov
xchg
push
xchg
jns
nop
loope
insb
addr16
inc
mov
cld
mov
idivl
inc
stos
pop
and
adcb
push
rcl
xchg
adc
andb
adcl
xchg
sti
out
scas
pop
jle
js
xchg
pop
fistpl
clc
push
mov
cmp
and
push
or
jns
mull
mov
mov
adc
jne
fistps
popf
loopne
mov
dec
xor
and
dec
fmuls
push
or
inc
cmp
repnz
cmpl
in
add
call
jbe,pn
mov
add
cld
or
pop
push
mov
inc
mov
mov
jg
inc
add
fisubs
push
in
xchg
push
add
cmpsl
jp
loopne
test
push
aad
subb
xor
clc
push
ljmp
orl
loopne
cmc
mov
fs
fnstenv
xchg
dec
iret
ljmp
xchg
jbe
les
lods
movsl
scas
xchg
or
jecxz
jg
xchg
dec
icebp
test
mov
movl
cmc
fidivrl
sbb
hlt
or
das
lds
loope
cmp
xor
repz
push
mov
movb
push
out
cmp
andb
arpl
les
notl
into
and
mov
push
xor
jecxz
xchg
jl
ret
stos
cmpsl
dec
addl
hlt
sub
sub
mov
lahf
leave
in
add
ud1
cmpb
pop
sbb
lds
scas
fbstp
pushf
std
mov
andb
enter
pop
orl
add
test
adc
out
xor
cmc
test
xlat
mov
test
in
insb
nop
add
adc
hlt
sbb
imul
addr16
and
cmpl
stos
arpl
inc
xor
xchg
xlat
stc
mov
ret
mov
decb
lcall
js
xor
sbb
das
test
adc
pop
imul
pusha
sub
lret
lods
cmp
xchg
sub
mov
adc
mov
or
adc
mul
xchg
fidivl
inc
sub
fstl
scas
cmp
cltd
imull
popf
jne
push
stos
or
in
pop
sbb
lret
addr16
ss
mov
or
push
loope
jnp
xchg
sbb
gs
imul
in
nop
inc
in
int
mov
jecxz
aas
fnstenv
cmp
cmpsl
enter
stos
jmp
leave
and
push
xor
mov
sahf
or
and
push
adc
mov
fadds
inc
push
fcomip
in
aaa
and
insb
adc
inc
cs
popf
cmp
inc
cmp
loop
mov
out
gs
push
mov
popa
xor
sbb
rcrl
mov
rcrb
xchg
inc
lret
cmp
mov
sub
xchg
int
arpl
push
adc
fs
lods
loop
sbb
jl
pop
cltd
jg
cltd
addr16
push
jmp
lods
inc
xor
jbe
aam
and
jns
sub
in
xor
daa
lret
push
add
add
ret
loope
xchg
adc
push
in
xor
test
fnstsw
mov
fsub
or
mov
lahf
or
cmpsb
inc
rcrl
in
ret
cmpl
pusha
loope
sub
test
jnp
or
and
fnstcw
mov
ljmp
adc
xlat
mov
push
lcall
sub
xchg
dec
lds
rcrb
imul
mov
movsb
int3
and
jg
or
pushfw
sub
xchg
icebp
xorb
sub
xor
ljmp
mov
imul
sbbb
loopne
jno
adc
jmp
mov
test
rcrl
jge
add
mov
fisttpll
jle
xor
add
mov
int3
add
pop
xchg
sbb
outsb
mov
aam
test
ss
dec
icebp
mov
ds
hlt
sbb
fs
pop
cmp
jl
je
or
out
cld
mov
pushf
pop
popa
or
fidivs
cmpsb
and
dec
lret
sbb
inc
int
adc
mov
xchg
inc
fidivl
sti
in
adc
sbb
mov
lret
cmp
push
jb
inc
sbb
mov
hlt
popa
fdivl
ja
mov
xor
sti
pop
jle
fcompl
inc
test
stos
shlb
cmp
jno
inc
pop
pop
jp
xchg
jecxz
lcall
int3
fldl
cmp
cwtl
pop
lahf
adc
pop
nop
shr
fisubrs
stos
mov
or
je
cmp
imul
push
pop
pop
xchg
adc
lock
out
iret
or
or
leave
ss
sub
jp
aad
jl
loop
sub
dec
pop
aad
jo
mov
jl
loop
xchg
pop
cmp
not
adc
das
jl,pn
cld
dec
lahf
mov
mov
cmc
push
xchg
lcall
orl
shlb
xchg
das
or
ret
jmp
loope
cs
mov
loop
test
mov
jne
mov
jbe
mov
fsubs
aam
xor
ficomps
push
int3
sub
mov
jecxz
mov
xchg
lcall
cmp
outsl
or
xor
gs
xchg
cltd
push
push
sbb
les
cmpsl
not
jecxz
pusha
insb
xlat
lds
fbld
int3
cltd
aam
or
je
mov
jne
insb
mov
movsb
mov
cmp
push
lahf
and
lahf
fldcw
or
ljmp
adc
scas
lret
insl
mov
pop
xor
xchg
and
mov
dec
jae
nop
ja
mov
jge
mov
dec
aad
xchg
test
stos
ds
ljmp
scas
je
and
je
lahf
in
and
repnz
movsl
sbb
adc
mov
push
or
stos
cli
add
fsubl
into
pop
adc
xor
outsl
xchg
in
push
inc
pop
and
mov
push
mov
or
mov
flds
repz
jg
xor
std
gs
xlat
scas
jl
psllq
inc
dec
jnp
or
fs
dec
jno
add
mov
cwtl
fcompl
scas
loope
mov
bound
mov
cld
and
add
imul
aas
repnz
mov
mov
repnz
pop
adc
pop
insb
jo
pop
iret
or
pop
fiadds
das
inc
movsb
les
mov
aam
test
pop
out
into
bound
xchg
mov
push
lcall
pop
andl
xchg
sub
fwait
lock
adc
inc
stc
pop
jmp
xlat
xchg
mov
negl
aas
jae
mov
adc
imul
xor
sbb
clc
cmp
lret
inc
pop
xchg
out
sbb
stc
sbb
push
dec
jne
xorb
dec
clc
fistpl
stc
lahf
loopne
cmpb
aas
xchg
gs
sbb
adc
fwait
loope
bound
aaa
movsb
hlt
dec
cmp
aam
insl
movsl
ret
std
pop
xor
xchg
mov
sahf
push
clc
mov
cmpl
sub
add
pop
xchg
flds
cmp
push
xchg
xchg
add
js
inc
xchg
arpl
push
cmp
cmpsl
push
leave
cmp
jnp
or
add
loop
cmp
loop
mov
sub
pop
cmpsb
movsb
popf
loop
roll
dec
push
add
std
stc
icebp
fistl
fistpl
mov
mov
add
mov
repnz
xchg
scas
loopne
push
test
mov
mov
mov
outsb
in
decl
inc
mov
shrb
xor
je
das
dec
cmp
das
cmp
cmp
sbb
pop
inc
idivl
xor
rorb
mov
lahf
test
scas
sbb
inc
add
xchg
out
insl
xor
test
jne
mov
mov
fcoml
lahf
and
sub
xor
push
push
repz
xchg
inc
pop
in
add
xchg
inc
out
dec
cmp
add
xchg
or
stos
add
and
into
mov
add
aas
pop
lahf
dec
mov
sub
pop
cwtl
scas
js
clc
inc
mov
lret
int
lret
int3
ret
mov
out
divb
clc
mov
dec
fwait
sbb
pop
or
mov
call
lods
jp
mov
inc
sub
sub
and
icebp
or
jp
cmp
mov
aad
pushf
xchg
in
fsubr
mov
nopl
fs
leave
add
imul
les
fs
sub
add
or
push
mov
xchg
clc
mov
mov
imul
lds
inc
cmp
hlt
mov
call
xlat
push
fstpt
and
sarb
jg
mov
popa
mov
jne
popa
dec
sbb
hlt
aad
pop
mul
add
hlt
shl
sbb
fistpll
cmp
push
cmp
movsl
iret
xor
xor
inc
ret
inc
add
mul
dec
adc
repz
or
pop
gs
test
stc
jb
and
xchg
sahf
inc
lahf
in
insb
aad
adc
push
xchg
shl
mov
adc
ss
mov
cli
sbb
ret
xor
push
mov
enter
sbb
jmp
mov
mov
movsl
mov
adc
cmpsb
add
xlat
sub
mov
inc
fistps
mov
lret
mov
ljmp
inc
bnd
js
cmpsl
loopne
jp
out
or
lds
addb
test
dec
push
shll
popf
clc
bound
dec
cmpsb
in
push
movsb
jbe
imul
inc
xor
jnp
push
dec
mov
or
fcmovu
into
mov
push
jmp
mov
stos
mov
cmp
jle
and
and
mov
aaa
dec
rcrb
push
pop
loop
and
les
mov
rorl
pop
push
mov
mov
sub
push
or
sbb
test
inc
cmpsl
lret
cmc
xchg
lds
aam
sub
imul
xchg
in
idiv
jnp
arpl
mov
int3
fidivl
jl
mov
inc
int3
scas
pop
xorl
inc
rcll
aad
lea
dec
fisttpll
cltd
call
stos
inc
mov
pop
jno
inc
xchg
fwait
sub
jb
pop
popa
lds
push
das
adc
addr16
loop
mov
imul
mov
mov
add
push
inc
cli
adc
adc
shl
popf
push
mov
rorb
mov
sbb
inc
ljmp
test
fsubrp
pop
test
lret
mov
or
insb
mov
push
test
sbb
inc
pop
mov
xor
add
lock
mov
fadds
push
ja
test
test
pop
and
jge
movl
pop
loopne
push
aaa
mov
cmc
shrb
test
sti
ret
out
sbb
cmpsl
faddl
ljmp
roll
out
enter
cmp
rcrl
fwait
test
and
in
das
adc
adc
lea
out
in
cmp
pop
pop
sbb
pop
ljmp
lret
add
in
nop
pop
mov
mov
dec
mulb
scas
test
dec
pop
sti
adc
popf
pop
shl
mov
jl
dec
setbe
rorl
xchg
iret
jnp
ljmp
fs
cmp
pop
in
mov
out
sbb
mov
stos
ljmp
jbe
and
dec
push
out
jne
lods
xchg
or
daa
cld
dec
add
push
sarb
imul
stos
addb
shlb
sbb
test
iret
or
call
push
mov
mov
fnsetpm(287
call
mov
mov
out
sub
and
mov
xchg
adc
adc
mov
xor
xor
ds
or
bnd
arpl
je
sub
push
or
dec
decb
mov
pop
mov
fbld
xor
ficompl
and
jne
out
mov
ss
rclb
dec
dec
xchg
sbb
mov
xor
repz
into
or
in
xlat
incb
sbb
cmp
hlt
imul
sub
test
cmpsb
cmp
push
test
sub
mov
cltd
jg
inc
stos
cmpsb
push
into
bnd
xor
out
je
je
push
sub
sbb
mov
mov
pop
test
jp
adc
add
or
pop
aad
and
xchg
pop
mov
fdivrs
push
xor
mov
jge
hlt
xchg
orl
sbb
rcll
and
icebp
cs
push
jns
sbb
les
xchg
cmp
push
repnz
ret
nop
bound
shl
push
pop
addr16
hlt
push
sub
rclb
test
cld
sbb
out
insl
lahf
adc
loope
xor
cmp
dec
les
mov
mov
cmp
lret
icebp
jns
mov
out
out
and
mov
stos
sbb
daa
mov
jnp
shll
pop
inc
add
rol
testl
fdivrl
mov
movsb
cmpsl
in
or
xchg
mov
ret
jnp
insb
jo
hlt
lods
pop
adc
inc
mov
mov
std
adc
sub
lahf
outsb
mov
push
inc
push
in
mov
add
aad
mov
sub
inc
mov
nop
xor
fdivrl
and
inc
fistpl
push
jns
fidivl
movsl
jns
fadds
or
out
js
insb
sub
sbb
lods
testb
cmp
xchg
mov
mov
mov
pusha
mov
fsubs
mov
pop
cmp
out
inc
mov
outsl
and
sbb
movsl
mov
and
in
popf
das
cmp
or
aaa
push
jle
cmp
push
arpl
cmp
lock
sbb
mov
mov
sub
or
lahf
jp
mov
dec
je
cmp
mov
aaa
and
add
lahf
jnp
add
xchg
xor
ss
inc
scas
pop
or
push
push
or
xor
mov
pop
pop
enter
adc
sub
sbb
or
or
sub
cmpb
or
xor
je
adc
cmp
inc
mov
cld
je
aaa
fstps
inc
pop
mov
cld
mov
sbbl
or
out
jae
shlb
fstp
mov
mov
sbb
repz
mov
xchg
mov
dec
mov
adc
daa
test
das
mov
inc
jecxz
jecxz
jmp
cwtl
xchg
cli
loop
mov
or
in
popf
sbb
div
xchg
add
push
sbb
mov
sti
mov
sub
bound
add
cwtl
ret
add
and
roll
loopne
and
mov
or
insl
jg
lea
jbe
xchg
test
xor
fmuls
or
arpl
xor
mov
pop
jmp
sarb
pop
insl
out
sub
shrl
movsb
push
hlt
xchg
mov
out
xchg
lds
iret
cmp
int3
xchg
pop
pop
iret
xchg
fdivrs
jns
and
fstp
sub
ret
pop
popf
clc
push
jae
sub
push
popf
nop
movb
mov
pop
cmpb
jmp
cmp
jbe
lahf
in
cmpsl
out
xlat
leave
or
jno
jg
sub
je
xchg
adc
ja
pop
scas
dec
sub
ret
inc
gs
jmp
mov
test
adc
inc
inc
dec
cmpsl
and
call
add
ret
xchg
push
ds
lock
xor
ret
rcrl
imul
or
mov
push
lcall
push
pop
imul
popf
fwait
xchg
mov
xchg
push
sub
xor
and
add
lcall
addb
cltd
cmp
xlat
mov
pop
mov
push
leave
lahf
cmpsl
cmp
lods
cmp
mov
jmp
cmp
divl
arpl
mov
lahf
fnstcw
movsb
pop
inc
pusha
pop
stc
sti
dec
fs
gs
sbb
sub
fistps
sbb
inc
cli
stos
sub
adc
push
ja
dec
pusha
sbb
adcb
aaa
nop
ds
fwait
movsl
mov
jp
mov
inc
sbb
xchg
push
sbb
push
xor
adc
loop
out
cmp
inc
pop
xchg
lds
dec
hlt
jns
sbb
das
xchg
cmpb
mov
xor
das
sbb
sub
rep
daa
jnp
mov
dec
idiv
jns
sub
lret
dec
mov
fdivrs
ror
mov
loope
push
negl
fcompl
pop
stos
pop
push
lret
add
stos
mov
roll
imul
adc
push
hlt
loop
mov
sahf
pop
xchg
fisttpl
cmp
test
jo
gs
pusha
fisubl
inc
mov
pop
mov
adc
or
in
xor
pop
outsl
roll
mov
xchg
cli
incb
cmc
clc
adc
call
and
push
xor
aad
movsl
fiaddl
jp
into
push
dec
cmp
roll
cltd
mov
int3
shrb
aaa
cmp
test
shlb
adc
jg
inc
mov
and
out
cmp
dec
push
and
stos
sbb
mov
sbbl
adcl
mov
inc
pop
mov
xor
mov
loop
inc
adc
sub
pop
sar
sub
shrl
shlb
ficoms
sub
cwtl
and
sti
nop
sub
push
in
and
ret
cmc
cmp
dec
in
mov
repz
xchg
rolb
mov
push
lds
repnz
mov
dec
addl
jnp
cmc
mov
out
mov
cmp
xchg
stos
ds
inc
popa
push
mov
add
in
xor
xor
lock
jle
push
je
jbe
leave
dec
idivl
pusha
insl
adc
lock
pop
stos
shrb
dec
cwtl
and
jbe
mov
add
dec
add
and
push
jno
rcll
inc
adc
clc
mov
loope
push
and
out
inc
jp
xchg
fstpt
lock
out
and
sbb
add
mov
sub
or
lea
jbe
sub
dec
cltd
push
or
clc
dec
scas
or
mov
rcll
push
xchg
iret
stos
cmp
xchg
bound
sarl
aas
das
dec
dec
ja
push
xor
inc
nop
xor
addr16
inc
adcl
xlat
filds
stos
sub
or
sahf
data16
dec
xchg
mov
es
add
jb
dec
sub
mov
idivb
icebp
popa
nop
insl
fldcw
xor
and
popa
sbb
dec
mov
add
fisubs
out
aad
pop
mov
ljmp
mov
xor
rcl
and
mov
mov
xor
pop
lret
inc
loop
jbe
cmp
xor
and
xchg
mov
and
adc
pushf
mov
pop
inc
mov
stos
test
js
in
adc
add
jle
and
and
xchg
adc
dec
jb
test
ret
add
roll
das
mov
sbb
inc
imul
pop
mov
stos
addr16
ficoml
sub
insb
pop
mov
test
dec
sub
testb
xlat
mov
lret
add
repz
inc
jo
push
hlt
inc
clc
mov
jl
loope
jns
pop
xchg
mov
xor
xchg
scas
inc
lock
std
push
imul
xchg
loopne
cmove
or
insl
call
test
push
sub
rcr
lcall
adc
iret
enter
push
testl
fs
push
sbb
jp
xchg
mov
jns
and
pop
sahf
lret
int
mulb
add
aas
hlt
or
mov
imul
xchg
out
cmp
cmp
add
mov
stos
nop
outsb
jmp
push
dec
inc
sti
daa
push
mov
out
jg
imul
lcall
shrb
xchg
ret
decb
xor
jge
cmp
popa
push
xchg
fwait
in
mov
lret
mov
xor
inc
push
xor
push
jo
stos
sbb
sub
and
popf
neg
int
mov
fisubl
sub
test
or
mov
repz
cwtl
shl
imul
mov
or
and
sub
jb
fidivs
int3
mull
mov
mov
lcall
mov
cmp
push
pop
jae
jl
imul
lock
rcrb
pop
es
inc
mov
xor
testb
mov
mov
vpsubusb
sarl
cltd
inc
aam
mov
jae
or
push
pop
xchg
sub
das
mov
jb
adc
and
sub
push
xorl
loopne
or
pop
paddsb
je
or
rol
je
jp
mov
in
mov
sub
cmp
add
in
fprem1
js
pusha
mov
xor
rorl
sbb
sarb
dec
rorl
lods
sub
sbb
out
lret
data16
mov
in
sub
stc
jg
xchg
in
sub
scas
daa
sub
rcrl
mov
inc
fistps
sbb
sahf
push
fimull
xchg
push
fiadds
jno
ret
icebp
or
sub
jmp
mov
sub
filds
and
std
lcall
subl
ficoml
ret
lods
movsb
outsb
jnp
mov
push
pop
mov
mov
sarb
pop
lea
push
fwait
and
insb
decl
icebp
fsub
xlat
xchg
lds
add
in
mov
aas
fsubs
fnstenv
and
jecxz
and
or
js
andl
xor
int
sub
push
arpl
or
bound
mov
jg
mov
lods
and
mov
push
cmpl
xchg
sub
sahf
clc
jmp
fnstenv
test
test
and
push
aam
adcl
inc
lods
cmp
xchg
xchg
push
pop
mov
mov
xchg
push
sbb
jle
pop
adc
jns
subb
repz
dec
pop
daa
dec
mov
pop
sbb
scas
cmp
and
inc
cmpsl
pusha
jl
loopne
mov
in
lret
and
sbb
inc
sbb
push
js
dec
push
je
sahf
aam
arpl
pop
int
cmp
fstpl
mov
int
adcb
push
push
scas
sub
inc
and
shlb
sbb
sbb
stos
or
into
push
mov
roll
dec
add
and
adc
push
shl
dec
mov
adc
out
imul
sbb
test
lods
lods
leave
inc
or
push
mov
lock
pop
mov
push
xor
dec
sub
int3
mov
pop
or
mov
shll
sar
mov
pop
cmpb
stc
cmpsl
repnz
je
hlt
das
movsl
mov
inc
aas
cmp
dec
das
dec
jne
mov
jp
mov
pop
jb
mov
mov
sub
int3
or
rcl
mov
mov
and
pop
jb
cmp
cmp
add
loopne
inc
packssdw
jbe
ja
push
addb
das
fsubrs
sbb
mov
jg
mov
popl
std
data16
lcall
rcrb
dec
fidivrs
stc
add
data16
adcl
jns
in
pop
es
testb
fbld
ljmp
notb
cmp
cli
arpl
xlat
inc
lahf
dec
mov
scas
inc
stos
das
int3
push
shlb
ljmp
test
cmp
test
clc
mov
bound
dec
insb
repnz
xchg
push
clc
mov
pop
mov
xor
cmp
mov
lds
pusha
or
sub
movsb
out
adc
push
push
and
cmc
xor
es
fisttps
dec
mov
lods
jmp
insl
adc
jo
mov
pop
aam
in
roll
pop
clc
mov
dec
dec
rolb
mov
add
fs
add
sub
xchg
test
sub
repnz
stos
vmwrite
insb
mov
inc
enter
int3
add
pop
jle
aam
push
and
push
jno
xchg
arpl
add
iret
sti
xor
pop
js
call
test
mov
mov
mov
xchg
in
xchg
iret
cli
or
icebp
cli
xor
ds
and
mov
xor
outsb
jg
jae
cmp
icebp
shll
test
adc
xchg
ror
jmp
and
xlat
ret
xchg
cmpsb
fstl
fdivrl
fisttps
jns
sub
out
mov
lahf
adc
mov
test
pushw
or
push
mov
insb
cld
xchg
and
es
or
cmp
cmp
inc
dec
pop
ss
xor
cmp
pop
aad
cld
imul
jp
bound
mov
xchg
movsb
es
add
mov
dec
inc
push
adc
movsl
aas
mov
mov
xchg
xchg
aaa
daa
jae
cmc
xor
ja
pop
scas
xchg
nop
jle
pop
mov
mov
add
pop
sub
dec
mov
push
xchg
lret
pop
sub
ds
or
or
cli
popf
push
adc
dec
data16
push
xchg
iret
imul
and
insb
repnz
xchg
cld
cmp
mov
jo
lret
enter
add
adc
int
movsl
pop
xorl
insl
pusha
cmp
or
push
popf
cmp
jbe
je
lahf
imul
dec
loopne
add
adc
sbb
enter
pusha
loopnew
insl
les
add
mov
leave
dec
dec
imull
cmp
out
outsb
bound
jle
fdivr
mov
es
rcrl
hlt
nop
sbb
xor
jecxz
xchg
jmp
jo
loopne
movsl
dec
mov
or
movsb
rcll
sub
aad
xchg
icebp
add
ficompl
stc
push
inc
jp
sahf
rcrb
lods
mov
fisttpl
adc
ror
push
sbb
ficoml
lret
dec
nop
lea
popf
xchg
jl
jbe
sti
xchg
dec
bound
mov
adc
cmc
mov
fs
xor
in
jbe
orl
adc
sub
fstl
inc
cwtl
lods
shrl
ljmp
subb
addb
or
xor
ret
fstl
mov
xchg
adc
dec
jnp
lcall
rcll
or
xchg
add
bound
jp
movsb
cmp
pop
jne
arpl
test
ja
jb
xor
orl
cmpsb
es
dec
sub
lds
cmpsl
fnsave
jno
lods
mov
mov
adc
cs
hlt
daa
add
mov
push
pop
sub
outsl
jae
pop
and
pop
rclb
hlt
call
ret
out
sti
jo
iret
adcl
cmp
imul
lods
inc
adc
sub
mov
ds
cmp
pop
mov
lahf
movsl
xor
xchg
jl
ficoms
repz
add
adc
sbb
les
jmp
jo
aas
ret
mov
hlt
cmp
cmpsb
pop
out
fidivrl
lret
pop
mov
nop
out
add
xor
mov
dec
scas
repnz
jb
inc
mov
nop
adcb
loopne
fwait
mov
jle
jp
cmpsl
cmpsb
insl
mov
add
and
fnsave
sbb
pusha
dec
xlat
push
xchg
aam
sub
setge
scas
test
push
push
rcrl
or
or
pop
fmuls
stos
mov
mov
cltd
xor
scas
frstor
sbb
xor
xchg
dec
mov
testl
sbb
jg
adc
lds
pop
arpl
pushf
xchg
push
repz
test
add
orl
mov
inc
inc
adcb
dec
mov
xchg
sub
daa
xchg
rcrb
fdivrs
mov
ficoml
or
cmp
into
mov
pop
sbb
bound
stc
mov
mov
push
mov
hlt
mov
xchg
outsb
mov
gs
dec
pop
push
mov
loop
xor
data16
stc
mov
mov
mov
je
into
mov
mov
cs
cmpsb
iret
sub
fs
jmp
pop
outsl
inc
xor
mov
subb
lods
adc
and
rorl
xchg
xor
mov
xchg
jp
or
sub
mulb
jbe
push
dec
int3
cmp
adc
sub
sbb
in
dec
outsl
mov
jmp
adcl
jnp
sbb
push
clc
xor
cwtl
xchg
lcall
rcl
scas
mov
mov
pop
xchg
clc
outsl
fisttpll
and
inc
and
cmp
lret
jne
je
imul
or
adc
cmc
push
lret
pop
xor
orb
mov
pop
pusha
xchg
cmp
ja
mov
dec
cmp
cld
loope
popf
push
repz
cmp
sub
adc
aam
int3
adc
pop
stos
inc
test
xchg
xchg
lret
mov
sub
or
inc
mov
xchg
cmp
fwait
shlb
lahf
mov
mov
jb
fisttpll
adc
pop
pushf
pop
cs
movsl
push
inc
movsb
stos
iret
stos
test
inc
mov
jecxz
adc
insl
xchg
stc
lods
jae
fscale
test
pop
lods
or
ja
jl
ds
insb
mov
jl
sbb
mov
lret
push
push
add
sub
cmp
mov
inc
imul
mov
out
dec
outsl
mov
push
in
push
insb
lds
jnp
sub
sub
or
cmp
adc
cmp
pushf
xor
or
mov
lret
mov
lahf
pop
lock
sbb
xchg
jle
mov
sbb
mov
adc
xorb
arpl
xchg
adc
pop
test
mov
rorb
sbb
mov
cmpsb
xchg
sub
pop
pop
fs
mov
xchg
in
mov
jge
into
cltd
sahf
dec
sub
push
insl
iret
xchg
or
xorl
stos
test
bound
nop
sbb
sub
pop
shlb
ret
or
jg
mov
pop
ret
inc
lahf
aaa
outsb
mov
mov
push
add
lods
andb
gs
and
aas
frstor
gs
pop
inc
cmp
es
mov
jmp
lret
jp
cmc
jno
ds
xchg
neg
or
push
lds
into
je
pop
and
mov
pop
push
cli
dec
and
movsl
andl
jl
cmp
ss
adc
sub
add
dec
sahf
leave
cli
mov
xor
popf
push
in
xor
push
ret
out
pop
inc
ret
in
out
ror
test
subb
rcl
cmc
xchg
and
loope
notb
xor
ja
lret
mov
ljmp
cmp
out
pusha
xor
sti
sub
and
jo,pt
sub
out
sub
mov
adc
xchg
imul
push
mov
mov
inc
xor
mov
outsl
andl
cwtl
cmp
sbb
pushf
or
cltd
aam
add
push
push
sub
loope
stos
push
pop
lods
ret
insb
cmp
bound
sbb
sbb
cld
loopne
jmp
or
insl
sti
gs
push
fbld
mov
int3
movsl
fsqrt
jge
lock
push
sahf
test
jno
insl
mov
stos
sbb
test
cmp
insl
insb
sbb
imul
inc
mov
or
ljmp
dec
lret
out
dec
lds
testb
pop
add
and
test
sar
push
into
stos
xlat
ljmp
cmp
xor
fsubs
dec
mov
lds
inc
jbe
out
lea
into
repnz
lahf
xor
push
in
xor
nop
sub
push
xor
xchg
rorb
lock
in
xor
ja
and
sbb
push
call
dec
sbb
cld
or
les
push
fnstcw
or
and
xor
ljmp
stc
movb
jbe
inc
aas
and
test
sbb
int
pop
xor
enter
add
push
aad
pushf
test
orb
subb
out
in
mov
ret
sub
imul
or
aad
push
sub
mull
dec
sub
cld
jp
icebp
std
mov
pop
cld
scas
outsb
pop
or
imul
pop
mov
ds
mov
jno
or
or
test
mov
fdivrl
xchg
test
lahf
insb
jae
lock
outsl
es
sub
fstl
nop
ret
sbb
or
dec
test
rclb
sub
mov
out
dec
xchg
add
push
inc
imul
lcall
xchg
nop
jb
rcrl
scas
sub
testb
or
rsm
push
push
and
mov
loopne
bound
mov
negl
push
les
mov
imul
inc
cltd
pop
jle
test
out
daa
rorl
and
push
daa
ja
push
xor
push
dec
jge
aas
mov
push
sub
int
ret
adc
pop
dec
out
jo
and
sbbl
ds
mov
mov
push
leave
fstpl
enter
iret
or
repz
cmc
cld
adcb
repnz
js
lahf
sub
mov
fldcw
pop
xor
add
mov
in
push
mov
mov
fstl
lods
fisubs
es
push
ffreep
inc
aas
shl
scas
es
pop
lahf
xor
out
bound
and
or
mov
adc
pop
sar
jae
fldenv
sub
out
push
aaa
and
aas
call
in
push
mul
jae
or
aas
inc
fidivs
cmpsb
ret
push
mov
andb
sbb
into
jge
test
xchg
mov
dec
sbb
mov
lds
add
aam
out
out
aad
cwtl
mov
push
add
out
cmpsb
in
movsl
jns
push
xor
xchg
ja
pop
stc
mov
mov
jmp
orb
mov
jbe
jge
push
rolb
rorl
xor
icebp
sbb
out
add
push
loope
popa
dec
mov
in
mov
clc
xchg
inc
ret
dec
pop
cmp
in
mov
adcb
leave
jo
das
lret
outsl
mov
xor
test
add
sarl
add
sub
sbbl
shll
xor
fildl
ret
sti
mov
jecxz
push
cltd
sarl
jo
nop
mov
cmpsl
adc
aaa
enter
xchg
push
push
fxch
call
dec
jp
in
xor
movsl
int
fwait
xor
pop
imul
icebp
jbe
ret
pop
inc
lret
mov
xlat
mov
in
mov
insl
dec
sbb
jle
jle
xor
pusha
push
mov
fidivs
dec
ds
pop
mov
sbb
sbb
mov
pop
test
dec
cmp
mov
inc
mov
nop
das
jle
xchg
filds
jp
xlat
lahf
out
je
inc
mov
aad
ljmp
sbb
push
pop
pop
sub
mov
lods
adc
outsb
scas
mov
orl
jns
push
dec
xchg
mov
adc
bound
mov
cmpsb
and
testl
mov
aas
or
mov
in
mov
inc
mov
or
and
hlt
jae
lea
rcll
test
jmp
out
test
iret
fimuls
or
xor
add
or
pushf
or
aas
inc
xchg
adcb
xchg
and
cmp
jg
push
cmp
push
sbb
cmc
enter
sahf
daa
sbb
shl
rcr
jo
or
loop
imul
pushf
sub
xchg
sub
push
or
cltd
es
adc
or
xor
xor
dec
fwait
sbb
lock
pop
mov
jne
mov
adcb
outsl
cmp
lahf
je,pn
or
jns
mov
mov
pop
mov
cld
jnp
stc
push
mov
loop
add
xchg
mov
fwait
xor
sub
les
imul
mov
stos
mov
sahf
ds
and
test
fiadds
out
mov
sbbl
sbb
mov
ljmp
fadds
mov
xlat
call
mov
sbb
sub
int3
mov
mov
sbb
jnp
push
fsubl
xchg
mov
fcompl
mov
ds
dec
mov
mov
jno
mov
loopne
cmp
or
sahf
pop
or
jg
jo
addb
fwait
push
dec
rorb
scas
loop
or
xor
mov
xor
outsl
jmp
adc
pop
inc
stos
andl
add
dec
movsb
jae
xor
jmp
popf
aas
xor
scas
cltd
lea
mov
dec
scas
mov
nop
xor
and
jo
scas
adc
and
out
rcll
jecxz
and
inc
cmp
and
sub
pusha
rclb
push
and
rcll
add
or
aaa
xchg
mov
push
mov
call
or
jge
mov
cmp
adc
lea
cmpsb
push
mov
int
out
rcll
loop
sbb
test
mov
aam
push
subb
cmp
sub
sbb
push
push
push
sub
jl
repz
movsl
into
mov
mov
pop
or
and
mov
loope
shlb
xchg
sbb
je
shlb
ficoms
in
jne
sub
lret
xor
cltd
ror
loopne
in
pop
xchg
fucomp
imul
mov
mov
mov
cwtl
add
xchg
mov
xor
xchg
adcb
mov
and
pop
fwait
cmp
scas
mov
out
xor
cmpsl
dec
xor
jg
mov
outsb
out
bound
mov
int
loope
mov
fidivs
pushf
roll
lcall
fwait
inc
icebp
add
add
insb
inc
ds
ss
cmp
nop
or
dec
xor
stos
sbb
mov
decb
fldt
jno
int
add
into
pop
daa
outsb
rcll
cltd
cmpsb
xor
mov
out
stos
cmp
test
sbb
pop
popa
mov
lods
lret
lret
sbb
mov
out
lods
shlb
stos
imul
and
leave
jb
sub
cmp
leave
mov
andl
sbb
inc
aam
xchg
mov
fucomp
sub
inc
mov
outsb
or
mov
mov
dec
and
gs
mov
ja
loope
or
push
adc
sarb
icebp
out
push
loop
ljmp
cli
inc
js
push
xlat
jl
push
insb
pusha
xchg
out
push
stc
in
jge
pop
jns
jnp
fnsave
pop
lods
les
add
xchg
push
jnp
shl
nop
aad
icebp
add
or
daa
lret
cmp
subb
mov
and
outsl
jae
and
arpl
rol
cmpsb
movsl
repnz
sbb
sahf
inc
sub
ss
mov
add
enter
sbb
pop
add
add
repz
aam
lock
ss
scas
sub
xor
repnz
jp
pop
outsb
aad
push
popf
fsubrl
and
fidivl
add
cmpsl
mov
sbb
xlat
ljmp
fwait
mov
aad
mul
idivb
es
xorl
mov
jl
leave
cmpb
add
lcall
mov
xchg
jl
ret
sbb
ror
pop
xor
mov
mov
fstl
cmpsb
loop
mov
imul
gs
or
adc
imul
clc
or
fs
arpl
mov
notb
add
adc
xchg
cmp
sub
push
in
jne
ss
add
sub
dec
xor
or
fcoml
ja
sub
sti
cmpb
stos
dec
in
push
inc
pop
loop
xor
stos
mov
das
fdivr
xor
scas
arpl
mov
xchg
and
cmp
aas
lcall
mov
pushf
push
xchg
insb
push
into
jmp
mov
cmpl
in
cmpsb
mov
xlat
dec
js
cltd
int
xchg
xchg
test
loopne
out
icebp
sahf
outsl
in
fcmovnb
mov
sahf
test
sbb
add
cmp
xor
dec
mov
xchg
sub
jg
lcall
add
ja
jmp
jnp
stos
clc
xor
cwtl
aam
mov
lret
pop
imul
aas
adc
and
sub
jnp
cltd
mov
lods
dec
adc
sbb
mov
bound
pop
filds
insl
or
in
bound
in
sub
mov
inc
or
xchg
in
cmpsl
stos
les
inc
add
xchg
push
mov
pop
lret
xchg
icebp
insl
mov
sub
sbb
insl
decb
sbb
pavgb
pushf
pop
movsl
scas
test
aas
dec
in
in
add
sbb
pop
les
es
loope
mov
pop
mov
insl
lret
sti
shlb
dec
push
jbe
lahf
mov
rcr
and
push
or
lea
icebp
movsb
insb
lea
and
nop
fldcw
jl
inc
push
xor
sahf
dec
xor
mov
in
xor
stos
cwtl
call
aaa
outsb
add
jo
hlt
inc
popf
or
adc
push
scas
pop
fldenv
add
sahf
and
add
adc
pop
pop
and
push
cmc
pusha
mov
repnz
and
dec
add
les
clc
xor
inc
imul
fldcw
fdivrl
mov
sub
xchg
adcb
inc
int3
dec
cmc
jae
pushf
xchg
push
fstpt
mov
or
jecxz
jmp
mov
sub
adc
lea
mov
adc
movsl
test
fsubrl
cltd
sbb
call
shll
mov
xlat
mov
stos
fs
into
imul
popf
lds
mov
movsl
push
or
loope
roll
insl
pop
ret
loopne
lods
inc
repnz
lea
arpl
js
jo
arpl
dec
push
jae
dec
cmpsb
stos
xor
in
xchg
stos
mov
dec
je
jle
mov
xchg
call
and
ret
push
sbb
pusha
pop
push
pop
pop
scas
adc
mov
sub
push
dec
popl
dec
mov
jae
inc
dec
repnz
jb
dec
pop
test
push
adc
scas
std
sub
das
lea
sub
lcall
xor
or
mov
outsb
movsb
dec
cmp
pop
dec
stc
sbb
loopne
push
test
cmc
mov
sbb
xor
jmp
fld
scas
cmp
fistl
lret
mov
out
jge
shll
cmp
loopne
cmp
mov
and
mov
mov
or
or
loope
lods
xor
sbb
and
sub
mov
stos
lret
not
jp
sbb
cmpl
push
in
fildll
cmp
pop
dec
mov
dec
inc
imul
cmp
pusha
add
or
test
out
outsl
add
aas
dec
adc
aad
add
fidivrl
sub
inc
jp
fidivrl
jns
lret
inc
pop
ja
jecxz
xchg
scas
leave
sub
push
cmp
and
or
cmc
or
outsb
imul
fs
push
mov
aam
ja
shr
xchg
xchg
lret
ljmp
adc
test
jne
jmp
push
cmp
stc
stc
sub
sbb
aas
mov
pop
jns
adc
inc
cmpsl
lods
xor
sarl
fwait
repz
popa
mov
unpcklps
lods
and
mov
adc
into
int
xchg
pop
dec
dec
repz
aam
mov
inc
je
in
mov
mov
jns
xchg
scas
ja
xchg
div
cmp
lret
push
loopne,pn
inc
sbb
rolb
ret
jecxz
test
xchg
ds
shll
lds
adc
pop
xor
aam
stos
aam
sbb
sbb
sar
mov
mov
mov
out
xchg
push
sub
add
dec
sbb
icebp
dec
enter
or
mov
repnz
push
ret
stos
mov
loopne
xchg
call
lock
sbb
mov
push
sar
lret
add
pop
jno
pop
fsubrs
and
cmova
mov
aas
mov
aaa
std
sub
out
into
jmp
adc
inc
sbb
pop
xchg
or
xchg
pop
sbb
jbe
dec
cmp
jns
stc
jl
and
hlt
sub
outsb
sbb
pop
andl
lods
or
jae
mov
pop
and
in
icebp
sub
rcrb
int3
mov
push
and
push
fisttpl
pop
mov
add
mov
test
pop
out
dec
xor
nop
aam
cmp
jl
jle
xchg
adc
rcrb
xchg
mov
leave
dec
pusha
xchg
data16
dec
out
or
test
int3
and
mov
int
mov
push
jbe
adc
and
adc
fidivs
or
je
cmpsb
aam
jb
lret
imul
pushf
inc
enter
cmpsl
loop
enter
push
pop
xchg
insb
and
inc
mov
or
repz
icebp
sti
sub
ret
outsl
insl
pop
pop
push
inc
out
jns
push
pop
call
sbb
push
ret
in
and
pop
push
rorb
cmp
xor
sbb
je
pop
fnstcw
or
arpl
rorl
outsb
js
leave
push
pusha
insb
jmp
dec
push
aad
pop
mov
cmpsl
sahf
pusha
or
jne
inc
shlb
pop
das
mov
clc
sub
push
inc
adc
and
insb
sub
sub
stc
ljmp
addr16
pushf
lahf
ret
or
lcall
sub
xchg
cmp
icebp
jnp,pt
fistpll
mov
fs
iret
aas
popa
icebp
sub
jecxz
cmpb
rdpmc
cmpsb
les
mov
enter
mov
add
inc
jg
jae
inc
sub
pop
dec
rcr
imul
ror
mov
mov
or
loope
cmpb
dec
pop
dec
push
inc
pop
jl
daa
lea
jp
sbb
in
inc
loop
pop
stos
mov
cltd
outsb
inc
fstps
gs
adc
stc
jecxz
cli
aaa
mov
test
xor
bnd
jbe
jae
mov
sbb
push
sbb
test
xchg
cmp
bound
adc
pop
mov
popf
insb
xchg
jmp
hlt
mov
or
outsl
mov
aad
in
or
leave
and
xor
dec
xor
loope
pop
fstpt
out
dec
push
rcrl
popf
lods
mov
xchg
cwtl
mov
nop
out
aaa
xchg
or
mov
insb
addr16
decb
push
loope
mov
add
mov
movsl
xor
lock
adc
inc
repnz
inc
in
cmp
int3
inc
mov
inc
ds
sbb
jnp
out
push
into
mov
mov
adc
mov
pop
pop
and
mov
mov
aaa
movsl
hlt
loope
imul
mov
sub
fimull
cli
js
xchg
popa
lea
add
sarb
inc
jge
scas
pop
mov
cmpsl
pop
out
add
nop
js
inc
out
negl
cmp
sub
push
rcl
or
sub
movsb
loop
jg
lahf
imul
or
scas
or
fiaddl
push
sbb
lret
dec
push
loopne
inc
fists
mov
in
mov
in
dec
jne
jmp
or
cli
pop
idivl
mov
jo
lock
add
test
mov
mov
stc
shrb
int
and
dec
pop
cmpsl
push
inc
scas
push
mov
lods
sub
je
mov
adc
imul
arpl
mov
rclb
adc
das
sbb
push
push
push
mov
ljmp
fs
and
test
jno
imul
test
pop
scas
xlat
lds
jg
mov
cltd
add
push
addr16
fiadds
jp
lcall
xchg
dec
fnsave
sub
jae
sub
inc
push
pop
cmp
push
or
dec
sbb
je
lds
mov
jo
movsb
xchg
fadds
repz
aas
inc
jbe
push
lods
sbb
pop
pop
enter
push
mov
sub
sbb
or
arpl
es
dec
pop
jb
in
xchg
dec
jbe
dec
mov
sbb
jmp
lea
fisttpl
sub
dec
or
xchg
iret
mov
cmp
daa
mov
jns
or
add
jno
imul
out
cmovge
js
jecxz
mov
pop
xchg
out
push
pop
xchg
inc
popl
sti
fiadds
icebp
jae
negl
pop
das
push
into
popf
dec
adcl
std
testl
inc
rcll
inc
aas
neg
inc
fwait
or
mov
sub
pop
cld
js
outsl
mov
dec
lcall
mov
inc
push
inc
leave
push
das
and
aaa
pusha
mov
xor
jb
xchg
subb
cwtl
add
sub
and
test
xor
or
xchg
inc
mov
xorl
xchg
popa
icebp
sub
cmpsl
xchg
push
das
mov
push
fildll
jmp
xchg
jnp
xchg
testb
mov
add
dec
cmp
gs
in
sbb
sub
sub
push
pop
enter
inc
rolb
int
inc
out
movsb
dec
repnz
adc
lods
mov
cs
out
or
mov
or
int
sub
inc
mov
out
adc
adc
dec
mov
sti
xor
adc
inc
jecxz
jne
cmpsl
cmpsl
xchg
xchg
in
lret
pinsrw
add
lods
out
dec
add
scas
mov
imul
and
add
test
test
cmpsb
testb
dec
dec
or
adc
sub
push
jns
fwait
dec
sbb
mov
repnz
repz
adc
pop
les
out
bound
cmc
or
jae
lahf
ret
loope
dec
hlt
roll
xchg
mov
loop
push
lods
mov
stos
pop
mov
pop
shrb
mov
int3
pushf
rsqrtps
insb
mov
pop
dec
repnz
fcoms
sbb
xor
mov
mov
iret
shrb
mov
pop
pop
mov
dec
xchg
subb
movsl
cmp
xor
inc
popf
push
sti
xchg
jns
jmp
aaa
lret
or
js
or
push
loop
mov
and
or
xchg
pushf
mov
jbe
and
mov
in
addr16
jo
jp
mov
dec
jnp
push
jmp
decb
je
rorl
lock
and
repnz
addb
jb
roll
sbb
out
mov
movsb
mov
push
adc
or
nop
out
pop
xchg
pop
imul
sarb
and
lcall
into
stos
jecxz
imul
inc
xor
sub
and
mul
daa
jmp
test
xor
jg
rcr
jo
sub
aas
fwait
or
das
jb
inc
pop
push
add
lock
jns
xchg
mov
mov
ret
or
pop
sbb
dec
nop
inc
inc
push
es
in
lds
sti
lock
push
add
and
push
scas
inc
cli
daa
adc
xor
call
add
mov
sbb
and
cmc
mov
xor
dec
jmp
outsb
xchg
and
push
sub
fistps
xor
dec
jno
insb
jnp
inc
stos
cmpsb
dec
sbb
pushf
jge
jl
arpl
or
fmuls
mov
je
clc
out
dec
sbb
repz
inc
add
in
mov
push
xor
adc
shl
lcall
sbb
movsb
jg
loopne
adc
fcompl
xchg
cwtl
jo
shrl
je
movsb
ss
mov
cmpsl
mov
dec
sbb
or
rcrl
out
dec
mov
scas
mov
mov
pop
mov
lds
lret
in
ds
notl
cmp
pop
rol
decl
cli
in
adc
loope
insl
in
dec
and
mov
mov
jle
faddl
cs
lret
sti
pusha
adc
test
cmp
or
lea
xlat
test
add
xchg
cs
roll
pop
js
sbb
xor
and
movsl
cmp
jle
and
lretw
cmpsl
loopne
mov
aad
jno
pop
test
mov
sbb
or
sub
stos
push
fidivrl
mov
add
cmp
xchg
std
inc
hlt
clc
mov
out
mov
mov
subl
add
sbb
lock
bound
jmp
sub
lods
mov
dec
loopne
mov
push
enter
and
cltd
cs
inc
adc
push
cmp
lret
mov
add
sub
xor
ds
dec
or
lock
insl
enter
push
mov
shl
out
lcall
xchg
mov
push
dec
shrb
inc
jb
mov
jge
mov
adc
fistpll
fldl
adc
dec
push
and
test
repz
sbb
sub
mov
into
dec
adcb
pop
rcr
loop
mov
mov
cmp
je
xchg
jne
sub
add
add
ds
sub
cwtl
test
ljmp
ds
jmp
ss
add
mov
clc
out
bound
mov
test
xlat
jae
xchg
push
jbe
inc
mov
shr
les
push
adc
imul
xor
les
cmp
sbb
bound
dec
mov
int3
pop
fwait
iret
xlat
adc
mov
int3
adc
xchg
cmp
pop
adc
jmp
aaa
sarb
aam
jmp
jg
lock
arpl
inc
pop
in
sahf
pop
sub
xorb
inc
or
dec
jns
pop
test
fdivr
cld
dec
inc
cmp
pop
xchg
imul
adc
pusha
loopne
out
mov
mov
mov
pop
shl
pushf
pop
pop
push
or
jno
js
arpl
lea
sub
inc
aaa
mov
xchg
or
stos
scas
sbb
jmp
ja
in
sbb
jecxz
push
out
jns
stos
push
test
adc
xlat
xchg
out
imul
lcall
cmp
mov
jo
je
into
mov
cmpsl
push
insl
popa
cmp
sti
inc
cmpsb
xchg
fs
mov
push
lods
push
pop
dec
jg
mov
cmp
mov
xchg
push
push
js
mov
nop
fidivrl
in
ret
dec
adc
cmp
mov
push
inc
and
xchg
adc
pop
out
mov
fiaddl
loope
sti
xor
adc
pop
mov
cmc
iret
negb
mov
je
cs
test
jp
divl
xchg
popa
jns
loop
push
sbb
stos
fdivl
out
xchg
sub
lret
ja
or
mov
xchg
push
jmp
sbb
or
inc
sbb
cmpl
popa
in
outsb
push
or
in
cs
out
mov
mov
gs
out
xchg
bound
push
push
sti
mov
jae
cmc
fdivrs
stc
dec
pop
stc
inc
scas
fbstp
jle
sbb
sbb
cmp
mov
cmp
lcall
scas
mov
es
pop
das
dec
jl
fistps
xor
push
and
and
xor
fnstsw
jmp
cmp
and
lahf
out
mov
js
scas
mov
pushl
mov
repnz
push
inc
imul
xchg
mov
in
or
sbbb
jne
ret
lock
pop
xor
ret
jecxz
dec
test
sbb
mov
add
xor
jae
pop
and
xchg
loopne
pusha
scas
add
movsl
xchg
or
xor
push
out
xor
adc
int3
or
and
jns
sbb
xor
negb
sbb
sub
xorb
ret
pop
inc
pop
cwtl
push
lret
arpl
mov
cmpsb
inc
lock
rorb
push
mov
mov
push
mov
movsl
lea
push
out
add
das
mov
out
out
aaa
xchg
jae
push
arpl
mov
push
jmp
cmp
test
rcrb
push
mov
jmp
dec
mov
pop
sbbb
cmp
cmp
lea
inc
cmp
xchg
in
lods
int
sub
out
in
popa
inc
pop
xchg
jo
inc
out
xchg
shll
fstl
cli
mov
jp
adc
adc
xor
insb
or
push
mov
xlat
jbe
sbb
movsb
outsb
cmc
in
cmp
mov
insl
mov
fstps
fcomp
xchg
pop
adc
adc
test
pop
movsb
mov
stc
fwait
pushf
cli
fwait
mov
cltd
lahf
sbb
mov
cmpsl
out
xor
out
movsl
jg
push
push
jl
insl
movd
jecxz
test
out
cmp
add
cli
adc
mov
cltd
ret
into
fsin
mov
jecxz
xor
xor
cmp
inc
outsl
add
sbb
sbb
push
add
jnp
ljmp
mov
pop
mov
pusha
lret
push
dec
pop
test
xchg
push
jb
cs
push
ja
dec
add
test
mov
mov
fwait
push
jne
scas
dec
sahf
mov
rol
dec
jb
outsl
aad
dec
jb
fistps
out
and
dec
sub
jno
ret
in
jbe
arpl
repz
mov
aaa
sbb
jbe
jle
pop
mov
sub
out
loope
mov
push
push
inc
mov
mov
lret
or
jmp
rorb
mov
xor
pop
xchg
cltd
hlt
push
jl
adc
sub
pusha
test
loop
clc
aam
out
jo
add
stos
sarb
xchg
or
imul
cmpsb
dec
mov
mov
clc
pop
sarl
mov
mov
das
inc
test
leave
ficoml
pop
jnp
pushf
fdivrs
in
add
ljmp
pushf
inc
movsl
daa
stos
pop
sti
pop
loopne
xchg
insl
inc
rcrb
jno
dec
imul
test
pop
inc
gs
jae
std
mov
jmp
adc
dec
jbe
test
pop
xchg
int3
pop
sub
cmp
adcb
cmpsb
mov
mov
roll
xor
aaa
push
int3
push
adc
mov
mov
shl
push
mov
loop
add
sub
jge
push
fst
adc
sbb
sub
jbe
aad
inc
daa
sub
sbb
ljmp
sub
add
pop
out
lahf
xor
scas
pop
mov
mov
ficoml
rol
test
adc
popf
sti
lock
xor
adc
es
stc
and
jo
xchg
and
xor
add
fnsave
js
clc
and
or
xchg
mov
int
jle
icebp
imul
jnp
movsb
dec
inc
imul
js
push
or
loope
sbb
aaa
sub
dec
pop
scas
and
xchg
and
add
fs
cmp
testb
inc
fidivrs
cmp
xor
jns
sbb
xor
dec
movsl
mov
xchg
sbb
ss
in
fisubl
or
and
gs
mov
mov
and
mov
lahf
and
mov
fmull
add
mov
mov
cmp
rcr
dec
loopne
add
push
nop
in
ljmp
pop
adc
inc
adc
ret
int
fmuls
cmp
test
pop
jnp
push
ret
push
jg
in
xchg
stos
or
fs
and
mov
nop
dec
jl
dec
in
ds
dec
sahf
sbbb
inc
dec
nop
sbbl
outsb
dec
lods
dec
aam
repnz
dec
sub
lahf
mov
xchg
dec
push
into
cs
mov
push
jge
jno
xchg
cmp
inc
sbb
iret
push
mov
xor
test
insb
stos
xlat
xorb
lods
xchg
pop
cmp
into
mov
adc
ret
or
cwtl
or
push
fstps
push
sahf
lea
sub
fildll
in
push
sbb
mov
xchg
outsb
xchg
aam
in
outsb
imul
imul
or
and
dec
and
xchg
cltd
mov
or
mov
mov
in
inc
popfw
push
jg
mov
sub
pop
loope
fmulp
sub
aas
push
js
push
mov
mov
jnp
xchg
xchg
cmp
xchg
inc
jo
mov
fcomps
mov
call
lret
mov
sub
mov
iret
push
lret
repz
out
dec
dec
sub
inc
push
mov
aas
fidivrl
mov
pop
mov
lahf
mov
mov
das
imul
mov
rcr
mov
mov
fsubrl
pop
in
add
cld
push
mov
dec
mov
mov
jecxz,pt
in
xchg
pop
outsb
xor
aas
dec
push
stc
jnp
mov
cwtl
push
fimuls
ds
inc
cli
push
lret
je
stc
or
cwtl
mov
aad
xchg
sub
imul
mov
inc
pushf
pop
dec
adc
fildl
les
stos
sarb
pop
mulb
and
jecxz
mov
inc
mov
lret
push
pop
outsl
clc
mov
rolb
sub
lock
or
mov
les
adc
pop
mov
add
push
push
sarl
sbb
out
inc
aad
aaa
xchg
mov
and
jmp
or
xor
inc
mov
adc
jmp
test
out
add
push
push
imul
pop
test
mov
sbb
cmp
adc
inc
arpl
xorb
push
inc
and
xchg
adc
out
mov
sbb
lahf
fiadds
dec
into
dec
mov
cwtl
mov
lods
insb
jbe
xor
push
mov
inc
fs
inc
xor
shr
mov
add
pop
pop
out
cli
das
xor
jnp
pop
mov
and
cmp
insb
or
mov
push
loope
adc
pop
cmp
pop
insl
lahf
push
sbb
imul
repnz
fiadds
adc
es
adc
pushf
int3
xchg
outsl
std
sub
shlb
enter
or
popa
clc
lahf
dec
cltd
cmp
daa
mov
inc
insl
mov
lods
xchg
inc
popf
cmp
call
inc
pop
outsb
pop
cmp
aaa
cli
call
mov
imul
ja,pn
rcrl
sub
pusha
or
int
xor
loope
aaa
out
inc
sbb
mov
jns
insl
iret
lcall
cld
movsb
sub
cmp
fbld
popa
cmp
sbb
fnstcw
pop
sub
xor
xor
aad
fnsetpm(287
pop
xlat
enter
sti
sub
arpl
insb
xchg
push
add
dec
js
mov
dec
int3
adc
mov
lods
push
pop
cwtl
sbb
push
sub
inc
out
mov
or
jl
insb
ljmp
sbb
cmc
jns
scas
mov
sbb
mov
ss
mov
mov
ljmp
jg
daa
in
into
adc
mov
mov
sbb
xchg
jg
jmp
pop
sub
icebp
aaa
aam
xchg
cmp
inc
in
pop
mov
mov
hlt
sbb
icebp
dec
ja
clc
xor
add
pop
pushf
repnz
fwait
icebp
subl
cmpsb
loope
les
push
xor
adc
scas
data16
xchg
fs
les
inc
mov
xor
hlt
iret
cmpsb
add
jb
mov
xlat
scas
sub
fwait
push
mov
add
dec
je
adc
mov
push
out
or
insl
xor
push
or
daa
push
jnp
popf
xor
into
mov
loop
mov
stc
mov
and
or
dec
shrb
push
hlt
out
pop
inc
cmpsb
stc
xchg
es
pop
lahf
push
mov
xor
fsts
sbb
je
mov
ss
adcb
iret
loop
sbb
js
lahf
stos
stc
mov
loope
dec
int
out
sbb
ss
jecxz
shl
cmc
jmp
mov
and
rclb
adc
sarl
fwait
mov
sbb
inc
mov
lock
xor
cmc
movsb
ror
mov
cmpsb
xchg
cs
mov
lea
jne
gs
stc
nop
or
daa
push
pop
lods
subl
pop
dec
push
stos
fstps
inc
jmp
shlb
xchg
or
aam
ret
add
xchg
lret
es
pop
jge
add
stos
or
arpl
into
sbb
mov
jmp
dec
mov
movl
int3
adc
xorb
pusha
jno
jo
pusha
mov
enter
push
stc
int3
xor
leave
inc
or
fadds
pop
test
clc
xchg
inc
adc
adc
pop
arpl
popf
sbb
mov
cmp
jno
dec
pusha
outsb
jne
add
mov
shlb
fildl
and
ss
loop
and
ret
jle
scas
in
inc
jns
hlt
lock
adc
jl
in
sub
dec
shlb
mov
cmp
enter
inc
das
notb
test
rcrl
enter
push
popa
lock
inc
imul
mov
mov
cmp
cmpsb
inc
shl
stos
inc
cmp
ss
arpl
add
popa
mov
mov
into
xlat
fistpll
xor
out
stc
lds
in
push
out
xchg
lret
xchg
mov
adc
icebp
ja
mov
out
divl
faddl
or
push
sbb
rcrl
and
cmp
sbb
inc
hlt
cs
mov
fists
out
dec
add
add
xor
xor
and
push
pop
jb
xchg
stc
and
int
add
and
ret
aam
cmp
push
inc
jnp
addb
das
add
cmp
popf
xorb
inc
lea
and
sbb
mov
pop
cli
stos
les
sbb
jne
lcall
pop
cmpsl
lret
inc
jo
mov
mov
in
push
call
in
loope
inc
les
shlb
inc
movsb
mov
push
addb
imul
sbb
loop
cltd
ds
movsb
pusha
loopne
pop
out
rorb
xchg
inc
mulb
icebp
int3
test
mov
int3
pop
roll
mov
into
jne
popa
push
sub
sbb
es
loopne
insl
jmp
test
stos
mov
jbe
subl
jp
add
not
jnp
mov
or
call
test
imull
ret
inc
fdivr
mov
bound
stos
sbb
pop
jo
push
aaa
pop
and
loope
lods
cwtl
dec
inc
scas
int
sti
out
dec
jbe
loope
or
movsb
into
sbb
mov
iret
pushf
add
inc
sub
cmp
xor
lahf
mov
icebp
pop
insb
lods
fsubs
sti
inc
fdivrs
movsl
rcrb
cmp
jg
xchg
dec
xor
jae
orl
pop
bound
xor
jo
jmp
pop
sub
push
cmp
pop
jmp
test
jbe
test
enter
sahf
out
outsl
jno
adc
mov
jno
mov
fadds
dec
inc
int
imul
mov
fisubl
xor
fsubrs
int
mov
mov
jmp
test
insb
out
cmpb
xchg
inc
popf
fsub
int
fistl
xor
cwtl
push
add
cmp
mov
dec
jmp
xorl
out
aas
scas
stos
stos
mov
pop
mov
aas
ds
pop
inc
mov
xor
shll
cmpsl
iret
add
rorl
jo
pop
push
push
inc
and
dec
rcr
or
out
lock
mov
or
or
repnz
addr16
ja
shlb
cmp
or
in
pop
divb
ja
xchg
lods
addb
jmp
jge
push
shll
iret
stc
stos
push
test
mov
mov
jns
adc
jns
jbe
dec
fisubs
stos
enter
fucom
scas
out
in
adc
mov
js
scas
fists
dec
xor
xor
xlat
sbb
je
fisubrs
lahf
test
add
decl
mov
mov
mov
dec
cmp
mov
sub
adc
xor
xchg
cmc
lock
pop
fldenv
lea
insb
sbb
dec
lcall
pop
lock
dec
add
outsb
cltd
test
inc
das
nop
insb
and
add
add
adc
inc
or
mov
incl
mov
dec
mov
inc
pusha
xchg
add
packuswb
sbb
sub
jo
fwait
data16
jne
repz
in
add
mov
stos
inc
repz
imul
lret
push
lock
mov
arpl
lods
sub
xlat
mov
fstl
add
xchg
stos
cmp
leave
cmp
push
dec
adc
or
jecxz
dec
pop
xchg
mov
cmc
sahf
stc
aas
xchg
andb
or
xchg
and
inc
pop
fsubrp
xchg
mov
xorb
jge
jmp
jp
mov
jg
sbb
popf
fwait
add
push
mov
or
mov
mov
mulb
ljmp
out
movsb
xor
cltd
dec
mov
pop
mov
rcrl
and
cmp
xchg
mov
jb
mov
ds
inc
inc
insl
ljmp
les
lret
adc
popa
ss
dec
test
push
out
mov
cmovo
push
sahf
pusha
daa
fidivs
add
jns
xchg
insl
nop
cltd
pop
sti
popf
pop
jbe
add
loop
sbb
sbb
sti
xor
aas
dec
mov
mov
mov
push
jecxz
es
dec
lods
push
in
push
xchg
sbb
shlb
je
test
adc
dec
add
std
dec
xchg
adc
inc
idivb
int3
jns
mov
push
sahf
xchg
and
shll
fwait
adc
mov
push
fxch
mov
and
mov
cmpsb
cs
sbb
loop
addr16
mov
dec
insl
cmp
clc
ret
push
cmp
daa
out
pushf
popf
xchg
fwait
rclb
and
pop
ljmp
sbb
push
mov
lods
ficoms
adc
lcall
mov
fcmovnu
icebp
sbb
sub
xchg
fidivs
clc
adc
or
jno
stc
push
push
xchg
outsl
or
orl
lock
jo
xlat
jge
imul
dec
mov
pop
sub
mov
shl
or
aam
clc
add
xchg
out
xlat
iret
cmpb
push
in
rolb
or
xor
icebp
inc
push
outsb
sahf
add
ret
pop
das
dec
int3
repnz
pop
adc
stos
jno
and
cmp
sbb
repnz
fistps
xchg
popf
lds
push
push
flds
pop
lods
inc
mov
sbb
jg
adc
sti
inc
imul
ljmp
xchg
xchg
aad
and
inc
jo
stos
lds
addb
movsb
cmpsb
into
loope
insb
rcrb
cli
mov
mov
jne
mov
ret
push
sub
adc
push
sub
inc
push
pushf
iret
jo
pusha
icebp
fcomip
cmp
cmp
cli
cwtl
mov
push
jnp
cmpsb
aaa
or
pop
repz
lahf
pop
or
xor
and
jno
jne
or
call
shl
adc
cmp
dec
xchg
jp
push
das
fdivrp
inc
int
or
sub
dec
sarl
or
imul
outsb
xchg
icebp
inc
mov
adc
test
mov
push
dec
pop
iret
jbe
push
mov
aam
in
pop
sbb
sbb
cmp
shlb
cmc
fldl
das
in
cmc
add
cmp
and
or
rcll
sbb
jmp
repz
mov
in
xor
lods
or
xor
ljmp
jp
test
sub
sahf
push
push
or
mov
aaa
out
les
jl
or
adc
mov
and
mov
adc
sub
lea
mov
xchg
xchg
xor
inc
mov
in
inc
outsb
push
push
jmp
mov
pop
adc
mov
pusha
fisubrl
shlb
sub
jo
fildl
out
in
fwait
mov
or
pop
cmc
pop
mov
or
movsl
cmp
sbb
pop
or
add
pop
sarl
pop
pusha
mov
into
jnp
pop
add
pop
jns
cmp
inc
inc
jg
lea
outsl
or
sub
aaa
jbe
in
cltd
orl
insb
pop
js
repnz
mov
les
sbb
mov
or
mov
repnz
popf
dec
push
cld
pop
nop
push
pop
mov
push
mov
and
or
out
and
dec
dec
fistps
mov
sahf
adc
movsb
sbb
pop
movsb
mov
mov
or
xchg
jae
cmp
pushf
jl
pop
mov
sahf
imul
xor
xchg
pop
mov
icebp
mov
or
xchg
mov
lods
setge
lea
jmp
negl
mov
jb
std
add
mov
sbb
pop
popl
fbstp
test
dec
xor
cld
imulb
out
in
adc
test
dec
xchg
popa
dec
stos
call
jo
jecxz
sub
or
shr
repz
mov
ds
sbb
dec
jmp
in
push
adc
adc
pop
aad
fs
add
push
fsubl
jne
mov
sub
sbb
adc
push
aas
xchg
adc
int3
imul
and
cmpsl
cs
clc
loope
jo
and
xchg
das
jne
xchg
mov
data16
sub
scas
jae
jb
xchg
sahf
xor
mov
outsb
push
inc
xchg
xlat
push
push
cmpb
icebp
cmp
cmp
mov
aas
fldl
outsb
push
and
xchg
mov
js
xchg
pop
inc
mov
xchg
add
cmc
push
xor
mov
push
fdivr
or
add
outsl
fnstenv
ss
mov
inc
push
ljmp
and
xor
jae
cltd
dec
aad
or
loope
clc
inc
dec
mov
push
fwait
push
mov
sub
push
xchg
mov
stos
lcall
add
dec
or
int3
fxch
push
repz
mov
mov
and
pop
stc
and
or
jno
stc
mov
jp
xlat
and
pop
cmpsl
jne
daa
add
ds
and
inc
jg
stos
lahf
mov
clc
imul
enter
pop
aam
xor
loope
adc
sub
cmpb
dec
mov
fdivs
adc
in
mov
adc
pop
or
hlt
lahf
push
std
mov
push
lret
push
mov
in
mov
movsl
lods
iret
in
add
pop
sbb
out
cmp
push
jns
das
into
fadds
in
rep
ret
jae
jmp
cmpsl
cwtl
xor
sbb
mov
sbb
lret
bound
dec
mov
jge
aad
adc
lahf
inc
ja
fiadds
pop
adc
sbb
xlat
filds
aas
dec
pop
iret
stos
imul
aad
jle
cli
pop
adcb
out
xchg
repnz
mov
js
es
dec
cmc
pop
adc
lret
mov
jle
sbb
nop
mov
xor
push
fwait
jge
jne
ds
test
mov
in
or
and
mov
jno
cmp
fldcw
cmp
icebp
add
mov
adc
int3
mov
xor
pop
test
mov
push
cwtl
lock
adc
mov
movsb
cmp
imul
repnz
inc
divb
popa
sub
leave
xchg
rcr
inc
add
cld
dec
xchg
push
imul
cwtl
jg
mov
icebp
loopne
sbb
insb
cmp
pop
in
and
cmp
pop
out
ret
mov
xor
xor
push
shr
fsub
loope
inc
out
inc
lcall
inc
mov
dec
mov
je
mov
shlb
imul
fidivrl
fmulp
or
sbb
out
clc
loope
sahf
pop
stos
sarb
push
aaa
mov
dec
sub
sub
imul
arpl
loope
or
push
push
and
mov
pop
mov
pop
jnp
mov
cmp
movsl
jnp
xchg
jp
mov
leave
fadds
test
dec
movsl
sub
test
ja
mov
push
scas
cmp
mov
lcall
jl
sub
dec
sub
inc
scas
or
mov
and
cli
dec
sub
add
in
adc
mov
ret
sbb
jae
enter
push
push
push
gs
adc
dec
add
push
xchg
pusha
mov
aam
mov
in
call
test
or
cltd
dec
jge
xchg
repz
adc
inc
sub
movsl
inc
xchg
sbb
in
add
ds
sarl
imul
mov
fldenv
stos
mov
punpcklbw
or
mov
xor
sub
lods
xor
js
sbb
cmp
pop
pop
shll
lcall
mov
mov
mov
shl
inc
dec
push
push
dec
xchg
out
negb
mov
push
sbb
pop
xchg
adc
dec
adc
xor
call
pop
dec
xchg
adc
ficoml
lds
pop
dec
jno
scas
or
sub
aad
or
movb
dec
shl
jmp
ja
jmp
gs
push
push
int
cmp
incb
shrb
lock
nop
mul
movsl
fwait
dec
sub
cmp
dec
scas
mov
cld
xchg
mov
iret
lods
mov
xor
sarb
adc
popa
fsubs
add
mov
out
cmp
ss
jns
jl
icebp
push
icebp
test
mov
lds
cltd
pop
mov
cli
pop
inc
js
not
movsl
sub
mov
and
jne
cmp
insb
sub
pop
cmp
pop
insb
xchg
sbb
mov
jo
aas
pop
rcr
out
dec
aas
fsubrs
fs
mov
pop
jg
adc
ficoml
testb
jge
xlat
cmp
sub
mov
push
add
pop
xchg
lock
inc
dec
gs
mov
add
shll
call
pop
push
sub
xor
mov
or
ds
cltd
mov
jmp
xchg
push
mov
in
and
sub
adc
mov
cmp
movsl
daa
and
xchg
lret
shrb
gs
cltd
mov
adc
clc
out
je
in
aam
inc
xchg
das
jg
inc
outsb
mov
out
arpl
push
sarl
mov
in
dec
inc
cmp
pop
addl
pop
cmp
jnp
aas
stos
jne
rol
outsb
stc
mov
daa
mov
lcall
imul
add
cmpsl
inc
push
imul
inc
out
xchg
push
mov
mov
or
dec
lcall
push
outsl
pop
xchg
or
rclb
aas
jbe
push
out
stc
sti
fs
mov
inc
push
mov
clc
in
push
xchg
push
xchg
mov
mov
pop
cli
jo
pushf
lea
push
cpuid
fwait
and
mov
fwait
jge
or
fmuls
bound
and
imul
and
push
cld
lods
jne
mov
xchg
xlat
pop
sbb
stos
inc
les
in
adc
fadds
jl
push
mov
div
or
push
stos
and
pusha
sub
andl
ret
pop
sbb
lods
and
lret
mov
sub
stc
int3
daa
dec
ds
lea
mov
sub
mov
mov
repz
push
lret
std
stc
push
or
push
mov
daa
loopne
fidivl
std
frstor
inc
push
mov
pop
adc
or
inc
je
cld
into
sbb
add
dec
inc
movsb
inc
repnz
adc
pop
xchg
sahf
fiaddl
mov
jmp
push
mov
scas
movsl
andl
jae
xor
clc
inc
lock
push
ret
fcom
jne
inc
xchg
jmp
repz
pop
fsubrs
and
xor
imul
test
or
mov
data16
lds
xor
incb
lcall
xchg
push
sub
adc
dec
test
xchg
lock
mov
mov
sub
bound
popf
pop
dec
lea
inc
mov
xchg
or
loopne
lods
mov
in
das
shrl
pop
mov
jns
scas
int3
pusha
xchg
lods
mov
push
mov
add
fbld
add
cmp
test
fldt
int
pop
lret
and
mov
scas
popa
test
int3
mov
mov
mov
or
enter
jbe
sar
xchg
sub
jb
stos
mov
outsb
dec
or
cld
mov
out
inc
insl
xchg
xchg
bsr
sub
jecxz
xchg
mov
pop
dec
cld
js
out
mov
xor
popf
pop
nop
test
mov
mov
popf
inc
nop
mov
or
stos
pop
inc
lods
sub
jns
das
pop
mov
jp
std
loope
mov
mov
pop
and
faddl
xor
ss
push
mov
stos
mov
ret
jae
mov
iret
les
repnz
dec
push
cmp
fisubs
iret
insl
shll
and
push
mov
sub
jne
jae
push
dec
int3
sbbl
clc
push
ret
scas
cmp
pushf
xor
sub
xchg
or
cld
sub
cmpsl
inc
insl
insl
push
iret
mov
cwtl
mov
leave
dec
movsb
mov
ret
sbb
dec
xchg
mov
fildl
and
pop
mov
adc
dec
ror
or
pop
adc
add
adcb
dec
inc
sub
push
inc
jge
cmpsb
mov
and
cmpxchg
in
adc
mov
popa
in
addl
jp
cmp
in
mov
loopne
adc
push
or
xor
inc
cmp
jmp
cmpsb
or
sub
or
cmp
jle
insl
lret
daa
repz
pop
pop
mov
fimuls
and
aad
cwtl
or
sub
out
ja
fisubrs
jmp
xchg
in
push
daa
inc
test
inc
xchg
in
or
dec
mov
fcmovnbe
movsb
out
xchg
pusha
icebp
cld
scas
fildl
mov
gs
adc
daa
mov
adc
jb
sbb
sysenter
adc
sub
nop
jg
test
add
out
dec
mov
inc
mov
add
cmp
adc
dec
push
xchg
out
ss
jmp
xor
cli
push
pop
dec
in
or
imul
xor
popa
inc
negb
loop
xlat
fwait
sbb
jge
fiaddl
arpl
inc
cmp
and
adc
sbb
and
mov
ss
sub
or
rolb
ljmp
xchg
sub
adc
inc
push
push
hlt
inc
sbb
testb
dec
and
jo
fnclex
scas
sub
ret
xlat
inc
xor
pop
push
notl
pop
movsb
and
and
mov
mov
jne,pn
in
mov
inc
jmp
pop
mov
shlb
xchg
and
gs
cmp
arpl
mov
add
xor
loop
sbbl
and
push
orl
xor
push
ficoml
jge
ss
cli
dec
pop
shl
and
mov
ds
or
adc
nop
leave
cmpsb
insl
or
shll
cmp
fstp
push
jae
or
cmpsb
jnp
mov
ss
mov
test
push
addb
pop
jl
jns
dec
fidivs
outsl
xchg
mov
add
adc
xor
xor
call
mov
inc
pop
mov
sub
or
nop
pop
pop
jmp
cmp
cli
inc
ffreep
mov
inc
adc
outsl
add
jns
popf
mov
push
xchg
into
mov
push
mov
das
daa
xor
shll
fadd
and
ja
loopne
jmp
xchg
or
sub
jl
and
jge
in
jb
imul
shrl
jl
xor
jge
and
xor
pop
push
in
ss
xor
out
loope
or
cs
dec
sub
inc
enter
enter
lea
mov
out
and
emms
xchg
jae
adc
outsl
repnz
lcall
adc
sahf
inc
cmp
jae
or
fidivrl
cmp
fidivrl
jns
xor
leave
lret
in
push
inc
push
sbb
push
lcall
mov
call
mov
xchg
cwtl
mov
aad
mov
dec
test
fs
lcall
js
fldenv
push
loop
dec
and
lahf
test
leave
fwait
lock
xchg
pop
pop
test
les
loop
pop
hlt
in
jg
inc
xchg
dec
scas
mov
xor
call
lock
orl
imul
push
mov
das
mov
icebp
fsub
lret
jno
add
sahf
popa
addr16
sbb
popa
repnz
call
pop
arpl
sub
lret
adc
test
outsl
jmp
pop
dec
nop
jnp
fistl
repz
cmp
mov
orb
pop
cmp
lock
pop
out
xchg
jmp
std
sub
jp
add
jnp
imul
repnz
data16
mov
xchg
xor
or
loopne
or
fxch
xlat
sub
ret
push
mov
daa
aam
xor
into
lods
or
sarl
push
and
jns
pop
pop
adc
iret
fwait
int3
in
push
loopne
xor
inc
setno
jne
rol
pop
sbb
leave
cmp
fs
cmp
out
jg,pt
cmp
or
jno
xchg
mov
push
movsl
outsl
or
jle
jp
lock
inc
shll
xchg
mov
push
mov
mov
lods
mov
inc
push
testl
movsl
lret
mov
push
iret
mov
fildl
lret
enter
adc
enter
lock
insl
jmp
int3
test
gs
clc
mov
scas
xor
jg
mov
mov
jmp
movsb
mov
mov
xlat
jecxz
mov
cmpsb
xchg
xchg
push
pop
dec
push
xor
lods
inc
pop
aaa
fldcw
xor
lret
rolb
mov
sub
inc
push
xor
push
call
mov
jmp
pop
inc
xchg
aad
neg
jb
adc
test
sub
sbb
aad
aam
cmp
jbe
stos
inc
inc
xor
xchg
repnz
and
imul
adc
lea
fdivrs
lds
in
iret
xlat
or
inc
sbb
pop
fimuls
dec
ficoms
out
add
enter
or
enter
jne
dec
btl
ja
push
cmp
mov
sarl
mov
dec
jl
jb
sbb
cmpsl
xchg
inc
push
ret
into
fs
lds
cld
push
xor
pop
in
xor
adc
mov
je
or
ret
nop
and
lds
aam
dec
js
or
push
das
and
ss
jge
in
lret
movb
xor
inc
je
cmp
mov
sub
xor
mov
jg
lods
push
subb
jl
xor
mov
repnz
mov
jnp
xlat
inc
loop
jo
adc
and
or
mov
popf
out
inc
or
addr16
popa
mov
addb
loopne
adc
movsl
cwtl
pop
mov
lret
pusha
dec
jns
fistpll
lea
lret
adc
fstpl
daa
test
cmp
fidivrs
lods
sub
pop
in
or
out
test
lcall
stos
pusha
into
jnp
notl
xor
xor
fcmovbe
test
pop
add
sub
pop
sub
aas
rcrl
push
fiadds
test
lock
adc
and
add
mov
movsl
repz
icebp
or
and
sbb
cmp
mov
adc
cli
scas
mov
clc
scas
data16
jp
das
sub
push
fwait
inc
xor
fdivl
cmpsb
jl
push
stc
ss
or
lds
lcall
scas
cmp
insb
push
pushf
xor
int
enter
adc
pop
rcl
adc
pop
pop
mov
dec
lods
imul
and
in
je
xlat
mul
sbb
mov
and
lret
push
ret
or
test
addb
fdivl
or
fidivs
pop
out
inc
dec
dec
xchg
sti
jnp
wrmsr
xchg
cs
mov
mov
adc
cmpsl
or
cmp
sti
xchg
bound
dec
divps
push
das
mov
mov
std
int3
or
and
out
nop
jle
xchg
fcoml
jbe
xchg
test
dec
stos
or
mov
iret
xchg
stc
push
rclb
fs
subb
lods
int
std
push
pop
and
js
push
sbb
ss
dec
stos
popa
dec
call
mov
jo
test
inc
adc
pop
jge
aas
and
pop
adc
aad
push
and
insl
and
subb
sbb
add
sub
insb
add
js
ret
lahf
mov
popa
dec
ucomiss
pop
cli
jno
js
inc
clc
and
cmc
push
filds
in
test
mov
psadbw
mov
push
ja
shr
out
cmpsb
aaa
and
inc
push
call
fnstcw
cmpl
inc
inc
cld
stos
popf
pop
jbe
fs
dec
cmp
mov
shrb
fildl
ficoms
daa
pop
aam
rcl
and
lea
ret
xor
out
ret
ret
jb
cwtl
cltd
aas
push
pop
cld
sub
dec
add
xchg
repz
xchg
dec
rol
cli
shl
adc
inc
mov
cwtl
rclb
adc
jge
mov
cld
inc
sbb
sbb
adcb
push
adc
ret
sbb
add
mov
cld
enter
sti
out
adc
insb
mov
push
ss
andb
adc
imul
add
sub
cld
lcall
cmp
es
roll
dec
add
gs
hlt
cltd
in
jb
testb
jae
xchg
outsl
jp
rorb
insb
enter
mov
shl
pop
xor
xchg
cmpsb
loop
sarb
mov
xor
rclb
cmp
lods
test
mov
xor
inc
jne
inc
out
loope
in
pop
xor
in
sub
movsl
aam
pusha
in
mov
int3
add
lret
stc
mull
dec
movsb
mov
dec
jo
pop
add
push
and
enter
cmp
lock
loope
icebp
rolb
cltd
pop
push
cwtl
out
mov
cmc
shrb
or
dec
fwait
push
aam
cmp
je
inc
pusha
lcall
push
repz
scas
test
and
iret
aaa
orb
or
loopne
nop
or
and
daa
rclb
pop
ljmp
add
push
loope
sahf
push
test
sarl
push
lahf
shrl
cs
jo
insb
fmul
out
xchg
jmp
arpl
mov
cmp
or
xor
les
pop
out
xchg
rcr
lret
xor
sbb
negl
call
jb
pop
out
insb
arpl
js
adc
sbb
xchg
addr16
sti
add
push
adc
cli
jmp
aam
jle
and
cltd
xor
mov
dec
xlat
aaa
icebp
dec
bound
and
mov
stc
mov
andb
cmpsb
push
pop
adc
loope
mov
jmp
lahf
jl
pop
in
stos
sbbl
ret
dec
aas
shrb
xchg
add
sbb
xor
xchg
outsl
sub
add
das
xchg
cmp
fwait
cmp
loope
inc
adc
lds
shr
cmp
outsl
add
xchg
dec
dec
push
je
jnp
in
rolb
mov
in
sub
jbe
shrl
aad
adc
fcoms
insl
xor
xor
leave
sub
flds
out
pusha
push
cmpsl
psrad
pop
cs
test
rorb
xchg
fisubrs
jbe
movsb
dec
jnp
or
xor
into
out
imul
mov
scas
sbb
imul
cwtl
in
ja
sbb
jne
mov
fs
fs
cmp
jmp
ds
jg
fucom
inc
in
out
push
pop
addr16
mov
shll
push
jne
lds
adc
aaa
or
add
sahf
lods
test
cwtl
je
aaa
arpl
pop
les
jbe
pop
jmp
dec
sbb
je
jnp
ja
daa
les
js
pop
stos
ja
int
push
sub
jmp
dec
sbb
call
jmp
bound
aaa
jl
mov
mov
sbb
and
xor
sbb
jmp
add
push
test
cli
and
int
xor
adc
lcall
mov
cmp
jl
and
pusha
cld
jp
insl
cmp
jbe
roll
imul
lret
pop
int3
mov
fildll
outsb
sub
inc
lret
or
pusha
push
fmul
xchg
insb
test
push
or
xor
lock
inc
fstps
jmp
popa
test
lret
fdiv
jle
and
lods
call
fidivrl
push
inc
push
push
test
and
and
cld
test
mov
mov
adc
inc
test
mov
fdivrs
and
adc
mov
inc
push
data16
inc
icebp
lret
mov
addb
bnd
jnp
push
jb
nop
movsl
insb
mov
jmp
mov
mov
mov
mov
dec
xor
mov
call
xor
cld
xor
jnp
pusha
mov
push
push
movsb
push
push
mov
and
aas
sbb
test
test
daa
daa
sub
rclb
sub
ret
mov
and
or
adc
shrw
mov
pop
cld
in
outsb
out
lahf
push
nop
push
insb
sub
or
inc
jo
push
jp
pop
test
inc
dec
inc
mov
cmp
jae
and
inc
xor
and
popf
inc
sbb
mov
xor
xchg
push
in
loope
and
xor
mov
outsb
xor
js
test
xchg
dec
ss
mov
mov
mov
enter
in
std
mov
xor
jecxz
test
push
notl
cmpsl
test
lret
jmp
es
xlat
lahf
push
out
jecxz
popf
popa
jno
in
mov
add
xchg
push
loopne
jle
ljmp
repnz
inc
scas
push
cmp
cmp
push
enter
sti
rcl
sti
xchg
clc
sub
add
test
imul
ret
stos
std
mov
jecxz
call
dec
outsb
mov
mov
push
inc
loope
mov
test
sub
pop
push
shl
les
fstps
sub
ljmp
fcompl
andl
int3
popf
inc
ds
sub
cmp
rolb
rcrb
sbb
xor
movsl
xchg
xor
int
lret
adc
pop
xor
mov
scas
jge
rclb
filds
sbb
mov
scas
dec
xor
adc
pop
mov
cwtl
pop
push
sbb
leave
mov
lods
cmp
push
xchg
push
addl
cmpl
mov
leave
out
xor
rcrb
sub
out
divb
arpl
or
insl
push
push
cmpsb
aam
xchg
pop
in
ret
fstps
es
std
lcall
gs
jae
aad
or
mov
adc
jnp
ret
in
rorl
xor
mov
and
and
imul
iret
sub
xchg
addr16
or
bound
cmp
stos
push
lock
rcrb
imul
pop
cmpsl
mov
pop
sar
push
sbbb
loop
xor
nop
sti
in
jecxz
xorb
test
loope
mov
sbb
mov
push
fistps
outsl
push
dec
xor
xor
push
icebp
int
add
xor
jb
dec
or
stos
pop
pop
jecxz
push
in
fwait
jo
iret
add
inc
xor
push
cmpxchg
ret
arpl
dec
xchg
out
stos
inc
int3
jb
mov
xor
sbb
push
jbe
push
pop
mov
mov
sub
cmp
add
insl
nop
testl
adc
gs
movsl
push
xchg
je
sub
push
jmp
and
cwtl
sbb
fnstsw
les
jb
mov
popf
out
stos
xchg
aas
mov
add
push
out
push
jp
mov
sbb
sbb
rorb
in
mov
jns
call
test
out
fisttpl
jecxz
je
mov
or
ljmp
inc
push
xchg
push
mov
mov
iret
pop
iret
cmp
jge
cmc
dec
cmp
test
cwtl
adc
test
mov
mov
pop
mov
imul
fcmovnu
mov
dec
pop
push
cmp
es
fdivr
lahf
push
in
popa
sub
lcall
sahf
out
js
and
add
adc
push
lret
add
mov
pop
cs
das
lds
mov
movsb
jl
ja
jne
cmp
stos
jge
jl
mov
dec
pop
cltd
mov
int
ljmp
adc
loope
adc
in
pop
ucomiss
jo
xchg
xchg
mov
mov
out
push
ds
test
aad
int3
cmp
xor
cmp
jecxz
stc
and
sbb
xor
jno
out
sarl
jg
scas
jne
jecxz
push
or
cmpsl
ficomps
fadd
xorb
mov
cmc
in
mov
xchg
insb
jbe
sub
insl
frndint
addr16
out
leave
insl
xchg
test
push
mov
test
aas
adc
and
dec
mov
cwtl
leave
sub
es
incl
dec
aaa
lahf
rolb
arpl
fcmovbe
iret
